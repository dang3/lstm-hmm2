mov
and
jno
push
jge,pn
jge
push
fcoms
lret
clc
lds
cmp
xchg
sub
movsb
cmpsl
mov
and
mov
test
cmp
ljmp
mov
mov
xor
sbb
sub
cmp
mov
jb
in
adc
push
jae
pandn
bound
in
jo
arpl
xchg
sbb
jo
repz
mov
xchg
mov
lods
aam
mov
in
leave
icebp
push
pop
jp
rol
aaa
repnz
test
loop
jns
ljmp
lods
lds
push
sbb
xlat
or
iret
divb
mov
movsb
push
push
popa
shlb
rcrb
in
mov
fisubs
mov
pushf
xchg
lcall
lcall
pop
pushf
cmpsl
ss
and
cmp
outsl
jmp
daa
ljmp
ret
add
add
add
add
add
add
add
jmp
add
or
xor
add
add
or
add
je
xor
add
add
or
add
add
addb
add
sub
cmp
add
add
call
js
add
jnp
add
push
and
pop
jg
add
add
add
xor
jae
mov
mov
pop
xchg
add
mov
jl
in
and
test
lcall
fldt
dec
or
jg
jae
rcl
in
mov
sbb
add
inc
cmpsl
test
pop
xor
dec
inc
sbbb
insb
repnz
mov
mov
ss
jl
int3
popf
fnsave
xchg
add
inc
gs
outsl
fs
gs
imul
add
les
add
pushl
lea
je
cmp
pusha
bt
cmp
jmp
ljmp
cltd
pusha
xchg
inc
pop
nop
out
dec
mov
divl
dec
cld
sbb
jecxz
fimull
pop
loop
cmovg
aad
dec
mov
fs
mov
xchg
out
out
int3
add
aam
das
and
clc
dec
adc
xchg
inc
call
push
js
pop
xor
dec
jg
pop
shlb
xchg
leave
jg
aas
ficoms
xchg
dec
int
jae
and
outsb
lea
je
stc
jmp
add
inc
gs
jb
jns
arpl
insb
gs
je
jb
popa
bound
jmp
pop
inc
mov
pop
cs
cmpsb
xchg
sbb
pop
aad
or
sarb
adc
test
cltd
mov
imul
cmpl
jns
push
add
pushf
mov
outsb
cmp
and
mov
sti
subl
ret
pop
adc
mov
roll
inc
adc
push
push
sub
jle
hlt
push
push
push
aad
in
mov
inc
repnz
insl
hlt
sbb
push
add
insl
pop
test
in
into
inc
fcoms
mov
stc
out
lea
je
call
jo
adc
scas
dec
fst
adc
std
mov
xchg
inc
ljmp
fadd
pop
in
jne
dec
es
sbbb
jp
push
loope
sbb
ret
fstpl
fucom
aad
and
dec
mov
xchg
shrl
out
aad
jmp
xor
xchg
inc
mov
and
xchg
mov
sahf
dec
or
jno
fs
je
push
cmp
test
sub
call
lea
call
jmp
sti
jae
push
je
xchg
call
lods
stc
repz
push
daa
in
popa
mov
xor
jl
inc
stc
adc
pusha
mov
jbe
divl
in
outsl
add
es
js
xchg
xchg
shrb
fbstp
inc
adc
lahf
cmp
test
adc
daa
adc
pop
mov
push
js
or
roll
cmc
sbb
sub
out
or
jl
mov
lds
xor
mov
mov
xchg
pop
into
insl
icebp
xor
insl
in
lea
aam
popa
andb
cmpl
shlb
lret
xchg
sahf
mov
mov
shrl
sti
jl
notb
mov
arpl
add
xchg
inc
fs
xchg
jg
jae
dec
mov
and
shlb
lock
jl
jbe
or
insb
popf
repnz
lahf
or
push
pop
test
in
lods
test
cltd
sub
mov
movsl
ja
lods
fidivs
mov
jecxz
jp
lods
popf
insb
mov
movsl
imul
sbb
cmc
jge
inc
lods
daa
clc
cmc
jo
push
stc
dec
cli
mov
call
cmp
ljmp
outsl
jp
jbe
xor
and
lock
lods
mov
or
sti
call
in
imul
cwtl
dec
jl
test
loop
jo
inc
stc
pop
icebp
mov
in
lcall
inc
cltd
bound
mov
stc
sbb
or
jl
leave
xchg
ds
rcl
shll
stc
mov
push
fstpl
cli
je
xchg
pop
and
jb
jl
pop
cwtl
jp
push
insb
pop
lock
xor
push
loope
stc
push
xchg
inc
jno
pop
sub
bound
cmp
lahf
in
cmp
xchg
iret
push
dec
hlt
jo
jb
sub
adc
inc
cmpl
jns
stos
cld
sbb
cwtl
enter
lahf
js
hlt
int
jo
sbb
mov
movsb
fcomip
sbbb
push
jge
jns
push
push
xor
xchg
jl
jns
adcb
pop
fmuls
add
fstpl
mov
mov
mov
call
out
nop
jae
sahf
mov
inc
and
outsl
jbe
mov
cwtl
jbe
out
negl
xor
mov
mov
xor
out
mov
inc
lods
cmpsl
test
or
inc
inc
xor
test
push
mov
fucomp
sbb
mov
rcrb
mov
xchg
loope
ret
cltd
push
into
sub
jne
aam
stc
lds
push
push
cld
pop
mov
jecxz
in
rcl
xchg
gs
rcll
add
sub
or
push
push
shlb
mov
int
loop
iret
sub
insl
je
xchg
movsb
cmp
pop
fs
pushf
cmp
cmc
cmp
cmp
je
jmp
mov
shl
add
lods
fucomp
mov
adc
pop
js
fidivrs
lods
sub
scas
inc
push
xorl
outsb
rorb
insl
and
mov
cwtl
xchg
or
mov
shr
scas
dec
test
adc
testl
outsl
mov
mov
xor
mov
push
push
gs
andb
adc
jp
leave
jmp
and
out
xchg
test
ss
loop
fs
sahf
mull
insl
cld
sahf
test
add
xchg
into
dec
adc
jl
xchg
ss
jne
roll
pusha
in
adc
and
call
mov
icebp
add
mov
popf
cltd
insl
cltd
add
mov
sti
imul
or
scas
add
ja
inc
sub
repz
cwtl
sub
xor
adc
repz
pop
icebp
jl
adc
xchg
push
dec
mov
daa
bound
popf
cmp
adc
in
jae
mov
in
xor
call
sbb
arpl
fbstp
repnz
cwtl
js
out
shr
out
xorb
xor
mulb
adc
jmp
mov
xchg
push
and
ss
in
add
jb
adc
dec
ljmp
cwtl
add
loopne
jnp
xor
inc
mov
ret
gs
inc
and
adc
and
popf
mov
in
jne
pusha
fdivl
das
jl
cltd
je
and
pop
add
xor
mov
dec
push
sub
leave
push
and
clc
cld
and
sbb
mov
fs
cltd
adc
mov
sbb
dec
push
inc
xchg
jg
jnp
mov
xor
push
int3
lret
lahf
imul
or
xor
sbb
cmp
push
jno
dec
push
mov
fdiv
mov
bound
push
repz
cwtl
in
sbb
mov
mul
nop
ss
outsb
stos
xchg
or
repnz
dec
scas
jne
cltd
outsb
dec
xchg
cwtl
push
jbe
mov
xor
xor
mov
fs
or
jno
cmp
in
ss
xor
adc
jmp
mov
push
mulb
xchg
ja
lea
jnp
jne
mov
mov
loop
jnp
or
xor
cmp
int3
mov
or
and
xchg
jg
int3
fdivrs
pmaxub
mov
popf
adc
pop
xor
xchg
adc
dec
xchg
inc
xor
or
cmp
sub
cmc
je
pop
movsl
xchg
dec
cmp
cmp
sahf
and
orl
and
pop
rclb
xchg
inc
dec
sbb
sbb
shr
sbbl
sub
push
jns
loopne
cmpsl
cwtl
pop
push
ja
addr16
scas
xor
xchg
jno
roll
sbb
cmp
xor
mov
inc
jmp
xchg
mov
jno
lock
push
lock
xchg
je
inc
jnp
in
es
sbb
sti
cmp
pop
js
xchg
idivl
or
cmc
xchg
or
jmp
out
loop
dec
popa
loopew
pop
mov
xor
lcall
icebp
xor
lock
loopne
sub
inc
fdivl
and
cltd
test
repnz
in
xchg
or
adc
inc
into
cmp
push
cltd
rcrb
mov
enter
data16
loope
adc
xor
fisubs
jne
es
push
push
fsubl
shrb
imul
insl
xchg
and
push
aaa
lods
adc
dec
aam
mov
xchg
fisttpll
xchg
or
jne
xchg
xchg
push
and
push
sbb
inc
dec
out
add
dec
pop
jne
sbb
sub
cmc
lods
cmp
mov
mov
imull
sbb
adc
in
in
sbb
je
icebp
jno
push
and
mov
push
aaa
mov
jecxz
cmp
jmp
mov
js
insb
mov
jae
mov
pop
lock
movsl
xchg
mov
jb
mov
push
xor
mov
clc
roll
inc
aaa
cwtl
loop
lods
mov
mov
mov
adc
jecxz
xchg
xor
jl
mov
outsl
add
sahf
push
inc
push
imul
push
icebp
push
jnp
sub
movsl
out
xchg
lods
mov
outsb
sub
jnp
sahf
xchg
neg
inc
inc
push
repz
push
dec
xchg
cmp
sbb
imul
mov
es
xchg
push
sbb
xchg
cmp
ret
mov
cwtl
cmpsb
sbb
and
cmc
cmc
insb
outsb
mov
outsb
pop
test
and
in
push
outsb
pop
push
cs
pop
xor
fcomps
sti
push
shll
mov
cwtl
pop
xor
adc
pop
or
mov
xor
cmp
mov
lcall
push
inc
idivl
mov
push
stos
sbb
addb
movsb
pusha
aas
cwtl
cld
js
xor
sbb
or
xchg
test
js
in
cmp
push
clc
js
inc
data16
dec
push
rcll
pusha
in
xor
test
pusha
dec
fwait
inc
xor
xchg
call
js
sbb
xor
mov
xchg
idivb
hlt
hlt
pop
ret
clc
sbb
lea
repnz
inc
js
lret
adc
jl,pn
xor
jne
js
addr16
lock
cld
hlt
rclb
js
xchg
pop
pushf
sahf
popa
jl
xor
cmp
jne
js
pop
fcoms
cmp
xor
pop
pop
cmp
dec
mov
in
push
mov
adc
dec
in
xor
and
loopne
cs
sbb
cmp
lock
push
rolb
xor
push
inc
pop
push
lock
xor
and
les
pop
out
ds
enter
clc
cwtl
cmp
xchg
pop
cld
inc
pop
push
xor
mov
int3
daa
push
daa
add
add
lods
or
lahf
pusha
mov
push
jo
js
enter
shlb
call
pop
mov
jl
dec
push
mov
lock
push
out
test
push
clc
pusha
xor
inc
push
cld
push
lock
add
cmp
pusha
lock
inc
xchg
cmp
ficomps
adc
push
mov
push
add
and
je
cmp
cld
xchg
into
cmp
clc
hlt
ljmp
mov
and
xor
test
movsb
and
inc
lock
les
jmp
les
push
adc
and
sbb
test
mov
je
cwtl
xlat
add
adc
movsb
pop
xchg
inc
pop
adc
hlt
in
adc
lock
push
movsb
push
mov
adc
fs
xchg
push
in
sti
dec
js
xor
xchg
sbb
lock
dec
cmp
insb
aas
jp
adc
femms
cmp
enter
xorb
stos
push
push
mov
push
sub
adc
wbinvd
movsb
lds
push
outsb
pop
mov
push
sub
hlt
sahf
fs
pop
pusha
insl
fistpl
jl
popf
lcall
and
icebp
pop
shrl
jle
pop
mov
sti
dec
insl
cmpsl
scas
mov
cmp
loop
jge
lahf
les
mov
js
push
fsts
cwtl
push
pop
sbb
fs
lahf
or
jne
xchg
ret
jo,pn
in
outsl
sbb
xor
test
pop
je
in
jae
adc
aam
jb
insb
enter
jmp
pop
je
dec
sbb
xchg
movsl
and
push
hlt
jb
jb
sub
xor
xor
lds
push
in
es
shll
push
in
sbb
and
notl
adc
mov
xor
pop
and
lods
xorl
mov
jno
lock
loopne
mov
daa
jge
xchg
and
inc
xchg
out
loopne
dec
mov
jo
xchg
jno
mov
jo
idivb
je
cmp
insb
movsl
aaa
out
sahf
jl
mov
xchg
jbe
filds
inc
sbb
in
cs
sub
jecxz
mov
jg
lock
mov
les
mov
cwtl
sahf
xlat
dec
clc
insb
and
pop
sub
inc
push
cmpsl
push
bound
sbb
bound
cmp
sbb
add
add
std
add
mov
pusha
fsubs
push
or
pop
ljmp
sub
in
push
mov
mov
lcall
xor
inc
rolb
daa
push
jecxz
jl
inc
adc
cld
dec
mov
adcb
sbbb
lods
push
mov
out
mov
repz
mov
cwtl
xor
jne
call
add
ljmp
adc
loopne
mov
push
xchg
mov
jge
scas
mov
in
xchg
xor
push
test
scas
je
mov
cwtl
push
mov
and
mov
mov
sub
push
sub
int3
xchg
in
test
mov
aam
push
sbb
push
jg
stos
aam
cwtl
enter
cmp
jne
out
test
pop
sub
pop
fnstenv
mov
mov
stos
inc
cmp
clc
adc
sub
stos
push
sahf
lret
and
ljmp
mov
roll
pop
aam
lahf
aas
xlat
cld
imul
clc
out
sub
das
push
ret
bound
add
js
cld
push
inc
sub
pop
xchg
fwait
adc
pop
add
clc
xor
sub
jne
fstps
sbb
inc
and
jl
xchg
inc
cmp
push
test
mov
lcall
jmp
cmp
test
cmp
cwtl
push
push
les
xor
test
mov
jae
sarl
in
movsb
sarb
xor
xor
enter
jle
scas
aas
add
repnz
addl
xor
bnd
bound
jb
rcrb
adc
ror
roll
in
mov
sub
aad
jnp
adc
xchg
mov
ljmp
js
ljmp
nop
ret
mov
not
arpl
xorb
lock
sbb
jmp
outsl
mov
in
scas
rorl
mov
lahf
lods
sti
fs
mov
iret
mov
jge
inc
push
xor
mov
in
mov
adc
ja
test
cmp
push
je
int
lock
fildll
aad
sbb
shrl
in
mov
cld
push
push
sbb
xchg
mov
test
subl
stc
insl
cli
cmpsl
mov
or
scas
jle
cmp
hlt
subl
push
xlat
mov
out
mov
mov
fistpll
ja
leave
lea
mov
lret
out
in
in
sub
xchg
das
xor
xor
stos
cmp
pop
mov
jecxz
push
cwtl
scas
xchg
in
cmp
in
out
adc
push
adc
sahf
arpl
mov
aaa
mov
outsb
mov
inc
test
in
test
jl
mov
cmp
mov
push
xchg
sub
push
pushf
hlt
shll
cmpl
cltd
loope
sti
push
xor
stc
call
cmc
aam
icebp
lods
push
mov
repz
insl
cli
mov
xor
jb
add
xor
xlat
xchg
subb
adc
pop
dec
int3
gs
pop
cmp
xorb
sahf
movsl
lcall
daa
sbbl
pop
pop
mov
lods
mov
fs
in
push
imul
in
inc
push
adc
ret
dec
push
or
into
adc
mov
je
cltd
mov
test
xchg
jp
mov
inc
sub
arpl
jae
shr
cmpsl
test
jg
mov
mov
sbb
daa
loopne
sub
adc
fstpl
jne
mov
out
sbbb
cs
int
push
test
fbstp
imul
mov
cmpsl
mov
cmp
mov
sbb
xor
sbbl
xchg
imul
cwtl
pushw
and
outsl
mov
mov
test
adc
outsb
js
xchg
imul
mov
in
je
add
xor
dec
fdivrl
cmp
lock
insl
sbb
push
add
mov
mov
adcb
imul
in
aas
cmp
sti
clc
jbe
outsb
stc
lret
sub
outsb
fisttpll
xor
cmp
sub
aam
jae
mov
push
mov
push
sbb
xlat
push
dec
xchg
pop
mov
inc
xchg
in
add
daa
inc
and
scas
cmpsb
mov
pop
movb
jb
cwtl
xor
inc
or
loop
and
cmp
sbb
stos
cmp
enter
xchg
sub
mov
inc
loopne
insl
fistpl
mov
jnp
sbb
icebp
pop
and
cwtl
adc
pop
movsb
shrb
push
cmp
repnz
sbb
into
xor
cmp
sub
cld
inc
pop
cmp
push
xchg
fildl
fs
ror
arpl
jl
scas
subb
stc
add
push
cwtl
loopne
jp
lds
lcall
cmp
fnsave
out
popf
lock
out
pop
cmpsb
insl
loope
cmpsb
inc
dec
mov
faddl
inc
mov
mov
addr16
pusha
pop
movsl
mov
je
ret
jno
lock
in
lods
jl
and
idivl
lahf
mov
out
adc
lahf
cmc
mov
or
out
mov
les
jne
xor
adc
ds
stos
push
pop
sbb
push
lock
adc
dec
push
pop
cmp
ds
pushf
rorl
gs
inc
int
pop
bound
and
jmp
movsb
iret
xlat
call
movsl
pushf
mov
arpl
mov
ljmp
inc
aad
mov
in
sbb
sbb
mov
dec
arpl
and
test
insl
dec
mov
push
cmp
sbb
sbb
lahf
insb
mov
push
scas
lock
xor
push
stc
jne
xor
call
popf
add
xorb
cwtl
jp
cli
call
mov
jne
jge
push
in
or
jecxz
in
mov
pop
in
adc
hlt
lea
jb
and
xor
push
cmp
xchg
xchg
std
jl
sbb
test
loopne
testl
mov
in
mov
mov
mov
xor
pop
fistpll
adc
test
fs
and
inc
and
stos
sub
popf
cld
js
clc
les
sub
imul
mov
int
adc
sbb
out
out
sub
mov
xchg
outsb
aam
pop
pop
shll
js
sahf
nop
xchg
subl
in
lcall
add
jno
sahf
js
mov
xor
fsubrs
xchg
cmp
sub
int
ror
sti
icebp
mov
dec
adc
in
and
jno
fcmovu
ret
xchg
adc
ss
mov
pop
scas
pop
les
mov
mov
cwtl
enter
ljmp
aaa
xorb
fwait
sbb
xchg
fisubs
jno
mov
sahf
or
jne
mov
jno
lods
cwtl
cltd
dec
or
fbld
fidivs
pop
mov
dec
pushf
enter
cmc
and
repnz
fdivrs
cmp
clc
repz
inc
into
mov
fs
jecxz
cmpsb
insb
leave
test
dec
push
ss
sub
lods
mov
add
pop
icebp
lock
mov
mov
loop
aam
iret
in
dec
lret
je,pn
xchg
js
or
jge
jge
bound
xchg
pop
sub
inc
jle
sbb
stos
bound
rcll
in
inc
mov
mov
add
loopne
out
dec
mov
div
mulb
xchg
or
pop
dec
stos
inc
dec
pop
xrelease
sub
je
in
dec
push
xor
mov
mov
mov
and
and
jmp
sub
dec
in
sub
fdivrl
mov
insb
icebp
aam
sbb
pop
movsb
mov
xor
mov
fstpt
dec
mov
xor
arpl
adc
dec
mov
xorb
in
jo
insb
int3
pop
mov
dec
pmaddwd
int3
lock
insl
mov
loope
xor
cld
scas
in
pop
mov
and
xchg
xchg
es
lods
sti
je
xchg
pop
pop
daa
aaa
je
cwtl
scas
mov
sub
call
fyl2x
jg
mov
jp
push
cmp
and
mov
aaa
in
icebp
scas
jo
je
in
mov
xchg
push
or
cld
pop
push
or
stc
sbb
in
clc
pop
das
sub
or
sti
mov
pop
xor
dec
mov
cwtl
mov
or
int
cmp
sbb
enter
hlt
scas
cwtl
sub
ret
test
mov
js
call
mov
test
xchg
inc
cs
repz
mov
xchg
mov
enter
xchg
dec
mov
adc
in
cmp
or
aas
in
mov
xchg
inc
lds
loop
add
inc
or
mov
jno
rol
xor
add
inc
dec
cmp
test
int3
mov
and
push
mov
jg
xor
jbe
mov
jg
xchg
xchg
in
lock
adc
cld
mov
lods
mov
mov
gs
inc
insb
sbb
jnp
mov
jne
lock
stos
leave
jns
mov
in
lret
dec
imul
sahf
test
cltd
xchg
mov
xlat
insl
stos
cwtl
and
jle
jbe
into
mov
test
mov
jae
jp
mov
outsb
sbb
mov
inc
push
adc
pusha
mov
cwtl
lret
fs
lds
lea
cs
shll
xchg
cmp
sbb
scas
in
cwtl
les
leave
filds
mov
xor
pop
add
or
mov
sub
dec
ja
inc
sub
xchg
imul
pushf
jp
fisttpl
mov
lea
mov
inc
bound
dec
rorb
pushf
push
das
test
adc
pop
shr
xchg
pop
push
push
push
mov
arpl
lcall
ljmp
ljmp
loopne
jno
inc
pop
mov
adc
ss
jae
or
fwait
push
lea
ja
call
jmp
mov
and
inc
fistpll
mov
je
adc
pusha
xor
mov
mov
inc
or
add
xchg
aad
or
int
fstl
add
jno
out
pop
lds
or
rcll
xchg
dec
add
lret
add
and
movsb
lret
xor
adc
test
nop
in
cmp
add
jb
lods
lcall
pop
mov
les
stos
shll
test
ljmp
dec
jge
jecxz
popf
xchg
insb
mov
sbb
xor
data16
sbb
cmc
push
add
mov
push
sbb
add
fs
jae
push
mov
btr
mov
ror
shr
movsbl
movzbl
mov
jmp
or
mov
jg
push
mov
cli
mov
pop
xchg
xor
sbb
ret
sti
ss
mov
int
lds
fs
das
lods
imul
jbe
out
dec
and
lcall
sub
fsubl
xor
dec
inc
clc
stc
jg
fnstenv
pop
sbb
mov
inc
aas
or
lret
fisubl
sti
jle
outsb
dec
mov
push
push
or
add
ja
sub
adc
pushf
jecxz
ljmp
push
push
pop
jmp
in
dec
cs
sbb
sub
call
out
mov
aad
pusha
pop
jmp
lahf
outsb
mov
push
fadd
test
jl
nop
and
in
xchg
test
push
cmpsl
inc
sbb
dec
push
lods
rolb
int3
push
push
nop
cmpsl
in
jecxz
ret
or
cmpb
scas
pop
faddl
mov
mov
adc
incb
scas
xchg
pop
add
shrl
jae
mov
pop
inc
dec
cmp
hlt
push
jne
add
mov
cmp
sbb
inc
imul
add
ja
das
mov
add
rolb
add
out
add
adc
out
push
pushf
inc
pop
add
xlat
ljmp
dec
cmp
xchg
mov
adc
shrb
icebp
jne
adc
test
jae
adc
jecxz
cmp
pop
fidivrs
pop
or
sbb
and
add
pusha
pushl
lea
jmp
adcb
mov
cld
mov
hlt
cld
mov
add
hlt
les
cwtl
mov
nop
mov
lods
pushf
mov
mov
mov
test
lods
call
xor
mov
jmp
xorb
inc
mov
pop
clc
jno
dec
loope
inc
sbb
fwait
cli
jnp
sbb
adc
gs
cltd
dec
inc
or
pushf
aas
cmp
scas
pushl
nop
pop
sub
call
jmp
outsl
cmpsb
mov
loope
ja
xor
lods
push
clc
mov
ficoms
dec
sbb
xchg
cmp
dec
shlb
lret
jnp
loope
in
ja
dec
aam
xchg
inc
or
and
incl
clc
xchg
jmp
inc
clc
out
dec
dec
xchg
pop
ss
clc
push
pop
adc
pop
data16
movsb
insb
sbb
jg
jmp
inc
lcall
push
hlt
stos
dec
mov
hlt
stos
pop
ss
aas
pop
xchg
in
daa
mov
xor
push
addr16
xor
in
or
fisubs
or
cmpsl
test
and
mov
outsl
lock
add
mov
jp
ja
cwtl
fistps
aaa
lods
cmp
push
pop
jmp
lods
aaa
sub
sbb
pop
lret
jo
pop
sahf
jl
repz
adc
scas
stos
mov
insl
cmc
mov
adc
fcmovu
xchg
xor
imul
xchg
mov
iret
push
jns
inc
xor
and
mov
or
in
pushf
pushf
lea
jne
pushf
pusha
pushf
lea
call
pusha
lea
jmp
lea
jne
pusha
pushfw
popw
ror
or
shl
seto
mov
jmp
bt
cmc
sub
jmp
jb
jne
add
push
xchg
lds
loop
lods
pop
add
dec
sahf
in
repnz
lods
mov
xchg
push
popf
xchg
push
mov
mov
push
xchg
out
fldl
sbb
push
call
in
aad
les
mov
idivb
cmpsl
sub
xor
aad
push
shrb
subl
out
sbb
jmp
std
inc
ret
loope
push
mov
mov
sub
xchg
mov
mov
xchg
bound
pop
mov
add
cmc
or
out
cmpsb
mov
cmp
fs
lcall
lahf
rolb
stos
ret
push
flds
lods
pop
jo
flds
sbb
rcrb
adcl
push
xlat
mov
inc
jge
mov
aam
popf
mov
mov
cmpsl
or
gs
cmc
repnz
call
movl
push
mov
pushf
pushl
mov
pusha
pushl
ret
shl
into
inc
cwtl
lods
mov
sub
cmp
cmpsb
inc
xor
lcall
jge
inc
adc
mov
push
push
mov
and
scas
adc
adc
cmp
add
andb
lock
sub
dec
jb
sahf
fwait
std
dec
pop
gs
addr16
pop
adc
xchg
push
push
ret
popa
mov
sti
jge
sti
sbb
shr
or
fisubl
cmp
pop
xchg
adc
in
or
adc
adc
or
incl
dec
cmpsb
sbb
mov
mov
clc
popf
adc
sub
mov
and
insl
lock
add
fwait
xor
mov
add
jb
adc
jnp
xor
enter
shll
inc
jmp
cmp
incl
jbe
rclb
or
leave
push
mov
jl
sar
iret
or
jno
int3
sbb
sbb
cltd
fdivs
shll
pop
fwait
pop
jl
call
fdivr
dec
insl
fwait
push
mov
sbb
xor
aaa
push
lock
xchg
mov
stos
jp
out
loope
and
js
inc
dec
lods
incl
mov
int3
rclb
out
mov
dec
leave
dec
cmp
xchg
loopne
in
mov
push
aad
add
aad
inc
mov
test
aaa
sbb
ret
mov
insl
test
jno
sqrtps
adc
call
mov
out
das
mov
jno
push
sub
mov
or
sub
xlat
ret
fwait
jae
xchg
xor
push
mov
aad
bound
push
or
cmc
test
and
dec
stos
rcrb
sub
mov
cmpsl
mov
das
test
call
jae
sahf
loope
int
jns,pt
push
icebp
add
push
mov
loopne
adc
xchg
fnstsw
sub
jb
add
sbb
mov
inc
or
fdivrs
pusha
call
add
movb
pusha
mov
pushf
lea
jmp
stc
add
push
pushf
lea
jmp
push
call
and
lret
and
arpl
jmp
out
loope
jae
cmp
mov
in
sbb
test
daa
inc
test
ljmp
inc
xbegin
fbld
push
out
movsl
out
fwait
mov
or
jbe
or
mov
inc
out
cmovge
ret
adc
xchg
push
aam
js
repnz
fcomps
or
lea
or
pop
push
xchg
sub
mov
jbe
sbb
out
lahf
icebp
mov
xchg
popa
addb
fsubrl
inc
lock
scas
or
bound
das
mov
ss
fs
gs
bound
fnstsw
fidivs
jecxz
mov
push
pop
insb
addr16
ss
lret
ds
imulb
call
mov
mov
push
mov
jbe
int
inc
push
addr16
jbe
andb
ljmp
add
dec
aad
push
xchg
mov
or
stc
or
fisubl
imul
sub
ja
sbb
pop
jb
cmc
dec
cmpsl
dec
inc
adc
out
pop
pop
jecxz
aam
xchg
xchg
sub
pop
or
add
pop
mov
mov
push
sarl
mov
mov
inc
lret
inc
in
sub
inc
lret
insb
pop
xchg
cmp
sbb
fistpll
sti
in
loope
add
pusha
mov
jge
subb
aas
in
xor
xchg
test
inc
outsb
sub
or
clc
dec
scas
scas
in
insl
mov
cmc
pop
mov
lea
push
es
ret
js
sub
pop
cwtl
mov
ret
repnz
aad
or
cmc
fldl
jne
sub
mov
in
in
cli
cmp
movsb
lret
ss
insb
divl
or
stc
sub
dec
or
lea
shr
clc
mov
ror
sar
not
call
push
lea
jbe
cmc
bsr
pusha
bt
sub
not
shld
bsf
mov
lea
rol
stc
bt
mov
mov
lea
xadd
add
cmp
add
shr
bts
btc
mov
ror
ror
ror
bswap
add
movsbl
mov
mov
jmp
jmp
jno
mov
jmp
cmp
mov
movsb
cmpsl
repnz
popa
ja
jae
dec
arpl
xchg
cmpsl
data16
xor
rolb
mov
mov
pop
pop
push
cld
xor
lds
stos
sub
xchg
sahf
aaa
shll
push
test
push
dec
cld
pop
cmp
addr16
sbb
out
in
movsl
jne
inc
add
inc
gs
pop
call
out
into
cmp
shlb
sarb
adc
xchg
mov
or
xor
mov
fs
je
bt
push
dec
setge
add
bts
movsbl
push
lea
mov
cmp
add
bt
mov
mov
shl
btr
mov
bt
call
mov
lea
jne
push
movb
movw
stos
pusha
movb
mov
pusha
lea
jmp
js
pusha
lea
jae
pushf
call
movb
test
adc
mov
movsbl
mov
neg
shl
bswap
mov
push
stc
cmc
push
xor
cmc
lea
jnp
bt
repnz
pushf
pusha
call
push
jmp
add
dec
outsl
popa
fs
imul
add
mov
and
ficoml
scas
inc
idiv
scas
push
xchg
lahf
or
jbe
out
jecxz
mov
inc
add
incb
inc
mov
sbb
icebp
push
cmp
mov
hlt
jae
add
cli
sbb
sub
xor
sbb
imul
mov
mov
xchg
jle
jp
ret
mov
jl
lods
inc
shl
out
mov
jmp
sbb
xor
pushf
push
lea
jae
push
mov
inc
pushf
setg
inc
pusha
mov
push
pushf
movb
lea
call
jmp
call
int
jno
lods
jmp
jbe
and
stc
pop
outsl
jle
sahf
mov
add
add
cmp
xchg
add
rclb
movsl
cmpsl
and
aas
jmp
push
in
pop
sbb
push
lock
jns
and
sbb
lret
push
inc
mov
jbe
hlt
push
fimuls
sbb
xor
mov
mov
arpl
in
push
or
data16
shld
dec
test
mov
jmp
bt
pusha
pushf
add
jmp
ret
mov
jl
dec
stos
push
xlat
scas
sbb
lock
push
mov
int3
add
cmp
test
xchg
inc
adc
cmp
adc
push
or
in
jno
cltd
shl
xchg
ret
pop
cmp
sub
mov
js
mov
in
xor
push
shlb
ret
add
repnz
mov
jl
out
movsl
into
in
pusha
mov
mov
mov
push
or
stc
jne
lahf
movzbl
movb
call
sub
pushf
cmp
mov
call
pusha
inc
stc
stc
xor
call
pushf
pushf
pushl
adc
pushf
jmp
mov
popa
in
jns
lcall
adc
repnz
or
lret
sbb
mov
push
pushf
test
or
jge
adc
icebp
jmp
add
cltd
mov
lret
mov
xchg
call
sub
xchg
xchg
mov
call
mov
insl
dec
mov
cmp
cmc
clc
jg
addr16
mov
xchg
sbb
xchg
movsl
cmp
fistpl
ret
xor
stos
jnp,pt
imul
adc
or
sub
inc
dec
cmp
cmpsl
mov
lret
mov
lret
jns
das
add
ss
and
ror
pushl
mov
cmc
add
call
lea
call
mov
roll
movsl
sub
xorb
hlt
xor
adc
xchg
xchg
out
scas
in
push
ds
das
mov
repnz
adc
mov
insl
cmp
or
testl
lock
xor
or
inc
daa
sbb
ss
or
mov
jge
dec
in
mov
int
or
iret
or
inc
cmpsl
add
rcrl
cli
stos
or
or
popf
cmp
add
mov
mov
pusha
lea
jmp
lea
jne
and
das
xor
aad
clc
sub
mov
pusha
dec
add
push
inc
sub
mov
stc
test
push
movl
push
pushf
lea
je
cmc
sub
pushf
pushl
jmp
movzbw
shr
shl
mov
stc
pusha
jmp
jmp
jbe
jmp
imul
ja
clc
or
out
sub
sub
and
mov
loopne
ret
popf
pop
xor
orl
add
add
push
xchg
popa
shl
stos
fcoml
sub
mov
scas
pop
push
notb
fisubrl
push
mov
in
js
cwtl
scas
xlat
jmp
mov
dec
shrl
in
dec
rcll
lcall
or
jns
cmp
mov
mov
cmc
and
xor
int3
leave
xchg
int
cld
lock
daa
fistpll
push
inc
xor
data16
iret
out
dec
out
xorb
push
enter
mov
mov
sbb
fs
xor
test
sbb
iret
pusha
adc
icebp
lea
jae
call
add
movb
lea
jmp
shlb
data16
push
jp
out
jae
pushf
sbb
mov
std
xorl
int
ss
and
cmpl
aaa
jg
incl
shlb
aas
sub
sbb
mov
addl
push
shrb
pop
test
add
inc
cli
mov
or
jl
mov
or
jae
cwtl
or
add
testb
jne
pusha
pushl
push
pushf
stos
push
lea
jmp
mov
inc
add
push
aad
lock
das
pop
insl
in
push
and
test
fs
mov
dec
in
das
shlb
jp
sub
add
cmp
or
sbb
lds
hlt
cmpl
push
icebp
iret
ljmp
movsb
and
or
lds
jmp
mov
int3
or
out
or
push
adc
add
not
sub
call
movb
mov
inc
call
adc
fistl
mov
cmp
rolb
sub
mov
mov
xchg
jg
jno
xchg
data16
das
push
push
movsl
repnz
pop
aaa
sbb
lods
cmp
outsb
and
dec
xor
jne
mov
orl
push
addr16
mov
adc
subb
mov
int3
int3
push
dec
mov
imul
jae
adc
sub
cmp
mov
das
jns
add
pop
pushf
dec
ret
shrl
pushf
sbb
inc
sbb
jno
ror
sbb
sbb
je
xor
loopne
dec
xchg
orb
pushf
dec
inc
cmp
out
rcrl
cmc
sbb
mov
orl
iret
ljmp
in
push
inc
dec
lods
adc
addl
rclb
xchg
mov
fistpl
lret
mov
push
pushf
pusha
lea
ja
sar
add
sar
sub
sub
add
bt
neg
mov
mov
shr
push
mov
clc
test
call
fadd
or
jp
les
enter
sub
lock
cmp
pshufw
mov
decl
push
xor
arpl
dec
add
sti
push
jle
fs
movsl
dec
out
jg
mov
and
sbb
add
fcmove
mov
or
add
mov
lret
in
jnp
push
in
jl
push
xlat
jmp
dec
and
cmp
mov
shll
call
push
shll
cmpsb
test
mul
fcoms
mov
and
repz
and
sbbl
add
sbb
call
cmp
ja
shrl
stc
adc
xchg
imul
cmp
inc
sbb
int3
push
push
mov
sbb
icebp
filds
imul
mov
int
xor
adc
or
insl
pop
inc
xchg
out
lret
fsubs
cmc
into
pop
mov
out
into
pop
adc
sbb
lahf
cs
mov
xor
mov
add
cmpsb
mov
jne
je
cmp
cmc
call
cmp
pushf
pushf
lea
jb
jo
test
pusha
cmc
cmp
lea
jp
pusha
pushf
push
lea
jae
xadd
mov
bts
mov
pushf
mov
clc
test
bt
push
xor
jmp
jno
or
out
rcll
fisttpll
cmpsl
adc
in
or
mov
sti
add
add
xor
fcoms
cmp
loopne
sbb
add
out
mov
out
pop
imul
cmpsb
lea
mov
push
loop
or
fisttps
cs
pcmpgtw
mov
cmpsl
outsb
jmp
push
sti
subl
jns
int
cmpsb
mov
inc
aam
dec
mov
ret
fiaddl
movsb
dec
add
push
fistpl
aam
insl
inc
xchg
mov
in
stos
out
or
cmpl
jns
adc
ret
or
fisubrl
mov
dec
ss
in
jg
xchg
movsl
inc
adc
shl
mov
dec
out
pop
in
pop
xor
outsb
clc
mov
leave
xchg
pop
sub
jge
push
test
popf
loope
outsl
or
mov
and
and
popa
pop
mov
fsubr
or
in
shlb
and
add
repnz
rolb
sub
mov
lods
cmp
cmpsb
push
repz
sub
add
jnp
mov
pop
in
call
sarb
adc
jl
pop
test
mov
jge
out
stos
jge
xchg
adc
sub
ljmp
push
mov
cmp
jne
push
rolb
mov
adc
test
push
rcll
mov
jge
sbb
mov
sahf
jmp
add
or
fcmovnbe
push
mov
shrd
push
insl
mov
movsb
push
das
gs
sub
adc
lahf
or
das
pushf
loop
sub
lret
rcr
xor
addr16
inc
lret
or
dec
push
outsl
call
push
mov
and
pushf
add
lods
xchg
cwtl
dec
cmpsl
lret
rcrl
shll
or
lea
jae
bt
pusha
jmp
movb
adc
pushf
pusha
mov
pushf
lea
jmp
jmp
jmp
lea
jae
bt
call
xchg
stc
cmc
adc
add
dec
movsb
lods
or
mov
sarl
xchg
sub
xchg
insl
aaa
and
ja
scas
add
movsb
add
and
int3
sub
mov
sqrtps
lods
das
jl
pop
outsb
pop
fwait
jle
xor
nop
mov
jecxz
pop
out
mov
stc
cwtl
je
jmp
pop
clc
mov
inc
xlat
mov
jmp
out
fistl
ss
dec
int3
dec
mov
les
or
inc
sub
mov
and
aas
xchg
fprem
mov
les
mov
iret
lds
sbb
repz
mov
fists
adc
adc
xchg
sub
xchg
cmp
das
pop
fwait
lock
dec
movb
dec
cltd
hlt
sarl
jno
fsubr
pop
push
jmp
fistpl
xor
int3
sti
push
pop
lds
lcall
rcrb
pop
adc
mov
dec
btc
add
or
bswap
xor
mov
cmp
bt
cmp
pusha
test
jmp
push
pusha
movl
lea
js
pushf
pushf
push
movl
pusha
mov
mov
lea
jmp
lea
je
test
test
jmp
repnz
pusha
push
lea
jne
jmp
mov
lea
jae
stc
clc
push
cmc
add
movb
pushl
pushf
call
mov
call
adc
push
xchg
stc
test
lcall
xor
dec
jnp
neg
sub
cmp
mov
into
loope
xor
in
xchg
mov
xorb
jecxz
mov
sub
lahf
or
push
mov
seta
mov
into
in
ja
sbb
out
leave
adc
into
mov
out
adc
fwait
add
in
mov
jbe
out
jp
int3
rcr
adc
adc
adc
jle
push
fists
and
std
cmp
cmpsl
mov
rcrb
jge
dec
test
cmp
sahf
sub
test
pop
fimuls
aad
arpl
xchg
push
dec
popa
xlat
imul
imul
jns
or
adc
jbe
sbb
jge
sbb
sbb
mov
pcmpeqd
jne
mov
lcall
or
aad
js
out
push
mov
sbb
add
jb
cltd
xchg
mov
je
loop
lods
pop
and
pop
test
cmc
jge
xor
imul
adc
orb
dec
stc
loopne
adc
scas
push
std
fwait
repz
sbb
xchg
mov
mov
test
scas
add
xlat
or
xor
adc
pushf
pusha
movw
xchg
movw
pushf
mov
jmp
mov
in
outsb
cmp
push
add
dec
dec
mov
and
ss
fdivp
sti
jo
ss
mull
mov
and
jmp
gs
in
jp
call
mov
mov
dec
dec
inc
jle
jmp
std
lea
lret
ss
sbb
add
add
daa
mov
pop
test
jnp
adc
scas
lea
mov
aam
cmpsb
aas
cltd
lods
adc
and
push
add
cmp
pop
mov
dec
push
jmp
or
jns
into
lea
ja
mov
inc
mov
fisttps
mov
out
sbb
sub
int
jge
jns
pop
imul
mov
lds
and
repz
test
mov
fcoms
leave
or
cmpsl
rclb
adc
movsb
jge
dec
stos
call
xchg
mov
loopne
repz
inc
mov
mov
jge
divl
out
cmc
or
xor
mov
mov
ljmp
push
push
stc
lea
stc
mov
push
lea
shl
mov
call
movl
pusha
pushf
movl
mov
mov
pushl
mov
pushl
ret
shrd
bswap
mov
call
lahf
flds
subl
xchg
sbb
jmp
sub
cwtl
js
int
je
cli
jg
test
int3
rolb
pop
notb
xor
lods
and
movsl
in
sarl
pop
aaa
mov
jecxz
cmp
cmp
pop
xlat
arpl
pop
mov
into
lds
lock
arpl
push
pop
adc
sub
mov
dec
or
daa
loop
out
push
cltd
push
pop
inc
push
dec
xor
out
add
dec
out
inc
xlat
je
and
xorb
mov
jp
shl
and
fmulp
fisubrs
ds
jno
fisubrl
std
jmp
js
push
jle
sbb
lret
adc
or
daa
pop
stc
scas
and
testb
and
aad
daa
mov
sub
and
mov
je
cmp
in
adc
shll
push
cmp
jp
ss
lds
cmpsl
xchg
aaa
rorl
xchg
inc
dec
sbb
xor
idivb
or
les
push
xor
lods
jae
jne
mov
ret
filds
xchg
jg
lret
pop
stc
mov
jg
mov
mov
mov
jmp
popf
sub
sbb
add
sti
hlt
mov
mov
outsb
mov
lret
push
xchg
rcrl
icebp
mov
pop
sub
fldt
xlat
or
pop
ljmp
cmp
adc
xchg
inc
lea
repz
mov
lods
or
pop
scas
lods
cmc
ljmp
fnstsw
push
test
nop
jb
data16
mov
je
test
imulb
push
roll
xchg
mov
gs
int3
jns
iret
adc
test
stc
jle
mov
mov
xor
scas
in
out
mov
push
fs
in
pop
or
idivb
cmp
mov
sub
out
mov
jg
cs
and
dec
push
loope
icebp
test
inc
pop
jge
in
aas
loopne
lds
push
push
testb
inc
and
stc
xchg
aam
and
mov
mov
int3
fcoms
bts
mov
xor
jmp
push
ret
decl
mov
add
adc
push
mov
jle
and
push
adc
dec
xor
push
sbb
imul
ror
push
iret
push
shl
xchg
dec
push
add
loopne
lcall
mov
out
in
fisubs
dec
pushl
fmull
dec
jo
cmp
cmp
das
in
rorb
cmp
sti
sti
popa
sbb
outsl
lds
nopl
out
test
ror
fadd
mov
int
sti
test
test
flds
cld
xchg
or
sbb
jp
pusha
push
xor
jns
pushf
fbstp
sti
int
adc
lock
sbb
and
test
repz
dec
out
aaa
jmp
add
out
jl
fsubrl
int3
jns
pop
jge
inc
jae
nop
data16
aad
dec
fcompl
jo
lods
test
les
xchg
int
or
add
daa
sbb
add
pusha
push
pushl
pushl
lea
ja
pushf
imul
jmp
not
shl
xor
xchg
lea
jb
setbe
pop
movsbw
not
pusha
call
into
mov
je
popl
pushf
lret
inc
push
mov
push
xchg
cltd
test
fcmovbe
nop
shlb
pushf
push
or
icebp
leave
push
lds
nop
pop
dec
aam
or
mov
sti
divb
sahf
xchg
into
sub
loopne
cmp
pop
js
lret
sub
push
loope
push
pop
aaa
xchg
mov
inc
sbb
mov
ret
xor
or
loopne
add
dec
jle
sahf
sbb
xor
sahf
mov
pop
lcall
push
rcll
sbb
lods
stos
dec
fcoml
into
mov
daa
aas
in
insl
pop
lcall
sub
popa
mov
mov
divl
mov
and
ja
push
not
mov
setae
not
mov
setae
mov
pop
not
pushf
pop
mov
push
mov
movzbw
pusha
movzbw
movsbw
mov
pusha
push
movw
pushl
ret
clc
cmc
pushf
imul
movw
jmp
pusha
pusha
mov
mov
pushf
pushf
pushl
ret
jo
cmp
loopne
jae
outsb
je
jne
mov
lea
insl
xor
jne
dec
or
les
dec
enter
jbe
sbb
call
inc
or
sbb
xlat
add
push
adc
adc
and
call
pop
jns
jbe
shlb
or
fdivl
adc
popa
cltd
js
out
lds
sbb
js
insb
dec
mov
pop
push
iret
rcrb
jno
adc
in
and
jo
insl
js
add
xchg
cmp
jo
dec
jnp
jbe
pop
sub
js
xor
mov
sbb
jl
jb
jno
pusha
dec
js
push
pop
push
imul
pop
pusha
dec
cmp
pop
pop
fs
negb
cld
add
and
in
sti
inc
mov
sub
pop
mov
pop
sbb
cld
adc
shlb
ja
add
or
adc
sarl
push
add
push
jb
pop
adc
or
sub
jge
pop
push
push
jl
insb
jnp
xlat
pop
xchg
mov
incb
add
out
js
test
dec
and
sbb
inc
clc
outsb
arpl
orb
cmp
je
outsb
or
pusha
dec
fwait
js
push
jne
pushf
pop
jb
pop
and
call
push
loopne
cwtl
rorb
jle
popa
insb
cs
insl
outsl
push
ret
mov
pop
push
push
mov
popa
sub
mov
mov
or
push
jp
add
sbb
dec
add
ret
inc
leave
repnz
ds
loop
rorl
push
add
pop
mov
dec
push
mov
inc
pop
sbb
and
call
inc
sub
pop
dec
push
out
add
cs
xor
cmp
push
inc
dec
sbb
icebp
push
and
pop
std
add
mov
add
sbb
pop
aaa
imul
xor
pop
jge
cmc
cmp
add
jb
ror
testl
sub
cli
adc
dec
aas
cmp
or
aas
rorl
dec
sbb
int
sbbl
pop
mov
imul
ret
jo
movl
jae
sahf
adc
insb
mov
lret
jo
arpl
jo
push
ret
cmp
iret
adc
lahf
cmp
rcrl
outsl
jo
mov
adc
cmp
fs
mov
xor
mov
addb
das
dec
popa
mov
js
mov
push
jo
jno
sbb
outsl
mov
rcr
out
jo
shlb
inc
test
xacquire
and
movsb
adc
cmp
fs
test
xor
pop
sbb
push
test
jp
xor
adc
bound
push
es
cmc
inc
cltd
insb
jmp
jo
pop
lret
sub
fwait
sarl
pusha
arpl
sbb
dec
push
jo
lds
popf
imul
mov
lods
std
xchg
enter
movl
fs
int3
dec
mov
adc
xchg
sub
jo
inc
js
adc
in
inc
repnz
faddl
movsb
sti
pop
jo
adc
xor
ds
enter
mov
lods
pop
clc
fs
in
int3
aas
hlt
pop
repz
cmpsl
mov
pop
mov
adc
sti
add
pop
inc
outsl
inc
push
dec
xchg
iret
mov
mov
movsl
outsl
pop
pop
inc
scas
daa
ja
jmp
adc
loope
jo
push
adc
insl
push
mov
lcall
cmp
adc
dec
add
lahf
push
mov
jae
push
and
jle
popa
in
jo
scas
loop
aaa
std
xor
jo
cmc
cmp
lods
inc
lahf
test
sbb
popf
stos
and
pop
cmp
mov
dec
jo
fwait
pop
insl
and
sbb
and
and
inc
add
jo
test
push
mov
jo
adc
rclb
in
jle
incb
push
fwait
jae
sarl
push
inc
int3
xchg
xchg
pop
sahf
cmpsl
in
dec
cmp
les
jae
gs
je
cmpsl
shlb
shrl
call
mov
iret
das
lret
mov
xchg
cmp
insl
or
dec
jp
roll
pushf
jae
mov
insb
test
into
push
xlat
jae
cld
push
mov
je
ljmp
mov
das
hlt
jo
inc
cld
inc
add
rorl
push
jo
push
dec
stos
ret
jo
push
push
pop
mov
cmp
imul
mov
adc
insl
dec
and
lret
cmc
lock
lock
ret
mov
jecxz
add
xchg
xorb
inc
mov
ja
and
aad
mov
addr16
xorl
jno
or
test
call
out
imul
dec
das
andb
out
sbb
push
sub
daa
in
inc
and
popa
jo
loop
es
mov
movsb
sarl
outsb
repz
add
lcall
or
jle
pop
jo
push
lds
aaa
scas
inc
ja
mov
jno
call
out
mov
mov
fbstp
pop
mov
loopne
add
pop
add
ss
sbb
les
lcall
jo
call
mov
xor
and
mov
xchg
dec
iret
push
mov
mov
ret
jo
push
cmp
sub
jo
jae
icebp
aad
xor
ja
shrl
xchg
jo
sbb
jo
mov
or
jmp
jo
push
jp
pop
pop
jb
jo
je
les
xchg
and
sub
cltd
sub
xlat
je
mov
pop
sub
fsubr
lea
ret
jg
jo
rcr
xchg
push
push
cwtl
sub
jmp
pop
fdivp
scas
xor
mov
int
mov
push
jo
fmulp
mov
inc
jo
fadds
mov
fsub
in
dec
jo
jns
data16
jo
pusha
xchg
inc
repnz
and
sub
test
add
in
adc
fdivl
test
or
jae
popf
lods
repnz
loopne
mov
mov
lods
insl
adc
and
je
pop
jg
adc
jbe
xchg
enter
arpl
repnz
jo
adc
xchg
insl
ljmp
fisubrl
int3
mov
cmp
mov
cmp
push
je
in
push
cwtl
mov
dec
lods
jno
scas
inc
mov
mov
sbb
jns
add
jmp
push
dec
mov
adc
sbb
test
xor
outsb
loope
jecxz
mov
mov
or
jae
xor
cltd
frstor
popa
stos
cld
jo
cmp
inc
mov
inc
mov
or
std
fwait
shl
out
push
cli
xchg
out
data16
adc
pop
or
pop
fs
mov
jo
push
xlat
mov
dec
lds
mov
filds
in
xor
fildl
mov
dec
aad
stc
xchg
inc
dec
insb
fdiv
std
divb
sub
inc
jmp
mov
push
jnp
mov
aad
adc
xchg
pop
stc
gs
lock
testl
xchg
je
push
ljmp
adcb
dec
adc
xchg
inc
add
xlat
push
jo
enter
pop
xor
push
adc
mov
icebp
jo
add
jo
mov
cmp
nop
mov
icebp
inc
mov
pusha
jo
mov
cli
iret
and
xorb
jp
cmp
outsb
das
adc
push
clc
shrl
cwtl
movd
xchg
xor
sbb
mov
in
and
push
mov
dec
mov
aas
jo
xchg
jg
mov
add
je
push
cmpsb
sub
lock
push
int
repz
adc
hlt
push
xchg
lods
cmp
addl
mov
fisubrl
in
clc
xor
adc
sub
mov
lock
jo
mov
sub
out
mov
inc
ficoml
shlb
lock
pusha
rcll
lods
jo
int
fstp
jno
mov
push
stos
addr16
jle
flds
and
and
jo
jnp
cltd
xor
add
jne
jo
jb
lods
daa
gs
jo
inc
inc
scas
dec
add
pop
xchg
int3
fistpl
or
sub
jno
dec
xchg
inc
jo
mov
xor
outsl
lcall
imul
cmpsb
outsb
cmp
pop
pop
jo
insl
scas
cwtl
cmp
mov
push
cld
mov
in
je
push
call
xchg
ja
addr16
popa
shr
jb
pop
xlat
sub
xchg
cmp
dec
cld
fildl
out
jo
jge
lods
add
ja
jo
adc
push
mov
push
add
add
lahf
nop
je
bound
imul
cmpb
push
ret
dec
mov
dec
or
pop
les
dec
xchg
dec
adc
xchg
jle
mov
jp
out
xlat
movsb
pop
stc
jo
bswap
cmc
mov
imul
cmpsl
xchg
jno
add
fdivs
xchg
or
ret
xchg
fdivl
outsl
pop
outsb
incl
cld
inc
sbb
dec
movsb
pusha
jo
mov
out
ljmp
andl
in
adc
fs
pop
scas
sub
jmp
adcl
jecxz
xor
adc
xor
cmp
loopne
or
dec
mov
or
push
fsubl
sub
in
sbb
stc
movsl
mov
shll
mov
mov
subl
jo
adcl
sub
mov
mov
and
rorb
aam
xchg
push
sbbl
mov
jmp
mov
dec
cwtl
repnz
xchg
xorl
push
xor
adc
pop
jae
adc
ret
fxch
mov
and
into
add
pop
imul
int
cmp
mov
lea
test
outsb
push
xorb
mov
fcmovb
ja
lcall
xchg
aad
mov
mov
pop
mov
ljmp
inc
xor
mov
inc
cli
test
cmp
shrl
push
xchg
mov
xchg
jo
xchg
enter
ret
out
inc
sbb
cmp
mov
subl
cmp
je
idiv
mov
ja
add
pop
and
mov
lret
cmp
adc
cmp
mov
repz
cmp
rorl
jo
stc
fwait
loop
xor
sti
push
mov
divb
sub
test
sahf
std
jb
cmpsl
xor
shlb
cli
xchg
int3
xchg
mov
sub
mov
add
jns
aaa
jo
ja
flds
in
push
mov
loopne
call
fsubs
add
jo
push
sub
stos
sub
lea
xor
cmp
test
sub
jo
push
enter
int3
insl
inc
negl
jo
jecxz
dec
mov
repnz
std
lds
outsl
lret
insb
pop
je
fs
daa
xchg
sti
or
in
in
enter
mov
jae
mov
xchg
jo
ds
outsl
dec
pop
test
das
ja
filds
mov
fwait
mov
sbb
push
stc
adc
sbbb
xor
scas
ja
insl
inc
js
jg
cmpl
mov
arpl
icebp
adc
jo
xchg
pop
jns
test
push
jo
idivb
push
jo
xchg
mov
outsb
icebp
lcall
clc
sub
pop
je
scas
and
inc
jge
test
mov
dec
xchg
jmp
adc
insb
jo
xor
inc
pop
in
jne
fdiv
cmpsb
nop
es
cwtl
add
lcall
cmpsl
lret
mov
loopne
jae
lock
lock
adc
jo
xchg
inc
mov
xorb
push
adc
xchg
cmp
jno
cwtl
xchg
add
ljmp
fmull
cli
xchg
mov
fdivs
ror
sub
or
jno
mov
jo
in
movsl
iret
dec
cmp
insl
daa
jg
cli
repnz
cmp
jo
cmpsl
adc
rolb
call
xor
adc
dec
pop
push
push
lods
imul
fcompp
sub
add
loopne
movsl
cmp
inc
adcb
and
mov
cli
inc
cmpsl
cmp
subb
lock
out
outsl
xchg
and
rcrl
pop
popa
push
mov
jbe
outsl
insl
jno
sub
les
or
loopne
mov
cs
outsl
fxch
shll
movsl
jno
push
xor
cmp
lock
xor
arpl
dec
je
icebp
jns
imul
xchg
xchg
push
sti
push
push
xchg
add
and
sahf
add
add
push
jbe
adc
out
gs
out
pop
xchg
popf
and
jnp
or
sub
sbb
push
jmp
paddusb
dec
jo
clc
ja
stc
lret
or
or
cmp
xchg
scas
inc
les
fucomip
lock
mov
mov
jo
icebp
hlt
mov
insb
xchg
jo
push
test
cmc
mov
sub
cmp
or
jo
fwait
cld
aas
pop
pop
adc
js
jmp
fisubs
xor
hlt
inc
sub
in
outsb
jl
in
jno
int
hlt
jmp
ret
fstps
out
sbb
pusha
sub
xor
adc
jne
dec
xchg
add
adc
adc
scas
sbb
les
xchg
inc
add
mov
mov
mov
xor
arpl
dec
je
iret
and
popf
push
push
pop
jno
ljmp
jp
adc
dec
fsubrl
push
addr16
cwtl
sub
mov
in
ja
mov
mov
push
xorl
ja
clc
jmp
xchg
pop
cmp
or
daa
sub
push
mov
push
sub
mov
dec
in
push
push
mov
xor
arpl
adc
loopne
pop
scas
pop
nop
pop
push
push
bnd
ljmp
aad
ds
insl
cmpsb
sub
sahf
xor
jecxz
sti
es
insb
scas
xchg
jno
into
jno
mov
jo
adc
cmp
insl
adc
jb
xchg
pushfw
jo
jae
shll
mov
sbb
adc
out
push
jnp
jo
test
cmp
aad
out
test
imul
adc
jae
dec
fstpl
call
aaa
mov
mov
jae
incl
push
fincstp
das
xchg
fists
nop
mov
hlt
fwait
stos
xchg
and
add
push
aad
rcrl
lds
hlt
icebp
fsubrl
xor
movsb
sub
stos
dec
mov
and
adc
ds
popf
adc
clc
sbb
xchg
push
lock
sub
in
daa
adcb
das
push
push
enter
and
cwtl
fisttps
clc
adc
and
test
subl
sti
out
mov
bound
mull
jb
mov
in
js
fisubrl
sub
jmp
gs
or
xorw
lahf
arpl
mov
test
xchg
sbb
psrlw
and
pop
shlb
dec
loopne
jo
test
push
inc
mov
add
stc
pop
or
add
inc
or
adc
sub
stc
mov
fwait
popa
sbb
xchg
ja
test
cmp
push
js
and
ficomps
cmc
dec
popf
icebp
test
mov
jl
pop
rcr
pop
insl
lock
mov
cwtl
pop
sbb
hlt
call
pop
imul
shlb
jo
push
lcall
cwtl
dec
je
jmp
xor
gs
jp
lret
jo
add
sahf
jo
scas
neg
jp
xor
dec
pop
iret
lods
je
popa
int3
jo
std
notl
dec
mov
lock
jle
jge
mov
clc
adcl
cmp
xorb
jo
data16
push
lods
insl
test
xlat
ljmp
jo
int
ds
sahf
rcrl
movsb
sbb
sub
clc
cmp
xchg
dec
cmpsl
aam
idivl
scas
cmp
call
sub
cmc
or
inc
push
mov
das
mov
loope
imul
cmp
fcomi
pop
shrb
sub
insl
test
xchg
mov
add
arpl
sahf
rcl
xchg
inc
inc
ftst
sub
cmc
or
int3
rol
lds
or
subl
mov
jae
mov
test
xor
hlt
insl
mov
orb
insl
imul
out
data16
add
dec
jnp
sbb
mov
jo
imul
mov
fwait
mov
push
adc
dec
add
in
mov
lret
incl
lds
jo
or
aas
jae
sub
jg
xchg
cmpsl
and
cmpsb
mov
sbb
dec
jg
xchg
dec
add
jo
sub
scas
je
js
jae
xchg
fs
aaa
fwait
ja
and
or
int
outsb
fidivl
lods
ret
outsb
inc
mov
fnstcw
es
pop
in
mov
rcll
loop
jo
dec
inc
pop
fildll
mov
sbb
sub
mov
stc
jae
xchg
add
popf
jo
push
pop
fwait
dec
ret
cld
je
sahf
sbb
popf
and
fbstp
sbb
xchg
adc
fcoms
jge
inc
and
rorl
cmpsl
sbb
cli
cltd
mov
jae
popf
cmp
and
push
jne
adc
mov
jmp
xlat
pop
ja
cltd
ss
nop
mov
mov
mov
mov
sbb
icebp
xor
gs
dec
cmpsb
jo
jb
lds
data16
xor
out
repz
dec
dec
loopne
sub
xchg
nop
je
xchg
sbb
push
addb
jo
fisubrl
and
dec
cli
mov
push
adc
fildll
out
mov
outsl
jle
pop
jge
jae
icebp
mov
aas
push
sbb
pop
jo
inc
and
fsts
rorl
sbb
adc
add
jo
add
outsb
xchg
nop
jo
das
fwait
out
xchg
mov
aad
add
outsb
pop
mov
mov
inc
dec
dec
in
repz
js
sub
jp
jbe
dec
rcl
outsb
lea
mov
xchg
std
insb
lret
loop
inc
popa
loopne
dec
loope
lock
sbb
sub
jo
inc
pushw
test
and
jle
pop
shlb
jne
loopne
push
pop
bnd
and
shrb
cli
cmp
xor
dec
cmp
jle
mov
addr16
pushl
or
xchg
test
in
sbb
inc
ss
inc
pop
add
xchg
iret
in
sbb
mov
out
pop
adc
mov
jmp
lock
mov
sarb
jo
xchg
add
arpl
jo
shll
out
ret
mov
pusha
xchg
out
jg
cmp
push
push
stos
jo
mov
mov
mov
insl
into
xchg
lea
add
mov
or
adc
repz
pop
gs
ljmp
sbb
out
sti
cmp
shlb
test
jnp
jmp
mov
nop
sbb
sub
fmulp
jo
out
adc
ja
lret
cwtl
shrb
push
cmp
push
leave
in
jo
xchg
add
popa
arpl
push
insl
pushf
cs
mov
push
not
test
bnd
popl
dec
lea
pop
push
sub
xchg
pop
aad
cmp
dec
rorb
jo
add
dec
mov
lret
sub
xchg
rolb
push
lret
jmp
jbe
out
jo
stc
xchg
jns
lods
jo
int3
mov
stos
jg
jo
imul
jo
sbb
pop
mov
in
sub
fisubrs
dec
cmpsl
sbb
inc
cltd
or
int3
and
int
lock
jmp
pop
ss
out
jo
cwtl
lret
xchg
in
js
outsl
jae
pop
xor
rcrl
inc
sbb
pop
push
push
pop
outsb
add
xchg
mov
push
cmc
test
movsl
in
lcall
xorb
subl
out
fs
mov
sbb
cwtl
lret
clc
pop
mov
xchg
out
push
inc
leave
movsl
xor
out
and
jl
jo
icebp
jge
and
xor
lock
pusha
negl
cmpsl
add
je
lods
loop
ja
cmp
addb
xchg
cmp
jnp
xchg
leave
add
jmp
and
jo
loopne
cmp
jle
scas
pushf
and
cwtl
aam
mov
mov
sub
ja
mov
rcr
imul
add
dec
jo
addb
push
lods
mov
jo
sub
jnp
imul
and
or
or
push
cmpsl
push
jmp
and
sub
stc
ret
push
out
xchg
pop
mov
and
push
mov
sub
negb
sbb
xchg
lds
ret
outsb
mov
inc
lret
in
xchg
push
rcll
sarl
movsl
or
sub
pop
jae
out
orl
and
push
ljmp
jecxz
lcall
jp
data16
daa
dec
jbe
sbb
xchg
jp
jo
cs
outsb
cmp
leave
stos
jo
sub
jns
aam
sbb
xchg
hlt
xchg
mov
push
jo
inc
sti
push
mov
dec
pop
or
mov
clc
push
loopne
and
sbb
or
jo
lods
outsl
mov
jo
repnz
cmp
jo
in
add
fildl
dec
into
outsb
pop
addr16
divb
sbb
mov
jo
ret
mov
loopne
jo
repnz
jecxz
cmp
stos
into
out
pop
lods
int3
js
divb
fs
ss
loop
testl
stos
dec
bnd
xor
das
int3
movsb
jge
xlat
imul
jmp
cmp
lea
scas
daa
push
test
enter
or
inc
pop
mov
stc
nop
imul
out
cmp
xchg
and
out
pop
mov
add
dec
in
in
xor
pop
in
popa
mov
cmp
aaa
cld
adc
or
clc
jo
cmp
dec
push
stc
loopne
jo
fisubrs
ja
push
cs
xchg
in
adc
test
rcr
push
into
mov
adc
xchg
test
jp
push
mov
jo
dec
or
nop
jo
pop
sbbl
inc
fnstsw
sub
out
jo
mov
push
mov
mov
xchg
push
sub
mov
mov
push
data16
or
cmp
sbb
jno
jno
pshufw
mov
mov
jmp
inc
call
fiaddl
bound
jp
and
mov
inc
push
sub
lods
cmp
pop
push
inc
jo
stos
nop
cs
add
dec
pop
bound
addr16
xchg
lods
dec
test
and
out
dec
mov
pop
mov
jo
add
inc
or
jle
je
cmp
out
shlb
test
add
or
jg
popa
lret
fld
adc
sub
mov
jo
in
dec
ret
push
pop
adc
rolb
jo
and
push
pusha
mov
shll
jnp
ja
mov
cltd
lret
push
adc
dec
ret
jo
pushf
jp
mov
jnp
xchg
pop
clc
jo
inc
andb
shlb
stos
outsb
sar
push
je
test
xchg
outsl
shrb
push
cld
fistpl
data16
lret
out
stos
jo
pop
test
pop
pop
mov
data16
das
mov
jge
inc
ja
mov
inc
shlb
pop
and
insl
js
mov
nop
ret
arpl
cli
insl
mov
mov
test
cmp
jle
lock
jno
bound
jg
lret
inc
mov
sub
repz
push
sbbb
or
mov
add
pop
jo
or
call
push
loope
loopne
movsb
inc
jo
lea
add
xorb
inc
les
cmpsb
gs
pop
mov
outsl
xchg
mov
cmpsb
bound
jmp
pop
data16
jnp
loop
stc
jo
lahf
ret
adc
call
arpl
lret
in
xorl
insl
jl
inc
dec
je
stos
sub
cmp
jo
pop
shl
mov
mov
jns
test
mov
sub
xchg
mov
pop
or
aas
pop
mov
sub
arpl
xchg
add
mov
jo
jl
sbb
pop
cmp
add
pop
pop
dec
aam
push
adc
dec
clc
sub
insl
push
lea
cltd
outsb
stos
xor
xchg
out
outsb
xor
adc
cmp
push
out
inc
mov
jmp
mov
push
jo
insb
cmpsb
mov
xchg
aas
xchg
daa
pop
std
and
jo
dec
cmpsb
xchg
sub
fimuls
mov
out
ret
dec
ror
xor
inc
test
adc
or
test
adc
lret
cmc
popf
jo
loopne
in
movsb
int3
les
mov
mov
fwait
mov
dec
pop
jmp
fbld
jmp
or
jle
jo
lret
movsb
test
cs
jle
or
mov
outsb
dec
mov
xchg
add
mov
mov
jge
jae
std
sarb
or
inc
sbb
jo
lods
int3
cmp
jo
pop
sarb
pop
inc
outsb
pop
jge
int
xor
inc
or
sbb
xchg
mov
jp
cmp
mov
scas
adc
std
push
fimull
mov
jo
push
jns
cmp
addr16
adc
inc
decb
ljmp
sub
mov
pop
xchg
aaa
out
mov
pop
or
ficoms
in
fnsave
insl
xorl
fldcw
mov
sbb
je
xor
fs
clc
cmpsl
jl
cs
test
xchg
adcb
lods
stc
jo
jb
nop
in
js
pop
sbb
and
sbb
imul
push
icebp
jo
aam
sub
das
mov
mov
jo
pop
xchg
ret
bound
add
rcll
sub
popa
popf
push
int3
mov
jg
shl
pop
xorb
inc
movsl
insl
dec
jge
sti
dec
stos
out
leave
mov
cld
jo
dec
mov
mov
andl
outsb
adc
ljmp
jo
addr16
push
sub
push
shrb
push
cmp
sub
std
ja
daa
pop
in
and
xchg
push
cmp
sub
sub
mov
test
bound
insl
cmpsb
xchg
ja
push
int3
push
lcall
aad
xor
dec
ja
push
inc
inc
or
push
mov
pusha
jo
out
into
cmc
mov
movsl
outsl
stos
fldt
push
sub
ja
ficompl
xchg
insb
sbb
negb
sub
jno
add
jne
mov
xor
push
repz
adc
xchg
mov
pcmpeqd
imul
ret
mov
movsb
scas
mov
cld
ja
test
and
add
lcall
mov
and
cli
daa
add
ja
bnd
sbb
push
mov
lds
mov
daa
test
inc
mov
cmp
dec
or
fldenv
fstl
push
sub
lods
cmp
int3
cmpsl
shr
pop
jbe
jo
pop
mov
es
ror
push
nop
gs
jmp
xchg
nop
das
insb
hlt
mov
inc
movsb
adc
test
rcrl
ljmp
insb
ss
int3
lock
inc
jbe
cwtl
test
ret
lcall
ret
out
andl
xor
icebp
sbb
jmp
mov
cmp
imul
out
push
or
out
jo
cmp
in
push
daa
js
jp
xor
push
lock
push
call
stos
add
jge
es
dec
pushl
movnti
push
jo
scas
addb
inc
jnp
jne
shlb
push
lret
and
xchg
lock
bound
add
nop
jbe
sub
mov
ret
loop
sub
fs
fucomi
jecxz
fs
lcall
push
xchg
or
pop
xor
sub
inc
mov
jnp
dec
pop
and
hlt
insl
sub
sub
mov
jo
or
out
xor
ja
scas
and
xor
inc
je
fcmovnb
xorb
stos
adc
shlb
xlat
in
jecxz
add
and
fcmovne
in
mov
xchg
lds
pushf
add
push
pop
fsub
stos
bound
pop
les
enter
insb
and
hlt
int3
dec
jo,pn
mov
movsl
js
adc
sti
insl
loopne
push
inc
icebp
adc
out
and
clc
pop
mov
jl
scas
in
stc
orb
xor
pop
pop
mov
cld
and
lods
out
jne
int
je
popf
dec
or
jo
sub
add
sub
sub
jle
test
jo
mov
inc
int
inc
push
jno
pop
aam
mov
mov
lds
nop
add
hlt
and
test
enter
mov
adc
int3
fistpll
out
xchg
dec
fildll
mov
mov
mov
add
or
cmp
mov
jns
and
jo
mov
mov
inc
add
nop
cmp
mov
cwtl
leave
insl
mov
inc
mov
test
lods
jo
xor
jae
leave
insb
cmp
outsb
add
mov
sub
add
std
lret
pop
sbbl
add
and
mov
ljmp
mov
jo
pop
cmpsb
mov
or
loopne
lds
pop
test
mov
fnstenv
or
pop
adc
loop
lcall
outsl
mov
xor
jo
push
scas
int
adc
je
jns
pop
jnp
aad
jne
insb
notb
mov
popf
lcall
cmp
mov
or
sahf
jb
es
jo
pop
sub
into
dec
pshufw
jecxz
ret
out
ja
call
adc
icebp
push
movl
push
add
sbbb
ja
jo
sbb
call
outsl
mov
fistpll
lret
lock
cmc
push
leave
fildl
inc
insb
push
stos
pushf
mov
jnp
testl
mov
jl
adc
xchg
lret
mov
lods
ja
add
cmpl
dec
fidivl
jo
inc
dec
les
lret
into
inc
dec
nop
imul
ret
cmp
cwtl
cmpsb
enter
cmp
cltd
or
insl
sarb
cwtl
cld
add
stos
fidivrs
lret
sbb
test
and
sub
pop
out
mov
enter
stc
je
inc
sbb
scas
test
mov
je
pusha
cwtl
push
dec
pushf
ss
rcrl
adc
push
sbb
and
and
aam
jne
mov
pushf
inc
xor
clc
jp
insl
push
mov
jp
mov
pop
lock
xor
insb
jp
mov
icebp
jo
faddl
mov
pop
sbb
pop
jo
lcall
jo
dec
sub
jo
gs
inc
jo
add
fidivs
jo
sbb
jecxz
cmp
push
and
cltd
sbb
outsb
mov
add
in
movsb
call
dec
ljmp
jae
sarb
bound
outsl
mov
xlat
jmp
cmp
stos
dec
movsb
mov
mov
push
imul
test
aad
lret
and
cmp
rcll
scas
jo
hlt
neg
ret
mov
mov
test
arpl
out
jae
adc
push
fbstp
nop
inc
sub
add
jo
xchg
pop
sbb
mov
test
aaa
xchg
jo
sub
movsb
aas
jns
jo
dec
mov
cmp
mov
jo
cmp
xor
loopne
aaa
and
pop
sbb
ljmp
xchg
lcall
arpl
jno
loopne
inc
or
lcall
adc
dec
push
movlps
mov
daa
add
xchg
loope
mov
mov
xchg
outsb
xchg
mov
insl
imul
mov
jno
je
sbb
pop
jl
dec
clc
insb
in
jno
xchg
out
jae
xchg
inc
bnd
mov
inc
pand
sarb
sbb
pop
or
pushf
cs
repz
aad
cli
sub
push
inc
out
cmpsb
cs
mov
or
mov
arpl
ficompl
mov
cmc
lods
cmp
outsl
shrb
adc
add
ficompl
in
insb
int
outsb
imull
nop
movsl
dec
xor
sbb
mov
leave
cmc
fs
ficoms
lock
test
xchg
and
insb
or
jns
xor
cmp
insl
sbb
inc
jecxz
cs
movsb
push
xchg
jp
repz
sarb
sub
aaa
imul
cmp
sub
xor
mov
xchg
or
push
push
lahf
jnp
in
mov
aam
sbb
out
jo
cmc
cmp
insb
dec
push
jo
adc
into
popf
xor
enter
stos
ja
ja
pop
lods
addb
cwtl
adc
sbb
pop
sbb
adc
xchg
xchg
add
ret
filds
das
mov
mov
aas
ret
mov
fwait
insb
sub
jnp
ss
fdivs
sarb
cwtl
jmp
add
imulb
xor
popa
inc
insb
xchg
call
test
roll
dec
out
cmpsl
daa
subb
mov
xchg
jns
mov
into
pop
add
stc
sub
push
sti
dec
fildll
mov
data16
xor
jp
mov
pop
xchg
in
frstor
lods
loopne
jno
out
jo
and
mov
dec
test
lock
jecxz
jo
mov
jne
jo
mov
add
jno
decb
cmp
adc
cmpb
xchg
ss
ja
scas
push
out
pusha
imul
aas
in
scas
ja
adc
cmp
jne
in
sub
pop
fcomip
ljmp
cmpsb
push
fstpl
adc
stos
sbbl
pop
sub
test
xchg
pop
push
enter
in
cmp
insb
dec
pop
aas
pusha
xchg
mov
mov
cmpsl
insl
sub
pop
jae
xor
insl
cmovle
popf
xchg
in
aaa
mov
jns
js
jb
mov
adc
aad
xchg
mov
imul
push
inc
sbb
daa
jnp
inc
lds
leave
paddb
enter
syscall
in
cmpsl
push
aam
lods
pop
jl
repz
enter
or
jns
sti
push
insb
push
push
mov
fdivrs
lret
or
aaa
imul
into
push
xchg
inc
shl
jo
mov
sbb
cmp
aad
sbb
repnz
sub
or
xor
push
jo
inc
pop
loop
adc
dec
jo
movsl
mov
pop
jo
leave
lea
test
dec
jle
cmp
jecxz
call
jg
jo
sub
ljmp
xor
or
inc
pop
imulb
jb
punpckldq
xchg
push
xchg
data16
das
xor
inc
push
jne
pusha
jo
es
dec
fsubrs
mov
lahf
out
in
xchg
arpl
xchg
sbb
cld
cmp
push
sbbl
dec
repz
or
dec
pop
xor
data16
mov
or
adc
mov
xlat
aad
rclb
cmpl
insl
clc
jo
repnz
jae
les
jo
add
mov
ret
leave
cmp
mov
inc
mov
dec
loope
gs
addr16
lret
push
push
cwtl
mov
loop
subb
jle
jo
cwtl
fmuls
dec
das
xchg
rorb
divl
cmpsb
push
xor
xchg
mov
jl
fiadds
push
xor
lret
cs
mov
lods
fwait
jl
scas
jo
mov
jbe
lock
ss
rolb
adc
xchg
gs
movsb
addl
or
add
inc
clc
jnp
fists
xchg
jnp
jmp
xor
jno
jb
in
das
aas
mov
adc
dec
inc
xchg
lret
jnp
and
sbb
jp
jo
pop
stos
push
add
notl
or
lods
push
pop
out
dec
dec
sub
in
jl
cmp
in
jo
lret
iret
dec
xchg
lret
insl
mov
jecxz
mov
outsl
pop
cld
lods
mov
prefetch
insl
loopne
and
daa
data16
cs
jo
mov
xchg
outsb
fidivl
rclb
ja
push
pop
cwtl
iret
inc
add
int3
push
push
mov
out
cwtl
rcll
fwait
mov
rcl
jo
mov
imul
xor
iret
jl
mov
lods
xchg
fcoms
xchg
cmp
jo
aas
movsb
nop
ja
hlt
jo
mov
push
mov
mov
addr16
sbb
lock
aas
jo
sbb
movsb
enter
pop
cltd
outsl
jp
aaa
jo
push
ljmp
jo
sbb
and
stc
icebp
jo
mov
scas
and
testb
push
sbb
mov
sbb
ftst
cs
fisttpl
or
pop
ja
cmpsb
pop
popa
leave
in
rorb
xlat
sub
add
pop
pop
call
and
ja
dec
mov
push
mulb
cwtl
nop
dec
jp
addr16
in
sbb
ret
insb
outsb
cwtl
jb
call
xchg
scas
add
adc
pop
dec
jp
or
subb
mov
sub
add
fnstenv
pop
in
mov
sbb
dec
outsl
adc
jo
mov
adc
jo
into
xchg
int3
xor
arpl
jmp
sub
stos
push
outsb
jo
push
icebp
xchg
dec
adc
sbb
popa
inc
xchg
jecxz
jo
add
testl
sbb
and
cwtl
fcoms
sub
jge
pop
test
sub
adc
adc
jecxz
pop
stos
dec
cld
jo
mov
fistpll
mov
cli
push
scas
sbb
jecxz
sub
jp
mov
clc
sub
mov
xlat
dec
lds
lock
fnstsw
or
xchg
mov
xorb
fdivrs
jae
push
leave
adc
ja
add
xchg
insl
add
aaa
into
push
fldt
add
mov
imul
insl
loopew
xchg
pop
movsb
dec
mov
lods
inc
mov
outsb
jg
sub
adc
xor
lock
aaa
mov
mov
jo
mov
xor
push
shrl
jo
mov
mov
jp
push
inc
mov
jno
lock
std
outsb
push
jo
cmpsb
arpl
das
mov
andb
loope
pop
mov
insl
jbe
popa
sbb
test
mov
and
andb
mov
imulb
arpl
xor
jo
mov
lds
insl
xorb
stc
mov
mov
pop
addr16
icebp
push
cwtl
sub
xor
dec
mov
aas
cltd
mov
fdivs
and
mov
adc
xchg
push
aaa
add
adc
mov
je
arpl
push
jo
dec
jns
repz
stos
shlb
es
pop
xchg
xchg
xchg
cmp
dec
mov
xchg
cmp
mov
jbe
xor
inc
imul
outsl
inc
orl
hlt
lock
lods
lea
in
repz
and
cmp
js
sti
lods
test
jl
xchg
mov
and
sub
pushf
nop
jae
xor
imul
or
mov
jo
sbb
rol
sbb
js
stos
rclb
push
jo
cmp
inc
mov
jo
test
jb
std
pop
insl
xorb
cmp
pushf
cmpsl
cwtl
mov
shrb
addl
jo
xchg
clc
repnz
or
mov
sbb
mov
insb
or
xchg
lock
lods
adc
aad
movsl
aam
loopne
mull
pop
nop
dec
adc
jo
in
mov
sbb
pop
add
mov
jno
lea
push
pop
aas
pop
pushf
mov
mov
xchg
mov
lds
xor
incl
mov
cmp
lock
test
jo
push
xor
leave
push
jo
aad
pop
addb
mov
pop
stc
xchg
dec
shlb
jo
jne
or
push
dec
movsl
gs
vandpd
jge
ja
lods
or
je
mov
cwtl
xchg
loopne
hlt
mov
jo
sti
aas
cmp
or
bound
and
jle
ret
jo
je
adc
xor
jo
push
cmp
outsb
or
cwtl
xor
outsb
dec
push
jnp
out
bound
jo
aaa
inc
stc
push
jo
rcll
jo
add
mov
pop
mov
pushf
aas
cmp
imul
xor
mov
repz
enter
push
imull
sub
psrlq
rcrb
jo
jge
leave
or
ret
cmpsb
xchg
sahf
adc
mov
mov
gs
pop
jo
daa
xor
xchg
cmp
mov
popf
clc
sub
inc
jo
fisttps
mov
push
pop
jb
in
push
enter
sub
sub
inc
pop
arpl
jmp
or
dec
gs
es
bound
lea
jno
mov
jo
stc
mov
jb
jo
jle
mov
jl
fistps
or
jo
add
mov
jge
stc
movl
sbb
jo
add
pop
jo
lret
jne
and
jo
cmp
xchg
jge
pop
adc
cmc
pushf
outsb
lret
push
mov
je
push
xorb
in
jae
fisubs
nop
add
dec
cwtl
adc
fistpll
ja
decl
pop
push
xchg
in
xor
lahf
cmp
test
xchg
xchg
xorb
into
add
mov
jnp
rep
cmp
iret
insb
xor
shlb
mov
inc
mov
push
mov
or
mov
aad
in
cld
jo
jnp
lea
test
cmpsl
ja
clc
repnz
imul
out
xor
adc
dec
in
stc
pop
sub
fcoml
jne
jne
cwtl
sub
cwtl
dec
push
lock
push
sti
and
es
fnstenv
stos
xchg
add
lcall
pop
mov
mov
in
call
mov
jp
out
xchg
cmpsb
mov
xchg
xchg
xor
jo
add
outsl
divl
lahf
insl
cmpl
mov
pushl
scas
lea
jae
mov
jo
inc
xor
mov
sub
dec
inc
ss
or
cli
jno
and
pop
ficoms
ds
xchg
fnsave
enter
cmp
fidivrl
xor
popf
cmp
jo
out
jno
fnstcw
fldl
jo
insl
cli
popa
cmp
xlat
in
daa
xchg
sbb
jo
mov
in
jae
cwtl
pop
or
cmc
jo
lock
enter
jo
jb
je
mov
cmpsb
lods
repz
inc
xchg
std
adc
ss
sub
or
adc
into
outsl
jo
push
cmp
xchg
fstpt
jo
lea
pop
cmp
mov
imul
sbb
in
push
adc
pop
stc
xor
insb
mov
cmc
cmp
pop
push
lret
in
push
mov
insl
inc
rorb
mov
xchg
lcall
xchg
bound
jle
cmp
push
insl
sbb
sbb
sub
cwtl
sub
shrl
inc
xor
clc
popa
fisttpl
js
xor
ds
sub
insl
cmp
xlat
push
pusha
dec
in
pop
adc
frstor
cmp
pop
mov
xor
mov
sar
push
mov
fs
mov
xor
lods
xor
std
xchg
jl
pop
push
cld
in
fdivs
mov
or
pop
je
mov
sbb
jl
xchg
xchg
cmp
addl
mov
fsubl
jne
fistl
repz
pop
mov
lahf
cltd
lret
pushf
push
test
and
fwait
inc
dec
sahf
jae
imul
mov
mov
bound
into
das
dec
lock
gs
lock
sbb
lock
daa
pushf
dec
jg
rcll
inc
or
add
and
or
aam
inc
fmull
add
in
les
daa
and
outsb
pop
aas
pusha
sahf
mov
dec
xor
xor
jb
jo
cwtl
and
xor
bound
adc
cmp
inc
mov
add
mov
loopne
lea
or
stos
sbb
mov
insl
jge
aas
mov
jne
mov
dec
lods
pushf
in
mov
insl
popf
cltd
int
mov
jo
movb
pop
sub
nop
add
xchg
push
lock
seta
xor
insl
pop
imul
inc
sub
jmp
insb
and
aad
test
out
lock
sbb
cwtl
mov
xlat
and
jno
xchg
rorl
jo
mov
or
push
sub
enter
jo
pop
and
movsb
daa
icebp
cmpsb
jo
jbe
sbb
dec
mov
sub
jae
xor
mov
out
adc
xchg
push
fcomps
cmc
leave
mov
jo
adc
pop
xchg
inc
ds
into
xchg
sbb
adc
sahf
dec
out
fadds
sub
movsb
idivl
inc
arpl
jp
fwait
mov
xchg
dec
jle
imul
outsl
mov
test
mov
not
out
std
mov
rcll
shrl
add
mov
and
rorl
mov
lods
lret
cmc
jo
pop
popa
add
ret
orl
mov
ja
jmp
out
pop
shlb
jbe
insb
inc
cmp
dec
test
popa
out
or
or
test
iret
adc
jae
mov
mov
xlat
jg
cmp
loope
arpl
mov
pop
pop
mov
mov
lcall
cli
push
arpl
sub
mov
cmpsl
and
inc
adc
dec
pop
xchg
xor
or
jae
fbld
jae
mov
int3
mov
cmc
add
leave
test
fmull
sbb
jl
and
jbe
sbb
xor
xchg
lcall
les
jo
lret
xchg
dec
outsb
lahf
jo
das
adc
aad
fsubs
fldenv
ja
loopne
sbb
mov
jo
fcoms
jo
push
mov
icebp
dec
inc
out
sbb
lahf
xchg
and
sar
xchg
rclb
inc
lods
pop
andl
push
rclb
ja
dec
je
mov
fwait
pop
pushf
pop
dec
and
shlb
sub
xor
xchg
bound
push
jo
sub
xchg
cmc
jo
add
std
xlat
add
mov
lahf
and
pop
mov
xor
int3
pop
cltd
inc
xchg
or
imulb
leave
cmpsl
scas
jae
popf
mov
es
cmp
bound
xor
lds
dec
aaa
sbb
mov
xchg
dec
hlt
sbb
mov
jmp
or
jo
notb
sub
cmp
cmp
jo
test
jge
insl
cld
push
jmp
or
cwtl
pop
jo
shr
lret
sarl
xor
pushf
aas
xchg
sub
outsb
jo
shlb
lret
rcrl
xor
imul
jg
scas
pop
mov
jge
mov
jo
ja
sbb
outsb
stc
in
stos
dec
scas
test
fisubrl
fadd
lahf
ds
push
or
insl
add
xor
insb
cmp
xor
das
mov
stos
inc
mov
sbb
out
push
test
dec
jo
mov
andl
cmp
scas
std
enter
mov
aaa
addb
adc
push
push
jo
mov
mov
bnd
fs
cltd
mov
jo
ss
and
gs
jnp
cmp
sbb
addr16
inc
mov
gs
push
dec
jb
cmp
adc
push
lret
ret
mov
xor
mull
mov
xchg
xchg
jo
sub
add
jo
pop
fmull
insb
fidivs
int
stc
mov
sbb
pop
fnstenv
pop
icebp
pushf
lret
andb
cmpsb
dec
insb
cmp
jbe
rcrb
scas
pop
popa
jp
enter
sub
jo
xor
xchg
std
xor
cmp
mov
es
lahf
mov
jo
test
jo
fnsave
sbb
jno
rol
nop
shlb
shlb
xorb
push
lock
pop
insl
sbb
xchg
mov
lock
das
insb
mov
out
xchg
jo
xchg
and
push
dec
pop
mov
cmp
jns
xchg
jo
call
pop
jb
mov
rorb
sbb
leave
aam
rorl
insl
mov
testb
dec
outsl
cmp
xor
jo
addb
dec
test
jo
jns
cltd
dec
mov
jo
cmp
repnz
pop
adc
imul
fdivrl
jo
ljmp
jo
imul
jo
mov
xor
inc
pop
stos
mov
xchg
fwait
popf
daa
fmull
in
nop
xor
dec
outsl
mov
jo
leave
pushf
lods
mov
cmc
outsb
and
shlb
mov
dec
sbb
fildll
shll
mov
push
cmp
pushf
ja
insb
mov
lods
xor
xlat
mov
test
cmp
mov
xchg
cmp
xchg
int3
jbe
pop
lcall
jb
cltd
cwtl
xor
adc
mov
jle
imul
fwait
jo
inc
icebp
lods
push
lds
add
xlat
sbb
mov
pop
je
mov
cmp
and
lods
mov
stc
fldt
mov
pop
jo
cmp
ds
and
mov
cltd
aam
push
push
mov
sbbb
jge
mov
loope
xchg
repnz
fsubl
jo
cwtl
cmp
jne
loop
sbb
push
cmc
icebp
imul
xor
xchg
and
or
pushf
pop
sahf
jo
xor
or
pop
mov
int3
mov
adc
dec
or
std
sbb
add
jo
lret
or
mov
ja
gs
fstpt
mov
fisubrl
jae
add
testb
clc
shll
push
jns
mov
std
xchg
sahf
fsubrl
jo
movsb
inc
fstpt
cmp
add
shlb
divl
xchg
mov
jae
cmp
stos
sub
dec
outsb
cmp
push
push
mov
dec
xor
outsb
jae
test
push
lret
and
ljmp
ret
dec
repz
xchg
cmp
jo
cs
cmpsl
cmp
lret
xchg
pushf
pop
sbbb
sub
sub
cmp
and
rol
pop
xchg
dec
mov
jo
jp
push
xchg
stos
xchg
and
lds
and
dec
mov
push
dec
pop
mov
inc
lea
xchg
dec
int3
jo
xchg
xor
mov
jo
and
pop
jo
xor
in
js
add
xchg
mov
scas
jo
call
mov
cmpl
lds
mov
ja
xor
dec
mov
add
jb
jbe
jo
idivb
or
pop
mov
jo
clc
je
mov
test
mov
fmull
jp
pop
adc
mov
leave
jnp
aas
jp
lock
cmp
sub
mov
adc
or
mov
mov
call
lea
jo
insl
cmp
pop
shrb
cmpsb
pop
fists
jnp
adc
cmpsl
roll
test
xchg
jb
out
cmc
push
sahf
movsw
mov
or
leave
jo
xor
inc
dec
jo
mov
jne
test
outsb
pusha
pop
jp
xor
push
sar
pop
sahf
mov
pop
push
jo
fsubr
jns
popl
pop
popf
mov
leave
cmpl
jne
lcall
ss
inc
cmp
mov
aam
push
push
mov
dec
jnp
jo
fcompl
sub
outsb
mov
cmp
xor
jo
fmuls
or
mov
push
mov
jo
aas
and
lret
lret
insl
adc
lds
cmp
sahf
jo
outsb
jbe
and
rcrb
fcoms
sahf
inc
or
lock
mov
cli
jbe
jo
cmpsb
jge
xchg
movsl
stc
addr16
fidivl
std
jle
daa
pop
jo
push
not
jnp
imul
test
mov
mov
xchg
movsl
mov
stc
mov
nop
test
insb
push
xchg
int3
jo
mov
sbbb
les
fcmovnu
stc
icebp
jg
adc
into
xor
lahf
jmp
jo
mov
test
jo
fsub
sbbl
adc
je
jnp
adc
push
mov
inc
dec
jo
push
test
mov
and
loope
adc
lahf
popf
xchg
andb
jo
aam
or
sbb
sbb
pop
push
jo
es
data16
jo
or
jne
test
filds
jo
mov
lods
faddl
mov
jl
jno
imul
cmp
add
jo
xchg
jg
cltd
xchg
push
mov
mov
xorl
push
jno
inc
xchg
and
push
in
jne
scas
int
cmp
jbe
push
cmc
jl
gs
mov
xor
jo
stc
insb
out
in
insl
mov
fsts
jmp
fdivrl
dec
xchg
mov
bound
mov
outsb
jo
jae
lds
mov
dec
jo
sub
ss
mov
mov
mull
test
je
jo
mov
lea
rcrl
mov
repz
aad
jae
jo
pop
lds
xor
pop
pop
insb
jg
shl
stc
int
cmpb
dec
jo
pop
dec
std
andl
sub
test
jo
sarb
cmp
jp
mov
sub
ja
jo
pop
cmp
jo
jb
shl
mov
jo
outsl
mov
pop
imul
fisubl
cmc
out
jo
mov
sbb
lock
add
out
inc
repz
lock
inc
movsl
jo
stos
mov
out
jo
adc
mov
push
jmp
aas
push
jbe
push
insl
shll
inc
mov
stc
mov
xor
jnp
jmp
les
push
iret
push
mov
mov
jo
jbe
jp
add
mov
addr16
mov
addr16
mov
es
cli
mov
test
jp
and
outsb
repz
in
outsb
pop
cmp
imul
cmp
cmp
adc
or
xor
xchg
xor
insl
jo
loop
xchg
push
pop
bound
cmc
xchg
sbb
rcll
out
or
jo
mov
or
call
lea
outsb
sbb
push
sub
popa
xchg
mov
bnd
inc
and
jo
or
dec
inc
pop
or
out
mov
mov
push
jo
push
inc
pop
jno
jne
cmp
xchg
pop
inc
je
lods
push
out
lret
popf
push
adc
pop
repnz
outsl
leave
in
xchg
jae
sub
jnp
cltd
jge
mov
push
fucomi
xor
cmpb
mov
and
in
or
xchg
pop
and
ja
adc
push
cmp
fsubl
out
stc
hlt
pop
outsb
jo
and
pop
ret
jo
lods
aad
fbld
xchg
jo
dec
mov
shll
lret
mov
out
sub
loop
pop
xchg
cmpl
int
pop
mov
inc
jge
dec
fmull
loopne
dec
mov
push
jo
ret
mov
movsb
insl
mov
addb
sub
sub
lods
cli
mov
dec
inc
push
pop
push
inc
jmp
add
mov
and
movsl
jo
and
inc
bound
inc
mov
sub
mov
xorl
add
mov
dec
mov
mov
insl
fldt
cmp
mov
sbb
mov
pop
fdivrl
std
test
js
cmpsl
out
jo
push
mov
jae
mov
mov
in
sarb
jle
jo
jbe
or
inc
jae
jo
into
xor
jo
jbe
test
int
sbb
in
jae
jo
xor
inc
out
mov
ja
cmpsl
adc
mov
sti
add
push
sub
pushf
jo
fisttpll
out
sti
mov
adc
xor
fimuls
hlt
add
mov
push
cmp
fisubl
stc
lahf
mov
std
fldcw
loopne
xchg
push
sub
lds
xchg
cmp
sbb
or
xor
cmp
mov
int
fistl
xchg
cmp
sub
bound
cmp
push
jg
andl
jo
mov
fstps
imul
mov
cmc
fstpl
inc
jo
mov
ljmp
shr
mov
lahf
jo
int
lcall
sub
lods
lret
dec
mov
fmull
scas
mov
movl
pop
xchg
push
lock
inc
add
xchg
push
and
jo
es
mov
jo
int3
lahf
lds
xlat
xchg
adc
jne
xchg
test
insl
leave
sbb
or
xor
push
add
mov
jo
cltd
lds
jae
in
mov
test
shrl
and
call
sbb
sarb
push
lods
jo
mov
clc
and
ds
ss
and
fmul
insl
shl
dec
fndisi(8087
daa
add
jo
ss
push
inc
mov
out
mov
mov
fbstp
add
jo
imul
je
mov
jg
scas
int3
lods
aam
sbb
mov
lea
mov
push
pop
arpl
popf
jo
mov
or
xchg
sub
add
jo
sti
xchg
in
jne
fucomi
jo
push
pusha
insb
adc
pop
cmpsl
jo
ljmp
jnp
cs
arpl
loope
divl
dec
sub
addr16
push
fcmovnbe
push
lock
add
insl
sub
fnstenv
sbb
out
jo
cmp
pop
insb
xchg
js
cmp
jno
jg
in
mov
loopne
xor
jae
xchg
ret
add
rorb
lds
sbb
push
jp
mov
mov
mov
jo
leave
pusha
hlt
and
inc
jo
into
pop
test
xchg
jo
jb
cmpsb
ja
mov
mov
adc
add
mov
das
jmp
xchg
pop
jb
dec
outsl
mov
push
jp
lret
fcmovne
nop
dec
lods
xor
repz
or
test
leave
jmp
xor
or
lods
xlat
nop
outsb
adc
jl
stos
lock
lahf
lea
test
pushf
jbe
sbb
jo
fs
cmp
repz
imul
mov
test
mov
insl
std
xor
dec
sbbl
test
mov
outsb
mov
mov
inc
push
sahf
pop
jg
inc
icebp
lods
push
and
pop
mov
and
sbb
jmp
dec
xchg
daa
jo
dec
jne
xchg
leave
jo
push
cwtl
cmpl
aad
test
adc
xor
or
shlb
mov
shl
and
in
xor
cmpsb
xchg
xchg
hlt
das
xor
imul
push
push
mov
pushf
xorl
and
jb
fdivl
dec
adc
jo
mov
xchg
cwtl
test
stos
pop
xchg
jle
fistpll
into
shlb
popf
cmp
or
mov
fwait
xor
in
lock
out
cmpsb
mov
jo
mov
cmp
dec
lahf
out
int3
insl
shld
pop
cmp
xor
pop
mov
stc
outsl
fistpl
sub
mov
mov
push
test
inc
dec
lods
jle
rolb
dec
jg
mov
cmpsb
insb
add
addr16
pop
mov
mov
cmp
cmp
jo
xlat
movsb
sub
imul
mov
add
das
ja
es
std
push
add
add
mov
lds
test
scas
out
mov
fwait
pop
jne
mov
mov
jl
push
aad
ljmp
mov
xor
inc
pushf
push
pop
insl
test
mov
ja
cmpsb
test
lahf
xchg
xchg
jne
jnp
gs
sbb
mov
mov
add
jo
shrl
cmp
xor
movsl
lret
xchg
sbb
rclb
push
testl
dec
mov
rcrb
fwait
ss
inc
and
jo
inc
lods
iret
mov
std
push
or
jo
xchg
pop
stos
sbb
aaa
shll
dec
subb
insb
xchg
ficoms
xor
jge
pop
rorl
pop
inc
jmp
imul
jo
int
push
mov
cmc
insb
mov
cmp
jns
mov
jmp
jo
xor
shll
jo
mov
aad
mov
xor
lds
btc
cld
aaa
sub
sbb
fdivl
mov
push
clc
lods
adc
jp
push
mov
jo
jne
mov
das
xor
pop
dec
xorb
fnstenv
cmp
jle
fdivrl
es
xchg
jo
jp
xchg
test
jb
xor
cmp
mov
pushl
ja
loop
ret
adc
inc
jo
jae
mov
jo
push
xchg
fisubrl
jmp
pop
cs
inc
ds
in
jo
sbb
push
mov
arpl
inc
lcall
jo
push
push
xorl
dec
jo
adc
jae
push
lret
mov
sar
leave
jo
cmp
in
adc
out
fisttpl
fisttpll
test
xlat
jo
xchg
dec
mov
cmpsb
jo
or
jbe
jns
test
xchg
push
xor
lret
insl
mov
icebp
mov
jo
push
ds
or
xchg
imul
and
jo
dec
add
outsb
mov
mov
push
adc
jae
daa
ds
sub
nop
mov
jg
rcrl
dec
jl
int3
lock
fdivrl
sub
mov
mov
divl
dec
cmc
lea
leave
fcompl
outsb
ss
ja
rcll
xchg
fstl
vsubss
pop
jo
cmp
scas
jle
jo
mulb
mov
mov
popf
test
pop
sbb
rcrb
cmpb
jo
lods
add
insb
outsl
jno
mov
jnp
mov
push
xchg
pushf
repz
and
das
xchg
lock
and
xor
dec
cs
inc
xchg
bound
rcrl
mov
dec
pop
lock
mov
inc
ret
add
lods
mov
add
ror
jo
mov
clc
in
adc
aaa
jle
inc
jp
push
cmp
test
into
pushf
xchg
mov
popa
xchg
cmp
ror
mov
test
movsb
in
add
fsubrp
cwtl
je
sarb
int
fcoml
jo
test
inc
imul
fsts
js
inc
and
pop
daa
orb
push
cmpsw
stos
xorl
adc
popl
out
pop
fs
lock
cs
mov
sbb
ret
pop
adc
cmp
gs
jo
lods
pop
pop
xchg
es
xor
insl
cli
ja
mov
jmp
jl
push
cmp
pop
mov
pop
dec
les
mov
int
test
jo
mov
xchg
jo
jge
imulb
cltd
movsl
jo
ss
js
clc
aad
xor
cmp
shlb
jp
pop
mov
sub
push
mov
not
cmp
push
jo
xchg
dec
jmp
lret
mov
jo
mov
fdivs
aas
fildl
aad
mov
mov
xor
cmp
movsb
pop
lahf
jo
sbb
mov
dec
and
shlb
cmp
mov
xor
daa
popa
in
mov
push
divb
mov
and
test
rolb
xchg
lret
jo
rolb
push
dec
xor
shll
fs
adc
xchg
sbb
mov
dec
and
lret
scas
orb
popf
sub
xlat
sub
jo
and
clc
dec
cmc
loope
sbb
adc
xor
cmp
stc
jl
mov
mov
and
pop
mov
cmp
jo
and
call
cld
ds
adc
or
arpl
data16
sub
pop
fdivrs
push
xorl
sub
jo
mov
pop
fidivs
lea
mov
dec
in
xchg
jo
orb
leave
jo
inc
jnp
pop
jb
jle
pop
jo
shrl
in
mov
add
push
lret
push
push
mov
sub
jo
add
cmp
jo
jbe
mov
cmpsl
inc
jo
mov
aaa
dec
jecxz
out
enter
jbe
ljmp
cmp
sub
insl
lds
mov
pushf
mov
leave
jo
add
sti
pop
fidivrl
push
inc
cmpsl
sarl
mov
or
push
scas
fwait
xchg
inc
mov
int
jae
ds
push
stos
mov
mov
lods
jo
movsl
cmp
dec
jg
pop
loopne
jo
fistpl
in
ja
sbb
xchg
xor
insb
enter
mov
xchg
lods
ja
xchg
fistpll
pop
jo
inc
in
nop
push
gs
push
add
jo
sub
scas
fsubr
push
shll
mov
sub
inc
jo
jno
push
lods
lcall
jnp
insb
xchg
lds
lea
sub
pop
pop
xorb
add
jo
scas
shlb
test
mov
dec
pop
jo
xchg
add
shll
push
cmp
jo
mov
inc
xor
jo
insl
outsl
mov
dec
shrl
or
lahf
pop
data16
int
lock
loop
roll
outsb
jnp
lods
enter
pushl
lds
pop
lock
lods
cld
mov
push
add
jo
add
or
and
lret
mov
out
cmpsl
mov
addr16
jnp
test
sub
stc
dec
jo
push
cltd
mov
fidivs
lcall
in
inc
push
jo
sub
mov
mov
xchg
cli
test
ss
xor
lds
add
mov
jg
mov
xchg
inc
lret
mov
pop
adc
ljmp
loop
mov
xlat
mov
cmp
cmp
dec
xchg
bsr
outsl
lods
xchg
jle
push
mov
jo
cmp
push
into
cmc
aaa
push
dec
pop
lock
jp
lods
cmp
or
lea
xchg
mov
lock
jo
pop
ret
mov
jae
test
mov
repz
sub
cld
stc
les
pop
test
pushf
nop
mov
leave
aam
jmp
gs
xchg
jo
fcomps
js
cmp
sbb
test
ja
repnz
shlb
jle
das
add
push
mov
jmp
jo
mov
int
jae
psllw
out
imul
lods
xor
pop
sbb
fsub
jae
and
mov
mov
push
push
mov
lods
xchg
sbb
jmp
cltd
xchg
je
mov
hlt
mov
inc
xor
lods
test
jle
nop
in
fwait
jo
fidivrs
cmpsb
jo
dec
push
jp
or
inc
mov
sub
das
and
jo
test
dec
add
mov
mov
push
or
xor
mov
cmp
insb
sahf
jnp
mov
das
int3
iretw
aaa
push
mov
daa
push
and
mov
lahf
push
sbb
xor
pop
mov
out
leave
shrb
pop
ret
xchg
dec
mov
test
mov
iret
lock
mov
insb
mov
ret
in
or
jno
into
test
inc
lock
push
movsl
test
mov
loopne
shlb
call
lahf
lods
xor
jo
jl
sub
testl
mov
mov
jo
int3
inc
cmpsl
and
enter
into
dec
jo
std
sub
mov
adc
outsl
and
loop
sti
imul
addr16
jl
xor
ss
test
sbb
jae
xchg
dec
rol
in
into
mov
cmp
adc
push
test
xchg
jbe,pn
aaa
and
mov
dec
dec
cmp
lds
es
into
cmp
xor
add
addb
ds
jbe
cld
or
jo
pop
mov
ret
rcrb
insl
mov
test
cwtl
xchg
xchg
pop
cmpsb
cmp
lock
ss
mov
lret
push
lds
fnstsw
ljmp
cmp
adc
ja
ffree
add
icebp
jns
pop
jle
jo
and
mov
and
in
rclb
mov
ret
cmp
or
or
cmpsb
enter
test
jo
jne
cwtl
xor
push
sbb
jo
jecxz
jge
mov
cmpsl
cmp
pusha
ret
lds
add
mov
cmp
push
jo
adc
test
dec
gs
fs
jecxz
sbb
xchg
mov
ss
dec
jo
cwtl
add
xchg
sti
or
lock
mov
arpl
mov
push
mov
lahf
pop
cmp
fisubl
mov
jo
addr16
ljmp
test
adc
jp,pt
inc
cmpl
test
mov
test
stos
hlt
loope
mov
int
jo
mov
cmp
or
xorl
ficoms
jbe
cmp
shll
adc
xor
add
int3
jg
or
inc
cmpsl
dec
mov
icebp
stos
lret
movsl
lahf
jo
cltd
sbb
repz
lods
stc
jo
xor
lods
pushf
jo
mov
jb
inc
test
xchg
adc
mov
shll
jbe
insl
outsl
lea
in
rorl
mov
inc
xorb
fiadds
add
cmc
pop
out
push
xchg
shlb
ljmp
test
mov
cmc
mov
decl
mov
mov
xor
jo
push
xchg
push
mov
add
dec
xchg
aaa
jmp
jo
je
dec
xor
jp
fsubrl
lock
pop
and
int3
pop
jge
lock
ja
ds
add
cmpl
jge
xchg
in
lock
or
fucompp
fdivs
cmp
es
in
insl
push
mov
dec
je
mov
popf
jle
pop
push
xchg
popa
stos
cmpl
jo
mov
lods
fcmovbe
sub
das
mov
xor
jo
xchg
pop
mov
or
int
jo
mov
mov
iret
jp
cmp
pop
test
inc
je
sub
bound
inc
add
mov
xchg
js
arpl
adc
cmp
jo
xchg
movsl
sahf
ja
push
ja
out
sbb
cli
ljmp
jo
xor
rcll
jae
pusha
mov
inc
dec
outsl
push
lea
push
cltd
push
cmp
xchg
dec
jl
mov
push
jae
mov
sarb
pop
pop
mov
int3
cmpsl
mov
jo
roll
lock
into
ret
mov
push
push
mov
out
rcrb
push
repz
cwtl
outsb
dec
and
mov
bound
scas
add
out
inc
mov
dec
movsb
xor
push
xchg
enter
mov
stos
dec
mov
mov
repz
daa
loopne
mov
enter
cmp
loop
stos
cmpsb
mov
jb
mov
lret
insl
adcl
add
stc
cmc
clc
out
add
push
inc
jge
jbe
jo
mov
outsb
add
lea
mov
push
pusha
mov
push
xlat
mov
or
xchg
es
pop
lods
mov
jo
dec
outsb
dec
add
ds
in
scas
daa
inc
test
fidivrl
sub
xchg
test
int3
out
inc
popf
sbb
nop
in
movsl
stos
jo
or
lret
imul
cmp
adc
dec
push
xchg
cmpsl
sarl
or
dec
test
mov
and
jo
xchg
mov
cs
int3
cwtl
inc
jae
xchg
or
xchg
out
test
mov
sub
inc
sarl
sub
loop
mov
jo
mov
movsl
sbb
loopne
xor
dec
mov
jge
mov
sub
lret
pop
push
mov
mov
pop
daa
cli
pop
mov
mov
jo
jns
jb
insl
mov
lock
je
push
les
cs
mov
cli
mov
sti
mov
and
pop
jo
scas
dec
enter
jae
leave
inc
push
push
ja
pusha
xor
jp
and
nop
add
xor
mov
add
push
mov
pop
xchg
mov
nop
ret
cmp
dec
int3
xchg
xchg
shll
mov
test
lods
std
popa
fdivrs
jl
inc
mov
mov
jae
jge
dec
mov
or
mov
sarb
jo
mov
out
pop
imul
idivb
inc
adc
mov
lret
dec
ja
mov
sbb
xor
push
rcrb
sub
inc
sub
jns
ficoms
add
js
mov
xchg
jo
dec
mov
inc
push
fwait
test
rcll
push
lcall
jno
cmpsb
dec
jo
xchg
lret
sahf
xchg
push
mov
outsb
cld
pop
movsl
adc
adc
add
loope
lret
jl
sub
stos
xorb
mov
arpl
test
push
cmpsb
or
cmp
dec
jo
jl
sar
pop
pop
jo
jns
push
xchg
scas
and
leave
inc
pop
sbb
add
sahf
mov
or
test
dec
xor
cmp
movsl
rorl
jno
fcomps
xchg
mov
lods
adc
movsl
sar
jae
int3
push
mov
pop
fdiv
sahf
jbe
inc
stos
jae
inc
and
mov
sub
pop
or
sub
sbb
mov
loop
mov
movsl
add
adc
enter
inc
nop
popf
mov
xor
dec
mov
mov
jp
push
pop
sbb
inc
jo
cli
mov
jp
cmp
cmpsl
inc
mov
ds
xor
sarl
jo
out
outsb
pop
jl
cmp
pop
andl
jae
inc
cmp
mov
ret
ds
mov
aad
cmc
loop
pop
call
or
jp
add
pushf
jne
push
mov
mov
leave
jo
test
mov
adcl
mov
lock
cmp
inc
push
jo
movsl
fistpl
xor
jo
cwtl
jecxz
jne
dec
push
cmp
pop
in
test
cs
pushf
das
lods
jo
push
cmpsl
lahf
les
inc
jo
call
and
clc
adc
inc
cmc
lahf
iret
jae
jmp
shlb
jo
loop
add
mov
cli
mov
or
into
cmp
scas
jo
popa
xor
xchg
mov
ret
jmp
jo
leave
scas
lret
lea
mov
hlt
outsb
cmpsl
jae
push
mov
jo
xor
in
jo
jp
xchg
pop
jmp
fbstp
les
and
xchg
mov
cld
jo
aas
cwtl
sbb
xor
dec
push
in
out
cmp
lods
xchg
add
jae
and
int3
mov
push
or
jo
mov
or
mov
aas
sbb
jo
dec
add
cltd
pusha
popf
jo
dec
cmp
pop
xchg
push
jo
dec
jge
ficomps
jae
jo
into
mov
insl
lahf
mov
push
inc
add
cli
dec
xchg
jecxz
fsubl
xchg
sub
add
popf
ljmp
cmc
fldl
es
mov
jb
into
sbb
ret
jo
popf
pop
loopne
mov
jo
andl
or
neg
leave
adc
pop
mov
pusha
xchg
popf
cmp
xchg
jo
jge
rcr
mov
jbe
lahf
mov
lods
jo
stc
cmpsb
mov
jo,pt
and
xchg
shrl
dec
dec
cli
pushf
adc
pop
mov
sbb
cmpsl
imul
ljmp
mov
jbe
and
mov
push
adc
jg
ja
ret
push
lea
mov
or
xchg
mov
push
mov
mov
data16
lret
xchg
lea
xchg
push
repz
movsb
outsb
fisubs
icebp
mov
test
push
jo
push
movsb
xchg
mov
andnps
mov
jo
test
loopne
jo
aam
pop
jns
scas
cmp
mov
dec
jo
pop
clc
and
add
xor
in
fadds
mov
pop
cmp
push
sbb
xchg
hlt
jo
and
stos
pop
mov
cmp
xchg
stos
pop
mov
enter
jno
cmc
int
aad
ja
add
movsl
push
xor
jns
out
mov
ja
mov
pop
xor
scas
jo
adc
lret
ja
lods
jo
lret
mov
jno
out
xchg
mov
cwtl
pop
negb
insl
into
fsubrl
sbb
or
adc
pop
out
jo
insl
aaa
rclb
sbb
push
mov
add
push
mov
ret
push
mov
sbb
cmp
lock
adc
sbb
inc
jno
cmp
incl
imul
xlat
mov
lcall
fcmovne
mov
push
movl
jae
fidivs
cmp
jg
sbb
and
sub
inc
cmp
cmp
or
rolb
jle
les
lret
scas
jnp
int3
cmp
jo
inc
jb
xchg
or
dec
jl
cli
jnp
call
int3
mov
popf
call
sahf
pop
xchg
cwtl
adc
pop
xor
mov
addr16
cmpb
push
xchg
adcl
aas
int3
repnz
jo
flds
mov
sbb
sub
fildll
or
cltd
jo
jge
and
testb
or
mov
faddl
rolb
scas
cs
jo
lods
cld
jne
scas
int
out
mov
jo
add
mov
sti
pop
adc
test
push
ljmp
dec
or
jo
loop
leave
and
pop
jo
push
mov
jo
lods
popf
xor
sub
fidivs
pop
lea
mov
jp
scas
lcall
sub
lock
adc
dec
jo
and
shll
xchg
push
popa
add
call
pushf
clc
lock
lds
lock
out
mov
pop
jo
lds
loop
or
scas
dec
xchg
and
inc
jb
jo
mov
loop
ja
in
pop
lret
xor
cmc
pop
sub
popf
xor
ljmp
les
mov
jle
add
mov
loop
adc
outsb
jo
lret
jns
mov
pop
cmp
jle
and
std
ret
pop
enter
jo
cmp
jb
es
xchg
cmp
cwtl
mov
js
and
push
ds
add
xor
lods
jae
mov
ret
jo
inc
movsl
mov
pop
push
cmp
sub
mov
std
loop
adc
jo
popf
testl
imul
cld
sub
xchg
jo
jb
lahf
push
jne
movsl
jo
push
jmp
gs
mov
push
push
xor
mov
lods
push
mov
jo
shrb
jo
mov
and
insb
xchg
scas
int3
xor
fcompl
jno
insb
xchg
mov
adc
adc
push
mov
jns
insl
xor
mov
and
add
jo
stos
pop
and
pop
mov
and
out
mov
mov
insl
mov
mov
jle
movsl
cld
or
fidivs
rcr
push
add
and
mov
repnz
xchg
pop
js
inc
adc
outsb
push
jne
xor
imul
jp
jo
jae
or
cmpsb
jb
jo
fcoml
jge
sar
sbb
fmulp
xchg
pop
mov
and
ret
push
lret
loopne
inc
les
jle
add
xchg
sbb
inc
rorl
push
sub
outsl
jo
mov
push
mov
test
hlt
jo
mov
mov
pop
push
cld
mov
adc
jb
cmp
outsl
mov
sub
add
lods
out
addb
jo
cmp
adc
jle
jo
jp
mov
jo
dec
cld
push
or
adc
das
loopne
jo
add
jecxz
jo
fistl
sar
add
dec
test
xor
repz
dec
xchg
lds
pushf
inc
dec
in
lods
mov
mov
jo
sbb
xor
cmp
dec
jp
out
inc
ja
pusha
and
out
cmp
mov
jo
ljmp
jo
stos
xchg
pop
xchg
jbe
jg
sbbb
les
and
pop
dec
ljmp
lods
ret
pop
inc
mov
int3
pop
dec
mov
mov
xchg
cmp
sub
add
pop
iret
std
sub
and
lods
insl
xchg
aam
cmp
shl
adc
je
fstpt
call
or
xor
ror
push
xor
or
insl
xor
adcl
dec
imul
into
mov
mov
mov
fs
fcmovb
adc
scas
shrb
jo
and
pop
insl
ret
addl
in
les
jno
jp
pop
xchg
cmp
pusha
jo
inc
popf
xchg
sbb
jo
push
add
lock
mov
jo
sti
xchg
shll
aad
mov
stc
jae
leave
xchg
or
pop
mov
ds
out
jb
insb
data16
clc
out
lock
lahf
mov
lock
into
sbb
lret
dec
jne
xor
jbe
push
jo
sarb
stc
fisubl
jae
aas
add
idivl
fcom
jo
sar
jbe
sub
pushf
jo
in
xor
jg
xchg
outsl
pop
xchg
mov
xor
shll
cmp
mov
ret
movsl
pushfw
shll
xor
xorb
and
insl
aaa
movsl
adc
inc
push
sub
aam
dec
mov
rcll
xchg
test
xor
pop
mov
sub
push
rolb
subb
jo
sbb
push
mov
js
xor
inc
lret
outsb
lahf
mov
aas
adc
jo
jp
stc
pop
jb
pop
lret
and
jl
jge
test
cmp
and
or
inc
jl
mov
mov
cwtl
dec
clc
jo
lock
inc
fidivl
repnz
sbb
jo
pop
sub
inc
dec
xchg
mov
adcl
mov
scas
inc
pop
fdivrs
call
jmp
jo
dec
imul
mov
xchg
jp
dec
decl
arpl
jge
cltd
aad
jo
mov
add
ret
imull
push
rol
mov
xchg
outsb
mov
daa
or
xor
in
cld
ja
jmp
mov
add
inc
xor
jo
mov
mov
or
and
les
mov
adc
movsl
push
jo
stos
addr16
or
pushf
mov
jecxz
pop
xchg
movb
xchg
loope
lret
dec
mov
xchg
add
add
imul
push
xchg
xor
pop
fistps
push
pop
jno
in
jo
cmc
mov
mov
out
insb
xchg
jo
scas
in
test
movsb
mov
rorb
jae
inc
push
cmpsb
jo
out
jbe
sbb
cld
jo
roll
mov
cmc
rclb
imul
lods
mov
pop
xchg
leave
cld
shll
jo
add
pop
mov
xlat
mov
jns
fldcw
jo
jmp
jp
addr16
mov
mov
stos
pop
sub
sbb
xlat
je
add
movsl
jns
inc
jo
mov
adc
add
jo
and
cmp
jl
push
jo
imul
test
push
add
push
xchg
dec
shrl
jg
lcall
enter
dec
or
jo
shlb
into
jo
inc
dec
push
addr16
sbb
fldenv
jnp
popf
inc
movsl
ja
sub
dec
cmp
fucomp
jp
mov
dec
mov
mov
movsl
push
sahf
xor
jge
jb
jo
and
lods
movsb
insl
and
inc
and
addr16
jg
movsl
mov
xchg
outsb
test
xorl
icebp
and
cmp
clc
mov
jo
mov
std
dec
inc
stc
dec
lods
sbb
mov
and
es
jo
jne,pt
mov
clc
xor
mov
dec
adc
mov
in
lock
out
push
jle
jo
jmp
cs
lock
out
fs
stos
adcb
int3
xorb
lods
hlt
xor
scas
cmp
fidivl
loope
pop
out
jo
loop
sahf
mov
or
mov
xchg
bnd
or
lahf
add
ja
pop
loop
movsl
pusha
pop
jbe
fdivl
xchg
shll
shlb
inc
jae
pop
js
sbbl
pop
mov
stos
jg
sbb
fistps
leave
or
xor
cmpsl
sti
push
cmp
cmp
cmp
jge
popf
ss
insl
cld
pop
jmp
jo
sti
mov
stos
mov
cmp
outsl
fimuls
loopne
mov
xorb
pop
js
add
mov
push
add
sbb
outsb
insl
push
insb
push
sbb
imul
mov
imul
idivb
lcall
add
ret
mov
jg
jp
fwait
cs
imul
mov
cmpsb
in
xchg
ret
cmp
pop
int3
iret
sbb
dec
jo
dec
subl
arpl
jo
subb
cltd
mov
jbe,pn
mov
andb
jo
ds
test
pop
mov
pop
fisubrl
dec
movsb
jo
mov
sub
dec
jo
xchg
jo
mov
jo
mov
and
jge
jbe
idivb
arpl
outsl
xchg
popl
push
mov
test
xchg
mov
and
add
cmp
cld
ss
xor
notl
sbb
jnp
outsl
sub
mov
jo
xchg
ja
fs
jg
stos
jo
and
aad
or
lock
dec
sbb
push
cmpsb
or
popf
push
xchg
lret
mov
imul
jne
test
jo
fwait
das
pop
scas
int
mov
or
out
push
and
cmpsb
jo
mov
icebp
sub
cmp
rorb
mov
inc
pop
cmp
lret
insw
cltd
dec
or
xor
pop
dec
in
gs
inc
push
fidivs
push
fwait
adc
outsb
lods
jo
xlat
sbb
jo
ds
and
in
enter
clc
xchg
xchg
mov
mov
jbe
dec
sub
jo
mov
not
jo,pn
fistpl
insl
push
fwait
mov
cltd
shl
bound
jo
fistpl
jnp
scas
mov
subl
insl
jge
xor
cwtl
add
cmpb
inc
or
xchg
enter
or
sub
inc
mov
fwait
pop
std
lcall
pop
ds
mov
jp
out
inc
lods
pop
push
stc
jbe
and
jp
cmp
mov
sbb
lea
xor
add
pop
mov
xchg
inc
xchg
jae
jo
and
push
test
sub
lods
add
repnz
pushf
mov
jle
int3
daa
cmp
lods
sbb
pop
jo
cmp
cmp
lret
xchg
ss
cwtl
mov
sub
cmp
std
xchg
mov
fcomps
ret
ss
inc
lahf
cld
int
notl
jo
sub
test
lock
add
sbb
add
inc
repnz
jo
inc
outsl
je
jecxz
jo
mov
pop
test
or
rorb
mov
inc
sbb
outsb
xor
mov
push
call
in
je
inc
test
and
lcall
sti
xor
repnz
stos
jo
and
mov
rcrb
inc
paddusb
test
jecxz
insl
sub
push
fnstsw
mov
push
and
out
and
sbb
inc
dec
cmpsl
icebp
imul
nop
jge
inc
pop
addr16
out
cmp
cmp
mov
dec
jbe
ret
ja
imul
lret
mov
lahf
stos
mov
jmp
fidivrs
push
repnz
mov
into
ret
cmp
loopne
les
fnstenv
loopne
jae
enter
xchg
mov
and
in
cmp
or
lahf
cmp
add
adc
jae
sub
stos
and
std
cs
insl
rorl
out
jg
ja
dec
rorl
pusha
cmp
insl
lahf
cltd
pop
mov
jge
add
add
sbb
xchg
in
xor
fildl
xlat
popa
cli
mov
mov
mov
sti
sub
jo
xor
mov
jo
pop
inc
push
dec
aad
stos
pop
lods
mov
aas
pushf
and
test
insl
inc
push
ja
lret
inc
ja
xlat
std
les
jo
loop
ret
xchg
aam
jo
jecxz
mov
push
xchg
jl
mov
jo
mov
or
mov
jge
mov
add
jo
mov
leave
cli
insl
mov
xchg
loopne
movsl
loop
or
aad
jo
mov
adc
cltd
jae
jo
xchg
dec
add
je
jo
add
inc
sub
movsl
push
mov
rclb
pshufw
inc
std
jo
es
mov
xlat
imul
jo
pop
add
jle
imul
inc
inc
cmpl
imul
jb
pop
jnp
insl
ret
jl
xchg
adc
jo
cmp
ret
jo
and
mov
mov
mov
xor
jo
xor
rcll
pushf
xorl
out
push
xchg
insb
jge
xlat
sbb
in
loopne
jg
addl
test
repnz
push
jo
mov
mov
cmp
jo
push
jb
sbb
jp
lcall
jnp
mov
push
jbe
sbb
stos
or
xchg
dec
mov
loopne
fadds
jo
sarb
cs
lods
shll
xchg
pusha
jmp
jo
pop
pop
loope
cmp
sbb
push
aaa
les
pop
sbb
cmp
mov
xorb
mov
ljmp
lds
xor
pusha
cmp
cltd
loop
or
nop
lea
pop
jge
pop
inc
insl
nop
mov
leave
popf
in
insl
push
fldcw
mov
imul
mov
jo
push
nop
iret
sbb
sahf
dec
cltd
xchg
int3
mov
sbb
push
jo
insb
inc
fimull
jnp
decb
xor
mov
ffreep
pusha
mov
xor
repz
inc
xchg
mov
jo
xchg
hlt
mov
jo
xchg
scas
adc
and
jbe
jp
jnp
xor
sub
inc
nop
jo
xor
fisubrl
andl
sti
leave
pop
jo
std
sub
and
mov
jo
filds
decb
inc
push
dec
pop
enter
adc
mov
out
jo
or
pusha
mov
int
sbb
mov
mov
insl
pop
iret
mov
pop
pop
cmpsl
jae
xorl
adc
out
enter
xchg
sbbb
jge
mov
jmp
pop
jo
mov
pusha
push
das
push
push
bound
push
and
push
ret
cmp
dec
pop
iret
mov
movsl
xor
pop
shlb
pushf
aad
test
mov
mov
test
movsl
mov
mov
mov
test
mov
leave
lds
les
sub
cmp
insb
xchg
push
xchg
or
fs
xorb
adc
popf
push
xchg
xor
addr16
leave
sbb
hlt
das
jae
inc
bound
dec
call
mov
data16
mov
call
je
dec
mov
subw
outsl
ret
fisttpl
mov
jnp
dec
xor
mov
out
nop
xchg
and
mov
ss
mov
imul
add
xchg
das
aad
or
push
and
adcl
push
imul
push
xlat
push
les
sarl
repnz
dec
and
push
xlat
inc
fnstcw
leave
push
ds
cltd
mov
repz
pop
mov
lahf
jo
fwait
mov
stos
pushf
iret
out
jo
mov
xchg
or
mov
push
imul
data16
mov
jmp
sbb
lahf
jp
lds
movsl
je
rcr
iret
jp
inc
fidivrl
lds
icebp
popa
pop
loopne
cmpsb
mov
pushf
dec
data16
jo
sahf
popf
shlb
ljmp
cmpsb
mov
mov
ret
fisttpll
sub
loope
dec
inc
dec
xorl
push
jo
mov
mov
jno
cmc
pop
mov
jmp
jo,pn
xchg
movsl
xchg
fwait
jo
fbld
scas
sbb
mov
out
jmp
cli
sub
mov
mov
mov
aad
roll
pop
jo
add
jo
push
cmpsb
mov
jo
mov
insl
add
xor
stos
sub
sub
lret
pop
outsb
lcall
in
enter
push
or
dec
push
mov
lock
ror
fmul
jo
xchg
inc
test
lea
leave
mov
jo
mov
je
sbb
lea
xchg
push
jo
xchg
add
or
ja
mov
mov
rcll
inc
jo
lds
and
lods
ljmp
add
sub
aas
or
jo
xor
bt
fstps
scas
popf
mov
jo
sub
pop
xchg
aas
and
cmpsl
icebp
fisubrs
shl
rcr
lods
jo
push
scas
mov
add
fstpt
jo
xchg
push
movb
mov
out
roll
scas
imul
fldt
fwait
and
mov
mov
xor
xor
ljmp
mov
mov
jl
iret
jnp
popf
insl
ret
jne
faddl
fidivl
cli
aaa
push
inc
dec
shrb
imul
push
and
mov
lahf
cwtl
xchg
mov
xor
sub
movsb
jp
mov
adc
mov
fwait
or
xor
ret
loope
xchg
imul
out
lds
addr16
and
imul
add
mov
mov
mov
add
not
in
orl
jne
add
fdivs
out
leave
dec
xchg
loop
pop
mov
dec
lret
jo
xchg
ret
mov
jae
cld
mov
sub
jo
mov
sub
xor
sbb
gs
leave
xchg
push
mov
fmull
xor
mov
in
jnp
jo
loop
out
or
mov
xor
arpl
pushf
pop
insl
mov
and
mov
iret
adcb
cmp
inc
xchg
adc
and
inc
mov
mov
ds
std
adc
inc
jo
push
fwait
dec
mov
jae
jo
push
rolb
out
movsb
jo
clc
pop
add
lahf
jo
mov
pushf
dec
jo
mov
cmp
outsl
mov
mov
jns
dec
cmpsb
inc
pop
dec
inc
mov
ret
sbb
jne
mov
dec
add
inc
lcall
insl
push
scas
test
sbb
mov
cli
jo
int
dec
dec
sbb
outsb
jae
or
ds
sub
push
cmp
sub
scas
xor
out
mov
pop
lock
mov
in
or
dec
nop
xchg
enter
xor
mov
sbb
popf
les
imulb
out
scas
enter
jo
or
imul
out
and
loope
sub
push
popf
mov
lds
pop
mov
outsb
jo
aaa
out
lds
and
add
lret
sarb
fldlg2
insb
jnp,pt
repz
scas
fcmovu
imul
stc
adc
es
in
push
aaa
stos
nop
movsl
mov
dec
pusha
fcomi
lock
les
ja
jnp
mov
cmpb
push
pop
jge
mov
imul
lods
jg
or
mov
mov
jo
mov
mov
in
ret
addr16
xor
xchg
push
imul
es
outsb
shll
sti
and
shll
jo
xlat
jmp
fisttpl
xchg
lock
ss
jo
es
mov
cmp
movsl
mov
popa
les
clc
jg
sbb
sahf
cmp
add
mov
jae
dec
push
jle
enter
insl
add
gs
mov
sub
push
mov
divb
shl
loope
std
mov
pop
ljmp
int
sub
insl
push
jo
rolb
sahf
inc
mov
sti
cmpsb
mov
xor
dec
or
jo
sub
lea
adc
or
xor
popf
shll
jae
mov
jmp
ss
add
gs
push
jb
or
imulb
ret
ja
adc
xchg
push
ret
pop
jne
jo
loop
outsl
fwait
mov
cli
sahf
jo
add
out
cmc
xor
insl
jnp
inc
jae
and
pushf
xor
dec
sub
lds
rorl
dec
lock
or
xchg
push
xlat
insl
pop
mov
fs
pushf
pushf
ljmp
scas
and
dec
cmc
mov
push
ds
add
xchg
negl
mov
or
jbe
sbb
cld
fcoms
jo
ja
xchg
icebp
je
dec
ror
cmc
out
cmp
mov
movsb
xor
cmp
jo
outsl
rorb
push
sti
shlb
fwait
push
hlt
push
add
enter
mov
cmp
int3
inc
fdivl
mov
pop
jo
and
aad
aam
icebp
jo
push
push
lret
and
jae
jo
xor
add
in
repnz
mov
mov
nop
movsb
das
lea
nop
enter
mov
mov
lret
insl
xlat
add
icebp
lods
out
jo
xchg
lock
add
jo
imul
mov
xchg
jo
xchg
fnstenv
push
push
cs
jo
pop
int
xchg
out
dec
int3
inc
addr16
jo
inc
xchg
mov
mov
shll
jbe
fcomps
jo
pop
scas
ret
int
jmp
jo
inc
dec
enter
lcall
cmpb
push
jae
lret
mov
add
gs
out
and
push
aad
pop
pop
je
pop
and
pop
pop
loopne
mov
mov
jnp
mov
sub
leave
push
pusha
enter
jo
mov
dec
stc
or
int3
iret
ds
xor
inc
sub
decb
mov
int3
scas
xchg
mov
cwtl
loop
jg
push
pop
subl
cli
dec
mov
pshufw
jnp
adc
add
jae
loope
push
adc
push
mov
shll
and
jb
jbe
in
jo
and
xor
sarl
jo
orb
ja
sti
or
jle
and
mov
out
divb
mov
popa
cmpsl
adc
cltd
sbb
pop
jnp
je
mov
scas
push
insl
push
mov
cltd
fdivp
jns
icebp
out
ja
into
adc
cmp
test
jge
and
add
jne
sbb
sbb
push
cmp
adc
pop
inc
or
xchg
insl
pop
push
push
lods
jmp
lahf
nop
jge
out
cmc
dec
ret
les
sarl
jo
in
mov
lds
xchg
dec
jae
stos
mov
out
mov
push
sub
or
jo
lcall
jp
or
js
jge
in
push
jle
ss
pop
mov
dec
dec
lock
push
pop
ljmp
lret
inc
pop
push
cli
aaa
jo
jg
cld
mov
push
shll
hlt
dec
insb
out
jns
mov
mov
add
dec
sbb
sbb
mov
jbe
fdivp
lock
test
jo
data16
cltd
sub
mov
and
lods
mov
and
pushf
jo
cmc
popa
mov
sub
inc
loop
testb
cli
insl
jl
mov
loopne
or
jo
int3
xchg
popa
repz
mov
jo
add
sbb
scas
mov
mov
mov
in
push
popf
jo
jb
mov
stos
xchg
mov
jo
xchg
sub
fisttpl
loop
outsl
xor
push
scas
mov
ja
divb
mov
stos
jo
cmp
sub
mov
insl
sub
push
mov
pop
dec
adc
out
fisubl
sti
cmpl
jno
dec
dec
cwtl
or
addr16
arpl
cwtl
aaa
sbb
ds
jbe
pop
popa
jo
xor
repz
insl
setg
outsb
insl
xchg
aam
mov
add
xchg
sahf
jno
mov
jno
lock
sub
loope
inc
sbb
mov
cmp
mov
jae
test
fcmovnu
push
popf
dec
mov
nop
ds
pop
dec
sbb
lock
jge
dec
add
cli
jb
imul
adc
ja
pop
movsl
jge
xor
in
mov
jnp
pop
scas
data16
test
xchg
mov
clc
mov
mov
lods
mov
movsl
push
pop
xchg
mov
add
mov
pop
int3
aas
movsl
and
mov
sub
xchg
inc
adc
push
aam
test
ja
mov
mov
sarb
mov
scas
xor
xlat
add
hlt
fdivs
testb
jo
test
or
roll
mov
xchg
mov
push
push
adc
mov
aad
outsb
pop
and
jecxz
mov
jle
xor
enter
ret
pop
mov
push
jo
repz
fs
ja
cmc
adc
xchg
loop
out
jo
sbbb
jmp
or
ficomps
pop
insl
stos
pop
mov
sbb
mov
dec
imul
jo
stos
lret
pop
cltd
lea
cmpsb
lods
leave
push
mov
and
mov
push
cmpsb
xchg
adc
sbb
jo
mov
insb
mov
fdivrs
scas
inc
jo
ficomps
jo
cmpsl
outsl
pop
lods
lret
xchg
jo
push
rcr
fldenv
jo
loope
negl
xchg
and
fstpl
push
mov
xlat
mov
push
cwtl
add
and
adc
repnz
cltd
jo
lods
jge
sbb
xlat
sbb
idivl
cmp
jp
mov
xchg
jo
sti
test
or
in
pop
loop
dec
lods
jo
jge
mov
jo
ret
mov
int
jp
cs
aas
inc
mov
dec
mov
jo
push
pop
fidivrs
jo
test
leave
and
enter
test
pop
sbb
scas
movsl
sub
inc
xor
pop
adc
sub
lea
mov
ss
add
push
sbb
lcall
xor
out
jo
mov
push
ljmp
lds
hlt
mov
test
jo
jns
je
lock
fidivs
jmp
xlat
sahf
jo
mov
xor
lahf
push
mov
out
hlt
sti
daa
mov
mov
jbe
xor
imulb
jo
sub
mov
repnz
scas
jle
jge
pop
movsl
arpl
popa
mov
xchg
mov
and
mov
inc
daa
mov
insl
push
push
nop
repz
mov
jo
aas
mov
jnp
mov
enter
in
ret
inc
mov
scas
test
cld
jo
and
push
dec
rcll
mov
adc
jo
pop
xchg
jmp
jo
jbe
dec
cmp
loopne
mov
mov
mov
dec
xor
scas
or
jo
stos
js
insl
xor
cmp
ret
rcll
jo
inc
test
jo
push
mov
bound
iret
or
mov
add
mov
and
scas
push
add
mov
sbbl
cmp
xor
xchg
jae
in
orl
fildll
jnp
into
lods
sbb
and
push
mov
fcmovnb
insb
loop
scas
pop
push
push
xor
cmc
repz
sbb
jge
mov
or
adc
or
add
jo
leave
scas
add
cmpsl
mov
ret
inc
mov
and
movsl
std
xchg
adc
jo
xchg
cmpsl
pop
sbb
iret
hlt
test
dec
add
lds
or
mov
mov
push
sbb
test
shlb
sub
and
jo
jge
dec
loopne
sbb
mov
clc
xor
adc
xchg
pushf
fidivrl
jo
and
out
jo
cmp
or
xor
or
pop
pop
xchg
push
dec
inc
fwait
pop
jo
push
je
js
jo
inc
inc
jb
mov
sti
aas
ss
cmpsb
or
xchg
lods
dec
jbe
repnz
arpl
jne
push
dec
test
ds
push
stc
jo
inc
mov
shlb
add
cs
cmp
dec
push
jo
adc
movsl
ss
pop
jo
ja
fstpt
push
sarb
jo
push
mov
jo
jg
scas
adc
inc
xchg
jo
testl
jo
inc
cmpl
sahf
mov
cmp
outsb
sti
push
in
loope
cltd
js
aas
mov
or
xor
xchg
nop
bound
pop
push
cwtl
out
lock
fnsave
es
scas
addr16
adc
cmpl
imul
dec
lds
dec
xchg
sti
mov
or
movsl
jo
cld
ret
gs
insb
cmc
jo
iret
sbb
mov
add
aas
dec
adc
pop
dec
sub
iret
test
mov
inc
jp
loopne
jge
or
jo
xor
divb
shll
jl
test
insl
cmpsl
andl
mov
push
add
adcb
adc
jo
or
jo,pn
mov
shll
xchg
ja
lcall
and
pop
pushf
ss
fwait
cmpb
jmp
pop
adc
add
mov
and
lret
leave
jo
ds
push
or
jo
cwtl
mov
fdivrp
test
ret
js
jecxz
adc
cld
push
sbb
aaa
jo
jge
adc
sbb
push
pop
mov
adc
cmp
lcall
inc
ss
mov
mov
enter
lds
mov
dec
cs
lock
movl
in
adc
test
mov
dec
int
nop
daa
in
dec
movsl
shll
fdivr
aas
inc
and
pop
stos
minps
xchg
leave
push
mov
lds
xchg
iret
adc
shll
mov
jo,pt
xchg
inc
xchg
mov
or
jo
cmp
adc
jge
mov
mov
loop
insb
outsb
mov
mov
aam
mov
lods
popf
sub
adc
dec
mov
or
mov
mov
scas
xor
xor
outsl
adc
test
leave
cli
dec
shrl
jo
inc
push
add
call
in
decl
pop
cs
push
xor
mov
rcll
in
int
cwtl
pop
dec
scas
xchg
jo
popf
sbb
pop
in
lret
stc
mov
or
adc
ja
jo
cltd
lahf
cmpsl
mov
fwait
adc
jo
loop
xchg
out
fmul
jo
jbe
push
cmp
test
andl
out
mov
jno
out
into
in
daa
ds
mov
repz
add
ljmp
loop
daa
jo
iret
test
pop
jp
out
mov
sbb
jo
pop
pushf
scas
push
enter
fisttps
cltd
mov
pop
popf
lods
test
mov
sbb
sub
gs
cli
pushf
mov
pop
jo
in
cmp
dec
andl
adc
inc
shll
mov
pop
fdivl
rclb
sub
mov
divl
lahf
movsl
adc
mov
or
ja
sbb
fsubr
int
imulb
test
jmp
jl
aaa
inc
insl
popf
roll
mov
cltd
cld
and
xchg
add
xchg
dec
push
mov
xor
jo
inc
insb
push
cmp
bound
aas
bound
sub
xor
mov
cmp
jo
mov
mov
std
lock
out
ret
fcmovne
enter
jo
mov
movsb
in
xor
inc
leave
and
imul
jmp
push
lods
or
lcall
inc
jo
pop
mov
jge
xorb
push
aam
int3
dec
shrb
outsb
mov
jo
inc
or
popf
ss
roll
cwtl
add
outsb
jmp
dec
mov
fdivs
loopne
mov
and
xor
nop
adcl
cltd
gs
nop
cmp
mov
lds
bound
repz
hlt
sbb
dec
xchg
pushf
mov
aas
icebp
out
es
inc
ss
repnz
gs
outsl
shll
cli
pop
iret
jp
popf
daa
adc
ja
imul
lret
and
shlb
and
leave
testl
pop
and
push
jo
mov
mov
dec
js
xchg
popf
mov
sub
pushl
dec
in
pop
xor
mov
imul
add
lock
scas
lods
std
jo
push
out
outsb
and
mov
lahf
push
test
mov
cmp
call
outsb
mov
jne
jo
cmp
mov
insl
pop
mov
push
movsb
mov
mov
cmp
adc
jmp
jl
nop
jnp
or
pop
jo
aaa
sub
mov
sub
imulb
test
pop
lret
hlt
mov
ljmp
lock
insl
lods
inc
fadds
jle
mov
jnp
jne
push
sbb
loop
addr16
cld
adcb
jle
mov
fstpl
outsb
test
xor
mov
lret
insb
mov
pop
mov
dec
jg
insb
add
mov
push
adc
jp
add
mov
push
aas
jmp
push
test
adc
add
std
jo
inc
movsb
dec
push
jo
sbb
jecxz
sti
lret
loopne
mov
jo
pusha
add
jo
pop
jnp
dec
mov
inc
insl
nop
js
pop
dec
cmp
pop
repz
inc
daa
adcb
mov
nop
std
jg
enter
test
pop
cli
push
shrb
inc
leave
xor
jo
ret
add
jo
mov
push
jo
add
ja
xchg
fnstcw
in
sahf
mov
mov
out
jo
push
imul
adc
popf
clc
mov
insl
add
dec
fadds
repz
lods
dec
mov
mov
out
or
lds
jo
test
cmp
lret
add
xchg
rorl
out
test
pop
push
test
lret
cmp
gs
mov
mov
jo
inc
shlb
jo
sub
in
or
jo
cltd
sub
xchg
or
jle
fisubrs
add
addb
pop
in
adc
pop
or
jo
push
in
xchg
cld
iret
xchg
mov
ds
jno
std
jle
stos
ret
jp
negb
int3
adcb
pop
jg
pushf
or
mov
les
lcall
in
add
and
daa
jo
and
es
ret
js
add
loope
mov
mov
imul
sbb
shlb
pop
mov
out
jge
imul
add
mov
xchg
outsb
test
sub
jo
mov
or
cld
push
aad
mov
xor
jo
dec
and
mov
sub
mov
inc
loopne
jno
stos
pop
pop
cmp
jge
insl
pop
mov
lret
mov
jo
mov
cmp
jo
jbe
jnp
cmpsl
mov
mov
inc
pusha
mov
jns
shrb
jmp
test
pop
test
lock
push
cld
jo
aas
jle
es
ret
test
pop
insl
sub
ds
lods
jo
add
lcall
shll
add
xlat
dec
shll
insl
cli
cld
sbb
movsb
xor
roll
notb
pop
mov
loopne
push
jbe
jo
cli
les
dec
sti
inc
pop
fisttps
xchg
clc
ficoml
sub
pusha
sub
jp
jbe
mov
dec
push
mov
ja
dec
stc
add
jns
adc
cmpsl
jo
fdivl
outsl
aas
jo
xor
fwait
jae
mov
int
pop
and
jmp
shll
xlat
xor
sbb
cmc
add
push
insl
cwtl
and
insl
mov
sarb
xchg
lahf
jl
jo
test
mov
push
fisubs
xor
std
push
fxch
divb
stos
adc
push
imul
fdivl
test
pop
sub
fwait
jp
mov
movsl
mov
pop
mov
jo
outsb
add
lds
pushl
std
out
outsl
jge
fiaddl
insl
loopne
adc
rcll
pop
mov
sub
sbb
xor
paddd
cmp
jle
insl
sbb
inc
xchg
add
int
mov
cmp
ret
inc
lret
fnstenv
jo
push
mov
xorl
jnp
idiv
push
gs
cmp
mov
pop
jno
jo
mov
pop
call
sbb
daa
sub
xchg
jge
mov
neg
or
sub
fidivl
jg
jle
je
dec
out
insl
pop
lret
lds
out
cmpsl
mov
dec
cmp
dec
dec
movl
adc
cmp
mov
push
push
jo
xor
popf
out
xor
lock
cmpsb
cmp
scas
ret
jg
jo
push
dec
popf
add
bnd
and
push
sbb
cmp
shr
and
retw
add
sub
pop
or
mov
stos
push
leave
mov
jo
or
or
mov
adc
aas
xchg
fwait
lea
loopne
jo
jecxz
stos
cltd
cld
int3
and
mov
pushf
lock
cmp
sbb
pop
or
push
negl
lret
add
clc
jp
bound
mov
lahf
xchg
cltd
icebp
or
jbe
jle
lcall
xchg
mov
lahf
bound
es
add
dec
enter
jp
sbb
rcrl
fnstsw
inc
std
repz
pushl
mov
or
mov
jnp
dec
jge
lods
std
aaa
push
lock
pushf
pop
jbe
mov
dec
xchg
leave
inc
lret
fidivs
cmp
ficoml
pop
or
pop
jo
aam
fstpt
shrl
jbe
sbb
test
xor
jo
inc
inc
mov
ja
daa
enter
inc
cmp
addb
ss
xchg
inc
std
jo
andb
pop
loop
in
xchg
xor
mov
jo
mov
push
pop
xchg
movsl
lcall
sub
push
loopne
insl
mov
xor
pusha
lods
sub
rol
lahf
lock
les
inc
push
ljmp
imul
jbe
xor
mov
in
bound
std
push
jo
xchg
in
lcall
clc
in
push
push
lods
xor
pop
std
scas
sahf
cltd
bound
imul
es
lds
enter
mov
dec
push
push
dec
scas
mov
and
inc
popa
mov
jo
jp
dec
loope
and
jo
mov
enter
bound
mov
test
or
and
mov
mov
aad
jnp
push
loop
xor
les
cmpb
outsb
mov
fldcw
fdivl
in
mov
andl
test
sbbb
xchg
addl
jo
test
lret
mov
shl
test
mov
add
out
mov
cmpsb
jno
fs
pop
pop
cmp
jl
movsb
stos
ja
push
xor
push
jo
add
dec
push
scas
xchg
xor
movsl
jo
push
sub
test
push
jo
icebp
call
xchg
ja
xor
popa
or
jo
vdivsd
jno
shll
xor
mov
dec
addb
movsb
jo
inc
cmp
sub
test
jo
cmp
cbtw
and
lock
adc
jo
cmp
outsb
cmpsl
jo
cmp
imul
push
jb
ja
dec
pop
nop
outsb
add
push
dec
addb
ja
insl
jg
shlb
cld
pop
push
jecxz
or
dec
lock
xchg
ja
mov
mov
jp
inc
xor
rcrl
add
add
cmpsl
stc
or
jle
iret
add
pushf
cwtl
lret
jo
sub
or
cltd
or
pop
loope
ds
mov
fnstenv
arpl
shll
outsl
xchg
sub
jge
push
jo
mov
mov
dec
cs
lock
fisttpl
inc
int3
repnz
sub
iret
sahf
xchg
aaa
scas
push
add
jp
push
inc
jo
mov
xor
and
inc
or
in
mov
mov
jo
dec
pop
out
pop
loopne
aaa
jo
mov
ret
sbb
cmp
push
dec
mov
mov
xchg
fsubrl
popf
dec
scas
lods
test
mov
jae
jle
je
jae,pt
stos
sbb
push
clc
mov
fwait
mov
cli
das
lods
push
jo
aaa
inc
mov
cmp
js
push
xorb
sub
xchg
jo
lret
adc
shr
ret
mov
dec
enter
jo
xchg
insl
bound
into
jo
push
mov
pop
jo
sbb
lods
and
xor
inc
fidivl
sbb
clc
movl
dec
cmp
pop
js
sub
out
mov
adc
fstps
insb
cs
jge
fisttps
inc
cli
xchg
shlb
jp
and
cltd
roll
cli
inc
insl
lds
sub
cmp
adc
enter
pop
adcb
or
mov
insl
xor
daa
dec
gs
adcb
xor
aaa
cmp
mov
pop
mov
shlb
mov
rcrb
and
xor
cmpsl
xor
test
out
push
mov
enter
test
out
jo
lret
and
nop
jo
std
mov
xor
adc
mov
jle
xchg
add
jo
dec
adc
push
lds
aam
fwait
rorb
add
lods
cmc
jbe
movsl
jo
in
or
insb
in
jo
dec
jp
cmp
pusha
lret
fisubl
lock
pop
and
pushl
mov
fadds
cmc
ja
pusha
pop
ja
popf
xchg
dec
xchg
xchg
push
xchg
jo
add
enter
jo
cmc
xchg
ret
pop
rolb
jo
adc
sbbl
sub
xchg
push
mov
call
es
rcrb
sbb
add
jo
mov
inc
outsl
pop
mov
jo
mov
outsb
cmp
add
mov
fidivl
rorb
jo
push
scas
int3
cmp
adc
adc
mov
mov
jo
movsl
mov
or
mov
mov
jne
push
xchg
cmpsl
cs
push
add
fwait
inc
fs
test
jo
test
lods
xchg
lret
mov
jge
inc
dec
mov
imul
cmpsl
xchg
inc
mov
xchg
xor
lret
inc
and
adc
pop
in
mov
push
rorl
mov
lea
mov
mov
out
jae,pt
mov
inc
movsw
stos
int
mov
mov
xchg
or
cli
xchg
nop
jo
test
xchg
sbb
lahf
in
icebp
jns
and
ja
inc
stc
xchg
and
jo
xchg
jp
mov
rcrl
jno
into
pop
adc
stos
pop
inc
cmp
nop
mov
jne
jp
mov
jmp
imul
lret
and
out
xor
mov
loope
jbe
push
mov
insl
and
lret
ds
jge
mov
xchg
jp
cmp
fbstp
aad
lods
test
jae
mov
fwait
hlt
stos
add
jo
test
mov
jns
into
push
and
lods
mov
in
leave
pop
and
or
iret
add
jo
ret
xchg
call
jo
or
rcr
movsl
inc
jo
cmp
mov
shll
jo
sbbb
and
sbbb
pop
jmp
fadds
jo
imul
lds
pop
mov
adc
in
jo
cmp
enter
jle
fidivs
sahf
mov
pop
inc
adc
push
xor
jb
mov
jae
push
lds
sbb
lea
or
sbb
and
jo
fcomi
sub
hlt
mov
lahf
xchg
fwait
clc
mov
dec
jb
jo
inc
or
les
pop
push
cltd
and
insb
lock
sti
loopne
mov
xchg
lock
ror
push
insl
jle
fs
and
popa
cmp
sbb
imul
pop
sub
jo
dec
daa
fimull
pop
dec
int3
mov
pushf
aaa
adc
and
andl
ja
mov
add
movsb
mov
std
and
movsl
lods
fxch
mov
out
add
jo
xchg
fsubrp
xor
pop
ret
jo
mov
mov
mov
mov
mov
jo
lret
jle
cltd
jge
jo
inc
pusha
arpl
mov
ftst
ror
mov
jo
jbe
les
and
push
inc
mov
adc
orb
xchg
leave
jo
insb
cmp
pusha
mov
insl
cmp
xor
mov
pop
in
xlat
out
sarl
ja
sbb
hlt
jp
or
add
lret
xchg
xchg
lods
jge
sbb
insl
push
lahf
mov
cwtl
fiaddl
mov
cli
or
dec
addb
hlt
popf
dec
pusha
dec
mov
pop
inc
mov
add
xor
pop
rcrl
cmp
loopne
inc
xchg
cmp
repnz
sub
jge
jo
jbe,pn
sarl
cmovg
mov
stos
pop
push
ljmp
sti
dec
lahf
cmp
outsl
push
dec
bound
repnz
test
sub
hlt
mov
mov
xor
jge
lds
into
mov
movsb
nop
pop
jbe
ja
imul
xor
dec
mov
movsl
pop
push
imul
jbe
cmpl
adc
dec
insl
bnd
xor
add
xor
adc
or
mov
jle
jo
sub
inc
insl
jne
ja
cwtl
shl
jmp
leave
and
addb
mov
dec
jo
xor
insl
mov
scas
cltd
imul
nop
movsl
add
clc
push
cmp
sbb
mov
insl
ss
and
jbe
lock
mov
xor
popf
sub
push
dec
xchg
inc
inc
adc
inc
and
orb
mov
ss
inc
push
pushl
push
jae
push
lcall
adc
cmp
and
lret
test
lods
xchg
dec
out
scas
addb
cmp
cli
mov
rolb
dec
mov
inc
and
test
mov
add
jo
lds
imul
cmpl
jo
mov
pop
cli
sub
push
sbb
inc
or
data16
mov
insl
fwait
jmp
ljmp
jo
mov
into
popf
jne,pt
jl
lret
movsl
sar
shlb
dec
ss
ret
pop
fcmove
xchg
push
fwait
mov
mov
inc
jae
inc
pop
jl
ss
mov
cmp
jp
push
jmp
ret
lock
xorb
sbb
pop
scas
popf
inc
mov
sbb
mov
mov
jo
lahf
mov
jns
xchg
in
ja
cmp
lods
mov
fdivl
xchg
sbb
int3
dec
add
repz
push
lcall
pop
outsb
and
dec
pushf
out
xor
jb
pop
cld
fwait
repnz
adc
jne
push
insl
scas
idivb
mov
sub
push
fwait
es
cwtl
jno
jb
movsl
sub
pushf
adc
or
and
dec
fs
mov
mov
nop
sbb
adc
pop
push
pop
lret
xor
mov
xchg
push
mov
mov
pop
aas
lds
mov
scas
inc
inc
out
or
sahf
inc
mov
mov
fwait
cmpsb
push
inc
push
push
push
in
jbe
mov
jnp
push
xchg
mov
jb
fwait
div
push
out
int
cli
inc
jnp
scas
cs
sub
movsb
loop
sahf
cmp
int3
fs
out
pop
imul
test
sub
call
inc
outsl
shll
pop
dec
or
or
or
ja
mov
mov
mov
jp
fcomip
out
rorb
jbe
imul
mov
ret
push
jne
repnz
push
shrb
push
jbe
jg
movsl
mov
jo
push
stos
mov
shrb
push
cmpsb
dec
push
inc
shrl
mov
je
aaa
mov
insl
movsl
les
pushf
push
test
enter
adc
cltd
adc
ds
jo
ja
ss
xchg
je
es
mov
mov
shlb
push
outsb
lret
repnz
adc
mov
rcr
pushf
cltd
jo
repnz
outsb
shlb
test
movsl
mov
not
add
sub
xchg
jo
aaa
imul
add
jo
jp
pop
lods
movsl
cmp
sub
in
out
jns
or
or
dec
push
jmp
insb
mov
jo
aad
outsb
in
lret
inc
mov
push
ret
xchg
adc
fwait
insl
inc
decb
lock
cmpsb
pop
insb
xchg
fidivrl
dec
cltd
and
pop
in
xchg
mov
int3
andl
ds
or
push
popa
jp
cld
sub
xor
mov
gs
in
push
sbb
jp
dec
mov
cld
pusha
ss
mov
ds
jp
mov
jo
cmc
pop
inc
fwait
in
ja
adc
adc
lock
out
sahf
or
movsl
lea
xchg
push
test
mov
mov
sub
inc
pop
sub
popa
dec
es
add
push
pop
in
idivb
ds
jp
cs
push
mov
inc
or
push
out
jp
xchg
push
and
mov
stos
jle
adc
into
lret
push
mov
cmp
dec
sub
push
lock
add
mov
and
sub
push
inc
adc
adc
inc
movsl
mov
outsb
and
adc
js
sbb
jo
loope
movsl
adc
aam
push
jo
stc
notb
adcb
jns
pop
aad
incb
jb
mov
fsubrp
int3
jo
xlat
movsl
es
mov
gs
out
aas
sub
push
xchg
loop
add
mov
push
notb
pop
inc
test
pop
jo
lods
loop
mov
add
add
cmp
jg
mov
sahf
call
inc
testb
cli
lock
jge
xor
push
je
outsl
xor
push
inc
movl
cwtl
popf
jbe
xchg
or
mov
cmc
call
jo
and
cmp
stc
mul
push
cmp
add
sbb
loope
lds
xor
and
mov
mov
lock
or
jnp
adcb
ss
adc
mov
cmp
movhps
dec
scas
jle
ja
in
or
lcall
cmp
clc
jo
into
andb
ror
inc
jo
dec
shrl
sahf
pop
mov
lds
rorb
pop
mov
push
push
lret
out
test
jo
sub
sar
mov
jbe
hlt
mov
xchg
xchg
mov
out
out
add
and
daa
inc
aas
mov
jge
mov
in
adc
popf
shl
test
jo
sbb
fucomip
or
jo
inc
aad
add
fisttpl
or
inc
dec
inc
sbb
lahf
shll
mov
pushf
sub
sub
jo
addr16
mov
ja
push
jns
outsb
mov
or
rolb
xor
inc
jno
push
cs
out
push
bound
xorb
xchg
nop
sbb
shlb
jge
push
inc
int
dec
cmp
jo
iret
ss
movsl
add
imul
int
xor
mov
inc
and
and
data16
cltd
inc
mov
inc
xchg
hlt
xchg
inc
xchg
and
dec
push
xchg
lret
sub
mov
inc
fildl
mov
add
sbb
jo
movsl
cli
imul
in
sahf
pushf
repz
jl
inc
test
inc
lret
cli
repnz
inc
add
les
pop
jae
dec
cmp
push
push
mov
mov
mov
pop
xor
sbb
mov
test
insl
mov
mov
stos
addr16
int3
jae
test
adc
fwait
dec
cmpsb
mov
je
dec
jns
idivw
mov
incb
std
xchg
jo
inc
dec
pusha
test
lcall
jo
sbb
jmp
pop
cmp
jae
add
sub
push
jnp
test
cmpsl
and
mov
and
xor
sub
jb
xchg
push
jl
jle
xlat
ret
mov
lcall
mov
jae
jl
test
adc
dec
jnp
leave
outsb
ja
xor
fisttps
outsl
xchg
div
jle
lcall
dec
cmp
insl
sbb
int3
movsl
popa
inc
jl
mov
enter
test
scas
fwait
into
push
pushf
jmp
adc
test
jae
dec
arpl
cwtl
mov
shrb
xchg
mov
sahf
lds
push
push
pop
int3
insl
inc
pop
add
adcl
jo,pn
cli
insl
mov
jo
sarl
add
mov
or
lods
mov
inc
outsl
xchg
jo
mov
mov
push
int3
jo
xor
inc
ds
or
scas
jg
sub
push
dec
rcrb
mov
sbbb
xchg
lods
mov
add
push
enter
ret
xor
jo,pn
imul
ja
pop
pop
test
jge
or
dec
mov
dec
mov
imulb
loop
xor
fidivrs
jae,pt
cmpsb
inc
cmp
mov
mov
loope
out
scas
mov
mov
dec
ja
bound
jmp
mov
int
loop
mov
push
cmpsb
test
movsb
pop
mov
shl
push
sbb
outsb
mov
pop
nop
dec
fldcw
jae
lods
dec
cmc
pop
push
mov
push
sbb
jo
cs
xlat
rcll
xchg
lock
icebp
ret
movsl
test
push
sub
inc
mov
adc
cmp
rol
push
jo
sub
add
mov
lods
lds
inc
jo
subl
mov
hlt
jmp
insb
movsl
pop
xor
sub
and
and
jo
fdivs
jo
adc
lods
insb
lcall
cltd
pop
xchg
shll
enter
jo
fiaddl
scas
stos
push
iret
cmp
nop
lock
std
pop
xchg
jae
loopne
push
enter
and
iret
jmp
roll
out
loop
imull
jo
pop
ret
into
or
shlb
dec
mov
pop
mov
xchg
and
shll
adc
jo
mov
test
jo
add
lea
mov
mov
pop
pop
cmpsl
cmp
xchg
jmp
jo
dec
push
inc
dec
fs
xor
cmpsl
push
xchg
mov
jo
cwtl
xor
jo
movsb
test
mov
outsl
loope
subl
pop
adc
negb
cwtl
cmp
into
ret
push
xor
in
test
jo
pop
inc
rcrl
shl
fdivs
idivl
test
pop
push
xchg
std
push
jo
in
rclb
imul
jp
jle
and
enter
add
arpl
in
lret
and
lods
loop
jo
and
cmc
and
jo
mov
mov
mov
jo
adc
pop
push
jo
or
xor
mov
mov
test
inc
or
jne
fwait
lods
jb
xchg
lds
in
add
inc
insl
ds
movsb
fistl
or
insl
idivb
adc
jp
sub
pop
xchg
fdivrl
sbb
sbbl
fistl
js
ret
add
xchg
sti
ds
lahf
jl
pop
inc
push
or
addr16
pop
jl
lods
test
jg
sahf
add
in
out
add
test
xchg
insl
outsb
jns
jge
dec
mov
pop
cs
mov
adc
sub
push
jo
movsl
imul
iret
test
mov
jo
mov
ret
mov
aad
std
jo
popf
mov
fidivs
or
jae
mov
add
pop
jo
mov
mov
mov
or
bound
lret
jp
mov
sbb
xchg
loopne
ja
jns
cmp
add
add
ret
in
or
sti
adc
mov
xor
mov
movsl
xchg
mov
xchg
pushf
stos
add
inc
push
mov
mov
int3
jo
ds
lds
and
xchg
gs
or
lock
mov
insl
jne
popa
subb
add
jno,pt
push
jo
mov
jbe
call
ficoml
push
jo
sbb
xorl
push
rorb
sbb
mov
cltd
jbe
test
pop
std
test
test
loopne
mov
jecxz
stos
insl
pop
xchg
insb
addr16
mov
jp
test
inc
xor
push
cs
call
jae
repz
push
xchg
jns
xlat
add
les
cmpsl
je
imul
and
jo
or
iret
cmp
cmpsl
shlb
bound
xchg
jae
data16
pop
repnz
aaa
jne
fnsave
push
shll
add
jp
mov
push
out
jo
mov
test
cmp
in
jo
cmp
test
inc
mov
mov
push
or
push
bound
es
xor
mov
push
jo
dec
or
lret
pop
ss
enter
mov
lcall
fnstcw
mov
lods
jo
inc
inc
jne
mov
shll
movsb
insl
sarl
loop
push
or
out
jno
mov
mov
dec
xchg
pop
das
in
push
repz
dec
out
test
jg
pop
cmp
mov
adc
stos
jo
mov
jp
push
test
jo
dec
out
cmp
inc
je
add
mov
pop
mov
fidivl
lahf
lods
aas
jo
stc
insl
gs
fdivp
out
insl
xor
cmpl
jo
adcb
outsb
popf
sti
jge
pusha
stc
nop
in
or
pop
les
jo
sbb
xorb
jae
popa
xchg
xor
test
mov
and
outsl
inc
andb
popf
dec
xchg
xchg
mov
out
data16
jo
and
sbb
int3
lea
xor
jo,pt
cmc
mov
xor
inc
pop
sbb
xchg
add
out
and
leave
add
jo
cmp
add
jo
mov
push
movb
in
dec
scas
test
test
sbb
xchg
xchg
xor
mov
xorb
mov
rclb
cld
mov
fldenv
push
lret
mov
and
movsl
ja
test
mov
sti
mov
in
push
mov
dec
int
dec
shll
insb
addl
lret
test
je
add
push
rcrb
dec
faddl
js
push
cmp
jg
mov
mov
jo
pop
mov
imul
mov
cltd
push
jo
dec
xorb
sbb
or
daa
xchg
and
add
popf
in
dec
jo
inc
fwait
mov
mov
shll
push
sub
add
cli
shlb
cltd
enter
sbb
mov
les
daa
pop
xlat
pop
aad
mov
mov
mov
inc
cmpsb
icebp
jo
sahf
enter
sub
sbb
inc
test
lock
xchg
push
sbb
loop
notl
mov
ds
ret
loopne
out
sbb
jo
cmp
sbb
push
jo
mov
fnstcw
push
jl
pop
shrl
push
lds
stos
popa
jo
sbb
cmpsl
jo
dec
lahf
rorl
mov
lcall
imul
fadds
fcomip
push
jns
xor
jle
add
pop
cltd
mov
or
mov
insl
fdiv
arpl
sub
insb
cmp
fildll
inc
jbe
fs
push
cmp
push
lock
cmpsl
cli
insb
dec
push
lods
sub
ja
sub
push
lret
jns
mov
jmp
daa
cmp
xchg
pop
and
js
popa
lea
jae
mov
je
ja
int
jg
xor
jo
inc
sbbl
pop
lea
out
fcomi
stos
movsl
leave
and
bound
adc
sahf
push
test
cs
shlb
pop
mov
cli
cmp
lahf
sbb
out
cmc
jo
add
lods
xor
xor
cltd
mov
mov
out
dec
pop
stos
or
fldcw
std
and
or
out
jbe
sbb
rorl
into
fwait
testl
sbb
addr16
pop
jo
mov
jae
jl
add
movsb
mov
push
lods
shl
and
pop
xlat
fistpl
sub
ds
pop
jnp
jo
xchg
int3
mov
pop
push
lods
xlat
mov
pop
xchg
xor
ja
fdivrs
push
iret
pop
inc
jae
adc
jo
sbb
add
cmp
ja
lret
jns
mov
leave
das
fdivs
lods
sahf
out
dec
mov
sub
jb
sbb
jo
mov
std
mov
adc
inc
shlb
xchg
subl
aas
decb
mov
jo
sub
scas
mov
or
jo
enter
lahf
jo
fcmovb
movsb
lcall
mov
xor
pop
cmp
or
lcall
inc
rcll
xor
pop
jo
subb
lcall
push
in
call
xor
cmc
popf
xchg
fwait
lods
mov
addr16
shll
xor
bound
and
call
push
lds
arpl
test
inc
divb
push
jb
xchg
test
cltd
lret
sub
fcmovnu
push
jmp
adc
xchg
aam
les
rcr
lahf
push
jl
out
and
mov
or
imul
popf
xchg
xlat
pop
dec
jo
rcr
pop
fdivs
lahf
ret
nop
out
xchg
lea
or
mov
push
jo
dec
in
cmp
outsb
add
imul
mov
insb
std
push
dec
mov
arpl
xchg
mov
test
popa
xor
imul
inc
xchg
sub
cmp
gs
cltd
rcrl
jo
and
fcmovnu
dec
xchg
out
jo
ficompl
pop
sahf
xlat
and
jp
movzbl
repz
fisubs
jo
rorl
mov
out
xor
lahf
cmp
ss
mov
fcomi
ja
mov
in
mov
jo
lahf
pop
mov
lods
ret
sub
repz
movsb
push
jns
pop
mov
ja
ret
xor
popf
loop
jo
mov
inc
ss
les
lret
and
add
fimuls
lock
cmp
jle
mov
lods
shrb
and
aaa
xor
cltd
push
cmp
hlt
xchg
add
dec
icebp
sarb
and
jl
xlat
inc
stos
xchg
rcl
jae
jnp
cmpsb
mov
xchg
and
call
mov
fidivl
xor
lds
add
fldcw
ret
stos
jo
and
mov
mov
or
lods
je
gs
sub
sbb
inc
mov
jno
dec
aaa
add
mov
mov
jo
or
lret
lahf
jge
bound
mov
bound
outsb
jae
xor
test
pop
mov
aam
nop
cli
mov
sub
add
adc
inc
stos
add
inc
nop
test
es
rcrl
sbb
test
xchg
jo
inc
or
stos
sarl
addr16
xchg
sub
or
fmuls
xchg
jp
ja
push
jl,pt
das
adc
push
mov
jo
mov
jae
movsl
push
jp
cmc
adc
mov
lea
ljmp
out
jo
jg
mov
bound
int3
insl
cmp
loope
mov
mov
mov
flds
jo
pusha
addl
fwait
pop
push
movsb
jg
sub
cmp
inc
dec
mov
push
not
lock
hlt
jo
pop
push
lret
push
pop
int3
mov
xchg
jbe
fucomip
pusha
inc
scas
and
xorl
xchg
push
dec
inc
jbe
sub
pop
insl
xchg
mov
pop
cmp
dec
repz
pop
cwtl
sub
jo
testl
jnp
das
mov
sbb
sbb
mov
cmp
sbb
sti
cmp
dec
out
lea
push
add
test
enter
mov
mov
xchg
jg
fdivrl
gs
sbb
pop
jno
in
mov
jo
test
xchg
lea
mov
mov
jo
and
cmpsl
jo
push
xorb
fistpll
mov
insl
int3
push
not
scas
push
test
pop
jp
loopne
jge
ss
jg
cwtl
jno
add
inc
test
out
shll
mov
sbb
cwtl
cmc
jo
mov
lods
mov
pop
and
add
push
mov
and
pop
lret
adcl
push
jo
lds
push
push
sbb
dec
leave
add
jbe
xchg
xor
lds
lahf
fldenv
push
shrb
movsl
into
push
xchg
jo
mov
mov
test
mov
jb
mov
stc
adc
xchg
sbb
mov
or
inc
arpl
push
pop
adc
mov
add
pop
inc
mov
jo
fsts
nop
cli
xchg
mov
lds
sarb
test
inc
loope
or
icebp
dec
push
jg
into
enter
cli
popf
lea
inc
dec
adc
ficompl
pop
movsl
push
mov
test
lea
xchg
test
dec
xchg
cmp
jo
ret
and
subl
fsts
push
insb
lcall
sbb
cmp
mov
fstp
iret
roll
xchg
jo
xor
outsl
divb
mov
test
jo
mov
test
mov
cmc
inc
mov
or
jo
insb
adc
inc
sbb
pushf
pop
fdivs
lea
xchg
push
add
js
sarl
inc
mov
mov
jle
iret
lods
fwait
jae
mov
pop
test
inc
lds
mov
or
ret
and
shlb
aad
icebp
pop
bound
xor
das
ss
xor
fistps
insl
fmul
mov
xor
insb
pop
inc
shr
dec
dec
jle
cld
nop
jecxz
test
sub
jp
mov
dec
sub
jp
sarb
mov
sub
jg
mov
lret
mov
insl
inc
and
xchg
mov
movsl
jo
lahf
scas
sbb
push
je
pop
sti
mov
ret
orl
test
arpl
mov
cmpsb
bound
adc
jne
jmp
xchg
shll
addr16
add
cmp
and
mov
push
mov
adc
je
ss
jo
dec
ds
push
mov
cltd
shrl
mov
mov
fcmovu
push
xor
xchg
jbe
std
in
test
jo
mov
jo
push
loop
jnp
loopne
jo
mov
fidivrs
int3
jo
mov
fldcw
sahf
cmp
inc
enter
add
ret
sub
cmp
mov
jo
clc
sbb
sbbl
hlt
inc
jb
jo
push
and
movsl
dec
xchg
mov
insl
mov
xchg
jbe
jo
movsl
test
movb
leave
cmp
not
xor
pop
cld
jo
inc
aad
lret
lods
push
lcall
adc
imull
mov
sbb
jo
or
inc
repnz
arpl
scas
fdivs
adc
inc
shlb
ljmp
mov
xchg
dec
ja
stc
loop
test
jp
add
mov
adc
push
cltd
mov
les
subb
mov
jo
js
aad
addr16
pop
bnd
sub
or
nop
or
jo
dec
dec
xor
fnsave
outsl
cmp
jnp
cwtl
sub
test
lds
mov
xchg
mov
mov
xchg
insl
int
or
fists
or
insl
dec
or
pushf
mov
jo
sbb
ds
cltd
jp
lcall
pop
jo
movsb
pusha
ror
orb
jns
push
jo
sahf
les
ja
sti
nop
xorl
cwtl
sub
jo
add
or
jo
popl
iret
movsl
arpl
sub
lret
lret
xchg
push
inc
jae
repz
outsl
cs
je
ffreep
mov
das
push
rorb
addr16
int3
jo
sbb
mov
inc
push
inc
inc
mov
push
lea
cmpsb
push
push
cmp
and
imul
cmp
mov
stc
pushf
jo
loope
mov
mov
ja
jg
cmc
lds
loopne,pt
mov
dec
jmp
test
addr16
shlb
negb
jo
sbb
xchg
je
xor
mov
pop
lods
mov
loope
sbb
ja
mov
mov
loop
lds
or
jno
andl
testb
pusha
add
or
push
int
pop
loop
jo
movsl
mov
jo
inc
sbb
fwait
and
enter
lahf
scas
and
mov
std
retw
jg
insl
jmp
loop
adc
jo
xor
sbb
adc
add
mov
enter
pop
lcall
or
lock
mov
cmpsl
mov
jb
and
push
lahf
shl
mov
sbb
push
mov
push
leave
jp
jnp
lock
mov
outsl
mov
xor
xchg
pop
mov
mov
mov
fisttps
push
enter
cmpsb
popf
aad
push
mov
mov
nop
cltd
adc
mul
cmpsl
xchg
pusha
out
jmp
pop
dec
int
into
pop
xorb
or
lahf
stc
and
ds
mov
xor
andl
divb
mov
sbb
das
test
ja
jae
mov
lea
xchg
mov
inc
ret
rcrl
out
jo
xchg
test
mov
pop
out
lret
fstpt
and
pop
sbb
rcll
xchg
cmp
sbb
testb
mov
repz
pop
outsl
fists
pop
stc
or
jo
sub
lret
xchg
inc
mov
out
jp
mov
adc
fstps
cmc
out
mov
inc
mov
negb
cld
xor
sub
aas
shr
jo
xchg
jecxz
inc
stos
ficompl
lods
push
lahf
cli
pop
test
sub
mov
leave
outsl
movsb
dec
sub
hlt
loop
mov
dec
inc
adc
sub
int3
outsl
jge
xor
lods
mov
cltd
sub
stos
mov
lret
pop
mov
mov
xchg
xlat
hlt
xchg
mov
js
cmp
jecxz
add
or
addb
ja
negb
iret
pop
cmc
insb
or
xchg
scas
shlb
lods
mov
push
lcall
push
jnp
dec
jl
jo
dec
xchg
or
xchg
ja
cltd
stc
jmp
dec
push
or
and
add
adc
mov
stos
ja
push
stc
inc
jns
call
lods
inc
loop
jo
jb
cs
cli
int3
jge
pop
pushf
icebp
xor
mov
mov
jo
fnstenv
cmpl
mov
scas
xchg
xor
leave
cmpsl
dec
in
jo
mov
out
imul
lds
lret
insb
stc
add
imul
xorb
sbb
rcrb
jnp
jo
or
xchg
bound
in
mov
sahf
jge
adc
and
ljmp
jo
das
inc
pop
loope
inc
icebp
push
jo
imul
jo
cmp
mov
jle
jo
push
mov
xor
and
mov
insl
xchg
fldcw
or
adc
push
jp
loopne
les
jp
pop
jecxz
mov
lahf
test
jo
aad
stc
inc
push
jne
jp
in
jg
xor
jae
dec
negb
jno
jne
imul
lret
fld
not
ret
inc
in
jae
pop
mov
lods
mov
inc
cmpsl
mov
icebp
test
fwait
popa
push
dec
jge
push
jo
inc
or
dec
jo
mov
cltd
push
ja
or
push
and
insb
lods
dec
cltd
lock
push
test
mov
lcall
std
ret
pop
add
sbb
jo
sub
dec
mov
mov
js
add
adc
lods
arpl
pop
ja
fidivrl
rclb
dec
inc
jo
mov
inc
mov
mov
dec
mov
sbb
fbld
cwtl
jo
lahf
ljmp
cmpsb
push
and
nop
jecxz
insb
jg
lock
idivl
pop
loopne
jo
mov
or
xchg
add
popa
aam
jo
mov
cs
dec
push
xchg
lock
jmp
movsl
jp
ja
mov
test
lods
xchg
data16
adc
cmpsb
jle
jo
jb
divb
icebp
addr16
scas
mov
jo
pop
mov
and
or
lahf
insl
pop
add
mov
xchg
js
sbb
jo
arpl
fisttps
rol
jo
leave
xor
cmp
add
xchg
and
fmulp
mov
jo
mov
test
lret
and
jno
mov
mov
fucomi
shll
jo
das
jmp
leave
jo
and
pop
push
jo
loope
cmpsb
push
negb
jo
das
adc
dec
xor
sub
out
jo
outsl
cli
pop
jge
test
insl
mov
lret
xlat
cmp
in
adc
jl
inc
pop
mov
mov
gs
push
sub
cltd
add
adc
xchg
jo
mov
iret
nop
xorl
out
lods
jns
adc
xchg
std
fwait
jae
fsubs
popf
xchg
xorl
inc
xchg
inc
jo
mov
mov
out
fidivl
pop
xorl
ja
std
repz
pop
shl
movsl
lcall
cmp
jge
ret
movsl
jo
xchg
mov
cmpsb
jo
scas
pushf
mov
jp
adc
fidivrl
ret
jo
movsb
outsb
jbe
xor
and
pushf
je
cmc
fwait
jo
and
push
arpl
sbb
enter
jo
xchg
mov
cmp
jae
pop
sbb
outsb
cmp
jo
xchg
xlat
push
daa
scas
jl
jo
vmovaps
shrb
lea
jo
ret
mov
jo
ds
inc
aaa
clc
jo
cwtl
inc
sbb
fwait
test
popf
mov
movsb
fisubl
jo
outsb
adc
repnz
mov
call
mov
dec
xchg
outsl
adcb
mov
insl
jbe
push
imul
test
jo
loop
pushf
pop
movsb
mov
jo
jmp
pop
lods
lods
fnstcw
pop
fwait
inc
inc
and
sbbl
leave
std
sti
and
jo
les
or
mov
jp
mov
jo
cmc
dec
mov
push
hlt
cmpl
adc
lods
cwtl
jo
in
insb
pop
mov
cmp
ja
lcall
mov
mov
test
jnp
inc
sbb
ret
mov
sbb
repnz
jno
jbe
hlt
in
in
mov
lcall
cmpb
cmc
pop
xorb
gs
cmp
cld
mov
jns
adc
jo
mov
xor
mov
adc
and
jge
lahf
jo
jb
xchg
mov
adc
jo
push
xor
imul
cmp
fnstenv
arpl
jo
stos
inc
jae
sahf
mov
jo
imul
jo
push
int
out
ds
jo
fwait
cmp
stc
cmp
lock
jo
pop
popf
dec
lret
mov
jo
adc
aas
jo
pop
in
mov
dec
push
insl
push
std
stos
mov
pop
and
les
adc
fidivl
lahf
mov
shll
lea
jbe
fimuls
jne
xchg
add
jge
adc
cs
lret
mov
cmpsb
orb
adc
or
xor
fpatan
jle
scas
push
ror
mov
adc
sbb
inc
fwait
add
insl
add
xor
jae
jecxz
adc
or
das
gs
dec
xchg
jg
sbb
xchg
js
push
in
in
push
cmc
icebp
ret
loopne
outsl
les
inc
insl
jle
xor
ja
out
push
shlb
les
fs
adc
adc
jo
stos
jb
popa
movsl
add
jo
mov
sub
jo
push
lds
test
jle
jae
jg
mov
sbb
xor
cmc
adc
aaa
jo
or
data16
add
mov
scas
ss
int
jmp
test
outsb
dec
mov
lods
mulb
movsb
out
jne
in
xor
jo
xchg
cld
or
daa
sbb
je
push
test
sti
lahf
push
push
cmp
push
jo
test
clc
pop
ret
and
xlat
add
jo
enter
or
lods
jo
cltd
xchg
inc
jne
add
fidivrl
fwait
mov
jmp
jo
popa
fisttpl
scas
test
into
jo
mov
icebp
bound
and
pushf
ficoml
ds
sahf
out
in
push
pop
pop
pop
dec
nop
pop
and
pop
mov
aaa
in
mov
push
jo
loopne
out
inc
xor
mov
rcrb
add
jo
cli
test
adc
es
jp
lock
mov
loopne
jb
xchg
ja
das
ss
cmc
xchg
cmp
sub
jo
outsb
or
jp
jno
cmc
nop
add
insl
inc
sub
test
mov
jmp
jo
mov
ficoml
push
inc
orb
jp
movsl
cli
mov
iret
adc
pushf
cmp
aaa
cmp
jg
push
push
fs
xor
push
repz
jo
in
fwait
sub
mov
push
push
push
and
pushf
jne
cld
pop
mov
jo
dec
aaa
push
insb
add
push
fwait
xchg
cs
mov
ret
and
test
push
cmp
push
fwait
ret
mov
xor
dec
add
jo
or
arpl
mov
outsb
or
addl
jo
push
mov
cwtl
ret
pop
push
fwait
lds
inc
into
jo
lods
das
xchg
stos
or
jo
in
and
jg
movsb
insl
dec
addl
pushf
mov
je
mov
mov
jo
push
repnz
pop
dec
sbb
pusha
inc
scas
into
mov
push
out
cwtl
enter
add
out
mov
push
aaa
std
mov
loopne
inc
dec
mov
pop
rorb
bound
sub
scas
pop
cmp
push
adc
cli
popf
arpl
aas
sbb
xchg
inc
es
ss
movsb
xlat
push
jle
jl
jo
js
pop
and
add
lods
xchg
xchg
push
sahf
stc
jo
mov
mov
insb
mov
jmp
pop
push
pop
out
daa
stc
ja
loope
xorb
jge
or
test
fildl
outsb
jo
and
pop
jae
mov
lret
adc
jae
rcrl
outsb
and
int
or
icebp
loop
mov
fwait
in
nop
lret
fstpl
fnstcw
push
sahf
inc
mov
jo
and
dec
ja
cli
jb
cmc
xchg
push
jp
push
insb
bound
xor
and
jg
pop
popf
andb
xchg
rcll
jo
dec
inc
fld
fisubrl
jo
test
dec
push
outsb
and
xchg
xor
in
fstpt
jle
stc
negl
ret
les
outsb
inc
xor
shlb
jmp
stc
pop
mov
and
xchg
mov
mull
mov
jno
int3
ja
mov
loopne
mov
std
ss
rclb
push
fnsave
les
ljmp
das
adc
mov
mov
xor
aad
cmp
ljmp
cmp
insb
xor
out
insl
jb
sub
pop
cmp
add
mov
xchg
xor
xor
jae
insb
jle
xchg
lods
out
test
or
jg
push
mov
and
mov
jo
repnz
addl
dec
sahf
jge
rcrb
or
mov
inc
scas
jp
adc
jae
mov
cmpsl
push
imul
repnz
jbe
mov
sbb
jmp
push
imul
xor
push
in
jmp
xchg
pop
or
and
fcmove
out
cmp
ljmp
shl
into
jo
sbb
push
lods
xchg
cmp
add
imul
mov
jne
xchg
inc
xor
ds
dec
in
shll
inc
ret
jo
xor
cmp
das
movsl
lock
jno
out
aaa
mov
mov
pop
test
sahf
movsl
jo
inc
xchg
jg
mov
jae
mov
call
pop
scas
or
xchg
sub
push
lock
inc
jo
scas
cmp
sbb
xchg
mov
pop
jg
or
test
mov
mov
sub
in
inc
xchg
lock
jae
mov
std
jb
and
sub
lods
xchg
xor
and
aas
add
mov
jo
mov
cmp
xchg
sub
jo
in
repnz
mov
test
inc
push
jo
mov
mov
sub
inc
addb
add
orb
pop
jne
lret
sub
addr16
and
test
fs
adc
and
sub
mov
and
inc
add
mov
ret
jo
adc
stos
mov
jo
xchg
add
cmpl
or
sbb
mov
das
mov
jo
pop
icebp
addr16
ret
test
mov
jo
sub
push
jo
push
rolb
push
inc
int3
test
pop
and
dec
jge
jo
dec
push
push
fsubp
jp
and
and
movsb
cmpsb
in
pop
mov
sbb
push
test
vpshufd
cmp
lcall
fcmovnu
mov
jo
movsb
out
mov
gs
jo
inc
cmp
inc
dec
ja
dec
mov
loop
pop
ja
rclb
insb
pusha
mov
insl
sti
dec
aaa
scas
ss
es
cltd
sub
dec
js
pshufw
and
shlb
jge
nop
cmp
pusha
jo
sub
pop
lahf
das
jne
movsl
cld
popl
mov
gs
int3
inc
jo
and
sub
cltd
jne
xor
push
mov
rcrb
jo
jp
sbb
int3
and
mov
mov
or
ja
imul
adc
ja
popf
dec
sahf
xor
mov
mov
inc
cmp
pop
in
xchg
pop
int
cmp
sahf
in
cmpsb
push
or
push
pop
xor
lock
mov
stc
lcall
jno
pop
stos
mov
in
std
mov
cmc
lods
mov
sbb
mov
ficoml
mov
jo
pop
add
push
fadds
mov
dec
popf
cli
jo
add
push
insl
scas
dec
pushf
fwait
xor
push
inc
push
ja
jl
sub
add
xor
lahf
into
and
outsb
movsl
outsl
test
xchg
jo
and
andl
or
clc
pop
push
push
inc
lods
jo
and
xor
std
fisubl
pop
or
cmp
nop
out
cmp
mov
popf
pop
test
push
xchg
dec
push
cld
add
fmull
mov
das
insl
pop
rcrb
add
sbb
jl
loope
ds
hlt
scas
nop
sub
jno
jecxz
lahf
out
or
and
popf
sbb
dec
adc
jo
mov
pop
and
push
mov
inc
or
jp
adc
lcall
mov
mov
fwait
jo
xor
addl
sbb
aaa
mov
roll
add
dec
test
lock
test
xchg
dec
xlat
mov
sub
jl
mov
jg
jo
pop
repnz
scas
stos
cmpsl
pop
jb
fidivl
daa
or
dec
fs
outsb
adc
push
mov
jp
shrl
popf
negb
fisttpl
pop
jae
cmp
xor
and
insl
mov
xchg
adc
mov
mov
jo
nop
lds
sbb
fidivl
sub
jp
or
popf
jo
fwait
mov
in
xorb
ss
jge
jp
cmp
mov
jno
mov
xchg
mov
sub
push
sbb
pop
fnstcw
cmp
jo
and
ljmp
cmp
jle
insl
jnp
dec
mov
inc
mov
mov
inc
mov
outsl
das
inc
add
enter
push
push
je
mov
pop
std
sub
mov
xlat
leave
fisttpll
jne
mov
lret
fwait
repnz
jae
mov
mov
add
push
fcoml
jo
xor
dec
dec
mov
xor
mov
cmp
fsubr
test
adc
cmp
lcall
mov
nop
inc
loopne
jo
fadd
test
adc
cmp
pop
push
ja
movsb
add
cli
les
add
sbb
cmp
dec
scas
jnp
fs
aad
aam
jo
cmpsl
shlb
jo
push
das
enter
movsl
insl
ds
cltd
and
jae
xor
xlat
cmp
mov
mov
dec
mov
fcompl
jmp
ja
pop
dec
jge
sbb
in
movsl
mov
jmp
ja
jae
jle
pusha
xchg
ja
xor
int3
jo
retw
push
out
hlt
jo
mov
cmp
rorl
mov
xlat
pusha
push
fistpll
mov
push
jno
movsb
inc
es
mov
adcl
dec
not
dec
bound
push
lock
cmp
lods
inc
ds
xor
pushl
and
adcb
dec
and
mov
mov
outsl
jne
mov
and
inc
mov
mov
loop
test
call
dec
stos
in
in
insl
scas
mov
subb
out
add
and
call
inc
test
stos
jo
rcrl
push
jo
or
push
cmp
xor
test
ja
ljmp
sub
push
jo
sbb
mov
pop
mov
fwait
cmp
out
jb
pusha
orl
dec
and
pop
stc
adc
push
mov
xchg
pop
ror
dec
cmp
lret
add
sbbb
fcmovne
jo
xor
enter
dec
mov
and
push
jo
or
dec
movsl
inc
jo
inc
daa
mov
inc
ret
dec
test
jo
dec
mov
sahf
xchg
imul
sub
jne
push
add
loopne
jo
pop
leave
xchg
daa
sahf
fs
insl
sbb
push
ljmp
lret
lahf
ja
mov
pop
mov
ret
ja
inc
xor
sbbl
inc
xor
mov
add
pop
sahf
leave
mov
pop
je
cmp
xor
jo
fdivr
and
ja
mov
add
outsl
rcrb
pop
push
xor
dec
loop,pt
jo
mov
adc
scas
outsb
test
ret
sarb
xchg
or
push
mov
stc
mov
xorl
mov
das
or
mov
mov
bnd
xor
std
jo
outsb
xor
pop
insl
sahf
lock
push
xchg
jno
insl
mov
sub
inc
es
jnp
cmp
push
jae
xor
lock
or
mov
lods
ret
cli
icebp
mov
and
sti
cmp
push
out
cwtl
jo
jnp
test
inc
sbb
out
rcr
pop
jo
cmp
orl
jo
pushf
add
inc
cwtl
cmpsb
or
lahf
sbbb
jl
and
cmp
cmp
sbb
cmpl
push
mov
mov
sbb
xor
xchg
cs
add
cmpsl
mov
xchg
pop
push
mov
daa
jo
ja
mov
pop
cmc
adc
lahf
nop
stc
loopne
pop
rorl
lock
xor
sub
int
add
ss
or
mov
ds
imul
xor
jo
test
mov
xchg
jp
movsb
les
js
mov
ret
dec
lret
sub
dec
gs
mov
jo
ds
cmpsb
les
arpl
dec
jo
sarb
jo
add
fistpll
or
jo
lock
mov
xchg
add
mov
adc
mov
insb
lock
jo
dec
mov
adc
mov
adc
in
jo
pop
ficoml
pop
lods
jo
lea
add
jo
test
cmp
cli
mov
stos
cmp
mov
jle
or
cmpsl
stc
mov
mov
leave
xor
or
or
mov
push
shlb
test
loop
cmp
mov
push
jo
sbb
fldenv
jl
lds
mov
movsl
iret
xor
mov
dec
jp
adc
jo
in
and
outsb
je
enter
cmp
lahf
push
push
pop
xchg
mov
sub
lea
jo
andl
push
ja
push
scas
add
jne
jo
sahf
loope
clc
dec
fdivr
jo
shlb
imul
sti
je
xchg
pushf
shl
add
or
aas
bnd
jo
shr
test
mov
lods
mov
cmpl
dec
or
dec
xor
xchg
fnstcw
jae
xor
pop
insl
add
add
mov
xorb
iret
mov
out
lea
inc
jo
xchg
shrl
mov
shr
and
pop
test
push
mov
cmp
int
push
mov
das
cmp
dec
jmp
movsl
or
nop
pop
mov
aaa
data16
jp
popf
loopne
pop
mov
jle
stos
lods
cmpsb
std
aas
divb
pop
iret
nop
mov
ja
jle
imul
cmpsl
pop
jo
mov
sbb
jo
or
dec
bound
loop
adc
iret
out
inc
jo
inc
mov
imul
ss
add
adc
mov
dec
jo
enter
push
mov
jae
mov
cld
mov
repnz
jg
push
test
push
mov
out
jo
arpl
andl
cltd
nop
cmp
mov
repnz
inc
int
sbb
mov
xor
jle
jle
jo
pop
mov
cli
jo
int
add
movsl
ret
stos
addr16
test
sub
out
mov
or
addr16
sub
jo
dec
aam
leave
pop
scas
or
mov
into
imul
dec
add
mov
mov
cld
int3
cmp
outsl
sbbl
in
xor
jo
mov
cmp
or
fimuls
clc
ja
push
inc
pop
pop
add
mov
xchg
push
mov
test
cmp
push
mov
ret
xor
push
movsl
rcrl
dec
pushf
mov
or
aam
outsl
xor
cmpsl
inc
and
lahf
mov
addr16
mov
jns
in
mov
mov
adc
pop
cwtl
repz
dec
adc
mov
pop
fnstsw
and
pusha
leave
jo
mov
xchg
jg
mov
pop
push
iret
out
ret
dec
jb
xorb
in
jg
push
adc
push
inc
xor
leave
lahf
imul
loop
adc
repnz
jle
and
iret
gs
int3
stc
cmc
or
lea
push
out
ja
iret
xchg
or
push
jo
loop
pushf
sarb
in
mov
inc
sarl
les
jno
aam
or
pop
shl
subl
mov
mov
pop
push
popa
sbb
jbe
cmp
lock
jo
out
inc
leave
xor
xor
sbb
shl
jne
jns
ljmp
xchg
mov
mov
jo
outsb
pop
bound
xchg
pop
mov
mov
mov
pop
enter
push
and
ja
mov
mov
jo
xor
jecxz
push
adc
mov
lret
jo
and
aaa
cmp
mov
push
xchg
jp
dec
aas
lods
aaa
lret
daa
fists
cmp
cwtl
ret
jo
mov
out
lret
mov
lahf
orl
xor
push
ss
jecxz
scas
cmp
jo
jg
lret
addr16
and
jo
fdivl
mov
int
lock
sub
loop
jns
xlat
jbe
jg
mov
adc
and
cmp
cmovnp
fstps
call
cwtl
pop
pop
jnp
pop
push
fldenv
jne
test
jo
mulb
pop
int3
cld
jae
popf
insl
push
xor
jg
sahf
js
adcl
and
loopne
or
jg
pop
bound
aam
jo
cwtl
sbb
mov
push
insl
pushf
mov
xor
mov
outsb
xchg
or
mov
cmp
ja
mov
nop
mov
test
in
xor
sub
mov
mov
lods
jo
repnz
cli
jp
jo
or
in
lret
loopne
mov
icebp
test
push
adc
inc
adcb
fnstsw
jo
out
subl
jo
xor
jo
mov
or
ss
push
xor
pop
xchg
cld
xor
stos
insl
push
sbb
jg
insl
fistpll
sub
jl
xchg
push
sbb
cmp
mov
lea
push
insl
test
push
xchg
pop
test
or
dec
enter
cli
mov
and
in
dec
dec
lret
rorb
std
jo
out
leave
mov
fistps
jge
sub
push
mov
mov
or
out
popf
cmp
adc
aas
jge
es
mov
add
jle
xchg
repz
push
mov
push
mov
sbb
dec
inc
jge
int3
xchg
lret
push
insb
in
pusha
std
test
mov
mov
data16
jae
cmpl
rorb
cmp
jbe
add
icebp
jns
mov
clc
idivb
or
insl
stos
mov
out
add
insl
popa
sub
xor
push
dec
sbb
pop
les
stc
xchg
jge
mov
pop
ss
fcmovne
mov
in
lods
lds
and
cmp
xorl
xchg
stos
jo
sbb
xchg
mov
xorl
pop
push
cld
jo
push
ss
mov
test
insl
outsb
scas
adc
jnp
push
or
xor
jo
mov
jecxz
arpl
pop
cmpl
jno
dec
xchg
ja
ss
roll
jo
out
and
adcb
outsb
std
icebp
outsb
push
xor
jo
dec
cmp
inc
jo
push
shl
push
sub
jo
and
jge
sti
or
mov
fldt
movsl
jo
xchg
ss
xchg
adc
add
and
xchg
add
scas
sub
sbb
into
in
enter
insb
sahf
sub
mov
fistpl
inc
pop
xor
sub
inc
ss
in
xchg
mov
jo
icebp
enter
dec
inc
jae
fwait
push
int3
or
pshufw
push
ds
lcall
aam
jle
jo
lods
adc
dec
insl
mov
sarl
filds
or
jb
mov
xchg
mov
pop
cmp
addr16
rorb
sbb
out
inc
dec
mov
mov
lret
fwait
roll
sub
pop
and
jge
loopne
cwtl
or
test
mov
dec
cmc
movsb
aas
ja
jne
lcall
arpl
jnp
lds
adc
fidivs
test
jnp
fldl
fnstenv
ds
jo
imul
and
xor
fucomi
cmp
mov
cmpsl
cs
int3
lahf
jo
or
dec
xor
stc
sarb
jg
inc
mov
js
imul
movsb
ss
mov
sbb
stc
jae
cmp
jo
and
sti
jo
add
pop
pop
lods
inc
inc
jo
fldenv
push
adc
fdivrs
jecxz
mov
add
sub
push
mov
pop
mov
dec
push
dec
test
mov
in
scas
mov
pop
xchg
push
jo
insl
int
es
push
jns
fisttps
in
sbb
divl
sbbl
scas
scas
lock
es
xchg
inc
xchg
pop
lock
sbb
mov
jo
leave
sbb
sbb
jo
fs
adc
lea
pop
jecxz
mov
dec
jo
pop
mov
out
fs
push
dec
push
push
lahf
dec
or
sub
jo
stc
sbb
jo
xchg
cmp
movsl
sbb
jo,pn
ss
mov
je
and
add
ja
mov
jo
mov
sahf
scas
jge
lods
push
mov
in
adc
lock
mov
push
pushf
or
sub
mov
loop
inc
cwtl
sbb
xchg
dec
jo
mov
stc
mov
push
pop
insl
or
test
sub
std
jp
ja
jp
call
cmp
mov
push
dec
nop
bound
pop
ja
nop
in
sbb
mov
mov
mov
repnz
sbb
fs
xchg
mov
shrb
lret
jo
outsl
and
jl
mov
inc
sub
xor
mov
nop
sub
jge
and
imul
sub
jo
add
bound
push
mov
fchs
jo
add
xchg
pop
jo
adc
push
test
cmp
ret
movsw
mov
mov
mov
cmc
imul
inc
jo
dec
movsl
ret
ror
jae
push
lods
sbb
clc
test
dec
mov
adc
and
jo
repnz
pop
push
mov
jmp
xchg
mov
xor
jo
fdivrl
xorb
dec
int3
jl
lock
pop
push
rolb
testb
push
nop
pop
or
rclb
jae
leave
popf
loope
push
jo
inc
cmpb
jns
and
rclb
repz
sub
jo
stc
sub
ljmp
popf
mov
ja
ljmp
call
cmpsb
aam
add
jo
fistpll
dec
dec
hlt
jo
aam
push
cmp
jo
mov
je
lods
lods
ja
sbbb
mov
mov
jne
jns
sub
adc
xor
mov
jo
lds
repz
lcall
in
ficoms
xorl
ds
outsl
pop
testl
test
in
push
xor
stc
jle
pop
ja
mov
lea
pop
jno
mov
cmp
cwtl
add
test
push
data16
js
adc
adc
dec
outsl
and
lret
xorb
mov
jmp
mov
aad
subb
mov
test
jo
enter
xor
dec
mov
scas
cld
push
mov
jo
push
mov
int3
dec
das
sbb
add
xlat
mov
cs
inc
ficompl
jo
and
addr16
mov
into
bound
test
in
lods
mov
lret
ss
hlt
mov
xchg
dec
jb
mov
and
enter
lahf
and
mov
aam
mov
pop
jns
decl
jbe
inc
lods
push
lock
sbb
jae
ja
adc
xor
dec
imul
mov
push
cld
test
xchg
stos
add
sahf
push
daa
jo
dec
lcall
jae
adc
xchg
xor
pop
or
xchg
outsb
mov
outsb
cmc
loop
nop
dec
pop
jne,pt
in
stos
lock
inc
sub
inc
clc
je
mov
sbb
mov
shlb
cltd
or
xchg
inc
out
je
gs
inc
mov
xchg
fwait
jae
xor
lods
jmp
jo
pop
jg
mov
in
mov
nop
ficoml
xor
enter
jo
inc
sahf
cmp
outsb
dec
pop
and
cmpl
test
jo
or
mov
call
jo
xor
movsb
cmpsb
adc
adc
jo
lahf
and
jo
xchg
lret
cmp
jae
es
xor
xchg
rorl
push
xchg
iret
jae
repz
popf
cmpb
jo
fs
pop
cmpsb
notb
push
fwait
jo
mov
and
mov
cmp
out
mov
aaa
push
insl
push
push
ja
cltd
xor
add
push
pop
dec
in
mov
xor
enter
mov
sbb
and
ret
or
mov
adc
shl
jg
dec
out
xchg
jo
fdivrs
fidivl
inc
iret
rorl
cmpsl
fwait
pop
xor
mov
xor
stc
mov
loope
dec
xchg
mov
jo
mov
xchg
subps
insl
inc
lret
faddl
inc
data16
push
or
mov
add
inc
xchg
or
popf
gs
push
sub
fisubrs
jl
orb
adc
jo
roll
add
push
je
mov
xchg
cmp
into
mov
xor
xchg
les
xchg
lds
aam
loop
lea
or
lods
fcmovne
out
mov
mov
shrb
movsb
enter
mov
push
adc
dec
pushf
push
jge
or
dec
sbb
jecxz
sbb
add
mov
fdivrs
or
jo
cmpsb
xor
insl
out
sub
insb
outsl
adc
movsl
jo
cmpb
jo
and
jae
shlb
scas
dec
lock
out
out
sahf
cs
sbb
shlb
pop
data16
scas
ja
pop
mov
mov
orl
mov
in
jge
add
jae
push
nop
outsl
jbe
jae
cltd
fdivs
in
and
xorl
xlat
mov
mov
inc
and
add
movsl
mov
jo
xchg
test
mov
xchg
jo
loop
mov
pop
mov
pusha
outsb
inc
or
pop
fcmovb
ss
and
icebp
mov
clc
subb
and
mov
arpl
cmp
notb
cmp
fnsave
enter
clc
test
mov
les
jno
jo
mov
sub
inc
cli
inc
popf
out
daa
or
jo
or
cmp
pop
fisubrl
not
fidivrs
sarb
test
lock
arpl
movb
out
jo
mov
jo
lcall
jo
mov
jno
pop
pushf
add
jo
in
mov
push
cmpsl
sbb
dec
inc
jno
shr
dec
mov
push
jo
mov
lret
add
and
mov
jns
sub
sahf
jo
lret
imul
aas
outsl
pop
and
xchg
adc
shll
aas
push
push
sahf
int3
push
jo
lock
xor
mov
dec
fidivrl
push
push
enter
jnp
mov
inc
divl
inc
gs
lock
dec
imul
add
ret
sub
pop
dec
movsl
or
jo
imul
je
call
out
push
out
mov
lea
popf
mov
jae
xchg
or
test
jo
xchg
inc
jns
sbb
iret
jbe
jg
fidivs
and
test
out
jle
sub
mov
sbb
fsubs
pop
imul
mov
add
pop
lret
int3
rclb
lret
push
pop
mov
repnz
mov
test
int
insb
outsl
fs
ljmp
jae
add
dec
mov
push
and
inc
cltd
mov
sbb
pop
mov
aam
mov
insb
jb
xorb
es
test
jo
adc
and
addl
mov
loop
test
adc
sub
jae
cmp
out
cwtl
xchg
shll
sub
and
jo
repz
iret
sub
lea
int
jge
and
and
jo
sbbb
mov
ds
je
mov
jno
jmp
dec
pop
ja
cltd
mov
mov
pushf
xchg
insl
clc
lret
ja
sub
sar
nop
mov
push
or
pop
adc
push
xchg
insl
xor
jns
xchg
test
pop
fs
xchg
add
scas
loopne
pop
pop
sub
lock
int3
inc
fs
inc
add
aas
push
jo
adc
add
mov
rclb
ja
or
sub
clc
push
xchg
hlt
jo
mov
subb
jno
lahf
mov
jle
jg
mov
lea
adc
jae
fildl
mov
nop
xchg
cmp
jo
popf
cmp
or
jo
lret
mov
les
mov
bnd
test
inc
xchg
shlb
jo
jge
adc
imul
push
inc
and
or
shl
scas
addl
jo
pop
scas
xchg
dec
cmpsb
or
movsl
mov
das
popf
scas
insl
inc
iret
jae
pusha
ljmp
jo
xchg
stos
adc
jg
cmp
mov
pop
push
jo
mov
int
jl
sub
incl
cmpsl
loope
repz
fidivrl
bsr
shl
dec
dec
xchg
dec
pop
loopne
imul
sti
jo
mov
mov
lahf
jp
inc
dec
divb
es
xor
js
pop
outsb
fcoml
xchg
popf
addr16
mov
insb
nop
mov
loopne
inc
push
jg
jo
out
lds
jo
pop
pop
rcll
mov
mov
mov
ja
and
in
add
mov
jecxz
pusha
mov
and
add
psraw
ss
out
js
ja
lahf
and
inc
mov
out
adc
or
and
sbb
jo
negb
mov
sbb
and
and
dec
incb
cmp
jo
push
movl
cmp
dec
mov
cmp
jne
int3
loope
jo
test
add
shll
lret
adc
in
push
lahf
cs
cmc
int
lods
dec
push
test
xchg
gs
lret
xchg
mov
enter
lds
out
inc
jo
loopne
cmc
es
mov
in
xchg
add
ror
jae
sub
push
xchg
pop
ret
insl
mov
sbb
pusha
and
out
xchg
jecxz
popf
jo
cmp
in
jo
and
inc
inc
cli
aam
jno
and
ss
imul
mov
jae
mov
push
fwait
stc
loopne
add
mov
das
fsubl
adc
push
xchg
stos
leave
xor
jg
sbb
mov
add
sarl
mov
lock
test
cs
pop
jg
xor
faddl
push
push
mov
cmpsb
lcall
cmpl
push
imul
mov
lock
xchg
cli
cmpsl
lods
xor
in
lret
mov
clc
xchg
sbb
jo
les
push
jecxz
xorl
lock
rorl
testl
jo
lds
or
fcmovnb
or
or
gs
jo
fdivrs
push
jo
rcll
jo
mov
cmp
jo
cmp
ja
pop
sub
loop
and
cmpl
mov
cmp
add
pop
mov
lods
aas
mov
insb
and
adcl
fmul
je
mov
dec
adc
jo
push
mov
in
decl
cmpsl
stos
ja
nop
sbb
pop
jle
aaa
xor
movsb
mov
or
add
cwtl
loopne
jp
rorb
mov
lods
xorl
int
jbe
cmpsl
mov
jo
out
xchg
jmp
xchg
je
clc
push
dec
jns
adc
xor
push
xor
repz
jmp
adc
pop
sub
jp
fbld
inc
jmp
jo
pop
or
mov
aad
call
jbe
jae
es
jmp
xor
adc
pop
jae
cmp
jecxz
stc
mov
push
add
dec
push
sti
mov
push
jmp
movsl
loope
ss
popl
sbb
out
fdivl
icebp
pushf
inc
mov
int3
dec
arpl
cmp
inc
rcrb
aad
lahf
lds
sarb
scas
dec
rclb
aaa
testb
arpl
inc
mov
adcl
xchg
cmp
ds
mov
scas
pop
add
mov
push
adc
dec
fisttpll
jmp
data16
pop
lods
lea
out
in
imul
testb
jae
pop
xor
xlat
nop
or
cmpsb
js
imul
xlat
mov
sbb
cltd
adc
dec
sbb
jo
and
mov
jp
dec
cmp
cmp
les
mov
add
stos
test
aas
sub
xchg
jp
divl
repz
lock
cs
decb
icebp
pop
mov
pop
sahf
movsb
inc
mov
push
les
pushf
jo
popf
fdivs
ret
cmp
lcall
dec
xchg
imul
mov
mov
test
lret
lahf
addr16
mov
pop
inc
xor
mov
xchg
jo
out
inc
jmp
lahf
push
cmp
add
fadds
sub
jo
fcmovne
adc
and
fldl2t
pusha
jo
movsl
lret
test
insb
inc
xlat
movsb
jo
mov
inc
andb
rcr
xor
jo
imul
jb
call
cmp
mov
or
mov
cmp
add
push
jo
jmp
mov
jo
fndisi(8087
sub
out
lods
jo
jbe
popa
leave
ljmp
aas
jo
into
xchg
mov
jo
push
scas
pop
popa
cwtl
mov
jo
add
out
push
je
push
jo
jp
cmpsb
popf
fstpt
and
mov
test
xorl
adc
push
fcomps
pop
add
sbb
mov
jae
cmp
pusha
dec
mov
jo
movsl
mov
cmp
cwtl
aam
sub
sarl
mov
or
mov
in
sub
divl
mov
jo
pop
cld
cmpsl
mov
jo
push
add
out
leave
les
cmc
repz
dec
dec
jo
hlt
cli
mov
cmp
scas
jo
mov
stc
adc
and
icebp
xchg
sbb
test
xlat
cmp
out
je
je
push
mov
xor
jge
orl
iret
and
divl
lcall
add
inc
add
sahf
in
insl
leave
test
adc
pop
xor
and
es
pop
mov
mov
adc
icebp
dec
in
lret
movsb
dec
xchg
push
xchg
push
addr16
call
xchg
mov
loopne
lods
mov
lret
lock
pop
sbb
mov
outsl
pop
rcrl
push
sub
adc
xor
jo
or
xor
mov
inc
out
jo
sub
int3
xor
nop
jo
mov
insl
dec
mov
dec
inc
push
decb
out
mov
insl
pop
lods
jp
inc
cmp
inc
dec
aam
mov
clc
cmc
sahf
jo
and
shrl
jo
sti
mov
pop
cmpb
adc
jmp
jo
fmuls
je
int
cmp
or
ss
les
sub
inc
jo
mov
jo
fidivs
xchg
jo
and
test
jo
repnz
lahf
jnp
jo
lods
out
dec
push
add
jo
hlt
push
movsl
fwait
mov
js
stos
ja
push
jle
loopne
and
xor
jo
push
cmpsl
push
pusha
test
pop
jo
inc
xchg
push
xor
add
sub
cmpsl
pushf
xchg
mov
jo
push
or
pop
ja
ficompl
nop
test
ror
xor
out
xor
inc
lock
push
enter
push
jo
jno
adc
xorl
bound
adcl
mov
push
add
test
insl
gs
add
andb
push
xchg
cmp
mov
push
pop
stc
loopne
insl
cmp
sub
push
cltd
sbbl
andb
jecxz
imul
inc
push
mov
mov
sub
sbb
inc
jo
xor
jb
sub
add
lods
jmp
cltd
push
push
into
xlat
adc
cs
sbb
jo
popf
lods
push
test
adc
dec
lock
and
lcall
xchg
jo
pop
leave
packuswb
mov
inc
sahf
and
jo
push
jns
fs
mov
mov
ret
push
leave
sbb
jp
push
inc
ljmp
in
mov
fwait
xchg
outsb
xor
dec
mov
ret
jmp
mov
sub
jnp
jo
data16
frstor
jo
or
shlb
push
or
pushf
xchg
call
mov
add
jo
dec
stc
mov
fstpl
and
popf
add
jbe
xlat
push
fiaddl
sbb
inc
xchg
lcall
jg
push
pop
push
scas
lret
pop
repnz
adc
add
jnp
inc
in
lret
xchg
add
aas
lcall
out
jge
xorl
and
jo
int3
or
jae
bound
sub
enter
repz
ss
cmp
pop
mov
push
ja
lret
jb
mov
rol
out
jo
push
popf
add
push
cmc
push
dec
xchg
pop
jo
add
jae
sbb
scas
xorl
das
mov
mov
push
into
test
shrl
leave
mov
xchg
sbb
mov
pop
jmp
cld
jo
test
ja
call
std
mov
rcl
nop
aam
mov
jo
movsl
mov
cltd
fldt
dec
jb
jo
dec
add
loope
jl
mov
jo
xchg
fdivr
push
scas
lds
xchg
shlb
mov
lock
jo
fadds
loopne
xchg
inc
jp
jecxz
xlat
out
push
sub
mov
mov
popf
lea
adc
neg
pop
cs
cld
test
lahf
lods
jo
xorb
push
and
jmp
add
int3
xor
sub
jo
cmp
xlat
mov
cmp
ds
pop
push
adc
lock
cmc
ja
les
fimuls
roll
neg
inc
xorb
mov
jle
and
xchg
movsb
mov
dec
inc
fldcw
aam
xchg
out
nop
jp
popf
jo
mov
repz
into
sbb
jo
mov
in
lcall
lock
movsl
cmp
mov
ffreep
xchg
sarl
jae
jl
divps
cmc
jo
sub
jo
loop
jb
inc
call
mov
push
jo
ja
sbb
insl
push
popa
insb
xor
xchg
jo
lods
test
lret
jno
jo
inc
cmp
sbb
scas
mov
push
jo
xchg
mov
nop
jo
cmpb
jo
mov
pop
mov
and
inc
mov
js
jne
jl
mov
stos
loop
in
mov
adc
mov
lcall
xchg
jo
rcll
or
sub
and
ja
lret
outsb
sbb
les
push
or
insl
mov
push
jbe
adc
xchg
xor
cmpsb
push
jl
mov
es
ret
xchg
in
mov
pop
dec
xor
cli
xor
lock
jns
xchg
or
fldcw
divl
outsl
xor
ret
cmp
out
xchg
es
roll
jb
iret
orl
pop
ljmp
imul
add
cld
jp
fcomp
push
or
or
jl
insl
inc
xchg
aas
inc
jo
aaa
int
test
dec
pop
out
cmp
push
dec
pop
inc
lret
mov
push
in
std
ret
pop
rcll
mov
ljmp
adc
fnstenv
enter
mov
out
cmpsb
jbe
movsl
jnp
jae
mov
loopne
inc
je
push
rorb
pop
mov
dec
jnp
jbe
and
cmp
sub
cli
jge
shrb
cmp
sbb
cmp
xor
adc
sbb
add
lret
movsl
jo
pop
stc
sahf
into
cmp
inc
jo
mov
fdivs
jmp
inc
sahf
popf
mov
mov
ret
jo
jle
scas
xchg
rcrb
mov
mov
push
sbb
xor
push
lret
xor
enter
push
test
pop
xor
add
lret
es
adc
call
mov
cmp
jae
dec
pop
cltd
iret
cmp
and
scas
xchg
push
jae
lods
cmpsb
lds
mov
or
adcb
cmp
jo
sahf
shrb
dec
sbb
dec
inc
jbe
shrb
sbb
push
xor
jae
mov
call
jo
xor
leave
call
jnp
push
cmp
shl
cmp
jo
rorb
fwait
pop
js
jnp
iret
mov
fsubrp
xorb
and
js
or
lock
in
sub
sbb
repnz
xor
mov
cmpsl
mov
icebp
push
dec
cmc
xor
insl
xor
add
aam
dec
fisubrs
shrb
cmp
cli
pop
pusha
push
push
std
dec
jo
sub
inc
outsb
xor
jp
scas
sub
xor
sub
jo
subb
mov
mov
lret
lret
clc
ret
jo
jb
fnstenv
xorb
test
in
jno
js
popf
cmp
ljmp
aam
push
es
sbb
push
hlt
jo
dec
dec
pop
add
inc
cli
jo
ret
or
cmpb
inc
mov
pop
outsb
and
fidivl
imul
and
mov
sahf
jae
cs
scas
or
ja
jp
and
mov
fnstcw
mov
das
jno
or
lret
in
mov
push
pop
mov
adc
push
jo
int
dec
inc
test
inc
ss
sbbb
imul
roll
jge
jo
cmp
add
or
insl
rcll
cwtl
push
rolb
jo
rorl
mov
les
outsl
aaa
cmpsb
sbb
out
leave
dec
cmpsl
ret
mov
xchg
inc
adc
faddl
test
xor
dec
jo
sub
jge
pop
insl
sar
pusha
or
mov
mov
jge
fisubrl
mov
cmpb
lock
clc
mov
xor
mov
lret
inc
push
mov
lds
inc
ja
int3
xchg
push
dec
jo
pop
jp
ret
mov
mov
mov
int
and
jo
mov
shll
jo
fimull
or
jecxz
jo
mov
outsb
push
xchg
adc
lock
jge
jo
sbb
mov
outsb
xchg
mov
xchg
mov
testl
jo
ds
mov
sub
das
lock
lret
mov
jo
mov
pop
out
lock
push
xchg
inc
xchg
into
cmpsl
out
add
push
call
lock
sbb
cmp
jnp
mov
pop
lret
or
mov
xor
pop
lret
shl
xlat
add
fwait
jo
je
cmpsl
or
mov
scas
insl
cmpb
sarb
ljmp
jp
orb
jbe
dec
int
sub
shlb
jae
jae
bound
leave
jge
aam
add
mov
xor
jg
cmp
lret
jmp
dec
inc
insl
addl
sbb
mov
enter
lds
cmp
rcrb
xor
inc
push
push
cmpsl
jo
dec
mov
sbb
mov
mov
mov
xchg
aas
sbbb
sbb
pop
nop
lea
mov
push
mov
sub
or
xchg
push
xor
mov
jo
mov
jecxz
mull
jo
ljmp
jo
sub
cmp
pop
cvttps2pi
mov
add
mov
inc
loopne
inc
push
jo
inc
adc
test
mov
cmpsb
lret
out
push
push
jo
pusha
ret
movsl
mov
mov
xorl
ja
dec
ljmp
or
xchg
insb
jg
sbb
fnclex
add
es
movsb
sub
mov
pop
lock
out
xor
push
xchg
push
add
aas
mov
pop
bnd
mov
mov
jo
mov
xor
lret
mov
std
rclb
mov
push
leave
xlat
es
andb
fstpt
xchg
push
dec
sub
pop
jo
ljmp
or
inc
mov
lods
or
xor
ss
out
mov
in
arpl
ds
jo
jp
dec
inc
lret
ret
cmp
inc
gs
inc
dec
insb
mov
or
sbb
jnp
test
lret
lds
enter
push
testl
jo
inc
ljmp
cmpsl
test
and
jo
pop
scas
mov
and
dec
jne
pop
leave
shll
movsb
or
lods
fwait
or
rorl
cltd
scas
adc
fldcw
ja
jo
pop
jmp
shll
dec
push
pop
inc
xor
addr16
sub
out
cltd
mov
stos
lods
push
ja
jne
jb
xor
sub
lock
or
dec
data16
sbb
js
mov
mov
je
cmpsl
lods
loopne
jg
cmp
and
loope
test
outsb
jmp
jo
jge
add
imul
pop
or
xchg
loopne
jo
sahf
pop
cltd
inc
shll
push
imul
ret
sbb
mov
fwait
and
mov
cmp
mov
test
mov
iret
fisttps
mov
vorps
inc
dec
jo
leave
sbb
cli
jle
mov
mov
dec
add
aas
mov
xchg
frstor
jo
pop
lret
push
dec
add
and
enter
jo
iret
faddl
mov
sub
sbb
in
xchg
or
out
ljmp
test
add
jb
add
mov
bound
test
adc
outsb
adc
jge
mov
sbb
das
sbb
lock
fadds
mov
cmc
cmp
jo
dec
dec
out
push
cmpsb
cmp
inc
into
xor
cmp
fadds
jo
jb
and
mov
dec
xor
lock
icebp
or
hlt
inc
mov
ds
push
mov
fmuls
mov
insl
ret
and
add
cwtl
xor
adc
fwait
jecxz
mov
mov
mov
pop
lds
int3
adcb
sub
cmpsl
das
popf
jo
mov
repnz
hlt
jo
push
and
je
add
xor
js
int
jo
loopne
cli
cmp
jle
push
xor
outsb
lods
xchg
out
sub
fwait
mov
jo,pt
push
idivb
fstpt
inc
or
or
jns
out
mov
mov
cld
cmpsl
add
ja
dec
jo
sub
scas
mov
mov
lock
xor
cltd
negl
xor
push
test
arpl
jo
pushf
addr16
fstps
cs
cmpsb
fiadds
je
sbb
dec
xchg
mov
outsb
jp
movsl
add
cld
cmp
dec
jp
mov
jbe
out
push
xchg
pop
sub
pop
jo
lahf
mov
cli
cmp
out
add
movsb
pop
push
xor
adc
pop
inc
aam
bound
jb
jl
pop
pop
push
push
push
or
jmp
insl
std
shrb
lock
xlat
mov
lock
loopne
adc
push
das
and
jo
and
gs
dec
nop
xchg
jmp
std
push
xchg
inc
lock
ja
push
mov
mov
mov
ss
mov
outsl
mov
add
dec
or
mov
adc
fbstp
push
xchg
sti
js
mov
shlb
mov
stc
dec
rcrl
insl
jo
mov
pop
gs
inc
pop
orb
mov
loop
pop
scas
jle
cmpl
les
jo
jns
test
xor
jo
into
ja
shrb
out
lcall
xor
mov
xchg
mov
lret
cmp
inc
jo
sub
inc
push
inc
jl
push
ds
dec
push
pushf
jo
fidivrs
loopne
stos
int3
xchg
pusha
into
mov
jo
xlat
out
arpl
in
jo
mov
rorl
mov
adc
jo
mov
popf
jo
mov
push
loop
mov
stos
mov
insb
pop
and
mov
lods
shl
cmp
dec
ds
lock
lahf
mov
inc
xchg
pop
lret
jns
divb
test
pop
jo
dec
ret
jb
iret
shll
xlat
fnsave
cmp
push
gs
mov
pop
lock
test
jo
popf
sbb
cmp
mov
sarl
pop
mov
sbb
push
jnp
aas
sbb
push
mov
mov
jp
in
mov
ljmp
mov
pcmpeqw
pop
pop
dec
pop
call
sahf
popf
loop
mov
lock
mov
rcrl
outsb
ret
rclb
shll
mov
push
cmp
jae
cmp
ror
cmp
movl
mov
jle
repz
stc
loop
call
and
mov
into
inc
xchg
fsubrl
out
jo
mov
dec
mov
test
cmp
jo
jbe
mov
icebp
jo
scas
xor
jo
shll
jo
movsw
fidivrl
add
sbb
mov
sub
scas
add
mov
jp
fcompl
mov
jbe
cld
jo
das
inc
jae
out
shll
testb
es
lahf
aad
sub
inc
jo
sbb
dec
cmc
mov
out
mov
dec
dec
cwtl
pop
or
lock
cmp
cld
push
mov
jmp
mov
into
jo
nop
mov
les
jle
xchg
or
out
lods
shl
test
pop
push
cmp
popf
jne
jo
mov
bnd
lods
xlat
sbb
movsl
jmp
out
adc
sarl
mov
mov
fistl
in
sarl
lahf
scas
das
lods
jbe
repz
insl
dec
jge
push
shll
jg
pop
jnp
ljmp
cltd
mov
push
mov
mov
mull
xor
leave
subb
jle
pop
mov
adc
xchg
lds
ja
pushf
push
inc
inc
rol
dec
mov
stos
leave
sbb
pop
fnsave
xor
loop
mov
test
test
jo
and
sbb
mov
jbe
mov
ret
jns
popf
pop
pop
fdivrs
push
not
in
fnstenv
adc
mov
push
jo
leave
jbe
fcmovbe
jo
push
arpl
mov
cmp
push
xchg
jp
or
rclb
jo
mov
daa
push
pop
cmc
shll
push
std
subl
mov
xor
adc
pop
jecxz
inc
mov
imul
push
jo
lcall
insb
jno
insb
xor
iret
sub
aas
add
das
cmp
lock
mov
out
push
stc
jae
inc
xchg
shrb
sub
inc
mov
nop
mov
inc
cmp
push
test
jp
jp
lea
mov
or
jo
push
inc
dec
mov
jns
push
pop
mov
mov
mov
ret
pop
push
cmp
or
lcall
andb
leave
sbb
inc
mov
jle
cmp
cs
mov
xor
push
push
push
pusha
mov
sbbb
lods
xchg
adc
fidivl
xchg
mov
jo
fmuls
popf
out
xor
dec
ds
into
fnstenv
jo
scas
adc
sti
jo
mov
es
and
imul
aaa
sbb
mov
mov
cli
cmpsw
nop
mov
in
cmp
mov
scas
jmp
movsb
or
adc
xor
mov
loop
jo
lret
pop
dec
mov
scas
js
aad
jmp
in
push
leave
pop
mov
xor
cmp
sub
adc
cli
push
jl
dec
popf
test
pop
and
jne
imul
arpl
pop
jo
push
sahf
push
dec
rorb
ss
jae
pop
andb
iret
xchg
jnp
push
adc
cwtl
mov
and
jo
mov
dec
mov
pop
inc
jg
cmp
jo
sub
lods
pop
cwtl
push
adc
push
jo
cli
cmp
fwait
int3
push
pop
jo
dec
fisttpll
movsl
push
sbb
jo
xor
adc
mov
shr
int3
popf
xchg
lds
and
xchg
rorb
xchg
sar
push
or
jo
call
sbb
es
xor
stos
into
push
cs
aaa
scas
enter
lahf
ja
test
rclb
or
into
push
test
jbe
jo
dec
mov
or
mov
jae
mov
std
ss
js
lock
insl
scas
sarl
inc
and
mov
mov
call
mov
ds
jo
js
int3
push
aas
adcb
test
jo
dec
jecxz
pop
xchg
outsb
lahf
dec
mov
push
cld
xor
es
mov
push
cmp
enter
int3
sbb
push
orb
pop
ja
and
or
cmp
addr16
aam
sahf
shl
push
outsb
pop
inc
test
lea
icebp
xor
stos
jge
xorb
xlat
xchg
jecxz
and
sub
sub
enter
bound
popa
inc
pop
jo
xchg
in
mov
jo
mov
and
dec
ja
mov
mov
jo
ret
nop
jo
pop
jp
fisubl
cmpl
ffree
das
jbe
inc
dec
sbb
lock
xchg
jo
dec
in
inc
mov
push
dec
stc
mov
fcomps
ja
and
clc
mov
mov
lock
jle
mov
insb
sbb
dec
cmc
lea
das
fildll
mov
lret
mov
xchg
nop
xchg
jo
jbe
lahf
mov
leavew
jne
cld
jnp
jo
dec
xchg
test
pop
cmp
push
or
xor
mov
insb
jnp
inc
outsb
mov
sbb
subl
das
pop
repnz
xor
aad
dec
sub
nop
pop
data16
jbe
jo
out
xchg
and
sub
mov
pop
mov
fsubrs
or
mov
scas
mov
xchg
mov
hlt
nop
cli
cmc
iret
and
inc
outsb
push
faddl
pop
loopw
outsb
sbb
enter
xchg
jno
add
xchg
dec
push
dec
jge
add
pop
es
fsts
sti
push
xchg
movl
jbe
ret
into
or
sbb
sarl
push
jp
mov
add
and
mov
clc
lods
mov
out
mov
pop
in
cmpsl
lock
add
lcall
inc
jo
mov
scas
hlt
add
jo
or
scas
or
sahf
jo
xor
movsb
outsb
or
mov
outsl
daa
int3
je
dec
cmp
mov
lods
cmpsl
dec
jo
inc
sub
lret
lahf
jo
mov
pop
add
push
jle
das
push
jecxz,pt
mov
dec
jo
jnp
lods
lret
fidivrl
test
dec
pop
outsb
int3
test
mov
mov
inc
or
pop
xchg
fwait
push
pushf
ret
cltd
push
movsb
jl
push
jge
sbbl
mov
setnp
jbe
mov
mov
sub
ret
mov
jnp
lds
aam
jp
fwait
shlb
jg
pop
push
jo
bound
arpl
data16
jo
outsb
mov
icebp
push
daa
push
jo
mov
les
push
xchg
andb
mov
jno
pop
inc
or
inc
rorb
mov
sbb
ficompl
jp
dec
pop
notl
jbe
dec
fisubs
insl
push
inc
xor
mov
jo
push
outsl
sbb
mov
inc
cli
sub
xchg
in
mov
imul
and
pusha
xchg
mov
pop
sahf
jno
jbe
push
xchg
or
push
jg
sub
mov
adc
xor
in
jno
dec
push
lret
fldt
add
jae
lahf
add
insb
inc
cmp
dec
aas
mov
sbb
and
cmp
adc
shl
jne
jp
cmc
aas
jle
je
fs
loope
int
cmc
jo
filds
in
decb
jae
add
dec
inc
xorb
jo
cmp
int
mov
pop
xchg
ficoml
and
mov
test
idiv
sbb
inc
pusha
or
adc
cltd
popa
ds
mov
pop
sub
jnp
rolb
jo
xchg
sub
push
jo
mov
fsubl
aam
sbb
or
mov
dec
lds
mov
cwtl
mov
mov
int
es
cmc
add
ja
pop
je
push
mov
lahf
int3
ljmp
adc
leave
mov
fcoms
in
add
in
jl
lahf
xchg
xor
mov
xlat
loopne
jnp
aam
in
mov
pop
adc
lret
fistpl
jb
jp
mov
mov
cmc
rcrb
add
jno
sub
mov
sbb
mov
push
cltd
jg
xchg
mov
jo
add
movsb
jle
lahf
enter
jmp
mov
jne
cmp
fwait
cmp
sbb
adc
loope
movsb
add
mov
and
sub
jo
push
aas
sti
iret
loope
je
movsb
xchg
sbb
jp
roll
cwtl
mov
sbb
cmp
add
mov
ljmp
je
mov
daa
insl
cmpsl
adc
mov
sub
push
push
dec
std
hlt
adc
add
roll
add
mov
aad
mov
leave
pop
jbe
icebp
add
cmc
fdivrp
xchg
inc
add
loopne
dec
aad
jle
lahf
push
fnsave
mov
push
pushf
jae
loope
rcrl
add
dec
int3
addl
mov
int
cmpsl
mov
lret
dec
movsb
push
jo
dec
mov
sahf
fucomp
insl
shll
cmc
test
out
mov
mov
pushf
lahf
mov
clc
and
ja
or
sbb
sub
mov
cmp
pop
sub
js
scas
ljmp
das
jmp
aam
xchg
sub
push
or
and
hlt
in
inc
fbld
push
add
outsb
pop
or
cld
test
sarb
std
inc
or
lahf
les
sub
adcl
insl
js
xlat
scas
aaa
mov
add
mov
mov
jp
add
dec
pop
enter
or
cmp
jmp
jecxz
cltd
out
dec
les
dec
cmp
loop
aas
daa
sarb
or
add
mov
jge
cmp
pop
gs
push
pop
ljmp
jp
jb
icebp
lret
outsl
imul
mov
inc
xor
cld
jo
gs
pop
lret
jo
jns
mov
pop
clc
jo
mov
pop
sbb
jbe
jo
push
pusha
xor
fdivrl
and
jge
cmp
add
dec
sbb
icebp
inc
adc
mov
and
xorl
cltd
enter
pop
dec
roll
mov
fldcw
pop
cltd
js
jbe
fsubs
shrl
jb
jecxz
ja
stos
inc
cltd
movsb
mov
push
push
and
jge
in
outsl
sahf
je
dec
mov
add
sbb
lods
aam
das
ds
xchg
je
mov
jae
nop
cwtl
jb
bound
int3
out
push
popf
mov
imul
outsb
in
xchg
movsl
pop
mov
mov
jle
sahf
ds
inc
push
cltd
lea
mov
jl
mov
xchg
fdivs
pop
push
push
outsb
push
mov
and
xor
or
mov
test
ja
pop
sahf
add
repnz
clc
pop
jae
dec
clc
push
lret
mov
sub
les
loope
push
pop
ds
outsl
pop
cwtl
pop
rcrb
inc
rcll
cli
xor
and
cmpsl
sub
insl
and
push
mov
ds
fistpll
cltd
fidivl
cmp
insl
rol
movsb
and
mov
mov
mov
pop
sarl
mov
ret
imul
xchg
data16
loop
xor
jge
and
cltd
pop
in
mov
jno
jae
bnd
in
ds
jg
or
ret
or
jl
cwtl
jo
adcl
imull
sbb
push
mov
xchg
inc
and
mov
sub
aad
mov
mov
int
sub
pop
hlt
fs
or
adc
sub
dec
jbe
jbe
bound
push
into
jge
xchg
int3
add
cmc
sub
nop
ret
add
popa
movsl
push
mov
sahf
xchg
mov
mov
cmp
mov
fistpll
xor
jo
das
fwait
cmc
pop
jg
xchg
iret
adc
outsl
push
cmc
push
mov
sbb
loope
jo
rcrl
in
shlb
bts
mov
repnz
xchg
cmpsl
pop
cs
into
dec
cmp
test
cmc
out
add
jo
xor
cmp
movsl
add
pop
inc
jo
out
into
jle
sbb
in
inc
jo
rorb
int3
outsb
dec
movsb
sub
sbb
icebp
jae
mov
popf
inc
mov
push
aam
test
adc
cmpsl
add
loope
inc
out
lock
mov
stos
push
test
es
and
loope
cmp
mov
pushf
js
lahf
pop
adc
adc
mov
rorb
mov
pop
rcrb
sbb
add
stc
lods
mov
popa
fdivrs
mov
dec
pop
cld
out
xchg
icebp
pop
loopne
adc
jb
jg
cmpsl
cmc
mov
sbbb
ret
loope
xor
xchg
xor
mov
in
and
cmc
pop
das
addb
lods
insb
insl
ret
and
mov
mov
xor
xchg
xchg
addr16
ds
inc
jno
sbb
dec
rcrb
cmp
mov
mov
inc
ret
pop
gs
jae
xor
sbb
scas
sbbb
push
sbb
xor
jb
ja
push
add
les
xchg
and
cmp
sbb
sub
out
jo
add
sbb
ss
ljmp
sub
mov
mov
mov
mov
insl
sbb
pop
push
ds
push
cmpb
push
movsl
xchg
lock
cmp
mov
movsb
out
pop
fldl
mov
add
adc
sbb
jo
roll
in
cmovl
jo
adc
jg
sub
mov
lret
jo
jecxz
fstpt
addr16
lock
aam
jp
pop
mov
lret
mov
lds
lock
lock
not
mov
cmp
cmp
xorl
cwtl
xorb
add
je
lea
cld
xchg
push
std
jecxz
jb
fsub
mov
push
cmp
sti
xchg
lret
cmpb
dec
inc
loope
dec
mov
je
test
mov
mov
ljmp
lds
pushf
clc
rorb
jne
push
cli
out
jp
rcr
push
xchg
outsb
andb
jbe
loopne
mov
movsl
jl
mov
mov
cmp
mov
test
mov
mov
cmpsb
orl
ljmp
sbb
lcall
scas
xchg
xchg
iret
jae
sub
enter
pop
mov
and
movb
lock
cmp
js
int
loopne
subb
fucomip
push
cmpsl
fstpt
xchg
fsts
das
je
lds
inc
mov
mov
jo
jle
in
jg
insb
xchg
jmp
mov
pop
loopne
stos
repz
mov
lahf
mov
xchg
jnp
in
mov
jo
jg
pop
mov
ja
xchg
clc
into
lahf
add
arpl
in
rolb
mov
jae
outsb
adc
xor
lds
adc
push
jle
fistpl
xchg
dec
jmp
int
repnz
lock
fmul
pop
ja
rcrl
xchg
lret
mov
xchg
adc
cmp
out
jmp
adc
bound
xor
jo
and
test
je
test
pop
lock
loop
add
push
jge
jne
add
lret
and
fsubs
jnp
or
and
add
movsl
pop
jo
scas
sar
mov
cld
push
adc
add
cmp
cmp
jmp
inc
xchg
js
cmp
and
stos
xor
xchg
mov
testl
test
mov
dec
cmp
in
ja
shll
leave
test
sbb
jo
lods
mov
scas
xbegin
rdmsr
popf
icebp
fistpll
or
xchg
push
sar
or
pop
and
push
push
outsb
xchg
daa
jo
and
push
movsl
cmp
mov
fmuls
jno
cli
xchg
lret
mov
jecxz
adc
inc
xor
push
sbb
clc
imul
es
pop
adc
test
fsts
cmpsb
clc
jo
mov
and
lcall
addr16
outsl
push
xorl
jo
xchg
test
mov
sarl
sbb
mov
ficoml
push
push
arpl
lods
lcall
xor
jo
mov
movsl
or
int
xchg
loop
shlb
xor
jae
jae
sub
push
xchg
inc
enter
jo
adcl
add
push
xor
jo
pop
mov
test
inc
cltd
jo
ret
dec
repz
xor
inc
subb
test
pop
pop
dec
and
cmpsb
dec
in
jo
fisubrl
and
sub
mov
xchg
jmp
xchg
fwait
test
dec
push
cmp
cmp
jnp
fisubrs
lea
mov
sub
pop
in
jo
pushf
imul
outsb
mov
ja
mov
dec
cmp
movsl
lahf
ja
jo
loop
xorl
add
lock
sub
jle
jo
das
ret
and
in
ret
mov
adcb
mov
lods
sub
cmpsl
stc
loop
mov
mov
jbe
and
popf
push
mov
jo
insl
leave
loop
add
or
imul
and
mov
pop
shll
mov
shlb
insb
pop
ja
lock
jo
out
sti
fildll
shlb
adc
repz
cmp
imul
lock
loop
xchg
hlt
xchg
testl
stos
cmp
leave
arpl
push
dec
pop
xlat
push
mov
les
dec
push
push
jo
jbe
xchg
ja
pushf
jo
xchg
mov
xchg
das
jbe
and
mov
ja
cmc
lods
nop
shrb
jo
stos
cmp
fyl2x
xchg
jo
or
mov
mov
notw
inc
pop
jp
out
jbe
movsl
nop
adc
push
mov
fisttps
xor
les
sub
rorb
in
xchg
js
fldl
cmpsb
mov
jo
mov
test
push
mov
xchg
cmpsb
jle
jo
mov
mov
mov
mov
lahf
jae
pop
loop
add
test
sub
mov
xchg
push
xlat
test
jo
jg
sarl
inc
jo
xchg
lock
mov
cmp
es
and
in
insb
mov
cld
pop
jae
mov
loopne
sbb
popf
loop
dec
pop
xchg
jo
sbb
xchg
cmpsl
xchg
int
pop
sbb
lds
mov
in
call
clc
inc
sarb
sub
mov
xchg
sbb
addb
inc
dec
mov
lock
mov
movsb
sti
cld
xchg
sbb
xchg
mov
xchg
sub
insl
jmp
xor
inc
lret
inc
test
mov
lds
jle
lcall
cmp
loopne
adc
dec
pop
insl
jo
cmc
outsb
aad
das
ss
fcmovb
stos
stc
rclb
dec
ja
pop
test
push
pusha
mov
insb
ja
jb
mov
cltd
cmp
ja
stos
mov
sbb
ja
pop
jo
xchg
mov
movsb
jo
iret
movsl
clc
fimull
arpl
jo
push
ret
popf
inc
pop
jo
or
je
cltd
inc
pop
mov
add
mov
mov
lahf
jae
cmp
xchg
flds
outsb
push
jo
aad
icebp
jns
shlb
push
aas
mov
jae
adc
or
inc
int
lods
test
ja
mov
subl
addr16
mov
nop
dec
fisttpll
and
fsubp
jnp
mov
test
push
adcl
pop
movsl
xor
int3
xor
call
xchg
push
sbb
pop
xlat
jmp
dec
outsb
idivl
xchg
sub
jo
movsl
sbb
xchg
jae
fdivs
lret
leave
out
das
lds
dec
in
inc
lods
xor
pop
sti
xchg
inc
test
ja
add
lds
inc
jge
adc
jo
and
cmpsb
out
sbb
mov
mov
movnti
jo
lods
outsb
das
xchg
cli
insb
lret
jp
idiv
lcall
jo
xchg
xchg
and
negb
das
jno
in
pop
stos
jp
outsb
fs
in
push
jo
mov
addb
sub
xchg
dec
insb
jbe
pop
sbb
outsl
jo
enter
mov
stos
addb
sub
in
jo
add
ret
jne
rcr
adc
enter
pop
lods
jp
cld
jae
fistpll
mov
lcall
dec
lods
loop
les
sbb
rdseed
stos
dec
pop
inc
out
in
add
xor
jl
ljmp
fsubp
jno
add
outsb
lods
adc
pop
mov
outsl
movsl
mov
loopne
push
lret
std
imulb
fnstenv
mov
and
and
lahf
loopne
inc
mov
fdivl
mov
jo
push
inc
xchg
cmp
dec
orb
inc
inc
into
ds
cltd
aam
popf
mov
cwtl
push
and
jo
dec
jle
pop
std
dec
lret
das
push
mov
ss
jnp
xor
jo
fld1
in
aad
xchg
inc
enter
lret
pop
mov
push
inc
lret
test
xor
imul
mov
sub
xor
fcoml
out
insl
xor
insl
add
lock
dec
lea
fdivl
mov
sbb
mov
xchg
or
and
sarl
mov
dec
cmp
mov
fstpt
push
insb
xchg
movb
xor
mov
jp
xchg
lret
data16
call
dec
lods
mov
pop
outsb
insb
scas
rorl
int
cmp
inc
add
mov
adc
decb
jo
clc
or
fdivl
mov
mov
loopne
dec
popf
lret
jo
mov
mov
push
jo
mov
std
inc
sarl
xor
fsubrs
cmpsl
mov
scas
std
mov
jmp
xlat
stc
jo
xchg
dec
out
imul
imul
insb
stos
lods
jae
movsl
pop
ljmp
jo
ret
aad
mov
in
insb
out
mov
ja
pop
repz
clc
fdivrs
mov
jo
mov
mov
dec
rcl
mov
xchg
cmp
popf
gs
xchg
cmp
xorb
mov
aas
mov
test
pop
je
mov
insb
ss
xor
lahf
lret
sub
dec
in
lock
imul
sub
insb
inc
xor
scas
sub
insb
pop
sub
xchg
xchg
mov
and
mov
fwait
push
insw
fstpl
sub
and
adc
in
pop
insl
jo
dec
les
jnp
int
and
in
imul
jo
aad
xchg
std
push
jne
jae
xchg
jbe
add
mov
lods
in
lock
jnp
in
jo
or
jo
aas
mov
jo
pushf
mov
pop
aam
cmpsb
jo
mov
test
jl
jo
scas
fsts
adc
lds
sub
test
jo
dec
or
ss
mov
jecxz
mov
mov
sar
int
je
pop
jp
mov
sub
dec
mov
inc
push
and
imul
mov
mov
xchg
mov
movsb
and
push
mov
data16
pop
ficomps
add
xor
lock
jmp
mov
cmp
ret
jle
mov
xchg
jge,pt
lahf
xchg
test
mov
mov
jno
jp
adc
pop
fiadds
jb
adc
xchg
mov
das
sbb
ss
jo
xor
push
jo
xchg
sbb
cmp
xor
mov
popa
and
xchg
mov
mov
out
cmpsl
mov
movsl
add
lods
lret
fmuls
cmp
pop
lock
scas
pop
mov
xor
lret
cmp
jne
push
xor
add
repnz
clc
imul
jp
jns
xor
insb
out
pop
mov
insb
cli
xor
scas
aad
xchg
xchg
scas
mov
int
cmp
ss
jno
repz
jae
sub
and
popf
dec
mov
movsl
lcall
mov
ss
jo
lods
xor
mov
insb
int
scas
lahf
test
adc
mov
mov
mov
in
test
cmp
rorl
scas
mov
inc
lcall
cmp
mov
addb
cmp
out
adc
inc
out
repz
lods
scas
mov
leave
loopne
jo
or
outsb
shll
fmulp
jecxz
icebp
xor
imul
outsb
insl
dec
mov
fmull
pop
insb
movsl
mov
and
scas
jo
add
ret
aas
inc
jo
mov
in
pop
test
dec
test
in
popf
or
pop
mov
out
mov
in
xor
mov
in
cmpsl
in
je
inc
pop
scas
roll
pop
dec
lcall
data16
add
push
std
lds
into
mov
push
dec
call
insb
or
out
sub
pusha
gs
loope
movb
cmp
fcmovu
push
jo
push
lahf
xor
add
mov
xchg
dec
jo
stc
sbb
inc
rclb
frstpm(287
pop
lcall
jo
xchg
cmpsb
or
xchg
jo
jnp
mov
leave
fdivs
cli
subl
pop
jmp
push
sub
scas
add
xchg
xor
insl
cmpl
mov
cmp
xchg
pusha
mov
sbb
add
or
mov
jo
xor
xor
cmpsl
ja
sahf
xchg
mov
jne
jp
push
stc
in
imul
xchg
xchg
xorb
dec
daa
xchg
push
addr16
nop
xchg
aaa
adc
jo
or
mov
mov
fdivl
cmpsl
es
lea
jo
scas
or
jo
mov
sbb
jo
mov
stos
das
jae,pn
ja
inc
sbb
xchg
stos
insb
jecxz
call
push
outsb
jl
sbb
es
jo
pop
dec
scas
jbe
and
mov
fldcw
cmp
inc
sub
jp
adc
subb
xchg
or
jp
outsl
push
inc
push
in
fnstcw
add
mov
jo
adc
push
dec
cmp
add
push
int3
dec
sti
xor
test
lods
mov
jle
push
jo
xor
arpl
mov
test
xchg
cli
push
aam
mov
jl
jbe
stos
lock
leave
cmc
rolb
lock
mov
mov
ja
outsb
ss
mov
hlt
mov
sub
push
stc
ja
mov
imul
add
pop
das
aas
xchg
cmp
cmp
jnp
repnz
mov
cmc
push
pushf
call
jmp
fnstenv
es
push
aam
mov
dec
mov
mov
xor
ds
addl
push
jo
ffree
loopne
jbe
pop
insb
test
and
fisubrs
dec
lds
das
lret
lock
push
xchg
mov
stc
iret
fwait
cmpsb
xor
xchg
mov
pop
rorb
cmp
les
jmp
test
sbb
pusha
pop
pusha
cmp
xchg
test
insl
pop
shll
pop
movl
mov
cld
dec
clc
jne
icebp
mov
push
mov
or
dec
adcb
lret
pop
lock
sbb
mov
mov
mov
inc
lcall
mov
test
ja
mov
adc
jmp
fisubs
xchg
jo
rclb
jo
mov
out
xchg
fldenv
jge
jo
scas
pop
lahf
out
sub
fsubrl
pop
inc
fistpl
push
xor
jo
cwtl
ret
fisttpll
jl
mov
inc
lret
pushf
insb
cmp
out
pop
icebp
cmp
mov
inc
cmpsl
paddsb
dec
pop
sbb
cmp
jne
mov
lcall
sub
ja
cli
imulb
mov
call
dec
mov
aad
lock
ret
out
imul
lock
insb
jb
jmp
xchg
insl
bound
pop
add
jg
ret
ret
es
mov
pop
ja
fiaddl
pusha
lods
stos
pusha
jo
pop
shlb
loope
pushf
mov
arpl
pusha
stos
insb
cmp
xor
push
xor
mov
movsl
adc
fcmovne
andb
cmp
daa
cmpsl
add
std
ds
jo
loop
add
push
jo
jge
ret
into
pop
fcoml
lock
xor
pop
jo
mov
mov
xor
sub
xchg
lahf
pop
jo
lcall
adc
loop
sbb
xchg
movb
fdivl
mov
push
ss
push
cmpl
loope
adcl
je
ja
insl
test
imul
cmp
jo
cltd
xchg
popf
insl
aas
mov
pop
pop
mov
leave
shrb
clc
jo
bound
jae
push
fdivrs
int
rolb
jge
rorl
fwait
xchg
mov
mov
out
mov
pop
lods
loope
xor
push
jnp
inc
imul
lock
or
test
jo
dec
ds
jbe
ja
jno
sbb
mov
cmp
loopne
icebp
imul
insb
pop
jo
cmp
aad
jo
test
jo
sbb
mov
insl
or
inc
xchg
adc
mov
jo
leave
ljmp
xchg
fld
jmp
shlb
add
jo
lcall
cmc
bound
repz
stc
mov
or
sbb
jp
movsl
scas
ret
cmp
movsb
mov
divb
and
repnz
jo
out
outsb
fdivl
jo
xchg
mov
xchg
adc
mov
jns
xchg
lea
out
xor
xchg
icebp
insl
cmpsb
fstpt
pop
add
xchg
pusha
mov
fdivs
inc
notl
in
adc
or
add
insl
out
mov
jo
mov
ja
jo
inc
mov
sub
cmp
push
inc
cmp
jle
cmp
cmp
dec
jo
mov
imul
jo
ds
xchg
pop
lods
inc
movsl
jl
and
jo
out
mov
push
jle
jo
mov
xchg
jo
mov
pop
addl
sbb
mov
xor
push
test
lea
jo
dec
dec
inc
insb
push
mov
lcall
mov
or
in
mov
ss
jnp
test
mov
pop
outsb
mov
xor
xchg
jo
in
jno
or
mov
icebp
mov
jle
mov
enter
inc
xchg
mov
mov
daa
js
jo
jnp
arpl
in
lock
rclb
sbb
js
mov
jg
pop
pop
push
dec
pop
jo
cmpsl
aam
ja
insl
pop
sub
dec
xorb
mov
icebp
inc
or
hlt
imul
push
mov
cmp
pop
sbb
xor
out
test
inc
lds
cwtl
jo
mov
mov
jo
push
scas
add
lcall
sub
jae
loope
movsb
shlb
clc
ret
sbb
mov
jo
mov
and
jo
cmpl
cli
jo
mov
lea
add
fwait
dec
dec
enter
fdivl
ficoml
jo
xor
jo
lret
jmp
stc
jo
jbe
pop
add
xchg
dec
enter
int
lahf
mov
xor
xchg
in
insl
cmc
mov
mov
dec
or
rclb
sub
jmp
inc
aad
loop
lea
push
xchg
mov
or
outsl
out
arpl
dec
adc
jo
outsb
je
push
pop
lahf
jo
push
jg
lret
add
repnz
pop
outsl
mov
jbe
xorl
jmp
scas
dec
dec
push
mov
inc
es
jae
inc
ret
mov
aas
mov
jbe
xchg
fstpl
cmc
adc
data16
xchg
lock
mov
les
pop
xchg
mov
pop
lock
cmpsl
roll
jbe
mov
mov
mov
mov
adc
add
xlat
cwtl
bound
xchg
subb
test
jo
lods
jp
daa
pop
sbb
mov
jo
loope
dec
push
dec
xchg
cmp
xchg
fidivl
fldt
lds
loop
xlat
jo
fstpl
mov
pop
add
cmp
push
loopne
popf
insl
cmp
fsts
int3
jne
lcall
fucomi
and
jae
bound
jbe
mov
mov
push
jo
rcll
mov
popf
ja
add
jo
mov
or
xor
jo
lods
ds
scas
push
or
rol
jo
ret
divl
shll
in
in
push
cmpsl
cmp
sub
jb,pt
mov
std
pop
insb
arpl
sahf
stc
ret
ja
lods
ret
mov
ror
cmp
jo
popa
and
cmp
dec
xchg
sbb
test
pop
jne
jbe
aad
scas
ja
sahf
pusha
insl
adc
rorb
movsb
mov
xchg
pop
rolb
mov
cmp
xchg
int3
loope
lea
jo
push
cmpsb
lcall
in
jle
inc
cmp
mov
pop
xor
aas
out
mov
cmc
pop
sbb
push
mov
scas
gs
cld
jo
jne
or
sbb
loope
loopne
push
mov
pushf
pop
mov
mov
lret
js
ljmp
mov
adc
sbb
out
cmpsb
jo
andl
jo
lock
cmp
das
jo
inc
leave
imul
dec
jno
pop
mov
mov
pusha
xlat
pushf
mov
insl
fidivrl
add
lock
adcl
es
mov
movsl
mov
rcrb
ret
fsubrl
mov
mov
pop
dec
jo
mov
jecxz
jo
sub
insb
outsb
pushf
and
insb
cmc
andb
push
sarl
in
add
sbb
jae
mov
popa
jae
xchg
data16
jo
push
cwtl
lahf
xchg
aad
mov
xor
es
lods
adc
sahf
jo
mov
push
add
jo
shr
adc
jbe,pn
mov
lds
mov
inc
cmp
jo
out
mov
jo
scas
mov
fdivs
jmp
addr16
pop
imul
mov
mov
insb
xor
mov
mov
in
popf
negb
mov
lock
jp
jne
lds
test
jno
mov
std
test
ja
cwtl
lret
int3
cmc
inc
stos
jo
stos
push
bound
insb
jp
arpl
lock
and
fisttps
jo
add
icebp
mov
ljmp
stc
xor
and
jae
lret
jo
xor
mov
shl
jo
xor
out
scas
mov
in
sti
mov
push
mov
jo
test
inc
mov
rol
lcall
and
aas
adc
and
push
mov
mov
scas
lock
incb
mov
bound
in
dec
fistpl
les
sahf
add
test
std
xor
mov
cs
jbe
add
or
clc
cmc
mov
xchg
xchg
cmp
ja
fcmovnbe
loopne
mov
outsb
cmpsb
das
add
adc
in
xchg
mov
adc
xchg
pop
inc
lahf
insl
fucom
mov
cmp
push
mov
ljmp
jnp
jge
inc
lds
out
lahf
mov
mov
fnstenv
cmp
and
xchg
mov
bound
and
xor
sub
data16
pop
lcall
pop
adc
mov
lds
jbe
pushf
add
mov
fcomip
pop
movlhps
mov
dec
xchg
xchg
lock
in
dec
imul
test
mov
jo
inc
aad
pop
push
int
jo
std
add
iret
pushf
sub
jo
lods
xor
mov
mov
inc
add
push
enter
xorb
fxch
mov
stos
cmp
xchg
lcall
stc
jl
pop
test
mov
scas
in
subb
sbb
mov
loop
jg
aad
lock
or
pop
ficompl
mov
std
aam
aas
jo
movsl
scas
flds
xchg
jo
loope
jle
out
sbb
jl
popl
dec
adc
and
push
sti
cmp
pop
add
jo
mov
cmp
push
int3
cmp
xorb
repnz
and
lds
jge
push
test
adc
cmc
add
lds
sbb
in
aam
insl
rclb
or
les
sub
add
push
xchg
mov
fidivl
mov
jns
adc
loopne
ds
jo
xor
add
xorb
inc
mov
jo
cmp
out
divl
loop
mov
shlb
jo
sbb
insb
push
xor
pop
mov
jo
ljmp
jo
outsb
aam
int3
leave
lret
imull
mov
fldt
rcrb
outsl
xor
rorl
jo
pop
xchg
sbb
nop
mov
data16
cmp
jo
fdivrl
lods
add
jo
icebp
jns
aad
cmp
jo
push
daa
push
xor
jae
sbb
das
out
and
sub
sbb
ss
es
mov
jo
cmp
jbe
mov
sbbb
xor
mov
jo
divb
mov
mov
inc
lcall
push
les
outsb
test
pushf
or
xor
data16
cmpsb
pop
ret
adc
dec
ja
xchg
lahf
adc
mov
enter
xor
push
lock
cmp
push
jg
adc
cwtl
in
fwait
sub
mov
adc
sub
enter
mov
inc
jp
cmp
nop
pop
push
inc
xor
dec
jb
or
ja
idivb
loop
xchg
ficoms
jbe
das
mov
hlt
fnsave
inc
out
inc
mov
dec
jae
inc
out
iret
mov
jmp
aas
ret
cmp
push
cltd
stos
mov
add
mov
inc
push
or
adc
mov
dec
insb
insb
fcmovne
mov
add
nop
sbb
ds
inc
sbb
mov
jne
dec
inc
adcb
sbb
jecxz
fnstenv
jo
mov
decb
sbb
sbb
dec
jae
mov
mov
fadds
test
mov
jbe
add
jmp
push
jo
jne
fwait
sbb
jae
ja
insl
fcmovne
loopne
inc
cltd
sub
in
dec
fcmove
mov
and
and
push
mov
sub
mov
cmp
movsb
pop
fidivl
int
mov
gs
ja
xchg
negb
fwait
repz
cwtl
sti
outsl
insb
dec
cmpb
xor
sub
mov
insb
dec
in
lock
push
fwait
cmp
fldt
ret
mov
mov
stos
push
scas
mov
xor
es
fwait
mov
test
pushf
xchg
push
cwtl
xchg
insl
push
mulb
in
mov
and
movsb
push
jae
les
and
pop
cmp
lods
mov
push
pushf
inc
ja
xor
xchg
lds
or
loop
nop
lods
fs
jnp
or
jbe
dec
cmp
mov
push
inc
mov
pusha
movsl
cmp
nop
ss
imul
pop
xchg
mov
cmp
xchg
inc
dec
dec
popf
lock
lahf
xchg
stos
loopne
jo
lret
jnp
movsl
push
cwtl
outsb
mov
mov
movsb
mov
jp
push
js
outsl
xor
mov
dec
and
xchg
xor
jo
xor
scas
jo
scas
aaa
addr16
xchg
sbbb
rcrb
jo
cmp
mov
icebp
cmpl
leave
xor
sub
jne
push
sbb
pop
fcmovbe
jo
lret
xorl
test
dec
push
psadbw
add
jmp
cltd
std
xor
sti
cmpsb
fisttpll
fs
rcrl
jo
test
loopne
mov
push
jo
push
mov
xor
mov
enter
hlt
jo
dec
inc
mov
insl
movsl
adc
mov
pop
pop
iret
fldt
mov
sarl
cwtl
sub
lcall
xlat
xor
sbb
out
cmp
js
add
mov
jo
cli
xor
lcall
in
test
sub
jo
ss
stos
cmpsl
cmpsb
inc
xchg
mov
xchg
pushf
jae
call
cwtl
imul
jnp
notb
mov
outsb
dec
in
pop
sbb
jo
sub
cmpb
push
jmp
cmpl
mov
pop
pop
jge
sbb
mov
mov
jl
fcomi
pop
stos
mov
mov
mov
inc
fnstenv
addl
je
ret
jne
stc
pop
in
jo
rol
or
cli
in
lds
xor
jo
ret
fisttpl
std
out
pop
outsl
mov
xor
mov
jo
enter
cli
mov
ja
les
xchg
outsb
stc
push
mov
ret
ja
sub
push
insb
inc
adc
xor
jp
aam
cmp
push
adc
mov
xor
jp
pop
mov
insl
int3
push
popa
sbb
ret
in
int
xchg
xchg
test
and
jb
mov
push
or
into
jbe
mov
push
stos
xchg
test
mov
divb
shrb
dec
inc
jo
stos
pop
xchg
mov
or
out
sub
dec
arpl
data16
xor
shr
push
inc
mov
lock
nop
mov
jo
jae
mov
jo
in
xchg
mov
loope
mov
outsb
fnsave
mov
cwtl
lahf
xor
pop
repz
dec
or
push
movsb
mov
add
mov
mov
jo
int3
sbb
insl
pop
test
sbb
xchg
mov
add
outsl
xor
jo
loopne
xchg
iret
jns
bnd
insl
aad
stos
lds
hlt
add
xor
xchg
mov
shrb
or
arpl
xor
stc
lock
xchg
lods
mov
cmp
jb
xor
add
lds
adc
mov
sti
add
bound
inc
imul
jnp
push
sbb
xor
sub
mov
lods
fldt
popl
iret
pop
imul
jo
out
xchg
lock
movsb
jo
lcall
jo
ja
jno
mov
lea
xor
inc
inc
loopne
daa
jo
sbb
fildl
jo
push
push
adc
addr16
ja
pop
pop
add
xchg
outsb
add
in
mov
or
stc
mov
dec
mov
inc
test
xor
jl
addl
lret
test
inc
es
mov
iret
xor
popa
inc
mov
mov
push
lods
mov
loope
or
adc
sti
xor
push
rclb
data16
mov
lahf
popf
jge
mov
cs
les
mov
mov
popa
lret
ja
sti
cmp
mov
cmpsb
pop
xlat
scas
stos
xor
fistpll
test
pop
imul
pushf
std
jge
adc
pop
xchg
movsl
test
xor
cwtl
jno
jo
test
xchg
enter
jo
sarb
dec
outsl
pop
jl
pushf
push
xorb
mov
jg
or
pop
int
jecxz
jo
mov
sbb
cmp
jecxz
mov
dec
push
jmp
nop
fwait
arpl
test
xor
push
cli
fldt
cmp
lahf
jo
push
push
aas
sahf
dec
or
push
xchg
leave
clc
and
cmc
fwait
xor
nop
jnp
test
insl
ror
dec
fistl
jo
sahf
mov
and
mov
cmp
lret
jecxz
mov
xor
inc
ficomps
xchg
mov
xchg
add
imul
mov
out
dec
mov
jae
pop
xchg
adc
mov
jo
cmc
repnz
jge
gs
pop
xlat
cltd
lcall
imul
inc
and
inc
movsl
outsb
testb
repnz
pop
mov
std
push
xchg
xchg
cmp
pop
repz
fnsave
jo
rcrl
nop
push
imul
lret
ja
xchg
pop
mov
mov
push
pushf
pop
loop
pop
test
sarb
sub
inc
push
dec
and
stc
jo
jae
fcmovnu
dec
mov
lds
dec
int3
daa
mov
pop
inc
repnz
sbbb
jne
mov
shrb
das
lock
jbe
pop
test
jo
dec
lods
mov
cmpsb
mulps
lds
mov
test
pop
jo
push
lret
movsl
pop
lods
sbb
or
outsl
mov
mov
outsl
jo
pop
sbb
push
out
loopne
mov
insb
lcall
dec
jne
cmc
fwait
jno
dec
inc
sub
ja
mov
xlat
pop
adc
int3
pusha
in
jo
xchg
stos
or
inc
sbb
jo
sbb
jo
int3
popf
dec
test
mov
lock
lcall
lds
pushf
mov
out
cltd
add
jo
std
xor
stos
xchg
and
add
inc
shlb
lret
and
std
sbb
aas
ja
xchg
mov
jl
pop
pop
jo
int
mov
cmc
jl
sbb
push
dec
ret
jo
pop
sbb
test
movsb
jo
cs
sub
pop
xor
mov
dec
pop
je
push
sub
fldt
lea
orl
std
push
cmp
jo
sub
lds
int3
out
mov
addl
lds
xchg
push
jg
mov
enter
push
adc
mov
lret
pop
jae
mov
fwait
inc
das
shrb
cmp
mov
ret
fdivl
dec
pop
xor
dec
insl
adc
ret
push
std
lcall
or
call
xor
jnp
repnz
and
std
int
lods
jo
rorb
insb
fwait
int3
inc
jo
mov
mov
mov
mov
outsl
inc
ja
inc
jo
mov
dec
insl
mov
mov
rolb
sub
dec
add
cmp
jo
xor
jecxz
push
xor
push
mov
and
cmp
mov
or
fs
les
shr
cmpsb
jno
lret
sbb
dec
sub
test
mov
test
test
jl
orl
jbe
dec
or
pop
add
in
stc
test
pop
movb
jo
out
test
repz
fdivrl
lods
pop
push
jne
and
cmp
add
xchg
mov
push
out
push
or
jo
push
popl
lret
js
into
jae
sbb
loopne
xor
mov
clc
mov
ds
and
mov
sub
mov
andps
stc
xchg
inc
dec
sub
test
mov
mov
xlat
and
jne
mov
sbbl
jge
out
test
in
jo
mov
mov
pop
sub
cmpsb
in
ja
adc
jo
or
movsl
jo
ffree
sahf
fwait
mov
pop
push
push
insb
pop
push
ror
dec
mov
cmp
add
sbb
cmp
jo
xor
jo
int
mov
jo
xchg
pop
and
dec
and
pop
xor
cmpsb
jo
xchg
xlat
mov
shlb
mov
dec
mov
fcoml
xchg
mov
jle
call
stos
dec
addr16
sub
lock
pushf
flds
push
out
cltd
jae
and
jo
push
mov
mov
and
mov
enter
shl
push
sub
movsb
push
add
xor
pusha
ficoml
mov
jo
lods
adc
js
inc
stos
mov
and
mov
add
cmp
hlt
sub
jo
ss
scas
pop
sbb
movsb
jo
inc
add
xchg
test
push
or
adc
sub
sbb
xor
mov
cmp
mov
jnp
insb
cld
lock
xchg
inc
jmp
dec
pop
std
pop
add
cmp
inc
cld
push
cmp
push
je
sbb
jle
xchg
mov
dec
shll
pop
and
mov
jo
gs
inc
out
pusha
jmp
insb
mov
adcb
leave
mov
loop
imul
sbb
lock
lock
pop
inc
jo
push
xor
xor
int
sub
mov
sbb
int3
pop
test
cmc
push
xchg
jae
xchg
ds
mov
pop
cmp
jo
xchg
push
imul
mov
jo
pop
loop
out
pop
pushf
jo
mov
outsb
jo
mov
push
data16
add
ja
iret
ja
xor
and
xor
insl
pop
cmp
ret
nop
les
sub
insb
xlat
sahf
xor
mov
jne
or
jo
stc
pop
mov
jno
dec
cmp
mov
mov
movsb
mov
and
stc
push
fsubl
dec
lods
ja
dec
aad
mov
adc
ss
mulb
outsl
sarb
mov
call
xchg
push
ja
fdivrl
fcmovne
jo
ret
jae
xor
js
dec
mov
ficoml
lea
enter
stos
mov
jo
dec
lret
inc
les
ja
shlb
mov
pop
add
popa
jo
push
dec
jmp
shlb
icebp
imul
jo
dec
insl
jmp
jo
stos
hlt
insb
clc
fwait
or
in
cmp
push
sbb
xchg
hlt
cltd
es
pop
mov
test
lods
ja
or
rcrb
icebp
push
insl
push
xchg
or
divl
push
outsb
scas
out
sbb
imul
xor
lcall
xchg
xor
jo
dec
cld
mov
jo
lods
les
inc
imul
inc
adc
lcall
sub
inc
dec
pop
xor
push
xchg
push
mov
adc
loopne
xor
shll
jo
fisubrs
inc
scas
jge
add
inc
data16
test
add
inc
pop
in
sub
mov
and
push
adc
xor
cmp
jo
mov
shrl
jo
mov
or
push
cli
stc
mov
dec
cmp
outsb
sbb
xlat
mov
xchg
jb
in
fdivrs
inc
dec
loopne
jo
ds
mov
adc
jbe
pop
pop
movsl
or
js
adc
pushf
addr16
or
in
pop
pop
mov
dec
js
mul
and
popf
cmp
jne
adc
ja
movsl
push
sbb
xchg
push
fst
es
cmp
sub
das
rorb
lock
pop
pop
outsb
aam
inc
sbb
add
cmp
ljmp
pushf
call
jne
jbe
push
out
lds
mov
xchg
mov
arpl
addl
jo
popf
jb
ret
cwtl
mov
cmp
sbb
sub
filds
mov
sti
insl
mov
push
jo
flds
mull
iret
in
rorb
xor
sub
int3
subl
cld
add
mov
pop
lcall
cli
rcr
mov
fnsave
sahf
into
dec
xchg
int
pop
xor
sub
shrb
push
dec
jle
pop
mov
pushf
push
cmp
jo
push
aam
leave
xchg
mov
jo
js
les
ficompl
stc
jo
xchg
jmp
out
mov
pusha
sub
push
lahf
cmpb
pop
rcl
xchg
hlt
outsb
xor
enter
pop
jo
roll
push
ficoms
rolb
xchg
das
mov
mov
insl
imul
push
fidivrs
fisttpl
mov
arpl
mov
std
mov
pop
mov
shlb
sbb
call
pushf
or
pop
dec
fsts
fs
lcall
mov
push
mov
aad
xchg
scas
jo
mov
jge
jo
xlat
bnd
cs
xchg
jo
dec
cmp
incb
lods
dec
mov
faddp
jo
and
dec
xchg
rorb
arpl
dec
jo
test
and
jo
mov
fdivs
sahf
imul
shlb
stc
xchg
jo
push
cltd
arpl
jo
inc
lock
pop
mov
scas
in
pop
mov
xor
mov
jg
mov
nop
mov
cmp
imul
adc
in
jo
cmp
mov
push
insb
jo
fs
cmp
repnz
mov
xor
mov
xor
gs
lret
icebp
xor
notb
lock
jo
xor
jl
and
or
mov
mov
jo
and
sbb
dec
dec
test
enter
adc
in
jbe
push
cltd
adc
and
int
push
mov
fmull
jecxz
push
jmp
mov
mov
js
insb
cmpsb
mov
lcall
jnp
sbb
add
scas
jo
fnsave
mov
cmp
fnstenv
cmpsl
cwtl
fiaddl
sti
jns
sbb
out
cmc
loopne
insl
or
imul
sbb
xor
movsl
pushf
xor
nop
out
out
xor
dec
adc
test
push
jne
inc
jb
int3
mov
or
aad
sbb
es
stc
je
dec
jne
cmp
add
add
loope
pop
cli
hlt
jae
pop
push
mov
pop
jbe
dec
push
fidivrl
stos
inc
mov
pop
call
mov
rcll
push
dec
test
xor
jo
dec
leave
pop
or
sar
inc
lret
shrb
test
jo
daa
aam
pushf
sub
cmp
fistpl
or
sahf
mov
ror
sarb
sbb
pop
mov
sbb
int
call
int3
xor
dec
cld
lock
xor
jo
icebp
pop
movsb
fldl2t
lods
and
or
pop
push
inc
mov
jb
shll
enter
xor
mov
push
mov
jno
jae
out
mov
lods
dec
mov
add
xor
outsl
stos
movsb
fisubs
leave
dec
fcmovu
mov
lods
pop
sti
jecxz
imul
jne
inc
cld
dec
in
add
cmp
and
xor
mov
out
or
imul
aam
mov
add
xchg
sar
jo
ja
or
stos
adc
rolb
add
shll
test
cmp
sub
das
adcb
jno
cmc
test
in
lret
jb
pop
ja
jne
jae
push
mov
lret
mov
or
inc
mov
les
scas
jo
ss
imul
gs
xor
and
adc
cmp
push
mov
mov
sbb
cwtl
loope
or
bound
jo
std
lahf
mov
je
inc
movsl
cmp
cmp
push
xor
dec
sub
nop
fistpl
mov
lock
jbe
icebp
adc
gs
sahf
lds
cmc
pop
mov
cmc
mov
xchg
lock
or
adc
jo
mov
je
or
outsb
cmc
jbe
cmpsb
aaa
shlb
push
nop
icebp
inc
or
mov
ss
testb
inc
in
dec
mov
jl
or
xchg
push
rcrb
fldl
mov
jo
loop
cli
sbb
ret
xorb
insb
jp
dec
jo
mov
jb
dec
jge
lock
lds
cmp
mov
outsb
lock
push
es
jo
cmp
and
xor
xchg
push
mov
mov
jge
sahf
cs
jbe
sbb
jo
mov
inc
lret
xor
jo
je
cmpl
jecxz
pop
dec
adc
pop
sub
push
test
and
cmp
daa
or
aas
es
xchg
int3
xchg
aad
cmp
xchg
sub
pop
stos
and
push
out
dec
in
fwait
pop
push
and
and
pop
mov
stos
pushf
cld
pop
sbb
fnsave
xchg
mov
sbb
adc
jo
add
push
int3
cmp
pop
lea
mov
insl
pop
xchg
leave
in
nop
push
add
inc
stc
push
xor
pushl
mov
stos
push
dec
xor
push
pop
or
pop
arpl
cmp
push
xor
lock
jne
fwait
jae
jo
fcmovbe
dec
push
cmp
cmpsb
and
mov
dec
pushf
stc
call
mov
mov
lret
push
in
xor
jo
mov
xor
loop
js
fnstcw
jo
sbb
das
movsl
push
lea
pushf
outsb
fdivrl
lret
in
mov
jo
outsl
jl
cmp
or
mov
lcall
cmp
jo
pop
pop
xor
das
mov
lret
mov
xor
insl
push
add
jo
stc
cmc
push
cmp
sub
int3
sub
outsb
jo
push
mov
dec
cmp
xor
lahf
push
insb
lcall
gs
jo
aaa
icebp
mov
jo
mov
dec
fcoms
insl
jo
xor
repnz
jo
push
into
lret
xchg
sbb
add
imul
add
inc
mov
cmp
push
mov
fwait
adc
sahf
jo
jmp
cld
add
mov
les
scas
fnstenv
mov
pop
int3
movsb
adc
add
jo
shrl
pop
ss
mov
mov
pop
out
adc
arpl
pushf
and
lea
leave
pop
jo
or
mov
sbb
dec
out
ja
lods
mov
mov
in
sub
mov
nop
pop
lds
push
mov
pop
movsb
push
scas
jo
adc
pop
add
fldenv
addl
mov
cmp
mov
and
test
add
cs
scas
sbb
das
mov
ja
out
mov
xlat
bound
cmp
jmp
and
push
ret
ja
in
or
cmp
sbb
add
cmc
push
insl
and
cld
jp
mov
and
ss
pop
mov
iret
orb
daa
mov
mov
fwait
sub
adc
dec
push
push
jle
jo
cmp
xor
pusha
fbstp
mov
mov
bound
imul
fcompl
pop
jmp
filds
in
nop
mov
inc
arpl
add
or
addr16
negb
inc
mov
lahf
insl
pop
jns
out
and
mov
jo
lret
adc
aam
jl
gs
sahf
or
outsb
jo
inc
jp
es
xorl
push
mov
mov
jo
pop
mov
push
aad
cmp
jp
sub
xorb
int
and
jge
jae
movsb
xchg
rclb
iret
mov
mov
addl
mov
lods
push
xchg
xchg
jo
fbld
add
jae
sbb
std
cmp
sub
in
push
imul
lret
cmp
jnp
inc
pop
jo
stos
test
arpl
scas
ja
mov
xchg
fwait
mov
aad
shrb
lahf
mov
cmp
ja
mov
jo
push
push
fistpl
cmp
jno
lahf
test
push
dec
mov
xchg
insl
mov
xlat
mov
jnp
ja
aad
addr16
lock
mov
push
mov
add
dec
mov
mov
rcrb
lock
clc
dec
leave
fdiv
ds
mov
repnz
sti
jo
sbb
rol
xchg
push
adc
lds
inc
out
mov
adc
mov
jo
and
mov
mov
xor
xchg
xorl
es
stos
jnp
shl
iret
jmp
out
icebp
jo
lds
jbe
dec
shlb
shlb
mov
fwait
lock
daa
leave
aad
fsts
ja
adc
push
add
lock
and
cltd
std
aam
sub
mov
stos
lea
pop
mov
dec
sbb
push
mov
enter
mov
cmp
jo
push
adc
push
daa
jo
mov
lods
mov
cmp
fldl2t
out
addr16
das
dec
jo
aad
subl
std
fildl
lea
or
jo
fnstenv
scas
pop
test
adc
lods
push
ficomps
aad
and
jo
and
fldt
push
sarl
push
cmovnp
jo
cli
imul
jb
fwait
movsl
mov
outsb
sub
loopne
mov
pop
in
mov
test
or
xchg
aaa
and
loopne
je
mov
or
nop
ljmp
push
cli
inc
fnstcw
push
or
outsb
xor
mov
cmp
negl
xor
test
mov
lahf
lea
or
xchg
lds
in
mov
ljmp
cli
pop
fdivs
daa
subl
pop
add
call
sarl
cmc
cmp
xor
xorl
push
push
imul
jo
inc
mov
adc
mov
mov
and
nop
pop
adc
jo
movsl
mov
dec
pushf
adc
jae
dec
xlat
xchg
daa
or
push
or
popa
mov
ja
xchg
xchg
pop
into
mov
lcall
fidivrs
sbb
adc
adc
je
shlb
mov
daa
inc
jo
jge
push
push
mov
mov
lods
data16
in
scas
fnstenv
pop
cmpsb
iret
inc
xor
clc
cmpb
pushf
lds
jo
jbe
sub
ret
inc
push
int3
jo
add
in
cmp
aad
add
mov
jb
jmp
jo
test
jge
mov
lods
adc
ret
add
mov
fs
ljmp
and
xchg
inc
or
push
sbb
leave
insl
push
addr16
xorb
imul
push
and
shl
mov
out
add
inc
or
loope
rorb
scas
int
pop
outsb
pusha
jo
or
mov
xor
jo
mov
aad
iret
cmc
mov
and
jo
das
xchg
mov
fcomps
adc
inc
jo
sar
pop
push
lahf
inc
cmp
je
mov
pop
icebp
push
jo
pop
lock
pop
fnstcw
jp
iret
mov
add
adc
jle
sub
fisttpl
test
subb
rcl
xor
nop
cmc
movsl
push
jo
jno
cs
out
call
and
jle
inc
sub
mov
insb
jbe
jo
icebp
or
xchg
mov
jo
stc
pop
xor
push
xchg
ja
icebp
mov
insl
lock
aad
pushl
mov
jne
addr16
xchg
jo
push
in
ss
loopne
jmp
mov
mov
stc
mov
rorb
jnp
mov
and
aad
push
int
xchg
push
jo
mov
xor
push
pushf
mov
sub
ljmp
das
xchg
fnstenv
mov
test
cli
add
jo
sbb
setno
adc
sbb
insb
pusha
aam
lock
lret
gs
sub
std
push
stc
in
je
loope
or
cmp
cmp
imul
mov
stc
push
repz
shll
sbb
mov
mov
sbb
or
cld
imul
ja
xchg
pop
dec
idivl
or
pushl
push
sbb
add
mov
dec
fldcw
or
jo
xor
cmp
inc
or
xchg
leave
jo
inc
adc
jo
push
in
das
mov
call
pop
scas
bound
int3
jo
sub
pop
aad
leave
js
or
cmp
cs
push
cmpsl
jp
scas
insb
movsl
xor
mov
test
aad
push
xchg
or
mov
ret
push
add
jo
movsl
cmp
int
fadd
push
lods
hlt
adc
ret
pop
jo
adc
pop
insl
loope
mov
les
pop
mov
sbb
mov
popa
sbb
imulb
jo
dec
mov
jmp
xor
test
movsl
and
mov
cs
iret
pop
mov
mov
mov
mov
ljmp
aad
cmp
cmpsl
mov
push
jo
dec
mov
push
roll
jo
lods
mov
jno
lahf
and
pop
outsb
cmpsl
outsl
data16
pop
lret
xchg
mov
loopne
jo
subb
jo
shrb
sub
nop
fwait
jo
xor
fildl
pop
cmp
stos
xchg
push
int3
add
dec
cmp
test
xor
ja
pop
sahf
gs
adc
cmp
mov
out
mov
cld
jmp
push
ror
test
jne
in
mov
popf
xor
cmp
jnp
lds
adc
jnp
ss
int
xchg
xchg
test
xor
jo
les
or
jo
mov
cmp
sbb
popl
jg
sahf
fadds
cmpsl
in
jo
mov
stc
jns
mov
xor
ss
mov
jo
addl
mov
outsl
lds
dec
stos
jo
pop
mov
insl
andl
call
jo
fldcw
lock
xor
mov
mov
arpl
aaa
loope
mov
cmpl
sahf
jo
push
jb
loopne
arpl
ret
sub
xor
jae
out
std
and
pop
call
inc
cmp
sti
mov
insb
xchg
adc
xor
inc
jle
fdivs
dec
mov
movsb
cmp
dec
mov
or
mov
bound
dec
insb
and
or
mov
enter
sbb
ficomps
xchg
call
popa
sbb
inc
or
pop
imul
mov
loopne
dec
jo
push
pop
jmp
mov
out
test
fwait
jne
test
jo
aad
xchg
push
cs
stos
adc
ja
pop
push
add
adc
lock
push
test
in
add
dec
roll
hlt
insl
mov
xor
imul
push
mov
fmull
ret
cli
mov
call
adc
xor
ljmp
stc
add
jmp
test
sbb
in
push
mov
imul
pop
or
jo
mov
mov
inc
sub
dec
das
out
mov
add
cs
es
std
pusha
pushf
or
pop
xchg
outsb
dec
jge
ljmp
add
mov
cwtl
jo
sub
dec
pop
add
ret
mov
mov
ja
jae
add
mov
jo
popf
andb
sub
jno
loop
mov
push
jbe
idivl
jecxz
lret
inc
fidivs
mov
mov
or
in
testl
hlt
cmp
add
adc
jo
fstpl
xchg
movsl
pop
stos
jle
jo
test
inc
popf
loop
xchg
in
push
clc
jg
pop
lret
dec
je
lock
orb
arpl
pop
jo
sbbl
and
add
jmp
push
fwait
push
mov
ret
imul
scas
jmp
pop
jo
rcrl
add
add
mov
or
xchg
clc
sbb
mov
out
ljmp
test
push
ss
bound
divl
push
mov
adc
enter
jo
mov
or
mov
ss
xchg
out
inc
imull
sbb
and
mov
jp
scas
jo
push
push
mov
aaa
jo
pop
fcmovnb
out
in
jo
or
lcall
out
dec
int
ja
fcmovnu
aam
lock
test
ja
mov
int
adc
pushf
ret
add
push
mov
fiadds
jo
aad
imul
sarl
lock
jo
mov
call
jecxz
push
jo
dec
jne
rcrl
sbb
mov
addr16
outsl
test
jle
insl
in
sbb
lea
xor
jo
fs
imul
fidivs
lret
cltd
mov
mov
sbb
cmc
or
sub
loope
mov
outsl
sbb
pop
mov
mov
cld
add
mov
shll
stos
fildll
mov
lea
push
fadds
push
ja
jle
imul
mov
aad
jo
aam
lea
in
jo
sub
add
out
insl
shl
jae
shrl
lock
or
dec
jp
xchg
xor
jo
call
outsb
aad
and
lock
enter
push
mov
adc
stos
icebp
clc
movsl
outsl
dec
hlt
lock
jo
cmc
add
and
shll
mov
inc
leave
cld
in
das
jmp
movsl
sahf
cmp
fs
mov
cmc
or
dec
sub
jmp
clc
xor
jmp
add
lret
loope
addr16
push
xor
pop
repnz
divl
lret
rcll
jno
icebp
jo
repz
subb
das
pop
mov
jo
xor
ret
xor
daa
add
subl
add
cmp
mov
jo
out
mov
cmp
shrb
inc
dec
fwait
js
cmpsb
fnstenv
mov
jo
inc
xchg
rcrb
fnstsw
mov
jne
xchg
mov
mov
jecxz
testb
lods
jno
sti
push
jo
xor
push
pop
jne
dec
adc
sbb
test
mov
and
jge
lods
or
mov
lods
adc
and
jbe
mov
pop
mov
jmp
jnp
cmp
lock
aad
push
insl
fmul
xor
cwtl
mov
push
cmp
xor
dec
cmpsl
cmovle
sbb
xchg
jo
mov
test
and
out
aam
sbb
inc
jae
and
addr16
mov
ds
push
jo
pop
movsb
aam
aad
jae
cmc
xor
stos
inc
cmp
dec
jo
shl
push
pop
add
jo
cli
push
jle
jmp
sub
dec
adc
jo
mov
rcll
xor
inc
pop
negl
jo
jno
xchg
mov
mov
xor
pop
mov
lock
sub
decl
push
lcall
in
jo
dec
shll
pop
mov
pop
test
sbb
push
lcall
ret
test
cmpsb
jbe
lock
xor
jo
mov
jne
jo
inc
dec
pop
mov
xor
jo
in
int3
lods
mov
andl
and
clc
fstl
fmul
dec
jo
push
jmp
scas
jo
stc
bnd
dec
and
aas
lahf
mov
jns
jo
std
cmp
jo
or
cld
divl
sbb
les
scas
pop
mov
or
insb
or
call
jae
xor
mov
mov
fidivrs
jg
jno
jo
into
rcrl
mov
cmp
retw
repnz
notb
popf
insb
ficompl
add
jg
stos
push
jo
and
fsub
imulb
mov
insb
cmpsl
sbb
shrl
sbbl
mov
outsl
adc
cmpsb
js
dec
push
test
sbb
inc
add
xor
out
cmp
xorb
jo
popf
jae
or
push
mov
cmpsl
jmp
fbld
dec
sub
inc
in
ja
lods
movsl
adc
mov
xchg
push
jo
and
cmp
divb
aad
sbb
mov
add
jne
rcr
mov
cli
sahf
mov
hlt
inc
sub
pop
loope
nop
fcompl
cmpsl
into
push
sub
lea
xor
mov
push
inc
jb
cmp
jmp
pop
push
jo
sbb
loope
pop
or
enter
test
pop
cmp
adc
pop
dec
push
xor
mov
mov
imul
push
out
mov
cmpsb
dec
mov
adc
outsb
pop
jo
pushf
xchg
js
xor
fcmovnbe
inc
iret
test
xor
sbb
push
adc
insl
stos
mov
xorb
shlb
sub
ja
ret
mov
jmp
xchg
insl
aas
pop
xchg
inc
fidivs
xlat
les
sbb
out
and
inc
pop
jge
fcoml
or
jl
fidivrs
fsubs
jmp
lock
arpl
in
jo
mov
jg
jo
ds
es
rcll
aam
rcr
lock
push
aad
mov
insb
fcomps
dec
cld
cmpsb
push
xchg
shll
mov
aad
sbb
lahf
xchg
popf
mov
dec
cli
adc
inc
stc
icebp
fwait
arpl
test
jo
and
or
mov
push
and
cli
aad
lods
jle
xchg
imul
xor
mov
inc
sub
adc
push
outsl
push
mov
mov
rcr
jl
mov
clc
int
aad
aas
add
adc
push
push
or
mov
cltd
xorb
dec
mov
aas
cld
mov
and
imul
jo
or
lds
jg
pop
mov
pop
jo
fwait
ss
insl
add
or
in
dec
outsb
cmpsl
jmp
adc
inc
and
inc
leave
jo
dec
jl
fcoml
ja
loop
data16
loopne
pushf
dec
or
out
pop
cmp
mov
inc
div
mov
add
lock
paddsw
repz
xchg
push
jmp
pop
test
dec
pop
mov
call
and
and
into
leave
and
pshufw
fcoml
pushf
push
xchg
jo
shl
xchg
jo
cmp
sub
das
stos
fdivl
jo
stos
ds
pop
pop
out
bound
or
fnstenv
rorb
ss
lods
jo
cwtl
mov
mov
enter
fadds
pop
jge
cmp
mov
mov
pusha
std
mov
push
or
and
xchg
aad
iret
pop
repz
jo
cmpsb
shll
xor
adc
fistpl
or
loop
pusha
fstpl
loopne
mov
adc
jl
test
jle
insl
je
mov
xchg
add
jnp
ds
or
jo
adc
cmc
jae
je
jo
push
mov
sub
fnsave
push
cmova
icebp
stos
insl
dec
adc
imul
movsl
jo,pt
or
pop
jo
sbb
push
xchg
int3
aad
lods
lods
jo
test
mov
cmp
lock
rep
cmc
ret
jo
decl
add
and
jo
pop
xor
adc
adc
int3
cmp
inc
dec
jo
pop
mov
sarb
sub
and
mov
push
push
push
sub
lahf
enter
xchg
jne
nop
aam
xchg
out
addb
aaa
dec
daa
jno
push
mov
insb
into
mov
cwtl
push
es
jp
xor
fnstenv
pop
lcall
mov
jo
rcl
xor
cmpsl
lea
pop
or
push
sbb
mov
dec
push
lds
fmull
xchg
dec
push
lods
inc
jo
sbbb
jo
enter
mov
stc
enter
aas
push
inc
sbb
pop
imul
jo
mov
jne
lea
or
das
hlt
je
dec
imul
mov
nop
in
mov
addr16
mov
mov
cmpsl
push
cmp
xor
fldenv
mov
jo
fcomps
sti
subb
jo
out
adc
jae
xchg
fmulp
out
movsl
mov
jmp
cli
lods
popa
sub
xorb
cmpsb
mov
fs
or
and
push
cmc
adc
inc
cmpsb
outsb
ret
std
mov
mov
cmp
mov
or
jo
pop
push
hlt
lahf
and
leave
jp
cmp
mov
inc
fcoms
test
jae
cmpsl
dec
mov
mov
hlt
mov
sti
pop
lods
insl
mov
jecxz
xor
scas
jo
adc
ja
push
xchg
aam
loopne
pusha
fbstp
flds
mov
jl
xchg
andb
in
bound
sar
aaa
inc
shrb
push
into
xor
cmpsb
aad
outsb
popf
pusha
sbb
loope
mov
jge
jno
xchg
shll
xor
cmp
xor
push
out
ds
add
fldenv
xlat
xchg
add
adc
and
fldt
mov
rcl
negb
mov
inc
ja
xchg
arpl
or
nop
mov
xlat
fneni(8087
lret
or
dec
arpl
xor
sub
pop
inc
lahf
lcall
mov
push
scas
cmp
fwait
lods
pop
in
mov
pop
fisttpl
iret
stos
data16
cli
jo
mov
loope
xchg
loop
dec
inc
aam
lock
sub
jmp
jo
mov
jmp
aad
jno
sbb
dec
mov
data16
jo
popf
addl
leave
shlb
xor
cltd
divb
push
push
pop
jns
lcall
sbb
outsb
sbb
mov
jb
pop
daa
ljmp
aad
jo
fmul
lds
test
js
mov
xchg
cli
push
push
mov
pop
fsubp
jns
mov
dec
xchg
pop
lock
xor
add
lret
stos
loop
xor
rcrb
push
mov
int3
arpl
pusha
push
ljmp
addr16
into
jo
or
ljmp
jne
pop
lock
jo
gs
pushf
cmc
pop
push
nop
mov
movsl
cld
adc
jbe
mov
in
jge
jo
in
mov
call
add
sbb
sub
adc
dec
jo
in
pop
xchg
outsl
leave
out
insl
push
mov
add
mov
rcll
les
rcrl
adc
push
out
addr16
or
and
sub
repz
inc
repnz
pop
add
test
aam
fisttpl
or
aad
sbb
fidivrl
mov
mov
and
and
xorl
push
out
push
mov
ja
outsl
push
je
repnz
adc
ja
and
enter
jnp
aam
imul
xchg
mov
fldcw
lahf
sub
jb
insb
out
pushf
incb
mov
arpl
loope
out
test
jmp
insb
xchg
jo
ds
in
inc
les
pop
iret
mov
mov
inc
loopne
sub
stos
mov
out
adc
insl
aas
sahf
inc
mov
add
xor
pop
xchg
pop
in
aam
push
jnp
mov
dec
mov
stos
jae
sbb
fsubrl
cmpsl
insl
or
shl
xchg
cwtl
pop
in
jo
aad
mov
cmc
dec
int
mov
in
adc
jo
adc
data16
add
pop
jo
push
sbb
push
hlt
arpl
cld
cmp
mov
aam
leave
sbb
les
jno
test
xchg
mov
lock
testl
jo
ret
lret
xlat
dec
mov
fidivrs
adc
jae
aaa
shlb
mov
adc
cmp
xor
mov
cs
lahf
xchg
jo
pop
imul
sbb
dec
repnz
lahf
mov
mov
add
insl
jmp
cmp
sarb
test
movsl
cmp
dec
push
xchg
out
jo
das
pop
jbe
pop
adc
icebp
lea
rdpmc
adc
add
rolb
rclb
lret
push
xchg
pusha
js
jg
push
out
ret
bound
in
jo
inc
dec
gs
cmp
xchg
lock
jmp
sub
pop
jo
mov
ret
xchg
jo
lea
pop
or
mov
inc
data16
stc
ret
pop
loope
lds
inc
adc
lods
cld
jnp
in
cmc
jo
push
and
mov
mov
movsl
loop
jo
sub
inc
pop
pop
lahf
adc
inc
mov
outsl
out
iret
jo
cbtw
in
dec
fistpl
jo
sub
repz
aad
insl
push
or
adc
cmc
test
dec
pop
fdivs
arpl
je
cmp
lock
xchg
or
jo
cmpsl
test
out
adc
sub
clc
testl
fwait
aad
mov
jae
sbb
push
mov
jo
sbb
jae
cmp
pop
jo
hlt
ja
xchg
add
andb
data16
jo
mov
in
jo
out
adc
aad
pop
dec
push
popf
or
pshufw
lret
and
movsl
mov
fs
push
xor
sub
add
les
mov
and
es
icebp
pop
imul
fmull
lock
sub
pusha
inc
nop
jo
or
adc
jo
rcll
jo
gs
adc
cmp
pop
cmp
sahf
add
and
shlb
shr
xor
jo
scas
test
cmp
sahf
jo
in
mov
dec
inc
fnstenv
jne
or
stc
inc
jo
lret
out
ret
push
fwait
mov
inc
leave
xchg
push
mov
jo
fistpl
xchg
insl
cmp
fisubrl
ret
and
cltd
pop
jo
imul
xor
flds
sahf
adc
aad
sti
mov
arpl
jnp
sbb
jno
lods
fyl2x
in
roll
push
pushf
mov
pop
or
sub
dec
jo
jns
jl
andb
jg
pop
adc
fdivrp
dec
call
mov
mov
xchg
fildl
add
adc
cmp
sub
shr
jl
int
push
dec
sub
cmp
push
adc
mov
inc
cmpsb
pop
cld
mov
mov
push
lea
mov
dec
addr16
and
ror
test
xchg
fcomip
gs
jo
mov
fcmovnbe
jo
outsb
cmp
add
or
in
pusha
adc
aad
mov
andnps
jo
mov
cmpsb
sub
iret
int3
popf
aad
lods
sarb
mov
mov
pop
lahf
pop
cwtl
jo
adc
fwait
pop
nop
popa
push
mov
in
mov
popf
jo
mov
xchg
cwtl
fmulp
cmp
sbb
jb
scas
inc
mov
fdivl
ljmp
daa
imul
jns
call
aas
pop
or
mov
xor
je
pop
shr
fcoml
shlb
popa
insb
mov
dec
mov
lock
outsl
and
xchg
fwait
cs
push
jo
xchg
xor
rcrl
jp
pop
sbb
test
inc
int
mov
cwtl
push
inc
jo
dec
add
fwait
jo
out
and
xor
jo
fs
jo
cmp
cmpsl
imul
std
loopne
jo
push
out
test
shrl
lock
xor
aad
or
or
dec
xor
js
xchg
movsl
xor
jbe
add
jae
call
bound
daa
jo
repnz
pop
in
jnp
mov
fwait
push
dec
inc
push
jne
mov
lcall
inc
lea
pop
cmp
out
leave
jne
push
inc
scas
jo
aam
mov
daa
jne
pop
enter
mov
js
shll
jae
int
add
mov
add
jo
jl
gs
xchg
test
mov
insl
je
or
fsubr
xchg
cmp
jae
mov
shl
dec
mov
xchg
cmp
mov
jp
jo
test
testb
pop
inc
jl
mov
stc
movsl
or
add
testl
out
mov
pop
rep
xchg
mov
dec
lret
jo
stos
test
mov
pusha
dec
sub
rol
push
or
stos
jne
mov
mov
mov
loopne
test
cs
cld
sti
adc
or
outsb
addb
or
jp
insl
leave
imul
push
pushf
add
inc
pop
adc
nop
xor
into
xchg
adc
push
cmp
call
jne
mov
in
jnp
adc
push
jo
popf
cmp
push
pop
mov
pushw
ja
ljmp
popa
les
mov
xor
pop
jge
shrb
dec
mov
jns
jo
je
xchg
outsb
int
pop
xchg
scas
test
jo
movsb
add
dec
xlat
stos
mov
fsubl
cli
xor
loope
ja
sbb
ljmp
lock
call
adc
xchg
fisttps
jae
in
imul
pop
cmp
nop
pop
inc
jo
and
lahf
xor
xchg
jo
inc
std
or
cmpsb
enter
push
dec
ja
push
in
and
jo
mov
lcall
dec
iret
repnz
pop
jo
into
push
int3
jo
dec
fistps
push
adc
xor
push
aas
xor
sub
stos
pop
mov
scas
jo
in
push
mov
aad
pop
jl
outsl
repnz
jo
mov
scas
cmp
mov
cmpsb
mov
xchg
addl
cmp
xchg
or
dec
push
jo
je
xchg
fnstcw
xor
aad
cwtl
xchg
add
xchg
fmull
lahf
jo
jnp
mov
mov
cmc
dec
jmp
jge
lock
jg
cmpsl
repnz
inc
jge
and
int
into
jo
inc
pushl
adc
dec
jns
pop
stc
insl
loope
inc
xchg
and
mov
xchg
pop
mov
jo
mov
pushf
insb
mov
jo
jae
aas
loope
rorl
push
jmp
cmp
aad
mov
sub
add
cmp
fistpll
mov
fs
jns
jo
and
xchg
mov
jo
xchg
mull
push
sub
icebp
dec
into
fistl
add
push
mov
std
inc
scas
push
jo
adc
mov
lods
fdivr
mov
inc
or
cmp
jo
push
movl
test
scas
and
xor
in
jo
sbb
inc
cltd
jne
jo
data16
jge
sbb
aam
test
xchg
dec
notb
lds
xor
or
cmp
mov
xchg
jo
fcoml
sbb
mov
sub
jo
xor
mov
jo
test
cmp
jo
rol
and
sub
push
bound
or
pop
icebp
or
jnp
fsubrl
lock
inc
mov
cltd
pop
out
jo
lahf
in
outsl
inc
je
dec
or
out
test
jmp
jo
cli
pop
inc
arpl
inc
jo
dec
fsubl
pop
xchg
movsb
sub
jp
push
dec
aad
aaa
mov
int
sbb
xlat
push
jo
lcall
insl
movsb
mov
lods
mov
jmp
dec
xchg
sub
push
push
std
filds
lods
jo
and
jo
mov
lods
cli
jle
insl
xor
int3
inc
adc
repz
int
js
push
dec
je
lock
xorl
add
mov
stos
jmp
dec
mov
and
dec
mov
add
addr16
sbb
je
enter
test
jo
sahf
aad
gs
fldcw
int
xor
insl
jo
shrb
iret
pop
jo
jne
xchg
int3
out
movsb
jg
push
je,pt
and
inc
mov
lods
lock
popf
fwait
cmp
sub
fcmovnu
push
jmp
inc
mov
sar
cmp
jno
sbb
pop
xchg
popf
jae
sbbb
dec
jo
test
cmpsb
xchg
das
xor
sbb
dec
sarb
ja
outsl
rorb
inc
in
incl
push
scas
nop
cwtl
lcall
fwait
xor
push
jb
rcr
call
jne
mov
or
push
sbb
pop
jo
fldcw
sub
xchg
cmp
loop
jo
or
addr16
push
les
lea
or
xchg
mov
jbe
pop
push
insl
push
xor
mov
lds
scas
ret
xchg
ja
jo
cmp
push
dec
push
sbb
imul
pushf
cmp
or
jo
lahf
test
fldt
jae
dec
testl
jo
fsubrl
add
and
pextrw
gs
leave
jo
sub
add
cs
loopne
subl
pop
xchg
push
mov
or
mov
jo
lret
lahf
shll
call
add
add
inc
jae
lcall
jmp
fcmovnu
add
adc
es
cld
dec
in
dec
pop
mov
icebp
aad
cmp
ja
ret
wrmsr
jbe
repnz
inc
push
push
mov
sahf
pop
add
lea
test
jmp
cmp
outsb
cmp
sbb
push
pop
push
ret
test
leave
mov
jo
enter
push
into
daa
dec
jbe
ja
push
sbb
jo
fldl
dec
cmp
jo
cmp
and
test
lret
add
mov
jo
and
mov
cmp
push
push
adc
jnp
fstpl
insl
mov
dec
pop
xchg
push
jo
push
call
mov
stc
out
mov
cmp
push
mov
mov
push
aad
push
cmc
xor
enter
notb
pop
jo
sbb
xchg
add
aam
and
test
inc
repnz
jo
mull
jo
orb
lea
pop
arpl
emms
rcrb
insl
shlb
pop
lret
into
jo
sub
jae
xchg
call
std
dec
push
fnstenv
mov
sbb
stos
jge
cmp
add
dec
pop
pushf
jmp
jo
or
adc
mov
push
jo
push
inc
mov
jo
lret
fwait
pop
sbb
sahf
xor
mov
pusha
fdivrl
loop
aam
in
cmc
push
sub
jle
jo
data16
repnz
jo
cmp
pop
mov
pop
bound
dec
jp
bound
xor
pop
jo
and
lea
mov
sbb
dec
jmp
adc
jb
popa
push
inc
mov
jl
arpl
imul
rorl
lock
pop
cmc
inc
js
adc
adc
pop
push
or
iret
xor
sbb
rol
push
pop
xchg
mov
or
imul
inc
xorl
in
inc
jo
fucomi
sub
push
pop
xor
add
jo
mov
les
pop
cwtl
sub
lock
push
and
push
dec
jo
xchg
push
fwait
dec
or
arpl
cmp
cld
lea
jns
pop
jo
popf
mov
sbb
in
cmc
sahf
xchg
ljmp
ret
xor
push
mov
adc
mov
jae
into
sub
sbb
cli
comiss
jo
adc
mov
ret
push
xchg
jo
cmp
shlb
pop
mov
aad
scas
ficompl
or
sub
cli
mov
sbb
jbe
cmp
xorb
push
sbb
addl
hlt
rcrl
js
jo
cmc
push
sbbl
and
dec
jp
scas
fcomi
push
sbb
mov
iret
ret
push
outsb
mov
cmp
sbb
stc
push
bound
ljmp
in
out
mov
add
push
adc
xchg
lds
insb
out
xor
add
xorl
add
jo
and
dec
push
outsb
or
xchg
and
jmp
sub
adc
jo
adc
add
insl
imull
add
push
jo
mov
into
push
lret
xorl
mov
pop
jnp
ja
stos
xchg
das
jno
jns
enter
bound
push
jo
mov
push
and
push
jae
pop
mov
jo
xchg
popa
iret
sub
cld
insl
in
cmp
inc
mov
jo
mov
fs
jge
dec
cmp
push
fsubl
mov
pop
ljmp
leave
and
outsb
xchg
or
push
xor
sbb
adc
neg
or
cmpsb
insl
sbb
cmp
out
push
mov
jge
jo
and
out
mov
mov
mov
jo
adc
jnp
jl
std
lock
xchg
jle
jo
out
cmp
inc
mov
divb
lock
outsb
int
cmpsl
cltd
lods
or
xchg
sbb
adc
into
adc
sbb
pop
adc
scas
inc
addr16
lods
dec
xor
lock
or
jne
jbe
push
inc
insl
lea
cmp
scas
ret
cwtl
xor
mov
mov
pop
mov
mov
stos
xor
jo
jne
imul
fwait
pop
ss
mov
mov
push
cmp
jg
daa
xor
call
pop
sub
lock
or
or
push
scas
fs
cmpsl
jo
out
push
and
ds
lods
faddl
jp
aad
int
cltd
subl
cwtl
je
xchg
mov
and
mov
cli
fcoml
inc
jo
inc
rol
lcall
inc
or
dec
xchg
mov
pop
cmp
and
mov
out
fdivs
pushf
shll
fwait
dec
movsl
adc
lret
sbb
test
shlb
fcmove
push
fistpl
sbb
ljmp
rol
jno
mov
inc
and
stos
jo
das
push
and
pop
cmpsl
dec
cs
lock
aad
mov
cli
out
jmp
repnz
and
int3
sub
xorb
xor
sub
into
adc
jo
dec
push
int3
movsb
cmp
mov
jb
xchg
lea
sbb
rcl
jo
dec
and
push
scas
jo
xchg
push
lods
dec
mov
dec
jo
hlt
lds
insl
adc
push
pushf
jno
cmc
mov
out
fcmovne
adc
mov
mull
or
jo
xchg
test
dec
lods
les
sbb
rorb
jo
clc
add
pop
adc
cmp
lds
lods
push
mov
adc
jo
cwtl
dec
movsl
and
pop
mov
xchg
jnp
inc
sub
aaa
jo
insl
xchg
mov
loop
jo
pop
scas
pop
out
aad
push
outsb
stc
mov
push
in
insb
xor
xorl
movsl
fildll
and
fimull
jmp
mov
push
out
out
mov
std
lock
in
fdivr
xchg
jl
push
sub
push
add
enter
dec
cld
scas
jo
sbb
and
cli
inc
sbb
inc
jo
call
pop
mov
and
mov
fwait
jg
jo
int3
stos
inc
int
mov
cmp
repz
movsl
cmp
pop
and
mov
outsb
xchg
push
add
faddl
out
cs
lahf
lea
clc
jmp
jo
push
mov
hlt
jo
mov
imul
xchg
shll
mov
mov
mov
xchg
push
enter
push
sub
jo
push
movsl
dec
fmul
cld
jo
jno
xchg
aad
jo
and
cmpsb
cmp
filds
dec
mov
xchg
xor
pushf
out
jo
xor
add
pop
pop
mov
lock
imul
aas
cld
push
mov
fwait
loop
mov
fldenv
adc
shll
in
insl
mov
stos
fistl
jp
insl
das
leave
aas
pop
rep
jg
mov
jb
jae
test
js
call
jp
adc
and
dec
sbb
outsl
fisttps
fdivs
out
jl
adc
push
adc
fnsave
rol
or
cld
jo
sbb
or
jo
sub
inc
mov
jae
fisubrs
lock
or
insl
xchg
push
dec
xor
cmp
popa
mov
test
ljmp
jo
cmp
xchg
jo
or
push
lret
mov
push
bound
ja
test
loopne
jo
sahf
adc
in
test
insl
std
xlat
jns
mov
out
out
or
push
xchg
cli
aad
jo
lds
and
in
adc
call
adc
mov
fisttpl
mov
jo
xchg
jge
sub
dec
push
jo
push
stos
mov
jae
outsb
enter
sbb
push
fldcw
in
jno
call
dec
mov
mov
push
aas
out
js
pop
cmpsl
jnp
insb
test
push
ret
and
xchg
insl
fsts
lea
adc
jo
ficoml
pop
pusha
sti
outsb
mov
cli
mov
pop
inc
mov
xchg
dec
jae
add
ds
aam
jo
ljmp
pop
cld
ret
addr16
stos
insb
stc
lock
dec
cmc
pop
push
pop
into
movsl
push
les
cli
subb
fwait
mov
stc
repz
push
jnp
jne
push
jo
lea
lods
lds
lock
mov
or
inc
call
loopne
pop
ja
hlt
dec
jnp
and
push
clc
push
add
mov
jg
cmp
out
shl
jo
cmp
cmp
mov
jo
sbb
mov
call
insl
sub
fcompl
lahf
clc
inc
je
jo
jle
mov
insb
fsubl
jo
fcmovnu
add
push
fcomip
jne
pop
push
xor
pop
push
fimuls
enter
mov
bswap
insl
pop
popa
cs
pop
jne
xchg
or
and
push
adc
in
mov
mov
addr16
call
jo
insb
cmpsl
mov
pop
das
mov
jo
xchg
pop
jmp
jo
test
mov
ficoml
mov
pop
xor
cmpsb
push
xor
das
pop
jo
ret
sbb
jo
movsl
jnp
pop
rorb
jo
in
push
js
mov
dec
xor
ss
daa
lods
pushf
insl
jo
and
jge
jo
in
push
ret
mov
stos
dec
mov
push
xlat
outsl
dec
cmp
arpl
in
ss
out
sti
repz
push
jo
xor
fldl2t
shlb
mov
xor
cmpsb
sbb
call
or
sub
pop
mov
jo
hlt
mov
jo
sub
xchg
inc
aad
je
jecxz
xor
int3
lahf
jo
int
ret
gs
mov
adc
cwtl
ds
or
pushf
lock
jae
cmp
nop
decb
jae
fisubs
clc
scas
sub
cmc
jo
xchg
cmp
xchg
cmp
jo
fisttpl
push
das
dec
and
cli
shl
dec
xchg
ja
pop
pop
ret
cmp
pop
leave
jae
inc
mov
lock
or
jo
fsubl
sarb
pop
jo
ss
jle
in
cwtl
lahf
dec
nop
movsl
jo
es
cmp
push
push
cmp
jno
jo
jnp
xchg
loope
cmp
mov
xor
fistpl
push
and
jo
loopne
das
icebp
cmp
xlat
xchg
pop
jo
jns
mov
adc
cli
jo
xchg
aam
jecxz
xchg
dec
jo
and
shrl
cmpsl
push
nop
imul
cmp
adc
mov
fwait
sbb
xchg
clc
jo
fcoml
cmp
inc
pushf
pop
mov
xchg
das
aam
jo
dec
push
sarl
or
test
jo
sbb
ret
add
inc
push
aam
dec
xor
insl
or
sahf
jb
and
jo
sub
push
neg
jo
add
mov
cmp
xor
xchg
lcall
mov
jo
sbb
push
pop
xor
mov
mov
or
xchg
xlat
mov
shlb
clc
mov
bound
sbbb
xor
cmp
jo
testb
outsb
push
adc
leave
insl
pop
outsl
jo
adc
aad
insl
daa
sub
dec
xor
int3
xchg
movsb
push
xor
xchg
mov
lret
cld
shlb
add
push
fnstsw
push
aam
or
push
movsb
out
cmp
jo
sub
std
lahf
sub
popa
jo
addr16
dec
xor
bound
stos
inc
pop
cmp
fdivrs
push
mov
outsb
and
inc
push
leave
movsl
nop
mov
insl
fstpt
sbb
jo
lea
jno
arpl
sahf
push
inc
popf
mov
pop
outsb
push
dec
add
nop
sub
outsl
jo
mov
loopne
sub
sub
lock
insb
jo
xchg
mov
pop
int3
loopne
adc
sti
das
cltd
ja
stc
add
outsb
daa
fbstp
test
int3
jbe
jge
jo
stos
cmpl
insl
dec
dec
cmpsb
rorb
jo
enter
xchg
aas
jo
push
dec
push
insl
stos
push
jl
cli
test
cmpb
insl
ret
repz
jg
add
cwtl
out
jo
dec
nop
jl
es
dec
fildl
ja
dec
add
inc
cmp
push
addr16
outsb
or
lock
jns
call
xor
jl
sbbb
adc
mov
and
mov
in
fnstenv
ss
mov
enter
ret
test
pusha
repz
jg
dec
mov
push
add
push
adc
bnd
out
lock
pop
sbb
or
push
cli
dec
mov
mov
ja
dec
movsb
fnstenv
aad
mov
hlt
pusha
loopne
jnp
mov
inc
fnstenv
imul
mov
mov
adc
test
aad
cmp
pop
out
sub
jo
pop
ljmp
pop
and
aad
mov
dec
mov
lock
mov
arpl
sbb
mov
jmp
fstl
call
sbb
mov
xorl
jmp
jo
mov
in
arpl
fbstp
sub
jo
hlt
push
adc
push
mov
mov
inc
repz
mov
cmpsl
push
loopne
mov
test
aas
mov
pop
aad
jae
mov
mov
jo
fistps
xor
aas
lds
mov
aad
xchg
test
sbb
xor
pusha
dec
imul
test
into
mov
aam
fcomp
insl
sti
xchg
popf
fcompl
jno
in
insl
inc
and
mov
jno
ss
imul
lods
in
popa
movhps
jo
mov
aas
xor
dec
rcrb
xchg
and
mov
cmp
bnd
xchg
lds
xor
jl
dec
out
jnp
inc
movsl
or
push
jo
aad
xlat
not
popl
push
jo
incl
enter
ret
push
cmpsl
mov
insl
rcr
ss
sti
cmp
je
xchg
xchg
mov
push
mov
add
push
jo
xor
les
ficompl
fnsave
add
pushf
jae
jl
fbstp
pop
push
fsubrl
xor
inc
push
testb
mov
or
add
fmuls
lock
sub
jmp
rclb
fldcw
mov
pop
adc
mov
jo
in
mov
jo
dec
pop
iret
xchg
pop
mov
jo
mov
shll
push
xchg
jbe
fistps
int
shl
dec
inc
popf
orl
mov
sbb
loopne
adc
pop
pop
iret
das
mov
daa
test
pushf
dec
cli
mov
lock
mov
adc
pop
sbb
lods
pop
notb
mov
mov
cmc
aaa
fisttpll
sahf
xor
mov
sbb
clc
out
lret
outsl
shlb
mov
jne
push
sbb
adc
fcomps
shlb
xchg
roll
popa
inc
das
or
out
jo
aad
add
arpl
and
js
outsl
ret
mov
jge
inc
pop
adc
jo
rolb
dec
jo
mov
jne
sub
cmp
test
fistpl
jl
add
adc
stc
jo
data16
lea
jo
mov
or
mov
jbe
faddl
loope
and
or
dec
ret
cmp
jo
inc
or
mov
push
jo
lret
out
shlb
int3
test
sub
nop
lea
push
aam
xchg
aad
jo
or
jle
mov
jo
fs
or
cli
jns
xchg
push
ficoms
lahf
pop
jo
mov
cwtl
sub
pop
mov
test
nop
lahf
jo
and
mov
mov
add
mov
or
into
sub
jne
pop
in
jmp
lods
insl
sahf
lock
xchg
adc
jo
sub
xchg
in
add
in
pusha
mov
add
scas
adc
je
sbbl
pushf
out
mov
jo
cmc
aam
fwait
jb
push
insl
fs
icebp
sti
sub
jo
xlat
in
test
aaa
push
bound
icebp
pop
hlt
dec
lret
ja
pop
add
jg
ss
sbb
push
enter
outsb
pop
test
aas
jo
daa
xorb
add
shll
pop
xchg
in
je
and
ret
aas
jp
adc
xchg
jo
push
sti
int3
shlb
imul
xor
lret
xchg
sub
inc
sar
jl
hlt
shl
xchg
in
jo
add
xor
lea
mov
je
mov
push
cwtl
mov
jmp
jo,pt
pushf
cmp
mov
les
push
jo
mov
push
xchg
pop
inc
nop
jo
push
lods
add
aam
enter
femms
popa
jo
mov
jo
push
fcompl
fimull
dec
sub
lock
lods
or
jle
jb
cmp
stc
out
or
rol
icebp
imul
mov
push
xchg
stos
adc
inc
or
popa
in
or
outsb
cmpsb
mov
jb
xchg
js
xor
jo
sbb
cli
ret
jne
ret
lock
out
add
mov
mov
addr16
leave
lea
xchg
das
in
cmp
cltd
push
inc
fs
orb
mov
jne
mov
in
fidivs
roll
cmpsl
jo
bound
fwait
enter
cmpl
pop
sub
and
fwait
mov
jo
inc
add
jo
fistpl
xchg
shll
cmp
pushl
jo
aad
repnz
in
insb
jae
mov
cwtl
aas
test
movsl
lods
lea
es
jbe
stos
sub
jo
mov
xchg
mov
mov
jo
pushw
mov
out
shlb
sbb
xor
mov
lea
lods
jnp
into
fsubrl
jo
repnz
aam
xor
and
mov
out
add
adc
jmp
repz
xchg
fldcw
xchg
jo
jecxz
add
push
inc
ljmp
loop
xor
jle
and
dec
roll
cli
into
cmp
mov
fmull
cmpsb
xor
mov
lods
inc
jno
out
push
je,pt
mov
mov
push
pop
fsubrs
or
pop
fsts
jo
mov
lret
inc
icebp
jo
push
and
fsubs
aaa
jae
imul
cli
mov
add
xor
jo
jmp
test
decl
push
and
or
sti
out
jo
cmc
mov
aad
mov
mov
push
lahf
pop
les
repz
inc
pop
mov
mov
mov
stos
jge
jo
add
insb
mov
lcall
jle
ret
jp
xorb
cmp
imul
adc
add
xchg
loope
xchg
cli
adc
push
pop
test
sub
push
cmp
jo
xor
test
pop
shlb
sub
xorb
frstor
pop
nop
sbb
mov
xchg
repnz
test
adc
push
or
outsb
sub
sbb
popf
mov
dec
mov
lock
sarb
lcall
jne
jae
ljmp
pop
test
insl
loope
mov
lds
pop
lds
je
jo
lods
ds
shrb
xor
popf
mov
test
jo
jmp
bnd
std
enter
sub
mov
pop
adc
or
or
lret
arpl
jo
pop
inc
mov
jo
add
std
jle
pop
pop
int
push
adc
adc
arpl
jmp
jno
addr16
pop
stos
ret
add
pop
xchg
loope
leave
dec
inc
xor
xlat
jo
shrl
test
fcmovnb
add
inc
jo
or
dec
xor
subl
jo
xchg
loopne
jb
jle
jo
xor
fnstenv
jno
cmp
inc
or
add
or
and
sbb
rolb
cmovo
aad
adc
mov
add
jo
inc
adc
jns
add
mov
mov
loope
fisttpll
jae
cmp
xchg
test
xor
dec
lock
xor
jbe
gs
repnz
sub
lret
inc
stos
inc
fldenv
sub
xor
xor
lahf
mov
fsts
xchg
jle
mov
mov
into
hlt
adc
push
div
mov
or
xor
rcr
jo
insl
cmc
enter
mov
inc
cmp
pop
mov
pop
popa
je
or
dec
jo
iret
repz
addr16
mov
ret
std
test
roll
adc
mov
jmp
cmp
pop
fyl2xp1
fistpll
lcall
jo
call
xor
fildl
arpl
rcll
inc
aas
push
jno
adc
dec
lock
xchg
add
jo
xlat
test
sub
push
arpl
aad
dec
or
xchg
and
fcomi
push
lcall
shlb
int
jo
movsl
aad
mov
jne
pop
mov
psrld
lret
imul
xor
mov
sahf
or
inc
push
jno
jo
sbb
cld
add
outsb
mov
jle
bound
in
mov
xlat
lcall
int
xor
test
out
xchg
jo
add
inc
fldt
adcb
imul
push
push
mov
lret
loop
add
stos
dec
jecxz
lock
adc
fdiv
ljmp
sbb
xchg
jp
test
jo
fsubs
test
xchg
push
push
iret
fwait
arpl
lcall
fsubrl
dec
xorl
fxch
ja
jns
nop
jbe
xchg
lret
fwait
pop
ret
jg
xorl
ljmp
inc
jo
arpl
jo
mov
xor
xor
xorl
outsb
lods
imul
pop
push
jo
inc
xor
jno
ret
cmp
add
ret
jnp
test
push
testl
jo
in
es
cmp
dec
mov
movsl
mov
cltd
test
insb
push
loop
jo
aad
imul
and
pop
movsl
cmpsb
inc
cwtl
adc
push
outsl
aas
mov
jo
push
jno
aam
pop
jo
adc
cmp
lea
dec
cmpsl
out
xchg
jo
fisubrl
sub
xchg
loope
sbb
or
out
or
jmp
lahf
cmc
stc
mov
loopne
pop
dec
pop
push
icebp
adc
leave
lods
addr16
sub
jnp
ja
fisttpl
in
jb
jo
fldl
fwait
inc
adc
ret
out
mov
sub
jle
push
jmp
test
xor
outsl
and
sub
xchg
lds
inc
jmp
mov
mov
jb
test
mov
jp
cmp
inc
add
pop
adc
addr16
jo
xor
jo
xchg
push
in
xchg
jo
add
sbb
mov
iret
xor
stos
fcmove
dec
pop
pop
repz
je
add
xchg
mov
jo
cmpsl
orl
sbb
mov
emms
mov
xor
jne
fidivl
imul
out
loop
pop
das
cltd
out
add
adc
stos
repz
xorl
jecxz
jb
inc
mov
sub
jo
add
gs
subl
sub
out
iret
inc
xchg
jo
inc
movsl
fwait
out
roll
dec
add
rolb
inc
fnstenv
jb
sub
mov
mov
inc
shrl
pop
adc
sub
jge
sbb
aaa
imul
mov
jo
jecxz
push
and
lea
adc
cmp
pop
sbb
pop
aad
sbbb
push
lock
outsb
xor
jne
cwtl
adc
loope
shrl
inc
mov
lret
xor
xchg
jo
pop
push
or
push
cwtl
clc
mov
mov
test
inc
adc
insl
dec
fs
mov
sbb
int
je
outsl
out
addb
inc
push
sub
jo
lret
notb
adc
pop
push
mov
push
insb
fdivs
insl
decb
push
mov
jp
sbb
xlat
sbb
mov
push
pop
idiv
push
jle
shlb
leave
or
jp
insb
movsl
push
shlb
das
or
inc
sbb
pop
mov
xor
jle
insl
cmpsl
mov
mov
mov
jo
sti
adc
jo
mov
and
mov
jb
pop
mov
popa
xor
adc
push
sbb
pop
aaa
push
arpl
lock
or
aad
popf
insl
mov
fdivl
lret
and
rcrl
shl
jo
dec
inc
xchg
push
mov
xchg
or
imul
mov
mov
out
pop
lahf
add
pop
jle
fstps
adc
aad
repz
repnz
push
pop
cwtd
xor
bound
pop
fbld
int3
and
jo
orl
xchg
fmuls
cld
scas
out
pushf
out
fistpl
imul
cwtl
or
repz
cmpsb
xchg
push
cmpsl
jno
jnp
ljmp
mov
push
xchg
sbb
flds
mov
ja
mul
ljmp
pop
adc
xchg
sub
out
mov
fmuls
lods
je
mov
sahf
lds
pushf
and
enter
shll
imul
mov
mov
arpl
stc
mov
dec
out
dec
imul
xchg
mov
and
and
jmp
xor
xchg
test
push
push
stos
fisubl
jnp
daa
sub
inc
mov
mov
leave
and
nop
cmp
clc
shll
rcrb
pop
push
push
mov
xchg
icebp
fnsave
test
sbb
incl
into
jo
stos
testl
push
lock
inc
jp
fsubrl
shlb
jo
jmp
cmpsl
jne
loopne
outsl
mov
imul
jae
xor
in
aam
cwtl
out
cmp
movsl
xchg
adc
sbb
or
in
scas
inc
sahf
into
enter
jb
adc
insl
jl
mov
or
sbbb
movntq
sub
das
sub
xchg
hlt
aaa
jo
push
addr16
jge
inc
pop
pushl
sarb
imul
xchg
pop
fistpll
outsb
or
notl
jecxz
jns
xchg
cs
in
fs
jl
pop
push
xor
imul
leave
pop
mov
jo
jnp
sahf
dec
pop
push
cmp
dec
jo
xor
testl
mov
add
xchg
sub
jo
or
mov
gs
cmp
xlat
aad
pop
add
cli
cmp
aam
cmp
rcll
pop
std
dec
adcl
push
jno
sub
rolb
add
cmp
jo
lock
mov
or
jo
push
jp
jns
stos
mov
mov
pop
xchg
aam
cli
jl
rcr
mov
dec
lock
xchg
jp
sbb
into
mov
xchg
pop
or
jo
and
dec
dec
ret
jo
idivb
mov
fdivl
ficompl
push
jo
aad
fildll
ss
test
ljmp
icebp
hlt
sub
loop
jbe
cmp
cs
lds
arpl
mov
ret
adc
adc
pop
xchg
push
xchg
mov
inc
filds
cs
jmp
fdivl
jnp
cmp
bound
jmp
cmp
sub
hlt
jo
sti
or
jae
sub
out
js
int3
lock
and
stos
xchg
add
jae
sub
pushf
mov
and
cld
out
sub
xchg
lret
or
leave
add
mov
outsb
adc
movsb
jo
push
pop
dec
xchg
push
mov
ja
push
mov
mov
adc
test
add
adc
sarb
roll
inc
and
push
fbstp
hlt
out
xchg
cmc
add
std
xchg
xor
ds
inc
mov
and
pop
fstl
leave
cmp
arpl
aas
scas
daa
int
mov
in
or
xchg
iret
push
mov
add
mov
fwait
jo
cmp
pop
mull
jo
into
jge
xchg
popf
mov
bound
les
pop
aaa
sbb
mov
into
mov
and
aam
add
jo
fwait
shl
mov
add
int
or
or
pop
fdivr
jl
lcall
fimull
push
lea
lock
inc
mov
movsb
or
subb
push
test
xor
or
pop
xchg
cmp
mov
mov
add
mov
jns
and
push
cltd
test
call
subb
adc
in
nop
push
ret
mov
shll
inc
dec
pop
cmp
mov
rcll
jo
movsl
xchg
dec
fiadds
inc
sbb
pcmpgtd
jno
outsb
fdivrl
nop
loopne
js
out
outsl
call
xor
or
std
hlt
jo
xchg
xlat
fstpl
loope
rcrb
mov
push
jb
mov
jo
in
lods
dec
aad
push
cmp
sbb
jecxz
gs
inc
lock
push
das
test
insl
add
adcl
test
icebp
jo
stos
adc
push
rolb
add
sub
jo
sub
dec
cmc
jne
sahf
fmul
lock
out
jo
enter
imul
xchg
insl
leave
repz
ror
xor
icebp
stc
cmpxchg
xor
add
mov
pop
adc
rclb
das
push
lret
xorl
inc
mov
jo
sub
repnz
or
fists
sub
inc
jo
mov
jne
mov
jp
out
out
sbb
jo
mov
xor
mov
jo
loopne
hlt
sarl
add
fwait
push
mov
fcom
inc
pusha
mov
jo
cmpsb
fs
mov
jo
dec
mov
in
jle
insl
or
and
sub
aam
popf
inc
fsub
sub
cmpl
pop
sub
jne
cmc
add
adc
dec
xchg
aad
pop
push
fs
ds
mov
sarl
mov
pop
dec
xchg
in
mov
loopne
jo
or
and
sub
pop
lods
sub
mov
cmpsb
out
pop
inc
lret
movsb
mov
dec
andb
fbstp
sub
scas
out
clc
push
xchg
xchg
and
dec
inc
jo
sub
ja
lea
in
notl
dec
mov
push
fldl
add
out
mov
daa
adc
cltd
rol
popa
jo
push
push
test
jo
out
ds
dec
jne
jo
xorl
jo
movsl
roll
xchg
stos
jo
mov
mov
jne
xchg
fmul
jo
popa
fiaddl
push
int
xor
pusha
mov
lock
jne
sbb
int3
out
test
push
cmp
and
shrl
js
loop
cmpsl
cmp
jb
loopne
fcompl
jo
insb
loope
stc
and
jo
notl
out
cltd
subb
sbb
jae
mov
out
xor
aad
adcb
jo
sub
mov
ret
jb
adc
xchg
sbb
ljmp
mov
cwtl
in
or
mov
sbb
jp
push
lahf
addb
jo
es
xchg
int3
push
mov
pop
mov
add
push
jg
out
test
popf
mov
loopne
jae
hlt
ret
cwtl
test
mov
cmp
cltd
jo
pop
jnp
jge
fistpll
mov
jno
sbb
inc
hlt
test
subb
push
xchg
cmp
test
dec
sbb
or
bound
jo
xchg
aad
jmp
jo
mov
adc
pop
xor
sbb
fwait
sti
mov
jo
dec
loop
sub
xchg
jo
jnp
fstpt
movl
xor
push
mov
arpl
fnstcw
jp
jo
int3
daa
and
xor
mov
ret
pop
imul
fldt
jmp
jo
cli
aad
fldcw
push
jo
fstl
jge,pt
pushf
jo
push
push
mov
jo
cmp
shl
cmc
cmp
jo
pop
and
jbe
add
lcall
aad
test
jo
or
aam
fcmovnb
jbe
mov
sub
jo
mov
dec
int3
and
xchg
add
sbb
insl
rol
xor
xchg
jp
lock
dec
icebp
ljmp
sbb
mov
xor
dec
jo
dec
testb
adc
sbb
mov
insb
leave
fwait
pop
ja
jo
sub
cmpsl
ss
push
adc
mov
pushf
aam
lcall
pop
leave
sbbl
jmp
push
pop
or
adc
pop
stc
loopne
out
mov
arpl
push
sbb
test
outsl
push
jo
adc
or
adc
push
ja
cmp
adc
mov
pop
lods
add
cmp
test
xchg
data16
imul
rolb
push
fcmovb
pop
in
add
sbb
push
cmc
insb
or
inc
pop
rorl
add
jbe
add
outsb
mov
dec
jo
cld
loop
cmp
mov
mov
out
ror
sbb
and
mov
xor
jo
xchg
rcrl
or
scas
jo
adc
xor
outsb
xchg
xchg
js
leave
outsl
sub
imul
cmp
xor
bound
ja
out
enter
test
mov
cli
xchg
test
jno,pn
jl
pushf
fdivl
jne
into
shll
sahf
jo
xorb
jne
pop
cmp
jo
xor
dec
jne
lea
loopne
std
imul
test
test
jecxz
mov
mov
aam
mov
jmp
jo
jl
mov
pop
mov
or
lahf
and
pop
jo
jg
adcb
mov
mov
sub
mov
jo
daa
fdivr
xchg
es
jo
aad
mov
cmp
jo
jnp
out
imul
imull
jle
jo
popf
test
jo
xlat
jp
dec
push
es
inc
dec
or
add
repnz
jo
pusha
outsl
pop
hlt
mov
shl
negl
push
nop
test
push
inc
jo
push
jecxz
test
xchg
aaa
in
mov
out
dec
sbb
aam
adcb
jo
bound
pop
and
mov
lock
mov
test
sar
lret
and
jns
jb
into
xlat
push
fistps
js
jo
mov
sub
stos
arpl
or
jmp
add
xchg
lcall
ljmp
cmp
es
sub
xor
mov
mov
icebp
sbb
push
pushf
mov
ljmp
ss
sbb
outsb
jns
ret
jl
cmc
mov
mov
jp
in
adc
popf
pop
loopne
xor
stos
pop
jo
cltd
pop
xlat
inc
icebp
pop
cmp
jae
lock
es
in
xchg
loopne
popa
inc
fdivrl
jns
push
jbe
out
inc
aam
fincstp
loopne
dec
lret
scas
or
daa
dec
xchg
fidivs
inc
xchg
lea
xchg
sub
mov
jo
push
dec
mov
jo
cs
add
and
jle
insl
imul
adc
sub
xchg
add
insl
pop
push
cmp
xchg
fwait
shlb
push
push
fmuls
or
adc
stos
insl
and
xchg
cmp
lret
jle
sbb
pop
pop
int3
adcb
mov
jo
nop
outsl
cltd
add
jo
shll
mov
arpl
push
jo
lock
lret
sbbl
add
inc
in
call
pop
test
mov
imul
or
je
pop
adc
leave
cmpsl
and
fildll
pop
fidivl
xor
popa
ret
in
std
dec
in
xor
pop
xor
daa
call
pop
popf
out
rcll
insl
adc
cli
mov
lcall
lock
jo
lds
push
and
jo
pop
jle
dec
aad
jg
pop
push
pop
pop
rcrl
cmpl
adc
sti
mov
jae
shl
sbb
test
into
mov
outsl
pop
xor
cld
rorl
xchg
jne
fs
lret
jo
cltd
pop
jns
xor
hlt
jo
dec
iret
out
or
scas
mov
mov
jo
lods
mov
mov
ljmp
fistl
sahf
aad
sub
out
push
mov
jecxz,pt
xchg
dec
gs
loopne
mov
jge
dec
xor
inc
fistl
cmp
aad
sub
pop
lcall
jo
int3
dec
ljmp
insl
cmpb
lods
push
jne
repnz
addl
jo
cmp
mov
jnp
pusha
jo
jl
mov
aad
stc
jo
lds
adc
xchg
mov
les
fwait
pop
jne
repnz
addr16
xchg
outsl
popf
ret
jo
aas
mov
xor
jo
notl
adc
jo
addb
jnp
push
bound
out
lret
cmp
movsl
jo
cmp
inc
jo
sub
int
mov
stos
out
mov
or
push
mov
mov
push
sarb
xor
int3
pop
f2xm1
sbb
nop
jo
sub
imull
and
sbb
shr
xchg
mov
jne
push
mov
mov
mov
and
into
cs
mov
dec
xor
jo
push
in
aas
push
aad
enter
jne
jbe
divb
add
jo
push
sub
std
movsb
jp
dec
lahf
jo
sbb
int3
fdiv
jae
cmpsl
jo
imul
loop
cmp
mov
sarb
jmp
or
lahf
jp
test
clc
and
insb
in
jo
push
jmp
cmc
xlat
cmpb
stos
jle
dec
xor
jo
in
addb
imul
sbb
pusha
xorb
jo
pop
pop
xor
hlt
or
aad
jno
jo
mov
jnp
sbbb
je
mov
jo
rcll
jne
out
bound
pop
jo
mov
in
lods
sbb
sbb
loopne
mov
mov
out
shlb
movsl
fldcw
clc
rcll
mov
bound
xchg
pop
rcrl
push
jns
or
jp
enter
mov
ljmp
pop
dec
pop
pop
jo
test
call
mov
js
jo
fisubrs
fadds
pushf
jo
sar
inc
nop
pop
mov
add
adc
sbb
not
insb
mov
sub
je
jne
sbb
dec
pop
pop
dec
or
fwait
pop
mov
or
insb
pop
popa
jle
xchg
xchg
inc
mov
jo
inc
fnstsw
xchg
cmpsb
lock
lods
leave
or
jae
mov
call
xor
jb
sbb
movsl
js
shrb
enter
adc
lods
fidivrs
push
int
das
dec
sub
aam
rcll
mov
pusha
xchg
test
fidivl
push
daa
sub
ficomps
xor
cmpsl
adc
xlat
outsb
movsl
cmp
in
add
pushf
or
pop
mov
cmc
pop
mov
fsts
xchg
add
xchg
sbb
outsl
cmp
cmp
inc
pop
jo
mov
jg
add
movsl
jo
cmp
insb
xchg
dec
nop
jo
and
cli
jo
xor
pop
mov
mov
mov
inc
dec
jl
add
loopne
stos
les
lods
dec
arpl
insl
lret
sub
dec
jo
jbe
push
sahf
add
and
js
int
arpl
arpl
fisttps
inc
and
fildl
mov
repz
lret
mov
mov
imul
nop
cmp
cwtl
scas
jne
or
mov
fwait
jl
repnz
mov
leave
cltd
ds
lods
fdiv
std
divb
add
mov
loopne
dec
pop
adc
insb
sub
push
pop
xchg
imul
fucom
xchg
push
lret
mov
jo
pop
test
iret
sahf
xorl
imul
pop
lahf
dec
out
nop
xchg
and
push
jp
or
mov
nop
inc
movsl
sbb
fcomp
mov
mov
stc
ss
jg
cli
xchg
fcmovnu
mov
inc
xlat
inc
mov
aad
test
daa
shl
stos
call
mov
ror
inc
into
jo
jno
cld
fcos
cli
nop
jo
ret
dec
lock
jb
add
pushf
push
jl
jo
sub
test
and
jo
fsubrl
sbb
sub
pop
cmp
rol
in
xchg
jo
cmp
sub
jmp
shr
push
jo
inc
ret
lea
mov
les
and
dec
or
loop
lock
xabort
rolb
cmp
mov
repz
lock
pop
addb
stc
stos
orb
jo
fsubp
dec
xor
fistl
aad
dec
add
cmpsb
mov
fidivl
es
inc
dec
or
cli
jo
jmp
mov
cld
push
icebp
mov
xor
mov
jecxz
insl
jbe
xchg
popa
repz
mov
jo
add
cli
std
ds
cmpsl
push
lret
cwtl
popf
ja
mov
xor
dec
dec
pushf
shl
mov
leave
pop
push
call
in
fcmovnu
in
mov
xchg
mov
rorb
xor
cltd
stc
inc
push
movsb
into
je
xchg
fcomps
jo
ss
or
push
imulb
icebp
mov
sbb
jb
and
scas
dec
icebp
stos
jb
mov
mov
outsl
cltd
cwtl
lods
rorb
inc
jo
sub
dec
js
test
and
xchg
jbe,pn
xchg
mov
fs
push
xor
stos
into
mov
inc
dec
cmc
shll
pushf
fnsave
scas
out
fwait
xchg
enter
ret
xor
sub
loop
ret
leave
cmp
adc
addr16
aas
inc
cmp
push
jmp
jle
outsb
pop
mov
xlat
arpl
shr
pushf
fdivs
imul
hlt
fstpt
xchg
or
jo
nop
sbb
ja
pop
ds
cs
loopne
sub
mov
insb
jl
fcomi
popf
sbb
adc
leave
aas
stos
outsb
xchg
push
xor
pop
sbb
dec
sbb
sbb
xchg
push
cmp
mov
jne
cwtl
lahf
rcrb
pop
cmpsb
inc
ljmp
xor
xor
cmpb
lret
xor
es
xchg
jnp
cmpsb
jmp
loope
jo
ficoms
jo
jge
jmp
inc
out
in
lock
xlat
jo
test
ja
mov
outsb
aad
push
fwait
jo
mov
in
push
jo
xor
scas
pop
and
xchg
cs
pushf
xor
dec
sbb
xchg
fwait
jp
jae
shrb
leave
pop
rorb
iret
fstpt
addb
sbb
jo
rorl
mov
add
mov
mov
outsb
xor
cltd
adc
ret
and
mov
xor
cmp
xchg
ret
jne
adc
mov
and
mov
loopne
neg
rclb
insb
jo
push
das
cli
or
pop
ja
mov
popf
and
insl
adc
movsb
shl
call
fdivl
jg
mov
pop
insl
pusha
add
insl
stos
push
push
mov
push
lock
cmpsb
insl
stos
mov
jae
jge
mov
fsts
pop
jb
ret
stc
inc
fcomps
jne
cmp
sahf
adc
push
pop
push
xor
test
dec
insl
add
xchg
aas
adc
repnz
jae
rcrb
ljmp
mov
push
or
inc
lods
and
inc
das
add
push
or
push
fistl
stos
lock
ficoms
cld
test
inc
test
adc
mov
cmp
jo
int
push
icebp
je
jo
inc
xchg
lret
sbb
mov
cmp
jo
lods
sbbb
aad
inc
jae
cmc
xor
add
inc
sub
loopne
fdivrl
xor
andl
cmpsl
aaa
pop
lret
lds
push
ja
dec
inc
shl
lahf
push
sub
mov
lds
daa
and
sarl
adc
inc
rorb
sbb
pop
xor
fcmovne
cmp
adc
or
push
add
mov
sbb
les
jg
loope
jo
in
mov
jo
jbe
cmc
out
outsb
jg
shr
add
mov
push
jo
dec
xchg
and
dec
xchg
jns
xor
aad
fwait
or
pop
mov
or
in
xorl
call
nop
fdivl
add
xchg
imull
jo
jge
movsl
push
arpl
cmp
adc
leave
std
mov
ret
jo
inc
mov
add
stc
sbb
mov
int
loopne
sbbl
dec
jo
sarl
add
insl
fdivrp
fwait
jge
ja
mov
fdivrl
pop
jns
nop
jne
movb
jo
outsl
push
call
push
and
push
and
lock
in
cmp
outsl
dec
arpl
cmp
sub
fmul
jo
popa
flds
push
xor
imull
and
jo
ljmp
add
ficompl
xor
out
dec
mov
sub
jo
in
clc
movb
leave
xchg
add
jo
repnz
jo
push
push
cld
jo
shll
insl
adc
mov
inc
insl
push
fnstsw
int
out
arpl
jo
add
pop
jo
lahf
fimuls
dec
andl
jo
mov
outsl
dec
fnstsw
mov
movsl
mov
fisubl
aad
movl
out
sar
mov
dec
jnp
arpl
mov
ljmp
pop
popa
lcall
dec
sahf
jmp
push
fstps
jl
pusha
jo
in
mov
outsb
data16
imul
jmp
popa
xor
in
ja
addb
loopne
xchg
ret
mov
jo
inc
movsb
imul
jo
mov
and
flds
aas
push
mov
sub
jo
cmpsb
xchg
out
addl
ljmp
xchg
bnd
sarb
push
fcoml
and
xchg
inc
outsb
sbb
mov
mov
jne
dec
jo
adc
cld
jg
lea
lock
inc
dec
insl
outsb
inc
dec
mov
jo
lahf
test
or
lds
pop
jmp
adc
dec
imul
or
rcrb
cmp
sti
lret
or
cmp
fmull
scas
cmp
mov
sub
xor
pop
aad
loopne
xor
test
bound
adc
out
out
sbb
js
cmp
xchg
sub
push
jae
push
mov
or
adc
leave
incl
insl
jns
xchg
lcall
jo
aas
mov
lods
cmp
and
add
sbb
enter
pop
and
cwtl
mov
sbb
xor
jmp
add
mov
movsl
loopne
mov
cmc
sahf
mov
or
ja
insb
jo
jb
loop
popf
fdivr
jo
popa
add
mov
imul
in
mov
jne
int
out
arpl
cmp
outsb
pop
fistpl
inc
mov
cltd
xchg
stos
fiaddl
ss
clc
add
sub
shrl
push
out
sub
movsb
inc
cmpsl
jo
testb
jo
xchg
mov
sahf
jns
fnstcw
outsl
mov
sub
aad
jne
sbb
aam
gs
hlt
xchg
bound
jge
jl
xchg
lcall
sbb
ss
je
inc
mov
and
push
mov
stc
pushf
dec
adc
xchg
in
lock
pop
fsubl
sub
pop
or
xchg
ljmp
ret
cmp
jg
roll
pop
jo
pop
jge
fstpt
cwtl
inc
xor
sbbl
cmp
les
dec
pop
jo
jnp
cmpsb
movsb
stc
notl
mov
sarb
cltd
jo
int3
xchg
outsl
dec
rcl
insl
add
addl
cmp
lret
pop
scas
mov
mov
loop
cs
cmpb
in
lock
pop
inc
ds
ret
jo
cs
arpl
stos
aas
jo
daa
lret
fldt
sub
mov
xchg
pusha
mov
fwait
jne
stos
mov
adc
movsl
pop
imul
psrlw
mov
loope
imul
xchg
mov
in
add
bnd
xchg
mov
sarl
cmpb
cli
loop
jns
jo
push
repnz
or
jo
int
ret
repz
push
jno
add
add
jo
shrl
jecxz
xor
fnstenv
xor
cli
aad
xchg
popf
jl
mov
jo
pop
out
insl
mov
cltd
or
in
lock
aas
jp
shr
push
push
repnz
inc
mov
fstl
aad
les
jo
lds
xor
mov
sub
inc
shl
scas
xchg
loope
add
mov
fnstenv
push
and
out
enter
jnp
xchg
cmp
int3
jo
insb
aam
fnstcw
fsubr
jo
out
les
jne
jle
jo
leave
and
pop
or
imul
jno
jb
cmp
mov
lds
add
add
or
jo
test
fldenv
stos
out
clc
aad
sbb
lock
mov
mov
add
mov
repnz
jecxz
jo
add
enter
sub
inc
pop
aas
add
push
sub
inc
push
pop
lea
dec
push
shl
ret
adc
rol
mov
xchg
rorb
sub
out
mov
pshufw
push
pop
divl
add
add
push
jae
mov
mov
push
mov
mov
jo
mov
mov
jo
sbb
repz
test
into
stos
push
lcall
out
out
shlb
sbbb
loopne
jo
aad
fldenv
leave
push
ja
shll
jno
aaa
nop
sub
jns,pn
leave
jbe
jle
jo
adc
add
or
xor
call
in
push
or
mov
lret
dec
popf
dec
dec
pop
xchg
in
dec
mov
inc
mov
ds
xchg
jo
lcall
jo
mov
fstpt
and
mov
pop
enter
mov
ficomps
nop
mov
xor
jo
jne
push
pop
into
sbb
repz
addr16
xchg
jo
std
lods
call
jae
add
mov
mov
and
mov
imul
lock
sub
sti
movsb
mov
jp
out
or
fwait
and
xor
out
iret
sbb
jo
mov
sbb
in
jo
daa
sti
cmpl
aad
popa
adc
jge
cmp
jo,pt
cmp
rclb
xchg
ja
cmp
mov
insl
loopne,pt
sbb
lds
xchg
shll
repz
jge
testl
jo
sbb
out
xor
inc
add
aam
jo,pn
insl
mov
jo
lds
xchg
and
fldt
adc
mov
loope
or
shr
lds
xchg
fsubl
insb
cmpsb
aad
outsb
mov
pop
lock
xchg
dec
stc
mov
or
xor
sbb
aad
daa
das
and
pshufw
jae
cmp
xchg
shl
add
fs
insl
fisubl
enter
push
jo
insb
mov
push
jo
mov
sbb
insl
std
ljmp
xlat
pop
jne
inc
out
sub
lock
aam
sbb
rorb
dec
lcall
lds
movsl
jg
ss
jb
push
movups
inc
cld
aaa
out
arpl
pop
jo
cmp
je
ds
repz
pop
push
in
cltd
xor
sti
jmp
pop
rorl
mov
jo
adc
and
jae
leave
mov
int3
push
mov
lods
mov
xor
jo
daa
or
lcall
pop
cmp
xchg
sub
mov
insl
fmuls
jle
pop
xchg
pop
jne
add
xlat
and
inc
lret
les
dec
mov
jp
or
pop
insl
pop
xor
push
add
push
rcr
xor
jo
and
jno
jo
push
cld
leave
sarl
in
inc
dec
cmpsb
jo
inc
test
xchg
dec
inc
inc
adc
or
fidivs
cli
pop
stos
jo
cs
dec
into
sbb
push
pusha
jnp
jo
aad
loope
add
xchg
pop
push
leave
bnd
pushf
roll
jo
lcall
jo
push
and
jo
lea
jo
fcompl
mov
add
mov
int3
popl
lock
xchg
repnz
jo
cmp
ds
rcr
js
ljmp
mov
jecxz
add
test
popl
mov
jo
jbe
add
xor
popa
cwtl
inc
dec
inc
jno
insb
xchg
sub
xor
repz
lock
movsl
mov
outsb
fidivrs
insl
jo
lods
pop
int3
mov
out
call
imul
or
fnsave
lock
jge
jo
push
fisubs
jo
movsb
sub
mov
loopne
loope
int3
push
jnp
test
aad
cmp
add
mov
lcall
jo
daa
iret
pop
dec
je
adc
sbb
or
lods
jo
xchg
mov
jp
es
arpl
jge
xor
lods
pop
addr16
push
iret
mov
imul
test
lock
and
xchg
mov
adc
jo
fwait
xchg
and
int
push
je
adc
xchg
lret
insl
jns
test
shl
sub
mov
sub
mov
shll
push
sbb
lock
jo
or
jg
daa
lahf
out
xchg
or
xor
mov
ljmp
insb
out
xor
inc
dec
jo
stos
rcr
sub
sar
movsl
lret
enter
jle
scas
aas
incl
ljmp
cmc
sub
test
bound
outsb
mov
xor
cs
pop
pop
jo
xchg
mov
or
jo
test
daa
mov
push
mov
xor
adc
aad
insl
loope
mov
sbb
push
mov
popa
cmc
xchg
jo
sbb
leave
push
mov
mov
add
mov
sbb
push
arpl
xchg
mov
js
shll
xchg
pop
fsubrl
jo
out
xchg
lea
or
jo
jmp
btrl
mov
pop
aas
sbb
frstor
outsb
inc
jo
xor
addb
into
popf
sti
imul
repnz
mov
pop
lock
enter
cmpl
test
icebp
jo
mov
in
test
adc
jecxz
cs
movsl
lods
outsb
in
add
dec
pop
jns
fwait
adc
sbb
jo
xchg
popf
mov
imul
mov
je
in
adc
fnstenv
inc
lock
div
sub
or
inc
xlat
fs
mov
push
fadds
cltd
lret
push
insb
into
jae
xchg
shr
mov
pop
and
lock
out
cmp
cmpsl
ret
je
sbb
mov
ds
cwtl
jo
inc
mov
lcall
mov
mov
jo
in
scas
adc
cwtl
lret
inc
call
iret
fwait
push
cli
in
pop
cld
rolb
adc
cmp
sbb
jo
mov
ss
mov
mov
mov
push
fists
mov
lahf
iret
push
data16
dec
adc
xor
xor
fisttpll
inc
dec
or
lock
scas
loopne
jo
movsb
mov
adc
fistpll
lock
les
push
in
bswap
push
fisttpll
mov
mov
mov
mov
sub
enter
and
mov
and
mov
jae
pop
jnp
push
fcmovne
push
repz
shlb
in
pop
push
jo
inc
lcall
sub
dec
lret
push
lock
mov
and
repnz
pop
nop
or
stc
divb
pusha
mov
into
jo
lea
cmpsb
pop
repnz
jo
cld
dec
sti
add
xlat
jo
mov
push
nop
data16
ja
lcall
divb
movsl
mov
or
jo
loope
cmp
into
insl
sub
test
push
pop
addr16
xchg
adc
pop
movswl
push
pop
shrb
adc
sub
adc
lea
mov
rolb
add
jo
mov
jo
and
call
jae
int3
or
fcomps
add
jnp
mov
lock
es
pop
jo
mov
add
jo
in
and
jo
push
mov
xchg
sub
cmpsl
jo
xor
jle
jo
outsl
mov
push
cmp
jge
mov
dec
inc
aam
jo
sbb
lret
jo
push
imul
lds
inc
xchg
fcmovbe
or
out
mov
std
idivb
xchg
or
sarl
jo
pushaw
jo
pop
cmpsb
mov
imul
jo
sbb
notb
das
insl
cli
pop
dec
sub
pushf
xchg
mov
je
mov
mov
mov
jo
cwtl
mov
outsl
or
subb
cmp
or
push
cli
xor
repnz
xchg
sbb
lock
scas
push
jmp
cmp
sub
jle
insl
notl
inc
inc
cld
mov
or
aaa
mov
sub
mov
push
and
mov
jo
nop
insl
enter
lea
fidivs
loop
cmp
insb
in
ljmp
mov
mov
jo
mov
mov
xchg
cmp
cwtl
mov
xor
mov
add
and
adc
sub
ds
fisubrl
jo
sbb
loope
fsubrs
mov
cmp
jo
jmp
movsl
lds
jo,pt
or
aad
jb
fmul
jo
sarl
xlat
in
loop
in
cmp
sbb
scas
popf
pop
jnp
cld
mov
xor
jo
jne
push
sysexit
aad
insl
shrb
gs
popf
cld
xor
inc
cmp
pop
imul
aam
cmpsb
mov
stos
xor
jae
nop
xchg
sub
in
push
jo
pop
fstps
push
lds
inc
jmp
cmpsl
add
ss
in
dec
es
xor
ja
or
ljmp
pop
roll
adc
outsb
mov
inc
mov
mov
xchg
movsb
jo
sbb
nop
mov
sbb
lock
mov
jo
out
cwtl
push
push
push
push
mov
icebp
arpl
push
rcr
jne
lods
xchg
xchg
jo
mov
sahf
popf
push
sub
pop
push
dec
dec
sub
xor
in
adc
xorb
push
push
jl
mov
pop
js
mov
lds
or
leave
push
lret
scas
fcmovnb
jne
xor
jl
dec
pop
cli
jo
out
sbb
fsubrl
mov
mov
jae
sbb
sbb
stos
ja
movsb
mov
popa
loopne
mov
jae
sbb
jo
sub
cmp
fmull
shrl
popa
dec
xchg
mov
mov
mov
push
jo
movsl
jbe
in
add
add
roll
call
mov
inc
mov
pop
insl
and
stc
lods
inc
mov
cmp
dec
ja
cmp
pushf
lret
inc
ret
push
xchg
jo
cwtl
enter
pop
sti
jo
mov
mov
jo
push
faddl
pusha
aad
shlb
mov
shl
insl
fstpl
or
inc
subl
mov
xchg
into
lock
pop
sbb
pop
stos
js
or
pop
int
push
jnp
xor
jo
mov
inc
mov
clc
push
into
pop
vlddqu
dec
xor
outsl
fcmovnb
mov
jbe
aad
std
iret
packsswb
cmp
inc
cmc
insb
jle
shll
sbbb
mov
xor
out
jp
out
mov
adc
cli
insl
pop
lds
and
out
loopne
outsb
inc
xchg
cmp
fcmovu
mov
fmulp
cmpsb
xor
add
jbe
out
adcb
test
xchg
in
inc
xchg
inc
outsl
push
mov
mov
aaa
stc
push
icebp
push
shrb
xchg
daa
dec
mov
fdivl
mov
mov
add
repz
mov
inc
jae
push
inc
pop
lea
inc
jae
xchg
in
pop
repnz
pop
call
add
mov
cs
xchg
xor
sbb
sub
popf
adc
or
lea
and
and
aad
add
xor
jg
loope
pop
jo
movsb
or
call
sub
hlt
and
cmc
xchg
xor
inc
jo
push
push
pusha
jo
mov
pop
xor
out
shlb
push
mov
jo
and
jp
dec
jbe
add
sbb
mov
or
jo
and
pop
push
imul
ljmp
shll
mov
mov
jne
jae
outsb
daa
adc
pop
cmpsb
push
or
fistpll
or
stc
add
jo
pushf
cmp
mov
pusha
dec
enter
fstps
jg
dec
insb
imul
fucomi
lods
push
aad
insl
repz
xor
sar
pop
in
jo
int
or
and
jo
mov
leave
jo
popf
pop
mov
jo
fbstp
mov
ja
ljmp
push
iret
xorl
fcompl
pop
lret
cwtl
shll
test
mov
cmc
and
jo
adc
loop
mov
mov
divb
fwait
and
push
inc
xchg
lea
push
add
test
fcompl
jmp
jno
add
scas
hlt
add
adc
jno
cmp
jo
aam
popa
push
fsub
rcrl
xor
and
fisubl
cs
pop
adc
lret
cmc
jo
xchg
mov
outsb
addr16
and
inc
rclb
insb
sbb
push
xor
mov
jo
sahf
fdivrs
mov
jo
pop
jns
sub
dec
jo
mov
pop
inc
jo
negb
and
insl
mov
mov
aaa
push
and
xor
daa
sub
cmp
subl
iret
sbb
lock
out
adc
jo
xor
cmpsl
rcrl
jmp
adc
insl
lea
int
lahf
fdivrl
xchg
mov
jne
xor
outsb
sub
out
cmp
mov
jo
mov
ljmp
std
arpl
pop
adc
ret
lds
dec
jo
sub
aad
inc
mov
icebp
jo
mov
das
jb
jo
mov
lret
rolb
adc
std
dec
jo
ret
mov
xchg
jo
push
add
jmp
shll
mov
inc
jo
mov
ljmp
xorb
mov
aad
loope
mov
add
and
pushf
dec
pop
jo
xrelease
mov
aam
aad
cmc
xchg
jbe
fadds
jno
fbld
add
add
adc
lret
cld
ds
or
jecxz
in
cltd
add
push
xor
out
and
pop
arpl
adc
jl
and
mov
scas
mov
lcall
cmp
arpl
mov
into
aaa
cltd
ja
mov
ror
xchg
out
insl
sbb
adc
dec
cmc
movsb
andl
xor
push
popl
pop
xor
lcall
out
xor
das
popa
pusha
ja
lahf
mov
push
adc
scas
push
in
clc
jo
fadds
idivl
push
mov
insl
ss
push
cwtl
stos
mov
mov
rcrb
in
stos
xchg
lods
jo
jae
mov
cmp
jmp
jo
call
test
enter
push
call
enter
lds
xchg
pop
dec
jne
mov
xchg
mov
sub
iret
dec
aad
pop
inc
jmp
pop
mov
imul
push
lds
hlt
xor
clc
mov
add
arpl
sbb
loopne
in
mov
mov
jo
add
push
push
mov
or
fstl
fdivrl
push
stos
enter
mov
test
sbb
sub
and
jo
idivb
xchg
xor
mov
aad
popa
push
push
xchg
iret
jno
imul
mov
insl
dec
aad
test
sub
adc
outsb
sti
jno
sbb
sub
cmc
adc
stos
push
jbe
jo
sbb
mov
add
cli
xchg
out
std
test
sbb
mov
mov
ret
sbb
ja
sbb
shll
scas
ret
divb
cs
leavew
dec
xor
mov
f2xm1
mov
repz
cmp
jo
jecxz
add
lods
mov
jo
in
xor
jo
sub
cmp
inc
cli
jo
call
or
movsl
fildl
rclb
mov
mov
cwtl
mov
jnp
insb
push
push
inc
imulb
lahf
cmc
xor
jo
mov
in
xchg
in
jo
jb
int3
mov
inc
inc
sub
and
xchg
add
loope
pop
test
pop
dec
sbb
cwtl
in
add
leave
jo
fstpt
push
jo
push
push
push
cld
imul
out
data16
inc
jo
sbb
mov
or
fisubl
in
fnstenv
lcall
jo
jge
cmp
cmp
and
lea
jp
inc
xor
push
imul
jo
cld
jge
aad
xor
insl
sarl
pushf
movsb
je
lock
adc
sbb
lods
xor
jne
ds
mov
mov
cli
jbe
push
jo
push
pop
aad
rcrb
scas
rclb
jne
dec
das
fdiv
stos
mov
mov
dec
repnz
jo
jmp
sub
mov
and
or
sub
nop
bnd
push
push
jl
push
jo
sub
inc
jbe
jo
aad
fstpt
pop
outsb
jo
int
not
outsl
shlb
fisubrs
stc
roll
insl
cwtl
js
or
xor
insl
call
fidivrs
pop
outsb
push
pop
inc
arpl
dec
add
std
cmpsl
ss
aad
or
repz
imul
mov
xor
add
insl
stos
dec
fistpl
xchg
fwait
inc
sbb
jo
lret
cmp
cli
sub
pop
jo
mov
cltd
enter
xchg
mov
or
test
sub
pushf
sub
push
out
jno
pop
mov
mov
mov
mov
repz
jmp
divb
cmp
daa
icebp
movsl
sti
jns
mov
sub
add
cmp
xchg
in
jmp
popf
add
lods
jo
and
fistl
ret
jo
xor
jle
aad
xchg
pusha
loopne
mov
push
out
movsb
xor
scas
fstl
push
ficompl
jno
sbb
mov
cmp
add
lods
ja
jne
in
rol
sar
fldcw
ss
test
insb
jo
adc
es
subl
jo
xchg
mov
and
or
movsb
jg
call
adc
xchg
dec
ljmp
int3
xchg
divb
lock
fisubrs
xor
inc
jo
mov
mov
jo
stos
push
pop
sbb
subl
int
xchg
mov
push
mov
pop
push
daa
pop
jo
mov
jae
mov
pop
cmc
or
repnz
imul
fldln2
loope
dec
lock
mov
popf
add
xor
fimuls
je
lret
adc
imul
pop
js
imul
push
mov
out
dec
jle
jno
jo
push
mov
mov
mov
xchg
test
mov
enter
je
ja
movzwl
out
push
or
pop
mov
xchg
mov
scas
cld
std
ffree
jae
xor
fidivrs
nop
test
xor
lcall
push
push
xor
xor
shl
pop
mov
xorl
push
adc
push
push
mov
loopne
add
jb
cmp
ret
inc
jo
into
mov
jo
int
pop
je
aad
jo
xor
test
into
pop
aas
es
or
jo
enter
jmp
fwait
insl
mov
xchg
push
inc
shlb
pop
adc
negb
jnp
int
loopne
push
mov
pop
mov
sub
ret
xchg
hlt
inc
inc
jo
xor
and
cmp
push
or
xor
xchg
in
add
jo
cmp
sub
insl
pusha
push
mov
jmp
mov
movsb
push
nop
mov
out
insl
loop
incb
jp
pop
xchg
inc
push
jo
sub
nop
xchg
mov
jo
cmp
and
mov
pop
adc
or
shr
ljmp
jp
push
dec
mov
lods
movsb
jae
push
inc
sarb
orb
in
mov
pop
mov
push
in
jo
ret
inc
dec
orb
xchg
jo
jno
mov
xchg
insb
or
and
push
or
inc
push
xor
jp
cmc
inc
sub
jno
dec
xor
push
sbb
insb
scas
jo
jp
mov
rcll
fldenv
ja
sub
pop
add
shlb
data16
je
ds
mov
repnz
daa
mov
adcl
add
sub
rclb
sti
sbb
jecxz
insb
push
out
test
mov
and
pop
pop
outsb
jo
loopne
pop
inc
mov
cmp
xchg
push
mov
filds
sti
test
jo
push
jo
jle
pop
or
xchg
add
xchg
push
outsb
mov
imul
cmpl
scas
ljmp
jecxz
mov
jo
fisubrl
imul
jo
jp
in
and
jg
sub
insl
cmp
out
xor
inc
lea
cmp
cmc
jo
cli
mov
mov
jo
call
dec
scas
dec
imul
or
lock
out
mov
fdivs
mov
pop
and
outsb
ficoml
jo
inc
sbb
jo
mov
or
addr16
outsl
jo
xor
adc
and
rep
mov
xchg
andl
jb
cmp
mov
nop
mov
or
cld
cmpl
nop
push
push
jge
loopne
cltd
fsubl
out
sar
dec
jo
mov
push
lcall
ficoms
pop
xchg
enter
jno
inc
mov
mov
mov
movsb
insb
les
dec
lock
and
repnz
adc
divb
jbe
mov
insl
jmp
dec
push
popf
mov
jo
nop
frstor
paddsb
adc
push
jle
jo
icebp
push
xlat
dec
mov
shll
popf
scas
or
pushf
xor
imul
aam
outsb
fwait
mov
ds
mov
arpl
je
sub
pusha
cmp
popa
add
lcall
mov
lock
repnz
stos
movsl
jo
jno
pop
push
out
add
sbb
js
mov
push
dec
mov
call
aad
xchg
cwtl
das
add
dec
mov
lock
out
xor
pop
adc
bound
sub
pop
jo
sbb
xchg
sarb
jo
das
in
push
dec
jge
jo
lods
aad
decl
jo
movsw
fstps
push
imul
and
fsubs
aad
sbb
add
xor
rclb
push
and
sti
jnp
xchg
dec
and
call
push
sbb
nop
es
sbb
adc
mov
xor
test
roll
or
mov
jo
jae
mov
push
dec
or
gs
lds
aas
notb
jae
add
inc
mov
jne
cmp
les
ja
pop
lock
fmull
pushf
outsb
cltd
xchg
push
inc
call
push
jo
aam
adc
ds
test
jl
mov
jo
cmp
out
jne
mov
iret
vmwrite
roll
es
push
nop
movsl
fstp
notl
pop
mov
adc
pushf
add
inc
mov
pop
cmp
ljmp
sub
enter
dec
and
mov
ja
outsb
sbb
cwtl
jo
cli
out
push
sbb
cwtl
jo
lock
fnstenv
int3
fiadds
cld
xchg
pop
push
ret
mov
jo
je
loop
fbstp
test
mov
push
insb
xlat
bound
cmp
outsb
jbe
mov
pop
pop
cmpsl
insl
push
pop
nop
cltd
push
sbb
jmp
mov
ja
cmp
fmull
sarl
js
lcall
loope
test
push
sbb
sbb
aad
sub
ss
xchg
pop
iret
notb
inc
clc
cmp
mov
sti
jo
rcrb
idiv
sub
bound
jo
fstl
cmp
mov
repnz
stc
test
rolb
jo
push
mov
lret
ret
ss
mov
aad
jo
xor
push
lock
int
pop
jo
arpl
mov
ljmp
in
dec
pop
xlat
adcl
mov
movsb
test
pushf
jge
jo
mov
pushf
adcl
addr16
jo
shlb
subb
bound
ret
push
adc
push
jo
popf
call
jnp
incl
xchg
dec
das
test
jmp
adc
dec
loop
mov
jmp
and
mov
dec
jo
mov
push
hlt
ffreep
movsb
popf
mov
jo
add
mov
jo
jmp
xchg
mov
jp
leave
mov
jmp
cmpsl
cmpl
aad
sbb
mov
xor
jo
add
ss
mov
subb
sbb
enter
ss
test
out
and
xorb
repnz
jmp
lcall
out
sbb
insl
jno
mov
call
das
jno
lock
aas
enter
xchg
ljmp
nop
jo
cmp
rcr
jo
into
outsb
ffree
cmp
nop
cmp
jo
bound
mov
dec
sub
fistps
pushl
xchg
xor
jo
insb
mov
clc
lods
stc
cmp
data16
sub
jo
or
jnp
jne
call
call
xchg
out
jae
fsubrs
bound
xor
pop
push
adc
jo
rclb
push
arpl
in
jo
lret
cmp
ja
sbb
xor
imul
daa
dec
jae
xor
jbe
addr16
cmp
mov
dec
lds
in
and
sti
imul
jo
sahf
fidivrs
xchg
adc
sarl
inc
loope
jne
xorl
and
imul
mov
int3
cmpsb
lret
aad
mov
daa
adc
push
inc
xor
dec
das
jo
fwait
movsl
outsl
cwtl
aam
jl
xor
cltd
shrb
jmp
push
aaa
dec
icebp
jo
bound
stos
mov
push
pushf
sti
test
nop
cli
in
jo
jbe
fstps
mov
mov
fistl
jo
nop
idivb
jo
mov
fadd
mov
loop
lea
jge
jo
mov
inc
cmp
mov
sub
adc
mov
pop
mov
arpl
ja
push
mov
xor
ret
ret
lcall
fidivs
add
inc
add
mov
mov
movsl
inc
data16
mov
sub
inc
adc
sbb
mov
roll
ja
adc
adc
dec
and
xor
stos
pop
add
adc
ja
aam
mov
dec
pop
jo
rcl
jb
mov
jo
movsl
cmp
enter
scas
es
mov
or
or
daa
cmpsl
nop
arpl
clc
cmpl
push
aaa
imul
add
pop
cs
xchg
inc
and
imul
xor
insb
int3
jo
mov
pop
fists
and
jnp
cmpsb
adc
in
jns
popa
jo
mov
push
sahf
jo
insl
iret
xchg
add
mov
jo
cmp
fstps
mov
vpshufhw
je
pop
sahf
dec
mov
lock
fs
bound
adc
aas
enter
jo
repnz
inc
in
cmp
push
jo
mov
shll
jmp
xchg
gs
aad
shlb
fsts
mov
mov
repnz
cmp
push
cmp
jo
push
leave
shl
inc
imul
test
or
jno
push
mov
xchg
jo
add
mov
push
outsb
mov
mov
pop
mov
mov
sbb
arpl
jo
fcmovnu
sarl
xorl
hlt
jmp
jo
loopne
enter
mov
jo
xor
add
into
insl
in
call
scas
adc
xchg
jl
jnp
inc
addb
sbb
jo
add
std
inc
insl
popf
xchg
mov
insl
loop
jb,pn
xor
sbb
inc
xor
inc
or
jo
loop
xorb
jo
imul
filds
xchg
jo
lock
cmpsb
ror
das
mov
mov
push
add
jae
insl
int3
in
mov
xor
loope
mov
adc
jo
aad
lods
lret
or
mov
fsubr
dec
imul
jecxz
xor
daa
push
sub
jo
cmp
or
mov
adc
push
push
dec
jo
ror
adc
mov
cmp
fimull
out
xor
dec
inc
int
ja
fdecstp
pusha
rcr
aad
jo
xorl
jle
outsb
jo
xchg
push
sbb
push
adc
fldt
jmp
sbb
icebp
mov
mov
mov
sub
inc
mov
xor
jae
je
add
hlt
movsb
mov
nop
or
add
loopne
mov
inc
dec
das
lds
add
push
or
mov
in
or
xchg
mov
jo
mov
push
cmpl
or
enter
scas
aam
jl
xor
jo
cmp
out
xchg
sub
jo
push
jne
shlb
sbb
int
dec
fnstsw
jne
xlat
enter
aad
cs
mov
jo
cmove
sti
jo
outsb
sbb
jo
or
cwtl
jo
insb
scas
xchg
hlt
xchg
dec
inc
call
fists
ficoms
fisttpl
mov
test
movsl
cmp
addr16
jo
dec
jnp
fdivs
jbe
cmp
gs
xlat
jo
dec
push
pop
xchg
mov
or
jp
push
sub
fwait
jo
mov
cs
bnd
mov
fucomp
pop
jae
lcallw
and
enter
adc
subl
rcrb
inc
lods
pop
ja
and
push
push
mov
insl
jo
or
xchg
test
xlat
xchg
clc
sub
jo
pop
fwait
pop
int3
mov
xor
sbb
nop
cld
pop
cmpsb
fnstenv
or
mov
in
leave
cmp
mov
enter
fistps
pusha
das
lds
inc
mov
fs
scas
xor
ja
int
push
xor
arpl
xchg
ss
inc
fstpt
xchg
repz
add
jo
js
mov
loop
or
cmp
mov
sarb
mov
outsb
scas
add
fnstsw
pop
pop
jo
rcrl
jle
ret
ja
cmp
lahf
mov
aaa
jbe
jo
cmpsl
fcomp
addr16
cld
arpl
jo
lret
clc
mov
add
mov
jo
push
cmp
jp
dec
mov
mov
shll
clc
das
inc
arpl
add
mov
pushf
fsts
add
pop
xor
stos
xchg
jnp
ficomps
jo
je
dec
loopne
test
jae
inc
mov
mov
lods
ja
sub
ja
loopne
mov
xor
xor
pop
lea
outsb
aad
daa
arpl
mov
lds
out
jne
or
call
and
cmp
repnz
jo
and
add
loopne
pop
mov
enter
pop
adc
nop
insb
shlb
xchg
dec
pop
push
mov
push
inc
sub
and
adc
jmp
outsl
fdiv
cmc
mov
jo
in
jp
xchg
lock
cs
outsb
jo
adc
aad
insl
lar
sbb
mov
mov
and
xlat
jmp
outsl
jg
and
loopne
scas
imul
inc
inc
ret
jo
test
mov
int3
xlat
jae
xor
cmp
jo
pop
xor
jo
aas
mov
pusha
outsb
xchg
ja
in
decl
rorl
cwtl
fmul
jo
cmpl
jae
loop
jno
aas
and
icebp
cwtl
add
test
int3
push
cmp
insl
cmp
adc
mov
jo
cmpsb
ja
jo
sarb
mov
mov
mov
nop
mov
add
insb
mov
jne
jne
fisttpl
or
daa
jo
int3
jnp,pn
data16
jo
stc
xor
xor
jecxz
mov
pop
push
daa
fistpl
aad
loopne
out
jbe
jne
jo
subl
add
jb
popa
jae
push
mov
add
decl
add
aas
es
mov
jecxz
cmp
mov
xor
ja
int
icebp
adc
ficoms
bound
xor
mov
xchg
push
sbb
nop
pop
lea
ret
jo
cmpsl
xchg
scas
inc
daa
out
cmp
or
les
clc
jle
jne
inc
sbbl
jne
loope
cmp
jmp
scas
cld
push
cmp
shl
push
mov
adc
ret
push
int3
rolb
into
jecxz
insl
outsl
aad
lds
mov
cmp
dec
xor
sbb
xlat
lds
lret
jb
fwait
jle
ljmp
adc
fidivl
add
fsubrl
js
jecxz
lea
adc
es
push
or
add
cmp
dec
ss
mov
xchg
push
dec
insl
xchg
push
fistl
fbld
jo
and
mov
adc
mov
leave
into
jmp
sub
in
loop
or
ja
mov
js
adcb
sub
sbb
push
fsubs
jno
arpl
xor
insb
mov
js
or
add
pop
icebp
jmp
es
xchg
test
popf
out
addr16
xchg
sbb
and
jl
outsb
adc
lea
sbb
outsl
xor
jo
call
inc
and
shll
roll
jnp
scas
andb
insl
cmpsb
mov
mov
cmp
clc
js
mov
xchg
ss
cmp
jo
sti
lods
inc
jbe
sub
lret
xchg
pop
andb
rorl
in
adcl
fists
aad
mov
mov
movsb
out
repnz
and
cmpsb
push
push
in
pop
ja
sub
insl
scas
mov
imul
xchg
repnz
pop
imul
xorb
fwait
sbb
shrb
pop
arpl
xchg
pop
std
fiadds
push
push
xor
push
jo
mov
aad
mov
pop
and
sub
jp
loopne
sbb
jo
fwait
push
sahf
aad
jo
aas
jns
dec
dec
pop
cs
cmpsl
nop
push
test
mov
mov
negb
sahf
pop
sti
movsb
pop
jo
out
cli
outsl
addr16
add
pop
jmp
add
dec
sbb
in
push
stos
pop
cmp
jo
lcall
inc
and
std
pushf
jp
pop
cmc
int
ret
mov
jo
mov
push
sub
inc
ljmp
xor
cmp
sbb
mov
xor
mov
fs
cmc
or
push
ja
fmull
cmpl
lea
jo
mov
jae
push
push
jo
jp
or
lods
bound
je
sub
mov
rclb
pop
rcll
aad
fisttpll
in
les
jo
neg
in
push
dec
and
xchg
dec
dec
outsl
inc
jo
rcrl
test
mov
dec
push
mov
inc
in
in
into
push
push
jl
mov
mov
fcompl
push
or
icebp
aad
repz
notl
inc
jae
inc
shlb
jl
xchg
jne
push
ljmp
sub
inc
loope
and
rcr
push
mov
test
or
cmp
xchg
mov
shrl
aam
inc
push
and
jo
adc
int
mov
mov
xchg
nop
stos
ret
jns
nop
mov
and
xchg
xor
data16
jno
mov
pop
xor
add
arpl
add
add
cltd
jo
add
ss
sub
and
adcb
bound
sarl
int3
ljmp
dec
leave
cmp
dec
push
mov
mov
dec
jge
int
les
and
mov
and
xor
in
or
cmpsl
sub
mov
xor
fstl
adc
and
lock
lea
leavew
jb
xchg
mov
add
mov
mov
sti
adc
push
jae
and
fsubl
lcall
mov
xchg
xor
lret
pop
loopne
sub
sbb
cmpl
jo
add
adc
jo
and
jle
push
pop
jmp
push
jo
adc
lahf
or
lea
push
decb
test
sub
pop
jo
les
cmp
icebp
jl
push
or
push
les
in
xor
xor
mov
or
mov
flds
jns
sbb
out
mov
pop
adc
aad
stos
sub
cmp
pushf
jns
jo
adc
sub
shlb
mov
mov
xchg
lds
ja
lock
jecxz
ja
xchg
lret
loopne
sti
pop
xchg
pop
mov
fidivs
fistps
cmp
adc
jo
lods
inc
dec
mov
jle
push
jb
jge
js
adc
pop
data16
and
jmp
enter
and
pop
mov
jo
jbe,pn
lods
dec
out
xchg
jae
sahf
inc
sub
and
fidivl
outsb
and
push
adc
mov
lret
cmpl
adc
xlat
outsl
inc
add
and
and
stos
sbb
data16
lock
inc
mov
jbe
shr
pushf
dec
not
cmc
icebp
repz
add
jo
lds
bnd
push
cmpsb
scas
lock
fisttpl
movl
jge
pop
mov
faddl
mov
push
adc
mov
daa
lea
jo
adc
fstps
jae
jo
or
and
jmp
add
push
mov
sub
loope
cwtl
addr16
mov
sar
fildll
push
repnz
push
inc
mov
divl
fld
test
mov
adc
mov
inc
ror
in
jo
mov
mov
and
mov
jo
les
cmp
jo
xorb
push
add
bswap
loopne
inc
mov
ljmp
mov
nop
pop
sub
and
mov
pop
pop
enter
fbstp
jo
mov
scas
dec
lcall
pop
or
scas
daa
fidivrl
xadd
js
nop
insb
or
xor
dec
lods
and
cmpsl
faddl
rcl
jno
sub
push
cltd
inc
xor
mov
sbb
pop
shll
xor
jo
cmpsl
push
push
lock
sbb
outsb
xlat
mov
adc
sbb
sti
rol
outsb
sbb
jo,pn
aad
mov
ja
mov
test
test
out
fisttpl
cmp
hlt
sub
stos
fwait
lds
scas
jo
bound
fildl
imul
cmp
add
outsl
ret
ds
mov
iret
and
push
jae
aad
cmpb
mov
cmp
cmp
pop
insl
mov
sbb
nop
sub
pushf
nop
inc
imul
icebp
jmp
lock
arpl
cmp
pop
scas
xor
jo
mov
cmp
into
and
jo
shll
mov
mov
loope
xchg
popa
outsb
lods
loopne
test
add
leave
cmp
call
pushf
push
jns
jp
or
rolb
cld
xchg
fnsetpm(287
rep
xchg
jns
stc
popa
cmp
adc
mov
sub
mov
loope
lcall
dec
push
sub
xor
sub
ret
hlt
jecxz
setnp
jmp
dec
mov
fnstenv
dec
mov
shrb
in
add
jp
xor
mov
jo
push
lea
cmp
or
popf
insb
jo
dec
mov
adc
mov
xlat
push
push
xchg
dec
lods
jp
or
repnz
punpckldq
divl
lds
push
fsubl
inc
inc
aad
jo
cmp
lods
sub
test
dec
or
jo
stos
repnz
aad
outsb
orb
add
jo
jb
push
push
ficoms
cmpsb
and
lret
xor
jo
scas
fdivs
jp
push
or
dec
mov
out
xchg
mov
jbe
outsb
cmp
outsb
fisttpl
je
dec
lods
arpl
jle
adc
loopne
dec
and
xchg
loop
std
and
jo
pop
fnstcw
jo
cmpsb
in
out
xor
aad
stos
imul
nop
jo
repz
jno
mov
push
xor
jns
adcb
fldt
xlat
jo
aad
scas
inc
aaa
mov
fsts
rclb
addr16
or
ja
xchg
out
popa
fwait
mov
sahf
dec
xchg
jo
mov
imul
sub
lods
cmp
pop
cli
fbld
sub
dec
mov
lcall
in
add
shl
mov
jo
sbb
daa
push
fnstenv
popa
filds
loope
sbb
fidivrl
test
or
int3
fwait
cmp
mov
push
xor
sarl
xor
mov
mov
push
pop
xchg
adc
jle
adc
je
jo
mov
mov
xor
leave
mov
enter
mov
mov
add
sbb
sbb
mov
jo
xchg
std
jge,pn
inc
movsb
adcb
sub
mov
pop
sbb
out
cmpsl
aam
add
ret
arpl
push
popf
sbb
jo
add
lods
mov
in
imul
and
test
push
xchg
jmp
hlt
jp
adc
fs
enter
es
test
pop
adcl
push
out
dec
mov
pop
in
mov
lock
insb
jle
clc
stos
or
divb
popa
into
dec
cmpsb
mov
test
out
mov
or
data16
inc
decb
jecxz
hlt
xchg
xor
insl
addr16
push
fdivl
adc
push
mov
xchg
push
imul
push
sub
jle
aad
xchg
dec
scas
mov
xor
dec
insl
jnp
out
std
jge
mov
jmp
jmp
mov
cwtl
mov
ds
adc
bound
sbb
pop
imul
ja
mov
mov
sub
sub
jo
adc
mov
jo
lea
nop
push
arpl
stc
jo
aam
rcrl
loop
clc
sahf
sub
jl
lahf
cmp
adc
xchg
inc
test
sub
jnp
into
jl
lea
push
mov
sub
xchg
leave
das
pop
xorl
fcmovu
es
push
and
push
mov
add
pusha
fdivrp
mov
or
cmp
rcrl
loopne
jo
push
push
dec
sbb
cmp
jo
xchg
mov
bound
mov
fsubl
lods
jne
loop
or
in
in
int
push
jo
mov
das
shll
sbb
push
fisttpl
push
push
jo
inc
mov
stc
stos
jne
sub
push
jo
inc
stos
daa
sbb
jo
lea
jmp
jo
push
jp
fstpl
push
repz
imul
add
subl
pop
out
jo
push
aad
bound
imul
xor
inc
mov
dec
pop
lock
insl
lods
adc
push
jnp
push
mov
imul
jo
push
pop
add
mov
sbb
aad
mov
iret
xor
jnp
cmp
or
inc
add
mov
ss
or
lret
mov
jo
or
jbe
ja
int
or
sbb
repnz
cmp
dec
or
mov
mov
xorl
sub
into
and
lea
cmp
push
fsubl
adc
mov
add
xchg
std
jo
ret
mov
sbb
mov
jmp
rorb
lret
mov
leave
or
inc
lock
sbb
jnp
pop
int3
jo
dec
mov
mov
sti
lock
dec
lret
fwait
into
cmc
shll
les
and
push
jo
mov
mov
stc
insb
xchg
mov
xor
addr16
int
xor
push
ja
lahf
pop
jo
subl
mov
mov
xlat
jo
std
in
add
es
ret
cmp
ljmp
dec
or
insl
rcrl
xchg
sub
int3
scas
xchg
in
xor
pop
jo
pusha
xchg
repz
jo
pop
xchg
mov
clc
mov
jo
cli
shlb
enter
push
jo
mov
adc
mov
mov
push
jo
je
and
insl
sbb
dec
pop
xchg
xor
jo
shrd
pushf
repz
lea
pop
push
dec
or
mov
std
in
gs
fwait
jns
and
adc
push
aad
cs
push
int3
jo
push
loop
inc
data16
jo
dec
rcl
shlb
orb
xchg
dec
or
cmp
pushl
gs
pusha
je
cli
jo
daa
fisttpl
jae
movsl
dec
std
xchg
rolb
jge
xchg
mov
jo
push
mov
aaa
mov
cli
and
loopne
xchg
fsub
push
cmp
dec
push
and
scas
fwait
inc
enter
or
cld
dec
cmc
push
jo
aad
cmp
jo
mov
rolb
inc
jo
fcomi
notb
and
mov
xorb
rorb
mov
out
daa
cmp
inc
lds
add
add
mov
outsl
mov
ja
mov
mov
test
or
jmp
xor
jo
mov
jge
jb
sbb
out
data16
cmp
jo
cmp
lods
rol
dec
aas
or
aad
mov
xor
mov
ja
insb
mov
jg
jne
push
and
sub
fcmovnb
shr
je
mov
pushf
data16
js
mov
or
jo
inc
sub
pop
pop
jns
ret
shl
test
lea
sti
iret
pop
insl
and
insl
push
or
scas
inc
add
aas
test
mov
xor
jo
add
idivl
xorb
adc
jns
pop
mov
sub
in
or
mov
pop
daa
jo
loope
aad
jle
cmp
rol
jo
movsb
add
dec
xlat
jne
in
mov
lea
bound
xor
stc
push
loop
xorl
sub
cltd
xorb
jo
push
sub
sbb
aad
xor
adc
aam
rclb
popf
pop
les
call
test
jns
fisttps
inc
mull
loopne
jno
ret
fimull
xchg
inc
mov
push
push
and
ffreep
jg
jmp
fnstenv
push
cltd
aad
push
jno
pop
fiadds
mov
pop
popa
jo
lods
popf
imul
addr16
cli
xlat
fnstcw
mov
sbb
jo
inc
fldt
pop
mov
sahf
fdivrs
cli
out
and
adc
out
mov
sub
test
xchg
jge
jo
in
cmc
fucom
add
add
xorl
cmp
insl
push
cli
push
pushf
inc
xchg
jo
push
sbb
xchg
sbb
addr16
add
pop
sbb
jae
jnp
outsb
pop
idivl
data16
andl
sbb
jo
mov
push
jo
in
das
mov
sub
fistl
mov
adc
xchg
mov
lcall
add
sbb
xchg
jge
jo
pop
jne
leave
loope
push
outsb
insb
mov
rcll
test
xor
sub
cmp
inc
mov
addr16
shl
jp
and
cmpsl
lods
jo
cmpsb
das
sahf
push
in
clc
sbb
fldenv
lods
jecxz
cld
stos
or
jmp
pusha
fnstenv
xor
cmp
shrl
mov
sbb
adc
gs
add
jl
js
pop
push
adc
mov
or
je
jo
fdivrs
mov
or
sbb
clc
mov
shll
push
lahf
pushf
pop
stos
inc
testb
mov
adc
aas
insl
cmpsl
push
cmp
mov
jb
stc
es
popa
dec
jnp
imul
xor
arpl
ret
icebp
scas
fbstp
jo
ds
sub
cmp
negb
push
mov
lods
push
mov
filds
enter
push
jo
clc
and
jo
in
je
pop
or
dec
into
dec
fistpl
mov
jo
enter
cld
xchg
push
insl
cmp
cmp
mov
jne
jo
enter
shrl
xor
mov
cmp
push
mov
jo
mov
jnp
sbb
ret
rep
ja
push
test
les
and
cs
pop
jo
push
decb
popf
fwait
rcrl
and
cwtl
jae
jo
sbb
add
mov
insl
int
test
inc
decl
inc
and
cwtl
loop
test
pop
cmp
lea
push
into
sub
xor
jo
popf
lcall
or
xchg
popf
daa
cs
add
sub
sbbb
int3
jo
addl
pop
dec
cmp
enter
push
pop
xor
sub
in
cmp
dec
test
je
repz
xchg
push
test
mov
ret
psubsw
leave
call
jle
imul
mov
rcrl
jo
mov
fnsave
push
adc
stos
shlb
jo
pop
gs
add
push
incb
xor
jo
fisubs
sar
stos
push
sbbb
pusha
imul
xchg
jne
enter
in
or
jo
ds
pop
jo
aas
push
in
mov
fdivl
sub
aam
pop
mov
cld
push
xor
cmp
xchg
push
pop
mov
jo
movsl
push
sbb
dec
mov
mov
mov
imul
insl
rolb
jo
mov
xchg
push
xor
stc
test
in
jo
pop
rclb
out
subb
xor
mov
mov
jo
sbb
test
sub
pop
lds
ret
xchg
imul
jo
fimuls
fisubrl
out
push
mov
aad
dec
mov
mov
lock
shl
and
movsb
cld
cmp
sub
mov
inc
sub
push
jae
fwait
icebp
pop
cld
out
in
pop
lcall
imul
lods
imul
and
jno
xchg
fisubs
jo
xchg
jne
xorl
in
pop
stos
pop
rorl
pop
push
es
push
cmc
sub
jo
cmpl
jo
fdivrl
push
out
out
or
jo
inc
rep
pop
shl
popf
jae
xchg
arpl
notl
cld
dec
ret
mov
mov
jnp
pop
or
imul
sti
jno
xchg
cmp
sub
or
jo
jle
aas
pop
in
movsl
les
cmc
pushf
cmp
inc
mov
jo
pop
outsb
test
mov
pushf
insl
stos
pop
jne
test
jecxz
fsts
push
xchg
mov
in
dec
xor
jo
fstpt
or
pusha
mov
cmpsl
ja
popf
jne
dec
add
push
pop
jo
xchg
add
mov
pusha
insb
mov
jge
popf
jo
insl
mull
xorl
out
jo,pt
push
sbb
pop
mov
and
xor
lcall
xchg
add
test
ss
jo
loope
bnd
out
jo
fs
jecxz
adc
mov
pusha
rclb
xchg
jo
xchg
cmp
jo
mov
cltd
data16
pop
repz
mov
loopne
xchg
subb
ja
shrb
loopne
add
add
ret
es
sub
jo,pt
mov
push
fcoml
and
leave
clc
dec
mov
push
jo
daa
cld
sahf
jl
jo
mov
fadds
jo
aam
jno
xchg
jg
jle
adc
and
adc
jo
rol
int
fnstsw
xchg
cs
iret
popf
cli
jo
and
xor
lods
outsl
loopne
into
js
jo
mov
insl
adc
sbb
push
add
inc
sbb
loopne
shlb
aad
sub
push
jo
or
xchg
push
orb
cli
outsl
push
jo
or
cmp
mov
jge
ret
or
js
inc
xor
aad
sub
jp
outsb
jle,pt
outsb
lds
adc
inc
fidivs
xor
bound
into
aam
out
pop
cli
jo
mov
pop
and
sbb
or
or
inc
sbbb
addr16
cli
jg
jo
jp
neg
jo,pt
mov
xchg
push
jo
lahf
xor
jo
stc
aad
dec
fwait
je
jo
cli
adc
cmpsb
std
push
jo
cmp
mov
in
sub
fidivl
filds
ja
pusha
cli
icebp
ja
adc
and
sbb
jle
xchg
cs
adc
push
jo
ds
pop
insl
iret
vmaxpd
xor
loope
jo
or
lahf
adc
push
fst
iret
out
pop
lcall
out
add
mov
push
pxor
jo
dec
inc
fst
gs
xchg
jo
adc
icebp
ret
jo
imul
es
sbb
mov
add
mov
hlt
jo
ja
sub
imul
jns
fwait
dec
and
outsb
repz
jge
shll
pop
jl
add
jp
xor
inc
aas
mov
pusha
or
shll
pop
pop
xor
and
pop
sbb
jo
mov
movsl
aad
dec
cmp
movsb
jmp
xor
aaa
ret
shlb
jo
es
lds
je
mov
xchg
fcmovnu
cmp
jge,pn
ljmp
add
jae
scas
enter
clc
pushf
loop
dec
and
lods
sbb
mov
lds
push
lret
fsubrl
cltd
dec
insl
pop
loope
mov
test
lret
out
mov
lods
out
fstps
push
pop
iret
xor
xchg
aad
mov
jno
inc
adcl
jp
fsubl
and
js
addr16
xchg
fidivrl
pusha
dec
mov
pop
cmc
cmpsb
jb
out
scas
jnp
inc
mov
test
lock
dec
sbb
les
jo
fwait
decl
insw
andl
jnp
push
pop
lret
sbb
mov
aad
arpl
hlt
xor
jg
je
fistl
lds
inc
cwtl
inc
jo
fnstenv
xchg
and
sbb
xchg
jne
vpacksswb
xchg
aaa
clc
bound
inc
addr16
ficoml
adc
jo
das
nop
aam
fidivrs
mov
jge
aas
push
in
jo
push
stos
movsl
cmp
or
mov
js
dec
int
bound
lods
out
push
inc
cmp
adc
cmp
movsl
loope
leave
adc
negb
cli
mov
xchg
sub
jo
mov
pop
push
dec
cwtl
mov
mov
push
int
adc
pop
xchg
push
add
mov
fsubl
clc
and
adc
cwtl
insl
dec
cmc
outsb
arpl
fmull
int
addl
xchg
icebp
divl
jne
stos
or
insl
aam
jmp
xor
and
out
idiv
test
pop
jo
cmp
sti
outsb
repz
xchg
dec
test
ret
jo
lret
fdivrp
push
mov
dec
push
adc
fsubl
push
mov
sub
push
fchs
sbb
jae
jo
jnp
dec
xchg
pop
dec
lahf
call
out
in
mov
jo
mov
jmp
shr
jo
inc
test
jbe
xor
cmp
popf
jmp
shlb
jmp
shlb
leave
and
or
popa
aad
cli
shll
js
lds
jmp
jo
lret
stos
inc
cmpsl
mov
fwait
adc
js
imul
mov
insl
push
add
cltd
sbb
insl
lss
in
add
jo
jns
push
outsb
mov
xchg
pop
or
sahf
jo
test
enter
add
rolb
jge
mov
loopne
or
pushl
xlat
rorb
loope
scas
adc
das
jo
test
loopne
jo
dec
dec
scas
lret
loopne
adc
mov
or
dec
decb
fisttpl
mov
jb
add
cmpsl
pop
fnstcw
jae
filds
loop
mov
lret
inc
or
xor
mov
aad
xor
and
stos
jmp
jp
mov
aad
stos
rolb
movsl
push
or
hlt
xchg
insl
sarb
cmp
or
jae
cmpl
leave
sub
jo
cli
inc
stos
fistl
arpl
fwait
int3
mov
in
jo
hlt
push
push
adc
jb
lods
push
insb
fisttpl
cmpsl
stc
mov
add
stos
pop
and
hlt
sbb
jno
mov
cmpsb
jo
pop
inc
sbb
or
cld
add
jo
jmp
dec
and
test
sub
enter
adc
jmp
jo
dec
xchg
inc
dec
in
cli
mov
mov
push
mov
jbe
inc
lock
out
and
pop
push
movups
fcoml
lret
enter
enter
adc
mov
push
daa
lock
cmc
jecxz
pop
jo
shll
mov
jne
sub
xor
adc
loopne
mov
stos
jo
out
das
rcl
or
push
icebp
add
data16
pop
cmp
jo
enter
shlb
or
in
sbb
popf
pop
xor
scas
jl
mov
adc
jne
rcll
push
push
and
add
nop
mov
stos
xlat
movsl
jo
dec
aad
sub
out
pop
mov
mov
cmp
dec
aam
mov
insl
jo
fisubrl
ja
aaa
mov
dec
das
pop
or
dec
shrb
xor
pop
lcall
xchg
sbb
aas
test
out
or
jl
xor
adc
pop
fwait
jo
sbbl
clc
mov
aam
mov
out
sti
mov
jo
fwait
mov
popf
in
inc
insb
jo
stc
push
lahf
mov
leave
push
mov
out
push
push
pop
pop
ficoms
pop
insb
jbe
lock
inc
clc
sahf
dec
pop
fsubrl
std
push
sbb
cmp
out
mov
sub
aam
jo
xor
addr16
inc
js
mov
adc
jg
pop
xchg
push
sbb
push
aad
fs
cmp
mov
xor
push
and
push
cwtl
fidivl
leave
lret
mov
add
xor
and
lock
and
fiadds
jnp
shl
sub
loopne
push
adc
or
jb
mov
not
es
sub
cwtl
cld
pop
adc
mov
iret
movsl
push
mov
push
inc
mov
stos
out
mov
bound
ja
dec
and
aas
out
or
pop
jnp
lock
add
jo
mov
xor
and
ja
and
aad
int3
mov
cmp
jbe
lret
pop
sub
mov
stos
fidivl
push
aas
sbb
movsl
test
jne
inc
cwtl
push
out
pop
scas
pop
jp
js
push
push
mov
mov
pop
dec
mov
add
jle
jo
dec
push
cmp
clc
pop
lea
inc
call
cltd
jo
cld
nop
fsub
xor
loop
rcl
jnp
mov
jae
iret
fidivs
pop
xchg
or
mov
nop
jle
cmp
scas
mov
adc
incl
outsb
sbb
adc
dec
push
lea
push
mov
jo
adc
ds
mov
rcrb
nop
add
repnz
les
push
xor
mov
daa
repz
dec
aad
in
insb
pop
out
movsl
test
rcrl
div
or
xor
bound
xor
sub
xor
adc
mov
inc
nop
stos
ja
lret
ret
jnp
loopne
sub
insl
jae
push
jmp
hlt
stos
test
mov
int3
lea
jg
or
jae
stc
mov
jb
ja
jnp
mov
and
jnp
pop
inc
inc
jo
mov
push
outsb
jo
pop
jne
inc
aad
ss
add
js
push
pop
orb
mov
sar
dec
mov
je
aaa
in
fistpl
imul
lock
dec
jo
fs
int
in
and
push
dec
cmp
pop
lods
xlat
insb
mov
mov
inc
jno
pop
andl
sub
in
insl
push
mov
xchg
scas
xchg
outsb
xor
mov
nop
mov
call
out
jo
sbb
xchg
insb
xchg
add
jo
out
outsb
mov
push
rcll
mov
mov
lret
clc
lock
bound
push
jnp
std
in
pshufw
mov
xchg
jo
cmpsl
pop
mov
push
rcrl
ja
and
lock
loopne
fwait
pop
imul
bnd
jnp
sbb
sub
loop
pop
loopne
lea
popl
pop
push
jg
jecxz
cmp
cmp
cmp
in
mov
fcmovb
add
jo
cmp
ficomps
daa
and
je
lods
and
and
lock
jo
adc
cltd
jo
or
aad
lcall
push
mov
mov
popa
push
xor
xchg
test
mov
pop
cmp
mov
and
add
outsb
gs
xor
xorb
std
add
jae
add
mov
je,pn
aam
int3
insb
mov
andl
fildll
aas
pop
aad
lods
jmp
into
mov
mov
movsb
jo
pop
adc
imul
arpl
push
and
push
bound
push
jp
je
loop
mov
mov
pop
sub
outsl
jo
mov
jo,pt
push
stc
inc
dec
flds
sub
cmpsl
mov
push
arpl
jo
pop
and
mov
dec
test
insl
and
jb
sahf
adc
add
lock
or
mov
shll
nop
or
jno
int3
mov
or
mov
aad
outsb
lret
mov
add
mov
ljmp
je
repz
jmp
sti
cltd
push
adc
mov
push
int3
inc
test
cmp
and
adc
es
adc
imul
adcl
jno
jo
aam
mov
cmc
pusha
mov
shll
add
inc
scas
mov
push
push
jo
push
in
lock
mov
fmull
jno
and
repz
enter
pop
sti
jnp
mov
inc
xor
fsubl
roll
test
inc
push
lret
shlb
not
jmp
xchg
daa
imul
arpl
ja
xchg
divb
loopne
out
push
xchg
mov
shrb
cmpsb
xchg
sahf
into
test
xor
xchg
xor
int3
jp
push
sbb
ja
add
sbb
loopne
jmp
pop
fs
or
add
int
pusha
cmp
sti
orb
cmpsb
mov
add
fs
push
mov
pop
loopne
mov
mov
ds
inc
jp
in
lock
and
shl
cmp
mov
xchg
rcll
pop
pop
jno
push
dec
ja
cmp
fmull
mov
jge
jo
aaa
daa
add
jl
mov
pop
lock
jae
push
jae
mov
jne
mov
mov
lock
dec
push
xchg
and
push
icebp
mov
mov
lock
hlt
xlat
xchg
stc
cld
xor
jae
cmp
mov
aam
subb
cmp
sbb
and
xchg
cmp
fbstp
xor
sub
in
jo
adc
xchg
lcall
test
mov
fstpt
jb
fstps
xor
sub
cmpsb
sub
fdiv
lock
fisttpll
inc
outsb
clc
sub
and
jo
and
add
mov
xchg
gs
pop
insl
test
je
loope
lahf
xchg
mov
insl
out
mov
imul
jo
mov
les
ret
push
add
cli
mull
mov
scas
push
mov
push
inc
inc
jo
cmp
inc
sbb
fimuls
fldl
outsl
out
adc
jl
mov
jge
mov
lds
dec
in
fdivrl
nop
cmc
jo
in
rcrb
mov
aad
xchg
sub
or
out
mov
aam
subb
les
loop
rorl
dec
jo
pop
in
in
lea
push
sub
les
jno
es
mov
adc
int3
jo
inc
mov
loop
out
fildl
mov
stos
or
xchg
cmp
jo
push
mov
fdivrp
mov
aad
stos
sub
in
jne
dec
pop
mov
adc
push
je
sbb
mov
sahf
cmp
outsb
push
clc
stos
leave
fcomps
mov
inc
mov
jb
pop
push
add
and
jo
and
ficoms
loopne
jo
cld
std
es
cmpsl
ret
inc
mov
jb
pushf
mov
jo
mov
mov
cmp
push
jo
xchg
insl
sub
ret
xchg
jo
daa
sub
outsb
mov
clc
adc
sub
mov
add
lret
mov
std
mov
ja
push
add
cmp
jmp
orl
iret
mov
sub
xchg
mov
add
loopne
lods
push
push
jo
loope
shrl
pusha
into
jo
loopne
xchg
sbb
push
adc
mov
aad
mov
lcall
flds
fdiv
add
aam
and
cmp
jo
sahf
dec
dec
jge
gs
ret
jo
sub
dec
pop
mov
inc
adc
ja
das
fstpt
lret
jo
cld
xchg
shlb
divl
aad
add
mov
jns
or
jecxz
inc
push
aas
jo
sti
fwait
push
jo
mov
psubsb
jo
cs
shrl
mov
aad
jo
add
add
jl
and
cmc
enter
outsb
sarb
adc
adc
rorl
jo
cmp
fldl
aad
jo
lods
scas
cmpsb
shl
push
jo
add
mov
and
mov
pop
jo
xchg
test
fnstsw
jo
insb
sub
sbb
mov
push
adc
clc
inc
data16
leave
in
hlt
ret
and
pushf
fnstenv
dec
add
test
movsb
mov
into
xchg
jnp
pop
cmp
fdivs
pushl
pop
mov
jb
adc
mov
aad
lcall
push
pop
xchg
loope
push
rol
movsb
xor
jo
and
xor
push
shll
pop
sub
pushf
addr16
rorb
loop
jg
ja
pop
or
lcall
xchg
fsubl
jo
xchg
sahf
fs
jo
das
insb
xchg
add
pop
add
mov
mov
fadds
mov
lock
in
jne
notl
xor
dec
and
lock
cmp
ficoms
mov
lahf
jns
stos
sbb
adc
cmp
test
sahf
mov
xchg
dec
cwtl
jb
clc
mov
mov
dec
shlb
xor
call
add
push
xchg
addr16
pop
jno
ss
pop
aam
jo
ja
push
lret
fwait
jae
fdivrs
dec
sub
mov
xchg
sub
pop
xchg
and
jae
std
inc
inc
lds
popf
mov
mov
jne
aad
movsb
cmp
push
sbb
sbb
ror
or
clc
loope
cltd
push
lds
das
jo
fmuls
imul
mov
jmp
movb
fidivs
jne
cmp
mov
xchg
outsb
cmp
rcl
js
adc
subl
add
stc
loop
je
lret
mov
fdivrs
mov
or
ret
sub
out
cmp
leave
imul
adc
stos
jo
cmpsb
in
in
pop
xor
mov
sub
add
cmp
push
fs
jae
or
out
test
xor
adc
fwait
mov
xor
jnp
in
pop
or
mov
scas
dec
fists
lock
sbb
cmp
add
jo
mov
lahf
mov
xor
jp
in
jae
in
cmp
mov
dec
mov
icebp
das
pusha
cmp
sbb
repz
enter
in
cmpsb
xchg
xchg
pop
add
or
fwait
cld
jo
inc
stos
push
xchg
adc
int3
out
mov
lock
call
sbb
lods
cmp
int3
enter
clc
imul
sub
jno
xchg
lock
in
cmp
cmp
push
ja
jo
mov
cmpsl
jo
or
andb
nop
xor
lods
dec
lret
jo
mov
in
mov
xlat
adc
jo
iret
lds
incb
sti
push
xor
jo
cmp
ret
dec
sbb
adc
cld
push
fnstsw
data16
inc
mov
jo
jp
xchg
call
add
mov
pop
es
jo
jnp
xor
or
push
sbb
ficoml
sbbl
out
adc
and
or
incl
jo
pop
in
jbe
cld
imul
ss
test
outsl
or
pop
mov
flds
jo
jno
daa
dec
mov
or
loop
lock
call
pop
in
test
mov
push
lds
add
jle
adc
jo
ja
xchg
pop
sub
sahf
scas
aad
pop
fdivrp
sbb
lret
jle
jo
adc
lea
rcl
roll
pop
cmc
repnz
cmp
addl
sbb
push
pop
xchg
loope
jo
divl
cwtl
mov
cli
ret
in
jne
fdivr
xchg
push
bnd
push
pop
adc
mov
aad
lret
or
xor
clc
pop
cmpsl
out
cmp
popa
rorb
fucomip
mov
cmp
sarb
push
add
sub
jg
inc
popf
jno
fnstenv
je
mov
lcall
pop
pusha
lret
pop
out
jae
cmpsb
mov
jo
es
inc
addr16
push
jg
lods
aad
sub
sbb
sub
push
push
jg
int
jo
mov
lea
shrl
pushf
mov
stos
mov
data16
mov
mov
pop
das
movsl
xchg
xchg
adc
ss
jo
loope
adc
push
xchg
and
add
stc
shrb
mov
cmp
pusha
mov
push
loope
jbe
sub
xlat
sub
and
and
bound
aas
inc
dec
aad
iret
fcoms
jo
addb
outsb
pusha
inc
es
push
mov
aad
jae
adc
mull
imul
pop
test
fs
inc
inc
repz
insl
xlat
mov
jae
insl
mov
jo
repnz
jbe
mov
jmp
inc
iret
fstpt
arpl
cmp
out
jae
sbb
test
and
sbb
enter
add
pushf
int3
adc
negl
rcll
jo
outsl
fdivrs
insl
lret
cmp
xor
add
pop
jo
adc
dec
push
fcoml
xor
add
lds
xor
fstp
notb
pop
and
stos
push
rcrl
int3
push
loopne
xor
data16
ret
xor
dec
inc
mov
xchg
aam
int
add
fdivr
call
ja
jge
imul
jnp
sbb
lcall
jno
lea
lret
mov
inc
sbb
dec
sahf
outsl
jb
aad
scas
test
cmpsl
jo
add
cmc
add
dec
jo,pt
daa
dec
sbb
jne
xchg
jno
xor
pop
call
jo
fcmovne
cwtl
fwait
push
mov
and
jo
cmp
jno
mov
cmp
cmpsl
add
mov
mov
jo
outsb
loopne
fxch
sub
pushf
lock
shlb
rcll
fs
mov
subb
aas
jo
push
xor
add
jbe
or
daa
jo
push
cmp
jnp
pusha
pop
jo
mov
push
iret
jo
dec
ret
or
wrmsr
aas
jo
das
imul
cwtl
jne
sahf
xchg
and
aad
jl
imul
pop
cmpsl
lock
outsl
jno
das
daa
repz
adc
mov
mov
push
pop
in
nop
scas
mov
sbb
into
and
xor
jo
rorl
push
shll
jo
and
int
sahf
popf
jo
clc
mov
les
adc
jecxz
xchg
dec
notb
push
cmp
xor
aas
cmpsb
xchg
arpl
outsl
std
shll
cmpsl
mov
bound
jne
xor
out
fdivrl
jo
data16
push
mov
or
inc
fdivrl
dec
xor
ret
test
add
cwtl
lods
jl
andl
jmp
ja
ss
aad
dec
in
addr16
lret
mov
rcl
or
jo
aad
pop
fstl
adc
ret
inc
push
xor
xchg
jle
dec
mov
outsl
jle
outsb
int3
add
xchg
mov
mov
jae
mov
int3
ja
shlb
popa
sbb
dec
mov
lock
and
loopne
outsb
mov
fidivl
cmp
fucom
push
aas
insb
mov
inc
or
push
outsl
outsb
mov
fnstcw
or
lock
aad
push
movsl
in
out
gs
inc
vphaddwq
mov
cli
push
cld
jae
int
inc
sbb
pop
je
insl
mov
jo
push
mov
jno
iret
in
lock
and
fnstenv
push
ds
sbb
fistps
outsb
imul
jo
outsb
mov
dec
stos
sub
mov
pushf
sbb
lock
or
fstpl
lods
sub
xchg
arpl
jo
adc
push
orb
out
mov
movsl
mov
out
cmp
push
jge
jo
xchg
int
in
xor
cmc
mov
insb
ss
lock
aad
push
aam
mov
xor
mov
jo
idivb
cmp
fiadds
lods
insl
adc
mov
mov
test
out
lret
hlt
rclb
mov
sahf
in
sub
jns
and
jg
pop
gs
fcmovb
mov
xchg
das
push
jo
mov
iret
and
mov
js
xor
lock
mov
shll
test
jge
fsubp
jmp
xchg
jo
cld
decb
scas
push
cmp
hlt
cwtl
iret
leave
jo
jbe
lret
into
insl
pop
shl
mov
mov
mov
push
mov
inc
and
xor
jbe
bswap
xchg
inc
cmp
push
jo
pop
sub
jns
sbb
aad
testl
lret
and
jnp
hlt
pop
dec
je
test
cmpsl
stos
ret
and
push
insl
das
jo
xchg
insb
add
in
cmc
mov
into
sub
adc
add
fstl
aam
cmc
test
mov
popf
jb
les
imul
lock
add
iret
jbe
jno
movsb
mov
pop
dec
jmp
xor
addb
lahf
ret
movsb
xor
les
jge
jb
cwtl
jb
jp
aas
sar
mov
jo
xchg
mov
scas
jo
into
dec
sbb
dec
mull
lock
cli
enter
adc
fs
loop
sbb
cld
cmp
push
inc
pop
rcrb
popa
mov
xchg
mov
ja
and
inc
bound
repz
mov
dec
outsl
jo
push
xchg
aas
pop
mov
jnp
cmpsl
push
jb
jg
add
pop
jo
dec
loopne
push
push
xchg
lock
cs
gs
xor
add
push
adc
jnp
push
dec
aad
pop
daa
xor
lret
push
mov
stc
jno
adc
push
lock
mov
cmp
push
pop
dec
cmc
push
sub
sub
xor
sahf
add
aas
cmp
insl
jnp
je
imul
test
jns
pop
jl
xor
repz
xorb
cld
fmuls
sbb
sub
dec
mov
jno
out
jns
sub
mov
testb
ficomps
imul
push
jo
fildl
jle
aad
outsb
sub
mov
idiv
jae,pn
lods
sub
lock
sbb
mov
negl
or
pop
or
imul
sbb
xchg
int3
cmpsl
or
fcmovnu
jo
aad
xor
push
arpl
les
jo
test
sub
clc
jo
out
pushf
cmp
insl
add
mov
push
jo
sub
insl
jo
or
loopne
insl
adc
sbb
mov
jno
mov
jp
fcompl
in
shl
movsb
mov
push
pop
int3
pop
push
ja
adc
pop
adc
cmp
push
add
lods
insl
cwtl
inc
mov
mov
mov
rclb
out
jecxz
mov
insl
xorl
das
jge
pause
cmp
outsb
dec
mov
shll
stos
xchg
add
leave
mov
push
loop
test
add
inc
lds
call
mov
mov
outsl
fldenv
lods
inc
test
mov
mov
cmc
ja
daa
mov
mov
mov
xchg
add
fmull
mov
or
push
or
das
sbb
aad
sbb
inc
pop
cmp
push
jo
ss
xchg
popa
add
jo
jmp
aad
icebp
cmpsl
data16
repnz
shll
out
inc
pop
pop
aad
jge
ret
fcmove
dec
stc
or
pushf
mov
popa
or
add
std
das
inc
add
push
cmp
cmp
pushf
mov
jle
and
adc
flds
call
inc
aad
jne
push
test
dec
test
cmp
and
dec
shll
xchg
and
cmpsl
hlt
jo
fsubrl
mov
inc
cs
push
cmp
jno
or
mov
repnz
inc
jne
les
insl
cmp
dec
movb
or
dec
or
repz
out
lahf
mov
daa
inc
sub
push
gs
aad
jo
call
xor
pop
rcrl
mov
fistl
divl
enter
fwait
add
xor
mov
lea
xchg
jo
hlt
push
mov
pop
rclb
test
sub
add
sub
or
push
push
jne
cwtl
mov
jo
push
test
int
int
jns
cmp
push
sbb
pop
insl
es
mov
outsb
xchg
je
sub
jo
hlt
fildl
cmp
out
xor
mov
jo
cmc
sbb
repz
insl
push
dec
call
inc
mov
adc
xor
jo
das
in
sub
fs
xchg
push
pop
add
jo
in
stos
inc
mov
ja
xchg
outsb
push
rolb
dec
xor
repz
je
jb
lock
imul
jo
loopne
and
sbb
ja
cltd
out
test
inc
mov
add
pop
sbb
lods
je
jle
jo
adc
divb
pusha
js
cmc
cmp
mov
inc
sub
jmp
fnstenv
stc
shlb
ret
jne
fwait
daa
fnsave
pop
xor
pusha
push
mov
xor
lret
mov
xchg
lds
lock
andb
xchg
sbb
aaa
add
outsb
sbbb
mov
push
dec
jo
mov
test
add
lods
xchg
ret
push
jbe
lcall
aad
mov
fldenv
insl
and
out
xor
or
xor
lock
addr16
les
adc
xor
xchg
jo
inc
lahf
lcall
test
mov
ret
jl
sbb
adc
das
inc
push
add
sbb
jo
and
or
sbbl
and
dec
cmp
mov
adc
outsb
lret
xchg
cmp
lcall
repz
gs
fsubl
jae
mov
aad
pusha
movsl
cmp
sbb
jo
mov
enter
push
cmpl
dec
fimull
outsl
insl
jo
jno
adc
fwait
dec
dec
lods
fsubrl
pop
das
jo
jnp
aad
sbb
aas
mov
jo
adc
add
jp
pop
inc
nop
pop
test
pop
loope
xchg
call
pop
stos
out
int3
xor
jo
jg
push
loop
stc
mov
jb
push
scas
cmp
mov
shlb
shlb
in
push
dec
push
out
sbb
jo
or
out
daa
and
pop
sbbl
inc
mov
push
lock
sti
and
enter
scas
das
mov
xchg
dec
imul
arpl
into
jge
enter
inc
sub
fidivl
jns
rolb
sbb
mov
xchg
lods
mov
xchg
jo
or
ds
int
hlt
insl
push
xor
push
std
movsl
or
stc
cmp
int3
jne
shll
push
push
xchg
je
mov
mov
mov
je
fstpl
fdivl
std
adc
negl
push
shll
mov
lods
xor
rolb
outsb
test
mov
pop
xchg
jo
inc
stc
sub
mov
push
inc
adc
insb
push
leave
div
sti
mov
jo
fldcw
enter
jo
adc
shlb
or
jo
dec
out
fmull
dec
push
stc
data16
mov
fldenv
push
and
sbb
ffree
mov
cltd
popa
push
jo
fwait
push
push
lret
mov
lcall
add
sbb
lret
pop
mov
inc
push
in
push
fnstenv
xrelease
xchg
sbb
movsb
mov
addr16
ret
push
cli
dec
mov
aas
dec
out
call
ds
xchg
pop
ja
jo
jbe
mov
bound
jae
jo
aaa
dec
pop
inc
daa
lcall
inc
xlat
cmp
xor
out
sbb
loopne
add
xchg
icebp
lock
lock
pop
pop
ja
leave
les
mov
jbe
push
jnp
jo
rcrb
add
dec
bound
or
jo
mov
cmc
test
mov
lds
jo
fldt
mov
icebp
dec
adc
jle
xlat
gs
mov
insb
push
in
fdivl
ret
cmpsb
mov
adc
lock
in
iret
jae
push
mov
pop
jmp
inc
aad
jnp
jo
mov
jb
jo
jl
inc
dec
jp
push
mov
pop
cltd
mov
jo
clc
pop
enter
xchg
add
pop
sbb
mov
fbstp
sbb
test
loop
lret
jo
cwtl
xchg
popl
or
jo
cltd
jno
sub
pop
mov
jae
cmp
pop
clc
sbb
jbe
lds
jecxz
add
test
aad
mov
push
loope
pop
and
mov
mov
pop
ficomps
jp
adc
fdiv
xchg
push
sbbl
xor
jo
mov
divl
out
xchg
fstpt
movsb
pop
xchg
cmc
jo
jge
arpl
pop
jo
jns
ss
cld
subl
fldt
lds
shl
aad
sbb
xor
xchg
es
insb
pop
and
nop
cmpsl
pusha
push
loope
les
shrb
push
addl
aad
dec
orb
mov
sub
cmpsl
repz
fldenv
mov
jo
sub
jo
and
lds
jae
outsb
mov
xchg
push
push
shlb
adc
mov
fdivp
leave
mov
icebp
add
dec
jo
pop
push
bound
mov
jno
outsl
mov
xor
cld
pop
push
mov
pop
jns
pop
mov
dec
popf
jo
not
movl
gs
cli
push
mov
cmp
jns
sahf
test
jo
lea
ret
fildl
popa
mov
aad
push
imul
out
mov
scas
jo
xchg
outsb
sarb
xchg
cmp
fsts
leave
enter
jae
jns
and
jo
jno
fcmovne
adc
push
xorl
das
les
jg
out
test
jo
pop
out
rclb
clc
jo
dec
test
jo
aad
popa
fsubr
lods
add
imul
and
jmp
lretw
mov
pop
test
push
pop
mov
xor
icebp
mov
jge
in
ljmp
mov
cmpsb
mov
adc
mov
int
dec
pushf
ss
test
cmpsl
test
clc
xor
mov
mov
repz
aas
sbbb
pushf
ret
nop
dec
insb
add
inc
add
jnp
scas
mov
mov
mov
sbb
jb
inc
sbb
jo
sub
push
sysexit
outsl
int3
ja
ret
xchg
rorl
xchg
adc
leave
sahf
lods
jo
insb
rcrb
enter
jo
test
jae
loope
pusha
subb
add
fld
cmpsb
mov
pop
xor
push
jae
or
cmp
cmp
pushf
gs
xchg
das
add
fnstcw
jno
cmc
jo
push
mov
in
pusha
insb
pop
addr16
pop
jo
xor
push
jo
iret
sub
pop
test
xchg
xchg
or
in
fidivs
stos
adc
cld
mov
jo
sarl
lods
scas
mov
das
idiv
jp
jns
adc
jo
pop
dec
popf
std
cwtl
or
jo
adc
cmp
push
nop
sbb
imulb
test
jb
cmp
mov
pop
adcl
sub
dec
xor
shrb
add
sbb
pop
lods
push
mov
jo
movsl
dec
add
in
fistl
xchg
xchg
mov
insl
push
enter
inc
xchg
dec
sarb
divps
pop
shlb
andl
sub
mov
jo
xchg
roll
sub
es
test
or
cmp
popf
jo
mov
das
jo
add
inc
fbstp
pop
shll
not
ss
frstor
fstpt
inc
sbb
cli
mov
push
jo
ja
shl
mov
push
jo
jp
mov
sbb
outsb
xor
or
scas
lods
sarb
sub
mov
push
fdivr
push
outsb
xor
lods
lds
lock
ds
xor
cmp
fdivrs
jno
vpperm
jo
mov
loope
out
dec
test
jo
shrl
mov
xorl
dec
cmp
rol
xor
imul
mov
sub
push
aad
cmp
and
mov
jo
ss
cmc
dec
lcall
jmp
pop
pop
pop
mov
popa
fldcw
nop
jo
xor
cmc
push
bound
dec
pushf
xor
sub
jo
and
fwait
and
or
std
xchg
add
adc
icebp
rcll
movsl
jo
ljmp
jo
pop
test
dec
shll
adc
inc
aas
jo
in
movsb
aad
jl
pcmpeqd
icebp
mov
pop
push
dec
movsb
push
jnp
jo
push
inc
sub
sbb
mov
push
or
add
mov
insb
dec
sbbl
xor
leave
mov
fsubrl
test
lcall
xchg
jo
push
inc
and
fwait
sbb
lahf
das
lock
inc
je
pop
push
test
jo
push
mov
nop
aaa
cmc
repz
add
cmp
cmp
add
lahf
movsl
cmpsl
push
mov
cwtl
int
subb
and
das
mov
xchg
dec
xor
lock
mov
mov
int
jo
add
jo
cmp
mov
mov
arpl
sub
rclb
sub
mov
iret
cltd
jnp
xchg
fdivp
pop
sub
aam
jge
cmp
int
test
mov
mov
mov
push
stos
jg
push
sub
jg
jmp
xchg
fidivs
xchg
stos
jo
sbb
mov
lods
adc
push
movsl
dec
daa
test
push
jo
fwait
test
mov
adc
pop
jo
inc
sti
repnz
add
dec
xor
ret
lea
shll
test
jo
xorb
inc
push
mov
sbb
add
leave
into
push
jne
sbb
jae
das
arpl
cmpsl
cwtl
jo
adc
aam
or
xchg
cmp
fisubrl
hlt
outsb
cmpsb
dec
mov
sbb
call
sub
scas
ja
imul
xchg
lret
jecxz
int
or
out
mov
dec
jne
lock
and
lret
cld
inc
xchg
or
ret
lods
pusha
in
or
jne
jo
push
add
adc
insb
jno
aad
push
cli
pop
jg
leave
dec
adc
mov
jo
cmp
fcoml
inc
stc
aad
push
in
jmp
lock
add
sbb
jo
out
fwait
jl
pop
aad
insl
pop
sti
insl
enter
xchg
jg
jae
iret
jno
scas
inc
mov
movsb
sti
mov
cmp
sbb
cmp
in
frstor
jo
or
out
sub
jo
and
mov
xchg
jno
inc
sub
icebp
fimull
je
jo
inc
fisttpl
lret
mov
mov
adc
xchg
jo
mov
push
lea
iret
push
cmpsb
xor
push
jo
xor
jo
push
sub
add
ss
jae
cmpsl
fildl
pop
outsl
jo
xor
shlb
loop
xchg
cmp
lods
or
xlat
inc
pop
xchg
or
pop
hlt
mov
pop
out
mov
fs
sub
push
xchg
jb
hlt
fnstcw
sti
scas
mov
rclb
push
arpl
or
int3
mov
inc
cs
mov
push
mov
rclb
sub
scas
leave
adc
imul
cld
and
push
jne
fldl
mov
add
fucomi
sub
aad
jo
sub
inc
mov
fldl
aaa
aam
push
les
jmp
pshufw
xor
outsb
enter
adc
mov
roll
out
aad
inc
outsl
ret
outsb
in
es
sub
rcr
mov
jo
lret
mov
into
jo
dec
xor
xchg
sbb
xorl
push
leave
divl
aad
imul
ss
xchg
mov
xchg
arpl
insl
nop
and
dec
push
insl
fnstcw
sub
rol
add
xchg
pop
pop
jo
jbe
aad
mov
popf
outsb
xor
xlat
xor
call
loopne
cmpsb
push
aam
je
add
mov
adc
bound
mov
push
mov
lock
jo
add
lea
jle
pushf
subl
pop
inc
jo
aad
cmp
jne
adc
xor
push
fstps
or
adc
xchg
dec
xchg
sbb
and
jo
int
std
and
pop
pop
jo
bound
fincstp
aaa
pop
jo
adc
xor
stc
insl
icebp
mov
xchg
push
cmc
cmp
mov
xchg
xchg
inc
out
jo
sti
iret
popa
mov
cmc
das
fldcw
jo
loope
ja
push
aad
jo
inc
insl
sub
jo
fcoms
nop
jo
fwait
jae
jl
mov
jp
ret
xchg
xchg
mov
insb
cmp
xchg
roll
fwait
mov
lods
mov
insb
mov
rcll
mov
repnz
xchg
lds
loopne
jne
fcom
mov
clc
cmp
sahf
xchg
pop
pop
jl
xchg
xlat
jo
push
mov
into
jo
add
addw
out
lret
jo
int3
jns
push
std
jge
outsb
pop
insb
and
test
adc
nop
pop
div
inc
push
jne
pop
arpl
sbb
nop
pushf
clc
jo
xor
shll
jo
dec
sbb
fdivrs
ja
in
dec
int
aad
cwtl
xchg
sub
lahf
sub
jle
aas
ljmp
jp
lock
pop
or
fnsave
repz
in
jmp
les
insb
jae
call
fsub
pop
pop
les
ret
inc
jmp
mov
pop
push
and
lock
lret
cmp
mov
add
xchg
lock
pop
repz
push
push
xchg
mov
and
pusha
inc
jo
xor
inc
fdivl
mov
enter
dec
lock
in
addr16
lret
adc
insb
xchg
adcb
jo
mov
push
xchg
scas
xor
addb
testb
outsl
add
lock
dec
push
fdivs
ret
mov
movsl
out
jb
in
leave
scas
jo
popf
jle
jne
xchg
icebp
dec
cltd
add
jmp
inc
daa
mov
xchg
mov
clc
jle
jo
lock
mov
cwtl
jmp
push
sub
movsl
xor
push
adc
mov
adc
jmp
movsb
sub
xchg
orl
cmp
sub
push
out
push
insl
leave
jbe
cld
ss
inc
sbb
mov
je
push
in
cmp
dec
icebp
daa
bound
xchg
xchg
or
jo
mov
rcrl
jo
out
insb
fistpl
jo
loopne
jmp
int
lret
push
leave
pop
jbe
cli
mov
les
movsl
jg
loope,pt
jno
cmc
and
out
mov
sub
mov
sub
fsubrl
pop
or
cmpsl
xor
push
push
pop
popf
pop
cwtl
xchg
jae
nop
sti
subb
iret
adc
jo
pop
insb
test
lods
ljmp
dec
xchg
push
lahf
ds
jge
hlt
or
nop
cmp
inc
adc
mov
cmp
pushl
xor
xor
cmp
sbb
jp
int
cmpsb
xor
add
insb
notl
jo
push
enter
sbb
adc
cmp
shl
fwait
dec
outsl
test
mov
jp
adc
adc
jbe
mov
lahf
or
add
test
jo
mov
out
cmpsl
insl
pop
and
leave
lcall
stos
nop
pop
sbb
lret
mov
imul
jo
in
repz
daa
jns
ficoms
lea
mov
xchg
jno
jo
lods
mov
clc
push
scas
jnp
and
cmp
lret
xor
insb
push
shl
mov
arpl
xor
data16
popf
and
pop
push
movsl
sub
cmpsl
add
jo
mov
push
out
or
out
jp
aas
push
sahf
jo
jl
vpmacssdql
jo
cmpsb
sub
adc
loope
jo
push
mov
push
jo
ss
leave
rcrl
dec
jo
mov
ja
jo
mov
xchg
jg
cmp
out
inc
inc
lods
pop
fnstsw
testl
out
xchg
sub
mov
jo
imul
lret
jecxz
loope
or
jo
rcl
repz
in
jo
xchg
cltd
ss
ficoms
sub
cld
rorl
or
mov
mov
sub
icebp
push
sbb
push
mov
popf
aad
cmpsl
dec
ja
faddp
push
call
sti
rorl
mov
jo
xchg
scas
outsb
fdivrl
test
jo
test
mov
push
bound
sbb
pop
daa
cmp
jp
push
fdivs
jp
jb
push
mov
and
popf
dec
cmp
enter
adc
push
adc
sbb
cwtl
and
hlt
and
mov
or
inc
dec
jo
sub
dec
jo
test
pop
in
or
jge
mov
lock
xchg
int3
data16
gs
stos
inc
sbb
movsb
aad
lcall
adc
insl
movsl
sub
xchg
cmc
out
inc
rorl
mov
mov
inc
incl
sti
jo
sub
xor
inc
mov
jo
jb
fistpl
cwtl
fwait
jo
rolb
push
int3
adc
sbb
mov
rclb
jno
xchg
shr
xlat
ret
jo
iret
cld
sbb
cmp
repz
decl
in
aas
stos
divb
lock
inc
stos
insl
xchg
lock
sbb
adc
jbe
sarb
pop
pop
repz
test
jo
sarb
repz
sbb
in
jnp
jp
inc
sti
fistl
adc
mov
xor
push
pop
sbb
mov
adc
sbbb
xor
insl
aad
rcll
out
clc
jo
pushf
ja
add
xchg
jo
aas
push
fistl
rcl
mov
out
sbb
mov
arpl
mov
xchg
lods
cmpsb
adc
xchg
or
xchg
and
loope
mov
pop
pop
pop
mov
jo
or
rclb
push
xchg
xor
leave
insb
jp
xor
imul
popa
aad
jo
loopne
lret
pop
push
ret
into
push
jp
dec
jo
repz
call
fwait
scas
jo
rol
sbbb
lods
int3
insl
sahf
out
xorl
fneni(8087
shlb
jb
aad
je
jo
cs
push
fists
jnp
jo
lret
push
cmp
lock
fistpll
mov
mov
sbb
insl
xor
push
mov
jne
jo
adcb
imul
divb
xchg
shrb
pop
add
pop
xchg
jne
je
push
int
jecxz
cli
push
hlt
js
jo
pop
xchg
inc
push
adc
jo
aad
test
pop
shlb
or
jno
jo
fdivl
lock
mov
out
push
popf
lahf
mov
push
xor
subb
push
pop
int3
pop
test
movsl
jo
fldz
test
mov
js
and
sbb
adc
outsl
jo
outsl
push
loopne
xchg
sub
jo
xor
cmc
pshufw
lods
sub
xor
cltd
aad
notl
push
fcomip
lahf
les
xchg
xor
andl
inc
mov
call
adc
push
lods
shll
test
mov
incb
cwtl
rclb
jo
adc
shlb
push
inc
jbe
mov
xchg
dec
testb
lea
dec
fidivrl
repz
fdivl
lret
push
leave
xor
scas
add
dec
push
negb
frstor
xchg
outsb
inc
das
les
leave
lods
mov
and
insl
xor
pushf
rorl
std
xchg
and
push
mov
mov
int
jo
add
pop
lods
xchg
iret
pop
ljmp
test
sarl
ja
xor
vcvttpd2dqx
movzbl
jo
push
adc
bound
fnstsw
jo
push
repz
fcompl
xlat
aad
mov
cmp
mov
test
jp
ret
inc
js
jbe
push
pop
xlat
mov
out
adc
hlt
mov
push
ja
or
xchg
inc
xor
arpl
push
push
jo
xor
push
les
dec
adc
and
aas
negb
sub
inc
pop
mov
xor
jo
shlb
dec
jb
aad
or
push
push
push
lret
jle
ja
imul
sahf
cmp
pushf
pop
fists
jo
adc
sbb
mov
in
mov
cli
jno
cltd
pop
jp
dec
mov
dec
adc
stos
into
xchg
xor
loop
std
insl
jb
or
mov
jo
repnz
mov
lea
jnp
sub
lret
inc
add
lock
xchg
repnz
dec
cwtl
lea
jmp
fsubl
addr16
adc
ja
adc
les
jo
mov
rcll
data16
call
add
mov
push
sti
fstl
xchg
mov
adc
loope
lods
sub
mov
add
popf
mov
divl
je
imul
inc
inc
mov
mov
push
aad
jg
xor
adc
mov
pop
xor
data16
push
sbb
add
jo
dec
loopne
lock
fs
cmp
xchg
into
xchg
fldcw
roll
bound
cmc
xchg
push
push
jo
jmp
nop
push
jo
shr
dec
jecxz
inc
orb
mov
fisttps
jo
inc
lods
enter
cmp
lock
jo
sbb
adc
jo
subb
pushf
popf
data16
cwtl
aad
jno
ss
jo
fwait
jl
add
in
and
push
xchg
or
divl
sub
shll
rclb
gs
jno
pop
rclb
js
mov
loopne
jge
call
ret
jo
cmp
out
es
mov
jne
push
push
mov
movsl
fistl
pop
out
outsb
xor
es
jb
inc
cmp
les
sub
mov
xor
stc
cli
gs
iret
xor
push
cs
xor
push
sub
in
jo
fnsave
lea
or
fwait
jne
inc
iret
pop
jo
push
mov
xchg
enter
dec
sti
test
cmp
cwtl
gs
ss
push
cld
xor
and
movsb
enter
fistl
jo
leave
jp
je
into
aad
sbb
inc
mov
inc
adc
cwtl
adc
xchg
adc
jo
pushf
sbb
faddl
test
out
xor
xor
xchg
or
mov
mov
cmp
mov
mov
in
aad
je
ja
cli
sub
sahf
jo
cmp
popf
mov
std
sbbl
jge
dec
xchg
add
mov
mov
cmp
mov
iret
in
and
jo
adcb
shrl
test
pushf
dec
xor
jae
push
aas
rorl
jo
test
ffree
pop
outsb
lods
jo
cmp
inc
xchg
gs
addr16
fidivrl
adc
mov
jae
js
les
sbb
loopne
test
es
repz
mov
push
pop
cs
fldenv
shr
jae
out
stc
ja
jb
sub
fcmovnu
fdivl
dec
sbb
sbbl
add
nop
call
dec
ds
ljmp
xchg
cmpsl
add
scas
inc
mov
jo
out
mul
call
stc
insl
pop
sub
push
movzwl
mov
jo
js
mov
or
jo
pop
lods
push
repz
ds
add
pop
lret
stc
inc
daa
jle
outsb
outsb
int3
cmp
ret
dec
jl
out
cmpsl
out
icebp
pop
mov
dec
and
gs
jne
jae
lret
pusha
neg
fnsave
outsb
into
nop
aam
arpl
jae
add
in
mov
mov
ds
push
loopne
pop
xchg
jo
pop
xchg
fucomip
mov
or
pushf
pop
adc
pushf
dec
xlat
into
ss
add
pop
push
les
lcall
std
leave
fists
push
jo
xor
icebp
inc
aam
fs
pop
divb
int
pop
jno
pop
es
mov
gs
insl
xorl
or
fcomi
jo
dec
cmp
dec
sub
jo
fs
mov
aad
insl
mov
aam
ror
xchg
ret
push
cmp
sarl
dec
add
cwtl
jo
or
jo
cmc
lock
xor
aaa
ss
mov
in
clc
arpl
jo
push
decl
rorb
lock
ror
push
neg
add
pop
das
dec
stc
pop
inc
dec
add
enter
ffree
jo
jle
sti
xchg
scas
and
les
jl
lods
imul
jo
pushf
gs
mov
jo
adcb
jo
push
movsl
int3
aaa
adc
xlat
in
and
cmp
jmp
lods
jo
mov
fisttpl
jo
jno
pop
lcall
xchg
and
lret
in
roll
jns
call
dec
mov
inc
cmp
pop
jge
cmc
es
jo
sbb
pop
jo
cmp
rclb
inc
out
stc
mov
push
test
dec
jne
mov
shll
xor
mov
and
dec
and
cmpsl
lahf
push
xchg
das
pop
jo
mov
js
arpl
xchg
leave
mov
jo
adc
fisttps
pop
divb
mov
sub
cmc
jb
cmp
lcall
pop
dec
jo
sub
dec
dec
pop
lock
leave
in
push
sbb
mov
fcomps
jo
sbb
int
fsub
jo
enter
xor
sarl
inc
pop
jo
fimuls
mov
fs
or
fcompl
lds
lahf
js
xchg
mov
jne
out
jo
std
cwtl
outsb
rol
sub
mov
push
fwait
adc
daa
or
push
movsl
sbb
or
int3
pop
es
insl
push
and
lds
lret
or
mov
xorb
aaa
sbb
and
inc
inc
mov
mov
lret
mov
and
das
nop
imul
popa
push
jno
push
mov
in
lock
mov
mov
mov
push
add
mov
jo
mov
jo
fdivr
mov
outsb
lea
xlat
and
jg
negb
lods
or
push
test
push
in
mov
fistl
add
testb
sub
mov
inc
lds
xor
xchg
fiaddl
jo
mov
in
jo
mov
daa
aaa
jo
jno
cmp
jo
xor
pop
out
std
jno
mov
ljmp
fidivrs
xchg
fdivl
outsb
mov
xchg
mov
in
subl
xchg
in
inc
jo
pop
push
jl
sbb
pushf
jmp
ss
jo
adc
arpl
mov
pop
jo
and
pop
jnp
jl
lods
lock
mov
lods
jns
push
xlat
in
mov
inc
jnp
jge
hlt
sti
sbb
repnz
mov
mov
ret
jo
sahf
jmp
sti
jo
cmp
cld
jno
push
jo
inc
mov
call
sub
mov
fsubs
int3
mov
or
pop
adc
jo
fnstcw
sub
mov
inc
jo
pop
fiadds
sbb
inc
pop
aad
lods
xlat
mov
shl
push
mov
daa
outsb
pushf
cmpb
xorl
or
fidivs
sub
daa
jno
or
and
lock
dec
movsb
repnz
cmpsb
rolb
adc
mov
sbb
into
mov
push
out
andb
scas
jbe
sub
xchg
aad
push
hlt
shlb
xchg
cltd
inc
pushf
xor
xchg
arpl
mov
popa
or
mov
cmpsb
xchg
orl
dec
push
jns
jo
and
cmp
fisttpl
gs
pop
xchg
push
mov
add
jmp
add
jo
lea
mov
in
out
stos
cmp
mov
inc
imul
cltd
jo
aad
dec
cmpsb
pop
add
idiv
stos
jae
mov
arpl
sarb
imul
xchg
pop
lcall
lock
xor
sahf
adc
sub
fnstsw
nop
push
insb
mov
cwtl
sti
mov
mov
xchg
dec
mov
jo
inc
jb
shlb
aad
jg
mov
add
jp
jo
ss
push
xchg
sbb
cltd
xchg
into
leave
sub
add
mov
jecxz
cli
loopne
dec
nop
js
lahf
jo
shlb
dec
bound
int3
jle
push
clc
cmp
dec
negb
jo
std
jbe
jb
lahf
cmp
or
loope
sbb
or
xchg
cmc
fists
add
cli
or
adc
insb
mov
or
jo
push
jns
sub
xchg
jo
in
shll
and
lock
stc
fdivl
or
cmp
add
leave
mov
bound
lock
aas
pushf
imul
cli
push
es
icebp
jo
stc
roll
in
adc
lods
leave
popl
push
sahf
xor
scas
cwtl
push
xor
jo
inc
jecxz
mov
add
into
push
xchg
repnz
bound
or
jo
jne
adc
lcall
inc
popf
jno
fcoml
fidivrs
pop
sbb
addl
pop
insl
push
lock
or
bound
add
cld
in
push
push
scas
mov
ja
lret
lea
mov
and
pop
jno
mov
daa
jo
pusha
pop
jmp
adc
jge
mov
inc
mov
push
jb
lds
lea
pop
ss
fsubr
pop
jo
sarb
aad
movb
lock
sahf
clc
out
lea
leave
dec
testb
mov
movsl
loopne
inc
add
or
aad
outsb
mov
pop
xor
pop
cmp
daa
lock
flds
jo
je
test
cmp
mov
dec
jo
pop
sub
jle
insl
or
popl
out
xchg
sarl
xor
daa
add
mov
fnsave
push
lea
xchg
sti
mov
fistpl
mov
pop
ret
lods
push
push
push
mov
inc
ja
add
lret
inc
pusha
pop
or
sbb
mov
lds
fildl
mov
jo
push
sahf
rcl
xchg
inc
jo
hlt
or
adc
push
inc
mov
movl
mov
jle
jo
sbb
dec
cmp
ljmp
or
add
mov
mov
mov
jo
lds
hlt
je
popf
clc
add
mov
lods
mov
and
fwait
int
test
leave
jo
dec
hlt
adc
pop
aam
pop
inc
dec
repz
insl
es
jl
data16
xor
push
rcrl
xchg
mulb
and
sbb
fld
jo
xchg
mov
cmpsb
adc
xchg
jo
mov
sahf
out
pop
pop
movsb
cmp
jo
stos
imulb
and
xchg
out
cmp
xlat
fcmovu
xor
mov
inc
mov
xorb
leave
out
mov
pusha
mov
jo
or
jae
add
push
aad
dec
gs
cmp
mov
les
push
shl
repnz
jo
lret
mov
pop
arpl
inc
jp
outsb
jo
gs
int3
push
dec
add
les
arpl
loop
mov
icebp
ss
or
call
xchg
or
adc
aad
int3
pop
push
mov
shrl
adc
movsl
pop
jne
mov
xor
aaa
sub
aad
ret
lret
jo,pn
or
xorb
into
push
mov
scas
test
sub
xor
call
mov
fnstcw
pushf
pop
in
push
insl
dec
sub
nop
hlt
scas
sbb
xor
xorb
fmull
push
mov
mov
push
or
mov
pusha
insl
subb
push
dec
mov
test
sti
jo
int3
xor
lock
cmp
jo
mov
push
jo
cs
jbe
negl
xchg
jo
and
sub
iret
jle
jo
xchg
push
decl
pop
inc
jo
es
loop
movsl
xchg
mov
sbb
or
or
or
dec
iret
jo
sarl
jno
unpckhps
jmp
or
sarl
ja
sar
cmp
pop
push
test
inc
add
add
int3
jle
jo
ljmp
ja
dec
pop
adcl
dec
ja
and
mov
repz
jo
add
jo
fnstsw
iret
jo
aam
ret
out
jg
jo
negl
jae
and
mov
popa
sbb
mov
sub
insl
push
dec
lods
addl
xchg
add
outsb
adc
int
mov
jo
push
adc
rorb
and
iret
add
adc
xor
pop
xorb
mov
sti
push
mov
jo
negl
xchg
sbb
jo
loope
add
adc
int3
push
aad
mull
xor
fwait
imulb
add
jo
add
mov
cwtl
cmpsb
add
push
andl
xor
ja
pop
popf
mov
and
adc
arpl
or
fdiv
dec
push
and
inc
pop
push
pop
adc
jno
fildll
call
enter
sbb
out
loopne
imull
fcomip
push
sbb
insl
push
xchg
add
pop
aad
nop
inc
xchg
sti
pop
jb
cmp
cld
testl
inc
in
xchg
mov
and
sub
dec
add
jmp
imul
rcll
aad
xchg
lock
das
adc
push
push
xor
dec
faddl
mov
adc
in
jo
shll
cli
hlt
mov
sub
fwait
or
xor
shlb
pop
lods
dec
jo
xchg
ljmp
repnz
rorb
fs
xor
lock
mov
stc
fcompl
adc
jae
mov
pop
sbb
inc
nop
fcmovnbe
ja
pop
inc
push
cwtl
loopne
aaa
mov
pop
add
lods
xchg
addr16
dec
jo
lcall
imul
xchg
shrb
rcrl
push
faddl
inc
ror
xor
lods
jo
sub
push
aad
lock
dec
sbbl
jo
test
les
fistpl
mov
and
lahf
or
mov
and
call
loop
inc
and
push
xchg
in
push
shlb
fiadds
pop
xchg
es
push
xor
decb
xchg
fs
push
cmp
jmp
mov
fsubrl
jg
jne
sub
and
and
sbb
ret
xchg
sbb
sahf
inc
adc
je
sti
adc
push
mov
cmc
dec
lock
mov
add
test
xorb
dec
iret
ds
fwait
inc
sbb
add
and
out
xchg
jo
jecxz
int
mov
jp
fisubl
jmp
imul
sub
jo
pop
mov
data16
cmp
inc
xorb
jl
dec
pop
mov
mov
fwait
in
or
push
lock
sub
mov
loope
ret
shll
jae
stos
mov
adc
imul
push
mov
rcll
push
cld
sahf
or
or
xchg
jp
enter
imul
mov
insb
push
imull
mov
add
pop
push
popf
cmp
cmpsb
jo
es
lret
cmc
cmp
insb
mov
mov
pop
aaa
jecxz
in
or
pshufw
and
lret
pop
jo
ja
aad
sbb
subb
or
scas
out
lea
push
mov
xor
jbe
out
cs
jo
test
insl
pusha
jb
cmc
mov
xchg
xchg
call
and
ja
push
add
add
loopne
outsl
jnp
sub
aas
jo
jle
pop
jo
nop
cld
mov
insl
fsts
push
adc
jo
lods
dec
and
mov
jo
xchg
mov
shrl
dec
mov
inc
and
pop
cmp
xchg
mov
das
inc
pushl
fisubs
push
mov
xor
nop
jno
pop
cmc
dec
jo
out
mov
inc
or
jo
push
pop
loope
dec
stc
outsb
std
push
loopne
and
jo
and
iret
jo
or
fmull
in
xchg
rcrb
dec
xchg
xchg
lods
or
jo
sbb
or
addl
adc
sub
mov
ss
ja
bnd
mov
outsl
call
xor
add
and
popa
mov
xchg
daa
sti
sbb
loope
pushf
sub
pop
push
mov
imul
shll
clc
pop
pop
mov
enter
add
into
sbb
mov
scas
out
int
mov
cwtl
into
aad
je
dec
or
jo
push
and
movsl
jo
jl
out
lret
pop
sbb
in
call
test
adc
push
sub
fs
ljmp
dec
push
pop
xor
imul
insl
fnstenv
roll
mov
mov
adc
jo
rcl
pop
flds
xor
notb
xchg
jo
mov
push
stc
dec
sbbb
mov
fnstenv
mov
sti
push
jo
mov
lahf
and
out
sahf
fldl
jmp
jo
jae
jne
movsb
jo
xor
xchg
jge
jmp
xor
clc
mov
test
xor
sahf
fwait
aad
add
adc
int
out
mov
jnp
in
add
xor
shrb
mov
xchg
imul
insb
jl
jp
adc
mov
mov
clc
jo
jbe
inc
fildll
lret
out
test
adc
mov
cltd
xchg
mov
mov
mov
movsl
dec
rcl
lods
pop
jo
jne
loopne
subl
sarb
fcmovne
inc
inc
jo
dec
test
fstps
xchg
popa
mov
ss
jo
stos
cmp
sarl
pop
sbbl
insl
xor
fnstcw
mov
jp
cmp
mov
sbb
jb
das
add
arpl
inc
xor
adc
mov
mov
cs
rolb
xor
adc
mov
pop
inc
sbb
or
inc
sub
mov
mov
jo
and
push
inc
call
push
inc
call
mov
xchg
div
sbb
push
adc
nop
icebp
xlat
outsb
push
decb
mov
mov
arpl
pop
push
test
sti
nop
xor
mov
outsb
cmp
test
mov
push
movsb
mov
or
push
inc
enter
jle
mov
jg
loopne
jo
dec
lret
loop
mov
sbb
ja
jmp
inc
fdivrl
dec
dec
mov
fistl
roll
arpl
fnstenv
push
and
icebp
xchg
fwait
std
jne
ljmp
sub
push
sarl
fucomp
xchg
pop
jns
aad
push
pop
mov
or
sbb
test
jo
adc
into
mov
xchg
jo
inc
mov
aad
jo
clc
jbe
jecxz
pop
fs
mov
mov
inc
inc
xchg
das
add
jo
shrl
hlt
mov
add
jo
pop
jbe
jmp
xorl
imul
lcall
int3
in
out
dec
dec
inc
lock
adc
sub
cmc
mov
mov
pop
stc
pop
mov
clc
jo
mov
aad
ja
imul
dec
fmul
mov
inc
xor
in
adcb
loop,pn
arpl
cwtl
jns
mov
movsl
or
add
push
mov
add
jo
push
das
jmp
jo
ljmp
enter
pop
loopne
push
movsb
out
jo
lds
pop
flds
jge
jns
dec
jle
divb
std
xor
pusha
mov
lods
push
xor
jbe
fistps
jmp
dec
mov
int
in
pop
rorb
or
push
daa
xor
outsl
xlat
enter
cmp
jae
jo
movl
and
aaa
lcall
jo
jecxz
mov
je
jp
cmpsb
xor
outsb
sub
pop
enter
gs
addr16
and
ds
loop
xor
sbb
jae
xchg
movsl
lahf
adc
pushf
jo
cmpsb
aas
call
jo
pop
outsb
or
mov
xchg
push
push
xchg
cli
mov
push
inc
data16
std
outsb
fcoml
sub
jo
mov
jbe
leave
mov
jge
mov
into
inc
sbb
mov
push
mov
lods
mov
popf
jo
lcall
jo
in
adc
and
mov
pusha
mov
and
stos
mov
dec
add
mov
fstps
push
lahf
add
bound
sbb
aad
push
push
cmp
into
int3
push
loopne
insl
lock
push
ja
dec
mov
scas
jne
stos
out
loop
cmpsb
cmpsl
xchg
repnz
jo
inc
pop
jecxz
and
mov
mov
fwait
mov
lods
and
ficomps
fcmovnbe
adc
jo
cmp
lahf
pop
or
popa
mov
gs
fcmove
in
cmp
clc
mov
fsubrs
inc
das
dec
ret
adc
dec
adc
lock
mov
xchg
or
mov
jo
lret
or
pusha
jno
add
inc
mov
cmpsb
scas
ss
cmp
rcl
mov
adc
jne
out
lcall
cld
dec
ds
ret
dec
enter
loope
jl
bound
lcall
in
inc
jo
arpl
leave
jns
xchg
cmpsb
insb
adc
cs
mov
mov
xchg
add
lods
test
xor
jl
outsl
xchg
pop
dec
outsb
test
mov
add
and
add
in
test
out
mov
bsr
arpl
subb
push
jae
sub
pop
outsb
mov
fbstp
insb
je
sbb
add
xchg
inc
ss
pop
loop
cltd
insl
outsb
cmp
lret
nop
xor
clc
test
pop
shrl
dec
outsb
cwtl
dec
andb
mov
jns
jno
sahf
adc
clc
pop
sahf
pop
push
dec
fcomps
mov
sub
and
jo
or
je
ja
lock
pusha
popf
mov
divb
pushf
into
sbb
adc
mov
push
mov
cs
jo
pop
xchg
stc
push
fdivl
outsl
or
hlt
cmp
jo
in
aaa
ficomps
push
jo
aas
jae
stos
jecxz
mov
mov
aad
sbb
push
mov
mov
adc
push
rcr
jo
push
lea
int
insl
mov
sahf
pop
dec
jg
ss
jae
call
mov
les
push
dec
sbb
jb
dec
dec
pop
lret
dec
or
movsl
iret
lock
lods
or
fwait
daa
shll
jo
add
mov
mov
push
dec
or
fcompl
imul
shll
jb
jmp
mov
xchg
lahf
jo
pop
mov
js
jns
mov
rorb
nop
cmp
pop
jo
cmp
enter
roll
pop
mov
sbb
aad
in
je
sti
les
out
daa
mov
xchg
sahf
fcmovbe
sbb
loopne
mov
push
mov
dec
outsb
rorb
cli
xchg
andl
pop
jo
mov
ja
test
pushf
test
scas
jo
and
xchg
ja
mov
mov
out
jo
xchg
adc
cmpsb
loope
adc
pushf
ljmp
out
mov
adc
lods
pop
cmpsl
xchg
jo
int
call
or
jo
mov
jae
xorl
aas
jo
and
int3
fisubl
jo
push
leave
into
outsb
pop
inc
jo
fmull
sub
dec
xchg
pop
insl
dec
inc
xor
gs
jno
cmp
fistl
dec
push
xor
test
jo
mov
test
jo
mov
test
jne
lea
lock
iret
cmp
pop
shlb
inc
sub
shlb
xor
xchg
xchg
out
pop
outsb
dec
xchg
inc
or
dec
ja
sbb
xor
push
sarl
cmp
mov
xlat
xchg
imul
outsl
push
aad
jo
lods
gs
push
jo
fyl2xp1
sub
sbb
ja
subb
jmp
out
js
mov
xor
fildll
xorb
inc
jmp
shll
cmp
cwtl
jo
pop
out
add
jo
nop
or
cld
jp
bound
sub
adcb
xor
mov
mov
mov
dec
outsl
pop
push
outsb
insl
xlat
jnp
or
pop
fstps
push
bound
add
fdiv
lods
pop
jnp
mov
fwait
lock
jmp
cmpsb
xor
lcall
mov
repz
fwait
jo
dec
fsubl
xlat
adc
jno
ss
jo
jb
adc
fstps
pop
pop
mov
jo
push
pop
push
and
jmp
xchg
in
je
fwait
mov
sub
loopne
add
push
flds
mov
add
cwtl
es
xor
sbb
mov
jb
shrl
cmp
jnp
jo
stc
mov
ljmp
xchg
add
aaa
nop
ja
fwait
test
lahf
mov
aad
push
jne
push
or
jo
in
inc
jno
outsb
dec
xchg
push
lea
cmp
dec
mov
xchg
mov
adc
jo
sbb
subl
mov
fstps
and
insb
pushf
outsb
cmc
decl
aam
mov
xor
pop
mov
fidivrs
pop
jo
popa
pushf
and
out
jp
mov
mov
pop
in
pop
ja
push
aad
cwtl
mov
pop
jbe
jbe
pop
scas
popa
or
lock
sar
outsb
mov
push
add
daa
pop
jg
sbb
jo
xchg
mov
jo
inc
cmp
jo
mov
iret
fwait
addb
lods
call
xchg
mov
dec
mov
jo
loop
fnop
inc
sbb
jne
dec
push
lret
outsb
cli
adc
mov
repz
jnp
cwtl
mov
ror
mov
lahf
cmp
push
mov
sti
jo
or
in
pop
xor
adc
mov
adc
testl
push
fidivl
nop
stos
and
sub
call
dec
ljmp
fisubrl
lea
xchg
into
jo
dec
add
xor
mov
cmpsl
inc
addr16
push
dec
into
pop
jo,pn
sarl
insl
lret
mov
ror
shll
cmp
xlat
mov
sti
mov
inc
jmp
mov
jo
negb
leave
aad
xor
fs
jo
stos
out
xor
pop
nop
data16
jns
mov
xor
adc
ljmp
pop
inc
mov
xchg
push
push
lods
pop
stos
dec
gs
ljmp
les
fcmovnb
mov
shr
sub
jbe
jo
dec
cli
xchg
shll
push
push
loop
jns
jb
jno
add
aad
call
mov
sub
rolb
jmp
mov
int
xchg
jo
outsb
mov
fiadds
jae
dec
pushf
xor
jg
std
mov
jo
cmp
add
jo
sub
inc
enter
mov
lret
std
adc
or
divb
add
fsubrl
std
jo
mov
rorb
mov
sti
and
sbbb
gs
push
mov
je
outsb
leave
xor
xchg
cmp
adc
jl
jp
ja
mov
and
ds
jecxz
mov
mov
sub
jo
gs
std
xor
xlat
mov
adc
mov
lcall
imulb
add
aaa
adcb
adc
push
outsb
cmpsb
lods
int3
inc
out
movsl
adc
jae
mov
bnd
movsb
push
outsb
push
inc
sub
loopne
jo
iret
sbb
mov
stc
or
insl
lea
xor
inc
xor
jo
xchg
cmpsb
mov
mov
into
lock
sbb
jo
push
dec
lea
dec
movsb
stos
fdivrs
les
mov
sarl
in
mov
adc
pushf
rcl
xchg
cmpsl
jo
js
flds
dec
pop
int
push
or
sbb
insl
jne
push
jecxz
imul
xchg
lea
jo
cmp
mov
push
add
cltd
imul
inc
test
dec
mov
les
fstpt
fsubrs
mov
xor
fldcw
out
jo
loop
xor
pop
out
sub
mov
clc
push
imul
out
push
sbb
inc
or
jo
pop
fnstenv
cs
aam
je
adc
fdiv
sti
xchg
inc
data16
jo
and
out
bswap
push
stos
inc
lds
mov
xchg
jo,pn
fisttpl
gs
scas
insl
push
mov
into
in
ljmp
push
fildl
pop
movsl
inc
or
insl
xor
int
dec
or
mov
push
fidivs
sbb
mov
xchg
push
sbb
mov
scas
or
insb
cmp
fdivrl
xchg
shll
dec
mov
and
lock
push
xor
mov
aas
push
aad
or
mov
push
loop
xor
jmp
loope
gs
lods
cmp
rorl
xor
call
mov
stc
aas
test
insl
lds
mov
adc
js
les
pop
lret
jo
xor
das
imul
push
call
jo
push
push
mov
jo
into
shll
fisttpl
les
insl
jb
mov
adc
and
leave
and
xlat
xchg
shl
xchg
cmp
fcomp
cmpsl
xchg
push
das
outsb
or
scas
cmp
lock
in
push
xchg
push
fbstp
bound
jae
dec
inc
or
fnop
push
mov
pusha
aas
stc
repnz
add
ds
leave
insl
rorl
dec
nop
in
sub
xchg
ja
push
loope
jge
cmpsb
or
mov
ljmp
jae
mov
jo
out
push
cmpsl
pop
dec
jo
dec
enter
and
sbb
ret
lods
xor
out
jne
repnz
ss
fistpl
lret
lcall
nop
daa
fs
int
out
or
adcb
adc
sarb
fadds
lds
and
cmpsl
lret
mov
jo
jmp
dec
aam
lock
dec
jno
nop
jae
repz
or
aaa
and
outsl
xchg
shrb
xor
cli
or
sbb
cmpsb
dec
lods
repz
sub
fbstp
jns
push
je
sub
pop
roll
pop
pushf
lods
out
jl
adc
xchg
jo
arpl
pop
mov
mov
ja
cmc
leave
mov
filds
sub
jmp
fcoml
xor
popa
cmp
lea
inc
test
pop
in
jo
lcall
jo
mov
rcrl
stos
push
mov
jo
aad
mov
sahf
out
jae
mov
mov
lods
fisubl
cmp
insl
div
push
push
and
jg
shlb
lret
fnstcw
sbb
pop
gs
test
add
lds
jbe
aad
nop
pop
jl
jo
shr
hlt
leave
inc
fisubrs
fmull
dec
add
fistpll
mov
lret
adc
xchg
lods
inc
dec
push
sbb
inc
test
in
add
cmovl
dec
cmp
dec
inc
add
sbb
cmp
pop
jo
xchg
mov
subb
jbe
push
jbe
xlat
jo
xchg
iret
aad
sub
adc
icebp
adc
lea
push
ret
stos
jp
add
cmp
sti
jmp
lret
insb
lods
arpl
ja
or
lds
cmp
pop
icebp
addb
arpl
or
sub
push
leave
popa
pop
nop
mov
or
add
xchg
xchg
mov
and
test
test
xor
in
outsb
push
pop
jge
add
bound
stos
lret
jo
int
out
inc
jne
mull
dec
sbbl
pop
cmp
xchg
sub
jmp
gs
jecxz
fwait
and
jo
mov
daa
push
jne
lea
lock
mov
inc
jp
insl
insb
sbb
mov
lock
push
lods
jo
jne
jp
push
in
jo
adc
out
dec
repnz
sbb
adc
lock
or
dec
enter
and
jo
out
jmp
mov
push
aam
je
sub
aas
cmpsb
sub
insl
stc
dec
inc
xchg
jns
jo
scas
mov
fsub
shll
mov
lods
sub
and
shl
adc
lock
xor
sbb
loopne
lcall
cmp
pop
out
xchg
insl
cmp
sub
mov
rclb
sub
xchg
ss
sarb
pop
pusha
loop
imul
pop
js
icebp
movsb
pop
sub
push
push
imul
push
mov
adc
sbb
and
adc
mov
repz
aaa
fwait
inc
push
sbb
shl
sbb
mov
mov
sub
out
inc
jo
and
jl
jo
mov
cmc
bound
jge
mov
movsb
pop
dec
movsl
dec
push
mov
in
imul
inc
lahf
jp
addr16
add
js
push
hlt
push
and
jmp
imul
pop
adc
stos
jo
cwtl
addb
icebp
jo
sti
loop
jbe
in
jg
jne
dec
aad
dec
std
mov
lods
je
sub
scas
inc
lock
in
jo
adc
and
mov
jo
add
fdivrs
cli
adc
mov
sub
mov
das
jb
push
add
lahf
in
jne
cmp
dec
inc
sbb
subl
mov
pop
lods
inc
les
pop
inc
fdivrs
lock
js
insl
fwait
addr16
adc
pushf
icebp
mov
jae
sbb
mov
loopne
push
outsb
push
repz
out
iret
mov
jp
jo
cmp
out
xchg
fsin
jo
cmp
dec
sbb
fisttpll
jo
push
scas
or
xor
adc
clc
jmp
adc
jo
stos
xchg
rcll
iret
repz
cli
idivl
push
test
cmp
add
mov
sub
pop
js
into
cli
rcll
daa
jo
mov
pusha
cmp
call
jb
jo
icebp
test
jns
leave
movsb
pop
and
lret
xchg
xor
lds
shll
push
frstor
lock
push
shll
xchg
insl
or
ljmp
ja
xor
mov
addb
push
scas
pop
sub
push
cmp
adc
xchg
fimuls
adcb
rcrl
loope
adc
xchg
mov
idivb
pop
jo
mov
jo
test
mov
jo
aam
inc
jne
jo
mov
aad
mov
lret
add
lcall
mov
dec
cmpsl
and
xchg
fld
leave
or
lock
pop
push
xlat
jo
xor
divl
test
jo
sub
aad
sub
push
dec
lahf
mov
addr16
lret
shlb
fwait
iret
fld
mov
mov
jp
daa
inc
rcll
data16
push
dec
push
addb
imul
popf
jne
adc
rcrb
fadd
jo
popa
sub
push
mov
jo
fstpl
sahf
jo
cmp
xlat
lcall
or
scas
pop
mov
or
pop
and
mov
ljmp
dec
lock
adc
mov
repnz
xor
adc
mov
sarb
out
jecxz
cld
pusha
push
mov
push
adc
into
das
pop
and
xor
fs
fists
mov
dec
rorb
repnz
lods
mov
lcall
loope
test
or
xor
jo
mov
jl
sub
pushf
pop
jo
mov
xchg
orl
jo
in
xchg
cmp
pop
cli
jo
sub
sbb
std
xor
adc
pop
jo
faddl
adc
insl
flds
enter
lods
cwtl
mov
push
inc
fnstenv
mov
jo
pop
xor
leave
jo
cmpsb
fistl
outsl
or
js
insb
xchg
cmpsb
fdivl
daa
hlt
mov
xlat
jo
addr16
cmp
jo
pop
shrb
dec
cmpsl
inc
jo
push
je
cmp
gs
sbb
dec
ss
fwait
add
jo
imul
inc
push
mov
lods
out
jecxz
mov
in
xor
cmpb
sub
jp
pop
lahf
jb
cmpsl
sub
jns
adc
in
sarb
and
arpl
push
jo
bound
pusha
aaa
add
pop
sub
arpl
rclb
out
xchg
push
adc
xlat
mov
mov
dec
subl
push
mov
rcr
lods
pcmpeqw
jo
mov
scas
jg
enter
xchg
xchg
add
xor
mov
add
jo
adcl
xlat
pop
ss
or
jo
dec
fwait
pop
iret
sub
dec
enter
jle
fisubrs
mov
test
mov
dec
xchg
in
test
int3
aas
sbb
or
jno
sbbb
and
test
sti
daa
stos
lea
push
fildl
add
mov
mov
cmpsl
sub
int3
mov
leave
jo
fsincos
dec
je
jo
or
pop
jb
fdivl
out
push
rcl
add
cmpsl
push
mov
jbe
mov
pop
dec
into
aad
lods
add
lret
jo
movsl
add
jno
in
jnp
mov
mov
test
popf
shlb
mov
insb
arpl
and
test
sahf
ds
jo
adc
clc
cwtl
ja
icebp
push
addr16
loop
pop
push
pop
shrb
and
jo
cmpsb
pop
lds
pop
mov
or
in
xchg
cmpl
add
test
push
jle
jo
popa
and
cs
jo
scas
jae
lret
adc
push
and
add
test
lea
or
inc
icebp
push
cs
mov
scas
pop
ljmp
add
xchg
sub
pusha
sub
xchg
mov
jo
inc
mov
rcll
dec
xlat
and
jo
std
incb
fcmovne
mov
push
lea
push
insl
and
ja
jle
imul
pop
outsb
push
add
mov
jo
fldenv
dec
jo
push
popa
std
cmc
repz
insl
call
cld
xchg
xchg
dec
mov
and
lahf
inc
mov
cmp
fistps
rcrb
into
call
lock
xchg
lahf
jae,pt
xchg
mov
imulb
nop
and
pop
fldenv
jb
cwtl
jne
dec
dec
insl
aam
scas
stos
les
jae
pop
inc
mov
leave
mov
and
loopne
insb
popf
push
jo
inc
daa
cmp
lds
out
sbb
fdivl
leave
bound
jl
loope
pop
jo
inc
adc
jb
iret
pop
pop
nop
bound
or
rcrb
shll
mov
mov
and
enter
mov
divl
clc
mov
sub
sub
sbb
push
test
movsl
movl
xor
jne
cmp
fidivl
mov
aam
push
jo
cwtl
inc
in
notb
ds
and
dec
popf
and
add
mov
sub
cld
add
xor
std
test
mov
mov
sub
scas
xchg
jmp
jae
pushw
adc
fdivl
bound
adc
cmp
push
dec
add
in
in
jbe
jp
in
cmpsb
xor
mov
xchg
sbb
sub
cmpsl
add
insl
jo
push
pushf
in
push
dec
mov
add
xor
push
fnstenv
fdivr
mov
jo
lahf
or
outsb
push
shrb
out
idivl
sbb
test
xchg
daa
pushl
mov
inc
popa
arpl
test
pop
add
sub
or
je
mov
iret
mov
jo
mov
test
pop
int
ja
loope
jae
sarl
in
add
outsl
cld
shl
or
pop
lret
ret
int3
pushf
mov
cwtl
out
dec
xchg
push
call
aaa
sub
hlt
mov
mov
les
and
jo
push
int3
or
imul
insl
xor
nop
adc
stc
lret
xor
sbb
sbbl
ficoms
leave
rolb
dec
inc
mov
pop
loopne
cli
cmp
jmp
jo
sbb
xchg
dec
push
cmp
mov
xorb
imul
in
lock
bound
repnz
dec
jo
mov
aam
adc
insb
outsl
lods
loopne
test
jo
notl
or
jo
jmp
fisttpl
adc
aad
lret
lret
dec
inc
and
pop
rclb
dec
xor
mov
or
cmp
push
push
xchg
stos
pusha
pop
lods
popl
insl
mov
rclb
repz
push
flds
clc
stc
stos
or
push
ss
aad
stos
sarb
hlt
cmp
pop
fnstcw
jl
sti
push
cwtl
enter
icebp
lret
cmc
in
in
shll
ret
mov
or
lret
mov
push
jo
pop
shlb
insl
ds
add
rcrb
pop
jg
sbb
out
pop
cbtw
mov
ss
mov
jo
aad
and
push
ret
jg
pop
jo
fwait
mov
decb
push
jo
mov
or
adc
insl
jb
cmp
push
shll
sbb
es
inc
jo
mov
inc
dec
enter
inc
or
mov
test
out
dec
jo
push
lret
aad
jp
dec
arpl
sub
clc
mov
inc
xchg
dec
lea
mov
pushf
jo
cmp
and
jg
add
jns
xchg
adc
aad
jo
mov
jle
insl
dec
mov
imul
xchg
fwait
loope
xchg
sbb
outsb
mov
mov
hlt
jo
inc
jae
push
cmp
pop
enter
xorl
mov
rcr
out
repz
and
adc
aad
mov
mov
out
mov
inc
js
push
lcall
ja
hlt
mov
nop
lcall
popf
or
lock
cmp
stos
jo
ds
into
insl
sbb
rclb
mov
ja
xchg
imul
jo
xor
pop
aas
mov
jmp
pop
shll
pop
jo
lds
mov
xlat
fsubl
inc
xor
pop
push
lcall
pop
jae
fcmovnu
into
mov
pop
insl
in
or
add
out
movsb
push
sahf
cld
xor
addb
int
repz
add
mov
fwait
mov
jo
xor
dec
jo
dec
lret
in
xchg
in
mov
xor
or
jo
and
push
jmp
sub
shll
or
sbb
test
fists
testb
mov
ja
ja
scas
pop
dec
add
xchg
mov
pop
insl
aad
js
mov
mov
push
clc
jb
inc
test
add
jnp
aas
imul
out
fcmovnb
xor
mov
push
out
outsb
push
movsl
jecxz
mov
pop
and
xchg
sbbl
push
iret
push
cmpsl
arpl
sbb
lock
pop
in
jo
fcomp
imul
lds
nop
jo
xchg
inc
aad
in
out
sti
hlt
arpl
frndint
pop
push
xorl
and
jne
iret
lcall
pusha
adc
test
enter
and
and
push
leave
xor
repnz
or
mov
inc
push
and
prefetcht1
movsl
jmp
insl
mov
mov
jo
mov
lea
jo
lods
data16
test
jo
aad
lds
jb
pop
mov
add
jge
push
cmp
xchg
or
incb
ds
rcrl
lret
lds
inc
jnp
aad
es
jo
cmpsb
push
xchg
int
fldcw
sbb
adc
loopne
xor
nop
cli
fldenv
sub
fcoml
jo
dec
rcl
fs
jns
jo
sub
mov
pop
cmp
loopne
jo
push
mov
leave
jo
scas
ds
cmovg
xor
push
loop
jo
cmpsb
jecxz
pop
sbb
pushf
rcrb
adc
push
jo
aaa
outsb
and
cs
outsb
push
pop
push
fists
ja
jne
jp
loopne
lea
pop
or
xchg
push
inc
aam
mov
jo
daa
clc
shrl
fcoml
mov
out
int3
cmp
inc
imul
movsl
jo
xchg
adc
pop
add
pushf
push
jo
push
daa
mov
xchg
or
jg
jo
and
movsl
push
jp
lods
loop
mov
ds
add
adc
jo
daa
hlt
mov
push
sbb
ja
push
gs
add
jo
shlb
and
pop
into
lock
inc
mov
pushf
jp
jo
sub
out
test
pop
sub
xorl
nop
loop
jae
lods
aas
cmp
test
jo
push
sbb
xchg
jo
aad
ret
mov
lea
addr16
mov
lock
or
les
stc
test
insb
mov
xor
mov
cmp
jno
mov
jno
mov
inc
jo
lods
loopne
decb
movsl
xchg
insb
mov
and
fadds
stos
add
jo
adc
pop
out
pop
mov
je
lahf
in
jg
jo
jne
outsb
hlt
ljmp
sbb
out
inc
push
xchg
xorl
mov
sub
xor
sar
imul
sbb
mov
adc
into
or
js
adc
jo
ljmp
jo
mov
enter
inc
sub
or
loope
outsb
push
movsb
shll
pop
and
sbb
mov
pop
fwait
adc
xor
or
jo
sub
mov
cmp
daa
add
in
scas
mov
mov
mov
je
mov
push
movb
jo
fdivrs
push
dec
or
shlb
insl
pop
pop
xor
iret
fmul
data16
mov
dec
loope
adc
out
sbb
or
cmpsb
les
out
loopne
push
cmp
fldcw
xlat
jo
lods
cmp
cltd
pusha
jo
popa
jge
sub
scas
push
push
jle
mov
xchg
cmp
jo
mov
sarb
push
cmp
out
mov
sti
mov
cmp
jo
addr16
mov
inc
inc
insl
into
pop
fwait
clc
cmp
leave
jo
repz
or
xchg
shlb
in
fadd
lods
hlt
lret
jp
repnz
mov
jo,pt
sub
test
mov
sahf
aaa
shl
cmpsb
jo
push
fisttpll
into
sub
xchg
mov
fwait
xorb
xor
lea
xlat
aas
imul
sahf
xchg
push
xor
adc
insl
cmp
mov
outsb
sub
ret
lock
xor
and
icebp
cmp
jbe
jo
sbb
fnstsw
jo
cmpsb
pop
into
push
and
pop
cmp
lds
adc
icebp
xor
jo
bndstx
jae
fldl
in
cltd
pop
subb
jo
mov
push
scas
cmp
divb
fnstcw
sub
fbstp
movsl
xor
or
fwait
pop
aad
xor
pop
push
mov
lea
jo
push
push
rcrl
and
aad
push
andb
hlt
jo
in
sbb
xor
sbb
lret
jl
cmpsb
mov
enter
or
in
mov
arpl
jns
loop
jbe
adc
and
inc
out
pop
fdivl
sti
movsl
inc
push
dec
test
lock
pop
or
dec
jo
frstor
mov
insb
jl
jo
fcomp
mov
jo
cmpsb
aad
cmp
and
mov
sbb
dec
popf
cmp
gs
add
add
mov
xchg
jo
xchg
push
pop
scas
fistl
jo
pop
clc
cmp
fldenv
imul
sub
jo
adc
bound
push
pusha
push
mov
inc
jo
mov
mov
dec
inc
dec
shlb
std
jo
into
fdivrl
or
inc
jo
xchg
dec
cmp
pop
sub
push
or
mov
xor
aas
aad
sahf
outsb
cmp
cli
mov
push
enter
hlt
cmp
xor
popa
pop
xchg
movsb
inc
in
inc
enter
mov
jo
mov
fsubrp
jle
insl
dec
hlt
sahf
cmp
and
sbb
or
sbb
dec
aad
pop
push
outsb
dec
sub
sub
jo,pn
popf
icebp
in
ret
leave
jne
push
add
ja
jmp
xor
orb
aad
aas
jo,pt
push
ret
fmuls
mov
sti
and
dec
jo
pop
mov
dec
sub
ficompl
inc
je
fsubr
mov
incb
leave
mov
aam
cs
outsl
out
addl
lds
cmp
mov
cmpsb
push
dec
mov
push
dec
pop
int
cld
bound
mov
sbb
push
out
sub
aad
je
sbb
or
inc
test
sub
mov
imul
fsub
pop
loop
jo
xor
mov
jp
loope
lock
xchg
mov
adc
jo
sbb
das
and
mov
push
mov
pop
jno
mov
push
aas
lock
inc
pop
jo
shlb
sbb
stos
lcall
fstp
shrb
add
jo
jge
pop
mov
sbb
mov
xchg
lret
sub
xlat
xorl
push
add
jmp
int
scas
sbb
test
jo
push
push
jno
push
cmp
pushf
and
das
mov
inc
enter
stos
push
popf
test
adc
or
shlb
xchg
sar
xor
iret
or
jo
pop
lahf
mov
dec
fwait
cmpsb
lock
mov
enter
or
jmp
cmp
jo
jp
je
mov
outsl
fcmovnbe
testb
shll
or
iret
and
shlb
or
push
pop
icebp
sub
test
pop
es
aad
xor
test
les
loop
hlt
mov
mov
fsts
xor
imul
nop
xchg
jo
aad
fadds
pop
dec
jbe
cmc
xchg
jo
bsr
je
ja
in
cltd
lcall
xor
pop
shlb
adc
les
sbb
mov
mov
repz
jecxz
xchg
push
jo
jns
lds
sub
mov
daa
rorl
jae
out
out
arpl
push
test
jnp
jno
es
jo
sub
dec
sbbb
fcoms
mov
jo
enter
nop
sahf
pop
mov
shll
add
mov
lds
cwtl
mov
cmpsb
ss
xorl
insl
xchg
shlb
add
dec
cmp
dec
add
adc
daa
lods
mov
mov
sahf
cmp
repz
aad
xor
add
imul
lret
pop
loopne
pop
out
pop
push
mov
mov
or
jbe
dec
push
and
aas
nop
inc
ljmp
rcrl
jo
stos
dec
outsb
lret
lcall
fildll
sbb
cwtl
popw
loopne
push
popa
jo
mulb
mov
inc
adc
mov
cmp
mov
jo
jmp
xchg
adc
push
cmc
jo
fiadds
jle
sub
call
inc
jo
push
mov
enter
jo
xlat
rcr
inc
cli
fs
add
cmp
inc
dec
push
mov
popa
ficompl
fistpll
jnp
jo
ja
fwait
pop
or
mov
cmp
fldcw
in
jo
aad
xchg
stos
daa
cmp
lds
lods
jae
iret
roll
cmp
jo
ret
dec
fcoms
and
mov
add
mov
into
scas
jo
cwtl
out
dec
mov
inc
in
push
aad
jo
push
cli
movl
enter
sahf
fcmovnu
sub
push
lret
mov
jo
es
xchg
loop
nop
sub
icebp
jo
pop
popa
out
pusha
fmull
jge
jne
fwait
mov
adc
jo
xchg
sub
jo
jecxz
pop
fnstcw
stc
fs
call
imul
ret
test
pop
push
cmpsb
daa
push
xor
adc
and
xchg
dec
dec
outsb
lock
mov
test
out
out
popf
xor
push
ja
cmp
dec
adc
pop
lods
add
test
fistl
mov
mov
xchg
jb
pop
aad
jo
pushf
inc
fldt
ja
stos
push
decl
nop
inc
sub
insl
insl
and
out
fdivl
jbe
insl
sub
cmp
mov
pop
in
jo
dec
shlb
jo
push
or
add
aad
xchg
addr16
jae
shlb
cmc
and
xor
mov
fcompl
aad
jo
lret
daa
sbb
pop
jl
push
rorb
mov
std
shll
and
das
jne
es
add
scas
adc
mov
ret
xor
ja
sub
cltd
add
stos
movsb
dec
daa
ss
push
pop
dec
fs
mov
mov
add
push
leave
cmp
test
push
jo
fistpl
lret
mov
jo
sbb
jns
fiadds
jp
aad
in
jo
pop
fst
nop
jle
insl
je
fnstcw
adc
inc
jle
pop
test
xorb
fsts
xchg
pop
bound
jo
aad
mov
xorb
dec
clc
insl
mov
fldcw
test
pushl
mov
inc
dec
jae
scas
aad
stc
popa
jo
dec
js
xchg
jge
add
fcoml
pop
data16
jo
xchg
test
arpl
push
jo
std
aad
sub
or
fcoml
mov
and
mov
int3
mov
cld
loop
cmp
out
lock
and
stos
loopne
rcll
mov
or
mov
outsb
outsb
sub
sub
xor
pusha
insl
jmp
push
jmp
test
xchg
test
mov
lahf
outsl
jb
jo
loope
inc
leave
jo
ss
and
data16
jle
repz
adc
jo
jl
aad
xor
js
cmpsl
or
leave
sbb
out
loopne
dec
rcrl
loop
xor
sbb
rorb
jo
push
insb
ret
sub
jo
cmp
cmp
jo
xor
sbb
cmp
ljmp
in
and
mov
xor
dec
push
push
sti
aaa
pop
push
nop
adc
inc
fsubp
js
int3
cmp
pop
repnz
icebp
pop
jo
pop
psubusw
inc
inc
ljmp
call
push
subb
xor
jge
cmp
or
bound
insl
mov
mov
inc
mov
jo
scas
adc
lret
jo
or
jmp
out
push
inc
jecxz
dec
and
fistpll
jo
dec
adc
je
jo
fsubrs
inc
mov
mov
in
add
aaa
jo
enter
shrl
jae
mov
xchg
jb
out
fmul
movsl
mov
fcoms
jo
sbb
cmpsl
xchg
loop
roll
outsb
jecxz
cltd
dec
roll
mov
mov
cld
inc
push
cmp
push
or
icebp
fwait
jo
fcoms
cmpsb
cwtl
popf
jo
insl
not
xor
mov
jo
xlat
scas
mov
pop
rorb
pop
pop
int
dec
adc
xchg
pop
push
mov
in
je
mov
and
cs
or
bound
add
xor
les
stos
xchg
out
mov
jo
rcrb
leave
aas
pop
es
loopne
jo
lds
and
jo
cs
jp
pushf
cmp
sti
jo
cmp
inc
mov
or
jbe
insb
int3
push
out
jo
sbb
in
sbb
add
jno
arpl
jo
aad
int3
mov
test
pop
dec
leave
fsubrl
cmpsb
shlb
inc
mov
arpl
dec
sub
lock
fs
jg
push
jecxz
mov
movsb
xchg
jle
insl
insb
mov
mov
in
xchg
shll
sub
dec
sub
push
pop
jbe
into
xchg
shlb
bound
jae
jecxz
cmp
mov
mov
pop
in
int
push
rclb
jo
bound
jo
adc
dec
out
fnsave
pop
lahf
push
or
xchg
aad
xchg
sbb
mov
sub
insb
mov
pop
inc
movsl
loopne
and
mov
stos
xor
sti
in
pop
inc
pop
aas
insl
pop
pop
inc
and
cmpb
popw
push
cwtl
xchg
mov
adc
mov
mov
shll
and
sub
push
add
jo
test
fwait
mov
xchg
jo
push
sbb
lds
iret
jo
daa
mov
pop
jo
mov
aaa
push
jo
ret
shll
insl
jo
add
add
cs
dec
stos
hlt
jle
outsb
lods
inc
xchg
nop
cmp
jae
xor
or
insl
pushf
jle
xchg
mov
push
jo
inc
sub
repz
xchg
lods
or
andb
jo
mov
jo
outsb
lret
pop
mov
pop
jl
sbbb
jo
roll
and
sbb
jo
aad
mov
dec
xor
lock
enter
inc
dec
fdiv
xor
push
shll
loop
scas
and
outsl
pop
mov
jo,pt
ja
js
pusha
aas
jo
xor
fnsave
fmull
mov
rcl
sub
xorl
push
mov
ja
push
out
jmp
mov
sbb
outsb
loopne
jb
jmp
nop
addl
jo
fs
mov
inc
popa
cmp
push
xchg
sub
add
addr16
mov
or
pop
aam
mov
jmp
in
int3
xchg
nop
lea
shlb
pop
repz
divb
mov
jecxz
subb
rol
mov
mov
jns
and
into
push
jae
sbb
arpl
pop
mov
add
dec
sub
iret
and
mov
ficompl
xor
arpl
pop
test
sub
jnp
jo
test
add
pushf
mov
aad
ret
jae
loop
and
dec
sbb
sub
cmp
or
cltd
mov
arpl
sub
pop
cmc
jo
call
pop
out
outsb
push
cltd
cmpb
jo
test
aam
sbb
pop
xor
outsb
js
mov
pop
mov
jo
sub
xchg
lock
popa
sub
pop
jo
repnz
js
out
cmp
jo
fstpt
push
sbb
lea
inc
jge
faddl
ja
roll
inc
jo
mov
and
jo
out
xor
mov
out
mov
adc
shrb
addb
sbb
cld
insl
pop
cmp
add
or
mov
sarl
mov
jecxz
jl
int3
lcall
into
push
jae
fucomi
mov
mov
test
xchg
in
dec
daa
setae
loopne
jo
xor
mov
sub
pop
sbb
jo
nop
bound
scas
jo
ljmp
jo
adc
xlat
test
mov
cmpxchg
inc
shlb
test
fcompl
jo
mov
and
sub
sahf
leave
jo
pop
fwait
xor
or
je
mov
and
push
popf
sahf
lcall
popa
lahf
xchg
jo
pop
mov
sbb
daa
leave
shll
loopne
out
enter
cmp
sahf
loop
push
sarb
les
pop
std
dec
push
pop
out
push
bound
mov
ss
in
movsb
dec
jg
or
icebp
lret
cwtl
or
jo
repz
outsl
popa
pop
mov
mov
add
ja
in
jno
mov
xor
pushf
lock
dec
andl
cmp
xor
adc
jo
xor
xchg
jmp
dec
cmpsl
or
push
test
rorl
shlb
pop
jb
mov
xor
mov
cmpsl
push
lahf
or
addr16
mov
xchg
jae
or
out
je
int3
or
mov
inc
test
sbb
out
out
imul
mov
cmp
mov
lds
ret
jo
xchg
jae
lret
mov
cmp
insb
sahf
mov
outsl
jno
in
inc
add
lds
dec
stc
inc
xor
mov
jo
ja
push
lahf
aas
scas
aam
int
jae
mov
subb
outsl
jae
sbb
sahf
mov
pop
jo
insb
and
aad
cmp
push
pop
lock
loopne
cs
sbb
shl
pop
jne
jo
lcall
jo
dec
psllw
lahf
ja
dec
jo
dec
in
add
push
mov
xchg
lock
loope
pop
pusha
mov
scas
mul
outsl
fwait
std
jo
daa
fstpt
mov
cmp
bound
xor
xchg
push
pop
pop
or
and
repnz
movsl
xor
xchg
mov
inc
jo
fsubrp
popf
jo
inc
pop
and
mov
mov
pop
jo
push
sbb
popl
jne
cmp
xor
cld
cmp
in
in
and
or
push
sbbl
jp
stos
sub
mov
jo
pextrw
sahf
ljmp
rcrb
pop
jo
jecxz
mov
ja
sbb
xor
jle
dec
nop
shl
fwait
outsb
add
cmpsl
clc
or
cli
mov
aad
mov
fdivr
cmp
mov
jnp
cli
int
mov
int
insb
cmp
scas
jo
cld
or
adc
sub
pop
mov
testl
outsl
cmp
push
jmp
jo
mov
mov
loopne
jo
insb
xor
cmp
insl
add
mov
mov
lds
cld
scas
mov
arpl
jo
sbb
sub
cwtl
cwtl
rclb
or
jo
scas
stc
sbb
mov
call
push
mov
aad
inc
fbld
inc
jge
mov
xchg
leave
sub
lret
mov
fistl
xchg
movsl
mov
jo
add
rolb
in
aad
inc
or
mov
lcall
jl
xor
cmp
pop
and
rcrl
jmp
jo
aad
popa
aas
in
mov
subl
sahf
inc
addr16
push
xchg
xchg
psrlq
sub
push
sbb
dec
add
out
mov
hlt
pop
loope
mov
test
jae
cmovle
fnstsw
out
rorl
xorl
icebp
jo
sub
push
push
jne
jo
divl
inc
jo
cmp
cld
xorl
mov
jbe
ficoml
jo
and
jle
ja
sub
out
lock
sub
pop
mov
adc
out
jo
push
xlat
aad
push
jae
and
daa
stos
mov
mov
cltd
or
loopne
jo
fst
bound
aad
or
leave
add
fwait
test
popf
xor
sbb
icebp
into
dec
adc
jno
ret
gs
add
jo
fcomps
mov
ja
call
jo
mov
jecxz
or
push
insl
jns
int
jae
test
loope
jp
and
jnp
outsb
inc
mov
loop
dec
mov
repz
insl
aas
in
jp
shr
xchg
fsubs
xchg
mov
sub
fisubrs
test
int
mov
jo
pop
insl
cltd
test
jo
or
fistpl
or
dec
inc
in
mov
jns
jo
fsubl
mov
push
jo
nop
mov
hlt
data16
jo
out
push
insl
dec
outsl
repnz
int3
lea
mov
dec
lock
ret
jmp
lahf
sbb
xchg
outsl
jae
mov
nop
mov
inc
pop
nop
daa
jnp
jo
wbinvd
sarb
fnstcw
insl
fldt
adc
cwtl
sbb
icebp
mov
and
and
mov
arpl
xlat
jns
int3
xor
lock
lcall
push
push
subl
and
pop
cmpsb
bound
sub
and
cmp
ja
xchg
insl
add
js
subb
jno
repz
lods
pop
dec
jo
jl
in
aad
sub
cmp
iret
jg
mov
jo
fyl2x
stos
mov
push
dec
jo
pop
fs
out
fisttpl
sbb
fstp
jle
mov
bndldx
jo
cwtl
aaa
mov
jo
out
jne
mov
mov
adc
jnp
lods
pop
lock
xchg
mov
add
xchg
test
xchg
and
jo
mov
aad
inc
pop
jo,pn
repnz
jae
outsb
loop
cmp
enter
cmp
dec
mov
pushf
jne
out
dec
xor
push
jo
pop
sbb
aad
xor
jo
fcmovbe
fs
mov
pop
shll
lock
sarl
pop
es
js
testl
repnz
iret
lock
mov
jo
js
int3
pop
rorb
push
jo
jbe
inc
pop
cmpsl
into
gs
jne
add
pop
test
mov
fcmovnb
mov
push
ja
inc
imul
adc
add
shrb
pusha
jp
push
scas
in
test
cld
pushf
xor
xlat
push
repz
pop
xchg
sub
je
jmp
jbe
jbe
ja
rolb
scas
cld
loopne
das
pop
inc
jo
cmovs
mov
loop
pusha
pop
mov
cmp
mov
mov
bound
sbb
jo
ret
fists
fldenv
dec
jge
jae
cmp
inc
cmpsl
bound
xchg
or
jo
dec
out
and
jo
cmpsl
aas
fldenv
inc
jg
push
mov
push
rcr
mov
xchg
imul
cmp
fstpt
pop
mov
clc
mov
sub
sub
push
sbb
out
imul
jl
rclb
jo
cmpsl
adc
arpl
lds
sub
cmpl
ljmp
mov
xchg
xchg
in
insb
icebp
mov
test
jae
jo
mov
cmp
push
imul
jo
rcll
jo
or
jle
xchg
jo
xor
out
cmp
popl
les
mov
fcoms
divl
andb
jle
insl
and
push
mov
or
in
jo
call
xchg
inc
sub
lods
push
jo
pop
sbb
inc
nop
xor
add
jl,pn
arpl
cmpsl
popa
jo
push
daa
jle
fildl
jmp
pop
sub
sub
rcrl
and
test
lret
or
jo
xchg
lgs
pop
mov
and
jo
hlt
sub
push
lods
dec
rorl
repz
pop
mov
fildl
xor
xchg
test
sahf
jg
test
or
fwait
jo
cmp
in
aas
in
cmp
jo
stc
pop
inc
xor
mov
inc
push
int3
add
mov
in
jo
inc
pop
outsb
rcl
fnstenv
sbb
adc
add
hlt
mov
cld
dec
cltd
in
jo
shrl
jg
add
xor
pop
shlb
jo
cmp
aas
inc
gs
lret
popf
jno
mulb
inc
stos
cld
jo
fcmovb
adc
and
push
ja
lock
jo
push
aad
xchg
frstor
sbbb
mov
lds
xchg
jl
mov
jno
sub
fistpl
in
adc
enter
xchg
mov
imul
jo
out
or
add
jo
fwait
push
aad
push
cmpb
loop
jo
imul
pop
jb
dec
cmp
cmp
xchg
jns
pop
int
mov
or
repnz
ss
outsb
and
xor
mov
push
jae
test
clc
lock
jbe
ja
sub
mov
cmp
fmull
jo
fcmovnb
jb
and
push
jo
rcrl
jo
jl
or
repz
jo
rcrb
or
cmpsb
dec
jp
jo
push
push
push
dec
jl
dec
rcrb
cs
or
icebp
aad
bound
dec
pop
out
loopne
mov
loope
rcr
lahf
mov
imul
add
pop
lret
addl
enter
sub
scas
lcall
test
push
fldt
les
xchg
dec
je
fnstenv
push
fs
mov
inc
frstor
or
aam
jo
mov
sti
push
stc
lea
jno
xor
jo
dec
pop
cmp
dec
inc
lahf
jo
push
arpl
or
pop
mov
mov
scas
adc
stc
cmpl
arpl
imul
pop
push
or
out
mov
push
fistl
dec
inc
mov
jg
loop
sub
add
push
pop
neg
jno
push
or
mov
mov
push
ret
ffree
rcll
outsl
xor
stc
fcompl
in
subb
xchg
xor
cmpsl
nop
mov
rcll
outsb
jmp
inc
cmc
pop
in
mov
lea
les
cmp
gs
mov
jb
jmp
in
movsl
jle
insb
ljmp
pop
shrb
mov
out
jns
jo
xor
shll
jmp
add
in
adc
ss
cmpl
push
hlt
cmc
sbb
jnp
fs
and
jns
sub
inc
lods
cmp
jae
nop
jo
sbb
cmp
fnstcw
lock
jo
cwtl
gs
call
jge
inc
pop
aad
test
das
inc
mov
test
jo
pop
fdivs
jo
cmp
idivb
inc
lahf
cmpsl
jo
es
adc
aad
mov
xor
mov
lret
jo
testl
dec
jo
jbe
push
jnp
mov
lock
pushf
xlat
sti
jno
insb
popf
shrl
jo
xchg
sbb
and
insb
jbe
mov
adc
mov
addb
and
rcll
mov
cs
add
dec
jo
xor
fcomps
fnstenv
outsb
xchg
inc
roll
xor
sti
or
push
add
lahf
sbb
jnp
jg
clc
aas
xchg
cs
jo
js
mov
xor
mov
mov
push
cmp
xor
clc
xchg
mov
xchg
push
cmp
imul
jle
bound
add
push
push
repz
jo
outsb
pop
cmp
jo
into
jg
daa
out
adc
adc
mov
loopne
cmpsb
jo
xchg
repnz
out
loop
gs
mov
mov
inc
inc
mov
mov
lock
cmc
jo
aad
fcoms
xor
lock
lret
inc
xorb
mov
enter
jns
shll
nop
jl
lcall
mov
pop
add
jbe
jns
or
jo
jge
cld
mov
jo
push
lea
lods
adc
pop
je
push
cmp
sub
pop
sub
adc
dec
push
and
bnd
loope
mov
in
and
xchg
ja
and
mov
cmp
jb
ffree
subl
shlb
jge
paddsb
dec
in
in
mov
repz
xchg
lods
pop
jo
push
push
fldenv
sahf
das
sbb
push
jo
into
lea
cmc
or
insl
jl
pop
add
dec
sub
and
jo
push
int
adc
cwtl
jo
jp
add
jg
ret
sarb
je
sbb
jo
lahf
repz
fstps
cmc
std
xchg
mov
and
jo
lcall
je
fisubrs
aam
out
dec
and
scas
cmp
cmpsl
jle
and
divb
aad
out
inc
clc
and
clc
or
faddl
cmp
aas
fcmovnu
jo
sbb
push
ss
adc
adc
test
insl
lods
jecxz
lea
jo
arpl
sbb
mov
call
ficoms
aaa
rcl
insl
and
jmp
dec
jo
mov
int
jl
cmpl
lea
fstps
mov
cli
jmp
mov
jg
mov
imul
gs
dec
push
jo
pop
sub
insl
fcomip
sbb
dec
push
hlt
and
mov
aad
insb
imul
in
sub
sub
pop
mov
jo
insl
xchg
loopne
popfw
ja
push
push
lret
fildl
jo
rorl
xchg
sub
insb
lods
fldcw
push
leave
jo
and
sbb
xchg
jmp
mov
jl
int
mov
add
insl
sbb
push
repnz
inc
adc
div
xchg
les
mov
pop
sahf
inc
inc
pusha
shr
xchg
xor
pop
mov
or
mov
mov
xor
test
repz
jle
jo
int
cmp
arpl
dec
jb
in
and
movsl
sarb
mov
imul
jo
xlat
insl
add
mov
imul
test
adc
cs
stc
jo
fidivl
add
cmp
das
or
xchg
stos
mov
jae
adc
xor
fildl
aad
mov
pop
lods
loopne
jo
sbb
das
cmp
dec
mov
push
cld
jo
arpl
in
in
xor
insb
mov
imul
sbb
je
mov
sbb
pushf
pop
idivl
push
es
jo
sbb
lds
insl
fistpl
test
aam
out
jp
lods
add
inc
jecxz
xchg
or
jo
inc
test
jo
call
cld
dec
dec
push
call
mov
xchg
add
jae
push
in
repz
and
adc
test
leave
pop
sbb
sbb
jae
aaa
mov
adc
xchg
xor
add
fldt
in
add
addr16
xchg
mul
cmpl
in
insl
push
dec
cmpw
gs
cmpsb
cltd
or
add
popf
shlb
sbb
fwait
jo
gs
pop
lods
add
xlat
xchg
inc
jo
push
inc
bound
arpl
stc
xor
adc
icebp
jo
push
loope
jge
dec
jo
sub
lret
mul
jo
and
xor
dec
inc
push
fwait
push
shlb
mov
xchg
jo
imul
jo
jle
iret
pop
jg
xchg
jo
and
push
mov
jbe
enter
jp
lret
pop
mov
jo
cmp
std
push
das
push
int3
jo
lea
xlat
mov
insl
pop
xor
push
pushf
int
push
stc
stos
lahf
jle
xor
imul
mov
pop
jae
inc
insl
outsl
test
sbb
repz
jbe
leave
jo
cmc
out
cld
aad
push
mov
push
xchg
stos
jo
pop
mov
add
ds
jp
pop
out
dec
xor
lods
push
pop
sub
mov
dec
mov
mov
add
pushf
and
jl
pop
subb
test
pop
shl
jo
outsl
aad
addr16
addl
in
cld
lret
fwait
mov
xchg
test
mov
pop
cmp
jge
lret
insb
and
cwtl
into
jo
lcall
fmul
xor
xlat
repz
daa
rol
xchg
mov
cmp
push
lret
and
mov
outsb
dec
inc
xchg
push
push
ret
adc
outsl
sub
test
cwtl
pop
jo
test
popf
inc
cmpsb
into
insb
jo
jae
adcl
adc
int
sub
pop
xchg
adc
outsl
lahf
dec
mov
lea
sarl
xchg
jo
out
mov
jo
add
out
fildl
pop
outsl
inc
jb
jo
xchg
stos
int3
sbb
dec
jo
inc
mull
pop
push
pop
bound
ret
aas
movsb
in
lds
es
ja
and
sub
lock
nop
mov
test
sub
jo
arpl
outsb
ja
dec
xchg
pop
jno
mov
xor
int3
dec
mov
inc
mov
and
mov
mov
repz
cmp
jo
cmp
add
push
mov
lock
and
push
roll
iret
xor
jo
js
mov
in
jnp
inc
mov
push
xchg
dec
iret
jo
fmull
mov
jae
xchg
aam
ret
js
or
je
mov
mov
mov
pop
scas
lock
xchg
cwtl
xlat
jns
dec
pop
mov
es
mov
les
sub
jo
push
push
jno
jp
pop
insb
pop
scas
jb
test
xor
jle
push
rcll
mov
mov
jo
fwait
and
adcb
int3
and
stc
mov
in
scas
cmpl
and
repz
jo
adc
fwait
pop
mov
je
fsubrl
popf
jo
pop
inc
cmp
mov
loop
push
or
push
sbb
pop
shll
mov
aad
imul
and
jo
push
mov
mov
outsb
jg
int3
std
or
and
test
fsubrl
stos
jbe
je
push
mov
lea
push
pop
fdiv
lret
add
adcl
test
notl
aad
and
or
outsl
lock
js
pop
add
lods
adc
pop
sbb
ret
shll
gs
aad
scas
bound
xor
sub
jbe
or
in
pop
popa
jno
aam
leave
jno
loop
shlb
dec
dec
out
rcll
lock
lock
mov
cmpsl
push
add
aad
lods
pop
clc
das
jnp
jmp
repz
jo
push
fldcw
das
jecxz
mov
xorl
mov
mov
pusha
sub
insl
dec
movsl
dec
pop
adc
iret
xchg
aas
shll
xchg
addr16
jmp
inc
sbb
cmp
push
lock
and
push
gs
nop
inc
test
insl
cmpsl
int3
fmul
mov
add
jp
fldcw
ficoms
or
jbe
fisubrl
rorl
nop
fnsave
pop
mov
lods
jnp
mov
cmp
jne
xor
shrl
mov
xchg
lret
mov
fsubrl
xchg
jne
repz
jo
das
loop
xchg
hlt
push
jo
push
fsubl
xlat
lds
call
adc
jo
xchg
dec
sub
subb
lods
cmp
sub
mov
inc
inc
push
pusha
and
ret
xlat
push
cmp
shll
fisubrs
pushl
fistpl
xor
lds
sub
jo
push
stos
arpl
cld
in
fidivl
xchg
mov
orb
add
jo
sub
cmc
cld
not
mov
ret
ret
lods
aaa
push
enter
push
push
and
fnstcw
mov
enter
jo
sub
call
jle
jne
std
data16
lock
xlat
xor
jo
mov
jl
jo
mov
rcrb
jne
cmp
stos
aas
jae
push
out
leave
lds
mov
outsb
aam
mov
adc
jo
xchg
rolb
shr
xchg
xchg
sbbl
bnd
aaa
jo
xlat
lahf
int
enter
movsl
sbb
lea
shll
push
add
sub
mov
fwait
enter
xor
cmp
cmp
add
push
ljmp
xor
movsl
mov
aad
jl
jnp
fs
inc
cmc
jo
call
adc
jo
inc
aaa
mov
movsb
push
lods
or
fdivl
fucompp
adc
addr16
mov
out
das
pop
dec
pushf
mov
hlt
divl
es
push
outsb
data16
loopne
loop
adc
setb
movsb
and
outsl
add
int
xorb
insl
dec
sarb
push
cld
fidivl
out
test
outsl
jmp
jns
in
xchg
push
add
pop
daa
push
inc
xchg
fcomp
jo
mov
jo
stc
push
sub
pop
cmc
sahf
jo
inc
jmp
or
out
outsb
mulb
sub
mov
ret
adc
sbb
lods
nop
or
cltd
jo
aad
mov
inc
mov
mov
out
fsubs
pop
add
fistl
lock
rolb
fisttps
jl
addl
cmp
jge
ret
movsb
insl
lods
je
fucom
mov
add
insl
loope
idivl
jb
ja
sbb
mov
dec
jl
sub
rcr
push
sahf
sbb
adc
ja
into
ror
xchg
jne
push
fidivs
and
jo
addb
jo
es
popa
xor
cwtl
ja
mov
or
and
addr16
xor
mov
aad
daa
jbe
neg
lret
jno
dec
xor
jo
shll
jp
pop
enter
lcall
nop
push
nop
outsb
or
xor
jecxz
fs
pop
movsb
mov
push
push
pushf
inc
xor
dec
in
gs
cmp
iret
jo
jge
popf
push
push
addr16
adc
movb
xor
adc
dec
hlt
fwait
adc
cmp
mov
insl
pop
mov
and
outsb
dec
mov
xchg
mov
xchg
fildl
mov
add
push
test
fcomps
xchg
dec
hlt
lock
jo
adc
aad
mov
test
dec
jno
inc
mov
mov
xor
add
notl
jle
insl
icebp
mov
adc
push
xorb
pop
push
and
jo
cmpsl
xlat
push
push
add
inc
sub
add
mov
sbb
negl
mov
xor
cld
pop
into
cwtl
mov
xchg
call
stc
and
cmp
cld
test
mov
adc
jecxz
jne
sar
lock
jb
pushl
pop
push
popf
loop
push
lret
jae
arpl
rcr
mov
mov
jmp
xor
sub
push
jo
shll
ds
mov
xor
pop
inc
add
into
lods
mov
jo
scas
fcomi
mov
inc
je
jp
xchg
scas
cwtl
pop
lcall
jl
or
jge
jbe
in
inc
sub
mov
xchg
ja
sti
xchg
jmp
inc
arpl
stos
xchg
jo
stc
jnp
cli
je
in
icebp
jo
dec
pusha
add
mov
pusha
xor
mov
push
xchg
std
jo
push
push
fidivl
rol
mov
push
jo
and
imul
push
sub
mov
and
loopne
jae
xor
data16
mov
roll
pop
jb
imul
mov
mov
loope
shrl
out
sbb
xorb
jl
lret
or
mov
mov
out
jo
in
out
cmp
aad
cld
call
sar
orl
lock
pop
jo
mov
dec
pop
sub
into
pop
out
js
jae
mov
mov
adc
jo
jns
add
cmp
and
xchg
sub
xor
pop
adc
jae
jne
inc
mov
jg
push
lea
xor
shld
pushf
lock
sbb
add
test
insl
dec
cli
cmpb
or
insb
jo
sbb
sbb
in
mov
adc
xor
push
popf
inc
jo
movsb
adc
jo
lds
leave
aad
cmp
xor
mov
arpl
andl
gs
leave
cmp
sti
jbe
push
xlat
xor
jge
lods
pop
cmp
je
sub
mov
rcrl
push
xor
inc
je
fs
push
in
xchg
add
mov
cmp
jge
je
pop
cmc
bound
outsb
test
adc
mov
dec
sbb
and
lock
mov
jg
inc
insl
mov
in
cmpsl
mov
frstor
jecxz
mov
repz
mov
mov
insl
test
mov
orb
sahf
outsb
ret
ja
rolb
pop
push
cmp
jo
xchg
jbe
sahf
jo
xchg
xchg
int3
cmpsl
fcoml
mov
pushf
xor
fwait
sbb
dec
pop
adc
jo
lds
inc
in
cld
mov
gs
arpl
adc
fdivrp
ja
cmp
xchg
loop
inc
pop
push
enter
xor
pop
clc
out
cmpsb
xchg
mov
pop
inc
addr16
push
movsb
push
popa
pop
jae
std
cmp
lods
dec
ja
sub
sub
push
and
jmp
jo
cmc
pop
lea
or
mov
stos
into
inc
jnp
ss
aad
mov
add
sbb
cli
loopne
mov
test
inc
rclb
ds
lea
rol
jo
lcall
insl
sub
jne
into
in
jo
mov
mov
mov
leave
xor
jmp
jo
cld
or
xchg
idivb
je
jo
push
outsl
cwtl
jmp
jo
pop
ljmp
xchg
mov
inc
dec
push
mov
mov
mov
add
fdivl
mov
xchg
dec
dec
inc
sub
push
out
pushf
es
dec
repz
add
push
push
and
test
jo
repnz
jp
inc
push
outsb
jo
rcrl
les
jno
mov
clc
lret
movsl
jne
push
xor
lock
div
adc
push
or
and
jo
mov
test
aad
or
pop
rorb
or
mov
mov
xchg
insl
xlat
mov
adc
out
xchg
addr16
outsb
jne
cmp
sub
fstpl
jo
pop
adc
pushf
jecxz
ljmp
lcall
or
mov
cmp
mov
repz
bound
jo
xor
adc
testl
mov
jae
sbb
subb
inc
mov
in
cmpsb
pop
dec
xchg
int
jo
pop
xchg
pop
jbe
sub
pop
jge
fsts
test
add
lds
dec
pop
push
out
push
jo
es
arpl
sbb
mov
xor
jb
arpl
das
xor
xchg
sub
jo
mov
add
ja
insb
mov
cmp
test
mov
jecxz
inc
into
mov
cmpsl
shll
decl
mov
imul
jo
dec
stc
push
out
cmp
in
adc
xor
addl
cmpsb
insl
adc
sub
addr16
fwait
ja
movsl
push
hlt
pop
push
aam
or
je
jmp
stos
jle
xor
fsubr
aam
je
fidivrl
pop
and
ja
cld
inc
jp
mov
jo
cmpsl
bound
push
sti
jns
xchg
cmpsb
lret
jb
cmp
jo
test
cli
push
jae
es
pushl
jno
push
testl
adcl
sbbb
jo
aad
mov
cld
push
fstps
sbb
cmc
lret
mov
pop
or
push
add
mov
mov
out
pop
adc
or
push
insl
dec
repnz
imul
addb
int3
insl
mov
push
call
inc
out
and
leave
add
shr
std
xchg
adc
loopne
cmp
lock
gs
clc
stos
xchg
xchg
lods
jo
xchg
jbe
inc
push
mov
mov
rclb
movsl
insb
aas
xlat
jl
add
jle
jo
pop
xchg
xor
fistpl
loop
lock
movsb
int3
jo
xor
xor
insl
adcl
mov
idivb
movsl
mov
rcrl
jp
xchg
mov
dec
mov
movsl
inc
jo
movhps
jo
cmp
inc
push
or
pop
xchg
notl
test
xor
rorl
sub
fsts
push
xor
fsubr
andb
shrl
cmp
fdecstp
movsb
or
push
jp
lds
stc
mov
push
xchg
or
or
xchg
out
push
jo
cltd
out
cli
stc
dec
adc
jo
imul
ret
jo
into
pop
inc
sbb
data16
jmp
mov
jo
mov
stc
aad
test
in
xor
lock
adc
mov
inc
fnstenv
and
jo
stc
fidivrs
lahf
pop
mov
in
mov
insl
les
je
ror
in
inc
mov
adc
fistpl
add
addr16
mov
ja
mov
into
add
mov
xchg
loopne
out
and
inc
pusha
adcb
push
fcmovne
dec
xchg
in
jo
mov
pop
dec
jns
adc
adc
into
aaa
bound
popa
aad
jnp
mov
fabs
jo
stc
dec
sub
jo
fs
adc
push
in
les
sbb
insl
push
jo
orl
pop
mov
or
pop
push
or
addl
pop
aaa
out
jo
das
inc
jmp
jbe
xor
mov
inc
lahf
xchg
inc
sub
jo
add
jo
loope
ss
cmp
ja
pop
pop
sbb
xchg
add
pop
into
adc
or
push
lods
mov
sub
inc
std
inc
jo
adc
test
movsl
ret
mov
jbe
cs
cmp
and
in
nop
jo
sarb
adc
lcall
push
inc
dec
push
cmp
out
lret
or
js
adc
bnd
inc
jno
push
mov
jo
int
jo
pop
out
mov
aad
or
sub
daa
mov
mov
fildl
xor
push
cmpsb
fs
push
into
mov
jo
pop
jecxz
aad
ljmp
loop
es
xchg
ja
rcrb
sarl
dec
test
arpl
adc
jo
jnp
cmpsl
aad
testl
rorb
loopne
gs
push
mov
insb
ds
leave
pop
jae
xlat
enter
xor
push
lock
pusha
decl
add
xchg
ja
fwait
dec
adc
imul
jp
sbb
dec
fdivrs
xchg
icebp
sub
loop
imul
xor
rclb
jo
scas
mov
lea
inc
enter
push
mov
cmpsb
mov
jo
loopne
dec
jno
push
enter
inc
or
xchg
fisttpl
andb
pop
push
mov
ret
jo
cmc
mov
and
int3
repnz
loope
jo
aas
adc
js
pop
xchg
ret
repz
sbb
xor
aam
push
inc
insl
aas
mul
pop
shrb
xor
lret
jo
pop
xor
mov
enter
sub
out
adc
add
jo
shr
push
fildl
jo
ret
les
aad
in
xor
inc
push
xor
nop
jo
lahf
das
or
add
insl
ds
jmp
stos
sub
mov
das
cmc
dec
fisubrl
roll
mov
cmp
fs
mov
addl
outsl
xchg
int
shr
enter
fcoml
push
shrl
xor
jle
xchg
lock
sahf
dec
pusha
jl
stos
and
add
mov
dec
in
mov
icebp
add
or
gs
mov
push
cmp
dec
sbb
in
out
mov
mov
add
shlb
fsubrs
cmp
dec
outsb
daa
ss
xor
cmp
or
push
or
jo
xor
jle
clc
shll
dec
mov
mov
aaa
jnp
imul
lock
fiadds
jo
mov
jo
inc
data16
pushf
xchg
and
push
nop
orb
xor
mov
stos
jo
aad
pusha
jle
dec
lea
mov
icebp
inc
cmp
xor
cwtl
aad
repz
mov
fsts
mov
push
lds
outsb
enter
mov
cmp
or
lods
popa
xchg
es
mov
popf
icebp
shlb
pop
imul
int3
dec
aas
xchg
lock
sub
addl
cmp
dec
fisttps
adc
fstpl
mov
jo
pop
jg
icebp
add
scas
mov
jae
shlb
aad
mov
or
xchg
mov
stc
insl
mov
add
cmp
lock
lods
pop
jo
add
outsb
into
xchg
int
jo
arpl
fists
aas
out
dec
inc
int3
or
aad
ud2
lods
mov
fildll
shl
fsubrp
js
cltd
out
imul
enter
cwtl
add
jge
pop
sbb
sub
pop
adc
lock
sbb
shlb
jp
test
jnp
insl
cmc
outsl
out
jmp
inc
inc
push
insl
int3
push
add
and
xor
jbe
xor
test
daa
xor
push
pushf
jg
mov
jl
mov
adc
jp
mov
push
enter
push
xchg
xchg
mov
out
inc
ds
jo
lahf
leave
outsb
jg
cwtl
dec
adcb
lods
ret
cmp
and
jne
int3
mov
aaa
imul
mov
dec
shll
mov
sbb
jo
dec
mov
push
fdivl
xchg
js
stos
mov
xchg
jmp
mov
adc
pop
test
mov
and
push
mov
xor
out
movsl
shll
fyl2x
scas
in
ds
xlat
cmp
int3
inc
and
or
mov
sub
jp
sti
int
insl
jg
cs
push
outsb
jo
mov
xor
call
adcb
cmc
jo
lds
xchg
mov
es
cltd
cld
lock
jb
shlb
jle
jo
xchg
xor
mov
mov
add
mov
rcrb
push
sbb
xor
jo
adc
enter
mov
insb
jo
mov
std
shrb
pop
int
cmc
mov
lds
and
subb
jne
ret
xchg
pop
inc
jo
fldcw
rclb
inc
sbb
push
mov
insl
xor
push
loop
mov
sub
jbe
add
repz
sub
test
adc
cmp
and
jg
imul
shrl
adc
cli
jo
xchg
xor
xchg
mov
xchg
adc
jo
fistpll
jmp
les
lods
jo
inc
stos
xchg
jle
aas
cwtl
jo
fcompl
mov
xor
ret
mov
inc
and
aam
dec
sub
sarb
push
out
mov
and
adc
into
jecxz
push
lea
jo
pop
aas
adc
jecxz
aad
lret
pop
lods
cmp
and
cli
xorb
xor
sub
mov
sti
jge
sbb
pop
sbb
fldt
loope
loop
add
jo
imul
out
addb
jo
call
sbb
fs
aad
bnd
fmulp
and
add
jo
hlt
xchg
mov
jo
rcrl
fidivrs
cmp
pop
jo
sbb
pusha
cwtl
stos
ja
inc
dec
push
jno
in
mov
mov
pop
jo
pop
arpl
stos
ja
lods
lock
adc
cmpsb
loopne
and
xchg
xlat
mov
add
push
out
pop
test
inc
mov
lods
jo
jno
fnstsw
loop
jo
clc
xlat
imul
icebp
inc
bound
mov
push
fnstenv
stos
int
and
fs
jo
xchg
aad
stc
xor
jo
inc
mov
xor
sub
testb
mov
mov
mov
fcmovu
jae
xor
jb
cld
mov
xor
loopne
mov
jmp
sbb
jp
movsb
ret
dec
jge
jo
ja
out
fsubl
jo
xor
jmp
cmpb
mov
mov
cmpsb
mov
xchg
inc
enter
repz
repnz
or
pop
mov
lods
mov
insl
popa
cli
mov
lock
repz
pushf
push
or
call
dec
add
outsb
xor
test
xchg
fs
mov
xchg
leave
jo
repz
shlb
adc
jo
std
mov
aad
in
push
je
mov
jno
mov
sahf
repz
jo
scas
roll
jo
sbbb
push
push
icebp
jo
rorl
jbe
iret
lods
jo
dec
or
sti
pop
jp
pop
xor
sbb
into
mov
imul
sub
outsb
test
jecxz
adc
mov
sbb
in
dec
sahf
lds
mov
leave
aad
xchg
pop
xchg
cmp
jo
lods
fldt
xorl
mov
rcr
xor
ftst
xor
jo
adcb
rclb
jo
mov
jae
push
jl
mov
jns
mov
jo
in
push
push
push
jo
insl
lods
repnz
xlat
shr
add
jb
mov
mov
loopne
out
psrad
jbe
fldcw
jge
push
pop
arpl
push
aad
mov
push
xlat
mov
pushf
mov
arpl
ret
ljmp
jno
out
dec
pop
insl
xlat
incl
push
inc
and
jo
dec
sub
ret
jno
adc
loope
xchg
push
ds
stos
insl
mov
cmp
inc
mov
in
sub
add
in
sub
dec
fcoml
mov
dec
adc
lods
pusha
aad
dec
cld
frstor
jmp
mov
cmc
sbb
out
sahf
xchg
fadds
jecxz
inc
je
sub
out
insl
add
movsb
icebp
jo
xor
cmc
repnz
mov
outsl
adc
insl
scas
psubq
jo
aas
adc
push
insl
mov
addr16
lock
xchg
insl
push
test
xchg
jl,pt
mov
orb
cmc
fnstcw
inc
mov
scas
pop
and
push
add
push
jo
push
mov
mov
outsb
fcoml
dec
cmp
popf
shr
vpshlb
jb
pop
mov
loopne
dec
imul
and
cwtl
jo
in
cli
sbb
pop
nop
imul
mov
jo
mov
jns
push
sbb
jo
cmp
inc
jo
into
mov
cmpsl
jo
mov
mov
jo
mov
movsb
jo
fcoml
mov
lods
mov
subl
jg
in
and
cmp
xorb
cld
jns
cmp
mov
mov
adc
jno
jo
cld
cmp
jo
mov
xchg
insl
mov
pop
inc
xchg
rcl
call
repnz
xor
divb
sbb
jo
dec
pop
int
into
insb
sub
int3
scas
mov
aad
mov
lea
push
xorb
je
js
dec
pop
mov
push
shlb
and
and
cmp
jnp
sbb
jl
jo
out
rcll
lea
xchg
cmp
push
or
jnp
and
xchg
lret
fld
mov
jge
jo
mov
lahf
xchg
rcl
arpl
leave
xchg
aad
insl
shlb
lcall
shlb
inc
int3
shll
and
cmp
xor
xor
jo
mov
mulb
sti
jne
pop
test
cmp
popf
lds
push
loop
or
push
jo
or
sti
sub
push
pop
std
ret
mov
cltd
push
lcall
nop
pop
and
mov
lock
dec
arpl
jo
out
mov
divl
push
jo
cmpsb
shll
jo
or
clc
daa
rol
sbb
fmull
cmpsb
and
pop
sub
insl
ljmp
mov
lret
jo
push
or
shlw
xchg
fcompl
pop
adc
jo
leave
out
insb
cmpsl
sahf
and
jo
test
inc
mov
mov
outsb
aas
pusha
pushf
popa
lods
xor
jg
jo
xor
negl
jp
and
mov
mov
xchg
jo
into
mov
sub
shll
dec
jmp
fcos
lods
loopne
or
nop
das
rorl
call
sub
mov
popa
loope
mov
lcall
sbb
fstpt
jne
push
and
or
push
cmp
push
mov
stos
aaa
sub
fbstp
dec
mov
jle
jo
out
bound
jno
mov
cmp
push
mov
lcall
jno
cltd
xchg
or
stos
fsubrs
mov
jo
aaa
rol
clc
pop
andb
ja
mov
mov
stos
lret
dec
mov
jo
push
lcall
fiadds
inc
cltd
xor
jnp
loop
adc
push
dec
cmp
cmc
scas
shll
in
sub
cmpsb
ja
shll
sub
jo
pop
rcl
adc
lds
mov
popa
rclb
xchg
lods
jo
pushf
mov
xor
testl
int3
jo
mov
xchg
fnstenv
popa
pushf
fcmovnb
pop
aad
and
std
xlat
loopne
xorb
mov
aad
sbb
jno
xchg
loope
js
mov
xchg
sub
jno
jne
add
pop
push
pusha
push
jo
lods
es
rcll
sub
decb
fs
jnp
lret
jo
cmp
cmp
push
imul
in
sbb
out
lock
sbb
push
mov
adc
sub
test
div
sbb
cmp
jb
aad
jp
mov
jno
lahf
add
repnz
jg
mov
push
push
or
shll
xchg
das
pop
jecxz
scas
nop
inc
cmp
jo
cmpsb
lea
ficompl
mov
jo
idivl
mov
addr16
aam
cmpsb
ret
lcall
push
inc
push
cmpsl
icebp
mov
xchg
enter
std
or
mov
jo
fildll
pop
push
xchg
sahf
jo
add
mov
jge
adc
push
cmpsb
inc
outsl
mov
dec
aad
jo
add
insl
in
mov
icebp
inc
call
jo
mov
sar
jo
xchg
mov
loope
arpl
scas
xchg
hlt
cli
aad
xchg
fldt
cwtl
dec
fimuls
xchg
lock
jo
stos
fldl
push
jmp
mov
ret
jo
jecxz
out
pop
adc
pushl
pusha
fbld
aad
xor
mov
cmpsl
or
inc
push
mov
dec
push
aas
jo
iret
fisttpl
loope
sub
jg
aam
push
in
ret
aas
jnp
and
in
imul
lret
cmp
movsl
outsb
dec
xorb
lret
insl
loope
dec
mov
or
push
mov
aad
xor
movsb
and
rcrl
xorb
xchg
fwait
mov
pop
loop
jae
enter
lret
jl
sub
fcompl
cmp
jo
lods
and
aaa
fimuls
jo
xor
out
lahf
mov
jne
pop
add
enter
jo
ljmp
loopne
add
ja
gs
jb
imul
pop
mov
sub
inc
lret
xlat
mov
jo
mov
adc
sti
insl
inc
ss
push
push
jo
aaa
mov
scas
add
xor
stos
mov
movsl
fwait
adc
xor
sti
xor
mov
cli
lods
andl
jnp
dec
enter
xlat
jo
in
test
popa
cmp
insb
jo
xchg
fimuls
jo
cmpl
sub
jmp
cmp
mov
sub
add
ja
mov
call
not
in
les
out
jo
shlb
je
lock
in
sub
addl
jo
std
cmp
pop
notl
loopne
cmpb
fwait
cmp
xor
or
rcl
loop
cmp
push
add
hlt
test
ss
push
mov
in
dec
jo
pop
lds
push
jo
test
inc
and
aaa
and
adc
xor
xor
call
fcmovbe
jg
rorl
cli
out
aad
dec
xor
loopne
adc
lret
lcall
push
jno
out
insl
ficoms
and
sbb
into
fisttpll
pop
cmp
jnp
decl
test
inc
mov
add
fisttps
sar
push
jo
dec
sbb
or
aad
ljmp
jo
test
sub
out
popa
cmpsl
lods
gs
push
addr16
and
and
push
fsubrl
divb
xchg
sbb
inc
cmpsb
inc
dec
push
pop
cmp
jae
and
aaa
es
jo
out
loopne
rorb
cld
sbb
or
sbb
addl
jg
dec
push
mov
cmp
je
iret
addb
push
out
ljmp
je
sub
cmpb
shld
push
arpl
or
jge
ja
sbb
lea
or
ja
and
sbb
shrb
mov
out
jbe
jp
ficompl
or
sbb
push
cmp
jo
inc
xlat
lcall
stos
jno
in
and
push
pop
pop
jns
pop
jp
fwait
mov
loopne
jo
jmp
xor
ja
jae
orb
push
mov
fnstenv
movsb
mov
rcrb
or
nop
adc
call
outsl
cmp
jo
pop
sbb
ffreep
enter
jbe
push
fwait
movsb
arpl
push
jb
in
jae
mov
scas
adcl
std
mov
outsb
test
push
push
fwait
mov
lock
add
sarl
gs
orb
jp
jo
pop
push
sahf
insb
ret
mov
mov
repz
xchg
aas
cmpsl
pop
cmc
inc
ret
fiaddl
cmp
jp
sbb
and
add
jb
fstl
jo
test
mov
js
in
jo
out
mov
jo
lea
push
sti
lret
jle
jo
and
hlt
xor
adc
xchg
xlat
mov
nop
gs
nop
mov
vmaxsd
outsl
xchg
jo
iret
xlat
stos
lret
and
iret
nop
jo
and
stos
ret
mov
fucomi
cwtl
jp
xor
sub
jo
hlt
push
xor
fldenv
insl
mov
jne
and
outsl
in
lcall
hlt
inc
pop
jo
add
jbe
pushf
rcll
push
push
push
push
mov
aaa
sbb
arpl
mov
cli
mov
fdivl
xor
mov
cwtl
divb
pop
jmp
xchg
outsb
jbe
sbb
jle
mov
outsl
push
enter
movsl
and
pusha
add
jge
jp
mov
inc
fbstp
sar
aaa
arpl
jo
push
push
shlb
pop
popa
xchg
fwait
psubd
rcrw
mov
add
insl
aad
ret
sbb
lods
test
jo
push
cs
cmp
out
iret
ja
mov
add
shlb
pop
out
jo
fidivrs
popa
inc
mov
jmp
jl
inc
jo
aad
sbb
sub
or
mov
xlat
in
psubusb
jns
mov
imul
jmp
add
pshufw
rol
jo
in
mov
jo
xorl
jo
mov
outsb
dec
cld
jge
jo
in
pop
test
add
pushf
mov
loop
add
int3
sbb
movsl
jo
sbb
fbstp
jo
dec
and
shlb
out
xchg
mov
pop
jb
mov
add
jo
inc
mov
pop
inc
repz
jbe
cmp
jno
jl
testb
jmp
fsubs
and
mov
cmp
add
xchg
jo
daa
aaa
popf
push
pop
dec
jo
ja
adc
rolb
dec
pop
push
mov
xchg
fcmovu
xor
push
inc
test
cli
or
cmc
push
pop
iret
lahf
adc
in
ds
cwtl
je
dec
fdivl
xchg
sarl
jo
arpl
xchg
pushf
insb
xchg
jo
popf
push
lods
cmp
inc
jbe
cmp
rclb
push
aad
aaa
js
push
lock
fiadds
pop
add
in
shll
mov
aad
mov
jno
and
insl
lock
imul
enter
stc
or
push
jmp
movsb
push
push
dec
and
orl
push
inc
lea
fdiv
js
cmpsl
notl
aad
cmp
int3
std
push
mov
dec
lock
movsl
dec
jae
lock
ret
mov
add
out
jge
inc
adc
sub
sbb
pop
cmp
ja
movsb
ret
pop
and
push
mov
pushf
mov
sti
shlb
shll
test
mov
lea
inc
dec
roll
cmp
lahf
and
jo
cli
xchg
sbb
aad
addr16
dec
mov
push
xor
arpl
js
mov
in
sbb
jo
sbb
pop
or
adc
push
jo
cmp
jmp
push
cli
push
jno
int3
andb
jo
add
imulb
dec
test
addr16
lock
out
mov
xor
push
sbb
sbb
push
jp
dec
cmp
hlt
adc
sub
push
std
adc
xchg
out
inc
outsb
sti
icebp
mov
mov
add
cmpsb
sbb
push
cli
add
aad
shrl
and
dec
add
sbb
leave
jo
mov
test
dec
xchg
jo
fmuls
aas
jo
fistl
ret
lea
ss
lock
xor
jo
push
shl
push
mov
push
in
mov
leave
mov
push
xchg
jae
cltd
mov
cmpsb
jo
sub
add
mov
ja
mov
jo
and
loope
jo
dec
or
sbb
xchg
je
pop
inc
add
shll
sbb
push
push
pop
or
xchg
das
sbb
rcrb
in
aad
cmp
shll
xchg
popl
stos
icebp
jnp
test
dec
jo
movsl
push
sahf
push
jo
jae
xchg
jmp
add
jo
sbb
jo
mov
mov
rolb
les
jo
popf
mov
mov
stos
xor
iret
cmp
test
jo
rol
mov
sbb
jecxz
ja
push
fwait
nop
fldenv
imul
es
pop
mov
xor
sub
dec
sub
add
jle
jo
lcall
call
ret
fbstp
data16
call
jo
pop
adc
gs
insb
mov
pop
insb
fnstenv
lea
jo
dec
cltd
faddl
shlb
pop
mov
stos
lock
inc
ret
cmc
aam
out
jo
call
mov
and
mov
outsl
jl
aad
lret
inc
cmp
jo
out
jae
xchg
push
mov
xchg
pop
rcr
adc
dec
sbb
push
sbb
sbb
jo
loope
in
cmc
cmp
sub
mov
inc
fdiv
pop
std
mov
mov
dec
push
daa
lret
mov
mov
out
sub
rcr
push
aad
pop
jg
jo
xchg
push
outsl
mov
test
cmp
lods
aad
or
add
es
cmpsl
jo
orb
and
out
imul
aad
mov
fnstenv
push
mov
sub
jne
sahf
dec
adc
or
xchg
out
and
push
inc
add
push
mov
cmp
pop
adc
scas
lock
jg
mov
push
cmpsb
add
orb
repz
mov
stos
fisubrl
fsub
dec
jmp
jl
jo
inc
stc
xor
cmp
pop
jo
pop
xor
jb
les
rcl
insb
fistpl
jno
stos
scas
lods
into
jo
xchg
xchg
pop
out
add
dec
fsubl
and
inc
je
jnp
and
jae
sbb
push
push
push
repz
mov
scas
push
data16
mov
sar
subb
and
jo
mov
and
push
add
jae
sub
jo
aam
mov
enter
cmp
cmc
sbb
clc
jno
lahf
sub
dec
jne
mov
jo
das
mov
inc
shlb
adc
fs
fadd
jno
jae
xor
sbb
cmp
fidivl
mov
movsb
repz
aad
xor
loope
ret
push
sbb
scas
lock
lds
jp
into
in
lea
sbb
dec
xor
mov
aam
cld
fnstenv
cltd
or
addr16
and
jo
je
pop
out
sub
xor
and
idiv
push
dec
mov
in
adc
in
outsl
out
pop
xlat
lock
mov
dec
outsb
dec
insl
nop
pop
push
xchg
adc
in
repz
jecxz
sbb
mul
jo
jmp
xchg
jo
mov
enter
mov
std
jl
jnp
aaa
jo
daa
pusha
loop
stos
lock
bnd
ljmp
gs
subl
dec
popa
jo
jle
ljmp
jmp
shl
xchg
jg
sahf
push
mov
jecxz
lock
adc
rcll
or
insl
ljmp
icebp
cwtl
jo
sbb
jl
xchg
add
enter
sbb
cmp
pop
aad
adc
and
ds
fdecstp
sub
movsb
hlt
mov
sbb
jo
mov
aad
inc
fstl
decl
loop
mov
sbb
inc
xchg
js
fwait
pop
xlat
fldl
mov
shrl
lret
jo
push
fisttpl
fadd
sub
or
jecxz
jne
lock
jp
jo
lea
add
imul
xorb
mov
jg
out
divb
or
cli
outsb
stos
xchg
insb
rcll
data16
outsl
sarl
insl
sbb
xchg
addl
out
jo
xor
pop
sub
into
add
dec
or
jae
jp
dec
addr16
fndisi(8087
lea
rcrl
jnp
stc
mov
lock
sbb
jo
dec
or
rcrl
jo
loop
cmp
loope
es
and
jo
or
push
and
movsl
cld
add
fdiv
push
or
inc
les
stc
mov
xor
adc
int
rclb
add
cmpsb
cmp
fsubrl
cmc
fwait
jo
mov
cltd
sbb
lcall
pop
imul
sbb
movsb
adc
insl
scas
mov
pushf
movb
xchg
xchg
lods
jno
xor
loopne
jmp
jo
js
mov
xchg
and
mov
adc
pop
pop
jo
adc
insb
sti
dec
enter
sbb
xchg
xorb
cmpsl
flds
loope
ja
loop
xchg
pop
mov
sub
jo
or
mov
jo
jecxz
dec
pop
jb
jo
adc
or
jo
mov
insl
arpl
jns
sbb
mov
inc
sub
ret
repnz
ja
and
pop
xchg
push
ficomps
jae
or
daa
bound
push
sub
pop
and
adc
repz
shrl
add
push
je
stos
inc
in
lock
pop
mov
ja
or
cwtl
cmp
inc
pop
ret
addr16
mov
xchg
insb
inc
push
jo
adc
mov
fidivl
xor
jne
pop
cltd
loop
dec
push
fildl
lea
je
lock
add
mov
xor
xchg
imul
pushf
pop
and
adc
mov
ret
insl
cmpsb
sub
mov
jge
sar
ss
subl
inc
sti
ja
cmp
and
fbstp
lcall
jae
sbb
mov
jl
xor
imul
idivl
fwait
sbb
leave
lea
bound
mov
insl
mov
add
mov
lock
add
mov
hlt
repz
dec
ljmp
or
out
lret
and
cmpsb
mov
jae
mov
out
test
lret
adc
lods
pop
dec
movsb
mov
pop
xor
cmp
cld
cmp
adc
dec
mov
fsubl
jo
stc
loop
lds
ds
ja
ss
xchg
mov
shrl
or
sub
gs
sub
jo
and
out
push
push
jns
loopne
insl
lcall
xchg
cmpsl
sbb
js
sbb
mov
sbb
lock
insl
aad
fcomip
push
push
jbe
mov
xchg
insl
fadds
sbbb
pop
mov
sbb
pop
lods
insl
dec
rep
jo
ss
fildl
popa
jo
out
aad
xlat
xchg
adc
fbstp
mov
shll
inc
mov
add
xchg
jo
cmc
dec
adcl
test
cmp
call
scas
das
jo
clc
test
or
lock
into
shlb
jo
adc
je
ds
pop
arpl
mov
inc
xor
mov
aad
sub
imul
jo
shl
call
jbe
xor
jb
push
jae
push
xchg
add
call
bound
dec
inc
shlb
insl
mov
mov
or
sub
jmp
jno
cmpsl
ret
jo
mov
sub
inc
jae
test
cmpsl
adc
fs
out
roll
jae
mov
repnz
adc
push
test
inc
aad
dec
inc
test
pushf
dec
js
std
mov
popa
mov
xor
dec
in
push
pop
xlat
insb
cli
xor
movzwl
jo
js
pop
xchg
fst
jmp
aam
xor
jp
xchg
fcoml
inc
mov
ss
mov
jbe
or
jo
xchg
iret
clc
pop
sub
cmp
scas
stos
sti
sbb
int3
fdiv
rorb
insl
cmp
sbb
and
jne
mov
sub
push
sub
xchg
mov
rol
jle
jo
fcmovnu
mov
addl
mov
jo
lock
jae
adc
cmpb
lret
fsubrl
cmp
xor
pop
mov
and
sbb
popf
jnp
daa
push
mov
lock
jo
das
jp
cmpsb
lea
jnp
mov
in
fstpt
sub
add
sar
rol
jne
pushf
push
xchg
cmp
jae
jo
cltd
in
outsb
fmull
jmp
jnp
call
sbb
xchg
xchg
inc
subb
hlt
ljmp
push
repz
out
mov
aas
jae
push
jmp
cmp
jecxz
movsl
shlb
popf
add
outsb
mov
push
shll
ja
shlb
inc
loopne
in
das
inc
pop
sbb
cmc
cmp
clc
or
pop
jne
or
xor
or
and
jo
movsb
mov
hlt
xor
and
push
jnp
fdivs
movsl
or
mov
jo
mov
add
jecxz
ja
xchg
testl
in
std
jo
xor
iret
pop
push
ljmp
mov
nop
lret
lods
dec
icebp
xor
outsl
push
jo
cmp
add
testl
jo
cmpsb
or
push
jbe
xchg
fdivl
movsl
fstps
mov
jo
cltd
cmc
push
add
cmp
or
adc
inc
jbe
xor
call
nop
cmp
clc
jo
mov
orl
xor
mov
repnz
jne
jo
psrad
inc
push
insb
lret
jo
cmp
sub
pop
mov
loope
dec
xchg
setns
insl
cmp
cmpsb
loopne
inc
movsb
sub
cmp
clc
inc
out
decb
shlb
sbb
insl
je
and
insl
lods
dec
in
jp
add
cmpsl
pop
mov
jo
jbe
xchg
mov
xlat
add
ja
fwait
pop
mov
jmp
lcall
js
divb
xor
shl
fldt
xchg
jae
pop
mov
js
aad
lods
or
insb
cmp
ss
sub
jo
sub
cmp
fdiv
fwait
cmp
or
jae
pushf
sub
jne
jo
xchg
or
popf
xchg
pop
dec
jo
jge
stos
out
js
inc
jo
idivb
loopne
int3
dec
ret
sbb
fiadds
ljmp
and
jecxz
sbb
fldcw
sub
nop
jmp
cmp
or
pop
mov
shrl
mov
lods
int
xor
sub
mov
pop
lock
lea
mov
sub
orb
jo
adc
jne
jo
shrl
mov
jo
xchg
fisubrl
jo
and
in
ffree
mov
bound
xor
xor
pushf
jo
divb
lret
jb
dec
mov
shl
sub
sbb
xor
and
and
outsb
jno
mov
adc
pop
fcoml
mov
popa
or
sbb
sub
movsb
jae
push
arpl
lcall
sbb
or
jo
and
shll
xor
int
lea
pop
cmp
scas
je
ret
shlb
jg
pop
sbb
inc
jo
mov
jo
aas
fsubrl
and
sti
jae
stos
movsb
fnsave
jo
pop
data16
bound
add
jno
inc
mov
jle
insl
addr16
daa
pop
ds
sub
dec
insl
movsb
std
int3
cmp
cmc
xchg
mov
fmuls
daa
lahf
and
fidivl
pop
push
subb
mov
cmp
mov
jle
insl
jl
lods
daa
roll
and
fsubr
pop
inc
push
mov
gs
inc
rolb
add
je
es
xchg
jle
outsb
outsl
shll
mov
mov
sub
inc
jne
push
mov
and
popf
outsb
or
sbb
sbb
jns
mov
mov
test
outsb
fidivs
cmp
and
sub
ficompl
and
add
js
leave
mov
mov
adc
mov
ficomps
or
push
jne
insl
lock
inc
rcrb
add
jecxz
icebp
loop
or
inc
jl
jo
into
ret
test
sbb
inc
xor
jb
xchg
stos
aad
sub
cwtl
inc
push
outsb
std
or
add
jnp
push
xor
out
lahf
cmpsl
mov
fmuls
mov
dec
dec
shll
inc
insb
inc
mov
cmp
aad
and
ja
es
loopne
mov
ja
stos
sub
mov
sahf
leave
testl
stos
jae
jmp
aam
and
mov
pop
jo
pop
mov
dec
das
mov
sbb
pop
addl
mov
dec
test
push
and
sub
jo
lods
add
ljmp
mov
push
mov
add
mov
cltd
fidivs
ja
jg
scas
sub
push
into
lret
jae
cmc
imul
xor
je
fsub
test
mov
push
push
mov
pusha
sahf
sub
int
xor
retw
out
jbe
and
or
mov
scas
dec
push
das
lock
mov
add
mov
dec
jle
xchg
dec
pop
out
push
jo
or
cltd
inc
add
add
daa
mov
rcr
cli
lcall
in
jns
xlat
in
outsl
mov
imul
pop
cmp
mov
add
in
cmp
mov
sub
xor
xor
and
jo
xor
hlt
in
or
jb
fmul
je
and
or
jo
fldcw
mov
sbb
ficoms
out
cmp
inc
jo
shll
and
dec
or
lock
inc
jo
jns
mov
fldcw
inc
jo
jbe
pop
orb
jo
fcomps
cmp
xchg
mov
push
rcr
cs
jae
or
mov
mov
sbb
and
push
jo
mov
mov
dec
enter
mov
dec
insb
lcall
push
pop
pop
jo
in
sbb
add
jmp
clc
je
mov
aaa
jo
std
adc
movsb
das
sub
pop
shrb
scas
sbb
cmpsl
out
shl
ret
leave
test
push
and
loope
shrb
punpckldq
inc
test
das
xor
push
lcall
or
jmp
push
mov
lods
fisttpll
xor
fcmovu
jp
test
mov
mov
jo
cmp
and
mov
popf
jnp
jns
int
mov
scas
movsl
test
mov
lret
xlat
jmp
xor
jo
push
stos
fwait
movsb
ja
xorl
jg
mov
jo
adc
inc
jl
scas
shld
sbb
into
or
lods
jo
cltd
mov
mov
int
aaa
xchg
jle
mov
add
data16
jo
fsubrl
add
xchg
mov
xchg
insb
xor
pop
jo
addr16
adc
jo
push
pop
test
shlb
pop
jo
aad
popl
adc
jo
or
stos
inc
pop
mov
js
cli
cmpsl
aad
insl
mov
jb
xchg
adc
ljmp
adc
sub
jo
cmp
dec
xor
push
jo
push
mul
add
lods
insl
mov
sbb
jo
jae
mov
jo
aad
ret
mov
data16
jecxz
cltd
sub
xor
fldenv
push
lret
adc
stos
jo
aas
dec
shll
xor
test
jo
or
cmpsb
add
imul
dec
hlt
mov
aad
xor
mov
jle
jo
shlb
pop
insl
mov
xchg
mov
mov
sub
push
and
jge
mov
or
mov
jge
popa
fs
cli
mov
ret
push
faddp
mov
jecxz
mov
enter
call
insb
jge
push
je
add
scas
jo
pop
mov
mov
or
fsubrp
mov
ja
cmp
lock
aas
insl
push
cmp
lock
adc
lods
je
sub
ss
cld
fstl
push
mov
jo
aad
nop
lret
sub
or
xchg
rcr
xor
mov
mov
fwait
mov
jae
aad
loop
out
mov
jbe
inc
lods
sahf
push
fidivl
mov
in
std
jnp
mov
adc
outsb
jo
imul
fcmovne
and
sub
mov
aaa
ds
cmpsb
hlt
dec
mov
fmuls
xor
sub
dec
dec
lock
in
aad
push
or
aas
xchg
xchg
mov
mov
and
outsl
insl
pop
jecxz
popf
push
pop
std
adc
mov
inc
clc
jns
push
ljmp
inc
sub
inc
mov
lock
mov
adc
pop
pushf
es
leave
jo
dec
dec
int3
add
inc
ja
push
das
sbb
sub
jmp
mov
cs
xchg
ret
xchg
adc
in
pop
or
test
xchg
pop
mov
jo
aad
jecxz
cs
pop
adc
sbb
adc
fisubrl
mov
inc
test
xchg
pop
int
jo
pop
fsubl
in
jnp
push
ficompl
sbb
adc
pop
in
push
inc
sbb
rcl
jbe
jo
aad
outsb
daa
push
lea
les
fcoml
jne
inc
test
popa
mov
fs
or
cli
bound
divb
aas
mov
dec
mov
mov
ss
hlt
enter
xlat
call
mov
out
sub
mov
andb
xor
jo
xor
jmp
push
repnz
xchg
fistps
cmpsb
rcll
aas
sahf
jo
mov
adc
popf
stos
jne
jae
jecxz
addr16
lret
pop
dec
cmp
push
icebp
fwait
sahf
lock
jp
js
and
adc
pop
or
jo
jmp
jne
data16
fldenv
insl
jo
int
lods
cwtl
cld
outsb
and
pop
jl
clc
jge
dec
jo
xchg
mov
mov
aad
test
and
outsb
int
insl
xor
in
nop
ds
mov
add
jnp
pushf
hlt
or
dec
xchg
popa
repz
repz
adc
dec
or
adc
rorb
decb
iret
mov
or
xchg
aad
mov
repz
pop
dec
fnstenv
add
inc
bound
sbb
mov
lret
and
fsts
lods
push
lock
push
cmp
mov
fadd
dec
sbb
pop
fcomps
jo
add
movsl
pop
ljmp
jo
mov
cli
inc
jo
mov
arpl
dec
push
aad
cmc
push
ja
pop
mov
sbbb
mov
ret
mov
repz
in
push
push
add
jb
shll
lock
mov
mov
jo
roll
fld
xor
pushf
into
add
jo
add
and
or
mov
cmp
insl
mov
lock
in
sbb
jo
push
into
test
mov
or
cmp
adc
sahf
mov
dec
inc
fwait
pop
scas
hlt
rol
jo
clc
jmp
sbb
cmc
mov
fwait
xchg
lock
add
mov
pop
push
mov
leave
lret
pop
ret
adc
xchg
push
add
jno
push
dec
shl
scas
mov
repz
or
int3
pop
adc
jmp
xchg
divl
fwait
cli
cmc
mov
sub
aad
fstl
rcrb
int
jl
mov
and
jmp
iretw
add
mov
ret
mov
fiadds
lock
les
lahf
mov
mov
cmpsb
mov
dec
jo
pushf
jp
ret
pop
jo
movsb
pop
sbb
das
aad
jp
xor
outsb
jo
mov
pop
mov
cmp
dec
std
test
or
jg
ja
xchg
xor
and
enter
aad
cmp
pop
jnp
xchg
iret
inc
jae
movsb
push
cmc
loopne
xchg
flds
and
sub
xor
pop
and
into
aad
test
mov
xchg
hlt
add
push
jo
call
push
mov
and
fstpl
test
pop
jo
jge
je
outsl
mov
push
rcrl
pop
jo
add
int3
jo
dec
and
pushf
jo
nop
adc
xchg
in
push
jo
icebp
mov
rcr
mov
pop
mov
jo
xor
push
adc
aad
shlb
jb
lods
jo
std
push
jnp
pop
and
loop
test
jne,pn
jle
sbb
rcrb
in
jmp
lds
stos
jecxz
mov
push
add
mov
in
loop
push
ljmp
mov
repnz
cmp
jo
je
fistpl
inc
push
jo
arpl
and
pop
stos
push
aad
mov
leave
sbb
pop
or
inc
sbbb
mov
push
jae
or
outsb
push
imul
pop
adc
dec
orb
dec
in
andl
je
jnp
sbbb
mov
adc
repz
pushf
fildl
inc
mov
testl
push
pop
aas
cmpsl
lock
movsb
loop
pop
dec
jo
push
xchg
arpl
jp
xchg
mov
mov
bound
dec
pop
rcr
js
enter
adc
cmc
xchg
shr
cmpsb
and
jo
leave
test
jo
jge
xchg
mov
jb
push
enter
jo
inc
jo
leave
aad
jp
int3
jo
fsubrl
lock
repz
jo
cs
std
dec
push
push
or
xlat
and
out
lahf
add
mov
jo
aam
sbb
or
stos
jo
xchg
movsl
jno
jmp
push
call
loop
cli
xchg
inc
in
mov
les
mov
dec
xchg
jno
sub
lods
cmpsl
movsl
hlt
lods
ja
scas
dec
arpl
repz
mov
dec
lahf
call
cmp
mov
or
cmp
out
jbe
jmp
pop
gs
stos
call
aam
fwait
jge
pushf
insb
adc
sahf
dec
pop
pop
fisubrl
add
xor
popa
dec
int3
dec
cmp
mov
and
fs
push
xchg
push
mov
pushf
cmp
repnz
add
subl
xor
fstpl
data16
aas
in
push
aam
push
ret
and
mov
shll
cmpsb
jo
mov
popf
gs
and
inc
mov
outsl
int
ja
je
xchg
mov
or
mov
lahf
pop
orb
pop
mov
mov
jo
mov
inc
jg
les
fcmovbe
and
push
push
enter
rclb
cmp
dec
negl
decl
into
jo
popf
aad
push
pop
xor
mul
or
loope
fdivs
dec
inc
cmp
mov
ret
insl
mov
stos
int
or
jo
stos
sahf
fdivs
test
enter
push
push
mov
divl
loop
xlat
adc
icebp
jo
sti
or
sbb
cltd
pop
pop
out
in
jo
in
rep
push
pop
stos
jmp
jo
call
jge
cli
mov
ja
add
filds
leave
or
out
mov
outsb
and
push
lahf
clc
mov
inc
shrb
mov
ja,pt
pop
stc
cmp
add
jno
in
adc
push
xor
pop
jnp
pop
cmpsl
out
lock
push
inc
push
xchg
imul
insl
jge
or
adc
insl
pop
adc
int
decl
adc
bound
cli
ljmp
sbb
gs
or
imul
xchg
je
fcompl
pop
mov
loopne
adc
pop
stos
arpl
ss
jge
add
pop
push
scas
push
push
ljmp
pop
nop
jns
xchg
popf
ja
jno
subb
fdivs
fnstenv
cmp
clc
inc
pshufw
xchg
aad
xorl
jo
call
xor
mov
pop
sbb
jl
push
jo
xor
and
nop
inc
fstpl
jo
mov
sub
mov
pop
add
fxch
and
jo
xchg
adc
cmpsb
sahf
jo
push
fildll
xor
cld
je
bound
xlat
int
cmc
jns
mov
jnp
fisubs
fnstenv
mov
xchg
pop
jo
fcompl
aad
push
jo
fists
insl
jbe
and
pop
shlb
mov
inc
pop
jo
aas
rorl
sbb
into
xlat
pusha
testl
xchg
mov
lea
or
das
jo
add
or
add
aam
test
pop
loope
rcrb
test
xchg
mov
push
test
cmpb
fisttpl
dec
aad
insl
loopne
out
push
fldl
icebp
arpl
pop
push
jo
jmp
scas
xchg
jo
andl
xchg
jno
dec
mov
and
add
xor
pusha
jo
push
jbe
das
dec
xchg
jo
arpl
stos
repnz
shrl
push
jp
pushf
iret
flds
or
ljmp
mov
mov
ljmp
push
fdivl
cmp
cmp
jmp
mov
push
dec
jo
jae
js
mov
enter
adc
add
dec
or
dec
or
pop
sbb
add
dec
pushf
pop
jae
sti
jle
dec
cltd
popa
ja
fdivrs
loopne
fucom
cmp
in
scas
mov
xchg
mov
lods
popa
loop
sub
mov
push
iret
adc
jo
out
cli
fdivrl
jae
jo
push
pop
adc
or
jl
adc
add
insl
into
mull
xchg
orb
cmc
push
mov
or
lret
mov
and
mov
add
cwtl
call
ja
xor
pop
inc
lock
ja
cmp
lret
mov
ss
jne
jo
int3
sahf
pop
mov
sbb
pop
out
and
or
fisubrs
in
jo
cltd
jno
sarl
aad
mov
jmp
push
xor
jp
out
jl
loopne
and
arpl
stc
jo
lds
adc
mov
ret
fs
jo
sahf
nop
aad
push
mov
aaa
mov
sbb
jo
xor
jo
sahf
fneni(8087
rclb
push
fs
shrb
cmp
sub
sbb
inc
fptan
aaa
pop
jp
jl
test
rolb
jo
mov
arpl
icebp
jo
cld
flds
psubsw
gs
adcb
or
sbb
jo
cwtl
inc
cmp
jo
roll
xchg
notb
jo
es
adc
inc
mov
push
mov
arpl
out
mov
lds
sbb
add
xchg
jle
jge
insl
adc
ds
fidivl
xor
jnp
repz
jecxz
cmp
pop
mov
aam
xchg
mov
mov
and
inc
pop
dec
xchg
aad
cmp
popf
or
shrb
xchg
push
cmp
pusha
movb
ret
xchg
add
jo
les
jge
call
ficomps
subb
xor
shrl
mov
in
nop
fcmovnb
jo
jmp
mov
lds
push
mov
lods
xchg
jne
movsl
push
in
sub
push
out
xlat
xor
pop
pop
shrb
adc
jo
adc
inc
std
or
aaa
sub
sbb
jo
mov
dec
loopne
pop
xchg
jo
movsb
fabs
dec
and
cmc
jg
popa
fcomps
and
jo
jns
jge
mov
cmp
jmp
xchg
push
dec
add
jo
adc
lret
jecxz
mov
jp
sbb
fists
insl
stos
aad
jo
pop
mov
sub
inc
mov
rol
fldenv
jae
fcmovnu
pop
mov
mov
pop
jo
lahf
aad
pusha
cli
add
mov
testl
in
popa
jae
data16
dec
sahf
loop
lock
cmp
cmpsb
test
std
cs
in
insl
xor
int3
and
stos
jae
push
je
call
lock
mov
stos
xchg
loopne
push
push
jo
jns
je
lods
gs
loopne
jo
or
sbb
mov
jo
rorl
cmp
mov
daa
mov
mov
cmp
inc
ss
mulb
sub
rcr
xchg
imul
mov
and
jo
bnd
insl
cmpsb
sbb
inc
xchg
outsb
adc
dec
js
push
lds
ja
adc
lcall
xchg
xchg
jae
cli
fbld
mov
lahf
xchg
push
adc
in
jnp
or
mov
and
or
sub
and
mov
mov
sub
xchg
sub
mov
sbb
jo
push
pop
imul
cmc
jo
aad
xchg
jl
push
data16
loope
ja
jnp
clc
jo
mov
mov
jo
in
in
push
pop
cwtl
insl
stos
sahf
xor
xchg
mov
icebp
shrl
push
loope
ja
and
aaa
xchg
or
jo
roll
sbb
jo
inc
add
jo
xor
scas
mov
jno
pop
adc
nop
stc
enter
inc
out
xor
scas
jo
data16
push
lret
mov
pushf
xor
jbe
rclb
mov
or
mov
xchg
jle
pop
test
mov
cmp
lret
or
inc
cli
lea
mov
fwait
sub
das
mov
loop
call
ds
xchg
ret
pop
jae
sahf
push
pop
adc
enter
pop
sbb
fstl
push
lods
mov
sub
adc
mov
in
inc
push
out
outsb
test
inc
xor
nop
push
mov
outsl
jne
push
add
inc
xchg
ret
push
enter
jae
adc
inc
or
xlat
roll
mov
repz
pop
icebp
lea
cwtl
ja
fisttpl
inc
xchg
jo
hlt
repz
xchg
aad
jae
push
push
dec
in
nop
frndint
jg
loop
dec
and
pop
jo
mov
cmp
fucomp
das
adc
jle
xchg
movsb
jo
jno
mov
jo
cltd
dec
xchg
jns
xchg
mov
stos
outsl
add
loope
dec
dec
jo
cli
lock
leave
xor
fcmovbe
add
test
push
or
nop
push
pop
outsb
jo
push
in
cmp
out
outsb
insb
sbbl
gs
jo
xchg
inc
stc
call
ss
xlat
loopne
insb
mov
push
sahf
aaa
add
pusha
cmp
push
stos
or
mov
leave
enter
jnp
fdiv
pop
add
ret
pushf
cltd
cmpsb
mov
cli
dec
add
jo
and
mov
inc
scas
lds
jo
shlb
pop
adc
rclb
leave
jns
mov
mov
out
jmp
push
jo
push
mov
outsb
mov
jo
and
insl
sub
inc
pop
clc
or
xchg
int
jnp
in
out
daa
testl
lds
sahf
icebp
push
mov
fldt
jo
repnz
jl
aas
outsl
cmp
mov
mov
add
imul
sub
xchg
jmp
ja
xchg
popf
dec
jns
cs
mov
cmp
shll
sbb
jno
push
ret
mov
xchg
jo
mov
dec
push
or
jne
pop
test
aad
jo
in
cmp
pusha
mov
mov
add
imul
js
xlat
push
jmp
cld
stos
or
xor
add
jo
arpl
bound
dec
insl
mov
sbb
push
lds
jo
sahf
mov
or
inc
lock
out
dec
xchg
inc
jle
add
shll
mov
sub
push
mov
xor
fmulp
jge
fcompl
push
jl
outsb
pop
add
in
call
lds
jo
pop
pop
xchg
xor
lea
cmp
cmp
jo
jecxz
jmp
jo
sbb
pop
push
call
sub
out
or
add
movsl
inc
push
addr16
test
xor
out
jo
xor
push
and
jno
xlat
fdivl
and
sub
seto
adc
and
push
ret
jo
add
test
xor
jbe
xchg
pop
xchg
cmp
mov
enter
add
movsl
insb
and
fdivr
adc
out
out
jo
sbb
xchg
loopne
jo
and
ss
fistpl
jo
int3
sub
push
jo
pop
mov
sarl
mov
aam
insb
subb
pop
lcall
xchg
loope
test
insl
outsb
inc
jno
xorl
mov
in
fbld
and
popa
adc
test
in
imul
sub
adc
pop
cmp
sarl
adc
rcrb
decl
or
jae
mov
mov
cmp
out
iret
adc
jmp
nop
jp
pop
into
adc
xchg
pop
push
or
cmc
orps
add
mov
inc
sbb
adc
mov
fldcw
xchg
jo
sbb
jl
pop
pop
sub
xchg
dec
in
out
push
andb
add
mov
jo
pop
mov
sbb
mov
adc
out
lock
lret
test
jne
shl
mov
jo
cli
loop
insl
cmp
inc
cmc
push
shll
aad
shll
push
std
shlb
push
and
push
jo
and
faddl
inc
lahf
pop
mov
mov
lock
jae
in
fldenv
cmp
jae
in
stos
inc
push
jmp
push
pop
adc
adcl
mov
adc
mov
inc
sub
push
dec
pop
pop
xor
fstps
jo
in
inc
push
lahf
add
stos
rcr
outsb
int
dec
jl
in
mov
add
in
mov
jnp
repz
pop
leave
addb
cs
in
arpl
mov
jo
jle
jmp
out
jo
or
add
aad
cwtl
jno
mov
add
pop
stos
jbe
repz
sub
inc
adc
xchg
dec
jo
fdivrl
test
les
insl
fldt
scas
repnz
xor
sbb
xchg
int3
inc
in
jo
outsb
fsubl
subl
lea
cwtl
bound
sbb
fsubrl
stos
test
ss
push
and
jne
adc
pop
loop
mov
nop
iret
es
cmp
stc
mov
jp
push
test
xlat
insl
adc
lea
cmc
cmp
pop
push
jo
and
hlt
aad
sub
lds
movsl
loopne
xchg
imul
cwtl
shlb
push
xor
jo
jmp
arpl
jo
sbb
pop
jae
jae
test
nop
mov
pop
xor
sbb
bound
jo
mov
mov
mov
push
insl
gs
xchg
das
imul
aad
jo
push
cwtl
mov
jo
lea
je
mov
mov
or
cmp
mov
icebp
aad
clc
jno
or
stos
mov
sbb
adc
jle
dec
jns
adc
out
fsubl
icebp
outsb
jg
popa
das
rolb
test
cmp
xor
xor
les
arpl
xorb
and
rclb
ds
and
cmp
bnd
mov
or
xor
sahf
jb
fisubrl
loope
jo
pop
out
outsl
inc
aad
mov
shll
lcall
orb
or
jo
pop
pop
rcrl
ja
cs
dec
lret
jo
fisttpl
aad
ds
jmp
and
es
addr16
inc
lcall
outsb
xchg
dec
dec
arpl
lods
adc
movsb
lcall
cli
fistpll
push
add
js
xor
das
std
fsts
adc
addl
test
jo
mov
leave
call
or
int
cmp
add
pop
add
and
es
bound
push
ja
out
rcrb
mov
test
mov
mov
cmc
add
pop
in
mov
roll
xchg
iret
mov
call
dec
jp
fdivrp
dec
jo
lret
or
add
aad
jo
bound
div
or
shlb
jo
jle
cmp
das
pusha
out
sub
roll
insb
aad
xor
cmp
mov
clc
pop
je
test
dec
jo
lret
push
jns
mov
int3
in
jae
loopne
adc
mov
addl
jle
popf
int
lods
xchg
push
imul
mov
sub
sar
sarl
test
adc
sbb
pop
jae
mov
jo
jns
lods
mov
jb
push
xchg
negb
jle
cmp
dec
jo
aad
or
aam
fisttpll
lock
sbb
inc
jo
xchg
mov
xor
fs
pop
aad
or
jl
aam
lods
nop
mov
mov
jle
popa
xchg
push
jo
xchg
loop
dec
inc
bound
inc
jo
adc
pop
jl
push
lahf
and
mov
iret
shll
outsb
out
dec
arpl
mov
push
adc
mov
in
cwtl
aad
inc
inc
jo
sub
xor
mov
mov
mov
test
popa
sub
out
jo
out
das
jge
imul
movsl
dec
xor
inc
repz
mov
fcompl
leave
stos
cmp
mov
mov
cld
stos
aaa
jge
jb
mov
fwait
scas
call
imul
sti
outsb
leave
add
and
cs
rorb
mov
inc
mov
jae
xorb
pop
pop
fists
fwait
jo
loope
es
xchg
adc
and
frstor
outsb
addr16
pusha
sti
add
dec
adc
test
push
or
pop
pop
pop
cmp
mov
sub
fdivr
push
jo
lods
enter
jo
push
shr
jge
pop
jo
insl
xchg
or
cmp
mov
jl
cmc
les
jo
jbe
dec
push
aaa
add
xchg
ss
lds
or
or
jo
cmp
mov
popa
sbb
dec
shlb
lods
push
stc
xlat
add
test
insl
enter
mov
clc
xchg
stos
cmp
frstor
mov
cltd
dec
xor
test
inc
sti
lahf
jne
inc
push
ja
fiaddl
xchg
repz
jmp
leave
mov
xchg
jo
call
scas
std
pop
outsb
jo
xchg
ja
jle
mov
gs
js
jo
rcl
cli
and
xchg
sub
push
insl
leave
push
scas
mov
outsl
cmp
mov
call
jne
pop
adc
mov
mov
not
or
and
jno
push
dec
jo
aas
sbb
mov
out
lahf
pop
ljmp
mov
pushf
sahf
xor
dec
ret
xchg
cwtl
add
jo
scas
popf
fdivr
and
jo
inc
jmp
cmpsb
lods
int
jo
ffreep
sub
adcl
mov
mov
cmp
in
mov
jo
cli
ljmp
pop
sub
mov
or
sbb
jnp
je
lahf
add
jo
movsl
hlt
scas
mov
ja
xor
loopne
ja
lcall
cltd
jno
es
inc
xor
iret
int3
loopne
jb
leave
mov
shrb
js
or
adc
imul
mov
popf
xor
vshufpd
nop
insb
lahf
mov
rcr
cmp
mov
pusha
pop
in
test
mov
mov
movsl
mov
sub
into
loope
inc
mov
clc
inc
rorl
lock
int3
inc
push
jo
and
jo
sub
or
jbe
mov
imul
mov
cli
or
jo
jg
jl
pop
call
add
outsl
jo
shr
inc
fidivl
pop
cmp
sbb
fwait
push
push
daa
out
sbb
mov
pop
or
dec
outsl
mov
divb
inc
into
inc
in
sub
jo
jg
add
xchg
jl
insb
je
loop
jo
mov
jbe
in
cmp
in
sbb
mov
xorb
fwait
or
insl
inc
adc
mov
in
arpl
pop
or
push
mov
mov
jo
push
xchg
mov
notl
out
clc
add
mov
loopne
aad
cmp
and
xor
jo
dec
int3
repz
pop
jne
icebp
pushf
xchg
in
xchg
in
mov
push
cmpsb
pcmpeqw
out
test
adc
jo
push
lods
dec
adc
jo
xlat
data16
sub
jb
ss
jmp
aad
xchg
loopne
mov
outsb
shll
es
jae
xchg
pop
fidivl
lods
jae
adcb
aam
into
das
mov
ds
sahf
mov
lock
mov
insl
mov
jno
cwtl
test
jo
fistpl
jp
jmp
cli
jo
push
pop
loope
nop/reserved
sbb
jge
jo
fisubrs
mov
testb
std
into
int3
mov
hlt
ret
sub
jecxz
pusha
dec
xlat
mov
pop
and
jp
mov
jo
mov
fs
jo
test
or
push
pop
and
ja
in
jge
add
jo
lea
jne
fstpt
imul
inc
jo
fdivrl
imul
jo
cwtl
mov
orl
cmc
scas
mov
xacquire
cmp
jne
mov
jno
push
xchg
outsl
sbb
pop
or
ja
xor
pop
loopnew
sbb
lret
out
outsl
call
cmp
jo
in
sbb
out
jne
movl
iret
add
pop
jo
and
sub
outsl
notb
shll
pop
inc
stos
aad
mov
sahf
mov
std
xchg
jp
int3
jl
nop
adc
push
or
xor
shlb
sahf
inc
mov
popa
adc
ret
fcompl
ss
fs
and
dec
dec
lods
lock
push
push
aaa
outsl
adc
imull
fwait
mov
xor
cmp
inc
mov
out
jo
js
push
or
jo
aad
mov
dec
push
leave
lock
pop
mov
daa
jns
jo
fsts
mov
xor
popa
nop
fidivs
pop
push
andl
pop
sbb
ja
push
add
mov
out
xchg
inc
pop
adc
out
jge
pop
stos
lds
and
fisttpl
mov
dec
jl
lods
mov
sub
jo
and
xor
mov
roll
daa
jo
aas
cwtl
mov
jo
pop
push
jl
push
ficomps
shll
jo
in
jle
xor
in
pop
pop
mov
push
sbb
shlb
push
mov
xor
mul
mov
sbb
jo
dec
enter
addr16
int
or
xchg
and
or
jo
mov
jp
jo
lahf
jnp
aad
push
lods
je
lds
mov
shlb
shl
fdivp
inc
fldt
xchg
fidivl
int
lock
cmp
addr16
push
jl
lds
ss
sub
fdivrl
sahf
insb
mov
jne
mov
lock
jae
xor
popa
dec
out
leave
adc
jo
retw
lock
jp
mov
pop
and
jo
insb
andb
mov
bound
sti
faddp
iret
mov
xor
imul
jo
dec
fsubrl
outsl
mov
jo
aad
dec
add
mul
jnp
cmc
add
sub
push
lret
vminsd
cmpsb
cmp
inc
pop
sbb
jo
inc
lahf
pushf
mov
out
or
cmp
jo
arpl
inc
mov
gs
movsl
lods
movsb
push
inc
andb
adc
sub
push
rcrl
repnz
aad
cmpsl
xchg
jmp
pop
push
pusha
ljmp
mov
jo
jae
dec
inc
ja
inc
lret
push
sub
inc
jge
jno
cmp
inc
cmpsb
push
xchg
repz
jo
iret
pop
inc
xor
jne
imul
push
sub
dec
sbb
aad
or
add
cld
jle
jo
xchg
sbb
imul
xor
fucomi
ljmp
aad
sbb
rcll
test
cmp
dec
scas
mulps
gs
pop
ficomps
or
aad
sub
popf
ja
jb
lock
mov
inc
ret
mov
adc
imul
nop
push
push
add
mov
and
dec
lds
ret
popf
mov
aad
loop
sbb
insb
hlt
adc
rcl
and
push
cmp
les
test
lcall
call
sbb
pushl
jne
mov
lock
shr
js
jl
stos
inc
int
sahf
pop
jo
jmp
cmpsl
je
mov
jno
or
mov
adc
push
loop
ja,pn
lds
fmull
das
sub
outsl
push
or
jns
sbb
out
xor
outsb
testb
pandn
xor
in
stos
pop
xor
cmpsb
sub
jbe
imul
lods
add
jo
push
push
pop
sbb
jo
jecxz
shrl
jo
sub
lods
cli
aad
insl
mov
outsb
sub
sbb
lods
jae
subl
movsb
in
xchg
push
jns
testl
cld
mov
pop
jo
cmp
out
jo
cmp
repz
jge
sub
adc
adc
out
hlt
aam
adc
pop
push
or
xchg
jo
ja
les
jo
pop
jge
dec
cld
add
into
cli
dec
rolb
stos
fs
test
add
insl
cmc
std
sbb
xor
xchg
dec
stos
nop
in
add
push
jo
mov
lods
cmp
add
lock
push
loop
pop
push
out
loopne
jo
int3
and
test
mov
inc
lods
cmpsl
mov
jo
or
int
shlb
cmp
jo
xchg
mov
mov
shlb
jecxz
cltd
mov
sbb
pop
jo
fcoml
mov
jo
lahf
adc
jo
jnp
xor
outsb
inc
nop
pushf
adc
sti
add
nop
aas
icebp
jno
fwait
mov
fildll
gs
fsubrl
aad
xchg
cli
icebp
sbb
inc
dec
pushf
aam
das
sarb
jo
sbb
mov
jo
in
or
shlb
jge
shrl
movsb
pop
adc
insl
mov
adc
iret
jns
mov
idivb
popa
out
subb
in
jo
adc
xchg
not
ljmp
mov
mov
daa
jo
loop
imul
mov
pop
jo
popa
mov
inc
jo
jnp
sahf
mov
fnstcw
jo
push
push
jo
add
aad
ja
cld
leave
mov
jle
imulb
mov
jo
sbb
sti
push
jo
jno
lods
cmpsl
sub
pusha
add
stos
fwait
jo
lods
cmc
in
aas
aad
ljmp
lods
mov
jnp
jne
scas
cmp
xchg
lahf
xchg
mov
push
lea
aas
int3
jmp
ss
sbb
push
xchg
cmp
rcrb
or
pushf
jle
dec
lods
clc
rol
pop
divl
sub
jge
and
or
aas
xor
ss
mov
mov
mov
pop
jo
or
aas
jo
aad
dec
in
xor
mov
cmp
lock
and
push
push
jp
add
mov
add
out
pop
je
jnp
mov
pushf
outsl
xorb
and
fcmovnu
sub
jo
adc
jae
inc
push
loopne
jo
xchg
loope
cwtl
dec
cmp
sbb
pop
jo
mov
push
push
enter
add
xor
test
adc
xchg
jns
lret
mov
loop
push
mov
cmp
fnstcw
jo
sarl
icebp
mov
std
jo
and
inc
pop
mov
push
aaa
push
lcall
inc
mov
outsb
out
out
dec
mov
pop
scas
ja
mov
and
mov
jo
popa
jmp
lret
sbb
jo
push
mov
jmp
mov
leave
sbb
lcall
push
addr16
xor
leave
cmp
icebp
sbb
push
dec
cmp
jmp
mov
lds
sbb
mov
mov
inc
lea
jo
fisubrl
mov
aad
pop
mov
adc
insb
jo
adc
insl
hlt
dec
push
xor
dec
fs
cmp
jo
aas
sbb
mov
adc
xchg
jo
ja
add
rcrb
imul
test
push
cli
inc
pop
insl
fdivrl
xchg
inc
dec
push
add
icebp
adc
insb
cwtl
adc
ss
inc
add
ja
lock
icebp
jo
aad
and
dec
aam
lock
jg
xchg
mov
addr16
mov
in
inc
xor
std
loope
jg
je
jns
fldcw
mov
inc
in
in
test
inc
lcall
insl
push
xchg
mov
imul
and
push
or
sbb
jne
xchg
test
jo
jecxz
push
ja
jae
bound
enter
dec
mov
adc
loop
xchg
push
add
pop
or
fbstp
in
std
popf
shll
sbb
xor
xchg
xlat
jo
add
jp
jb
mov
test
rcrb
or
cmp
sbb
inc
or
add
cmp
enter
divb
jp
cli
mov
sbb
jb
divb
syscall
xchg
mov
and
insl
push
fs
or
fcoms
mov
hlt
jo
repnz
jp
lock
jo
js
sbb
jo
pop
push
xlat
mov
movsl
fldt
out
scas
in
jo
jle
icebp
jne
scas
jo
mov
rcr
jo
aad
call
dec
fwait
adc
icebp
out
popa
nop
cmc
ret
xchg
daa
cmp
and
test
enter
jne
inc
sbb
fmuls
inc
ficompl
jmp
pop
jo
add
sub
jo
rcr
sbb
mov
inc
jne
sbb
pushf
jo
out
mov
lea
mov
jo
fsubl
pop
sbb
jo
add
jle
mov
cmp
bound
repnz
aaa
enter
jle
inc
insl
or
addl
jo
mov
sar
loope
test
test
jae
scas
pop
je
repz
push
neg
loopne
movsb
cmp
inc
xchg
xor
mov
pop
mov
shlb
push
lahf
dec
test
dec
xor
jo
cmpsb
fnsave
imul
jo
mov
push
in
jo
mov
subl
iret
jnp
sub
adc
jmp
jo
xchg
int3
sub
mov
stos
inc
sbb
lock
pusha
or
jle
jp
fwait
cmpb
mov
pop
sub
imul
jo
jno
adc
mov
add
pop
mov
call
xchg
inc
lock
lods
insb
jo
push
mov
popl
jae
fwait
out
outsl
adc
pushf
jo
lock
mov
insb
pop
lea
fistl
cmp
pusha
cltd
lods
mov
sbb
mov
scas
fnstenv
xor
push
push
jb
movsb
jp
fildl
xor
jo
push
pop
adc
daa
mov
add
mov
mov
sti
cmp
in
fdivl
or
outsb
mov
push
push
mov
repnz
add
jae
pop
push
inc
nop
pop
lock
mov
mov
jo
add
loope
flds
out
insl
mov
xchg
add
jo
lcall
shlb
std
inc
dec
add
mov
outsb
out
push
xlat
sub
es
pop
mov
jo
jmp
cwtl
fldt
mov
loopne
lcall
lock
scas
sub
cmp
repz
lock
mov
sbb
xor
cltd
jp
mov
dec
jg
lock
fists
ret
add
push
int3
mov
or
sti
mov
cs
and
jo
dec
outsb
pushf
push
cwtl
divb
jo
mov
lcall
int3
fidivrs
scas
xor
or
fwait
cmp
push
sarl
xor
xchg
add
xchg
and
jo
xchg
jecxz
xchg
dec
sbb
mov
mov
lea
jo
push
sbb
aad
shll
sbb
mov
jge
pop
pushf
outsb
loopne
adc
pop
jne
or
push
pusha
add
daa
and
jo
pop
cs
pop
roll
loopne
movsl
add
jo
and
sbb
mov
je
aad
inc
mov
sti
stos
push
jno
idivl
push
mov
cmpsb
push
scas
sub
movsbl
cmp
add
push
push
andl
mov
add
push
xchg
jo
push
mov
scas
cmpsl
leave
xor
pop
or
fmull
mov
shl
dec
pop
jo
loopne
incb
xchg
and
shll
push
ja
xchg
sbb
out
lock
jo
aad
mov
push
cs
ret
jl
and
inc
add
je
sbbb
daa
push
call
mov
lea
inc
mov
pop
dec
jo
aad
gs
in
loopne
xlat
lcall
xchg
xchg
lahf
and
aad
mov
jo
mov
fldt
in
sbb
cmp
mov
inc
jo
es
xchg
push
movsb
push
insl
mov
sbbl
in
jae
ja
inc
jns
loopne
scas
and
pop
push
xchg
mov
out
pop
add
add
loop
jo
mov
jp
push
mov
imul
out
cmp
int3
shll
pop
repnz
mov
push
in
sub
lock
mov
dec
pop
mov
lds
in
mov
or
lret
mov
sbb
sbbb
test
sub
jmp
push
mov
es
adc
push
movsl
cmc
std
jo
mov
dec
push
hlt
jo
neg
jne
imul
xor
or
daa
lret
push
mov
pop
imul
jo
loop
hlt
xchg
xchg
arpl
dec
es
cmp
add
aas
pop
mov
jnp
xchg
cs
xchg
pop
mov
inc
jecxz
sub
insl
cmp
sbb
ror
xchg
sbb
cwtl
leave
adc
push
push
add
xorl
xor
inc
arpl
lea
xor
mov
xorb
xchg
lock
aad
pop
out
pop
cmp
xor
rcl
jo
push
in
ja
lea
pop
insw
cmp
push
movsb
aad
sbb
movsl
jbe
mov
xchg
jo
jb
jo
fdivs
into
bound
lods
jo
xor
insl
out
mov
orl
jo
pop
test
scas
loopne
dec
loope
inc
lock
jne
sub
adc
lds
cs
jo
jp
adc
jp
adc
test
jp
jne
add
cmp
xchg
add
ja
pop
fsubp
cltd
loopne
mov
xor
sub
fnstcw
jp
inc
lcall
enter
les
push
nop
insl
cmp
aad
and
jp
jae
lods
xor
and
cmp
and
cltd
jae
in
jo
xchg
std
ljmp
mov
pop
and
sahf
sub
dec
adc
push
jo
adc
cs
call
fildll
jns
fcom
js
ret
push
jo
je
push
cmc
bound
jo
int
and
aad
mov
or
ds
jo
adc
decl
cmp
or
repnz
xor
cmpsl
sbb
aaa
insl
or
push
loop
mov
push
nop
jae
sub
push
mov
pop
lea
jo
les
cmp
mov
jo
cltd
adc
leave
cmpsl
mov
lea
xor
std
or
mov
fidivl
adc
mov
jo
mov
cmp
pop
cmpsl
sub
fisttpl
adc
out
fidivl
sbb
dec
movsl
inc
cmp
les
jo
cmpsb
sbb
adc
insb
imull
cmp
cmp
adc
sub
dec
insl
mov
push
mov
pushf
mov
mov
pop
pop
adc
icebp
test
or
fnstsw
in
movsb
mov
adc
dec
movsl
cmp
lret
push
mov
sub
dec
xchg
pop
cmp
mov
jmp
jo
lea
add
cmp
insl
out
insl
mov
mov
fstps
out
adc
out
scas
jo
dec
data16
pop
movsb
mov
stos
pop
adc
cmp
sbb
jo
or
dec
jo
jmp
int
jo
lahf
in
fcmovb
daa
jl
cld
sarl
pushf
fisttps
jo
push
cltd
movsb
out
sahf
test
jo
inc
xchg
mov
jo
mov
push
lahf
add
insl
loopne
xchg
mov
jo
cld
lcall
or
or
push
adc
jo
pop
stos
std
pop
xchg
sbbl
outsb
lock
add
testl
jo
fstps
pop
fnsave
or
jmp
cmp
popa
cwtl
ss
gs
xchg
mov
jo
pop
imul
cmc
cmpsl
mov
jg
in
insb
mov
aad
lahf
gs
and
or
das
sbb
jo
subb
inc
jo
mov
pop
aam
dec
ljmp
rcrb
fcmove
inc
test
push
jp
inc
xor
inc
or
dec
repnz
scas
add
sbb
std
repz
sub
aaa
rcrb
cmp
jo
xorb
xchg
in
dec
mov
lock
ret
sarb
into
and
je
pop
stc
icebp
negb
sbb
aad
jo
jae
jmp
out
fnstenv
jne
pusha
repnz
pop
add
xchg
sbb
loopne
jo
mov
and
test
out
pop
sbb
mov
fucomip
cmp
adc
ja
dec
ret
loopne
das
icebp
cmp
push
inc
inc
jo
or
fsubr
xchg
sub
jl
rcll
cwtl
xchg
mov
dec
aas
adc
int
cmpsb
movsb
push
sub
inc
jo
data16
dec
hlt
xchg
push
jno
and
and
mov
out
lock
leave
jl
adc
mov
addb
and
insl
or
sub
pop
daa
sti
dec
lods
mov
loopne
push
mov
jl
fs
ja
popa
in
jle
insl
dec
inc
dec
jecxz
inc
hlt
xchg
jmp
insb
cmp
jno
mov
decb
pop
fists
jo
sub
aad
jo
addr16
or
mov
frndint
mov
pop
loop
data16
repz
out
rorl
lock
shr
inc
push
andl
xor
push
sub
test
ss
bound
lock
ror
push
mov
push
mov
mov
mov
pop
xchg
inc
mov
aam
aad
roll
jp
stos
xchg
sbb
adc
or
fsubrs
insb
xor
int3
pop
andb
rolb
jns
sub
out
xor
lds
xlat
mov
jae
sbb
outsb
rclb
in
mov
push
jae
xchg
adc
out
xor
pop
mov
jo
cmc
pusha
and
jo
aad
cmp
in
in
jo
cmpsl
push
adc
movsl
fdivl
xchg
pop
adc
jae
dec
lcall
arpl
inc
scas
les
imul
push
jg
jo
pop
or
popf
dec
int
lock
es
aas
out
push
jge
xchg
fadd
dec
neg
jle
outsb
sbbl
lock
nop
push
mov
jo
cmpb
push
inc
sub
cli
lea
notl
xchg
test
in
aam
xor
ret
adc
push
or
push
or
jbe
xorb
sub
lock
xor
nop
lea
or
fdivl
add
jg
insb
jl,pt
jne
mov
cmp
ljmp
insl
cmpsb
mov
jae
add
inc
arpl
mov
cwtl
ror
addr16
xor
aam
lret
scas
pusha
pop
gs
imul
addr16
add
push
aad
xor
jp
repz
outsb
and
nop
cltd
mov
xor
mov
shrb
popa
fcomi
insl
xor
add
dec
scas
jge
mov
cs
or
aad
insl
ret
sbb
sti
inc
push
les
push
jmp
bound
aad
insl
shrb
xchg
inc
jl
loopne
adc
push
shlb
xor
mov
outsb
rol
adc
xlat
lods
xor
shll
sbb
mov
in
mov
push
aam
into
xchg
out
imul
push
in
fnstenv
leave
xor
cmp
jo
inc
xchg
jecxz
xor
cmp
jo
dec
popa
dec
notb
loopne
jo
mov
insl
inc
inc
rorb
pop
lahf
mov
jo
aad
inc
rcll
in
pop
scas
in
xchg
jno
mov
xorl
cmp
jo
enter
test
lahf
sbb
cmpsl
cmp
lock
sub
rorl
jae
mov
dec
push
mov
pop
or
iret
add
stos
add
lods
aas
jo
mov
xlat
and
push
jo
inc
mov
mov
mov
faddl
xlat
or
shrl
into
hlt
mov
mov
movsb
jo
scas
mov
popa
or
sub
pop
push
or
adc
fistl
sbb
jo
aad
adc
and
in
dec
cmp
fidivl
clc
insl
and
cld
int3
imul
cwtl
lock
xor
mov
lret
sub
xchg
fcomip
repz
lea
cltd
loopne
or
repnz
push
cmp
cmpsb
out
push
sbbb
lock
lcall
fnsave
gs
lea
jo
push
sub
outsb
xchg
dec
das
sbb
mov
shll
push
jmp
fiadds
jne
dec
dec
stos
pop
fsts
in
outsl
sub
jo
xchg
adc
push
ret
shl
mov
jo
sub
cmp
scas
jae
xchg
fmull
push
xorb
sbb
daa
jo
in
stc
lock
jb
cmpsb
sub
cld
fisubrl
pop
mov
adc
jp
imul
cmp
fnstcw
in
andb
loop
cwtl
cmc
ss
mov
xchg
dec
into
loope
outsb
maxps
test
int3
insl
stc
mov
std
sti
push
mov
mov
orl
lock
dec
popf
sbb
fadd
push
repz
jo
hlt
insb
iret
sbb
es
popa
push
aad
pop
jle
add
jo
xchg
mov
clc
dec
inc
mov
shl
ret
jo
mov
aad
jo
push
xor
gs
insb
or
outsb
les
xor
xchg
jmp
pop
int
pop
lods
mov
ja
sbb
sub
xchg
sbb
sbb
repz
enter
cmc
jo
mov
imul
or
mov
jo
aad
cmp
dec
shll
mov
imul
lock
je
push
les
stos
jo
pop
xchg
gs
dec
ret
jbe
into
outsb
popa
mov
inc
push
out
hlt
pusha
jo
jg
rorl
mov
out
sbb
stc
sbb
jmp
jns
dec
shlb
nop
pop
or
sub
mov
addr16
scas
aas
jae
jle
out
ficoms
int
nop
push
xchg
cmc
je
or
jo
push
popa
notl
ret
mov
inc
fdivs
jle
leave
insl
mov
cmp
pop
jo
fisttpl
xchg
repnz
rorl
mov
xchg
rorb
add
jo
jne
shl
sbb
test
fucomip
loope
xchg
inc
push
jae
enter
mov
push
cmpsl
dec
outsb
lock
push
gs
int3
push
mov
push
xchg
mov
aad
dec
adc
inc
flds
inc
cmpsw
jo
push
fldt
pop
jo
dec
jecxz
jb
cmc
cmp
push
cwtl
add
or
and
movsb
xchg
lock
and
xor
lock
xchg
mov
cwtl
loop
mov
jo
sub
movsb
pop
dec
jge
pushf
and
jb
lret
sbb
xor
or
push
imul
lds
lock
cld
pop
pop
ljmp
add
cmp
adc
lods
xchg
xchg
cmc
aad
cmp
ja
loope
aam
loopne
mov
negb
int3
push
inc
xchg
mov
mov
js
add
dec
add
mov
mov
jle
push
jp
dec
dec
xor
adc
and
fstps
sub
fiaddl
jo
or
movsb
and
mov
pop
ret
and
mov
std
ja
xchg
pop
cmc
inc
loopne
iret
sub
jo
adc
lea
fdivl
ror
imul
fdivp
fsubrl
rorl
int3
jae
test
xor
mov
mov
jecxz
jo
pusha
es
insl
fistl
pop
je
or
jo
inc
or
insl
icebp
mov
cltd
inc
push
xorb
push
xor
ficoms
xchg
data16
outsb
jge
jae
ja
sub
sti
pop
push
fcoml
int
add
dec
mov
sub
push
sti
jb
shlb
shll
jo
insl
pushf
scas
in
aad
insl
lcall
xchg
paddusw
daa
clc
es
add
in
ja
notb
push
push
xchg
xchg
lahf
pusha
or
lods
cmc
xchg
push
jo
das
mov
mov
repnz
jo
fcompl
out
pop
jl
mov
xchg
jo
fistps
int3
movl
xchg
push
mov
es
test
mov
mov
mov
mov
sbb
push
shrb
loopne
jne
aaa
clc
jo
lahf
dec
add
mov
adc
mov
cli
lock
sbb
add
pusha
xchg
nop
in
or
cwtl
jl
int3
xorb
push
test
les
insl
inc
popa
cmp
out
xchg
std
scas
cmp
inc
push
sub
lret
dec
jne
lock
scas
pop
cwtl
and
jl
loop
xchg
jo
sbbb
jae
stc
jo
mov
adc
jo
imul
xchg
outsb
cmp
loopne
cmp
lods
add
jo
mov
jl
dec
sub
mov
cmp
xchg
shlb
add
sub
xlat
in
dec
in
mov
sub
push
andl
pop
or
jo
aad
iret
cmp
rcr
xchg
in
lds
mov
out
dec
cwtl
andb
adc
dec
pushf
fdivl
test
scas
filds
negl
push
jb
jo
mov
jo
mov
xchg
mov
sarl
adc
cmp
fdivrl
popf
mov
mov
dec
mov
adc
cs
pop
jo
sbb
xchg
out
xchg
sub
push
lahf
dec
test
call
ret
je
cmc
push
insl
imul
scas
xlat
stc
fisubrs
dec
cmp
hlt
mov
mov
sbb
clc
addb
lahf
test
stos
sub
fstpt
adc
outsl
jo
add
popa
test
sub
push
cmc
jae
sbb
push
xor
cmp
divl
test
mov
add
fnstenv
into
aam
pop
add
scas
jo
pop
xor
dec
jae
dec
xchg
enter
mov
jo
jae
fwait
xlat
cmp
inc
pop
jg
cmp
cmpsl
les
lcall
inc
je
xor
sarl
lods
jo
gs
or
dec
lret
xchg
rcrb
clc
mov
adc
jp
push
mov
jo
popf
fadd
pushw
mov
mov
loope
call
jo
jecxz
cld
dec
add
stos
jo
outsl
mov
mov
dec
test
aaa
xor
jb
mov
idiv
sar
jnp
pop
pop
ss
jae
je
jp
lcall
aas
clc
out
arpl
addr16
cmpsb
adc
xchg
pushf
jl
insb
sub
jo
loopne
stc
inc
ficompl
cld
jo
jge
fists
insl
in
lea
pop
mov
sbb
xor
xchg
aam
call
mov
data16
movsl
inc
leave
out
cmp
fbstp
mov
std
inc
das
mov
cmp
push
scas
jl
or
cmp
push
jmp
mov
sbb
jnp
push
jbe
fbstp
or
push
jo
shll
adc
fwait
inc
and
aad
push
or
cwtl
shrb
insl
out
xchg
pop
mov
mov
movb
nop
mov
repz
aam
jo
inc
dec
fs
loopne
adc
pop
mov
sbb
adc
lds
mov
fnstenv
mov
jo
aas
in
aad
cmp
or
fldenv
or
call
adc
pop
mov
jo
scas
daa
mov
jg
pushf
or
cmpsl
out
jmp
jle
shl
fmull
aad
mov
nopl
mov
xor
jo
jle
test
cwtl
mov
dec
popw
enter
jge
lock
sub
xchg
sub
mov
sti
mov
sub
dec
jo
adc
mov
outsb
push
jmp
pshufw
int
insb
bound
test
mov
mov
ja
jecxz
lock
mov
sbb
adc
jp
sbb
imul
jo
mov
jl
pop
push
push
jo
lock
aad
ret
repz
adc
jo
rcr
jae
push
inc
mov
push
sbb
pmaxsw
xchg
lock
pop
mov
out
stos
pop
sahf
cli
lea
inc
fcoml
outsb
outsl
loop
stos
mov
sub
lret
and
and
xor
repnz
or
dec
fs
aad
enter
pop
and
jp
jo
mov
leave
adc
sbb
lcall
add
push
push
ret
hlt
or
pop
lds
int3
fwait
insb
jo
add
xorb
ja
add
jmp
call
mul
mov
add
testl
in
jo
push
ret
test
xchg
repz
ficompl
lods
shlb
xchg
adc
xchg
mov
sub
and
jbe
inc
jnp
jo
and
test
rcr
pusha
adc
jo
cwtl
fdivr
lret
ja
adc
leave
lods
cmpsl
fcmovb
inc
or
and
ret
cmpsb
xchg
int
shrb
sbb
mov
jo
ret
xor
jo
out
mov
jo
fadds
loope
push
push
jo
mov
int
add
jbe
pop
fisubrs
jp
mov
jmp
push
cs
sbb
and
mulb
int
pop
adc
and
stos
in
lock
cld
sarl
xorb
popa
cmp
lock
je
lea
fnstsw
xor
mov
loope
call
imul
xor
and
jg
xchg
jnp
cmp
ja
cwtl
mov
inc
jo
cld
leave
xchg
pushf
mov
xor
imul
lea
nop
sahf
or
jo
jne
aad
sub
cmp
clc
hlt
mov
enter
out
imul
inc
mov
sahf
pop
cltd
fs
es
mov
mov
js
sub
sbb
jo
fisubs
jo
xor
sbb
ret
ret
imul
ja
dec
push
insb
jnp
mov
nop
sub
dec
out
lock
xchg
into
pop
insl
add
pusha
xor
in
adc
pop
iret
jne
movsb
rorb
fcoml
lock
mov
shl
outsl
lds
inc
jo
insl
fldl
dec
insb
xchg
jo
mov
mov
sub
push
ja
addr16
or
sbb
nop
es
cmp
or
stos
aad
jo
scas
or
outsl
clc
jmp
dec
fst
jp
sbb
sbb
push
xor
cmpsl
jo
cmc
inc
clc
inc
xor
insl
push
adc
jo
mov
in
jle
fs
jge
jle
push
dec
mov
push
in
jo
push
mov
fcompl
lea
xor
bound
std
es
or
pop
imul
aas
fs
add
mov
mov
loopne
lahf
inc
dec
sub
jo
adc
cmc
or
insl
mov
xchg
push
insb
stc
lods
push
sbb
push
push
test
sbb
lcall
repz
push
xchg
jg
jo
push
sti
aam
in
ffree
jo
mov
lods
test
jo
pop
xchg
pop
mov
cmp
xchg
jo
daa
cwtl
outsb
mov
push
ret
jo
in
xchg
cmp
jns
insb
ss
shll
cs
fmuls
aas
cmp
negl
cmc
sub
sbb
leave
pop
lods
push
fimuls
arpl
sub
and
jl
push
movsl
pop
cmp
dec
jo
cmp
sti
sbbl
mov
lret
and
fisttpll
add
nop
out
cmp
pop
arpl
test
dec
rcll
or
jo
mov
mov
ja
add
outsl
and
mov
jg
fdivs
popa
mov
dec
movsl
icebp
cbtw
jbe
jae
loop
adc
sub
xor
sar
mov
or
inc
cltd
sbb
dec
mov
or
shlb
lds
mov
pop
push
and
mov
adc
push
mulb
bound
cmp
xchg
jl
jle
add
jo
sub
mov
xor
sbb
add
rorb
jno
jp
pop
mov
jne
add
and
es
out
pop
cld
add
ja
movsl
les
imul
fwait
lods
vsqrtpd
cmp
aad
sti
jo
fucom
jecxz
jno
sbb
out
xchg
inc
in
loopne
ja
sbb
call
mov
les
dec
idivl
popf
xor
jo
or
repz
addb
pop
mov
cmp
sub
jo
fwait
push
iret
lcall
jo,pt
push
mov
in
jecxz
imul
sub
ret
xchg
lahf
cmp
div
rol
mov
xchg
push
add
mov
mov
xchg
adc
jmp
pop
aaa
inc
lcall
push
cmpb
je
cs
gs
sub
dec
aad
sbb
andl
push
cmp
jl
insb
inc
nop
inc
aas
ret
enter
mov
ss
and
lcall
cmp
inc
mov
sbb
nop
dec
inc
into
lock
cs
test
lahf
hlt
add
cmp
jo
sbb
xor
sarl
cwtl
repnz
pop
or
mov
jae
dec
dec
dec
add
test
or
xor
adcl
jo
fisubs
and
arpl
dec
jp
mov
sub
mov
sub
mov
in
jo
and
mov
xor
push
mov
jb
scas
les
jge
mov
adc
enter
jo
or
mov
mov
jo
push
cld
lods
shll
jbe
pop
dec
popf
xchg
mov
pusha
jo
fidivs
cld
fstpl
pop
outsb
adcb
or
enter
jo
cmp
daa
cmc
add
insl
jl
fistpl
jae
test
shlb
out
jbe
aam
and
jo
mov
jne
insl
cmp
fmull
cmpsl
cmc
mov
xor
mov
cmp
cmp
xor
jo
rcll
sbb
aam
sti
inc
rol
mov
xchg
pop
jo
cmpsb
lock
lods
or
jae
shlb
mov
add
std
xor
sbb
popf
push
adc
out
mov
sub
into
rcl
sbb
xchg
xorl
insb
sub
mov
rcrl
ret
test
push
jg
jo
rol
pop
xchg
outsl
jo
clc
sub
jo
jp
cmc
mov
int3
push
cmp
jg
insl
gs
out
jae
xor
sub
inc
mov
push
test
insl
add
push
push
movsb
xchg
cltd
add
jo
jmp
and
push
and
pop
add
cwtl
out
inc
sbb
adc
cli
or
cs
insl
cmpb
ja
xchg
fnstsw
gs
add
jne
jno
repz
pop
mov
test
jo
fisttps
inc
inc
inc
jo
cmpsb
in
fidivrl
and
ja
push
dec
loopne
mov
fwait
jae
frndint
push
ljmp
test
push
push
in
mov
mov
mov
dec
test
and
je
scas
xchg
fldcw
mov
cs
add
ficoms
add
int
sub
ret
pcmpgtw
pop
mov
enter
scas
arpl
or
ss
int3
or
fdiv
iret
sub
scas
jo
sti
cmpsb
aad
sub
jp
fs
ffreep
das
ljmp
insb
jb
jo
mov
xchg
out
cmc
cld
jae
cmpsb
jmp
into
lret
xchg
cmp
sbb
lahf
and
pop
cmp
add
pop
pop
jo
roll
test
std
jl
xor
jge
or
xchg
mov
inc
cmp
hlt
loopne
into
mov
or
fdivr
inc
jo
jnp
scas
sbb
dec
adc
push
test
sahf
dec
lret
and
jo
dec
scas
mov
xor
pop
xchg
pop
push
aad
loopne
mov
sahf
and
mov
fisttps
mov
adc
ror
inc
out
outsl
mov
pop
stc
sahf
neg
push
icebp
addl
inc
outsl
add
jb
dec
in
scas
jle
insl
lds
jnp
pop
or
push
push
jnp
orl
incl
call
jmp
mov
loopne
xorl
out
nop
push
leave
test
fistpl
sub
jae
sbb
mov
push
push
lock
nop
insl
jb
sub
addr16
mov
mov
sbb
jo
ljmp
jo
mov
cwtl
xchg
or
dec
push
lock
xlat
repz
add
jl
jb
adc
jnp
andb
jo
std
sub
fnstenv
inc
cli
test
xor
int3
ja
lea
adc
adc
xchg
in
dec
addb
pop
jbe
jo
lcall
push
push
aad
jno
dec
jb
dec
call
neg
xor
fisubl
lock
shlb
pop
sbb
loopne
scas
push
push
cmpsl
xor
js
jmp
cmp
jo
subl
adc
xlat
xchg
adc
cmp
sub
test
cmc
ret
nop
dec
jo,pn
mov
jbe
xchg
push
clc
xchg
xor
loopne
inc
out
bound
das
sbb
and
mov
repz
aaa
add
add
inc
test
xchg
aam
jle
insl
mov
mov
jmp
jae
xlat
cmp
inc
mov
movups
jo
jnp
aaa
mov
lea
cmp
rcrl
shrl
je,pn
cwtl
add
inc
jo
aad
pusha
loope
push
mov
xor
hlt
fnsave
test
test
das
arpl
or
scas
cmp
push
mov
push
cmp
ljmp
sbb
cwtl
mov
jg
jg
adcb
ljmp
loope
cmp
loopne
jo
fldcw
push
stc
cmpsb
and
mov
dec
inc
repnz
loope
fs
sub
mov
jo
xchg
cli
push
ret
pop
roll
out
dec
push
shll
adc
ja
xor
mov
mov
lret
ja
xchg
push
inc
dec
inc
fst
jl
jno
int3
call
ljmp
aaa
push
sub
sub
adc
sbb
mov
inc
fisttpll
cmp
adc
sahf
lcall
sbb
xor
aad
jp
fistps
xchg
hlt
gs
ret
xchg
jo
jg
and
rolb
cmc
ja
rorb
mov
push
mov
repnz
lds
pop
jg
jo
icebp
shlb
std
setb
push
mov
cwtl
sub
inc
test
pop
pop
add
cmp
cmc
jo
fistl
mov
pop
sbb
fnsave
mov
push
stos
jecxz
xchg
jle
jo
or
aas
ds
xchg
jae
or
stc
enter
jo
mov
aad
ja
arpl
jo
cmp
jo
filds
out
into
jnp
shll
mov
jo
sahf
mov
aad
test
or
xor
mov
ljmp
and
inc
jo
test
outsb
or
jae
jno
shll
cmp
mov
jne
xchg
pop
lcall
jo
lea
outsl
insl
shlb
clc
jnp
mov
sub
and
popa
mov
jno
bound
scas
stos
je
sub
mov
ljmp
imul
jle
mov
mov
pop
int
lock
inc
subb
movd
into
mov
add
add
push
outsb
pop
outsb
dec
mov
xor
fcmovnb
mov
push
data16
mov
leave
aad
ss
ret
or
jae
pop
mov
fcompl
insl
jbe
outsb
nop
test
das
adc
jl
lea
mov
push
jge
push
in
loopne
mov
or
fcoms
prefetch
sbb
imul
inc
lahf
dec
jo
lret
jnp
mov
sub
add
orl
sbb
xlat
fstps
sub
bound
mov
pop
sti
jns
pop
aaa
movsl
push
fidivs
aas
push
jo
pop
lock
push
mov
rcrl
add
jo
mov
xchg
arpl
sbb
adc
jno
mov
sbb
cmp
mov
mov
jecxz
shll
or
mov
pushf
lock
jnp
popa
and
jo
arpl
leave
push
adc
mov
dec
and
sbb
mov
mov
ja
or
mov
and
mov
ja
fistpl
adc
lahf
out
ret
adc
orb
ja
aaa
into
or
loopne
in
repnz
sbb
xor
fs
out
add
data16
cmp
mov
pop
adc
mov
pop
pop
jnp
mov
movl
xchg
repz
dec
sbb
push
push
mov
cwtl
outsb
das
in
movsb
ret
xchg
cmp
adc
data16
fsubrl
xorl
sub
sbbl
arpl
mov
or
int
orl
mov
pop
adc
inc
mov
nop
jmp
arpl
dec
jo
pop
rcrl
dec
lods
addr16
sbbl
adc
testl
push
sub
mov
mov
int3
or
in
adc
push
aad
push
cmp
cmp
xchg
jo
lods
adc
pop
es
ja
pop
inc
pop
mov
push
xlat
mov
jo
push
rorb
xchg
test
jbe
loope
imul
push
xchg
jne
aam
jnp
dec
lahf
push
outsb
xor
pop
jo
mov
push
adc
outsl
push
inc
dec
aad
pop
jo
aas
cmp
jle
popa
jo
rorl
shlb
arpl
and
clc
addb
insl
pop
cwtl
les
pextrw
or
shll
mov
dec
loopne
sub
sti
mov
adc
out
jo
lcall
and
iret
jl
and
add
lcall
sbb
dec
add
push
push
pop
dec
sbb
aad
lahf
and
lods
jo
jns
cs
push
mov
xor
outsb
fiadds
and
call
mov
inc
fmulp
jo
aam
and
add
ja
sub
lahf
ds
or
shrb
jae
shlb
xorb
cmp
popa
loope
jo
pop
dec
cltd
push
cmp
mov
adc
inc
cs
push
divb
xor
arpl
movsb
movsb
mov
mov
fs
xchg
pop
xor
jl
ljmp
fsubs
or
jo
shl
fcmovnbe
xchg
int
lea
or
pop
rcll
jp
leave
nop
fsts
sub
or
pushf
decl
fnsave
push
ficomps
bound
inc
adc
insb
cwtl
mov
sub
xchg
push
xchg
dec
pop
cmp
hlt
cmpsl
sub
push
scas
js
ret
lea
das
jmp
and
test
push
shlb
jle
jo
push
out
aad
inc
jae
sbb
mov
dec
clc
push
fwait
adc
sarl
sub
jo
xchg
xorl
call
fldl
push
mov
add
jae
or
leave
int
jle
les
cmp
mov
in
and
fs
push
jg
add
dec
pop
sbb
push
xlat
jo
push
pop
fcmovnu
int3
push
fnstenv
cmc
pop
cmp
jne
or
jo
nop
aaa
mov
ss
je
push
pop
mov
jbe
dec
mov
lock
test
adc
std
sbb
shlb
cmp
dec
les
dec
js
imul
js
lcall
notb
jo
ljmp
jo
test
popf
dec
inc
push
cmp
jo
push
add
mov
lahf
jmp
add
out
ret
dec
bound
add
or
stc
pop
jo
int3
mov
lret
pop
jo
push
pop
sbb
andb
call
aaa
jmp
lea
mov
rcl
mov
std
inc
cwtl
loopne
repnz
push
fiaddl
cmc
imul
cmp
clc
or
sbb
mov
mov
xchg
sbb
pop
jo
and
jle
inc
data16
cmp
loop
push
sub
mov
xor
push
or
jo
addl
inc
pop
push
es
lods
mov
jae
or
jecxz
movsl
fimull
imul
jo
lcall
jo
cmp
les
mov
xchg
leave
insl
dec
rcr
in
pop
icebp
push
push
ret
jnp
std
jo
shll
pop
jo
jae
xor
popf
sub
test
lock
jle
fcomi
cld
lods
push
or
mov
mov
je
sbb
pop
out
outsl
xor
jle
test
pop
jo
sbb
inc
movsl
push
xor
push
jb
test
mov
push
and
jo
aam
add
mov
outsb
je
xchg
das
push
mov
test
push
pop
ljmp
jno
mov
je
std
adc
push
orl
lock
cli
jge
mov
inc
aad
sbb
fldcw
rep
jo
movsl
adc
inc
jo
mov
mov
xchg
hlt
loope
xor
sub
mov
outsb
mov
fists
dec
movb
dec
add
in
xchg
fyl2x
adc
out
xor
data16
push
pop
out
pop
lock
jae
arpl
cs
dec
sbb
jg
hlt
into
xor
jo
pop
mov
imull
outsl
in
cmc
test
insl
push
and
fcomps
lcall
das
shll
cmp
pop
jl
mov
jo
movsb
mov
mov
mov
pop
jno
int3
or
add
mov
xor
gs
cmp
in
add
or
aam
jo
fdivrl
lret
xchg
jo
xor
rcrb
adc
scas
xor
rcrb
aad
loopne
ja
cld
cmpsb
bound
maxps
mov
ss
mov
out
lcall
aad
enter
mov
jns
jo
rcl
inc
push
out
mov
jmp
add
loop
sub
adc
lea
ja
loope
xlat
sbb
push
lcall
mov
rol
jo
iret
inc
sub
jo
out
jbe
icebp
rcpps
mov
pop
mov
mov
fldt
jo
bound
rorb
mov
jo
jnp
test
dec
fisubs
mov
cwtl
sbb
push
inc
pop
mov
movsb
jbe
push
jmp
sub
jb
mov
out
xor
push
hlt
or
xchg
shlb
cltd
mov
mov
lea
fnstenv
sbb
mov
addr16
cs
int3
data16
lods
repz
sbb
cld
outsb
enter
mov
in
lds
jo
js
xchg
mov
aad
xor
mov
cmp
jl
stos
cli
xchg
shr
pop
inc
push
pushf
dec
adc
mov
mov
sbb
jo
mov
fiadds
not
mov
jge
scas
mov
sbb
fmull
push
mov
fists
out
adc
jo
lods
and
hlt
mov
xchg
jo
movsb
sub
loope
jo
jecxz
and
aad
jno
and
cmp
lock
inc
pop
xlat
stc
inc
jnp
dec
std
push
je
push
jb
mov
dec
cwtl
lds
xlat
xor
xchg
loopne
dec
jo
aas
frstor
mov
negl
pop
outsl
cmp
jo
lds
add
xorb
iret
jo
cwtl
loope
inc
ljmp
jo
int3
sub
mov
jne
mov
shll
iret
jno
or
adc
pop
fsubrl
adc
int
cmp
repnz
dec
stos
fistpll
scas
cld
pusha
shlb
fmuls
and
mov
mov
movsl
repz
cltd
loopne
outsl
shll
lcall
orb
nop
pop
add
scas
jo
clc
fistl
lods
mov
mov
jo
imul
fsub
scas
mov
dec
ja
nop
fwait
das
loopne
jo
mov
icebp
aas
ljmp
mov
mov
cld
jge
in
inc
popa
xorl
mov
mov
scas
sbb
adc
sub
push
xor
sub
push
jmp
insb
faddl
mov
mov
fnstsw
jo
jl
dec
mov
test
in
lods
push
inc
pop
xchg
add
jo
movsl
mov
leave
ret
sub
and
mov
pop
sub
shlb
shrl
leave
adc
push
jne
std
aad
sbb
cld
stos
cli
sub
lcall
add
jo
dec
mov
cmc
mov
fwait
dec
or
aad
mov
inc
psubw
jo
lock
xchg
movsb
xchg
cmp
sub
cmc
fwait
scas
push
nop
or
bound
xor
push
push
aas
jp
mov
pop
xchg
pop
jge
mov
mov
imul
push
xor
adc
jo
mov
int
jb
sub
dec
lods
stc
leave
mov
pop
lahf
outsb
mov
and
and
pop
int
sti
test
xchg
pop
outsb
popa
scas
sahf
shrb
lds
sbbb
xchg
das
adc
mov
fscale
cld
in
pop
jb
add
lock
lcall
xor
int
sbb
stos
jns
loope,pn
xchg
xchg
imul
aaa
add
or
out
shlb
sub
inc
xor
xor
pop
sub
inc
mov
es
pop
adc
or
mov
sbb
pop
hlt
jbe
out
mov
sbb
test
inc
cmp
divb
cmp
out
xor
ret
mov
es
xor
sub
shll
sbb
sub
out
jo
xchg
xor
dec
inc
ja
cs
mov
cmp
pop
jo
push
lret
repz
testb
mov
addr16
sub
pushl
std
jo
test
lea
push
enter
lcall
cmp
mov
push
daa
jle
mov
aad
pop
loopne
icebp
or
xchg
ljmp
jo
clc
pop
pop
push
adc
iret
push
pusha
scas
jmp
jo
rorl
jo
sarb
lret
jo
ret
mov
cmc
xor
popf
adc
fnsave
dec
mov
jo,pt
fimuls
ss
dec
and
nop
add
or
jo
jns
sti
jge
in
pop
jo
leave
push
mov
cmpsb
and
jo
xor
xchg
sahf
inc
int
mov
sqrtps
ficoml
arpl
pop
aad
jno
fwait
lock
jp
hlt
ja
cmp
int3
push
addb
mov
sub
jne
lea
popa
jo
aam
jae
add
outsb
xorb
in
enter
or
pop
rolb
outsl
outsb
mov
stos
add
add
cltd
sbb
push
aad
dec
mov
mov
xchg
mov
ja
push
sahf
mov
push
jno
cmc
jo
sbb
xchg
jo
pop
xchg
subl
jmp
mov
xchg
mov
cld
nop
pop
jo
mov
jg
push
push
insb
mov
mov
xchg
call
mov
jo
jne
insl
adc
sub
mov
jo
ljmp
std
cmp
mov
into
and
fistl
dec
xchg
push
outsb
jo
add
jne
scas
adc
jle
jbe
ljmp
loope
mov
adc
test
test
push
mov
add
cli
rcll
sbb
xchg
jo
push
jb
arpl
push
sarb
xor
lea
daa
pop
xor
lcall
jno
lret
cmpsl
insb
int3
into
sbb
iret
cmpsb
mov
insl
dec
aaa
addb
lea
nop
fucomip
mov
lock
mov
ja
into
jg
fldt
lret
test
mov
js
scas
in
sbb
add
mov
jo
xor
mov
add
sbb
inc
cmp
dec
jl
lock
mov
ret
clc
xor
jo
shll
pop
jo
in
and
lcall
or
inc
dec
jo
lods
mov
mov
xor
and
cmp
xor
jae
cmpsb
push
lahf
or
scas
cld
mov
mov
add
lret
jo
jmp
fwait
shll
pop
mov
pushf
mov
sahf
cltd
cmp
jo
pop
xchg
jbe
fistps
mov
lea
or
test
lahf
jae
loopne
inc
iret
fdivp
jo
sbb
and
lock
fldt
loopne
push
mull
jo
adc
lock
mov
xchg
mov
or
xchg
jo
lods
fcoml
mov
ja
decb
pop
out
jo
data16
xor
pop
or
in
imul
sub
jmp
out
xchg
inc
js
outsb
mov
inc
adc
icebp
pop
cmp
mov
mov
inc
mov
cmc
in
jmp
cmp
mov
aam
lea
aad
inc
out
call
mov
cmpsb
mov
sub
push
faddl
es
and
inc
ret
jle
outsb
mov
jle
and
shrd
push
cmp
jo
sub
pop
jo
test
mov
aaa
pop
inc
jo
movb
jb
jo
adc
push
into
outsb
xchg
xchg
cmc
add
frstor
push
mov
test
jo
cmp
fsubrl
dec
fxch
out
push
xor
add
dec
dec
jne
int
ds
lds
mov
jo
jg
jp
insb
out
pop
sbb
data16
popf
ja
mov
push
sbb
fnsave
pop
add
orb
ja
jnp
nop
xlat
ds
push
inc
fnstenv
inc
xchg
mov
push
cmp
sub
or
ljmp
sbb
int
jp
iret
add
sub
outsl
out
ljmp
nop
out
insl
das
std
sub
inc
insb
push
sub
test
pushl
xchg
dec
xor
pop
outsl
call
jne
jle
shrb
inc
out
adc
jge
adc
dec
add
push
dec
sbb
out
xchg
xchg
jo
lahf
mov
loop
adc
adcl
ljmp
fst
test
dec
xorb
and
jae
jno
cmp
outsl
movsl
pop
mov
call
pop
aad
cli
sub
bound
inc
push
fnstenv
lods
adc
lods
stos
sahf
aad
push
icebp
xor
jo
test
test
jnp
push
popf
add
jo
sub
lea
xchg
clc
or
cmc
aad
inc
leave
out
sahf
xchg
shll
lret
fadds
sbb
inc
jo
push
mov
scas
in
sar
jnp
popa
dec
sub
xchg
mov
pusha
iret
jo
pop
push
mov
or
xchg
push
fs
jl
cmp
loop
add
fnstsw
daa
stos
jg
push
push
gs
or
push
mov
shr
popf
xorl
mov
jge
js
push
mov
sbb
hlt
jo
jae
pop
nop
ss
mov
je
andl
loop
pusha
cmp
dec
cmp
adc
mov
jp
pop
jmp
mov
push
xchg
mov
ja
in
mov
sub
mov
enter
jo
mov
lret
ja
xlat
adc
sub
mov
movsb
sbb
jo
mov
push
jno
xor
sbb
mov
int
xorl
fwait
ljmp
stos
dec
mov
dec
mov
in
fsubrs
cmpl
mov
jge
pushf
inc
jo
rorb
cld
dec
cli
daa
sbb
das
and
test
orb
call
mov
sbb
aam
rep
xor
int
xor
jno
das
lock
jo
insb
dec
gs
and
add
add
pop
xchg
xor
sarb
loop
lret
daa
fldl2t
cltd
mov
and
dec
sbb
mov
jae
pop
lcall
je
aam
mov
and
jo
lods
rcl
stos
lahf
mov
jp
cli
pop
and
jo
adc
fsub
cmp
test
xor
dec
sub
outsb
fmuls
lods
or
insl
adc
imul
ja
je
insb
int
mov
xchg
stos
jo
test
and
push
mov
mov
jo
lods
sbb
xchg
scas
cld
xorb
pushf
aam
jp
sarl
jo
movsl
xor
aad
jo
pop
sub
inc
data16
in
mov
fwait
loope
jno
imul
es
jo
sbb
stos
mov
scas
pop
adc
test
push
dec
push
lods
xchg
inc
jo
sub
fld
push
jo
in
sbbb
lret
lea
into
ja
add
lds
jbe
adc
sbb
cmc
imul
and
dec
mov
fmuls
aad
bnd
mov
mov
in
mov
loopne
lret
pop
ds
push
mov
push
add
xor
mov
jecxz
scas
pop
test
dec
cmpsl
xchg
push
test
xchg
xchg
faddl
dec
xchg
jb
inc
pop
lea
jbe
jo
bound
push
ss
push
jmp
or
lods
or
xorl
aad
call
pushl
push
jns
and
xchg
jne
pop
adc
inc
aad
loope
dec
sbb
jo
push
negl
je
jo
jbe
inc
in
push
lret
push
add
jo
or
inc
and
sub
out
movsb
call
cltd
push
fwait
xor
int3
jp
dec
stc
sbbl
jo
or
sbb
stos
mov
dec
js
and
mov
inc
pop
jo
enter
inc
jo
sarl
ficoms
repz
cmp
mov
pop
xchg
adc
in
mov
mov
pop
int3
pop
jo
pop
aad
mov
pushw
mov
testl
inc
xor
jne
push
push
xor
jo
fildl
pop
stc
ja
push
push
repz
xchg
push
sbb
insl
movsb
and
pop
int
ja
loopne
and
loopne
pop
addr16
loop
pop
gs
pop
loope
andl
mov
mov
sub
adc
adc
out
mov
push
dec
or
inc
sbb
jmpw
jo
sbb
bound
fstl
test
sar
js
sbb
fnstenv
imul
enter
jo
or
lods
adc
cmp
dec
add
jo
jno
ds
int3
mov
pushf
mov
aad
lret
mov
data16
jo
jae
shrl
adc
and
adc
mov
hlt
int
sarb
dec
nop
rcrb
icebp
rolb
push
sub
mov
imul
cmc
inc
dec
push
in
dec
shll
testb
or
jo
dec
adcl
rolb
loopne
jo
pop
jae
cltd
in
rorb
push
jo
add
add
mov
shrb
jo
or
fidivl
shll
fdivs
dec
out
insl
mulb
int3
in
rcll
or
aaa
push
jle
dec
cmc
iret
aam
fidivl
sub
jno
cmpsl
push
addr16
jle
out
lret
and
cmp
add
outsl
mov
mov
or
sbb
fnstenv
test
jo
fimull
pop
jp
idivb
jo
mov
push
in
cmpb
inc
adc
push
dec
stos
popf
mov
sub
inc
add
push
add
sub
fs
test
cmp
cmc
fidivl
xchg
jg
or
pop
fildll
jno
divb
lret
into
inc
sub
test
in
leave
repnz
pop
jge
lods
xor
adc
fmull
test
mov
rcrb
xchg
outsb
rcl
sub
fnsave
das
test
ljmp
add
fwait
xchg
cmp
jmp
add
adc
pop
push
jo
clc
lret
scas
popa
andl
lock
in
mov
pop
adc
push
jo
mov
add
or
push
mov
fdivrp
jae
pop
jae
iret
pop
mov
cmpsl
jnp
xchg
add
push
or
std
fdivs
mov
sarl
jp
jle
xor
hlt
aad
push
loope
cmpsl
dec
jecxz
sbb
jg
jb
dec
out
fxch
or
or
iret
lock
cmpsl
sub
ja
lds
mov
ja
mov
mov
jo
mov
dec
xchg
xchg
jp
fldln2
gs
jo
les
sub
jo
aam
rorl
rorl
sub
jg
outsb
cmpsl
fnstcw
add
in
insl
mov
dec
into
insb
xor
dec
jnp
push
cmp
sbb
jo
int
leave
out
push
in
add
pusha
jnp
push
sbb
jae
push
mov
mov
pop
stc
jo
or
in
lea
movsl
scas
add
mov
add
pop
adc
outsl
pop
mov
test
jb
pop
jp
mov
xchg
mov
mov
fildl
je
cmp
in
movsl
lret
lahf
mov
int3
jo,pn
in
cmp
int
jo
in
enter
movsl
jo
cmp
jb
xchg
lods
je
fdivr
mov
cmpsl
jo
cs
shrl
cmp
fisubrs
push
test
movsb
daa
inc
jl
sub
lods
xchg
xor
pushl
out
sbb
int
insb
xchg
mov
jnp
call
scas
mov
and
dec
dec
mov
xchg
lods
jo
dec
push
mov
jo
vpunpcklqdq
lods
ja
fdivr
sub
xchg
adc
sub
aaa
shrb
jb
faddl
cmp
mov
jecxz
and
lea
inc
out
jo
aad
enter
insb
dec
ljmp
ret
sbb
xor
test
popf
mov
mov
hlt
xchg
cmp
sti
or
outsb
ss
jl
daa
cmc
movsb
lock
addb
sub
sbb
les
add
insl
mov
xchg
jge
fimull
test
cmpsb
jo
inc
out
sbb
xor
jo
aam
and
mov
push
or
xchg
das
rclb
clc
repz
insl
push
mov
sbb
push
enter
xor
mov
jo
aad
jecxz
lret
mov
sub
int
mov
ficoms
loopne
sub
faddl
scas
cmpl
add
xchg
add
jo
in
xchg
adc
fs
jae
lods
adc
iret
adc
outsb
das
adc
div
test
cmp
inc
ffreep
cld
jo
and
xor
sub
pop
xor
or
icebp
int3
mov
push
inc
mov
xchg
mov
mov
cwtl
in
adc
adc
inc
lods
lock
cmc
jo
dec
call
mov
int3
or
push
sbb
jo
adcl
jbe
jge
inc
test
dec
inc
fcom
pop
mov
or
inc
outsl
mov
es
jmp
pop
jo
mov
aad
insl
push
push
xor
leave
xchg
mov
mov
mov
pop
test
bnd
lock
xchg
jbe
adc
in
adc
aad
fidivs
js
lock
clc
cmpsb
fidivl
inc
notl
dec
movsl
jo
dec
stos
sbb
lret
mov
jb
xchg
push
jnp
pop
or
ds
add
adc
mov
xchg
jb
xchg
cwtl
jo
pushf
mov
jno
sbb
push
lock
popa
add
data16
adc
push
scas
cmp
mov
xchg
pop
out
cld
lock
mov
pop
mov
mov
jo
outsl
add
decl
push
lock
addr16
aaa
ret
push
jo
sbb
imul
push
sbb
jbe
in
dec
mov
lahf
cmpsl
jo
xor
sub
xorb
xor
mov
add
ljmp
push
add
mov
test
aad
cmpsb
pop
out
jo
mov
ficomps
and
mov
jo
aad
or
dec
pop
xor
movsl
xor
mov
outsb
lcall
test
jle
imul
and
adc
dec
insl
mov
clc
mov
notb
add
push
sbb
ret
mov
iret
jnp
xchg
jo
jns
mov
out
movlps
jno
or
lret
mov
cmpsb
jo
loope
cmc
stos
xor
add
jbe
sbb
jle
insl
add
xchg
xchg
hlt
xor
xchg
popa
outsl
jae
and
and
ja
fisubrs
push
shrl
pop
pop
mov
das
jo
and
ss
push
ret
mov
incb
or
in
shll
loope
cwtl
insb
adc
aad
and
sub
ja
cli
sbb
sarb
mov
nop
jp
or
pop
in
iret
push
push
inc
xor
add
push
inc
lock
pop
movsb
loopne
cmp
scas
xchg
sti
hlt
lock
iret
jo
pop
push
mov
push
xor
js
mov
jo
aad
out
out
scas
mov
jo
stc
in
imul
sub
pop
jle
je
jo
pop
mov
pop
mov
dec
jle
lret
mov
mov
idivb
xor
shlb
sbb
loopne
jo
mov
fldcw
xchg
jo
stos
in
je
jo
push
push
ljmp
fbstp
inc
push
nop
lods
jo
and
sbb
jo
inc
jp
mov
jg
jo
pop
pop
mov
jo
adcb
es
sub
push
pop
ss
test
jo
icebp
fsts
stc
xor
xor
inc
jge
aad
loope
jae
or
cmpsl
pop
cwtl
movsb
pop
divb
lcall
jne
mov
sbb
aad
std
divl
fildll
fadds
js
aaa
dec
ljmp
fs
push
lock
iret
cli
daa
test
hlt
jo
je
cmp
rorb
jb
das
xchg
out
push
jo
push
cmp
repz
jo
pop
push
movsl
les
jo
sbb
add
push
insl
adc
cmpsl
sbb
lds
jne
pop
xorb
into
jmp
daa
dec
add
xor
sti
rcrb
cmp
dec
cmp
mov
jo
pop
fisubl
sub
jo
and
pop
pop
jns
jle
jo
push
cmp
gs
mov
xchg
bound
jge
pop
dec
sbb
pop
mov
mov
scas
jno
outsb
mov
vmovss
adc
and
push
gs
sbb
and
jle
faddl
add
cmp
add
lods
jae
call
jo
adc
and
jo
mov
push
jp
dec
pop
xor
stc
and
push
std
bnd
mov
adc
stos
in
rorb
pop
xor
pop
out
repnz
dec
lea
fdivl
xor
push
aad
nop
jo
inc
jne
adc
imul
push
sub
xchg
inc
scas
mov
cmp
jo
push
lock
mov
aaa
xchg
pop
mov
xorl
inc
les
push
cmpsl
shlb
dec
popa
lahf
pslld
sub
aad
push
ljmp
shll
xlat
enter
add
aad
cs
fidivs
jo
adc
sarl
sbb
pop
fldt
cld
jo
into
fdiv
sub
outsb
push
jo
and
lret
rol
mov
jo
jle
out
cmpsb
jo
add
mov
fwait
push
outsb
idivl
repz
fnstenv
mov
push
add
sbb
popa
sbb
add
jo
mov
ror
sub
xchg
xorl
or
sbb
test
call
lods
sub
cmp
mov
ret
adc
jne
data16
jo
dec
pop
xlat
dec
insl
inc
mov
imul
mov
fwait
xchg
push
jo
lahf
cmp
mov
movsl
mov
mov
mov
stc
mov
iret
or
xchg
jg
add
scas
das
pop
xchg
xchg
mov
jge
dec
xor
repz
repnz
mov
push
adc
mov
bound
aad
and
in
xor
and
sbb
std
inc
mov
inc
xchg
xor
fnstenv
lcall
outsb
sbb
movsb
dec
nop
inc
xor
jo
fs
push
rcr
inc
jo
push
dec
icebp
jo
arpl
mov
js
int3
mov
mov
incl
out
pushf
add
jno
ret
jb
imul
and
mov
stc
cld
jns
sbb
jo
or
sub
fcmovnu
xlat
jo
pop
sbb
fs
xchg
mov
or
sti
aam
mov
es
and
xchg
addb
xor
xor
jo
int
pop
sub
stc
add
sbb
pop
mov
pop
clc
dec
pop
lds
js
ja
fneni(8087
xchg
aas
xchg
xor
mov
mov
push
lock
cld
mov
inc
mov
or
sub
add
faddl
insl
test
push
push
add
push
nop
mov
xor
lahf
mov
inc
cli
dec
mov
lret
adc
scas
jbe
je
imul
lock
dec
jo
xchg
sub
mov
int
sbb
mov
out
cmpsl
jo
repnz
aad
push
pusha
scas
test
bound
fsts
addr16
ja
push
in
cwtl
push
rorb
aad
jo
fildll
jae
fwait
or
jo
call
mov
xor
or
out
nop
aad
cmp
pop
test
inc
add
cmpsb
pop
fsts
mov
popf
movsb
psllw
inc
cmc
mov
pop
in
push
add
mov
push
jo
lods
loopne
mov
and
jo
lock
mov
mov
pop
inc
loopne
adc
dec
rcrb
mov
and
fs
mov
movsl
mov
jo
xchg
push
sub
cmpb
jg
cwtl
aad
mov
mov
lea
shrb
lret
push
out
push
sarl
sub
mov
push
dec
lret
shrb
pop
imul
push
jno
push
mov
mov
dec
insb
mov
jo
into
push
imul
cmp
sub
ds
jo
lea
xchg
bound
jo
insl
cmp
aad
dec
mov
mov
mov
out
jo
lods
cmpsb
sbb
inc
jno
shl
and
je
test
stos
inc
mov
mov
into
outsb
stc
mov
hlt
clc
xchg
mov
or
push
xorl
ja
or
aaa
mov
or
or
dec
int3
fbstp
cld
scas
jo
les
lahf
cmpsl
call
out
xor
xchg
subb
cmp
imul
mov
fnstenv
cmp
jo
cmpsb
mov
adc
pop
scas
mov
cmp
dec
mov
sub
push
xor
mov
clc
mov
mov
mov
ror
jo
pushf
adc
dec
in
insb
jae
mov
int3
outsl
call
addl
and
mov
xchg
add
insl
cli
aas
adc
scas
pop
cmp
jo
call
imul
jo
stos
pop
fidivrs
and
jo
movsl
mov
pshufw
fmuls
pushf
cmp
cmp
push
popf
xlat
mov
inc
fwait
mov
jo
mov
jno
jae
push
and
test
jo
cmpsl
mov
fnstsw
xchg
adc
jo
aas
mull
ja
out
jo
hlt
loope
stc
push
cmpsl
dec
jo
popf
xor
dec
insl
in
pushf
andb
ja
mov
push
pusha
lods
test
jo
jae
adc
jnp
sti
mov
jle
leave
imul
fbstp
js
fistpl
movsl
cmp
test
stos
mov
xchg
mov
mov
rcrl
mov
jge
test
cmp
push
dec
aam
out
cmp
adc
xor
and
stos
adc
sarb
jo
pop
jbe
cwtl
into
sbbb
sub
or
jo
and
and
data16
cmp
aam
fcomps
jo
call
les
pop
cld
jge
jo
roll
loope
jl
mov
lret
jo
fistpl
xor
jo
scas
fcoml
jo
lock
cmc
jo
pop
ljmp
jo
mov
adcl
pushf
mov
cld
add
and
mov
cmp
mov
std
pop
sbb
jo
int
pop
pop
fcompl
jo
mov
mov
nop
movsb
jo
pop
icebp
cwtl
jne
das
jo
cmp
paddsb
adc
ror
jae
dec
sbb
jo
push
jns
pop
fstpt
jo
xor
jo
push
adc
jo
out
sbb
or
jae
scas
mov
xchg
dec
jmp
sbb
fwait
add
ret
jo
repz
imul
dec
mov
enter
jo
jb
pop
and
jl
cmpb
mov
pushf
adc
cmp
movsb
jo
test
out
int
jl
cmp
test
jo
push
jns
bound
inc
jo
mov
dec
jo
or
xchg
sbb
sub
hlt
jo
cmp
cmp
cld
jg
jo
xor
scas
std
mov
add
and
xchg
insl
cmp
xchg
pop
inc
jo
mov
mov
repz
xchg
mov
push
mov
push
insl
enter
cmp
dec
icebp
sub
adc
pop
ljmp
rclb
or
cmc
test
hlt
mov
lock
scas
jo
lret
les
bound
mov
fmuls
dec
neg
pop
in
nop
test
and
mov
sub
mov
mov
and
cmpsb
jo
jl
mov
lods
push
jo
mov
sbb
cmp
mov
adc
lds
sub
lock
jo
xchg
aad
fcomp
stc
je
jne
ss
mov
adcb
lret
cs
bound
fcmovnbe
jo
dec
fnstcw
cmp
movsl
or
jo
shrl
js
jnp
mov
out
cltd
dec
xchg
dec
mov
int3
dec
stos
xchg
jo
xchg
ficoms
sahf
hlt
xchg
insl
outsl
into
fwait
es
out
cwtl
sahf
jae
scas
cltd
push
jecxz
mov
ja
push
adc
and
pop
pop
mov
add
sbb
mov
imul
ja
dec
repnz
icebp
loopne
inc
rcr
xchg
sbb
clc
pop
xor
xor
out
cmp
and
xchg
ficompl
jle
out
subb
cmp
mov
push
das
sbb
lock
addr16
sbb
pop
fldcw
fsubr
push
and
jge
in
sbb
add
jbe
sarb
pushf
jp
lahf
mov
sarb
push
mov
sub
fcmovne
out
jo
lods
or
jo
mov
adc
mov
jl
outsb
dec
scas
jb
pushf
nop
std
sbb
jo
mov
leave
and
pop
cmpb
lds
mov
test
rol
arpl
xchg
mov
pop
ja
inc
jo
lds
push
call
shlb
inc
in
jo
pusha
or
addr16
bound
add
std
mov
jo
insb
sbb
cmc
jo
xorl
lods
xlat
jmp
push
jo
or
or
out
jnp
and
je
jnp
cs
leave
sub
outsb
push
add
mov
push
jo
and
test
out
jo
cmp
fcomi
ret
es
js
pop
sub
lea
or
movsl
stc
divps
call
push
aaa
xor
ja
loopne
pusha
test
mov
sub
mov
jl
lcall
mov
fldcw
pop
ja
pushf
lock
mov
adc
jo
or
hlt
es
mov
jo
push
je
jae
inc
pop
testb
mov
lds
in
adc
inc
ljmp
mov
shll
or
jle
aam
add
lds
xchg
pop
sub
jge
pop
cmpb
scas
es
aad
ss
and
add
jecxz
or
mov
jo
out
pop
mov
lods
xor
dec
cmp
mov
jo
jb
mov
jle
jo
cmc
stos
xchg
pop
out
fnstenv
rcr
scas
xor
mov
pop
leave
idivl
mov
push
mov
in
jmp
xchg
cmp
loope
clc
xor
push
sbb
jo
pop
fidivrl
je
mov
mov
inc
icebp
aam
push
push
adc
jo
add
cli
add
cmpsl
cmp
icebp
arpl
outsb
jo
inc
sub
dec
jo
add
pop
out
insb
jo
or
mov
dec
pop
stos
loope
fadd
jl
pop
sahf
bound
aad
neg
xor
loop
lock
inc
stos
lahf
cltd
rcl
decl
sbb
popl
jl
cmpsl
xor
jo
push
sbb
mov
and
push
xlat
push
push
push
fnstenv
adc
out
lahf
cmc
jo
in
loopne
aad
loope
sbb
cmp
and
jo,pt
les
shrl
mov
rcrl
lds
aam
mov
jnp,pn
fistpl
cwtl
movsl
inc
jo
xchg
jge
ficompl
mov
inc
inc
mov
ret
xchg
pop
lods
dec
jo
imul
fnstenv
mov
or
jnp
pop
iret
out
pop
xor
nop
xchg
fs
jo
dec
je
cmp
sbb
loopne
stos
lock
jecxz
ja
arpl
xor
insl
shrl
mov
push
pop
ficomps
pop
adc
xor
cmp
subl
daa
mov
lds
xor
call
pop
in
mov
sbb
jo
fadd
gs
push
cmpl
stos
ds
rclb
movsl
jo
daa
lods
aad
insl
jo
inc
or
fldenv
jo
gs
dec
int3
pop
mov
aad
test
and
or
mov
rcrl
lods
sub
jo
cld
jnp
pop
aaa
push
xor
mov
add
lock
out
mov
in
stc
enter
xor
mov
cld
pop
jle
jo
adc
fdivrl
dec
nop
lcall
mov
cmc
imul
mov
inc
lcall
jo
add
push
xorb
adc
in
movsb
sub
cmp
mov
out
fldl
clc
bound
mov
enter
jo,pt
out
test
mov
inc
add
mov
jo
fneni(8087
std
jmp
push
push
stos
push
lock
icebp
imul
adc
out
out
addr16
xchg
fnstenv
dec
fidivl
cmp
or
jl
push
inc
mov
jno
push
xor
push
pop
jb
fidivs
push
sbbl
add
test
mov
pop
lcall
sti
jo
or
adc
rcrb
cmp
gs
jo
shlb
mov
imul
xorl
pop
mov
push
cmp
jl
sbb
jo
sbb
and
out
cwtl
jo
call
adc
ja
sbb
pop
adc
sub
test
lock
push
insb
dec
push
aam
inc
fdivl
out
mov
stos
mov
lcall
in
in
xor
mov
xchg
xchg
scas
mov
adc
ret
or
mov
repz
aad
dec
cmp
sub
mov
add
out
cmp
sbb
loopne
insl
jl
inc
mov
add
xchg
jo
ss
sahf
xor
jo
mov
adc
mov
push
popa
imull
scas
arpl
insb
jmp
xchg
inc
aad
push
xor
int
mov
push
mov
jno
outsb
push
insb
jns
add
ja
inc
in
mov
xchg
mov
lahf
mov
inc
outsb
sub
stos
xor
and
loopne
sbb
std
adc
jbe
xchg
sbb
insl
pop
jnp
cwtl
and
push
inc
xor
insl
inc
and
scas
rclb
xchg
div
arpl
or
jo
sub
jo
insl
mov
push
andb
mov
sub
notl
outsl
jecxz
jo
lcall
jns
in
push
enter
ss
xchg
pop
mov
movl
pusha
push
jnp
and
xorb
movsl
loop
jae
fsts
pop
leave
jo
push
adc
cwtl
xor
aad
in
mov
mov
outsl
popf
stos
dec
cmc
mov
sbb
sbb
mov
lock
jo
jb
cmp
out
jp
inc
jno
xor
push
sbb
pop
pop
xchg
xorl
add
and
imul
adc
inc
dec
loop
sbb
xchg
sbb
jae
out
daa
fldt
jo
cs
add
outsb
divb
je
fwait
xchg
cwtl
pusha
mov
ficoms
lock
push
adc
popf
dec
jo
push
pop
pop
in
fimull
shll
repnz
inc
pushf
icebp
jo
jp
mov
sbb
mov
fadds
loopne
pushf
mov
pop
mov
stos
jo
sar
pusha
push
jno
xchg
pop
jl
jae
jo
cs
into
dec
push
out
mov
call
xor
adc
push
outsb
pop
shlb
fwait
lock
scas
leave
pop
hlt
jo
js
push
push
jno
jo
sbb
lods
jo
out
xchg
mov
jo
lea
loop
push
add
cmp
or
clc
sub
pop
fnstenv
popf
or
gs
outsb
fisttps
repz
jo
mov
movb
pop
loop
pop
scas
ror
mov
fcmovb
sub
mov
dec
das
fst
jo
decl
push
pop
mov
lock
xor
stos
lcall
sbb
lahf
pop
insb
lock
inc
cmp
ret
sbb
jnp
aaa
imul
ljmp
scas
adc
xor
call
enter
cmc
cwtl
ja
push
cmp
leave
jo
movsb
push
fwait
push
fnstenv
in
mov
nop
jle
mov
movsl
inc
jo
add
ret
fimull
insl
loope
mov
das
pop
push
mov
mov
arpl
cmp
popa
sarl
jg
dec
inc
ret
sbb
out
jae
jo
xor
jmp
outsb
ja
adc
xor
jmp
mov
pop
push
inc
scas
arpl
xor
mov
lahf
lea
cmp
enter
rcr
jo
hlt
dec
bound
insl
xchg
cs
sbb
ss
jg
sub
scas
jo
mov
inc
mov
inc
lock
cltd
pop
add
jo
mov
icebp
push
movsb
je
pop
mov
jb
stos
mov
ret
test
jo
ficomps
adc
pop
jo
adc
xchg
call
ficompl
loop
jo
xchg
fcmovnbe
gs
push
pop
test
pop
sub
or
push
jo
and
dec
adc
and
pop
jo
out
mov
mov
scas
xlat
aad
fs
mov
inc
cwtl
sti
imul
imul
mov
addr16
mov
or
fwait
stos
xor
mov
jo
adc
fdivl
mov
adc
sub
ds
dec
and
xor
lock
leave
xlat
ja
or
stos
dec
loopne
sahf
fmul
jo
mov
lret
or
pop
lahf
xchg
mov
dec
sub
jae
push
and
jo
inc
iretw
xchg
pusha
cmpsb
mulb
aas
xchg
xchg
jo
pop
jne
mov
insl
icebp
out
mov
jnp
jnp
cmpsb
rcll
aaa
add
pop
lea
fcmovbe
into
xchg
rcll
jp
mov
xchg
jo
jbe
sbb
sub
jo
lods
jge
test
mov
rclb
cs
jbe
lock
inc
pop
jns
adcb
xchg
in
jle
insl
xor
or
insl
stc
xchg
testl
pusha
jb
aad
call
xchg
jle
jnp
fs
add
add
xor
pop
push
gs
int
insl
dec
shlb
pop
jo
scas
in
xor
jo
jmp
push
shll
jp
jb
mov
cmp
mov
push
shll
rcrl
out
inc
adc
pop
mov
pop
mov
cwtl
cmpsl
mov
testl
scas
xchg
or
jae
fcoms
cld
shl
nop
divl
fcmovbe
mov
jo
or
mov
xor
push
addr16
fildl
pop
add
inc
jo
mov
test
xchg
jo
lods
lods
iret
in
jnp
push
call
fistl
or
cmc
jno
adc
enter
xor
jle
sbb
mov
pop
insb
cmp
jo
push
or
xchg
aad
push
xchg
bound
dec
jo
stc
rolb
outsb
cmp
mov
gs
fimull
add
mov
cmpsl
lahf
mov
mov
nop
insl
jecxz
frstor
test
mov
aad
adcl
jmp
repnz
mov
xchg
stos
xchg
adc
mov
scas
mov
fisttpll
fdivl
jge
shrl
call
sub
pop
jne
push
sbbb
sbb
ret
lock
shll
push
jp
jno
out
aam
fsubl
mov
mov
mov
icebp
jae
test
mov
push
xchg
jo
and
mov
leave
lcall
testb
inc
and
jo
mov
pop
dec
insl
mov
jmp
dec
shlb
xor
lea
cs
popf
dec
cmp
orb
jle
lock
jl
imul
repnz
orb
hlt
jo
aam
fistpl
xor
js
cmp
sub
rcl
out
and
add
or
inc
inc
mov
fdivs
pop
repz
mov
and
pop
int3
mov
push
mov
leave
imul
inc
iret
jo
inc
bound
mov
mov
or
mov
lods
nop
sub
das
dec
xchg
or
and
mov
mov
sub
fistpl
push
mov
push
mov
jo
movsb
inc
lods
fsts
stc
xor
sbb
jno
push
sbb
jo
sbb
ljmp
sti
jo
out
mov
filds
mov
fwait
in
ret
insl
xchg
imul
adc
pushf
inc
cmp
int
mov
out
fldln2
insl
sbb
popf
lods
mov
stos
xchg
and
mov
imul
push
ret
aaa
mov
jo
iret
enter
xor
jb
push
aam
mov
jo
sub
mov
jo
stos
mov
nop
adcb
rorb
fistpll
jne
fcompl
pop
ud0
push
test
mov
dec
jbe
jo
xchg
ljmp
mov
xchg
sahf
nop
cmp
repz
sti
lahf
mov
inc
xor
and
jo
sub
mov
ja
loop
adc
xor
push
mov
pop
cmp
mov
sbb
outsb
es
ja
cmp
cmpb
lds
ret
nop
enter
ja
mov
insl
inc
int3
fstpl
sbb
insl
jge
mov
loope
mov
out
jo
scas
popl
xor
mov
iret
outsb
cltd
addb
sahf
lock
mov
fwait
push
jp
mov
faddl
lea
hlt
rcl
jo
ret
fsubl
jo
test
enter
jo
sbb
push
bound
data16
cwtl
adc
repz
insl
jnp
je
testb
sub
lea
pushf
fwait
arpl
lds
or
pop
test
in
roll
iret
stc
jo
adc
mov
jae
lret
push
mov
ja
mov
pop
add
jg
xor
daa
shll
loop
add
mov
ss
or
mov
cmp
das
repnz
mov
mov
insl
cs
add
xor
inc
dec
in
jbe
jg
call
jo
lret
sbb
jo
repz
clc
mov
pop
push
jo
rcrl
lahf
int
or
loop
push
jo
mov
dec
xor
xchg
cmp
call
dec
pushl
xor
cmpb
jecxz
addl
fdivrl
cmc
mov
pop
test
sub
fneni(8087
insl
cmp
mov
adc
mov
mov
cld
jo
mov
mov
mov
mov
jb
js
push
dec
mov
nopl
aaa
dec
icebp
jo
les
jo
jle
ret
mov
in
cmp
fstpt
jo
xchg
mov
outsb
push
aas
pop
lcall
push
xor
or
xchg
loopne
jo
enter
jmp
cmp
aad
ja
push
iret
outsl
movb
std
jp
sbbl
inc
push
push
fcoms
adc
sbb
jno
sbb
scas
test
ja
shl
xor
loopne
mov
fidivrs
movsl
dec
adcb
jo
jne
pop
testl
push
dec
sub
sub
add
pop
dec
repz
lock
in
inc
ja
add
or
pushf
lahf
call
ret
daa
les
test
out
jo
push
call
ret
adc
add
aad
jl
jo
hlt
adc
jo
std
mov
test
add
sbb
mov
dec
iret
or
xchg
xchg
push
repz
pusha
xchg
mov
cwtl
adc
sub
jo
pusha
cli
mov
cmp
mov
dec
jo
or
ret
call
repz
add
je
inc
and
scas
dec
inc
mov
add
jo
ds
mov
jno
mov
ja
imul
frstor
xor
jns
fildl
xchg
shll
jo
into
jno
adc
orb
ret
mov
inc
les
inc
jo
mov
push
jo
dec
setnp
fdivl
jp
add
mov
pusha
jo
push
cli
or
push
mov
mov
shrl
jne
lock
push
sub
icebp
sbb
mov
jns
in
addr16
jae
lods
ret
and
cmp
shrl
jmp
xorb
push
dec
into
pop
lock
enter
inc
xchg
lods
or
addr16
cltd
filds
lock
shll
mov
adc
xor
call
jbe
sub
jl
mov
dec
cwtl
adc
pushf
outsb
inc
sti
gs
mov
xor
and
rorl
stc
adc
mov
lock
jo
testl
pop
adc
sub
jmp
cmpsb
xor
push
mov
jecxz
cmc
seto
push
aad
outsb
push
mov
and
or
or
xchg
std
repnz
lahf
jle
cmpsl
rclb
sahf
mov
dec
hlt
or
andb
fstpt
outsb
xchg
sbb
mov
roll
inc
cmp
ljmp
enter
xchg
cld
inc
xor
mov
add
cmc
arpl
sahf
ja
cld
pop
and
or
nop
xchg
jo
push
fxch
xchg
aas
cwtl
jo
dec
sbb
aad
inc
jo
outsb
movsl
cmp
jo
pop
mov
aaa
jmp
cmpsb
jo
aas
movsl
hlt
push
cwtl
xchg
sbb
movb
xor
lcall
hlt
lea
test
pop
pop
dec
sbb
js
ljmp
shll
inc
jnp
and
movsb
mov
pmullw
insl
ljmp
movsb
aaa
dec
jo
ja
jno
insl
fbstp
lahf
popa
aad
sub
push
jo
jle
push
and
jo
sbbl
add
fnstenv
xchg
pop
pop
movsb
push
mov
scas
lods
push
jo
jnp
xchg
je
sahf
lods
xchg
jo
jecxz
cmp
insl
mov
or
inc
lahf
add
iret
fimull
mov
xchg
xchg
cmp
mov
sub
xor
xchg
lock
call
loope
sub
jo
js
fimuls
cmp
iret
mov
dec
mov
sbb
push
jecxz
xor
test
jo
pop
clc
add
jne
dec
out
outsb
xor
leave
sub
sbb
cmp
in
and
jo
add
push
inc
sbb
jo
xor
fnsave
push
aaa
inc
adc
loope
jo
push
dec
and
jno
add
insl
andb
hlt
jo
nop
int
test
je
sbb
push
imul
cmp
pop
daa
shlb
lock
pushf
movsl
pop
jo
fsubs
jae
push
add
mov
xchg
jae
movsb
push
xlat
fwait
adc
push
jo
or
xor
ja
push
jge
loop
aam
repz
or
popf
jo
cmp
pop
inc
arpl
hlt
les
xor
add
mov
mov
enter
pop
mov
or
push
loope
xlat
in
gs
xchg
jp
shll
xchg
adc
rcl
mov
lret
rcl
jo
inc
cwtl
or
lods
push
insb
jno
mov
jo
out
adc
test
pop
pop
pop
in
lea
mulps
ja
aad
or
aaa
adc
in
ds
jbe
pop
loope
std
sbb
dec
mov
jo
mov
mov
insb
push
repnz
pop
mov
cmp
cmp
adc
jo
cmpsb
ljmp
fwait
out
sbb
loopew
mov
dec
jbe
adc
jo
icebp
or
jo
std
lds
dec
mov
in
mov
push
daa
sub
jo
rorl
call
mov
pop
std
lahf
jge
dec
adc
lock
push
aam
sub
jo
nop
dec
cmpsl
push
cli
jmp
push
cmp
repnz
pop
fildl
push
incl
imul
cmp
sub
xor
xor
mov
dec
stos
add
cmpsl
jo
xor
push
imul
aam
adc
mov
adc
and
push
push
xor
add
mov
out
aad
adc
cmp
jge
mov
out
pop
pop
add
pop
add
xchg
test
xor
pushf
mov
mov
out
pop
mov
rorb
pop
lcall
jo
push
sbb
shlb
dec
jle
adc
xchg
sub
js
add
mov
jecxz
fnstenv
and
pop
and
push
push
aam
adc
mov
or
jo
out
cmp
cmp
iret
jo
mov
in
jle
dec
sbb
das
lock
stc
imul
sahf
jns
fnstcw
mov
imul
jle
mov
rorb
repnz
jo
fisubrl
incl
or
mov
xchg
add
xchg
or
dec
jae
fnstcw
ret
pop
imul
insl
data16
jb
xchg
mov
or
mov
fstp
jo
in
add
inc
sub
fs
jo
fldt
xor
xchg
dec
dec
jecxz
scas
aad
jo
sbb
aaa
shlb
test
mov
jo
ret
or
jo
hlt
add
data16
push
inc
inc
icebp
mov
jo
cmp
cmp
sbb
xchg
iret
add
scas
mov
fcoms
jp
les
outsb
mov
imulb
js
scas
das
dec
pop
repnz
sub
or
jb
xor
loopne
rorb
lock
stos
cmp
idiv
or
lcall
mov
aam
jae
jns
je
push
xor
and
mov
adc
sbb
lahf
loope
push
mov
jo
mov
mov
lock
popf
aaa
ret
adc
out
jae
cmp
ds
jo
dec
sub
fimuls
jg
mov
lret
aas
shrl
ja
mov
inc
add
outsb
leave
cmp
sub
adc
bound
aaa
dec
std
jo
mov
sbb
push
repz
js
in
mov
jo
daa
dec
mov
and
cli
adc
int3
jo
jl
nop
jbe
add
jl
cld
imul
test
les
jo
lds
call
pop
lock
xor
adc
js
test
aam
cli
sub
cmpsb
dec
popa
ret
push
mov
jo
js
jmp
xlat
clc
xor
cmc
mov
cld
jo
cmpsb
aad
das
testl
xchg
add
out
outsb
pop
je
sub
sti
xorb
in
fildll
ja
sub
sub
pop
dec
movsl
push
in
pop
pop
jo
fyl2xp1
push
xchg
xor
jle
dec
cmp
xor
sti
jo
dec
fbstp
sub
mov
insl
dec
in
xchg
lret
into
stc
fildl
inc
jl
aad
roll
movsl
xchg
leave
arpl
shr
adc
xor
fld
iret
pop
lea
pop
lock
xchg
jbe
pop
pop
rcr
lret
sub
xor
fldl
jo
push
push
outsb
push
mov
cmc
test
adc
inc
jo
daa
adc
cld
dec
rorb
pop
pop
mov
fstps
push
xchg
push
xor
inc
add
lods
add
dec
inc
xor
and
ljmp
jb
mov
cmc
arpl
jge
jo
and
and
popa
fwait
sarb
sub
enter
fnstsw
cmpsb
addl
sbb
or
mov
ja
mov
jbe
mov
jo
mov
lods
roll
jp
sub
shll
notl
lea
std
jmp
lock
lock
pusha
insl
dec
fnstsw
sbb
lcall
mov
add
mov
or
adc
stc
jo
lea
ja
leave
lock
jo
mov
pusha
push
pop
sbbl
mov
aad
mov
push
lock
rcl
push
lock
insl
notb
mov
insl
mov
jae
std
adc
rcl
jo
mov
outsl
push
es
jo
add
leave
inc
orb
mov
aad
adc
push
mov
int
shlb
xor
pop
sub
jo,pt
pop
dec
inc
sub
dec
and
in
cmpsb
fmuls
aaa
push
pushf
inc
stos
aad
and
or
icebp
fdivrs
imul
push
push
dec
dec
adc
or
adc
pop
pop
scas
aas
aad
sbb
mov
call
jae
cmp
jo
cmpsb
insb
movsl
push
int
rcr
in
cmpsl
sbb
xchg
add
out
pop
xor
mov
je
adc
push
sub
mov
loopne
jo
ret
out
arpl
cmp
insl
out
jb
mov
scas
push
cli
pushf
insl
test
cmp
bound
mov
mov
jo
std
jne
xchg
jo,pn
adc
and
sarl
jae
ja
push
xor
xchg
pop
inc
cwtl
xor
adc
imul
cmp
inc
cwtl
lock
jo
fistpl
fnstcw
insb
ja
rcl
pop
sbb
xchg
jo
cwtl
fsubrs
imul
test
push
mov
push
pop
dec
jae
lds
sti
into
xchg
jo
add
xchg
loop
jo
sub
jg
ds
jo
fwait
sahf
sbb
test
cli
ja
jo
pusha
xor
jno
jne
out
fwait
lock
call
lods
sarb
cmpsl
jae
mov
sti
jae
push
lcall
lods
data16
jecxz
mov
nop
call
xor
loopne
enter
adc
test
mov
mov
in
nop
xor
xlat
std
inc
in
mov
shll
sbb
xchg
push
mov
xor
mov
nop
in
insl
ss
xchg
sbbb
cwtl
nop
pop
adc
aad
bound
js
xor
jl
xchg
cmp
jae
cmpsl
cmp
inc
loopne
jns
mov
fwait
jo
sarb
mov
andps
ja
push
xor
push
loopne
insl
pop
inc
jo
dec
leave
mov
jo
jb
jl
aaa
fimull
jge
add
aam
xor
pop
lcall
hlt
or
sbb
into
add
popa
outsl
gs
fprem
cmp
shr
into
inc
addr16
pop
and
test
lahf
sub
sbb
jo
repz
cltd
jo
sbb
or
dec
addr16
cmpsb
pushf
loop
add
cmp
inc
ja
pop
adc
jb
dec
jo
addr16
jge
xor
scas
jo
mov
fs
or
pop
pop
daa
cmp
jo
shll
dec
test
std
mov
aas
lret
popf
sbb
gs
fildl
mov
mov
sahf
lock
test
rclb
sbb
fcompl
pop
cmp
lret
int
xor
sbb
cli
push
ds
hlt
sahf
push
test
dec
sbb
pop
loop
data16
dec
outsl
mov
pop
jg
xchg
aad
ror
jo
mov
xchg
jo,pt
pop
xchg
jo
outsb
add
repz
fabs
push
push
inc
mov
sbb
inc
xorl
add
mov
aad
lock
enter
adc
mov
in
xchg
sbb
xlat
sbb
scas
aad
cs
std
mov
mov
sbb
lock
mov
stos
push
fsubr
inc
es
in
leave
ja
jbe
gs
dec
aad
lock
xor
mov
jbe
shlb
jo
and
aam
neg
jo
dec
push
js
pop
sub
out
jo
ss
mov
ja
push
mov
dec
xor
jo
mov
xorb
dec
add
jge
cmpsl
shlb
in
adc
popa
inc
xchg
mov
mov
xor
sbb
mov
out
mov
jns
addb
test
sub
fstps
jge
push
and
push
push
inc
cmp
pop
enter
adc
ret
jae
data16
dec
std
roll
aaa
stc
out
jo
add
cld
jo
jg
fbld
outsl
inc
out
push
jo
sub
dec
enter
mov
movsb
or
add
jae
rcr
ljmp
pop
pop
test
or
xor
sbb
jne
rcrb
add
adc
in
jo
push
aad
scas
inc
outsl
jo
imul
xor
xor
inc
fnsave
jge
sub
jo
pop
mov
adc
aad
fists
cmp
testl
xchg
xor
cli
lea
pop
push
ljmp
push
mov
fsin
push
add
xchg
shll
filds
scas
insb
mov
dec
mov
adc
pop
shlb
jp
in
fs
adc
push
out
jo
mov
cmp
cmp
jle
addr16
jle
outsb
or
push
and
out
push
cmp
mov
js
aaa
pop
or
movsb
cmp
xor
jo
fidivrs
inc
add
jle
jo
sub
jo
xor
mov
mov
dec
scas
pop
pop
js
push
lock
jmp
inc
mov
inc
jo
mov
enter
dec
notl
test
insl
leave
fldl
xchg
int3
cmpsl
jne
jb
outsl
pop
inc
push
xchg
mov
xchg
subb
cmp
fwait
data16
ljmp
xchg
in
lods
std
mov
mov
ljmp
or
js
inc
add
loope
jae
dec
jecxz
outsb
in
mov
inc
xor
and
mov
or
insl
jo
adc
fistl
jl
jg
lcall
mov
xlat
into
jnp
inc
jp
jo
je
stos
insl
xor
mov
shll
jns
xchg
push
jne
imul
xor
or
aaa
mov
mov
mov
std
rclb
ja
jo
out
push
cmc
insb
cmp
jns
jb
mov
push
jo
or
divl
jmp
or
pop
lret
insl
sbb
xchg
sub
ss
pop
shrb
xor
and
dec
push
and
xor
adc
dec
mov
bound
push
test
jbe
jo
lods
lcall
dec
xor
add
loopne
xlat
lahf
pop
or
in
push
push
hlt
push
inc
jnp
ja
pop
cmp
rcrb
push
es
int
push
cmp
xchg
divb
sbb
jne
dec
shrb
jo
repz
mov
out
enter
fnstcw
cmpsl
sub
dec
jmp
adc
stc
jo
ret
mov
push
dec
outsb
mov
cltd
push
in
mov
hlt
inc
jl
mov
adc
jo
cmpsl
js
xor
ret
shll
es
outsb
and
sti
or
ja
ss
int3
push
add
pop
aad
jo
cmc
jp
sub
fimuls
mov
loopne
insb
xor
cmp
cmpsl
std
shrb
or
popa
ret
loop
jo
aam
pop
mov
jl
insl
xor
push
icebp
adc
jo
xlat
leave
ret
push
popa
and
shl
push
lcall
daa
jo
dec
pop
sub
cmp
jnp
cmp
cmp
shl
mov
and
rcr
adc
aad
insl
repz
lods
mov
jae
xchg
mov
movb
cmpsl
xorl
jno
fmuls
mov
std
mov
sub
push
pop
jo
cmp
enter
adcb
ficoml
xor
mov
lcall
jno
das
and
dec
test
pop
lret
popf
jecxz
jo
and
lods
aaa
jp
cmp
loop
loopne
into
fnstcw
jo
jge
mov
cmp
je
jnp
cmp
xor
lock
fsubrl
mov
out
pop
xor
pop
push
pop
fidivs
call
push
ret
sbb
fmul
lock
call
test
repnz
lahf
insl
mov
xchg
fldcw
ss
inc
inc
test
jo
shlb
bound
mov
xchg
sub
sub
ss
jo
dec
inc
or
xacquire
adc
bound
lock
xor
adc
aad
mov
sub
andl
jl
lahf
mov
ret
dec
push
stos
mov
popa
es
jne
cwtl
pushl
mov
lds
test
int3
dec
outsb
lock
into
cltd
push
jo
sbb
inc
shlb
jb
mov
sbb
addr16
lret
aaa
adc
push
adc
outsb
shlb
dec
mov
mov
or
test
dec
lret
test
push
outsb
mov
in
mov
call
mov
arpl
cmpsb
aas
insl
sti
test
rolb
mov
lods
scas
pushf
enter
cmp
cs
jne
ss
stc
inc
sbb
or
and
sub
adc
std
popf
divl
push
xchg
je
in
ss
mov
jbe
dec
adc
loopne
fldt
imul
arpl
pop
hlt
jo
sub
push
and
rcrb
fcmovb
sbb
jne
cmp
cmp
enter
jnp
pop
mov
cmp
add
jae
sub
jp
mov
xchg
add
xchg
out
cmp
lods
scas
or
fcompl
dec
mov
mov
scas
push
jo
lock
in
lea
bound
fdiv
ljmp
sub
add
or
xor
mov
cld
sbb
jle
shl
mov
pop
jnp
movsb
cs
lock
sarb
add
jo
lret
xchg
sahf
xchg
jo
xchg
sub
mov
push
mov
mov
ljmp
shlb
lret
sahf
fisttpll
shrl
lcall
cmp
jmp
loope
lret
cltd
push
sub
pop
cmpsb
xor
pushf
xorb
test
outsb
mov
mov
rcrb
fcomps
jae
aaa
mov
mov
xchg
or
sbb
mov
out
into
aaa
loop
aad
inc
jae
pushf
pop
in
mov
fucomip
jo
popf
jl
dec
inc
dec
inc
jo
nop
jmp
jp
jnp
out
es
pop
inc
repnz
sbb
lret
scas
shrl
pusha
pop
or
xchg
aad
jo
into
mov
mov
je
outsb
inc
outsl
xchg
stos
nop
das
mov
sbb
sahf
lock
mov
xor
or
jo
mov
jp
cmp
cli
pushl
push
xor
cltd
lods
sahf
leave
fstpt
scas
push
adc
outsb
jo
or
pop
mov
adc
fsubl
jo
mov
sahf
nop
insl
lea
push
dec
inc
insl
cmp
mov
pop
fstpt
xbegin
xor
cmp
xor
repz
movzbl
mov
cmp
xor
mov
jo
fcmovne
mov
insb
fsubl
pop
push
pop
inc
pushf
aaa
lea
pop
mov
lods
sbb
insb
mov
jo
xor
cmp
or
add
push
jbe
jo
push
push
push
mov
push
jae
pop
cmp
daa
mov
sbb
push
sub
sbb
or
xchg
loop
mov
jb
or
add
mov
in
pushf
mov
dec
jo
mov
sbb
std
jo
rcl
loope
push
mov
or
fmul
fstps
mov
or
mov
jb
rorl
fs
mov
insl
xchg
test
mov
sbb
ds
and
xor
cltd
fisttps
lock
es
in
push
xor
aaa
loop
jb
inc
ror
jo
mov
shll
sbb
lea
dec
add
cmp
pop
jae
fcom
mov
jno
jnp
and
into
lock
pop
xor
jne
gs
push
daa
dec
xor
je
and
std
mov
sub
inc
rclb
out
push
sub
xorl
push
adc
and
add
cmpsb
jo
subl
jnp
mov
adc
lock
insl
shld
lret
mov
cmp
outsb
sub
js
sub
and
xor
movsl
pop
dec
shll
jecxz
mov
rorb
mov
fcoms
dec
int3
aaa
in
pop
shlb
mov
cmc
jo
out
loope
sbb
dec
pop
push
jmp
mov
push
and
fidivs
fs
stos
pop
pushw
ja
outsl
pop
push
jo
xchg
cmp
jo
mov
movsl
pop
jae
or
jge
sub
je
push
stos
loop
lret
arpl
dec
jo
in
fucomi
rolb
adc
in
loopne
sub
push
ss
sahf
xor
aad
push
in
jo
xor
fwait
cmp
xor
jo
movsb
pop
inc
aam
dec
adc
out
jno
cwtl
adc
lahf
sub
xor
mov
aas
mov
dec
mov
scas
in
pop
mov
xchg
jo
dec
and
xchg
fdivs
inc
xchg
insb
cmp
mov
push
jo
xor
jae
xchg
pusha
mov
xchg
sbb
ja
pop
loopne
mov
xchg
loop
xchg
jo
mov
dec
lcall
sbb
sbb
sbb
pop
cli
inc
fcmovnu
push
in
outsb
jmp
sbb
xchg
jmp
push
fidivl
pop
imul
icebp
loopne
mov
adc
jo
lahf
sub
out
xor
dec
call
in
out
jnp
and
or
xlat
dec
jo
sub
pushf
jo
pop
ret
in
sbb
ljmp
jo
fdivs
mov
fxch
imul
aad
test
cmp
sti
xor
jo
pop
push
call
jo
fcmovnb
cmp
push
jo
mov
outsb
pop
scas
leave
rclb
lret
lock
adc
or
and
stc
lods
or
andb
xchg
mov
mov
pop
push
shlb
sbb
fnsave
jae
loop
xchg
xchg
jo
pop
push
pop
mov
xor
jo
inc
sbb
subl
jb
les
fisttpl
sahf
ds
leave
int
sbb
mov
add
jp
les
mov
mov
loope
mov
jg
sti
fiadds
pop
pop
outsb
jne
cmp
lcall
setne
insl
js
xchg
cltd
hlt
or
mov
repnz
sub
outsl
jo
jmp
jae
jo
fwait
aad
out
adc
jo
in
pop
outsl
lds
xchg
ja
mov
popa
into
in
dec
xchg
jne
insl
and
lock
mov
test
lcall
sbb
xchg
mov
push
lds
cwtl
das
jo
mov
mov
pop
ret
ljmp
or
cmpsl
mov
adc
ret
cli
xor
push
imul
xor
rorb
mov
pop
test
push
pop
sub
sub
repz
enter
dec
pop
mov
mov
xor
mov
xor
and
sub
mov
jo
push
test
jno
jno
mov
push
push
lock
popf
orb
test
lahf
ret
pop
repnz
mov
cmpsb
les
add
in
loope
jo
rorl
jae
in
out
xlat
fcomp
lock
jo
popf
mov
mov
subl
jp
inc
xchg
sub
arpl
insl
lcall
jo
jge
dec
mov
cmpsl
dec
mov
pop
insl
xchg
ljmp
repz
xchg
xor
push
je
xor
xchg
std
lret
jo
fsubs
arpl
cmp
push
loop
stc
mov
outsb
out
mov
jle
aad
mov
es
mov
or
lock
dec
sub
ja
cmc
push
jle
mov
jo
inc
clc
fwait
pop
int3
push
jo
insb
mov
xchg
pop
jo
testb
pop
and
jo
cmp
jo
adc
pushf
mov
adc
hlt
scas
mov
leave
jne
add
fninit
push
inc
ret
imul
mov
cmp
in
lods
jg
orb
jge
mov
xor
out
outsb
cwtl
jae
sahf
leave
jmp
outsl
jo
push
popa
pop
orb
push
mov
push
and
scas
cld
jo
add
movsb
sub
rolb
jae
or
popa
pop
jo
mov
xchg
decl
jo
popf
xor
jo
sbb
mov
mov
or
xor
jo
loopne
je
mov
sub
cmc
rep
inc
rcrb
rorb
repz
push
mov
mull
scas
jo
mov
and
jo
xchg
fwait
xchg
push
shll
push
test
mov
xor
jl
fsubl
cmp
jo
cmpsb
aam
adcl
pop
mov
adc
dec
pop
incb
lea
jecxz
rclb
jo
sbb
and
pop
push
jo
fwait
cmp
fistpl
test
fnstcw
jo
scas
pop
mov
or
xor
push
jns
jp
ljmp
mov
shrb
inc
mov
inc
cmp
jo
sbb
cmp
aad
loopne
jae
iret
mov
dec
xor
sub
stos
jmp
pop
jo
adc
push
popf
sub
add
jo
imul
insl
add
jae
repz
ret
xchg
pop
jo
lods
into
and
cld
lcall
rorw
jb
mov
ja
xor
cmp
nop
imul
ja
push
mov
push
leave
mov
dec
xchg
xor
jo
jb
fistl
mov
cmp
inc
jo
xchg
cli
sbb
cmp
jg
xchg
inc
pop
inc
repnz
jo
mov
dec
push
jae
aaa
shlb
push
jo
cmp
je
jae
jbe
pop
out
jno
lock
outsb
push
mov
ja
roll
xchg
jecxz
test
pop
dec
sbb
les
mov
fwait
nop
xchg
pop
fistpl
cltd
mov
jo
adc
sarl
scas
jnp
movsl
push
adc
mov
or
jo
lret
mov
jo
orl
cmp
arpl
mov
arpl
xor
add
push
mov
clc
xlat
jg
sbb
pop
cwtl
not
mov
aas
jo
stos
mov
add
pop
insl
lea
jnp
jbe
cmpsb
lock
sub
mov
mov
lock
mov
fbstp
mov
sub
dec
xchg
pusha
addb
jne
loope
cmpsl
xor
imul
cmp
jecxz
mov
je
lcall
mov
push
jl
pop
inc
mov
sbb
push
fwait
pop
xchg
lock
pop
mov
sbb
lods
movsb
xchg
cld
movsl
jae
rcl
add
jo
dec
stos
negb
inc
insl
mov
pop
and
fdivrl
rcr
mov
xor
shl
jp
jo
jb
xchg
sbb
cmp
std
mov
mov
lock
pop
xchg
lret
jo
pushf
mov
dec
add
jo
mov
punpcklbw
dec
push
jo
movsb
data16
mov
pop
adc
cmp
stos
fldenv
shlb
loopne
add
clc
les
cmpsl
xchg
jo
adcb
and
negb
mov
xorb
lea
orl
mov
cltd
jo
pop
push
shll
add
mov
insb
stc
mov
cmpsb
push
and
sbb
gs
or
out
in
mov
arpl
inc
xchg
jnp
icebp
jo
push
dec
push
adc
jo
mov
cmpsb
mov
mov
enter
adc
jb
out
jo
dec
inc
lods
neg
jo
ljmp
je
adc
inc
lods
dec
jmp
jo
xchg
pop
sti
cli
mov
popf
push
iret
sbb
lock
rcrl
push
inc
shll
int
mov
add
add
jo
mov
mov
sbb
aaa
adc
jo
mov
aas
cmc
jo
lret
insl
push
jbe
xorb
loop
cmp
imul
jo
xchg
xor
fdivr
cmp
es
mov
das
push
je
fwait
mov
lock
cwtl
cmc
pop
dec
mov
into
xchg
sbb
fcmovnu
push
dec
test
pop
mov
dec
sbb
imul
sub
adc
jge
jo
sub
fistl
jl
mov
outsb
push
mov
mov
fisttps
mov
xor
push
test
sub
xor
test
mov
mov
imulb
cli
fistpll
lods
jo
rolb
pop
outsb
pop
or
aaa
mov
push
jo
lds
in
or
dec
test
sbb
shrb
addr16
addr16
jo
sbb
nopl
mov
sahf
les
jo
lret
es
jo
mov
mov
jl
pusha
jo
sbb
pop
add
mov
inc
fsubrl
nop
cmp
das
cwtl
int
mov
fidivl
es
and
push
xor
pop
pop
and
insl
push
push
shl
test
int3
inc
pop
inc
inc
call
jo
dec
adc
aam
xchg
leave
or
add
out
mov
bound
rcrb
iret
in
rcr
cmpsl
push
rclb
lds
add
pop
jo
loope
dec
rcrb
pop
cmc
pop
inc
inc
jo
pop
adc
push
dec
call
inc
out
ss
scas
adc
fcompl
inc
fnstcw
cwtl
pop
test
sub
mov
outsl
xor
jp
nop
xor
lock
mov
out
jns
je
loop
mov
sub
repnz
jo
mov
sbbl
cmpl
stos
mov
out
adc
ss
mov
mov
sarl
add
mov
fisttpl
mov
xchg
imul
jge
insl
mov
inc
loop
sub
fs
rolb
lcall
jb
jmp
ja
cmc
add
xchg
lods
mov
jae
pop
push
xlat
dec
lret
cwtl
fwait
int
jae
adc
insb
aas
xchg
call
lret
scas
pusha
push
clc
sub
js
jno
jno
mov
jge
lcall
mov
jo
lock
movsl
outsl
xchg
inc
jp
jns
pop
lock
add
imul
cs
add
imul
jnp
enter
sbb
mov
mov
mov
inc
nop
jl
sbb
test
or
inc
fadd
jnp
stc
inc
mov
frstor
inc
jle
subb
adc
push
adc
jo
sbb
lock
and
mov
cmpsl
mov
xchg
push
push
xchg
mov
mov
xor
lds
mov
insl
adcb
jbe
mov
dec
fildl
aam
jo
mov
mov
in
lock
jne
mov
inc
test
sarb
nop
mov
test
out
lock
rol
lds
inc
push
cwtl
mov
into
fidivrl
jp
push
aas
lret
out
js
xchg
xor
in
mov
lock
clc
jl
scas
in
rclb
pop
and
push
mov
test
fldenv
cs
ja
insb
and
add
gs
or
divb
mov
jl
jo
mov
sbb
call
mov
mov
jb
add
add
lea
dec
xchg
pushf
fistpl
push
out
or
mov
add
add
daa
stos
jo
mov
lret
insl
mov
dec
fstl
stos
loope
imul
lret
imul
loopne
js
jo
mov
mov
add
xchg
int3
pop
xorb
mov
out
inc
cld
add
mov
fucomi
inc
cs
pop
mov
jecxz
lds
loop
sbb
cmpsb
or
jl
mov
dec
sahf
mov
lea
lds
sbb
ret
repz
or
xchg
lcall
rcrb
mov
aam
out
sti
lds
xor
push
jbe
shlb
jmp
dec
nop
jo
subl
adc
cmp
movsl
jo
pop
push
sbb
mov
pop
ror
lret
lds
inc
or
ret
push
xchg
mov
arpl
sub
cmpl
push
cld
or
jo
pop
ret
test
ftst
push
lds
cmp
jne
mov
leave
mov
nop
mov
sub
or
xchg
push
std
inc
jo
pop
push
inc
mov
popf
xor
leave
mov
add
shll
sbb
clc
jo
push
loope
jne
xchg
hlt
shlb
mov
lds
idivl
sub
idiv
int3
xchg
xlat
jecxz
ds
push
insl
pop
mov
xchg
insl
out
int
sub
jno
mov
inc
loop
inc
roll
fistl
subb
xor
push
sarb
std
cld
push
pop
lods
mov
jo
call
movsl
xchg
jo
push
inc
sbb
outsl
filds
int3
jne
dec
arpl
lock
and
pop
push
mov
jne
iret
ljmp
cmp
fmulp
sbb
leave
xor
and
add
arpl
aas
fistpl
jo
cld
pop
into
push
or
inc
push
in
stc
xchg
ss
loopne
jo
icebp
aad
enter
jo
cli
sub
lods
shlb
jo
int
push
mov
pop
jle
sti
mov
fcompl
push
fwait
jo
dec
lret
gs
or
push
xchg
cmp
mov
xchg
lret
mov
movsl
sahf
sbb
repnz
mov
mov
pop
imulb
inc
lahf
mov
out
jp,pt
add
mov
repz
push
sub
movsb
sub
ja
jae
lods
ret
in
mov
movsl
cwtl
nop
mov
or
mov
repz
jbe
fisubrl
bound
jl
fnstcw
dec
stc
shl
push
pop
jge
mov
notl
ret
sub
push
in
pop
pusha
loopne
mov
int
test
mov
addr16
jae
push
cmp
jmp
test
stos
lds
xchg
mov
push
push
jo
xchg
mov
and
sbb
insl
pop
out
shrb
add
pop
ljmp
scas
test
fwait
pushf
jl
dec
cmp
test
and
leave
sbbb
insb
push
enter
jo
pusha
lock
adc
in
inc
je
popa
add
int3
lock
ds
jp
jns
mov
jo
pop
adc
shll
sahf
out
cmpsl
mov
addb
jno
into
lret
in
and
rolb
sbb
mov
jo
test
jne
pop
std
add
push
mov
or
sbb
fbstp
xchg
dec
stc
mov
jnp
push
jo
pop
fldenv
mov
jo
scas
xchg
mov
aam
push
pop
popa
xchg
and
insb
mov
push
or
xchg
lock
js
cmc
mov
loopne
add
and
mov
adc
data16
loopne
cltd
pop
das
out
ljmp
cmp
jo
jmp
inc
xor
push
sbb
bound
cmpsb
mov
fmull
imul
mov
aas
not
sub
gs
in
test
mov
lea
adc
scas
jo
cli
mov
sub
fldenv
mov
jo
mov
pop
imul
mov
imul
mov
mov
mov
sbb
pop
and
fsts
inc
les
pop
test
mov
cmpsl
push
lret
mul
pop
mov
xchg
dec
xchg
push
ljmp
test
and
rol
add
iret
xchg
mov
sbb
std
xor
sbbl
push
inc
mov
inc
adc
shll
jecxz
jle
cmp
jo
jne
dec
pushf
inc
pop
adc
cmpsb
and
into
popf
jae
nop
cmp
jo
add
mov
mov
jo
ret
loopne
dec
push
jo
mov
fsubp
addb
loop
insb
fldt
push
mov
mov
movnti
pop
push
mov
sbb
xchg
movsl
int
pop
jo
std
xlat
push
push
je
jnp
imul
mov
insl
xchg
dec
mov
repnz
xchg
pop
jp
pop
das
div
mov
push
jo
dec
cmp
dec
cmp
sub
jp
push
aam
and
test
xchg
jo
stos
rclb
cld
jo
mov
int3
push
stc
movsb
jo
sbb
pop
or
inc
lret
push
call
out
inc
lock
xor
fiaddl
ja
mov
int3
les
cmp
cmpsb
mov
inc
jo
sub
inc
mov
sub
and
lret
sahf
fbstp
ss
mov
jns
pop
xchg
adc
sbb
aam
fldlg2
mov
movsb
mov
fdivl
std
lret
push
mov
jo
or
push
hlt
es
and
mov
jo
incl
mov
rcll
sub
lods
ds
mov
lea
sub
enter
push
enter
insb
and
dec
jo
js
pop
mov
xchg
push
sahf
inc
shl
jo
ljmp
jo
lods
int
xchg
hlt
mov
sub
ja
mov
inc
out
cmp
cmp
pop
sub
jo
xchg
lret
push
jo
dec
and
jnp
ficoml
mov
rol
cmpsb
in
push
dec
je
sub
es
insl
mov
rcl
xchg
mov
outsl
jo
nop
pop
xchg
or
inc
mov
rcrl
je
inc
mov
subb
cmpsl
inc
mov
rolb
stc
cmp
rcl
jo
in
movsl
push
and
dec
pushf
dec
loop
mov
movl
pop
call
add
xor
das
sahf
outsb
mov
lcall
add
std
jo
aaa
xchg
mov
loopne
popaw
mov
inc
fiaddl
subb
aad
and
dec
inc
mov
shlb
add
jp
adc
fdivl
sub
sti
sub
push
inc
jo
xchg
fidivrl
mov
mov
jne
xor
bound
pop
jo
out
push
std
ret
or
mov
scas
mov
sbb
xor
push
sarl
and
test
cltd
test
ret
leave
inc
jge
aam
pushl
testb
xchg
rcl
jo
andl
push
jo
jp
xchg
loop
or
sub
and
iret
jnp
jbe
test
xchg
jo
sub
fs
in
mov
lret
inc
out
les
xchg
jo
repz
pop
pop
pop
cmp
push
out
jo
mov
xor
jo
in
inc
shl
mov
fsubrs
jo
je
sbb
xchg
aam
dec
jo
mov
imul
jo
outsb
pop
sarl
jl
and
push
fidivrl
mov
ja
or
fcomi
add
andb
push
sub
fwait
pop
addr16
in
xor
pop
stc
lcall
nop
push
fildll
inc
jae
sub
sbb
lret
mov
dec
mov
mov
dec
lods
mov
dec
fmull
push
sub
add
cmp
nop
mov
mov
ds
add
cmc
mov
lea
insb
jno
fdivl
gs
jns
idivb
ret
pop
dec
into
jae
or
sub
xor
add
scas
mov
out
pop
push
cld
mov
enter
mov
push
cmp
rolb
data16
aam
mov
insb
insl
into
jo
lods
int
mov
xchg
lret
in
xor
xchg
daa
xor
movsl
leave
pop
cmpsb
and
mov
sahf
cmp
fiadds
jo
xchg
mov
in
gs
cmp
jo
inc
cld
cmp
sbb
pop
jo
adc
or
fcoms
jmp
jbe
xchg
jne
insl
or
cmp
push
push
arpl
movsb
mov
stc
xchg
aam
lock
sub
jno
mov
mov
mov
mov
xor
aaa
mulb
fisttpl
ror
dec
mov
insl
push
inc
mov
and
sbb
mov
inc
pop
fbstp
lcall
pop
xor
xchg
inc
ljmp
sbb
insb
daa
shll
insl
out
out
in
sti
std
inc
repz
jo
xchg
loop
mov
fcompl
sbb
dec
cli
pop
lret
leave
jo
dec
push
aad
outsl
cmp
sbb
rcrl
mov
jo
idivb
pop
xchg
shll
push
mov
jo
lret
xlat
jbe
pop
or
addr16
mov
loopne
pop
rolb
aad
in
aam
pop
leave
arpl
inc
sarb
xchg
aaa
mov
dec
add
loop
ret
xabort
mov
fistpll
scas
xchg
in
xchg
jo
sbb
out
daa
lds
aaa
cld
enter
loopne
mov
jo
and
pop
jo
mov
orb
dec
aam
lds
jo
mov
push
xchg
test
jp
xchg
jo
pop
cmc
gs
jge
mov
mov
andl
lock
scas
pop
sbb
enter
fnstenv
movntq
mov
xchg
dec
cmp
arpl
dec
sbb
push
cli
jl
pop
pop
mov
call
lods
dec
push
stos
jo
mov
scas
outsl
sub
sbbb
mov
imul
sbb
jne
cld
xchg
fidivl
xchg
in
mov
pop
lret
cmc
movsl
mov
outsb
sbb
enter
dec
gs
inc
cmp
mov
mov
or
push
ret
subl
gs
scas
and
cs
adc
lock
mov
mov
pop
int
inc
subb
lds
lock
xchg
add
out
xor
mov
aam
aad
ds
xchg
lock
mov
les
shlb
nop
sub
sti
add
pushl
lret
mov
ret
ja
cmp
hlt
adc
in
lock
mov
mov
xchg
pushf
sbb
lods
and
jo
jg
mov
cmp
cmp
dec
lock
aas
mov
insl
cmpsb
insb
and
sbb
cwtl
into
jo
xchg
outsb
inc
dec
mov
pop
cld
or
rcl
jl
jo
pop
mov
outsb
jo
ret
sub
push
push
insl
lret
cmp
adc
test
hlt
jo
sbb
adc
jo
cmc
jl
mov
adc
ja
fwait
ss
cli
nop
jb
lods
addr16
jnp
pop
xor
cltd
xchg
add
dec
push
mov
enter
imul
inc
sbb
icebp
mov
je
movb
repz
cs
push
sub
gs
inc
pop
int
outsb
dec
xor
jge
push
lods
push
pop
xchg
rclb
push
jo
lds
fisubrl
cmpsb
or
inc
mov
dec
and
mov
xor
push
dec
jo
push
push
es
mov
inc
or
push
mov
xchg
jmp
inc
mov
jecxz
mov
pop
mov
out
lods
sbb
jge
inc
mov
jno
adc
add
mov
xchg
and
aas
jno
mov
mov
push
xor
jo
pop
xor
pop
pushf
push
insb
jo
jbe
dec
push
test
adc
pop
push
jo
xor
sbb
mov
mov
pop
adc
dec
jo
sub
scas
addl
jnp
mulb
xor
adc
jle
mov
or
inc
call
mov
adc
dec
jo
inc
lret
push
pop
icebp
mov
sbb
xlat
rcrl
mov
push
xchg
jnp
ja
or
dec
ret
out
push
xchg
insl
cld
outsl
decb
cmp
push
add
shrb
loopne
in
pop
int3
fsubrl
mov
sub
inc
std
jo
fstpt
insb
cmp
jo
xchg
ret
sbb
fsincos
push
div
mov
pushf
scas
dec
xor
push
jmp
aad
jb
push
outsb
xchg
sub
call
out
jp
repz
outsb
or
dec
lock
in
pop
out
jnp
bound
pop
or
cs
ret
jp
out
xor
lret
pop
btc
jo
xchg
pop
and
mov
or
int3
cmp
jo
pop
adc
pop
enter
push
cwtl
mov
jo
xchg
and
sub
sub
insb
xchg
inc
dec
jo
ss
pop
scas
push
aam
leave
mov
ljmp
popa
cmp
fidivrs
loop
mov
jle
sarb
jo
loop
sbb
jnp
dec
add
das
mov
cmpl
or
xchg
sub
pushw
dec
jo
jns
jo
es
test
mov
fldz
out
xchg
roll
push
lock
test
icebp
cmp
scas
insl
xchg
js
push
shlb
push
mov
mov
inc
stos
push
dec
xchg
jo
mov
pop
mov
jae
lods
mov
mov
jo
mov
ds
in
jb
jo
sarb
xchg
in
fnstcw
inc
mov
adc
adc
mov
sbb
xor
nop
push
call
jmp
pop
insb
in
jo
pop
in
test
scas
jo
jge
aas
mov
imul
clc
hlt
imul
fsubrs
movsb
jno
adc
jo
fsubrp
ja
dec
sub
fwait
jo
mov
stc
jle
inc
je
test
das
mov
mov
xchg
aam
ds
shlb
cmovg
insb
mov
ret
jo
jns
rcr
add
insl
lds
faddl
into
ljmp
lea
xchg
enter
cmpsb
mov
jno
repnz
int3
fcomi
fs
inc
sub
lahf
jge
add
lea
inc
xor
ja
lock
xchg
enter
jl
fs
data16
std
sub
and
cli
jo
pop
stc
fwait
push
bound
cmpsb
mov
mov
cld
in
pop
pop
mov
lcall
adc
push
jo
lret
movsl
je
pop
daa
add
mov
mov
xchg
cld
add
std
push
test
mov
pop
aas
jmp
adc
outsb
shr
clc
lret
outsb
cmp
pop
int3
lea
leave
lcall
xorl
jo
dec
ret
or
mov
aad
mov
sbb
jne
xlat
sbb
jle
lock
dec
sub
imul
dec
mov
loopne
out
into
xchg
pop
cmp
sub
add
out
sbb
fwait
mov
cmp
xor
test
test
sbb
xor
mov
fsubrs
ret
pop
outsb
or
push
loopne
insl
xorb
add
aam
lock
fidivl
xchg
rcr
cmp
push
ja
test
sti
mov
fdivl
leave
dec
inc
cmpl
mov
jo
loope,pn
cld
xchg
outsl
fisttpl
lock
push
test
push
fs
data16
xchg
mov
mov
loop
fistpl
push
mov
lret
lock
ret
mov
imul
inc
and
stos
pop
jmp
push
je
fxch
push
arpl
lret
clc
cmc
xchg
add
dec
jp
fistpll
adc
js
pushf
cmp
jmp
jo
cmpb
mov
xlat
mov
rorb
fwait
ret
cmpb
sbb
inc
pop
insl
jo
push
push
mov
fdivl
movsb
lret
mov
jae
and
xor
jo
push
shrl
jo
std
push
push
inc
add
rolb
sub
ficoml
aaa
push
mov
and
fidivrl
icebp
push
fcmovne
bnd
in
mov
or
les
xchg
aaa
mov
loopne
jo
fistpl
jo
or
iret
sub
adc
dec
mov
rol
jo
inc
push
shlb
leave
jbe
dec
inc
stos
and
xchg
mov
push
mov
sbb
xor
fxtract
xor
mov
popa
push
push
divl
sarl
fcmovnb
repz
str
jp
fsubrl
adc
outsl
mov
cmpsl
jo
mov
aas
es
xlat
aaa
dec
push
xchg
push
jo
cwtd
mov
jo
mov
fdivl
push
xchg
pop
adc
pop
ja
mov
sub
adc
leave
xor
jmp
cmp
inc
add
mov
jne
lods
insl
ret
cmp
into
cmpsb
fimuls
dec
push
sbb
xor
nop
andl
sarb
adc
dec
sti
insl
ja
scas
or
pop
jne
stos
xor
push
sahf
xbegin
xlat
icebp
fistl
repz
loop
shrl
pop
in
jne
jo
lea
call
jge
sub
mov
jo
push
pop
gs
lret
pop
xchg
lods
call
loop
es
stc
pop
dec
pop
flds
jo
cmp
fmul
ret
lock
add
jo
test
in
pop
cmc
jo
pop
mov
xchg
jo
xchg
icebp
popa
mov
mov
jne
or
xchg
cmp
fdivrs
dec
and
out
leave
popa
inc
jo
jae
sbb
xchg
mov
jo
pop
cltd
stc
aad
add
jnp
ret
sarb
rorb
daa
pop
jb
sub
jae
test
into
data16
pop
mov
loop
fisubrl
push
out
jl
xchg
repnz
je
push
push
jbe
add
icebp
xchg
leave
fsubl
cmp
add
test
mov
ss
mov
mov
imul
in
xlat
es
jo
shrl
clc
jmp
jae
call
lock
or
xorl
outsb
push
jo
push
popf
pop
lds
sbb
mov
shl
inc
out
mov
mov
xchg
push
repz
inc
cmp
ds
dec
xchg
jo
mov
and
pop
mov
in
mov
xchg
adc
hlt
in
aam
arpl
aad
jbe
addb
arpl
push
outsl
lods
mov
das
cmpsl
int3
iret
das
cmc
out
mov
call
js
sbb
sbb
fstl
daa
sarb
lret
lds
mov
jo
pushf
xchg
push
mov
leave
lods
rcl
sbb
mov
cmp
insl
aad
mov
aaa
push
rcrl
push
push
insl
mov
fsubrs
lock
lds
add
fwait
lcall
cmp
mov
push
cmpl
lret
cmp
notb
iret
pop
fs
push
xlat
mov
jge
jmp
sub
jae
and
orl
mov
mov
jo
push
xchg
enter
mov
popa
push
cmpb
icebp
xchg
pop
push
inc
inc
jo
loop
es
leave
stos
nop
jo
mov
pop
fwait
pop
aaa
pop
enter
cmp
or
out
scas
loopne
or
cli
lret
adc
adc
into
push
xor
jo
push
idivb
push
jo
in
ficoml
sub
sti
data16
cmpsb
adc
inc
mov
mov
bnd
mov
das
mov
flds
sbb
pop
sub
xchg
lea
cmpsl
movsl
add
inc
aaa
fld
and
push
ds
cmp
bound
cmpsl
mov
mov
aaa
mov
outsb
mov
jo
dec
push
xchg
stos
and
push
rcl
lock
jle
enter
mov
jp
inc
push
lock
sbbb
stos
fsts
jge
xchg
clc
mov
mov
mov
shrb
out
aam
pop
push
mov
insl
outsb
push
push
pop
cmp
and
sub
jae
xchg
addr16
jnp
jo
outsl
movsb
jbe
aad
mov
je
jge
mov
and
jae
cmp
pop
xor
ds
and
xchg
sbb
push
loopne
pop
pop
sub
shlb
push
int3
cmp
xchg
leave
outsb
in
repz
push
mov
jo
mov
insl
scas
jo
inc
cmp
push
insl
lret
pop
jmp
adc
dec
scas
xchg
repnz
mov
mov
nop
sbb
lret
inc
jo
mov
sub
mov
addb
lds
mov
dec
jl
and
xchg
fldt
adc
mov
sbb
adc
popa
sub
popf
outsl
cmp
jo
jno
jne
pop
daa
push
ja
jl
xchg
loope
push
pop
lock
mov
jp
jg
lock
add
xchg
inc
int
arpl
xor
push
inc
movsl
iret
in
mov
cld
inc
fmuls
mov
scas
test
or
loopne
ffreep
imul
push
mov
jl
outsb
test
adc
daa
insl
mov
jecxz
lds
insl
cmp
push
sub
insb
mov
cmp
mov
leave
jo
addb
fcmovnb
jo
ljmp
jo
mov
sub
xchg
mov
or
cmpl
sbb
mov
das
jmp
jp
aad
cs
push
mov
dec
mov
aas
cwtl
js
xor
popf
jo
mov
jo
ret
vpsllw
in
jp
out
adc
popl
cmc
xchg
movb
ret
stos
xchg
pop
lret
dec
inc
es
insl
mov
mov
or
lds
lods
jo
and
mov
sarl
dec
shrb
inc
les
jo
andb
adc
adc
ss
jb
jge
outsl
orl
rolb
or
insb
test
sub
outsb
and
jnp
lret
leave
mov
jge
fdiv
cmpsl
jo
xchg
pushf
jl
dec
dec
jo
cwtl
shlb
pop
push
cmc
mov
sub
pushf
sti
bound
mov
add
addr16
insb
lods
jo
mov
lcall
and
xchg
outsl
mov
mov
sub
jo
xor
and
xlat
mov
mov
leave
sub
mov
fcomps
outsb
push
test
scas
jo
cmp
imul
clc
or
out
in
jo
call
int3
sti
bound
jae
push
xchg
jecxz
nop
sahf
lock
pop
data16
bound
call
xor
mov
aaa
lret
jo
push
xchg
jo
xchg
pop
les
ficoml
mov
cwtl
scas
in
lret
jo
dec
push
pop
lods
sbb
mov
jb
ljmp
stos
cmp
lret
cli
gs
add
dec
imul
adc
jo
movsb
fwait
mov
pop
xor
jo
xchg
mov
divl
jecxz
dec
lock
sub
lret
xor
sti
sbb
shlb
xor
cld
mov
pop
jne
das
std
scas
lock
insb
mov
ret
jbe
punpcklbw
mov
pop
mov
and
clc
xchg
divb
cmpsb
lcall
imul
inc
cmpl
addr16
cmp
adcl
jo
fstl
and
js
sti
negb
pop
and
stos
xchg
jo
inc
outsb
xor
lgs
jo
das
leave
enter
xchg
push
xchg
add
lds
cmpsb
jo
sub
cmpsl
dec
ja
jne
xchg
mov
jl
clc
jo
enter
movsl
aad
insb
push
jo
mov
leave
sahf
mov
mov
inc
dec
jo
aaa
push
test
lods
test
xchg
jo
push
es
jo
pop
push
dec
pop
in
cmp
inc
mov
fnstcw
shrl
and
lods
lods
push
insl
xlat
in
test
adc
sbb
mov
ja
addl
pop
mov
mov
inc
push
bound
mov
mov
ret
push
jo
ds
lods
sbb
and
push
jae
shll
ss
jge
gs
icebp
xchg
mov
cmp
pop
inc
jo
lret
xchg
stos
cmpb
jo
aas
es
test
jo
add
xchg
jo
test
xchg
push
shlb
dec
cmpsb
ss
cmp
jge
nop
lds
leave
jne
movsb
pop
divb
lret
cmp
xor
pop
fimull
stc
gs
aaa
xor
call
cmp
jns
mov
mov
and
ret
jl
or
jo
dec
adc
arpl
lret
add
pop
pushf
nop
jecxz
sub
arpl
pop
insb
sub
jo
jmp
rcrl
lret
jno
or
pop
aam
jo
dec
pop
std
inc
sahf
andb
fisttpl
pop
lock
push
les
cmp
xchg
lret
or
add
xor
jo
lcall
jo
push
cltd
xor
bound
jo
dec
jno
xchg
lds
mov
push
mov
lods
loope
push
jmp
xchg
icebp
lcall
movsl
aas
xor
jno
push
push
jne
lods
in
mov
hlt
mov
jp
jo
arpl
jo
add
push
xchg
movsb
xchg
jo
mov
inc
dec
enter
cwtl
aas
xorb
adc
or
fmuls
add
mov
sub
xchg
shll
shlb
in
xchg
pop
lahf
mov
jo
movl
sub
aam
mov
xchg
dec
and
dec
inc
mov
jo
pop
insb
mov
out
jo
add
xchg
cli
in
push
testb
lcall
inc
imul
lock
add
xchg
mov
jo
lds
jno
ret
les
pop
jnp
inc
xor
dec
loop
inc
jmp
push
push
jg
mov
jecxz
inc
ret
idivl
jo
sahf
adc
std
mov
ja
jbe
ret
iret
dec
mov
pop
or
lods
push
jo
jl
sub
jae
mov
clc
dec
ja
add
out
nop
push
mov
jge
in
mov
fistpll
mov
aad
leave
jnp
push
mov
push
mov
xor
mov
insl
aam
ja
push
nop
cltd
adc
fdivl
or
xchg
divb
ret
inc
imul
mov
shlb
jne
clc
sbb
xchg
test
sub
arpl
adc
xchg
jae
enter
cmp
js
int
in
ret
insb
jl
mov
mov
adc
fwait
jne
out
orl
hlt
xchg
popa
sti
shrl
dec
jo
iret
outsl
cli
xor
jo
data16
push
mov
pop
fnstenv
dec
hlt
mov
jp
jb
and
push
push
mov
fidivl
inc
nop
movsl
cld
and
in
jno
mov
sbb
sbb
daa
adcl
in
mov
outsb
cld
pop
leave
out
mov
push
push
cmc
test
clc
jo
addr16
jl
xchg
push
add
or
pop
jo
cmp
mov
test
cmp
cs
xchg
push
popf
repnz
popa
in
jo
xchg
push
pop
dec
mov
into
lock
data16
insl
int3
fcomps
mov
dec
jo
stc
ss
pop
adc
adcb
data16
rcr
arpl
pop
aaa
mov
out
xor
rcl
pop
and
loopne
jp
add
or
mov
add
les
pop
mov
jl
jmp
or
push
lret
fistl
es
or
xchg
icebp
loop
lock
fdivrl
pushf
lret
insb
subb
mov
call
inc
inc
mov
jo
aad
mov
jo
stos
mov
daa
jo
push
insl
mov
ja
daa
jo
rclb
das
daa
jo
cmp
sub
and
outsb
or
pop
das
jbe
adc
enter
xorb
mov
xchg
xorl
xor
insb
jbe
shlb
inc
cmp
xchg
cmp
adc
mov
lea
in
lods
dec
dec
inc
divb
xchg
cwtl
shlb
jo
fwait
mov
mov
pop
test
jne
sub
add
sbb
push
pop
outsl
jo
xchg
ret
aad
jbe
jo
push
call
inc
outsb
leave
addr16
inc
cmc
mov
lock
mov
mov
leave
outsb
pop
mov
idiv
in
sbb
mov
jo
jp
push
mov
je
outsb
sahf
gs
repnz
mov
sbb
push
sbb
dec
icebp
fcompl
push
or
push
dec
dec
aam
cmpsl
fucomip
sbb
int
clc
ds
jo
out
insl
mov
fcoml
lds
std
cmpsl
test
cmp
cmpsb
jg
push
push
shlb
lds
cld
push
inc
pop
inc
push
or
mov
sbb
xchg
jo
outsl
or
push
inc
arpl
sub
jo
jb
movsb
inc
mov
lds
or
jo
or
add
inc
add
imul
das
inc
mov
lock
cs
xchg
pop
clc
push
negl
mov
in
je
sbb
jle
bnd
test
mov
dec
pop
and
clc
xchg
mov
out
lret
jo
pop
aaa
push
jmp
mov
and
xchg
sti
mov
lods
jae
test
mov
lock
sbb
add
fwait
in
insl
mov
jecxz
xchg
pop
fidivs
mov
in
jo
add
mov
mov
pop
push
in
in
mov
xor
adc
lret
pop
mov
stos
jo
xchg
ds
shll
fdiv
jo
cmp
pop
leave
loop
push
inc
jo
std
jne
ret
push
js
push
jb
sbb
jo
filds
fcoml
ss
jo
dec
lods
xor
mov
loopne
insl
sub
pop
mov
movsb
ljmp
fnstenv
fbstp
mov
jnp
je
iret
jo
mov
mov
adc
outsl
jo
dec
shll
sub
mov
cmp
and
imul
insl
aas
fldenv
cmc
ja
orb
imul
cs
jo
lds
mov
pop
ljmp
pop
gs
push
sbb
jo
repnz
adc
jae
and
mov
sti
test
adc
push
jg
and
sub
leave
jnp
and
mov
pop
sarb
test
test
sbb
mov
and
mulb
push
cli
je
popf
xchg
inc
and
ja
push
cmpsl
jo
pushf
je
push
fwait
lret
add
es
outsb
jbe
mov
icebp
pushl
imul
jo
cmpsb
xor
js
dec
jo
int3
bound
lea
cmp
sbb
mov
out
jo
and
mov
in
jl
cmp
jo
stos
cs
adc
jnp
jo
sbb
fildl
jge
sarb
jo
pop
lds
pop
jo
cmpsl
testb
mov
mov
push
loopne
mov
pushf
jl
aas
jecxz
add
lods
lret
push
cmc
jbe
mov
push
sub
add
shrb
loop
mov
jbe
jp
in
out
rclb
jo
movsl
mov
xchg
arpl
popf
insb
test
ficomps
mov
cmpb
out
xlat
pop
lds
pop
jecxz
fwait
mov
rcl
jo
push
lods
lea
jmp
jo
fcompl
dec
mov
ja
test
xlat
shr
inc
test
js
sub
jo
or
jo
daa
mov
shll
jno
inc
add
bound
insb
inc
xor
push
fwait
jbe
mov
fldl
pop
jnp
std
shlb
lret
xor
aaa
nop
shrl
or
push
jo
push
fildl
jo
repz
iret
push
pushl
pop
mov
mov
out
push
push
mov
insl
xor
test
jo
ljmp
push
lret
aad
jo
mov
ljmp
sub
mov
add
imul
jo
jne
in
jbe
mov
xchg
lock
insb
pop
sub
fmull
ret
jmp
jo
cmp
cmpsb
mov
mov
xchg
imul
and
sbb
insl
cmc
ror
je
sbb
shlb
inc
jo
dec
mov
inc
sti
adc
shr
push
negl
mov
or
dec
repz
cld
lahf
xor
bound
fcompl
insl
insb
push
gs
scas
jo
sub
pop
jo
andb
loopne
test
push
sarl
jo
adc
or
lret
mov
jo
or
test
loop
mov
lret
xchg
xorb
sbb
mul
aam
push
jns
sbb
outsl
jb
nop
outsl
mov
insl
xor
lcall
sbb
lds
push
addb
outsb
inc
cmc
inc
jo
mov
push
sbb
out
jo
push
aad
fisttpl
inc
insb
mov
imul
leave
shrb
cltd
sub
inc
jmp
jecxz
sbb
mov
sti
imulb
adc
mov
pop
dec
outsb
int
lock
rcll
fwait
dec
shll
mov
lods
jo
xor
xchg
add
jo
mov
mov
pop
pusha
loop
lock
cmp
pushf
sti
jo
mov
pushf
pop
addb
mov
xchg
push
test
mov
and
mov
mov
sbb
adc
jl
fstl
jo
mov
jbe,pt
add
lds
inc
xor
lock
adc
mov
push
pop
xchg
jo
cs
shll
enter
add
sarl
adc
sarb
jo
fs
mov
push
stos
mov
jo
inc
jns
es
or
jno
js
and
push
arpl
out
jg
ficoml
insl
insl
pop
outsb
xchg
nop
fwait
jg
mov
rcl
and
jo
xor
sti
lds
mov
fnstenv
mov
or
pop
add
nop
adc
sbb
dec
jnp
xor
or
cmpl
ljmp
mov
xchg
pop
fisubl
insl
lods
mov
add
popa
or
jo
sub
pusha
sbb
insl
pop
pop
fsts
jmp
faddl
xlat
jb
mov
in
mov
push
sti
sub
pop
sbb
jo
insl
xor
push
cmp
cs
push
das
adc
dec
in
mov
test
and
fdivr
lds
dec
jo
mov
hlt
jns
pushf
xchg
inc
push
lock
xchg
insl
add
imul
ja
mov
test
mov
test
in
push
jo
mov
and
test
lcall
rcrb
not
insb
xor
shll
aad
test
xchg
mov
dec
std
lds
mov
sub
inc
jbe
mov
lea
cmpsb
sahf
jo
fdivrs
data16
cmp
and
lret
pop
ret
xchg
dec
fs
mov
jo
test
cmp
ret
fwait
mov
and
adc
call
pop
bound
mov
jmp
xchg
xchg
rcrl
shrl
mov
xchg
loop
int
jae
mov
push
fdivl
adc
clc
or
inc
adc
mov
leave
outsb
ds
lds
gs
add
test
push
jo
push
xor
int
sbb
add
pop
cwtl
inc
jo
adc
fidivs
rclb
shlb
arpl
xchg
call
fcmove
dec
jo
lods
push
xchg
clc
data16
cmp
cld
dec
loop
fwait
addr16
push
jb
insl
jae
cmp
dec
insb
lcall
jo
sub
pop
ljmp
aaa
mov
pop
jo
js
fdiv
cltd
push
mov
rcrb
mov
xor
data16
das
mov
pop
push
jo
mov
mov
fildl
fidivl
inc
xchg
add
ja
pusha
push
pop
mov
jo
outsl
xchg
neg
inc
fsubrl
mov
insl
jge
inc
ss
inc
popa
cmc
lock
rcl
xchg
jbe
jo
icebp
jmp
mov
jo
push
xor
sahf
sti
mov
or
mov
add
out
dec
pusha
push
lock
ss
lods
pop
stos
insl
xchg
inc
push
std
xor
movsb
pop
push
dec
jo
mov
mov
in
popf
inc
mov
xchg
pop
and
mov
jo
xor
jo
mov
push
stos
jnp
out
cmpsl
cmp
mov
push
fs
rcrb
mov
pop
loop
jo
dec
fistpl
mov
jo
lret
call
mov
pop
cltd
loopne
repz
adc
push
mov
insb
cmp
mov
and
xchg
pushf
loope
outsb
mov
test
shll
push
cwtl
test
jnp
mov
push
mov
add
xchg
mov
rorl
push
lods
lods
fildll
lret
sub
lds
jo
xor
cwtl
outsb
cltd
xchg
jo
flds
add
ret
arpl
xchg
xor
inc
bound
sbb
dec
jo
leave
mov
and
clc
jo
scas
imul
aad
fs
adc
mull
mov
inc
or
cs
mov
add
mov
sbb
ffree
jp
rclb
cli
cmp
or
subb
je
sbb
repz
mov
or
mov
jo
mov
or
fisubs
pop
ss
add
add
and
sub
jne
test
push
fmull
cmp
mov
shl
hlt
sub
outsb
test
dec
cli
lret
out
jge
add
xchg
mov
pop
xchg
lds
mov
test
jo
in
dec
idivb
out
rcl
aas
xor
cmpsb
push
lds
lods
or
mov
jo
fildll
orl
sbb
jno
js
lret
rcrb
mov
xor
xchg
repz
mov
xchg
mov
lock
out
stos
fwait
mov
jo
fs
ds
int3
jo
xchg
mov
data16
mov
rorl
stos
mov
inc
daa
pop
fistl
int3
std
imul
test
mov
inc
sbb
scas
mov
inc
jge
inc
jb
jl
mov
jbe
mov
insb
leave
ss
fnsave
mov
mov
enter
andb
cmpsb
pop
dec
jl
jp
push
add
shlb
cli
das
sahf
sbb
pop
jne
jno
scas
lock
xchg
push
jmp
inc
lret
dec
mov
jo
fdivl
js
arpl
fwait
xchg
test
jo
jp
in
push
push
sbb
mov
cmpsb
scas
arpl
daa
pop
jo
pop
pop
clc
imul
sbb
mov
mov
jo
mov
imul
loop
sti
mov
pop
pop
scas
lock
cmpsb
sbb
pop
pop
jnp
aad
mov
movsl
std
adc
dec
cwtl
jo
sbb
xchg
fwait
sbbl
gs
loope
lds
data16
lods
inc
push
xor
stc
xchg
pop
leave
inc
das
shlb
pop
mov
cs
arpl
gs
jo
popa
push
aad
int
or
mov
loop
shrb
popf
mov
and
cmp
pop
jecxz
mov
xor
and
pop
insl
push
mov
outsb
push
jmp
push
pop
movsb
lods
loope
mov
xchg
inc
addr16
sub
mov
jo
jmp
insb
cmpl
addr16
ss
enter
and
sar
jnp
mov
jg
or
movsb
test
dec
repz
jo
cmp
notb
mov
lret
test
les
shl
outsb
mov
popa
or
xchg
lcall
push
jae
pusha
push
xchg
and
fistl
jae
leave
sarb
jbe
into
fwait
insl
xchg
sarl
insb
test
inc
jae
mov
lods
add
and
jmp
outsl
jl
mov
aaa
repnz
jp
dec
jg
dec
loopne
cmp
mov
jo
push
pop
lret
addb
or
fcomps
jo
jbe
sub
loopne
outsb
mov
popf
adc
das
sbb
fsubl
jo
mov
pop
add
mov
jo
iret
shll
shll
sbb
cmc
insl
fcoms
mov
add
mov
mov
jo
js
test
push
std
out
sub
icebp
adc
leave
sbb
xor
jo
int3
cmpsl
push
inc
shrl
or
pop
jle
dec
loopne
cmc
mov
mov
cwtl
in
in
rclb
pop
mov
cmpsb
icebp
mov
sbb
add
xorb
insl
xor
mov
bound
je
pop
popa
mov
das
sub
pop
sarl
add
filds
fidivs
adc
xor
jne
stos
xchg
ljmp
jo
repnz
dec
pop
mov
mov
jo
shl
test
imul
inc
inc
push
jae
mov
push
adc
scas
adc
push
sahf
shlb
dec
push
or
jnp
lods
pop
or
jo
in
dec
push
xor
adc
jae
mov
addl
ss
mov
jl
dec
cmp
push
push
fbstp
in
outsl
pushf
dec
cmp
leave
ret
push
mov
sbb
or
cltd
jo
mov
frndint
xor
push
jo
xor
or
ja
out
sarb
and
pop
insb
jo
out
inc
push
fs
call
inc
icebp
push
fmul
dec
out
std
ljmp
daa
adc
jo
and
inc
mov
xor
mov
dec
fidivrl
push
cltd
add
adc
jo
leave
ds
mov
pushf
out
mov
arpl
xor
mov
addr16
shlb
aad
dec
sbb
jo
lods
sub
aaa
jo
insl
xlat
mov
xchg
scas
xor
lods
mov
mov
sbb
gs
jo
std
mov
scas
mov
xchg
jb
rcr
out
popf
mov
pop
jge
pop
mov
fbstp
enter
ljmp
or
jo
xchg
enter
int3
loope
dec
mov
add
ret
lock
jb
mov
pop
test
dec
cmp
jo
mov
fistpl
insl
mov
pop
call
into
or
cltd
scas
push
cwtl
jg
stc
pop
arpl
fdiv
mov
xchg
dec
jo
scas
pop
out
les
jl
pop
pop
push
jnp
jae
sub
xor
clc
int
mov
aas
adc
in
adc
test
mov
insl
repnz
jbe
popf
cwtl
mov
jecxz
inc
pop
jno
jo
enter
orb
or
and
jae
xchg
adc
ret
mov
mov
jl
inc
xchg
sbbb
sbb
ja
jae
push
cltd
dec
addr16
inc
inc
push
cmpsb
pushf
lock
jg
jle
scas
pop
mov
gs
sub
xchg
jo
ret
aad
xchg
daa
fnsave
fwait
pop
cmpsb
jbe
fsubrl
addr16
cmp
sbb
mov
mov
or
int3
jo
jns
push
ffreep
cmp
add
xor
jo
xchg
and
jo
adc
mov
dec
scas
fdivr
outsl
lret
sub
sbb
xor
jnp
xchg
ja
js
and
xchg
xchg
lods
loopne
mov
dec
pushf
jae
push
lret
movsl
jle
mov
cmpb
jo
pop
aam
into
push
arpl
dec
add
xlat
jmp
mov
xor
or
cs
in
pop
dec
jo
sarl
mov
loope
push
jl
jecxz
pop
or
adc
call
xchg
in
cmp
lock
test
jns
int3
mov
sti
fnstenv
std
out
fidivrl
div
or
push
mov
jo
jge
inc
notb
lock
fcmovbe
xor
test
mov
inc
cld
addr16
xchg
das
jo
fidivrl
js
outsb
push
mov
mov
enter
stc
fdivs
cmp
adc
jno
mov
leave
jo
sub
cmpsb
jo
xchg
pop
mov
adc
insl
mov
shlb
and
mov
xlat
out
sbb
fdivr
pusha
arpl
xchg
or
jge
and
pop
cmc
lret
lcall
xchg
in
pushw
and
cwtl
jo
aam
push
lea
loope
lds
cs
mov
lods
pop
and
lret
call
pusha
pshufw
inc
insl
push
inc
jo
jnp
cmp
imul
sub
xchg
mov
dec
jo
push
inc
add
rcr
jmp
jp
imul
mov
test
ja
or
sahf
lret
lahf
pop
hlt
mov
push
mov
sbb
leavew
subl
aad
push
push
adc
aas
js
cld
dec
jo
pushf
add
pop
jo
leave
in
adc
aas
xor
sbb
repz
push
mov
out
hlt
jnp
jle
lock
dec
add
sbb
dec
inc
fisttps
in
jo
shll
jo
rorl
mov
test
jo
ds
adc
push
or
fldt
out
shll
mov
mov
int3
adc
adcb
loop
icebp
mov
fwait
mov
jo
dec
mov
cmp
cmp
jp
dec
jo
lods
mov
stos
push
pushf
lret
push
and
test
push
fdivrs
ret
sub
dec
jo
xchg
mov
jo
pop
std
xchg
pop
xor
jo
ljmp
outsb
or
adc
icebp
adc
nop
sub
in
negl
lods
sub
popf
sbb
arpl
jo
jb
cmp
out
iret
lds
add
mov
rcr
fildll
mov
mov
or
ficomps
push
add
ss
sbb
adc
jo
pop
lcall
aam
mov
or
push
movsb
cmp
inc
xor
lds
lock
sub
jo
mov
mov
pushf
mov
in
lcall
pop
adc
jo
decl
outsb
fisubl
imul
push
push
mov
jo
cmp
adc
cmp
pop
jo
gs
jp
inc
push
jae
aam
pop
jnp
jmp
cwtl
fdivs
mov
roll
aam
push
cmp
jo
cld
jne
imul
lock
fistl
jo
pextrw
push
mov
sar
jo
movb
mov
daa
mov
mov
das
jo
arpl
ret
or
xor
data16
jnp
popf
xlat
jbe
mov
jo
mov
push
test
leave
fwait
pop
jo
enter
push
pop
sub
in
xchg
add
lods
imul
mov
dec
mov
xchg
pushf
sub
jo
mov
cmp
hlt
inc
jo
mov
jo
add
mov
or
jo
dec
in
mov
clc
imulb
pop
adc
das
jns
lock
lock
pop
fisttpll
jo
les
test
inc
mov
bound
jle
mov
popf
movsl
aaa
ja
or
cmp
test
sub
mov
nop
les
cli
lret
pop
imul
insb
fbstp
and
lret
dec
in
sub
aas
pop
shll
mov
jo,pn
inc
xchg
scas
pop
xor
jo
lds
jo
cmp
insb
xor
daa
das
sub
cli
jno
pop
sbb
lock
mov
sti
push
lock
push
inc
cmp
cmp
arpl
adc
aam
scas
fnsave
cmp
xchg
jo
pop
mov
test
pushf
imul
cs
jo
pop
lcall
xor
push
and
aas
xor
rcl
jmp
push
in
shrl
sbb
shll
jmp
jp
inc
mov
mov
mov
fcoms
inc
push
test
jo
and
sbb
arpl
fwait
jo
in
cmp
pop
jo
lods
mov
test
fmul
inc
or
mov
jo
inc
shl
lcall
ret
bound
push
xlat
inc
xor
push
xchg
pop
dec
jo
jbe
pop
loopne
dec
repz
mov
mov
imul
lods
sbb
jo
in
icebp
xchg
aam
fmull
push
ret
lret
mov
bound
je
lds
mov
lock
loop
dec
mov
jo
clc
sub
mov
mov
fildl
pop
cmp
loopne
jae
mov
cs
pop
cwtl
pop
aad
jo
xchg
xchg
push
lds
mov
aam
fwait
push
leave
sbb
jo
shlb
enter
addr16
insb
adc
or
mov
jo
mov
in
in
jae,pt
pop
sbb
pop
inc
repz
jo
clc
je
pop
pop
lcall
push
out
xchg
jl
mov
cltd
fidivrl
mov
inc
push
lret
imul
push
jo
clc
jl
dec
mov
jp
punpckhdq
push
ja
cmpsb
push
mov
shll
enter
lret
lret
sub
jl
jg
jo
fsubrl
jo
jbe
push
fs
push
insl
or
and
push
inc
inc
movl
and
ffree
push
pop
jnp
jp
pusha
lock
xchg
adc
jge
fistpl
lock
dec
push
das
inc
int3
mov
mov
jge
xor
dec
fcomi
testl
pop
xor
fst
jne
movsl
cmc
cmp
loopne
jo
lods
repnz
or
mov
and
inc
mov
jo
cltd
mov
dec
aad
icebp
jo
mov
xor
pop
sbb
xlat
jo
insb
das
mov
imulb
add
mov
and
fadds
je
mov
aad
mov
xchg
mov
jo
shll
push
mov
iret
mulb
cmp
xchg
or
fcompl
xor
hlt
add
dec
push
adc
je
pop
ficompl
mov
sbb
outsb
xchg
pushl
jl
mov
jo
in
loope
adc
jne
xchg
xorl
scas
mov
lea
push
fwait
jg
cmp
mov
imul
fwait
cltd
cld
lds
adc
addb
gs
and
mov
and
push
cmpsl
outsb
xor
jo
stos
mov
cmpsb
clc
fildl
jo
add
xlat
adcb
jo
rorl
rolb
jl
out
data16
xor
test
fdivl
imul
insb
dec
jnp
mov
lock
sbb
jp
mov
adc
adc
xor
jo
pop
cmpb
sbb
rorl
xchg
lock
jnp
jp
mov
idiv
test
jmp
pop
aad
mov
pop
cli
mov
and
imul
jo
mov
mov
fwait
xor
inc
ffreep
ret
sbb
pop
insl
cwtl
push
ss
aad
mov
sarl
mov
jmp
cmpsb
mov
lods
jae
fstpl
leave
test
xchg
mov
lcall
jb
cmpsl
mov
repz
nop
lahf
addr16
insl
pop
gs
pushf
cmpsb
fwait
jo
cmp
popf
jo
push
jne
push
pop
out
jo
sbb
mov
xchg
shll
cmp
jo
add
dec
jo
cs
mov
fldcw
movhps
insl
lea
mov
add
jo
or
xor
inc
inc
push
out
mov
sub
jo
hlt
cltd
adc
sbb
clc
jo
inc
mov
aam
clc
scas
shrb
pop
cmc
add
xchg
pop
jo
inc
sub
movsl
adc
mov
xchg
loope
jo
sub
jne
cmp
clc
faddl
jg
mov
and
mov
mov
add
jnp
jl
ja
mov
xchg
sub
mov
xchg
jo
pop
decl
lods
add
mov
push
nop
aaa
jle
jle
jo
mov
ss
hlt
sti
dec
inc
imul
jmp
jo
repz
test
int3
xchg
sub
mov
mov
in
mov
dec
loop
mull
adc
dec
addr16
push
mov
mov
inc
sub
rclb
add
jo
adc
sub
xchg
mov
fdivrl
mov
pop
cli
mov
cmc
pop
cltd
fnstenv
cmovns
insl
xchg
outsb
into
sub
ds
iret
mov
lock
mov
mov
xchg
mov
jo
in
add
in
jo
outsb
loopne
mov
popa
jo
sub
ficompl
icebp
rcll
mov
es
and
cmp
loopne
movsl
jo
lods
pop
jg
mov
push
lock
rolb
notb
xlat
mov
add
jo
cmpsl
and
push
cmp
rolb
test
xchg
out
ljmp
cmp
fistl
aas
js
sbb
push
lods
push
ja
mov
sub
dec
adc
jb
add
int3
std
mov
jo
sahf
push
ret
ljmp
jne
dec
iret
dec
push
cmpb
sub
lret
jb
es
adc
stos
xchg
in
insl
jns
adc
cmp
inc
jle
or
push
ftst
jnp
add
jns
lea
sarb
cmp
xor
out
xchg
data16
push
jns
outsl
mov
sub
jo
jge
cmpsl
push
push
jp
jo
mov
xchg
outsb
xlat
std
sub
mov
jo
sbb
push
divb
xchg
xchg
ljmp
sbb
jnp
mov
jo
idiv
enter
mov
mov
lcall
dec
inc
adc
lods
shl
sub
shlb
pop
adc
stos
jne
icebp
jo
adc
sbb
das
dec
and
xchg
pushw
mov
dec
andl
mov
test
jo
inc
or
insb
sbb
ss
xchg
mov
push
mov
adc
fcoml
push
cmpb
test
lahf
scas
pop
jo
shl
movsb
int3
fmuls
pop
int
mov
mov
pop
ja
mov
aam
popa
outsb
outsb
repz
std
jnp
sub
lds
mov
push
outsb
sub
mov
jo
pop
rorl
ja
push
js
movb
sub
dec
sbb
out
rolb
or
inc
ret
ja
ljmp
cmp
std
cmp
pop
xchg
clc
adc
mov
jo
aam
cmp
fcmovnb
push
cmp
jge
loopne
lcall
imul
cmpsb
jae
pushf
es
pop
mov
cmpsl
adc
int
jno
scas
dec
mulb
lock
popf
fldt
stc
out
fists
sub
mov
inc
xchg
out
jl
sbb
imul
mov
jae
out
hlt
out
sub
fstl
movsl
jo
mov
push
out
dec
xor
lock
fmull
jo
mov
push
push
inc
mov
movsl
jle
jo
push
pop
lret
data16
adc
mov
scas
outsl
add
push
push
jge
mov
movsl
jo
shrl
jns
pushf
cmpsl
jo
push
jmp
mov
ret
bound
mov
add
xchg
sbb
jo
sbb
mov
test
shl
shll
test
pop
jo
xlat
shlb
ja
das
push
sbb
rol
decl
movl
fcoml
movsl
pop
mov
sbb
push
mov
test
jo
or
mov
mov
mov
inc
jo
int3
pop
ret
jo
fs
lret
into
jo
and
jo
cmp
xchg
inc
jbe
sub
mov
lods
jae
mov
lods
jmp
cmpsl
jo
cmp
int3
test
jo
std
ret
in
mov
repz
jge
push
inc
or
pop
mov
insl
fwait
mov
fcompl
add
je
jp
push
mov
stos
sub
jo
mov
call
enter
cwtl
dec
mov
hlt
jmp
scas
push
dec
imul
add
out
int3
dec
idivl
sbb
test
mov
stc
call
add
mov
jo
mov
inc
mov
inc
pop
jl
xor
sarl
mov
mov
jne
sbb
in
scas
jo
mov
inc
enter
jo
mov
xchg
dec
push
mov
add
mov
xor
lea
scas
lds
push
jne
pop
in
push
int
iret
jmp
and
cmp
dec
out
jo
cmp
jnp
lock
inc
pop
in
mov
lret
mov
cmp
push
dec
push
hlt
add
and
adcl
idiv
jle
mov
cmp
jno
lret
fidivs
jnp
cli
std
mov
xchg
add
sbb
jne
sub
xor
pop
sub
aad
test
mov
arpl
cwtl
lret
jbe
xchg
sbbl
in
into
subb
xchg
in
jb
push
xor
mov
sbb
sbbb
cld
sbb
dec
xchg
outsb
loope
cmp
js
aam
jnp
ss
mov
into
mov
pop
mov
jo
insl
ss
pop
inc
sub
sti
jo
mov
fcmovnb
sub
or
dec
sahf
adc
or
mov
jo
ss
mov
jne
data16
cmpsb
inc
movsl
mov
out
out
stos
cmp
xor
mov
insl
sbb
mov
cwtl
fcoml
push
sbb
cltd
test
mov
inc
sub
push
mov
repz
adc
jmp
mov
arpl
fadd
push
lock
cld
dec
xchg
jo
andb
pop
mov
jo
lret
mov
sub
xor
cli
rcll
jo
mov
mov
dec
pop
xor
in
lods
mov
mov
lock
jo
aas
jl
xor
pop
shll
push
jo
shlb
jne
push
test
fwait
jo
xor
push
push
sbb
test
getsec
fwait
jo
mov
fs
shlb
mov
jo
out
inc
jmp
cmp
xchg
sbb
testb
xchg
mov
sbb
in
arpl
cmp
cli
addr16
mov
popa
outsl
fildll
ror
push
jo
mov
in
mov
cwtl
ds
cmc
dec
jo
leave
xlat
xor
out
call
mov
mov
adc
jo
sbb
inc
dec
jo
xchg
jbe
sahf
inc
xchg
jo
int
je
mov
dec
sbb
lods
bswap
push
xchg
mov
data16
push
es
fwait
or
dec
mov
mov
push
jns
addr16
cmp
jo
sti
mov
pop
aaa
ljmp
fnstcw
sti
fsub
stos
lret
leave
jne
bound
fstl
xchg
out
mov
js
xchg
push
pop
adc
pop
in
inc
jo
xor
sub
mov
das
cmpsl
xor
jae
sbb
xchg
movsl
nop
xchg
mov
add
outsb
inc
mov
lock
dec
clc
das
mov
incl
fsubrl
add
add
int
cmc
out
mov
xchg
jo
mov
test
insl
fwait
in
xchg
shll
pusha
xchg
jo
notb
xchg
jnp
repnz
push
lock
fidivl
sub
push
inc
xor
mov
aam
fcmovbe
fldl
adc
and
dec
ja
pushf
mov
jnp
sub
push
jbe
in
movsb
in
sarb
out
je
outsb
ret
mov
fdivrs
into
jno
and
push
js
pop
xchg
cmp
dec
mov
jg
in
loopne
es
movsl
jo
pop
leave
rorb
mov
mov
mov
fldenv
es
pop
repz
sbb
jo
and
dec
mov
mov
lods
das
ja
hlt
fwait
dec
ljmp
sub
insb
int3
add
push
lret
or
testb
fistpl
stos
sub
mov
insl
cld
sbbb
cmpsl
mov
sbb
inc
enter
insl
xor
mov
frndint
mov
jo
mov
lret
mov
pusha
ret
pop
jo
xchg
je
push
xorb
mov
std
jo
sbb
cmp
mov
pop
cld
xchg
dec
jl
jnp
repz
sarb
fs
sbb
cltd
jge
lods
shll
mov
ljmp
and
and
xor
jg
jnp
push
push
jb
andb
or
std
and
add
stc
adc
push
std
cmc
mov
push
int
jo
inc
bound
or
jo
jbe
ret
mov
mov
pop
outsb
jo
xchg
shll
sahf
push
int
lods
pop
or
or
movsb
pop
sbb
loopne
cmc
mov
cmp
pushw
popf
addr16
mov
inc
xlat
imul
pusha
fmull
xchg
mov
adc
loopne
push
sbb
push
imulb
pop
xchg
popa
rclb
mov
cmpsb
jo
xchg
inc
sbb
cmp
jne
jbe
fidivs
insb
arpl
mov
test
in
mov
aaa
jo
std
inc
loop
cltd
aad
jae
mov
lahf
adc
mov
add
ja
dec
xlat
push
and
fistl
pop
push
scas
js
push
jbe
test
inc
rol
cs
xchg
movsb
data16
insb
xchg
jle
adc
jl
aad
out
jae
or
jge
mov
push
inc
stc
aaa
push
pop
cmp
pop
call
pop
cltd
divl
lcall
jo
mov
aad
ja
sub
fucom
inc
loopne
xor
arpl
cld
mov
stos
xchg
imul
aad
cltd
test
pop
fcomps
mov
sub
push
fwait
push
outsl
inc
sbb
mov
test
inc
ja
mov
add
push
inc
xchg
out
push
sbb
aad
divl
scas
xchg
divb
pop
jne
outsl
mov
pop
jp
add
push
mov
je
jns
add
xchg
jo
lock
xchg
shll
out
mov
std
jno
push
outsb
sub
mul
insb
lods
dec
push
gs
mov
arpl
ja
in
mov
lret
xor
pop
jnp
scas
mov
inc
mov
insl
loop
cld
aad
jg
lock
cltd
rcl
pop
jo
enter
and
adcb
add
fldenv
mov
ja
dec
push
sbb
xor
dec
push
jmp
in
jo
sbb
inc
jo
aad
add
dec
inc
or
aaa
sbb
sbb
insb
push
shlb
sub
inc
pop
lds
aad
sbb
in
inc
jge,pn
sbb
out
push
in
pop
test
outsb
jecxz
repz
xorb
fsubrl
sbb
enter
cmp
xchg
pop
adc
jo
mov
add
mov
test
jmp
aam
push
fucomp
stc
xchg
fldt
aas
mov
test
sbb
pop
inc
jo
cmc
xor
into
jae
cld
jae
lcall
or
jne
lret
mov
jo
pusha
push
cs
dec
adc
lock
clc
shlb
repz
or
sub
cltd
loope
pop
fsubl
enter
aam
into
mov
xor
aad
stos
dec
mov
sbb
xor
mov
jo
mov
fidivs
test
adc
adc
ror
loopew
rorl
mov
push
jo
dec
and
pop
jo
ret
cli
mul
mov
mov
shlb
mov
addl
xchg
push
das
dec
inc
jo
sahf
mov
ret
or
mov
pop
sbb
xor
pop
mov
ja
data16
lea
add
fdivr
jecxz
inc
imul
xchg
jo
inc
sub
cmc
call
xchg
xchg
lods
xchg
mov
pushf
pop
cmp
mov
push
subl
adcl
outsb
push
sub
inc
jo
shll
ljmp
mov
lahf
shrl
adc
pop
jo
pushf
sbb
fwait
jo
out
inc
cld
mov
ss
outsb
ret
inc
ret
xor
and
fwait
jo
les
jmp
lea
jo
and
push
push
in
mov
ds
jae
jo
lea
lock
dec
jo
mov
mov
repnz
test
mov
mov
ret
jge
cmp
xchg
mov
and
repz
cmc
fcompl
mov
shlb
addr16
lods
fmull
lock
jecxz
popf
pop
mov
in
cmp
rolb
xor
or
repz
lock
inc
dec
push
shr
cli
cltd
xor
ds
adc
mov
rcr
outsb
mov
scas
fimull
adc
sub
aad
subb
loope
pop
cli
repz
adc
add
psubusw
sbb
popf
ret
int3
xchg
mov
xor
dec
pop
aad
jle
scas
dec
out
xor
push
jo
ror
xor
jns
cmp
mov
es
je
jle
lea
and
jo
jb
pop
cmp
mov
jle
xchg
insl
add
add
test
lds
popf
xor
jge
dec
fldcw
jo
sub
mov
mov
sahf
jo
and
into
inc
jno
sub
xor
stos
fs
dec
fidivl
mov
insl
insl
ljmp
push
adc
xor
jo
mov
dec
aam
mov
frndint
rcr
dec
jno
jns
or
dec
xchg
je
push
into
xor
test
in
fidivl
jne
add
ljmp
push
add
cmpl
or
ret
ss
ret
jg
xchg
pop
fs
lret
push
int3
jo
cmp
jbe
insb
xchg
out
xchg
mov
inc
mov
jp
sbb
jmp
xchg
stos
xor
jle
mov
adc
add
loopne
sarl
pop
test
jo
dec
sti
jae
dec
push
jecxz
testb
inc
add
add
mull
fbstp
dec
enter
sbb
enter
push
aad
sbb
xor
sub
jge
in
ja
add
xor
orl
jo
jmp
rcrb
sbb
fwait
jb
mov
nop
cli
insl
xor
xchg
fildll
xchg
lea
dec
pop
cltd
sub
jo
arpl
pop
jno
das
xor
pushf
cmc
insb
ljmp
cltd
sbb
cmp
std
jle
sub
not
scas
insl
lock
push
cmp
lret
xor
push
stc
faddl
popa
cmp
jo
cmpsb
hlt
jle
mov
mov
clc
daa
inc
dec
and
out
repz
in
out
mov
mov
mov
mov
daa
adc
sub
in
xor
sbb
xchg
jb
inc
mov
jo
mov
into
sub
in
xor
mov
mov
jo
mov
cs
jo
adc
popa
jl
dec
mov
arpl
jae
fs
xor
out
ds
pop
add
filds
dec
aad
jno
insl
call
sub
jo
mov
push
inc
xchg
test
js
xor
cmc
jo
pusha
aad
imul
out
push
mov
push
mov
mov
loopne
dec
xchg
outsb
lock
outsl
jo
jl
sbb
cmp
add
xorb
lds
jns
mov
pop
insl
pop
int
mov
popf
jo
mov
in
dec
jecxz
jo
pop
push
scas
mov
enter
add
test
jb
into
aad
ja
ja
dec
ret
add
ret
bound
mov
jo
sahf
out
mov
insl
sub
rolb
sbb
hlt
jo
pop
xchg
inc
fstpl
pushf
and
outsb
xlat
inc
lea
cmp
sbb
jo
in
hlt
mov
push
and
inc
mov
mov
sbb
aas
shll
cmpsb
pop
fwait
mov
sub
push
rcrl
insl
lock
pop
mov
iret
inc
and
mov
adc
adc
mov
add
xchg
leave
dec
jecxz
sbb
popf
out
fidivs
sub
es
pop
add
and
popa
divb
jle
insl
clc
cld
mov
xchg
scas
scas
jo
lods
jl
pop
fstpl
mov
int3
pop
jp
adc
sub
test
jo
mov
fmull
lods
adc
push
jecxz
adc
mov
xor
jg
mov
or
mov
int3
cmp
and
fldt
lods
and
inc
pusha
aam
add
andl
popa
fmuls
sub
push
jo
dec
rep
dec
sahf
add
fldenv
xorb
dec
sti
inc
repz
dec
pop
fcompl
jno
imul
fwait
imul
lea
fdivl
cli
mov
xorb
dec
sbb
fcmove
jo
mov
icebp
lea
jle
mov
jmp
inc
sti
pushl
in
mov
addr16
jo
jae
jmp
jl
inc
xor
and
xchg
ret
push
xchg
adc
xchg
mov
pop
jo
pop
sbb
fwait
sti
bnd
lea
insb
fsubp
inc
es
add
dec
jo
sbb
pusha
xor
jb
jo
stc
add
insl
je
push
fistpll
call
lea
lods
loop
mov
nop
repz
cmpsl
ja
jns
lret
push
pushf
push
cwtl
lods
cld
rorb
sbb
jge
gs
test
loop
aad
add
ss
xlat
push
jg
nopl
jae
or
loopne
lahf
enter
jo
out
nop
jl
dec
xchg
aad
push
scas
xor
xor
bound
pop
rol
mov
popa
rolb
cmpsl
out
jo
pop
clc
ss
xor
arpl
sub
test
and
mov
stc
jnp
pop
lock
mov
pop
shlb
jo
push
lret
inc
or
mov
inc
mov
inc
out
iret
lcall
mov
jbe
mov
or
jp
imul
adc
xor
movsl
cmpsl
shll
jge
mov
pop
or
or
dec
cmp
es
rcrl
xor
int
dec
mov
mov
and
js
je
sbbl
jno
xchg
ja
imulb
inc
and
push
xor
add
test
sub
jne
pop
pushf
jns
repnz
xchg
rcr
push
fwait
std
insb
ror
jo
xchg
mov
pop
repz
push
imulb
aad
cltd
enter
jb
and
outsb
mov
shl
xchg
repnz
stos
fdivp
scas
fistl
imul
aad
outsb
arpl
mov
cmp
dec
jo
jecxz
int
lret
je
push
insb
inc
aad
jo
mov
cmpsb
inc
flds
out
test
and
jo
gs
dec
push
push
jmp
in
out
adc
inc
push
pop
sbb
adc
inc
fs
adc
insl
mov
mov
add
inc
in
jo
jne
mov
loopne
fstps
mov
lods
cmp
fnsave
jnp
stos
xchg
pop
mov
cs
jo
and
dec
sbb
cmp
daa
xchg
test
outsb
or
cld
nop
xchg
fidivrs
lea
aam
and
call
aad
jae
add
out
jbe
jo
test
or
cmc
sbb
or
jo
jae
cli
ljmp
lret
insb
fdiv
pusha
shlb
mov
out
jo
cmpsb
lods
xchg
lahf
arpl
dec
jo
mov
or
xchg
jo
stos
xor
jmp
jo
mov
sbb
cmp
mov
dec
fidivl
test
in
mov
push
dec
lret
sub
xchg
sbb
jo
or
pop
jbe
orb
adcb
lock
dec
movsl
in
xor
pop
cwtl
in
sahf
cmp
jecxz
test
cmp
add
ficomps
jbe
pop
dec
out
lock
inc
scas
mov
jo
repnz
push
adc
adc
sbb
sub
enter
inc
sti
jo
icebp
cmpsl
popf
pop
fistpl
mov
shll
jp
jne
mov
pop
lret
nop
jo
sub
shrb
push
mov
xchg
xchg
cmp
sbb
outsb
add
jle
pop
cmpsb
loopne
dec
mov
cli
and
out
xchg
mov
inc
cld
push
shr
jo
test
pop
ja
jmp
call
push
jo
cmpsl
or
jo
scas
add
fcom
insw
push
pop
xchg
ja
stc
xchg
std
pop
jae
sub
xchg
pop
jo
dec
mov
adc
pop
data16
add
push
rcll
jg
cld
pop
sbb
push
mov
xor
movsl
jo
and
inc
cmp
lock
jns
clc
jl
outsl
mov
testb
test
fdivl
mov
push
push
fwait
push
sub
out
sbb
cmp
ficompl
xor
pop
jo
repnz
hlt
xchg
lods
sub
xor
fisttpl
ja
cs
lea
jo
mov
sbb
dec
mov
sbb
dec
pop
sbb
or
fcompl
mov
jmp
push
mov
xor
inc
dec
ficomps
lock
cmp
mov
mov
bnd
and
sar
aas
xchg
jg
and
xor
loope
xchg
inc
roll
insl
add
push
inc
lahf
mov
adc
es
lahf
or
scas
pop
pushf
and
jb
mov
fdivl
cmc
xchg
pop
insl
pushaw
add
fldt
test
sarl
push
mov
push
sub
add
pushf
repz
mov
outsb
mov
push
loopne
loopne
jo
gs
xchg
jo
jmp
dec
dec
jo
ss
inc
nop
dec
ret
jno
lods
fcoml
mov
lods
inc
add
stos
xchg
adc
imul
jo
xlat
in
mov
jo
aad
aam
push
in
push
scas
bound
nop
pavgw
shl
jns
movsb
inc
pop
xchg
push
cld
mov
mov
jl
ljmp
in
pop
jo
roll
inc
dec
aad
pop
outsb
jge
stos
cmp
mov
pop
jnp
insl
push
es
std
inc
mov
nop
xor
pop
out
push
jo
sbb
or
jo
jnp
mov
jo
inc
push
adc
pop
mov
jo
xor
test
repz
insl
pop
test
mov
add
insl
or
mov
dec
sub
cmc
mov
push
cmp
jecxz
mov
and
inc
insl
sub
call
jo
enter
add
jo
dec
pcmpeqb
stc
dec
jo
cmc
push
int3
cmp
jns
pop
or
xchg
jae
mov
fwait
nop
icebp
mov
xchg
jo
rclb
jne
xor
fldl
leave
jno
nop
arpl
popf
adc
push
jg
mov
outsl
mov
test
adcl
add
into
sarl
adc
fcmove
adc
push
pop
rcrl
cmpsb
stos
cmp
add
mov
shrb
cmp
mov
outsb
pop
jb
out
jo
into
pop
mov
fldt
cwtl
loopne
xor
inc
sub
xor
adc
sbb
sti
arpl
xchg
add
test
mov
mov
cli
sbb
sarl
adc
div
arpl
mov
jo
rorl
pop
call
push
ficomps
enter
mov
mov
jo
mov
jo
lods
push
negb
in
jo
xchg
stos
dec
xor
fcmovnbe
and
jg
call
cltd
in
jo
aas
scas
rcrl
lahf
repz
cmc
xchg
stos
or
mov
jae
sahf
jns
arpl
mov
add
pusha
or
mov
nop
cmc
jp
jo
dec
pop
and
push
or
sub
sub
sbb
jno
push
pop
mov
inc
jae
cmp
or
jo
adc
pop
jo
push
add
out
mov
incb
rorl
insl
mov
pop
add
out
dec
mov
inc
or
fisttpl
xchg
adc
sahf
jae
adc
jo
jnp
iret
rcl
xor
mov
xchg
push
and
sahf
cli
fistpll
xchg
pop
int
loope
mov
jo
cmp
jo
pop
stos
fcomps
cmpsl
rcr
xchg
test
xchg
mov
jecxz
mov
dec
jae
jo
data16
nop
ja
jo
rcl
shl
mov
lahf
cmpb
sbb
jo
mov
pop
dec
pop
xor
pushf
mov
call
xor
movsl
pop
add
add
insl
out
sti
and
push
mov
jo
cld
into
cltd
adc
out
orb
pop
jl
xchg
jno
xor
mov
in
jns
insl
cwtl
lcall
mov
out
mov
cmp
lock
mov
mov
lea
jo
push
out
aad
loop
ja
out
mov
loopne
jno,pn
pop
test
in
inc
push
clc
dec
roll
mov
std
aaa
insb
pop
pop
fadds
inc
daa
xchg
inc
mov
cmp
dec
fwait
jno
shll
ret
lods
mov
ljmp
sbb
mov
jbe
dec
cmc
iret
sbb
jae
popa
cmp
dec
mov
inc
cli
out
inc
fldcw
jo
out
add
push
add
dec
fnsave
enter
lods
in
out
fwait
lahf
push
call
pushl
faddp
jo
adc
mov
cmp
fcmovne
mov
cmpsl
ret
mov
insl
cltd
int3
aad
shrl
sbb
fwait
push
adc
cmp
cli
xchg
loop
mov
fldenv
mov
inc
and
repz
and
test
sub
and
or
insl
imul
add
jge
dec
mov
out
pop
mov
ret
add
cmp
dec
jae
xchg
adc
adc
mov
hlt
xor
cmp
adc
or
nop
mov
pop
insl
cmpsb
sub
leave
dec
or
lret
mov
gs
jmp
pop
xor
mov
jnp
mov
dec
in
sti
stos
stos
imul
outsb
rol
xor
jl
push
pusha
jne
mov
xchg
out
jmp
orl
insl
aaa
push
cmpsl
cmp
add
push
jae
dec
or
mov
jmp
sti
mov
jo
xor
jp
adc
lods
jo
push
aad
xor
bound
jo
pop
adc
test
popf
mov
mov
pop
inc
pushf
jo,pt
cwtl
mov
add
jo
or
dec
fwait
stos
mov
jo
int
shll
loope
cmpsb
add
mov
lret
jo
bound
jno
xor
movsl
jo
imul
jo
pextrw
scas
add
xchg
lea
int3
cwtl
cmp
mov
jl
out
mov
fwait
cmp
lea
data16
sbb
lods
stc
push
ja
xor
int
xor
jo
jecxz
aad
stc
fwait
jo
push
inc
push
mov
jge
mull
mov
es
out
frstor
jbe
jp
insb
mov
xor
iret
imul
cmpsb
aam
jo
sub
fsts
sbbb
mov
jmp
ja
shrl
cmp
and
lods
sbb
divb
jo
mov
movsw
jo
arpl
lcall
popf
or
std
popa
pop
add
div
test
jo
mov
rorl
cmp
daa
imul
lahf
test
add
js
sbb
push
xor
jl
outsl
out
cld
wrmsr
push
xchg
mov
mov
dec
mov
popl
jo
xor
push
jo
jge
push
aam
addr16
jo
jle
int
add
sti
cmp
xorb
dec
fisttpll
pop
push
sub
jo
mov
mov
mov
shll
and
mov
cmpsl
xchg
loopne
ja
cmp
fsubrl
call
cmp
mov
mov
stc
dec
ret
cli
jge
mov
pop
aaa
rcl
jo
xor
jo
mov
dec
scas
jo
add
cmpsb
int
movsl
dec
adc
sub
push
cmp
loope
jno
xor
repnz
js
lock
test
mov
mov
xor
cmp
adc
ds
leave
mov
jmp
sub
or
into
adc
mov
mov
pop
nop
adc
dec
pop
mov
pop
jo
aam
and
xchg
jo
sbb
fxch
pop
sbb
lahf
xor
lods
jne
scas
rorb
in
jmp
mov
jo
add
aad
psllw
divb
rorb
pushf
sahf
jo
xor
or
or
aaa
push
sub
jae
cld
pusha
xchg
lcall
iret
and
mov
fwait
adc
insl
scas
xor
leave
jno
adc
jae
sub
mov
pop
jmp
loopne
out
mov
inc
sti
adc
shll
sbb
push
jo
fistps
pop
jo
data16
in
pop
inc
xchg
push
in
xor
jl
bnd
popf
add
jo
scas
aad
mov
mov
mov
cltd
sbb
sbb
rcrl
pushf
fs
jo
or
fcompl
jo
xchg
pusha
test
jnp
or
or
lock
xchg
fmul
and
stos
fisttpl
add
add
popa
cmp
mov
leave
arpl
jp
cmp
pop
imul
aad
rclb
sti
pop
scas
or
jo
aaa
mov
sar
and
movsb
in
jo,pt
fldt
sub
std
fbstp
pop
loopne
sub
jo
mov
add
inc
or
sub
jo
in
fdivrl
mov
imul
push
push
jae
xchg
sbb
bound
cli
xor
push
pop
iret
dec
lret
sub
loope
inc
outsb
mov
push
andl
repz
inc
xchg
fnsave
leave
jo
xchg
add
fimull
and
aad
push
xchg
out
sbb
icebp
cmc
jle
add
sub
mov
addr16
push
shl
pop
mov
xchg
mov
jge
jnp
insl
jo
lahf
sub
xor
push
jnp
inc
add
add
and
clc
sub
adc
sbb
pop
or
cs
jbe
in
jo
cld
data16
mov
jo
rclb
or
sbb
jns
repnz
sbb
adc
mov
pop
fsub
andb
or
jle
shll
pop
inc
cmpsb
sbb
jo
int
mov
jo
jne
fistl
cwtl
xchg
jne
imul
mov
fldcw
push
sbb
insb
ja
loope
stos
into
jbe
add
stc
adc
pop
imul
sti
or
inc
jae
bsf
xor
enter
add
test
ljmp
ja
insl
lret
mov
push
inc
sbb
xlat
adc
jo
subl
jnp
fadd
out
stos
test
push
je
cs
lea
lock
ljmp
sub
bound
jg
mov
mov
das
mov
leave
clc
movsb
leave
sbbb
or
es
mov
xor
jo
mov
int
mov
mov
aad
out
xor
call
movsl
sbb
lods
mov
rclb
mov
mov
cld
or
xor
int3
cmp
dec
push
jo
out
mov
push
mov
or
push
std
data16
popf
in
add
add
adc
push
adc
and
fs
inc
mov
notl
mov
sub
push
pop
lods
xchg
dec
mov
test
jo
dec
frstpm(287
add
cmp
adc
or
jl
fsubs
sbb
jge
add
mov
and
and
pop
add
dec
into
fs
scas
push
adc
idivl
mov
out
inc
fildl
je
push
add
lock
sarb
jo
and
iret
mov
and
cld
mov
imul
xchg
lahf
and
inc
ja
nop
jp
lock
push
push
jo
dec
add
in
ficomps
aad
inc
mov
push
insl
jo
cmp
dec
sub
test
jns
add
pop
add
sbb
insl
jae
lahf
loope
add
xchg
push
adc
and
cmp
xor
jne
inc
add
call
inc
push
mov
mov
adcb
outsl
mov
ss
scas
mov
in
cmpsl
lock
test
pop
pop
xchg
rcrl
push
sarb
insb
sbb
filds
aad
dec
ljmp
jo
sbb
inc
mov
das
pop
ror
push
jo
movsb
xor
sbb
sub
adc
dec
xlat
into
pop
out
cmp
jo
mov
packuswb
add
add
inc
insb
lds
jbe
movsl
stos
enter
dec
rorl
push
fwait
push
ret
push
sti
or
std
lret
jo
and
sbb
xor
lock
mov
das
cmpsl
jo
dec
daa
jle
xor
adc
pop
sub
adc
imul
pop
jo
jecxz
pushl
xor
pop
mov
mov
aad
sub
pop
ret
add
and
out
into
js
nop
xlat
sti
jo
push
cmp
shr
xchg
jo
jle
dec
xchg
adc
mov
hlt
sahf
fldenv
ja
pop
sub
adc
sub
jo
xor
rclb
idivl
cld
jge
sbb
mov
xchg
pop
cmpsb
mov
jo
ss
dec
jo
fildl
popa
outsb
and
xchg
aam
add
push
sub
ret
mov
cmp
das
mov
pushl
cs
arpl
fnstenv
insl
in
stos
aad
pop
dec
mov
push
jle
jo
xlat
inc
testb
xchg
out
jo
mov
aad
pop
je
pop
jo
mov
add
int
fcompl
sub
jo
ja
bound
fstpt
movsl
inc
jnp
jo
aad
enter
popf
jo
cmpsl
inc
insl
fstp
data16
jo
jge
aad
dec
cmpb
fldpi
pop
in
clc
mov
xor
jo
ror
and
movsl
cmp
sbb
xor
jg
mov
jae
push
aaa
rcr
dec
imul
insl
cmc
sub
jb
add
add
jns
addb
ret
sbb
push
jp
jge
scas
fnstenv
push
rorb
dec
add
push
or
sti
and
rcr
inc
pop
jo
add
adc
sti
dec
mov
or
push
push
mov
fcompl
push
add
jl
jo
pop
inc
sbb
pusha
jo
les
jmp
aaa
pop
pop
mov
bound
cmc
cmp
push
mov
in
cmp
fnstenv
test
push
jle
insl
mov
inc
ret
mov
adc
xor
fiaddl
mov
lock
sbb
les
inc
nop
xchg
dec
dec
pop
cld
hlt
dec
xor
mov
ss
cltd
je
insl
cli
push
in
mov
fidivl
fwait
cmp
fsubrs
mov
push
or
xor
jno
ror
imul
pop
jo
dec
das
add
or
aaa
fxch
add
js
inc
outsw
inc
in
fwait
shll
mov
jo
inc
cmpsl
cmp
inc
mov
xor
mov
jo
pop
dec
push
xchg
out
jecxz
mov
fildl
jmp
mov
adc
bound
test
pandn
mov
stc
fdivr
or
lret
negl
xor
out
push
data16
out
js
std
out
jp
outsl
sahf
jl
sbb
imul
push
jb
cltd
push
pshufw
lods
rcrl
imul
and
push
mov
insl
cmpsl
jns
repnz
scas
add
fists
lods
and
in
fnstenv
and
push
pop
jp
mov
pop
adc
add
push
sqrtps
or
jmp
pop
mov
lods
shlb
aad
adc
jae
scas
jo
in
pop
test
lods
xor
jo
aad
repnz
pop
cmp
jo
mov
or
jb
aaa
rcl
mov
jo
in
cltd
jl
rcll
jbe
jnp
imul
int3
arpl
push
mov
jo
inc
xchg
movsb
inc
dec
mov
jo
inc
mov
push
jo
jnp
mov
pop
lea
mov
pop
xor
inc
into
dec
add
mov
inc
lcall
int
cmp
loop
mov
mov
or
lock
pop
insl
fs
and
mov
jo
lret
mov
add
mov
pop
jo
cmp
push
clc
mov
into
jo
jmp
inc
loop
sub
hlt
faddl
mov
sbb
and
leave
mov
add
rcrb
cmp
jge
sub
inc
mov
arpl
in
jo
scas
in
jne
imulb
and
sbb
cmpsl
push
icebp
jo
pop
mov
pop
or
jo
int
push
push
pop
cmp
sahf
shrl
fsubs
mulb
leave
sbb
fsubp
in
dec
and
add
lods
jae
mov
xchg
cmp
outsb
push
lcall
repnz
jo
popf
scas
cli
movsl
pop
mov
jo
pop
test
sahf
jo
aad
popf
rol
aas
sarb
jo
pop
or
cmp
mov
add
icebp
push
push
stos
xor
ss
mov
insl
push
inc
xchg
dec
std
clc
xchg
mov
mov
cmp
pop
push
sub
inc
cmp
nop
cmp
sbb
stos
push
add
leave
jmp
and
sbbl
add
inc
push
or
mov
dec
xchg
xor
or
cli
outsb
add
aas
int3
cmc
js
jo
fcmovnbe
ret
dec
out
or
iret
xchg
mov
sub
mov
gs
jae
add
les
adc
inc
lods
inc
pop
lea
or
out
sbb
dec
clc
cmpsb
test
sbb
lock
cmc
loope
outsb
sbb
adc
insl
pop
mov
push
mov
xor
jo
xchg
jmp
cmpl
test
aad
jle
mov
lock
sarl
divb
gs
daa
mov
pop
nop
pusha
pop
xchg
pop
es
insl
rcll
or
inc
jmp
adc
jo
mov
add
jo
mov
pop
mov
mov
push
and
sub
ljmp
jne
into
stos
or
mov
jae
and
jecxz
jo
sub
dec
pushf
aad
mov
outsl
mov
mov
out
push
dec
jg
mov
push
and
divb
push
fs
enter
outsb
lea
or
insl
dec
cmp
add
pop
inc
lock
aaa
cs
and
inc
pop
mov
ljmp
jo
sti
aad
cld
add
jo
dec
outsb
repz
xor
pop
dec
or
fsts
iret
xchg
xchg
call
jbe,pn
add
out
in
xchg
jo
aad
arpl
insb
add
pop
mov
into
dec
fucompp
jo
frstor
and
nop
push
cmpsl
lea
pop
insl
pop
pop
iret
cmpsb
mov
mov
scas
jo
ja,pt
fsts
dec
pop
jne
out
imul
imul
or
and
jo
das
and
inc
xchg
xor
sub
in
shl
lea
fisubrl
jp
pop
adc
jae
mov
mov
dec
push
test
jo
and
sbb
mov
pusha
outsb
scas
mov
lock
push
lock
xchg
int
fwait
mov
jo
xlat
mov
push
outsl
nop
test
out
sub
mov
jo
dec
aad
pushf
mov
xchg
xor
movsb
and
dec
fs
int3
xchg
mov
sub
ja
xchg
into
fidivl
cmp
cmp
sub
popf
jo
int3
pop
decb
arpl
or
es
jp
jo
cwtl
inc
inc
stos
loopne
mov
insl
and
movsl
std
add
add
xchg
mov
adc
ja
mov
adc
ljmp
insl
scas
sbb
pushf
scas
in
jo
mov
cltd
sbb
cmp
jl
aad
jo
imull
repz
pop
mov
pop
mov
insl
jno
inc
gs
stos
cwtl
aad
subb
loopne
ret
mov
jle
insl
push
loop
cwtl
inc
mov
jo
sahf
stos
in
jg
into
insb
test
pop
jo
fwait
ret
mov
ret
cli
sbb
mov
push
jo
xor
inc
mov
inc
push
mov
mov
jae
das
aad
dec
lods
mov
and
mov
popf
pop
inc
cmp
cmc
jo
adcl
cmpsb
mul
mov
xchg
les
sub
jns
scas
aam
stc
jo
xchg
mov
leave
push
clc
js
xlat
cltd
das
or
mov
pushf
jo
pop
push
aad
dec
call
pop
jo
mov
push
xor
xchg
push
dec
lock
insl
in
insb
and
jns
sbb
fsubs
pop
shl
sbb
incb
cltd
jo
outsb
jnp
repnz
sub
popf
fdivrs
cmp
cld
xchg
push
ss
imull
sub
add
push
int
add
push
jo
insb
mov
std
test
insl
push
jmp
xchg
mov
jo
cmpsb
sub
in
test
mov
sarl
cmp
push
leave
imul
rcrl
mov
test
xchg
scas
popa
mov
jo
mov
jo
fs
fwait
stc
js
out
ficoml
scas
sub
data16
push
test
mov
jns
mov
jo
in
mov
jge
jbe
data16
pop
inc
pusha
mov
jo
repnz
and
sbb
mov
test
repz
pop
mov
mov
jae
mov
mov
dec
xchg
insb
out
nop
jne
fwait
test
jo
inc
xor
mov
jbe
insb
insl
cmpsb
xor
movsl
mov
orb
data16
call
jge
enter
outsb
push
lods
push
xor
stos
andb
popf
cmc
insl
mov
sbb
rolb
jo
outsl
aas
mov
jo
pop
and
dec
imul
jbe
adc
insl
aad
jo
mov
inc
xorl
sbb
popf
jo
and
scas
xor
fidivl
mov
cld
inc
jno
insl
add
jo
adc
mov
pop
jge
jp
xchg
out
dec
nop
sbb
mov
insb
mov
jo
xor
stc
cmp
or
imul
out
cmp
ljmp
or
jge
cmp
shlb
mov
push
stos
mov
sub
fwait
outsb
inc
jo
test
pop
shrb
addl
jo
leave
pop
cltd
std
pop
fisubs
data16
cld
mov
jo
lcall
jae
jno
mov
cwtl
inc
in
stc
inc
sub
lock
xor
jo
push
push
mov
jo
bound
cmpsb
and
test
mov
jo
loop
fldt
and
les
aad
cmp
into
push
jo
fwait
add
jo
rcl
sub
cmp
jo
test
lahf
xor
jo
cld
lods
cmp
clc
mov
sbb
cmp
sbb
or
inc
ficomps
pop
jo
mov
cmp
in
cli
insl
jo
xchg
mov
nop
jae
mov
outsb
ret
mov
je
sbb
aaa
arpl
jne
adc
lock
aam
mov
clc
xor
stos
in
pop
xorl
cmp
mov
sti
pop
xor
pop
pop
test
push
sbb
fnsave
and
imul
nop
repz
pop
jae
mov
cmpb
adc
push
rcrl
cmp
add
or
fistpl
jo
es
in
ja
insb
daa
adc
mov
cmp
add
andb
mov
pop
dec
adc
jl
xlat
iret
and
loope
filds
pusha
lock
dec
dec
sub
fdivl
mov
sarl
pushf
repz
mov
mov
cmp
cmc
out
mov
mov
outsl
les
arpl
loope
mov
jo
push
adcl
dec
insl
push
xchg
adcb
iret
mov
cwtl
mov
test
dec
fs
imul
jle
jno
jo
or
mov
pushf
jp
mov
pop
in
ficomps
mov
sbb
xchg
push
test
jo
dec
lret
fidivrl
scas
stc
or
sub
lock
and
pop
dec
insl
ror
jo
enter
jbe
cmpsb
std
pop
xchg
movsl
arpl
lods
mov
jo
out
fidivs
cltd
cmp
cmpsl
ljmp
sub
cmp
and
rolb
aam
nop
adc
mov
jnp,pn
jno
shrb
movsb
mov
insl
loope
hlt
mov
pop
mov
adc
xor
int
icebp
jecxz
dec
cmp
jo
int3
insb
idiv
or
jo
flds
cmp
mov
add
test
popf
in
mov
cltd
dec
mov
rclb
adc
insb
insl
push
cmp
lret
lds
imul
movsl
cmp
cmp
add
repnz
jae
enter
iret
add
xchg
js
jnp
push
mov
jecxz
jo
adc
iret
rol
pshufw
jl
pop
ljmp
mov
leave
aad
arpl
testl
pop
aas
fcmovnbe
xor
call
mov
add
xor
lods
dec
mov
outsl
xor
push
jo
xchg
nop
insl
pushf
fidivl
dec
cmp
insb
add
mov
jne
inc
push
inc
lock
mov
andb
not
es
dec
cmp
ret
lods
ljmp
sbb
or
jl
in
fisttpl
push
cmpsb
push
xor
repz
out
out
rcrl
jo
les
out
aad
insl
sbb
sarl
xor
shrl
jae
sbb
sbb
jo
mov
xchg
jo
cmp
shlb
cmp
imul
mov
rcr
jno
mov
or
icebp
mov
jo
aaa
mov
jo
pop
push
scas
push
adc
aad
cmp
sub
inc
pop
test
jle
insl
xchg
movsb
mov
push
mov
xchg
inc
sahf
jno
outsl
mov
fimull
pop
jo
mov
loopne
xchg
cmp
xor
aad
add
pop
insl
jns
adc
jo
pop
pop
das
aad
nop
xchg
in
outsl
loop
jbe
mov
pop
fwait
jo
shrl
int3
xchg
sub
je
in
and
fdivl
xchg
aad
mov
pop
insl
add
push
pop
pop
testb
jb
pop
mov
adc
ja
fisttpl
imul
loopne
into
sarb
pop
lea
pop
cld
and
adc
loope
mov
pavgw
lock
dec
jmp
lock
shll
jo
fsubl
jo
in
dec
cwtl
sbb
cmp
rolb
push
rcr
call
int3
movsb
aad
push
popf
les
mov
mov
jno
or
mov
jp
subl
insl
int3
or
cwtl
jo
movsb
popa
mov
ds
sar
mov
fldt
mov
adc
int3
movsl
pusha
andb
iret
and
call
mov
mov
add
cli
mov
adc
push
daa
jle
jnp
add
movsb
sahf
mov
and
or
mov
xor
cmp
es
lea
dec
add
add
ss
roll
js
cmpsl
jo
int
pop
aad
push
shll
jb
and
data16
insl
inc
xor
jo
sbb
pop
add
cmc
xor
ja
mov
in
nop
outsb
dec
push
repz
xchg
pop
in
insl
dec
xchg
out
sbb
inc
or
test
aaa
ja
bound
loop
loopne
adc
jp
leave
jg
adc
rcll
jo
insb
jne
jae
jo
xor
sbb
fistl
aad
sub
std
jo
or
ret
cmp
dec
je
fistl
jp
repnz
inc
pop
sbb
jo
pop
call
call
into
aas
push
aad
mov
mov
cmp
lahf
mov
aad
jns
pop
mov
insb
jbe
or
mov
mov
iret
aad
add
jo
dec
xor
jge
jo
ret
lret
int3
cmp
and
jo
and
mov
add
xchg
gs
mulb
je
mov
in
cwtl
mov
dec
out
lock
mov
jo
outsb
testl
jo
xor
push
aad
lods
mov
pop
xchg
jo
jp
iret
imul
mov
int3
cmp
push
push
pop
xorb
sbb
pushf
ss
mov
jle
ficomps
popa
es
mov
mov
jo
out
les
dec
jmp
inc
leave
and
les
xor
es
fistpll
and
inc
pop
addr16
js
fcmovnu
rcrl
xor
jo
rorl
jnp
fwait
cld
jo
sub
jl
leave
xor
jo
xor
push
sub
cmc
cmp
push
cli
adc
jge
mov
sbb
jo
jb
fmull
push
cmp
sub
sub
push
jo
out
mov
dec
mov
jmp
cmc
pusha
insb
inc
cmpsl
lds
pop
and
adc
push
movsl
in
jo
jbe
cmp
sbb
je
pop
out
and
out
pop
push
fnsave
jne
push
ss
jo
outsb
inc
add
popf
add
cs
test
mov
pop
inc
xor
cltd
enter
imul
aad
mov
mov
lds
mov
call
sub
jg
xchg
jo
mov
cmp
dec
xor
dec
jo
push
lret
xlat
adc
pop
popa
out
jo
sbb
and
jo
push
xchg
push
mov
leave
jo,pn
lds
and
jo
lock
push
jo
jp
outsb
jb
mov
dec
int3
daa
test
and
inc
aad
jo
xor
jb
cmp
dec
jo
pop
loope
add
xchg
lret
out
add
adc
pop
xor
leave
dec
xlat
mov
fsub
lock
aas
pop
pop
add
jo
push
sbb
jo
gs
movsl
pop
shrb
jo
pop
fldl
cmp
ljmp
fmuls
adc
ret
jp
and
jl
dec
lds
pop
push
cmp
mov
dec
xorl
dec
or
push
out
insl
aad
outsb
xchg
sarb
test
jp
mov
or
out
sub
lds
cld
push
jnp
xor
outsb
mov
xchg
aas
add
cmp
jo
rcll
or
in
mov
jo
into
bound
jo
addl
leave
jmp
push
or
inc
mov
insl
ljmp
lahf
aam
les
sub
jo
fists
data16
dec
insb
jmp
xchg
xchg
dec
pop
jbe
lahf
jo
push
pop
jnp
outsb
cld
mov
ret
xor
pop
aam
insl
adc
pushf
fwait
lret
test
pushf
arpl
jae
outsb
adc
rorl
cmp
jo
pop
jb
cmp
lea
addr16
and
xor
fldcw
idivb
aas
mov
inc
imul
nop
adc
lahf
js
jo
push
lretw
test
ja
mov
xchg
jo
outsb
mov
jae
or
add
test
push
xor
mov
dec
push
jo
scas
sbb
lret
and
enter
pop
leave
je
loopne
addb
jo
sarl
cmp
jo
pop
cmpsl
mov
jo
add
push
xor
sbb
dec
mov
lock
xor
mov
add
adc
cmp
sub
jo
loop
psrld
movsb
xchg
enter
into
sub
jo
jmp
faddl
gs
dec
subb
pusha
fists
ret
xlat
insl
ja
mov
xchg
sub
lods
pop
hlt
push
sti
pusha
push
xchg
add
sbb
ret
test
jne
out
cmpsb
lock
mov
pop
push
xchg
inc
xor
xor
mov
mov
mov
or
loop
sbb
out
pop
sbb
jbe
add
fstps
dec
scas
cmp
mov
test
push
test
dec
fbld
mov
test
mov
pushf
rcrl
jo
xor
icebp
mov
mull
pop
pop
mov
jo
and
faddl
xchg
test
xorb
inc
jae
lret
into
xchg
mov
sbb
jo
push
cld
ret
inc
cmp
push
jecxz
pop
mov
fildl
stos
mov
call
shlb
dec
adc
lea
push
sbb
loope
jbe
jo
aad
ljmp
enter
pop
mov
inc
jo
popf
sbbb
add
dec
and
pop
jp
fbld
push
fnstenv
sub
stos
push
inc
pop
sbbb
lret
sub
je
xchg
nop
fsubr
pop
sub
imul
outsl
mov
cmpsl
mov
xchg
adc
mov
sarb
xchg
jo
mov
gs
push
fs
mov
push
mov
into
and
gs
jo
dec
rcll
xor
push
jo
fdivrl
lahf
popa
aad
pushf
jo
push
aaa
sub
cld
jnp
mul
ret
push
fstpt
rcrb
push
push
cmp
jg
xchg
xor
dec
lods
inc
lock
inc
xor
jo
jnp
test
jo
es
int
roll
jo
jne
in
dec
leave
mov
inc
sub
cwtl
jno
sti
repz
xor
or
push
lret
cmp
addr16
shlb
sti
fcompp
adc
call
dec
xor
xchg
cmp
outsl
mov
cmp
imul
xor
daa
inc
and
outsl
fbstp
dec
jecxz
sbbb
mov
clc
enter
xchg
rcrl
insl
clc
aad
cmpb
xchg
nop
dec
adc
out
push
sub
xor
cld
outsb
ds
adc
push
insl
sbb
and
jecxz
pushf
adc
sub
push
mov
xchg
fnstcw
loopne
rcrb
jo
mov
outsl
loop
lods
pushf
jo
int
adc
xchg
shlb
dec
gs
arpl
loop
int3
rcrb
jns
push
mov
mov
mov
jo
lods
andb
lahf
jo
shrl
cld
ja
nop
pop
pushf
jl
out
bound
adc
rcrb
or
leave
cmp
cmp
fwait
push
adc
pushf
adcb
ljmp
sub
enter
mov
enter
mov
imul
xlat
outsl
jo
add
mov
cmp
pop
xchg
inc
jae
jge
xchg
call
popf
jo
inc
mov
repnz
insl
jo
xchg
jp
je
jl
aam
or
xchg
aaa
cmpsb
cmc
or
jo
mov
imull
dec
jo
mov
imulb
dec
bswap
ja
pop
push
sub
pop
add
adc
test
and
repnz
ljmp
ret
out
sub
sarl
lock
mov
in
int
cli
fistps
dec
push
jne
or
jo
aad
int3
ret
jo
pop
jnp
and
add
out
mov
mov
loopne
rol
cmpsl
scas
insl
xor
mov
xchg
enter
loope
movsl
or
aas
pushf
fistps
pop
xor
mov
shr
daa
in
xchg
fisttpl
add
dec
mov
pop
cld
mov
dec
xchg
push
mov
les
fistpl
shr
negl
or
je
nop
jnp
and
int3
mov
dec
loopne
xchg
mov
or
pop
mov
pop
jo
cmp
inc
mov
cmp
test
repnz
jbe
lret
mov
push
mov
sbb
jo
mov
ret
sub
xorb
push
lea
je
xor
cmp
loopne
sub
xor
leave
jnp
mov
xor
mov
cmpsl
fldt
bound
pop
es
nop
cmpsb
das
test
xor
cmpsl
lds
movsl
xchg
arpl
sbb
mov
pop
rcl
add
call
loopne
test
ja
pop
inc
jbe
shlb
jo
shrb
dec
cmpsb
dec
jp
outsl
mov
push
push
pop
call
lret
mov
pusha
dec
cmp
adc
push
ljmp
ret
pop
jge
add
sahf
dec
shlb
insb
arpl
sbb
jo
out
push
xor
lock
lock
jno
jne
sub
jo
sub
and
cmp
jo
cltd
jg
xor
jo
mov
out
pop
xchg
mov
cmpb
insl
gs
mov
mov
mov
pop
xchg
aad
jo
cmp
std
loopne
mov
mov
cmp
pop
lcall
pusha
adc
outsl
ja
mov
int
jle
rolb
jg
cmp
jo
jmp
mov
cmpsl
divl
inc
dec
sbb
jl
cmp
mov
mov
out
sbb
mov
jns
adc
cltd
xor
aad
mov
insl
inc
sahf
sub
int
scas
dec
mov
jae
inc
mov
inc
insl
jo
neg
stos
add
mov
push
pop
sbb
out
push
inc
mov
cmp
testl
or
cmpsb
mov
notb
icebp
jo
sub
out
jo
sbb
and
jo
icebp
aad
inc
mov
mov
jo
subb
sbb
repnz
fwait
or
jo
push
popa
or
outsb
cmp
nop
dec
adc
jo
mov
or
lea
xchg
jo
movsb
test
mov
arpl
jnp
cmpl
jmp
sbb
loop
sbb
jge
adc
mov
push
add
movsl
gs
repz
fldt
mov
adc
or
out
ja
cmpsb
cli
push
sbb
push
enter
add
adc
xor
adc
adc
repz
cltd
xchg
out
rorb
or
insb
push
jmp
xchg
lods
out
mov
out
daa
xor
int
pushf
loopne
adc
cmp
jo
mov
cmp
xchg
ds
in
push
jo
mov
aad
jp
sub
mov
std
cmp
jo
lret
xlat
push
ja
das
rcl
lock
or
shlb
cmp
mov
mov
push
fmul
xchg
icebp
jo
test
ds
xor
add
fcomps
adc
enter
push
subb
nop
mov
mov
jo
mov
sub
pop
cmp
xor
lcall
aas
adc
aam
cmpsl
jecxz
cwtl
rcrb
jo
cmpsb
arpl
es
fnstcw
test
fdivp
mov
dec
rorl
imul
pop
ror
jg
jo
rorl
scas
jmp
mov
jo
mov
aam
cmpsl
fdivr
ja
divb
aad
add
and
pop
jno
mov
mov
jo
cmp
test
cmp
cltd
insl
into
repnz
scas
mov
lock
or
add
push
rcll
aad
sbb
iret
das
mov
jnp
cmp
in
hlt
pop
ret
inc
bound
jo
mov
and
mov
cwtl
jo
test
jo
jne
cmc
push
push
xchg
shlb
out
sub
test
ret
or
and
fdivrp
xchg
inc
pop
cs
push
dec
jae
mov
icebp
arpl
sti
or
loopne
inc
pop
cmp
cmpsl
lods
lock
insb
add
jo
lret
andb
lahf
es
push
pop
mov
xor
ds
test
sarl
dec
fnsave
rep
pop
pop
push
cmp
cmp
stos
cmc
in
mov
bound
jnp
les
lock
test
cli
xchg
sub
jo
dec
imulb
mov
mov
jns
jl
lcall
xor
cld
insb
mov
inc
jo
cmp
les
mov
cmp
dec
sub
in
sub
pop
nop
data16
jo
sub
dec
jo
rcrb
or
add
cmc
jl
std
jb
jo
dec
pop
imul
jg
das
outsb
das
insb
es
repz
sbb
add
nop
inc
fcompl
jo
in
or
call
pop
popf
test
cmpsb
inc
and
dec
xorl
and
mov
aas
rcr
xor
in
xor
adc
dec
xor
pushf
xor
adc
jnp
pop
imul
xchg
pop
lock
mov
or
int3
jo
lds
jo
push
push
mov
jo
sahf
insl
dec
inc
xchg
cmc
push
dec
pop
aad
outsl
adc
out
out
push
add
loopne
mov
js
insl
mov
aas
sar
adc
add
clc
shlb
jmp
push
hlt
insl
ljmp
lock
mov
jo
xchg
icebp
inc
lret
fisttps
jo
pop
ja
jle
stos
jns
enter
cmp
cmp
xor
test
in
insl
xor
stos
sbb
test
cmc
jno
inc
mov
lock
dec
jge
jo
inc
aam
push
pop
lret
jo
mov
mov
jo
jb
inc
test
mov
mov
xchg
rcll
mov
leave
jo
mov
mov
sbb
cmpsb
sub
jo
movsl
outsl
mov
ja
mov
pop
push
gs
adc
dec
mov
sbbl
fs
pop
cmpsl
mov
das
push
jbe
sar
ljmp
jo
or
push
mov
fs
insl
lods
pushf
fisttps
mov
js
int3
ret
jae
xchg
jle
insl
std
mov
cmc
xchg
mov
fld
push
xor
ret
add
call
jo
lods
ds
cmp
pop
addl
pop
ror
cmpb
js
dec
dec
sub
xor
mov
jo
lcall
xor
mov
out
out
insl
lds
cmp
sbb
outsb
loop
push
jecxz
pop
loopne
jae
inc
les
loopne
pop
jmp
push
jo
popa
add
add
or
mov
push
jo
fs
shll
stos
rolb
jns
inc
lock
xor
push
adc
xchg
ss
and
dec
mov
mov
nop
sbb
jo
and
pop
jo
xchg
dec
addr16
aaa
repnz
jo
movsb
jae
fstps
imull
sbb
add
mov
cld
push
cmp
dec
sub
push
xor
adc
push
lcall
mov
adc
popf
mul
xchg
lods
insb
mov
out
loope
pop
nop
and
sbb
mov
leave
das
dec
fbstp
xchg
add
fisubl
out
adc
or
cltd
xchg
xorb
cmc
jnp
push
es
popa
jo
js
roll
repnz
cld
cltd
cmpl
loope
aad
test
lods
jo
xchg
and
mov
push
sub
aad
insl
pop
dec
les
dec
xchg
js
cli
adc
popa
bound
jecxz
lret
aas
ret
lods
iret
movsb
push
hlt
jae
in
cmpsl
xor
jo
inc
shll
xchg
jmp
fildl
xchg
mov
mov
xorl
dec
aas
arpl
out
lods
push
cmp
push
fldcw
xor
ja
add
shll
jo
scas
sub
or
jo
rolb
jnp
orb
mov
jae
jne
rorl
jo
out
fdivrp
into
fstpt
aad
jp
outsb
idivl
std
xchg
mov
and
mov
sbb
cmp
xchg
push
mov
int
int3
shll
nop
add
lock
ret
mov
jo
and
pop
sub
rcrb
pushf
push
dec
jo
push
into
clc
cli
ret
lea
adc
js
xchg
jb
push
xchg
outsl
mov
sub
jne
push
cld
addr16
loope
or
xlat
in
mulb
inc
pop
lret
faddl
xchg
in
call
ljmp
xchg
adc
mov
jge
jo
aad
aaa
mov
nop
sub
xchg
lds
call
and
xorb
daa
mov
push
adc
gs
leave
sub
flds
test
jo
mov
inc
mov
adc
pop
jbe
cmc
cmp
addr16
and
mov
lock
jo
push
dec
sahf
js
ja
add
or
ret
mov
stos
fstps
bnd
mov
cmp
data16
jge
jo
ds
fcmovne
jo
add
and
push
push
mov
dec
inc
jnp
push
je
inc
ret
fisttpll
or
mov
adc
pushf
mov
lock
insb
pop
dec
mov
leave
push
fcmovne
inc
clc
and
out
xchg
rcll
jno
jnp
xor
jo
outsb
push
jno
adc
lret
jo
call
cs
daa
fnsave
push
inc
xor
in
fs
jbe
ds
jo
jne
inc
sarb
jo
sub
in
cltd
xor
in
aad
inc
call
in
lret
jo
push
push
jo
daa
mov
push
jo
sub
test
jo
jnp
pop
aad
stos
add
mov
cmp
mov
jo
js
lods
pop
cmc
movsb
clc
jo
mov
stc
pop
sub
test
std
pop
dec
fists
fcoms
jo
sbb
daa
stc
jo
cmp
sbb
fsts
vpcmpeqb
in
iret
or
cld
xor
inc
movsl
or
push
xor
jp
xchg
insl
jge
push
pop
sahf
test
or
outsb
test
les
pop
sub
mov
loopne
addl
movsl
cmp
ficoms
vpcmpeqb
jo
rolb
addr16
repnz
pop
fdivl
movsl
arpl
les
fildl
mov
or
loope
out
pop
ret
lret
jo
inc
leave
pop
cmp
ficompl
push
out
cmp
push
mov
xchg
and
js
sbb
iret
mov
stos
cmpsb
add
pop
push
jo
inc
sbb
or
pop
mov
cmp
lock
xchg
sbb
repz
xor
lock
or
jo
fists
fldt
jo
repnz
aad
cli
je
sti
int3
pop
push
mov
sub
mov
lods
ret
stos
adc
cmpsl
jno
jo
ljmp
xchg
les
mov
mov
mov
and
aaa
in
push
add
lods
pop
pusha
int3
dec
push
push
test
outsl
imul
fsubr
cmp
dec
jo
jmp
sub
inc
mov
stos
dec
sub
adc
lock
lds
adc
aas
cmp
or
aas
adc
ret
jmp
sub
dec
sbb
add
xchg
sub
jo
imul
jo
ds
mov
pushf
fwait
test
pop
pop
xor
jo
xchg
xor
mov
aam
push
in
jo
fmull
add
cld
push
push
push
mov
stos
push
gs
jo
mov
outsl
cmp
data16
sahf
cmpsb
stos
cmpb
jp
xchg
push
sbb
fistpl
jbe
jne
or
jge
out
push
loope
dec
xor
jno
daa
dec
add
cs
rcrb
sbb
stos
ret
dec
push
jbe
add
jmp
lahf
mov
insb
push
mov
mov
movsb
rorl
out
daa
pop
mov
fsubl
aad
outsb
or
xlat
mov
mov
mov
xchg
ret
rcrl
cltd
pop
outsb
dec
fwait
lock
insb
xlat
rol
out
dec
les
jp
mov
jo
lret
lcall
inc
aad
push
push
jnp
or
idivb
leave
inc
loope
add
push
aam
jo
inc
scas
cmpl
int3
mov
jecxz
fdivs
adc
xlat
jo
xchg
aad
cwtl
mov
dec
xchg
xor
fwait
dec
test
int
scas
jae
icebp
adc
loope
xor
pop
nop
xchg
insl
orl
lock
sub
push
sub
xchg
sub
mov
ret
pop
push
inc
pop
inc
jo
test
aad
mov
dec
in
xor
insb
pusha
dec
push
call
jo
mov
inc
adc
mov
cmp
push
sbb
mov
cwtl
jns
jb
adc
mov
roll
mov
push
or
aam
fnstenv
scas
lock
dec
insb
aad
cmp
xor
pop
pop
sub
sub
jo
aad
push
mov
fs
aaa
mov
add
pop
insl
dec
ds
add
dec
jo
mov
jne
insl
fimull
jb
fdiv
sub
mov
jbe
push
rclb
push
mov
xor
cmp
mov
cld
xchg
pop
push
mov
loop
pusha
jg
aas
pop
dec
push
movsl
dec
sbb
nop
inc
lock
xor
push
jp
fwait
mov
jo
pop
fldcw
mov
shlb
hlt
jmp
and
pop
inc
jo
icebp
int3
push
xchg
mov
es
outsb
xor
pop
cmc
test
mov
jo
xor
insb
call
jg
pop
enter
push
shrb
jo
dec
repnz
jb
lret
pop
testb
jp
mov
jo
clc
je
or
mov
and
xor
cmp
in
addr16
dec
aas
push
jnp
jo
bound
jl
xchg
jo
arpl
push
jo
cmp
pop
xchg
jo
clc
fnstsw
xor
scas
in
cmp
jo
popa
mov
gs
insb
jb
rorb
insl
pop
pop
mov
jg
push
arpl
mov
jo
xor
adcb
insl
shll
cld
clc
push
mov
xchg
adc
pop
pop
jae
jbe
sbb
mov
xor
adc
xchg
cmp
adc
xor
sbb
cltd
ja
icebp
aaa
je
add
add
aas
fldcw
outsb
mov
loopne
ja
enter
add
mov
pop
cmp
or
inc
arpl
xchg
fmull
mov
pusha
in
nop
sarb
jo
mov
cwtl
mov
xor
dec
adc
adc
mov
xchg
lcall
sbb
scas
jnp
and
loop
mov
mov
loope
xor
xor
arpl
sbb
shr
repz
call
std
mov
xchg
cmp
inc
sub
mov
cmp
das
insl
mov
sbb
jmp
imul
rorl
aad
aaa
in
bound
cli
imul
inc
xchg
jp
insb
cmc
push
mov
sbb
rcll
pop
nop
pop
lahf
jae
std
xchg
pop
pusha
bound
cmp
iret
adc
ljmpw
push
bound
dec
jo,pt
push
in
ficompl
dec
xchg
mov
leave
adc
xor
and
fisttpl
jle
jo
sahf
stos
cmp
js
movsl
cltd
sbb
fmull
jo
pushf
xchg
mov
leave
or
xorl
dec
adc
ja
lret
jae
jo
insl
sahf
jge
sti
jo
cmp
out
fst
test
jo
rclb
rcl
push
jae
fsubrl
mov
movsb
jp
es
jmp
dec
jo
mov
insl
sub
jae
insb
fs
scas
stc
std
push
jno
fmuls
mov
ss
pop
sub
mov
aam
sub
jbe
xchg
imul
pop
clc
mov
pop
sub
fbstp
cmp
mov
shlb
sbb
jnp
hlt
mov
mov
scas
nop
mov
imull
hlt
in
mov
dec
sbb
jno
lahf
arpl
shlb
inc
inc
outsl
fidivrs
add
into
mov
xlat
ret
push
pop
mov
loop
insl
mov
push
mov
sbb
enter
lods
out
push
or
insl
iret
and
cmp
jo
push
push
pop
jo
inc
dec
add
sbb
lahf
jnp
add
push
jnp
insl
adc
mov
jo
mov
adc
push
fldcw
mov
xchg
shlb
jo
imul
in
jmp
xor
and
lods
or
stos
ss
jnp
lock
mov
push
or
jo
xlat
rcr
popf
ret
cmpsl
jmp
lods
jmp
out
frstor
pop
lahf
and
fwait
jbe
jne
sub
jb
mov
pushf
roll
mov
lds
jo
popl
or
insl
xchg
xchg
pop
or
mov
add
cmp
insl
xor
in
fdivrs
mov
push
mov
jge
insl
dec
lcall
ja
hlt
lret
shrl
mov
inc
insl
xor
lds
les
push
cmp
jo
fwait
div
mov
jecxz
xchg
lea
lods
cmp
mov
jo
ror
iret
jne
add
or
inc
jo
in
pop
push
mov
push
push
rcll
enter
loop
movsb
aad
jns
iret
sbb
mov
adc
subb
xchg
xor
insl
scas
fisttpl
shrl
sti
or
jo
and
adc
pop
clc
cmp
mov
xchg
mov
pop
and
out
mov
push
lock
sbb
pusha
mov
mov
push
pop
xchg
shll
sarb
inc
sub
mov
mov
imul
pushf
inc
lods
jecxz
push
dec
pop
jo
cwtl
mov
stc
fstps
out
aas
ret
push
adc
enter
insl
insb
pusha
shr
adc
sbb
scas
mov
fisubs
and
adcl
sbb
lods
enter
sub
fwait
loope
adc
bound
jne
cld
sti
pop
pop
ja
cltd
jmp
test
mov
or
push
and
cmp
je
outsb
out
pusha
inc
mov
xchg
mov
call
dec
outsl
pop
outsb
fcompl
add
ljmp
sub
and
ja
and
test
sbb
cs
movsb
mov
nop
inc
cmp
push
jo
aaa
or
mov
xchg
fistps
xchg
fcompl
add
pop
mov
push
cltd
ret
adc
into
ja
push
ljmp
enter
aad
sarb
int
mull
popf
pop
scas
pop
mov
dec
cmp
into
dec
push
scas
push
insl
mov
mov
cmp
sti
push
sub
adc
xor
rcll
inc
lock
mov
fs
cwtl
ja,pt
xlat
into
cmp
xchg
pop
adc
inc
cltd
push
les
and
outsb
push
mov
and
out
pushf
xlat
stc
outsb
repz
pop
cwtl
cmp
dec
rorl
mov
jp
pushf
pop
ret
inc
adc
jo
clc
aam
add
dec
bnd
jb
inc
int3
sub
lret
fdiv
mov
pop
scas
add
jo
adcl
dec
ss
lahf
push
rclb
add
rsm
or
shl
cltd
jo
mov
dec
in
rcll
jno
jo
jp
lods
icebp
push
lea
loopne
insl
addr16
ret
notb
subb
in
and
fisubrl
cld
insb
mov
xchg
imul
mov
adc
xchg
out
jecxz
adc
push
or
cmp
popf
push
leave
test
rol
add
lock
fdiv
mov
out
add
jg
ja
lea
shrb
jl
xor
insl
mov
aam
inc
sahf
sbb
setae
fsts
sub
rclb
dec
mov
jno
cs
mov
js
in
imul
add
dec
inc
xchg
cmpsl
aad
push
push
cld
in
add
movsl
inc
int3
imulb
mov
popa
ror
stc
lock
pmulhw
fld1
outsb
fcmove
and
cmp
test
push
and
xor
push
movsl
and
mov
jnp
sub
inc
lea
xchg
push
cwtl
in
jo
xchg
js
rep
inc
ljmp
jo
jb
pop
data16
cmp
lods
lcall
addr16
pop
lahf
out
fwait
mov
mov
sti
jo
jb
scas
rsqrtps
das
popf
lods
pop
inc
push
xchg
or
xlat
inc
cli
lock
add
gs
pop
fisttps
adc
loope
jle
aad
insl
mov
lret
pop
stc
jno
pop
or
test
repz
sbbl
xor
cmp
or
arpl
negl
sub
mov
test
loopne
pop
mov
jae
push
sbbb
mov
test
jae
mov
jo
out
mov
lea
enter
out
fisubrs
push
push
mov
xchg
fs
add
adc
jb
push
pop
and
jo
in
in
roll
mov
dec
xor
add
cmp
je
dec
sub
lock
push
inc
sub
push
mov
add
mov
sbb
jo
and
add
jno
push
js
cs
push
popf
scas
sub
xor
loop
add
xlat
jo
dec
rcrl
xchg
mov
dec
notl
or
dec
push
jae
and
jae
mov
aam
sbb
dec
xor
test
outsl
mov
cmp
xchg
jo
jl
jno
lea
imul
ret
jo
mov
inc
add
sarb
jo
mov
addb
lods
aam
call
inc
lea
add
jae
push
or
mov
pop
jo
xchg
inc
fdivs
xor
aad
jo
in
lea
pop
mov
jo
cwtl
mov
mov
daa
test
xor
xor
cmp
jl
aam
pavgb
test
mov
or
dec
movsl
fildl
push
shlb
fmuls
jo
fldcw
dec
sub
xchg
jae
xchg
lock
cwtl
adc
test
pop
subl
add
ret
xor
sbb
bound
or
jo
xor
pop
pushf
pop
mov
arpl
cld
ljmp
xor
pusha
mov
jmp
xchg
adc
fistl
jge
sbb
sbb
shll
push
jne
das
loope
fisubrl
inc
je
cmpsb
pop
inc
xor
dec
lret
push
push
int3
jo
insl
push
xchg
stos
mov
or
addb
add
jo
mov
xor
mov
mov
scas
cmp
jo
test
mov
stc
cmpsl
test
lods
es
ljmp
lret
and
rcll
pop
mov
stc
aad
xor
dec
add
push
xor
inc
jo
test
ja
jmp
les
jo
mov
push
leave
jmp
imul
add
inc
movsb
lret
jae
cld
jns
and
mul
out
andl
fldenv
lea
cmp
xchg
jno
sub
lock
add
jo
dec
mov
outsb
test
cmp
adc
cli
lcall
jo
leave
scas
push
xor
es
ret
inc
fcmovnbe
pop
into
jnp
and
enter
and
lock
insl
pop
hlt
pop
cmpb
dec
insb
jae
test
cmp
mov
mov
into
pop
jmp
jle
cmpsb
data16
sub
loop
mov
stc
mov
mov
jnp
insl
pop
insb
cmp
jo
fstl
or
cwtl
jo
icebp
push
insl
sbb
push
jo
cmp
psubd
adc
xchg
ficoms
insb
int3
or
xchg
dec
dec
mov
lds
add
fwait
inc
insb
imulb
xor
std
mov
jne
into
jge
sbb
rcl
aad
mulb
mov
ss
cmc
insb
or
lock
jo
cltd
mov
popf
jo
cmc
jnp
movsl
roll
stos
insl
xchg
lds
nop
xchg
xlat
push
jno
jae
jl
lock
call
data16
inc
loopne
sbb
imul
adc
repz
movl
pop
fwait
jns
enter
mov
sbb
jb
dec
cld
fcoml
rcr
outsl
jo
jno
popf
pop
inc
add
loop
sbb
loope
or
xchg
daa
ss
imul
ja
shr
test
cmp
jo
push
mov
repz
adc
fadds
dec
sub
mov
mov
clc
xlat
xor
std
fdivl
jo
inc
mull
dec
push
mov
scas
mov
inc
emms
movsl
mov
call
jo
push
jns
imul
adc
sub
push
popf
push
fistpll
insl
mov
lret
test
xchg
lock
lahf
jp
push
aam
fsts
add
push
out
mov
mov
jnp
pushf
movsl
ljmp
pop
test
ja
jnp
cwtl
push
stc
add
popa
inc
neg
mov
jo
mov
rol
or
jecxz
lcall
mov
inc
sbb
sub
dec
pop
push
data16
jmp
adc
jae
cwtl
js
pop
daa
nop
sahf
jmp
mov
outsb
inc
fscale
stos
in
pop
add
push
nop
stos
mov
rorl
insl
pop
std
dec
outsb
xchg
cmc
add
xor
mov
jb
dec
jp
icebp
shll
in
mov
jge
aad
push
lcall
mov
jae
cmpsl
jle
ljmp
scas
pop
pop
and
aas
push
das
push
in
daa
push
fimull
fdivs
movsb
imul
pop
mov
jmp
jp
push
mov
adc
mov
mov
jo
inc
mov
pop
jp
gs
mov
pop
movsb
push
mov
imul
jbe
into
adc
outsb
aaa
icebp
aad
insl
lock
movsl
cld
mov
push
jecxz
add
push
pop
stc
scas
mov
sbb
pop
lret
outsl
jo
jmp
push
lea
std
jb
and
mov
or
push
fldenv
out
adc
jo
movsl
mov
xchg
mov
fdivl
mov
lcall
dec
cwtl
pop
stos
and
dec
fnstcw
stc
dec
jge
jo
pop
mov
in
aad
jo
mov
jo
push
out
js
lods
push
cmc
jo
pop
scas
sub
jo
jg
mov
jo
cmpsb
fistpl
jo
mov
repnz
jo
loop
and
add
xor
jge
out
lock
repz
or
lahf
mov
sub
filds
push
roll
ds
ret
jo
add
std
jo
pop
xor
mov
testl
mov
lret
jo
pop
xor
xchg
jnp
add
jns
dec
ss
add
jo
mov
jne
imul
dec
jo
fiaddl
test
jo
pop
mov
aad
stc
shr
dec
adc
out
gs
adc
add
mov
jo
add
cs
ret
jo
shll
mov
adc
mov
es
in
mov
sub
lea
sti
dec
fstpl
nop
imul
or
insl
jle
ret
iret
aam
pop
xor
mov
icebp
dec
adc
dec
out
mov
cmp
loop
dec
push
mov
add
out
fidivs
stc
jo
mov
fwait
ret
sbb
cs
add
sbb
add
int
or
cmp
jo
adc
adc
sar
lock
dec
dec
cmp
xor
test
mov
lock
or
xchg
jo
in
or
jo
aad
icebp
lcall
jo
ret
or
mov
pop
es
imul
rorl
jo
ds
fcompl
cli
mov
rorb
lock
add
fwait
rcl
mov
adc
rorb
mov
jmp
cmp
adc
hlt
pop
mov
sti
push
jae
sbb
nop
xlat
test
outsb
out
and
pop
xchg
inc
pop
mov
cmp
fnstenv
bnd
sbb
xchg
je
pusha
lcall
movsb
outsb
outsb
sub
xchg
out
mov
lods
out
outsb
adc
pop
push
popa
mov
in
jo
mov
dec
cmp
clc
into
imul
rcrb
sbb
mov
out
push
dec
jae
sub
push
into
call
push
cli
or
jo
adc
fs
push
mov
jmpw
xchg
jo
and
in
sar
jo
repz
fwait
or
push
fdivl
mov
outsb
fwait
test
jb
xor
lcall
cmp
cwtl
pop
outsb
movsl
fstps
cmpsb
dec
or
xchg
int
shlb
adc
and
inc
jo
ror
mov
repz
pop
fwait
int3
adc
push
jo,pn
sbb
mov
rcr
pop
roll
mov
lret
out
daa
je
fisubl
jbe
push
iret
ja
rcl
jo
xorb
dec
xchg
icebp
repz
aad
iret
push
mov
cwtl
outsb
loopne
and
stos
sahf
jo
add
repnz
test
pushf
and
lcall
xor
mov
insb
lock
and
div
jg
pop
adc
jo
inc
cld
outsb
sbb
jne
jo
aad
int3
rorb
dec
and
lock
xchg
in
add
add
cmp
jl
mov
sub
out
mov
dec
xchg
leave
adc
mov
push
mov
or
xchg
and
hlt
inc
dec
mov
pop
inc
jno
ljmp
mov
xchg
mov
pop
lock
cwtl
rcr
jg
add
enter
repnz
cmpsl
mov
shr
sub
arpl
jo
cwtl
jns
int3
lahf
jo
sub
bound
dec
or
mov
mov
xor
dec
std
jo
dec
and
test
adc
flds
divb
pop
orl
nop
jo
sar
xchg
pop
jg
outsb
out
fwait
cwtl
out
cmp
shrb
mov
xchg
jo
pop
mov
sahf
movsb
out
jo
xor
xchg
lahf
mov
jo
push
pop
mov
pop
stos
jo
div
cld
insl
fildl
stc
shr
xor
xor
aaa
cmp
addr16
lcall
jo
mov
inc
push
add
leave
dec
ds
jno
decb
mov
push
jle
ret
sbb
insb
cmpsb
imul
mov
jbe
pop
push
jne
xchg
or
jge
ja
cmp
push
push
pop
cld
pop
in
jle
push
imul
icebp
jo
pop
add
adc
xchg
sbb
mov
pop
dec
jmp
mov
jo
ret
insl
out
into
sbb
jo
sbb
mov
mov
xor
and
cli
iret
ja
add
or
xor
cmc
repnz
call
shl
mov
lock
push
daa
push
nop
shll
std
mov
jo
jns
sbb
inc
mov
enter
or
aam
sbb
sti
jne
xchg
rcrb
mov
scas
in
and
jo
das
pop
dec
xchg
outsb
inc
mov
mov
inc
cmpsl
jbe
mov
add
pop
mov
ss
lcall
cmpsb
int
adc
mov
cmp
adc
ja
inc
in
xor
mov
bound
add
sub
mov
mov
push
jne
push
int3
pop
mov
push
jns
xor
mov
rorl
adc
adc
aad
jbe
or
scas
jo
cmp
shrl
inc
or
xchg
shll
and
jno
adc
insb
je
jl
mov
xchg
loop
jae
xchg
ja
mov
inc
mov
mov
jo
inc
xor
jo
shrb
call
sbb
push
dec
in
scas
int3
das
repnz
adc
sub
push
jo
icebp
mov
fbstp
mov
xor
jo
data16
mov
or
pop
jo
mov
sbb
jbe
jo
aad
lret
mov
pop
shrb
jae
lea
lret
bound
jo
mov
push
int3
call
mov
fsubl
pop
jne
adc
pop
mov
dec
arpl
xor
arpl
inc
jo
sbb
push
lods
in
mov
insb
mov
ljmp
clc
mov
jle
scas
cmpsl
test
divl
ja
adc
add
jno
inc
jb
sub
lret
ja
ficoms
dec
scas
sub
ror
xor
inc
jbe
ret
push
lock
ljmp
lret
adc
dec
lahf
push
dec
xchg
ja
sub
cltd
pushf
loopne
pop
pmuludq
ret
scas
scas
mov
xchg
stc
mov
mov
jo,pn
jns
push
pop
xor
and
fisttpll
loope
outsb
aad
outsl
data16
pop
push
shlb
sbb
lret
insb
and
out
jo
xor
sub
add
iret
mov
pop
fcompl
lahf
insl
movsb
pop
cli
fldcw
push
inc
mov
test
notb
ror
jb
pushf
mov
pop
ja
mov
in
shlb
xor
fdivl
popa
dec
and
add
lret
pop
pop
jo
jns
sbb
sbb
imul
cs
xor
push
out
jnp
jo
vpsadbw
cmpsl
cmp
lock
aas
xchg
dec
jo
in
push
int
lea
shlb
in
add
xchg
insl
mov
and
xchg
idivl
jno
lahf
nop
test
mov
jp
pop
cmp
shlb
scas
dec
inc
outsb
push
adc
push
int
xor
mov
in
andb
pop
nop
mov
insb
out
ja
adc
mov
aad
sbb
lcall
mov
mov
dec
lret
icebp
lock
push
loop
jns
imull
mov
popa
mov
add
mov
inc
ja
sbb
push
mov
test
sbb
jle
popa
or
jb
jo
cli
push
std
pop
iret
sti
jo
in
sbb
rorl
jo
xor
jp
cmp
inc
jo
mov
pusha
imul
pop
and
jo
xchg
sub
push
push
push
xor
test
jae
sbb
mov
jmp
xchg
outsl
insb
lock
pop
aad
outsb
mov
fwait
jnp
dec
add
push
push
stc
fnstenv
or
mov
jo
in
aad
cli
mov
test
push
arpl
xor
cmp
insl
clc
fld
repnz
jo
mov
mov
arpl
stos
jg
pop
jbe
call
sbb
adc
mov
sti
dec
add
xchg
pop
jo
ja
mov
nop
insl
xchg
dec
jo
or
test
push
popa
mov
and
sbb
pop
test
xchg
inc
fadd
int3
mov
sub
jo
xchg
aad
push
jl
jo
xor
jecxz,pt
fidivs
test
or
fstpl
sbb
mov
enter
es
pop
adc
fidivl
insl
pop
push
jb
testl
data16
inc
in
das
pop
int
popf
pushl
in
sub
jo
add
xorb
inc
inc
jo
xor
fsubs
js
rorb
jo
add
gs
mov
mov
jae
xor
mov
aaa
repz
jo
jnp
arpl
mov
mov
jo
add
adc
aad
pop
jo
dec
xor
mov
dec
ret
xchg
lock
into
dec
scas
mov
mov
sub
push
pop
mov
cmp
inc
cmc
mulb
adcb
pop
jmp
mov
cli
adc
add
lock
jo
fsubrs
mov
cmpsb
ret
sbb
cmp
mov
movsb
aam
mov
and
bound
inc
sub
test
scas
push
int3
outsb
mov
push
jmp
insl
mov
dec
jge
pop
jl
stos
or
lret
sahf
or
push
mov
jne
rorb
in
jo
imul
jo
xchg
mov
sbb
jnp
shr
es
aad
mov
out
lahf
jno
imul
jo
outsb
rolb
sub
push
cli
scas
xchg
fcomip
dec
push
pop
jae
mov
add
ja
mov
sub
inc
pop
mov
xor
test
push
jo
inc
test
lcall
out
mov
jo
ja
xor
push
xor
inc
xor
jo
aam
shrl
dec
push
jle
outsb
pop
and
sti
pop
cmpsl
ja
addr16
pop
mov
cmc
out
test
jo
sbb
jo
loopne
mov
daa
les
jo
push
fiaddl
add
mov
push
ljmp
bnd
lea
cli
mov
dec
cmpsl
insl
push
lret
sub
arpl
add
out
sbb
jne
addr16
fld
cltd
xor
lock
fwait
jo
mov
push
pop
push
push
imul
or
cmpsl
lahf
push
mov
mov
dec
pushf
mov
xchg
jo
loope
mov
push
das
movsl
addr16
push
std
jo
lahf
xchg
mov
insb
les
cmpsb
inc
test
xchg
pop
jo
clc
lods
jne
mov
cwtl
adc
jmp
mov
mov
jno
daa
add
outsb
aam
insb
jbe
jns
icebp
mov
pop
jmp
mov
jb
in
jo
sbb
insb
pop
push
sub
push
mov
xchg
mov
mov
cmp
aaa
jge
sahf
outsb
icebp
add
mov
push
test
rorb
ja
into
mov
inc
fsts
movsl
lds
cmpsl
xorl
lock
mov
loope
lea
pop
sahf
jo
sbb
dec
pop
insb
iret
inc
pop
popf
xchg
jo
int
js
jle
out
ja
inc
mov
and
arpl
push
cmp
and
cmpsl
lods
out
push
pop
jo
sbb
cmp
pop
jbe
imul
push
aas
inc
jo
push
out
mov
jne
push
or
cmc
sub
adc
xchg
pop
add
cwtl
adc
jo
call
jl
jo
xor
push
fcompl
add
xchg
popa
bound
jo
call
jo
mov
cmp
sub
dec
xor
jo
inc
xchg
mov
mov
stc
ljmp
sahf
pusha
jo
enter
ss
stc
aam
clc
outsl
les
mov
in
jne
xchg
push
jo
add
xchg
push
add
arpl
cmc
xor
sbb
mov
pop
jo
xchg
fwait
les
lods
jo
adcl
scas
fimuls
mov
movsb
xor
dec
mov
cmp
icebp
ret
inc
pop
fldt
xor
push
sbbb
jo
inc
idiv
lock
incl
mov
cs
jg
jge
movsl
in
pop
mov
loopne
add
clc
mov
pusha
cltd
ror
ja
int
movsb
mov
aam
pop
push
js
leave
lret
dec
jnp
lock
push
xchg
les
jp
cli
lods
mov
xchg
xchg
inc
mov
jo
shr
clc
sub
mov
push
cld
ja
add
inc
rcrl
add
mov
mov
xchg
mov
xchg
sub
adc
fiaddl
orb
jge
jo
mov
pushl
mov
xchg
fxch
test
js
and
cmpsb
jb
fistpl
les
jl
cmp
imul
sbb
pop
mov
gs
xchg
jno,pn
ret
inc
and
xor
insl
jo
sbb
mov
outsl
xchg
mov
push
lock
lock
mov
jo
daa
clc
push
xchg
fstp
cltd
jo
cmc
es
outsb
aad
dec
jae
inc
repnz
lret
dec
mov
cli
dec
mov
test
call
push
sahf
jp
aad
jo
xchg
test
or
dec
jae
dec
xor
mov
jo
mov
cmp
lods
aas
iret
mov
cld
xchg
mov
jo
and
call
dec
insl
sbb
out
xchg
inc
into
jae
dec
stos
stc
mov
dec
jo
mov
in
je
adcb
dec
jo
fs
icebp
loope
mov
or
pop
xchg
xor
ret
jno
xor
push
sbb
lods
mov
rclb
push
push
push
jae
call
lock
cltd
shll
fdivl
aaa
adc
out
orb
sub
lds
popf
sti
sub
sbb
lret
sbb
fs
inc
f2xm1
xchg
jo
imul
jb
add
aad
hlt
jo
cld
andb
cmp
outsb
in
test
jae
ja
inc
call
mov
test
outsl
pushf
cmp
test
jo
or
aad
int
adc
adc
outsb
jl
in
in
aam
xor
mov
pusha
xchg
pop
lret
stos
dec
jo
int
push
sahf
jns
mov
adc
pop
test
jo
cltd
ljmp
daa
vpunpcklqdq
push
int3
jo
xor
stos
imull
mov
sub
hlt
xchg
adc
mov
out
mov
mov
mov
dec
aad
jno
cli
pop
xchg
movsb
lods
pop
push
cmp
jl
sbb
ret
and
pop
pop
repz
cwtl
mov
testl
add
ss
movsl
loop
jo
outsl
stos
mov
aad
or
pusha
scas
mov
jl
bound
push
iret
insl
and
setno
cmpsl
push
xchg
sbb
cmp
jmp
scas
lock
sub
out
jl
add
stos
xchg
adc
mov
jne
loop
xchg
jo
movsb
rsm
enter
lock
push
mov
jo
repnz
sbbb
lock
push
sub
xchg
adc
int
sub
daa
lds
ja
jecxz
xor
loopne
sub
ret
and
lret
jo
add
movsl
nop
push
xlat
jnp
jo
daa
out
testb
mov
dec
add
mov
pushl
mov
imul
adc
pop
sub
and
inc
mov
mov
lea
dec
mov
lock
jmp
jp
jo
in
jg
inc
mov
push
add
push
cmp
dec
jo
and
loopne
jo
inc
shlb
fldt
xor
aad
das
xchg
jp
add
sub
repz
loope
sub
cmp
push
sbb
shll
in
add
dec
clc
push
nop
sbb
dec
mov
inc
jo
cwtl
icebp
out
xorb
mov
jo
push
ss
lock
mov
jo
pop
into
test
movsl
jno
addr16
das
in
adc
pop
jp
ror
nop
mov
jo
and
lods
jne
inc
hlt
fbstp
lds
cmp
pushf
push
test
xchg
push
jmp
xor
xor
mov
adc
ja
and
fmulp
lock
daa
popa
sub
mov
push
div
test
iret
insb
jno
repnz
lock
orb
or
mov
fdivrl
push
insl
mov
clc
rclb
pop
jo
push
push
addr16
pushl
xor
nop
rcrb
test
jmp
push
sub
jnp
push
add
fstps
cmp
lret
pushf
cli
jo
and
cmp
mov
fsub
lds
jnp
cmp
jbe
xchg
lock
rcl
inc
testl
cmp
inc
mov
pusha
mov
in
sahf
dec
inc
test
sbb
outsl
mov
hlt
jae
aam
cmc
loope
add
incl
push
stos
shl
and
mov
mov
fcomip
mov
push
jp
jo
mov
push
cli
jo
pop
repnz
insb
shl
sub
and
push
into
cmp
shll
addr16
push
jo
in
std
xor
fnstenv
inc
pop
shll
test
fidivl
dec
out
mov
pop
insl
insb
popf
arpl
scas
cld
xchg
sbb
lret
mov
xor
push
inc
rclb
xchg
pop
adc
call
mov
inc
outsb
ret
add
push
nop
lcall
aad
dec
push
aaa
fs
cld
call
sar
mov
cmp
pop
jo
imul
and
push
jne
into
jo
inc
cli
ret
fisttpl
decb
sub
mov
sub
cmp
mov
sahf
and
push
push
sahf
ja
jno
pop
xlat
xchg
mov
cmpsb
outsb
pushf
shlb
dec
fldt
out
sbb
fwait
jo
push
cmp
or
loopne
shll
jo
popl
in
push
dec
jo
aad
xor
int3
cmp
and
mov
sbb
lea
aam
enter
or
jns
pop
and
inc
xchg
idivb
sub
bound
iret
add
pop
fcomp
leave
sti
je
nop
pop
lock
push
test
mov
in
dec
jo
mov
mov
sti
sbb
in
sbb
dec
add
jo
push
add
mov
data16
jb
pop
fcoms
mov
jo
jmp
cmp
jo
das
push
ljmp
adc
xor
xlat
and
data16
add
xor
fmul
jb
fldl
push
maskmovq
idivl
sub
mov
jo
dec
dec
shll
cmp
jo
int
ret
mov
mov
xchg
orb
ds
mov
cmpsb
insl
sbb
inc
jle
sbb
add
fsubs
add
jo
or
fbstp
jnp
outsl
xchg
mov
jo
or
cmc
ds
mov
xchg
bound
jo
test
repz
xchg
cmc
jo
jno
pop
sub
jmp
sub
jae
out
jp
outsl
hlt
pusha
xchg
lock
dec
jmp
push
or
push
adc
pop
int3
dec
icebp
daa
rclb
jb
shrl
jo
rcll
push
mov
nop
jnp
dec
cli
xchg
jo
in
cmp
es
fnstcw
xor
and
xchg
pushf
fsubl
jo
cmp
push
ja
xchg
outsl
setge
mov
and
cmp
jne
sbb
dec
xchg
lods
mov
push
cs
fadd
loopne
addr16
sub
insl
jo
push
and
xor
sub
cli
dec
jno
mov
mov
jl
test
insl
loop
xor
xor
jo
lods
mov
shlb
scas
imul
sbb
push
xor
sbb
bound
jg
jo
adc
push
adc
jo
leave
insb
ret
adc
sub
outsb
pop
jne
mov
fiadds
push
adc
jo
inc
test
push
jo
aad
incl
sub
adc
cld
jo
jge
out
mov
xor
adc
into
or
out
int
mov
arpl
jo
push
xchg
adc
shr
jo
enter
rcl
jo
mov
dec
scas
and
jo
pop
push
push
popf
je
push
xchg
and
push
dec
push
outsb
sbb
push
ror
jno
fs
cltd
jo
push
les
or
push
std
divb
lods
dec
fdivs
xorb
mov
test
mov
cmp
pop
jo
push
xchg
pop
jecxz
mov
jo
jbe
fldenv
lahf
nop
out
xor
jo
cmpsb
int
xchg
pop
dec
inc
sub
pusha
pop
cs
add
test
add
mov
scas
sbb
add
mov
pushf
lea
lock
jnp
clc
enter
inc
push
inc
lods
fsts
mov
inc
push
mov
push
mov
sub
neg
xchg
xor
inc
sub
mov
xchg
ja
xor
decl
or
inc
outsb
les
aad
xlat
xor
bound
add
pop
test
mov
in
fisttpl
cli
pop
jne
lock
fdivs
std
sbb
add
jo
xchg
mov
in
or
js
lret
test
aas
mov
inc
and
jnp
sbb
add
idivb
pop
cmp
popf
int3
push
jo
adc
and
jo
fldt
adc
adc
iret
inc
jge
or
pushf
jo
mov
cmc
jp
rol
xchg
ds
mov
std
stc
mov
sahf
pop
dec
sbb
xor
jp
addb
ficompl
nop
cmp
dec
xchg
adc
andl
sbb
jecxz
jo
xor
in
or
leave
data16
jo
inc
sub
fidivs
jl
je
cmpsl
jle
jo
adc
push
insb
pop
sbb
pop
lock
jmp
push
cmp
add
xor
jo
lcall
jo
test
cmpsb
cmp
and
pop
insl
inc
xor
js
mov
lds
in
test
or
cmp
call
push
xchg
pop
mov
adc
fdivs
ljmp
cmpsb
xchg
jo
jmp
test
fstps
jo
into
movsl
pop
dec
add
lock
fcoml
fwait
xor
mov
jle
dec
flds
into
jo
shll
jne
pushf
xor
inc
xlat
stc
mov
jo
sbb
enter
jo
pop
ja
mov
insb
mov
cmp
fcomps
cmp
ret
mov
mov
loop
outsb
loope
test
cmp
mov
sbb
lock
add
and
rolb
mov
mov
adc
push
enter
xchg
aas
xor
es
jae
inc
fisubrs
pop
mov
inc
outsl
cmp
pop
pop
mov
xor
andb
mov
insl
outsl
and
inc
mov
test
adc
int3
ja
das
push
stos
jo
push
das
inc
aad
jo
les
inc
pop
fsts
push
dec
scas
lea
std
cmp
xchg
and
or
pop
in
subl
push
mov
mov
dec
mov
lock
or
jo
sbb
fistpl
test
cmp
pusha
daa
mov
jo
iret
mov
dec
sub
mov
mov
xchg
nop
je
jo
outsl
mov
dec
or
insl
mov
xchg
or
out
and
rcr
leave
fucomi
nop
push
ja
ljmp
jmp
lock
data16
scas
jne
push
add
stc
adc
dec
hlt
test
ffree
fiaddl
adc
cwtl
push
shll
out
loope
mov
sbb
jo
dec
jle
cwtl
and
mov
lods
scas
inc
subl
xor
xchg
fwait
icebp
jmp
cwtl
or
or
add
push
dec
iret
les
mov
push
jb
and
ja
incl
jns
mov
xchg
mov
xor
les
scas
fsubrl
sahf
adcl
lcall
or
mov
icebp
mov
mov
fwait
dec
insb
rorb
ljmp
pusha
push
pop
repz
shrb
xor
pop
notb
add
jo
jmp
push
jo
test
sbb
rorb
adc
rcll
in
icebp
mov
shll
pop
mov
movsb
aas
cmp
sub
add
ja
xor
push
int3
mov
ja
pop
gs
shll
xchg
cmpsb
sbb
fisttpl
sarl
lds
xchg
leave
arpl
jge
aas
mov
jo
cmpsb
cld
xchg
xor
jnp
fsubrl
outsb
iret
js
jo
push
std
pop
or
mov
jo
pop
jns
icebp
and
outsb
jo
shrb
mov
loopne
mov
jae
js
decl
jo
enter
pop
sti
add
and
sbb
insl
push
aas
popa
push
in
and
jo
push
mov
dec
add
mov
add
repz
popa
cmp
xor
cmp
lods
jo
pop
and
cs
dec
call
cmp
xor
shlb
pop
daa
fisttpl
mov
mov
jo
mov
sbb
int3
push
cltd
jae
mov
push
and
mov
insl
add
and
jo
pop
xchg
mov
aad
inc
jo
int
cmp
pop
cwtl
xchg
aas
loopne
pop
mov
stos
pusha
dec
mov
mov
jo
cmpl
xchg
push
and
pop
push
jo
out
movsl
outsb
xor
inc
cmp
xor
adc
mov
jo
mov
mov
adc
icebp
push
aad
in
or
pop
sbb
add
lret
mov
test
cltd
lcall
pusha
insb
sub
jo
mov
mov
jo
add
or
insb
sbb
nop
inc
shr
xor
bound
into
push
or
addr16
fidivs
fistl
xchg
jno
push
inc
cmp
in
pusha
dec
add
jo
add
insb
jo
fstps
int3
mov
jo,pn
xor
xchg
js
push
jo
imul
jo
push
in
mov
jo
shll
into
jo
mov
lcall
add
leave
cmp
aad
mov
and
mov
sahf
cltd
cmp
test
jp
jbe
lds
cmp
rolb
cmc
hlt
pop
adc
arpl
inc
ljmp
stos
ficoml
dec
or
jo
data16
jnp
adc
cmp
fnstcw
or
orb
sbb
mov
or
stos
out
jge
call
in
imul
sahf
jo
fdivrp
jmp
jb
pop
pop
loop
jle
jo
scas
dec
push
pop
pop
lahf
adc
add
sub
js
aas
adc
mov
js
dec
repz
rcll
jl
ret
fistps
push
jle
jge
pop
xchg
shll
pop
arpl
jnp
scas
mov
icebp
mov
ds
xchg
cmp
jg
xor
push
xor
cmc
cmp
jae
sub
sub
inc
f2xm1
in
je
sbb
mov
daa
insl
in
cmpl
cmpsb
movsb
add
jo
mov
ja
dec
movsl
cmp
idiv
jecxz
iret
cld
test
mov
sub
cmpsl
imul
cmp
jae
lret
xor
push
fsts
jo
movl
push
mov
lea
shll
jnp
fwait
jae
lock
arpl
pop
jb
andb
fldt
sub
jae,pt
push
inc
jae
lock
sbb
xchg
xchg
bound
jo
dec
mov
xchg
sbb
push
sub
xchg
mov
insl
xchg
mov
mov
pop
jo
dec
add
sbb
lds
pop
mov
movb
sub
out
insl
add
mov
ljmp
xor
and
inc
in
jo
xchg
jnp
sarl
mov
icebp
mov
pop
jo
ds
jnp
je
jo
addr16
and
cmp
movsb
and
or
xchg
push
mov
jl
rol
sub
stos
inc
lods
cld
aas
mov
in
jo
adc
mov
jo
in
dec
jae
mov
jmp
cmpsb
test
insl
cli
pop
lods
insl
xor
jnp
xlat
shlb
ret
repnz
jo
or
insl
cmp
fsub
add
arpl
jo
cld
inc
gs
jmp
jo
inc
fimuls
shlb
or
stc
lret
lods
jo
jno
fsubrl
test
jo
cwtl
mov
pop
jo
push
mov
inc
sub
rcrb
stos
sahf
outsb
je
sti
cmp
outsl
jnp
mov
jmp
push
mov
pop
and
jle
ret
mov
dec
cli
jo
xchg
xor
adc
mov
ds
out
xchg
insl
lret
sahf
add
mov
jp
push
jo
jecxz
sarl
add
sbb
xchg
sub
out
dec
test
call
cmp
in
push
xchg
mov
cmp
jl
jg
and
sbb
mov
out
in
daa
cmp
mov
sub
test
iret
xor
sbb
addr16
mov
fistpl
movsl
cmp
fs
xor
fnstsw
dec
xor
enter
push
push
jo
cmpsb
ss
sbb
out
cld
mov
xchg
mov
adc
aad
stos
nop
inc
jo
fwait
icebp
and
mov
push
mov
pop
int
out
jp
jge
dec
xchg
pop
sbb
xor
int3
lcall
inc
mov
inc
xchg
push
and
fimull
mov
ja
mov
mov
push
in
dec
pop
adc
loop
testb
neg
jl
jo
jb
jmp
aad
mov
insb
mov
lea
lods
cwtl
or
negb
inc
jo
mov
lods
jo
and
mov
mov
movsb
je
cmp
filds
jo
dec
ds
jbe
and
jne
push
jne
jo
sbb
xchg
push
jo
loop
cmp
in
xor
and
lock
add
movsb
movsl
dec
pop
test
jo
adc
pop
sbb
rcl
enter
insl
lock
or
xchg
aaa
insl
rcr
enter
pushf
mov
jns
add
les
xor
insl
pop
outsl
shrl
aas
push
add
add
sbb
les
sub
xor
pop
repz
aaa
movsl
cld
cmpsb
orb
das
jbe
jmp
hlt
jo
fcmovbe
and
cmp
xchg
push
push
xchg
jecxz
testb
lock
pop
bound
jb
add
stos
cmp
mov
sar
out
test
bound
or
pop
mov
es
insb
fsubrl
test
cmp
jo
push
inc
pushf
and
insl
les
in
shll
jae
test
movsl
fcomp
jo
daa
sahf
lods
or
aam
cld
aad
mov
jo
out
cmpsl
add
xor
mov
popa
jle
insl
jae
mov
int3
call
jae
icebp
lds
mov
mov
mov
pusha
mov
jo
inc
push
out
jmp
js
mov
dec
cmp
fmul
loop
push
xor
pushf
sbb
cld
cmp
pop
mov
rorl
pop
jo
dec
mov
xchg
xlat
mov
loopne
nop
sub
jmp
xchg
jnp
bnd
jo
repz
outsl
data16
mov
jle
jo
dec
lods
fwait
cmpsl
gs
pushf
push
xor
aas
clc
push
loopne
jo
popa
arpl
std
outsb
insl
mov
xor
sub
scas
jg
jle
sarl
scas
fwait
orb
loopne
fistl
pop
jo
lock
pop
jo
movl
popf
ds
push
loopne
into
xor
clc
pop
pop
jo
leave
sub
int
sbb
sbb
cmc
mov
adc
mov
xor
jo
out
pop
mov
jo
in
dec
in
daa
outsb
aaa
push
sbb
testl
ret
jnp
mov
push
inc
je
pop
inc
popa
fmulp
push
and
aas
lock
lea
jae
notl
mov
jmp
sarl
xchg
leave
xchg
xchg
sub
jo
mov
ds
fcompl
aam
hlt
or
or
cmp
xchg
pushf
jo
jns
adc
and
or
xor
insl
dec
scas
cmp
xlat
leave
inc
mov
sahf
add
adc
bound
lock
jge
push
and
pshufw
in
divb
les
push
jo
pop
in
mov
xchg
mov
icebp
ret
sti
and
push
std
push
mov
mov
xchg
pop
test
jge
push
popf
jns
jb
jne
mov
dec
jo
aas
adc
pushf
dec
push
movsb
leave
nop
or
mov
iret
and
jo
mov
es
shlw
xchg
cmp
jbe
in
imul
pop
cmpsl
pop
jo
ss
inc
pop
icebp
lahf
imull
pop
mov
aad
jno
push
sub
gs
jo
and
lods
cmp
or
pop
xor
scas
jbe
mov
sbb
cmp
mov
mov
gs
mov
out
inc
push
jmp
fisubrs
dec
nop
jl
cli
cltd
add
jp
inc
pop
pop
nop
popa
and
divb
je
xchg
pop
add
fsubrl
sub
jl
sahf
add
sbb
mov
arpl
mov
xchg
jo
push
fdivrs
xchg
shlb
cmp
mov
cmp
scas
cmp
jo
mov
out
jo
lea
xchg
jae
popf
add
aad
cwtl
fidivs
push
arpl
xor
loopne
pop
jge
push
or
jo
pop
lahf
scas
popf
sub
xchg
lds
loopne
data16
pushf
jle
insl
xor
and
mov
mov
jp
inc
xor
fstpt
add
ret
jo
cli
pop
xchg
inc
fcoms
mov
jo
flds
push
push
fwait
jo
xor
ret
enter
sub
sub
push
insb
insl
and
cmp
xor
dec
pop
pushf
shlb
sub
sub
enter
mov
jo
fcmovnbe
and
pop
jo
inc
dec
pop
inc
scas
push
idivl
jg
xor
sbb
adc
jo,pt
jp
rcrl
dec
hlt
xchg
push
ja
mov
jne
cmpsb
call
xchg
data16
jo
mulb
aad
add
imul
adc
aad
test
fs
test
cmp
loope
add
jo
aam
jns
pop
int
jo
nop
in
in
fidivrl
add
jo
add
in
jo
jnp
or
loope
jo
int3
lea
mov
push
jo
sub
divl
mov
js
cmp
data16
jno
sub
jo
sub
pop
lcall
mov
push
jle
jo
mull
rcrb
mov
lea
dec
push
les
push
mov
jns
ret
cli
jo
aam
pop
push
push
xor
stc
fcoml
fs
mov
jo
and
sub
mov
sub
pop
xor
hlt
jo
imul
lret
xor
mov
adc
xor
imul
jnp
or
scas
pop
xorb
fstp
xor
xor
sahf
jo
dec
cmp
lock
in
jne
pop
xchg
cmpsl
lock
enter
stos
cmc
jmp
repnz
imul
in
data16
out
sub
mov
je
shll
jo
cmp
inc
or
or
test
cmc
jmp
cmpb
mov
mov
clc
imul
mov
push
das
sub
rcll
sub
cld
pop
jae
inc
cltd
lods
mov
mov
ljmp
fisubl
subb
mov
jo
mov
jmp
pop
push
aad
jae
mov
test
xchg
jnp
cwtl
je
jo
jnp
in
call
inc
jecxz
ljmp
pop
cmp
in
dec
jge
in
add
pop
sub
sbb
mov
push
xlat
xchg
repz
xchg
lods
pop
test
sbb
ja
stos
call
je
lea
hlt
jo
push
aam
mov
aad
jo
sub
inc
cmpsb
mov
xlat
test
jae
cmp
dec
jo
adc
fildl
or
push
aad
and
ret
pop
mov
shlb
imul
aad
push
push
dec
and
cmp
xlat
jo
ss
cmpsb
sub
jo
aad
jae
adc
jmp
xor
imul
imul
pusha
and
dec
jo
or
cld
mov
bound
ss
mov
mov
push
inc
outsl
repnz
mov
jo
cmc
ljmp
mov
sbb
add
cmpsb
loope
mov
push
es
dec
push
out
jo
aad
and
fldcw
int
adc
pop
mov
xchg
cmp
sahf
dec
inc
adc
loopne
sub
popf
sbb
or
aad
inc
mov
add
push
sub
push
cs
jne
jo
in
push
cmp
mov
or
fcomip
push
aad
mov
or
mov
pop
or
jo
cli
ja
xchg
rol
jo
lret
fs
lcall
pusha
and
jo
sbb
mov
jo
mov
ret
aad
std
lea
cld
popf
or
cmpl
xchg
xchg
or
push
cvttps2pi
stos
jp
aam
pop
and
jo
cmp
out
sbb
insb
mov
jo
hlt
mov
popf
add
pop
push
fadd
inc
cmp
jo
jmp
lcall
repz
push
inc
xchg
ret
andl
jo
lea
movsl
pop
push
push
cmpsb
rorl
jo
mov
xchg
popf
and
js
aas
xor
loop
xchg
mov
xor
dec
mov
mov
jns
ja
inc
add
mov
push
sbb
jo
fisubrl
push
add
jo
add
rclb
in
add
divl
ret
and
cld
js
sub
jo
pop
cmpsb
pop
inc
test
push
movsb
inc
xchg
ret
clc
pop
jo
mov
lret
pop
mov
and
idivl
aaa
jno
fsubl
leave
jge
jo
push
jae
mov
sub
outsb
dec
imul
scas
mov
addr16
jb
movsl
addl
aam
xchg
xchg
movsb
lock
ljmp
push
mov
push
jne
xor
mov
mov
test
iret
adc
xor
call
shrl
mov
add
jo
fcmovnb
pop
inc
cmp
enter
pop
jmp
ljmp
sbbb
stos
mov
xor
pop
dec
adc
jo
lret
ret
int
es
incb
sub
mov
push
jae
mov
jo
arpl
cld
jne
push
in
lock
jo
outsb
bound
arpl
pop
outsb
leave
sbb
jne
mov
aam
enter
jo
pop
lea
xchg
mov
jo
and
dec
loopne
repz
das
stos
push
push
push
cld
mov
jl
movsl
cmpsb
pop
jo
lret
flds
insl
push
mov
dec
insl
or
sub
and
das
cmpsl
scas
or
sahf
dec
xchg
add
pop
ja
push
lock
xorl
xchg
stc
add
in
outsb
pop
jnp
insb
and
adc
jo
es
mov
fwait
push
mov
jo
xchg
in
aaa
push
ret
fstpl
mov
xchg
icebp
and
adc
aam
ret
xor
es
add
addr16
push
sub
sbb
mov
movsl
insb
mov
mov
jg
jmp
in
jo
pop
xorb
clc
push
lods
jo
mov
xchg
aas
mov
or
xchg
jp
mov
jo
repz
sbb
out
adc
ret
test
adc
mov
push
xor
jae
sub
js
jl
repz
jne
in
mul
aad
xor
insb
iret
push
mov
lock
inc
lret
imul
sub
lcall
pop
lods
jo
lahf
rclb
adc
out
jae
sub
ja
sar
test
sub
shr
out
mov
aad
xchg
jecxz
stos
dec
jo
add
outsb
stos
jo
lahf
fsts
mov
pop
mov
jg
out
mov
xchg
imul
cmc
or
push
shlb
pop
outsb
xchg
dec
mov
jbe
fstpt
xchg
push
ja
outsl
pop
out
nop
sbb
addl
into
dec
mov
add
cmpsl
inc
xchg
xchg
jo
lods
lcall
lret
pop
and
rolb
xor
lea
fdivrl
test
xor
and
adc
insl
pop
pushl
mov
inc
test
xorl
cltd
sti
ljmp
dec
jnp
jo
fucomi
cmc
vunpcklps
jne
rcrb
add
jo
mov
xor
loopne
pop
out
pop
push
lds
cmpsl
jo
sarb
outsb
test
addl
xchg
in
push
lret
inc
jmp
xchg
fst
jo
mov
mov
test
xchg
jo
inc
lds
cmpb
mov
gs
outsb
jo
fiadds
ret
scas
jo
pusha
stos
mov
sahf
inc
jge
aad
xchg
mov
pop
lock
or
cmpsl
mov
adc
lock
xchg
ret
jo
repnz
pop
dec
shr
ja
ja
cmp
repz
popl
jmp
in
data16
imul
mov
and
clc
dec
pop
les
adc
popf
push
std
mov
sbb
cmpsb
jo
cmpsb
and
popa
sahf
insb
xor
sub
sbb
dec
push
jo
adc
adc
pop
pop
rcll
dec
sbb
in
aaa
cmp
xchg
mov
fildl
jne
sbb
jo
sub
lods
jmp
or
lock
test
shl
loopne
insl
pop
stc
dec
movsl
ja
std
add
mov
sbbl
fstl
test
je
movsb
mov
xchg
insl
loope
add
mov
shl
ja
inc
pshufw
fxch
das
mov
xor
jo
mov
inc
jo
rolb
xor
mov
mov
sbb
mov
stos
in
jae
fcomps
subb
clc
fbstp
sub
inc
roll
cmp
outsl
fmul
inc
xorl
dec
sbb
add
cmpsb
jo
mov
pop
mov
jo
adc
mov
add
insl
jbe
or
jo
xchg
loopne
or
fnstenv
xchg
sbb
xchg
sub
fwait
lods
mov
jo
or
loope
jo
mov
jb
jle
adc
aad
sub
scas
jo
cmc
sbb
pop
cmpsb
mov
jo
xlat
repz
push
xchg
lods
jo
insb
jl
push
lret
ss
cld
cs
ds
mov
call
cwtl
cmc
push
cmp
lock
inc
sti
dec
inc
xchg
les
addr16
pop
dec
jnp
fnstenv
mov
loope
movsl
ja
fdiv
push
js
xchg
call
dec
sti
stos
outsb
into
je
inc
les
dec
test
mov
mov
xor
sbb
addr16
jo
mov
and
xchg
xor
xlat
cmc
pop
ljmp
jl
leave
jp
xor
bound
pop
push
xchg
mov
jnp
sar
addr16
mov
adc
jle
jo
push
xor
cwtl
pop
aaa
push
pop
mov
lret
out
mov
icebp
adc
nop
xchg
jle
mov
in
and
push
dec
sub
sub
and
in
addr16
ljmp
js
pop
xor
mov
inc
and
stos
jo
dec
lcall
loopne
js
sbb
adcl
or
jo
adc
cmp
ljmp
xor
cmp
int
inc
js
lods
jo
or
in
jae
andb
pop
mov
cmp
jmp
aaa
push
xchg
and
push
jo
pop
xchg
nop
mov
subb
rorl
lock
outsb
loope
xlat
dec
or
xchg
lret
jbe
jo
push
inc
lret
sti
mov
jo
xchg
clc
mov
sbb
dec
sbb
arpl
cmpsl
jo
push
xlat
int3
outsb
dec
pop
adc
sahf
dec
jno
jae
cmp
cmc
cmp
outsb
scas
adc
test
and
fs
add
je
add
jmp
push
xchg
nop
pop
mov
fs
mov
sahf
fstps
inc
into
in
mov
xchg
out
ss
aas
jne
and
outsl
jo
pop
imul
mov
mov
in
cmp
jbe
and
jo
fisttpl
jl
int
aad
pop
daa
in
sbb
push
cmp
cmpsl
js
add
fs
pop
in
lret
jge
stos
cli
add
into
add
rolb
out
mov
movsl
inc
adc
pop
fs
lret
stos
push
cmc
inc
push
inc
mov
arpl
dec
jo
or
push
xchg
inc
or
pop
insl
insl
xor
add
leave
xchg
mov
jae
add
mov
out
inc
in
cmc
xchg
cmpsb
ret
inc
mov
xchg
insl
in
cmp
adc
bound
sub
push
fistpll
imul
pusha
mov
mov
rcrl
cli
cs
insb
sarl
je
dec
aad
lock
pop
loopne
jo
jno
std
push
mov
cld
ss
hlt
out
pop
fs
cmp
cmp
push
ljmp
pop
adc
andl
shll
push
clc
pop
dec
xchg
insl
adc
push
or
jne
hlt
out
jo
pusha
mov
or
roll
mov
mov
jecxz
in
push
or
jne
out
cmp
pop
jo
mov
cmp
mov
mov
inc
flds
mov
pusha
sbb
push
mov
mov
adc
int
xchg
xor
sbb
imul
movsl
lcall
lock
in
fisttpll
add
jo
push
or
push
pop
cli
enter
adc
out
fnsave
sub
jne
fistps
push
jno
sbb
dec
aam
jo
jns
xchg
or
push
inc
pop
jno
dec
ror
test
and
mov
popa
sar
pushl
jne
mov
ffree
mov
lods
push
adc
out
popf
je
jo
xlat
sarl
pop
push
mov
mov
push
jno
push
hlt
fisttpl
inc
adc
pusha
jp
dec
mov
push
mov
push
xchg
jo
pusha
data16
and
inc
call
fmuls
dec
fs
jo
les
in
jo
xor
mov
out
gs
std
xchg
cmp
mov
fldcw
mov
cwtl
and
in
leave
xchg
dec
test
mov
imul
jo
xchg
mov
or
jo
sahf
adc
pop
jo
push
mov
push
sub
jo,pn
dec
cli
icebp
stc
ficoml
jmp
cmp
rcll
es
add
push
add
sub
mov
repnz
pop
jo
gs
stos
fldenv
jo
inc
push
fstpt
pop
pop
add
outsb
out
iret
cld
jo
pop
fadds
leave
jno
jo
mov
push
aad
and
pop
int
jo
fcmovnb
movsl
push
roll
jnp
push
loop
test
out
jo
mov
cld
and
xchg
sbb
mov
mov
je
in
notl
dec
pushf
outsb
dec
hlt
mov
stos
jno
jo
in
mov
dec
imull
insl
mov
data16
fdiv
dec
or
mov
enter
jae
adc
mov
mov
mov
dec
clc
cltd
jg
jo
movsl
and
jo
ljmp
jo
repz
leave
stos
sub
movsl
out
mov
movsb
cmc
and
inc
mov
xchg
mov
ret
jo
js
push
xor
mov
mov
les
stos
or
or
sbb
pop
test
sub
movsl
aam
push
shlb
mov
insl
daa
and
cs
lods
jo
xchg
pop
addl
dec
jo
inc
add
in
stos
je
sbb
jae
xor
roll
jle
insl
add
stos
cld
xchg
jb
jo
xchg
daa
es
loope
rcrl
int
ja
mov
pop
sbb
cwtl
out
mov
shlb
sub
jo
aad
imul
mov
lea
push
jo
les
clc
or
jp
jo
cmpsl
xchg
pop
lods
sub
mov
add
insl
fstpt
push
jo
pop
and
imulb
or
push
les
testl
nop
dec
jo
js
negl
xor
jecxz
jns
add
shrb
jo
int3
andb
std
jns
pop
mov
push
clc
push
nop
push
jae
xchg
jecxz
mov
mov
fldcw
push
in
loopne
add
inc
pop
scas
bound
mov
mov
cmpl
mov
mov
xchg
cmpsl
rcl
mov
mov
add
lret
loope
lret
lds
xor
cmp
movsb
xchg
mov
icebp
jp
pop
jo
sbb
or
jp
xchg
xor
add
xchg
jb
outsl
loopne
or
pop
dec
movsl
xor
imul
dec
insl
lods
fdivrl
adc
mov
mov
sbb
call
test
fucomi
or
jo
lock
int3
idiv
xor
inc
aam
mov
mov
loop
sarb
fcompl
jo
aad
rclb
adc
and
int3
imulb
push
cmpsb
dec
xor
aam
or
data16
xor
fiadds
sub
fsubr
and
int3
mov
mov
mov
or
sub
int3
mov
add
or
loopne
insl
or
jp
cmpl
cmpsl
in
fs
lea
xor
add
jo
lret
fnstcw
pusha
repnz
pop
xchg
push
aad
stos
xor
pop
pop
js
xchg
or
adc
jo
push
shlb
add
lret
pop
aas
test
jo
sbb
xchg
out
jo
jp
sti
add
out
call
add
inc
movsb
lea
fmull
jo
aad
dec
xchg
popa
pop
inc
cmp
jo
les
pop
xchg
sub
addr16
push
repnz
fdivrs
jo
push
in
test
jo
push
jp
loope
pop
jo
fwait
jb
xchg
mov
sbb
jmp
leave
or
adc
jo
shrb
aaa
jmp
push
add
push
xchg
and
insl
lret
ss
add
add
insl
xchg
pop
in
push
adc
inc
mov
or
fldcw
lret
jge
mov
adc
inc
push
data16
cmp
test
insl
push
inc
shrl
das
shlb
jo
lcall
mov
stos
sbb
sbb
in
and
out
jo
cmc
add
jae
adc
rol
mov
fmul
cmp
jg
rcl
xchg
push
out
in
mov
imul
or
sub
ds
xchg
frstor
jo
xchg
inc
mov
mov
mov
adc
jo
sub
lea
push
sbb
lock
movsl
lret
gs
mov
or
lods
mov
fstl
xchg
cmp
ja
mov
fiaddl
divl
fistl
lods
xor
pop
jo
inc
adc
mov
bound
mov
or
jne
lds
jae
clc
decb
jo
cmp
cld
scas
lods
cmp
cmp
call
fwait
pop
mov
stos
ja
fnsave
dec
xor
data16
sti
jo
cmp
xchg
jecxz
lods
lcall
testb
push
fst
mov
sbb
xchg
and
and
xchg
aad
xorl
scas
xchg
fnstenv
adc
jns
jo
shll
notl
xchg
int3
cmc
push
icebp
jo
loopne
and
jno
jge
pop
test
xorl
and
es
jo
enter
sahf
mov
adc
or
xor
lcall
pop
jo
in
jle
cwtl
sbb
loop
mov
mov
push
cmp
inc
incl
add
nop
inc
inc
push
test
jmp
jnp
out
lock
xor
sbb
clc
loopne
mov
mov
mov
je
pop
and
fisubrl
lea
mov
repz
loopne
out
mov
mov
xchg
sbb
pop
sub
out
pop
dec
gs
lea
jno
stc
xchg
xchg
aad
xor
inc
jp
jo
sbb
into
jl
movsl
call
ljmp
dec
call
cmp
cltd
add
in
jg
jo
imul
aad
cmp
jg
xor
cmc
das
mov
mov
mov
or
mov
sbb
loope
lods
jo
rcrb
ljmp
mov
mov
mov
cmp
js
dec
sarb
xchg
filds
int
add
jge
mov
in
jle
pop
sbb
es
mov
push
cmp
jbe
fwait
jge
mov
adc
jo
push
shrl
jmp
out
mov
movsb
outsb
stc
or
ds
ja
and
xlat
scas
loopne
pop
inc
pop
jo
adc
mov
push
dec
sbb
fistl
pop
or
jo
insl
imul
push
add
je
add
push
fsubrl
in
sahf
icebp
cmp
call
add
loope
sub
mov
fistps
cwtl
enter
fdivrl
cltd
mov
insl
mov
jl
es
inc
adc
cmp
loope
sbb
int3
inc
push
mov
imulb
pushf
jo
fistpl
ja
fnstcw
orl
ror
insl
push
mov
cmp
xor
jo
loope
fcmovne
div
out
dec
jp
jo
and
xor
and
push
inc
int3
rorb
lods
pop
mov
stos
jo
rclb
iret
jae
mov
cwtl
adc
daa
jo
add
popf
lret
cli
push
jo
out
push
push
or
adc
xor
pop
lds
jnp
cmp
adc
cmc
cmpsl
inc
fwait
shll
fbld
cltd
mov
jl
pushl
push
lds
nop
aad
pusha
data16
lods
aaa
test
shlb
push
inc
inc
mov
sbb
dec
jmp
lock
lods
ret
out
call
scas
inc
outsb
je
adc
jns
mov
mov
inc
enter
inc
mov
sub
jo
and
insl
arpl
xor
jo
aad
dec
pop
repz
jo
sub
xchg
mov
and
insl
sbb
fdivr
pop
mov
or
xchg
icebp
aad
jnp
push
add
je
push
out
xchg
jo
fisttps
scas
mov
aas
hlt
pop
clc
cmp
ja
into
inc
adc
push
jmp
mov
addb
inc
sahf
jo
imul
pushl
xor
cmp
insl
into
adc
xchg
ret
popf
or
pop
fwait
pop
dec
jb
jo
add
fdivs
lea
mov
fistpll
repz
mov
ret
jo
mov
ljmp
jo
cmp
fxam
loop
fbstp
sub
and
jo
ljmp
jo
mov
mov
mov
aad
loop
xlat
gs
das
dec
pop
jo
inc
push
aas
insb
out
push
incb
and
mov
jo
xchg
xchg
fwait
xchg
jecxz
sbbb
aad
imulb
insl
in
jmp
cmp
xchg
outsl
and
scas
jp
insb
jne
lock
adc
sub
lahf
stos
mov
inc
outsl
pop
shlb
cmp
dec
rcl
adc
jo
mov
xlat
frstor
fs
mov
insl
adc
and
imul
idivb
mov
jbe
popa
repnz
mov
push
mov
jo
dec
cltd
test
insl
fcmovnbe
in
cmpsl
outsb
sbb
adc
fnsave
xchg
das
pop
and
mov
outsb
mov
push
add
jo
ss
xchg
cmp
scas
jo
lret
fdivrl
jo
pop
xchg
dec
repz
mov
add
js
dec
bound
ljmp
lds
lcall
jo
in
push
dec
ret
pop
fdivl
sbb
setp
and
pop
push
or
mov
jo
pop
jnp
insl
jbe
xchg
add
sbb
xchg
xchg
shrb
or
dec
loopne
jo
loope
jae
cmpsl
sbb
call
cltd
jns
add
dec
subl
mov
cld
and
bound
cli
add
insl
ja
mov
mov
rorl
push
movsl
sbb
push
and
pop
jo
push
mov
push
jo
int
repz
call
jo
cli
push
push
cmp
and
mov
loop
jo
pop
jae
push
mov
jo
fs
rorl
mov
inc
sbb
fstl
lea
jnp
ds
jg
test
xchg
mov
adc
mov
jle
jo
mov
xchg
ret
lcall
mov
push
inc
ja
fadd
sbb
lret
adc
jo
add
std
cmp
cmc
leave
aas
jo
or
lret
pop
jo
aad
shlb
ret
ljmp
and
sub
mov
sbb
fcom
lcall
ljmp
dec
int3
sbb
push
mov
xadd
jo
add
jns
jb
js
mov
push
xchg
push
les
aaa
jo
inc
je
xchg
cmc
loop
jo
aad
sbb
int
dec
dec
leave
or
sarl
jo
push
push
xchg
mov
int3
fs
cmp
lea
aad
adc
leave
xor
test
dec
ss
repz
fyl2xp1
inc
cmp
fidivl
fdivrl
pop
cli
int3
faddp
pop
jo
rorl
lods
out
push
push
fnstenv
test
sub
cmc
push
xchg
call
insl
sarb
imul
scas
fidivs
fisubrl
push
scas
imul
push
jo
cmc
cmp
into
inc
mov
rcl
repnz
fldt
movl
fmul
aad
mov
mov
ja
xchg
repnz
or
add
fsub
arpl
inc
cli
jo
jmp
mov
lahf
dec
mov
iret
out
pop
loop
enter
jo
sub
lods
dec
xor
loope
push
pop
sbb
ja
mov
nop
sub
sub
add
jmp
mov
inc
cmc
push
scas
in
and
cltd
pop
cld
pop
int
fmuls
out
cli
es
rcll
aaa
xchg
cltd
lock
xlat
push
and
cmp
xchg
jecxz
push
ja
adc
fwait
push
adc
pushl
out
mov
fidivs
fnstenv
and
push
sbb
jo
rclb
pop
rolb
lcall
idiv
jbe
mov
in
pop
jo
cld
loopne
aam
push
xchg
jo
mov
divl
sbbl
lds
in
jmp
fidivs
adc
inc
jo
inc
pop
push
mov
and
lahf
lret
mov
leave
jae
xor
inc
xor
sbb
sub
jp
or
outsb
mov
popf
ljmp
jbe
inc
mov
dec
sub
jo
aad
lea
popa
test
jp
cmp
lods
divb
sbb
jnp
adc
sub
jo
sbb
mov
fnstenv
mul
pop
mov
std
enter
jo
not
jle
sbb
adc
fucomip
and
insl
int
in
inc
fcmove
jmp
adcb
nop
rol
ljmp
xcrypt-cbc
cmpsl
aad
jp
outsb
xchg
lea
dec
rorl
mov
cld
imul
cmpsl
outsl
jo
aad
inc
sbbl
dec
mov
das
adc
push
fisubl
in
xchg
cli
aaa
jo
jno,pt
sbb
jmp
movsb
mov
or
cmp
add
mov
aad
or
jo
loopne
scas
dec
test
dec
jne
jne
push
jo
push
mov
jle
jo
mov
mov
ret
lds
cs
cmp
mov
mov
pop
int
jo
mov
or
xor
fdivl
lret
cmp
clc
enter
out
push
add
arpl
and
pop
mov
xor
fists
jmp
sbb
cmp
pop
jo
pop
aam
aas
outsb
lea
inc
mov
cmp
sub
dec
mov
push
aam
out
mov
add
jo
stos
scas
jmp
leave
xchg
dec
mov
ret
inc
call
jo
dec
andl
jnp
mov
or
push
sarb
jbe
fwait
jo
or
mov
pop
jo
ja
pop
imul
or
cmp
aam
jmp
out
daa
dec
insb
cmpsl
jae
stos
and
nop
inc
jmp
push
jae
pusha
int3
in
loopne
lds
jo
and
mov
and
dec
dec
fiadds
mov
insb
jle
mov
jnp
clc
sub
jecxz
lea
adc
vpshuflw
mov
iret
jo
push
imul
jo
mov
push
imul
mov
aam
jo
dec
mov
inc
stos
cmp
add
addl
jo
pop
pop
test
cmp
jns
out
sub
movsl
xchg
xor
pop
add
add
arpl
adc
test
das
dec
adc
stos
inc
loope
xor
test
sbb
mov
push
movsb
cmpsl
xor
adc
movsl
enter
stos
sub
jo
hlt
std
adc
lcall
mov
ja
push
mov
ljmp
aas
popf
xor
inc
xchg
test
insl
inc
cmpsb
push
adc
scas
insb
movsl
push
jg
xor
nop
mov
jnp
fists
jo
mov
xchg
pop
lea
jo
mov
sbb
jo
sar
jle
mov
jbe
pusha
cmp
pop
nop
aas
loope
push
hlt
jo
pop
push
adc
xchg
lock
add
adc
inc
xor
jmp
mov
lods
pop
jnp
fdivl
cli
ljmp
dec
iret
loopne
cwtl
cltd
inc
mov
jp
mov
lahf
fucomip
dec
dec
xchg
out
xchg
aad
xor
repz
loopne
jo
shlw
pop
xchg
movb
mov
and
cmc
aad
fwait
rcl
pop
xchg
adc
insl
outsb
push
jg
outsb
inc
stc
xchg
ja
fiaddl
stc
pop
in
aad
sub
sub
sbb
push
arpl
dec
mov
xor
xor
or
pop
loop
push
add
jge
jmp
push
mov
stc
xor
sbb
lahf
fidivs
repz
or
fnsave
jg
jo
mov
jb
cmp
out
jo
lea
push
incl
mov
ja
pushf
mov
and
xor
mov
jo
cmc
xchg
add
push
je
mov
cmp
lahf
fildl
icebp
mov
lret
das
pop
dec
lock
mov
pushf
or
jo
adc
xor
jo
hlt
js
fcoms
in
inc
adc
or
jo
push
add
adc
mov
xor
adc
jo
jbe
fdivrl
ret
jo
cwtl
sbb
jo,pt
dec
push
rclb
mov
mov
ficomps
das
out
adc
daa
xchg
xor
jo
in
cld
lds
sti
fcomps
jo
xchg
push
jo
sti
pop
xor
fmul
jnp
cmp
sub
test
lcall
sbb
jo
test
repnz
gs
push
sti
mov
notl
mov
push
je
mov
out
mov
pop
xor
jo
push
pop
jle
mov
mov
lcall
aad
ror
add
in
imul
mov
aad
xor
and
out
mov
inc
cmpl
dec
dec
pusha
jo
dec
jns
movsl
or
inc
and
int
cwtl
rolb
jp
test
cli
into
xchg
mov
fistpll
xor
and
cwtl
dec
test
out
sbb
insl
or
dec
mov
adc
dec
idivl
std
imul
faddl
and
jb
xor
inc
lahf
push
jo
jae
arpl
insb
jo
filds
inc
pop
or
and
imulb
pushf
xchg
lds
jge
aam
mov
nop
inc
rorb
sub
leave
adc
not
and
sarb
in
mov
rolb
xor
lods
mov
fwait
or
into
add
jle
mov
loopne
dec
enter
jo
sbb
push
xchg
lcall
push
and
mov
jo
mov
repnz
pop
insb
jo,pt
cli
mov
sbb
xorl
ja
jo
xchg
enter
jo
mov
jno
jo
shll
jo
in
add
insb
mov
ret
into
xchg
xchg
xchg
xorl
push
dec
cmp
fdivl
inc
mov
add
mov
rclb
aad
pop
rcrb
outsl
jo
sbb
fbstp
jns
in
imul
jo
and
test
insl
push
mov
push
push
lahf
loopne
pop
cmp
jo
fsubr
cli
jb
cmpsl
jae
push
sbb
jp
xor
adc
or
sub
arpl
fldt
shll
popf
jne
daa
fwait
mov
lahf
aad
pop
xchg
rorb
xlat
loop
ljmp
jo
mov
mov
bound
fucomip
jo
outsl
addb
jo
push
fs
aad
cltd
pop
jo
dec
mov
bound
push
jnp
arpl
jo
inc
loopne
cld
inc
xchg
cmp
mov
sbb
push
mov
jo
aad
leave
jmp
nop
out
xchg
int
mov
pop
xor
and
xor
test
sub
in
jo
gs
jg
aad
es
add
xchg
dec
xchg
iret
ja
or
pop
cmp
lcall
push
push
add
inc
fwait
mov
stos
aad
xchg
sahf
inc
xor
push
sub
jge
lods
arpl
in
jo
adc
cld
add
in
xor
outsl
dec
out
out
adc
xor
sbb
jo
xchg
jmp
push
ja
dec
xchg
sub
data16
arpl
jae
jo
call
dec
inc
cld
jecxz
xchg
mov
push
mov
lock
cmc
shlb
jo
jp
scas
sub
sahf
in
jae
sbb
mov
repnz
xlat
mov
push
or
lods
flds
inc
jns
imul
add
mov
jo
test
pushf
or
mov
lcall
adc
cli
iret
test
add
subl
inc
jle
jo
stos
cld
inc
sbb
cmp
jo
repnz
cmpsl
mov
loope
mov
pop
adc
movsl
mov
ret
sbb
shlb
jo
mov
jge
push
push
push
lods
ss
cmpsb
addb
ja
ret
pop
shl
ja
fs
jl
add
push
adc
mov
dec
jmp
add
mov
push
add
jns
pop
or
jne
fnstenv
push
jmp
push
lcall
inc
aad
mov
lods
xor
rol
dec
jo
dec
js
jmp
out
mov
jp
pop
in
in
inc
les
cmp
cs
loopne
push
imul
lods
adc
outsb
cltd
add
rcl
shl
jge
inc
stos
je
mov
push
imul
xchg
jne
push
std
xor
dec
dec
and
mov
or
aam
flds
int
popf
dec
add
jl
mov
je
fisttpl
int
idivl
xor
mov
pop
aaa
mov
cmp
adc
dec
and
in
jae
cmpsb
dec
push
rcrl
enter
ja
ljmp
mov
jo
mov
dec
pop
pop
adc
jno
jp
mov
mov
jo
xchg
roll
dec
adc
lock
popa
decl
adc
xchg
cmp
addr16
mov
clc
jle
jo
adc
in
mov
dec
out
xchg
lock
andl
insb
xchg
jecxz
int3
cmc
fildll
xchg
les
sbbl
jo
push
pop
rol
dec
dec
push
std
mov
jno
jo
push
sar
fistps
add
leave
out
pop
xchg
pop
cmc
add
push
repnz
outsl
or
sbb
dec
in
ja
push
scas
mov
sar
jnp
nop
inc
jo
loopne
jb
into
mov
dec
sbb
cmp
aad
jns
cwtl
mov
fldcw
aam
pop
and
xchg
fcom
jo
je
pushf
mov
movsb
jns
dec
fildl
stc
dec
inc
sub
jo
rorb
out
pusha
mov
stc
pop
push
xchg
cmpl
aad
mov
out
stos
xor
lahf
mov
adc
shlb
hlt
bound
aad
jb
cmp
xchg
jo
cmpsb
das
sahf
rcl
jmp
div
fldcw
lods
out
mov
jg
pushf
jl
jo
outsl
addr16
xor
mov
adc
jo
mov
inc
pop
mov
lock
mov
xchg
mov
aad
jo
adc
add
fdivrl
rolb
xchg
add
lcall
dec
cltd
jo
pusha
pushw
cmp
sub
cli
shlb
aaa
jo
fldcw
mov
insb
inc
jo
aaa
mov
insl
dec
shlb
lret
orb
ficomps
popa
enter
into
and
loop
jo
jne
movsb
lds
cmp
sub
jnp
mov
mov
movsb
dec
mov
jno
movsl
inc
cmp
outsb
jo
push
push
lock
fcmovnbe
jmp
insl
xchg
fdivp
sti
mov
out
mov
and
insl
xchg
lret
sahf
adc
mov
sub
xor
mov
insb
rclb
jne
or
das
jo
arpl
cmp
jae
and
cld
sbb
in
push
data16
ffree
jo
stos
cmp
movsl
and
fdivrl
xor
sahf
add
insl
push
stc
lret
rcrb
jle
jo
sbb
inc
push
xchg
fbstp
cmpsw
js
jae
jo
inc
insb
outsb
ss
in
fdivl
lods
xor
stc
fisttps
adc
lods
push
mov
cmc
xchg
lahf
mov
testb
cmp
sub
jo
fwait
aad
dec
incb
ret
sub
xlat
leave
jo
or
mov
mov
xchg
jo
xor
jo
insb
hlt
movsb
sti
cmpsl
lret
lds
fwait
push
adc
out
idivb
mov
mov
push
fs
jo
jnp
fistpl
cli
jo
pop
dec
push
or
imul
test
sbb
adc
pop
mov
fmull
pop
xchg
shll
loop
pop
cmpsl
comiss
fwait
xor
push
fldt
jo
xor
mov
inc
dec
mov
adc
dec
sti
imul
xchg
dec
jo
outsb
in
jo
mov
push
bnd
sbb
arpl
add
xorb
ljmp
aas
aad
mov
pop
adc
add
jo
push
mov
push
sbb
pop
xlat
nop
cmp
subl
jmp
inc
rcl
jo
and
mov
jo
inc
out
enter
or
mov
adc
leave
rorb
and
rcrb
test
sub
divl
stos
icebp
dec
jp
lds
mov
sbb
jo
mov
sub
jno
stos
add
mov
jo
mov
mov
loopne
das
pop
int3
or
rcll
mov
inc
push
mov
inc
jnp
jae
aad
repnz
aaa
imul
mov
loopew
shlb
lock
push
dec
cmpsb
stos
adc
out
mov
cmp
and
je
inc
mov
ret
jo
cltd
in
notb
cmp
fst
pop
div
ficoms
add
adc
lcall
lcall
ja
pushf
cli
pop
push
push
xor
push
or
cmp
mov
sbb
mov
mov
lock
out
insl
jmp
test
loope
xor
sbb
pushf
jns
jo
aad
jg
cmp
cs
mov
pop
jmp
mov
adc
inc
ja
cmp
js
adc
adc
bound
adc
imul
inc
jo
aad
call
pop
ret
cmpsb
jmp
insb
cmp
dec
jo
add
roll
cli
ljmp
inc
dec
fwait
loopne
xor
aad
sub
imul
bound
fcoms
mov
fs
js
insl
fisttpl
add
jl
jo
mov
xchg
gs
shll
mov
enter
lock
sub
and
jo
xchg
js
sbb
je
jl
xlat
inc
mov
lods
jmp
outsb
cwtl
mov
add
mov
divl
popa
sub
ret
push
jbe
int3
jo
cmp
lods
jecxz
cmp
jecxz
lock
sbb
test
sar
jo
xlat
push
fildl
push
cmp
scas
jo
mov
stc
mov
jle
push
es
into
mov
dec
shll
pop
cld
dec
adc
mov
dec
pause
mov
and
sbbb
jo
push
ljmp
dec
imul
loopne
jo
movsl
mov
sub
ja
jne
test
loopne
sbb
or
add
push
add
jo
out
jge
and
ret
stos
fmull
mov
aad
sbb
inc
sbb
dec
int3
xchg
stc
mov
sub
bound
adc
jo
ret
es
jmp
lcall
jo
dec
xchg
pop
cwtl
sbb
jle
push
push
outsl
mov
subl
inc
sbb
popa
cwtl
in
xor
jo
pcmpgtd
fadd
out
mov
inc
dec
push
jge
imull
xchg
shlb
mov
pop
add
es
adc
loop
jnp
inc
xor
je
rcrl
pop
jo
fbld
jb
xlat
lcall
sub
lods
sub
pop
jp
nop
jb
inc
and
fwait
xchg
imul
in
add
dec
or
xchg
pop
insl
jae
and
mov
scas
jo
jecxz
xor
int
leave
sbb
enter
mov
outsl
addr16
jle
jo
xchg
add
jbe
fimull
mov
test
sub
push
mov
sbb
cmp
push
lock
adc
jo
xchg
jp,pt
jge
sub
or
jo
ror
insb
jns
popa
addb
imul
xor
out
push
stc
pop
fs
rcrl
mov
imul
sarl
jo
xorb
and
aas
fnstcw
xchg
push
ss
xor
fisubs
fistl
or
aad
cld
adc
in
popf
fwait
jle
jo
dec
dec
outsb
gs
sbb
push
push
and
mov
mov
fcoms
jle
dec
mov
push
enter
jl
cmp
shlb
int3
pop
jmp
dec
int
push
and
mov
fmulp
mov
sbb
or
je
xchg
mov
int3
negl
aam
jbe
lock
ja
mov
dec
out
adc
mov
add
clc
lret
ja
add
pop
lock
sub
push
sub
insl
mov
ds
jno
jo
or
pop
mov
enter
sub
push
jnp
xor
push
shrb
lock
fsubs
ljmp
jge,pn
cwtl
fcoml
nop
jo
and
jg
dec
sbb
fnstenv
rcll
jo
cmp
adc
or
push
jl
jo
bound
dec
ret
mov
aam
jae
ja
xorl
sbb
mov
scas
dec
xchg
cs
popf
cmp
push
jmp
pushl
lret
je
insl
imul
adc
flds
fs
jo
jle
ss
shll
sar
icebp
dec
in
es
fsubp
dec
lock
mov
xor
sbb
pop
adc
jo
das
lods
cli
fs
jne
movsl
idiv
lock
mov
adc
out
loop
pop
dec
push
fsubrs
enter
cld
inc
arpl
cltd
sub
jb
clc
mov
jno
nop
xor
xlat
vmread
loope
sub
andb
jp
ss
jo
sub
mov
out
cmp
jo
mov
in
inc
enter
xor
lods
mov
jbe
dec
inc
fdivrl
in
jp
pop
aad
inc
jo
add
dec
jo
out
idivl
sub
in
hlt
cmp
rorb
push
int
add
shll
push
cli
pop
push
cmp
rclb
xchg
insl
divl
push
push
sbb
sbb
mov
pop
xchg
lds
das
outsb
test
nop
int3
out
stc
jo
pop
xchg
fimuls
ds
mov
inc
pop
aaa
into
pop
pop
fnstcw
out
inc
jp
imul
push
push
rcrb
cs
mov
fnstenv
idiv
xchg
mov
aam
aad
ja
inc
ds
mov
vpmaxub
mov
and
jo
push
adc
jo
xor
mov
arpl
mov
jg
or
add
push
loopne
jle
jo
mov
test
jo
sub
inc
cmpsl
imul
jo
cmp
test
outsb
jo
lea
fbstp
fidivrs
adc
pop
mov
addb
jo
xchg
push
and
ja
mov
out
cmp
shll
jae
sbb
in
hlt
push
and
pop
ror
lock
je
mov
jo
arpl
dec
mov
adc
ficomps
pop
jb
add
lock
std
jle
fldenv
out
push
or
fwait
jo
mov
movsl
pop
int3
insb
adc
xchg
push
jg
mov
mov
dec
aad
adc
cmp
dec
sub
dec
xor
repz
and
jo
lret
xchg
ds
jo
cmp
testl
adc
sar
outsb
mov
sti
mov
dec
xor
test
xlat
enter
mov
push
jbe
in
subl
jo
cmp
fcomps
rorl
fwait
add
push
popf
lea
cmp
xor
cli
pop
out
lock
mov
jo
push
xchg
imul
cmp
mov
push
mov
xor
inc
imul
loop
fnstenv
sbb
jnp
push
cmc
cmp
pop
js
sbb
jmp
sub
or
push
imul
cmc
or
in
cmp
lret
push
adc
jmp
pop
jp
cmp
jbe
mov
xchg
fwait
outsb
mov
enter
jo
mov
lret
fmuls
mov
add
xchg
push
sbb
out
pusha
scas
int
mov
mov
pop
mov
xchg
xor
shrl
jmp
hlt
jo
pop
fdivrl
rclb
add
dec
nop
out
xchg
push
pop
cmp
sbb
cmp
jns
aaa
dec
arpl
xchg
loope
xor
ds
push
cs
or
cmp
nop
scas
das
test
jo
mov
dec
mov
rorl
popf
mov
jo
xchg
es
sbb
and
mov
dec
insb
jo
lock
adc
shrl
or
jbe
cld
jo
dec
xchg
sub
mov
cmc
xchg
add
or
jne
sub
aas
dec
sub
dec
scas
add
lea
lods
mov
fstpt
fimuls
jo
out
adc
pop
sub
jo
icebp
pop
stos
into
lock
adc
lahf
add
test
lock
and
ret
sub
add
lahf
xchg
cs
add
pop
jo
xchg
mov
jo
movsl
inc
pand
fdivl
jo
in
sbb
fidivs
mov
or
and
pop
jo
js
cmp
ja
inc
push
and
data16
pop
inc
jae
sub
xchg
pop
cmp
loopne
sbb
roll
outsb
leave
cltd
mov
test
sbb
xlat
sahf
rep
fldl2t
mov
cmp
jne
nop
or
lea
insl
les
stos
jp
dec
and
fwait
es
cmpsb
insl
addr16
ja
leave
mov
push
loopne
xor
pop
sbb
sahf
outsb
lods
sbb
lcall
test
in
stc
js
mov
cwtl
lods
inc
jno
cmp
lock
xor
inc
hlt
mov
mov
aad
xorb
mov
pop
repz
bound
xchg
push
add
adc
adc
imul
sbb
pop
cmp
jo
xchg
inc
sbb
data16
jns
mov
sub
pop
jo
sub
scas
in
jl
je
and
sbb
ja
xor
jae
and
daa
pushf
pop
pop
dec
mov
cltd
nop
jmp
jp
sbb
pop
loop
sti
dec
jo
sahf
icebp
faddl
pop
shr
xor
mov
outsb
lret
popf
lret
jg
repz
pop
pop
jo
push
out
shll
pop
call
xchg
das
jae
sahf
jnp
test
mov
fiadds
adcl
mov
mov
hlt
dec
je
icebp
cwtl
fdivs
xor
aad
scas
jle
add
push
test
arpl
out
jo
sub
fs
jo
pushf
je
hlt
outsb
fstps
jo
dec
andb
sbb
adc
adc
push
inc
dec
pop
repnz
loopne
xchg
push
mov
sbb
fidivrs
enter
jo
adc
push
jmp
jle
movsl
fsts
xor
add
lods
xchg
pop
lahf
mov
jo
mov
cmpsl
jo
pavgb
stos
nop
std
xor
test
sbb
xlat
sbb
mov
mov
les
mov
and
in
push
aad
sbb
or
fldcw
push
loopne
out
je
sbb
sub
mov
loopne
jo
add
xchg
xor
jo
stos
sub
aas
jge
fnstenv
adc
lock
pop
jo
ljmp
jne
fcomps
popa
cwtl
clc
dec
idivl
and
insl
cli
pop
or
xor
xchg
jo
add
xor
out
sub
fstp
jge
jl
sub
jo
sbb
mov
xchg
sub
call
adc
jae
push
push
pop
out
cwtl
stos
jo
mov
jo
and
loopne
flds
das
push
outsb
aad
pop
jne
insb
sub
scas
nop
ljmp
push
xchg
jno
pop
insl
push
lds
test
cmc
jo
fnsave
mov
outsb
aas
stc
lcall
mov
data16
outsl
push
mov
adc
fdivrl
repnz
jo
dec
fwait
incb
aaa
mov
push
add
pop
flds
test
sub
push
push
fisubrs
rcrl
jo
adc
stc
es
mov
aad
dec
adc
sub
xchg
jo
pop
inc
movsb
adc
stos
jo
in
pop
arpl
rcrb
sub
loope
sub
xor
mov
lret
pop
je
sub
jp
lret
jo
dec
xchg
mov
jo
int3
jmp
mov
nop
icebp
ljmp
pop
push
stos
inc
test
test
mov
rolb
push
jo
and
pop
xchg
jo
pop
sbb
test
jo
setbe
mov
aas
leave
jo
aaa
std
dec
stos
mov
mov
imul
cmp
fwait
mov
mov
mov
pop
xor
dec
in
mov
lds
jo
mov
mov
push
cmp
pop
stos
jae
repz
dec
leave
fwait
ljmp
out
fdivs
mov
xchg
adc
popa
pop
cs
xor
xchg
add
lods
jb
cmp
mov
movsb
addr16
jle
enter
int3
imul
fldenv
jo
mov
add
mov
dec
insb
gs
dec
xchg
sbb
lock
je
push
lods
jo
cmp
xchg
xchg
push
lock
lret
mov
jl
ret
es
loopne
test
iret
es
jo
fiadds
xor
pop
insl
out
lock
cmp
ljmp
mov
outsl
mov
or
rorb
pop
test
sbb
pop
xlat
fidivl
fstps
mov
and
loopne
js
lock
jo
aam
fdiv
xor
sahf
idivb
sbb
pop
jmp
rorl
jo
adc
or
popa
inc
push
insl
aas
adc
pop
add
cmc
push
jp
fcmovne
ja
ds
sti
popf
or
ja
dec
push
sbb
sbb
pop
into
jmp
in
jge
fsts
movsl
cmp
outsb
mov
xorl
jp
fstps
xor
inc
fcomp
cmpsb
imulb
push
in
dec
leave
mov
push
jo
xchg
rcrb
clc
mov
mov
mov
cmp
ret
jb
adc
dec
cmp
xchg
pop
jo
or
pop
popf
jo
loopne
xchg
or
stos
pop
mov
out
jmp
mov
mov
dec
cmp
movsb
and
jo
pop
cli
outsb
push
jge
jb
cmc
mov
xor
loopne
ror
jo
lret
fsts
out
xor
test
in
mov
das
adc
nop
loope
mov
lea
push
rolb
push
cld
mov
sub
fists
mov
ja
iret
jl
push
inc
adc
xchg
aad
cmc
adc
ret
mov
inc
je,pn
in
shl
or
jo
loope
call
jnp
adc
jo
sbb
xchg
aas
outsb
icebp
and
mov
pop
stos
pop
lock
mov
push
lock
into
in
jo
cmc
pop
mov
aad
sub
es
dec
adc
cltd
addr16
add
xchg
repz
adc
jo
sbb
imul
test
cmp
enter
mov
jo
pusha
scas
icebp
xchg
and
add
enter
shl
mov
movsl
fcmovbe
insl
rcr
xchg
jmp
lock
mov
fstpt
stos
xchg
or
jo
cmp
pop
jns
cli
ja
insl
xor
and
jb,pt
pushf
aaa
popf
mov
inc
pop
add
scas
loopne
bound
jo
or
push
ret
or
add
push
aam
gs
test
std
in
push
xor
inc
jne
pop
es
dec
and
leave
jo
cmpsb
int
leave
push
sbb
sub
jo
enter
ljmp
cmp
jo
lea
mov
insl
int
dec
or
push
fsubl
loop
pop
call
pop
mov
adc
negb
pop
jno
adc
adc
cmp
pushf
shll
hlt
push
dec
std
dec
insl
cmc
jo
mov
push
mov
jnp
rcrl
jo
mov
aam
jbe
mov
fcomi
mov
icebp
jno
inc
pop
sbb
inc
push
jnp
iret
push
pop
lock
addr16
push
jo
movsl
mov
orl
add
popf
adcb
shrl
btr
mov
cmp
loopne
sub
jo
jl
repnz
sbb
ficoml
jbe
faddl
aad
or
lods
popa
mov
repz
jo
stos
sbb
jo
into
rcr
data16
cmc
scas
lods
test
mov
jg
mov
jo
sub
or
mov
jecxz
xchg
add
jo
jl
imul
mov
jae
jle
cmpl
xor
and
pop
push
rclb
push
repnz
xor
fcoms
jo
jbe
cld
testb
bound
pop
xchg
pop
pushf
jo
mov
lock
jo
cmp
imul
jmp
addr16
fdivl
shlb
fimull
mov
dec
xchg
add
or
subl
test
inc
mov
mov
dec
mov
ret
mull
adc
lds
in
aad
les
fwait
cmpb
and
inc
jo
sub
aaa
aad
adc
adc
mov
insl
push
subl
jns
js
testb
fmulp
mov
scas
ja,pn
aaa
pop
cmp
mov
pop
cld
inc
sub
je
jle
adc
rcr
mov
dec
stc
in
movsl
jo
clc
mov
pop
in
mov
lock
faddl
enter
dec
jo
clc
aaa
imul
mov
sbb
pop
adc
addl
mov
jge
push
xor
or
pushl
cmp
into
inc
push
jno
jo
lock
inc
adc
data16
sti
cmp
jo
std
add
pop
mov
mov
andb
jb
outsl
add
imul
jl
push
push
in
inc
add
sbb
push
sub
repnz
xor
and
in
cmpsl
lds
push
insl
lock
mov
add
sbb
icebp
sub
mov
pop
jo
and
ljmp
xor
xor
push
sbb
cmp
cmpsb
pop
outsl
jae
sbb
dec
cwtl
outsl
jp
outsl
popa
fcomps
sub
cld
call
mov
adc
ss
in
add
fildl
mov
push
jecxz
push
lods
in
hlt
jge
xchg
mov
sub
push
lret
scas
imul
adc
nop
and
loope
xor
cmp
lods
cmp
xchg
jo
ljmp
or
push
jo
mov
cmpsl
fisttpl
sub
cld
jo
sbb
push
adc
cmp
jmp
nop
mov
xor
rolb
sti
adc
insl
dec
cmpsb
dec
push
cmpsl
popf
xchg
test
add
jo
pop
push
cmp
mov
sarl
jo
mov
push
pop
lahf
imulb
pusha
jp
sbb
cmpsl
jge
mov
jo
push
or
add
lahf
xchg
push
in
jo
pop
sbb
pop
loop
inc
mov
pop
push
or
cmp
add
fwait
cmp
adcl
outsb
pop
xor
adc
sbb
mov
mov
cmp
pop
cmc
ss
fs
mov
stos
insw
cwtl
jle
sbb
cmp
jo
movsb
cmp
leave
push
jo
fcmovu
sub
cmp
ja
dec
cli
andb
int
mov
outsb
xchg
pushf
in
sahf
cmpsl
mov
stc
test
jbe
pop
mov
fcompl
jge
add
adc
fstl
insb
dec
jo
push
test
popf
adc
xchg
push
or
cmp
cmp
jno
popf
enter
fdivs
jo
push
nop
jne
lret
jo
or
inc
pop
loopne
fldcw
mov
fcmovne
adc
or
mov
mov
mov
outsb
mov
int
or
xchg
xchg
cmp
pop
jge
pusha
leave
movsw
mov
add
adc
or
xchg
ljmp
mov
popa
stos
or
decl
xorl
cmc
cwtl
xchg
mov
sbb
or
xor
cmp
inc
fiadds
out
aaa
inc
sbb
lods
addl
fstpt
das
sub
sub
test
inc
in
jle
pop
adc
mov
loop
adcb
mov
xor
and
gs
lcall
adc
xor
inc
or
push
add
repnz
adc
es
mov
insb
xchg
push
jp
jne
ljmp
pop
adc
cmp
sub
sub
in
cmpsb
push
lods
mov
jo
dec
inc
popf
test
lahf
das
pop
jo
lea
imul
pusha
adc
shl
scas
push
cli
jo
andl
cmp
push
mov
xor
and
int3
ret
imull
mov
ds
fdivs
jae
push
int
cmpsb
jo
dec
shlb
or
jge
add
daa
cmp
call
inc
icebp
lods
sbb
xchg
pop
aam
push
push
jo
mov
lret
or
or
xchg
lcall
mov
cmp
dec
fwait
lret
dec
out
imul
jae
test
loop
aad
movsl
cmp
popa
xchg
jg
mov
inc
or
cmp
jo
fxam
sbb
jo
mov
roll
mov
loop
fsubrl
xor
xchg
mov
jo
sahf
imul
jo
stc
pop
xchg
ss
mov
lods
add
or
jo
mov
adcl
stos
jge
outsb
cmp
jo
hlt
in
andb
ja
sub
or
jo
sbb
mov
repnz
jo
cli
adc
and
mov
insl
push
fldcw
outsb
fidivl
mov
pop
dec
jo
stos
mov
or
pop
xchg
pop
xchg
aam
clc
stos
jo
arpl
sbbb
and
lock
and
dec
jne
jge,pt
push
mov
lcall
sbb
das
jbe
push
mov
pop
dec
sti
jne
popf
push
cmp
inc
xchg
in
mov
jmp
xchg
ret
addr16
insl
or
sub
movsb
mov
or
pusha
mov
ds
dec
add
fsubrs
mov
test
jo
outsl
std
mov
outsb
repz
and
mov
jo
popf
sahf
insb
xor
call
lock
ret
pshufw
aad
jo
mov
enter
mov
movsl
out
jae
insb
mulb
pop
sub
push
pop
insl
push
dec
iret
addl
xchg
inc
adc
out
xchg
bound
push
cmpl
or
adc
adc
test
cmpl
fsubrs
imul
arpl
mov
jp
aas
iret
push
xchg
xchg
pavgb
xor
sbbl
clc
add
divb
cmp
lods
jo
mov
jecxz
jp
xor
push
sub
inc
push
data16
cltd
xchg
sub
stc
lahf
in
xorb
jo
scas
jl
mov
fcomps
jo
fbld
jge
cmpsl
int
jae
push
jg
mov
nop
ds
jo
int
pop
xor
ficomps
sahf
jo
jle
idivb
xor
stc
or
aad
jnp
shll
dec
dec
test
lock
jecxz
mov
or
int3
lock
inc
pop
fcom
mov
jo
adc
add
and
inc
jb
loopne
loop
lock
orl
push
out
xor
cmp
or
lock
enter
loopne
into
jae
push
xchg
ficoms
mov
imul
xor
js
push
lret
sbb
jo
jecxz
inc
pop
fildll
push
dec
jne
xorl
xor
dec
cmp
insb
mov
inc
mov
fsub
les
inc
xor
scas
ja
xchg
push
mov
shl
cmp
mov
mov
push
fnclex
jo
sbb
mov
jo
loope
xchg
jnp
jo
js
adc
xchg
mov
push
test
cmp
jo
mov
and
ret
addr16
add
cwtl
fxch
jo
push
xchg
jecxz
push
add
stos
imul
dec
jo
inc
xchg
data16
stos
rolb
insl
adc
mov
sarb
jo
and
xor
pop
cld
mov
pop
dec
int3
mov
flds
insb
dec
ja
mov
movsb
pop
mov
lock
pop
xor
aam
lds
movsl
in
shrb
and
outsb
cli
or
repz
sbb
xchg
sub
addr16
stc
sub
mov
and
xchg
test
jo
dec
inc
in
jecxz
adc
jo
outsl
pop
push
pop
pop
or
ret
pusha
xor
fs
aad
adc
dec
add
shr
xor
jo
das
add
lcall
mov
mov
and
mov
jo
out
mov
nop
xchg
xchg
lret
into
ret
xor
fs
hlt
or
mov
jle
jo
leave
lret
out
jl
lods
jb
aaa
jno
sbb
dec
and
mov
sub
loop
pop
pop
push
xor
pop
movsl
rclw
dec
mov
mov
mov
adc
cwtl
sub
fldenv
sbb
or
bound
imul
cltd
mov
aad
mov
dec
popf
nop
lock
xchg
cwtl
jo
out
and
mov
fidivs
sbbb
mov
xor
pop
pop
in
nop
xor
jo
push
and
jno
shll
pop
call
jo
int3
aas
lds
outsl
fidivl
lret
inc
push
mov
aam
jo
loopne
fstps
push
jo
cmp
mov
sub
repz
repnz
jo
xchg
pop
mov
and
jo
sub
aad
mov
std
mov
movsl
xchg
mov
fists
mov
sub
repnz
lods
pop
or
insl
pop
loopne
sti
lods
out
cmc
idiv
push
and
loope
push
inc
mov
enter
imul
or
jbe
scas
or
shrb
add
inc
mov
jo
lret
imul
sbb
adc
push
mov
out
mov
push
adc
lahf
fldt
pop
jo
aam
push
insl
ljmp
adc
jg
pushf
sub
mov
inc
rclb
push
mov
xlat
negl
cli
jne
sbb
cmc
add
mov
jo
add
pop
cwtl
add
sbb
addl
sbb
or
mov
mov
fcmovnu
xor
push
adc
fisubrl
scas
ret
mov
lret
jo
sbb
jae
shll
std
int3
pop
fidivl
pop
mov
sbb
daa
push
push
mov
sub
jo
imul
icebp
jmp
aad
fcompl
frstor
mov
add
out
lock
mov
pop
add
adc
pop
push
jae
and
movsb
mov
jo
mov
pusha
add
push
mov
clc
repz
fidivrl
ss
and
push
xchg
push
lock
subb
aaa
or
jo
ljmp
outsb
cmp
and
sar
mov
sub
sub
test
mov
in
or
jg
cmp
xchg
mov
xchg
cmp
std
movl
pop
dec
xor
test
int3
ja
xor
inc
insb
imul
mov
sti
push
jg
mov
push
and
adc
jo
mov
cmp
push
fdivl
push
cwtl
add
aad
mov
rcrb
leave
xorl
je
jg
xlat
lret
add
and
and
popf
stc
jo
jae
popa
or
rorl
jo
mov
xor
scas
pop
xchg
jo
mov
cwtl
fnstsw
cmp
mov
testb
ljmp
fidivrl
fstl
jo
fnop
xchg
jmp
jo
fsubrl
cmp
outsb
pop
test
pop
pop
addb
fs
mov
jo
movsb
cli
lea
or
adc
or
adc
inc
sub
mov
add
xchg
ja
xorb
imul
push
xchg
fisttpll
dec
add
jo
insb
jno
aad
xor
dec
scas
stos
xor
lcall
mov
shlb
loope
xchg
cmp
icebp
jo
outsb
imul
mov
mov
or
push
rcll
mov
outsb
mov
mov
mov
inc
jl
faddl
gs
mov
out
cmp
fcmovb
je
and
jns
mov
mov
cmp
cld
lea
jo
jge
mov
pop
out
lret
jo
push
or
sub
ja
or
outsb
cmpsb
sbb
cmpsl
jo
out
ret
mov
test
xchg
cmp
ja
ss
or
dec
xchg
or
leave
or
cli
jo
mov
not
je
and
xchg
cs
or
ret
and
mov
or
ja
andl
outsb
js
repz
xor
std
subb
jg
add
sbb
xchg
xchg
or
jo
sbb
mov
shrl
imulb
lock
orb
popa
cmp
jo
push
xlat
xor
adc
add
repz
loopne
jae
jle
ja
xchg
jp,pt
jo
roll
call
xor
pop
and
jo
insl
push
cmp
roll
jo
or
jns
dec
mov
cmp
xor
jge
xor
imul
nop
out
stos
lcall
adcb
in
outsb
repz
mov
adc
jo
sub
sbb
pop
sub
sbb
xor
nop
adc
inc
test
sbb
je
stc
jo
mov
push
jo
xchg
and
lret
outsb
cmp
bound
nop
xor
outsl
pop
dec
into
cld
xchg
pop
and
in
jo
icebp
fxch
mov
rol
adc
insl
xor
fisttpl
xchg
mov
nop
jmp
scas
jo
mov
xor
cmp
mov
icebp
iret
test
jo
cmp
enter
stc
jo
pop
subb
mov
es
cmp
mov
hlt
into
data16
mov
dec
sbb
push
ss
xchg
push
daa
mov
jbe,pn
sub
hlt
addr16
in
cld
xlat
addr16
cs
lods
jo
lods
cmpsl
bound
jle
jo
fidivl
jmp
jbe
scas
mov
pop
jecxz
je
cmpl
rcrl
cmp
mov
xorb
fiaddl
xlat
lcall
xchg
outsb
incl
xor
lret
loopne
icebp
jl
pop
inc
add
jo
jno
push
inc
fbstp
jmp
dec
mov
sub
jno
xchg
in
sbb
fdivrl
int3
push
push
imul
jo
pop
lods
xlat
mov
cmp
jecxz
cwtl
fnstcw
or
test
push
add
addr16
int3
jo
xchg
aas
jo
and
sbb
out
adc
and
sub
sbbl
std
adc
mov
jo
das
add
mov
cmp
cmp
popa
cmp
jo
add
sahf
fimull
sub
pop
jo
add
jo
popf
lea
jno
cmp
jbe
pop
push
mov
or
add
sub
fnstcw
push
in
mov
cmc
add
dec
aaa
lock
into
dec
testw
or
lock
pop
push
add
repz
push
push
push
fwait
or
jo
mov
mov
daa
fs
mov
cmpsb
rcl
push
push
inc
jo
je
mov
inc
xor
push
sub
jae
filds
cmpl
insl
es
xchg
in
adc
jo
pop
out
xor
jne
mov
adc
mov
ftst
adc
je
outsb
inc
pop
imul
test
xorl
add
jecxz
sarb
jb
mov
mov
pop
aad
xchg
push
and
dec
sti
jecxz
insb
jo
cmpsb
fs
mov
test
pop
pop
mov
pop
add
stc
imul
adc
in
sub
imul
inc
xor
jmp
mov
nop
push
in
lock
jo
arpl
mov
sbb
mov
aad
or
push
xchg
call
addr16
pop
pop
idivl
ror
cmp
pushf
jo,pt
xlat
out
jne
jo
jle
push
iret
push
and
cmp
mov
xchg
jo
icebp
or
div
out
jo
inc
sub
dec
mov
mov
imul
jge
push
or
and
mov
xchg
adc
popf
je
sub
std
push
mov
cmp
jo
loop
cmpsl
mov
jo
je
sbb
mov
mov
andb
mov
pop
or
cwtl
daa
out
ja
or
aad
cwtl
jae
pop
jns
pop
leave
mov
data16
rcrb
loopne
lds
and
test
pop
jo
cmpsb
adc
cmpsl
cmp
push
or
jo
lret
pop
mov
xchg
pop
jo
stc
mov
les
push
inc
push
jmp
xlat
xchg
adc
mov
ja
add
add
test
inc
mov
lods
in
inc
outsb
pop
lret
jo
repz
jo
repnz
in
adc
shrl
mov
aaa
xchg
inc
dec
jo
imul
lods
mov
pop
add
outsl
sub
bound
aas
jmp
push
dec
sub
out
fldcw
mov
fidivl
ljmp
cmp
in
int3
insl
jmp
mov
inc
xchg
push
inc
sbb
inc
pop
inc
jo
sbb
lret
pop
xor
mov
dec
ja
push
shlb
mov
adc
push
fsub
or
pop
flds
add
adc
mov
pop
mov
dec
push
sub
jne
mov
mov
xorb
mul
clc
sub
fldt
cs
or
fdivs
push
jle
ret
lock
movsl
mov
cmpsb
jnp
push
jbe
xchg
mov
xchg
lods
in
or
jo
ss
sub
jbe
mov
jne
imul
mov
dec
mov
popl
scas
cwtl
jo
and
ljmp
icebp
jecxz
out
jnp
pusha
lods
mov
loopne
dec
sahf
jo
dec
pop
push
mov
mov
inc
jo
jmp
std
xchg
push
fisttps
dec
divb
pushf
inc
es
dec
cmpsl
aaa
pop
pop
scas
insb
jo
push
jmp
push
xor
jo
popf
inc
xchg
ret
push
pop
in
pop
jo
mov
jo
mov
push
insl
mov
jo
sub
aad
outsb
ja
mov
sahf
stc
lock
xchg
jp
scas
out
test
cmp
mov
inc
mov
push
lea
push
add
jge
jb
aad
dec
pop
cmp
stc
in
ds
imul
mov
xor
je
dec
in
loop
imul
cmp
jbe
pop
or
sbb
pushf
imul
cltd
inc
xor
mov
xchg
movsl
pop
jo
test
mov
jae
xlat
pop
sub
pusha
mov
mov
sbbb
fwait
add
dec
shlb
push
push
jne
mov
lds
jge
shlb
outsb
shl
je
and
xlat
jae
pop
enter
fidivrs
fisttpl
addr16
fbstp
push
mov
adc
loopne
sub
call
mov
dec
popa
mov
sti
cmp
jo
mov
cltd
jg
shll
pushf
mov
jo
jbe
mov
outsb
cmp
or
adc
mov
add
jo
out
dec
sbb
push
jg
mov
lret
fcompl
inc
push
shlb
je
cmpsb
sbb
sbb
fdivs
lds
adc
out
jo
xchg
mov
adc
shrb
call
xor
outsb
cmp
push
mov
cmp
pop
fcmovb
ret
jge
xor
pop
jo
inc
and
repnz
int
out
icebp
dec
fcoml
pop
cmp
scas
jo
mov
jno
in
jo
xchg
inc
js
loope
xor
imul
imul
lret
xchg
xlat
fsts
insl
ja
dec
out
sub
sbb
daa
int
pop
pop
in
cmp
jp
ficomps
lock
mov
add
imul
out
jl
sbb
xchg
cltd
mov
jo
mov
insb
inc
in
push
dec
jo
js
jge
push
ljmp
lcall
pusha
outsl
repz
mov
mov
outsb
push
push
inc
lahf
dec
pop
xchg
lock
movsl
out
out
scas
jo
cld
notb
lret
jp
inc
push
in
sbb
cs
cmc
icebp
data16
sub
xchg
sbb
scas
test
inc
mov
jo
pop
mov
cwtl
jo
cmp
sti
push
leave
out
jo
insl
sub
lods
jnp
mov
jo
cmp
nop
jo,pn
jmp
stc
int
das
push
insl
mov
mov
add
cmp
jp
push
mov
add
in
mov
xchg
pop
jmp
jo
push
ficomps
out
jo
fstps
outsb
dec
mov
pushf
lahf
dec
imul
js
shl
mov
bndstx
and
pop
test
repnz
push
jecxz
jl
aad
fisubl
mov
jns
lock
out
fisubs
and
inc
push
cmp
add
hlt
mov
aad
dec
mov
lock
lock
mov
cmpb
jo
inc
aaa
gs
cli
xchg
push
jo
aad
leave
fcmovnbe
inc
pop
jo
scas
int
out
pop
dec
jo
jb
push
aam
jae
jo
or
sbb
push
jo
dec
rcr
into
inc
repz
aam
ljmp
mov
mov
cmpsb
scas
adc
push
test
clc
mov
xchg
outsb
jae
aaa
andl
gs
adc
std
or
pop
pop
dec
xor
sub
arpl
out
jbe
add
in
hlt
test
insl
fwait
addr16
mov
movsb
int3
jns
pop
out
pop
leave
jo
aaa
add
cld
lods
loopne
dec
lds
popf
jge
inc
faddl
cmpsb
iret
ja
je
outsb
add
cli
popf
adc
out
test
pop
or
jl
mov
sbb
dec
push
jnp
fisttpl
adc
jae
mov
mov
test
and
jo
add
sub
out
jo
pop
mov
jo
cs
cmc
mov
and
or
mov
pop
les
xchg
jo
inc
mov
and
add
popf
add
xor
nop
push
jo
adc
push
popa
insl
cmp
ss
out
cwtl
or
loopne
aad
mov
mov
idivb
jmp
inc
add
push
and
jge
jle
jo
xor
shll
push
xchg
mov
fwait
ret
jo
aaa
aad
std
mov
shlb
shrl
lods
jb
add
bound
adcl
pshufw
sub
xchg
pushf
sahf
jo
aad
dec
adc
lahf
lock
fisubrs
loopne
sti
mov
xchg
mov
fldcw
mov
and
and
mov
adc
movhps
xchg
data16
jle
xor
xorb
or
jo
nop
xor
lret
pop
jo
stc
dec
mov
loop
ja
adc
lahf
mov
or
fnop
icebp
gs
and
jo
mov
mov
push
jo
leave
popf
cmp
icebp
lret
out
jb
xchg
psubq
jo
pop
pop
cwtl
dec
flds
insl
jmp
sbb
xchg
in
sub
clc
sub
pop
mov
dec
scas
jo
mov
movsb
fwait
sub
lahf
jae
lock
xchg
out
aad
es
mov
adc
jo
inc
test
sbb
arpl
loopne
js
sti
add
lock
jmp
cmp
stos
adc
dec
adc
sub
bound
or
add
lock
es
mov
outsl
jle
mov
dec
aas
xchg
jne
mov
loop
test
movsb
cmc
enter
mov
lahf
jecxz
fisttpll
jo
adc
inc
arpl
jbe
jne
js
mov
adc
adc
jge
cli
xor
and
je
add
inc
jo
jnp
addb
jo
cmp
adc
fsts
adc
pop
jno
push
push
lret
mov
test
pop
push
jl
xchg
std
mov
fstps
pop
lock
ror
sti
push
inc
std
stos
jo
pop
fisubl
add
subl
enter
jo
into
pop
shlb
fwait
dec
adcl
arpl
pop
push
jbe
push
fwait
jo
or
les
dec
cs
adc
repz
shll
mov
jg
inc
xchg
jae
out
add
jae
sahf
scas
adc
lahf
jo
pop
sub
fnstsw
ret
enter
mov
sbb
mov
xchg
in
hlt
jl
jns
jo
cmpsb
cmpl
jo
into
fcomp
cmpsl
push
mov
push
cmp
mov
test
or
sbb
in
shlb
jb
dec
hlt
les
lock
push
and
or
fidivs
push
pop
in
lahf
leave
jmp
push
fistl
inc
insl
sbb
push
lret
insl
bound
xor
mov
lock
loopne
lahf
jo
jl
pusha
dec
cmp
adc
in
les
inc
test
rorb
xchg
sub
and
add
fcmovnbe
test
cli
inc
jo
femms
ds
cmp
sbb
push
xor
out
and
inc
jecxz
lock
xchg
lea
cmp
cmpsb
adc
cmp
xor
mov
mov
xchg
push
mov
flds
push
cmp
xchg
stc
shll
call
pop
popa
mov
divl
lock
inc
jo
stos
mov
loop
rcrb
push
sar
and
jo
push
jecxz
pusha
push
pop
cmc
jo
dec
dec
inc
lret
jl
jg
adc
cs
jae
jno
cmpsb
lock
loope
ja
pop
add
fs
add
jne
sub
jbe
scas
cmp
int3
pop
divl
sbbl
xchg
test
xchg
add
mov
test
imul
mov
sbb
test
into
dec
test
popa
lea
bnd
push
pop
das
jp
call
jo
sti
sub
jo
inc
add
fisubl
mov
insl
dec
pop
icebp
sbb
lods
inc
inc
jne
jae
movsl
sub
mov
cwtl
pop
and
jnp
xor
mov
xchg
shlb
iret
call
mov
rcrb
pop
popf
rcr
sbb
or
loop
mov
mov
dec
pop
and
lock
mov
jo
outsl
and
jo
fdivs
aad
repz
imul
cli
mov
lea
mov
mov
xor
and
int
mov
mov
ds
sbb
pop
jo
movsl
test
xlat
xor
popa
outsb
pusha
sub
fnstsw
nop
and
das
add
int
rorl
insl
mov
mov
fdivrl
pop
fisttps
adc
push
push
xor
add
movsl
rorl
mov
std
aas
leave
or
vminpd
fisttps
in
jmp
push
cmp
imul
out
xor
in
mov
push
inc
jns
adc
aaa
dec
lods
iret
lock
std
mov
rcll
cmp
lahf
mov
jo
lds
fwait
or
lret
ret
pop
insl
stos
mov
mov
mov
pusha
dec
inc
ret
lock
stos
add
fcmovnbe
jo
cs
mov
jo
mov
lcall
mov
adc
mov
push
lahf
popa
pop
push
out
jno
add
in
in
rcrl
pop
test
pop
or
testb
loop
sbb
in
jo
pushf
cld
dec
xchg
ja
mov
cmp
pusha
lret
outsl
pop
xchg
cmp
popf
in
xchg
jbe
fisubrs
push
ja
adc
and
mov
mov
idivb
jo
daa
into
push
aad
jo
inc
adc
in
jo
push
arpl
imul
enter
lret
call
inc
mov
mov
push
push
notb
loopne
insl
scas
lret
sbb
loop
icebp
in
test
data16
rclb
jbe
lea
lods
aad
mov
xor
xor
jo
pop
xchg
pop
cmp
out
push
outsb
frstor
outsl
movb
aas
out
jbe
sub
cmp
imul
mov
jo
aad
and
outsb
scas
push
push
cmpsb
es
lock
cwtl
xchg
xor
dec
testl
jmp
outsb
lds
mov
mov
jo
lret
sbb
scas
bound
stc
jge
adcb
push
incl
jo
and
in
sub
add
lds
lock
je
inc
or
jo
mov
push
sti
je
repz
mov
mov
pop
xchg
jae
popf
lret
fwait
xlat
inc
pushf
pop
mov
and
push
movsl
or
sub
scas
sub
push
stos
pop
inc
out
cmpsb
push
xchg
jecxz
and
jo
and
jo
mov
cli
inc
jo
push
xchg
imul
jmp
dec
push
sbb
fstpt
popf
xlat
add
dec
aad
insl
cmp
in
cld
pop
xchg
rolb
inc
aas
pop
pop
dec
lock
loope
sub
push
and
or
int
out
fnstenv
enter
jno
jp
leave
dec
mov
jecxz
outsl
jo
dec
fnstenv
push
cmp
lock
fbld
dec
in
aad
and
adc
insb
call
adc
popf
lods
xchg
sbb
mov
ret
add
mov
jmp
aam
repz
iret
sub
ret
dec
aad
dec
out
test
stc
cld
mov
jno
pop
inc
cmc
and
ret
aad
pop
jo
pop
or
jnp
cmp
movsb
mov
xchg
mov
xor
pop
push
jo
push
out
aad
test
jnp
mov
mov
sbb
pop
icebp
add
push
xor
xchg
scas
or
jo
and
adc
jo
jne
ds
xchg
add
stc
xchg
lcall
sub
jge
adc
sub
lret
inc
mov
insl
add
sbbb
fdivl
mov
cmp
or
jns
insl
pop
pop
movsb
push
mov
ret
cmpsl
push
cmp
mov
fwait
cmp
loope
inc
xchg
or
add
fdiv
xchg
mov
pop
xchg
mov
je
ret
adc
loope
mov
arpl
outsb
cli
dec
push
nop
in
jo
scas
or
push
mov
mul
jo
sub
xor
or
mov
sub
lret
shl
mov
mov
adcb
adc
loopne
dec
nop
mov
call
jnp
xor
out
add
fmuls
or
ljmp
pop
rcr
test
push
add
daa
jo
push
int3
jno
push
pop
sbb
mov
inc
in
ja
ja
popa
repz
jp
aas
jo
fdivl
ljmp
xor
jl,pn
xchg
cli
add
js
jp
dec
ja
mov
in
jo
lds
sbb
lods
outsb
lea
xor
mov
jo
xor
flds
push
nop
inc
sub
and
jo
sbb
pusha
mov
call
fbstp
cmp
push
mov
push
dec
jne
or
jmp
rcrb
dec
hlt
push
lea
dec
pop
dec
insl
js
leave
mov
add
aas
andl
jne
cs
fdivl
cli
ret
xchg
jae
sbb
lock
mov
pop
xchg
rcrb
mov
fildl
pop
jl
mov
shlb
pop
mov
jle
and
test
xchg
lock
loopne
inc
add
pop
add
hlt
mov
jo
mov
fdivrl
xorl
mov
sbb
or
dec
mov
jae
outsb
jo
fisttpl
pop
jo
push
enter
adcl
cmp
dec
xchg
mov
fdivl
mov
or
jo
push
cmp
push
xor
decb
and
jo
ret
popf
shl
sbb
mov
xchg
add
clc
push
lea
xchg
jp
xchg
add
jo
fmuls
stc
pop
dec
jle
dec
sbb
loopne
jne
js
or
inc
lds
rcr
ss
std
xchg
jo
sarb
or
xlat
jo
fiaddl
popf
inc
mov
mov
adc
lahf
push
iret
lret
dec
mov
push
insb
into
xor
add
fistpl
mov
or
jo
cmp
mov
pop
into
lahf
loope
jo
loop
cmpsl
push
fimuls
orl
jb
mov
mov
sbb
mov
add
and
lcall
jo
mov
mov
icebp
lcall
mov
rorl
roll
add
mov
jmp
mov
inc
inc
jo
inc
dec
sti
rep
jmp
daa
jo
in
outsb
jbe
mov
lock
dec
out
ficoms
icebp
fisttps
push
jo
sub
push
sbb
xchg
push
add
and
sbb
sbb
mov
mov
jo
gs
fldenv
pop
ja
pop
dec
adc
loop
mov
push
sbb
scas
imul
aaa
faddp
fsubrl
or
push
loope
or
jo
dec
mov
jb
cmc
xchg
dec
xchg
cmp
ficoms
mov
mov
sub
add
rorb
sbb
je
lods
add
ror
cmp
enter
call
std
fnsave
out
dec
mov
loope
lods
mov
test
dec
stos
pushf
jo
pop
sub
mov
sub
rcrl
aad
arpl
dec
inc
jle
jo
out
insw
rcl
jo
inc
out
fmull
fs
mov
add
jle
jp
test
mov
or
std
imull
into
lock
lea
inc
push
fidivs
xchg
xlat
jo
jle
fnstsw
xorb
jae
icebp
sbb
fcmovne
cs
cli
adc
jo
inc
mov
xor
test
pusha
jb
enter
xor
es
jo
aam
test
iret
add
pop
pop
mov
cmc
adc
ret
inc
and
insb
jo
cmpsb
sbb
stos
outsl
and
pop
jnp
pop
fnstenv
loop
into
cmc
in
sahf
in
jbe
shrl
addr16
xchg
pop
xchg
jae
mov
sbb
imul
dec
je
jae
cli
push
jns
mov
sbb
stc
lock
jo
lcall
jo
js
push
ret
outsb
dec
or
inc
mov
jmp
popa
xor
int3
ss
or
jo
pop
outsl
sub
jne
adc
adc
dec
jo
sahf
xchg
jge
test
fnstenv
push
mov
stc
pushf
shll
xchg
fnstenv
int
lea
int3
jo
test
aas
enter
sub
inc
add
sub
insl
test
movsl
xlat
xchg
nop
dec
jo
notl
push
aam
fwait
dec
jo
in
mov
mov
aad
jo
sbb
pop
addr16
fldenv
fwait
sbb
inc
jo
insl
scas
inc
inc
faddl
inc
jo
adc
xchg
xor
cmp
pop
jo
outsb
xlat
shrl
inc
push
fwait
sbb
and
or
pusha
mov
jo
add
jge
sar
pop
or
nop
bound
imul
xorb
and
ret
jb
sbb
lcall
mov
sub
mov
shll
imul
jo
loop
gs
fcmovb
mov
sbb
in
dec
jo
mov
divl
push
jecxz
mov
jo
lock
dec
xlat
push
lcall
ror
ljmp
lock
xlat
push
and
push
iret
fsts
mov
test
lock
loopne
bound
inc
in
xchg
xor
jo
int3
mov
push
dec
test
and
pop
and
inc
in
jae
xor
in
lock
imul
arpl
jmp
cld
lds
jo
int3
mov
pop
ja
xchg
inc
into
outsb
xchg
aas
fmull
add
mov
and
mov
hlt
add
and
jne
sbb
loopne
mov
aam
xchg
ljmp
xlat
cmpb
bnd
fcmovnbe
or
push
imul
push
aad
xchg
add
sub
jo
cmc
ss
cmp
or
cmp
adc
sub
nop
xlat
inc
mov
adc
dec
cmc
push
pop
in
out
bound
cmp
lret
flds
insb
std
and
jne
cmpsb
pop
movsb
std
xchg
pop
push
jo
fwait
outsl
xor
ret
xor
xchg
lds
add
lock
adc
cwtl
dec
dec
bound
repnz
loopne
and
jo
adc
fcmovb
cli
sbb
or
push
pop
jnp
addb
cmp
outsl
int3
shlb
mov
js
ja
dec
mov
rorl
nop
mov
pop
lahf
xchg
dec
jo
std
push
mov
jo
ret
dec
jle
inc
jo
dec
hlt
sbb
int
mov
iret
push
jge
mov
jo
insb
lcall
addl
pusha
ja
lahf
inc
or
das
jo
adc
es
adc
xor
mov
xor
pushf
jae
mov
cmp
nop
fs
insl
jns
adc
inc
icebp
inc
loopne
insl
jge
fisubl
mov
jo
pop
sbb
cli
mov
xchg
mov
outsb
fdivs
mov
scas
andb
out
cmp
cltd
push
pop
test
xlat
pop
lods
sub
mov
mov
popa
push
sbb
cmp
jo
and
sub
dec
xchg
cwtl
faddp
jge
xor
in
xchg
jo
sub
xchg
push
loop
xor
pop
jo
pop
inc
add
or
fdivl
adc
fcmovnbe
outsb
inc
jo
decl
fnstsw
jns
shl
jecxz
mov
or
cmp
mov
fld
lock
cmp
add
stc
jo
into
pop
aas
inc
rcrb
jnp
xchg
lock
mov
test
enter
jle
jo
mov
cld
push
mov
loop
out
mov
test
inc
daa
or
loope
mov
cltd
or
mov
push
inc
xor
jae
hlt
jl
shlb
pop
std
clc
xor
jo
jns
sub
push
cld
jge
sub
icebp
fsubl
popf
jb
lock
xchg
adc
inc
dec
fstpl
jo
test
aad
pop
inc
in
in
in
cmp
xchg
add
bound
xor
and
negb
cmp
shlb
mov
enter
fsubrl
icebp
dec
add
jno
jo
in
ds
gs
cmp
mov
mov
cmpsl
aas
xchg
test
jo
push
xchg
jo
xor
aad
add
outsl
fxch
insl
push
addr16
push
push
push
mov
outsb
fstpt
xchg
xlat
insl
push
fsubl
add
sbb
xchg
adc
idivb
mov
mov
or
aad
aas
icebp
jo
sub
jmp
mov
pop
fstpl
filds
stos
cmp
aad
jle
add
addb
inc
iret
mov
sub
push
jo
push
mov
aad
clc
cld
jo
out
sub
jo
loopne
adc
cli
fdivrl
jo
mov
std
loop
jo
and
sub
xchg
loope
mov
jo
popa
push
mov
cld
movsb
xor
fnstsw
mov
or
push
dec
insl
mov
cld
xor
jae
mov
addb
push
in
mov
lea
push
or
adc
fisttpl
xlat
pushf
test
loopne
mov
xchg
lcall
dec
mov
mov
jp
pop
adc
test
sbb
outsl
dec
dec
aas
dec
lock
in
mov
xor
mov
adc
fidivs
xor
std
hlt
pop
shlb
outsb
mov
test
aam
jo
lock
jle
adc
aad
imul
lret
shrl
in
sub
mov
pop
pop
lds
lock
jnp
fwait
out
or
addl
xchg
insb
add
jg
push
addr16
mov
out
jo
sbb
mov
push
mov
bound
call
inc
push
xor
lock
mov
jo
popa
cmp
dec
xor
push
out
icebp
out
rcr
pusha
mov
adc
fs
test
nop
fwait
push
repz
cmp
shll
xchg
jo
push
add
ret
fnstenv
fbld
add
addr16
enter
pop
sub
mov
dec
lret
cli
lret
arpl
mov
imul
aad
cmp
bound
jo
in
add
fsts
dec
mov
stos
ret
mov
shll
cmp
mov
xchg
jmp
mov
arpl
nop
mov
jo
and
pop
imul
mov
dec
and
xor
stc
jae
sbb
pop
jns
enter
insl
sbb
mov
lea
mov
mov
pushf
dec
sub
cs
fldt
rol
sub
out
jo
in
pop
xchg
push
cmpl
xor
in
iret
nop
aad
ret
jo
inc
inc
ss
xorb
xchg
fcomps
loopne
addb
xor
push
mov
jae
lahf
push
push
mov
jo
not
pop
inc
roll
mov
mov
jo
out
sbb
imul
lea
scas
xor
fnstenv
lret
sub
mov
jo
jne
push
aad
add
jo
daa
mov
mov
and
bound
cld
xchg
jo
cmp
sub
add
push
movsl
stos
and
les
inc
mov
jo
faddl
and
aad
jo
fnsave
aam
xchg
inc
je
test
pop
lock
sub
inc
jge
fildll
xchg
aaa
pop
adcb
pop
int3
ret
dec
jae
rcrl
xlat
xor
fisubrs
jo
add
mov
insl
mov
cmp
out
pop
clc
mov
jno
jp
add
push
xchg
dec
mov
and
xor
cmp
cmp
pop
jmp
inc
adcb
dec
push
xchg
aam
imul
jmp
test
cli
xchg
sbb
loop
pop
mov
jo
sub
dec
mov
xchg
pusha
js
lock
int3
in
jbe
data16
xor
stos
call
mov
cmc
outsb
pop
mov
repz
jmp
dec
jo
fdiv
aas
xchg
aaa
fnstenv
jo
sub
ret
jo
std
mov
jg
clc
shlb
mov
jne
jo
imul
jle
xor
xchg
lret
push
and
jo
in
inc
dec
test
adc
lock
add
mov
xor
xchg
adc
mov
outsb
into
push
fs
adc
fldenv
sahf
pop
pop
gs
cmc
pop
dec
into
push
ljmp
push
adc
xor
lock
lea
push
packssdw
jg
ss
mov
jmp
ljmp
rcrl
mov
or
mov
jo
push
add
pop
mov
sbb
daa
popa
stos
outsb
sub
iret
or
xor
outsl
jns
adc
lock
add
jo
clc
cltd
mov
xchg
ss
movsl
adc
shrl
pushf
sub
xchg
cmpl
mov
xchg
add
jo
pop
movsb
jno
std
push
cli
jo
sub
mov
cmp
inc
jnp
cmp
and
inc
mov
cmpsb
fcmovnb
push
and
adc
pop
sub
hlt
lock
adc
cwtl
ret
mov
out
aas
push
pop
std
xor
sub
sbb
cld
mov
das
int3
shll
dec
ja
jl
jg
rorb
sbbb
sub
call
mov
mov
out
jae
pop
mov
mov
orb
mov
mov
lea
aad
sub
and
push
jo
cli
adc
test
xor
xchg
xchg
push
jo
fstl
xchg
push
repz
sub
sub
and
jge
jo
stos
cli
js
xchg
hlt
insl
jecxz
addb
adc
ds
addr16
pop
jae
adc
pop
les
imul
pop
outsl
lds
rcrl
xor
cmpsl
and
sbb
lock
in
jo
dec
out
rorl
push
loopne
fwait
pushf
mov
pop
inc
lock
mov
cmp
sub
inc
jo
in
cmp
fistps
add
pop
jne
lods
add
sub
jo
das
jle
movl
push
or
movsb
cld
dec
lock
pop
mov
loopne
dec
push
je
outsb
arpl
and
test
sbb
cmpsl
sbb
xchg
sbb
out
enter
jo
or
fmull
addr16
scas
mov
ret
sub
outsl
add
jo
adc
dec
cmp
or
push
push
xor
jnp
xor
adc
pop
add
ss
and
pop
push
and
rclb
jo
lea
test
jbe
push
popa
fxch
sub
aaa
add
inc
mov
pop
das
leave
mov
pop
out
in
jo
mov
pop
shrb
adc
scas
cmc
push
sbb
xchg
mov
push
jo
mov
pop
shlb
mov
cmp
jo
sbb
dec
jo
inc
fstps
push
or
adc
shl
divb
mov
fstpt
outsl
fs
and
into
mov
int
mov
xchg
movsl
in
insb
dec
and
and
mov
sub
mov
sbb
mov
rol
cld
insb
add
jo
push
pop
test
jo
rcr
rcrb
shrl
mov
loop
pop
repz
frstor
in
ja
negb
xor
insl
mov
jo
leave
xor
jg
adc
ficoml
sbb
sti
jo
lds
lret
jo
mov
movl
insl
call
addr16
xchg
mov
jo
or
sbb
mov
movsb
fnstenv
and
shl
inc
mov
pop
mov
pop
xchg
mov
dec
iret
or
cwtl
in
outsb
jo
addl
mov
es
jb
je
push
je
cmp
pop
mov
sbb
aas
imul
jns
mov
jo
sbb
add
push
jl
mov
movsb
int3
or
leave
loop
mov
sbb
call
mov
test
arpl
ds
sub
ds
inc
lods
cmp
fucom
push
push
outsl
jo
cli
aas
xchg
push
push
mov
xor
xchg
dec
test
mov
adc
icebp
shr
sbb
jo
and
pop
pushf
xchg
ja
notb
subl
clc
lods
insl
push
out
loopne
lea
jo
aam
cmp
aad
enter
lock
movsl
mov
iret
mov
shll
jns
insl
sub
std
loope
cmp
jne
test
cmp
das
out
cmc
sahf
pop
shrl
in
clc
sbb
or
dec
mov
sub
fs
ljmp
nop
or
jnp
adc
fsubl
inc
mov
xor
fimuls
xor
into
sbb
add
pop
lock
add
adc
jns
jo
mov
jo
fimuls
sti
cmp
sub
testb
sbb
sbb
mov
addb
jo
cmp
pushf
sbb
jnp
aad
dec
test
jo
shrl
lahf
stos
leave
jo
int
xchg
or
ja
lock
adc
jno
ret
mov
dec
lods
cmc
jo
gs
fldenv
pop
bnd
adc
sarb
sub
or
xchg
stc
mov
xor
mov
add
sbb
aam
mov
add
int
push
adc
fstpt
pop
scas
jo
loop
jecxz
cmp
popf
leave
pop
fdivl
lds
jo
cwtl
adc
mov
adc
dec
lods
fdivl
push
fildl
jo
inc
mov
int3
test
jle
jo
push
mov
cmc
scas
jb
lcall
stos
jmp
fadds
jp
or
mov
fildll
jo
jbe
pop
fisubrl
lahf
and
lock
mov
jo
mov
mov
xor
pop
icebp
insl
inc
xor
and
xchg
popf
sub
dec
flds
data16
jp
pusha
lds
shll
fdivrl
mov
jb
lods
lods
jo
add
jl
les
jo
adc
fbstp
mov
popf
jo
jbe
ja
push
push
insb
jo
daa
jne
in
faddp
call
cmpsl
fstpt
nop
loopne
pop
push
movsl
pop
rclb
jo
xchg
inc
insl
aam
pop
xor
push
inc
mov
jo
das
je
ficoml
rol
jmp
andb
cmc
cmp
mov
xchg
insb
pusha
je
jnp
adcb
imull
pop
or
nop
icebp
xchg
jo
pushf
fnstenv
scas
jns
cmc
insl
fsubrp
mov
or
jo
mov
sahf
sub
adcb
push
mov
jne,pt
mov
xchg
insb
pop
icebp
pop
jae
jo
or
push
movsb
pop
fwait
imul
pop
mov
adc
hlt
andb
jmp
imul
pop
lret
mov
cwtl
lock
cmp
xchg
sarb
adc
hlt
popa
out
out
imull
outsl
jae
decb
ja
xor
mov
lds
lock
shlb
outsl
lods
insb
mov
mov
add
mov
jbe
mov
xchg
movsl
xor
sbb
push
leave
outsb
in
jle
mov
nop
xor
and
imul
xorl
xor
dec
fs
jno
int3
xchg
out
lock
into
in
inc
jo
mov
xchg
sub
push
jno
cmp
test
inc
rcpps
jg
xor
jo
fsts
pop
mov
insb
jo
inc
cmp
jo
cltd
inc
div
aam
ret
out
pop
jo
and
adc
and
mov
sub
pop
xorb
push
fs
cmp
fldlg2
je
xchg
and
pop
xchg
dec
je
sub
faddl
test
cld
loope
ret
fisubl
jae
push
dec
cmp
jmp
cmpsb
jmp
idivl
push
jo
push
inc
ja
and
adc
into
sub
jo
enter
mov
roll
jo
inc
mov
mov
fidivrs
add
mov
mov
aad
or
lea
out
jo
sbb
adc
lock
addr16
movsb
xlat
adc
insb
sahf
mov
test
dec
pop
into
lock
mov
or
jae
mov
frstpm(287
popa
lock
jecxz
adcb
loop
adc
fsubr
push
dec
movl
aam
insl
out
cs
xor
popa
xlat
insl
sbb
rolb
nop
pushf
insl
push
cltd
pop
cmc
fcoms
test
jo
pop
shl
mov
inc
iret
mov
je
push
shlb
mov
ljmp
inc
adc
pop
in
imul
out
jl
negb
xchg
pop
dec
jae
addb
aam
mov
and
or
mov
pushl
or
enter
cmp
icebp
jmp
dec
fxch
push
sar
push
daa
pop
mov
test
insb
sub
jo
cs
lds
mov
jo
sbb
out
pop
adc
pop
push
cs
push
xlat
inc
xor
stc
mov
sub
icebp
xor
shrl
sbb
cmpb
sub
outsb
sarl
jae
mov
mov
mov
xor
bound
arpl
lods
xlat
jo
aaa
cmp
inc
jo
adc
xchg
pop
daa
es
shl
pop
bound
xchg
inc
lock
xor
adc
jo
int3
insb
f2xm1
lcall
pushf
insl
lock
cmpsl
sti
jo
notb
aad
cs
lods
arpl
dec
jo
mov
pushf
push
jo
push
adcl
dec
inc
es
jo
outsb
enter
sbb
enter
rolb
stc
mov
test
mov
pop
test
ds
inc
es
jecxz
add
or
call
cmpsl
aaa
dec
lock
sub
xchg
jo
lods
inc
stos
aad
cs
jo
dec
in
inc
cli
jns
das
jne
jo
sti
rorb
inc
jp
jo
add
sbb
movsb
aad
sub
into
test
xchg
mov
jo
mov
gs
and
jne
mov
repz
jmp
dec
outsl
insw
clc
inc
jmp
push
mov
sahf
pop
sarl
call
pop
cmp
add
sti
add
jle
jae
push
addr16
jo
fildl
jne
mov
std
pop
jo
mov
push
sub
ret
aad
shr
and
jo
js
mul
cs
mov
xor
inc
adc
into
or
pop
jg
aaa
adcl
cmp
mov
mov
mov
bound
mov
xor
and
test
jg
jae
std
dec
movsb
mov
jo
and
mov
dec
das
dec
insl
push
jge
cli
xor
imul
and
push
jb
mov
mov
add
rclb
jne
cwtl
mov
pop
jo
xchg
leave
loope
inc
test
jo
cmp
dec
std
sbb
or
sub
push
push
aaa
xchg
nop
jbe
add
jo
mov
mov
dec
add
bound
jb
lock
in
movsb
mov
mov
lcall
cwtl
xchg
mov
jo
cmpsl
repnz
fldenv
mov
mov
testb
hlt
xlat
insl
arpl
mov
fildll
out
jo
mov
sbb
jo
fdivr
cmpsb
aaa
push
dec
cmp
stc
lret
adc
shlb
xor
test
jo
mov
lret
sar
fisubrs
xor
push
dec
jmp
push
in
fwait
icebp
dec
sarl
jne
fdivl
fstps
call
insl
xchg
add
arpl
shrb
mov
aas
fimuls
xchg
jae
addr16
sbbb
loopne
pop
add
outsl
mov
ljmp
mov
push
sub
and
mov
fdivr
das
je
adc
push
xor
gs
in
rol
lahf
dec
out
insl
mov
jmp
adc
mov
lcall
mov
arpl
jo
adc
and
cmpsl
lods
jo
jp
sub
sbb
pshufw
lret
and
arpl
lds
shll
jo
mov
lea
arpl
and
loopne
cli
clc
dec
inc
cld
or
insl
cmc
cmp
ficoml
xchg
jnp
gs
or
pop
mov
cmpsb
fnstenv
outsb
das
sub
in
and
lret
insl
push
int3
jp
inc
adc
insb
out
das
shl
pop
push
mov
pop
xor
jno
out
inc
jns
loop
sbb
and
arpl
fidivl
repz
push
cmp
push
insl
repnz
sbb
pop
popf
insl
arpl
dec
or
loope,pn
and
and
dec
push
jo
ljmp
jo
flds
and
mov
aad
mov
jno
sub
cmpsl
sbb
in
std
aaa
jo
sti
add
out
jp
cmc
adc
mov
jo
sub
aaa
xor
dec
mov
jo
dec
cmpl
mov
xchg
decl
adc
inc
pop
pop
jo
rcll
mov
jo
notl
cli
aaa
sub
imul
jae
sbb
cmpb
lock
lret
pop
lea
jp
and
mov
outsl
mov
cmp
adc
int
jo
mov
mov
jae
mov
push
in
jo
or
push
enter
sub
jo
testl
mov
lods
je
jle
mov
jl
cmpsl
xchg
ss
rcrl
cmp
cld
jae
mov
imul
cmp
lock
jp
int3
test
clc
jno
sarl
mov
cmp
and
pop
and
push
jo
cmp
ljmp
push
cmp
jo
inc
mov
or
pushf
inc
push
push
stc
pop
arpl
push
std
xchg
jae
testb
ret
mov
push
sbb
push
push
jo
mov
loop
jae
mov
nop
shl
mov
mov
sub
int3
pop
push
ss
jo
cli
vmovdqu
jo
fnstsw
jge
xchg
sub
xchg
leave
insb
pop
adc
ret
inc
mov
mov
jmp
out
xor
mov
jo
mov
enter
jo
or
jb
pop
mov
adc
mov
lods
out
push
sub
insb
pop
cltd
adc
mov
mov
mov
cmpl
adc
jmp
lds
pop
lock
inc
push
xchg
ja
mulb
mov
adc
insb
insl
in
rcrl
inc
rol
ret
xor
mov
gs
cmpsb
test
xor
fs
inc
or
stos
rcl
jo
dec
add
fwait
leave
or
in
jno
and
aaa
inc
add
mov
shlb
jge
cmp
movsl
fwait
pop
cwtl
cmp
mov
pop
shll
and
lds
xchg
mov
lret
push
xlat
xor
movsl
xor
pop
lock
xchg
push
xorl
arpl
sub
add
pushf
cs
dec
fmuls
jo
or
lods
push
lcall
jns
mov
push
imul
jl
xchg
rclb
xchg
sarb
das
pop
lds
sbbb
jbe
icebp
sub
test
push
jo
pushf
je
xor
scas
jp
xchg
push
adc
mov
shlb
push
or
iret
imul
jo
lcall
jo
push
push
cmp
fldenv
mov
insb
ljmp
mov
pop
mov
icebp
mov
scas
scas
jae
xchg
mov
jbe
push
jo
es
dec
popa
jo
mov
push
enter
gs
mov
out
jae
sbbb
mov
inc
lock
sub
jo
cli
dec
lret
popa
fbstp
and
jp
loop
out
int
cmp
jne
aad
movsb
jo
sti
in
mov
sbb
adc
inc
lea
call
xchg
mov
test
pop
push
leave
fsubs
jo
repnz
cmc
in
gs
adc
cmp
stos
mov
imul
jo
repnz
add
pop
outsb
or
bound
pop
add
mov
or
push
cmp
lock
test
fdivp
je
in
inc
xchg
hlt
push
add
jle
lea
dec
cmp
jo
int
leave
cmp
jno
fadd
jge
jo
pop
sub
dec
jo
aad
mov
jmp
pop
hlt
jo
add
addb
jno
pop
push
outsb
inc
daa
sarb
test
add
cmp
dec
jecxz
sbb
mov
mov
shlb
fsubl
pop
sub
jo
add
and
cld
cmp
adc
adc
fistpl
push
xchg
lock
jnp
mov
lea
adc
clc
pushf
mov
push
dec
sbb
mov
mov
jo
push
cwtl
test
and
test
jae
push
in
and
jecxz
inc
imul
fdivrl
and
jp
fprem
adc
stc
mov
aaa
into
jge
fisubrl
jno
xor
mov
dec
or
lock
test
mov
push
sti
adc
sbb
pusha
imul
out
fst
xchg
jmp
ret
popa
ss
std
scas
and
mov
xchg
push
lock
loope
jae
data16
jbe
fldt
mov
imul
ljmp
icebp
jno
rcrl
fwait
pop
divb
or
mov
push
frstor
jl
jb
ficoms
mov
insl
test
or
jo
popf
dec
xor
and
fnstcw
lret
mov
jle
insl
push
xor
push
fwait
jae
hlt
data16
sub
movsb
xchg
bound
repnz
dec
icebp
push
rcl
jo
xorb
repz
pusha
jle
insl
call
pop
in
xor
je
xorl
xchg
mov
inc
ret
mov
xor
jg
push
fldt
dec
pop
or
rcl
mov
or
dec
jle
outsb
test
dec
nop
pop
loop
jae
dec
test
imul
insl
std
orb
inc
in
mov
jo
mov
ja
mov
arpl
popf
xchg
mov
add
in
jp
ljmp
call
mov
mov
notl
push
push
test
int
stos
inc
sahf
or
jo
std
xor
fcoml
ret
sbb
adc
mov
iret
dec
jno
lock
nop
adc
insl
pushf
adc
sub
scas
jo
mov
mov
bound
les
push
fmulp
xor
push
dec
mov
lock
adc
pop
ljmp
test
mov
cmp
ja
mov
gs
jo
xchg
jno
fisttps
jo
sti
nop
pop
or
hlt
test
lret
push
and
xchg
nop
jo
cli
add
jo
jle
test
aad
sub
push
inc
dec
cmp
jl
outsb
jns
adc
xchg
pop
pusha
movsb
arpl
sbb
add
int3
test
push
sbb
xchg
enter
lock
fdivrp
jo
lds
test
movsb
mov
aad
pop
xlat
insl
mov
jecxz
pushf
pop
sti
outsb
sub
cmpsl
out
fisttpl
mov
cmp
or
push
mov
mov
callw
mov
jo
mov
adc
inc
dec
je
fdivr
pop
ret
insl
scas
sub
divb
jo
mov
fldenv
push
add
cwtl
adc
jo
stc
shlb
xor
cmpsb
lods
rorl
sti
pop
ja
mov
add
push
or
or
fistpll
test
xor
jl
popa
jp
xchg
push
mov
jne
jmp
aas
outsb
and
mov
std
nop
jbe
push
ja
inc
aaa
mull
leave
lcall
cmpsb
jbe
insl
in
or
jo
popa
fwait
jl
and
push
imul
and
pop
test
inc
pop
ret
mov
outsb
stc
jecxz
xlat
mov
outsb
mov
xor
push
jae
movb
pushf
push
es
add
add
fadds
adc
xor
cmp
mov
jae
inc
pop
es
pop
ret
and
jne
scas
jp
mov
jo
pop
adc
sbb
addr16
xor
shlb
sar
add
imul
sbb
xor
push
or
aas
dec
es
roll
jo
aam
mov
lods
xchg
fsub
shll
mov
fdivs
jne
jo
ljmp
jbe
sbb
test
dec
xchg
push
nop
ds
pop
add
jecxz
jb
scas
test
std
push
mov
clc
jo
lods
cmc
and
out
popa
xorb
xchg
subl
lea
ja
hlt
negl
mov
arpl
push
divb
dec
jge
xor
jo
mov
jno
mov
pop
cwtl
fcomip
insl
mov
lock
sbbl
mov
jo
mov
popa
clc
shlb
shll
fnstenv
mov
pop
movsb
sbb
pop
pop
xchg
push
test
lds
mov
mov
xchg
push
xor
xchg
pop
cmp
xchg
pop
loop
push
jae
adcb
sete
jo
jnp
mov
pop
mov
cwtl
lock
push
cmc
outsb
gs
shr
rclb
es
pop
lret
jo
fmull
push
jnp
add
jo
dec
into
cwtl
inc
outsb
fnstcw
sbb
mov
loopne
jo
repz
pop
xor
sti
je
clc
lret
mov
inc
out
sbb
aad
fnstenv
shlb
js
xor
aaa
sbb
clc
fs
sbb
ja
xor
cmpsb
in
sahf
cmc
xchg
adc
arpl
test
pop
sbb
push
xchg
rcr
mov
fcoml
adc
push
jo
ljmp
jle
jo
xchg
loope
sbb
ja
xorb
in
hlt
loop
daa
mov
jo
lret
cwtl
test
dec
adc
lods
dec
sbb
cmpsl
add
mov
jo
mov
stos
aaa
pop
out
or
inc
ss
jo
or
fstps
jo
out
int
repz
pop
ja
jns
out
lea
cmp
push
inc
jo
xor
test
mov
mov
stc
inc
insl
push
push
movsl
cmp
mov
add
out
lret
subb
jmp
popf
adc
adc
inc
aas
xchg
sbb
pop
xchg
int3
add
or
inc
and
mov
scas
sbb
cld
nop
dec
push
mov
inc
mov
inc
jo
iret
test
insl
push
mov
aad
xlat
inc
xchg
jmp
xor
pushf
adc
push
gs
pop
adc
insb
mov
jae
pop
inc
pop
adc
or
bound
int
or
push
pop
dec
insl
pop
mov
in
not
xchg
pop
sub
jle
imul
sbb
jo
mov
dec
out
jo
xchg
fsubrs
mov
repz
std
outsb
mov
outsb
lock
or
jo
xor
jle
add
xchg
fldenv
imul
cli
sbb
xchg
outsl
scas
dec
mov
lock
movsl
mov
lret
cmpsb
addr16
lcall
insl
jge
sti
push
out
lods
push
iret
jmp
dec
lcall
scas
cmp
jmp
fdivl
add
shll
lds
or
dec
daa
adc
mov
or
sbb
lods
ja
push
sbb
pop
jne
and
dec
xchg
outsb
push
es
stos
jae
leave
les
adc
out
addr16
lcall
jo
dec
mov
inc
pop
ret
jo
mov
fcomp
add
adc
loope
leave
jg
dec
inc
test
aad
jge
dec
or
nop
cltd
hlt
scas
dec
das
push
cmp
xor
mov
or
mov
inc
and
adc
xlat
fneni(8087
movsb
and
sbb
add
adc
mov
push
loopne
xchg
testb
es
sbbl
dec
fadd
add
jnp
push
mov
or
int3
mov
ljmp
cmp
or
pop
jo
mov
pop
push
jae
mov
lock
inc
pop
shlb
push
inc
hlt
mov
popa
mov
jo
lods
bound
push
into
adc
mov
push
add
xchg
fidivrl
ljmp
fdivl
jae
hlt
inc
sbb
cwtl
and
mov
fbstp
cli
jl
adc
or
jae
shrb
mov
mov
xor
add
aam
shll
xchg
pusha
pop
dec
sub
ja
xor
iret
xchg
rcpps
xor
out
jae
sub
lahf
push
rcll
mov
movsl
in
xchg
xor
rclb
into
mov
shrb
pop
shl
jo
or
cmp
out
xchg
xchg
xchg
ret
repnz
or
lcall
sbb
jmp
push
lock
mov
sub
jo
pop
inc
imul
add
sti
ja
add
loopne
lods
fnstenv
cmpsl
and
mov
mov
imul
sub
pop
cli
dec
fisttpl
arpl
mov
pop
fdivl
sbb
movsb
jmp
pop
aas
add
mov
sbb
scas
aad
insl
ret
jle
inc
scas
cli
mov
sbb
pushf
cmp
add
add
jo
xchg
fildl
sub
sbb
pusha
test
xor
rorl
xor
push
jbe
jg
cmp
popa
mov
aas
pop
jo
rol
jno
mov
cli
jo
and
mov
inc
mov
test
mov
jo
jge
andl
out
pop
enter
sbb
jnp
or
jo
gs
pop
sub
push
ljmp
or
mov
add
cmp
or
xchg
push
and
cmc
callw
jl
insl
leave
loope
xor
cld
cmp
sbb
pop
fimuls
jnp
sub
stos
rolb
cmpsl
dec
push
xor
test
mov
xchg
jns
jne
fs
mov
add
jnp
lret
jo
popf
in
xchg
pop
jge
pop
jo
dec
mul
pop
aad
pushl
jno
sub
pop
jo
pop
jecxz
sbb
popa
pshufw
pusha
dec
mov
push
inc
je
sbb
fsubrs
jge
dec
lds
aaa
xchg
sub
jo
dec
dec
arpl
adc
push
fsubr
aad
sub
mov
sbb
cmp
int3
inc
cmp
bnd
xchg
mov
pop
push
mov
jo
add
cmp
mov
lret
fdiv
rcll
popa
jae
stos
dec
push
adc
add
out
pop
xor
mov
jns
sahf
push
adc
insl
outsb
mov
lock
pop
cmpb
xor
xchg
int
pop
repnz
pop
cmp
outsb
adc
push
add
sub
cmc
jmp
lds
pop
mov
push
jo
lock
add
inc
mov
rcrb
mov
sbb
mov
movsl
rcrl
dec
lods
lret
lock
fidivs
int
lock
addl
push
mov
mov
enter
cmpsb
outsl
stc
jmp
sbb
out
fs
dec
adc
jl
mov
cmpsl
call
std
jmp
push
push
andl
xchg
lahf
call
test
adc
inc
dec
daa
jo
cmp
imul
je
out
cmpsl
dec
xchg
lock
jge
or
loop
test
ret
ja
js
icebp
xchg
inc
sub
icebp
push
pop
mov
insb
data16
inc
insb
sub
adc
or
cmp
mov
clc
mov
hlt
or
lcall
call
addr16
es
jmp
mov
fmulp
jo
jecxz
jl
loop
lds
cmp
sbb
xchg
add
xchg
test
mov
and
outsb
jo
pop
mov
push
repz
into
fldt
imulb
jp
lods
mov
adc
in
jae
jo
nop
jge
out
cmpsb
mov
jo
xchg
push
int
mov
sub
pop
push
je
xor
pop
pop
sbb
jo
iret
xchg
mov
jo
test
xlat
jno
in
inc
ja
jmp
shll
cs
movsl
ds
sub
outsl
push
fsts
sub
repnz
aam
mov
lods
lcall
insl
mov
dec
lahf
cmp
push
jae
cld
test
mull
inc
sahf
jb
and
mul
insl
std
addr16
cmp
jo
incb
jo
ret
outsl
insb
ja
hlt
data16
fbld
jns
sbb
lds
rolb
lock
pop
cmpsl
adc
test
sub
sbb
popf
sub
test
dec
pop
xor
jo
ficoms
push
jo
mov
sbb
jno
xor
adc
push
cmp
cli
xor
fdivrl
add
sub
dec
movsl
jp
sbb
mov
loopne
inc
psllw
mov
fcmove
vprotd
push
sarl
mov
jge
jl
jo
sub
lea
insl
mov
int
mov
jnp
testb
push
cwtl
adc
jo
aad
pop
lahf
lock
fidivrs
sub
or
outsb
loop
cmp
sbb
orb
push
jno
jae
jmp
mov
add
sarl
into
popa
push
fcomps
mov
xchg
cmp
imul
and
pop
mov
add
push
pop
ret
push
shll
add
xor
and
add
jae
push
mov
xor
movsb
pop
int3
loopne
xchg
sbb
loope
lock
out
jge
mov
std
jnp
add
adc
dec
push
xlat
lock
mov
aad
jno
jp
imul
inc
jo
mov
mov
jnp
outsb
xchg
pushf
lock
addr16
lret
jo
orb
cmp
mov
ja
inc
inc
jmp
mov
shlb
adc
ljmp
xor
fnstenv
dec
cmp
je
add
jo
stos
aas
push
adc
jo
ss
jbe
pop
add
jo
scas
std
out
insl
inc
jle
jo
movb
jo
cmp
cmp
mov
push
pop
or
fwait
add
mov
and
rorb
xchg
aad
outsb
ret
dec
fiadds
or
xor
jp
or
xor
adc
push
jo
adc
jp
jo
daa
loopne
fsts
or
add
insl
add
leave
call
nop
scas
loop
das
aas
jg
dec
dec
xor
in
cmpsb
jo
repz
mov
push
and
mov
imulb
dec
lahf
subb
inc
rorb
call
sub
jo
cltd
mov
fistpl
sbb
insl
jo
mov
jo
into
mov
push
or
jo,pt
inc
es
fs
xlat
cs
jo
jbe
jmp
adc
sub
xorb
nop
jo
mov
call
jo
sbb
adc
jne
push
dec
cmp
xchg
ficomps
test
xor
mov
or
adc
scas
mov
loopne
add
jo
push
sbb
pop
jp
push
stc
xor
pop
jne
inc
push
insl
aad
insl
mov
fucomp
mov
loope
and
test
lock
int
dec
xchg
lock
sub
jo
push
adc
push
xchg
jo,pt
sub
and
lea
rcll
xchg
mov
jo
rclb
push
jno
fcmovu
dec
stos
and
aad
push
jl
jo
pop
jle
lds
jo,pn
mov
or
or
mov
das
cltd
mov
insl
mov
cmpl
fildll
push
popf
and
je
shrl
imul
leave
jo
mov
push
cmpsb
arpl
fnsave
push
push
clc
jo
enter
dec
bound
push
adc
test
xchg
jo
cmp
int3
aas
fistpl
shlb
and
jo
out
fldcw
push
je
pushf
inc
xorl
jo
adcb
mov
xor
sarl
push
int
ret
cmp
cmp
adc
mov
cs
jmp
scas
dec
push
cmp
pop
dec
push
add
lock
pop
pop
ja
divl
and
cmp
jle
loopne
mov
pop
jo
mov
lock
imul
ret
cmpsb
push
in
dec
xchg
addr16
adc
xor
jo
jbe
in
jp
xor
jge
mov
jmp
jo
adc
aaa
ja
arpl
in
jns
jb
jo
repnz
cmp
test
in
cmc
and
pop
xorb
out
push
push
mov
dec
inc
fs
lock
xor
or
cmp
das
rclb
add
test
out
rclb
jnp
outsb
xorl
iret
or
jnp
sbb
jo
out
dec
fidivs
jle
loop
pop
subl
pop
scas
popa
adc
jl
jo
out
jmp
mov
cmpl
ljmp
test
push
sbb
je
pop
imul
movsl
adc
nop
jo
jbe
sub
leave
fdivr
push
adc
outsb
jo
dec
in
mov
push
jo
pop
lods
cld
in
es
out
jecxz
jae
sbb
jno
enter
insl
rcr
pushf
ret
jae
jp
xchg
and
dec
rolb
out
xlat
daa
rcr
push
in
dec
add
cltd
popf
jo
movsl
and
das
into
ret
push
jo
push
mov
insb
push
inc
int3
mov
ficompl
push
inc
push
in
add
lock
jmp
mov
and
fldcw
or
lds
push
into
jo
scas
pop
push
jecxz
or
jo
xor
cli
daa
add
jl
leave
sbb
roll
xchg
push
enter
mov
push
pop
pop
pop
fdivrs
push
mov
adc
xchg
std
cmpsb
pop
and
nop
mov
pop
into
scas
xchg
sbb
jl
andl
jo
jle,pn
add
test
lcall
cltd
cmpsl
mov
push
dec
jo
ret
movsl
inc
lahf
mov
pop
mov
enter
leave
inc
fldt
movsl
inc
mov
mov
dec
push
pushf
xlat
adc
mov
cmp
insb
mov
push
lahf
orl
lcall
stos
inc
xchg
cmc
lea
les
and
pop
xor
cmpsl
scas
sbb
imul
scas
cmpl
insb
mov
sti
lea
sbb
or
mov
and
clc
mov
bnd
sub
and
push
mov
mov
inc
lret
ficomps
ret
nopl
jo
aas
aad
rcll
popa
jo
int3
pop
fcompl
bound
icebp
adc
jle
arpl
dec
jb
outsb
sub
jnp
aam
add
jo
cwtl
sbb
pop
xchg
roll
popa
pop
aas
or
pop
in
mov
jo
test
negl
push
add
lds
mov
jnp
nop
push
or
and
sti
xchg
lods
ja
imul
aam
lahf
and
mov
pop
outsl
jo
mov
cmp
movzbl
in
dec
arpl
mov
dec
enter
pop
add
mov
xchg
loopne
jo
push
movsl
sbb
fldcw
pop
xor
fstpl
jo
push
inc
gs
orl
ljmp
outsb
add
sti
mov
mov
loop
sub
inc
daa
push
ja
pop
pop
fldl
pop
xchg
jp
jo
mov
iret
push
jo
lods
sub
pusha
fsubrl
loop
sbb
push
push
inc
sbb
jbe
outsb
stc
sbb
clc
fs
cmp
mov
mov
xchg
jo,pn
or
aas
pop
lahf
les
fbstp
jo
test
xor
push
lods
jo
pop
shl
loop
fwait
sti
jo
outsl
jnp
or
sbb
inc
hlt
rolb
int3
and
enter
pushf
mov
xchg
test
ja
dec
sub
ljmp
call
or
cmp
mov
push
adc
lret
jp
fisttpl
sti
jo
adc
insl
in
xor
iret
ja
mov
xchg
sbb
fucomip
hlt
push
inc
sub
jge
jo
or
bound
sbb
jo
dec
adc
rorl
insl
push
fidivrs
cmc
das
mov
test
lock
bnd
in
or
aad
dec
cwtl
pop
mov
jo
outsb
inc
xor
mov
and
notl
sbb
mov
jge
fs
loopne
jo
adc
jo,pt
jl
fcos
adc
cmp
je
xchg
dec
xor
pop
fstpt
mov
dec
in
mov
add
inc
adc
jo
adc
jnp
push
nop
movsl
jo
mov
bound
sarb
inc
xchg
fcomp
xchg
shll
lock
das
fdivrl
jo
aad
icebp
ljmp
lock
iret
mov
jo
mov
stos
jo
cmpsb
adc
jbe
out
add
xchg
push
inc
jo
sbb
lahf
js
in
jo
xchg
xchg
cmc
decb
insb
and
jo
popa
in
idivb
fstps
jo
sbb
es
dec
sbb
cwtl
mov
cmp
and
fdivrp
mov
dec
jo
push
es
mov
lods
testl
mov
cmp
les
jl
ja
mov
xor
pop
add
pop
in
mov
lods
adc
and
pop
inc
aas
scas
lods
push
fwait
adc
ficomps
sbb
pop
fdivrl
ljmp
iret
adc
xchg
push
pop
or
aad
mov
sbb
mov
cli
lods
or
ljmp
mov
jae,pt
int3
sbb
xchg
lods
jbe
roll
xorb
or
add
shl
out
push
movsb
cwtl
comiss
shl
mov
pop
push
into
cmc
dec
jo
fistpl
rolb
jg
fnstcw
lcall
ljmp
adc
inc
faddl
mov
repnz
push
divb
into
cmp
mov
out
stos
cmpsb
sbb
jbe
add
arpl
in
jo
repz
sbb
dec
mov
jecxz
test
mov
mov
dec
outsb
lock
sbb
push
mov
sub
mov
dec
xor
adc
mov
scas
jo
xchg
pop
push
mov
jmp
sbb
movsl
push
sti
loopne
mov
cmp
pop
lock
jo
add
arpl
push
fstpt
xchg
cmp
xchg
push
cs
dec
dec
xchg
jo
int3
jg
sbb
gs
push
inc
insb
and
cmp
jo
jae
xchg
cmp
jae
fwait
stos
sub
imul
addr16
daa
ficompl
adc
andl
jb
adc
and
jo
pop
jae
sub
fsts
mov
xchg
jae
js
adc
call
pop
jecxz
call
jp
lret
adc
rolb
shr
mov
jo
mov
rcrb
cmp
push
jo
jne
dec
imul
and
les
xor
cmp
jg
jnp
and
sub
pop
cmp
cmpsl
jno
ljmp
add
outsb
xor
jae
xor
adc
daa
jecxz
jo
jno
test
jae
roll
dec
out
mov
cmp
mov
and
xchg
jo
add
fidivrs
mov
add
sub
or
xor
xchg
stc
mov
cmp
push
dec
push
add
fwait
xor
dec
adc
adc
fldl
test
jo
jl
lds
psubw
nop
mov
jae
aad
push
pop
mov
popa
sub
pop
jle
mov
sub
cmp
divb
clc
xchg
or
fldenv
cmp
imul
cmp
dec
push
icebp
insl
cmp
in
fisubrs
adc
jo
mov
int
push
icebp
and
pop
aam
cmpsl
adc
ss
mov
imul
fs
jo
sahf
fildl
lahf
mov
mov
mov
or
testl
cmp
xchg
sbb
andb
mov
or
in
push
jo
pop
imul
pop
fsubs
ds
sub
xor
jb
pop
jo
sti
scas
fxch
push
pusha
fidivl
shlb
dec
xchg
xor
fldl
mov
add
stos
jo
popf
sbb
xor
xchg
jo
test
jmp
jo
stos
test
repz
jo
outsl
leave
mov
jo
clc
insl
test
dec
add
arpl
sti
inc
jo
cltd
shll
incl
int3
imul
scas
jle
insl
or
cs
sbb
mov
movsl
popf
mov
mov
aaa
xor
mov
decl
rcrl
or
shrb
mov
out
fildl
pop
loope
jbe
pop
out
sbb
in
xor
outsb
inc
test
and
sbb
sbbb
mov
jmp
push
push
mov
pushl
mov
add
pop
add
and
into
xlat
add
dec
xor
ficoms
push
imul
mov
popf
jo
mov
xchg
cmc
iret
jo
test
out
das
push
sbb
push
pop
or
outsl
add
pop
mov
xchg
jo
aad
lahf
mov
xchg
lock
in
scas
add
out
adc
jo
fwait
arpl
mov
xlat
or
jo
out
adc
xchg
mov
enter
ja
pop
mov
xchg
add
out
push
fidivl
push
push
mov
fnsave
iret
mov
movsb
jo
push
jge
jo
xor
enter
mov
jecxz
pop
insl
and
jb
dec
inc
int3
fcoms
lret
xchg
lahf
dec
lock
mov
std
fnstenv
pop
sub
mov
xchg
loop
pop
fdivrs
fstl
pop
int
cltd
push
xchg
loopne
daa
imul
fsubs
loop
sub
fldl
loopne
mov
xor
sbb
push
or
enter
add
jo
add
frstor
push
imul
aas
xchg
jo
jae
ret
mov
jp
jnp
fisttps
sub
pop
adc
push
mov
je
dec
jo
aad
or
jo
mov
imul
adc
push
cmp
xor
je
insb
and
mov
adc
insl
into
fsubr
movsl
test
mov
add
mov
fildll
push
push
jle
jno
shll
jo
sbb
jg
loope
lods
pusha
lock
mov
loopne
jo
mov
add
fstpl
push
xchg
in
outsb
jg
pusha
jnp
adcb
into
out
jo
push
or
sarl
sbb
addr16
ret
loope
jo
sbb
mov
mov
sbb
in
xchg
cvtpi2ps
push
mov
jae
cmp
mov
daa
scas
jne
inc
mov
add
jo
inc
dec
sbb
cmc
add
mov
inc
push
inc
fnstenv
andb
dec
sbb
push
imul
cmp
inc
mov
mov
sub
fs
xchg
mov
sbb
ljmp
ja
mov
cs
adc
aad
cmp
mov
fcoml
lods
clc
jo
fmuls
movsl
sarl
insl
pop
cmp
add
xor
into
outsb
pop
push
lock
es
jae
nop
lret
xor
fdivl
in
lahf
mov
jo
lds
ret
sub
pop
aaa
push
sub
jo
aad
jmp
push
sti
sbb
subl
insb
ror
insl
ja
dec
out
data16
jmp
or
sbb
sbb
subb
int3
out
lea
je
shlb
test
xchg
mov
shr
mov
loopne
mov
xlat
jno
mov
lods
xor
push
cwtl
sahf
mov
fistpl
xchg
mov
push
mov
push
dec
push
push
out
dec
jo
pop
scas
movsl
icebp
add
mov
pop
movsb
push
fists
jo
add
jo
dec
out
inc
adc
bound
push
dec
adc
cmp
aad
insl
mov
xor
mov
pop
aaa
cmp
jmp
das
pushf
lods
je
enter
lock
inc
in
jmp
divb
mov
sbb
in
pop
pop
fcoml
xor
sarb
test
jo
std
popl
jo
push
movsb
out
jmp
cmp
jo
mov
xchg
mov
fisubrl
mov
or
inc
repz
fnstenv
loop
nop
pop
add
xor
add
inc
aam
adc
jmp
dec
jo
pop
in
xchg
cmp
call
outsb
or
fnop
mov
cwtl
ja
loop
data16
lret
cmp
test
nop
xchg
loopne
jo
fists
sbb
hlt
mov
xor
sarb
out
cmp
out
mov
jo
inc
sbb
adc
cld
cmp
and
jo
mov
lret
cmp
imul
loope
and
pop
sbb
xor
flds
cmp
mov
inc
jo
xchg
roll
add
mov
sub
psadbw
subl
mov
jne
xlat
rcrl
mov
sub
jae
fnstcw
add
push
imul
cmc
jo
int
imulb
dec
aad
les
jecxz
dec
mov
mov
cmc
xlat
pop
mov
movb
stos
mov
pop
mov
push
push
loopne
jo
mov
mov
jo
jecxz
mov
jo
xchg
flds
ja
jo
pop
mov
pop
adc
fcoml
xchg
cs
jo
jae
test
xor
jo
cmpsb
mov
rcr
mov
or
orl
cmc
jo
dec
push
out
jae
shr
mov
rorb
cli
cs
mov
dec
pop
movsb
or
mov
mov
stos
jo
fidivl
scas
shl
inc
fmul
or
clc
jo
pop
add
push
insb
xor
jo
pushf
push
cmp
push
lahf
rclb
aad
or
inc
xor
jb
jns
scas
pop
xorb
in
add
mov
in
jne
pop
int
jo
xchg
pop
add
pop
arpl
sbb
xchg
bound
clc
pop
divb
ja
or
lock
in
dec
lahf
iret
popa
rolb
rcr
mull
jo
inc
xchg
out
fstpt
mov
push
shll
pop
dec
in
stos
jae
imul
add
mov
mov
into
insl
jp
sub
fwait
mov
add
repz
rorl
dec
scas
jp
mov
xchg
inc
pushf
fisttpl
out
dec
pop
imul
mov
mov
xor
xchg
add
scas
imul
stc
jmp
jae
lods
inc
rep
fwait
lock
scas
shll
dec
sub
mov
sbb
fimull
std
icebp
ja
out
add
loopne
mov
ss
in
sbbl
push
push
mov
lds
popf
aad
mov
out
and
dec
dec
dec
mov
jbe
daa
nop
scas
push
gs
lret
and
sti
arpl
pop
repz
or
jecxz
push
mov
ja
mov
stos
sahf
loopne
leave
add
jle
jo
mov
sub
loopne
pop
mov
xchg
vunpcklps
add
enter
ret
aad
pop
xchg
jo
lret
pop
dec
sbb
jae
adc
adc
jge
mov
jo
push
pop
int
into
push
or
mulb
cwtl
sub
out
es
aad
xchg
lods
popa
je
addl
cmp
mov
shlb
jbe
arpl
into
xchg
or
jo
pusha
sbb
sbb
fidivs
clc
fcmovnbe
add
xor
or
lea
sub
pop
mov
and
xlat
lds
fs
xchg
mov
repz
mov
xor
roll
jo
jnp
out
mov
into
icebp
loopne
jg
mov
or
cmp
pop
jmp
jo
push
inc
inc
push
xorb
mov
adc
faddl
jae
into
fistpl
and
aad
push
mov
mov
xor
cmpsl
cli
dec
js
jae
jae
or
fldln2
lds
xor
jbe
insb
jo
enter
aad
sub
dec
inc
push
testb
jo
fcomps
pop
insl
xchg
cmp
jo
sub
out
cltd
xor
fld1
jg,pn
mov
jo
rcl
inc
fidivs
or
cmpsl
adc
fsubr
cmp
loopne
sbbb
inc
in
jne
shrb
test
mov
jo
fwait
hlt
adc
rorl
jmp
sbb
inc
mov
sbb
mov
js
push
hlt
xor
sbb
jo
cmp
fmull
push
gs
not
out
xor
sbb
sub
sbb
dec
lds
push
pop
xchg
jo
lock
mov
mov
mov
pop
fildll
jo
jge
es
stos
pop
xlat
fadds
daa
in
lds
mov
out
mov
rcrl
jge
push
pop
movl
jbe
sbb
imul
xor
test
iret
jo
jecxz
push
mov
or
movsl
jnp
cmp
adc
push
fwait
lahf
jo
lods
adc
cmp
mov
sar
mov
repz
jmp
int
jo
leave
dec
imul
add
or
pop
mov
test
jo
add
pusha
mov
jo
movsl
adcl
mov
pop
jo
pop
mov
inc
mov
je
and
pop
or
pop
clc
pushf
fidivs
jle
jmp
fstps
fsubrs
cmp
in
sub
or
jo
xor
out
jb
jbe
gs
jo
subl
jp
mov
outsb
inc
fdivrl
out
mov
addr16
xor
pushf
andb
add
jo
out
lds
jo
dec
xchg
js
push
cmp
jo
mov
jle
insl
aaa
push
leave
pop
sti
data16
adc
fdivl
mov
xchg
fbstp
out
pop
fwait
adc
dec
jo
jbe
pusha
ret
insb
jl
mov
jo
addr16
inc
out
sahf
movsl
jp
jne
xchg
jo
test
push
jmp
add
adc
repz
jo
addr16
jb
lcall
mov
aad
jle
mov
sbb
lea
nop
mov
xchg
mov
enter
jo
test
test
jo
sub
jle
mov
pop
jo
fcmovnbe
sub
dec
mov
add
sub
dec
hlt
sbbb
jns
lahf
cmp
add
xchg
xchg
repnz
jo
dec
cltd
loop
mov
out
imulb
aad
int
scas
jnp
in
clc
lock
push
js
arpl
dec
jo
mov
dec
and
sub
out
lcall
gs
xor
ljmp
rorl
or
lea
xchg
pop
jo
pop
ret
in
xchg
jo
adc
push
fsubrs
lods
fcoml
movsb
xchg
jo
rcl
lret
rcr
and
xlat
pop
ja
sbb
xchg
std
movb
movsl
push
jo
addl
or
adc
sub
les
pop
sub
lret
pop
rcl
popf
out
cmc
jo
imul
mov
pop
xchg
jno
data16
jo
mov
iret
or
test
lock
pop
jo
pop
jae
fstps
faddl
notl
test
fidivrs
lods
pop
dec
mov
jecxz
into
jg
data16
fdivl
std
dec
or
ja
fmulp
pop
adc
push
scas
fsubrl
pusha
jo
xchg
test
aad
jo
or
shll
insb
test
jmp
movsb
mov
xor
mov
push
push
jno
or
lock
inc
scas
jo
mov
mov
add
adc
fcomip
jl
rolb
dec
or
push
xor
jmp
fsts
outsb
pop
mov
ds
pushf
dec
lret
in
sti
ret
pop
pop
pop
xchg
aaa
or
add
dec
shll
xchg
sub
jo
loopne
jecxz
mov
adc
xchg
pop
jo
mov
jo
dec
push
sahf
cltd
rcrl
add
movsb
les
call
mov
cmpb
mov
or
xchg
push
sbb
push
stc
fbstp
ss
pop
das
in
cmp
cmp
loop
jle
mov
jb
jae
mov
cld
scas
mov
insl
cmp
cmpsl
cmpsb
clc
dec
test
or
testb
lds
loopne
shll
outsb
int
lea
cmp
jo
dec
pushf
rolb
and
and
repz
cmp
jo
popf
rcrb
fcomps
jb
or
ds
and
neg
mov
jo
cmp
push
pop
daa
jo
pop
pusha
insb
mov
dec
loop
lea
out
xor
cmp
pop
shl
add
pop
ja
xchg
xchg
jg
int3
shrb
jo
sub
cmp
int
aad
divb
adc
or
sub
pop
jo
pop
xchg
xchg
nop
repz
in
stc
mov
jmp
jo
mov
cmp
pop
jle
fidivs
ds
stos
movsb
adc
pop
or
loope
sti
std
fcmovne
call
scas
aad
jo
add
xchg
push
loop
add
xor
mov
cli
pop
outsl
sub
leave
and
out
ret
fdiv
jo
shlb
jo
in
aad
sbb
and
inc
test
push
push
lea
lahf
bnd
fnstenv
sbb
mov
inc
jo
or
scas
or
cmp
push
mov
mov
js
push
or
or
cmp
loopne
jo
xchg
stos
jle
jo
cli
sbb
mov
jns
addr16
call
mov
push
insl
jo
xlat
pop
mov
xchg
sbb
jo
repz
aad
inc
and
jp
jo,pn
pushf
xor
and
jo
push
pop
ljmp
jmp
notl
fadds
xor
dec
aaa
jo
sub
sbb
push
fisttpl
loope
sti
iret
inc
lcall
sub
mov
repnz
adc
or
add
jo
jae
dec
and
push
orb
cs
pop
dec
adc
adc
push
cmp
stos
inc
mov
jae
test
pop
into
sbbl
incb
cwtl
mov
add
jno
add
ja
pushf
adc
push
add
mov
and
iret
ja
shrb
fistpll
mov
jecxz
add
movsb
xor
or
lock
xchg
jmp
insl
xchg
xor
inc
addb
dec
or
xchg
shll
icebp
dec
jo
scas
out
fneni(8087
mov
lea
ret
es
ja
hlt
and
int3
fnstcw
push
out
gs
mov
lock
jo
not
mov
jo
sbb
ficomps
call
push
mov
aad
lret
out
or
pop
iret
clc
adc
lods
hlt
pop
and
or
sarl
mov
mov
sub
lret
jo
jecxz
mov
xchg
lea
sbb
dec
cwtl
fsts
aaa
mov
add
stos
ja
xchg
lock
mov
inc
push
jae
inc
in
cmp
jo
popf
lods
lea
adc
ret
cmp
cmpsl
ja
xchg
rcll
and
xchg
fmulp
xorl
pop
mov
adcl
cmpb
pop
arpl
insl
mov
div
adc
jne
xlat
cmp
lock
add
test
f2xm1
ret
mov
xor
fsubr
icebp
fidivl
subl
imul
in
push
popa
mov
xchg
jo
lret
adc
cli
aaa
xchg
icebp
pushf
dec
adc
lahf
loop
cmp
cmpsl
and
shlb
rorl
jo
jge
or
fnstsw
xchg
pop
movsb
sbbb
push
jo
enter
pop
add
mov
mov
adc
jne
mov
insl
popf
dec
and
sbb
cs
push
cmp
test
stc
jo
push
addr16
js
fwait
insb
inc
fnstenv
add
mov
push
push
xchg
cmpb
jo
imul
mov
in
imul
test
int3
push
insb
aaa
dec
ficomps
gs
xchg
fldenv
es
add
jo
push
aaa
jbe
push
cmp
das
add
adc
ret
in
fdivr
test
inc
jo
daa
aad
mov
clc
ds
jl
cmc
push
add
insb
cs
xchg
jo
xchg
pop
imul
xchg
mov
pop
cwtl
test
and
jge
xchg
bound
cld
pop
mov
lock
add
xchg
sub
and
addr16
data16
sbb
push
aad
mov
mov
stc
xchg
mov
sbb
pop
jo
test
mov
fistpl
out
adc
and
jo
cmp
pop
ds
loopne
mov
jo
inc
xor
ljmp
out
or
cmpsb
sub
stos
bswap
push
popf
jo
stc
not
in
mov
jbe
lds
out
lods
and
cmc
jo
and
mov
jo
hlt
ret
int3
push
lahf
enter
je
xor
outsb
adc
mov
cmc
ja
jo
dec
dec
bnd
adc
pop
xchg
rorb
je
movsl
lods
shll
mov
push
push
jne
nop
mov
bnd
nop
or
mov
adc
cs
scas
jo
or
dec
inc
jo
cwtl
loop
xchg
mov
shl
pushf
aas
push
insl
jg
adc
pop
push
dec
jp
add
fildl
pop
jne
lock
mov
jo
cmpb
out
mov
add
por
fidivrs
data16
es
mov
loopne
push
jo
roll
addr16
scas
jo
adc
add
in
mov
lock
fcmovnu
jno
push
mov
sub
sub
test
jo
mov
cld
jo
mov
jns
push
data16
dec
pop
int
loopne
aaa
nop
cmp
inc
lods
stos
leave
cld
sub
jo
or
addr16
test
lea
jl
arpl
inc
push
mov
insl
rcrl
mov
push
pop
dec
pop
outsb
push
out
cmp
out
mov
dec
das
jo
sbb
repz
rcr
test
xchg
xor
adc
aam
push
push
sar
arpl
xchg
mov
nop
sbb
pop
cmp
enter
mov
imul
nop
jbe
fnsave
mov
lret
push
dec
in
add
outsl
add
mov
mov
fcmove
je
cmpsb
push
inc
xchg
jne
jo
rcrl
ss
les
adc
lret
jge
outsb
rcrl
mov
call
sbb
pop
inc
mov
sub
jo
or
dec
xchg
xchg
jo
orl
jo
shll
mov
fadds
jo
cmp
mov
jp
xchg
mov
shrb
sub
vpcmpeqw
dec
in
out
lods
cwtl
jo
je
sub
fiadds
jo
xor
sub
mov
pop
jg
pop
push
jo
popf
sarl
jl
fcoml
pop
push
imulb
stos
aad
test
inc
or
mov
dec
pushf
cmp
xchg
fcmovbe
scas
add
pop
mov
or
mov
jl
jne
jo
stc
jae
pop
fs
out
jnp
cmp
stos
movsl
push
daa
inc
mov
adc
mov
stos
repnz
mov
aad
cli
cmp
adc
jo
std
frstor
mov
cli
xor
lods
xor
lods
mov
jo
and
jo
jecxz
mov
push
notl
add
mov
dec
lea
aad
or
mov
in
mov
xlat
pusha
jbe
dec
xchg
ja
jge
negl
sbb
sub
push
fdivs
jo
cli
jb
into
and
jo
scas
mov
dec
pop
push
push
jo
and
outsl
jmpw
push
in
mov
push
ss
aaa
les
cmp
jo
xchg
scas
push
xchg
fldenv
in
jo
xchg
in
mov
das
imul
sbb
jb
cmp
dec
jo
jg
sbb
sub
jecxz
jnp
pop
mov
sbb
and
jmp
shll
enter
fwait
mov
sub
lock
or
xchg
dec
rcl
ja
mov
leave
mov
out
je
jo
lret
jmp
jo
sarl
pop
ret
dec
dec
jo
subb
push
xor
insl
stc
xchg
loope
gs
mov
mov
je
fidivl
mov
pop
pop
jo
aad
cs
orl
jo
cmpsb
push
pop
dec
cmpsl
add
add
addr16
inc
jle
jo
jle
imul
ja
lret
push
fsts
pop
and
ret
push
movsb
dec
es
addr16
jo
cmc
jl
mov
loope
loopne
andb
mov
es
jl
inc
mov
insl
inc
mov
gs
sub
push
xchg
dec
mov
lea
dec
mov
push
xchg
pop
pusha
jl
sbb
jo
add
mov
add
xlat
sbbb
gs
jmp
fmuls
or
adc
sti
mov
or
jnp
cmp
lcall
mov
sub
fstpt
xchg
dec
mov
dec
loop
fnsave
fmul
and
add
fnstenv
xchg
in
push
sub
jo
jecxz
addr16
mov
jne
pusha
sub
sub
outsb
mov
nop
sub
jo
ret
outsl
mov
sub
fcoms
jmp
insl
sub
adc
in
add
cmp
test
fdivrp
push
ja
adc
or
xchg
sbb
in
mov
pop
les
movsl
cmpsl
jo
in
mov
mov
inc
pop
pop
ja
push
ds
push
cmpb
fcompl
leave
mov
fcompl
loop
jne
clc
pop
cmp
jo
add
xchg
pusha
cmc
sbb
leave
test
jo
push
pop
pop
mov
xor
dec
jae
aad
insl
mov
push
sbb
mov
jo
pop
push
push
lock
stos
aad
cld
pop
add
or
std
jecxz
mov
out
jno
mov
in
fld1
mov
cltd
pushf
sub
and
jae
push
fwait
into
aaa
jmp
loopne
lock
jo
sbb
stos
push
jo
lods
pop
sti
mov
inc
data16
punpckhwd
out
arpl
sti
jl
xchg
stos
loopne
ja
and
xor
into
lds
sub
cli
fwait
loope
jno
jecxz
sub
hlt
cmp
fstpt
jge
imul
nop
jne
jo
gs
ds
add
popf
dec
push
adc
jo
aad
xchg
cmp
pop
clc
sub
or
mov
fwait
jnp
loopne
push
xor
call
jle
out
jno
mov
xor
sbb
inc
lret
jo
push
sti
fsubrl
cld
enter
divb
mov
outsb
cltd
mov
jmp
xchg
cmp
test
add
lds
sarb
fcmovnbe
addr16
shr
scas
andb
cmpsb
mov
fadds
dec
mov
movsb
leave
lock
ret
jo
aam
xchg
pop
daa
or
insl
divl
jne
sub
pop
in
jo
imul
das
add
mov
push
iret
insl
testl
in
sub
jo
aam
in
out
es
je
adc
fninit
xchg
ja
mov
mov
add
push
pushf
mov
push
enter
jo
das
loopne
fwait
sub
into
jo
and
add
mov
ja
pop
lds
mov
cmc
std
fnstenv
xor
cmp
xchg
insl
push
xorb
icebp
lods
lcall
test
shl
xchg
mov
add
jo,pn
xchg
nop
mov
xchg
jo
enter
sarl
jo
loopne
stc
xlat
je
test
dec
mov
insl
pushf
push
sub
scas
mov
dec
cld
jo
push
jl
mov
jp
cmpsb
add
outsl
xor
dec
dec
or
xchg
jo
leave
mov
fdivl
mov
pop
sti
mov
pop
pushf
pop
mov
pop
je
lock
jb
insb
jno
adc
sub
cmp
lds
jo
leave
cwtl
jb
lea
xchg
rcrb
xor
out
loopne
sub
mov
sbb
mov
into
cmpsb
adc
sbb
ret
dec
dec
jo
int
outsl
inc
push
das
lods
outsb
adc
adc
aad
jae
pop
popa
ja
mov
jmp
add
in
sub
std
icebp
dec
xchg
imul
mov
repz
add
pop
xchg
xchg
mov
sbb
cmpsl
mov
fnstenv
fcomp
jno
mov
dec
bound
loopne
jp
xchg
jo
outsl
ret
dec
ss
popl
push
stos
and
jmp
push
cmc
jo
sbb
shll
rcl
mov
outsb
nop
enter
aad
cli
jp
add
pop
nop
sbb
les
ja
add
std
out
rorb
mov
out
loope
jo
es
inc
int3
adc
sbb
js
xor
lcall
fwait
mov
mov
jo
cmc
add
jo
dec
cld
jbe
je
cmpsl
ja
sub
fsubrp
shrl
in
dec
inc
fwait
psubusw
xchg
lret
pop
lods
fstpt
fs
orl
les
lds
mov
icebp
or
mov
push
jo
scas
ja
add
mov
jo
xor
shrl
fbstp
rorb
jle
jo
and
pushf
inc
cs
je
jnp
mov
shlb
mov
mov
sarl
icebp
insl
push
push
and
data16
jne
pop
sbb
std
push
mov
push
loope
ret
mov
pop
divb
es
lahf
push
jb
or
test
add
xchg
jp
outsb
std
mov
popf
aas
xchg
mov
loopne
movl
lcall
jnp
jl
fwait
imul
jmp
pop
push
in
jo
arpl
mov
xchg
lea
es
cmp
sti
in
leave
test
jnp
fstpt
sbb
mov
push
push
enter
mov
shll
fldln2
jae
loope
jo
and
push
jo
jnp
out
clc
in
and
xor
xchg
lret
push
shrb
inc
jo
movsl
std
jae
stc
mov
jle
insl
pop
xor
add
push
mov
xor
jo
icebp
dec
or
mov
jo
and
es
mov
sub
jne
popl
dec
repz
xlat
aad
add
jo
push
xor
jmp
aad
cmp
scas
dec
loop
lock
cs
xchg
inc
add
outsb
call
dec
adc
test
ja
pop
stc
jg
loopne
cmp
sub
aas
push
in
jge
mov
lahf
jo
sbb
mov
es
sub
pop
int3
dec
cltd
pop
push
jne
lock
jo
push
loop
nop
inc
ds
jo
cli
jl
fstpt
fs
int
pop
aad
outsb
mov
ss
lods
xor
jae
push
test
mov
adc
mov
sbb
test
xorb
insl
or
push
loope
jo
mov
lds
dec
aam
dec
loope
cs
jo
jl
xchg
in
lds
out
xlat
pop
pop
dec
in
bound
insl
mov
inc
roll
push
into
outsb
add
xorb
outsb
xor
adc
ficoms
sub
aas
xchg
fdivrl
outsl
xchg
adc
loopne
insl
add
jne
push
push
lret
xchg
xorl
outsb
mov
pop
idivb
jae
pop
cmp
sbb
ret
push
push
mov
push
jo
iret
push
ds
int
mov
pop
pop
fsts
jo
push
mov
push
insl
testb
movsb
sti
stc
mov
insl
push
bound
ret
add
es
mov
jo
orl
adc
sub
or
jo
test
sub
into
sbb
cmc
pop
ja
fwait
das
adc
gs
repnz
ja
loope
adc
jo
sbb
loopne
incl
jb
rcrb
xchg
mov
mov
xlat
lds
xor
inc
sub
test
scas
inc
ror
mov
cmpsl
jo
js
arpl
jo
lds
icebp
sahf
jle
loopne
jo
jmp
fstpl
in
aas
jo
inc
adc
cmpsl
shlb
das
lcall
jbe
cltd
enter
jmp
pop
testb
jo
fs
dec
imul
jo
pop
aas
icebp
push
sbb
push
xchg
je
jo
cmp
test
call
mov
test
aad
xor
jnp
xchg
pop
fs
or
pop
clc
pop
jg
push
nop
push
xchg
jo
out
pop
inc
xor
ja
jecxz
addr16
mov
push
outsb
and
insl
subl
ror
aaa
pop
lret
enter
jo
popf
int3
mov
ja
dec
mov
call
lds
aaa
sbb
dec
loope
or
pusha
xchg
repz
es
fnstenv
fs
lea
lock
mull
xor
mov
lds
sarl
pop
jb
push
pop
pusha
mov
or
mov
jo
xchg
xchg
sub
pop
add
ljmp
jge
aad
mov
idivb
inc
push
jp
fdivrl
mov
fisubl
mov
int
leave
dec
ror
xor
insl
inc
ret
pop
sbb
ss
shll
and
pop
fisubrl
enter
insl
push
into
je
adc
popf
pushf
mov
pop
dec
and
mov
sbb
lds
jo
push
or
je
push
into
and
jo
xor
lods
pop
daa
loop
inc
push
lock
mov
push
mov
jo
mov
jnp
adc
daa
jo
dec
pushf
mov
jo
ss
test
jno
jo
popa
mov
mov
ret
stos
mov
cmp
aad
imul
pop
mov
stc
and
and
arpl
sbb
jo
loop
fcmovb
xchg
jo
lret
inc
and
aad
sarb
mov
fisubrs
pop
cmp
inc
orb
inc
and
push
inc
sbb
repnz
lcall
insl
repz
std
jno
xlat
insl
sbb
and
add
add
pop
scas
insl
aam
xchg
hlt
leave
adc
push
mov
popf
cmp
inc
mov
mov
insl
or
fisttpl
scas
sub
or
dec
out
sbb
pop
push
loope
pop
sarb
cwtl
push
fmull
push
adc
test
test
mov
cmp
and
jns
and
sbb
jne
xorl
adc
hlt
dec
dec
lock
xchg
cs
jnp
sub
lcall
leave
jo
cld
fldenv
add
add
aam
fists
into
test
mov
shlb
xchg
inc
add
aad
dec
xchg
cmc
mov
mov
push
xchg
hlt
or
mov
jo
add
sbb
fistpl
insb
outsb
jae
mov
mov
ja
pop
dec
shll
pop
into
data16
mov
jo
pop
mov
sub
jo
movsb
mov
lea
cmp
sbb
pop
xor
mov
mov
pop
aaa
or
in
stc
scas
cltd
mov
sbb
jo
fiaddl
and
cli
jo
pop
fnclex
nop
xchg
jo
push
aad
xchg
mov
xchg
and
cmp
pop
pop
adc
dec
in
je
inc
mulb
mov
lods
loopne
sub
jnp
shr
cmp
clc
pushl
add
cmpb
adc
movsb
int3
push
sub
mov
loopne
sbb
rcrl
jne
xchg
fnstcw
inc
sti
cmp
and
cmp
inc
inc
pop
or
jo
push
orb
cmc
dec
cmp
xlat
daa
insb
jne
icebp
sbb
lock
iret
mov
addr16
lock
dec
std
data16
xchg
and
rorb
mov
stos
jl
dec
add
cmpb
fdivrl
xor
sub
jo
lahf
cmp
outsb
add
cli
pop
push
js
in
dec
into
std
cmpsb
jo
sahf
inc
mulb
ja
cs
and
mov
lods
jle
jne
repnz
inc
lock
push
mov
mov
inc
outsl
jo
stc
xor
inc
sub
pusha
aaa
or
pushf
fiaddl
clc
or
cs
mov
inc
outsb
add
add
popf
mov
ret
inc
adc
mov
or
jo
xor
xor
repnz
push
mov
xchg
fidivrl
in
inc
jge
inc
daa
xor
inc
shr
adc
jo
lock
add
popa
fldenv
stos
jo
in
push
pushf
xor
push
jl
lock
cmpsb
shlb
flds
inc
inc
mov
sub
rcl
clc
cmp
jo
dec
jmp
pushf
fwait
jo
push
cmp
leave
sub
int
mov
add
jecxz
cmp
pop
push
or
jne
mov
outsl
std
inc
cmpsb
dec
insb
sbb
sub
leave
xor
rcl
stos
fstl
add
sbb
arpl
test
inc
mull
inc
lods
cmp
pop
xor
sub
pop
mov
jo
xchg
cmp
jo
mov
lret
outsl
mov
jae
jle
cmp
js
push
rolb
test
mov
leave
cwtl
xchg
enter
aaa
into
mov
pop
popf
rorb
xchg
or
mov
aad
jo
test
pop
loope
out
cmp
ja
xchg
mov
rol
into
dec
loop
or
push
lds
dec
jo
aad
pop
adc
sub
pop
cmc
jmp
mov
icebp
jo
push
mov
out
xchg
loope
inc
cmp
push
jo
mov
aad
repz
fnsave
add
xchg
lods
cmpsb
dec
push
inc
popa
jo
xchg
adc
dec
inc
jns
xchg
es
sti
insl
hlt
adc
jo
aaa
inc
or
jb
ja
imul
stos
jo
mov
cmp
mov
stc
jl
sbb
std
pop
xchg
cmpsb
jo
pop
jge
cld
mov
addr16
imul
push
mov
mov
fwait
adc
jo
inc
mov
mov
addr16
push
push
enter
ret
sub
int3
jo
or
ja
shrb
addl
icebp
bound
les
dec
sbb
xchg
gs
mov
jo
test
sbb
xor
inc
aad
jo
mov
add
je
hlt
push
int
rorl
repnz
jp
cli
leave
dec
pop
sti
jns
mov
data16
dec
lret
dec
inc
jo
lods
out
mov
jo
sarl
jo
sub
nop
fcomps
adc
aad
shlb
cmp
dec
pop
mov
ret
inc
xlat
xchg
jbe
sub
stos
adc
or
test
pop
pop
xor
jo
dec
addr16
out
cwtl
cmp
fstps
dec
pop
and
jnp
lods
xchg
cmp
cli
inc
imul
jnp
mov
pop
jbe
push
inc
push
test
or
jg
fldcw
adc
pop
pushf
dec
xchg
mov
insl
cmc
jae
stos
inc
aaa
lcall
gs
cltd
fldcw
ja
cs
mov
sub
jo
mov
sbb
mov
cmp
push
mov
bound
and
jo
xchg
cmp
dec
mov
cwtl
out
sub
scas
data16
and
insl
mov
repnz
dec
jo
jmp
mov
jo
dec
lods
pop
fcmove
in
xor
push
test
dec
mov
xchg
loope
cmp
or
jge
jg
jp
or
imul
and
clc
inc
ja
sti
jo
into
or
fstpt
outsb
lock
jo
sbb
jp
mov
push
jo
mov
and
inc
jmp
insl
imul
jo
jb
push
imul
and
loope
add
jo
scas
cmpsl
cmp
popf
cmpl
enter
cmp
mov
fwait
arpl
clc
lea
jo
je
fcmovne
add
lods
jo
es
mov
cmp
fnsave
jo
and
mov
or
test
bound
scas
rcrl
lock
push
sbb
in
sub
xchg
les
sub
in
dec
ds
outsl
mov
jo
inc
dec
sbbb
pop
jo
mov
adc
dec
jp
outsb
insb
mov
jb
mov
dec
lock
cmp
jo
cmp
jb
sbb
inc
push
and
int3
rol
aad
fmull
inc
int
jne
scas
jns
push
mov
jo
outsb
push
sbb
das
rolb
addr16
mov
nop
fisubrl
andb
pop
or
test
cmp
jo
lret
imul
out
mov
mov
mov
cmpsb
mov
cmp
dec
push
dec
xorl
imulb
sahf
ja
mov
pop
nop
outsl
pop
dec
jo
fisttpl
mov
mov
inc
jo
adc
out
fwait
mov
outsl
pop
aad
pop
adc
shrb
adc
testb
je,pt
fcmovnb
repnz
lock
jge
push
ja
pop
adc
sti
nop
jo
shrb
cmpsl
jb
fwait
cmpsb
jo
fisubrl
add
out
gs
dec
jp
leave
mov
enter
and
xor
addb
inc
test
jle,pt
fcoms
jge
inc
test
jo
mov
rolb
out
cmpsl
cmp
jo
dec
inc
mov
fwait
ja
in
jnp
lret
test
sbb
mov
mov
lea
lcall
jno
insb
in
or
fistl
xor
popf
xchg
icebp
sub
in
outsb
dec
push
loope
xlat
out
mov
imul
jo
sbb
fwait
mov
insb
dec
je
gs
xchg
or
test
jl
jo
jle
cmova
movsl
jo
outsb
cs
and
mov
push
dec
inc
lahf
ret
push
cmp
xchg
mov
repz
jb
cmp
adc
xor
push
pop
cmp
les
ja
je
or
hlt
jp
jl
mov
pop
movsl
jo
mov
mov
or
jae
xor
jo
mov
fisubrl
fdivrp
mov
xor
scas
jbe
enter
push
scas
or
sti
pop
jno
and
das
jo
mov
je
lock
lret
insb
xchg
mov
cmp
insl
xor
lea
pandn
pop
cmp
sub
mov
cmpsl
ja
enter
jo
ss
loope
jge
leave
jo
and
xchg
pop
mov
in
jl,pt
inc
jo
dec
xchg
jo
enter
cld
in
jo
scas
push
testb
dec
jo
lret
daa
adc
push
idivl
jo
cli
pop
or
lods
lea
roll
lahf
jo
aad
inc
mov
out
cwtl
shll
and
inc
push
sbb
lock
inc
jo
and
dec
add
adc
aaa
pop
jp
pop
cli
sbb
sahf
adc
mov
jo
sub
adc
mov
jo
inc
mov
jne
gs
ja
repnz
ljmp
jno
dec
and
scas
mov
imul
jg
mov
lock
push
or
stos
leave
mov
mov
loop
aad
push
cmpb
data16
dec
ja
pusha
cmpsl
dec
mov
cld
rolb
mov
out
sub
popf
push
psadbw
out
jo
pushf
mov
push
jb
loopne
or
push
imul
pop
cwtl
lret
fwait
pop
mov
xorl
xlat
lcall
push
mov
xchg
and
push
nop
daa
stc
pop
jo
std
fisubrs
fwait
pop
shll
repz
push
dec
popa
data16
test
xchg
jb
push
imul
sti
popa
sar
fdivr
xor
cld
xchg
xor
sub
dec
aas
stos
subl
inc
add
or
sub
lret
jo
stos
mov
shll
xor
lods
nop
jecxz
mov
cmc
ret
adc
jmp
pop
lods
push
sub
mov
cld
mov
jo
call
and
out
sub
test
ljmp
or
outsb
fsubrl
lretw
out
cmp
je
or
push
imul
jne
aaa
mov
lods
insl
out
pop
mov
add
ficomps
popf
repz
gs
and
push
ss
adc
dec
outsb
lret
mov
inc
pusha
in
fimuls
mov
add
xchg
mov
mov
sub
push
call
decb
mov
mov
jae
loop
das
mov
pop
jo
inc
jbe
mov
shl
jo
add
test
arpl
jo
xchg
push
mov
pop
std
cltd
roll
inc
inc
fs
aaa
push
or
ja
and
mov
and
cs
lret
insb
push
pop
push
xchg
in
cwtl
insl
push
mov
xchg
ja
pop
test
popa
mov
aad
int
or
je
jns
jle
insl
push
hlt
fists
cmp
adc
push
jo
pop
rcll
psubusb
xlat
mov
iret
jae
pop
ja
push
test
xor
into
cmp
cmp
xor
fdivl
pop
jo
int3
sbb
xor
xchg
lods
mov
or
iret
fsub
out
jno
aad
jl
mov
dec
movsl
xor
push
into
jo
adc
push
lret
jge
outsb
aad
jnp
mov
lock
rcl
pop
push
jb
adc
or
mov
mov
mov
xlat
jnp
outsl
addr16
in
mov
sub
rorb
jbe
jl
mov
dec
mov
jle
push
sbb
pusha
inc
gs
jo
xorb
dec
xor
int3
jo
bound
out
pop
adc
aad
and
sub
dec
push
jo
cmp
xor
out
mov
fldenvs
cmpsl
ljmp
or
adc
cmp
jo
adc
push
repnz
rcl
movsl
addr16
lds
test
push
jo
loopne
aam
sbb
in
in
or
pop
jb
aad
daa
push
cmp
aaa
inc
iret
jge
dec
push
and
ds
cs
subl
test
mov
jne
xchg
push
pop
sbb
sub
les
ss
jo
fcoml
inc
cmpsb
repz
fisttpl
add
insl
sub
daa
cmc
jnp
lea
jno
sub
dec
mov
jo
loopne
bndstx
cmpsb
ljmp
xchg
fidivs
mov
sbb
or
jo
lcall
fld
in
mov
and
mov
pushf
scas
mov
fldt
mov
sub
inc
fldcw
adc
negl
pop
gs
fwait
into
mov
mov
js
movsb
leave
lock
repz
aaa
fwait
cmpsb
jecxz
orb
stos
sarl
dec
xchg
dec
popa
jo
ficomps
shlb
sbb
inc
sub
inc
insl
test
lock
jle
bound
xchg
and
jo
pop
js
dec
popa
jb
in
push
xor
mov
jo
push
cmpsb
mov
jo
fsubrs
fidivs
adc
movsb
ds
in
pop
add
shll
js
inc
pop
scas
adc
jo
mov
bound
jns
lock
xchg
add
sbb
and
scas
mov
jle
leave
pop
mov
mov
and
jnp
lds
int
loop
inc
inc
xchg
add
rcl
ja
xchg
inc
jl
shlb
into
in
negb
dec
or
inc
dec
aad
xchg
xchg
stos
add
push
pop
xor
aad
jo
mov
cmp
das
mov
pop
cli
xchg
icebp
jo
xor
and
and
jne
adc
mov
test
xchg
pop
jg
imul
mov
shl
adc
adc
jo
dec
adc
jmp
int
push
arpl
movsb
mov
cld
insl
add
scas
cmp
int3
shl
js
adc
mov
lds
gs
adc
xor
jo
dec
fstps
ja
adc
pop
push
pusha
xor
out
divb
sbb
jbe
push
scas
push
cli
jne
pop
lock
pop
into
jo
mov
fnstsw
std
xorb
push
jo
fmull
in
lea
push
ret
dec
push
cmpsl
jo
pop
and
loope
xchg
adc
fld
hlt
data16
adc
shr
or
cmp
pusha
clc
pushf
fs
sbb
test
and
les
cmp
xchg
fsubl
in
mov
test
aaa
jl
loope
sbb
out
adc
add
pop
jmp
jecxz
outsb
aaa
push
jo
mov
or
xor
adc
test
nop
xchg
fsqrt
mov
push
loopne
stos
dec
jo
jg
aad
xor
ljmp
sbb
mov
mov
fsubl
gs
orl
sbb
xchg
pop
jo
sub
imul
sub
xchg
or
add
jo
sbb
dec
shll
sbb
jl
push
and
pop
popf
jo
mov
cwtl
jno
adc
loopne
lock
dec
mov
xchg
mov
ja
mov
ret
adc
jo
push
xchg
fwait
push
jae
mov
enter
fistpll
or
xchg
stc
mov
pop
pushf
aam
fimuls
mov
test
mov
sub
jecxz
add
jo
sbb
das
add
or
jbe
lods
jle
cmpsb
push
and
aas
mov
or
push
lahf
sub
data16
xchg
mov
lret
faddl
push
test
adc
inc
mov
or
sbb
ds
jo
jae
or
jle
fdivrl
inc
imul
inc
insl
pop
xchg
mov
lcall
sbb
data16
lret
cmp
clc
xor
insl
movsb
leave
jmp
mov
sub
dec
aad
pop
mov
roll
fwait
sbb
xchg
sti
outsl
dec
push
dec
sub
cwtl
or
ja
scas
lret
jno
cld
push
push
pop
xchg
jo
insl
xchg
inc
adc
ja
outsb
xchg
test
scas
jo
sbb
xchg
lea
mov
or
jl
jo
add
pop
jo
sbb
inc
push
xor
jp
push
out
sub
jo
andl
jo
int3
arpl
aam
push
cmp
decb
lock
push
jo
ljmp
dec
cmp
filds
mov
and
imul
jae
push
andl
mov
jp
lret
jecxz
lea
imul
adc
aad
daa
jns
mov
imul
jno
loopne
in
jo
mov
in
mov
and
int
pop
ljmp
push
out
jae
xchg
add
jg
nop
jnp
cmp
push
arpl
pop
pop
push
das
lcall
mov
inc
pop
jecxz
jbe
sbb
pop
insl
flds
cmp
sbb
sub
rcll
in
jo
jl
pop
aaa
int3
adc
nop
inc
cli
add
insb
pop
mov
jnp
inc
lock
icebp
imul
cmpsl
jo
rcrl
aad
fildll
dec
jo
push
or
mov
rclb
push
shlb
sub
sbb
addr16
or
lds
adc
push
data16
test
jo
inc
sbb
mov
es
and
nop
outsl
sti
clc
adc
scas
push
mov
and
fsubrp
fsubrl
in
jo
pop
orl
jo
inc
jge
mov
dec
adc
rorl
or
in
cmp
fisubs
insb
jo
mov
jmp
imul
scas
cmp
xor
jl
jo
adc
stos
jo
mov
sub
xchg
fcomp
pop
pop
mov
xor
adc
jo
mov
mov
ja
repz
inc
dec
mov
push
popa
inc
xchg
call
mov
mov
mov
push
adc
mov
scas
dec
and
aas
jae
lds
jmp
fnstsw
cmpsb
push
aad
sbb
fiadds
xchg
lock
sarb
mov
insl
jae
movsb
js
xor
inc
mov
int
lea
mov
mov
jo
inc
out
push
pop
push
ljmp
call
sbb
into
stc
aad
jo
mov
rorl
cmc
fsubs
inc
or
insl
jmp
xchg
lds
je
push
mov
jo
lahf
inc
scas
push
push
sti
loope
mov
push
cmp
inc
lea
cmpsl
mov
jo
jnp
rclb
int
jo
out
push
or
pop
inc
push
xchg
shlb
add
std
xor
push
jg
jo
loope
add
insl
pop
sbb
ja
or
out
loopne
int
cmp
ficoml
out
fldenv
jo
inc
mov
pop
inc
int3
aad
inc
xor
lcall
mov
ret
insl
data16
jo
aad
adc
cmp
insl
arpl
nop
adc
imul
sti
dec
cmp
mov
xor
add
inc
insb
aad
mov
cld
jecxz
xchg
dec
xor
lock
popa
xlat
in
mov
sbb
fcompl
ret
add
mov
inc
pusha
jo
rclb
or
xor
adc
xor
mov
xor
repz
cmp
jo
dec
sahf
pop
fxch
jmp
jo
out
mov
dec
jae
lock
fucomi
ja
mov
or
xchg
out
and
jo
jae
pushl
aad
insl
jmp
pushf
xchg
mov
test
mov
out
stos
mov
and
es
gs
jo
mov
cmpb
adc
push
out
test
je
out
sbb
dec
hlt
lock
cmp
xchg
cmp
cmp
mov
into
aas
jp
fdivrs
aam
lock
insl
fs
dec
js
lods
insl
xor
mov
push
sub
sti
fwait
mov
mov
push
sub
lea
fisttpl
jmp
ret
xorl
aad
pop
jno
out
cmpsb
scas
jo
pop
lret
insb
mov
lock
sahf
fdivl
mov
rclb
je
rcl
out
lock
push
mov
lods
call
jo
repnz
jg
sub
dec
mov
cmpsb
jmp
push
pusha
xchg
pop
jo
and
cltd
push
jo
sti
dec
fsts
inc
cmpsb
xorb
andl
nop
popa
test
fxtract
repnz
cmpl
stc
sub
sub
aad
jp
mov
cmpsb
out
xorb
cmp
push
mov
mov
ja
add
testb
and
push
push
filds
aad
subl
pop
or
xor
cltd
inc
insl
mov
sbb
lds
pop
add
add
or
insl
lock
mov
lret
loop
sbb
test
mov
cmp
jo
cs
test
jo
shlb
jo
repz
rcr
inc
mov
adc
aad
mov
int3
xchg
push
mov
jp
pop
xchg
adc
adc
lea
stc
addr16
std
jo
fisttps
pop
jo
fstps
pop
lods
mov
je
jno
xchg
popa
inc
inc
and
addr16
push
stos
jo
jnp
mov
mov
faddl
jg
nop
fidivs
aas
cmpsb
push
jne
add
stos
iret
push
outsl
popf
arpl
mov
add
out
cld
das
in
xor
and
aas
pop
fidivrs
sbb
ror
inc
lods
arpl
jo
das
movsb
cmpsb
or
xchg
jnp
lock
xor
movsl
lds
jo
sti
fldcw
lods
jae
sub
mov
jg
dec
mov
insl
dec
lds
lods
repz
icebp
mov
mov
jo
in
inc
es
add
jo
xchg
fldl2t
in
lcall
push
and
cmpl
xor
fsub
push
js
xor
sbb
adc
pop
data16
mov
xor
sub
push
in
jo
lcall
inc
jo
in
ja
inc
inc
es
mov
daa
stc
jo
xor
jae
popw
dec
and
xchg
mov
add
xor
aaa
scas
fwait
sub
sub
jo
jge
je
jp
mov
mov
faddl
call
cs
test
notl
loopne
insl
mov
push
cmpb
cmc
scas
mov
stos
xchg
pop
addr16
loopne
push
cmp
pop
lock
adc
movsb
sub
jo
push
xchg
add
fisttpl
int3
jo
call
sahf
in
ljmp
adc
or
mov
stc
lcall
jo
pop
add
dec
mov
insl
push
movsl
jnp
leave
mov
cmp
into
and
or
pushfw
test
ljmp
jecxz
pushf
mov
jo
push
cmpsl
fcoms
mov
push
xchg
rcl
or
mov
jecxz
adc
mov
fdivl
les
es
jp
push
add
outsb
xor
push
movsl
les
xor
dec
loop
ret
int
inc
cs
and
fcmovu
loopne
fwait
jmp
ret
jo
sahf
cmp
insb
testl
xor
out
jo
shrb
ja
add
jae
mov
cmp
push
jo
ror
js
or
pushf
push
int3
or
cmp
je
lea
outsb
mov
inc
adc
jle
lods
pop
iret
inc
je
mov
popf
jo
adc
or
jo
xchg
aad
hlt
ret
lock
stc
idivb
jo
or
andb
mov
in
push
mov
lock
out
insl
jne
mov
in
inc
mov
xchg
pop
pusha
ja
mov
mov
jo
std
xchg
fldcw
jo
push
mov
aad
push
and
add
ja
out
enter
scas
es
or
jle
jp
mov
add
sti
or
cmp
push
imull
fisubl
insl
inc
not
lcall
out
lret
jo
rol
and
jo
mov
int3
loop
adc
outsb
xchg
cmc
fwait
jae
lock
add
jo
push
std
out
ret
ficoms
inc
add
sbb
andb
mov
lods
jecxz
jmp
jo
xor
push
and
enter
je
sbb
insl
sbb
xlat
cmp
add
jo
fucomi
bound
cmpl
imul
or
je
jno
mov
jns
jo
jp
int3
xchg
mov
push
pop
fsts
adc
cmc
outsl
jge
nop
insb
fdivl
lods
mov
int3
ficomps
dec
jo
and
adc
mov
aaa
sbb
jo
dec
adc
mov
jo
lret
push
or
loopne
test
outsb
adc
aaa
fwait
dec
outsb
aad
imul
add
cltd
sub
mov
xlat
shlb
jns
cmp
dec
int
aad
xchg
cmc
inc
mov
lds
mov
push
mov
cmpsl
push
adc
jo
fisttpl
stc
cwtl
daa
fsubl
aad
pop
sahf
jbe
sub
push
aam
xchg
jl
dec
jns
xchg
mov
mov
aas
vpshufd
mov
fpatan
inc
inc
or
decb
call
add
outsb
jmp
scas
mov
pop
mov
dec
push
xor
push
jo
jmp
xchg
stos
popa
incl
outsb
arpl
out
xor
lret
jo
cmp
aas
mov
jg
inc
jecxz
loope
ss
scas
outsb
cmc
pop
mov
stc
pop
nop
loopne
push
cmp
xor
aad
mov
dec
jo
lock
sbb
mov
push
pop
fucomi
jo
mov
push
rcrb
pop
shll
push
pop
mov
mov
rcrl
mov
aam
adc
subb
shr
fbstp
aad
sar
fldt
sbb
lock
dec
jae
mov
mov
jo
les
loopne
jb
jp
outsb
dec
repz
jo
cmpsl
sub
push
inc
pop
jo
adc
ror
xorb
sbb
pop
jno
stc
xchg
xchg
jecxz
jnp
jb
jo
sub
push
in
rcll
or
dec
sha1nexte
push
aad
mov
mov
addr16
xlat
jo
pushf
pop
testb
jo
clc
notl
pop
sub
lcall
cmp
pusha
inc
push
sub
fdivl
mov
filds
mov
sub
push
cmp
pushl
xor
pop
mov
paddusb
test
stos
shlb
jo
xchg
loop
lret
pop
fidivs
add
push
bound
adc
xlat
lea
push
fdivs
cld
cs
sbb
aad
inc
sub
jo
add
lea
cltd
in
test
jge
fnsave
test
cmp
mov
movsl
mov
pop
mov
add
sub
mov
mov
sarb
fbld
popf
push
mov
insl
mov
ds
inc
pop
cmp
scas
and
call
mov
cmp
jmp
jo
dec
fsubrp
and
jo
xlat
pop
inc
add
leave
adc
sub
push
std
jo
cwtl
xor
shl
pop
xchg
stc
xchg
mov
cmp
out
mov
or
sbbb
mov
jle
pop
xorb
mov
jns
ret
out
fdivl
fsub
popw
push
add
jo
sub
jo,pn
sbb
fistpl
out
adc
fdivp
pop
jo,pn
sbb
outsl
faddl
pop
push
imul
xor
xchg
repnz
dec
popa
fldln2
mov
movsl
add
and
lods
jo
mov
jle
into
in
stc
pop
imul
jo
mov
in
jo
rclb
dec
jo
adc
fstpt
arpl
sti
jne
add
xchg
jo
xchg
pop
jo
sbbb
fists
jo
sub
adc
call
push
mov
test
xchg
enter
data16
push
outsb
jl
jo
stc
mov
mov
in
sbb
test
insl
movsl
fwait
popf
dec
jb
mov
outsb
imul
mov
bound
dec
lret
lcall
jle
adc
xchg
jae
xor
jle
xor
in
sbb
andl
mov
cld
or
inc
bound
mov
addr16
adc
jo
lock
adc
notb
and
lds
jne
xor
mov
mov
jo
out
inc
ficoms
xchg
iret
cld
mov
jo
arpl
mov
div
icebp
jo
sbb
jnp
in
inc
aad
jo
mov
dec
popf
mov
flds
mov
xchg
jo
and
pop
bnd
jle
sbb
iret
xor
push
xor
mov
outsb
in
jg
in
adc
push
xor
xor
addr16
jp
clc
or
clc
frstor
insb
sbb
loopne
mov
fisttpl
jo
xor
push
push
cmp
push
add
mov
adc
fisubrs
fldt
adc
dec
jo
in
adc
ja
jns
xor
pop
sbb
mov
cld
or
mov
adc
dec
fcoml
loopne
aad
pop
push
pushf
xchg
test
mov
add
scas
cs
dec
fistpl
ljmp
jle
pop
call
mov
in
jo
xor
sbb
aad
ret
mov
sub
lds
sti
loope
and
fisttpl
cli
insb
out
dec
insl
aad
fwait
in
out
pop
jp
jb
imul
rclb
mov
lcall
jo
mov
imul
add
xlat
js
scas
mov
pop
shll
aad
mul
jbe
mov
add
lods
inc
push
jae
cli
sub
ds
inc
cmpsl
mov
adc
in
test
or
jne
push
js
jo
inc
cmp
inc
push
mov
mov
push
jbe
xor
scas
xchg
fisubs
push
shrl
dec
mov
push
out
mov
jo
push
sti
inc
jo
dec
xlat
dec
push
lea
xchg
sub
jo
insb
aas
mov
jo
cmpsl
in
push
sbb
dec
mov
in
jl
or
lock
mov
mov
ret
jo
or
mov
aas
push
enter
ljmp
xor
or
push
cmpsb
jae
jg
insl
push
push
das
popa
pop
sbb
xor
outsb
ds
mov
stos
cmp
pop
shlb
jnp
xchg
imul
pop
jo
xchg
push
insl
pop
ja
lods
mov
cmp
push
popa
push
jo
cltd
jge
stos
jle
inc
push
lock
dec
sub
jae
pop
pushf
pop
in
jo
mov
jae
xchg
xchg
daa
rcll
jo
jg
ljmp
xor
or
jo
mov
clc
lods
jo
cli
aad
push
xor
cmp
out
xor
mov
cmpsb
loope
imul
enter
jg
in
outsl
jne
jo
out
adc
sbb
sub
or
xchg
jnp
mov
jle
insb
jo
std
imul
jo
pop
xor
rorb
test
fsts
jo
out
in
jp
push
ret
jbe
jns
push
push
jo
loopne
add
subb
leave
pop
mov
pop
mov
fsubrs
in
add
jo
adc
inc
into
mov
jo
or
push
lret
jno
jmp
outsb
and
int3
jo
insl
sbb
jo
and
dec
out
lock
jnp
outsl
jmp
inc
insl
pop
insl
adc
mov
xchg
adc
fdivrp
arpl
jo
divl
push
andb
sti
or
inc
call
add
mulb
xchg
inc
dec
and
pop
jae
out
sbb
insl
loopne
outsl
clc
lods
and
jo
pop
mov
pop
jecxz
cmp
jns
rorb
xor
insl
jo
fidivrs
fsts
push
cmc
jle
outsb
int3
repz
add
jo
push
insl
stc
push
ret
jo
mov
push
out
outsb
or
jo
adc
inc
mov
xchg
jns
aad
outsb
ds
jle
mov
stc
pop
pushl
adc
pop
ljmp
xor
xchg
daa
out
es
in
iret
loope
test
jo
add
repnz
pop
dec
mov
pop
popf
test
cmpsb
mov
clc
sbb
outsl
les
mov
fwait
push
jo
pop
nop
fadds
fldenv
dec
ljmp
jo
sbb
jae
inc
pop
out
lahf
arpl
xor
aad
inc
jp
jno
bound
mov
in
pushf
lods
push
or
mov
shrl
jo
mov
bound
mov
mov
mov
mov
pop
cmpsb
mov
jl
cmp
xchg
loopne
push
test
fwait
sahf
lock
repz
jae
xchg
dec
and
pop
mul
jmp
fstpt
sbb
pop
xchg
jp
add
pop
test
test
pop
insl
mov
push
pushf
add
jae
inc
pop
aas
clc
movsl
mov
dec
adc
xlat
push
fsubrs
subb
mov
inc
push
shll
dec
out
cmp
adcb
scas
hlt
lock
pop
scas
bnd
out
fistpll
or
in
sbbb
or
out
mov
lcall
pop
mov
lock
push
sub
bnd
mov
add
jo
inc
sahf
scas
test
inc
mov
fxam
insl
jecxz
push
pusha
sub
pop
divl
dec
add
aas
cmpsb
cli
dec
roll
mov
pop
test
dec
arpl
mov
xchg
jo,pt
pushf
cmpl
cmc
sbb
jb
aad
inc
les
jae
mov
pushf
mov
and
shrl
divl
push
pop
insl
out
js
jl
scas
push
push
inc
arpl
fwait
cmpsl
jo
dec
call
pop
jp
mov
scas
mov
sub
sarb
pop
mov
mov
dec
mov
and
xchg
sub
ja
aam
jle
es
fwait
cmpsb
xchg
cltd
aaa
insb
fsubrp
mov
aas
lea
pop
pop
jecxz
push
stos
shll
aam
pop
inc
js
or
dec
aad
jle
jo
repnz
and
je
das
jmp
jo
cmp
pop
xchg
out
or
lock
add
push
int
movsl
inc
jb
lcall
mov
mov
jo
dec
inc
xlat
shlb
or
push
nop
cwtl
sbb
inc
push
inc
inc
mov
cmp
lds
gs
sbb
cmp
clc
std
jo
xlat
aad
ficoml
or
arpl
jo
je
mov
test
mov
ja
mov
arpl
call
les
sub
fsubs
jo
imul
ja
inc
cmpsb
cmp
fisttpl
dec
testb
jo
jl
inc
cli
add
xor
push
ss
jle
xor
call
cmpb
jo
mov
xchg
jl
sbb
inc
in
mov
push
pop
mov
lock
insl
loope
cld
enter
sbbb
out
pop
mov
cmpsb
jns
and
daa
xchg
lock
popf
sbb
cmp
insl
ret
cmp
outsb
fwait
or
cmp
adc
sub
jo
cmp
fcmovb
dec
fs
push
ja
adc
dec
fldln2
jo
mov
inc
in
test
leave
and
aad
xchg
jno
or
hlt
cmp
lock
add
dec
jge
jo
xchg
inc
aaa
jno
mov
sub
jo
mov
test
fs
jo
enter
jbe
mov
xchg
mov
dec
push
xor
jo
xor
add
je
call
outsb
lock
int
loope
not
xchg
push
and
dec
lea
sti
xor
add
jo
inc
push
popl
ljmp
cs
jo
insb
aad
repz
jbe
arpl
dec
and
jp
loop
xchg
lret
popf
jnp
imul
or
cmp
ret
and
lock
call
fstpt
xchg
bound
cwtl
pop
jo
movsl
aaa
je
hlt
out
xchg
andb
rorb
push
xor
fstps
cmp
fwait
mov
stos
dec
jo
stos
push
push
jne
mov
pusha
jo
add
call
incl
test
shl
mov
mov
inc
into
and
push
mov
push
and
jnp
roll
pop
inc
push
data16
sub
and
scas
lock
xor
nop
roll
dec
add
enter
add
fdivs
loopne
insl
mov
iret
aaa
movsl
adc
mov
stc
rcll
aad
scas
xchg
jl
cmp
test
ror
insl
idivb
enter
mov
xor
push
lea
push
mov
aaa
and
inc
aam
icebp
jo
movsl
xchg
mov
jo
xor
gs
out
xchg
shll
mov
lock
add
stc
pop
out
cmpsl
call
or
inc
cld
xor
dec
push
jo
aam
sbb
test
dec
cmp
je
lcall
pusha
jo
sahf
mov
adc
xorl
je
mov
xor
sub
lret
adc
cmpsb
inc
in
mov
add
push
in
mov
rcll
jb
xorl
or
data16
dec
or
ja
sub
rorb
out
dec
push
push
outsb
aaa
xchg
push
loopne
adc
jo
or
sub
hlt
testl
mov
shlb
mov
push
dec
jnp
inc
mov
jo
lahf
loop
nop
dec
push
sahf
jo
ret
xchg
xchg
cmp
pop
fidivs
lea
aad
clc
xor
jo
xor
imul
mov
je
mov
and
jns
add
cmp
mov
dec
in
es
mov
test
aaa
jo
aad
xchg
push
movsl
jg
jmp
xchg
mov
into
rdpmc
jo
mov
loopne
jo
aas
jno
out
cmc
stos
insw
mov
mov
mov
pop
inc
cwtl
add
gs
jo
mov
fcmovb
je
push
push
jg
pop
movnti
rclb
nop
pushf
jecxz
stc
aad
cld
xchg
fistl
xchg
in
pop
push
push
cmp
nop
insl
insb
mov
out
jle
or
mov
outsl
ret
loop
cmp
mov
stc
in
cli
lods
mov
cwtl
gs
stos
out
mov
jo
mov
and
sbb
adc
scas
out
es
push
jo
rorl
ja
or
fdivrl
test
repnz
mov
fdivs
lret
jo
adcl
adc
jo
iret
shrl
clc
jo
pop
cmp
mov
adc
cmpsl
hlt
psrlq
pop
xor
cmp
fsts
je
test
iret
sbbb
mov
cmpl
ljmp
rorl
push
xorl
jo
jmp
adc
aas
sub
das
xchg
pushf
cmp
sahf
xchg
inc
xor
insb
pop
or
mov
pop
mov
add
jecxz
bound
xchg
or
popf
cmpsl
xorl
jne
dec
adc
lret
ror
jge
dec
adc
lea
and
lret
sub
les
adc
push
cmp
push
mov
push
mov
jo
and
push
pop
xor
shrl
in
or
dec
nop
dec
jo
cwtl
cmp
subl
lods
jae
xor
xchg
sahf
test
jo
sub
adc
or
cmpsb
cmp
mov
dec
jge
inc
shll
test
mov
pop
cmp
call
xchg
cmp
add
stos
add
adc
js
pop
nop
inc
adc
stos
mov
arpl
xor
adc
aam
lods
xor
fistl
adc
jae
sub
fisubl
mov
add
push
cmpsl
cmpsb
mov
mov
xchg
jne
dec
pop
xchg
push
sbb
mov
push
cmp
lret
test
xchg
push
shlb
scas
mov
sbb
popa
test
shlb
jmp
cmp
stc
hlt
pop
xchg
and
leave
ss
jnp
mov
flds
fstpl
fsub
les
jns
or
in
push
inc
push
lock
cld
jp
out
jo
inc
jo
mov
and
fstpl
test
stc
jo
in
arpl
mov
imul
cmp
push
enter
movsl
call
hlt
incl
xchg
push
inc
mov
lea
fdivl
js
outsl
test
xor
sahf
or
jge
mov
jo
jne
push
addr16
mov
mov
jo
jge
flds
push
lcall
aam
lock
push
mov
dec
lods
cmp
fdivs
mov
xor
insl
jecxz
dec
cmpsl
cli
iret
out
loop
jo
mov
dec
jo
repnz
push
jo
pop
xchg
push
jo
cmc
cmp
sbb
add
test
lods
dec
aad
xor
jo
adc
hlt
lea
jbe
dec
lock
lahf
pop
jb
jo
mov
fcoms
je
out
pushf
mov
outsb
cmpsl
mov
mov
call
arpl
dec
mov
enter
pop
push
iret
data16
xchg
out
aad
in
xchg
jo
js
lds
int
mov
inc
roll
xchg
sub
pop
and
cmpl
xor
dec
mov
lea
jo
pop
add
ja
inc
add
jle
lcall
int
push
sbbb
add
incl
push
ja
pop
push
int
shlb
les
cmp
add
mov
pop
dec
arpl
cld
jnp
mov
sti
lock
and
xlat
test
inc
jae
and
sbb
add
jno
lret
xchg
push
fidivrs
int
scas
jg
les
push
mov
clc
cwtl
jo
outsl
jecxz
push
pop
femms
pop
mov
inc
imul
dec
loope
cmp
clc
jnp
xlat
rol
lock
jnp
adc
stc
sbb
cli
imul
jo
mov
dec
pop
shll
push
mov
jo
cwtl
aad
and
int3
add
inc
xor
dec
sub
xchg
ret
xlat
ja
mov
jg
loopne
mov
pop
jne
adc
add
icebp
jo
sub
vpand
inc
add
mov
and
dec
fisttpll
ftst
test
cmp
adc
popf
and
adc
sbb
adc
push
push
xchg
test
or
xor
iret
cs
jo
xor
call
add
or
in
pop
dec
dec
mov
nop
jmp
push
xchg
push
jmp
jo
mov
xchg
adc
data16
subl
xchg
mov
sub
mov
sbb
mov
push
es
xor
mov
idivb
outsb
loope
nop
push
pushf
and
sbb
ja
pop
sbb
in
mov
inc
rolb
xchg
scas
fisttpl
sbbb
adc
mov
shl
xor
loop
mov
outsl
dec
add
repnz
fwait
cltd
add
pushf
stos
mov
call
ficoml
push
pop
adc
push
stos
jecxz
cltd
push
movsb
jbe
jo
mov
xchg
push
mov
adc
imul
je
mov
fisttpl
adc
add
push
cmp
jbe
pop
xor
cmpl
cwtl
lock
push
jae
pop
jo
icebp
out
adc
clc
cmp
aad
cmp
daa
mov
pop
shrb
out
jle
nop
push
sub
jo
push
and
jo
dec
xchg
add
sub
bound
shrl
mov
jbe
dec
jo
xor
xchg
les
push
inc
pop
add
or
jo
sub
mov
dec
mov
sub
and
nop
es
ja
fimuls
nop
call
push
nop
push
jo
jle
fcom
pop
lea
cmpsl
mov
pop
shll
loopne
jno
and
jae
ret
jge
xchg
in
iret
mov
adc
insw
je
out
mov
fists
mov
or
dec
jo
xchg
mov
outsb
jne
js
and
cmpsl
lock
insb
data16
push
fnstcw
insl
mov
in
pop
inc
cld
out
mov
cmpsb
into
xchg
scas
jo
int
js
addr16
dec
jo
mov
inc
push
fldln2
pop
jo
push
in
aam
pop
shrb
popf
xchg
es
sub
xor
sbb
push
mov
cmp
stos
cld
pop
push
mov
clc
dec
push
push
jge
xor
push
jo
lds
ljmp
in
adc
inc
out
or
and
outsb
or
mov
push
sub
add
aad
stos
cmp
push
rorb
imul
lock
cld
sbb
xor
jns
orb
jo
lds
aam
pop
dec
call
add
aaa
rcrb
jns
xchg
pushf
fisttps
sub
xchg
jo
dec
popf
fstpt
mov
shlb
mov
sbb
mov
nop
adc
adc
shll
sbb
shrb
into
inc
sahf
jo
fnstcw
shll
jg
sarl
xor
lods
repz
scas
int3
cmp
gs
pop
jo
xchg
xchg
je
and
ss
push
shll
adc
xlat
jae
outsl
add
arpl
icebp
push
stc
jno
jg
or
jo
fstps
add
sbb
in
or
imul
mov
jo
pop
xchg
dec
push
pop
lods
dec
repz
push
aas
pop
mov
jo
mov
push
or
add
data16
cmpsl
mov
pop
es
lret
clc
push
mov
ss
inc
or
xchg
into
jo
in
xchg
jae
bnd
lahf
inc
mov
cmp
ficoml
dec
call
aam
adc
enter
cmpsb
movntq
sub
js
jo
cld
stos
inc
mov
mov
sarb
mov
fld
imul
dec
stos
daa
adc
or
fldenv
sbb
ljmp
inc
cmp
shll
lea
jne
adc
lock
jb
xor
in
mov
stos
jnp
push
or
lock
je
dec
test
shl
notb
mov
mov
pop
in
push
and
mov
adc
pop
insl
mov
mov
add
push
mov
or
sbb
lea
jo
jbe
hlt
cld
mov
pop
fchs
add
repnz
push
test
sub
xor
inc
push
sbb
insl
lock
call
mov
aaa
or
jmp
cmpsb
add
xchg
push
xchg
xor
gs
xorl
xchg
dec
mov
dec
lahf
mov
lock
lods
jmp
xlat
stc
pop
dec
inc
jo
call
add
das
aas
mov
adc
jl
push
gs
inc
xorb
inc
dec
jns
fwait
lahf
addb
jg
xor
push
jo
mov
cld
mov
xchg
inc
jo
and
shrb
add
ret
jo
mov
mov
inc
push
sbb
dec
fistpl
lret
xchg
loop
push
adc
inc
mov
gs
popa
shlb
xchg
in
cmc
pop
pop
rcr
je
and
lret
out
ret
mov
in
jo
stc
fildll
leave
mov
cld
andb
testb
add
jo
movsl
pop
lods
popa
sbb
gs
les
daa
cmp
mov
mov
ja
enter
adc
dec
or
jnp
outsl
xor
cmp
pop
xchg
xor
mov
fcmovnu
jge
or
jo
mov
adc
mov
outsl
lods
or
fisttpll
aad
imul
ljmp
cwtl
leave
pop
andb
dec
nop
jo
rcll
aad
insl
push
mov
mov
xorb
rcl
jecxz
idivb
mov
inc
inc
jmp
loopne
cltd
or
arpl
pop
and
out
sbb
push
mov
adc
jmp
lods
jo
push
jp
add
imul
mov
and
jp
jo
mov
dec
imul
mov
fs
scas
fwait
and
sti
mov
xchg
in
xor
ret
xor
lea
push
pop
mov
jo
add
inc
mov
xor
jge
fstpt
jp
xor
ret
pop
sbb
adc
emms
inc
mov
add
xchg
test
test
inc
out
inc
insl
add
aad
jmp
jo
inc
jg
in
xchg
jo
daa
push
push
push
or
mov
xchg
push
sub
jnp
nop
jne
std
fs
out
jo
inc
iret
lret
out
jae
or
std
add
cmpsl
and
dec
sbb
lret
shr
cltd
arpl
lock
fidivrs
movsb
dec
adc
jo
popf
mov
jo
xor
xchg
jo
dec
mov
ret
mov
movsb
or
jge
das
out
int3
outsb
es
xor
test
insb
pop
pushf
lds
jl
call
cli
push
jo
push
cmc
aas
sahf
sbb
push
sbb
sti
lods
jo
fdivr
dec
bound
insl
pop
nop
fcmovnbe
dec
jo
pop
cmpsl
sahf
jmp
sbb
lret
jo
into
pop
sahf
lcall
fldcw
les
insb
xchg
jle
insl
dec
cmp
push
mov
icebp
push
in
out
sbb
addb
dec
outsl
pop
pusha
jnp
scas
sub
jno
lcall
jne
push
cmp
inc
sbb
mov
lods
fildl
int3
and
xchg
scas
jne
into
dec
cwtl
shlb
dec
dec
xor
sti
adc
cmpb
in
iret
pop
stc
push
cmpsb
lcall
jbe
cltd
push
sahf
jo
add
data16
mov
shlb
fcompl
cltd
mov
aad
inc
adc
adc
mov
cmp
jo
sbb
shll
jo
ss
aad
fidivrl
push
pop
jle
outsb
mov
mov
rorl
jae
xchg
roll
sahf
jo
sub
xor
pop
pop
mov
jmp
jo
call
leave
add
neg
ja
sub
stos
iret
out
jae
cmp
in
xchg
jo
sub
add
or
dec
std
enter
clc
or
jo
ja
movsb
daa
jo
add
jns
ret
insl
xor
jb
inc
lret
push
ja
aam
mov
int
gs
out
and
sbb
pushf
jo
add
andl
cmpb
jo
xor
mov
cwtl
pop
insb
and
aaa
xor
xchg
insl
lock
cmp
imul
jne
fmuls
xor
jb
gs
xlat
push
pop
in
mov
imul
rcl
insb
shlb
pop
fsts
jo
and
jmp
lret
sbb
pop
and
add
add
les
lahf
dec
aas
dec
jbe
stc
dec
call
stos
inc
ficoms
aad
pop
jae
insb
push
push
inc
ja
inc
call
xor
push
mov
jo
pop
sub
fwait
push
cld
mov
ret
and
jo
test
jne
mov
pop
push
lock
fdivr
cmp
jo
inc
and
fisttpl
jo
and
dec
shll
push
jo
in
cmpsb
xchg
lret
inc
jo
inc
scas
mov
or
jle
add
fimuls
push
xchg
addr16
pop
imul
rorl
push
test
lock
shrb
sub
push
jo
stc
push
xlat
jmp
sarl
es
mov
data16
mov
and
jo
adc
aad
jo
jle
popf
lock
shlb
push
mov
ja
shll
movsb
jnp
imul
jo
xchg
in
loopne
pop
subl
rcll
imul
cmp
mov
and
jg
add
call
push
cmp
xchg
adc
dec
and
mov
jne
scas
popf
cmp
xchg
push
cmp
mov
jb
or
inc
jo
nop
test
mov
inc
je
movsl
testl
xchg
inc
mov
push
push
mov
jo
pop
add
in
sahf
popa
movsb
test
ljmp
mov
fs
stos
mov
pop
mov
add
jo
sti
jns
sub
pop
arpl
shlb
sbb
loopne
jo
add
jo
jne
rcl
mov
lret
fbld
pop
push
into
icebp
insl
adc
adc
push
mov
mov
and
nop
test
jg
and
jo
leave
outsb
pop
mov
dec
mov
mov
data16
popa
dec
out
jo
fdivl
mov
inc
jne
or
mov
jo
loopne
push
jmp
lds
arpl
jb
loop
andl
xchg
jp
mov
lea
cmp
adc
sbb
pop
mov
ret
sbbb
lds
fstps
jo
fldt
out
jae
push
insl
push
sbb
cmovae
push
nop
cmp
jo
aad
lcall
xor
adc
mov
pop
shll
mov
xchg
or
push
mov
jecxz
pop
and
pop
lods
stc
fildl
jo
std
xchg
das
lds
jno
dec
mov
or
iretw
jne
shlb
leave
shrl
push
ss
fxch
xor
outsb
pop
rolb
push
jno
mov
loopne
enter
inc
popa
push
or
jne
jmp
movsb
test
xchg
mov
lds
sbb
cmpsb
push
push
das
lods
push
inc
xchg
xor
je
mov
int
jmp
inc
rcrb
mov
xchg
jle
xor
pop
jo
mov
xor
push
int3
jae
mov
gs
popa
jo
and
call
jo
mov
out
cld
pusha
sti
pop
add
lods
addl
bound
jo
cmp
out
dec
gs
lret
pushf
cmpsb
pop
jo
std
jecxz
enter
and
sub
bsr
jo
aaa
and
push
mov
fcompp
aad
subl
repz
dec
mov
loop
mov
lea
pop
mov
adc
int
das
fsts
into
jo
xor
adc
lret
jo
pushf
sbb
xchg
fcom
ficoml
dec
cli
mov
xchg
xor
inc
cmp
lcall
cwtl
jo
pop
fcomi
xchg
ret
or
test
inc
dec
lock
xchg
cmp
lock
push
or
test
jns
xchg
push
jle
jo
mov
lea
mov
sub
dec
arpl
push
push
xlat
jo
ret
in
mull
movsb
inc
sbb
dec
rolb
arpl
fcomi
outsb
jo
scas
xor
adc
sub
mov
aaa
stos
outsb
stc
nop
cmpl
jo
js
sub
sahf
mov
ffree
sub
sarl
push
mov
add
mov
jae
cmp
push
fwait
out
ss
dec
sub
jle
xchg
mov
mov
and
xor
aad
cli
notb
popa
mov
test
add
test
adc
out
jo
cmpb
jecxz
jo
push
dec
lea
roll
mov
flds
scas
adc
add
bound
clc
push
inc
dec
faddl
aad
jp
jecxz
add
xchg
dec
ljmp
cmp
sub
aad
int
mov
jecxz
ret
mov
lret
cmp
mov
xchg
fsubl
jo
cmc
fnstcw
fstl
ja
sub
clc
pop
mov
lea
mov
jmp
push
out
jnp
jo,pn
sbb
jo
push
rcl
insl
popa
icebp
pusha
pop
fildl
jo
orb
push
inc
dec
jno
in
jmp
and
dec
cmp
les
inc
test
cli
jo
mov
fcmove
rcrb
into
je
mov
pop
jne
in
sbb
outsl
popf
adcb
pop
mov
xchg
add
push
mov
jo,pt
sub
inc
xchg
mov
jo
aad
xchg
or
loopne
inc
das
sub
jo
inc
fwait
cmpsl
xchg
mov
js
mov
mov
push
jb
sub
xchg
insl
mov
pop
fiadds
stc
jo
cmpsl
jge
mov
jecxz
fcomp
imul
lea
out
xor
add
stc
jo
aad
push
std
loopne
shlb
cmpsb
fistl
jo
xchg
subl
inc
mov
dec
lret
inc
pop
lret
add
mov
xor
adc
and
cld
inc
xor
rorl
lock
adc
int
add
stos
jno
les
jae
or
mov
xchg
mov
adc
faddp
enter
stos
cmp
jb
and
dec
sbb
sbb
scas
jmp
clc
jo
cmpl
mov
xchg
hlt
cli
shlb
dec
shlb
mov
jmp
mov
out
into
aad
jp
cmp
jo
add
pop
and
cltd
lock
dec
jnp
dec
out
adc
pop
xchg
lock
cmp
ss
inc
aad
dec
or
loope
jo
pop
sarl
push
pop
xchg
push
insl
push
dec
test
inc
fucomp
add
dec
lock
sahf
dec
cmp
flds
cpuid
push
jno
jo
rcr
mov
aam
into
jo
pop
repz
or
mov
es
aaa
sbb
xor
loopne
aaa
je
jo
loop
inc
fisttpl
pop
jnp
daa
adc
aaa
add
jge
add
data16
or
subb
mov
out
lds
fmul
pop
push
mov
mov
dec
je
push
loop
fbstp
ja
xor
pop
xchg
loopne
cmp
jns
frstor
rorl
pop
outsb
xor
xor
fnstenv
test
rclb
cmpsb
je
add
adc
aaa
out
xor
jo
mov
add
push
scas
les
jo
nop
lea
mov
dec
or
call
jo
mov
aam
sbb
or
or
das
shll
adc
push
jno
sub
push
or
pop
dec
stos
sti
jnp
lock
pusha
test
repnz
ja
add
adc
lcall
mov
jo
les
push
xchg
aad
shrb
xor
or
jo
pop
mov
pop
push
inc
push
jo
xchg
inc
roll
insl
cmpsl
inc
mov
mov
jmp
inc
cmp
cmp
aad
fnsave
fisubrl
mov
insl
in
mov
adc
add
add
mov
mulb
jl
mov
cmp
lret
jnp
adc
enter
pcmpgtw
dec
mov
sbb
aad
jno
fwait
popf
jo
cltd
rol
loopne
fisttps
lret
mov
push
jbe,pn
sbb
mov
shlb
push
add
lods
inc
fdiv
push
lock
mov
jo
pushf
test
sbb
cmpsl
cmc
dec
cmp
fdivl
sti
lea
push
dec
pop
jo
jle
or
dec
push
lock
test
call
mov
in
jne
inc
aas
cmpsl
lock
ficoms
gs
and
mov
inc
dec
sbb
sub
jo
out
mov
jo
jp
add
insb
mov
pop
sbb
ja
aaa
into
add
or
rolb
enter
xchg
outsb
pusha
add
nop
popf
call
mov
outsl
inc
ds
adc
das
fidivrl
in
mov
pop
ss
pop
inc
pop
jo
sti
mov
jo
scas
push
pop
aad
xchg
imul
mov
fcomp
mov
fldt
xchg
pop
xorb
push
push
addb
aad
shr
lods
loope
xor
inc
jle
nop
daa
insl
xchg
aas
push
push
mov
jae
and
mov
cmp
mov
into
jg
mov
mov
lods
stos
stc
cltd
cwtl
jbe
mov
fistps
mov
ds
inc
mov
xchg
fmull
inc
xor
jnp
push
mov
dec
xor
mov
cmp
outsl
jge
push
in
inc
jo
movsl
jecxz
roll
jo
pop
mov
scas
aad
int
push
mov
add
call
mov
jne
stos
lock
inc
mov
cmp
test
push
icebp
inc
and
fisubrs
mov
movsl
addr16
ret
pop
insb
imulb
roll
scas
clc
les
xor
jmp
ja
lods
andl
loopne
adc
insl
pushf
pop
clc
lods
jle
test
xor
mov
push
rol
addr16
jle
pop
adc
nop
aam
xlat
pop
xor
dec
shrl
addr16
pop
lahf
setns
movsl
pushf
iret
jo
cmp
mov
push
mov
jo
shll
imul
addr16
mov
mov
bound
sbb
shrl
xor
xor
pop
pop
mov
pop
imul
test
fstpl
aad
jo
push
jl
insb
mov
push
mov
jbe
divl
mov
jo
sti
mov
ja
xor
and
lret
lock
cmp
loopne
jo
arpl
add
fwait
lock
mov
out
cmp
and
shlb
jo
cmp
cmp
jo
movsl
stc
push
stos
fstpt
jp
rorl
dec
jo
jae
lret
push
adc
push
push
aaa
xorl
aas
mov
call
sub
call
lds
or
sbb
push
push
int3
mov
inc
mov
mov
lock
push
test
insl
push
aad
jae
dec
push
push
or
xor
dec
test
fnstenv
cmpsb
int
in
inc
xor
aad
sub
fld
add
ja
mov
xor
fwait
test
lret
pop
test
lcall
and
aad
test
mov
bound
xchg
jo
xlat
rcrl
out
pop
mov
and
cmp
fidivl
dec
cltd
jo
sbb
rcl
pusha
pop
mov
nop
xlat
loop
add
int
bound
xchg
jo
lds
in
ljmp
pop
inc
addb
stc
cmp
pop
jbe
test
cltd
push
mov
pop
mov
mov
jo
fimuls
stos
pop
in
xchg
out
movsl
mov
adc
pop
mov
in
ja
or
test
push
jecxz
insl
jo
mov
pop
sbbb
lock
data16
pop
clc
fildl
mov
push
inc
aam
pop
jo
or
mov
jg
rolb
imul
pushf
mov
out
add
adc
jo
push
outsl
lock
push
hlt
cmp
xor
jo
or
dec
in
enter
xor
push
stc
push
aas
rcl
jo
sarb
or
out
pop
xchg
pop
cmp
aad
shll
xlat
and
inc
rolb
dec
mov
ja
cmp
fldcw
sti
cmp
aaa
mov
xlat
nop
pop
xchg
push
imul
jp
sti
jo
add
xorb
sub
out
adc
ja
or
sub
and
test
jecxz
xor
jge
jb
mov
xor
imul
jp
fnstsw
xor
jp
adc
inc
mov
fmull
nop
xlat
push
push
push
jmp
and
mov
jbe
jge
sub
test
jo
mov
ds
jo
repnz
adc
push
ljmp
xor
push
add
sti
repz
jo
pop
test
dec
cmovl
lods
lock
and
adc
jecxz
xlat
dec
pop
popa
rcll
xor
mov
fxch
clc
imul
mov
stos
daa
mov
ljmp
fcompl
or
sbbb
jno
jge
jo
pop
push
xchg
mov
xor
shll
daa
dec
cmc
divb
incl
or
jmp
mov
mov
adc
in
and
in
jo
aad
pop
mov
ss
xor
hlt
cmp
cmpsb
inc
nop
dec
mov
test
sub
pop
mov
add
cld
lock
dec
and
push
xchg
jno
add
rcl
jp
dec
mov
lock
movsb
hlt
inc
cmp
mov
pop
jge
cmc
jo
jbe
int3
pop
push
jo
and
nop
mov
adc
aam
das
popa
insb
jo
aaa
add
jno
jnp
rorl
mov
sub
cmova
nop
sbb
and
push
jbe
loope
negb
jo
xlat
in
mov
insl
aam
mov
xchg
outsb
sub
repz
movsl
adc
push
ret
push
push
insl
xchg
lahf
repnz
mov
jmp
insb
mov
scas
aad
mov
js
ficoms
call
lods
jo
repz
jnp
fucom
dec
daa
or
cmp
into
lea
jo
and
mov
in
out
mov
jo
movsl
add
scas
or
and
jb
repz
addb
sub
cmp
push
pop
pop
pop
loope
jge
rcrl
ja
jo
scas
xchg
pop
loopne
push
dec
jo
divl
dec
mov
jnp
je
sub
pop
push
mov
mov
sub
test
sbb
and
fnstenv
lret
add
or
jo
or
call
jle
mov
mov
mov
adc
out
out
shll
inc
aad
dec
jne
cmc
arpl
sbb
enter
mov
inc
pop
loopne
inc
scas
push
jo
test
jg
jo
mulb
stos
ret
jmp
call
cli
fsts
sub
mov
fs
push
arpl
test
lea
and
pop
imul
fistl
lods
or
dec
jmp
jo
mov
or
push
inc
mov
mov
dec
lods
cltd
or
push
pop
dec
jo
push
cmc
shrb
push
shll
ds
jno
subb
leave
sbb
pop
cwtl
sahf
out
and
fs
mov
test
or
imul
jo
arpl
dec
jo
push
mov
aas
push
push
addb
in
mov
sbb
push
xchg
mov
shlb
sub
xor
arpl
xor
add
lock
sbb
lea
jecxz
bswap
fwait
sbb
je
ficoms
jo
xor
mov
lret
push
or
dec
pop
inc
testb
xchg
ficompl
test
outsl
adc
insl
jo
loopne
fisttpll
xor
insl
xor
add
xor
cmc
push
stc
adc
mov
and
jmp
add
fdivl
iret
add
cmp
sahf
insl
fs
and
inc
mov
les
jo
jge
sbb
jnp
arpl
or
test
into
pop
mov
push
dec
push
push
mov
lds
int3
mov
int
mov
push
loopne
nop
add
in
shlb
dec
jecxz
call
inc
xchg
or
jnp
and
out
ljmp
jo
cmpsl
xchg
fsubl
hlt
add
loop
pushf
adc
add
imul
mov
push
mov
or
fsubrl
stos
inc
jae
inc
insl
sub
xchg
cwtl
mov
xchg
imul
dec
mov
pop
pop
dec
push
loopne
nop
inc
popa
mov
adc
inc
loop
mov
pushf
xchg
into
jo
xchg
popf
imul
loop
inc
push
add
add
arpl
and
xlat
jo
cwtl
mov
xor
pushf
push
push
arpl
sbb
inc
test
jo
aad
aam
lcall
dec
addr16
adc
rorb
add
lock
imul
out
test
out
in
pop
or
push
jo
leave
mov
mov
add
jo
lds
xchg
icebp
ljmp
jo
mov
outsb
enter
sub
pushf
add
jno
ja
scas
jge
mov
aam
fldt
bound
cmp
lcall
mov
fcompl
outsl
shlb
mov
jo
mov
mov
mov
sbb
sbb
adc
test
push
mov
sbb
pushf
subl
and
jo
sbb
cmpsb
pop
fwait
jo,pn
pushf
cwtl
movsb
test
test
inc
shl
mov
shrb
stos
mov
mov
push
mov
xorl
ja
leave
jo
cmpsb
jp
fdivr
jmp
insl
nop
mov
cmp
mov
aas
adc
inc
shll
xor
ss
and
cmp
add
repz
push
into
inc
insb
add
jno
iret
dec
std
pop
jo
sub
and
jo
sub
popa
jae
hlt
xchg
pop
fwait
inc
idivb
sbb
xchg
xor
bnd
negl
pop
ja
shl
in
mov
jo
mov
test
push
jo
dec
fsubl
push
sbb
cmp
shlb
and
cmp
imul
mov
ret
push
in
repz
test
fs
pusha
in
jecxz
push
jo
fbstp
lahf
jo
sbb
shll
pop
mov
lcall
xchg
and
push
add
mov
or
repz
aas
mov
or
loope
mov
mov
push
mov
mov
push
push
xlat
jo
mov
push
jecxz
scas
mov
cwtl
pop
lods
jge
inc
sbb
jo
push
sar
inc
inc
jns
jo
jae
pop
movl
mov
mov
mov
sbb
push
call
adc
push
jo
xchg
stc
sbb
icebp
cmpsb
lock
inc
aam
xor
dec
ljmp
sbb
lods
test
xor
pop
mov
jo
mov
sub
dec
ja
mov
out
pop
xor
xchg
mov
jne
jmp
insb
jg
cmp
rorb
sub
xor
shll
scas
adcb
jbe
xor
xchg
pushf
push
cmp
insl
pop
outsl
sarl
adc
mov
fsubrs
or
pop
jp
sub
outsl
add
add
xor
insb
iret
pop
add
jo
mov
jmp
lock
cltd
sub
mov
mov
mov
sbb
test
pop
jno
jo
addr16
jle
loopne
movsw
xor
cmc
fcomps
cmp
insb
mov
inc
dec
loope
adc
pop
inc
fidivrs
jl
xchg
inc
or
sbb
out
insl
dec
push
xlat
dec
cmp
jo
shlb
jo
data16
cmp
hlt
jl
mov
aad
aaa
jae
sti
adc
cmp
mov
ljmp
jo
xor
mov
insl
jne
dec
xchg
or
aaa
test
jo
xchg
mov
rorb
pushl
adc
sti
add
mov
add
scas
sbb
loopne
push
imul
pop
mov
xchg
jne
shll
mov
push
in
add
or
push
les
das
cmp
js
sahf
sbb
sbb
mov
add
lods
loope
jo
pushf
cld
sub
pop
xchg
push
add
jo
std
xorl
sti
popf
pop
xchg
sub
mov
xchg
or
ds
lahf
mov
sbb
jae
aad
mov
fistl
lahf
push
rcll
lret
dec
stos
add
jo
add
into
xor
aad
fstpt
sbb
add
or
pusha
insl
xchg
cltd
push
add
repz
rcrl
xchg
sub
je
push
in
xor
inc
scas
dec
jno
cwtl
int
insl
push
stos
cli
insl
imul
xchg
cmpsb
shlb
push
or
fs
dec
imul
sbb
jp
adc
sub
or
lea
std
adc
lock
fcom
addps
push
dec
xchg
and
leave
mov
jo
jne
popa
insl
sbb
jo
jbe
pusha
enter
add
nopl
push
cmp
push
inc
inc
clc
es
add
jb
mov
ret
jno
mov
out
push
lcall
loopne
adcl
movsl
mov
add
stos
mov
mov
out
push
mov
or
jo
pop
leave
fbld
es
mov
jmp
push
jo,pn
std
dec
fldcw
jne
jo
push
jno
inc
inc
aad
insl
repz
ret
mov
adc
xchg
shl
mov
int
je
lcall
mov
dec
push
test
out
xor
mov
cmc
and
sbb
je
pop
stos
mov
lock
jo
sub
enter
insl
loop
mov
fdiv
in
add
lret
inc
cmpsl
pop
les
jo,pt
mov
jl
cmp
pop
xor
dec
insl
push
mov
lods
jno
jo
pop
outsb
xor
insl
fmulp
jo
add
sahf
dec
xchg
fsubs
jno
stc
dec
mov
jo
jno
xor
movsb
ss
mov
jo
cmc
andb
cwtl
cltd
aad
testl
and
jo
jne
ds
pop
jo
fistl
jo
xor
ret
jo
iret
popf
scas
pop
mov
adc
xchg
xchg
in
and
jge
fdivl
mov
or
mov
in
fisubrl
hlt
fwait
mov
sub
nop
test
xor
cwtl
jo
lret
push
sub
das
push
adc
lods
fldt
aad
in
mov
pop
popa
cs
and
pop
mov
push
mov
xor
aaa
jae
mov
cwtl
lret
outsb
jo
insb
test
xorl
iret
data16
or
fisubl
jl
or
push
xchg
push
inc
test
pop
imul
lret
inc
adc
shlb
cmpsb
adc
add
dec
lock
and
jecxz
jo
lret
xchg
pop
inc
outsb
xchg
dec
cmp
mov
sti
cmp
xor
jae
mov
lock
fdivs
push
cmp
clc
fnstenv
mov
fistps
aam
fildl
mov
out
loop
sub
inc
into
cmpsb
test
pop
imul
lods
jo
fldpi
xor
jg
outsb
pop
pushf
mul
frstor
lock
out
dec
pop
mov
sbb
mov
inc
hlt
xor
pop
mov
shlb
pop
call
jb
jo
push
jae
xorl
insb
addr16
add
dec
sbb
rcll
aaa
mov
std
jo
int
ss
xor
insl
pop
out
insb
xchg
lret
mov
jo
sti
dec
push
xchg
mov
adc
lods
dec
stc
leave
iret
lea
push
mov
or
js,pt
imul
movsl
push
adc
xchg
ja
dec
sub
rcrb
push
out
lock
mov
dec
jae
iret
adc
xor
push
inc
add
insl
js
fnstenv
inc
mov
add
mov
jo
push
mov
xor
cld
jo
out
adc
in
sbb
cmpsl
fcmovne
dec
in
in
mov
cmp
scas
shll
pop
push
movsb
or
or
aad
gs
xor
sbb
lock
or
add
jo
sahf
sbb
rclb
cmpsb
sub
jo
sti
push
lds
mov
shll
fdiv
push
popa
push
jb
fadd
dec
adc
cli
clc
enter
push
mov
or
insb
and
dec
jne
pop
aas
and
push
seto
pop
push
mov
ss
mov
cmp
lea
dec
lds
add
sub
ljmp
pusha
divb
scas
lods
sub
sbb
cli
cltd
xchg
jo
nop
jns
mov
rol
fistpl
add
bound
xor
xchg
bound
dec
mov
sub
and
lret
sbb
cltd
out
fdivl
hlt
mov
push
jnp
imul
test
push
int
roll
cld
cmp
loop
aad
jo
sub
cmp
dec
std
jne
cli
loopne
or
mov
test
rorl
fwait
push
fsts
fsubs
pop
mov
sar
jo
cmc
push
inc
fsts
mov
xchg
push
shlb
jo
sub
dec
add
mov
test
sbb
push
mov
lock
into
jecxz
fcoml
jae
add
mov
gs
xchg
and
inc
jo
mov
jo
xchg
push
xchg
mov
movsl
mov
jo
add
dec
inc
jae
mov
sub
aaa
mov
divb
cmp
jmp
int3
pop
leave
aas
movsl
mov
mov
push
insl
in
mov
mov
or
ja
cmc
mov
mov
cmp
subl
jo
into
xor
negl
out
jns
lods
jbe
lock
add
jo
jnp
fs
jo
lds
mov
sbb
add
fsts
aam
sub
jge
aad
jo
push
out
jae
addr16
iret
inc
repz
test
pusha
bound
std
mov
xchg
jo
pop
out
pop
repz
jns
xorb
fstps
notl
call
imul
mov
lret
std
insl
sbb
sbb
or
js
inc
sarb
xor
test
jbe
jo
mov
jmp
data16
push
pop
testl
inc
or
jo
lahf
repnz
ja
outsl
rcrb
in
jo
aad
in
rcl
jge
iret
mov
or
adc
adc
clc
insl
ja
sbb
inc
push
mov
fimuls
loopne
sahf
jnp
jo
pop
aaa
insl
dec
mov
cli
jns
mov
ss
aad
out
mov
cmc
xchg
dec
outsb
fildl
stos
xchg
shll
das
lea
mov
cmp
sub
cli
out
addl
pop
inc
jo
icebp
flds
sub
or
fists
orb
cmp
scas
outsb
xor
mov
mov
ljmp
mov
jge
mov
adc
imul
sbbl
inc
std
sub
fldenv
lea
stos
in
lahf
dec
jo
ret
push
jne
data16
jo
xchg
mov
dec
push
fcmovb
aad
xor
or
imul
idivb
lea
jg
into
packssdw
outsl
enter
testl
jo
fildl
push
push
adcl
adcb
add
aam
jne
or
dec
dec
insl
cli
lock
jmp
lods
lcall
fld
inc
shll
imul
sti
pop
scas
inc
xchg
jo
adc
pop
gs
inc
mov
push
nop
mov
jo
pop
pop
in
in
add
das
xchg
mov
xchg
stos
mov
sarb
fcoml
insl
push
jae
loope
movsb
dec
movsl
shlb
mov
jo
push
popf
adcb
scas
jo
mov
enter
ds
aad
pop
call
popf
mov
in
in
pushf
mov
loopne
cmp
push
shll
movsb
dec
jo
movsl
add
sub
jo
lret
inc
jnp
or
lock
mov
aad
xor
aas
jo
ss
mov
lcall
nop
jne
jo
pushf
iret
or
aad
xchg
insl
jmp
dec
xchg
pop
jo
je
addr16
or
xor
cmp
jg
cli
fwait
scas
xchg
jo
pusha
mov
movsb
pop
or
dec
add
mov
sbb
sub
jo
cli
daa
inc
jge
scas
pop
jo
push
add
knotw
jo
cmp
push
dec
mov
jecxz
mov
or
cs
and
xchg
xchg
insl
shl
into
or
cmp
mov
jo
fwait
lds
lods
sub
mov
leave
xlat
int
stos
sti
lods
xchg
jo
jge
mov
bound
xchg
insl
push
xor
es
xor
jae
fisttpll
pop
or
loopne
ja
cmpsb
sub
ds
cwtl
xor
jae
xor
clc
loope
insl
pop
xor
push
in
push
shrl
mov
rcll
cmp
mov
sbb
ljmp
mov
xchg
pop
push
jmp
mov
adc
out
push
movsb
mov
subb
cmpsl
pushf
push
adc
in
or
roll
jo
out
pop
popf
icebp
mov
sub
shll
xor
mov
add
insb
add
shlb
out
pop
mov
xor
pop
adc
pushf
sbb
mov
leave
dec
cli
mov
repnz
dec
sbb
call
xchg
flds
mov
mov
fucomp
das
add
leave
lods
aas
pop
push
mov
imul
jge
lock
cs
je
pop
stos
push
ret
jo
popa
jne
adc
or
shll
scas
dec
mov
bound
aas
jo
inc
mov
adc
in
pop
test
call
cld
popf
inc
pushf
inc
jo
aad
mov
add
in
sub
shl
adc
mov
cmpsl
fcompl
mov
mov
rdmsr
in
or
jo
add
aas
adc
fnstenv
sbb
nop
inc
jne
cmpsb
or
insl
imul
test
push
ja
call
shlb
mov
mov
mov
adc
inc
mov
push
jo
cmpsl
lock
data16
ret
roll
mov
jo
cmp
pushf
sti
or
cmp
lret
sti
mov
lea
jae
fisubrs
pop
cmp
insl
inc
sbb
js
inc
mov
push
enter
push
mov
xor
jo
mov
shl
gs
aad
jecxz
fcomp
inc
mov
mov
or
and
mov
into
loop
jo
hlt
push
xorb
movsb
fisubrs
jp
outsl
inc
xlat
addr16
sbb
jecxz
fistl
adc
add
subl
sbb
sar
dec
jo
fnstcw
xor
jb
add
out
pop
sbb
cli
cmp
fsubrl
xlat
ficomps
aad
mov
jns
inc
jo
push
test
pop
movsl
in
mov
shlb
mov
ss
xlat
lret
mov
orl
ss
jo
ret
int3
pusha
pop
les
rcrb
mov
jo
aaa
es
xor
pop
jo
push
add
sub
and
ret
ldmxcsr
fnstenv
mov
push
sahf
add
mov
outsl
inc
dec
push
jo
add
or
pop
and
es
lods
xchg
ja
mov
sub
cmp
jno
jmp
movsb
xchg
jo
cmp
jl
and
imul
enter
mov
stos
jbe
imul
icebp
aad
cmp
enter
shlb
lods
fsqrt
inc
pop
loopne
jo
adcb
jae
jae
adc
jo
xchg
jl
test
popl
jecxz
ja
aaa
mov
aad
lret
mov
movsl
jo
fnstcw
dec
push
fs
insl
cmpsl
push
sub
cli
arpl
aad
test
mov
jno
fnsave
inc
pop
jo,pt
out
insl
in
ficomps
jo
mov
adc
arpl
jo
jle
inc
int
jo
dec
je
mov
mov
push
lods
cmp
outsb
dec
inc
cmpb
xchg
jo
mov
mov
jo
hlt
push
jp
pop
inc
insl
enter
lcall
hlt
pop
xchg
jo
cmp
dec
js
jae
mov
mov
pop
daa
jo
fstpt
fidivl
jle
jge
xor
imul
scas
int
sti
repnz
sbb
sbb
ss
xchg
mov
and
cli
outsl
test
dec
push
fidivl
mov
subb
call
sub
aad
pushf
in
outsb
fstpt
xlat
jg
dec
add
xchg
inc
mov
mov
mov
push
push
movsl
bound
and
out
jp
jo
in
shll
dec
mov
test
pop
ljmp
fs
loop
sub
xchg
popf
cltd
call
les
push
inc
jl
mov
xor
mov
pushf
cmpsb
int
pop
in
sub
fstps
ja
jo
or
adc
std
pop
sarb
cmp
push
xor
jo
mov
jo
das
shll
mov
nop
fst
fldt
sahf
sti
dec
cmpl
push
jle
add
cltd
rclb
lahf
jo
fwait
inc
adcb
xchg
shll
cmp
sub
pop
jo
add
test
cmp
xchg
leave
jo
call
rcll
add
aad
mov
fidivs
pop
cld
add
scas
pop
mov
jle
adc
loope
jae
inc
jae
js
mov
dec
adc
lods
inc
gs
aam
jo
in
mov
dec
inc
fistl
dec
push
mov
mov
jo
xlat
aad
mov
mov
arpl
mov
dec
ja
decl
pop
cs
xor
cmp
sub
jo
test
int3
adc
in
aas
jbe
inc
and
sub
pop
mov
jnp
je
add
dec
into
outsb
mov
and
mov
xchg
in
or
sub
shrb
mov
jle
popa
das
fdivl
jo
add
js
pop
mov
push
loop
xor
mov
push
out
push
hlt
sub
jo
pop
xlat
push
jo
in
or
mov
lods
movsl
lock
jo
jmp
ja
mov
mov
outsb
xlat
pushf
xchg
cmp
mov
es
xchg
or
pop
jo
bound
jecxz
mov
add
in
mul
jp
out
lea
test
sbb
icebp
call
or
jno,pt
dec
push
inc
push
and
cmp
dec
jo
and
sbb
stos
lret
add
popa
loope
into
pushf
lock
lea
fsub
jbe
outsb
int3
movsl
push
jo
aad
imul
test
lds
mov
mov
inc
cs
jo
fnstcw
mov
jo
pushf
lret
jge
aam
jo
sub
and
dec
cld
movsl
outsb
cmp
jo
xor
pushl
adc
pop
cltd
jo
inc
mov
xchg
jo
xor
cmp
lea
mov
xchg
inc
push
in
adc
jl
push
add
mov
aam
fmulp
fwait
jo
cld
arpl
jl
xor
jmp
iret
adcb
into
ja
sbb
inc
subb
pop
pop
arpl
dec
es
aas
cmp
mov
popf
int
fidivs
mov
jbe
stos
sbb
pop
cli
out
cmp
fistpll
xor
jo
mov
mov
imul
jo
mov
jecxz
add
outsb
add
mov
and
insl
mov
or
das
xchg
test
push
cmp
fwait
bound
xor
cmpsb
jo
mov
in
cwtl
xchg
cld
jo
movsb
fucom
push
push
stos
jo
inc
div
cmpsl
addl
mov
jae
add
loope
jp
push
daa
imul
jo
mov
adc
js
inc
test
push
lock
sub
test
dec
scas
inc
dec
push
das
mov
push
xchg
int3
jo
push
cwtl
mov
pop
mov
fdivrs
test
clc
sub
iret
add
out
into
in
fstpt
jo
and
pop
mov
lcall
or
fdivs
insb
dec
jo
mov
lret
jne
popf
dec
out
mov
jo
fcoms
fcompl
pushf
add
fdivrp
xchg
out
ds
sub
or
and
jo
dec
loopne
sub
rorb
inc
and
mov
aad
sbb
cmc
mov
jle
aam
js
add
out
inc
das
jle,pt
jo
pop
mov
shll
cmp
jo
push
aad
nop
icebp
or
cmp
dec
jo
and
lock
adc
data16
in
sarl
jnp
adc
dec
sub
insl
lea
ret
pop
mov
adc
mov
xor
add
cs
loope
sahf
jo
or
sub
mov
jo
fsubrs
negl
in
neg
addr16
fbstp
cmc
adc
or
fldt
test
pop
xchg
in
add
or
inc
fldt
jo
imul
in
popa
xchg
jo
cld
faddl
cmp
jo
push
aad
cli
into
in
test
or
lods
es
cltd
xchg
adcb
mov
stc
push
loopne
adc
xor
jo
shlb
xchg
cmc
repz
sbb
sbb
cmp
imul
xchg
dec
or
enter
es
or
inc
mov
aam
hlt
cli
cmc
lock
pop
stos
jo
dec
mov
or
cmpsl
sahf
repnz
xlat
ja
jno
mov
outsb
out
pop
outsl
testl
shll
jnp
push
cmp
sub
push
inc
mov
jnp
aaa
scas
ds
mov
outsl
mov
gs
jge
cmp
outsb
adc
cmp
ret
aad
lret
jl
dec
mov
nop
sub
sub
mov
loope
sti
sahf
xchg
addr16
mov
jo
popf
sub
lahf
cmp
adc
xchg
mov
mov
sbb
inc
outsl
xor
aad
outsb
xchg
and
mov
xor
pushl
ret
adc
inc
or
cli
mov
jbe
xchg
mov
fs
aad
icebp
insl
or
sub
sbb
push
add
sbb
xchg
arpl
inc
pop
dec
cmpsb
jae
rcrl
fnsave
add
mov
mov
imul
jne
jmp
pop
loop
xor
pop
int
mov
inc
push
xchg
xchg
insb
movsl
cmpsl
mov
mov
jo
lods
sbb
ss
sbb
pop
push
aad
mov
negb
jo
cwtl
mov
jo
sub
iret
sub
xor
or
jo
arpl
int
aad
sbb
jl
in
in
mov
xchg
sub
ja
push
inc
pop
sub
mov
jae
adc
test
push
jo
mov
jo
in
push
mov
aad
lahf
test
jo
lea
lock
enter
xchg
adc
nop
jo
popf
loopne
jo
push
add
test
outsb
jle
insl
mov
pop
mov
testb
cmpsb
sti
adc
arpl
adc
pop
in
mov
xchg
lret
mov
jo
loopne
pop
testb
push
push
lods
xlat
insb
push
sub
jp
leave
daa
pop
ret
and
out
cli
notl
xchg
pop
mov
and
mov
sub
addr16
jo
cmp
jne
inc
jl
add
outsb
popa
in
xchg
xchg
mov
jle
jo
out
jbe
xchg
rcrb
push
jnp
mov
inc
and
add
jle
lods
sti
ret
jo
filds
mov
fs
sbb
inc
test
jo
lea
pop
in
into
xorb
mov
fildl
and
aad
lods
addr16
pop
rol
add
inc
mov
jo
sbb
lcall
jo
pushf
inc
jg
test
fildll
mov
and
inc
out
xchg
sahf
popf
int3
jnp
cmp
xchg
jo
push
shll
push
jp
cld
stos
pushf
jo
subb
or
mov
lods
insb
sahf
mov
adc
lods
pop
arpl
imul
lahf
fucomip
add
movsl
jne
push
shll
daa
jo
cmpl
jmp
insb
pop
int3
outsl
xor
push
mov
and
jae
ss
test
or
add
mov
push
rclb
jmp
daa
out
dec
jle
xchg
insl
inc
jb
push
sub
ss
and
push
lahf
mov
arpl
lods
out
cmp
cltd
inc
stos
push
xor
mov
lds
sub
push
notl
outsb
cmpsl
pop
jno
cmp
es
xchg
adc
jo
imul
lret
or
mov
arpl
jno
jae
fs
adc
outsl
jo
push
fsubl
dec
adc
mov
jmp
mov
push
bound
adc
jo
repz
outsb
rolb
pop
test
sbb
je
adc
cmp
inc
dec
and
mov
add
aam
adc
mov
ficompl
jecxz
fldcw
testl
popf
cmp
rolb
pop
xchg
adc
jae
jae
ret
sbbl
insl
pushl
les
xlat
sbb
cli
pop
sbb
adc
push
addr16
jae
mov
mov
adc
sbb
fidivs
lcall
add
das
lock
mov
fldenv
sub
stos
cmp
jo
cmc
xchg
sub
mov
jae
xor
fcomp
lret
rclb
fdivl
mov
in
lds
add
lock
sti
pop
jo
fcomps
sbb
mov
imul
jle
in
js
push
xorps
jo
and
push
imul
loop
mov
mov
cld
and
insl
iret
fistps
aas
out
das
shl
mov
arpl
and
jo
hlt
add
jo
enter
cld
sar
jo
aad
and
imul
add
xchg
mov
negb
jo
sub
cmc
jecxz
jo
sbb
mov
jl
sbb
add
loop
das
mov
dec
and
or
push
lods
dec
pop
cmp
mov
inc
jo
xchg
mov
call
lret
jmp
jp
xchg
test
mov
jo
inc
das
sub
out
fxch
xor
test
rclb
dec
xor
cmp
push
or
jo
jne
into
jmp
stc
mov
and
xchg
sbb
ja
inc
push
loopew
adc
xchg
jo
outsl
xlat
mov
jo
mov
or
jo
aam
pop
jmp
jp
ret
mov
mov
inc
cmpsl
jo
out
arpl
mov
mov
and
push
xor
jb
loop
lock
sub
arpl
negl
or
lea
lock
fcomp
cli
mov
es
mov
push
xor
and
adc
dec
push
stos
lock
repnz
add
cmpsl
mov
mov
or
xor
jo
dec
ds
out
adc
ror
xor
stc
xor
jb
sbb
shrb
aaa
jg
push
or
out
mov
cwtl
lods
or
jo
and
clc
std
frstor
mov
mov
enter
icebp
dec
in
xchg
cmp
jo
int3
lahf
sbb
dec
inc
dec
push
lock
push
mov
add
fidivl
cltd
imull
ja
rcrb
nop
mov
mov
mov
fwait
pop
pop
paddw
adc
loop
mov
jo
aas
jns
adc
rclb
leave
in
jbe
pop
pop
push
movsl
jo
mov
sbb
push
shlb
jp
dec
fdivrs
xchg
xchg
jo
cmpsb
and
jae
insb
cltd
adc
cmp
and
pop
nop
scas
or
add
scas
sti
outsb
xchg
cmp
dec
pusha
mov
cmpsl
jbe
orps
lock
and
dec
cmp
xrelease
or
or
adcl
lods
jo
cmp
ljmp
fcomip
jbe
repz
mov
mov
outsb
test
data16
mov
xor
imul
sti
pop
mov
adc
test
popa
adc
fistpl
bound
dec
fmulp
movsl
jb
push
adc
mov
mov
in
mov
divb
pop
fsub
lock
jge
mov
push
jo
inc
scas
pop
or
push
outsl
xor
loopne
fimuls
lock
mov
iret
jbe
cs
clc
outsb
and
jo
or
xchg
js
mov
adc
insl
cltd
in
out
les
js
test
popf
or
ja
cwtl
sbb
in
jo
sbb
fwait
into
jle
mov
ficoml
hlt
push
js
in
aad
addr16
cmp
lock
test
loopne
mov
data16
lock
rol
jnp
out
jle
sbb
les
jne
popf
sahf
shl
rcll
cmpsb
loop
arpl
xorb
fistpl
mov
out
push
sahf
in
mov
fwait
jo
fwait
imul
loopne
xor
insb
loop
or
add
mov
fsin
hlt
sub
iret
xchg
push
addr16
xchg
or
jbe
movsl
test
repz
jl
jge
cmp
aad
xlat
push
dec
dec
lret
sbb
push
arpl
jo
xor
adc
cmp
insb
pop
xchg
xchg
mov
pusha
iret
mov
fcoml
ror
in
or
lods
fsubrs
ss
addb
push
insl
addr16
pop
xchg
xlat
jbe
mov
push
lea
inc
pushaw
outsb
push
xchg
popf
fucom
lock
adc
adc
xchg
cs
sub
or
test
xor
and
xor
lret
lret
xchg
xor
fisttps
test
in
mov
mov
shrl
push
sbb
sub
mov
dec
test
pop
xor
push
push
insl
fisubrs
xchg
aam
mov
cwtl
xchg
mov
enter
jo
rcl
sbb
shll
fstl
call
insl
xor
subb
or
ret
aaa
pop
idiv
inc
mov
jo
jl
push
pop
mov
scas
mov
inc
and
divb
lds
inc
lock
cltd
and
je
cmp
jo
dec
lods
cmpsl
lea
xchg
adc
push
sub
sub
les
xlat
ss
sub
push
ljmp
cmp
or
mov
jo,pn
jns
adc
out
jno
pop
inc
in
push
jo
fistl
lea
inc
aad
mov
lock
fnstcw
jo
ds
push
ja
lods
cli
mov
jo
ja
loope
xchg
push
jo
dec
int
xchg
fistps
ret
fwait
in
loopne
insl
xchg
sub
ds
arpl
jo
aam
xlat
pop
es
shll
jp
mov
aad
xchg
or
test
imul
pop
jno
push
xchg
jne
hlt
int
jo
nop
mov
in
int3
push
fsubrl
push
cwtl
out
and
enter
adc
pushf
jo
dec
mov
fwait
jo
mov
and
xor
jo
lea
xchg
iret
dec
inc
push
fidivs
loopne
dec
mov
mov
and
mov
arpl
dec
add
test
pop
jo
sub
add
and
movsl
in
cmpsl
fsts
add
outsb
dec
jae
cmpb
jmp
sbb
aas
mov
in
out
pop
xor
ds
das
icebp
sbb
jle
mov
sbb
int3
jae
ror
mov
pop
jle
mov
mov
xor
sub
lock
cmp
ficompl
aad
xor
je
shrb
ja
inc
or
cmc
jo
pop
in
orl
in
xor
xchg
mov
out
or
jo
xchg
push
aam
gs
jo
dec
mov
cmp
pop
jae
enter
test
jo
jno
or
mov
pop
mov
ror
mov
and
push
mov
mov
xorb
push
jo
mov
adc
testl
or
mov
stos
and
push
sbb
xchg
push
push
fisttpl
pusha
jo
gs
push
lahf
jb
mov
pop
jns
jo
nop
lret
cld
rclb
insb
jo
cmovp
rcl
push
jo
inc
les
hlt
shll
addl
cmp
add
xchg
cmp
out
sbb
xchg
push
lods
mov
jo
lret
cmpsl
push
fldenv
push
push
sbb
fwait
aas
fs
mov
and
cmpsb
xor
shlb
std
icebp
pop
jno
jecxz
jo
roll
sti
imul
loopne
lock
inc
dec
and
in
xor
std
mov
lock
stos
sti
xor
rolb
cmp
enter
push
add
cwtl
xor
sub
into
loop
mov
ljmp
dec
test
das
test
sar
jle
insl
int3
and
ficoml
mov
jg
push
xor
cmpsb
dec
add
push
xorb
mov
fwait
jo
jnp
cmp
pop
add
pop
mov
jo
movsl
sub
pop
in
mov
add
or
jo
sbb
aad
fistpl
push
pop
jl
mov
das
mov
lcall
fs
inc
add
js
mov
jo
push
int
cmpsl
imul
push
mov
out
pop
ffree
stc
loop
xor
cmp
add
mov
jl
sub
jo
data16
test
add
rol
inc
mov
dec
pop
and
and
jle
aad
push
into
jne
imulb
lods
xchg
xorl
or
xchg
jmp
jne
cltd
sbb
xlat
mov
cwtl
pop
jo
adc
int3
es
pop
jo
jmp
dec
adc
mov
movsb
push
ds
or
and
je
nop
mov
lahf
cmp
ja
test
mov
mov
jo
cmp
dec
push
inc
sub
adc
in
jo
jbe
adc
into
mov
out
daa
enter
jne
xchg
shll
aaa
pop
mov
out
push
mov
popf
xor
sub
mov
jnp
addr16
pop
dec
lcall
shl
push
lods
dec
pop
js
and
jno
mov
mov
ror
or
mov
xchg
jne
outsb
add
push
jnp
nop
rorl
dec
lds
add
mov
mov
test
outsl
dec
push
cmp
sub
or
mov
fsts
xor
push
xor
aad
insl
fcomp
inc
jl,pn
loopne
sub
roll
cmpsb
jae
xchg
push
jne
fnstsw
inc
sub
test
pusha
push
sub
outsb
jmp
out
push
xchg
mov
sarl
xor
mov
dec
popa
and
xor
out
sbb
jnp
mov
pop
xchg
mov
orb
mov
xchg
aas
dec
mov
cmp
push
or
and
das
popa
pop
pop
jo
fld
fwait
mov
cli
xor
sbb
test
jnp
rcrb
cmp
mov
arpl
cmp
aad
shll
pop
push
jp
push
rclb
jo
mov
mull
jp
adc
js
jbe
call
popf
imul
shlb
dec
sarb
fldcw
mov
adc
xchg
push
jo
aad
rcrl
ret
cltd
enter
mov
jae
testb
inc
sub
mov
shlb
sahf
xchg
ja
fwait
lods
rclb
inc
sarb
dec
cmp
lock
sahf
or
jo
insl
daa
les
imul
adc
dec
push
icebp
pop
jo
inc
out
scas
adc
sar
dec
jne
imul
mov
enter
std
jo
push
aas
dec
mov
push
cmp
out
jo
loop
cmp
insl
repnz
sarl
mov
jnp
icebp
mov
hlt
ja
xor
sar
pop
into
loopne
jo
inc
adc
cmp
cmc
sbb
cmpsb
mov
add
adc
dec
xchg
mov
mov
xor
in
dec
mov
sbb
sbb
adc
jo
inc
xlat
pusha
cmp
lock
roll
jo
fnstcw
popf
adc
jecxz
pushf
mulb
fbstp
aad
test
push
dec
fimull
shl
stos
insl
add
loop
hlt
mov
mov
or
andb
mov
sti
push
out
cmp
les
mov
xor
jle
jo
cmpsl
aaa
lock
loope
imul
ja
movsb
inc
shll
mov
pop
test
mov
lret
jo
shlb
xchg
imul
xchg
or
std
lret
ficoms
jno
nop
jno
shl
inc
cmp
dec
mov
push
mov
aam
inc
jo
cmc
add
or
jo
leave
cmpsl
lea
push
jo
ljmp
jo
addl
outsb
pop
loopne
in
jo
mov
test
arpl
mov
or
test
xorb
jne
add
jg
int
jnp
lock
jo
call
mov
pop
lock
cmp
fidivl
out
notb
jle
jae
inc
inc
jge
bound
pop
aad
cltd
scas
xchg
pop
sub
mov
push
jo
andb
scas
pop
fsts
jo
add
daa
mov
mov
rolb
pop
jecxz
sbb
scas
dec
addl
mov
jb
scas
jo
repz
adc
scas
fscale
sub
pop
movsl
icebp
cmpsl
mov
jo
jl
add
and
jo
add
out
popf
shlb
rcll
mov
mov
out
mov
lock
add
aad
mov
insb
xor
push
dec
faddl
lds
daa
in
jo
xchg
adc
sbb
xchg
mov
clc
xorb
adc
cmp
outsb
cmpsl
and
scas
loopne
jo
int3
sbb
cmp
jo
es
movb
repnz
mov
mov
scas
jp
xchg
jo
dec
mov
push
jo
ja
cwtl
fldcw
lret
mov
pushf
mov
cmp
jo
loopne
pusha
or
jo
pushf
lds
int3
int
outsb
push
inc
or
lds
jno
adc
xchg
ljmp
lods
lahf
pop
jo
xlat
jecxz
in
ljmp
or
cli
mov
hlt
push
scas
leave
dec
xor
sahf
pop
cld
mov
mov
loope
sbb
pop
sub
inc
jo
and
jecxz
int
jb
ljmp
lret
cli
jo
sub
pushf
sahf
pop
adc
or
outsb
add
add
das
aam
jne
xor
or
jo
loope
xor
fmull
xorb
or
out
lret
jo
xchg
std
dec
enter
outsb
lock
push
lock
jno
jl
nop
icebp
pop
cmp
jo
xchg
push
lret
cs
fmull
lock
pushf
lods
sbb
insl
stc
inc
or
sti
je
dec
nop
fs
test
mov
xchg
xchg
adc
pop
call
imul
das
outsb
mov
je
xor
lods
repz
sti
push
sahf
loopne
fsubrs
fwait
or
pop
inc
dec
inc
fsubrl
fisubl
rclb
jo
sub
lods
loope
test
test
jo
pusha
mov
popf
fldenv
inc
jmp
jo
cmp
icebp
ljmp
jl
mov
xlat
jnp
cli
jg
push
jo
scas
jmp
in
jo
jle
out
xlat
aad
push
insl
dec
dec
lahf
push
adc
outsl
pushf
fstpt
jo
rcrl
shll
jnp
add
sbb
mov
sbb
jae
xor
aad
ds
sub
pop
mov
cmp
jecxz
imul
iret
mov
and
rcll
xor
fwait
xchg
dec
ja
and
sbb
jo
fdivr
rolb
mov
int
mov
enter
lret
imul
push
jo
mov
pop
and
fdivl
sbb
je
inc
dec
adc
jmp
rorb
fnstenv
movsb
push
inc
bound
aas
jo
cmc
pop
loope
mov
push
aaa
fidivs
mov
in
je
out
pop
pop
jg
or
cmp
fildll
lahf
jo
or
test
mov
add
jo
mov
icebp
sub
add
aaa
add
jb
jno
sahf
pop
jle
jo
jmp
xchg
popa
aas
adc
pop
imul
cmc
mov
cmp
ljmp
dec
iret
sub
stos
push
xchg
les
add
push
pushf
mov
dec
outsb
mov
jo
data16
xchg
and
lods
cli
jo
or
inc
push
inc
in
push
jo
push
pop
jne
call
addl
nop
jnp
fistpl
lahf
mov
mov
adc
push
sub
jo
cwtl
cmp
mov
jmp
loop
mov
mov
sub
jno
scas
inc
js
lock
lock
sarl
andl
push
jo
aad
mov
sbb
sbb
lock
and
ss
jae
cs
dec
fchs
iret
or
sub
dec
xorl
pop
jl
pop
pop
add
stos
loopne
or
aas
jno
or
inc
pop
cmpsl
scas
je
cmp
mov
jno
push
add
mov
add
jns
idiv
enter
das
jo
leave
jge
out
cwtl
inc
jo
push
jmp
jo
popf
xchg
lock
aad
jo
mov
mulb
push
jp
jo
mov
jg
dec
jo
cmp
sbb
aas
mov
mov
in
cmp
dec
adc
insb
jo
add
mov
mov
jg
dec
mov
dec
fwait
das
lock
jo
fnstenv
cmc
jl
pushf
and
cmpsb
pop
inc
bndstx
sub
add
pop
sub
fbstp
jae
dec
fsts
data16
arpl
jo
ja
dec
pop
push
push
shrl
jo
push
jge
loopne
arpl
pop
push
pop
rorl
mov
mov
xlat
js
cmp
xor
xor
xor
adc
dec
mov
jo
es
lock
pop
insb
xchg
push
jo
das
inc
adcb
jl
mov
inc
sarb
lahf
lea
and
out
jns
jo
mov
dec
aad
and
jp
repnz
int
inc
jo
in
adc
jae
fidivrs
mov
mov
jo
mov
push
sub
scas
push
xor
outsb
jmp
or
insl
mov
xlat
xor
sub
rcr
jle
jb
xchg
jo
shrb
adc
jo
or
int
jo
movsb
push
xchg
fldt
dec
aaa
jo
bound
dec
jo
testl
jo
mov
scas
push
sbb
mov
dec
xor
pop
popf
insb
divl
popa
cmp
jo
or
fldenv
in
in
mov
filds
pop
int3
or
cmp
mov
and
xchg
rolb
xor
push
pop
mov
out
jo
lret
adc
mov
imul
js
or
addb
inc
imul
sub
icebp
stos
mov
cmp
jo
hlt
fistl
ds
add
sub
pop
and
shl
push
xorl
lods
fistpl
mov
inc
insl
mov
test
mov
dec
jo
mov
int
xor
lahf
das
test
jo
pop
inc
lods
call
mov
stos
es
add
test
push
push
sbb
xor
xchg
pop
jo
repz
inc
adc
jmp
ja
xor
lret
or
mov
push
mov
mov
push
push
call
mov
jo
mov
adcb
mov
sbb
mov
add
testl
iret
lahf
lock
jo
orl
push
sahf
dec
jo
add
mov
push
ja
inc
jo
test
cmp
push
push
cmp
gs
pusha
lock
es
lods
jno
lea
mov
lock
lret
jae
mov
outsb
jne
xchg
xchg
adc
mov
mov
lea
pop
or
adc
lock
loope
test
shll
lods
dec
outsb
dec
call
mov
jo
cmp
fcmovu
jo
outsl
int3
pop
pop
les
jnp
cmp
mov
data16
mov
adc
mov
dec
jo
cmp
push
fimuls
jno
xchg
sbb
inc
or
lds
pop
mov
cli
rep
pop
jo
dec
fldt
leave
arpl
jo
in
mov
sub
xor
jmp
in
jo
fsubs
mov
xor
mov
mov
mov
pop
jmp
sbb
rcrb
das
cli
sbb
jo
adc
sbb
rclb
jo
jp
pop
fs
lea
inc
aas
jge
mov
call
pop
mov
mov
or
insl
mov
dec
les
push
adc
jo,pn
outsb
out
std
arpl
dec
jo
sbb
dec
loope
or
sbb
test
add
clc
push
add
inc
cmp
ds
popf
sub
mov
add
push
jnp
dec
in
jb
mov
punpckhdq
ja
mov
inc
nop
xchg
jle
fwait
add
xchg
and
jb
jo
mov
insl
inc
fildl
sarl
repz
mov
mov
rclb
pop
test
pop
lods
cli
nop
mov
ja
daa
jle
mov
mov
dec
call
jo
aad
popa
push
add
inc
jo
aas
in
fnstcw
dec
pop
sub
sbb
cmp
jae
outsb
jge
add
insl
sbb
cmp
xor
mov
gs
lock
mov
lock
cld
xlat
xorl
inc
dec
mov
xor
xchg
mov
mov
cltd
adc
xor
push
inc
lock
mov
inc
cmp
jo
mov
fdivl
sub
lahf
dec
and
jo
loop
jns
insb
sbb
jo
jge
std
inc
lahf
cltd
sbb
aad
cmp
and
dec
out
lock
test
mov
jns
shrl
cmp
lock
mull
shr
movsb
adc
jo
test
dec
sbb
iret
lods
xor
shll
lret
incl
mov
fistl
rcrb
jge
add
inc
lret
add
sub
sub
xchg
cmp
lock
push
adc
xor
mov
pop
loopne
shr
adc
add
ja
loope
popf
mov
jne
fwait
push
jae
fidivl
or
mov
jge
movsl
adc
data16
jb
or
inc
xor
pop
shl
adc
mov
mov
loopne
mov
cmp
add
jo
mov
popa
sub
data16
js
lea
int
inc
icebp
xchg
jo
shl
sti
add
fs
imul
popa
or
mov
jge
or
jo
into
ds
jne
popa
fdivl
cli
cmp
shl
inc
lea
outsl
xchg
push
push
xor
data16
bound
sbb
sbb
test
push
jo
popf
jns
sub
loope
sub
or
cmp
inc
push
lock
pop
mov
das
loopne
jno
add
out
jo
filds
sti
shll
xor
test
push
xchg
out
iret
jo
xchg
adc
dec
lds
pop
jo
fimull
xor
mov
ljmp
adc
push
mov
jo
sti
addr16
sbb
gs
stc
pop
push
idiv
pop
lds
adc
popf
jo
aad
or
ret
shll
js
xchg
lea
jo
shl
push
imul
cltd
push
jbe
hlt
loop
in
mov
jo
scas
push
push
into
lea
lcall
pop
mov
or
cld
insb
xchg
or
and
cmp
push
scas
aad
hlt
jo
cmp
or
sub
jo
sub
xchg
int3
shr
jo
mov
or
lahf
pop
jnp
int3
xor
jp
jae
xor
out
adc
jo
and
mov
fildl
es
pusha
pop
xchg
mov
dec
stos
cmp
sbb
lret
push
sbb
mov
cli
stos
jne
pushf
xor
xor
pop
dec
jge
icebp
push
push
xor
fimuls
push
mov
jo
sti
sarb
movsl
xor
sbb
and
sbb
mov
nop
fidivrs
rclb
test
mov
fldt
insl
mov
mov
jo
fisubrl
cmp
jne
jo
aad
test
fs
outsb
pop
ljmp
repz
leave
stos
add
loope
jo
xchg
fs
pusha
fistl
xchg
cs
push
inc
jnp
lock
andb
adc
mov
loopne
sub
dec
cwtl
stos
fidivl
fcoml
sub
das
jo
fstps
and
xlat
imul
mov
call
mov
nop
pushf
fnsave
and
fwait
in
push
jo
adc
arpl
ds
inc
fabs
test
ljmp
repz
or
jbe
jb
cwtl
mov
setno
dec
or
outsb
xor
adc
leave
cwtl
mov
cmp
mov
add
add
vmread
ljmp
jo
pop
mov
inc
dec
movsb
pop
jo
push
mov
jo
test
mov
or
xor
sub
sub
aad
lret
rclb
and
popa
rclb
aas
push
sub
stos
aad
jo
iret
xchg
xchg
sahf
data16
mov
movsl
in
dec
sarl
lock
inc
in
jo
dec
push
sub
enter
sbb
aad
insl
dec
add
cmp
lahf
inc
or
sti
jmp
push
ss
sub
iret
test
cmp
movsb
jo
sbb
flds
mov
daa
aad
jo
xchg
jmp
out
or
xor
bound
fmuls
mov
std
sbb
adc
cld
jmp
jne
mov
inc
jg
in
push
mov
loopne
jo
ret
sti
andb
repnz
adc
lock
insl
fimuls
mov
fsub
xor
insl
push
push
shlb
mov
pop
cltd
jo
ret
xchg
pop
xorb
cmpb
adc
pop
std
mov
mov
and
int3
ret
call
jne
push
addb
iret
cli
mov
add
ret
outsb
and
jl
or
mov
sub
xor
push
out
sbb
into
add
daa
movsb
aaa
push
insb
inc
jge
and
cwtl
outsb
pop
cmpsl
arpl
cmpsb
fnstenv
or
jne
lret
cmp
loop
push
mov
mov
and
cmpxchg
lahf
inc
ljmp
xchg
es
mov
aad
scas
inc
jmp
xor
inc
outsl
sub
ja
adc
push
loopne
les
xlat
divb
loop
test
dec
jp
cmp
inc
add
je
jno
cmp
fildll
pop
push
fwait
pop
repz
xor
mov
pusha
adc
push
lahf
push
jo
mov
or
jge
out
stc
or
aad
std
mov
ret
cmp
lock
sbb
jo
pop
or
pop
ja
xchg
jae
xchg
pop
sub
clc
aad
xchg
sahf
jo
lods
push
iret
push
fisubl
sub
dec
adc
xchg
xor
mov
adcl
add
and
out
mov
or
push
add
outsb
sbb
data16
in
addr16
test
out
jo
paddusw
arpl
ficompl
in
imulb
sub
call
or
enter
dec
mov
ds
dec
mov
jo
push
movsb
mov
cs
and
jle
in
mov
lds
shlb
mov
dec
jo
dec
mov
scas
add
dec
filds
or
bound
push
jo
and
xchg
push
jo
out
mov
jo
mov
mov
jo
aaa
hlt
jge
push
stos
xchg
pop
faddl
or
aad
mov
add
mov
jo
leave
insl
add
iret
mov
int3
aad
cltd
jl
jecxz
insb
stc
loopne
sbb
and
repz
xor
or
xchg
cld
pop
pop
dec
jo
cwtl
sub
push
hlt
imul
into
push
and
push
divb
bnd
push
adc
pushf
divl
shl
adc
cld
push
jo
mulb
mov
popa
or
aad
sbb
aaa
cld
outsb
dec
fcompl
mov
dec
pushf
ja
outsl
dec
hlt
xchg
mov
xchg
jmp
out
jno
scas
in
subl
jo
fildl
cmp
mov
mov
inc
jnp
jmp
cld
dec
pushf
dec
jo
jne
push
jbe
lret
jo
jnp
dec
pop
mov
xchg
inc
push
les
dec
jo
pop
or
arpl
lock
push
pop
ja
ja
pop
div
jno
push
xchg
jo
jae
mov
xchg
in
mov
xor
mov
out
test
dec
inc
subl
or
ja
jb
pop
pop
loopne
cld
shrb
cmp
fstps
in
cmp
sti
sub
lahf
aas
jae
fistl
std
enter
jo
mov
js
fstpl
jo
push
xchg
out
xor
dec
jo
or
repz
ret
mov
push
jo
int
push
cmpb
add
iret
xchg
das
push
pop
jo
inc
fdivp
outsl
push
sub
pop
and
cli
decb
xchg
jo
nop
xchg
insl
testl
out
outsb
test
push
jo
and
fs
fdivrl
mov
int3
filds
mov
inc
fldt
mov
ljmp
mov
fcmovbe
xchg
daa
adc
pop
shll
cmpsl
or
subb
dec
jo
lds
pop
scas
jmp
or
roll
mov
add
xor
dec
lret
add
sbb
int
xor
xor
dec
leave
ret
mov
push
push
adc
clc
lea
sbb
jo
mov
jo
push
mov
stos
imul
adc
fldt
pop
sbb
pusha
sub
orb
pop
jle
loop
mov
jo
cmp
push
roll
pop
aam
jae
add
outsl
ss
imul
shl
adc
bound
jae
mov
jg
imul
les
cwtl
mov
hlt
jecxz
mov
sbbb
pop
pop
xchg
push
insb
xor
sarl
jae
and
mov
xchg
push
inc
leave
mov
and
jl
jo
push
insl
stos
dec
in
jo,pt
mov
rol
mov
stc
jo
aad
cmp
fwait
and
test
jp
pop
dec
jg
cmp
aaa
jnp
insl
pop
cld
pop
inc
or
mov
es
mov
jmp
repnz
sbb
in
jo
mov
inc
stc
inc
push
popf
jo
imul
mov
lret
subb
mov
nop
jge
jle
jo
pop
lods
cmp
pop
or
aad
lea
in
fwait
scas
add
testb
adc
xchg
pop
int3
mov
ja
roll
adc
addr16
sbb
mov
jns
pop
repz
es
pop
or
sbb
xor
lods
lea
dec
in
gs
mov
mov
sahf
cmp
xchg
jo
repnz
sti
sbb
jo
cmpl
jo
test
jo
cs
sub
jo
jecxz
inc
shr
mov
je
mov
int
mov
or
jo
test
mov
jo
xor
dec
sbb
xchg
ds
insl
sub
jae
out
ljmp
jo
fcmovu
sub
mov
in
or
jl
fistl
cltd
adc
loope
popa
xchg
jo
inc
in
imull
insl
push
dec
jge
mov
shrl
pop
sub
test
cs
jo
fs
loopne
xchg
mov
jb
mov
sub
jle
je
je
dec
push
lock
xchg
dec
dec
jle
pop
pop
xchg
pop
in
adc
xchg
mov
adc
lock
pop
inc
fwait
xchg
mov
sub
pop
ja
sbb
jnp
or
jno
dec
movsb
and
sbb
xchg
enter
sub
imul
testl
or
iret
mov
loop
mov
push
int
jo
mov
adc
and
mov
aaa
scas
jo
test
in
push
push
and
data16
fsubl
test
jecxz
mov
xorl
cmp
out
mov
pop
cmp
push
scas
hlt
ret
jo
aaa
inc
push
sti
gs
leave
test
lock
adc
cltd
fdivl
f2xm1
add
mov
jne
lock
and
jbe
fsub
adc
sub
jb
cmpl
mov
adc
mov
in
jo
pop
aaa
jle
mov
jne
lcall
lret
leave
add
jno
mov
xchg
push
inc
sbb
jecxz
dec
sahf
scas
jo
daa
cs
add
and
mov
rcr
xor
xor
aad
insl
jbe
sub
jnp
inc
sbb
enter
dec
movsb
lock
insl
sub
pop
or
push
sub
bound
jo
out
enter
jo
out
or
fstps
and
mov
xor
mov
enter
mov
add
in
je
dec
mov
pop
fildl
push
and
sub
stc
mov
lock
pop
frndint
add
push
dec
mov
add
pop
insb
jo
cmp
loope
cmpsl
push
mov
sbbl
jnp
les
lock
mov
iret
orb
insl
inc
aad
movl
mov
test
int
adc
inc
sub
sub
and
mov
rorb
inc
lea
mov
fcmovne
dec
data16
jg
adc
push
scas
and
mov
nop
and
dec
loop
jo
sub
shl
mov
inc
lret
sub
loopne
add
divl
cli
loop
mov
xor
nop
cs
xchg
jo
fistl
outsl
std
push
push
jo
sbb
aad
mov
inc
in
lods
mov
das
jo
adc
aad
dec
enter
mov
cmpsb
jo
movsb
nop
cld
sub
mov
jo
sbb
ror
fnstcw
mov
jg
push
adc
or
xchg
lahf
mov
insb
aad
and
jno
shlb
jo
fdivp
mov
jo
and
push
int
out
movsl
jo
or
sub
xchg
test
sbb
push
sub
mov
jo
mov
sbb
mov
cmpsb
mov
aad
mov
jo
data16
ljmp
pop
pop
pop
insl
inc
push
jne
bound
mov
insl
jo
popf
cmp
shlb
lahf
in
dec
mov
call
stos
aaa
popa
lret
scas
sbb
sbb
jbe
lods
inc
test
not
lock
mov
cmp
sbb
hlt
or
xor
das
sbb
xor
mov
jo
jp
xchg
rorb
sti
jo
sbb
shlb
lcall
pushf
adc
mov
ss
insl
mov
jo
fcomp
add
sub
aas
mov
pushf
ret
mov
cmp
ja
sbb
cmpsb
lcall
popf
inc
sbb
add
add
dec
sub
cltd
dec
add
push
jae
inc
cmp
pop
add
nop/reserved
out
add
add
mov
fnstcw
xlat
ljmp
imul
pop
mov
scas
cmc
add
jp
in
pushf
nop
data16
mov
ret
pop
jno
jo
ss
jns
sbb
pop
shlb
cmp
out
mov
test
push
jo
jp
out
dec
pop
sahf
cmp
pop
pushf
popa
jo
fwait
pop
xchg
loope
rcl
jo
pop
inc
subl
mov
jl
push
cmp
insl
add
sbb
inc
test
mov
mov
in
outsb
mov
cmp
pop
jns
loopne
xchg
add
add
nop
xchg
fsub
fistpll
arpl
cwtl
stos
jo
push
xchg
call
fbld
or
enter
push
or
pushf
xchg
and
jo
rcrb
rcrl
lcall
outsb
push
ja
in
or
jo
mov
inc
sub
loopne
mov
jne
push
addl
test
sbb
jb
pop
movsb
in
mov
lock
sti
cmp
lcall
jnp
sahf
sbb
jp
scas
cmpsl
push
imul
inc
inc
cmp
jne
outsb
sti
psubusb
loope
xor
pop
mov
cmpsb
fnstcw
push
lock
insb
sbbb
mov
ljmp
repnz
fidivs
push
pop
test
xchg
mov
subl
mov
outsb
mov
daa
add
andb
xorl
dec
jo
cltd
dec
flds
scas
jmp
loop
pushl
icebp
imul
jo
pushf
int
in
xchg
jo
dec
add
dec
popf
xorb
cmp
aaa
stc
aad
xchg
lock
and
dec
pushf
insl
xchg
cmp
ss
bound
std
rorb
mov
mov
addr16
lea
in
sbb
ja
ret
cmp
cmp
push
jo
cmc
in
push
cltd
nop
push
jo
jbe
push
xchg
imul
xor
adc
addb
jo
mov
sub
movsl
mov
pop
push
inc
jno
out
je
aas
aad
jnp
push
insl
adc
and
mov
adc
outsb
pushf
dec
xor
xor
out
ja
cmp
clc
jno
mov
mov
rcr
dec
inc
fld
cwtl
sbb
das
inc
aaa
push
gs
jo
cli
xchg
sub
sbb
divb
jo
adc
add
jo
les
mov
mov
nop
decl
movsl
xor
push
fsubrl
or
stc
lock
sbb
cmpsl
notb
cmp
aas
pop
imul
movsb
mov
add
jp
xor
cmpsb
mov
stc
push
fwait
push
dec
or
jae
ljmp
in
insl
cwtl
dec
lret
add
jo
test
sub
jbe
xchg
pop
push
aad
and
es
jo
and
shl
out
pop
enter
pop
xor
jg
jo
fisubl
pop
xorb
xchg
aam
dec
fs
jo
sub
jns
mov
repnz
out
pop
inc
movsl
inc
nop
lea
out
loopne
mov
jo
xor
mov
and
hlt
fdivl
jo
aad
lret
negl
mov
jo
sub
fs
stos
nop
inc
clc
cmpsb
jo
fildl
adc
loopne
sub
insb
mov
xor
push
ss
jo
test
mov
dec
pop
imul
jl
jne
into
stc
xchg
jo
push
mov
mov
fwait
scas
push
xorl
loope
shlb
test
inc
and
ret
popf
lds
jo
shll
cmp
cmp
xor
xchg
mov
push
jo
sub
jns
jo
mov
addb
sub
dec
cs
outsb
pop
mov
imul
ds
test
adc
negl
outsb
mov
dec
lcall
lahf
ja
mov
pushl
mov
sub
dec
ljmp
es
pop
rcrl
mov
mov
jo
aad
in
pop
inc
divl
jmp
popf
adc
mov
jns
fdivl
ja
mov
lock
jle
jo
mov
or
jecxz
jb
sbb
pusha
jo
adc
rcrl
or
fisubrs
pop
xchg
nop
pusha
jo
test
dec
mov
scas
addr16
cltd
and
dec
leave
pop
adc
imul
xchg
pop
adc
mov
mov
add
adc
outsb
scas
sbb
inc
pop
mov
gs
xorl
xchg
rcrl
jno
push
pop
and
in
jnp
imul
cmp
lret
xchg
mov
cwtl
aas
mov
push
lods
mov
push
out
push
ja
test
dec
pop
aam
jo
pop
mov
mov
ret
popf
imul
pop
pop
insl
sub
adc
jo
jge
aad
cmc
lods
ja
cmp
ljmp
jo
jp
lods
rcll
sub
push
test
mov
lock
cmc
xchg
fs
dec
rcrb
sbb
cs
sarl
leave
fisubrs
jo
aad
stos
mov
sub
enter
ljmp
add
stos
pusha
or
out
adc
dec
mov
test
and
mov
out
jo
sub
repz
or
cld
pop
movsl
add
insl
inc
dec
pop
dec
push
add
add
xchg
hlt
stos
fmulp
mov
loop
add
jnp
jo
adc
test
mov
int3
repz
es
mov
push
fsts
sahf
sub
mov
lea
call
push
popa
fbstp
subb
cmc
divl
lea
insl
fiaddl
adc
jg
xor
ss
mov
cmp
cmp
enter
push
aam
lret
pop
shrl
lods
sub
in
mov
dec
iret
jo
push
pop
mov
mov
insb
xor
add
push
lods
push
fs
scas
push
xorl
cmp
ja
movb
loop
xchg
mov
jne
packuswb
adc
mov
sbb
jb
xor
shll
push
fdivl
lcall
jno
sub
daa
and
jo
popf
sub
sbb
sarl
nop
outsl
cs
sbb
sbb
push
enter
mov
mov
jo
ja
mov
jo
pop
leave
mov
and
aas
jo
insb
out
pop
loopne
push
xorl
sbb
jo
jns
rorb
sbb
aam
mov
or
jo
dec
sub
test
jl
jp
pop
pushf
js
cmp
jae
roll
scas
bound
testl
mov
lcall
jnp
popa
mov
push
imul
fisubs
daa
rorb
mov
ret
or
xlat
mov
or
fbstp
jo
test
adc
aad
sarb
jl
xor
jbe
movsb
cmp
ss
jp
sbb
push
xchg
mov
sub
insl
arpl
sbb
xchg
cmp
faddl
mov
aas
xchg
leave
insl
cmp
jp
pop
jge
push
rorb
popa
inc
mov
shrl
jo
mov
fldt
xchg
jo
cwtl
out
mov
divl
jge
ret
add
sti
jae
xchg
push
mov
or
mov
dec
loop
insb
fistpl
jo
aam
insl
cli
or
jo
inc
mov
jo
repz
in
fcmovne
or
test
dec
jae
dec
xlat
jo
shl
bound
mov
xchg
jo
dec
sbb
mov
idiv
pop
jle
pop
cmp
or
mov
fcomp
aaa
insl
mov
mov
sbb
or
or
in
jo
out
sub
into
mov
enter
scas
out
xchg
or
jo
inc
push
add
jbe
int3
cmp
rclb
mov
dec
adc
aam
je
mov
subl
and
add
pusha
or
divb
mov
xchg
cmp
inc
loopne
arpl
nop
lahf
je
adc
cld
jle
fistl
jmp
jo
mov
gs
in
jo
aad
adc
js
inc
cltd
push
push
stos
jo
or
mov
mov
inc
jo
scas
scas
mov
dec
ja
or
fcmovbe
mov
push
sti
insl
test
or
loop
mov
xor
jbe
pop
rol
and
adc
dec
pop
leave
std
sub
dec
pushf
and
xchg
stc
mov
xor
and
inc
sub
lcall
push
cmp
fdivl
xchg
cmpsl
subl
mov
mov
xchg
mov
jo
enter
jecxz
xchg
ja
call
mov
adc
leave
loope
xor
add
adc
pop
out
btr
mov
sub
and
jecxz
insl
dec
aad
mov
hlt
fstpl
sub
jo
insb
cmpsl
inc
or
sub
jae
xchg
add
adcl
mov
jge
sub
ja
inc
iret
or
mov
add
ror
mov
dec
push
jns
xorl
sti
pusha
mov
fwait
movsb
mov
mov
xchg
mov
mov
lods
add
cwtl
call
es
jle
in
loopne
sti
push
iret
mov
jecxz
xchg
out
jo
fsts
stos
jmp
pop
ret
pop
jl
inc
jo
test
jo
lock
dec
adc
cmp
jo
fincstp
enter
inc
jo
dec
mov
sbb
imul
and
ds
ret
mov
mov
inc
clc
movsb
jo
gs
aad
iret
and
mov
inc
jo
stc
sarb
scas
xor
jp
pop
and
leave
insl
sub
cwtl
arpl
rcr
mov
mov
cmp
lods
push
mov
mov
or
pop
jle
push
mov
push
aaa
int
fs
daa
imul
stos
int3
out
sti
jo
das
scas
lcall
mov
rorb
enter
pop
loop
xchg
imul
adc
cmp
cwtl
inc
test
aad
les
mov
mov
mov
pop
mov
insl
rcrl
mov
shll
cmpsb
jo
inc
cmp
sahf
dec
hlt
push
pop
iret
movsl
pop
jo
fdecstp
push
mov
add
push
frstor
addr16
inc
jno
outsl
mov
push
jo
and
cmpl
mov
mov
cmp
aam
into
fsubrl
jo,pn
mov
popa
and
enter
xchg
cmova
iret
xchg
sub
jg
pop
sub
mov
jb
loopne
in
mov
out
mov
lods
aad
cmc
lcall
jo
gs
add
leave
test
xchg
ret
mov
and
adc
pop
out
push
dec
push
xor
jmp
movsb
xchg
or
and
sbbb
xchg
js
mov
add
mov
sbb
cli
push
in
lock
jo
scas
sub
out
fmull
jne
les
lock
jo
dec
pushf
push
jo
or
and
and
fprem
jo
add
inc
jae
mov
mov
popa
dec
divl
rcrb
jo
call
jno
dec
inc
fldenv
push
daa
push
jne
test
dec
sub
insl
mov
adc
inc
jo
xor
loopne
sub
ljmp
leave
xchg
fidivl
xchg
add
and
mov
or
outsl
fnstcw
jo
jne
out
sub
jecxz
fldt
dec
aad
andb
xor
arpl
int
mov
mov
xchg
es
jo
cmpsb
or
xchg
aad
adc
outsl
mov
fcoms
pop
xchg
push
test
or
inc
sub
xchg
jo
test
loopne
imul
stc
arpl
jle
jo
adc
push
jo
lahf
add
and
mov
cmc
xchg
or
loop
in
push
cmp
rcll
xor
outsb
les
fcompl
lcall
sub
enter
mov
jo
rcrb
lock
sub
aad
jbe
jmp
lock
fisubs
rorb
lods
dec
xor
jo
sahf
daa
addr16
aas
xchg
je
cs
sbb
xorb
dec
add
pop
lock
cmp
addr16
inc
mov
push
insl
std
ss
arpl
aas
sbb
add
xchg
mov
ja
adc
jns
inc
mov
cmpsb
ret
xor
lock
pop
and
dec
pop
mov
or
movsl
xlat
jo
mov
mov
add
into
je
jbe
push
daa
dec
or
dec
jmp
int
xchg
out
andb
push
mov
ss
lock
pushf
les
jo
popf
in
jecxz
or
insl
lea
repz
jmp
xor
jecxz
clc
adc
cmpsl
dec
xchg
mov
mov
jmp
add
ss
and
cmp
jle
aas
es
sub
sub
sti
xchg
inc
icebp
pop
pop
call
aam
and
adc
mov
dec
test
iret
inc
lods
mov
jo
loope
pop
test
sbbl
sarl
nop
movsl
movsb
adc
aaa
mov
jo
inc
shrl
mov
cmp
adc
jno
incb
sti
lock
mov
mov
mov
jae
loope
inc
pop
rol
mov
jo
lods
push
jns
xor
mov
lock
gs
jo
or
sbb
std
jo
fsubr
push
add
cmp
lcall
sbb
inc
adc
jmp
adc
cwtl
arpl
stc
mov
xlat
je
scas
jo
mov
or
cmc
pop
push
add
jo
xor
cmpsl
adc
sbbb
push
lock
cmc
hlt
insl
out
test
sbb
lahf
test
dec
out
scas
jp
sbb
mov
or
lcall
push
jo
add
stos
pop
pop
adc
jo
call
or
movsl
cli
xor
lahf
jo
xchg
xlat
xchg
mov
incl
jo
fwait
enter
nop
mov
cmp
outsb
in
lret
fldenv
xchg
stos
cmp
mov
pop
and
mov
lret
sub
jo
xchg
lods
pop
jle
sahf
cmp
cmp
insl
dec
mov
mov
push
xor
xlat
jo
mov
and
jne
aas
add
or
and
or
xor
jo
in
xchg
add
xor
sti
sbb
repnz
xchg
mov
mov
fnsave
push
arpl
bnd
xchg
dec
inc
stc
adc
jo
mov
cmc
jbe
into
ss
mov
pushf
add
jo
cmp
pop
mov
mov
push
add
in
jl
nop
mov
aad
lods
js
aam
outsb
or
cs
inc
mov
xchg
sub
dec
jecxz
lock
dec
push
out
fistl
xchg
fidivl
jo
int3
xchg
inc
inc
das
cwtl
push
in
mov
xor
xchg
lods
jecxz
jae
mov
test
jp
jl
lret
aaa
std
add
cmpsl
shll
add
mov
pop
mov
int3
xlat
jl
jae
jmp
cmp
mov
fs
rorl
jo
dec
pop
fadds
mov
mov
sub
and
mov
call
cmp
insl
jge
mov
or
mov
xchg
rcll
xor
jecxz
cltd
test
sahf
test
xorb
push
sbb
mov
out
inc
test
sub
push
jo
sub
inc
or
jo
push
adc
cld
add
mov
jo
aad
mov
cltd
push
pop
pop
in
insb
adc
push
sub
xor
ret
sub
mov
popf
add
inc
or
shll
jo
xchg
xchg
stos
imul
xchg
or
sar
je
out
inc
aad
add
divb
test
lock
sub
lods
out
cmp
jo
pusha
push
xchg
out
mov
xor
sarb
aad
pushf
xchg
pop
je
insl
xchg
mov
pop
lock
out
daa
jo
imul
ja
mov
out
mov
divb
xor
lea
mov
scas
xchg
mov
pop
out
jo
mov
out
in
jecxz
jo
add
xlat
or
or
shrb
insb
jmp
xor
or
mov
sub
jo
idivb
imul
out
sub
stos
jo
fcomp
fldpi
and
outsb
jecxz
pop
fsubl
lock
ret
aam
je
xchg
sub
mov
or
ficomps
and
outsl
pop
cmp
insl
lret
mov
adc
adc
in
or
cmpsb
sub
loope
sub
shrb
jo
les
imul
xor
mov
lods
fcom
aad
insl
aam
mov
sbb
mov
clc
mov
rorl
jo
sbb
jl
fwait
or
add
push
mov
mov
add
push
adc
xor
push
sub
jnp
leave
ss
push
jl
mov
fdivrl
mov
inc
jo
call
xchg
mov
fwait
jle
cmp
rorl
int3
mov
lds
jns
leave
jno
addl
jo
xchg
fld
aaa
shll
lret
lock
adc
test
pushf
lods
sub
dec
push
shl
sub
mov
imull
mov
mov
outsb
movsb
jmp
or
sbb
imul
dec
push
jo
ficompl
xchg
sahf
adc
jo
lods
push
mov
repnz
movhps
std
jo
mov
data16
mov
icebp
jp
enter
add
or
cmpb
inc
xchg
mov
sbb
rolb
pop
iret
shlb
fstenv
adc
or
stos
add
testb
dec
lock
jmp
jp
imul
les
aaa
mov
xchg
jle
jo
lret
mov
mov
fistpll
mov
fsubrl
jo
cld
sti
test
dec
sarl
sarl
adcl
enter
sahf
push
inc
sbb
mov
or
jo
push
pop
xor
add
inc
imul
int
jo
call
dec
jmp
in
mov
dec
test
push
imul
jo
dec
lds
testl
mov
fdivrl
or
js
push
lret
mov
pushf
push
fs
cmc
jo
sub
flds
fsubrl
jg
dec
mov
std
movsb
ror
cmc
pop
sbb
in
loop
xlat
mov
and
push
dec
jbe
sar
outsb
and
and
aas
mov
mov
jge
mov
inc
mov
pushf
test
add
jo
dec
adc
and
xor
pop
mov
test
mul
imul
loopne
sti
in
jne
int3
repnz
mov
pop
gs
push
movsb
push
jnp
jo
scas
mov
ret
insl
or
push
shll
iret
sbb
sbb
dec
lods
push
xchg
jno
dec
add
jb
lods
mov
aaa
and
js
push
cld
shl
out
cmc
arpl
sub
inc
test
and
fistl
jo
xchg
add
mov
or
popa
aad
push
je
es
test
cmp
xor
in
sarl
sarl
and
sbb
cmpsb
add
push
outsl
push
sbb
loopne
xor
insl
insl
mov
and
ja
cmc
fdiv
sub
or
inc
cmp
push
mov
and
mov
push
jmp
push
xor
popa
mov
cli
jg
adc
in
outsb
imull
adc
pop
fisttps
ffreep
jne
adc
pop
lret
dec
adc
jae
push
dec
mov
test
mov
test
cmpsb
fsubrl
and
lods
mov
add
loope
jg
mov
and
test
cli
and
aad
imul
je
sbb
daa
mov
shll
xchg
es
je
xor
add
dec
adc
cmp
lds
test
xchg
pushf
movsb
push
mov
jae
jo
arpl
mov
dec
pop
cld
jl
jb
sub
das
add
pop
out
in
xor
repnz
inc
ljmp
test
sub
sub
incl
xor
lds
movsl
movsb
sbb
jo
je
aad
loop
pop
jo
outsl
and
icebp
inc
sahf
pop
jo
fst
jl
cmp
jno
push
sbb
add
inc
jo,pt
mov
fwait
loop
xor
mov
xchg
inc
daa
ret
adc
mov
cmp
add
lea
jo
jb
movsl
cmp
adc
aad
cs
cmp
sbb
or
in
xorl
mov
test
gs
push
or
jo
test
lds
mov
je
insl
cmpsl
aas
mov
jo
jnp
pop
mov
popf
lea
in
imul
stc
outsl
adc
push
xchg
cltd
xorb
pop
add
icebp
shlb
jbe
sub
mov
movsl
stc
fsubl
cmp
nop
test
and
add
clc
lcall
stc
cmc
sbb
test
mov
pop
sub
popf
jo
dec
lds
int
scas
jo
in
xor
dec
icebp
fdivl
ret
sbb
call
fildl
add
cmc
into
push
mov
fdecstp
xor
xchg
cmp
sub
outsb
js
sbbb
insl
inc
repnz
mov
lods
in
jae
jo
daa
das
xor
pop
loope
inc
lock
lods
je
arpl
pop
int3
jp
cltd
leave
mov
or
cmp
ss
bound
repz
lods
mov
jo
mov
jne
cmc
loope
jo
aad
push
data16
lds
lock
adc
bnd
in
sti
sbb
flds
insl
orb
push
sarl
arpl
aas
jmp
jecxz
fadds
inc
xchg
std
pushf
fwait
outsl
mov
push
push
xor
or
mov
jb
fdivp
xor
loope
or
and
insl
jno
cmp
mov
jne
dec
mov
movsb
popf
cld
nop
lock
incb
fucom
shlb
fidivl
pop
xchg
inc
mov
and
inc
aas
jo
fldenv
fidivs
push
cmpsb
int
push
les
jo
sbb
cld
ret
jg
jo
cmc
std
cs
pop
aad
loopne
jo
nop
fs
and
ret
or
pushf
jo
adcb
lea
cmp
mov
into
xor
jne
push
adc
cmp
sub
lret
push
sti
mov
dec
ret
mov
inc
outsl
mov
or
fcmovnb
cmc
xchg
cmpsb
cmp
jg
xor
fs
jno
bound
jge
dec
fwait
cwtl
mov
xchg
mov
lcall
in
cmp
jo
lds
ds
fisttpl
and
int
add
mov
lock
sub
test
jo
test
mov
jo
dec
sub
imul
jo
test
imul
bound
dec
inc
jg
scas
fistpl
xor
push
fists
dec
xor
in
out
jae
addr16
bound
outsl
mov
mov
mov
and
jns
fisubs
sub
dec
jo
psubq
push
lahf
fists
in
add
ret
fdivrs
pop
ja
fcompl
mov
jnp
leave
add
aas
pop
jo
int
lret
popa
imul
sbb
jp
jle
xchg
lret
scas
dec
adc
jle
int
and
in
fdivs
imul
push
add
loop
lock
inc
ja
lods
mov
cltd
pushf
repz
fistl
call
ret
sub
jo
jp
loopne
fisttpl
ljmp
cmc
jo
shll
jo
cmp
cmp
mov
pop
dec
inc
jno
jo
addr16
ficomps
mov
insl
mov
pushf
pop
mov
push
or
sbb
jecxz
adc
push
jo
sbb
in
outsl
lret
je
ficoml
push
sbb
mov
addb
cmp
sti
push
bound
push
popf
ret
lret
insl
stos
push
ljmp
je
jae
rcrb
jo
fistpl
cmc
jo
jnp
sbb
aad
xchg
jo
js
scas
inc
mov
jo
sbb
mov
andb
xchg
xor
dec
inc
xchg
jo
cld
inc
mov
push
aad
lcall
leave
sub
or
mov
jae
bound
aad
dec
jo
int3
dec
adc
rcll
sbbb
xchg
dec
and
cmp
add
jo
aas
adcl
sub
and
fiaddl
mov
and
fdivl
std
adc
push
push
dec
loope
mov
insl
and
pop
jno
lret
popa
xor
cs
push
xchg
insb
fnstenv
mov
ss
jo
scas
mov
repz
xlat
push
adc
jo
push
mov
xchg
pop
lock
inc
xchg
xchg
add
loopne
inc
xchg
iret
jbe
mov
imul
mov
jo
dec
stos
adc
inc
movsl
insb
xor
add
pop
jle
mov
jp
jo
lods
jmp
jo
cmova
pushl
sub
jle
sbb
jne
inc
mov
insl
cmp
inc
mov
outsb
pushf
nop
loope
movsl
mov
jo
dec
jg
mov
push
lock
daa
cld
dec
jo
sbb
lods
pop
nop
adc
inc
movl
imull
fnsave
cmpl
int
andb
movsb
mov
mov
push
adc
xchg
cs
pop
sti
jl
dec
ret
lods
ja
push
dec
mov
jne
jo
sub
int3
out
gs
cli
cmp
push
lods
mov
es
xor
jo
ds
jno
xchg
addr16
imul
jo
hlt
and
ja
sbb
pop
movsb
inc
adc
icebp
lea
cld
scas
int3
lock
decb
xor
xor
shll
mov
push
sub
aaa
pop
jne
xchg
insl
nop
icebp
mov
and
mov
outsb
mov
xor
rorl
xor
sbb
fs
jg
fdivs
mov
mov
iret
jo
mov
pop
jae
inc
jecxz
xlat
xorl
jo
filds
imul
mov
jl
fldz
fwait
jmp
pop
pop
out
jo
imul
xor
in
out
jle
insl
cmpsb
sub
and
pop
gs
cwtl
addl
jl
mov
add
push
cmp
jo
out
je
or
pop
mov
cmc
jle
loop
ljmp
jge
push
mov
xchg
mov
mov
ljmp
jo
mov
add
fmull
or
test
mov
xorb
ja
sub
fucomi
cmpsb
sbb
pop
sar
out
xor
mov
popf
jo,pt
fldcw
orb
sbb
loope
fs
test
xor
push
addb
xchg
pop
adc
jo
mov
pop
fwait
testb
lcall
in
dec
rcrl
loope
idivb
dec
ljmp
stc
ret
out
jp
jo
scas
sub
mov
jo
inc
faddl
or
xor
pop
mov
push
sar
or
push
leave
or
idivb
das
cld
jo,pn
sahf
pushf
fistpl
arpl
push
adc
in
or
pushf
xor
aad
repnz
jnp
fwait
and
xlat
ljmp
push
push
fsts
cmp
pop
push
push
and
rcrl
test
in
mov
cmp
into
pop
int
jo
test
aam
cmc
fmuls
and
pop
mov
into
or
xor
les
cs
in
jo
jne
outsl
jp
pop
andb
mov
pop
aaa
adc
fisttps
sarl
push
jmp
and
int
xchg
fnsave
push
dec
push
loop
incb
scas
cs
fcomi
fs
popf
shll
scas
cmp
add
add
lahf
jo
mov
mov
jl
sub
fs
shlb
or
ja
pusha
dec
add
sub
push
mov
mov
imul
mov
lea
repnz
int3
push
outsb
frstpm(287
jecxz
mov
mov
push
lcall
push
rcrl
cmp
sar
cld
jb
shll
xor
sahf
jo
mov
inc
jnp
jp
cmovns
sub
or
xchg
lret
loopne
nop
es
jo
in
mov
cmc
xor
and
xor
hlt
inc
aad
sbb
push
cmc
and
xor
xor
cmp
gs
out
lods
in
nop
dec
jmp
lahf
push
clc
push
jo
cmp
xchg
and
imul
arpl
add
and
outsl
arpl
mov
push
xlat
jo
repnz
dec
jle
aad
sbb
sub
xor
jle
jp
or
xorl
lock
fucomip
mov
pop
fsubrs
bound
into
enter
cs
std
in
mov
jae
psadbw
stc
mov
pop
and
lock
test
je
test
stc
es
push
lahf
push
jmp
jo
aad
fstl
sub
jo
pop
xor
adc
arpl
mov
jne
cmovp
push
loopne
jle
cmpb
fsubrl
gs
pop
xor
xchg
mov
push
mov
dec
mov
in
nop
stos
push
pop
ja
dec
hlt
dec
pusha
loopne
add
adc
test
arpl
jno
insl
adc
sbb
call
enter
jge
pop
hlt
xchg
and
mov
mov
push
lahf
jp
cwtl
clc
pop
nop
rcrl
pop
insl
jbe
adc
pop
je
mov
sub
fdivrs
sbb
cltd
adc
jo
xchg
popa
xchg
pop
loope
push
arpl
cwtl
jo
inc
mov
sub
cld
bound
fdivp
pop
push
adc
mov
in
test
mov
jo
push
push
in
pop
lock
loope
mov
jnp
repz
fwait
add
sbb
cld
push
vpmulhw
movsl
xor
hlt
shl
pop
add
xchg
inc
add
shll
stos
outsb
mov
fldt
test
xchg
insl
or
pop
ds
rcrb
xchg
call
ret
push
jno
lea
stc
fdivl
xchg
scas
pop
mov
pop
jo
in
lods
mov
sub
mov
cmp
loope
aam
xchg
inc
push
lea
fmull
sbb
outsl
aad
outsb
out
jnp
mov
jae
test
xchg
mov
mov
lods
xlat
mov
inc
outsb
mov
sbb
sbb
inc
jmp
test
fmuls
lret
rcr
and
loope
dec
cmc
push
shll
xchg
ret
jb
imull
lock
push
es
pop
inc
xor
test
lock
mov
jo
lds
or
cmp
cmp
aas
cmp
push
sub
pop
jo
mov
xorb
push
or
mov
sub
ret
mov
jecxz
mov
and
sbb
popa
jo
ds
loope
test
lods
insl
mov
es
hlt
inc
fmull
mov
ja
popa
imul
lret
jo
add
add
movl
cli
jo
dec
test
arpl
pop
pop
lods
lret
mov
cs
int
outsb
jo
dec
stc
push
jo
pusha
lods
mov
jo
mov
pop
test
inc
divl
mov
jo
lret
aad
jnp
sbb
xor
mov
mov
lock
js
bound
jo
sbb
fdivs
push
or
cmp
cld
and
mov
jno
xchg
pop
imul
shr
insl
insb
jl
mov
xchg
pop
loop
adc
and
insl
mov
inc
pop
xchg
lods
jae
sub
fcompl
sub
cmp
js
jo
jp
fsts
cmpsb
arpl
pop
and
xchg
jbe
sbb
test
outsb
pop
aad
sbb
push
shll
aas
pop
popf
stos
dec
jae
jo
xchg
mov
aaa
jo
push
mov
xlat
jo
daa
mov
insl
pusha
es
lods
dec
ret
pop
jo
leave
into
xchg
ja
imul
or
insl
mov
or
mov
mov
outsb
movsb
jg
fimull
pop
icebp
lock
push
fstps
mov
adc
orl
outsb
sub
mov
icebp
hlt
jae
mov
xchg
sub
jo
inc
and
xchg
mulb
pop
enter
iret
int3
cmp
pop
out
xor
jo
test
ljmp
xor
popf
inc
inc
fidivs
aad
push
lds
out
cmc
push
ljmp
scas
xor
fsubp
mov
insb
dec
jge
inc
icebp
pop
inc
fs
int3
scas
ja
ljmp
bnd
test
push
push
jo
aad
shr
mov
rcll
les
mov
mov
rolb
jo
cmp
inc
sub
jo
aas
cmp
pop
pop
insb
stos
aad
sarb
add
add
add
or
jo
inc
shl
xchg
stc
sub
or
mull
mov
xor
jl
jo
or
push
push
push
les
adc
jecxz
data16
mov
shrb
jl
or
mov
fsubrs
testl
sti
xchg
rorb
and
pop
lea
cmpsl
mov
add
mov
mov
f2xm1
add
fs
ror
insl
cli
fcomps
jp
rclb
jmp
mov
in
enter
cmpsl
jo
jp
aas
and
fyl2xp1
gs
fimuls
in
ja
add
mov
mov
jne
xor
lock
pushf
clc
dec
addr16
sub
add
icebp
lods
test
into
fldl
cmc
push
pop
pop
mov
repz
insl
xchg
aad
sub
lcall
push
test
mov
cmp
adc
lret
shll
fildl
imul
aad
adc
test
push
or
xchg
ret
sahf
out
daa
adc
popa
icebp
sarl
jp
mov
mov
mov
mov
dec
jo
fwait
test
cmp
aad
add
rep
inc
mov
nop
xor
push
push
inc
mov
subl
jo
ja
stos
out
push
mov
dec
xchg
addr16
sbb
pop
icebp
cmp
inc
cmp
negl
out
lcall
jo
arpl
jg
jo
inc
mov
fwait
notl
in
in
test
mov
or
pop
cmp
mov
mov
loop
sbb
or
faddp
mov
jo
mov
mov
arpl
cmpxchg
rolb
inc
xor
xor
jo
rcr
push
add
cmc
sub
jns
push
pusha
rep
sub
lret
adc
and
push
outsb
and
out
xchg
xor
add
je
pop
sbb
and
jo
sub
orl
jecxz
jo
adcb
loop
cli
enter
rcrl
xchg
and
std
ret
jnp
mov
jmp
add
insb
jns
dec
xor
add
push
or
add
xor
pop
shll
push
aad
je
daa
jmp
inc
or
lahf
bnd
fidivs
enter
arpl
jo
and
clc
jo
pop
out
aas
icebp
xlat
out
insl
xor
jnp
aaa
jp
pop
cmpb
inc
fsubrs
push
push
aaa
inc
pop
push
jo
adc
jle
sub
xor
or
into
pop
xor
mov
pop
in
mov
shrb
aad
loop
add
xchg
jo
push
adc
mov
mov
in
push
jo
inc
push
sbb
out
mov
jns
ret
enter
xchg
cld
shr
or
push
test
mov
pop
outsl
pop
push
movsb
dec
ja
pushf
aad
stc
fdivrs
loop
adc
std
mov
aas
pop
xchg
jnp
addr16
add
adc
add
adc
pop
js
push
cwtl
jl
cmpsb
outsb
or
rol
pop
cmp
push
mov
push
sahf
adc
xchg
pop
imul
pushf
fidivrl
dec
loop
nop
ds
adc
add
push
pop
out
dec
jb
bound
jno
cmp
push
xchg
xor
divl
shl
movsb
jmp
sti
jo
sub
data16
outsl
std
xchg
cmc
and
fwait
jnp
mov
andl
call
imul
xchg
fisttps
lock
cmp
jo
mov
ja
inc
cmc
stos
adc
push
mov
lock
fmull
ds
scas
shlb
pop
inc
sbb
sbb
jo
subb
cmp
hlt
add
mov
jle
jo
pusha
ss
sub
in
inc
push
xor
jno
pop
test
imul
je
sbb
cltd
lock
mov
jo
fmull
test
mov
ljmp
push
bound
jmp
repnz
jo
adc
mov
inc
pop
xchg
pmullw
aas
cltd
push
add
add
fwait
lea
xor
out
iret
lock
xor
jnp
fsubrl
jo
mov
neg
fcmovnbe
push
cmpb
mov
test
inc
adc
pop
movsl
aad
jo
mov
leave
sarb
xor
repz
fnstenv
or
mov
jo
mov
jp
insl
cmp
adc
int3
mov
repnz
sub
icebp
std
ret
mov
loop
mov
and
xor
call
push
mov
xchg
mov
outsl
scas
fstl
mov
jmp
add
dec
js
fdivl
nop
sti
daa
test
push
cmc
and
jo
push
cmp
jecxz
in
mov
add
cmpsl
out
subb
lret
lahf
fstl
sahf
mov
mov
xchg
cmpb
jge
add
pop
jo
jne
pop
dec
lock
cmp
je
mulb
jb
sahf
ljmp
into
and
jo
sbb
test
shrl
dec
xor
rcl
mov
subl
divl
in
inc
cltd
jns
data16
jo
xor
bound
pop
xchg
insl
lods
insb
jo
leave
cmp
int
or
or
and
push
jecxz
insl
jmp
leave
outsb
nop
cmpsb
in
mov
jle
cmc
pop
lods
shll
adc
test
xor
jo
shlb
cmp
mov
xchg
lock
mov
sbb
pusha
xor
sbb
mov
addr16
and
mov
dec
jle
jp
pop
jo
sub
jl
lds
adc
data16
mov
out
xchg
clc
pop
push
jmp
std
negb
and
jo
sbb
filds
adc
fwait
lret
pop
cmp
jo
cmpsb
pop
rol
cmp
mov
push
jo
jp
enter
or
jo
sbb
aas
adc
jae
xchg
add
mov
fsubr
imul
mov
xor
je
jbe
jne
cmp
repnz
push
inc
jb
jo
mov
inc
ja
bound
push
fs
mov
adc
mov
mov
jo
jecxz
adc
out
add
out
or
ljmp
test
cld
mov
mov
jo
in
test
mov
cli
in
inc
jo
ficoml
xchg
cmp
int
aad
jns
negl
cmp
jo
movsl
xchg
test
fld
ja
jle
gs
lods
jge
aad
jo
scas
mov
shrl
ja
adcb
xchg
fildl
xchg
fldl
push
imul
mov
popf
push
push
and
insb
lock
xchg
mov
mov
mov
sub
and
imul
lods
mov
cwtl
pushf
jo
jne
mov
ret
jbe
mov
aam
push
rcr
dec
fsubs
aad
adc
cmp
or
mov
inc
add
jo
sbb
push
adc
out
loop
or
cli
sbb
insl
fdivrs
and
adc
dec
ja
mov
mov
loopne
arpl
pop
adc
ljmp
push
push
inc
xchg
jecxz
mov
and
fsts
sbb
mov
mov
movsb
daa
jo
inc
lods
popf
mov
aad
test
add
incb
mov
jp
mov
cmpb
mov
mov
inc
aaa
xor
sbb
out
inc
or
cmp
cltd
jo
push
mov
add
ds
arpl
jo
out
gs
xchg
fmuls
clc
jo
pop
xor
inc
cwtl
loopne
cli
jo
sub
inc
mov
lock
imul
xor
lods
jle
insl
xor
xor
xlat
daa
push
add
jae
push
ds
fistps
movsb
sub
jo
lahf
stos
mov
dec
and
leave
add
jmp
in
jmp
jo
xlat
push
arpl
fdivl
data16
push
and
cmp
xor
int
je
sub
test
mov
pusha
jo
enter
add
out
insl
jno
ja
jecxz
pushf
xchg
add
aas
notb
sbb
andb
daa
inc
addb
jo
inc
mov
pop
jo
sbb
pop
cli
lds
lahf
mov
xchg
arpl
jo
xor
pop
xor
xchg
dec
mov
pushl
adc
rcr
int
xorl
mov
cmp
test
push
insl
cwtl
sbb
adc
pop
jo
lods
outsl
pop
adc
mov
in
scas
dec
fcmovbe
insl
inc
fstpt
stos
pusha
ds
xor
negl
jb
flds
in
jo
out
mov
sub
sti
test
nop
push
adcb
fsubr
test
fidivrl
or
pop
in
pop
sahf
mov
dec
jns
rep
pop
jo
sti
cmp
jnp
sbb
jo
mov
sub
dec
sub
lock
neg
mov
pusha
jo
lea
push
add
mov
mov
push
lcall
or
pop
inc
or
mov
and
mov
push
cli
cmp
mov
negb
cmc
lods
les
or
pop
in
shlb
jo
shll
jo
dec
sarl
insl
xchg
insl
pop
int3
outsb
jbe
add
xorb
adc
xlat
jo
sub
scas
pop
test
pop
cwtl
cmp
mov
rcrb
or
sbb
inc
aad
iret
and
and
jno
lret
jg
and
lcall
xlat
insl
xchg
xor
mov
xor
pop
lods
daa
stos
mov
mov
cs
jno
fdivrp
fucomip
jo
or
xchg
jge
push
jnp
xor
push
dec
dec
jns
sub
pop
orb
pop
cli
rorl
lret
arpl
test
push
outsl
dec
xor
adc
out
add
loop
push
ljmp
in
cmp
insb
jmp
jo
fistl
push
jo
push
pop
dec
add
lcall
pusha
fstpt
jno
aaa
xchg
sub
pushf
jo
mov
mov
scas
push
mov
mov
mov
push
push
xchg
test
and
nop
rorb
shrb
cmpsb
mov
jo
or
push
cmp
jo
xor
shll
aad
aaa
pop
adc
test
add
pop
mov
xor
test
fs
jl
jno
mov
fsubrl
dec
push
enter
lret
int
inc
mov
jb
rclb
pop
out
sahf
jo
xchg
mov
jnp
nop
jo
jne
das
xchg
xor
or
je
testb
enter
ljmp
jo
dec
or
cmp
lock
mov
fadd
pop
dec
push
out
inc
mov
aam
notl
dec
scas
jo
push
cmc
in
jmp
ret
jo
scas
mov
jo
push
into
aad
mov
dec
jo
add
or
in
push
pop
aas
imul
lock
jnp
jo
fcmovnbe
sbbb
ja
cmc
out
cmp
mov
in
ja
sub
add
pusha
pop
jb
jo
dec
repz
push
sub
jo
mov
jecxz
jo
js
pusha
xchg
ret
jns
xchg
int
mov
inc
fidivs
adc
cmpsb
jnp
jo
jae
push
xchg
les
lods
jo
xchg
or
or
mov
or
jae
pop
into
sub
pushf
leave
jle
sti
and
ljmp
pushf
xor
pop
fldl
nop
mov
mov
add
xchg
jo
push
mov
sbb
and
jb
andl
mov
push
aad
mov
xchg
sub
or
push
lock
cmp
pushf
std
cs
adc
fsubrl
and
jo
fldcw
xchg
jl
and
into
adc
scas
jno
ret
push
lock
movl
ja
dec
scas
mov
jo
pushf
pop
test
jo
xchg
fs
adc
out
xor
sub
int
dec
loop
insl
push
push
jp
jmp
mov
mov
subl
push
ret
xor
or
adc
into
fnstenv
dec
xchg
dec
jo
aas
aad
ds
nop
add
lock
loopne
sbb
push
jo
es
mov
mov
pop
jp
jo
dec
or
lock
pop
mov
lret
jo
push
lds
jo
aam
repnz
or
imul
add
push
divl
mov
jge
scas
fistl
gs
les
jo
ret
popf
and
mov
fs
pusha
lock
mov
or
push
or
cmp
and
rorb
lahf
pop
mov
nop
cld
fs
aas
shl
jo
jp
jge
ficoms
jg
addr16
mov
jo
ror
jmp
jo
xorb
jo
cmc
aad
daa
into
test
push
mov
pop
rep
fcmovnbe
adc
jo
add
jnp
iret
mov
int3
lea
sahf
jo
mov
outsb
push
jo
shl
pusha
imul
jo
aam
push
mov
adc
shll
adc
lea
sbb
cli
xor
pop
stc
jo
push
sub
test
jo
lcall
aad
xchg
ds
jo
mov
pop
push
rcrb
loopne
push
test
repnz
rol
jo
shrl
sbb
jo
sbb
push
setnp
pop
xchg
das
cmovs
cwtl
test
mov
jo
imul
pop
jo
fwait
jns
into
fisttpl
jne
pop
mov
fwait
jo
and
dec
xchg
fnstcw
or
and
cli
jge
sbb
es
test
mov
pop
inc
adc
stc
fcoml
jl
movsl
repz
pop
mov
jno,pt
push
mov
cmp
sbb
jle
jo
jmp
fcoml
std
lea
pop
or
shll
lock
test
stos
lods
add
jo,pt
jnp
jl
scas
sub
or
cwtl
adc
jns
dec
jo
add
or
jo
mov
and
dec
insl
push
mov
jo
xchg
cld
sub
jae
push
cs
adc
mov
nop
and
inc
aaa
and
adc
sbb
add
pop
jne
aas
pop
ljmp
insl
decl
pop
mov
pop
jo
push
icebp
cvtdq2ps
jo
mov
push
fnstenv
cmp
lret
pop
and
jb
lcall
mov
jo
sti
insl
cli
js
jo
xor
add
and
dec
adc
dec
scas
or
cs
and
test
adc
xor
jg
mov
lods
filds
aaa
negb
jo
dec
pusha
lret
and
xchg
jae
aad
add
lock
mov
push
jo
pop
push
mov
aam
inc
aad
sar
fadds
push
jo
adc
fimull
fninit
inc
lods
cmp
sub
rcrb
and
clc
lock
notl
xchg
jo
cmp
rcr
movsb
adc
stos
fists
xchg
push
pop
xchg
aad
mov
jo
lock
pushf
mov
add
mov
xchg
inc
xorb
xchg
ss
insb
jo
push
cmpsb
aad
jge
xchg
lret
jo
jno
mov
icebp
push
mov
jo
cwtl
xlat
shrb
aad
repz
push
jle
jo
push
cmp
push
cmpsb
out
call
mov
pop
dec
lret
jmp
cmpsb
insl
lahf
adc
push
adc
jo
je
mov
add
lds
cmpsl
ficoml
cmp
sub
es
cli
cwtl
cmp
addr16
cmp
jo
mov
ret
push
vpshufd
jmp
add
negb
movsl
jecxz
mov
pop
inc
push
in
xchg
add
jo
neg
out
push
addr16
outsb
adc
xchg
out
adc
cltd
lock
adc
les
mov
popf
jo
sbbb
mov
aas
cmpsb
or
imulb
dec
add
aam
and
sub
jo
or
in
lea
inc
pop
lahf
jo
jp
dec
popf
int
jnp
adc
aad
or
jo
fidivrs
scas
bound
int
pop
es
jp
dec
or
ret
cmp
jo
int
jmp
ja
lock
dec
jo
popl
leave
xchg
dec
mov
je
insb
push
xlat
sub
fidivrs
mov
push
shrl
jg
jo
clc
fbld
jo
mov
push
insb
push
sbb
ja
in
jae
mov
lock
jo
stos
mov
rcrb
in
neg
test
fisttpl
mov
push
into
fbstp
in
stos
nop
aad
loope
jo
push
movsl
mov
add
mov
in
cwtl
pop
je
outsb
or
lock
mov
testb
cmp
lret
shrb
fists
fwait
test
aad
adc
pop
cli
add
in
push
mov
shrb
rorb
icebp
xchg
jo
sbb
push
jo
iret
inc
pushf
mov
pop
test
jbe
aaa
fwait
jo
or
adc
sbb
push
mov
loop
ficomps
mov
lret
imul
rolb
sti
jo
popa
mov
andl
cli
add
dec
jo
push
mov
fidivs
scas
and
sbb
enter
mov
jge
jle
cmp
pop
mov
js
pop
into
xor
movsl
lds
ret
jbe
jg
xchg
nop
loopne
jo
mov
push
mov
dec
cmpsb
jo
jae
sbb
lea
jo
rcll
push
fildll
std
outsb
mov
xor
out
jnp
andb
movsl
insl
test
inc
or
mov
push
insb
push
fisubl
pop
icebp
mov
jne
jo
imul
fwait
jo
aad
les
movsl
insl
fisttpll
jo
xchg
fdivl
jo
nop
pop
push
mov
fbld
push
or
movsl
les
arpl
jo
pop
imul
movl
add
mov
jp
jb
and
jecxz
jo
or
xchg
ss
rcrb
sub
fwait
mov
sub
ja
faddl
popf
mov
mov
aas
jo
push
inc
mov
pop
int
cmpsl
fnstenv
push
inc
add
incl
mov
add
jo
ljmp
xchg
sbb
ss
loope
cmp
lods
push
out
jns
cmpsl
jo
mov
mov
xor
jo
aas
mov
dec
cmp
dec
out
jo
and
pop
ljmp
mov
and
loop
fimuls
js
xchg
outsl
dec
repz
fistl
and
lret
scas
pop
outsb
clc
adc
sbb
and
ss
cld
pop
rcrb
fildl
jo
stos
or
insl
loopne
ja
pop
inc
xor
dec
cmp
das
scas
enter
movsl
std
jo
xchg
idivl
xor
addr16
jo
mov
pop
iret
pop
andb
mov
pop
bound
mov
add
mov
pop
sub
cmp
mov
add
jo
push
pop
sbb
cmp
lods
mov
test
sub
fdivl
push
mov
xor
adc
mov
test
and
jle
js
subl
dec
cli
loope
insl
fld
imul
push
dec
push
dec
add
ret
jecxz
out
insl
xchg
dec
test
int
fdivs
mov
mov
fcoml
mov
in
sar
jo
sahf
jle
mov
or
outsl
cltd
lea
cmp
stos
test
aad
fldl
mov
jo
pop
push
movsb
add
cmp
dec
jmp
dec
loopne
in
jo
push
push
adc
jo
fldt
jle
mov
jo
pop
adc
push
mov
lea
or
shll
clc
or
jecxz
movsl
adc
xlat
ja
lea
jnp
movsl
mov
sarl
cmp
nop
cmp
jo
scas
xchg
mov
orb
push
insl
jno
pop
dec
jne
add
push
jo
ret
stos
dec
dec
iret
vpshufhw
xor
adc
jo
lock
jo
add
sbb
imul
inc
aas
add
and
push
fsubl
inc
dec
xchg
jno
mov
mov
mov
jo
cmc
sbb
gs
es
loopne
cs
sub
shrb
jge
sbb
push
mov
cmpsb
xor
int
xchg
cli
shll
push
mov
out
mov
loope
dec
jo
arpl
xchg
sub
push
jo
fnsave
jb
mov
jne
out
out
out
cli
in
popf
pop
inc
cwtl
inc
sti
and
jl
mov
fnstenv
jae
cmc
arpl
xor
jo
pop
pop
add
ds
aad
push
insl
mov
xor
or
insb
jo
call
js
jo
rep
xchg
sbb
repnz
test
push
adc
jo
xor
cmp
and
out
out
push
sub
in
insb
fidivrl
stc
jo
mov
jecxz
dec
call
xor
rcl
loop
fistpl
aam
xchg
or
call
jo
outsb
lods
sbb
jo
jnp
push
jmp
cmp
and
push
pop
divb
insb
xchg
xlat
shlb
cmp
jo
sub
mov
jo
push
and
xor
leave
jo
and
testb
lea
mov
add
mov
xor
das
jo
sbb
xchg
fsts
push
jo
jge
aaa
popa
out
add
mov
jg
sahf
fs
pop
jo
lea
insl
lods
mov
inc
mov
test
faddp
xchg
xchg
xchg
cmp
mov
movsb
add
fwait
cmp
fisubrs
inc
xchg
sbb
incl
dec
xchg
lret
jo
lods
cli
lret
push
jae
and
fucomip
push
stc
das
dec
outsb
cltd
pop
adc
jo
mov
out
xchg
clc
dec
jne
lock
ja
xor
fcoms
dec
cmpsb
xchg
lock
clc
rcl
adc
pop
mov
enter
jo
int3
test
adc
add
adc
xorb
subl
jo
pop
lcall
pop
fst
adc
ljmp
shll
cmp
out
int
jnp
inc
add
das
testl
adcl
xchg
lods
dec
lret
pusha
adc
xchg
mov
aad
adc
sub
inc
outsl
pop
into
lret
sub
ja
enter
outsb
fsubl
out
aaa
repz
xchg
add
gs
and
adc
rorl
jno
jg
pop
jns
loope
jmp
add
rolb
xor
or
cmpsb
jo
xchg
hlt
lods
sti
out
nop
jo
cmpsl
xorl
pop
and
sbb
jb
jo
stc
and
or
in
jae
mov
mov
inc
ss
fsubl
xchg
push
imul
shll
mov
les
insl
enter
stc
and
fsts
jo
mov
jno
lcall
mov
es
mov
leave
xchg
jo
shlb
jo
pop
pop
dec
fstpt
popf
jo
mov
lret
or
jl
sub
shlb
jo
stc
lea
sbb
sarb
outsl
mov
jo
mov
sahf
jo
fstl
sbb
sbb
fcompl
lods
pop
mov
das
mov
or
dec
mov
test
mov
hlt
mov
jo
adc
test
dec
in
adc
xlat
xchg
pop
mov
cwtl
xor
loope
mov
jo
lea
or
fs
dec
jbe
out
pop
mov
xchg
ret
subl
mov
in
rolb
sti
and
call
xchg
push
cli
movsb
jo
lods
imul
aad
cltd
xchg
mov
lock
mov
mov
jo
out
fs
popf
movsl
rcll
mov
mov
jo
sbb
and
outsl
xor
push
clc
aas
dec
jo
popa
jmp
aad
test
imul
iret
xlat
shrb
gs
jbe
loop
popl
cmp
outsb
jno
mov
mov
sub
insb
pop
mov
lret
lcall
rep
pusha
test
aad
jl
jle
cmc
push
jo
loopne
out
jns
mov
mov
jno
lods
jo
mov
ror
mov
mov
mov
jl
or
adc
cmp
shll
stc
and
xorb
dec
cmpsb
aaa
mov
lret
imul
dec
icebp
cs
mov
lahf
ret
cmp
or
andl
out
sub
out
dec
pop
ja
lret
in
jo
aam
mov
sub
xchg
cmp
jg
xor
cld
test
sti
mov
ja
data16
push
int3
cmp
icebp
adc
daa
iret
xor
sub
subl
addb
sub
jo
xlat
lock
xor
pop
jo
mov
push
add
cmc
adc
jo
rclb
aad
jg
pop
nop
sarl
mov
jmp
data16
loope
jo
cmpsl
fwait
cmp
jo
imul
icebp
cmp
bound
xchg
jae
adc
pop
dec
les
loop
dec
push
push
jo
mov
lods
push
jp
xchg
push
shrb
xchg
es
add
ja
testl
sbb
call
xor
fildll
xor
pop
adc
jo
fsts
fdiv
outsb
inc
clc
jnp
mov
test
stos
jo
bound
lds
and
or
jo
inc
fisttpl
jo
clc
aad
pop
adc
fdivs
outsl
call
jo
add
pop
jo
inc
imul
jo
push
loop
dec
inc
mov
icebp
jo
test
mov
aad
imul
jo
stos
xlat
fstpl
jo
les
dec
or
add
jo
inc
xor
cld
mov
je
gs
push
dec
or
dec
jnp
ja
jecxz
mov
pop
jl
jo
add
or
pop
cmp
jecxz
dec
mov
les
test
dec
inc
push
repz
and
mov
scas
cmpsl
xchg
jo
stos
inc
cmp
popa
jo
mov
mov
mov
adc
pop
fisttpl
lods
call
push
fisubrl
gs
adcb
jo
pop
push
jge
pusha
negl
sub
cmpsb
jo
out
sub
jo
hlt
cmp
sbb
cmc
mov
mov
xchg
and
testb
pop
call
xchg
cmp
dec
out
mov
pop
testb
insb
push
pop
jp
icebp
push
lock
sbb
sub
bound
fnstenv
test
mov
sbb
adc
mov
mov
out
xchg
xor
cmp
adc
gs
jo
and
rorb
addb
cmp
cs
ja
in
movsb
push
and
or
sbb
push
add
push
pop
or
mov
xor
or
ret
jbe
jo
cmp
lcall
imul
jo
mov
shll
pop
lods
xor
pop
loopne
pushf
imul
mov
push
lds
or
fcompl
aad
je
rcll
jo
popf
inc
into
das
fdivl
pusha
dec
loop
sbb
sub
sbb
inc
jg
lret
jo
dec
add
or
mov
and
es
stos
pop
sbb
rolb
popa
fimull
bound
and
xchg
in
jo
fisttpl
xchg
cmp
jo
pop
aad
push
in
jo
or
imul
mov
mov
sti
mov
popf
jo
in
scas
cmc
rcrl
shrb
bound
adc
les
sahf
jo
push
xchg
orl
cmpsb
mov
jecxz
mov
or
in
mov
jo
push
push
xor
out
cli
jo
jmp
xchg
dec
jo
outsb
aam
lahf
add
pop
popa
leave
or
in
jo
hlt
sub
movsb
mov
or
push
mov
adc
xor
lock
push
push
and
div
and
iret
loop
leave
fidivrs
add
fistpl
jo
pop
adc
lods
jo
push
fimull
jo
inc
sub
gs
cld
ja
push
insl
mov
loope
nop
imul
xor
sbbb
xchg
out
push
cld
push
and
or
pop
imull
ret
mov
or
jle
push
pop
dec
and
jne
fcmovne
bound
adc
lret
or
shrb
mov
mov
cmp
adc
lea
mov
pop
push
pushf
int
adc
dec
jl
jo
enter
mov
mov
dec
and
jne
sti
imul
nop
xchg
sahf
lcall
pop
test
bound
inc
fstp
rcll
jne
loopne
sub
pop
leave
test
shrl
dec
jnp
mov
mov
in
dec
lds
fidivs
push
pop
add
add
scas
shll
mov
mov
pop
nop
fnstenv
dec
outsb
xchg
adc
rorb
iret
mov
jno
pop
lret
lock
cmpsb
mov
nop
mov
ds
data16
push
jo
jecxz
pop
enter
jo
mov
daa
pop
jo
cmp
xor
lcall
call
mov
dec
cwtl
sbb
lahf
mov
mov
jbe
scas
lret
fsubp
jne
in
fs
or
insl
loopne
rclb
and
inc
push
jo
cmpsb
cmp
popl
cmp
xadd
jo
push
mov
dec
jo
pop
movl
adc
pushf
jo
xor
shlb
mov
and
mov
roll
jecxz
and
in
add
mov
ja
scas
sub
pop
jo
sub
stos
fiadds
and
shll
add
jo
jbe
into
sbb
jae
fidivrl
mov
and
jb
gs
loope
xchg
cmp
jno
add
adc
or
xor
cmp
or
cmp
add
push
adc
sbb
and
lahf
loope
xchg
jo
test
mov
insb
inc
in
pop
repz
or
sub
mov
pushl
lea
jo
jne
jl
arpl
aad
mov
cltd
mov
lahf
dec
mov
lods
divb
repz
aad
jnp,pn
push
sub
lock
jo
inc
pushf
push
shl
xchg
jo
fsubrl
imul
dec
jo
or
pop
fsubp
jo
lods
aad
sub
adc
cli
shll
ucomiss
test
add
jo
pop
cmp
ss
call
jno
popl
push
gs
add
imul
das
mov
int
jo
in
in
mov
mov
sti
jo
adc
mov
jo
mov
shlb
cmpsl
dec
insb
fcomi
stc
test
cld
jo
push
xchg
aad
mov
push
push
push
lock
pop
ret
je
or
fwait
push
lock
mov
push
insl
faddl
movb
inc
aaa
pop
jae
pusha
and
adc
std
das
mov
mov
pop
imul
insb
bound
jo
pop
inc
mov
mov
sbb
and
mov
push
std
cmp
jmp
mov
jbe
mov
insl
adc
push
mov
push
add
or
pop
sub
xchg
ret
cwtl
dec
push
mov
lret
inc
lock
inc
and
aad
out
xchg
jo
nop
add
xchg
push
shll
aas
dec
aaa
lcall
dec
sbb
jge
jo
mov
int
jo
imul
call
pop
fidivrl
dec
daa
xchg
jbe
test
test
mov
add
or
outsb
xor
int3
pop
stos
fldcw
ret
adc
sti
ljmp
jge
or
out
outsl
xor
push
enter
jae
mov
jge
cld
or
inc
lods
es
lock
out
mov
sbb
pop
jnp
lock
cmp
xchg
jo
jecxz
outsb
and
jns
mov
cmp
jge
push
xchg
hlt
push
sbb
inc
popa
jo
into
test
int3
xor
push
mov
jo
xchg
jne
mov
arpl
cwtl
in
jo
rcr
gs
or
jo
cmpb
insl
pop
cwtl
rcl
andl
inc
mov
test
jo
insl
mov
jl
fimull
cld
sbb
pop
aad
in
es
inc
pop
jmp
divb
fneni(8087
jo
imul
mov
pminub
push
mov
sti
and
in
out
lock
sub
jp
jns
movsl
fstpt
enter
outsl
iret
sub
insb
xchg
mov
repz
xchg
jo
dec
stos
mov
push
adc
fcmovnb
ja
xor
lcall
jo
add
imul
out
mov
inc
mov
sbb
push
push
aad
daa
cs
cld
rcll
sub
xchg
loopne
jmp
jo
aad
mov
push
jo
push
cmc
out
sbb
sbb
aad
mov
cmpl
mov
imul
jg
and
xor
cwtl
sbb
jo
loop
stc
dec
push
push
mov
popf
insb
mov
dec
sbb
jg
push
loop
test
fldt
leave
pop
ret
push
jg
jo
cli
or
lea
jo
dec
add
movsl
andb
jecxz
outsb
jns
mov
iret
out
jo
fstps
pop
subl
and
scas
lahf
jo
shll
or
test
xchg
cltd
jne
mov
xchg
lods
jl
leave
adc
ret
pop
jno
mov
jecxz
bnd
sbb
cld
sub
and
jae
jo
aad
fiaddl
mov
mov
inc
xabort
add
ja
fmul
outsb
mov
sbb
ret
sahf
jo
sbb
push
vhaddpd
sub
mov
ds
bnd
mov
dec
cmpsl
xor
in
fstps
xchg
mov
dec
and
jo
std
xlat
icebp
notb
inc
jo
inc
das
into
xor
gs
fcmovbe
mov
lock
pushw
cld
shlb
fldcw
aad
stos
dec
add
call
pushf
jle
jae
fs
fstpl
jo
pop
mov
jo
lds
sbb
jl
mov
jo
ja
aad
call
js
jo
or
push
mov
out
fdivl
pop
xlat
in
lcall
out
rcrb
rcrb
and
fwait
mov
int3
and
jge
push
or
push
dec
movsl
xchg
add
jne
jg
sbb
fimuls
in
pop
jo
mov
push
addr16
rol
cwtl
xorb
mov
push
push
cmc
pushl
int3
xchg
clc
add
loope
push
jo
cmp
movsl
jo
mov
adc
fistpl
add
cmpsb
inc
jp
jo
and
adc
add
mov
mov
xor
andb
inc
fstpt
inc
stos
jo
adc
dec
xchg
inc
lock
and
pop
jb
dec
outsb
sarb
aas
sbb
test
lahf
sub
inc
add
xchg
loopne
jo
adc
dec
clc
xor
fdivl
jg
pop
mov
jbe
sbb
push
jnp
push
xchg
shlb
cmp
inc
fdivl
inc
add
std
stos
push
pop
mov
mov
and
pop
jo
push
insb
add
dec
mov
mov
clc
cmp
ja
push
sarb
and
mov
outsb
pop
in
inc
sub
push
mov
jo
ret
mov
adcl
faddl
les
mov
cmpsb
inc
out
cmp
jno,pn
cmpb
fucomip
push
xchg
pop
jg
xor
add
pop
pop
or
jb
pushf
stos
mov
dec
xchg
sbb
cltd
jae
call
dec
in
ss
lcall
push
sub
dec
insl
mov
xor
pushf
pop
or
pop
sub
dec
icebp
push
out
insb
jo
stc
dec
fchs
aas
jecxz
addr16
xchg
jo
daa
aad
clc
push
outsb
int
inc
pop
arpl
bound
xor
cs
sub
mov
mov
leave
jbe
pushf
inc
rclb
in
ja
jo
or
insl
add
xchg
cs
push
mov
shrb
sti
enter
rcll
xor
xchg
lock
insl
dec
mov
xchg
sahf
mov
lret
mov
cmc
mov
push
aas
pop
xchg
jo
push
dec
inc
pop
jmp
movsl
loopne
pop
jnp
jo
jmp
shll
mov
jo
shll
bound
ljmp
out
insl
jne
xor
out
mov
sbb
xlat
fidivs
adc
push
jo
mov
scas
inc
push
mov
clc
jo
pop
lea
push
daa
jo
push
push
sub
fmul
in
or
pop
xchg
ror
das
fstps
mov
rcr
into
inc
repz
cwtl
xor
add
dec
outsb
push
dec
push
push
lods
jne
jo
inc
popf
cwtl
xchg
jo
mov
arpl
insb
sbb
jge
push
ret
and
jo
or
jg
sub
jo
imul
fld
jmp
xor
pop
or
jo
lods
xchg
mov
scas
ljmp
adc
aad
das
jo
gs
dec
fidivs
fs
out
test
push
fdivl
jae
test
jo
ret
mov
push
ljmp
xchg
int
arpl
sub
xor
sbb
insl
jns
xlat
adc
or
mov
fldcw
jo
cld
in
addr16
inc
in
jo
cmp
imul
cld
sbb
popa
push
and
inc
sbb
jo
incl
mov
nop
ss
aam
jno
call
hlt
into
loopne
pop
sar
push
push
insl
mov
pop
ja
jo
arpl
adc
jo
cmp
js
ja
or
sti
mov
aad
loope
mov
shlb
jo
cmp
inc
jo
sub
cmc
push
lahf
sub
jo
mov
jne
leave
xchg
sbb
das
and
mov
and
in
imul
enter
and
sarl
lock
inc
cmp
add
shlb
xchg
jo
movsl
aas
loopne
cmc
iret
insl
mov
jg
inc
cmp
lea
jbe
out
jl
or
adc
xor
xor
inc
pop
xchg
xchg
sbb
jo
pushf
cmc
sub
scas
in
xchg
jle
jo
test
test
dec
mov
xchg
adc
xor
mov
cmp
mov
cltd
dec
jo
in
movsl
inc
add
je
pop
dec
mov
push
fisubrl
mov
push
mov
clc
scas
sbb
or
cmc
jp
push
jl
fcomi
scas
push
or
push
ljmp
xor
mov
add
mov
sbb
jecxz
push
jg
sub
loopne
cli
xchg
scas
add
xor
adc
inc
cmp
xchg
jl
lock
lods
inc
icebp
mov
dec
pop
inc
test
push
loop
and
pop
jmp
sub
fstpt
mov
jo
mov
fidivs
sub
aad
inc
mov
pusha
dec
imul
xchg
mov
leavew
pop
imul
push
ret
and
std
sahf
add
bt
pop
xchg
push
sub
lock
xlat
mov
jo
jmp
jge
adc
mov
sbb
mov
fbld
jp
jns
js
xchg
mov
mov
neg
leave
push
push
das
adc
imul
cld
mov
jae
fldt
cmp
lock
sbb
and
xor
push
dec
fisttpl
jo
kmovb
mov
in
mov
pushf
mov
jo
push
xchg
insb
lea
jo
shrb
jp
xchg
mov
ss
xchg
sbb
test
insb
int
lds
sub
add
lea
mov
in
cmp
cmp
sbb
and
jo
mov
mov
ljmp
loop
fcompl
xchg
adc
cmp
pop
jo
clc
gs
and
pop
pop
mov
pop
inc
push
jle
pop
jo
push
shll
jo
cmp
mov
lret
jmp
insb
jle
cwtl
cltd
dec
jge
jnp
push
jo,pn
sbb
inc
lock
arpl
in
pop
mov
and
sub
out
je
fstpt
jnp
lods
mov
cs
adc
loop
arpl
dec
fstl
subb
movsb
adc
jo
jle
mov
nop
push
jo
stos
aad
icebp
mov
cmp
leave
and
or
fistl
addr16
aad
ss
icebp
ja
push
jo
into
jecxz
pop
adc
jge
lock
lds
push
jae
int
stc
mov
clc
test
cmp
xchg
dec
and
or
cmp
rol
jmp
jb
xor
cld
cli
outsb
xchg
and
push
movsl
in
pop
fwait
int3
ds
paddd
je
inc
dec
dec
les
jo
sbb
mov
mov
into
add
ret
push
lock
dec
jo
repz
inc
insl
dec
shll
loopne
imul
push
pop
xchg
fisttpl
inc
mov
jnp
and
lock
xlat
test
mov
notl
pop
addl
mov
or
sarl
sahf
mov
scas
sub
add
repz
imul
jmp
mov
leave
lds
sub
add
sbb
pushf
lods
and
je
popf
adc
pop
pop
xchg
xchg
inc
jo
cmp
jmp
cmp
cmp
jmp
aad
cltd
xchg
xchg
inc
pusha
sub
xchg
jo
mov
dec
int
jle
jo
push
dec
xchg
xor
mov
in
jmp
inc
jne
and
mov
jo
dec
call
xchg
pop
arpl
mov
iret
or
out
jne
pop
pop
scas
ja
jo
mov
push
jl
xlat
outsb
shlb
sub
xchg
xchg
cld
jo
mov
jo
aam
mov
xorb
xchg
push
aad
and
push
fwait
jo
xchg
pop
loope
mov
mov
push
sub
mov
nop
fnstenv
add
lea
shr
and
mov
add
ja
xchg
loopne
cmpsl
mov
pop
jmp
pop
xchg
mov
loope
xor
dec
jmp
out
jo
sub
sbb
push
jae
jo
bound
mov
jo
push
xor
jo
mov
fcoms
enter
das
mov
sub
jp
push
out
mov
popa
mov
xor
je
dec
sub
dec
jo
jns
dec
out
cld
test
out
negl
aad
mov
and
insl
dec
outsb
jle
xchg
jl
jo
in
test
mov
fldt
and
test
jae
lock
fldcw
pop
jo
sub
push
mov
sti
push
iret
mov
in
jle
jo
imul
xchg
push
loop
int3
cmpsb
fildl
and
xor
std
aad
fmuls
cmp
or
xchg
xor
push
sbbb
adc
adc
int
dec
shlb
add
cmp
push
xchg
adc
lock
cmpsl
or
fnstenv
sub
movsl
dec
mov
aad
daa
cwtl
fsubs
dec
add
add
lock
lahf
sub
sub
inc
cmp
jo
pop
aam
push
adc
insl
call
fwait
mov
int3
cmp
mov
and
loopne
pcmpeqw
add
aaa
mov
jo
mov
js
inc
pop
cmp
jo
and
out
inc
xlat
push
rorb
adc
icebp
jb
jo
mov
leave
lock
push
mov
inc
lods
adc
lock
js
movsb
aam
fs
pop
add
adcb
jo
push
sbb
mov
push
sbb
mov
cltd
cmpsl
inc
jp
mov
std
mov
jmp
jb
jo
data16
fsub
test
dec
mov
dec
or
jecxz
cld
fldcw
inc
pop
xorl
pusha
push
nop
fstpt
jo
pop
pop
sbb
cmp
jo,pn
arpl
mov
push
push
test
lea
sbb
dec
inc
jo
aas
mov
aad
dec
shll
fisubl
frstor
push
xchg
mov
pop
mov
rcrl
adc
pop
hlt
jno
test
xchg
insl
push
inc
sbb
dec
imul
mov
adc
fsin
cmp
inc
lret
fcoml
out
cwtl
xor
inc
jp
dec
daa
int
decl
dec
adc
mov
dec
das
jne
push
pop
jb
jo
xor
popa
aas
mov
cmp
lahf
jo
les
rorb
xlat
int
mov
aam
fwait
push
fsubl
pop
push
jbe
stos
jl
insl
clc
pop
jo
ficoml
jge
std
ljmp
test
or
push
cmp
bound
inc
nop
pop
fsub
adcb
add
addb
loopne
adcl
push
scas
jl
int
jo
ficompl
pop
mov
mov
out
cmp
mov
pop
sti
daa
mov
or
add
leave
ret
pop
rcrl
jo
push
aad
pop
mov
cmp
push
xchg
mov
jg
jo
test
aad
jnp
sub
xchg
insl
adc
dec
nop
xchg
mov
sbbb
loopne
mov
or
in
ror
std
and
dec
pop
lods
jbe
jno
cmp
in
jo
dec
xchg
cmp
sub
testb
mov
push
jo
inc
cltd
or
jb
and
cli
add
mov
mov
mov
rcr
rcrl
mov
aam
outsb
mov
shlb
pushf
nop
mov
jo
lds
add
in
adc
jmp
mov
sbb
push
test
adc
jecxz
cmp
sub
bound
je
bound
push
mov
fidivs
lds
mov
or
int
xchg
jo
insb
mov
cltd
mov
mov
movsl
xchg
jo
setno
pushf
jecxz
xlat
fsubrs
loopne
clc
in
lods
push
fstl
jae
shl
sbb
mov
inc
imul
jo
jle
lcall
xorb
jo
addr16
popf
push
jo
in
sbb
adc
xorl
sbb
pxor
bound
sbb
and
pusha
loopne
jg
pop
xor
jno
mov
and
stc
addr16
mov
out
mov
int
cwtl
leave
roll
lock
stc
aaa
icebp
dec
ja
jo
in
aad
movsl
pop
or
jnp
xor
adc
push
sbb
push
shr
push
jae
mov
mov
push
sub
add
sub
and
push
enter
call
imul
fidivrl
out
push
insl
mov
mov
adc
mov
je
rep
mov
lock
paddusb
jo
sbb
add
xor
jo
in
mov
add
inc
nop
pop
mov
mov
add
adc
sbb
shr
pop
mov
stc
xorb
popf
fisttpl
and
pop
pusha
cmc
mov
lock
rcrl
shlb
sub
movsl
orl
loopne
dec
xor
lock
mov
insl
cmc
and
rcr
fcmovnbe
jle
loop
mov
jno
insl
pop
push
cmc
cmp
dec
adc
fsub
sub
pop
sbb
je
mov
pop
mov
ja
loope
mov
jecxz
ja
fs
jae
mov
test
imul
call
mov
jbe
cli
jo
roll
je
ss
or
icebp
rcr
jo
jecxz
and
inc
jo
sub
scas
mov
xchg
lds
xorb
mov
xchg
add
cmpsb
pop
add
jo
jbe
pop
xlat
mov
andb
jl
jno
cmp
add
mov
jp
sbb
cmpsl
cmpl
mov
icebp
xor
aam
lods
sub
jns
or
es
mov
call
fsubl
add
fwait
leave
ja
cmc
jo
loope
test
adc
mov
mov
jo
pushf
stc
or
lea
jo
sti
andb
lahf
pop
push
sarb
std
xor
add
cmc
stc
jo
xchg
in
ja
jb
cmpsb
mov
test
ja
sbb
cltd
jg
sti
jo
xor
cmp
jo
sar
push
std
mov
loope
sub
jo
pop
cmp
jae
mov
mov
push
in
loopne
mov
push
cmp
pop
es
mov
inc
jo
sbb
fcmovnb
jo
insl
mov
insb
enter
sub
inc
loop
nop
mov
xchg
add
push
out
test
push
sahf
push
jge
imul
popf
push
ret
or
dec
add
daa
and
out
ja
mov
mov
jl
and
and
lock
and
out
jae
mov
test
inc
push
jmp
adc
mov
xchg
aaa
sbbb
stc
ja
in
sub
andb
add
pop
add
lea
ret
inc
pushf
fldt
jo
push
leave
mov
jo
hlt
out
movsb
divl
mov
mov
inc
pop
push
addr16
mov
push
cmp
jne
mov
adc
movsb
insl
pop
sbb
mov
in
iret
adc
sahf
push
scas
sub
int
ficomps
cmpsb
mov
or
mov
movsb
pop
je
sti
inc
push
and
mov
sub
ss
test
cmp
mov
adc
nop
loopne
lcall
test
push
dec
dec
mov
add
mov
jle
jp
call
ss
inc
icebp
stos
dec
pop
sbb
outsb
ljmp
mov
addr16
dec
jb
jno
mov
xchg
mov
sub
enter
xchg
xchg
in
jo
adc
inc
lock
divb
rclb
int
jl
push
nop
dec
fists
cmc
idivl
push
sub
add
sahf
icebp
lret
in
push
or
jno
xchg
imul
mov
sbb
xlat
dec
pop
dec
jo
fildll
push
push
sbb
nop
jo
fdivl
shlb
jecxz
inc
aad
sbb
push
das
out
jo
cmp
mov
flds
fsubrp
or
jo
sarl
aad
push
test
fdivrs
jbe
es
loopne
int
or
outsb
or
mov
inc
int3
or
dec
inc
dec
lock
sub
pop
idivl
rcrb
outsb
cmp
test
call
xor
and
fdivl
aas
das
inc
out
lcall
cs
mov
dec
jl
insl
rol
loop
xchg
or
add
fwait
daa
imul
fstps
or
mov
push
fcomps
lret
or
pop
outsb
int
clc
xchg
xor
out
or
lret
cltd
imul
pop
fidivrl
sbb
cmp
pusha
es
int
test
sbb
pop
lahf
pusha
les
jae
divb
adc
gs
or
jo
lret
or
pop
iret
arpl
dec
pushl
in
fidivrl
adcl
cmp
test
add
aas
daa
aad
insl
mov
iret
xchg
dec
cld
adc
or
inc
jo
pop
jg
in
adc
push
cmc
fdiv
xchg
pop
roll
sub
cmpsl
jb
ja
push
and
or
jo
ds
sbb
enter
sbb
and
in
jne
sti
lock
lods
fs
out
insl
push
in
pop
cmc
jb
xlat
adc
subl
int
aas
les
clc
jo
scas
cld
test
ja
cwtl
imul
xorl
fmulp
mov
std
dec
push
mov
xchg
jae
pop
aaa
fdivl
sar
insl
aad
push
jo
scas
cmp
jo
mov
aad
jno
xchg
scas
ret
sub
aas
lret
mov
aad
adc
mov
das
dec
push
push
aaa
in
pop
jo
lods
lcall
mov
scas
pop
cmp
adc
jo
lahf
lret
xor
lods
loopne
nop
cmp
sti
dec
pop
bound
mov
bnd
lds
or
je
dec
pop
ljmp
es
xor
fdivrs
jo
inc
shll
sub
mov
jo
mov
icebp
dec
lea
sub
cmp
mov
cmp
cmpsl
lods
fstpt
mov
repnz
jo
repz
jo
inc
ljmp
addb
mov
cmp
mov
jo
mov
nop
popa
sbb
out
imul
and
insl
and
pusha
xchg
lods
cs
and
jp
nop
xor
pop
xor
push
in
rcrb
push
jl
add
lea
or
scas
xchg
jp
xorb
sbb
push
shrb
bound
adc
subl
lods
int
mov
insl
pop
fldl
adc
jo
aad
fs
ror
jecxz
mov
xchg
mov
mov
push
scas
xchg
jmp
jo
push
push
xor
sbb
jnp
aad
mov
call
xchg
jg
inc
push
orb
sahf
pushf
sub
int
stc
and
repnz
subl
fisubrs
sbb
repnz
jg
cmp
mov
fsts
lds
pushf
mov
jo
mov
cwtl
into
ret
pushl
inc
sarb
dec
push
jo
inc
addr16
shrl
jo
setnp
xor
out
popa
lahf
mov
push
and
aas
shlb
dec
mov
xor
ss
mov
push
or
adc
es
lods
jecxz
and
lahf
sti
pop
dec
adc
lods
arpl
shlb
xchg
into
mov
imul
jp
adc
inc
mov
cmp
movsl
outsb
pop
out
in
add
popf
dec
fs
sub
cmp
jns
sub
lock
addr16
imul
xchg
mov
mov
in
test
push
inc
mov
and
sbb
arpl
stos
jo
aad
xchg
lods
int
dec
sbb
pop
out
mov
lea
mov
in
les
out
adc
pusha
cltd
cmc
mov
fdivrs
or
jo
mov
jle
jo
push
cs
std
mov
lods
or
jb
pop
cmc
cmpsl
mov
out
in
in
push
pop
dec
xchg
xor
push
and
sub
add
jo
fldt
jo
mov
js
or
jae
pop
fdivrl
addb
xor
jo
js
outsb
dec
popa
pop
fimuls
dec
jo
jbe
shlb
sbb
pushf
jg
loop
cmp
cli
scas
adc
mov
leave
cltd
xorb
outsb
sarl
jo
push
scas
sub
xchg
xchg
stos
xchg
adcb
je
lods
je
mov
fisttpl
or
mov
stos
das
mov
mov
sbb
xor
fidivl
sub
push
cmp
insl
cmp
cmc
or
retw
mov
shlb
add
jmp
mov
int
and
pushf
stc
inc
sub
sub
out
mov
movsb
xchg
pop
dec
lea
lock
ss
cld
xor
lcall
xor
cmp
fistpl
dec
movsl
enter
aad
push
sub
jno
pushl
inc
mov
das
cwtl
mov
mov
fistl
adc
xchg
ds
ss
lea
shrb
pop
inc
push
dec
jg
inc
std
sub
dec
mov
addl
xchg
dec
mov
repnz
inc
jno
cmp
int3
mov
es
adc
pushf
push
cmp
add
lods
enter
int3
scas
adc
std
adc
adcb
pop
or
mov
jne
stos
sbb
pop
scas
dec
test
mov
ja
outsl
pop
pop
jmp
movsb
jo
sahf
int3
loop
fistpl
adc
or
inc
jo
and
xor
xchg
jnp
int3
jge
inc
and
or
aad
popf
add
sub
out
int3
cmc
fadd
jp
ja
jo
mov
or
jp
xchg
adc
inc
mov
insl
add
mov
gs
jno
jle
xchg
push
orb
call
insl
adc
jae
sub
jo
fsts
cld
leave
push
cli
pop
movb
or
sbb
scas
jle
nop
int3
mov
jo
cmpsl
insb
jmp
jo
pusha
xchg
sub
pop
sbb
pop
push
mov
es
mov
and
push
insl
mov
and
add
jg
clc
jo
loope
out
inc
sub
jo
test
out
and
push
fidivl
push
lds
or
sbb
jno
inc
jmp
dec
repnz
loopne
jo
pop
lods
cmp
pop
fcoml
lods
jo
push
dec
jnp
xor
data16
fs
cmp
jo
mov
mov
and
insb
frstor
push
fsts
mov
sub
mov
add
and
jo
lea
mov
out
fnsetpm(287
adc
mov
adcl
jno
pop
sub
ja
jb
push
out
inc
pop
nop
sarl
rclb
push
dec
dec
jo
push
inc
pop
pop
aad
cmp
sub
adc
cmp
sub
loope
bound
cld
push
arpl
mov
test
mov
lods
push
enter
jle
in
adc
mov
jae
jecxz
divb
sub
jnp
xlat
fdivl
outsl
fwait
adc
pop
fdivs
notl
je
dec
jbe
and
jo
push
mov
repz
dec
into
test
es
pop
out
imul
cmp
imul
out
mov
roll
loopne
jo
jns
addr16
popa
ss
out
adc
and
and
fildl
jle
xlat
mov
fistpll
dec
pop
jo
jp
iret
mov
inc
sub
lret
out
xchg
jb
outsb
pop
cli
and
jnp
xor
dec
jo
sbb
pop
push
addr16
xchg
cmpl
inc
lcall
sub
jp
jo
orb
push
dec
clc
inc
sub
aam
test
enter
ror
inc
pop
jo
xor
fwait
cmp
lahf
pop
cwtl
pop
ret
inc
jo
pop
or
stc
push
in
sub
cli
jo
cmp
cmc
shr
insl
lock
lcall
enter
sarl
xchg
lcall
call
sbb
sub
cmp
xor
sub
adc
fistl
cmp
jge
pop
insb
mov
call
sub
mov
push
inc
jo
insl
dec
lcall
call
jle
cmpsl
jo
cli
js
pop
sar
insl
inc
aas
orb
in
mov
jo
xchg
outsb
leave
les
mov
mov
daa
xchg
gs
jo
inc
jae
cmp
add
cmpsb
call
je
jo
insl
neg
addl
sbb
mov
adc
pop
xchg
and
xor
push
lock
shrb
leave
int
divb
jecxz
mov
or
out
inc
aad
je
ljmp
test
push
cmp
iret
or
or
jo
push
sub
mov
adc
lahf
aad
hlt
mov
sub
loopne
test
jno
inc
fildll
mov
stos
xchg
rcl
sti
movsb
arpl
mov
cli
sub
add
jo
inc
and
mov
dec
insb
lock
movb
jo
xor
ds
dec
adc
xor
and
insl
jns
mov
test
mov
xor
stos
push
push
sub
xor
lret
test
xor
mov
xor
xor
aad
and
pop
mov
jp
jl
pop
cli
sub
fcompl
les
adc
jnp
add
aam
fistpl
dec
jle
in
cwtl
and
xchg
popa
adc
inc
das
push
mov
adc
xor
sbb
adc
mov
mov
subb
mov
inc
and
jno
out
aas
jo
std
lret
int3
pop
imull
jo
push
lea
mov
xor
sbb
add
jo
dec
dec
aaa
mov
aad
hlt
sti
js
mov
adc
lock
scas
shll
inc
xchg
jo
cs
sbb
int3
push
adc
or
jl
xchg
and
fisubrs
pop
inc
mov
sbb
dec
push
push
pop
jle
insl
cmp
jb
push
inc
jo
ss
pop
insl
adc
jne
jge
stos
xchg
enter
jo
mov
inc
jo
enter
lock
lea
cmc
mov
outsl
xor
mov
movsl
pop
mov
imul
push
jo
sbb
and
cmp
jo
stos
push
push
mov
lret
mulb
jo
jp
cs
push
xchg
push
mov
rcr
fstl
add
cltd
xor
add
lds
in
add
mov
pop
aad
imul
enter
nop
jo
ret
frstor
je
imul
xchg
sub
pop
or
jo
add
sbb
jo
pop
push
xchg
mov
cmp
jb
popa
rcr
stos
insb
push
test
push
and
jo
repnz
decb
inc
jo
stc
or
xchg
xor
sbb
mov
sub
iret
inc
lds
jo
imul
dec
aad
jge
in
sub
addr16
out
sbb
cmp
jae
jnp
and
test
inc
mov
pop
out
cmp
mov
call
inc
mov
mov
jo
fwait
mov
jo
and
out
ret
xor
or
push
jo
adc
xchg
outsb
mov
jle
push
aaa
hlt
sbb
call
aad
repz
test
data16
lcall
shr
dec
add
addb
mov
push
das
lea
pushf
cmpsl
cmc
pop
mov
jecxz
xlat
jo
inc
sarb
xor
mov
pop
push
shrl
div
cmp
outsb
jo
push
jne
mov
and
cmp
ss
push
sub
daa
aaa
insb
cmpl
adc
in
divb
bound
movsl
push
outsb
adc
in
in
in
push
lretw
jae
shll
mov
push
xorl
mov
dec
add
fdivl
sub
shll
scas
aad
int
test
pop
inc
jo
pop
repz
jo
xor
into
mov
inc
sbb
pop
push
mov
loopne
outsl
andb
loopne
les
ret
aaa
push
xchg
mov
insb
push
cmp
pop
mov
add
cli
jo
aaa
xchg
nop
hlt
mov
call
or
lret
add
js
xor
mov
aad
fists
jmp
and
ret
rcrl
jecxz
dec
sub
mov
mov
iret
fdivrl
sbb
lea
jmp
pushf
xchg
sub
test
dec
outsb
jnp
push
cmp
jo
jp
and
shlb
jle
pop
xchg
popa
out
loope
push
insl
jno
mov
jmp
fimuls
int3
dec
loopne
insl
call
insb
scas
xor
jecxz
mov
xchg
mulb
call
les
aas
mov
and
add
add
test
pop
shll
mov
inc
inc
inc
mov
shl
jmp
jnp
int3
arpl
mov
add
lods
jge
push
jno
jb
lea
or
mov
das
cwtl
mov
mov
shlb
mov
pushf
mov
cli
sbb
push
pop
dec
or
jmp
rorb
sbb
stc
leave
adc
mov
jo
pushf
mov
pop
je
dec
jp
mov
mov
add
aam
or
sarb
pop
scas
cwtl
mov
inc
mov
mov
sbb
mov
push
sahf
aad
enter
jmp
mov
mov
and
sub
aad
xchg
cmp
call
push
jp
xchg
scas
data16
fistl
ljmp
aad
lahf
insl
stos
das
enter
xor
push
cwtl
lds
jo
inc
push
loopne
fstps
jo
mov
push
ficomps
jo
aad
shrb
inc
lret
jae
stc
push
pusha
out
data16
jo
fbld
add
iret
pop
enter
mov
rcrl
mov
mov
shr
ds
pop
jno
call
add
jge
je
cmpsb
add
cmp
xchg
ja
mov
jo
adc
lret
jo
inc
sbb
out
or
in
mov
dec
cs
mov
outsb
in
xor
cmpsb
dec
add
outsl
fidivrl
add
adc
jo
cmp
scas
out
insb
sub
enter
inc
rorl
xchg
cmc
adc
mov
sub
jnp
xchg
ret
fcmovbe
push
sbb
adc
loope
out
jno
notl
iret
jl
cli
lds
addr16
insl
push
insl
popf
mov
and
push
xor
insl
mov
adc
cmc
add
mov
cwtl
or
xor
dec
mov
sbb
dec
adc
xchg
dec
jo
sahf
fdivs
jbe
jecxz
mov
cmp
hlt
mov
dec
push
jno
loop
out
jo
mov
dec
adc
jb
and
jo
outsl
xchg
push
pop
fsts
jno
loop
insl
jns
lea
enter
xor
mov
bound
das
into
and
lods
xchg
pop
pop
jmp
movsl
pavgw
sahf
jae
in
into
daa
imul
fucomp
push
mull
push
ljmp
mov
loop
mov
jecxz
jo
mov
mov
xchg
cld
jo
xchg
aaa
xor
cmp
sbb
cmp
xchg
jl
mov
mov
shl
or
mov
inc
out
addr16
xchg
pop
mov
add
shll
jmp
iret
adc
pop
jo
sub
mov
call
lock
test
xor
push
cmp
mov
cs
push
in
insl
outsb
jecxz
outsl
pop
lods
hlt
lahf
dec
shrb
cmc
push
sbb
jl
lods
mov
mov
jo
xor
push
sub
popa
cli
lods
fcmovnb
or
cmp
aad
push
inc
fdivs
js
push
sarl
lods
xor
and
mov
ljmp
scas
jo
jbe
movsb
xor
jmp
arpl
fmull
jo
xchg
dec
and
cld
in
mov
pusha
push
push
fs
repnz
lahf
dec
jg
imul
int3
pop
sbb
aaa
jo
mov
jb
pop
sbb
mov
outsb
jbe
insl
xchg
and
xor
lock
iret
jo
movb
fsts
imul
cmp
test
xor
insl
mov
nop
mov
inc
sub
xchg
cmpb
rcr
jno
fdivrp
rcll
push
ret
lock
shlb
insb
cli
jnp
mov
inc
lds
xor
fs
stos
mov
sti
test
xor
adc
jne
insl
jge
push
and
push
jp
insl
dec
jns
insl
xchg
clc
jp
xchg
inc
cwtl
fdivl
sti
repz
mov
in
jge
fnstcw
insl
xchg
xor
into
outsb
pop
int3
rcl
rcrb
mov
cwtl
hlt
xchg
sahf
lcall
xchg
add
xlat
or
cmc
or
jo
mov
push
cmpsl
push
cmp
jl
xchg
int3
jecxz
dec
movl
out
mov
test
jo
sub
mov
xchg
pop
loope
jbe
add
lahf
lods
dec
fdiv
nop
pop
dec
mov
into
jo
jnp
and
loop
push
movsb
jl
mov
clc
mov
fnstenv
es
push
ficompl
out
dec
push
sub
xchg
mov
aad
cmc
jle
adc
xchg
ss
sbb
negb
inc
pop
add
xor
adc
movsb
xchg
cmp
jo
outsl
repnz
mov
fstps
dec
push
push
jae
mov
enter
jo
pop
cmpsb
mov
jo
fildll
in
jo
jno
shlb
sub
sbb
cmp
mov
in
and
dec
xchg
xchg
jo
jbe
sub
jo
ljmp
jo
adc
dec
test
outsb
enter
xchg
xchg
outsl
popf
add
mov
lods
aas
sbb
xlat
cwtl
inc
jo
or
mov
sub
pop
mov
aas
mov
clc
jo
xchg
scas
sub
jo
imul
add
shrb
stc
jne
pusha
add
shll
jns
adc
lea
rclb
pop
mov
mov
xchg
pop
gs
adc
xchg
add
movsl
fisttpll
pusha
xor
mov
jg
aad
mov
push
popa
mov
lock
fcmovnu
cltd
jo
xchg
xchg
jo
push
cli
in
imul
jne
xor
insl
movsb
add
dec
or
popa
mov
xchg
lds
shll
cld
or
mov
push
jo
sti
add
aam
int3
negb
cltd
sub
insb
in
cld
rolb
mov
pushf
pop
jns
insb
pop
inc
imul
pop
inc
cwtl
sbb
jo
jmp
sarl
scas
jne
or
lock
hlt
cmp
jo
or
pushf
cltd
das
jo
lahf
mov
bound
popf
insb
sub
jo
push
in
push
inc
dec
jle
lock
jmp
inc
push
mov
add
lods
insl
jl
dec
xor
xorb
mov
in
loopne
call
dec
lea
out
arpl
push
jo
sbb
test
sti
push
aad
push
jle
pop
jae
clc
inc
icebp
push
scas
iret
mov
pop
add
jne
add
leave
fstp
mov
insb
and
pop
jmp
arpl
es
inc
nop
pop
and
out
and
decl
ja
enter
jo
cmp
sub
leave
xchg
fwait
lock
nop
out
fdivs
roll
jo
xchg
adc
mov
aad
in
adc
jo
test
ficoml
insl
or
mov
sub
or
jb
ret
testl
ror
insb
sete
jo
inc
out
fucomi
aaa
push
sbb
lea
add
mov
mov
jb
data16
mov
fcomps
dec
mov
test
loopne
sbb
andl
mov
jo
jne
cmp
ljmp
lock
cmp
xchg
adc
lock
jo
aaa
sbb
xchg
add
outsb
sti
add
das
jo
adc
repnz
mov
sub
bound
inc
loope
dec
lcall
lea
testb
jle
pop
fwait
jo
aad
sahf
xor
aam
or
pop
ss
xchg
xchg
sarb
push
push
cmc
insl
adc
sbb
test
jg
cltd
sbb
movsb
xchg
or
or
inc
push
ja
test
jo
out
inc
test
icebp
jo
iret
sub
call
fidivs
xchg
push
pop
mov
insl
jge
ds
icebp
xlat
adc
mov
ja
mov
cltd
cmpsb
in
sub
pop
ja
mov
jo
and
lea
imul
fcmovnbe
test
inc
mov
inc
nop
leave
adc
lret
jo
stos
push
mov
jo
enter
xchg
gs
pop
mov
aas
mov
mov
kmovw
mov
push
clc
inc
sti
mov
lcall
jae
xchg
lcall
test
xor
jo
and
xchg
pushf
pusha
jo
in
push
mov
pop
iret
jo
test
sbb
roll
mov
cmp
jo
pop
leave
in
lods
jae
xchg
xor
cmpsl
xchg
jo
or
out
outsl
popa
enter
add
testl
mov
int3
or
jp
pop
or
mov
xlat
inc
into
push
outsb
out
rclb
cmc
mov
lea
mov
cmp
ret
insl
sbb
fs
adc
jae
mov
fcoms
movsb
enter
pop
fwait
xor
xor
je
popl
lret
jo
pop
mov
movsl
jo
ret
mov
aad
lcall
sbb
jo
scas
fldcw
jo
cltd
mov
fildll
ficompl
mov
push
mov
test
pop
sub
add
jle
jb
lret
jo
leave
xor
jo
loope
mov
jo
push
push
aad
sub
push
adc
mov
add
insl
mov
pop
or
adc
adcl
sub
inc
pop
mov
or
mov
andl
and
insb
push
in
xor
push
jp
xor
iret
or
inc
das
loopne
jo
sub
rcll
mov
pop
outsl
mov
xor
jns
jb
int3
dec
lock
repz
out
inc
jo
mov
add
mov
sub
rcl
jo
aad
stos
push
fidivrl
sub
mov
xchg
movsb
mov
add
jo
das
push
bound
add
lods
pop
sub
push
cmc
aad
ffreep
std
insl
in
add
push
shll
jge
popf
enter
insl
jg
pop
pop
das
shll
dec
mov
arpl
fwait
mov
addr16
jnp
fldcw
cmc
adc
push
and
rclb
jo
mov
sub
hlt
ss
jo
int3
xchg
sti
aad
sub
jne
cmpsb
es
sahf
or
je
out
push
sbb
add
mul
and
jo
inc
aad
or
xor
push
pop
fdivs
sub
mov
push
out
jo
sbb
mov
sub
or
push
or
rcr
xchg
testb
sub
pop
mov
rorb
or
pop
outsb
mov
mov
jle
jo
dec
push
shrb
outsb
mov
loopne
ljmp
jmp
outsl
add
add
ret
pop
jo
push
sub
pop
or
sub
push
test
repnz
pop
cmp
dec
mov
in
imul
mov
jl
repnz
pop
rclb
mov
ds
pop
in
es
cmpsb
imul
fs
or
ja
adc
jne
loopne
jno
das
pop
add
mov
sar
fs
stos
aaa
sub
jnp
xor
cmc
inc
lock
cmpsl
mov
loope
out
mov
sub
mov
xchg
ja
sub
mov
xchg
jmp
inc
push
es
mov
mov
stos
lea
jnp
jo
jmp
lcall
cmp
ljmp
cwtl
push
xorb
ds
push
sub
mov
dec
fsubrl
fidivrs
jns
int
sub
les
adc
add
jne
cmp
sbb
lods
cli
inc
cmpsb
aaa
jo
mov
dec
outsl
sarb
mov
out
sahf
lcall
or
loop
xor
int
gs
in
adcb
test
add
dec
lea
push
jle
jo
mov
jmp
clc
jns
jo
dec
xchg
mov
jbe
sub
inc
cmpsb
iret
lock
dec
loop
jae
lret
out
in
clc
lods
fs
jo
pop
cmp
icebp
xchg
ret
jo
iret
mov
jno
dec
adc
mov
arpl
stc
jb
std
xchg
loopne
or
pop
loope
pushl
mov
jo
pop
xadd
cs
lock
mov
inc
jo
or
mov
ja
fldenv
push
and
jge
stc
mov
cwtl
inc
ss
mov
es
enter
xorb
leave
cmpsl
pushf
and
inc
loopne
into
aad
jo
dec
push
fmulp
mov
outsb
push
aad
xor
js
jo
fcompl
and
fwait
les
jge
jl
loope
xor
ds
inc
sti
ja
lea
xchg
int3
push
cwtl
cmp
inc
mov
mov
xor
jo
aam
mov
jo
add
mov
add
pop
pop
xor
pop
xchg
inc
add
or
xchg
rcll
out
divb
adc
mov
jo
inc
imul
adcl
outsb
out
sarb
jo
cmp
push
cmp
int3
jo
lea
sti
hlt
xor
repz
and
fnsave
push
jns
lods
fsub
xchg
sbb
jmp
movsl
jae
nop
xor
mov
mov
loopne
test
je
aam
jge
out
mov
adc
fdivl
fstps
and
or
mov
sbb
int3
jno
mov
test
cmp
xor
std
lret
xchg
xchg
loopne
sar
jb
mov
sbb
push
je
pushf
lods
xchg
jo
movsb
aad
pusha
lods
out
push
lret
loopne
jb
mov
sbb
pop
insl
popf
test
dec
add
imul
jo
sub
jae
xchg
pop
adc
fdivs
jo
pop
out
adc
ds
lock
jg
pop
mov
loope
mov
mov
clc
sub
ja
and
pop
pop
dec
xor
sbb
mov
or
xchg
outsl
adc
dec
jo
mov
aad
jo
inc
adc
fisttpl
mov
sti
adc
push
aam
movsl
mov
mov
lock
inc
ljmp
xor
jo
cmp
mov
enter
jne
into
inc
insl
pop
lock
jo
cmpsb
cmpsl
and
lods
imul
incb
push
ljmp
lods
stc
arpl
das
mov
push
arpl
and
das
int
shll
outsb
fsub
fimull
xchg
mov
jmp
and
sub
push
jne
lods
insl
sub
dec
ficompl
jo
or
mov
xchg
pop
dec
jo
sbb
push
outsb
jecxz
hlt
or
js
cld
pop
mov
jo
cmpsl
movsl
xchg
cs
decb
ss
fisttpl
cmpsl
outsb
mov
xchg
nop
push
jge
adc
in
fsts
addr16
adc
xor
sbb
mov
pop
fcoml
push
rorb
insl
lret
fistps
adc
cwtl
cmp
fwait
fucomp
rcrb
mov
push
fildl
cmpsl
pop
jo
dec
cli
and
dec
pop
das
adc
test
fdivrl
inc
insb
enter
mov
lock
mov
hlt
fs
in
adc
push
and
xorb
sbb
sub
and
or
sub
pop
pop
inc
clc
xchg
jo
mov
lret
jo
sti
or
cmpsl
add
popf
rcl
inc
jge
movsb
addl
repz
xchg
xchg
jmp
mov
inc
ja
addr16
stos
movsl
jo
leave
or
sbb
inc
xor
add
inc
adc
xchg
inc
push
dec
jo
mov
add
fwait
jno
mov
pop
andl
mov
arpl
push
jo
shll
sub
inc
jo,pn
cld
aad
cltd
xchg
std
cmp
push
jo
stc
repnz
enter
faddl
fistpl
pop
nop
dec
inc
or
jecxz
fstps
cmp
testl
jae
sub
mov
inc
cwtl
outsl
fdiv
enter
out
jo
xor
jge
lahf
dec
pop
jo
repnz
in
cmovp
pop
sbb
jl
popa
mov
loopne
jo
push
out
and
xchg
fwait
rcrb
mov
jo
fldcw
add
or
sbb
pop
xchg
into
mov
sti
pshufw
cmpsb
fnsave
std
ret
and
push
mov
roll
xor
push
repz
lea
enter
insl
scas
mov
dec
dec
mov
out
jns
cmp
fidivs
setbe
mov
test
ja
test
ljmp
add
push
inc
mov
jae
rorl
mov
jp
ret
jle
mov
lods
adc
out
stc
in
insl
dec
mov
pop
sbb
and
sbb
data16
jl
loopne
jo
aaa
int
mov
fmull
or
jo
push
xlat
push
lds
mov
cmp
mov
dec
jo
in
push
xor
cmp
jo
mov
push
and
pushf
repnz
xor
scas
pop
outsb
stos
nop
mov
hlt
and
adc
clc
mov
xor
daa
jo
cld
roll
es
call
mov
loope
push
dec
mov
lock
ja
jnp
jo
testl
xor
xchg
xor
mov
cwtl
adc
loope
jle
insl
mov
xlat
sbb
pop
repz
dec
xchg
adc
xchg
mov
jb
mov
adc
mov
lock
adc
je
call
sbb
cmp
push
mov
loope
aam
popf
imul
jo
popa
xor
push
jg
push
mov
mov
jo
repz
rcll
ds
jo
in
cmpl
inc
aas
lock
sbb
rcrl
dec
in
mov
lock
iret
mov
xlat
sub
adc
pop
out
outsl
mov
xchg
bound
mull
lock
inc
pop
mov
inc
roll
xorl
imul
sub
sahf
jo
sub
xchg
stos
or
jo
mov
mov
jae
adc
jg
mov
cmp
jo
rcrl
ret
jo
cld
sub
jne
sbb
adc
dec
hlt
sti
jo
xor
add
arpl
mov
and
mov
jp
lea
ss
dec
fnstenv
jae
cmp
int
jo
adc
xchg
insl
mov
das
fdivp
xchg
sub
shll
inc
bound
inc
movsb
sbb
push
out
jo
jnp
jo
icebp
shr
jno
pop
jo
ret
daa
insb
ja
clc
mov
lods
ss
mov
js
cs
ja
notl
xor
add
sahf
rol
insb
fimuls
xor
dec
insb
xor
repz
call
jo
fadds
and
icebp
jno
jo
cmpsl
stos
jge
insb
ficoms
jne
lret
mov
orb
jne
and
fsubrl
jo
jae
mov
testb
mov
loope
fisttpll
insl
rcll
inc
sarb
push
setae
mov
push
dec
insl
rcll
adc
sbb
lahf
xchg
jne
pop
int3
imul
mov
mov
jo
push
das
dec
fs
pushf
aad
cmp
clc
inc
roll
into
lock
xchg
loop
jae
in
lcall
cmp
jnp
push
push
mov
pop
inc
mov
js
mov
testl
xor
cmp
cmpsb
xchg
outsb
add
stc
pop
dec
push
and
mov
ja
mov
hlt
test
xor
mov
pop
ljmp
mov
cli
xchg
test
arpl
inc
icebp
enter
call
inc
push
push
insl
dec
lret
pop
xor
xchg
xchg
cld
dec
or
pusha
mov
out
mov
cli
push
add
addr16
add
lods
push
aad
je
call
lock
jle
jo
mov
inc
dec
jo
ss
repz
jl
cmpsb
jno
fs
lcall
sbb
and
push
fcmovb
aam
sahf
fstpt
xlat
cmp
mov
and
jae
sti
and
cmpb
sub
sub
sarl
push
pop
jmp
pop
test
push
testl
outsb
jno
lods
fstpl
xchg
mov
sbb
xlat
jo
push
cmc
shr
cs
daa
jo
mov
std
clc
jo
inc
mov
repnz
jo
fidivl
push
test
jo
sbb
jo
repnz
jo
and
sub
jo
xorb
stc
rcl
add
je
inc
inc
int3
cs
jo
out
dec
mov
and
sbb
adc
movsl
inc
mov
outsb
sub
add
shl
jl
push
dec
scas
sub
int3
xchg
jb
rclb
in
jmp
rcrl
pop
xlat
pop
jo
cmp
das
aad
push
jno
dec
outsl
jl
lock
jbe
jecxz
pop
mov
imul
rcrl
loope
jmp
dec
fs
push
sbb
jno
xchg
fldl
lsl
mov
cmp
out
xor
xor
jo
inc
xchg
aad
add
sarl
notb
loopne
push
push
addr16
mov
fs
lds
adc
adc
sbb
xchg
jp
mov
insw
sahf
daa
xor
rcll
xor
ret
insl
adc
pop
imul
sub
aad
dec
push
cmpsb
dec
mov
push
push
jo
xor
jns
mov
dec
mov
or
loopne
sub
push
call
ja
stos
shlb
mov
imul
jo
fldcw
xor
packssdw
pop
add
xor
and
adc
pop
shll
cmc
push
mov
push
sbb
and
adc
rcr
inc
jns
cmp
jo
dec
inc
lea
sub
push
ficompl
je
fsubs
xor
add
mov
jne
icebp
fdivrp
repnz
xor
add
cmp
pop
nop
lret
fcom
xor
hlt
loop
outsb
popf
loopne
aas
push
lock
out
xchg
gs
xlat
sbb
movsb
jb
pop
mov
push
jp
xor
popf
adc
add
mov
ljmp
xchg
out
shlb
shl
into
xchg
inc
xchg
add
pop
jmp
repnz
jo
push
aad
movsl
repz
jno
sahf
flds
setge
nop
rcr
inc
out
aad
xlat
jo
ret
xchg
pop
into
lea
std
or
sbb
push
div
mov
ret
sub
mov
popa
xor
jo
lea
lods
pop
mov
jp
inc
sub
insl
cmp
in
pop
push
mov
sahf
adc
lahf
aas
jecxz
mov
mov
shl
sbbl
ja
sub
arpl
push
push
addb
lock
hlt
insl
push
dec
imul
out
jo
in
adc
push
out
jo
call
movsl
mov
xchg
and
dec
jmp
dec
push
lock
mov
fcmovnb
xchg
insl
xchg
and
adc
push
adc
inc
out
sbbl
dec
mov
aam
pop
jo
lret
and
fistpl
add
xchg
mov
mov
ja
repz
and
jo
rorl
stc
andl
push
push
cmp
insb
loop
sub
sub
push
rorl
arpl
sbb
adc
cmp
mov
jae
add
pop
shrb
push
cmp
jo
aad
leave
ror
clc
jle
fcoms
divl
pushf
jmp
or
das
push
dec
mov
jle
test
clc
jo
aaa
mov
push
sar
jno
into
mov
sbb
shrb
jo
addl
loope
test
adc
jo
int
mov
lods
cs
push
xchg
out
jo
cmpsl
inc
stos
fcmovu
jo
push
jg
pop
jno
scas
jo
adc
sti
es
outsb
iret
mov
sub
or
push
jo
mov
lret
xchg
hlt
jb
insl
das
sub
mov
mov
jo
cltd
je
ret
inc
int3
aas
jo
sbb
sahf
inc
aad
cmp
call
sub
sbb
pop
pushf
jne
sbb
mov
scas
out
test
sbb
sub
cmp
iret
adc
jle
fists
jo
popa
jne
inc
or
inc
cmp
cmpsb
sub
js
push
jo
ljmp
enter
insl
rorb
inc
shll
fwait
sub
fdivl
mov
mov
dec
mov
pop
test
mov
push
xor
int
insl
jns
xchg
mov
jge
pop
mov
and
popa
jo
lods
lcall
mov
jg
cmp
push
inc
leave
test
mov
lea
jo
shrl
jo
push
pop
jge
outsb
je
cs
mov
je
inc
cmp
mov
jo
es
xor
stc
data16
jo
mov
jmp
jo
mov
out
fildl
loopne
jo
push
or
adc
cltd
sar
in
aad
pop
sbb
ret
jo
cli
dec
xor
outsb
xchg
subl
hlt
idivl
shrb
popf
imul
and
mov
loope
sbb
mov
je
scas
bound
jmp
ja
xor
cmp
and
repz
lods
mov
push
aas
and
fldcw
mov
ss
xchg
push
pop
dec
gs
clc
fsubrs
es
mov
jno
fcmovnu
cmp
jg
mov
xchg
bound
mov
std
jno
leave
rcr
je
push
sbb
das
in
adc
jo
imul
jo
push
sahf
jae
add
aad
mov
xorl
mov
jo
jmp
in
das
inc
sbb
add
addr16
add
jo
jbe
xlat
cmp
cmpsb
jo
mov
or
jae
shll
fcmovb
cmp
dec
rcrb
dec
mov
cltd
addl
jo
add
popf
inc
mov
int3
xor
jmp
outsb
jo
mov
fidivs
push
jo
fsubl
mov
and
xor
nop
mov
jo
dec
cld
sbb
aaa
and
pop
and
mov
push
jb
jo
ljmp
outsb
adcb
sbb
xor
sbb
js
pop
cmc
mov
sti
inc
mov
mov
sub
rcll
hlt
adc
pop
test
and
or
mov
add
jo
or
fsub
jo
mov
push
push
jae
mov
jo
imul
ret
jle
jo
lret
xchg
bound
xchg
add
push
stos
aad
xorl
addr16
pusha
dec
ror
outsb
cwtl
xchg
jmp
sti
fidivl
stos
push
and
jp
pop
outsb
mov
shrb
popf
insb
push
test
jae
xchg
pop
and
les
push
out
jge
xor
pusha
mov
mov
fmuls
out
leave
ror
test
andnps
icebp
xchg
jno
push
push
std
jne
mov
push
fdivs
shlb
pushl
cmpl
or
arpl
out
pusha
pop
jo
xchg
jecxz
mov
cmc
rorb
xor
aad
inc
cld
sub
jb
cli
inc
sarl
and
fcomps
add
fcoml
sbb
aaa
insl
push
xor
mov
jl
pusha
fnsave
xchg
sbb
add
pop
push
sbb
push
aad
adc
jmp
insl
mov
xor
data16
pop
adc
jo
movsb
cmpsb
mov
jo
adc
pop
mov
jo
add
jecxz
or
les
and
mov
lock
jo
lods
pusha
ljmp
push
sbb
jne
jo
inc
fldt
cmp
cli
jo
outsl
xchg
sub
jecxz
js
fdivr
cmp
sub
repz
or
jp
sbb
jo
ret
aad
int3
mov
inc
lock
mov
mov
out
pop
jo
add
or
xor
inc
dec
dec
loope
popf
icebp
mov
mov
jo
lods
fnstenv
inc
mov
int
inc
adc
insl
add
lock
jno
and
jl
lcall
fistl
and
aad
je
sbb
push
pop
insl
xor
cmc
dec
ljmp
mov
fnstcw
orl
sub
aad
pushf
testl
cld
pop
fldt
dec
xchg
popa
xor
mov
xor
jne
jae
int3
inc
dec
repnz
and
cld
mov
mov
lock
lock
lea
cmp
inc
jno
add
pop
shlb
insl
mov
mov
jmp
outsb
push
int3
pushf
pop
repnz
je
aad
xchg
mov
andb
lock
cmc
jecxz
sbb
pop
mov
dec
jae
insb
add
outsb
outsl
mov
in
mov
xor
cmpsb
push
cs
adc
add
outsl
pop
jmp
lock
push
xor
dec
xor
and
jo
jb
les
xor
insl
sbb
sub
adc
and
or
lahf
mov
in
into
dec
dec
xlat
jo
dec
fstps
mov
inc
jo
cmp
mov
aas
fildll
dec
iret
out
lods
pop
pmullw
pop
mov
pop
cwtl
jbe
std
jecxz
lods
or
inc
insl
mov
jge
or
mov
push
fwait
xchg
jb
adc
in
mov
rolb
sbb
mov
xor
imul
mov
dec
dec
xchg
pop
lock
xchg
in
fnstenv
cmc
lock
outsl
sub
fidivrs
sub
add
jo
xor
mov
pop
das
push
jge
lahf
or
jo
pop
sbb
xchg
dec
push
in
jo
imul
or
int3
aad
cmc
pop
mov
sub
mov
jo
wbinvd
std
fnstenv
jg
jbe
cmp
jo
popa
push
dec
fsubl
cli
pop
push
ret
jp
mov
leave
or
jo
loopne
push
sbb
enter
xchg
pop
mov
fnsave
fcmovnb
popa
xchg
aad
mov
mov
mov
aam
sub
inc
xor
inc
cmp
je
xor
push
inc
es
lahf
mov
lods
cmp
jo
add
xor
cmp
fcompl
cmp
push
sbb
fsubs
xchg
addr16
dec
xchg
jb
jae
mov
fistpll
jo
mov
imull
insl
or
fnstcw
mov
mov
lret
push
sbb
push
pop
mov
xchg
shlb
jp
aad
cmp
pop
mov
adc
mov
dec
das
sub
push
pop
out
jmp
dec
jo
xor
lds
out
push
ret
jo
cmpsb
sbb
neg
int
outsb
mulb
mov
cmp
cltd
out
adc
cld
jae
enter
lods
jo
in
lret
cmp
cmp
sub
sub
jo
xor
fdivl
push
jo
push
pop
push
xchg
enter
lods
std
mov
ja
rorb
add
jo
mov
aaa
pop
mov
sbb
mov
jo
out
pop
aad
or
iret
or
jb
cmp
add
jne
sub
jnp
sub
add
pusha
nop
inc
in
xchg
push
inc
scas
xor
mov
cmp
call
xchg
mov
mov
pop
lret
xchg
insl
adc
mov
dec
inc
push
fs
testb
pushf
cmc
in
xchg
xor
xor
adc
and
mov
push
jge
cmp
data16
fdivl
pop
jb
mov
aad
dec
call
jecxz
xchg
rol
pop
lds
xor
jno
pop
add
add
insl
in
xchg
andl
je
pop
mov
dec
loopne
je
int3
push
push
shlb
mov
dec
push
into
pop
xor
dec
or
sbb
loop
jge
cwtl
in
xor
fisubrl
xor
lret
rclb
loopne
or
lret
int
insl
mov
dec
inc
nop
and
adc
push
mov
cmpsl
xchg
fldt
mov
jo
aad
test
inc
rcrl
dec
adc
adcl
jl
cld
out
mov
jo
mov
loope
xchg
add
adc
scas
inc
push
sti
add
out
cmp
jns
xchg
jb
les
jne
mov
adc
jle
jo
test
pop
loop
push
or
add
std
fidivs
das
test
outsb
xchg
add
xchg
jmp
pop
aaa
jle
jo
xlat
iret
jge
mov
lret
lock
cmpsb
mov
mov
pop
out
fwait
addr16
jecxz
jo
sbb
int3
outsb
fbstp
and
cmp
jo
sarb
jno
filds
test
lock
pop
and
stos
cmpsl
inc
fdivl
cmp
jo
hlt
jmp
mov
pop
xor
test
mov
jo
loop
ret
push
lock
mov
pop
test
sbb
gs
cmpb
popa
call
clc
je
sub
xchg
jo
mov
mov
in
fmulp
icebp
or
bound
rcrl
inc
pusha
rorl
clc
push
test
jae
mov
adc
leave
insl
jo
icebp
sbb
fcomi
dec
jo
sub
int
daa
jo
mov
adc
aad
in
xor
notb
and
jo
jmp
cmp
inc
pop
mov
inc
loopne
jo
insl
xchg
test
out
jb
jo
jl
clc
jno
fstps
es
scas
add
dec
mov
pop
push
test
and
or
mov
in
insl
mov
shrl
std
xor
les
outsb
shlb
jne
dec
sub
lock
ret
pusha
pop
lods
push
mov
mov
jo
mov
je
movsb
mov
frstor
ja
nop
mov
lods
mov
dec
and
mov
mov
push
outsb
sub
lock
ficoml
xor
xchg
mov
es
jo
daa
testb
stc
stos
outsb
movsl
add
ficomps
adc
jecxz
jno
mov
pop
mov
add
jge
jle
cwtl
jo
pop
mov
push
aaa
pop
stc
cmp
ret
shll
dec
xchg
or
adc
in
jo
ja
fwait
aas
and
xchg
fldt
or
jo
aad
xchg
orb
jo
sbb
dec
jmp
or
push
adc
sub
push
jnp
add
pop
jo
jmp
fwait
jecxz
sbb
shl
or
mov
cmp
jno
test
notl
jo
mov
sub
les
cltd
sub
and
pop
jecxz
fcomi
lds
pop
inc
test
pop
repnz
insb
into
mov
jns
mov
clc
cmpsb
pop
loop
inc
negb
add
jnp
out
and
lcall
dec
mov
push
pushf
jge
mov
movsl
loop
clc
decl
mov
cmp
jo
or
xor
jne
sbb
jb
ss
mov
testl
insl
pop
pop
cwtl
mov
pop
jno
pop
cmp
jecxz
jg
aam
inc
adc
stos
aas
sbb
cwtl
hlt
jb
jnp
mov
mov
adc
outsb
pop
or
loop
or
lods
shl
jo
and
lods
dec
push
out
push
add
lahf
and
jo
cmp
loop
shlb
jo
or
mov
xchg
das
and
jae
push
cmp
inc
fstpl
aas
jo
sub
and
iret
and
jle
ja
or
imul
pop
pop
cs
sahf
jnp
jo
mov
dec
or
mov
insl
xor
xchg
cmpl
divb
jo
fistpll
in
lcall
es
lahf
inc
jo
daa
mov
jo
pop
aad
mov
pop
jo
fmull
arpl
ficompl
add
test
lahf
leave
jle
outsb
pop
dec
and
jb
pop
mov
cmp
cmp
bound
xchg
mov
add
inc
jo
sar
sub
lret
addr16
icebp
mov
inc
call
fdivp
jge,pn
pop
jo
cmp
xchg
cltd
pop
jg
cmpsb
imul
ss
lret
jo
mov
xor
push
push
dec
xlat
lods
add
insl
fwait
sub
dec
mov
push
push
inc
inc
jo
aaa
cmp
xchg
mulb
push
std
divl
dec
out
call
ror
jmp
mov
push
popa
push
jno
cs
push
adc
pushf
push
pushl
sbb
cmpsb
mov
cmp
movsb
jns
mov
aad
repnz
jecxz
xor
rcrl
inc
int3
jo
jmp
xchg
sbb
jp
cwtl
pop
inc
jo
aaa
push
xchg
adc
mov
mov
jo
movsl
aad
jnp
push
mov
iret
dec
xorb
rcl
pop
int
dec
adc
data16
xor
repz
push
sub
cli
shrb
mov
rcll
jo
jge
jmp
jo
and
jmp
cmc
hlt
xorl
sub
test
jne
mov
or
pushf
jo
mov
or
repz
inc
sbb
jne
mov
rcrl
gs
jmp
jo
xor
and
daa
sbb
xor
pushf
mov
push
loope
inc
add
sbb
clc
mov
insl
sahf
push
mov
ret
xchg
add
jo
dec
inc
adc
sub
or
lods
fistl
sbb
sbb
divl
add
cmp
jno
adc
fsubrl
inc
adc
mov
imull
and
sbb
xchg
lock
mov
add
loopne
cmc
dec
cmp
xchg
ret
or
jl
stos
sbb
loopne
insl
sub
lret
clc
icebp
stc
push
aaa
adc
inc
jo
sbb
scas
jmp
dec
push
adc
cmp
sub
addr16
aad
mov
add
inc
test
insl
push
xchg
and
fisubrs
jb
cmp
and
xchg
fldl2e
mov
pop
push
lds
mov
push
lods
cmp
inc
cmp
insb
mov
mov
jge
ljmp
or
fmul
je
fdivl
push
pushf
ror
xchg
jne
dec
push
or
leave
mov
pop
ficoms
int3
out
cmp
adc
iret
or
jo
xchg
in
pop
inc
fwait
jb
movsb
xchg
fisttpl
loope
jo
cmpl
push
push
in
lock
mov
inc
mov
jmp
sbb
int3
cmp
test
int
jns
insb
rorb
decl
shrl
clc
mov
subb
call
lret
push
repz
mov
jmp
nop
xchg
mov
xor
data16
push
add
in
xchg
sbbb
xchg
adc
daa
aad
jns
pop
jo
cmp
imul
sbbl
in
aad
xchg
jae
dec
fs
and
into
insl
vshufpd
outsl
iret
pushf
or
jo
xchg
pop
mov
cmp
lcall
dec
adc
mov
jno
pop
xor
mov
jo
xchg
mov
mov
push
push
mov
or
add
ficoml
xorl
in
idivb
jg
pop
pop
xor
jge
mov
lock
fsubrp
jo
rcrl
xorb
loop
dec
or
jo
adc
push
jae
jne
loopne
xor
inc
pop
mov
jo
xor
adc
insl
jo
data16
movl
popa
cmc
pop
cmp
or
push
loop
stos
aad
sub
rorl
leave
cmp
enter
js
add
mov
iret
xor
in
sbb
das
jecxz
divl
shll
loopne
mov
pop
mov
call
wbinvd
fistpll
jo
pop
dec
sub
in
insb
outsl
jp
rorb
mov
mov
cli
lods
cmc
fwait
add
aad
out
jno
add
in
xorl
or
mov
mov
mov
push
dec
test
fs
or
mov
mov
packssdw
ret
gs
lds
and
jns
pop
mov
into
or
sub
xchg
sbb
cmp
mov
pop
lock
cmpsb
xor
ret
aad
int
adc
out
jo
loopne
out
fmulp
mov
jnp
xor
cmp
je
lods
dec
out
xchg
stos
fistl
or
enter
pop
mov
sbb
enter
fnstsw
hlt
insl
fadds
xor
lock
push
cltd
pop
fcompl
cwtl
or
pop
lods
pop
push
and
jo
sahf
jl
hlt
dec
add
in
add
call
mov
jbe
testb
jo
cmp
sbbb
int
idivb
mov
sub
mov
vpmaddwd
adc
jno
jo
test
xor
jo
lret
imul
jne
testl
or
jo
push
inc
pop
jge
mov
sub
mov
out
xchg
loopne
and
xchg
jo
mov
jb
jo
clc
cmp
lea
push
roll
xor
push
out
jle
add
xchg
inc
xor
mov
jae
scas
mov
pop
popf
add
sub
dec
jo
fsubl
push
loopne
in
imul
mov
sbb
repnz
sbb
inc
ds
aad
or
mov
jo
xchg
sti
mov
in
or
icebp
jmp
or
sbb
and
mov
sub
mov
mov
pop
dec
or
pop
lock
mov
push
or
pop
inc
jg
aam
mov
cmp
repz
push
iret
bound
fidivl
xor
jae
jecxz
push
mov
je
pop
mov
jo
iret
fsubrl
dec
lea
jbe
jns
xchg
jecxz
hlt
push
push
push
inc
jo
mov
pop
mov
lock
add
mov
daa
sub
xchg
cmpsl
jle
cmp
mov
add
nop
aas
push
pop
jo
sbb
push
jecxz
jmp
mov
pop
push
adc
aad
inc
jne
adc
mov
or
cli
fildl
leave
bound
mov
dec
jo
adc
or
inc
jo
lods
cmp
jecxz
stos
xchg
add
jo
sti
and
fcmovne
and
push
or
out
insl
lea
sbb
fs
in
pop
xchg
aad
xor
adcb
jo
or
enter
fnsave
int
movsl
aaa
mov
lcall
repnz
dec
rorb
jo
pop
aad
incb
test
das
mov
inc
ja
dec
adc
push
mov
jo
inc
sub
loop
jo
pop
sub
in
sub
lock
test
stc
and
faddl
lock
rolb
mov
jo
test
mov
adc
in
clc
mov
pop
inc
fsubrs
sbb
int
out
jo
xor
aad
add
pop
stc
gs
shlb
ljmp
push
inc
flds
jp
scas
in
inc
call
ds
andl
sahf
mov
or
push
ja
mov
sbb
lock
lods
das
nop
pop
sub
lock
ja
and
jo
clc
loope
leave
and
sub
sub
into
aad
pop
sbb
push
xor
js
test
nop
inc
mov
test
cld
cmpsl
dec
jo
add
inc
insl
push
ja
mov
pusha
lods
enter
jno
mov
jae
mov
and
inc
addb
add
jb
arpl
das
cwtl
pop
inc
pop
adc
dec
call
mov
lock
arpl
lret
dec
enter
xor
insl
fstpt
pop
sahf
adc
jo
dec
popa
fdivr
lret
xorb
in
mov
jo
stos
mov
mov
shll
cmpsb
into
fildl
inc
jmp
push
jo
movsb
aas
pop
cmc
sar
sarl
mov
jo
xor
mov
lock
mov
mov
add
jbe
in
pop
xlat
jo
pop
insl
mov
mov
sbb
push
lds
movsl
pop
fnstenv
fwait
dec
xlat
ljmp
inc
addb
in
movsl
in
add
int
inc
out
lock
jl
pushf
repz
pop
rcl
in
aaa
ja
and
cmpsl
pusha
popf
push
pop
xor
dec
lock
fdivrl
leave
mov
adc
ja
lret
jno
mov
and
jne
clc
sti
mov
test
mov
je
jno
mov
js
pop
push
push
int
test
fs
jmp
xor
imul
testb
and
out
xchg
pop
jo
push
or
jecxz
jno
jmp
inc
imul
lcall
jo
pop
add
mov
nop
lea
mov
outsb
sub
popf
xchg
xorl
push
into
cltd
fcomps
rcl
add
pushl
sbb
or
test
pop
add
data16
xor
fnstenv
jo
int
xchg
or
mov
hlt
arpl
mov
je
fstps
mov
scas
mov
call
mov
out
dec
xchg
cmpsl
lods
push
adc
out
inc
je
mov
fsubrs
jo
fcomps
add
push
mov
jo
nop
xchg
xlat
mov
jg
jo
dec
mov
xor
inc
mov
rclb
fistpl
xchg
dec
jo
lock
movsl
fs
jae
sbb
gs
xlat
jmp
sbb
jb
js
mov
shll
jmp
cld
outsl
loop
push
or
add
stos
shrl
pop
addl
cwtl
adc
aad
ljmp
stos
dec
sub
shl
and
sahf
or
jle
in
out
mov
test
adc
lcall
sub
sub
pop
gs
test
xchg
ret
jnp
sbb
jo
loope
inc
out
jb
adc
dec
fcomps
jle
sub
add
imul
xchg
sbb
cmpsb
std
jo
pop
aad
addl
sbb
cld
cmpl
popa
shll
fdivrl
add
loop
aaa
mov
sbb
jo
push
aam
insb
sub
jne
fs
jp
sub
mov
imul
bnd
and
fsubrs
dec
outsl
xor
pushf
popf
ds
std
scas
add
divl
xchg
sub
jg
les
jno
inc
or
mov
push
andb
pop
mov
popa
les
lahf
sbb
aad
call
dec
push
mov
add
lahf
xchg
ficompl
push
mov
push
arpl
subb
xchg
pop
aam
xor
xor
jo
xchg
or
mov
mov
pop
call
ret
insl
jb
sbb
push
inc
popa
cmp
fldcw
jp
loop
cmp
xchg
inc
sbb
inc
inc
sub
jo
flds
xchg
imul
pushf
fsubl
jo
testl
mov
pop
enter
or
flds
es
and
shl
hlt
fmuls
outsb
add
jo
fwait
cmp
mov
jl
push
pop
outsb
mov
xchg
xor
fdivs
dec
jle
jbe
jo
lret
jnp
ljmpw
ds
jne
or
shr
test
and
jo
arpl
pop
into
cmp
sahf
jo
repnz
cltd
shlb
or
out
sbb
jo
test
imulb
fwait
in
fs
outsl
sub
dec
mov
int3
xor
fdivp
mov
jecxz
imul
jb
add
mov
jno
lds
lret
mov
je
jns
or
clc
xchg
push
dec
nop
xor
mov
jo
int
pop
out
fldt
jne
jecxz
inc
jo
popa
dec
jno
pop
mov
xor
inc
fiadds
insl
sbb
cld
nop
pusha
aad
js
pop
stos
jo
xor
mov
inc
div
jo
pushf
clc
and
jo
ffree
pop
xlat
cmp
lea
out
mov
add
in
adc
insl
mov
lods
mov
mov
lea
daa
ret
repnz
and
fiaddl
xchg
ret
mov
sbb
movsb
cmpsb
shrb
mov
scas
fcmovnu
jo
push
ss
jae
adc
in
pop
out
es
imul
add
popl
sahf
jns
cmp
jo
mov
add
adc
jle
add
sub
fdivs
fs
imul
jo
cld
adc
cwtl
idiv
xchg
jb
ja
jbe
push
jo
cmc
mov
mov
and
xchg
jg
push
ret
pop
jae
fadds
ja
rol
cmpsl
jo
lret
mov
mov
ja
adcb
mov
push
std
push
jo
sbb
jne
int
dec
jo
sbb
inc
jo
sub
xchg
mov
out
and
cmpsb
inc
jnp
push
sbbb
jo
outsl
ja
sbb
iret
jo
call
testl
jle
mov
mov
movsb
jge
and
mov
mov
cwtl
mov
adcb
orb
jo
inc
inc
loope
lret
mov
jo
add
mov
mov
lea
xor
scas
sub
nop
lods
mov
jo
xor
jo
hlt
popa
fwait
mov
pop
xor
cmpsl
pop
jo
mov
adc
mov
ss
push
lods
mov
into
mov
jo
adc
pop
out
bound
popf
pop
jo
shr
cli
jmp
dec
xchg
and
xchg
lock
sub
jo
inc
popf
and
and
jle
insl
outsl
pop
sub
sti
jmp
xchg
sub
jae
lcall
add
jo
int
push
sbb
pop
jo
mov
inc
in
push
dec
in
lock
dec
sti
sbb
jo
imul
push
ja
cmp
sub
and
in
push
mov
push
mov
jb
jo
jns
int3
cmc
lods
repnz
jno
xor
lock
cmp
loopne
enter
adcb
pop
jo
dec
sbb
aad
fwait
jae
inc
and
or
inc
adc
cmc
pop
lock
dec
xor
xchg
jo
imul
jge
push
jo
fdivrs
ds
jo
bound
pop
mov
in
push
enter
pop
jb
repnz
incl
or
xlat
aaa
cs
ret
divl
inc
lds
inc
lret
fdivrp
aad
movsl
icebp
push
mov
lock
or
pop
mov
stos
inc
mov
jmp
popf
aad
daa
je
js
xchg
mov
push
jmp
arpl
mov
inc
jo
fidivs
mov
cmp
xor
add
fstpl
add
lea
push
aad
pop
loop
jo
sbb
mov
faddl
xor
bound
dec
xor
jno
popf
sub
aad
loop
dec
adc
add
ret
xor
adc
push
popa
jo
cmp
pop
fnstenv
xor
sbb
je
cltd
dec
dec
sub
jo
adc
popa
jo
dec
testb
mov
aaa
push
mov
jo
xor
fdivr
cmp
and
pop
rcrl
xchg
imul
cmc
adc
rclb
jp
nop
and
jae
in
bound
cmpsb
ja
imul
dec
sarb
mov
mov
push
jnp
in
into
shlb
dec
shll
lret
int3
sub
pop
ljmp
outsl
jno
lea
push
jo
int
or
cmc
xlat
popa
movsl
cmp
in
inc
inc
mov
inc
popl
sbb
push
pop
call
xor
jmp
xor
ja
fsubs
jo
mov
ljmp
push
iret
jno
xor
dec
push
xchg
jo
adc
lea
outsb
xchg
cmp
stos
mov
lock
popf
shlb
ja
cltd
jns
adc
and
lods
jo
daa
lea
jo
xchg
pop
mov
cltd
loop
negb
test
jle
insl
sahf
sub
stc
xchg
xchg
dec
jae
rol
adcb
ja
stos
mov
je
cli
aam
xchg
jo
jecxz
pop
loop
ficoml
xchg
push
or
xchg
sbbl
rolb
jne
cs
into
shrb
movsl
ret
xor
adc
mov
jo
push
jne
fxch
aad
jo
dec
in
inc
and
mov
jo
divl
fstps
inc
push
inc
pushf
in
fcomi
sub
jmp
mov
je
sbb
enter
jl
and
xchg
jo
cmp
cmp
or
lahf
xchg
lret
mov
andb
jo
out
mov
aad
out
cmpsb
push
insb
jne
lods
adc
mov
adc
adc
rcll
enter
lock
mov
push
jo
mov
sbb
repz
aaa
dec
ja
inc
add
pop
testb
inc
ret
aad
insl
scas
inc
pop
xor
stc
jo
xor
adc
dec
mov
std
adc
cmc
or
push
mov
pop
in
add
push
mov
and
aam
dec
lret
add
and
pop
mov
adcb
leave
sbb
insl
push
pushf
fcoml
push
inc
lock
imul
inc
xor
dec
int
jo
insb
dec
xor
cld
fstps
push
or
imul
jo
xor
or
jno
adc
mov
push
imul
mov
jo
mov
mov
jo
inc
ret
sti
cmpsb
test
int3
fs
js
lods
jo
push
in
ss
or
jmp
mov
into
loopne
rcl
jge
imul
and
sbb
jo
jmp
mov
in
outsb
call
rclb
sbb
ja
shll
or
sti
jae
lret
xchg
movntq
xor
ja
and
xchg
out
clc
pop
sbb
mov
jo
mov
xor
push
cli
adcb
jo
negb
clc
orl
xchg
fidivrl
sbb
aad
jo
dec
shlb
das
int
or
push
jae
cs
inc
push
cmp
nop
adc
popa
jo
icebp
loop
cmp
jo
call
adc
pop
pop
pop
fs
cmp
cmpsb
es
push
xchg
cmp
or
lods
xor
out
aas
xchg
push
jo
sub
ffree
inc
jg
jo
aad
in
and
xchg
xor
cmp
fmull
jo
aad
sbb
add
std
hlt
test
and
ja
jb
repz
cmp
nop
lea
jo
nop
or
jo
out
mov
dec
pop
push
jo
and
pop
ljmp
and
ret
mov
cmp
lahf
jo
shlb
xchg
dec
mov
lret
scas
popa
nop
movsb
jo
push
mov
push
jnp
cwtl
pop
dec
adc
pop
and
mov
pop
aad
dec
out
inc
jo
pop
test
sbb
xchg
mov
jae
stos
jbe
jo
test
sub
fisubrs
pop
jmp
jbe
fcoms
fbstp
push
xchg
xor
mov
loope
pop
into
xchg
pop
adc
movsb
xor
pop
repz
mul
out
push
or
inc
sar
sub
mov
dec
hlt
sub
push
mov
decb
fdiv
jmp
loopne
xor
adc
and
ja
cmp
mov
cld
xor
jo
mov
ds
add
sub
inc
fwait
add
inc
pop
test
xor
ss
out
jae
lret
mov
fmull
loopne
pop
lcall
scas
mov
ljmp
sub
jo
jb
leave
iret
push
lock
xor
repz
sub
bnd
cmp
xchg
rcrb
push
jmp
inc
pop
jo
and
arpl
mov
sahf
jo
inc
adc
fnstenv
xor
ss
aas
gs
lret
das
loope
lldt
jo
ja
mov
xlat
cmp
pop
jo
and
popa
popf
xorl
inc
je
loop
jo,pt
or
in
aad
ret
jae
and
das
cmp
insl
clc
sub
cwtl
pushf
adc
jo
jnp
mov
lret
mov
sub
mov
adc
sbb
xor
push
lods
xor
ficomps
jae
sub
mov
add
out
insb
sbb
cmp
in
sbb
add
cmp
xchg
je
pop
mov
or
jo
fimull
fisttps
jo
pop
rorl
jo
in
mov
je
ljmp
fcmovb
jae
mov
lock
mov
adc
inc
divl
mov
testb
inc
mov
add
insl
xchg
leave
mov
adc
lock
mov
cs
loopne
jo
shll
add
dec
jmp
and
mov
mov
or
mov
cmp
jae
mov
test
shrb
jo
xchg
les
fisttpl
fsubp
jo
push
xchg
int
lods
xchg
ljmp
bound
shll
add
xchg
jo
push
jns
mov
daa
xor
dec
das
ds
xor
sbb
ret
inc
ficoms
ljmp
xchg
scas
jo
xchg
lret
adc
cmp
cmpsl
out
adc
cmp
and
mov
lods
mov
pop
mov
xchg
idivl
aaa
bound
pop
xor
cmp
stc
incl
inc
out
fldenv
mov
popf
cmp
lea
addr16
mov
ret
mov
push
ror
divb
inc
es
cmp
outsb
push
pop
mov
hlt
pop
add
mov
jo
loopne
lret
jmp
cld
jo
xchg
xor
cmpsb
xorl
jnp
cwtl
jo
ja
loopne
adc
and
pop
mov
data16
shrb
rolb
pop
sub
jl
sub
mov
leave
jo
mov
ja
cmp
insl
mov
xor
mov
adc
sbb
cmpsl
adc
imul
mov
xor
inc
adc
or
xchg
fldt
insl
push
lock
mov
dec
jg
lock
xchg
sbb
xor
jl
or
iret
xorb
stos
push
sub
pop
ja
mov
jmp
xchg
aam
loope
dec
inc
lds
lods
sbb
and
fadd
jo
in
jge
fsts
push
pop
add
jo
xchg
cmp
cli
call
fdivl
es
out
push
add
inc
aad
xor
fcmovne
loop
out
call
lahf
sub
push
icebp
aad
mov
jns
add
shlb
outsb
jbe
addr16
pop
add
adc
lock
xor
push
jge
lds
lods
jo
and
popf
add
insb
xor
out
jno
sahf
dec
mov
sbb
aad
arpl
inc
into
lcall
dec
xor
push
mov
cmp
pop
aad
lret
cmc
push
sbb
xor
cmp
loope
in
mov
mov
icebp
pop
daa
inc
mov
int3
fbstp
frstor
mov
faddl
push
lret
jo
std
lret
jmp
or
push
sub
jo
jb
mov
jo
popf
in
mov
js
push
xchg
jo
sbb
jmp
cmp
sarb
jl
pop
xorl
jo
repz
in
adc
mov
dec
jo
sub
leave
cmpsw
fistpl
xchg
mov
fidivs
inc
shl
add
pop
pushf
mov
fstpl
inc
push
pop
sub
xor
dec
ss
pop
adc
xlat
push
pop
stc
aas
pusha
out
add
imul
sbb
xchg
out
cwtl
jo
sbb
or
mov
sbb
jecxz
mov
or
sbb
inc
pushf
leave
sbb
jl
out
insl
daa
push
sbb
popa
dec
sbb
outsl
mov
and
jno
adc
icebp
mov
fidivs
jns
jo
sti
jno
daa
push
jo
push
fnstcw
and
in
lock
out
test
dec
cmp
arpl
xchg
jmp
ret
jo
mov
sbb
sub
or
adcl
sbb
jmp
lea
inc
outsl
roll
lods
push
movsb
out
ja
add
or
push
jo
aad
icebp
jbe
inc
pop
dec
outsl
sub
loope
jae
jge
jo
sbb
pop
pop
inc
push
jnp
out
into
jo
pop
imul
add
loopne
insl
jno
push
lahf
inc
mov
and
sarb
xor
jl
sub
add
gs
inc
loope
mov
xchg
hlt
jmp
aad
ds
rorl
mov
jo
negl
mov
push
int3
repnz
xor
mov
jo
sbb
shll
mulb
xor
ret
insb
out
out
lock
int3
cmp
sub
fdivrs
or
in
movsl
or
push
xchg
sbb
fiaddl
or
cmp
push
xlat
jnp
leave
pop
mull
adc
push
ljmp
arpl
cmp
jb
dec
jp
sbb
xchg
mov
mov
jns
xchg
leave
jge
mov
jnp
xor
movsb
imul
xchg
pop
outsl
jne
xor
test
nop
push
psubusw
insl
or
neg
sub
subb
mov
inc
adc
jbe
retw
xchg
faddl
bound
push
jo
scas
lcall
loope
pusha
fs
jge
jo
insl
test
in
sti
mov
std
sarb
adc
insb
lock
das
into
cs
mov
lret
test
dec
lret
pop
xchg
jo
lock
cmp
lock
leave
xor
dec
in
add
cmc
scas
mov
out
mov
push
insl
cmp
cmpsb
mov
pushf
xchg
int
jo
out
pop
mov
jle
and
dec
movsb
and
cmc
ja
inc
adc
lcall
lock
adc
jo
mov
insl
sub
jge
xchg
test
fstpl
xlat
push
rorb
movsb
mov
cs
sub
add
inc
mov
pop
test
insl
into
and
movl
cmp
negb
jo
push
jne
sub
mov
nop
aad
mov
addr16
adc
mov
ja
sbb
dec
cmp
pop
das
mov
in
xchg
pop
xor
jne
test
mov
mov
frstor
out
xor
inc
jo
mov
jecxz
ficoml
aad
jo
push
sub
sub
jnp
ja
jb
or
xchg
mov
pop
mov
jo
aad
rcll
inc
frstor
mov
dec
cli
loop
out
mov
aas
sbb
jnp
stos
cmp
scas
push
enter
aad
mull
mov
sbb
icebp
inc
dec
jo
movsb
inc
les
jo
xchg
std
mov
push
adc
add
sti
or
fsubl
inc
xchg
xor
stos
jge
or
jo
aad
sbbl
xor
jo
enter
fldcw
add
rcrb
aad
insl
push
push
mov
es
in
adc
jo
cmp
inc
lret
adc
mov
mov
lahf
setae
test
lods
dec
sbb
lds
cmp
mov
xchg
dec
inc
and
cmp
mov
push
pop
iret
adc
sub
fnstenv
andb
push
jecxz
cmpsb
insb
insl
push
cmp
notl
jno
nop
jecxz
data16
jae
movsb
inc
cmp
pop
mov
jae
mov
mov
fucomi
call
push
movsl
imul
insb
pop
mov
icebp
mov
and
int
jo
ret
js
mov
jo
loope
jecxz
cmp
dec
insl
loopne
jge
mov
pop
insb
lods
dec
adc
lods
dec
add
mov
xor
insb
fwait
cld
scas
xlat
mov
enter
cmp
imul
sub
pop
jl
mov
insb
jo
es
incb
add
cmp
mov
jle
xor
pop
leave
aam
movsb
loopne
xor
push
cmp
xor
cmp
pop
popf
push
sbb
flds
jo
fistpl
arpl
ror
xor
push
sbb
xchg
rcl
add
or
mov
xor
mov
mov
in
push
push
and
inc
and
jbe
pop
push
insb
pop
sub
xor
xor
divl
fdivs
hlt
loopne
sub
pushf
push
mov
pop
push
jo
flds
testb
fucomi
add
shrb
fadds
push
cmp
sub
jle
in
int
jo
fnstcw
sub
fiaddl
imul
sbb
and
inc
call
inc
rcr
imul
pop
lcall
jo
xlat
movsl
mov
dec
icebp
aad
stos
lret
imul
cmc
dec
insl
cmpsb
ret
lea
dec
mov
cmp
popa
sub
addr16
adc
ds
std
div
add
orl
pushf
lcall
sub
and
add
iret
dec
insb
sub
outsb
push
adc
rol
jo
dec
adc
push
dec
js
shlb
leave
sub
fistps
enter
out
aad
repz
gs
push
popf
cwtl
push
fldt
andb
dec
jg
nop
mov
ljmp
pop
jo
pop
test
jecxz
aaa
jo
test
movsl
jo
aad
ljmp
sub
and
int
adc
imul
mov
lock
in
push
sub
lret
adc
cmp
jo
dec
fistl
lea
outsb
fstl
push
pop
lock
out
scas
adc
sub
xorl
jb
mov
pop
adc
call
sub
mov
mov
ja
stos
popl
lock
or
addr16
push
fnstenv
lret
push
push
mov
xor
cli
inc
out
lock
outsb
leave
test
sahf
gs
rcl
push
fbstp
and
xchg
push
decl
insl
je
or
mov
push
test
sarb
test
mov
call
mov
pop
inc
inc
dec
and
idivb
fcmovnu
jo
popa
fisubl
loop
jne
imull
in
cmp
out
add
cmp
cli
fadds
jo
mov
movsb
in
jo
mov
jge
jo
ret
or
dec
push
jecxz
adc
repz
jo
adc
loopne
jne
jae
sbb
mov
or
xorb
dec
imul
sahf
fwait
xor
aad
jo
gs
scas
call
fld
add
push
pop
ret
mov
aad
jae
sub
push
jo
xchg
lock
xchg
stos
mov
fisttpl
mov
scas
aad
xchg
ret
ss
pusha
jns
addl
push
jo
shll
cld
hlt
jge
jo
dec
repnz
push
mov
movsl
dec
push
xor
loop
das
mov
cmpsl
push
aad
jo
inc
fcomi
cwtl
inc
nop
subl
and
mov
fwait
mov
mov
iret
jno
shr
pop
shll
fidivl
cmp
xor
push
dec
pop
mov
xlat
ja
mov
lahf
js
mov
dec
and
scas
jmp
add
shlb
out
fidivs
mov
or
push
hlt
pop
jnp
lcall
lahf
fnstenv
jg
call
jo
adc
roll
fistpll
in
mov
jnp
xchg
xchg
fmulp
and
mov
or
adc
pop
mov
das
pop
cld
call
cmp
and
lret
mov
ret
fisubl
adc
mov
jo
cwtl
sub
repnz
in
fwait
or
cmp
subl
loopne
jo
test
outsl
insl
lds
dec
icebp
adc
xchg
test
jo
cmp
ret
int
sub
insb
push
pop
sbb
insl
add
mov
jmp
hlt
inc
in
sbb
jo
mov
iret
cmp
mov
jo
fcomp
mov
lea
loop
push
out
jo
sbb
repnz
and
je
and
jmp
pop
xchg
xchg
out
or
rcl
cmp
sub
jo
mov
dec
shrl
jae
jp
cmp
mov
testl
jo
pushf
iret
lahf
xchg
mov
pop
xor
xlat
rorb
pop
jno
push
mov
xor
aad
bound
sbb
movsb
int3
insl
sarb
mov
cmp
jmp
add
shrl
adc
pushf
dec
test
xlat
jo
jno
pop
stos
fldt
pop
cmc
mov
xchg
pusha
js
add
and
jo
add
lret
or
fmulp
xor
popa
ljmp
outsl
mov
and
and
negl
in
ret
mov
jo
mov
xor
insl
ret
iret
cmpb
xor
mov
int
divl
pop
test
stos
popa
aad
jmp
add
jo
arpl
or
loopne
inc
pop
xor
inc
nop
add
jle
sub
je
lahf
and
stos
xor
cli
mov
jo
dec
push
fs
xor
jae
aad
xchg
sbb
dec
sbb
push
in
jmp
cmp
ror
mov
cmp
jo
jp
pop
jge
loope
jo
push
fiadds
push
out
or
pop
stos
jo
testb
shlb
inc
imul
jo
int
inc
mov
add
repz
jmp
xor
adc
jo
addr16
outsb
pop
in
mov
loope
cmc
jo
sbb
push
jno
shll
dec
inc
sahf
pop
fwait
add
push
cs
adcb
idiv
repnz
xorl
fnstenv
ret
mov
xor
add
das
mov
mov
insl
or
jo
fldenv
push
fs
or
jo
mov
jo
shll
sub
out
add
adc
lods
pop
dec
cmp
jo
cmp
mov
andl
pop
les
mov
lret
push
stc
pop
jo
inc
aad
sbb
push
loopne
stc
jo
into
je
xor
jo
pop
mov
lods
rcrl
test
aad
bound
jo
les
lea
aam
push
ja
sub
daa
cwtl
das
dec
jo
pop
fcomp
in
xlat
lcall
je
xor
inc
jo
jmp
aad
outsl
repnz
or
mov
cmp
push
xchg
inc
rclb
ret
inc
pop
sahf
fnstsw
or
xor
pop
or
dec
jmp
ja
lock
pop
jnp
and
xor
outsb
movsl
mov
adc
jl
fnsave
push
jo
lcall
sbb
dec
xorl
js
jbe
jo
mov
jmp
jo
adc
gs
inc
mov
movsl
sbb
mov
jge
jmp
rol
test
imul
jl
imul
ficompl
fcmovnu
cmp
lock
mov
stc
add
jo
inc
or
mov
mov
jae
das
xor
in
enter
jo
adc
outsl
rorb
mov
leave
xor
fdivr
ss
sarl
mov
xor
aad
push
sbb
jo
jno
repnz
sub
xchg
xor
cs
jo
cmp
shl
xchg
or
mov
int3
lea
xchg
scas
push
and
icebp
mov
xor
aad
cmc
mov
inc
nop
add
lret
inc
sub
adc
pop
loopne
mov
adc
ret
pop
loopne
jae
test
test
sbb
jo
gs
aad
jno
xlat
jo
scas
addr16
push
jbe,pn
sub
jo
mov
mov
mov
jae
ret
mov
pop
push
sbb
pop
repnz
jo
enter
clc
pushf
mov
jns
pop
add
out
dec
in
dec
orb
loop
mov
out
in
jae
lret
mov
jl
test
jno
ja
cli
loopne
loopne
andl
adc
adc
or
cmpsl
add
jl
imul
lcall
mov
cmpsb
mov
shlb
sub
mov
stos
jae
scas
pop
cmp
jge
sub
inc
jo
mov
push
test
hlt
fisttpl
jge
scas
jo
imul
mov
jno
call
mov
popa
test
adc
out
jae
pushf
dec
lret
shlb
nop
negb
jae
incl
gs
inc
jne
call
push
dec
xchg
mov
or
mov
aam
lret
xchg
mov
outsl
outsb
mov
adcb
lock
jge
inc
inc
clc
xchg
not
jo
xchg
inc
stos
cmc
leave
jbe
jo
mov
xchg
mov
imul
jo
or
cmc
aam
jo
pushf
pop
mov
dec
lahf
mov
sti
lock
icebp
mov
stc
orb
xor
jo
push
out
xchg
xchg
fcmovu
dec
jo
ja
add
stos
cmpsb
push
xor
mov
out
mov
in
jae
jae
mov
inc
dec
xor
jnp
jp
and
sub
in
out
and
sbb
insb
daa
adc
jo
dec
lock
xchg
add
flds
pop
xorl
test
call
dec
xor
inc
lret
add
xchg
loopne
jo
fsubrs
jo
jecxz
or
aad
sub
adc
sub
divps
jo
adcl
jo
mov
cmpsl
xchg
addr16
into
dec
add
rcrl
or
mov
std
in
sub
mov
push
xchg
jae
inc
sub
aam
out
push
cli
fnstenv
xchg
mov
dec
aad
aas
sub
push
xchg
cwtl
inc
jo
ror
icebp
push
dec
ret
cmp
jle
cmp
add
add
jmp
aad
push
jo
cmpsl
mov
ret
jnp
push
imul
aad
mov
or
cmp
or
lret
mov
mov
rcrl
jo
ja
jnp
inc
sbb
jo
into
jns
inc
lret
ja
cwtl
insb
jae
outsl
in
sbb
add
lods
loopne
in
xor
dec
popf
cmpsl
test
sub
xchg
jmp
bound
xchg
sahf
xor
loopne
mov
and
jo
cs
or
sbb
jo
shl
cmp
fldt
xor
xchg
in
repz
cwtl
push
fisubrl
leavew
add
cmp
sbb
mov
jb
mov
rclb
imul
ljmp
leave
loopne
jo
hlt
gs
mov
pusha
mov
into
and
or
mov
lahf
sub
cmp
jmp
loope
das
push
fstpl
jne
in
pop
mov
das
xchg
sub
daa
adc
rolb
or
cmp
sbb
dec
shl
stos
mov
jle
jo
aad
adcb
mov
repnz
xor
jo
fnstcw
stc
jnp
inc
into
or
mov
icebp
mov
les
sub
jo
jg
scas
mov
insl
fnstsw
sub
jge
cmp
or
mov
clc
or
imulb
les
xchg
mov
lock
shll
inc
add
or
push
xchg
fwait
jo,pn
mov
adc
test
mov
jae
jo
or
jmp
aad
jo
repz
rcrb
mov
loopne
pop
pop
jne
sub
stos
in
jmp
and
inc
jo
sbbb
rcl
jo
call
dec
stos
lea
or
dec
inc
jb
inc
in
add
jo
dec
ja
mov
cltd
xlat
insl
pop
mov
lock
pop
fs
push
mov
mov
jo
in
cwtl
shll
jo
and
cmp
xor
aad
jge
call
jg
or
mov
push
movsl
fidivs
xchg
lods
jo
push
cmp
mov
data16
add
push
fucomi
shll
mov
je
jbe
sbb
mov
mov
push
xchg
add
jae
stos
and
push
stos
out
jmp
mov
pushf
pop
xor
jmp
or
push
jne
xor
lret
fnstcw
fldl
jo
push
push
mov
add
dec
jne
lock
mov
sub
jae
lds
sti
jae
lea
push
xor
or
jecxz
jge
adc
icebp
shlb
rcl
mov
jo
mov
cmp
pusha
xchg
jg
or
aad
inc
sahf
dec
mov
aaa
jo
jg
arpl
push
xor
out
iret
jge
mov
cmp
xor
int
inc
ret
fdivl
add
mov
ja
cmp
cld
inc
loopne
sbb
dec
pop
sbb
xchg
popf
outsl
movsl
pusha
push
das
and
rcll
inc
in
mov
rorl
cmc
jo
fdivrl
ja
rcll
mov
cli
sub
ror
jo
das
mov
leave
fs
sti
push
fisubs
jle
je
arpl
rolb
xor
mov
fs
push
sbb
jo
dec
insl
add
loopne
jo
sbb
inc
xorl
cmc
adc
insb
lahf
jo
out
mov
xor
push
dec
ja
jle
push
sti
aad
movsl
lcall
mov
ja
bound
cmp
in
je
xor
sbb
lea
and
add
jo
adc
out
xchg
push
aam
jo
fcoml
ja
jno
lea
mov
inc
jae
ja
pop
call
arpl
add
inc
loop
out
mov
lods
mov
int3
outsl
cmp
pop
imul
cmp
gs
loope
ds
cmc
lea
es
stc
push
adc
loop
jo
subb
push
mov
mov
jmp
xchg
xchg
mov
adc
push
jo
call
dec
mov
xchg
pusha
scas
push
fnsave
punpckhdq
push
mov
inc
pop
cmp
data16
mov
or
sub
jo
inc
fucompp
repnz
ja
jns
nop
movsb
aaa
dec
sbb
cld
mov
divb
scas
fisttpl
dec
rcrl
ja
lods
inc
lds
mov
hlt
jg
pop
ret
sub
mov
ja
popa
jae
repnz
adc
jo
jbe
clc
outsl
sbb
add
mov
pop
cld
repz
sub
jle
pop
loop
or
dec
sbb
push
jl
jne
fcmovb
add
pop
icebp
mov
cmp
shr
nop
or
out
mov
fcompp
je
xchg
add
pop
pushfw
fstl
mov
sti
inc
arpl
fildl
cmp
mov
jo
into
adc
jo
ljmp
push
int
add
lds
fucomi
mov
pop
lea
nop
in
imul
cmp
push
imul
pushf
jo
aad
enter
test
mov
push
xor
std
shll
cmp
xchg
xchg
lods
pusha
inc
sahf
pop
insl
flds
in
hlt
inc
test
sbb
pop
sub
xbegin
aas
sbb
shrb
sbb
movsl
pushf
addr16
pop
sahf
faddl
mov
sbb
and
jno
pop
pop
adc
insl
fstl
xor
jno
gs
and
outsl
jo
mov
jo
rol
scas
cmpsl
xor
pop
lcall
push
push
sbb
xor
dec
mov
ja
lds
mov
subb
sti
add
sub
xor
push
dec
cli
icebp
cmp
lds
adc
ja
jo
movsb
test
pop
inc
std
aad
and
xlat
inc
nop
or
stc
sub
xchg
mov
arpl
mov
and
adc
int3
pmullw
mov
pop
mov
stos
push
addr16
jo
jnp
fstpl
rorb
scas
ss
call
mov
jmp
pop
jne
fidivl
test
push
jo
mov
dec
aad
jno
push
pop
loopne
fisubrl
lock
push
pop
lods
sub
jo
test
jp
fistpll
test
jo
cld
jb
or
sub
test
add
jno
out
fst
shll
push
mov
mov
repnz
insl
jo
lret
in
push
sbb
push
push
rolb
mov
inc
mov
lret
xlat
dec
inc
push
jo
mov
lea
aad
cmp
test
cmp
sbb
sbb
mull
int
popa
out
sub
add
xchg
cmc
xor
push
mov
jl
test
xor
jge
loop
and
lods
add
out
es
inc
xor
jmp
stc
in
lods
lock
sub
pop
cmp
adc
pop
push
jl,pt
out
push
faddl
data16
mov
push
jo
imul
sub
lret
mov
jo
mov
bnd
aaa
jo
aad
cs
push
cmp
mov
sti
outsb
xor
inc
ficoml
jo
les
jl
push
fdivl
rcl
aad
mov
das
pop
fwait
lcall
dec
pop
and
jge
daa
andb
jo
loop
ss
aas
js
jo
inc
mov
adc
push
fwait
xor
jge
push
nop
loopne
orl
dec
mov
jle
aaa
aad
sub
and
jo
mov
test
insl
cmpsl
mov
adc
in
lock
xchg
inc
xlat
fsubrl
jb
aad
nop
enter
mov
into
mov
ja
rclb
mov
mov
pop
xlat
xchg
cmp
shld
sub
dec
cli
pushf
lea
insl
jne
test
mov
mov
sub
mov
pop
sub
pop
mov
mov
gs
mov
lcall
lret
and
sbb
pop
jo
in
and
lock
or
adc
mov
cmpsb
lock
dec
xor
jmp
outsb
mov
pop
add
in
cmpb
insb
inc
outsb
fdivp
cli
mov
notb
mov
int
add
shlb
mov
loope
popa
xor
aam
sub
scas
or
add
sub
sarl
outsb
dec
mov
jo
pop
insb
inc
arpl
mov
loopne
lock
add
cmpsl
lahf
xor
nop
adc
dec
jo
cmp
xlat
arpl
jo
cmp
inc
hlt
xchg
cmp
push
and
mov
or
jo
mov
xchg
pop
jo
js,pn
pop
cmp
jo
lret
insb
xor
cli
xchg
cwtl
mov
cmp
mov
jno
push
jae
les
jo
lea
ficomps
fsub
jo
sti
lret
pop
sbb
outsb
xorl
adc
outsl
cmc
dec
mov
xchg
add
push
outsb
lret
cld
jo
sbb
inc
insb
cmp
imul
mov
ret
xchg
jne
rol
divl
jo
testb
in
mov
push
outsl
insb
nop
test
cmp
jo
mov
jae
fwait
pop
test
popa
jmp
leave
cmp
push
dec
push
fwait
pop
xorl
adc
xor
xchg
jo
test
xor
jo
xchg
aad
dec
fisubrs
stos
push
call
mov
dec
jo
cmp
notb
sub
icebp
cli
and
lock
test
jb
xor
sbb
icebp
cmpsl
mov
mov
and
push
insb
repnz
dec
cmp
test
std
lock
lret
jae
es
loope
jo
bound
inc
cmc
dec
cmp
and
jns
cld
lds
repz
sbb
mov
pop
nop
mov
inc
dec
push
insl
ret
jne
std
divw
rorl
je
jns
mov
mov
loope
mov
mov
pushf
enter
dec
pop
xchg
outsl
cltd
roll
cli
rcll
jo
mov
sub
jge
cld
fnstenv
mov
dec
or
jo
pushf
testl
scas
loope
jo
out
inc
push
iret
jo
mov
jl
xchg
push
jo
mov
dec
scas
jge
bound
mov
jo
inc
outsb
adc
aad
gs
es
dec
nop
jecxz
bound
jo
outsl
andb
jle
test
popf
enter
mov
dec
int3
cmpsl
into
xor
fisubs
addr16
ja
push
or
pop
jo
roll
movsl
add
jo
and
dec
mov
mov
loop
mov
arpl
push
xor
push
cmp
push
pop
cmp
mov
mov
jg
sbb
arpl
fistl
xor
xchg
jle
add
cli
imul
jl
cwtl
or
lahf
je
outsl
in
add
ds
or
push
jp
mov
test
dec
sbb
outsb
and
hlt
xor
push
pushf
xor
test
ficoml
mov
pop
cmp
xchg
shrb
loopne
sub
inc
mov
and
mov
xor
and
sub
pushf
jns
dec
cmpsb
inc
mov
mov
push
clc
jmp
or
outsb
sbb
mov
addr16
mov
jo
mov
imul
cmpsl
xchg
lods
insl
lods
add
cmp
adc
sub
leave
fnstenv
jmp
cmp
aad
aaa
push
in
cmc
cwtl
jecxz
jle
insl
dec
test
lret
xchg
xchg
mov
sbb
outsl
add
insl
mov
in
ret
lea
lock
cmp
outsb
fistps
out
shll
xchg
cltd
mov
imul
xchg
jo
addl
and
data16
movups
xor
nop
nop
stc
push
outsb
lcall
in
dec
mov
jae
inc
vmovaps
hlt
loopne
stos
add
add
insb
lods
or
or
mov
cli
pop
mov
jo
les
jo
movsb
orl
jge
ret
and
xchg
pop
fimull
add
push
lods
dec
ret
clc
jo
adc
cli
mov
jo
mov
pop
out
push
xchg
mov
divl
clc
add
mov
fnstenv
mov
ljmp
jo
lret
cmp
and
dec
mov
inc
fisubs
scas
push
add
rorb
aad
mov
js
cld
push
mov
or
add
rorb
push
pop
push
mov
insb
test
add
mov
fdivrl
scas
ret
pop
mov
push
pop
push
sahf
push
push
mov
cmp
xor
sub
adc
ja
push
pop
add
imul
out
insl
or
sbb
pop
mov
cwtl
movl
inc
push
repnz
xor
inc
lock
pusha
cmp
pop
sub
test
sti
mov
insl
sub
mov
pop
pop
lods
xchg
mov
scas
arpl
push
sub
sti
fnstsw
mov
loopne
push
mov
xor
mov
in
sbb
fmuls
xor
test
push
nop
mov
push
out
xchg
jo
mov
adc
rcrb
je
pushf
and
fcmovu
dec
insl
mov
cmp
xchg
insl
pop
pop
push
xor
test
inc
xor
outsl
lock
aam
jo
xchg
mov
aad
jle
jo
out
adc
or
jno,pt
and
in
lock
pop
aad
insl
arpl
or
mov
filds
dec
outsb
adc
cmp
cmp
dec
jo
push
dec
sbb
jbe
std
sub
mov
jo
out
sub
pop
mov
xor
ud2
pushf
xchg
jo
cwtl
ret
shrb
bnd
pop
scas
leave
pop
dec
add
jo
fldcw
inc
sbb
fcompl
jnp
icebp
jo
pop
push
cltd
inc
aad
hlt
outsb
inc
movsb
fstpt
cmp
add
cmp
jo
or
jge
pop
jo
out
lret
adc
fnstenv
add
sub
dec
inc
cmpsl
inc
dec
mov
push
repz
xlat
xchg
jno
repz
adc
popf
jae
stc
or
mov
sarb
sarl
push
sbb
jmp
jne
xor
mov
out
mov
xchg
jne
mov
cwtl
neg
pshufw
sbb
xchg
jl
cld
add
ja
out
das
pop
pusha
cmp
and
push
jo
inc
push
out
inc
fldcw
cmp
popf
cmpsl
adc
es
dec
fcmove
or
dec
cltd
cmp
je
popa
jns
sets
dec
cmp
mov
inc
and
push
jo
add
jp
lock
lret
enter
in
fmuls
jb
or
and
call
int
jge
add
mov
mov
adc
ja
adc
jo
mov
mov
or
cmpsl
loopne
cmp
aad
cmp
dec
jmp
add
xchg
pusha
aas
rorb
dec
enter
cmpb
pop
aad
jo
jne
ljmp
jo
fstps
inc
sar
shl
mov
pop
cld
push
push
jo
xchg
jl
stc
out
xor
mov
jo
or
mov
xchg
sbb
addr16
sbb
jbe
jo
leave
aad
jns
clc
jae
push
cmpsb
or
lret
push
sbb
das
add
jo
daa
popa
mov
jb
aas
fnsave
negl
test
test
lock
pop
in
into
pop
stos
aam
addr16
mov
push
mov
ljmp
mov
dec
pop
movsl
lock
icebp
scas
ja
jne
dec
inc
fnstenv
les
jo
cli
mov
divl
test
push
fbld
pushf
sub
pop
or
sbbb
sub
mov
aaa
arpl
xchg
jo
insl
cmpsl
jbe
xchg
push
sub
fisttpll
push
dec
pop
push
mov
adc
cmp
roll
inc
jo
jl
lcall
out
dec
rcll
movsb
outsb
cmp
push
insl
shll
adc
or
add
pop
mov
jo
xor
fsubr
ja
inc
jg
push
mov
jno
cmp
cmp
lock
loopne
jl
loopne
je
divb
es
int3
fildll
je
jmp
ja
mov
xchg
rolb
popa
out
mov
mov
roll
jnp
dec
lods
xchg
sub
rclb
or
dec
mov
mov
cmp
jo
xor
jp
adc
call
lock
cmpsb
sub
pop
and
popa
jo
push
jo
sbb
xchg
push
divl
fisubs
rorb
cmp
push
xor
loopne
jo
fdivl
pushf
xlat
jo
jne
adc
insl
adc
and
scas
pop
loope
les
cmc
das
sub
jo
xchg
lea
or
jo
lret
push
jmp
fld1
dec
jo
mov
call
lret
lock
ret
jo
jns
and
rcll
or
push
aad
es
jne
in
push
inc
dec
lock
mov
int3
sbb
adc
cmp
pop
xor
movsl
mov
lret
mov
lock
insl
lcall
jecxz
cmp
mov
jo
std
push
subl
sub
or
sub
cmpsb
mov
inc
cmp
xor
push
or
outsb
jno
lret
mov
shlb
test
fidivs
adc
jg
xor
lahf
call
xchg
mov
jo
adc
inc
aad
ljmp
or
mov
add
mov
loopne
push
mov
arpl
xor
push
sub
lock
jg
insl
jno
jo
jae
or
push
jp
push
push
jo
or
aam
add
cmpsl
in
pop
push
jo
dec
dec
mov
mov
loop
sub
popa
jo
fst
imul
les
pop
lret
pop
fs
in
cmp
outsb
aam
sbb
rcrl
sub
jo
pop
xchg
bt
shlb
ja
xchg
xchg
icebp
test
popf
jne
pop
mov
or
jo
and
push
xchg
arpl
pop
out
scas
jb
cmp
and
push
pop
sbb
and
test
xchg
mov
insb
mov
pop
mov
pushf
lea
dec
aas
jb
mov
inc
icebp
pusha
mov
idiv
aaa
into
flds
jle
jo
shll
pop
inc
insl
rorb
std
imul
mov
imul
xorl
mov
aas
mov
dec
fidivs
lds
xor
jo
push
mov
and
pop
mov
sub
lret
loope
shl
sbb
jo
lock
cld
pop
dec
lcall
push
jl
jo,pt
div
aad
clc
cmp
into
cmp
sbb
adc
loopne
ds
and
test
adc
or
shlb
data16
mov
inc
dec
mov
jmp
cs
loop
test
scas
mov
decl
cli
cmp
inc
aad
inc
daa
dec
sahf
xchg
aas
movsb
cli
and
ja
jp
push
xorl
pop
aam
ja
and
push
sub
jmp
mov
leave
adcb
cmp
mov
sti
inc
push
stos
lock
mov
out
jl
or
adc
xchg
stc
cmp
and
push
arpl
rcr
test
aad
add
rclb
fnstenv
sbb
or
dec
inc
adc
lcall
dec
mov
cmp
jns
jo
stos
mul
cs
mov
in
cli
inc
and
pop
push
push
jbe
add
sub
int3
test
aad
xchg
insb
jno
mov
testl
lods
pop
dec
xchg
inc
lock
add
xor
xchg
inc
jbe
mov
outsb
mov
pushf
push
in
enter
daa
outsb
es
dec
xchg
xor
ja
sub
lods
insl
loopne
sbb
sbb
jp
sub
shl
push
shrb
xor
shll
sbb
outsb
mov
xchg
add
ja
xor
fisttpl
cmpsl
jo
xchg
sti
rcrb
add
loopne
jo
pop
xchg
test
inc
mov
or
and
cmp
pop
xchg
cmc
pop
pop
xor
mov
dec
jo
xchg
aad
arpl
jo
inc
mov
sub
add
ret
clc
xchg
mov
push
jo
cs
sub
mov
cmc
mov
je
sbb
sub
hlt
pop
pop
fiadds
push
mov
mov
leave
cld
push
jno
dec
mov
cmp
add
mov
pop
dec
jae
loope
std
xor
shlb
jo
movb
inc
out
sar
stos
jo
pop
xlat
and
adc
jge
outsb
xchg
mov
add
jnp
out
and
mov
jne
jo
and
frndint
inc
loop
outsb
daa
and
lods
sbb
mov
icebp
or
cmp
mov
stos
jae
jb
jmp
cwtl
bnd
scas
mov
decl
fdivs
cmp
rcll
mov
mov
adcl
jo
bound
pop
iret
mov
lods
outsb
push
aad
data16
xchg
andb
mov
aaa
call
jo
jb
loop
movd
jo
cmp
dec
aad
stos
mov
cmp
ja
inc
jo
adcl
push
mov
flds
cmp
stos
jo
sub
sbb
ja
shr
sub
jp
jb
sub
push
nop
test
push
adcb
xor
fwait
xlat
insb
or
push
cli
xor
rcrl
lret
pop
fs
mov
fistpl
push
cmpsl
push
cmp
mov
aas
jo
xor
jb
jo
loope
dec
enter
insl
ret
pusha
mov
lret
sbb
xor
fstpt
push
lock
lcall
push
and
mov
into
jo
sub
jp
cmp
jo
mov
xchg
cld
xchg
inc
dec
lods
jae
fs
inc
and
dec
stos
and
pop
jo
push
mov
cmp
sbb
dec
sbb
pop
jo
jnp
fwait
shll
je
mov
decb
insb
decl
mov
jmp
jno
jne
les
pushf
mov
popa
inc
cs
mov
enter
mov
stos
push
call
addr16
inc
jne
mov
jo
stos
gs
loopne
popf
insl
xor
jmp
lcall
aad
popa
xchg
subl
enter
jo
fadds
adc
jo
cwtl
jecxz
ficoms
outsb
dec
aam
imul
pop
jno
or
fld
xchg
jo
test
inc
mov
jnp
dec
adc
ds
mov
xor
mov
out
mov
adc
jo
pop
movsb
push
stos
adc
dec
add
add
add
mov
loop
push
jo
mov
inc
out
mov
fcmovne
jno
jecxz
jo,pn
adc
lret
adc
or
ljmp
cmp
divb
mov
aas
test
enter
xchg
mov
xchg
clc
jo
test
push
cmc
push
add
jo
movsl
dec
mov
xlat
cmp
outsb
leave
xor
in
push
lock
imulb
test
xchg
ja,pn
das
iret
pop
xor
jo
cwtl
adc
flds
jle
add
mov
pop
mov
aad
and
jnp
rcrb
mov
outsl
push
adc
filds
mov
push
lock
lcall
insb
fcompl
jl
scas
mov
scas
or
jne
xorl
jo
int
adc
loope
les
stos
in
data16
push
cltd
test
test
dec
pop
and
fcoml
pop
cs
dec
lock
jb
cmp
pshufw
sub
sar
in
lahf
mov
int3
imul
ljmp
push
jo
and
lea
pop
jle
rolb
rol
jb
xchg
cmc
sti
aad
push
imul
neg
jle
jo
lret
add
out
mov
aam
lods
dec
add
pop
push
sub
or
xchg
cli
mov
fstpt
cmp
pop
cltd
fwait
std
jb
je
imul
lea
movsb
ja
mov
add
scas
fidivs
xchg
test
push
loope
mov
sbb
lock
roll
dec
jne
imul
mov
insb
fs
rol
roll
jo
out
mov
or
popf
jo
ret
pop
inc
jecxz
fsqrt
jo
jmp
in
add
into
sbb
lods
cmpsl
aad
mov
xor
push
jnp
rcl
inc
add
lock
jp
inc
and
jge
rorb
mov
cmc
mov
or
mov
dec
cmp
jo
lret
push
insl
lods
mov
dec
scas
dec
cmp
and
mov
jo
jns
xor
pusha
or
xchg
insl
test
cs
js
je
adc
xchg
out
xor
in
outsl
shl
xlat
mov
or
jmp
cmp
cwtl
jl
jp
mov
daa
loop
jb
out
jo
fstps
mull
and
aaa
mov
movsb
mov
iret
movsl
inc
sti
cli
adc
fisubrs
push
xor
mov
or
mov
jo
sbb
xchg
mov
and
aad
add
add
add
fwait
adc
jo
ds
aad
cmp
es
push
pop
xchg
cwtl
mov
cmpsb
sar
adc
je
shl
or
push
cmc
jo
pop
mov
add
xchg
dec
jo
inc
push
mov
inc
mov
jo
mov
int
jo
outsb
push
fwait
sbb
mov
ret
jp
out
enter
jne
pop
xlat
aam
push
dec
das
je
push
insl
sbb
arpl
fsubrl
aas
push
in
xchg
pop
jne
inc
mov
cld
cwtl
inc
lret
pop
inc
push
loopne
ja
jmp
addr16
jo
jp
cmc
xchg
repnz
adc
xchg
xchg
sbb
jo
popf
mov
mov
xchg
mov
lcall
iret
sbb
ja
je
repz
add
pop
movl
sub
xor
jo
insl
test
in
jnp
jo
data16
ret
jmp
push
test
pop
dec
out
mov
dec
mov
cwtl
pop
mov
push
std
jo
dec
add
repz
insl
dec
jo
fcmovnbe
inc
push
fwait
push
stc
je
ret
iret
mov
dec
inc
sub
lds
mov
jo
jg
sbb
jns
push
test
xor
sub
dec
inc
adc
daa
test
imul
mov
lret
fsts
push
std
xchg
stos
ja
and
jno
subl
mov
jne
mov
fstpt
jo
rolb
aad
enter
dec
and
int
leave
jo
packuswb
xor
movsb
pop
dec
sub
mov
in
loopne
adcl
mov
pop
cmp
sub
lods
enter
adc
ss
jo
adc
push
xchg
jo
mov
inc
aaa
push
daa
pushf
or
pop
and
jb
mov
push
pusha
dec
and
jle
insl
out
hlt
ret
adc
or
ds
insb
ss
fwait
test
sbb
outsb
pop
out
or
cs
jo
cmc
aaa
mov
fdivrl
pop
imul
jo
ret
push
iret
xchg
push
test
inc
mov
or
pop
addb
ds
btc
divb
pop
jo
cmp
mov
or
pop
add
lods
fistl
dec
pop
testb
pusha
add
mov
mov
cltd
aad
leave
jl
push
test
push
rcrl
into
cs
mov
test
lds
pusha
shll
xchg
xchg
adc
xchg
sbb
dec
jo
adc
lret
aas
push
cmp
enter
xor
add
jmp
push
pop
fbld
shrb
dec
fcoml
cmp
es
jp
xor
enter
jo
icebp
jmp
fstps
sub
je
xchg
std
push
or
sub
lea
cs
cmp
jo
adc
pop
xor
stos
jle
nop
pop
ja
ret
or
dec
xchg
xor
arpl
ss
dec
pop
fs
jo
adc
shll
jmp
dec
insl
bnd
cltd
mov
xchg
inc
jo
shlb
mov
int
jo
dec
and
fistpl
mov
inc
cwtl
sbb
mov
adc
pop
mov
pop
add
mov
sti
hlt
out
mov
jo
xchg
leave
add
adc
dec
test
cmp
movsl
shll
pop
lock
popf
sub
mov
sub
push
sar
push
inc
cwtl
sbb
sub
sti
mov
pop
cli
push
repnz
clc
mov
mov
dec
xlat
sub
cli
xchg
ret
loop
mov
lods
jo
out
fsubrl
cmp
divb
jo
mov
cmp
push
sub
mov
addr16
adc
push
fnstenv
mov
nop
lret
push
jg
insl
mov
or
sbb
ja
out
in
les
out
insb
outsb
int3
dec
ss
xchg
xor
adc
jo
xchg
test
sbb
pusha
fcmovnb
dec
mov
jae
ret
in
mov
dec
or
adc
sbbw
dec
arpl
ss
call
test
cmpsb
loopne
xor
stos
jo
into
test
dec
jp
sub
push
or
adcl
xchg
fcom
mov
dec
mov
fwait
xchg
or
pop
jo
dec
fs
jae
fsubrs
movsl
xor
mov
mov
divl
mov
xchg
out
jo
mov
test
jo
fcompl
pusha
ja
bound
jo
and
or
test
mulb
add
jae,pt
xor
jne
clc
mov
enter
pop
adc
mov
ja
mov
mov
pusha
pop
aad
jle
lea
in
repz
jo
pop
xchg
fxtract
jbe
jo
inc
pop
les
jmp
aad
add
lock
shll
jo
std
fucomi
push
das
test
jo
into
cmp
scas
jno
xorl
subb
call
mov
mov
test
orl
sarl
add
jo
lods
add
jo
imul
fwait
jmp
fnop
cmp
jno
cmp
mov
jne
xchg
insl
sub
pop
int
dec
jo
mov
xor
fs
mov
ret
xor
outsb
xor
xor
insb
adc
push
xchg
es
call
in
jo
xor
pusha
dec
enter
fstpt
stos
inc
jae
je
mov
pop
movsb
lock
push
das
stc
ja
ret
int
xor
xchg
popf
jo
test
or
jo
jns
jne
add
aad
add
out
mov
outsb
lock
dec
std
mov
je
push
es
xchg
jo
adc
bound
sbbl
lea
or
into
fsubrl
jo
gs
pop
das
mov
jo
divb
cmp
sahf
call
outsb
and
xchg
pop
dec
jle
insl
adc
loop
mov
jecxz
aas
jp
daa
xor
and
xor
inc
test
arpl
add
mov
es
shll
mov
push
fwait
pop
push
mov
clc
sti
data16
rorl
nop
pop
adc
sbbl
push
shll
shrb
aaa
push
mov
mov
mov
or
stos
add
mov
jae
fistl
rclb
inc
movsl
cmpsl
shlb
lahf
jo
fstps
add
pushf
xchg
and
mov
pop
cmp
mov
dec
imul
fstl
lahf
cmp
jae
mov
push
inc
jb
stc
dec
jnp
lcall
test
rorl
adc
lahf
dec
adc
sub
push
push
lret
jo
mov
push
jo
dec
xchg
adc
jo
fcmovb
ja
mov
sbb
inc
cmc
icebp
mov
mov
fisttps
ja
xchg
les
pop
xor
pusha
push
jge
lock
pop
dec
mov
or
mov
add
xchg
out
cmpsl
aad
insl
ja
pop
sbb
lcall
or
shll
out
outsb
pop
dec
and
imulb
daa
popf
out
xor
lcall
jo
fnsave
inc
jne
jo
sti
cmp
cltd
pusha
les
sub
cld
xorl
mov
adcb
mov
insl
icebp
dec
bound
gs
mov
xor
fistl
ljmp
test
leave
jnp
xor
cwtl
in
jo
pushf
lock
fnstenv
mov
cmp
fs
mov
add
or
cmc
mov
jl
jecxz
fisubrs
xor
jae
out
pop
adc
mov
lea
xchg
rorb
xchg
out
insb
dec
mov
cmc
adc
int3
push
jo
inc
outsb
inc
icebp
mov
cli
outsl
push
xchg
push
jne
jo
sarl
fists
jae
jns
movsb
jnp
mov
xor
scas
mov
push
push
dec
xor
xchg
insl
not
test
test
xor
fldenv
jl
leave
pushf
into
jo
pop
out
mov
nop
int
aas
pop
mov
nop
stos
idivb
sub
insl
xor
inc
shlb
nop
sub
data16
fdivl
jo
sub
adc
clc
fldln2
adc
inc
add
cmpsl
add
pop
ss
pop
xchg
int
jo
lea
xchg
jo
mov
das
mov
mov
dec
mov
dec
mov
mov
inc
push
jo
add
push
aad
jo
sti
sub
dec
fs
cmc
add
out
insl
mov
in
or
mov
out
jno
gs
mov
dec
leave
jbe
rcrl
sub
pop
jo
or
push
pop
cmp
mov
shll
sub
add
ja
push
mov
jne
cmpsb
fisubrs
sub
jne
pop
adc
ss
clc
fcmovbe
jmp
jg
dec
xchg
mov
pop
push
lock
pop
mov
jb
pop
xorb
push
cmp
rcr
jo
sti
lahf
cmp
jns
std
cmp
cs
pop
mov
xchg
int
in
fdivl
jnp
xor
in
jno
pop
data16
test
adc
push
mov
and
xor
xchg
or
jo
push
iret
jp
push
aad
jae
add
mov
jo
mov
jp
and
roll
cmp
mov
add
adc
pop
lods
and
repz
mov
mov
or
leave
push
mov
cs
lret
xorb
pop
hlt
fcomi
lcall
seta
or
shrb
cmp
mov
imul
into
adc
ja
add
or
xchg
lea
jo
stos
jg
cmp
inc
mov
int
cmpsl
dec
jmp
std
je
rorb
pop
shll
jo
leave
jmp
subb
enter
push
dec
inc
inc
lock
fdivl
sbb
jo
test
cltd
dec
jo
xor
push
mov
jo
movsb
outsb
mov
jo
mov
dec
jnp
arpl
cld
daa
in
pop
cld
adc
inc
sbb
sahf
mov
shlb
inc
dec
lock
addl
dec
jo
pop
lret
in
adc
mov
xor
jmp
or
pop
xchg
and
or
add
push
and
xor
in
jle
insl
idiv
sbb
sbb
cwtl
xchg
enter
push
leave
mov
mov
sbb
and
out
aam
jl
js
fldcw
jno
outsl
nop
push
mov
rorb
loopne
test
jo
inc
rcrl
xlat
insl
or
div
addr16
xor
jecxz
lock
insb
mov
push
iret
push
jo
aas
outsb
push
pop
dec
push
lahf
mov
xchg
lods
int3
mov
adc
movsl
inc
loopne
xchg
push
sbb
xor
jnp
sub
sub
jbe
imul
jo
gs
cmp
and
jne
jo
xchg
lret
ja
je
test
pop
jg
dec
or
in
or
jecxz
aas
or
jne
subb
movsl
and
lahf
lret
jo
cmp
in
push
jo
jbe
mov
arpl
imul
daa
lock
aaa
jo
mov
fstpl
scas
jo
in
adc
jo
mov
fmull
sub
in
pusha
popa
push
stc
jl
mov
mov
adc
scas
push
mov
out
aam
std
jo
nop
fnsave
cli
cmp
xchg
in
out
jecxz,pn
jo
jnp
out
pop
es
aad
sub
shrb
or
jae
lea
jo
mov
lret
sarl
sub
test
pusha
lahf
sbb
lret
xchg
lock
mov
movsb
jge
or
shrb
test
xchg
mov
daa
inc
pop
xor
pusha
xchg
sub
mov
cli
lcall
xor
jo
dec
iret
lds
scas
pushf
mov
adc
cmp
data16
mov
mov
pop
sub
out
enter
push
mov
dec
in
pop
xchg
mov
arpl
or
call
sub
fnstenv
pop
and
mov
addb
cmp
pop
pop
add
jo
aam
pop
xchg
jne
fdivl
mov
cltd
adc
jo
fs
data16
or
jo
push
setnp
jnp
divb
pop
inc
and
je
iret
sarb
push
mov
sbb
ret
lcall
dec
mov
lock
cmp
pop
aad
jae,pn
jg
or
xlat
lahf
jo
inc
jnp
sbb
mov
dec
xchg
pop
into
push
mov
sahf
aad
mov
fwait
lea
fildl
and
push
ficoms
test
aad
push
loopne
jne
cmp
mov
pusha
cmc
add
jp
lds
enter
push
jns
pop
mov
ja
and
rcrb
arpl
or
jne
jle
jg
xor
xchg
mov
jo
scas
outsb
rcll
popf
jo
cmp
or
cltd
xor
jo
and
and
pop
into
test
jo
leave
fnsave
pop
lock
rclb
stos
loopne
jo
inc
leave
mov
insb
cmpsb
clc
mov
cmc
lcall
ljmp
mov
in
jo
sahf
dec
shrb
ret
mov
pop
lahf
in
mov
pop
jmp
pop
pop
sbb
jg
aam
loope
stos
jo
xchg
dec
xlat
flds
push
push
outsb
pop
xor
add
into
fistl
pop
mov
push
inc
mov
mov
imul
jg
aad
adc
ret
pop
stos
lret
push
shll
leave
or
stc
lret
call
mov
nop/reserved
and
imul
f2xm1
jle
lea
push
pop
test
lret
lahf
mov
adc
aam
cmp
inc
jo
xchg
ds
xchg
pop
jo
push
inc
mov
ror
sahf
pop
jo
into
out
xchg
lock
jo
xor
jg
aad
into
mov
push
push
sbb
mov
sub
jo
je
mov
jg
add
push
test
ret
push
push
mov
daa
out
pop
dec
pushf
clc
lock
mov
imul
push
jo
test
fldt
cmp
pop
mov
lret
mov
in
xchg
stos
xchg
cmp
jo
ret
daa
fistpll
jo
dec
cld
adc
shl
js
xor
dec
icebp
jne
repz
stc
jo
pop
sar
test
in
inc
rcr
xchg
into
jo
sar
xchg
lods
mov
insb
mov
aaa
cmp
cmp
fdivl
and
xchg
icebp
push
pusha
xor
stc
xor
inc
rol
mov
mov
mov
fsts
dec
nop
fildl
pop
jo
add
cmp
test
cmp
call
jge
xchg
popa
sub
sub
or
mov
incb
test
xchg
enter
nop
and
mov
mov
stos
push
mov
lock
jae
and
pop
in
rclb
mov
xchg
sbb
test
dec
or
inc
push
cmp
cmp
hlt
push
adc
inc
xchg
jo
rcl
jmp
pop
bswap
jo
xor
jnp
faddl
and
data16
inc
imul
shl
pop
lret
std
mov
nop
pop
aad
jo
add
add
cmc
leave
cmpsb
cld
jo
mov
bnd
inc
stos
pop
push
insb
mov
sbb
mov
cmpl
rorb
lock
outsb
adc
clc
push
aas
nop
sbb
jo
hlt
jmp
xchg
mov
fists
imul
xlat
imulb
aad
inc
stos
pop
dec
fnstcw
xchg
push
jmp
arpl
add
dec
inc
adc
xor
adc
jo
inc
mov
cmp
push
call
aam
or
pop
jle
push
pop
enter
lcall
aad
test
mov
sbb
fwait
cld
pop
cs
mov
inc
scas
cmp
outsb
push
adc
sarl
push
sbb
xorl
hlt
cmp
jo
mov
aad
xchg
jae
les
xlat
cmp
pop
xor
or
addr16
adc
mov
mov
popf
pop
filds
xlat
mov
xchg
jae
xor
inc
and
cmpsl
mov
das
inc
fistpl
jo
push
movsb
fdivl
aad
jo
jnp
add
rcrl
mov
movsl
or
jne
jg
cmp
jmp
jo
mov
mov
and
aad
daa
jnp
mov
adcl
es
push
shll
mov
jo
lock
cmp
add
jo
xchg
rclb
test
cmp
sbb
and
fwait
xorl
cpuid
das
and
jo
cmpsl
cmp
aad
shlb
lock
inc
dec
mov
lods
or
clc
push
fisubrs
cmp
das
and
mov
jne
mov
add
jge
sbb
mov
jmp
nop
inc
movsb
xchg
jne
loope
loopne
jg
mov
push
out
add
test
or
imul
add
ret
pop
shrb
stos
js
aam
adc
push
push
pop
rcr
iret
popa
push
jle
add
fstps
jnp
mov
dec
icebp
hlt
lock
adc
mov
aaa
jmp
push
movb
inc
adc
fwait
jo
aam
iret
andb
shll
lea
push
stos
loopne
sub
jo
cmc
insl
cli
scas
push
add
sbb
imul
loopne
xchg
push
pop
jo
mov
pushf
ljmp
cmp
dec
clc
jecxz
in
rorl
adcb
rcll
shlb
cmp
push
mov
lock
int
icebp
fistpl
xor
stos
jbe
lds
cmp
jne
sti
add
jo
mov
addr16
jo
movsl
aad
stos
pop
sahf
pop
jo
mov
mov
insl
push
aaa
xchg
sub
jns
mov
fstpt
inc
aad
dec
mov
jbe
cmp
in
jo
loopne
mov
cmp
dec
jo
xchg
test
jo
scas
fldenv
xchg
jg
insl
mov
les
fs
in
or
push
jo
jecxz
cmpl
lea
sbb
adc
jo
ss
fstpt
mov
cwtl
jne
int
add
cmc
ja
sub
je
jecxz
imul
mov
in
xchg
jbe
xchg
js
ljmp
das
push
jmp
jo
aad
sbb
jo
arpl
scas
pop
ret
pop
mov
jo
call
aad
jo
aas
out
enter
leave
jo
mov
mov
pop
sbb
mov
imul
jo
inc
rcrb
or
xchg
iret
outsb
lret
push
and
pop
lods
sbb
fbstp
dec
jo
movsl
in
popf
cld
outsb
mov
jo
dec
or
ss
jo
cmc
fidivl
jno
sbb
js
push
or
in
mov
pop
add
jno
pop
ret
push
push
mov
mov
pop
jo
shll
cld
sub
inc
mov
cmpsl
pop
push
jo
sub
push
jbe
and
and
test
jl
jle
sbb
loope
hlt
lock
les
jo
jl
inc
mov
jge
loopne
sbb
push
dec
shl
lock
cmp
mov
out
add
ja
fsubl
mov
xlat
and
rorl
jo
sbb
rcl
movsl
dec
data16
aam
mov
fnstenv
adc
adc
jo
sub
xlat
jp
sbb
jo
jl
fdivrs
mov
lods
pop
mov
ficoms
xor
stos
lock
jecxz
pushf
test
jge
enter
aad
mov
add
je
sub
in
lock
out
dec
lahf
inc
ss
jbe
adc
xor
xor
nop
dec
jo
fimuls
jb
push
insl
ljmp
add
out
inc
stos
xchg
adc
loop
mov
fucomi
xchg
add
xor
aad
xor
nop
pop
mov
sbb
movsl
adc
mov
dec
jo
scas
mov
int
jo
push
cltd
lahf
inc
aad
cli
je
jg
shl
pop
aas
pop
add
xchg
ret
xor
test
and
popa
mov
inc
xchg
xor
mov
xchg
lretw
push
inc
mull
jo
movsl
mov
divb
aad
lret
mov
jge
inc
test
jno
mov
jo
inc
inc
mov
popa
ja
push
lcall
outsb
jp
je
push
mov
aas
test
shr
xor
jl
jo
lock
and
push
jo
mov
xor
dec
push
rcl
icebp
push
jo
xor
pop
das
cmc
call
xchg
lea
cs
rcl
push
and
icebp
adc
fisttpll
push
ret
inc
test
dec
pop
mov
je,pt
push
fwait
push
inc
aaa
xor
pop
dec
loopne
lock
cwtl
mov
ja
jnp
test
rclb
mov
inc
inc
add
jns
lcall
je
imulb
add
pushf
sbb
adc
into
jo
push
fldt
jo
pop
lea
jo
aad
inc
or
pop
xor
mov
out
jo
fisttpl
mov
outsb
push
pop
mov
jnp
lock
enter
pop
out
xor
add
xlat
cmpsb
lcall
ljmp
jb
repz
mov
xlat
insl
push
pop
or
fs
je
jno
push
jl
push
and
adc
mov
pushf
sbb
dec
dec
ja
xchg
sbb
ds
mov
pusha
jl
shlb
sub
jge
pop
sbb
cmpsb
mov
push
in
jo
lahf
jmp
arpl
mov
sbb
test
mov
push
jo
aad
aaa
inc
pop
xor
jae
cmp
jg
and
pop
lods
arpl
pop
mov
sarb
int
mov
popa
cltd
mov
sarb
xor
jecxz
mov
pop
pop
adc
or
jae
and
sbb
push
stc
push
popa
mov
inc
mov
jo
das
outsl
lcall
push
aas
mov
inc
insl
mov
mov
push
ss
mov
sbb
adc
sub
insl
cmp
inc
cltd
imul
xchg
add
fldcw
aam
imul
jo
data16
mov
inc
addb
xchg
cmc
lcall
cwtl
jecxz
dec
je
push
or
inc
fldenv
push
cmp
dec
pop
adc
pushf
add
jae
ds
sub
jl
inc
pop
outsl
pop
add
insl
sbb
cmpxchg
gs
cmpl
push
fnsave
xchg
push
aaa
cmp
dec
xchg
jno
jns
mul
scas
jo
daa
adc
jo
seto
loopne
or
sti
mov
jnp
int3
sbb
imul
lods
jae
cltd
push
test
and
icebp
je
ficoml
inc
add
and
jnp
in
cmpsb
mov
push
xchg
xchg
sub
mov
clc
outsl
jo
lahf
lds
jo
xchg
mov
es
jbe
adc
insl
adc
out
jo
test
fwait
pop
add
int
adc
sar
fldcw
xor
inc
xor
sbb
adcl
mov
sbb
push
xlat
std
jo
lahf
mov
jmp
pop
push
rcr
imul
fldcw
or
adc
repnz
push
jo
sbb
shll
mov
xchg
adc
jnp
test
aad
outsb
jo
gs
lds
cmpsl
lods
or
dec
outsl
loope
jo
dec
inc
pop
push
leave
pop
dec
loopne
cmc
jb
push
jo
or
adc
xor
fnstcw
dec
cmp
pop
inc
lock
jo
lahf
aad
adc
xchg
and
inc
out
nop
xchg
in
outsb
insl
sti
mov
shlb
jp
fadd
ss
push
jno
mov
add
mov
xchg
dec
jno
cwtl
pop
pop
dec
mov
iret
adc
ret
rcll
mov
jo
outsb
or
leave
out
in
rcrl
xor
jo
xchg
mov
insb
jo
add
pop
lds
cmp
pop
fdivl
outsl
cmp
jo
mov
repz
fimuls
sub
jge
mov
fdivl
cmp
jo
xchg
fcmovnu
xor
adc
sbb
jnp
xchg
outsb
xchg
xor
jo
xor
xchg
or
jo
mov
dec
or
in
rcr
pop
cmp
jge
push
out
flds
xchg
out
xor
jae
jbe
rcrb
mov
testb
aad
and
xchg
pop
adc
push
xchg
xchg
ret
cmp
test
adc
mov
gs
aas
lock
shrb
xchg
leave
in
lock
push
in
jp
int
fnsave
test
pop
cmp
fs
push
jge
push
mov
inc
jle
jo
lcall
jo
push
push
cli
jo
fadds
call
insl
scas
fcompl
jmp
lock
int
dec
lods
push
add
mov
cld
jo
mov
pop
shlb
push
xlat
mov
rol
out
jno
loope
jo
test
push
shll
sbb
mov
sub
mov
sub
or
mov
cli
mov
mov
insl
push
inc
xchg
push
dec
imul
xchg
je
mov
adc
das
cmpsb
mov
test
lock
and
jnp
outsb
cmp
xor
jle
iret
ja
sub
cmp
sbb
dec
fistpl
test
imul
jo
cmpsl
dec
and
aad
jo
jnp
push
mov
cli
rol
xorl
std
xchg
lcall
roll
mov
jo
sub
xor
mov
xchg
cwtl
and
cmpsl
inc
jo
sbb
cmp
popw
dec
sbb
lcall
out
ficomps
cmpb
repnz
mov
xchg
inc
jecxz
push
jo
and
jmp
jo
insl
je
scas
sbb
jo
mov
pop
pop
jo
les
cs
insb
divb
pop
aas
mov
push
int
add
enter
shr
xchg
test
mov
fs
mov
jo
mov
mov
pop
aad
cmpsb
jo
sbb
outsb
jle
jae
movsb
inc
jb
jo
sub
adc
out
pshufw
ljmp
jbe
movl
repnz
gs
lret
push
xorl
mov
mov
jno
jo
fstps
dec
adc
pop
jo
jecxz
arpl
push
popf
aad
test
je
jge
outsb
xlat
in
xchg
cmc
push
xor
nop
jo
sbb
adc
xor
popf
mov
fldl
jo
lods
jbe
push
dec
lea
jo
aas
flds
cmpl
shll
dec
pop
cmp
sbb
or
stos
std
jae
lock
gs
dec
xor
jo
pop
fstpl
jo
mov
inc
mov
cmpl
inc
imul
jo
xor
push
add
cmpsb
jb
loop
jb
pushf
out
in
fwait
jo
scas
mov
add
pop
cmp
xor
mov
mov
xchg
je
aaa
jo
xor
mov
mov
sub
arpl
cmp
push
pop
xor
add
repz
xchg
dec
shr
lock
jp
fdivl
popa
xchg
insb
push
data16
cmpb
fidivl
mov
push
loopne
dec
inc
jo
js
jge
mov
sbb
jo
test
cld
popf
sbb
dec
in
push
imul
jo
push
or
xor
add
out
in
xchg
mov
fistl
insl
imul
movsl
ret
pushf
mov
jle
jo
push
aam
mov
xchg
xor
inc
lahf
das
pop
push
add
jo
insl
data16
movsb
je
cli
sbb
dec
jmp
jns
mov
adc
jo
pop
adc
hlt
xor
pop
push
inc
jge
push
jo
cmp
call
jmp
adc
jo
inc
dec
and
push
sar
lock
add
dec
outsb
jo
mov
jo
push
fstps
int
and
into
fistl
jo
test
fstps
pop
or
and
jo
mov
push
jnp
dec
mov
stc
add
ljmp
adc
or
xchg
add
cmpsb
fldt
js
iret
xor
mov
xor
xchg
mov
lds
jo
gs
pop
sub
cmp
insl
cli
js
pop
in
pushf
test
test
and
movsl
inc
into
pop
sub
lret
dec
inc
out
nop
mov
add
adc
adc
push
jmp
pop
mov
push
jo
xchg
and
bound
fwait
lock
adc
xchg
sub
ret
inc
push
imul
int
xchg
cmpsb
xchg
mov
add
mov
xorb
adc
xchg
enter
inc
lock
xor
stos
inc
jl
movsl
shr
inc
mov
es
push
pushf
pop
shlb
stos
mov
jne
in
cmpsl
nop
cmp
ror
push
int
pop
outsl
cmp
mov
jo
mov
and
pop
fimull
fsub
repz
out
add
jo
gs
mov
jo
mov
mov
fistpl
inc
fldl
pop
and
imul
divb
mov
dec
stos
xor
jp
mov
enter
xchg
adc
iret
cld
lods
lods
sub
sbb
inc
cltd
aad
xchg
sti
rcrb
fldt
lock
imul
pop
std
inc
jo
out
enter
test
into
aad
lret
xchg
cmp
mov
leave
fmull
mov
dec
or
stc
in
push
mov
test
fs
rcrb
aaa
ret
mov
xchg
jo
ds
jge
xor
or
push
sub
push
fnstsw
mov
imul
in
inc
inc
and
and
xor
sarb
test
push
push
xor
add
pop
xchg
jns
xor
cld
lock
rcr
pop
pop
push
imull
and
push
cmc
insb
inc
inc
fisubrl
sahf
sub
mov
cmpsb
pushl
mov
out
inc
pop
mov
into
mov
ficoms
xchg
jmp
cli
cmp
outsb
and
push
xor
sbb
je
or
inc
jo
inc
lahf
mov
mov
cmp
test
movsb
sbb
mov
flds
pop
cs
shll
mulb
jp
jo
or
mov
imul
jbe
and
gs
push
jo
push
cmpsb
lcall
sti
pop
push
cmpsl
mov
jns
mov
adc
inc
dec
push
insl
cwtl
sbb
adc
jo
push
ljmp
aam
in
add
jmp
push
jg
mov
flds
push
push
jo
test
gs
mov
call
ret
addr16
in
jo
aam
sti
ret
jo
mov
jb
inc
dec
add
push
into
push
adc
sbb
mov
jae
adcl
call
xchg
in
repz
jle
shlb
xchg
inc
scas
push
jne
out
mov
repnz
add
jo
imul
xchg
test
jne
lret
outsb
int3
pop
sub
gs
nop
int3
inc
xor
std
cmp
in
jae
aad
push
sbb
test
jne
dec
jmp
imul
test
jo
in
out
adc
fcomi
jo
cmpxchg
jo
fsubrl
push
clc
cmp
insl
aad
jl
push
pop
xor
xlat
adc
cmp
icebp
jo
movsl
in
out
hlt
add
arpl
mov
pusha
inc
jne
js
lahf
jo
hlt
fildl
jo
repz
ljmp
test
xchg
jecxz
out
popa
nop
call
push
mov
jo
stos
int
lcall
adc
jo
push
mov
fnstenv
ljmp
jo
rcll
jno
mov
sbb
addb
repnz
push
cli
xor
jo
in
inc
adc
in
jo
addr16
pop
jmp
and
dec
jo
inc
stos
fsubl
pop
iret
jo
js
es
adc
adc
cmp
push
mov
jb
push
xchg
sti
fld
sub
mov
jns
ss
loope
aam
aas
aad
addr16
adc
xorb
nop
in
sub
or
pushf
sub
jo
or
adc
cmc
test
push
mov
mov
stc
mov
hlt
cmp
fstpt
arpl
jle
cltd
lds
enter
pop
daa
or
ficoml
adc
jo
xchg
orb
inc
pop
bound
sahf
imulb
mov
mov
mov
xchg
push
cltd
rolb
cmp
lea
jecxz
xorb
enter
push
lahf
add
jo
cmp
imul
mov
test
lret
aaa
nop
add
dec
jb
inc
jl
lods
jo
aad
mov
dec
mov
js
cmp
jo
mov
add
cmp
xchg
lock
jo
outsl
aam
add
push
shl
jno
xor
mov
lcall
mov
rcr
in
mov
mov
in
xchg
je
sti
js
mov
or
xchg
jo
mov
sbb
lock
jo
mov
lahf
add
mov
divb
mull
xor
jo
sbb
cs
xchg
xchg
jp
ljmp
adc
mov
and
mov
js
and
push
cmp
call
push
push
pop
scas
pop
push
std
or
int
sub
xchg
insl
jo
xchg
pop
jo
mov
aad
xor
add
adc
jo
lahf
icebp
arpl
add
nop
jo
push
xlat
push
fldenv
mov
iret
pop
fbld
and
cmp
xchg
xor
jbe
xchg
ss
mov
xor
mov
xchg
mov
cmp
test
add
cmpsb
and
mov
inc
pop
enter
and
mov
ja
and
hlt
mov
test
or
cmp
sub
fisubl
dec
int3
adc
xor
cmc
push
clc
jo
pop
dec
inc
daa
data16
ljmp
repnz
lds
pop
repz
inc
idivl
jo
mov
xor
or
fdivl
pop
mov
test
inc
movsl
ficoms
fcomip
sbb
adc
push
xchg
loope
dec
lock
xchg
jge
jns
insl
mov
ljmp
es
jo
xchg
mov
add
mov
adc
scas
sbb
jo
mov
mov
out
jnp
fldt
cld
pop
jo
rorl
dec
xchg
loopne
jo
cmp
scas
mov
mov
mov
cmp
pop
jmp
outsb
push
jp
rolb
dec
sbb
lock
nop
push
adc
sub
movsb
jnp
es
movsl
lock
std
mov
xor
sub
mov
sahf
and
je
test
xor
daa
jl
mov
fimull
jo
lock
xchg
or
adc
mov
xchg
lahf
xchg
fwait
adc
pop
dec
jo
pusha
mov
jbe
and
cli
iret
pop
test
cs
jo
mov
popa
jnp
inc
cmp
mov
clc
nop
xor
aam
push
mov
icebp
inc
in
je
adc
into
pop
ja
jo
xlat
bnd
shl
jo
dec
xchg
dec
lock
rcrl
mov
mov
outsb
mov
jnp
call
xchg
test
in
testl
pushl
fdivrp
lock
fsubl
jo
insb
pop
test
pop
std
sahf
out
inc
jo
push
fldenvs
ljmp
cwtl
imul
pushf
add
cmpsl
aad
and
sub
fwait
rcr
sbb
lret
dec
sahf
or
into
jo
fldenv
adc
inc
and
xchg
inc
xor
cmpsl
jo
push
pop
xchg
and
rolb
std
mov
mov
jp
cmp
cmpsb
mov
or
sti
dec
cmp
out
test
jo
and
test
jnp
stos
andb
int
cmp
jo
mov
test
mov
jo
inc
std
leave
dec
imul
data16
fistps
out
sub
jge
push
xor
add
jo
and
inc
test
imul
mov
push
mov
shr
fldcw
aas
adc
stc
stos
lret
xchg
imul
loop
jo
insl
dec
mov
jo
inc
ja
jle
loop
jo
out
pushf
inc
push
movsl
stos
jo
and
ficomps
fcom
jo
aad
lds
in
inc
mov
pop
push
cs
shll
sub
mov
jo
sbb
shlb
ss
movsb
jp
aad
outsl
lock
sub
out
imul
jo
mov
ja
cli
pop
lret
xor
jae
add
sub
pop
and
mov
inc
nop
dec
pop
cmpsb
push
aam
push
pusha
fcoml
mov
inc
pop
shl
xchg
fimull
add
jno
push
or
fs
jo
out
dec
hlt
aad
jae
cmpsl
mov
and
dec
mov
mov
mov
pop
cmp
faddl
cwtl
ficomps
aad
imul
loope
cmp
lock
inc
mov
xor
xchg
jo
in
rcrb
dec
push
cmp
xchg
jae
lea
aam
das
or
mov
int3
pop
in
das
jo
xchg
mov
lcall
shll
push
in
xchg
aad
xchg
adcb
xorb
std
dec
pushf
xor
or
popf
jl
jo
pusha
fucomip
sbb
je
ja
mov
sbbb
jo
dec
dec
in
mov
jns
fstpl
push
mov
std
jo
pop
adc
mov
orb
outsl
jae
popa
adc
xor
adc
jo
and
mov
jo
andl
es
xchg
in
test
xor
xchg
icebp
dec
jo
inc
cwtl
pop
cltd
lock
pop
inc
movsl
inc
ret
shll
gs
ror
repnz
std
icebp
pmaddwd
jo
aad
inc
rcll
ljmp
or
enter
cmp
popf
jae
shll
mov
cmp
out
stos
sub
aad
mov
loop
add
fistpl
sbb
nop
xor
mov
outsb
shll
jle
test
aad
aam
dec
lret
pop
cli
das
sbb
ja
mov
in
rolb
dec
jo
jbe
sub
into
loop
jo
test
sub
mov
push
mov
pop
std
test
dec
mov
pusha
pop
push
inc
jo
icebp
pop
addl
push
adc
leave
lcall
mov
lods
inc
aad
ss
push
jae
jecxz
outsl
or
in
iret
fcmovbe
mov
inc
and
jo
push
jb
push
and
xchg
int
cmp
ret
gs
jmp
pushf
xchg
jo
leave
or
pop
mov
fldt
jo
and
xchg
fxch
cmp
jo
scas
mov
das
popa
mov
test
ret
add
mov
repz
dec
inc
int
jo
loopne
bound
sar
jo
xor
xchg
push
jb
jo
push
roll
cmp
fdivl
cmp
popf
aad
mov
addb
adc
jo
icebp
pop
push
dec
jo
out
out
das
xchg
push
push
jo
and
or
mov
pop
imul
mov
sub
neg
or
rcl
dec
pop
aad
insl
jae
fwait
loop
aam
mov
push
callw
mov
jp
insl
jmp
push
mov
stos
aad
insl
jbe
fmuls
movsb
mov
insl
jle
jl
cmp
cli
sbb
or
loopne
popf
shl
adc
and
call
xor
mull
jl
out
inc
cltd
jo
test
cwtl
lret
jge
stos
jo
ret
gs
arpl
cmp
jo
sbb
push
or
mov
lods
jle
jo
dec
test
adc
into
jne
cmp
shufps
jb
int
xor
push
mov
std
fwait
or
clc
jnp
inc
push
aad
cmpsl
fstps
or
mov
xchg
jb
cmp
xor
push
and
cmp
aad
cmp
shll
mov
adc
cs
fadd
jo
das
test
mov
div
mov
add
jo
cmp
mov
outsb
sub
cltd
push
out
and
jge
dec
jae
cli
ja
nop
test
int
mov
xchg
out
inc
mov
ds
jb
add
xchg
sbb
fisttpl
xor
dec
arpl
mov
dec
push
jp
mov
lock
das
mov
jo
js
decb
repnz
jo
repz
sbb
sahf
xchg
aad
pop
out
inc
lea
dec
sub
sub
rcll
fistl
leave
aam
cwtl
xchg
xchg
jge
fsubrl
pusha
cmp
adc
xor
out
mov
test
pop
mov
out
inc
cs
sub
push
mov
adc
aad
add
adc
pusha
pop
out
popf
jmp
rorl
push
pop
jne
push
pop
lahf
xor
aas
sub
pop
mov
mov
xchg
add
insl
jo
push
and
jl
lahf
push
add
popa
in
clc
xor
push
push
xorb
test
sub
mov
lock
movsl
xchg
ja
pop
or
mov
jle
add
inc
pop
fwait
lea
jo
ja
gs
sub
fbstp
pop
xchg
add
jge
dec
fdivrp
jo
xchg
cmc
shrl
push
push
xchg
push
mov
jmp
mov
aam
aad
jo
js
cltd
pushl
or
scas
mov
ja
imul
loopne
lret
sarb
jo
test
out
jo
cmpsl
add
pavgw
addr16
pop
sub
push
fnstcw
inc
push
imul
cwtl
pop
cmp
aad
in
and
insb
dec
xchg
leave
jo
xor
ja
aas
mov
outsl
notb
dec
outsb
xchg
adc
mov
sub
mov
jo
test
xchg
js
cmp
aam
dec
push
inc
mov
pusha
sub
insl
jo
aad
push
div
loop
ja
movsl
ret
cmc
cmp
inc
sub
ret
es
out
cwtl
push
rcll
out
adc
dec
mov
leave
loope
jo
test
je
aaa
test
mov
cs
ror
sub
jb
adc
add
mov
lods
pop
xor
jo
cwtl
cmp
lods
push
mov
sbb
js
push
test
lahf
jo
in
pop
lret
mov
fistpll
sti
pop
jle
sahf
lcall
aad
add
enter
mov
jo
mov
loopne
jo
pop
into
lcall
aaa
pop
inc
inc
nop
push
and
popf
sub
add
arpl
inc
cmp
iret
test
xchg
in
pop
or
stos
loope
sbb
ss
movsl
adc
pop
and
divb
and
in
push
pusha
mov
mov
jg
insb
dec
jp
jo
pop
leave
dec
push
jl
jo
hlt
mov
test
or
add
lock
adc
dec
arpl
fdivp
jo
adc
outsb
dec
ficompl
test
jo
adc
inc
sbb
rcr
jo
ja
inc
add
pop
nop
flds
inc
mov
adc
jo
test
dec
and
pusha
jo
dec
sub
jo
arpl
aad
movsb
and
or
les
cs
cmp
mov
lock
or
es
jo
call
rorl
mov
pop
inc
repnz
push
fwait
lods
sbb
insl
adc
ret
cmpb
mov
push
movsl
ja
mov
mov
lret
ret
cmpsb
mov
jl
popa
out
mov
sbb
inc
adc
testb
insl
jb
out
cmp
inc
inc
jae
insl
cmp
rorb
adcl
jno
dec
outsb
lods
xchg
cmpsl
addr16
push
pshufw
jp
xchg
push
mov
push
cmp
jno
sub
enter
cmp
mov
je
or
sahf
dec
jno
jo
mov
add
jnp
scas
xor
fbstp
icebp
sbb
mov
fldcw
test
pusha
dec
xchg
jo
and
setnp
xor
in
jae
je
cli
scas
cmp
cld
arpl
cmp
and
dec
rorl
out
mov
jns
sbb
add
sub
push
fs
sub
out
mov
push
imul
sub
inc
mov
lods
jo
pop
mov
aad
inc
outsb
push
jb
xchg
push
xor
and
lods
pop
out
insl
loopne
add
shlb
mov
xor
mov
std
jl
aas
subb
fildll
add
leave
mov
mov
jp
or
out
aad
dec
inc
push
sbb
mov
lods
cmp
sub
pop
ret
mov
mov
decl
sbb
inc
insb
fsubl
jecxz
cld
daa
aad
sub
ja
mov
xor
aam
cmpsl
jae
xchg
or
sti
xor
jo
jne
add
dec
pushf
jo
pop
jge
push
or
imulb
push
hlt
add
test
shr
imul
jp
popa
mov
out
adc
xchg
dec
push
mov
cmp
call
mov
sub
and
jo
je
push
imull
rorl
and
add
xor
xor
mov
mov
in
pop
in
xchg
cld
jp
test
mov
lock
scas
ja
pop
jo
dec
out
jnp
push
mov
fsubr
aam
cmp
sbb
lea
add
push
shll
scas
jo
fs
lock
push
pmaxsw
mov
mov
push
fdivrl
jo
shl
es
outsl
insl
aad
and
lods
xchg
adc
ss
test
or
scas
icebp
dec
fsts
nop
lea
dec
test
out
mov
sub
jo
fldl2e
mov
cwtl
pop
xor
int3
dec
pop
in
adc
lea
jmp
imul
lods
sbb
push
in
pop
dec
lcall
mov
xchg
leave
cmp
mov
fwait
xchg
dec
dec
push
push
daa
addr16
pushf
mov
clc
or
jle
jo
mov
insl
sti
cmp
in
inc
push
insl
inc
mov
push
xor
lock
imul
push
fwait
popf
jl
add
popl
dec
xor
push
int
in
sub
jo
mov
scas
in
je
jo
xchg
movsb
xor
pop
adc
lret
inc
mov
sub
push
jo
mov
mov
cwtl
mov
pusha
mov
jo
scas
adc
add
fldl
leave
mov
jo
jmp
mull
repz
jo
les
movsb
jo
out
push
ss
scas
jo
adc
mov
jo
adc
mov
outsb
cltd
add
ss
mov
push
mov
aam
fsubs
out
xchg
push
andb
jecxz
lock
sub
xchg
inc
mov
mov
xor
ret
cmp
int3
aad
jle
mov
and
and
push
xchg
jo
add
fs
mov
and
arpl
sub
int
pop
insl
cmp
pop
mov
push
pushf
out
jo,pt
sbb
mov
jo
loopne
ljmp
mov
sbb
pop
js
bound
or
inc
cmp
adc
jae
ja
pop
sbbl
ds
pop
push
addb
popa
sti
or
jo
jge
mov
xchg
adc
mov
sbb
cld
loop
mov
imul
mov
cmpsl
xchg
inc
call
lcall
mov
xchg
sub
dec
sbb
incb
dec
jo
push
repz
repnz
in
cmp
dec
or
les
aad
xchg
outsb
imul
mov
inc
and
inc
addr16
in
stos
daa
test
adc
out
fdivrp
jo
std
mov
push
and
add
sub
sti
repnz
lea
and
cmp
jo
icebp
nop
inc
pop
subb
and
clc
lods
pop
or
jo
aas
dec
mov
and
push
lret
push
scas
xchg
pop
outsl
sbb
data16
addr16
popa
lock
sub
xchg
sub
je
addr16
addb
mov
jg
fcmovnu
dec
jo
mov
xlat
push
ficomps
jo
shrb
sub
xor
mov
in
lret
mov
jo
mov
rcll
gs
movsb
shlb
popf
push
int
je
imul
jb
and
sahf
outsl
fsubrs
outsl
insl
mov
arpl
loope
dec
jle
cmpsl
in
out
leave
scas
popf
pushf
test
loopne
jo
lods
dec
es
subb
jo
loopne
sbb
shl
inc
jg
or
sub
pop
jo
jmp
inc
jo
insb
ljmp
xchg
xchg
into
mov
sbb
es
out
jno
xchg
cs
ljmp
mov
sbbb
push
pop
out
out
pop
rorb
jo
mov
cmc
xchg
inc
mov
scas
out
arpl
cmp
daa
das
mov
rcrb
mov
xor
jno
push
and
dec
push
jo
jb
fimuls
out
jo
jns
push
push
loope
jo
aad
repz
ljmp
flds
inc
adc
push
lahf
aam
add
xchg
aad
jl
dec
pop
push
pop
mov
fmul
jmp
jo
mov
jo
dec
movsl
dec
xchg
fmul
jo
pop
mov
popa
cmp
imull
into
in
icebp
add
inc
xor
jo
jns
sbb
adc
adc
or
dec
mov
lds
sub
daa
dec
lock
loop
pop
jnp
inc
dec
xchg
nop
mov
in
lods
cltd
and
jne
sbb
adc
shlb
lods
jo
cmp
add
lea
jo
inc
and
pop
pop
loopne
jo
xor
ret
loope
jmp
aad
loopne
push
xlat
lods
cs
xor
mov
ljmp
vandnps
pop
mov
shrb
out
mov
jbe
push
or
repz
jl
pusha
push
lret
cmpsb
cmc
in
ret
repz
mov
ss
lret
fcompl
sarl
sbb
mov
mov
repz
pusha
mov
xor
div
mov
ffreep
jae
pop
inc
sbbb
mov
mov
mov
loopne
addl
pop
xchg
xor
push
fs
push
stc
or
xchg
mov
fs
add
jo
movsl
lea
aad
call
xor
fnstenv
jo
dec
inc
mov
mov
xchg
pop
xadd
lea
lock
jo
orb
cs
cmp
jmp
clc
push
enter
jnp
push
mov
mov
push
cmpsb
push
adc
daa
or
inc
fdivrs
insl
andl
xchg
lret
mov
xchg
test
enter
jo
push
andl
mov
dec
in
jo
xor
fcom
jnp
das
add
hlt
cmp
insl
lcall
mov
mov
add
and
stc
jo
ljmp
jo
dec
sbb
in
xchg
pop
push
jo
js,pt
inc
pop
or
dec
pop
adc
clc
fistl
out
call
xor
mov
xor
int
lock
dec
test
mov
daa
roll
mov
lods
push
cmp
cmp
pushf
push
push
pop
lahf
flds
mov
xchg
xor
loop
insb
les
out
jo
dec
mov
leave
jo
push
in
mov
xchg
jae
jo
cmpsb
jbe
add
jo
cmp
outsb
mov
push
test
out
jp
insb
xorl
int
sbb
shll
fistl
scas
jo
push
sahf
movsl
into
sbb
dec
pop
or
and
ljmp
and
fiadds
fwait
mov
add
mov
push
xor
jnp
or
popa
lock
xchg
jo
sbb
mov
fcmovnb
mov
push
mov
aad
iret
test
jle
sub
jge
or
xchg
aas
add
push
loope
ljmp
pop
aam
lock
push
aad
loope
enter
xchg
ljmp
dec
or
inc
jecxz
jo
iret
out
loope
mov
loopne
sub
inc
mov
add
pop
jo
mov
push
inc
ja
cmp
sub
and
xor
divl
cmp
fsts
jle
dec
shrl
or
mov
enter
cmp
repnz
adcl
int
push
xchg
mov
jle
hlt
and
add
xor
sbb
mov
enter
mov
ja
mov
fdivrl
cmp
add
inc
das
in
xor
jecxz
jae
insw
in
dec
jo
sbb
adc
arpl
in
mov
mov
les
mov
jno
dec
push
shl
xchg
icebp
jo
xchg
or
xor
loope
aas
sar
lret
out
pushf
jo
mov
cmp
push
sbb
cmpsb
jb
out
sti
lds
adc
ja
std
insl
jo
shl
fwait
push
mov
jo
xor
jmp
shl
out
sbb
jo
sbb
jnp
mov
push
test
ja
arpl
out
jp
jno
inc
jo
add
outsb
and
xor
adc
inc
loop
int3
adc
nop
cld
lds
push
pop
ja
jo
and
das
aad
hlt
jmp
pop
adc
push
adc
mov
aad
adc
cltd
roll
or
push
shr
cmpsb
insl
loopne
or
inc
test
loop
jo
cmc
push
jb
divb
mov
push
or
je
out
pop
or
mov
xchg
cmpsb
mov
jb
pop
xor
adc
popa
xchg
shl
rcrb
ret
out
dec
in
adc
add
adc
mov
ret
insl
push
adc
movb
mov
hlt
pop
mov
xor
mov
dec
cmovno
mov
rcrl
push
inc
ja
mov
into
mov
bound
ss
lret
aad
pop
dec
int
sbb
xchg
lea
imul
mov
or
cltd
jl
jo
xlat
loop
lds
jo
fwait
cmp
mov
test
dec
movsl
icebp
jae
shlb
xor
fsubr
adcb
or
cmp
cmp
inc
and
nop
das
mov
divb
cld
xchg
jae
mov
dec
popf
jg
scas
xor
jo
insb
cmp
sbb
sbb
lods
pop
mov
mov
aas
push
adc
cwtl
jo
andl
pusha
jae
call
push
mov
xchg
dec
jle
inc
dec
hlt
bound
mov
adc
jns
nop
cmpsl
xchg
outsl
divb
std
fistpl
inc
jg
xor
push
jmp
or
aam
mov
push
xchg
mov
ja
stos
sbb
out
pusha
insb
fsubs
push
inc
and
mov
or
das
in
lock
sub
mov
pop
fidivrs
insb
jno
ret
mov
xor
into
jo
int3
dec
cmp
lret
jo
cmpsl
lcall
xchg
stc
pop
insl
xchg
and
and
lahf
fwait
aad
ret
test
cs
insl
out
mov
ss
jo
push
add
adc
jo
cmp
jge
sbb
mov
ffreep
cltd
pop
mov
xor
sbbl
insl
sbb
adc
aad
lock
adc
aas
in
jo
mov
mov
adc
jo
f2xm1
lods
mov
mov
cmp
add
jb
adc
or
mov
insb
mov
les
ret
mov
pop
ja
stos
enter
in
aad
cmp
cmp
sbb
jb
dec
cltd
cmp
lock
cmp
push
popf
rorl
cwtl
je
movb
bound
popl
xor
faddl
sub
jo
fsubs
dec
pop
fildl
ret
pop
dec
aad
xorb
nop
mov
inc
or
aas
pop
mov
out
aad
inc
lds
dec
jo
push
dec
push
jo
jg
imul
mov
push
dec
mov
aad
xor
cld
stos
aaa
sbb
nop
jo
aad
mov
push
ret
pop
testl
jo
stos
lahf
sbb
into
rclb
sbb
and
push
dec
dec
daa
jo
aad
leave
subb
sub
jmp
test
and
lea
or
out
xor
sub
jo
outsb
mov
cmpsb
jo
test
add
lods
mov
aad
testl
jge
cmp
arpl
mov
fwait
mov
stos
xlat
jnp
addr16
and
jo
add
sbb
or
outsl
lcall
ljmp
shlb
adc
scas
popf
je
clc
jo
jae
jl
push
inc
mov
push
scas
jae
fstpl
inc
mov
push
mov
ja
sbb
iret
loopne
scas
pop
xchg
jo
inc
dec
in
fyl2x
testb
jo
imul
pop
lds
aaa
ja
push
call
and
imul
rcrb
jo
iret
push
jbe
fildl
jp
out
sbb
xchg
xchg
fs
xchg
jecxz
xor
sub
testb
dec
ljmp
add
add
aas
push
int3
dec
sbb
popf
insl
lods
in
into
lret
pushf
faddl
jmp
push
jbe
jl
jne
mov
lahf
adc
lret
cmp
mov
scas
fstpt
shll
pop
push
shrb
aad
jae
call
loop
ja
nop
cwtl
and
loopne
ret
bound
push
xchg
mov
ja
push
mov
sub
mov
jno
fwait
test
and
frndint
repz
inc
out
fdivrl
test
xor
push
jnp
xor
popf
lock
and
fwait
pop
jo
fistl
or
jle
lea
sahf
movsb
jp
scas
mov
jl
push
jae
dec
outsb
cmpsb
mov
jmp
fwait
lods
out
push
lock
cmp
jo
int3
xor
xorl
leave
push
loopne
jg
push
fdivl
ja
fwait
push
dec
mov
add
pop
jo
mov
dec
mov
sahf
test
pop
xchg
lret
lock
shrb
or
lea
jo
pop
cmc
imul
cmp
or
jo
nop
lcall
or
and
adcb
jo
cld
mov
imul
pushf
inc
mov
mov
notb
jne
sahf
jge
loopne
inc
push
cmp
jns
mov
fldl
fcomp
popa
xorb
rclb
push
nop
das
in
cmp
mov
mov
inc
stos
and
xchg
adc
aas
and
rcll
addr16
pushf
push
jo
lds
mov
push
jne
pop
cwtl
addr16
add
push
mov
mov
push
jl
mov
pop
inc
xor
jo
mov
inc
icebp
jo
jno
sub
push
sub
xor
cmp
jbe
or
push
mov
icebp
cmpsl
mov
insl
dec
lods
mov
popf
inc
push
jmp
insl
mov
ret
lcall
pop
inc
repnz
pop
mov
and
ret
mov
adcb
add
in
jo
xor
sbb
xor
sbb
ret
mov
mov
lret
dec
stos
je
out
out
lock
jbe
cmpsl
rorl
add
cmp
sbb
outsl
jo
fs
mov
add
mov
stos
jmp
test
jo
sub
loop
mov
pop
mov
jbe
pop
add
stos
add
cmpsl
aad
es
out
adc
sub
inc
pop
out
mov
shrl
addr16
movsl
xchg
enter
pop
pop
adc
mov
mov
mov
jle
xchg
pop
test
arpl
cli
sbb
andb
stos
insl
and
sar
push
mov
dec
xor
jo
sbb
mov
jg
jae
inc
lret
mov
data16
inc
test
movsl
jo
inc
adc
jmp
jle
push
pusha
pop
jo
add
shll
movsb
push
mov
negl
sarb
ja
sbb
arpl
push
mov
xor
xor
out
dec
xor
call
cmp
aad
sahf
sub
jl
data16
cwtl
pop
jo
dec
ja
sarb
mov
adc
out
jmp
loopne
jo
clc
push
pop
cmp
js
sub
pop
jo
in
pop
lods
add
popa
pop
roll
or
push
jnp
das
jp
jo
pusha
ja
jo
lret
lea
into
ficoms
cli
cmp
push
jo
icebp
xchg
in
xchg
jns
test
test
jo
mov
dec
std
push
outsb
jo
pop
aad
xchg
sub
cmp
sbb
enter
push
ret
adc
jle
insl
push
push
movsb
mov
cmp
push
fnsave
sbb
mov
jnp
fimull
test
mov
adc
ret
ss
or
cmp
adc
scas
pop
jle
insl
fists
pop
in
icebp
xchg
ja
jae
mov
cltd
aas
cmp
dec
in
pop
in
lock
dec
xor
mul
jno
xlat
add
test
and
mov
mov
mov
jo
es
les
pop
mov
sub
lcall
inc
lds
dec
jo
and
ja
jmp
xorb
icebp
jo
aad
repz
add
dec
flds
mov
add
insl
clc
movsl
pushf
xchg
imul
jle
fisttpl
dec
stos
jo
lds
and
idivl
mov
jo
xlat
adc
inc
xchg
ret
movsb
mov
dec
mov
pop
in
xorb
pushf
scas
and
jp
sti
fisttpll
cmpsb
xchg
or
lods
inc
push
add
loope
push
cmp
adc
xor
fwait
jo
repz
jmp
mov
jge
inc
xchg
jo
fstpt
enter
cmpsl
push
inc
add
pop
add
cmp
xchg
adc
pushf
add
pcmpeqb
in
fmul
push
lock
out
fwait
ja
add
fcomp
jmp
push
pop
pop
sub
push
pop
icebp
jo
dec
sub
call
xchg
mov
cmpb
scas
aad
push
into
jo
data16
push
mov
sbb
lret
and
test
iret
lods
outsb
inc
aaa
pop
or
jecxz
jae
mov
mov
dec
mov
and
and
fsubl
rcl
mov
incl
scas
jg
mov
push
nop
pop
jo
mov
fnstcw
jo
inc
cmpsb
sub
jge
and
sbb
std
pop
mov
mov
jae
push
cmpsb
test
jo
repnz
mov
and
and
cmp
out
xchg
mov
call
sub
xchg
xor
rorl
mov
xor
ja
enter
add
cmc
inc
in
adc
xchg
adc
pusha
cmp
dec
jmp
push
les
or
negl
mov
jno
jbe
xchg
pop
test
nop
xor
jbe
jo
xor
inc
aad
jo
mov
aaa
xchg
jo
sub
cmp
inc
sbb
decb
pop
jo
jle
cmp
into
daa
add
jo
fildl
jo
mov
int
loopne
jo
outsb
dec
dec
inc
shl
jnp
or
xchg
sub
ja
outsl
sbb
sub
mov
insl
rolb
iret
ret
hlt
clc
pop
mov
gs
lods
add
mov
mov
mov
js
push
mov
in
out
repz
pop
push
adc
fnstcw
jo
mov
arpl
pop
out
fisttpl
adc
jno
or
jb
lcall
lock
mov
je
mov
nop
fstps
shr
fdivl
pop
into
sub
jo
add
jo
aad
aam
fwait
pop
in
jne
push
sbb
cmp
test
jge
mov
pop
outsb
enter
adc
push
fldenv
test
push
pop
adc
cmp
xor
lods
lods
or
leave
mov
inc
add
ret
aaa
xchg
and
movsb
mov
fs
mov
rorb
cmpsb
lahf
mov
sahf
int
mov
push
scas
cmp
outsb
rcrb
movb
xor
dec
addb
or
push
enter
adc
and
mov
jo
sbb
jb
fidivl
inc
xor
xchg
aaa
jo
mov
push
fsubl
test
jo
jge
dec
jl
mov
daa
xor
insl
dec
or
les
in
test
sub
mov
mov
xor
pop
jo
pusha
clc
rorb
adc
in
js
mov
xchg
imul
xor
adc
outsb
sbbl
jae
adc
sub
pop
int3
imul
ljmp
or
jle
and
std
mov
jo
inc
jnp
sarb
sub
jo
fldenv
mov
ljmp
pop
mov
shrb
std
pushf
or
add
push
or
into
cld
mov
jbe
xchg
movsb
sahf
mov
pop
pop
xchg
shlb
push
cmp
xor
mov
leave
movsb
aaa
fcoms
sub
jo
pushf
cmp
inc
inc
push
fmull
movsl
outsb
xchg
rorb
in
mov
test
inc
stc
test
add
sbb
popf
or
mov
sbb
sarb
cmc
add
jo
movsb
in
std
jmp
fisubl
leave
cld
mov
sbb
cs
pusha
jo
cmp
lea
sub
insb
out
rcrl
mov
xchg
stos
cmp
movsb
push
mov
cmpsb
sub
pop
push
xor
jo
push
mov
or
jns
jo
mov
xor
insl
test
xor
jnp
aam
pop
jo
mov
jb
jo
sub
call
insb
inc
xchg
jge
mov
add
scas
cmp
lock
out
test
jo
insl
xchg
daa
aas
push
jg
add
mov
xor
mov
push
xchg
dec
jo
outsl
mov
mov
cmpsl
xor
ja
xchg
jmp
nop
loop,pn
fnsave
bound
add
andl
jmp
adc
dec
jne
mov
fcmove
pop
pop
nop
clc
pop
bound
jo
ffreep
icebp
scas
mov
push
aam
roll
mov
dec
or
insl
cmp
das
scas
lahf
fwait
jo
mov
aas
test
push
jle
ljmp
shrl
jo
xchg
lea
jmp
add
jo
divb
pushf
xor
dec
push
ja
ss
xor
imul
mov
out
push
shll
xor
aad
sub
orl
mov
ljmp
add
jne
xchg
lock
push
enter
movsb
out
and
sbb
in
test
mov
push
repz
fsubrl
xchg
jae
cltd
dec
shrb
popf
mov
fwait
test
xchg
or
mov
dec
xchg
jo
call
lea
jo
sti
dec
push
jae
cmp
rcl
int
es
mov
repz
pop
pop
jo
clc
or
mov
xor
xlat
jo
jae
mov
sub
xor
mov
push
mov
mull
lret
stc
and
add
lods
add
aad
outsb
adc
loopne
fisttpl
xor
jo
popa
push
xchg
inc
cmc
repnz
das
jo
jb
xchg
pop
imul
scas
shll
jo
or
out
push
cmp
stos
jo
gs
jp
jmp
jo
loop
testb
jnp
sub
xor
mov
push
enter
ja
mov
xchg
push
jge
pop
aam
jle
push
cmp
mov
lret
jns
xor
pop
jmp
subb
push
iret
pop
mov
outsl
insl
hlt
imul
jbe
dec
mov
ret
jp
jnp
and
sub
inc
addl
test
std
jo
adc
roll
mov
jmp
out
jo
cmpb
sbb
dec
stos
dec
in
jle
insb
rcrb
ja
pop
mulb
jo
gs
test
stos
jl
adc
jo
fildll
push
iret
sbb
xchg
jo
les
jo
test
fpatan
jo
push
add
jae
cmpsb
and
aad
mov
inc
insl
fildll
or
mov
push
int
push
lock
jmp
in
xchg
hlt
jo
mov
inc
jne
ret
cmp
inc
jo
mov
in
scas
lcall
ja
stos
jo
mov
sbb
xor
cli
les
aad
test
sti
std
loopne
add
xor
jg
and
mov
xchg
mov
xchg
sub
ret
push
jl
lock
add
bound
sbb
mov
cmp
test
stc
insl
push
cltd
pushf
or
out
or
out
xor
loop
jmp
dec
sub
dec
fwait
dec
jo
imul
cmp
cs
xchg
out
ja
push
mov
fucomip
jo
sbb
dec
push
jo
and
inc
ss
sub
add
fisttpl
pop
imul
fcoms
push
dec
test
or
cmp
fmul
cli
push
stos
xor
jo
out
add
xchg
add
mov
sub
cmp
xlat
icebp
jo
outsb
pop
fldcw
negb
decb
aas
push
pop
lock
cmpb
fists
adc
push
push
dec
mov
inc
jo
jnp
push
fcompl
lahf
lea
fxch
lods
test
or
rolb
cmp
xor
jo
rol
ds
push
sbb
fldt
cmp
lcall
jle
subb
aad
mov
add
shll
sbb
aam
jb
fwait
ljmp
xchg
dec
ficompl
adc
push
cld
mov
js
jo
and
jae
and
inc
dec
xor
js
inc
fwait
jo
mov
fdivl
into
pop
mov
out
jae
int
sahf
rcr
clc
pop
or
shll
dec
and
ja
jbe
add
cli
push
jecxz
push
xor
mov
dec
ljmp
pushf
dec
sub
jnp
or
bound
jmp
ret
mov
insl
insb
aad
or
sub
jge
cwtl
xchg
lock
repz
push
popf
adc
outsl
jo
mov
pop
and
jl
jo
mov
pop
scas
add
pop
shll
sbb
jo
xchg
daa
pop
or
pop
jp
sti
jo
add
jo
bound
push
or
lock
int3
mov
xor
gs
jno
aam
repz
pop
or
outsb
dec
mov
jo
in
mov
ret
js
lock
xchg
ja
xorl
dec
sahf
fstps
xor
jo
scas
js
cld
stos
or
pop
and
aas
cmp
mov
pusha
pop
sbb
ss
std
jo
andb
jo
aad
dec
sub
repnz
dec
mov
fs
jo
push
and
add
adc
jo
pushf
mov
pushl
aas
sub
xor
or
mov
lock
pop
sub
cmp
aas
dec
clc
push
sti
mov
loop
dec
int
jle
insl
pop
cmp
mov
fimull
enter
loopne
cs
cmp
ljmp
sbb
jne
push
lods
mov
fisubrs
inc
and
xchg
cmpsb
jo
test
xor
bound
adcl
shll
jle
cld
rcrl
inc
jo
aad
repnz
inc
repz
leave
imul
adcb
test
daa
je
jle
clc
out
lock
stos
cmc
jo
rol
roll
pop
jo
cmpsb
sbb
and
in
mov
popf
arpl
outsb
cld
mov
mov
pop
hlt
jae
dec
sub
out
mov
ljmp
insl
jne
adc
lock
pop
and
jb
pop
fsubrl
ret
subb
adc
lea
xchg
frstor
enter
and
jbe
adc
aad
in
pop
fstpt
jo
or
cmp
jle
insl
mov
xchg
sti
xchg
loope
insl
pop
xchg
nop
mov
rcrl
rolb
push
andl
or
inc
sbb
pop
jo
mov
shrb
dec
push
aam
jo
aad
cltd
fsubs
cmc
push
and
pushw
pop
enter
inc
mov
xchg
cli
daa
insl
lock
mov
test
add
lock
jno
fwait
icebp
jecxz
lea
pop
mov
pop
mov
jl
dec
js
in
mov
iret
dec
repz
inc
orb
xchg
jo
pop
jmp
xlat
mov
jo
push
andl
push
jo
call
mov
jle
insl
out
fdivrp
inc
sbb
xchg
adc
sar
xchg
pop
push
imul
ud0
and
push
test
xor
incl
cmp
mov
les
dec
and
xchg
jl
enter
xchg
gs
lock
loope
jo
in
repnz
inc
mov
jo
test
enter
outsb
loop
cmpsl
jge
adc
scas
sbb
jb
lea
jae
fidivl
clc
insl
test
fstpl
aam
jo
dec
jno
lock
xchg
test
mov
add
pop
mov
inc
cs
cmp
imul
call
fwait
aam
push
sub
imul
popa
jmp
cmpsl
arpl
insl
enter
pop
cmp
mov
insl
jb
stos
scas
mov
pop
in
jae
pushf
jle
jo
arpl
mov
sti
inc
cli
adc
clc
shrb
push
shl
gs
lcall
std
push
rolb
lea
jge
shrb
xor
mov
push
mov
jnp
add
or
pusha
jo
lret
fisubrl
jo
aad
mov
cmp
push
test
fmuls
mov
out
lahf
xchg
decl
fnstenv
icebp
add
fcomp
divl
addr16
repz
mov
loop
ljmp
push
xor
int
xchg
mov
aaa
lods
jbe
shl
xor
cmp
cmp
mov
sbb
mov
dec
pop
lock
aad
adc
inc
xchg
mov
xchg
jo
fbstp
sbb
pop
xchg
or
add
mov
inc
pop
int3
mov
add
test
es
arpl
rolb
call
xlat
inc
jle
outsb
cmpsl
lret
mov
cwtl
jo
pop
fdivrs
mov
xchg
mov
andl
push
test
or
jmp
cmp
outsb
adc
fdivs
cmp
out
jo
mov
sarb
jl
lret
ror
push
pop
dec
xchg
xlat
mov
or
push
lods
dec
pop
push
dec
in
adcb
out
fsts
mov
loopne
mov
hlt
push
in
push
sub
mov
fdivr
cld
xchg
push
mov
mov
xchg
mov
jmp
movsl
shrl
xor
cltd
ror
xor
mov
hlt
dec
jmp
mov
cmp
dec
add
push
jp
push
mov
cmp
test
mov
xor
jp
cmp
adc
jo
push
rcl
sub
add
push
jo
mov
inc
jo
fbstp
mov
adc
lds
push
std
insl
testl
jo
mov
mov
or
and
jo
xor
pop
cmp
xchg
push
sub
std
test
mov
inc
push
jo
mov
test
insl
faddl
lods
scas
imul
imul
les
sbb
test
pusha
ret
imul
fstl
jbe
stos
jo
pop
pop
xlat
mov
sbb
leave
int
dec
jo
jmp
aas
xor
lcall
lcall
lock
jo
cmp
cs
xchg
stos
mov
aad
out
fwait
pop
mov
inc
mov
mov
push
dec
and
mov
das
int3
inc
lods
push
sub
test
lret
inc
cmpsb
loop
or
lahf
aad
jo
mov
adc
xor
pop
jae
lock
push
mov
cmp
xor
sti
jae
jne
cmp
jo
lcall
adc
adc
mov
arpl
adc
int3
or
jo
mov
in
push
insl
xchg
mov
sahf
stc
cmp
xor
add
ret
cmp
cmc
jo
push
and
jo
aad
cli
dec
xor
xchg
push
sub
test
cmp
sbbl
inc
sbb
cmp
dec
adc
jo
pop
shll
jbe
gs
ss
les
sbb
pop
int
and
icebp
dec
repz
pop
mov
fsubl
into
popl
jo
je
sbb
and
xor
cmp
rolb
call
negl
mov
push
mov
sub
adc
xor
insl
gs
adc
adc
jo
stos
pop
mov
shll
xchg
fildll
into
mov
jo
dec
mov
popf
pop
mov
mul
lret
insb
outsb
sahf
movsl
xor
cmp
inc
inc
xor
dec
pop
testb
insl
cmpsb
add
imul
adc
fildll
test
pop
pop
lock
dec
shll
pushf
sub
lds
in
jo
int
sbb
arpl
or
jo
push
insl
pop
andl
ja
loopne
adc
or
stos
inc
rcll
jle
stos
jo
mov
inc
sbb
mov
jno
xchg
mov
fs
jecxz
jo
jg
adc
jo
dec
cmpsl
hlt
es
mov
ja
stos
sbb
shlb
daa
adc
push
jge
insl
or
jl
cmp
xchg
adc
popf
pop
pushf
das
lahf
jae
jp
mov
cmp
xor
stc
mov
pop
adc
mov
push
ja
lock
push
inc
jo
lods
cmpsb
cmp
fisttpl
add
add
or
jns
outsb
push
xchg
xor
out
lock
sbb
xor
mov
pop
push
jo
dec
imul
loope
jnp
stc
jo
mov
js
dec
dec
xor
es
mov
pop
sub
jo
xchg
and
sbb
imul
stos
xor
gs
pop
outsl
mov
jo
dec
mov
inc
inc
dec
jo
aam
cmp
jo
out
mov
or
push
dec
arpl
dec
fwait
and
into
insl
jecxz
movsl
sti
sbb
sbb
mov
fcmovb
jno
stc
idivb
or
lods
ds
fstpt
mov
mov
push
cld
ret
aaa
jo
gs
pop
imul
insl
jae
notl
in
pop
movsb
das
jb
aad
cmp
js
test
mov
mov
outsb
stos
outsb
xchg
jo
ss
push
fsubs
jmp
pop
lret
push
notb
add
push
pop
mov
jbe
insl
mov
in
int3
addb
sahf
in
cmc
fdivrl
xchg
fbstp
sti
pop
xchg
fnstenv
push
out
lock
mov
pop
mov
add
ja
ror
add
push
or
daa
xchg
pushw
cmp
jae
leave
mov
test
jo
cmp
fisttpl
jae
imul
lahf
addl
shrb
ss
mov
std
pop
rcl
mov
pop
imul
loope
cmpl
stos
out
test
ja
fstps
shrb
and
mov
int3
jo
mov
subb
mov
hlt
shll
call
xchg
jo
push
mov
lods
jo
push
push
rcrb
js
cmp
xor
andl
ss
cmp
arpl
jo
fmuls
test
dec
outsb
jno
pop
aaa
mov
out
cmp
jg
test
lods
jae
dec
ss
lods
hlt
mov
outsb
jae
mov
fstps
insb
sbb
std
push
xor
xchg
lahf
sub
dec
sbb
jae
popf
xchg
pop
clc
fwait
popa
test
jo
pop
in
jne
rcrb
adc
xchg
mov
mov
lahf
push
pop
and
pop
push
jo
les
jno
call
inc
sbb
jo
pop
pop
jmp
jo
push
fs
int
jno
jo
lock
mov
insl
lret
pop
xor
mov
sub
repz
int3
jnp
mov
sub
push
inc
sub
jle
jae
push
loope
mov
adc
cmp
fistpll
jo
aam
scas
leave
sbb
sub
jge
pop
push
subl
stc
out
add
push
mov
sub
dec
arpl
adc
jno
fs
jo
std
mov
jge
mov
cmp
xchg
add
or
enter
xorb
shr
jo
repz
mov
orl
insl
adc
lds
fcompl
xor
xchg
jns
jo
lds
pop
mov
sahf
jle
jo
mov
shll
stc
imul
ja
cld
stos
in
add
adc
and
xchg
push
int3
lock
mov
jo
xor
fwait
or
pop
icebp
lds
out
pop
aad
adc
push
cmp
sarl
or
ret
cli
inc
push
jo
mov
push
lock
ljmp
stos
jo
subb
fidivl
jo
imul
xchg
mov
mov
jo
sahf
mov
daa
out
nop
pop
jo
push
mov
data16
push
ss
mov
adc
lds
fdivrl
int3
or
repz
sub
and
pop
xor
clc
loopne
leave
outsl
push
test
les
mov
sub
fnstenv
push
rol
stos
jno
pop
in
pop
jo
aaa
xchg
xchg
mov
scas
fnsave
in
iret
jo
adc
sub
outsb
imull
xor
call
movsb
cltd
xor
ja
in
or
jno
stos
outsl
mov
fnstcw
pop
lock
inc
mov
add
adc
inc
mov
pop
xchg
dec
add
jo
xor
push
pop
in
sbb
cmpsb
test
mov
fiaddl
pop
jl
or
pop
jo
or
xchg
jp
pop
fdivl
push
jae
rcrl
jle
mov
cs
mov
sub
add
dec
mov
mov
xchg
sti
push
aad
fstl
std
push
sub
push
push
inc
xor
clc
mov
jo
xlat
lds
jmp
rclb
lods
jo
cmpsb
int
aad
pop
stos
jno
insl
mov
push
jo
sti
scas
leave
jle
dec
xor
lock
sbb
dec
loope
jo
lds
jnp
sub
mov
lahf
jno
insb
mov
dec
call
test
xorb
sub
dec
mov
mov
pop
xlat
ds
adc
xorb
fidivrs
xchg
xor
push
adc
fnstcw
pop
jo
stos
mov
sub
fisubs
pusha
jge
mov
pushf
test
mov
in
fs
test
push
sbb
jbe
jo
repnz
push
xchg
mov
gs
in
add
in
push
dec
ds
mov
adc
loop
mov
xchg
repnz
mov
bound
pop
fldt
add
pop
inc
test
xchg
and
mov
fcmovnb
mov
lret
or
jo
fwait
mov
movsb
call
push
insl
add
ret
lea
das
sbb
dec
mov
mov
aam
add
cwtl
jmp
add
jecxz
mov
jno
pop
fcmovne
lock
xor
mov
cmp
xor
int3
mov
ja
jecxz
or
pop
lret
lret
push
dec
pop
adc
and
int
insl
out
jbe
subb
xchg
inc
jo
scas
mov
adc
std
gs
sbb
push
jo
cmpsb
adc
jo
ljmp
mov
stos
inc
les
dec
icebp
fidivl
jo
sarl
inc
ljmp
xor
sub
scas
push
shrb
inc
leave
add
adc
mov
ljmp
test
shlb
mul
pop
push
push
jo
inc
mov
xchg
inc
mov
jo
sbb
sub
fdivl
arpl
dec
add
lock
aad
das
mov
pop
es
call
lds
dec
test
jecxz
repz
pop
popa
push
cmc
dec
inc
cmp
jo
arpl
aad
cwtl
movsb
movsl
jo
sahf
in
jge
pop
inc
jo
push
dec
icebp
stc
inc
jmp
fmul
in
pmullw
outsb
sbb
dec
push
popa
xor
jo
rcr
sti
int3
cmc
testl
test
cli
div
cmp
mov
jo
mov
scas
jne
push
addr16
and
fs
add
mov
subb
xor
decb
sub
dec
lock
xchg
push
loopne
adc
pop
int
leave
jo
or
and
push
cld
enter
arpl
push
jo
clc
inc
ja
movsl
aam
sbb
ret
fcomps
sub
mov
push
inc
mulb
cs
cmp
ret
jle
or
jg
sub
jo
dec
into
in
and
jo
add
cltd
pop
dec
push
xorl
xchg
pop
inc
fidivs
jge
pop
lds
adc
cmp
insl
push
mov
pushf
mov
out
and
cld
hlt
xorb
lds
ja
push
and
lahf
xchg
imulb
stos
rcll
mov
ds
xchg
mov
jo
shlb
sbb
xlat
dec
insl
jge
mov
test
pop
jo
push
mov
push
pushf
in
je
adc
cmpsb
sbb
xor
inc
in
sahf
xor
je
dec
xchg
cli
fiaddl
jo
movsb
sarb
dec
test
pop
jo
jns
mov
jo
cmp
mov
dec
pop
jo
pop
add
xchg
add
inc
pushf
imull
pop
jo
push
orb
jp
data16
mov
sbb
sbb
mov
daa
ror
pop
pop
and
jno
adc
pop
sbb
xor
inc
icebp
jge
stc
aad
mov
stos
ret
nop
mov
jo
daa
rorl
bound
xlat
xchg
adc
mov
jae
inc
cmp
jnp
shrl
jbe
jno
adc
insl
leave
test
loopne
jo
sbbl
jo
out
js
xor
fistpl
lds
fistpll
addb
jo
flds
ret
std
and
mov
inc
ja
mov
and
outsb
insb
pop
push
cli
adc
icebp
ja
push
jp
jb
inc
mov
fisubl
jae
pushf
test
jae
push
push
dec
jo
aas
imull
mov
jo
xor
imul
repz
es
mov
lods
dec
daa
aad
insl
lcall
mov
push
cmpsl
jo
aas
test
outsb
cli
es
mov
adc
push
mov
shr
jbe
das
mov
mov
inc
mov
jo
cmp
daa
mov
inc
xchg
popfw
pop
jo
jnp
es
loopne
jo
js
add
mov
cs
dec
insl
xchg
push
cmp
mov
jae
pop
hlt
data16
mov
bndstx
push
repnz
insb
adc
dec
push
fwait
lock
jno
icebp
dec
aaa
sub
in
jo
xchg
jbe
cs
inc
jo
cmp
inc
inc
outsb
lds
jl
sahf
nop
lcall
sbb
fs
incb
xchg
int3
mov
mov
jo
insl
mov
mov
in
jle
insl
loope
fdivrl
je
insl
pop
push
xor
pop
xchg
xchg
aam
jo
loope
jmp
mov
in
lcall
shr
notl
sub
pushf
jp
xor
lret
add
mov
mov
addr16
mov
rcll
adc
cli
test
add
add
or
shrb
jg
popf
jne
stos
push
jae
xor
adc
dec
insl
pop
lret
mov
sbb
jge
stc
xchg
cmp
jo
cmp
dec
xchg
push
push
or
ljmp
mov
andl
out
mov
jo
sub
movsb
push
outsl
inc
xor
add
loope
lock
xchg
test
or
jo
sub
outsb
add
cld
nop
shll
inc
pop
mov
push
or
in
rep
push
pop
xchg
je
inc
iret
pushf
je
decl
push
lock
inc
bound
xchg
test
jbe
subl
sub
stos
rol
inc
mov
ja
pop
sub
push
jo
popf
or
cwtl
sbb
push
jo
je
sahf
fistpll
jmp
ret
repz
ja
lcall
fadds
pop
pop
in
lods
add
imul
out
jo
push
cs
aad
or
jo
inc
rol
or
or
xchg
ljmp
mov
aad
sub
leave
jg
lea
jo
bound
fsts
sbb
sbb
gs
lret
int
jb
fnsave
mov
sbb
cmc
jns
inc
test
aam
aas
mov
push
xchg
ja
add
and
jle
push
pop
xchg
add
cmp
popl
inc
lret
sbb
aam
lret
mov
std
mov
outsl
xor
cmp
mov
xchg
nop
pushf
xchg
dec
sti
lock
dec
and
fldt
adc
leave
add
test
movl
ss
stos
pushf
jo
loop
lods
out
jmp
lock
lds
add
and
add
imul
adc
push
stc
cmc
test
add
fisttpl
mov
mov
mov
add
or
mov
nop
pop
rolb
mov
cmpl
xchg
repz
xacquire
jle
lret
minps
pop
add
sti
and
fnsave
dec
jb
xchg
push
sub
jae
arpl
xchg
lcall
test
xor
ja
xchg
add
mov
jo
dec
les
das
mov
aam
je
ficoml
or
insb
outsl
xor
pushf
cltd
jo
push
dec
pop
stos
jmp
subb
fbstp
sbb
jo
and
mov
shll
sbb
push
loopne
dec
jo
mov
cmp
jo
aaa
cwtl
dec
pop
or
lea
pusha
fdivl
xchg
into
jge
es
and
lret
sub
push
inc
sbb
arpl
inc
movsb
jo
hlt
inc
pop
ror
je
mov
pushf
lret
imul
iret
sbb
icebp
jnp
mov
jno
in
jo
xor
into
addr16
jp
jo
mov
jo
push
cmpsb
mov
adc
adc
mov
fildl
mov
pop
fsubp
lds
sbb
ret
sbb
hlt
jo
aaa
mov
outsb
mov
or
jne
dec
push
pop
and
sbb
pop
sub
add
sbb
outsl
inc
stos
inc
pop
add
adc
loop
ret
ss
mov
and
adc
out
arpl
adc
sub
mov
xor
jne
aad
adc
xchg
mov
jl
shll
pop
addb
sbb
sahf
aad
popf
mov
dec
shll
inc
test
rcl
mov
jo
pop
jns
jno
mov
jo
mov
loope
ljmp
mov
sub
enter
aad
dec
js
loopne
dec
xchg
dec
lock
call
sub
das
lock
outsl
lock
jo
gs
jo
mov
cwtl
xchg
jo
pop
sub
xchg
xchg
cmc
jo
xchg
xor
cltd
int
jo
xlat
mov
cmpsb
shrb
test
stos
adc
adc
jbe
out
cwtl
test
mov
jecxz
daa
xchg
sbb
imul
fidivrl
roll
outsb
jnp
cmp
jno
loope
lret
shlb
lock
repnz
xor
inc
jo
adc
int3
and
arpl
mov
rcrl
and
pushf
adc
jne
ljmp
lods
jg
xchg
xor
xor
fdivs
sub
xchg
jo
ja
pushl
stc
imul
push
jo
jbe
jno
bound
fucomi
and
loope
or
aad
imul
leave
test
pop
mov
adc
movsl
mov
mov
roll
inc
fisttpl
xchg
fsubr
mov
or
jmp
fs
insl
dec
les
sbb
fmuls
add
shl
jns
push
std
lock
jne
lahf
mov
jo
jbe
cmp
sahf
roll
push
jo
sti
cld
test
sub
push
jo
std
out
les
mov
lock
addr16
test
pop
mov
pop
mov
add
dec
adc
jne
sub
int3
jo
ja
xor
mov
sub
jo
outsb
aam
loop
push
jae
out
jecxz
hlt
repnz
lods
or
adc
push
dec
pushf
cmpsl
jae
adc
fxch
xor
jecxz
and
les
dec
fsubrl
leave
jo
xchg
jge
lea
mov
jo
aad
add
push
dec
jo
adc
push
test
inc
aas
mov
jo
fisubs
movsl
pop
pop
pop
loopne
pop
push
xorb
aam
jnp
jle
or
out
mov
fyl2x
lcall
and
or
nop
aad
dec
push
pop
xorl
insb
cmpl
out
sub
or
fnop
xchg
jl
lock
imul
dec
and
add
test
popf
push
and
enter
in
sbb
popa
xchg
inc
int3
rcll
clc
out
cmp
sbb
fists
xchg
xchg
xchg
data16
aaa
cmp
cwtl
insl
push
push
lods
cli
add
xchg
xor
xor
fldpi
and
cmpsb
pushf
sub
mov
int3
bnd
cmp
ret
mov
rcrb
inc
jno
aad
popa
insl
xorb
inc
mov
scas
and
cld
xchg
pushf
dec
jae
cmpsl
stos
mov
inc
jp
stos
pop
repz
jo
pop
sbb
jo
jmp
cmc
mov
lret
inc
lds
hlt
add
mov
xchg
cmpsl
or
cmp
subb
fs
mov
jo
leave
lcall
mov
ds
mov
repnz
shll
mov
enter
cwtl
push
and
pop
inc
dec
pshufw
xchg
insl
dec
jo
dec
add
lea
fbld
or
jo
sahf
cmc
je
dec
jo
data16
fistpl
pop
pop
xor
enter
add
jne
mov
shll
jg
xchg
js
aad
cltd
cmp
into
and
out
mov
cmc
test
dec
sub
and
repz
push
ds
adcb
aad
repnz
jo
mov
out
setno
orb
fdivrp
insl
jo
repz
dec
dec
mov
jo
pushf
xorl
mov
dec
ret
add
jmp
aad
cltd
jo
std
movsl
in
pop
fldenv
pop
push
test
ljmp
arpl
adc
add
mov
dec
push
outsl
dec
ja
pop
fnstenv
jge
mov
hlt
shl
insl
jns
push
inc
insb
jnp
fnstcw
ds
push
xchg
insl
das
out
repz
mov
insl
aad
pop
out
xchg
fdivrp
or
jae
out
mov
bound
xor
cmp
aaa
cld
inc
jnp
dec
aad
fnstcw
add
popf
cmp
sti
mov
shll
stc
mov
out
das
jo
mov
sub
arpl
cld
or
pop
insl
imul
lea
in
pmullw
leave
scas
add
mul
popf
dec
pop
out
insl
jne
jmp
sub
test
ret
test
jo
lar
aas
jl
xorb
dec
adc
cli
mov
mov
jp
jo
jmp
mov
jo
pop
cmp
jo
fldt
cmpl
fadds
push
and
push
enter
jo
pop
sbb
negb
adc
xor
pop
ja
push
lods
lds
cli
aad
repz
inc
mov
in
pop
mov
jo
sbb
pop
repnz
mov
mov
xchg
and
or
push
in
cmc
mov
sub
jo
inc
pop
popa
or
sbb
in
push
xchg
int3
jo
out
mov
fwait
loopne
jne
push
or
jo
into
mov
add
scas
adc
jne
mov
xlat
mov
jbe
loope
mov
jo
add
lds
mov
push
je
pop
push
mov
add
mov
lret
push
push
sbb
lods
mov
lods
jmp
mov
add
jae
mov
push
mov
dec
xorl
pushf
movsb
pop
jo
mov
aad
jge
adc
xchg
xchg
jnp
cwtl
cmpsb
sub
push
lods
pop
jns
sub
mov
ss
sahf
fld
add
mov
push
xorl
shrl
addr16
aaa
jo
cmp
fsts
dec
dec
jo
insb
push
or
lock
mov
int
bound
fnstsw
adc
mov
ljmp
je
aad
add
scas
dec
push
jo
sti
adc
push
add
jae
sbb
fst
pop
test
dec
mov
pop
xchg
data16
fcmovb
cmp
leave
or
mov
orb
adc
divl
lock
xchg
fwait
dec
out
mov
pop
cmpsl
inc
xchg
inc
jo
jno
lods
mov
mov
rclb
cmpsb
adc
jecxz
push
xor
hlt
and
sub
pop
or
movsl
js
out
inc
iret
lcall
ja
sti
out
repz
shlb
mov
push
push
js
faddl
aad
in
call
jnp
mov
sub
jo
mov
mov
dec
loop
push
mov
sub
cmpsb
jp
mov
gs
bound
leave
mov
ret
out
call
faddl
mov
xchg
or
outsb
and
fistl
js
das
cmpsl
pushf
push
xor
mulb
mov
or
addr16
dec
mov
cwtl
test
push
xor
xchg
jno
and
jbe
lock
sub
pop
outsl
or
jl
decb
dec
ret
mov
push
jo
mov
fsubs
cli
movsl
loopne
jle
cmp
aas
push
mov
jo
add
jo
lea
push
push
dec
sarl
adc
jo
cmpsl
test
jp
adc
or
add
in
jno
jp
aad
xor
jg
cmp
arpl
inc
jo
inc
adc
ss
or
loope
gs
aaa
mov
xchg
mov
daa
xchg
jo
pop
xchg
push
bound
int
ja
pop
das
cld
loopne
lods
mov
mov
jle
sarb
neg
or
jl
sub
xorl
loopne
push
mov
push
push
cmpps
scas
cmp
fcomp
jo
jmp
mov
mov
jo
ficoml
ja
add
xchg
daa
loopne
cmp
jo
xor
jp
popa
xchg
fildl
scas
xor
andl
xchg
inc
mov
mov
jo
mov
arpl
mov
and
cld
lret
std
xor
mov
movsl
push
add
int3
jo
fs
daa
adc
mov
jo
or
aad
jo
mov
and
outsl
iret
ja
outsb
inc
test
sbbb
adc
xor
xor
int3
sub
clc
jo
xchg
test
ds
pop
out
cli
lret
pop
jle
sub
stos
push
push
sub
lds
add
jne
fisubrs
pop
lock
js
fstpt
inc
movsl
jo
rcrl
sahf
xchg
inc
push
jo
jg
mov
jnp
jno
push
lock
push
movsl
pop
stos
push
imul
mov
pop
xor
xchg
dec
inc
dec
nop
jns
or
pop
out
pop
jo
jg
mov
outsb
pushf
testl
ja
test
int3
cmp
pushf
outsb
jmp
xchg
bound
xchg
dec
js
inc
ja
mov
jo
outsl
cli
push
imul
int3
jecxz
xchg
pop
cmpl
adc
jl
insl
jo
sub
add
adc
cmp
fcompl
inc
outsl
aad
orb
add
jo
lods
les
or
fnstenv
incb
mov
add
cwtl
push
cmp
cmc
sub
mov
daa
jbe
add
push
mov
xor
rolb
mov
lock
adc
adc
fldenv
pop
sub
and
dec
mov
sti
cmp
inc
jo
xchg
push
mov
xor
jo
ss
pop
jle
pop
mov
call
cmp
jo
mov
mov
xor
inc
dec
inc
outsb
mov
mov
adc
mov
sub
mov
and
outsl
pushf
xor
jb
xchg
cmp
sbb
xchg
mov
and
loopne
cltd
dec
inc
jae
xchg
mov
fdivs
pop
add
repnz
leave
mov
loopne
dec
and
push
sbbl
repnz
push
arpl
jo
cld
movsl
lea
xor
mov
jo
xchg
inc
inc
adc
iret
mov
dec
xchg
test
jo
imul
jo
ja
fistpl
imul
pusha
pop
mov
dec
dec
movsl
jo
movsb
mov
jno
and
out
pop
pop
insl
mov
jb
fdivrs
and
push
adc
idivl
dec
sub
and
push
add
mov
mov
ss
jnp
jle
jo
jecxz
negb
mov
jo
xchg
xor
add
jo
push
subl
pop
fstpt
xor
add
out
inc
jo
xor
xchg
fdivs
in
cs
enter
outsl
pop
dec
sub
push
rcrb
ja
arpl
aad
ret
jo
lar
loopne
iret
repz
lret
das
cld
pop
dec
test
inc
jnp
movsb
aad
pushf
pop
jo
sbb
jo
enter
adc
xchg
push
adc
not
jo
cli
dec
sbb
adc
mov
sbb
and
sub
loopne
jo
push
cltd
stos
cmpsl
in
fcomp
jo
inc
mov
lods
dec
push
dec
jo
rcll
cmp
jo
dec
in
je
push
lods
loopne
cwtl
fwait
lds
sbb
xor
repnz
je
pop
popa
jnp
lock
gs
or
cmp
sti
rcll
and
jge
xchg
inc
and
sbb
orl
mov
popa
sbb
mov
adc
jo
movsl
divl
add
push
pusha
sub
cmp
dec
cli
fnsave
sub
pop
into
mov
mov
outsl
cmp
call
adc
sahf
imul
jmp
rcll
cmp
nop
mov
rorb
pop
jge
inc
jg
arpl
in
cmp
je
mov
pop
aas
mov
sub
movsb
push
push
mov
lods
loope
push
inc
and
shll
fisubs
jo
xchg
insb
int3
lods
pop
xor
std
jo
cs
repnz
sub
jnp
cld
sbb
les
outsl
fs
dec
out
fnsave
iret
dec
mov
mov
cmp
add
and
roll
pushf
or
into
sub
das
dec
sub
out
push
xchg
jo,pt
cltd
ljmp
fiadds
sub
jo
aam
xchg
mov
cmp
push
cmc
mov
jo
cmpsb
aad
mov
int3
clc
sub
mov
out
and
insl
add
jg
fistl
mov
jo
ficomps
int
outsb
call
push
out
gs
fcompl
lahf
cmp
out
lea
int3
pop
mov
aam
jecxz
xlat
mov
cmp
je
jo
ret
adc
or
outsb
cmp
shll
clc
adcb
dec
sbb
inc
jp
popf
and
sarb
jo
sbb
fwait
shrb
dec
addb
xor
inc
movsb
jmp
outsb
inc
jne
push
lret
lods
mov
into
add
mov
mov
rolb
out
jp
cmp
adc
add
ja
sub
push
jecxz
inc
gs
jo
adc
movl
wrmsr
leave
mov
push
sarb
or
ss
movsb
jo
push
sbb
jo
xchg
scas
xchg
cmp
ror
aad
sbb
push
xchg
dec
fwait
xchg
rol
stc
adc
das
cmpsl
mov
cmp
andl
mov
jae
sub
cmpsl
cmp
push
pop
in
call
jne
pop
jo
xchg
addl
push
add
sbb
call
in
inc
xchg
adc
loopne
insl
cmp
or
dec
nop
jl
jae
pop
mov
jg
mov
repnz
push
test
jae
std
pushf
push
aas
jae
cmp
jnp
divl
push
push
out
out
push
xchg
dec
cltd
jo
and
gs
jp
jo
nop
adc
aad
or
xor
scas
test
jae
jb
adc
loop
jne
fidivrs
mov
mov
add
imul
jbe
xor
out
dec
pop
stos
adc
or
outsb
pop
xor
inc
out
in
push
fsts
sahf
pop
jno,pn
fmull
repz
bnd
jae
xor
jo
mov
aad
mov
push
push
es
mov
adc
cmp
fdivrs
arpl
cmpsl
mov
sub
iret
jo
ret
cmpsb
fwait
push
jo
js
lahf
sarb
push
iret
fdiv
pop
inc
hlt
dec
lock
ljmp
dec
push
movsb
push
mov
mov
andb
jae
dec
pop
scas
mov
fdivrl
adc
or
adc
sarb
insl
js
mov
xor
stc
pop
ja
fists
lods
push
push
xor
xchg
inc
out
pop
clc
mov
jo
call
jo
lea
mov
icebp
shrl
jo
call
arpl
add
outsb
daa
jge
push
dec
shlb
shrb
jmp
into
jo
adc
orl
dec
add
xchg
imul
cmp
jae
adc
push
pop
cli
sub
ljmp
jo
daa
add
lds
jb
inc
inc
or
rcl
bound
jo
outsb
dec
data16
add
or
push
insb
dec
fmul
mov
mov
std
sub
inc
dec
bound
stc
in
sti
push
out
ja
ss
pop
push
lock
jae
xchg
test
inc
cmp
pop
int3
into
movsb
fdivl
or
fstpt
addb
aad
mov
rol
jo
xchg
or
stos
fisttps
in
push
cmp
clc
jne
lahf
inc
mov
mov
and
inc
adc
jno
imul
push
mov
stos
shlb
sbb
jmp
mov
pop
mov
and
popa
xor
out
xchg
addr16
pop
mov
jo
aas
push
addr16
or
jo
or
repnz
sti
jae
jbe
fwait
lock
ja
adc
pop
fs
call
sahf
dec
mov
sbb
xchg
push
sbb
leave
fwait
mov
sti
sub
dec
push
stc
add
data16
jle
mov
int
mov
je
add
adc
pop
jo
dec
repz
std
push
popa
insl
int3
ret
and
pushf
jb
fldenv
dec
in
lock
scas
jo
sub
jo
outsl
mov
adc
ljmp
jb
mov
inc
push
fcmovb
call
jmp
sbb
fwait
jl
mov
fsubl
mov
cli
jo
xor
stos
ljmp
mov
loope
sbb
rcll
pusha
jb
out
xor
adc
add
lds
cwtl
addr16
or
jo
flds
mov
add
push
jo
loop
loope
and
jo
loopne
push
bound
xor
jo
dec
pop
call
jo
inc
in
imul
and
test
pop
rcll
jg
mov
dec
adc
test
add
aad
dec
jae
add
mov
xor
shll
pop
mov
and
fcomps
les
sbb
mov
mov
add
cmp
scas
jbe
push
and
jo
jnp
aad
sub
sub
dec
sti
jecxz
in
adc
rorl
adc
sub
sti
aam
adc
ret
repnz
aad
negb
sbb
push
ljmp
jno
mov
pop
inc
mov
pop
insl
push
clc
push
loop
fdivl
xchg
pop
cwtl
jae
in
stos
scas
inc
cwtl
dec
xlat
cli
jo
lahf
mov
insl
fs
cmp
mov
sbb
xchg
sbb
or
xor
jo
lea
adc
push
shll
cmc
popl
jo
mov
mov
jo
dec
pop
movsb
das
mov
xchg
jo
loope
jle
lret
jae
cs
lods
neg
clc
mov
sahf
aad
lcall
or
jl
jne
jnp
jo
or
out
and
int3
sub
shrb
jno
jns
neg
mov
mov
add
lret
and
mov
push
mov
jae
mov
rcrb
insb
int
fidivl
pop
pusha
pop
popf
enter
pop
pop
pushf
fwait
mov
loop
mov
aad
xchg
lea
fbld
jg
cli
mov
fcoml
jo
pop
jp
mov
je
outsb
push
shll
mov
stos
jo
das
add
std
and
push
aam
aad
push
jl
or
jo
ljmp
jo
pop
ja
mov
pop
and
dec
imul
mov
sbb
inc
sub
mov
adc
sahf
insl
out
jns
insl
mov
push
popa
lcall
inc
das
pop
test
dec
jo
dec
gs
jge
aam
jo
and
sbbb
fiadds
les
mov
xchg
push
outsb
sbb
lahf
dec
popf
xchg
je
iret
aas
push
cmp
insl
cld
std
mov
bound
push
ret
pmullw
ss
inc
test
jl
jne
jno
push
inc
sub
inc
cmpl
clc
pusha
test
insl
or
or
stc
roll
cmp
adc
adc
sti
nop
and
inc
mov
and
mul
cmpsb
jo
lcall
pop
cmc
mov
ret
out
repnz
repz
dec
xor
push
jb
negb
data16
jge
mov
stc
mov
mov
fcomip
les
xchg
xor
cmp
jo
int
pop
jo
notb
clc
jo
dec
pop
out
add
jo
jmp
adc
jo
pop
icebp
pop
xchg
dec
sub
mov
loop
dec
es
push
repz
lahf
arpl
mov
cmp
mov
adc
sub
fildl
repz
or
sahf
call
ret
insb
mov
xor
cmp
sub
insb
inc
dec
std
daa
and
or
jo
push
push
xchg
push
mov
adc
sbb
cltd
fbstp
andb
push
enter
or
repnz
mov
jo
aaa
cwtl
mov
shlb
daa
push
jo
js
mov
jo
rclb
mov
popa
outsb
jb
mov
dec
lods
jo
jbe
push
hlt
pop
push
jo
or
cmp
add
jecxz
es
xchg
add
mov
ss
push
pop
add
int
pop
jo
insl
mov
push
insl
sbb
fwait
movsl
mov
jo
inc
pop
mov
push
push
int3
sbb
sti
out
je
pop
loopne
inc
dec
inc
jo
xchg
hlt
divl
pop
ss
lds
jo
adc
inc
nop
jo
std
push
jnp
pop
aad
jo
sub
mov
adc
or
in
mov
cmp
mov
dec
lea
xor
cmp
aad
mov
mov
addr16
xor
call
sbb
jbe
andl
movsb
lds
rcl
jo
outsb
cld
hlt
mov
xchg
jne
or
out
xchg
inc
jo
cs
push
add
sarl
jne
insb
aad
sbb
dec
or
push
fnsave
fisttps
in
and
xor
fidivrl
cmp
and
fistl
mov
dec
adc
push
mov
or
mov
ror
add
fdivl
ljmp
jo
xor
popf
adc
insl
and
jo
mov
jno
mov
mov
stos
fdiv
out
pop
rorl
iret
push
outsb
pop
add
mov
cmc
mov
mov
dec
push
jns
adc
sub
jo
es
mov
insl
fbstp
cmp
mov
xlat
cmpb
mov
fdivrs
stc
sbb
or
in
mov
xchg
xor
lret
mov
outsl
add
jae
add
ss
sbb
sub
mov
and
out
jae
mov
outsb
push
shrl
xchg
fwait
jmp
inc
pop
jge
mov
jmp
fstpt
sub
mov
mov
cwtl
fs
and
fwait
xchg
mov
das
lret
or
xchg
jns
std
mov
pop
dec
jmp
mov
push
cwtl
sub
sub
mov
jo
jl
imul
addb
fisttpl
xor
arpl
jno
pushf
mov
lods
fdivp
jg
push
jp
xor
orl
mov
pop
mov
lock
push
jo
dec
mov
in
les
inc
mov
pop
jo
je
sahf
jb
jg
loopne
ja
and
add
jo
and
movsl
jo
les
xorb
xor
fstpt
stc
loopne
jb
adc
fidivs
dec
cmp
sbb
jo
push
pusha
and
xor
loopne
or
adc
xchg
jo
lods
hlt
adc
in
push
aad
and
mov
cmp
and
shrl
jmp
jae
insl
sub
cmp
and
jp
jbe
lock
jl
xor
mov
mov
or
push
xchg
cmp
cmc
jo
add
fisttpll
jo
push
cmp
jo
push
enter
test
xor
add
mov
jnp
push
pop
add
or
ret
pop
xchg
jge
repz
insl
jo
adc
in
cld
clc
subb
shrl
pop
mov
add
outsb
inc
sti
pop
sub
sbb
jo
fdivrs
add
fwait
jo
add
inc
gs
or
jo
js
mov
mov
sbb
add
sub
and
incb
call
inc
cmp
mov
rcl
out
rcll
clc
pushf
sbb
jo
jae
insb
mov
fldenv
lods
pop
gs
lret
aad
add
out
shlb
addl
fisttpl
push
into
ja
xorl
xorl
scas
icebp
sub
movsb
mov
outsl
fucomi
mov
jo
jno
repnz
sub
test
dec
ss
stc
ja
cld
test
lret
and
inc
jbe
push
jo
mov
fimull
inc
lret
pop
jo
xchg
and
xchg
jne
jo
aad
fldl
out
mov
lret
test
xor
mov
sti
pop
lods
outsl
pop
cmp
out
clc
pusha
mov
mov
mov
mov
jp
sub
adc
rorl
out
out
out
jo
test
pop
mov
lods
push
mov
mov
inc
xchg
outsl
jo
lea
sub
fsub
testl
inc
js
push
jo
test
push
leave
int3
dec
jo
outsl
mov
cmc
jo
cmp
push
ds
sbb
xchg
jge
ljmp
push
or
push
jo
in
and
xchg
lea
mov
aaa
push
jae
fwait
rorl
loop
in
dec
outsb
or
sub
jo
inc
jl
and
xchg
jne
jecxz
dec
jle
ja
cwtl
aas
or
mov
mov
sub
sub
jnp
inc
rcr
lock
nop
fcompl
popf
cmp
and
ds
shrl
mov
push
inc
adc
pushf
add
lcall
fistpl
sbb
in
jo
pop
stos
inc
fxch
push
rcrl
loope
mov
jns
or
mov
ja
xor
imul
dec
sbb
sub
int
stos
add
into
fsubrp
jle
jo
xchg
pop
and
mov
out
imul
in
divb
jo
jmp
adc
leave
inc
jg
sbb
pushf
jge
push
push
lcall
jns
div
setnp
sub
adc
push
adc
cwtl
jo
xchg
nop
mov
xchg
mov
call
je
dec
push
cmp
jo
fidivrl
push
dec
frstor
jb
les
aad
cmp
cmp
dec
into
dec
lcall
inc
xchg
cmpb
push
pop
mov
sar
adc
rcr
adcb
dec
jo
push
in
push
and
push
jo
sbb
aam
push
cmpsl
adc
mov
adc
out
jo
addr16
mov
inc
lahf
fldcw
push
lret
dec
mov
add
pop
push
outsb
sub
call
xchg
inc
test
insl
sti
cld
dec
sbb
add
push
mov
popf
push
xorb
dec
test
mov
jo
xor
daa
jle
imul
mov
addl
jg
mov
jbe
insl
pop
lahf
les
mov
xor
pop
adc
jo
stc
dec
ficomps
cmp
aad
pop
test
pushf
fwait
insl
test
addr16
scas
mov
or
sub
jmp
mov
jo
arpl
add
mov
jo
movsl
pop
pop
test
shl
mov
mov
in
outsl
xchg
das
jl
cld
cwtl
xorb
out
dec
adc
push
mov
leave
mov
popl
mov
cmc
sub
jo
jge
pop
dec
sub
jo
lea
adc
pop
fldenv
xor
dec
lods
stos
outsb
aaa
lock
loopne
mov
int3
movsb
test
shl
movsl
jo
pushf
cli
out
adc
jle
ror
stc
jo
pop
call
xchg
jno
push
dec
or
lock
popl
adc
js
mov
mov
push
lret
popf
adc
dec
into
jne
outsl
push
jo
cmp
fucom
jo
nopl
jo
stos
mov
and
stos
aad
insb
daa
cmpsb
out
mov
pusha
repz
push
sub
and
add
aad
dec
jae
xchg
pop
push
push
dec
mov
mov
leave
adc
rcrb
loopne
sub
fsubrp
aam
aad
jl
jle
xchg
dec
or
in
mov
out
das
dec
and
stos
and
mov
add
inc
clc
sub
xchg
test
mull
push
jle
xor
mov
addb
xor
movsl
in
js
sbb
add
jo
lods
cmpsl
mov
sbb
aad
bnd
mov
insl
and
jnp
int
push
test
push
mov
xor
mov
xor
inc
pop
inc
pop
mov
popa
iret
mov
xchg
subl
sub
sahf
outsb
scas
mov
lahf
and
jmp
stos
test
push
xor
das
pop
outsl
ss
clc
icebp
xchg
ret
xor
daa
jg
sbb
sbb
fisubs
scas
sub
sub
and
mov
test
dec
xchg
imul
pop
xchg
push
xorl
push
dec
xchg
and
test
jo
push
sub
aam
jl
movsb
in
pushf
shrl
test
cmp
inc
jg
subl
sub
in
jne
and
push
fwait
mov
push
pop
iret
or
push
mov
stos
jo
roll
fdivrs
dec
xlat
jecxz
in
mov
fldcw
lock
stc
mov
cwtl
or
fstpt
jae
mov
xchg
lock
in
jo
cmp
and
dec
sub
aad
or
jo
int3
insl
nop
fwait
pop
in
sub
xor
xchg
rcll
jo
sbb
cmc
scas
jo
jne
or
fiadds
jo
xor
jmp
jo
adc
or
and
pop
add
mov
jo
xchg
incb
jo
mov
orl
pop
repz
and
jo
inc
mov
sbb
inc
in
cmp
jl
ret
push
push
mov
adc
popf
into
insb
dec
sbb
or
rcrl
pop
jo
repnz
loop
mov
jo
cs
mov
cmc
pusha
insb
jge
xorl
mov
mov
xchg
sahf
mov
add
data16
es
jo
hlt
sar
sub
jnp
fdivl
mov
xchg
filds
mov
xchg
jo
fwait
loope
ret
data16
jo
fsubrl
jl
lea
mov
call
test
iret
dec
sti
or
insl
nop
test
add
xchg
jo
mov
addr16
cmc
int3
loopne
jo
mov
jnp
jo
rclb
je
push
sbb
aad
out
mov
jle
insl
lods
addb
xchg
mov
jo
inc
mul
jg
sbb
jae
lcall
loopne
rcrb
push
lock
fbstp
ret
push
fwait
lds
cmpb
cmpsl
pop
pop
mov
dec
test
out
add
repnz
rorb
mov
jo
mov
gs
jno
mov
test
imul
in
fbld
movl
sub
xor
mov
loopne
jo
test
leave
jbe
movsb
xchg
jo
mov
iret
pop
or
ret
jo
in
repz
push
jp
pushaw
test
fcmovu
xchg
fdivs
xchg
loopne
movsb
mov
xlat
mov
pop
sub
mov
gs
fs
push
mov
mov
bound
inc
jo
mov
push
or
js
add
inc
outsb
pop
aas
pop
sub
jo
or
leave
xor
sub
or
enter
xchg
push
loop
jae
shlb
inc
cmp
into
scas
fists
mov
popa
sbb
and
xchg
mov
mov
mov
loopne
inc
movsb
and
aam
daa
jp
cltd
enter
addr16
mov
outsl
sub
xchg
lret
jae
lods
and
sbb
insb
fcompl
call
pop
testl
push
jo
or
push
loop
movsb
mov
loope
xlat
and
jo
pop
pop
mov
jo
nop
aad
imul
out
sbb
divl
push
cmp
loop
add
mov
jo
xchg
push
dec
mov
inc
sbb
outsb
sahf
dec
inc
jl
mov
jo
adc
pop
xor
mov
jp
jb
mov
jecxz
xor
xor
or
out
mov
outsb
xchg
leave
push
jnp
push
mov
in
lods
jae
xchg
nop
aad
stos
insl
cld
inc
xor
xchg
cmp
ja
lods
aaa
dec
sub
shll
jmp
popf
shll
pop
adc
lods
sub
adc
outsb
lock
lods
jmp
adc
lret
inc
inc
jo
dec
popl
jo
aas
add
xor
ret
enter
push
cld
mov
test
insw
sub
sbb
fnstcw
insb
xor
jmp
andl
cwtl
rcrl
mov
jo
dec
sub
jle
pop
push
jo
push
mov
inc
jo
pushf
cmp
and
mov
iret
or
outsb
fcoms
jg
push
xchg
dec
stos
push
add
dec
sbb
cmc
adc
cmp
jmp
mov
push
cli
pop
sar
sub
jae
and
shlb
lds
add
rcrl
loopne
gs
call
scas
sbb
pop
sarl
xorl
pop
xorb
sub
aad
mov
adc
lahf
adc
mov
aad
adc
cmp
sub
int3
or
jnp
in
pop
mov
into
out
mov
ret
cmp
ds
imul
in
rcll
scas
pop
data16
dec
jo
dec
mov
jg
mov
xor
test
jbe
lock
jo
or
fmulp
mov
negb
stos
pop
sub
pop
mov
inc
fdivrs
pop
or
jns
pushf
jo
adc
dec
nop
mov
imull
dec
lret
or
jnp
push
xchg
in
jo
cmc
in
rcll
adc
xchg
jno
mov
adc
ret
jns
mov
xorb
sarb
in
jo
ret
pop
icebp
push
pop
jnp
jne
xor
fcoms
inc
dec
das
xchg
test
add
aam
jo
lcall
jo
data16
inc
mov
jo
out
mov
push
push
sbb
mov
outsb
clc
jmp
pop
data16
fwait
shlb
cmp
jns
push
adc
add
jge
mov
jo
mov
xlat
lahf
pop
push
add
mov
cmp
or
movsl
lock
lahf
jo
lea
cmpb
push
mov
jle
ljmp
xchg
jbe
roll
push
xlat
pop
xor
or
push
jno
jl
ja
mov
cmp
call
fisubl
outsl
jo
mov
mov
addr16
fidivl
mov
stc
vpshufd
pop
cmp
adc
and
xorb
stos
add
mov
js
jo
or
inc
sbb
lock
test
mov
in
cmc
mov
xchg
das
sub
insb
push
imul
out
jp
in
rorb
inc
jo
cli
das
cmc
or
xchg
pop
cmpl
jo
add
je
push
jns
inc
mov
enter
jo
js
xchg
int
xor
lds
inc
jo
sbb
sub
popa
sbb
xchg
sarl
lock
jne
adc
fwait
jmp
fisubrs
jo
xchg
xor
xchg
test
dec
int
jo
rol
fstps
loopne
jo
call
push
mov
xchg
shlb
dec
fwait
push
pop
stos
outsl
jo
mov
jo
popa
jns
jb
data16
andb
mov
int
mov
icebp
push
push
cli
xchg
insb
ret
shrb
jb
loopne
lods
mov
stos
lahf
jp
je
or
push
push
xor
lds
pop
icebp
test
ds
mov
xor
fnstenv
test
pop
jo
lock
add
jae
mov
cltd
mov
mov
mov
shr
mov
cmpl
dec
jo
pop
sbb
aad
fwait
mov
dec
loope
test
idiv
aad
sub
jo
movsb
test
je
xor
push
adc
sti
mov
aad
mov
lods
pop
nop
ficomps
push
arpl
sub
jo
or
test
pop
push
lock
sub
mov
jae
pop
jo
inc
push
dec
mov
xor
popa
fucomip
mov
out
and
adc
adc
and
mov
inc
cli
repz
jo
cmp
cltd
mov
add
pusha
repnz
pop
data16
sahf
sub
jecxz
jl
jo
std
es
cmp
in
mov
or
or
mov
adc
jmp
push
mov
or
pop
pop
jp
jo
aad
push
hlt
push
pop
push
dec
call
and
xchg
jo
in
sbb
rcrb
jnp
cwtl
jo
test
jo
clc
mov
movsb
or
cwtl
pusha
jo
aad
add
sub
jo
add
hlt
rorb
jo
sbbl
inc
jo
xchg
pop
rclb
fnstenv
sbb
mov
push
mov
push
add
adc
sbb
jo
push
jb
inc
pop
sub
push
ljmp
cmp
test
je
inc
xor
lock
cld
lret
jbe
push
fdivl
addl
jmp
leave
mov
addr16
pop
mov
and
jns
xor
push
jo
shlb
or
jae
in
notb
xchg
cmp
inc
lock
sub
es
lcall
mov
dec
xor
je
xor
xlat
pop
dec
cmp
mov
mov
xor
enter
insl
xchg
test
adc
adc
xlat
cmp
movsl
cmp
push
clc
test
pushf
jg
pusha
cmpsl
sub
fldenv
or
int3
dec
push
push
aad
stos
jo
fimuls
repz
cli
out
sub
outsb
jo
jmp
mov
and
addl
repz
inc
adc
leave
push
pop
shl
shlb
loop
jbe
outsb
sub
xor
xor
mov
mov
push
lahf
imul
cmc
into
sti
lods
adc
stos
mov
adc
pop
xchg
jo
cwtl
shr
enter
stos
loope
push
cmp
imul
xchg
js
rolb
jae
xchg
mov
pop
lods
push
outsl
dec
jo
shlb
leave
stos
jb
jp
pop
mov
repz
jo
push
aaa
data16
inc
sbb
jo
sub
mov
out
mov
ja
adc
enter
mov
sub
loop
mov
jae
push
jo
mov
push
addr16
cmp
mov
jo
jno
jl
adc
xlat
mov
mov
aaa
mov
stc
imul
lahf
inc
loopne
inc
lcall
lock
scas
movsl
jnp
pop
aad
cmc
aas
in
lods
sbb
xchg
xchg
jge
jae
int3
xor
push
fistpll
jecxz
push
sbb
nop
aad
and
mov
iret
jle
insl
sahf
out
jno
call
jo
sbb
mov
es
adc
fsubl
pop
or
xor
pop
mov
movsl
inc
lods
mov
packssdw
flds
enter
rol
daa
adc
rep
cmc
mov
mov
jns
je
les
or
cmp
in
jo
lahf
fmull
mov
fnop
nop
out
pop
ja
mov
jne
jle
jo
subl
movsl
outsb
shl
xchg
test
xor
inc
fisubrl
cmpsl
jge
push
jle
jo
repnz
cwtl
cmp
adc
jo
lret
cltd
inc
in
stc
je
pushf
and
mov
imul
hlt
test
int
aad
push
mov
or
push
insl
mov
mov
sub
jo
or
sar
xchg
icebp
pop
mov
ljmp
add
push
aad
jae
push
mov
xorb
into
xchg
mov
inc
scas
jo
sub
adc
xchg
pop
xchg
push
jo
daa
gs
cmp
jo
mov
mov
push
loop
insl
scas
jge
outsl
and
sbb
lods
inc
test
ret
pop
fldl
jno
enter
mov
add
cmp
or
mov
popa
scas
movsb
mov
mov
cmpsl
sbb
adc
clc
sub
mov
add
and
jo
mov
add
xchg
adc
xor
push
jo
xchg
test
and
jmp
pop
mov
xchg
outsl
xchg
popa
mov
mov
or
inc
jo
cmpsl
dec
mov
jnp
xchg
inc
mov
lock
mov
bound
xor
imul
ret
push
int
jp
jne
jecxz
mov
cld
mov
add
and
adc
loop
jo
dec
enter
or
idiv
cmc
xchg
pusha
mov
adc
jo
fistpl
jne
stos
iret
lock
nop
xchg
and
mov
test
out
jo
aad
into
xor
out
addb
push
xchg
mov
cmpsl
mov
xor
jo
or
cltd
fistpl
popf
hlt
jo
sahf
pushf
inc
test
dec
and
lds
insb
ficoml
jo
lea
mov
lock
sahf
mov
out
mov
push
dec
lock
push
pop
outsb
sbb
fidivs
ret
dec
insl
add
pop
push
xchg
dec
sub
iret
jnp
fxch
push
mov
and
dec
mov
cltd
fistpll
mov
jo
push
pusha
xchg
fistpl
mov
jo
fs
aad
cwtl
gs
ljmp
filds
fs
add
and
or
fdivrl
inc
in
js
cmp
pop
jbe
jo
movsb
movsl
loope
lea
xor
fmull
out
lock
sub
lock
jle
mov
push
arpl
lret
in
jo
pop
xchg
push
push
or
insl
ret
lea
lods
jo
stc
xchg
inc
pop
repnz
cmc
jo
mov
popf
loope
jae
xchg
dec
push
sub
stos
jle,pn
insl
xchg
mov
movsb
dec
jl
addr16
es
rorb
ss
adc
inc
push
scas
in
lock
pop
shlb
ja
cs
inc
movsb
loopne
pop
mov
insl
popa
je
mov
sbb
insl
insb
outsb
daa
rorl
sbb
cwtl
jg
jo
outsl
sub
inc
jo
mov
pop
jne
xor
fcomip
lods
fcoms
jp
loope
adcb
add
mov
xchg
divl
push
xor
sar
jno
jecxz
mov
movsl
dec
add
in
push
add
js
divl
sub
jne
call
xor
fcompl
mov
mov
iret
jmp
jo
fldt
std
jo
push
cmp
mov
in
xchg
add
push
add
scas
out
test
lock
sbb
iret
push
inc
push
xchg
and
roll
jo
xorl
add
dec
jo
mov
dec
lea
bnd
inc
fcoml
aad
imul
push
xchg
mov
mov
negb
xor
xor
mov
into
mov
pop
and
jo
mov
repnz
mov
jo
sub
stos
jo
mov
pop
xor
leave
loop
mov
pop
inc
lock
push
dec
mov
push
mov
ja
imul
icebp
fistpll
lock
add
idivb
test
hlt
data16
dec
into
fldenv
shll
mov
mov
outsb
jo
cwtl
xchg
add
aam
sbb
sub
push
movsl
and
lock
ret
repz
jnp
pop
fs
jo
pop
or
lds
sub
jae
mov
and
or
and
dec
or
mov
push
out
sbb
xor
xor
fisttps
fs
sahf
add
test
test
sub
andb
into
jp
pusha
sub
pop
dec
jo
add
adc
inc
push
adc
jo
mov
out
pop
out
jo
push
mov
rorl
and
push
sbbl
dec
fs
je
and
inc
mov
mov
add
lock
xchg
inc
push
gs
mov
fistpl
mov
test
arpl
xor
pop
mov
jnp
icebp
fdivs
xchg
and
jae
xchg
xor
xchg
cmp
xchg
lahf
dec
mov
xorl
ret
rcl
jns
and
add
fdivrp
adc
or
sbb
rcrb
xor
push
pop
xchg
jmp
test
or
mov
push
jo
popf
xchg
add
lret
cmpsb
aas
aad
insl
and
and
lock
jbe
push
sbb
clc
jo
sbb
fidivs
mov
insl
shl
jne
mov
jo
aad
fimuls
leave
or
pop
add
iret
fwait
adc
push
insl
inc
xor
mov
out
mov
iret
adc
jo
pop
mov
lea
pop
notb
dec
sbb
dec
fldenv
jb
push
push
jns
cmp
pusha
jo
mov
call
xor
jno
or
xor
ljmp
sub
jbe
addr16
mov
ja
mov
loopne
rorl
into
cltd
addr16
mov
insl
fmull
xlat
push
or
xchg
cli
movsl
outsb
ret
loopne
jno
lock
mov
mov
jmp
adc
lahf
xchg
xchg
std
and
jb
push
or
lock
pushf
sbb
add
adc
pmaxsw
call
xchg
jo
cld
xchg
negl
mov
mov
lock
jne
mov
cmpsl
mov
test
mov
jo
cs
mov
mov
inc
rcll
push
jnp
or
js
cmpsl
call
mov
and
xchg
mov
pusha
sub
sub
das
insl
push
cwtl
fidivrs
jo
cmp
mov
jne
cli
decl
cmc
add
or
push
push
les
jo
aaa
ret
adc
cmp
test
xchg
dec
pop
xor
mov
inc
cmp
mov
lds
push
jo
addb
sub
jo,pt
sub
xlat
jle
insl
xor
jmp
adc
jo
subb
ljmp
add
into
shrl
insl
jmp
xor
int3
push
dec
push
or
jo
add
popf
fistpll
jo
dec
xchg
cmp
xor
fimuls
pop
adc
jo
pusha
es
dec
lds
xchg
mov
jge
mov
sbb
jo
arpl
popf
loopne
jo
jns
xor
jae
adc
ret
mov
cmp
inc
es
ss
adc
inc
cmp
mov
in
nop
jae
jbe
stc
mov
mov
sbb
arpl
push
adc
cli
jle
xchg
push
sbb
dec
lahf
aam
test
jo
push
push
shlb
adc
cmp
pop
fstps
int
rcrl
mov
outsb
imul
mov
push
fnstenv
mov
and
call
popf
sub
hlt
jo
ret
dec
xlat
int
inc
test
leave
mov
out
lahf
jo
rcll
lcall
outsl
xor
out
pop
and
pop
out
ficomps
push
in
xchg
addr16
insl
mov
les
addb
mov
xlat
cld
inc
jne
jo
mov
out
pop
jge
sbb
insb
mov
scas
les
mov
or
cmp
jo
adc
sarb
sub
mov
jo
aam
adcl
mov
jo
cltd
in
pop
cmc
popf
jae
mov
or
pop
jo
mov
shlb
push
sarl
hlt
jl
jae
sub
fidivl
and
test
lcall
adc
aas
mov
mov
cmp
xchg
jo
test
out
add
cmp
and
sub
sbb
fnsave
stos
jo
sub
xchg
dec
jo
mov
xchg
push
cmp
sbb
scas
jo
aam
ja
mov
pop
stos
xchg
xor
repnz
lods
in
rolb
stos
fldl
outsb
jo
jbe
inc
mov
pop
add
iret
les
jae
stc
push
pop
hlt
adc
cmp
cmp
mov
dec
mov
and
jo
pop
adcb
push
aad
add
dec
fmul
or
orb
jo
gs
mov
or
jge
pop
jg
and
test
jo
js
rcr
xchg
loope
jo
mov
jne
mul
aaa
in
subl
nop
imul
jle
fwait
xchg
out
adc
sub
push
xchg
fcmovb
imul
orb
aam
sub
fcomps
dec
loop
scas
dec
mov
mov
int3
pop
sbb
jmp
mov
push
push
cmp
jo
push
fdiv
and
sbbl
int
xchg
add
mov
sbb
xor
sbb
aam
inc
dec
dec
fisubs
push
jo
out
cltd
dec
mov
lock
push
or
ljmp
pop
mov
jo
ja
nop
je
fnsave
cwtl
xlat
flds
adc
mov
jo
rclb
divb
or
mov
push
jp
push
cmp
in
mov
insl
cmp
jbe
lods
cs
cmpsl
test
push
add
in
jo
ja
push
std
mov
xchg
test
lcall
jmp
nop
jp
jb
jo
sbb
xchg
jae
xor
and
adc
xchg
fnstenv
fnstsw
repz
sbb
stos
mov
push
out
push
add
aam
in
test
jo
ret
pop
fistpl
mov
je
jecxz
ficoms
cs
leave
xchg
sbb
mov
mov
movsb
lret
dec
jl
lock
sub
fnsave
and
nop
push
push
mulb
mov
mov
in
push
lods
dec
jo
dec
or
loopne
pop
sub
cs
jle
jo
hlt
mov
insb
ficoms
lods
test
jmp
insl
insl
aad
mov
xchg
loope
clc
shll
and
fcompl
jo
aad
imul
iret
enter
fld
add
xor
dec
xor
mov
mov
cltd
xor
fwait
in
push
cmp
jne
xlat
dec
and
addr16
jnp
jb
sbb
jo
lcall
jo
mov
jo
fsubl
pop
sbb
shll
xchg
iret
jge
enter
ljmp
add
xor
stc
jo
das
jle
add
mov
mov
jl
mov
aad
inc
sbb
icebp
jno
mov
ljmp
and
adc
sbb
mov
pop
imul
jnp
add
adc
push
push
sub
jo
lea
bound
jecxz
out
out
loopne
ret
add
jo
arpl
jecxz
cld
mov
xchg
add
lock
inc
fldt
pop
mov
lock
testb
add
lret
pop
lea
sti
mov
push
daa
shlb
enter
sbbl
in
bound
mov
jg
mov
arpl
loopne
xorb
jo
fisubrs
loop
push
dec
sbb
pop
sub
cmp
add
dec
xor
cli
push
pop
je
mov
adc
dec
adc
add
sarb
into
arpl
cltd
cmc
fbstp
fnstcw
test
int3
outsb
es
and
mov
lods
sbb
stc
imul
inc
in
movsl
aad
lock
xchg
pusha
inc
fmull
xor
pushf
xchg
pop
and
pop
arpl
test
fisubrl
xchg
jge
inc
mov
imul
insb
jns
leave
mov
sub
sbb
mov
mov
mov
nop
shr
pop
cmp
cwtl
jo
insl
xorb
fiadds
mov
pop
movsb
cwtl
jo
loope
das
es
addl
js
cmpsl
mov
jl
jo
push
xchg
xchg
mov
push
mov
push
push
aam
icebp
jo
mov
jbe
add
outsb
fs
sbb
lock
adc
ss
mov
jo
in
sbb
mov
jle
jo
xchg
sbb
je
add
jo
mov
jno
jo
stos
pop
imul
sub
loopne
test
add
pop
lods
adc
sti
int
shrb
pop
mov
push
push
jae
fsubr
push
imul
mov
out
push
and
mov
jo
and
arpl
in
sbb
aas
pop
inc
pop
inc
dec
xor
push
xchg
cmpsl
xor
sub
pop
lock
in
in
cli
jge
mov
push
mov
pop
mov
jle
jo
loope
adc
aam
ror
ret
push
mov
cs
rep
jae
pop
stc
fstpt
cmpsb
jo
outsb
into
xchg
xor
add
leave
mov
daa
pop
lock
lods
movsb
out
das
pop
andb
cmp
jae
lahf
mov
iret
mov
pop
cmpsb
mov
or
fisubrl
adc
sti
cli
pshufw
icebp
pusha
pop
stc
into
push
lock
jno
cmp
mov
call
cmp
pop
and
cs
jo
insb
cld
pusha
cmpsb
in
aad
jo
insl
mov
pop
ret
jo
mov
test
push
iret
pop
jae
cmc
notl
out
mov
pop
or
xchg
mov
jo
aas
jg
flds
ds
push
scas
or
insl
lods
jp
inc
pushaw
test
rol
mov
ja
dec
push
ds
loopne
mov
push
add
int
pop
mov
or
lods
lcall
xor
mov
adc
aam
test
jo
aas
push
out
push
or
aad
outsl
adc
mov
jo
sub
sti
fimull
xor
cmp
jo
les
xchg
lods
push
cmp
clc
insl
sbb
add
lret
lods
adc
xorl
add
jo
fadd
mov
ljmp
ret
xor
cmp
jb
insb
xlat
mov
xchg
into
mov
in
dec
out
loopne
outsb
inc
test
ret
xor
js
xlat
mov
int
jno
jb
mov
insl
not
push
jo
pop
imulb
fldt
test
pop
mov
sub
popa
or
mov
test
pop
cmpsb
push
xchg
data16
dec
and
inc
dec
jl
inc
pushf
ret
subl
xchg
insb
xor
mov
sub
xchg
jo
mov
sahf
rcrb
mov
icebp
je
push
xorl
fsubl
dec
push
jo
les
or
pop
fprem
push
loope
jo
dec
pop
lea
dec
push
jo
sbb
xor
mov
adcb
or
repnz
insb
js
cmp
jne
ljmp
xchg
push
jo
mov
adc
or
bound
inc
jo
sub
lahf
push
or
push
pop
pop
js
jae
rolb
lods
out
ret
js
loope
inc
pop
imul
pop
xor
mov
xchg
mov
and
jo
rorb
cmpsl
and
jo
pushf
or
pop
lock
jo
or
out
jo
aaa
lret
pop
push
pop
adc
mov
pop
push
sbb
xchg
in
and
cmp
iret
or
std
pop
out
fs
in
outsb
mov
xor
add
jae
sbb
js
mov
jbe
pop
or
mov
inc
mov
push
add
jo
shlb
mov
sub
ljmp
inc
jle
xchg
add
out
aas
ja
in
sbb
pusha
sti
and
cld
jae
and
nop
leave
int3
push
push
xchg
out
mov
inc
push
ss
jae
aad
or
mov
call
arpl
sbb
and
push
jg
aad
inc
loope
fcoms
jo
fimull
arpl
inc
pop
iret
insl
jo
jns
jle
aad
pop
jo
dec
sarl
push
outsl
jne
push
mov
std
shlb
test
xor
and
jo
sub
mov
cmp
inc
sub
sbb
add
xchg
lock
or
push
repz
shlb
aas
push
leave
cltd
lock
lret
mov
jne
dec
aad
cmp
xchg
jae
jecxz
inc
iret
mov
stos
hlt
pop
imul
sub
mov
jge
mov
xchg
outsb
sahf
xlat
cmp
adc
xchg
sbb
rcll
out
mov
rcrl
jo
fdivrl
fnstenv
arpl
sbb
jo
repz
fsubrp
ds
stos
push
insb
pinsrw
out
insl
cmp
xchg
add
pop
je
add
add
pop
xchg
shll
insl
jg
lock
shlb
adcb
filds
mov
imul
insb
ja
cmc
das
out
sub
jo
push
enter
test
add
shlb
fcomi
bound
xchg
scas
jo
jae
lea
out
cmp
sbb
movl
or
shl
addb
jo
std
je
xchg
mov
jo
insb
pop
mov
push
push
or
sbb
aad
jne
sub
jp
fidivs
les
mov
cmpsb
add
leave
mov
fmulp
adc
repnz
insl
adcl
push
iret
add
jo
mov
pop
fnstenv
sub
cmpsb
in
out
jo
test
mov
inc
xchg
cltd
popa
aad
lret
mov
pop
ss
outsb
ja
sub
jo
xchg
mov
inc
jo
or
jo
mov
setnp
adc
je
sbb
fstps
imul
add
push
jo
mov
lods
sbb
movsb
je
jmp
ljmp
enter
pusha
adc
cmp
mov
cmp
adcl
aad
adc
out
fs
mov
xlat
mov
jmp
adc
scas
nop
xor
arpl
test
out
cmp
push
fwait
mov
stos
jo
and
test
in
xchg
jo
pop
lahf
sbb
pop
or
xchg
aad
fsubs
ja
sti
enter
insl
in
dec
pop
mov
lea
cmp
fxch
jae
cmp
iret
xor
ror
jae
aad
out
push
pop
mov
daa
and
push
mov
push
lods
or
lret
rol
pop
rclb
add
enter
mov
jge
xchg
repz
out
ss
or
pushf
jmp
push
inc
testb
mov
push
add
pop
mov
lcall
pop
leave
into
adc
push
aad
or
cmp
jg
insl
out
pop
popf
jle
or
aaa
aas
sti
arpl
jno
push
xchg
add
stos
ret
sbb
lea
mov
int3
adc
inc
push
sbb
in
push
or
xchg
call
sub
and
adcb
test
cmpsl
pop
pop
aad
xor
jno
inc
xchg
mov
sub
dec
je
and
outsl
mov
dec
out
pop
sbb
xchg
jo
pop
dec
aaa
fldt
mov
xor
or
push
fbstp
push
rcrl
xor
fsub
roll
or
xlat
jo
mov
push
push
pop
push
das
push
jbe
rorb
out
les
cmp
movsb
jbe
cwtl
lcall
jo
push
in
shrb
jo
mov
test
jo
mov
push
test
ljmp
sahf
mov
outsb
sub
inc
inc
out
mov
in
jg
sub
cmpsb
dec
sarb
mov
pop
or
in
dec
ja
in
ficoms
lea
and
push
cmpsl
es
jae
insl
sti
push
mov
call
addr16
pop
ja
daa
or
into
inc
fwait
lock
pop
inc
sbb
test
and
insl
out
xor
sbb
push
sub
mov
dec
test
call
dec
xchg
inc
cmp
jle
je
in
addr16
fmul
jo
inc
push
ficomps
shlb
inc
or
push
adc
gs
test
jp
in
lock
jbe
mov
lock
pop
dec
cmp
gs
repz
push
testb
mov
xor
fbstp
dec
sub
pop
push
adc
jecxz
movsl
pop
cld
jne
outsb
cmp
mov
dec
sub
pop
jo
stc
icebp
rorb
daa
imul
jo
ds
iret
arpl
push
rcl
jo
adc
sbbl
int3
adc
jo
aad
shlb
popf
mov
dec
inc
and
mov
pop
inc
cmp
mov
adc
mov
pop
jecxz
stos
adc
out
outsb
rcll
xor
add
add
push
xor
mov
jo
push
push
into
mov
or
xlat
pop
stos
aam
mov
mov
je
push
das
sbb
jo
dec
xchg
aaa
pop
cmp
bound
xchg
ss
adc
ret
ret
inc
xchg
scas
push
jae
rcrb
inc
in
jne
xchg
fimuls
or
jo
inc
emms
adc
out
jo
mov
add
lods
and
in
adc
stos
jae
popf
push
fsubrp
pop
nop
mov
lods
pop
push
mov
jae
andb
popa
push
mov
xor
std
icebp
mov
jo
jecxz
inc
mov
in
or
pop
int
mov
jne
ljmp
out
insl
pushf
dec
movsl
pop
stos
sahf
in
nop
popf
loop
jo
aas
adc
push
shl
jmp
sbb
or
andl
lods
jg
push
pop
aam
aad
loopne
lahf
dec
xor
sbb
insl
fisubrs
lods
jo
cmp
out
test
insl
mov
mov
ficomps
cmp
sbb
adc
addr16
fstps
hlt
shlb
xchg
mov
loopne
cmpsb
dec
inc
jno
push
aaa
push
imul
cmpsb
pop
shrb
jae
xchg
insl
adc
vmresume
ss
jo
stos
xlat
addr16
pop
or
jo
lea
mov
pop
push
dec
jo
loop
lret
shll
arpl
xor
add
lret
xchg
scas
bound
stos
mov
mov
loope
mov
jb
dec
mov
pop
call
pop
xlat
mov
jo
inc
add
es
scas
cmp
rcrb
rcll
movsl
jo
test
sbb
mov
jo
ljmp
jecxz
sarl
int
xchg
jbe
cmpsl
xor
fstpl
cmp
and
dec
xor
ja
sub
cmpsb
jo
dec
popf
fwait
pop
pop
lods
adc
mov
pop
sbb
add
cwtl
clc
sahf
lret
jo
cmp
cmp
push
in
jle
jo
int
mov
jp
std
out
mov
jo
adc
xchg
xor
stos
mov
or
or
jp
outsl
push
mov
cld
jmp
call
cmpsl
adc
ret
xchg
or
cmp
jo
stos
loope
retw
jecxz
add
or
lahf
or
dec
adc
out
pop
add
movsl
cmp
pusha
inc
jae
xchg
mov
sbb
ss
jo
sbb
dec
mov
cmc
cmp
adc
add
cmp
lods
jo
mov
adc
lret
mov
icebp
rcr
and
ds
adc
inc
jo
fwait
loope
shr
sbb
and
jo
cmp
cli
mov
lods
loope
fstpt
mov
pop
cmp
xor
xor
leave
outsb
and
test
add
jo
add
insb
dec
fstpt
jo
xor
pop
int3
insl
sbb
dec
and
jmp
jo
fnstcw
outsb
sbb
ret
push
or
push
adc
jp
testl
ret
iret
insl
std
ficompl
cmpsb
mov
push
or
pop
rcr
testl
int
cltd
xchg
loopne
adc
pop
sbb
fdivp
jbe
jo
mov
pop
mov
jmp
outsb
fcomi
ret
add
xchg
jnp
inc
cld
jo
popa
sbb
pop
pop
lods
dec
shll
mov
xchg
adc
push
jo
aam
adc
xadd
pop
pop
push
sub
call
or
call
mov
ja
inc
xorl
lret
xchg
ret
mov
xor
aad
adc
insb
or
jo
addb
fldenv
dec
scas
sbb
mov
jge
push
testb
push
or
sub
or
rcrb
fwait
jno
jo
mov
notl
xor
push
jo
xchg
xchg
push
mov
loope
cmpsb
push
ss
push
cli
adc
mov
repz
ret
adc
jmp
jns
jo
jmp
aad
aaa
mov
jo
mov
fistpl
sub
imul
sbb
jo
jne
and
ret
out
jo
pop
and
add
int
ret
scas
movb
ja
push
xchg
jmp
scas
push
jo
mov
pop
lods
mov
out
mov
lds
hlt
pop
cmc
addr16
adc
jo
xorl
cmp
jge
xor
mov
notl
push
mov
pop
dec
jo
xchg
sbb
cmpsl
hlt
sub
add
cmp
inc
loop
jo
icebp
insb
cmpsl
fidivl
adc
loop
mov
in
mov
aam
ljmp
add
aas
popf
jo
cmpl
mov
jo
cld
jmp
jo
imul
adc
in
enter
daa
int
cmp
data16
scas
mov
inc
fsts
les
fs
mov
sarl
orl
jo
lcall
jo
and
loope
in
jo
mov
lds
xlat
cmc
cwtl
fmuls
lahf
mov
jecxz
mov
cmp
jo
lds
mov
inc
jo
test
adc
xor
test
mov
lods
or
gs
decl
cmpsb
cmp
jo
jle
lea
lret
arpl
xchg
xchg
shll
sub
fidivl
cmp
inc
jo
adc
outsl
inc
daa
push
adc
insb
xor
adc
jo
push
sub
das
js
outsl
or
xchg
pop
inc
je
in
and
sub
test
dec
cwtl
xchg
jo
nop
mov
cwtl
fnstenv
xor
lahf
dec
insl
aam
aas
jge
mov
and
or
rorb
sub
jo
adc
lahf
push
cmp
call
fisubrl
jo
movsb
cmp
jo
cld
fidivrs
leave
or
pop
subb
sarb
mov
jo
pop
test
push
push
test
fidivs
sbb
mov
xor
or
jo
cmp
cmp
or
fdivl
push
std
jo
mov
xor
cmpl
jo
lods
rorl
mov
inc
outsb
add
cmp
jo
out
dec
mov
adc
lock
cmp
xor
jl
sbb
std
push
mov
jg
mov
push
jo
adc
mov
push
inc
cmp
les
mov
jo
sbb
push
dec
pusha
ret
add
and
cmp
gs
xchg
pop
cmp
cld
mov
jno
test
movsl
or
jae
mov
enter
ja
dec
pop
inc
fsubp
xchg
repnz
movsb
jne
cmp
push
jae
aaa
jno
leave
repz
pop
addb
jo
paddsw
jo
ljmp
add
insl
gs
rcrl
in
xchg
pop
inc
jae
movsl
data16
sti
mov
mov
mov
push
fistl
rcr
cmc
out
push
push
xor
push
icebp
jo
ficomps
push
inc
jo
dec
jecxz
aad
loop
ja
mov
pop
cmpsl
loopne
and
and
sub
fisubs
pop
push
mov
mov
mov
xchg
pop
insl
xor
sub
jle
jo
or
insl
dec
hlt
loop
mov
add
test
lds
adc
jns
push
mov
jo
push
mov
mov
xor
xor
shlb
mov
lock
jmp
add
pusha
xchg
or
popf
aaa
jo
pushf
dec
xor
pop
in
xchg
jo
mov
mov
mov
dec
mov
xlat
sub
loope
or
jecxz
push
daa
loop
cmp
push
popf
mov
jo
pop
add
mov
dec
ja
lds
sbb
sub
mov
sub
pushl
jg
repz
lods
jge
lock
push
mov
jecxz,pt
mov
repz
jle
push
dec
ror
jo
arpl
enter
ja
pop
dec
mov
push
push
std
roll
jo
fwait
pushf
shlb
fimuls
pop
jo
push
sbb
xor
pop
ret
mov
testl
pushf
jmp
je
mov
lock
stos
gs
ja
adc
pop
repz
outsb
jo
or
dec
mov
je
popa
adc
push
xor
ret
in
out
mov
jo
out
aad
aam
popf
push
sub
repz
loopne
push
lock
mov
jno
out
dec
jle
mov
sti
xor
mov
cmpsl
sbb
sbb
fwait
jo
shll
shll
and
mov
push
int3
testl
test
out
xchg
mov
nop
popf
cmc
fwait
jo
sti
xchg
push
inc
loope
fdivl
mov
stos
cli
aad
xchg
jo
insb
push
je
jmp
divl
sub
xchg
mov
nop
sub
mov
rclb
shll
jo
vpaddq
xor
dec
push
loope
jo
xlat
pusha
test
jle
insl
fmul
pop
inc
sbb
es
icebp
fists
mov
jo
fwait
sub
int3
jnp
push
jo
fnsetpm(287
or
push
loopne
jo
lods
fs
xchg
pusha
call
cltd
adc
stc
fucomip
dec
jp
jo
in
fcmovnb
pushf
sbb
sbb
push
add
pop
xor
xor
inc
jne
enter
add
sbb
and
xor
jnp
jae
sub
lock
cmp
loope
mov
adc
outsb
gs
cmp
jo
inc
shl
pop
xchg
jo
mov
ljmp
gs
pop
push
sub
add
je
push
jg
arpl
cmp
jecxz
pop
and
sbb
sti
iret
jo
icebp
inc
out
xchg
mov
push
jo
in
sbb
and
push
mov
pop
push
out
jo
mov
cmp
push
xchg
scas
sarl
dec
mov
inc
ss
fmuls
aas
adc
mov
mov
cmp
push
cmc
cmp
jb
mov
scas
mov
mov
jo
mov
pop
flds
insb
sub
add
lahf
fsubrs
stos
rorl
scas
jg
ja
je
jle
loopne
and
mov
dec
mov
jmp
sbb
fdivrp
mov
jbe
jo
add
fnstcw
ljmp
shlb
lods
mov
and
cmp
xor
push
das
add
incl
adc
lds
enter
cmc
push
pushf
mov
cld
mov
or
sub
out
xor
sub
cmp
jl
lods
pop
cs
cld
and
in
xchg
rcl
mov
mulb
xchg
mov
cli
mov
jns
fcomi
gs
pop
xor
dec
lock
ja
cmc
pop
lock
jp
jo
aaa
stos
cmp
jo
fstps
dec
push
xchg
loopne
jo
daa
jnp
xchg
xchg
sahf
adc
push
or
xor
inc
mov
push
icebp
mov
orb
outsb
pop
jo
push
dec
das
mov
push
push
mov
and
xor
inc
call
jb
xchg
inc
mov
jo
sbb
push
jle
jo
imul
jo
sub
dec
in
aaa
lods
jo
and
imul
inc
mov
lahf
mov
aam
mov
stos
outsb
adc
mov
sub
ss
leave
dec
xchg
test
out
add
int
jp
into
pop
mov
mulb
add
pushf
push
sbb
mov
lcall
rcll
cs
adc
imul
xor
aaa
pop
mov
das
stc
repz
mov
inc
mov
outsb
mov
pop
adc
lahf
xor
mov
test
arpl
daa
jl
and
jae
pop
fsubs
mov
fwait
mov
ja
jo
xchg
insb
int
xor
inc
mov
mov
xchg
jnp
clc
mov
pop
out
decl
adcb
daa
jo
or
andl
out
pop
test
mov
xchg
imul
dec
mov
cmpsl
shrb
push
cmc
and
fstl
mov
jp
lret
push
ds
in
push
jo
stos
mov
pop
jo
cli
mov
adc
dec
dec
jo
out
mov
arpl
mov
xchg
jo
lahf
icebp
mov
imul
ss
xchg
inc
jo
push
ds
dec
insl
div
add
add
ficomps
dec
cli
dec
cmp
mov
and
lea
xor
sbb
mov
movsl
insl
push
sbb
or
xchg
xchg
push
jae
mov
cmp
push
roll
jo
xor
mov
jo
cli
pop
dec
push
xor
cld
ret
rcrl
jo
mov
lret
fwait
jo
pop
stos
fnstenv
add
outsb
push
pop
or
mov
sub
sbb
jno
jo
ja
shrl
sub
lret
xchg
push
jo
xor
stc
pop
adc
nop
jb
popl
enter
fs
out
add
lcall
jae
sub
jo
pop
pop
sub
xor
cmpsl
leave
ficomps
pop
arpl
sbb
decb
mov
or
and
jo
add
sbb
fisttpl
test
clc
inc
pop
jecxz
cmp
or
mov
inc
adc
and
pop
pop
add
sbb
es
in
sarb
rcrb
ss
sbb
lea
or
push
xor
dec
cwtl
jecxz
xchg
inc
mov
in
fdivl
adc
pop
insl
pusha
popa
dec
sbb
andb
pop
push
jae
xabort
fistpl
adcb
and
inc
int3
jl
mov
xchg
mov
test
sub
jle
or
adc
add
inc
dec
sti
sub
gs
mov
cmp
mov
test
mov
fwait
dec
cmp
xchg
fsubr
jo
inc
fiaddl
lds
ret
das
cld
pop
cmp
inc
lods
jo
and
in
or
pop
cmp
pop
xchg
scas
push
jo
and
ffreep
jo
jne
fidivs
fildl
pushf
jo
mov
mov
pop
mov
and
nop
aam
push
and
sub
pop
or
stos
out
and
aas
jo
add
mov
loop
push
pop
dec
xor
adc
inc
aam
and
pop
sub
jo
push
insl
aad
sbb
pop
push
fld
push
aaa
lahf
in
adc
in
rcll
dec
insl
test
add
cmc
and
inc
add
dec
jl
dec
lods
jo
into
inc
pop
sbb
ficomps
negl
sti
dec
addb
cmp
cld
dec
in
jae
jo
adc
mov
mov
inc
enter
adc
insl
mov
push
cmp
jbe
scas
outsl
cmp
add
loope
test
mov
or
daa
insl
test
out
in
xor
jmp
jo
scas
push
jo
xchg
leave
sub
insl
ja
jo
add
inc
aaa
int
insl
adc
lcall
cmp
call
jo
mov
jb
jnp
popf
jo
shll
out
add
pushf
push
pop
dec
add
les
push
lds
sub
or
out
cld
mov
les
adc
dec
push
nop
imul
sbb
lock
out
ja
movsb
ret
mov
popf
cmpsb
jo
push
push
pop
cld
push
shll
pop
mov
add
repnz
jo
fadd
add
test
ja
popa
lock
fwait
jo
jmp
mov
gs
sbb
push
jne
xor
ja
popf
arpl
or
jne
into
mov
notl
je
out
push
sub
adc
nop
scas
push
push
jnp
jo
aas
jne
mov
int3
stc
push
cld
mov
mov
xchg
repnz
andb
arpl
movsb
jo
lret
xlat
fucomi
cs
jne
lods
out
lock
pop
pop
push
jo
lods
mov
push
insl
scas
lret
arpl
and
jmp
mov
adcb
es
or
aad
insl
decb
adc
or
jae
orl
popa
clc
jb
je
mov
call
data16
sub
pushf
jo
jbe
aad
int
mov
mov
lret
repz
xor
lea
push
popf
push
adc
jo
mov
sub
rcll
fdivrl
mov
jo
xrelease
inc
aaa
xor
pop
push
lret
cmpsl
insl
sbb
dec
cld
std
ret
push
mov
idiv
ret
in
test
mov
je
pusha
mov
xor
iret
jo
sbb
xchg
scas
popa
push
xchg
mov
dec
xor
cmc
scas
filds
mov
fcomps
cmpb
mov
loopne
jo
lahf
fmuls
push
jge
mov
and
push
in
outsl
inc
shrb
lock
fwait
cmp
daa
push
jb
fsubs
roll
cmp
inc
pop
and
mov
xor
aad
xorb
insl
sbb
sub
fstpt
dec
in
xchg
jo
mov
jno
jo
push
cmp
pop
pop
or
or
fistps
nop
ljmp
lahf
out
sbb
sub
cmpsl
inc
add
jo
daa
ja
in
rolb
adc
lahf
xchg
jp
xchg
cmp
insl
push
not
stc
jo
cmpsb
mov
jo
fs
jno
mov
xchg
in
out
cmpsl
xchg
aad
mov
sti
cwtl
pop
jno
addr16
add
lods
cmc
icebp
jae
adc
das
xchg
or
enter
cmp
cli
push
jae
xor
jo
push
outsb
xor
xchg
lods
jo
fcomps
rcrb
dec
jno
jns
mov
pop
jle
mov
movsl
fcmovnu
inc
add
jo
jge
fwait
movsb
aad
nop
jo
lods
sub
rolb
dec
pop
mov
cmpl
fdivs
dec
push
lds
pusha
inc
push
jo
and
xchg
push
sbb
rcrb
roll
mov
enter
jo
loope
scas
pop
icebp
mov
mov
jae
ss
jo
scas
mulb
jo
das
lret
loopne
aaa
gs
fisubrs
mov
aad
jns
xor
jae
pop
push
lods
jo
or
jo
mov
je
int
into
insb
cmp
lds
jo
pop
push
and
mov
icebp
lahf
or
push
add
sarl
and
xchg
outsb
lahf
or
ja
nop
repz
adc
jo
loope
inc
cmpsl
cmp
jbe
in
test
pop
js
jo
sbb
pop
jo
hlt
jbe
les
and
insl
sub
fs
adc
xchg
fists
aaa
dec
sahf
movsb
scas
push
mov
mov
loopne
pushl
and
mov
dec
pop
and
lret
sti
repz
dec
iret
icebp
inc
stc
xchg
mov
popa
loope
mov
mov
xor
cmpsb
in
cmc
lods
sub
addr16
jmp
popf
jo
ret
dec
dec
pmaxub
xor
int3
aam
pop
inc
jp
lock
jo
ror
xchg
mov
adc
rcll
xor
daa
rolb
aad
sub
pop
xor
push
pop
add
fmulp
jo
pusha
push
test
mov
jo
outsb
subl
add
jo
jg
sbb
mov
sbb
scas
jmp
mov
cmp
fwait
jo
adc
push
jbe
push
mov
xor
sbb
mov
ja
jle
sub
xchg
outsb
mov
dec
xchg
pop
test
insl
pushf
fcoml
xchg
lds
mov
shll
in
jo
push
mov
mov
popa
lock
ja
jo
inc
push
aam
outsb
lods
lcall
lea
sahf
pop
hlt
in
cs
jo
mov
data16
js
inc
xor
push
aad
cmp
sub
scas
mov
mov
sub
jnp
xchg
and
mul
jo
lcall
jo
sub
aaa
mov
jbe
movsb
out
mov
aad
jo
mov
js
sbb
outsb
adcb
push
iret
or
jo
dec
fidivrs
loopne
jo
lcall
jno
testl
ret
movsb
pop
adc
jo
in
aad
pop
cli
fstpl
xchg
inc
xlat
push
sub
push
mov
fwait
popa
mov
sbb
in
pop
mov
lcall
xor
inc
jp
outsb
int3
fidivs
xchg
fcoms
mov
dec
insl
into
outsb
push
in
xchg
adc
data16
int
daa
inc
lret
jo
jmp
and
cmp
mov
pusha
or
cmc
test
fildl
lret
mov
adc
fmul
popf
jne
adc
les
mov
cltd
call
jmp
jae
jl
jp
jo
xor
jo
or
fisttpl
jb
jo
shrb
cmp
mov
jle
shll
lods
lea
mov
jo
aad
in
xor
inc
fnstenv
test
inc
mov
push
jo
test
das
sub
mov
loop
call
scas
jo
mov
inc
shrl
inc
add
hlt
gs
jo
je
xor
xchg
int3
insl
popf
data16
add
insl
aad
mov
mov
add
cld
mov
jo
aad
sete
push
cmp
jo
fcoms
push
mov
jo
add
fisttpll
inc
repnz
insl
xor
sbb
pop
lods
test
mov
jno
adc
fwait
out
jo
jb
daa
cmp
inc
mov
or
jo
and
loop
pop
scas
jo
iret
unpckhps
aad
bnd
push
or
repz
add
test
fildll
push
inc
mov
mov
fnstsw
and
cwtl
aad
adc
mov
pop
jb
cli
fisttpl
mov
or
dec
dec
dec
nop
iret
cs
xchg
lfs
aam
mov
les
fdivs
shlb
jne
ds
jbe
cmp
jo
mov
dec
jo
ja
loopne
in
lods
jo
mov
inc
adc
iret
lock
pusha
adc
jo
cmpsb
mov
shll
lods
dec
mov
jp
sub
sbb
je
adc
push
movsl
jne
fcmovnbe
inc
call
pop
mov
dec
mov
xchg
sahf
jo
stos
mov
xchg
sbb
cmpsl
je
out
test
shufps
arpl
or
mov
sub
cmp
fistl
fidivl
mov
lahf
insl
sub
or
es
xchg
and
jo
stc
jle
mov
push
out
mov
fldt
xlat
sbb
iret
fwait
mov
pop
jge
jo
jne,pn
adcl
jo
std
je
cld
and
add
sub
imul
lods
fadds
sub
dec
pusha
mov
mov
mov
std
push
cmpsb
push
jmp
gs
jae
jo
fs
cld
mov
jo
and
mov
dec
nop
out
aas
xor
sbb
mov
mov
lea
jo
dec
rcr
inc
cmp
divb
loope
fsubrl
mov
cmp
outsb
lds
fcomps
lret
cwtl
int
mov
mov
lds
mov
in
aad
mov
xor
ss
sub
insl
or
push
jb
cmp
pop
cmpsl
sbbl
jo
lcall
jo
arpl
push
outsl
jo
xchg
dec
imul
shll
add
lock
mov
cmpsl
hlt
insl
sbb
sarl
or
xchg
or
inc
std
out
inc
or
dec
and
cmp
enter
ljmp
adc
daa
sbb
jno
xchg
jo
sbb
fwait
xorb
mov
stc
movl
fdivl
adc
push
mov
sub
cli
int
icebp
mov
jo
and
cmpsl
adc
pusha
jo
fwait
mov
mov
or
mov
movsl
insb
or
inc
lds
push
xor
xchg
jo
add
flds
xchg
orl
or
mov
cmpsb
mov
jecxz
cwtl
inc
jo
inc
dec
fstpt
push
std
jo
xchg
rorb
jb
or
jge
sbb
xor
xchg
pop
nop
mov
mov
imul
ljmp
iret
mov
push
fidivl
in
pushf
adc
bound
add
jge
lcall
add
mov
repz
insb
jo
inc
add
popl
dec
notl
jmp
aad
adc
sub
andb
iret
inc
outsb
sub
jo
mov
sbb
call
mov
push
jmp
fisttpl
fstl
dec
lods
jo
pop
adc
jo
imul
js
and
jle
pop
loop
data16
push
mov
adc
cmp
jp
xchg
insl
jo
in
fistpl
pop
and
add
xor
fs
popa
iret
out
jo
push
inc
cli
cmp
add
cmp
jg
nop
daa
orb
and
dec
xor
jo
loop
das
stos
jecxz
jno
cwtl
jo
out
jne
add
mov
pop
ljmp
jo
mov
jae
jo
movsb
mov
out
sub
jno
out
mov
test
ret
inc
lods
mov
lds
out
sub
dec
leave
push
push
aad
mov
clc
loopne
loopne
in
inc
loop
jb
inc
and
fstps
adc
test
or
jl
dec
es
nop
mov
fnstenv
scas
mov
cmp
dec
shlb
jo
jg
lret
adcb
loop
int
xor
fsub
cmp
mov
jg
pop
sbb
repnz
dec
bound
mov
in
test
in
enter
outsb
loop
popa
jp
xchg
sbb
mov
push
and
loop
data16
pop
or
aad
mov
cltd
adc
jnp
add
call
sbb
int3
add
data16
pop
lahf
jno
add
pop
adc
mov
lock
lods
aas
cmp
push
clc
or
dec
pusha
jo
mov
sti
les
cmp
into
call
and
add
xchg
inc
jo
hlt
jbe
mov
jnp
inc
adc
jne
stos
jo
xchg
pop
xor
and
arpl
jno
ret
xor
fmulp
lock
in
mov
sbb
jle
dec
mov
push
cmp
sbb
rclb
imul
leave
pop
or
mov
aam
push
jo
adc
mov
stos
leave
jo
cltd
sub
mov
aam
push
add
xchg
das
pop
inc
push
jo
dec
adc
ja
jge
pushf
daa
pop
cld
movsb
in
adcb
pop
movsl
lock
lcall
sahf
mov
sbb
mov
fidivrs
jns
inc
lds
lock
fsubl
dec
jnp
add
push
lcall
jecxz
cwtl
xchg
lock
xor
jo
movsb
js
mov
es
dec
xchg
inc
dec
cmp
scas
icebp
loope,pt
xor
das
jo
test
shlb
shll
out
jb
adc
push
dec
sarb
ljmp
xchg
mov
sub
lahf
jo
fstpt
in
test
cmpsb
jo
mov
pop
pop
jo
push
fwait
add
push
jp
mov
xor
hlt
sub
das
popa
out
out
xorb
out
bound
mov
xchg
data16
mov
cld
add
mov
sete
jae
mulb
std
cwtl
ljmp
mov
jae
push
mov
add
pop
fisubs
fstpt
xchg
sbb
xor
or
das
jbe
xorb
fists
daa
sbb
mov
mov
mov
mov
js
int
xchg
loopne
inc
aas
enter
jp
or
push
lock
jle
cmpsb
mov
into
mov
and
xchg
sti
cld
xchg
and
mov
insb
jbe
mov
movl
aas
dec
lock
popf
pushf
je
shl
and
loope
pop
clc
test
aam
push
mov
jo
sub
add
into
or
imul
jp
mov
and
cmpsl
jb
dec
push
sbb
cwtl
fdivrl
inc
into
data16
fldt
adcb
jo
push
fcomp
jo
xchg
loop
or
xchg
pushf
out
in
iret
push
out
lea
leave
lret
jo
loope
mov
sbb
and
mov
repz
lea
adc
xchg
jo
push
roll
data16
cmc
jns
inc
pop
inc
inc
sbb
jo
dec
dec
jne
sub
xlat
jo
call
cmp
add
jle
inc
imul
adc
xorl
xchg
imul
xor
rcll
jo
mov
push
in
fdiv
xchg
jge
fnstenv
xchg
lea
push
jo
fiaddl
cli
jo
into
sub
roll
cmpsl
std
rcrb
lock
xor
loopne
in
mov
mov
dec
push
add
dec
lcall
int
outsl
lock
iret
outsb
lock
dec
lret
sub
adc
rcr
inc
int3
lds
adc
jne
popa
jo
push
xchg
pop
push
loopne
outsb
jecxz
jae
das
pop
movsb
sub
outsl
insb
and
rclb
in
cs
data16
lret
mov
es
jae
adc
loopne
cmp
jo
enter
push
add
fsubl
insl
test
call
jo
ja
dec
cltd
ss
jo
jmp
into
xor
sub
pop
push
jno
out
jnp
jo
mov
push
or
xor
hlt
aaa
lock
adc
sub
sub
and
adc
jo
mov
fcomps
adc
or
mov
ds
jb
jae
aam
dec
cmova
aas
pusha
push
xorl
push
inc
pop
xor
rcrl
or
js
stos
and
roll
ja
xor
clc
ja
push
jbe
jo
fisttpl
xchg
insl
outsb
fdivl
push
andb
into
jecxz
push
mov
inc
or
xor
repz
fldcw
ja
mov
jae
add
pop
mov
ss
xchg
ja
sub
jo
xor
sbb
push
mov
lret
cmc
out
cmpsl
lret
sub
pop
ja
notl
iret
iret
jo
mov
jb
xchg
out
movsl
sbb
movsb
in
aad
test
out
jp
imul
test
or
inc
movsl
push
into
ss
cmp
bound
xchg
jo
add
inc
pop
bound
movl
out
out
sub
dec
inc
repz
xor
outsl
stos
loopne
ret
xchg
lahf
xchg
dec
jo
lods
sub
xchg
mov
scas
or
jo
push
mov
sbb
pop
addr16
lahf
fwait
lock
fadds
cmp
sub
xlat
push
xchg
cmp
jb
or
mov
jne
imul
xor
mov
cmc
insl
jp
cwtl
mov
inc
pop
lahf
xchg
fidivl
add
in
int
jo
cltd
scas
sub
jo
mov
in
pop
outsb
inc
push
mov
mov
lds
dec
jo
pop
fistl
ret
jge
fdivl
cmp
imul
cmp
ja
stos
imul
loope
sahf
test
fnsave
add
cli
inc
popf
jp
jae
xlat
sub
sbb
cmp
push
jno
aad
adc
jo
cs
mov
fidivs
mov
jo
ret
fnstenv
jo
mov
mov
pop
mov
and
mov
loop
les
std
jae
fcmovne
loopne
jl
loope
arpl
js
stos
ret
add
out
fistpl
aad
inc
dec
cmp
cwtl
mov
dec
out
inc
sub
outsb
loope
sbb
pcmpeqw
inc
out
jo
pop
push
pop
dec
loopne
jo
jo
scas
outsl
sti
orb
jo
xchg
fidivl
gs
dec
or
jo
xor
inc
xlat
push
push
les
into
xchg
jo
sbb
out
aad
std
test
sub
jb
test
sahf
cmpsl
dec
jg
push
aam
jo
or
xchg
jge
mov
sbb
lods
mov
popf
sub
iret
cld
insl
jg
push
dec
mov
lods
jbe
jo
adc
imul
mov
sub
icebp
cmp
sub
cli
mov
and
mov
sub
cmpb
push
rep
jge
lods
sbb
mov
ljmp
sti
les
fnstenv
push
push
fnstsw
imul
cmp
mov
out
jmp
mov
xor
mov
pop
clc
das
shlb
int3
jecxz
fildl
mov
daa
mov
mov
dec
sahf
xchg
lock
dec
int3
mov
shll
jmp
jns
es
movsl
fmul
cli
or
insl
xchg
mov
xchg
pushf
fcoml
rorb
shl
scas
ja
or
lds
bound
jl
mov
cmp
mov
mov
jo
xchg
data16
pop
mov
mov
int
jecxz
pushf
addr16
idivb
jns
out
lea
lret
dec
sbb
cld
and
xorb
xor
jo
xor
add
movsl
jo
ss
dec
jo
mov
or
nop
shll
mov
out
pop
adc
add
int3
jo
shll
psrad
xorb
xchg
or
add
notl
mov
call
pop
outsb
enter
out
add
jo
in
cmpsl
xchg
mov
jo
scas
pop
push
fistl
jl
aad
xchg
jo
add
or
jo
xor
mov
out
aad
cmp
pop
clc
jo
repz
sbb
or
dec
out
pop
push
adc
sahf
push
and
add
sub
addr16
lcall
stos
ret
jo
push
add
call
insb
mov
push
jne
xchg
lods
test
jo
adc
ret
adc
dec
push
lds
mov
inc
push
lods
cld
ja
or
cltd
add
fistps
xor
ja
dec
sahf
xorb
and
jo
xchg
and
mov
add
push
jo
pop
out
or
fwait
jo
push
out
test
icebp
sub
pusha
push
push
sbbb
fidivrs
mov
sub
or
dec
or
fwait
mov
lock
dec
add
je
lahf
pop
lock
jae
mov
enter
aaa
mov
sbb
jp
mov
mov
js
dec
dec
cwtl
pusha
cwtl
adc
inc
ret
sbb
nop
fucomip
ja
rorl
fstps
mov
test
jge
gs
jns
lock
rolb
xchg
popa
ret
push
sub
push
pop
push
aad
jo
jmp
out
lds
in
fadd
scas
imul
int3
outsb
rcrl
scas
fdivl
popa
push
aad
mov
ret
pop
lock
mov
dec
xchg
ja
jo
push
push
xchg
movsb
cmpsb
dec
jo
jb
cmp
jns
not
mov
jne
into
lds
jle
int3
test
outsl
jnp
rorl
aad
insl
and
stos
ss
jo
divb
fiadds
jl
mov
xor
fst
push
jecxz
adc
jle
push
jno
arpl
scas
cmp
shlb
mov
jno
mov
and
lods
gs
jb
aad
sahf
ret
jle
xchg
mov
lock
or
mov
ja
xorl
jge
cld
mov
xchg
in
ja
adc
lret
ret
jl
stos
adc
pop
sub
jecxz
jo
jno,pt
jle
sahf
lret
addb
pop
cmp
push
fs
xlat
cmp
fwait
int3
nop
pushf
xorl
jge
in
inc
cs
dec
dec
into
jo
stc
int
inc
mov
jo
inc
in
movl
pop
sub
insb
dec
jle
insl
jmp
in
pop
xorps
imul
xor
sarl
testl
push
insl
sahf
xchg
and
xor
add
push
loope
adc
shrl
rolb
pusha
mov
sub
nop
shll
fsubrl
jge
pop
call
int
jmp
jo
cltd
or
jb
pop
cmpsb
adc
lock
test
dec
cmp
mov
mov
adc
push
jo
pop
pop
call
loopne
in
test
jb
out
xchg
pop
xor
dec
sti
or
sub
lods
xor
sbb
xchg
pop
lock
mov
mov
aam
out
jl
ljmp
dec
mov
lcall
int
movsb
inc
add
cmpsb
xchg
nop
test
jo
inc
into
xchg
sub
in
push
push
push
and
xchg
pop
and
push
mov
sub
ret
push
xchg
adc
cli
add
inc
jae
mov
fldcw
jo
adc
mov
je
fwait
out
lock
jmp
ret
daa
adc
pop
icebp
fdivrs
jo
mov
sub
add
std
cwtl
je
jo
mov
inc
push
fcmovne
xchg
call
std
shll
outsb
mov
lret
fidivs
cmpsl
add
sbb
push
lcall
xorb
cwtl
decl
push
ja
rclb
inc
popa
xor
data16
push
out
fildl
lea
sub
sahf
rcrl
and
ret
aas
inc
aad
mov
jb
jo
pop
shll
outsl
add
fbstp
sbb
aaa
cmpsl
sub
push
add
mov
jge
lock
mov
popa
jo
flds
dec
inc
leave
sbb
inc
xor
xlat
jo
shrl
adc
inc
cwtl
mov
sub
stos
test
leave
lods
and
in
lret
mov
mul
loope
jg
jo
push
pop
and
dec
std
inc
mov
sub
and
pop
dec
jle
push
pusha
shlb
push
inc
cmpsb
lods
pop
popa
xchg
jo
dec
cli
sbb
mov
std
jo
std
jae
arpl
jo
daa
jp
aam
inc
stos
pop
inc
jo
mov
call
push
fcomp
inc
jo
outsl
mov
add
xorb
jo
and
dec
pushf
lock
xchg
es
imul
mov
xor
fcomps
or
pop
dec
and
in
mov
jb
imul
cmp
push
jo
mov
jge
pop
lcall
sub
push
ja
xchg
movsl
xchg
in
jge
imul
xor
mov
mov
add
pop
in
mov
jo
pop
sub
jle
jo
mov
in
outsb
clc
dec
vmovss
mov
imul
sahf
mov
lahf
sbb
mov
push
xor
sub
call
insl
pop
fsts
xor
incb
add
push
popf
push
jge
mov
lds
push
inc
dec
jl
push
push
cmp
fdivrl
jo
pusha
bound
lea
aad
iret
negl
adc
xor
fmull
enter
int
push
fstpt
xchg
pop
ja
and
cmpsb
mov
jo
testl
cmp
xchg
test
outsl
daa
repz
mov
adcb
jo
dec
pushf
mov
jne
shll
jo
inc
sbb
jo
xchg
rcrb
jo
sub
jmp
sbb
lods
jo
ret
aad
es
push
mov
pop
mov
xchg
sahf
outsb
cmp
adc
xor
and
inc
sbb
das
inc
inc
lock
cmp
hlt
cld
shll
std
cmpsb
mov
jo
mov
dec
or
add
ret
pop
or
pop
movsl
adc
push
mov
mov
leave
jo
pop
int
mov
pop
lock
xchg
jo
add
mov
jo
ficoms
cmp
fnstenv
inc
insb
cmp
frstor
jo
out
dec
nop
loop
xchg
leave
jo
pop
ret
fadd
sbb
aam
test
mov
and
pop
mov
mov
jo
ja
je
mov
mov
add
pusha
ds
rol
push
xorl
cmp
cmp
aad
jo
push
push
pusha
fldt
dec
pop
fdivl
popa
mov
out
ret
sbb
arpl
push
pop
sbbl
repnz
dec
jo
cmpsb
cltd
lcall
insl
mov
push
les
mov
test
jo
stc
lods
mov
jo
cmpl
jo
aad
cmc
in
icebp
push
jo
mov
mov
aas
xlat
shlb
push
pop
or
sbb
repnz
sbb
arpl
cmc
in
jle
cs
add
pop
dec
add
mov
jb
jl
ret
xor
mov
orb
int3
out
xchg
movsl
jo
cmp
xor
xchg
jo
mov
cmp
xchg
cmp
ljmp
jae
lea
jo
stos
inc
mov
xchg
xchg
insb
jo
sbb
xchg
mov
int
aad
jo
dec
push
imul
out
in
sarl
push
outsb
jo
dec
xchg
jnp
sbb
repz
sub
js
sbb
jo
mov
adc
push
xchg
shlb
out
nop
jge
jo
aam
cmp
jo
pop
xchg
into
cmp
cmp
mov
js
testb
inc
sub
cmpsl
fistpll
jo
fwait
xchg
hlt
int
stos
xchg
jo
mov
adc
adc
lock
mov
cld
shll
insl
fmull
cs
adc
or
pop
ja
lret
sub
loop
icebp
fadd
rcll
notl
pushf
movsb
jo
jecxz
in
cmc
jmp
jo
cli
pop
pop
inc
mov
jo
adcb
imul
jo
into
jl
xor
jno
adc
and
dec
outsl
adc
pop
imul
aam
lcall
mov
cld
mov
push
pop
lods
cmp
or
nop
fldl
pop
xor
push
adc
push
jo,pt
sub
out
xchg
mov
inc
cmpsl
aaa
int
loopne
sti
mov
jb
sbb
das
and
lret
icebp
ja
jo
fildl
xchg
jo
and
cld
and
movsl
insl
dec
or
push
inc
in
insl
pop
shrl
daa
adc
push
gs
cld
fisttps
in
jo
mov
ja
shr
jo
stc
adc
jl
mov
mov
inc
push
sahf
push
je
pop
hlt
fildll
xchg
mov
movsb
mov
push
stos
fldcw
lret
fldl
sbb
scas
mov
push
aaa
cmp
ficomps
call
jo
into
dec
imulb
xchg
pushf
dec
cmp
cli
mov
aad
insl
mov
push
sub
lds
and
jo
pop
lods
fdivs
jnp
sbb
in
movsb
and
push
jo
or
push
sub
jo
loope
shrl
mov
mov
xor
outsl
push
test
lods
aam
aas
out
insl
mov
jge
das
push
jp
pop
xchg
jo
dec
aad
dec
mov
inc
ret
mov
ljmp
xchg
push
jmp
xchg
adc
cmp
dec
jo
jl
lds
and
fsubrl
jb
mov
nop
push
shlb
std
jo
leave
das
xorb
pop
fsubl
add
push
push
mov
push
xchg
arpl
or
jo
nop
pop
cmp
mov
xchg
add
adc
loopne
aad
addr16
mov
mov
scas
test
stos
dec
push
push
pop
cmpsb
aas
xor
ficompl
test
into
or
or
lods
je
frstor
xchg
lret
mov
mov
jo
test
inc
sbb
mov
mov
adc
nop
cmp
outsl
es
inc
aad
les
push
dec
sti
mov
loope
cmpsl
jae
fwait
loop
pop
inc
test
aam
dec
gs
add
jo
out
scas
stc
dec
pop
je
push
in
push
push
or
sub
leave
xchg
push
mov
jns
lret
jo
cmp
xchg
test
jo
test
jo
or
jbe
mov
jne
insb
jl
outsl
jo
mov
enter
jp
jo
andl
leave
mov
dec
and
addr16
mov
fdivrs
or
jb
jle
mov
stos
sbb
mov
sub
or
sahf
ja
imul
into
cmc
push
mov
inc
pop
arpl
xchg
jno
mov
pop
mov
add
aad
les
nop
pop
jb
xchg
jo
outsl
mov
movsl
sbb
jo
pop
sub
fisubl
jo
cmp
sbb
nop
aad
or
adc
push
shlb
push
push
jmp
xor
clc
push
fistl
xor
adc
nop
cwtl
jb
cli
jo
mov
pop
clc
cmc
sub
adc
pusha
xchg
mov
lret
lds
jo
mov
aad
imul
jo
mov
dec
sub
xchg
mov
and
sahf
jnp
out
sub
inc
fcompl
pusha
jp
jno
in
imul
and
in
outsl
call
push
pop
cmc
testb
outsb
ja,pn
xchg
fld
adc
push
outsl
adc
iret
insl
aas
sbb
cwtl
je
jo
jle
fsts
xor
xchg
mov
and
in
hlt
sti
pop
xchg
loopne
jae
jmp
dec
leave
mov
jo
fldcw
lret
jnp
mov
fidivs
and
fcompl
scas
jp
insl
push
xor
nop
push
es
jo
pop
xchg
adc
xor
sahf
mov
mov
cmp
pop
daa
lret
pushl
cmc
mov
iret
dec
jo
xchg
popf
sbb
xchg
outsb
xchg
rclb
sbb
nop
js
dec
jo
or
mov
push
mov
add
jo
mov
or
fimuls
xlat
out
pop
pop
jne
sbb
jo
pop
movsl
inc
pushf
pop
decb
dec
jo
dec
lahf
test
lock
mov
inc
cmp
shlb
cwtl
pop
add
repnz
loop
mov
pop
push
faddl
in
mov
lods
cmpsb
push
test
int
into
repnz
test
jl
fxch
lock
movsl
pop
xchg
gs
dec
push
cmp
js
jns
movsb
pop
rorl
popl
sub
int3
cmp
ret
mov
test
cwtl
mov
push
and
lds
insb
cwtl
cld
jo
stos
add
and
add
sbb
pop
xlat
lret
xor
sub
imul
mov
mov
xchg
subl
pusha
cltd
lock
sbb
sbb
fidivrs
es
gs
push
and
daa
loopne
repnz
pop
insl
cmc
or
jmp
inc
sbb
mov
push
pop
testl
stc
or
push
scas
aad
out
jno
pushf
fstpt
fcomi
xchg
sti
out
jge
mov
in
test
add
lock
or
pop
push
or
push
lcall
jo
adc
dec
push
sub
inc
clc
enter
jo
sbb
inc
dec
and
aad
mov
xchg
lret
lahf
lock
je
push
sbb
testl
jo
jge
mov
repz
jno
jb
daa
sub
jo
cs
idivl
jae
pop
scas
and
add
mov
int3
imul
pop
ss
pop
dec
imul
xor
shll
mov
notb
lock
addb
jmp
jo
mov
xor
push
dec
mov
jo
stos
pop
mov
and
bound
movsb
inc
jae
sub
pop
adcb
rcrb
insl
hlt
ljmp
sti
mov
add
lret
push
lods
adc
mov
inc
mov
adcl
stos
stc
mov
scas
pop
sahf
jo
test
pop
subb
cmp
data16
dec
scas
sub
insl
cmp
insl
cmp
jg
lock
arpl
xchg
mov
lahf
adc
cwtl
fbstp
sub
arpl
or
pop
ret
adc
mov
push
test
fsubs
jo
jns
dec
push
mov
les
out
enter
inc
add
jnp
xor
jp
jne
push
filds
xchg
cmc
jae
sub
mov
pusha
cmp
mov
xchg
pop
lea
push
outsl
xor
dec
xorl
test
cmpsl
dec
and
lock
popf
fdivrl
lock
or
mov
jo
sub
push
call
mov
call
in
xor
ljmp
and
adc
in
sub
lea
dec
out
sub
add
loope
add
jo
push
inc
rolb
mov
jo
fwait
mov
addr16
aad
pop
test
jo
cmp
xchg
add
and
xor
fnstenv
mov
xchg
dec
enter
jo
jmp
clc
addb
mov
dec
testl
fwait
or
movsb
hlt
fs
cltd
into
in
rcr
loop
decb
mov
cmp
ja
pop
or
adc
inc
jno
pusha
mov
add
dec
mov
jnp
ss
test
arpl
sbb
and
or
xchg
fstps
jmp
mov
inc
mov
inc
movsb
add
jb
fidivl
dec
push
xor
dec
sub
xchg
hlt
jo
cmp
scas
jo
inc
mov
sbb
fcoml
or
pushf
pop
pop
js
jo
fildll
mov
mov
jo
loope
mov
pop
lods
adc
mov
int
sbb
jge
shrb
pop
or
js
jb
jo
fcmovb
lret
push
mov
jbe
mov
lds
inc
std
fst
cmp
repnz
xlat
jo
vunpcklpd
fsubrl
jo
movsl
lret
leave
and
rclb
inc
cmp
mov
jo
xor
push
adc
cmc
outsb
push
jp
cmp
adc
sbb
pop
in
mov
imul
mov
lcall
cmp
and
outsb
inc
jge
dec
loope
cmc
mov
mov
fdivrp
jo
jl
pop
mov
lods
ds
jbe
insb
jo
mov
imul
xor
jmp
jo
cmp
shl
cld
fldt
xor
jmp
dec
pop
jo
sub
test
mov
or
jo
into
nop
fs
jbe
jo
sbb
ds
lcall
mov
fildl
sarl
ss
subl
repz
xor
test
xchg
outsb
movsl
lock
lcall
xlat
repz
cmp
pop
ss
jne
lret
test
imul
push
jo
decb
sahf
mov
sbb
jb
xchg
add
inc
call
outsb
cmp
setns
roll
jo
and
iret
mov
inc
jp
push
xchg
jl
scas
leave
clc
mov
sbb
inc
add
jo
pop
jbe
add
jle
jle
insl
je
mov
lock
icebp
jo
lea
dec
jo
sti
push
aad
adc
jno
jne
mov
and
out
xor
push
push
adc
cltd
shll
add
lds
test
les
push
mov
sub
dec
and
vmptrld
add
rcl
aas
xchg
push
xor
and
cltd
outsb
shll
aad
jo
sub
jno
ja
push
mov
or
or
cmp
dec
xor
jae
mov
mov
hlt
imul
fs
rorb
ficoms
jl
or
pop
stos
in
imul
insb
mov
aad
xor
daa
nop
push
stos
mov
and
push
xor
in
ja
xchg
scas
loopne
movsl
rolb
sbb
xchg
push
stc
mov
jle
loopne
enter
std
mov
int
jo
mov
fimull
aaa
icebp
shr
jo
push
sub
jne
cmp
jo
cmp
fildll
xor
test
jo
sbb
xor
clc
lcall
adc
ret
xor
mov
mov
stos
cld
jae
sbb
mov
inc
aad
test
je
ljmp
movsl
addr16
jmp
mov
xchg
jo
fwait
or
add
mov
jo
sti
fucomp
inc
xor
add
mov
and
cmp
ja
jo
mov
sub
jno
inc
sahf
cmc
xchg
lock
jg
popf
jo
jge
arpl
mov
cmp
jns
jo
nop
aad
ficoms
mov
mov
sub
dec
aaa
push
pop
lea
test
aad
mov
cmp
ljmp
fisubs
xchg
dec
out
xchg
into
sub
leave
ljmp
ja
inc
and
mov
outsb
xchg
xor
pop
inc
or
les
sbb
lea
cli
jo
xchg
mov
aad
or
jo
lock
jo
rcrl
jo
fcoml
aad
xchg
inc
rcl
mov
fstpt
adc
ljmp
pop
adc
adc
fstps
mov
jo
mov
mov
add
in
xor
fidivrs
xor
or
xor
and
fcmovnb
pop
loope
ds
mov
pusha
sbb
test
jo
ljmp
jl
and
push
jbe
adc
jo
or
mov
adc
mov
jo
ret
loop
jnp
insl
push
xchg
fistpl
sbb
aaa
into
adc
push
mov
jo
stos
in
jbe
ja
jo
xor
adcb
mov
cs
inc
ss
stc
outsb
xor
imul
enter
ja
insl
mov
xchg
jne
push
cwtl
jo
dec
mov
xchg
and
lahf
lret
into
jo
jns
xor
popa
jo
jbe
bt
pop
jo
loope
and
pop
or
jo
loop
aad
cli
out
jo
and
push
jbe
lea
repnz
mov
xchg
jo
push
loopne
dec
mov
dec
je
rcrl
mov
mov
ss
jae
jge
test
cmp
les
fnstcw
leave
jbe
adc
ja
push
mov
cmc
sub
bound
xor
add
mov
or
les
outsl
addr16
int
push
or
jo
test
popf
pop
jmp
adc
shlb
insl
mov
push
insb
pop
and
adc
cmp
sbb
dec
pop
lahf
add
sub
mov
and
jg
lock
fwait
cmp
insl
fiaddl
mov
test
cmp
mov
je
xchg
xor
pop
outsb
pushf
cltd
loope
inc
xor
sbbl
cli
xchg
mov
xorl
popa
in
arpl
lock
xor
push
notl
push
iret
shll
inc
out
aad
je
add
rcrl
jae
shlb
test
out
pusha
xchg
out
jo
aad
subb
jo
mov
int3
leave
push
jae
jo
pop
push
xor
sbb
dec
jae
xchg
lahf
outsl
imul
movsb
dec
fdivrl
icebp
push
or
nop
outsl
push
mov
shll
push
mov
lret
cmp
frstor
cltd
push
add
fstpt
jl
inc
jo
mov
cmpsl
push
shl
lcall
inc
inc
loope
lock
jl
xor
enter
ss
fwait
jo
cmp
hlt
mov
or
insb
jbe
jo
sahf
xchg
cmp
sub
pop
mov
mov
push
or
fwait
lods
add
nop
inc
aad
data16
jo
adc
fdivs
ror
dec
or
jae
mov
add
or
out
pop
loope
or
jo
in
leave
pop
push
nop
add
jo
fnstenv
pop
lds
out
push
jo
int
mov
inc
jmp
jno
xlat
jo
sar
sub
push
cwtl
fsub
and
pandn
outsb
dec
sbb
push
adc
shlb
mov
std
inc
jo
int3
add
dec
iret
jo
loopne
xchg
sti
mov
pop
jmp
mov
add
lea
cli
pop
push
inc
jo
sbb
lock
aad
insl
stos
push
add
jns
xchg
sbb
imul
pop
mov
jo
pop
cld
ja
dec
outsb
gs
aad
push
jl
push
mov
lock
cmp
push
mov
add
sbb
shll
cmpb
pop
rolb
adc
jge
jmp
cs
xchg
inc
xor
shrb
add
jo
or
in
mov
sarl
aad
std
scas
stos
jne
xchg
dec
xorb
xlat
lret
insb
lret
jo
rcrl
jo
in
stos
xchg
leave
lock
jo
fst
dec
lahf
insb
mov
pop
fisubl
push
scas
cmp
dec
aaa
insl
aad
shl
mov
bound
mov
push
enter
jae
rcr
inc
repnz
lock
in
jno
pop
and
aad
outsb
fmull
xchg
jg
lock
mov
call
push
add
out
subb
jo
xchg
lahf
push
xchg
push
xchg
mov
sub
jo
sbb
data16
cltd
adc
out
adc
jnp
mov
jp
mov
adc
mov
xor
gs
lret
sti
hlt
je
aam
jmp
xor
scas
mov
pop
pop
xor
push
jo
inc
pop
jb
xchg
jo
dec
lds
arpl
loopne
sarb
xor
mov
aad
cmp
inc
add
jne
mov
lea
inc
fisubrl
adc
in
pop
lcall
pop
inc
mov
nop
fmull
jo
sbb
adc
aad
push
das
addr16
mov
mov
lds
xor
test
fld
jae
ja
inc
adcb
and
mov
mov
jo
or
enter
mov
mov
lock
and
xchg
fmull
cli
stos
iret
or
pop
jo
sarl
cmp
jo
mov
into
aam
lods
jo
mov
jo
sub
fildl
or
cmpsl
push
mov
mov
sbb
sub
mov
das
leave
idivl
fisttpl
adcb
xor
push
lock
inc
enter
or
lock
or
fmuls
lock
xchg
scas
jmp
ja
cs
lret
sub
scas
ret
fwait
jmp
jp
and
jae
aad
adc
stos
jo
or
into
adc
jbe
fldl
sub
xor
ja
ds
mov
ret
push
divl
outsl
fsubrp
xor
in
ficoml
and
mov
fdiv
jne
or
jne
and
popf
mov
jp
adc
icebp
nop
xchg
dec
xchg
outsl
push
mov
push
filds
mov
imul
shl
int3
mov
xchg
adc
jo
jecxz
lods
xor
sbb
je
decl
lock
cmp
sub
mov
loopne
outsl
idivl
push
mov
push
sub
jnp
adc
inc
cmp
mov
imul
aad
jae
push
jmp
js
add
inc
jo
dec
xor
fsubl
in
ljmp
scas
rol
and
jo
inc
pop
xor
jo
xchg
loopne
jae
mov
jb
cmpsl
dec
or
push
jl
inc
dec
jno
pop
aad
cmc
dec
popf
inc
mov
ss
mov
jae
push
pop
dec
push
sub
lds
clc
les
fsts
jo
dec
cmpsb
cmp
insl
cmp
mov
xchg
sbb
add
pop
xor
mov
lds
cltd
jno
push
iret
lea
sub
movsb
xor
insl
jnp
add
mov
leave
push
mov
jo
add
xor
push
dec
mov
movsb
dec
rclb
jmp
or
mov
loopne
je
leave
jbe
lea
pop
fildll
daa
in
ss
outsb
cmpsb
test
fwait
cs
xor
jge
jo
sbb
sarb
pop
fs
mov
pushf
jo
sbb
inc
loope
xchg
pop
jle
insl
inc
ja
mov
in
jo
lcall
inc
dec
bound
add
divb
sti
mov
jo
adc
enter
mov
daa
jo
mov
cmp
insl
hlt
in
cli
add
lods
mov
pop
adc
insl
jno
inc
in
pushf
mov
jno
cs
xorl
mov
das
fs
jo
xchg
and
dec
fnstenv
sarl
pop
jo
je
xchg
push
pop
pop
jo
loope
std
sbb
or
xchg
jo
mov
fistl
or
jo
enter
mov
aaa
xchg
es
pushf
pop
lret
jo
int
and
shlb
fisttpl
scas
jg
xchg
jle
adc
sub
mov
andl
je
cmc
jle
addr16
pop
ret
jo
pushf
pop
jo
scas
cli
fwait
loop
ror
or
xor
fsubl
adc
jo
ljmp
jo
cmc
sarl
bnd
jecxz
cmp
dec
or
lret
push
cmp
fstpl
sub
outsb
lea
sub
push
in
mov
jo
inc
mov
and
xor
imul
insb
pop
pop
dec
imul
dec
or
pop
push
pop
divl
cmp
inc
xchg
jo
nop
cmp
sahf
lret
pushf
mov
roll
sbb
int
mov
lea
jns
pop
push
cmpsb
lret
outsb
adc
shr
dec
and
jo
mov
jge
dec
loop
adc
lock
and
lock
aam
push
jnp
sub
mov
mov
xor
mov
dec
clc
movsb
lock
mov
add
int3
and
fldcw
cmc
iret
lahf
push
adc
sbb
inc
jnp
int3
jle
jo
outsb
fimull
sub
jl
xchg
inc
pop
mov
fstps
mov
insl
push
aaa
sbb
fucomip
popf
stos
mov
cmpsb
mov
push
stc
fwait
xor
popa
jo
je
xchg
jmp
in
movsb
out
mov
lods
jmp
insl
sbb
insb
pushf
daa
je,pn
mov
jg
mov
int3
cmp
and
and
push
ja
movsl
lods
and
addr16
lock
xor
jo
cltd
push
dec
mov
ja
lret
and
popa
mov
cmp
cmp
adcb
jnp
xchg
xchg
sbb
pop
xchg
jns
inc
push
cmp
pop
adc
std
mov
jnp
pop
pop
int
call
inc
pop
pop
vrsqrtss
lock
push
sbb
lock
sbb
push
xchg
pop
shrb
movsl
or
dec
lret
inc
cmp
stos
fiaddl
outsb
sub
std
sub
mov
movsb
adc
jo
jl
inc
mov
outsb
fistpl
add
pop
jo
jb
pop
dec
push
xchg
fidivs
mov
aas
jge
mov
cltd
mov
fisubl
fsubl
jo
sarl
sbb
lock
dec
mov
fstpl
cmp
divb
or
jo
lods
js
xor
shll
sti
aad
outsl
fadd
or
xorl
mov
add
repz
test
je
sbbl
out
arpl
jo
sti
dec
cmc
das
mov
lods
call
fld
jo
push
lret
push
push
mov
aaa
mov
xchg
pop
in
test
call
mov
inc
outsl
mov
push
sub
dec
push
fcoml
dec
or
pop
dec
adc
or
popa
pop
inc
push
push
popf
push
and
or
jo
aam
inc
fwait
cmp
insl
sub
xchg
pusha
loope
push
inc
cmpsl
jo
aad
jmp
loopne
lahf
and
mov
outsb
test
repnz
cmp
js
mov
je
inc
cmp
fildll
pop
jecxz
inc
jo
out
ds
push
fmull
cli
jo
je
sub
pushf
insl
pop
sub
jge
and
outsb
jp
pop
mov
loope
icebp
sub
repnz
outsb
pop
in
or
sub
cmp
loop
fdivp
mov
or
xchg
into
jo
mov
pop
push
push
adc
cmpl
data16
push
and
sarl
mov
pushf
xlat
out
mov
jb
mov
jle
jo
stos
push
arpl
or
std
call
rcrl
jnp
call
inc
pop
fcompl
xor
pusha
fidivrs
jo
and
dec
jo
cltd
scas
xor
pop
in
jo
out
aad
push
incl
jo
sahf
ret
sub
aas
lret
adc
xor
jo
call
and
dec
sbb
jno
mov
push
jmp
ljmp
push
cmp
jo
mov
arpl
mov
adc
insl
cmp
xchg
mov
mov
jmp
or
shll
push
int
jo
inc
pop
mov
sub
dec
shrw
bnd
int
aad
xorb
xor
cmpsl
mov
iret
push
push
jp
flds
mov
xor
mov
cmp
cmpsb
push
fldenv
jo
xchg
adc
pop
mov
out
and
enter
aaa
jns,pn
xor
imul
xchg
jo
adc
sbb
xor
cmpsl
mov
cmp
cmp
cmpsb
aam
jo
xor
adc
jp
ret
out
es
mov
icebp
push
dec
xor
mov
mov
cmp
aad
pusha
cmc
rcll
jle
insl
scas
mov
adc
push
mov
mov
cmp
xchg
jo
push
test
jle
insl
pop
xor
repnz
xchg
imul
aaa
jo
imul
add
add
bnd
dec
xchg
jecxz
cld
outsb
iret
mov
xchg
icebp
pop
cmp
fnclex
sbb
push
scas
jno
sbb
dec
leave
jo
ret
adc
pop
rol
jne
or
stos
sbb
in
frstor
arpl
packssdw
push
jo
cmp
cld
cmpsl
push
shrl
insb
xor
and
pushf
inc
mov
insb
fldln2
and
pop
jo
cmc
or
ss
xchg
cmp
in
test
jle
mov
stos
shll
mov
imul
mov
jo
dec
cmp
nop
in
mov
ja
faddp
xlat
inc
add
lret
inc
aaa
out
int3
dec
enter
jae
loope
mov
les
and
jo
add
cmp
dec
call
mov
mov
aaa
jae
icebp
add
fidivrl
popf
or
add
in
inc
in
lds
jo,pt
insb
xchg
jle
or
mov
popl
sub
popf
adc
lods
insl
push
mov
jecxz
lock
fisttpl
push
stc
int3
cmp
icebp
jmp
add
jg
jo
lods
dec
in
mov
pusha
jo
jns
fcomp
out
iret
outsb
xchg
fwait
rol
or
xchg
inc
and
cmp
ljmp
insb
pop
call
pop
xlat
pushf
pop
mov
outsb
and
push
add
jo
jns
ds
cmp
dec
gs
call
xor
fisttpll
lock
mov
jo
lea
aaa
cmp
in
bound
mov
testb
xchg
das
in
push
aas
inc
fidivs
cmc
push
into
pop
call
inc
lods
addr16
jle
jo
jb
lock
inc
pop
adc
insl
push
jo
sti
test
inc
lock
scas
jne
outsl
sbb
data16
orl
bound
int3
aad
cwtl
jmp
test
or
sbb
popf
mov
push
mov
loop
jo
fwait
add
push
aad
shrl
cmp
jle
insl
mov
mov
jo
cwtl
push
rcrb
xor
divb
rcll
jo
test
mov
cmp
fcomi
inc
ja
insl
add
xor
das
push
orb
cwtl
out
ja
sbb
aas
imul
jbe
jns
and
nop
jo
pop
or
xchg
enter
cmpsb
sub
jo
mov
fwait
jo
jns
ljmp
pop
mov
jo
inc
and
stos
in
jo
neg
jp
orl
addl
mov
negb
mov
sub
sbb
insl
jle
mov
jbe
lock
stos
fsts
movl
jo
mov
xor
jo
insl
dec
xchg
push
pop
or
jle
outsb
push
je
pusha
mov
lret
sti
lahf
jo
movsl
xor
mov
push
add
pushf
fst
jo
sbb
inc
jo
test
xor
fldt
jo
dec
push
aad
js
in
and
cwtl
repnz
mov
cwtd
xor
push
insl
stos
and
add
out
jo
xor
jmp
cmp
sub
sub
sbb
shll
out
xchg
jo
daa
cmpsl
push
in
cltd
and
mov
cmp
push
jo
das
xchg
iret
pop
push
jb
cmpsb
shl
out
lock
mov
jo
cltd
xchg
in
pusha
sahf
inc
insl
jle
insl
mov
xlat
rcll
push
add
cld
jmp
jo
sbb
push
lretw
rcl
push
flds
jo
loop
movsl
mov
sbb
ja
loope
es
pop
std
cmp
jo
in
or
push
and
cmp
fsubrl
aad
and
psubsw
fs
sbb
and
cli
aaa
inc
add
push
lret
stos
sub
inc
arpl
test
lcall
cmp
xchg
xor
ljmp
and
pop
adc
out
mov
jo
mov
mov
jne
lock
push
fildl
pop
jo
xchg
std
mov
inc
fistps
int
jo
es
mov
mov
subb
divb
in
cwtl
jg
push
xor
sahf
xchg
xchg
nop
jmp
fnsave
out
fldt
xor
mov
pop
jmp
pushf
pop
out
iret
jae
xchg
push
ret
cmp
fistl
mov
fstl
mov
jl
gs
or
insl
out
nop
mov
xlat
pop
jno
je
insl
cmp
stos
xchg
xor
xor
pop
shr
rclb
inc
lret
pop
repnz
jo
pop
push
mov
jo,pt
inc
test
add
bound
jle
jl
push
dec
shl
ds
adc
jle
jo
xlat
stc
xor
dec
or
jne
add
xor
mov
xor
mov
ss
dec
lcall
jo
call
xchg
xlat
sahf
ficomps
arpl
dec
jmp
mov
jo
popa
pop
xchg
stc
push
aas
sbb
push
and
fs
jo
adc
dec
pop
push
push
inc
mov
lahf
push
inc
stos
pusha
pop
inc
iret
cmpsb
jo
pop
dec
jbe,pn
in
jo
shlb
lahf
clc
xlat
and
or
les
cmp
pop
xor
fwait
aad
fimuls
mov
push
sub
stc
jo
pop
fdivl
jecxz
shll
aad
dec
flds
push
adc
jo
jb
mov
jmp
fisttpl
jo
daa
outsb
lcall
push
xchg
lods
dec
test
and
pop
xor
or
xor
out
addr16
jne
mov
test
jl
ja
fs
rol
cmc
pop
xchg
ret
jo
ds
aas
mov
inc
mov
out
js
push
jo
xchg
cmp
pop
mov
shl
in
fdivl
xor
xchg
xchg
jo
mov
fidivl
enter
inc
pop
or
test
pop
push
adc
cli
sbb
clc
mov
jno
notb
or
ficompl
add
jo
inc
aas
xlat
data16
cmp
fcoml
or
ss
sahf
lock
cmp
pop
xor
pushf
test
jae
clc
aam
adc
stc
sbb
fiaddl
pop
mov
cmp
arpl
mov
or
fldl
cmp
cmp
jo
xorl
sbb
jo
cmp
xchg
leave
scas
push
data16
jg
fildl
jbe
fildll
adc
fstl
jae
aad
mov
jle
jo
xchg
nop
lock
shll
jle
mov
push
xor
lahf
jo
mov
ja
inc
sbb
fisubl
es
mov
cmp
int3
out
rclb
xchg
lea
fdivl
inc
mov
inc
cmp
jl
jb
insb
arpl
ja
or
loopne
mov
les
push
mov
and
movsl
ja
dec
cmpsl
int
jo
xchg
sub
xor
into
adc
xchg
movsb
stos
pop
adcb
sub
jl
dec
bound
movsl
inc
cmpsl
push
popf
or
jo
inc
int3
imul
dec
shlb
xchg
mov
mov
push
or
rcrb
pop
jo
push
mov
or
enter
xchg
jo
lret
pop
out
jo
sub
adc
sbb
inc
enter
outsl
jmp
dec
and
jnp
mov
jo
and
lea
add
lock
fstps
cmp
and
mov
xlat
xor
xchg
movb
iret
sub
jne
push
dec
inc
lock
rcrl
movsl
cs
cmpl
ljmp
sbb
dec
push
shll
addb
jp
xor
test
mov
mov
jo
insl
leave
sub
adc
lret
aad
add
jo
jecxz
add
lcall
aas
subb
test
push
push
adc
mov
dec
cmp
ss
lods
jo
sbb
aam
jo
add
xor
fsubrp
aad
sbb
jmp
cltd
adc
imul
cs
sbb
pop
push
adc
loopne
arpl
jo
jb
push
fsts
add
into
aad
insl
sarl
mov
xchg
or
jo
add
or
add
jo
sbb
cmc
sar
rcrb
les
cwtl
ret
jo
movl
sbb
rorl
jo
bnd
cmp
push
inc
jo
mov
ds
notl
jo
mov
lahf
push
insb
jo
addr16
mov
in
divb
adc
insl
mov
add
sbb
ja
sbb
lods
mov
jmp
loop
xor
lock
jo
ficoml
shr
dec
sbb
cmp
pop
cld
xor
jo
ret
roll
push
jo
cmp
adc
xor
ljmp
pop
fidivrs
decl
or
sarl
xor
out
jo
sub
aam
or
imull
add
in
add
mov
pushf
dec
repz
jmp
leave
mov
xchg
pop
jo
lcall
insl
aas
lahf
mov
xor
or
into
mov
dec
or
jge
mov
push
or
imul
mov
push
pmullw
stos
mov
ja
add
fnsave
xchg
cs
jecxz
jae
inc
rorl
push
rolb
fwait
arpl
jnp
jo
mov
xchg
fsubl
cwtl
and
inc
pop
out
lods
jecxz
and
iret
int3
insl
mov
push
enter
mov
cmp
inc
out
dec
and
dec
adc
sbb
fxch
jo
inc
cld
mov
gs
les
sarb
jo
xor
imul
cmc
jo
into
jmp
push
in
jl
imulb
pop
jb
ds
mov
dec
ja
shll
fstpt
lods
mov
xor
dec
ss
jo
inc
roll
nop
popa
insl
not
incl
clc
mov
dec
nop
or
jae
xchg
mov
xchg
das
fs
in
adc
jae
mov
mov
pushf
jo
sbb
mov
jo
pop
icebp
sbb
adc
jo
adc
sub
or
jo
pop
enter
insl
aad
iret
add
mov
cltd
add
push
test
rolb
xorb
xor
sub
and
pusha
cwtl
stc
ja
push
xor
outsl
loop
jecxz
jo
and
mov
out
cltd
insb
pop
rcrl
test
sub
fdivr
pusha
insl
test
sub
pop
nop
pop
fstp
and
pop
stos
cmc
mov
jns
enter
je
xor
fiaddl
add
jo
inc
and
imul
mov
outsb
jbe
sbb
lods
iret
jo
dec
into
pop
int
fwait
imul
cmp
jecxz
pop
mov
je
fwait
pop
mov
jns
add
xchg
ds
pop
ja
pop
test
dec
cmp
mov
out
in
mov
jbe
out
shl
jo
fcomp
lods
sub
je
loopne
lock
das
leave
std
push
test
sbb
xor
dec
lock
mov
lods
add
add
pop
push
pusha
mov
push
pop
sbb
jns
or
call
out
data16
mov
pusha
cmp
sbb
pushf
fldl
ja
sbb
sub
mov
fsubl
cwtl
shlb
xlat
cmpsl
xchg
mov
lock
lock
inc
add
fsubrl
leave
in
rolb
inc
scas
gs
xchg
inc
lea
inc
or
push
mov
mov
sub
jo
or
xchg
xor
inc
jo
and
jae
jo
popf
sub
jne
cmc
pushf
push
add
pop
and
js
scas
pusha
and
xchg
lret
push
lret
repnz
fmul
sub
test
test
add
jbe
outsb
fstpl
xchg
jo
sub
insl
and
leave
int3
aad
mov
sbb
dec
insl
push
in
fdivr
dec
das
jno
adc
sbb
sbb
push
mov
jo
popa
jl
push
jle
jno
inc
stos
inc
sbb
inc
jo
inc
dec
mov
jo
jmp
xor
aad
fcoml
or
jo
dec
mov
test
xchg
mov
push
jmp
mov
lcall
stc
push
ss
fs
sbb
in
inc
stos
pop
add
ljmp
or
lock
jnp
jbe
mov
rorl
inc
int
cmp
shll
pop
and
loopew
fnstenv
xor
in
sbb
stos
add
pushf
sbb
lds
or
outsb
fstpt
lods
ljmp
mov
dec
push
lahf
loopne
pop
dec
insl
ffreep
lcall
cmp
insb
lret
dec
jo
sbb
add
arpl
ret
std
adcb
jo
rcll
push
pop
adc
push
lods
sub
add
stc
jo
mov
dec
push
mov
jae
clc
daa
adc
add
jo
insb
jle
cmpsb
mov
and
jl
in
mov
ret
addr16
fdivs
mov
arpl
lock
push
imul
mov
shl
adc
outsl
inc
add
mov
or
pushf
mov
mov
xchg
mov
sub
push
jae
mov
jo
mov
add
dec
push
aas
jo
mov
jno
xchg
jb
jo
jge
xchg
or
pop
mov
jp
leave
outsl
lods
mov
out
lcall
xor
jo
mov
add
cltd
nop
daa
rcr
lock
add
or
loope
rorl
push
cmpsl
cmpb
gs
movb
adc
xchg
jo
jmp
gs
xchg
pusha
mov
pushl
js
and
jo
sahf
daa
imul
push
jle
repz
clc
add
pop
loop
insl
push
outsl
jbe
lahf
movsl
lcall
adc
ljmp
cmp
jl
jo
icebp
fbstp
dec
push
dec
aas
jo
mov
lds
mov
nop
or
adc
xlat
out
sbb
clc
jo
push
pop
ss
cld
cwtl
lds
mov
ret
rcrb
adc
cmp
xchg
add
jg
aaa
push
loop
push
jnp
sub
mov
pop
xor
and
andb
insb
cld
jl
mov
jns
jb
cmp
pop
jno
xorl
les
sbb
mov
or
inc
popf
adc
hlt
enter
cmp
jp
mov
xor
jo
fnstcw
add
mov
pop
outsb
jne
adc
mov
sub
pop
jo
insb
fsub
add
test
jae
xor
cmp
add
jge
jg
mov
pop
adc
cli
jnp
jo
std
inc
fadds
cmp
jb
shll
hlt
cmp
cltd
popf
rorl
lock
loop
pop
ret
movsb
xchg
call
popf
out
mov
je
dec
jo
lea
sahf
fsts
adc
jo
inc
addr16
and
mov
sub
xchg
xor
mov
mov
incb
inc
fists
pop
shlb
fisubl
pop
or
jo
push
mov
dec
push
jne
jo
fidivrs
aad
ja
jb
sbb
inc
inc
lods
push
jle
lcall
outsb
sarb
lahf
mov
pop
shr
mov
sarb
sbb
out
pusha
loop
in
jo
mov
mov
cmpsb
insl
movsb
adc
pop
aad
enter
sub
jae
push
jne
int
mov
scas
out
inc
repz
jo
fdivs
aad
mov
jo
push
scas
loop
sbb
test
push
fwait
mov
push
jg
ror
fistpl
sub
jmp
sbb
jo
bound
add
push
push
lods
int
int3
in
outsb
jo
mov
aad
je
push
and
add
lds
mov
mov
jo
nop
and
or
shll
imul
add
xlat
jbe
cmp
xchg
mov
sbb
aad
inc
mov
fwait
fnstenv
jp
pushf
mov
fs
inc
outsb
aas
frstor
mov
test
mov
js
hlt
pop
jmp
cli
jb
ja
sbb
dec
repz
lock
adc
pop
mov
pop
cli
fs
mov
leave
inc
jo
adc
xchg
push
ja
mov
lods
cmp
mov
mov
xchg
ret
test
jo
movsb
push
das
sbb
adc
cmc
inc
in
ret
movsl
imul
jno
rorl
mov
mov
adc
add
jo
inc
movsb
sahf
push
in
pop
push
add
pushf
and
jo
aad
xor
adc
nop
es
jo
cmp
fst
loopne
cmp
les
sub
xchg
out
fcoml
shlb
push
adc
xchg
insl
adc
hlt
mov
xchg
xor
dec
daa
inc
jns
add
lock
clc
rcll
loopne
stos
movl
addr16
test
adcl
insl
lds
fistl
mov
and
jnp
jle
xchg
sbb
mov
mov
pop
nop
mov
and
in
shl
jb
dec
adc
jo
lods
mov
out
insl
scas
shl
inc
sub
mov
sbb
cmp
or
cmp
test
mov
sub
sarl
fwait
jmp
xchg
lret
jo
int3
aad
xor
ficomps
sub
cmpsb
add
push
jo
fsubl
pop
jo
add
xchg
insl
mov
dec
jo
rcrl
faddl
mov
pop
lcall
dec
inc
push
das
add
pop
add
adc
icebp
iret
xor
aad
out
and
jecxz
xor
jo
mov
adc
jo
dec
fsubl
test
dec
insl
xchg
jecxz
icebp
add
cmp
mov
xchg
popa
mov
lcall
and
nop
push
sbb
pop
pop
aad
jl
lock
dec
sub
lock
xor
enter
call
les
rorl
not
js
xchg
cld
jo
cwtl
icebp
cmp
jae
jo
lds
fistpl
repz
into
in
aaa
insl
adc
aas
mov
sub
sti
mov
xchg
cs
push
pop
dec
insb
pop
pusha
xor
jo
ret
inc
aam
push
jo
cmpsb
loopne
dec
push
pop
jo
and
jl
jo
aad
sbb
sbb
mov
jno
mov
xchg
loop
xchg
jo
repnz
sbb
pop
sbb
mov
xchg
std
fistl
lods
push
cmc
imull
jo
xor
push
lcall
fldt
xlat
jge
lock
in
push
into
mov
outsl
orb
sbbb
jnp
mov
dec
ficompl
jo
inc
jecxz
scas
cld
mov
xchg
push
sbb
out
or
jo
sub
xchg
nop
insb
push
xchg
add
imul
mov
mov
pop
sub
in
xlat
fstpt
add
sub
dec
jo
and
ljmp
dec
push
mov
pusha
fsts
lds
add
lea
add
pop
pop
dec
fidivl
int
mov
insl
insb
cwtl
mov
mov
scas
adc
jo
in
add
jo
jns
gs
fisttpl
adc
roll
ja
icebp
test
add
jp
push
mov
sbb
das
or
and
shrb
movsl
ret
sub
test
jle
into
mov
fdivrl
insb
jbe
mov
cmc
xchg
fsubrs
stos
mov
mov
push
mov
pop
jno
jne
insl
jmp
push
push
mov
pushf
sbb
inc
and
xchg
add
xor
or
xchg
jo
mov
in
xorl
das
cmp
sbb
test
movsl
push
xorl
call
scas
lret
cld
cmpsb
jo
mov
lahf
loope
cmp
mov
fwait
enter
mov
cmp
and
jecxz
jo
cld
outsb
fisttpll
or
int3
jl
fcomi
jo
stos
pop
mov
jo
mov
add
aaa
jmp
cmp
xor
lahf
sub
jnp
mov
lret
and
xchg
dec
lcall
xchg
push
dec
mov
orl
int3
lock
xchg
es
cmp
ret
test
dec
jnp
jo
adc
outsb
lods
mov
lcall
pop
nop
jo
sub
push
pop
jo
and
mov
inc
cmp
pushl
cmp
fldenv
mov
jo
imul
iret
call
jmp
jb
stc
pop
outsb
jle
xchg
mov
adcl
lret
jo
inc
sbbb
xor
cmc
shl
jo
mov
test
dec
cwtl
loop
outsb
sbb
data16
stos
sahf
push
xor
xchg
test
pop
inc
pop
mov
mov
pop
mov
pop
dec
imul
jne
pop
popa
mov
xchg
jo
test
adc
jo
lds
or
mov
repz
scas
repnz
pop
push
inc
mov
push
jp
icebp
fwait
jo
lea
out
jl
xlat
test
lret
sub
pop
fcmovnbe
lods
popa
ret
jo
push
adc
xchg
out
pop
sub
and
push
pop
xorl
loopne
xchg
lds
adc
xor
daa
add
adc
jo
or
pusha
jo
cmpsb
aad
std
push
xlat
jecxz
mov
jl
mov
bound
xor
les
rcrl
pop
sub
out
test
fistpl
and
out
arpl
data16
shrl
addr16
jo
lea
fdivs
add
repz
jo
adc
mov
mov
or
fsubrs
orb
jo
shll
int
sub
sahf
cmpl
ror
mov
jmp
bound
xlat
bnd
cmp
push
mov
loope
pop
push
and
test
xchg
in
xchg
faddl
idivb
bound
ja
jg
sbb
out
dec
sbb
rcll
mov
test
lods
jo
cmp
sub
sbb
mov
shrl
stc
imul
sbb
loope
dec
in
mov
insb
lea
jne
inc
nop
push
dec
in
call
xchg
aam
fidivrs
ret
jl
cmp
lea
call
sub
jp,pn
iret
bound
mov
cmp
jo
out
sti
insl
cmpb
sub
mov
push
pop
xchg
xor
test
inc
into
dec
rorl
mov
scas
sbb
in
adc
rcr
xchg
insl
imul
and
mov
int
mov
mov
es
adc
jno
repnz
test
mov
or
mov
call
xor
nop
daa
jae
fdivr
sbb
mov
ja
inc
jp
or
cltd
or
xchg
test
hlt
jbe
push
push
ret
xor
xchg
loopne
inc
jns
mov
cmpsl
mov
mov
imulb
popf
data16
call
outsl
and
and
mov
idiv
sbb
mov
sub
push
push
mov
add
xor
sbb
cmp
or
dec
iret
or
loopne
cli
jo
pop
mov
xchg
mov
ret
das
cwtl
fmull
sbb
push
adc
push
add
fistpll
mov
push
push
lcall
sub
pop
xor
sub
aaa
or
lock
faddl
xchg
mov
jo
outsb
pop
lcall
ljmp
bound
fcomip
into
mov
divl
fwait
dec
xor
leave
sbbl
xchg
mov
mov
jo
ljmp
dec
and
lods
popf
lret
sbb
pop
dec
sbb
cld
mov
scas
pop
sbbb
imul
inc
push
pop
pushf
cmpsl
jo
dec
lods
sub
adc
cli
push
orb
xchg
jg
inc
jo
fwait
aad
lret
sti
push
movsl
hlt
xor
cmp
or
out
and
repz
xchg
mov
mov
ss
jo
mov
popa
out
push
dec
push
clc
cltd
pop
outsb
leave
mov
out
adc
adc
sbb
sub
shlb
aam
shr
mov
jl
jo
adc
xchg
jne
jae
add
rcrb
push
ror
mov
pop
adc
xor
in
aad
in
cmpsl
test
cmp
mov
ficomps
lcall
roll
xor
rclb
jo
aad
clc
insl
jbe
dec
outsb
adc
pop
adcb
dec
cmp
imul
int
pop
scas
adc
daa
sbb
cmp
out
jp
mov
shlb
adc
pop
negl
loope
rcr
cwtl
fldcw
add
mov
sub
mov
jo
popf
repz
aad
jo
push
and
jo
ss
out
fldt
lock
dec
leave
pop
jo
out
pop
xor
cmpsb
int
pop
xchg
test
rcr
push
lcall
push
adc
mov
jge
push
dec
scas
dec
jo
mov
pop
test
add
or
aad
je
push
push
push
movsb
add
mov
test
xor
pop
push
dec
sub
adc
rol
mov
pop
fstpt
sub
aad
cltd
dec
push
mov
mov
mov
add
jnp
push
lret
sbb
mull
jne
ljmp
dec
add
and
mov
call
pop
push
out
mov
jns
psubusb
xchg
push
jo
mov
rolb
inc
jo
out
stos
dec
test
add
cmp
bound
jo
sub
inc
iret
fbld
inc
mov
or
lods
test
das
jb
sete
jo
sahf
sub
pop
ffreep
enter
fidivl
xchg
sub
jo
jb
lret
mov
jns
leave
insl
jecxz
cmp
push
fcompl
sbb
sbb
data16
and
jo
nop
enter
into
cmp
mov
repz
sbb
add
das
push
out
stos
sub
xchg
outsb
mov
scas
xor
push
add
sbb
inc
sub
jne
dec
movsb
int3
jo
cmpsb
mov
add
addl
popf
dec
ljmp
inc
mov
dec
adc
xlat
cmpsb
jnp
mov
addr16
xor
lods
push
lcall
cs
out
popa
pusha
jo
xor
jno
int
push
neg
push
jp
fiadds
sbb
aaa
jae
xchg
pop
les
ljmp
pop
ja
frndint
insb
cltd
movsb
xor
mov
push
fidivrs
adc
push
idivb
jo
pop
push
fiadds
xchg
push
clc
repnz
mov
adc
fs
or
ja
int
push
pop
loopne
lahf
adc
loope
add
lock
into
jo
flds
gs
dec
and
shlb
or
pop
test
das
shll
daa
std
push
int3
add
sbb
xchg
shr
jae
scas
sahf
fwait
jge
into
imul
or
pushf
test
dec
sarb
jo
push
outsb
aad
jbe
mov
cmpsb
cmp
divb
inc
lods
jo
xor
cltd
jno
je
pushf
and
sub
loopne
ret
mov
push
fistl
sbb
js
mov
in
sub
pop
fnstenv
pop
aas
popa
loope
or
push
xchg
and
mov
jo
pop
sub
insl
or
outsl
push
cmp
lret
addb
adc
inc
or
mov
jo
mov
sbb
sbb
sub
dec
jle
jo
into
inc
enter
mov
out
pop
dec
add
jne
scas
or
dec
rcrl
pop
pop
lods
or
fcmovbe
dec
divb
mov
gs
fsubrl
es
push
sbbl
mov
in
pop
jo
shll
fldlg2
incb
leave
jo
add
jo
inc
push
mov
lea
cmpl
xchg
aam
jo
mov
into
test
push
movsl
fs
addl
outsb
cwtl
das
mov
jbe
dec
jo
push
aad
fsubrs
mov
mov
adc
stc
repnz
add
pop
jo
push
int3
and
mov
iret
pop
jo
mov
mov
test
jo
test
mov
inc
loope
jo
test
mov
and
shl
fsubrl
nop
fwait
jo
js
lea
lds
add
cmp
xchg
sbb
jo
pop
lods
mov
ja
xchg
sub
push
xchg
sub
out
loope
pop
ljmp
mov
movsl
scas
pop
imul
jo
fstpl
sbb
mov
mov
out
xchg
insl
insb
mov
mov
cmp
sahf
inc
call
jo
fimull
inc
addr16
push
jo
fwait
inc
cs
outsb
in
xchg
adc
pop
xor
shrl
pop
jo
mov
das
adc
jae
fdivrs
mov
pushf
sarl
mov
aad
test
mov
and
add
jne
inc
out
adc
mov
dec
lods
stos
lock
fnstcw
jl
shlb
scas
int3
mov
pop
lock
cmp
adc
clc
cmp
dec
gs
and
inc
fdivrl
lods
cmp
mov
out
iret
pop
push
xchg
or
test
clc
addr16
or
movsl
jecxz
int
gs
xor
scas
adc
push
push
jo
dec
inc
out
lds
jo
popa
cmpb
dec
push
fldcw
fcmove
in
shrb
mov
jno
daa
jo
or
in
icebp
cli
repnz
jo
flds
push
jo
pop
jecxz
pop
add
inc
pop
sub
dec
jo
flds
mov
add
insl
stc
xchg
inc
xchg
and
dec
jp,pt
inc
mov
nop
pusha
les
jmp
push
sub
jo
sahf
aam
dec
shr
cmp
aad
fsub
out
ret
es
jo
ljmp
jo
adc
mov
dec
inc
arpl
xor
pushf
push
in
add
or
cmpsb
push
jo
dec
pop
clc
push
xchg
pop
jo
or
or
hlt
dec
push
sub
sub
jo
mov
adcb
jo
xchg
push
cmpsb
add
pop
jo
enter
sub
shll
push
pop
push
into
mov
rcrb
jo
inc
dec
xor
pop
or
insb
pop
jo
addb
push
out
mov
pop
lcall
shl
xchg
mov
jo
fmull
sub
jb
movsb
pop
jge
fcmovu
out
dec
cmpl
addr16
push
not
ret
outsl
pop
lcall
add
xchg
scas
inc
mov
aad
jo
lahf
inc
ret
and
jo
lret
ds
dec
pushf
sub
mov
push
xchg
jnp
pop
or
stos
cmp
mov
pop
rcr
shll
pop
ja
add
cltd
repnz
sub
pop
mov
push
push
push
dec
ror
outsb
jbe
gs
test
nop
lret
jo
pop
pop
mov
stos
inc
test
add
repnz
icebp
cmpsb
mov
add
inc
scas
mov
mov
mov
add
outsb
clc
xor
mov
pop
xor
jne
scas
test
or
add
xor
dec
inc
jo
mov
add
jo
jmp
mov
cmpsl
xor
or
sbbl
lahf
scas
xchg
pop
jge
push
ljmp
push
mov
aad
pop
and
jo
out
cmpsb
rorl
clc
je
push
fsubrl
add
ja
sub
sbb
push
mov
popa
xchg
add
loopne
out
test
test
inc
out
mov
adc
sbbl
jo
add
clc
jo
pop
fwait
pop
lret
push
ret
inc
mov
and
jo
adc
xchg
hlt
ror
sbb
mov
aam
lods
jo
and
xor
jo
sbb
sbb
add
into
js
and
dec
ljmp
sub
pop
lret
jo
jle
inc
repz
lock
push
mov
loop
and
jge
push
mov
xchg
pop
jmp
jo
lea
cmp
faddl
scas
fmuls
or
pop
push
or
fnsave
xchg
loope
ja
and
dec
cwtl
subl
jae
ss
lock
bound
adc
or
add
mov
sarl
jo
jno
or
fmuls
lcall
ja
mov
test
cld
xor
mov
xchg
lahf
in
jo
and
arpl
mov
jo
jbe
out
fiadds
push
loope
into
jo
into
aad
cmp
dec
cli
out
jno
cld
cmp
sar
xor
jge
movsb
shl
cmp
jo
ss
dec
call
jo
pop
lcall
sbb
aaa
mov
jo
pop
rolb
dec
jle
outsb
lock
pop
inc
stc
imul
nop
pop
mov
ret
cmovp
dec
fisubs
frstor
out
lcall
dec
inc
push
or
mov
aaa
in
mov
pop
xor
and
clc
fmuls
jo
dec
loopne
xor
les
sbb
sub
sbbl
lret
dec
push
jae
int3
xchg
repnz
jo
fldl
or
jb
lcall
stos
xchg
jo
pop
mov
cmpxchg
insb
jo
loopne
orb
dec
push
std
insl
jo
jae
out
mov
xchg
data16
mov
and
add
fisttpl
pusha
outsb
movsl
push
cmp
and
test
leave
imul
mov
pop
push
outsb
dec
movsl
adc
push
jae
js
aaa
into
jo
inc
push
cmp
push
leave
push
lds
jg
adc
xchg
and
dec
pop
jo
or
out
bnd
xor
scas
mov
jo
dec
mov
lcall
ret
adc
in
adc
subb
ja
insb
lret
stos
mov
mov
jo
lods
push
arpl
mov
push
adc
xchg
mov
roll
insl
xor
shr
rolb
addr16
bnd
mov
xor
jo
pushf
in
out
aad
insl
mov
mov
repz
or
mov
adc
jne
cmp
pop
jo
xchg
ret
inc
ficompl
sbb
cmp
adc
push
mov
mov
push
xchg
rcr
or
jo
mov
push
jo
aad
shlb
jo
leave
pop
and
mov
rorb
aam
jo
arpl
insb
mov
sub
test
push
cmp
insl
mov
xchg
je
mov
sub
in
dec
adc
jo
xlat
dec
or
insl
sbb
adc
cs
mov
mov
jo
sbb
mov
pop
mov
push
imul
jnp
mov
insl
or
shrl
outsl
mov
mov
iret
dec
sub
push
lock
fisttpl
jge
mul
sub
lock
pop
jo
jecxz
lea
aad
sub
es
shlb
mov
adc
xchg
sub
push
insl
mov
mov
adc
lods
pop
jo
in
jg
aam
outsb
pop
inc
pusha
inc
insl
mov
pop
clc
add
mov
ss
rcrb
sub
push
cmp
adc
and
mov
aaa
out
jo
lahf
dec
or
dec
push
mov
loopne
jo
mov
vaddsubpd
xchg
jo
push
dec
add
mov
cld
mov
popa
aaa
jmp
mov
out
adc
jo
ficoms
in
int
mov
call
loope
mov
iret
clc
jge
das
sar
push
add
add
jo,pn
pop
fxch
jae
jbe
pop
dec
mov
fs
mov
push
mov
into
out
jo
mov
fcoml
mov
inc
pop
push
addr16
lret
jg
in
cwtl
cmp
pop
ds
std
mov
in
out
or
insl
jle
xor
inc
insl
cmc
jo
cmp
mov
jnp
inc
pop
test
das
mov
cwtl
mov
jo
int3
and
cmp
fldcw
jmp
mov
scas
clc
mov
dec
jo
inc
jbe
mov
fldenv
cmp
insl
adc
rorb
clc
fidivs
lret
adc
jp
xor
push
mov
jo
pop
in
shr
inc
inc
call
cmpsb
jo
or
popa
fnstenv
pop
iret
dec
push
test
adc
mov
pop
push
sub
mov
shrl
in
xor
or
add
jb
or
insl
out
aam
xchg
insl
out
add
in
jo
loope
ljmp
outsl
fs
push
dec
jbe
jo
mov
cmp
jo
fdivrl
addr16
sub
insl
scas
xor
push
xchg
sbb
push
jbe
cld
xor
jo
mov
xchg
sbb
test
hlt
outsl
adc
inc
inc
jo
mov
dec
dec
gs
aad
mov
dec
pop
push
pop
add
adc
cmp
jo
in
sahf
dec
pop
fldl
jo
aad
inc
cmc
mov
imul
popf
out
xor
xchg
pop
xchg
outsl
cmc
mov
push
ss
sub
and
cmpl
jo
dec
rcll
aad
popf
mov
shlb
mov
xchg
sbbb
mov
ja
xchg
in
jo
roll
lahf
push
dec
aad
inc
mov
mov
pop
mov
ja
enter
jo
ret
adc
and
icebp
dec
outsb
mov
pop
cmc
ret
sub
test
lods
jge
jmp
insl
fnstcw
cltd
cmp
adc
adc
lea
sub
ja
mov
mov
push
lret
sub
cmpsb
shll
lock
xor
inc
push
sbb
out
xor
pop
imul
jnp
jno
arpl
loop
shr
std
xor
xor
xor
adc
xor
jo
cmp
jo
shll
stos
cmp
jb
mov
orb
ljmp
cmp
lea
insb
xlat
xchg
stc
pop
jno
rep
int3
sub
mov
imul
mov
addr16
add
jns
jle
pop
leave
or
jo
int3
out
mov
fwait
lcall
popa
sub
or
jo
pop
shll
loopne
fldt
and
jo
lret
pop
rorb
lods
pop
xor
enter
fdivr
addr16
fidivl
fcomip
cltd
add
push
cmp
ljmp
das
jo
xchg
mov
dec
es
sbb
mov
jo
loopne
mov
mov
push
movsl
push
nop
pop
pop
notl
das
pop
inc
adc
jo
fcmovbe
jp
adc
push
xor
xchg
into
lock
cmp
pop
repnz
inc
adc
jae
in
adc
add
cwtl
mov
sbb
push
cmp
jle
aad
stc
mov
jp
leave
movsb
pusha
jo
push
aaa
data16
push
lock
push
andl
fistpl
jo
inc
mov
cmp
imul
rol
push
cmp
ss
gs
iret
xor
pop
or
xorl
int3
iret
test
xchg
push
jo
aad
push
xchg
dec
pop
bound
xchg
push
ret
inc
subl
cltd
nop
push
xchg
jo
imul
push
mov
mov
ficomps
stc
mov
int3
cld
int
dec
xchg
mov
jo
bound
shrb
insb
jle
jno
fs
sbb
rcrb
int3
dec
loopne
in
jp
pop
dec
movsb
stos
out
loopne
jae
test
mov
and
jnp
mov
jo
lds
mov
mov
jo
cwtd
andl
add
aad
jae
ss
pusha
mov
fistps
pop
xchg
and
add
and
cmp
xchg
mov
test
nop
hlt
nop
mov
jo
add
inc
adc
push
adc
fs
out
ficomps
call
and
xor
cld
in
filds
push
jb
adc
jae
xlat
jge
adc
enter
arpl
das
pop
mov
ficoml
cmc
lock
movl
mov
into
orl
jmp
and
js
fildl
jle
popf
push
sub
pop
shr
jo
adc
rorb
sub
mov
sbb
mov
push
push
mov
dec
pop
lahf
enter
ret
sbb
jo
cwtl
ds
add
cmc
and
push
pop
mov
rcll
mov
pop
jo
inc
fcompl
jo
aad
pop
test
mov
into
push
sbb
mov
push
aad
scas
cmp
jo
mov
pop
inc
or
cwtl
cmp
jo
mov
mov
jp
push
pop
sub
mov
int
loope
xchg
push
pop
xor
repnz
out
test
and
loope
in
inc
jo
aad
jno
dec
xor
jo
out
scas
and
movsb
inc
data16
mov
sbb
cmp
jno
push
call
icebp
aas
jo
mov
xchg
cmc
jge
xchg
addb
out
cmp
les
shlb
xchg
fisttpl
subb
lds
out
or
sub
clc
aas
jno
jo
dec
fucomi
call
leave
push
aad
and
loope
push
fmul
xor
pop
dec
pop
lret
movsl
bt
divl
add
popa
pop
enter
jo
mov
sub
mov
lea
pop
jo
xor
adc
jo
xchg
mov
movsl
jo
push
sarl
into
cmc
divb
rolb
sbb
jo
push
int
cmp
outsl
insl
int3
fildl
lret
repnz
lock
mov
adc
fstpt
dec
f2xm1
add
in
and
jo
xor
in
jg
add
cmpsl
sub
mov
outsl
or
popa
mov
insl
sti
mov
out
repnz
pop
nop
rcll
jae
cmpsl
mov
cld
nop
mov
adc
in
jmp
push
pop
xor
mov
and
jo
and
mov
pop
cmp
xchg
jge
jmp
mov
fidivl
xchg
dec
pop
fs
pop
mov
fsubl
sub
stos
ja
adc
leave
and
jns
in
xchg
mov
jo
clc
mov
xor
xor
mov
repz
js
pop
cmp
jo
mov
bound
mov
lcall
sub
call
scas
cmp
leave
jo
push
in
lret
es
lods
mov
push
ja
pop
das
insb
nop
into
lret
insl
add
aas
jb
outsl
xor
arpl
pop
mov
lock
lds
jl
mov
movsb
adc
movsb
adc
insl
fprem
jo
stos
cld
adc
stc
call
jo
or
shlb
dec
mov
test
jo
lea
pop
icebp
pop
sub
call
mov
jo
or
xchg
adc
test
push
pop
add
jnp
mov
sub
cmp
jbe
cmp
sbb
sub
jge
loope
or
pushf
jo
cmp
mov
add
jo
pop
popa
xchg
add
mov
jo
outsl
out
cwtl
lret
mov
cmp
out
loope
fsubr
jo
pushf
dec
push
or
aad
imul
push
push
and
jo
outsl
mov
adc
jo
inc
add
aas
jo
sbb
shrb
aad
outsb
ljmp
sahf
paddsb
lret
xchg
jl
movsl
flds
roll
cli
mov
push
in
mov
pushl
and
rol
jo
outsb
call
jo
stos
aad
adc
fucomp
xor
test
jo
pop
iret
mov
jo
xchg
pop
dec
aaa
fsub
mov
aad
mov
insl
and
je
pushl
fcoms
jo
js
inc
outsl
sbb
ds
sbb
jb
lds
out
jo
jg
mov
jo
add
pop
xlat
stc
mov
mov
cltd
pushf
jo
jno
mov
mov
or
sub
add
jae
pop
in
movsb
dec
jo
mov
push
fcmovnu
inc
mov
pop
insl
add
scas
cwtl
pop
das
insl
xor
xchg
adc
mov
bound
xchg
jecxz
push
jo
adc
out
push
shll
cmc
mov
xchg
sbb
stc
jo
aad
sbb
or
push
push
jmp
data16
push
xlat
pop
cltd
sub
fnop
pop
fcompl
int3
ljmp
jbe
xchg
pop
xor
jo
or
stos
inc
or
dec
mov
jo
pop
in
push
lock
aad
arpl
jle
pop
push
jb
shrb
xor
arpl
jnp
sub
je
mov
jo
push
fcoml
fwait
lret
jge
jb
enter
pop
dec
and
jo
xor
push
pop
push
aad
pop
jae
sahf
arpl
jns
mov
aaa
in
lods
call
fcmovnbe
lahf
xorl
shr
add
jg
mov
cmp
inc
or
xlat
mov
mov
movsl
pop
mov
dec
mov
jmp
fdivr
or
ret
jo
popa
aam
or
fucomp
adc
adc
es
cmpl
dec
jo
rolb
lret
jo
cmp
testl
aad
sub
int
fwait
xchg
or
sub
jo
mov
pushf
clc
mov
in
roll
cmp
jo
xchg
xchg
cmp
and
fsubr
decl
iret
or
jo
cltd
cmp
test
mov
cmpsb
inc
je
cs
jo
jae
cmpsl
into
pop
rcrl
jge
dec
js
sarl
movsl
xchg
jmp
jo
daa
mov
sbb
shlb
mov
inc
sub
divl
add
sti
mov
dec
pop
xor
loopne
jecxz
das
inc
ljmp
popa
jl
int3
btr
push
dec
pop
cmp
xor
js
inc
mov
or
sub
and
jmp
mov
je
pop
pop
mov
jmp
lea
movsl
lock
jl
bnd
ret
test
fwait
add
insb
xchg
xor
movsb
jo
test
cmp
jmp
adc
dec
pop
out
pop
jo
inc
test
add
sbb
loopne
loope
pop
jo
into
test
lcall
pop
mov
xor
mov
and
jo
xor
dec
mov
xchg
pop
fs
cwtl
xor
jo
int
je
mov
jo
jmp
sub
ja
jle
jo
hlt
movb
stc
xchg
pop
fadd
sti
jo
sbb
pushf
adc
jo
cmpsl
insb
dec
leave
xor
or
arpl
ja
cmp
jo
inc
xorl
pop
jo
loopne
out
xchg
sub
mov
mov
pop
jo
out
pop
pushf
cmp
aad
subl
sbb
scas
cmp
add
add
adcl
dec
pop
loope
ret
lock
cmc
or
adc
fs
and
cli
xor
lock
push
and
sbb
aam
repz
jnp
adc
lea
lods
bound
ffreep
roll
add
dec
mov
dec
ret
jo
fsts
stos
sbb
mov
push
insl
jno
or
rolb
pop
jne
fdivs
push
mov
mov
nop
fldcw
fwait
outsl
neg
push
add
fimull
and
inc
out
rol
dec
jns
ljmp
outsl
jno
lods
xchg
ret
mov
fldenv
mov
jb
or
notl
xchg
add
jae
xchg
or
add
lock
fdivrl
iret
jp
xchg
ds
pop
dec
mov
lods
mov
mov
addb
pop
scas
mov
pop
push
or
fcompl
pusha
mov
and
push
rcrl
mov
cmp
sbb
cwtl
je
push
fs
jo
dec
mov
arpl
inc
jo
dec
inc
fbstp
aad
lods
pop
push
test
jae
rcll
add
or
cld
cmp
xorl
adc
mov
lahf
pop
or
faddl
lock
mov
and
movsb
jmp
cmp
jp
jo
in
lea
inc
jno
sbb
repnz
xchg
jo
adc
test
or
testb
rorl
or
pop
xchg
jb
dec
jo
add
fdivrs
jae
repz
cmc
dec
int
inc
jne
mov
sbb
lahf
jo
test
cld
mov
pop
cmc
fcmovnbe
out
shll
and
dec
roll
pop
pushf
jbe
inc
jo
sbb
mov
dec
sub
das
popa
xor
dec
dec
repz
cmpsb
insl
insb
imul
inc
iret
shl
fsubs
jg
das
push
jo
pop
fsubrl
cmpsb
push
mov
sbb
cmpsl
inc
shll
icebp
mov
or
das
sbb
push
jo
les
and
je
jnp
fildll
insl
ja
mov
cmp
xor
mov
scas
xchg
stos
xor
dec
xor
lock
les
jnp
andl
push
out
mov
ret
dec
in
cmp
addr16
shrl
jo
pop
pop
xor
insl
lds
xor
out
repz
jecxz
pop
mov
ds
push
or
add
scas
xor
adc
sbb
pop
jo
fldt
adc
mov
jo
mov
and
out
or
outsb
shl
addr16
nop
into
pop
cmc
imul
ds
test
mov
int3
incl
mov
push
stos
insl
lock
daa
sbb
adc
ss
push
out
pop
mov
lods
aas
loope
jle
jecxz
mov
dec
jo
add
repnz
ret
ficoml
movsl
mov
cmp
pop
in
mov
xlat
test
inc
jo
xchg
mov
and
loopne
adc
sbb
daa
push
jbe
nop
mov
inc
xor
jge
lds
xor
jl
es
mov
and
add
inc
sbbl
push
mov
pop
dec
pop
pop
data16
jo
popf
out
lcall
jmp
out
inc
cli
pushf
leave
ja
jg
mov
stos
xor
lods
xchg
testb
or
scas
mov
and
call
cmp
and
jg
adc
push
adc
pop
jge
shlb
adc
mov
pop
mov
jo
lea
jo
mull
mov
push
leave
xor
shlb
xorl
push
and
rcrl
xor
or
out
cmp
out
addr16
inc
jno
iret
adc
push
daa
rcrl
jo
push
int3
jnp
fidivs
cmpsl
rcll
jmp
les
push
sub
ljmp
aam
fisttpll
pop
push
std
jg
iret
jo
pop
lds
xchg
and
orl
dec
mov
pop
outsb
xorb
mov
fldcw
mov
pusha
adc
sbb
scas
mov
in
rcrb
jle
and
inc
jo
in
fsubl
outsb
sbb
nop
out
xchg
in
lods
lock
arpl
xlat
jmp
lock
lret
sar
sahf
xor
mov
vpshufd
ljmp
fsubp
cld
fucomi
sub
aad
mov
idivl
icebp
cwtl
stc
shll
sub
add
jo
jecxz
sahf
or
pop
mov
add
pushf
add
mov
dec
xchg
int3
jo
add
popa
ret
arpl
jle
insl
sub
sti
pop
xchg
loopne
jo
sub
out
fxch
jo
cmpb
je
lahf
ja
mov
adc
lds
insl
mov
mov
cmp
jo
lock
jo
outsb
mov
pop
xchg
inc
adc
and
jecxz
jge
jo
inc
loopne
and
lahf
push
push
movb
fnstsw
xor
pop
push
insb
cmpsl
jge
movsl
xor
aas
pop
jo
fwait
cmp
enter
pop
adc
sub
stos
fs
mov
mov
lahf
or
jp
in
mov
insb
jne
lods
add
fidivrs
xchg
cmpsl
dec
mov
jo
incl
shll
dec
pop
xor
inc
xchg
popf
hlt
xchg
in
pushf
fbstp
shll
inc
pop
notb
imul
roll
lods
repz
or
sbb
or
jo
pop
xchg
pushf
cmp
std
enter
cmp
clc
jo
stos
xor
jl
mov
jle
iret
jo
jbe
mov
pop
jo
lods
jb
ret
jno
pop
aam
sub
sahf
jl
or
sar
adc
dec
jo
xor
push
sbb
xchg
pop
test
jo
call
clc
sets
pop
mov
and
adc
push
pop
push
push
aas
cmp
mov
mov
enter
dec
cmc
cmp
mov
xchg
push
xor
jo
mov
fcoml
subb
jo
jnp
aam
adc
jo
inc
fcmovnbe
loop
jbe
dec
aad
lds
mov
add
xchg
push
fs
adc
scas
imul
clc
cmpsl
loop
or
outsb
insl
push
mov
push
cmp
lods
and
into
enter
or
or
ds
lods
stc
adc
std
jnp
int
and
mov
lea
xchg
mov
mov
data16
xor
sub
add
loope
lret
or
mov
lock
imul
xchg
hlt
inc
mov
xchg
push
std
cmpsb
push
mov
xor
aaa
jo
dec
lods
rcl
dec
fdivl
pop
jne
lds
icebp
jo
addr16
loopne
cmpsb
pop
xorl
lods
into
push
jae
mov
or
imul
shll
pop
xchg
aaa
mov
pop
ficoml
add
sbb
mov
mov
lahf
mov
cmp
icebp
insl
shr
xchg
mov
jo
stos
mov
mov
into
add
insb
lds
cmpsb
jge
andb
insl
mov
movsl
in
mov
jo
rcrb
pop
inc
fcmovb
ja
mov
push
pop
pop
stc
jb
xor
dec
adc
lock
adc
inc
adc
sbb
mov
push
or
push
stos
mov
out
sbb
mov
dec
fwait
ds
clc
es
scas
aam
jo
xor
fwait
cmp
lret
mov
cmp
jo
pop
jl
daa
enter
xchg
adc
scas
in
sub
dec
cmp
adc
testl
cli
or
sbb
div
sahf
jo
mov
inc
sbb
cld
popf
cwtl
shll
push
jae
xchg
int
nop
cld
scas
loope
bswap
mov
fs
jo
fistps
jae
xchg
dec
fnstcw
lcall
mov
pop
sbb
jo
lock
packuswb
dec
jne
sub
test
xchg
mov
jo
mov
stos
and
test
push
into
out
insb
or
jae
pop
or
pop
leave
mov
push
cmp
push
das
loopne
mov
bnd
push
adc
xorb
pop
push
cli
add
sub
fcmovbe
dec
jo
ljmp
out
jle
outsb
fwait
test
into
lcall
jo
ret
adc
aad
loope
pop
and
ss
dec
out
pop
lock
pop
xor
mov
imul
jne
or
add
scas
pop
fidivs
and
jg
mov
and
cli
enter
jo
cmpsb
lds
fadd
jnp
in
sub
push
sti
movsl
aas
or
fs
lods
lahf
in
jne
push
sbb
dec
adc
fnsave
mov
push
push
jo
jl
fsub
std
rcl
mov
inc
jne
mov
dec
jl
mul
int
mov
lret
dec
push
enter
jo
les
inc
nop
flds
jae
mov
enter
imul
out
popa
pop
andb
jo
add
mov
test
ja
push
adc
andb
xchg
jo
enter
fucomi
in
add
jo
mov
xchg
mov
adc
adc
xor
inc
jne
lods
lds
sbb
adc
mov
aad
cmp
out
dec
xor
out
mov
xchg
lock
xor
loopne
rorb
cwtl
fwait
push
cltd
fsts
cmpsl
mov
jb
dec
jo
and
ret
mov
lret
jno
adc
lock
mov
rcl
adc
push
push
test
jo
repnz
pushw
fdivl
push
lds
jmp
mov
inc
pop
fs
jl
fisttps
mov
xchg
mov
test
sub
aas
push
fsubr
push
ja
and
add
mov
pop
subl
cltd
mov
sbb
aaa
push
jo
xor
adc
mov
add
push
in
xorb
loopne
rorb
pop
mov
sub
jo
sub
fwait
mov
sarl
stos
lret
xor
jo
push
je
aam
test
jo
xchg
add
mov
jo
lods
ret
pop
mov
pusha
mov
pop
and
imul
stos
mov
cmp
dec
into
xor
sub
xchg
jo
and
pop
jo
lods
xchg
fcoml
imul
test
ret
cmp
lret
outsb
mov
push
testl
and
add
or
push
nop
hlt
cli
sub
push
jo
mov
fnstenv
and
movsl
bnd
xchg
imul
jne
inc
scas
jl
lcall
cmp
cmpsb
sbb
adc
lods
jg
and
dec
in
lock
ficomps
je
cmp
ds
leave
test
dec
pop
xchg
push
bound
lret
hlt
sub
sbb
lods
int3
lock
dec
shrb
cmp
xor
inc
movsb
lcall
sbb
push
sbbb
loope
mov
or
mov
nop
adc
scas
sub
vmovlps
fisttps
jo
movsl
xor
mov
cwtl
xlat
and
mov
cmp
jne
inc
insb
loope
ret
inc
lock
mov
or
mov
push
push
repnz
jnp
inc
cs
divb
iret
jo
aad
test
mov
in
pop
xor
jo
rcl
dec
fidivrs
jae
das
jbe
loop
jo
in
pop
jmp
aad
mov
lea
fldcw
mov
jp,pn
inc
pop
sahf
jo
aad
cmp
adc
popa
sbbl
inc
in
inc
rcr
je
rcll
mov
jp
jbe
inc
dec
jo
mov
clc
jne
aad
jp
jae
test
adc
jo
mov
pop
enter
out
fisttps
jo
int
xor
fs
leave
jo
push
mov
mov
mov
xor
aaa
push
rol
cli
shll
imul
inc
dec
cmp
out
fstl
jp
arpl
mov
ret
pop
push
add
fnclex
rcr
mov
jecxz
jns
imul
ret
cmp
sub
mov
jo
push
jmp
daa
insl
mov
mov
jg
mov
test
push
fsub
rorb
jae
inc
imul
inc
and
mov
and
enter
sub
mov
jne
movsl
sbb
lock
push
leave
stos
pop
test
jecxz
and
out
clc
push
pop
mov
jo
inc
push
push
mov
cmpsl
jo
pushf
push
ljmp
push
and
mov
jnp
xor
dec
lds
outsb
ja
loopne
in
adc
jo
mov
sbb
data16
ja
test
inc
das
mov
std
mov
in
sub
pushf
shl
mov
adc
xor
lds
call
jb
pop
jo
mov
lcall
ss
sahf
xor
mov
cmp
fwait
jge
and
shrl
in
cmp
shlb
loope
xor
dec
mov
mov
in
mov
notb
add
popa
jb
shl
shrl
stos
cmc
mov
push
or
jnp
push
in
neg
jnp
icebp
repz
iret
xchg
and
ja
cltd
or
mov
jo
aam
pop
in
mov
lea
xchg
into
sahf
aad
movsb
ja,pn
in
xlat
enter
dec
and
ss
jge
lock
neg
gs
jecxz
jo
cli
sub
add
jo
jb
sub
jo
pop
xchg
pop
and
adc
sbb
lods
scas
sub
loopne
pop
ja
mov
imul
addr16
jmp
push
cmp
jo
sti
xor
cs
push
out
mov
int3
lods
xor
mov
adc
shrl
loopne
lea
call
jo
in
outsb
mov
pop
mov
dec
jp
jae
and
shlb
sub
cmp
mov
mov
int3
hlt
mov
inc
out
fldcw
jo
mov
fdivl
dec
jae
shll
test
xchg
push
call
cmpsl
sub
adc
pushf
nop
insl
lock
ds
sub
incb
stc
sbb
insl
jo
aas
enter
loope
jo
dec
xchg
sub
insl
nop
scas
dec
in
add
ljmp
mov
je
rclb
fcoml
add
lea
dec
fistl
jo
popf
xrelease
stos
xor
fldz
in
mov
call
stos
out
mov
mov
popa
push
cmp
mov
and
inc
imul
mov
xlat
push
pop
jg
jo
subl
lock
sar
enter
cmp
js
pop
sbb
loopne
pop
insb
lds
jo
shl
mov
fcomi
jo
pop
mov
jge
or
rcrl
lds
ficomps
or
insl
jbe
mov
test
fdivl
imul
push
je,pt
mov
loope
lock
aad
pusha
jno
adc
divl
and
stos
mov
jo
xchg
jecxz
loop
addr16
lds
jo
lea
out
pop
xor
push
das
daa
or
xchg
jnp
mov
xchg
xor
fsts
add
jge
xchg
jno
push
out
add
outsb
mov
rclb
sub
scas
orb
out
xchg
je
jnp
test
insl
aaa
sub
xchg
orb
jo
mov
xchg
ror
xor
mov
fiaddl
pop
mov
cmpsb
push
sbb
jo
fdivl
push
mov
jo
aam
loope
cmp
int3
cmp
push
mov
mov
mov
add
stc
jo
add
xor
jae
mov
int
imul
adc
push
ss
data16
ja
es
xchg
inc
aad
movsb
out
gs
testl
mov
cmp
inc
insl
sub
or
add
insl
mov
cmpsl
mov
inc
jo
adc
std
jo
pop
data16
or
mov
mov
push
sbb
add
jmp
pop
push
jo
fnstcw
push
ja
in
sub
push
jo
outsl
mov
push
jo
adc
xchg
dec
and
jo
out
cmpl
pop
add
in
loop
add
and
mov
and
sahf
insl
pop
adc
xchg
adc
mov
pusha
ret
lock
cli
mov
jge
jb
je
scas
popf
mov
sahf
lock
imul
lcall
and
ja
rcrb
loop
fld1
dec
push
sbb
jnp
or
mov
fimull
outsb
jns
roll
inc
insb
jo
push
aad
xchg
sub
adc
mov
loop
jo
out
adc
push
cmp
jo
lods
fsts
mov
movsl
mov
divb
data16
add
sub
movsl
pop
jo
add
push
mov
or
sub
mov
movsb
testb
js
xchg
outsl
push
mov
pop
es
push
movl
xor
sub
lcall
negl
xchg
mov
shl
cmp
pop
in
jo
dec
insl
or
scas
jns
jo
pop
imul
outsb
adc
lods
mov
adc
jo
mov
repz
pop
add
arpl
loop
lock
mov
xchg
sub
aad
rcll
repnz
mov
push
push
or
adc
jo
imul
pushf
lds
jo
xchg
ret
pop
dec
iret
inc
jo
jne
jmp
cmp
in
inc
pop
sub
sub
mov
pop
jo
int3
rolb
fidivl
imul
shrl
xchg
sbb
insb
je
push
fsubrp
xchg
sti
jo
add
mov
mov
sub
pop
in
sbb
jmp
jo
cli
loope
aad
mov
adc
fnstsw
mov
mov
lret
lock
cmp
mov
insb
jo
or
daa
add
shll
adc
aad
addb
js
nop
add
add
lea
mov
test
mov
push
and
dec
cmp
sbb
loopnew
movsl
xor
jo
xchg
cltd
dec
push
xorl
inc
dec
and
xor
movsb
cld
jae
xchg
sbb
jl
cmc
jo
shl
fdivl
loop
out
shl
jo
ljmp
dec
pop
aaa
jl
fwait
and
mov
push
push
insl
or
or
sub
inc
add
jno
das
cmpsl
jo
shll
xchg
pop
or
aad
jo
jb
iret
xchg
fmulp
jmp
fsubl
stos
loope
cwtl
jo
test
jg
jo
lods
aad
mov
lods
loope
mov
frstor
jo
test
inc
jo
bound
rcrl
add
jo
pop
jg
sbb
data16
outsl
jo
insl
mov
jo
aad
lods
rol
nop
push
mov
jo
xor
pop
inc
insl
jb
or
imul
js
and
enter
ja
in
dec
jns
push
mov
pop
daa
push
xor
jp
jo
mov
mov
or
pop
push
push
nop
jo
addb
cld
fsubl
mov
mov
add
push
mov
jo
cmpsl
sahf
aam
out
mov
loop
xchg
fwait
jo
loopne
nop
mov
mov
adc
xchg
xchg
push
aad
xchg
aas
xchg
inc
sub
push
movsl
pop
dec
push
gs
icebp
shll
cmc
jnp
add
daa
and
push
jne
jecxz
repz
add
outsl
or
xchg
hlt
cmp
xchg
insl
fs
mov
mov
jo
or
aaa
scas
test
fistpl
push
push
mov
jns
push
push
std
sub
mov
jne
ljmp
mov
adc
into
add
insb
cmp
jb
pop
sub
mov
loopne
mov
insl
out
jb
or
gs
imul
dec
mov
mov
rorb
xor
jns
lods
jb
cmp
jno
mov
jo
sbb
pop
pop
add
push
jo
dec
movsb
daa
iretw
jo
mov
ljmp
out
push
xor
xor
in
adc
mov
es
mov
xchg
add
pop
xor
jmp
jo
mov
insb
cmp
imul
mov
push
mov
adc
repnz
or
xchg
sub
dec
fwait
xchg
dec
ja
adc
cli
iret
shl
ljmp
cmc
sub
sub
mov
js
xchg
rolb
stos
movsl
jb
sub
cmp
inc
test
nop
mov
jo
push
xor
xchg
jo
aad
add
stos
lahf
jb
pop
mov
push
sarb
out
and
loopne
jo
xchg
jo
mov
notl
jo
in
icebp
lcall
xchg
fldt
cmp
pop
dec
and
inc
sub
popa
xchg
mov
out
mov
sub
xor
imul
fnstcw
out
mov
out
add
mov
jp
cld
jmp
nop
jl
inc
xor
lea
sarb
jo
movsl
sub
ljmp
mov
jo
add
adc
fcmovb
in
insl
pop
xorb
daa
sub
adc
jnp
sbb
movb
cmc
jo
filds
ljmp
sub
adc
das
sqrtps
cmpb
push
clc
mov
lea
repz
jo
loopne
cli
sbb
fprem
dec
cwtl
in
jnp
and
jno
divl
sbb
inc
mov
ja
int3
sar
int
push
add
dec
movsl
or
jp
ds
repnz
repz
lds
pusha
inc
dec
bound
movsb
inc
jp
jo
nop
rolb
lea
jmp
aam
data16
jbe
je
in
ret
xor
adc
scas
xchg
jo
push
push
lock
fstpl
cli
insb
loopne
push
jmp
hlt
scas
jo
lret
loop
jb
shrl
out
jg
inc
sub
cmpsb
pop
push
je
xchg
imul
imul
jno
cmpsb
or
popf
add
or
push
lock
push
pop
or
popa
into
jo
test
jae
mov
jo
and
in
push
insb
jo
mov
mov
je
fimull
xlat
rclb
cmc
adc
push
lock
ret
adc
pop
sub
int3
mov
jo
dec
in
push
rcll
xor
movsb
hlt
jl,pt
jo
lea
daa
cmpb
clc
fldenv
jle
into
adc
call
jmp
call
cmp
pop
jo
adc
cmc
fmull
pusha
leave
call
push
xchg
je
repz
lds
push
imul
aad
dec
mov
nop
repnz
xchg
jo
stos
push
inc
ljmp
test
sbb
mov
mov
push
js
cmp
and
test
inc
push
insl
fistl
mov
test
arpl
jne
cmp
test
mov
mov
xchg
jo,pn
shrb
jo
push
popa
ficoms
xchg
inc
pop
ret
sbb
jns
outsl
jecxz
rolb
int3
rorl
cli
jl
out
iret
vpshufhw
fucomi
jo
xchg
jno
dec
or
jo
fistpll
cmp
and
out
jp
mov
arpl
fcompl
jge
in
insl
xor
cltd
xchg
or
les
into
xchg
xchg
pop
push
outsb
sub
adc
subb
mov
mov
and
aad
popf
xor
das
sarb
jo
pop
imul
inc
jno
jo
js
jnp
cmp
jl
scas
mov
and
fcomps
fs
jae
or
fdivl
push
mov
and
push
jmp
inc
push
jo
imul
mov
repz
int
xchg
imul
xchg
int3
rolb
push
arpl
lock
xchg
ss
dec
shl
jo
push
lret
fildl
mov
and
ja
xchg
push
mov
mov
jo
imul
inc
dec
push
add
mov
adc
popf
fwait
std
xor
imul
mov
scas
push
aam
loopne
cmp
mov
push
insb
jne
lock
mov
sbb
clc
mov
push
movsl
xchg
cwtl
push
lock
test
leave
pop
test
repz
ret
lock
je
add
stc
out
cs
cltd
in
sub
jo
dec
rcll
jo
shl
push
and
cltd
insl
sub
fcmovnbe
scas
outsb
inc
inc
scas
pop
jge
aad
push
push
or
push
inc
push
add
cmpsb
mov
jo
mov
inc
jle
xchg
enter
faddl
cmp
jo
cltd
inc
fsubs
xor
dec
or
pop
xchg
dec
or
lock
jno
fldcw
and
xor
mov
sbb
add
xor
push
fmuls
lret
xchg
leave
loopne
in
outsb
jo
repnz
cli
nop
movsb
dec
das
imul
jb
and
push
je
pop
loope
in
pop
ror
scas
test
push
pop
shll
jo
fiadds
mov
pop
xchg
jo
shll
mov
cmpsl
pop
or
inc
out
lahf
xchg
loop
bound
xchg
ljmp
sub
cmp
xor
xor
aad
fidivl
dec
bound
jp
mov
loopne
andl
mov
push
jo
push
or
cmp
sub
mov
jge
enter
mov
fcomps
cmp
pusha
test
or
fistps
and
jbe
add
cltd
pop
out
repnz
cmp
push
jo
fdivrs
jo
mov
fstps
testl
aad
subb
rcll
jns
jp
shrl
cmpsb
fisttps
sar
jo
stc
data16
push
push
mov
mov
adc
aam
xchg
aam
jo
jne
inc
loope
or
jo
inc
sbb
and
or
dec
mov
push
outsb
arpl
inc
mov
fdivl
or
push
lods
jne
xchg
xor
pop
scas
sti
xor
mov
mov
fs
sub
lods
insl
sti
test
dec
adc
mov
mov
jo
movsl
aas
ds
sub
xchg
ljmp
jo
mov
insl
outsb
jp
ret
idivl
sbb
int
jle
lods
adc
jo
pop
bound
imul
in
add
notl
cld
or
test
lock
adc
call
xchg
imul
pop
and
jnp
hlt
jle
das
sub
cmpl
jo
gs
out
add
call
jo
in
pop
fwait
shrb
jnp
data16
push
ja
jle
jbe
aad
insl
fs
jge
hlt
pop
jo
outsb
test
jnp
mov
dec
lock
dec
jo
pop
je
xlat
mov
clc
jge
outsb
mov
mov
aam
xchg
jo
ja
push
aas
fidivrl
mov
std
sub
xchg
mov
sbb
pop
sub
leave
or
stc
jo
rcrl
mov
xchg
inc
mov
clc
xchg
cmp
fcmovb
xor
add
lea
sub
add
ss
scas
rcl
in
and
int3
repz
sti
or
dec
xor
jne
fistl
sub
jns
jbe
push
xor
jle
insl
sub
add
xchg
loope
jo
inc
adc
daa
mov
xchg
jo
fbstp
lock
pusha
jo
fwait
hlt
pop
stos
aaa
orl
insb
rol
add
and
fstps
fsubr
cmpsl
pushf
loop
jo
mov
in
pop
aad
jno
arpl
and
jge
jne
xorl
je
iret
jo
inc
xchg
ror
jbe
ja
cld
jge
jne
mov
sarb
fs
xor
test
jle
mov
pop
mov
and
or
dec
jo
or
lea
paddusw
dec
aam
into
cs
ds
out
filds
jo
mov
sar
call
mov
cld
xchg
pop
mov
lds
std
push
nop
push
lods
je
push
adc
jmp
dec
jo
mov
bound
dec
pop
das
dec
stc
jo
mov
mov
push
testb
pop
xor
xchg
sbbl
jne
xchg
inc
jp
and
jo
negl
jnp
aad
jo
sub
push
scas
push
or
jo
mov
adc
jl
mov
mov
cwtl
add
test
stos
pop
sbb
or
jecxz
xchg
adc
mov
xchg
lret
dec
loopne
sub
xchg
insl
test
mov
jo
loopne
jb
test
jo
push
mov
push
int
cmpsl
aad
mov
sbb
push
push
sti
pop
mov
jo
or
popf
imul
repz
lods
insb
pop
push
jl
jo
push
orl
das
pop
notb
outsl
fwait
call
or
xchg
push
xlat
add
movsl
std
outsb
jo
adc
or
ret
mov
push
cmp
outsb
pop
cltd
push
adc
sub
ret
inc
inc
lea
jecxz
xchg
int3
lock
mov
push
cli
idivl
jne
mov
leave
xor
out
jo
fsubl
pop
inc
aad
jo
test
xor
jo
shll
std
imul
mov
movsb
xor
jbe
push
xchg
test
jo
adc
adc
or
stos
mov
push
icebp
jbe
jo
sub
push
jmp
pop
jns
mov
jp
rcrb
stos
scas
loopne
push
jo
jae
mov
jb
cmp
in
xor
mov
ret
cmc
lcall
insl
sub
vpshuflw
xchg
and
fdivrl
jo
jne
sub
xchg
fisttpl
dec
adc
xor
mov
sahf
fdivs
or
xor
mov
mov
adc
and
jo
out
cmpsl
jmp
cmp
jmp
mov
out
cmp
mov
sub
inc
lock
dec
sbb
lahf
mov
shlb
idivl
xorb
in
fmul
jo,pt
cmpl
dec
fstps
jo
sbb
ffree
subb
mov
mov
insl
insl
mov
enter
test
add
cltd
lock
jp
dec
jmp
mov
mov
jo
mov
push
jns
aad
inc
subl
jle
outsb
bound
sub
xchg
hlt
lock
jo
xor
or
pop
int
test
add
and
scas
cmpsl
arpl
popf
outsl
jo
stos
inc
jbe
push
mov
jo
push
roll
insl
sub
jge
ds
cmp
shll
jo
adc
inc
dec
into
pop
sbb
test
adc
adc
mov
mov
addr16
mov
sub
jge
mov
je
pop
out
push
in
popf
call
fsubl
outsb
mov
cltd
ret
fstps
mov
dec
xor
pop
aad
shll
aaa
fdivp
je
jle
jno
mov
mov
mov
rcrb
cmp
cmp
outsb
mov
in
das
mov
mov
mov
add
outsl
pop
subl
jo
xchg
leave
mov
imul
jo
pop
adc
mov
inc
scas
aas
lahf
ss
inc
loop
or
jo
add
sub
mov
lock
std
lahf
xor
xor
lods
add
movsl
or
cwtl
jae
sbb
mov
mov
adc
jae
in
mov
dec
jae
lret
ja
outsl
xchg
clc
lds
sahf
pop
add
fsub
cmp
jo
dec
enter
pop
or
jo
dec
mov
popa
adc
mov
lods
dec
fistl
aad
in
out
mov
lea
jle
jo
rorl
push
test
mov
xchg
lret
fildl
lret
jo
aad
inc
mov
psubusb
sbb
or
push
lds
loop
lret
fcoml
fisubs
das
cwtl
pop
jne
adc
pop
sti
insl
shl
add
outsb
incb
jmp
jo
cli
mov
jae
sub
push
pop
orb
mov
xor
adc
jo
xor
dec
push
sbb
pop
adc
jle
jo
sbb
push
sub
mov
inc
aam
jns
xorl
lods
imulb
xor
mov
inc
jecxz
lret
jmp
cmp
add
jb
cmpsl
mov
jg
push
ja
xchg
jg
roll
out
test
mov
jo
enter
cmp
inc
jo
aam
cld
loope
mov
jo
mov
inc
jo
jns
daa
adc
jo
add
fwait
mov
jo
lea
xchg
adc
dec
push
jg
mov
fwait
dec
push
jnp
jo
fdivl
or
pushf
cmp
pop
lahf
xor
mov
mov
xchg
sarl
push
jbe
jns
div
pushf
and
jo
jmp
adc
jo
mov
sbb
loopne
mov
jo
aad
inc
cmp
lahf
cltd
pop
sbb
cmpsb
jo
push
fwait
repz
push
sbb
ja
or
sub
jl
cmp
cmpsb
stc
fcoml
gs
outsb
add
fbstp
xchg
pusha
jo
xchg
pop
inc
adcl
insl
adc
loop
mov
dec
enter
sub
add
shlb
lock
fistl
or
enter
push
add
daa
jo
xor
add
arpl
mov
insb
xchg
jo
imul
or
jo
push
and
and
jo
flds
mov
arpl
pop
jo
in
cmp
out
je
fcomps
shlb
pop
int
jge
push
test
imul
jo
enter
pop
dec
shlb
lock
add
shrb
jl
cs
cmpsb
inc
seto
jo
mov
rcrb
dec
push
outsb
cli
mov
ret
aad
sub
rolb
fnsave
adc
pop
outsb
or
addr16
dec
jo,pt
or
jnp
rcrb
inc
jo
inc
xor
ljmp
or
add
testl
jno
xchg
push
jns
mov
add
pop
mov
pop
in
sbb
and
sub
lret
sahf
cld
insl
fmuls
dec
int3
ret
clc
or
pop
jo
jb
sbb
or
jo
das
inc
aam
dec
jl
lret
ficompl
xor
mov
out
cmp
push
data16
roll
and
pop
xchg
xor
pop
dec
in
sbb
add
push
ja
fs
mov
test
es
jmp
pop
jb
xchg
test
inc
fisubl
insl
xchg
stos
dec
out
cmpsb
and
test
test
dec
pop
pop
ds
jo
add
xor
push
jno
repnz
cmp
inc
das
sahf
dec
pop
sti
or
add
inc
jge
fmulp
xor
rol
mov
inc
jo
cli
ds
push
push
adc
dec
repz
loope
xchg
sbb
jo
fwait
repnz
jl
je
sub
jo
jae
in
pop
dec
fdivs
ds
les
xchg
repz
jg
pop
jne
and
pop
adc
ret
jo
orl
fdivl
sbb
adc
inc
aaa
flds
nop
push
or
lock
icebp
test
insb
pop
jo
fbld
stc
mov
outsb
popf
dec
xchg
xchg
mov
in
jo
push
adc
loopne
leave
inc
jo
cmpsb
fdivl
push
scas
repz
dec
jo
jae
aaa
xchg
mov
insl
cmp
mov
push
mov
adc
dec
adc
or
jo
sub
inc
test
hlt
pop
sbb
dec
pop
cltd
adc
inc
aad
sub
rclb
scas
jne
popf
out
je
pop
dec
mov
pop
les
adc
and
mov
outsb
cmpsb
stos
iret
lds
sub
gs
jmp
jo
lahf
inc
sub
fnstenv
jo
or
out
sbb
jo
aas
mov
shll
cmp
push
sti
mov
cmpsl
inc
fistl
mov
jo
test
daa
jb
insl
popa
push
xchg
cmpb
nop
movsb
das
cmp
ret
call
mov
dec
pop
insl
mov
test
jnp
xchg
add
xor
xchg
in
jo
xor
pop
orl
jo
enter
pop
dec
add
sbb
jle
insl
and
in
fldt
ljmp
lock
loope
ja
push
push
daa
jo
sub
mov
pusha
jnp
pop
shlb
stc
aad
inc
std
testb
mov
sub
inc
pop
jo
and
into
push
jb
jo
mov
pop
outsb
xor
adc
push
pop
adc
jo
imul
lret
or
sbb
mov
jnp
cs
lock
dec
mov
jo
push
pop
push
fidivs
sub
lahf
xchg
jo
add
aaa
jo,pn
in
fwait
into
mov
mov
jo
aad
mov
push
sbb
dec
icebp
lock
and
push
ss
jo
mov
mov
lock
pop
xlat
cli
jnp
rol
into
pop
xchg
mov
inc
lret
in
jo
pushf
fnstenv
dec
jmp
inc
jo
push
mov
aad
adcb
addr16
jae
loop
sbb
test
inc
daa
jo
push
mov
jge
mov
jo
jle
test
jp
push
inc
sti
lock
mov
cld
lods
mov
in
lock
cmpsb
ja
shll
sub
push
or
jmp
stos
mov
sub
movsl
enter
mov
in
ret
jo
mov
push
lahf
jae
test
cmp
ljmp
mov
int3
push
pushf
or
ja
out
mov
jo
jp
fwait
movsb
stos
lods
hlt
push
testb
mov
mov
ret
inc
jo
jmp
shll
cmp
out
push
add
lahf
mov
xchg
and
xor
fstpt
outsl
jo
adc
adc
iret
add
orl
dec
push
fcoml
loope
pop
jo
fwait
sbb
mov
xor
mov
arpl
xor
mov
sub
jnp
mov
sbb
push
jge
imul
mov
mov
loope
jo
jmp
adc
stos
imul
or
lret
mov
adc
aam
ss
dec
cld
sbb
mov
aad
insb
mov
jo
outsb
jge
cmpsl
jmp
inc
mov
xorl
ret
mov
push
or
cmp
aam
lock
or
xchg
jo
mov
pop
std
jo
movsb
insl
sbb
mov
fmull
incb
pop
jp
or
xor
sahf
jo
mov
and
fsubr
dec
push
mov
shrl
jo
xchg
les
mov
dec
jp
push
out
jg
pop
and
das
xor
xchg
daa
xor
lret
addr16
fidivs
mov
jo
or
cmp
jo
xchg
aad
stos
repnz
iret
jo
jle
add
add
and
push
pop
lret
jo
pop
rcll
outsl
xchg
aad
dec
lock
pop
adc
clc
aas
popa
jo
mov
fstps
test
ja
sub
sub
ljmp
data16
into
nop
cmp
adc
pop
adc
je
aad
les
sahf
jle
jo
pushf
push
adc
pop
jo
dec
js
rcrl
insl
jle
jo
inc
test
sub
movsb
jo
or
sbb
adc
mov
and
fnstcw
jbe
mov
pop
or
jo
sbb
test
mov
jo
test
xchg
js
int
mov
xor
mov
mov
jae
roll
popf
add
push
and
jo
push
in
andb
cmp
mov
ficomps
jo
aas
ss
mov
rcrl
mov
hlt
std
push
pop
fs
jae
jle
jp
fxch
mov
mov
sbb
cmp
inc
jo
cs
mov
dec
pop
jae
jg
pop
cld
in
jo
jl
mov
jle
insl
sbb
js
xchg
arpl
jle
rep
filds
ja
push
or
ja
dec
sbb
cmp
xorl
add
pop
es
pushf
inc
jp
mov
leave
and
jnp
jbe
lret
shlb
xor
enter
je
pop
in
xchg
mov
push
mov
pusha
fldcw
cmp
lea
rcl
inc
inc
mov
shll
push
ja
pop
pushf
lds
jo
xor
sbb
push
js
xor
pushf
pop
pop
xchg
mov
mov
xchg
and
imul
in
and
mov
push
jo
clc
cmp
shll
mov
fbstp
add
ljmp
inc
pop
in
xor
outsl
shll
jne
xchg
aaa
push
jle
insl
cmc
mov
xchg
xlat
shlb
mov
or
popf
cwtl
bndldx
jo
test
das
ret
add
xlat
jo
in
out
mov
and
movsb
adc
jo
inc
xchg
inc
add
stos
jo
adc
adc
mov
je
rolb
das
gs
loopne
nop
mov
pop
clc
outsl
jb
idivl
aas
push
jl
pop
mov
lods
into
call
aam
ss
mull
aaa
out
orl
sahf
jmp
xchg
xlat
mov
bound
cld
dec
test
pop
in
jo
mov
dec
mov
shl
jno
jo
movsl
push
lret
leave
out
or
xchg
out
jo
sahf
xor
mov
movb
aad
leave
movsb
addr16
mov
int3
out
sub
cmc
xor
stc
dec
js
jecxz
lahf
pop
test
push
add
iret
dec
jmp
sarb
lcall
cwtl
mov
repz
out
mov
adc
xor
jo
outsb
lret
xchg
cli
repnz
jbe
mov
pusha
sub
jg
jo
nop
push
xorb
fstpt
pop
push
cmp
sbb
addl
jo
iret
mov
leave
jo
jle
jmp
jo
mov
loope
add
jo
xchg
xchg
or
outsb
arpl
pop
flds
sbb
ret
fiaddl
and
dec
stos
xchg
in
dec
sbb
add
pushf
cmpsb
shll
stc
jno
push
out
fs
mov
imul
xchg
add
xchg
inc
xchg
fldt
sahf
imul
sti
push
sarb
adc
sbb
mov
mov
push
xor
push
loop
add
hlt
or
mov
arpl
pop
mov
ja
rclb
outsb
pushf
pop
dec
mov
mov
imul
test
sbb
roll
sub
mov
aad
jo
enter
inc
cmp
jo
lcall
jo
mov
gs
jo
test
inc
jge
fmull
or
popf
jae
fisttpl
out
push
test
push
mov
cld
lock
enter
pop
jo
mov
popf
popa
mov
mov
jo
sbb
ja
ds
jo
xor
jo
dec
cmp
inc
daa
and
stc
cmpb
sbb
imulb
inc
pop
cmp
lods
pop
or
loope
arpl
cmc
jecxz
and
fstps
adc
mov
popf
int3
lods
sub
jo
sbb
xchg
insl
jno
dec
das
push
daa
notb
out
jge
lock
out
cmp
es
loop
ss
outsb
push
or
out
adc
mov
jo
adc
dec
push
outsb
insl
xchg
jo
jle
icebp
int3
jo
inc
xchg
push
xor
fdivl
or
jle
popf
push
jno
cld
js
aad
jge
inc
cmp
jge
arpl
mov
cmp
movsb
insl
iret
clc
inc
xor
push
xor
jo
int3
cmp
jae
insl
sub
xor
mov
pop
mov
out
jo
imul
jb
ljmp
punpcklwd
cmp
das
jbe
test
xor
int3
xchg
jae
jo
fcoms
movsl
rcr
jno
loopne
push
mov
addr16
inc
sub
outsb
xor
rorb
scas
leave
popa
shll
fimull
enter
mov
bound
lcall
xchg
fcompp
xor
jo
mov
cmp
sbb
insl
std
shrl
fidivs
push
push
imul
xchg
shrl
and
and
aad
push
jae
mov
repz
cmpl
xor
pushf
pop
es
mov
in
xor
roll
pop
jo
dec
push
sbb
sub
sti
pop
jbe
in
int
aad
stc
sub
lahf
add
push
fdivrs
ds
cmp
sub
lods
lret
mov
rorl
jo
jne
add
mov
test
mov
jle
repnz
xchg
hlt
mov
pop
add
lcall
xor
and
or
xchg
insl
and
push
inc
or
das
test
in
shll
pusha
sbb
xor
lock
rcl
push
and
mov
add
and
cmp
cmp
lahf
mov
pop
es
insl
or
lret
push
jo
mov
cli
dec
mov
mov
jo
sarl
aad
jo
lcall
arpl
incl
addr16
notb
pop
jo
test
pushf
or
and
insl
jecxz
sbb
inc
lahf
add
iret
mov
pop
push
mov
jno
jp
in
call
jbe
lods
pusha
push
cmp
sbbb
xchg
insl
shl
cmp
push
or
jae
hlt
adcl
jo
push
cmpsl
xchg
gs
jle
jo
mov
test
jo
push
mov
jne
das
jecxz
fdivrs
stos
movsb
movsl
aaa
pop
add
mov
xchg
arpl
or
dec
test
repz
hlt
jo
push
xchg
pop
dec
sub
jo
jbe
sub
inc
mov
jge
idivl
xchg
jae
loopne
push
sete
dec
xchg
arpl
popa
nop
pop
sbb
jae
ss
or
xchg
cmc
or
add
mov
adc
shl
in
cs
sahf
inc
lret
jo
clc
xor
or
sbb
mov
pop
pop
inc
add
pop
fsubrl
pop
jne
push
xchg
addr16
call
test
inc
pop
scas
hlt
fldl
mov
cwtl
divb
int
jle
bound
jbe
jo
jmp
jge
push
dec
out
jo
xchg
fldt
and
pushf
jno
pop
dec
xchg
and
xchg
jo
pop
jge
jb
int3
sbb
jnp
imul
fsub
insl
sbb
shll
hlt
call
es
test
xchg
mov
out
ss
icebp
addr16
mov
push
jo
out
jbe
xchg
ljmp
fstps
icebp
pop
xchg
divb
mov
sbb
jnp
insb
jo
sub
pop
add
pushf
lcall
adc
jo
inc
mov
cmp
fs
or
mov
jo
push
faddl
insl
jns
cmpsb
xor
push
jo
in
xchg
fs
add
outsb
test
mov
pop
mov
fdivs
icebp
fisubl
cmp
sahf
aad
push
jo
jae
xchg
lods
pop
cld
insb
jo
mov
fcmovnbe
jo
orl
sbb
std
clc
test
add
pop
jo
mov
xchg
adc
add
jmp
loop
cmpsb
call
movsl
out
clc
jo
push
mov
cs
loopne
in
xorl
rorb
mov
pop
inc
add
enter
sub
sub
jecxz
or
dec
jbe
pop
xor
pushf
aaa
fisttps
dec
push
insl
lock
pushf
pop
jne
dec
test
mov
sarl
aas
stos
mov
pushf
imul
leave
jo
or
push
sub
ja
cmp
add
xchg
sub
jo
sbb
or
push
aas
push
jo
dec
dec
aad
xor
jo
inc
push
daa
fldcw
cmp
jg
or
xlat
and
sbb
pop
sub
mov
popf
xor
jecxz
test
inc
mov
sub
imul
scas
add
leave
jo
jbe
push
dec
mov
inc
sbb
jo
data16
lods
int3
stc
mov
fs
jb
or
xor
add
mov
imul
xchg
addr16
inc
dec
and
jecxz
jle
dec
add
push
push
rorl
fnstcw
insl
mov
sbb
pop
mov
jo
data16
scas
mov
xor
cmpsb
and
push
enter
enter
addb
push
dec
aad
jo
jecxz
xchg
jge
loop
aam
add
mov
iret
and
dec
call
mov
aad
push
jno
add
push
sub
testb
gs
or
xchg
inc
int
push
pop
or
ja
fistps
adc
pop
pop
icebp
jb
adc
adc
jp
pop
inc
add
sti
stc
mov
sbb
into
mov
daa
rcr
fld
xchg
and
loope
int
jbe
mov
jns
shll
cs
jo
es
scas
dec
fs
jbe
inc
mov
push
gs
push
shll
dec
pushf
call
jo
movsl
aam
cmpsl
fbstp
ja
orb
fldenv
int3
push
dec
pushf
test
lock
leave
rcrb
sub
jp
mov
add
test
pop
es
addr16
fcomp
pop
mov
or
les
xor
xchg
or
rclb
adc
push
aad
sbb
pusha
stos
xor
mov
dec
jbe
subb
cmp
xchg
jl
fmull
rcll
mov
daa
adc
aad
mov
cltd
ret
cmp
jo
into
xor
adc
mov
add
jo
mov
divb
xlat
add
and
aad
test
popf
in
jo
loope
ret
out
and
adc
insl
mov
pusha
jo
sub
call
inc
lret
xchg
mov
dec
add
sahf
xchg
jbe
pop
push
xchg
push
inc
mov
mov
arpl
add
cmpsl
sbb
add
mov
adc
lods
shrb
in
jo
aad
loop
test
stos
loope
inc
pop
sub
leave
test
insl
pop
rcrb
outsl
sbb
jo
shll
pop
das
push
ljmp
rcrl
fwait
jo
outsl
push
sbb
xlat
lock
inc
mov
jo
arpl
push
insb
push
ret
outsb
sub
js
jno
mov
push
pop
push
xor
add
sbb
fneni(8087
jo
sbb
sub
jo
sub
jno
in
ficoms
mov
movsl
pop
insl
arpl
lock
mov
aad
cmc
fcomps
cmpsb
lea
call
lock
pop
shlb
add
outsl
inc
pop
stc
pop
push
lcall
scas
cltd
jo
jle
js
leave
jmp
aad
aaa
xor
lods
out
lods
add
hlt
stc
pop
jo
jb
stos
cmpl
or
mov
lods
ja
loop
aas
pop
loopne
adcb
sbb
bound
cmp
mov
inc
mov
and
add
std
sub
or
and
xchg
icebp
divl
sub
loopne
pop
stc
lock
pop
shl
jo
mov
insl
jnp
arpl
cwtl
jo
mov
dec
imull
test
pushf
lock
stos
test
jo
fldl2e
mov
jo
add
cmpsb
ja
and
mov
pop
cwtl
test
in
inc
movsb
push
gs
jne
sbb
rcl
fwait
pop
xor
dec
loopne
insl
daa
mov
mov
mov
inc
je
aad
cli
bnd
in
jecxz
cmp
mov
mov
push
push
jns
aad
lcall
inc
out
jo
mov
pushf
mov
mov
adc
xlat
std
xchg
and
and
insl
pop
ljmp
rcrl
jo
mov
fwait
je
icebp
jmp
mov
mov
xchg
aad
cmp
or
test
scas
adc
in
jo
xchg
push
lock
cmpsl
fwait
pop
push
sbb
jo
mov
push
mov
rol
jo
cltd
pop
into
frstor
sbb
mov
jno
mov
rcl
testb
fildl
xchg
pop
fldl
jp
mov
jne
push
jae
lock
shll
jo
flds
jg
mov
loope
imul
jo
xchg
jo
mov
mov
jmp
cmpsl
fsubs
ja
jns
imul
bound
jo
sub
push
jo
leave
shll
int
into
data16
adc
shll
pop
jge
cmp
cmpsb
ljmp
push
xor
adc
lcall
insb
in
jo
jno
cmp
xchg
scas
add
jle
xchg
insb
xor
mov
cli
pop
dec
pop
jo
fnstsw
jno
lds
mov
icebp
adc
xchg
and
loop
fcmovne
xchg
rclb
jo
jne
cmp
pop
xchg
jo
mov
in
and
mov
pushf
jb
int3
jo
sbb
in
bound
push
adc
jp
jo
pop
pop
flds
inc
jo
add
dec
and
add
pop
mov
stos
mov
mov
lock
mov
dec
out
cmc
xchg
lret
testb
mul
and
dec
adc
cli
mov
jo
or
lret
mov
arpl
lea
in
imul
cmp
xor
mov
jo
jmp
jno
pushf
push
jnp
lock
leave
cltd
add
xchg
ret
ljmp
jne
cmp
jo
lds
or
sbb
lods
or
fldcw
cwtl
pop
xor
add
shll
out
sub
pop
aas
dec
push
push
pushf
cmpsb
jae
fistpl
pop
sbb
jo
data16
loope
faddl
inc
hlt
jge
xchg
nop
mov
out
repnz
aad
mov
imul
push
in
ja
stos
and
loopne
mov
aaa
inc
js
jg
jo
gs
ds
movsb
daa
adc
jo
data16
dec
sbb
fstpt
stc
roll
aad
js
pop
jnp
add
adc
cmc
xchg
idivb
xor
repz
sub
movsl
outsl
rclb
jo
aad
cmp
test
dec
jmp
lock
fidivs
inc
and
dec
andb
mov
or
faddl
jae
sub
xchg
in
jg
jb
loop
ja
or
shll
sahf
clc
jmp
fsubp
add
cmp
data16
or
fdivrl
lock
inc
rcrb
into
ss
xchg
cmp
dec
lds
leave
les
xor
push
xor
fidivrl
in
rcrl
cltd
jo
cwtl
aas
aad
sbb
adc
dec
ja
or
pop
mov
mov
in
fstpt
decb
and
fcomp
push
adc
nop
imul
jo
add
mov
imul
mov
sti
jmp
jo
xchg
jl
pop
xor
scas
divb
xchg
sub
fsubrp
push
cs
and
lock
jmp
pushf
lods
aad
pop
fidivrs
lret
sbb
mov
dec
jne
push
shl
jo
pop
lea
leave
dec
stos
inc
movsl
sbb
ret
cmp
mov
hlt
mov
pusha
xchg
dec
int3
data16
scas
xchg
inc
lret
mov
sbb
fnsave
fstpt
mov
mov
inc
repz
mov
mov
cmp
inc
mov
call
leave
test
shll
mov
js
sbb
jl
dec
iret
in
sahf
mov
inc
xchg
xor
pop
cmp
push
lahf
shrb
xchg
std
aam
int3
xchg
add
test
in
dec
cmp
aas
mov
outsb
pop
ljmp
add
cmc
jbe
or
adc
push
jo
mov
dec
ret
cmp
dec
or
or
jo
and
mov
cmp
incb
push
jo
pop
push
adc
aas
mov
xor
mov
add
xchg
sarl
jo
mov
cltd
jo
test
int
jo
push
aas
mov
fstpt
cmpsb
mov
and
nop
enter
jo
fs
mov
push
into
sbb
add
add
add
mov
jo
insb
das
iret
imul
inc
xlat
fcomp
loopne
test
shll
fistps
add
inc
sub
jo
mov
add
push
dec
popf
jb
mov
mov
movsb
sub
mov
into
dec
shll
imul
jno
mov
sub
adc
cwtl
das
jnp
push
xchg
insl
xchg
inc
push
mov
push
jne
lcall
mov
pop
mov
int
mov
pop
jo
mov
repz
xor
jo
popf
fdivl
jne
push
dec
and
fisubrs
or
ffree
mov
dec
mov
mov
jo
arpl
fmull
stos
shll
sbb
lods
dec
sahf
cmc
sbb
shll
xchg
call
iret
aaa
add
and
pop
mov
pshufw
xor
aam
shll
int
cmp
jae
out
dec
fldt
mov
fnstcw
leave
and
inc
pop
inc
pushl
lea
jns
inc
jp
and
xor
or
ja
ficoml
dec
fidivrs
sbb
pop
aad
cmc
jae
xchg
inc
out
mov
jo
inc
inc
fiaddl
adc
sbb
mov
dec
jo
add
mov
ljmp
sub
jo,pn
pop
leave
movsl
mov
fstpl
lea
lret
insl
enter
lock
add
ret
adc
mov
mov
rcr
cmpsb
arpl
hlt
shll
dec
mov
fs
std
and
sahf
mov
pop
lock
add
xor
hlt
aam
jo
pop
arpl
aad
xchg
jae
push
inc
sbb
add
jae
fistl
ss
lock
movsl
jo
popf
mov
aas
add
jo
push
mov
pop
jo
daa
lahf
aad
out
xorl
in
insb
jo
push
fidivrl
and
jo
hlt
std
into
push
cmpsl
push
das
add
outsl
repnz
mov
jo
xchg
jbe
pushf
and
jl
fadds
dec
and
pop
add
xor
cmp
mov
pop
daa
push
ret
mov
jp
add
adc
and
push
sahf
xor
seto
push
inc
jo
lret
int
cmp
loopne
dec
aaa
fs
mov
les
out
repz
or
decl
in
push
jnp
int
add
and
jb
pop
and
lock
jnp
dec
cmp
fdivr
mov
lock
aad
or
pop
pop
cmpsb
sub
push
gs
dec
test
push
sbb
xor
jl
cmp
jo
sbbl
mov
aad
lea
js
xchg
je
mov
fisubrs
shll
sarb
push
cmpb
cmc
fisubl
mov
mov
jmp
pop
adc
mov
push
xchg
jp
in
pop
imul
jo
ficomps
fisubrl
jnp
add
jle
push
repz
into
ss
in
jg
cmp
xchg
cmc
fistl
adc
mov
mov
inc
push
rorl
xor
clc
pop
mov
pop
xchg
mov
or
xor
fbstp
aas
jp
and
lock
dec
out
xlat
mov
and
jnp
sbb
or
mov
jo
sar
xchg
jo
mov
xchg
insb
jne
mov
mov
aaa
xchg
jo
mov
push
in
xchg
sub
loope
jo
push
or
repnz
jmp
dec
lea
lcall
pop
mov
mov
inc
shll
fistps
dec
ja
jge
mov
scas
dec
insl
int
aad
jg
in
xchg
loop
xchg
flds
jo
mov
out
mov
lods
xchg
add
mov
jo
fadd
fucom
sti
push
fisttpl
adc
mov
xchg
jo
cwtl
xchg
out
addl
push
sbb
jo
fcoms
divb
cmpsl
out
jno
sub
negl
xchg
sub
outsb
popl
jo
jno
in
insl
lds
adc
xor
idivl
out
stc
mov
push
cmp
jo
cli
movl
cmp
pop
add
cmpsb
mov
lds
movsl
imul
pop
insb
in
mov
jnp
out
xchg
lret
idivl
jae
mov
inc
xor
mov
dec
lock
and
sbb
fdivrl
leave
xchg
or
cmp
cmp
jnp
aam
fdivs
pop
lcall
in
std
dec
mov
xchg
lock
cmp
fbld
mov
cmp
pop
adcl
pushf
cmpsl
jp
pop
push
jp
xchg
leave
lret
mov
and
aas
mov
out
adc
jo
aad
jl
inc
add
call
push
dec
sub
cli
pop
rolb
jns
pop
fcomip
addr16
popf
jo
jle
add
jle
outsb
adc
dec
daa
mov
push
inc
jo
repz
js
fadd
lods
jo
or
cli
mov
cmpb
dec
xor
insl
inc
push
inc
add
insl
pop
inc
add
ss
add
xor
pop
jo
imul
jl
inc
jo
mov
add
push
ret
sbb
out
div
jo
adc
pushf
xor
or
push
and
mov
adc
mov
jo
imul
xor
jo
adc
cwtl
sarb
mov
out
jo
lret
xor
push
ret
andl
sub
data16
cmp
flds
jo
imulb
lds
scas
mov
je
int
adc
mov
addr16
gs
pop
ja
aad
xchg
mov
xor
fcomps
shlb
ljmp
push
jo
xor
push
aaa
jecxz
jo
int
lds
adc
sbb
aas
jge
fs
pop
fldcw
jno
xchg
jecxz
mov
xchg
es
rcll
nop
or
jo
cs
sub
jae
jo
jbe
push
cmp
sub
jno
pusha
adc
test
ret
ja
jle
mov
loopne
leave
add
repz
movsb
push
jl
jo
arpl
call
divb
pop
data16
adcb
push
je
cld
jo
push
lock
test
aas
data16
jb
fildl
nop
sbb
in
int
sub
mov
jo
imul
out
jo
push
dec
xlat
idivl
fsts
or
jge
lret
inc
fsubs
inc
add
mov
dec
mov
lock
sub
rol
daa
lock
adc
lds
out
loop
cmpsb
or
ret
ret
aad
shl
dec
ljmp
jo
sbb
pop
test
jo
cli
push
in
pusha
push
xchg
enter
cmp
add
aad
mov
jecxz
lock
sbb
lea
add
test
lock
pop
xlat
std
lods
dec
dec
or
icebp
adc
iret
and
mov
outsl
push
jle
jo
pop
mov
push
aas
into
lea
in
mov
jo
pop
mov
or
mov
pop
popa
jb
gs
aad
cltd
or
jp
cmp
lods
movsl
pop
in
xchg
pop
push
mov
es
xorb
bound
cmc
or
sbbl
cli
jo
pop
inc
cmp
jl
cltd
loope
fsin
repnz
pop
jo
adc
pop
pop
adcl
jo
sbb
fisubs
add
push
sbb
sbb
jns
rcrb
cmp
dec
repz
pop
dec
xchg
push
lods
jo
mov
fwait
sbbb
push
mov
add
jl
or
mov
sbb
add
jo
xor
cmpsb
imul
mov
cwtl
push
lock
loope
jg
leave
das
out
xlat
and
mov
push
or
insb
jg
addr16
jecxz
or
mov
stos
aas
fistl
data16
lods
push
addr16
cmp
xor
insl
xchg
pop
je
jmp
cwtl
popa
xor
or
adc
icebp
or
stos
repz
or
clc
jmp
mov
jo
pop
mov
loop
aaa
or
cmpsb
pop
cmc
jb
mov
push
lcall
fnstcw
imul
insb
test
add
and
icebp
outsl
lock
jg
ret
push
push
push
cmp
and
cmc
jae
xchg
xlat
pop
nop
push
fwait
mov
andb
jo
push
xor
cmp
shll
insl
aad
lret
pop
pop
dec
fiadds
jne
push
sub
leave
je
loop
adc
mov
mov
insl
test
scas
pushf
cli
lock
sub
cmpsl
into
mov
jae
fistl
loopne
outsl
scas
lret
jae
push
outsb
xor
sbb
inc
xlat
addr16
dec
inc
ss
stos
adc
test
jnp
mov
jo
pop
test
mov
xchg
aad
adc
sub
rorb
inc
dec
divl
test
jo
add
mov
data16
and
cwtl
nop
call
lock
pop
mov
inc
sbb
cmp
rcrl
hlt
cmp
fidivrl
aad
add
xchg
or
jo
dec
insb
mov
push
jge
fwait
nop
mov
aad
ffreep
jo
loop
sub
pop
jo
lds
push
call
loopne
or
loope
and
aad
sbb
sbb
outsl
fidivl
add
aad
push
and
or
mov
rcrl
xchg
fwait
jno
ljmp
movsb
repnz
and
add
call
fildl
in
xchg
jle
adc
mov
sub
aad
mov
xchg
xchg
jo
stc
shll
add
and
insl
je
lret
addl
mov
insb
push
xlat
sarl
jp
jbe
mov
aam
xchg
pop
sti
nop
add
add
xchg
sbb
jle
dec
mov
loopne
loopne
cld
mov
jo
xor
xor
jo
push
rorb
cld
dec
int
sti
aad
lods
jecxz
ljmp
xor
stos
imul
jbe
add
sbb
dec
pop
xor
push
or
xor
gs
incl
push
and
cmp
fcompl
dec
out
stos
movsl
aas
jo
push
mov
or
inc
adc
test
jo
push
pop
fwait
sub
aad
jo
pusha
cli
mov
add
fnstenv
out
cmc
gs
iret
adc
leave
test
faddl
subb
rorl
clc
mov
test
test
pushf
xchg
pop
jne
leave
inc
push
sub
or
test
test
andb
mov
cwtl
pop
in
jl
aad
es
mov
xchg
dec
insb
cmp
in
and
jmp
xchg
subb
xlat
icebp
loopne
push
add
push
jo
imulb
xchg
inc
insb
pushf
cmc
jo
fldt
fnstsw
shlb
xor
cwtl
jb
ret
cmp
jo,pt
test
lahf
push
mov
pop
andnps
fwait
jo
mov
push
cltd
cmp
pop
js
mov
sub
dec
scas
jo
jne
shll
pop
ljmp
mov
add
ja
push
fchs
test
adc
lock
jmp
dec
stc
mov
or
and
imul
mov
out
push
jns
push
pusha
add
in
xor
ja
push
cmp
xchg
pop
adc
cmp
inc
jo
or
dec
add
imul
imul
sbb
inc
hlt
shr
repnz
sar
add
jno
jo
ds
lods
jo
cmpsb
cmp
inc
jo
adc
popa
xor
mov
nop
fildll
jecxz
xchg
jne
mov
rorl
jae
fistl
ds
xchg
std
dec
nop
jg
ja
rorl
sub
test
add
jg
inc
ljmp
sbb
mulb
out
cmpsl
xlat
inc
cs
cld
mov
cli
test
daa
mov
sub
rcll
mov
hlt
aad
insb
cmpl
fnstenv
cmpl
int3
adc
dec
out
push
mov
push
lds
jo
icebp
jns
mov
pop
ja
iret
fsub
pop
imull
xchg
xor
fld1
xor
push
inc
jo
mov
cmp
outsb
rcll
inc
xor
popa
insl
jo
jg
xlat
push
dec
imul
cmc
lcall
in
fs
mov
fnsave
cmp
sub
mov
data16
cmp
sub
ljmp
add
mov
icebp
arpl
dec
jo
in
mov
faddl
xlat
fwait
cs
mov
cmp
shlb
rolb
cmpsl
fldcw
or
fdivs
imul
ja
loop
xchg
sub
cmp
jo
fwait
aad
sti
in
dec
push
mov
xor
shrb
xchg
mov
int
test
in
fcmovb
or
inc
mov
xor
adcb
xchg
push
nop
or
mov
mov
jb
xchg
cmp
jo
jbe
mov
mov
movsl
inc
mov
add
call
xchg
outsl
dec
pop
shrb
mov
jl
cld
repnz
add
jo
push
inc
mov
dec
sbb
daa
mov
push
cld
es
idivl
inc
sub
ffreep
divb
into
xlat
mov
jo
or
pop
cmpsb
inc
sub
fdivrl
aad
loop
outsb
add
notb
mov
push
aam
imul
pop
fstl
lods
aas
fiadds
cmp
stos
add
movsb
or
sbb
jo
clc
mov
mov
sbb
addb
fnsave
arpl
or
roll
inc
mov
lock
adc
and
cmp
and
orl
mov
jge
jns
push
lea
daa
fsub
mov
jo
jnp
mov
mov
outsb
add
adc
fidivrl
cmp
adc
lds
lock
mov
lcall
mov
dec
mov
jp
fisttpl
ret
and
std
das
mov
scas
push
aad
lods
pop
ja
mov
pop
nop
pop
push
addr16
xchg
sub
mov
ret
sarb
push
push
jo
or
pop
clc
popf
sarl
push
jns
fsts
jae
insl
test
mov
aaa
pop
je
inc
add
mov
je
mov
repnz
xchg
lock
or
popf
int
dec
cld
in
mov
mov
pop
jl
dec
mov
xor
xorl
popa
dec
jo
jl
shrl
jo
in
mov
jo
pop
xor
mov
les
sbb
pop
js
mov
pop
pop
jne
insl
xor
add
jne
push
add
popl
aad
call
pushf
add
jo
les
cmpsb
mov
ja
cs
push
fldenv
into
push
loop
mov
jae
lahf
jo
aad
sbb
dec
outsb
push
cld
stos
in
mov
fwait
test
outsb
mov
pop
lock
sbb
jne
cmp
ss
mov
jo
subl
leave
mov
or
fsubr
insl
push
mov
test
pop
or
int
mov
xchg
loopne
sti
les
outsb
jl
and
pop
nop
pop
mov
push
mov
dec
push
bound
xor
notl
sub
imul
stos
ss
int
jmp
lock
mov
ja
mov
pop
push
inc
push
push
adc
pop
xchg
cmpsl
and
loopne
jl
stos
jo
mov
es
jo
adc
mov
imul
aaa
rorl
or
mov
mov
xchg
js
mov
dec
lcall
lock
aas
sarl
dec
addr16
ja
ja
rclb
insl
ds
cmp
pop
cmp
outsl
bnd
push
fwait
dec
fsubrl
jns
leave
mov
pusha
hlt
jo
rclb
loop
movsb
dec
add
int3
pop
jo
inc
cltd
sub
push
rcrb
xchg
xorl
inc
pop
or
aas
mov
lea
sub
icebp
push
pushf
sbb
jo
xor
movsb
xchg
lock
ret
mov
testl
jo
in
movsl
add
xchg
jb
insl
or
jecxz
call
out
int
fwait
pop
and
mov
jo
ss
dec
shll
jecxz
sbb
adc
pop
aad
fs
lock
and
jo,pn
sbb
repnz
mov
jl
subl
xor
out
add
mov
push
xor
jle
jo
sbb
pop
adc
sub
add
int3
push
js
loop
mov
or
ret
jb
xor
pop
push
daa
std
rcll
sahf
lock
add
jl
mov
adcb
loop
dec
data16
add
jo
adc
lock
pop
mov
jo
dec
inc
jbe
xor
mov
xchg
fdivp
add
jo
aad
imul
icebp
jo
add
push
jo
or
push
pop
dec
jle
sar
sub
xchg
pop
imul
mov
inc
cmpsl
lret
add
xchg
xchg
push
adc
mov
push
push
call
int3
and
sub
lock
jo
xor
xor
dec
mov
add
dec
lret
mov
shlb
movsl
pop
push
mov
arpl
es
sbbb
loope
or
dec
push
outsb
data16
jo
sub
sbb
int3
dec
cwtl
xchg
in
fmul
dec
test
stos
lods
mov
jo
add
insb
fnsave
fisubrl
in
std
adc
jo
divl
insl
inc
push
xor
xchg
push
lcall
lods
push
dec
mov
adc
sbb
lods
inc
xchg
cmp
es
jo
ss
outsb
out
cmc
push
sti
ljmp
aad
jne
inc
sub
incb
pushf
rorl
rolb
out
rolb
push
adc
mov
and
lret
insl
into
in
pop
es
push
jo
pusha
divl
push
sub
popa
jo
jne
mov
jo
jo
jnp
push
push
push
xor
jae
faddp
pop
mov
aam
dec
mov
icebp
add
jno
mov
lods
sub
jo
nop
adc
mov
mov
jo
lods
inc
jbe
cmpsl
adc
aad
xlat
lock
jne
mov
ret
mov
cmp
push
rolb
fnstenv
loop
andb
rcrl
out
or
mov
jo
mov
aad
jp
sbb
sub
les
adc
mov
loopne
out
adc
cmp
add
xor
or
ret
xchg
adc
mov
dec
mov
xor
pop
cmp
dec
faddl
jp
out
arpl
adc
pop
cmpsb
nop
or
jo
jno
daa
xor
jbe
fbstp
mov
jo
push
test
xchg
pushl
js
pop
mov
insl
dec
cmp
pop
shlb
and
mov
lret
and
dec
inc
xor
lea
pop
cmpsb
lods
outsb
mov
xlat
mov
pop
sbb
or
inc
loopne
out
in
push
jo
ja
adc
dec
adc
jecxz
mov
fwait
js
cld
ja
mov
sbb
rclb
lds
outsb
shlb
mov
adc
cmc
jo
flds
fildl
xor
and
jo
mov
pop
iret
ret
pop
jmp
add
in
cmp
jmp
imul
je
jae
xchg
daa
mov
adc
jo
cmp
dec
fcompl
pop
and
scas
jl
cltd
adc
in
popl
fnsave
add
mov
sub
jl
xor
mov
mov
and
jo
movsl
sbb
dec
scas
xchg
cmc
inc
outsl
out
lock
pop
leave
fst
loopne
fbld
std
jo
addr16
fcomi
lcall
inc
imulb
divl
jnp
jae
shll
adc
jo
jle
and
push
fldenv
jae
fistl
jl
fwait
rorb
dec
mov
shll
mov
aad
test
or
aas
test
orl
shlb
jno
decl
inc
xor
sbb
xchg
fndisi(8087
popa
jne
jge
imul
mov
clc
mov
push
dec
adc
data16
loopne
popa
push
jp
jae
pop
cld
sarl
test
push
jl
xor
outsb
xor
aad
jbe
cmp
adc
or
dec
test
push
lock
fidivl
inc
ja
or
inc
jo
inc
dec
cltd
fmul
cmpsl
xorl
cmp
movsb
aas
incb
enter
jo
push
or
rcl
test
lcall
in
data16
and
cmp
into
jo
xchg
sub
jecxz
pop
pusha
stos
fcoml
and
jo
jne
outsb
and
jo
lcall
jo
xor
pshufw
xchg
jb
in
ret
mov
fisttps
lret
xor
mov
and
add
fcoml
jnp
xchg
xor
sbb
pop
jbe
jno
in
jecxz
pop
lcall
aaa
std
add
xchg
jo
dec
jl
fmull
fdivs
loopne
jmp
cltd
jne
es
inc
mov
enter
mov
stc
clc
rorb
les
xchg
jo
fsubs
shll
int3
pop
sbb
pop
out
data16
cmp
fsubrs
cwtl
pop
xchg
ja
pop
ja
pop
loopne
pushf
jo
lea
in
jo
out
fstps
push
mov
jo
pop
fsubrl
jae
rcll
loopne
lock
addb
movsb
jo
ret
jge
ret
mov
nop
push
and
or
fwait
push
pop
loop
jo
fldenv
mov
addr16
daa
adc
arpl
bound
stc
scas
push
sbb
js
push
in
push
mov
push
push
sti
shr
push
xorb
jo
push
shll
mov
insl
mov
rorl
jae
sub
jo
push
or
jo
sub
cmpsb
fnsave
push
jno
iret
pusha
nop
fwait
repz
or
int
aaa
jne
into
jle
jo
fcmovne
xchg
sub
ss
jp
jl
pushl
out
dec
adc
jae
mov
rcl
test
jp
mov
loop
loope
int
jno
into
adc
ss
jp
fdivs
inc
sarb
repnz
cmpsb
add
and
or
mov
mov
xchg
jo
sbb
mov
dec
sbb
mov
adc
in
sarl
add
call
mov
inc
cld
or
int3
jo
out
cmp
sbb
in
xchg
mov
pop
lock
push
jbe
mov
aam
les
inc
jae
lds
cltd
add
shlb
dec
pop
add
jge
jbe
lahf
dec
ja
dec
out
scas
mov
adc
mov
mov
outsl
shlb
xor
jbe
divl
pushf
out
add
jne
dec
ficoms
dec
mov
ds
fcmovnbe
arpl
dec
jo
add
jle
mov
mov
pop
jns
ficompl
adc
cs
les
sbb
in
xor
roll
je
push
ret
mov
xor
out
push
fucom
cli
je
push
mov
mov
cmpsl
and
and
fcomps
data16
je
sub
mov
bound
xor
xchg
pop
push
sbb
ljmp
mov
inc
imul
shr
add
stc
ja
mov
sub
outsb
dec
xchg
push
cwtl
aaa
xorl
adc
inc
jecxz
mov
mov
and
fwait
xor
adc
mov
imul
insl
push
cmp
int
jl
mov
mov
pop
mov
cmpsl
adc
lret
xor
test
das
insl
pop
jp
jo
out
pop
inc
mov
movsl
scas
jo
adc
mov
es
mov
jmp
je
in
movsl
test
stos
inc
or
ja
fucomip
mov
cwtl
mov
jge,pn
xor
cmp
push
push
and
push
push
xchg
mov
loopne
xor
loop
jle
aam
push
add
ja
mov
pop
adc
jo
mov
enter
and
xorl
mov
jo
cli
sub
jo
iret
cmp
test
push
lock
pop
ret
sbb
neg
popa
pushf
xchg
ss
ja
mov
cli
and
cmp
lock
or
jo
fwait
mov
dec
mov
ucomiss
adc
rcl
jo
mov
hlt
roll
pusha
push
jb
sbb
push
sub
pop
mov
nop
icebp
or
loopne
aad
xor
adc
sti
into
cmp
rclb
std
ja
mov
push
outsl
cmp
call
push
cld
test
std
jp
fnstenv
jnp
filds
pop
xlat
xchg
lea
clc
inc
mov
ljmp
sub
lock
outsb
movsb
push
fnstenv
sub
int3
xor
sti
jo
mov
mov
iret
push
add
jae
add
sbb
outsb
fs
xchg
repz
jp
fnstenv
dec
clc
hlt
xchg
push
repz
fyl2xp1
jle
pushf
inc
dec
imul
lock
shlb
mov
fistpl
insl
jmp
and
inc
xlat
fdivs
out
xor
fadd
outsl
lcall
nop
das
cs
aam
jnp
adcb
subl
not
inc
mov
dec
ja
add
lods
js
adc
lods
pop
les
jo
fdivl
decl
mov
lock
lret
jo
lea
shlb
cmpsb
aam
and
outsb
stc
enter
test
or
jae
popf
cmp
and
jl
mov
insl
pop
fdivrs
shl
xchg
ficompl
mov
orl
push
dec
jo
jl
sbb
sub
roll
jo
mov
inc
in
pop
mov
and
in
cmp
insl
ret
cmc
aaa
insb
pop
gs
jo
jmp
mov
lret
jbe
lods
xor
rorl
mov
pop
iret
adc
mov
dec
pushf
shll
xor
xchg
loopne
das
mov
dec
outsl
dec
lock
stos
cs
repnz
ror
add
sub
mov
mov
pop
sub
jo
adc
lret
jo
cs
repnz
mov
dec
xchg
scas
jo
cmc
insb
aad
fwait
shrb
jnp
inc
mov
cmpsb
mov
fsubs
xor
jo
nop
sbb
lds
ja
enter
nop
insb
or
jo
aas
pop
mov
mov
push
fcompl
data16
jo
fiaddl
scas
aam
lds
outsb
rclb
ret
les
jns
mov
jo
mov
jo
rcll
bound
imul
cmp
add
mov
rcl
loopne
jl
jo
dec
push
mov
jae
repz
jp
xor
into
jl
jo
scas
je
loop
jge
jo
or
push
sbb
or
out
jo
jb
push
cs
push
mov
inc
jo
sahf
mov
mov
testb
cmpsl
cmp
shl
adc
aad
sub
jo
sarl
mov
adc
or
cmp
and
test
cwtl
loopne
sbb
mov
roll
out
or
jl
sub
ret
int
stos
js
mov
fstpl
xchg
fmull
push
outsl
xchg
adc
dec
aaa
into
insl
sub
jae
jo
imul
xchg
dec
jo
subl
xor
jge
mov
ret
aas
icebp
fwait
in
mov
sbb
jo
add
scas
mov
ret
pushf
je
dec
pop
push
les
jo
in
lcall
pop
push
insl
arpl
adc
mov
or
xor
push
insl
inc
add
imul
jae
cmp
push
xorb
adc
aas
dec
je
xchg
jae
cmp
jo
push
imul
mov
aam
jl
xchg
pusha
dec
inc
cmp
xor
jp
movsl
stos
shlb
jo
lds
adc
test
rol
cmp
jge
fists
outsb
lock
cmp
and
std
jo
inc
push
pop
adc
jmp
add
sbb
pop
nop
dec
mov
or
mov
cmp
jo
inc
gs
jo
or
lcall
enter
jmp
or
cmp
sti
fnstenv
mov
mov
add
jo
xchg
cmp
divb
inc
push
pop
xchg
xorl
js
fnstenv
cmp
test
iret
xchg
cmp
shlb
pop
mov
mov
cmp
rol
dec
loope
ss
jo
into
mov
pop
inc
jmp
aad
movsl
jns
jo
mov
cmp
jo
out
push
adc
jbe
pop
aam
cld
loop
loopne
or
gs
mov
pop
jb
xor
push
jp
mov
inc
xchg
cwtl
mov
adc
in
mov
jno
sbb
mov
cmpsl
sbb
pop
jnp
rorl
xlat
xor
ljmp
mov
lock
mov
ficompl
fimuls
mov
loopne
aad
jo
inc
or
outsl
bound
outsb
scas
push
xor
adc
jae
leave
ret
out
mov
fisubl
jno
adc
jo
adc
loopne
jo
idivl
ljmp
jp
mov
jo
push
jle
aad
push
adc
aaa
mov
mov
jo
dec
pop
jg
mov
add
dec
and
or
jbe
outsb
loopne
inc
mov
pop
xorb
ja
into
call
add
pop
cmc
outsl
dec
jo
shll
int
jle
leave
mov
outsb
push
fbstp
cmp
repz
lock
das
and
sbb
addr16
mov
inc
push
sarl
aad
mov
sbb
mov
push
mov
mov
mov
dec
jo
push
in
mov
cmpsb
cmc
shld
mov
mov
or
cmpsb
and
cmp
jmp
push
jo
jb
test
rcrb
jo
cmpsb
jo
dec
adc
test
inc
adc
movsl
cmp
jo
es
outsb
mov
movl
mov
icebp
xchg
xchg
cs
mov
fildl
adc
jo
add
add
mov
jo
or
leave
add
scas
or
push
sbb
je
dec
jo
adc
jo
mov
les
ja
dec
jae
std
mov
pop
push
ret
lret
pop
inc
inc
cmpsl
jo
fwait
cwtl
int
mov
cli
iret
inc
daa
aas
jo
dec
fwait
repnz
mov
jp
and
sub
mov
or
dec
xor
mov
cmpsl
pop
push
scas
pop
mov
jo
ljmp
jo
push
lcall
fisttps
cmpsb
jnp
fildl
jo
cmc
popl
jo
lcall
ja
push
push
xchg
add
add
arpl
negl
add
inc
loope
jg
sbb
push
sub
cmp
jno
mov
fs
jo
xchg
dec
lret
int
insl
mov
push
stos
mov
sahf
pop
jb
scas
arpl
dec
cmp
repnz
out
pop
clc
cmp
or
cmp
popa
ja
jge
in
cmp
mov
mov
jmp
jo
in
sub
gs
adc
jo
fmull
rorl
out
mov
dec
lret
jo
pop
fcmovnu
cmp
xor
and
jo
not
std
sub
push
jae
movb
enter
test
shll
sub
cmp
lods
jecxz
test
mov
sub
mov
aad
xchg
enter
in
jno
push
push
aas
push
je
xchg
mov
lods
mov
inc
imul
jne
jge
xorb
fwait
push
push
mov
or
testl
imul
jae
pop
push
jg
xor
daa
cs
fdivs
sub
xor
inc
sbb
pop
jae
iret
in
mov
xor
xchg
pop
jo
jbe
sbb
dec
mov
pop
mov
iret
mov
jo
lcall
mov
jo
or
mov
jo
sub
hlt
jo
ljmp
mov
in
adc
dec
jo
leave
sbb
rclb
stos
push
or
out
mov
mov
push
mov
testb
test
mov
lahf
es
push
je
adc
mov
daa
sarb
mov
inc
xlat
nop
lea
mov
mov
adc
jo
fucomip
dec
clc
push
sbb
ja
pop
sub
jb
jg
xchg
mov
mov
xor
jo
cmp
mov
daa
aad
imul
shlb
push
or
sub
je
adc
or
popa
shrl
jo
jnp
adc
call
pop
leave
mov
jo
aaa
js
pop
push
das
cmpsb
ds
imul
jo
cmp
inc
push
arpl
jge
jo
lea
cltd
jo
outsl
mov
shll
lods
gs
iret
push
divl
sbb
xchg
push
xor
fdivl
jecxz
xbegin
nop
jo
adc
push
jo
in
sbb
mov
enter
xchg
pop
outsb
mov
popf
or
jo
sbb
xchg
outsl
nop
insb
jnp
mov
cmp
aad
push
mov
sti
out
sub
inc
push
fidivl
and
pop
pop
push
pop
sahf
jo
cmp
mov
cs
xchg
lock
shrb
fldcw
ja
and
les
add
lods
testb
mov
insl
pop
and
mov
push
mov
ficoml
enter
xor
jl
push
lea
fcomp
jo
outsl
push
les
lahf
mov
stos
out
in
add
xor
push
movsb
and
sbb
pop
mov
scas
sbb
sahf
mov
jmp
jo
sarb
mov
insb
cmc
ljmp
xor
and
jl
sbb
aad
sahf
enter
in
mov
cmp
xchg
loop
and
push
adc
in
mov
cmp
and
fsubl
shll
jo
lea
bound
leave
mov
pop
jo
filds
cmp
sbb
xchg
pop
or
pushf
sahf
jo
stos
mov
jo
and
notb
mov
jo
cli
mov
stos
enter
test
lret
mov
add
xor
push
adc
dec
dec
jmp
iret
in
aam
rolb
nop
scas
pop
ret
xor
sub
data16
pop
dec
sbbb
lcall
mov
cmpsb
test
xchg
jnp
mov
add
scas
add
jne
or
jecxz
push
sub
mov
cwtl
pop
jo
mov
lret
jne
out
fwait
lock
stos
ret
fwait
or
faddl
es
adc
jnp
or
fwait
jmp
add
jo
rorb
jo
aas
jnp
mov
imul
xchg
adc
dec
add
dec
mov
inc
push
mov
add
xchg
nop
mulb
inc
jo
mov
dec
imul
fsubl
sbb
stos
or
jo
fcomps
out
aad
jo
dec
jne
push
jl
jmp
fadds
add
cmp
int3
jo
fldcw
movsb
dec
loopne
lds
clc
sub
roll
adc
mov
sbb
add
jae
mov
ja
xchg
out
mov
mov
adc
jo
int
outsl
shll
jae
fwait
movsb
xor
sbb
out
loopne
aad
jo
fadds
jp
out
jge
jo
inc
fwait
xchg
jne
add
and
lret
pushf
jo
xchg
push
mov
pop
jo
jmp
pop
lock
out
jmp
mov
ja
bound
dec
xor
pop
lcall
push
outsl
jo
adc
sbb
jo
sub
loopne
jo
ret
push
mov
add
dec
pop
and
pop
iret
add
or
cmp
sub
xor
mov
mov
loopne
mov
jo
loop
outsl
ret
jmp
cli
aad
cmc
lods
sti
mov
popf
and
jo
ss
imul
jbe
setns
jp
cmp
aad
inc
dec
mov
adc
pop
and
xchg
or
hlt
dec
ja
xor
xchg
mov
in
insb
pop
cwtl
push
xchg
call
cmc
xchg
dec
adc
inc
dec
ss
add
jo
xor
sbb
push
sub
shll
popf
or
jae
and
xor
inc
push
lret
dec
push
rol
cli
jno
mov
mov
or
outsb
ss
out
jo
sbb
jo
mov
dec
lahf
cmp
pop
xlat
in
jo
xor
jge
inc
addr16
or
subb
lcall
push
repnz
stos
out
icebp
call
cmpsl
dec
shrb
out
negb
jo
aad
xlat
hlt
insl
mov
push
cmp
fistpl
leave
sub
rclb
lret
or
cmp
xorb
jo
cli
out
cld
adc
bound
stos
push
or
jo
sti
ret
dec
les
xlat
sbb
xor
lret
jp
mov
fisubl
push
xor
dec
jne
rcll
inc
out
out
enter
cmp
sub
loopne
jo
mov
sti
dec
das
sbb
xchg
dec
pop
jb
or
cmc
rcrb
dec
sbb
out
outsb
scas
fistpl
loop
call
xchg
fstps
and
or
sub
push
je
int3
mov
jno
pop
ja
sarb
clc
pop
loopne
stc
aaa
inc
jo
shrb
and
or
scas
cmpb
push
mov
sub
call
std
dec
or
aam
add
mov
cmp
jo
jecxz
inc
mov
cli
js
lret
aas
jo
jbe
pop
cmpsb
mov
mov
sbb
jge
aaa
sbb
inc
mov
fdivrl
add
sub
dec
leave
mov
faddl
pop
shl
cmp
pop
jae
icebp
jne
adc
pop
hlt
push
jle
xor
add
fwait
cld
fstps
insb
gs
insl
imul
jmp
lock
pushl
ret
push
push
jo
mov
mov
jo
adc
data16
shll
jno
dec
xchg
jo
outsb
jg
enter
jo
aad
cmpl
sbb
cmp
xlat
push
outsb
leave
mov
adc
scas
cmpsl
jo
cmp
icebp
fsubrp
ja
fistpl
rcll
jo
outsl
xchg
push
orb
jo
push
mov
enter
dec
shlb
std
mov
aam
push
sahf
inc
sbb
mov
mov
sbb
popa
shll
dec
xor
jl
adc
lcall
or
insb
lock
imul
adc
or
bound
test
jns
fdivl
push
jo
movsl
cli
jb
mov
cmp
test
mov
nop
sbb
insl
mov
lahf
xchg
cld
addb
adc
push
sub
jo
and
lock
and
dec
sbb
lds
call
sti
cmp
pop
jle
fdivs
cmpsl
ret
pop
lret
lcall
testl
addr16
sarl
fstps
dec
xor
sti
loopne
cltd
mov
mov
loope
stos
or
xchg
inc
mov
lcall
jo
ljmp
jo
sti
rol
aas
mov
xorb
in
add
outsl
push
daa
mov
mov
jo
aad
dec
std
push
jo
mov
cli
call
jo
cmp
aad
je
in
cltd
adc
loopne
imulb
sub
insl
mov
mov
adc
icebp
jo
mov
imul
fsubl
and
lds
or
ds
sbb
rolb
mov
pop
jne
cmp
xchg
mov
ret
out
flds
imul
push
xchg
jo
jecxz
xchg
dec
xchg
jo
stc
sbb
jo
loopne
sbb
cmp
and
leave
jne
dec
adc
pushf
fisubrl
arpl
xchg
jne
push
in
jo,pt
inc
inc
mov
pushf
pop
jo
adc
rol
push
xor
jp
mov
xchg
idivl
jo
or
xchg
iret
mov
jo
add
lcall
sub
mov
dec
daa
jmp
push
vpshuflw
fdivrs
insl
sbb
push
sub
in
scas
adc
adc
bound
xor
das
test
push
push
mov
insb
in
cmpsb
cmc
or
cli
jo
je
push
xor
jo
sbb
fsubs
cmpb
mov
sbb
push
or
push
neg
sub
nop
ror
pop
and
hlt
jae
test
mov
jae
mov
push
lods
bnd
push
fistpl
adc
jnp
popa
or
fimuls
lahf
dec
push
push
sub
jo
jno
sti
push
add
fnstenv
cmp
inc
outsb
data16
cs
push
sub
push
add
jp
mov
push
jo
and
data16
lods
xchg
jo
sub
jo
fildl
xlat
lock
jnp
iret
pop
and
flds
insb
jo
frstor
push
or
sti
jl
fbld
add
sub
divl
mov
jo
xlat
shll
inc
jge
or
lds
in
jo
add
js
dec
sahf
shlb
loope
insl
nop
je
pushf
jo
shll
fidivl
jno
repnz
fucomi
or
lock
mov
test
shlb
ljmp
insl
movsb
mov
inc
cmp
lods
jp
fildl
pop
jle
pop
jo
repnz
mov
jno
stos
xchg
adc
push
lret
je
pop
add
mov
jo
push
and
push
add
inc
jo
ljmp
jo
adc
inc
cmpsl
mov
jo
ljmp
jo
out
push
xchg
add
jo
jge
pop
cmpsb
out
fistpl
fidivl
popf
loope
dec
xor
mov
sub
and
ja
je
loopne
mov
jae
mov
fcmovb
mov
or
jns
outsl
lods
xor
jo
pop
push
je
ss
std
mov
out
push
orl
dec
mov
fcoml
dec
jo
pop
adc
push
inc
ja
and
lret
push
pusha
jae
outsl
arpl
xchg
test
insl
dec
jo
pop
push
pop
shrl
rcl
mov
mov
lock
mov
mov
int3
xor
sbb
out
gs
cwtl
mov
add
jo
dec
aad
push
jle
dec
push
fisubrs
hlt
sbb
jp
data16
push
dec
fadd
hlt
stos
push
pop
lock
jle
and
and
jp
jnp
lea
setns
fsub
xchg
test
dec
pop
aad
pop
addr16
adc
add
shlb
dec
repnz
xchg
es
and
or
jo
outsb
scas
popf
xor
insl
pop
push
push
push
inc
je
cli
das
insl
popf
cld
push
and
jo
mov
andb
repz
or
xchg
jo
sbb
mov
and
pop
rolb
dec
aad
sti
jo
push
adc
mov
push
sub
jo
and
test
outsl
out
push
shr
loop
test
jge
jo
pop
mov
sbb
mull
xchg
pop
stos
jbe
jae
cs
shl
and
cmp
adc
jo
jno
js
cwtl
dec
ljmp
mov
lods
jo
xlat
cmp
mov
clc
add
pop
daa
xor
popa
cwtl
fldt
mov
mov
mov
jnp
sbb
out
lock
scas
or
pop
ja
daa
aam
jg
out
jb
jo
jnp
jl
shrb
sbb
cli
fistps
pop
ret
xchg
adc
or
and
xor
sahf
aam
jo
cmp
fwait
adc
sub
inc
xchg
rorb
cmp
jecxz
mov
sar
xor
cmovne
and
out
jo
adc
lea
daa
push
mov
int3
adc
mov
jo
aad
adc
xor
xor
pop
mov
mov
aaa
ret
cld
cs
jo
cmp
xchg
aad
hlt
sbb
sub
roll
push
jo
xor
gs
or
pop
jo
movsl
test
and
aam
cli
ret
jo
mov
je
jo
jmp
mov
jo
rclb
sub
mov
movsb
sbb
sub
pop
jge
pop
popl
cmp
out
jo
adc
scas
fstpl
lret
rorb
lods
push
mov
mov
insl
std
and
notb
jo
int3
dec
add
cs
add
mov
das
jnp
jo
sbb
dec
cmp
pop
add
gs
and
shll
fmull
lds
outsl
add
mov
jo
in
out
hlt
mov
dec
out
icebp
dec
mov
pop
aad
mov
in
and
push
pop
lahf
pop
inc
ljmp
fwait
ret
test
bound
repz
bnd
jo
sbb
dec
lret
jo
or
divb
push
sbb
xorl
mov
ds
cmp
push
jo
nop
push
sub
in
dec
int
out
jg
repnz
loop
dec
pushf
add
push
mov
lcall
stos
std
xor
pop
jo
or
sub
adcb
cld
movsl
xchg
pop
test
mov
lret
insl
js
dec
push
imul
mov
stc
outsb
aaa
lods
mov
pushf
push
mov
sub
outsb
pop
xchg
aam
cmp
sbb
lcall
out
aad
je
dec
and
cld
push
pop
jo
call
pushf
scas
jo
mov
adc
jo
frstor
cmc
jo
jns
mov
jne
add
in
xor
fmuls
xor
scas
ret
cwtl
inc
fdivl
jo
xor
test
jl
mov
out
in
dec
xchg
sub
adc
outsb
dec
push
test
lods
xor
cltd
daa
fldl
and
mov
mov
xchg
cmc
adc
stos
mov
jmp
or
inc
push
mov
fistpl
out
repz
aad
pushf
cmp
addr16
dec
mov
mov
mov
xor
inc
jo
lods
mov
mov
jo
and
xchg
jo
fstps
push
lea
or
cli
mov
jo
mov
mov
push
mov
add
sbb
loope
cld
mov
outsb
jo
xchg
sbb
fcmovnb
jae
sahf
mov
in
adc
scas
jo
push
jmp
push
jae
fcompl
les
fdivrs
inc
shll
outsl
repz
mov
pop
mov
sbb
arpl
rclb
into
fwait
xchg
xor
xchg
or
or
out
les
adc
sub
imul
mov
sub
xor
sbb
cs
addr16
dec
cltd
fnstenv
cmp
lds
sub
ret
shlb
jnp
stos
pop
xor
xor
mov
adc
mov
nop
lock
les
popf
into
dec
jo
adc
inc
mov
insl
jae
jmp
mov
outsl
lea
es
add
lock
std
jo
and
sbb
test
xor
jle
jo
xchg
and
push
repnz
add
hlt
or
push
lds
xor
in
adc
jb
jne
or
out
inc
add
jo
jmp
aad
outsb
jge
movsb
xchg
xor
daa
jo
lock
jbe
dec
sbb
dec
in
jno
jle
jnp
lock
mov
xor
nop
jbe
rorl
cmp
jb
fists
outsl
xchg
pop
loopne
jo
enter
add
jo
mov
cmp
xchg
repz
adc
test
mov
jo
mov
icebp
fisttpl
mov
or
adc
dec
repz
xor
lods
sub
ficompl
ret
lock
xor
pop
jns
aas
mov
imul
in
cs
aas
pop
lea
inc
bound
adc
std
ja
xchg
jo
es
fstp
hlt
in
popf
jo
push
fwait
fs
mov
aad
jecxz
repz
mov
mov
mov
xchg
adc
cwtl
or
jo
mov
aad
outsb
or
add
test
in
push
pop
push
stos
test
stc
xor
xchg
mov
or
jb
pop
repnz
outsb
je
scas
movzbl
jo
jle
adc
dec
rcll
pop
and
insl
mov
mov
jmp
movsb
push
stc
inc
or
int
es
aam
cld
fwait
jae
cmp
pop
cmpsl
cwtl
xchg
sub
iret
mov
fs
jns
sub
stc
rcl
mov
scas
jo
fistl
clc
pop
mov
xchg
pop
push
mov
ficomps
test
jo
xchg
sbb
insl
jmp
mov
adc
shlb
nop
sbb
xor
inc
jo
les
ret
rorl
jmp
push
fdivl
arpl
aad
movsl
bound
leave
or
mov
adc
dec
fstpt
jo
test
jo
out
xchg
stos
movsb
pushf
pop
scas
ja
divl
nop
ss
outsb
fstpt
xor
adc
popf
sbb
jnp
in
xor
out
mov
in
jge
std
adc
aam
sbb
mov
jbe
adc
push
jl
jo
or
sbb
push
lea
fdivl
rol
adc
sti
push
orl
xor
push
jo
aad
inc
fiaddl
jmp
adc
mov
lock
sub
fscale
call
lods
lcall
jl
sub
scas
sub
pop
add
loopne
jo
mov
stc
sbb
jmp
incb
loopne
push
jo
push
aad
daa
mov
sub
add
imul
lret
jg
leave
adc
repnz
jno
jo
xchg
lea
cli
jae
dec
or
push
jg
imul
jo
in
outsb
xchg
cmp
push
or
sub
nop
fnstcw
jo
lcall
jo
and
imul
dec
mov
jae
jae
das
adc
push
js
fstp
ljmp
pop
jae
mov
fistps
mov
arpl
mov
pop
xor
mov
mov
insb
add
mov
jle
cwtl
nop
fwait
sub
imul
int3
cmp
jo
bound
pshufw
gs
aad
mov
cmpsb
ret
test
jo
cmc
rcrl
rcr
aad
push
in
mov
addr16
popl
dec
adc
fnstcw
adc
ficoms
js
test
jb
movsl
add
adc
div
mov
jne
sbb
jo
sbbb
iret
dec
jno
lock
inc
jo
dec
add
sbb
adc
ret
adc
fwait
inc
setbe
clc
inc
pop
cmp
mov
and
add
call
in
shlb
fidivl
pop
sub
pop
roll
cld
mov
fnsave
rcll
idivb
pop
xor
rcrb
xchg
xchg
nop
mov
jae
mov
jo
inc
fistl
inc
repz
or
lds
cmp
out
mull
loop
loope
sub
gs
jb
mov
sbb
add
mov
out
push
ja
inc
mov
sub
push
in
and
push
jbe
stos
fbstp
jne
jle
test
hlt
inc
cmp
jge
es
lock
push
shll
sar
imul
jo
jge
lret
inc
aad
loope
cmp
out
nop
mov
insl
add
pop
lret
loop
test
push
jo
mov
mov
add
mov
lds
adc
xchg
test
xchg
push
in
icebp
inc
jo
mov
fdiv
jo
xchg
sbb
jo
fwait
or
scas
aad
stos
je
sbb
imul
ja
jp
jno
jo
scas
sahf
fcoml
cmpsb
mov
insl
mov
pop
stc
xor
arpl
les
pop
mov
jge
mov
xchg
or
xchg
je
outsb
aad
add
push
push
sub
sbbb
cmp
pop
sti
xchg
lock
jae
testb
add
out
xor
lcall
or
or
mov
push
cmp
ret
dec
mov
insl
ljmp
cwtl
mov
lea
lock
lahf
adc
jo
movsl
aad
inc
movsb
rol
push
cmc
repnz
mov
jo
dec
and
cld
fs
pusha
ja
sub
push
mov
or
cmp
pop
add
inc
jo
mov
or
stc
mov
cmp
jo
or
in
mov
js
or
lods
mov
scas
push
sbb
jne
cmp
jmp
insl
mov
mov
jo
lods
es
jnp
lcall
nop
xchg
outsb
insb
inc
sbb
or
jmp
add
jg,pn
pop
scas
testb
jo
ljmp
fdivrp
inc
mov
jo
mov
jle
jo
sub
xlat
dec
mov
dec
ret
subl
ljmp
cmpsb
mov
jnp
adc
fiaddl
mov
aas
jae
xor
sbb
and
cmp
xchg
jo
inc
sub
insl
stc
aaa
jo
sahf
lock
xor
mov
cltd
jmp
sbb
mov
lock
movsb
cwtl
fisubrs
mov
adc
fadds
jo
pop
lcall
push
lock
cmpsb
and
jno
and
xor
pushf
mov
scas
jp
xchg
pop
or
sbb
inc
cmc
outsb
xchg
lea
xchg
dec
xor
leave
jo
jmp
scas
bound
and
loopne
lock
ss
add
or
mov
call
mov
xor
cld
pop
fsts
mov
out
adc
fwait
lea
push
add
or
shll
nop
and
jp
xchg
mov
mov
or
pop
jne
bound
addb
add
jo
and
sbb
mov
mov
mov
dec
inc
test
mov
sub
push
pushf
or
stc
jo
addr16
cmp
je
mov
test
in
add
aad
jae
daa
dec
divl
mov
inc
xor
int3
sti
cmp
pop
jo
or
xchg
mov
push
jo
fldln2
pop
mov
mov
jo
stos
pop
sub
pop
pop
aad
cmp
sub
std
in
xor
inc
or
push
mov
es
cmpsl
nop
jns
das
pop
jo
push
sbb
fstpt
shll
and
ja
jp
push
jl
fdivl
lcall
lds
enter
lock
cld
and
loope
jb
push
aam
jp
int3
icebp
mov
fldln2
xchg
add
sub
push
daa
and
jo
jmp
test
xchg
data16
mov
insl
aad
int3
dec
mov
fiadds
mov
inc
pop
lock
sbb
clc
shl
das
xchg
je
arpl
dec
lock
out
mov
shll
jl
inc
nop
sbb
xchg
jnp
pop
lock
jbe
push
and
fstps
pop
add
add
mov
call
mov
in
jo
jp
dec
repnz
push
push
and
ljmp
test
lea
pop
jne
outsb
jl
data16
xchg
mov
mov
ret
shrb
add
rolb
push
or
and
sub
bnd
add
inc
pop
adc
dec
hlt
push
ss
mov
faddl
jo
and
call
dec
insl
stc
repnz
push
mov
dec
inc
xlat
lock
into
jo
mov
mov
push
repz
mov
jo
mov
les
imul
lods
add
jns
push
insl
or
outsb
mov
sub
adc
push
dec
push
xchg
je
enter
jecxz
loope
js
insl
xor
lret
pop
test
popa
jo
les
push
cmpsb
mov
cli
push
daa
ja
cmp
inc
lock
imul
dec
inc
push
dec
pop
call
cmp
cmpb
fstpt
je
add
daa
test
cmp
outsl
push
arpl
push
data16
out
add
lea
aam
jge
in
jo
xchg
loop
and
dec
xor
test
js
push
push
dec
jns
loop
or
repz
mov
cld
and
mov
mov
inc
xchg
data16
cld
jp
repz
and
imul
test
adc
je
jo
push
pop
sbb
inc
leave
movsl
jne
pusha
push
xor
mov
jecxz
inc
adc
dec
and
loopne
ficompl
fisubs
stc
rclb
mov
loopne
in
jo
push
leave
outsl
xchg
sbb
aas
bnd
pop
jmp
outsb
outsb
test
adc
jo
lods
out
in
lahf
notl
jo
and
ret
pop
movsl
and
pop
or
mov
sub
fnstenv
insb
add
jo
adc
push
pushf
inc
aad
jo
xor
out
andb
adc
mov
mov
jb
mov
lock
cld
xor
enter
push
jns
lret
and
je
sub
imull
in
jnp
xor
out
lock
sahf
and
lret
fwait
push
cmp
in
aad
insl
pop
cli
add
push
iret
xchg
xchg
inc
sub
test
mov
cli
out
xchg
rcrl
xchg
adc
inc
je,pn
cld
mov
jo
or
push
jecxz
mov
jbe
and
pop
pusha
pop
xchg
jo
mov
scas
popf
jae
out
cltd
and
test
pop
jo
push
jne
addr16
inc
fnstenv
add
inc
mov
in
adc
xchg
jo
mov
test
cmp
pop
mov
std
push
andb
dec
roll
adc
scas
push
aad
mov
mov
in
and
imul
std
clc
mov
dec
bound
lock
cmpb
aaa
jo
pop
jl
pop
jnp
jo
push
shll
add
or
mov
push
xor
xor
jmp
push
pusha
aaa
mov
mov
sbb
pop
xor
mov
lock
call
jo
fwait
cmp
jle
mov
pop
and
lods
sbb
cmpsl
push
rclb
mov
sti
test
ficoml
xor
pop
cmp
int
jo
mov
mov
jo
push
push
jo
in
sub
mov
push
inc
push
and
mov
and
mov
fimuls
adc
mulb
xchg
js
pop
hlt
ret
xchg
jmp
outsb
ss
sub
jno
sbb
push
insl
jae
or
aam
fldcw
push
hlt
xorl
or
imul
jnp
adc
add
fidivl
xor
jo
sbb
and
scas
orl
loopne
out
sar
repz
inc
mov
or
jo
imul
add
jo
aad
in
xchg
xor
inc
insb
out
loope
lcall
pop
add
dec
inc
mov
addr16
jmp
and
push
lret
jb
outsb
sbb
insl
push
xchg
test
xchg
jle
inc
call
fs
jo
mov
push
or
xor
pop
ja
ljmp
push
lcall
outsb
data16
or
inc
xor
lds
xor
pop
mov
lahf
dec
jo
out
mov
jo
mov
loope
pop
adc
das
jecxz
push
out
out
jne
push
lock
sub
jo
jbe
repnz
enter
push
mov
icebp
cld
jle
jo
dec
int
cmp
jecxz
sti
xchg
adc
loopne
fisttpl
pop
ja
mov
divl
mov
ja
push
cld
repnz
shrl
mov
add
insl
ss
jo
aad
push
dec
lcall
int
push
jo
mov
xor
jo
stos
inc
out
loopne
xchg
jo
fisttpl
hlt
push
or
sub
adc
inc
mov
lret
push
and
pushf
aaa
push
inc
bound
les
cld
hlt
mov
or
jo
rorb
popa
cli
daa
add
sbb
cmp
push
mov
dec
stc
inc
lock
jne
das
mov
jle
or
cbtw
push
jo
mov
push
into
pop
pop
sahf
testl
std
jp
adc
adcl
xchg
addr16
xchg
lock
shll
mov
mov
outsb
push
xchg
nop
pop
add
sub
ljmp
inc
inc
rorb
push
lock
push
adc
push
popf
jo
stos
sub
mov
xlat
shll
jmp
mov
or
aad
xor
push
lret
sbb
and
lods
jo
jae
sub
mov
cmpsb
and
mov
inc
mov
add
push
xchg
rol
lea
idiv
sub
mov
das
xchg
ss
xor
add
xchg
jae
and
push
and
or
das
icebp
jnp
mov
push
jo
sub
out
push
pop
xor
fdivl
adc
out
inc
xlat
add
pushf
pop
jbe
or
push
rcr
dec
xchg
dec
push
shlb
popf
cmp
mov
mov
into
data16
mov
or
sbb
bound
int3
jo
jno
cwtl
cli
sbb
mov
fsubl
sbb
orb
cltd
or
cmc
rorl
jo
lret
cwtl
in
mov
xchg
adc
jne
leave
jo
stc
sub
inc
dec
sbb
jo
pop
pusha
xor
and
jnp
shlb
inc
testl
xor
ds
out
add
xorb
jo
dec
cmp
sbb
int
jo
mov
hlt
mov
add
xor
mov
outsb
inc
cld
insl
lds
pushf
push
jo
cmp
jl
add
cmp
into
add
bound
xchg
movsb
jo
pop
xchg
pop
fs
push
lret
imul
sub
inc
xchg
mov
or
fstps
je
inc
add
jmp
push
ret
jo
movb
or
sub
adc
sbbb
mov
ret
insb
xchg
mov
test
aad
dec
jo
fs
fcmovnbe
in
mov
mov
mov
mov
sub
jns
rep
fcoml
lods
insl
jmp
aad
lahf
rolb
arpl
xor
lds
jo
mov
and
popf
into
std
jae
push
add
and
cs
je
fwait
jl
orl
sti
inc
divb
ror
dec
jg
inc
sub
rcl
mov
enter
inc
cs
xor
inc
inc
pop
fsubs
xor
movsl
mov
push
jle
sub
adc
loopne
jo
repnz
rcr
add
jo
sarl
je
push
jo
and
int3
outsb
jne
or
fcomi
or
add
jo
fs
and
cmpb
xor
fisubrl
lods
cld
out
cmp
push
arpl
cmp
outsb
jp
sbb
aad
jo
sti
loopne
push
mov
mov
jno
cmovge
mov
dec
jae
cmp
sub
push
jo
testb
mov
xchg
fwait
jo
inc
lcall
ja
pop
add
rorb
and
jg
lret
ds
mov
push
dec
bound
out
ja
sti
inc
jo
and
movsl
outsl
mov
adc
mov
pop
loope
sub
xor
pop
insl
sbb
inc
nop
inc
adc
jmp
fidivs
in
lea
cmc
pop
outsb
push
div
rcrl
push
push
or
xchg
je
push
movsb
popl
push
shll
adc
push
fcomp
xorb
sub
in
mov
push
aas
pushl
scas
mov
jo
mov
addr16
jo
xchg
mov
mov
clc
out
xor
jo
sub
aad
mov
inc
cmpsl
add
push
sti
lcall
popa
insl
jge
cwtl
xchg
xor
lods
fldl2t
jo
subb
test
adc
sbb
mov
into
lods
adc
pop
inc
lock
and
nop
stc
jne
std
jne
mulb
or
leave
dec
jo
pop
push
push
ret
adc
ja
fdivs
aad
lods
cmp
leave
mov
push
test
xchg
lock
sub
sub
bound
shlb
push
xor
scas
inc
loope
out
adc
lock
inc
nop
je
mov
sub
push
jl
fs
pop
jg
jo
add
mov
call
popa
sti
mov
mov
scas
nop
loop
mov
xor
cmp
aad
push
jo
mov
imul
xor
aas
mov
jp
nop
add
mov
lock
mov
inc
mov
lea
cmp
fnstenv
dec
adc
sbb
repz
jae
mov
in
rcrl
fbstp
inc
inc
mov
jo
lods
jge
cmp
jo
leave
es
jne
movsb
mov
lock
fsubrs
jo
dec
adc
lods
aam
int
fsubrs
dec
sti
pop
xchg
into
insb
xchg
imul
arpl
outsb
decl
jne
scas
pop
inc
dec
push
lods
sub
jo
out
push
or
add
lea
cmp
xor
jo
cs
fistl
lds
and
rorl
push
sbb
mov
jo
mov
xchg
inc
stos
mov
sbb
adc
push
or
adc
add
cmp
inc
jo
sbb
push
adc
jbe
jne
adc
pop
and
rcrb
xor
and
lock
pop
ret
sahf
dec
push
or
and
aad
cmpsb
sub
jbe
pop
pop
mov
fstl
in
mov
push
push
pop
xor
imul
mov
negl
jne
xchg
inc
sbb
je
jb
roll
lock
jp
nop
push
inc
iret
out
pop
cli
loope
fsubs
dec
aam
jb
push
jnp
ljmp
scas
ja
out
jmp
ja
pop
or
jnp
push
xchg
fsubl
insl
sbb
in
cmpsb
aas
and
test
lock
popf
lods
jo
outsl
pushf
idivb
jl
jns
test
mov
push
sbb
jmp
jnp
adc
lds
rcrb
dec
jo
fnstcw
sbb
out
push
fdivs
and
out
aad
test
test
pop
cmp
mov
xchg
and
lahf
in
xor
xor
jno
jb
push
xchg
scas
inc
adc
mov
repz
push
mov
sbb
jo
stos
xchg
shl
movsl
mov
out
pop
mov
jo
aad
cmpsb
mov
pop
mov
aaa
repz
jmp
adc
xor
adc
dec
imul
xor
mov
inc
jo
and
or
mov
clc
out
add
aad
jo
repnz
das
lahf
push
outsb
cmpl
and
push
aad
cmp
vmovd
popa
mov
lock
jle
leave
stos
mov
mov
das
fisttps
or
mov
jo
or
mov
pop
xchg
aaa
jmp
js
cmpsb
fdivr
jno
jo
lcall
jo
add
jo
subl
les
sbb
push
sub
push
push
mov
pop
jo
jno
rcll
sbb
xchg
inc
adc
or
lcall
test
sbb
fldt
mov
jo
aad
cmp
mov
lock
jne
icebp
xchg
scas
jo
cs
pop
insl
sti
push
shlb
jo
stos
jae
std
into
pop
out
orw
insl
xchg
jo
jg
mov
jo
loope
cmc
ja
cmp
jo
inc
aaa
leave
lahf
pushf
pop
jae
gs
adc
pop
xchg
adc
sbb
aad
outsl
stos
xor
mov
lret
inc
inc
insb
push
jno
pushf
add
lock
call
nop
pop
adc
mov
add
je
push
fcompl
mov
out
dec
ja
int3
fsts
adc
jne
mov
or
fwait
inc
in
sub
out
fxch
sub
dec
push
push
jo
mov
lea
add
mov
es
dec
pop
jae
cmp
movsb
jo
fdivrp
sarl
aaa
xorl
mov
ret
xchg
and
push
test
xchg
sub
jo
cmp
cmp
mov
aad
cmp
jo
jbe
mov
ds
cld
jo
xchg
cmp
sub
pop
lds
push
push
adc
pop
xor
pop
cmp
int
daa
bound
imul
mov
jl
es
xchg
cld
add
out
xor
lcall
repz
mov
push
pop
inc
lock
mov
jo
in
push
xchg
daa
outsb
add
lods
or
xor
mov
jl
mov
add
hlt
outsl
jecxz
cwtl
jl
jne
mov
xlat
rorb
add
in
pop
insb
insl
push
dec
xor
cmp
aas
xor
loopne
dec
aad
in
mov
cli
adc
jo
pop
fcmovne
add
push
je
aam
lock
lock
std
adc
xor
pushf
lret
lods
sub
ret
mov
shll
mov
pop
jo
mov
out
loopne
dec
mov
nop
dec
fmull
jo
jmp
or
mov
jae
in
push
push
jo
mov
cmp
jo
ror
adc
je
and
cmp
and
jo
popf
sahf
sbbb
inc
rclb
push
adc
cmp
aam
mov
iret
mov
jo
mov
imul
imul
lds
shlb
arpl
xchg
enter
ja
xlat
mov
imul
mov
push
push
add
icebp
jo
push
shll
repz
stos
jo
ja
popa
jnp
sub
push
lock
dec
add
jo
or
mov
cli
in
mov
pop
shlb
push
lods
jne
pop
hlt
xchg
rolb
je
mov
jo
fstpl
pop
les
cmp
and
pop
mov
mov
push
aad
into
popa
jb
lret
mov
insl
fisubs
jbe
xchg
shl
insl
xchg
sbb
mov
leave
pop
shlb
out
adc
mov
lcall
pop
add
insl
cwtl
xor
add
stos
push
jo
xchg
mov
ljmp
add
mov
and
das
pop
mov
shrl
in
sub
cmpsb
mov
adc
loop
stos
outsb
inc
xchg
call
std
bound
dec
or
cmp
lock
jo
fincstp
test
bnd
and
je
dec
inc
mov
fwait
mov
jl
popa
dec
xor
pop
or
push
xlat
mov
push
dec
pop
mov
mov
outsb
inc
mov
fld
jo
fnstsw
outsb
fcoms
jnp
xchg
and
mul
movsb
xor
and
push
inc
std
xchg
jo
sbbb
loopne
jns
xor
pop
jo
fnstenv
inc
dec
lds
mov
push
dec
pop
fcoml
data16
cmp
sub
dec
jo
mov
push
pop
xor
push
lods
push
dec
and
adcb
or
xor
mov
jo
es
lds
jo
aad
pop
and
sbb
daa
jo
testl
aaa
jle
insl
loopne
push
nop
adc
jo
mov
mov
lods
lea
insl
test
cmp
fs
shrl
xchg
push
xchg
leave
mov
jl
push
mov
adc
jbe
divb
jmp
dec
inc
shlb
adc
xor
dec
lea
ljmp
jo
pop
aaa
movsb
pop
in
mov
pop
movsl
sub
jo
xchg
rcr
repnz
fcmovnu
jo
pop
lea
pop
inc
jo
xchg
jge
sbb
adc
sbb
jo
pop
push
std
sarl
add
push
fsubp
or
xchg
orb
mov
adc
adc
jo
faddl
in
jo
sahf
push
das
popf
ljmp
iret
pop
sarb
fnstenv
shll
ds
mov
out
scas
insl
aam
xchg
mov
divl
adc
test
dec
jo
xchg
mov
pop
imul
clc
push
faddl
fldenv
out
jo
jg
aas
ror
popa
fildll
inc
push
and
setae
and
icebp
sbb
and
inc
nop
fistpl
jo
test
mov
call
pop
roll
jo
cmpsl
cs
xor
xor
sub
jno
ret
pushf
add
push
jle
test
cmp
xorl
mov
loopne
insl
scas
jle
fidivrl
shlb
in
dec
mov
mov
fs
sub
insl
int
cmp
gs
jo
mov
jb
scas
or
loop
dec
fwait
shrb
ds
jg
icebp
adc
ja
iret
add
jno
lock
mov
jo
pop
xor
xchg
pop
sub
sub
fiadds
add
and
into
xchg
sub
aas
in
push
pushf
fmuls
outsb
rorb
xchg
xchg
rcll
inc
test
pushf
jae
fmuls
fs
and
int
pop
ljmp
scas
pop
cld
jo
adc
push
add
loop
jg
test
scas
add
jae
pop
cmpsb
mov
push
jno
movsb
stc
xor
or
leave
xor
mov
or
insl
xchg
or
sub
cmpsb
sahf
pop
xor
add
add
mov
sub
sub
aad
push
jp
scas
and
push
xchg
fistl
mov
in
dec
mov
inc
add
lahf
xchg
aad
fs
cli
add
cmp
notb
or
cmpsb
mov
iret
pop
sub
mov
jno
outsb
mov
insb
sti
das
rolb
mov
push
push
sub
sub
jo
xor
xor
lret
jle
gs
aas
dec
dec
inc
in
imul
jo
ds
xchg
dec
pop
mov
jo
cmc
xor
push
adc
jo
jnp
je
int3
cld
jle
repz
cmp
xor
out
fcoml
loopne
fsts
mov
pop
ljmp
add
outsb
fisttpl
nop
sbb
pop
dec
in
jle
ret
stos
add
loopne
mov
xor
int3
adc
je
and
popa
mov
jp
cli
mov
xor
decb
xchg
mov
push
xor
jae
negl
dec
loopne
pusha
mov
loopne
jo
gs
lret
scas
fnstcw
jo
icebp
mov
sub
add
jecxz
xor
and
cmp
jo
fildl
jno
or
mov
clc
push
ja
mov
repnz
sub
fcomp
pop
and
int
inc
mov
or
and
outsb
fistl
inc
adcl
mov
in
test
jo
dec
xchg
and
test
out
push
mov
lea
pop
jo
test
push
imul
loop
pop
add
adc
cmp
and
mov
imul
mov
inc
cmp
idivl
fidivl
mov
jle
lret
jo
movb
jp
loopne
rdpmc
rcll
mov
insb
mov
jo
xchg
sbb
scas
push
sbb
jo
aad
push
jecxz
pop
xchg
pop
mov
sub
push
jle
insl
cmp
xor
lods
jg
xchg
cmp
jae
cmp
mov
shll
push
jo
ret
and
int
into
pop
fmulp
lahf
jo
in
or
mov
lret
lret
adc
lea
shl
sbb
fidivs
jae
jb
cltd
xchg
xor
mov
pushl
jo
cmpb
mov
pushf
sbb
adcl
mov
loop
outsb
jnp
rclb
and
dec
adc
into
inc
leave
lods
incl
pop
jo
outsb
xor
jo
nop
icebp
popf
in
push
lock
dec
mov
repz
pop
add
cs
insl
sub
xorps
je
loopnew
jae
mov
mov
or
mov
dec
jge
mov
in
mov
mov
pushf
xchg
sbbb
imul
js
fwait
test
das
push
adc
jg
pop
mov
jge
and
cmpsb
dec
jp
and
mov
push
jbe
or
jne
clc
rcr
and
inc
pusha
jo
push
shll
insl
sub
gs
das
divb
stos
xlat
mov
mov
jo
cltd
mov
pop
xor
out
out
mov
ret
mov
xlat
scas
and
fnstsw
or
lea
mov
not
push
into
jecxz
jne
test
or
aad
cli
cmpsl
mov
jo
and
lea
ret
aaa
jmp
nop
sub
adc
sahf
int3
pop
push
mov
or
icebp
mov
mov
and
stc
jae
mov
inc
sub
jo
in
push
xchg
fldenv
inc
sub
popl
sub
add
out
cs
sbb
xor
fstpt
jo
mov
sbb
dec
test
and
inc
cmp
mov
dec
dec
push
mov
ret
or
mov
insl
fstpl
jnp
xchg
or
insl
add
pop
or
cmp
xchg
pop
jl
jp
add
mov
and
xchg
fmull
sub
xlat
imul
sahf
cmp
out
cmp
fldt
lock
test
push
mov
push
fsubrp
and
or
outsb
and
jo
filds
stc
mov
lock
adc
arpl
jo
es
push
ja
cmp
pop
pop
add
mov
mov
dec
dec
or
outsl
mov
into
lock
pop
mov
ja
sub
cmp
push
jo
out
fwait
rclb
les
sbb
jge
and
jo
dec
leave
into
out
push
sar
pop
sbbl
loope
inc
movsb
dec
add
inc
xchg
adc
out
lret
in
jp
rorl
push
push
in
insb
aad
insl
sub
daa
xor
xchg
scas
pushf
jae
and
fldenv
mov
cmp
fiadds
icebp
scas
add
mov
dec
inc
faddl
cli
mov
fcomi
loopne
dec
lcall
aad
in
xchg
jb
jle
lods
adc
sbb
inc
xchg
rcl
fs
inc
push
adc
jo
xor
es
shll
iret
add
mov
sbb
mov
sarb
push
jo
xor
pop
push
into
fsts
or
inc
test
addb
xor
jo
into
in
mov
fildl
pop
push
mov
stos
loopne
jo
aad
cmp
mov
or
xchg
jo
pop
mov
push
shlb
jno
and
fstps
or
shlb
fcmovnu
lcall
sbb
jl
sub
ljmp
mov
jo
jbe
popa
jl
xchg
jbe
fnstcw
jne
jo
add
fs
loopne
mov
insl
nop
pop
aas
or
divl
or
jo
inc
mov
sbb
jo
xor
dec
addr16
adc
stos
inc
mov
filds
inc
jge
push
fisttpl
sub
xor
sub
cld
jg
jo
mov
xor
xchg
pop
pop
repnz
ss
fbstp
jecxz
lods
ficomps
pushf
add
rcr
jo
adc
pushl
and
lods
aad
jae
xor
xor
ret
push
mov
sahf
inc
inc
cmp
test
adc
jns
add
add
jo
int
or
xchg
mov
fnstcw
mov
jnp
adc
cmc
fdivl
dec
call
cmpsb
ljmp
popa
pop
je
or
fcomi
adc
pop
out
add
sbb
daa
mov
loop
repz
jo
add
pop
jno
push
adc
aad
shr
repnz
enter
jo
cmp
aas
stos
jo
add
adc
subl
push
pop
subb
cltd
xor
pop
jmp
jecxz
jae
push
or
scas
mov
scas
jb
or
inc
mov
call
xor
or
inc
push
aas
lcall
xlat
jo
xlat
sub
push
fidivl
xchg
ror
iret
stc
cmp
out
fldenv
outsb
ret
shlb
ficoml
sub
xlat
jo
mov
iret
jp
jo
mov
outsb
pop
pop
jge
xlat
jo
aam
sahf
das
dec
and
push
insl
jns
lds
xorl
lock
lods
ljmp
stos
rcll
and
mov
packuswb
push
add
aad
andl
add
insl
insb
fs
aam
repnz
sahf
test
inc
cld
adc
int
jecxz
push
inc
faddl
outsl
jo
sbb
popf
jo,pt
in
fstl
push
jo
leave
stc
testb
sub
mov
push
das
and
mov
in
pop
je
int3
xor
shr
sbb
mov
insb
test
aas
test
push
mov
mov
and
jg
add
inc
xchg
repz
pop
jo
ja
mov
rdmsr
dec
jo
and
fdivl
dec
cmp
outsb
cli
ss
fiaddl
xor
mov
sub
cmpsl
aam
std
xchg
mov
lahf
js
je
push
repz
cmp
ret
xchg
fdivl
mov
fistpl
jo
pop
mov
in
jo
xchg
cmpsl
mov
scas
aad
jne
movsb
in
repnz
roll
aam
cltd
jmp
mov
jo
jp
sub
loop
stos
jo
insl
data16
int
lds
push
and
fwait
dec
sub
scas
insl
andl
jae
fsubr
adc
cs
std
ss
sahf
fisttpll
xchg
pop
mov
mov
dec
jo
test
add
sub
pop
jae
loope
sub
cmp
jl
insl
fwait
xor
inc
insl
lcall
xchg
out
jo
sbb
jo
or
js
pop
mov
hlt
iret
data16
sbbl
fists
add
add
lods
adc
pushl
ja
in
lods
jle
or
inc
jg
std
sahf
fstl
mov
mov
mov
jl
xchg
lock
out
push
push
push
jo
dec
mov
xor
jo
in
jl
push
icebp
mov
fstpt
adc
das
adc
insl
push
jo
stc
je
adc
es
mov
fisubl
test
aad
push
fadd
cli
loopne
mov
jl
sbb
rcrl
testb
clc
jo
ss
outsb
mov
jo
xchg
in
xchg
ret
aad
insl
lods
cwtl
ljmp
jne
mov
jecxz
jmp
mov
cltd
mov
inc
jo
outsb
xorb
lock
jo
xchg
into
enter
shr
cmp
ja
outsl
jo
iret
lahf
ret
dec
rdtsc
lock
test
add
movsb
xchg
jae
cmpsl
ja
mov
mov
scas
imul
les
ret
lock
cmc
movsl
insb
insl
jl
sbb
xchg
sbb
jo
cmpsb
subb
mov
or
jo
jae
pop
lret
dec
notb
arpl
and
jp
in
ret
das
stos
jo
mov
lock
sub
jo
arpl
les
fisttpl
dec
xchg
jo
dec
push
cmc
mov
out
cmp
lahf
lock
adc
xorb
enter
dec
jo
mov
push
cmp
jae
dec
inc
into
lock
aam
pop
in
jno
push
flds
mov
push
shll
xorl
leave
aam
xchg
inc
inc
mov
sbb
mov
stos
pop
lock
jge
lret
aas
push
fdivrp
dec
ret
or
cmp
shll
jmp
push
or
aad
push
sbb
int
loopne
insl
or
aas
sti
in
inc
mov
lods
push
cmp
mov
fimull
jo
adc
push
jo
xchg
sub
mov
mov
enter
or
jno
rorl
adcb
sub
dec
arpl
adc
scas
jo
std
daa
pop
adc
cmpsb
lret
push
test
imul
sahf
jo
or
mov
repz
or
push
cltd
jl
rolb
pop
or
mov
pop
out
or
mov
pop
lods
loope
in
outsb
push
add
and
stos
jae
mov
pop
or
jmp
dec
fsubp
sahf
sbb
jo
mov
cmp
jo
and
mov
add
inc
jl
inc
push
aad
cmp
popa
dec
orl
into
test
add
enter
paddusb
jo
dec
rclb
mov
fisttpll
into
add
sub
jb
ret
int
cmpsb
insl
fnstenv
scas
lods
pop
xchg
jo
mov
lock
jmp
pop
jo
xchg
insb
dec
aad
mov
les
into
bound
xor
loope
scas
out
adc
jo
mov
bound
in
add
mov
lea
cmp
mov
sub
ss
insl
mov
fdivrs
pop
lods
js
insl
inc
ret
dec
outsb
pop
cwtl
adc
jo
call
montmul
cmpsb
add
xor
push
xlat
ret
popf
imul
jo
mov
nop
int3
aad
push
das
rclb
adc
jmp
cmc
cmp
dec
xor
or
mov
dec
xor
cld
ja
xor
mov
xor
fiadds
shll
pop
adc
and
mull
jo
push
cmp
or
jge
xor
sub
pop
xor
jo
or
testl
int3
push
frstor
add
xor
mov
xor
test
in
sbb
negl
adc
popa
fs
sub
jo
pushf
and
in
popf
mov
shll
cmp
je
fisttpl
xorl
in
ljmp
jo
hlt
das
fcmovne
push
jne
jo
mov
fisubl
adc
into
aas
rclb
pop
xor
mov
mov
mov
cmp
add
fs
scas
cmpsl
sub
scas
adc
mov
xor
ss
fmull
dec
addr16
pushl
xchg
scas
push
push
jo
idiv
mov
test
add
pushf
xchg
xor
call
jecxz
mov
jg
movsb
leave
fnsave
das
je
fmul
pop
icebp
mov
out
push
test
subl
call
push
sti
jo
push
mov
sahf
push
cmc
es
sbb
jecxz
gs
and
icebp
dec
xor
out
inc
jo
jg
sub
loopne
cmc
inc
or
mov
imul
or
popa
mov
shlb
icebp
rcrb
dec
call
pop
mov
xor
lea
data16
lock
sub
jo
cmp
stos
or
and
push
mov
test
cld
sub
das
stos
lods
jae
inc
xchg
mov
sub
adc
enter
add
pusha
mov
mov
jo
xor
sub
repnz
lock
xchg
fldcw
pop
iret
repz
cmp
xlat
loopne
lods
xchg
loop
xor
sbb
rcll
loope
inc
jo
mov
pop
cwtl
fxch
add
data16
xchg
mov
daa
pop
push
jae
cmc
dec
jo
fldcw
sbb
xchg
sahf
jo
adc
subl
pushf
sti
insb
cmpsl
lock
or
mov
cmp
in
aad
xor
mov
enter
movsl
test
sbb
jb
pop
in
loopne
mov
cmp
xorl
jns
jne
cmpl
hlt
jo
push
mov
mov
test
cmp
shl
fwait
outsl
sub
bound
and
inc
cmp
jp
xor
jg
nop
push
pushf
mov
inc
push
jl
push
pop
lock
lcall
jae
dec
ficoml
insl
call
mov
jo
std
mov
lods
insb
fsubrl
jmp
dec
movsl
leave
loopne
jo
adc
or
pop
add
stos
cmpsb
pop
lcall
pop
xchg
inc
jle
ja
jne
aaa
jae
movsl
stos
cs
jb
inc
or
inc
clc
cmp
xor
jo
sub
std
dec
sti
mov
mov
mov
xor
xchg
mov
pop
xchg
xor
lret
jle
sbb
inc
jo
mov
fisttpll
mov
insl
mov
jne
xchg
nop
ja
cmpsb
adc
insb
and
sbb
test
test
add
outsl
mov
dec
popf
xor
insl
cmp
orb
mov
jo
xchg
test
call
ljmp
and
sbb
push
in
push
pop
lahf
mov
xor
xor
dec
dec
push
sub
fsubl
jae
sbb
mov
adc
push
jo
adc
mov
sbb
les
pop
stc
adc
cwtl
xor
dec
into
leave
dec
inc
and
cwtl
push
adc
sti
mov
lret
je
jo
cmpsl
lcall
sub
aad
cmc
or
jo
fsubr
or
loope
hlt
fstpl
nop
inc
test
cmpsl
imul
insb
jle
mov
dec
lret
mov
out
pop
orb
push
cmp
pushf
insl
dec
cmp
into
jo
xchg
jmp
pop
pushf
jo
in
add
lea
cmpl
sub
lea
xchg
or
xchg
jo
loop
xor
aas
push
jno
jmp
lahf
lds
jo
cmc
stc
or
push
or
hlt
add
push
dec
lds
push
xor
xor
flds
imul
fnsave
stos
mov
adc
jns
mov
mov
xchg
lds
outsb
xchg
mov
sbb
jecxz
add
shll
lret
push
sbb
into
xchg
insb
jno
inc
inc
jmp
adcb
xor
sbb
cmp
jo
xor
test
pop
mov
adcb
insl
ficoms
cli
in
aaa
loop
adc
inc
xchg
dec
shrb
lock
aaa
mov
hlt
jo
inc
pop
xchg
jo
lods
mov
add
mov
adc
jnp
shl
dec
push
es
pop
imul
dec
aad
loope
lock
gs
nop
mov
and
jp
std
loopne
pop
pop
dec
and
stos
jo
sbb
adc
ret
ret
jno
jns
pop
popa
mov
mov
imul
dec
rcrl
jecxz
jo
scas
dec
ss
aad
xchg
inc
repz
adc
push
rorl
sub
shrl
shl
adc
iret
mov
das
push
mov
jns
jp
xor
and
jne
je
gs
jo
dec
or
push
fldt
and
mov
mov
jo
or
or
dec
dec
sbb
call
cmp
lods
dec
jnp
lahf
jo
fs
push
out
adcl
dec
subl
bound
cmp
loop
jmp
call
jo
xchg
shrb
sbb
dec
adc
xchg
and
enter
add
lock
mov
jno
addb
mov
imul
test
xchg
jae
jo
adc
mov
xor
and
mov
jo
add
test
popa
jo
or
pop
and
mov
add
insl
jb
mov
cmp
xchg
mov
dec
clc
bound
stos
sti
roll
mov
jne
adc
jo
xor
xchg
lods
notb
loopne
outsb
int3
outsl
pop
fcmovu
xor
cmp
jae
pusha
aas
xor
in
leave
dec
jl
dec
jne
or
loopne
mov
lea
je
lcall
addr16
dec
sbb
nop
inc
pop
jo
les
leave
loopne
mov
jo
cmpsl
orb
or
push
mov
push
cld
jl
cmp
xorb
dec
loope
add
mov
dec
cmc
mov
jmp
std
or
je
add
sbb
insb
jb
jge
and
loop
push
in
or
mov
mov
das
fsubl
test
inc
xor
fadds
add
push
cld
mov
test
stos
leave
cli
jo
pop
fcomi
mov
mov
movsb
jl
jo
inc
mov
inc
jo
jmp
in
jae
insl
movsb
rcr
lock
jno
xchg
sub
pop
aad
mov
sbb
jo
es
mov
loop
xorb
mov
inc
jo
rcr
sbb
pop
pop
adc
imul
pushf
lret
jo
xor
out
mov
jle
insb
xchg
adc
jo
fldcw
insl
out
xor
xchg
xor
leave
cs
ja
mov
add
adc
push
fndisi(8087
or
test
xchg
adc
out
nop
inc
and
pop
add
stos
inc
jo
fdivp
add
push
loop
inc
lds
ret
icebp
fildl
xchg
jo
lea
push
push
cld
jo
jg
sahf
aad
mov
add
pop
in
push
loop
jg
sti
es
xchg
fdivrs
mov
ljmp
fstps
gs
jo
mov
sbb
push
imul
push
loop
xor
jo
aad
shlb
mov
gs
jecxz
pop
mov
popf
xlat
in
aad
mov
leave
sub
jle
outsb
fdivs
xor
icebp
jo
cwtl
loope
adc
xchg
das
push
jle
xor
and
mov
or
mov
cmc
inc
cld
les
enter
adc
dec
push
movsb
cwtl
inc
insl
aaa
and
lock
gs
shr
jmp
sbbl
dec
in
lock
into
mov
add
xor
jo
ja
mov
jo
int
aad
inc
sub
mov
inc
call
mov
test
jo
xor
add
mov
mov
sub
mov
dec
aad
mov
movsb
cmc
mov
mov
jne
pop
iret
rorb
std
mov
stos
jo
out
inc
inc
mov
aaa
imul
mov
mov
lods
add
push
sbb
xchg
fldcw
xorl
cmp
mov
mov
jo
fnstenv
and
xchg
sbb
lock
add
mov
fwait
ja
fldl
cltd
dec
mov
shrb
dec
add
cli
push
fxch
dec
je
mov
aaa
cmp
arpl
insl
fbstp
ret
orb
rorl
jnp
arpl
mov
jo
leave
mov
jnp
or
mov
jo
mov
insl
test
pushf
xor
hlt
icebp
adc
pop
pop
faddp
mov
rorl
pusha
mov
jo
pop
mov
sub
xor
je
mov
push
jns
push
push
lret
fnstenv
xor
dec
sti
out
cmc
jno
in
out
mov
dec
lret
xorl
jb
sub
fnstenv
xchg
test
mov
pop
pop
sub
mov
sbb
gs
lret
int3
jo
lds
test
add
xchg
dec
jae
adc
push
mov
pop
jo
add
add
jae
adcb
cmpl
jecxz
test
xor
add
adc
shll
fisttpl
jo
xchg
imul
dec
fptan
push
jo
std
mov
jge
push
rorb
enter
outsb
xchg
xlat
scas
out
adc
jecxz
pop
inc
cmp
rcll
cmp
dec
lock
inc
loop
jo
sbb
in
adc
cmpsb
aaa
enter
mov
lds
js
cmp
mov
sbbb
mov
aad
loope
rcrl
jo
mov
xlat
es
jo
mov
dec
push
jo
out
sbb
xor
loop
inc
pop
jo
jne
cld
sbb
js
lods
and
scas
bound
lock
jno
insb
leave
or
lock
movsl
xchg
xlat
jo
cmp
and
shrl
xchg
dec
frstor
jne
push
les
cmc
mov
xchg
insl
aas
fwait
or
std
in
jo
clc
add
push
push
pop
lock
xchg
mov
jmp
or
stos
cmp
cltd
sub
mov
call
les
jo
cld
rcrl
mov
pop
push
jb
clc
loopne
insl
push
cwtl
push
dec
adc
xchg
inc
sbb
add
xchg
dec
je
in
outsb
add
adc
in
outsb
fwait
add
ret
mov
push
jb
test
int3
mov
jnp
or
and
fdivl
sbb
inc
loop
pop
dec
repnz
xlat
jne
mov
imul
sub
xor
push
movsb
dec
jo
std
arpl
jo
decl
mov
push
push
loopne
outsb
movsb
insb
cli
push
inc
pop
lock
sub
jo
pop
addl
jnp
sbb
xlat
jo
aaa
mov
cmpsl
or
jae
dec
movsb
outsb
mov
adc
fs
inc
sub
pop
add
sbbb
inc
dec
push
sahf
dec
xchg
add
fdiv
push
ret
jo
mov
and
dec
and
push
in
stc
push
iret
js
repz
rorb
dec
shll
mov
add
and
clc
ja
cmpsl
daa
loope
loopne
aam
mov
inc
mov
scas
jp
jnp
sbb
nop
cmp
test
lret
bound
mov
in
inc
jmp
fsts
fdivrl
push
out
or
mov
and
call
cs
jo
sbb
jge
xor
ja
jo
push
sub
punpckldq
outsb
adc
es
push
ja
xchg
cmp
into
xchg
mov
cmp
jo
or
jo
fstps
pusha
jae
jne
cmp
cwtl
jmp
cld
fbld
sub
jo
pop
jp
jno
fscale
nop
jo
imul
jo
les
sbb
in
xor
inc
cli
mov
push
jecxz
jo
cwtl
mov
cmp
movsb
outsb
rorl
lock
or
hlt
mov
addb
add
xchg
daa
jo
push
cmp
sub
xor
gs
add
xchg
xor
rorb
sub
es
out
insl
into
int3
sar
push
vpshufd
push
out
jl
pop
mov
xor
jo
jne
repnz
aas
aam
jo
stos
adc
adc
pushf
aad
pop
mov
jo
aaa
add
inc
fdivrp
jo
jae
aad
jp
out
jo
imul
mov
adc
jnp
fmull
aad
adc
mov
pushf
jo
pop
fstpt
and
fwait
dec
cs
jl
aas
jo
mov
ja
xlat
out
or
insl
mov
cld
pop
xchg
sub
jae
pop
subb
sbb
iret
mov
lods
xchg
mov
pop
mov
sub
lahf
jo
shl
imul
out
std
leave
nop
mov
sbb
cwtl
jg
ficomps
aas
js
mov
add
jo
sub
or
loope
leave
jbe
inc
pop
mov
dec
jo
jl
fbld
call
mov
mov
mov
push
je
jp
adc
lock
shrl
ja
cmp
mov
mov
outsb
enter
xchg
int3
nop
orb
mov
push
call
shll
jmp
mov
or
jnp
push
out
sbb
jmp
jo
daa
sahf
pop
je
insb
test
loope
mov
xchg
xor
lea
inc
mov
mov
jmp
push
gs
mov
stc
sub
bound
fwait
leave
lock
xor
jg
enter
xlat
mov
sub
fcmovu
push
inc
adc
fnstenv
decb
mov
lea
jo
push
aam
mov
stc
jno
cs
add
and
insl
insb
mov
xchg
nop
mov
fbstp
pop
xchg
pusha
sbb
fbstp
gs
xchg
cmpsl
cmp
jo
jge
mov
das
movsb
push
ja
sbb
sub
sub
jo
into
sub
out
ds
jo
sarb
push
push
aas
xor
scas
lods
movsb
cmp
jno
cmp
insl
std
jge
lcall
mov
pop
movsl
rorl
jecxz
mov
imul
adc
loopne
mov
push
sbb
push
cmp
jbe
adc
lods
jo
aad
lret
repz
sarb
jo
loopne
inc
gs
js
leave
in
cmc
fsubrl
jo
aad
es
adc
dec
sbb
jmp
or
inc
icebp
loopne
jo
adc
out
nop
jo
lea
adc
mov
int3
sub
xor
into
fwait
jo
fldt
or
dec
and
cltd
gs
and
nop
aas
fs
test
test
adc
sub
jg
xchg
cmp
jl
push
mov
shll
xchg
pop
xchg
jo
orb
jo
fmull
imul
xchg
scas
mov
js
shll
std
pop
movsl
leave
or
jo
mov
push
xchg
sarl
cld
push
jo
cmp
imul
pop
dec
ret
inc
sub
cwtl
adc
push
mov
std
push
loope
pop
fldcw
dec
imul
sub
xor
mov
and
pop
pop
sub
jg
lock
mov
in
flds
mov
inc
pop
mov
or
test
mov
jo
sub
push
pop
jns
jo
add
fdivrl
mov
loopne
into
jmp
jecxz
roll
sbb
jo
xor
mov
dec
andb
out
jo
xchg
and
adc
insl
mov
data16
dec
lods
movsb
mov
les
mov
push
insl
add
fcmovbe
push
add
leave
adc
sub
jo
adc
push
ljmp
sbb
in
jo
aad
adc
push
pop
cmp
stos
mov
mov
adc
rorb
outsb
xor
xchg
lock
jae
in
pop
es
rorb
test
cli
out
pushf
mov
lret
jo
cmp
mov
call
pop
movsb
push
imul
cmp
pop
imul
or
out
frstor
ja
cmpb
lcall
cmpsb
push
ja
or
jo
cmpsl
ret
or
add
test
xor
fdivl
jo
xchg
aas
pushf
pop
je
popa
bound
scas
xchg
add
daa
in
mov
jo
push
sub
insl
out
dec
lock
xlat
lret
jbe
lcall
mov
scas
fstps
outsb
mov
xor
bound
shlb
stos
wrmsr
subb
pop
je
iret
pop
hlt
mov
mov
or
cmp
call
movsb
leave
push
inc
icebp
or
sub
adc
or
popf
mov
add
in
dec
bound
dec
lock
mov
idiv
sti
or
xchg
enter
jne
shlb
push
jge
xchg
mov
jae
sbb
and
jo
notl
aad
imul
lret
jb
inc
mov
jbe
mov
lret
ficomps
insb
or
test
xor
mov
xor
push
pop
push
push
cmp
mov
pushw
js
mov
ljmp
lahf
cmp
aad
cmc
push
fst
mov
mov
cmp
ret
cmpsb
in
insl
mov
xor
loope
popf
push
js
fmulp
cmp
or
jb
out
jo
sbb
es
insb
jo
sti
rolb
arpl
sub
jae
or
cmpsl
add
mov
js
aas
xchg
ja
mov
pop
push
cmp
insl
cmp
test
or
and
jo
adc
add
sbb
call
push
icebp
iret
xor
adc
loop
imul
push
mov
xlat
inc
xchg
xor
lds
aaa
fstpt
loop
jo
ret
cmp
shll
sub
cmp
pop
cli
jo
mov
pop
pop
xchg
xor
jo
mov
hlt
popf
fdivs
push
in
pmullw
sub
jo
jbe
popa
mov
addr16
mov
aad
ss
pop
push
ljmp
xchg
pop
inc
lds
push
int3
push
lods
dec
sbb
ret
test
jl
push
orl
jo
pop
xchg
lods
adcb
into
jo
fstpt
js
lahf
jecxz
test
jae
adc
int3
jne
mov
es
lea
sbb
pop
sub
mov
xchg
aad
jno
lcall
add
xchg
jo
mov
stos
sbb
out
jno
xor
sbb
jo
rcrb
mov
outsb
repz
out
insl
lea
add
sbb
flds
cwtl
mov
pop
sbb
and
cltd
popa
mov
loop
push
in
pop
fistpl
xchg
xor
int
test
lods
enter
fisubrs
xchg
or
jo
aaa
aad
push
mov
out
xchg
cmp
mov
ficomps
and
add
mov
add
push
xor
dec
mov
sbbb
cltd
xor
mov
adc
add
loope
push
mov
std
inc
sub
jb
jbe
jo
jl
aaa
outsb
pop
fdivrs
adc
jne
fisttpl
jbe
or
insb
out
lret
je
dec
ja
in
int3
adc
mov
sub
jmp
mov
pop
pop
je
jnp
nop
jle
enter
jo
pop
call
pop
jo
adc
mov
sub
lods
insl
or
cwtl
cmp
mov
xchg
mov
jo
dec
jg
bound
adc
stos
jo
repz
fdivl
ja
jl
ss
inc
mov
xchg
add
ret
dec
lret
fwait
aad
stc
mov
arpl
xchg
jno
jne
cmp
add
jo
push
dec
sub
out
inc
mov
call
test
jo
mov
fwait
mov
rclb
jo
push
push
jns
scas
add
inc
lock
stc
jo
or
call
call
xchg
pushf
sub
aas
outsb
lods
fmull
mov
dec
mov
xor
out
clc
call
pushf
jo
orb
xchg
dec
pop
jo
mov
xor
jo
push
in
in
int
inc
or
jo
je
inc
fsubrl
ljmp
push
aad
jo
push
into
mov
push
xor
and
movsb
icebp
subb
push
jo
jl
frstor
xor
jo
mov
rol
into
inc
push
mov
sub
test
jo
fiadds
rcrb
loopne
add
sti
addr16
aaa
adc
into
jo
mov
ret
jo
not
xor
in
fwait
jo
or
std
mov
pusha
jo
push
inc
loop
aad
jo
add
fists
lret
lea
pusha
insb
push
dec
push
stos
aad
mov
out
arpl
xor
add
mov
divl
enter
lea
inc
jo
and
movl
int
cmp
push
jp
mov
dec
push
aaa
push
xor
adcb
mov
mov
inc
jo
pop
popa
ret
lds
adc
test
mov
mov
loopne
leave
jo
into
cmpsl
out
shrl
jo
fwait
push
xchg
mov
sti
dec
ja
xor
ds
lds
faddp
cwtl
jo
pop
xor
dec
les
add
loope
xor
jnp
pop
xchg
rcrb
repz
pop
mov
leave
mov
and
sbb
dec
pop
mov
mov
xor
jg
cmc
popf
lock
mov
jo
shl
pop
mov
sub
lods
and
mov
dec
or
and
scas
fwait
cmp
jo
in
push
fisubs
outsb
jmp
pop
xchg
mov
test
jo
and
pop
in
lods
jb
ss
lods
inc
aam
mov
jo
sbb
int3
pop
jo
test
bound
shll
sbb
cmp
mov
mov
xor
leave
es
cld
pop
aas
ja
mov
xchg
mov
in
sbb
xor
or
and
or
lret
mov
pop
outsb
xlat
xor
sub
aam
cld
cmp
orl
neg
pop
pop
mov
fwait
mov
fdivs
fistl
add
xor
shrl
insl
push
in
sbb
inc
icebp
mov
xchg
ja
das
lret
dec
insl
lcall
jl
aas
int3
jp
pop
jo
sarb
jne
ret
jo
mov
jmp
xor
xor
inc
jns
insl
int
lods
jl
pop
popf
mov
xor
mov
adc
mov
pop
cwtl
cld
adc
push
nop
shll
in
test
jnp
push
mov
lcall
add
gs
mov
mov
jo
pop
addr16
fnsave
lods
jo
pop
sbb
jo
cmp
ss
cmp
mov
push
jbe
rclb
ret
insl
jo
dec
loop
in
push
mov
xor
ror
sbb
jo
iret
roll
loope
lods
pop
xor
arpl
aad
in
fimull
inc
sub
adc
test
test
mov
jl
fstp
fdivs
sub
adc
ljmp
sbb
insb
mov
imul
jnp
loopne
lea
add
jae
xor
lock
call
jo
popl
lds
cmpsb
ja
and
fxch
shlb
add
adc
shl
jo
or
pop
push
jo
lret
xchg
add
and
mov
sub
ds
cmp
popa
add
ret
mov
mov
jo
mov
or
xor
idiv
jo
ljmp
jo
pop
popf
cmp
adc
cmpsb
into
fsubrl
xor
xor
push
xchg
ret
xor
test
lahf
test
into
mov
negb
lea
ret
push
jge
arpl
xlat
jo
fldenv
mov
jo
sub
jmp
movsl
jae
mov
call
loopne
jo
add
loope
mov
sbb
fsts
stc
rorl
aad
insl
lods
xor
in
cmp
fs
cmp
insl
jno
add
imul
mov
hlt
push
imul
inc
sub
jo
mov
inc
movsb
fisttpl
push
cmp
ss
insb
push
dec
add
inc
sti
test
jo
shll
mov
adc
push
mov
xor
mov
jo
add
inc
je
push
xlat
testl
ja
cmpsb
call
dec
mov
in
int
lods
jge
stos
fwait
jo
cs
out
sti
and
lds
add
cmp
fstps
sbb
mov
adc
cltd
mov
pop
sbb
dec
std
sbb
popl
jo
int3
cmp
arpl
rorl
enter
lret
rcrl
and
pop
xchg
and
pop
xor
push
jo
cmp
or
mov
push
push
xor
push
add
sbb
mov
test
push
adc
inc
jae
lods
mov
imul
arpl
sahf
pushf
jne
sub
and
jo
aas
shll
mov
add
mov
jmp
mov
fildll
xor
or
jo
sbb
ds
and
push
inc
mov
jo
add
jge
mov
notb
lret
mov
cmpsb
imul
jno
dec
and
popf
sbb
or
loop
jmp
stos
jne
inc
jb
flds
dec
dec
gs
lock
lock
lds
push
jo
or
stc
cmp
sub
jo
xor
loop
lods
mov
mov
push
aaa
int3
jo
dec
inc
dec
pop
adc
outsl
sbb
shlb
mov
jo
das
mov
repz
jle
sbb
repnz
fsts
mov
xor
sub
fcomi
sub
cwtl
jo
divb
dec
repnz
inc
xchg
jo
add
bound
inc
jge
jo
hlt
and
mov
inc
mov
mov
and
jge
push
pop
test
mov
jo
imul
adc
mov
das
push
jbe
imul
rolb
ret
andl
dec
pop
daa
insb
sbb
mov
mov
or
add
or
ljmp
jo
mov
pop
ss
cwtl
inc
movb
cmp
cs
dec
lock
pop
popa
sti
shr
stc
add
stos
test
jle
jo
xchg
adc
mov
cli
clc
inc
lock
cmpsb
and
cmp
cmc
ret
mov
scas
pop
aad
or
fmuls
dec
lods
outsl
rcrl
addr16
insb
jl
stc
mov
in
aad
mov
jo
imul
je
push
mov
scas
or
jo
inc
repz
pushf
jg
jae
fsts
aad
jo
clc
xchg
out
in
je
lds
inc
mov
xor
ja
das
and
and
mov
testl
jo
inc
mov
mov
push
fidivs
hlt
aad
pop
loopne
pop
jo
repnz
ljmp
push
cmp
stos
in
jo
imul
pop
jle
insl
loope
mov
xlat
mov
int
sahf
jo
push
loop
pusha
fldt
adc
stos
inc
not
jae
mov
mov
push
mov
mov
pushf
es
jo
push
inc
cmp
in
xchg
outsb
add
adc
scas
js
imul
test
imul
add
add
shlb
mov
push
add
mov
sbb
lcall
enter
ljmp
jp
pushf
add
jae
xor
orb
cwtl
sub
xor
cli
push
push
cmp
decl
mov
sbb
jo
jno
inc
push
jo
popa
frstor
xchg
inc
mov
inc
xor
divl
movsl
and
mov
cmpl
push
jb
xor
cmpsb
lds
adc
add
push
mov
lock
cmpsl
mov
mov
or
jbe
jg
dec
lcall
out
imul
dec
shlb
sti
les
data16
in
jo
fnclex
ss
or
dec
jo
sbb
mov
push
sub
call
pop
stc
adcl
dec
xchg
scas
repnz
test
mov
insb
add
lcall
lds
in
dec
mov
push
dec
rcrl
xchg
out
jae
push
rclb
or
ss
xchg
mov
mov
mov
sub
jb
jns
push
cmp
aad
inc
into
dec
enter
dec
sbb
lock
pop
or
cs
outsb
jnp
push
inc
pop
test
test
insb
jo
cmp
mov
shlb
jnp
add
jo
rorl
mov
push
in
fnsave
aad
xorb
in
rorl
mov
xchg
repz
jo
dec
in
inc
lods
mov
sbb
into
ja
adc
in
rolb
push
pop
inc
pop
jo
xor
out
arpl
adc
ja
ret
push
sti
call
jne
pusha
insl
xchg
pop
fnsave
scas
mov
sbb
jmp
jo
lock
adc
ret
pop
test
leave
nop
sbb
sub
ja
nop
cmpsl
in
sarb
fiadds
xlat
addl
push
jo
push
fcomi
in
and
pop
sub
ljmp
xlat
jge
jo
add
lahf
lea
nop
or
add
call
pop
mov
fsts
jo
push
push
push
xchg
pop
popf
xchg
pop
mov
aas
daa
mov
std
adc
outsb
cld
outsb
dec
cmpsb
jge
push
jle
jo
cmp
xchg
adc
inc
out
int3
pop
xor
rol
jl
push
jne
jo
ljmp
aas
push
jo
pop
lret
je
sbb
cmp
inc
jle
inc
dec
add
jo
fsubl
xchg
push
mov
insl
add
gs
or
add
aam
or
ds
jp
add
orb
add
fmull
xor
push
fcomps
rcrl
add
jl
lret
or
sub
pop
mov
aam
jo
or
and
mov
xor
mov
outsb
in
xor
or
jbe
aam
loope
into
out
pop
pop
outsl
stos
jmp
ja
pop
popf
cmp
adc
dec
xchg
sbb
or
mov
inc
mov
shrl
mov
jo
in
cmp
mov
rorl
jo
pusha
jae
and
in
mov
sarl
test
mov
xchg
nop
dec
xor
xchg
dec
sarb
sahf
adc
lock
or
xchg
or
mov
adcb
jo
push
vmaxsd
xor
push
sbb
jo
sub
cltd
sub
pop
cwtl
iret
inc
jo
shrl
sbb
data16
test
push
shlb
sub
aas
fldenv
mov
ret
outsb
pushf
mov
jo
push
mov
dec
add
outsl
sub
sbb
mov
pop
cmp
pop
jge
jmp
lock
cwtl
addr16
shrl
jbe
ret
mov
mov
xchg
dec
pusha
dec
sub
xchg
nop
neg
mov
fdivs
pop
jae
xor
std
sbbb
jo
mov
mov
pushf
outsb
loopne
subb
fdivrp
adc
sahf
push
repz
mov
jo
ret
pop
dec
loop
jo
aad
imul
cld
lcall
mov
dec
jo
inc
repnz
das
jmp
jo
mov
xchg
jp
testb
pop
and
out
or
pop
scas
push
and
or
test
dec
add
jo
call
mov
cmpsl
pop
and
xchg
jo
cwtl
jl
stos
jle
fcmovb
leave
jo
cmp
mov
xor
mov
jo
ret
cmp
pop
pop
addr16
jo
mov
mov
jae
inc
pop
lea
fmulp
shl
in
ja
dec
cmp
loopne
adc
jns
dec
int
scas
das
imul
pop
pop
add
dec
ja
jo
mov
inc
cs
hlt
dec
mov
pushf
out
cmc
pop
int3
add
stc
or
cld
push
rep
rorl
add
sbb
hlt
jb
das
lea
sub
jbe
mov
push
cmp
sbb
in
add
lods
pushl
shll
hlt
shll
mov
mov
rorl
lock
in
xchg
push
bound
mov
lods
sti
test
jo
rorl
mov
push
push
jo
test
jl
out
aad
popa
sub
test
mov
jecxz
jnp
push
jo
sbb
sub
fstpt
fwait
jo
aad
dec
bound
inc
mov
and
lock
outsb
adc
add
pop
jo
or
pop
jo
rcrb
xor
fidivs
adc
js
adc
mov
mov
int3
cmpsl
dec
inc
fnstenv
out
test
jo
jns
mov
mov
int
in
imul
adc
lea
sub
lods
jo
shrb
outsb
lock
bound
out
and
ja
subb
mov
push
mov
add
add
mov
pusha
lods
mov
int3
in
sbb
add
jo
dec
outsb
xchg
sub
orl
and
pop
cmc
mov
fs
fnsave
and
jecxz
jae
fildl
ja
sub
pavgb
mov
cmp
add
and
pop
adc
xchg
xchg
ljmp
jo
cmp
mov
aaa
inc
outsl
outsb
lds
int
loopne
sti
cmp
jl
js
inc
xor
mov
dec
cmp
loope
and
pushl
rclb
xchg
call
andb
out
fstpt
inc
lahf
pop
lcall
stos
cmp
push
popf
dec
ljmp
xchg
push
les
in
jo
pop
in
aad
in
insl
dec
imul
clc
push
dec
cmp
xchg
jo
xchg
shll
fsubrl
jo
fdivs
mov
call
das
aaa
inc
jae
daa
sbb
cmpsb
ja
and
mov
loopne
sub
push
jl
cltd
std
addl
mov
jo
cmp
xor
jne
lret
outsb
mov
push
and
jns
cltd
rcrb
addb
jp
call
or
cmp
and
sbb
xchg
insl
jmp
sbb
addr16
and
out
aaa
sbb
fsubrp
in
call
xchg
adc
cmp
fisubrl
fisttpll
leave
add
imul
mov
and
data16
shrb
xchg
xor
mov
push
cmp
insl
imul
sarb
and
lea
pusha
movsb
push
fdivl
xor
add
add
enter
mov
data16
xchg
jnp
arpl
xlat
jo
insl
enter
inc
or
mov
sub
pop
mov
cmp
jo
lock
loope
jns
jo
in
dec
mov
jo
cmpsl
mov
aad
inc
and
push
lock
adc
clc
ret
adc
je
les
ja
filds
push
stos
incl
pop
fcoml
lock
je
pushf
lea
cmpl
xor
aaa
shrb
mov
mov
leave
loop
rcll
push
nop
xchg
jo
lea
fdivl
bound
mov
or
movsb
and
ftst
pop
sub
sbb
add
jo
add
out
pop
iret
js
jo
or
mov
cwtl
and
outsb
loope
les
lock
pop
inc
cmp
add
jne
mov
into
nop
xor
rclb
fdivl
fs
cmp
pop
mov
cmpb
add
daa
mov
je
daa
push
mov
or
dec
out
out
jo
aam
and
or
pop
sti
push
hlt
add
mov
dec
fiadds
aas
or
mov
sahf
cli
pop
loopne
mov
push
sbb
xor
or
divl
or
jl
mov
jo
dec
dec
xor
add
sahf
mov
xchg
adc
pop
xchg
push
pop
dec
lds
inc
mov
jns
repz
sbb
cmp
jl
mov
ficoml
or
add
daa
fcompl
in
dec
jnp
lock
rclb
ret
outsl
fstps
cmpsb
les
dec
repnz
daa
ret
jo
jp
xchg
shlb
shll
jae
sbb
sub
jo
mov
sub
xchg
in
cmp
es
push
inc
icebp
xlat
xchg
call
jg
test
pop
loope
sahf
and
aad
xor
les
jnp
push
inc
lods
sbb
lock
sub
mov
rolb
fsubrl
rolb
enter
mov
mov
outsl
bound
leave
subl
pop
cwtl
jmp
cmp
push
jo
icebp
mov
nop
pop
cmp
xor
inc
jo
fxch
es
add
fcoms
addb
dec
and
jo
cld
repnz
add
cmc
std
mov
test
outsl
push
cmpsb
dec
cmp
adc
insl
lahf
out
lret
mov
mov
xor
or
cli
jo
lods
cli
shll
pop
mov
loop
inc
jae
xchg
int
mov
repz
mull
mov
fadds
jmp
int
rcr
fidivrs
xor
lock
mov
cmpl
pop
add
jo
fldenv
jo
pop
xorb
mov
loop
adc
insl
pop
imul
pop
es
dec
stos
cwtl
repz
push
jo
lret
add
dec
enter
xchg
pushf
jb
jne,pn
repz
jo
aaa
and
mov
pop
rcll
and
aas
aad
sti
pop
pop
xchg
cltd
push
xchg
fsubs
jo
shrb
call
into
cmp
jno
xlat
outsb
jge
inc
insl
sarl
xchg
sbb
and
and
mov
test
imul
inc
jg
mov
mov
pushf
mov
push
adc
pop
lds
mov
enter
pop
adc
outsb
std
in
out
dec
pop
mov
jo
push
add
aad
mov
and
dec
push
aas
jno
sbb
jo
rcrb
in
push
or
push
movsl
jo
cmp
push
loopne
pusha
jo
in
stos
pop
push
dec
or
lock
mov
jae
lea
cmc
pop
inc
addb
in
jo
jl
jb
and
dec
jp
lock
gs
ss
sti
out
xor
xlat
testb
rcl
sub
js
pop
jl
jo
mov
jmp
jo
outsl
loopne
mov
jo
ss
lock
insb
cmp
loopne
mov
fidivrl
mov
xor
movsb
xchg
jo
add
cmpsl
icebp
aad
xchg
outsb
sub
mov
popa
mov
adcb
sbb
mov
jo
fwait
mov
aad
aam
dec
xor
jo
clc
jb
sub
xor
mov
or
out
pop
jo
xchg
pop
sub
aad
sub
and
out
mov
jo
outsl
adc
mov
add
test
mov
lea
lds
fadd
xchg
data16
jg
enter
cmp
pop
mov
lret
inc
adc
dec
dec
lcall
loopne
inc
mov
idiv
xchg
dec
sub
lock
mov
and
pop
inc
into
aam
dec
enter
fisubrl
aas
or
iret
jo
rcll
cmp
lock
and
push
jne
push
rol
hlt
test
mov
push
dec
dec
jo
push
jae
sarl
sbb
lds
add
out
jo
retw
test
movsb
outsb
sub
lock
aaa
fcoml
imul
mov
lock
imul
mov
mov
jo
sahf
push
aad
or
test
loope
adc
addr16
mov
jmp
les
pop
jo
push
mov
ja
sbb
xchg
lea
adc
cmc
data16
inc
add
pop
xchg
adc
mov
sbb
inc
rcr
insl
push
push
movsl
daa
and
xor
fisubrs
jo
cmpl
fisubrl
pop
imul
cmp
and
ja
push
lret
pusha
outsb
out
das
cmp
xor
jge
fnsave
dec
ljmp
cmp
pop
icebp
xchg
push
xor
push
mov
mov
or
xor
addr16
stos
push
arpl
mov
cld
loope
mov
xor
sbb
push
jo
insb
into
sub
bound
fistpl
jo
lods
xor
xor
adc
daa
cmpsb
jo
sub
push
imul
shrb
jne
sbbb
leave
adc
push
mov
cs
jo
xchg
mov
nop
jae
out
pop
in
enter
push
arpl
cmpb
repnz
fisubrs
in
imul
mov
mov
sub
push
adc
jo
or
jecxz
repnz
rcl
pop
mov
inc
in
test
xor
cmpsb
xor
xchg
push
push
roll
call
jo
xchg
sub
flds
cmc
cld
movsl
sub
je
mov
mov
cmpsl
dec
push
pop
lock
aaa
lds
scas
pop
dec
jo
stos
mov
outsb
mov
add
sub
fildl
out
jo
mov
cmp
stc
adc
ret
je
cmc
nop
std
sbb
mov
push
arpl
out
mov
lret
insl
jo
and
roll
sbb
movsl
inc
cs
cmpsl
popf
sbb
jo
js
push
pop
jmp
loop
lock
jle
jae
mov
sarb
das
push
push
jmp
pop
mov
out
or
enter
loope
sbb
push
clc
dec
push
sub
jl
rorb
or
mov
mov
pusha
divl
je
fidivl
jne
shlb
ljmp
jo
push
xor
mov
jno
jle
add
insl
and
dec
in
ja
pop
pop
cld
xchg
int3
xchg
lods
outsb
call
add
push
dec
mov
imul
mov
mov
push
lahf
fwait
jo
mov
shlb
cmpsl
sbb
jo
xchg
fmul
movsb
xor
icebp
ljmp
or
rcr
jo
mov
dec
inc
jo
insb
shll
pop
std
jo
cs
pop
ret
nop
lods
jmp
mov
mov
mov
xor
out
ss
sub
adc
test
inc
repnz
add
pop
add
out
xchg
mov
fisttpll
push
stc
add
dec
xchg
or
push
push
xor
in
insl
lods
push
les
jne
subl
lock
push
mov
scas
bound
dec
mov
sbbb
xor
test
dec
divl
mov
scas
adc
shlb
shlb
fnstenv
and
pop
jo
test
dec
push
jo
subl
sub
fdivs
push
adc
dec
pushf
jno
imul
jae
mov
ret
es
lods
jo
and
lea
adc
dec
xchg
add
xor
je
es
xchg
arpl
mov
sub
jae
movsl
sbb
inc
dec
jo
out
fwait
xchg
sbb
iret
jo
sbb
aad
xchg
add
push
cli
rcr
shrl
push
insl
xchg
add
jae
loopne
pushf
jecxz
mov
pop
sbb
inc
pop
jno
pop
scas
test
push
movsb
into
mov
gs
out
and
mov
sti
xor
inc
sbb
xchg
lahf
jp
jo
aad
or
loope
cltd
cmp
outsb
inc
mov
mov
mov
lahf
jb
fstpt
inc
sar
push
jecxz
aad
pop
inc
stos
scas
sub
xor
xor
xor
jae
ret
and
test
jo
push
mov
jo
negb
pop
sahf
loopne
jo
cltd
adc
ja
or
adc
sub
out
inc
aad
mov
inc
out
mov
xchg
push
mov
pop
jo
push
jg
pop
imul
loope
or
loop
out
fmull
sub
sbb
cld
jecxz
cmpsb
jae
outsb
add
and
xor
sub
fincstp
cwtl
or
int3
or
cmp
mov
and
ljmp
adc
aaa
imul
mov
jl
pushf
inc
cli
jno
outsb
lea
out
mov
adc
pop
mov
fidivl
cmp
aad
push
rcrl
arpl
lea
jo
cmp
iret
div
call
jo
sahf
sbb
cli
xchg
test
inc
rcrb
leave
jo
fbstp
jo
std
loop
test
or
xchg
xchg
cmp
dec
jne
outsb
fnstenv
popa
addr16
call
insl
cmp
push
xchg
add
ljmp
jo
cltd
sahf
aad
jnp
arpl
cld
jo
ja
add
jo
pop
inc
mov
ja
paddusb
popa
jo
mov
mov
scas
fistpl
fbld
out
push
and
fnstcw
jl
insl
push
mov
mull
sarb
push
pop
add
lcall
lcall
scas
adc
fadd
adcb
mov
cs
sub
nop
fidivl
dec
pop
push
cmpsb
imul
or
dec
fs
cmp
pop
push
dec
mov
cmp
cmp
jbe,pt
cmp
daa
aas
enter
pushl
mov
jo
push
add
and
jo
std
aad
stc
cmp
xor
mov
mov
jne
sbbl
xor
xor
cs
mov
mov
aaa
fdivrl
xor
aad
imul
cmp
cmp
rorl
mull
test
inc
imul
or
mov
lock
or
mov
notl
add
fbstp
jne
push
add
mov
push
mov
xchg
sbb
mov
lock
call
stos
dec
repz
or
jo
lret
out
dec
push
je
cld
cmp
mov
inc
mov
jp
fwait
jae
mov
mov
xchg
data16
and
in
iret
fwait
lock
mov
jae
pop
add
inc
jo
hlt
sbb
jo
lea
jo
lods
test
cmp
sbb
and
jo
nop
xor
orl
jbe
into
gs
xlat
ljmp
inc
cmp
call
mov
pop
lcall
inc
push
pop
push
jo
xchg
add
jo
fcoml
xor
je
fldcw
lahf
insb
gs
mov
test
inc
jo
xor
and
popa
lcall
jo
mov
rcll
xor
sbb
pop
loopne,pn
add
into
aad
popa
scas
cltd
mov
mov
jo
pop
rcl
cmp
lcall
addr16
aas
cmp
je
mov
outsl
int
inc
insl
movsb
bound
add
pop
jo
push
inc
jmp
aad
pop
jno
xchg
lea
mov
nop
inc
xchg
mov
or
inc
ja
fcmovnbe
jo
lea
faddp
jo
aad
fcoml
std
mov
dec
and
mov
ja
rcr
aad
sub
repz
xchg
out
cmpsb
mov
xor
jo
mov
xchg
incb
fldcw
mov
mov
stos
mov
ja
push
dec
xchg
dec
mov
or
sbb
push
mov
lds
cmp
insl
scas
out
in
repz
lea
jnp
lret
jo
xor
mov
jo
aad
movsb
lds
adc
jg
adc
sub
push
inc
lret
xor
pop
aas
pop
xchg
cmp
mov
lods
jo
loop
push
add
pop
insl
xor
mov
imul
jae
inc
mov
rcrb
dec
cld
mov
stos
pushf
ret
cwtl
jae
lret
fcoms
ja
jnp
lock
mov
dec
aaa
rcrb
add
outsb
dec
pop
cmpsl
push
jne
jno
dec
in
sti
ljmp
jnp
jp
cmp
fidivs
xchg
ja
inc
stos
fsts
jle
mov
jo
pop
mov
xchg
jo
iret
adc
jnp
cmpsb
inc
jbe
loop
rcl
jo
sbb
or
jo
movsl
daa
fistl
add
jo
jg
or
shll
pop
and
pushf
dec
jo
int3
aad
adc
call
adc
popa
cmp
cld
jb
rorl
mov
mov
cwtl
aad
sbb
pop
pop
push
icebp
std
cmp
jo
jg
aas
sub
enter
dec
int3
push
outsb
dec
pushf
fidivs
ljmp
jp
pop
mov
dec
cmc
or
addr16
push
adc
xchg
push
mov
pop
cmp
xchg
sbb
loop
sbb
aad
icebp
jo
fnstsw
cltd
into
js
xchg
xorb
jae
out
jae
pop
jp
add
jp
cli
pushf
jo
in
sahf
pop
mov
dec
cld
pshufw
jo
pusha
inc
cwtl
mov
call
jb
jo
lea
cmpsl
stos
lahf
pop
adc
inc
push
addb
push
rolb
into
int3
fnstenv
mov
cltd
and
scas
or
push
ja
dec
pop
and
insl
push
outsl
incb
test
push
xchg
pop
imul
mov
mov
jo
loop
sarl
out
fstpt
mov
mov
mov
sbb
mov
jle
jo
push
and
lds
repz
add
insl
xor
mov
cwtl
dec
adc
iret
mov
cmpsb
and
xor
jo
lock
jo
int
pop
pushf
aad
test
xor
das
out
jo
lds
fcmovbe
add
pop
mov
bound
jo
testb
imul
push
add
lret
int3
inc
lock
mov
fsubl
xchg
imul
or
jo
hlt
mov
xlat
mov
mov
jg
push
cld
in
test
mov
jo
sbb
divl
addr16
push
pop
or
xorb
mov
out
and
jo
je
jmp
xchg
cmp
add
pushf
ja
jo
int
mov
inc
jo
inc
cmp
pop
pop
repz
push
test
xor
push
nop
adc
loopne
shll
call
jo
into
aas
mov
dec
mov
fcmove
ret
fildl
inc
aad
imul
or
fs
xchg
sbb
and
bound
jo
and
es
jae
jo
test
jo
fcmovb
add
lret
jbe
pop
gs
int3
push
lock
pop
insb
cs
jl
out
lds
mov
mov
rcrb
xor
jo
xchg
inc
sbb
cs
orb
insb
sbb
imull
test
jo
mov
push
xorl
xor
jo
test
sub
jbe
fmulp
sbb
and
test
fadd
in
push
movsl
sbb
enter
iret
cwtl
jno
cmc
loope
jne
jo
daa
push
mov
fnstsw
jo
outsb
jle
rcrl
fsubl
sub
mov
adc
inc
out
shlb
push
xor
jo
divb
mov
aaa
aad
outsb
cmc
cmpsl
and
mov
pop
xchg
gs
jne
lock
xlat
adc
pop
mov
mov
rcr
les
jg
sub
and
pop
iret
cmp
mov
add
sbb
xor
out
jle
insl
jns
out
dec
jle
cmp
fidivs
popf
aad
dec
outsb
mov
mov
sub
insb
orl
mov
push
roll
jne
fdivl
in
out
aad
iret
mov
out
dec
loopne
dec
sbb
jne
inc
jbe
lock
cmpsl
inc
dec
int3
jnp
aam
cli
jae
andl
push
ret
enterw
jo
pusha
andb
or
cmp
mov
insl
cmp
xorl
or
fbstp
rcl
pop
arpl
xor
fcompp
jne
stos
inc
iret
cli
pop
js
push
cwtl
mov
add
or
out
push
jo
popa
stos
jno
jg
sti
jo
in
xor
or
sbb
xor
ss
jo
test
repnz
jo
divb
aad
pop
movsl
jo
idiv
cmp
cmp
or
jle
jo
push
clc
shll
pushf
ret
jbe
lea
jg
mov
pusha
jo
sub
fsubs
mov
xchg
or
repz
jl
in
xchg
sub
daa
movsb
gs
jne
xchg
fildl
add
cmp
jecxz
xchg
dec
push
mov
call
popf
mov
rol
xchg
or
imul
jnp
jle
out
lock
xlat
sub
outsl
sti
inc
scas
adc
fldln2
jo
inc
or
cmc
jae
mov
into
sarl
enter
mov
inc
sub
xorb
xor
movsl
outsl
fsubrs
imul
mov
mov
cmp
xchg
dec
adc
jae
fiaddl
push
mov
jno
xchg
insb
sub
mov
mov
or
jmp
jo
movb
jo
scas
int
push
mov
jae
bound
mov
mov
or
push
or
inc
scas
jmp
pop
sarb
jo
dec
mov
aad
xchg
jae
mov
mov
pushf
es
sub
mov
dec
rolb
xchg
and
nop
adc
iret
jo
jno
bound
jo
xor
inc
inc
jo
mov
icebp
xchg
insl
imul
push
and
pop
dec
das
jecxz
lock
push
sub
out
cld
cmp
xchg
cmpb
cmpsl
push
enter
rol
jo
ret
xchg
cwtl
push
xchg
add
xor
sti
movsl
lea
mov
scas
cltd
fs
ljmp
xchg
push
mov
lahf
jmp
stos
jo
cmp
addr16
insl
in
ja
adc
inc
add
dec
cmp
shr
popa
xchg
add
mov
frstor
xchg
mov
nop
sub
jecxz
ja
dec
daa
push
movsb
loopne
xchg
gs
test
push
lods
jbe
jo
repnz
push
sti
sub
loope
mov
xlat
push
or
aad
xor
out
jo
push
mov
jo
fiaddl
dec
in
icebp
jo
or
mov
mov
jb
cmpl
jmp
dec
ja
adcb
cld
jo
fnstenv
cmp
push
repnz
dec
in
aad
movsb
ja
pop
cmp
jle
insl
mov
andb
in
xchg
cmp
arpl
xchg
jmp
imul
fimull
sub
add
jl
add
lock
inc
push
sub
enter
cltd
inc
dec
mov
mov
fadds
dec
push
cli
sbb
aad
and
xor
add
xor
rcl
cmp
adc
xchg
sub
mov
xchg
popf
sbb
js
ja
inc
xlat
dec
ficompl
lods
out
adc
call
sahf
test
sub
leave
jae
and
data16
test
adc
jo
cltd
mov
dec
xchg
lock
mov
push
inc
mov
fisttpl
xor
out
jo
pop
or
push
lods
cmp
insl
sahf
push
pop
pop
push
icebp
mov
mov
adc
insl
in
pop
xchg
mov
pop
sbb
movsb
divl
sbb
sub
dec
punpcklwd
ljmp
ja
lahf
and
push
stos
in
in
inc
ss
lea
std
enter
or
jbe
jno
push
push
add
push
jb
mov
popa
lret
hlt
sahf
jo
mov
addr16
xchg
insl
sub
xchg
mov
jns
movsb
push
cmp
out
jo
repz
xor
ja
pop
shl
bound
popf
pshufw
mov
jo
pop
inc
mov
imul
mov
jl
shlb
mov
jo
roll
fnstenv
xchg
and
pop
icebp
jmp
mov
mov
jl
jo
xchg
clc
icebp
call
push
rcr
xchg
jnp
ja
inc
xlat
mov
into
sub
jo
sbb
jnp
mov
outsb
xor
sbb
arpl
push
arpl
sbb
bswap
in
nop
mov
xchg
cmp
push
jo
dec
into
bound
mov
jo
fists
and
rorl
shrb
jo
pop
sub
aaa
jo
test
dec
xchg
insl
fmul
and
cli
mov
jne
loopne
hlt
sub
jo
inc
jns
xor
push
cs
adc
jecxz
adc
aaa
pop
adc
jae
mov
pusha
pop
mov
mov
outsb
ds
sbb
or
mov
roll
rcpps
outsb
mov
clc
dec
bound
daa
jecxz
clc
and
mov
ja
and
pop
adc
or
mov
sub
push
dec
sub
push
pop
lds
mov
popf
mov
arpl
scas
roll
lock
dec
int3
jns
lret
insl
pop
jmp
sbb
stos
xor
faddp
pushf
outsb
pop
sub
xlat
jo
mov
ret
jl
inc
jmp
cli
arpl
jo
mov
adc
enter
mov
pushf
je
sbb
mov
add
sbbl
loope
out
movsl
sub
inc
jo
into
inc
pop
sub
mov
mov
cmpb
dec
push
xlat
jo
jbe
lds
xchg
loope
outsb
fildll
popa
jo
mov
sub
cli
enter
mov
out
jo
xchg
rorb
or
mov
jo
xor
mov
jo
and
jg
push
jo
in
sub
cmpsb
lds
xchg
push
aad
insl
pop
cmpb
jo
mov
fnstenv
dec
dec
inc
clc
lock
jecxz
jl
cmp
push
sbb
mov
sbb
adc
ds
das
and
jo
addr16
adc
or
ja
and
lcall
jo
lret
outsl
xchg
push
cli
ja
push
or
jo
push
clc
jg
dec
cmc
into
pop
and
mov
rorl
sbb
ret
enter
xlat
nop
add
jp
das
cmp
repnz
jmp
xchg
jno
pop
mov
imul
out
pop
xlat
fdecstp
inc
push
mov
xor
jp
dec
mov
test
movsb
mov
jnp
xchg
scas
jo
gs
inc
push
insl
inc
adc
insl
jo
jbe
mov
nop
sub
ja
in
dec
xor
loop
fldt
mov
mov
xchg
pop
add
int
ljmp
les
inc
dec
adc
push
shll
repnz
stc
sub
divl
fidivrl
addr16
shl
aad
lods
pop
jo
lock
shrl
jae
je
pop
adc
arpl
xor
fimuls
pop
cld
xor
pop
push
loope
mul
push
aas
int
fldcw
imul
enter
pop
dec
lcall
pop
ret
jo
lea
insl
cmp
sbb
in
mov
and
cmc
mov
pop
ror
and
addr16
ja
loopne
stos
insl
jg
pushf
and
sarb
addr16
ja
stos
adc
dec
insl
mov
add
sti
insb
pushf
sub
and
fstl
inc
movsb
jae
into
les
sbbb
inc
pop
dec
ja
dec
jmp
lock
shl
aam
dec
jo
cmpl
or
jo
mov
aad
mov
int
sbb
cmpsb
jo
jmp
je
lahf
in
popf
neg
lret
jo
mov
xchg
push
push
addr16
out
jo
jl
adc
jl
mov
imul
out
es
jmp
mov
arpl
testb
mov
mov
dec
les
adc
xchg
scas
arpl
dec
mov
jo
xor
in
jo
inc
adc
aad
lock
movsb
gs
jns
dec
sub
sub
test
enter
sbb
xor
out
jo
popf
jb
pop
and
aad
test
pop
scas
add
dec
jo
inc
das
jecxz
pop
cmc
rorl
mov
je
mov
or
fdivrp
negl
insb
pop
dec
loopne
sub
jmp
push
out
das
add
jne
mov
test
sub
sbb
inc
roll
mov
adc
xor
mov
gs
fisubl
daa
adc
lret
insl
dec
pop
enter
adc
insl
xor
aad
adc
jo
jmp
into
pop
jg
pop
jo
push
mov
repz
aad
movsb
sbb
pop
aas
jo
mov
pop
lea
ds
push
lock
xor
mov
scas
push
lret
into
push
jo
pop
mov
in
push
scas
xlat
sub
jo
sbb
loope
inc
gs
fsubrp
pop
lock
fsubrs
int
lret
xor
aad
jnp
out
mov
xor
sbb
pop
or
push
lea
imul
mov
xchg
jbe
and
push
loopne
jo
pusha
addr16
push
outsb
dec
loope
js
dec
jo
pop
mov
adc
popa
sbb
xchg
push
in
lea
jo
fldt
xchg
jbe
add
push
iret
jo
mov
sarl
fs
push
data16
ja
and
sbb
incb
pop
lock
mov
jno
shll
imul
sahf
jo
pusha
insb
out
mov
mov
call
imul
jo
jne
aad
shl
aas
jo
insb
stc
es
jmp
push
repz
xchg
dec
js
int3
fdivp
push
jo
cwtl
mov
mov
jno
sbb
push
and
dec
cltd
dec
jo
dec
cmc
jb
mov
jge
sub
push
push
or
data16
mov
or
out
push
and
mov
push
mov
jo
enter
xchg
push
jo
fldenv
fistps
lods
xchg
jo
inc
icebp
cmpsl
adc
sub
divl
leave
mov
jge
pop
shlb
cmp
shl
test
mov
mov
mov
clc
aam
scas
imul
aad
push
sub
das
pop
xor
aas
shlb
jp
mov
inc
mov
out
jo
add
sub
loope
sarb
imul
lea
cld
enter
add
push
fstl
or
xor
popf
rol
inc
jo
lret
test
adc
jno
mov
int
jno
push
jl
loope
addr16
aas
imul
sti
dec
or
sub
stos
pop
jne
jo
movhps
cli
loop
jo
cmpl
ret
pusha
les
jo
add
das
mov
adc
pushf
aad
or
jg
xor
into
insb
stos
addr16
fwait
lret
jo
jbe
xchg
sub
fmul
mov
push
lock
cmp
aad
ds
sub
jae
sub
sbb
cwtl
test
pushf
mov
hlt
sbb
movsl
imul
xchg
ja
sub
push
and
cmp
dec
pop
mov
xchg
addb
stc
mov
bound
sub
xor
jo
inc
xchg
add
int
jo
sbb
fwait
push
jo
std
mov
leave
lret
int
ja
and
pop
stos
mov
mov
shll
jo
aam
push
dec
and
adc
adc
xor
iret
stos
jo
pop
lcall
aad
je
test
mov
mov
insb
mov
mov
sub
repnz
stc
pop
or
mov
ljmp
jo
push
repnz
daa
cmp
mov
mov
xchg
outsb
xor
ljmp
cmp
out
loopne
mov
jb
js
push
iret
fcomi
xchg
lock
mov
jp
sbb
mov
xchg
mov
loopne
sub
jns
dec
mov
mov
cltd
jo
mov
sbb
xlat
sub
in
jp
push
jo
xor
inc
mov
pminsw
jno
inc
sub
mov
hlt
adc
test
lock
mov
sbb
cmp
jne
fwait
xchg
inc
jo
int3
push
xor
adc
jo
subl
fmull
lret
jg
jo
leave
ret
call
jo
ficomps
and
lret
repnz
jnp
insb
dec
lock
push
pop
add
or
xor
mov
lock
js
adc
pop
jae
in
cmp
divb
jb
adc
rcll
inc
sbbb
inc
add
fcomip
jo
in
ss
shll
mov
cmpsl
push
and
jp
jo
adc
sub
push
ret
lods
ss
jmp
mov
fs
or
pop
stc
push
jo
scas
daa
sbb
icebp
in
jnp
mov
add
shlb
mov
jo
std
sbb
adc
jo
or
popa
jge
add
cmp
jo
or
sbb
sub
enter
push
cmp
movsb
mov
push
pop
je
or
push
pusha
add
sub
adc
rorl
leave
scas
pop
scas
mov
adc
push
cmp
adc
in
jecxz
andb
and
sahf
stos
sbb
cs
mov
addb
mov
and
fs
fdivr
mov
rorb
mov
add
jo
push
imul
jo
jge,pn
dec
out
sub
xchg
adc
in
lods
cmc
jo
arpl
lea
push
aas
mov
out
into
mov
lock
and
subl
cmp
push
cwtl
mov
icebp
and
jae
aas
lds
int
xchg
mov
rclb
fcmovbe
jo
cli
out
fst
pushf
jecxz
push
in
dec
jo
mov
add
aad
jp
scas
repnz
ret
pop
mov
lock
and
and
jo
ret
and
lock
pop
imul
enter
out
fidivs
icebp
mov
inc
mov
dec
cmpsl
add
lock
sbb
jo
es
int3
cli
mov
add
push
adc
pop
sub
jo
xor
inc
dec
aad
scas
xlat
cwtl
das
jno
mov
in
lock
into
inc
notb
jo
cmp
call
inc
jo
outsl
scas
xchg
imul
imul
dec
push
out
fnstenv
xchg
hlt
pop
mov
mov
mov
xor
mov
jo
rorl
call
fucom
dec
fwait
mulb
in
test
hlt
xor
outsb
pop
xchg
daa
jle
fs
xlat
jle
movsb
pop
inc
xchg
mov
ret
ss
stos
mov
int3
test
and
mov
xor
mov
push
sub
cwtl
cmc
inc
popf
mov
mov
shl
jno
mov
mov
inc
or
jo
sub
sbb
jo
xchg
jl
or
pop
xchg
jo
xor
sub
push
fninit
mov
jno
mov
mov
es
inc
cld
jo
pusha
pop
cmp
mov
test
pop
inc
jle
jo
das
ds
jo
les
lea
pop
bound
xor
jo
imul
xor
jb
dec
pop
mov
ja
mov
add
or
ja
sub
icebp
and
push
pop
jo
mov
jo
rcll
and
mov
xor
sub
data16
jbe
lds
sub
mov
adc
and
xchg
jo
push
mov
addl
mov
jo
jg
pop
mov
fxtract
jo
in
sahf
push
fistpl
sbb
jo
mov
cltd
iret
xor
fdivl
shlb
inc
xchg
scas
dec
aam
les
mov
sbbb
jae
or
mov
mov
subb
outsl
lret
cs
jo
imul
jo
dec
and
pop
pop
int3
mov
mov
adc
jl
push
fs
fisttps
pop
xor
cli
mov
loop
icebp
aad
mov
lret
add
das
jo
xchg
mov
in
hlt
jmp
movsl
divl
add
push
jne
test
insl
sbb
push
arpl
or
inc
push
lods
jo
es
imul
adc
mov
sub
in
mov
push
cmpsl
inc
pop
jnp
mov
addb
mov
jo
and
xchg
xchg
sahf
in
cwtl
test
imul
adc
jl
movsl
dec
outsb
pop
andb
movsl
adc
jnp
jmp
imul
fildll
push
push
and
adc
mov
daa
ds
inc
inc
xchg
insl
popa
cmp
mov
mov
jae
loopne
and
mov
and
push
pop
movsl
xor
jo,pt
icebp
daa
imul
xchg
mov
das
dec
cld
jno
push
inc
jo
mov
fsubrs
incl
push
add
xor
mov
mov
shll
dec
dec
in
lods
xorl
sbb
flds
jo
add
inc
mov
in
cmp
pop
jo
icebp
or
sti
xlat
out
jo
xchg
fldt
inc
lahf
mov
outsb
xchg
ficompl
clc
nop
or
test
outsb
and
xchg
jo
sub
nop
arpl
call
stos
jnp
fcmovnu
in
rcr
mov
or
inc
jnp
in
cmc
lock
cmp
stc
pushf
jg
pop
sub
insl
loopne
shrb
push
pusha
nop
mov
jo
enter
pop
mov
jge
push
adc
fld
pop
adc
popa
and
jo
int3
mov
sbb
jae
in
inc
rcll
pop
rol
push
shr
jae
xchg
mov
jg
pop
jo
dec
out
xchg
es
jp
sub
cs
inc
rcrb
dec
ficompl
shr
loope
out
add
mov
hlt
sbb
movsl
mov
leave
mov
xor
jb
lcall
insl
pushf
rcr
and
adc
jo
ja
test
cmp
push
lret
sub
pop
jo
out
dec
jp
cmp
push
pop
aad
sahf
adc
decl
adc
xor
cld
add
outsl
xchg
mov
mov
pusha
aad
jo
jns
mov
or
cwtl
pop
icebp
inc
out
out
insl
push
jno
aam
and
xchg
xchg
sbbb
stos
ror
or
inc
std
pop
push
sub
loopne
mov
stos
call
xchg
mov
mov
ja
iret
push
rolb
adc
pop
insl
mov
mov
cmp
sbb
inc
jns
mov
pop
mov
das
cmpsb
inc
loopne
test
pop
adc
push
vpshufd
push
enter
or
jge
pusha
mov
imul
arpl
lcall
add
lods
jo
mov
std
cmc
cmp
test
jo
loopne
xchg
or
or
pop
insl
test
mov
cmc
add
pop
sti
int3
push
shl
jae
mov
jns
mov
push
jp
jl
xchg
mov
out
add
pusha
loopne
outsl
pop
ja
push
xor
xchg
mov
jne
loop
push
nop
add
and
fadds
into
mov
pop
les
or
and
dec
lock
fidivrs
add
inc
in
add
jmp
jne
out
lds
lret
lods
cmpl
cmp
mov
cltd
or
push
dec
sbb
test
adc
xor
push
enter
adc
xchg
mov
jmp
jo
push
fcomi
test
sub
loope
fwait
shrb
mov
dec
xrelease
mov
lcall
sbb
fstpt
sbb
pop
mov
jo
xchg
lret
fidivs
mov
pop
jbe
fnstenv
cltd
pusha
daa
push
lcall
xchg
add
lods
dec
fidivrs
int
outsb
sub
mov
nop
pop
repnz
test
rclb
xor
dec
sbb
sarb
cwtl
jo
sbb
pop
adc
jge
inc
jo
xchg
mov
insl
dec
push
fsubrl
cmp
cwtl
pushf
jo
mov
bound
lods
shr
cld
mov
shlb
adc
mov
insl
jo
mov
dec
movsb
int3
leave
gs
sbb
or
cmp
jo
lods
jmp
jb
addr16
jo
mov
lea
push
jo
inc
lods
adc
push
aam
pop
out
or
jp
dec
sbb
pop
test
addr16
ja
or
ja
sbbl
std
jo
notb
aas
test
fucomi
xlat
jo
inc
lods
sbb
push
cwtl
pop
mov
inc
xor
jb
pop
pop
fabs
test
jo
into
out
outsl
jo
or
in
jo
jae
push
push
xor
cltd
aad
fdivrl
aas
pop
insl
mov
insb
push
add
insl
cmp
fmul
das
call
outsb
les
andb
jo
mov
cmpsl
addr16
or
sbb
push
lods
sbb
aad
sub
adc
mov
xchg
mov
add
aam
pop
aas
cltd
adc
call
inc
shll
pop
and
das
mov
mov
mov
jo
push
dec
lea
fsubrl
test
test
imul
ficompl
sti
jo
cmp
pop
mov
sbb
pop
fmull
jo
out
cmp
cmpsl
fdivs
pop
fnstcw
jg
xor
adc
and
push
ja
pop
das
fcompl
xchg
jp
add
inc
in
cmp
rcr
jp
fisubrs
pop
or
lock
dec
ds
pop
pop
in
cld
jo
xor
jo
out
cmpl
cli
fisttpl
scas
fs
movsb
push
jns
call
icebp
and
cmc
cmp
movsl
je
daa
ja
mov
xor
jno
jnp
lods
shrb
add
jmp
lods
xchg
mov
fdivl
aad
pop
daa
dec
mov
mov
pop
adc
mov
fistpl
jo
mov
and
adc
rorb
iret
mov
adc
lods
daa
or
sbb
xor
or
mov
leave
sub
dec
imul
sbb
adc
cmp
add
insb
jo
jle
lds
lock
dec
mov
mov
jo
out
shrb
imul
lahf
pop
adcb
je
ret
jo
test
xchg
add
call
dec
xorb
jmp
inc
roll
cmpsl
mov
aad
stos
jo
jae
repnz
pop
data16
jo
push
stos
mov
movsb
aad
mov
xchg
cmpsl
push
pop
adc
imul
push
cmp
repnz
mov
sub
pop
fs
push
or
je
fildll
int
stos
cld
xor
fs
xor
jo
rorl
xorb
inc
loope
xchg
movsb
xchg
fwait
ss
scas
mov
jg
outsl
nop
push
repz
inc
mov
mov
jp
sub
push
ret
xor
mov
imul
roll
adc
popa
jns
mov
push
jo
roll
enter
in
pop
data16
lds
xor
add
jne
ljmp
cmp
pop
cmp
xor
in
mov
in
pop
sbb
dec
or
lds
cmc
jecxz
xchg
jo
roll
xlat
or
out
jo
int
sbb
dec
insb
mov
push
mov
pop
cmp
jo
inc
adc
xchg
jno
sub
push
lock
mov
ret
nop
movl
movsl
pop
xor
mov
mov
imul
jo
cmpb
push
rclb
sti
mov
outsb
sub
and
lods
sub
out
and
jo
cltd
orb
mov
lods
pop
aad
inc
test
fbstp
adc
inc
jo
lea
xlat
call
pop
pop
rolb
inc
sub
cmp
ljmp
loope
push
mov
push
cmp
inc
rcrb
lods
aad
mov
dec
or
mov
insb
stc
mov
test
fidivs
mov
and
and
adc
mov
push
xchg
push
cmp
fucomp
and
push
test
xchg
push
jo
popa
stos
fcoml
mov
cld
jo
or
push
in
cmp
push
mov
xor
data16
cmpsl
mov
shlb
xchg
jo
inc
jg
sub
aad
stos
pop
or
mov
cmp
lahf
cmc
sub
add
ds
ret
dec
xor
mov
scas
icebp
jo
aad
and
inc
jmp
jo
jg
or
shl
aad
aam
pop
jne
add
adc
dec
jnp
faddl
add
mov
mov
jns
outsb
jno
adc
test
dec
outsb
cmp
mov
daa
jo
out
push
fnstenv
xchg
rcl
leave
test
jo
in
in
lea
in
maskmovq
idivl
iret
pop
mov
aad
stos
and
xlat
push
xor
dec
int
lock
and
sar
aad
cwtl
inc
jle
adc
pop
cmpsb
popf
divl
push
jge
jo
jne
sbb
push
sub
lock
dec
fadds
mov
add
or
xchg
xor
jmp
xchg
pop
fcmovnb
testb
imul
add
mov
mov
cli
mov
sub
aam
addl
push
pop
cmpsl
xor
daa
arpl
int3
pushl
mov
movlps
scas
adc
push
jp
sbb
cs
test
aas
je
inc
cwtl
sbb
and
shl
mov
mov
jo
mov
jne
jo
dec
aad
jmp
mov
push
jo
pop
or
xor
ror
into
xchg
inc
jg
lcall
inc
pushf
add
out
arpl
outsl
int
mov
mov
enter
loopne
jnp
movsb
jo
in
sahf
mov
cmpsb
jecxz
andb
adc
fdivl
das
mov
jo
push
mov
or
arpl
dec
pop
outsb
xchg
pop
jo
jnp
and
xor
into
fadd
ffreep
aad
aas
jo
call
or
mov
jo
fdivrl
ficomps
push
jo
mov
jo
ss
inc
jmp
push
dec
pop
dec
jae
dec
xchg
frstor
sbb
enter
lcall
jbe
dec
jo
and
int3
cmpsl
jno
or
and
mov
mov
lock
ret
stos
ret
add
jge
not
pop
mov
inc
adc
aad
aaa
jl
into
jo
fnstcw
shrl
or
addr16
push
mov
inc
jo
adc
or
inc
cmp
test
lods
mov
sub
bound
jo
mov
adc
xchg
sbb
fmul
cmp
bound
or
jns
fildl
cmp
mov
lret
lock
or
fdivs
jb
jp
mov
jno
test
sahf
mov
testl
out
push
adc
push
inc
rorb
pop
lock
fdivl
jo
jae
aad
int3
mov
dec
bound
lret
pushf
mov
xor
outsl
outsb
push
dec
daa
xchg
jo
xor
aaa
enter
sbb
or
xchg
xor
and
or
jo
inc
jmp
nop
add
mov
in
fs
jns
jo
push
fidivrs
xor
jo
inc
cmpsl
mov
loop
xor
mov
or
and
inc
sbb
insl
cs
lock
jnp
xlat
int3
jo,pn
mov
push
jo
insb
or
adc
add
or
jo
jmp
jne
insl
inc
inc
leave
jb
fs
dec
decl
sar
or
pop
cs
mov
test
scas
into
xchg
mov
insl
push
mov
ret
pop
jo
sbb
sbb
mov
bound
mulb
dec
jo
aad
ret
pop
or
fs
cmp
jnp
test
push
dec
imull
stc
lock
mov
out
in
test
adc
inc
add
or
popf
jno
adc
loope
shll
jo
cmc
pop
mov
jo
sbb
dec
xchg
out
shlb
movsb
outsb
sbb
cli
push
rorl
cmpsb
add
fldcw
imul
pop
fwait
lea
stos
ljmp
cmp
xor
jo
cli
adc
ret
jo
inc
mov
xlat
jo
xchg
add
fxtract
push
imul
xor
jae
clc
aad
mov
jl
jno
ret
lret
fnstsw
sub
cmpsb
shl
or
ret
add
gs
push
mov
jo
aad
jae
push
push
add
xchg
pop
jo
jle
and
jo
sub
mov
jo
xchg
fstpl
outsb
cmpsb
jo
ljmp
dec
loop
pop
mov
pop
inc
repnz
test
pop
sbb
jae
aas
push
sti
rclb
add
stos
cmp
jge
mov
lods
cmpb
fwait
xor
and
jge
jo
pop
mov
and
dec
pop
jae
mov
je
js
cmpsb
jo
inc
xor
arpl
mov
jo
adc
xor
mov
idivl
jo
gs
adc
mov
add
jle
repz
insl
push
add
jb
in
xor
decl
inc
adc
rcrb
jo
div
movsb
cmpsb
mov
push
push
jo
fsubs
xchg
xchg
xor
rcl
fwait
aad
xor
push
mov
jbe
mov
call
inc
imul
shlb
xor
mov
dec
in
fs
fwait
ljmp
es
shlb
cmpl
pop
and
mov
test
jo
add
pop
add
jp
adc
push
or
cld
aam
mov
push
mov
jmp
lret
jae
movsl
cmpsl
push
dec
add
insb
cs
sar
pop
jo
outsb
sub
pop
xor
push
fsubrs
mov
lcall
add
dec
pop
or
aas
jo
xor
sti
nop
push
je
scas
cli
mov
in
jle
cmpsb
jo
inc
pop
insb
lea
mov
imul
xorb
sub
pop
data16
jbe
imul
fld
xor
inc
mov
pop
test
pushl
cmp
add
rorb
mov
movsb
pop
push
mov
ss
push
jo
in
out
rorl
pushf
mov
je
xchg
rcrb
mov
fstps
shrb
enter
shll
roll
cmp
dec
mov
cltd
ja
loop
std
fwait
jo
jae
and
lods
aad
cli
jo
popa
push
int
push
jle
jmp
mov
adc
ret
mov
pop
mov
inc
fmull
into
mov
ret
push
mov
fdivrs
je
xor
push
and
in
cltd
aas
shlb
jo
cmc
inc
out
loope
insb
shr
fnstenv
dec
cs
popa
jo
fisubrl
adc
gs
jo
inc
imul
push
dec
pusha
jo
pop
lret
pop
or
fldcw
dec
xchg
fcomip
fimuls
out
mov
in
jo
hlt
ret
popf
addr16
jnp
cmp
adc
sbb
pusha
fstps
sbb
add
dec
jae
test
mov
aas
mov
and
and
repz
jo
push
push
and
sbb
sub
mov
aas
jge
push
gs
xor
cmpsb
inc
ljmp
test
pop
pop
sbb
add
fisttpl
inc
add
jo
mov
lock
pushf
inc
int3
sti
lock
negl
gs
pop
call
xchg
mov
dec
int3
cmpb
jl
push
push
push
or
sar
cmp
aam
icebp
sahf
jae
enter
jbe
shll
jp
fdivr
int
push
or
popf
aad
fwait
mov
cmovs
cmp
cmp
outsb
lods
mov
mov
mov
imul
pop
and
dec
and
mov
insl
iret
shrl
rorb
int
jp
aad
jp
nop
and
mov
sbb
or
dec
aaa
xchg
or
adc
test
jnp
ret
insl
in
ss
dec
jo
ffreep
cwtl
daa
lcall
es
inc
lock
lret
arpl
cld
jo
push
pop
jmp
in
clc
sbb
stos
js
insb
jnp
push
sarb
mov
jle
insl
inc
sub
das
mov
jnp
stos
rcll
incl
mov
or
test
cld
add
cmp
jo
cmp
lret
mov
mov
add
dec
xlat
pushf
div
test
nop
jae
push
and
xchg
jb
rclb
mov
out
fwait
jo
inc
andl
sarb
call
fcoml
jo
aad
lods
imul
pop
lock
cltd
rorl
add
cmpsl
in
in
imul
push
mov
jge
popa
jno,pt
in
hlt
cmc
ret
mull
pop
or
lock
mov
jo
and
data16
inc
lods
jo
test
sub
lret
xor
divl
mov
or
inc
cwtl
jecxz
adc
lahf
xchg
in
mov
hlt
test
dec
pop
push
jbe
nop
daa
mov
xlat
fildll
xor
subl
loop
xchg
out
xchg
pusha
xchg
je
mov
addr16
jmp
enter
pop
jecxz
or
lods
and
dec
jno
push
out
pop
out
or
adc
loop
jae
xorl
jmp
jo
mov
js
mov
popa
add
inc
sbb
aad
pop
mov
pop
mov
out
mov
pusha
imul
xor
subb
xor
cs
adc
arpl
push
inc
ss
pop
jo
fcomps
bound
add
and
jo
fidivs
mov
dec
jo
mov
popf
test
sub
pop
leave
mov
cmc
loopne
sub
or
jo
cs
int3
adc
addb
sbb
lods
jo
dec
push
frstor
push
jb
movsl
pop
out
lods
adcl
mov
lds
sub
or
ja
lods
cmp
push
jo
push
imul
mov
jle
mov
push
jo
xlat
lcall
insb
jo
in
sub
dec
mov
sbb
jge
mov
push
inc
xchg
xor
jnp
out
movsb
jo
add
call
jns
das
insb
inc
dec
xchg
jo
or
cmp
divb
out
cmp
and
mov
xor
mov
in
cmp
jo
or
mov
data16
jmp
push
push
pop
pop
aad
add
les
dec
sti
jp
in
sbb
loopne
jo
sbb
push
xchg
jo
stos
or
inc
jo
out
aad
push
ret
xchg
jo
adc
dec
into
jecxz
shll
insl
inc
add
push
push
es
jo
push
sarb
inc
repnz
adcb
jne
inc
setae
lahf
hlt
xor
rcrl
add
mov
jae
outsb
jo
jne
test
dec
adc
cmpsb
stos
mov
mov
jo
lret
dec
and
insl
sbb
and
push
mov
jae
loope
xchg
inc
mov
call
test
dec
gs
cli
ljmp
jle
fcoml
in
xor
jg
push
cmp
call
mov
mov
ljmp
inc
dec
je
jo
shrb
jo
pushl
mov
push
loopne
mov
dec
testb
fs
es
divl
mov
xor
sbb
jo
popa
pop
jb
xchg
arpl
jo
jmp
int3
dec
cmpsl
add
jo
outsl
aad
lods
lcall
xor
subb
test
insl
pop
or
mov
cmpb
cwtl
les
jno
sub
dec
jo
cmp
loope
insl
test
lcall
jle
jo
ss
cmp
mov
scas
xor
push
test
push
rclb
cmp
incb
sbb
and
xchg
les
pushf
das
movzbl
mov
gs
jl
xor
dec
mov
and
inc
push
data16
inc
push
mov
call
mov
sub
cmp
imul
or
ret
nop
push
pop
cli
mov
fimuls
xor
push
push
jno
push
adc
lahf
xchg
mov
outsb
dec
jo
cmp
in
jle
dec
jo
cmp
iret
test
fbld
mov
xor
out
cmpsb
xchg
ss
jp
in
lods
daa
fldcw
shrb
jo
shll
pop
jns
jo
xchg
popa
pusha
aad
aas
pushl
imul
movsb
jo
and
jns
sub
jle
mov
dec
in
fcmovbe
jo
cmp
mov
in
jo,pn
in
mov
dec
inc
push
mov
iret
fdivl
bound
pop
sbb
mov
jo
icebp
in
ficomps
fistl
movsl
mov
arpl
mov
jo
cmp
sbb
jo
jp
pushf
and
cvtdq2ps
repnz
adc
shlb
popf
xchg
mov
push
jns
mov
rclb
shrl
add
push
jo
push
fidivl
aad
insl
arpl
leave
sbb
rorb
addr16
and
inc
pushl
inc
insb
dec
iret
into
mov
jp
scas
sbb
sub
push
aas
jo
mov
pop
xchg
jo
ljmp
jo
mov
pop
cmpsl
jo
jg
xchg
inc
sub
push
jo
shl
add
mov
arpl
aad
insl
and
fs
lods
push
push
or
mov
je
mov
inc
call
popa
mov
jo
pop
add
add
mov
add
or
dec
add
out
in
ret
jl
insl
mov
jle
out
jbe
movsb
out
and
fwait
mov
scas
sub
enter
mov
jbe
push
sarl
out
daa
push
sbb
cmp
dec
inc
out
lock
dec
std
xchg
xchg
mov
enter
sub
or
leave
jne
jo
push
inc
mov
out
popf
ja
mov
add
rclb
and
fdivp
mov
mov
jle
xorb
mov
mov
icebp
out
test
outsb
loopne
adc
xor
fiaddl
in
adc
movsl
sbb
fistpl
mov
adcl
xchg
dec
lock
fs
mov
cld
addr16
insb
jge
andb
in
xor
stc
lret
push
sbb
aas
or
fldenv
jnp
das
jo
ds
sti
and
dec
jo
fstpt
loop
add
les
insl
lahf
pop
out
push
out
jno
and
jo
lret
incl
stos
sbb
sbb
outsb
pop
cmp
pusha
popa
out
adc
cmp
mov
in
lea
cltd
jae
or
movsl
xchg
lods
dec
push
cmpsb
jo
push
jp
mov
adc
xor
loope
sbb
jno
inc
jns
mov
cmc
mov
faddl
sub
mov
ficomps
in
dec
loopne
pop
imulb
pushf
and
mov
add
inc
out
aaa
aas
cmp
push
cmp
mov
sbb
mov
sti
sub
pop
mov
push
push
fnstenv
test
sahf
cwtl
push
pushf
in
xorl
jo
fnstsw
jne
mov
leave
and
sbbl
cmp
dec
push
mov
aad
mov
outsl
pop
adc
jge
out
gs
outsb
sub
cltd
pop
add
cmp
pop
sub
and
lea
stc
jo
aad
int3
enter
jb
jbe
roll
pop
or
mov
jmp
jb
xor
lret
jge
push
push
add
pop
push
lods
mov
mov
into
mov
mov
inc
dec
inc
pop
ret
sub
mov
iret
xorb
rol
cmpsl
fstps
jo
out
sbb
fisttpl
inc
mov
mov
jno
jecxz
push
sbb
shr
adc
inc
mov
and
fsubl
ljmp
lret
mov
inc
popa
jo
int
mov
push
lods
jmp
sub
lock
into
mov
fcoml
test
sub
jg
dec
dec
mov
pop
pop
sahf
jbe
jo
mov
cli
push
rcll
jl
jnp
and
and
repnz
leave
pop
cmpsb
inc
add
mov
popl
add
daa
mov
nop
pop
dec
movsl
fdivl
popf
and
fildll
xchg
call
jge
aaa
mov
pop
in
jbe
mov
xor
test
sbb
movsl
xor
jp
adc
insl
pop
adc
lret
dec
rorb
orb
dec
or
lock
add
push
mov
cmc
mov
lea
outsb
subb
jle
bound
enter
and
sbb
fxch
xor
jo
dec
fwait
xchg
sub
jo
ret
push
pop
sbb
pop
ljmp
pusha
push
dec
and
cmp
pop
fisttpl
shlb
mov
sbb
push
and
pop
dec
testb
negl
loopne
jmp
sbb
fisttpl
xor
test
imul
jp
outsb
adc
shl
fisubl
mov
xor
xchg
jb
mov
test
inc
sub
sbb
mov
mov
xchg
sbb
ret
divb
neg
inc
mov
and
jo
mov
iret
imul
clc
mov
je
mov
adc
jo
xchg
int
shr
adc
cld
ss
into
xchg
pop
pop
sbb
divl
test
cmp
andl
insb
dec
and
push
jo
ret
jbe
push
rclb
cmp
and
insb
daa
dec
cld
pop
rcl
popa
jo
push
mov
je
pop
adcb
ret
dec
push
mov
pushf
aad
insl
inc
adc
pop
xchg
dec
insl
data16
lcall
jo
loope
dec
cwtl
xchg
gs
imul
movsl
jo
inc
pop
mov
lock
push
int
pop
jo
call
jo
cmc
out
std
insb
stos
in
mov
push
push
jo
push
or
es
addr16
out
lret
mov
cld
dec
adc
push
xchg
sbb
pop
iret
xor
bound
inc
rcr
lods
lcall
lock
shrb
cmp
push
sbb
sub
mov
inc
inc
cltd
loope,pt
aaa
pop
icebp
clc
jns
push
push
mov
sbb
xorb
inc
mov
lock
aad
cmp
jo
aaa
fistpll
into
data16
ljmp
call
mov
push
mov
mov
fmull
pop
inc
in
jo
movsl
and
fidivl
dec
ljmp
das
cmpsb
push
imul
xor
cmp
dec
sbb
lock
mov
pushf
add
dec
jne
mov
je
or
lea
inc
cli
mov
mov
fdivrp
and
aad
fisttps
vpsrld
scas
orb
add
jo
mov
or
sub
jmp
jecxz
mov
mov
aaa
movsl
in
inc
mov
or
int
shl
sahf
cmp
out
shlb
dec
ljmp
dec
jb
mov
out
push
xchg
add
enter
xor
popf
lods
in
jo
in
out
mov
pop
sbbl
jno
push
stos
sub
lock
or
mov
les
add
cld
lcall
inc
jo
sbb
xchg
bound
jnp
inc
inc
pop
or
jo
pand
lock
andl
xchg
nop
subl
fbstp
and
jae
jne
mov
cld
out
jo
xchg
cwtl
dec
call
inc
or
fcoml
stos
lret
dec
xorb
jmp
mov
mov
inc
lea
lcall
pop
in
jo
ficoms
shl
and
mov
mov
jo
out
ja
mov
adc
je
mov
and
lock
or
cmpb
lods
fwait
cmp
jo
ret
adc
into
in
sub
arpl
mov
mov
jo
jns
in
dec
vpshuflw
mov
jo
aad
inc
stos
cltd
or
arpl
pushl
in
or
xor
mov
pusha
jne
jecxz
mov
fwait
jbe
fnstcw
insl
push
arpl
pop
mov
pop
ss
repnz
add
sbb
ljmp
jo
jecxz
sub
aad
jo
ficoml
outsb
adc
nop
push
mov
xchg
or
cmp
call
cmpb
xchg
and
decb
fldenv
mov
xor
stos
sbb
bound
xchg
sarb
arpl
xchg
jle
jo
sti
sub
test
cltd
rorb
mov
add
in
push
icebp
into
test
js
test
mov
std
jns
push
jo
sub
out
fs
out
push
jge
hlt
push
je
mov
xlat
jo
sub
int
lods
pop
test
loope
aad
ja
add
cmp
mov
add
imul
xchg
and
xlat
jo
ret
xor
xor
mov
inc
aam
push
mov
aas
cmp
inc
daa
lret
push
xchg
cs
jo
adc
mov
insl
push
xchg
xor
push
movsb
les
add
sar
stos
push
imul
inc
or
popa
fisubrs
dec
jle
adc
adc
and
aam
je
lods
hlt
imulb
pop
mov
jo
fistpl
dec
leave
sub
jo
loope
lods
xchg
aam
and
and
int
ror
xor
int3
scas
aam
inc
jbe
jae
xchg
xchg
cli
std
push
loopne
test
lock
xchg
shlb
cwtl
dec
fwait
div
gs
xor
dec
mov
xchg
pushf
add
test
xor
push
sar
movsl
cmp
fldcw
cmp
in
jl
cmp
jo
adc
cmp
jo
xchg
aam
jge
aas
xor
fistpl
add
cs
push
jle
loope
add
dec
mov
fdivl
sub
xchg
xor
insb
dec
mov
jbe
cmpsb
mov
js
sbb
and
lock
pop
xchg
dec
cmp
jle
fbstp
pop
cs
sub
ja
clc
lock
in
sbb
xchg
jo
jg
loope
cmp
nop
rorb
jle
xor
add
out
sbb
push
cmp
jp
adc
mov
je
lea
jo
test
mov
jo
mov
jg
add
es
cli
jmp
pop
pop
lock
fisubl
xor
insb
sbb
mov
xchg
or
repnz
cmp
jp
xchg
fcoml
inc
cmp
js
mov
rcrb
rorl
es
jo
sbb
jo
xchg
ljmp
push
dec
cmp
fsubrp
es
mov
cmp
les
fcoml
xchg
addr16
jo
jecxz
cmpsb
pop
push
adc
push
sbb
lods
inc
jo
cmp
and
jae
loopne
outsb
out
add
les
pop
jo
mov
fimuls
aas
jg
lock
xchg
push
lea
pop
inc
subl
out
push
lahf
insl
mov
add
sub
cmp
xchg
cmpsl
sub
pop
movsb
ja
cwtl
shrl
jl
popa
jo
cltd
cld
push
data16
inc
pop
sbb
mov
lods
add
cmpsb
jl
push
test
out
jo
rcrb
add
cli
fisubrs
sub
test
adc
mov
sub
inc
daa
jo
sub
cwtl
inc
or
out
pop
aad
xchg
das
mov
lcall
push
inc
hlt
ret
adc
mov
cmpsb
or
loopne
cmp
xchg
call
mov
pop
or
mov
sub
mov
ja
add
aad
stc
iret
cs
repz
or
push
bound
aam
pop
insl
fisttps
jb
dec
pop
lock
clc
sti
add
enter
dec
mov
inc
ret
into
lea
imul
xchg
jo
test
sbb
sub
add
icebp
rolb
outsb
xor
sbb
sbb
lds
mov
or
mov
sub
xor
outsb
cltd
fsub
add
cmc
xor
nop
cs
fwait
jo
dec
mov
pop
adcb
loopne
jo
sqrtps
push
jno
inc
jle
insl
mov
ljmp
xorl
popf
or
jno
stc
and
testb
inc
cli
jo
mov
dec
sub
loopne
jo
inc
into
and
or
cmp
dec
fnstenv
and
jl
enter
icebp
sbb
dec
pop
or
and
test
repnz
jo
cmpsb
add
ljmp
xor
push
pop
or
ret
lahf
jae
xchg
dec
or
daa
jo
mov
andb
mov
jo
push
mov
sbb
xchg
push
mov
jo
pop
loopnew
jbe
shll
mov
in
cmc
dec
and
jo
smsw
push
cs
xor
pop
lods
jl
jbe
addr16
insl
jae
xor
add
sub
repnz
jae
sub
scas
mov
cmp
dec
out
lock
mov
roll
fucomip
cmpsl
sahf
clc
leave
jle
jo
nop
jmp
imul
xor
dec
jo
pop
and
jo
mov
imul
xlat
pop
aam
add
lock
pusha
sbb
sbb
loope
inc
hlt
sahf
fmull
xchg
subb
mov
pop
push
jg
lods
jne
hlt
jmp
inc
fnsave
inc
negb
sub
jo
fwait
jp
ljmp
subb
insb
cmp
fcmovu
mov
mov
xor
std
clc
pop
xchg
int
fcomi
mov
sti
insb
out
addr16
sbb
aam
jne
cmp
inc
pop
sbb
fwait
xor
and
push
lds
jno
jp
lahf
data16
or
loop
xor
adc
or
adcl
dec
jo
jns
dec
jnp
push
cmpsl
jo
arpl
add
imul
jo
pop
xchg
pusha
enter
insl
in
jb
jge
out
jp
xchg
adc
je
mov
jb
lock
dec
mov
out
sbb
les
xor
stos
lock
lea
jo
xchg
cmp
jo
subb
sbb
jo
mov
iretw
jo
outsl
int
lods
xor
sbb
xchg
lret
jo
mov
daa
leave
xor
adc
jle
sub
push
xchg
in
arpl
jo
cmp
je
push
xchg
mov
jae
shl
push
jo
mov
cmp
jo
fdivr
xchg
push
pop
cmpsl
es
setg
mov
adc
ret
insl
jmp
xchg
fs
mov
rcrb
je
mov
fnstenv
add
lods
mov
arpl
les
std
dec
jae
aad
out
push
addr16
add
test
pop
mov
loop
jle
insl
pusha
loope
movsb
cwtl
das
bound
dec
jp
adc
xchg
divb
push
dec
movb
outsb
stos
add
push
sbb
jnp
out
cwtl
cmpsl
jo
adc
or
jbe
clc
mov
or
jo
push
push
jb
xor
fidivs
shll
das
fsubrl
stos
iret
pop
aad
lcall
outsb
addr16
in
or
inc
arpl
xchg
lods
adc
cmp
xchg
mov
jo
scas
adc
mov
orb
sbb
lcall
test
dec
fadd
out
cmp
mov
dec
out
adcb
add
mov
ficoml
jle
jo
adc
lods
xor
add
mov
xchg
loopne
insl
pop
mov
push
jmp
mov
mov
lock
scas
loop
adc
sti
jae
jmp
or
jo
inc
fidivl
jno
in
adc
mov
and
inc
imul
dec
push
xchg
in
jo
mov
popf
scas
int3
mov
loope
addb
cmc
add
fldcw
xor
call
cmp
test
adc
jo
dec
inc
jns
repnz
add
mov
mov
fwait
xchg
push
ljmp
pusha
clc
int
mov
popa
ja
movsb
hlt
xchg
test
daa
jo
inc
les
jo
cmp
rcll
test
jo
dec
inc
aad
xor
outsb
dec
shrb
cmpsl
sarl
jo
cmp
adcb
or
aad
icebp
stos
sbb
pop
inc
push
pop
mov
jl
pop
in
loopne
push
xchg
mov
es
cmp
inc
sbb
mov
jo
aaa
jmp
or
mov
pop
sub
outsb
cmp
dec
push
scas
not
imul
bound
sbb
xchg
cmp
call
mov
or
int
pop
jb
jo
dec
xchg
push
xlat
sbb
jo
aad
push
enter
cltd
shl
pop
in
nop
or
sub
inc
sub
rcrb
jp
outsb
push
clc
in
push
nop
data16
jo
pop
das
movsb
lret
xchg
jb
jo
out
shll
push
shlb
add
cmc
shrb
and
int
outsb
mov
pop
jo
jb
pop
cmp
sbb
ljmp
je
std
adc
leave
mov
jo
xchg
xchg
mov
and
out
and
subb
dec
cmp
scas
mov
push
add
imul
pop
xchg
jo
loopne
cmp
or
les
aaa
test
mov
cmc
xorl
loopne
mov
movsb
pop
ror
push
jo
jbe
cmc
mov
rclb
out
inc
pop
pop
data16
sub
cwtl
mov
mov
insl
xchg
xchg
pop
lcall
test
movsl
cmpsb
jo
add
jns
insl
mov
xlat
sarl
mov
out
jo,pt
cld
mov
aas
movsl
hlt
or
dec
xor
loope
addr16
jo
sbb
test
nop
jne
setle
cli
cld
mov
sbb
mov
nop
dec
loope
jo
inc
ja
mov
mov
push
mov
mov
aad
stc
xchg
mov
lock
add
jae
fisttps
ficoms
test
call
pop
push
scas
xchg
pop
arpl
call
pop
pop
mov
jo
out
loope
push
nop
jo
cmp
bound
ljmp
pop
insb
jo
sub
test
jo
cmp
or
aam
adc
insl
lret
loopne
aas
addl
push
ss
inc
or
xchg
mov
jo
aam
daa
mov
push
popa
jo
aaa
fwait
insb
mov
jb
adc
sbb
daa
cs
je
xor
aad
lock
push
push
ja
popa
dec
fs
lock
stos
inc
cmp
add
js
fdivrs
lcall
sbb
dec
std
cmp
mov
popa
push
dec
or
xchg
jmp
mov
loope
push
mov
inc
push
jo
fcmovne
cmp
scas
jo
std
inc
mov
xor
fdivl
jp
fisubs
lcall
cmpb
loop
inc
mov
scas
mov
jo
push
mov
repnz
lahf
roll
pop
movsb
adc
fcomps
mov
bound
sub
and
movsb
enter
fs
test
xchg
fidivs
jo
xor
xchg
and
jo
lcall
stc
and
test
cmc
jmp
jecxz
mov
loopne
pop
es
ret
rcrb
inc
movsb
sub
pop
jo
xor
xchg
movsl
xorl
ficoml
jo
sub
sbb
sbb
jmp
pop
push
cmc
call
jo
cmp
out
and
scas
ja
pushf
inc
and
push
jo
mov
push
jnp
sti
push
xchg
xor
cli
and
inc
jno
insb
test
popa
aas
dec
bound
or
jo
das
stc
add
jo
leave
mov
fisttpl
insl
rcrb
inc
cmp
sbb
sbb
xlat
jo
mov
lods
pushf
rcrl
ja
sbb
aam
mov
cmp
insl
mov
fildl
das
daa
jo
xor
jmp
mov
push
test
mov
cmp
cmp
int3
mov
mov
in
insl
xlat
push
mov
aas
notl
mov
call
dec
add
sbb
mov
shrb
lock
xchg
add
jo
mov
lds
jns
jle
out
sub
fucomi
icebp
dec
gs
insl
and
jb
lods
repz
dec
jns
add
push
mov
inc
data16
jp
pop
out
cs
adc
cmp
in
jnp
sub
mov
jo
and
ja
inc
aad
jp
nop
mov
lock
ds
mov
or
iret
pop
dec
lock
les
mov
mov
stos
andl
xorb
lds
cli
jo
insl
cmpsb
sbb
jp
fisttpl
jp
push
int
jmp
stos
insl
lret
cld
sbb
jo
in
fidivs
pop
sbb
iret
jae
and
popa
lock
outsl
jo
mov
sbb
jno
pop
imul
fdivrs
loope
mov
aas
xlat
and
aad
mov
dec
cwtl
out
aas
jb
orb
popa
movsb
enter
ja
dec
or
mov
cmc
mov
jo
mov
das
sahf
jp
sub
mov
dec
mov
jnp
mov
mov
xor
aad
inc
sub
mov
lods
outsb
out
add
push
aad
mov
stos
adc
xchg
cli
jo
test
popa
xchg
addr16
jo
push
or
sbb
fucomip
fsubr
mov
inc
int3
inc
inc
aam
lea
xor
adcb
cmp
aaa
fildl
inc
mov
jo
jle
cmp
push
add
jo
rcll
dec
cli
xchg
les
xor
push
orl
jo
or
or
dec
jo
and
inc
outsb
or
aam
or
cmc
insl
and
inc
or
daa
mov
jne
mov
sbb
mov
ret
push
sbb
in
sub
xchg
ja
mov
xchg
idivl
mov
fwait
add
xor
inc
hlt
repz
jnp
out
sub
mov
out
mov
pop
fdivl
push
adc
das
jne
lock
jo
repz
stc
outsb
pop
pop
sub
and
nop
push
incl
jo
xchg
or
push
arpl
cli
pusha
cld
ret
je
fcoml
iret
mov
dec
dec
cmp
sub
gs
sbb
adc
mov
rorl
fs
mov
adc
sub
lock
cmp
xchg
jb
jo
insl
mov
xlat
jo
cs
xor
pop
addr16
adc
push
mov
loopne
mov
jo
adc
mov
mov
jo
dec
jmp
shr
fdivl
mov
pop
add
aad
outsb
icebp
stc
das
clc
mov
adc
std
loopne
add
ret
mov
mov
in
outsb
fcoms
mov
cltd
pop
xchg
pop
and
xorb
xor
jecxz
jo
test
cmp
cli
mov
inc
cmc
sub
repz
notb
dec
adc
jo
sbb
adc
insl
test
fldenv
pop
repnz
fsubl
xchg
loop
pop
inc
jo
aaa
enter
sbb
ja
sub
sarl
scas
xchg
emms
pop
mov
cmp
jmp
pop
mov
ror
mov
imul
mov
rcl
int3
push
enter
gs
cmp
jo
cmpb
jne
push
fs
mov
aad
pop
popf
adcb
sub
jae
jns
push
add
mov
jae
jmp
test
pop
inc
inc
pshufw
in
data16
mov
movsl
es
mov
jo
xchg
mov
inc
adc
jne
fs
jge
lret
and
jo
sbb
pop
add
in
insl
xchg
or
popa
jecxz
mov
fdivr
lods
outsl
mov
mov
call
arpl
aas
out
cmpsl
cmpb
mov
xor
ds
jge
data16
jle
mov
int3
inc
dec
lods
dec
push
enter
push
xchg
bound
jo
pop
lea
and
xchg
jo
fcoml
push
push
fldcw
lcall
adc
popa
negb
test
pshufw
in
pop
or
jp
aam
dec
push
xchg
adc
jge
fs
aam
dec
jo
mov
lods
pop
sti
mov
sub
mov
insl
add
mov
push
test
jo
aad
das
mov
mov
test
lock
push
insl
inc
and
inc
xlat
call
jo
lret
flds
fidivl
pop
cmp
inc
sbb
shll
mov
test
test
js
fldt
xor
filds
ja
push
cltd
inc
pop
jo
nop
pop
outsb
mov
push
xor
push
jo
pop
adc
sub
lret
fsts
pop
xlat
stos
aad
movsl
xchg
mov
mov
out
jo
pop
dec
ret
lods
in
pop
jbe
lock
in
jo
adc
jo
sub
ljmp
mov
popf
leave
outsb
fdivl
push
icebp
mov
sbb
sbb
loopne
sti
xchg
or
cmc
roll
insl
les
mov
add
dec
inc
sub
fidivrl
jg
jmp
imul
scas
jo
mov
into
and
lods
orl
shll
sbb
icebp
out
jo
jne
xchg
call
loope
jmp
mov
addr16
js
jg
mov
jno
jae
push
movsb
inc
out
cld
test
mov
xchg
pop
fcmove
jno
jo
cmpsb
xor
jae
sub
xchg
lahf
div
pusha
addl
jno
call
jnp
inc
shrb
cs
je
xor
stos
xchg
in
jo
test
inc
fldcw
sub
pop
pop
scas
aad
xor
xor
sbb
in
or
jo
fincstp
dec
outsl
jo
mov
xor
loopne
nop
mov
jmp
mov
jo
xchg
iret
mov
jo
inc
inc
jmp
jo
sbb
mov
push
xor
and
mov
je
loope
lock
arpl
mov
push
jecxz
ja
out
jmp
mov
mov
cs
pop
jo
stc
stos
cmpsl
es
sub
sahf
adc
jo
enter
pop
jl
jo
add
jg
mov
pushw
addr16
roll
jno
test
xchg
cmp
std
xchg
bound
lahf
lds
adc
jbe
mov
je
or
cmp
jo
push
or
xchg
call
lret
aad
cmpsl
adc
ljmp
das
test
xor
add
jo
cmpsb
loope
adc
fisubrs
aad
in
adc
mov
shrl
jo
das
inc
jl
fisubs
inc
into
push
addr16
jo
test
inc
divl
aad
xchg
arpl
andb
mov
push
ja
lods
gs
adc
mov
int3
or
jo
dec
sahf
orb
mov
jo
enter
fcmovnb
mov
mov
std
mov
xchg
aad
daa
jo
in
xchg
roll
pop
sbb
pop
dec
cwtl
mov
xor
mov
jo
mov
fistpl
jns
idiv
mov
lods
scas
sahf
jo
and
rcrl
xor
adc
fistpl
daa
aad
dec
les
dec
jle
jo
cmc
icebp
xchg
rcl
and
add
mov
inc
add
jle
in
inc
jg
fsubr
jne
xorl
cmpsb
dec
aad
fimuls
jmp
mov
xchg
sbb
mov
incl
popf
xor
in
and
jae
enter
fdiv
fs
adc
aad
push
jo
push
into
fiadds
scas
ret
jo
les
outsb
jo
in
inc
negl
dec
aad
ja
mov
call
mov
inc
add
jo
rcl
inc
inc
daa
sbb
mov
xchg
out
add
lret
mov
push
lods
fcoms
sbb
xchg
xor
xor
enter
test
jle
insl
sub
mov
inc
je
jae
int3
dec
jne
ret
or
cwtl
aam
sbb
std
fnstenv
sbb
in
loop
fsubl
pop
das
sub
jecxz
decb
push
push
inc
and
es
cmpsb
mov
jo
push
lret
icebp
notb
mov
mov
ljmp
in
jo
ret
sbb
aad
jno
insb
mov
sbb
inc
jl
imul
sarl
adc
loopne
inc
jo
cmpl
das
rep
jo
mov
testl
aaa
dec
shrl
mov
pop
push
insl
jnp
addr16
pushf
mov
or
dec
add
lea
jno
insl
cmp
shll
jo
mov
sbb
and
cmp
sub
ja
dec
pop
and
mov
adc
insb
xor
into
jo
xor
or
out
lods
pop
sarb
jecxz
fdivrl
je
jmp
pop
int
jo
and
arpl
pop
out
fs
jge
cltd
xchg
ss
adc
jp
loopne
jmp
test
jo
or
jo
aas
lcall
add
jo
jmp
repnz
in
mov
push
rclb
add
shll
ds
jle
or
inc
pop
and
mov
mov
sub
pop
nop
sbb
mov
mov
shll
outsl
fwait
xchg
mov
mov
aam
jnp
mov
fsubrl
jo
xchg
cld
add
adc
mov
ja
outsb
mov
je
jmp
dec
push
subl
mov
jo
or
pop
dec
sub
addr16
shrb
push
inc
push
je
into
adc
add
das
insl
pusha
push
jp
stos
push
ret
xchg
iret
jbe
sti
inc
test
shl
shr
mov
xchg
xchg
test
jo
mov
fisttpll
inc
into
xor
das
mov
pop
pop
cmp
jne
jo
pop
mov
jmp
jecxz
lods
jbe
and
push
cld
pop
shrb
fldt
aas
cltd
pop
in
jmp
dec
jl
in
shll
inc
cwtl
mov
lahf
dec
sub
pushf
xchg
jnp
aad
jns
ss
shll
insl
pop
fsts
jo
lret
mov
stos
dec
ljmp
push
ret
fwait
cld
int3
jns
icebp
andb
cwtl
jo
outsb
and
jo
scas
stc
dec
mov
jnp
xchg
aad
lea
fnsave
insl
push
add
jo
divb
movsb
jo
pop
pushf
dec
push
in
jge
scas
faddl
fnstcw
inc
or
sub
jno
sbb
jo
pop
or
dec
fstps
jns
scas
jo
lcall
mov
cwtl
inc
jno
mov
xlat
add
orl
add
pop
xor
push
jne
mov
mov
addb
mov
pop
push
mov
sub
in
cmpsb
xor
cmp
adc
sarl
xchg
in
insb
xchg
xor
ss
mov
sub
jo
cmp
lret
pop
xor
adc
xchg
cmp
xchg
jo
fdivrs
jo
icebp
fld
sub
jo
in
movsl
std
cmp
je
pop
xor
mov
mov
xor
insb
pop
lea
js
lock
xor
arpl
shlb
xchg
insl
dec
rcrb
or
xor
inc
jo
iret
cmp
test
inc
xor
outsb
mov
cmpsb
add
jo
js
iret
cmp
pop
or
cmp
jo
fiaddl
addr16
push
lods
leave
movsl
pop
sbb
mov
subl
jae
jo
imul
xchg
int
xor
add
insl
xor
mov
test
jo
inc
jmp
dec
clc
lods
mov
dec
ret
mov
aad
mov
pop
insl
jae
xor
cmpsb
sbb
lahf
jo
cmp
sahf
lcall
shlb
jo
pop
and
gs
mov
in
pushf
daa
in
inc
jo
lret
mov
mov
inc
scas
roll
or
add
mov
lock
jmp
pop
outsb
cld
adc
mov
push
mov
sub
push
or
test
sub
test
push
aad
insl
test
and
sub
les
jg
mov
add
std
push
jae
or
mov
pop
push
cs
jo
decl
pop
inc
ds
enter
mov
fistpl
mov
enter
icebp
adc
pop
cmp
cmp
cmpsl
jo
lcall
ja
ja
add
lock
jne
cs
mov
pop
test
lods
dec
jo
lcall
jo
repnz
dec
xchg
jo
pop
push
adc
lret
or
jo
add
out
movsb
cwtl
mov
stos
pop
insl
push
test
jl
outsb
andb
gs
and
jae
lcall
mov
fwait
das
jae
mov
or
es
or
andb
mov
mov
fisubl
add
mov
addb
mov
adc
test
or
shll
push
jae
fistpl
cmp
mov
in
pushf
jg
jo
and
insl
inc
jo
mov
cmp
push
and
ret
es
mov
add
xorl
push
out
inc
add
sub
sub
jo
cmp
rcll
mov
cmc
ds
call
gs
dec
mov
das
mov
adc
or
pop
and
mov
sub
sbbb
scas
and
lock
cmp
shll
fldt
leave
inc
jo
cmp
mov
jo
jno,pt
int3
or
push
jmp
leave
jo
push
pushf
and
push
push
nopl
imul
dec
aad
jb
in
push
stos
jecxz
jne
mov
pop
add
push
mov
and
push
jmp
pop
gs
dec
adc
and
jbe
mov
dec
xchg
mov
mov
cmc
test
jo
pop
cmp
adc
iret
sbb
jp
test
pop
mov
mov
test
mov
jo
mov
adc
mov
loope
cmp
dec
cs
fsubp
fmuls
dec
fstl
jmp
sbb
dec
out
fdivs
cmp
mov
sti
iret
xor
mov
es
aad
adc
mov
int3
aas
push
loopne
jo
adc
pop
sbb
and
fwait
lock
pcmpeqd
adc
xchg
cmp
aam
jo
sub
dec
pop
and
shll
adc
mov
out
sahf
push
dec
adc
xor
insl
sti
pop
dec
jle
jo
and
shll
mov
cmp
movsl
mov
push
aad
xor
add
enter
sub
cs
daa
loopne
jmp
js
in
jge
outsb
jp
clc
aad
jo
popa
sbb
shlb
xlat
pop
outsb
xchg
nop
les
jo
mov
inc
cmp
inc
and
xchg
outsl
pop
addb
aad
inc
mov
and
cld
mov
pusha
ficomps
aam
inc
jo
xchg
ret
dec
lods
pop
jo
test
dec
cli
lods
adc
outsb
jmp
push
adc
mov
jge
imul
and
add
movsl
stc
fdiv
jo
mov
idivl
iret
insl
pop
xchg
xchg
data16
out
jno
ja
dec
into
shlb
aas
mov
outsb
es
mov
adc
lock
lcall
lret
lock
fbstp
jmp
pop
add
xor
fdiv
dec
sahf
lret
push
lret
leave
aad
dec
jae
cmp
inc
jecxz
jo
aas
push
iret
idivb
outsl
xor
aad
mov
dec
jo
lea
cmp
popf
pop
sub
push
mov
cld
ja
jo
cli
push
mov
jo
pop
out
pop
inc
xor
stos
jo
fs
push
cmpsb
mov
cmp
inc
mov
scas
jo
push
movsl
pop
popf
mov
shrb
push
lret
out
jo
ja
js
int
imull
adc
mov
leave
sub
sub
icebp
jp
repnz
jo
mov
push
jo
inc
inc
sbb
shl
rclb
imul
lds
mov
mov
inc
jg
xor
fucomi
sub
jo
out
xchg
sahf
jl
cmc
repnz
jo
mov
lea
insl
push
ds
xlat
in
es
mov
push
cltd
nop
pop
aas
sti
inc
jo
xchg
divl
shrl
cli
test
loopne
mov
jo
addl
sahf
jo
mov
aad
movsb
out
jne
mov
call
xor
sbb
lret
add
adc
push
sub
pop
xor
xchg
cld
mov
dec
jo
clc
fsts
nop
dec
pop
add
mov
mov
pop
jo
cmp
xchg
dec
jo
fistpl
mov
gs
enter
xchg
pop
je
inc
push
in
divb
pop
icebp
rcl
jo
xchg
fcomp
subl
inc
movsb
rorb
out
aas
cmp
inc
fcompl
pop
fs
add
arpl
call
push
mov
xchg
jo
adc
dec
dec
pushf
sbb
or
push
xchg
stos
enter
mov
or
jnp
sbb
xchg
push
sbb
lea
bound
lods
sub
les
pop
loopne
and
fdivl
or
aad
rcll
add
inc
push
mov
jo
dec
xchg
loopne
inc
jo
mov
aad
fwait
sahf
out
addr16
std
and
pop
nop
daa
sbb
cmp
cmp
push
mov
fs
movsb
jge
es
lods
pop
pushf
nop
aad
jo
andb
jmp
adc
mov
outsb
ss
mov
and
mov
sbb
lock
cld
xchg
ret
dec
jo
dec
cmp
fbstp
fs
xchg
addb
test
push
icebp
sbb
and
data16
cmpsl
inc
fdiv
sti
adc
jle
aad
jne
mov
pop
pushf
fld
mov
arpl
aad
aaa
inc
rorl
jae
and
jo
test
jge
jo
fadds
mov
lds
xchg
pop
fcoml
cmp
jb
xchg
or
hlt
nop
adc
jo
pushf
xchg
inc
dec
pop
cmc
sbb
and
sub
jo
stc
stos
jno
inc
pop
and
push
pop
adc
push
push
aaa
lea
jo
xlat
jecxz
mov
pop
xchg
dec
loopne
stc
iret
test
pop
inc
arpl
cmpsb
jp
add
pop
mov
sub
mov
jo
push
loope
aad
sbb
add
push
hlt
inc
enter
rcl
inc
pushf
push
mov
jo
or
mov
adc
and
xor
das
fdivs
xchg
xchg
and
lods
push
outsl
aad
dec
xor
mov
nop
jo
pushf
rorl
sbb
js
jo
push
mov
pop
jle
jle
jo
cmp
sar
jecxz
icebp
imul
mov
insw
loope
jo
pop
jnp
jo
daa
ljmp
adc
adc
jo
imul
mov
rcll
jg
fistpl
adc
cwtl
jge
jo
mov
aad
rolb
jo
add
cmpsl
mov
jo
mov
add
jle
jo
sbb
cs
stos
mov
mov
rcl
mov
lods
jo
xor
in
aad
jecxz
les
pushf
dec
fwait
shl
shll
cmp
sar
mov
or
adcb
or
sub
je
inc
iret
jo
cmc
popf
ljmp
and
idiv
aad
jo
insb
mov
cmc
push
mov
pop
ljmp
lock
repnz
mov
jp
in
pop
sbb
in
icebp
mov
addr16
popf
jbe
jo
gs
dec
and
insb
jo
dec
or
dec
adc
aas
insl
icebp
roll
xchg
mov
je
test
jns
lock
cmpsb
inc
cs
sub
jo
adc
fildl
pusha
mov
mov
jo
sbb
je
mov
inc
cmp
mov
cwtl
mov
bound
sub
fistpll
nop
fldt
test
popf
mov
sbb
sbbb
xchg
jo
insl
pop
fisttpll
insb
mov
fwait
mov
mov
jo
sub
push
aaa
in
pusha
jo
push
xor
aad
insl
pop
sub
dec
pop
outsb
add
jno
daa
push
lock
shlb
xor
or
std
push
gs
lcall
fisubrl
fmul
push
shll
adc
jo
cwtl
loope
hlt
stos
jne
jo
xor
cmp
pop
push
loop
pop
faddl
in
mov
ret
xchg
xor
call
ljmp
xor
jae
aad
jno
cmc
push
fistpl
cmc
and
jbe
decb
lods
sarl
jo
xor
or
jo
idivl
call
mov
jno
jo
lds
xlat
push
pop
jo
pop
inc
add
dec
jne
jo
xchg
sub
mov
repz
push
cmpsb
xor
add
scas
rclb
pop
fildl
sbbb
lds
jo
sbb
loope
testl
into
int
dec
xor
dec
mov
es
ss
outsl
addr16
cli
out
inc
sub
imul
shll
enter
or
std
test
negl
pop
inc
xlat
inc
iret
jo
out
scas
sar
notb
jne
jo
ret
dec
aad
mov
cmc
loopne
mov
fimuls
pushf
loopne
mov
xorl
bound
xor
jb
and
movsb
jo
rclb
jo
fnsetpm(287
or
mov
popf
insl
mov
ljmp
and
jo
cmpsl
loop
jecxz
dec
inc
jmp
loope
scas
or
insl
ja
jae
notb
jo
mov
jne
push
cmp
sub
fsubrl
aam
jg
arpl
add
add
es
xor
push
hlt
int3
fnstenv
jmp
insl
sub
adc
jo
xchg
aad
testl
xorl
shlb
ret
ljmp
test
int
aad
insl
fwait
inc
imul
cmp
das
sbb
outsb
mov
sub
shl
pop
dec
mov
test
jb
jno
mov
mov
sti
pushl
push
adc
mov
or
adc
push
xor
rcr
jp
jb
jo
aad
sub
push
jmp
iret
flds
jo
out
fnsave
or
xor
les
dec
xchg
cmp
push
dec
jecxz
fbstp
daa
bswap
add
mov
jnp
xchg
mov
mov
mov
data16
cmp
sahf
ret
addr16
fcmovnbe
insl
addr16
jo
pmulhw
or
jo
js
dec
add
jnp
push
cltd
xor
outsb
and
enter
adc
jo
or
into
jbe
add
dec
jo
cmc
xor
jmp
xchg
inc
pushf
jecxz
jnp
fidivl
push
outsb
xchg
popf
pop
mov
jo
dec
and
rcrl
sub
or
mov
mov
jo
push
out
push
mov
and
lods
xor
xor
adc
arpl
jne
rcr
jo
rcrl
push
popf
fisttpl
cli
push
lret
fsubrs
mov
xor
aad
lea
add
fs
cli
shll
mov
mov
jo
in
sbb
pop
rep
leave
ja
testl
sahf
inc
inc
or
aam
imul
insl
xchg
in
outsb
clc
push
bound
sub
xor
cmp
jmp
into
nop
pop
jo
lcall
jo
push
mov
sbb
insl
add
mov
popa
test
pop
aas
sub
aad
out
pop
xor
adc
jmp
push
jo
inc
pop
xor
lahf
sub
xchg
shlb
icebp
in
adc
and
or
push
xor
out
pop
ss
push
xor
fdiv
bound
adc
adc
divb
xchg
sub
sub
jmp
xchg
adc
outsl
loop
notb
dec
dec
insl
imul
fistpl
mov
js
mov
ss
jo
mov
xlat
push
repz
push
mov
mov
xchg
inc
push
aam
mov
or
int
jo
mov
loope
jo
shll
fwait
push
bound
repnz
jo
jbe
inc
sbb
movsb
mov
addl
jo
gs
inc
jo
lret
aas
fsub
mov
mov
cwtl
cli
xchg
add
loopne
jo
mov
mov
daa
les
iret
jle
mov
fnstcw
push
pop
jns
rcrb
outsl
dec
add
fcompl
les
fildl
sbb
fpatan
popf
dec
cmp
add
pop
jo
fwait
jns
jg
jp
jo
jb
outsb
pop
mov
ja,pn
std
fwait
loope
lods
inc
divl
push
jo
fsubrl
dec
popf
mov
xchg
xchg
push
shrb
test
mov
jo
test
jo
fldcw
cmpsb
jo
pop
jge
movsl
icebp
mov
pop
and
pop
jl
adc
dec
mov
push
sbb
inc
ret
jns
jmp
vpshuflw
leave
mov
xor
and
dec
es
cld
push
rorl
dec
xor
lods
mov
push
fnstcw
adc
or
mov
cmp
sub
aam
pop
mov
adc
imull
sbb
loopne
lds
cltd
pushf
mov
mov
sar
mov
add
push
sub
xor
mov
cmp
xchg
arpl
jle
mov
jo
not
sbb
add
push
jo
mov
pushf
or
out
ljmp
cs
dec
addr16
dec
dec
pop
ficoml
dec
insl
mov
aad
jo
repz
mov
mov
or
outsl
push
jl
jo
test
jo
or
and
dec
pop
jo
jno
aam
jecxz
push
sbbb
cli
pop
fdivl
push
sub
shr
lahf
insl
push
not
bound
jl
jo
mov
movsl
dec
mov
sbb
xchg
push
sub
fbstp
sub
or
and
pop
imul
push
nop
xchg
mov
es
mov
xor
sub
adc
mov
pop
test
jne
xor
push
imul
sub
jae
jbe
fisttps
xchg
insl
adc
adc
xchg
loope
jo
std
jnp
sbbb
jo
lods
imul
aad
dec
jo
ds
or
mov
in
jo
pop
ss
sbb
add
cwtl
jo
adc
je
or
in
jno
or
jo
sbb
fwait
sahf
dec
mov
dec
add
push
outsb
xor
jns
jge
outsl
f2xm1
sbb
inc
jo
mov
inc
pop
das
imul
jecxz
push
lods
push
aad
push
or
mov
inc
lock
jns
jmp
mov
jo
cmp
xchg
cmovo
jo
pop
pop
sti
mov
leave
loopne
outsb
lock
mov
test
in
insl
fstpt
dec
mov
pop
or
arpl
mov
pop
add
jae
cmpsl
scas
pop
xchg
cli
xchg
loopne
fstps
push
jne
jp
mov
lods
repz
cmp
fs
jo
xor
inc
xchg
sub
cmpsb
xor
jo
shrl
mov
jne
and
fiadds
jg
outsb
sbb
jo
mov
in
dec
xchg
aam
or
lds
fdivrp
imul
lock
push
jae
mov
or
jo
aas
xchg
aaa
push
jo
add
xchg
fcoms
mov
push
or
cmp
pop
mov
xorl
xor
addb
jo
pop
inc
cli
sbb
shll
pop
lods
pop
add
or
jo
loope
lods
in
sub
pusha
jo
push
arpl
mov
jo
les
jo
mov
sbb
jns
mov
xchg
hlt
adc
and
jo
pop
stos
cmp
fisttpl
mov
jo
leave
rorb
pop
repz
xor
out
or
stc
add
xor
pop
cmpl
xchg
dec
sarl
pop
push
jno
dec
sub
xchg
inc
cwtl
xor
cmpsl
dec
jle
enter
xor
lea
inc
or
dec
fstl
and
jb
add
and
movsl
lds
add
sti
jo
outsb
fadds
pop
cmp
or
mov
mov
add
pop
loope
or
aad
dec
sbb
clc
push
or
jo
xchg
mov
xorl
out
mov
mov
divb
cwtl
daa
stos
sbb
dec
pop
cmp
aas
dec
ljmp
pop
lock
shl
xchg
dec
xchg
imul
ret
adc
add
or
daa
mov
add
stc
icebp
loopne
nop
sti
popa
pop
mov
insl
mov
dec
jg
xor
inc
inc
jno
rorb
cmp
add
into
rol
lea
jo
or
adc
xchg
xor
icebp
das
sub
dec
push
push
adc
jno
push
sub
addr16
jg
jo
xor
in
fistpl
mov
xlat
xor
jecxz
sahf
pop
lock
fwait
outsl
repnz
push
shll
mul
push
loope
pop
add
sub
jmp
jo
fst
dec
and
adc
jb
icebp
jle
mov
jp
mov
imul
or
call
jo
sub
pop
jnp
jbe
ljmp
jo
mov
aad
jo
and
arpl
inc
or
jo
cmp
sub
mov
fdivrl
jo
sbb
rcll
jo
cmpsw
test
and
jae
cmp
fs
insb
jo
sub
fstps
push
pop
dec
xor
jo
mov
imul
push
add
aad
jl
cltd
dec
mov
out
shlb
shrl
test
xchg
ja
in
xlat
popf
jo
pop
ja
jo
sub
push
cmp
lea
enter
ja
mov
jmp
cmp
in
fcmovnbe
xor
loopne
lea
jo
push
test
lods
pop
cmp
iret
hlt
push
repz
jecxz
jno
push
fwait
cmc
xlat
dec
xchg
jo
adc
mov
aam
jo
js
lea
outsb
mov
mov
popa
mov
or
pop
mov
or
arpl
jo
les
ss
sbb
fwait
imul
jo
adc
aad
lods
je
xchg
xor
sbb
jo
fwait
xchg
dec
sahf
mov
mov
and
push
popa
out
cmpsl
dec
push
jo
mov
repz
or
outsb
stc
loop
and
xchg
xor
add
nop
mov
jnp
and
dec
out
cmc
jae
negb
cmp
pop
jg
out
aas
jnp
loop
mov
cwtl
dec
xchg
xchg
fstpt
dec
pop
or
in
inc
inc
jo
or
xchg
sbb
outsl
cmc
jl
or
adc
jo
mov
iret
or
adc
adc
pushw
jmp
adc
fdivl
push
adc
sbb
out
aad
mov
iret
test
mov
push
imul
pop
adc
popf
push
push
inc
mov
in
rorl
insl
fcmovne
arpl
jl
push
enter
cld
repz
jo
xchg
mov
adc
outsl
hlt
ss
repz
mov
lock
jo
jne
in
mov
jo
nop
out
aaa
mov
push
insl
or
xor
pop
gs
data16
fstps
rcrl
out
dec
and
out
fbstp
push
mov
sti
jb
in
or
rcr
pop
dec
dec
les
int3
das
dec
iret
lock
ffreep
adc
leave
imul
inc
sbb
jae
pushf
jecxz
nop
xchg
mov
cld
outsb
and
or
test
jae
push
inc
sub
inc
pop
jo
loop
fdivr
xor
mov
cmp
add
cmp
push
jo
subl
push
pop
xchg
push
mov
out
xor
int3
mov
in
pop
dec
popa
div
jmp
insb
jbe
pop
lock
das
sub
ja
nop
cmp
pop
adc
mov
testl
pop
push
add
jle
lret
or
mov
rcrl
jl
fs
jae
lds
xchg
aaa
nop
pop
roll
and
lret
mov
arpl
scas
pop
outsb
mov
push
leave
jo
cmp
and
push
test
pop
or
jo
inc
popf
sub
jg
pop
jo
mov
lock
xchg
pop
xchg
push
push
cmp
mul
jo
inc
add
insb
rcrl
pop
pusha
mov
mov
fildl
cmpsl
jo
jle
aad
loopne
bound
or
adc
jo
bnd
pusha
outsb
mov
xchg
pop
stos
stos
movsl
cli
adc
xchg
sti
shll
adc
pop
xchg
pushf
mov
ss
dec
or
xchg
jle
enter
cmpsb
inc
in
jge
arpl
ret
insb
mov
mov
jo
xor
gs
jo
aad
sarl
repnz
add
jge
in
jo
jmp
jb
sti
sub
insl
dec
dec
aad
push
jno
push
je
lods
lock
push
xchg
ja
repnz
jmp
fwait
popa
add
nop
cmpsb
xlat
add
shl
jno
pop
xchg
dec
scas
jo
mov
rcll
pop
cmc
testl
dec
jg
jo
sti
xor
addr16
je
push
dec
sbb
dec
out
insl
jecxz
sti
mov
add
xchg
aas
lods
test
fnstenv
insb
adc
ret
jo
push
aad
arpl
ss
js
jl
rolb
and
outsb
outsl
fwait
and
bound
pop
jo
imul
and
fisttpl
jne
insl
pop
nop
add
xchg
push
icebp
insl
push
cld
cmp
orl
jmp
fs
cmp
shll
mov
arpl
jo
insb
jle
fdivp
in
mov
pop
mov
push
sub
dec
mov
aad
cmpsl
jae
push
stos
and
mov
pop
sbb
mov
jo
repnz
pop
push
mov
shlb
stc
fdivl
jae
sti
xchg
cmp
shlb
push
push
bound
pop
imul
bound
sbb
pop
out
pop
pop
mov
insl
jno
dec
ljmp
or
pop
cli
jl
jo
mov
shr
push
ss
lods
rcll
jbe
iret
jo
add
scas
push
popf
xchg
fcmovne
pushl
dec
hlt
repz
dec
cmp
adc
movsl
mov
into
and
sahf
scas
jo
cltd
punpcklwd
enter
jo
rolb
pop
mov
mov
jne
sahf
enter
cld
lret
sub
xchg
call
sbb
mov
mov
shl
fcomip
nop
dec
test
cs
push
xor
dec
leave
idivl
pop
or
or
jae
lock
xor
mov
cmp
dec
sbb
jge
hlt
push
insl
bound
adc
mov
cmp
jae
aad
outsb
orl
mov
mov
arpl
cmpsb
cwtl
cmpsl
xor
add
pop
rcl
adc
inc
jo
jb
xor
je
jnp
mov
cmpl
sbb
rcll
imul
lahf
dec
dec
push
cmp
imul
ja
jbe
jl
lahf
rcrb
mov
sub
in
outsb
ftst
sbb
xchg
repz
jo
sbb
out
clc
jae
or
xlat
popa
pop
mov
mov
push
loopne
popf
jmp
loop
push
in
jle
fucomip
jo
ds
mov
popf
mov
outsb
mov
adc
jo
cli
lcall
sahf
dec
insl
mov
jo
push
in
cmpsl
mov
mov
sbb
push
outsl
ja
mov
ja
fcompl
or
fisttpl
out
mov
into
lret
iret
inc
mov
cwtl
lret
scas
xchg
inc
jo
jge
push
xchg
rcr
test
mov
add
lods
mov
sti
mov
push
jo
add
out
sub
call
fnstenv
addl
mov
mov
lret
pop
xor
mov
sti
bound
xchg
fcmovu
addr16
xor
dec
and
dec
jne
fcomip
sub
jo
xor
sbb
adc
xchg
mov
push
je
push
mov
repz
mov
adcb
xchg
adc
xorb
decl
add
lret
fstps
push
scas
lock
sbb
and
mov
lods
jo
outsb
popa
fsts
sub
sbb
xor
ret
jo
std
sub
jo
sahf
in
mov
aad
scas
mov
xchg
push
mov
inc
lea
mov
out
lds
shr
fnstcw
loop
fisttpll
jo
rolb
mov
push
push
popf
arpl
jo
adc
shlb
cmpsl
xor
or
sub
inc
cmp
scas
lds
xor
fcoml
pop
insl
xchg
or
je
mov
xchg
push
jmp
dec
das
lock
jl
imul
insl
sbb
jle
aam
xchg
arpl
dec
and
mov
push
push
jno
mov
xor
add
inc
jne
sub
icebp
jo
lock
sarl
push
push
pop
stos
jo
jg
inc
lods
cmp
sar
popa
test
rolb
add
lock
ja
sbb
push
fidivs
sub
fnstenv
mov
fcomps
int
outsb
sub
jo
addr16
jno
pop
das
or
xor
xorb
pop
mov
stos
mov
adc
je
lock
fucomi
sbb
lock
aas
aad
mov
and
push
fldenv
movsl
ja
push
mov
imulb
pop
sub
push
adc
xchg
xchg
push
jo
jb
shll
jnp
jo
xchg
cld
fadds
in
sub
cmp
cmp
push
push
push
je,pn
mov
jo
dec
and
xor
add
push
fcomps
shrb
mov
mov
pushf
ja
dec
outsb
das
pop
xchg
or
pusha
jno
push
xor
jge
mov
dec
jo
xchg
fldenv
enter
addl
pop
cmpsb
cmp
cmp
sub
xchg
sbb
aas
xchg
pop
xlat
repnz
adc
stos
pop
inc
mov
out
outsb
loopne
int3
test
dec
jp
jno
cmp
fnstsw
xor
jo
jecxz
mov
scas
sbb
push
push
and
aad
dec
gs
push
test
or
lea
sub
cmp
frstor
sahf
jo
out
push
repz
mov
dec
mov
xor
and
ja
lods
push
fdiv
lock
daa
push
dec
lret
fisubrl
lahf
pop
sarl
enter
bound
jo
jmp
in
mov
mov
aaa
rol
popa
mov
lock
xor
add
jae
jae
lods
ja
rcr
mov
jbe
hlt
mov
jmp
cmp
cmp
sub
rcrl
iret
mov
xchg
jo
outsl
xchg
rorb
cmp
jo
aad
imul
xlat
cwtl
insb
divb
jo
dec
dec
popa
push
std
fidivrs
jo
lods
fsubl
mov
or
pop
int
clc
add
data16
outsb
ja
push
in
outsb
jne
shrb
mov
nop
in
push
cmpsb
jmp
jo
or
mov
aas
test
jo
jle
rcrl
enter
fwait
cmpsb
pushf
dec
aad
insl
stos
pop
rcll
xchg
push
lock
inc
push
sub
or
add
push
test
aad
mov
fildll
in
dec
mov
jp
push
adc
xorl
mov
pop
xchg
idivb
xor
jo
sahf
xchg
sub
imul
jo
jae
nop
pop
and
testl
or
cmp
cld
jo
int3
outsb
inc
lds
adc
stc
pop
and
fdiv
sbb
cli
outsb
inc
xchg
shlb
inc
mov
mov
enter
jo
inc
pop
add
iret
cmpsb
pop
ds
pusha
ret
or
push
fcomp
shlb
mov
fidivl
call
rorl
shll
ja
adc
frstor
dec
push
imul
out
punpckhbw
and
insl
rorl
sub
std
dec
imul
notl
fisubl
leave
xchg
jo
sbb
fs
sbb
test
pop
inc
sbb
sarb
dec
jge
inc
test
jo
sbb
jl
xchg
out
jo
push
mov
jo
sbb
sbb
lahf
sbb
add
movsl
mov
jo
or
hlt
outsb
leave
arpl
ja
adc
pop
mov
lahf
push
xor
ficomps
adc
jo
cmp
jo
xor
inc
mov
enter
loope
into
out
push
test
dec
es
call
jp
out
dec
sbb
jl
mov
rcl
jae
push
shr
sub
int3
sbb
mov
jo
and
ret
jo
adc
ret
idivl
aad
push
push
bound
mov
imulb
push
cmc
or
cmp
dec
xchg
pop
es
std
jp
jb
lret
jo
mov
pop
add
or
dec
adc
jp
aad
xor
cmp
sbb
xchg
xchg
push
add
jo
popf
es
pusha
xorb
push
mov
jo
mov
xchg
xor
dec
mov
aam
add
lods
mov
jae
xor
nop
mov
jo
or
push
jg
xchg
fistps
mov
mov
cmpsl
lock
push
sbb
jo
test
jb
ds
shlb
sub
sub
sbb
pop
jo
lds
imul
ficomps
fsubl
xor
lods
int3
and
das
mov
jo
stc
ds
aad
movsl
cmp
jo
adc
stos
jo
ss
dec
sub
insl
jo
mov
push
pop
mov
and
int
jo
jae
mov
insl
xor
mov
mov
rcr
aad
dec
flds
jo
mov
and
add
push
lea
xor
pusha
push
jo
je
ss
call
xor
fwait
mov
jo
mov
jne
int3
add
jo
iret
sub
jo
roll
inc
jo
pop
inc
mov
das
dec
jnp
push
xor
call
sub
pop
push
sbb
insl
pusha
fmull
and
lds
in
jge
dec
scas
add
jle
repz
jp
scas
mov
mov
cmpsb
pop
out
sbb
push
or
jo
shl
lods
out
mov
inc
adc
fcmovbe
inc
imul
cmpsb
adc
push
mov
jo
dec
mov
cmp
dec
lds
add
pop
xor
mov
out
pushf
jmp
aam
add
mov
jo
mov
fistl
das
out
outsb
iret
stc
pop
or
jae
loopne
mov
rcl
fiaddl
push
cmp
out
insl
mov
imul
mov
jge
cli
add
jo
xor
mov
cmpsb
rolb
std
pop
mov
scas
mov
sbb
rcl
sbb
lcall
xor
push
into
dec
xor
cld
vpmacsdqh
mov
push
jo
sbb
mov
jno
stos
push
popf
jg
bound
test
bound
sub
jo
ret
mull
inc
pop
push
jo
outsb
pop
mov
sahf
mov
inc
es
ja
push
sti
and
add
scas
pop
push
mov
jo
movsb
sahf
push
sbb
sub
outsb
or
mov
cmpsl
mov
xor
inc
xchg
xchg
pop
fcompl
aad
popf
lods
dec
fdivs
pop
add
jge
inc
sbb
push
nop
enter
mov
addr16
adc
jo
and
pop
jle
jo
shll
mov
popf
mov
cmp
jns
subb
aad
push
xchg
mov
icebp
mov
push
push
lock
mov
in
or
and
pop
add
aas
sub
xor
mov
jecxz
pop
jo
xlat
mov
std
jle
insl
fistl
inc
xchg
out
jo
push
shll
loope
sub
jno
int
sbb
jnp
add
pop
jge
jecxz
add
adc
mov
add
cmp
jo
lock
jae
adc
ja
xchg
ds
movsb
pusha
adc
mov
shl
xor
lock
ss
jmp
mov
jo
mov
sbb
jl
out
xchg
mov
cmp
hlt
inc
mov
push
mov
or
mulb
aad
fldl
fs
shl
jo
lahf
and
fs
aas
cmp
ret
xchg
or
sti
jge
into
sub
dec
add
aad
nop
and
fnstcw
loopne
cmp
jo
aaa
inc
fs
fldpi
imul
dec
push
inc
jo
jae
mov
out
pop
jo
in
subl
sti
test
insl
push
mov
sub
push
jg
xchg
jno
xor
test
in
jne
xchg
jecxz
lock
das
out
jno
mov
xor
mov
mov
jbe
or
add
dec
lahf
sbb
jo
fistpl
iret
test
aad
dec
add
jo
lds
inc
add
shl
sbb
mov
mov
xchg
jo
cmp
jae
sub
popf
jo
mov
dec
jge
jp
movsl
fldenv
int
in
jo
or
loop
stos
jl
push
sbb
pop
loope
sbb
jo
sbb
lret
push
pop
xor
push
dec
das
mov
and
fstps
inc
outsl
jo
dec
enter
jo
cld
and
ret
jo
ss
dec
sarb
fmulp
sub
cmp
mov
jo
jnp
lret
jo
sub
fisttpl
jl
jo
xchg
jg
test
ds
insl
aad
sbb
imul
adc
xchg
jo
jge
mov
jo
pop
mov
mov
jle
cld
fwait
pop
mov
jo
loop
pushf
aad
pop
xchg
pop
es
mov
add
adc
imul
xchg
aad
push
sbb
push
outsb
nop
push
leave
ja
push
aaa
inc
loope
and
push
in
lret
insl
mov
jne
pop
mov
inc
or
pop
ret
daa
lret
mov
pushf
in
jo
sbb
cmpsl
pop
test
enter
hlt
xor
test
adc
test
int3
xor
fsubrs
call
pop
jno
stos
mov
push
jo
lahf
or
sub
outsl
dec
nop
xchg
lods
add
jp
jbe
and
pop
lock
popl
jo
add
rcll
cmp
jo
mov
pop
jnp
pop
inc
dec
inc
mov
jo
mov
scas
xor
insl
or
mov
lock
ja
and
inc
sub
mov
jo
inc
cmp
jnp
sahf
add
dec
test
sti
adc
cmpsl
lock
daa
jle
mov
int
mov
insb
jo
dec
mov
adc
fdivrl
jo
inc
outsb
wbinvd
fiaddl
or
jge
pop
jbe
adc
cltd
sub
fcomps
and
scas
add
bswap
xchg
das
jmp
jo
in
jp
jae
jl
flds
push
int
mov
repz
std
jmp
lret
push
adc
dec
lock
ja
ljmp
repnz
dec
xchg
dec
push
pop
push
frndint
insl
jns
jg
mov
mov
sti
lret
jo
dec
mov
fnstenv
or
cmp
jo
out
scas
add
ds
pop
mov
fdiv
adc
mov
scas
test
inc
jo
dec
lock
in
test
pushf
sbb
pop
jo
aad
mov
popl
sub
jo
repz
sbb
lods
scas
lods
pop
dec
or
leave
cltd
adcl
inc
xor
mov
aad
pop
or
xor
inc
jo
fdivs
outsb
test
push
inc
out
scas
add
sbb
or
imul
ds
stc
mov
jo
fdecstp
fstp
dec
dec
jo
jecxz
mov
dec
inc
push
fmuls
mov
mov
loopne
mov
gs
mov
test
jl
sub
jecxz
mov
es
scas
sbb
lds
and
mov
cmc
add
push
shl
inc
push
or
loop
test
sub
xor
test
insl
icebp
decl
jo
jb
nopl
sub
movsl
pushf
xor
and
jecxz
jo
xchg
sub
add
add
inc
sbb
aad
dec
jae
icebp
pop
adc
cmpb
dec
jmp
in
lea
jo
jle
insl
popa
sbb
loopne
jo
sub
lret
mov
gs
out
jne
xchg
push
ja
arpl
pop
jge
pop
loopne
push
push
or
shl
pop
out
testl
mov
lods
sarl
jp
jns
insl
cmc
push
sahf
jno
in
lock
mov
jo
popf
fstps
adc
push
in
stc
sar
jo
bound
jo
filds
push
and
jo
inc
int3
rcll
sub
cld
xchg
cmp
ja
int
xor
fidivrs
pop
aad
xlat
bound
mov
addr16
inc
outsl
mov
je
aad
dec
jp
in
push
xor
mov
adc
faddl
mov
imul
jae
pop
sbb
jne
pop
and
lea
ss
repz
adcl
inc
test
and
mov
insl
pop
pop
pushl
xchg
lret
cwtl
inc
jnp
scas
fstpt
adc
sbb
shl
imul
adcl
mov
mov
mov
and
dec
cmp
add
mov
insl
roll
mov
lret
ss
loope
mov
ret
out
adc
add
data16
xchg
fwait
outsb
jo
or
sub
xor
jp
fcomi
and
and
pop
pop
jo
loopne
orl
fcomps
pop
and
adc
sbb
rcrl
mov
push
pop
ljmp
enter
lock
xchg
adc
pop
cs
push
std
insl
lds
xor
cmp
jnp
cmp
jmp
hlt
fisttpll
lock
and
add
loope
adc
das
pop
cltd
insl
mov
cmp
jae
xchg
jnp
mov
jl
xchg
cmpb
shlb
adc
pop
lock
in
das
xor
fimuls
ss
inc
xchg
pushf
or
data16
jl
xchg
in
jle
jae
dec
movsl
sbb
mov
mov
pop
cmp
cwtl
add
xor
push
mov
push
dec
pop
sub
adc
aad
lods
jne
iret
call
loop
push
xchg
xor
pshufw
jo
into
popa
mov
jo
aam
and
jb
lret
out
fnsave
fwait
cmp
or
aad
jo
test
loop
xchg
jb
repnz
or
sub
cmp
or
into
xor
aas
inc
mov
dec
mov
lock
sub
pop
sub
push
jo
sub
cld
or
loop,pn
fdivl
pusha
sti
push
lock
gs
jo
push
mov
jecxz
xchg
jo
and
jo
test
xor
push
sub
dec
or
inc
in
jo
popf
dec
in
xchg
push
js
jo
sarl
mov
jl
cs
psubb
cmpsl
jo
cmp
ss
xor
jbe
loop
xor
mov
add
test
push
pop
cwtl
mov
inc
negl
dec
push
push
mov
mov
les
std
dec
jge
shl
les
stc
fbstp
cs
fmul
sub
push
aad
push
fs
loop
pushf
push
setno
dec
dec
fisttps
lret
sbb
mov
ret
cltd
das
icebp
shll
aam
cld
loope
scas
subb
nop
sub
pusha
or
mov
cmp
jo
or
jo,pt
jb
cltd
shll
jo
testb
fcoml
adc
lds
jo
xlat
into
test
cmpsl
aad
jo
test
mov
or
or
jbe
sub
aam
into
adc
mov
and
sbb
scas
jo
mov
jb
xor
dec
pop
enter
insb
sbb
hlt
pop
lods
mov
jo
jnp
add
add
inc
mov
push
mov
xor
fmul
lock
lahf
pop
or
xchg
ret
fwait
jns
push
ja
movsl
push
sbb
mov
jo
add
es
xchg
enter
push
pop
mov
popa
adc
lock
cs
decl
mov
out
lcall
jo
mov
mov
sarl
push
int3
push
add
dec
jns
dec
es
aad
insl
jl
imul
jo
rorb
mov
jo
outsl
dec
pop
add
or
cmp
lods
jns
sub
mov
lahf
or
jle
lods
push
mov
lret
jo
mov
aad
jne
testb
lock
adc
jg
or
movsb
rcll
push
aam
std
nop
push
jo
sbb
xchg
dec
fwait
inc
push
fnstsw
fdivrl
push
jo
ss
pop
dec
push
cmp
imul
lret
mov
ja
mov
mov
scas
sti
push
rorl
jl
lods
lock
jp
andb
rorb
arpl
insl
cmp
pop
cmp
test
out
ror
jo
push
sbb
inc
int3
pusha
in
fdivs
inc
inc
adc
pop
sub
add
push
loop
cmc
jle
insl
cltd
sub
pop
clc
test
outsl
adc
jo
aam
lret
sarb
fs
xchg
gs
insl
sub
call
mov
jo
lock
jo
cmc
sbb
xlat
jno
lahf
test
das
jo
jns
decl
bound
cwtl
fchs
push
icebp
fdivs
aas
adc
aad
or
jl
leave
mov
push
jae
inc
jo
pop
arpl
cwtl
pop
jo
cltd
mov
popa
pop
xchg
shll
aad
dec
repz
push
push
popf
mov
imul
inc
xor
js
in
mov
ffreep
jae
cmpl
xchg
mov
mov
xchg
cmp
addb
mov
dec
mov
cld
jo
push
outsl
stos
adc
add
and
sete
mov
out
mov
ret
aaa
adc
mov
cmp
xor
sub
jo
xor
out
das
lods
fstpt
in
pop
xchg
jo
clc
es
push
sbb
push
insl
ret
push
dec
lock
aas
xchg
sub
mov
and
lock
push
or
icebp
jp
pop
aam
call
rclb
inc
mov
inc
ss
jae
dec
cltd
push
pop
ja
cmp
jmp
jecxz
inc
lock
cmp
jo
imul
pusha
mov
and
pop
jo
push
xor
mov
pop
iret
pop
sbb
pop
jo
mov
fsubrl
enter
or
ret
jae
jle
ss
sahf
mov
mov
jecxz
or
shr
shrl
xchg
ret
add
mov
fistl
das
xchg
pop
jnp
sbb
jo
mov
adc
fstl
jo
push
cmp
cmpsl
in
arpl
add
rorb
xchg
insb
rcll
dec
xchg
ljmp
jae
out
jo
dec
outsl
aad
mov
insl
pop
dec
cmp
repnz
je
je
xor
shll
jne
imul
sub
mov
jo
jp
cmp
cmp
shll
mov
xorl
daa
loope
push
fsts
push
arpl
add
push
das
ljmp
cmp
and
mull
xor
push
lret
les
sbb
outsb
jae
mov
sbbb
jb
cmp
outsl
lcall
mov
hlt
ljmp
rcl
push
add
and
jo
cld
push
cmp
sbb
jo,pn
dec
jmp
push
je
jp
fcoml
outsl
mov
xchg
and
pop
dec
xor
xchg
jb
cld
lds
pop
push
mov
dec
push
clc
int3
xor
push
xor
jae
and
es
orb
xor
jo
dec
pop
mov
inc
cmpsb
subl
fldl
or
dec
cmp
jne
sbb
inc
sub
pop
mov
lret
push
mov
adc
mov
pusha
dec
mov
sub
cld
sbb
add
mov
nop
shl
data16
adc
push
pop
dec
cmp
jg
clc
add
xchg
out
dec
je
fldcw
cmpsl
jae
fsubl
lock
test
pop
outsb
push
push
jae
bnd
pop
sub
jo
or
cmp
pop
dec
out
xor
cld
jo
xchg
ja
jns
push
pop
rorb
testl
pop
adc
dec
cmp
jmp
mov
stc
cmp
xchg
fst
in
pop
mov
dec
or
inc
fidivrs
cmp
fwait
mov
scas
sbb
jle
ja
dec
mov
sahf
aas
test
xor
insb
and
add
jo
pop
clc
lret
lea
popa
ljmp
xchg
add
mov
jo
insb
clc
lahf
insl
sub
cwtl
in
repnz
jg
push
jge
in
fisttpl
lret
cwtl
insb
cmp
pop
pop
mov
mov
insl
sub
xchg
jo
insb
lret
movsl
ds
push
shlb
test
mov
xchg
or
fldl
mov
sbb
lea
mov
jne
or
aad
insb
pop
sahf
jo
sub
notb
lahf
jb
in
rcr
or
jne
mov
xor
adc
loop
push
mov
jl
mov
ljmp
dec
loop
lret
push
pop
test
sub
pop
scas
aas
movsl
jo
sbb
pop
jo
push
jnp
and
inc
out
shr
adc
xchg
loop
jo
and
dec
jo
push
jp
sub
push
loopne
jo
imul
pop
fwait
test
push
sbb
pop
jge
or
out
shl
nop
jo
insl
movsl
cmp
fs
incb
ja
push
sbb
dec
jo
addr16
insl
pop
mov
ficoml
push
ds
inc
cmpsl
in
push
jo
divl
cmp
mov
xchg
jo
shlb
add
pop
adc
insb
lea
repz
outsb
pop
stos
es
cli
mov
lcall
ret
loop
notb
jo
or
dec
pop
dec
insl
lds
mov
lcall
adc
mov
mov
mov
loopne
mov
inc
jae
stos
repz
and
shlb
iret
mov
loop
inc
xorps
jo
and
shl
or
pop
xchg
popl
dec
pushf
pusha
dec
aaa
xchg
in
call
adc
dec
mov
lock
nop
jne
xchg
jo
fmulp
outsl
insb
cmpl
mov
xor
jae
int
aad
pop
fadds
jle
pop
push
xchg
or
adc
ds
xor
leave
clc
adc
sahf
movsb
mov
sbb
cld
and
das
arpl
pusha
xchg
jo
adc
pop
push
fcomi
jo
sub
gs
int
push
fcoms
jo
adc
ficoms
test
jnp
xor
ret
jo
mov
movsl
dec
outsb
clc
jo
sub
add
in
and
push
repz
int3
mov
pcmpeqb
or
test
orl
jno
pushf
arpl
jae
xchg
xlat
iret
mov
xacquire
out
pop
mov
mov
xorb
lea
inc
jle
jo
leave
std
insb
loop
fnstenv
gs
lods
fcomps
jo
or
nop
arpl
push
fsubl
pop
xchg
aad
insl
leave
mov
sbb
push
adc
decb
mov
popf
fstl
jae
inc
jo
xchg
ret
jno
xchg
jo
test
xor
push
shlb
into
mov
xchg
push
outsb
dec
dec
aaa
in
cli
lret
inc
push
pushf
pop
jo
out
sbb
cmp
jo
and
cmc
aad
jno
ja
xchg
jae
loopne
mov
sub
rclb
xchg
test
data16
nop
iret
int
inc
or
pop
out
mov
push
aad
ss
mov
xor
push
loopne
in
jnp
mov
and
jns
xchg
rolb
repz
xor
lock
insl
pop
fldt
rcl
pop
jno
imul
pop
dec
loop
jbe
mov
pop
and
sbb
popf
int
jo
sbb
pop
jo
adc
inc
xorl
loopne
mov
fldz
pop
rorb
adc
mov
ja
std
fst
lock
push
push
dec
xchg
jo
or
lock
jo
loopne
pop
pop
mov
std
mov
into
jo
push
aad
aam
dec
cmpsb
jae
push
push
push
xor
or
cld
xchg
jbe
or
lods
inc
mov
pop
mov
rcrl
cmp
sub
ja
push
addb
push
jo
rcrl
mov
or
not
pop
dec
and
imul
repnz
pop
xchg
pop
mov
xchg
rorb
arpl
pusha
jo
fldcw
mov
outsb
insl
adc
das
rcrb
jmp
mov
xor
sets
jnp
xor
inc
cmp
enter
shll
jo
xchg
add
jo
push
call
aaa
out
pop
insl
mov
fwait
out
push
lock
arpl
push
nop
cli
adc
mov
mov
push
push
sahf
repz
adc
add
ja
fsqrt
cltd
jnp
test
in
mov
fmul
dec
sbb
jo
mov
pop
pop
or
pop
out
insb
jo
jno
mov
mov
push
in
and
in
add
inc
sub
ds
jae
and
mov
cmc
sahf
jo
jne
stc
xchg
mov
jp
fmul
test
pop
inc
pop
lea
mov
adc
stc
test
das
jno
jo
addl
mov
je
lods
rcrl
jb
ss
test
test
inc
subl
bound
cmp
cmp
mov
in
insl
mov
xchg
outsb
pushf
cmc
shll
test
dec
jo
mov
mov
scas
dec
cmc
add
jne
sub
jo
iret
xchg
data16
or
ret
jl
popf
fsubr
lock
aaa
sbb
movsl
mov
les
lret
pop
and
in
arpl
scas
or
ss
push
dec
pop
insl
mov
mov
jo
cmp
sbb
dec
movsl
push
daa
mov
mov
or
xchg
jo
loope
pop
rclb
jo
xchg
push
sbb
mov
aam
sti
add
out
cmp
mov
lret
nop
flds
shlb
dec
xchg
push
xchg
divb
sub
adc
pop
xor
inc
aad
imul
adc
lock
mov
inc
pop
and
fisttps
cli
test
xchg
and
mov
leave
jo
mov
xchg
pop
jae
fwait
scas
jmp
xor
and
mov
dec
leave
aad
jo
or
pop
ds
push
xor
jo
add
jp
repz
insl
jo
dec
fs
mov
sub
dec
or
lea
movsl
ss
pop
inc
mov
mov
pushf
in
or
arpl
xchg
jo
das
dec
push
ss
in
jo
jbe
mov
jo
sahf
faddl
mov
hlt
jo
stos
sub
mov
jo
mov
sub
add
jno
stc
xor
or
xchg
jo
lock
fcoms
incb
add
insl
push
xchg
pop
out
xchg
iret
dec
je
sub
or
hlt
clc
jae
xchg
scas
loope
adc
jp
lods
mov
aaa
jae
jo
adc
std
mov
enter
fildl
pop
popa
xchg
jp
sub
mov
jmp
sbbb
sub
and
inc
pop
icebp
add
jmp
fildll
iret
xchg
cmc
data16
xor
movsb
fwait
adc
or
cmp
dec
shll
jo
add
adc
adc
out
insl
in
xor
outsl
add
mov
addr16
test
adc
mov
pop
pop
out
jo
mov
lea
or
add
sbb
pop
mov
dec
fsts
mov
cmc
and
jge
outsb
xchg
fcoml
dec
fldl
andb
xchg
jge
test
shr
mov
xchg
cld
ds
jo
dec
cmc
test
jo
dec
imul
jo
rorb
fstl
hlt
jo
lret
orl
mov
lods
push
and
ss
pop
clc
cmp
xor
mov
arpl
ficoms
imul
mov
inc
fwait
out
repnz
mov
faddl
jnp
cmp
les
jge
ja
dec
outsl
fs
arpl
mov
and
jae
jo
mov
iret
cli
jae
push
outsl
popf
mov
nop
mov
fstps
push
pop
cld
int
cwtl
aad
lock
movl
nop
rorb
or
aad
movsb
and
jo
iret
loopne
and
jle
aad
repz
xor
mov
sbb
out
fcompl
xchg
aad
or
jae
cmpb
add
push
jo
xlat
add
outsb
mov
push
mov
mov
or
aam
cli
add
lock
scas
cmp
xchg
jo
dec
fbld
fstpt
inc
mov
and
mov
js
jno
push
lret
lcall
mov
sbb
adc
enter
jo
inc
cltd
jp
cli
dec
cmpsl
mov
movsb
cmp
jmp
js
in
xchg
ret
lds
xchg
fdiv
pop
mov
sahf
cmc
aas
cmp
add
in
inc
sub
daa
loopne
mov
adc
jo
cmp
jo
pop
fildl
dec
ficomps
lods
aaa
mov
adc
out
fmul
and
mov
es
xor
daa
jo
ret
and
ss
mov
test
inc
fs
pop
and
jo
mov
push
xchg
jne
addr16
pop
jo
cs
subl
pop
scas
mov
mov
nop
dec
adc
lock
dec
test
and
sub
and
push
imul
leave
stc
mov
loope
insl
xor
inc
int3
jo
imul
jno
mov
adc
out
cwtl
outsb
dec
fisttpl
adc
test
lock
jno
jecxz
push
mov
xor
imul
cmpsb
inc
repz
fs
lock
jo,pn
test
ja
push
bnd
iret
xchg
pop
aad
pusha
lea
cmpsl
inc
orl
leave
clc
sahf
and
outsb
rcrl
loopne
sbb
aad
sub
insl
ror
mov
lods
sub
int3
xor
jbe
mov
jb
lods
shlb
and
xor
imulb
rep
ljmp
js
cmp
dec
sbb
push
out
gs
inc
lods
lods
jae
jnp
jge
sub
adc
mov
push
jo
inc
xchg
cmp
mov
in
lock
fwait
rcll
jo
aad
mov
in
leave
xchg
jo
fistpl
imul
sbb
bound
push
push
aas
mov
mov
out
fwait
ja
xor
hlt
push
in
pop
push
cmp
lret
push
xor
pop
stos
test
and
cwtl
jo
adc
dec
adc
cmp
cs
cmpb
jo
xor
xchg
jo
pop
movsl
je
push
jnp
inc
and
jo
loopne
add
lock
lods
sbb
jo
arpl
add
jo
shlb
jo
testl
jo
stos
and
dec
cltd
cmp
sti
pop
jae
jo
sbb
aam
xchg
addr16
mov
mov
sbb
leave
ja
inc
lcall
dec
jo
mov
sar
shlb
jo
push
cmp
pop
out
dec
jle
insl
xorl
aaa
mov
or
dec
decb
ljmp
clc
cmp
jo
jle
outsb
mov
mov
push
mov
jo
nop
or
int
xchg
lods
insl
jmp
mov
out
in
mov
push
mov
outsb
out
jl
hlt
jno
lock
lahf
mov
insl
xor
es
jp
jo
idiv
fcoml
out
jo
or
sbb
push
jo
xor
jo
lods
nop
xchg
jl
es
fldt
pop
pop
gs
mov
popa
mov
jo
fyl2xp1
pushf
int3
push
xchg
xchg
insl
mov
cwtl
pop
mov
fwait
jl
stc
icebp
outsb
mov
adc
filds
stos
sub
pushw
lret
scas
xchg
sub
or
jo
push
out
imul
aad
mov
pop
mov
jo
jno
push
sbb
repz
aad
ja
sar
jnp
inc
addr16
pushf
cmp
pop
mov
loopne
push
add
and
push
clc
pushf
adc
add
jmp
sti
inc
pushl
out
inc
mov
cmpl
aad
mov
clc
xor
lahf
mov
mov
ss
or
jp
mov
mov
or
xor
jae
mov
add
call
fistpl
xor
push
in
into
call
clc
jecxz
test
jno
cld
add
xor
mov
and
mov
jns
add
cli
push
add
xchg
js
jo
sbb
jne
xchg
pushf
jo
sbb
in
jo
push
cmp
mov
sti
in
adc
test
gs
pusha
lcall
lock
jge
pop
sub
mov
pop
outsb
bound
or
mov
cwtl
jo
mov
fcoms
mov
outsb
mov
insl
xor
ds
adc
in
fcoms
xlat
call
xor
pop
jmp
divl
repnz
cmp
rdpmc
add
push
jo
sbb
ret
xchg
addl
ja
xor
jge
cld
mov
add
mov
jo
or
clc
sub
shl
dec
insl
daa
ret
sub
jbe
fimuls
popf
pop
bound
pushl
mov
dec
lcall
cmc
inc
xorb
adc
lods
inc
pop
cmp
lock
jo
ret
fildl
mov
cld
cmp
push
jo
stos
loopne,pt
cmp
xchg
dec
mov
push
add
or
push
decb
adc
sbb
mov
jo
xchg
pop
mov
jo
sbb
jne
jo
lods
std
shrl
mov
or
aas
pop
loop
jae
inc
jg
jmp
push
cmp
pop
shrb
stos
and
jmp
lods
jo
pop
popl
cmp
jle
ja
imul
fstpl
addl
loope
cmp
xor
hlt
fmull
sahf
mov
dec
ret
jo
pop
daa
andb
pusha
int3
and
gs
sub
xchg
mov
rcr
sub
pop
xor
out
movsb
jmp
gs
mov
jecxz
jo
xchg
adc
mov
rorb
out
test
mov
sub
and
pusha
jae
icebp
jb
out
or
fwait
loopne
in
sub
stc
dec
pop
pop
cld
mov
dec
inc
loop
jae
adcb
dec
mov
mov
jo
dec
ja
shll
loopne
outsb
dec
enter
dec
repz
xchg
lods
push
push
ss
jo
sub
gs
jns
adc
xchg
icebp
cmpl
fisttpl
aad
jecxz
sahf
sarb
enter
ja
inc
sbb
int3
push
jo
push
xchg
xlat
sub
iret
pop
or
mov
mov
xor
insl
push
outsb
xor
in
xor
sbb
pop
xor
jbe
pop
jae
imul
lahf
nop
lds
jmp
jo
movsl
xchg
mov
xlat
aad
test
mov
lods
mov
cmp
outsl
aad
sbb
addr16
dec
sbb
inc
testb
imul
jnp
mov
jo
mov
jo
lret
scas
jne,pt
jo
repz
jo
sar
inc
ljmp
ret
xor
dec
outsb
lea
rol
adc
and
movsb
mov
das
imul
inc
icebp
mov
dec
iret
mull
dec
jo
jbe
gs
inc
lds
mov
or
jnp
insb
cs
cmpsb
add
push
jo
fimull
xchg
scas
mov
enter
jo
out
or
fnstcw
jge
sbb
jo
subb
fdivl
cmpsb
lock
jecxz
jno
jo
xchg
es
sarb
xor
stos
test
sahf
cmpb
jo
bound
gs
test
sub
lock
push
out
sahf
xchg
mov
cltd
sbb
aad
roll
dec
mov
jo
sbb
movsb
jo
jl
std
aam
imul
aaa
jo
sahf
mov
pop
jo
in
popa
movsb
lods
xchg
mov
jo
das
jg
lods
ds
xlat
push
js
jo
xchg
sub
sahf
shrl
pusha
scas
dec
pushw
ret
pop
jae
rolb
mov
hlt
shr
lea
cltd
into
je
dec
jns
outsb
repz
call
scas
lret
add
movsb
cmp
add
data16
dec
test
and
pop
or
jl
and
mov
fdivl
shlb
mov
push
clc
xor
xor
adc
jo
fisttps
cmp
push
lret
sub
push
jle
mov
pushf
push
adc
pop
fwait
insl
clc
lret
pop
ret
popa
adc
inc
xchg
shll
or
scas
mov
push
jo
repz
negb
xchg
mov
cwtl
add
jo
shlb
insl
xchg
movsl
enter
jo
test
cwtl
movl
stc
mov
aas
dec
lds
xchg
aaa
push
movsb
pop
adc
movsl
je
jp
dec
fidivl
jo
mov
arpl
test
gs
adc
ja
sub
xchg
sahf
push
icebp
or
inc
fldt
cmp
leave
inc
xlat
out
dec
add
pop
aad
cltd
add
jo
sub
pop
adc
lods
xchg
insl
and
dec
xchg
cwtl
or
insl
mov
cmc
int
into
pop
jo
fs
mov
pop
data16
cmp
mov
jl
test
jo
and
jp
xor
pushl
adc
sub
and
mov
adc
pop
mov
cld
jle
outsb
je
mov
push
aas
lock
cmp
cwtl
push
inc
pop
push
call
js
cmc
cltd
popa
xchg
adc
enter
andb
aaa
dec
mov
in
jle
lea
mov
push
adc
jp
xchg
aad
jo
outsl
out
dec
fiaddl
imul
shrl
mov
jp
jle
movsb
pop
and
sti
xor
das
jo
mov
pushf
stc
fidivs
loop
addb
xor
jo
xchg
gs
js
mov
ja
fnstenv
je
dec
stos
jle
or
push
enter
xor
push
fwait
ja
jl
jg
lcall
or
subb
xlat
jo
push
popf
jae
outsl
xorl
mov
xchg
jae
mov
in
sahf
push
lods
push
out
inc
pop
fistl
cmp
dec
mov
xchg
push
jge
movsb
jp
rclb
jo
leave
dec
cmp
cli
jo
cmp
mov
cmpsl
out
scas
pusha
mov
repz
ja
lahf
add
loopne
dec
pop
ljmp
adc
js
addr16
jb
lcall
cmp
adc
jge
outsb
jnp
push
sbb
clc
jo
pop
cmpsb
dec
test
test
mov
jo
push
push
sub
push
jbe
jne
jo
sub
fdivs
and
mov
jo
jge
add
mov
mov
fdivp
rep
movsb
mov
xchg
mov
xor
jo
dec
mov
jo
aas
dec
ret
sbb
in
jo
sub
negl
insl
cmpl
adc
sti
inc
ret
cmpb
xor
nop
daa
ret
xor
push
jo
mov
jo
rol
scas
mov
cld
and
rol
fnsave
dec
lahf
in
insl
cs
jl
inc
test
dec
jo
cwtl
sbb
shll
xorb
xor
jo
fildl
mov
sbb
aas
sahf
inc
imul
cmp
mov
mov
ja
sahf
cltd
push
push
add
add
das
icebp
out
int3
or
into
mov
push
add
test
out
jo
cli
xchg
sub
jo
repnz
add
lock
cmp
lcall
je
ret
add
jecxz
inc
cltd
adc
mov
push
sub
adc
stos
fcompl
xor
pop
fs
add
cs
inc
sbb
sub
jge
mov
lret
in
sbb
mov
or
repnz
loopne
ja
dec
mov
test
or
mov
pop
mov
jne
insl
adc
js
or
lods
rcrb
inc
sub
inc
ret
mov
outsb
out
jne
pusha
mov
jo
xchg
cmc
pushf
xlat
adc
sub
or
xor
es
jo
iret
inc
push
arpl
ret
jne
imul
mov
dec
pop
pop
js
and
gs
push
clc
ljmp
cmp
flds
cmp
xor
lret
call
shl
inc
sahf
dec
jl
mov
outsb
cmp
insl
cmp
xlat
or
mov
push
xchg
ss
repz
and
xor
lods
xchg
cmp
jo
adc
add
imul
aad
inc
pop
test
popf
lock
fmull
jl
xlat
fidivrl
mov
js
jmp
call
push
cmp
sub
pop
xlat
pusha
jl
shlb
jne
dec
inc
aam
orb
mov
aad
and
push
and
push
jo
lret
sbb
daa
ficompl
dec
lret
xchg
inc
pushf
jo
stc
cli
cmp
in
push
push
jo
inc
aad
inc
inc
mov
jo
cltd
inc
mov
inc
cmp
dec
andb
push
sub
mov
cs
insl
mov
mov
fidivrs
stos
lds
sub
cld
xchg
ret
lret
adc
push
fsub
jl
dec
xor
js
xchg
or
addr16
fdivs
out
inc
push
pop
rcr
jo
jp
sahf
nop
mov
add
inc
inc
cmp
lret
add
pop
gs
aad
jae
cmpsb
add
test
and
mov
subl
jp
fsubr
imul
rol
sbb
outsl
xor
ljmp
out
jmp
add
cmpsl
pop
iret
push
cltd
mov
mov
out
jae
jo
xchg
mov
mov
xchg
jne
jae
insl
ss
js
mov
les
in
mov
repnz
inc
vpminub
outsl
enter
scas
jo
or
mov
popf
xchg
jl
push
int
jmp
jae
or
mov
cmp
jo
cwtl
xchg
sub
push
inc
push
mov
jo
je
xorb
shll
call
add
sarl
jo
frndint
fs
lcall
inc
test
inc
inc
jo
lds
ja
pop
into
jnp
mov
shlb
jo
adc
inc
js
pop
sub
fwait
lds
push
inc
jl
loopne
jo
cmp
lret
mov
push
inc
mov
or
mov
jne
cmp
jo
xchg
inc
cwtl
test
scas
jp
jecxz
adc
jg
jo
aad
dec
in
enter
add
jo
xor
mov
sbb
mov
sarl
add
jno
sub
push
shlb
adcb
jg
xor
push
jnp
pop
out
ror
jo
adc
fistpl
or
and
ja
jge
mov
lahf
das
pop
fidivl
fsub
lea
push
cs
stc
pop
push
std
pop
jbe
xchg
bound
cld
mov
xchg
ja,pt
mov
pop
xlat
pop
mov
jge
lret
ret
xchg
push
add
cmp
mov
mov
xchg
push
nop
stos
inc
jo
out
daa
test
jl
lahf
dec
mov
stos
adc
arpl
in
xlat
call
dec
inc
push
sub
mov
inc
jo
aaa
daa
lret
xchg
je
mov
push
jb
pop
jo
push
push
rolb
mov
movsb
jge
cmp
jle
jno
lret
mov
enter
jo
and
mov
sub
mov
sub
jo
pop
std
scas
sub
xchg
loopne
ja
cli
ljmp
out
sub
dec
out
sarl
add
fcoms
mov
loopne
add
cmp
jo
jnp
xchg
aad
xor
cmc
fisubl
adc
jo
and
pop
call
stc
pop
incb
lods
mov
aas
xchg
jecxz
lret
dec
scas
lds
insl
jmp
fildl
cld
jo
and
aad
fsubrl
sti
or
sub
inc
jecxz
jo
pop
xchg
stc
rcll
pop
outsb
fisubrl
mov
pop
movsl
je
in
dec
jne
mov
adc
pop
jnp
pop
sbb
stos
ret
jo
cmpsl
xorl
cmp
mov
jbe
cld
pop
mov
mov
aad
add
jo
or
sarb
jo
mov
rcl
jo
bound
mov
icebp
dec
arpl
xchg
jo
jle
jae
lods
jo
pop
jbe
aad
lret
adcb
out
imull
push
ja
divb
dec
pop
gs
lods
inc
outsb
jb
ds
push
mov
jno
sub
adc
xchg
or
add
mov
jb
outsb
dec
subb
mov
into
fldenv
pushf
jo
mov
test
push
inc
mov
inc
outsb
sub
cmp
adc
jnp
mov
pop
jo
out
mov
or
movsb
mov
mov
repnz
mov
jo
cmp
jmp
dec
dec
out
mov
data16
dec
lahf
scas
jg
push
and
mov
mov
adc
imul
sbb
pop
jo
xchg
or
addb
mov
jo
jb
inc
jp
mulb
dec
mov
or
push
insl
mov
xchg
das
mov
scas
jl
dec
adc
rclb
add
pop
or
stc
mov
push
or
mov
fists
xor
cmp
push
sahf
sarb
aaa
jo
fsts
cmp
adc
rcl
enter
xlat
lock
add
xor
jo
add
lret
sbb
cmp
pushf
xchg
insl
enter
pop
xchg
in
divl
test
mov
jo
mov
ljmp
data16
sbb
jl
sub
sub
insw
mov
push
out
cli
xor
lods
mov
inc
jo
mov
mov
add
add
and
pop
or
or
and
cltd
xor
or
push
jae
testb
adc
test
pop
pop
pop
cmp
addps
mov
fdivrp
jae
push
loop
out
rorb
lods
jo
ljmp
jo
in
sti
cmpsb
imul
xor
xchg
xor
mov
aaa
add
mov
jo
pop
aam
int3
adc
sub
lret
sti
mov
retw
push
xchg
jo
dec
dec
sbb
push
scas
cwtl
fs
sub
test
jno
imul
repnz
xchg
cmp
jo
imulb
xchg
xchg
cli
jo
inc
dec
xor
insl
mov
stos
cmc
insb
in
mov
popf
mov
popa
xchg
ja
popf
push
cltd
xor
dec
ljmp
negb
mov
das
jnp
pop
pop
cmpsb
lret
lahf
xchg
lahf
dec
lahf
add
clc
lahf
fcomp
int3
lahf
lods
lahf
sbbb
mov
lea
pop
outsb
mov
aaa
enter
mov
or
cmp
adc
add
mov
jo
adc
adc
iret
jle
pop
cmc
lcall
add
into
ja
cmc
imul
push
add
jo
std
data16
sbb
push
xor
mov
aaa
call
cli
add
adc
or
lahf
repz
outsb
test
mov
out
ret
fimuls
pop
bnd
pop
cli
mov
out
filds
jae
lea
outsl
into
mov
loopne
push
sbb
sub
dec
jo
aaa
xor
imulb
cli
mov
lock
out
dec
ljmp
mov
push
cmp
cwtl
add
inc
pop
cmp
loop
xchg
dec
add
rcr
dec
out
mov
jg
insl
adc
stc
sbb
ret
cmpl
das
call
pop
push
jnp
mov
cmp
cwtl
call
in
cld
ss
fildl
or
fiadds
jo
xchg
decb
dec
cwtl
sub
lods
push
stos
push
adc
dec
pop
add
cmp
cmp
data16
lock
imul
arpl
pop
ljmp
dec
jo
fisttps
or
stos
out
push
je
dec
mov
mov
mov
adc
cmpsb
cli
lahf
adcl
add
insb
popa
rolb
cmc
shl
mov
xchg
jo
cwtl
pusha
mov
xchg
jp
jge
mov
cmp
jo
push
push
sbb
pop
jo
test
jl
sbb
mov
sbb
sub
divl
shrb
es
push
pop
or
nop
addl
lock
mov
xor
push
ss
shlb
adc
pop
xchg
xor
leave
jo
fs
jecxz
jmp
sar
mov
push
push
sub
mov
clc
jecxz
jmp
lret
rcrl
mov
ficoms
ljmp
adcb
loop
sbb
add
jle
mov
fidivs
out
lea
xchg
jo
cwtl
push
mov
jo
movsb
push
insb
push
adc
or
add
dec
cmp
ficomps
adc
lea
jae
xor
cmp
inc
inc
xor
mov
jp
mov
jecxz
inc
or
repz
in
or
jo
orb
or
iret
mov
push
add
orw
xlat
push
je
test
cwtl
dec
enter
in
cld
xchg
adc
test
das
sub
out
lock
inc
mov
cmpsb
add
add
push
dec
or
jae
adc
lods
mov
mov
insb
jmp
maskmovq
idivl
mov
jae
shlb
push
xor
imul
es
adc
dec
pop
nop
outsb
push
ret
aas
fiadds
mov
jo
fwait
mov
push
jae
movsl
mov
xchg
imul
xor
adc
fidivs
loop
out
lock
into
insl
es
data16
nop
dec
xor
mov
push
jmp
lock
sbb
cwtl
jo
in
sbb
xchg
sbb
fwait
jo
push
pop
or
and
jo
fucom
out
sar
pop
add
jnp
ja
mov
mov
pop
jo
push
mov
ss
es
adcl
or
or
jb
je
mov
insl
aaa
jnp
imul
test
sbb
inc
xor
inc
hlt
dec
in
dec
fmull
jo
push
cwtl
cli
xchg
and
and
ja
cmc
jg
js
inc
aaa
cmp
add
in
pop
movsb
test
ret
xor
movsb
jo,pn
add
xchg
jo
cwtl
xchg
jo
rclb
dec
jle
jb
fdivrl
or
cmpsb
repz
sbb
mov
scas
insb
cmp
cmp
jnp
or
out
sbb
mulb
mov
cwtl
jo
loop
sub
add
pop
addr16
jl
lds
addl
movsb
add
iret
xchg
fisttps
xor
mov
cmp
or
int3
dec
jae
push
cmpb
fsubrl
jge
jbe
dec
sbb
insb
ja
inc
adc
notb
xor
cmp
cmp
or
fwait
cmc
ljmp
out
cs
insl
jle
adc
hlt
push
xchg
mov
das
mov
fcmovu
lds
mov
shlb
or
and
in
scas
test
jo
xchg
adc
lcall
and
lea
cmpsl
andl
aaa
lock
sbb
into
pushf
pop
jno
das
jns
pop
mov
aam
mov
insb
loope
mov
arpl
lahf
ret
negl
iret
inc
jo
mov
outsl
cld
adc
jo
push
lea
outsb
xchg
add
in
lock
xlat
dec
scas
adc
dec
in
mov
insb
mov
push
ret
outsb
adc
jo
push
mov
xor
sub
dec
shlb
adc
or
jo
out
mov
push
mov
hlt
ss
sbb
int3
or
jns
push
dec
sbb
cli
jo
inc
or
and
cmp
popa
cltd
push
add
lods
adc
push
jns
lock
sbb
xorb
inc
xor
fimuls
push
ds
mov
jo
ffree
dec
out
adc
repnz
inc
ljmp
insb
add
push
in
cmpsb
int3
mov
mov
int
jo
push
cli
or
lods
out
jo
nop
sbb
popf
je
push
jo
push
js
sbb
mov
cwtl
fnsave
xor
push
dec
dec
mov
pushf
xchg
ljmp
or
enter
into
fld
jo
push
sarl
jo
das
cmp
sbb
xchg
mov
inc
test
mov
jo
inc
push
push
mov
jns
pop
lcall
push
int
mov
data16
sbb
into
or
iret
push
lock
adcb
xor
mov
mov
dec
test
and
xor
dec
mov
push
push
adc
in
lods
push
or
sahf
jo
xchg
inc
das
xor
dec
mov
imul
testb
or
cmpsb
push
jmp
jge
jp
outsb
test
jo
mov
fcmovbe
jo
sbbb
xchg
sub
or
in
shrb
or
mov
cli
jo
fidivs
loop
inc
fisubl
jo
dec
push
xchg
xchg
dec
sti
pop
jecxz
jmp
mov
std
mov
loop
inc
adc
jbe
jo
push
push
hlt
dec
movsb
pusha
pop
jp
pcmpeqd
ret
in
repnz
mov
add
jo
popf
cli
int3
push
inc
or
add
mov
pop
jecxz
out
outsb
mov
mov
cli
sbb
addr16
imul
shlb
pop
pop
insb
and
outsb
fnstcw
mov
aam
sahf
cmp
push
addb
lret
or
incl
stc
pusha
jle
add
or
fidivl
sahf
fdivs
dec
jo
lds
and
dec
enter
mov
jno
ss
rorb
sti
mov
cs
push
insl
mov
xchg
mov
int3
push
mov
in
cs
push
push
mov
cmp
aaa
pushf
adc
in
data16
xchg
aam
xchg
lock
cli
xchg
jp
test
or
xor
push
rcrl
testl
mov
adc
fidivrs
xor
lahf
rolb
faddl
push
faddp
lock
and
incb
xchg
fnstenv
mov
pop
jne
dec
add
jo
mov
push
xchg
dec
enter
push
xchg
dec
scas
or
sbb
fs
inc
push
rolb
ljmp
ja
fisubs
pop
je
repnz
sbbb
add
xor
inc
fnstcw
lea
push
gs
jnp
loope
jo
int3
sbb
inc
insb
stos
jo
sti
mov
sbb
mov
ljmp
clc
cmp
sbb
dec
push
rcrl
mov
ud2
dec
data16
jo
mov
cmpsb
ljmp
xor
jbe
jo
cmpsl
push
shll
push
xchg
in
jne
cwtl
jg
dec
cmpsb
inc
add
pop
out
push
ficoms
mov
sahf
xchg
add
arpl
xor
add
repz
rcl
ret
ret
mov
inc
mov
std
je
lret
test
popf
xor
and
pop
movsb
jo
mov
cmpsb
scas
ret
stc
or
repz
sti
and
stos
push
outsb
lock
xor
and
cmp
inc
hlt
dec
in
aam
lock
movsb
mov
and
cmp
cmp
stos
or
test
outsl
ja
xor
mov
insb
jl
mov
mov
jae
imul
jo
fs
les
mov
mov
push
dec
cld
outsb
fbld
adc
pop
fidivrs
testb
push
xchg
mov
pop
fildl
dec
or
lretw
mov
cmp
shrl
or
cmp
mov
gs
inc
push
pop
pushf
jmp
jb
ret
clc
mov
lea
adc
add
icebp
shll
xchg
jo
test
pop
jo
fdivrl
xor
and
adc
jl
out
mov
cmp
sbb
mov
mov
or
jns
sbb
xor
cmc
cmp
mov
lock
test
inc
sti
mov
push
add
cmp
sbb
xchg
data16
cwtl
mov
cmpsb
rcll
out
xor
xchg
cmp
lcall
jne
ret
rcr
jl
sub
sub
xor
adc
sbb
mov
cld
addr16
jo
cmp
lods
imul
cmpsl
dec
in
scas
cli
test
push
nop
lds
mov
lods
bound
xor
aaa
and
cmc
push
in
repnz
or
jecxz
test
jbe
data16
out
mov
int
andl
mov
xchg
dec
jbe
push
enter
push
inc
idiv
jnp
movsl
rcll
or
push
sbb
mov
mov
cmp
sbb
cld
fsubrl
xor
jo
mov
adc
dec
into
mov
xchg
mov
aaa
push
lret
mov
mul
jmp
jnp
cld
push
cmp
sbb
add
or
or
xchg
int3
faddl
mov
pushf
push
xorb
mov
xchg
xorb
dec
call
xor
inc
mov
xchg
dec
jnp
pop
dec
cmp
sbb
or
movsl
jae
mov
shlb
mov
pop
cmpsl
sub
jo
mov
sub
std
sbb
imul
mov
push
daa
mov
mov
mov
push
cmp
or
enter
mov
shr
jnp
sbb
mov
push
and
and
ja
mov
mov
mov
inc
ret
xchg
inc
cmpsb
je
adc
and
mov
dec
lods
fidivl
adc
xchg
lea
into
jo
jnp
dec
xchg
fistl
test
pop
mov
or
push
movb
fs
stos
jno
mov
jmp
and
lods
js
ret
out
xor
jo
push
pushf
jle
es
cmpsb
loopne
imul
sti
xchg
inc
mov
dec
xor
jbe
dec
jnp
xchg
scas
jne,pn
cmc
jo
and
test
sti
add
inc
cmp
xor
jge
test
jno
test
into
es
mov
repz
stos
sbb
insb
dec
jne
dec
jp
lahf
sub
sbb
sbb
xchg
cmp
fwait
sbbl
std
push
pusha
fs
add
sbb
xor
jae
cmp
test
mov
shlb
push
jo
sbb
addb
xchg
jo
outsb
mov
dec
pop
aas
pop
pop
cmp
xor
cmpsb
int3
jmp
and
dec
jo
in
xor
shll
addr16
xchg
int
cwtl
sub
test
das
push
lret
and
mov
adc
mov
cmpsl
je
fisubrs
pushf
pop
push
mov
fs
lds
movsl
mov
test
push
out
imul
shll
mov
ds
lds
mov
mov
sub
mov
push
pop
fcoms
jo
adc
int
cmp
pop
jmp
pop
cmpsb
jo
shlb
std
hlt
jno
jb
aad
pusha
bound
jo
es
mov
mov
mov
or
pop
lods
jo
xchg
dec
popa
repnz
inc
xchg
in
std
test
push
mov
stos
jo
lret
pop
je
stos
out
hlt
enter
add
andl
and
xor
jo
mov
sbb
jo
push
mov
mov
jo
in
xchg
mov
jmp
sub
je
and
push
ret
cmp
push
mov
jecxz
in
sbb
mov
push
pop
dec
jo
cli
pop
ret
jo
outsl
xchg
fwait
jo
sub
data16
divb
sbb
fiadds
rol
fwait
jg
movsl
push
lods
push
push
sti
sbb
mov
dec
pop
push
jo
add
repnz
or
inc
or
xchg
pushf
lods
lret
mov
lods
cmp
jo
jmp
jge
fsub
or
jge
into
push
jo
cs
mov
jo
sub
cmp
lea
lahf
inc
xchg
loopne
movsb
xchg
shll
dec
cli
in
push
xchg
stc
add
subb
lods
jge
pop
mov
inc
std
cmp
fs
inc
jo
data16
sub
pop
jp
xor
mov
pop
mov
pop
jb
push
test
stc
mov
fdivl
jg
adc
lahf
out
cmp
pusha
jo
jb
test
push
push
xor
insl
jo
sub
sti
jo
test
add
mov
inc
sbb
jp
add
jo
or
orl
xchg
jo
or
jo
dec
loop
mov
dec
add
mov
out
roll
mov
ja
mov
jnp
sbb
inc
push
inc
shlb
sbb
ret
and
jo
out
fdivp
cld
test
divb
mov
pshufw
sbb
cli
out
cwtl
lock
pop
fcompl
sub
mov
push
xor
rclb
popf
cltd
out
jo
sti
push
mov
insl
pop
dec
jo
stos
insb
fldcw
cmpsl
mov
fidivl
inc
dec
sub
xlat
lock
std
pusha
cld
jo
adc
or
push
jp
push
sbb
jbe
push
push
xchg
mov
out
pop
sbb
lock
sbb
roll
pop
cli
adc
stc
shlb
ljmp
xchg
sbb
lods
mov
movsb
jo
pop
inc
add
or
out
or
mov
jp
outsl
mov
lds
jo
mov
push
pushf
mov
push
imul
pop
vpslld
outsb
adc
xor
cli
or
jo
loop
inc
pop
sub
push
jp
movsl
leave
cmpsb
push
cmp
scas
jo
out
jmp
jo
and
ret
or
es
mov
push
push
dec
popa
incb
loopne
ret
dec
dec
insl
in
pop
push
mov
push
outsl
test
jo
repnz
int
pop
pushf
push
adc
mov
loop
push
jo
out
ljmp
or
aad
out
outsb
insl
fiadds
xchg
xor
jl
or
cmp
in
pop
cmp
mov
ss
movsl
pop
loop
dec
mov
fsubp
je
sbb
stos
neg
xor
cmp
std
pop
ss
and
add
pusha
mov
jbe
jo
sarl
push
cmp
lods
into
dec
cmp
test
inc
loopne
xchg
xchg
mov
test
cld
aad
push
pushl
adc
sar
pop
fidivs
loop
out
sub
call
jnp
push
mov
ficomps
pop
rolb
add
lods
lret
lods
push
or
xor
cld
sbb
jae
out
add
lock
jmp
cmp
jo
incb
jne
repz
mov
pop
pop
rclb
jo
cmp
mov
push
subl
stos
or
xor
jne
xor
std
jl
mov
stc
jo
adc
pop
and
pushf
inc
push
data16
and
cltd
jae
testl
mov
jo
sbb
aad
outsb
pop
insl
add
nop
movsb
test
push
cld
push
mov
push
xor
insl
pop
outsb
scas
sub
push
xor
shlb
jae
sub
pop
push
fsubs
lea
dec
scas
jbe
les
push
sub
cmp
cmc
nop
add
pop
xor
push
adc
mov
cs
int3
inc
daa
outsb
pop
repnz
nop
push
sbb
jno
jp
or
aam
jbe
jo
xchg
int
int3
add
xchg
dec
mov
inc
jle
iret
mov
ss
xchg
or
dec
pop
dec
sbb
adc
test
mov
add
pop
mov
rolb
mov
push
test
rol
or
leave
ja
push
insl
xchg
loop
fldcw
cmp
sbb
addb
in
dec
ljmp
lock
dec
mov
sbb
fistps
push
repz
jp
and
jmp
inc
add
xchg
ljmp
jo
xor
js
add
jo
addr16
mov
cmp
sbb
dec
out
lahf
jo
mov
sahf
lds
pushf
jle
sbb
adc
dec
cmpsb
cmp
jo
in
and
sub
pop
repnz
jp
imul
daa
adc
lock
mov
xchg
insb
andb
and
mov
test
mov
adc
fcompl
outsl
rcr
sub
loop
ljmp
xlat
fwait
pop
or
and
hlt
mov
nop
int3
or
sbb
std
je
cmp
mov
mov
xchg
pop
xor
dec
adc
jb
pop
test
outsl
pop
xor
dec
inc
das
repz
fmull
jecxz
push
stos
and
cs
mov
xchg
outsl
xchg
mov
stos
dec
ret
ss
mov
pop
stos
sbb
jecxz
lret
cmp
push
adc
jnp
pop
addb
cs
jp
mov
std
jl
js
iret
push
bound
ret
push
cld
mov
pop
jo
jp,pt
aas
jo
clc
and
push
mov
cs
lret
daa
pushf
jae,pt
stos
in
sbb
jl
push
dec
cmp
inc
insb
sbb
data16
and
pop
xorb
out
rorl
fsubrs
xor
js
subb
pop
scas
inc
mov
loopne
mov
out
adc
inc
cmp
lret
inc
inc
push
xchg
xchg
xor
mov
adc
fs
inc
mov
adc
jl
out
adc
in
and
pop
inc
dec
je
inc
ss
es
testl
adc
jb
xchg
jnp
and
jns
stos
insl
scas
and
fcoml
sub
cmp
xchg
popf
addr16
pushl
ljmp
popa
out
iret
jo
cmp
push
je
repnz
mov
and
inc
shufps
sub
aaa
sarb
lock
hlt
imul
sub
push
outsl
pop
sub
outsb
and
mov
jnp
push
push
pop
jo
mov
mov
jo
mov
inc
pop
aas
sbb
nop
pop
mov
jo
jl
fsubrl
jo
mov
and
ja
sbb
pop
pop
fidivl
repz
outsb
out
pop
jp
lock
sbb
or
push
mov
nop
popf
jge
mov
jo
aad
xor
jle
insl
mov
daa
add
xchg
pop
adc
mov
mov
aaa
lock
inc
cli
xchg
out
arpl
rorb
add
dec
inc
inc
fadd
and
sub
jo
scas
xchg
xor
jo
fdivrl
ja
aad
mov
outsb
sub
adc
cltd
outsb
jae
lods
jno
in
xor
scas
addr16
jecxz
loopne
js
mov
push
icebp
int
push
push
jno
mov
jnp
mov
cmp
mov
aas
jbe
mov
mov
xchg
cmp
stc
mov
pop
pusha
jle
jo
and
or
sahf
fdivl
je
lcall
int
jo
fidivrs
jmp
fdivs
push
and
push
call
sub
mov
imul
shl
mov
adc
xchg
jmp
imul
cmp
shl
adc
add
fs
lcall
aam
imul
fcomp
sbb
xor
jg
mov
inc
movsl
loopne
sub
mov
pshufw
push
les
push
and
xchg
insl
dec
scas
sbb
pop
loopne
jl
xchg
dec
pop
or
mov
xlat
inc
push
add
push
fwait
jo
ds
or
testl
test
sub
ja
adc
xchg
jecxz
es
enter
test
mov
jo,pt
leave
popa
cmp
and
mov
cld
js
xor
icebp
push
xor
jo
mov
std
out
jg
lods
loopne
jo
xor
mov
jo
cmpsb
jns
mov
or
pusha
fcompl
je
aad
das
mov
mov
loopne
mov
ret
testb
loopne
imul
and
stc
shll
fs
sahf
xchg
jo
repnz
sbb
or
sbb
jmp
jae
stos
nop
and
cmpsl
mov
mov
int
repnz
inc
pop
out
es
push
data16
dec
xor
in
fdiv
outsb
xchg
cmc
pop
jb
lods
or
jo
xchg
add
cmpb
xor
dec
push
call
adc
jo
ss
outsb
fs
leave
lds
mov
ljmp
lods
mov
jp
cli
xchg
popfw
xor
ret
dec
outsb
out
and
sub
lds
or
addr16
xchg
cmpsb
jae
xor
cmp
cmp
pop
mov
movsb
sub
push
jg
data16
sub
cmp
movsb
mov
push
cli
lret
jo
mov
lahf
cmp
pusha
jo
inc
imul
cmp
clc
pop
mov
jbe
mov
insl
outsb
fsts
cmp
rcr
push
inc
inc
jo
dec
push
das
sti
inc
sub
pop
pop
adc
mov
dec
or
xorw
mov
popf
mov
jmp
ret
xchg
push
push
push
int
iret
inc
rorl
sub
mov
dec
jg
ds
jl
mov
jmp
out
sbb
dec
out
imul
outsl
mov
scas
out
imulb
outsl
out
out
push
out
jbe
movsl
jo
cmp
notl
jp
cltd
or
dec
mov
pushf
int3
lahf
cld
jge
or
sbb
ficomps
jmp
dec
pop
or
jge
shrb
xchg
jo
out
es
mov
jo
repz
mov
mov
jg
ds
cmp
pop
lahf
jl
fwait
xchg
xchg
sbbb
push
inc
or
xor
fwait
cld
jo
insb
jg
ds
cmp
jo
push
jo
sub
cmp
lret
mov
lret
jo
fists
xchg
jne
mov
pop
movsl
pop
push
adc
inc
aad
dec
das
xor
cmp
and
jo
sub
adc
mov
pop
jo
aad
mov
jg
mov
ja
mov
xchg
xchg
lcall
lea
pop
jo
mov
sub
andl
stc
inc
push
add
std
shll
filds
jo
inc
inc
xor
in
roll
enter
bound
jo
inc
pusha
mov
mov
cli
hlt
xchg
cwtl
inc
inc
mov
push
dec
and
cmp
mov
jbe
leave
mov
push
fcoml
and
cld
mov
stc
popf
sbb
fidivrs
rorb
jo
inc
push
xor
push
out
jo
or
sbb
pop
out
jo
inc
push
mov
jo
mov
or
pop
push
shrl
das
inc
nop
inc
fistl
jle
or
adc
pop
pushf
push
cld
add
jo
mov
jp
outsb
decl
cmpsb
adc
mov
lcall
int3
aas
movsl
mov
jo
int
in
cmp
jo
test
into
mov
push
mov
in
fldcw
aad
in
in
test
dec
ja
je
mov
fs
repnz
insl
lahf
sti
push
push
cwtl
lret
cmp
icebp
xor
jo
lea
lds
fbstp
mov
cmp
fiaddl
pop
jo
inc
xchg
flds
add
jo
sbb
ss
test
jo
jbe
popf
aas
in
jo
dec
push
pop
sbb
jo
or
sub
adc
add
add
jae
nop
jg
jo
push
xchg
cmp
rcrb
add
icebp
shrl
lahf
call
mov
dec
mov
mov
ja
push
inc
or
lock
jo
dec
push
jecxz
xchg
jle
insb
repnz
mov
push
scas
lret
mov
fadds
imul
bound
sarl
push
out
in
nop
mov
xchg
ret
jg
cli
xchg
les
scas
enter
xor
lea
clc
daa
mov
inc
mov
inc
cmp
jbe,pt
pmaxsw
insl
lods
outsb
adc
jo
dec
cmp
inc
mov
xor
stc
xchg
jg
fwait
in
mov
data16
lods
mov
jae
sbb
push
xor
jo
jge
sub
lcall
rolb
fnsave
aam
mov
dec
and
mov
and
jo
fs
shl
outsl
mov
xor
mov
mov
cs
fwait
sub
bnd
mov
jns
sbb
and
jo
adc
fnstenv
xor
stos
push
iret
jae
es
lock
adc
cmpb
enter
shll
dec
xchg
int
cmp
xor
jo
mov
sub
out
inc
adc
jo
into
sub
add
jo
out
push
jo
mov
sub
jo
stc
int3
pushf
in
mov
hlt
jo
inc
dec
mov
dec
cmpsb
stc
inc
lock
push
test
movsb
fimull
jo
outsl
jl
adc
fnstsw
loope
insw
mov
adc
jo
mov
xor
inc
pop
and
sbb
push
mov
lods
stos
adc
add
jo
aaa
pop
lahf
or
stos
testb
dec
pop
jnp
add
jg
sbb
inc
sar
dec
jae
mov
mov
fs
aas
in
push
ja
jae
inc
rcr
ret
add
nop
icebp
jp
mov
inc
pop
sbb
in
out
push
jle
lock
int
aad
jne
lods
loopne
cli
sub
mov
movsl
xor
aas
shlb
sti
fdivs
int
popa
cwtl
insb
ficoms
inc
aad
mov
inc
mov
sbb
jb
std
xor
test
mov
dec
pop
ss
orl
fmull
mov
push
jmp
jo
cmc
sub
cli
adcb
movsb
and
pop
jae
in
clc
jo
xor
ret
jle
dec
mov
das
ret
dec
mov
repz
xchg
sbb
sahf
je
dec
test
in
test
outsl
mov
pop
inc
daa
adc
les
dec
cmc
sub
push
cwtl
lcall
gs
xchg
ds
mov
sub
pop
adc
mov
mov
or
xchg
lds
test
mov
jl
cmp
add
call
sub
pop
mov
fistpll
icebp
jo
add
xlat
out
adc
aad
jnp
cmp
jo
push
xchg
ja
cmp
in
imul
pop
mulb
push
bound
jo
jp
xchg
jo
push
dec
add
jo
fnstenv
mov
fisubl
cmp
jno
or
ss
fldcw
jo
test
mov
int3
shr
push
lret
or
into
mov
push
pop
in
js
sub
pop
daa
xlat
xor
int3
inc
jo
iret
fwait
mov
leave
xchg
jno
enter
sub
inc
mov
nop
push
ljmp
jnp
mov
dec
jne
clc
and
outsb
adc
push
lcall
push
pop
repz
xlat
nop
in
mov
insb
mov
sbb
jg
push
psllq
mov
cli
xchg
jae
pop
gs
cs
out
jo
call
std
mov
out
mov
call
push
fucomp
mov
stc
into
pop
mov
adc
aam
inc
lods
pop
insb
loope
jne
fsubrl
pop
ja
cmp
gs
jg
mov
add
lcall
ljmp
lret
jo
into
aas
je
and
dec
mov
stc
aam
and
push
mov
daa
jo
sub
movsl
jne
das
std
add
inc
add
push
addr16
insl
dec
addb
cwtl
pop
sahf
out
test
and
sbbb
jo
rorb
loope
fsubrl
xchg
mov
inc
stos
jo
mov
notl
sub
repnz
imul
enter
mov
stos
repz
push
icebp
mov
dec
fldt
dec
dec
jo
imul
fcoms
jae
xor
dec
jl
and
jo
or
jnp
pop
jo
jg
inc
daa
int
push
arpl
rcr
jo
cmp
pop
inc
jge
loopne
sub
pusha
jae
inc
popf
ja
xor
jb
or
jg
push
testb
fwait
inc
aad
test
in
sbb
mov
gs
into
repz
bound
loop
int
int3
movsl
out
mov
push
hlt
test
sub
jl
dec
mov
mov
les
icebp
jo
or
jae
jo
jl
jge
outsl
ds
jo
adc
mov
pushf
mov
in
and
faddp
fwait
push
jo
cld
mov
or
pusha
push
inc
and
std
mov
call
aam
jp
test
mov
add
sub
clc
es
fs
stos
int3
jo
xchg
inc
out
hlt
movb
xchg
mov
out
adc
insl
pop
hlt
movsb
add
mov
dec
mov
mov
call
lods
xor
add
lcall
arpl
aaa
sub
das
push
push
jo
rcrb
jb
pop
xor
andb
and
lock
je
pop
lock
adc
test
insb
pop
divb
mov
cmp
adc
pop
jp
frstor
rol
mov
sbb
orl
mov
add
dec
idivl
jns
sbb
fsubrs
or
jg
ror
dec
inc
sbb
mov
jo
ret
or
sbb
out
repnz
sub
or
test
fistl
dec
jge
lock
mov
pusha
je
sbb
iret
xorb
jge
jo
imul
sahf
jo
push
pop
test
xor
icebp
insb
mov
mov
cmp
pop
imul
mov
mov
or
add
fcoml
jo
lock
mov
jp
xchg
mov
xchg
pop
cmp
push
jo
push
cmp
push
repz
fiaddl
popl
int3
adc
repz
stos
dec
jo
and
in
jo
adc
imul
je
loope
xchg
and
seto
bound
scas
ljmp
pop
insl
dec
mov
pop
ret
dec
xchg
push
repz
fcoms
test
mov
aam
jl
cmp
mov
push
gs
xchg
mov
imul
outsb
mov
push
popf
xchg
lods
xor
mov
in
stc
rcrb
sbb
sbb
pop
pop
in
enter
std
inc
out
in
and
jl
fisubrl
dec
jae
mov
pop
lds
jae
mov
dec
ret
dec
scas
mov
sbb
movsb
outsb
out
jnp
mov
mov
popa
lea
in
jns
jmp
cmpsb
sar
fs
jo
push
jmp
push
push
xchg
or
in
in
jo
ljmp
add
mov
mov
jo
aaa
enter
sbb
mov
jne
mulb
ja
add
adc
ja
mov
pop
dec
sti
lods
jo
cmp
push
ret
imul
rcrl
inc
mov
jg
loop
cmp
rcrb
cmpsl
push
mov
jmp
loope
jne
add
dec
jno
ja
cmp
scas
sbbb
mov
addb
jae
mov
lret
stos
sbb
pop
push
iret
imul
dec
pop
jo
testl
xlat
add
es
mov
lea
jo
and
push
jo
push
out
outsb
in
xor
mov
mov
and
xchg
enter
mov
out
adc
push
subb
mov
lock
outsl
sbbl
pop
add
outsb
int
mov
stc
pop
push
mov
pop
mov
and
mov
shl
mov
push
jnp
jae
shlb
inc
test
xchg
cmpsb
lock
les
mov
ds
aam
jo
stos
add
push
and
pop
mov
out
les
xchg
pop
pusha
mov
lahf
ret
adc
inc
insb
push
dec
ja
movsl
sarl
in
stc
out
insl
push
mov
pop
in
mov
loopne
ja
int
cmc
add
ds
and
testl
jbe
mov
xor
cmp
scas
jo
loope
jecxz
jge
scas
das
fs
sbb
jo
out
jbe
outsl
xor
jo
xsha1
cmpsb
dec
inc
jle
pusha
add
jo
out
fisttpl
jg
mov
pop
lahf
test
call
shrl
jnp
in
mov
sub
movsb
pop
mov
jp
sub
jo
ja
fldl
fildl
dec
arpl
push
insl
aaa
add
std
mov
stos
aad
test
int3
dec
xchg
das
add
mov
jns
repnz
pushf
jo
pop
fistps
out
sbb
fsubrs
out
or
cld
les
pop
xchg
or
xchg
jns
add
inc
mov
jo
mov
inc
aam
cwtl
scas
ja
inc
mov
loopnew
fimuls
fsubrl
enter
mov
pop
xor
daa
and
sub
das
xchg
pop
lret
xchg
fsubr
hlt
repz
xchg
rcrl
push
pop
inc
in
jle
imul
hlt
ja
icebp
mov
mov
sub
lods
push
in
mov
jne
hlt
stos
mov
xchg
sbb
jbe
adc
mov
mov
mov
or
rcrl
ret
aas
jo
cs
xor
mov
test
mov
scas
push
lods
adc
xchg
addb
or
or
insl
add
jb
or
into
xchg
cmp
insl
rcrb
sbb
shr
pusha
sahf
xor
sbb
bnd
and
xchg
jmp
ss
cwtl
pop
mov
shrl
in
sbb
dec
in
mov
and
cltd
inc
pusha
mov
test
jmp
xor
mov
xchg
call
scas
and
push
mov
jo
mov
stos
in
fcoms
out
jnp
mov
loope
jbe
mov
js
and
jo
inc
mulb
das
aam
lock
sbb
sbb
cmp
jecxz
inc
xor
data16
add
or
add
add
jnp
jo
fisubs
lret
fs
jo
xlat
jbe
into
pop
xchg
inc
jo
or
and
jae
push
jo
negb
shlb
lock
leave
fdivl
bound
xchg
or
cmp
icebp
rolb
lock
adc
push
dec
cmp
jge
xchg
jo
jp
shlb
imul
inc
sub
cli
inc
mov
enter
jo
popf
dec
or
hlt
cmp
insl
ss
or
lods
mov
jnp
xchg
bound
push
add
aaa
shlb
jo
fildll
inc
lods
mov
je
mov
cmpsl
lcall
pop
mulb
out
pop
leave
push
adc
sti
or
and
add
data16
aad
dec
in
test
outsl
lock
subl
pop
ja
jp
mov
push
stos
pop
fwait
cmp
or
dec
sbb
xchg
stc
jo
test
jns
fdivl
lods
mov
sub
sub
loopne
sbb
mov
mov
push
ss
dec
inc
jo
aad
ftst
andb
add
stos
pushf
mov
add
or
jp
test
jns
aaa
cmc
ja
push
cmp
pop
cli
jo
pop
inc
push
jo
or
mov
cld
mov
addr16
inc
mov
jp
mov
mov
int3
jo
data16
inc
and
fdivrl
and
pop
cwtl
out
jno
aaa
repnz
xor
mov
cmp
arpl
push
mov
inc
dec
in
ret
cmc
negb
push
jo
mov
inc
lods
fcomip
ljmp
pop
ret
jo
lahf
push
mov
inc
arpl
cltd
je
into
inc
lods
pop
jae
or
mov
js
jo
test
mov
jo
icebp
pop
jecxz
or
daa
jae
and
fdivrs
in
or
in
icebp
aaa
mov
xchg
int
inc
mov
push
pusha
cmp
jo
cld
iret
insl
add
fidivl
test
outsb
ds
jl
je
call
jo
ja
pop
add
mov
sub
dec
jo
insb
shl
in
jp
es
sub
stos
push
sbb
push
or
stos
sahf
xor
and
jae
adc
xchg
lcall
jl
xor
nop
dec
jo
repz
xor
shlb
jb
call
and
nop
jl
nop
iret
and
push
pop
mov
outsb
cltd
jno
xchg
sub
dec
test
inc
test
in
pop
sarl
insb
jne
and
push
mov
or
fdivrl
jl
jb
sbb
fnstenv
movsb
sti
xor
jno
test
insl
adc
leave
push
or
dec
jae
mov
sbb
cmpsb
mov
sti
add
icebp
mov
xchg
insb
jl
xchg
dec
mov
test
in
sti
and
xorl
jp
cwtl
add
jbe
push
mov
sbb
les
loope
inc
adc
add
jo
vpsllq
movsl
into
in
push
push
lea
mov
mov
js
dec
cwtl
call
sub
jo
push
paddq
sbb
fmulp
bound
cwtl
cmpxchg
and
xchg
push
xchg
jo
ret
dec
in
push
insl
cmp
pop
xchg
add
mov
sbb
call
sbb
adc
or
sbb
int
pop
mov
push
xor
mov
jno
addr16
test
push
pop
jo
fists
lret
adc
xorb
push
add
js
push
mov
lret
pop
dec
idivl
fimull
insl
lcall
mov
addr16
stc
push
incl
ja
cmp
add
lods
addr16
jne
lock
and
dec
xchg
jg
stos
pusha
das
sbb
mov
pushf
xorl
fadds
les
movsl
or
jo
add
xor
mov
jl
lods
ret
addr16
add
sub
and
and
xor
sbb
lcall
xchg
shll
in
out
rclb
inc
cmc
shrb
cmp
jo
das
gs
lea
mov
out
xchg
or
rcll
leave
mov
xor
imul
imul
inc
sub
jo
xchg
test
push
icebp
scas
das
imul
adc
scas
and
add
and
jae
int3
daa
pop
mov
divl
push
iret
mov
cli
fimuls
jmp
pop
jb
aas
xchg
push
lds
lods
mov
jo
les
popf
cmp
xchg
icebp
popa
jle
mov
jns
and
clc
sbbb
bound
push
lods
sbb
push
jo
lods
movsb
jmp
jo
mov
jb
mov
fs
lahf
jo
in
lds
jo
cmp
jne
push
jnp
into
pop
outsb
sti
inc
rclb
je
nop
add
loop
cmova
mov
jo
daa
jl
mov
xchg
cltd
xchg
dec
adc
mov
or
lock
jo
aam
test
jg
and
popa
cltd
inc
lds
push
jo
mov
cmpps
and
es
mov
adc
xchg
jnp
mov
xchg
mov
aas
in
xchg
push
xchg
repnz
and
mov
dec
shrl
jo
push
rcrb
clc
jo
cmp
push
cwtl
lock
ret
jb
outsl
mov
dec
sbb
mov
jo
pop
ja
xor
cmp
jo
scas
inc
cli
xor
jbe
cmp
rcll
adcb
cwtl
adc
jp
xor
and
sub
adc
mov
cld
pop
out
mov
inc
fcmove
or
shll
jnp
sub
or
jne
mov
xchg
push
sti
outsb
lods
leave
call
push
repnz
pop
fildl
jo
icebp
mov
and
push
shlb
je
fs
cwtl
mov
movsb
mov
mov
push
jle
jo
mov
out
add
aas
jecxz
mov
lock
add
mov
or
shll
loop
ljmp
orb
fwait
jo
sbb
add
jbe
int
enter
cmp
rcrb
idivl
xchg
and
orb
stc
fidivs
pop
les
scas
cmp
or
mov
mov
jmp
in
scas
pop
in
addr16
fiaddl
jo
mul
pusha
orb
test
sub
movsb
and
mov
mov
and
hlt
push
enter
lods
ljmp
xor
int3
push
repz
xchg
shll
sti
jae
mov
fcomps
dec
insb
and
insl
loopne
hlt
js
dec
push
jne
jnp
lock
inc
aam
cmp
mov
js
xor
adc
cmpsl
fs
mov
inc
sbb
jo
jno
mov
and
sbb
fstps
or
ja
fcoms
lret
or
es
jge
xor
stc
and
mov
adc
mov
mov
jo
mov
sahf
sub
inc
jo
fnstcw
test
push
mov
hlt
push
inc
dec
pop
adc
mov
filds
or
push
cld
push
inc
dec
aas
mov
outsl
jo
pop
pusha
lcall
xchg
cmp
addb
jne
push
test
xchg
pop
xchg
jae
or
test
rclb
jo
arpl
lret
mov
fsubrl
aad
mov
add
xor
mov
adc
jg
jo
aad
mov
mov
int
scas
xchg
xchg
mov
mov
add
jo
es
std
mov
leave
jo
inc
aaa
popf
rcll
outsb
vmovdqu
nop
fcomi
in
mov
cmp
jo
insb
jle
push
bound
push
in
stc
pop
int3
jno
insl
fldenv
dec
pop
inc
fimull
fs
lock
jmp
xchg
inc
xchg
jo
or
inc
test
or
aas
loope
andb
fldcw
ljmp
rcr
and
pop
cltd
cmp
and
sar
scas
jne
mov
adc
in
or
xchg
call
pop
mov
leave
lods
cmc
lds
and
xchg
lret
xor
fsts
mov
pop
cmpsb
mov
push
jo
in
stc
lahf
aad
xchg
dec
hlt
shll
xchg
cmpsb
inc
jo
test
lock
out
cmp
pop
rolb
negb
imul
fcmovu
adcl
pop
ret
jo
adc
pop
pop
dec
pop
jo
out
add
cltd
scas
ja
rcrl
lock
push
into
shlb
icebp
in
neg
pop
xchg
jo
xchg
add
sti
fists
ds
mov
jo
lods
aas
add
imul
repnz
dec
jbe
or
sbb
jnp
dec
xchg
jo
adcb
and
movsl
jo
pop
lcall
cmpsb
test
push
cmp
mov
xchg
outsb
jo
mov
jbe
add
ss
mov
lock
jle
jo
mov
dec
dec
movsl
jo
mov
or
add
int3
dec
lea
mov
push
daa
stos
in
jo
mov
xchg
jae
or
jle
inc
push
or
xchg
jo
jecxz
mov
out
xchg
inc
jns
in
leave
inc
cmpl
pop
lods
add
sbb
dec
xchg
das
sbb
adc
shrl
jo
pop
mov
mov
imul
out
jl
push
add
mov
cmp
jo
lods
xor
mov
lds
push
inc
popw
jp
outsl
insl
and
enter
mov
sub
jnp
daa
jo
xchg
xchg
xlat
xchg
ss
mov
subb
mov
test
jl
sti
inc
in
test
jo
pop
or
jo
dec
mov
lahf
add
outsb
jo
mov
mov
arpl
dec
push
mov
je
addb
xchg
mov
mov
jle
mov
mov
fs
imul
push
scas
sub
sub
mov
xchg
jae
jmp
mov
xchg
fcmovb
pop
mov
or
or
mov
dec
int3
das
and
mov
cmpsb
or
jne
lods
fsubl
lds
insl
je
mov
ret
xchg
jo
fwait
xchg
pop
jg
and
xchg
lock
jo
mov
sub
mov
repz
jbe
mov
jo
dec
push
das
cmp
fimull
jae
mov
packsswb
cmpsb
cmp
sbbl
ret
pop
lret
jge
fists
pop
adc
cmp
xor
jo
movb
ja
movsb
test
sahf
xchg
pushf
jns
xchg
insb
stos
or
negb
sub
xor
pushf
mov
add
fildll
mov
sbb
aas
pop
push
sub
mov
jp
jb
cmp
insb
das
push
jo
out
lcall
jge
sbb
dec
mov
jle
fwait
or
jmp
sti
xchg
dec
mov
lret
sub
or
iret
fwait
mov
lods
inc
out
cli
dec
xor
pushf
mov
xchg
cmp
ds
test
jg
jns
inc
outsb
cmpsb
xchg
out
cmp
repz
and
rorb
push
inc
jp
inc
imul
mov
insb
mov
out
jne
add
lock
push
stos
in
loop
popa
jle
jo
adc
jbe
jle
xchg
add
jo
sub
inc
lcall
sbb
jmp
mov
out
add
xchg
pusha
sahf
jo
sub
jnp
rorb
sub
cltd
stos
aas
push
inc
jae
mov
shr
inc
jo
mov
mov
ja
fiaddl
in
dec
filds
lods
push
jae
or
out
xchg
dec
and
in
data16
cs
inc
fisttpll
mov
stos
lret
mov
jp
mov
push
push
lods
inc
movsl
fwait
sbb
test
inc
cltd
jo
push
es
lahf
fidivl
mov
mov
dec
hlt
pushf
insb
jle
jo
cs
sbb
pop
movsb
call
out
jne
lock
dec
scas
jo
add
or
lahf
pushf
insb
sub
push
cmp
nop
insl
je
xor
sub
imul
mov
sub
lock
nop
xchg
shll
dec
mov
dec
test
xor
and
cmp
pop
or
outsb
aas
scas
mov
inc
jo
out
sti
cmp
cmp
pushf
cmpsb
push
dec
pop
push
push
pop
sub
call
orl
repz
pop
add
inc
xor
xor
fstl
pop
xor
sub
cmp
or
xchg
movsb
lds
xor
or
mov
sub
ja
mov
daa
sbb
xor
outsl
add
stos
fnstsw
inc
pop
jnp
sub
pop
mov
sub
mov
cmp
call
pop
adc
jo
mov
mov
or
adc
adc
call
mov
scas
lock
mov
xchg
jo
mov
hlt
jo
adcb
push
das
popf
dec
jo
sub
push
sbb
jnp
push
sti
jo
or
pop
jge
ljmp
or
jo
int3
das
xchg
sbb
ret
xchg
jae
lret
pop
dec
push
xchg
jbe
popf
mov
mov
divb
shrb
out
inc
test
jae
and
mov
stos
test
xchg
jge
repnz
fsubl
cmp
pop
or
test
push
dec
clc
add
sbb
mov
repz
aas
insb
into
stos
lock
or
stos
call
push
arpl
std
push
sub
jae
sti
xor
stos
adc
pop
push
mov
mov
xor
sbb
cli
jo
adc
push
daa
mov
inc
loop
inc
mov
xchg
inc
sahf
mov
xchg
imul
jo
and
xlat
push
jae
sub
clc
and
xchg
lds
daa
pop
int
push
or
mov
sbb
push
dec
dec
jnp
mov
sbbl
add
xor
pop
rcrb
adc
lret
pop
mov
xchg
dec
or
das
jnp
aas
je
cmp
jle
out
fdivl
jo
sbb
xor
mov
sbbb
pop
movsl
mov
pop
sub
test
pop
inc
jo
mov
movsl
sbb
add
lods
mov
xchg
cmpsl
fs
mov
loop
aaa
sbb
cli
mov
jne
cli
mov
subl
mov
jg
jp
adc
or
jmp
dec
xchg
out
pop
lahf
push
pop
mov
ffreep
sti
mov
ror
inc
and
mov
in
ds
rcll
sti
stos
add
ret
jo
push
mov
mov
jo
mov
lods
and
test
jne
xchg
arpl
jo
int
in
insl
popf
xor
mov
xchg
sbb
outsl
aaa
cs
lar
stos
iret
lods
mov
testl
add
pop
sahf
ja
xchg
mov
ficomps
add
movl
mull
je
jl
mov
xorb
inc
jo
lea
or
jecxz
dec
jo
andnps
mov
dec
mov
lds
testb
add
aam
mov
pop
sbb
jb
ds
es
dec
jle
dec
mov
adcl
cmp
test
imul
mov
sub
inc
or
push
call
fwait
insb
std
fsts
xor
push
hlt
fistl
push
inc
dec
jo
aad
lret
scas
mov
mov
lahf
mov
xchg
xchg
sub
mov
js
pusha
fs
insl
insb
push
push
pop
pop
inc
inc
xchg
dec
dec
jae
xor
cmp
and
sub
ja
sbb
add
or
hlt
pop
clc
cld
loopne
push
call
push
rol
enter
mov
lock
nop
xchg
cwtl
pushf
addb
insl
jno
jns
mov
dec
push
push
pop
cmp
sub
sbb
or
std
xor
add
jo
loope
jmp
push
rol
lods
mov
mov
popf
mov
cmc
xchg
xchg
cltd
insl
mov
mov
jb
outsb
jp
bound
dec
hlt
mov
inc
dec
add
cmp
and
sub
jle
insl
push
sbb
add
or
xchg
repnz
fsubp
out
into
mov
push
icebp
test
scas
filds
xor
repz
jo
and
push
xchg
out
jo
iret
rcl
push
aad
arpl
sub
pop
dec
mov
ljmp
jg
and
jo
clc
jne
lods
lahf
or
aas
push
add
test
inc
xor
xor
and
jp
ja
jo
data16
and
jo
pop
xrelease
shlb
xchg
addr16
stos
mov
xor
mov
inc
ja
lods
ret
mov
add
arpl
lahf
movsb
outsl
mov
jo
repnz
or
imul
sbb
repz
into
enter
jo
add
pop
jo
xchg
out
add
iret
jo
das
lret
sub
pop
push
jle
add
adc
add
das
ret
test
lods
out
jae
adc
fmull
rolb
fists
out
jo
cltd
pop
dec
adc
adc
jo
fldt
scas
xchg
insl
fbld
das
jno
sti
loop
sub
jg
outsb
inc
xor
dec
mov
and
in
cmp
mov
jp
jle
clc
pop
or
jo
negb
jo
popf
inc
adc
lds
addr16
mov
fwait
pop
out
pop
scas
add
push
add
cmpsb
pop
repnz
pop
cmpl
incl
adc
jle
gs
repz
insl
imul
mov
idivb
cmp
jmp
lret
mov
iret
ja
sahf
stos
and
mov
pop
mov
or
sbb
sbb
pminub
rorl
hlt
jo
adc
aam
pop
cmpsb
mov
fsubl
cld
insl
cmp
addl
int
stos
test
outsb
mov
jo
aas
icebp
sub
push
jo
inc
ja
outsb
fs
jp
scas
das
or
jo
adc
pop
jo
out
mov
mov
inc
ja
pop
pop
test
movsl
jp
ljmp
out
popf
into
inc
pusha
pushf
dec
jp
adc
sub
and
push
or
jae
mov
adc
lods
pop
lods
es
jno
jae
or
mov
pop
sub
push
enter
insl
movsl
push
lds
bound
pop
scas
pop
cmpsb
les
cltd
or
loopne
adc
into
mov
mov
es
cmp
aaa
lods
outsl
movsb
jp
jo
push
into
rol
sbb
test
push
cltd
inc
pop
jo
xchg
scas
lsl
mov
cmp
into
jae
insl
movsl
das
es
das
pop
sbb
les
and
cltd
xchg
lret
jno
fildl
dec
xchg
lea
cmc
push
ds
sbb
add
fwait
cwtl
adc
jle
jo
lahf
jne
mov
mov
lods
out
mov
or
sbb
sub
cmp
xlat
mov
stos
stos
mov
jmp
sti
jge
pop
sub
pop
imul
xchg
jg
mov
mov
out
out
push
mov
cmc
xchg
xchg
and
jl
sti
mov
sub
test
mov
stos
jge
int
mov
cmp
mov
mov
mov
lret
inc
gs
pop
adc
sbb
pop
ffreep
nop
push
nop
cltd
test
cmpsl
movsl
divb
sbb
cmc
es
incl
mov
pop
jg
enter
shlb
mov
cmp
lcall
stc
outsb
out
leave
les
outsb
iret
xorl
mov
stos
popf
nop
punpcklwd
cwtl
jge
jo
xor
jmp
push
jecxz
mov
mov
outsb
pushf
mov
or
cmp
push
aas
xor
repz
dec
pop
jbe
fdivrs
add
pushf
fs
mov
cltd
stc
mov
pop
pop
imul
xor
addr16
cmpsb
out
pushf
in
mov
mov
fisubs
rclb
add
xchg
xor
adc
nop
sti
push
push
inc
pop
cmpsl
pop
or
popf
out
mov
add
inc
and
aaa
add
adc
jo
pop
xchg
and
pop
jo
mov
out
dec
imul
daa
enter
jo
insb
xor
push
push
int
jo
sti
les
jge
movsl
ja
or
cmp
insl
sti
add
ds
pop
insl
cmc
mov
dec
ficoms
jo
xchg
out
ss
mov
insl
sahf
mov
pop
sub
mov
mov
add
xorb
pop
mov
in
and
loopne
inc
cmp
xor
push
push
sub
sbb
jo
sub
and
inc
mov
movsl
cmp
out
jp
repz
cmp
fwait
stc
sarl
bound
test
pushf
pop
jo
inc
cltd
or
ficomps
mov
dec
int3
ret
lds
mov
arpl
test
mov
dec
inc
jp
cmc
add
in
jo
out
and
mov
push
lea
mov
addr16
add
inc
ja
push
add
mov
not
mov
inc
push
stos
insl
xor
inc
pop
pop
in
adc
pop
jae
cs
dec
and
int3
aad
jne
nop
popw
lea
mov
mov
xchg
jmp
jle
ja
cmp
fimull
push
movsl
in
icebp
jo
xchg
mov
xchg
inc
and
movsl
int3
jns
cmpsl
jo
lods
je
in
jno
cmp
jo
jo
push
fmuls
cmp
jle
push
into
inc
insb
mov
mov
mov
jno
arpl
shll
out
arpl
insl
mov
add
mov
xchg
xor
jo
push
mov
push
sbb
inc
cmp
pop
inc
pop
aaa
mov
pop
or
jo
repnz
loope
pop
bound
int3
outsb
pop
pop
push
adc
mov
ret
jo
sub
insb
stc
and
mov
fdivs
movsl
jo
lods
jecxz
das
loop
sub
fwait
xchg
or
fistpl
push
cmc
sub
jbe
test
test
fwait
lods
rclb
push
sbb
stos
insl
jbe
and
lahf
mov
das
xchg
insl
test
lds
not
pop
dec
cmc
test
das
outsb
ss
movsb
pop
xor
or
jo
repz
mov
sbb
movsb
test
xor
xchg
jo
pushf
push
test
fs
cmp
repnz
cwtl
or
adcb
fwait
inc
add
pop
ja
jno
or
stos
out
stos
lock
dec
loopne
jo
insb
jnp
scas
push
push
and
das
mov
inc
inc
xlat
in
insl
add
test
lock
sbb
add
push
add
pop
mov
fwait
popa
mov
xlat
cmp
jo
sub
jmp
or
push
dec
es
in
imul
std
dec
or
add
and
ret
je
mov
xchg
adc
xchg
or
xor
fildll
pop
andb
jns
mov
ss
cmp
pushf
pop
test
jge
lcall
push
jnp
sub
sahf
testl
test
dec
pop
cmp
pusha
xchg
adc
jo
mov
nop
jo
push
into
cmp
ret
mov
lock
lret
stos
adc
je
mov
fst
movsl
pop
lea
or
jo
ret
xchg
pop
jo
jbe
jle
movsl
lahf
and
inc
into
popf
cmp
mov
sub
out
lock
mov
mov
jae
cmp
movsl
shrb
cmpsb
xor
sbb
mov
or
jecxz
lods
mov
jo
jecxz
or
jo
pop
int
stc
dec
sub
mov
push
jecxz
dec
push
dec
mov
scas
lock
pop
jo
shl
inc
pop
orl
shll
cmp
adc
jae
xchg
lretw
sbbb
stos
inc
fildl
fcmovb
sti
adc
mov
ret
jo
arpl
mov
in
mov
mov
or
cmp
xor
add
mov
xor
lock
and
test
dec
xchg
pop
out
fisttpl
jo
push
lret
mov
arpl
mov
jb
mov
mov
mov
push
movsl
sub
test
xor
jne
cltd
lret
int3
clc
push
sbb
imul
repnz
cltd
pusha
xchg
jb
pop
xchg
jle
pop
sub
adc
sbb
addb
les
inc
and
mov
pushf
in
jle
mov
scas
xchg
jl
cmp
mov
sbb
jge
stos
repz
add
out
xchg
fwait
mov
lock
cld
jbe
and
scas
xchg
sbb
push
jl
cmc
inc
lock
pop
rcrb
cltd
out
cld
out
and
push
xchg
or
mov
or
insb
jp
mov
push
lds
stos
push
arpl
jbe
or
mov
push
clc
jo
mov
mov
inc
pop
leave
adc
pusha
mulb
jle
inc
faddl
fwait
mov
fidivrl
mov
cmp
xchg
cmc
js
jo
and
xchg
sbb
jo
mov
test
cmp
loopne
movsl
jo
pop
nop
mov
out
lds
pop
rcll
lea
dec
xchg
lock
mov
inc
pop
fstpt
jo
mov
lret
cmp
ja
adc
xchg
hlt
inc
xor
fisttps
scas
roll
add
inc
cltd
ss
push
mov
loope
jmp
mov
cmp
cli
xchg
mov
jae
cmpsb
push
xlat
test
mov
daa
mov
push
dec
les
enter
mov
lods
jo
ss
or
rcrl
int3
je
data16
pop
lock
cmp
or
mov
nop
or
jo
inc
sbb
in
sti
mov
mov
out
and
pop
mov
int3
popf
rolb
inc
imul
mov
mov
pop
jnp
enter
add
inc
mov
xor
pop
cmp
push
fisubrs
mov
popa
push
lock
push
jns
cmpsl
mov
sub
aad
dec
jae
push
pop
dec
cmp
mov
repz
scas
feni(8087
cmp
icebp
popa
jo
inc
dec
inc
jb
mov
add
dec
sub
jo
mov
jl
push
pusha
inc
jo
ds
lds
push
mov
cltd
jnp
out
mov
push
xchg
mov
insl
sbb
xchg
faddl
pushf
cmc
les
dec
mov
jbe
dec
ss
adc
pop
xchg
stos
sbb
in
int
cmp
sub
fidivl
xchg
movsl
mov
jmp
pop
or
jo
xchg
repnz
int3
inc
sub
xchg
lret
cmp
fcompl
mov
into
cmp
pushf
xchg
insl
mov
mov
or
call
imul
lcall
rolb
in
cltd
lods
stos
mov
pushf
adc
cmpsb
outsb
xor
inc
inc
sub
sbb
orl
scas
addb
ds
and
jo
rcll
jp
jle
imul
test
mov
jo
xor
mov
cltd
jmp
ja
lds
pushf
adc
pop
in
insl
inc
or
sbb
add
push
mov
sbb
cmp
sub
loopne
jo
nop
mov
pop
xor
dec
jo
lods
cmp
les
call
push
mov
pop
sbb
push
mov
out
pop
cmc
pop
das
mov
out
cmp
lret
icebp
adc
mov
dec
dec
add
jg
jmp
mov
inc
inc
leave
out
pop
testb
cmpb
cmp
xor
mov
lock
mov
jnp
and
mov
mov
loop
loopne
insl
xadd
enter
inc
std
shll
pop
fs
mov
fcmovb
sub
mov
dec
idivb
sbb
inc
fnstenv
jle
cmp
jne
in
jo
js
int3
and
fidivs
aam
aad
repz
rcr
jge
iret
jle
jo
scas
jb
cmpsl
push
sub
enter
dec
mov
pop
fisubrs
xchg
std
sub
and
xorl
in
insl
mov
push
fildl
xor
test
cmp
and
nop
cmp
test
fwait
jg
adc
out
ja
sub
into
mov
cmp
cld
jg
ds
das
sbb
ret
icebp
push
cmp
into
mov
add
or
jae
mov
adc
ja
jg
ds
loopne
sub
inc
add
int3
mov
in
repnz
cmp
movsl
or
mov
sub
mov
or
lahf
dec
gs
std
lods
int
xchg
lods
adc
mov
add
packuswb
pop
sti
mov
mov
lods
mov
mov
sbb
dec
or
jb
jo
mov
mov
in
cmpsl
and
jle
jo
loope
xchg
xor
lahf
dec
jo
mov
fdivr
addl
imul
and
lea
push
mov
mov
mov
push
xchg
adc
mov
mov
add
fwait
test
lods
adc
jo
testb
mov
inc
leave
push
aad
jo
dec
xor
mov
in
pop
push
jp
mov
ja,pt
movsl
pop
sbb
cmpsl
jo
jb
mov
imul
cs
or
and
enter
mov
lock
lahf
mov
push
jo
dec
loopne
fstpt
fbstp
repnz
iret
push
jae
outsb
lret
je
mov
pushf
orl
out
sarl
cmp
mov
add
insb
cmp
inc
movsl
clc
cmpsb
ljmp
push
data16
jmp
aam
sahf
dec
mov
fidivrs
jo
loop
jmp
mov
rorb
mov
sbb
pop
jo
push
xchg
mov
inc
cltd
insl
dec
arpl
sbb
jae
das
lds
pusha
jnp
fdivrl
sbb
loopne
jmp
dec
jo
jge
ret
cmc
insl
outsl
les
xchg
ja
insl
repz
mov
cmp
push
addr16
jo
lock
scas
push
enter
aas
fdivl
ds
cmpsl
jo
push
jne
lock
mov
sub
jmp
aad
in
sbb
dec
dec
mov
lock
jo
fstps
adc
pushf
fmul
sbb
nop
sbb
xchg
loopne
adc
inc
shrb
in
push
adc
jo
jae
lahf
jb
dec
nop
repnz
cmpsl
inc
mov
inc
insb
pusha
aas
pop
jo
mov
mov
mov
and
imulb
mov
inc
data16
loope
inc
jo
ror
lret
dec
insl
shrl
lock
adc
jo
in
inc
popa
rcrl
rorb
jo
cwtl
and
push
rcrl
jo
cmp
hlt
ret
or
call
push
sub
rclb
cmpsb
lcall
ja
lret
dec
mov
push
aam
xchg
icebp
inc
push
test
or
jecxz,pn
or
mov
push
ss
fimull
ja
and
mov
dec
add
ljmp
mov
movsb
jb
jae
data16
loop
inc
nop
cmp
pushf
or
mov
cltd
xor
movsb
jo
xlat
and
cmc
adc
jo
sbb
imul
fucomip
movsl
mov
enter
mov
mov
pop
mov
xchg
mov
push
dec
es
xor
notb
mov
mov
add
daa
pop
movsb
and
xorl
sbb
mov
push
in
cld
sbb
in
jne
cmp
and
insl
mov
std
add
fiadds
adc
mov
or
push
movsb
inc
bound
jo
sbb
pop
sub
stos
imul
flds
xor
jg
xor
dec
lds
jl
lea
in
cmp
test
push
inc
xchg
mov
ror
je
jecxz
mov
out
jo
inc
sarb
dec
jo
aad
adc
arpl
out
add
das
insl
jecxz
lods
inc
fwait
inc
xchg
lret
mov
jae
into
jl
test
jge
add
push
lock
das
sbb
jbe
jecxz
add
insb
xchg
push
xor
and
scas
fnstenv
pop
lcall
add
dec
mov
add
icebp
mov
ljmp
in
pop
pop
add
pop
mov
ja
push
into
dec
adcb
xchg
lods
divl
icebp
out
scas
in
lods
in
and
jnp
xchg
mov
pushf
xor
shrl
mov
mov
insb
inc
cmp
pop
out
jnp
shlb
jle
push
and
pop
add
adc
sub
add
enter
push
dec
iret
jno
aad
dec
pop
lock
call
insl
mov
xchg
xchg
xor
push
push
insl
shll
add
add
cmc
arpl
pushf
mov
fidivs
imulb
push
in
cmpsb
jae
add
test
push
push
jl,pn
fwait
jmp
jo
inc
pop
xor
inc
push
jle
xchg
jo
xchg
push
ss
shll
push
or
jo
xchg
mov
fnstenv
pop
jo
cmpb
or
rol
lods
popa
sbb
ret
aad
insl
fdiv
out
sbb
lcall
mov
cs
xchg
shll
lea
dec
sbb
mov
xchg
jo
popf
dec
fadds
imul
jo
mov
inc
jnp
rcr
jo
icebp
aam
mov
sahf
or
sbb
push
jo
movsl
xor
sub
mov
je
inc
sub
call
insl
jmp
in
test
fidivrl
lods
mov
adc
push
dec
jnp
lock
arpl
adc
sarl
in
or
insb
jb
sub
loop
cld
ds
adc
mov
insb
out
pop
xchg
stos
jg
sbb
cwtl
jo
std
inc
ret
pop
cld
jo
mov
out
jmp
jo
mov
das
outsb
cmpsl
out
xchg
jo
xchg
movsl
aad
cltd
popa
adc
adc
fcomps
cli
aam
add
cmpsl
jae
insb
mov
adc
sub
dec
sbb
xchg
add
mov
xor
mov
jo
mov
fwait
add
inc
push
aaa
cltd
cmpsl
loop
pop
daa
lods
fs
pop
popf
in
and
or
std
sbb
jo
scas
aaa
movsl
sbb
or
and
cmc
or
and
pop
stc
jo
ljmp
jo
mov
cltd
jo
jl
into
pop
test
jmp
push
jo
mov
test
jo
pop
popa
fcmovnb
dec
jo
mov
mov
jo
sub
jnp
pop
out
push
jo
cmp
and
dec
or
jno
imul
jo
rorl
jo
add
iret
das
fldcw
insl
ret
cmp
push
repnz
fadds
add
cmp
and
push
jo
dec
xchg
fsts
jo
orl
jo
cmpsb
in
adc
in
fcoms
mov
lds
mov
cmpsb
shlb
push
xchg
sahf
jecxz
insl
lret
and
inc
mov
adc
lods
jo
mov
fdivrl
aad
dec
out
inc
sub
test
mov
sti
mull
clc
repnz
add
sbbl
int
hlt
jo
add
aad
adc
imul
or
ja
mov
mov
or
repnz
mov
push
outsb
push
ds
mov
jo
sahf
mov
movsb
stos
ljmp
pop
fs
cmp
das
adc
lock
sbb
jo
aaa
fs
jo
add
mov
xchg
jns
data16
mov
and
imul
adc
in
jo
rclb
inc
dec
sub
mov
clc
or
jae
jb
xor
mov
sbb
test
xor
push
mov
xchg
push
insb
out
sbb
inc
sub
mov
dec
cld
mov
or
jo
out
xchg
aam
lds
ja
bound
aaa
int3
pop
lock
dec
jo
inc
divb
jo
mov
jae
ja
clc
outsb
daa
shlb
int
enter
adc
xor
pop
sub
cmp
hlt
add
dec
dec
in
filds
pushf
test
or
push
adc
mov
or
repnz
call
pop
cs
fwait
jo
mov
stos
mov
rolb
jg
test
and
les
stc
push
mov
addl
aas
pop
dec
pop
adc
pop
jo
add
movsl
dec
jo
shlb
xchg
jo
clc
pop
dec
pop
xlat
in
sbb
jb
int3
ljmp
movsl
mov
scas
add
out
xchg
mov
xchg
jae
test
cmp
subl
mov
mov
outsl
sub
lods
push
insb
adc
sbb
xchg
dec
mov
push
sbb
loopne
insl
sbb
test
ja
inc
jo
orl
pop
push
in
int3
adc
sbb
push
ljmp
das
cmp
rorb
mov
lock
out
jo
xchg
or
jo
or
or
in
jo
xor
fisttps
js
add
pop
test
jo
in
jbe
jle
test
add
or
pushf
dec
jo
cmp
mov
add
jo
jl
les
jne
push
subb
jae
cmc
adc
xlat
je
jl
andps
xor
pop
fucomip
js
in
mov
push
xchg
dec
jbe
ror
and
inc
jp
cmp
rep
mov
sbb
movsb
sub
xor
ret
dec
xor
push
push
sahf
push
jns
lods
mov
inc
insl
mov
hlt
cwtl
sbb
adc
dec
insl
jns
cwtl
xor
popf
imul
cmc
test
pop
iret
and
xor
inc
ds
mov
sub
mov
adc
insb
adc
add
xor
push
push
pusha
repz
mov
mov
pop
scas
push
sbb
mov
aam
arpl
jno
lods
cmp
push
lret
nop
jo
into
ja
xchg
ljmp
fwait
rorb
push
out
nop
jo
mov
aaa
dec
lods
and
das
inc
inc
pushl
addr16
rclb
aas
xchg
gs
test
jo
sbb
mov
mov
mov
cli
div
xchg
push
xchg
xor
insl
idivb
xchg
and
jae
es
or
jle
jne
adc
pop
ja
sahf
and
test
jo,pt
mov
mov
mov
cmp
adc
outsb
lods
popf
fs
mov
stos
jo
xchg
stc
clc
cmp
and
scas
jo
mov
ss
mov
adc
sbb
mov
int3
adcb
mov
outsb
fs
test
cli
and
push
jae
xor
call
imul
fidivs
loopne
mov
dec
pop
call
jno
mov
iret
jecxz
sahf
scas
sbb
mov
pusha
sti
dec
pop
mov
sub
insl
xor
loopne
xchg
push
lock
adc
jmp
inc
mov
fbstp
lcall
in
jp
ja
arpl
lea
lcall
jb
cltd
nop
jo
addr16
mov
mov
jae
std
jmp
mov
lret
sbb
sar
popa
or
testb
xchg
bound
push
lock
les
mov
orl
clc
mov
std
pushf
push
xchg
lock
cld
add
int3
arpl
mov
pop
dec
pop
xchg
in
dec
dec
jo
es
jecxz
adc
cs
cmpsl
xchg
cmpsb
push
imul
dec
inc
lds
jo
in
in
nop
push
adc
out
xchg
icebp
pop
mov
sbb
jmp
pop
dec
push
bound
imul
mov
hlt
cmc
out
push
repz
xor
sub
lock
xchg
jae
inc
imul
insl
fwait
pop
xchg
fadds
mov
or
repnz
push
pop
add
jmp
loopne
jo
jnp
xchg
bnd
outsl
bound
fistps
pop
pushf
add
rcl
shl
daa
test
sub
xlat
pushf
ds
jo
adc
loop
fisubl
jo
cmp
xchg
inc
aas
push
lock
push
cmpsl
jnp
inc
ljmp
jmp
sub
enter
jo
inc
ret
sbb
jnp
or
dec
jo
mov
addb
lret
pop
xchg
push
call
push
mov
jmp
and
jmp
adc
jp
lsl
ja
loopne
ja
lret
and
or
insl
shrb
push
sub
add
xchg
mov
jo
jl
mov
shrl
jo
gs
push
pop
adc
jmp
mov
push
aas
andb
adc
xchg
jp
cmp
add
sbb
mov
es
lods
fists
dec
adcl
ds
push
enter
push
dec
jmp
fstpl
mov
jo
sub
or
pushf
and
mov
pop
imull
xor
xchg
pop
adc
jae
mov
jnp
adc
sub
add
sbb
cmp
imul
lea
lcall
out
add
lahf
mov
jo
sahf
mulb
in
mov
xchg
xor
or
into
adc
imul
push
push
or
repz
push
enter
or
das
jmp
sub
jbe
mov
push
rclb
jo
or
lds
ja
adcl
lcall
dec
sub
inc
mov
push
and
call
pop
xor
ss
xchg
in
jo
xor
mov
add
mov
add
jae
adc
lock
mov
das
jl
pop
fdivs
sbbb
pop
cmp
sti
jo
loopne
jmp
jo
leave
mov
ljmp
cli
mov
cmp
je
aaa
inc
pop
jno
loopne
pop
mov
xor
insl
test
fs
mov
xchg
jno
mov
push
xchg
mov
jmp
aas
mov
ja
or
inc
pop
lock
sbb
jo
fidivs
xor
jl
cwtl
sbb
clc
pop
jl
fnstcw
scas
xor
push
hlt
push
cmp
and
shrl
cmc
cmp
push
repz
pop
or
push
xlat
jo
pop
mov
dec
int3
or
pop
or
divl
jp
hlt
jl
xchg
xor
push
insb
jmp
jb
add
pop
pop
sub
xchg
leave
jo
or
or
std
cmpsl
je
mov
adc
mov
outsb
mov
or
mov
sbb
leave
inc
outsl
push
cmp
loope
roll
cwtl
dec
imul
test
movsb
fildl
xchg
jo
flds
xchg
jbe
test
mov
pop
sub
jno
bound
xor
out
push
shlb
inc
cwtl
popf
lcall
jle
push
loopne
push
jp
inc
aaa
push
jae
and
int
mov
xor
sbb
cmp
add
jmp
jl
insl
mov
test
xchg
xor
jo
sbb
jl,pt
movsb
or
jo
mov
pop
jo
rclb
xchg
ja
lods
xchg
cmp
jae
roll
mov
imul
mov
ja
out
sbb
jae
adcl
xor
jo
add
imul
push
movsl
aas
cmp
and
gs
inc
jo
push
jmp
std
loope
jo
stos
inc
imul
outsl
sbb
icebp
jo
lea
in
mov
jo
cmp
cmpsl
jo
pop
xchg
mov
inc
mov
cs
push
xchg
cld
ret
jno
xor
call
pushl
call
xchg
outsl
das
mov
loope
jo
inc
pop
push
sbb
xchg
dec
xchg
add
aad
cwtl
inc
xor
cmc
xorb
fdivrp
divb
mov
ljmp
mov
cli
arpl
mov
adc
shlb
inc
cwtl
out
jge
pop
inc
enter
dec
mov
shll
dec
les
sahf
jo
jge
push
cwtl
cmp
in
xor
pop
jl
pop
add
jo
cmp
lods
mov
fs
jle
mov
decl
add
jo
loop
xchg
mov
or
pop
jecxz
dec
gs
pop
dec
inc
push
mov
jo
and
add
jl
loop
mov
or
fwait
jo
cltd
test
rorb
rep
mov
lret
jbe
cmc
adc
addr16
mov
jo
mov
jo
add
push
push
inc
jo
pop
mov
mov
xchg
lods
sti
lcall
jae
jns
cmp
cli
jg
push
insl
sub
xchg
rorb
push
push
mov
repz
mov
mov
and
lret
sbbb
inc
pop
cld
push
popa
push
jo
stc
push
faddl
sbb
xor
mov
mov
adc
sbb
into
jo
test
mov
jo
in
loopne
xor
or
inc
and
jb
inc
cmp
push
mov
enter
fnstenv
sbb
pop
mov
jg
lcall
fstpt
addr16
fidivrl
out
jecxz
jno
lock
jo
sub
push
and
mov
sub
mov
adc
mov
hlt
dec
je
mov
xlat
inc
adc
xor
js
add
mov
movsl
cmpsb
nop
sti
dec
mov
xchg
mov
xchg
cmc
cmpsl
fs
mov
jle
xchg
rclb
cmc
test
imulb
mov
lods
movsl
je
cwtl
xchg
fildl
sti
or
lock
sbb
adc
push
sub
jecxz
data16
in
dec
cwtl
cmpsl
aad
jo
popf
push
loopne
jo
cmp
sti
jg
or
sub
mov
rcrl
dec
add
lock
jmp
cmp
jo
adc
xor
add
xchg
mov
and
or
push
arpl
sbb
inc
ja
daa
movsl
jo
ret
lock
ja
data16
cmc
sbb
xlat
mov
pop
ss
jo
fcmovbe
jae
adc
or
je
mov
push
cmp
inc
into
xchg
lock
add
jo
fisttpl
mov
dec
jne
cwtl
jns
cwtl
outsl
xchg
pop
jnp
mov
nop
outsb
test
pop
mov
lods
lock
push
movsb
xorl
pushf
in
ss
ss
dec
cli
xchg
add
andb
mov
add
fwait
jo
inc
outsb
dec
test
sbb
stos
xor
push
jo
aad
pop
pop
and
adc
decb
jbe
jp
xchg
and
xor
or
sbb
pop
aam
xor
clc
cmpsl
jp
loop
fdivs
adc
rcrb
xor
inc
fdivl
es
test
subl
jo
cvtdq2ps
imul
jnp
or
pushf
push
dec
jo
loopne
xor
and
add
ficoml
push
jge,pt
lock
push
lea
outsb
insl
ds
mov
xor
inc
sub
pop
and
out
sti
xchg
add
dec
loopne
jle
jo
mov
dec
fbld
jmp
stos
push
cmp
mov
mov
loopne
pop
clc
jo
push
sbb
ljmp
ja
aas
jo
sub
sub
ficoms
mull
and
imul
xchg
mov
sbb
mov
mov
or
addr16
push
cltd
push
jo
add
movsl
or
jp
xlat
cs
out
mov
mov
inc
pop
jne
push
cmp
cmp
or
cwtl
test
jo
fwait
push
mov
out
sbb
or
pop
fsubrs
jle
filds
adcb
jnp
test
xchg
dec
xchg
mov
xchg
pop
repnz
popa
enter
mov
test
repz
mov
mov
or
jp
jo
adc
add
xchg
mov
dec
xlat
lret
xchg
jo
adc
imulb
outsb
in
xchg
push
mov
sub
dec
jne
test
scas
sbbl
xchg
xchg
mov
cmp
jae
push
nop
pop
jmp
mov
xchg
repz
cmp
and
sbb
push
jae
popf
xor
test
cld
ja
xchg
in
mov
cmpsb
es
dec
xchg
dec
addr16
xor
mov
jge
dec
jo
scas
loop
and
mov
sub
cs
add
mov
mov
and
jo
adc
jo
ja
jl
out
xchg
push
imul
dec
add
shr
out
lock
scas
pop
dec
clc
mov
testl
jmp
mov
lock
mov
sub
jmp
xchg
mov
sub
insl
out
es
int3
and
inc
lea
clc
push
out
push
subb
push
pop
iret
sub
sbbl
sarl
push
jo
jle
es
insb
sahf
or
and
lcall
inc
test
jns
adc
shll
repz
dec
ljmp
adc
daa
cmpsb
arpl
push
sbb
inc
sbb
les
sbb
push
cld
jo
or
dec
popa
pop
inc
pop
dec
push
jne
xchg
xchg
add
xor
inc
test
loope
inc
push
mov
rcl
adc
mov
push
call
or
pop
inc
jb
lea
push
outsl
nop
jo
sbb
mov
jo
cmpsl
fs
lds
adc
neg
cld
xor
aam
popa
cltd
in
jo
mov
int3
pop
lahf
cmp
push
sbb
test
mov
aad
scas
cmp
xor
jo
adc
xchg
divb
es
jle
lahf
outsl
insl
mov
xchg
sbb
xchg
mov
lret
cmp
push
lods
lock
pop
xchg
sub
jae,pn
hlt
popf
stos
mov
imul
fwait
inc
xor
push
jns
and
mov
or
fidivl
out
daa
or
xor
mov
outsl
or
lods
jle
les
jno
jo
xchg
leave
sub
sahf
sub
adc
lret
adc
jo
movsb
jp
les
dec
data16
mov
xchg
loope
and
xchg
je
pop
icebp
mov
cmpb
dec
xchg
xor
mov
mov
jbe
sub
cmp
cmc
adc
in
ja
lret
sub
ljmp
jo
dec
and
popa
push
je
jo
jg
jno
movsb
mov
insb
jmp
cmp
orb
xor
bound
sub
jo
fwait
mov
add
mov
or
test
pop
lock
ss
popa
cmp
insl
stc
lahf
and
jmp
cmp
xor
fisttps
sbb
xor
and
pop
mov
jbe
pop
ffree
aam
jl
sarb
jp
inc
ja
mull
and
int
or
dec
in
mov
fcoml
cli
inc
movsb
jo
je
push
dec
cld
out
mov
add
dec
jg
xchg
jo
inc
dec
adc
mov
popa
fisubrl
outsl
out
adc
ljmp
ja
push
cs
xchg
test
jo
sub
push
mov
pop
mov
imul
insb
lret
mov
and
dec
loope
loop
rol
icebp
addr16
jo
popf
in
js
inc
and
sbb
adc
out
adc
adc
push
xlat
xor
out
and
inc
inc
jns
mov
jbe
aam
jmp
mov
ljmp
jge
inc
mov
out
insl
cltd
push
cmc
in
mov
adc
stos
jno
push
pop
loopne
fisttpll
xor
push
iret
std
sahf
adc
ljmp
mov
jo
js
mov
jo
jp
imul
loop
lock
daa
xchg
leave
jo
cs
jle
mov
idivb
adc
jo
mov
in
pshufw
ret
sub
jno
je
push
or
pop
lock
jne
jo
es
rclb
lods
xchg
add
pop
stos
pop
out
inc
call
pop
jnp
inc
adc
mov
cmp
jae
mov
les
jo
jb
fdivr
or
ds
jl
enter
pop
adc
add
pusha
jno
loope
int
lahf
scas
xchg
and
pop
push
mov
xorb
movsb
jo
push
push
sbbl
insl
adcb
add
shll
jo
jnp
xchg
roll
jo
pop
dec
xor
push
outsb
mov
jo
outsl
xor
mov
in
push
push
lock
rolb
pop
push
or
jno
push
test
jnp
push
divb
sbb
adc
xlat
icebp
stos
xchg
mov
in
fsubrs
inc
in
sub
push
xchg
or
xchg
ret
push
insb
sbb
loopne
cmp
mov
add
pop
shr
push
cmp
pop
add
jo
test
inc
shll
das
adcb
loope
bound
xor
ja
jbe
add
ret
insl
jp
pop
lods
pop
not
jmp
jecxz
fildl
ja
mov
shll
das
jo
push
mov
inc
jo
add
fistpl
fiadds
ret
jo
es
js
cld
cwtl
jo
jp
and
sbb
insl
push
in
loop
call
insl
mov
sbb
xorl
jge
jne
jecxz
xor
cltd
fstps
and
push
in
sub
push
shll
je
pop
repz
fmuls
or
push
aas
xlat
jo
or
cmpsb
mov
xor
push
mov
call
xchg
push
movsl
test
xor
mov
out
ja
adc
hlt
lret
cs
jp
test
pop
shr
dec
fisubrs
aad
stos
cmpsl
iret
filds
lods
jo
sti
mov
test
adc
cld
test
int
das
stc
dec
in
mov
and
push
jae
test
and
mov
int
aad
in
fisttpll
inc
mov
adc
repz
adc
fmull
or
in
jne
out
inc
or
in
inc
lods
sahf
adc
nop
xor
mov
jo
push
aad
push
mov
xchg
enter
sbb
xor
sub
push
jae
inc
cmp
xchg
xorl
rolb
jo
aam
mov
or
or
aaa
test
rol
mov
mov
imul
mov
call
inc
sub
outsb
lods
and
pop
icebp
jl
movsl
push
xchg
pop
fs
xor
in
pushf
pop
pusha
insl
jmp
mov
into
js
loope
dec
mov
les
les
lock
jo
xchg
movb
lret
pop
jo
aad
dec
lcall
cmc
cmpsl
out
mov
mov
sbbb
inc
lods
nop
rcll
loopne
test
jo
adc
rorb
dec
jo
cmp
sti
jae
in
jo
andb
jo
xchg
pop
push
stos
mov
jo
pop
mov
add
xchg
dec
sub
jo
int
stc
test
cmp
inc
inc
int3
icebp
insl
pop
jo
mov
and
pop
pop
test
movsb
xlat
inc
jo
cmpsb
stc
enter
pop
dec
aaa
push
jo
xchg
cmp
lahf
ljmp
xchg
inc
adc
mov
push
cmpl
insb
mov
push
insl
push
hlt
std
pop
cli
popl
cwtl
jb
jo
lahf
rcrl
out
push
aam
sbb
shl
mov
pop
xor
lahf
and
inc
int
ljmp
rclb
cwtl
je
mov
jle
xchg
jne
mov
adc
cmp
jae
leave
cmp
dec
jo
mov
lds
pop
mov
adc
stos
in
insb
scas
jo
icebp
jle
ret
out
insl
aad
mov
xchg
shll
adc
cmc
xor
jo
add
testb
xchg
jp
fcoml
cmpsl
jae
adc
mov
pop
xor
repz
rclb
xchg
movsl
orl
ss
mov
sub
arpl
lret
pop
jnp,pt
test
ret
dec
mov
jo
xchg
adc
push
cltd
pop
cmp
cmp
loop
nop
je
cld
arpl
xchg
insb
jp
mov
nop
push
fnstcw
push
lcall
lret
push
out
insl
jg
mov
nop
mov
sub
dec
xor
jbe
inc
pushf
adc
cmpsl
push
cmp
xor
xchg
mov
cmc
sbb
fidivrl
stos
aas
inc
xchg
popa
mov
xor
sub
xor
mov
and
jo
mov
mov
cli
sbb
repnz
icebp
int
imul
push
add
loop
and
mov
ja
cmp
cmp
insb
jo
mov
mov
rcr
clc
and
adc
adc
push
pop
out
or
icebp
jbe
fstps
xor
add
test
ss
cmc
xchg
cmp
outsl
xchg
inc
dec
jo
sub
cmpb
xlat
jecxz
ds
mov
mov
leave
jo
addr16
cmp
pop
cmp
adc
jnp
ja
jae
lds
lock
jnp
add
xor
or
ss
test
xor
mov
adc
lahf
mov
lds
cmp
or
loope
pop
pop
cli
jge
aaa
out
jnp
inc
mov
jmp
mov
clc
fbld
in
les
inc
jo
cmp
mov
jnp
movsl
fwait
adc
jae
mov
lock
in
pop
adc
jo
mov
stos
popf
sarb
insl
in
jne
lds
icebp
push
push
cmc
insl
imul
fdivrl
jo
cmpsl
js
lahf
shll
jo
jns
lods
cmp
lock
jo
scas
push
sub
lds
jo
stc
cwtl
xchg
xchg
jl
sarl
mov
jo
fwait
jbe
cmp
mov
jo
mov
ret
movsl
jo
sbb
pop
mov
adc
icebp
inc
mov
inc
jo
roll
ret
out
xchg
jo
mov
adc
adc
shlb
adc
dec
cmp
and
aam
cmp
sbb
jae
mov
push
adc
lea
or
cmc
insl
mov
into
mov
mov
stc
test
insl
fnstcw
mov
mov
shll
xor
testl
divb
sub
cmp
lods
out
and
pop
dec
sub
inc
mov
lods
in
sbb
insl
xchg
lret
jo
xor
or
mov
insl
push
daa
cld
mov
repnz
jo
jo
cs
or
and
xchg
fcompl
scas
or
cmp
in
mov
iret
cmp
or
jae
or
icebp
adc
mov
mov
xchg
jp
jo
stc
lret
dec
and
jno
lahf
jmp
add
push
cmp
imul
out
fpatan
pusha
je
stos
xor
lret
mov
or
jo
mov
adc
and
cwtl
sub
mov
stos
cltd
sbb
ss
in
mov
lds
inc
mov
xchg
jo
push
and
hlt
stc
scas
mov
xor
fucomi
fstl
fsubrl
sar
jo
xor
or
les
daa
or
adc
into
fstl
movsl
push
not
mov
mov
lock
loopne
push
faddl
adc
mov
jl
loope
jo
push
adc
sbbl
pop
pushf
mov
mov
cmp
ja
push
lcall
jecxz
push
pop
adc
fstl
pop
jo
movsb
test
xchg
data16
and
or
xor
out
jo
rol
test
into
add
mov
cmp
mov
mov
jo
push
jmp
xchg
es
inc
jo
jae
sarl
xchg
mov
fistpl
jg
inc
je
sub
movsl
ret
or
and
jo
sub
scas
popf
lahf
sub
inc
push
mov
insb
jae
mov
pop
mov
pusha
data16
or
inc
pop
icebp
cmc
test
jbe
jle
out
lock
mov
int3
fcoms
lret
rorb
sbb
test
dec
arpl
jo
es
popf
repnz
jo
add
jecxz
fistpll
jo
push
xchg
pop
dec
hlt
aam
adc
push
jo
arpl
jo
sbb
shr
in
ret
or
push
fistps
sahf
mov
fwait
insl
imul
adc
jo
test
mov
shrl
add
add
aas
mov
inc
movsl
push
jae
test
add
mov
push
xchg
enter
es
nop
sarb
sbb
xchg
imul
and
sbb
insl
cmp
push
inc
mov
sub
dec
mov
cmp
lods
add
loopne
xor
ss
mov
jns
mov
mov
fs
nop
rorb
cmpsb
outsb
xchg
sbb
enter
or
aad
cmp
cmp
mov
jo
mov
mov
jae
ss
cmpsl
scas
int
or
dec
jo
movsl
ljmp
lock
pop
enter
sbb
cmp
jne
je
dec
ret
or
sahf
jo
popf
fwait
cwtl
add
push
push
cmpsb
and
push
push
mov
inc
mov
add
cmpsb
nop
add
mov
sub
enter
scas
mov
or
sub
das
mov
push
repz
icebp
jo
frstor
or
vpshufhw
jno
jo
lahf
push
enter
jne
jnp
or
loop
fimull
sarb
arpl
mov
in
lock
pop
bound
inc
iret
xchg
mov
aad
jo
je
cmp
insl
int3
pop
push
push
mov
mov
mov
mov
mov
push
mov
repz
sub
xchg
mov
dec
adc
mov
mov
loop
sub
bound
fst
mov
mov
ds
mov
ss
cltd
pop
arpl
jb
fbstp
jo
rolb
jo
push
mov
insb
mov
mov
stos
std
jo
push
out
sti
mov
lds
loopne
subl
lock
sbb
repnz
cmp
fldenv
adc
xchg
xor
sahf
movsb
lock
pop
mov
jo
fwait
movsl
inc
xor
jp
xchg
scas
out
push
mov
out
pop
adc
shrb
xor
inc
and
lock
push
jle
jo
push
cld
pop
insl
dec
aas
jp
push
lret
outsb
dec
jo
ja
shrl
ss
leave
imul
push
fstps
jo
jnp
into
out
xor
mov
jo
inc
std
lcall
sti
add
fisubl
pop
mov
fstps
test
sbb
jle
in
lret
mov
inc
push
hlt
pop
pushf
pusha
xorl
push
orb
xor
ljmp
push
sub
mov
divb
cmp
xor
int
ret
std
das
negb
ret
ja
jp
loopne
xchg
pop
xorl
push
cmpsb
jo
cwtl
xor
mov
xchg
mov
test
push
mov
and
jg
das
jbe
loop
pushf
pop
jo
lahf
call
ja
ss
dec
daa
inc
adc
xor
ret
dec
jecxz
xchg
jo
das
add
loope
push
xchg
mov
les
jo
ds
mov
push
insl
jbe
xchg
cmc
jl
decb
and
dec
inc
push
lods
jo
xchg
sahf
aas
add
std
mov
js
mov
pushl
cwtl
fmul
out
shrb
cmp
cmpsb
jo
cld
sub
jmp
enter
rol
add
jo
cmc
sbbl
jo
sub
add
jae
mov
scas
sarb
jmp
std
jo
loope
dec
mov
aas
mov
outsb
pushf
mov
and
sub
cmp
add
xor
dec
loop
and
mov
jo
add
aas
pop
pop
inc
xorl
scas
inc
maskmovq
notl
jo
push
ja
mov
mov
jo
jp
and
xor
jo
fdivrl
pop
jo
push
outsb
add
jo
in
leave
xchg
movsl
jo
mov
in
push
jns
stos
push
lock
jmp
popa
repz
cmpsb
jo
shl
daa
fmul
inc
jecxz
mov
repnz
cmp
cli
xor
pop
das
mov
or
sbb
pop
fisubs
push
jnp
popf
in
mov
nop
cwtl
xchg
dec
xor
xchg
pop
int3
fildl
into
mov
push
loope
jl
sub
or
scas
pusha
lds
test
out
movsl
lock
mov
rorb
es
ror
ja
frstor
inc
movsl
cmp
jno
dec
mov
cs
lret
fldl
bound
das
aaa
std
sbb
mov
cmp
mov
sbbb
jecxz
clc
inc
xchg
sbb
mov
mov
mov
xchg
or
mov
dec
jo
pop
jbe
cld
int3
cmp
inc
js
mov
test
inc
cmp
std
mov
or
in
addb
and
inc
lock
fwait
lock
int
into
jp
ljmp
adc
add
adc
shlb
mov
lock
test
jecxz
fidivrl
pop
and
lock
imul
jo
fucomp
sbb
cmpsb
pop
inc
mov
iret
arpl
push
aad
scas
shl
pop
cmp
loope
mov
int3
popf
jge
sbb
push
pop
mov
pop
sahf
sbb
adc
jo
insb
add
cs
pop
mov
sbb
pushf
fwait
push
insl
pop
jb
xorl
xor
into
cmp
push
movsl
jne
ret
stos
mov
out
out
pop
adc
mov
mov
sbbb
out
fcomps
nop
mov
lret
push
movsl
inc
cld
orb
arpl
into
out
mov
nop
jo
dec
jle
lret
das
or
jo
int3
add
inc
push
xor
jo
pushf
mov
scas
mov
mov
jne
push
push
jnp
mov
imul
push
push
ret
pop
lock
movsb
xchg
shl
adc
jae
stos
enter
pop
out
mov
pop
outsl
ss
jno
mov
and
jo
cmp
and
cmpsl
jae
mov
call
or
mov
jo
pop
or
inc
sbb
ficompl
bound
pop
or
test
dec
sub
xor
imulb
lahf
gs
jo
ret
inc
out
jae
cltd
mov
mov
cmp
jo
lock
lcall
jo
lret
lods
mov
push
kmovb
std
stos
sti
icebp
cmp
mov
pop
inc
pop
jo
push
insb
sub
scas
xor
jo
scas
adc
jo
aad
scas
test
inc
pop
jle
lock
int
or
jo
add
imul
test
jo
test
out
insb
jo
pop
lret
lcall
cmp
es
scas
test
xchg
push
cmc
jo
je
push
jbe
sbb
mov
adc
mov
inc
jo
and
fdivs
stc
lahf
xor
adcl
jo
std
xor
pop
shrb
jo
mov
lods
dec
insl
sarl
sub
add
mov
xchg
inc
push
pop
lock
xor
xchg
add
dec
or
push
mov
xor
cmp
les
xchg
stos
fneni(8087
mov
cmpsb
pop
jns
and
aad
cmp
outsl
cmpl
lock
pusha
std
pop
jecxz
sbb
dec
mov
jl
mov
xor
mov
stos
xor
popf
test
push
sahf
jo
mov
jbe
lcall
mov
jnp
mov
outsb
push
nop
outsb
lret
jne
push
les
sahf
adc
pushf
pop
pop
jo
ja
jno
push
imul
mov
jp
adc
cmc
mov
outsl
lock
insl
dec
push
fnstenv
and
jo
cmc
je
mov
pop
jp
push
dec
cmp
bound
mov
shr
sbb
mov
movl
mov
pop
pushf
int
jo
insl
scas
pop
xchg
fwait
les
push
jno
sub
movsb
xchg
cmpsl
test
xchg
jo
or
fiadds
jmp
mov
cmp
int3
popa
inc
jbe
jo
iret
cmpsw
mov
mov
lret
inc
test
jbe
push
xorb
cmp
nop
lock
mov
push
aad
or
jne
lock
jae
dec
fiaddl
jo
and
xor
cmp
sub
jo
mov
mov
mov
jo
call
popa
pop
jo
push
imul
rcrb
mov
inc
mov
repz
jg
push
sub
fadds
mov
inc
mov
ds
in
pop
les
incb
mov
add
sub
jp
sub
popf
push
and
push
jne
lock
cwtl
cmc
and
and
fwait
test
lds
jo
popa
or
ret
adc
jo
mov
sub
test
sti
fisubrl
lods
stos
sub
mov
pop
pop
pop
fbld
ja
and
xor
mov
inc
ja
jmpw
mov
lock
dec
bound
sbb
or
pop
jo
mov
lods
pop
mov
idiv
mov
jne
cmp
mov
orb
inc
jmp
cld
adc
or
test
pop
jge
movsl
mov
jb
xor
cs
pop
pop
adc
jbe
testl
xor
jp
psrad
jo
movsb
rorb
jo
cwtl
xchg
pop
push
repz
jo
mov
iret
jge
mov
sbb
or
mov
lock
ffree
je
nop
out
in
lret
ja
sbb
repz
jo
aaa
flds
inc
xor
lods
mov
adcb
jo
mov
loop
push
pusha
test
mov
notl
pop
and
xchg
fsubrl
cmp
jnp
cmp
jmp
mov
add
enter
and
cmpsb
mov
mov
mov
in
outsb
gs
mov
roll
lahf
mov
pop
hlt
jo
mov
dec
mov
dec
rcrw
fsubrs
addr16
cs
adc
in
or
dec
out
xchg
mov
fdivl
sub
movsb
mov
mov
cld
rclb
add
xorl
lock
and
mov
cmpsb
xchg
subb
jo
cs
push
das
out
jno
push
or
or
jo
iret
stos
nop
pop
repnz
jne,pt
xor
outsb
jo
popf
mov
dec
mov
ja
scas
xor
push
mov
jo
cmp
cmc
dec
addb
add
je
clc
mov
lock
inc
inc
mov
fwait
jo
fistpl
je,pt
jae
jmp
idivb
jo
add
pop
movsl
ljmp
js
xor
cmc
mov
sahf
aas
mov
cwtl
mov
push
test
int3
in
mov
sbb
mov
pop
mov
inc
lock
hlt
lods
sub
mov
mov
movsl
add
es
data16
sub
lods
fcomip
xchg
rorb
mov
outsb
sbbb
xlat
mov
adc
cmc
cmp
lock
pop
mov
push
mov
pop
cmp
mov
sbb
movsl
insb
cmpsl
jp
xor
mull
das
xchg
or
loope
js
cwtl
stos
jae
in
mov
fisubs
xor
adc
mov
stos
and
test
loop
jbe
jl
jg
sbb
jns
or
shll
push
sbb
xor
jo
outsb
roll
gs
and
add
cs
add
pop
nop
jae
ret
movsl
pushl
push
sbb
jo
leave
and
sahf
xor
mov
mov
lock
push
sbb
les
jo
or
imul
cmpsb
out
mov
leave
adc
jb
outsl
cmp
mov
jnp
ja
popf
add
shll
jb
call
jo
xchg
pop
mov
sub
lock
jmp
iret
es
insb
jae
out
imul
mov
test
sbb
pop
sub
and
leave
insl
and
jns
adc
xchg
outsl
cmp
shlb
data16
xchg
dec
fistps
les
loop
leave
pop
frstor
nop
jecxz
add
in
mov
shlb
sub
jp
fxch
jae
jo
bound
add
inc
mov
or
fidivs
jo
mov
xchg
pop
jo
in
lret
sbb
cmp
mov
icebp
ja
adc
popa
stos
xor
pop
jo
jle
pop
mov
jo
xchg
mov
jo
and
loope
dec
adc
pop
std
inc
jo
fdivs
std
jo
and
mov
jo
repz
adc
inc
pop
iret
pop
xchg
mov
pop
lock
jno
jno
push
xor
repz
xchg
jo
jns
dec
or
fsubr
jo
popa
xchg
xor
fdivrl
rorl
fdivs
sbb
jo
jb
pop
xchg
aas
and
mov
mov
mov
fmuls
pusha
ja
xor
dec
cmpsl
jo
mov
xchg
lods
mov
es
cmp
cmp
shlb
fs
ja
xchg
lahf
pcmpeqw
mov
or
jo
shl
outsb
inc
mov
fs
arpl
inc
in
dec
mov
imul
mov
lods
shll
pop
xorw
xchg
adc
in
or
shrb
arpl
je
mov
stos
mov
push
pop
out
adc
mov
ja
incl
sti
pusha
sbb
add
jl
call
jo
adc
rorb
jo
and
jo
imul
push
lock
jae
lret
cmpsb
xchg
jg
adc
push
and
movsl
scas
outsb
movsl
xchg
sub
sub
inc
in
add
insb
mov
sbb
fdivl
aas
mov
lock
push
adc
xchg
ds
push
pop
jo
mov
fstpl
imul
fcmovne
lds
test
jo
push
push
mov
rcrb
bound
jge
aad
imul
std
lock
rcr
inc
lret
jo
sub
adc
mov
sbb
add
lock
mov
adc
and
jo
mov
jo
jne
lret
fs
stc
insb
shl
jnp
and
mov
rclb
lcall
jo
mov
cmp
arpl
jo
mov
inc
jo
stos
in
jmp
dec
or
ljmp
xor
jns
inc
push
stc
inc
pushf
jne
leave
jmp
xchg
mov
jb
xor
inc
ss
mov
mov
push
or
sbb
mov
cmp
movsl
fsts
pop
ljmp
push
lahf
inc
push
lcall
fstps
jo
jns
jmp
pop
rolb
add
push
enter
pusha
and
adc
cmp
pop
sahf
stos
cmp
stos
pop
stos
push
add
dec
test
ret
adc
mov
mov
pop
inc
xchg
movsl
jo
lds
cmpl
push
stos
inc
inc
ret
ja
sbb
xchg
pushf
mov
push
adc
push
xchg
inc
int
fs
mov
pushf
xchg
divb
aam
lret
mov
cmp
lahf
jge
fisubrs
es
and
mov
mov
adc
xor
outsb
mov
jg
adc
xchg
pop
sbb
ds
pusha
mov
push
in
or
cmpsl
or
mov
mov
fimull
sbb
dec
lret
aaa
out
mov
gs
popf
sub
push
mov
or
movsl
pop
insb
popa
cmpsl
push
sub
and
aad
nop
es
in
scas
xor
out
push
int
or
pshufw
fwait
lret
sahf
ret
xchg
sub
mov
out
jae
rcrb
ficoms
cmp
jo
nop
jns
data16
add
in
andl
aas
ja
sbb
movsb
sbb
xor
push
xchg
mov
movsl
je
mulb
and
mov
sub
push
and
inc
add
mov
xchg
aad
test
mov
leave
test
out
jnp
ss
popf
jo
lods
pop
in
out
aad
xor
cmpsb
jo
mov
jb
test
sti
jmp
jo
icebp
mov
sbb
loope
int3
push
xchg
jae
cmpsb
push
bound
jp
sbb
sbb
sub
inc
loope
adc
mov
cmpb
or
mov
push
add
iret
daa
and
cmovo
stc
fs
inc
mov
jl
ja
popf
and
adc
push
stc
sbb
mov
mov
cmc
xchg
stos
inc
jp
xchg
rcl
cmpsb
lock
lret
data16
push
aam
call
xchg
add
daa
cmc
jge
sbbb
pushf
inc
xchg
jg
mov
xchg
inc
cmc
xor
in
push
pop
pop
sti
pop
jmp
imul
aad
or
push
jns
jbe
adc
dec
push
aad
int
nop
out
xor
imul
test
pop
testl
aaa
xchg
jmp
aad
fnstsw
mov
inc
xor
sahf
bound
and
test
jo
xchg
aad
xor
xlat
ss
sub
cmp
jo
xchg
popa
cmp
mov
pcmpeqd
imul
mov
jmp
fbstp
mull
out
jo
rcll
jg
in
jo
jp
cmp
outsb
stos
icebp
imul
xor
jge
dec
mov
jne
iret
xchg
leave
and
dec
in
jo
mov
jecxz
xchg
out
subb
jo
popf
dec
or
dec
pop
push
mov
lahf
or
insb
cwtl
cmc
jmp
jo
add
push
shlb
mov
jo
cmc
mov
mov
pop
inc
cli
xor
dec
jo
mov
jns
push
inc
and
pop
add
or
inc
mov
jne
mov
fidivl
sub
adc
adc
scas
sub
outsb
sub
jo
mov
add
fsubrl
push
js
aas
in
xor
cmp
mov
jo
rolb
aam
sub
or
mov
dec
mov
lcall
ds
fbstp
push
or
cli
mov
push
repnz
xchg
fiadds
push
sete
lods
lock
mov
sub
fadd
sbb
or
cltd
mov
xchg
movsb
mov
mov
jo
mov
mov
push
xchg
dec
or
push
fidivrl
jo
out
leave
mov
shrl
jle
xor
adc
mov
jo
jle
ja
mov
or
pop
movsl
sub
xor
jo
dec
add
les
mov
push
xor
mov
test
scas
pusha
xor
ja
pop
or
ret
adc
loope
mov
mov
dec
xchg
push
imul
add
iret
sub
jo
mov
cmpsb
dec
pop
in
int
ja
xor
sbb
movsb
ja
andb
stos
test
bound
or
jbe
stos
lock
mov
xchg
cld
insl
sub
mov
pop
adc
imul
jp
pushf
dec
xchg
jo
sti
ret
bound
jo
xlat
cmp
adc
loop
jo
inc
mov
sub
cmp
int
and
cld
repnz
cltd
insl
mov
dec
sub
call
lds
loopne
push
stos
xchg
jo
add
rcrl
mov
add
enter
add
mov
adc
arpl
insl
pushf
sar
stc
xchg
es
push
dec
jno
test
mov
pop
ljmp
aas
arpl
cld
inc
pop
or
jo
xor
dec
ja
aad
add
nop
push
push
lahf
jo
mov
sahf
rolb
sbb
ja
lock
sbb
sub
aaa
fdivs
call
and
insl
sbb
jnp
cli
mov
jo
mov
mov
and
pop
test
and
dec
mov
add
mov
outsb
popf
je
lods
mov
data16
lock
dec
sbb
jle
gs
aas
adc
pusha
repz
out
pop
fcompl
dec
mov
xchg
inc
mov
dec
popa
inc
out
cmc
lds
mov
jmp
fistpll
dec
pop
push
cmp
lret
push
out
inc
in
outsl
arpl
mov
and
jo
loopne
pop
loop
insb
xlat
jo
lret
adc
pop
mov
mov
xor
mov
mov
push
dec
shrl
adc
jo
inc
insb
test
mov
jl
jo
sbb
push
mov
repz
add
jl
repz
ljmp
or
outsl
pop
loopne
gs
jae
cs
jle
jnp
add
js
das
shl
inc
mov
mov
dec
lret
lcall
add
sbb
mov
ja
out
mov
mov
jae
out
add
popf
fwait
xchg
mov
or
ret
out
sbb
pop
xor
repz
jo
mov
lret
pop
pop
jo
mov
xchg
lret
mov
xchg
jo
ja
push
shlb
or
lret
cmp
pop
arpl
lcall
scas
movsb
fidivl
pop
or
push
dec
sub
daa
xor
mov
jg
inc
sti
roll
xchg
lock
out
sarb
loopne
jne
inc
aas
dec
sti
lahf
xor
xchg
xor
cmpsb
jo
ljmp
cmp
add
imul
push
jo
aaa
int3
nop
data16
inc
stos
mov
or
arpl
insl
mov
jb
lcall
dec
push
lock
and
pop
mov
rclb
repnz
in
jl
cmp
add
or
sub
es
jo
add
outsb
jae
dec
jbe
mov
pop
jns
movsb
dec
ror
iret
nop
cmp
xchg
sbb
mov
and
add
sub
clc
lock
cmp
and
lcall
mov
dec
xlat
xchg
imul
jmp
push
sbbb
arpl
fcomps
dec
xor
sub
mov
xor
xchg
imul
jnp
ret
arpl
push
fcompl
pop
les
and
aas
icebp
jo
mov
dec
pop
xor
xchg
mov
fwait
mov
movsb
imull
jo
cmp
or
pusha
out
xor
inc
adc
or
lock
add
mov
and
jo
mov
mov
sub
imul
sub
xchg
dec
push
pop
inc
xchg
jmp
cltd
loopne
and
daa
ljmp
push
pop
dec
cmp
jo
stos
daa
mov
pop
fldt
and
fdivs
lahf
gs
sbb
adc
jb
movsl
dec
leave
or
es
call
mov
push
pop
ja
or
cwtl
out
lods
mov
sbb
jns
mov
in
mov
popa
das
gs
mov
repnz
push
push
mov
xchg
jp
fdivl
dec
ret
dec
mov
jo
push
out
stos
ret
sub
aam
out
cmpsl
fdivl
enter
into
xlat
inc
push
jl
stos
pop
cmpsb
push
mov
aas
rorl
cld
xor
jl
jo
lock
sub
das
fwait
movsb
jo
dec
out
push
rclb
int3
pushf
jecxz
jp
sub
lods
dec
in
pop
push
xchg
push
pop
xchg
mov
int3
data16
pushf
pop
lret
adc
sbb
push
or
mov
in
dec
je
outsb
cltd
loop
ficompl
mov
adc
out
xchg
jo
mov
sbb
jo
les
sbb
and
in
jp
loop
mov
mov
jl
sub
psadbw
dec
ss
xchg
pusha
lea
aad
lods
insl
add
or
and
sub
adc
rcr
cltd
mov
jo
sub
or
lret
jo
pop
push
jp
jne
leave
jo
dec
insl
sub
ja
repnz
jns
lock
pop
jno
insl
push
or
mov
out
push
mov
imul
cli
bound
stos
xor
das
call
pusha
lods
push
xor
lods
and
and
adc
imul
ja
jmp
inc
xor
inc
stc
xor
ja
sub
subl
imul
pop
adc
ja
xchg
inc
fcomip
jne
leave
stos
fadds
and
jl
mov
push
cmp
popa
jnp
adc
stc
loopne
rcr
pop
mov
xchg
pop
or
aam
cmp
arpl
push
jo
mov
iret
gs
out
insl
inc
pusha
push
cmp
cli
add
adc
arpl
lea
xor
sar
or
jo
pop
ss
mov
jb
or
int
jp
dec
jne
movsb
in
repnz
mov
add
xchg
ja
mov
leave
aad
call
and
pop
mov
jne
cli
dec
mov
shlb
div
sbb
test
pop
and
jo
mov
push
mov
pushl
inc
es
add
cmpsl
mov
jns
push
jo
pop
mov
les
test
addr16
lock
enter
jo
cmp
sub
popl
sub
mov
inc
push
lea
popa
fimuls
or
dec
jb
nop
cmp
ficompl
rcr
aas
cwtl
repz
add
out
pop
mov
pop
inc
mov
lock
cmp
imul
push
mov
hlt
mov
jo
mov
imul
aam
sbb
xor
jo
dec
movsl
mov
xchg
xor
cwtl
scas
lods
jbe
push
xor
div
pop
sti
push
xor
add
mov
jno
insl
dec
xchg
cmp
enter
mov
jo
mov
adc
jecxz
cmp
mov
mov
sub
or
jo
mov
mov
jo
int3
inc
mov
push
push
cmpsl
jo
andl
push
jnp
add
icebp
out
lock
pop
pop
andl
or
xchg
adc
subb
out
cmp
dec
dec
je
xchg
jo
roll
jo
movsl
pop
cmp
jo
xchg
adc
mov
jbe
sub
cwtl
pop
or
pop
bnd
sti
loop
jp
gs
lods
pusha
orl
and
rcll
dec
pop
cwtl
mov
adc
sub
mov
jo
popa
aad
andb
inc
or
xchg
jo
popf
jae
sub
jg
dec
adc
ja
mov
sbb
jo
dec
sahf
sub
lret
jp
outsb
push
xor
movsb
imul
or
mov
jo
repz
xchg
mov
sarl
lahf
dec
fdiv
adc
xorb
jo
pop
mov
cmp
stc
test
cmp
push
dec
push
fstpl
push
adc
dec
repz
pusha
adc
xchg
loope
js
mov
jmp
jne
or
scas
adc
outsl
dec
sbb
jp
cwtl
inc
stos
ds
arpl
or
iret
and
and
loope
inc
xor
loop
xor
popa
jo
js
jl
icebp
mov
mov
rcr
push
cwtl
dec
pop
clc
ficoml
add
jne
stc
movsb
jo
lds
int3
push
add
dec
je
mov
sbbb
gs
sub
sahf
mov
test
cwtl
fidivrl
mov
pop
ja
and
test
lock
xor
jp
xchg
adc
inc
mov
xor
add
jns
or
xorl
add
xor
xor
dec
dec
lds
add
bound
insb
and
adc
inc
jns
jo
fcomps
loop
xlat
mov
xor
loopne
jns
imul
inc
fisubs
jo
add
mov
outsb
inc
fsubs
jecxz
stos
cmp
ja
jo
and
push
das
outsb
insl
int
dec
test
dec
out
mov
sbb
test
sbb
jo
movsl
add
ja
cltd
pop
ja
cwtl
in
int3
aaa
mov
int
jnp
repnz
lock
jns
out
xchg
inc
outsl
fsubrl
and
out
mov
and
push
pop
sbb
jo
loope
sub
adc
jae
pop
inc
mov
sbb
xor
fstpl
ljmp
mov
outsb
sub
sub
mov
jo
subb
cmp
push
je
mov
and
mov
movsb
jo,pt
jae
pop
leave
rorb
jo
lea
ret
xchg
ljmp
cmp
xor
insl
daa
mov
addl
notl
cmp
cwtl
ljmp
std
jne
psubsw
xchg
mov
jo
mov
insl
push
xchg
adc
scas
out
xchg
imul
btc
dec
sub
fidivl
or
cmp
add
cmpsb
jo
test
cmp
fwait
inc
cmp
mov
es
pop
inc
and
push
jo
imul
push
jne
jo
sub
out
jns
and
xor
pop
sub
adc
int
mov
mov
hlt
sub
or
jne
xor
mov
in
sub
fnstenv
jp
out
push
sbb
shrb
push
sarb
cmp
push
ret
test
into
fdivrl
sarl
xor
pop
dec
xchg
mov
pop
loopne
jo
cmp
mov
loopne
adc
mov
sub
mov
fucomp
push
push
icebp
jbe
dec
shlb
fidivs
insb
sbb
dec
xchg
or
xor
hlt
loopne
jg
ja
ss
pop
mov
push
into
sub
xor
mov
inc
pop
inc
aaa
mov
mov
sbb
fs
sbb
lods
cld
push
in
out
ljmp
pop
insl
and
das
cmpsb
add
out
sbb
ret
daa
jo
mov
push
es
and
popa
sbb
sbb
shll
dec
lock
imul
ret
mov
fiaddl
add
lret
cmp
ljmp
popa
in
loopne
insl
push
fsts
mov
insl
decb
mov
xchg
jmp
arpl
jge
xchg
mov
jbe
inc
test
xchg
push
cwtl
mov
divl
push
mov
in
gs
xor
lods
jo
jnp
xchg
js
stc
lret
cmpsl
or
cmc
mov
jae
pop
test
adc
mov
push
imul
outsl
mov
iret
imul
stc
jno
rcrb
pop
mulb
fisttpl
pushf
daa
in
push
pop
fnstenv
and
jno
cli
jle
add
pop
outsb
push
cld
loopne
jbe
fisubl
ss
xor
jg
fdivrl
and
fldl2t
pop
popl
divb
cmpsl
inc
pop
adc
jl
push
mov
addr16
fisubrl
js
pop
mov
push
xchg
dec
jnp
inc
rclb
hlt
daa
push
movsl
xchg
jo
adc
sub
or
push
inc
ret
inc
fcoms
movsl
mov
cmp
sub
mov
insb
xchg
es
jo
loopne
pop
ret
repz
jno
cld
pop
xchg
jl
stos
or
movsl
jp
mov
lods
inc
ret
popa
mov
mov
cld
call
in
xor
cli
add
ja,pn
mov
adc
shll
cli
inc
nop
iret
out
addb
repz
xor
test
push
les
out
push
xor
sbb
loopne
cld
lret
fcoml
inc
xlat
pop
lods
push
dec
mov
xor
jo
mulb
movsl
dec
rclb
insl
pop
adc
and
in
cmpsb
pop
inc
or
push
xlat
cmc
fmuls
and
mov
pop
cld
cmp
repnz
adc
test
jo
cmp
aaa
adc
fnstsw
arpl
cld
and
mov
movsl
mov
mov
jl
scas
inc
ss
hlt
sahf
fcoms
cmp
out
lds
into
and
pop
jbe
cmpb
daa
adc
push
test
insl
jne
aaa
in
push
push
cld
insl
dec
cli
pop
outsl
sub
inc
fiadds
rclb
sbb
lock
add
xor
loop
aas
xor
mov
gs
int3
jge
jo
cld
pop
jl
add
push
push
pop
mov
push
and
les
push
pop
pusha
xchg
push
push
push
cld
jnp
push
out
xor
imul
pop
jo
mov
jno
inc
dec
lock
ret
je
xor
jo
xchg
or
mov
mov
jo
sub
shrl
mov
insl
test
lcall
jo
mov
fidivl
inc
das
push
sbb
outsb
xor
xchg
out
dec
adcl
jl
jo
jge
and
lret
or
jo
push
adc
and
sbb
sub
dec
jo
mov
mov
cmp
enter
mov
adc
arpl
hlt
cmp
jg
in
inc
mov
xlat
lret
pop
cmp
loopne
push
in
xchg
jo
cmp
fwait
mov
out
xchg
jle
jo
push
mov
jae
ljmp
push
add
mov
jl
mov
xor
jo
imul
and
les
fadds
add
push
jo
dec
xchg
aam
cmpl
push
sahf
sub
mov
hlt
jo
divl
xchg
sub
xchg
imulb
das
sub
insb
idivl
push
xorl
jo
sahf
call
cmpsl
jp
and
adc
in
jo
data16
outsl
cmpb
rcll
mov
xor
or
inc
mov
jo
mov
and
push
mov
repz
lds
test
xor
out
pop
mov
push
cld
mov
ja
test
xchg
lret
inc
dec
hlt
xorl
aas
outsb
mov
jae
mov
outsb
dec
movsb
sbb
ret
adc
jo
negb
xchg
jo
js
mov
ja
mov
push
cwtl
jecxz
cmpsl
test
xor
clc
pop
out
in
jo
mov
jno
insl
data16
inc
test
mov
sub
sahf
rclb
inc
movsl
lcall
mov
adc
negb
test
add
push
lahf
jo
loopne
xlat
cmpsl
push
jb
jo
stc
sbb
outsl
adc
xorb
cmp
rcr
ss
shrl
inc
xor
mov
pop
lret
or
nop
jbe
outsl
xchg
pushf
mov
aas
or
orb
sub
mov
ss
jge
mov
ja
xor
push
test
jno
cmp
out
jo
xor
dec
addb
pop
pop
out
mov
mov
jo
arpl
dec
rcll
jo
jae
mov
jo
dec
scas
mov
dec
mov
mull
pusha
pop
rol
xchg
push
push
jl
sub
or
mov
mov
xorb
jne
test
in
jl
icebp
fbld
xchg
xor
sbb
cmp
fisubrs
and
sbb
lock
scas
inc
jo
ret
pop
cmp
xor
rorb
mov
pop
sub
adc
cli
sahf
jg
jo
jns
inc
xor
and
mov
jo
jae
sbb
xchg
lea
scas
push
aam
es
jo
pop
adc
sub
inc
or
xor
hlt
push
repz
push
sbb
cmp
mov
xchg
cs
push
cmp
and
mov
test
pusha
rcrl
insl
das
and
mov
dec
lods
push
push
xchg
dec
pop
inc
mov
loopne,pn
cmpb
pop
pop
inc
and
add
xchg
stos
addr16
jno
int3
xor
jo
or
xor
or
fistps
push
cs
push
mov
rol
pop
push
movsb
jo
push
testb
adc
and
cs
lea
inc
addb
cmp
xor
rorl
adc
out
hlt
lods
mov
shrl
rol
push
jp
into
jo
lret
ljmp
or
push
sub
test
cmp
cli
jo
fistps
dec
mov
mov
out
xchg
xchg
shll
and
sub
and
inc
cmp
lock
add
addr16
lcall
xchg
ja
pop
imul
sub
aad
int3
jo
pop
out
fistps
xchg
cmpsb
jb
or
xchg
popa
or
adc
leave
push
scas
adc
data16
sub
jne
or
sub
xor
jecxz
pop
movsb
push
push
xor
insl
iret
pop
adc
fcoms
xchg
push
nop
hlt
pop
aas
jle
jae
or
nop
sub
adc
adc
or
add
add
dec
test
mov
ret
xchg
adc
add
adc
jp
xor
push
sbb
xchg
adc
data16
test
lock
lods
dec
fidivs
dec
sub
pop
xchg
jae
loopne
add
mov
mov
sbb
mov
sbb
out
popf
in
rolb
jo
dec
pop
mov
xlat
inc
shll
iret
mov
mov
cmp
pop
inc
add
aam
adc
or
pop
test
loopne
jo
or
out
jne
inc
call
xchg
add
push
or
pop
sahf
pop
sbb
lcall
mov
push
out
imul
lods
sarb
std
icebp
pusha
insb
lahf
cmpsb
add
ss
scas
dec
leave
jno
imul
pop
jo
test
scas
imul
jo
int3
pop
pop
push
pop
xchg
jmp
sbb
add
mov
repnz
push
jnp
push
rclb
insb
std
pop
or
dec
shl
push
aad
adc
ret
shlb
lret
sbb
jo
pop
mov
jl
lods
jge
mov
fidivl
aas
mov
sub
inc
sub
and
jne
cld
fdivrs
inc
and
and
pop
sbb
pop
xchg
xchg
jp
in
cmp
cmp
mov
adc
jl
cwtl
mov
in
jnp
test
mov
shll
inc
cmc
test
sub
cs
pop
xchg
push
sbb
jp
or
mov
jno
pop
mov
sbb
orl
shrb
insb
les
lahf
or
xor
fs
adcl
iret
mov
sub
or
std
leave
jo
or
xchg
repz
jo
dec
pop
xchg
mov
and
outsl
jle
sub
xchg
jb
enter
jle
jo
xor
and
mov
jb
push
popl
jge
dec
test
rolb
cmp
or
iret
add
fwait
rclb
sbb
insl
sub
out
fidivs
int3
fcmovnb
insb
push
pop
aad
fcomip
mov
dec
sub
inc
cmpsb
add
sub
or
xor
inc
xchg
ss
int3
and
cmp
add
pop
sti
jo
mov
mov
movl
cli
jo
sbb
cs
push
imul
out
dec
jecxz
add
nop
jo
mov
fsubs
mov
and
lods
push
pop
pop
jb
mov
pop
jnp
xlat
jo
fiadds
sbb
mov
jo
sub
leave
mov
mov
loope
cmp
das
stos
sbb
jmp
aad
mov
cmp
mov
mov
and
jbe
and
jo
mov
fs
xchg
cmpsb
cmpsl
adc
repz
pop
jo
add
loopne
inc
add
mov
fcomps
mov
xchg
xchg
jo
lret
push
fistl
inc
xchg
hlt
jne
lock
adc
push
lock
jo
ja
xchg
sahf
std
fs
inc
inc
cmpsb
adc
enter
mov
test
jo
xchg
xor
jp
outsb
out
push
mov
jp
insl
lock
lret
das
repnz
jo
fsubs
dec
fsub
xor
ljmp
jae
push
movsb
cwtl
push
adc
xchg
inc
jno
mov
add
push
dec
add
std
push
jo
je
add
adc
int3
push
jmp
out
filds
jo
xchg
fwait
adc
dec
push
xor
fcomps
fnsave
mov
cmpsb
inc
xchg
jp
popa
dec
shr
xchg
gs
cwtl
popf
dec
and
mov
cwtl
or
rolb
lods
rorb
and
jo
mov
or
cmpsl
and
aad
ja
mov
pop
arpl
daa
jbe
xchg
mov
movsb
add
test
jns
aas
mov
loopne
inc
adc
xchg
push
mov
int3
jb
insb
int
fnstenv
pop
add
jo
lods
loope
mov
repnz
xchg
dec
cmp
insl
xor
sti
repz
push
inc
mov
shr
cmpsl
in
xor
or
jne
sbb
jns
shlb
fdecstp
test
jbe
lods
insl
adc
jo
jecxz
mov
jo,pn
lock
xchg
jo
lahf
mov
xor
jg
popf
push
arpl
sbb
mov
xor
pop
dec
std
jo
dec
push
jae
ljmp
add
mov
shll
jo
ljmp
out
popl
jo
push
test
cmp
jmp
lahf
mov
fidivl
into
lret
sub
xor
and
xor
dec
js
cmpsl
xor
fisubl
test
out
adc
pop
jl
pop
je
dec
xor
nop
movsl
sti
jo
insb
mov
pop
push
pushf
lds
test
adc
imul
adc
gs
push
jl
mov
jecxz
insl
jne
pop
jmp
xchg
and
mov
call
bound
popf
cmp
aam
arpl
dec
mov
mov
jo
adc
stc
xorl
pushl
lret
and
std
jo
imull
cmp
repz
or
ds
jmp
imul
mov
fstpt
pushf
mov
jo
inc
add
xor
je
push
cld
outsb
push
lcall
mov
orb
add
cs
stos
sub
in
or
inc
xor
dec
aas
mov
push
cs
jmp
pop
xor
mov
push
jo
mov
adc
in
out
data16
xchg
lock
xchg
daa
sahf
jo
push
sbb
jp
jl
lret
testl
inc
jo
sbb
sti
dec
insl
push
fisubl
xchg
mov
xlat
jno
jne
iret
xorb
sub
adc
stos
xor
adc
addb
cmp
adc
insl
xchg
pop
out
mov
or
pop
push
gs
xor
add
pop
sub
cwtl
jo
sub
mov
and
imul
push
push
das
shrb
les
xor
add
lea
stos
jo
add
push
sbb
hlt
movsb
mov
cmp
push
ja
in
icebp
xchg
iret
mov
jne
dec
ret
mov
mov
dec
stos
jo
add
pop
bound
jo
add
repnz
or
mov
aad
jo
inc
mov
mov
imulb
inc
xor
push
mov
sub
jo
mov
scas
ja
jbe
jo
push
movsb
mov
inc
jns
and
xchg
jae
insl
jl
add
addr16
int3
lahf
jo
lret
aaa
dec
hlt
jo
jmp
cmp
ja
je
xorl
out
pop
sbb
fnstenv
aam
xorb
dec
add
jo
out
mov
push
gs
pop
or
shrb
lahf
out
mov
xchg
subl
in
add
in
jns
mov
sub
bound
shl
pop
mov
aad
lock
imul
lret
rcl
stc
dec
jp
pop
mov
das
lea
push
out
int3
dec
cld
cmp
jl
adc
test
scas
imul
cwtl
cmp
jg
or
mov
inc
rolb
setl
pop
arpl
dec
push
int
xor
lahf
jp
imul
cmpsl
jp
or
and
pop
addb
popf
pop
xchg
sarb
or
pop
jnp
js
mov
sti
jno
and
adc
pop
scas
stos
adc
inc
xchg
mov
cli
not
xchg
mov
add
jo
scas
xchg
out
and
lock
sbb
mov
ja
inc
aaa
or
and
or
jo
cwtl
test
fidivl
push
dec
je
ret
mov
mov
xor
fstl
jg
push
push
mov
jo
sbb
bound
lcall
mov
js
mov
das
stos
xor
pop
push
je
jo
cwtl
adcl
jp
lock
sub
jne
testb
stos
outsb
inc
lods
inc
jmp
in
scas
pop
sahf
test
xchg
aaa
jo
mov
inc
stos
mov
inc
pop
adc
iret
out
sbb
jge
fsubs
inc
jmp
div
sub
orl
insl
stc
sbb
dec
add
and
jmp
jo
jno
jne
mov
mov
in
scas
dec
pop
jb
fld
fdivrl
leave
mov
xchg
out
subb
sub
cld
dec
push
push
cmpsl
mov
enter
inc
cwtl
dec
loop
insl
cld
hlt
jns
pop
jne
pushf
adc
lea
adc
fisubrs
mov
mov
nop
dec
xor
jo
dec
dec
and
ljmp
xor
sbb
loope
cli
add
jmp
test
jno
cmp
adc
enter
lock
xor
std
mov
ret
ret
and
xor
jno
or
sub
adc
jg
sbb
inc
insl
push
aas
loope
lcall
mov
das
and
sbb
cwtl
shl
xchg
fnsave
repnz
jb
outsb
cmp
setle
shr
ret
or
add
mov
in
int3
mov
mov
gs
js
jae
movzwl
jge
mov
pop
or
mov
fwait
push
or
jo
dec
shlb
sbb
inc
outsb
jo
sbb
pop
movsb
lahf
sub
or
jo
and
stos
dec
cmp
jns
stos
pop
rorl
sub
xchg
sbb
push
pop
cmp
iret
repnz
in
dec
lret
mov
lods
inc
push
dec
lock
xor
mov
addr16
mov
mov
hlt
xor
mov
inc
ret
xor
inc
in
addl
push
jne
sbb
out
pop
repz
add
in
sub
bound
adc
xor
mov
push
das
lods
jb
xor
and
add
lods
jns
jo
xlat
mov
fwait
iret
out
in
push
adc
add
inc
scas
xor
cmp
sub
jo
mov
stos
jl
mov
cli
rclb
mov
or
inc
jo
sub
fs
dec
add
inc
outsb
popf
xchg
notl
lds
push
cmp
pop
and
movl
push
out
cmp
inc
insl
stc
dec
jae
arpl
jo
add
out
out
into
pop
jo
dec
int3
jmp
cmp
insl
mov
bswap
in
mov
mov
pushf
jo
pop
out
and
daa
jl
test
repz
jp
popf
dec
outsl
fdivrp
jp
ror
div
insb
pop
xlat
push
lcall
cmp
jo
rorl
outsl
jo
xchg
ret
adc
cmp
cld
xor
fucomp
arpl
lret
pop
mov
adc
push
mov
adc
popa
inc
cmp
pop
sahf
pop
mov
fs
push
lods
or
mov
push
pusha
jb
sub
and
sub
lock
hlt
test
jne
andb
mov
push
sbb
jno
and
mov
test
sub
popa
and
leave
dec
imul
mov
dec
jl
int3
bound
insl
insl
mov
mov
dec
sub
cmpsb
xchg
ds
jo
lock
xorb
addr16
dec
mov
mov
xchg
jecxz
mov
sarl
jne
push
dec
mov
xchg
xor
subb
inc
cmp
jp
insl
mov
je
ja
xchg
aam
out
adc
pushf
push
pop
mov
ret
jge
ja
sahf
dec
fidivs
int3
sub
mov
jp
push
cmpl
inc
cs
mov
mov
les
ds
adc
adc
loop
in
gs
xor
cmpsb
jo
imul
outsb
jo
mov
mov
sbb
dec
out
aaa
imul
mov
or
jo
les
pop
subb
repz
sbb
mov
pop
and
stc
hlt
xchg
cmc
cwtl
std
jne
xor
pop
dec
inc
adcb
pop
or
mov
test
cwtl
adc
dec
add
xlat
push
sbb
fbstp
xor
jmp
xchg
mov
repz
jp
fwait
test
in
addl
mov
cmp
mov
ret
insl
sub
mov
push
mov
movsl
dec
stos
push
jl
xchg
dec
pusha
in
inc
mov
sbb
jo
inc
shrb
mov
push
lret
sti
daa
dec
xor
dec
pop
movsl
bnd
push
sbb
inc
dec
insl
ss
mov
lds
jo
xchg
xchg
in
sub
push
jg
xchg
jmp
scas
loop
test
sub
fucomi
jb
cwtl
nop
mov
cmp
popf
xchg
jo
dec
jae
mov
ret
les
cwtl
jo
and
mov
movsl
loopne
add
inc
jl
xchg
out
sahf
and
push
lods
xor
scas
icebp
lret
sub
pop
and
jle
gs
nop
lock
lahf
jo
inc
xchg
jp
push
fnstenv
jb
sbb
int
adc
pop
cmp
jo
adc
jo
mov
lret
push
xchg
jo
or
inc
mov
jo
xchg
lock
test
jmp
dec
in
mov
jo
pop
ja
dec
int3
dec
jo
ss
imul
icebp
jo
jbe
inc
into
cmp
inc
jo
mov
dec
les
sub
inc
add
inc
cs
mov
mov
fbstp
rcrl
leave
outsb
fiaddl
das
jge
mov
or
scas
jg
pop
cli
fisttps
xchg
fcompl
xchg
push
inc
in
push
insl
and
repnz
bound
mov
test
fmull
mov
aam
dec
sub
jo
and
clc
and
jo
mov
lret
lahf
insl
push
inc
mov
xor
inc
pop
sti
cmp
push
and
xchg
imul
bound
xor
push
or
dec
mov
in
xor
and
adc
jl
xchg
loop
orl
lcall
push
pop
jo
pop
sbb
das
and
inc
or
push
cs
mov
pop
sbb
bound
sbb
scas
fisubs
dec
cmp
mov
mov
cmpsl
nop
jo
psubusb
stos
push
jmp
ja
enter
nop
notb
jae
outsb
jmp
andb
repz
scas
sub
cltd
jg
outsl
mov
insl
cmp
add
int
inc
scas
ret
add
push
dec
arpl
lret
jo
lock
xor
mov
insl
jnp
and
popa
shll
mov
and
jae
adc
jns
sub
mov
xor
icebp
iret
pushf
scas
push
insl
jo
cmp
dec
fcomps
jo
cld
xor
jo
leave
es
clc
add
or
dec
in
lock
jecxz
mov
ds
sbb
xchg
loopne
testl
cmp
lret
loop
push
jo
cwtl
mov
pop
scas
mov
jo
inc
jns
inc
leave
in
ds
or
mov
fidivl
andl
jns
test
inc
pop
je
sbb
daa
mov
push
jmp
jae
inc
jbe
test
jo
or
test
loope
cmpsl
sbb
in
imul
mov
out
push
pushf
loopne
fisubrl
dec
in
sti
sub
mov
adc
dec
cli
pusha
cmp
jo
inc
scas
add
jo
adc
repnz
test
fimull
mov
daa
rdmsr
xorl
dec
cmc
mov
and
push
sub
fwait
out
pushaw
jno
mov
imul
mov
inc
mov
or
cbtw
ja
test
fists
and
pop
dec
jecxz
jo
js
sub
xor
push
fisubrl
adc
int
mov
jo
xor
cmpsb
sub
fidivs
and
add
or
jbe
das
pushf
addr16
ret
mov
inc
pop
js
mov
gs
xor
adc
sub
push
insb
stos
hlt
inc
lock
insl
test
fimuls
add
jo
in
pop
cmp
pop
push
rol
imul
add
dec
and
iret
jb
jp
in
xor
or
jecxz
jo
mov
dec
cmp
addl
sbb
xor
jo
pop
dec
pop
or
dec
loop
mov
or
push
push
rol
fistl
and
sub
xor
inc
pop
test
nop
loopne
aaa
inc
test
and
jo
les
jl
iret
adc
cs
scas
jo
dec
fadds
jnp
and
fistps
call
subl
test
cmpsb
adc
ja
movb
icebp
je
xchg
imul
or
mov
xchg
jle
mov
push
xchg
das
jo
stc
cltd
push
cmp
enter
pop
mov
xchg
jo
mov
loopne
insl
hlt
pop
int
sub
leave
int
popf
xor
and
cmpsb
jp
xor
cmp
int
mov
pop
lcall
loope
and
aad
pop
jmp
shlb
adc
pop
cmc
test
shll
jo
pop
mov
push
inc
sbb
subb
in
mov
sub
pop
aaa
ds
jo
sbb
xchg
int
jp
jo
or
shrl
dec
jo
xor
scas
push
jg
arpl
sub
js
xlat
pop
adc
push
jnp
sub
cmp
jo
jmp
mov
loopne
insl
mov
movsb
cltd
cwtl
cld
stos
push
pop
imul
jo
syscall
bound
jns
cmp
push
and
push
jo
test
lods
inc
jo
xor
sub
repz
leave
sbb
mov
push
jp
xor
lret
popf
mov
cltd
in
add
cmp
aas
scas
push
mov
fs
cld
arpl
jo
por
subb
pop
xchg
ret
arpl
rclb
test
leave
or
pop
or
popf
xlat
dec
cmp
mov
mov
add
fcmovnu
pop
call
cmp
out
mov
dec
ret
and
mov
jo
pop
lock
sbb
cmc
js
rcrb
mov
rcrl
xchg
pop
dec
or
lds
add
mov
rorl
jo
push
push
pusha
shlb
mov
sbb
and
clc
xchg
pop
jo
push
or
insl
sub
hlt
std
mov
jo
cld
push
daa
xchg
adc
insb
mov
scas
lock
pop
pop
int3
jmp
fwait
test
rcrb
out
out
xchg
jo
enter
push
int3
mov
adc
lds
lcall
shl
mov
sti
mov
addr16
lock
xor
dec
push
jne
jno
jnp,pn
and
aas
insl
insl
cmc
incl
lods
add
sub
pop
jo
jp
ljmp
in
es
jo
cmp
or
js
inc
mov
sbb
xchg
inc
insb
push
sbb
mov
adc
mov
xor
popa
pop
sbb
push
fnstsw
push
jo
in
sub
ret
jo
inc
jp
and
pop
jl
mov
loopne
dec
das
xorb
mov
cmp
jo
mov
pushl
ret
mov
scas
inc
and
xchg
jo
xchg
aad
xlat
shrb
arpl
popf
sbb
out
adc
jg
jne
push
jb
or
insl
pop
in
and
add
adc
iret
lea
shlb
and
jo
js
jae
xchg
inc
ret
repnz
enter
xchg
or
adc
xor
shll
les
lahf
mov
icebp
jbe
mov
out
iret
dec
jo
add
loop
jne
ss
jp
outsl
xchg
jo
jle
fimuls
dec
lret
cld
int3
push
js
inc
movsl
jo
jl
mov
ficompl
inc
or
mov
or
mov
decl
jo
test
ffree
imul
ret
dec
cmp
cmc
sbb
imull
loope
push
xor
mov
repz
inc
or
jo
dec
mov
stc
add
adc
lock
cs
inc
mov
cmpsb
jmp
dec
out
data16
push
or
dec
sbb
mov
movsb
call
or
fxch
ret
mov
fs
jo
inc
xor
mov
cmp
stos
cmp
test
lahf
cmpsb
jo
and
fldenv
outsl
push
xor
adc
jmp
xchg
push
xchg
or
mov
pop
out
int3
outsb
jo
mov
jo
test
divb
fsubs
push
hlt
out
scas
adc
jle
adc
pop
ja
jo
pop
je
les
jo
inc
and
je
adc
dec
xor
lods
test
inc
rorl
jo
mov
pop
ret
push
jb
jo
orl
inc
leave
jmp
dec
jo
decl
aad
inc
mov
shll
push
jo
sbb
into
and
dec
xchg
cmp
xor
xchg
jo
sti
cmp
push
jge
jo
mov
pop
xor
inc
loopne
jo
cmp
sbb
imul
inc
jmp
test
lods
cmpsl
jbe
negl
adc
jne
jns
ljmp
xchg
pop
stos
lcall
int3
jecxz
jnp
xor
or
lret
jl
lods
pushf
pshufw
aad
ja
and
and
loopne
jo
jae
pop
cli
add
sub
jg
sahf
adc
xchg
xor
inc
bound
push
dec
add
hlt
ret
mov
pop
push
call
scas
lods
and
push
jo
pop
pop
jg
adc
sbb
insb
in
loopne
jo
xor
js
lret
pop
dec
cmpb
test
pop
cli
cmpsb
adc
out
cs
cmp
jp
les
and
cld
imulb
push
pusha
push
into
out
das
xchg
pop
mov
outsl
jg
cld
aaa
mov
mov
fcompl
add
mov
push
insb
lret
sbb
rorl
or
inc
loopne
and
fisubs
or
adcb
popa
jge
fldt
pop
cs
jo
jns
rcr
insl
add
lock
inc
jo
jne
lods
inc
aad
dec
insl
cmp
xor
jo
test
mov
jo
or
adc
lea
jg
xor
and
sub
jo
mov
push
int
jo
inc
lahf
loope
jbe
mov
cmp
jo
arpl
das
add
ja
pusha
push
jle
inc
or
add
cmpsb
dec
insb
in
jo
pop
imul
cmpsl
in
or
adc
mov
fmuls
mov
pop
inc
cltd
lahf
mov
mov
ja
sub
sarb
jl
adc
das
pop
popa
icebp
jecxz
pop
lods
popa
orl
xor
out
push
mov
jl
jo
push
in
sbbb
adc
push
lods
fcom
out
jp
ljmp
inc
xchg
jo
push
add
and
and
cmp
test
add
hlt
cmp
inc
stc
out
add
fnstenv
dec
lea
loop
jmp
inc
pop
adc
clc
xor
imul
aas
out
pop
jg
xorb
xchg
mov
jo
lock
or
in
pop
pop
rcrl
jo
adc
jl
mov
inc
mov
fisttps
pusha
cld
imul
dec
lock
pop
mov
jae
repnz
cmp
jo
mov
jl
popf
imul
pop
xor
xchg
and
sti
jg
or
into
call
js
pushf
mov
jne
or
sub
pop
adc
push
inc
divl
mov
inc
jo
xchg
jno
ljmp
ds
push
adc
lret
jns
into
lret
xchg
lock
lock
fwait
pop
loopne
jo
xchg
adc
sub
jae
mov
nop
push
imul
sbb
nop
lock
fnsave
mov
test
lds
mov
clc
jo
pop
mov
jo
orl
imul
or
mov
jo
mov
daa
pushf
dec
lock
dec
mov
jp
dec
sti
stc
leave
jp
iret
mov
stos
jmp
jo
sbb
rol
dec
xchg
jo
or
cmp
jp
outsb
dec
cwtl
int
dec
cmpsb
mov
mov
inc
push
shll
rorb
jae
dec
mov
out
push
jle
das
or
repnz
lret
cmp
es
pusha
cmp
jnp
xchg
jo
pushf
std
adc
aam
insb
inc
add
lock
xchg
cmp
ds
mov
outsl
or
inc
jle
aad
inc
mov
jo
mov
push
pop
outsb
shrl
out
jb
cwtl
out
imul
add
pop
sub
xchg
cmp
sar
dec
bound
sahf
or
or
cld
dec
ja
mov
xchg
jno
faddp
test
add
leave
jo
push
mov
push
fidivl
push
dec
jb
fwait
addr16
aam
hlt
mov
cmp
lret
imul
mov
xor
pop
adc
fwait
push
jmp
jecxz
outsb
cmp
cwtl
loope
pop
hlt
mov
jno
in
imul
and
mov
mov
add
mov
sub
mov
jo
insl
inc
sub
jo
in
sub
and
xor
pop
sti
mov
das
cwtl
aas
mov
pop
repnz
mov
imul
push
sahf
mov
lahf
insl
subb
jge
mov
leave
mov
mov
dec
test
dec
subl
push
sahf
xchg
mov
lock
pusha
test
and
fwait
push
jp
cltd
aad
jno
mov
test
sbb
je
dec
xchg
scas
cmp
jo
es
cmp
jo
test
sti
xchg
cmp
repz
ljmp
jo
inc
inc
shrl
and
xor
inc
push
loope
mov
dec
cmp
fildll
scas
testb
fsubr
in
jo
push
lret
cmp
cmp
or
aad
sarl
addb
add
cmc
xchg
adc
jb
fldl
lcall
mov
rolb
lods
aad
stos
jge
scas
lahf
pop
or
jo
fwait
mov
jo
xlat
push
popa
call
icebp
mov
leave
push
jp
sbb
push
sub
xor
mov
andb
ds
cmp
push
jo
sbb
pop
jo
out
inc
jp
add
je
mov
mov
inc
mov
xlat
adc
xchg
out
sub
adc
jp
adc
sbb
cmp
sub
pop
lahf
rorb
pop
out
push
jne
sbb
cmc
in
cmc
shrb
push
sbb
pop
adc
sti
lret
dec
scas
add
pop
add
jo
xchg
mov
dec
pusha
ror
addr16
mov
daa
aaa
inc
jmp
sub
pop
sbb
xchg
push
mov
jns
jo
add
sub
lds
dec
push
lcall
pop
adc
pop
mov
add
lds
ja
xor
xor
inc
push
or
les
xchg
dec
in
mov
or
enter
xchg
jns
jo
sarb
mov
lahf
shll
push
mov
inc
and
je
inc
jae
or
jnp
mov
xchg
cmp
scas
mov
and
jecxz
popf
test
mov
data16
mov
jo
jg
sub
loop
adc
movsb
mov
aaa
mov
test
loopne
mov
mov
pusha
inc
lea
jo
mov
popa
sub
out
je
xchg
cmp
adc
add
inc
xor
add
fists
fdivs
push
outsb
fiadds
and
je
cmp
mov
js
in
cmp
xlat
push
push
adc
aas
test
cmpsb
lods
pop
mov
mov
fsubrs
sub
or
in
je
pop
and
xor
and
loop
and
pusha
mov
xchg
cs
data16
das
pop
cli
daa
or
and
repz
xor
clc
fwait
sub
xchg
js
sti
or
xor
jle
mov
xchg
cmp
je
pop
fists
or
xor
insb
test
iret
push
ret
cmc
je
sti
outsl
lea
mov
lahf
repnz
mov
nop
insb
sarl
push
or
pop
fcmovbe
ss
mov
dec
dec
mov
xor
pop
push
mov
arpl
std
xchg
ja
fsubrl
jo
cmpsl
xchg
or
test
int
mov
and
ljmp
xchg
mov
xchg
sub
mov
clc
mov
mov
jno
insl
push
xor
pop
rorl
mov
and
cwtl
stc
pop
mov
movsl
icebp
stc
push
outsb
faddp
test
xor
dec
mov
stos
adc
xor
fldl
sub
outsl
dec
push
mov
inc
data16
jo
xor
xor
xorb
fdivrs
aam
pop
aad
out
jo
inc
lret
outsb
pop
inc
jo
push
pop
aaa
jle
xchg
or
cmp
pop
mov
jo
xchg
hlt
psubw
jo
pop
mov
les
lds
add
sahf
push
out
inc
or
pop
pop
out
rcr
cmp
inc
jo
dec
movsl
in
adc
inc
jno
push
int3
xchg
push
pushf
and
fdivp
jne
movsb
fildll
ja
dec
xor
and
pop
jo
mov
repnz
call
and
jae
adc
lret
imul
wbinvd
mov
pushf
jmp
inc
or
mov
daa
mov
mov
push
pop
dec
negb
mov
sub
mov
jb
add
loopne
out
jo
mov
jae
push
mov
adc
add
mov
fstps
push
push
adc
adc
mov
mov
pusha
and
push
push
cwtl
std
mov
test
addb
mov
jo
insl
scas
sbb
xchg
sub
push
cmpsl
add
xchg
scas
outsb
loopew
out
mull
add
jo
sub
pop
pop
les
lock
jne
loope
pop
mov
in
push
pusha
popa
xchg
out
jo
cmp
jp
and
std
mov
fmulp
adc
mov
mov
test
repnz
xchg
adc
cmp
mov
dec
adc
xor
cs
addr16
jp
xchg
sar
push
pop
in
arpl
mov
jo
xchg
mov
orl
push
sahf
ja
cmp
push
cmp
outsl
add
xchg
lock
adc
sbb
pop
cmc
jo
fdivs
jae
jo
xor
jle
imul
ljmp
push
mov
cmc
push
or
push
dec
and
sbb
xchg
jo
pop
push
test
rcrw
push
jo
in
pushf
mov
ret
lock
add
pop
mov
sbb
inc
iret
dec
mov
ja
cmp
xlat
scas
sbb
jge
loop
mov
push
or
ror
ffreep
das
int3
sarl
ret
mov
outsl
insl
xchg
xor
mov
aad
jno
lret
sub
pusha
sbb
fisubrl
ret
ja
xchg
mov
jmp
adc
call
sub
push
mov
pop
jo
xor
jle
add
or
jns
dec
ret
sbb
jo
and
int3
add
mov
inc
scas
lock
push
xchg
jp
push
stc
fadds
pushf
pop
push
in
lock
in
jno
xchg
sub
mov
push
test
cmpsb
jo
add
stos
cmp
adc
jb
sub
js
dec
das
jns
out
ret
add
jo
lret
mov
jnp
xchg
lds
dec
mov
test
mov
jg
je
xor
inc
sub
xor
adc
aas
sarb
jne
dec
leave
push
jo
mov
mov
mov
adc
stc
dec
jno
outsb
js
outsl
lods
inc
xchg
mov
out
loope
sbb
cli
and
js
mov
adc
mov
mov
mov
cmc
pop
lret
lahf
jo
and
push
icebp
xchg
mov
fadd
or
push
gs
jo
dec
cmc
xlat
bound
lock
stc
adc
addl
adc
cmp
sarb
lahf
leave
mov
and
cmpsb
cwtl
scas
insl
push
daa
sub
movsl
mov
push
sbb
popa
imul
dec
sbbl
adc
add
mov
pop
ss
fnsave
and
sbb
flds
cmp
int
sbb
pop
jae
aam
push
adc
outsb
cmp
add
ficompl
inc
mov
xor
cwtl
addr16
or
popl
dec
inc
jg
nop
jo
test
and
stos
lret
dec
in
fbstp
out
dec
pop
adcb
dec
and
xchg
jno
incb
imul
movsl
loopne
bnd
testb
jp
rcrl
ret
xchg
jbe
lock
hlt
aaa
adc
pop
mov
test
push
or
jnp
push
mov
push
int3
and
in
ja
jp
lea
cmpsb
adc
push
cld
mov
and
imul
add
jae
out
outsb
mov
clc
xchg
pop
adc
rclb
or
in
xchg
xchg
lock
icebp
or
mov
mov
gs
xchg
and
inc
or
pop
dec
rorb
lahf
insl
in
xchg
pop
popf
xchg
mov
cmp
shll
sbb
icebp
sub
clc
or
xchg
cld
push
or
clc
insl
rolb
jg
sbb
mov
cmpsl
or
add
ja
scas
sti
dec
mov
jae
jnp
lods
mov
iret
mov
mov
jae
mov
imul
push
lock
lods
fwait
jl
sbb
xchg
repz
mov
arpl
pop
ret
jo
test
mov
outsb
sbb
jle
add
jnp
popf
stc
push
addr16
sbb
mov
sub
xor
inc
push
ljmp
gs
insl
out
stc
pushf
sbb
cmc
pusha
push
mov
les
inc
adc
push
je
jbe
mov
jae
sahf
xor
daa
fistl
rcrb
xchg
in
aaa
fidivs
aad
xor
out
stos
mov
mov
cmp
pop
addr16
push
add
sbb
add
popf
push
push
movsb
js
mov
pushf
push
popa
sub
jo
out
xchg
repnz
out
jo
cli
adc
inc
test
pop
mov
enter
xchg
icebp
js
mov
call
insb
jnp
cmp
insl
popf
cwtl
push
push
into
hlt
mov
push
mov
cwtl
rep
subb
push
push
xor
mov
cli
ljmp
lock
or
cmp
insb
sbb
add
push
add
xchg
push
jo
xchg
loope
notb
adc
jo
sbb
and
out
xchg
fmulp
dec
insl
das
out
sub
jmp
jg
hlt
mov
sub
sbb
in
out
add
push
shufps
in
pop
loopne
cli
mov
sub
jae
cs
sbb
push
movsl
cld
lahf
xchg
and
push
push
orb
testl
ret
test
insl
leave
inc
test
pushf
mov
mov
addr16
push
lds
cmpsb
jns
cmp
or
cmpsl
ja
repz
inc
fsts
fnsave
mov
bound
adc
repz
out
jbe
push
lods
std
in
mov
pop
push
shlb
xor
xor
sbb
xor
lods
pop
fnsave
mov
scas
in
insl
add
xchg
or
and
rcpps
outsb
jo
sbb
mov
std
arpl
push
cwtl
dec
jb
and
mov
jo
push
pusha
dec
xchg
lret
je
aad
mov
popa
or
scas
insl
adc
push
add
jl
outsl
mov
test
jo
xor
std
fs
jecxz
inc
pop
aad
ljmp
jge
dec
jo
and
test
arpl
lds
nop
and
imul
jo
in
loop
jo
aaa
or
and
pop
gs
push
lret
and
test
ja
imul
pop
lea
pop
inc
iret
jo
js
movsl
mov
stc
dec
bound
stos
jae
pop
bound
jo
dec
xchg
pop
mov
es
cmp
xlat
bound
adc
mov
rol
fs
repnz
rclb
xchg
cwtl
mov
into
mov
or
and
jns
ljmp
popa
ss
shlb
out
push
or
bound
loope
xorl
test
jno
dec
inc
jo
mov
fs
gs
ja
adc
mov
mov
add
repz
cmc
pop
mov
sub
mov
push
jo
mov
jl
test
dec
lock
inc
stos
cli
loopne
jo
cmp
and
sub
ficompl
jo
sbb
out
fstps
jmp
sbb
data16
lea
andb
sbb
cmpsl
or
and
bound
out
cmp
test
sub
xor
test
mov
jp
jno
xlat
divl
dec
jno
movsb
adc
cmpsl
sbb
rcrl
and
lahf
fwait
int3
test
jo
inc
pop
in
jecxz
xchg
sub
aaa
outsl
dec
ret
movsl
jo
scas
push
mov
mov
jo
mov
shrl
stos
sbb
cmp
sbb
fldenv
dec
sti
dec
jns
repz
jecxz
or
ljmp
or
into
jo
cli
sub
mov
dec
jmp
xchg
outsb
inc
in
xchg
outsl
pop
or
dec
daa
sbb
inc
bound
xor
mov
dec
mov
adc
cmp
xorl
sub
inc
fisubs
adc
ret
leave
pop
nop
dec
mov
imul
and
push
jb
pop
pusha
fildll
sbb
sbb
mov
daa
gs
fs
cmc
cmp
out
pusha
jl
xor
imul
cmc
insl
test
xor
rorb
mov
leave
aam
cmpsb
xor
inc
mov
in
cmp
loopne
mov
push
call
lret
mov
mov
lods
push
repz
xchg
adc
lods
aaa
inc
jns
push
mov
pusha
and
gs
in
cmp
jl
cmp
out
loopne
pop
mov
mov
lods
aam
lock
jne
idivb
js
js
jns
repz
adc
cwtl
clc
repz
adc
xacquire
std
and
cmc
cmpsl
ficoms
pop
clc
fdivrs
mov
js
mov
jne
popa
xchg
divl
push
jp
mov
jp
cmpsb
subb
rcr
rcll
pusha
xor
mov
sbb
jb
dec
xchg
rolb
test
ljmp
push
fldt
js
inc
xor
andb
pop
pop
shll
pop
xor
pusha
sbb
mov
xor
lea
push
clc
and
int
lea
xlat
cmpb
inc
call
push
xchg
fs
cmc
cmp
sbb
dec
lock
cwtl
test
jno
lock
and
cs
inc
mov
cltd
pusha
xchg
push
fs
sbb
in
adc
int
pop
mov
and
xchg
and
fxch
sbb
adc
repz
clc
cwtl
in
adcl
iret
mov
sbb
xchg
mov
cltd
je
in
xor
dec
add
cli
arpl
xchg
jge
push
insl
sbb
jo,pt
cmp
or
adc
ljmp
test
rol
and
scas
and
movsb
xor
mov
fs
sahf
stos
clc
inc
cli
gs
in
dec
in
hlt
cld
xor
fcmovnbe
mov
loopne
inc
push
jecxz
jns
adc
push
iret
xor
push
imull
adc
icebp
xorb
sti
lcall
aad
filds
jl
push
leave
mov
imul
out
mov
fimuls
movsb
sbb
repnz
movsb
fildl
mov
fisubs
bound
rolb
aam
or
mov
lcall
mov
dec
xor
dec
mov
test
repz
js
add
clc
and
aaa
xchg
data16
insb
clc
fwait
pushf
jne
sub
xorb
adc
sahf
xchg
repz
sti
add
test
mov
popa
cpuid
lock
pop
cwtl
and
push
cld
push
inc
mov
aam
insw
lods
jg
cmpsl
inc
cmp
lods
out
mov
daa
js
cltd
pushf
arpl
in
xor
jns
xchg
jns
xchg
jne
cmpsl
cmpsb
movsl
adc
sti
sbb
dec
leave
push
pusha
out
xchg
push
and
outsl
scas
jecxz
ss
js
adc
push
int
mov
out
dec
cltd
jns
outsl
outsb
inc
inc
cmp
xchg
pop
lods
aam
jb
cwtl
pcmpgtw
nop
sahf
pop
xor
movsl
jno
pop
out
mov
jne
xor
in
mov
jo
insl
sbb
or
movsb
jmp
mov
push
mov
sub
mov
pop
repz
arpl
cmpsl
scas
xor
rcrb
fnstsw
mov
enter
mov
jnp
jp
gs
inc
mov
data16
xorl
dec
mov
nop
fs
cmc
pop
xor
pop
shr
and
enter
fs
or
jne
mov
cmp
arpl
pusha
cltd
dec
je
shl
imull
pop
dec
and
rolb
lock
sub
mov
and
xchg
mov
clc
sahf
divb
cmpl
mov
adc
jb
sbb
dec
bound
aam
sub
mov
mov
mov
mov
scas
jns
xorb
lock
cmp
aas
ja
push
add
sub
es
insb
pushl
and
enter
mov
ljmp
inc
int3
cmp
and
subl
in
call
sahf
adcb
and
and
cwtl
jle
push
push
mov
mov
sub
stc
iret
cmpsl
add
je
mov
ss
repnz
xor
jne
push
xchg
adc
pop
nop
inc
cmp
mov
shr
mov
lea
stos
cmc
pushf
rcll
addr16
in
sti
and
cmp
push
mov
pushf
js
in
mov
pop
jg
mov
dec
popf
adc
in
jle
fistl
mov
scas
addr16
push
sub
adc
out
adc
insl
adc
rorb
inc
test
pusha
clc
and
jle
cmpsl
andl
or
xchg
sbb
hlt
xchg
int3
jb
loop
cwtl
dec
fcomps
outsb
in
sub
popa
mov
mov
loopne
loop
sub
cwtl
mov
pop
pusha
pop
int3
insl
cmp
jbe
insl
jl
insl
and
cld
js
xchg
push
test
xchg
jae
jno
push
xchg
mov
je
xor
js
js
xchg
gs
icebp
gs
scas
jge
scas
mov
dec
addb
xchg
lret
push
cltd
js
xchg
frstor
mov
jno
add
hlt
pop
xchg
js
pop
add
sub
jne
xchg
push
lds
lock
in
dec
mov
add
sbb
test
pusha
adc
loopne,pn
push
xchg
push
out
cmp
into
or
xchg
mov
inc
lcall
pop
adc
shl
mov
aam
sub
std
cmp
clc
scas
mov
test
sub
push
andb
push
jne
je
push
adc
lock
icebp
adc
push
or
sbb
inc
xor
cs
icebp
inc
xchg
inc
lock
pop
lods
movsb
in
and
xor
jle
or
pop
sbb
fmull
cmp
int3
sti
je
sbb
mov
sub
lock
fnstenv
mov
push
js
nop
movsb
xchg
fs
and
sbb
inc
and
add
mov
add
and
and
in
aad
dec
mov
lock
mov
enter
xchg
popf
dec
mov
adc
inc
sub
sub
into
je
fsubr
loopne
hlt
add
ret
jo
into
je
shlb
adc
jo
push
cmp
lret
mov
into
add
cs
pop
cmp
pop
lcall
cmp
mov
jmp
insb
hlt
push
out
in
ds
cld
dec
lock
cmp
int3
sub
js
push
in
sub
mov
cmp
push
aam
sbb
xchg
call
add
ret
mov
dec
xchg
cvtdq2ps
je
cwtl
test
in
inc
imul
xchg
jl
jge
jae
pop
lock
jo
test
pop
jecxz
mov
jmp
sbb
pushf
shll
mov
cmp
hlt
jge
push
mov
mov
dec
xor
adc
push
in
add
jno
lret
mov
pushf
mov
jnp
sti
xor
outsb
mull
jbe
repz
cmpsl
mov
outsl
sub
sbb
enter
jmp
push
leave
and
push
dec
movsb
inc
push
lods
dec
push
repz
sbb
mov
lcall
insb
jmp
or
and
cs
pop
es
lret
xchg
lahf
jmp
dec
sub
sbb
in
rcrb
scas
cmp
jl
xchg
fs
mov
je
scas
jp
adc
xchg
je
push
loopne
mov
mov
xchg
icebp
lock
inc
je
pop
sti
sub
sbb
push
xchg
xchg
pop
sub
ror
mov
lcall
loope
inc
ss
xchg
enter
les
pop
xchg
insb
pop
jmp
xchg
sub
packuswb
cwtl
inc
scas
sahf
sahf
push
scas
push
fsubl
xor
rcll
sub
ljmp
jns
lock
pop
mov
cwtl
psrad
repnz
push
outsl
divl
fwait
cmc
mov
in
xchg
and
push
mov
mov
in
loopne
cmp
lods
lret
mov
mov
adc
jmp
sub
dec
js
push
negb
ljmp
fldenv
xorl
and
leave
leave
jp
sub
js
mov
daa
mov
xchg
pusha
cwtl
jp
data16
pop
das
mov
shlb
les
dec
adc
push
mov
mov
stc
fcomps
stc
xchg
mov
mov
adc
dec
or
ja
sub
imul
test
das
lds
out
jo
jle
mov
scas
out
imulb
push
lret
mov
dec
xorl
dec
test
jae
sbb
jae
push
scas
jo
dec
stc
jecxz
xor
arpl
dec
jl
lock
sub
ret
jge
push
mov
xor
or
ljmp
scas
jp
mov
clc
dec
ljmp
je
push
cmp
and
insl
jp
cltd
jl
cli
or
insl
sbb
cwtl
sub
cmpb
xchg
cmpsb
pop
into
ret
sub
mov
cmp
fwait
adc
jecxz
loop
cmp
jae
jecxz
notb
ds
outsb
adc
andl
lahf
je
insl
sbb
and
push
hlt
xchg
sbbb
stos
sbb
mov
and
and
lods
loope
jle
pop
sub
cmp
fwait
mov
xor
outsl
mov
mov
aas
mov
and
mov
sub
imul
and
push
js
sub
mov
xchg
loop
xor
sbb
loope
dec
fiadds
movsl
and
push
push
sbb
mov
cmp
loope
mov
loopne
sbb
sbb
push
cwtl
in
int3
mov
in
data16
lahf
bound
inc
xchg
dec
mov
cwtl
setne
and
js
mov
inc
pop
pushf
xchg
lock
mov
mov
je
sbb
out
xchg
mov
fs
push
popf
cmc
xor
push
lahf
xchg
in
mov
push
mov
cltd
insb
shl
or
jg
jae
stos
out
inc
nop
adc
outsb
mov
in
stos
mov
arpl
mov
and
test
js
pop
into
test
loop
adcl
mov
mov
int3
shrl
cmp
in
or
pop
adc
icebp
push
mov
mov
sub
jo
aas
movsb
jl
inc
aas
mov
out
cmpsl
and
cmp
clc
add
xchg
scas
cmc
dec
cmp
sbb
mov
inc
sbbl
out
sbb
and
push
cmpxchg
jae
aas
xchg
adc
sets
dec
jnp
shl
jp
fistl
pop
lods
jo
mov
xchg
enter
out
and
fs
js
xchg
aad
dec
adc
or
popf
inc
mov
fsubs
sbb
jne
cmp
adc
and
scas
out
or
shll
cwtl
mov
adc
mov
rorb
insl
cmp
popf
jb
mov
cmp
cltd
jmp
sub
loope
rcrl
jnp
pop
jge
push
push
mov
lahf
ficomps
sbb
test
call
popa
in
arpl
pop
mov
mov
into
adc
mov
xchg
xor
loopne
cmp
sbb
adc
pop
xor
neg
xor
push
movsb
push
cmp
insb
lock
sub
add
xorb
mov
adc
jge
gs
xchg
je
mov
xor
mov
push
test
adc
xchg
pop
lret
xor
mov
faddl
pop
cmpl
mov
shll
pop
sbb
pop
xchg
mov
jmp
xor
js
cwtl
adc
inc
lods
test
add
xor
orl
jno
xchg
pop
adc
xchg
push
cld
add
movsb
mov
cmpsb
scas
adc
and
pusha
push
insl
jne
arpl
inc
mulb
out
cmp
sbb
xchg
iret
jnp
insl
fsubs
xchg
into
lahf
push
sbb
pop
mov
mov
inc
pop
cli
sub
shl
inc
push
fs
cli
dec
adc
scas
cmp
cmp
aas
cwtl
sti
push
inc
jo
push
sub
stc
ss
cmp
cmp
add
sub
xchg
cmp
scas
sub
jo
push
mov
sub
iret
imul
shrl
movsb
mov
mov
mov
adc
xor
xor
cwtl
les
mov
imul
lods
and
xor
movsl
mov
test
mov
aas
jno
in
mov
stos
outsb
aas
sub
lret
adc
in
imul
hlt
xchg
cmpsl
jno
pop
cmp
cmp
data16
adc
pop
pop
gs
in
push
push
hlt
js
aad
pop
jl
decl
rcll
push
pop
sub
in
cwtl
popf
hlt
fmull
cmp
shll
push
xor
xor
inc
cwtl
mov
movlps
push
daa
push
ret
addr16
jno
push
sub
mov
pop
xlat
inc
cmp
bound
and
cwtl
sub
shlb
lods
pop
movsb
or
xor
cwtl
mov
rcll
out
sub
outsb
jecxz
sahf
mov
repz
dec
mov
xchg
cmp
xchg
rcrl
pop
js
jne
adc
jmp
lea
xchg
pop
jo
mov
je
scas
mov
and
ja
das
test
rclb
mov
cmpb
jo
in
xchg
and
dec
es
test
mov
and
in
jne
lds
add
sahf
cwtl
push
loop
and
mov
insb
in
sbb
int3
test
stos
inc
xor
nop
jmp
fs
lock
cmpsl
and
cmpsb
daa
nop
dec
hlt
mov
xor
xchg
xchg
jb
int
pusha
lcall
js
dec
rcrb
jbe
adc
addr16
jb
hlt
stos
out
daa
push
test
push
or
pop
push
std
aam
xorb
imul
mov
xchg
test
orl
jb
xchg
je
arpl
inc
mov
and
aam
addr16
ja
xchg
push
mov
mov
cs
xor
addr16
inc
xor
sahf
mov
jno
daa
insl
in
mov
out
in
jo
sar
sti
or
xor
xchg
jbe
inc
push
fwait
push
push
mov
arpl
sbb
jno
mov
xchg
scas
out
lret
mov
mov
stos
daa
inc
pmaddwd
sti
mov
aam
in
mov
fcmovu
push
shlb
jno
sbb
addl
mov
outsb
scas
iret
sbb
push
jne
mov
jne
sub
push
mov
and
je
push
push
pop
fistpll
sub
and
inc
and
push
decl
jo
lock
mov
lods
xchg
and
add
sti
mov
or
jmp
popa
cs
lods
mov
fildl
mov
mov
imul
das
xchg
cmp
xchg
mov
lret
ja
inc
sub
push
and
leave
push
and
xchg
or
sub
inc
jo
fcompl
xchg
adc
fs
mov
cmp
lock
fsubl
pop
cwtl
lahf
bt
push
xlat
jnp
out
adc
pop
ret
fisubrs
in
lods
mov
insb
add
mov
inc
shl
sub
jae
mov
sar
mov
cmp
mov
push
xor
jp
and
rorl
arpl
lods
and
ret
in
mov
xchg
aaa
add
cmc
and
bound
pop
cmp
mov
in
mov
dec
es
fildl
adc
sbb
cmp
lods
cmp
pop
sub
dec
insb
xchg
fwait
pop
and
in
jge
mov
cwtl
int3
ret
ja
and
pop
cs
lock
in
adc
in
in
sti
cmp
cmc
fs
mov
jbe
xor
sbb
push
push
jae
aam
es
jle
lea
rorl
das
out
loop
and
sbb
push
or
mov
mov
test
lret
xlat
outsb
divl
pop
pop
pop
nop
or
adc
dec
decb
cmp
xor
loopne
sbb
mov
adc
xor
push
out
xor
pushf
pop
je
or
inc
sub
adc
addl
xchg
ret
clc
shlb
jmp
bnd
subb
lret
sub
xor
notb
inc
jge
mull
in
xor
fs
mov
outsb
push
and
fimuls
test
hlt
pop
test
xchg
outsb
test
lock
int3
mov
xchg
push
cmc
cwtl
sub
sbbl
mov
pop
dec
jmp
cmc
fstl
clc
adc
fsubs
xchg
xor
and
sbb
add
inc
pop
icebp
mov
or
mov
adcl
pushf
push
sub
add
sahf
dec
aam
loopne
push
jle
mov
in
jo
adc
push
pushf
cwtl
cli
test
add
in
inc
ss
mov
repnz
pop
adc
sub
dec
getsec
cs
jo
cwtl
int
inc
add
pop
hlt
xor
iret
jg
cmc
dec
andb
ss
lret
jbe
sbbl
loopne
mov
mov
mov
xchg
pop
push
jae
in
push
mov
xchg
daa
or
arpl
dec
ljmp
ret
lea
xchg
decb
inc
pusha
push
push
hlt
pusha
je
imulb
in
sbb
pop
dec
mov
sahf
jge
jl
test
out
adc
mov
sub
push
xchg
xor
pusha
push
mov
nop
vgatherdps
repnz
xchg
testb
pop
jl
out
and
enter
int3
or
push
cwtl
cltd
ret
outsb
mov
mov
divl
stc
les
fldcw
sbb
pop
loope
fsubr
pop
pop
jecxz
jmp
mov
addr16
jecxz
inc
clc
pusha
outsb
sbb
loope
nopl
imul
and
cwtl
xchg
je
addr16
pop
jl
sub
jo
push
test
push
jnp
stc
jno
cmc
mov
dec
aad
or
adc
rcrl
pop
jne
push
and
jae
push
pop
mov
pusha
imul
out
fldt
pop
pop
ja
pop
xor
lcall
mov
dec
inc
cmp
sbb
jnp
into
jb
jge
imul
fmuls
push
insb
movsl
and
hlt
mov
jl
dec
icebp
clc
fs
mov
sti
cli
pop
fldl
jmp
arpl
enter
sub
lret
jne
jl
aam
dec
mov
loope
pushf
loopne
out
sbb
mov
lods
pop
repnz
inc
lods
je
pushf
pop
dec
dec
clc
xor
xor
in
sub
xchg
xor
push
sub
mov
pop
sub
daa
sbb
cmp
mov
lods
push
push
mov
push
and
enter
pop
stos
mov
push
pop
test
mov
cli
mov
pop
push
lret
jo
mov
mov
xchg
mov
mov
xchg
ja
mov
rclb
mov
lret
aad
mov
dec
jne
jle
mov
and
and
loopne
pop
cwtl
aaa
fwait
add
lods
out
jb
inc
sahf
xchg
sub
in
mov
mov
xchg
outsb
mov
test
xchg
fs
das
pushf
or
cmc
xchg
sahf
push
sbbl
aas
jne
pop
testb
xchg
cli
adc
mov
sub
je
and
pop
cwtl
jnp
sahf
repz
add
pop
cmc
and
dec
pop
pop
push
cli
inc
mov
and
sub
icebp
leave
push
add
xor
daa
mov
cwtl
ljmp
sbb
mov
scas
clc
adc
std
testb
int3
xchg
cli
test
in
jge
fs
pop
xor
add
sub
repz
or
enter
scas
sub
pop
out
outsb
mov
loopne
mov
ljmp
mov
pop
test
xchg
dec
cmp
mov
int3
adc
mov
mov
pop
mov
dec
cmc
out
jg
dec
mov
jge
bound
jno
sbb
mov
mov
test
lods
in
jns
push
push
or
cmp
fbld
ja
mov
sahf
push
out
insb
orl
mov
and
pushf
orb
aam
jbe
lahf
test
gs
jmp
int
repnz
push
sbb
jne
mov
cwtl
rcrl
pop
pop
fistl
in
mov
inc
in
lds
push
xor
ror
sbb
adc
rclb
xchg
jne
or
or
jne
mov
xchg
pop
stos
mov
ss
js
dec
std
adc
inc
hlt
mov
xor
mov
pop
sahf
fnstsw
adc
jp
xchg
mov
aas
jl
or
sub
jne
inc
inc
in
cld
sub
movsb
add
negb
out
lock
dec
icebp
cmc
ds
push
aaa
dec
mov
or
mov
in
loope
sub
mov
xchg
push
iret
pop
es
xor
sbb
push
lahf
nop
lret
je
roll
jnp
jae
aas
cwtl
notl
jns
inc
addr16
mov
ror
testb
cld
andb
jne
mov
and
sbb
cmc
cmp
push
mov
and
dec
jl
xchg
imul
imul
or
je
fcomi
js
dec
divb
push
cmc
cmpsl
pop
xchg
jns
mov
cwtl
nop
roll
call
daa
mov
and
lret
mov
into
xchg
or
clc
and
push
mov
enter
and
repnz
jbe
sub
hlt
mulb
xchg
sbb
mov
jo
or
dec
aas
imul
adcl
xchg
add
xor
sub
cmc
mov
in
or
pop
inc
or
inc
cmp
call
push
test
lahf
pop
xchg
call
mov
pop
xchg
cwtl
clc
sub
mov
xchg
jo
mov
pop
test
cmp
out
xor
and
add
inc
stos
cmpsl
mov
icebp
pop
pushf
pop
jl
xchg
mov
in
cwtl
adcb
and
ficoms
pop
jle
cmp
data16
dec
sub
or
je
jge
mov
pop
mov
xchg
leave
pop
cmp
jne
cmpsb
push
pop
int3
mov
push
or
inc
mov
addb
pop
rorb
les
push
push
iret
mov
test
cmc
and
cmp
and
or
sub
xchg
clc
jle
mov
push
adc
aas
mov
arpl
scas
imul
sbb
cmp
scas
inc
test
jge
ss
push
les
mov
jl
shrl
cmp
push
and
xchg
fisttpll
int3
rolb
pop
loope
cmc
inc
sub
bound
pop
sti
xchg
xor
pop
insl
jbe
addr16
fs
lea
jg
pusha
cmp
push
cwtl
in
sbb
push
inc
adc
dec
in
adc
xor
imulb
pushf
icebp
add
lret
push
outsb
pop
xchg
addb
sub
iret
cmc
xchg
inc
cmpsb
jne
aas
push
or
xchg
jge
sub
test
xchg
fs
lcall
fisttpll
pushf
dec
sbb
imul
xchg
insl
addr16
js
xchg
xchg
in
jne
push
cwtl
fwait
cs
sub
jl
dec
add
pop
shll
adc
sub
sbb
mov
dec
push
cli
daa
push
fistpl
ret
stos
and
adc
shll
xchg
cmp
inc
dec
cwtl
sbb
js
mull
outsl
cld
mull
out
stos
mov
jp
mov
mov
fdivrs
test
and
es
out
popl
mov
mov
sub
pop
mov
jae
pop
cmpsb
sub
aam
sub
jl
dec
jle
sahf
mov
rcr
add
test
cmc
repz
or
ret
icebp
mov
cmp
lds
icebp
pop
sub
push
ret
mov
inc
inc
idivl
std
sub
stc
adc
test
mov
sahf
hlt
out
add
mov
jno
stc
out
into
ds
or
enter
iret
icebp
add
aaa
subl
stc
push
shl
and
std
jmp
mov
sub
movsb
mov
xchg
jb
pop
xor
fmul
jl
ja
bound
xchg
mov
int3
js
adcl
or
sub
insl
pop
scas
add
nop
and
sahf
mov
mov
iret
pop
xor
adc
outsl
inc
mov
mov
adc
inc
pop
pop
push
xor
repz
mov
and
std
dec
xlat
aas
push
test
cli
xchg
in
scas
pop
cmc
cmp
add
negl
and
push
daa
mov
ss
in
sub
push
movsl
mov
or
mov
dec
mov
mov
sub
adc
mov
ror
fidivs
jnp
xchg
jne
cmc
scas
mov
cmp
xor
stos
xor
shrl
or
movb
mov
sahf
xchg
mov
dec
inc
xchg
xchg
xchg
and
loopne
in
test
and
adc
sbb
out
sbb
arpl
cli
loopne
xchg
inc
and
mov
in
mov
dec
js
xor
xchg
adc
adcl
stc
ret
rcrl
mov
jle
mov
inc
adc
imul
pop
fdivs
test
push
insl
lock
jnp
or
aas
mov
js
je
xor
je
divb
adc
mov
pop
js
fnstsw
xor
mov
jne
cmpsb
jns
cmc
dec
dec
jp
xor
jp
jno
rcrb
jl
inc
jnp
sarb
mov
pop
mov
nop
dec
push
div
inc
loop
xor
mov
loopne
mov
jo
inc
or
adc
xchg
idivl
dec
shrl
scas
mov
mov
mov
jae
xor
mov
mov
xchg
mov
je
scas
iret
insl
out
idivl
es
jae
adc
enter
rorl
divl
dec
dec
jo
jne
dec
enter
jbe
sbb
call
in
sbb
mov
fwait
addl
xchg
adc
and
sbb
adc
pop
jns
jbe
push
xor
dec
jp
call
mov
push
testb
iret
add
lahf
clc
or
xchg
dec
and
pop
mov
push
mov
aad
add
adc
hlt
and
jne
mov
sub
xor
mov
jnp
dec
ja
pop
cmp
negb
pop
jl
pusha
xor
adc
push
or
sahf
cs
add
js
ja
mov
js
mov
test
and
fcompl
mov
insb
rcll
push
lret
or
add
or
push
cmpsb
xchg
shrl
scas
je
xor
adc
insb
adc
add
pop
sub
aad
mov
pop
push
dec
fs
mov
loopne
stos
dec
and
sbb
adc
jno
lods
cmp
sub
in
dec
cs
insl
pop
xchg
xor
mov
into
js
insb
loopne
insb
sbbb
push
outsl
popa
jl
jl
enter
scas
jg
icebp
mov
jl
sti
popa
push
inc
push
mov
cmp
int
inc
sub
mov
and
jb
subb
jl
fs
add
js
movsb
popa
or
jae
ja
dec
mov
pop
push
in
xchg
mov
push
daa
sbb
xorps
aam
sub
sti
xor
sub
int3
call
push
mov
inc
outsb
jo
mov
cvtpi2ps
mov
fdiv
xchg
jl
sbbb
out
in
aad
fs
sti
or
sub
push
shl
or
xchg
popa
xor
fdivrl
push
push
repz
xor
popf
add
lret
mov
stc
mov
test
dec
mov
dec
scas
push
and
insb
popa
cwtl
jmp
push
xor
sahf
gs
jg
sbb
mov
daa
pop
fsub
daa
jnp
movsl
sub
cld
popa
cmp
repz
scas
xor
push
cmp
test
mov
and
push
je
xor
add
push
insl
mov
lods
sbb
cmc
mov
jo
scas
jae
test
mov
push
push
in
cmc
or
testb
in
addr16
mov
mov
test
jns
push
iret
test
jb
and
sbb
fs
cmp
outsb
jl
scas
cmc
aam
sub
out
or
lods
cmc
lock
add
out
arpl
icebp
outsl
add
xchg
inc
in
js
jg
jg
pop
bound
lods
push
add
nop
cmc
pop
insb
rep
outsb
lods
mov
pop
add
xchg
enter
adc
or
aas
bound
shll
mov
out
dec
pusha
sahf
inc
push
jno
xor
out
and
push
and
adcb
lea
hlt
dec
je
sbb
xorb
pop
icebp
arpl
in
clc
addr16
fadds
cmp
es
or
mov
adcb
imul
fidivrs
dec
and
insb
push
inc
nop
call
sbb
push
fwait
roll
mov
js
clc
mov
sbb
data16
mov
pop
cs
dec
jo
pusha
jae
and
jbe
ds
sbb
and
sbb
aas
into
ret
push
sti
xchg
in
out
add
in
jp
inc
jno
pop
or
fs
outsl
jns
and
dec
xchg
lea
add
pop
je
sub
and
je
mov
ds
jp
push
mull
data16
sub
push
add
mov
cwtl
inc
push
and
pop
and
dec
aad
push
test
stos
or
outsl
popf
aad
repz
icebp
arpl
ja
add
repz
insb
dec
ds
push
mov
shlb
push
sti
daa
test
mov
hlt
jl
xchg
sbb
dec
fdivrl
addb
mov
das
scas
push
das
mov
jl
jne
and
xor
and
inc
add
mov
icebp
cwtl
xchg
mov
xor
lea
jns
ds
lret
daa
lret
cmpsb
and
push
push
push
fdivs
nop
jae
imulb
add
ret
add
adc
jne
cmp
jbe
loopne
sbb
and
and
into
imul
xchg
int
sub
dec
xor
push
pop
sbb
fwait
and
mov
repnz
pop
dec
popf
cmpsb
jo
test
mov
js
cmp
hlt
mov
popa
gs
or
add
adc
mov
jbe
xor
lock
inc
je
or
cs
push
xor
jmp
xor
adc
or
sbb
mov
lods
and
ds
sbb
stc
dec
pop
nop
mov
cmc
add
push
in
xor
test
out
cmp
je
and
fst
sbb
dec
daa
das
jo
or
xchg
add
arpl
clc
lret
jp
jp
jl
jns
mov
jp
jl
dec
inc
mull
adc
sbb
mov
inc
test
in
cmp
mov
adcb
xor
pusha
gs
xor
or
cli
dec
in
xor
mov
nop
fs
into
push
js
shlb
pop
pop
push
inc
cmp
frstor
dec
push
xor
or
cli
fs
int3
push
js
loope
cld
adc
jne
xor
push
adc
imul
mov
shrd
in
sub
push
and
push
dec
xor
sbb
in
or
in
aaa
cmp
cmp
int
pop
stos
xchg
int
leave
mov
push
sbb
cmp
cltd
jae
sbb
jb
aad
and
fsubrl
out
popa
ds
cmp
inc
and
popa
xor
dec
inc
pop
and
pop
mov
dec
cmp
push
insb
leave
push
mov
ds
pop
decl
xor
aaa
fimull
inc
fidivrs
jl
out
push
dec
dec
std
aaa
push
cmp
and
pop
callw
xor
jb
inc
lods
jecxz
cmp
cmp
roll
cs
dec
and
xor
pop
je
xor
xor
mov
push
or
cwtl
test
mov
add
inc
and
das
xor
cmpsb
shlb
inc
jecxz
cmp
adc
push
xor
xor
sub
je
xor
xor
and
mov
je
je
xor
push
fs
inc
and
mov
dec
add
sbb
inc
sbb
adc
sbb
adc
ret
outsb
dec
repz
repz
jns
xor
inc
sbb
dec
jl
popf
pusha
push
outsb
add
sbb
jne
pop
lods
jns
mov
fsubr
ret
pop
inc
push
outsb
cmp
fcompl
jne
mov
bound
pop
bound
add
add
ss
dec
sbb
inc
inc
inc
push
push
dec
test
fsubl
es
sahf
repnz
repnz
in
jne
cmp
mov
insl
mull
xor
pusha
dec
stos
or
mov
push
movsb
decb
mov
jo
xchg
psubb
fcoml
negw
adc
xor
cmp
insl
xor
inc
cmp
aad
jae
pop
add
add
lods
mov
xchg
jg
jb
lahf
pop
xchg
adc
fsubl
or
push
hlt
or
add
xor
call
lock
dec
dec
push
std
xor
adc
lods
dec
adc
daa
jle
sbb
push
pop
sbb
pop
push
mov
xor
dec
dec
adc
pusha
in
cs
xor
push
insb
mov
outsb
push
cmp
add
dec
dec
adc
decb
push
icebp
add
movsl
aad
inc
insl
or
mov
mov
cmp
xor
bound
sbb
sahf
pop
cmp
xor
mov
jnp
outsb
cmpsl
in
adc
lock
and
sbb
xor
mov
add
cmp
addr16
add
adc
pushf
add
mov
sbb
insl
or
adc
scas
sbb
push
outsl
adc
and
popa
and
jns
out
adc
gs
pop
ret
nop
adc
iret
addb
push
mov
jno
pop
jae
add
js
push
xchg
fsubrl
repz
xor
das
sbb
rolb
outsb
adc
lret
mov
outsb
repnz
add
or
add
xor
in
adc
push
push
cmpsl
sbb
cmp
sbb
lds
les
xchg
xor
jb
je
ss
push
cwtl
push
je
sub
cmp
dec
jne
adc
pop
jne
xor
outsb
icebp
filds
mov
xor
push
mov
sarb
dec
cli
and
aaa
adc
and
jbe
jecxz
enter
roll
sbb
jge
push
cmp
or
mov
test
inc
push
push
jge
int3
pop
rclb
lock
outsb
cmc
and
dec
cmp
movsb
push
je
cmp
fucom
dec
sub
orb
aas
cmp
pop
pop
imul
dec
in
pushf
dec
xor
int3
cmc
push
pop
lock
push
cmp
loop
mov
je
in
mov
in
repz
insl
lret
enter
mov
jns
inc
bound
dec
aas
dec
inc
dec
adc
das
push
das
fildll
out
movsl
das
das
mov
cmp
inc
lahf
cs
cmp
pop
fbld
sub
add
lahf
stc
lahf
in
rcrl
lods
lahf
mov
xchg
mov
ds
inc
fs
inc
cwtl
std
pushf
or
in
ljmp
mov
mov
inc
jnp
arpl
dec
pop
dec
inc
dec
dec
das
xor
sbb
das
sbb
add
das
jecxz
in
das
into
das
mov
jp
inc
in
out
rcrl
mov
mov
inc
push
jecxz
shll
ret
or
xchg
lods
xorl
push
jb
lahf
pop
fs
pop
dec
xlat
or
lock
incl
and
xchg
push
jge
test
xchg
xor
cmp
and
sub
adc
sbb
add
or
hlt
test
test
test
test
test
test
test
test
xor
xchg
lahf
inc
popf
lock
push
les
imul
and
sub
mov
lret
dec
xor
and
fs
adc
gs
push
pop
ljmp
pusha
shrb
pop
and
dec
ret
mov
add
mov
jecxz
je
stc
pusha
cmp
imul
pusha
jl
rclb
xor
test
sarb
mov
mov
mov
in
test
and
lret
inc
mov
add
jge
gs
js
sarb
cmp
call
je
add
jg
mov
sbb
js
in
loop
mov
pusha
loopne
jae
cmpsl
insl
icebp
ja
scas
jae
jb
imull
or
test
nop
lock
sub
xchg
jo
or
mov
push
jecxz
ret
mov
in
rcrb
scas
xchg
shll
mov
mov
jne
jae
dec
xor
cli
mov
jae
xchg
arpl
clc
shll
push
stos
addr16
lahf
jo
test
push
adc
aaa
fwait
jo
pusha
and
lods
dec
stos
jo
pop
dec
lret
add
jo
sub
pop
movsb
bound
inc
insb
int3
mov
aaa
push
jg
clc
arpl
mov
and
push
sbb
jo
jbe
or
outsb
push
or
mull
leave
jl
add
jbe
and
pusha
push
shll
insb
aad
iret
ds
mov
data16
test
dec
repz
cmpl
jne
xchg
pop
push
pop
push
xchg
sub
push
push
ljmp
clc
push
xor
sub
xor
jnp
outsb
push
add
mull
ret
arpl
aam
cmp
sbbl
in
js
adcb
pop
pusha
xchg
ja
aaa
arpl
call
sahf
or
ja
test
pop
pop
stos
cli
fs
inc
push
sub
call
into
mov
push
mov
add
mov
fwait
jecxz
out
insl
in
adc
fs
aas
jge
jb
ja
or
sahf
pop
dec
cltd
inc
or
addr16
push
mov
pop
sub
xor
mov
das
pop
pop
dec
jmp
ja
in
clc
cwtl
dec
fstpl
inc
lcall
xor
int
push
xor
pop
clc
jmp
bound
arpl
pop
or
cld
aaa
push
ljmp
pop
dec
insb
dec
addr16
bound
clc
pop
arpl
dec
out
adc
or
fs
dec
into
inc
addr16
push
int3
mulw
enter
xor
push
dec
push
data16
dec
idivb
lret
inc
stc
mov
loopne
adc
sbb
xor
inc
sbb
cmp
ja,pn
and
push
or
enter
add
into
jbe
sti
lret
mov
xchg
pop
ds
or
insb
jl
dec
mov
jns
jne
or
xchg
arpl
add
scas
adc
fdivl
xor
inc
inc
inc
pop
inc
popa
pop
cs
dec
inc
inc
icebp
cmp
hlt
cs
push
dec
dec
scas
dec
inc
pusha
inc
jle
pop
dec
js
notb
imul
xor
cmp
loopne
dec
push
and
and
sbb
bound
jnp
imul
jbe
sub
js,pn
xor
gs
insl
das
adc
cli
ret
add
dec
jae
pop
mov
mov
pop
mov
pusha
imul
loopne
out
jl
cmp
inc
pop
push
xor
jecxz
fiaddl
pop
xor
inc
xor
dec
cmp
cmp
push
add
pop
xor
js
in
iret
sub
into
xor
jl
js
cmp
cmp
push
dec
fs
sti
mov
fstl
popa
cmp
cmp
stos
js
pop
mov
push
jnp
gs
pop
pop
sub
xchg
push
into
pop
push
in
scas
rol
in
push
push
jl
test
cmp
aad
movsl
push
pop
sbb
xor
push
subb
pop
adc
mov
sub
mov
dec
cmp
push
int
mov
dec
inc
pop
and
or
jmp
xor
pop
and
sub
pusha
and
sub
arpl
dec
sub
jns
fildl
jne
ljmp
inc
and
push
pmuludq
test
jp
bound
or
pop
shll
or
jnp
dec
jbe
pop
jno
pop
arpl
pop
jecxz
clc
pop
jne
arpl
lock
insl
bound
and
mov
adc
sbb
xor
bound
es
std
adc
add
xor
out
adcl
das
stos
js
sub
test
xor
and
ja
and
aad
arpl
jecxz
pop
jmp
pop
lea
cmp
pop
jne
cmc
jp
fmuls
imul
sbbl
ds
cli
fs
mov
jne
jnp
inc
and
cmp
sub
iret
sarl
sbb
pop
adc
sub
gs
sub
inc
jl
inc
jl
pop
adc
loopne
push
js
inc
fisubs
dec
sbb
cmp
std
jb
cmp
xchg
test
or
fs
push
iret
ficoml
and
fwait
inc
cmp
push
or
mov
cmpsb
gs
outsb
loope
shll
sbb
mov
push
clc
pop
sbb
repnz
xor
inc
and
bound
lret
sbb
ret
jns
stc
aas
push
mov
mov
dec
pop
aas
in
pop
xor
pop
xor
rol
add
add
pop
xor
push
jns
add
add
mov
dec
lds
pop
xor
inc
pop
nop
or
ja
ss
cmp
sbb
test
in
cmc
pop
inc
stos
push
insl
xchg
cld
test
push
arpl
rcll
or
adc
or
xor
mov
xchg
add
stos
cs
push
push
pop
gs
gs
cld
fldt
test
or
fdivrl
or
mov
push
pop
bts
inc
pop
out
sbb
lock
sub
in
pop
push
dec
pop
adc
pop
mov
push
mov
out
cmp
stos
mov
fstpt
out
jns
inc
pop
arpl
loop
mov
loop
es
fs
pop
push
jns
shl
push
idivl
adc
addr16
into
push
xor
pusha
jno
jne
push
scas
jnp
xlat
push
les
arpl
cmp
push
adc
loop
and
js
or
mov
xorl
je
pusha
aaa
daa
outsb
std
mov
in
jb
push
aas
incl
fs
pop
jle
popa
loopne
faddl
adc
push
shlb
in
add
push
jl
pop
and
jg
hlt
xor
jne
xlat
xchg
jp
int
cs
jp
push
push
not
mov
aam
push
jns
mov
jl
clc
sub
sub
and
sub
das
daa
mov
int3
pushf
adc
negb
into
js
dec
mov
shll
adc
xor
inc
sbb
mov
xor
cmp
test
sti
pusha
dec
arpl
push
fisttps
pop
mov
dec
pusha
add
insb
fbld
push
ret
pop
adc
subb
js
and
arpl
jecxz
cld
in
pop
push
add
xchg
cld
pop
movsb
bnd
pop
mov
push
sbb
jle
addr16
aaa
jle
adc
dec
in
test
xchg
or
mov
pop
dec
pop
cli
inc
or
aad
mov
adc
dec
or
cmpsb
sub
or
jne
mov
dec
sbb
dec
and
pusha
js
call
fildll
popa
insl
pop
loopne
cmp
test
cmp
fstp
push
out
inc
jnp
dec
jecxz
dec
sub
jnp
mov
jp
arpl
data16
subb
insb
inc
xor
add
sub
mov
cmp
and
es
add
xor
push
jmp
aas
call
mov
dec
jns
xor
cmpsl
cmc
pop
popa
ror
fbld
fcoms
in
ret
fs
dec
jae
xor
loopne
pop
in
jnp
insb
dec
jns
out
jl
xlat
jmp
sub
pusha
push
pop
xor
fldenv
jecxz
int
fs
sbb
add
pop
xlat
jae
mov
jnp
ja
test
in
test
scas
into
jecxz
call
jbe
dec
inc
out
mov
roll
lret
mov
inc
push
insb
mov
dec
sub
pop
add
cmp
or
jp
mov
sbb
mov
bound
push
pop
pop
sbb
cld
subl
mov
pop
imulb
xor
push
clc
pop
add
jne
pop
xor
pop
pop
fsubrl
loope
xchg
push
dec
js
out
pop
data16
andb
jg
jle
mov
dec
fiadds
fwait
es
insb
and
dec
ds
imull
push
fsubs
cmpl
add
and
aaa
push
loop
test
push
arpl
cmp
dec
cmp
or
sbb
pop
enter
das
imul
js
push
jnp
js
cmpsb
sbb
jle
addr16
fmuls
mov
cmp
arpl
lods
lret
ja
or
cld
test
pop
into
pop
add
push
pop
sbb
jb
and
mov
ss
add
jne
xor
shlb
mov
cs
push
jnp
jns
shrl
pop
outsb
pop
cld
mov
sub
mov
cld
aaa
das
dec
mov
mov
xor
cmp
pop
jnp
jnp
cld
stc
or
xchg
daa
adc
pop
iret
je
xor
scas
cmp
jb
sub
adc
cmp
dec
push
add
sbb
add
adc
push
mov
les
cmpsb
orb
dec
cli
pop
or
dec
lahf
mov
jae
push
inc
and
data16
add
mov
arpl
ret
pop
adc
sti
dec
pop
int
fstpl
shlb
xlat
pushf
inc
ret
ja
dec
add
mov
add
fsubs
jae
sbb
sbb
push
adc
jns
jne
mov
mov
pop
and
add
jb
jnp
das
outsb
mov
bound
out
xor
sub
test
mov
add
cmp
arpl
std
dec
js
fldenv
insb
enter
leave
and
insb
xorb
decl
push
jb
aad
dec
rol
push
push
ss
jbe
cld
jp
pop
imul
imul
dec
pop
jae
push
push
mov
adc
mov
data16
push
xchg
push
pop
jne
xor
stc
popa
dec
push
mov
dec
icebp
jbe
jecxz
adc
dec
mov
loopne
mov
enter
dec
fcompl
fldcw
push
add
dec
mov
arpl
es
rclb
pop
mov
inc
push
mov
lds
lret
pop
jl
push
jne
les
jae
push
insl
imul
pop
fwait
nop
add
into
adc
arpl
ret
arpl
lods
cmp
dec
dec
add
xchg
mov
mov
pop
add
cs
push
push
mov
scas
addr16
lock
adc
adc
lock
adc
xchg
adc
add
int3
lock
adc
je
and
sub
imul
mov
jg
add
xor
sbb
cmp
scas
int
mov
fnstcw
outsb
add
inc
sub
sbb
xor
and
jne
add
clc
dec
mov
xchg
mov
and
mov
and
cwtl
pop
mov
dec
dec
jmp
lcall
mov
sub
xor
pop
sub
add
push
testb
push
inc
adc
xor
iret
pop
mov
cmp
les
push
push
in
aam
mov
mov
lahf
adc
addr16
imul
loopne
testb
sti
je
dec
push
or
jbe
cltd
cmp
cmp
push
dec
cmp
stc
dec
pop
pop
negl
loop
sub
das
jp
cmp
std
fs
movsb
adc
sbb
ds
mov
outsb
aad
add
mov
lock
xchg
fs
adc
push
add
dec
testl
pop
mov
clc
lods
xor
push
dec
push
pusha
movsl
notb
cs
dec
xchg
fs
mov
dec
xchg
mov
stos
mov
aas
add
inc
fs
adc
cli
imul
or
jno,pn
dec
jl
xor
mov
xor
arpl
je
xchg
ja
shll
fs
bound
push
add
insl
arpl
loop
pop
jbe
cwtl
xor
js
mov
incb
pop
xchg
xor
xchg
lcall
arpl
add
fwait
in
jnp
sbb
pushf
xchg
mov
or
jno
movsb
pop
lcall
pop
adc
sbb
je
lcall
jo
inc
je
jnp
adc
dec
dec
cs
pop
push
je
push
dec
fnsave
push
aas
pop
cld
fisubs
out
cli
pusha
in
stc
negl
loope
and
adc
inc
inc
cmp
jg
fadds
dec
loopne
pop
leave
sti
pusha
or
jae
or
and
subl
jne
jbe
cs
sub
fs
bound
lret
pop
cld
into
xor
sti
jns
ds
fsubl
cli
dec
stc
dec
push
jl
xor
pushw
push
negb
jl
arpl
stos
adcl
pop
xchg
mov
test
and
mov
jns,pn
jle
loopne
stc
jle
push
mul
into
iret
mov
and
or
aam
xor
jne
outsb
cmc
jb,pn
add
mov
dec
mov
pop
add
repnz
jb
ja
sbbl
ret
outsb
jne
mov
lahf
inc
addr16
mov
mov
sbb
pop
lds
imul
cmpsb
sub
cmc
pop
cmp
ss
push
cwtl
outsb
xchg
incl
xchg
mov
or
es
lods
mov
xor
sbb
in
pop
jne
fs
outsb
test
addr16
mov
dec
jne
adc
out
xabort
xor
push
sub
add
dec
pop
inc
mov
lret
incl
jmp
lock
xchg
jae
mov
pop
pop
bound
adc
xor
add
les
mov
stos
adc
les
ds
push
inc
insb
mov
cmp
and
das
popa
stos
dec
cmp
xor
aas
sti
inc
mov
pop
out
call
insl
jnp
jne
pop
sub
cs
jno
add
out
ret
cmpsb
outsb
pop
popa
add
loopne
mov
movsw
shlb
inc
or
stos
jl
jns
inc
imul
cltd
bound
mov
pop
dec
jp
orl
pop
outsb
inc
popa
ja
dec
fs
fs
fwait
sahf
movsb
cwtl
pop
andb
xor
pushf
std
mov
pop
dec
or
sbb
in
leave
call
push
push
in
jp
push
pop
mov
cli
sub
cmpsl
insb
ret
sub
data16
decb
addr16
and
arpl
popa
add
add
pop
shll
arpl
lret
xchg
sub
scas
push
xor
add
inc
jp
fnsave
test
in
sbb
pop
ds
push
adc
fdiv
imul
xchg
adc
xor
addr16
or
je
add
inc
jb
inc
push
int3
out
sub
inc
test
mov
ljmp
int
push
loope
push
in
inc
mul
jne
push
movsb
cmp
push
iret
pop
sbb
xor
cmp
inc
mov
sbb
dec
push
je
orl
mov
jg
sub
loopne
dec
push
dec
add
adc
push
cwtl
pop
lods
movsl
jne
inc
xchg
scas
cwtl
inc
movsl
stos
rcrb
xchg
xor
les
and
test
in
mov
lods
mov
push
mov
aas
push
mov
pop
ja
inc
fimuls
jne
mov
mov
ret
lds
pop
ja
xchg
pop
pop
je
cwtl
add
sbb
and
add
pop
and
jne
jb
movsb
dec
add
inc
and
push
enter
out
les
fdivrl
into
das
push
addr16
aaa
mov
rorl
cli
ljmp
or
cmp
cmpsb
sub
push
mov
lret
and
xchg
xchg
xor
lcall
lahf
mov
pop
inc
jnp
dec
leave
inc
inc
lret
push
jnp
js
push
jb
cmp
pop
xlat
inc
cmp
mov
out
sbb
xchg
mov
pop
mov
arpl
sub
jo
loopne
mov
insl
dec
lahf
hlt
xlat
pusha
fprem
scas
adc
cmp
xlat
mull
pop
xchg
cld
int3
fs
mov
inc
cld
xchg
inc
loopne
push
iret
add
mov
mov
inc
xchg
fwait
mov
fimuls
xchg
jne
pop
inc
push
dec
outsl
mov
mov
inc
jns
daa
mov
xor
mov
mov
nop
jae
jg
out
pop
pop
xor
fisubrs
lods
fadds
addr16
mov
loope
jno
fs
push
in
xchg
loop
fldenv
or
xor
in
ja
pop
dec
push
dec
jno
mov
jbe
roll
and
mov
xchg
dec
clc
pop
repnz
add
add
sub
cmpsl
inc
stos
inc
xor
rol
pop
aam
cmp
hlt
sarl
fstl
bound
pop
in
pop
and
in
xchg
insb
mov
je
xor
sar
jnp
dec
pop
cmp
pop
jns
pop
jns
fsts
cmp
pusha
inc
inc
pop
ss
inc
fs
jp
fnstsw
jnp
xor
pop
sahf
inc
xor
clc
mov
roll
adc
fs
sub
pusha
pusha
cmc
sbb
inc
test
lods
and
outsb
pop
jnp
xchg
daa
xchg
fidivrl
inc
lahf
xor
jl
jns
push
jae
xchg
inc
inc
inc
mov
add
dec
dec
push
xor
add
cs
adc
pop
push
inc
popf
jecxz
xchg
mov
pushf
js
lret
bound
ss
jecxz
fs
push
pop
popa
jnp
ret
cwtl
arpl
jne
ss
mov
addr16
ror
pop
arpl
mov
in
sbb
push
mov
jb
inc
dec
push
call
roll
or
ja
scas
mov
pop
cmp
int3
ja
out
clc
hlt
xchg
sbb
push
push
adc
pop
jne
sbbl
push
je
das
or
insl
xor
xor
jmp
ds
insb
push
test
pushf
xchg
fcoml
in
and
pop
mov
jmp
pop
clc
bound
mov
push
mov
and
idiv
loope
imul
push
or
ja
in
push
gs
push
in
jns
dec
inc
fwait
pop
or
push
mov
mov
outsb
xchg
orb
dec
into
ficoms
fst
push
addr16
mov
push
imul
clc
jno
add
addr16
push
push
sub
sub
fwait
loopne
mov
push
pop
push
cmp
push
push
in
dec
pop
xor
sbb
add
mov
push
push
aas
add
sbb
xchg
sub
jae
xor
pop
push
jbe
inc
pop
xor
pop
loope
dec
cs
int3
and
cmp
pushf
push
fs
jnp
push
xchg
fistpl
mov
inc
leave
sbb
push
pop
sarb
in
push
iret
gs
gs
push
lods
push
sub
scas
pop
shlb
enter
es
cmp
add
neg
pop
mov
cmp
outsb
jno
adc
sti
jp
mov
inc
cmc
and
mov
js
out
jae
bound
sub
and
pmulhuw
jecxz
jae
mov
push
je
push
cmp
in
mov
jmp
stc
or
loopne
push
aas
and
dec
jbe
jnp
mov
push
and
pop
shll
js
pop
add
insl
add
lods
inc
sbb
shl
pop
dec
les
aaa
pusha
sub
bound
divl
fisubs
pop
push
push
adc
mov
pop
inc
inc
les
lahf
sbb
mov
jne
and
sbb
and
sbb
sub
pop
rolb
and
dec
push
mov
adc
xchg
loopne
aam
pusha
shrb
pop
fcomp
jne
ljmp
xlat
xor
ds
in
fs
int
adc
enter
and
push
pop
leave
adc
out
shlb
in
js
pop
ljmp
sub
pop
push
test
push
pusha
push
inc
lcall
pushf
fucom
mov
or
push
push
ss
lret
outsb
repnz
inc
fdivl
jno
ja
fdivl
cli
adc
stc
int3
inc
pop
clc
mov
imul
and
jb
cmp
in
ds
ja
decb
insb
sub
andb
push
sub
jnp
cmpl
lcall
iret
push
bound
popf
xchg
push
pop
sbb
out
or
jnp
pop
popa
test
add
add
insl
xchg
notb
adc
pop
add
inc
sbb
imul
cmp
loop
fs
sub
push
adc
mov
jnp
xchg
push
inc
inc
mov
dec
mov
loopne
roll
push
outsb
push
negb
add
insl
fisubrs
inc
filds
pop
sub
mov
addr16
mov
in
inc
inc
pop
push
mov
push
add
dec
nop
or
add
gs
add
outsb
xchg
pop
loop
inc
or
imul
or
add
arpl
fdiv
sub
out
ja
fisubl
jns
out
pop
mov
fisttpll
sbb
int
sbb
and
mov
dec
arpl
fnstcw
mov
clc
mov
inc
rcl
pop
neg
xchg
xchg
inc
movsb
hlt
arpl
jge
push
js
popa
sbb
dec
pusha
addr16
subb
push
data16
sti
xchg
js
xor
ret
add
arpl
in
add
mov
or
sbb
clc
mov
jp
loopne
pushf
scas
mov
bound
test
xor
pop
cs
mov
or
mov
or
jp
daa
bound
jnp
adc
gs
inc
or
sub
inc
xchg
and
pop
or
pusha
in
pop
adc
jecxz
jmp
ficoml
mov
int3
stos
pop
aam
push
pop
jb
pusha
pop
push
pop
push
push
jne
xchg
sub
add
jns
mov
dec
push
pop
pop
add
adc
hlt
je
jb
jl
mov
add
pop
push
lock
pop
inc
mov
pop
out
lcall
je
push
dec
pusha
push
insb
cmp
and
inc
cld
adc
pop
jnp
xor
pop
rcr
inc
scas
cmp
ds
dec
sub
pop
push
jno
and
jno
clc
jb
call
ret
cltd
cmp
and
jbe
sbb
mov
cmp
cmp
insb
xor
mov
je
and
push
cmpsl
add
insl
jae
jnp
jmp
mov
pop
in
imul
fucom
ret
pop
inc
pop
jecxz
sub
xchg
icebp
jnp
scas
icebp
mov
imul
dec
pusha
pop
inc
jb,pn
fildll
js
arpl
push
dec
scas
and
arpl
push
pop
or
jb
jp
xor
jne
push
mov
jae
in
imul
jns
sti
xor
andb
jb
and
push
inc
aas
hlt
nop
xor
dec
cmp
or
ja
push
mov
js
out
xor
shl
and
cld
enter
pop
sbb
mov
js
loop
subl
jl
cmp
shll
push
das
xor
and
mov
in
mov
mov
sbb
push
inc
jne
lahf
in
lods
mov
mov
testb
jae
cmp
leave
stos
dec
add
lret
aad
add
xchg
aaa
or
add
data16
jp
push
jns
out
jne
movsb
js
loopne
movsb
scas
adc
add
imul
testb
lods
pop
out
inc
add
jge
dec
outsb
aam
in
xor
sub
bound
add
mov
aad
cwtl
cmpsl
mov
jne
mov
push
fmul
push
pop
cs
adc
xchg
pop
push
xchg
in
or
jecxz
push
inc
xor
sbb
jl
mov
cmp
movsl
push
cmp
xor
mov
dec
outsl
push
add
add
add
fldl
fadds
loopne
jle
bound
test
in
shlb
lds
dec
inc
fisttpll
add
js
testb
aad
xor
ss
push
imul
cmp
jnp
lea
or
rcr
outsb
gs
push
or
lea
les
fsubs
decl
add
mov
sbb
data16
sti
push
or
mov
adc
out
dec
or
jb
inc
ja
addr16
in
lock
and
add
pop
jbe
add
cmp
outsl
jb
pop
push
sbb
and
and
repz
and
movsl
inc
pop
call
scas
xor
dec
sub
and
xchg
clc
sub
sbb
xor
hlt
xor
or
push
or
or
xor
xchg
lock
in
mul
out
jle
pusha
xor
cs
repnz
stos
data16
mov
and
push
push
pop
dec
test
jp
mov
jb
xor
std
and
testl
cmc
repnz
inc
dec
xchg
xor
xor
sub
sub
fs
addr16
mov
jnp
ja
sti
xor
push
testb
in
outsl
aas
add
hlt
xor
dec
cld
leave
fucom
or
dec
bound
insl
xor
dec
pcmpgtb
into
cmc
and
or
call
cld
pop
add
or
xor
hlt
xor
jmp
push
jmp
pop
adc
stos
dec
xchg
pop
adc
adc
stos
jl
adc
xor
dec
add
jl,pn
xlat
dec
clc
xchg
and
or
sub
and
push
enter
push
adc
aam
push
sbb
push
adc
pop
inc
inc
mov
push
dec
and
sbb
mov
jnp
pop
out
icebp
sbb
and
sbb
push
pop
jl
jp
hlt
jnp
jge
negl
mov
pop
adc
sbb
sbb
pop
add
add
sbb
in
cli
pop
pop
xor
pop
jnp
xor
pop
jns
clc
sbb
or
add
lahf
stos
popa
bound
jnp
mov
ds
out
call
mov
push
aaa
loopne
inc
mov
popa
fidivrs
and
out
xor
mov
jae
sub
xchg
or
push
xchg
rcrl
mov
lcall
mov
rcrb
fucomip
pop
inc
jle
in
mov
das
mov
mov
add
xchg
sti
dec
cld
sti
push
mov
or
stc
into
sti
push
cld
into
sti
bound
cmpb
xchg
pusha
ror
enter
rorb
xor
test
and
pop
addl
jno,pn
xor
sub
add
sub
add
fstl
and
add
shll
xor
js
mov
push
pop
je
loopne
mov
xor
pop
xor
jnp
pop
pop
lods
add
add
filds
outsl
dec
xor
pop
es
ret
cmp
test
add
insb
mov
push
xor
pop
cmp
mov
mov
xor
push
ret
in
sbb
push
js
pop
js
fstl
push
negb
rorb
jp
bound
push
pop
aad
scas
push
loop
cli
pop
inc
dec
out
cmpl
in
inc
or
xor
das
mov
mov
mov
pop
dec
in
notb
fistps
mov
mov
lods
inc
mov
in
xchg
sub
loopne
mov
test
mov
popa
pop
lret
aaa
xor
lods
and
inc
fstl
js
mov
and
push
cli
pop
je
ds
dec
mov
pop
in
arpl
sub
movsl
push
test
stos
push
push
jmp
test
data16
pop
jecxz
xor
push
out
dec
iret
and
shlb
test
test
jnp
into
push
test
imul
xchg
rcrl
mov
sarl
ror
push
xor
loop
adc
out
aam
lods
scas
or
add
add
jnp
or
ljmp
fs
jnp
fs
pop
dec
or
insb
lods
add
cs
push
push
push
cs
mov
insb
or
add
pop
shrb
movsb
push
mov
inc
jns
out
movsb
in
push
out
push
enter
aaa
mov
out
dec
push
xor
adc
inc
ret
sub
ljmp
mov
cs
dec
ret
das
iret
ret
fs
lret
fs
cmc
scas
dec
into
test
dec
shrl
clc
or
aam
inc
pop
or
rorl
dec
cmc
sub
rorb
loope
gs
insb
popa
dec
mov
adc
inc
fldenv
dec
sahf
fisubs
fistpl
fs
jne
in
lret
loop
jge
dec
and
inc
mov
mov
mov
pop
rolb
xlat
sbb
or
or
daa
jge
fstp
sub
inc
clc
push
jnp
pop
arpl
or
cmp
xor
aaa
icebp
mov
rclb
out
fmulp
inc
pop
or
ljmp
sub
icebp
orl
out
or
pop
dec
adc
negl
push
pusha
sub
andb
repnz
inc
imul
xlat
ss
data16
jae
xchg
adc
je
loop
vmovaps
mov
push
mov
aas
sub
in
inc
in
xchg
out
lea
popf
ds
dec
pop
imulb
push
fdivs
adc
fistpll
pop
in
jnp
push
ja
sti
daa
in
ljmp
cmp
and
loopne
push
mov
ds
sub
jns
sbbb
xor
jbe
jnp
cld
inc
xchg
incb
xor
sbb
and
bound
cli
fstl
int
loopne
mov
ja
inc
icebp
js
ja
pop
jle
xor
pop
scas
inc
lret
mov
mov
int3
aam
pop
mov
mov
jmp
ret
jbe
dec
adc
push
sub
cmp
dec
cs
clc
dec
and
pop
sub
jbe
jnp
adc
repnz
cs
and
pop
cmp
sub
insb
and
dec
ds
idivl
xchg
push
push
ds
enter
xor
mov
mov
mov
add
fistpll
aaa
dec
jne
xor
subb
mov
cmp
fucomp
jl
jp
test
sub
jae
inc
cmp
or
pop
fs
pop
jecxz
pop
push
and
int3
mov
jmp
insl
cmc
loope
cmpsb
pop
lock
negb
hlt
nop
call
and
xor
jb
popf
xor
lcall
loop
bound
into
pop
imul
adc
dec
dec
mov
popf
jp
jae
inc
dec
pop
movsl
push
jp
inc
add
xor
mov
pushf
jae
js
popa
imul
adc
dec
dec
mov
movsl
add
xchg
mov
or
lds
xor
imul
push
jp
pop
add
xor
mov
pushf
shl
adc
dec
dec
scas
movsl
popf
jp
xchg
add
jnp
sbb
xor
mov
cmp
xor
hlt
lds
push
add
lret
add
aaa
int3
or
cs
pop
inc
jl
int3
cwtl
loopne
pushf
cmc
notl
dec
dec
cltd
test
jns
xor
dec
dec
sub
testl
imul
jp
push
imul
adc
dec
dec
mov
fwait
jp
arpl
dec
dec
movsl
pop
jp
repz
sarl
pushf
cltd
testl
inc
pushf
maskmovq
notl
dec
dec
add
pop
popf
push
jp
pop
add
pop
mov
pushf
mov
pusha
pop
pop
cwtl
cmp
dec
out
movsl
sarl
popf
add
xchg
inc
add
pop
mov
pushf
lahf
notl
cwtl
inc
notl
add
stc
push
into
mov
leave
cmp
clc
mov
andl
pop
bound
jp
push
add
sub
or
dec
stos
movsl
jge
mov
bound
pop
mov
pop
loopne
pushf
scas
hlt
fwait
push
mov
xor
stos
cmpsb
imul
fisttpll
scas
movsl
cmpl
push
cwtl
sub
aas
bound
movsl
lds
xchg
add
gs
inc
jp
adc
xor
mov
pushf
cltd
testl
xor
dec
mov
movsl
jp
test
dec
popa
imul
lods
stc
js
imul
pushf
lods
hlt
fwait
push
xor
mov
bound
insb
cwtl
push
notl
dec
dec
pop
movsl
sarl
mov
xor
clc
stos
add
imul
pop
add
lret
add
cmpl
add
sub
pushf
adc
mov
mov
lcallw
pop
mov
cwtl
es
push
shlb
mov
in
dec
andb
fdivrl
dec
push
mov
cmp
pop
imul
dec
dec
push
popf
pop
bound
cmp
aaa
mov
push
or
cld
cs
mov
insl
dec
push
icebp
loopne
mov
pop
jl
push
fstps
mulb
nop
push
clc
imul
pop
fsub
mov
mov
sub
insl
cmp
mov
imul
jnp
push
push
and
jo
repnz
ds
pop
inc
inc
inc
mov
add
mov
fstps
fidivl
lcall
jecxz
ljmp
iret
cmp
pop
pop
mov
pop
addr16
and
xchg
sub
int
jne
and
jno
and
test
cwtl
push
mov
pop
jne
rcrl
cmpsl
aam
iret
pop
int
sbb
shr
bound
aad
push
insb
cmp
sub
mov
mov
and
pusha
adc
inc
push
pop
addr16
push
pop
sbb
popa
gs
add
inc
dec
mov
arpl
or
mov
movsb
fsubs
sbb
mov
jnp
lds
test
mov
sub
push
jnp
or
ljmp
jns
iretw
adc
dec
push
dec
xchg
sbb
adc
add
pusha
stc
hlt
adc
dec
ja
dec
aad
mov
and
dec
fsubs
or
push
mov
cmc
repnz
out
inc
pop
arpl
test
sbb
bound
popa
and
dec
repnz
pop
pop
push
jle
dec
je
cmp
fnstsw
pop
insb
jns
rcl
push
hlt
scas
pop
fst
fs
xor
mov
jmp
rorl
subl
or
fsubrs
xlat
mov
dec
aas
or
inc
addr16
xchg
cmp
dec
and
sbb
push
pop
sarb
ds
int
fidivrl
lret
fnstsw
jg
mov
insl
outsb
bound
inc
fisttpll
ss
adc
std
pop
or
call
inc
dec
jnp
je
cmovns
pop
mov
dec
imul
mov
mov
push
fs
and
std
mov
jns
mov
mov
push
xor
push
mov
cli
cs
push
test
mov
xor
cmp
stos
push
mov
dec
jns
stc
fs
sbb
nop
testb
xchg
data16
dec
jns
repnz
dec
je
lahf
dec
lret
sbb
addr16
mov
sub
lock
and
xchg
into
idivl
cwtl
mov
stos
icebp
xchg
sarb
sahf
cmp
pop
fsubs
les
xor
push
xor
lcall
pusha
insl
cmc
fistpl
xor
jnp
fiaddl
fldcw
mov
inc
push
mov
out
popf
jnp
add
pop
pop
fsubrs
bound
adc
jecxz
movsl
in
pop
mov
js
out
sbb
pop
pushf
sub
fcmovne
mov
xor
loope
lret
test
js
cmp
add
and
out
sub
shl
add
je
cmp
filds
sub
or
sbb
xchg
movsl
ja
addr16
ss
lods
and
lcall
mov
sub
bound
cmp
jae
xor
das
inc
jbe
gs
ret
cmp
or
hlt
inc
mov
cltd
hlt
addr16
jno
jecxz
les
dec
sbbb
jle
xor
add
ret
inc
xor
pop
decb
movsl
inc
jl
fists
inc
mov
push
jmp
inc
jl
fists
dec
mov
pop
ja
mov
aaa
imul
das
adc
push
push
pop
mov
push
mov
lock
js
mov
jmp
mov
scas
mov
xor
in
lods
insb
pop
pop
dec
pop
xor
jns
inc
cmp
push
hlt
and
fbld
xchg
arpl
mov
in
stos
or
in
push
test
outsb
out
jnp
and
xchg
jmp
mov
cmp
je
sub
push
das
xor
dec
jns
cli
jg
push
test
enter
cmc
and
push
js
sti
pop
pusha
daa
sub
jp
inc
pusha
jp
popf
add
cs
repnz
inc
jo
cmp
imul
mulb
cwtl
sbb
cld
dec
sub
sbb
dec
push
push
js
and
jns
cli
xor
sbb
xchg
dec
or
sbb
aas
xchg
pushf
pop
jae
add
stc
or
mov
cltd
pop
add
mov
xor
pop
mov
bound
pop
mov
or
mov
js
arpl
jb
subl
lret
or
dec
dec
negb
xor
jnp
mov
jns
jae
int3
jg
mov
mov
dec
mov
adc
and
js
lret
sub
mov
imul
imul
ficompl
jl
fwait
cs
jmp
jns
or
fucomp
xor
cli
das
ficomps
mov
lea
hlt
xor
mov
popa
jle
pusha
imul
mov
mov
push
mov
or
jnp
mov
push
bound
cwtl
daa
xchg
lods
pop
jbe
adc
movsl
bound
addr16
inc
cld
loope
loopne
push
insl
xor
jl
mov
jle
pop
inc
cmp
ja
popa
add
loope
push
jnp
mov
jns
add
inc
pusha
jecxz
dec
push
das
gs
push
inc
push
pop
push
pop
jp
jbe
fmuls
jno
dec
shlb
cld
imul
jnp
ret
mov
sub
xchg
sbb
sub
fs
or
insl
sahf
fwait
bound
rol
push
inc
arpl
inc
cs
pop
cmp
ljmp
sbb
neg
dec
jle
dec
ljmp
cmp
ret
pop
enter
jge
int3
adc
inc
outsl
sbb
push
mov
jmp
stos
jl
mov
imul
mov
and
push
mov
fwait
hlt
xor
inc
out
jns
mov
dec
fnsave
push
push
movsl
shl
pop
loopne
clc
cmp
aas
mov
push
int3
cmp
adcb
ljmp
cmpsl
pop
call
mov
push
pop
sahf
jne
jae
xor
cmpsb
mov
pop
push
jns
adc
mov
dec
cli
mov
ja
inc
jae
pop
add
push
cli
fnsave
in
ficomps
lock
pop
rcll
mov
js
sti
dec
jg
negb
gs
jmp
mov
insb
fsubrp
loope
adc
pop
clc
xor
pop
dec
push
inc
test
cs
cmc
cmp
ss
cmpsl
movlps
jle
cmp
cmp
jp
xor
add
int3
xchg
dec
or
test
pop
dec
xor
push
xor
cmpsb
cmp
and
lret
dec
dec
add
mov
fistps
sti
xor
xchg
pop
cmp
xchg
mov
pushfw
jmp
jns
lcall
adc
pop
jge
jle
sbb
xorl
cmp
popf
cltd
pop
fstpl
hlt
push
mov
in
ss
les
icebp
dec
cmpsb
fsub
mov
add
inc
inc
mov
arpl
pop
dec
cmp
or
push
fsubrl
aad
lods
jnp
or
lods
jl
mov
pop
or
dec
push
outsb
jns
ja
dec
dec
bound
das
pop
or
sub
lret
out
pop
sbb
aaa
dec
lea
dec
fs
lock
xlat
addr16
ljmp
hlt
cs
push
xchg
xor
test
cwtl
int3
mov
bound
fldcw
daa
imul
push
or
pop
dec
loopne
pop
pop
aam
pop
call
add
jb
mov
ficoml
mov
scas
cmc
jp
loope
js
dec
aam
push
pushf
xchg
fs
cld
sub
daa
or
jae
bound
push
ja
sbb
jbe
movsl
pop
bound
imul
je
push
sbb
jae
push
sbb
inc
add
fs
sbb
push
ja
scas
jl
push
pusha
fs
mov
push
inc
jb
jne
mov
jbe
sub
jbe
push
jae
ja
xchg
sub
adc
gs
outsb
push
jbe
sarl
pop
in
mov
inc
jns
ds
add
and
inc
je
insb
out
push
xor
int
in
insl
jg
pop
push
mov
cmp
mov
leave
push
insb
fs
push
adc
jge
pop
jnp
adc
pusha
shrl
cs
pop
gs
inc
inc
pop
inc
push
adc
lods
push
nop/reserved
xor
push
iret
jge
pop
jp
shr
sbb
mov
test
stos
mov
cmp
fwait
lods
mov
icebp
xlat
movsb
pop
out
adc
into
sub
fstp
mov
sub
dec
fnop
mov
xor
rcrl
pusha
adc
and
xchg
pop
mov
sbbl
push
mov
inc
cmpsb
in
sub
xchg
and
pusha
or
mov
dec
js
push
test
lcall
pop
les
pop
pop
sahf
inc
lds
mov
mov
negl
outsb
xor
push
dec
xchg
adc
mov
call
inc
mov
repnz
outsl
loopne
dec
dec
push
jmp
sbb
iret
add
lcall
movsl
out
mov
inc
pop
jp
pop
pusha
dec
or
out
js
in
jecxz
inc
cmp
jp
out
aad
adc
mov
mov
out
sub
xchg
push
lcall
stos
push
fcomps
jl
repnz
outsb
in
stos
inc
pop
pop
ja
bound
cmp
mov
sbb
int3
jbe
jae
fwait
test
or
and
pop
dec
inc
jb
add
jmp
pop
pop
sbb
pop
xlat
insb
jnp
inc
xorb
jno
or
push
jl
sbb
roll
into
push
pushl
arpl
js
cmp
les
out
movsl
dec
or
pop
js
and
mov
cmp
dec
ret
cltd
cs
js
insb
pusha
pop
int
loopne
test
dec
popa
pop
push
ljmp
mov
fildll
inc
sub
stc
pop
outsb
imul
hlt
jmp
hlt
add
cmp
and
add
and
int
pop
mov
test
mov
in
adc
imul
fdiv
cld
jne
add
pop
scas
sbb
jg
popa
notl
ds
in
jp
movsl
pusha
cmpb
xchg
in
test
out
xor
lock
inc
xor
daa
std
inc
mov
cmp
jl
mov
jnp
sar
movsl
bound
into
ljmp
sub
fwait
jmp
cwtl
pop
add
sbb
or
add
movsb
dec
decl
push
dec
cmp
jge
xor
add
pop
inc
testb
cmc
mov
xor
and
ljmp
dec
jne
push
mov
add
mov
inc
arpl
insb
loop
pusha
sar
xchg
jnp
xor
xchg
js
repnz
out
js
cmpsb
and
pop
add
pop
cs
pop
push
js
aas
sub
xlat
outsb
in
jnp
xor
xor
fmull
mov
insb
in
test
inc
pop
jne
xchg
mov
pop
mov
mov
pop
js
mov
and
fs
pop
push
test
add
push
loope
aam
inc
leave
bound
jo
test
sub
push
xchg
outsb
push
adc
pop
jle
adc
sbb
lea
pop
les
fdivrl
jecxz
shrl
push
jb
inc
mov
cli
jge
mov
push
sub
pop
ja
jl
sbb
aaa
dec
and
gs
lock
and
jns
outsl
sbb
push
xchg
inc
ds
dec
imul
insb
push
jl
ljmp
pop
mov
pop
jne
or
jne
mov
js
fisttpll
and
inc
add
cmp
inc
pop
mov
pop
inc
jle
frstor
inc
xchg
jb
fcoml
int
nopl
adc
cmp
sbb
cmp
add
mov
int3
pop
and
jle
cmove
movsb
outsb
fldt
bound
add
leave
es
sub
pop
inc
or
mov
xchg
adc
adc
loope
or
pop
jno
sub
or
xor
adc
inc
push
xchg
arpl
push
imul
push
loope
mov
push
dec
imul
jl
xor
jg
pushf
inc
fsubrs
cs
ljmp
inc
hlt
adc
xor
lds
add
out
and
mov
js
pmullw
mov
pusha
mov
sbb
mov
scas
sbb
sbb
jnp
sbb
bound
xor
fs
cs
dec
jae
sub
dec
xor
fistpl
fstpt
pop
jns
arpl
fistpl
cmc
sub
add
jns
cs
pop
std
js
ljmp
aam
aad
aas
divps
pop
dec
cmp
imul
dec
push
push
pop
ljmp
aam
fs
push
popa
repnz
dec
dec
ss
idivl
cmp
inc
pop
js
push
sub
jb
int
xchg
iret
push
push
fsubrl
or
cmp
pop
pop
or
jmp
add
dec
adc
in
loopne
dec
lods
mov
adc
pop
xor
pop
add
pop
sbb
addr16
hlt
xchg
pop
sub
jae
xchg
xchg
mov
loope
test
sbb
add
and
pusha
jae
test
sub
enter
inc
sub
fs
mov
push
rcr
xor
dec
bound
loopne
fcoml
inc
add
sbb
mov
ss
bound
jae
jno
jg
js
cltd
cs
mov
adc
inc
cmp
jmp
call
mov
xchg
fucomip
cmp
push
and
nop
clc
lahf
sbb
pusha
ss
add
jns
pop
inc
mov
dec
xor
aaa
ss
pop
xchg
and
xor
adc
scas
push
push
scas
push
cmp
cmp
add
js
cmp
sub
jle
push
cmp
outsb
sub
sti
mov
addr16
pop
pop
push
sahf
ljmp
js
cmp
mov
movsbl
popa
pop
sbb
pop
cmp
xlat
cmpsb
push
add
push
loope
push
jle
insb
iret
push
loopne
push
aas
mov
ds
cli
add
insl
mov
and
pop
and
push
adc
push
addr16
lods
and
daa
cmp
subl
push
ljmp
jae
add
pop
pop
pushl
pop
aam
xor
mov
adc
add
aam
mov
pop
xor
add
push
and
and
cmp
pop
outsb
jp
jge
aad
pop
aaa
cmpsl
add
insb
inc
data16
and
or
fmul
cltd
clc
outsl
cmp
dec
jns
rclb
mov
adc
int
mov
arpl
lock
movsl
popf
out
dec
out
fmul
fsubs
xlat
xchg
jno
daa
push
jp
leave
icebp
jns
adc
ds
pop
mov
int
pop
sbb
xchg
ss
cs
aam
push
jae
sbb
ss
pop
aas
or
cmc
sub
incl
aaa
cmp
jns
pop
push
pop
xor
pop
imull
divl
cmpsb
imul
push
xchg
inc
mov
sub
inc
jl
repnz
xchg
into
cmpb
divl
insb
cld
pop
mov
sbb
movsl
pop
mov
dec
jns
stc
dec
xchg
push
pop
push
sub
aaa
sub
jnp
inc
cmp
fcompl
push
push
pop
pushf
and
mov
jge
movsl
inc
je
scas
call
int3
loop
pop
leave
pop
hlt
push
jno
mov
test
and
mov
sub
fnsave
lods
cmp
js
mov
xor
cltd
dec
sarl
jmp
decb
pop
cmpsb
jno
pop
dec
aas
xchg
iret
ja
pop
xor
mov
sub
sub
jne
add
xor
jne
dec
gs
pop
arpl
test
xor
jns
jmp
stos
popa
bound
js
cmc
or
shlb
pop
xor
iret
sub
jmp
sub
rorl
test
jl
rclb
in
outsb
call
pusha
leave
test
sub
xor
add
in
imul
aad
mov
mov
js
xor
adc
test
enter
dec
mov
sarb
push
push
sub
popf
sub
jns
xchg
cs
jecxz
mov
adc
popa
xchg
sysenter
fimuls
std
and
xor
cmp
pop
pushl
gs
sub
clc
add
mov
int
cmp
icebp
push
jl
imul
shrl
ja
or
jnp
jl
cmp
ret
cmc
movsl
rclb
lret
push
pop
sahf
test
arpl
out
insb
mov
inc
adc
fwait
xchg
mov
pop
fnstenv
adc
pop
or
sbb
stc
pop
adc
adc
sbb
push
shll
add
stc
xchg
aam
push
subb
sbb
test
dec
ss
push
jae
pop
sub
dec
adc
js
andl
dec
push
cmpsb
mov
addr16
cmp
dec
dec
xor
push
xchg
push
push
push
ret
pop
push
push
xchg
add
push
dec
test
add
pop
test
push
clc
inc
aaa
and
lock
push
jl
xlat
addr16
dec
dec
repz
pop
clc
icebp
or
repnz
dec
pop
std
sti
dec
incl
loopew
pop
mov
clc
mov
xor
and
or
cmc
mov
js
hlt
and
cs
cltd
ds
sub
in
mov
imul
pop
and
loope
xchg
cmp
mov
dec
adc
pop
loopne
inc
clc
fidivl
es
bound
sub
loopne
jle
lds
dec
pop
pusha
psubw
jnp
aad
test
dec
xchg
sub
and
jae
ficoml
pop
push
aad
imul
clc
and
jmp
andb
mov
daa
mov
cmp
movsl
cmp
lods
insb
std
add
ds
or
dec
add
cli
lcall
adc
dec
sub
inc
mov
xchg
cs
std
leave
jno
pop
add
cwtl
push
mov
addr16
mov
dec
les
mov
add
in
push
jne
shrb
rol
jmp
lds
mov
adc
add
push
adcb
fstl
cld
xchg
pop
or
popa
xchg
pop
push
sbbb
and
pusha
mov
push
add
push
adc
hlt
scas
movsl
popf
mov
les
or
stos
out
dec
sbb
aaa
inc
sub
sbb
pusha
out
sub
add
sbb
or
pop
popf
addr16
mov
pop
pop
adc
adc
or
inc
mov
das
push
fidivl
test
ss
nop
sub
fs
mov
mov
out
cs
pop
sub
push
add
adc
cmp
lea
xchg
push
movsl
aaa
mov
xor
or
es
xchg
xor
dec
pusha
dec
lods
xor
push
rclb
jne
js
push
xchg
lcall
cld
jne,pt
clc
pop
dec
imul
aaa
mov
scas
jae
js
hlt
jno
mov
outsb
pop
hlt
ja
jp
jb
hlt
js
out
imul
jecxz
dec
je
cmp
dec
sbb
sub
xor
pop
pop
test
jge
loopne
sbb
test
popa
aad
push
in
pop
outsb
adc
push
ljmp
je
sbb
ljmp
out
ja
pop
pop
sbb
inc
mov
adc
jns
jne
ja
sbb
add
pusha
out
hlt
cmp
dec
or
arpl
xor
and
pandn
inc
int3
dec
repz
xor
push
repnz
cmp
sahf
gs
divl
aaa
xor
in
push
mov
iret
inc
dec
lock
jb
aam
loopne
dec
pop
sbb
push
data16
cmp
xchg
and
mov
mov
add
hlt
push
mov
fisttpll
ret
cwtl
fstp
pop
pop
js
movsl
pop
pop
add
stos
imulb
mov
and
pusha
sbb
xor
dec
jmp
jnp
cs
jl
int
sub
pop
xchg
int3
mov
sub
add
or
into
inc
gs
push
jp
mov
push
mov
mov
decb
fsubrs
rcrl
fcompl
add
std
xor
mov
test
and
pop
push
mov
mov
sub
sahf
js
inc
in
pop
adc
dec
adc
dec
lret
cmp
nop
xchg
or
push
pushf
add
out
ljmp
mov
push
push
cwtl
inc
mov
jnp
and
cwtl
xlat
test
xlat
jg
jb
shll
les
jb
mov
or
sahf
jle
dec
in
adc
xor
fistps
jae
imul
mov
out
in
push
insb
xor
dec
push
insb
xor
dec
data16
push
imul
insb
mov
push
js
imul
xor
xchg
ss
and
xchg
dec
pop
cmp
push
arpl
pop
ljmp
pusha
outsb
dec
sbb
pop
gs
inc
popa
jbe
sbb
adc
imul
push
adc
dec
in
push
rcpps
fs
ret
bound
inc
cmp
imul
dec
jg
xchg
xchg
out
inc
insl
mov
xchg
ds
leave
fimull
sahf
jnp
pushf
loop
aad
stos
subl
and
mov
jl
inc
out
iret
dec
sarb
mov
pusha
pop
and
loopne
push
addr16
push
inc
xchg
push
dec
inc
frstor
test
bound
jbe
xor
dec
mov
push
iret
repnz
aas
dec
lcall
push
aas
test
pop
icebp
push
cmpsl
dec
push
addl
imul
pop
push
mov
pop
jl
jne
push
or
jp
jp
lea
or
shlb
inc
push
hlt
xlat
jp
jp
fstl
js
xor
mov
bound
jmp
add
push
popa
push
sub
pop
cmp
scas
pop
jnp
or
sub
push
mov
clc
bound
mov
insb
add
daa
pop
test
or
sub
mov
sbb
sub
ljmp
lret
insb
sbb
popf
add
jns
stc
pop
add
add
clc
or
xor
jae
or
sub
mov
ret
jns
out
sub
push
in
xor
sbb
stc
pop
hlt
into
icebp
inc
xor
clc
notl
insb
pop
lcall
cs
sbb
out
into
pop
imul
mull
out
mov
dec
out
daa
mov
movsl
cmpl
in
push
sti
push
jl
xchg
push
aam
pop
sti
xchg
mov
xor
pop
cld
cmc
xor
fistpl
or
push
dec
sti
xchg
cmp
fdivs
dec
sub
push
inc
mov
and
jns
fldl
jecxz
push
jmp
fsubr
icebp
js
and
ss
pop
ss
jp
push
iret
or
push
iret
mov
jle
inc
cs
int
push
into
mov
xor
insb
fnstsw
sbb
jecxz
add
sub
decl
std
jae
in
int3
int
inc
inc
push
sub
test
push
mov
cs
call
loopne
mov
ret
push
xor
movsl
xlat
push
xor
pop
bswap
xchg
aad
and
push
adc
push
or
dec
xor
push
sub
mov
jmp
cld
and
mov
sti
sub
push
mov
bnd
jl
pop
imul
pop
pop
add
pop
pop
dec
sbb
gs
cmp
loop
int
loop
sbb
int
lret
push
jecxz
mull
sub
imul
cmp
loope
or
add
decl
or
add
inc
mov
in
lret
push
or
aas
or
xor
inc
push
fldl
setb
cmp
push
mov
imul
add
stos
or
push
jg
pusha
pop
cmp
in
clc
movsb
sbb
dec
cmp
cmpsb
subb
xchg
add
gs
or
add
stc
pop
inc
rcrl
shl
jnp
jl
push
outsb
dec
xor
inc
jns
gs
jnp
dec
lock
jle
dec
inc
into
in
push
stos
sbb
dec
and
xor
sbb
fldt
ss
cmpsl
ljmp
dec
jb
sbb
pop
andb
imul
dec
repnz
mul
testl
mov
push
jnp
sub
jns
leave
or
adc
js
pop
in
inc
sahf
movb
fdivs
push
popa
mov
hlt
fldcw
sbb
ja
dec
sbb
jl
pop
repnz
cmp
in
lods
push
pop
cmpsl
xchg
sub
push
mov
jp
loope
movsb
mov
fsts
mov
pop
inc
pusha
push
mov
cwtl
cmp
pop
cmp
adc
inc
icebp
pop
aas
jnp
pop
jne,pt
xor
xor
fs
xor
push
pop
cmp
adcb
mov
loopne
jl
adc
jl
push
pop
fstl
fiadds
addr16
jecxz
jb
addr16
rorl
mov
cld
cmp
pop
iret
aam
movsl
jp
jnp
jl
pusha
clc
jp
insb
idivb
push
dec
sbb
lds
mov
js
jnp
xor
sub
int3
ss
cmc
std
arpl
mov
fisttpll
fdivp
inc
cltd
in
inc
jns
or
popa
cmp
pop
out
inc
cmp
adc
push
outsw
hlt
test
inc
pop
bound
pop
faddl
push
or
ljmp
push
pop
lret
pop
inc
and
negb
jle
add
or
mulb
add
mov
iret
xor
mov
inc
jne
addr16
jg
repz
push
jl
int3
es
pop
mov
xlat
test
ds
loope
cmpsl
pop
icebp
mov
add
ja
adc
inc
dec
xor
sub
push
xchg
incb
xlat
fldcw
push
cmp
mov
cli
fstpl
bound
pop
fstps
daa
pop
pop
mov
mov
mov
fcom
sahf
fidivl
cli
mov
mov
push
inc
pop
pop
adc
lret
mov
pop
push
ss
pop
adc
in
jge
in
cmpsb
test
rorl
cmp
rclb
in
inc
xchg
rolb
push
arpl
bound
mov
mov
mov
mov
push
fs
and
mov
pop
fdivr
bound
add
rcr
into
leave
adc
fidivrs
inc
les
adc
notl
push
fcmovnb
in
sarb
es
addr16
outsb
sbb
xchg
xlat
movb
std
dec
xchg
aam
shr
jg
out
push
mov
cli
cmp
nop
xchg
mov
cmp
popf
and
pusha
mov
inc
adcb
and
scas
fsubl
push
mov
jns
aam
or
pop
push
mov
jb
mov
add
sbb
lds
sub
pop
mov
ficoms
and
mov
les
hlt
add
repz
lret
add
fdivrp
mov
mov
and
loop
jns
inc
cmc
ret
xor
push
pop
imul
insb
xor
pop
adc
dec
pop
jno
insb
jnp
jne
movsl
lea
dec
mov
ss
in
aam
mov
xchg
nop
inc
sbb
push
inc
pop
bswap
or
scas
cmpsl
testb
pop
icebp
lret
ret
loop
cmpsb
in
int
dec
cmpsb
hlt
in
daa
aad
push
lds
rorb
push
xor
mov
mov
pop
lods
dec
lret
andb
push
ret
and
adc
addr16
xchg
pop
dec
xchg
fs
mov
mov
je
div
mov
cmp
aaa
dec
out
fstp
push
ja
push
cmp
fstpl
testb
sub
mov
scas
pop
fmuls
dec
pop
ljmp
mov
and
cmpsb
xchg
or
dec
shll
into
in
jae
jge
fisubs
test
pop
bound
arpl
ljmp
js
loope
cs
lea
mov
cmpl
ljmp
fdivl
stc
pop
lsl
je
mov
inc
das
aas
or
decb
in
mov
cmpb
sbbl
xchg
jne
fcomps
js
mov
idivb
jle
outsb
loope
pop
xor
addr16
sub
and
pop
push
push
aam
push
push
outsb
xor
inc
out
popf
jmp
dec
jnp
inc
pop
cmpl
inc
add
jl
ud2
out
movsl
xor
jae
rcl
ss
push
push
cmp
je
bound
xor
xor
dec
mov
adc
in
mov
push
push
xchg
clc
je
inc
sub
lds
frstor
daa
and
xor
bound
scas
mov
mov
cmp
gs
or
lea
inc
pop
jbe
js
jle
pop
out
mov
mov
aaa
andl
mov
add
and
or
sub
faddl
std
lods
adc
sahf
mov
clc
cli
scas
mov
outsb
sbb
ljmp
mov
mov
pop
stos
push
pop
mov
loop
loopne
out
cmp
cli
pop
sub
out
arpl
cli
pushl
push
cmp
loopne
clc
sbb
push
fwait
mov
add
and
pop
mov
aas
sub
jp
bound
dec
stos
jg
addr16
inc
adc
mov
add
ljmp
hlt
pop
inc
xchg
inc
lret
es
in
movsl
dec
xor
mov
dec
and
mov
and
push
sbb
cld
adc
outsl
or
jmp
inc
int
mov
ucomiss
loope
jbe
cmp
mov
xor
jne
or
fldcw
sub
cmp
cmc
addr16
pop
arpl
iret
cmp
nop
int
add
cmc
mov
fst
xchg
inc
xor
loope
xor
loope
fisttpll
outsb
out
and
cmp
mov
leave
ja
adc
pop
mov
pop
push
out
loopne
aas
bound
pop
xchg
sub
mov
clc
insl
es
loopne
jle
cmpsb
test
shrb
xor
jmp
pop
gs
jge
mov
lret
or
dec
mov
int3
mov
cs
mov
pop
popf
imul
sub
sub
and
adc
cmc
pop
or
lret
inc
es
clc
lea
push
leave
xor
in
pop
adc
std
icebp
mov
std
mov
mov
push
or
paddw
cld
push
or
pop
mov
addr16
mov
aam
mov
push
cmp
sub
dec
push
shll
xchg
push
add
cs
pop
js
jo
rcll
pop
dec
ljmp
stos
and
fmulp
fwait
mov
add
push
in
xchg
jl
aad
cwtl
bound
in
add
or
add
xchg
jne
cwtl
sbb
inc
jg
shr
pushf
decb
sub
jle
popa
addr16
sbb
mov
fistpll
xchg
adc
mov
pop
cmc
in
rcrl
mov
add
jb
hlt
aas
push
repz
jge
sbbl
fbstp
aad
test
icebp
pop
jle
leave
aas
sbb
sub
xchg
cmpsl
rcrl
pop
clc
xchg
stc
and
inc
fcompl
jl
daa
out
add
pop
dec
jmp
mov
popf
xchg
sahf
adcl
push
push
ljmp
mov
popf
and
test
or
lea
dec
out
jl
cmpsb
shlb
push
enter
into
push
add
sbb
fs
xchg
dec
mov
movnti
popf
popa
push
sub
xor
fdivr
mov
cmp
mov
or
inc
inc
adc
aas
andb
push
jge
mov
ffree
in
jae
pushf
loopne
mov
push
jnp
or
or
or
push
mov
loope
add
mov
fsubrs
sbb
sti
push
jae
mov
sub
and
cmp
ja
enter
call
in
dec
sub
push
mov
dec
xor
sbb
out
ret
into
fadds
not
cmp
fistpl
xor
sub
leave
aaa
fsub
mov
jns
mov
mov
out
xlat
sarw
in
push
and
jns
enter
push
loopne
add
jecxz
in
mov
push
clc
leave
movsl
sub
lret
scas
xchg
movsl
in
out
jo
das
cli
push
mov
dec
jmp
andl
pop
dec
ljmp
dec
pop
insl
ss
mov
rcrb
push
icebp
jge
js
icebp
test
js
hlt
icebp
xchg
popf
into
js
shrl
movsl
shll
outsb
nop
adcl
mov
gs
pop
dec
pop
mov
fisttpll
enter
loope
gs
insb
addr16
stos
ds
insb
out
data16
icebp
fldt
insb
add
into
insb
mov
dec
mov
lret
push
push
dec
scas
adc
push
pop
aaa
xchg
push
movsl
loopne
cmc
imul
lods
or
orb
push
jnp
mov
add
shl
pop
jb
pop
call
push
or
inc
jae
rorl
or
movsb
and
dec
cmc
lock
dec
xlat
test
pop
add
adc
mov
mov
add
or
mov
jne
lods
inc
xchg
dec
out
cmp
lock
addr16
jg
filds
pop
pop
add
jb
mov
push
jl
movsb
scas
in
sarb
mov
andb
mov
js
int3
or
add
mov
cmp
std
fbld
mov
sub
insb
cmp
sti
loop
xor
shl
stos
inc
pusha
popa
sub
imul
int
ljmp
push
dec
pop
gs
arpl
jns
jne
imul
dec
xchg
or
std
test
sbb
ss
add
fists
jnp
xor
int
movsl
aaa
inc
decl
jns
jp
popf
loopne
sti
cmpsb
mov
lcall
lods
mov
jnp
cli
ret
stos
xorl
nop
pop
push
inc
ljmp
in
jg
test
cmp
and
insl
lock
push
fisttpll
add
xchg
stc
xlat
jo
or
rcll
ss
movl
int3
pushf
hlt
pop
pop
xchg
dec
or
jmp
mov
into
pop
test
shll
in
and
xchg
orl
mov
push
je
xchg
adcl
push
aas
in
sbb
fstpl
ret
lcall
nop
sbb
xor
jb
sbb
cmp
sub
jle
and
pop
fs
out
test
xor
cmp
cmp
lret
insw
ret
ss
rclb
sbb
xor
xor
jae
incb
out
add
pop
call
jne
push
push
inc
aam
rcrl
lret
adcl
dec
jae
inc
in
lea
xor
push
mov
cwtl
pusha
dec
pop
test
lock
int3
mov
mov
or
imul
sbb
sbb
popa
xchg
jl
addr16
xchg
cmp
xchg
add
scas
or
arpl
je
lcall
out
sbb
pop
pop
mov
mov
pop
add
ret
pushf
aam
adc
cltd
imul
sti
jle
fidivrs
and
or
jnp
imul
dec
sbb
aad
jns
test
in
pop
xchg
lds
lret
inc
loop
bound
movsb
dec
addr16
add
jl
fs
shll
jge
pop
imul
push
adc
ja
inc
add
add
in
in
cmp
jmp
push
push
shll
push
mulb
lret
push
cmpsl
xchg
and
push
mov
fisubrl
test
or
push
or
lahf
int
ror
inc
fldl
adc
add
sbb
test
mov
test
fsubl
xor
jae
aas
ficomps
daa
xor
pop
into
insb
fs
lock
xor
pop
and
icebp
mov
nop
icebp
out
les
stc
xor
pop
push
in
lods
in
push
adc
xchg
repz
mov
adc
mov
push
and
mov
push
or
xlat
or
mov
xchg
pop
pop
and
in
dec
xchg
or
pop
mov
pusha
push
or
out
push
adc
cmp
cmp
jae
in
cmp
ljmp
or
loop
lock
sub
imull
cmpsl
hlt
xor
xor
sub
mov
push
das
push
push
loope
movsb
movsl
test
fs
jp
daa
popf
jmp
adc
ljmp
pop
jl
sub
xor
fiadds
push
mov
jl
pop
icebp
dec
mov
in
loopne
clc
or
mov
sbb
sub
adc
jg
aam
or
xchg
call
inc
mov
pop
or
sbb
push
xor
mov
addr16
push
jb
aaa
pop
roll
jne
popf
add
lcall
push
pop
sbb
push
out
divps
std
add
sbb
or
jg
jae
incb
sbb
fdiv
push
adc
xchg
jae
int3
inc
je
js
sub
mov
cmpb
mov
mov
in
jecxz
data16
inc
xor
sub
mov
or
ljmp
pop
xor
sbb
rcll
cs
aam
sbb
outsb
add
ja
or
clc
in
aad
ljmp
and
pop
push
sbbl
jb
sub
hlt
add
jne
loop
adc
dec
jnp
xor
ljmp
push
pop
jl
cmc
push
lret
jnp
cs
ror
fs
and
sti
jns
ljmp
js
and
pop
mov
fnstsw
push
stos
bswap
mov
test
pop
stos
and
push
pop
push
mov
jns
enter
xor
fwait
mov
jne
push
ljmp
cmp
test
into
sub
xchg
roll
pop
test
push
popa
dec
add
sti
push
mov
cwtl
mov
fsub
mov
les
mov
sbb
xchg
ret
hlt
cmp
sub
mul
enter
add
xchg
pop
imul
push
outsb
jmp
or
add
popf
jae
jns
in
push
fisubrs
pop
jl
dec
pop
pop
xor
push
idivb
stc
or
cld
xor
cmpb
pop
popf
filds
addr16
das
arpl
mov
and
popf
mov
divb
cmpb
bound
push
arpl
js
push
into
inc
or
push
push
jne
mov
addr16
call
dec
cmp
xor
push
shll
mov
mov
cmpsb
fdivrl
hlt
jge
js
lahf
inc
cmp
fisubs
fs
adc
push
add
push
pop
imul
idivl
bound
in
cli
andb
and
sub
mov
push
or
mov
and
je
sbb
in
and
pop
or
dec
push
push
je
push
xchg
dec
or
testb
sar
push
dec
xor
dec
jl
xchg
mov
mov
cmp
lcall
jnp
movsb
cmp
mul
loope
out
sub
aaa
pop
sbb
mov
ficoml
jl
aas
stc
cmp
mov
dec
test
imul
test
pop
outsl
jp
div
mov
inc
fbld
push
fs
bound
aas
jmp
out
nop
dec
xor
out
xchg
jbe
sub
das
out
mov
push
jnp
ds
push
loop
out
sahf
sub
mov
pop
xor
aas
pop
movsl
push
mov
imul
and
jle
mov
cmp
adc
jnp
pop
and
divb
xor
addr16
int3
cmc
jl
and
js
mov
pusha
jns
jne
mov
stos
push
xor
xor
iret
add
in
xchg
js
mov
outsl
pop
sub
movsb
das
aad
sub
js
pop
jg
fbld
stos
clc
and
adc
mov
sbb
add
xchg
dec
pop
or
dec
push
dec
mov
in
test
push
fs
jg
xor
and
sbb
push
test
imul
dec
out
into
lock
sti
inc
scas
fdivl
popf
clc
adc
cmp
movsb
outsl
push
push
lods
xor
xchg
inc
jecxz
arpl
aas
imul
clc
mov
fcmovbe
or
sets
insl
jl
pop
mov
mov
push
mov
jl
jp
mov
adcb
jp
cmp
repz
add
fsubl
imul
or
mov
pop
nop
nop
mov
inc
sahf
outsl
mov
mov
pop
push
lahf
lea
aad
push
sub
add
add
mov
hlt
push
adc
mov
xchg
xchg
lret
mov
jge
cli
adcl
inc
xorl
cs
sbb
adc
mov
mov
xchg
and
push
jle
leave
ss
mov
dec
inc
sbb
push
pop
mov
or
add
pop
mov
decl
mov
sbb
fs
cmp
dec
pop
pop
pop
pop
stos
bound
test
cli
rcr
sbb
sti
and
inc
sub
add
jnp
dec
jmp
mov
lret
pop
into
in
gs
mov
cld
push
xor
mov
jbe
pop
mov
cs
pop
pop
mov
dec
xor
xor
xorb
pop
cmp
mov
inc
clc
mov
cs
pop
sbb
hlt
divl
addr16
dec
test
fmull
inc
in
mov
clc
mov
test
cmp
dec
push
movsl
dec
movsb
push
bound
dec
push
movsl
mov
movsl
dec
pusha
movsl
mov
dec
mov
aad
jno
call
aaa
ja
js
or
or
iret
jb
mov
add
insb
icebp
push
mov
mov
add
pop
push
xchg
fsubrs
scas
or
pusha
push
pop
gs
icebp
mov
push
xchg
es
insb
and
cmp
data16
ljmp
cld
hlt
ds
rcrb
mov
and
mov
repnz
push
inc
push
mov
sub
mul
jp
gs
pop
jge
sti
gs
lds
frstor
jecxz
ret
or
push
pop
ja
into
mull
cmp
dec
pop
gs
xor
imul
repnz
add
fisttps
push
fnsave
jbe
jmp
cmp
lock
negw
mov
cs
xor
xor
mov
adcb
xor
and
sahf
pushf
subl
mov
push
mov
xchg
xor
popa
sar
lods
jecxz
lock
xor
xchg
cmpsl
test
pop
shl
push
and
cmpsl
int
dec
push
fnstsw
lods
mov
dec
or
imul
in
dec
jae
inc
inc
popa
fs
cs
xor
add
jle
scas
data16
cmp
ja
imul
push
add
pop
movsl
xor
push
jg
jge
iret
push
push
push
insl
repz
or
js
fs
cmp
add
mov
push
push
jecxz
cmp
fnsave
xor
jns
mov
lret
test
add
sbb
push
pop
jns
add
adc
fbld
adc
ja
push
sbb
call
and
dec
insl
sbb
pop
inc
xor
jl
add
and
inc
dec
sbb
das
dec
and
mov
jg
fiaddl
or
cmp
inc
add
push
sbb
add
add
sbb
pop
and
lods
sbb
pop
sub
mov
lock
pop
mov
jae
mov
icebp
add
mov
push
fisubs
xor
loop
ja
test
lock
cmc
fxch
push
xchg
mov
stos
or
mov
clc
call
loope
in
add
mov
or
pop
test
mov
add
sub
mov
pop
xorb
sahf
hlt
sbb
pop
mov
mov
inc
jp
mov
pusha
fwait
pop
iret
dec
jo
arpl
cmp
imul
dec
fnsave
inc
bound
or
sbb
dec
mov
imul
cmp
and
int
mov
cmp
jno
sub
cmpb
cli
psubw
dec
or
or
mov
pusha
and
jb
jnp
cld
mov
mov
cld
jl
mov
jno
jne
push
daa
mov
cmpl
dec
sub
cmc
adc
inc
push
fisttpll
cvtps2pi
adc
int
cmc
cmp
xor
jge
mov
mov
mov
mov
mov
mov
pop
pop
jno
adc
mov
pop
sbb
and
mov
adc
or
push
mov
push
sub
adc
inc
js
adc
cmp
push
add
cmp
bound
cmp
pop
adc
ret
dec
inc
sbb
pop
mov
fs
out
or
jb
arpl
inc
jns
ret
push
adc
and
cmp
sbb
add
push
outsb
cmp
inc
adc
push
adc
jns
sub
aas
xor
idivl
loope
adc
das
xchg
lea
pop
mov
cmp
fnstenv
int
je
dec
notb
sub
dec
xor
pop
andl
inc
pop
cmp
sub
fwait
and
lcall
pop
and
iret
xor
cmp
daa
xchg
std
rorl
and
xchg
and
in
call
cmp
sub
aam
xchg
dec
pop
cmp
add
jge
testl
and
jb
mov
cltd
jnp
loopne
pop
adc
sbb
mov
ficoms
mov
popf
jl
sbb
movsb
icebp
mov
fidivl
and
pop
push
mov
pop
dec
out
push
hlt
fnsave
in
or
out
scas
jnp
leave
daa
mov
out
rorb
and
cmpb
sbb
int3
iret
pusha
sub
inc
sbb
inc
sub
xor
das
add
adc
sbb
pop
pop
xchg
jl
in
jecxz
add
js
jle
and
out
push
stc
pop
dec
aas
xor
rcrl
andb
adc
adc
insl
jbe
push
popf
sbb
push
out
lods
pop
push
jmp
cmp
inc
xchg
gs
inc
movsb
ljmp
mov
sbb
adc
int
sbb
dec
push
aaa
dec
icebp
add
jbe
mov
jp
in
popf
dec
hlt
mov
pop
and
call
in
cmp
dec
adc
and
dec
aas
shl
xchg
sub
add
or
inc
in
cwtl
pop
mov
loop
xor
push
lds
cmp
xor
mov
mov
out
aad
dec
daa
mov
mov
scas
clc
inc
ja
adc
or
or
les
fbstp
dec
inc
icebp
cmp
or
xor
xor
inc
icebp
mov
stc
sbb
es
and
fistpll
inc
add
jge
stos
push
mov
pop
fyl2x
xchg
inc
and
inc
cs
in
push
xchg
push
pop
cmp
sub
dec
push
je
rep
sub
inc
sbb
cmp
cmc
mov
negl
jp
inc
jg
lock
inc
dec
ds
dec
adc
pop
sbb
add
es
or
adc
aaa
mull
lods
daa
adc
cwtl
pop
cmp
add
adc
or
xchg
int3
pop
icebp
add
pop
mov
jg
sbb
xor
or
mov
or
in
insb
mov
jl
add
or
xchg
fists
cld
sbb
pop
dec
inc
movsb
das
inc
cmp
inc
inc
or
adc
dec
jecxz
fbld
sbb
xor
push
sbb
cvttps2pi
push
scas
cmp
addps
or
push
daa
je
pop
pop
ss
dec
sahf
sub
insb
xor
sbb
add
jle
and
ficompl
dec
lds
pop
mov
or
jg
in
sbb
add
hlt
shl
es
mov
push
test
and
in
insl
inc
idivl
jno
call
cmc
aad
int
cmp
jb
or
add
mov
xor
add
push
aaa
and
sub
and
dec
inc
in
dec
pusha
loop
push
adc
dec
xor
std
push
out
out
cs
sbb
inc
adc
lods
stc
jb
aam
arpl
aam
cmp
in
dec
jbe
mov
xchg
dec
out
push
movsb
ficoms
fdivr
enter
pop
jl
pusha
pop
jno
xchg
cmp
movsl
dec
test
push
loop
push
jne
insl
ret
and
jbe
and
jmp
pop
pop
mov
ljmp
mov
js
mov
call
push
mov
insb
push
out
jbe
cmp
pop
push
pusha
ja
outsb
pop
jne
xor
sub
test
dec
jbe
ds
lret
jb
std
out
mov
outsl
sub
in
subl
xchg
jle
jno
stc
jbe
jno
pusha
push
ds
xor
push
jp
je
ret
mov
ja
add
cmp
insl
in
dec
arpl
in
jl
pop
es
add
adc
adc
xchg
ja
push
jae
mov
js
pop
sbb
daa
sub
aam
int
push
sbb
bnd
mov
mov
mov
or
fnstenv
mov
xor
loopne
imul
insl
inc
pop
jbe
pushf
jl
sub
loopne
pop
adc
sbb
outsl
push
outsb
xor
mov
xor
jnp
cmc
pop
jbe
negb
out
jb
jne
cmp
push
push
mov
js
pusha
in
mov
pop
mov
leave
mov
jl
ds
jno
loope
stos
divl
push
icebp
or
shrb
aad
out
jp
push
pop
loopne
call
imul
outsl
cwtl
dec
push
push
pop
les
aad
xchg
xor
xchg
cmovnp
add
xor
adc
jnp
push
repnz
jp
sti
pop
ja
pop
push
jb
jge
insb
jae
pop
popa
add
pop
jp
xchg
sbb
mov
adcb
push
jae
push
push
pusha
bound
imul
mov
xchg
cmp
pop
filds
dec
repz
push
pop
out
push
mov
mov
pop
mov
ja
push
cmp
fcomp
or
xor
mov
aam
sbb
leave
cmp
dec
rcll
insl
and
push
dec
and
daa
dec
jmp
cwtl
xchg
xor
xor
sub
cmp
sub
sahf
sub
je
aaa
push
out
jne
sbb
xor
pop
adc
ja
jl
fbstp
adcl
repz
push
pusha
ja
lretw
dec
imul
cld
ja
cs
and
outsb
inc
movsl
adc
mov
hlt
jl
lahf
pop
cmp
mov
mov
push
pop
dec
inc
mul
repz
add
adc
cmc
inc
cmp
jns
jne
lcall
shll
aas
xor
test
adc
xchg
sub
jle
jnp
inc
sbb
xor
cs
push
mov
push
or
push
pop
jnp,pt
fdivr
jmp
cmp
mov
cmp
mov
mov
negl
or
cli
shr
push
xlat
mov
cmp
sub
push
popa
sti
rol
stos
push
in
push
jmp
push
cmp
inc
jl
outsb
insl
add
or
or
mov
jnp
jno
xor
cmp
out
outsl
pop
call
sarl
fmulp
cltd
repz
jle
add
pop
jae
mov
sbb
loopne
add
jnp
sbb
sbbl
loop
or
mov
jbe
shrl
cmp
cmp
push
inc
mov
aam
jb
in
pop
or
dec
jno
sub
leave
movsl
jbe
inc
xor
fwait
xchg
outsb
jo
sbb
jecxz
jno
xor
sbb
push
adc
sbb
insb
xor
imul
and
fs
ficoms
xlat
lea
aam
cmp
mov
insl
push
int3
add
push
loopne
pop
hlt
mov
push
mov
icebp
xor
dec
je
sub
sbb
andb
push
jmp
xor
mov
push
xor
jp
jp
jbe
lea
add
call
jns
push
and
push
jmp
aad
jne
jns
ja
sbb
loop
bound
scas
jmp
dec
or
xorl
dec
jle
dec
and
sbb
in
xor
add
sbb
xor
es
dec
fs
insl
inc
sub
and
sub
outsb
xor
push
mov
inc
stos
xchg
pop
pop
ja
pusha
push
aaa
jecxz
pop
in
pop
int
xor
int
js
and
push
mov
ja
insl
inc
xor
cmp
mov
adc
dec
ja
pop
dec
outsb
pusha
imul
mov
jle
pop
push
jp
bound
or
fcompl
mov
sbbb
dec
ja
in
dec
jnp
insl
sub
arpl
daa
insl
mov
mov
outsb
cs
aad
mov
shll
cmp
out
je
adc
jne
jmp
mov
addr16
and
pusha
mov
cmp
xchg
stos
icebp
call
jbe
and
add
rclb
gs
push
mov
pop
cmp
lahf
pop
loopne
dec
jbe
pop
inc
jecxz
lahf
xchg
in
pop
cmp
jnp
xor
iret
lret
push
sbb
es
adc
sahf
loop
loope
pop
aas
jl
outsb
jecxz
cmp
sbb
stos
push
jns
repnz
out
mov
xchg
mov
ss
jae
jl
pop
gs
jge
stos
inc
aam
push
loopne
xchg
pop
inc
and
arpl
jns
xor
jge
sti
scas
in
aad
inc
dec
clc
push
std
and
sub
and
and
fists
pop
sub
dec
int
and
cwtl
repz
jne
pop
pusha
mov
xorl
jl
jb
sub
mov
mov
push
mov
mov
jmp
lahf
orl
or
fs
nop
ficomps
or
movsb
fwait
jle
je
jne
dec
pop
in
adc
and
pop
cmpsb
loop
imull
sbb
dec
aad
repnz
pop
and
aaa
jns
popaw
mov
xor
pop
push
arpl
jns
push
mov
sub
pop
lcall
out
mov
aas
mov
mov
jbe
xor
or
sub
gs
xchg
jmp
test
insl
pop
jge
mov
insl
mov
int
mov
insb
popa
shll
sub
xor
jp
test
lock
sbb
lock
bnd
sbb
insl
mov
insb
mov
lods
lret
dec
test
lahf
dec
or
call
sbb
into
mov
mov
inc
xchg
add
ja
jle
push
cmpsb
sub
inc
jae
es
pop
lret
cmp
shrl
roll
jo
xchg
push
xchg
push
outsb
test
jo
scas
add
mov
in
push
pop
pop
sti
push
fsubrs
in
mov
inc
outsb
clc
xor
xchg
cmpsl
insb
mov
pop
fs
lea
outsl
pushl
les
outsb
adc
mov
push
fs
adc
push
mov
adc
addb
adc
jo
jecxz
inc
lret
hlt
and
cld
cli
stc
imul
mov
mov
dec
mov
pop
insl
pop
jns
imul
jno
mov
jns
fistpll
lds
jne
ss
repnz
xor
jo
and
ja
mov
shlb
push
popf
insl
fwait
jl
hlt
stos
sbb
mov
adc
stc
sbb
mov
push
and
mov
inc
loopne
adc
mov
sbb
scas
jb
jp
insb
and
dec
add
insl
ffreep
adc
lods
pop
mov
pop
ret
lock
arpl
pop
push
data16
dec
ja
lret
fildll
jo
ror
inc
std
dec
ja
ds
inc
cmc
rcr
enter
lea
push
sub
mov
or
stos
std
adc
imul
dec
jge
cmpsl
aad
push
jo
popf
sub
mov
aaa
inc
inc
rcr
jo
daa
fidivrl
mov
mov
dec
mov
push
cmpsb
stos
mov
cmpsl
jo
cmp
sub
daa
xchg
test
std
mov
in
test
pop
jae
popa
arpl
sti
icebp
imul
fisttpll
xor
jnp
jo
and
icebp
lahf
jmp
dec
cmc
jg
xor
jno
mov
jo
rep
nop
rorl
insl
jg
mov
dec
out
lret
adc
push
push
aas
pop
lea
xchg
mov
inc
push
jb
or
jo
call
dec
ljmp
adc
sti
in
or
mov
loop
ret
pop
jb
xchg
add
xchg
xchg
popl
jae
xor
add
jg
fwait
add
mov
mov
addr16
sbb
mov
cmpsb
mov
mov
lret
xlat
lock
iret
fdivrl
jmp
inc
inc
pop
ficomps
mov
repnz
xchg
xor
mov
mov
outsb
das
or
dec
mov
and
popl
cli
xor
inc
jl
divb
enter
mov
inc
shll
sbb
push
jecxz
je
lea
int3
mov
mov
push
pop
jo
shl
stc
push
mov
test
xchg
sahf
pop
adc
or
std
lock
sarl
stos
adc
ret
fmull
cmp
xchg
mov
and
dec
push
or
inc
andb
sub
jbe
mov
pop
mov
ja
push
push
sbb
mov
and
jo
lcall
jae
icebp
adc
adc
fidivl
mov
jne
cmp
jecxz
loopne
shlb
data16
adc
xchg
insl
lea
ja
jnp
pusha
cmp
adc
je
jns
push
add
inc
in
pop
test
pop
push
adc
dec
popa
test
push
jge
das
lfs
cwtl
mov
sub
xor
lcall
ja
shrb
jo
xor
and
nop
sbb
pusha
jp
pop
ja
push
mov
adc
outsb
or
testl
into
insb
bound
mov
ds
loopne
xor
mov
pop
or
sarl
roll
add
jnp
inc
and
dec
ds
jae
sub
xor
nop
push
dec
in
add
inc
jb
mov
jno
gs
lock
jo
fcoml
and
xor
imul
jl
cmp
mov
sbb
or
mov
push
cmpsl
cmp
jge
js
ret
jecxz
enter
rcr
fbstp
push
data16
or
jo
sub
push
pop
int
jo
and
sbb
inc
sbb
sub
mov
outsb
imul
push
shl
or
add
sub
scas
aad
mov
cmpsb
outsb
mov
push
inc
test
jo
push
cmp
insl
dec
rcrb
lods
dec
mov
stc
jo
pop
mov
push
pusha
lds
mov
pop
daa
jge
mov
dec
call
lods
fdivrl
sbb
ljmp
mov
rcr
fsubrs
shlb
mov
lock
or
dec
and
jo
nop
movsl
jae
sub
xchg
jo
adc
bnd
das
imul
mov
aaa
pop
adc
cwtl
ja
mov
jmp
ja
mov
in
xor
ret
jo
repnz
pop
bound
jp
lock
sub
mov
jo
ljmp
jo
mov
mov
insl
dec
mov
xor
add
shlb
xor
out
xchg
lahf
jae
icebp
fwait
xor
fsubs
sub
pop
mov
iret
mov
mov
sti
and
mov
dec
xchg
xor
jno
jecxz
pop
cmc
lock
ss
jbe
fwait
mov
cmp
push
inc
cld
jo
popf
xor
jle
or
movsb
mov
mov
sub
dec
mov
push
fcomps
and
je
adc
into
cli
push
cmp
add
and
fdiv
lret
push
insl
jo
mov
lcall
push
test
aas
outsl
jo
pusha
xor
jb
pop
imul
ss
pop
daa
imul
dec
pop
test
cld
jae
int
lret
xor
or
sbb
pop
sbb
inc
or
ja
cs
sub
jo
sahf
inc
jo
clc
adc
hlt
inc
les
ja
lock
jb
out
test
jo
xchg
fldt
push
sahf
mov
sbb
lods
xchg
shll
sub
cmp
pop
or
pusha
rorl
sub
jg
dec
mov
sub
mov
cld
sbb
jo
stos
aas
fildl
jle
arpl
out
jo
xchg
and
jo
addb
loop
in
xchg
imul
sbb
rorl
mov
in
mov
sub
cmpl
xor
jo
inc
mov
movsl
jo
push
shrl
roll
jo
add
or
push
xchg
adcb
fdivr
xor
jmp
jae
aas
out
roll
and
jo
jbe
aad
rorl
divb
mov
or
insb
cmc
rorb
and
outsl
orb
lahf
mov
adc
jmp
jno
xchg
mov
adc
sti
dec
cmp
cmc
jo
scas
mov
dec
loop
jo
add
mov
push
push
xor
dec
sbbb
pop
data16
jo
adc
push
xchg
jbe
sub
les
lea
mov
add
fstpt
pop
stos
xor
div
jo
mov
ds
pop
jo
xor
mov
shll
imul
lods
aam
push
pop
adc
xor
and
jecxz
add
mov
test
xchg
cs
popa
lcall
xorl
insl
xor
jge
push
fistl
test
xor
lock
int3
adc
jo
dec
xlat
push
out
pusha
outsb
imul
lock
adc
mov
mov
mov
pop
jae
aad
mov
mov
dec
mov
mov
cmpsb
aad
jno
jo
out
push
int3
add
cltd
dec
xchg
jmp
pop
dec
orl
and
cli
adc
pop
inc
cmp
cmpsl
cmp
pusha
jo
and
push
jo
leave
dec
cmp
shlb
aam
push
enter
adc
pop
mov
sub
add
movsl
leave
pop
mov
jp
pop
cs
decl
xchg
jmp
mov
fwait
aas
mov
mov
imul
pop
lret
lds
ret
xchg
call
shr
imul
or
popa
insb
jo
pop
sbb
mov
das
addr16
shrb
lock
insb
mov
testl
hlt
cwtl
loopne
jo
rorl
popf
stos
std
mov
dec
fidivrl
loope
xchg
add
nop
lock
arpl
jb
jo
mov
push
push
inc
jns
xor
mov
jo
daa
ret
sbb
lods
insl
dec
or
fimuls
lcall
add
xor
scas
jo
mov
mov
jne
std
mov
adc
out
xor
xor
jge
cmc
jo
cmp
ret
push
ljmp
pop
jo
mov
add
into
mov
inc
mov
lret
mov
in
adc
aad
ror
mov
fdivs
jg
shl
mov
insl
test
adc
xchg
add
push
aad
xor
outsb
jo
popf
js
pop
shlb
mov
mov
dec
out
popa
cmp
enter
jo
push
icebp
sbb
xchg
in
loopne
or
xchg
mov
bound
js
add
iret
jae
in
sub
mov
mov
xchg
cmp
les
jne
pop
enter
jo
enter
and
jecxz
adc
mov
insb
aad
sbb
lock
or
or
jno
ljmp
adc
lock
lods
mov
movsb
xchg
xor
es
mov
cmpsb
fisttpl
mov
in
jo
and
lea
cmp
orb
jbe
icebp
scas
jns
mov
idivl
jo
xchg
outsb
pop
insb
shll
inc
jae
xor
jo
fisubrl
adc
dec
lea
fiaddl
push
dec
dec
mov
push
jae
jo
and
cmp
or
adcl
lret
dec
sahf
call
gs
shr
xchg
xorb
xchg
pop
or
dec
pushf
lahf
xor
movsl
imul
inc
lods
xor
mov
in
mov
inc
popa
add
jo
mov
adc
popf
ja
xchg
sbbl
popl
mov
negb
pop
pop
movsl
shlb
lahf
and
sub
mov
pop
jo
loop,pn
enter
outsb
mov
rep
orl
adc
lea
test
je
sub
add
jae
mov
int
dec
add
or
push
mov
stos
imul
jo
xor
and
cmc
mov
jle
stc
xchg
movsl
jo
insl
sbb
jnp
je
pop
inc
mov
mov
adc
pop
sti
rol
idivb
adc
sub
insl
inc
add
mov
dec
cwtl
jg
shlb
cmp
jae
inc
push
adc
mov
inc
adc
fimull
xor
dec
sbb
enter
mov
js
dec
iret
pop
cmp
jns
and
shrl
inc
inc
jo
push
pop
mov
add
sub
cmp
push
mov
das
shrb
dec
jg
or
stc
insl
sarl
sbb
filds
push
ja
movsl
jne
cmp
lock
push
nop
jo
add
loop
mov
dec
aaa
std
cmp
bound
xchg
and
mov
pop
data16
xchg
addl
shll
jnp
lea
inc
cmp
popf
fmuls
dec
mov
aaa
addl
xor
dec
adc
mov
icebp
adc
ja
mov
stc
mov
test
ja
and
dec
outsb
cmp
pushf
dec
push
out
push
xchg
push
mov
jne
inc
inc
mov
sbb
xchg
mov
mov
rcrb
mov
inc
ljmp
js
rcrl
xor
and
cmpsb
cltd
addb
mov
jle
loopne
adcb
push
data16
fdivl
imul
inc
int
add
jmp
imul
out
outsb
insl
fwait
jge
in
es
mov
inc
jo
adc
and
rcll
xor
out
movsb
push
in
popa
testl
jae
xor
in
mov
dec
loopne
fistps
mov
fmuls
inc
shl
lock
popa
add
xor
or
stc
or
insb
sti
les
inc
jo
xlat
adc
mov
jbe
jb
ficoms
pop
mov
cmp
pop
jo
in
inc
shlb
sahf
fbstp
pop
mov
xchg
rorb
mov
xchg
mov
push
jae
fildll
aad
mov
std
mov
imul
adc
push
stos
outsb
loopne
jo
xorl
pop
inc
push
jo
fisttpll
sub
mov
arpl
mov
pop
mov
push
movsl
outsb
mov
ds
lock
clc
in
sbb
jo
aad
push
jle
add
jmp
and
inc
jns
jo
clc
jbe
aad
sbb
je
ds
clc
lock
ljmp
shll
lret
cwtl
scas
bound
je
enter
gs
sbb
mov
test
out
cmp
fdivrp
push
mov
and
jo
xor
push
imul
jb
lret
fs
dec
jo
dec
push
add
xlat
clc
rcrb
cmp
mov
cmp
cltd
mov
dec
movsb
xchg
lock
popl
dec
jl
div
xchg
pushf
mov
fbld
pop
iret
lahf
ret
mov
jae
test
cli
xchg
cmp
out
xor
daa
dec
pop
fiaddl
inc
push
cmp
or
cs
xchg
jo
jne
xlat
push
gs
jo
pop
out
push
roll
mov
fwait
jg
std
dec
insb
jo
push
fucomi
or
scas
jo
cmc
ljmp
dec
pop
push
idivl
rcr
jp
out
lods
icebp
shr
mov
leave
mov
or
jmp
push
pop
cltd
jecxz
rcrl
lods
mov
sbb
insl
in
loopne
pop
negb
outsb
pop
jmp
push
jnp
jo
jae
xor
outsb
pop
inc
xor
jo
ds
rolb
adc
nop
dec
xchg
and
aas
jo
mov
jne
pop
repz
aaa
and
mov
orl
jno
xchg
add
loop
pop
in
jp
outsl
rol
adc
dec
inc
icebp
lods
jno
dec
fdivr
es
and
xor
cmp
jbe
insb
jp
fiadds
push
ss
push
ljmp
mov
push
pop
or
xchg
mov
add
mov
jns
xchg
cmp
sbb
daa
rclb
cmp
xor
int3
out
jo
mov
and
cmpsl
shlb
cmp
insb
lock
push
cld
cmp
xchg
movsb
in
enter
xor
sbb
jo
hlt
add
push
or
dec
insl
sub
xor
mov
push
pop
icebp
cs
sbb
in
xchg
mov
call
ds
dec
adc
sar
pop
setp
dec
jo
outsb
jb
xchg
xchg
pop
mov
xor
adc
outsb
and
nop
jo
push
jl
lock
je
imul
in
jbe
mov
adc
inc
outsb
jmp
aaa
nop
sbb
pop
xlat
xorb
dec
ja
fsubl
stc
fmuls
shl
repnz
push
std
cmp
add
mov
lock
hlt
xchg
pop
movsb
mov
jb
lods
adc
add
xchg
xchg
push
roll
outsb
in
mov
jo
repnz
jmp
xchg
adc
dec
push
cmc
and
notb
cld
mov
pusha
xor
gs
enter
je
popf
add
jo
ljmp
insl
inc
jmp
jl
les
jo
cmpsl
pop
fs
dec
dec
dec
jae
cmc
dec
cmp
in
fwait
mov
das
daa
and
mov
mov
cli
cld
push
dec
ds
aaa
jae
fcom
push
push
mov
into
js
inc
or
call
out
mov
mov
rcrl
xchg
scas
lock
out
rcrb
insl
push
repnz
pop
popa
das
sbb
mov
mov
je
icebp
adc
push
dec
lahf
mov
jb
je
rcrl
enter
sub
xchg
repz
mov
sarl
rolb
jo
dec
pop
outsb
sahf
xor
int
out
jo
push
adc
jo
mov
data16
int3
aas
dec
jae
jb
arpl
jae
mov
pop
or
cwtl
out
icebp
jo
cmp
or
jg
ficompl
xlat
hlt
lock
aam
in
ja
ja
inc
sub
cmp
pop
pop
and
popa
int
sahf
xor
dec
sub
xchg
test
clc
jo
push
adc
ret
aad
jae
sub
xchg
cmpsl
lret
mov
inc
fsub
inc
xchg
pop
repz
lret
jo
jg
or
das
mull
and
jae
mov
dec
std
and
neg
mov
js
xor
lock
in
repz
xlat
int
into
mov
fcomps
dec
out
mov
stos
negl
popf
arpl
jmp
jae
dec
mov
sbb
jo
jl
fnsave
add
pop
jp
inc
sar
jo
push
push
sbb
xchg
jl
loop
sbbl
icebp
int
pop
mov
pop
stc
mov
in
xchg
lock
aaa
and
mov
jecxz
xchg
lea
call
rcrb
insb
lea
mov
in
mov
jo
xchg
lods
jmp
fs
ds
cmp
jmp
dec
xor
jo
fbstp
test
jo
sbb
mov
push
in
out
adc
insl
mov
mov
mov
mov
mov
test
jo
out
pushf
sbb
insb
into
or
add
jo
loopne
fwait
push
sbb
xorl
sub
push
les
outsl
push
inc
xor
pop
cmp
mov
icebp
push
loopne
sarb
ljmp
or
out
std
mov
mov
inc
inc
mov
fdivp
stos
rcr
mov
jg
mov
jo
jecxz
cmp
push
divb
pushf
cmpsb
aaa
mov
or
xor
jo
icebp
movsb
out
xor
testl
mov
inc
inc
inc
test
gs
jo
pop
in
push
sti
mov
add
mov
aas
push
into
scas
js
jo
mov
jb
jo
sbb
inc
xor
lods
out
xor
iret
insl
sub
sar
pop
push
and
jo
into
cmp
adc
ret
jnp
out
iret
jo
lret
pop
adcb
mov
aaa
outsb
mov
clc
cmp
jae
jge
or
jnp
nop
cwtl
add
mov
in
lods
mov
lret
lahf
daa
das
clc
jo
cmp
hlt
cmp
or
mov
push
movsb
inc
jp
push
fsts
shlb
insl
fwait
mov
adc
loopne
jo
int3
push
pop
jo
mov
and
je
fisttpl
test
jo
push
sbb
mov
push
outsb
or
jo
dec
dec
adc
and
add
pop
jg
pop
call
repz
nop
into
or
int3
inc
dec
test
ljmp
out
cmp
fidivl
loope
add
xor
xlat
dec
jo
insl
ss
dec
xchg
xor
imul
inc
xchg
mov
pop
fisttpll
inc
jo
enter
popf
push
sarl
mov
cltd
push
cmc
cmpsb
jo
and
inc
jl
imul
int3
daa
mov
movsl
dec
jo
shrb
sub
movsb
ficoml
xchg
nop
scas
inc
pop
jo
push
clc
ret
xchg
add
mov
sub
addr16
pop
dec
jo
andb
pop
addl
mov
or
and
and
icebp
jle
jo
sub
sbb
xchg
cmc
jo
cmp
mov
or
and
out
mov
arpl
out
leave
arpl
lcall
mov
je
pusha
je
sarb
cmp
insl
and
sbb
movsl
fcomps
mov
push
in
jl
jmp
cmpsb
mov
loop
pop
repz
jae
jmp
push
shll
aam
popa
repnz
inc
or
lock
and
jo
rcrl
out
dec
into
insb
mov
cmp
ds
xor
fwait
adc
lcall
popl
lcall
hlt
test
ret
jo
testl
ss
mov
inc
jge
aad
and
push
xchg
jecxz
rcll
call
adc
inc
push
js
push
mov
insl
mov
mov
jo
mov
pop
sub
mov
xchg
jo
push
mov
cwtl
xor
cli
pusha
std
mov
mov
je
mov
pusha
outsb
ret
in
jmp
insl
das
and
jo
mov
jae
lods
push
jnp
clc
loop
xchg
mov
dec
lods
sti
clc
push
rcrb
insb
lods
outsb
inc
add
jmp
pushf
in
divb
lods
mov
push
movsb
in
sti
push
js
mov
lea
rcl
or
mov
xor
add
loop
insl
sub
jae
mov
and
adc
xor
js
sub
outsl
xchg
jp
mov
xor
mov
movsb
jecxz
and
aas
cmp
jae
cmpl
pop
int3
jo
popf
push
push
enter
mov
dec
ret
inc
mov
pop
dec
jp
mov
mov
xor
aaa
jo
testl
lds
dec
xchg
pop
lods
cltd
xchg
mov
add
pop
sbb
pusha
jne
jae
xor
inc
pop
loopne
add
mov
pop
loope
push
nop
pushf
mov
outsb
jl
shlb
jae
sub
ret
add
cwtl
dec
sbb
mov
xor
lahf
enter
shlb
je
xchg
sbb
out
imul
and
jecxz
insb
je
mov
das
sbb
pusha
inc
cs
ljmp
fnstcw
push
icebp
outsb
fistps
mov
xchg
imull
jl
lods
push
outsb
push
addb
mov
loop
fisubrl
jl
aas
outsb
mov
ds
aaa
xor
xor
and
add
shll
lods
test
jo
pop
mov
aaa
adc
pop
xor
jp
mov
flds
jnp
mov
jae
bound
jns
and
mov
call
mov
aaa
in
mov
dec
outsb
mov
dec
lret
xor
jae
add
lea
add
outsb
insb
sbb
mov
insl
aad
mov
inc
dec
sbb
movsl
jnp
jns
and
mov
xor
and
jnp
cmp
repnz
push
je
stos
inc
outsb
iret
rcrb
bound
mov
adc
lods
sub
lock
xchg
push
dec
bound
cmp
jp
pop
mov
push
in
insl
adcb
aaa
cmp
std
fsubl
out
fisubl
jne
xchg
mov
push
outsb
daa
dec
jecxz
hlt
cmp
jae
loopne
mov
sbb
iret
dec
js
dec
dec
and
and
jno
test
push
inc
ja
lret
mov
andb
aaa
cld
jnp
imul
mov
insw
push
inc
push
jecxz
test
jo
rclb
das
movsb
ja
mov
ret
mov
jo
and
or
fdivs
or
outsl
addr16
nop
inc
cmpl
inc
pop
mov
test
inc
lret
jo
fs
cmp
movsb
mov
clc
unpcklps
imul
ja
imul
and
mov
inc
add
mov
jae
mov
pop
cwtl
outsb
mov
out
push
jo
popf
sbb
jo
dec
in
aas
imul
outsb
lahf
das
xchg
push
fnstenv
dec
mov
adc
jb
inc
xor
pop
jle
fsubl
repz
sarl
insl
xchg
nop
inc
and
enter
std
pusha
arpl
pop
dec
add
pop
lods
scas
bound
lea
mov
data16
int3
jg
mov
rcr
cmp
inc
mov
dec
int3
or
mov
push
xor
inc
jo
aad
fwait
push
lret
xchg
jecxz
push
icebp
bound
cld
cmp
add
sub
jo
mov
out
in
jo
shrb
bound
mov
ret
pop
mov
sti
xchg
push
mov
dec
jae
mov
mov
lcall
call
insb
jg
ljmp
dec
cmpsl
fldt
xchg
int
outsb
subl
jle
jo
pop
lret
add
mov
mov
push
cltd
and
insb
std
dec
jae
fldenv
sbb
add
jo
xor
popf
or
jp
lcall
nop
mov
or
call
pop
jo
pop
lahf
cmp
cmpsl
je
bound
outsl
pushf
mov
jne
push
xchg
movsl
jo
adcl
rolb
das
movsb
cld
rol
outsb
iret
xor
rcl
daa
pop
imul
and
adc
outsb
dec
pop
shl
mov
scas
aaa
mov
nop
shl
insb
lcall
outsb
mov
inc
lds
sbb
or
dec
in
jle
fwait
test
jg
mov
hlt
xor
ss
jae
pop
lock
popf
dec
outsb
push
add
repnz
jbe
outsl
jnp
ja
les
pushf
lahf
cltd
jo
pop
inc
outsb
cmc
fs
pop
mov
xor
push
ret
mov
add
add
mov
fisubrl
ja
in
int
inc
mov
adc
push
jge
lock
and
enter
nop
lods
sarb
mov
call
mov
insl
jno
stos
push
enter
stos
loop
lahf
push
jo
outsb
cld
jo
or
push
sub
pop
xchg
je
xchg
jo
ret
stos
cltd
inc
js
push
mov
jp
sbb
mov
cmp
mov
push
inc
stos
lock
cltd
sub
rcr
fcmovnu
dec
loop
cli
addr16
xchg
push
out
rorb
outsl
cmpsl
insl
jno
hlt
lock
addr16
mov
push
outsb
sbb
xchg
idivl
ja
jae
dec
dec
pop
or
outsb
mov
cwtl
mov
ret
std
mov
and
xor
outsb
mov
push
cmp
sub
outsb
xor
sbb
mov
fwait
ja
push
mov
dec
push
rolb
push
test
in
insl
clc
stos
jno
jae
jg
mov
imul
mov
pushf
insl
dec
jo
sub
push
js
mov
sar
mov
sub
jo
adc
icebp
add
sti
jo
pop
and
ss
push
dec
sbbl
mov
jl
jbe
push
jle
xchg
jo
inc
insb
cli
fnstsw
jae
int3
or
mov
jns
rorl
aad
mov
mov
dec
negl
pop
jo
test
dec
mov
inc
jo
cs
add
out
sarl
and
fisttpll
push
lock
xor
mov
outsb
cmp
jns
lods
cmc
clc
jne
lret
cmp
and
xchg
je
or
xor
lcall
xor
cmp
push
outsb
fwait
icebp
lock
gs
xor
shl
jecxz
pop
jne
pop
dec
out
sbb
sti
mov
sub
jno
pop
jp
mov
inc
mov
fsubrp
dec
jnp
jno
cmc
add
mov
sub
loopne
cltd
fsubl
je
lea
mov
jo
mov
xor
bound
dec
mov
out
hlt
dec
push
sahf
scas
outsb
cmpl
mov
test
jo
jb
pop
mov
jnp
jmp
sarb
jno
pop
lods
inc
mov
mov
jnp
or
dec
cmc
stos
insb
lock
lods
or
aam
adc
mul
push
inc
jo
repz
jg
stc
xor
xor
mov
test
test
dec
jae
lcall
ljmp
mov
inc
push
push
jo
inc
test
mov
les
sbb
and
or
sbb
mov
ja
or
insb
mov
inc
xor
pop
popf
xlat
mov
dec
leave
test
dec
push
mov
add
push
fnstenv
loopne
jmp
mov
insb
and
cmp
adc
dec
jo
ja
add
push
repz
cmp
jo
mov
jo
out
mov
xchg
inc
jl
stc
scas
data16
xor
popa
sub
pop
cli
fsubl
xchg
push
cmp
push
fcoms
dec
out
dec
inc
add
mov
subl
andb
ljmp
movl
jo
xor
jle
xchg
ret
jne
mov
mov
push
sub
jmp
inc
orl
inc
fmuls
jo
pushw
fbld
xlat
jo
std
inc
cmp
jns
inc
insb
lock
xorl
ja
call
fdivl
and
mov
mov
push
or
call
adc
fucomi
xor
in
adc
sub
or
clc
fnstenv
ljmp
add
mov
sbb
sub
lock
jo
add
arpl
inc
inc
pop
inc
add
mov
pop
js
shl
adc
cltd
add
pusha
jae
loop
and
fisttpll
loope
inc
push
aas
aad
xchg
ljmp
inc
add
sbb
out
cmp
rorb
inc
jp
repnz
cmpsl
das
xor
shr
mov
jo
and
stos
clc
stc
ss
and
jp
jae
shlb
xor
inc
push
add
xlat
in
addb
mov
fwait
loope
xor
push
das
jne
les
jle
xor
mov
gs
sbb
filds
dec
inc
aaa
ja
inc
sub
jo
adc
jb
ds
jae
imul
scas
mov
insl
xchg
sbbl
adc
jo
sbb
aad
xchg
out
fmul
pop
mov
xor
push
pushl
mov
inc
push
or
movsl
in
mov
xor
jnp
or
les
fstpt
ja
xchg
ja
mov
push
dec
push
and
cmpsl
xor
clc
imul
repz
push
or
pop
mov
lods
shr
mov
xchg
cli
add
mov
mov
aas
jmp
sub
add
pop
mov
dec
pop
jo
decb
popa
lea
movnti
jo
roll
dec
outsb
ja
in
mov
or
imul
outsb
add
fs
xchg
sbb
xchg
stc
inc
jo
bound
adc
shl
xchg
xchg
orb
mov
imul
pop
xor
mov
rorl
cmc
jp
mov
repz
arpl
jo
push
sub
int
rcl
lcall
adc
lock
cmc
dec
or
lds
scas
loopne
cmp
or
mov
adc
jo
add
aas
inc
cwtl
push
into
loope
jo
add
jnp
test
lock
and
inc
jo
inc
loope
push
fwait
inc
and
push
dec
dec
jo
sti
xchg
push
pop
jg
mov
cmp
lock
imul
cwtl
xchg
lock
notl
pop
jecxz
pop
cmp
nopl
arpl
push
inc
mov
or
sub
mov
loop
hlt
out
jl
jo
pop
adc
or
inc
mov
jo
scas
sub
insl
into
cwtl
jp
lret
rorb
arpl
jp
bnd
icebp
adc
add
stos
add
iret
mov
ljmp
lods
push
jo
das
sti
xor
test
push
adc
ja
lock
rorl
les
push
push
dec
std
adc
adcb
sub
imul
adc
adc
pop
daa
faddl
popa
jno
mov
or
and
sbb
je
mov
mov
jo
sti
movsb
repnz
stos
jo
fmul
imul
lcall
out
xor
xchg
mov
jp
js
icebp
xor
dec
sbb
sahf
sbb
inc
fdivs
mov
lea
mov
insl
mov
jp
mov
dec
dec
cli
inc
rclb
push
mov
push
xchg
das
adc
mov
pop
rcll
std
cld
push
aam
adc
fs
jg
arpl
add
jge
sar
dec
and
cwtl
mov
pop
sbb
and
xchg
cs
jo
sub
push
sahf
dec
sarb
push
and
mov
dec
cmp
lock
mov
lret
dec
add
sbbb
jle
scas
add
cmp
out
push
jmp
inc
xchg
inc
je
pop
sub
mov
cmp
pop
cmp
lock
bound
nop
push
mov
es
or
stos
lds
mov
std
std
or
mov
mov
jo
xor
addr16
jp
std
dec
std
push
cmp
aad
mov
pop
adc
jl
pop
pop
mov
leave
je
mov
cmc
pusha
push
sti
push
cld
jp
or
jo
mov
xor
in
xchg
fwait
mov
cmp
repnz
js
mov
add
mov
test
sub
xchg
outsb
scas
push
stos
leave
push
jo
lock
inc
push
loope
sub
in
movsl
lea
subb
jno
sbb
sub
fisttps
push
je,pt
xor
xor
loope
pop
or
std
pop
jo
repnz
adc
cwtl
or
mov
ret
scas
mov
repnz
push
test
aas
repz
ja
mov
sbb
shlb
push
jmp
pop
cmc
cli
pop
mov
lods
cmc
shr
lock
lahf
add
std
dec
inc
dec
loopne
dec
xor
je
pop
jne
push
push
fidivs
js
xchg
jns
xchg
xor
lock
data16
jl
lcall
or
xor
push
adc
xchg
jl
pop
stos
test
jo
add
jno
adc
pop
push
rorb
shll
popf
push
xchg
xchg
mov
pushf
in
inc
dec
jp
fwait
mov
dec
mov
mov
inc
insl
xchg
scas
nop
insb
adc
adc
mov
neg
cmovo
outsb
out
nop
jo
jb
pop
push
xchg
ret
jno
jbe
lods
mov
push
and
jae
je
insl
xor
sbb
push
push
dec
dec
xchg
mov
std
jo
jns
call
nop
loopne
xchg
dec
jo
push
xchg
imul
cwtl
adc
clc
xor
push
ds
mov
nop
inc
stos
mov
jo
adc
jno
mov
xchg
test
jmp
mov
jo
push
mov
push
sub
or
sahf
out
lods
dec
push
imul
xchg
lock
jl
stos
stc
pushf
shll
addr16
jae
popa
xor
out
clc
sbb
sub
xor
pushf
add
int
jo
enter
adc
cli
int3
jbe
sub
insb
lods
outsb
and
cmp
and
bnd
sbb
xchg
scas
jbe
lret
adc
outsb
test
xchg
inc
movsb
lock
sbb
out
push
push
clc
inc
je
jo
push
lret
xor
xchg
dec
movb
test
xor
mov
sbb
dec
arpl
pop
push
insb
and
mov
xchg
insl
adc
iret
rcrb
loopne
jo
je
push
mov
daa
movsb
push
xchg
add
mov
adc
insl
nop
add
add
cmp
sub
jae
mov
insb
pop
push
and
das
into
mov
pop
pusha
insl
mov
push
in
fs
out
dec
inc
pop
cltd
pop
jae
shrl
mov
adc
ficoml
cs
jo
add
int
jae
inc
out
nop
outsb
pop
jl
xorb
or
aad
int
jp
popa
push
enter
and
pop
scas
or
aad
ja
cmpsl
out
xchg
adc
ds
jnp
mov
je
jae
lods
dec
adc
repnz
jo,pn
loope
push
jg
xchg
mov
xor
and
pop
arpl
icebp
xor
mov
mov
mov
outsb
xchg
push
sti
sub
stc
cltd
pop
loopne
lret
and
cmp
and
and
jg
ror
pop
pushl
cmp
in
and
adc
dec
jg
jo
inc
ss
enter
pop
inc
mov
insb
add
xor
xor
sarb
adc
icebp
cs
push
jl
push
mov
and
add
mov
cmp
leave
xchg
das
add
dec
or
insl
add
sbb
hlt
outsb
aam
sub
addr16
enter
push
pusha
xor
xor
aam
sub
and
cmp
cmc
inc
loop
adc
fisttps
scas
xchg
push
cmpsl
jg
lret
dec
or
loopne
jmp
test
push
dec
rcl
cli
test
push
outsl
in
scas
pop
pop
stos
jecxz
pusha
sbb
push
je
jb
jbe
pop
subl
xor
mov
cmp
bound
push
jo
insl
insb
jle
bound
adc
loopne
mov
jo
cs
push
lods
test
mov
add
mov
call
jo
adc
push
dec
sub
inc
push
es
xchg
rorb
lock
loopne
jl
ja
adc
stos
outsl
and
mov
cwtl
lcall
nop
test
mov
jne
repnz
arpl
adc
cmpsl
jo
xchg
stos
or
lock
fbstp
xchg
inc
jmp
ja
and
lds
test
sub
lcall
pop
cs
mov
jo
ds
jb
in
cmp
sub
mov
dec
dec
pop
xchg
outsb
ja
mov
jb
flds
pushf
jbe
xchg
ja
pushf
pop
push
mov
xor
fcomi
out
jae
mov
push
or
repz
jp
sahf
mov
pushf
push
shl
dec
fmuls
iret
jo
mov
sub
sub
push
mov
popf
call
into
xor
pusha
push
dec
roll
std
jae
outsb
mov
xor
das
cmp
mov
shl
cmc
xor
lock
cmp
mov
pushf
nop
add
loopne
dec
lret
or
dec
jl
lea
out
and
lcall
insl
test
xor
adc
dec
push
inc
mull
in
nop
cmp
outsb
push
inc
dec
pcmpeqb
inc
pop
out
mov
mov
dec
jo
and
fdivs
aas
mov
lock
shlb
mov
outsb
push
xchg
xchg
pusha
loopne
fwait
loope
cmp
jo
stos
lods
outsl
shrb
pop
cmp
ja
xchg
sti
mov
gs
add
sub
pop
loop
cmp
jae
jnp
das
pop
aas
test
cmp
outsl
mov
sti
and
divl
sbb
adc
cmc
add
push
jo
scas
ja
dec
cmp
clc
pop
je
mov
in
imul
das
outsb
lahf
mov
stos
xchg
sbb
outsb
xchg
std
out
jo
adc
fs
or
into
int3
pusha
dec
and
ja
pop
divb
mov
popa
pushf
pop
int
mov
imul
inc
out
lcall
fs
cltd
test
test
inc
xor
dec
ss
pop
add
jo
xlat
sub
sbb
pop
cs
mov
movsl
outsb
pushf
lods
lds
push
sbbb
cmp
push
mov
mov
jg
sub
mov
and
movsl
and
subl
jb
mov
lock
jo
mov
sub
or
inc
mov
xor
test
addr16
jo
icebp
push
dec
or
add
jle
cmpsb
dec
pop
test
mov
in
and
mull
mov
push
pop
dec
jo
call
mov
sub
jne
nop
sbb
faddp
dec
dec
xchg
std
inc
cmp
outsl
jo
fisttpll
insl
ret
cmp
cwtl
fimuls
adc
pop
lock
cltd
lret
and
outsb
in
cmp
push
jne
mov
jo
xor
push
and
mov
and
hlt
xchg
outsl
ret
add
push
in
pusha
lds
mov
pop
clc
jae
and
cmp
movsb
add
sysret
insb
hlt
xchg
pop
dec
testb
lock
jae
repnz
mov
mov
jo
mov
add
ret
xorl
inc
jo
insb
sbb
and
popf
cld
mulb
xchg
les
push
and
clc
push
push
dec
jo
dec
clc
mov
dec
push
lcall
ljmp
dec
lods
jne
stos
popf
fildll
inc
xor
rcll
dec
pop
or
or
xorb
data16
cmp
cmp
sahf
jo
jnp
fdivrp
jl
adc
rolb
jge
inc
pop
mov
jb
stc
mov
aas
sahf
movsl
cmp
out
jmp
pop
mov
mov
xchg
test
out
loop
xchg
repnz
xchg
outsb
adc
dec
jle
gs
lods
bound
adc
cmpsl
int
popf
pushf
je
and
fiadds
inc
repz
mov
cmp
stos
sub
adc
lcall
dec
pushf
loope
jnp
daa
add
test
sbb
mov
jo
cmp
dec
stos
or
aas
jp
adc
insl
fs
jo
sub
add
dec
ret
pushf
pop
push
sub
cs
jle
sub
mov
jge
adc
loop
popf
nop
std
mov
jo
mov
int3
pop
pop
aam
pop
mov
cmp
jmp
jo
outsl
inc
dec
out
loopne
jo
jae
sbb
cwtl
into
cmp
add
aad
ds
jle
mov
jo
insb
mov
add
adcl
popa
arpl
xor
jo
lret
cmp
ret
mov
leave
shrl
jo
addl
jl
lock
cmp
shlb
mov
pop
pop
jl
das
add
pop
cs
jecxz
sbb
dec
fldl
out
loop
add
cwtl
pop
and
shlb
inc
adc
jno
sbb
mov
xchg
neg
add
or
adcb
fsub
inc
push
clc
jo
jg
movsb
mov
and
mov
jne
mov
enter
shrb
mov
jecxz
psubusw
xchg
pusha
jge
jo
sbb
popf
ds
push
sahf
cmp
sub
dec
shll
xchg
mov
jno
inc
addr16
dec
sbb
mov
sub
hlt
mov
icebp
add
xchg
jmp
ret
cmp
fwait
in
pop
rdmsr
loope
sbb
stc
mov
enter
test
and
scas
out
stc
bnd
mov
ds
inc
ja
inc
mov
lret
dec
xchg
rcrb
pushf
xchg
jne
jo
lret
inc
fistps
stc
pusha
aaa
jp
push
sahf
je
push
inc
sub
jno
lret
inc
lock
pop
lods
jo
fwait
pop
dec
subl
cmpsb
stos
xchg
jo
jmp
fsubs
clc
mov
jo
mov
push
or
and
add
ret
mov
fdivrp
sub
adc
outsl
xor
inc
int
jl
into
pop
frstor
jo
shlb
outsl
shlb
lcall
mov
mov
repz
pusha
or
stos
cmp
jo
popf
mov
and
mov
jns
mov
dec
stc
pop
or
xorb
lods
and
stos
sbb
xchg
mov
daa
enter
jp
lcall
xor
dec
mov
mov
out
jp
mov
nop
dec
cmp
add
dec
xor
test
mov
inc
arpl
xchg
addb
push
pop
mov
imul
out
popa
rclb
fimull
test
ljmp
or
pop
jmp
rorb
out
mov
mov
je
fidivl
icebp
test
jo
sub
jecxz
push
jmp
jmp
pop
cmp
xchg
shrb
fidivl
push
hlt
movsb
dec
sub
aas
ss
jo
lret
jns
clc
sbb
dec
sub
add
clc
jo
xlat
fadds
insl
into
mov
fnstenv
lock
add
pop
stos
xchg
add
lock
jl
movsl
and
nop
test
sub
ret
lock
xor
andl
jo
push
mov
pop
das
inc
xor
sub
nop
add
push
inc
lock
xor
in
add
repz
mov
je
lret
xor
xchg
jne
movsl
and
sbb
outsb
mov
insl
lods
jnp
or
pusha
mov
subb
cs
aad
pop
inc
clc
jecxz
bound
xor
adc
add
hlt
mov
mov
loopne
jecxz
dec
aaa
push
out
inc
inc
push
outsb
pop
loopne
inc
xchg
push
xor
add
std
sub
or
cmp
outsl
stos
adc
ss
mov
pop
popf
mov
into
jo
addr16
shr
out
xor
dec
mov
lds
ja
cmp
pusha
lret
bnd
rcll
lock
insl
mov
leave
mov
test
jl
jo
mov
movsb
push
dec
cmpl
mov
popa
aas
jo
es
push
fmul
lock
lods
lret
mov
add
jo
fs
xor
repz
jge
lock
outsl
and
jle
sqrtps
out
cmc
pop
add
adc
outsb
lea
or
xor
mov
dec
mov
pop
xchg
jge
je
lock
sbb
jo
fstpl
mov
pop
or
jecxz
inc
outsb
sbb
jo
outsb
lods
mov
testb
push
mov
add
outsl
nop
push
cmp
mov
stos
jae
xchg
adc
push
add
jo
fcomip
add
mov
add
test
stos
xorb
mov
pop
xorb
pop
out
sbb
fwait
dec
pushf
rep
loop
or
push
xor
imulb
push
test
aaa
push
fcmovnu
pop
cmp
mov
popf
jo
pop
mov
adc
clc
dec
std
push
addr16
push
imul
inc
insl
outsb
add
push
mov
jge
data16
push
push
xchg
stos
ret
push
push
cli
add
add
or
push
add
or
xchg
pop
outsb
adc
nop
push
insb
mov
fdivl
pop
movsb
cmp
loopne
dec
push
jge
cmp
pop
jae
testb
je
add
xor
mov
and
mov
out
push
lcall
cs
loope
enter
jle
adc
incb
pusha
movd
lods
xor
lock
loope
aam
mov
cltd
jo
push
cmpsl
pop
lcall
fcmovbe
dec
stos
adc
outsb
cltd
mov
pop
test
jo
movsl
enterw
pop
cwtl
mov
std
xchg
and
ret
push
jo
stos
jno
lahf
push
jecxz
arpl
aam
xorl
out
mov
ficompl
dec
gs
lock
in
jge
ljmp
lods
jne
outsb
xor
xorb
jp
in
jo
cmp
int3
add
jo
mov
in
jl
sbb
dec
dec
dec
jae
shrb
mov
cwtl
lock
pop
add
xchg
xor
ret
outsl
ret
fs
cmp
pop
xorl
jl
jns
push
jnp
mov
mov
add
cmp
jl
shrb
fldpi
push
sbb
dec
pop
ja
js
xchg
push
shrb
jmp
clc
cwtl
xor
fdivs
je
jae
add
test
repnz
jmp
mov
lahf
dec
lods
xchg
or
mov
imull
xor
jae
shlb
test
push
jo
dec
mov
jo
pop
and
fs
mov
jp
stos
shlb
lea
mov
jl
dec
push
rcl
movsl
or
xchg
xchg
enter
sbb
lock
clc
movsl
cmp
jno
push
xor
jnp
dec
movsb
inc
cmc
pusha
jo
sub
rcrl
lock
je
cmpsl
fwait
jns
sbb
stos
adc
out
jo
push
xor
xchg
insl
or
push
and
call
daa
sub
xchg
clc
ljmp
ljmp
push
scas
jo
lahf
and
test
stc
mov
mov
jmp
sub
ljmp
dec
dec
mov
call
insl
dec
je
popa
xchg
mov
sub
dec
outsl
clc
outsb
jae
enter
jo
inc
scas
negb
daa
and
adc
jae
add
push
fsubrp
inc
lock
push
pop
mov
outsb
mov
popa
jns
stc
hlt
movsb
aam
je
push
or
rolb
cltd
mov
cmpsl
mov
jge
jo
fwait
sahf
or
add
and
and
jle
jl
jne
aam
icebp
icebp
arpl
sbbb
or
dec
and
cs
dec
pop
dec
cwtl
sub
test
lods
adc
xor
adc
jne
cs
pop
adc
jmp
aaa
xchg
lods
jo
loop
bound
pop
sarb
fwait
sbbl
mov
lret
ret
je
mov
add
iret
mov
inc
dec
and
pop
sbb
pop
push
and
jo
or
add
ds
mov
xchg
icebp
xchg
loopne
insl
or
mov
rep
test
mov
xchg
fildll
mov
addb
js
add
call
popf
repz
imul
dec
pop
mov
cld
loopne
nop
int
cwtl
inc
pop
xchg
lcall
aad
dec
sbb
lods
in
dec
xor
mov
leave
jo
xor
je
iret
and
imul
divl
xor
cmp
and
mov
rcrb
mov
jne
fadds
in
call
push
js
dec
pop
addr16
insl
push
aam
push
mov
pusha
es
notl
jno
xor
aaa
loope
roll
imul
cmp
jo
mov
movsb
insl
popa
lea
push
jo
ret
jb
xchg
add
or
xlat
aad
ja
mov
fistps
push
fmull
popf
mov
in
lock
ja
sti
scas
sbb
pusha
stc
lods
jge
sbb
sub
lock
enter
push
andb
mov
es
jge
repz
jo
call
and
jo
lret
or
rol
ja
xor
adc
imul
out
cmove
push
outsb
or
sbb
jp
adc
dec
rolb
and
movsb
mov
mov
push
add
dec
mov
mov
xchg
sbb
stos
jo
call
dec
mov
outsl
outsb
mov
or
xchg
mov
mov
shrb
add
fistpl
mov
pop
clc
xchg
jae
xchg
sti
std
and
js
jo
xchg
and
mov
lret
clc
nop
mov
inc
xor
outsb
pop
int
mov
out
dec
fwait
jno
mov
fs
push
dec
push
into
clc
mov
scas
push
sbb
cmc
jo
mov
lds
xchg
mov
test
lret
nop
jo
xchg
decb
pop
jo
in
cmp
inc
push
jae
frstor
orb
and
hlt
inc
or
jo
outsl
imul
test
pusha
test
icebp
mov
insl
add
divl
ljmp
sti
rcll
data16
add
imul
js
rorl
cwtl
jo
cmc
push
out
pop
push
adc
jo
cs
jbe
and
mov
xchg
mov
sub
in
std
rolb
in
in
das
dec
jo
and
and
scas
dec
mov
mov
insb
sti
clc
popf
jo
and
push
sbb
roll
insl
loopne
xchg
mov
adc
out
stos
cmp
aad
sbb
jns
sbb
dec
xor
add
test
xchg
ljmp
cmpps
jo
pop
xor
fsubs
xor
addb
mov
sbb
pop
lock
cs
ljmp
lret
in
xchg
lock
les
sub
lret
xchg
adc
push
nop
and
add
cmc
jo
fwait
outsb
mov
dec
pop
pop
stos
xchg
push
insl
insl
dec
pop
sbb
inc
pusha
aad
inc
sbb
xchg
xchg
mov
jno
lcall
popf
int
or
adc
insb
dec
adc
xchg
mov
xchg
xor
lods
inc
adcb
mov
lcall
std
pop
xchg
mov
dec
jo
into
xor
lea
insb
adc
or
add
ja
jo
lcall
push
inc
cld
mov
test
xorb
mov
imul
jo
or
outsb
fsub
inc
cmc
jo
pop
lahf
pop
mov
jno
pop
adc
cmp
jo
mov
int
movsl
es
dec
push
sbb
aas
lcall
imul
jo
outsb
fstps
and
ss
jo
sub
and
xor
ja
call
and
insl
and
jmp
rcl
sub
or
hlt
mov
fsubrs
pop
xchg
push
pop
xchg
into
iret
shll
or
mov
shrb
dec
js
jo
push
cmc
jns
insl
je
and
jg
loope
mov
outsb
shll
jns
int3
lock
push
icebp
roll
or
outsl
pushf
in
arpl
inc
mov
sarl
inc
fsubs
lcall
cmpsl
int
dec
jo
daa
jne
push
lods
push
insb
jo
mov
inc
out
jo
pop
or
jo
adc
adc
ja
jo
jmp
dec
push
cmp
sub
es
loop
cmc
mov
lret
std
faddp
lcall
adc
add
int3
lods
jbe,pt
orl
insb
pop
jo
sub
and
xchg
fnstenv
xor
mov
jno
inc
xchg
stc
jo
jne
push
in
cli
inc
and
shlb
jmp
ss
inc
out
out
out
rcrb
and
xchg
cs
popf
out
pushf
or
cmp
push
or
pop
hlt
or
dec
mov
sub
mov
lock
mov
clc
jle
pop
pop
std
mov
jnp
je
mov
loop
sbb
fs
jg
xchg
adc
inc
mov
stos
pushf
or
call
push
shll
je
inc
test
std
clc
jo
les
fdivl
cmp
jno
push
sub
push
dec
adc
pop
data16
jne
cs
inc
adc
adcb
xchg
jg
jo
scas
adc
and
sub
jo
mov
outsl
ja
mov
stc
push
in
inc
add
mov
int3
jo
pop
add
or
ds
das
test
or
out
enter
jg
cmp
jae
arpl
add
add
mov
add
ret
add
add
clc
inc
test
sbb
mov
jb
insl
dec
lods
pop
mov
mov
sar
lret
insb
stos
cmpsb
cmpsl
aaa
pop
or
pop
xchg
shr
lds
add
mov
sbb
mov
push
or
int3
mov
inc
or
pop
dec
mov
es
flds
repz
outsb
mov
outsb
stc
xor
js
pop
jo
push
mov
stos
je
cmc
lods
cwtl
jne
jp
push
xchg
push
in
nop
insb
inc
add
mov
addr16
out
call
mov
outsb
aas
mov
arpl
pop
shlb
pop
lock
test
adc
cwtl
gs
cmp
addb
add
push
in
shll
ljmp
rcr
mov
adc
pop
or
push
outsb
sub
cmc
andb
mov
nop
inc
jl
sbb
cmp
xlat
add
arpl
push
insl
emms
movsb
adc
sbb
or
jl
add
aaa
sub
sahf
pushl
insl
jl
repz
cmpsl
mov
cwtl
push
aam
outsb
pusha
pop
jo
jb
clc
mov
cmp
rorb
dec
xchg
lcall
jo
push
cmp
and
mov
int
xchg
mov
outsb
iret
xor
scas
dec
cwtl
jmp
mov
jp
push
push
dec
clc
jno,pn
mov
jp
inc
pop
mov
adc
inc
loopne
jp
push
repz
pop
dec
test
or
jo
cli
int
mov
mov
jnp
mov
sbb
and
and
xchg
sub
mov
scas
adc
pop
subl
and
dec
jns
lahf
ds
dec
cs
push
inc
cld
jo
mov
push
cltd
stos
lock
mov
pop
pop
cmp
rolb
jmp
lock
stc
mov
leave
jno
call
mov
jmp
inc
inc
fmuls
or
ds
add
in
jo
loopne
aam
cmp
jo
lea
pop
imull
jle
jno
hlt
sbb
imul
ss
mov
mov
sub
dec
cmp
enter
popa
jo
xor
icebp
outsb
insl
das
push
into
out
mov
mov
mov
inc
sti
push
and
outsb
dec
xchg
mov
pop
push
out
adc
lock
mov
inc
hlt
mov
mov
jae
sub
mov
pop
les
or
in
aaa
ja
pushf
bnd
arpl
xchg
jnp
push
pop
mov
lock
add
mov
std
push
jp
testl
lock
cmpsl
insl
shlb
and
mov
dec
add
sub
insl
and
dec
ja
and
sahf
repz
stc
aad
lea
loop
cmp
ljmp
mov
dec
pop
jne
idivl
jo
push
inc
loope
test
out
or
insl
cmp
mov
xor
aaa
out
outsb
mov
mov
daa
mov
pop
ss
xor
adc
xchg
jp
sti
loop
mov
dec
mov
outsb
sub
shrb
fsin
je
fs
fndisi(8087
jnp
jo
lret
or
jae
mov
jo
sbb
jo
rorl
imul
and
shlb
mov
dec
aad
jo
cltd
aam
gs
jg
pop
add
loope
rol
jo
xor
add
mov
scas
xor
ja
jo
push
pop
std
inc
jne
mov
sub
in
stc
jp
push
cmp
or
imul
push
jo
xchg
mov
xor
jae
mov
leave
jmp
enter
jae
xchg
mov
out
mov
es
jo
jne
sbb
lea
insl
test
sub
cwtl
in
jo
and
jg
dec
push
push
rcrl
cmp
adcl
jo
or
fwait
cmpsl
in
push
mov
das
adc
adc
loope
shlb
inc
dec
fcompp
testl
pop
adc
jle
inc
dec
sub
fldl
in
and
repnz
mov
ja
adc
orb
cmp
inc
jo
out
arpl
lock
pop
js
addr16
xor
mov
stos
fnsave
mov
xor
adc
xor
xchg
cmp
insl
xor
mov
lock
or
cmp
arpl
jg
push
insl
int
in
jae
pushf
xchg
sub
xchg
arpl
inc
adc
clc
daa
inc
jmp
or
mov
sbb
mov
inc
outsb
enter
cld
or
fidivrs
jae
mov
inc
andb
adc
sti
outsb
pop
shll
pop
add
mov
das
inc
loopne
cmc
pushf
shll
cmp
adc
outsb
xchg
mov
fisttpll
pop
incb
and
sub
mov
sub
fstpl
call
push
push
sar
movl
xor
sub
push
pusha
jp
iret
in
push
and
addb
adc
call
jb
push
leave
ds
clc
sbb
lret
pop
push
sbb
xchg
xor
xchg
dec
add
out
mov
push
mov
imul
adc
mov
cli
or
outsb
cmp
pop
insl
movsl
outsb
scas
xor
insb
pop
cmpl
fcoms
pop
dec
daa
mov
mov
repnz
xor
dec
aas
inc
rolb
lock
mov
ss
jo
gs
mov
cmp
cli
notb
cmp
xchg
popa
jo
ljmp
jo
xor
scas
setl
addl
outsb
xchg
clc
jo
sbb
fbstp
cmp
xlat
and
jo
mov
jl
daa
jo
mov
out
inc
adc
aas
fists
or
mov
outsb
mov
adcb
sub
divb
ljmp
xor
in
leave
mov
daa
cmp
dec
addl
pop
mov
pop
fstl
and
insl
lock
je
push
inc
dec
mov
pushf
in
outsb
test
or
lahf
dec
mov
sar
outsb
in
lcall
outsl
test
lret
mov
rcrb
jge
fwait
jo
scas
insl
das
inc
fdiv
dec
call
fs
mov
jo
push
fdivs
int
pop
adc
jo
add
mov
arpl
xchg
add
lahf
jl
dec
add
or
mov
jb
sub
add
imul
or
out
orl
popl
mov
jo
je
or
cmp
lods
call
xorl
jne
dec
lock
enter
dec
push
rorb
xor
or
xchg
mov
mov
mov
dec
repz
rclb
cmc
das
and
js
subl
pop
jae
cld
ret
fadd
dec
call
fmuls
lods
cmp
ja
push
sti
or
insl
pop
xchg
sub
mov
dec
enter
mov
add
outsb
mov
ret
fwait
xor
xchg
mov
push
xchg
test
cmpsl
mov
aaa
test
mov
jo
cmpb
insl
xchg
loopne
in
mov
inc
clc
jne
je
fwait
jo
xor
jb
pop
push
sub
out
mul
mov
pusha
and
pop
mov
xchg
jg
cwtl
ret
imul
ljmp
dec
mov
popf
insl
mov
and
mov
inc
jo
shll
jmp
xchg
ret
xlat
fdivrl
fldcw
dec
pop
mov
movb
sub
push
xchg
aad
mov
dec
xor
jo
outsl
dec
xor
movsl
cltd
insb
xorb
cmp
inc
push
jo
or
in
xorl
inc
mov
jo
sahf
fdivs
mov
jp
outsl
jmp
rcll
test
fs
cld
sbb
test
inc
adc
jae
add
fdivs
enter
jae
mov
mov
jle
add
das
cli
test
xchg
pop
xorb
ja
xor
dec
or
jg
sub
jo
lods
pop
ja
out
inc
add
xchg
sbb
data16
sub
clc
fwait
into
dec
jo
cmp
sbb
push
ret
jmp
sub
sbb
arpl
xchg
or
add
loop
rcll
adc
dec
jo
mov
cmp
jo
cld
mov
in
or
and
or
pop
out
sub
lods
jno
jmp
lods
dec
je
lods
shrl
clc
mov
add
cmpsl
ja
pop
sub
test
nop
xchg
leave
scas
push
push
call
outsl
inc
pop
xchg
adc
adc
imul
sub
mov
jo
add
mov
cs
ja
je
add
mov
mov
xchg
aaa
fidivrl
fstpl
in
sbb
int
add
push
aaa
jo
loop
inc
xchg
inc
imul
pop
pop
mov
mov
xchg
mov
movsb
inc
hlt
jo
dec
pop
in
mov
stos
ja
lcall
mov
dec
lahf
add
mov
xchg
jp
dec
rclb
fisttps
out
insl
inc
das
fldcw
dec
jo
push
nop
inc
fcomi
hlt
out
cli
jno
cmp
xlat
addr16
adc
push
pusha
lahf
pop
imulb
xlat
test
mov
pushf
out
lea
mov
xor
push
adc
insl
loop
dec
inc
stos
insb
cmpsb
inc
cmp
dec
add
pop
or
lods
jo
sub
pop
lds
fsubrs
loop
cwtl
adc
jb
imul
outsl
ja
je
mov
mov
cmp
rolb
outsb
jg
or
jae
and
push
cmpsb
jo
daa
adc
popfw
or
mov
lods
mov
dec
jp
xchg
mov
xchg
std
hlt
and
jae
movsl
xchg
jp
lea
dec
std
mov
and
call
jo
sub
iret
gs
ja
xor
push
enter
scas
push
lcall
push
or
call
xlat
into
adc
xor
add
mov
pusha
mov
movsb
xchg
push
xchg
push
jo
in
mulb
inc
loop
mov
mov
cmp
test
sbb
and
lods
sub
and
and
push
jo
inc
mov
dec
jb
sub
jae
and
xchg
push
ficomps
cmp
dec
sbb
outsb
jo
rcrl
mov
push
jns
mov
xchg
jo
cmp
div
in
fcompl
jo
ljmp
mov
jo
pop
fidivrl
sar
jo
sbb
or
add
cmp
dec
dec
xchg
lock
push
pushf
cmc
xor
daa
jo
dec
xorb
xor
jo
popa
lret
loope
sahf
jo
lahf
shl
lods
aaa
push
pop
inc
fsubp
sbb
sub
cmp
pop
pop
popf
enter
jo
lret
mov
or
cmp
into
aaa
repz
mov
mov
push
mov
and
sahf
addr16
sub
lahf
icebp
or
mov
iret
adcb
jns
mov
and
sahf
cmpsl
mov
xchg
iret
or
push
outsb
aaa
mov
adc
dec
jo
cmp
cmp
movsb
jl
jo
push
imull
push
dec
jo
sub
push
call
inc
ss
mov
add
shll
lods
imul
push
pop
or
fildl
and
mov
mov
cli
pop
incb
fistps
icebp
mov
xchg
jo
and
enter
daa
jo
ljmp
jo
and
les
and
or
daa
push
cmpsl
pop
push
sub
xorl
cmp
or
pop
mov
in
dec
orb
jl
xor
repz
or
test
bound
inc
pop
sbb
dec
arpl
faddl
nop
mov
jo
dec
lds
push
pop
cmp
pop
into
imul
jmp
jb
fcoms
add
dec
ss
test
test
pushf
mov
cmpsb
adc
push
or
and
and
adc
pop
popa
mov
jo
cmp
inc
shrl
imul
out
mov
std
pop
push
lock
fsubp
icebp
jo
shrb
fmull
fbstp
fstps
imul
test
and
pop
and
ja
cmpsb
push
mov
mov
xchg
sar
dec
sub
cmpsl
jecxz
icebp
xor
adc
jo
fsubrp
sarl
xor
and
pop
jno
jo
nop
movsb
mov
jo
mov
in
jae
xchg
test
aad
incb
mov
or
stc
jge
cmp
movsb
imul
jne
clc
xor
icebp
xchg
cmp
mov
mov
jmp
mov
in
decl
mov
mov
mov
jae
pop
mov
nop
shrb
and
add
shl
enter
sbb
jge
loope
fldt
addr16
pop
mov
cmc
push
mov
adc
dec
sbb
test
xor
xor
jp
lret
jge
lods
push
insl
mov
pop
xchg
sti
lcall
xchg
mov
test
adc
dec
cmc
xor
pop
repz
jo
jbe
fwait
in
jo
fdivs
ret
jo
fldcw
pop
add
pop
cmp
ficomps
in
xor
bound
je
enter
cmp
and
pop
dec
shrb
mov
out
dec
cmc
pop
lock
adc
movsb
jp
rclb
add
sbb
adc
sbb
cltd
push
shlb
and
cmp
jmp
add
cmp
ss
unpckhps
clc
xor
dec
add
push
mov
cmpsb
add
jmp
lods
outsl
jae
filds
lahf
pop
mov
jo
mov
aas
lods
bound
mov
cmp
pushf
std
jg
iret
pusha
jbe
xchg
lods
sbb
pop
cmc
xchg
out
or
xchg
enter
add
mov
imul
jno
outsb
cld
cs
lock
mov
bound
mov
jo
xchg
jge
xchg
lock
fnstsw
sbb
mov
aad
push
std
pushf
dec
add
adc
fisttpl
jns
mov
inc
xor
xor
jo
mov
xor
js
in
and
aam
int
jae
cmp
push
lds
adc
addl
fcmovb
popf
sbb
xor
shll
push
xchg
mov
arpl
repz
dec
mov
lret
jnp
subl
sbb
lods
outsb
push
arpl
and
jle
lock
adcl
testl
aam
jmp
in
outsl
push
dec
lret
ja
xor
hlt
dec
add
ja
addl
jae
mov
rclb
repnz
jle
jo
ds
mov
jecxz
jae
int
cli
xchg
mov
dec
inc
cwtl
sub
xchg
ja
mull
and
or
inc
ja
sti
scas
cld
inc
insl
cmpsb
or
lock
filds
pop
jnp
adc
fisttpll
jo
pop
jl
aam
dec
push
loop
mul
outsb
lock
js
insb
sub
dec
jo
je
xchg
jnp
xchg
insb
pop
aas
cmpsb
inc
nop
lock
test
jo
insl
inc
xchg
sahf
mov
jo
in
mov
das
mov
pop
jp
fs
xor
add
mov
cmc
inc
imul
fwait
xor
xchg
mov
jnp
cs
adc
outsb
jecxz
insb
or
shlb
xchg
add
movsb
xchg
add
mov
insl
lods
nop
aam
out
dec
std
aaa
fcomip
push
out
mov
mov
adc
dec
mov
fwait
enter
jnp
ja
lea
pop
inc
dec
fldt
and
clc
stos
push
cmpsl
mov
sub
adc
add
sbb
mov
fnsave
mov
mov
dec
mov
cwtl
push
std
add
sub
mov
pop
out
sbb
sub
mov
ja
je
sbbb
stos
in
cli
lret
pushf
dec
dec
jbe
popa
fs
shll
cmp
pushf
outsb
sbb
sbb
lock
out
mov
cmc
cmp
andb
call
mov
clc
je
inc
sub
dec
cwtl
in
push
push
adc
xchg
gs
mov
stos
mov
test
test
outsl
jmp
dec
mov
mov
sub
popf
push
mov
cmc
mov
test
xor
pop
rep
insl
js
jg
in
mov
jno
jae
lds
mov
sbb
sbb
push
push
xchg
decl
mov
add
outsb
inc
loopne
add
insl
push
out
into
enter
pusha
or
sti
ja
pusha
mov
fldenv
jmp
int3
inc
pop
push
jae
fisttpl
cs
sub
pushl
xor
cltd
lock
scas
push
iret
rcl
ja
push
sub
push
jo
mov
push
jo
mov
hlt
mov
add
and
mov
ja
cmovle
add
adc
movsl
lcall
aaa
loopne
xchg
mov
test
pop
loope
adc
in
ret
loop
dec
push
xor
das
into
or
jo
push
xchg
and
imul
insb
sahf
cmp
lret
out
or
insb
mov
insb
arpl
xor
test
lds
sahf
outsb
jo
jbe
ret
lea
fcomp
jl
jnp
out
jo
mov
test
or
insl
notl
and
push
xchg
mov
push
scas
xor
inc
popa
mov
mov
mov
sbb
insl
lret
jae
mov
inc
push
jae
stc
sub
xor
into
in
and
jae
shrb
lock
outsb
lock
ret
lock
and
aaa
insl
add
mov
fmuls
dec
push
inc
test
jb
imul
jno
inc
mov
or
ljmp
jo
push
sbb
push
sbb
ja
cmp
and
sub
cmc
dec
cmp
out
or
pop
cmp
xor
mov
mov
jo
mov
sub
dec
mov
jo
js
xor
loop
test
xchg
leave
or
in
mov
test
pusha
sbb
fs
in
inc
lret
and
pop
xchg
cmovs
fimuls
dec
dec
lock
aas
movsl
sbb
ret
sub
jne
and
sbbl
lcall
mov
jno
sbb
arpl
add
mov
jnp
pop
jne
insl
fsubrs
push
jo
jecxz
jae
sub
std
bound
mov
test
fadd
sti
loop
cmp
or
mov
stos
jo
sbb
mov
addr16
bound
das
mov
jae
fdivs
mov
xlat
insl
cmp
adcl
jne
rep
jo
cli
push
jecxz
mov
inc
js
mov
jae
xor
adc
adc
popf
in
jg
sbbl
sbb
aam
std
je
bound
cmp
jge
fcomi
hlt
ds
dec
pop
mov
adc
add
cld
insb
stos
ret
push
iret
and
xor
lods
movb
mov
and
xor
mov
lahf
sar
jecxz
jns
ret
or
lods
or
pop
in
jo
pop
xor
pop
ja
ret
stos
xor
jb
mov
sbbl
lods
inc
es
pop
movsl
rorb
cmp
daa
push
mov
outsb
test
aas
inc
mov
jne
addr16
je
es
cwtl
xchg
insl
xchg
pop
lahf
nop
and
jno
sti
mov
lock
push
jle
jo
nop
or
gs
shrl
pop
dec
aas
cs
mov
scas
imul
insl
fs
inc
xchg
add
dec
cltd
fcomip
push
into
outsl
xchg
and
add
xor
test
dec
negl
cmp
orl
and
dec
xchg
xor
out
lahf
sbb
std
loopne
jo
adc
lcall
je
jae
and
xor
jo
ret
sbb
push
outsb
pop
mov
mov
cltd
je
jecxz
adc
shrb
sub
or
int
lods
bnd
sub
fbstp
testl
jo
mov
mov
popa
add
cli
dec
xor
sbb
adc
divl
cltd
add
xchg
int3
dec
dec
mov
and
daa
sub
loop
push
dec
arpl
cmpsb
xchg
push
mov
jo
stos
aaa
inc
mov
or
xchg
adc
jo
jb
lock
xor
ja
cmp
xor
jo
xor
leave
sub
out
jae
pusha
scas
jmp
mov
mov
sub
mov
nop
fnsave
cwtl
xor
jb
jg
insb
add
xlat
jae
js
ret
mov
es
pop
sbb
lods
cmp
mov
pop
mov
or
aaa
push
jo
ljmp
inc
inc
xchg
lock
fwait
and
outsb
inc
test
inc
dec
mov
pop
jnp
cld
pop
pop
mulb
iret
rclb
pop
imull
jmp
xor
push
jo
xor
add
dec
out
jo
mov
add
xchg
mov
int
test
sbb
jp
or
pop
daa
das
xor
aad
lahf
sub
aaa
push
dec
cmc
pop
inc
lods
das
sbb
das
dec
sub
xor
rclb
mov
add
jle
pushf
les
xchg
int
mov
shll
jo
fstl
outsb
jp
bnd
add
inc
mov
js
out
mov
insl
jge
and
arpl
stos
mov
dec
jle
cmp
jno
pop
ljmp
divb
in
ds
jb
or
cli
dec
jo
and
jo
push
out
add
insl
jae
in
in
gs
pop
sarl
adc
fs
notb
add
jo
jno
shll
ret
cmp
cmp
popa
pop
mov
lock
xorb
jl
sarl
jo
add
or
fimuls
jo
rolb
insl
lods
pop
push
sarw
adc
in
fs
xchg
cld
enter
jo
aam
stos
mov
cli
adc
shlb
dec
adc
lock
je
das
jne,pn
jo
cltd
or
jo
and
sbb
lock
test
push
pop
in
loopne
loopne
jo
and
cld
mov
cltd
adc
addl
out
adc
inc
lea
push
xlat
push
jb
enter
jmp
ss
outsb
cld
mov
mov
insb
jo
jecxz
inc
fimull
cmp
mov
xchg
cwtl
test
sbb
cmp
xchg
add
or
mov
jg
pop
add
insb
mov
and
jo
data16
in
and
shlb
mov
fisubrs
xchg
cmp
mov
ja
jb
imul
lock
inc
adc
scas
push
sub
push
mov
xor
hlt
shlb
stos
jo
jl
dec
mov
inc
dec
imul
gs
in
mov
adc
sahf
cmp
cs
aaa
jmp
lea
js
jo
addb
int3
mov
sbb
or
dec
jo
imul
inc
mov
outsb
decl
jno
movsl
pop
add
jmp
dec
mov
insl
cltd
dec
mov
cwtl
inc
or
pop
or
jae
jnp
jge
stos
clc
addb
pop
mov
jp
arpl
aaa
es
movsb
sahf
cmp
or
cld
jo
out
cmp
daa
pusha
mov
lahf
or
ja
rcr
insl
popa
jnp
in
and
stc
jo
xorl
aam
cmp
jo
inc
popf
les
outsl
pop
shll
cmp
inc
and
xor
or
dec
cmp
out
push
mov
dec
test
mov
lock
fsubp
or
leave
add
arpl
xchg
subb
scas
inc
add
gs
ljmp
mov
jno
daa
fidivrl
and
or
pop
push
fmul
jns
movsb
jle
outsb
mov
ja
mov
enter
out
mov
mov
shr
rorl
into
cmpsl
mov
xlat
sub
dec
jno
push
leave
enter
nop
sub
mov
test
pop
test
shlb
outsb
pushf
adc
outsb
push
sub
js
jne
sti
xor
pop
mov
push
or
dec
jl
mov
fwait
sub
es
push
sub
and
mov
lods
shrl
ja
ljmp
jae
adc
jnp
pop
dec
inc
addb
sbb
in
inc
jmp
push
lock
add
mov
pop
jo
lock
test
fisubrl
fistpl
stos
int3
add
sti
mov
addr16
nop
jecxz
addb
pop
jae
nop
xchg
mov
dec
mov
sub
pop
cmp
mov
cmpsb
mov
popa
adc
sub
jb
mov
cmp
ret
mov
jle
test
outsb
jbe
xchg
je
mov
loop
xor
dec
iret
test
pop
push
loopne
out
mov
fsubl
add
enter
std
mov
sub
cmp
pop
jns
add
jo
add
and
inc
and
mov
jo
shl
adcb
ja
cmc
lret
sub
pop
cmpsb
cmp
sub
add
push
shlb
push
xlat
jo
sbb
jne
cli
xor
xchg
lret
push
imul
outsl
mov
clc
or
jo
je
into
int3
jae
or
es
jecxz
sbb
je
iret
aaa
insl
lahf
pop
lods
decb
mov
fsts
divb
and
inc
mov
xor
jo
in
add
jl
and
mov
xchg
xchg
or
dec
xchg
ds
sub
push
std
adc
and
inc
int
cltd
push
lock
out
xchg
std
adc
jo
dec
ss
jp
jecxz
xchg
push
js
pop
ja
sahf
enter
subb
js
cmp
imul
aaa
dec
call
jnp
push
sub
loopne
outsb
insl
dec
add
push
mov
jnp
nop
mov
sub
fisubrs
push
add
and
jo
xchg
out
jb
and
jmp
sbb
inc
mov
outsb
testb
mov
dec
mov
iret
xor
dec
ss
pushf
push
jo
ret
xlat
cmc
pusha
push
pop
mov
push
movsb
pop
inc
and
outsb
push
sub
nop
jmp
xchg
or
dec
shll
jbe
mov
mov
sbb
jnp
lock
subb
push
adcl
outsb
std
cwtl
push
xchg
jo
and
adc
lock
fdivl
push
ret
pusha
lock
stos
ja,pn
stos
ss
and
mov
mov
loopne
repnz
fcompl
add
add
mov
loopne
lock
insl
fdivl
ja
in
clc
sarl
jp
in
mov
shlb
movsl
loopne
repnz
and
fldl
jge
pusha
cmp
push
jl
rorb
lahf
push
movsl
or
jo
push
inc
shr
cmp
pop
popa
sbb
stc
test
add
mov
jo
mov
xor
fistpl
cmpsl
lock
lret
sub
mov
push
orb
ja
xor
repnz
inc
stos
inc
inc
xchg
xor
jo
cmp
lret
cmpsb
jmp
test
pextrw
outsb
jo
dec
push
sbb
leave
adc
out
jo
lret
mov
fadds
xchg
into
jo
mov
inc
push
push
mov
sub
lock
ret
dec
fcmovbe
ljmp
inc
hlt
lock
xchg
mov
xchg
adc
xor
mov
mov
pop
pusha
dec
mov
push
loopne
pop
mov
into
aas
cmp
nop
jg
pop
movsb
jl
inc
outsb
pop
push
iret
adc
adc
bound
std
or
cmp
push
sahf
mov
jo
jp
add
or
jo
add
int3
mov
ret
repz
jo
ret
sub
push
jo
jb
or
pop
dec
jge
out
lret
jo
inc
mov
pop
pop
lcall
sub
pop
mov
jo
xor
sarb
sub
mov
adc
lds
mov
pop
insb
xor
and
push
jae
pusha
ljmp
sub
inc
jo
pop
stos
adc
add
pop
loopne
add
int3
dec
push
sahf
push
jae
das
loopne
or
addr16
stos
inc
pushf
pop
xchg
out
lock
out
clc
sahf
adc
outsb
call
jl
xor
or
shlb
int3
testb
lock
dec
addr16
xorb
les
rclb
sub
adc
insb
or
mov
mov
imul
xchg
dec
mov
pushf
mov
xor
leave
repz
lods
ret
stc
cmovae
cs
xchg
add
mov
lea
or
bound
pop
nop
dec
or
cltd
or
ljmp
ja
jmp
mov
adc
lret
in
jae
mov
sarb
adc
pop
loope
fnstenv
xor
out
call
ss
out
ja
mov
sub
xor
outsb
fldenv
data16
loop
push
inc
call
lret
ljmp
xchg
push
jo
divb
pop
sub
int3
inc
push
jg
sub
add
insl
sub
out
ljmp
jecxz
ss
lret
inc
xlat
mov
mov
pop
movl
sbb
nop
mov
or
add
jmp
cmp
mov
ja
sbb
pop
inc
mov
jo
add
test
sahf
xchg
pop
pop
lock
out
int
data16
pop
xor
jo
std
dec
cltd
add
xchg
xchg
push
lods
jecxz
mov
xchg
imull
jns
aas
jae
fcomip
hlt
cmc
xor
add
insb
cs
cltd
jo
jns
and
call
or
insl
xor
inc
dec
mov
jecxz
jo
push
push
test
lret
sub
outsb
jo
xchg
add
jmp
pop
inc
jp
insl
or
jo
fldcw
or
and
jo
jge
fidivs
mov
add
inc
pop
insb
or
cmp
cmp
test
sub
jo
cld
xchg
imul
sar
push
cvtps2pi
lods
pop
cmp
pusha
mov
call
xchg
jbe
pop
insl
xor
mov
jp
mov
leave
ret
pop
inc
clc
and
movsl
cltd
mov
or
mov
mov
aas
jl
adc
sub
shlb
jge
insl
lea
aas
mov
je
sub
inc
push
xchg
ja
pop
add
insl
pop
int
jno
mov
ja
sub
rorl
mov
dec
loopne
fldcw
mov
lock
lock
jecxz
dec
insb
push
icebp
add
xchg
in
ror
test
lret
nop
xor
adc
lds
xchg
jp
cmp
inc
mov
insl
imul
xor
jo
xchg
add
aaa
xor
punpckhdq
shll
cmp
cltd
xchg
inc
push
popf
xorl
jo
mov
in
rclb
movsl
ja
lock
inc
jne
jo
cmpb
or
fwait
jo
adc
add
bound
daa
sub
mov
add
or
cld
out
shll
fnstenv
outsb
lock
cli
pop
cmp
lret
lods
jmp
sbb
sbb
cmpsl
pusha
insl
rcrb
insb
mov
repz
mov
dec
scas
movb
lret
imul
aas
push
movaps
out
int
push
es
insb
mov
jo
cli
pop
scas
jae
xor
clc
loopne
sbb
lods
arpl
add
or
mov
dec
dec
fimuls
xor
mov
jno
sub
into
popa
cmp
enter
mov
test
fiaddl
inc
mov
jo
test
aaa
sets
std
into
mov
ss
sbb
imulb
iret
jo
out
mov
add
outsb
inc
push
xchg
in
in
imul
sti
insl
rcrl
jns
mov
in
xchg
pop
rcll
pop
nop
add
push
sahf
js
imul
subl
push
popf
aas
mov
outsb
lds
jo
adc
xor
push
das
loop
jmp
mov
mov
jo
or
jnp
xor
insb
jb
dec
idivl
jae
cmp
cmp
ja
sub
push
shll
lock
stc
imul
mov
pop
ja
add
mov
call
addb
and
jl
in
mov
outsb
insb
xor
je
std
push
int3
mov
jo
add
cmp
mov
mov
loop
lahf
imul
lods
jo,pt
jle
cmp
scas
lods
push
add
mov
iret
in
jno
movsb
imul
jo
testl
jo
pop
mov
lods
jo
dec
cmp
add
mov
sbb
cli
sub
aas
jo
or
pop
or
sbb
insb
lock
jo
ficoms
mov
dec
push
mov
push
arpl
cmp
popf
cmp
lods
sbb
inc
jno
test
jne
idivb
lock
mov
in
cltd
lock
int
rol
cmpsb
push
cs
lahf
mov
xor
loopne
inc
mov
movsb
jae
dec
push
push
dec
mov
cwtl
xchg
jmp
sub
jl
and
aaa
push
and
sbb
test
stos
dec
pop
and
cwtl
jo
mov
out
sti
and
lcall
test
fldt
jo
mov
fidivrl
cld
jo
std
fs
jnp
or
jo
jg
push
jo
mov
adc
push
mov
aas
xchg
jns
dec
imul
dec
cmp
jo
adc
mov
dec
pop
jb
xchg
xor
jl
push
jle
out
sub
xor
insl
sub
mov
jo
jge
nop
xchg
push
mov
xchg
in
sbb
outsb
jl
mov
jp
add
add
lea
push
in
into
and
jo
scas
push
cmp
int
arpl
icebp
jbe
sbb
into
and
lret
in
push
xchg
outsl
lret
cli
fbstp
xchg
xchg
push
rcl
imul
stc
fbld
hlt
movsl
dec
cwtl
insl
insb
lock
xor
push
mov
mov
jo
and
mov
rcrl
dec
hlt
lock
jo
jle
idiv
xor
jp
mov
pop
into
dec
lock
jp
repnz
pusha
jo
mov
cli
inc
jl
add
add
push
dec
cmc
ss
mov
pop
jmp
push
jo
aam
popa
aad
pop
or
dec
mov
jmp
dec
bnd
cmp
fwait
pop
mov
sbb
jo
dec
xor
jo
inc
fbstp
xorb
gs
adc
call
xor
cmp
dec
or
int
jp
setge
shr
in
ret
pop
out
jo
sbb
ss
insb
pop
mov
lock
fwait
sub
jae
cmp
outsb
adc
int
daa
and
jo
pop
cmpsl
and
jo
cmpb
lret
mov
incb
xor
push
fwait
in
mov
aas
lcall
outsl
cli
add
data16
pop
and
xchg
imul
orl
dec
pop
ljmp
push
sub
push
into
adc
aas
into
mov
enter
jo
pop
push
int3
insl
push
data16
or
fdivrs
jae
mov
testl
xchg
adc
jns
and
or
jo
gs
repz
out
dec
aaa
int
data16
inc
sub
ja
xchg
push
push
div
xor
stos
fcoml
fisubrs
sahf
xorl
test
mov
pop
orl
adc
in
mov
lock
xor
mov
xor
inc
std
dec
add
std
dec
test
jl
in
mov
outsb
ret
movsb
jo
data16
rorl
cmp
rcll
dec
mov
outsb
aam
in
cmp
pop
mov
or
sbb
fmul
xlat
mov
add
cli
push
fs
test
pop
dec
sub
mov
mov
pushf
std
jo
gs
mov
hlt
ja,pn
push
cmpsb
int3
jo
pusha
jno
inc
ret
jp
gs
mov
enter
push
push
sub
clc
fiadds
cwtl
addr16
fwait
mov
and
jo
cs
push
xor
and
fisubrs
jns
sbb
add
and
outsb
out
push
test
adc
xchg
pusha
das
scas
mov
mov
jmp
sbbb
jge
jae
sarb
pushf
pop
or
lock
sbb
pop
dec
and
out
repz
mulb
inc
lock
mov
add
push
xchg
sub
jae
cmp
jo
adc
pushf
mull
aad
xor
xor
lahf
xchg
outsb
addb
or
mov
sarb
out
xorl
mov
add
bound
je
mov
xchg
insb
pop
pop
aaa
clc
loope
addr16
shlb
mov
sbb
in
jp
pop
push
push
xchg
movsl
dec
pop
xchg
dec
pusha
cli
subb
jno
gs
jo
xor
clc
jnp
es
and
int3
push
sti
jo
sbb
jg
subb
mov
in
in
jo
cmc
cs
mov
call
jo
imul
andb
xchg
aad
and
adc
mov
es
add
push
cmpsl
mov
ja
int
push
addb
xchg
in
lret
iret
jo
shll
imul
push
dec
push
loopne
insl
cld
push
jno
xchg
cltd
jnp
stos
add
lds
cs
andb
cmpl
jo
xor
call
repz
ja
jmp
jo
push
and
cmc
rcl
pusha
adc
mov
jp
inc
dec
clc
xlat
imul
fidivrs
in
pushf
fsts
or
ja
sbb
cmp
mov
fsubs
mov
clc
add
mov
dec
inc
daa
insl
dec
jo
push
xor
lahf
aad
mov
repnz
push
xchg
loope
out
push
insl
je
in
pushf
mov
or
call
or
mov
add
inc
jo
mov
sub
pop
pop
in
call
mov
jne
fs
arpl
shll
insb
lods
xchg
mov
std
sbb
mov
ja
cltd
and
inc
dec
push
adc
jns
adc
cmpsl
cmpsl
jo
pop
mov
jo
push
int
rcll
cmpl
xchg
dec
repnz
mov
lcall
test
jo
push
jae
mov
cltd
gs
inc
sbb
in
jne
cmp
rorb
jo
loop
dec
cmpsl
iret
jae
pop
inc
aam
aad
pushl
and
or
lock
mov
cmp
insl
mov
popf
cmp
xchg
and
ljmp
cld
adc
movsb
pop
das
mov
imulb
jo
aaa
xchg
loopne
push
nop
inc
jbe
fcmove
lock
test
jb
subb
jo
inc
push
repnz
sub
xchg
in
lret
insl
pop
sbb
pop
sbb
mov
jp
lock
mov
jo
xchg
jbe
outsl
mov
fldl
sub
mov
dec
cld
jo
mov
cmpsb
sbb
and
mov
mov
sahf
xor
adc
ja
sbb
aaa
enter
push
jp
pop
int3
lods
push
adc
mov
push
adc
nop
jge
mov
ret
jo
mov
cltd
fs
mov
ret
inc
aad
outsl
fucom
out
inc
and
ja
iret
pop
adc
add
out
inc
scas
jecxz
xor
pop
or
cmp
push
dec
inc
pop
adc
fs
adc
jmp
ja
sub
sbb
icebp
outsb
push
mov
fcmove
push
scas
into
je
fisubs
jle
in
pusha
in
cltd
adc
and
insl
mov
add
fwait
dec
out
fmulp
mov
mov
popa
pop
pusha
popf
stc
add
jo
into
mulb
xchg
mov
jo
dec
fsubrs
addb
hlt
aas
xor
mov
cli
cmp
aaa
jo
in
jge
into
test
jle
loopne
push
xchg
pop
lods
jo
gs
mov
iret
adc
or
neg
dec
pop
inc
subl
sbb
or
insl
push
xchg
mov
gs
xchg
fwait
nop
jle
pop
pop
or
push
lret
sbb
aam
jo
jmp
in
or
mov
lods
inc
pop
int
insb
popa
cmp
mov
dec
nop
leave
or
lret
dec
add
jge
outsb
xor
lcall
sub
pop
rolb
popa
jo
dec
sub
add
or
stos
outsb
cwtl
mov
inc
ss
or
xor
pop
push
aas
jno
in
pushf
mov
push
loopne,pn
xor
out
adc
sti
jp
inc
lcall
mov
cmp
adcb
dec
into
inc
lock
lea
jmp
push
in
ror
test
cmpsb
lcall
es
out
xchg
cmpsl
mov
xlat
imul
and
int
mov
lea
jle
leave
push
inc
insl
jmp
pushl
outsb
mulb
stos
sbb
push
xchg
stos
fistpl
out
adc
add
jbe
jo
shrb
sti
stc
out
fstp
jns
push
dec
aaa
lods
pusha
push
cmp
sbb
in
dec
push
idivb
insl
loop
jae
lock
cmovno
bound
int3
mov
sub
push
sub
lods
xor
dec
idiv
int
sbb
mov
in
jo
mov
test
xchg
pop
ljmp
pop
outsb
mov
out
cmpsb
fs
sub
dec
pop
mov
jp,pn
hlt
pop
loope
test
xchg
sarb
insl
mov
pop
int3
xchg
rep
fdivrl
xor
dec
shlb
jle
jae
mov
xchg
sub
pushf
lea
add
mov
call
into
xor
xor
and
das
insl
inc
outsl
jnp
in
scas
fbld
mulb
dec
and
jo
clc
mov
xorb
pop
add
mov
xchg
push
outsb
fwait
adc
or
mov
dec
cmp
sbb
dec
cmpb
lock
sub
sub
mov
std
stos
outsb
or
or
popf
cmpsb
rcrl
jg
leave
loopne
jo
gs
dec
jns
scas
adc
pop
mov
pop
aas
divl
sbb
push
ja
insb
mov
in
fsubs
xchg
loopne
lock
imul
shll
les
sub
movsl
mov
in
test
rorl
out
fdivr
icebp
mov
out
mov
movsl
insb
xlat
in
sub
pop
in
xor
loop
add
or
scas
mov
popa
fdivrs
js
jo
adc
jnp
lock
vpmaxsw
or
clc
icebp
leave
adc
lock
push
push
sarl
xor
dec
rcrl
jo
int
sbb
ja
fnsave
int3
push
stos
xor
mov
jno
push
adc
movsl
dec
imul
fst
ja
call
adc
xchg
jne
add
inc
mov
mov
std
pop
outsb
stos
jnp
aaa
dec
out
jo
pmaxsw
icebp
outsb
insl
imul
dec
and
addr16
jb
mov
xor
das
sub
mov
lods
subb
xchg
fcomps
cmp
pop
xchg
push
lret
jo
sbb
pop
xchg
cli
inc
imul
mov
xor
pop
stos
rcrb
push
repz
cmp
in
mov
gs
add
jl
xor
xchg
ljmp
push
fldcw
add
pop
xorb
jecxz
xor
enter
outsb
subl
push
mov
and
das
insl
inc
inc
adc
xor
xchg
aas
jnp
mov
shrl
cmp
movsl
jo
int3
addr16
push
and
push
sub
sub
mov
cmp
pop
lahf
das
mov
fs
out
jns
xchg
nop
xor
inc
jo
cmp
call
jo
inc
ret
lds
scas
jne
xchg
std
push
mov
xor
mov
inc
ret
in
or
shlb
jg
mov
orl
jl
adc
jo
scas
xor
push
inc
add
ljmp
addl
bsf
jnp
shlb
dec
hlt
sahf
lock
sub
push
cmp
mov
loope
jp
cmp
xchg
push
mov
push
push
ljmp
push
sbb
mov
stos
xor
inc
jb
in
lds
push
jno
jne
stos
lock
mov
addr16
mov
push
in
stc
shrl
jo
push
xorl
jl
mov
jmp
fidivl
cmp
movl
push
adc
cwtl
pop
dec
movsl
lods
pop
shrb
xchg
stos
cli
cmp
xchg
xor
sub
and
dec
jo
iret
pop
cli
push
mov
imul
ja
daa
dec
repz
xchg
sbbb
out
and
push
mov
cmc
pushf
jo
imul
insl
dec
dec
jo
inc
into
shrl
jle
fcomps
jns
fwait
gs
mov
scas
xchg
bound
call
xchg
pop
jle
jo
rorl
or
imul
jo
div
sbb
std
jno
insb
sub
ss
adcb
fistl
lods
xchg
pop
pusha
pop
sbb
sub
cli
mov
loopne
neg
jo
in
sub
jo
sub
testb
jae
stc
jnp
lahf
fcomip
inc
out
mov
xchg
jo
je
add
cmp
push
or
jo
cmp
mov
imul
pop
and
les
nop
movsb
inc
orl
mov
std
insl
jp
add
adc
push
jae
jo
dec
out
jno
xor
cli
xchg
enter
clc
mov
shrl
jno
hlt
xchg
mov
pusha
pop
js
dec
insl
sahf
lds
je
subb
lock
push
jo
or
ljmp
dec
rorb
insb
pop
xor
xchg
xchg
dec
jo
rclb
xor
sahf
mov
or
push
insl
or
cltd
adc
enter
int3
loop
xor
ss
stos
push
cmpb
arpl
jo
cwtl
and
fwait
insl
push
jo
mov
daa
jne
ret
rclb
jbe
fs
xchg
in
mov
jge
andb
dec
xchg
add
push
jo
in
imulb
cmp
in
loopne
push
sbb
xchg
cli
out
insl
xor
repnz
adc
or
jo
fiaddl
jo
repz
push
push
inc
cmp
jo
das
push
clc
arpl
addl
stos
test
inc
imul
mov
sub
jae
ror
shrb
pop
lds
jo
mov
add
sahf
lahf
or
jno
aas
pop
jp
test
jo
pop
lds
pop
xchg
or
push
pop
jo
sbb
insl
pushf
or
adc
fsts
pop
andb
add
je
int3
mov
and
dec
arpl
mov
sub
jno
ficomps
mov
pusha
cmp
jp
sahf
testl
testl
xlat
mov
pop
mov
sub
dec
inc
out
incl
xor
sub
cwtl
lret
jo
addr16
cmp
std
inc
add
jo
cltd
push
push
es
mov
ss
sbb
xor
insb
stc
push
mov
cmp
hlt
push
movsb
jo
out
stos
sub
jae
or
int3
lahf
ja
idiv
outsb
in
jo
in
dec
nop
or
xchg
mov
jno
dec
sub
xor
adcb
les
jo
push
add
jg
xlat
xchg
sub
outsb
sti
int3
pop
jp
push
push
fwait
xchg
inc
jbe
ja
leave
sub
movntq
pop
or
push
fnstsw
xchg
or
std
add
fldenv
fmul
push
xor
push
shl
ss
insb
mov
mov
outsb
pushf
mov
pop
inc
add
fwait
cli
iret
leave
mov
fs
cmp
cmp
pop
jo
pop
adc
aaa
xlat
mov
lret
mov
out
mov
ret
sub
pop
arpl
popf
jp
fisubs
ja
mov
shr
outsb
loop
leave
adc
shrl
popa
insl
leave
jbe
jb
in
clc
test
xchg
push
jge
and
ja
mov
int3
fadds
sbb
sub
jge
adc
fcomi
test
aas
push
or
mov
clc
pushl
jl
pop
enter
xor
popa
jne
cmpsl
lea
je
xor
jae
clc
jne
mov
test
les
ja
jmp
mov
jo
sub
xlat
fnsave
xchg
adc
push
jo
mov
jmp
dec
clc
pushf
jecxz
and
addl
push
pop
sahf
insb
mov
loopne
mov
sbb
orl
std
jo
and
jne
dec
and
sub
add
repnz
pusha
push
shlb
gs
or
fsubl
pop
xor
and
pop
dec
into
mov
sub
jp
pop
mov
stos
je
and
lock
enter
outsb
ja
sahf
push
mov
push
test
imul
cmp
push
and
add
jl
out
xchg
outsb
jb
rclb
push
jbe
fildl
dec
pop
xchg
pop
inc
cltd
and
cmp
hlt
das
in
std
scas
nop
in
ds
push
mov
sub
mov
jno
sub
mov
ss
xchg
insl
jge
sbb
lcall
jo
pop
les
jo
cli
jb
cmc
sahf
call
sarl
adc
jo
inc
lods
divb
add
jle
mov
xor
aaa
xchg
add
push
jo
adc
adc
into
cmp
cmp
sti
inc
repnz
push
das
pop
data16
mov
insl
lcall
push
mov
jo
int3
cld
mov
jo
pop
adcb
lock
dec
test
mov
imul
mov
adc
outsb
out
out
xchg
mov
jo
aad
imul
cld
pusha
jl
sar
insl
mov
jp
lcall
cwtl
xchg
jne
in
mov
add
fs
cmp
pop
or
mov
jg
sub
ss
adc
mov
lcall
mov
je
push
outsb
pop
xchg
insl
dec
clc
push
pop
lds
jno
sbb
pop
add
dec
mov
scas
jo
mov
jmp
neg
lahf
std
mov
into
inc
lock
cmp
xor
jo
pop
dec
cmpsb
popa
xor
inc
cs
mov
jae
icebp
call
testl
sub
cltd
jae
lea
cmp
mov
andb
add
pop
or
push
adc
icebp
out
scas
add
mov
dec
xor
fsubrs
cltd
mov
jo,pn
repnz
pop
sbb
and
mov
ret
add
mov
jl
clc
mov
loope
dec
dec
inc
repz
movsl
fcmovbe
jo
jnp
jle
sbb
xor
cli
xchg
clc
nop
sub
or
and
xor
dec
cs
jo
enter
test
rolb
ja
cmp
rol
pusha
subl
jo
sbb
shll
movsb
popf
jne
sti
mov
scas
inc
rorb
outsb
popl
dec
xor
movsl
insb
sbb
jae
fmul
push
mov
popa
test
ficoml
outsb
stos
and
pop
sub
jae
cs
je
rcrl
pusha
fbstp
es
mov
scas
sbb
std
cmp
fsubl
test
ljmp
aas
dec
out
add
mov
sbb
call
scas
cli
pushf
fcom
sub
jo
pop
aas
loope
adc
mov
jb
imul
test
jno
cld
out
and
lret
mov
movsb
test
call
jo
sub
add
pop
xor
jo
or
inc
aas
cld
int
ja
out
xchg
pusha
nop
in
loopne
and
fimuls
insb
inc
jbe
push
jp
jecxz
xor
dec
pusha
jae
jnp
dec
ja
jne
jo
dec
ljmp
xchg
pop
mov
sahf
lea
mov
pop
loopne
xchg
cwtl
divl
add
je
jl
xor
out
jo
cmp
dec
sbb
in
sahf
aam
and
test
mov
notl
sbb
mov
push
shl
into
xor
pop
pop
add
inc
jno
in
in
gs
aaa
cmpsl
dec
mov
addr16
dec
pop
test
lods
lds
sbb
leave
lahf
lock
pop
xor
mov
lock
jo
lods
push
jmp
stos
je
jo
inc
mov
xor
hlt
push
aaa
cli
pushf
xchg
push
out
cltd
jno
adc
cltd
jno
fwait
mov
adc
jnp
xorb
jo
call
ljmp
stos
pushf
aaa
pop
mov
jb
ss
mov
imul
jb
cmpsb
pushf
outsb
jnp
inc
sbb
adc
mov
rorl
or
mov
jo
outsl
sbb
mov
mov
add
fcoml
or
pop
mov
mov
mov
vpshufhw
shlb
test
jns
mov
sub
outsl
jb
mov
icebp
jo
insl
ret
pop
adc
clc
das
inc
or
int3
pop
mov
jle
outsb
fwait
enter
pop
sub
lret
jnp
in
nop
add
ret
icebp
mov
mov
adc
and
sbb
sbb
lock
dec
shl
loopne
jp
sbb
pop
fisttps
jae
sbb
call
add
dec
iret
jg
repz
pop
push
xchg
insl
js
fdiv
lock
push
daa
jo
inc
stos
int3
jle
jp
leave
ret
hlt
jecxz
pushf
test
int
lock
or
add
pop
jo
adc
cmc
sub
outsb
mov
xlat
inc
mull
inc
insl
pusha
dec
mov
mov
jge
shlb
sahf
jo
in
add
call
cmp
ret
jns
push
outsb
mov
lock
mov
mov
jo
jae
adc
xchg
fwait
and
inc
cmp
outsb
push
xorl
arpl
lock
fs
or
jae
xchg
std
or
pop
lock
lock
jo
imul
and
mov
adc
imul
pop
push
xor
jle
jo
ja
sub
out
adc
xor
jbe
mov
push
and
ror
insl
jbe
imul
movsb
pusha
and
pop
cs
lods
jecxz
dec
push
pop
jae
pop
push
jo
nop
cmp
test
outsb
push
mov
stc
jo
cli
cmp
and
adc
xor
jo
int
sti
mov
inc
jae
insb
aad
sub
aam
fisttps
ja
push
xchg
pop
mov
jmp
pop
adc
cwtl
sub
pop
dec
dec
or
flds
xor
jo
mov
mov
sbb
jo
out
xor
ss
push
jo
cli
mov
jl
jg
pop
dec
jns
jo
inc
icebp
xchg
mov
fisttps
pushf
ds
xchg
lock
out
dec
cmp
mov
int
lret
enter
add
in
jg
and
out
mov
sbb
jo
xchg
push
insl
sub
jp
pop
adc
xchg
push
ret
or
inc
jmp
std
mov
cmp
mov
outsb
jo
or
ss
stc
mov
sub
jb
add
pop
outsb
add
lcall
add
cli
ljmp
clc
inc
adcb
cmp
int3
jmp
mov
mov
or
js
nop
clc
cltd
push
inc
insl
std
inc
xchg
repz
rcll
and
int3
adc
adc
push
enter
mov
movsl
xor
cmp
or
nop
pop
dec
ds
mov
mov
dec
insl
mov
mov
jle
push
test
test
add
stc
push
ja
fcoml
cmp
or
and
dec
jnp
xchg
dec
xchg
lods
or
jo
mov
xlat
loope
scas
lcall
jp
push
mov
fidivs
insl
or
les
jo
and
fwait
dec
shll
iret
jp
scas
mov
fbstp
xchg
and
xlat
push
jae
lea
mov
sbb
jo
movsb
in
std
idivl
insb
mov
gs
cld
pusha
or
and
inc
in
xlat
jo
adc
xor
jo
mov
mov
roll
cmp
jge
mov
push
mov
cmp
lret
cmp
lods
jns
popf
pusha
sahf
jo
cli
push
push
stos
inc
dec
enter
out
push
xchg
outsb
hlt
jo
pop
cmpsb
int
test
sbb
imul
loopne
lods
je
xchg
xor
fdiv
jo
sub
test
aam
psadbw
loop
test
shll
fistps
sub
insb
adcb
xchg
mov
jo
in
and
lds
test
js
and
push
adcl
xchg
inc
je
int3
lods
data16
push
adc
jne
sub
nop
add
ja
divl
int3
out
jo
jns
lret
insl
xchg
test
xchg
cmp
and
adc
clc
pop
sti
cmp
sahf
jp
add
out
xor
clc
jo
dec
addb
cmp
jo
mulb
sub
mov
rol
ss
mov
arpl
mov
insl
adc
dec
pop
pop
data16
inc
pushf
push
bnd
pop
adc
mov
inc
imul
arpl
push
or
xor
pop
push
insl
mov
sbb
std
rorb
imul
rolb
into
add
je
sub
les
xchg
pop
or
lock
pop
scas
or
loopne
iret
pop
jl
aam
jecxz
xchg
test
lds
lods
jg
mov
fwait
testl
xor
jo
into
mov
sbb
popa
sub
std
jae
xchg
pop
stos
or
inc
mov
pop
dec
inc
adc
in
sbbb
ja
jo
test
sub
prefetch
dec
les
pop
out
in
cmp
jns
ds
mov
bnd
jbe
jno
cmc
cs
lock
cmp
jo
cmpl
jae
cli
mov
ror
mov
mov
xor
inc
jo
sbb
test
movups
hlt
add
and
mov
sbb
imul
jle
insl
in
lahf
pop
stos
xchg
popl
jo
xchg
ljmp
or
add
cli
jne
or
jae
popl
cmpb
imul
sbb
adc
push
shlb
sbb
mov
xor
fsubl
pop
out
cmpsl
push
lods
loope
out
mov
adc
sbb
lods
outsb
cli
test
jo
cmp
jae
or
daa
sub
dec
in
xor
testl
lahf
or
or
inc
dec
lahf
test
je
ja
xchg
fisubrl
jg
pop
xchg
push
mov
out
lods
adc
fisubrs
adc
mov
je
fsubrl
insb
xchg
sbb
xchg
ljmp
ret
xchg
xchg
jae
pop
idiv
clc
or
mov
mov
mull
insl
lock
adc
xchg
jo
loope
addr16
pop
jl
out
jo
lcall
lret
adc
dec
movsl
cwtl
mov
jo
cmp
addr16
inc
mov
fisubrl
dec
pop
cmp
mov
test
pop
insl
addr16
cmpsl
push
mov
std
xor
lea
inc
xchg
aaa
lock
fwait
add
bound
in
and
adcl
mov
cmp
push
jnp
jne
sti
mov
inc
popf
or
dec
push
xchg
inc
out
dec
shll
loope
pop
push
shrl
pop
jo
mov
push
daa
mov
stos
cmp
or
dec
jmp
outsb
ds
imul
mov
xchg
scas
mov
stc
shlb
mov
and
sub
sbb
mov
push
mov
insl
negb
push
sarb
ss
fwait
shll
mov
bound
jo
push
xor
out
mov
les
xchg
divl
sbb
mov
insb
push
jo
xchg
mov
movsl
jno
mov
sub
in
push
popl
mov
arpl
sub
mov
xchg
out
ja
loopne
dec
lahf
add
test
in
pop
dec
cli
call
scas
inc
or
jne
cld
je
fisubl
lcall
jnp
int
jae
sbb
fwait
aad
sahf
jecxz
jle
add
jae
xor
outsb
ljmp
mov
aam
push
jo,pn
jae
out
outsb
mov
mov
je
jns
or
sbb
mov
pusha
adcl
or
jmp
out
mov
push
shr
cmp
bnd
mov
mov
mov
push
outsb
ss
jo
cmp
mov
inc
orb
ds
add
push
mov
insb
in
mov
imul
aaa
jno
and
inc
repnz
sub
mov
enter
jae
or
push
push
add
imul
jo
dec
xor
jb
inc
add
push
stos
dec
jo
rclb
jecxz
dec
ret
mov
jae
ja
aad
addr16
nop
lahf
fs
dec
sbb
and
mov
push
mov
loopne
outsb
pop
cmpsb
and
pushf
jl,pt
test
movsl
outsb
mov
sub
cli
mov
adc
int
sub
and
xor
sub
mov
or
loopne
and
out
adc
xchg
popf
add
and
or
fbstp
test
ret
add
je
repz
clc
movsb
sbb
mul
mov
movsl
mov
outsb
push
pop
cltd
inc
imul
dec
xchg
dec
out
and
cmp
add
jo
sbb
push
xlat
jo
jnp
xchg
jg
out
or
bound
mov
loop
xor
jo
jge
in
mov
add
inc
adc
aas
loopne
jo
lds
loop
dec
jp
jo
jne
in
xor
cli
dec
sbbl
inc
shll
jp
mov
cmp
sub
insl
mov
shrb
and
pop
inc
imul
in
outsb
xchg
xchg
mov
adc
imul
fmull
sti
js
cmp
outsb
les
lret
jo
pop
and
adc
push
jo
sbb
mov
cmp
push
xor
jmp
rolb
adc
pop
sub
insl
jl
scas
pop
out
push
xchg
xchg
arpl
xchg
pop
lock
imul
cmp
mov
shlb
stos
shll
mov
jle
pop
and
jae
or
insl
cs
add
xchg
adc
in
fs
sahf
pop
popf
pop
dec
icebp
xor
or
insl
mov
mov
jae
rorb
dec
mov
in
or
pusha
jae
loope
or
sub
pop
lods
jo
scas
mov
mov
scas
insl
lret
rep
pop
mov
mov
inc
orb
mov
shll
ret
push
xor
out
das
inc
mov
lock
arpl
push
sbb
xor
xchg
and
mov
clc
mov
enter
outsb
and
into
jo
dec
pop
mov
iret
xor
pop
jp
test
jg
push
stos
loop
add
stos
lock
addr16
movl
pop
je
jl
push
popa
insl
ds
xchg
xchg
sbb
fdivrp
sbb
jo
adc
or
cmc
mov
nop
or
fwait
xchg
push
inc
loopne
mov
mov
aad
push
add
faddl
or
cli
mov
jo
icebp
add
xchg
insl
mov
mov
add
sub
xchg
mov
divb
bsr
xor
inc
add
sbb
dec
movsb
popa
push
pop
mov
and
inc
ja
xor
mov
add
into
jo
inc
push
inc
orl
add
jno
in
sub
jo
xor
mov
hlt
mov
cwtl
andb
push
clc
jae
aas
shrl
loopne
mov
adc
insb
jp
shll
scas
and
jo
jno
aaa
pushf
lret
xlat
popf
insl
xchg
xor
int3
test
jne
cli
add
rep
or
cmpsb
adc
mov
mov
rcll
push
movsb
sbb
xor
lea
aam
push
push
mov
dec
mov
int
testl
mov
jge
adc
sbb
ud1
push
cmc
pop
js
int3
cmc
sub
leave
sahf
popf
mov
pushw
dec
dec
sbb
jo
lods
jae
jnp
test
push
mov
les
in
inc
jne
jo
cli
mov
js
mov
mov
jp
push
jo
xor
sbb
les
stc
movsb
insl
push
jo
clc
aam
or
dec
stos
shlb
shlb
pop
inc
ja
out
repnz
xor
int
pop
repz
xchg
pop
jne
or
mov
xchg
cwtl
lahf
pop
clc
int3
push
or
pcmpgtb
sahf
ret
js,pn
pusha
js
into
adc
lret
loopne
jp
mov
lock
adc
jo
pop
icebp
out
dec
rorb
jge
push
xor
pop
jns
jmp
insl
push
mov
out
cmc
jp
js
pop
mov
enter
push
clc
ror
clc
out
pop
adc
ss
jo
pop
inc
cmp
jmp
mov
insl
sbb
lods
int3
xchg
stos
xchg
add
sbb
iret
push
sub
out
sbbb
aaa
notb
into
int3
xor
std
push
jae
and
sarb
jl
cli
xchg
sbb
shll
xchg
jge
std
mov
inc
or
inc
enter
outsb
dec
mov
push
clc
pop
jo
fs
and
lret
add
or
lock
aaa
inc
jmp
xor
sbb
push
xchg
sbbb
movsb
xchg
leave
adc
cmp
addl
or
clc
rorl
js
movsb
pop
or
out
jo
sub
push
pop
push
push
xchg
lret
insb
mov
and
push
repz
or
and
cmp
stc
ja
xor
add
cmp
pop
cmp
in
dec
sbb
mov
imul
xor
cltd
imul
lock
mov
push
leave
sub
cmp
xchg
aaa
jnp
loopne
lock
jae
push
aad
out
lahf
addr16
inc
sub
jne
xchg
add
pop
push
sbb
shr
mov
inc
shlb
pusha
pushf
movsl
ret
pop
ja
mov
dec
outsb
shl
les
or
sbb
out
and
test
mov
jmp
rolb
mov
and
mov
xchg
jp
xchg
lods
pop
call
pusha
jo
push
push
jb
mov
sub
jp
add
repz
jns
mov
and
mov
clc
daa
fisubrl
ja
xor
cmc
or
jo
test
decb
jne
pop
cli
fwait
testl
div
lods
iret
lret
sub
dec
pop
adc
mov
lock
add
jo
out
dec
adc
lea
mov
pop
cmp
adc
add
insl
jo
ja
mov
int
cmpsl
adc
decl
div
test
outsb
stos
adc
jo
stos
mov
push
out
pop
xor
mov
and
push
jo
jge
adcb
int
xor
insl
cli
mov
dec
mov
insl
jae
ficomps
mov
out
mov
push
movsb
mov
mov
jo
and
outsb
jne
jbe
bound
fnstenv
mov
inc
rorb
in
mov
repnz
inc
stc
enter
jmp
je
push
arpl
xchg
mov
hlt
insb
mov
gs
lods
sti
or
jae
lds
fs
aam
dec
adc
sahf
call
push
das
aas
sbb
lock
cld
sti
push
mov
add
jo
xchg
push
idivl
mov
arpl
daa
xor
orl
pusha
lret
mov
in
add
rcrb
dec
popa
pop
mov
cmp
loopne
shll
lea
outsb
xchg
jbe
dec
push
xorl
add
sub
aaa
cmp
loopne
int
or
jo
das
mov
jns
mov
pop
sub
scas
jae
loopne
push
repnz
stos
ja
jae
adc
into
xchg
inc
mov
jl
or
push
sub
mov
jo
out
insl
xor
ror
jo
gs
push
lock
test
cli
loopne
sub
jle
lret
xor
outsb
jae
fst
push
int
in
dec
jo
mov
fildll
pop
jp
mov
loopne
movsb
push
xchg
insb
dec
mov
pop
push
xchg
cmovg
xor
mov
xor
outsb
cli
mov
in
sbb
das
dec
outsb
je
sub
lds
push
adc
mov
ljmp
in
lods
lods
nop
clc
pop
jo
xor
data16
cmpsb
dec
mov
push
push
dec
andb
and
jns
pop
jno
xchg
xor
add
sub
in
outsb
adc
push
ljmp
in
sub
and
jo
cli
dec
insl
inc
hlt
call
pop
dec
int
mull
inc
pop
dec
pop
and
mov
push
rorb
or
add
dec
and
in
pop
ss
rorb
jno
inc
loope
cs
loop
adcl
push
mov
fidivrl
xor
adc
in
andl
inc
shrl
out
push
push
rorb
ja
pop
in
fcomi
jge
loopne
xorl
sbb
or
mov
inc
adc
pop
adc
inc
stos
pop
mov
dec
xchg
push
pop
xor
incl
mov
insl
cld
pop
mov
and
test
xchg
or
inc
xor
cltd
scas
jo
push
adcl
mov
fldl
mov
pusha
repnz
and
daa
cltd
loopne
stc
and
sbb
dec
cmp
jb
push
sbb
ja
rclb
repz
in
dec
lea
fstl
je
mov
inc
jg
fisubl
sub
push
xor
hlt
lea
and
xlat
jo
xchg
jmp
cld
jo
mov
push
xchg
jb
mov
inc
lock
adc
pop
movsb
das
pop
xor
sbb
push
mov
jo
mov
dec
jne
pop
jo
aam
sub
imul
ss
and
sub
push
mov
and
pop
ja
jecxz
insb
jns
stos
push
in
dec
dec
xlat
out
lock
mov
insb
xchg
or
mov
jbe
fidivl
xor
add
insl
sbb
mov
inc
pushf
push
sti
imul
repz
jo
outsb
and
push
ss
jo
int3
test
or
or
jae
pushf
jno
inc
mov
in
addr16
sub
loopne
sbb
cs
dec
rcrb
lret
xchg
ja
jns
out
jo
test
push
int3
jo
enter
mov
into
cmpsl
cmp
subb
inc
scas
mov
jp
adc
cmc
pop
xor
push
jo
add
and
movsl
cltd
fwait
or
push
add
jno
test
jo
pop
xor
bound
jo
jecxz
mov
push
xchg
int3
jo
mov
shl
scas
das
jae
push
jno
fcomi
leave
push
and
sbb
or
mov
mov
lock
loopne
addr16
mov
cwtl
add
jns
imul
pop
test
scas
out
fstp
or
or
dec
in
dec
jo
mov
push
hlt
cmp
inc
insl
mov
int
push
or
iret
jno
jmp
sbb
pop
add
nop
jo
mov
mov
repnz
mov
xchg
add
jns
mov
push
inc
dec
lcall
mov
jp
ja
and
dec
push
add
daa
inc
jo
push
rcll
shll
imul
and
xchg
or
das
xor
popf
insl
stos
jae
fisttpll
lds
pusha
int3
aaa
dec
imull
pop
dec
je
xchg
mov
cwtl
lret
lock
out
push
mov
push
pop
loop
sub
and
sbbl
insl
les
dec
xor
jl
lods
lea
sbb
loop
call
mov
jae
dec
je
xor
ret
lock
cs
sbb
mov
pushf
xchg
add
sbb
cwtl
in
jo
loop
lea
sarb
insb
out
mov
xrelease
xchg
xlat
shrb
cmc
lock
push
notl
les
jbe
sub
jp
out
jp
outsl
bound
jo
sub
push
push
arpl
jge
sbb
sub
jne
js
icebp
push
inc
xor
test
cmp
outsb
mov
xchg
add
out
jo
jmp
jo
sarl
repnz
call
insl
lea
mov
inc
test
sbb
adc
push
jo
xchg
pop
or
add
and
es
std
dec
popf
push
aam
push
pop
in
inc
lahf
and
mov
xchg
dec
jge
push
ja
jo
movq
test
mov
or
jp
out
mov
das
iret
mov
xchg
xlat
das
rclb
ja
ljmp
mov
scas
lret
jo
mov
mov
sahf
mov
push
lahf
lret
out
addl
or
nop
popa
iret
xlat
and
out
out
xchg
das
enter
dec
outsl
jge
dec
inc
ss
jae
fmuls
fistpll
mov
mov
out
scas
lock
ja
cmpsl
in
mov
iret
jae
mov
mov
mov
xchg
sub
ja
mov
xchg
fldcw
iret
outsl
out
jp
mov
inc
fiaddl
jns
pop
out
or
loope
test
adc
mov
xor
push
movsl
inc
das
xor
xchg
inc
stos
shll
int
xor
idivb
popf
pusha
or
sub
pop
inc
lret
xchg
mov
insl
inc
add
cmp
mov
iret
or
lds
scas
xchg
push
ja
jmp
decl
jo
cmpsl
xlat
mov
test
repz
lret
and
fnstsw
sub
pop
pop
xchg
jmp
dec
mov
pop
je
push
push
jo
fwait
test
adc
jb
mov
fldl2e
pop
push
roll
cmp
jle
push
sub
mov
lret
inc
dec
jae
insl
lahf
and
push
jo
cs
xchg
mov
ljmp
jo
insb
or
shll
or
stc
in
pop
push
stos
cwtl
add
mov
ja
jmp
xlat
incb
aas
push
outsb
mov
and
dec
test
ss
and
cwtl
sbb
ficoml
lahf
jo
sahf
das
rorl
mov
cmpsl
nop
stos
call
add
iret
shll
adc
repz
lret
fwait
in
cmp
in
inc
lcall
pushf
gs
lods
jo
arpl
rcr
xor
pop
imul
cwtl
dec
sbb
sahf
xor
inc
mov
jo
sub
imul
js
add
sbb
aam
xchg
inc
pop
fsubl
orl
shll
aam
and
cmpb
mov
iret
xor
sbbb
and
loopne
fldt
and
das
inc
jnp
or
mov
adc
mov
inc
sbb
and
pop
fildl
mov
cmc
nop
cmpsb
xor
insl
adc
inc
dec
test
xchg
ja
in
mov
ret
cmp
fimuls
mov
jmp
aas
adc
push
cmp
fwait
mov
je
jns
jo
pop
mov
jecxz
imul
incl
jmp
jo
pop
or
mov
jl
or
shll
cmc
loope
jg
sub
popl
pop
nop
fstpt
clc
push
sub
test
hlt
popf
mov
inc
aam
jo
adc
cmovnp
out
imulb
mov
push
jp
fcom
fstl
cmp
std
out
push
jo
cmp
inc
jne
sub
aaa
cmp
jo
xor
je
sahf
or
ret
iret
int3
jo
stc
push
lock
add
adc
pushf
inc
mov
dec
fldcw
imul
push
sahf
or
cmp
mov
lods
inc
pushf
out
add
jl
add
stc
push
mov
insb
fwait
sbb
lock
icebp
push
jo
in
mov
xchg
xor
cmc
jae
dec
popa
lea
in
xor
xor
pop
inc
pop
jo
sbb
xor
arpl
xchg
lods
xchg
jbe
shlb
arpl
jp
rclb
jo
xchg
mov
dec
fs
dec
lahf
test
sbb
jo
mov
outsl
sub
js
fwait
out
addb
lock
jo
sub
xlat
and
arpl
pop
fmuls
push
sbb
lcall
shlb
call
mov
ror
push
jae
imul
cmpb
add
adc
xchg
push
jo
ss
push
out
loope
insb
clc
jne
jo
jecxz
jp
test
jno
cmp
cmp
lds
or
lcall
scas
jo
adc
movsb
sbb
repz
jo
cld
loop
iret
ljmp
ds
or
dec
and
bsr
fimull
push
jo
dec
sahf
pusha
mulb
or
jae
test
shll
call
and
sub
jo
add
imul
inc
fnsave
push
push
push
jp
sbb
incb
int
aam
insb
pop
in
push
push
mov
mov
adc
mov
cmp
mov
jo
push
out
or
jo
test
cmc
clc
mov
ja
adc
adc
jo
fidivrl
and
shl
dec
leave
or
sar
add
mov
adc
mov
mov
jo
inc
dec
stos
ror
insl
aas
jo
test
cwtl
or
jp
sti
sahf
push
outsb
pop
xor
adc
cmpsl
cmp
ficomps
fs
push
rorl
xorps
jle
adcb
dec
add
jo
imull
jae
dec
pop
jo
out
dec
lahf
dec
sub
ja
ja
mov
xor
xor
or
jo
sub
fldl
imul
jo
aas
fisttpl
jo
scas
adc
jp
xor
mov
inc
xchg
shl
mov
subb
and
adcl
push
adc
cmp
stc
je
xor
adc
jo
push
push
lret
call
mov
jb
jo
inc
fs
fnstsw
mov
sub
lds
shll
add
fstpt
push
xchg
adc
aam
dec
jo
fisubl
and
stc
inc
insl
lds
cltd
imul
int
mov
and
mov
mov
out
inc
add
fst
add
inc
push
adc
cld
mov
js
ffree
out
sbb
xor
xorl
push
loopne
xchg
cltd
ja
sbb
aaa
pop
out
inc
es
jae
jns
or
mov
jp
add
cmp
mov
push
dec
divb
push
scas
aam
jmp
adc
lret
pop
je
jmp
jo
sub
push
xor
lods
inc
xchg
xchg
sbbb
in
cs
mov
jl
outsl
jo
std
lods
mov
push
or
adc
inc
sbb
ja
hlt
sub
sub
cmp
sbb
push
xchg
orb
cmp
pmulhuw
xchg
xor
shl
das
push
pop
inc
insl
sbb
insb
inc
lds
jge
stos
mov
shll
in
movsb
cwtl
mov
add
out
xor
cmp
into
jo
sbb
push
jo
xor
nop
call
cmp
in
lret
jno
and
sub
lds
push
add
adc
xorb
jo
iret
mov
loopne
std
and
push
lea
hlt
xor
jo
xchg
outsb
pusha
into
mov
fdiv
push
aaa
mov
pop
repnz
out
mov
or
pop
xor
movsl
sub
mov
in
push
je
fisubrl
cmc
add
and
lock
xor
das
and
pop
lock
ror
xchg
jo
stos
pop
jp
fnstenv
in
cmp
sti
mov
xor
push
shll
xchg
add
fidivl
mov
xor
push
xlat
std
push
int
dec
jo
pop
out
fbstp
cwtl
pop
jo
jle
mov
outsb
push
jp
cwtl
jge
adc
lret
enter
push
push
pop
adc
into
mov
jo
ret
imul
push
gs
jo
adc
push
jno
sahf
pop
pop
fdivs
mov
jo
inc
lods
sub
dec
icebp
jo
out
xchg
jb
iret
mov
pop
lock
insl
add
jb
rcll
pushf
mov
adc
add
xorb
lods
cmc
dec
pop
sbb
out
xor
jl
ds
pusha
and
push
dec
jo
xor
dec
enter
mov
mov
mov
jno
add
imul
les
jo
out
lahf
aam
jo
mov
dec
xchg
and
jo
in
test
lea
xchg
int
jle
sahf
sub
push
adc
sub
jo
xor
push
ss
ljmp
jo
push
sub
and
xchg
mov
pop
inc
testl
pop
add
lock
or
bnd
mov
add
negb
and
sub
lds
sahf
sbb
imul
in
fiadds
jo
lock
stos
and
je
pop
cmp
jp
leave
bnd
fisubl
mov
push
fcomi
ss
ret
add
iret
pop
adc
sbb
inc
ficomps
adc
divl
push
cmp
and
pop
mov
and
cld
mov
sbb
adc
es
lods
cwtl
or
jo
stos
test
mov
xor
aam
lds
pushf
pop
call
daa
jmp
insl
je
out
in
loopne
call
stc
xor
testl
fsubrp
in
pop
adc
push
dec
popa
aas
icebp
pushf
pop
addb
lods
mov
stos
mov
mov
mov
imul
sub
insb
xchg
add
xchg
add
push
and
insl
dec
cmp
nop
jae
push
lahf
pop
loop
jo
pusha
movsl
mov
and
jo
andb
loopne
nop
test
jns
sahf
repnz
inc
jnp
adcl
je
cmp
jg
enter
pusha
jecxz
fwait
adc
out
jge
out
jo
pop
je
xor
xchg
gs
and
adc
ljmp
enter
lds
dec
insl
jge
loop
push
add
push
sub
mov
lds
pop
pop
jo
add
push
jo
sti
pop
cmp
icebp
push
and
out
loop
jo
adc
cltd
adc
out
lods
ja
or
jg
mov
sti
and
push
movsl
repz
inc
adc
mov
call
lahf
inc
setl
mov
fs
dec
int
push
jo
push
pop
data16
inc
mov
sarl
push
lock
cld
cmp
aas
inc
jle
adc
jo
mov
sub
pop
js
ja
daa
aad
mov
mov
and
pop
dec
aaa
lahf
cwtl
lock
ljmp
jo
mov
sbb
bound
jo
iret
and
pop
fisubrl
out
mov
xchg
call
out
dec
pop
in
dec
inc
lock
fcmovnbe
int
dec
mov
push
repnz
mov
cmc
mov
sbb
enter
and
push
add
repz
pushf
imul
nop
mov
jo
setb
sbbb
and
fcoml
mov
push
inc
and
sahf
ret
scas
je
dec
iret
aad
in
js
cmp
jecxz
cmc
test
icebp
cmp
and
and
jne
outsl
cmp
std
lods
out
mov
adc
xor
push
in
inc
inc
push
mov
mov
sub
fcompl
nop
outsb
sbb
enter
sub
cwtl
jo
sbb
mov
fbstp
fs
or
xchg
roll
jo
std
or
adc
das
jmp
jo
jns
ljmp
xor
addl
lahf
popa
negb
cmp
lods
aam
les
cmp
cmp
xlat
inc
fbld
mov
sti
xchg
sub
mov
imul
cltd
mov
ds
adc
jo
es
int3
cmc
jb
aaa
ja
and
loope
bound
imul
inc
mov
jne
push
stos
mov
push
jo
int3
push
sub
ljmp
fcoms
iret
insl
xchg
push
adc
and
repnz
jo
ret
nop
mov
jns
lret
xor
dec
xchg
ds
lock
pop
or
pop
jae
in
xchg
in
stos
call
inc
mov
sahf
ja
sub
rcll
inc
daa
stc
jecxz
adc
pusha
fisttpl
ja
add
and
gs
jo
mov
rcr
insl
sub
cmp
mov
jbe
push
lret
insl
mov
fst
or
mov
pop
mov
inc
shrl
push
mov
jo
inc
cmpsl
push
stc
in
clc
mov
or
cmp
sbb
in
push
jb
mov
dec
sub
dec
andb
jo
push
fistps
lahf
out
jnp
lock
push
cmp
ds
mov
jo
adc
add
jno
fdivl
jns
pop
fbld
dec
out
mov
and
push
inc
loop
push
lock
insb
outsl
into
jnp
mov
sub
jo
jne
fldt
mov
jo
sbb
icebp
dec
and
mov
test
xor
jns
sbb
popa
jecxz
subl
lea
fdivrs
outsb
ficomps
jp
decl
mov
jo
adc
jb
das
insl
addb
add
sub
push
pop
fstps
mov
sbb
jo
pop
pusha
pop
ret
jle
cmp
mov
inc
xchg
mov
jo
pop
lea
popa
out
stc
cmp
inc
lock
xor
mov
mov
jmp
jp
sbb
repz
mov
mov
xchg
jo
sbb
mov
jne
push
dec
das
div
jp
mov
popa
cmp
or
dec
ficompl
pop
jae
addr16
push
dec
loopne
lahf
or
push
aam
movsl
add
and
imul
shll
xchg
inc
imul
nop
push
lods
jo
fsubrl
xchg
mov
jp
into
aad
mov
dec
cltd
nop
loope
test
jo
jbe
sti
insl
mov
jo
sbb
das
inc
dec
inc
ret
les
icebp
jg
mov
inc
push
ljmp
in
cmp
out
popf
rcrb
jo
pop
ja
pop
lret
or
jo
lds
pop
jo
iret
pop
enter
stos
jo
xor
add
add
cli
jge
push
lock
divl
jo
clc
shll
stc
call
shll
sub
fisttpl
pushf
mov
xchg
cld
jo
fistpll
stos
jo
pushf
out
xchg
push
mov
jae
notb
xor
xchg
mov
notl
mov
mov
adc
adc
mov
or
sub
loope
dec
scas
data16
mov
push
sbb
mov
jg
inc
dec
jmp
in
dec
or
cmp
push
mov
hlt
flds
mov
inc
mov
fs
shlb
jmp
inc
fidivrl
arpl
sbbb
cmp
push
sbb
pop
dec
pop
sbb
mov
push
mov
sub
sub
rcll
stc
xchg
imul
mov
jo
sub
aas
jo
sbb
in
pop
orb
jo
sbb
jnp
imul
popf
fwait
mov
xchg
pushf
xchg
mov
jmp
jae
sbb
loop
mov
adc
jg
and
les
sbb
jbe
insl
mov
xchg
inc
adc
ss
jl
shrb
sub
inc
push
push
flds
loopne
repz
jne
xchg
mov
test
adc
insb
outsb
push
into
idivl
jo
pop
jl
lods
pop
push
sbb
jae
rcrb
sbb
jo
xlat
bound
or
mov
push
mov
cld
add
jnp
sub
fists
pop
ret
mov
pop
cmp
insl
pushf
ds
and
jo
push
stos
into
mov
cwtl
pop
sti
lret
rolw
imul
aad
sub
mov
jb
repnz
push
fisttps
cmp
adc
xor
sub
pop
mov
insl
outsl
xchg
inc
scas
mov
les
mov
fmuls
dec
push
out
or
movsb
xlat
jo
cwtl
lea
pop
push
xchg
mov
and
xrelease
push
jge
test
dec
add
pop
rcrl
das
inc
xor
xchg
and
dec
and
les
push
ljmp
jo
and
xchg
inc
dec
scas
xor
fstpl
cmc
test
add
adc
mov
pushl
or
push
jmp
popf
dec
mov
cs
pop
outsb
call
adc
and
lret
xchg
and
push
xor
shrl
test
fnstsw
cmp
lods
imul
jo
mov
fnsave
mov
cmc
and
xor
cmpsl
sahf
jo
movsb
cmp
scas
jns
pop
fnstenv
loopne
xchg
sbb
lods
cmp
ret
xlat
xchg
out
mov
sbb
adcl
or
xor
sub
mov
pop
sahf
enter
mov
arpl
push
pop
cmp
popf
shl
jne
jo
push
pop
call
jo
and
jo
in
shr
mov
js
inc
and
xor
mov
jnp
push
push
mov
xchg
movsl
mov
data16
jo
cmp
add
cmpsb
mov
pop
bound
jo
repnz
fcmovb
mov
mov
cmp
jp
cmpxchg
test
mov
mov
dec
jle
and
adc
jo
adc
and
jo
and
and
in
fdivl
dec
fdivs
cs
xor
jo
push
loopne
imul
adc
aad
dec
fildll
push
fisttps
shlb
mov
pop
fs
inc
iret
push
mov
push
pcmpeqb
sub
sti
push
nop
xor
cltd
stos
or
sub
enter
rclb
jo
xchg
and
inc
jp
leave
pop
jge
adc
push
jae
lods
sub
xor
inc
add
or
fwait
icebp
enter
fisttps
fdivs
pushf
out
xor
shll
jne
jae
fildll
jo
mov
pop
inc
jo
cmp
mov
fwait
negb
movb
jbe
and
cmp
push
pop
push
nop
jmp
nop
and
mov
loop
pop
sub
add
pop
insl
or
fadd
imul
xor
mov
sbb
test
out
jo
mov
xchg
lahf
mov
jb
icebp
ja
mov
or
inc
push
push
jo
rorb
cltd
jo
stos
mov
cmp
mov
les
add
mov
jo
leave
sub
cmp
sahf
fsubr
aad
daa
pop
pop
sub
cmp
addl
inc
mov
push
add
jnp
mov
lahf
aad
mov
les
add
sbb
in
insb
sahf
movsl
and
inc
in
stos
mov
lcall
push
xchg
sub
jge
mov
addl
mov
in
jl
jno
adc
adc
les
aam
sub
jmp
or
std
or
jne
push
fnstenv
push
or
xchg
cli
jo
mov
cmovns
fsubs
jo
jl
loope
or
mov
enter
mov
pusha
pop
add
jo
idivl
xor
adc
lods
dec
scas
adc
test
or
jge
pop
push
jae
xchg
and
ss
loope
mov
movsl
lock
imul
xchg
sarl
cld
outsb
cmp
xlat
out
sahf
lock
or
pusha
jo
cmc
add
aam
out
loopnew
imul
jo
and
mov
insl
mov
iret
sbb
inc
mov
pop
mull
jmp
scas
jb
arpl
push
jo
xor
cld
mov
pop
cltd
hlt
jle
adc
int3
dec
loopne
dec
aas
jo
mov
lods
jo
hlt
addr16
push
push
mov
pop
pop
mov
adc
and
cld
mov
jae
pop
adc
pop
pushf
jo
fistpll
xlat
pop
ret
test
pop
jne
jb
push
cmp
and
test
insb
scas
mov
out
mov
push
ss
mov
je
fwait
insl
sub
insl
icebp
mov
cs
jo
lock
cli
test
inc
aad
push
mov
imul
jo
testl
mov
shlb
add
sarb
push
movb
cwtl
xchg
mov
bswap
mov
aas
or
xchg
jo
xchg
add
cmp
inc
jle
add
pop
jecxz
addr16
mov
arpl
mov
frndint
sbb
pusha
sbb
inc
pop
pop
call
push
jg
sub
push
cmc
rorl
dec
je
xor
shlb
cmp
xor
jo
pop
pop
stos
xchg
jae
xorb
jmp
sub
pushf
jo
jno
lea
addb
mov
mov
xor
jo
pop
push
inc
or
lret
hlt
lahf
push
mov
cmp
push
jo
cmpsb
fs
pop
cltd
sbb
mov
out
sahf
and
and
dec
cmp
inc
pop
imul
outsb
jno
xlat
push
mov
dec
stos
es
dec
subb
cwtl
add
repnz
sub
cmp
mov
jl
scas
add
test
inc
popa
lds
out
lods
add
xlat
clc
pop
sbb
xchg
jo
xor
adc
cmp
out
mov
ja
mov
shl
shrb
mov
lret
shr
data16
movsb
mov
bound
jne
push
sarl
outsb
fwait
js
sbb
pop
lods
mov
push
jne
push
mov
mov
mov
rclb
enter
inc
cmc
inc
pop
push
jo
sub
fcmovnb
push
add
jo
push
cmp
xor
mov
cs
lea
iret
mov
jp
mov
repz
sbb
rclb
jge
ja
pusha
mov
pop
xlat
sub
ret
das
cmp
popa
js
loop
das
jo
out
xlat
mov
icebp
push
ja
cmp
push
add
jo
mov
add
add
jo
popa
dec
mov
sub
push
ja
rcrl
scas
inc
insl
filds
fmull
setbe
rol
scas
and
jno
jo
aad
pop
inc
jb
jns
iret
addr16
push
push
xchg
lock
inc
jo
lahf
gs
dec
sbb
mov
in
dec
xchg
movsl
stc
mov
add
stos
ljmp
orl
data16
call
jnp
in
sahf
out
mov
push
mov
outsb
xlat
xor
fsubrs
nop
add
mov
andb
out
xchg
or
pop
add
pop
call
cltd
jo
mov
push
push
jo
xlat
or
jo
fdiv
jmp
jmp
cmp
cwtl
aas
mov
pop
xchg
sahf
and
repz
insl
mov
sub
push
ror
loopne
jo
sbb
inc
sub
cltd
mov
adc
shrb
enter
pop
test
mov
or
leave
jo
fwait
stc
inc
loop
rcrl
das
test
mov
add
pop
jp
jo
in
sbb
inc
pop
push
adc
aam
outsb
jns
orl
push
pop
mov
sbb
cld
jb
add
mov
and
xor
std
pop
fistl
es
aas
int
mov
lcall
jecxz
adcb
and
sub
fstpt
sahf
out
cmp
jmp
sbbb
sbb
daa
out
jo
sub
ja
sub
outsb
jo
xchg
sbb
xchg
std
jno
pushf
mov
ja
adc
in
inc
hlt
jo
add
push
ljmp
jecxz
movsl
std
shll
add
mov
out
shll
bound
mov
adc
push
pop
and
stc
mov
daa
add
jle
jg
sbb
lods
movsl
jo
cmp
out
jns
and
cmpsl
lods
and
loop
lock
pop
jo
lea
ja
sahf
out
roll
ffree
lret
xor
ja
xlat
xchg
imul
das
ret
lock
aas
lock
add
push
push
out
pop
jo
cmp
mov
ss
repnz
rclb
lret
or
aaa
aam
enter
shrb
cmc
jo
stc
pop
bound
iret
jo
jmp
mov
push
std
cmp
jp
jbe
jo
psubq
pop
jns
test
das
push
js
bound
sbb
jmp
nop
mov
hlt
cmc
sbb
sub
sahf
add
outsl
inc
lock
or
jo
jne
cmp
xlat
jo
iret
fimuls
adc
xor
addr16
mov
pushf
mov
cmp
enter
push
add
push
jo
les
rcl
insl
mov
mov
jg
bound
mov
and
add
pop
mov
cwtl
xorl
sbb
pop
and
push
ss
push
mov
dec
pop
inc
clc
jo
cs
push
hlt
repz
into
rclb
pop
lods
je
xor
sbb
repz
dec
jo
faddl
fnstenv
adc
popa
cltd
aam
outsl
or
push
push
mov
jo
push
xor
sysexit
popa
ds
test
sbb
int
sbb
cmp
jo
lret
add
imul
mov
xchg
jecxz
shlb
jno
popf
fistl
or
mov
push
sti
add
xchg
mov
mov
jo
and
jo
push
inc
jnp
in
xchg
pop
nop
and
shll
and
lcall
mov
xorb
push
popa
aas
dec
ss
jo
sahf
imul
cmp
ljmp
lock
jg
sbb
outsb
xor
mov
add
lods
push
lret
fstps
roll
bnd
or
cmpsl
pop
mov
dec
mov
ss
add
push
cmpsb
sti
inc
jo
sbb
gs
jae
jo
arpl
stos
out
insl
cmpsb
test
cmp
idivl
push
push
add
outsb
arpl
cmp
ss
jg
test
pop
pushf
insl
push
xor
mov
cmc
fdivr
cmp
push
dec
xchg
jo
rolb
sub
lods
xchg
jo
fisubrs
or
in
push
test
jl
push
enter
jo
test
daa
mov
cmpsb
add
inc
and
popf
jo
lock
adc
fidivl
into
inc
gs
jo
out
sub
jo
xchg
outsl
add
aas
mov
loope
jnp
std
add
cmp
ret
mov
mov
les
lcall
pop
cli
xchg
js
cmp
or
int
les
cmp
lock
push
inc
push
jae
xchg
sub
leave
lock
push
ja
cwtl
pop
mov
adc
mov
push
inc
dec
xor
lods
mov
mov
inc
out
loop
jae
js
inc
lret
add
jo
cwtl
or
cltd
aad
shll
inc
pop
dec
dec
cli
xor
sub
jo
ret
mov
rcrl
jo
lea
push
jl
adc
add
faddp
lods
dec
fcmovnu
jo
imul
jo
pop
push
sbb
jmp
outsb
jo
add
mov
leave
ds
inc
imul
mov
mov
clc
pop
push
adc
lcall
jo
adc
mov
jo
imul
mov
push
mov
lret
mov
or
jo
inc
and
mov
movsb
ret
ret
xchg
or
shlb
fstpl
jno
jo
hlt
xor
and
loop
and
loopne
insb
mov
cwtl
inc
sbb
insl
fiadds
addb
leave
pop
int
inc
jg
jo
or
cmp
jo
fisttpll
dec
out
mov
ja
call
push
pushf
mov
jo
sub
daa
ja
test
stc
mov
les
addb
fisubrs
arpl
imul
mov
add
bound
dec
jmp
outsb
xchg
and
fistl
or
or
push
in
mov
rorl
jl
popa
test
mov
insl
lret
mov
fs
dec
mov
jp
sbb
jo
sbbb
inc
sub
add
pop
test
or
cmpb
xchg
and
nop
jo
push
rcr
int3
jmp
mov
push
mov
push
insb
sarb
dec
cmp
aad
cmp
int
adc
xor
rcrl
adc
mov
nop
mov
and
ss
ja
divb
cmpsl
inc
add
ja
ror
mov
xor
xor
mov
xchg
insl
fisubrl
adc
xor
dec
sbb
pop
xchg
push
push
pop
mov
insl
sub
jo
lods
repnz
adc
cs
adc
mov
adc
sti
or
fistpl
mov
push
loope
push
les
and
dec
stos
or
xchg
outsb
push
jle
shrl
insl
cmpsb
sbb
in
pop
popf
inc
cmpb
jg
cmp
xchg
push
dec
dec
xor
lock
jnp
inc
push
jo
cltd
cmpsl
cmp
sarb
pop
jo
repz
sbb
sti
dec
cmpsl
je
fs
enter
scas
cmp
xchg
rolb
cltd
dec
or
xchg
xchg
or
outsl
dec
pop
xor
jo
fcoms
xchg
jo
movsb
push
jl
cmpsl
daa
push
xchg
jo
test
lahf
rcrl
cltd
xor
pop
aad
insl
cmp
lods
sub
imul
mov
hlt
movsl
pushl
jle
jo
mov
sbb
jecxz
lahf
sbb
jo
push
fnsave
jne
inc
push
clc
lods
jo
adc
sub
repnz
jae
stos
rcrb
std
ret
mov
jo
pop
inc
add
jb
xor
dec
sub
and
adc
xor
push
xor
pop
mov
jne
jo
stos
int
xchg
add
jo
mov
and
jp
scas
push
popf
jo
adc
or
je
mov
loopne
or
fists
popf
or
mov
out
lock
sub
stos
pop
and
mov
inc
push
dec
cmp
out
add
fidivl
pop
and
jo
ret
shr
es
pop
mov
sti
xor
ss
loop
in
jo
mov
jae
ja
mov
sub
icebp
jo
or
sbb
inc
pop
jo
ljmp
aad
cmpsl
repnz
cli
and
jo
leave
int3
out
mov
pop
adc
loopne
jo
scas
ds
adc
pop
adc
jo
mov
outsb
sub
adc
xchg
ret
mov
lock
mov
push
jo
arpl
stos
mov
pop
add
push
jo
jae
dec
imul
int
repz
js
push
push
xor
sbb
push
mov
or
sub
mov
push
push
inc
popa
sub
mov
jo
fstps
xchg
sbb
jo
or
divl
in
pop
sbb
jo
loop
stc
cwtl
leave
lea
sahf
jae
mov
lahf
pop
sub
arpl
cmp
pop
mov
inc
loopne
sbb
xchg
icebp
movsl
adc
jle
repz
dec
loop
gs
jno
mov
enter
fs
imul
sub
repnz
mov
gs
fcoml
cmpsl
jmp
mov
ss
ja
gs
pop
loopne
xchg
mov
or
pop
jne
jne
fnstenv
arpl
push
mov
inc
pushf
pop
and
mov
push
sub
xor
pop
in
lds
and
test
dec
into
mov
jle
mov
inc
push
arpl
movsb
jo
cmp
ja
sub
insb
in
cmp
outsb
pandn
jmp
or
jo
push
movsl
int3
jo
lahf
push
mov
dec
sahf
ljmp
rol
inc
pop
lock
lahf
loopne
push
insl
inc
adc
stos
xchg
push
leave
inc
addr16
xor
ss
and
fcmovb
dec
inc
cld
imul
dec
shl
add
insl
push
stc
dec
mov
jns
fdivl
scas
adc
icebp
mov
mov
int3
or
xor
sbb
in
or
jo
add
xchg
leave
adc
inc
call
lcall
ret
out
or
arpl
dec
xchg
enter
aaa
leave
scas
lock
sub
loop
xor
fs
stos
lea
jo
out
mov
mull
push
jo
inc
cwtl
test
enter
add
jmp
lahf
add
xchg
mov
xor
adc
icebp
pop
lock
shll
jg
fwait
enter
std
cwtl
sbb
mov
adc
xchg
cmp
fnstenv
push
aaa
or
or
dec
jl
notl
out
pop
das
lods
push
pop
daa
pop
mov
orb
fisttps
mov
mov
les
jle
ss
cmp
hlt
and
cmpsb
adc
stos
jo
test
int3
push
andb
insb
rcrl
jo
adc
cli
mov
clc
and
dec
jmp
jecxz
stos
popf
fdivrl
push
nop
andl
jmp
mov
xor
jo
outsb
mov
jbe
push
adc
mov
out
mov
nop
jge
shl
rorl
jo
lret
push
push
xchg
pop
cmpsl
setns
je
push
test
bound
negl
sbb
jo
iret
or
jo
pop
loopne
mov
mov
jo
aaa
mov
adc
je
xor
in
mov
pop
lea
data16
fiaddl
movsb
mov
cmpl
fdivr
and
xlat
mov
cmp
jo
adc
rcr
jo
test
imul
lock
push
jp
outsb
test
jmp
mov
mov
mov
mov
cmp
imul
clc
mov
arpl
pop
pop
mov
shrb
mov
hlt
push
lret
mov
ja
loope
cmpsb
adc
fsubrs
and
mov
xor
jo
into
xchg
daa
decl
ret
lahf
cmp
xlat
je
sbb
mov
push
add
testb
cmp
mov
jo
rclb
xor
out
or
xchg
and
pushf
insb
jo
adc
ja
and
inc
mov
push
add
xchg
jp
lds
iret
nop
shrl
inc
mov
sbb
xor
test
jl
xchg
and
dec
popl
jo
xchg
mov
pushf
aaa
mov
adc
loop
adc
xchg
pusha
and
and
mov
enter
jo
push
mov
inc
xchg
mov
sub
inc
ret
pusha
cmpsl
pop
mov
inc
mov
nop
sbb
repnz
adc
xchg
dec
ja
mov
lcall
fs
pop
fstpt
outsl
jecxz
xchg
sarl
mov
rcrl
mov
shll
jo
repz
std
inc
mov
sub
xlat
xchg
imul
movsb
push
mov
cmp
aaa
sbb
out
sub
xor
xor
cmpsb
loop
add
ja
adc
mov
jo
xor
jmp
test
jo
mov
inc
dec
mull
jnp
testb
mov
out
jae
xchg
imull
mov
inc
sbbb
in
arpl
mov
jo
lret
jbe
pop
mov
jo
int
cmp
cltd
hlt
test
mov
mov
inc
je
pop
jle
insl
lret
cld
jl
int3
or
fstpt
test
pop
sbb
aam
mov
and
insb
scas
test
add
insl
push
sub
lcall
dec
sahf
jo
inc
std
add
cmp
pop
xchg
xor
dec
fs
mov
sbb
int
jp
lock
cmpsl
clc
push
jo
roll
fs
iret
jo
dec
test
test
push
mov
jns
sbb
mov
xorb
adc
push
push
cli
dec
insl
push
mov
gs
mov
sub
mov
pop
jo
pop
fisubrs
push
push
dec
pusha
nop
jo
sub
jo
push
in
jo
xchg
int3
ss
and
call
lock
inc
test
jmp
inc
movl
adc
fldenv
test
jo
addb
xor
xor
scas
sub
inc
adc
pop
xor
adcl
sub
pop
bound
imul
cmp
lock
xor
pop
or
ja
push
je
push
mov
jo
mov
aas
inc
jo
shll
xchg
dec
ficompl
or
out
mov
fwait
push
cmp
outsb
mov
inc
test
fidivrl
inc
div
cmp
pusha
lret
jo
mov
stos
or
insb
add
imul
stos
faddl
popf
es
jns
and
mov
jo
pop
mov
rclb
lds
adcb
push
mov
xchg
jnp
jae
sbb
frstor
jbe
repz
out
dec
xchg
lods
cmp
jo
mov
out
gs
lock
mov
sar
jo
fsubrp
cmpsl
jbe
xor
insl
dec
sbb
mov
push
inc
jo
jmp
gs
mov
push
insl
lock
fstpl
inc
fbstp
rcrb
iret
imul
mov
jp
shl
imulb
cmp
push
xchg
jo
mov
and
jo
jmp
push
dec
insl
ret
rclb
enter
jno
leave
ja
testl
jae
out
roll
push
jo,pt
adc
movl
adc
ret
fld
and
aas
pop
insl
add
and
addb
fisubl
xor
call
int3
addb
or
cmpsb
test
jo
and
in
sbb
dec
xlat
push
mov
mov
and
push
movsl
sahf
cmp
mov
sub
mov
in
fisubs
inc
mov
shlb
mov
testl
mov
push
mov
in
jo
mov
inc
push
xchg
jne
mov
sub
outsb
and
fnclex
add
mov
pxor
xchg
xorb
jge
test
cmp
sub
jp
cld
mov
jo
sub
int
and
insl
cmp
push
adc
add
gs
roll
adc
lahf
outsb
icebp
lcall
sub
xor
pop
jo
test
mov
mov
loope
add
dec
push
sahf
pop
xor
or
nop
shrl
jo
xchg
fs
out
adc
das
jno
inc
pop
lret
mov
mov
xchg
test
jp
cmpb
sub
cmc
shll
sbb
sub
jo
jp
scas
dec
adc
loopne
imul
jo
push
cmc
cld
inc
xchg
jo
push
adc
aam
push
mov
rol
add
mov
cmp
ljmp
xchg
cs
jo
in
lds
xchg
in
push
jo
xor
xchg
adc
dec
adc
xor
not
inc
mov
jo
mov
fisubs
sbb
mov
cmp
mov
adc
sbb
mov
insl
or
push
push
and
divl
fwait
adc
lock
ret
sbb
xchg
jo
cmp
xchg
imul
jmp
and
test
cltd
push
mov
jge
and
push
cwtl
out
jo
arpl
cmp
adc
push
addr16
push
rcrl
add
dec
inc
and
mov
jp
jae
ja
sbb
jo
xchg
stos
mov
xchg
mov
gs
push
jmp
mov
insl
dec
adc
adc
jb
cmp
cld
cli
shll
ret
mov
decl
add
stos
imul
fdivl
repz
pop
dec
mov
lock
dec
enter
jae
or
xchg
pusha
mov
cwtl
push
xchg
pushf
xlat
sbb
mov
lahf
sub
in
push
gs
mov
data16
jno
out
outsl
push
sahf
pop
sub
dec
and
mov
ret
add
xchg
mov
roll
test
mov
fidivs
inc
insl
loop
icebp
jo
pop
addr16
lea
es
sbb
fstps
xchg
clc
test
rorl
lock
lods
adc
stc
cld
test
pop
pop
cmp
fs
test
insb
imull
push
push
addb
ja
es
pop
cmc
sar
inc
pop
jo
test
test
insb
jo
cld
xor
je
add
aam
pop
add
nop
lea
add
jo
fcomi
or
lret
xor
xor
dec
or
out
pop
sarb
inc
jo
fcoms
xor
inc
js
cld
jo
popf
mov
add
adc
jo
sbb
xchg
sbb
arpl
jo
outsl
mov
daa
pop
jo
push
aas
scas
xorb
jo
pop
test
sub
mov
pop
jo
fmuls
xorl
movsl
adc
jo
inc
jae
orb
cltd
jl
sahf
pop
lods
bound
jmp
mov
adc
repnz
jle
push
and
popf
jo
fimuls
push
pop
dec
jbe
es
pusha
fwait
dec
add
sbb
clc
sarb
test
adc
clc
xchg
xchg
jo
sbbb
add
das
mov
or
push
in
fcmovnbe
jecxz
cwtl
jl
insl
mov
cwtl
test
dec
lret
lods
ret
and
pop
jo
fildll
mov
jo
pop
dec
loopne
push
inc
pop
xchg
lods
mov
inc
jp
das
cmp
jo
and
and
lds
mov
test
idivl
test
scas
nop
add
dec
jo
cmpsb
add
cmp
sub
jo
fmul
xor
mov
scas
sbb
mov
cmp
fdivl
adc
cmp
xor
jo
push
fsubl
push
jae
clc
jo
pop
cwtl
push
repz
cmp
mov
mov
xchg
movsb
out
fildll
jo
cmp
sbb
pop
aaa
aas
ret
arpl
lret
insb
clc
xchg
add
xchg
jae
mov
adc
popa
daa
mov
inc
pop
sub
jne
push
jo
mov
dec
insl
sbb
fwait
testl
jbe
mov
mov
jo
adc
pushl
add
adc
out
jle
repz
and
push
setle
cmp
imul
mov
ljmp
mov
mov
or
loopne
aam
add
movsl
orb
adc
pusha
pop
orb
insl
sbb
jo
cmc
dec
mov
jo
mov
ss
imul
enter
pop
sbb
imul
addb
popa
inc
inc
sbb
xchg
push
not
add
xlat
rcrb
jbe
cs
mov
mov
xchg
icebp
jo
imul
in
jo
xchg
push
jle
pop
inc
loop
lock
push
jo
mov
push
ss
ret
mov
jbe
lds
mov
stos
nop
and
out
jo
pop
shll
jo
pushf
cmpl
adc
loope
je
push
or
lock
cmp
push
test
fdivl
test
adc
add
popf
mov
mov
fidivrs
inc
dec
aas
cmp
leave
pop
imul
push
or
and
adc
and
xchg
mov
dec
lret
movsb
pop
hlt
mov
shr
mov
fistpll
jo
inc
pop
push
jne
into
dec
jo
push
loope
in
rcll
jp
lcall
jg
cmpsl
out
fidivrs
jo
add
xchg
cld
fwait
in
mov
dec
repz
mov
jo
push
mov
cli
mov
jo
mov
xchg
sbb
std
outsb
sbb
sbb
dec
lock
pop
insb
mov
daa
jo
and
cli
pop
fdivl
inc
and
sub
out
aas
imul
jp
repnz
adc
or
jo
outsb
in
dec
rcl
sub
push
jo
aaa
out
ficoml
shr
clc
stos
test
inc
jo
and
iret
cmp
mov
xchg
sub
inc
jbe
sbb
jo
stos
ror
add
inc
jo
repnz
adcl
or
sahf
pushf
and
jo
sub
stc
repz
jo
dec
xlat
pushf
and
push
mov
fildl
xchg
popa
jo
inc
mov
pop
jo
pop
ficomps
push
mov
scas
orl
xchg
xchg
insb
inc
mov
rcll
xor
inc
mov
out
jge
mov
mov
cmpsl
jae
mov
cmp
hlt
mov
xchg
and
test
nop
jno
rclb
shl
push
std
mov
sub
femms
mov
cs
inc
sbb
xor
mov
mov
loope
fwait
ret
sbb
mov
hlt
jae
jbe
pop
outsb
pop
loopne
aad
js
int3
jnp
xchg
jo
cld
jno
sbb
mov
popf
mov
or
roll
fbstp
mov
push
in
push
jo
ret
cltd
repnz
into
jo
xchg
movsl
lods
and
lods
insb
adc
push
mov
insb
mov
and
jo
and
leave
aaa
xchg
pop
adc
sbb
jo
fstpl
mov
rol
push
pop
cmp
in
dec
dec
sub
jo
lods
fisubs
roll
sbb
dec
and
outsb
dec
mov
ret
mov
xor
movsb
sub
rclb
pop
dec
pop
mov
enter
xchg
jecxz
or
dec
sbb
lock
push
cli
mov
out
icebp
imul
cmp
loop
adc
pop
cmp
push
sub
into
jno
lret
mov
xchg
lds
out
lods
in
mov
and
xorl
mov
cmp
mov
sbb
sti
jne
loope
pop
push
jle
sbb
insb
int3
xor
add
outsl
test
jo
in
sub
jo
stos
cmp
jo
pop
jge
inc
cmp
push
orb
dec
inc
mov
and
jae
jb
pop
sbb
andb
push
lret
xchg
lock
into
adc
jo
fwait
xor
idivb
ss
cmovae
loopne
cmc
push
fsin
and
inc
fisubs
orl
movsl
repnz
mov
jo
ficoms
pop
cs
hlt
fwait
hlt
push
inc
mov
cmp
rcl
fsubs
and
bound
add
jo
pcmpeqb
clc
cwtl
xchg
jo
addr16
out
shll
jo
popf
sub
adc
fs
das
mov
das
push
push
stos
dec
jg
jo
mov
and
nop
jecxz
sub
add
cmc
test
push
test
push
pop
sti
push
push
mov
pop
outsb
push
cwtl
mov
insl
mov
ret
xchg
aaa
jbe
mov
mov
jo
xchg
push
repnz
loope
pushf
popf
aam
jo
into
cmp
xchg
mov
cmp
push
fidivrs
jmp
pop
shll
mov
sub
or
lods
pop
pop
xlat
nop
lock
lods
dec
cmp
mov
cld
mov
jg
or
mov
ror
jo,pt
pop
jp
negb
xchg
xor
lods
dec
mov
dec
outsl
dec
gs
sub
lret
lcall
stos
ljmp
imul
push
sar
sbb
xlat
cmpsb
inc
adc
adc
stc
and
daa
jecxz
jo
xchg
mov
lods
stos
xor
ja
cmpsb
push
inc
std
lock
rorl
into
sbb
insl
popa
out
rol
mov
ret
jmp
insl
inc
mov
and
outsl
ror
stos
shlb
enter
sbb
inc
jo
int3
lret
lcall
cmc
jne
pop
mov
jo
movsb
or
jo
adc
daa
pusha
fistl
imul
push
lock
dec
sub
inc
lods
sbb
push
jnp
cmp
pop
and
aaa
jo
iret
mov
gs
mov
xchg
xor
pop
xor
xlat
sbb
dec
and
sbb
xor
fcomps
or
jp
out
lock
ja
jo
cmp
sub
cmp
jo
and
int
jo
dec
and
adc
andb
gs
ret
jo
divl
sub
insb
addr16
add
sub
dec
outsb
cli
decb
cltd
push
mov
mov
mov
adc
pop
lea
push
pop
adc
fdivs
pop
jae
cmc
pushf
jnp
push
mov
pusha
jo
sub
sub
mov
jo
push
jbe
fiaddl
inc
jo
and
in
cmpsb
xchg
fldenv
gs
inc
mov
push
data16
sbb
cmp
ss
mov
adc
or
pop
xchg
mov
insl
sbb
mov
fwait
incl
cmpsb
out
insl
jp
enter
dec
cltd
mov
pop
push
jnp
adc
mov
mov
add
dec
add
loopne
sarb
and
movsl
in
xor
xchg
push
clc
xor
push
jl
xrstors
sub
sub
loop
lods
insb
or
je
mov
jo
lock
push
aas
inc
mov
clc
inc
bound
ja
movsl
sbb
lds
pop
adc
adc
lock
frstor
jo
mov
xor
jo
and
icebp
dec
inc
xchg
inc
jo
fdivr
or
cmp
fwait
test
fiaddl
cltd
pop
xchg
repz
xchg
insl
je
jns
inc
mov
orb
cmpsb
mov
xchg
jo
xlat
sbb
daa
cmp
or
cli
sub
int
mov
scas
inc
imul
xlat
jns
stos
push
mov
fisttpl
jp
ret
jecxz
xor
cli
in
clc
div
movsl
mov
lret
pop
push
cmpsb
cmp
push
std
fildl
fwait
mov
test
push
inc
js
mov
jo
jns
xchg
xchg
dec
fldln2
jo
aas
out
push
cmpsl
pop
xlat
jo
mov
xorl
inc
and
subb
pop
fcmovnu
sub
jb
mov
sbb
subl
nop
xlat
divb
sahf
pop
std
shlb
jp
sbb
lods
into
icebp
mov
jae
fldenv
ret
jo
loope
dec
and
sbb
push
mov
jo
pop
stc
aam
or
jo
rcl
dec
push
arpl
je
jo
mov
fisubl
xor
mov
jmp
insb
cwtl
aaa
cmp
adc
mov
jo
hlt
mov
and
pop
xchg
cmpsb
test
orl
jo
and
es
jmp
divl
pop
jmp
punpcklbw
mov
cld
jo
add
sub
jo
test
or
inc
out
cmp
jle
mov
push
jo
and
dec
cmpsl
jns
shrb
cmc
pop
cmp
xor
xchg
jo
imul
jo
and
fdivrs
or
add
mov
nop
scas
push
mov
imul
jge
add
into
cmc
subl
jo
mov
xor
test
and
shlb
out
mov
push
pop
test
pop
or
push
pop
scas
pop
and
lock
jo
out
cltd
cwtl
sub
test
stos
jp
mov
mov
gs
pop
enter
jo
jb
lret
rcl
dec
adc
dec
xchg
mov
mov
mov
push
and
bound
adc
ljmp
xor
stc
push
je
lods
loope
fwait
jle
aaa
pop
dec
sarb
ret
xor
lahf
jbe
loope
push
mov
or
sarb
jo
mov
popf
mov
sbb
cmc
inc
cmp
sub
std
pop
dec
mov
inc
push
lcall
jo
adc
dec
adc
ret
int3
xor
inc
dec
cmp
jp
shrb
dec
stc
pop
incb
fdivrs
sub
and
xchg
test
push
jo
xor
sub
dec
sti
in
mov
lea
mov
push
shrb
xlat
and
sub
cmp
loop
inc
fadd
mov
jo
cmp
sub
ss
pop
lods
push
pop
jo
mov
jo
iret
adc
xchg
xchg
xchg
shrl
clc
xor
jae
jg
std
and
out
jo
mov
add
lcall
xor
xchg
shl
mov
xor
add
push
ja
cltd
xchg
rcrb
sub
ja
mov
xor
and
popa
das
setl
push
rorb
arpl
mov
pop
icebp
xor
jo
notl
and
fists
and
jo
xchg
inc
popf
lea
divl
sub
js
data16
jo
aam
mov
jo
mov
arpl
pop
lods
aad
push
push
ds
jo
xchg
aaa
movsb
xor
scas
pop
addr16
xor
in
jo
mov
cmp
lods
mov
add
lahf
lret
imul
xlat
pop
and
lret
mov
int
pushf
dec
cltd
jmp
jo
in
lods
pusha
adc
sbb
cmp
push
lock
fsubrl
dec
ljmp
jo
push
adc
lock
jo
les
cld
dec
push
and
xchg
sub
mov
pop
lds
std
roll
pop
or
adc
fisttps
popa
repz
dec
ret
mov
gs
es
and
xor
jecxz
fidivrs
xchg
sbb
ret
dec
in
push
test
add
leave
arpl
xchg
push
xor
fsubs
mov
jo
push
mov
cmpsb
dec
idivb
jo
in
das
pop
cli
into
ja
xchg
inc
dec
mov
aas
cmp
sbb
lcall
inc
mov
jno
fisttps
out
xchg
stos
push
or
mov
jne
ret
cmp
jo
mov
mov
aam
icebp
inc
dec
dec
xchg
and
jmp
sub
and
iret
fistl
inc
pop
add
arpl
mov
xchg
out
push
jo
ljmp
mov
sub
insb
lock
mov
or
jo
mov
out
add
pop
xchg
es
stos
push
mov
imul
insl
in
pop
int3
xlat
mov
orb
sub
dec
outsb
mov
or
jne
xchg
sub
in
out
mov
loop
mov
jno
dec
jle
mov
push
call
mov
and
jae
push
xor
add
adc
jns
clc
pop
and
xchg
repz
scas
jo
shll
mov
jg
rorl
jo
and
pop
loop
push
out
pop
sahf
mov
inc
mov
jg
nop
adc
iret
jo
jl
test
ja
or
stc
jge
or
mov
ja
pusha
fwait
test
xchg
mov
mov
sub
and
mov
insl
xlat
sub
xchg
movsb
addr16
push
mov
fwait
jl
push
xor
out
jo
adc
adc
lods
jo
cmpsl
fsts
push
lret
jmp
pop
ret
roll
out
popa
fnstenv
in
shr
test
jo
scas
adc
outsl
jo
jno
pop
push
and
fidivrl
mov
or
xchg
js
pusha
into
enter
jae
pop
addr16
loope
and
fiaddl
movsb
verr
jo
xchg
scas
lods
call
jge
jo
mov
push
xchg
insb
cmp
insl
fbstp
fcompl
js
call
dec
lds
inc
test
push
push
imul
lods
sbb
sbb
int
icebp
mov
cmp
mov
dec
cwtl
jo
mov
scas
ja
and
push
roll
jae
pop
ret
jmp
sbb
sub
jo
jp
fnstsw
lock
cmp
call
mov
insl
or
fcmovu
jecxz
mov
outsw
shlb
les
jo
push
scas
mov
dec
cmp
xchg
jmp
and
lods
and
jo
sbb
pop
add
cmpsb
inc
popa
dec
jnp
notl
mov
pop
hlt
jnp
fistps
loope
mov
mulb
jnp
jne
dec
jns
xchg
xchg
arpl
jo
pop
pusha
push
push
lahf
push
and
fnstenv
cs
nop
dec
mov
mov
jbe
mov
into
dec
mov
out
cld
aaa
push
mov
pusha
xchg
inc
out
and
add
jo
dec
aad
push
mov
pop
lret
mov
lods
out
fsubrs
mov
adc
data16
mov
stos
lds
push
popf
int3
ja
out
idivb
jle
js
dec
sbb
mov
je
imulb
pop
dec
jo
mov
xchg
and
jne
mov
cmp
jge
fcom
cwtl
jno
jo
lahf
test
sbb
xor
sar
roll
sahf
or
mov
jo
ret
movsl
cmp
mov
test
fldcw
mov
mov
pop
push
pushl
xchg
shl
and
lcall
jmp
imul
leave
jo
adc
inc
dec
cmc
ret
std
pop
sub
mov
sahf
pusha
and
xchg
int3
sub
xor
das
movsb
aad
arpl
and
shlb
pop
movsb
xchg
mov
ss
loopne
divl
cmpsb
jo
fisttpll
pop
mulb
jo
mov
inc
inc
add
jo
ret
xor
out
mov
lock
push
mov
xchg
pushf
lock
sbb
sbb
dec
sarl
jo
cmc
int3
sti
fistpl
push
jo
pusha
loope
movsb
jbe
lock
outsb
leave
inc
nop
adc
jp
test
fstl
xchg
pop
xchg
xor
jle
int
cmp
gs
ljmp
xchg
movsl
fs
adc
fdivl
clc
mov
mov
jae
lods
xor
pop
jne
fstps
push
lock
add
addr16
mov
je
pop
gs
push
inc
pop
ret
xchg
mov
jo
and
cmpsb
cmp
lds
fildl
out
jo
xor
cmp
pushf
adc
mov
divb
adc
popf
aaa
jo
mov
fstpl
ret
lahf
sub
push
mov
movsb
jno
int3
sbb
mov
das
mov
and
ds
mov
jo
fnsave
add
xorl
pop
mov
or
or
inc
sbb
addb
push
xchg
xchg
fildll
xchg
int3
mov
and
xor
and
ds
push
dec
push
pop
stos
cmp
lds
iret
jecxz
dec
popf
je
mov
jo
enter
mov
popa
inc
and
bound
fnsave
je
add
mov
sub
cmp
cmpsb
test
sbb
jmp
inc
mov
je
loope
jo
jo
cmp
adc
insb
cwtl
mov
push
jns
push
jge
add
jo
and
popf
lods
xor
es
call
inc
cmp
out
testb
push
jo
push
xor
jno
in
cwtl
insl
mov
add
xchg
and
aam
mov
ficoml
sar
addr16
lret
jo
mov
dec
in
add
pop
mov
popa
sub
mov
repnz
mov
xlat
pop
imull
adc
xor
push
daa
jo
ss
sub
in
jo
sbb
loopne
xor
into
daa
cli
inc
insl
mov
mov
rclb
loop
fxam
stos
jbe
mov
addl
test
cmc
fdivl
xor
jl
cmp
sbb
jp
imulb
push
mov
leave
lock
fwait
push
arpl
inc
cmp
jo
cmp
xchg
mov
out
push
loop
mov
imulb
daa
fstp
popa
lds
lret
xor
mov
mov
add
nop
mov
push
inc
pop
sub
imul
mov
test
adc
test
jmp
jo
les
notl
dec
adcb
addr16
leave
push
jbe
aaa
cli
jp
jne
mov
and
sub
mov
icebp
and
jp
adc
pop
call
dec
fcoml
pop
mov
jo
scas
adc
jl
mov
push
mov
jb
pop
das
push
inc
sahf
scas
adc
push
and
loopne
andl
sub
popa
mov
cld
jno
in
fs
push
and
test
pusha
das
xor
add
out
std
adc
ss
jno
cmc
fdivrs
mov
jae
sub
push
ljmp
fs
mov
loope
push
daa
dec
shlb
adc
imul
add
xor
cmp
inc
jno
push
mov
insl
mov
cmp
and
or
rclb
inc
test
jmp
mov
fdivrl
xorb
int3
mov
js
and
pop
pop
pop
fs
adc
ljmp
les
std
pop
bound
sbb
pop
push
push
and
mov
icebp
sbb
into
mov
daa
cltd
dec
call
ficoms
jle
and
es
xchg
pop
imul
mov
je
cltd
sahf
inc
popa
shrl
out
fucomi
xlat
jo
push
mov
jae
inc
inc
js
add
scas
cwtl
inc
outsb
nop
adc
mov
push
jmp
fistl
out
mov
adc
test
and
ljmp
nop
mov
mov
sti
mov
push
mov
clc
sub
orl
dec
dec
cmp
insl
imul
out
out
or
sub
jo
popa
mov
jo
sti
hlt
dec
and
icebp
jo
call
jle
imul
jge
popa
ja
jo
or
roll
aas
addb
shlb
lahf
sbb
shll
sub
pusha
std
jne
dec
pop
jo
test
lret
jp
sbb
aaa
dec
incl
jg
lahf
adc
inc
cmpsl
and
pop
fs
daa
jae
loope
sahf
cs
sti
jo
push
push
xor
push
std
xchg
out
lret
sbb
and
jp
cmpsl
add
dec
push
pop
aad
mov
lods
and
pop
repnz
sbb
das
jo
hlt
mov
stos
lea
jl
push
mov
mov
outsl
mov
lret
mov
cmp
push
fucomip
add
js
ror
int3
insb
insl
cli
sbb
clc
xor
or
dec
aam
inc
xor
insl
xlat
pop
iret
in
hlt
mov
dec
mov
imul
and
and
iret
mov
imull
pop
dec
pusha
or
or
jo
ds
xor
ja
mov
xor
sub
out
pushf
jno
xor
or
imul
lods
push
nop
subb
ja
insl
fildll
add
sub
test
jo
xchg
lahf
adc
cld
fists
mov
into
pop
loopne
sub
and
mov
fisubs
and
mov
xor
xchg
roll
xchg
jmp
cmp
nop
nop
test
and
mov
jo
mov
bound
or
mov
pop
mov
popf
jnp
loopne
sub
pop
jae
mov
fwait
mov
jo
pop
push
cmp
jge
ret
mov
pop
out
aas
dec
jp
outsb
jo
test
popa
jo
jae
lret
push
leave
add
jo
lea
mov
xor
push
add
inc
clc
or
popf
xchg
push
rcrb
mov
xor
xchg
xor
xor
inc
out
inc
testl
xchg
aad
xchg
sub
pop
negb
mov
cmovnp
adc
jae
sub
pop
mov
es
pop
sub
cld
inc
mov
cmp
jo
mov
out
push
js
popf
call
lea
cmpsb
add
cmpsl
pop
mov
lock
cltd
in
inc
jo
fwait
mov
int3
test
sbb
pop
aam
xorb
sbb
or
xlat
jo
sarb
movsl
jp
cmp
aam
pop
lea
xchg
push
jo
rclb
cmpsb
jno
filds
dec
xor
insb
mov
jae
pextrw
jl
jg
out
stos
test
add
cmpsb
mov
rclb
lds
fwait
and
movsb
rolb
xchg
jo
inc
and
adc
pop
ja
repnz
adcl
mov
pop
in
mov
call
fiaddl
fldcw
insl
xchg
mov
sti
mov
or
insb
fsub
mov
pushf
iret
pusha
jo
fdivs
sarl
lret
inc
mov
test
ja
fmull
repnz
mov
jbe
jmp
xchg
popf
loopne
sub
insb
lds
jg
popa
loopne,pn
jo
xchg
les
inc
dec
push
xchg
scas
lret
aas
outsl
shll
clc
xor
cs
popf
jo
ja
pushf
jp
insl
fsubr
lcall
dec
cwtl
jg
jo
ret
and
fs
int3
adc
lahf
jo
fcomp
mov
ret
out
jo
jb
lret
xor
sub
xchg
jo
and
and
iret
adc
cmp
mov
mov
and
pop
jo
sbb
or
jo
fisubs
pusha
mov
cmpsb
xor
push
cmp
int3
inc
mov
and
shl
jo
add
repz
add
jo
dec
sub
cltd
sbbb
push
push
out
push
and
mov
jae
sub
in
pop
mov
pushf
into
mov
push
pop
iret
or
ja
fidivs
mov
negb
xor
xor
loopne
aad
enter
jne
xchg
lods
lcall
inc
pop
cmp
pop
and
jo
sbbb
xor
std
ret
jne
lock
and
dec
movsl
loopne
adc
xor
sub
insb
pop
add
mov
dec
std
shlb
xor
add
mov
addl
fistl
jmp
ret
xchg
add
jo
cmpsl
sbb
sub
add
and
stc
lock
addr16
jnp
pop
xor
jo
int
lds
pop
mov
cmp
push
push
es
pop
lahf
out
pop
jo
ljmp
inc
xchg
fdiv
arpl
adc
sarb
std
lock
and
sbb
xor
mov
dec
clc
out
jae
cmpl
add
pop
movsb
int
xlat
mov
cmpsb
inc
jo
push
aad
mov
push
xchg
gs
dec
dec
jo
push
xor
or
arpl
arpl
jne
ret
cld
cmp
xor
pop
js
sub
ja
lahf
xchg
aad
sar
push
cmp
fidivs
popa
ljmp
jb
xchg
das
jnp
jo
mov
out
fdivrs
adc
mov
jle
sbb
test
sti
mov
push
imul
inc
mov
dec
jle
cs
jo
lds
test
enter
pop
cmc
pop
inc
mov
shlb
push
push
sub
pop
pop
xor
sbb
loope
inc
js
push
jo
ds
or
add
aad
out
scas
pop
jo
and
jmp
repnz
inc
mov
and
icebp
cmp
adc
jo
inc
nop
jae
clc
and
push
adc
jbe
push
nop
mov
jo
mov
nop
xchg
mov
test
jo
inc
and
sar
insl
sub
xchg
lret
jg
outsl
jge
or
aam
pop
mov
mov
push
xchg
dec
cwtl
adc
inc
fdivrl
pop
cmp
lahf
inc
sbb
xorl
mov
call
insl
or
push
xchg
cmp
push
jo
loope
xchg
pushf
adc
xor
or
insb
mov
mov
and
push
shlb
xor
mov
jns
outsl
pop
cmc
es
cmp
sub
hlt
sarb
movsb
outsb
xchg
adc
jg
dec
mov
jo
movaps
xlat
jo
shrl
jo
pop
mov
jbe
xor
loop
arpl
lcall
cltd
inc
lock
add
outsb
push
ljmp
cwtl
out
fistpl
lock
sub
repz
ja
dec
call
movnti
xor
divb
icebp
dec
inc
nop
dec
pop
push
sub
xor
push
jo
mov
movsl
outsb
daa
jp
jo
mov
cmp
je
mov
fwait
loopne
xchg
jo
iret
adc
pop
jo
int
xor
inc
mov
xlat
dec
lret
in
xchg
retw
jl
pop
sub
mov
jae
pop
adc
out
add
add
scas
ljmp
push
jp
imul
lea
fcmove
add
js
bound
and
ja
popa
aam
testb
mov
add
mov
pop
in
popa
in
jne
xorb
push
ret
jge
adc
mov
add
ja
pop
dec
cmpsl
stos
pusha
lret
dec
jo
mov
mul
jnp
in
dec
jo
mov
iret
jo
inc
push
lods
sub
cmp
jne
cmp
adc
jo
add
fs
jo
stos
js
lret
xchg
ljmp
and
lods
out
jns
mov
movsb
lock
or
enter
cmpsl
push
cs
dec
push
dec
pop
cmpl
stos
sti
xchg
ds
mov
mov
push
adc
ljmp
jae
arpl
xor
jo
mov
ficoms
and
jo
in
pop
jp
imull
aas
add
adc
jo
cs
mov
ret
mov
xor
cmpsb
sti
adc
nop
sub
jp
insb
jo
or
adc
jo
jge
inc
xor
insb
fstp
lcall
mov
sbb
loope
es
pop
or
stos
cmp
jmp
ja
test
mov
sbb
sub
lods
nop
cwtl
aam
hlt
jo
jle
inc
dec
adc
jbe
faddl
jo
out
pop
jnp
ds
jo
fnstenv
inc
stc
out
mov
jno
insb
js
jo
clc
mov
das
xchg
pop
fbstp
xchg
iret
mov
es
inc
and
push
jle
daa
aad
mov
pusha
das
add
xchg
lea
xchg
pop
dec
sti
or
in
cmp
imul
push
mov
jo
push
scas
addr16
jo
stc
push
jnp
add
insl
popa
xchg
and
jmp
lock
adc
jl
imul
mov
adc
push
popa
xchg
lcall
adc
dec
push
pop
rclb
jo
aas
ds
ja
sahf
mov
mov
add
xchg
jo
mov
mov
insl
mov
das
pop
lahf
mov
inc
jo
fwait
sub
je
xchg
rorb
push
lock
lea
into
or
lret
outsl
insb
mov
loope
idivl
push
enter
iret
xchg
jo
loope
mov
push
loop
or
aad
mov
mov
mov
jo
fnstsw
icebp
mov
je
cmc
mov
rorb
xorb
lods
test
loopne
jnp
dec
nop
or
test
mov
adc
repnz
fisubrs
scas
mov
push
or
insl
add
aaa
jo,pn
mov
adc
mov
or
cmp
cmp
push
push
js
hlt
jae
or
cwtl
js
inc
outsb
xchg
adc
call
ds
fnstenv
and
adc
inc
push
push
dec
add
jb
inc
repz
repnz
pop
and
fidivrs
pusha
xor
movsb
jo
lods
jnp
inc
xor
je
pop
dec
out
mov
mov
lock
insl
and
aad
or
sub
push
jns
pop
push
cs
mov
dec
jle
repz
sub
xchg
jo
pushf
sbb
dec
jl
in
movsl
adc
dec
out
shlb
push
ficoml
jecxz
mov
cwtl
insb
pop
cli
cmpsb
inc
cmp
sbb
and
test
xlat
lods
xchg
inc
jo
sub
rcr
hlt
or
inc
bound
xor
and
dec
lock
pop
adc
les
sbb
ja
ds
js
jo
add
push
xchg
adc
inc
fiaddl
pop
dec
dec
cld
mov
iret
jo
loope
jne
int
or
add
jo
ret
xchg
sub
mov
popf
push
inc
inc
mov
or
jo
pop
cmp
fwait
jp
popa
push
push
ljmp
xor
adc
adc
add
and
shlb
add
jbe
adc
sbb
add
add
push
xor
jb
sbb
inc
jae
cmpsb
jmp
xchg
bound
xchg
lock
jp
popa
js
iret
push
mov
fstl
dec
jne
pusha
ss
xor
movsl
popa
sbb
pop
je
mov
arpl
cld
jo
pop
jl
jbe
ja
das
dec
into
fcomip
sar
or
lods
sbb
mov
jo
faddl
mov
js
loop
inc
sbb
jo
push
nop
repz
mov
lea
add
adc
add
dec
or
dec
mov
lret
or
cmp
xchg
insb
imull
xchg
cs
cmp
add
js
push
pushf
jl
cli
sarb
push
jmp
shlb
jne
adc
xchg
repnz
pop
pop
jp
out
xchg
mov
adc
aam
in
popa
pushf
sarb
clc
xor
sbb
fsubl
idivl
in
adc
dec
mov
inc
test
ret
xor
rol
lods
mov
push
push
icebp
push
mov
push
mov
nop
hlt
sbb
es
daa
dec
jge
jne
pusha
xchg
push
push
push
in
nop
lds
xor
sub
std
ja
mov
push
mov
inc
inc
or
lock
add
jb
pop
nop
cmpl
jno
or
inc
cli
ret
pop
outsb
xchg
scas
jb
dec
push
lock
add
ja
add
popf
mov
aas
ret
data16
lock
jb
sbb
into
push
lcall
add
inc
xor
clc
xchg
cmpsb
daa
push
addl
xor
int
iret
mov
jo
ss
sub
mov
scas
cmpxchg
mov
adcl
aaa
je
pushf
scas
mov
insb
lahf
fidivs
jo
lods
xchg
fbstp
mov
jnp
outsl
ja
mov
lds
push
fs
sbb
out
jo
rorl
ficoms
mov
sahf
outsl
adc
pop
imul
insl
or
pop
fsubrs
sub
icebp
cmpb
pusha
lock
mov
jo
lods
movsb
pop
js
lock
lea
mov
push
das
jb
xor
sub
pop
and
ret
das
inc
mov
push
shlb
test
add
lods
aam
mov
inc
hlt
cs
inc
mov
dec
pusha
jae
adc
insb
decb
pop
ja
mov
aas
movsb
xor
sbb
add
dec
and
fisttpl
pop
xchg
pop
int3
in
jne
dec
sub
dec
cmpsb
clc
insl
push
imulb
dec
push
cli
ja
in
mov
jo
push
push
mov
fs
inc
icebp
cmp
and
imul
imull
fisttpll
mov
repnz
aaa
adc
in
jo
sbb
xor
jo
inc
data16
xor
jnp
jo
add
out
shr
jle
pop
les
ja
int
loopne
sbb
jo
dec
xor
pop
ja
mov
jo
mov
cs
jecxz
mov
out
fldt
shlb
jae
cmc
adcl
mov
xor
jo
push
or
cmp
cmp
test
fsubrs
push
inc
pop
cmpsb
jne
mov
scas
push
dec
jecxz
cmp
insl
push
pop
test
jo
cmp
pop
fbld
aas
pusha
or
xor
jo,pt
xor
sahf
xchg
xor
xchg
pop
aad
inc
cmp
data16
mov
adc
mov
pop
push
pop
mov
add
pushf
imul
dec
jle
jbe
push
xor
aam
and
pop
push
mov
ss
pusha
add
jo
adc
ds
push
test
inc
fildll
aaa
mov
inc
add
jo
mov
rcr
jae
loope
data16
xchg
loope
test
mov
out
aaa
jge
jae
jno
jl
repnz
lock
pop
pop
push
gs
inc
pop
pushf
pop
pushf
mov
pop
mov
inc
inc
cmp
in
cmc
jmp
testl
mov
jbe
ss
aas
and
shlb
incb
ja
and
fidivl
mov
pop
xchg
shlb
loop
jle
dec
jmp
dec
and
dec
fdiv
mov
das
aam
and
jp
cmp
pop
xor
jo
int3
mov
jnp
gs
jo
pop
dec
sbb
repnz
inc
mov
mov
add
call
dec
jae
int
xor
loopne
ret
push
jo
in
das
ja
call
add
jne
pop
xlat
jo
orl
stos
fs
decb
cmp
cmp
loop
xor
fstpt
jecxz
shlb
fwait
leave
jae
ficompl
xor
and
sub
xchg
aaa
jo
fistpll
movsl
xchg
test
bound
dec
inc
sbb
shrl
lret
xor
jo
sbb
lcall
dec
cmp
jo
add
or
and
sbb
insl
xorl
popf
push
popf
stos
nop
mov
inc
std
lcall
jge
jp
sub
loope
out
hlt
jo
lds
stc
xchg
pop
jae
adc
jecxz
ret
rcll
jmp
xchg
push
lcall
mov
mov
mov
in
jae
dec
cmp
imul
es
pop
ret
enter
mov
lcall
adc
sub
jae
ret
xor
jmp
cltd
mov
inc
cmp
dec
fucomi
xor
mov
jge
mov
aad
gs
test
dec
fisubrl
sbb
or
mov
mov
inc
jecxz
or
jo
mov
jns
movsl
jp
fldt
lock
fs
and
out
in
lcall
xchg
aas
pop
sub
jo
ret
push
mov
jmp
push
enter
sti
cmc
cmp
mov
jo
imul
insl
add
std
sub
jmp
ret
insl
scas
cltd
fsubrs
adc
iret
mov
and
mov
xor
jo
iret
loope
sbb
xchg
in
jae
rcll
daa
fnstenv
rol
pop
xchg
xorb
iret
xchg
push
dec
inc
stos
ds
and
mov
mov
ljmp
push
cli
cld
cmp
cli
popf
jo
lock
insl
pop
jp
cmc
in
sub
mov
jo
dec
scas
cli
das
inc
stos
adc
mov
rol
cwtl
popa
pushf
filds
fldcw
lods
insl
dec
sbb
xchg
adc
or
xchg
dec
sti
mov
jl
lods
div
daa
repnz
cli
add
insl
sub
cmp
lods
xor
xor
cmp
lock
jmp
cmp
pop
ss
push
dec
insl
pop
push
dec
cmpsb
inc
movb
test
ja
mov
xor
inc
pop
push
fiaddl
push
lret
cltd
subl
lock
or
aas
jo
sub
add
cmp
xor
pop
pop
pop
inc
loop
jo
clc
cmp
subb
cld
push
jle
pop
cwtl
cli
jp
add
dec
aas
popf
inc
xchg
clc
jnp
xor
jae
jle
fdivrs
push
fidivs
inc
add
rcrl
hlt
push
aad
mov
jns
test
out
push
push
sbb
in
leave
cmp
jo
cs
dec
cmp
ret
xchg
jo
adc
mov
jo
mov
sti
aas
push
jo
mov
ret
loopne
jno
jo
jbe
rcrb
cmpsl
push
ja
pop
adc
outsb
adc
mov
ljmp
jo
loopne
in
jg
outsl
sbbb
jo
faddp
shl
cmp
pop
jo
sub
mov
stos
jbe
popa
jno
pop
repnz
sahf
enter
sbb
daa
out
or
jo
push
cmp
in
sub
shrl
stos
jae
xchg
icebp
or
lods
cmpsl
cltd
jo
pop
sub
and
xchg
jmp
divb
fs
addr16
out
test
lods
jo
xchg
imul
mov
in
in
aad
mov
adc
adc
sahf
jo
xchg
stos
pop
ljmp
jle
sbb
movsl
cmpsb
testl
aas
out
pop
and
repz
mov
adc
mov
mov
xchg
test
sahf
adc
popf
jle
jo
int3
addb
sub
mov
ja
insl
push
cmp
xor
das
xchg
mov
sbbb
inc
fnstcw
jae
cltd
mov
sahf
loopne
ja
insl
jp
cmpsl
lds
jo
fbld
mov
dec
lret
jg
pop
jns
inc
jo
stc
in
mov
push
add
add
inc
jo
add
or
lea
or
imul
out
loopne
jmp
pushf
mov
push
jo
pop
mov
jo
push
mov
stos
dec
pop
in
jo
dec
and
mov
adc
jecxz
jle
lahf
cld
jmp
pop
test
or
push
pop
jg
pusha
add
lea
dec
int3
xchg
mov
stos
xchg
arpl
mov
out
inc
comiss
xchg
jle
dec
mov
mov
xchg
out
fcmovb
fiaddl
lcall
insl
xchg
imul
mov
jge
bound
mov
adc
xchg
orl
push
mov
pop
negl
je
xor
sub
out
je
mov
rolb
jb
icebp
repz
mov
sbb
dec
in
mov
ljmp
das
decb
lahf
loopne
ja
ljmp
shlb
insl
mov
call
jle
jecxz
sbb
mov
mov
push
mov
or
sub
pop
lods
lock
xchg
or
out
pop
outsl
sbb
mov
xchg
lahf
cwtl
je
call
inc
pop
stos
jge
mov
cmp
js
outsl
fstl
push
mov
pop
jp
adc
jo
sub
mov
pop
movsb
pop
and
fidivrs
ret
mov
das
movsb
jo
not
jno
outsb
xchg
xor
lret
xchg
popf
shrb
sbb
push
fldenv
add
xor
lock
mov
cmc
insl
xchg
push
dec
or
repnz
cltd
inc
fs
lcall
jno
jle
lea
fcomi
sub
hlt
mov
mov
js
dec
xlat
insl
mov
lret
repz
sbb
pop
in
mov
addr16
out
bound
lret
lock
add
js
jnp
arpl
jo
pop
and
es
mov
push
outsb
mov
push
mov
in
mov
cmp
dec
lret
mov
hlt
subl
add
pop
insl
ds
mov
imul
jp
push
lods
cmp
mov
dec
mov
push
shll
clc
lods
xchg
hlt
add
lds
das
and
in
insb
and
andb
dec
jne
jo
sti
outsl
mov
cvttps2pi
sub
ljmp
sbb
imul
int
inc
pushw
push
cli
insl
imul
jp
fcoms
mov
aas
jae
pop
mov
jg
xchg
sub
pop
lcall
std
cmp
test
insl
jb
jmp
rol
add
test
test
test
xchg
xchg
mov
cmc
xchg
or
sbb
xor
sub
insb
sub
daa
cmc
push
enter
and
pop
and
mov
aad
out
call
leave
imulb
jnp
mov
rorb
scas
dec
nop
xor
adcb
add
dec
push
and
mov
xorw
loopne
outsb
xor
jno
lds
ja
lea
xlat
pop
pop
jo
cld
pop
cmp
jg
mov
ret
stc
lret
jo
sub
rcrl
js
adc
subb
pop
dec
xor
pop
lock
xchg
dec
decb
jo
lods
add
enter
jo
jg
pusha
iret
and
pop
das
fwait
pop
fs
retw
or
loope
das
insl
or
xchg
xor
lahf
sub
pop
xor
sub
adc
movsb
roll
sub
mov
out
jo
loope
mov
pushf
jnp
xchg
xchg
nop
popf
ret
int
add
jo
cmp
add
outsb
mov
aas
clc
pop
push
mov
std
outsl
jo
push
push
jnp
test
inc
jo
add
dec
sub
aam
int
jge
imul
mov
jo
cmp
test
and
pop
aam
inc
mov
push
daa
pop
adc
cmp
arpl
subb
mov
pop
not
sbb
hlt
sub
sti
jo
mov
push
ja
stc
shll
add
incb
mov
dec
cmc
jo
pop
fldt
xor
nop
ljmp
ret
lock
fnsave
es
mov
dec
and
sbb
jo
or
dec
jo
pusha
push
lcall
push
pop
sub
nop
add
mov
jge
cmp
inc
loop
dec
push
push
mov
mov
inc
jo
jmp
lret
sub
stos
dec
jae
push
jnp
lahf
fmulp
outsb
add
je
repnz
test
jo
scas
mov
ja
sbb
pop
mov
shrl
pusha
fidivs
sbb
repz
out
loop
stos
cli
test
pusha
jo
insl
pop
outsb
sub
mov
cmpsb
mov
nop
fidivs
mov
adc
mov
pop
mov
and
fldt
ds
pusha
std
outsb
ljmp
push
jae
push
repz
xor
das
test
std
hlt
fstpt
lcall
xor
scas
mov
insb
repz
mov
mov
inc
fnsave
fs
not
xor
push
pop
adc
arpl
push
jo
xchg
jnp
sub
mov
lcall
mov
lock
outsb
int
pop
adc
or
dec
mov
cmc
sbb
xchg
push
insl
loope
mov
or
lock
push
jo
jge,pt
popf
push
frstor
int3
mov
ret
add
ds
lock
xor
in
nop
and
call
ss
cmp
jecxz
jo
pop
push
push
mov
mov
roll
les
inc
imull
ficompl
js
stos
lods
mov
std
movsb
jp
lahf
jnp
jo
or
repz
loope
call
shlb
and
xlat
adc
aas
jmp
lock
xchg
insl
sbb
sub
mov
add
fwait
xchg
push
and
jo
mov
dec
pop
dec
sahf
push
lock
ret
mov
xor
cld
ja
pop
pop
sahf
push
jno
inc
decb
mov
jb
daa
pop
das
jo
xor
fs
jo
jne
dec
pop
cmc
jno
es
cs
xor
movsl
cmp
repz
in
andb
xor
ja
push
inc
dec
cmp
jae
icebp
jo
ret
js
cmp
jecxz
add
push
jo
sbb
lods
movsl
mov
lret
and
jl
jo
int
loop
fdivrs
int3
dec
das
sbb
out
lret
push
insb
jo
mov
jne
sub
and
fwait
add
pop
ret
fidivrl
cmpsb
mov
aas
pusha
daa
push
or
pop
insb
ss
or
push
cmp
jl
std
adc
add
in
divl
lock
inc
mov
sbb
xor
mov
mov
lahf
push
mov
cmp
and
pop
xchg
xorl
mov
pop
jb
mov
cmp
push
leave
mov
repnz
sbb
and
dec
aad
jo
call
pop
mov
pop
fs
loop
sub
jae
mov
out
xor
scas
jo
jg
mov
insb
cmp
xor
fcom
pop
mov
push
pop
lret
jae
jge
je
and
or
loopne
mov
enter
sbb
test
jns
out
xor
and
add
lock
lods
or
scas
sarl
mov
mov
xchg
sbb
add
idiv
xchg
fnstenv
inc
inc
in
push
mov
scas
mov
and
cmp
xchg
lods
add
jnp
out
xchg
test
cmpsl
std
lea
jo
cmp
xchg
jb
dec
push
test
lcall
insb
cmp
arpl
insb
inc
or
movsl
pushf
test
sbb
mov
cltd
jne
mov
ret
mov
xor
sbb
fwait
push
lock
test
mov
pusha
sub
push
push
sbb
push
filds
push
mov
fwait
lcall
loop
dec
xor
mov
add
and
mov
loop
test
sbb
orb
insb
jae
inc
mov
js
fmuls
addb
ret
mov
dec
das
fsubrl
pop
push
subb
int3
ret
jo
std
adc
or
divb
push
subps
test
jle
jo
arpl
loopne
ss
insb
mov
enter
rcrl
jne
jmp
fsubl
outsb
xor
movsb
xchg
cmp
cmp
pusha
mov
push
mov
test
adc
dec
iret
orb
daa
icebp
push
enter
dec
je
in
sub
or
aam
push
cwtl
mov
insb
inc
clc
jbe
lock
aad
jo
lahf
imul
or
out
xchg
mov
sub
or
hlt
fisubl
lret
loop
lods
dec
punpckhbw
in
xor
sub
lcall
jne
cli
sti
add
jo
testb
or
shrb
shrl
mov
xlat
pop
nop
cmp
pop
xor
xchg
das
lock
scas
xchg
mov
push
jge
cmp
xor
hlt
scas
shl
fistps
insl
sbb
negl
push
inc
repnz
nop
pusha
into
pop
adc
inc
test
adc
stos
sub
into
pop
jo
loopne
lahf
clc
xchg
js
push
jb
cmpsl
jo
mov
push
and
jo
gs
jae
xchg
ret
jo
dec
cmc
data16
lods
nop
jo
out
mov
lods
xchg
jo
dec
faddl
movsb
xchg
scas
sub
push
mov
out
jo
push
movsb
xor
sub
xor
ss
repnz
push
add
mov
dec
ds
mov
adc
jecxz
push
rcrb
dec
into
je
enter
gs
mov
adc
filds
push
push
jo
gs
test
mov
cmp
pop
jo
gs
decl
mov
sbbb
xor
push
ljmp
dec
jne
xor
rsm
iret
mov
jo
scas
out
cltd
enter
push
inc
fists
jno
orb
cltd
sbb
xchg
inc
test
out
test
xor
pop
dec
ja
and
aad
push
gs
jo
add
xor
cmp
sub
into
jo
lahf
fisttpl
pop
fidivrs
jae
jo
xchg
jmp
mov
push
sub
sub
jnp
cmp
hlt
adc
jo
add
adc
and
xor
push
sbbb
mov
xor
and
mov
insl
int
pusha
push
adc
cwtl
mov
mov
mov
aam
test
mov
dec
repz
jne
jl
jo
and
loope
jo
adc
pop
jo
out
pop
push
ret
xchg
push
jo
pop
not
and
dec
fs
repnz
xchg
mov
mov
or
clc
cli
andb
imul
pop
lock
mov
add
jo
push
fidivl
mov
insl
js
popf
jnp
cmp
negl
nop
xor
in
ja
loope
inc
dec
addr16
aad
pusha
lds
push
and
inc
lods
enter
fists
push
xor
lock
cmpsb
out
jmp
lock
enter
cwtl
jo
jg
adc
mov
jo
or
into
mov
in
jmp
in
dec
lds
ss
daa
popf
push
push
lods
iret
jo
incb
pushf
int
mov
mov
dec
push
push
xchg
divl
shlb
sub
or
in
lods
cmc
loop
jle
dec
out
mov
cmpsl
int
shl
sbb
push
jmp
xlat
cmp
or
mov
add
bound
or
leave
sub
push
jae
adc
pop
pop
lock
cltd
cmc
mov
lcall
jge
repnz
inc
mov
data16
adc
pop
jo
lret
push
xchg
rcll
sub
xchg
cli
jo
jp
lahf
or
add
test
jbe
mov
mov
sub
cld
jmp
jmp
mov
fstl
testb
lcall
xor
cmp
xchg
bound
scas
jo
cmp
adc
insl
stc
out
js
xor
mov
mov
jb
dec
sti
iret
int3
jo,pt
jnp
pop
rol
aad
or
push
add
cmp
out
mov
jne
repnz
xor
insb
pop
xor
mov
outsl
pop
insl
push
inc
addr16
jne
mov
jo
mov
std
pop
jo
cmp
scas
or
imul
sbb
push
jmp
pop
adc
sub
test
addr16
dec
nop
popf
jecxz
inc
ja
repz
orl
mov
fbstp
arpl
pop
sbb
andb
mov
mov
aad
mov
jo
pop
dec
scas
adcl
jo
pop
cld
push
into
fldt
jae
scas
add
out
mov
xor
jo
in
jge
jg
cltd
jo
or
out
outsb
or
xor
mov
xchg
cmpsb
mov
or
inc
ljmp
fs
jo
outsb
cmp
cmpsl
addb
jo
aaa
in
std
push
fdivl
xchg
mov
fisubrs
lahf
inc
lods
inc
cmp
inc
ret
push
jo
adc
stos
jo
fs
mov
lds
cli
loopne
add
shrb
shlb
or
pop
out
jnp
ja
nop
jo
push
mov
mov
jne
ficompl
jnp
mov
cmp
inc
push
xlat
jecxz
nop
popa
jo
out
mov
jae
xor
lea
push
scas
dec
cmp
nop
insb
test
mov
jo
xor
dec
out
jo
add
xor
jo
jecxz
xchg
and
and
cmp
mov
adc
or
sub
mov
insb
inc
js
mov
sbb
loope
sbb
testl
mov
aam
shlb
jbe
jae
dec
sub
inc
loopne
ja
pushf
insl
test
cwtl
fstpt
mov
int3
repz
bound
jo
mov
cmpb
inc
scas
jmp
fisttpll
in
enter
pshufw
jns
jo
fld
jno
or
mov
xchg
jo
popw
repnz
cwtl
push
pop
pop
dec
out
mov
xor
cmp
jo
cmp
push
mov
and
jmp
jae
imul
jae
pop
cmp
test
jo
inc
mov
sbb
sub
int
jo
and
testl
pusha
dec
jnp
outsl
outsb
aam
fnstenv
repz
jo
pop
subl
jo
int3
pop
adc
lods
gs
insb
push
push
cwtl
sbb
mov
mov
or
jg
or
jo
jae
or
idivb
lea
enter
aaa
pop
cltd
xorb
je
add
ja
pusha
int
push
add
push
push
adc
gs
push
inc
mov
pusha
insb
insl
repnz
je
inc
push
jl
pop
and
add
popa
cmp
dec
push
outsb
dec
or
int
insb
pop
jge
xchg
pop
int3
push
push
sub
add
insl
loopne
push
mov
mov
in
scas
jns
dec
mov
outsb
je
js
pusha
stos
adc
outsb
xor
and
pusha
sahf
push
int3
sub
outsb
lahf
outsb
mov
fsubs
shl
in
lods
xor
mov
lret
mov
outsb
cli
pusha
out
sbb
outsb
sub
pop
adc
outsb
frstor
push
imul
outsb
sub
icebp
aam
hlt
pop
jne
pop
mul
outsb
ficoms
sub
or
outsb
push
stc
outsb
sub
insl
jne,pn
sti
outsb
sbb
pop
outsb
xor
outsb
sub
xor
fcmovnu
mov
adc
add
jns
adc
push
shrb
rol
into
in
iret
outsb
mov
outsb
ljmp
sub
in
jecxz
outsb
out
clc
adc
xlat
outsb
bound
clc
add
mov
outsb
vmovhpd
repz
outsb
pop
sub
mov
push
fsubrs
outsb
cs
in
mov
ss
sbb
push
adc
outsb
sarb
pusha
mov
popf
jae
inc
lret
jecxz
outsb
pop
mov
and
outsb
mov
arpl
in
pop
fdivr
and
mov
sbb
dec
mov
push
cmpsb
add
jge
dec
push
inc
leave
mov
push
stos
sti
stc
adc
pop
sub
les
inc
loop
pop
cmpsb
out
movsl
xor
movsb
sbb
ret
cmp
outsb
jb
mov
add
xchg
push
insl
test
stos
insl
adc
outsb
sub
stc
or
inc
adc
adc
mov
jl
inc
xchg
outsb
test
insl
addr16
mov
es
test
pop
fs
adc
sbb
pushf
add
adc
cmp
test
in
leave
outsb
mov
jns
insl
cmp
mov
push
mov
cmp
mov
jne
insl
cmpsb
in
mov
lret
dec
inc
rcrb
ret
xor
aad
mov
int
jb
and
jge
push
adcl
sub
sbb
jl
pop
or
into
cltd
and
insl
mov
jecxz
inc
and
jecxz
rcll
shrb
aam
mov
push
outsl
dec
pop
test
insl
iret
dec
loopne
dec
int
add
movsb
xchg
mov
push
sbb
add
repz
insl
push
scas
xor
int3
je
inc
in
push
mov
xor
jecxz
mov
mov
xchg
loop
jmp
movsl
sbb
adc
lret
fsub
cmpsb
rcr
push
cmp
and
fucomp
pop
pop
cli
cmp
dec
frstor
fs
and
ret
loope,pt
sti
jns
mov
insl
adc
lods
cmpsb
mov
push
outsb
stos
sub
insl
cmp
jl
dec
and
cmp
dec
xchg
aad
es
js
jae
lret
divb
neg
insl
mov
arpl
sub
cmpsl
bound
rcrl
dec
popf
lods
fisubl
sbb
jmp
adc
outsb
lock
jne
jb
insl
test
lret
mov
xchg
enter
mov
ss
pop
mov
jnp
cltd
xor
sub
cmp
mov
dec
outsb
add
add
gs
jmp
fsub
out
pop
and
lcall
adc
mov
mov
cmp
and
and
pop
arpl
push
jae
stos
mov
aam
insl
and
sub
inc
jns
pop
movsb
xor
icebp
push
enter
pop
push
arpl
insl
adc
gs
ret
jns
insl
ret
xor
loopne
call
xor
stc
in
sbb
out
and
insl
into
xor
mov
aam
into
stos
mov
pop
ljmp
or
and
insl
popa
sub
mov
and
hlt
pop
adc
mov
push
divl
insl
loopne
cmpsb
mov
in
rcll
dec
imull
icebp
adc
sbb
pop
pop
and
push
inc
pusha
add
ret
test
les
xchg
arpl
sbb
repnz
cmp
dec
xchg
inc
push
sub
xor
inc
xor
fidivl
popa
inc
and
sbb
or
dec
ds
or
rcl
dec
divb
push
bound
jne
jp
cs
aam
lret
dec
es
aad
sti
and
pop
jnp
adc
and
and
xor
cmp
jne
int
adc
add
shrb
les
fadd
in
out
lock
pop
leave
sbb
gs
and
out
insl
inc
pop
in
in
cmpsl
addl
sub
and
add
xor
cmp
adc
enter
mov
push
mov
pop
rcrl
mov
out
insl
dec
ret
and
mov
inc
popa
fsub
push
mov
mov
ljmp
dec
jns
aas
mov
sbb
mov
shll
and
dec
ret
fwait
out
and
insl
adc
sbb
pop
fldt
popf
icebp
and
loop
push
idivb
sbb
insl
xor
xchg
push
inc
fs
mov
insl
iret
into
stos
ret
cmpsl
inc
jae
xchg
xor
loope
insl
adc
fwait
out
fstpt
dec
in
sub
dec
insl
inc
pop
sbb
insl
push
shlb
frstor
push
stc
enter
fldcw
dec
cs
insl
mov
insl
clc
leave
inc
cmp
mov
push
mov
pop
fidivrl
jmp
into
int3
insl
mov
stc
rcl
imul
push
sbb
fwait
lret
jb
pop
leave
xchg
ror
and
fisubrs
push
jns
mov
insl
sahf
sub
push
push
shl
ret
pop
pop
mov
fs
pop
add
mov
ret
divl
jae
cli
jb
mov
jne
jne
pop
cltd
mov
sbb
inc
movsb
pop
cmpsb
lods
dec
add
cmp
inc
xchg
sarb
shrl
pop
and
mov
test
jae
inc
add
lods
adc
push
dec
sbb
sbbb
sub
shll
int
push
inc
xor
push
cli
xor
aam
nop
outsb
js
xchg
pop
lret
mov
insb
lds
and
pop
sbb
mov
dec
sbb
jne
dec
jl
stc
fidivs
mov
sbb
pop
xchg
out
pop
insl
arpl
popa
and
xor
mov
cltd
arpl
dec
pop
cmpsb
inc
pushl
adcl
sub
adc
mov
mov
mov
pop
js
insl
out
push
mov
mov
leave
mov
mov
mov
ja
repz
pop
inc
scas
mov
dec
sub
int3
outsl
sbbl
leave
sbb
jge
idivb
iret
test
sbb
rcll
push
in
inc
jno
jae
lods
jge
lahf
std
mov
jae
idivb
xor
leave
mov
out
mov
mov
mov
lret
mov
jg
repz
lods
mov
mov
mov
rol
mov
lds
push
dec
stos
ja
mov
or
loopne
aaa
in
adc
xchg
es
mov
mov
test
lds
aas
enter
mov
mov
sbb
gs
lds
sbb
mov
pop
imul
fld
mov
loop
jae
cmp
enter
mov
psubw
in
inc
stc
and
pop
pusha
and
mov
stos
lret
daa
cmp
cmpsb
mov
mov
insl
loopne,pn
insl
out
pop
cltd
mov
aad
rcll
sahf
xchg
jge
push
push
adc
jge
in
out
push
sbb
pop
inc
cwtl
push
loope
enter
dec
es
popf
inc
push
pop
aas
push
test
push
dec
insl
out
das
inc
push
pop
in
out
add
dec
int3
mov
jae
mov
insl
insb
loope
sub
sub
sub
cs
in
jmp
mov
into
xchg
sbb
dec
aam
pushw
sbb
fldenv
les
dec
push
sbb
in
dec
adc
sbb
xchg
push
or
loop
inc
push
cld
stc
clc
jecxz
mov
out
ja
mul
bnd
adc
xor
adc
pop
jns
mov
mulb
cld
push
sbb
or
std
xor
jmp
out
jb
loop
push
dec
inc
dec
stc
lret
icebp
stos
sti
inc
insl
arpl
add
dec
mov
inc
std
shrb
sahf
inc
xor
repnz
shl
jp
mov
clc
or
in
dec
jae
add
xor
div
stc
pop
or
das
std
mov
jecxz
jae
dec
add
cs
jmp
mov
repnz
and
cs
adc
stc
daa
pop
loop
fildll
jae
std
or
inc
ja
xor
mov
inc
sarl
inc
and
sub
insb
sub
push
add
icebp
lock
cmp
int3
dec
jno
mov
hlt
cld
add
jp
add
inc
pop
stos
dec
adc
add
out
cli
dec
ljmp
inc
popf
cmp
ret
pop
or
add
and
es
test
rcrb
pop
stc
push
dec
push
loop
insl
cmp
sbb
out
add
hlt
mov
icebp
jbe
jl
push
xor
in
cmc
xor
add
insb
ss
lock
fiadds
mov
or
sti
imul
or
inc
pushl
cmp
out
hlt
div
push
in
cld
es
or
stc
test
ret
js
jb
jae
adc
stos
adc
adc
push
sbb
adc
lock
dec
or
inc
or
jle
pop
add
inc
jae
incl
loopne
xor
add
insl
aas
or
rclb
add
out
inc
dec
mov
or
and
and
sbb
lret
das
cmp
cmp
mov
mov
out
jb
jae
or
inc
jno
mov
or
push
pop
add
in
pop
or
dec
clc
mov
xchg
ja
sub
iret
pop
fildll
inc
out
dec
pop
or
iret
hlt
mov
inc
clc
lahf
negb
jo
add
testb
insl
in
ds
lods
inc
cli
mov
add
leave
add
imull
sub
shll
add
jo
sbb
call
push
in
iret
pop
push
inc
arpl
or
and
in
popf
or
out
out
imul
mov
subb
ret
pop
jo
dec
rorb
mov
mov
clc
inc
shlb
sbb
stc
add
mov
mov
or
pop
sub
out
and
sti
fmull
sbb
dec
jae
sbb
out
rcll
adc
or
or
je
add
leave
cmp
popf
leave
shrl
out
sub
fmull
xchg
adc
pop
mulb
ljmp
inc
out
pshufw
dec
test
add
das
fsubrs
add
ja
add
inc
inc
out
mov
cmpsb
out
ds
push
stc
and
inc
insl
stos
pop
and
loope
xor
iret
fprem
push
insl
adc
or
and
enter
decb
cmpsb
es
es
or
sar
shlb
loope
std
pop
in
and
mov
ret
int
inc
push
inc
aam
dec
shlb
loope
mov
pop
stc
or
sbb
cmp
ja
mov
outsb
and
mov
sahf
sub
aad
or
push
adc
or
pop
fisubs
dec
hlt
fidivrl
outsb
dec
xor
push
add
sub
sbb
or
ja
and
mov
mov
cmc
shlb
add
stc
jb
push
push
insl
cmpl
out
pushf
hlt
mov
fcom
mov
add
sub
or
xor
das
or
cmp
jae
hlt
jne
ficompl
imul
inc
or
add
negl
out
mov
dec
inc
or
mov
fdivl
cmp
iret
ficoml
cmpl
pop
loop
dec
jae
fadds
js
cmp
or
dec
jmp
cmp
popf
push
add
and
mov
hlt
popa
cmpsl
jge
and
dec
xor
insl
shll
jl
push
mov
mov
jae
sbb
xchg
ds
addr16
xchg
aad
test
mov
not
jns
jns
xchg
add
cwtl
mov
jne
jne
fs
cwtl
lea
mov
and
xchg
cltd
adc
adc
mov
mov
insl
cld
mov
inc
push
stc
xlat
pop
jp
sbb
push
jne
loop
cmp
inc
push
push
ja
fs
push
in
icebp
loope
cs
cmp
and
and
mov
jp
aaa
jne
add
sbb
iret
cmp
push
adc
mov
std
in
les
mov
push
jne
daa
mov
adc
add
push
jmp
jl
cmc
mov
dec
fstl
es
inc
mov
mov
and
jmp
and
push
cmp
xchg
cmp
jne
int
jne
mov
sbb
repnz
imul
cmp
xchg
xor
push
les
add
mov
int
not
inc
add
mov
cmpsb
jge
jnp
into
in
fsubs
fdivrs
xchg
and
insl
mov
pop
inc
in
movsl
test
lods
ret
cli
xor
inc
add
push
sbb
iret
mov
mov
jecxz
pop
pop
mov
push
loopne
bound
fldcw
push
xchg
sbb
xor
call
mov
mov
shll
dec
xlat
scas
cli
push
stc
jno
push
fsubr
adc
mov
gs
insl
mov
dec
ficomps
jmp
and
mov
insl
into
sahf
sahf
jns
in
movsb
xchg
mov
icebp
pusha
pushf
xchg
sahf
mov
loop
sub
mov
insl
adc
jbe
cmpsb
int
mov
les
std
enter
mov
aad
sbbb
out
pop
iret
data16
inc
inc
mov
clc
aad
mov
test
xchg
sub
pop
xor
outsb
ljmp
adc
out
pop
les
dec
insl
scas
in
fdivp
imul
in
push
jmp
jae
xor
fistl
pop
push
xchg
cs
mov
jmp
sbb
gs
int
push
cs
and
sbb
push
sbb
cmp
jne
jl
rcll
and
jmp
fsubl
movsb
xor
and
inc
fldl
xor
mov
xchg
sbb
arpl
stc
cmp
stos
test
inc
inc
call
xor
push
arpl
sub
int3
mov
adc
mov
xchg
cmpsb
cmpsb
xor
pop
mov
sarl
imul
jns
insl
inc
sbb
push
ds
inc
insl
inc
or
and
lea
stos
lea
les
iret
jmp
arpl
test
and
shll
sbb
insl
rcll
stos
sbb
ds
test
sbb
in
mov
and
xor
cmp
cmpsl
out
shrl
lret
and
and
imul
loopne
mov
in
xor
and
loope
push
aam
inc
aam
iret
and
push
pop
jne
pop
mov
insl
aad
dec
mov
ss
inc
insl
shl
fmul
inc
cltd
mov
and
int
xchg
add
insl
stos
addr16
push
mov
fnstenv
popf
pop
lret
ret
insl
push
pop
adc
fsubr
imul
rorl
add
hlt
ret
or
mul
stos
sub
add
push
loope
sub
jl
movsl
add
ret
out
xor
loope
and
mov
jge
insl
pusha
lods
es
std
sbb
pop
mov
jo
insl
pusha
mov
cmpsl
fadd
insl
add
lret
stos
jp
adc
push
fsubl
shll
and
movsl
leave
jbe
mov
mov
mov
loopne
inc
sti
stos
xor
stos
pop
xor
cmp
aam
jne
xchg
push
jns
iret
lods
fldcw
inc
cltd
sub
pop
pusha
mov
mov
cwtl
out
rcll
push
lea
adc
push
ret
cmp
mov
adc
mov
rcll
xor
mov
and
cmp
fcmovb
or
ss
pop
loop
insl
and
fisttpll
fmull
sub
dec
es
dec
test
xor
imul
sbb
push
xor
iret
sahf
inc
pop
stos
push
sbb
loop
outsl
jns
test
jmp
xchg
or
sbb
test
insl
and
pop
jnp
ret
xor
push
cmpsl
insl
neg
mov
cmp
push
jae
iret
xor
push
mov
sbb
insl
scas
aaa
es
xchg
mov
push
insl
std
outsl
xlat
js
mov
enter
je
loopne
xchg
inc
insb
mov
and
mov
mov
outsb
mov
stos
dec
jl
mov
mov
movsb
out
push
dec
adc
xchg
int
jle
cmp
push
loop
cmpsl
push
pusha
clts
push
push
lret
or
rorl
in
xor
pop
out
lret
in
pop
imul
adc
sub
cmp
push
cmp
xor
inc
ret
ss
jno
or
jecxz
mov
or
pop
clc
popf
je
js
jl
jne
or
test
or
out
push
jns
xor
push
add
adc
lea
xor
or
cmp
xor
jle
xchg
repnz
rcll
adcb
pop
xlat
cs
pop
js
fs
push
dec
or
outsb
out
call
je
cmp
xor
sub
aas
pop
xchg
loop
mov
test
repnz
loope
mov
fnstenv
cmp
add
clc
push
je
and
dec
es
cmp
clc
dec
and
add
lock
jne
and
cli
jl
je
sub
push
cmp
sbb
jecxz
test
adc
nop
loop
dec
clc
shrl
aas
pop
xor
cmp
xor
js
enter
push
mov
push
fildll
sbb
pop
inc
push
jbe
pop
xor
and
xor
add
aam
push
loopne
pop
nop
cmp
jne
jl
xor
push
dec
mov
mov
mov
rcrb
xor
bound
notb
ss
pop
dec
test
cmp
sahf
mull
push
mov
int3
pop
clc
lock
xor
dec
je
movsb
sub
insb
aad
loopne
or
mul
xor
pop
inc
fsubs
add
int
inc
clc
sbb
out
outsb
push
and
pop
fsubs
div
pop
xor
fs
call
mov
aas
enter
pusha
dec
xor
and
inc
movsb
adc
pusha
test
je
test
sbb
lods
cs
je
and
dec
pusha
ss
insb
cmp
inc
call
popa
js
xor
jl
filds
dec
jge
pop
jbe
in
cmp
clc
idivb
or
jl
je
fsubr
call
popa
pop
or
pusha
mov
pop
and
push
lock
je
push
sbb
js
dec
push
add
push
xor
fcom
mov
fs
cli
pusha
out
repnz
xor
push
test
push
push
lock
xor
aam
int
aam
into
je
or
pop
out
mulb
js
jne
pusha
addr16
into
es
jne
and
hlt
in
loop
outsb
fcompl
hlt
into
sub
lock
dec
int
push
cmpsb
cmp
pop
push
out
sti
pop
sub
mov
movsb
lock
cmp
js
xor
inc
aad
out
outsb
xchg
mov
sub
fsubrl
inc
in
iret
outsb
in
ss
into
or
insb
in
sbb
push
lock
push
outsb
cmp
outsb
add
je
push
and
add
push
in
lods
inc
xor
add
out
data16
cld
or
and
fs
clc
sub
xlat
cs
dec
gs
je
inc
pusha
or
sbb
mov
aaa
outsb
sbb
outsb
inc
call
lea
cld
out
enterw
xor
mov
outsb
loop
and
gs
sahf
lods
cmp
sahf
outsb
cmc
push
and
and
shlb
xor
jns
and
stc
push
je
pushf
xor
clc
fdivrs
dec
or
aaa
je
popa
or
cmp
or
outsb
fs
popf
shlb
in
fdivl
xchg
inc
or
push
test
mov
movsb
outsb
mov
push
das
je
or
push
add
cmpsl
les
and
and
sbb
pop
out
in
aam
aad
out
outsb
pop
pop
cmc
jp
test
les
aam
je
and
adc
inc
push
test
hlt
cmp
push
insb
int
into
shl
xor
shrl
shll
or
cmp
xor
sbb
js
sbb
add
jo
dec
mov
push
clc
and
cmp
pop
je
inc
xor
pop
add
shll
inc
sarb
adc
js
sbb
ljmp
adc
je
and
push
mov
lock
cmp
fnsave
je
add
or
je
test
test
xchg
pusha
int
hlt
add
js
fs
pop
fs
je
rorb
data16
dec
js
mov
je
hlt
jl
loopne
outsb
jo
push
mov
lret
xor
and
inc
lock
insb
es
cmp
out
shrb
dec
mov
es
sub
aas
sbb
and
cmp
add
into
outsb
bnd
lea
shll
les
pop
push
addr16
inc
mov
outsb
ror
out
js
mov
mov
pop
outsb
push
aam
int
les
cwtl
popa
inc
push
sbb
xor
into
push
pop
ss
adc
outsb
xchg
loopne
je
rol
jge
sbb
xor
js
dec
cmp
and
sub
or
jne
sbb
je
insb
xchg
movsb
fsubs
cmp
cmp
xor
inc
adc
sbb
or
hlt
aam
mov
les
rclb
sub
shll
sar
sahf
stos
cwtl
out
outsb
pop
sub
push
mov
test
or
shl
out
int3
dec
cmp
knotw
sbb
xor
outsb
inc
fmuls
xor
popf
pop
xchg
cld
outsb
push
test
and
inc
lods
outsb
mov
and
sbb
mov
mov
mov
cld
cmp
fs
and
aaa
jne
xor
and
andb
mov
sbb
sub
rcr
mov
popa
js
in
xor
into
push
inc
div
pop
or
data16
xchg
rcrb
jl
fsubrl
jae
mov
mov
and
insb
and
sbb
sub
loopne
jl
push
inc
fbstp
sbb
je
outsb
testb
dec
data16
cmp
pusha
hlt
std
cwtl
inc
jne
movsb
push
push
testb
jl
test
push
mov
in
dec
xor
dec
mov
inc
sahf
outsb
add
adc
and
mov
xor
lock
fbstp
sti
push
ss
test
jmp
xor
pop
pusha
mov
movsb
outsb
imul
xor
je
adc
add
add
sarb
push
repnz
int3
outsb
je
cmc
or
shlb
push
and
popf
push
add
inc
adc
or
int
int
mov
enter
scas
jle
hlt
hlt
sbb
sti
test
push
sbb
cltd
dec
bound
mov
stos
outsb
inc
js
dec
int
inc
ds
cmp
sbb
cwtl
push
add
jne
xor
and
into
jne
lret
cmp
cmp
in
fiadds
pusha
insb
je
lds
mov
loopne
xor
sahf
outsb
mov
jns
movsl
outsb
bound
sub
sahf
and
xchg
xchg
outsb
imull
sarb
outsb
jl
std
add
adc
cld
int
mov
out
enter
loop
enter
cmp
inc
add
xor
js
jl
je
mov
je
lods
jl
cwtl
pusha
mov
loop
mov
cmp
mov
pusha
shrl
pop
test
mov
int
dec
or
pop
and
sub
jb
mov
dec
jg
gs
dec
xlat
outsl
out
inc
jl
pop
mov
aam
pop
jl
int3
sbb
sarl
jp
mov
push
mov
push
popf
push
je
xor
and
push
sbb
push
mov
mov
js
mov
aam
sbb
int
pop
mov
xor
scas
sub
xor
js
xor
js
popf
cs
decl
pusha
inc
xor
cwtl
xor
aam
mov
hlt
push
loopne
fsubl
jne
je
xor
lds
je
in
js
jne
std
cwtl
and
xchg
lret
data16
frstor
int3
mov
nop
adc
js
scas
adc
pop
mov
mov
add
dec
dec
cmp
lds
lock
inc
cs
pop
je
incl
sbb
call
pop
xchg
mov
lret
sub
pusha
or
inc
movl
push
cli
cld
out
jnp
add
push
pusha
repz
lret
dec
idivl
xchg
in
xchg
mov
lahf
adc
into
js
pusha
add
dec
sub
mov
push
mov
push
jb
xor
imul
fstps
push
popf
pop
ror
je
data16
pop
mov
dec
aam
mov
int3
cmp
out
and
loopne
notl
mov
adc
mov
fs
aad
jmp
imul
mov
xchg
lea
scas
mov
mov
add
push
out
dec
cmp
jle
mov
fstl
stos
aad
xor
pop
cmp
xchg
cwtl
int3
xor
les
clc
cmp
inc
in
movsb
mov
std
sub
push
or
das
and
cmp
jbe
or
inc
inc
cwtl
and
fs
neg
mov
std
mov
mov
lret
push
mull
push
or
dec
mov
outsb
in
cli
loop
repz
dec
sub
ljmp
addr16
adc
dec
addr16
xchg
sbb
in
ficoms
pop
push
outsl
shll
ja
push
out
or
dec
inc
cli
aas
out
add
sub
pop
jo
jmp
mov
cmpsb
mov
xchg
imul
xchg
mov
cld
sahf
mov
jmp
xchg
push
int3
int3
jl
mov
or
pop
jl
pusha
sbb
das
dec
sub
dec
jmp
xlat
mov
not
repnz
inc
ret
pop
push
cmc
sbb
sbb
cmp
xor
inc
push
call
jmp
jecxz
shll
sbb
imul
adc
add
inc
int3
int3
pushf
or
orb
xchg
inc
je
sbb
mov
jmp
jne
mov
std
bound
js
pusha
pop
int3
push
sbb
push
cmp
xor
or
repz
cmp
incb
clc
repz
shrb
cmp
notb
cmc
fcoms
mov
js
sbb
dec
add
cs
push
fisubrs
clc
cli
jmp
roll
jge
jne
push
push
mov
js
fnstcw
ljmp
add
or
loop
into
or
and
pusha
and
or
mov
or
js
xlat
jno
dec
inc
pop
adc
dec
sub
pop
sub
cmp
pushf
rorb
mov
xchg
dec
mov
rcrb
push
pop
or
in
adc
lea
add
sbb
enter
adc
add
push
push
mov
or
pop
test
mulb
arpl
xor
int3
fmulp
mov
hlt
pop
pusha
xor
or
xchg
sub
shr
inc
hlt
repnz
je
inc
inc
mov
sbb
pusha
jno
lret
dec
movsl
push
mov
push
stos
mov
sbb
cmc
sbb
pop
in
sbb
inc
sbb
cmp
hlt
sub
sti
sub
sbb
pop
push
sub
loopne
mov
shll
mov
stc
aam
mov
mov
or
loop
mov
mov
stos
repz
iret
push
dec
hlt
je
push
les
pusha
lock
pusha
or
push
mov
or
sub
push
lock
inc
push
mov
repnz
and
out
cwtl
and
jbe
mov
add
mov
lock
add
pop
andb
push
rcrb
imul
push
ja
sti
jnp
or
dec
or
or
dec
fdivrl
int3
xor
add
pop
mov
sbb
sti
mov
aas
dec
sub
int
push
popf
or
dec
xchg
scas
pop
inc
jnp
clc
sti
test
ds
in
fbstp
dec
or
xchg
das
xchg
scas
push
ds
dec
sub
jle
fbstp
loop
xor
in
bound
pop
xorb
ds
subb
cmp
cld
loopne
js
mov
xchg
scas
pop
and
jns
jle
fcomps
mov
jl
mov
xchg
scas
dec
mulps
push
inc
addr16
mov
or
call
fists
loop
sbb
fcomp
dec
dec
add
mov
loop
movsb
mov
xor
subl
sub
filds
loop
add
xchg
pop
push
and
mov
xor
fsubl
push
bound
or
pop
or
add
sbb
pop
cmpb
lret
mov
fs
int3
add
mov
loopne
mov
in
mov
lret
jno
repz
je
or
push
cmp
xchg
pop
and
cmc
std
sbb
hlt
ljmp
mov
pop
xchg
sbb
cmp
xor
shr
sub
outsb
add
adc
mov
cmp
add
add
movsl
xor
orl
xlat
in
dec
fdivrl
int3
xor
cmp
test
jb
gs
jbe
mov
les
mov
or
jl
or
sbb
or
nop
in
hlt
enter
sub
mov
outsl
jge
jge
push
dec
stc
mov
cmp
jne
sar
or
pop
cwtl
fs
in
arpl
mov
xchg
test
push
adc
mov
dec
shr
call
orb
sub
movsb
adc
int3
cmp
sub
ljmp
cmp
mov
cwtl
or
fdivs
xor
addb
adc
sbb
or
push
pusha
pop
hlt
fcmove
xchg
sub
adc
outsb
imul
add
xchg
sub
pop
inc
std
inc
jnp
cmc
jnp
or
sub
jl
pusha
pop
mov
and
xchg
pop
xchg
xchg
pusha
pop
pushf
add
cmp
int3
shl
rolb
mov
je
fcoml
out
inc
sbb
inc
aam
dec
adc
idivb
pusha
add
mov
dec
xor
add
roll
push
push
fadd
push
int3
enter
outsb
sbb
pusha
xchg
shrb
xchg
or
adc
fidivs
in
xchg
jge
inc
pop
mov
cli
push
mov
push
aad
inc
in
out
add
or
enter
jl
popf
sbb
faddl
pop
dec
push
sub
add
test
add
push
dec
push
sahf
std
inc
xor
xchg
sbb
cmp
fs
je
push
dec
fnsave
push
and
int
mov
faddl
xor
rolb
xor
test
mov
dec
loop
push
and
xor
mov
sub
inc
sbb
jl
xor
int3
sub
test
aad
aam
aaa
loope
mov
je
mov
lds
jl
inc
sbb
dec
int
rcrb
sub
add
test
jne
mov
je
sbbb
outsb
xor
and
das
jl
jne
jl
hlt
jne
pop
aam
jl
inc
in
stc
inc
lret
fs
fidivrs
jl
push
outsb
js
dec
mov
cmovae
lock
mov
adc
pop
pushl
in
jl
pop
jl
testl
pop
adc
loope
inc
popl
sbb
int3
movsb
lret
outsb
xchg
nop
or
lcall
dec
jl
mov
adc
jl
or
js
test
bound
dec
pusha
shrw
add
inc
in
pop
scas
push
les
mov
jmp
jmp
add
shrl
pop
in
fsubs
in
test
sarl
jne
popf
cld
ss
inc
pusha
push
cwtl
in
mov
push
fdivs
js
or
int
negb
xchg
test
cmp
adc
in
inc
movsb
push
imulb
je
pop
push
loop
popf
jge
add
mov
int
bound
call
sub
inc
insb
int3
test
inc
mov
aam
dec
int3
push
adc
adc
test
cld
shll
mov
jne
jl
ficomps
cld
cmc
sub
adc
pusha
add
xchg
inc
sbb
mov
outsb
call
lock
pop
and
or
dec
mov
sbb
insb
sbb
outsb
fcoms
outsb
jle
je
aam
pop
in
cmp
jl
inc
mov
mov
xor
push
sbb
push
jge
jl
test
je
inc
cmc
cmp
inc
sbb
pop
fisttpll
je
xor
push
mov
mov
xor
xchg
adc
aam
sbb
je
subb
or
pop
jmp
mov
bound
out
jl
sub
push
data16
mov
dec
jl
aaa
pop
inc
xor
push
in
faddp
test
cmpsl
outsb
into
clc
sub
mov
adc
outsb
test
int3
bound
lods
mov
cwtl
aam
test
je
repnz
and
shrl
dec
aaa
or
movsl
push
les
push
or
outsb
stc
mov
movsl
inc
xchg
in
outsb
cli
jl
xor
jl
sbb
test
jmp
jecxz
add
pop
test
clc
xlat
mov
add
into
clc
in
lret
dec
pop
js
ficoms
dec
xchg
fldl
je
lret
outsb
out
xor
xor
out
xchg
shr
dec
jle
notb
xor
xchg
daa
orb
push
sbb
xchg
xbegin
outsb
test
adc
or
jne
pusha
adc
jne
iret
inc
mov
outsb
rolb
pop
rcll
adc
cwtl
and
pusha
test
pop
sub
fsubrs
lret
lock
xor
jo
dec
hlt
lock
mov
inc
push
add
ss
les
mov
outsb
add
cmc
hlt
out
adc
cmp
jns
je
mov
dec
lock
movsl
inc
or
inc
shrl
cmp
adc
in
jecxz
shlb
sbb
addl
sub
call
loope
cmc
sub
jl
mov
xor
jl
je
sbb
ss
cld
and
or
mov
data16
cld
inc
rcrl
pusha
orl
loopne
push
mov
pop
int
push
je
fnstsw
loopne
incl
xor
call
daa
rorb
lods
mov
pop
jl
cwtl
cmp
mov
int3
or
js
movsb
scas
fnstsw
push
dec
dec
je
xchg
rclb
mulb
mov
sbbb
push
dec
pushf
data16
movsb
jo
sub
adc
cli
call
roll
jl
pushf
mov
mov
je
jl
lcall
movsb
add
and
mov
cmp
mov
push
mov
fsubl
adc
sbb
adc
push
inc
imul
jge
jle
js
js
js
pusha
rolb
jne
mov
dec
cld
mov
fs
jl
push
aam
sbb
xor
cli
clc
pop
mov
lret
jo
pop
jl
movsl
dec
or
mov
xchg
mov
js
fldcw
mov
add
pop
cmp
push
aaa
jl
push
inc
mov
dec
and
aaa
fsubrl
fs
in
jmp
xchg
movb
leave
je
movsb
outsb
inc
mov
int3
pop
movsl
add
cmc
push
roll
add
push
bound
pop
and
push
push
jl
fnstsw
mov
push
je
pushf
out
pop
jl
pop
inc
cmp
and
sbb
roll
add
mov
xchg
push
iret
aas
pop
pop
push
jl
push
test
sbb
cmp
fidivs
or
pop
pop
jl
adc
sbb
jne
cmp
sarl
bound
les
inc
mov
jne
pop
lahf
shrl
shrl
push
push
pop
push
and
sub
outsb
aam
add
pop
fistpll
mov
int3
sarb
push
movsl
fs
dec
stos
outsb
cmpsl
dec
sub
insb
test
test
mov
xor
shlb
fmull
jle
mov
imul
dec
popf
gs
fs
sbb
outsb
lock
mov
int
lret
jle
xchg
cwtl
xor
hlt
pushf
popf
in
dec
and
ss
mov
clc
mov
dec
mov
dec
aaa
call
out
push
rorl
mov
or
cwtl
dec
pop
or
add
sbb
inc
mov
loope
lock
push
call
gs
xchg
xchg
mov
sub
les
mov
aaa
jne
sub
inc
add
xor
lods
sub
jl
sarb
enter
hlt
cmp
mov
leave
or
cmp
jl
fs
js
les
test
ficomps
mov
adc
std
je
mov
jge
mov
inc
mov
xorl
stos
enter
insl
push
jne
sbb
test
mov
aaa
je
test
aam
pushf
dec
je
xor
dec
je
clc
aaa
fs
je
mov
xchg
inc
pusha
mov
aaa
je
lds
andb
out
outsb
push
pusha
mov
je
or
mov
push
xorl
mov
jo
flds
inc
lods
ret
jo
xor
pop
das
je
xchg
aad
ret
jo
and
xchg
and
loopne
aaa
dec
js
je
lds
inc
lods
ret
jo
push
dec
je
push
int
insb
jl
outsl
jae
cltd
jbe
movsb
pusha
sub
push
shl
or
and
je
push
mov
test
mov
lods
gs
mov
js
mov
sti
js
pop
xor
sub
pop
cmp
pusha
sub
inc
or
out
and
mov
mov
movsb
les
adc
push
mov
mov
jne
lods
dec
sahf
dec
or
pop
mov
jecxz
cwtl
pusha
push
das
je
movsb
or
xchg
aam
mov
in
or
das
je
movsb
inc
pop
push
sahf
test
xchg
mov
aam
mov
xor
pusha
pusha
xchg
sahf
adc
adc
mov
movsb
js
pop
mov
push
xlat
enter
mov
inc
xor
shrl
shll
push
js
fs
popf
xor
cmpsb
inc
add
push
mov
mov
test
out
inc
fs
mov
xor
mov
fs
xchg
mov
data16
mov
movsb
jo
loopne
mov
je
orb
mov
popa
nop
or
xchg
jo
sbb
xchg
sti
popf
and
imul
in
mov
daa
insb
cmpsb
je
insb
pop
fwait
sahf
inc
cmp
inc
je
sahf
sbb
add
mov
nop
mov
sti
je
dec
jl
popf
xor
cmpsl
sahf
pop
push
xor
mov
jle
cmpsb
mov
xor
shrb
mov
and
jo
xor
jnp
inc
pusha
int
pop
add
js
fdiv
push
rcr
dec
popf
sbb
xlat
mov
dec
lret
cmp
hlt
movsl
mov
adc
call
jo
and
enter
mov
and
mov
mov
sub
iret
popf
cltd
test
movsb
pusha
loopne
mov
jg
fadd
mov
pusha
mov
adc
pop
scas
dec
mov
mov
mov
sbb
outsl
sbb
mov
popl
cmpb
pusha
mov
mov
insl
lret
lret
mov
movsb
cmp
popf
and
dec
rorb
dec
lds
mov
xchg
mov
js
inc
jmp
scas
cld
js
lret
adc
test
mov
call
jecxz
daa
rolb
mov
mov
in
test
leave
loope
les
test
lret
mov
insl
push
pop
mov
sub
dec
push
mov
mov
lods
popf
inc
int3
scas
xor
lds
dec
xor
cmpsl
xor
jb
mov
xor
mov
push
movsb
das
adc
shrb
les
scas
divb
mov
lds
pop
int3
outsb
js
mov
in
mov
adcb
mov
shlb
test
sahf
stos
sarb
cmpsb
push
lahf
mov
sarl
test
fs
mov
inc
cmp
stos
and
mov
test
cmp
push
sbb
push
lret
mov
inc
push
cwtl
ficomps
mov
xor
pop
mov
stos
ror
js
mov
add
lahf
js
mov
inc
push
aad
inc
jl
mov
mov
add
shl
cmpsl
or
loopne
shlb
fnstenv
sbb
inc
andb
scas
idivb
rcr
mov
add
int
pop
mov
in
push
mov
push
lds
mov
adc
add
jmp
mov
xor
out
pop
in
ret
clc
std
fsubl
xlat
mov
adc
int
jbe
mov
sarb
inc
shlb
out
dec
je
cmp
je
lea
cmpsb
inc
aam
shll
mov
lret
dec
sub
and
sbb
enter
or
xchg
cmp
je
icebp
mov
jne
mov
ffreep
and
enter
mov
aam
je
iret
pop
lret
lahf
in
pop
pop
jnp
ret
dec
mov
add
lret
js
enter
enter
lret
mov
shrb
sub
js
mov
xlat
inc
js
ret
mov
dec
je
pusha
orb
push
push
js
enter
xchg
mov
xlat
jl
mov
movsb
js
cmp
rclb
mov
mov
inc
sarb
cltd
inc
mov
mov
jmp
pop
mov
mov
mov
cmp
mov
jns
cmp
mov
movsb
shll
inc
fsubr
mov
mov
ret
mov
ficoms
xor
or
push
shll
insb
mov
lret
ret
push
adc
js
je
js
je
ret
mov
mov
mov
scas
sahf
movsb
sbb
leave
mov
cmp
mov
movsb
push
lea
jo
mov
push
fistpll
repz
mov
cmc
mov
test
mov
mov
inc
fcmovbe
mov
mov
je
icebp
mov
xor
mov
mov
cwtl
mov
lods
add
xor
mov
mov
push
mov
mov
test
sarl
xor
daa
sub
ficoml
inc
lret
mov
js
rol
push
nop
test
cmp
mov
adc
nop
mov
gs
leave
cmp
clc
jo
pop
mov
mov
iret
icebp
int3
jno
leave
mov
aam
mov
jo
jecxz
addr16
call
cmp
ficomps
aam
pop
jl
mov
and
cmp
sarl
test
aam
popf
mov
push
xlat
ret
pop
int3
mov
mov
cmp
cld
hlt
aam
xor
mov
jo
ficompl
andl
out
inc
in
clc
into
insb
xlat
rorb
adc
je
lahf
arpl
pop
lods
jo
sarl
pusha
fildl
int
repz
loopne
fcmovb
mov
xchg
je
mov
add
fld
mov
lcall
popa
je
rol
xor
insl
fcom
ret
mov
mov
sbb
push
dec
adc
cld
pop
mov
scas
fisubrl
lret
pusha
fcoms
shlb
sub
iret
mov
loopne
sbb
mov
jo
popf
mov
loopne
mov
mov
add
xor
jne
test
rcrb
pusha
jne
mov
cld
mov
pop
in
adcb
insb
rorl
mov
cmc
shlb
dec
and
jae
rol
imul
lret
xor
inc
xor
inc
mov
js
push
adc
shll
pushf
cmp
push
xchg
cmp
add
add
je
iret
mov
mov
loopne
das
sarb
push
fsubs
ss
mov
mov
push
test
data16
add
cmc
je
xchg
pop
loopne
stos
jb
sub
pop
push
fdivl
mov
clc
xlat
add
arpl
inc
enter
cwtl
fs
cltd
int3
jbe
mov
pushf
lock
test
aaa
mov
js
push
lret
mov
push
leave
mov
cmp
out
mov
or
arpl
sarb
push
int3
js
mov
inc
js
mov
mov
xlat
lock
push
mov
divl
jl
lds
cmp
ljmp
ror
lahf
icebp
fadd
outsb
test
scas
mov
pop
into
movsb
fistps
shl
xor
xor
mov
movsb
mov
cmpsl
push
sub
cwtl
jo
int3
and
jo
lret
sub
mov
lock
or
int
mov
sbb
dec
in
je
gs
push
inc
scas
js
adc
fnstcw
mov
insb
test
add
shrb
sub
je
out
jg
addb
mov
mov
mov
add
xor
mov
lods
jo
aad
rcr
mov
mov
scas
enter
fcomp
loopne
insb
js
aam
sbb
push
aam
hlt
lods
cmp
enter
not
leave
nop
js
lds
mov
aaa
xor
adc
std
mov
sub
js
xor
mov
ds
fsubrs
jb
mov
test
dec
ror
sub
mov
sarl
int3
xorb
inc
adc
loopne
test
dec
mov
aam
nop
mov
jmp
aaa
push
andb
mov
stc
pop
xlat
les
int3
dec
clc
push
lods
and
pushf
ljmp
fidivs
ret
mov
ja
add
xor
pushf
sbb
outsl
inc
mov
jne
fnstenv
fdivrl
and
dec
cmc
xchg
sarl
pusha
sub
push
leave
mov
sahf
inc
jl
mov
les
je
dec
mov
scas
lods
sahf
inc
or
xor
imul
xor
rcrb
js
js
mov
xor
outsl
leave
mov
inc
dec
insb
fdivl
aaa
xor
xor
rcr
fcmove
mov
popf
pushf
ror
pop
mov
lret
pop
lds
lahf
clc
insb
fstps
dec
fst
dec
cmpsl
je
das
mov
mov
iret
add
pusha
mov
mov
enter
int
mov
mov
add
mov
inc
fucom
inc
mov
cwtl
sub
sarl
popa
mov
hlt
sub
int3
popf
cmp
test
sub
lret
xlat
mov
mov
cmp
and
sub
movsl
ds
scas
mov
mov
js
push
mov
sbb
cmp
ret
cmp
lds
mov
in
adc
negb
push
inc
pushf
fldl
into
fdivl
shl
iret
lds
ljmp
lret
imul
push
shll
int
test
pop
dec
je
sub
je
or
iret
ret
mov
adc
jne
int3
je,pt
mov
cmp
mov
jge
ss
js
int3
fwait
sub
mov
mov
je
in
or
jp
loopne
leave
jg
rcr
mov
push
movsb
hlt
rcr
enter
push
adc
les
shlb
mov
in
fbstp
mov
pusha
xchg
fmuls
fmuls
jl
mov
jge
adc
scas
outsb
xchg
iret
les
popf
pusha
xchg
xchg
rcr
push
xlat
fnstenv
mov
xor
je
shrb
leave
lods
test
push
ret
and
je
mov
push
rcrl
cmp
mov
call
in
int3
xchg
pushf
inc
js
jmp
cld
mov
adc
adc
js
mov
in
shll
aad
fistl
rcr
inc
mov
mov
call
inc
mov
pop
fs
addr16
dec
je
lret
int
jnp
sarb
dec
je
je
hlt
fs
mov
mov
sub
jne
sub
xchg
divb
lret
lock
lret
mov
xor
cld
sbb
cld
stos
cmp
and
test
and
shrl
out
mov
scas
or
shll
and
jo
lahf
ss
repz
dec
mov
popa
mov
jg
je
jbe
mov
cwtl
pop
test
cwtl
push
rcr
inc
jbe
ror
iret
mov
test
or
jl
push
sarb
lea
mov
dec
mov
and
out
rorl
loopne
cmp
sub
cmp
add
sub
or
clc
aaa
cld
and
pop
dec
sbb
cld
xor
pop
int3
mov
es
and
adc
mov
int3
enter
sub
mov
ret
add
adc
mov
aam
shr
lret
push
fcomps
inc
js
cmp
aam
pop
xor
aad
es
lods
std
lret
or
mov
inc
xor
mov
int3
rcl
int3
aaa
sbb
insb
je,pn
lock
aam
movsb
stos
fnsave
sub
je
movsb
lods
add
push
imul
mov
add
lret
cmp
movsb
xorb
aam
arpl
mov
insb
sbb
adc
lods
imull
cmc
adc
mov
je
xor
mov
insb
xlat
xchg
sub
call
mov
xor
mov
inc
rcr
scas
mov
sub
sbb
aam
mov
enter
fldcw
mov
fs
rolb
and
in
mov
scas
adc
inc
fsubl
rcl
add
icebp
sub
dec
ljmp
iret
add
arpl
mov
aam
not
sarb
cld
and
mov
fdivrl
pop
test
dec
int3
mov
mov
enter
aad
into
lock
out
pop
mov
jecxz
sub
fwait
cmp
stos
push
adc
adc
daa
mov
les
sub
in
les
pop
jne
dec
adc
xor
xlat
dec
push
xor
sbb
push
mov
xor
in
mov
movsb
loope
sbb
mov
in
and
and
fidivs
mov
inc
adc
mov
and
fisttpl
pop
dec
je
fadd
mov
or
mov
lea
rclb
imul
push
push
nop
adc
mov
aad
rcl
lret
ss
je
test
add
je
scas
adc
fcompl
xchg
sbb
adcl
out
mov
enter
mov
rolb
mov
insb
fldl
lea
cmc
mov
or
mov
into
fldenv
jmp
loop
inc
ds
repnz
rol
leave
and
xchg
push
les
mov
push
mov
js
pop
imul
loopne
xor
scas
popf
enter
and
int
shlb
mov
mov
mov
sbb
mov
mov
js
rolb
push
divb
lds
in
js
lahf
inc
shl
fstps
mov
roll
rolb
enter
mov
inc
fs
dec
jo
shlb
or
aam
je
std
mov
imul
adc
mov
mov
mov
fidivl
mov
lds
in
jmp
lahf
inc
lock
or
mov
aam
int
add
hlt
in
fcom
popf
test
rolb
int3
lret
mov
je
lods
pop
out
mov
insl
je
aad
and
mov
lret
cs
and
leave
inc
int
cwtl
je
dec
mov
out
shrb
pusha
icebp
fs
mov
pop
push
cmp
iret
mov
mov
outsb
jne
ret
int
rcll
rcr
aam
fisubrl
aam
sbb
je
mov
pop
and
cmp
pop
ljmp
lds
dec
clc
mov
lods
inc
jge
aaa
js
cs
jo
dec
sbb
jl
enter
sub
hlt
mov
sbb
jbe
mov
ret
pop
call
mov
js
mov
push
xor
dec
aad
xor
imul
push
into
ret
les
mov
loop
sbb
sahf
mov
push
mov
jo
push
jo
jne
pusha
push
sub
adc
int
lods
imul
mov
xchg
xor
fsub
out
std
push
dec
add
pusha
cmp
je
rcr
gs
icebp
les
je
loopne
je
dec
mov
push
in
scas
cmp
mov
aad
xchg
mov
mov
test
lods
push
mov
fs
nop
shlb
rol
inc
push
fcom
int3
scas
inc
sbb
rcr
mov
cld
rcll
lds
loopne
scas
lret
xor
scas
mov
gs
hlt
pop
enter
mov
mov
arpl
mov
rcr
xor
fsubrp
cmp
rcl
cld
push
add
mov
arpl
xchg
mov
int3
add
int3
out
sbb
repz
fidivrl
mov
and
fldt
fisubs
inc
je
sahf
sbb
fsubl
je
or
notl
rol
xchg
add
mov
sar
dec
call
loop
scas
inc
jo
sub
ds
xchg
push
push
inc
sbb
jo
dec
pop
pushf
insb
xorb
sub
mov
fldenv
idivb
adc
je
push
push
leave
shlb
daa
adc
push
cwtl
in
jl
leave
lods
dec
mov
pusha
jecxz
push
push
outsl
push
insb
inc
sbb
xor
push
ja
outsl
in
sbb
add
cmc
or
inc
jl
xlat
data16
cld
fmul
push
mov
inc
mov
lret
mov
je
push
adc
dec
je
xor
push
int3
push
movsb
les
xchg
movsb
roll
jle
push
pushf
mov
xchg
cmp
push
std
inc
push
and
ret
push
mov
loop
push
xor
mov
or
shlb
xor
aas
mov
xor
je
cmp
lahf
push
pop
scas
fwait
bound
mov
movsb
and
push
push
pop
cmpsb
add
fs
fs
sub
pushf
mov
loopne
mov
je
dec
pop
insb
and
push
je
enter
aam
test
sbb
jo
movsl
pushf
stos
mov
pop
icebp
push
nop
xchg
pop
pop
adc
iret
scas
add
popa
enter
inc
insb
pop
fs
shll
pop
nop
cmc
movsl
pusha
mov
adc
dec
sbb
je
das
mov
je
movsb
loopne
hlt
xchg
loopne
jl
dec
inc
push
mov
and
push
lock
inc
je
scas
shrb
nop
cmp
sub
fs
dec
iret
lods
sbb
jne
jo
inc
test
mov
int3
mov
pop
mov
or
jne
xor
pop
push
jo
ficoml
jo
adc
fwait
addr16
pop
movsb
mov
xor
mov
dec
fs
jo
inc
fs
push
aad
push
nop
add
in
push
push
out
and
inc
push
mov
mov
sbb
js
push
movsl
cwtl
sub
int3
fs
cmpsb
push
stos
mov
in
test
out
fldl2t
fcoms
movsl
sbb
adc
cltd
imul
aaa
je
lods
aaa
js
lds
mov
outsl
insb
jl
sahf
xchg
aas
pushf
in
mov
imul
leave
sbb
and
lock
iret
add
push
enter
mov
sahf
inc
inc
pop
mov
or
jl
inc
jle
imul
in
add
in
cltd
cld
shr
sbb
je
jno
ret
adc
mov
push
je
mov
leave
movsb
aam
dec
adc
inc
adc
and
mov
push
lret
mov
pop
incb
mov
xor
out
mulb
dec
movsb
mov
xchg
movsb
xlat
and
test
add
cmp
divb
movsl
jle
mov
dec
add
adc
inc
aad
xor
mov
push
sub
je
hlt
js
sub
jne
inc
in
sub
pop
fmull
push
mov
mov
cwtl
xchg
je
js
popf
mov
and
sti
mov
fsubl
js
mov
xor
stos
xor
add
iret
sbb
test
fsubrs
std
mov
je
popf
push
test
test
cmpsb
lods
test
jne
mov
es
movsb
test
cmp
jo
fists
mov
mov
push
xchg
fs
mov
sub
jne
push
popf
mov
mov
push
mov
push
enter
mov
xlat
xorl
dec
jmp
enter
cltd
add
mov
cmp
sahf
std
test
in
stos
push
test
dec
mov
adc
xor
mov
cld
fprem1
and
and
sub
sahf
and
dec
mov
call
adc
mov
xor
nop
xchg
xlat
mov
jmp
fsubrl
and
je
cmp
cmp
sti
je
adc
sub
adc
xchg
dec
mov
imul
dec
call
push
lahf
inc
xor
dec
mov
add
push
scas
sub
inc
dec
dec
out
mov
les
je
mov
aad
jne
cmpsb
out
xor
int3
mov
in
dec
jl
sub
mov
inc
push
sub
or
jne
jne
or
movsb
and
gs
fadds
imul
jne
or
xchg
aad
loop
sbb
jo
pop
cld
sub
cmp
xchg
outsb
clc
cwtl
dec
push
xchg
divb
xchg
outsb
sti
je
fstpl
jne
test
push
pop
shl
and
adc
sbb
push
cmp
sbb
int3
rorb
int3
shrb
sub
rcrl
enter
mov
aam
mov
mov
xor
sahf
sub
push
and
xchg
mov
loope
push
scas
cld
fxch
adc
sarb
jne
cwtl
mov
aam
mov
adc
mov
movsb
push
js
aam
int3
shll
into
and
add
leave
mov
sahf
outsb
xchg
nop
dec
js
je
pop
outsb
mov
das
mov
cmp
ret
inc
sbb
in
call
std
adc
nop
xlat
inc
sbb
fadds
and
je
mov
cld
sbb
popa
test
cli
pusha
ret
xor
pop
jne
pusha
jecxz
cld
mov
add
mov
cmp
je
push
mov
pop
in
loopne
ficoml
and
adc
push
pop
lods
mov
fldenv
mov
aaa
xor
outsb
ds
lahf
or
loop
push
ss
and
scas
movsl
js
aaa
nop
aam
fld
adc
mov
mov
je
xchg
sarb
out
cli
js
mov
and
js
mov
mov
mov
dec
aad
fwait
fs
in
and
inc
out
je
add
add
xchg
or
js
outsb
inc
je
mov
je
aad
loop
pop
std
sbb
mov
cmp
dec
rcll
fmull
sbb
pop
xchg
dec
std
hlt
sahf
sub
stos
fbld
jo
mov
jne
dec
test
xchg
push
mov
jo
cs
je
jnp
aam
call
sbb
fdivrl
clc
out
mov
mov
in
and
pop
push
clc
adc
out
sarb
push
mov
push
mov
cmp
sbb
push
lds
and
add
clc
cmp
les
lds
sub
call
out
add
pop
or
fs
je
mov
popf
outsb
je
lds
jl
mov
fmull
loope
pop
test
fsubr
xor
add
xor
jne
fcoms
xchg
hlt
adc
push
mov
inc
mov
push
cmp
pop
sbb
lret
insb
fs
pop
out
sbb
clc
mov
je
les
and
inc
jne
pop
adc
lcall
les
fsubl
push
xor
pop
and
sbb
movsl
les
sbb
clc
out
test
outsb
shll
or
and
or
adc
xor
mov
sbb
push
jo
dec
les
pusha
fistl
pop
fs
inc
cwtl
dec
daa
inc
xor
movsb
add
fildl
pop
adc
cmp
add
iret
xor
or
push
sbb
jne
movsb
in
rolb
mov
cltd
jne
xor
mov
rolb
xchg
movsb
xor
divl
popf
je
cs
and
cld
shr
add
jne
test
inc
leave
les
fsubl
xor
ds
fisubrl
ret
js
mov
adc
gs
js
push
adc
lods
xchg
shll
roll
sub
jne
popf
push
xchg
divb
loope
cmp
outsb
dec
jl
js
jne
sub
inc
push
je
jecxz
les
cmp
stc
push
mov
inc
std
add
adc
xor
jne
lods
sarb
ljmp
aam
fldcw
push
cld
js
and
sub
mov
cld
xchg
cld
add
insb
push
out
cmp
cmp
cmovge
mov
inc
mov
je
popf
sub
add
enter
insb
mov
outsb
xor
fidivrl
sbb
lock
loopne
out
push
pop
xchg
mov
pop
inc
test
adc
mov
ret
shlb
leave
shll
stos
ss
fistps
mov
int
mov
inc
in
or
push
xor
dec
cmp
push
pop
lock
push
xchg
idivl
pop
lods
stc
mov
in
pop
cmp
lds
cltd
adc
lcall
imull
cmp
cmp
rol
icebp
dec
push
xor
and
je
add
js
mov
je
lds
jo
fnstsw
outsb
pushf
mov
cmp
je
sub
and
sub
cli
fisttps
outsl
sub
add
jo
adcl
daa
je
leave
inc
mov
jo
stc
dec
shll
insb
loopne
sti
pusha
leave
push
or
je
gs
jecxz
adc
jmp
xor
sub
pop
cmp
cmp
lea
stc
js
cmp
mov
pop
imul
out
pop
and
pop
gs
subl
sbb
js
ds
les
ret
gs
dec
or
adcb
call
push
sti
stc
movsb
cli
test
xchg
ds
mov
sub
fcompl
mov
fcoms
inc
enter
push
push
dec
inc
xor
cld
loopne
cld
push
aam
mov
cmp
aad
hlt
xor
js
dec
push
loope
pop
or
shl
fdivrl
push
les
orb
inc
push
insl
cld
sub
jmp
fstpl
loopne
xchg
pop
cwtl
dec
shlb
and
les
and
dec
jne
mov
in
xor
shr
les
fsts
mov
fs
sbb
sbb
test
pop
and
xchg
pop
xor
aam
aam
add
clc
cmp
mov
xor
pusha
pop
aaa
nop
and
xchg
inc
add
in
jo
popf
push
je
sahf
jl
cld
pusha
cli
xchg
inc
or
outsl
xchg
lret
jl
and
adc
out
test
dec
and
push
push
cmp
sarl
push
sub
test
push
xor
push
push
adc
or
inc
adc
xor
inc
pop
adc
lahf
repz
push
popf
mov
imull
repnz
jecxz
push
add
bound
out
jl
in
push
pop
cli
cmpsb
insb
pop
or
adc
mov
cmp
xchg
popa
cmc
mov
jp
push
cmc
pushf
dec
dec
sbb
movl
mov
inc
push
shl
xor
js
icebp
mov
cmp
clc
notb
xchg
push
hlt
lcall
rolb
test
daa
mov
scas
cmp
add
add
fs
movsb
aam
mull
sub
mov
jno
xor
mov
cmp
mov
mov
pop
enter
fcomp
cld
ror
sti
cmp
xor
hlt
sub
add
push
cmp
inc
pop
push
pop
outsb
loopne
sub
or
push
xchg
je
pop
testb
sub
js
xor
or
frstor
std
push
int
cmp
xor
cmp
pop
jne
lcall
dec
pop
pusha
js
or
add
pusha
push
and
dec
jne
cmc
out
cmp
cli
insl
push
xor
sti
mov
cmp
push
mov
cmp
jge
mov
jo
mov
je
mov
je
push
or
cltd
stos
cmp
mov
into
js
ss
aas
xor
js
pop
jne
sbb
push
xor
imulb
je
aaa
push
movsl
pop
stos
pop
je
push
incl
lea
and
je
cmc
push
arpl
dec
and
divb
push
sbb
cmp
sbb
push
sbb
push
and
push
mov
jo
imulb
mov
jg
pop
jo
sub
clc
or
mov
adc
pop
adc
aad
sub
icebp
cmp
lock
call
loopne
and
test
and
push
xor
cmpsl
push
cmp
enter
cmpsb
les
pop
mov
les
cmp
js
and
outsb
call
test
or
loopne
ds
cmpsb
xor
in
negl
push
cmp
inc
bound
add
push
or
add
add
cmp
call
push
push
stos
dec
sahf
cmp
pop
add
fisttps
push
aam
pop
pinsrw
insl
cmp
ljmp
lods
xlat
dec
cmpb
pushf
scas
mov
xchg
outsl
test
xor
cmp
mov
cmp
dec
dec
cmp
mov
pop
xchg
out
inc
add
loopne
xchg
mov
jbe
mov
scas
pop
or
pushf
push
js
imul
js
pusha
dec
inc
aas
dec
jg
push
mov
cmp
xchg
cmp
jne
sub
push
sub
insb
test
in
fdivl
inc
and
fstpt
dec
fs
add
mov
adc
fs
je
lock
pop
sbb
add
mov
es
aam
adc
movsl
mov
pop
fwait
push
cwtl
loopne
xchg
shlb
int3
inc
mov
cs
mov
out
add
xor
icebp
and
cwtl
pop
mov
cltd
add
clc
jno
and
cwtl
lret
loopne
sub
jbe
pop
or
lods
mov
je
loopne
test
cmp
mov
add
fisttpll
push
fs
pop
or
shrb
adc
arpl
push
jo
or
push
jo
hlt
sbb
je
out
or
and
es
cltd
outsl
pop
push
sub
repz
cmp
lea
clc
adc
call
or
pusha
or
mov
pusha
pop
or
js
jne
xor
or
fs
je,pn
clc
cli
and
fnsave
subb
fsubl
cmpl
adc
cmp
jle
jge
fs
aas
pop
insl
mov
push
lods
adc
mov
int3
sub
mov
pushf
into
clc
into
lods
inc
and
mov
sbb
gs
pop
xchg
pusha
push
out
aas
sub
xor
pop
fcoml
pop
fs
fdiv
in
adc
ror
aas
cmp
jno
and
jle
jnp
pop
cwtl
cmp
push
pop
je
push
dec
jl
jge
mov
in
xchg
mov
adc
lahf
pop
and
jl
sub
pushf
js
je
ja
stc
clc
lods
cmp
out
inc
repnz
mov
sbb
jmp
adc
xorl
and
idivl
into
dec
and
aam
loopne
rcrb
pop
xor
test
and
adc
push
or
xor
push
jo
idivb
js
fstp
cmp
lock
push
push
cmp
mov
cmp
sub
call
orb
mov
dec
add
or
pop
cmp
dec
je
pop
es
cwtl
cwtl
js
je
add
push
mov
rcr
add
pop
add
push
xor
xchg
push
pusha
add
push
adc
jo
sbb
mov
mov
outsl
jno
jo
pop
sub
fsubp
push
sub
sarb
xor
nop
add
into
xor
dec
mov
rolb
pop
cmp
jmp
sbb
lahf
rcl
mov
push
or
aam
pop
fistps
dec
fs
add
xor
push
sub
pop
ss
loop
mov
dec
add
xor
scas
cmp
out
les
hlt
push
sbb
adc
addb
xor
pop
negb
cmpsb
xor
je
fs
push
js
js
push
mov
hlt
push
push
je
dec
dec
jl
pusha
icebp
xchg
dec
je
cmp
cmp
decl
int3
and
test
rclb
je
sahf
into
or
cltd
dec
dec
fisubs
mov
dec
es
xor
outsb
and
sbb
popf
pop
pop
cmp
jno
cmp
nop
xchg
cmpsl
pop
mov
scas
sbb
pop
push
cmpsb
dec
jl
lods
in
sbb
sbb
cmpsb
cld
sbb
pop
sbb
cld
and
add
std
jge
popf
test
mov
or
lea
adc
or
or
add
push
pop
and
mov
cmc
rclb
or
scas
js
and
xor
jne
mov
and
cmp
stc
scas
lods
js
clc
clc
shl
insl
sbb
push
fldl
lock
in
pusha
sbb
lcall
pop
cltd
sbb
data16
cmp
movsb
push
cmpsl
mov
daa
scas
enter
icebp
push
clc
cld
xor
sub
inc
or
push
sbb
stc
mov
loop
adc
js
push
sbb
pop
je
pop
fidivl
call
cmovl
je
push
idiv
test
xor
add
pop
idivb
adc
add
dec
js
add
add
add
jl
add
inc
adc
inc
and
push
pop
jge
jo
adc
cld
je
pop
leave
push
jo
ficomps
dec
push
dec
daa
mov
dec
adc
mov
push
jmp
add
stc
test
mov
adc
addb
or
scas
add
add
popa
push
daa
mov
xor
and
cmp
inc
sub
cmp
or
repz
adc
dec
sbb
sbb
cmp
idivl
add
popf
subb
mov
adc
js
fbld
movsb
or
fs
lock
loopne
in
ljmp
repnz
dec
out
cmp
inc
psllq
aaa
or
push
mov
push
cld
xor
push
clc
mov
mov
out
jo
sub
aas
sbb
dec
pop
aas
xchg
pusha
sbb
sub
jo
hlt
cmc
fstpl
and
daa
push
add
int3
pop
push
push
int3
pop
pop
sar
push
add
or
mov
je
add
xchg
add
pop
push
call
js
push
mov
push
add
cmpsb
xor
push
inc
movsb
xor
add
out
sub
cmc
pop
adc
popf
dec
hlt
test
or
push
pop
icebp
push
and
int
push
dec
es
sub
cmp
mov
adc
push
mov
pop
lock
adc
mov
mov
pop
pusha
add
lock
adc
inc
arpl
add
je
add
or
sbb
loopne
push
add
inc
jne
in
push
pop
xor
push
or
out
xor
pop
repnz
pop
test
push
or
and
xor
cwtl
push
cmp
bound
push
dec
xchg
fbstp
push
je
je
clc
mov
pushf
hlt
pop
or
in
lock
mov
mov
ss
add
je
mov
adc
adc
js
aam
sub
fisttps
in
xor
das
and
repnz
dec
and
lahf
dec
fldl
inc
fucomip
out
ss
mov
idiv
aad
clc
adcl
test
mov
pop
js
cmp
inc
aas
daa
mov
jo
sarb
push
sub
push
push
es
inc
lods
jo
clc
dec
adc
loopne
push
icebp
leave
cmpsl
pusha
add
add
enter
ud1
or
add
in
inc
mov
dec
push
inc
inc
inc
es
rcrb
scas
pop
pop
adc
mov
pusha
pop
pop
xchg
sub
adc
rolb
xchg
pusha
push
adc
cwtl
aam
lock
mov
idivl
pop
clc
rcll
adc
push
cmp
lahf
pop
lods
test
les
sub
mov
outsb
push
sub
xor
push
xlat
jne
es
nop
xor
aad
js
aam
insb
xlat
cmc
loope
push
dec
sub
je
inc
shll
daa
fildll
push
hlt
and
into
je
sbb
cld
pop
cli
enter
in
xchg
jo
cmpsb
push
std
or
jo
pop
pop
ret
rorb
sub
adc
fsubs
adc
outsb
push
push
mov
mov
cmp
push
ficomps
filds
in
outsl
xchg
mov
fcompl
mov
xchg
xchg
jo
dec
sub
or
cli
mov
cld
xor
and
adc
pushf
lods
jne
pop
flds
hlt
sahf
add
pop
or
aas
or
addb
dec
push
leave
jnp
add
adc
sarb
mov
enter
mov
adc
mov
mov
xor
je
pop
loopne
les
lahf
aad
ret
push
add
fxch
inc
fdivr
call
cmp
ficoms
push
test
cmc
sti
ljmp
cmp
sbb
in
or
inc
push
js
dec
sbb
adc
js
xor
test
mov
movsb
bound
and
test
in
xor
cmpsb
clc
cmp
sub
mov
dec
xchg
fmull
or
sub
jo
js
andl
nop
icebp
shrb
in
inc
pusha
adc
mov
aas
adc
je
mov
mov
addr16
xchg
mov
scas
jbe
adc
mov
faddl
aad
cmp
fdivs
sbb
ret
push
movsb
push
jl
addb
mov
loopne
fstpl
out
je
inc
dec
sbb
loopne
push
cmp
pop
cmc
lock
hlt
mov
sbb
int
les
pop
mov
mov
dec
icebp
cmp
xchg
pop
hlt
cmc
out
cmp
and
pop
je
push
jo
insb
je,pn
fldl
enter
pop
sub
and
mov
je
pop
and
jecxz
imul
fistl
gs
aam
sbb
sub
push
mov
adc
dec
sub
hlt
sbb
dec
jnp
or
mov
scas
dec
loopne
adc
pop
or
adc
sub
lock
inc
adc
in
inc
hlt
pop
adc
or
xor
pop
std
xchg
or
movsb
mov
rorb
mov
int3
in
icebp
je
subb
into
pop
cmc
or
inc
and
in
mov
and
ljmp
sub
cmp
lock
pop
je
jne
je
push
dec
jg
cmc
mov
std
clc
faddl
and
outsb
int3
adc
push
mov
int3
cs
into
jecxz
inc
xor
pusha
in
xchg
repnz
cmc
jecxz
inc
inc
mov
inc
adc
ljmp
in
pop
and
dec
aam
dec
pop
xor
addr16
lock
mov
shl
bound
mov
mov
mov
lret
sbb
in
negl
div
pushf
pop
aad
add
pop
sarl
mov
pushf
or
pop
dec
sbb
subb
and
push
cmp
es
adc
icebp
mov
cmp
xor
add
arpl
loope
fsubs
pop
decb
mov
dec
xor
clc
hlt
js
cmp
cmp
push
cmc
sub
xchg
cmc
or
xchg
ja
mov
in
fstp
pop
icebp
sub
inc
jo
fsubrs
mov
sub
jo
pop
adc
arpl
mov
sbb
push
push
stos
je
mov
and
push
pop
clc
push
aam
hlt
cwtl
pushl
lret
repz
xchg
pop
mov
dec
fs
inc
cmp
mov
inc
adcb
mov
cmpsb
jo
mov
cmc
clc
gs
jge
pop
les
add
lods
mov
push
push
and
je
xor
push
inc
or
pop
push
daa
mov
and
jmp
loopne,pn
cld
out
fldl
cmp
les
sbb
mov
fcoml
or
orb
pop
out
xchg
les
xchg
or
hlt
cld
or
insb
sbb
adc
adc
pop
pop
jne
ds
and
pushf
push
xchg
js
and
hlt
ss
pop
in
repz
jo
inc
in
fbstp
mov
xchg
movsb
cmc
or
sahf
fiaddl
jo
je
insl
js
add
jo
pop
adc
out
sbb
pop
rcrb
sub
xor
out
ror
add
sbb
je
addr16
xor
jecxz
in
dec
pushf
out
lds
dec
and
sbb
fsubrl
adc
nop
pop
hlt
shlb
xor
inc
adc
pop
in
or
sti
cmc
lods
mov
sbb
pop
mov
pop
add
adc
push
loopne
pushf
fstp
mov
mov
sub
js
pusha
std
mov
movsb
call
in
mov
packsswb
mov
add
inc
cmpb
or
jns
sbb
js
sbb
cmp
inc
pop
adc
adc
in
dec
lock
and
in
aad
cmp
aam
sarl
mov
mov
das
je
jne
mov
add
aas
push
jo
xor
out
subb
push
push
fwait
jge
push
es
add
and
dec
div
ss
das
int3
orl
divb
test
push
out
mov
cmc
dec
sbb
rcrb
inc
ss
shr
pop
icebp
pushf
mov
lea
test
div
in
cmp
push
sbb
adc
jne
add
or
fdiv
jle
enter
pop
cmp
es
pop
daa
scas
xor
hlt
mov
test
test
mov
movsb
daa
jnp
or
or
inc
push
lock
xor
rcrb
mov
mov
in
sbb
pop
push
mov
sbb
js
dec
icebp
mov
push
and
les
popf
mov
push
add
out
test
sub
sub
repz
aam
mov
ret
hlt
fistps
pusha
dec
fcomps
shr
mov
mov
and
repz
adc
push
outsb
inc
xor
cmp
sub
xor
pop
aas
or
add
dec
mov
mov
mov
inc
aas
outsb
jo
mov
js
lcall
arpl
fmuls
push
sub
jo
mov
or
clc
mov
pop
sbb
je
in
lcall
pusha
stos
push
mov
pop
and
mov
sti
sub
aad
add
push
pop
adc
add
int
hlt
nop
orb
out
cmp
xor
cmp
nop
mov
call
mov
mov
mov
in
push
and
mov
pop
add
adc
ret
adc
jecxz
push
cld
aaa
in
mov
shl
adc
sbb
repnz
push
cmp
insb
in
cwtl
fidivrs
in
mov
jo
and
xor
movsl
test
mov
push
clc
test
xlat
xor
test
dec
and
pop
rcr
je
mov
mov
push
jo
add
mov
notl
add
jo
lock
mov
xor
or
leave
js
movsb
mov
jg
cmp
in
dec
hlt
lcall
arpl
fsubl
adc
inc
cwtl
je
sbb
inc
sbb
adc
or
fdivs
or
shrb
in
xchg
std
cli
sub
aaa
je
sbb
add
push
mov
dec
pop
rcrb
hlt
xor
jmp
add
clc
push
mov
rcr
movsb
lock
gs
jmp
pop
repz
hlt
je
repnz
xchg
and
outsb
scas
popf
ljmp
dec
lds
pop
jo
push
dec
and
das
cmp
cmpsb
cmc
xor
hlt
cmp
jnp
stc
outsb
push
push
icebp
outsb
pop
pop
mov
jo
imul
add
jno
negl
or
mov
loopne
mov
sbb
nop
or
lods
xchg
or
adc
xchg
push
adc
lock
test
fs
mov
push
test
fbstp
push
lds
mov
lods
add
clc
les
jle
mov
js
mov
push
es
out
and
nop
out
std
pop
ljmp
sbb
or
hlt
jl
jge
sti
sub
push
out
xchg
dec
sbb
repz
in
js
fisubrs
sbb
pusha
sbb
mov
inc
dec
pusha
or
push
fidivs
push
and
je
aam
and
gs
lock
sti
pop
movsl
rclb
clc
cmp
jl
out
jo
add
je
mov
xor
and
clc
adc
loop
pop
stc
jno
push
loopne
jo
mov
add
adc
jo
xchg
cld
out
imul
add
jo
lock
popa
negb
add
inc
arpl
out
cmp
and
aam
jmp
xor
aam
fs
cwtl
in
outsb
inc
pop
sti
jg
adc
clc
lods
or
push
jnp
mov
inc
loope
jecxz
sub
lock
push
lea
mov
stc
mov
fcomip
scas
sti
rcll
popf
sub
jbe
pushf
sbb
mov
sbb
movsb
mov
loopne
xchg
sub
lock
je
push
push
and
cld
popf
and
jl
and
mov
push
daa
mov
or
lods
jne
push
sub
pusha
ds
repnz
inc
sub
adc
pop
scas
sbb
clc
push
pop
cmp
test
movsb
bound
or
xchg
test
pusha
or
fucomp
out
cmp
test
test
cmpxchg
pop
test
pop
fnstsw
mov
cld
adc
inc
in
or
addr16
sbb
movsl
hlt
mov
arpl
mov
faddl
hlt
add
je
cli
xorb
pop
out
outsb
faddl
mov
jo
dec
cmp
daa
sbb
cmc
pop
sbb
push
adc
and
adcb
jg
clc
lods
inc
jne
cmpsb
out
cwtl
sbb
mov
adc
pop
add
cmc
jle
jl
pop
mov
push
fstl
cld
negb
push
adc
out
or
inc
mov
add
push
mov
enter
pusha
mov
loope
shrb
repnz
pusha
mov
lea
stos
pop
add
inc
add
pushf
ss
test
xor
add
pop
aas
adc
pusha
cmp
cmp
fs
or
push
out
mov
xor
lock
xor
jl
hlt
push
inc
or
and
pop
adc
inc
lods
jge
add
jo
push
in
dec
je
lock
xor
and
mov
loop
mov
adc
push
loopne
mov
ficoml
dec
and
aam
push
repz
enter
daa
push
sbb
pusha
dec
in
fsts
cmp
hlt
loope
pop
nop
pop
push
hlt
negb
nop
pop
dec
inc
push
sahf
jo
out
xor
cltd
pop
mov
mov
stc
xchg
shrb
lret
andb
mov
push
add
xor
ja
in
mov
push
int3
xchg
int3
test
cld
mov
loop
mov
test
and
xchg
push
ds
jl
clc
xchg
pop
lret
movsb
mov
cmpxchg
pusha
lods
mov
std
cld
outsb
enter
lods
or
out
pop
out
sub
cmp
ficomps
pusha
iret
jno
cli
jns
pop
pop
sahf
int3
jl
jne
cld
xchg
inc
push
push
sti
hlt
dec
push
push
je
push
notb
repnz
pop
or
call
add
movntps
dec
push
pushf
popf
nop
cmp
scas
fiaddl
jo
jo
pop
push
and
hlt
or
in
sub
push
loopne
xor
loopne
push
push
loop
jl
fstpl
inc
push
mov
sub
mov
jl
lock
stos
in
sti
adc
call
push
jno
clc
lods
test
jo
fs
in
lock
adc
sub
sub
jge
add
iret
out
pushf
out
lock
push
cmp
xor
mov
xor
fucom
adc
push
ds
jle
cmp
pop
xor
int3
xchg
fimuls
push
jmp
sub
rcll
and
pop
daa
in
les
stos
stc
sar
xchg
mov
inc
sarb
andl
int
sub
pusha
rcrb
iret
jle
ljmp
js
cmp
je
push
inc
pop
rclb
mov
rorb
in
dec
loopne
xor
rep
js
adc
pop
incl
cld
add
cmp
in
scas
test
add
fists
outsl
xchg
repz
add
jne
mov
pushf
push
mov
push
cmp
addr16
loop
jo
or
inc
out
lock
pop
jbe
lret
xor
fdiv
fwait
pusha
jo
sub
nop
mov
out
aam
fsubrp
fs
cli
xchg
shl
or
ds
sub
nop
int3
add
pop
and
js
xor
in
pop
into
addb
cmp
negl
push
movsb
lods
inc
les
hlt
lock
in
into
adc
enter
adc
and
and
sarb
dec
cld
cmpsb
jbe
sti
xchg
nop
adc
aam
mov
sbb
adc
push
sub
lods
mov
sub
es
lods
inc
push
fisttpll
pop
into
jle
and
shrl
fs
sbbl
xor
jne
sarl
je
imul
push
int
clc
jmp
arpl
lods
test
lods
cmc
cmp
mov
pop
nop
or
xor
in
mov
jo
ficompl
insb
push
popf
jo
ret
inc
push
int
movsb
jl
jle
inc
cmp
fcomps
in
outsb
adc
in
lahf
mov
iret
sub
mov
out
jl
pusha
push
stc
ret
sbb
push
aam
jg
jge
js
in
test
or
iret
adc
xor
bound
hlt
push
and
sub
mov
or
mov
push
call
push
sbbb
cld
dec
ds
stos
ja
std
mov
daa
xor
dec
in
je
out
mov
aaa
cwtl
sbb
addb
or
rcr
out
mov
add
aad
push
inc
or
cwtl
cmp
rclb
inc
stc
std
dec
xor
pop
or
mov
out
sahf
jo
outsb
xor
or
adc
cmpb
movsl
js
jnp
subl
into
push
cltd
push
in
cmpb
jmp
sbb
or
xor
pusha
dec
test
inc
push
jne
out
push
loop,pn
fidivrl
cmp
aaa
adc
insb
subb
jne
andb
fs
and
jnp
es
movsb
inc
dec
mov
jo
xchg
add
je
mov
add
jl
daa
or
add
loopne
push
dec
rcr
bound
mov
test
pop
and
sahf
call
push
out
cmp
je
into
enter
fdivrl
outsb
pushf
cmp
fdivs
cld
mov
pop
call
enter
push
mov
out
repz
and
in
out
mov
pusha
mov
sbb
mov
inc
or
cmp
shl
test
fstps
call
jl
sti
in
push
and
inc
add
dec
je
test
in
clc
or
inc
js
hlt
aam
push
pop
and
and
xchg
je
imul
int
loopne
or
sbb
jnp
and
orb
or
mov
hlt
or
lock
in
pushf
lds
push
pop
in
jo
es
xorb
cmp
pop
pusha
in
fwait
pusha
fdivrl
mov
repnz
aas
fcoms
out
mov
jecxz
mov
fildll
dec
cli
pusha
dec
loopne
nop
js
mov
jecxz
xor
mov
xor
jecxz
call
call
and
sub
enter
fdivrl
jae
adc
mov
mov
or
add
pop
enter
test
or
pop
add
cmpsl
orb
mov
pop
movsbl
or
movd
fwait
fs
push
sub
jne
lret
dec
fnstenv
sub
push
jle
ret
test
push
jno
mull
out
or
cmc
loop
out
sub
sub
out
push
push
je
jmp
hlt
xor
or
or
outsb
popa
and
fildl
adc
mov
repz
dec
xor
adc
push
aam
mulb
push
ficoml
xor
sbb
dec
sarl
inc
jb
movsb
enter
out
js
out
in
push
push
aaa
sub
pop
and
xchg
icebp
push
rcrb
arpl
mov
jo
int3
enter
mov
test
in
or
mov
xor
cld
bound
loope
enter
jo
outsb
push
ret
pop
pop
xor
shll
inc
cmc
mov
jb
sbb
jne
mov
jno
std
mov
je
add
fbstp
lods
mov
adc
js
or
pxor
lock
in
pusha
pusha
push
out
gs
call
icebp
mov
mov
xor
pusha
cmp
add
enter
loopne
cmp
sub
pop
add
jo
rcrl
rorb
decl
sub
jne
mov
jae
roll
js
faddp
je
cmp
jno
cmc
lods
jo
and
fstp
mov
jo
insl
jo
mov
addb
mov
pop
bound
xchg
cmp
out
addr16
push
fs
and
dec
in
add
fwait
and
es
mov
sbb
and
icebp
cmp
jo
rcrl
fidivrs
mov
cmp
lods
je
xchg
andb
sahf
pushf
lock
pop
out
mov
dec
int
lock
or
in
lock
push
add
icebp
psllw
insb
in
lods
inc
into
sub
hlt
pop
enter
aas
outsb
mov
xchg
mov
pop
movsb
gs
and
push
in
and
or
lods
lret
in
adc
imul
inc
or
enter
xlat
adc
rclb
xor
js
push
aad
mov
insl
shlb
push
rorb
repz
js
adc
cli
inc
jne
scas
sti
xlat
js
mov
dec
push
jl
je
cmp
sbb
daa
je
sbb
imul
je
cli
insb
pop
ljmp
sub
hlt
inc
incl
repnz
shll
add
adc
add
and
mov
jne
out
pop
push
lret
xor
push
les
pop
ret
jae
sub
mov
popa
shlb
dec
inc
and
xchg
scas
inc
mov
xchg
jo
nop
push
pushf
addr16
rorl
and
adc
and
iret
dec
or
dec
pop
push
loopne
inc
add
jnp
mov
xchg
ja
sub
aas
cmp
xor
lret
add
cmc
fcoml
cmp
or
or
lods
xor
adc
sbb
jge
cmp
dec
or
mov
add
xchg
aas
adc
sbb
dec
jnp
lret
push
sbb
inc
sbb
clc
insb
movsb
test
mov
xor
in
int3
inc
push
scas
andb
mov
push
int3
pusha
enter
and
push
outsb
adc
nop
nop
sbb
xchg
jne
sarb
icebp
fcmovnb
incb
imul
lcall
push
mov
adc
loopnew
mov
or
pop
es
je
mov
insb
push
call
or
inc
and
pop
or
adcl
adc
movsb
jle
xlat
mov
jo
lcall
fmull
pop
inc
mov
nop
pusha
lcall
xchg
out
cmp
imul
rorb
xor
push
lods
pop
push
jl
js
rolb
jmp
mov
sub
scas
out
or
mov
jmp
iret
and
lret
pop
or
push
adc
cld
mov
add
mov
imul
fdivrs
inc
iret
xor
cld
cmpsb
add
in
dec
jo
int
jo
dec
adc
subb
iret
jno
fidivrl
push
aad
rolb
shrl
cwtl
adc
in
mov
in
fstl
ss
xor
pusha
out
mov
orps
fbstp
dec
adc
adc
sti
mov
mov
insb
push
popf
jo
xorl
pop
adc
jo
xor
int3
jo
mov
test
lds
mov
pusha
repz
mov
enter
fdivr
push
or
inc
xor
pusha
jnp
add
hlt
outsb
jo
les
inc
fimull
push
dec
lret
xor
mov
fdivs
mov
push
rcrl
shl
sub
mov
push
pop
out
xor
add
repnz
out
rolb
orb
les
lock
add
lods
fmul
mov
adc
scas
jmp
aas
in
add
lcall
ja
scas
clc
jl
jge
iret
setb
pop
jno
or
cmp
cmp
loopne
push
bound
adc
clc
ja
adc
movsb
dec
mov
sbb
cwtl
mov
rclb
addr16
std
mov
inc
loopne
icebp
xor
fsubrs
push
push
je
in
and
and
outsl
pop
jo
stos
outsb
push
enter
lods
mov
xor
pop
push
mov
jl
leave
js
push
mov
adc
jg
ljmp
push
xchg
jo
sub
jno
dec
scas
pop
nop
cmp
pusha
jnp
enter
fcoml
mov
outsb
and
sub
sbb
add
and
mov
and
lock
scas
push
andl
ja
rclb
sbb
push
sub
inc
int3
sbb
mov
and
dec
lock
mov
cmp
or
or
push
sub
or
adc
sub
pushl
mov
ds
push
outsb
in
out
xchg
hlt
pop
adc
outsb
mov
testl
lea
jae
jne
push
mov
sbb
out
jo
jmp
push
cmp
fisttps
sbb
xor
push
in
lock
loop
lds
xchg
push
jo
cmpsl
cli
jo
push
sub
mov
nop
mov
insb
add
in
or
fsubl
ret
push
in
mov
outsb
nop
mov
pop
dec
mov
dec
mov
lds
inc
in
js
lret
clc
and
push
xor
fnstcw
push
and
cltd
push
sbb
aam
je
pusha
push
out
cld
dec
adc
jns
ret
js
mov
dec
pop
rclb
cmpb
jmp
jmp
je
and
dec
mov
sbbb
lds
mov
testl
xlat
enter
sti
cmpsl
clc
jo
cmp
cld
xor
in
sub
add
adc
bnd
sbb
loopne
lcall
pop
dec
jo
push
add
fsubrp
dec
adc
call
pop
push
addr16
out
inc
sbb
or
jo
into
rcr
je
lds
jo
ficompl
jno
mov
mov
js
loope
test
push
or
dec
mov
or
dec
push
mov
stc
or
addb
divb
movsb
clc
imul
xchg
in
mov
jo
xor
cmp
jl
imul
fsubrp
add
and
sub
out
mov
push
jne
dec
mov
mov
push
push
mov
push
cwtl
or
lock
insb
cld
aam
lods
pop
fdivl
fs
mov
sub
pop
std
fstpl
icebp
rol
cmp
les
mov
iret
insl
aam
aam
sbbb
cmp
inc
clc
fcompl
pop
xor
sub
pop
adc
aas
ja
sbb
cld
dec
ret
jg
and
dec
or
and
in
call
dec
lcall
les
imul
cmp
xchg
add
adc
in
out
clc
pop
push
cmp
and
mov
or
push
mov
mov
jle
push
mov
cld
adc
xor
dec
jo
in
lcall
stos
call
lods
push
xor
push
inc
test
dec
fdivs
call
rclb
arpl
mov
jle
xor
sbb
push
jecxz
rcrl
sti
and
pop
es
ja
sub
mov
ret
cmc
cltd
jno
mov
stc
sub
jo
dec
mov
fcmovb
pusha
pop
xlat
lret
adc
int
inc
pop
out
or
xchg
xchg
movsb
fnstenv
cmp
or
js
xor
mov
leave
hlt
mov
lods
xor
adc
push
les
push
cmpb
lea
sub
repnz
add
call
mov
movsl
sub
sbb
push
xor
jo
mov
jo
mov
push
int
je
push
aad
mov
add
adc
inc
and
or
sub
je
xchg
xchg
push
cmp
je
hlt
inc
js
mov
cld
incl
mov
mov
cld
popa
je
push
push
sbb
shrl
andb
std
jo
test
mov
popa
inc
sbb
add
stos
js
into
sbbb
cmp
or
je
adc
dec
mov
sti
mov
xor
dec
aas
dec
mov
push
mov
cmpl
xchg
lds
push
pop
push
and
fsub
inc
inc
les
cld
out
stos
cmp
test
cmp
nop
adc
sub
jge
adc
mov
jl
shlb
mov
out
inc
repnz
clc
mov
bndldx
fsubs
in
mov
loop
dec
cmp
mov
mov
ret
dec
mov
xchg
mov
jge
mov
in
mov
das
and
fldl
jl
sbb
cmp
decl
adc
testl
mov
pushf
ret
jg
pop
cmp
inc
mov
mov
movsb
bnd
lock
inc
adc
imul
dec
cmp
leave
ss
and
out
dec
or
push
fsts
mov
xor
test
push
je
aaa
cwtl
stos
mov
mov
ret
sub
mov
mov
sbb
mov
add
cmp
xor
aam
aas
pusha
cmp
add
lds
out
jo
ds
nop
and
mov
xchg
adc
dec
push
mov
aam
dec
lds
mov
cmp
jecxz
jl
jnp
or
xchg
inc
mov
mov
pushf
or
js
dec
sub
pop
inc
sbb
icebp
fsubl
hlt
fcoms
jle
dec
push
push
outsb
pusha
insb
shlb
ljmp
loope
sub
mov
or
mov
rclb
mov
push
or
pop
xchg
addr16
je
les
fcoml
sahf
xor
fcmovne
jl
mov
xor
sbb
nop
arpl
clc
push
cmp
test
ds
aad
outsb
inc
pop
pushf
mov
in
and
push
arpl
fildll
sub
sbb
loopne
pop
sub
mov
fcompl
pop
xor
xchg
or
out
mov
cmc
mov
inc
add
push
mov
stos
div
popa
je
mov
je
xor
mov
pop
xor
sub
jnp
aad
int3
sahf
mov
sub
or
pop
pop
adc
fisttpll
lods
fistpl
jl
xor
push
inc
xor
push
push
lods
or
cmp
mov
mov
lods
out
out
mov
mov
lods
out
xchg
addb
call
repz
orb
sub
and
mov
jae
xor
rolb
xchg
nop
es
mov
daa
mov
add
mov
or
mov
es
mov
xchg
and
aam
les
jl
dec
push
cmp
lea
aam
mov
loop
cmp
sbb
inc
cmp
mov
lret
mov
scas
andb
inc
in
mov
mov
inc
cmp
push
dec
or
xor
sbb
call
js
pusha
hlt
je
push
and
mov
and
inc
and
js
shll
pop
xor
gs
push
inc
sahf
js
add
sbb
pop
mov
pop
pop
push
inc
mov
movsb
inc
and
outsl
hlt
int3
out
mov
add
jne,pn
adc
out
leave
push
xchg
jo
jo
rclb
sbb
repnz
mov
xchg
jo
or
xor
cmpsl
in
dec
and
dec
sbb
ds
pop
xchg
sub
push
movsb
dec
or
jo
jl
adc
sub
pushf
mull
shrb
mov
js
push
popa
add
pop
add
mov
ror
or
int
cmp
pop
ret
mov
je
je
pop
imul
adc
lahf
push
dec
hlt
scas
mov
mov
pop
push
test
dec
mov
cltd
sbb
fsubl
add
and
insb
inc
sbb
fsubs
jno
sarl
xchg
shlb
arpl
scas
je
in
mov
and
sti
dec
or
and
mov
push
push
push
xchg
cmp
call
lcall
push
mov
cmpb
or
cmp
mov
push
or
sahf
mov
dec
je
push
inc
add
sub
in
jnp
out
rorb
push
inc
icebp
cmp
cmc
insl
xor
insl
xor
movsl
mov
and
mov
or
lods
inc
shr
test
dec
sti
test
shl
int3
repz
pop
js
fmull
cmc
pusha
ffreep
js
or
jmp
adc
ja
std
hlt
scas
add
or
or
iret
dec
cmp
add
pop
shlb
out
push
push
divl
les
lret
test
lahf
je
gs
out
cld
ret
push
add
out
jo
adc
or
dec
or
xchg
movsb
mov
loopne
test
faddl
fstps
int
push
or
arpl
outsb
pusha
pop
into
cwtl
or
aad
mov
jo
add
aad
lret
pop
sahf
or
sub
and
xor
sbb
mov
mov
orl
je
insb
int3
and
pop
cmp
sahf
or
jne
fdivrs
mov
test
push
ljmp
js
adc
in
xor
and
sbb
jae
pop
sub
lea
popf
adc
push
test
jo
mov
mov
outsb
pusha
push
mov
xor
xor
dec
pop
jl
pop
cmp
nop
lods
out
enter
fwait
cmp
mov
sarl
pop
sahf
adc
rorb
lcall
inc
push
fld
lea
push
out
push
je
inc
mov
inc
or
mov
cmp
js
aad
shll
inc
pop
enter
sbb
pusha
xor
jge
pusha
jb
push
lods
push
and
inc
cmp
mov
sbb
sub
je
jb
push
inc
sub
or
xchg
mov
in
and
sub
pop
leave
fcoml
popf
mov
mov
jo
mov
mov
jmp
jle
pop
hlt
jns
mov
push
or
sbb
outsb
bound
ret
adc
cmp
sbb
mov
test
adc
or
jmp
pop
push
cmp
sub
sub
cld
aas
test
dec
inc
jmp
js
scas
icebp
jo
add
or
and
xlat
mov
or
pop
shlb
loop
pop
lds
hlt
or
mov
mov
push
fsubr
fcomps
in
mov
icebp
lods
test
mov
sub
test
push
gs
and
pop
ret
int3
dec
push
fs
and
popf
mov
addr16
add
scas
loop
cmp
fsub
or
mov
dec
fwait
push
je
inc
aam
inc
sbb
test
cmp
and
movsb
dec
adc
xchg
js
je
cmp
nop
js
mov
mov
mov
adcl
pop
mov
andb
sbbl
dec
fisttpll
dec
mov
ds
or
imul
or
mov
xorb
xchg
loopne
nop
insb
pop
sbb
sbb
stc
pop
add
pop
mov
icebp
inc
out
mov
dec
je
pop
cmp
inc
push
xchg
jo
clc
lds
mov
scas
mov
jno
mov
and
faddl
rorl
ds
mov
adc
mov
divb
movsb
int3
mov
rcrb
loop
ficomps
and
das
inc
pop
cmp
jmp
movsb
or
pop
out
ficoml
jl
mov
les
or
and
xorb
scas
scas
mov
xor
mov
out
mov
jge
dec
cld
push
push
fists
mov
and
clc
lock
push
and
shll
sbb
push
test
cmc
nop
call
hlt
push
pop
sub
scas
in
pusha
aad
test
enter
mov
cmp
jae
mov
pop
pusha
dec
sub
cli
call
cmp
mov
cmp
xor
adc
inc
popf
stos
or
mov
push
lods
sbbl
jne
fs
pusha
loopne
je,pn
sbb
lods
in
push
arpl
lods
lret
push
rclb
xchg
mov
add
add
xacquire
push
push
cmp
jo
inc
fs
push
add
pop
push
scas
jae
shlb
dec
scas
jo
mov
andb
mov
adc
movsb
dec
mov
inc
pusha
in
cmpsb
je
js
les
out
adc
cld
pusha
mov
rol
sub
gs
cwtl
cmp
fistpl
in
push
aad
jne
inc
int3
add
cmp
cwtl
mov
sbb
adc
push
or
je
and
sar
xchg
cmp
pop
push
rorb
int
inc
loopne
adcb
push
scas
sbb
cmp
push
xor
fldln2
and
mov
insl
dec
sbb
repz
nop
sbb
dec
cmp
jle
popf
loopne
push
mov
jecxz
sarl
test
add
push
or
dec
ss
mov
lds
sub
aas
or
lret
jb
fstps
hlt
iret
cmpsl
push
push
mov
push
and
dec
sbb
or
cmp
sahf
push
jl
pop
mov
jle
lret
rcrl
arpl
push
cmpl
dec
jle
lds
pop
cmp
xor
fbstp
scas
jle
pusha
fists
rcll
movsl
jo
jno
sub
out
push
xor
adc
mul
mov
sbb
sahf
push
push
mov
dec
jo
and
filds
xchg
cmc
push
xorb
sarb
ret
call
mov
mov
out
pop
and
addr16
push
xchg
mov
or
int3
rcrl
jg
mov
orb
jo
add
ja
xor
lods
pop
cmp
add
xchg
divl
and
lret
leave
cmp
test
cwtl
add
pop
cmp
js
mov
adc
out
xor
cmp
jg
push
lea
inc
hlt
mov
sub
test
loopne
add
lods
or
or
mov
cli
dec
pop
jl
inc
and
subb
or
push
add
xchg
pop
pop
test
shlb
mov
pop
jmp
push
sbb
mov
sub
negl
insb
sahf
add
pop
inc
js
xchg
in
sub
push
add
sub
repz
mov
and
cmp
fcompl
jg
inc
ret
jbe
inc
rcrl
js
jge
cmp
pop
jg
les
je
cmp
mov
les
cmp
shll
jb
rcll
loope
cld
dec
pop
cmp
je
pop
repnz
js
or
mov
js
movsb
cmp
mov
out
dec
add
xor
test
pop
repz
push
lock
lea
inc
push
aas
dec
sub
jne
and
bound
sbb
and
or
rorl
inc
mov
ret
mov
sbb
and
fdiv
xchg
mov
pop
add
or
js
lds
push
rcrb
pop
xor
clc
popa
out
repz
out
je
pop
sbb
dec
push
xor
ja
push
lods
lods
inc
or
push
insb
add
cmpsl
xor
rolb
aas
push
xor
add
xor
push
shrl
jmp
sbb
out
dec
add
mov
xlat
jb
loopne
mov
nop
aad
in
jo
push
adc
adc
call
test
repz
out
mov
push
push
std
mov
pop
pop
lds
dec
sbb
lahf
add
or
mov
cmc
sar
in
les
mov
fistl
add
idivl
xor
push
xor
fcoml
xor
cmp
or
xchg
js
mov
or
int
pusha
push
push
push
pusha
lea
push
adc
mov
cmp
mov
sub
scas
push
sub
icebp
jle
xchg
inc
cmpsb
mov
test
fbstp
or
in
js
add
std
sub
cwtl
dec
cmp
je
pop
shrb
js
or
fimull
push
fs
pop
aad
js
aam
adc
loope
int3
cmp
cmp
add
mov
lods
js
shlb
and
adc
icebp
add
shll
xchg
add
xchg
pop
imul
clc
pop
jne
add
repz
movsb
xor
jge
das
xchg
push
xor
rorl
jecxz
int
aad
push
jne
and
sub
ds
pusha
pop
sbb
into
add
loopne
mov
push
es
xor
xor
scas
cmp
js
shl
jo
pop
jo
pusha
pusha
pushf
daa
hlt
pop
loop
sub
add
js
cmp
dec
cmp
jne
cmp
loope
scas
mov
inc
mov
js
fdiv
fs
fdivl
shrb
and
adc
fsubs
pop
std
movl
xor
and
loop
sbb
and
dec
fistl
fdivrs
je
sub
je
loopne
je
fs
aas
push
je
add
jne
aas
and
int
in
dec
les
push
or
jecxz
bound
outsb
jo
cmp
hlt
lods
or
sub
shll
mov
int3
aas
out
and
sar
xor
jecxz
or
xchg
xchg
mov
adc
addl
je
sbb
sub
add
adc
movsb
or
sarb
jo
je
js
or
dec
dec
xchg
add
and
adc
loope
jl
dec
out
iret
xor
ret
cwtl
cmp
pushf
sbb
xor
pushf
addb
xor
cwtl
pop
jo
sarb
cwtl
outsl
arpl
mov
shlb
jl
mov
and
mov
pop
xor
mov
adc
lahf
hlt
inc
inc
inc
fucomp
adc
aaa
dec
dec
das
add
add
cmp
xchg
cmpsb
pop
faddl
test
inc
js
fdivs
faddl
es
sub
mov
int3
leave
movsl
pop
cmp
jle
mov
orb
enter
iret
test
cld
cmp
mov
cld
sbb
call
and
scas
cwtl
les
je
pop
js
rolb
dec
popf
repnz
ljmp
jl
pusha
pop
fsubs
je
xchg
jl
lds
loop
mov
aaa
lock
lret
or
sarb
loopne
inc
jmp
or
mov
xchg
enter
xchg
add
in
cwtl
aad
and
mov
add
cmc
push
bound
lret
push
mov
lcall
adc
add
popf
decl
int3
sub
shlb
in
test
fs
sbb
mov
mov
inc
dec
xchg
jo
and
int3
add
aas
inc
cwtl
mov
iret
jg
je
and
push
adc
and
adc
pop
add
add
cmp
js
fsub
and
mov
in
ret
mov
and
pushf
sub
subb
mov
aam
and
das
je
mov
mov
pop
dec
mov
xor
lods
les
jl
dec
or
outsb
sbb
inc
or
sub
int
je
je
mov
aam
sub
xlat
js
int
rol
stos
test
int
addb
std
das
xchg
mov
jo
xor
inc
add
js
enter
ss
aas
adc
inc
xchg
movsb
adc
and
outsb
inc
sahf
stos
sbb
dec
int
sbb
sbb
into
dec
not
lahf
jo
lahf
jo
icebp
test
mov
cmp
je
pop
jo
push
je,pt
enter
clc
outsb
adc
aam
push
pop
leave
dec
ficomps
jo
sub
ret
sbb
sarl
lret
xchg
or
std
rolb
sub
aam
je
and
out
aam
enter
jo
fadds
popf
outsb
je
mov
aam
je
outsb
aas
mov
cli
pop
fnsave
xchg
xor
sbb
sbb
cmp
shlb
jl
inc
cmp
aam
aaa
outsb
rol
and
mov
popa
je
test
andb
pop
nop
popf
je
lds
jo
fiadds
inc
out
outsb
movsb
movsb
fwait
jle
xchg
dec
aad
cli
repnz
adc
cmp
je
js
jne
stos
or
pop
jne
loopne
iret
aam
movsb
shl
nop
push
pusha
mov
add
test
jge
pushf
ss
mov
setle
or
test
decl
icebp
sub
or
dec
ret
sbb
inc
js
jne
xchg
add
lods
hlt
movsb
jmp
cmp
sbb
lret
sbb
add
jne
mov
flds
mov
adc
pusha
and
adc
pop
jnp
fidivrl
pop
es
add
sub
xor
pop
mov
data16
outsb
addr16
je
pop
outsb
xor
imul
lret
ficomps
enter
mov
add
rolb
movsb
sahf
push
aas
adc
dec
je
cmp
xchg
movsb
aam
dec
sahf
mov
inc
ret
aam
or
xor
les
lret
add
out
cmp
out
loop
or
or
fdivrl
sub
rcl
xor
lds
mov
mov
jo
and
call
mov
fmull
inc
in
jmp
and
js
in
mov
insb
and
je
sub
jo
sub
jne
divb
in
je
fsubrl
and
daa
sub
jg
movsb
test
rcll
mov
jo
aam
or
test
add
jl
fstpl
pmuludq
inc
shrb
cmpsb
dec
and
in
add
mov
cmpsb
push
add
insb
add
jne
mov
or
popl
stc
mov
xchg
or
cli
xor
js
les
mov
shll
mov
sahf
mov
or
adc
inc
jo
insb
pusha
out
fists
or
cmp
pushf
leave
or
mov
inc
xor
and
xchg
cli
jl
pop
xchg
lahf
push
adc
stos
cwtl
xchg
fcmovne
test
outsb
pop
add
jl
je
add
fldlg2
cmpsb
pop
inc
sub
fsubrl
aad
adcb
stos
mov
fsubrs
xor
in
dec
je
pushl
outsb
je
lock
cmp
cmpsl
jg
loopne
clc
jecxz
inc
pop
xor
loopne
out
outsb
insb
and
popf
outsb
xor
je
sbb
in
pop
rolb
je,pt
mov
test
shlb
movsb
fdivl
push
js
push
fnstsw
in
xor
mov
js
fdivl
xor
mov
fdivs
into
mov
je
jle
jo
fstpl
and
scas
or
mov
add
mov
fwait
sub
aad
insb
inc
add
sub
les
cld
lcall
cmp
push
rcrb
fs
mov
add
mov
loop
lods
orl
aam
jo
add
stc
lods
push
mov
adc
cli
fdivl
fs
jp
pushf
add
cld
sbb
icebp
sarb
xor
and
popf
cmpsb
mov
clc
aam
insb
sbb
ficoms
outsl
push
inc
fnsave
aad
lods
and
jne
pushf
cmp
ss
mov
jo
ret
adc
outsb
push
rcrb
lds
je
push
mov
push
mov
xchg
call
push
test
test
sbbl
outsb
js
lock
pop
mov
xor
cmpsb
jne
aam
pushf
cmp
mov
push
pusha
fcoml
pusha
inc
push
push
enter
push
shll
push
je
lds
mov
dec
push
push
add
je
mov
jo
inc
fcomps
xor
outsb
out
push
ficomps
cmpsb
adc
inc
ss
mov
je
add
outsb
fidivs
and
icebp
mov
fstpt
imul
loope
cmpsb
sub
lods
push
cld
mov
sub
rcrb
aad
fisubrl
mov
xchg
jbe
and
stc
pop
outsb
inc
test
out
cmp
xchg
std
cmp
mov
lcall
divl
pop
insb
inc
gs
xchg
inc
pop
sahf
lds
out
outsb
push
test
loope
lret
pop
mov
lcall
sti
sbb
test
cmpsb
lods
fsubrl
in
fidivrl
movsb
cmp
aad
jl
push
aam
xor
pop
mov
je
xchg
add
out
dec
pop
out
in
je
sub
adc
add
lret
mov
fwait
je,pn
sbb
js
sbb
cmp
lret
push
inc
fimuls
pusha
and
jne
mov
inc
mov
test
mov
jo
add
outsb
in
xchg
mov
jo
xor
or
mov
dec
js
jne
lahf
rcr
ljmp
push
rol
movsb
es
and
rep
or
mov
shl
fnstenv
xchg
xor
push
rolb
shlb
call
les
or
call
loopne
je
jg
cmp
mov
cld
fnsave
fisubs
in
pushf
ret
pop
or
cmp
or
js
or
and
jl
jne
push
cmp
or
jmp
lock
and
and
push
je
add
outsb
fcmovnu
in
je
aas
xchg
pop
jl
xor
cmp
in
js
inc
test
outsb
je
sub
insb
mov
outsb
shlb
push
lret
call
jne
jmp
xorb
and
hlt
loop
in
fs
aam
cmp
sbb
ret
jo
push
mov
dec
adc
shll
mov
mov
out
insb
clc
push
out
outsb
cmp
es
imul
or
outsb
fs
js
cmp
daa
movsb
je
sahf
jb
rcl
add
lds
jl
add
enter
jo
cltd
jae
sti
cmp
cmp
mov
dec
fimull
add
outsb
sbb
sahf
fstps
add
outsb
movsb
mov
xlat
or
mov
outsb
rclb
js
cmp
addr16
xchg
sbb
jne
inc
lock
in
out
pusha
mov
sbb
push
hlt
shll
sbb
daa
shlb
outsb
test
jmp
cmp
ljmp
adc
clc
xor
cltd
pop
add
cmp
cmpsb
lds
lods
cwtl
push
jne
pop
nop
test
sahf
dec
cmp
push
and
je
sbb
outsb
rclb
in
xchg
and
dec
xchg
fs
inc
out
or
and
mov
xor
imul
jo
pop
cmp
cmp
push
mov
cmp
pop
jmp
cmp
xchg
loopne
inc
add
in
popf
jl
or
outsb
mov
adc
dec
imull
sti
outsb
adc
cld
cmp
mov
lods
cmp
mov
push
aam
les
les
mov
scas
cmp
sbb
lods
cmpsl
or
jae
cli
xor
xor
and
mov
movsb
rcl
movsb
cmpsb
sub
outsb
out
and
jmp
std
fsubrl
and
add
shl
shl
add
fdivs
ljmp
je
push
outsb
pop
fs
and
in
adc
mov
movsb
dec
js
cmp
lea
adc
push
dec
je
dec
add
pusha
sbb
outsb
fcomps
rcl
adc
aad
test
push
push
nop
adc
xchg
cld
mov
push
mov
and
pop
outsb
xor
jne
cwtl
out
pop
cwtl
adc
in
xor
outsb
divb
sbb
outsb
pusha
push
xor
adc
cmp
xor
in
xor
xor
jne
and
clc
add
out
rcl
xlat
inc
int3
sbb
outsb
sub
cmp
pop
fnstenv
dec
mull
lock
lock
add
outsb
pop
push
fadds
pusha
add
sbb
mov
lret
lock
in
pop
mov
sbb
cwtl
jl
push
outsb
push
je
xchg
je
xor
movsb
cmp
popf
je
mov
mov
pop
xor
out
outsb
into
or
into
outsb
js
xor
outsb
movsl
test
push
je,pt
enter
clc
es
out
ret
cmp
pop
cmp
sbb
insb
pop
mov
xchg
jle
js
or
and
fs
addr16
clc
sub
xor
and
int
test
sbb
out
jo
mov
mov
outsb
adc
cld
je
mov
mov
aad
ret
sub
in
loop
push
insb
je
jl
or
pop
add
xlat
outsb
xor
sbb
outsb
data16
push
mov
cwtl
rorb
sbb
outsb
popa
clc
sar
push
xlat
cmpsl
mov
push
mov
mov
movsl
fprem
push
fsubl
mov
mov
pusha
jle
xchg
insb
push
aad
mov
sbb
outsb
cmp
movsl
sbb
imul
mov
adc
push
jne
es
outsb
je
push
cmp
add
jne
cmp
push
sti
popf
outsb
add
out
outsb
cmp
push
mov
sbb
fs
inc
and
outsb
push
xchg
adc
push
call
push
mov
sub
mov
test
xchg
mov
push
out
outsb
xchg
add
pop
push
sarl
les
mov
test
std
outsb
cmp
inc
inc
mov
divb
lahf
cmpb
cmpsb
add
push
cmp
js
add
xchg
adc
call
cld
sub
xchg
cmpsb
pushf
xor
jecxz
jle
xchg
jne
je
pop
les
test
je
int
les
shll
inc
inc
inc
cmpsb
cmc
dec
cmp
cmp
shrb
pop
adc
pop
stc
je
xchg
add
shrb
xchg
adc
shll
outsb
clc
rcrl
jmp
mov
data16
outsb
addr16
pop
aam
int
loopne
or
push
or
inc
sahf
push
test
mov
popa
je
push
mov
adc
pop
cmc
pusha
call
outsb
nop
test
sahf
jne
frstor
and
mov
push
enter
mov
mov
add
jne
mov
jne
dec
push
push
and
and
iret
pushf
cmp
shrb
sbb
and
popf
jo
cmp
mov
jne
test
loope
sti
jo
add
jo
mov
xchg
push
jo
aam
je
outsb
adc
loopne
aas
inc
cmp
mov
jne
jo
cwtl
int
push
adc
popf
pop
dec
scas
add
movsl
or
outsb
enter
loop
fwait
fs
pop
js
movsb
cwtl
mov
jne
mov
xchg
jo
push
xor
sub
lret
cmp
test
jl
or
nop
loopne
xchg
call
jo
shlb
and
dec
push
jb
add
adc
je
sbb
outsb
les
lds
jo
xchg
or
arpl
lcall
jl
add
push
mov
outsb
jbe
cltd
jnp
mov
in
gs
nop
mov
mov
cmp
push
adc
fistps
mov
xchg
adc
std
outsb
push
mov
and
inc
aam
icebp
in
jo
test
in
jo
stos
mov
addr16
ljmp
mov
mov
mov
test
mov
fsubs
xchg
fildll
push
or
je
push
mov
fsubrl
cmp
sbb
mov
dec
outsb
adc
fdivrl
cmpsb
mov
xchg
adc
shrl
loopne
push
je
fldt
pop
sub
xchg
cmp
cmp
outsb
pusha
sbb
negb
insb
jne
je
jne
js
je
cmp
into
je
adc
in
fbstp
push
lock
in
fs
out
scas
fs
out
packuswb
push
out
jo
lea
out
es
xchg
pop
outsb
in
adc
adc
mov
adc
inc
popa
je
jl
pusha
rorb
je
mov
or
sub
je
data16
push
and
cld
sbb
mov
mov
aas
inc
je
mov
pop
push
cmp
push
je
jo
lds
push
push
jno
in
xchg
jo
xchg
inc
enter
mov
cmp
fsubs
outsb
push
mov
ds
popf
pusha
out
inc
pusha
adc
mov
and
test
xor
popf
outsb
sub
mov
sbb
std
je
mov
aas
movsl
jl
pop
adc
xor
mov
jp
rcll
outsb
jl
jne
pusha
out
outsb
xchg
push
imulw
adc
dec
in
cmp
clc
out
outsb
xchg
in
adc
xchg
out
je
sub
mov
and
dec
cmp
push
mov
hlt
inc
jne
insb
sbb
out
outsb
push
inc
movsl
mov
imul
movsb
adc
mov
fisubrl
jo
lods
sbb
pop
or
int
rclb
sub
leave
or
movsl
and
and
push
popf
cld
xor
sub
outsb
inc
test
lods
cli
pusha
cld
jl
jo
movsb
adc
insb
flds
clc
outsb
sti
cmp
dec
rcrl
outsb
push
mov
inc
xchg
imul
or
or
fnsave
stc
int3
mov
dec
js
stos
insb
cltd
jne
out
out
and
out
mov
add
iret
mov
mov
je
es
pushf
nop
rol
roll
jne
xchg
sbb
pop
push
rolb
inc
aam
sbb
hlt
xchg
js
mov
add
outsb
pop
testb
outsb
inc
jo
dec
mov
pop
cli
jl
ret
outsb
jl
cmp
and
outsb
aaa
hlt
and
hlt
adc
mov
pushl
lret
jecxz
dec
pushf
mov
push
xchg
mov
pushf
dec
jl
in
cmp
dec
sahf
add
les
dec
sbb
adc
addr16
fdiv
sub
insb
jecxz
jo
test
xor
push
enter
cli
movsb
faddp
hlt
sti
mov
clc
mov
fstps
push
mov
mov
inc
pusha
dec
push
js
lock
js
jne
popa
js
mov
add
pop
in
xor
outsb
neg
es
out
outsb
mov
enter
sub
pop
mov
rcrb
aas
dec
add
add
add
loop
jo
loop
cld
pop
int3
sahf
push
inc
les
outsb
xor
aad
lods
rcr
add
int
push
mov
or
mov
jo
je
fimull
pop
pop
and
pusha
fimuls
or
pushf
test
mov
dec
je
pusha
stc
fisubrs
adc
add
mov
cmp
in
mov
fsts
lock
ljmp
outsb
or
in
xor
outsb
idivb
jnp
bound
pop
dec
sbb
xor
sub
mov
je
loop
outsb
divb
cmp
xchg
in
ficomps
cmp
mov
inc
sbb
mov
pop
cli
push
dec
aad
mov
sub
mov
or
push
push
shrb
sahf
pop
lret
add
jne
sub
int3
push
push
add
cmp
out
jge
cmp
shll
outsl
mov
out
ss
add
cwtl
je
in
add
adc
in
sub
data16
std
je
aad
sub
sahf
push
push
lahf
fcompl
cmp
and
ljmp
adc
outsb
sti
cmp
std
mov
push
aam
inc
aam
les
jl
jne
inc
shr
test
fs
xchg
into
xor
jnp
popa
jo
adc
shrb
clc
or
adc
mov
mov
inc
inc
or
or
mov
fildll
outsb
push
and
push
iret
les
mov
cmp
cmp
push
mov
je
cmp
mov
fisttpll
mov
call
xor
add
stc
je
mov
mov
mov
les
pushf
mov
shll
jge
mov
mov
xor
cmpsb
jne
add
outsb
in
shrb
aam
adc
outsb
divl
aam
adc
outsb
out
cld
std
and
insb
sub
push
outsb
out
sub
fdivrl
in
xor
dec
out
cmp
aam
dec
leave
push
push
outsb
push
inc
hlt
add
add
xchg
in
mov
xor
adc
aad
shl
sbb
cmpsb
shr
jo
stc
adc
test
cmp
in
stc
lock
and
mov
mov
mul
and
outsb
inc
mov
xchg
cltd
sub
fcmovu
pop
mov
adc
xchg
in
adc
cmp
inc
lods
aaa
je
in
outsb
aas
push
and
cmpsb
jne
aam
pop
mov
mov
mov
js
fs
mov
enter
icebp
mov
gs
jo
les
mov
sbb
adc
sbb
xchg
xor
les
pop
ret
or
push
les
in
mov
or
jne
shl
and
nop
pop
lahf
dec
adc
sub
arpl
outsb
out
out
dec
clc
mov
sub
mov
rcrb
jne
leave
inc
inc
in
lds
cmp
aas
mov
ret
gs
jo
loopne
mov
sahf
outsb
cmc
adcb
mov
movsb
adc
test
dec
nop
inc
ljmp
add
adc
in
mov
je
xor
pop
sbb
je
std
add
enter
rolb
outsb
cltd
push
cmp
adc
cmp
in
lock
push
lock
test
pop
jne
fcom
fnstenv
fsubl
test
in
je
std
fs
sub
les
call
lahf
js
xchg
cwtl
fistpl
loopne
lds
push
add
cmp
les
dec
add
mov
fdivrl
insb
push
push
cmp
add
mov
outsb
repnz
out
adc
gs
int3
outsb
mov
js
shrb
rcll
or
pushf
sbb
pop
cwtl
xlat
mov
sub
fwait
aas
mov
or
mov
add
sbb
outsb
mov
cmp
nop
cmpsb
cmp
xor
cmp
xchg
sahf
adcb
jne
jo
push
xlat
lods
cmpsb
inc
mov
inc
pusha
out
fstl
int3
mov
outsb
ret
aad
out
pop
loopne
rclb
add
pop
sbb
and
mov
add
sub
dec
inc
adc
rcrb
fcomip
cmp
cmpsb
andb
rorb
mov
mov
adc
jo
popa
int3
push
and
fs
rclb
outsb
mov
ss
push
aam
int
sub
addr16
lock
cmp
ljmp
xchg
push
push
aaa
movsb
xchg
mov
lock
je
add
fs
data16
hlt
xchg
fisttpll
mov
dec
cmp
xchg
pop
mov
pop
pop
insb
cmp
inc
mov
mov
mov
je
jl
or
leave
shll
je
mov
shll
adc
cmp
es
mov
fs
jmp
xchg
mov
sub
in
mov
inc
mov
je,pn
inc
add
and
adc
rorb
xorb
add
ficoml
pop
xchg
mov
outsb
popa
jl
mov
je
popf
je
push
test
cmp
mov
xor
sbb
enter
jne
mov
je
je
shrb
sbb
xlat
popa
loopne
push
or
outsb
gs
in
adc
in
jo
jne
js
je
in
jo
lahf
jo
pop
push
int3
je
lret
xlat
outsb
pop
aaa
fs
test
push
or
je
mov
cmc
outsb
mov
enter
push
sub
inc
lock
mov
pop
inc
and
jl
and
dec
mov
out
sbbl
fwait
sbb
out
scas
mov
sbb
outsb
and
push
inc
add
in
xchg
fcomps
andb
lds
and
les
and
mov
inc
je
dec
adc
jne
pop
push
js
sbb
and
mov
jne
pushf
aam
jmp
jmp
out
enter
je
pop
mov
pushf
lret
adc
inc
mov
movsl
sub
add
cmp
int3
je
les
fsubrl
push
shlb
int3
inc
addr16
adc
stc
xor
mov
jl
jl
in
xchg
test
or
inc
je
lret
add
mov
xorb
xor
shrl
jo
xchg
je
lret
fistpll
rol
cmp
ret
or
pop
scas
jo
shlb
in
fnstsw
jl
fs
or
loope
js
js
icebp
je
sub
or
int3
es
mov
mov
sarl
int3
stos
out
rolb
test
mov
mov
sahf
addb
add
cmp
mov
fcmovnb
fisttpll
cmpl
sbbb
xor
mov
adc
rcll
js
and
lods
mov
je
mov
inc
or
les
mov
cmp
adc
mov
inc
mov
leave
inc
je
test
js
xchg
je
int3
inc
out
js
sub
pop
test
cmp
das
and
fistpll
loopne
cltd
mov
fdivrl
pop
mov
cltd
sbb
jg
jo
hlt
mov
push
outsb
jns
popa
hlt
jmp
xor
call
mov
push
and
loop
les
mov
push
and
xchg
les
mov
outsb
in
mov
mov
sarb
imul
sti
jo
aam
imull
dec
fcompl
mov
mov
mov
jo
mov
jo
or
sub
xor
sub
jo
cmp
cwtl
test
dec
adc
cmp
or
enter
jl
mov
in
imul
loope
divb
ror
mov
outsb
enter
xchg
stc
add
divb
and
fcoml
and
fcmovu
in
pop
adc
push
les
push
sbb
xchg
aad
in
sbb
cld
outsb
adc
and
pinsrw
int3
xor
or
mov
mov
sar
cmp
or
jo
enter
test
stos
mov
xchg
je
and
into
jo
ret
outsb
dec
xchg
jo
aam
or
dec
je
sbb
insb
or
outsb
lret
das
mov
out
outsb
fwait
push
mov
je
add
jl
popf
mov
out
or
scas
outsb
pop
js
lock
cmovp
add
in
out
loope
xorb
out
divl
lds
es
js
xchg
test
je
dec
adc
rolb
push
and
cltd
pop
mov
add
loopne
and
lds
loope
fistl
pop
fcoms
xor
xor
outsb
cmc
sbb
xlat
outsb
outsl
xor
pop
test
je
shl
cwtl
sahf
add
lods
push
popa
je
cmp
hlt
dec
cmp
xchg
jnp
and
push
cltd
mov
mov
enter
sti
jo
and
outsb
pusha
push
test
mov
outsb
push
js
je
cmpsb
mov
push
fnstenv
movsb
mov
cli
in
sbb
outsb
stc
inc
adc
mov
je,pn
inc
add
nop
adc
js
mov
loopne
int3
dec
lds
test
mov
test
movntq
into
int3
fnstcw
add
sub
dec
je
pop
jo
ss
mov
sahf
mov
mov
cmc
outsb
out
lret
js
jecxz
clc
scas
dec
pop
mov
xchg
js
jne
mov
jne
mov
out
and
push
sub
mov
pop
pop
hlt
push
lock
add
int
ss
shrl
and
test
add
inc
mov
dec
insb
lret
cmp
mulb
push
sub
sbb
mov
push
rcrb
in
outsb
loope
dec
insb
out
outsb
adc
inc
cmp
xor
and
xchg
jl
lret
inc
xchg
jo
sbb
cmp
sbb
adc
outsb
arpl
cmp
mov
xchg
mov
pop
je
and
idivb
sub
cmpsb
test
je
out
or
fwait
ljmp
shrl
lahf
and
divl
out
sbb
mov
push
push
loope
test
adc
mov
fstpl
inc
xor
push
or
outsb
cmc
pop
mov
outsb
dec
out
mov
call
lock
clc
in
cmp
sub
mov
xchg
ror
cli
icebp
dec
mov
je
iretw
outsb
bound
in
jl
mov
add
sahf
jne
adc
pop
jnp
mov
xchg
hlt
push
add
xchg
xor
int3
mov
rorl
shlb
insb
mov
movsb
fstp
outsb
in
aam
shlb
xor
sbb
mov
outsb
sbb
mov
push
cld
inc
xor
inc
je
push
test
pop
sahf
ss
mov
push
aaa
mov
and
cli
dec
mov
jne
jmp
cmp
push
je
jl
aad
push
push
sbbl
je
mov
and
movb
pop
je
int
cltd
pop
sbb
xchg
in
outsb
cld
les
cwtl
pop
je
jl
jl
adc
daa
mov
je
jp
pop
or
pop
movsb
mov
cmp
inc
dec
cmp
cmp
loop
cli
fsubrl
ficoml
jns
iret
outsb
adc
xor
push
inc
xor
aam
je
sbb
jl
push
outsb
pusha
and
xchg
pop
insb
jmp
test
les
xor
inc
je
popa
movsb
pop
jo
cmp
outsb
adc
rorb
jne
push
mov
mov
and
outsb
push
inc
mov
std
aam
xchg
push
outsb
aas
je
test
add
je
test
mov
sub
cmp
in
lock
fcompl
mov
ror
je
xlat
out
in
int3
add
pop
es
inc
aad
test
std
call
outsb
repnz
lods
mov
cwtl
aam
je
pusha
aam
fdivl
cmp
in
fs
shrb
xorl
je
int
cmp
jo
sbb
dec
shll
cmp
mov
sub
xor
mov
outsb
in
popf
fsubrl
and
push
les
adc
xchg
xchg
loop
push
push
mov
xchg
shll
and
add
loopne
pop
je
mov
les
xchg
loop
mov
addl
adc
push
in
mov
js
xor
push
or
and
ss
aad
into
lock
adc
push
std
mov
inc
inc
mov
and
movsl
je
call
mov
fcompl
jo
iret
push
and
pop
movsl
fxch
outsb
cmp
lret
lods
sarb
push
xchg
push
les
mov
fs
call
cmpsb
push
in
test
xlat
fs
icebp
lods
push
mov
in
mov
xor
cli
jo
stos
addb
movsb
push
and
and
pusha
inc
mov
sbb
outsb
or
jge
test
sarb
fldenv
xor
pop
cmp
jmp
adc
js
pop
pop
clc
fldcw
and
xor
pop
mov
cmp
xor
fsub
movsb
iret
add
sub
fs
xor
mov
xchg
pushf
inc
jne
lods
aam
test
add
xor
fdivrs
gs
fdivrl
out
int
out
dec
mov
pop
mov
js
je
cmpl
pusha
cmpsb
jne
pushf
and
test
mov
xlat
pop
mov
push
push
mov
loop
push
and
ret
jl
in
xor
fdivs
aad
dec
je
xor
jne
sub
loopne
insb
or
push
mov
je
xchg
aam
flds
pop
inc
xchg
dec
xlat
test
lret
adc
shll
out
add
pmullw
pusha
xchg
and
nop
mov
sbb
or
jne
cmpsb
push
dec
je
aaa
jge
inc
jmp
movsb
into
movsb
loop
je
js
jne
mov
stc
je
dec
cmpl
leave
mov
and
mov
and
add
movsb
sub
mov
in
cmp
aad
mov
sahf
outsb
loop
lret
test
call
in
loop
jmp
dec
je
lods
xchg
imul
inc
insb
mov
push
adc
and
shlb
pop
mov
popl
add
mov
les
xor
xor
and
cmp
fisttpl
int
je
out
outsb
lods
push
push
fmuls
cltd
jne
push
mov
dec
enter
lcall
lcall
cwtl
xor
mov
loopne
je
xor
sbb
les
add
int
outsb
fbld
mov
in
adc
ftst
mov
cwtl
pop
mov
insb
pop
mov
out
adc
shl
fsub
mov
fbstp
mov
and
aad
inc
pop
ret
mov
aaa
clc
sahf
sbb
push
movsb
shrb
in
mov
fcomps
test
mov
xor
jnp
or
js
ss
daa
inc
push
in
jl
std
pusha
fwait
inc
jl
je
cmp
mov
rol
in
fldenv
into
pop
icebp
cwtl
push
iret
pushf
cmp
into
outsb
testb
inc
sub
cmp
lods
aam
call
push
dec
int
pushf
sbb
insb
fdivl
add
inc
xchg
pusha
push
int3
cmp
ljmp
aas
inc
jo
push
xlat
push
fcmovnu
xor
out
mov
push
popa
pop
mov
mov
mov
dec
dec
push
rcll
sbb
jp
inc
shrb
mov
push
or
mov
lods
push
movsb
pop
mov
loop
push
pop
adc
test
push
xchg
stos
jo
in
in
jl
aad
and
mov
dec
jl
pop
je
shrb
sbb
loop
or
enter
je
cwtl
fbstp
ret
jl
jmp
push
xchg
jl
jmp
rolb
mov
je
jecxz
jo
or
and
cmpsb
jl
mov
mov
lock
in
and
jp
xchg
cli
jl
pop
enter
lfs
cmp
test
sbb
loopne
in
je
aad
dec
adc
ss
mov
pusha
inc
jne
mov
out
cmp
mov
push
aad
jo
lds
ftst
xor
and
pop
xchg
xor
stc
je
sub
insb
aad
jne
sbb
flds
les
mov
pushf
and
je
xor
push
mov
ss
je
ret
outsb
daa
xor
dec
mov
sbb
mov
add
jge
push
xor
fstpl
xchg
mov
outsb
lret
pop
movsb
sbb
scas
movsl
sbb
jne,pn
mov
mov
in
jl
mov
stc
sbb
mov
aad
pushf
cmp
mov
mov
pop
filds
push
in
filds
nop
mov
ss
je
mov
and
xchg
cli
push
fst
cmp
je
and
lret
jo
mov
movsb
movsb
outsb
dec
mov
push
js
je
rcrl
test
push
test
and
xor
pop
out
sbb
cltd
cmp
test
jbe
mov
ffree
into
shrl
ljmp
in
sbb
or
jl
add
mov
jl
jl
jmp
jo
and
iret
mov
inc
leave
add
or
mov
pop
movsl
orb
enter
ds
movsb
pushf
push
je
divb
sti
pusha
mov
push
dec
decl
push
xor
int
cmp
je
push
jo
ret
add
popa
je
cmp
cmp
pop
in
es
je
and
je
outsb
push
cmp
and
jne
inc
cmp
dec
pop
adc
pushf
sarb
lea
sahf
lret
out
ljmp
je
or
pusha
shll
pushf
sahf
and
loope
nop
cltd
jne
mov
fisttpl
or
test
xchg
inc
fadds
xor
je
mov
movsl
movsl
xor
clc
shr
mov
xlat
sbb
sahf
std
jl
mov
jne
dec
push
xor
xor
outsb
jecxz
and
je
pop
jo
adc
nop
sarb
push
jl
adc
cmp
js
je
cs
fsubs
fcompl
and
fiadds
fsubl
mov
outsb
and
stc
sarb
lods
adc
adc
inc
popf
xchg
xor
xor
aas
mov
cmc
popf
mov
mov
icebp
sarb
gs
loopne
adc
fstps
outsb
dec
cmpsb
mov
pushf
sahf
push
fadds
sub
jo
cltd
jne
jl
xor
sbb
sub
test
pop
cs
inc
xlat
outsb
mov
lds
jo
push
push
jae
mov
pop
bswap
or
jnp
test
out
cli
cmp
xor
push
les
xchg
or
fsubr
je
sbb
orb
jae
fldt
outsb
loopne
pop
loopne
enter
add
mov
jne
je
inc
mov
ret
cwtl
mov
sahf
outsb
mov
aam
rolb
int3
adc
mov
fisubs
xor
cwtl
jecxz
mov
nop
aam
cwtl
mov
jne
sbb
dec
js
jne
js
enter
sub
dec
shufps
xor
ss
or
inc
shl
test
mov
popa
rclb
rcrb
loop
push
out
out
or
lea
ds
lods
jnp
xor
adc
xchg
aas
mov
je
jg
pop
cmp
sahf
outsb
pop
fsubs
cli
mov
shrb
sub
mov
lock
xchg
pop
and
mov
cmp
je,pn
sub
mov
pusha
mov
mov
add
and
cmp
adc
adc
mov
xor
in
pushf
jo
push
in
and
inc
dec
lahf
jle
adc
sub
xor
movsl
dec
push
mov
fidivs
pop
mov
xor
cltd
mov
adc
mov
mov
jne
imul
pop
test
and
rcr
popf
jl
push
xor
dec
xor
sbb
adc
mov
mov
je
dec
js
pop
jo
jge
xchg
aaa
push
rorl
xlat
xchg
cmp
add
or
shlb
popf
je
stc
outsb
cmp
adc
mov
fcompl
fcoml
mov
je
mov
xor
or
mov
js
in
jge
inc
movsb
mov
inc
call
int
int3
xlat
mov
lds
test
rorb
jbe
xchg
out
xor
outsb
cwtl
push
shll
push
test
jo
sbb
lea
imul
mov
or
add
adc
outsb
xlat
inc
sbb
mov
js
je
push
mov
rclb
adc
pusha
xor
sahf
fcmovnbe
test
je
daa
dec
sbb
js
push
insb
enterw
inc
shrl
add
and
test
in
adc
mov
in
aam
enter
mov
or
adc
jne
enter
aad
cmpl
pop
out
jecxz
hlt
je
sahf
int3
cmp
cmpl
std
mov
imul
dec
fstps
xor
stc
je
mov
je
idiv
adc
adc
popf
sub
sub
loop
xchg
lahf
xor
lods
sub
cmpsl
jne
xor
popf
in
add
mov
push
pushf
cmpsw
outsb
test
sub
in
adc
shl
scas
rorb
mov
pop
fs
or
adc
push
lds
add
mov
xchg
and
shrl
xor
adc
les
sub
pop
adcb
test
fildl
je
adc
sbb
mov
stos
pcmpeqw
push
mov
push
cmpsl
xchg
push
mov
aam
je
and
xor
cmpsb
or
push
jl
fsubrs
add
call
jo
imul
je
out
sub
jo
loope
push
out
dec
mov
int
je
fwait
fs
mov
sbb
outsb
loop
sahf
test
in
ss
and
pop
push
jmp
shll
loope
cmp
mov
add
cmp
mov
cmpsl
push
jmp
sahf
fildl
sbb
js
cmpsl
push
xchg
cmpsl
les
add
mulb
cmp
fwait
les
je
mov
push
jo
jne
dec
add
je
push
add
loopne
sub
adc
mov
inc
mov
je
fwait
or
loopne
sbb
xor
dec
test
pop
in
push
sbb
cmp
push
shr
jo
test
or
pop
mov
test
inc
fimuls
push
and
fs
xor
shll
pushf
xor
mov
sub
mov
add
ljmp
xor
adcb
fs
je
mov
push
je
dec
mov
call
movsl
mov
loopne
ljmp
enter
and
sbb
sahf
outsb
sbb
lret
data16
int
pusha
add
mov
pop
and
jo
lods
inc
add
mov
stos
mov
aas
xorb
popa
inc
cwtl
jo
xor
xor
add
and
and
xchg
aad
je
cmp
xchg
and
and
lods
lcall
fnsave
cmp
test
dec
adc
and
ret
adc
adc
out
je
in
js
dec
loopne
inc
pusha
mov
pop
mov
fisubrl
push
add
adc
add
imul
fldt
mov
fisubrl
test
cwtl
je
jle
jo
data16
outsb
and
sbb
cmp
in
lret
movsl
mov
jo
shll
push
mov
and
fstps
mov
in
leave
mov
push
pop
mov
outsb
inc
xor
ss
pushl
subl
xchg
xchg
nop
xor
fldt
lods
shl
jo
and
lret
jg
push
pusha
out
adc
fwait
shl
jo
pop
nop
je
cmpsl
xchg
dec
mov
and
jo
mov
sbb
xlat
in
jo
cmpb
shll
les
cmp
stc
je
sbb
outsb
nop
sbb
xlat
or
push
fucomi
inc
je
test
pusha
push
push
addb
push
fs
aad
out
adc
je
data16
cmp
jo
adc
sbbl
sub
push
pop
enter
outsb
sub
or
pop
sub
scas
outsb
int3
in
aad
je
jo
loop
pop
mov
je
mov
xor
outsb
fnsave
pop
mov
je
mov
outsb
data16
dec
mov
mov
xchg
jp
xchg
fwait
iret
lock
fcom
in
andb
movsb
je
xchg
test
sahf
aad
mov
mov
je
aas
and
inc
pusha
push
jnp
xchg
pop
push
pusha
into
pop
xlat
lods
and
xlat
daa
inc
jo
je
lret
fsubrl
adc
sahf
test
adc
dec
je
sub
test
push
cmp
insb
aam
adc
pop
push
pop
push
xchg
or
sbb
mov
sub
jmp
popa
fs
fs
scas
rcll
mov
sbb
loop
jo
mov
mov
push
sub
shl
scas
out
push
and
stc
ret
outsb
sub
jp
mov
movsb
outsb
rcrb
rcrb
sti
and
iret
jo
pusha
rcrb
movsb
js
je
jle
jge
mov
fdivl
and
push
adc
mov
aam
push
mov
fwait
inc
hlt
int
je
xchg
outsb
lret
js
xchg
clc
ss
je
xchg
aad
sub
pop
pop
pusha
les
jo
dec
sub
in
scas
shl
jo
fdivl
je
xor
inc
and
divb
lcall
lahf
mov
jo
adc
inc
xor
outsb
push
shlb
into
inc
test
mov
pusha
dec
pusha
inc
int3
outsb
aas
nop
cltd
dec
mov
dec
je
jge
dec
fs
mov
adc
mov
je
sub
jge
sahf
mov
lods
shrl
mov
or
jo
sar
mov
in
je
or
stc
lods
outsb
cmp
loopne
test
jo
into
adc
cltd
subb
or
jle
jo
imul
mov
xor
add
out
push
pop
nop
mov
xchg
pop
test
fsubrl
add
sub
xor
jo
push
and
pop
leave
mov
insb
mov
pushf
jecxz
push
inc
jo
jo
cmp
jp
lds
jo
add
jo
push
cmp
jne
pusha
roll
out
out
cmpb
je
sahf
xchg
xchg
loope
cmp
sahf
mov
test
fisttps
scas
stos
mov
je
loop
or
fs
lret
inc
mov
pushf
jecxz
jo
test
je
and
add
pop
and
lret
je
dec
test
and
jo
inc
pusha
data16
outsb
push
pop
nop
setle
je
les
mov
adc
pop
or
and
xlat
pop
sahf
lcall
adc
push
add
push
push
mov
mov
je
movsb
or
xor
in
out
xlat
rolb
or
push
mov
aam
into
pop
rcll
cmp
lret
test
je
mov
jle
pushf
push
and
movsb
pop
je
xor
leave
pop
jo
cli
sahf
dec
int
adc
xchg
enter
aam
mov
or
mov
or
nop
aad
addl
test
mov
lcall
subb
cmp
je
in
aad
mov
ss
fs
or
std
jo
je
mov
outsb
in
shlb
mov
and
jne
jmp
popf
je
sbb
popa
xor
and
fstps
push
cmp
test
mov
and
inc
je
dec
in
push
je
popa
test
mov
stos
pop
ss
mov
shl
xor
push
and
into
sbb
dec
cmp
js
in
or
cmp
mov
je
mov
pop
je
xchg
je
jo
add
xchg
inc
jne
jo
and
push
and
out
sbb
add
lret
xor
sbb
leave
movsl
push
mov
enter
mov
cmp
je
std
mov
outsb
mov
cmpsb
lahf
jo
dec
test
sbb
push
push
movsb
scas
outsb
mov
int3
je
xchg
dec
xlat
inc
je
dec
lcall
jne
pusha
movsb
divl
std
insb
add
jne
mov
xchg
aam
insb
inc
enter
fildl
test
je
lods
xor
and
out
in
push
loopne
je,pn
frstor
iret
fs
lods
jle
push
leave
outsb
nop
and
je
jmp
sbb
push
sbb
imul
movsl
pop
sub
je
outsl
cmp
xchg
lods
aad
sahf
mov
push
test
mov
and
mov
jo
add
push
out
push
popa
je
mov
xchg
push
xor
inc
iret
sub
fisttpl
lods
leave
cmp
in
je
je
and
mov
mov
sub
mov
in
into
push
and
fnsave
sbb
lds
lds
popa
js
jo
daa
inc
enter
movsb
notb
stos
add
xor
aam
clc
add
aaa
je
loopne,pn
mov
mov
rolb
push
add
jo
jne
cld
sahf
das
je
out
dec
jl
mov
mov
clc
cmp
mov
test
nop
out
dec
je
idivb
test
pop
jo
je
out
xchg
sbb
pop
cmp
or
popf
popa
add
xchg
adc
je
push
subl
aaa
add
add
or
and
dec
je
sahf
adc
mov
xchg
loop
sahf
push
loopne
jl
fdivrl
and
mov
je
jbe
jecxz
je
cmpsl
xchg
cmp
js
xor
lock
push
insb
rcl
push
outsb
pop
mov
mov
mov
xchg
mov
outsb
sub
add
aaa
or
or
add
daa
sub
je
push
dec
mov
test
mov
test
lds
pop
jecxz
lea
outsb
out
and
call
je,pn
fnstsw
dec
push
rcrl
sbb
out
xor
pusha
movsb
mov
aam
jo
das
pushf
jl
mov
outsb
add
shl
je
jl
mov
test
inc
mov
push
nop
les
enter
je
xor
aam
test
je
popa
test
push
rcrl
jo
mov
cmp
hlt
popf
scas
shrb
sub
icebp
je
xlat
mov
int3
push
fdivs
add
push
int3
pusha
push
mov
int
sub
or
andb
rolb
outsb
pop
inc
fldenv
lds
jns
sbb
jl
inc
xchg
js
xchg
enter
test
dec
jl
jne
push
push
in
aam
es
adc
in
je
push
inc
int
push
mov
adc
mov
aam
pop
shlb
xor
xor
fdivs
sub
je
and
aam
dec
push
and
xchg
fs
mov
sbb
test
in
sbb
rol
andb
mov
fsubrl
jl
sbb
adcb
jne
cmpsb
fildl
pusha
xor
add
jl
sahf
popf
inc
xchg
aaa
pusha
xor
pop
rorb
int
aam
int3
fidivl
shl
cmp
aaa
fcompl
je
fbld
jmp
pusha
mov
nop
adc
je
cmpsb
mov
daa
test
mov
mov
mov
icebp
nop
push
insb
sahf
fistpl
pusha
sahf
pop
mov
mov
mov
addb
xor
je
fcompl
dec
enter
sub
or
sub
jo
std
je
xchg
add
sahf
jne
hlt
xor
cmpsb
jne
lods
shll
mov
cmc
sub
lret
cmpb
mov
push
loopne
jmp
mov
lret
push
and
cmp
test
insb
fildll
fists
insb
stc
mov
sbb
add
mov
outsb
call
fcompl
dec
push
pop
sahf
pop
inc
jo
fdivl
fdivr
mov
fs
add
aam
movsb
fsubrl
les
rcll
mov
mov
inc
push
fstps
mov
insb
sub
in
fbstp
fildll
and
insb
out
lsl
daa
rcrb
sub
push
push
mov
mov
lock
add
outsb
sub
and
cwtl
push
pushf
cmp
je
sbb
cltd
lods
imul
hlt
cmp
mov
or
sbb
push
and
cmp
aad
jne
jl
push
cwtl
popf
push
push
add
xchg
push
aam
call
cmpsb
int
addl
fcomp
in
les
mov
ficomps
jg
in
and
mov
xor
mov
sub
sbb
push
inc
mov
sbb
je
f2xm1
push
dec
sub
xchg
iret
aam
xchg
call
daa
push
add
cmp
pusha
repnz
pop
sub
cmpsl
aam
shrl
rcll
mov
mov
xor
mov
sub
jl
mov
outsb
cld
sbb
push
or
aam
push
mov
lock
gs
push
cmp
outsb
dec
sbb
leave
aam
inc
dec
pop
je
je
aam
mov
fwait
or
and
fwait
ss
add
mov
inc
cld
ret
je
call
loopne
rcl
lahf
shrb
jo
movb
pusha
mov
and
pusha
ret
mov
int3
out
fldl
push
icebp
loopne
sub
jmp
or
xchg
push
and
popa
je
push
sbb
sub
call
mov
sbb
dec
sahf
or
sbb
loopne
rcrb
clc
ret
push
fstps
divb
mov
test
add
mov
or
xor
aam
in
adc
aam
test
jnp
out
sub
adc
loopne
mov
pop
mov
xchg
pop
add
pop
mov
xchg
push
loopne
insb
aad
iret
pusha
sub
adc
mov
xlat
pusha
xor
daa
or
aam
or
jmp
pushf
pusha
aad
clc
loop
jo
push
xor
cmp
push
xor
dec
cmp
in
mov
aam
or
jne
je
adc
mov
push
mov
jo
or
push
aam
sub
scas
js
mov
jmp
pop
fs
mov
je
test
mov
mov
mov
es
xchg
aas
push
in
mov
pushf
xchg
test
out
jmp
sbb
movsb
outsb
adc
fdivrl
sbb
leave
dec
stos
push
cmpsb
jne
jo
cmpsb
or
add
mov
in
push
movsb
or
cmp
cltd
adc
mov
mov
xor
out
mov
inc
xchg
xchg
popf
mov
mov
cmpb
sbb
mov
xlat
je
fs
lds
xor
insb
ss
in
push
loopne
adc
and
int3
les
les
dec
movsb
jle
es
cmp
lea
push
mov
jecxz
pusha
mov
mov
outsb
insb
fstps
or
ficomps
or
lock
mov
out
sbbb
jo
cmp
push
and
insb
adc
out
pusha
rcrl
rcrb
cmpl
ret
leave
sbb
xchg
dec
mov
sbb
sub
js
mov
mov
xorb
cld
sub
movsb
test
or
hlt
xlat
dec
pusha
rorl
mov
xor
pushf
xchg
les
ds
pop
lock
push
sbb
xor
popf
outsb
or
popl
out
jo
xchg
push
je
mov
add
push
int3
adc
jne
pusha
and
cltd
int3
cmp
cmp
in
andb
inc
sbb
test
in
and
xchg
push
and
filds
adc
ljmp
xchg
adc
jo
jo
sub
test
rclb
and
sahf
cmp
cli
fs
subb
jne
pushf
sbb
pushf
push
mov
ficoml
setnp
aam
call
test
aam
dec
xor
daa
paddq
roll
xchg
rorl
cmp
out
les
jl
iret
pusha
sbb
call
je
movsl
xchg
pop
les
sbb
stos
andb
add
pop
xchg
clc
mov
jns
fs
cltd
adc
je
jne
js
insb
je
mov
out
orl
or
cmp
mov
test
out
mov
push
mov
cmp
int
aam
fdivl
xchg
mov
insb
push
sbb
ret
xchg
test
jne
mov
sarb
push
xor
test
loopne
adc
push
inc
inc
mov
out
sub
rorb
je
mov
aaa
js
or
data16
outsb
out
aad
popf
dec
xor
je
fsubrs
cwtl
insb
jle
inc
ss
push
jge
xor
xchg
xchg
enter
stos
clc
xchg
or
push
test
and
mov
movsb
out
divl
add
adc
jne
test
jne
in
loope
sbb
mov
mov
in
xlat
sbb
aaa
cmpsl
push
fsts
jo
aam
mov
dec
sbb
test
aad
loop
les
insb
lahf
call
sub
push
js
jl
push
mov
mull
cmp
add
cmpsl
les
jne
mov
cs
je
sbb
test
pushf
cmpsl
mov
and
xchg
push
xor
inc
rorl
xchg
sub
cmpsb
test
cmpsl
out
outsb
out
aad
adc
push
cmp
xchg
and
cwtl
cmp
push
sahf
adc
es
sbbb
or
lock
push
pop
es
fldcw
cmpsl
xor
lcall
sbb
rorl
mov
les
adcl
movsl
mov
dec
out
jo
and
cmp
or
mov
and
aam
je
xchg
in
leave
xlat
jne
push
push
push
adc
push
sub
mov
inc
mov
daa
out
push
je
mov
jne
rcrl
aas
cwtl
adc
dec
cmp
pop
rclb
xor
mov
mov
cmpsl
xor
outsb
dec
adc
add
dec
lods
les
divl
add
add
mov
int3
test
pop
xor
cld
push
mov
jg
rcrl
aam
xchg
in
aad
inc
ds
fildl
movsb
mov
and
outsb
push
xor
fmull
push
xor
sbb
aad
out
in
fidivs
nop
movsb
out
clc
push
and
sub
je
inc
jle
jl
sbb
std
pusha
push
pop
aam
push
pop
xchg
cmc
push
mov
mov
push
mov
popa
nop
mov
xor
icebp
je
or
or
pop
sub
push
adc
dec
aad
jne
les
dec
add
aad
cltd
jl
cwtl
jmp
jo
mov
and
inc
or
cmp
test
inc
mov
adc
mov
cmp
push
adc
jno
loope
or
movsb
dec
mov
push
loope
mov
pushf
stc
movsb
int
mov
dec
fs
dec
aad
outsl
lcall
int
outsl
dec
test
sub
cmp
xlat
sbb
je
mov
cmp
test
loope
ljmp
aad
pusha
mov
dec
jl
pop
shrl
pop
fsubrl
cld
xchg
xchg
rcrl
fcmovbe
pop
out
adc
pop
mov
dec
mov
je
push
xchg
xchg
popa
test
bound
xor
in
cmpsb
nop
sub
rolb
pop
sahf
mov
cmp
inc
xor
adc
hlt
call
out
mov
jne
inc
test
and
push
xchg
pop
push
pop
jo
je
rcrl
shlb
cmp
enter
jecxz
test
aad
mov
js
inc
jl
sbb
cmp
andb
inc
mov
jl
je
sbb
cwtl
outsb
dec
adc
mov
pushf
test
dec
xor
movsb
mov
je
and
jo
fstpt
xchg
or
push
pushf
aam
out
sarb
movsb
cmp
mov
mov
je
out
es
test
shll
xchg
xchg
rorl
loope
sub
incl
je,pn
or
hlt
jo
adc
pop
fnsave
and
insb
mov
loope
cmp
test
dec
pusha
scas
xor
pop
cli
test
jl
sbb
adc
sub
shll
les
push
sub
mov
xlat
jl
mov
outsb
push
clc
mov
mov
push
jne
lret
sub
mov
movsl
xchg
mov
pop
dec
pop
lods
lahf
mov
fiadds
add
outsb
inc
test
mov
ss
and
xchg
les
je
mov
cmp
movsb
mov
mov
jo
sbb
cmp
mov
sahf
jne
je
xlat
add
push
xchg
mov
je
mov
aam
es
adc
daa
jg
xor
jo
xorb
je
jle
je
or
lcall
aam
cs
xchg
je
xchg
and
clc
lret
adc
icebp
out
insl
outsl
mov
aas
jbe
jae
cmp
jns
data16
lcall
insl
xor
jb
jns
sbb
iret
in
pop
jne
cmp
xor
pop
jle
lods
pop
jbe
adc
sbb
incb
xor
jl
adc
ja
jmp
xchg
bound
insl
stos
test
cmp
lock
lcall
imul
lock
dec
jne
inc
ss
lock
popa
sbb
je
imul
lock
push
jo
jl
jbe
ja
dec
out
into
push
sar
mov
mov
int3
jo
xchg
mov
xchg
jo
sub
lahf
ja
js
jl
cmp
inc
lock
aad
jo
pop
nop
repz
mov
insl
xchg
pop
xor
jbe
add
adc
add
or
dec
fs
lret
or
cmp
mov
jo
xchg
cs
insl
lock
xchg
mov
loopne
jb
push
cli
sarb
push
jmp
rolb
je
adc
and
pop
push
out
xchg
mov
in
aam
in
add
rcr
jae
arpl
clc
xor
sbb
fcompl
jp
inc
jo
adc
mov
nop
test
adc
jb
lods
jp
pusha
jnp
fs
push
sbb
je
or
mov
hlt
in
xor
dec
jge
jne
pusha
xchg
push
push
push
in
nop
lds
xor
sub
std
ja
mov
push
mov
inc
inc
or
lock
add
jb
pop
nop
cmpl
jae
or
inc
cli
ret
pop
outsb
xchg
scas
jb
dec
push
lock
add
cmp
insl
pop
aas
ret
lock
jb
sbb
je
sub
add
pop
xor
outsb
clc
xchg
cmpsb
daa
addl
insb
ja
int
lds
test
mov
sub
pop
imul
mov
push
in
inc
ds
aaa
je
adc
jo
lahf
fidivs
push
lods
xchg
jae
aaa
mov
jnp
shrb
dec
das
mov
lock
push
fs
sbb
xor
cld
cmpl
jo
cmc
ficoms
push
sahf
jo
adc
pop
mov
xchg
inc
loopne
add
insl
insl
or
pop
fsubrs
adc
sub
mov
pushl
movsb
pop
js
lock
jo
lahf
pop
outsl
jg
mov
dec
rclb
jl
xor
jo
push
pop
and
ret
das
mov
js
adc
in
push
shrb
pop
mov
insb
pushf
jno
lods
jo
mov
inc
hlt
cs
mov
scas
add
jbe
lock
jge
fsubr
sbbb
mov
aas
movsb
xor
inc
mov
or
pop
jecxz
jp
dec
and
daa
dec
lock
xchg
pop
int3
in
jne
sub
jo
cmpsb
clc
insl
push
imulb
push
or
pop
addr16
mov
sti
jo
push
mov
fs
inc
ja
push
mulb
and
imul
imull
fisttpll
mov
repnz
aaa
cmp
sbb
xor
fadds
hlt
xor
jnp
mov
fbld
add
dec
cld
inc
int
jle
jo
pop
cmpsb
fisttps
mov
insl
mov
push
nop
pop
mov
mov
mov
adc
mov
fistl
jae
cmc
jb
adc
in
xor
cs
or
sub
cmp
push
inc
pop
cmpsb
inc
jne
jo
hlt
sbb
jo
cmp
push
pop
test
imull
cmp
mov
pusha
or
xor
ds
outsb
xor
jg
xor
sbb
push
xchg
jae
aad
inc
cmp
jecxz
cmpsb
jo
sbb
push
ja
mov
mov
inc
adc
movd
jbe
push
jo
std
aam
and
push
ss
pusha
jecxz
shlb
call
shl
push
test
pop
inc
fbld
flds
sbb
add
inc
mov
cmp
fxch
loope
insb
data16
xchg
loope
subb
jae
daa
sahf
mov
xor
pop
jl
pop
repnz
jecxz
clc
pop
pop
gs
jo
scas
pop
pop
adc
mov
and
inc
cmp
pop
xchg
cmp
dec
inc
ret
popa
fnsave
push
cwtl
imul
cmp
jecxz
xchg
fistps
fidivl
dec
inc
dec
xchg
ja
movsb
loop
loopne
jmp
enter
dec
fdiv
add
aam
and
mov
cmp
pop
xor
sarb
jo
jnp
gs
or
sbb
repnz
inc
mov
push
mov
push
lret
imul
dec
aad
inc
insb
xor
lock
ret
push
and
jo
ja
call
jo
jne
pop
xlat
out
or
stos
fs
mov
imul
jo
lds
loop
out
sub
cmp
sbb
inc
ficompl
mov
lret
and
sub
push
aaa
pop
fistpll
and
mov
inc
sbb
jo
int
xor
scas
sbb
jae
call
int
lcall
xchg
xchg
mov
sbb
xorl
ret
cli
push
fildll
mov
inc
std
fildll
mov
jge
xor
mov
xor
loope
out
hlt
ffree
popf
ja
shll
cld
adc
push
jmp
push
jb
dec
cwtl
cmp
xchg
push
lcall
xor
je
mov
mov
in
jmp
cmp
rcrb
adc
or
pop
ret
enter
or
dec
shlb
icebp
testl
sub
insb
xor
jmp
sbb
xlat
pop
dec
lds
jecxz
fucomi
xchg
ja
sarb
dec
aad
gs
xchg
test
in
fidivrl
mov
or
lahf
mov
mov
jecxz
mov
mov
ja
mull
xchg
or
fs
and
stos
out
jo
lcall
ja
pop
sub
xchg
ret
mov
and
cmp
add
cmc
cmp
mov
jmp
jo
test
add
ja
sub
jmp
mov
stos
mov
xor
lods
iret
mov
ljmp
jo
nop
sbb
iret
outsb
loope
sbb
loopne
pop
sarl
aas
adc
frstor
fldenv
pop
xchg
cmpb
xchg
lods
repz
inc
stos
loopne,pt
bsf
jae
pop
mov
ljmp
push
cld
inc
inc
push
dec
popf
jo
lock
insl
pop
jae
inc
in
sub
mov
or
jo
cli
das
inc
stos
adc
sub
popa
rcr
fsts
sbb
xchg
adc
or
xchg
mov
out
push
divl
repnz
cli
add
sub
popf
cmp
lods
xor
popl
xchg
jo
jmp
cmp
pop
ss
push
dec
pop
push
ja
cmpsb
inc
movb
mov
mov
sbb
insb
inc
test
dec
inc
sbb
lret
cltd
xor
jmp
addr16
add
icebp
inc
xor
jo
pop
pop
inc
loop
cmp
jo
dec
in
sub
cld
push
jle
pop
sar
jbe
inc
scas
imul
loopne
test
pop
sub
add
cmp
cmp
ficomps
push
mov
rcrl
vxorps
loopne
cmp
mov
ljmp
call
repz
loopne
cs
dec
cmp
ret
mov
mov
mov
aas
push
ja
jo
ret
loopne
jno
pop
jbe
ret
cwtl
and
pop
cmpsl
jo
ja
pop
adc
adc
inc
jae
ljmp
stos
jae
inc
in
jg
outsl
movsl
pop
scas
mov
shl
cmp
pop
imul
push
inc
mov
stos
jbe
popa
jno
repnz
and
cmp
divb
sbb
daa
out
or
push
push
insl
cmp
in
sub
insl
jle
shrb
nop
lods
cmpsl
cltd
sub
jo
aas
and
bnd
imul
neg
fs
addr16
out
test
lods
or
mov
in
in
aad
mov
pop
ljmp
mov
inc
cmpsb
les
and
addl
lret
repz
rcll
scas
mov
adc
mov
mov
aam
test
xchg
lods
sbb
cmpsl
mov
popf
mov
addb
sub
xchg
insb
and
cmp
adc
adc
das
fidivl
xchg
mov
mov
sub
cmp
jae
xor
ja
lds
push
fbstp
pop
fwait
aaa
jp
dec
lret
jmp
inc
mov
mov
push
add
jne
adc
inc
cmpsb
add
or
lea
dec
nop
imul
cs
xor
jmp
rorb
pop
mov
stos
push
jo
aaa
stos
dec
pop
in
inc
dec
jo
add
adc
mov
cld
inc
jmp
pop
test
or
jo
jg
pusha
add
sahf
jae
outsl
sti
xchg
dec
int3
loopne
sub
or
xchg
mov
daa
insb
lock
inc
nopl
jae
mov
loopne
fcmovb
enter
jo
leave
rorl
xchg
mov
jge
outsl
dec
mov
dec
repz
xchg
orb
push
mov
lcall
je
xor
sub
out
push
mov
pop
rolb
jb
repz
mov
sbb
in
mov
fwait
ljmp
outsb
mov
xor
push
ljmp
fidivl
mov
popf
call
mov
or
mov
mov
push
mov
inc
jo
sub
lods
jo
jg
pop
pop
xchg
or
push
out
pop
outsl
sbb
mov
out
shlb
orl
add
cmp
nop
cld
jp
push
js
xor
test
pop
xchg
je
inc
je
adc
jo
fimuls
mov
xor
xor
cmpsb
pushf
imul
in
scas
frstor
jo
sub
add
cmp
push
push
mov
cmp
cld
inc
ja
adcb
rclb
mov
out
push
stc
sbb
in
cmp
popa
jecxz
sbb
enter
loopne
xor
sub
add
aas
lock
mov
dec
in
cmpsb
fwait
adc
jo
loop
cmp
pusha
insb
js,pn
jo
shlb
stos
pushl
mov
mov
outsb
adc
pop
jo
icebp
cs
popf
aaa
jg
ljmp
adc
insl
push
adc
shrl
test
iret
sub
shl
inc
aad
pop
ja
ljmp
jo
cmp
imul
out
idivb
fcomps
mov
repz
sbb
das
movsl
fstl
test
or
jae
mov
lock
mov
andl
pop
mov
loope
jns
test
add
add
out
jl,pt
outsb
xor
std
lock
xor
inc
add
jae
cmp
addr16
push
insb
xorl
jl
into
adc
dec
rcl
in
repz
stos
jmp
xor
xchg
mov
jae
sub
leave
push
lock
out
lock
stc
outsb
cmp
mov
sbb
and
pop
lods
jae
outsb
push
mov
hlt
test
dec
test
ret
jns
addr16
popa
mov
fstps
inc
nop
shll
cmpsl
inc
test
mov
pop
mov
and
pop
loope
test
idivb
xlat
add
lock
inc
pop
das
jo
repz
jae
cmpsl
es
sub
sbb
sub
mov
ficoml
xchg
mov
popa
lock
jo
add
and
insl
and
jge
jo
jecxz
rolb
hlt
nop
icebp
cmpsl
arpl
and
and
test
sub
jo
sbb
cli
xor
cmc
jo
rcrb
mulb
inc
add
stc
sbb
mov
scas
icebp
jnp
movsb
mov
add
dec
push
in
sub
out
orb
add
jnp
sub
in
mov
imulb
jp
and
jae
push
sarb
sub
adcl
stos
jae
insb
inc
push
and
scas
divb
iret
pop
sarb
lea
faddl
sti
out
mov
inc
insb
repnz
and
xchg
add
movsl
xchg
shlb
addb
jne
loop
cmp
jo
mov
pushf
sbb
or
leave
andl
sbb
imul
jle
ja
mov
mov
push
xchg
or
mov
xchg
popa
pop
and
das
jo
outsl
inc
shlb
adc
jecxz
shlb
enter
xchg
add
add
add
push
xchg
jo
dec
or
pop
divb
add
push
iret
lret
dec
or
frstor
sub
loop
jp
adc
push
xor
push
xor
mov
int
mov
pop
movsl
stos
pop
jb
mov
add
add
jne
push
mov
jge
repnz
jo
adc
pop
cmp
inc
mov
inc
lock
ret
add
pop
sub
mov
mov
xchg
out
pushl
jo
test
stos
or
mov
pop
loope
sub
cs
idiv
cli
jo
mov
jo
cmpsl
or
xor
std
jo
xor
divl
sahf
add
hlt
adc
and
inc
rolb
in
dec
je
cmpsb
aam
mov
inc
shrl
add
mov
std
xor
ja
jl
in
dec
cltd
mov
ljmp
in
mov
jo
dec
push
test
mov
or
push
xchg
push
jnp
scas
out
mov
or
sub
cwtl
xlat
insl
ds
xor
movsb
pop
pshufw
xchg
sbb
cmp
pop
gs
loopne
insl
dec
call
sbb
test
xor
or
ja
scas
add
inc
add
test
pusha
cli
aaa
mov
sbb
push
loopne
insl
pop
repz
test
sub
jp
dec
sbb
adc
push
jae
inc
xlat
stc
pop
mov
push
push
and
add
outsb
fnstcw
fists
jo
call
jo
pop
inc
fisttpll
or
and
mov
loopne
lds
imul
mov
test
mov
test
sbb
mov
insb
add
lahf
sbb
js
insl
lret
dec
nop
add
loopne
mov
arpl
int3
movsl
xchg
addl
xchg
outsb
fmul
jnp
jo
jge
mov
enter
data16
pusha
cmp
jae
sbb
xor
movsl
int3
pop
jl
sub
cmp
scas
nop
fstpl
xchg
jo
fdivr
gs
jb
jl
fidivs
sar
aam
dec
adc
std
mov
ss
pop
jo
insb
sbb
mov
lahf
fldenv
mov
jo
and
add
adc
sub
js
jbe
push
incb
push
jae
lock
jo
cmpsb
rcrl
sub
mov
lahf
test
xchg
push
jo
dec
xchg
add
shrb
mov
jle
jnp
fs
pop
stos
pop
cmc
jo
idivl
mov
xchg
xchg
mov
jo
sub
repnz
dec
cld
iret
jo
pushf
ljmp
jo
sub
inc
insl
adc
mov
xor
mov
dec
fcoms
jns
mov
jo
jp
loop
test
inc
inc
les
bound
jae
std
clc
ret
shr
mov
fdivr
mov
or
ljmp
add
or
mov
dec
jo
mov
sti
bound
rcl
out
sub
dec
lock
push
cmovp
xchg
mov
out
scas
mov
sub
jo
pop
movsb
cmp
mov
int3
jbe
shr
mov
pop
jo
repnz
mov
jo
in
mov
mov
xchg
jno
pop
jo
mov
in
jg
sbb
lods
mov
xchg
stos
dec
fs
mov
in
cmp
enter
shlb
inc
addr16
push
cld
or
inc
mov
test
leave
and
adc
add
lock
ds
js
ja
cld
push
and
pusha
sub
dec
dec
jae
or
mov
mov
cmc
std
mov
mov
dec
fdivs
lahf
fidivl
xor
mov
test
mov
fildll
cmp
or
inc
xor
dec
mov
iret
ss
mov
movsl
leave
jmp
stos
jo
jnp
jge
out
or
cld
arpl
loope
fst
pusha
outsb
jo
push
mov
imul
adcb
push
xchg
sub
push
lahf
mov
mov
jle
jo
out
jge
js
mov
int3
jo
lret
das
int
mov
sbb
mov
std
imul
push
sahf
and
cmpb
mov
lahf
push
inc
out
sbb
and
or
popf
into
xor
call
js
xchg
jne
je
or
stos
movq
in
dec
push
mov
jno
cli
push
jns
hlt
push
jmp
es
push
jmp
jnp
sbb
add
sbb
cmp
jbe
jl
pop
jo
negb
aas
mov
jns
leave
inc
test
pop
add
push
rolb
push
dec
popf
lea
xor
lods
ljmp
xor
adc
jo
fsubp
sub
je
xchg
jp
pop
icebp
push
fildll
jo
decb
xchg
lock
clc
jo
in
xchg
call
shrb
out
jge
push
jo
mov
and
push
add
xchg
ret
orl
cmp
insl
shlb
add
gs
fsubs
jo
inc
pop
xchg
lods
ja
jo
cmpsl
add
cmp
mov
and
jo
mov
jge
push
addb
jo
ret
jne
stos
jae
outsl
cwtl
shlb
sub
cld
adc
loop
loope
push
mov
or
jp
sub
adc
movsl
and
mov
mov
sbb
dec
out
inc
mov
jo
repnz
push
xchg
mov
repz
and
stos
in
inc
cltd
aaa
test
fidivl
ja
push
add
shl
jp
inc
cmc
jno
and
dec
out
jo
in
inc
or
out
jo
aas
hlt
push
sti
popf
mov
jge
mov
shl
mov
fildll
cmp
pusha
movsl
jo
or
xchg
cmc
push
ljmp
aas
cmp
jl
jo
repnz
push
push
rep
jnp
in
xchg
jo
ret
jne
insb
cmp
into
cmp
cmpsb
jae
sub
loopne
aam
jo
push
pop
cmp
inc
jl
add
pop
jo
mov
lea
test
test
xchg
cmp
shrb
xchg
outsb
mov
xchg
inc
jae
ljmp
pop
hlt
test
sbb
pop
or
push
addr16
pop
insl
enter
fistpl
xor
arpl
or
or
lock
insl
fbld
pop
ret
clc
push
jge
aaa
xchg
lods
jo
sbb
xor
sub
push
cmp
xchg
aam
lock
stc
std
jo
movsl
pop
and
and
insl
je
xchg
dec
je
lock
mov
or
sbb
fmull
loopne
push
adc
into
das
sti
lcall
mov
push
adc
idivb
daa
lcall
jmp
push
cltd
test
mov
mov
dec
iret
inc
inc
and
dec
aad
repz
outsb
das
lcall
js
jle
jns
dec
jp
sub
and
mov
cmp
rolb
push
inc
insl
mov
faddl
pop
gs
mov
popf
jae
xor
or
or
jp
mov
xlat
adc
sbb
xchg
push
cwtl
cmp
sub
lods
pop
lahf
ja
outsb
addr16
je
xor
adc
jnp
test
cmp
xchg
xchg
mov
mov
xorb
lods
dec
outsb
mov
lock
imul
xchg
pop
xchg
mov
xor
push
loope
jl
push
and
adc
pop
cli
xchg
pusha
xchg
jo
les
test
mov
outsb
mov
mov
jo
lods
repnz
mov
aaa
xor
mov
jo
mov
mov
jo
repnz
sbb
lock
and
jne
pop
jo
repnz
pop
insb
int
bound
scas
jne
sub
faddp
xchg
mov
int3
mov
xchg
xor
xor
fldl
cli
hlt
sbbl
shlb
push
je
add
lods
aaa
rcrl
pushf
jns
fimuls
adc
cmc
mov
mov
mov
pop
dec
test
jo
sbb
and
aad
jo
repz
pushf
jns
movsl
fsubrl
mov
and
out
dec
lods
push
jo
stos
in
xchg
jmp
fs
sub
cmpsb
adc
rcrl
mov
xchg
stos
fiaddl
test
addb
scas
jae
imul
pushf
xchg
enter
jo
in
push
and
adc
sbb
add
iret
or
xchg
das
cmpsb
mov
inc
pop
jo
addl
jae
je
outsb
sbb
enter
push
shrb
je
mov
fisubrl
pop
push
insl
cwtl
cmpsb
mov
insb
stos
or
cmpsl
sub
add
das
pop
mov
xchg
jb
insb
sbb
mov
jge
enter
adc
mov
subl
pop
sub
sub
pop
mov
inc
sbb
out
in
adc
fildll
lahf
sti
addr16
adc
xchg
imul
dec
ja
mov
jnp
in
mov
mov
and
lahf
jo
insb
out
jmp
iret
xchg
mov
jo
test
call
rclb
outsl
out
sbb
mov
inc
xchg
mov
xor
notl
hlt
xor
je
push
xor
pop
jge
outsl
jae
mov
cmpsl
clc
fidivrl
repnz
jne
mov
es
std
inc
cmp
mov
xchg
xor
add
jne
mov
dec
in
add
add
jo
dec
fnstsw
pusha
cmc
xor
insl
jge
sbb
inc
or
enter
mov
nop
xchg
out
incb
add
and
cli
dec
imul
mov
xchg
adcl
icebp
jo
test
and
pop
jmp
push
scas
not
lret
and
jns
xor
in
and
fcoms
insl
dec
and
xor
jl
xchg
xchg
pop
hlt
add
xchg
mov
mov
jmp
lret
jp
rcl
into
int
jbe
fst
jmp
jae
mov
adc
ja
mov
jo
repnz
pop
call
xchg
testl
jo
cmp
mov
mov
das
scas
negl
push
jo
xchg
dec
insb
cwtl
les
sub
fwait
pop
popa
jae
xlat
mov
or
icebp
outsb
and
ret
xchg
push
lods
pop
js
inc
jo
es
push
and
aad
test
xchg
repnz
xorb
ja
enter
mov
enter
xor
fst
mov
jo
repz
dec
sti
mov
dec
shll
mov
rclb
cmp
das
or
mov
ret
loope
adc
mov
sbbb
cli
mov
jle
mov
bound
outsl
jo
xchg
orl
test
mov
adcl
sub
or
shll
lock
cmpl
idivl
dec
gs
jae
sar
jmp
fdivr
xor
dec
pop
lcall
sti
xchg
lock
fwait
addr16
movsb
jecxz
mov
xchg
test
jo
mov
repnz
jle
jp
lret
push
ja
fldcw
add
test
adc
enter
jl
fcoml
daa
mov
adcb
out
out
jo
stos
or
insl
mov
xchg
mov
push
insl
jbe
call
mov
rcrb
add
sbb
jo
dec
in
fisttps
js
scas
aaa
dec
ja
into
pusha
mov
jecxz
jp
inc
in
push
push
and
ficoml
cs
in
push
std
pop
movsb
aad
cmp
mov
daa
cmp
add
adc
fcmovbe
mov
pop
jmp
popa
jo
or
xor
push
jge
jnp
mov
pop
ror
jo
mov
pop
adc
mov
lret
xchg
jo
pop
stos
add
jo
xchg
push
jge
and
dec
loopne
in
xor
bound
push
mov
scas
cmp
iret
mov
inc
lret
in
jo
je
mov
leave
jns
jo
lds
dec
jo
ja
jnp
inc
addl
lret
subb
ds
fstpl
ja
cmp
fcmovnu
lret
pshufw
std
xchg
mov
xor
dec
xchg
mov
fwait
adc
mov
sbb
cmpsb
mov
mov
cli
je
fnstsw
jo
ret
js
loop
jo
aaa
mov
sbb
lds
std
add
pmulhw
mov
jo
icebp
aam
pop
leave
stos
mov
mov
jne
and
and
inc
inc
mov
xchg
test
and
jle
js
imul
imul
pop
insl
in
jmp
inc
sub
xchg
mov
jle
out
test
sbb
sub
data16
je
add
xor
and
mov
fwait
out
lahf
sub
je
mov
xchg
push
push
pusha
mov
dec
outsl
cmp
pusha
jo
xchg
dec
cld
gs
repnz
push
pop
mov
mov
sub
pusha
insl
out
dec
pop
and
fistps
xchg
push
cmp
push
sbb
fidivs
test
insl
pushf
stos
leave
imul
cmp
enter
sub
add
mov
dec
xchg
add
xchg
jmp
add
fisubrs
bound
imul
lock
mov
pop
or
jo
or
subl
sub
leave
jae
add
movsb
mov
jo
mov
pop
pop
push
fs
arpl
jo
push
sti
cmpl
jo
cltd
stos
ret
mov
insl
mov
je
inc
fcomp
mov
shll
dec
hlt
insb
xor
jmp
inc
adc
jo
in
inc
sub
pop
jp
jae
xchg
out
jno
mov
sub
mov
mov
and
mov
gs
lds
cmp
stos
add
ret
jbe
test
xchg
scas
les
popa
es
idivb
mov
out
inc
stos
jo
mov
ljmp
cmp
lret
dec
jo
cltd
leave
add
outsb
mov
or
jo
fnstcw
mov
out
test
insl
fs
ret
cmpsl
insl
dec
scas
sbb
ds
xor
iret
ljmp
jo
loopne
inc
pop
push
add
mov
aam
and
and
mov
imull
enter
xor
mov
fwait
test
inc
jbe
sarb
into
rorl
mov
lock
push
std
hlt
add
dec
shl
jo
sub
int3
pop
in
push
dec
cmp
pop
jo
scas
cltd
lcall
imul
insl
rcr
out
push
mov
jo
and
stc
enter
push
and
and
mov
sub
cmp
pop
ja
frstor
adc
jl
xchg
je
fs
fwait
mov
adc
pop
mov
or
mov
dec
xor
outsl
or
jmp
mov
repz
sbb
out
xor
sbb
add
fmull
shlb
lea
and
push
js
xchg
pop
add
xor
jo
xlat
jno
push
cmpl
andb
push
mov
mov
sub
js
icebp
aad
jl
shlb
fbstp
loopne
push
cmp
mov
inc
or
xchg
lods
fwait
jge
inc
sbb
mov
xor
pop
aas
mov
add
jmp
dec
fnsave
inc
add
or
data16
xchg
mov
js
mov
insl
ja
cmp
call
in
jo
sti
xlat
outsl
mov
mov
jb
stos
out
xchg
push
xchg
call
pop
idivb
sub
enter
jo
add
inc
lock
cltd
dec
sbb
cmp
outsb
xor
jl,pt
pop
outsl
scas
jnp
arpl
mov
lret
mov
outsl
sub
mov
cmp
push
inc
jno
fadds
lret
jo
aad
repnz
into
adc
insl
cwtl
mov
mov
xor
xchg
mov
jns
add
jo
ret
aas
push
es
loop
js
out
je
ss
sbb
out
ja
xchg
popf
stos
mov
mov
sbb
test
lea
pop
lahf
jp
lcall
insl
pop
mov
jo
fcmovb
xchg
xchg
aaa
push
je
dec
add
mov
sahf
jge
int
aaa
sbb
mov
insb
repnz
daa
and
cli
fidivrl
int
mov
push
in
std
fs
lods
jo
dec
adc
ja
cmpsb
mov
insb
ret
loope
dec
loop
fimull
jae
add
or
adc
mov
jo
pop
imul
sbb
out
sbb
fistpll
sub
sbb
inc
sbb
cmp
out
add
cwtl
ds
jo
sbb
ret
js
add
push
test
mov
push
addr16
mov
push
scas
fnstsw
je
mov
aam
int
test
pusha
stos
lock
test
popf
in
movsb
pop
fisttps
scas
ljmp
or
imul
pushf
jne
mov
test
or
cmp
adc
fidivrs
dec
cmc
aas
mov
jo
xor
shlb
xchg
sbb
test
cmpl
jg
pop
pop
sbb
pop
jo
out
dec
loope
jo
cmp
rcrb
notl
or
and
fwait
jne
pusha
push
and
insb
push
sbb
xor
test
lea
pop
test
jne
inc
lret
pop
nop
fstps
jnp
dec
or
inc
xor
outsl
xor
lock
int3
push
stc
sbb
stos
aaa
ja
sub
addr16
mull
xor
cmpsl
sub
stc
das
jp
mov
nop
call
addr16
cli
std
xor
add
cmc
scas
lcall
mov
pop
lock
lea
adc
xchg
xchg
push
jo
jmp
mov
fwait
mov
shrb
xor
das
jae
imul
mov
pop
test
or
cmp
jp
icebp
push
mov
sub
push
mov
outsb
and
xchg
popa
jo
cmp
aam
in
fidivrl
arpl
movsl
les
adc
push
ja
sahf
jae
stos
repnz
icebp
jmp
je
mov
xchg
adcl
jns
jo
push
les
pop
sti
adcl
jl
subb
aad
sub
sub
or
push
movsl
cmpsb
out
push
inc
in
insl
dec
mov
nop
movsb
xchg
divb
sbb
or
mov
decb
xor
jg
arpl
mov
mov
pop
jo
lret
aas
push
push
jnp
in
add
inc
mov
mov
pop
or
push
xorl
or
or
sahf
jns
fisttps
nop
shll
mov
mov
shll
outsb
test
lods
push
xchg
inc
xor
sbb
movsl
enter
jmp
arpl
add
sub
sub
xchg
test
cmp
mov
fsub
mov
call
nop
sub
jl
cmp
fidivs
ds
test
lods
dec
push
inc
xor
orl
test
aaa
cli
pusha
jl
gs
je
pop
mov
and
loop
mov
mov
ljmp
cmc
out
inc
imul
mov
scas
cmp
std
imul
mov
cmp
lods
rol
or
xchg
movsl
mov
inc
jo
lret
pop
add
mov
jp
mull
mov
xor
sti
jo
insl
scas
add
nop
das
push
jno
cmp
adc
jo
xchg
cli
dec
fcmove
jnp
mov
xor
ja
daa
mov
sahf
adc
adc
jo
push
or
ja
cld
sarl
data16
jo
cmp
cli
jo
add
arpl
cmc
and
and
lahf
ja
sbb
test
clc
jo
pop
in
jno
jb
insl
es
mov
nop
mov
cli
adc
shl
mov
enter
in
push
out
lock
stos
pop
lcall
repz
jo
aaa
lods
dec
fiadds
je
mov
movsb
mov
mov
cs
jo
lods
lret
cltd
pop
sbb
pop
loop
scas
insl
mov
mov
out
and
mov
push
xchg
pop
add
jno
mov
dec
lock
arpl
inc
lods
in
cmp
out
mov
dec
jb
jo
cwtl
push
scas
pusha
repz
sarb
xor
xor
jo
push
push
pop
cmc
xor
jo
add
mov
push
add
add
popf
cmp
mov
sbbl
std
jle
and
sub
and
cmp
mov
add
test
inc
push
pop
mov
push
push
aas
mov
int
lds
or
jo
pop
bound
cmp
add
jo
aas
or
das
add
pop
mov
jg
xchg
lds
int3
in
push
bound
mov
into
popf
pop
jo
idivl
pop
or
ja
andl
scas
push
test
push
add
jo
test
mov
pop
daa
sub
push
pusha
adc
gs
repz
mov
or
ljmp
and
int
pop
clc
repz
out
icebp
aam
pop
push
aas
xchg
andb
add
stos
das
jge
xor
mov
cmpsl
mov
mov
push
outsl
jecxz
jo
loope
dec
jo
or
lods
jo
xor
jnp
dec
sub
push
jo
mov
addr16
push
lds
push
jb
mov
pop
mov
cld
or
push
and
jo
cwtl
lret
push
push
insb
scas
ret
imul
pop
pop
fcomps
lock
js
mov
jb
pop
xchg
nop
mov
jb
push
push
cmp
push
fbstp
xchg
ds
dec
insl
sub
fsubl
inc
inc
repnz
inc
test
adc
xlat
inc
add
fldpi
gs
add
insb
jo
sbb
mov
pop
ja
adcl
mov
sbb
push
fdivr
push
push
pop
cld
pop
jo
enter
das
jg
jp
mov
or
and
jp
loopne
stos
push
cmp
push
insl
jo
sub
inc
cld
imul
shll
sarb
cli
mov
cmpsl
or
jo
ret
mov
jge
popf
cmp
testb
xor
insb
fbstp
int3
arpl
mov
jae
xchg
push
inc
adc
push
punpckldq
lret
lods
call
dec
push
pop
fsubrl
and
fidivl
jle
ja
sbb
mov
icebp
jo
ret
xchg
xchg
out
jnp
lods
ja
jbe
outsl
pop
push
push
je
insb
lock
adc
sub
mov
xor
jle
mov
xorb
jo
mov
and
es
aas
bound
lea
mov
gs
shrb
mov
add
psraw
adc
push
jg
push
mov
aam
pop
jo
rcl
hlt
test
sub
mov
cs
jg
std
and
andl
lock
inc
push
mov
add
leave
mov
insb
aas
jo
clc
in
pop
ss
pop
push
jp
jns
lret
cmp
or
jo
jmp
jne
jo
fst
adc
jae
sbb
mov
adc
jns
sbb
sbb
in
jae
cmp
add
mov
movsb
shrb
icebp
insl
and
imul
or
jge
push
lea
jecxz
pop
push
xor
cmp
int3
jo
cmp
ret
cwtl
sub
pop
lock
pop
in
push
sbb
insb
pushf
ss
into
fidivrl
mov
push
adc
enter
push
push
mov
pusha
cmp
jae
inc
sub
jp
jbe
arpl
lret
imull
push
sub
jo
mov
push
dec
fidivs
or
loopne
push
dec
out
imul
push
ffreep
xchg
jo
mov
push
fcom
int3
jl
dec
push
outsb
cmp
jne
je
pop
inc
add
inc
push
jmp
clc
rcl
push
or
lcall
mov
cmpsb
stos
sbb
mov
mov
or
stos
mov
sub
pop
sti
fidivl
mov
cltd
aad
jl
adc
imul
in
xor
jp
jo
stos
leave
hlt
add
push
jo
jl
sbb
stc
sahf
ficomps
out
lcall
sbb
dec
and
jns
inc
inc
mov
and
shl
pushf
jne
adc
repz
pushl
jge
in
shlb
or
mov
aaa
push
xchg
dec
jle
out
addb
adc
call
bound
cwtl
lock
rcr
mov
jle
sti
fldl
ds
pop
gs
sub
inc
lahf
in
xlat
sbb
add
fucomi
add
jo
cwtl
mov
push
dec
xor
jne
pop
fnstsw
leave
insb
jmp
push
jo
jne
and
xor
add
push
ljmp
in
push
adc
lret
xchg
movsb
cmpsl
stos
jae
decl
jmp
ja
adc
iret
test
lret
jae
sarl
leave
cltd
enter
ja
or
fidivrl
ja
sub
scas
mov
cs
movsl
gs
inc
lods
add
mov
aad
iret
outsb
cmpsb
mov
movsb
push
ret
cltd
adc
jo
fbstp
jno
mov
addr16
lock
out
mov
sub
dec
gs
dec
pop
push
cmp
out
dec
xor
insl
fmuls
lea
rorl
dec
and
adc
adc
mov
rclb
push
insb
lods
popf
push
out
pop
bnd
xlat
cli
xor
ljmp
inc
loopne
gs
int3
xor
arpl
and
xchg
or
pop
js
push
ficoms
fs
sub
dec
je
cmpsl
jo
mov
loopne
out
dec
outsl
cwtl
fbstp
aas
nop
xchg
jg
sbb
jle
xchg
mov
add
lret
std
xchg
jo
jns
sahf
das
aas
sarb
push
std
addr16
or
lods
sub
add
mov
daa
jae
pop
push
push
dec
jb
and
insl
cli
lcall
sbbl
inc
fisubs
jo
in
hlt
stc
cld
in
push
jo
mov
sahf
pop
fmulp
jo
pop
in
stos
outsl
xchg
out
fdivrs
jo
mov
mov
jo
aad
repnz
cmp
pand
nop
push
into
dec
dec
jo
mov
out
lahf
jb
jo
pop
dec
fs
pop
insb
jo
add
add
jb
add
insl
sub
aas
jns
cs
jo
adc
xor
sub
mov
push
test
add
fisubl
lahf
addb
push
test
jo
or
test
and
mov
mov
lods
add
cwtl
xor
fcmovne
jo
aas
adc
pop
dec
mov
mov
in
mov
cmp
imul
cmp
push
cwtl
lahf
adc
jo
in
cmp
jl
in
mov
mov
jecxz
mov
or
mov
pop
cmc
mov
mov
popa
jo
mov
orl
nop
outsl
cmp
xor
insl
xor
outsb
dec
cmp
dec
jo
nop
lds
sarb
cmc
mov
ja
dec
push
call
or
jo
inc
inc
mov
jo
aam
stc
mov
jns
mov
ds
js
ret
push
push
push
icebp
mov
mov
scas
cmpsl
test
dec
movsl
adc
scas
jp
fucomip
adc
gs
stos
mov
cmp
jmp
es
ja
shrb
jo
cs
lods
shlb
test
sbb
into
jge
mov
adc
dec
inc
pusha
js
aam
and
pop
jecxz
jmp
add
inc
dec
outsb
lcall
cmp
ja
sub
movsb
fchs
int3
mov
mov
jae
cwtl
repnz
or
out
mov
pusha
jae
dec
sti
mov
xchg
testb
fldcw
pop
push
xor
mov
out
lock
ss
xorb
scas
out
cld
push
jnp
nop
in
ja
mov
je
jo
xor
inc
jo
push
pop
mov
jo
mov
iret
pop
push
popf
jo
dec
gs
sbb
fs
xor
leave
sarb
mov
or
mov
lret
outsl
rcrb
mov
aaa
sub
xchg
pusha
in
jo
cwtl
das
xchg
jmp
cltd
sbb
out
jb
jo
fbld
jae
inc
lods
and
mov
push
xorb
pop
pop
in
jbe,pn
data16
pop
jp
stos
fxch
icebp
xor
out
fisubrl
mov
pop
scas
insl
test
xorb
adc
insb
xor
enter
push
jne
push
popf
cmp
xorb
or
jae
jo
xchg
addl
pushf
sbb
repz
arpl
mov
das
sub
jno
jo
or
mov
xchg
loope
dec
add
pop
mov
mov
mov
xor
clc
push
lea
jo
adcl
and
xor
or
outsl
sbb
mov
lcall
in
lods
or
test
cwtl
adc
scas
adc
nop
inc
cmp
jae
inc
and
and
xchg
mov
sbb
nop
jg
adc
mov
push
inc
xchg
insl
mov
cmp
push
outsb
push
filds
aas
jne
push
jo
sbb
xchg
loop
mov
sub
mov
mov
xor
xchg
decb
ficoml
push
sbb
lret
pop
mov
lds
out
jae
sbb
nop
pop
outsb
sub
rorl
cmpsb
mov
lock
scas
adc
push
je
jle
adc
lcall
cmpsl
fsubl
jg
out
imul
arpl
int3
add
outsl
inc
sub
pop
mov
adc
mov
pop
dec
adc
lcall
inc
sbb
adc
iret
lahf
daa
arpl
mov
pop
jo
pusha
cs
sub
mov
punpckldq
jae
dec
hlt
jl
or
xor
push
or
ljmp
jle
jo
mov
xchg
vhaddps
in
jo
je
into
loop
or
pusha
inc
mov
fistpll
dec
xchg
outsb
jmp
int
movsl
jo
or
dec
addr16
dec
arpl
push
xchg
ds
mov
aas
mov
mov
cmp
jp
ret
pop
ljmp
sub
out
inc
jmp
adcl
push
test
out
pushfw
mov
xor
jo
pop
je
rorl
js
xchg
add
jnp
xor
sub
enter
add
or
mov
test
cltd
jo
xor
push
jo
notl
cli
pop
mov
out
and
mov
mov
sbbl
shll
fistpll
jb
mov
dec
cmc
push
lcall
rsm
lret
das
rorb
or
mov
inc
xlat
outsb
adc
ljmp
and
cmpsl
xor
mov
jecxz
or
daa
jbe
lret
mov
pusha
push
jae
push
push
jae
dec
nop
adc
dec
jo
mov
dec
addr16
andb
nop
in
scas
mov
movsl
jl
hlt
jle
jns
push
ficoms
jecxz
mov
cmp
adc
push
pop
jno
hlt
je
push
mov
jle
icebp
ja
and
pop
xor
pop
mov
jo
insl
loopne
outsb
rclb
test
jp
mov
hlt
ja
les
insl
mov
dec
nop
inc
cmc
and
fldt
rolb
inc
ljmp
adc
mov
xchg
jns
jo
mov
jmp
sub
mov
jecxz
sets
pop
pusha
rorb
adc
mov
jns
push
cmp
fisttps
jl
sbb
mov
dec
adc
jns
call
outsl
jb
test
aaa
stos
stos
jl
xor
fisubrl
adc
dec
pop
in
jne
or
out
push
pop
loopne
add
test
mov
jp
or
adc
push
or
pop
jge
mov
test
jne
movsb
jb
in
daa
sub
lcall
lcall
mov
lret
pop
jo
adc
in
repnz
loope
into
stos
aam
push
clc
pop
je
ljmp
sub
adc
sbb
popaw
jbe
and
push
out
and
adcb
in
lods
aas
xchg
adc
add
adc
push
sbb
pop
andb
mov
adc
out
push
cld
mov
std
insl
mov
jno
push
xchg
adcl
sbb
imul
xor
decb
jg
adc
inc
in
lock
adc
sbb
movsb
aaa
pop
xor
pushl
pop
mov
shrl
xor
in
iret
push
jae
adc
dec
sub
jo
adc
sub
jo
into
insb
lock
addr16
jo
pop
pusha
jnp
dec
adc
cmp
popa
repnz
sbbb
push
fnstsw
push
dec
in
jg
jnp
das
test
dec
out
lret
xchg
cmp
push
xchg
jo
push
sbb
mov
sub
aad
addb
xor
mov
arpl
cmp
jo
mov
sub
jo
sbb
js
push
or
mov
jo
jge
je
mov
insb
or
mov
add
jo
push
add
xchg
sti
cmp
jns
imul
lods
insb
or
mov
lds
data16
push
sti
jecxz
jge
sub
arpl
jo
mov
js
push
jp
iret
pop
pop
push
push
movl
cmp
mov
loope
ja
mov
cmp
jo
mov
shll
fwait
push
inc
and
jae
jle
aas
or
jns
jo
add
dec
data16
ljmp
push
sub
sub
ret
xor
add
nop
std
in
sub
pop
daa
inc
jo
push
es
add
jo
movsb
lods
pop
or
movl
loopne
push
divb
fstpl
inc
dec
inc
stos
repz
xlat
mov
sbb
popf
mov
loope
jae
dec
fstl
je
push
negl
mov
das
out
jo
aaa
andb
shl
xor
add
enter
arpl
xorl
notl
xchg
clc
jo
add
popa
shll
sbb
add
call
stos
add
or
dec
clc
ljmp
rol
leave
xor
movb
arpl
mov
pusha
insl
test
mov
mov
imul
xor
jo
jae
cltd
dec
roll
movl
imul
push
outsb
jns
xchg
jo
data16
enter
inc
gs
nop
frstor
pop
pushf
cmpsl
call
jo
mov
dec
in
dec
add
sbb
leave
xor
pop
add
cmp
pshufw
lcall
mov
mov
addr16
pop
shr
call
and
adc
jo
adc
mov
jl
ret
jp
ffreep
lods
push
imul
sbb
cltd
mov
pop
dec
int
jo
repz
lret
and
imul
pop
push
inc
ss
jbe
pop
lahf
adc
jle
imul
shll
cltd
das
push
mov
test
push
mov
xchg
or
sbb
es
movsl
jo
xor
pushf
jo
cmp
mov
sbb
and
test
adc
outsb
stc
insl
push
cwtl
aam
mov
notl
cmp
mov
ret
aaa
or
ja
xor
add
push
shlb
mov
dec
or
jae
ja
ds
add
sti
lock
std
cmp
xor
mov
inc
dec
pshufw
std
cmpsl
inc
aas
out
jo
stos
je
pop
and
push
insl
loope
scas
jae
pop
push
add
dec
and
cli
inc
inc
es
in
jnp
xchg
dec
jle
add
out
cltd
test
sub
cmp
mov
and
ds
in
jbe
cwtl
pop
push
cmp
push
xor
pushf
lods
mov
sub
xorl
loope
data16
xchg
fwait
sub
push
out
xchg
lods
jle
or
out
add
push
jbe
jno
and
fs
lds
mov
push
mov
jae
pop
out
popa
jo
lods
stos
dec
jg
push
int
mov
in
pop
out
jo
cld
xor
rcl
loopne
xchg
jno
pop
not
sti
lock
dec
jb
nop
jnp
xorl
inc
pushf
ss
insl
loop
pop
inc
out
xor
jo
insb
in
sbb
jo
and
lock
cmc
movsb
inc
jo
adc
xchg
xchg
xor
sub
std
cmp
fwait
push
dec
lds
inc
inc
sub
pushf
cs
ds
cmp
incb
add
jnp
mov
jo
pop
divl
mov
jo
adc
mov
dec
and
std
lock
arpl
push
les
ds
fstpl
cwtl
jo
rclb
data16
ret
lods
add
sahf
shll
adc
jmp
and
cmpsl
ret
or
jo
jb
int3
in
lret
xor
push
and
sub
jo
sbb
mov
jmp
pusha
inc
enter
fucom
stos
jb
add
dec
ret
jo
popa
mov
pop
push
std
sbb
jge
icebp
jo
data16
lock
cmp
dec
xchg
fs
mov
jbe
xor
sub
mov
insb
ja
test
pop
lods
cwtl
cmc
cltd
inc
or
jo
xchg
add
jo
dec
and
xor
push
jo
pushl
jno
scas
cmp
outsl
jo
pop
cli
xor
add
pop
gs
pop
int
sub
xchg
xorb
ret
sbb
xor
push
mov
shll
bnd
cltd
jo
in
mov
sahf
nop
pushw
mulb
int
sub
mov
pop
jo
adcl
incl
icebp
call
mov
filds
lock
mov
or
loopne
jo
rolb
jo
pop
popf
adc
stc
pushf
jo
mov
iret
shrb
ret
xchg
jo
adc
xchg
je
sbb
mov
jo
into
icebp
dec
dec
jg
ja,pn
stos
add
and
jb
rclb
mov
or
dec
or
jae
jmp
loopne
jbe
jo
clc
lcall
daa
xor
invd
and
movsb
lock
inc
mov
sub
or
sub
jo
mov
inc
inc
jno
push
xchg
add
sbb
fistpll
jo
sbb
push
xchg
adc
jl
vpshufhw
xchg
sub
bound
sub
jl
push
pop
out
jp
addb
jo
or
jo
and
or
cmc
jb
adc
ja
lea
das
insb
cmp
outsb
lock
lds
enter
xchg
dec
or
std
xchg
rcll
jo
pop
fdivrl
imul
lods
mov
jle
adc
fsts
jmp
lods
outsl
roll
daa
aad
lahf
movsb
inc
mov
iret
dec
rcll
sub
pop
ret
test
jmp
xchg
popf
sarl
mov
mov
mov
or
xchg
fwait
jae
xorb
cs
add
insl
daa
imul
ljmp
jbe
or
push
aam
lock
cwtl
ljmp
mov
jo
add
pop
cmp
lock
xlat
iret
inc
add
push
jo
in
sbb
xor
or
xlat
inc
test
out
jo
jl
repnz
sub
mov
outsl
jo
sbb
test
lock
fisttpl
jo
xchg
mov
dec
into
ret
adc
movsl
lods
scas
mov
dec
lds
mov
ret
jo
repz
in
lahf
xchg
xor
mov
or
jp
lock
lds
xlat
jl
stc
lock
inc
jo
add
jno
sbb
stos
pop
cli
or
jo
loopne
sub
dec
inc
xchg
cmp
and
data16
and
in
mov
arpl
dec
jo
pop
cs
adcl
lock
jbe
or
jp
push
mov
rorl
jo
xor
xchg
icebp
pop
iret
cli
jo
push
insb
mov
jo
mov
lcall
jnp
repz
pushf
stc
lea
testb
jo
adc
or
insl
fcompp
jl
cmp
push
or
shlb
xchg
mov
or
mov
xchg
sub
mov
inc
gs
int
jo
push
cmpsl
push
in
jno
jo
mov
pop
sub
cmp
pop
push
jo
or
cltd
daa
ja
or
gs
jecxz
jge
outsb
push
inc
loope
aam
mov
xchg
push
rcrl
jo
popa
loope
push
push
dec
cmp
pushf
lock
out
push
call
insl
mov
push
cmp
jb
push
sbb
xchg
push
pop
jae
mov
imul
js
push
xchg
lret
xchg
icebp
mov
pop
cld
jo
test
in
ja
sub
mov
mov
xor
pop
leave
jo
xor
in
outsb
jo
sbb
mov
mov
jne
cmp
repnz
sbb
jle
aas
iret
dec
or
inc
or
mov
orl
dec
cwtl
mov
mov
jae
mov
enter
jo
or
dec
or
pop
out
mov
iret
out
shrb
lds
addb
pop
and
add
iret
mov
xchg
rol
jae
das
mov
pop
fcoms
mov
sbb
nop
xchg
addb
das
add
jb
scas
rcll
test
imul
push
add
jae
rcrl
divl
ret
insb
lahf
out
dec
cli
sbb
and
movsl
xor
lds
mov
lret
shr
mov
ja
jp
rcrb
cltd
add
and
loop
jp
sub
inc
orl
mov
popf
lret
or
sbb
leave
adc
orb
mov
ret
adc
out
jo
dec
mov
jg
sub
jo
jge
das
sarl
mov
jle
shrl
mov
xchg
mov
pop
sbbl
cmc
lret
jo
lea
sarl
lods
sbb
lock
rol
and
int3
mov
out
add
leave
mov
or
jge
inc
and
jae
cltd
push
out
xor
lahf
out
lea
pop
cmp
pop
ret
jae
sub
or
inc
mov
pop
decl
dec
jo
xchg
aas
out
movsl
mov
cmp
out
jae
dec
mov
xor
cmpl
mov
jo
mov
xchg
jo
js
pop
aad
mov
jo
lret
fsts
cmpb
in
push
mov
cli
mov
or
insl
pop
pop
or
rcll
sub
add
jo
loope
cltd
stc
fisubs
xchg
sahf
pop
test
roll
cmp
fdivl
jo
and
jo
cmp
and
jno
pop
dec
outsl
out
test
xor
push
xor
pop
adc
mov
pop
ffreep
std
rcl
mov
mov
cli
xor
cmpsb
add
push
jo
push
lret
or
add
ja
test
cltd
adc
sti
mov
enter
shll
fmul
jo
dec
data16
std
subb
cmpsl
adc
cltd
test
dec
ja
and
mov
pop
add
add
stos
lret
adc
jnp
into
add
push
lahf
test
fisubrl
dec
xlat
cltd
xor
cmpsb
in
leave
clc
int3
mov
sbb
test
sbb
add
xor
aaa
push
stos
mov
nop
sbb
jo
insl
dec
shrl
xor
inc
icebp
adc
xchg
mov
cmp
inc
ret
or
xchg
jo
push
jo
and
jge
jo
cli
out
nop
sbbb
outsb
shl
mov
xchg
jo
cltd
cmpsb
subl
xchg
lret
mov
inc
cmpb
mov
popl
enter
mov
in
inc
jno
mov
mov
jo
lcall
mov
ret
inc
xchg
mov
out
int3
sbb
in
ja
mull
jo
mov
adc
and
shrb
xor
aaa
jo,pn
jb
pop
mov
jno
mov
dec
cmp
mov
push
das
jo
divb
jo
ja
or
push
add
ficomps
stos
pop
add
les
jbe
add
pop
test
xchg
dec
jo
daa
cltd
cmp
jp
pop
jg
aaa
add
shll
rol
lret
jb
sbbl
jo
in
mov
jo
decb
xlat
push
popf
ficompl
or
jecxz
jo
sub
cltd
std
inc
outsb
push
xlat
push
mov
and
pop
addr16
imul
or
insb
jo
int
push
sbb
das
movsl
fimull
icebp
cwtl
and
jle
jl
adc
dec
fisubl
outsl
test
lret
sbb
ja
cli
iret
mov
push
lods
and
fidivrl
lret
imul
add
add
loope
fcomps
jno
push
xor
inc
push
shlb
lods
scas
sub
add
jmp
movsl
inc
cld
xor
out
in
sbb
push
out
mov
jo
cltd
jnp
imul
ret
lret
inc
out
das
or
mull
das
sub
xchg
sahf
sub
sbb
fisubrl
fists
lret
pop
lock
jmp
das
add
fwait
dec
enter
rcll
cltd
mov
mov
lods
add
sbb
pop
inc
push
push
shrl
cmp
fidivl
xchg
stos
cli
stos
push
push
lcall
mov
jo
cltd
divb
mov
xor
mov
or
daa
out
jo
sbb
add
out
notb
repnz
in
sti
push
xor
ja
mov
or
sbb
add
loopne
jnp
mov
push
and
ret
xchg
mov
ja
dec
dec
scas
add
aad
sub
in
or
and
adc
xchg
xchg
lods
das
int3
push
loop
outsb
mov
mul
cmc
test
add
fwait
inc
jo
aas
mov
pop
inc
xchg
jo
ljmp
jae
jae
sahf
jb
pop
adc
or
lahf
ret
lcall
icebp
jo
jecxz
sbb
fs
je
movsb
jl
mov
cs
jge
ret
jns
xchg
pop
dec
dec
sbb
jo
fwait
jmp
pop
in
jo
mov
sub
fisttpl
call
lahf
mov
push
ret
ds
or
jle
sbb
xchg
or
int3
dec
xor
mov
pop
jo
subb
jo
adc
aam
es
pcmpeqw
imul
sbb
stos
jo,pt
ljmp
cltd
push
mov
rcrb
sahf
fidivl
out
int
cmp
xor
out
scas
jmp
or
lret
cltd
lret
negl
shr
ja
loopne
xchg
jb
lods
and
push
xchg
imul
mov
push
enter
xchg
loope
inc
in
push
dec
jo
popf
unpckhps
mov
jae
lds
les
xlat
ja
cmp
ss
xlat
sbb
sub
ljmp
pop
dec
xchg
vpcmpeqw
jns
fadds
pop
inc
mov
jle
outsl
aad
mov
dec
pop
cltd
into
es
shlb
add
decl
mov
ficoms
mov
adc
nop
or
adc
sub
jo
outsb
lahf
lcall
mov
call
xchg
cmp
jo
inc
fstps
popa
xchg
jo
jg
ds
ljmp
jae
mov
mov
jo
push
das
in
jecxz
jo
pop
mov
aam
mov
push
add
enter
ds
push
jo
xchg
or
imul
adc
dec
inc
pop
fidivs
popl
mov
jo
cmpsb
out
stos
lcall
jo
bswap
adc
add
jo
pop
mov
test
push
gs
addb
pop
adc
jo
or
pop
pop
lret
jo
stos
fldt
sub
imul
in
int
lods
sub
pusha
pop
and
ret
jo
stos
adc
jo
and
add
and
mov
xorb
js
sahf
enter
lret
jo
lods
inc
mov
jnp
and
xchg
jle
rclb
and
jns
add
nop
pop
jae
push
lcall
jl
fs
sub
mov
sub
fcomip
inc
jo
sub
mov
jp
fldcw
test
jo
mov
xor
fmull
push
loopne
dec
fisubrl
leave
jo
popf
test
outsb
add
jo
jge
push
testl
in
jg
lret
bnd
xchg
sti
xchg
add
sbb
jo
cmp
add
lods
jo
adc
mov
in
js
jg
add
or
jo
shll
ja
aas
les
loopne
out
push
jo
sarb
push
test
ljmp
into
lcall
xlat
mov
or
jo
lret
pop
mov
pop
mov
out
sub
outsl
jno
mov
mov
ja
sbb
fstpt
lea
pop
or
add
pop
test
cmp
lea
ja
inc
sub
adc
pop
mov
shll
test
jg
stos
icebp
sub
jo
and
rorl
ja
fdivrl
into
xchg
outsl
adc
shlb
add
pop
iret
sub
aas
rcll
push
mov
cmp
adcb
cld
pop
sbbb
mov
test
movsb
jo
pushl
rclb
push
insb
mov
or
fistpll
or
fsts
xlat
mov
adc
cld
sbb
imul
aad
mov
aam
mov
cmpb
or
insl
dec
enter
imul
mov
lret
or
push
insb
aaa
jmp
mov
pop
leave
mov
enter
jo
popa
pop
cmp
mov
mov
or
adc
call
jno
flds
dec
ds
mov
lret
dec
es
inc
jo
or
out
adc
push
jo
or
enter
mov
rcll
xor
push
mov
rcr
mov
in
and
dec
testl
adc
jo
cmp
and
pop
sbb
add
push
lret
fisttps
mov
rcr
adc
test
test
pop
xchg
cli
cmp
dec
cltd
inc
stos
mov
push
jnp
test
xchg
les
dec
jg
push
mov
jnp
lcall
lods
jo
inc
adc
jg
inc
dec
jmp
enter
jo
test
in
out
adc
adc
xchg
fwait
pushf
call
jo
shlb
xchg
push
sub
xchg
and
lock
pusha
adc
jo
fimuls
and
mov
lcall
and
push
rcll
call
lret
lahf
and
add
int3
add
pshufw
ror
dec
pop
stos
popf
lock
mov
xor
repz
xchg
out
pop
push
test
loopne
push
cli
xor
in
or
filds
inc
adc
cwtl
adc
les
roll
adc
push
jo
xchg
pop
cmc
ljmp
cltd
or
lcall
cli
jle
sub
or
int
or
jmp
adc
out
jp
xchg
jo
push
imul
lds
mov
je
call
movsl
aas
xchg
inc
dec
lahf
adc
rolb
cld
mov
mov
stc
and
scas
into
loop
add
or
mov
jp
arpl
mov
int
or
fistpl
push
dec
popa
scas
movsl
cmp
jo,pt
xchg
xor
mov
mov
adc
add
flds
jo
add
mov
loope
push
jbe
jo
ljmp
jo
addr16
xchg
out
cmpsl
jo
sahf
cmpb
or
xor
sbb
cmc
repz
iret
loopne
dec
lret
jae
xor
fadds
std
jae
mov
fsubr
fcoml
sbb
jo
sbb
jle,pt
lret
lea
mov
test
dec
jnp
jo
cltd
insl
mov
sub
sub
and
push
jo
inc
shll
sbb
xchg
nop
dec
lods
add
mov
xlat
adc
jno
jo
or
jae
mov
mov
pop
enter
jo
inc
shlb
jo
pop
arpl
xchg
pop
jo
cmp
fidivs
jg
imul
jo
dec
mov
es
dec
jl
out
ds
mov
pop
push
jb
lret
movsl
push
push
ret
imul
and
dec
sub
mov
stos
leave
jo
xchg
adc
jne
inc
lock
sbb
scas
pop
cli
xchg
nop
mov
sub
push
jp
sbb
or
stos
sub
test
pop
jo
and
stos
pop
dec
jae
or
lods
add
in
rcl
mov
shll
jo
push
add
stc
movsl
mov
fwait
lods
jo
sbb
stc
jg
or
ds
das
lret
fs
in
pop
xchg
or
push
and
cmp
les
mov
adc
clc
lods
jg
jo
or
xor
bound
lds
test
hlt
lret
leave
pop
or
or
mov
mov
insb
mov
and
out
cmpsb
inc
pop
jo
sarb
or
add
or
add
and
pop
dec
call
sbb
xchg
and
mov
cmp
cmp
mov
xchg
loope
jo
jno
mov
cmp
jo
add
aas
push
inc
push
fnsave
or
jno
cli
insb
mov
jns
dec
cmp
pop
mov
scas
jo
call
adc
xchg
push
das
dec
inc
int3
jo
imul
enter
cmp
and
dec
and
decb
push
xchg
mov
ret
insb
pop
jmp
xor
loopne
fisubl
sbb
push
add
stos
pop
movsb
jo
xchg
sub
sbb
test
mov
lods
jo,pt
add
sub
ja
jge
pushf
dec
pusha
mov
out
aaa
cmpsl
movsl
cmp
call
inc
fwait
mov
dec
sbb
cmpsl
test
dec
leave
push
lock
andb
xor
sub
xchg
fs
repz
sub
inc
ss
add
xchg
add
fidivrl
dec
xor
mov
loope
jl
push
mov
or
out
pop
ret
mov
scas
andb
mov
insl
fimuls
dec
xchg
les
add
mov
cmpsb
or
cmp
inc
test
push
ror
ljmp
dec
clc
jo
cltd
jge
mov
push
aaa
fistpl
jo
cmp
loopne
enter
lret
lds
scas
fxch
or
and
pop
daa
inc
jo
test
repnz
mov
sub
ja
adc
mov
and
icebp
out
fdivl
jo
enter
dec
je
in
fiaddl
mov
lcall
jle
insl
lds
aaa
orb
pop
push
lret
shll
iret
mov
mov
lahf
jge
std
jno
jmp
xchg
mov
mov
mov
push
lock
add
in
jecxz
sub
add
push
adc
fldenv
pop
jmp
xchg
fwait
jl
push
lock
cmpsb
sub
mov
out
ja
xchg
dec
pop
fwait
pop
repz
inc
out
adc
fimuls
lahf
pop
jo
add
roll
test
jo
xchg
fisubrs
cmp
add
pop
mov
lcall
lret
fidivl
mov
pop
inc
insl
shlb
push
test
mov
aaa
dec
sub
pop
arpl
jp
mov
push
mov
out
fidivs
inc
pop
lods
notl
ss
adc
imulb
push
sbb
add
popl
pop
add
imul
xchg
jo
mov
add
jp
sti
and
les
sbb
mov
adc
and
jo
sbb
sbb
jmp
mov
test
cmp
idivl
mov
jo
pop
dec
add
xchg
jge
stos
jo
ja
lods
cmp
jo
adc
incl
daa
fisttps
sbb
mov
imul
incb
inc
fsubrs
mov
pop
mov
inc
jo
scas
and
mov
cmp
jo
pop
push
test
ljmp
rolb
mov
cmpsb
test
pop
fs
push
les
in
add
sbb
sbb
add
pushf
into
rol
xchg
mov
push
lret
jo
icebp
test
push
pop
add
jo
mov
or
rep
mov
push
sbbl
cmp
mov
add
push
xchg
orl
out
popa
lods
mov
mov
jo
xchg
xchg
es
mov
push
fwait
and
ja
es
stos
enter
dec
pop
pop
jo
add
adc
jo
dec
movb
xchg
test
inc
inc
jp
out
lret
ss
pop
call
cltd
xchg
shlb
jo
xchg
lahf
gs
pop
jae
sbbl
int3
add
lock
jmp
call
enter
xor
outsl
add
les
pop
add
jo
sbb
ljmp
out
push
enter
jmp
jo
push
cmpl
dec
mov
in
jg
mov
dec
xlat
ret
sti
jnp
mov
and
insl
popf
mov
test
idivb
cmp
sub
aad
jo
pop
and
movsl
mov
jo
out
or
stos
mov
js
mov
int
xchg
inc
pop
lock
inc
btc
bnd
or
cmp
cmovp
push
iret
xlat
xor
dec
iret
jo
ret
adc
jnp
mov
cmp
pop
pop
out
ror
lcall
cmp
xor
adc
jo
outsl
adc
mov
push
scas
sub
adc
movsb
leave
jo
xlat
ja
add
test
outsl
mov
lcall
loop
sub
add
pop
cmpsb
mov
scas
mov
and
mov
add
rcrl
mov
cmpb
add
inc
jo
imul
xchg
sar
das
dec
out
xchg
or
fcompl
cmpsb
je
dec
pushf
and
add
iret
ss
sahf
pop
roll
test
mov
jo
and
sbbl
adc
sti
cmp
jno
inc
add
pop
fstps
mov
rcrb
test
inc
mov
jns
pop
mov
push
inc
imul
and
sbb
mov
xorl
fbld
scas
mov
cld
mov
push
adc
neg
cmpsl
dec
jo
imul
in
push
inc
dec
or
jo
movaps
jo
lcall
je
rcr
jno
mov
loope
jle
test
push
insl
jecxz
and
enter
ja
pop
repz
addl
add
scas
jo
cmp
fimuls
sti
add
jno
sub
cmp
mov
mov
daa
repnz
test
int3
dec
adc
jo
lret
cmpsb
xchg
loop
xchg
sbb
adc
insl
leave
xor
or
add
jo
or
and
shll
xchg
inc
inc
jo
ljmp
inc
dec
add
movsl
enter
jo
add
popf
fbld
xor
pop
mov
mov
sahf
jge
mov
fstpl
imul
pushf
fs
fldenv
push
out
call
adc
rcrb
mov
jo
cmp
std
push
xlat
pop
mov
push
xor
movd
clc
nop
mov
imulb
and
lret
add
out
jo
mov
jo
dec
sti
decl
pop
jns
adc
add
sbb
and
ljmp
mov
movsl
ja
cmp
mov
mov
inc
or
mov
jo
fwait
mov
jae
fdivs
sub
gs
loop
jmp
push
out
or
adc
dec
add
sbb
lds
add
jo
ljmp
insl
xor
jg
push
jo
inc
xor
push
in
and
xchg
insb
jo
icebp
jl
pop
xor
cltd
cmp
cmp
lock
gs
mov
stc
lcall
lds
xor
jo
xchg
and
xchg
adc
inc
out
lret
pop
mov
jo
les
ljmp
shl
sub
ffree
in
sbb
enter
xor
xchg
enter
jo
or
fdivrl
lret
push
out
xchg
js
rclb
jo
sbb
fadds
adc
stos
sbb
int3
jo
aas
xlat
cltd
pop
lcall
stos
lret
das
jl
test
adcb
sbb
and
sbb
fidivrs
sbb
arpl
jp
lret
jle
push
and
aam
inc
inc
jb
lahf
sub
add
xor
pusha
and
xor
push
adc
mov
push
cmp
pusha
dec
jo
bnd
xchg
or
mov
jo
inc
adc
cmpsb
pop
jo
inc
and
sbb
lock
mov
out
hlt
pushl
jnp
gs
ja
dec
aaa
push
lock
sbb
push
push
shrl
inc
repz
xchg
xchg
pop
lock
loop
sub
xchg
jno
mov
add
or
jo
lret
test
fistpl
jge
out
iret
jo
loope
inc
stc
mov
jo
sbb
xchg
jo
test
subb
pop
xor
or
js
sbb
add
pop
adc
adc
pop
shl
add
mov
mov
jle
mov
jo
xchg
testb
sbbb
mov
push
inc
outsb
cmp
insl
mov
sti
inc
cs
pop
cmp
add
mov
inc
in
push
cmp
fwait
cmpsl
jo
mov
jae
mov
out
lods
add
adc
mov
xchg
js
outsb
movsb
sahf
jo
das
add
mul
out
jb
cmc
jg
scas
lret
xchg
jmp
xor
or
dec
pop
mov
sbb
daa
sub
mov
sub
mov
shrl
ret
test
mov
sub
scas
mov
addr16
push
daa
adc
std
loop
mov
pop
aad
ja
jo
popa
pop
andl
mov
imul
pop
ja
dec
push
mov
jne
cmpsl
xor
cmpsb
pop
lds
cli
mov
movsb
or
add
xchg
lcall
inc
jo
add
sub
pop
rcrb
les
dec
ret
imul
push
movsl
dec
stos
enter
loop
fs
sub
jl
dec
cld
sub
xor
sub
jo
xchg
add
mov
jle
mov
inc
loope
jo
test
shrb
inc
pop
pop
mov
popf
adc
jo
loop
push
call
inc
outsl
xor
or
sbb
jo
test
fmulp
jo
push
movsl
xchg
rorb
or
fistl
fiaddl
xchg
xor
add
dec
fsubrl
stos
xchg
rolb
and
push
fdivl
repz
mov
mov
xchg
data16
mov
lret
shll
mov
aad
or
jae
loop
mov
jns
push
orb
add
ret
sub
add
mov
dec
or
inc
push
xor
jo
push
pop
add
inc
rorl
jo
and
cmpsb
into
jo
jmp
je
or
lds
lcall
hlt
mov
pushf
jo
sub
pop
imul
jg
xchg
jne
xlat
repz
jp
sub
inc
jle
pushf
jo
cltd
jnp
stc
daa
xchg
test
inc
dec
xchg
cld
lock
and
pushf
insb
fprem1
lock
arpl
data16
call
icebp
ficoms
shll
sbb
scas
add
lods
les
dec
mov
or
adc
bnd
neg
rol
xchg
shll
addr16
subb
dec
dec
and
iret
push
or
jo
cmp
test
es
pop
lods
xchg
push
dec
mov
xor
das
add
sbbb
sub
out
mov
jo
push
cmpsb
ret
inc
xchg
pushf
push
jo
pop
fwait
ljmp
pop
adc
movl
or
insl
les
out
jo
dec
lret
xlat
pop
xor
mov
jo
xchg
dec
sub
or
mov
or
push
ficoms
iret
ljmp
lods
lret
pop
mov
fnsave
in
push
xchg
shlb
adc
cs
std
mov
ss
nop
jp
call
rcpps
sub
pop
dec
add
add
jo
testl
insl
cmp
mov
mov
or
lea
ja
aas
and
fistl
sbb
jl
inc
sahf
mov
dec
ja
movsb
push
out
rclb
test
adc
pop
dec
pop
mov
test
push
outsb
mov
jo
mov
pop
call
and
pop
mov
jo
inc
jb
sub
pop
loopne
mov
jo
inc
adc
jo
push
pushf
mov
in
jo
adc
jo
sbb
adc
fs
mov
mov
int
or
lahf
outsb
mov
aas
test
sub
add
sbb
jo
test
adc
frstor
push
test
iret
out
and
fsubs
dec
jo
adc
ss
xor
jo
inc
imul
mov
outsl
jo
inc
into
andl
dec
push
mov
jae
das
enter
mov
jb
inc
adc
jo
jl
mov
scas
gs
jb
push
mov
push
fadds
push
std
inc
subl
pop
xor
xor
sub
xchg
outsb
popa
add
scas
mov
adc
movsb
sub
pop
jns
ret
dec
add
clc
lahf
cli
daa
lock
stos
push
subl
jecxz
cwtl
cmp
imul
ret
mov
dec
xchg
mov
sbb
dec
sub
stos
arpl
lods
sub
add
cmp
gs
mov
jmp
outsb
lcall
or
test
jo
fcoml
sbb
stc
dec
leave
repz
shlb
mov
push
lds
cmp
pop
push
ffreep
adc
or
loope
jl
das
jo
sqrtsd
fsubl
lret
jo
stc
test
jl
jae
inc
movsl
fsubr
xchg
mov
mov
sti
cmp
lret
pop
aas
xor
or
fisubs
outsb
mov
dec
fwait
mov
mov
sub
lea
fcoms
mov
loop
pop
push
fnstsw
pop
sub
lret
fistl
mov
sub
sub
dec
jo
ja
or
or
and
je
adc
sub
pushf
jo
pusha
inc
ja
leave
dec
call
jo
loop
xchg
pop
push
cmp
or
mov
xchg
xchg
rcrb
xor
mov
loopne
push
nop
shrb
xlat
pop
adc
movsl
lods
add
dec
lock
mov
insb
jp
mov
cmpsb
jecxz
or
mov
aas
push
leave
into
and
decl
sbb
xchg
jo
push
cwtl
mov
inc
pop
pop
jo
les
jae
push
ficoms
nop
or
lods
jo
sub
stc
mov
pop
jmp
pop
aas
sarl
pop
inc
xor
jo
push
cli
fcoml
xor
push
sub
cmpl
jb
cmpsl
mov
sub
mov
lahf
jle
jmp
mov
mov
movsb
insb
ss
mov
scas
sub
rorb
add
rcl
cmp
jo
repz
dec
sub
jl
ja
push
mov
xor
or
jecxz
sub
ja
push
shrb
in
test
cmpsl
test
xlat
mov
andb
bound
sbb
ret
movsb
test
cmp
and
daa
pop
cmp
test
cmpsb
fldt
das
jo
push
pop
sbb
mov
or
cmp
stos
insl
out
sub
adc
jo
jge
xlat
shrl
insl
jo
cli
xor
jle
fdivs
xor
or
mov
lahf
inc
jae
test
das
jge
lock
push
sub
jbe
loope
sahf
jne
cld
sub
add
out
sarb
ret
push
mov
imul
jo
lea
push
frstor
push
and
jo
aad
rorl
sbb
bound
push
ljmp
loop
movsb
adc
dec
stos
or
xlat
out
push
ss
out
nop
popf
sbb
dec
test
jo
aaa
push
leave
fistl
daa
mov
jo
sub
push
les
bnd
xchg
push
or
push
lret
cli
inc
xor
outsb
mov
movsb
push
cmp
enter
adc
ss
insl
add
and
push
push
test
xor
jmp
jo
mov
bswap
jp
or
mov
cmpsl
cmp
shll
loope
clc
mov
xor
sbbl
xor
bnd
dec
jo
adc
pop
insb
jae
loop
xor
nop
int
push
sbb
add
das
or
lret
jo
mov
test
mov
pop
shll
loop
bnd
insb
jo
mov
ds
pop
jbe
pop
cmp
inc
adcb
das
xor
adc
rcr
adcl
jo
ficomps
test
fcompl
jo
imul
pushf
movsl
je
and
mov
mov
xor
xchg
gs
jle
add
add
jp
in
add
push
arpl
enter
jp
incl
lods
mulb
fwait
dec
fisttpll
arpl
pop
push
mov
dec
or
int3
jo
cmp
sbb
mov
lahf
jge
jo
adc
adc
cmp
lds
or
push
sbb
scas
sub
adc
out
fcmovnu
adc
rcrb
insb
daa
outsb
xor
cld
gs
icebp
jmp
pop
xchg
lock
in
leave
into
sahf
adc
jno
ret
sub
popa
test
cmp
rclb
adc
nop
insl
lods
jecxz
ljmp
lret
push
in
xchg
ja
test
add
rcr
dec
cmp
xor
xchg
inc
pop
fnstcw
ficoml
mov
jo
std
call
jge
sahf
jg
int3
lock
shrb
xlat
jmp
pop
jae
xchg
adc
imul
xchg
aas
jmp
sub
mov
lock
fdivrs
outsb
adcb
lret
xor
les
jo
inc
sbb
sti
mov
iret
insl
in
xchg
stos
xor
stc
mov
loope
fwait
iret
insl
sbb
jl
aas
sub
stos
repnz
enter
jo
pop
xchg
rorl
and
adc
nop
in
clc
push
jo
fnstsw
and
stos
insb
mov
and
outsl
lea
lcall
mov
mov
je
push
mov
xchg
enter
bound
dec
dec
addb
mov
loope
pop
lret
daa
mov
sbb
jl
shl
xchg
adc
adc
inc
inc
daa
adc
out
or
mov
sub
sbb
pop
scas
ds
jo
cltd
insb
mov
jno
sahf
insl
lret
mov
lahf
lds
out
mov
push
jae
movsl
sti
dec
cmpl
sub
jb
stos
subl
iret
jo
js
sbb
test
aaa
jb
aas
insl
jmp
fyl2xp1
push
test
or
jo
or
ljmp
std
out
fs
inc
insb
add
lock
cmp
jo
and
adc
leave
movsl
mov
fwait
jge
imul
xor
mov
sub
mov
pusha
stos
aad
jo
xchg
jg
xchg
mov
mov
inc
decl
hlt
mov
lock
cmp
or
test
orb
jo
ret
shrb
int
xchg
adc
mov
jl
aad
inc
add
sub
mov
push
pusha
jle
mov
jo
push
push
sbb
dec
jo
pop
jb
jmp
or
xor
jo
xchg
inc
rorl
dec
jp
jo
pop
repnz
call
sub
cmpsb
add
ja
mov
mov
shll
shll
or
imul
push
lds
mov
inc
enter
push
mov
push
sbb
xchg
and
ja
cmpsb
xchg
cs
mov
mov
jmp
adc
cmp
cmp
lds
shrl
cmp
nop
adc
lcall
aas
xorl
stos
push
jle
jo
dec
pop
pop
or
fucomi
outsb
loope
frstor
mov
aam
rorl
movlps
ljmp
jo
push
mov
imul
aad
sti
shll
mov
cwtl
xor
jle
fnstenv
cmp
ja
test
push
pop
mov
shll
xchg
and
negl
pop
in
lcall
or
push
jo
rol
mov
mov
lret
cmp
loope
js
mov
repnz
add
shrb
sahf
xchg
jo
inc
movsb
mov
insl
add
xchg
mov
hlt
sti
xchg
or
jo
ss
cmp
orb
int
ds
sahf
aam
sbb
mov
addr16
inc
pushf
enter
sub
mov
repz
mov
or
xchg
mov
jo
jl
cmp
mov
stc
xchg
adc
movsb
std
scas
rorl
jno
mov
dec
add
or
mov
jp
mov
aam
test
mov
mov
fs
dec
fidivrs
xor
divl
pop
and
or
inc
xchg
test
dec
nop
or
and
jo
test
repz
xor
xchg
rcrb
cmp
jo
insb
jecxz
mov
iret
int
push
pop
fistl
std
cltd
pop
inc
cmp
cs
jo
stc
cs
inc
sbb
bound
fs
xor
dec
daa
pop
lock
jo
or
pop
outsl
outsb
stc
ja
fidivl
mov
sahf
test
jecxz
jo
enter
in
adc
and
jb
ds
and
or
cmpsl
in
push
mov
jp
push
xchg
shlb
push
inc
loope
mov
or
lahf
jo
into
cld
popf
test
jo
mov
scas
fwait
dec
mov
xchg
push
fsubrs
add
lcall
or
xor
test
pop
lret
out
jo
in
imul
xchg
and
adcl
jo
cmp
mov
add
loope
jo
push
cmp
jbe
mov
inc
scas
dec
lods
inc
dec
pop
lock
push
sbb
xor
mov
inc
fnstenv
insl
pop
xchg
add
jo
sbb
shrl
bnd
and
lods
mov
jo
push
fldenv
cmp
fcoms
xchg
fldt
xchg
jp
sbb
mov
cmp
add
jle
insb
sbb
nop
inc
dec
inc
mov
and
addr16
sub
repz
adc
ret
adc
lods
loop
or
fstpt
cmp
sahf
dec
insl
sbb
mov
sub
decl
dec
mov
mov
pop
ds
std
stos
jo
sbb
jmp
inc
aad
dec
out
sbb
cmpsl
inc
dec
popl
push
cmpsb
cltd
ret
out
imul
daa
add
std
mov
jo
inc
jg
cmpsl
xchg
cmpb
loopne
jo
cwtl
xchg
and
es
mov
mov
inc
pop
scas
loope
das
mov
out
scas
push
push
mov
jb
ret
mov
jo
fwait
sbb
add
rcr
or
loope
xchg
rolb
inc
xchg
cmp
or
and
lds
jo
aas
xlat
stc
inc
popf
adcb
lret
lock
imul
xorl
daa
xor
xor
mov
xlat
jo
fidivrl
in
sub
xor
test
aam
cmpsb
loopne
dec
enter
inc
xchg
mov
pop
sub
jne
mov
or
incl
xchg
xchg
sbb
test
xor
shll
and
xor
inc
mov
pop
sbb
insl
xor
mov
orb
mov
mov
gs
and
cltd
jae
add
nop
fistpll
outsb
notl
xlat
mov
outsl
jo
adc
jo
cmpxchg
xchg
mov
daa
xor
cmpsl
jo
jb
sbb
scas
dec
jmp
mov
dec
sub
pushf
fldenv
mov
mov
mov
notl
jo
loope
mov
pop
push
les
call
lods
fsub
jo
fbstp
std
arpl
or
pop
stos
add
jae
inc
das
lea
or
adc
inc
mov
fstps
ja
pop
pop
test
ja
lahf
in
sub
xchg
or
jo
stos
in
mov
cld
dec
push
fnstsw
cmp
jo
leave
pop
loop
cmp
lods
jo
pop
and
jmp
sahf
fidivl
popl
push
adc
ljmp
negl
psubw
in
std
rcll
jmp
jecxz
or
cltd
rcll
leave
jb
jo
sbb
mov
jae
adc
push
je
stos
es
dec
xor
and
xchg
xchg
or
xchg
sahf
lock
sbb
jmp
jo
mov
adc
cld
sub
hlt
jo
imul
loope
mov
int
mov
jo
call
imul
jns
bound
jo
add
inc
jo
outsb
mov
jo
or
stos
xor
mov
inc
sub
jo
add
mov
sub
nop
jle
jmp
cmpsl
xchg
add
loope
inc
jo
cmp
push
ss
sbb
pop
ja
or
dec
adc
inc
stos
daa
push
xchg
jo
test
add
outsl
inc
inc
lret
ljmp
jo
jno
pop
out
jmp
das
jne
lret
lock
in
xlat
push
adc
insl
xchg
mov
es
jo
cmp
and
sbbb
aam
std
cmp
fstp
in
popf
lea
sbb
insb
inc
pop
pop
push
or
jo
mov
adc
adc
nop
cmpsl
add
jo
dec
pusha
sarl
inc
add
neg
ret
scas
shl
movsb
jp
imul
aam
imul
fcomi
lock
pop
xor
sub
lret
bnd
mov
cltd
push
pop
sti
fisttpl
arpl
addb
xor
mov
jo
adc
lret
es
pop
xchg
aaa
scas
xchg
mov
pop
xor
pop
int3
adc
and
loop
xor
nop
mov
mov
jbe
xchg
jl
xchg
pop
mov
loopne
repnz
inc
in
pop
push
xor
aam
pop
imul
stos
ja
push
adc
sbbl
stos
fidivs
sarb
xchg
jo
mov
das
sarb
mov
xlat
xchg
push
subb
addb
in
test
loope
test
jo
shlb
and
testb
aad
ljmp
lods
loop
adc
dec
inc
adc
add
jns
cmp
mov
mov
or
xchg
lods
or
das
mov
cmpsb
addr16
or
test
jo
or
sbb
ret
inc
jnp
mul
xchg
in
pusha
cli
lret
xchg
jo
ja
das
out
iret
inc
jo
fnstcw
sahf
jo
mov
ret
mov
cld
lea
fs
jo
das
cmpl
push
push
dec
dec
xlat
je
fstpt
inc
bound
pop
sub
cltd
divl
pop
insb
mov
xor
and
mov
xchg
popa
push
lock
sub
jo
ljmp
jo
jge
inc
mov
jmp
jmp
mov
movb
mov
xor
jo
test
mov
inc
test
fwait
push
int3
shrb
inc
fisubrl
add
lds
inc
pop
outsl
jo
notb
rolb
or
or
mov
xor
and
jo
fdivs
fdiv
adc
xor
add
dec
jb
cltd
jo
fiaddl
xlat
pop
inc
dec
test
xchg
push
mov
fldenv
dec
sub
and
jo
and
cmpsb
pop
aam
add
push
cmp
add
jnp
jo
iret
jge
rorb
push
mov
mov
int
adc
jl
pop
mov
pop
pop
fmuls
xchg
jge
cmpb
sahf
push
sbb
int
adc
jo
std
or
aam
jns
jo
mov
adc
mov
pop
adc
stos
xchg
orb
add
push
inc
push
jo
or
lret
pop
aas
insl
xor
adc
or
lock
stos
xlat
sbb
jo
mov
inc
jle
das
js
test
mov
push
into
jl
add
jbe
sub
movups
filds
repnz
test
sub
ds
sbb
pop
aam
mov
lret
das
or
fbstp
test
lahf
inc
push
dec
adc
das
or
sbb
cwtl
mov
loop
pop
or
or
fsub
inc
jo
cmp
jge
mov
cmp
xchg
movsl
test
mov
cld
adc
dec
out
lcall
out
pop
jo
sub
lahf
inc
cmp
fs
sti
jae
mov
test
fs
push
pop
mov
or
inc
rcll
cmpsl
mull
or
mov
mov
mov
jo
add
push
into
movsb
jns
ja
test
or
les
jae
jo
arpl
pop
dec
adc
jo
xchg
sub
cld
int3
mov
jo
or
jae
or
inc
xchg
test
shlb
stos
call
lods
mov
jg
mov
aad
push
jle
mov
jo,pt
pop
sbb
jo
mov
cmpsl
pop
jne
cmp
inc
jo
adc
jg
imul
mov
sarb
aad
pop
loope
in
jo
test
das
adc
divb
add
rcrl
test
dec
xor
inc
fwait
test
es
jle
fistps
sub
lret
cmpl
xchg
ja
lcall
and
jo
fwait
ja
jb
aam
jo
or
and
mov
jo
stos
les
test
jo
push
fildl
sbb
pop
push
jo
cltd
mov
fwait
jp
das
cmp
lock
jo
ss
ja
sahf
jne
jo
cmp
push
jo
pushf
lret
cmpsl
repnz
fwait
xor
jmp
pop
mov
pop
pop
orl
and
out
jo
daa
imul
nop
lock
cmp
jno
insl
sbb
adc
adc
cmp
pop
jo
scas
xor
inc
lcall
mov
dec
loope
lock
in
lret
mov
pushf
lret
insb
adc
mov
data16
iret
cmpsb
call
sbb
push
jo
adc
ret
jo
mov
adc
fcmovne
movsl
rep
in
inc
jle
imul
jmp
xlat
adc
jnp
loop
sub
lret
jle
out
dec
fidivrs
mov
ret
dec
jo
xchg
push
aad
lods
daa
call
jae
mov
in
shlb
add
and
jo
mov
repz
std
adc
jo
xchg
sbb
shrl
mov
pop
jo
and
inc
inc
jp
mov
notb
inc
movsl
or
push
out
js
dec
adcl
sbb
cmp
sub
adc
add
lock
cltd
dec
adc
les
cld
insb
rorb
jno
adc
insl
or
lods
push
cmc
ljmp
cmpl
xchg
xor
mov
jo
pop
add
out
rolb
jbe
cmp
aad
shlb
pshufw
dec
inc
or
adc
and
stc
icebp
xchg
pushf
inc
lods
mov
jecxz
cmpsl
ja
dec
jo
add
jmp
jo
out
sar
mov
mov
jo
cmp
rcl
pop
and
pop
das
dec
in
ljmp
test
pushf
jmp
loop
mov
dec
and
jno
dec
cmpsb
xor
jo
fisttpl
jo
negl
dec
sub
out
cmp
jo
stos
loope
decl
ss
popl
xor
inc
fimuls
mov
and
fldt
ja
shl
xchg
cltd
cmp
ss
dec
cmp
fldcw
loop
jo
add
jno
pop
pop
cltd
jmp
jno
fldl
cmp
imul
cmc
fsts
leave
aaa
subb
mov
imul
lods
adc
es
adc
in
xchg
int
xchg
jo
cmp
mov
out
aas
ret
ret
test
scas
lds
ljmp
sbb
ret
lcall
xchg
js
daa
mov
jl
sbb
lods
out
and
ja
xchg
loop
push
xchg
loope
xorb
jnp
mov
sbb
in
jo
pop
adc
inc
shlb
inc
push
mov
pop
cmp
jo
cltd
xchg
add
outsb
push
ret
sub
mov
dec
enter
out
or
mov
jnp
add
jo
ljmp
pop
push
das
mov
int
jecxz
cltd
fadds
sub
dec
mov
push
jo
sti
aam
lds
mov
flds
pop
cwtl
push
inc
jno
test
es
and
jne
adcb
cmpsl
repz
movsl
add
jo
imul
inc
fstpl
lods
adcb
popa
shll
and
jmp
dec
jo
popf
outsb
add
test
or
push
daa
jo
and
ret
inc
subb
adc
jo
imul
lea
add
jmp
lcall
shl
outsb
cli
cltd
pop
les
jle
jmp
movsl
adc
push
leave
ret
pop
jo
out
int
mov
jg
enter
sub
mov
mov
adc
rol
jo
scas
pop
cmc
and
fidivl
repnz
incb
push
xorl
fldcw
shlb
movsl
cmc
shll
mov
jo
inc
les
neg
pop
jp
cmp
mov
inc
leave
mov
xchg
inc
lea
out
add
gs
es
mov
leave
push
or
loop
or
jg
movb
push
int3
and
jo
push
xchg
lods
fimuls
and
test
mov
xor
lods
jo
mov
push
inc
stos
int
jo
ss
mov
popf
jo
pop
filds
push
jne
jnp
inc
sbb
jo
fsubs
lsl
jo
je
mov
sahf
sbb
inc
xchg
lea
int
cltd
xor
mov
pop
inc
fwait
jo
dec
aas
sub
add
mov
xlat
fadd
rcrl
sub
aam
lds
pop
cmpsl
mov
mov
and
jo
sbb
stos
add
lret
fidivl
rolb
das
out
fnsave
xchg
cmp
inc
mov
jae
cmpsb
scas
ror
or
jb
push
mov
loop
rolb
jo
das
cmp
mov
and
sub
es
cmpsb
clc
jo
movsl
mov
sbb
gs
outsl
fwait
push
push
out
dec
movsb
or
loope
sub
mov
popa
lods
lock
or
test
sub
lret
push
sti
or
rcll
insl
loope
lcall
jo
outsl
lret
sar
and
adc
test
mov
aad
add
insl
int
jns
mov
fsts
mov
ss
icebp
jo
adc
in
jo
push
cmp
jg
cmpb
jo
out
es
jns
jo
shl
cmp
bound
jecxz
ret
mov
jae
fildll
cmp
and
xchg
repnz
dec
cmc
or
jp
mov
ja
lods
push
jo
mov
add
jo
cltd
push
or
shrl
jno
push
xchg
out
repnz
pop
xlat
orb
sbb
mov
sbb
bound
mov
push
stos
cmp
fwait
mov
ds
imul
pop
dec
out
add
mov
shll
out
xlat
cltd
push
xor
bound
dec
sahf
fmul
add
xor
mov
dec
jo
lret
fcmovnu
dec
jmp
rolb
push
inc
jmp
dec
dec
stos
mov
stos
mov
gs
mov
roll
lahf
pushf
frstor
das
xchg
jae
cmpsl
bound
je
rol
xchg
jo
aad
mov
popl
pop
shll
insb
into
mov
cli
cmp
popf
fbstp
dec
sbb
mov
gs
movsb
lcall
cmp
imul
lods
dec
mov
dec
call
inc
mov
es
and
jo
mov
pop
sub
shr
lret
daa
aas
insl
repz
sub
mov
jae
shrb
lret
fmull
cmpsl
je
addb
xchg
sahf
jae
xor
xlat
jo
and
jo
mov
in
xchg
and
mov
jo
stos
loope
or
add
cmp
mov
cmp
xor
cmpsl
movsl
push
add
lahf
and
cltd
dec
ja
lock
xchg
imul
scas
push
lea
or
push
cmpb
or
scas
push
xlat
loope
jp
push
fwait
div
stos
nop
mov
sbb
fnstsw
cmp
pop
jmp
loope
or
push
mov
mov
icebp
mov
jbe
leave
roll
loop
mov
mov
dec
imul
push
mov
notl
dec
xorl
imul
lock
mov
into
xorb
int3
cmp
sub
mov
jmp
mov
sbb
sbb
daa
jle
loope
jno
pop
push
sub
lcall
out
and
cmpsb
jo
mov
jae
inc
sbbl
mov
test
dec
jg
test
movsl
sub
push
cmpsb
mov
adc
push
cwtl
or
pop
lock
subb
loop
jo
outsl
jle
sbb
adc
push
lods
ja
sbb
subb
push
or
xchg
jae
mov
pop
jo
ret
sub
adc
jo
xor
int3
and
repz
das
or
pop
nop
rorl
mov
jmp
test
or
test
jl
dec
or
adc
xchg
dec
xchg
adc
jl
imul
cmpsb
xchg
fiaddl
jo
cmc
mov
es
adc
lret
jo
mov
imul
push
inc
adc
jp
adc
mov
clc
ja
jo
mov
push
xchg
jo
adc
loope
xchg
push
adc
fwait
jecxz
pushf
in
loopne
jo
out
aad
mov
or
adc
call
jo
fwait
inc
pop
je
and
gs
and
ficompl
enter
mov
mov
pop
xchg
jnp
jle,pt
jo
ret
inc
dec
xchg
lahf
mov
into
sub
sbb
lock
inc
ret
pop
jnp
nop
jo
jmp
or
xor
jns
fwait
mov
scas
std
iret
cmpsb
pushl
push
add
sub
sbb
pop
test
or
push
mov
out
sub
jo
cmc
rolb
adc
jge
xchg
jo
pop
incb
aam
mov
push
fadds
fwait
inc
imul
hlt
jo
mov
in
push
jo
negb
inc
adc
jg
add
inc
mov
dec
and
fwait
jo
or
and
roll
scas
jo
push
push
pop
adc
adc
outsl
ficompl
in
es
repnz
mov
jo
xlat
jno
pop
fstpl
jo
jge
add
movsb
mov
aas
add
aam
cwtl
adc
ret
jo
sub
orb
in
jo
xor
jo
jge
jp
mov
arpl
xorb
xor
adc
sub
xchg
and
iret
les
cmp
jp
inc
inc
lret
jo
pop
push
mov
jae
dec
lock
movsl
inc
jo
test
lret
add
ret
and
and
jg
repz
push
in
pop
lcall
pop
movb
push
cmpsb
fistps
adc
je
jo
or
fmul
popf
cmp
mov
push
sahf
jo
push
out
push
cltd
cmp
add
adc
inc
jmp
test
jmp
les
int3
pop
mov
insb
iret
xchg
ja
mov
jle
mov
jno
adc
repnz
jo
dec
sti
push
ret
enter
pop
cltd
lock
jo
fcompl
xchg
arpl
inc
stc
jo
les
sbb
mov
and
ficomps
jo
ret
daa
lret
mov
inc
shll
dec
insl
sub
outsl
rcrb
mov
test
lret
in
cmp
jp
jo
mov
jmp
lcall
adc
sbbl
ja
ja
cmp
dec
insl
sub
add
add
jo
popf
jno
push
cmp
adc
mov
push
jns
stos
jmp
inc
in
or
add
shlb
cmpsb
xor
ljmp
inc
dec
roll
mov
pop
cmpsb
stos
add
insl
pop
jecxz
mov
mov
out
xlat
mov
rcll
jnp
sbb
jo
outsl
jg
xchg
adc
jl
out
mov
iret
out
jle
pushf
shl
insl
cmc
adc
loope
je
xchg
in
mov
adc
ja
mov
cs
ljmp
enter
push
mov
rcl
iret
dec
mov
jo
sub
add
gs
sub
dec
inc
jno
mov
and
arpl
xlat
jo
icebp
rolb
movsl
mov
sbb
mov
sub
outsb
or
inc
dec
scas
add
mov
sbb
in
pushf
mov
int
sar
das
mov
popf
pop
aas
call
movsl
jo
imul
sarl
std
adc
or
cmp
rorb
jo
out
mov
ja
xchg
sub
in
mov
xchg
mov
movsl
lret
sub
jnp
pushf
fsubr
jl
aad
movsl
gs
mov
in
data16
add
mov
inc
sub
lods
pop
jmp
mov
lcall
in
pushf
mov
xor
pop
out
or
insl
lods
aaa
test
mov
outsb
sub
stos
rcl
out
lock
xor
arpl
pop
xchg
pop
mov
xor
cld
jg
cmp
and
cltd
lahf
out
jl
jo
out
subl
sahf
or
xor
stos
jo
aad
mov
or
pop
push
xchg
xor
scas
mov
outsb
int3
adc
jo
and
ret
data16
xchg
loop
test
int
cmpsb
dec
ret
iret
lea
jno
xchg
testl
jo
pop
mov
idivb
cltd
adc
fmuls
add
lret
ja
lea
test
loop
jmp
sti
sbb
lahf
mov
cld
or
add
test
jmp
jno
fadd
xlat
xchg
sbb
sub
ret
add
daa
mov
movsl
pop
add
jp
fcoms
int
jno
inc
insb
fs
lock
sub
dec
dec
jo
push
fcoms
lcall
rorb
shll
fbstp
xor
xchg
sub
adc
cli
mov
mov
add
cmpsl
stos
xorl
mov
jle
jo
lcall
pop
call
inc
jno
int
push
inc
jmp
push
push
mov
fdivrl
imul
dec
jo
ret
cmp
scas
lret
jo
push
add
jp
mov
jo
movsb
inc
addb
jae
ljmp
lcall
jmp
pop
cli
mov
aas
jmp
cmpsb
and
adc
jp
fst
fwait
xlat
and
daa
lret
jo
mov
loop
add
pop
inc
mov
push
int3
sti
popf
stos
ret
jo
int
popa
jno
hlt
xchg
inc
xor
gs
pushl
mov
pop
inc
jp
adcl
insb
hlt
cmp
movsl
lcall
adc
and
mov
mov
pop
and
jae
inc
inc
jmp
push
cmp
mov
in
cmpl
loop
fndisi(8087
jo
xchg
scas
daa
jg
or
push
dec
js
mov
mov
addr16
repnz
repz
jo
rcrl
mov
loop
orl
jae
ljmp
lods
imul
aas
xor
mov
lods
or
cmp
mov
into
lock
add
xor
sub
mov
push
pushf
mov
lret
mov
lock
cmc
inc
and
add
pushf
call
inc
loopne
jo
add
jb
or
cmp
and
cld
adc
jo
xor
push
xor
xor
sbb
mov
sahf
adc
inc
rcl
out
iret
pop
in
mov
mov
cwtl
leave
mov
das
pushf
sub
jne
cmp
inc
lock
in
pop
jmp
sbb
inc
test
cmp
loope
int3
les
xor
mov
inc
out
ja
or
cld
les
mov
stc
mov
daa
pop
iret
xor
cltd
pusha
cmp
jno
jns
out
lock
xchg
add
pop
sbb
pushf
aaa
jo
xchg
fisttpl
or
jo
push
addr16
fsts
push
jo
cmpsl
inc
sub
jo
sub
sub
sahf
jo
dec
lret
or
add
testb
lods
sub
mov
mov
jmp
das
pop
fstpl
mov
aam
lock
arpl
xchg
inc
arpl
lcall
cmp
pop
xchg
add
shlb
and
nop
pop
jge
shlb
xor
das
xor
jae
sub
icebp
cmp
rcl
sbb
insl
ja
push
mov
lods
ret
mov
xor
ljmp
pop
iret
inc
dec
sahf
icebp
loope
jo
rcl
cltd
jecxz
adc
xchg
incb
pop
jo
int
push
and
jo
sbb
mov
and
mov
daa
sbb
lea
jg
dec
fiaddl
jl
cmpsb
jle
sub
add
jo
frstor
out
pop
mov
in
sub
out
je
add
mov
jne
daa
jae
imul
push
jo
jl
fdivs
sbb
movsb
jo
in
dec
xor
pop
cli
les
xor
in
pop
add
dec
mov
cmp
cmp
push
jb
and
lcall
jge
lock
adc
or
mov
insl
inc
inc
push
or
out
addr16
dec
es
ja
pushl
xchg
jo
mov
aaa
mov
mov
lea
xorb
fwait
loope
mov
mov
jno
pop
lret
stc
testl
push
test
push
mov
mov
or
popa
xchg
andnps
jmp
dec
lods
xorl
or
lds
outsb
imul
in
add
fildl
fcompl
dec
dec
sbb
insl
mov
mov
stos
xchg
loop
in
fisubl
mov
dec
jo
fimuls
ja
cmpsb
xchg
in
orb
lods
fisubs
lock
rcl
jo
adc
and
jo
xchg
stos
push
rcrl
or
mov
arpl
mov
xchg
lret
and
xchg
push
icebp
xchg
add
pop
rcl
mov
jmp
jo
add
push
mov
push
fwait
lcall
mov
outsl
ror
inc
jo
lret
or
mov
fnstenv
mov
jb
in
stos
jo
pop
mov
fwait
je
cld
jg
int3
jbe
insb
mov
leave
andb
jnp
sbb
pop
out
fidivs
repnz
push
mov
cli
jo
in
xchg
incb
pop
pop
mov
lods
jge
nop
pop
add
sbb
inc
and
add
je
sbb
cld
cltd
jge
jns
ds
lret
jo
cmpsl
scas
push
mov
clc
stc
aas
ljmp
pop
sbb
add
cwtl
clc
out
lds
loopne
push
or
xchg
std
lret
shll
and
stos
jo
pop
jl
in
ja
inc
jo
imul
rcl
push
mov
xor
mov
insb
push
mov
leave
scas
sbb
adc
mov
data16
jecxz
mov
jo
mov
cmpsl
push
pop
jmp
shlb
out
out
sbb
pop
fucom
stos
or
lahf
mov
scas
or
pop
sbb
ret
sti
rorb
mov
mov
pop
cmovae
push
faddp
jnp
mov
add
push
std
rol
add
iret
jle
mov
test
test
stos
mov
mov
sbb
pop
add
xchg
jo
imul
mov
add
xchg
cwtl
jo
jns
or
shr
dec
dec
mov
pop
fsubrs
add
mov
in
or
call
jo
ficompl
fdivrs
das
std
push
jo
mov
data16
jo
push
scas
ret
mov
mov
cs
push
push
nop
into
insb
leave
insl
xchg
lea
inc
push
outsl
xchg
add
repz
enter
shrb
insl
pop
cmc
scas
mov
stos
fwait
insb
pop
jo
mov
lods
mul
jo
adc
cmpsl
sbb
sti
xlat
push
mov
jae
out
lock
pushf
dec
movl
scas
xor
stos
jo
mov
push
cmpsb
jo
sub
jmp
gs
in
movsb
adcb
or
ret
mov
mov
ds
xor
or
fldl
jo
jmp
or
jo
mov
jo
mov
jg
jo
cs
dec
movsl
in
xorb
lret
pop
aad
mov
push
inc
test
lds
out
in
jg
ljmp
cmc
or
jo
imul
mov
mov
mov
fistpll
addr16
adc
scas
lret
loop
fnstcw
jo
mov
fldt
xchg
stos
fwait
dec
sbb
xor
lret
mov
cs
dec
jns
shl
mov
bound
mov
jo
dec
arpl
or
lods
das
xchg
mov
out
adc
pop
filds
xchg
or
in
jo,pt
cmp
xchg
jo
xor
stos
inc
push
add
jo
mov
ss
xor
add
ja
sbb
aaa
ja
pop
dec
subl
xchg
or
nop
out
push
insl
and
pop
arpl
dec
fsubs
inc
pusha
cmc
dec
xor
mov
xchg
enter
push
jnp
xchg
jae
dec
mov
out
out
or
cmpsl
xchg
mov
sub
mov
cltd
fsubl
xor
jo
andb
in
push
test
push
xchg
insb
push
pop
pop
mov
sub
out
std
jecxz
aas
add
lcall
xchg
push
xchg
cltd
xchg
dec
mov
jae
adc
dec
jo
hlt
mov
jne
out
jb
jns
xchg
enter
testl
lcall
ret
mov
sbbb
inc
and
mov
in
mov
cmp
loop
cmp
icebp
lock
adc
push
fdivr
aad
xchg
fadd
iret
incl
jo
ja
ss
or
push
sbb
fistpll
inc
inc
or
adc
mov
add
adc
sub
pop
jmp
repz
cmpsb
dec
lock
jo
xor
lahf
clc
xchg
cwtl
or
shlb
push
ret
in
xchg
cmp
es
ret
jle
icebp
leave
pop
push
gs
sub
lock
sarl
mov
insl
sbb
cmp
adc
dec
mov
jo
pop
or
adc
stos
xchg
mov
add
push
xchg
rol
jo
inc
push
das
xor
push
adc
aaa
fildll
or
daa
sbb
pop
mov
jo
inc
lods
adc
mov
push
dec
out
mov
gs
xchg
inc
sahf
or
mov
and
mov
add
xlat
stc
push
ss
mov
jo
mov
push
test
mov
jo
nop
scas
fsubl
orb
adc
mov
mov
loopne
shlb
cmp
lret
xchg
add
adc
mov
xchg
mov
rorl
mov
cmp
inc
jo
xchg
sbb
mov
daa
shll
or
lods
jbe
stos
stc
cli
dec
rol
push
jne
mov
or
sub
mov
sarb
adc
std
cltd
jo
aad
xchg
daa
jo
pop
nop
mov
cmp
sbb
sub
or
mov
fcom
jo
lcall
jp
sbb
shlb
js
adc
mov
mov
xor
cmp
jb
adc
adc
push
adc
pop
iret
sub
xchg
fcmovbe
jo
push
outsl
stc
jae
lcall
mov
insl
xlat
sahf
ljmp
stos
dec
imul
cmpsb
pop
xchg
fisubs
sbbb
mov
jne
filds
lcall
ljmp
add
pusha
sub
jo
lret
or
xchg
inc
jo
or
data16
insl
daa
and
pushf
adc
add
fstpt
nop
xchg
mov
les
aam
jecxz
div
add
jge
test
mov
lcall
xchg
push
fldcw
enter
es
xchg
lahf
ja
jo
loope
fwait
adc
jp
jo
mov
loopne
das
cmp
jo
xor
scas
mov
popf
add
add
test
lock
sub
ds
xor
mov
or
or
adc
ret
push
pusha
or
jns
dec
rolb
push
out
xchg
add
jne
loopne
fbstp
xchg
pop
ds
mov
adc
cld
or
mov
repz
or
sub
add
lock
jo
lret
add
fcmovnbe
jae
xchg
pop
outsb
inc
mov
test
shrl
imul
lret
mov
je
outsb
test
mov
out
inc
jo
stos
xchg
jmp
int
inc
pop
fcoml
ja
inc
mov
shlb
jne
xchg
push
ja
aam
and
pop
mov
movsb
jo
in
xchg
out
inc
adc
cli
outsl
add
leave
jp
std
and
or
scas
pop
ja
xchg
sbb
mov
xor
push
jo
ss
push
movsb
and
std
std
out
push
outsl
add
ficoms
insb
in
mov
int
inc
sub
scas
jo
jge
adc
mov
jo
popf
inc
rcll
pushf
mov
nop
adc
hlt
and
setne
fidivl
shl
add
sub
andb
and
or
cmpsl
insl
cmpsb
sarb
das
mov
insl
pop
lock
orb
mov
daa
jns
and
mov
and
mov
lret
pshufw
sub
xchg
jo
mov
jg
jo
sbb
ret
adc
dec
dec
lods
imul
ljmpw
andl
jae
jae
out
aad
fisubrs
adcb
insl
mov
js
ds
adc
test
out
cmp
push
xor
inc
add
or
add
mov
iret
loopne
push
enter
imul
dec
std
push
lods
or
jo
mov
dec
cmp
xchg
insl
or
xchg
mov
pop
xor
jg
popf
dec
les
pop
xchg
ja
pop
lcall
mov
jo
xor
inc
push
shrl
stos
lret
pushf
push
cmp
enter
jo
dec
jmp
cmpb
subb
jo
adc
icebp
fisttps
xor
pop
jno
mov
jp
insb
mov
aad
push
jmp
xchg
mov
lret
int3
daa
xor
es
outsl
cmpsl
and
sbb
shrb
in
mov
cmp
add
xchg
aaa
cmp
lret
icebp
xchg
jo
add
inc
mov
add
xlat
pop
xor
pop
lods
test
stc
mov
push
lret
push
jns
jge
mov
pop
in
fcompl
xchg
push
jmp
push
insl
in
out
sub
or
xor
jno
clc
dec
lret
push
loope
dec
jle
out
xchg
lds
outsl
wrmsr
addr16
mov
stos
out
xrelease
sbb
in
mov
pop
pop
lret
pop
lahf
and
cmp
divl
mov
jno
bound
stos
sub
mov
insl
leave
jle
sbb
subb
cmpsl
sub
clc
cmp
movsb
inc
mov
pushf
scas
jo
jecxz
andb
test
rclb
out
push
fstl
mov
das
jbe
xchg
shll
lock
or
leave
xorb
sub
jg
in
and
mov
lock
nop
jp
dec
lcall
lcall
xchg
inc
and
bound
mull
mov
pop
lret
fadds
push
jl
out
xchg
pop
adc
xchg
jl
pusha
fimull
push
in
jae
xor
ja
pop
bound
nop
xchg
jb
pxor
fs
add
push
cmpsb
and
das
enter
rorl
push
xor
sub
std
jns
mov
or
inc
mov
jp
jbe
pop
pop
aad
mov
rorl
jno
aas
jo
mov
out
dec
jbe
mov
jb
out
jbe
lock
pop
mov
icebp
lock
sbb
mov
shrl
mov
dec
push
insl
aam
mov
rorb
nop
inc
mov
or
or
loop
sbb
fs
and
dec
ja
or
fs
adcb
in
xor
inc
lock
aas
fldenv
bound
xor
mov
ja
outsl
jbe
getsec
insl
adc
inc
dec
cmp
xor
or
in
xor
aad
or
cmpsl
in
out
pop
imul
jno
in
push
dec
bound
dec
out
add
pop
jmp
push
cltd
pop
jbe
ret
ds
popa
mov
jo
popa
jecxz
addr16
jg,pt
stos
fwait
adc
add
lcall
ljmp
sub
pop
out
jo
popa
repz
outsl
pop
movl
add
data16
iret
lods
mov
mov
nop
xchg
fs
sub
cli
gs
jl
sbbb
aaa
jmp
je
jae
ljmp
pop
cld
mov
adc
js
jp
pop
push
inc
clc
fs
ja
hlt
push
dec
push
mov
cli
dec
outsb
loopne
lods
lret
cmp
inc
les
push
inc
shll
loope
mov
xlat
imul
push
mov
fisttps
int
imul
and
jbe
dec
pop
and
dec
mov
sbb
pop
outsl
fisttps
and
insb
dec
mov
inc
pop
add
cld
push
or
mov
push
sbb
push
mov
pop
push
jecxz
mov
lods
shll
je
xchg
xchg
adc
out
scas
mov
in
or
sbb
mov
push
and
xor
push
push
data16
aad
mov
repnz
push
rolb
xor
cmc
mov
enter
cmp
inc
pop
cs
mov
mov
push
mov
ljmp
cmp
test
ja
add
enter
xor
iret
loopne
in
jb
mov
into
pop
xor
mov
out
add
dec
mov
fistpl
and
ja
arpl
mov
xchg
pushf
and
jo
insb
daa
mov
dec
stos
sbb
xlat
add
mov
mov
add
into
push
xor
and
jp
jbe
popa
xor
mov
out
xor
repz
push
andb
push
push
into
test
ja
pop
popa
xor
jae
pop
pop
int
push
lods
sbb
push
dec
sbb
cmpsb
lret
xorb
loope
sbb
ret
fwait
push
mov
inc
cmp
rcll
cli
pop
xchg
in
outsl
mov
add
pop
cmp
int3
iret
ffreep
mov
ss
cmpb
scas
jo
sbb
adc
out
mov
fs
dec
iret
outsb
out
rcrl
dec
pop
push
lock
pop
mov
jecxz
cmp
xlat
push
in
test
insb
jg
mov
gs
loopne
or
add
lahf
cmpl
xchg
xlat
jae
jb
ficomps
dec
in
sub
sub
cmp
jo
pop
repnz
mov
cmp
mov
test
out
aad
inc
leave
in
mov
jg
lcall
out
push
mov
sbb
sbb
ret
jo
dec
sub
dec
popf
and
idivl
dec
lahf
shlb
test
jo
or
pop
daa
mov
imul
in
cs
cmp
sub
cmc
outsb
inc
loopne
pop
mov
xchg
pop
dec
jo
sbb
cld
dec
test
arpl
ja
mov
sbb
mov
push
fcmovb
insb
movsb
mov
insb
push
out
push
pop
adc
xchg
jnp
mov
pop
push
sub
fbstp
in
push
xchg
imul
loop
ret
mov
xchg
sub
jo
push
iret
out
mov
mov
lock
jmp
dec
push
lock
subl
ja
mov
jmp
mov
jo
aad
pop
xchg
xchg
pop
and
mov
mov
shrl
ret
movsb
mov
lcall
inc
jo
pushf
xor
or
jo
mov
mov
incb
inc
leavew
pop
xchg
dec
jo
and
pop
cmp
jo
mov
and
add
shr
adc
xchg
jp
jmp
or
ficomps
xor
jo
xchg
inc
mov
dec
jb
or
mov
clc
jp
and
xchg
jo
lret
push
outsb
ja
es
sbb
jo
sbb
addr16
out
iret
push
ret
jo
insb
js
mov
add
ja
addl
inc
push
rcll
ja
pop
fidivs
push
and
clc
lock
fsub
je
sbb
add
push
jo
in
insl
xorb
lock
jmp
mov
pop
xor
aas
mov
sbb
mov
das
cmp
jb
pop
loope
push
stos
aaa
jbe
aam
int
sbbl
push
nop
xchg
out
add
jge
inc
test
jae
mov
imul
add
mov
mov
iret
dec
fdivp
lock
mov
arpl
jo
xchg
or
inc
insl
cwtl
add
xchg
hlt
jl
push
filds
repz
loopne
loop
fdivrl
fdivs
push
sarl
stos
cltd
pop
jbe
lret
mov
sbb
insb
rcrl
and
adc
fwait
add
jb
lcall
callw
aaa
lret
jo
mov
sub
je
jg
or
ja
lock
sub
icebp
jo,pn
lret
dec
gs
cmp
mov
mov
mov
insb
fildl
jo
mov
les
jecxz
fwait
sbb
mov
lods
pop
push
in
test
dec
add
sbb
inc
push
insl
out
cld
mov
dec
fs
mov
cmpsl
arpl
shl
push
clc
inc
xchg
shlb
xor
test
mov
jp
leave
jo
adc
jbe
loope
insl
inc
add
jp
cmp
aaa
xor
jo
in
add
or
adc
fnstenv
out
jmp
in
push
aas
xor
in
or
lea
or
fldcw
dec
rorl
repnz
sub
or
inc
or
loopne
inc
dec
jo
aas
cmpb
sub
bnd
or
xor
out
or
icebp
dec
dec
push
push
std
jl
incb
xor
pushl
notb
aas
mov
jo
repnz
pop
sti
jo
mov
jno
dec
pop
je
into
lods
cld
cmp
dec
popf
jae
adc
shrb
jp
inc
sahf
adc
dec
add
xchg
loopne
fndisi(8087
jecxz
ja
outsl
dec
inc
into
shlb
lods
dec
orl
push
mov
outsb
push
cmpsl
rcll
fildl
pusha
xchg
out
xor
and
pop
ljmp
or
pop
shlb
fs
cli
nop
imul
in
mov
sub
mov
fdivp
jo
mov
cli
mov
xor
loop
mov
jecxz
daa
dec
iret
lea
or
out
pop
mov
xchg
or
and
mov
cmp
xchg
jo
pop
sahf
mov
jne
add
jae
rorl
pop
addb
jo
xlat
jne
inc
mov
dec
fs
cmc
sub
xor
add
and
std
xlat
insb
mov
cli
sbb
in
loopne
jne
or
arpl
bound
push
xor
mov
lret
movsb
outsl
adc
jae
je
or
sub
lock
lcall
lret
gs
cmp
xchg
inc
mov
sbb
lock
push
insl
adc
sahf
cli
mov
push
fiaddl
cmc
inc
xor
fsubs
jo
outsl
adc
orb
add
filds
scas
into
icebp
dec
mov
jo
aaa
and
insl
pusha
or
lods
mov
pop
ja
shll
cmp
or
mov
arpl
adc
fidivl
call
mov
jo
aam
mov
test
fs
inc
xor
scas
adc
popa
mov
mov
push
test
jo
pop
xchg
xor
enter
ja
jae
jno
and
mov
test
aam
adc
jb
sahf
xor
nop
repnz
and
jne
mov
cmpsb
inc
push
jo
xchg
mov
lock
shll
or
jo
xchg
jns
inc
push
lcall
mov
iret
adc
ret
dec
lahf
jo
mov
push
sbb
out
adc
cli
push
insl
push
ljmp
pushf
shll
push
js
mov
inc
jne
pusha
lret
cmc
mov
add
insb
jmp
fnstcw
gs
xchg
jb
out
shlb
sbb
sahf
std
add
push
test
pop
jg
ret
fmulp
out
cld
xchg
outsl
jbe
jo
popa
arpl
or
mov
popf
insl
mov
pop
dec
push
xorl
xchg
cmpsl
test
jge
movsl
add
jo
xor
stc
subl
mov
fsubs
std
bound
idivb
idivl
insb
and
repnz
dec
cmp
mov
test
ja
aam
push
pusha
push
jmp
leave
sub
jg
adc
sub
pusha
push
xchg
or
mov
sbb
adc
jb
iret
dec
outsb
adc
push
enter
les
pop
int
nop
or
push
dec
ss
out
inc
repnz
rol
push
movsl
sbb
jns
xor
or
lods
and
or
repz
aam
push
loope
lods
mov
addl
ss
nop
lahf
add
iret
and
xchg
mov
or
into
shlb
add
lahf
enter
mov
inc
mov
fists
out
dec
mov
inc
iret
or
outsb
add
rcll
xchg
xorl
fnsave
and
inc
mov
cmp
test
dec
fwait
mov
or
sbb
pop
or
in
xchg
outsl
cmpl
sub
mov
push
out
cmpsb
jp
addl
lcall
scas
out
and
lret
xor
repnz
push
stos
xor
mov
testb
loope
jmp
jo
pop
push
push
fisubl
fcomi
jbe
fdiv
add
dec
jb
inc
adc
push
and
stos
pop
xor
bound
and
mov
push
sahf
outsb
or
inc
aam
xchg
in
adc
jg
xchg
adc
xchg
jbe
and
loope
mov
mov
cli
mov
jg
shrb
jge
rolb
jo
sub
ret
jne
and
repz
xor
repnz
add
inc
pop
stc
lahf
mov
outsb
mov
in
mov
stos
mov
daa
mov
movsb
out
inc
clc
jo
mov
pop
bound
and
dec
insb
jp
pop
addr16
sub
adc
jns
bound
leave
xchg
lods
fs
rcrl
shrl
push
in
pushf
sub
push
add
repz
repnz
sub
xor
lea
xlat
and
lcall
insl
fsubrl
repz
dec
cmpsl
jo
mov
and
jp
cmp
jo
push
orl
and
mov
cwtl
outsb
jmp
sbb
les
sbb
popa
lock
sahf
cmp
adc
adc
push
notb
inc
and
cmp
jo
xor
sbb
jo
push
sbb
pop
xor
pop
mov
mov
loop
cmp
adc
push
in
pop
push
je
jecxz
shll
hlt
jmp
cmpsl
sbb
mov
lret
in
jo
cli
enter
xchg
insl
mov
and
int
pop
add
jo
je
std
inc
orb
mov
mov
adc
sub
aas
lock
das
mov
dec
ds
pop
rcll
jle
push
adc
insl
lds
mov
std
jge
sbb
shlb
push
out
mov
enter
adc
dec
fbstp
jle
sbb
push
mov
loop
xchg
mov
mov
repz
xchg
mov
inc
test
in
sub
lcall
cmp
lret
into
pop
lds
test
mov
hlt
lcall
lods
imul
sti
mov
push
ds
in
fsubp
popa
enter
push
into
fdivr
lds
sub
arpl
push
inc
push
and
jo
popa
mov
movsl
inc
and
jecxz
sbb
lds
or
fcomps
sbb
sbb
mov
pop
jo
xor
and
loop
pop
jo
xchg
push
and
jns
out
push
and
xchg
dec
jl
fwait
in
sub
bound
sub
test
adcl
in
jnp
icebp
les
pop
dec
gs
lock
and
jge
loopne
lcall
cli
jo
cmc
push
dec
sub
cmp
incl
sub
sub
shl
mov
push
outsb
or
ret
mov
or
and
push
insl
sub
fistpll
je
xchg
jp
lahf
mov
inc
mov
ja
adc
insl
mov
test
push
mov
mov
lea
xchg
pop
xor
push
mov
insb
adc
mov
daa
jg
jo
rorl
cmp
shll
push
push
push
pushf
mov
into
push
push
out
divb
jp
out
push
sub
jo
movsb
addr16
and
jo
add
std
cmp
int3
sbb
aam
xchg
sub
mov
into
fdivs
repz
movsl
lcall
das
jo
add
cli
dec
xchg
mov
cs
jo
out
fwait
add
dec
xchg
add
jnp
adc
adc
or
mov
pop
aam
fcomi
mov
loop
adc
jne
sub
lds
nop
ds
insl
and
fbld
and
nop
dec
sbb
stc
cmp
shlb
xchg
outsb
mov
jns
xorl
or
nop
ret
xchg
test
fldt
repnz
loop
xorl
xchg
fwait
jo
cli
mov
test
lcall
jge
xchg
jbe
cwtl
pop
or
test
bound
jo
fst
adc
pop
mov
push
add
sub
popf
scas
xchg
or
jl
mov
pop
outsb
sub
add
or
dec
mov
sbb
dec
pop
and
jo
pop
sub
or
or
jae
lahf
push
xchg
dec
add
inc
jge
pop
or
daa
cltd
cmpsl
call
push
imul
cmp
test
shlb
insl
pop
stc
xor
ljmp
call
popf
inc
hlt
clc
push
daa
inc
test
adcl
enter
mov
rcll
shll
adc
movsl
movsb
je
adc
pop
pop
sbbl
push
adc
mov
adc
xchg
mov
push
or
and
aaa
shrl
sub
popf
inc
add
inc
lcall
fwait
lea
lods
mov
lock
jmp
aaa
xchg
mov
fwait
andl
fisttpl
dec
iret
pop
lock
or
insb
xchg
add
push
mov
iret
or
cltd
add
out
pop
lods
cmpsl
jp
mov
pop
jno
roll
push
lea
jle
jo
inc
test
loope
mov
rcrl
inc
in
cwtl
cltd
jo
adc
mov
and
rolb
divps
iret
mov
inc
mov
jo
inc
sub
cmp
cs
test
ds
lds
cmp
pop
cli
gs
imul
xor
cmp
je
dec
inc
xchg
jo
mov
mov
jo
stos
mov
shrb
loope
sahf
bound
dec
iret
lahf
rorl
jo
sti
out
inc
ds
jo
xor
xlat
xchg
les
push
sti
sahf
ja
jo
movsl
outsl
lods
push
or
insb
xchg
lock
mov
xchg
inc
sbb
fwait
and
lods
popf
push
adc
data16
lahf
dec
movsl
xchg
out
fildl
pop
adc
push
add
lock
xchg
in
cmp
cmp
rclb
fidivs
jbe
cld
movsl
or
fs
and
std
leave
sub
xchg
dec
inc
mov
rclb
or
outsl
jo
push
jge
jo
cmp
mov
outsb
pop
inc
inc
push
imulb
xchg
sub
jo
out
sub
sbb
ret
mov
inc
cmpsl
cwtl
lds
xor
jl
orb
test
mov
rorl
inc
int
add
jl
pop
dec
mov
ja
mov
xor
push
mov
xchg
dec
loop
jo
mov
mov
outsb
mov
nop
in
sub
jae
dec
subl
xchg
movsb
push
xor
add
test
fsubl
addl
push
mov
cmp
divb
lea
push
test
push
lret
fwait
leave
adc
adc
jg
pop
push
mov
jo
and
push
cli
divl
cld
arpl
dec
stos
dec
lret
cwtl
lock
mov
cmp
jo,pt
xchg
sbb
stos
jo
jl
pop
jno
mov
shrl
mov
outsl
ret
xchg
lret
push
pusha
insl
popf
adc
aaa
sub
cmp
pop
jo
mov
dec
mov
mov
dec
lods
in
out
push
cmpb
jns
push
dec
add
xchg
jnp
ret
jmp
outsb
jae
fcmovbe
lods
adc
sti
ss
pop
subl
pop
bound
daa
xchg
mov
jo
mov
jmp
test
enter
cli
jo
sub
iret
cmpsb
adc
sti
fdiv
inc
subb
pshufw
cmp
jne
outsl
test
jae
inc
aam
repnz
mov
lcall
xchg
jo
dec
push
add
jo
push
sbb
jbe
mov
dec
inc
cmpxchg
add
xchg
pop
jb
js
and
arpl
mov
or
adc
shrl
mov
sub
ret
mov
mov
sub
aad
dec
movsl
cmp
xchg
cmpsb
sbb
pop
jo
pop
cmc
int3
xor
daa
cli
add
jo
mov
xchg
in
dec
idivl
mov
lcall
jo
jecxz
into
sti
sbb
stos
push
jae
push
fwait
mov
push
xchg
mov
sub
out
add
pop
xor
test
in
jo
xlat
adc
rcll
aad
fwait
shl
fmul
pusha
jno
icebp
int
pop
in
mov
insb
adc
jnp,pt
cmp
jnp
or
mov
movsl
sti
xor
rcrl
outsb
pop
pop
mov
dec
inc
adc
sahf
lret
xchg
and
xchg
insl
lret
clc
repnz
fisttpl
or
mov
orl
subl
cmp
jge
mov
pop
imul
std
popf
ret
mov
xchg
ss
imul
push
arpl
clc
fwait
add
pushf
jo
mov
jg
xor
scas
jo
sub
cltd
movsb
dec
sbb
pop
add
ret
mov
pop
mov
inc
push
dec
cmp
bound
mov
and
shrl
jo
dec
mov
xlat
icebp
dec
xor
pusha
adc
jnp
outsl
xchg
cli
push
or
movsb
mov
enter
lods
in
loope
std
jnp
dec
xchg
inc
jo
mov
dec
jl
in
test
ja
into
fadds
mov
rcll
mov
or
jmp
cmp
or
jo
adc
mov
xlat
std
inc
movsl
push
fcomip
push
test
jo
mov
push
cmpsb
leave
test
stos
or
inc
and
mov
jne
imul
pop
or
jo
out
sub
ss
xor
fildll
sti
xor
cmp
fisttpl
and
arpl
push
xchg
push
addr16
push
stc
jae
mov
leave
jo
int3
insb
ficompl
ret
fwait
lahf
ret
xchg
mov
sub
jo
lret
inc
gs
sub
or
mov
xchg
insl
sub
and
xor
sub
jl
mov
jmp
ret
mov
int3
popa
leave
jp
cs
mov
cmp
jge
dec
dec
pop
pusha
loope
push
jo
rcl
and
scas
jo
outsl
mov
xchg
jo
in
push
leave
aad
std
cmp
gs
add
pop
ds
cmp
jo
push
sbb
cld
jo
mov
fiadds
inc
jae
mov
sub
jo
xor
cmp
jge
idivb
out
test
std
or
ja
pop
push
iret
inc
repz
and
dec
xchg
inc
js
mov
stc
bound
cmp
jg
repnz
rcr
dec
mov
or
jo
and
iret
push
sub
shll
mov
in
outsb
aaa
pusha
stos
fcmove
test
mov
int
push
jg
nop
add
fstps
lds
loopne
or
and
pop
lret
aaa
jge
sti
jo
fstl
arpl
ficoml
int3
cmp
jo
roll
lahf
sub
jg
movsb
xor
mov
mov
shr
cmp
xor
sbbl
fcoml
cwtl
dec
adc
cli
jns
push
movsb
cmc
call
pop
or
mov
pop
popf
add
int3
mov
mov
push
xor
pop
adc
push
pop
orb
dec
scas
popf
fs
xor
push
mov
lock
xor
jp
xlat
mov
sub
mov
cli
sub
sub
jo
inc
mov
sub
mov
mov
sbb
cmc
jl
add
loope
mov
lods
xor
jo
hlt
xchg
jge
or
fidivs
mov
push
imul
pop
rcll
mov
jbe
mov
movsl
in
mov
movsl
mov
dec
cmc
mov
mov
loopne
pop
xlat
mov
add
adc
push
xor
jne
dec
add
adc
into
dec
rclb
sub
pop
loop
jo
push
mov
ja
gs
pop
outsl
lret
mov
pusha
iret
inc
add
adc
cmp
adc
mov
andb
add
push
jo
jnp
xchg
xchg
adc
or
cltd
pushf
add
jo
jmp
pop
sbbl
jp
mov
div
fmuls
imul
mov
aad
jo
jge
imul
jo
subb
popa
mov
movd
push
mov
sbb
adcl
loop
jo
cli
and
jp
int3
into
test
mov
jp
pop
add
add
jo
outsb
in
arpl
mov
into
das
xchg
push
inc
jo
dec
cmp
xchg
test
xchg
mov
es
mov
cld
jo
xchg
mov
fsubr
mov
inc
das
leave
mov
fiaddl
xchg
cmp
movsl
add
jo
jb
jnp
push
mov
cwtl
lds
push
rcll
in
jo
pop
lods
mov
jo
jno
aam
stos
sub
add
mov
inc
aaa
ret
cmc
dec
add
jge
out
cmp
movsl
jo
inc
and
add
fwait
dec
jo
cmp
or
or
in
push
jo
xchg
fdivrs
cmp
mov
loopne
pop
nop
enter
lock
jne
test
sahf
dec
pop
xor
mov
movsl
xor
push
test
fbstp
sbb
clc
add
jo
js
and
and
mov
int3
dec
or
insb
divl
daa
popa
pop
mov
xor
jne
jbe
adc
jo
ret
jmp
out
cwtl
mov
mov
adc
mov
push
xchg
outsl
mov
sahf
sbb
jecxz
jo
popf
in
fwait
mov
jg
jns
movsb
or
jae
push
cmp
push
enter
xchg
inc
shrb
iret
cmp
mov
push
mov
adc
push
push
mov
xor
mov
out
jo
cmp
xchg
mov
cwtl
pop
into
sub
cmp
add
and
incl
dec
add
popf
lock
jl
mov
iret
dec
in
sbb
jo
and
lss
or
and
into
std
dec
jle
fwait
lock
adc
push
add
icebp
ljmp
gs
pop
mov
mov
and
das
test
jge
dec
icebp
xlat
popf
mov
add
cmpsb
jmp
aad
leave
inc
sbb
or
jnp
lock
jo
sub
mov
inc
push
jmp
cld
xchg
jge
test
mov
icebp
aad
stc
mov
cmp
or
pop
into
lcall
sti
popf
jo
cld
pop
mov
out
sbb
scas
ljmp
inc
mov
xor
and
xchg
pop
fldcw
pusha
or
dec
push
sbb
repnz
push
fisttpl
and
cmp
xor
xchg
sub
imul
aas
jae
roll
popa
and
iret
dec
mov
call
adc
enter
dec
scas
jne
test
cmc
mov
fdivl
sub
xorb
jnp
cwtl
dec
aaa
insb
popw
sti
test
repz
ja
pop
or
fisubrs
lea
aas
pop
adc
xchg
adc
bnd
inc
cld
test
mov
dec
in
jo
or
sbb
jo
daa
les
decb
cmp
xchg
aas
and
sbb
and
fwait
orb
sarl
jnp
jo
mov
mov
sbb
sub
sub
lret
jo
sbb
lods
fwait
mov
jns
stos
in
pop
cmp
xor
xorb
popf
icebp
pop
cmpsl
jo
mov
push
in
jo
leave
or
sets
jo
stc
add
fs
aas
popa
add
call
xchg
xchg
xchg
jp
ljmp
jae
cmp
fnstcw
mov
mov
jo
outsl
loope
sub
daa
sbb
jno
in
xchg
jo
fcoms
xor
or
adc
subl
ss
jmp
scas
push
push
push
jo
orb
and
xor
xchg
in
xchg
fwait
or
cmp
jg
xchg
mov
pop
xchg
call
pushf
and
xchg
cltd
adc
scas
or
adc
add
ja
insb
bound
or
push
pop
std
shll
xchg
pop
subb
sub
inc
xchg
xchg
xor
iret
ss
cmc
js
mov
movsb
mov
jo
push
clc
popf
int3
daa
leavew
jo
dec
loope
xor
mull
mov
enter
mov
jo
xchg
inc
sti
sarl
les
sbb
mov
or
xchg
pop
aad
scas
dec
sbb
das
lock
fs
xor
adc
mov
cs
xchg
cld
stc
pop
lods
subl
jno
adc
or
mov
mov
out
mov
inc
push
ljmp
add
ret
xlat
orl
bound
mov
or
mov
clc
xchg
das
jo
or
mov
je
xchg
lret
sbb
xor
ja
sbb
add
add
add
popa
sbb
imul
pushf
aaa
jbe
jo
lret
push
enter
arpl
dec
popf
call
or
fbstp
lret
stos
ret
push
insl
mov
std
mov
arpl
add
and
pop
pushf
cltd
jno
mov
inc
insl
mov
mov
mov
and
test
pop
mov
arpl
sub
jg
cli
add
es
dec
stc
jb
xor
mov
xchg
cmp
xor
in
pop
mov
lock
pop
pop
add
add
and
cmp
push
mov
loope
mov
dec
insl
das
push
xlat
lock
jge
push
mov
jo
addb
mov
pop
outsb
test
jbe
add
xor
loope
popa
dec
rcrb
lahf
mov
loop
dec
jo
pop
std
and
xor
ret
pop
jae
ror
xchg
lret
cmp
push
mov
jo
stos
fiaddl
jo
xchg
cwtl
or
add
jo
aad
gs
mov
mov
ljmp
mov
dec
push
fadds
pop
add
adc
fisttpl
sub
ss
and
dec
popf
out
jnp
rorb
jae,pn
pop
lahf
lret
imul
cmpb
pop
dec
lock
and
push
clc
outsl
loop
jo
dec
push
lea
int3
imul
fisttpll
mov
cmpsb
lock
bound
sbb
xor
lock
mov
fs
iret
lahf
mov
outsb
or
lods
lods
gs
sbb
add
neg
loop
jne
mov
nop
push
in
fs
enter
dec
shl
dec
jg
jo
aam
lret
mov
pop
mov
mov
or
out
clc
adcb
pop
aam
xor
mov
lock
pop
sbb
jbe
cmp
es
add
rorb
imulb
jmp
pushl
fistpl
sub
mov
jo
mov
jnp
xchg
inc
fstps
sub
in
in
xchg
mov
mov
and
xchg
movsb
adc
or
sub
mov
iret
inc
jo
push
jo
and
sbb
push
clc
ja
cld
fldcw
jae
jnp
push
pminub
arpl
orl
mov
push
insb
cmp
or
sbb
push
and
pop
out
out
jle
jo
jp
pop
inc
xchg
mov
jo
pop
push
pop
and
xlat
add
imull
dec
xchg
stos
imul
popa
repz
and
cli
jo
xchg
pop
outsl
out
movsb
jo
lcall
ja
out
ljmp
jmp
xor
insb
je
call
out
xchg
mov
scas
mov
addl
ljmp
add
iret
testb
jae
mov
sahf
adc
ss
jo
cmp
iret
in
scas
xor
outsb
ljmp
xor
jo
dec
push
sbb
das
scas
ret
filds
xchg
in
dec
jo
add
or
mov
int
outsb
testl
cwtl
mov
mov
fs
imul
mull
sbb
pop
int
pop
cmp
push
ljmp
xchg
jo
or
mov
inc
xchg
push
test
outsb
inc
stos
hlt
inc
push
in
out
xchg
pop
shlb
lcall
cli
jo
mov
gs
mov
push
repnz
mov
lds
adc
or
roll
or
jo
xchg
xchg
pusha
roll
fcomps
push
push
push
nop
pop
push
jb
mov
sub
jmp
lock
adc
dec
add
jo
add
push
jo
mov
xchg
rolb
loop
ret
sbb
push
add
xchg
shll
aam
xchg
xchg
fstpt
movsb
xchg
dec
xor
pop
or
xchg
push
jno
pop
xor
pop
enter
ljmp
push
imul
inc
mov
aas
sub
jo
mov
add
leave
mov
jo
adc
int
jge
outsl
jae
xchg
fwait
cld
fmuls
es
jne
jge
mov
fs
xorb
xchg
inc
jo
mov
int
ret
jb
push
or
jo
movb
call
addr16
jb
jo
mov
stos
pop
insl
cli
xor
dec
pop
int3
leave
lock
int
add
shlb
nopl
test
scas
jo
or
roll
cmpsl
adc
in
lcall
jo
iret
or
inc
cltd
mov
jl
ljmp
mov
movsl
push
je
and
sub
out
cmpsb
pushf
push
sub
jp
repz
aas
inc
xor
sbb
stos
fwait
mov
sbb
pop
lds
fdivrs
ja
xor
or
pop
jo
xchg
movsl
into
pop
xor
ja
cmp
je
inc
xchg
stos
ds
lret
push
xor
ljmp
cmp
pusha
jo
pop
adc
jo
cmp
rcrl
fcoml
pusha
lret
lock
mov
push
lret
fsubl
or
mov
and
cmp
cltd
pop
fcoms
push
jo
aas
lahf
lcall
jo
cwtl
test
sub
lret
adc
jnp
xor
mov
pop
jb
mov
add
sahf
sub
jo
and
lahf
xlat
pop
pop
adc
jo
sub
mov
adc
jo
rcrl
int
cmp
add
icebp
fwait
lahf
inc
xchg
adc
jnp
clc
jbe
jo
push
sub
jo
dec
mov
sahf
jo
and
pop
jae
jno
bound
nop
pop
xor
ss
cwtl
cmpsl
lods
in
push
das
push
inc
lea
xor
mov
pop
fdivl
loopne
shl
jo
cmp
mov
pushf
lods
jo
loopne
pop
cmp
cmpsl
sbb
jl
subl
cli
hlt
add
out
jae
xchg
and
scas
jo
push
push
shrl
dec
fwait
in
enter
pushf
mov
adc
or
pop
jo
sbb
mov
mov
mov
mov
or
mov
sbb
jmp
shll
sub
dec
add
fdivs
xor
pop
push
pop
push
jo
loop
jno
imul
rclb
ja
ljmp
add
das
outsl
sub
pop
jne
xchg
and
lods
jo
test
mov
ja
fs
xchg
add
insb
pop
xor
lock
lret
mov
dec
jb
das
mov
xchg
add
jmp
push
adc
and
mov
pop
or
and
es
aaa
fisubl
jo
jnp
push
xor
stos
loopne
xchg
mov
mov
mov
sub
jo
sub
xor
jbe
or
pop
pop
and
mull
ja
jge
shll
mov
leave
insl
sbb
jle
xchg
mov
or
jp
jo
leavew
jg
es
lret
out
test
push
scas
add
outsb
rcl
mov
sub
sub
jo
mov
inc
fistl
dec
testb
or
mov
mov
lods
out
lcall
loope
push
mov
cli
jo
hlt
ffree
add
outsb
int
outsl
sbbl
cwtl
inc
adc
adc
sbb
scas
mov
cwtl
and
push
aad
pop
push
jp
bound
adc
xlat
or
mov
push
pushl
xlat
les
inc
mov
sub
lock
movsl
stc
gs
mov
decb
pop
dec
sbb
cmp
jg
ret
inc
jmp
lock
sub
add
gs
es
pop
test
lds
aad
shlb
dec
push
dec
lock
cs
jo
push
scas
lods
test
rcl
jno
dec
cwtl
and
imul
sub
and
test
ss
aas
cmp
mov
jo
push
mov
fdivl
std
xchg
arpl
xchg
outsb
fistpll
adc
mov
lea
iret
mov
ja
movsb
js
cmp
dec
mov
cmc
lcall
xchg
lcall
or
es
leave
inc
in
mov
jo
push
xor
add
loopne
aad
enter
and
sub
lret
lods
pushl
movb
jno
mov
sbb
mov
orb
fdivl
ja
xor
fwait
jo
outsb
out
js
shlb
cli
jmp
pop
mov
add
mov
mov
pop
mov
mov
add
pop
mov
jo
mov
mov
mov
jo
adc
test
fs
insl
push
inc
or
js
nop
cmp
dec
les
mov
insb
dec
jp
xchg
jo
xor
inc
in
lods
xchg
ja
out
fsubp
xchg
arpl
jmp
push
xor
xchg
or
xchg
jo
xchg
cmpsb
xchg
mov
jecxz
mov
sub
out
add
jo
cmp
dec
push
jo
mov
lret
mov
aam
inc
sarl
mov
mov
sbb
mulb
or
and
out
mov
push
add
mov
add
insb
cmp
jae
mov
pushf
mov
xor
and
adc
pop
dec
bound
data16
in
ja
fimull
mov
loope
add
lock
pop
sbb
adc
sub
sbb
mov
adc
insl
sbb
fadds
into
incb
xchg
shlb
pop
lret
push
lods
jo
iret
jecxz
pop
outsb
gs
fcoms
pushw
dec
jo
mov
sbb
sbb
sahf
pop
push
sub
stos
dec
jmp
or
mov
jp
mov
mov
and
insl
scas
lret
add
xchg
xor
mov
data16
mov
sbb
jo
pop
dec
or
inc
pop
inc
jae
scas
pop
dec
mov
adc
xchg
sub
cmp
in
pushf
lods
call
sbb
mov
int3
xor
xor
jo
sub
sub
sbb
imul
pop
sbb
and
jo
xor
mov
sbbb
xchg
fwait
xchg
mov
pushf
ror
and
ja
add
stos
insl
imul
ljmp
jo
pop
cmp
dec
jo
sbb
adc
pop
pop
sub
fwait
adc
pop
test
mov
sbb
xchg
cmp
sub
add
int
sbb
inc
pop
xlat
cmp
stc
jo
mull
iret
lahf
xchg
dec
jo
and
pop
and
xchg
sbb
push
mov
loopne
jo
addr16
lea
push
mov
in
sub
push
adc
shrl
push
fisubrs
push
test
cmp
xor
mov
stos
mov
aas
pop
jmp
adc
movsb
sbb
es
add
clc
xor
cmp
movsb
cmp
push
pushf
jecxz
jo
pusha
lea
decb
jp
fs
repnz
add
cmp
enter
lcall
sbb
aaa
sbb
sub
inc
sub
jo
jns
pop
inc
icebp
dec
xchg
push
std
xor
sbb
xchg
insl
fcmovu
mov
loop
adc
sub
cmp
fistpll
adc
insb
jbe
mov
cmp
andb
jae
int3
xor
mov
clc
out
pop
pop
jo
adc
das
stc
push
xchg
divb
inc
bound
lods
pop
dec
jbe
push
mov
pop
arpl
mov
pop
xchg
addr16
jne
movsb
pop
jle
push
mov
fstpl
outsb
jmp
faddl
ja
sbb
pop
xor
jo
test
jb
or
das
mov
add
jo
lcall
sub
jns
xor
and
mov
jo
ss
aam
push
inc
lcall
loope
inc
imul
shrl
pushf
pop
xchg
jo
sbb
jmp
in
jo
inc
dec
push
in
mov
adcb
push
paddq
jno
jo
mov
sti
xchg
bound
jo
icebp
shll
mov
jo
sub
add
imul
mov
jge
into
ficompl
adc
inc
inc
fprem
ja
mov
push
daa
jl
cmp
mov
push
and
jecxz
cmp
cmc
out
cli
shlb
arpl
rcrl
mov
jnp
and
jmp
jne
call
lahf
sahf
addb
lods
es
ret
ja
adc
in
icebp
lock
imull
pop
leave
hlt
ret
les
cld
xor
xchg
and
ds
in
mov
lahf
ljmp
mov
pushf
xchg
in
roll
mov
push
jns
and
push
ljmp
inc
add
jo
push
mov
sub
outsb
dec
aas
clc
lds
into
and
das
mov
add
xor
mov
test
lret
ds
jo
dec
mov
sbb
jb
je
push
imul
pop
jo
mov
mov
into
das
data16
fwait
push
fs
mov
out
lock
aad
fsts
mov
insl
push
xor
test
adc
xchg
adc
je
mov
inc
jecxz
imul
cmpsb
add
lds
ss
dec
imul
push
xor
or
sub
nop
scas
mov
pop
test
pop
mov
inc
out
cmc
jo
xlat
aad
mov
fdivrl
sbb
mov
inc
inc
jo
mov
and
adcb
clc
pop
fnstenv
adc
xorb
adc
or
dec
daa
or
mov
mov
rcll
jp
hlt
mov
jno
in
dec
push
xchg
nop
addr16
aad
test
pop
push
cmpsl
jo
shll
popf
jo
dec
mov
insb
jo
iret
add
or
mov
jo
out
inc
fstpl
movntq
shll
or
lds
or
pop
ss
mov
loopne
loope
jnp
nop
shll
add
xchg
cmp
rorl
cmpsl
movl
enter
dec
and
imull
push
mov
mov
test
mov
sbb
jo
test
cmp
test
dec
mov
test
inc
dec
pop
pop
lock
mov
sub
aas
stc
push
mov
jecxz
jne
imul
jnp
jo
xor
jp
movsl
les
sti
popa
pop
mov
sbb
adc
lret
mov
inc
mov
scas
fbld
sub
mov
dec
jmp
in
fcompl
jno
shrl
lock
pop
xchg
fisubrs
dec
addl
call
data16
jmp
add
cmc
xchg
jno
fs
inc
jge
mov
js
dec
mov
cld
mov
jo
into
je
cmc
loope
icebp
addr16
sub
orb
mov
not
mov
and
sbb
jo
jne
adc
test
aas
jno
insb
push
fadds
lock
pop
sub
jo
decl
xlat
cmp
pop
and
jns
adc
in
and
dec
jo
mov
fisttps
push
into
pop
insl
cmc
jo
lods
lods
icebp
aas
jo
xchg
fistl
negl
xchg
rolb
gs
push
insl
jnp
dec
jns
cmp
lods
inc
cmp
rorl
inc
inc
mov
mov
push
pop
fidivl
sub
test
jg
and
or
push
mov
add
xlat
push
addr16
jo
cmpsl
aas
in
push
repnz
mov
test
jo
cmp
fdivrs
jo
lods
pop
add
rcrl
mov
repnz
sbb
xchg
jnp
out
popl
mov
int
test
in
cltd
daa
stos
mov
pop
add
adc
jnp
jo
cmp
cli
popa
xor
je
out
pop
sbb
push
inc
push
jo
add
ljmp
or
push
xchg
add
mov
inc
mov
jnp
iret
jmpw
insl
stc
js
lods
loopne
imul
ret
outsl
mov
mov
dec
scas
dec
or
pop
out
inc
jg
mov
sarl
adc
jno
pop
aas
or
fisubs
jo
into
mov
lods
cs
mov
jo
cmp
push
jg
shld
xor
leave
lods
inc
lods
jo
insb
push
call
jb
mov
std
cmp
mov
ljmp
fimull
adc
jo
and
pop
jo
or
mov
or
jo
pop
jbe
inc
cld
xchg
mov
mov
xlat
cs
out
sti
sbb
jmp
xchg
or
aaa
jo
pop
clc
mov
insl
sbb
stos
aaa
mov
and
push
pop
cmp
jne
xor
rcrb
push
jnp
pop
xor
xor
pop
lahf
in
adcl
outsb
jne
fists
jmp
or
gs
in
addb
pop
dec
ljmp
or
cmp
sbb
inc
push
jo
push
test
xchg
mov
rcll
sar
ja
inc
fwait
or
arpl
sti
bound
lret
sub
jo
jbe
lods
or
jno
and
xchg
push
daa
arpl
sbb
lods
cwtl
into
mov
aad
mov
pop
xchg
sbb
test
jne
dec
cmp
push
imulb
dec
jmp
lock
fldt
sub
incb
jo
push
inc
pop
pop
push
mov
nop
or
ljmp
in
or
jne
push
mov
sub
mov
lds
in
insl
jg
popf
lcall
add
xor
xor
sbb
outsb
jno
push
in
inc
addr16
dec
mov
mov
and
ljmp
scas
adc
sarl
pop
xchg
popf
cmp
mov
sahf
inc
and
aam
push
dec
mov
in
cmp
in
jg
cli
xorb
scas
mov
and
aam
fld
jecxz
cltd
jo
xchg
sub
lds
lea
mov
test
dec
xor
lock
xor
jo
popf
mov
int
shlb
xchg
mov
jo
inc
test
pop
fs
xchg
push
fbstp
sahf
and
lea
jo
or
push
jmp
lods
outsb
sbb
mov
icebp
xchg
mov
clc
jo
xor
sub
cmp
jb
cltd
push
addl
repnz
push
repz
hlt
cwtl
outsl
cli
pop
jne
movsb
das
fbstp
decl
push
ss
cmp
add
mov
mov
push
lret
mov
push
cmp
jo
and
bound
mov
test
lea
in
outsl
xor
mov
xorb
push
xchg
cmp
dec
jnp
jo
mov
stos
imul
ret
pusha
mov
pop
js
iret
push
xor
insl
inc
shlb
es
rorb
enter
lock
jb
dec
sub
mov
leave
std
push
push
outsb
mov
pop
pop
lock
rorb
inc
or
pop
mov
je
push
int
rclb
jo
lret
dec
adc
adc
mov
lods
jmp
ss
pop
rorl
mov
stc
add
pop
cmp
and
bound
push
adc
pop
push
cld
ficompl
int3
pop
mov
fs
mov
cmp
sub
jno
es
seto
push
and
pop
in
push
cs
mov
and
mov
inc
out
addb
rcrb
or
inc
mov
lds
loopne
jae
fisubl
push
push
ss
cmpsl
fwait
inc
mov
rcrb
dec
cmp
ss
sub
xor
mov
mov
lods
jl
xchg
les
imull
in
pop
mov
cs
adc
out
iret
jnp
das
cmp
call
shll
push
mov
loope
add
push
cs
or
inc
movsb
and
add
push
cmc
test
add
arpl
cwtl
inc
je
xchg
inc
jo
pop
ljmp
mov
or
xchg
jo
and
and
cmpsl
imul
jmp
mov
add
test
dec
sbb
inc
jo
sbb
adc
inc
test
cmc
cmc
xchg
sarl
sub
jo
out
pop
push
ss
scas
fistpl
lock
stos
sbb
jl
mov
push
jo
outsb
xor
cmp
pop
adc
add
cmp
mov
xchg
cmp
push
in
pop
mov
jo
jge
cmp
mov
lock
inc
into
push
lcall
pushf
popa
movsb
push
pop
sub
mov
sub
mov
add
ret
pop
xlat
arpl
sub
cli
iret
mov
or
outsb
imul
and
stos
bnd
add
ss
sbb
push
push
sbb
mov
add
sub
cmpsb
enter
int
jo
and
push
mov
add
mov
sbb
insl
repz
incl
xor
lahf
faddl
dec
inc
lock
divb
rclb
into
rcrl
adc
inc
das
icebp
jecxz
rorb
mov
xlat
jbe
out
addr16
shlb
out
xor
fimuls
mov
loop
lock
pop
popa
stc
out
mov
pop
inc
in
cmp
iret
hlt
push
faddl
jo
mov
mov
or
sahf
push
sub
xor
lea
cmp
icebp
push
mov
insl
cmp
jbe
push
xchg
add
inc
jmp
adcb
out
push
sbb
notb
add
fprem1
fbstp
mov
mov
xlat
rorb
pop
xor
mov
bound
lea
pop
dec
xchg
push
pop
shl
sti
mov
dec
fstp
repnz
xchg
jne
aam
mov
repnz
jo
imul
jo
mov
orl
push
ret
jnp
cmpsl
nop
or
or
inc
inc
nop
notb
int3
ret
jo
xchg
movsl
dec
dec
sub
jo
pusha
xchg
loop
push
pop
out
jmp
jo
cmp
inc
insb
pop
jecxz
lock
jg
scas
cld
jo
enter
mov
xchg
adc
xor
shrb
mov
push
loope
cwtl
dec
jo
stos
jb
adc
cmp
int3
push
xchg
sub
pop
xchg
shrl
jo
movsl
daa
stc
jecxz
inc
push
jae
add
add
ss
iret
push
lock
or
les
jo
fdivrl
sub
mov
add
fnsave
pop
popf
jns
aas
xchg
add
not
jae
jle
mov
mov
pop
aad
ljmp
dec
pop
ret
aas
scas
pop
inc
mov
repnz
int3
jp
pop
scas
add
mov
filds
push
dec
fwait
and
adc
das
or
out
mov
in
cwtl
sbb
outsb
xchg
or
loop
mov
push
jo
es
ret
cmp
inc
jo
jle
jge,pn
fists
dec
cmp
jp
test
cltd
xor
mov
and
movsb
xchg
jb
or
das
jo
pop
dec
in
int3
push
cmc
mov
std
sahf
mov
xor
out
or
negl
loopne
add
jo
jg
add
out
fsubr
xchg
test
add
test
jo
xor
or
mov
jp
mov
jo
aad
cmp
ficoms
insl
jo
stos
and
add
cmc
sbb
mov
leave
jmp
and
in
daa
sub
pop
ret
cmc
inc
push
clc
lcall
cwtl
int
jae
xor
dec
sbb
jo
or
add
mov
sbb
dec
or
sbb
in
pop
std
and
insl
mov
xor
cwtl
xchg
add
lret
mov
pushf
xorb
pusha
push
push
jbe
mov
sub
push
and
shll
inc
sub
xchg
outsb
jmp
scas
mov
adc
clc
adc
jno
mov
je
loopne
jb
icebp
dec
cmpsb
inc
lret
or
mov
pop
push
fiaddl
xor
jo
pop
sbb
pop
ss
movsb
pop
incb
jo
in
sahf
xchg
imul
xchg
mov
dec
push
adc
jne
cmp
mov
sub
xchg
shl
and
stos
xchg
scas
outsl
pop
les
jge
dec
jb
and
jo
addb
movsl
inc
ret
sub
fdivr
rcrb
mov
outsb
in
mov
push
pusha
xor
push
sub
mov
ljmp
adc
mov
mov
jo
add
imul
jnp
ljmp
jmp
cltd
pop
test
lcall
sbb
mov
pop
ret
xchg
jae
loope
popf
pop
shll
in
xchg
inc
mov
loop
jo
mov
ss
inc
jo
sub
lahf
push
sti
mov
mov
subb
or
mov
in
fidivrs
add
push
push
int3
jo
sub
enter
std
insb
sbb
xor
mov
gs
scas
imul
imull
lock
scas
push
sub
mov
inc
mov
cmp
push
sub
in
jae
cmc
sti
xor
lcall
es
shrb
ds
repnz
add
lret
mov
loopne
xor
addr16
lahf
jo
dec
les
dec
lds
inc
mov
cmc
stc
jo
pop
cltd
fcoml
outsb
jo
insb
jge
cmp
xchg
jo
rolb
mov
in
cmpsb
fdivrs
xor
dec
jg
add
mov
pushf
out
add
add
sub
test
mov
int
iret
idivl
mov
jo
and
pop
xor
mov
mov
sub
pop
push
push
test
popf
jno
jo
sub
shrb
mov
inc
add
sbb
pop
and
jnp
test
add
mull
stos
and
and
movsl
jo
sbb
hlt
push
ja
mov
sbb
mov
test
inc
outsl
xor
mov
pop
mov
jnp
add
arpl
fs
jecxz
jo
cmc
movsl
mov
movsb
mov
ljmp
fwait
adc
or
jo
mov
fisubrl
flds
jnp
jo
sahf
xor
sti
loope
add
mov
lret
hlt
push
jo
dec
out
sub
cmp
cwtl
imul
bound
push
cwtl
insl
mov
jo
testb
mov
mov
sub
rcll
arpl
inc
std
jecxz
xchg
fwait
inc
fistpl
adc
jno
pop
and
aam
lods
leave
xor
xlat
xor
int3
jo
lock
lahf
out
xchg
mov
jo
pop
clc
push
stc
insl
mov
jmp
xor
imul
daa
outsl
jg
mov
jns
push
jmp
adc
loope
or
xchg
sbb
jne
inc
xor
lock
call
jg
idivl
fucomi
push
jo
push
stos
inc
add
adc
xor
pop
lahf
adc
push
sbb
sub
cmc
push
mov
sub
mov
insl
and
pushf
lods
sbb
sbb
jne
jae
fcomi
dec
andl
cs
cmp
rcrl
mov
jo
jle
out
pop
pusha
aas
jo
and
pushf
and
sbb
call
push
push
jo
or
test
jbe
mov
lock
rcr
jb
sub
push
mov
inc
negb
lcall
jo
outsb
test
pop
rolb
cmp
jge
push
in
sub
ret
cmpsb
outsb
stos
aas
mov
aas
sub
mov
popa
jo
or
scas
ja
addr16
pop
fld
xor
dec
sbb
in
aaa
jmp
into
inc
cwtl
pop
or
shrl
stos
shl
leave
sub
adc
jo
jge
into
inc
mov
outsb
cmpsl
add
insb
lds
mov
push
roll
pop
ljmp
ficoml
cmp
sbb
clc
push
adc
mov
cmp
mov
mov
insl
or
mov
jmp
jo
mov
pop
pop
push
es
jo
mov
insb
dec
ss
movsl
popa
and
pop
adc
pusha
lds
call
mov
out
mov
sub
xchg
ret
jle
cmp
xchg
jo
sbb
sahf
dec
cli
daa
jo
mov
mov
imul
ds
gs
ret
sub
sub
sbb
test
mov
push
push
jo
out
xchg
jae
push
rcl
jo
shll
jo
jge
in
sbb
or
outsb
jecxz
lret
push
shll
push
test
es
call
mov
sar
jmp
pop
jo
mov
jle
jo
xchg
add
push
shlb
xchg
adc
cmc
jo
push
jbe
js
xchg
fwait
jo
or
mov
mov
imul
dec
or
in
les
jo
scas
out
pop
push
mov
loope
cmp
pop
adc
mov
rcll
insl
into
or
sbb
fwait
dec
xchg
ss
lret
outsl
push
sahf
jo
xchg
popa
pushl
int
or
push
sti
roll
ret
cli
mov
lock
pop
xor
dec
in
push
insl
insl
repz
imul
pop
mov
xor
fldenv
mov
sbb
cs
cli
dec
imul
loope
push
jo
jge
mov
gs
push
fldcw
fsubr
dec
mulb
adc
loopne
jo
int3
push
or
add
jo
loope
das
insb
jp
xchg
and
out
xorb
pop
push
jns
fs
lret
mov
xchg
mov
sbb
mov
je
jge
mov
jp
jg
xor
jo
xchg
leave
mov
jo
push
call
dec
cmp
ljmp
pop
adc
push
push
cmp
jno
lret
cmp
fimuls
nop
arpl
pop
test
in
outsb
loop
icebp
cltd
imul
arpl
jo
inc
xchg
adc
jae
pop
adc
addr16
or
rclb
outsl
jge
mov
mov
cmp
pop
adc
jecxz
and
out
in
outsb
scas
cmp
cmpsl
loopne
subb
or
shll
xchg
in
ror
or
stos
sahf
fidivs
push
int3
insl
sbb
pop
fnstcw
jle
sub
lds
icebp
pop
add
aam
or
fwait
mov
popa
xchg
call
or
fimull
xor
lahf
inc
test
dec
jmp
mov
push
push
in
xor
sub
popa
and
rorb
push
xor
mov
dec
jo
pop
loop
std
pop
jg
jo
je
lods
lahf
sahf
jne
insl
mov
sbb
sub
ret
dec
outsb
push
sub
mov
lock
inc
push
mov
dec
inc
and
fs
cmp
call
lcall
fdivr
fwait
jo
ret
and
xor
leave
inc
andl
push
xor
gs
lcall
jo
ret
xchg
dec
int3
xchg
test
pop
mov
int
dec
loop
sbb
roll
iret
sub
sub
js
jmp
popf
adc
mov
push
mov
cmp
and
popf
test
jno
push
push
das
adc
jo
push
or
jo
add
add
test
cmp
fsts
push
jae
mov
scas
cwtl
or
jo
mov
mov
mov
or
inc
dec
les
jo
call
jo
pop
movsb
into
movsl
jg
shll
stos
cltd
xchg
mov
xor
pshufw
sbb
add
jo
push
push
inc
push
mov
jo
cmp
mov
jae
xchg
je
nop
popf
out
and
loope
mov
pop
mov
sub
xlat
mov
mov
lret
push
and
dec
loopne
dec
or
jg
mov
mov
jo
rorl
js
xor
xchg
enter
pop
jl
jo
jg
fwait
sub
pop
pop
cvtpi2ps
jo
mov
ljmp
sbb
mov
sub
testl
data16
orb
push
sub
cmp
jo
mov
shll
outsb
mov
lock
cwtl
mov
fs
mov
jo
enter
lcall
ljmp
das
loope
mov
into
jo
lds
fbstp
jns
imul
out
sub
mov
adc
in
lahf
shll
fcomps
jo
rcrb
test
in
es
addr16
xor
jo
sub
cwtl
jno
mov
jge
jo
xor
jge
roll
jo
xor
inc
mov
dec
lret
mov
mov
sub
mov
mov
movsb
inc
push
into
cmp
rcrl
repz
popf
mov
mov
xlat
fs
jne
iret
and
jp
fisubl
dec
mov
shlb
jl
mov
jo
and
std
leave
cmpsl
inc
xchg
loopne
jo
xchg
add
movsl
mov
icebp
jo
insb
xchg
mov
jo
push
adc
xchg
test
jo
or
jge
dec
mov
leave
xchg
inc
loopne
fbstp
mov
dec
ret
pop
sbb
or
cli
mov
pusha
inc
call
and
fwait
jle
xorl
xor
xchg
outsb
jg
inc
test
ljmp
jo
mov
fwait
insl
addl
insl
xor
or
jo
jle
adc
cmc
fbstp
fisttpll
xor
mov
or
pop
mov
mov
xchg
jo
bound
mov
fwait
out
xchg
mov
sub
jp
inc
cmp
mov
in
jae
cwtl
jge
in
inc
add
mov
jo
add
fsubrl
repnz
or
lods
mov
mov
enter
aam
lea
fadd
mov
mov
mov
jo
mov
clc
and
xchg
fidivl
add
mov
addl
mov
leave
cld
adc
push
cmp
and
and
test
adc
mov
mov
mov
push
mov
or
jp
enter
mov
mov
lods
filds
inc
insl
cmc
lds
jb
dec
sub
ret
mov
mov
jae
mov
sti
cmp
add
outsb
lret
cwtl
jle
nop
pushf
mov
mov
sub
sbb
out
xchg
inc
ljmp
mov
sbb
jb
cmpsb
push
movsb
jmp
leave
movsl
sbb
lret
cmp
lock
lcall
jae
inc
aaa
adc
pop
jo
pop
push
faddl
push
jo
movsl
pop
test
stos
mov
adc
jnp
dec
jns
out
or
mov
movsb
xchg
ja
pop
cmc
pop
xor
mov
sub
mov
xor
sub
adc
mov
jo
ljmp
push
push
clc
lock
xchg
mov
xor
scas
sbb
jno
test
inc
push
lock
fisubrs
dec
jo
clc
es
out
xchg
movsl
shll
cmp
sub
dec
fnstenv
aad
sub
cmp
mov
decb
jo
cld
xchg
lods
add
fsts
bound
lods
and
xchg
pop
jo
movsl
stos
mov
or
insl
mov
inc
stc
adc
aaa
lds
xor
out
jg
jp
out
mov
jge
jns
pop
lods
fistpl
int3
push
adcl
add
push
jp
call
jo
sbb
add
or
or
aas
rcr
cltd
scas
aam
jo
test
cmpsl
jo
mov
xor
pop
lcall
push
int
adc
mov
test
lods
jae
dec
cmp
adc
jae
je
mov
push
shll
mov
scas
xchg
mov
push
push
mov
loop
xor
dec
lds
jp
push
rcrb
jo
test
xchg
add
clc
insl
andb
sub
xor
mov
lods
jmp
jo
fidivrl
test
test
or
cmp
call
push
mov
mov
jge
lcall
cli
aam
mov
jo
sbb
inc
pop
movsb
or
dec
jecxz
sub
cmpsb
xadd
mov
dec
mov
push
andl
xchg
pop
mov
jmp
dec
popf
aas
lock
in
stos
dec
out
xchg
jo
adc
addb
movsb
test
mov
std
out
jo
xchg
popa
inc
orb
fs
push
cmp
sub
add
inc
pushf
inc
jo
cmpsb
daa
jbe
imul
mov
jno
sub
push
sbb
cld
int3
cmp
mov
aas
mov
and
in
mov
mov
xchg
lods
pop
mov
jo
andb
jo
dec
call
divb
cmp
movsb
fcoms
jno
iret
dec
bound
aas
adc
xorl
ljmp
xor
jo
sbb
xchg
arpl
jb
cmpsb
jmp
cli
stc
popf
lret
test
jp
stos
mov
dec
xchg
loope
inc
popf
into
lock
mov
enter
mov
or
sbb
jae
sub
aad
and
lahf
xlat
add
sub
and
jo
lret
outsl
lods
push
andl
outsb
fldt
fwait
mov
les
add
arpl
jo
sub
stos
sbb
add
mov
cs
adc
inc
jge
add
inc
ljmp
lock
in
cmc
popf
scas
xchg
jo
mov
lcall
insl
clc
pop
push
jp
add
test
pop
dec
jo
sub
sub
mov
pop
int3
xor
mov
jbe,pn
nop
es
pop
jne
mov
jo
enter
call
cwtl
inc
int
shrl
lds
and
push
jecxz
jo
into
mov
cmpsb
xor
mov
pop
and
cmp
and
mov
mov
divl
es
jnp
mov
shlb
cmpsl
pop
xchg
add
adc
xchg
jl
push
mov
sub
or
sub
pop
ljmp
pop
jb
jbe,pt
mov
dec
mov
jo
mov
push
shlb
loop
daa
aas
mov
lock
jo
ljmp
jo
mov
mov
pop
dec
shll
push
mov
notl
mov
xor
in
lcall
popf
push
stc
sub
mov
jo
push
stos
add
ljmp
dec
mov
mov
jge
push
mov
cmp
jo
pop
mov
sahf
jo
adc
pop
jp
jns
jo
aam
xor
push
fnsave
iret
mov
pop
mov
sbb
shll
cmp
xchg
jo
adc
addr16
xchg
enter
pop
fs
cmp
ficompl
jo
dec
pop
imul
test
lock
push
insl
popa
xchg
inc
mov
mov
mov
stos
std
cmpsb
cmp
loope
pop
cmp
pop
fnstenv
jmp
sub
fmulp
push
jo
sub
idiv
xchg
imull
add
test
xchg
sub
rcl
push
push
jo
faddl
dec
aam
in
dec
and
outsl
jnp
cld
push
std
ja
test
mov
lds
lret
popf
jo
add
dec
movsl
and
push
sub
add
adc
adc
call
insb
inc
loop
test
loope
jo
repz
xchg
fmul
jo
stc
mov
xor
movsl
push
lock
dec
mov
sbb
ljmp
xor
mull
pop
sub
adc
jno
shll
xchg
out
sbb
lock
jge
mov
insb
mov
inc
jo
mov
mov
ds
pop
imul
mov
std
imul
mov
pusha
dec
xor
mov
lods
inc
loop
shlb
adc
test
jo
push
inc
in
das
push
cmpsb
add
insl
cmp
adc
dec
stc
inc
sarb
repz
inc
dec
ljmp
xchg
push
jl
dec
inc
repnz
pop
and
mov
clc
out
jae
and
js
lods
xchg
cmp
negl
inc
rcrb
sub
shll
pop
or
adc
sub
loopne,pn
shll
in
outsb
mov
sahf
xor
push
in
pop
pop
mov
xor
inc
leave
insl
jge
xor
add
in
dec
out
jo
repnz
hlt
pusha
mov
and
jb
push
jo
pop
dec
das
ss
push
roll
in
jbe
jns
lret
ljmp
ds
enter
out
insl
mov
jo
loop
lods
movsl
adc
daa
insl
dec
mov
sbb
mov
ja
add
inc
xor
mov
jo
fs
dec
inc
jo
repnz
jo
insb
cmp
into
dec
push
mov
add
nop
ss
arpl
rcr
and
and
pop
or
ja
push
ds
and
mov
add
cmp
stos
or
jo
pusha
pushf
ja
mov
jo
loope
inc
imul
ja
fildll
sbb
jg
mov
outsb
sub
sbb
sbb
pushl
dec
fmuls
pusha
jo
out
ljmp
dec
mov
in
pop
xchg
std
inc
mov
add
repnz
insl
lret
xor
mulb
add
xor
ror
jo
rolb
add
jle
fcmovne
addr16
dec
push
cmp
lahf
cltd
ror
out
imul
cmpsb
jo
xor
mov
add
ret
ja
in
inc
push
mov
hlt
jo
push
imul
push
jns
xor
bound
jbe
inc
cs
add
repz
aas
jns
stc
mov
std
mov
sbb
cld
lret
jne
push
pop
fidivrl
sub
xchg
pusha
lret
js
lcall
popf
insl
lock
icebp
jae
adc
and
xchg
cmp
fimull
push
jle
adc
cmpsb
mov
popf
sbb
xlat
lea
lods
gs
enter
jo
sbbb
nop
sbb
jo
stc
dec
and
jb
jo
sub
in
das
push
loope
std
cmp
sbb
iret
inc
xchg
mov
pusha
js
cmp
jns
cltd
mov
add
mov
mov
jo
sbbl
out
jae
rorb
and
mov
jo
or
adc
jne
jecxz
xor
out
jo
vmovaps
aas
dec
jo
sub
xchg
inc
divb
push
and
mov
dec
sub
in
int
push
jo
jp
jbe
addr16
xor
fisttps
jo
rcr
xchg
addl
pop
insl
push
mov
aaa
cmp
lock
mov
jmp
and
pop
mov
test
jo
mov
xor
rorb
test
sbb
and
sti
shll
jo
xchg
dec
subl
adcl
push
inc
jo
lock
mov
stos
hlt
or
jo
pusha
xlat
movsb
and
shll
jo
negl
fs
mov
fcmovnu
adc
inc
jo
xor
insl
std
jae
pop
push
jecxz
jno
jp
int3
jo
out
aad
rorl
pop
inc
mov
push
xchg
sub
pop
inc
push
lock
stc
fs
and
push
lcall
and
jo
sbb
outsl
jns
rclb
test
call
lahf
dec
je
adc
icebp
ja
xor
adc
push
rcrl
std
fsubp
push
sub
push
lock
stos
jo
push
push
mov
pop
in
lock
repz
mov
divb
add
xchg
jns
push
pop
jae
jnp
jo
or
cmp
pop
jo
add
ret
sbb
xchg
xorb
fmuls
movsl
mov
add
rclb
xchg
xor
dec
clc
outsb
call
mov
dec
test
sbbb
in
add
ja
inc
pop
pop
outsb
mov
shll
pop
xchg
mov
adc
fisubrl
inc
insb
add
jnp
sbb
out
add
outsb
movsl
pop
cmp
insl
dec
mov
lods
mov
lret
xor
mov
das
jae
inc
in
dec
clc
iret
lock
cs
ds
popa
ja
mov
sbb
jo
hlt
push
adc
xor
pop
sub
jo
push
add
insb
jl
cwtl
jo
adc
jo
xchg
scas
jnp
dec
aas
cmp
sub
rol
pop
je
cmp
adc
nop
xorb
or
das
rolb
push
popa
pop
or
insb
pushf
lahf
jae
and
xchg
outsl
sti
lcall
lret
pop
or
xor
sbb
aas
push
shrb
jae
imul
imul
mov
imul
xor
testl
ja
in
lods
into
mov
sbb
xchg
push
sub
shlb
dec
shrb
xor
xorb
pop
jbe
mov
inc
jo
lock
test
xchg
js
mov
test
jnp
insl
jbe
loopne
inc
rclb
nop
jp
mov
lea
mov
es
int3
adc
insl
jl
lock
pop
push
data16
push
dec
and
jae
pop
pop
nop
lods
mov
test
pop
sub
test
jo
jae
jg
mov
mov
repnz
push
fcoml
insl
icebp
test
cmpb
inc
push
loopne
mov
xor
loopne
jo
shl
pop
das
dec
nop
lea
or
dec
push
idivb
jo
or
out
add
cmp
fstps
xor
push
pusha
inc
add
push
adcb
mov
xor
xor
push
inc
cmpsb
or
xchg
nop
mov
leave
out
xor
add
imul
jmp
lahf
inc
cmpsl
adc
and
js
popf
dec
lea
shrl
push
xchg
adc
jo
leave
add
insb
dec
fildll
inc
imul
jo
lret
daa
aad
sbb
test
jo
shll
sub
or
pop
xchg
lret
add
jo
sbb
mov
push
fbld
dec
loopne
mov
inc
push
adc
jge
add
add
ja
mov
insb
dec
pop
pop
insl
mov
mov
hlt
int3
cmpsb
lock
sub
xor
jae
jp
jmp
sti
mov
jo
insb
cmpsb
cmp
loope
pop
ja
lret
jle
nop
add
mov
jo
aam
mov
scas
and
pop
arpl
call
mov
xor
jl
push
cmp
jne
cld
into
pop
cmp
imul
outsl
jae
insb
adc
cmp
xor
push
add
dec
incb
dec
pushl
cmp
dec
xor
inc
sbb
mov
mov
dec
and
push
sub
cmp
ja
adc
adc
inc
outsb
inc
imul
cmp
dec
adc
pop
sbb
add
addl
lret
dec
pop
pop
aaa
mull
scas
daa
adc
cwtl
pop
cmp
add
adc
or
and
add
inc
or
or
and
xor
add
or
popa
mov
or
push
push
inc
dec
or
ret
dec
addr16
shrl
cmpsb
outsb
mov
xor
cmp
jb
inc
and
sub
imul
add
jae
insb
sub
mov
push
daa
or
xor
out
in
sbb
inc
imul
rorb
inc
enter
inc
adc
mov
jecxz
jmp
mov
pop
jge
sbb
lea
je
cmp
and
adc
fisubl
jno
jl
into
xor
sub
mov
xor
inc
sbb
add
aas
ljmp
inc
cmp
cli
outsl
jbe
pop
mov
dec
or
sub
mov
add
cwtl
xchg
pop
aam
xor
arpl
add
inc
xor
insl
or
in
outsb
cmp
out
jns
jecxz
add
mov
jb
or
outsl
pop
add
jp
test
dec
pop
call
push
outsl
iret
jbe
mov
cmp
orb
dec
ss
arpl
scas
test
add
jbe
adc
imul
ret
mov
insl
dec
jnp
push
mov
push
cmp
je
inc
jns
cs
out
jg
xor
pusha
test
xor
cs
adc
arpl
std
mov
insb
cs
clc
sbb
or
sbb
inc
push
xlat
mov
push
cmp
or
cmpsb
addr16
cwtl
adc
stos
add
inc
sub
dec
pop
dec
in
mov
pop
sarb
pop
loopne
adc
push
js
divb
je
jne
and
add
dec
jge
aas
js
out
pop
adc
aam
or
sbb
or
call
ljmp
ljmp
insb
jp
fs
mov
insl
jb
push
push
or
jnp
jp
and
repz
sbb
pusha
repnz
mov
jb
push
and
add
or
pop
andb
idivb
xor
and
movb
repz
jbe
mov
jl
pop
int3
fucomi
sbb
add
pop
or
pop
adc
arpl
mov
xchg
pop
fs
and
je
popa
dec
cs
bound
les
jne
cli
pop
loopne
pop
addr16
js
and
push
xchg
and
ja
inc
loop
adc
in
sbb
sbb
sahf
cs
ja
add
gs
pushf
pop
sti
arpl
sbb
jbe
adc
pop
xor
jnp
adc
out
mov
loopne
adc
int
sbb
mov
outsl
in
xor
jno
fnsave
jp
imul
popf
xor
pop
push
dec
jno
mov
test
jp
negl
cmpsl
add
jecxz
cli
pop
push
jne
bound
adc
aam
mov
mov
addr16
lods
gs
pusha
xor
sub
mov
mov
clc
dec
insb
push
int
popa
pop
cmp
js
mov
push
pop
add
xor
cmp
fnsave
cmp
jnp
lods
sub
imul
add
pop
jp
loopne
out
sahf
mov
icebp
jnp
cmp
sub
dec
outsb
jbe
pop
xor
js
in
xchg
push
add
cli
addr16
jbe
ret
int
bound
push
pop
lock
sub
jmp
sbb
pop
push
push
dec
int
mulb
inc
pop
jp
fiaddl
mov
push
mov
xchg
fs
pop
push
push
push
pusha
jbe
add
das
aad
xchg
cmp
aaa
cs
mov
aas
mov
dec
push
jnp
xchg
or
ja
outsb
sub
test
jae
outsb
push
std
adc
jmp
dec
fs
push
jno
lcall
push
mov
push
push
insl
push
cwtl
jbe
push
ret
je
xchg
into
out
ja
jbe
xor
test
repnz
xchg
fisttpll
cmc
addr16
lcall
cld
jnp
jae
lahf
lcall
mov
fistl
data16
push
push
add
sub
js
sbbb
inc
jno
sbbb
xchg
dec
inc
insb
sub
mov
icebp
pop
add
inc
jbe
pop
inc
loope
pop
insl
jne
dec
ret
dec
adc
out
repnz
jne
dec
fnsave
push
push
in
pop
sub
mov
push
xor
add
loopne
fs
adc
fwait
sub
mov
fs
cs
imul
pop
scas
ss
inc
rclb
add
enter
push
xchg
fwait
and
outsl
pusha
pusha
insb
cwtl
outsb
aaa
jne
xor
addr16
xor
and
outsb
inc
inc
add
aam
loop
dec
stos
outsl
cltd
pop
andb
pop
mov
inc
fsubrs
ja
xchg
cmp
or
fnstsw
cmpsb
push
inc
jne
push
jge
cmp
pusha
dec
xor
mov
pop
mov
out
insl
adc
mov
cltd
jbe
inc
sbb
xor
jl
pop
sbb
dec
or
cmp
mov
jg,pn
xchg
je
imul
pop
adc
ja
aad
mov
jnp
push
lret
lcall
pop
pop
bound
es
xor
add
fs
xor
cs
inc
adc
adc
cltd
dec
pop
bound
loop
mov
leave
push
sbb
ja
or
sub
jbe
pop
pop
in
add
outsl
sahf
add
outsb
idivb
cmp
in
cmp
adcl
outsl
fwait
add
inc
sub
xlat
and
into
push
outsb
adc
lret
fiadds
jle
inc
cli
jmp
cmp
xor
fucomp
cltd
fs
sbb
jp
test
cwtl
jge
ret
imul
insl
add
imul
mov
ret
sbb
popf
jb
int3
shlb
bound
push
shl
imul
pop
stc
push
push
jo
shlb
mov
push
mov
push
cwtl
popl
mov
xchg
mov
mov
add
js
inc
int
add
scas
sub
mov
xor
lock
cmp
into
ja
insl
dec
daa
int
push
js
in
mov
add
push
cmpsl
adc
push
out
mov
subl
cmpb
popf
out
inc
jae
jmp
rolb
sub
jno
out
sub
insb
imul
aam
arpl
inc
mov
jns
sub
pop
js
push
sbb
jnp
jbe
iret
mov
mov
dec
pop
inc
mov
and
adc
add
fidivl
call
outsb
fisubs
xor
inc
repnz
insb
jbe
add
jae
data16
ljmp
clc
pop
aaa
adc
jne
xchg
mov
int3
and
gs
imul
pop
sub
mov
jge
mov
ja
insl
push
mov
xor
pop
cs
mov
lret
cltd
ljmp
popa
lods
js
push
ss
push
mov
dec
jno
and
lret
xchg
and
mov
add
pop
dec
pop
outsb
movsb
push
pop
gs
push
cltd
mov
jge
lahf
arpl
mov
lods
bound
pop
aad
mov
sbb
jp
push
jbe
pop
sub
jnp
imul
sarb
lods
loop
inc
hlt
sbbb
pop
clc
add
aas
push
mov
jno
adc
ret
jg
fs
jl
or
add
es
cltd
das
mov
mov
pop
fistps
les
lods
cmp
push
pusha
pop
jbe
pop
dec
jae
pop
pop
arpl
push
icebp
dec
insl
push
jle
js
xchg
les
outsb
js
push
jae,pt
adc
dec
aam
adc
push
std
sub
test
mov
add
std
loop
cmp
mov
sub
mov
cmp
dec
jb
pop
imul
shll
jmp
cwtl
sbb
push
jbe
push
insl
mov
mov
dec
fnstsw
inc
hlt
xor
in
sahf
std
aam
ja
xchg
mov
test
mov
icebp
mov
mov
cmpsl
sbb
sti
and
in
mov
jle
sbb
push
lahf
cld
lea
cltd
jno
xor
stc
test
add
jp
xor
je
shll
in
gs
xor
inc
mov
inc
test
mov
jmp
test
xor
pop
jle
adc
fldenv
dec
jnp
pushw
adc
add
add
cmp
push
ss
or
dec
or
adc
push
sbb
xor
repnz
mov
sub
inc
pop
outsb
in
inc
or
lods
ds
push
dec
push
pop
pop
mov
sbb
xor
cmp
imul
iret
mov
fs
mov
sti
jns
imul
mov
mov
jae
fnstcw
faddl
mov
fcoml
push
fsubrs
mov
push
add
pop
and
or
mov
inc
or
xor
loopne
inc
ss
mov
outsb
mov
sub
sub
mov
inc
roll
jb
cwtl
loop
int
out
inc
stos
les
pop
jbe
lahf
mov
push
into
inc
sarl
and
pop
mov
pop
mov
out
hlt
mov
mov
pusha
mov
push
clc
cmp
ficoml
xor
ds
mov
pop
xor
push
xor
and
jmp
cmp
faddl
in
into
mov
pop
gs
pop
ljmp
dec
pop
sbb
jb
imul
push
arpl
inc
xchg
inc
sbb
clc
imul
std
xor
ja
push
mov
pop
pusha
jl
mov
and
cmp
fdecstp
mov
dec
popa
inc
or
cmp
cmp
inc
inc
mov
outsb
fs
icebp
or
mov
push
loopne
mov
push
inc
aaa
jmp
jne
imul
xor
push
inc
pop
imul
shll
dec
jns
jl
jb
and
jle
mov
or
loop
xchg
mov
ds
mov
out
mov
cmp
jbe
imul
jnp
sbb
jno
aaa
and
dec
popa
pop
das
test
cmovl
mov
jns
inc
xor
insb
cs
pop
popa
sbb
dec
jl
fs
jp
cmp
lahf
xor
jbe
fstpl
pop
dec
dec
xchg
jns
bound
jmp
stos
sub
inc
mov
adc
and
xchg
add
push
xor
push
and
inc
jecxz
sub
das
cs
test
ja
in
jne
xor
scas
cmpsb
sbb
andl
jo
pop
and
into
pusha
dec
icebp
mov
inc
out
les
xor
fistpl
movsl
inc
jnp
pop
fldl
popa
pop
hlt
mov
dec
or
dec
pop
sub
cld
outsb
sub
clc
addr16
pop
loopne
fadds
flds
cmp
xchg
sbb
rcll
loopne
sub
clc
sahf
in
add
popa
pop
jp
jne,pt
and
sahf
mov
push
addr16
cwtl
scas
sbb
pop
jmp
arpl
or
inc
jecxz
orb
cs
in
pop
xor
adc
aaa
dec
movsb
fidivrs
sbb
lds
testb
lea
xor
push
jp
js
lds
dec
push
cltd
sbb
js
ret
addr16
dec
jnp
mov
xchg
pushw
fwait
cmp
push
pusha
xchg
sbb
cltd
sub
xor
les
sub
sbb
xor
sbb
cld
jne
xor
loopne
pop
pop
pop
adc
push
or
pop
xor
push
bound
cwtl
mov
aaa
dec
addr16
xor
xchg
aaa
aaa
les
addr16
pop
wrmsr
cs
jle
jnp
sahf
test
mov
das
sti
push
gs
push
push
mov
xor
pop
outsb
pop
pop
xor
cmp
inc
pop
add
mov
xor
std
repz
dec
test
mov
adc
mov
ss
loope
adc
jl
sbb
inc
sub
xor
sub
pop
arpl
dec
and
aam
dec
mov
js
sub
sbb
push
and
dec
and
add
mov
dec
push
push
inc
fnstenv
and
sub
ret
xor
add
push
pop
outsl
rorl
daa
imul
loop
xor
dec
gs
adc
jno
int3
cmp
push
and
fnstcw
and
cmp
sub
aad
xor
dec
push
push
pop
xor
cmp
jae
fs
dec
sarl
and
xor
std
cmp
loope
jmp
or
adc
adc
inc
andb
add
das
faddl
dec
pop
pop
scas
in
into
push
pop
imul
push
inc
pop
add
and
bound
shrb
sbb
push
inc
sub
xor
cmp
jnp
stos
std
push
and
ds
test
int
in
sbbb
cmpsl
icebp
push
and
adc
mov
jnp
fsubp
or
je
sub
pop
dec
sbb
test
test
add
loope
mov
jns
inc
pop
je
inc
and
dec
xchg
add
push
scas
pop
or
mov
jmp
inc
xchg
bound
mov
add
inc
mov
xchg
sub
add
cmp
test
sbb
sbb
and
sbb
cwtl
and
jbe
mov
mov
xchg
adc
outsb
fwait
and
and
andl
addr16
push
add
pusha
and
test
lahf
xor
or
xor
add
test
jae
dec
cmpsl
iret
mov
pop
and
and
xchg
and
jne
jbe
jnp
push
jl
jns
jp
cmp
arpl
inc
sbb
pop
sub
jmp
cmp
out
out
and
xor
and
jp
add
cmp
or
cmp
pop
sbb
arpl
mov
gs
and
dec
icebp
push
dec
popa
stos
rcrl
into
bound
pop
mov
mov
jg
shrl
je
dec
pop
jge
jp
dec
sub
dec
enter
push
mov
mov
pop
sub
push
mov
sbb
add
sub
push
pushf
loop
push
mov
bound
test
pop
js
les
dec
sbb
mov
jp
sub
cmp
ret
in
pop
dec
loopne
push
fs
sarb
jbe
adc
xchg
jae
jbe
or
je
ds
fs
lock
sbb
xchg
pop
outsb
jbe
pop
enter
jno
adc
or
jne
xor
jne
jbe
cs
rcr
mov
int3
jns
and
loopne
fdivrl
jns
mov
fstl
xchg
xchg
or
fwait
lret
sti
mov
sahf
popf
fcmove
sti
mov
lods
inc
and
push
cmp
push
jp
ret
lret
mov
outsl
push
fs
subb
clc
loopne
mov
fs
xor
pop
into
bound
addr16
push
fstps
clc
or
mov
push
imul
push
push
dec
outsl
imul
jbe
popa
stc
and
mov
in
shll
pop
mov
sahf
loope
fldenv
jecxz
mov
mov
scas
or
adc
sarl
das
jecxz
jle
je
push
ljmp
aas
adc
push
pushf
add
pop
cmp
mov
mov
aaa
sti
enter
mov
adc
add
je
xor
adc
fsubrs
adc
xchg
clc
inc
arpl
push
cmp
mov
test
push
ja
in
pop
jno
jbe
rolb
add
ja
mov
lahf
dec
sbb
fiadds
pop
icebp
mov
fsubr
adc
jbe
xchg
push
repz
sahf
pop
stos
out
mov
js
loope
cli
cmp
jnp
mov
lret
push
mov
mov
imull
int3
ljmp
pop
mov
insl
icebp
pop
fstps
pop
sbb
push
test
add
mov
popf
xor
cmp
jecxz
ds
add
xchg
mov
inc
into
loopne
add
mov
stos
imul
mov
dec
ja
fs
jl
jns
in
scas
fs
inc
rcrb
test
repnz
call
xchg
push
cwtl
push
loope
pop
ss
jmp
jnp
mov
xchg
ficomps
out
mov
push
hlt
stos
jmp
mov
loop
mov
mov
stc
and
mov
cltd
or
pop
cmc
popf
popa
push
mov
xchg
cs
mov
pop
arpl
jecxz
leave
int3
stos
mov
mov
ds
or
out
aad
ss
bound
inc
cmpl
pop
sarl
rclb
loope
xor
aas
ljmp
mov
hlt
int3
test
jbe
add
fmulp
mov
popf
sub
add
pop
sbbb
daa
mov
insb
dec
pop
cmp
imul
push
jl
stos
xor
in
push
scas
arpl
ds
aas
fld1
mov
repnz
and
int
popa
hlt
notb
dec
adc
fs
cld
push
int
pop
jbe
add
shll
pushf
push
push
aas
imul
xor
inc
or
sub
sbb
pop
add
pop
mov
aas
clc
cmp
sub
cltd
cmp
pop
aaa
pop
jge
dec
fcmovnb
add
push
fisubl
xlat
xor
leave
mov
fs
lea
and
pop
outsb
push
dec
fstps
in
pop
jle
jno
fisubs
movsl
xchg
mov
ss
stos
xlat
mov
sub
lahf
sub
imul
in
xchg
pavgb
push
les
push
xchg
push
mov
test
inc
mov
or
xchg
inc
les
test
inc
fcoms
in
imul
test
mov
cltd
lods
arpl
jns
stc
jl
movsb
sub
jle
pop
dec
push
jbe
es
pop
xchg
call
inc
inc
jns
xor
push
inc
les
push
cmp
inc
or
repnz
inc
lret
dec
jecxz
mov
movsl
insb
mov
xor
add
dec
pop
jne
cmp
std
dec
push
pop
inc
xor
pop
mov
clc
inc
and
jbe
push
inc
inc
mov
movsl
sbb
inc
loope
shrl
add
cltd
xchg
aad
mov
pop
jno
mov
cmovbe
inc
divb
sbb
dec
jmp
cmpsl
pop
mov
enter
or
inc
jnp
xor
xor
fsubs
pop
add
mov
inc
scas
aas
adc
jae
or
jb
aas
xor
loopne
jg
cmp
stc
or
adc
xor
pushf
inc
icebp
xor
mov
jno
or
aas
shrl
xchg
and
mov
jecxz
xor
test
out
push
testb
loop
out
mov
aas
fidivs
stos
movsb
repnz
divl
or
int3
inc
divl
and
jbe
loope
mov
jge
xchg
cs
imul
test
std
test
sub
repz
dec
pop
dec
mov
mov
add
push
aas
jno
dec
jnp
pop
mov
mov
pushf
pop
mov
push
ds
movsl
aas
mov
add
jne
dec
xchg
out
out
sub
adc
repnz
inc
in
dec
pop
ret
inc
scas
xor
push
jp
into
mov
and
cld
sub
jge
and
xor
pusha
xchg
push
dec
xor
fldcw
inc
xchg
dec
jb
add
pop
bound
and
mov
faddl
inc
xor
fisttpll
inc
pop
int
sub
push
push
adc
aas
push
data16
push
dec
addr16
dec
loopne
fimuls
inc
fists
pop
push
arpl
adc
jp
sbb
sbb
int3
movsl
sub
push
add
jnp
or
add
js
in
push
xor
push
sub
aad
sahf
dec
test
mov
jae
fstl
inc
into
sbb
fildll
jecxz,pn
pop
stc
sub
sub
bound
push
mov
bound
jne
xchg
arpl
pushl
movsb
fs
jne
pop
repnz
jnp
ret
xor
cmpsb
xchg
fisttps
cmpsb
jge
xor
and
test
xor
cmp
pop
pop
nop
jl
pop
fldcw
leave
xor
jge
call
cld
ror
cltd
ss
call
cmp
insl
mov
lret
cltd
js
addr16
pop
pop
psubw
jno
ret
push
push
jnp
jno
cmpsb
push
cltd
sbb
jne
jb
shl
incl
push
mov
inc
ds
pop
sti
loopne
sbb
test
ljmp
push
pop
loop
loopne
lret
jecxz
dec
push
fsubrl
xor
cmp
push
dec
jg
out
icebp
jno
push
bound
je
sub
add
xlat
loop
cltd
cmpsb
aaa
ror
addr16
js
ficoml
aam
aaa
stos
cmp
into
cmp
or
pop
lock
out
xor
scas
dec
xchg
sub
mov
jge
xchg
pop
jp
add
mov
loop
aaa
ds
das
inc
adc
sbb
fwait
and
inc
mov
ss
sarl
pop
lods
rcrb
fndisi(8087
and
mov
mov
es
cwtl
rcrb
loope
test
jg
cmc
ljmp
outsb
mov
dec
popf
jl
add
push
push
rcr
cltd
jnp
push
dec
scas
push
jns
jne
cmc
jb
out
inc
in
lret
push
jns
std
push
push
out
cmp
pop
dec
jnp
orb
pop
cwtl
pop
out
insb
add
push
pop
push
mov
loop
sahf
daa
insb
cmp
je
pop
sbb
jne
test
ja
inc
pop
mov
ja
or
lea
movsb
xchg
aas
and
ret
incb
mov
jp
xlat
inc
push
fnstenv
push
loope
xor
outsl
pop
sarb
mov
std
xlat
in
jnp
loopnew
pop
addb
jp
sbb
jp
add
or
xchg
ficoms
andb
xchg
outsb
mov
pop
ss
ret
or
sub
and
loope
outsb
and
mov
xor
sub
push
and
cmp
loop
shll
pusha
pop
push
jnp
int
xor
inc
xchg
pop
shrl
or
popa
fisttpll
out
je
push
into
dec
sahf
shl
cmp
roll
pusha
pusha
jbe
test
jne
push
addr16
pop
sub
pusha
test
xor
addr16
lahf
cmp
push
pop
lods
push
or
mov
ljmp
pop
xchg
jae,pn
inc
loopne
aas
jae
sahf
popf
cmp
xchg
fildl
pop
daa
xor
and
mov
dec
mov
sbb
addr16
lret
lahf
enter
jnp
aas
jno
mov
dec
int3
in
lret
jmp
test
push
es
or
into
cmp
cmc
push
pusha
int
jge
dec
or
and
mov
pop
int
dec
mov
mov
js
and
xor
icebp
sbb
and
or
jae
and
and
mov
mov
mov
adc
js
cmp
cmpsb
pop
lret
addb
add
pop
sub
pop
xor
in
fwait
stos
fiaddl
mov
dec
push
pop
jle
dec
fs
filds
pushf
dec
int
dec
das
xchg
jle
ss
or
dec
or
or
add
loope
jno
cmp
mov
test
scas
imul
fs
xchg
pop
fistps
dec
push
dec
mov
pop
push
jl
push
enter
sbb
mov
mov
jbe
jns
divb
jb
xor
mov
or
push
popa
push
cld
xlat
mov
cmp
cli
aas
xor
fdivrs
and
dec
sti
sub
push
movsl
cmp
mov
and
aad
into
or
in
xchg
aam
mov
push
mov
daa
pop
js
dec
adc
daa
fcmovne
xor
jnp
sbb
fcmovne
sub
xor
pop
push
mov
fucomp
xor
dec
mov
and
sub
and
push
and
inc
sub
jbe
or
loopne
push
cld
sub
decb
jne
pop
outsb
into
or
mov
test
sbb
sub
push
xor
cvttps2pi
sbb
out
or
call
sub
hlt
add
push
dec
inc
mov
xchg
push
loope
das
cmpsb
pop
lahf
aas
es
fildll
pop
notl
jne
sbb
inc
lcall
dec
bound
adc
xor
add
jo
xor
adc
adc
xchg
rcrb
sub
fmull
sete
stc
ljmp
es
sbb
inc
lock
int
clc
jno
adc
dec
xchg
js
fnstsw
jge
mov
push
int3
or
dec
pusha
push
push
push
mov
xchg
push
lret
dec
add
push
dec
sub
sbb
in
ss
pop
cmp
insb
push
bound
push
push
xor
sub
dec
dec
imul
loopne
pop
xchg
lods
loopne
xor
mov
mulb
pusha
les
pop
pop
fnstcw
jne
data16
arpl
mov
adc
inc
loope
pop
pop
mov
pop
cmp
addr16
pop
loopne
fdivrs
and
cli
out
scas
in
xor
push
cmp
or
pop
or
in
pop
cmpsb
push
xchg
out
aam
mov
mov
shlb
jo
dec
outsb
insb
popa
imul
mov
insl
aad
sti
popf
cmp
xor
push
js
fcompl
xchg
push
enter
gs
ss
sub
push
out
in
loop
add
mov
je
cmp
adc
sbb
addr16
xchg
sahf
add
aas
shrl
das
add
mov
int3
arpl
jns
xor
adc
sahf
cwtl
frstor
rolb
add
adc
jcxz
push
out
fadds
push
push
add
pop
add
push
mov
adc
add
push
adc
xor
shll
ret
lods
aaa
adc
jbe
test
fisubl
cmp
pop
pop
push
cmc
jb
push
push
add
push
bound
jmp
pusha
mov
imul
adc
xlat
mov
pop
pop
daa
fs
jp
bound
fwait
js
fsubrl
sbb
pop
xlat
in
loop
sbb
push
dec
in
and
sarl
inc
je
movsb
sbb
imul
dec
lock
movsl
inc
inc
mov
push
bound
add
pop
loope
push
mov
xchg
inc
jae
jnp
testl
jb
dec
scas
loope
mov
jns
iret
addr16
cmp
sbb
aad
jbe
and
pop
cld
loop
mov
or
mov
in
mov
sbb
outsl
gs
push
nop
in
pop
adc
or
cmp
xchg
jnp
imulb
pop
sbb
lock
daa
add
das
pop
sbb
push
ss
or
in
call
sub
dec
sbb
bound
xchg
dec
pop
imul
pop
jno
inc
lock
pop
mov
mov
inc
push
push
or
pop
push
fstpl
sbb
addl
and
cs
pop
in
jnp
adc
or
rorl
jge
add
dec
gs
fistps
sahf
pushf
mov
push
sub
fisubs
outsb
test
ret
pop
mov
or
pop
insb
loope
std
and
cmp
popf
xchg
pushf
lods
aad
into
mov
dec
imul
xchg
pop
pop
dec
add
lea
xchg
cmp
pop
cmp
icebp
mov
daa
ds
arpl
imul
test
add
aam
cmp
notl
jnp
pop
and
sbb
jge
pop
mov
push
xlat
pusha
or
or
sub
ja
sub
push
cwtl
int
lahf
mov
adc
test
repnz
cmp
cmp
sub
dec
pushf
xor
adc
or
pushf
xorb
popf
cmp
or
test
push
aaa
cmp
or
pop
pop
lds
sar
mov
or
cmpsl
ss
popf
xor
cmc
or
cs
lods
repnz
fistpll
fsubrp
dec
arpl
gs
pop
ds
xor
pusha
addr16
clc
pusha
cmp
test
push
and
cmpsb
fldenv
jle
dec
push
push
out
aad
cmp
mov
pop
and
xchg
dec
xor
pop
xchg
dec
push
pop
cmpsb
push
cmp
imul
inc
jne
and
negl
pusha
pop
jbe
mov
fcoms
js
fisubrs
int
aam
lahf
jmp
or
stos
mov
sub
inc
fdivp
fwait
sub
fsubr
jecxz
stos
sub
push
sub
in
sub
and
pop
stos
loope
popa
mov
xchg
leave
adc
lds
push
pusha
out
jnp
ret
fistps
xchg
push
loopew
arpl
sub
jp
add
dec
cwtl
out
roll
ror
cwtl
and
pop
mov
data16
cwtl
push
xor
aas
jle
addl
and
add
dec
outsl
xlat
inc
insb
bound
jbe
cli
rclb
addr16
fcompl
cltd
sub
cmpsl
aam
es
sti
imul
cmp
popa
pusha
repz
cmp
into
jp
mov
movsb
lret
aas
shrl
rcll
ret
fnsave
popa
mov
ficoml
ljmp
pop
ss
push
hlt
scas
pop
mov
mov
imul
int
and
imul
iret
inc
cs
lock
jle
out
push
sbb
push
sub
sbb
push
test
pop
and
mov
cmpsb
loope
movsb
icebp
movsb
cmp
dec
xor
inc
and
shll
xchg
jl
movsb
pop
add
pop
cmpsb
test
sub
xor
stc
add
cltd
lock
das
movsb
out
jb
or
in
mov
mov
xchg
xor
xor
outsl
in
iret
test
push
out
xchg
cld
cmp
dec
insb
dec
pop
icebp
ds
jbe
adc
loopne
loope
mov
cmp
in
mov
add
add
pop
push
and
loope
ficomps
flds
out
fnstcw
mov
lret
outsb
decb
jae
mov
push
jp
jbe
imul
mov
andb
mov
repnz
pop
mov
sub
je
sti
insl
test
repnz
insl
and
mov
in
dec
lcall
pop
insl
aas
sbb
int
cmpsl
lret
xchg
adc
add
mov
shlb
mov
jl
mov
push
mov
dec
jns
cmp
aad
mov
or
inc
adc
das
sub
lcall
clc
int3
inc
icebp
cmpsb
cmp
sbb
pop
aam
jmp
xchg
xchg
push
dec
gs
in
mov
lret
and
iret
ret
adc
inc
cmp
subl
inc
push
jbe
arpl
stos
ss
cmp
jp
js
cmp
pop
push
dec
cs
pop
jns
sar
das
and
jge
push
movsl
mov
repz
insb
and
or
mov
pop
and
adc
sbb
clc
push
stc
data16
cmp
jno
cmp
mov
pop
add
lock
fcompl
jno
rcll
add
aas
jnp
add
fcoml
inc
es
shll
jl
push
xchg
xor
or
stc
pusha
jnp
jl
xchg
jns
jp
adc
sbb
fstpl
pop
dec
xor
fs
popa
mov
pop
aas
fsubrl
jo
insl
xor
dec
pop
ja
jne
je
jbe
jnp
pop
and
jl
jns
dec
jp
cld
or
stc
dec
mov
pusha
jle
dec
mov
add
and
pop
dec
pop
add
add
frstor
bound
aaa
pop
push
arpl
or
sbb
inc
mov
pop
arpl
std
xchg
int
xchg
in
inc
imull
push
push
pop
xlat
jecxz
stc
cmpsl
push
add
mov
xor
imulb
daa
push
dec
loop
push
xchg
adc
and
xchg
aam
mov
fs
sub
mov
scas
nopl
sahf
adc
arpl
arpl
mov
test
add
push
pop
xchg
arpl
pop
je
out
jmp
and
je
sbb
imul
and
int3
pop
mov
dec
imul
jb
aas
cmp
jge
lret
ss
push
dec
aaa
dec
pop
test
divb
pop
pop
mov
ds
or
mov
mov
xorb
loope
in
roll
xchg
gs
shlb
jmp
outsl
and
pusha
popa
pop
xchg
shrb
push
mov
sub
xchg
in
adc
or
iret
in
insl
sbb
mov
fcoms
fidivrl
shrl
pop
aad
mov
push
jbe
into
cmp
and
shlb
icebp
adc
lcall
xchg
cmp
imul
add
out
js
mov
fstl
scas
inc
xchg
shlb
mov
clc
stc
mov
cmp
jne
jns
mov
mov
pop
daa
sub
daa
adc
cmpsb
pop
pop
je
or
jne
push
mov
adc
dec
mov
outsb
dec
mov
fsubrl
cmp
add
add
jnp
mov
sub
sarb
dec
pop
int3
mov
addr16
pop
push
jp
daa
push
pop
pop
gs
xchg
mov
pop
insl
out
jnp
das
shll
in
dec
add
outsb
loope
inc
pop
imul
push
jne
mov
jbe
imul
xchg
cmpsb
mov
add
xchg
jecxz
cmc
jnp
mov
fs
xor
das
jle
dec
movsw
imul
add
push
mov
jns
outsl
xchg
pop
dec
cltd
push
insb
lahf
jge
imul
add
mov
xchg
push
cmp
mov
push
je
std
push
sarl
inc
xchg
in
inc
dec
ds
fldenv
addr16
lret
bnd
dec
popa
and
add
cmp
push
shrl
decl
sub
ret
adc
dec
jb
aaa
push
and
gs
js
arpl
or
or
pop
xchg
scas
fcomip
sahf
lcall
sbb
xor
push
popa
push
das
lea
mov
sbb
fs
pop
out
push
pop
mov
cmp
jg
mov
mov
pop
fwait
loope
push
mov
aas
fs
mov
sub
andb
push
in
pop
sbb
fcmovnbe
lret
mov
adc
xlat
and
imul
pusha
sbb
sub
dec
jnp
sub
and
hlt
sahf
cld
loope
pop
or
or
idivl
jns
int
xchg
cmp
cmc
xor
mov
popf
jo,pt
jns
sahf
or
mov
sub
mov
mov
jnp
cmpsb
lcall
es
in
mov
cmpsl
mov
fistl
icebp
rolb
test
bound
gs
adc
data16
pop
jle
pop
jle
test
mov
clc
imul
cmpb
fs
cmpsl
inc
cli
fisubs
data16
shr
adc
sub
movsl
sbb
dec
fs
jne
jns
fadds
inc
sbb
sub
inc
mov
sbb
add
fstl
fstp
arpl
outsl
inc
repnz
faddl
je
pop
push
mov
clc
push
pop
cmpb
mov
push
dec
pop
test
test
mov
dec
idiv
into
addr16
dec
xchg
mov
mov
ss
jnp
dec
ds
ds
mov
mov
aaa
subl
push
lds
xor
subb
xchg
add
in
loope
daa
push
cs
rcl
dec
ljmp
pop
fdivl
aam
xchg
xor
ud2
jbe
outsb
nop
insl
fistps
sub
xor
sbb
xor
mov
push
and
pop
adc
jmp
pop
loope
popf
cmpsl
push
shl
cltd
mov
cmp
sbb
dec
insl
cmc
outsb
sbb
inc
jb
fiadds
jmp
or
loope
mov
add
push
push
data16
stos
and
mov
mov
jecxz
cmp
and
nop
sbb
je
mov
jno
pop
in
jp
lcall
scas
ja
outsl
mov
push
jmp
xlat
pop
scas
je
into
test
sub
mov
cwtl
in
adc
or
mov
gs
popa
cmp
jns
jne
and
sbb
push
gs
popf
push
push
add
jns
pop
xor
mov
jp
pop
add
movsl
sbbb
push
push
pop
in
pop
lods
rcrb
leave
add
pusha
hlt
pop
jp
pop
idivl
add
sar
jl
mov
adc
arpl
cmp
data16
push
sbb
adc
gs
addr16
outsl
cld
jmp
adc
sub
jns
push
mov
nop
jecxz
cwtl
arpl
add
adc
mov
jmp
lea
dec
filds
cmp
lret
jbe
jl
push
xor
pusha
add
fsubs
push
loope
pop
imul
mov
pop
add
jecxz
into
rorb
pop
adc
add
jne
and
inc
mov
jae
mov
sub
adc
out
mov
mov
adc
pop
arpl
push
ficoms
mov
pop
pop
insb
sub
cs
cmc
pop
adc
outsb
push
or
adc
pop
mov
inc
mov
insb
cmp
cli
pusha
cmp
inc
mov
inc
stc
push
mov
mov
les
das
int
mov
xor
add
pop
inc
stos
and
ds
inc
icebp
add
stc
and
popa
xchg
inc
push
jle
inc
adc
pop
mov
fstpt
push
sub
outsb
jp
arpl
outsl
cmp
add
jg
cli
pop
outsb
jl
add
jns
mov
mov
int
pop
gs
dec
cmpsb
dec
je
lahf
out
out
xchg
loope
inc
movl
xchg
mov
sub
push
mov
xor
insb
sbb
dec
jle
pusha
es
xchg
out
ja
cmp
leave
xor
add
dec
mov
stc
gs
mov
test
fs
adc
jmp
aas
into
sub
adc
mov
inc
ret
cmpsl
loopne
push
loopne
ds
mov
jp
cmp
mov
xor
pop
dec
inc
testl
mull
push
or
testl
inc
ss
xor
repnz
inc
inc
xchg
inc
push
popf
icebp
mov
adc
sbb
loopne
cs
xor
inc
lret
cmp
bound
adc
sbb
mov
add
in
add
cmp
sub
iret
jno
jmp
les
out
xor
pop
fldt
sbb
mov
unpckhps
les
mov
mov
test
push
in
fcoml
dec
daa
and
add
sub
aaa
jnp
movsl
cmp
dec
push
packssdw
jge
pop
mov
out
inc
lret
dec
jp
leave
add
dec
pop
mov
and
js
jne
jge
call
ficoms
insb
dec
repnz
sub
mov
bound
pusha
mov
ds
insl
clc
fs
xor
push
and
push
pop
sub
adcl
aas
pushf
ja
push
test
ds
jmp
dec
push
pop
push
fwait
stos
imul
push
sub
add
imul
xchg
mov
jl
les
pop
push
push
clc
lods
addr16
movsb
das
xor
jle
sahf
cwtl
push
movsb
push
pop
pop
pop
mov
jnp
divb
mov
pop
mov
jg
mov
inc
push
pop
rorb
fs
sbbl
pusha
pop
punpcklbw
mov
push
lret
testb
or
push
movl
jle
cmp
loope
pop
movsb
cs
dec
pushf
fldcw
imul
mov
mov
jnp
sbb
pusha
dec
jns
out
bound
jnp
outsb
pop
out
in
xchg
xorl
outsl
push
pop
push
mov
std
js
or
in
jnp
mov
aas
or
push
stos
push
jne
jb
adc
dec
jnp
cli
jno
out
sub
cwtl
cmp
sub
jne
sahf
xor
movb
in
idiv
or
sbb
jno
mov
xchg
sub
out
cmc
cltd
and
ds
iret
dec
pop
out
mov
daa
jne
cltd
sbb
das
stos
mov
mov
pusha
push
xchg
loopne
loop
stos
xchg
or
inc
mov
movsb
sti
push
mov
adc
loop
sbb
neg
add
test
aad
cli
inc
loop
mov
pop
sbb
inc
and
xchg
or
sahf
in
call
fwait
jle
xchg
imul
addr16
sbb
add
jecxz
pop
xor
sahf
stos
xor
mov
and
sbb
fiaddl
fwait
cli
sub
jge
inc
mov
inc
add
mov
push
or
sub
mov
rorb
jae
gs
mov
dec
dec
xchg
rcl
insl
scas
movl
pop
insl
push
xchg
outsb
adcb
iret
jp
mov
int3
lret
xor
pop
fsubrl
fisubs
dec
arpl
jns
ja
test
add
pop
js
jae
adc
ljmp
push
jnp
jno
in
ljmp
clc
inc
or
js
les
sub
das
into
ds
addl
dec
dec
stos
lods
bswap
jne
rcrb
or
fwait
push
daa
dec
jp
jmp
outsl
dec
cli
jns
cmpsl
sub
sub
add
push
jb
xorl
adc
push
push
cmpb
addr16
subl
out
adc
sub
sub
addr16
xor
dec
mov
imul
aaa
pushl
push
fadds
gs
outsb
jecxz
mov
dec
data16
adc
popa
ja
test
aas
shrb
fdivrp
pusha
jnp
cmp
sbb
popf
jns
lcall
movsb
mov
aas
fmull
sub
jbe
jmp
push
daa
sbb
add
popa
mov
add
mov
xor
loop
rcrl
lret
mov
outsb
movsb
and
pop
cmpsl
push
cld
pusha
scas
andl
pop
cmc
pop
add
xchg
mov
fidivl
dec
pop
xchg
dec
jbe
mov
or
or
xor
subb
sub
rcrb
fmull
cltd
sub
cmp
pop
xor
cmc
out
bound
xor
stc
bndldx
movsb
mov
dec
push
inc
sub
fiaddl
pusha
dec
bound
aaa
std
negb
mov
pusha
xor
aaa
fisttpll
and
cmc
out
mov
xlat
mov
mov
loopne
out
fistpll
cmp
loope
mov
pusha
jb
xor
cs
xor
nop
xchg
sbb
lods
addr16
sti
shl
fsubs
dec
add
mov
ds
mov
cmp
test
les
pop
gs
cmp
pusha
add
out
dec
cmp
cmp
push
pusha
inc
xlat
call
jb
ret
mov
jne
add
or
or
jns
jbe
hlt
rolb
inc
gs
pop
pop
push
push
ja
cmpb
sub
sub
xor
hlt
repnz
insl
dec
sbb
sub
mov
enter
fidivl
push
jne
sub
mov
sub
sbb
call
mov
scas
pop
xor
pop
sbb
jg
sbb
sub
or
pop
out
mov
and
or
hlt
bound
or
xor
ja
xchg
jne
dec
outsl
sbb
add
lock
popf
movsb
in
aam
mov
and
pop
enter
jbe
push
pop
sbb
out
push
jne
and
testl
negb
xor
int
push
push
jne
imul
in
lods
dec
jp
lods
sahf
push
dec
sarl
add
sbb
mov
xchg
dec
jns
stos
xchg
sub
sbb
add
inc
mov
jl
inc
ds
cmp
jge
jl
jo
ret
jno
xor
jo
xchg
push
adc
sbb
insb
xor
add
fldenv
mov
clc
push
ficoms
pop
scas
sbb
gs
inc
push
mov
outsb
push
int3
add
push
loopne
pop
js
inc
ja
pusha
push
loope
jbe
jno
jns
sub
pop
cmpsb
push
sbbb
push
adc
iret
fcmovnu
adc
movsb
fst
out
pushf
outsb
inc
divb
xlat
es
aas
pop
xlat
xor
ds
aad
cwtl
leave
rcll
xchg
mov
sahf
inc
orl
lret
or
es
or
notl
push
or
je
jnp
mov
ss
lret
pop
mov
das
int3
xor
or
scas
stos
add
cltd
or
ss
pop
aas
push
xor
aas
test
xchg
dec
mov
jbe
sub
and
loop
mov
push
aam
sti
arpl
jns
mov
pop
inc
shl
pop
push
mov
and
push
insb
out
sbb
ret
jns
fdivrl
je
dec
fs
shll
fistl
sbb
dec
andl
xchg
inc
add
test
imul
daa
inc
xor
pop
jno
lahf
sbb
xchg
cs
pop
mov
lcall
clc
fs
fdivl
cli
popa
adc
add
les
push
out
lea
ds
jl
out
jle
roll
popf
xchg
mov
dec
cmp
adc
pop
dec
pop
cmp
jbe
fidivrs
sti
cmp
cmp
xor
inc
leave
jl
lahf
int3
inc
insl
cltd
lea
push
add
and
dec
sub
xchg
test
loopne
pop
test
pop
adc
mov
arpl
pusha
std
mov
push
daa
push
arpl
jl
sub
pop
mov
add
mov
cmp
in
xor
dec
jnp
mov
out
je
jne
sbb
in
fisttpll
std
jne
hlt
outsb
mov
push
subl
fcoms
out
test
pusha
stos
int
enter
inc
xor
iret
mov
pop
xchg
pop
adc
xor
jne
bound
jmp
xchg
inc
inc
pop
pop
push
xor
es
xchg
loope
add
jge
dec
mov
xchg
in
leave
mov
pop
push
jle
scas
cmp
mov
jge
sbb
stc
inc
add
jnp
popf
ljmp
pop
cmp
push
lea
adc
and
bound
mov
mov
imul
lahf
push
mov
out
or
out
cwtl
sub
ret
dec
pop
and
dec
jle
dec
and
ret
dec
jl
fwait
pop
jae
or
stos
in
dec
jns
pop
ret
arpl
in
loope
mov
and
fistps
jle
inc
pop
xlat
test
xor
aas
ds
loope
enter
faddl
daa
in
arpl
int3
inc
xchg
fidivrl
cmp
push
cwtl
leave
outsb
sbb
and
or
push
sub
aas
sbb
lea
adc
daa
test
pop
scas
push
add
inc
adc
bound
jmp
mov
pop
out
fisttpll
fists
pushf
jp
jne
dec
mov
cmp
daa
pop
xor
mov
jge
fs
push
ja
popf
sbb
popa
mov
sub
sbb
addr16
xor
cli
int3
add
mov
mov
subl
pop
jp
push
push
and
push
out
mov
gs
pop
pusha
jne
out
jp
mov
pusha
fs
jp
adc
rcl
xchg
inc
mov
pusha
pusha
push
jbe
mov
outsl
xor
insb
xor
jbe
mov
inc
shl
test
outsb
dec
sub
out
mov
push
jmp
popf
xchg
adc
pop
scas
push
dec
dec
jae
xorb
inc
dec
insb
je
ret
je
loopne
enter
jb
jb
ja
push
js
jne
jbe
adc
aas
out
fnstsw
jns
jp
pop
pop
mov
mov
clc
test
into
ja
aaa
js
jne
aaa
js
jne
js
jne
fnstsw
jne
jbe
mov
dec
jns
jp
push
pop
xor
or
fisttps
es
pop
mov
icebp
xchg
pop
sbb
icebp
xchg
jne
arpl
fs
popa
and
fnstsw
push
mov
adc
xlat
mov
das
mov
arpl
push
push
inc
push
pop
mov
push
scas
sub
loopne
dec
outsl
jp
imul
insb
divl
insb
fisttps
ds
rorb
imul
mov
roll
xor
pop
js
popf
int3
insl
cmpsl
hlt
popf
lcall
pop
fldcw
test
out
enter
sbb
jge
ss
sbb
pop
mov
popa
and
loope
inc
push
xchg
cmp
iret
sub
mov
pop
mov
mov
inc
mov
ss
fs
loopne
jecxz
movsl
mov
test
mov
shll
lret
push
ds
lahf
sub
test
jmp
ljmp
sbb
dec
pop
pop
xchg
lcall
hlt
sbb
jmp
shrl
pop
xlat
pop
push
pop
decl
sub
pop
ljmp
cmp
pop
insb
cmp
xchg
test
lahf
out
pop
pop
xchg
xlat
add
add
fs
mov
xchg
xchg
jmp
clts
mov
popa
jmp
imul
ss
sbb
xchg
pushf
add
ret
push
push
fistpll
lahf
pop
mov
pop
into
insl
imul
jo
into
xchg
ss
jecxz
lret
gs
pop
ret
push
xchg
out
imul
and
dec
push
jnp
mov
dec
call
mov
frstor
pop
inc
push
jnp
cmpsl
xchg
je
arpl
mov
leave
popf
sbb
popa
push
pop
gs
lock
mov
pop
insb
out
int3
dec
push
jnp
add
cmp
sub
push
jb
add
xor
sbb
sub
insb
dec
addr16
xor
mov
hlt
pop
cld
xchg
dec
push
bound
or
pop
add
xor
or
mov
cmpsb
daa
arpl
adc
lahf
push
nop
mov
in
ds
push
and
jnp
loopne
test
mov
adc
aam
popf
insl
aam
jb
xor
sub
xchg
dec
nop
push
push
scas
or
pop
push
lcall
adc
mov
add
insb
pop
out
jae
popa
mov
std
sbb
push
jns
subl
add
je
pop
fcomip
pop
pop
andl
pop
inc
fsubr
int3
jp
cmp
push
arpl
aaa
sub
inc
mov
mov
sti
pop
inc
int3
das
xor
jl
mov
xchg
add
mov
mov
mov
or
push
das
lea
out
fdivs
xchg
cmpsl
pusha
sub
xor
dec
aaa
xor
xor
cs
jle
imul
cmp
inc
push
out
push
ret
mov
jae
jp
and
push
or
pop
jp
or
xor
cmp
xorb
mov
mov
jl
adc
pop
enter
pop
fsubs
fstpl
pusha
dec
aaa
pop
loopne
fstps
sbb
pop
icebp
jge
push
fs
fidivrl
push
dec
and
clc
insb
test
jnp
adc
imul
mov
and
aam
iret
aam
or
push
sbb
inc
adcl
imul
enter
push
jno
mov
add
ret
mov
xchg
and
add
out
daa
mov
clc
adc
mov
sub
lcall
sbb
arpl
pop
movsb
leave
dec
je
jne,pt
aad
out
cmc
lret
daa
push
testb
cmp
sub
sbb
jne
mov
mov
int3
dec
bound
pusha
cmp
aam
push
and
fsts
fnstenv
push
xor
dec
gs
inc
outsb
movsb
push
push
lods
adc
mov
sub
mov
mov
jno
jae
sarl
cmp
lea
or
lea
imul
ja
call
and
and
ljmp
mov
decb
xchg
mov
dec
jmp
lods
das
decb
aaa
cmpb
mov
mov
dec
aad
in
pushf
jae
pop
nop
pop
inc
cld
insb
mov
lahf
push
jle
js
jle
test
enter
pop
add
int3
loopne
mov
sarl
dec
arpl
loope
pusha
imul
imul
push
pop
mov
adc
push
pop
push
rcll
in
jne,pn
shll
inc
inc
daa
xchg
jo
ds
mov
jnp
xchg
and
les
in
push
and
xor
lahf
lcall
cmp
shl
mov
jl
ss
push
test
lahf
cmp
outsb
lock
pusha
js
jnp
js
or
sbb
pusha
insb
leave
cmp
mov
ficomps
jno
lret
test
dec
dec
stos
cmp
in
push
loope
add
cmpsb
jns
daa
punpcklbw
inc
push
jnp
jno
and
pop
and
push
jns
mov
adc
sbb
ja
ds
pop
xchg
and
gs
je
in
aas
push
dec
ds
popa
sbb
ret
pop
clc
inc
and
pop
push
ss
js
push
faddl
fldcw
jl
pusha
jb
inc
popa
cmp
leave
push
lret
ds
jge
jbe
sbb
clc
cmp
cmp
jbe
sub
or
ds
cmp
stos
test
inc
orl
daa
lcall
cmp
cmp
inc
negb
into
pop
inc
imul
scas
mov
cmpsb
add
inc
aad
jae
inc
addr16
push
aaa
clc
inc
cmpsl
push
out
lret
mov
cmp
jbe
push
pop
dec
inc
or
inc
ficoml
mov
ds
inc
icebp
add
addr16
aas
clc
inc
add
loopne
mov
inc
pushf
inc
icebp
jge
jp
inc
filds
popa
xchg
inc
aas
clc
inc
sub
dec
lret
cmpsl
pop
inc
outsl
dec
inc
sub
inc
int3
inc
icebp
jge
jnp
inc
inc
shr
das
orl
cs
int3
inc
icebp
add
inc
pop
push
xchg
inc
cli
leave
dec
pop
xor
push
inc
mov
inc
int3
dec
icebp
add
adc
xchg
xchg
addr16
aaa
psubusw
rorl
icebp
add
cs
inc
and
cmp
aas
clc
inc
add
jle
bnd
pop
xor
popf
inc
jnp
inc
imul
stos
xchg
fcomps
cs
pushf
inc
fnstsw
or
inc
mov
sarl
cmp
pusha
inc
lret
subb
hlt
test
imul
inc
and
inc
push
push
inc
fldl
outsb
cli
push
dec
inc
shlb
bound
jg
dec
imul
sbb
sbb
mov
pop
pop
addr16
cmpl
adc
cwtl
sbb
or
jnp
mov
andb
inc
imul
inc
jl
inc
xchg
mov
mov
xor
ds
inc
ds
dec
jmp
lret
mov
sub
je
push
add
pop
sbb
mov
or
add
lret
add
sub
add
jp
dec
inc
or
std
test
popa
pop
out
push
stos
inc
sahf
xchg
cmpsl
mov
idiv
test
imul
lret
les
iret
fcoms
inc
xchg
xor
inc
daa
mov
pop
ljmp
mov
inc
xlat
add
jecxz
inc
cmp
aam
int
shrl
les
push
xchg
dec
scas
or
cwtl
push
stos
dec
mov
test
aad
push
loop
push
add
add
add
push
pop
rolb
xchg
sub
aaa
std
clc
data16
cmp
mov
popf
pop
and
sub
add
ss
pusha
das
dec
jnp
out
pop
dec
pop
jg
xor
mov
call
dec
mov
sbb
ret
add
ds
mov
pop
aaa
or
inc
push
pushl
dec
or
or
mov
mov
sbb
dec
pop
inc
lahf
pop
loopne
mov
dec
or
adc
lock
add
push
iret
xor
out
daa
push
mov
hlt
cmp
pop
pusha
jl
mov
cs
adc
fucomp
and
xor
and
xor
fimull
loop
pop
shl
jle
sbb
mov
leave
loopne
or
jmp
test
leave
cwtl
or
lds
popf
lret
sahf
xchg
into
pop
mov
lsl
sub
dec
jbe
stos
dec
dec
dec
sub
out
push
loope
mov
xor
sub
xor
xor
cld
xor
xor
add
push
ja
loopne
cmp
mov
mov
inc
lret
outsb
fs
fcmovnbe
xor
out
in
loope
iret
lahf
pusha
dec
fimull
daa
push
out
jg
xor
push
into
addr16
cs
jne
and
fidivrl
testb
dec
rcrl
dec
jle
and
lret
jge
inc
push
lahf
cmp
shl
popf
adc
jl
and
and
rcll
xchg
mov
test
fs
fcompl
jnp
ljmp
cmc
lods
push
setl
fwait
push
dec
ds
push
imul
push
scas
movsl
leave
push
outsl
adc
inc
icebp
dec
loope
inc
cmp
dec
fsubs
fwait
psubusw
fimull
xor
dec
push
sub
dec
mov
jl
test
dec
mov
xor
ljmp
inc
int3
xchg
hlt
cld
pop
mov
xlat
stos
test
mov
pop
lret
mov
pop
inc
mov
dec
jp
and
imul
bound
aas
jno
and
jns
mov
aas
lcall
imul
mov
add
pop
push
icebp
scas
jne
out
jg
fnsave
jnp
imul
fwait
pop
inc
pop
jbe,pn
jnp
dec
pusha
mov
push
jle
dec
aaa
and
mov
and
pop
pop
jl
lcall
jp
arpl
jnp
pop
lret
and
inc
divb
sub
aad
cmpl
outsl
jbe
dec
cwtl
leave
sbb
xor
mov
inc
and
mov
dec
sub
rcrl
and
std
inc
inc
xchg
mov
and
inc
mov
and
mov
jle
aaa
adc
pusha
bound
mov
mov
mov
mov
shll
shr
cmp
mov
jbe
inc
sub
test
push
ja
cld
push
adc
dec
jbe
mov
sub
pop
bnd
inc
mov
cmp
inc
popa
scas
jle
cs
rcr
sub
push
sub
or
push
xchg
jbe
fisttpll
sarb
pop
pop
xor
shlb
out
jl
fnstcw
inc
xor
rolb
inc
clc
scas
fs
jbe
nop
test
js
jbe
inc
xchg
jb
ja
mov
insb
repnz
dec
mov
adc
addr16
addps
cld
mov
push
mov
xchg
shlb
out
jb
xchg
dec
push
movb
js
xorl
dec
push
enter
inc
inc
mov
fwait
lock
pop
jg
inc
dec
ficompl
xchg
or
jg
inc
lahf
pushf
fs
and
fwait
inc
jl
jle
repnz
xchg
add
cwtl
js
sbb
inc
call
data16
or
xor
mov
testl
ljmp
shlb
sbb
stos
push
inc
pop
xchg
fs
rdpmc
and
push
push
mov
xchg
jl
enter
add
mov
movsb
inc
fs
lret
mov
rcrb
dec
push
dec
scas
imul
popf
and
popa
sub
fwait
outsb
mov
arpl
push
add
aas
xor
lods
iret
movsl
repz
imul
pusha
inc
popf
pusha
lock
shll
xchg
mov
cmp
sbb
scas
dec
jl
movsl
lock
adc
notl
push
scas
jne
or
mov
add
leave
fs
aam
cltd
in
mov
arpl
and
xchg
pop
or
mov
lods
cmp
xor
enter
adc
aam
jae
jno
bound
fs
incl
fs
jne
loopne
mov
fmull
push
gs
mov
fs
lea
mov
mov
pop
icebp
fsubrs
movsb
push
mov
pop
jbe
add
xchg
mov
test
aam
loopne
jl
pop
mov
xor
push
dec
xchg
int3
icebp
pusha
mov
cmp
shlb
fildll
xor
jp
pusha
jmp
jne
fdivrs
jg
or
cmp
insl
test
xchg
mov
inc
enter
mov
dec
ds
mov
mov
xor
pusha
mov
fs
fcomps
pop
mov
mov
inc
rorb
xor
cmpb
stos
pop
mov
outsb
orb
xchg
jae
jae
outsb
movsb
enter
add
cltd
pop
jno
pushf
cmp
sbb
inc
jbe
pusha
sbb
xor
inc
and
cmp
enter
push
enter
xlat
xor
or
pop
insl
inc
lcall
mov
cltd
pop
pop
movsl
ds
mov
jne
sub
xchg
clc
in
cmp
outsb
mov
into
insl
add
dec
stos
in
js
push
cmp
mov
inc
jae
loopne
dec
sub
outsl
push
inc
rclb
lock
adc
jns
push
push
rcll
jge
je
rolb
xchg
mov
xchg
xchg
mov
int
cmp
negl
aas
xchg
mov
sbb
in
push
jmp
jge
mov
gs
and
sbb
lods
lret
and
mov
jmp
jne
xchg
push
or
dec
sub
push
jmp
mov
js
nop
mov
pop
xchg
xchg
test
fdivrl
mov
or
gs
add
inc
xchg
jg
insl
jne
sub
fs
push
lds
mov
clc
xlat
iret
xor
ss
lret
stos
adc
sub
in
pop
dec
pusha
sub
insb
ljmp
xor
xor
jbe
jnp
fbstp
mov
addr16
fimull
jbe
loopne
test
cwtl
test
pop
cmp
xlat
in
scas
pop
fdivrs
sti
xlat
mov
cli
loope
addr16
add
cmpsb
mov
push
add
lret
xor
mov
jbe
mov
icebp
adc
movb
lods
out
ja
fidivs
bound
jne
test
ds
loope
hlt
imul
mov
outsl
xchg
cld
xor
out
test
xchg
cs
aam
sbb
loopne
add
test
arpl
mov
xor
inc
pop
or
rcrb
nop
call
repz
mov
add
lret
push
or
dec
pusha
ds
jbe
sub
ror
sbbl
stos
or
shll
subl
dec
and
test
je
inc
fisubl
js
ss
xchg
mov
cwtl
jbe
mov
pushf
arpl
jns
adc
pop
sbb
aam
mov
jge
jle
test
mov
pop
xlat
fwait
inc
sbb
clc
out
aas
icebp
psubusb
test
dec
and
mulb
mov
pusha
jbe
aas
jecxz
mov
push
or
mov
lahf
dec
xor
mov
scas
mov
out
mov
inc
sub
loope
mov
sbb
loop
pop
xlat
ljmp
or
std
adc
jmp
fsubrs
int3
dec
pcmpgtw
mov
rolb
clc
mov
adc
les
faddl
and
addr16
pop
in
mov
push
dec
pop
mov
arpl
popa
jl
mov
arpl
repnz
test
pop
push
pop
daa
fimull
jb
adc
imul
push
xchg
cmp
jae
out
outsl
loop
mov
cltd
lcall
or
sub
aas
cmpsb
mov
scas
test
clc
inc
inc
sbb
lea
sti
inc
pushf
xor
cmp
aad
mov
test
negl
shlb
mov
pop
mov
rorb
pop
hlt
jle
push
addl
mov
data16
xor
fldcw
shl
sbb
outsb
sbb
call
pop
cmp
xor
loop
pusha
sbb
ds
xor
arpl
pusha
pusha
mov
out
dec
popf
xlat
ds
pop
sub
idiv
imul
fs
sbb
mov
lret
adc
sahf
pop
sub
inc
lock
cmp
sahf
das
scas
clc
pop
clc
push
imul
ret
add
imul
xor
fwait
xor
push
dec
addr16
lcall
xor
cmp
sub
in
mov
icebp
mov
decl
int3
pop
idivl
mov
fwait
or
out
scas
fidivl
xor
pop
and
out
xor
pop
xor
cmpsl
cli
pusha
add
pusha
jne
push
sahf
js
add
insl
mov
sub
or
ss
pusha
pop
std
cmc
jbe
sub
std
mov
decb
xor
mov
mov
sub
xlat
mov
sbb
es
or
loope
es
sub
add
adc
stos
lahf
pop
jmp
fwait
into
popa
pop
data16
fs
cltd
sbb
xchg
int
pop
mov
push
cmpsb
pusha
gs
pop
cmp
xor
add
popa
ret
xchg
xchg
add
mov
mov
rcr
add
add
sbbl
add
push
rorl
mull
mov
push
sub
loop
jns
loope
ljmp
pop
loop
shrl
or
in
push
xlat
movsl
fimuls
cwtl
fcom
adc
mov
jg
das
push
imul
jg
in
cmp
xchg
mov
add
dec
pop
fidivl
insl
imul
fwait
test
xor
push
imul
sub
mov
jns
or
dec
mov
sub
pop
or
push
insl
sbb
pop
push
enter
xor
pop
push
jno
dec
pop
or
jnp
sbb
push
jnp
mov
mov
push
jl
or
scas
sbb
cwtl
mov
inc
xlat
dec
jns
int
jb
xchg
xchg
push
mov
mov
jl
pop
sub
in
or
mov
out
dec
pop
mov
mov
outsl
pop
movsb
push
cmp
pop
cmpsl
rcll
cs
jecxz
inc
shll
lock
aam
push
dec
addl
xchg
loopne
int3
gs
addr16
push
adc
daa
dec
sbb
push
in
mov
inc
push
jmp
lcall
gs
push
aaa
ret
xchg
scas
and
mov
mov
in
or
xchg
mov
imul
sub
sbbl
fisttps
adc
pop
pop
dec
and
or
push
jns
ja
mov
shl
aad
daa
js
pop
cmp
push
or
push
hlt
xor
add
push
or
out
lahf
repz
pushf
dec
andl
out
xchg
inc
out
fs
lret
data16
xchg
mov
add
sub
addr16
fs
cmp
pop
int3
icebp
in
addl
outsl
hlt
xchg
repz
push
repnz
sbb
repnz
test
movb
jbe
idivl
xor
enter
addr16
aaa
jle
sarl
xor
ret
fisubl
clc
push
pop
dec
loop
jge
xor
and
lods
mov
iret
jge
dec
outsb
gs
cli
fsub
daa
cmp
sbb
inc
push
jle
insb
cs
pop
imul
fsts
dec
aam
sbb
adc
insb
clc
js
mov
clc
sbb
xchg
fs
dec
push
std
sub
daa
lcall
dec
add
and
pop
jl
xor
int3
les
ljmp
imul
or
decb
xchg
push
pop
shrl
or
pop
cmp
imul
cmp
xchg
hlt
loop
cs
negb
cmpsb
sbb
js
in
pop
push
mov
lea
jp
js
xchg
sbb
push
sti
dec
lods
daa
push
pop
add
add
adc
ficomps
pop
mov
jo
inc
fwait
adc
sbb
xchg
loop
push
sub
aam
out
ret
stc
pop
mov
mov
mov
leave
or
aas
sub
xchg
pop
test
outsl
inc
fsubr
fmull
mov
or
inc
das
or
inc
inc
inc
mov
sbb
sbb
sub
scas
push
aad
inc
fyl2x
and
jns
out
outsl
jo
mov
out
jo
shl
xchg
sti
xchg
int
ja
repnz
fmuls
roll
ds
cwtl
mov
mov
push
sarl
jo
cmc
leave
enter
jo
dec
sub
mov
rcl
mov
push
push
aad
mov
lock
xlat
jo
addr16
mov
jo
sub
dec
jb
jge
cmp
pop
mov
jo
sti
inc
dec
mov
push
movsl
cwtl
push
dec
add
add
jo
ss
dec
jp
in
iret
fdiv
mov
inc
test
sbbb
test
jo
xor
testl
mov
ss
mov
adc
popf
out
adc
cmp
dec
add
ja
loope
adc
inc
fwait
out
or
inc
shl
push
sub
clc
hlt
jno
push
adc
ja
adc
ficoms
gs
pop
xor
jae
mov
clc
jb,pt
inc
push
xor
dec
add
dec
dec
cmp
aas
jle
mul
adc
cmp
jne
inc
add
and
inc
adc
fnstsw
int
std
or
pop
adc
cmp
inc
pop
jne
and
pop
jmp
adc
push
adc
fstps
pusha
dec
mov
and
repz
cmovs
adc
gs
ljmp
push
adc
adc
xor
adc
push
sbb
adc
repnz
mov
dec
sbb
popa
sbb
dec
mov
inc
push
jne
repz
inc
mov
push
bound
ss
aas
inc
and
or
sub
inc
push
xorb
ret
dec
jl
push
sbb
pop
negb
arpl
pop
mov
xor
sbb
repz
sub
sbb
jns
xor
gs
gs
out
push
push
and
negl
dec
jp
call
sbb
inc
cld
xchg
and
pop
jae
lods
das
aad
loope
sbb
inc
mov
push
add
dec
mov
dec
pop
add
pop
test
xor
mov
data16
push
fcomps
popf
xchg
imul
pop
jmp
test
sbb
repnz
jl
int3
push
pusha
in
adc
sbb
mov
fimuls
cmp
mov
into
out
insb
test
jbe
test
cs
lds
jp
out
gs
pop
sbb
and
cwtl
daa
adc
and
call
cmp
mov
mov
pop
bound
negb
xchg
cmpsl
push
inc
push
sahf
fcoms
dec
mov
inc
push
push
pop
and
mov
mov
pop
loop
pop
sub
xlat
sbb
out
out
cs
xchg
jbe
dec
ret
cmp
mov
xlat
fdivrl
sbb
cmp
aam
adc
push
pop
fsubrl
sbb
cwtl
cmc
js
inc
out
jle
imul
adc
adc
add
push
dec
dec
mov
sarb
sbb
dec
sub
mov
popa
imul
lret
add
mov
addb
add
imul
ss
into
fdivl
and
cmp
aaa
jl
add
push
jno
divl
pusha
and
cmp
sarb
add
pop
and
and
aas
inc
aaa
inc
sbb
and
adc
inc
ss
lret
push
jle
and
shll
and
arpl
pop
cmp
and
insl
stos
push
cmp
push
push
sub
lahf
dec
fldcw
pop
insl
cmp
xlat
in
jge
mov
xor
das
scas
and
sbb
les
push
ret
adc
dec
loop
push
sbb
push
push
and
inc
or
outsl
stc
inc
ret
inc
in
call
mov
fcomi
sbb
pop
and
and
pop
mov
xor
pop
or
into
loope
mov
stos
enter
pop
inc
add
jno,pt
imul
mov
movsb
push
call
outsb
mov
test
mov
icebp
out
xchg
jmp
ljmp
test
cmp
add
fwait
and
pop
test
or
sti
pop
xor
push
mov
testb
xchg
ds
xor
ja
and
push
pop
mov
cmpsb
add
daa
pushf
push
cmpsl
test
insl
jno
xor
pop
int
xor
dec
aam
stc
or
ljmp
rcrl
and
lret
xor
shl
cld
inc
daa
pop
imul
sbb
outsl
mov
daa
jo
add
sbb
xor
mov
mov
push
jnp
fsts
scas
aad
mov
inc
stos
imulb
cmpl
sub
aam
ss
xor
fdivr
bound
mov
mov
sbb
or
jmp
mov
int3
push
in
jg
int3
and
fsubs
cmp
pop
sbb
and
movlps
add
pop
push
push
movsb
sub
outsl
lret
push
xchg
movsb
fstl
mov
out
sar
cmp
and
cmp
sub
pop
cmp
inc
cmp
mov
je
es
pushf
jne
and
pop
inc
or
ja
mov
sbb
cmpsb
push
pop
sbb
fstl
fcoms
and
sbbl
xor
push
mov
xchg
adc
lods
movsl
jbe
and
jne
and
push
adc
cmp
adc
cmp
fildl
adc
push
fdivl
mov
sub
pusha
sbb
dec
mov
out
xchg
in
xor
inc
insl
pop
mov
mov
mov
pop
stos
fldt
ret
lcall
test
adc
cmp
xchg
xchg
add
fsubr
cmp
push
and
pop
fs
mov
mov
cli
daa
jmp
out
sbb
mov
lods
add
in
or
pop
add
neg
scas
idivb
shrb
xchg
adc
pop
pop
sbb
ss
imul
dec
or
push
sarb
stc
rcl
push
inc
push
sbb
aam
hlt
loope
mov
in
fs
pop
mov
xor
loope
mov
cmp
xchg
jae
shll
pop
mov
daa
pop
dec
nop
push
mov
mov
push
imul
clc
iret
sub
push
xchg
jb
stc
mov
lods
shlb
lcall
mov
xchg
negb
rcr
sbb
jo
mov
inc
push
mov
mov
add
insl
popf
xor
in
lods
rorl
test
das
jo
mov
nop
ret
das
mov
ja
data16
xchg
fimull
cmp
jge
jae
sub
fnsave
out
mov
cmpsl
scas
dec
pop
cld
lock
fs
mov
popa
loop
int3
sbb
aam
dec
ljmp
cmp
sub
jp
or
nop
and
ja
popf
dec
leave
jne
mov
dec
jns
negl
sub
icebp
fwait
mov
mov
xchg
ja
jae
adc
xlat
rclb
fcompl
sbb
sub
out
jo
test
shl
pop
insl
les
cltd
rcl
mov
lock
xchg
insl
jl
jne
xor
xor
xor
ja
mov
mov
mov
mov
xor
mov
mov
mov
test
xor
sbb
pop
xchg
pop
inc
or
inc
mov
movsl
test
xor
gs
pop
icebp
in
mov
inc
inc
test
sbb
sub
pop
and
adc
and
xor
into
test
jno
addr16
loop
cmp
ljmp
add
jbe
push
add
push
xor
inc
hlt
xchg
and
sub
dec
push
mov
or
je
dec
add
gs
push
movsl
sti
sbb
notb
xchg
test
sbb
push
push
in
xor
add
pop
movsl
dec
mov
mov
mov
adc
pop
jle
in
sub
lea
and
cwtl
push
popf
lcall
loopne
lret
mov
sbb
insl
js
insl
addr16
insb
popf
push
clc
popa
loopne
testb
rorl
mov
outsl
loop
mov
push
add
xchg
and
insl
mov
mov
test
adc
and
out
push
dec
jge
loopne
pop
aad
repz
pop
add
ss
dec
push
cmp
clc
sbb
in
xor
rorl
and
mov
leave
add
lock
dec
and
mov
push
data16
call
dec
aaa
pop
pusha
aaa
insb
dec
popa
pop
and
divl
nop
and
dec
mov
pop
mov
outsb
mov
loope
cwtl
push
mov
xchg
fs
push
aad
xchg
cld
in
push
fistps
sbb
fadd
mov
mov
pop
cmp
pop
jne
push
pop
mov
jl
adc
out
mul
sbb
cmp
sub
gs
pop
mov
push
or
push
mov
stc
aaa
push
push
cwtd
cld
call
xchg
push
mov
sbb
mov
aam
xor
pop
push
adc
cmp
xchg
int3
les
jae
pop
and
ds
xor
push
push
pop
cmp
lcall
xor
push
data16
xchg
loopne
pop
scas
and
sub
or
icebp
jecxz
push
sar
mov
sub
sub
sbb
daa
add
daa
imul
push
gs
push
dec
push
imul
dec
sub
stc
into
pop
mov
cwtl
mov
push
dec
sub
xor
pushf
push
pop
adc
call
aam
or
push
jno
fs
add
lea
lods
je
cmc
add
enter
push
pop
pop
icebp
cmp
xor
inc
pop
clc
insl
dec
int3
enter
mov
or
jns
jbe
mov
push
sbb
push
outsb
or
insl
push
and
sub
and
gs
aam
sub
pop
pop
or
cmp
das
fdivrl
xchg
push
test
adc
ljmp
sbb
insl
jecxz
xor
inc
neg
test
out
adc
aas
cwtl
cmc
jp
add
cmp
sbb
jno
sbb
add
sbb
add
xor
mov
inc
out
aam
stos
pop
jg
push
cs
xor
insl
pusha
in
cli
add
jns
xor
jbe
xor
jp
fimuls
xor
jp
sti
icebp
ds
stos
pop
push
adc
mov
mov
out
ds
out
popa
idivb
and
pop
insl
cmp
data16
mov
mov
fnsave
ret
in
out
pop
xchg
sub
mov
add
mov
sbb
out
or
ss
inc
adc
adc
mov
adc
add
lret
mov
pop
pop
addr16
push
mov
jl
jp
sahf
cmp
pushf
psrlw
jl
in
popf
jp
inc
mov
adc
cmp
dec
adc
or
pop
cmc
dec
cs
add
cmp
ljmp
mov
sub
sub
push
pop
push
and
data16
fisubl
cmpsl
in
mov
cwtl
mov
add
xlat
mov
pushf
mov
test
or
aad
bnd
dec
pop
in
pusha
cwtl
lret
sub
cmp
jne
mov
jnp
push
jp
mov
inc
push
rorb
test
scas
cltd
insb
fisubs
test
in
push
vpunpckhdq
bound
inc
in
push
popa
das
push
sbb
mov
pop
pop
mov
in
into
and
das
mov
jne
add
pop
fstpt
mov
js
call
push
mov
out
jne
adc
gs
sub
xor
push
popa
pop
xchg
aas
push
jmp
xchg
adc
fisubs
ds
and
mov
pop
pop
pop
sahf
adc
int3
pop
fldl
jo
xchg
cmp
lret
pop
or
aam
jae
jae
imul
mov
rorl
jo
icebp
mov
adc
inc
jno
sub
cmp
dec
jo
xchg
dec
mov
imul
sbb
inc
incl
hlt
enter
xchg
in
pop
xchg
xor
lret
ds
adc
pushl
xchg
inc
ss
movsl
mov
aas
inc
insb
jmp
pusha
push
push
ljmp
popa
push
loop
adc
push
mov
rorl
xor
inc
add
jle
cmp
addr16
mov
mov
popa
ss
dec
mov
arpl
test
cmc
bound
pop
dec
cs
jno
pop
xor
mov
push
je
add
push
arpl
fnstenv
rol
cmp
or
scas
insl
sbbb
jne
loopne
pop
add
ss
subl
mov
sbb
mov
movsb
push
out
icebp
add
and
aaa
mov
pop
dec
and
aam
add
push
lods
lods
pop
add
shl
sub
jmp
inc
ficomps
fisubrs
xchg
dec
xchg
shll
mov
mov
or
mov
dec
iret
mov
je
test
call
jge
xlat
frstor
movsb
jo
push
or
cmpb
popa
outsl
and
std
dec
or
and
push
filds
outsb
stos
insl
inc
sbb
cmc
nop
xor
ss
xlat
pop
sbb
mov
in
adc
movsb
cmp
aaa
adc
inc
insl
fnsetpm(287
add
pop
roll
stos
jnp
or
icebp
test
xchg
in
push
inc
inc
aad
popa
in
xlat
inc
or
pop
testb
gs
out
sbb
cmp
jne
sub
pop
mov
out
xchg
cmp
or
sub
and
sub
jg
pop
loop
loope
cmp
inc
cmp
int
scas
jmp
aas
xor
inc
icebp
sahf
mov
flds
stos
add
jmp
lahf
add
ss
test
sbb
push
pop
dec
das
pop
push
loope
dec
adc
ds
lret
sbb
jp
and
ret
mov
dec
sbb
loope
or
loope
xchg
fnstsw
sub
xor
iret
push
lret
cmp
dec
push
dec
pop
xor
xor
push
xor
dec
adc
mov
pop
in
cmc
cmpsl
mov
sbb
das
xor
fsts
mov
push
xlat
sbb
or
xor
loopne
mov
push
pop
pushf
std
sahf
lea
fmul
mov
push
xor
push
ss
lcall
out
sbb
je
and
dec
push
dec
mov
pop
pop
aad
xchg
jae
push
inc
push
jmp
pop
jbe
dec
sub
cmc
push
adc
and
outsb
sub
inc
push
push
pop
xchg
sbb
faddl
push
inc
push
push
dec
repz
into
cmpps
cs
ret
and
dec
cmp
clc
insl
and
call
xchg
fwait
xor
sti
mov
adc
dec
sub
iret
push
xchg
cs
and
sub
ss
mov
insl
pop
pop
daa
out
daa
imul
mov
dec
sbb
push
and
sti
in
not
fs
xchg
shr
and
jge
sub
jl
adc
or
fwait
sbb
test
aas
adc
shr
add
loope
lahf
pop
fiadds
scas
idivl
inc
and
daa
mov
stc
cmp
pop
jle
jecxz
and
hlt
xlat
and
fwait
adcl
sub
ffree
sub
fldcw
fmull
mov
jp
push
add
cld
inc
outsb
xor
incl
das
pop
pop
or
stos
mov
adc
inc
mov
out
test
push
cmp
push
in
xor
bound
cmp
sub
sub
xchg
inc
outsl
push
test
insl
push
push
push
adc
pusha
and
loopne
jmp
fnstcw
outsl
clc
xchg
ss
xchg
add
test
fucom
mov
insl
arpl
push
xchg
pop
movsl
xchg
jbe
popa
insl
push
mov
mov
aam
pop
mov
movzwl
pusha
iret
jns
push
pop
lret
jmp
insl
arpl
pusha
push
push
push
icebp
pop
push
fwait
lret
pop
sbb
test
jns
mov
ja
mov
dec
push
mov
mov
lret
insl
pop
or
pop
sbb
xor
cmp
gs
mov
jo
cmpl
dec
stc
in
into
add
test
fxch
dec
jo
ret
scas
mov
jo
mov
es
test
add
add
mov
fneni(8087
push
adc
xchg
jmp
pusha
pop
lret
inc
jo
lahf
and
addr16
das
dec
push
xor
xor
lods
cmp
pop
jg
jecxz
xlat
fldenv
out
ret
cmp
xor
test
in
leave
call
outsb
shll
add
int3
rorl
mov
pop
inc
fists
inc
jne
adc
pop
es
ret
xchg
pop
pop
sbb
or
hlt
sub
dec
iret
xchg
lcall
cmp
stc
ss
dec
sub
into
fldenv
data16
dec
daa
cld
dec
xor
push
les
cmp
inc
sbb
sub
les
pop
lea
aas
mov
aaa
aaa
pop
dec
cltd
mov
cmp
test
xor
cmpsb
movsl
or
movl
jp
dec
mov
adc
sbb
add
add
dec
add
addb
pop
jle
les
ds
aas
movsl
xor
and
adc
mov
push
mov
and
and
cmp
push
mov
push
add
les
pop
data16
or
jbe
dec
lcall
pop
mov
and
dec
add
ret
xor
pop
and
or
cmc
bound
pop
push
add
inc
insl
xor
xor
jg
pop
sbb
inc
push
movsl
sub
test
out
pusha
pmaxub
adc
loope
aad
pop
insl
adc
and
jmp
das
push
ljmp
das
or
or
push
sarl
mov
insl
dec
scas
aad
pop
not
add
add
sbb
sbb
decb
push
sbb
xchg
mov
pushf
insl
and
cmp
pop
test
das
add
pop
jmp
mov
insl
pusha
es
push
in
arpl
fs
arpl
pop
xor
jmp
mov
xchg
sbb
bound
jnp
push
das
or
inc
adc
int
sbb
daa
fldenv
dec
push
adc
xchg
xor
push
flds
push
fsub
std
jns
dec
inc
xor
adc
decb
hlt
decl
mov
xor
cmpl
push
mov
sbb
insb
sbb
test
inc
clc
dec
outsb
pop
outsb
jp
and
sbb
rcr
cmc
jl
jne
jecxz
inc
jmp
scas
push
pop
bound
movd
js
or
dec
adc
mov
add
fmuls
or
push
and
int3
loop
dec
or
aaa
ljmp
pop
sbb
push
fidivl
dec
daa
out
ret
or
inc
or
test
xor
nop
cmp
mov
mov
sub
add
stc
leave
adc
jne
push
jecxz
mov
jne
loop
icebp
push
js
ss
movsb
xchg
jb
adc
fwait
mov
lcall
insb
test
idivl
push
jnp
mov
lods
movsl
xor
inc
push
or
or
adc
xlat
and
or
xor
xchg
movsl
or
mov
pop
outsb
jl
jl
xor
insb
jge
inc
and
jge
arpl
xchg
cmp
or
mov
jp
jns
sub
icebp
pop
cmp
pusha
pop
lret
hlt
jl
inc
xchg
pop
jbe
and
jne
imul
push
mov
arpl
jl
fs
cmp
adc
stos
xchg
jns
cmp
bound
lock
sbb
mov
sbb
icebp
mov
filds
and
push
cltd
ret
push
mov
xchg
and
jl
into
notl
dec
pop
jl
and
jmp
dec
jne
outsl
repz
pop
dec
call
mov
sahf
push
dec
in
cwtl
push
xor
je
adc
push
xchg
xor
cmp
pop
aad
sub
jb
push
das
cmp
fdivr
xor
popf
movsb
pop
pusha
push
ss
test
xchg
sbb
jl
inc
and
jb
sti
jp
test
lret
jae
hlt
push
and
sub
dec
jl
and
fdivs
sub
fisubrs
ljmp
and
or
mov
xchg
fstl
push
into
push
decb
jb
push
fiaddl
cmpsb
jl
lahf
test
mov
int
dec
cmpsb
pop
andb
cs
xchg
fisubs
cmp
adc
adc
push
loopne
sbb
pop
outsb
adc
sbb
nop
add
insb
jns
or
in
inc
sbb
jne
add
std
jp
xchg
sahf
dec
scas
xchg
jb
adc
add
shl
arpl
dec
xor
mov
pop
pusha
les
js
adc
add
sti
fst
jbe
cli
jl
out
dec
fisubl
inc
mov
jb
jl
repnz
fbld
mov
or
in
enter
loopne
mov
push
fs
ret
or
or
mov
mov
pop
inc
outsb
jmp
mov
xor
push
frstor
pop
enter
ret
xchg
gs
and
jb
fisubs
xchg
jmp
test
aad
sarl
dec
and
jl
adc
dec
sub
mov
pop
push
cmpsl
in
bound
loope
cs
loopne
lahf
jecxz
mov
aam
lcall
call
or
add
or
int
mov
jl
sbb
cmp
push
in
dec
pop
cmp
stc
in
jns
cli
out
push
sbb
jb
push
ja
iret
mov
jb
jmp
dec
cltd
or
pop
cmp
mov
pop
adc
and
inc
in
jl
enter
aad
mov
insb
addr16
outsb
mov
dec
xor
mov
adc
or
repz
jl
mov
pop
jmp
push
mov
adc
jb
sti
dec
dec
push
push
lret
ret
jl
xchg
gs
jl
repnz
arpl
adc
inc
call
gs
cmp
dec
adc
pop
sbb
jns
ret
mov
jb
gs
dec
insb
dec
iret
outsb
movl
jl
xchg
aam
mov
pushf
test
add
data16
pop
jns
xchg
sub
jl,pt
push
mov
jnp
push
out
rorl
into
push
push
pop
shll
jb
add
push
lea
xchg
cmpsb
inc
popa
jb
dec
pop
sub
filds
dec
push
dec
imulb
sbb
call
xchg
aam
stos
jb
sub
pushf
pop
cmp
ror
inc
std
cmpsb
xchg
push
and
jb
test
fcomps
mov
shrb
sbb
xlat
dec
push
jp
fmuls
and
dec
fstpt
sub
fmuls
sub
xor
xor
outsb
sub
mov
movsb
dec
shrb
ffreep
loopne
cmpsl
jmp
dec
push
cmpl
clc
mov
jl
pop
push
bound
cmpsb
popf
jb
dec
push
repz
cmp
xor
dec
push
jns
adc
jb
pushf
push
cmp
cmpsb
xor
and
jb
repnz
jae
pusha
mov
inc
inc
cmp
or
cmp
jb
fsubp
inc
mov
and
int3
jns
rolb
jmp
jl
ds
pop
loop
cmp
cmpsl
dec
xchg
loopne
mov
mov
pop
test
dec
mov
mov
adc
or
int
shlb
das
lds
cmp
into
dec
mov
add
mov
or
lock
shrb
ror
cs
mov
mov
inc
ss
pop
and
xor
xchg
loope
and
sbb
xor
dec
scas
push
mov
enter
xor
xchg
clc
mov
inc
vsubpd
rcll
lcall
xor
xor
dec
test
cmp
push
hlt
pop
lret
es
std
or
pusha
or
repz
in
int3
xor
cld
loop
nop
sti
arpl
push
mov
fdivs
xor
push
mov
push
jl
xchg
test
push
xorb
scas
pop
pop
pop
mov
mov
xor
imul
mov
jns
nop
bound
lods
loopne
das
cmp
pop
and
add
shlb
jb
out
fadd
jle
sbb
dec
sbb
mov
mov
insb
scas
fidivl
or
cs
loope
dec
lret
push
scas
cs
sbb
test
push
loop
jb
jle
push
icebp
sarb
pop
lods
push
cmp
jb
shlb
nop
jne
outsb
jp
call
fcoml
insb
fcompl
insb
dec
lret
int
xchg
lahf
sub
jb
imul
aam
addr16
imul
push
dec
inc
xchg
add
jp
inc
or
lds
out
push
insb
fadds
cmp
lret
loopne
icebp
mov
mov
test
sub
mov
fs
adc
push
jp
scas
xor
push
mov
dec
mov
jl
nop
mov
imul
push
frstor
jp
out
test
xlat
and
jbe
nop
jp
lret
mov
xor
and
lods
or
push
insb
fmull
cltd
repnz
insb
loopne
sbb
jp
jae
add
xor
and
jp
cmc
sub
adc
jno
js
aad
in
lods
jne
jp
cmp
repz
jmp
les
xlat
notb
ds
fcoms
xchg
fadd
jno
xor
jb
push
lret
out
repz
popf
adc
dec
dec
aam
popa
sahf
jp
pop
in
ret
inc
inc
inc
pop
and
xor
sbb
xchg
xchg
mov
mov
cmp
jp
test
push
push
orb
dec
push
sbb
dec
sub
repnz
sti
jp
pop
bound
sub
loope
jp
inc
loope
push
push
dec
loope
jp
cmp
push
out
pop
into
lahf
insb
or
push
cs
clc
pop
rorb
adc
movb
adc
insb
mov
mov
pusha
fcoms
imul
mov
jne
mov
cmp
pop
xor
int3
pop
xor
mov
jp
and
push
dec
add
mov
push
lock
and
jecxz
insb
mov
insb
cmp
gs
lcall
lea
jbe
mov
ds
inc
xchg
and
and
fs
push
cs
add
xor
clc
jbe
xor
inc
adc
cs
jne
icebp
cmpsb
addr16
insb
iret
cmc
loopne
mov
cmp
movsb
aam
jb
lods
loope
insb
das
xchg
das
cwtl
dec
inc
inc
mov
mov
jns
or
in
dec
push
scas
std
sbb
insb
cltd
rorl
jp
out
movsb
mov
dec
das
insb
ss
and
xor
mov
xor
insb
mov
outsb
xchg
add
sub
scas
das
test
aad
jl
xchg
mov
ja
imul
xor
cmc
cmp
cld
mov
orl
xchg
test
adc
add
aad
mov
std
jne
aaa
dec
dec
imul
mov
xor
insb
and
xor
add
test
dec
imul
adc
mov
jns
js
jbe
hlt
insb
loopne
push
push
push
and
dec
or
iret
out
loope
jp
fsub
hlt
in
les
imul
jp
mov
gs
out
jl
fucomip
lahf
push
sahf
push
inc
pop
test
clc
jp
out
imul
push
inc
adc
jp,pt
gs
fs
cmp
mov
loope
insb
cmp
pop
shlb
push
mov
das
hlt
inc
rorb
ds
int3
jmp
push
lahf
xor
jbe
inc
jp
dec
loope
popf
xchg
inc
cmp
mov
xor
das
mov
call
ds
cs
cld
push
das
jp
dec
dec
cmpsl
in
cld
andl
hlt
or
stos
mov
push
and
out
mov
push
pop
xchg
xchg
pop
dec
mov
mov
push
jns
inc
jmp
and
pusha
mov
push
xchg
movsl
add
push
hlt
mov
pop
and
inc
mov
out
pop
in
jb
dec
insb
mov
mov
scas
icebp
cs
sbb
cs
push
adc
gs
jns
lods
scas
jge
pop
cltd
push
rorb
clc
js
xor
sub
cs
enter
outsb
notl
idivb
ds
mov
ss
sub
mov
adc
subb
hlt
xor
push
loopne
mov
add
jl
repnz
dec
mov
int
or
xor
sbb
mul
sarl
outsb
jl
gs
jl
test
push
sbb
and
jb
repnz
dec
les
and
jl
aad
jle
dec
ja
js
aad
aas
jle
pop
das
cmp
aad
arpl
insb
sahf
dec
adc
ret
push
aad
sbb
add
inc
add
imul
jns
mov
out
dec
xor
push
mov
sti
inc
ret
notb
fimull
shrb
je
mov
mov
push
ds
or
pop
sub
jns
ljmp
xor
xor
enter
cld
icebp
push
inc
jl
xchg
inc
loop
into
loope
pop
in
and
xchg
jbe
jb
mov
lahf
adc
inc
jg
push
push
xor
dec
adc
sbb
mov
push
jmp
push
dec
jb
mulb
pop
hlt
cmpb
sbb
mov
add
mull
mov
push
cwtl
imul
loopne
mov
xor
frstor
jl
sub
push
and
aas
jb
cmp
or
pushl
jb
test
xchg
mov
je
mov
lock
xlat
hlt
xor
dec
mov
jbe
inc
and
pop
incl
add
cmp
jns
push
jmp
fidivs
je
in
add
mov
dec
jl
dec
mov
div
and
pop
jb
jl
aad
cltd
sbb
pop
push
dec
xchg
jbe
pop
jb
adc
jmp
lock
ret
gs
fisttps
and
xchg
dec
test
outsl
jb
and
pop
pop
aad
dec
jl
test
inc
sbb
jb
loopne,pt
push
jl
jns
ficoms
or
jbe
cmp
jb
test
jno
inc
and
jbe
and
push
pop
xchg
push
or
inc
data16
or
ss
jno
cmp
shrb
es
mov
push
jb
mov
xchg
cmp
fs
ds
gs
adc
xor
dec
fsubp
fstpt
xchg
jns
cmp
jl
xor
loopne
mov
jecxz
sarb
xchg
jbe
dec
test
pop
jae
jb
arpl
loopne
mov
push
adc
ds
shl
xor
dec
mov
movsl
les
add
dec
pusha
addb
adc
ret
ret
and
and
jb
repnz
or
in
loope
jb
jp
loopne
push
jb
dec
popf
adc
dec
movsb
xor
jl
jo
jl
hlt
jb
push
adc
rclb
repnz
jecxz
inc
jl
xchg
arpl
jnp
sbb
sub
jmp
inc
or
add
clc
xchg
sti
mov
gs
pop
push
add
sub
mov
jns
mov
mov
sub
jp
adc
push
stc
sub
mov
les
mov
add
and
jb
pushf
sbbb
pop
shrl
pop
jb
repnz
js
cmc
push
sarl
lahf
jl
hlt
ja
jp
sahf
push
push
cmpsl
xchg
jl
mov
aam
pop
arpl
jb
push
ss
adc
icebp
pop
cltd
js
mov
lahf
gs
mov
push
add
loopne
mov
lret
gs
movsb
repnz
pop
adc
xchg
int
and
xchg
sbb
sub
adc
repnz
dec
lock
mov
scas
adc
into
fs
dec
push
mov
adc
pop
sbbl
gs
pop
cmpsb
xor
and
jl
repnz
jb
test
dec
loop
ljmp
lods
cmp
dec
jns,pt
jb,pn
add
xor
adc
and
les
in
push
jle
push
mov
int
and
xchg
clc
jle
aad
xor
jb
xchg
test
xor
hlt
int
call
jb
ss
mov
test
sbb
dec
pop
loopne
mov
lea
push
jge
and
jb
repnz
bound
ss
hlt
adc
js
sbb
imul
jge
scas
clc
iret
out
pop
imul
push
in
aad
aad
repnz
adc
mov
loope
jb
jae
cli
pop
mov
jl
pop
jb
cld
push
and
mov
adc
jb
jl
mov
cmp
push
push
and
mov
mov
jecxz
cmp
push
jge
add
test
cld
dec
jbe
adc
dec
dec
fs
cmp
testb
xor
xchg
orl
mov
sbb
jns
push
and
dec
push
aad
push
jl
repnz
dec
dec
loopne
mov
and
adcb
jb
add
mov
mov
rclb
sbb
test
jb
xchg
gs
dec
push
mov
sbb
pop
dec
jns
dec
dec
jb
lock
add
pop
dec
scas
int3
insl
pop
mov
loopne,pt
into
jl
aad
mov
jb
gs
jl
repnz
jne
loope
push
mov
or
jns
push
idivl
pop
loop
pusha
adc
les
out
loopne
add
in
popa
shll
loopne
mov
cwtl
cmpb
ja
pusha
jp
imul
xchg
jl
inc
push
jb
and
sub
jl
sbb
repnz
dec
cmc
frstor
push
add
cltd
jnp
fmull
and
jb
repnz
outsb
or
mov
and
gs
mov
or
ds
cmp
xor
dec
stc
loopne
mov
cwtl
push
gs
inc
fnstsw
cs
push
hlt
or
jns
jns
pop
stc
mov
cmc
in
push
jb
gs
jl
idivb
pop
ja
jb,pn
gs
jl
repnz
dec
pop
loopne
mov
and
loopne
int
jb
sub
push
jb
dec
pop
shl
xor
in
push
cmp
xorb
insb
cltd
xor
loope
arpl
jns
repnz
in
jb
push
jl
into
jb
cmp
fdivl
jb
pop
leave
or
jb
jns
cmp
out
test
int3
rcrl
ss
jb
sahf
pop
push
cmpsl
adc
cs
push
repz
jb
fs
insb
test
push
aam
pop
ds
imul
out
hlt
aaa
xchg
neg
jns
jns
pop
push
hlt
xor
dec
sub
cmp
adc
inc
test
out
sub
cmp
pushf
mov
and
jge
sbb
sbb
xchg
out
ja
mov
jns
int
repnz
out
call
repnz
push
pop
xor
or
xor
int
cli
mov
enter
stos
repnz
imul
mov
mov
mov
mov
xchg
pop
inc
arpl
push
cmp
ret
insl
fsubrl
or
in
pop
idivl
test
push
pusha
mov
xchg
les
je
ret
mov
pusha
push
pop
jl,pt
pop
pop
mov
dec
outsb
insl
scas
testb
jno
jl
loop
jbe
push
jp
xchg
jne
mov
imul
push
sbb
jae
imul
je
inc
iret
outsb
loop
out
inc
mov
push
dec
jp
dec
aam
mov
test
pop
cmp
mov
xor
mov
in
mov
inc
push
ja
fst
jp
je
fsubrs
insl
dec
mov
inc
dec
push
nop
outsl
dec
jns
and
jne
jp
test
or
aam
or
sarb
push
jp
cmp
aaa
sub
sub
clc
jno
jp,pt
push
jns
in
or
push
jp
cld
std
pop
lods
mov
lods
mov
xor
pop
in
inc
push
cmp
repnz
fcoms
insb
inc
xchg
out
dec
push
push
loopne
and
in
pop
xor
dec
jp
loopne
mov
stc
and
insb
rolb
dec
sbb
xor
test
sbb
popa
das
test
cli
bound
mov
sahf
inc
sbb
insb
mov
sbb
push
xchg
insb
xor
dec
gs
mov
jl
pop
out
dec
xor
jmp
push
pop
push
pop
fmuls
pop
js
clc
mov
mov
imul
movsb
dec
imul
dec
jmp
pop
jp
dec
mov
push
pop
jmp
cmp
jp
add
loopne
mov
sbb
jl
repnz
cmp
push
popf
cmp
inc
push
popa
push
jne
inc
std
push
ja
std
push
je
jp
pop
lds
jp,pt
sbb
and
clc
mov
add
mov
sahf
lret
jp
into
mov
mov
dec
jp
pop
repnz
inc
jp
rcrl
mov
cld
push
cmp
fnstsw
xchg
cld
loopne
inc
dec
cli
inc
jbe
jp
mov
or
inc
js
out
insb
leave
inc
push
loopne
cmp
dec
mov
movsb
jp
repnz
jns
cmp
js
cmp
dec
repz
cmp
dec
dec
cmp
insb
mov
add
mov
cmp
push
mov
inc
cmp
insb
mov
or
in
les
nop
add
jp
dec
cli
clc
adc
inc
add
xor
cs
xchg
nop
xor
dec
and
subb
std
cmp
clc
rorl
push
pop
jle
xor
out
ss
lret
inc
loopne
inc
mov
jo
bnd
pop
jno
insl
insb
xchg
decb
cmp
mov
in
cmp
add
fnstsw
arpl
out
pop
pop
pop
das
mov
xor
or
ja
arpl
and
aaa
jle
push
add
add
inc
xor
jp
sti
inc
insb
jecxz
or
or
push
mov
jp
mov
enter
push
mov
into
ret
mov
pop
fs
shlb
sarb
inc
xor
mov
or
sub
dec
jp
and
xor
push
aam
and
jp
mov
rep
js
push
clc
dec
ret
loop
jbe
dec
jp
mov
js
das
mov
inc
add
or
push
dec
outsl
mov
push
and
adc
prefetch
or
xchg
popa
int3
jp
lea
adc
xor
out
test
aam
mov
sub
in
in
adc
mov
sar
push
mov
push
pop
std
cld
mov
push
push
add
push
push
jmp
rcrl
clc
icebp
push
out
pusha
jle
ret
ret
test
leave
push
pop
icebp
jne
dec
mov
popa
bound
mov
mov
jns
lret
stos
out
mov
xchg
pop
mov
divl
stos
dec
cwtl
mov
inc
cmp
lods
xor
jae
xchg
fisttpll
ds
pop
xor
jp
inc
mov
inc
add
xor
cmp
jg
hlt
add
addl
mov
cld
mov
sub
call
mov
jl
rclb
cmpb
fs
jp
push
xor
push
inc
gs
insb
sbbb
xchg
in
inc
stc
pop
cwtl
lahf
xorl
insb
aad
cli
je
gs
filds
jp
pop
or
cmp
push
ficoms
and
mov
xor
loope
bnd
cli
and
scas
lcall
mov
push
sub
int3
inc
pop
insb
inc
cmp
mov
push
test
jp
shrb
ljmp
sar
dec
jp
pop
pop
into
ret
dec
jecxz
daa
das
enter
cwtl
mov
fwait
jb
rcll
sub
or
or
shlb
insb
dec
cmc
fdivr
mov
clc
push
adc
xorl
lahf
mov
jp
lret
xchg
adc
movsb
dec
std
fsubl
add
xchg
mov
outsb
insb
push
hlt
and
fcompl
call
push
add
jg
cmpsb
outsb
mov
jp
pop
rolb
mov
push
out
das
gs
outsb
insb
shrb
mov
and
fstl
pop
push
add
xor
jns
shlb
insb
push
insb
in
and
int
or
cli
mov
mov
sbb
push
push
daa
les
outsb
xchg
movl
inc
lds
lcall
mov
rcrl
mov
fisubl
fs
loopne
sub
adc
shrb
es
shlb
jae
mov
sub
mov
and
mov
pop
xor
sbb
sub
cli
cli
mov
ss
dec
jbe
movsb
dec
mov
xor
mov
xor
ds
jge
mov
mov
repnz
push
add
js
nop
add
sub
and
xchg
test
clc
xchg
dec
aaa
or
icebp
roll
bound
cmp
loop
add
das
ljmp
add
lods
insb
sub
mov
adc
pop
jp
repz
dec
hlt
jae
int
or
mov
pop
push
mov
repz
stc
das
and
in
nop
pop
pop
adc
std
mov
arpl
aaa
aam
fisubrl
insb
adc
fists
das
push
mov
inc
popf
in
cli
xchg
jbe
insb
xor
dec
rorl
xchg
dec
dec
rcrb
imul
cwtl
or
testl
dec
xchg
das
rdpmc
in
sbb
add
lcall
adc
insb
or
cmp
jg
pop
adc
jae
ja
cwtl
std
jle
mov
jno
pop
insb
test
add
insb
and
shll
nop
mov
mov
pop
xlat
nop
insb
xchg
int
insb
push
mov
das
and
push
mov
nop
dec
xchg
sbb
test
dec
xchg
test
dec
cmc
mov
movsb
dec
into
mov
jo
insb
cmpsb
test
nop
lea
add
fs
xor
jb
xor
xor
push
inc
or
or
stos
insb
push
iret
rcl
aaa
dec
ja
call
sbb
mov
leave
dec
jb
repz
insb
mov
jne
ret
cmp
inc
or
outsb
push
pop
out
adc
pusha
add
sbb
jnp
dec
jp
lods
aad
aaa
inc
inc
xchg
jle
dec
gs
repz
insb
es
cmp
fdivrs
sbb
sub
jl
or
in
iret
jp
pop
sbb
insb
and
in
pop
push
sbbb
insb
cmp
sub
dec
pop
mov
mov
movsb
arpl
sbb
push
movsl
and
test
mov
loop
daa
mov
fsubs
aam
idivl
insb
mov
and
lcall
push
push
leave
fisubl
data16
push
add
dec
pop
je
cmc
push
and
sbb
insb
stc
inc
hlt
jl
cli
xor
add
mov
sbb
mov
jle
or
push
mov
das
dec
dec
push
icebp
jp
lea
xlat
jb
aaa
cmp
or
in
dec
add
shrb
xor
orb
push
xor
clc
std
push
test
mov
sti
negl
pop
inc
ret
hlt
pop
add
inc
jp
xorl
je
lcall
push
lods
push
push
iret
push
clc
dec
add
push
insb
sub
mov
ja
pop
xchg
sub
jp
push
pop
xchg
push
inc
mov
fdivrs
js
push
push
into
je
ret
lahf
add
out
mov
cli
lahf
rcrl
ds
movsl
repnz
dec
xchg
aaa
pusha
ja
clc
xor
jl
cli
xor
clc
loopne
mov
les
jl
cli
xor
push
nop
loopne
mov
jl
push
dec
mov
adc
jg
adc
mov
aaa
push
pusha
jne
clc
loopne
push
rolb
jl
cli
xor
mov
mov
jl
xor
dec
into
fstl
int3
adc
stos
and
aaa
sbb
pop
pop
clc
out
xchg
push
ds
cli
xor
push
mov
aaa
mov
addb
jb
pop
dec
sbb
insb
mov
clc
cmp
aaa
sub
fldl
mov
shrb
aaa
ret
fnstsw
inc
dec
jl
cli
xor
jp
clc
xor
inc
movsl
outsb
iret
insb
pop
fsubrl
push
insb
sbb
outsb
mov
outsb
push
imul
cmp
sbb
xor
int3
loopne
mov
cwtl
inc
mov
mov
xor
pushf
adc
decb
xchg
cli
xor
sbb
xor
call
cli
xor
mov
cli
mov
addb
jb
push
dec
stos
adc
add
dec
cmp
jl
cli
xor
add
cmp
rolb
jl
cli
xor
push
mov
xchg
aam
mov
jl
xor
dec
cmpsl
fstl
adc
std
jno
js
cli
xor
adc
inc
mov
fiadds
jl
cli
xor
push
lret
push
movsb
loopne
mov
je
push
leave
bound
aaa
pop
dec
xchg
mov
jp
js
cli
xor
hlt
loopne
mov
rolb
mov
xor
push
lods
loopne
mov
add
push
mov
push
cmpsb
repnz
insb
xor
ss
jl
clc
adc
ds
inc
jl,pn
bnd
inc
insb
faddl
fwait
add
lock
imul
test
inc
into
jl
cli
test
xor
adc
cmpb
insb
push
frstor
popf
sahf
in
test
inc
out
inc
sahf
sahf
in
cs
xchg
mov
inc
js
jp
outsb
dec
pop
sbb
aaa
hlt
dec
inc
fucom
mov
add
insb
sti
repnz
lods
dec
aad
jle
scas
sbb
insb
push
test
insb
inc
xchg
jg
jp
mov
pop
adc
aaa
add
mov
push
gs
aaa
mov
mov
lods
push
cmpsb
push
push
loopne
test
xor
push
sbb
aaa
or
fucom
mov
or
mov
cli
repnz
mov
mov
jp
in
out
jp
repz
js
adc
cld
inc
xchg
dec
jp
inc
mov
hlt
inc
adc
xor
push
shl
mov
lods
inc
scas
jl
cli
dec
push
push
dec
shl
js
push
xor
mov
mov
add
push
adc
ja
js
cli
and
jp
cli
xor
into
loopne
mov
mov
cli
xor
push
xchg
aad
pusha
hlt
push
leave
gs
insb
cmp
push
dec
dec
iret
repnz
xor
sub
and
mov
jne
ret
mov
sub
data16
insb
add
sbb
sbb
jp
icebp
pop
dec
mov
inc
mov
testl
sar
mov
clc
cmp
movsb
dec
outsb
xor
test
jle
imul
jp
arpl
jle
dec
pushf
pop
cmp
ss
jp
push
pop
cmp
mov
mov
sti
push
aam
and
arpl
jle
inc
movsl
arpl
mov
and
sub
pop
je
pop
test
xchg
mov
or
push
stc
jp
insb
icebp
fbld
push
and
aaa
sub
insb
int3
data16
sbb
mov
orb
xchg
addl
jle
pop
xchg
loopne
loop
or
add
test
xchg
fdivs
adc
mov
jp
aaa
lea
in
xor
sbb
xchg
dec
inc
jl
or
sbb
add
jecxz
sbb
fs
clc
fmul
add
mov
jne
out
cs
imul
add
fs
or
aaa
pusha
jp
push
push
sbb
clc
dec
fimuls
jbe
mov
sub
dec
xchg
test
jno
jmp
jp
push
out
mov
jp
call
jbe
in
jp
faddl
repnz
jmp
clc
xchg
mov
je
call
xchg
cld
push
insb
iret
mov
cli
cs
sarb
ja
outsl
je
xchg
loopne
insb
mov
fnstsw
push
mov
push
lock
mov
in
or
ljmp
mov
shll
jmp
test
ljmp
pop
xchg
les
mov
icebp
iret
in
mov
sbbl
sbb
xchg
stos
xchg
fistpl
pop
xchg
mov
icebp
iret
iret
jge
rol
orl
int
ret
jnp
xor
push
jb
fistps
sub
bound
adc
adc
inc
enter
jbe
jb
fucomip
lahf
pop
mov
gs
jnp
ret
int3
stos
scas
js
jb
movsl
scas
jnp
mov
push
dec
scas
enter
inc
mov
inc
loopne
mov
pop
xor
jnp
mov
js
cmp
dec
addr16
and
lahf
ret
push
andl
popf
bound
mov
adc
mov
mov
and
cs
das
das
add
movsl
pop
push
xchg
out
stos
mov
cmc
orb
lods
fidivrl
call
push
lahf
shlb
jne
add
sti
xchg
pop
lock
or
xor
insb
push
mov
push
xor
lea
xchg
rorb
and
insb
out
rcrl
insb
mov
insb
inc
mov
pop
aam
push
sub
inc
jp
xor
xchg
adc
in
rep
pushf
jle
in
xchg
xchg
cmp
aas
and
iret
or
dec
inc
insb
sbb
mov
ja
xchg
testb
sub
gs
xchg
cmp
pop
sub
outsb
das
xchg
jp
lock
mov
aad
iret
aam
dec
mov
lds
dec
and
outsb
outsl
jle
in
add
mov
adc
mov
mov
sarl
adc
ret
in
jp
shlb
mov
push
jp
sub
jnp
pop
das
loop
mov
insb
inc
mov
dec
cli
andb
pop
repz
xchg
ja
pop
xchg
xchg
jp,pt
imul
cmp
or
ds
pushf
test
test
fdivr
dec
imul
je
mov
xchg
mov
add
subl
push
mov
or
cmp
add
or
xor
push
rcrb
push
or
insb
mov
xor
pop
sub
or
push
add
mov
divl
jb
cmp
jae
cmpb
xor
pop
repnz
addl
sub
arpl
insl
jp
push
xor
jp
and
cmp
xlat
cwtl
cmp
cs
jp
or
cmc
jae
test
and
lea
or
mov
push
mov
push
insb
inc
cld
insb
push
pop
mov
es
and
dec
ja
lahf
test
push
xor
inc
lock
lods
std
xchg
in
inc
cld
les
jp
pop
mov
ret
jp
jne
out
jp
dec
mov
inc
cs
jno
scas
inc
ja
bound
bnd
das
in
cmp
cmp
ret
fsub
push
push
cmp
or
sub
push
and
push
lea
ja
jp
xchg
btr
es
bound
or
or
push
mov
int3
add
jne
dec
adc
cmpb
das
adc
jp
and
adc
jp
and
pop
push
int3
jp
and
sbb
ret
and
adc
mov
xchg
mov
fst
mov
aam
insb
movsb
xchg
aam
sbb
push
neg
inc
sub
push
sbb
push
out
and
dec
mov
negl
dec
ja
xchg
rcll
clc
push
out
scas
les
push
test
test
xchg
aad
sub
push
cmc
fstpt
cs
fdivrl
aaa
dec
fsts
or
icebp
jp
fmulp
jp
pop
fidivrs
adc
lahf
shlb
sub
push
cli
or
xor
inc
cli
sbb
mov
ds
xor
sbb
insb
jp
scas
popf
sub
xchg
dec
xchg
push
ret
inc
jp
cmpb
mov
jns
cmpsb
dec
in
ja
dec
insb
mov
adcl
mov
cli
or
or
pop
cld
add
lret
bound
mov
xor
ds
aam
popf
adc
mov
jnp
mov
stos
sub
mov
insb
clc
and
mov
mov
xchg
sub
xchg
lret
or
insb
push
js
add
lock
ja
mov
js
cmovg
push
iret
sahf
loopne
mov
fsubs
cs
insb
cmp
loopne
int3
mov
hlt
jno
cmpb
xchg
mov
hlt
jp
mov
mov
adc
cmp
xor
and
mov
cli
insb
add
adc
pop
stos
mov
test
mov
js
add
pop
mov
lea
xchg
push
sbb
pop
mov
mov
xchg
fnstsw
mov
or
xchg
push
cmp
das
pop
cltd
mov
mov
and
mulb
jecxz
gs
jge
jl
dec
mov
mov
jge
orl
or
mov
inc
iret
mov
and
xchg
xchg
orl
or
inc
femms
fsubrs
sub
call
out
js
jae
insb
iret
ljmp
mov
push
jp
nop
lahf
push
lahf
jb
adcb
mov
and
and
pop
adc
ss
pop
js
mov
adcl
pusha
mov
sahf
cmp
les
jle
enter
int
sarb
and
jp
sub
aam
adcl
insb
jle
test
popa
mov
mov
movsb
or
subl
inc
loopne
int3
sahf
pop
sbb
mov
jp
xchg
adc
popf
insb
test
clc
jb
cld
pop
push
dec
sbb
in
jp
sub
xor
cli
orb
aaa
dec
dec
sarl
inc
dec
xor
inc
jp
sbb
mov
cld
push
mov
jp
push
xchg
cmpb
xchg
and
add
jmp
push
insb
fcoml
dec
les
sti
push
test
push
push
aam
cld
push
add
jbe
insb
je
adc
push
and
jp
mov
push
fcomps
xchg
and
scas
fistps
scas
inc
or
test
lods
imul
std
cmp
push
inc
cld
gs
fisubs
inc
jbe
test
ja
xchg
xor
dec
push
inc
xchg
adc
das
push
dec
xchg
mov
sub
xchg
lods
decb
das
mov
stos
cmp
push
popl
imulb
lret
and
push
je
or
jp
xchg
and
mov
lea
adc
insb
xchg
dec
push
iret
in
cmp
mov
xor
mov
and
cld
cwtl
cld
nop
adc
xchg
xor
das
and
filds
push
mov
daa
iret
mov
push
sbb
cld
dec
aad
mov
xorb
push
jge
and
sahf
adc
sub
xchg
push
and
dec
adc
mov
sbb
jecxz
inc
or
sbb
and
test
cmp
sub
pop
pusha
cmpl
cmpb
insb
add
clc
iret
sbb
stc
lahf
out
jno
adc
arpl
jle
inc
popf
arpl
xor
jge
stos
push
sbb
enter
push
mov
js
inc
add
repnz
test
insb
cmp
sub
add
xor
das
repz
or
jne
or
loopne
mov
jp
aad
cld
inc
mov
mov
push
subb
add
xlat
jp
xchg
addb
popa
insb
decl
imul
push
insb
mov
pop
mov
in
and
and
jp
adc
aaa
aaa
inc
out
std
insb
aaa
pop
dec
loopne
daa
lahf
sarb
mov
insb
in
repz
flds
daa
push
jne
xchg
das
xor
stc
insb
push
mov
insb
pop
adc
and
pop
pop
rolb
mov
jp
cmp
or
jp
dec
std
pop
jne
push
push
bound
xchg
hlt
inc
insb
pop
adc
ja
mov
outsl
and
out
xchg
adc
lret
sarb
push
std
cld
hlt
test
call
or
int
icebp
test
mov
cmp
aad
imul
mov
mov
mov
clc
mov
aaa
jne
xchg
icebp
add
or
dec
or
sub
or
js
dec
and
or
cld
and
jp
add
cli
and
jp
loopne
aam
mov
fnstsw
in
fidivs
aam
jp
mov
loop
sar
push
add
ffree
mov
mov
mov
inc
xchg
jnp
adc
das
push
and
cmp
xor
jmp
dec
ja
mov
jl
faddl
out
adc
jns
sbb
enter
xlat
insb
in
mov
pop
dec
mov
leave
sarb
outsl
cld
dec
in
pop
add
add
aaa
xor
sub
aam
insb
daa
add
mov
sbb
xor
jae
lahf
jne
xor
mov
inc
xlat
jle
inc
dec
bound
or
xor
lods
xor
jp,pn
lea
mov
outsb
xchg
jp
cmpl
jge
pusha
xor
es
and
jmp
int3
add
fdivs
insb
aaa
pusha
dec
push
loopne
mov
jns
or
mov
rclb
jl
iret
jbe
lds
jp
dec
or
aaa
mov
das
les
fstpl
das
rorl
mov
or
and
jbe
pop
jp
ficomps
mov
or
and
jp
test
lds
or
cs
dec
sbb
jp
inc
sbb
cmp
jl
or
inc
mov
int3
in
jp
adc
push
xor
ja
push
push
mov
inc
nop
or
adc
imul
mov
lret
in
aaa
test
loope
out
movsl
nop
scas
test
cmp
push
lods
fimull
sbb
xor
scas
xor
xor
mov
pop
fs
mov
arpl
in
popw
insb
pop
cld
xchg
loop
push
out
loope
pop
jp
mov
mov
fldenv
popf
jp
xchg
out
les
int3
test
mov
movsl
pop
pop
xchg
movsb
xchg
lea
stos
mov
xchg
jnp
xor
mov
pop
cmp
das
adc
jns
filds
mov
fwait
test
jge
xchg
pop
in
adcb
cltd
icebp
iret
hlt
jl
jle
mov
popa
mov
loopne
ret
popl
or
pop
mov
mov
push
das
dec
js
jp
and
push
je
jp
xor
ss
sbb
and
jne
cmp
das
adc
jp
add
sbb
arpl
loopne
pop
loopne
ret
jmp
mov
pop
mov
icebp
iret
stos
fcoms
lcall
dec
add
pusha
mov
jno
out
out
pop
jp
mov
mov
fnsave
dec
dec
adc
cmp
adc
push
cmp
push
pop
aaa
jp
lret
and
jle
ljmp
mov
and
cmp
or
and
test
test
les
roll
mov
test
test
sbb
xor
mov
stos
pusha
insb
dec
shll
inc
das
pop
xor
jecxz
pop
insb
push
and
insb
aaa
inc
xchg
sub
scas
pop
loope
insb
sbb
push
insb
fisttps
add
addr16
ss
das
inc
das
dec
xor
out
insb
jnp
in
or
arpl
xor
insb
sbb
inc
inc
call
cmp
add
pop
out
mov
insb
bound
insb
dec
mov
push
insb
jg
insb
sbb
inc
and
sarb
iret
xlat
insb
dec
nop
sarl
fsubrl
sbb
inc
or
pop
pushf
ficoml
push
fisttpll
jbe
insb
das
test
insb
pop
cmc
xor
or
cltd
les
mov
dec
shll
stc
dec
fwait
shll
mov
cwtl
sbb
mov
cs
pop
nop
cltd
rcrl
jne
fs
cmp
ss
movsb
push
outsb
jno
or
test
scas
push
pop
in
icebp
sbb
mov
jb
push
hlt
xchg
jmp
popf
or
into
jg
push
mov
and
pop
ja
repnz
pop
xor
rcll
lea
xor
push
push
mov
jae
add
loopne
and
push
push
dec
push
and
sub
adc
xor
dec
or
loopne
fidivl
jl
out
aad
negl
pop
fsubp
test
xor
je
pop
dec
dec
cmp
iret
aad
sarb
jl
jl
mov
imul
sub
cs
inc
xor
push
cmp
int3
test
mov
cli
ret
push
push
mov
sub
xor
adc
in
les
push
test
mov
pop
push
aad
out
sahf
imul
cs
repnz
push
cmp
ss
dec
jb
icebp
or
cs
scas
push
sbb
or
js
repnz
or
push
test
movsb
aaa
jae
sbb
cmpsl
or
push
push
nop
inc
out
cmpb
push
addl
jle
fistpll
jns
js
mov
mov
mov
pop
test
stc
dec
repz
lods
andl
aad
cltd
into
push
loop
push
pop
cmpsb
imull
imul
inc
aad
dec
jge
loope
xor
xor
dec
std
push
cmc
add
inc
out
mov
in
int
push
rolb
jb
aad
mov
dec
mov
xchg
sub
loopne
mov
inc
in
xchg
mov
cmc
imul
addr16
roll
cld
jae
inc
test
inc
xor
iret
and
jl
or
add
push
jl
ljmp
pop
mov
push
shlb
jmp
or
pop
fcoms
ljmp
mov
in
dec
add
out
cs
jmp
xlat
aam
mov
scas
jl
aad
test
aaa
mov
xchg
push
pop
xchg
and
repnz
imul
sbb
dec
xor
hlt
lea
imul
js
pop
in
dec
enter
jne
loopne
hlt
fnstcw
xchg
or
loop
push
mov
jae
mov
pop
dec
into
adc
test
sbb
testb
ss
test
cmp
jmp
xchg
lahf
mov
aaa
xchg
mov
jecxz
shrl
push
fidivs
repz
mov
xor
fisttpll
testb
jns
lret
pop
ja
cmp
or
pop
push
outsb
notb
shrl
mov
dec
mov
jns
imul
add
and
push
hlt
or
hlt
xor
dec
push
cmp
fidivrl
pop
pop
test
inc
push
es
push
mov
pushf
aaa
jne
test
adc
adc
inc
mov
ret
aam
movsb
imull
jb
or
mov
push
push
or
push
and
adcl
adc
es
aam
js
add
adc
add
loope
pop
push
add
adc
ds
gs
lahf
les
sub
js
testb
xchg
daa
dec
jl
scas
sbb
in
idivb
dec
xchg
push
or
stos
lcall
ljmp
scas
testb
mov
xchg
out
aam
idivb
rorl
fwait
cltd
push
mov
xchg
lcall
sub
xor
fs
dec
jb
loopne
fadds
jle
xor
or
sti
push
jb
push
loope
int3
out
into
loop
push
push
jl
and
aaa
mov
loopne
pop
jns
mov
movsb
jns
lods
out
jne
xlat
push
jbe
cld
mov
aad
mov
cmp
pop
lea
pop
cltd
cmp
mov
cld
dec
add
push
jle
inc
push
pop
dec
cmp
or
hlt
or
hlt
or
hlt
or
hlt
or
aam
in
jb
push
inc
aad
cmp
notb
pop
and
push
mov
lahf
pop
xor
xchg
outsl
fmuls
pusha
stc
xor
push
cltd
cmp
jle
push
jl
inc
js
jae
insl
adc
repz
sub
push
or
xlat
hlt
popa
out
jl
cmpsl
out
jmp
jl
and
cmp
mov
cmp
out
fisubrs
pop
ret
sbb
jg
mov
lahf
inc
into
xchg
adc
xchg
lret
test
fildl
cli
pusha
pop
repz
xchg
push
rclw
jl
dec
cli
dec
adc
jl
js
adc
ds
push
or
hlt
iret
in
repz
fisubs
adc
push
cli
mov
jb
ss
cmp
js
jne
test
jne
pusha
jb
imulb
popa
xor
js
cmc
jns
jp
inc
inc
dec
repnz
jne
push
xor
push
push
pop
aam
push
xor
nop
dec
movsl
jne
pop
pop
xor
movsl
and
push
dec
cmp
jb
push
cmp
ss
cwtl
jne
dec
cmpb
xor
push
add
cmp
jne
push
mov
imul
pop
jne
push
sbb
push
jne
gs
test
repz
insb
out
jbe
push
jb
in
pop
rcrb
sarb
lods
sarl
jb
roll
scas
lret
xchg
cmp
adc
inc
movsb
je
jne
pop
bound
gs
aad
push
jl
repnz
mov
pop
xor
stos
mov
bound
nop
popa
fnstsw
sti
pusha
jl
push
cmc
and
xor
clc
subb
pop
fnsave
loopne
inc
pushf
cmp
pop
mov
pusha
push
fldt
push
in
mov
dec
cwtl
dec
int
inc
jp
outsb
jl
cmpsb
push
shr
movsl
mov
push
jne
xor
cmp
pop
pop
cmp
fstpl
cld
push
pop
shlb
mov
inc
imull
fiadds
dec
add
xchg
cmp
and
xor
push
pop
cmp
xchg
filds
out
shrl
jecxz
insl
cmc
adc
pop
jl
push
insb
mov
popl
push
jmp
inc
fidivs
jge
sbb
cmp
mul
pop
sub
jl
inc
call
je
mov
in
stos
movsl
jl
movsl
cwtl
fs
subb
scas
and
pop
lahf
push
cli
js
push
std
jl
in
jae
jl
inc
mov
dec
out
imul
mov
adc
movsb
dec
je
push
inc
push
iret
adc
imul
iret
icebp
add
int
bnd
jmp
stc
dec
dec
inc
call
movsb
xor
jns
xor
ja
mov
jb
pop
out
mov
jg
repnz
push
loope
push
lahf
push
push
in
dec
add
fmuls
rcrl
mov
xchg
push
dec
cmp
push
repz
mov
inc
nop
sbb
test
or
xor
loop
outsb
lods
std
cld
stos
mov
xor
pusha
lahf
enter
je
xchg
fstl
jmp
jge
jge
jge
jle
mov
sub
or
add
xor
jl
dec
jae
dec
dec
jp
outsb
sub
les
xorb
loopne
pop
jg
jo
dec
lcall
mov
jmp
imul
pop
mov
test
in
cmc
arpl
in
jl
js
lret
call
lods
pop
in
ds
xchg
fsubrl
cmpsl
xchg
cmc
xchg
movsl
cmpb
inc
aas
add
inc
orb
cld
call
inc
dec
jl
push
movsl
bound
mov
and
in
sti
in
arpl
jl
jmp
shrl
push
ss
mov
es
push
aad
add
and
cmp
jne
jl
mov
gs
clc
lds
dec
insl
mov
jne
ja
jno
mov
sahf
pop
push
mov
xchg
dec
mov
add
mov
inc
inc
pop
jmp
mov
adc
pop
fs
jmp
xchg
fisttpll
jge
jns
dec
movsl
push
cli
push
pop
pop
add
jb
sub
sbb
in
and
cmp
outsb
mov
jb
movsl
adc
sbb
in
jge
iret
and
dec
push
dec
xor
movsl
divb
fdivs
xor
dec
or
jb
mov
push
fnsave
jbe
cs
push
xchg
push
sub
fidivrl
cwtl
jp
in
ret
push
mov
and
xchg
inc
dec
insl
dec
dec
test
adc
sub
pop
jb
jge
push
mov
sbb
dec
pusha
ja
imul
jne
dec
pushf
inc
mov
iret
mov
dec
lods
dec
cld
gs
jns
jle
stos
xchg
sbb
jae
or
jae
ljmp
inc
insb
jns
iret
lret
cmp
and
testb
ja
dec
adc
and
xchg
pop
xchg
ljmp
in
dec
lds
notl
mov
push
push
xor
outsb
dec
push
sub
stos
bound
xchg
in
dec
ja
iret
adc
shlb
decb
fs
push
inc
push
cmp
pop
fldt
push
ret
icebp
sarb
jecxz
jno
sbb
jle
add
sbb
les
add
dec
pop
inc
sbb
cs
call
jns
push
rclb
out
jmp
mov
pop
xchg
aam
imul
ja
test
gs
dec
xchg
lods
dec
cmp
sub
cmp
adc
push
add
mov
xor
add
mov
scas
insl
data16
mov
jns
cmpb
jecxz
arpl
jns
fimull
cmp
jge
fadds
stos
mov
dec
xchg
adc
xor
xchg
repz
and
std
fisttps
hlt
xor
xchg
gs
outsb
stos
and
in
into
mov
sub
hlt
mov
xchg
fsubs
and
xor
push
sbb
jl
popa
inc
sbb
into
add
mov
jns
iret
ret
test
xchg
rcrb
mov
lahf
shrl
pop
sbb
imul
test
daa
shl
jp
cmc
push
dec
imul
ja
ja
rcrl
pusha
movsb
lret
out
ja
adc
imul
fnsave
inc
inc
lods
xchg
mov
add
sub
jge
sub
enter
cmp
mov
aam
imul
pop
out
sub
pop
ja
mov
pop
imul
push
ja
sub
cmp
jge
je
cld
cli
jl
or
xor
stc
mov
lahf
and
cmc
sub
int
aad
mov
push
fistpll
cmp
lea
in
inc
insl
mov
mov
xor
je
aam
imul
imul
fsubrs
cs
jae
cs
sub
js
inc
xor
mov
add
lods
dec
or
imul
clc
sub
sbb
adc
loopne
push
and
sub
cs
lods
ficompl
dec
or
push
pop
fnstsw
pop
xchg
sbb
sbb
clc
xor
ja
roll
jg
jl
shll
js
xchg
add
gs
je
rorb
pop
jne
inc
dec
repnz
pop
adc
jns
push
shl
bound
adc
ljmp
mov
cmpsl
gs
repz
add
mov
shrb
mov
cld
hlt
outsl
shlb
shrb
mov
hlt
jl
push
dec
dec
loopne
call
bound
imul
into
movsb
jns
dec
inc
push
and
enter
dec
jl
sarb
insl
nop
xchg
adcb
cmp
push
add
sub
inc
mov
push
and
sub
inc
in
sbb
loopne
nop
dec
and
pop
and
jbe
adc
or
nop
sbb
jmp
pop
add
jl
and
into
in
test
hlt
adc
clc
in
push
sbb
mov
push
dec
fiaddl
dec
js
inc
lret
and
ret
lods
dec
gs
loopne
or
shll
and
aad
andl
jb
push
fst
mov
lea
pushf
adc
xor
cmp
subb
pop
jno
fucomi
pop
fadds
mov
out
mov
xor
pop
outsb
xorb
ja
mov
add
outsl
push
jb
gs
sbb
and
bound
push
push
inc
in
or
or
int
hlt
movsl
or
xchg
inc
inc
rcll
ds
test
and
mov
push
lock
test
arpl
push
jne
jns
cwtl
pop
cmp
xchg
fimull
jl
xchg
movsb
mov
mov
add
add
push
inc
cmp
lods
push
xchg
gs
dec
inc
dec
stos
cld
test
dec
xchg
mov
insl
dec
iret
shlb
cmp
cmpsl
cmp
in
insb
aaa
adc
mov
xor
or
repnz
jle
push
jb
pop
pusha
jp
dec
ret
scas
icebp
xchg
clc
push
push
mov
push
lahf
test
cs
adc
icebp
push
hlt
push
sahf
push
notb
mov
loope
push
in
orb
pop
test
jno
gs
jns
dec
mov
jne
iret
push
imul
push
test
or
pushf
shlb
push
jl
ja
inc
mov
push
fnsave
das
inc
mov
mov
or
sbb
and
lret
sbb
mov
test
repnz
aad
lds
jle
sbb
frstor
mov
jns
dec
xor
rclb
push
or
imul
mov
inc
and
jl
pop
test
inc
es
pushf
out
pop
pop
std
outsb
xor
push
dec
dec
lods
fnstsw
push
adc
cld
cmc
xchg
stc
jns
xchg
push
or
xor
inc
or
or
cltd
dec
dec
in
dec
fsubl
in
gs
cltd
xor
iret
xchg
jns
push
inc
mov
mov
inc
dec
popa
jno
fs
imul
xor
ds
push
sub
jne
or
push
sub
loop
in
push
or
test
mov
repz
sbb
cmp
rolb
in
int3
dec
mov
cs
jns
inc
insl
jbe
cmp
test
aam
inc
push
lea
push
bound
inc
mov
jnp
jbe
xchg
adc
jl
cmc
inc
sbb
sarb
push
test
push
push
inc
dec
jae
and
jge
addl
les
mov
lea
jns
lret
xor
sub
jl
std
jge
aaa
mov
negb
pop
into
pop
int
aad
lret
insb
lds
jns
adc
movsl
popa
adc
dec
vcmppd
add
inc
jbe
or
fdivrs
and
mull
dec
ret
pop
xchg
push
jp
mov
cli
push
pop
mov
es
and
lea
sti
jl
ret
push
jns
dec
repnz
bound
push
pop
cli
xor
jns,pt
test
je
jbe
xor
or
out
ret
test
movsl
xor
mov
sbb
test
cltd
or
sbb
dec
pushf
cmp
in
push
pushf
adc
push
sbb
std
mov
mov
mov
in
loopne
fisttpll
enter
inc
les
jge
jle
dec
dec
jl
sub
adc
and
inc
js
push
add
call
cld
shlb
or
loopne
dec
int
dec
fsubrl
jmp
sbb
push
sbb
xchg
cmpsl
mov
xlat
lods
ds
jp
imul
mov
popf
lds
out
mull
dec
mov
inc
jl
ror
push
push
mov
lds
mov
sub
iret
jns
inc
inc
xchg
in
test
hlt
cld
push
mov
inc
test
sbb
fsubrl
push
mov
dec
test
mov
jbe
in
insl
fnstsw
bound
or
insb
adc
nop
popf
movsl
iret
sbb
pop
lea
fisubl
or
push
jb
aaa
pop
or
push
sub
or
jmp
add
loopne
lahf
jl
jmp
dec
hlt
cmpsb
or
iret
aad
arpl
test
mov
pusha
jge
or
stos
jl
adc
cmpsl
into
xor
jl
lret
sbb
fistpl
loopne
leave
mov
pushf
std
test
test
lcall
push
mov
pusha
sbb
xor
xchg
or
out
jne
pusha
jbe
jae
shl
js
movsl
sbb
push
iret
dec
jo
insl
cmp
call
int3
int3
gs
mov
ret
hlt
pop
aad
gs
int3
popa
aaa
push
dec
jl
pop
mov
loopne
es
xchg
dec
add
dec
xlat
jb
mov
push
pusha
push
pop
and
pop
jl
adc
mov
lock
fdivs
mov
cmp
dec
in
push
xor
ror
xchg
jl
pop
add
int
xor
cmp
ss
sarb
push
add
sub
jns
xor
ds
jmp
sarl
loopne
xchg
xor
mov
pop
ss
cmpsb
mov
jns
sbbb
movsl
adc
cltd
cmp
outsb
and
mov
jo
scas
jae
mov
cld
mov
scas
push
xor
scas
push
mov
fstps
std
push
cmc
add
jl
mov
xor
cmp
xor
scas
sbb
mov
cmc
pop
and
jb
xchg
jl
push
cli
dec
mov
leave
in
in
xchg
scas
cmp
std
push
cmc
fisubrs
into
jl
push
dec
inc
fnsave
dec
sub
incl
mov
jl
jmp
mov
jno
cmp
adc
adc
pushf
push
ret
push
push
sbb
ficoml
aad
dec
lods
sub
dec
dec
ss
sub
jns
in
adc
push
cmp
or
shrl
cld
cmpb
into
mov
jno
push
fcmovu
in
shrb
mov
jp
inc
mov
xor
lea
lods
imul
js
fdivr
xchg
jbe
scas
sahf
dec
sub
pop
cmc
lods
fldt
icebp
out
pop
shl
pop
dec
gs
cmpl
jb
inc
push
or
jae
scas
es
ss
inc
enter
pop
imul
icebp
in
ret
rcr
jns
dec
lret
jae
insl
jmp
nop
lret
out
push
inc
inc
and
aas
mov
pop
jecxz
repnz
add
xor
fcom
push
xor
ja
enter
jns
js
loope
jl
mov
mov
pusha
jns
mov
je
cmp
insb
push
jns
dec
inc
jns
out
cmpsb
push
cwtl
je
cmp
xchg
lods
add
pop
outsb
jne
andl
or
inc
jns
push
inc
lods
insb
mov
mov
xor
inc
imul
iret
dec
inc
cmp
jle
dec
jle
push
push
xor
push
jmp
jns
clc
sub
and
cmp
lea
iret
jl
pop
pop
dec
aam
ds
xor
fadd
movsb
test
xorb
pop
outsb
movsb
cmp
mov
sbb
push
or
jl
add
lahf
jl
cli
pop
test
test
fisttpll
lods
int
nop
push
hlt
imul
or
push
bound
test
imul
jns
push
test
or
pop
daa
dec
jl
aas
pop
pusha
clc
inc
iret
fs
inc
dec
push
cld
dec
gs
mov
lahf
jns
clc
cmp
pop
pop
cmp
dec
push
sbb
or
mov
jns
pop
adc
dec
sbb
xor
cmp
push
arpl
mov
push
and
and
sub
dec
adc
jecxz
sbb
sbb
cmp
add
or
lock
hlt
in
loopne
cld
adc
ds
call
sbb
es
push
loop
or
pop
jmp
mov
shlb
sarl
mov
jge
pop
dec
jb
add
ja
idivb
xor
fistpll
mov
sti
xchg
sbb
jl
or
in
dec
fs
fistl
orb
sbb
dec
mov
les
enter
int3
dec
mov
jge
popa
pusha
fldcw
es
pusha
or
jbe
inc
imul
dec
jns
dec
mov
dec
mov
cmp
popf
lahf
and
cld
movsb
jns
mov
jnp
sub
loope
adc
cmp
shll
mov
lret
cmc
jb
mov
das
jns
into
mov
fmull
lods
arpl
mov
or
ficomps
lahf
jns
jle
call
mov
clc
aas
jmp
lods
dec
jl
cmp
fildll
xchg
cld
sub
pushf
mov
cmc
cmpb
mov
shrl
aaa
je
adc
stos
lret
jge
bound
mov
pop
fs
imul
mov
push
jge
arpl
push
pop
mov
pop
pop
clc
dec
iret
inc
pop
xor
dec
xor
xor
dec
mov
cmc
xor
arpl
and
cmp
sub
and
dec
and
sbb
xor
sub
cmc
adc
arpl
xchg
clc
push
sbb
dec
ds
add
xor
dec
or
call
hlt
test
push
cld
push
loopne
in
xor
iret
shrb
nop
and
stos
outsb
in
fdivrs
pop
fdivr
sahf
gs
aad
enter
xor
mov
add
dec
aam
or
jp
inc
mov
lock
pop
clc
clc
test
cld
pop
test
or
xor
in
test
es
push
push
jl
xor
dec
mov
cmp
adc
lods
push
iret
jns
dec
push
pop
or
xor
cwtl
test
jns
clc
fs
test
dec
mov
or
xor
jnp
mov
gs
jns
mov
push
pusha
mov
pop
fs
dec
iret
push
dec
xor
fs
pop
pop
cmp
pop
push
jl
outsb
mov
adc
sbb
in
fistpl
dec
mov
nop
arpl
mov
mov
je
pop
jp
jl
dec
or
jb
push
add
adc
jmp
inc
jge
imulb
jb
lods
mov
pop
mov
inc
xor
popa
adc
in
pop
dec
repz
and
jl
shll
push
fcomps
mov
pop
sti
jb
jae
and
loopne
mov
fdivrs
adc
repz
cwtl
jl
push
insb
xchg
pop
cltd
cmp
jae
jne
jl
mov
jl
imul
push
or
mov
jb
jecxz
push
ret
stos
xchg
adc
jl
cmp
les
mov
imulb
out
jno
adc
inc
or
test
gs
jmp
shll
jle,pn
js
xchg
ds
pop
popf
dec
ds
push
rclb
mov
jmp
ret
jb
cmp
cli
push
lods
mov
clc
dec
jmp
push
in
pop
xor
loopne
mov
jl
fistps
imul
sbb
push
jl
repz
dec
cmp
jmp
lahf
int
inc
aam
dec
lret
dec
hlt
dec
jb
shll
push
mov
cltd
fistpll
push
lea
xchg
push
int3
jl
add
cltd
jmp
inc
jl
ds
jbe
xor
xor
repnz
push
mov
adc
adc
cli
push
repz
push
sbb
enter
imul
mov
push
mov
or
jl
push
sarl
jb
cs
jl
push
cmp
popf
jb
divb
adc
lock
pop
jbe
mov
adc
and
aad
roll
ret
cmp
pop
not
adc
push
cmc
fsubl
dec
jb
jl
and
dec
inc
int
jl
jns
shlb
mov
jl
data16
movsl
dec
xchg
icebp
pop
sub
push
or
xchg
and
mov
ss
push
loope
pop
or
mov
pusha
cmp
push
xchg
dec
xor
jb
ds
xor
dec
cs
jb
jl
repnz
dec
xor
adc
repz
xor
dec
mov
lods
mov
xchg
push
push
jb
lea
arpl
jl
repnz
push
popa
push
xor
push
jb
repnz
lahf
mov
inc
pop
xor
addr16
les
jb
push
shlb
mov
xor
pushw
imul
add
imul
jl
repnz
jb
repnz
dec
shl
push
imul
mov
nop
lods
popa
push
add
cmc
jb
andb
dec
imul
push
xor
insb
into
pop
and
jl
sti
push
and
jl
aad
dec
push
mov
mov
mov
test
aaa
push
jl
push
adc
xor
jl
mov
daa
jb
push
push
enter
adc
jl
repnz
pop
pusha
dec
mov
xor
gs
lods
repnz
xor
or
push
int
push
jl
xor
push
js
and
lods
int
shrb
nop
hlt
pop
push
daa
fimull
dec
inc
and
cmc
inc
movsl
adc
xchg
nop
leave
insb
push
pusha
or
sti
jb
push
jno,pt
shlb
jl
jb
pop
loopne
test
iret
nop
push
sbb
jb
test
push
notb
les
jb
adc
jb
nop
add
bound
jb
xor
sub
dec
je
jb
xor
cmp
test
inc
hlt
shrl
ss
jb
nop
mov
add
adc
lock
nop
imul
fidivrl
or
push
cmp
push
adc
xor
pop
jb
or
into
jb
xor
in
hlt
sub
jae
pop
and
cmpsl
xor
jne
pop
jae
imul
stc
dec
inc
dec
fistps
dec
inc
xor
dec
mov
mov
das
arpl
dec
dec
xor
mov
mov
mov
mov
cmc
sbb
inc
and
jne
sub
gs
jne
adc
sub
jmp
int
sub
cld
jmp
je
add
jne
dec
loope
fstpl
aas
cmovg
inc
or
in
cld
jne
ja
jne
js
mov
fs
xor
cmp
xchg
std
dec
mov
pop
gs
insb
pop
pop
stc
jmp
cmp
aaa
lock
clc
test
xchg
mov
lea
loop
fcomps
or
cmp
sahf
push
ja
imul
testl
xchg
xchg
xchg
cltd
lea
sbb
or
lret
xchg
movsl
jle
dec
insb
mov
popf
inc
movsl
and
popl
sub
push
iret
ljmp
imul
pop
shl
xlat
mov
mov
popf
inc
movsl
xor
imul
xor
push
loopne
sub
pusha
jae
push
insb
jecxz
rolb
jp
popa
push
es
cli
scas
lahf
mov
repz
jbe
popa
rcll
inc
mov
mov
stos
cmpb
xchg
sbb
add
lret
mov
mov
repz
cmp
test
inc
push
repz
fmuls
dec
movsb
dec
cmpsb
dec
xchg
jp
pop
cmp
int3
cwtl
fiadds
or
push
or
push
mov
dec
dec
dec
pusha
push
xor
pop
add
cmp
add
pop
sbb
dec
xchg
ja
je
cmp
pop
jl
adc
push
cld
jl
inc
test
and
push
insl
jae
mov
pop
and
js
add
jmp
mov
cs
outsl
or
pusha
add
add
out
ret
js
cmp
jbe
dec
pop
xor
addr16
bound
xchg
insb
jns
arpl
jno
dec
nop
push
mov
pop
push
inc
cmp
jl
push
sbb
aad
push
lods
ret
lods
cmpsl
lods
pop
inc
jp
pop
jne
movsb
pushf
insb
sbbl
dec
mov
xchg
xchg
sbb
test
pop
pop
or
sbb
or
and
pushf
dec
daa
dec
dec
inc
sub
mov
hlt
call
or
shlb
fsubrl
or
jns
pop
in
adc
mov
push
mov
add
cwtl
jl
test
cmc
addr16
or
popa
or
jb
repz
leave
xor
mov
mov
mov
xchg
outsb
in
in
movsl
xchg
pusha
out
daa
xor
and
cmp
jb
jge
sub
push
dec
in
jmp
int3
movsb
mov
mov
jl
jb
jmp
adc
pop
push
mov
sbb
jnp
rcrb
pop
int
push
cmpsb
icebp
pop
xor
jb
aam
je
jl
fidivrs
mov
clc
cmp
scas
and
repnz
dec
mov
adc
mov
repnz
outsb
pop
pusha
jbe
push
adc
ds
sub
xor
dec
or
in
mov
fcoms
cmpsb
mov
dec
fs
pusha
ds
sbb
jl
repnz
dec
in
out
jmp
gs
mov
xor
mov
pop
push
jl
repnz
and
sub
or
jb
shlb
jns
gs
jl
repnz
ja
clc
gs
ds
cmp
xor
dec
or
jecxz
xlat
adc
ds
repnz
jno
pusha
bound
inc
cmp
xor
dec
repnz
mov
mov
cmpsl
jl
repnz
insb
adc
ds
gs
sub
xor
dec
repz
mov
mov
jl
repnz
jno
pusha
bound
cmp
jl
repnz
ss
xor
cmp
adc
ds
fistpll
xor
mov
sahf
dec
pop
popf
push
jb
data16
stc
jb
imul
gs
jns
sbb
aad
out
jb
gs
test
xor
gs
ds
cmp
xor
dec
cmc
loopne
mov
mov
repnz
insl
xor
and
jb
repnz
jp
pusha
insb
mov
sbb
jb
mov
sbb
loope
jb
mov
fsub
lret
cmpsb
loopne
mov
fcoms
jb
pop
mov
aaa
adc
jb
repnz
pusha
mov
mov
pusha
sub
dec
inc
dec
repz
jbe
sub
dec
or
dec
jns
add
sbb
inc
js
adc
fiaddl
sbb
in
fwait
js
push
ja
jmp
jb
ret
loope
push
movsb
jl
gs
imul
dec
test
push
jecxz
outsb
daa
sarl
jb
adc
ds
gs
enter
and
aad
pushf
and
shll
adc
lret
xchg
jb
nop
adc
push
jb
fs
or
jl
test
pusha
out
ret
lcall
pusha
and
and
push
adc
imul
sub
push
jbe
jmp
jne
inc
push
push
dec
and
xor
push
push
xor
jns
dec
jb
or
xor
ret
jns
push
repz
dec
push
jns
add
adc
sub
mov
in
sub
dec
sub
cmc
cmp
mov
mov
push
cmp
dec
cmp
jns
jp
fs
jns
mov
dec
adc
bound
outsl
sbb
or
add
push
xchg
push
in
adc
inc
adc
push
add
sub
jl
dec
adc
insb
arpl
adc
push
pop
loop
dec
sbb
jns
fldcw
mov
movsl
jns
push
push
je
dec
adc
gs
ret
ret
jns
sbb
dec
push
sbb
dec
int3
into
dec
sbb
jns
icebp
fisttpl
push
cmp
mull
or
mov
jns
push
test
dec
cmc
pop
jns
mov
jns
push
sti
gs
dec
cld
ret
jns
cmpsl
xchg
mov
dec
pop
add
cltd
arpl
sbb
push
stos
mov
cmpsb
mov
gs
xchg
inc
inc
cmp
in
cmp
cmp
mov
mov
xor
jge
cmpsb
push
mov
imul
dec
out
add
mov
negl
hlt
out
jae
cmp
jns
push
test
inc
dec
movsl
sarb
jae
cmc
repz
jns
stos
repz
inc
dec
cmpsb
jns
pop
bnd
inc
icebp
jns
add
xor
jae
cmp
mov
gs
jge
jmp
nop
jns
push
cltd
inc
sub
hlt
mov
cmp
mov
mov
xchg
jae
inc
dec
xchg
jns
add
xor
jp
push
mov
ret
push
mov
dec
mov
sti
inc
jb
outsl
negl
int3
out
xor
xchg
lahf
sbb
jb
pop
push
jno
out
pop
adc
pop
cld
and
outsl
cmpsb
push
andb
and
jb
mov
mov
bound
push
and
mov
dec
push
data16
imul
gs
jb
push
sqrtps
sbb
push
movsl
or
pop
mov
dec
push
push
dec
adc
pop
cmc
pop
add
xor
das
xor
sbb
xchg
sbb
cmp
das
cmp
decl
cltd
arpl
mov
push
sbb
push
xor
and
add
push
and
iret
sub
dec
and
xor
sub
cmc
arpl
mov
push
sub
iret
adc
dec
or
xor
adc
in
adc
jmp
iret
sbb
sub
mov
push
sbb
iret
sbb
dec
sbb
or
xor
add
ret
arpl
mov
push
add
iret
add
dec
add
or
xor
or
mov
push
mov
pop
or
mov
or
dec
or
or
xor
lock
arpl
mov
pop
icebp
cmc
movsl
push
xor
mov
stos
out
clc
xor
cmc
mov
arpl
mov
pop
stc
clc
xchg
iret
cli
pop
xchg
dec
fisttps
or
xor
fisttpll
jge
jecxz
adcl
sbbl
loop
test
dec
mov
xor
in
outsl
cmc
out
pop
outsb
jl
mov
pop
in
clc
jno
and
jns
clc
jne
iret
pop
jnp
rorb
or
xor
into
mov
sarl
arpl
mov
shll
iret
xlat
pop
imul
imul
push
arpl
mov
fnstenv
iret
mov
dec
pop
or
xor
mov
jge
arpl
mov
shll
pop
dec
dec
enter
lds
mov
arpl
mov
push
leave
mov
pop
lret
loop
gs
mov
adc
jns
gs
jge
pop
mov
cmp
cmp
jns
jns
push
mov
mov
pop
jns
inc
jns,pt
mov
dec
jns
dec
or
jns
repnz
jns
lahf
push
jns
repnz
adc
repnz
jns
movsb
jl
aad
mov
inc
jns
xchg
push
test
pop
jns
movsl
pop
adc
repnz
jns
stos
pop
adc
repnz
jns
test
mov
pop
clc
repz
gs
jns
or
gs
jns
or
gs
jns
or
gs
jns
jge
pop
cwtl
mov
pop
jns
pop
jns,pt
mov
pop
jns
pop
inc
jns
mov
push
cltd
repnz
jns
lcall
cmp
rcrb
jle
pop
jns
rcrb
test
add
cmc
mov
or
jb
test
jns
mov
pop
jns
push
push
jns,pt
mov
pop
jns
push
lods
ret
jb
or
mov
jae
mov
je
mov
jno
mov
iret
ja
lahf
das
js
popf
out
jne
mov
jnp
cmpsl
arpl
push
jns
stos
pop
jp
test
loop
pop
into
lea
jb
mov
iret
cmp
pop
jb
pop
pop
xchg
push
aas
mov
or
xor
or
push
fiaddl
iret
mov
jb
les
rorl
into
out
xor
mov
mov
jmp
jns
push
mov
addl
popa
xchg
dec
xor
orb
iret
xchg
jb
xchg
jne
push
mov
jnp
push
jb
gs
push
and
xchg
pop
push
push
imul
pop
arpl
mov
popa
cmp
addr16
cmp
pop
adc
cmp
jb
cld
imul
cmpsb
push
push
mov
gs
jb
mov
push
and
iret
negl
dec
clc
dec
push
or
xor
testb
arpl
mov
stc
mov
pop
cli
cld
aas
add
jge
loope
loopne
dec
fidivrs
inc
push
jecxz
jb
mov
push
and
jb
mov
out
inc
arpl
mov
in
dec
pop
out
das
and
mov
jmp
mov
cmp
mov
mov
xor
mov
lahf
jb
mov
cmc
test
pop
arpl
mov
pop
xchg
clc
and
fwait
gs
or
cltd
cld
and
jge
sub
push
xorb
inc
sub
cmp
jp
hlt
jnp
stos
push
push
inc
jae
jno
test
mov
in
dec
jl
ljmp
into
cmc
pop
jge
arpl
push
bound
iret
pop
fmull
dec
fimull
xor
push
mov
arpl
push
push
mov
pop
pop
clc
iret
push
pop
int3
dec
pop
dec
lret
xor
inc
mov
arpl
push
cmp
jae
loop
adc
pop
in
mov
jns
mov
jecxz
and
jns
mov
ja
sbb
cmp
pushf
mov
xchg
dec
cwtl
pop
pushf
dec
xorb
mov
jbe
dec
fsubl
mov
add
add
or
or
jmp
mov
mov
bound
popa
ja
les
push
mov
inc
jmp
sub
mov
insb
inc
pop
dec
int3
add
inc
push
xor
ja
xchg
fld
movsb
addl
subl
in
xchg
out
je
test
scas
xchg
mull
repnz
pop
lea
filds
js
pop
push
pop
dec
jno
cmp
ja
adc
jne
add
jnp
add
div
or
in
pop
adc
pusha
arpl
mov
mov
dec
lods
addr16
popf
ljmp
push
jle
or
pop
in
pusha
or
push
dec
lea
push
scas
inc
xlat
js
icebp
xor
push
push
or
push
xor
pop
addb
add
push
cmp
ljmp
mov
mov
aad
dec
lea
insb
inc
dec
test
pop
jbe
divl
js
push
pop
mov
dec
jae
dec
mov
adc
les
insl
shll
jbe
jl
and
loope
fs
mov
icebp
stos
sbb
mov
shr
sub
rcll
or
lods
icebp
dec
mov
js
jl
dec
mov
inc
insb
mov
nop
adc
jg
xor
push
cld
xor
mov
arpl
push
dec
jecxz
inc
dec
jne
cmovnp
dec
das
mov
dec
cs
xor
xor
push
aaa
cmp
fnsave
cmp
cmp
lods
cmp
adc
mov
pop
cmc
sbb
push
push
ss
xchg
out
cld
repz
push
icebp
cmp
dec
clc
scas
add
idivb
sti
jne
mov
cli
jne
fnstsw
mov
xorl
push
das
jb
imul
sbb
xor
aaa
xor
mov
xchg
or
mov
jge
sub
add
repnz
mov
dec
loopne,pn
shl
iret
lods
negb
stos
xor
mov
sarl
out
cli
push
xor
int3
add
dec
data16
add
jge
sbb
mov
xlat
jne
jge
orb
mov
xor
nopl
imul
push
xor
jp
xchg
lea
inc
loop
enter
lret
sbb
dec
mov
mov
fidivs
pop
and
pop
dec
out
and
cmp
xor
adcl
add
std
dec
and
push
adc
nop
dec
cwtl
iret
xchg
mov
push
in
add
add
pusha
cld
std
add
mov
std
adc
test
test
pop
pop
fs
sar
aaa
std
xor
pop
and
jnp
loopne
rcll
and
or
test
cmpsl
std
imul
outsl
pop
mov
sub
jl
push
sbb
dec
pop
xor
out
mov
dec
pop
add
std
add
mov
push
xor
inc
scas
daa
stos
dec
add
outsl
ret
push
cs
jb
dec
cli
xchg
testl
pop
xor
cmp
and
xor
cmp
pop
pop
gs
xor
cmp
aaa
nop
cmp
push
arpl
out
mov
outsl
inc
fadds
adc
mov
add
adc
add
into
insb
pop
sbb
and
lods
mov
ret
dec
adc
mov
call
rclb
pop
pop
add
inc
cmp
sbb
shll
add
or
orl
div
pop
sbb
or
jle
sarl
hlt
adc
mov
and
adc
sbb
dec
xchg
cmp
xor
sbb
push
or
sbb
orb
xor
push
xor
cmp
cmp
stc
testb
inc
scas
popa
rolw
roll
xchg
inc
aaa
mov
sub
imul
pop
sub
xchg
add
imul
mov
sbb
arpl
dec
mov
jp
xor
movsb
out
shll
sbb
sbb
or
push
insb
jl
lock
idivb
add
push
adc
and
add
sbb
pop
sbb
mov
adc
sbb
xlat
xor
xor
and
add
and
or
cmp
sub
es
xlat
mov
es
popf
lcall
cmp
sarl
in
mov
aaa
addr16
pop
cmp
push
pop
out
inc
mov
and
repz
xor
adc
sub
pop
pop
decb
stos
and
jne
ja
movhps
pop
test
xchg
cmp
xchg
cmp
jns
and
ljmp
sti
push
sbb
in
test
adc
loop
xor
and
xor
shlb
cmp
push
jnp
bnd
jl
and
push
xchg
add
push
and
shrl
dec
cs
in
push
and
or
ljmp
ss
or
push
jb
int3
pop
xor
sbb
inc
push
cmp
lods
es
pop
sbb
push
sub
ficoms
cs
adc
push
lds
and
jg
jne
cmp
add
popf
pop
loopne
movsb
push
aam
push
adc
cwtl
adc
aas
ffree
push
jg
sub
sbb
add
popf
call
mov
out
jmp
mov
xorb
adc
xchg
mov
jno
fiaddl
mov
std
xor
xor
and
push
outsl
add
popf
xor
inc
ss
pop
add
jno
pop
loop
mov
popf
xchg
fisttps
sahf
pusha
fbstp
push
add
add
xor
movsl
std
mov
arpl
clc
mov
mov
cs
jb
add
pop
fs
mov
in
nop
sub
sti
sbb
pushf
shrb
inc
leave
pop
push
xor
fs
test
jmp
mov
adc
sub
mov
sbb
sub
push
adc
push
cltd
push
into
add
mov
lds
mov
psraw
mov
ja
addr16
mov
inc
cmpsb
test
sbb
jnp
xor
outsl
jle
jmp
adc
test
push
arpl
aaa
insb
cmp
jle
gs
js
or
insl
jns
add
mov
loope
pop
xchg
pop
dec
dec
adc
add
pop
inc
sbb
mov
inc
mov
in
add
ret
aad
push
mov
int
jle
jmp
daa
mov
arpl
rol
push
shll
push
inc
arpl
icebp
and
test
pop
cmp
loopne
rcr
ror
rorb
daa
xchg
pop
push
pop
lahf
add
or
sbb
mov
ss
aad
jp
imul
and
mov
aas
mov
xchg
push
inc
scas
and
adc
push
hlt
jp
sbb
jns
mov
pop
pop
pop
ds
popl
push
pop
or
popa
adc
cld
cli
into
cltd
ds
xchg
aad
jns
and
ss
cmp
imul
or
push
es
push
jp
jno
cmpsb
xor
stc
arpl
cmp
adc
mov
imul
xchg
andl
jbe
push
inc
pop
push
dec
dec
test
dec
sarl
pop
mov
mov
aam
das
int
dec
dec
jmp
loop
loop
pop
add
outsl
mov
ss
xor
inc
stc
xchg
xor
cmp
pop
mov
fldl
fnstsw
mov
pop
push
jmp
mov
pop
out
jne
add
into
popf
sub
popf
jns
add
add
out
out
loopne
push
pop
jl
push
pop
pop
sbb
lea
adc
add
jns
popa
mov
inc
jns
push
dec
ficoml
imul
or
sbb
icebp
bound
out
xor
clc
popa
lds
loope
dec
cmp
fldcw
xor
mov
push
push
aas
jle
out
mov
xor
add
jnp
daa
fcom
adc
jns
xor
cmp
popa
mov
and
xor
push
jge,pn
sbb
adc
cmp
sbb
add
dec
scas
fsubl
xchg
aad
loop
pop
aaa
aad
push
bound
sbb
clc
es
jo
dec
cltd
mov
pop
jbe
pop
js
inc
cmpsb
mov
cmp
push
scas
in
bound
mov
daa
xorl
xchg
ret
sub
push
inc
scas
jge
pop
inc
inc
and
out
push
lcall
xor
dec
add
int
push
sbb
ror
mov
push
jge
jg
js
and
adc
mov
stc
xlat
sbb
xor
and
ds
cmp
aaa
xchg
and
jg
jl
xor
cmp
fs
and
push
cmp
inc
cmc
mull
jns
bound
or
xor
dec
lods
and
xchg
xor
int3
cmp
mov
push
mov
and
push
xchg
and
push
arpl
xor
arpl
jl
into
and
aaa
mov
aaa
or
pop
and
add
xor
push
fwait
push
xchg
fistpl
add
pop
call
out
dec
pop
xchg
test
jne
pop
dec
adc
push
mov
fcomps
subb
xor
jle
mov
pop
jecxz
lea
push
ja
dec
ljmp
push
js
bound
out
gs
cmp
mov
mov
and
add
arpl
cmp
mov
cmpsl
movsb
ltr
aaa
push
xor
xor
jns
and
xchg
loopne
add
aad
xor
mov
inc
dec
sub
das
loopne
std
add
pop
and
pusha
and
clc
cmp
cmp
cmp
and
mov
push
test
pop
pop
xchg
sti
jae
and
xor
sbb
mov
jecxz
and
aad
dec
cmp
jmp
test
mov
cmc
add
imul
cmp
sub
lds
cmp
pop
mov
xlat
fs
test
and
inc
imul
inc
outsl
lahf
mov
test
pop
and
into
and
xchg
loop
xchg
aas
inc
sbb
cs
xchg
aad
pop
jns
and
fnstsw
cmp
pop
push
lret
fsub
pop
sbb
cli
mov
and
pop
add
pop
js
pusha
sbb
loopne
and
sbb
cmp
add
pop
hlt
out
and
mull
sbb
mov
mov
push
mov
lahf
dec
data16
push
and
cmc
jmp
jmp
push
dec
aas
divb
pop
jbe
mov
data16
xchg
xchg
maxps
imul
stc
cmp
push
add
imul
mov
add
jne
imul
cs
mov
jg
loop
add
or
push
push
leave
inc
pop
mull
in
fs
adc
add
fwait
pushf
mov
repnz
pop
sbb
int3
sti
xchg
push
popa
sbb
cmp
les
push
inc
xchg
fisttpl
leave
es
cltd
lret
adc
imulb
cmp
arpl
outsl
push
adc
hlt
mov
out
adc
and
jnp
mov
in
add
jnp
sbb
ret
incl
or
and
aaa
ss
test
push
mov
hlt
jb
shl
mov
incl
push
jp
gs
mov
sub
pusha
sti
pop
mov
aam
and
and
sbb
add
pop
pop
lea
not
and
push
in
mov
es
and
adc
cmc
xchg
leave
scas
fistpl
mov
bound
push
xchg
int3
push
enter
sbb
outsl
push
push
pop
fstps
fdivrl
leave
sbb
lret
ret
shld
pop
jle
jne
add
repnz
movsb
push
push
dec
dec
fisubs
push
mov
pop
pop
jne
add
movsl
pop
xor
sub
inc
jns
int
push
sbb
cmp
dec
in
loop
and
push
fbld
sub
ss
mov
cmpsl
mov
jl
dec
cmp
xor
mov
jp
loopne
in
pop
in
and
outsl
adc
pop
out
lods
aam
pop
pop
fidivrl
push
adc
inc
xchg
jb
pusha
lret
and
inc
rcll
imul
and
and
dec
shll
in
pop
sarl
mov
enter
cmpsl
hlt
mov
push
pop
inc
push
mulb
and
sbb
cmp
push
js
movsl
xchg
fmull
add
fldenv
mov
add
push
sti
push
icebp
das
int3
cmp
call
sub
push
dec
test
xor
cwtl
jp
dec
sub
xchg
mov
adc
cmpsl
pop
test
sbb
mov
cmp
jne
pop
cwtl
dec
mov
push
ss
in
jp
dec
jnp
das
icebp
push
pop
xlat
mov
aam
inc
adc
inc
ret
dec
pop
sbbb
mov
xor
cmpsb
or
stos
sbbl
mov
xor
imul
les
mov
xchg
int
xchg
test
push
push
outsb
xor
push
or
bound
push
push
and
rorb
in
dec
push
push
dec
faddl
fldenv
aaa
out
inc
inc
dec
cmp
sub
fbld
adc
inc
cmp
test
push
adc
shrb
or
xlat
inc
push
xor
inc
test
inc
xor
xlat
clc
shll
dec
mov
test
cmp
xchg
push
fdivrl
add
pop
testb
add
pop
sbb
adc
cmp
xor
lods
incb
or
push
xor
rcrl
ret
cmp
jne
or
or
jne
iret
loope
xor
add
pop
fs
inc
add
stc
stc
insb
push
add
data16
inc
add
sub
add
inc
lea
test
inc
adc
leave
cld
fldl
adc
push
push
push
pushf
inc
pop
push
jg
adc
out
daa
mov
xchg
int
jp
loop
or
push
leave
sbb
jno
xchg
test
dec
sbb
xor
mov
xchg
bound
and
pop
hlt
sahf
sub
sub
add
add
jle
cld
jl
inc
sarb
fstpt
pop
dec
xor
sahf
mov
hlt
mov
addr16
inc
bound
bound
lret
inc
not
mov
mov
xchg
test
in
fisttps
jmp
stos
test
add
add
xchg
rcll
pop
push
mov
fcmove
dec
push
dec
dec
icebp
dec
aas
cmp
loope
cmpsl
jge
cmc
or
mov
and
cmp
mov
push
sti
pop
cmp
push
add
add
ss
fs
loope
mov
sbb
iret
bound
push
xor
pusha
out
ret
or
nop
test
cmpsb
xor
cmp
test
test
popa
fs
out
repnz
rcll
adc
mov
int3
test
enter
push
shlb
aam
jmp
push
in
cmpsb
adc
push
in
in
cmpsb
adc
mov
clc
push
hlt
sbb
in
adc
cmpsb
pop
add
sbb
adc
ljmp
mov
and
adc
and
xor
dec
rorb
out
jmp
push
pop
adc
push
sbb
insb
push
push
pusha
mov
jl
adc
iret
je
jo
and
sub
cwtl
push
shll
fs
xchg
adc
inc
aad
dec
cs
add
mov
and
testb
pop
jecxz
int
cmp
jg
push
dec
inc
cmpsb
loop
lret
jne
sbb
cs
aam
out
jbe
loop
adc
push
cmp
cs
fcmovnbe
xlat
cs
jecxz
lret
cs
cmp
jns
jbe
cmpsl
lret
test
mov
jns
push
cmp
gs
pop
lea
push
sbbb
lret
jmp
xor
push
and
mov
push
mov
sbb
push
and
in
pop
xchg
test
gs
lds
ss
addr16
jns
jbe
mov
push
sbb
jecxz
mov
xchg
dec
mov
in
inc
cli
push
mov
daa
movb
and
mov
daa
xor
out
push
and
xchg
hlt
out
fidivrs
loop
rol
testl
fldt
pop
cs
loopne
frstor
jp
adc
rcrl
push
es
int
and
inc
ja
cmp
cmp
sub
push
xchg
frstor
pop
sbb
or
sbb
jl
stos
js
aas
je
jo
jmp
sub
dec
subb
lds
cwtl
xchg
sti
xchg
mov
shr
test
movsb
test
mov
pop
mov
mov
cli
int3
mov
shr
and
and
mov
leave
push
in
cli
loopne
inc
cld
sub
shr
sub
xchg
adc
dec
or
add
push
add
ljmp
sar
adc
dec
sub
sub
adc
sti
and
shl
loop
xor
dec
sar
mov
cmp
adc
cmp
sti
pop
jns
mov
iret
push
and
add
mov
cmp
loope
jl
push
decb
data16
xchg
adc
test
mov
sahf
dec
mov
mov
dec
int3
icebp
enter
popa
ror
incb
aam
shlb
inc
in
xlat
adc
sbbl
or
idivl
data16
out
xchg
xlat
and
dec
push
pop
iret
jle
leavew
jb
xlat
ljmp
or
pop
jge
push
pop
imul
fdivrs
int
adc
addr16
cmp
cmpsb
dec
insb
ljmp
dec
in
out
mov
add
pop
sahf
add
push
out
dec
mov
addr16
dec
in
mov
mov
adc
jb
repnz
jecxz
push
aaa
mov
mov
inc
push
ret
sub
mov
dec
xlat
aam
sub
iret
cmpsb
xor
xchg
dec
out
jecxz
fstp
es
es
repz
add
pop
xchg
add
xchg
popa
pop
pop
sub
loop
leave
data16
iret
and
xchg
dec
fdivs
pop
imull
mov
test
and
fs
lahf
aam
xor
and
lahf
jl
addr16
adc
or
out
fldcw
add
mov
cmp
mov
sahf
mov
and
and
and
sbb
fsubp
fcmovnu
sub
and
xchg
push
iret
and
rcrl
push
jecxz
das
fistps
sti
xchg
dec
mull
repz
and
in
lds
add
call
dec
sbb
sub
gs
jno
add
or
mov
xor
pop
mov
and
lcall
ds
aad
aam
imul
pop
cmp
addr16
xor
fs
adc
pop
mov
ljmp
pop
cmpl
push
iret
sub
iret
mov
and
push
dec
xor
sbb
dec
loopne
rcl
push
in
mov
aaa
loopne
mov
push
jmp
pop
cs
adc
jbe
fcompl
ds
int3
cmp
pusha
dec
pop
in
push
insb
jcxz
cmp
jge
cli
dec
popf
dec
cmp
lds
aaa
push
sahf
sbb
pop
sub
and
pop
or
cmp
mov
sti
push
in
mov
adc
in
fildll
mov
jmp
hlt
jg
cli
rorl
add
out
cmp
xchg
ds
cmp
or
cmp
adc
in
sbb
sbb
adc
and
fadd
es
scas
rorl
cmp
cmpsl
sti
or
repz
mov
ret
pop
roll
and
push
mov
sbb
or
cld
xchg
sbb
push
gs
xor
jg
push
mov
fucom
pop
mov
push
imul
rorb
xor
fbld
mov
int
fldenv
jge
sub
inc
hlt
int3
imul
mov
int3
push
pop
lea
add
push
arpl
inc
movsb
adc
das
xchg
cmp
es
mov
push
cmp
pop
popf
dec
cmp
cmp
imul
xchg
das
xchg
inc
dec
push
pop
fs
fstp
and
xor
sub
push
cmp
push
pop
push
lsl
es
pop
xor
sub
and
cmp
mov
aaa
and
ja
xor
xor
xor
cmpsl
jns
push
imul
mov
mov
imul
cmp
inc
sub
int
xor
cs
xor
mov
xor
in
sbb
rcrl
mov
push
mov
cmp
ret
inc
hlt
enter
aaa
ljmp
mov
imul
pop
inc
pop
aaa
out
and
and
xor
cmp
xor
jmp
pop
fisubrs
and
clc
mov
cmc
mov
aaa
pushf
aad
mov
xor
stos
leave
adc
xchg
inc
inc
push
xor
inc
cs
aaa
int
cmp
dec
mov
cmp
and
add
mov
add
cmp
cmp
arpl
int
insb
cmp
lods
sbb
call
sbb
out
mov
les
add
pop
xchg
push
pop
cmp
test
int3
fsubrs
fisubrs
or
repnz
mov
mov
out
jl
dec
daa
mov
jg
scas
jae
aam
pop
adc
pop
mov
fcoml
cli
push
or
jnp
cmpsl
pop
int3
push
and
push
or
mov
push
loope
inc
sub
jbe
sarb
add
addb
cmp
loopne
mov
adc
aaa
cli
out
testl
push
outsb
pop
adc
mov
sub
pop
cmp
mov
sub
lock
add
daa
mov
jnp
cmp
mov
adc
jns
mov
jnp
mov
and
mov
stc
add
in
xlat
arpl
adc
ljmp
ret
mov
push
or
cmp
bound
xor
dec
mov
ficompl
jae
xchg
sbb
popa
ret
in
push
or
pop
push
add
mov
pop
push
sbb
xor
jecxz
enter
xchg
sub
iret
and
imul
ss
or
fsubl
mov
cmp
pop
ret
mov
ja
and
or
xor
inc
jnp
xor
cmpsb
or
inc
pop
xchg
in
data16
push
inc
sub
out
xchg
aaa
xlat
jp
mov
fisubrs
lods
push
icebp
add
jne
xor
sbb
mov
inc
str
cwtl
cmp
mov
add
push
and
imul
sbb
or
fsubrs
pop
leave
xchg
enter
xchg
cli
jbe
nop
cmp
adc
fs
fdivr
sti
jne
xor
repz
jns
in
cmp
sbb
js
dec
mov
in
push
xorb
sti
dec
sub
add
fdivrl
pop
cmp
mov
mov
std
js
jbe
push
add
sbb
inc
mov
or
imul
dec
test
add
jnp
ucomiss
daa
sub
insb
shl
into
imul
cltd
jp
mov
pop
stos
mov
inc
add
adc
adc
push
jns
mull
lret
rcrl
int
jne
loop
add
les
sub
xchg
daa
sbb
push
sub
xor
lcall
mov
mov
push
into
pop
xchg
pop
cmp
mov
movsb
mov
add
push
cmp
fisubrl
out
xchg
push
and
fcmovu
sti
jbe
es
out
cs
cmp
cs
cmp
jbe
cltd
pop
sub
aas
and
and
mov
mov
inc
ret
loope
mov
fstpt
xchg
xlat
test
in
popa
cmp
std
pushf
sbb
addr16
push
or
cmp
outsl
xlat
iret
mov
jge
jge
dec
int
decl
out
sub
mov
scas
xlat
add
mov
xchg
adc
int3
cmp
dec
into
jbe
push
sub
insb
aaa
repnz
test
pop
out
sbb
mov
mov
inc
cmpsb
adc
mov
fldl
add
adc
enter
leave
adc
xor
scas
lahf
aad
lret
jmp
jp
cwtl
aaa
jbe
sbb
or
dec
fwait
enter
sub
dec
jnp
push
sahf
imul
adc
and
jnp
push
mov
clc
jle
sbb
pop
insb
adc
orl
loop
xor
stc
js
ss
mov
inc
sub
imul
inc
pusha
sub
andb
and
fs
stc
dec
int
jnp
sbb
push
jmp
les
mov
pop
movsb
sub
das
aaa
popa
xor
push
pop
push
sbb
es
ds
inc
popa
sahf
pop
adc
push
mov
arpl
in
out
das
les
lods
add
pop
jp,pn
int3
adc
jnp
sbb
cmpsb
movsb
adc
out
popaw
or
not
mov
mov
mov
mov
mov
movsb
loopne
jecxz
das
pop
add
pop
arpl
stos
mov
mov
sbb
dec
push
jbe
punpckhwd
dec
mov
sbb
repz
leave
fs
push
add
jo
ds
pop
pop
adc
shll
pusha
jne,pt
xchg
add
sbb
xchg
fistl
aad
rcr
xchg
popa
les
sbb
fistl
mov
inc
sbb
push
daa
sbb
jne
sbb
add
cli
test
ja
and
pop
jp
pop
xor
mov
push
and
jp
fiaddl
imul
shll
pop
sahf
inc
shll
stos
loopne
loope
mov
cltd
sbb
lcall
xchg
cwtl
push
xchg
nopl
push
daa
lds
ficoms
push
lods
mov
imul
in
popa
ljmp
shrl
mov
sbb
and
mov
cli
dec
jmp
jecxz
push
or
sub
push
cmpb
clc
cmp
inc
cmp
xchg
xor
aad
orb
mov
mov
scas
adc
add
sti
dec
push
xor
jmp
adc
sub
add
cmp
in
jp
push
and
add
xor
cmp
or
pusha
push
adc
push
ja
punpckhwd
mov
adc
mov
sbb
sub
outsl
jb
sub
daa
adc
jae
mulb
fimuls
push
repz
push
pop
xor
cmp
jmp
cmp
aad
xchg
lret
cmp
in
push
mov
push
outsl
jecxz
ss
aas
aad
xchg
cltd
mov
sub
jl
movsb
dec
popf
push
sbb
mov
mov
js,pt
shl
inc
push
arpl
sbb
bound
push
mov
rorb
push
push
jl
adc
adc
outsl
jne
pop
adc
xchg
lret
cmp
xchg
cmc
jbe
mov
cmp
mov
sahf
scas
push
and
push
sbb
cli
pop
cld
push
cld
inc
cli
dec
icebp
pop
xlat
sub
push
push
mov
mov
pop
adc
cmp
adcl
sbb
inc
mov
dec
je
adc
lahf
pop
xor
out
sub
aam
imul
es
dec
inc
jnp
sbb
pusha
cmpsb
add
rorl
pop
jmp
bound
icebp
sbb
loopnew
mov
pop
xor
insb
sbb
fs
int3
push
imull
jnp
jecxz
xchg
mov
das
flds
mov
push
and
push
or
xchg
popl
inc
loope
push
add
xchg
insb
xchg
enter
push
jmp
adc
ret
imul
mov
push
push
dec
dec
aaa
stos
xor
push
dec
scas
cmc
scas
dec
fwait
dec
xor
int3
mov
sti
fcompp
push
orb
cld
imul
cmpl
out
fdivl
out
xor
loop
loop
sbb
sbb
hlt
jns
add
hlt
ss
sbb
inc
sbb
movsl
in
lds
testb
xchg
push
sbb
jmp
enter
push
xlat
les
dec
mov
test
sbb
or
cmp
dec
push
mov
aaa
insb
mov
call
mov
jmp
lea
adc
andb
int
jne
stos
pop
lcall
aam
pusha
cmpsb
imull
loope
lods
cmp
sub
clc
pop
aaa
cmp
incb
and
adc
jno
pop
cmp
ljmp
inc
jle
pop
add
xchg
cmp
cmp
imul
cmp
ljmp
mov
pop
push
sbb
icebp
pop
int
fcmovne
push
je
and
inc
imull
inc
sbb
adc
pop
mov
fucomip
movsb
push
fnstcw
pop
cmp
scas
lret
jnp
xor
daa
jecxz
sub
push
test
testb
es
fs
test
cmp
jl
dec
jns
rcll
cmpsb
test
sahf
imul
push
adc
mov
not
xor
xor
pop
cmpsl
fldcw
fldl
cmp
add
mov
fucomp
popf
inc
popf
push
int
jne
arpl
jns
sub
fstps
inc
insb
sbb
cmpsb
xor
sbb
ljmp
lret
dec
adc
or
xor
jns
push
lret
pop
fdivrs
pop
leave
stc
cmpsb
inc
test
cwtl
out
shll
lcall
xor
addr16
loop
aam
negb
adc
jnp
push
push
sbb
movsb
inc
call
add
pop
hlt
cmp
das
xlat
cmpsb
pop
mov
inc
filds
or
pop
inc
xor
push
inc
push
jmp
cwtl
arpl
stc
out
cmp
fldenv
daa
xor
pop
daa
cmp
rorl
loopne
pushf
add
xchg
cmp
or
sbb
jecxz
add
jne
sbb
ss
xor
sub
xor
aad
push
in
fs
aam
cli
add
jnp
into
mov
roll
cmp
cmp
sub
push
ret
cmc
push
aaa
jle
and
mov
fmul
sbbl
cli
sub
or
xchg
add
stc
xlat
and
lahf
iret
loop
mov
xlat
push
dec
int
dec
cmp
xchg
cmp
inc
popf
push
test
fldt
jns
dec
sbb
push
aam
add
arpl
lods
xchg
rcrl
mov
adc
inc
je
mov
pop
push
jmp
and
arpl
les
cmp
pop
add
fs
and
movsb
mov
sbb
mov
fwait
dec
ret
in
inc
out
ret
sbb
push
mov
mov
fistl
insb
xor
mov
mov
push
cmp
inc
pop
imul
int3
push
shrl
mov
bound
cmp
dec
movsb
pop
xchg
scas
out
inc
cmp
das
aam
pop
jg
push
add
arpl
cmp
mov
or
add
or
addr16
add
sbb
mov
add
dec
or
rorl
inc
out
notl
lods
int
sbb
mov
fisubrl
loopne
lods
into
mov
fldcw
cwtl
fs
cmp
iret
lods
rolb
mov
pop
adc
adc
add
sbb
fidivl
or
adc
adc
mov
sbb
shrb
ds
ret
sbb
imul
push
jle
aaa
lea
xor
cltd
rol
push
aad
popl
pop
inc
push
aas
cs
sbb
xchg
in
sub
jnp
out
dec
xor
lahf
pusha
add
data16
jns
sbb
bound
icebp
push
xor
mov
add
lahf
push
add
popa
xchg
cmp
movsl
int3
jp
xor
push
pop
cltd
sub
push
push
xchg
xchg
and
mov
popa
cmp
leave
ljmp
fldenv
in
jecxz
push
jns
stos
insb
adcl
push
test
sub
notl
sbb
les
sbb
es
push
ret
xchg
and
push
mov
out
imul
jns
fs
in
lcall
xchg
cmpsl
jl
sub
into
jne
scas
cmpsl
dec
js
pop
and
dec
sub
add
jbe
adc
jp
and
mov
sarl
pop
mov
mov
jmp
in
xor
inc
popa
lds
sahf
int3
mov
push
imul
push
hlt
bound
jp
mov
push
roll
sti
xor
and
stos
cmp
pop
xchg
cmpsl
ds
out
mov
test
jbe
dec
jmp
mov
pop
pop
jg
inc
push
lahf
popa
xor
ss
loop
popa
or
mov
fildll
xlat
cmp
es
xchg
pop
push
xor
cltd
xchg
dec
es
mov
pop
es
jo
mov
cmp
sbb
dec
lods
cmpb
sub
sub
lret
cmp
std
faddp
mov
xor
andb
rorl
sbb
in
cs
xor
daa
push
push
lahf
pop
push
or
push
imul
div
inc
xchg
pop
ror
xor
jnp
cs
mov
int
xor
dec
sahf
popf
mov
jmp
in
popa
add
pop
arpl
mov
sub
adc
and
cmp
in
rorl
push
bound
aam
jge
cmp
sarb
enter
push
lea
lret
loopne
fdivrs
mov
xchg
lods
push
js
dec
mov
jb
and
addr16
add
xor
loop
pusha
int3
dec
shrl
xchg
xor
cmp
shrl
cmp
out
fisttps
mov
mov
mov
pusha
mov
pop
loopne
shrb
pop
inc
and
daa
jg
and
dec
lahf
outsl
add
jmp
shrl
or
pushf
jb
ret
sti
cmp
ret
inc
pop
and
aad
sub
dec
push
inc
fnstcw
mov
mov
adc
fs
add
aas
hlt
test
pusha
dec
xor
aas
add
std
and
clc
popa
or
sti
xchg
test
pop
sarl
xor
jb
fwait
sub
or
add
xor
aas
into
subb
pop
shrl
or
jp
sub
cmp
push
pop
mov
and
cmp
or
subl
pop
sub
push
inc
add
xor
add
adc
ficomps
stc
imul
jno
sub
scas
add
mov
bswap
roll
push
enter
aam
fcoml
int3
int3
xchg
dec
mov
pop
in
popa
mov
adc
mov
mov
push
xchg
movsl
js
notl
dec
adc
ret
sub
sbb
aam
mov
ret
pop
cmp
iret
xchg
test
dec
cmp
mov
jg
out
daa
pop
adc
inc
sbb
cmp
daa
jl
lods
sub
shll
aas
stos
dec
sub
ja
loop
cmc
nop
sbb
cmp
movsb
xchg
loop
mov
cli
fldenv
mov
adc
test
add
pop
adc
xor
add
into
xchg
jb
scas
xor
aaa
inc
into
inc
ja
out
imul
cmc
lds
xchg
sbb
add
test
mov
cmp
andnps
xor
push
bound
out
mull
lret
xchg
sbb
sarl
in
daa
sbb
fwait
daa
addr16
loop
pop
pop
hlt
inc
adcl
call
fisubrl
mov
mov
add
push
xor
sub
aam
sub
aam
push
mov
lret
iret
in
xchg
push
int
test
sti
add
outsl
pop
xchg
sbb
push
mov
mov
data16
dec
push
mov
mulb
sub
or
mov
adc
cmp
jne
popa
sbb
sar
ret
cwtl
sub
cmpsl
lcall
sbb
cmp
nop
cmp
cmp
sub
aas
cmp
adc
subb
push
cmpsb
imul
cmpsl
pop
push
fwait
pop
js
mov
decl
xchg
mov
sub
add
inc
pop
loop
sub
stos
cmp
mov
sub
jne
push
loopne
mov
pop
adc
call
pop
leave
and
push
cwtl
repnz
push
mov
xlat
in
nopl
push
pop
push
test
sbb
mov
rcll
ret
int3
int3
mov
mov
sbb
push
sbb
mov
iret
add
jle
mov
test
xor
sbb
sub
adc
pop
inc
sub
subl
mov
lret
push
in
call
hlt
and
fwait
cwtl
cmp
adc
push
fidivs
aas
xchg
clc
pop
mov
inc
pop
mov
pop
adc
out
rolb
mov
inc
out
pusha
jmp
sub
sahf
adc
cli
jle
fdivrp
out
stc
stos
rol
cmp
movsb
push
xchg
fs
testb
fstps
add
jne
add
xorl
aaa
aas
scas
stos
lcall
or
cmp
aaa
jecxz
es
adcl
add
arpl
sbb
fiaddl
add
pop
sbb
adc
loope
push
enter
jns
add
ficompl
sub
inc
lret
sbb
es
fs
adc
jmp
cmp
jp
aas
adc
test
dec
push
or
adc
fcompl
xor
leave
mov
pop
xor
and
sub
rcrb
xor
sub
out
add
je
mov
sbb
adc
or
inc
xchg
scas
pop
or
push
cmpsl
mov
ds
push
sub
testl
xchg
cmp
es
dec
or
cltd
mov
pushf
enter
inc
cmp
loop
and
pushf
jg
add
inc
pop
mov
into
inc
in
shlb
dec
sbbb
xchg
fstpl
sub
cmp
inc
dec
push
push
and
sbb
loope
cmc
adc
iret
adc
mov
lds
dec
mov
and
cmpsl
ljmp
inc
dec
adc
ficomps
and
add
xor
jne
dec
rcll
loop
pop
cmp
out
and
ljmp
push
jp
mov
fs
fldenv
cmp
inc
mov
push
inc
xchg
inc
mov
inc
or
daa
lret
lods
sbb
scas
cmc
mov
sti
sahf
cmp
cltd
fs
xchg
pop
sbb
inc
push
cli
jmp
out
add
out
adc
les
mov
fs
inc
inc
rorl
stc
push
dec
mov
jecxz
test
xchg
sub
sbb
std
cmp
cmc
lcall
pop
sahf
call
add
xchg
adc
pop
pop
in
sti
xor
cli
mov
xor
popa
and
fwait
pop
lcall
mov
sbb
and
inc
and
xor
mov
add
or
mov
rcrb
dec
pop
movsb
or
lcall
mov
aad
popw
mov
xor
jmp
and
push
shlb
les
ja
jp
mov
mov
or
fstl
jg
lock
cmp
shlb
pop
ret
out
push
adc
test
and
lahf
test
out
sub
aaa
inc
adc
fimull
jns
dec
lods
rclb
loope
push
in
inc
int
dec
push
pop
sbb
fwait
adc
push
gs
adc
add
insb
imul
gs
mov
and
xor
aam
xlat
or
inc
fnstcw
mov
inc
ds
xor
pop
loopne
and
cs
cmp
fcompl
or
adc
mov
xor
fs
and
ret
hlt
fs
cld
pop
out
xor
and
pop
xchg
pushf
inc
leave
xchg
jo
aaa
and
popa
dec
cmp
push
adc
das
dec
aam
jg
pop
mov
add
aam
enter
rcrl
pop
pop
gs
push
icebp
or
jbe
pop
mov
inc
and
sbb
sub
dec
fbld
jg
out
adc
icebp
inc
pop
dec
jle
mov
push
psubq
dec
cmp
out
push
push
push
and
in
add
cmp
ds
sbb
es
es
inc
mov
and
inc
jg
push
jns
dec
into
add
pusha
mov
or
sbb
rcrb
dec
sbb
shrl
aaa
mov
daa
mov
sbb
and
sbb
dec
ret
aas
gs
dec
ja
adc
movsb
cmpsl
dec
shl
or
xor
push
ficompl
adc
cltd
inc
push
int3
std
test
and
sbb
in
mov
aas
pop
call
pop
pushf
call
and
and
test
rcl
popf
inc
cltd
imul
sub
cmp
push
ja
adc
test
sub
pop
les
jp
adc
push
jge
xchg
jge
inc
lods
lret
add
xchg
mov
add
movsl
mov
cmp
cmc
insb
jb
sub
fdivp
or
les
scas
jmp
jp,pn
roll
push
inc
cmp
cmp
xchg
clc
sahf
sub
cs
sub
push
mov
fnstcw
fs
mov
add
gs
inc
push
out
sub
adcl
and
dec
aad
jne
xchg
or
dec
sub
sub
mov
subb
sbb
push
and
push
jge
sbb
jp
cs
imul
fisubrs
enter
add
cmc
vmovaps
mov
dec
mov
popa
xchg
negb
push
lods
xchg
or
push
outsl
bound
mov
push
mov
loop
int
xor
stc
sahf
fdivrs
jmp
leave
sbb
mov
inc
sbb
popf
inc
jecxz
ficomps
shr
call
push
cmpsl
inc
jns
adc
out
sbb
fs
xchg
xchg
dec
xchg
adc
repnz
pushf
mov
pop
les
pop
sub
fcmovne
cmp
dec
mov
sub
inc
or
mov
mov
in
pop
imul
adc
dec
icebp
mov
inc
sbb
cmp
aam
and
pusha
push
pop
pop
and
cmp
rol
psrld
js
xor
fmull
pushf
imul
je
fadd
and
and
cmp
jmp
cmp
sti
loope
dec
imul
test
in
xor
test
pop
inc
test
testb
imul
push
pop
lret
addr16
das
inc
mov
dec
and
xor
out
mov
sbb
fucomi
cltd
in
inc
xchg
fisubs
mov
jecxz
xchg
ret
mov
test
ds
lcall
mov
pop
and
push
and
test
dec
mov
test
cmp
cmp
outsl
mov
loope
pop
mov
adc
cli
jp
shl
sbb
pushf
sbb
adc
xchg
push
push
and
inc
mov
enter
fcom
pop
fs
cmp
mov
sar
jne
adc
sub
int
mov
sub
lret
mov
adc
xlat
push
add
mov
add
jle
adcl
ret
jle
iret
ficomps
arpl
daa
jbe
mov
inc
andb
push
jno
sub
mov
cmp
sahf
aad
mov
sahf
loopne
cs
test
loope
mov
bound
popf
sarb
adc
pop
sbb
sti
adc
cmpsb
mov
fisttpll
add
or
les
add
cmp
adc
lret
xchg
sub
cltd
push
mov
mov
pop
in
out
lods
inc
js
mov
psubw
icebp
mov
fimuls
xchg
lret
pop
int3
test
addb
sti
add
ret
iret
pop
or
faddl
push
aam
out
sbb
add
add
push
addl
jg
mov
fs
out
movsl
test
rcrl
pop
adc
shl
arpl
shr
rol
mov
lcall
std
call
imul
cld
ja
clc
orb
mulb
out
loopne
aam
fs
aad
mov
adc
les
pop
mov
add
push
in
cmp
cmp
scas
sbb
pusha
mov
push
cmpsb
fldenv
pop
jnp
das
mov
or
jbe
pop
shlb
hlt
mov
ja
std
add
loope
cld
adc
sbb
inc
push
cmp
sbb
daa
mov
test
nop
ss
or
sbb
sbb
mov
mov
jecxz,pn
sbb
push
adc
lods
dec
shll
mov
pop
int
jnp
inc
pop
in
xor
rolb
pop
daa
dec
in
cs
pop
mov
ret
adc
pop
jle
sub
fcmovbe
inc
sbb
sbb
loope
add
and
cmpb
pusha
les
sbb
adc
sar
loop
push
mov
jb
sarl
loopne
add
mov
inc
faddp
icebp
xor
cmp
movsl
sub
push
mov
xchg
rcrl
jecxz
inc
lea
rcrl
loop
loope
bound
xor
stc
arpl
in
nop
xor
mov
shrl
dec
pusha
aaa
aaa
movsl
or
scas
fidivrl
xchg
xor
jne
shlb
push
ljmp
adc
sub
shrl
movsl
pop
dec
fadds
cmp
cmp
xchg
fldenv
out
xchg
mov
shl
leave
ds
or
mov
popa
aad
jecxz
mov
mov
cmc
js
adc
fbld
shl
cmpsb
and
add
dec
pusha
rolb
sub
sbb
xchg
loope
dec
xchg
ret
sbb
sbb
in
cltd
xchg
clc
lods
dec
mov
out
adc
lods
shlb
mov
fisubs
xor
in
push
pusha
ficomps
mov
movsb
push
add
lret
and
adc
sbb
xchg
loop
mov
mov
popa
jns
sahf
sahf
int
pop
adc
pop
aas
pop
pop
xor
adc
dec
jns
and
dec
push
pushf
nop
aad
fidivrs
mov
jle
sbb
push
push
jle
aaa
popa
push
dec
sbb
sti
into
add
andl
xchg
and
fcoml
jmp
push
and
fisubrs
mov
data16
aas
loope
andl
and
adcb
rcr
pop
ds
xchg
adcb
adcb
add
popa
aad
sahf
inc
int3
fadd
xchg
xlat
push
xor
lret
fs
out
in
adc
pop
out
mov
mov
sbb
mov
pop
and
daa
addr16
pop
leave
and
inc
mov
sbb
fistpl
and
rolb
adc
push
jnp
and
lret
ds
addl
pop
orl
and
fimuls
movsb
cmp
inc
sahf
or
or
jge
jbe
and
dec
scas
fiadds
xchg
adc
leave
push
fldcw
ret
and
or
sub
ljmp
fisubrs
subl
lods
pop
sbb
or
movsl
arpl
loop
loope
xchg
or
xchg
cmp
mov
xor
lret
pop
add
pop
xchg
add
shll
or
in
add
inc
dec
push
ja
rcr
out
mov
xor
stos
out
dec
push
jbe
insb
xor
sbb
xchg
add
loopne
bound
pop
jecxz
cltd
fldenv
movsl
pop
push
ss
and
mov
jnp
sbb
add
movq
push
clc
cmp
mov
mov
es
or
mov
pop
add
enter
dec
shl
and
fs
pop
loop
fwait
sub
and
int
cltd
aaa
sbb
dec
push
or
fld
aam
pop
into
repz
add
es
lods
mov
sub
mov
mov
ja
inc
les
push
dec
popa
adc
push
push
xchg
cmpsl
jecxz
xor
adc
sub
sarl
les
push
xor
mov
out
add
into
lahf
sahf
sbb
testl
xor
testb
pop
aas
inc
add
cmp
divb
add
aam
xor
mov
pop
cmc
inc
test
push
pusha
std
imul
or
lods
popa
push
add
mov
mov
jecxz
into
and
movsb
enter
out
lret
movsb
outsb
push
xor
loope
mov
pop
scas
jmp
sub
cmp
lret
push
xchg
arpl
and
add
xor
scas
dec
pop
xorb
pop
sbb
rol
sbb
out
cmp
int
and
lods
push
popa
bound
sti
mov
movsl
imul
jbe
and
push
inc
xor
dec
push
sti
sub
sub
mov
sub
sbb
pop
pop
mov
push
sbb
push
pop
stos
out
out
pop
mov
mov
ss
push
inc
pushf
inc
fistps
sub
scas
rorl
pop
insb
pop
outsl
adc
mov
or
arpl
sbb
out
rorl
and
mov
imul
xor
mov
mov
sahf
mov
arpl
sbb
fsubrs
shll
clc
loopne
es
dec
mov
xor
jl
mov
push
sbb
leave
sbb
loope
or
pop
mov
cs
iret
cmp
jecxz
rorb
push
adc
push
xchg
int
test
xor
jbe
popf
push
fsubrl
adc
or
test
mov
jbe
mov
call
nop
cmove
jmp
cli
cli
jmpw
mov
or
adc
mov
cmp
in
mov
aad
data16
sar
popf
sub
movsl
popa
das
push
leave
cmp
pushw
popf
jne
out
mov
pop
test
cwtl
pop
push
adc
sysexit
add
enter
jns
fidivrs
loope
xorl
aam
dec
jno
sub
les
push
movsb
pop
lahf
and
jp
lods
or
fistps
mov
mov
pop
fcomi
xchg
ss
push
lret
mov
and
int
jnp
adc
cmp
iret
mov
jmp
sahf
pop
xor
fists
sub
sbb
xchg
sarb
add
push
add
aad
mov
rcrb
mov
lds
gs
inc
or
push
pop
pop
movsb
les
sti
xlat
out
pop
xor
sbb
dec
shl
les
push
mov
inc
pop
lret
inc
push
mov
add
dec
test
sbb
mov
das
pusha
xor
and
out
jne
lcall
ss
lcall
sub
fiaddl
dec
imul
out
mov
push
jge
cmp
popa
jne
dec
xor
fs
shr
pop
adc
jg
or
rol
sub
test
push
pop
xchg
adc
dec
or
sub
popw
outsb
xor
adc
or
push
sahf
cmpl
decl
push
or
loope
fmull
pop
add
cmp
jnp
sbb
or
mov
push
icebp
cmpsl
in
ror
push
loop
stc
fcmove
push
push
mov
rcrl
int
inc
inc
inc
push
rcrl
loopne
xor
pusha
loopne
out
in
scas
push
or
std
add
mov
mov
daa
imul
xor
or
mov
loope
mov
sub
push
mov
rcll
push
movsb
out
dec
cmp
jg
mov
fdivs
mov
sbb
rcrl
add
adc
out
loop
std
fnstcw
xor
in
cmp
sub
mov
stc
pop
fcoml
push
pop
bound
add
mov
jmp
dec
iret
movsb
cmp
fidivrs
int
mov
mov
mov
cwtl
mov
dec
pop
movsb
aaa
ljmp
lds
xchg
fsub
jg
xor
out
popf
fdivrs
mov
lods
push
fstpt
sbb
ficomps
xorl
sub
ds
movntps
aas
and
leave
jno
pop
fisubrs
xlat
sbb
stc
mov
cmp
imul
xchg
push
add
fmull
push
clc
mov
aaa
loopne
int3
sub
cmp
pop
cltd
data16
movntq
adc
adc
inc
rcrl
adc
pop
push
pop
lahf
jge
sub
push
inc
or
or
jmp
loop
daa
sub
xor
cmp
inc
adc
xchg
out
dec
cmpsb
inc
loop
popf
sub
into
repnz
flds
cmp
xchg
rorl
mov
and
shll
fildl
mov
call
add
jmp
pushf
sbb
int3
inc
jmp
popf
cmp
mov
ret
mov
xchg
pushf
mov
add
cld
rcrl
rcrl
jge
mov
out
out
cmp
out
test
push
test
or
out
lahf
adc
fsubrs
leave
cmp
mov
mov
mov
pushf
jnp
test
xchg
sti
addr16
sbb
jmp
sbb
or
and
movsl
mov
dec
cs
clc
add
pop
or
std
cmp
mov
push
scas
and
xor
nopl
repz
adc
push
bound
sub
ds
mov
sbb
xchg
jnp
outsb
cwtl
pop
push
movsb
es
ljmp
dec
loop
enter
jp
pop
xor
fdivrp
sarb
into
or
dec
das
sub
imul
inc
cmc
add
mov
adc
lret
ljmp
mov
aam
insb
lret
xchg
cmc
aam
dec
cmpb
out
xchg
sti
cmpsl
xlat
dec
and
iret
sub
rcll
pop
sbb
sbb
jg
sbbw
aas
xchg
mov
fldcw
mov
gs
inc
mov
push
push
inc
fmul
aam
testb
push
cmc
fstpt
cmp
pushf
add
xor
xor
pop
mov
sbbl
sbb
sub
fwait
and
mov
aas
loop
loope
stos
mov
ret
mov
lea
jp
inc
add
or
sbb
clc
mov
stos
jle
add
cwtl
jbe
daa
xor
scas
in
push
add
jbe
in
lea
dec
test
sbb
mov
xchg
jo
inc
jns
cmp
out
ljmp
stos
xor
daa
dec
sbb
xchg
xchg
or
imul
xor
jne
sbb
pop
adc
ret
fs
rolb
mov
insb
fsts
cmp
ds
movsb
in
inc
jbe
add
aam
fs
andl
cmpl
add
in
ret
pop
inc
cwtl
mov
mov
sbb
adc
in
pop
fdivrp
mov
rcl
xchg
jno
lcall
test
sahf
dec
cmp
mov
dec
aaa
mov
xor
int
sbb
jnp
lahf
push
push
insb
or
or
dec
sbb
jno
sbb
jb
addr16
loopne
push
cmp
inc
or
mov
jb
cmp
ret
inc
inc
cmp
mov
outsb
pop
js
jmp
lds
cmp
inc
je
popa
xor
dec
inc
mov
inc
inc
xchg
sub
push
pop
mov
inc
fidivl
dec
rcl
les
pop
loop
inc
ds
add
pop
add
cmpsb
cmpl
xor
jl
xor
ficoml
dec
and
cmp
iret
adc
jns
ds
data16
pop
out
mov
adc
pop
popa
sbb
lods
in
popl
or
sbb
pop
xor
jb
adc
and
ljmp
add
ljmp
sbb
pop
dec
int
cmp
or
and
add
sub
push
loope
and
inc
adc
jno
and
inc
pop
push
pop
xchg
das
and
cs
clc
xor
mov
push
push
xor
icebp
xor
sub
loop
dec
out
sbb
gs
push
mov
aad
xor
sbb
xor
push
fadds
gs
and
push
jno
jp
and
pop
inc
xor
sbb
and
fucomp
arpl
fisubl
push
jne
pop
aas
and
mov
stos
cmp
aam
or
push
cmp
sahf
lods
enter
adc
push
and
pop
sbb
ds
adc
jecxz
mov
and
jb
insb
adc
pusha
and
cmp
or
fs
push
sbb
imul
xor
cld
cmp
xor
icebp
jbe
inc
je
jbe
sbb
inc
es
cld
loopne
fisttpll
push
imul
push
popf
and
shlb
fnstenv
mov
ror
and
cmc
popa
fs
push
dec
or
shll
ds
inc
push
cs
jge
and
mov
cmp
adc
mov
mov
call
inc
cmp
or
sahf
loope
mov
lret
mov
adc
lods
aad
fisubs
mov
mov
aam
push
data16
cmp
sub
push
xchg
popa
cli
movsl
inc
gs
insb
pusha
mov
push
inc
pop
push
in
pop
adc
add
out
adc
js,pt
push
pop
mov
fiadds
inc
jp
cmp
loopne
adc
mov
cmp
ds
and
xor
ds
add
push
xor
dec
jnp
push
pop
into
into
in
inc
in
lock
and
jmp
lods
bound
inc
push
xor
cmp
jbe
hlt
inc
push
dec
inc
popa
mov
jne
std
dec
adc
lods
data16
lcall
pop
or
xor
add
jns
adc
adc
jp
pusha
fstl
cmp
jp
xor
inc
pusha
add
fidivrl
jnp
bound
cmpsl
cwtl
pop
fsubs
or
fs
mov
cmp
add
push
cwtl
xor
push
add
fstpl
inc
jl
sub
xchg
jle
pop
hlt
bound
inc
jp
insb
aam
sahf
dec
push
add
in
popa
sbb
arpl
add
sbb
ljmp
insb
adc
dec
pop
ds
aam
ss
lock
lods
pop
jle
pop
inc
and
xchg
dec
iret
push
jecxz
dec
push
rcrl
shlb
pusha
dec
mov
daa
pop
dec
xchg
dec
lret
pop
add
push
clc
pushf
xor
pusha
push
adc
jge
ss
xchg
pop
sbb
and
xchg
jmp
cmp
orb
cmp
in
sbb
jne
pop
sahf
ljmp
jne
cmp
jno
cmp
adc
add
pop
ds
jno
bound
daa
and
or
mov
imul
adc
cmpsb
dec
and
xor
inc
dec
pop
add
loope
notb
xor
sbb
roll
xchg
scas
mov
mov
inc
jbe
and
int
fs
and
daa
mov
dec
fs
jo
push
aas
dec
lds
call
cld
cmp
xchg
hlt
push
or
cmp
dec
mov
in
jnp
and
and
push
enter
push
fwait
xchg
incb
sbb
cmp
call
pop
push
fsubs
push
mov
mov
push
icebp
sub
push
sub
mov
push
push
and
mov
sbb
push
and
rcll
xchg
scas
aam
pop
mov
sbb
xchg
and
or
push
xlat
push
pop
inc
push
inc
push
push
xchg
cmp
popw
pop
imul
push
dec
pushf
xchg
dec
fbstp
cwtl
mov
push
sahf
leave
pop
pop
insb
insb
pop
in
push
les
or
pop
pop
aad
push
insb
push
pop
xor
aad
test
pop
sub
xchg
or
mov
xchg
sahf
lds
dec
inc
mov
into
popf
xor
mov
push
loop
xor
xor
xchg
insb
pop
in
nop
cld
pop
cmp
adc
fdivr
and
pop
push
loope
int3
push
fstps
xchg
xlat
call
es
pop
rcrl
pop
pop
jle
in
sbb
cld
in
pop
push
sbb
ljmp
mov
fidivrs
push
mov
lea
into
push
std
fs
loop
ds
jb
and
xor
pop
push
loop
or
aad
test
pop
push
cs
or
sbb
xor
jl
fs
push
push
mov
jle
xchg
loop
std
pop
dec
jo
out
xor
and
mov
add
in
jbe
loope
in
lods
add
push
push
rcrl
push
aas
push
and
in
inc
dec
mov
insb
pop
sbb
hlt
roll
push
push
aaa
cmp
jle
xchg
mov
lret
cli
shl
push
jle
fbld
cli
pop
or
inc
add
movsl
bound
cmp
cmp
int3
and
cs
fistl
imul
sahf
mov
mov
loop
test
popf
push
es
jecxz
push
fstpl
push
push
fwait
mov
cmpsb
mov
pop
pcmpeqb
sbb
mov
cmc
and
out
add
inc
xor
or
xor
xchg
cli
in
or
cmp
push
inc
pop
cmp
pop
inc
ds
or
push
add
mov
sbbb
cld
adc
pop
cmp
stos
sub
int3
push
and
cs
cmp
mov
push
mov
movsl
mov
adc
push
sub
push
cwtl
jbe
cmp
das
pop
push
push
cmp
xor
push
pop
mov
push
sub
xchg
pop
push
sbb
or
push
push
cmp
add
and
sahf
push
loopne
dec
inc
or
and
call
rcrl
cmp
jbe
push
adc
cmp
aas
ss
aam
mov
mov
pop
mov
into
xchg
mov
cld
int
out
loop
dec
cmp
bound
inc
test
and
jg
pop
mov
inc
dec
push
pop
push
loopne
andl
pop
mov
xchg
mov
outsb
es
in
xchg
cmp
fistl
xchg
push
adc
cmp
xchg
cmp
out
js
push
sahf
lods
mov
arpl
adc
push
or
jnp
mov
mov
push
in
push
aaa
and
ret
xor
out
adc
stos
stc
dec
mov
sub
and
pop
adc
sub
push
push
and
pushf
imul
push
or
push
pop
pushf
jp
int3
inc
push
arpl
lret
sub
cmp
inc
jb
jno
add
sbb
or
aas
pop
imul
imul
xor
jne
ds
xor
imull
ss
les
add
sahf
out
add
cmp
add
and
std
gs
shll
rolb
cmpsb
adc
scas
push
add
sub
data16
data16
add
and
loop
and
push
push
xchg
jbe
jbe
adc
ss
out
push
push
imul
test
dec
mov
in
pop
shrl
push
mov
data16
loopne
arpl
das
or
xor
js
or
push
das
xor
xor
or
sub
loopne
lds
jge
add
pop
add
lcall
mov
mov
adc
dec
test
cmp
movsl
addb
sbb
cmp
outsb
and
loop
cmpsb
adc
cmpsl
inc
lods
movsb
push
pop
fs
cmp
pop
sahf
fdivrl
jle
cmp
jp
inc
jecxz
ds
in
inc
xchg
push
shl
adc
pop
pusha
aas
jno
inc
mov
push
pop
sahf
inc
mov
lret
hlt
pop
or
push
mov
push
pop
in
and
jp
pop
inc
jae
outsb
jnp
fdivrl
xor
pusha
shlb
xor
push
ljmp
pop
data16
xor
mov
roll
punpcklwd
ds
imull
inc
lock
insl
popa
push
out
mov
push
clc
sbbl
and
push
mov
mov
cmp
xchg
or
aas
out
call
insb
loopne
mov
sub
mov
or
ss
mov
sbb
stos
mov
push
sbb
aam
jo
sbb
sub
adc
dec
sub
arpl
es
sarl
out
push
fldenv
popa
cmp
adc
jecxz
mov
mov
xchg
loopne
dec
jp
sti
inc
push
xor
mov
xchg
sbb
dec
add
inc
es
push
sub
cmp
xorb
add
xor
fimull
div
pusha
repnz
sub
lret
and
push
adc
fs
pop
adc
cli
and
fwait
sbb
lods
dec
cmp
mov
dec
aas
iret
insb
sub
dec
pop
add
and
gs
dec
cmp
push
mov
hlt
popaw
cli
push
xor
xchg
or
in
xor
sbb
inc
cmp
sub
mov
enter
push
loope
jbe,pt
les
jbe
in
cmp
jl
adc
test
adc
shrb
cmc
or
jbe
jb
jae
push
insl
jnp
dec
cmp
or
ja
icebp
cmp
aam
and
push
pushf
push
pop
inc
xchg
bound
sahf
test
enter
cmp
and
pop
xor
jns
clc
aam
aad
and
mov
cmp
popa
adc
pop
pop
pusha
xor
mov
push
push
jns
xor
and
addb
mov
mov
push
addr16
push
bswap
pop
inc
and
inc
jno
aaa
dec
jns
shrb
cmc
sub
sbb
push
into
pop
add
cmp
adc
test
adc
mov
sahf
sub
pop
adc
pop
adc
test
jns
mov
mov
jl
sub
in
adc
sbb
ja
mov
les
xor
gs
dec
sbb
cltd
and
push
gs
aad
sbb
cmpsb
push
add
cwtl
cmp
inc
adc
gs
popa
sub
enter
adc
lea
or
jb
int3
add
jae
jo
jnp
pop
shl
in
pop
int3
repnz
stc
sbb
repz
fsubrs
gs
nop
cmc
aaa
cmp
inc
cmp
test
dec
pop
out
addr16
sbb
jno
mov
cwtl
jl
ja
popa
adc
push
fisubrs
dec
sub
jnp
dec
add
ja
outsb
or
hlt
js
lock
mov
pop
shll
or
jne
fdivrs
xor
jnp
and
pop
fs
sbb
or
push
adc
mov
jl
pusha
stc
add
pop
or
inc
insb
imul
lock
jne
cld
pusha
stc
inc
sbb
xor
push
icebp
insb
pop
sarb
fstpt
leave
pop
test
and
jl
jnp
inc
push
push
fstp
jmp
sbb
pusha
pop
lock
mov
xchg
movsb
jae
sbb
xor
ljmp
inc
jp
js
ret
roll
and
outsb
hlt
xor
cmp
mov
fstpl
js
adc
ja
stos
fsubl
and
mov
js
pusha
js
jne
jbe
in
jl
jns
inc
push
ja
add
mov
and
int3
inc
aad
pop
nop
pusha
fdivr
arpl
lock
mov
insb
jne
dec
mov
and
inc
adc
outsl
into
xor
xor
test
repnz
push
imul
mov
pop
leave
js
mov
int
mov
mov
mov
cmc
jne
call
pop
mov
je
jl
pusha
fs
dec
cmp
and
xchg
push
mov
xchg
pop
faddp
sbb
popa
sahf
js
cmp
loopne
jns
push
mov
ret
adc
cltd
xor
inc
popa
push
jns
mov
sarl
push
dec
xor
lret
sahf
inc
push
loope
push
outsb
xchg
push
pop
addr16
jnp
or
movsl
arpl
sub
movsl
js
in
test
fimuls
xor
pop
push
sub
mov
xchg
pop
pop
shlb
push
pop
loopne
cmp
clc
js
lret
sbb
push
stos
push
mov
mov
pop
jecxz
mov
outsl
cs
popa
lock
scas
aaa
mov
in
jno
cltd
xor
add
jecxz
ds
pop
imul
jbe
jge
arpl
inc
je
jb
dec
jb
push
stos
xor
repnz
push
push
in
pop
subl
pop
in
insl
enter
imul
mov
mov
dec
jns
js
jne
aas
pop
jbe
or
divl
test
lahf
xchg
jno
dec
xor
jne
outsb
jne
pop
js
push
hlt
xor
cs
decl
dec
mov
jno
pusha
clc
push
xor
dec
lock
push
lea
jno
js
pusha
notb
jl
jbe
jne
pusha
jle
sub
lahf
popa
lock
icebp
push
outsl
cmp
jnp
lods
xchg
push
mov
or
lahf
xor
dec
push
test
jns
pusha
xchg
cmp
in
xor
cmp
jae
popa
mov
and
int
test
dec
jbe
mov
cmp
xor
add
sbb
aas
leave
lods
flds
imul
fldcw
xor
push
or
imul
leave
insl
gs
out
test
data16
mov
insl
xor
clc
outsb
jno
jne
xor
jle
jb
mov
add
mov
js
push
rclb
jno
pusha
push
outsb
hlt
xchg
jns
pop
jecxz
dec
imul
add
daa
push
and
push
add
sbb
adc
insb
int
cmp
inc
push
sbb
rcrl
jge
iret
jp
je
outsb
push
pop
push
jno
pop
push
pop
adc
mov
bound
mov
fs
mov
rclb
jp
jbe
fs
loopne
sub
imul
pop
and
or
movsl
fs
push
sub
bound
jg
xor
cmp
jno
pop
sbb
js
and
xchg
push
xor
push
mov
into
jmp
xor
mov
cmp
pusha
std
jae
jns
and
jno
test
das
je
dec
xor
xchg
cwtl
aas
cmp
pop
bound
jnp
or
xor
or
and
push
out
xor
out
mov
gs
push
nop
sub
jno
jl
stc
subl
rcr
sub
ds
pop
xor
jno,pt
jbe
sbb
mov
loope
aas
in
pusha
jmp
dec
rorl
hlt
cs
loope
push
into
call
add
int
sub
xor
fimuls
adc
ja
push
push
pop
lods
fdivr
and
inc
mov
dec
mov
cmp
push
ss
pop
mov
ds
mov
pop
cltd
sbbb
mov
jnp
mov
adc
pusha
sbb
sbb
lret
and
jnp
add
jl
hlt
dec
jg
jne
mov
push
out
inc
pusha
jnp
imul
sub
pop
fs
int3
cmp
popa
mov
dec
jae
inc
add
xchg
jbe
pop
mov
adc
int3
xchg
xchg
out
ret
jns
push
es
add
les
adc
les
jl
mov
adc
cs
dec
inc
js
jge
dec
lock
xor
or
jbe
in
call
out
lock
hlt
cs
dec
bound
jno
xor
push
mov
ja
js
gs
or
xor
dec
jb
fs
hlt
and
and
jp
jbe
hlt
jno
dec
fcomps
fs
jno
shlb
scas
inc
fcomps
jnp
outsb
dec
pop
test
dec
insl
lret
int3
pop
movsl
jae
jne
xchg
and
cmpsl
pop
lock
and
inc
js
jp
and
inc
insl
push
xor
stos
push
add
sub
lret
push
pop
dec
xchg
mov
int3
sti
fs
adc
xchg
push
pusha
and
sub
sti
jbe
adc
ss
mov
pop
mov
add
data16
sub
adc
loopne
repz
sbb
mov
std
mov
test
shlb
jp
jbe
je
and
and
jno
pop
js
jno
or
sub
test
ss
gs
push
outsb
fadd
mov
fwait
dec
jle
int
jae
lcall
ja
js
sub
xchg
jno
movsb
sahf
jne
sbb
jno
dec
pop
insl
pop
arpl
mov
dec
popa
pop
cmp
daa
cmc
push
js
hlt
and
xchg
xor
cmp
inc
cmpsl
jnp
jmp
jbe
jae
in
mov
xor
jnp
push
addr16
sti
xchg
jp
mov
in
pop
test
out
les
xchg
push
dec
cltd
mulb
loopne
pop
pop
jnp
xchg
decl
add
cmp
xor
daa
mov
test
dec
roll
aas
and
inc
lock
in
xchg
pusha
outsb
push
and
je
mov
cmp
jo
push
pusha
mov
jo
pop
rolb
and
inc
shlb
lea
aaa
loop
addr16
add
sbb
sub
jge
cmp
les
adc
insl
mov
push
jp
mov
cli
push
dec
xchg
insb
scas
inc
mov
jne
pop
cmp
dec
xchg
push
push
lods
imulb
das
mov
or
loopne
enter
jle
insl
sub
inc
mov
sub
jnp
cmc
fs
and
add
test
mov
xor
andb
cmpsb
imul
or
aam
in
out
and
fnsave
mov
push
cmpl
ror
fcmovnbe
cmp
fs
gs
jns
mov
lret
or
jp
loope
loopne
ja
mov
push
adc
mov
add
push
cmp
jp,pt
cmp
push
adc
adc
push
fs
adc
sbb
sub
fisubrs
fs
test
bound
xor
adc
add
je
std
jnp
pop
inc
sub
rcrl
dec
inc
into
lea
fidivs
es
out
add
and
and
pop
sbb
cmpsl
hlt
out
or
adcb
jne
or
dec
sti
pusha
gs
jne
jne
cmc
adc
insb
insl
xchg
popa
pop
ja
ret
pop
jl
js
pop
movsb
icebp
cwtl
add
pop
cmc
push
stc
mov
fstpl
js
cmp
dec
in
jnp
push
pop
clc
pusha
mov
shll
jb
mov
fnstcw
jl
fcompl
push
jl
sub
fst
pop
out
or
adc
or
ja
cs
sub
test
sub
push
pop
or
mov
insb
out
push
and
jne
xor
js
clc
sbb
arpl
or
pop
push
mov
stc
mov
jnp
inc
sbb
std
push
inc
arpl
movsb
mov
cli
jne
pushf
add
jp
adc
stc
out
insb
call
loop
sub
jge
jecxz
dec
cmp
push
addl
bnd
push
push
or
roll
fldt
frstor
push
js
aaa
repz
inc
mov
leave
dec
out
sbb
xchg
jecxz
ja
dec
out
lea
xchg
sbb
pop
imul
sbb
lret
xchg
jbe
dec
pop
dec
fisubl
in
bound
mov
jae
pop
push
push
adc
pop
push
cmp
inc
mov
jl
icebp
pusha
dec
inc
addr16
in
push
pop
and
ja
mov
bound
call
pop
inc
outsb
adc
dec
sbb
lret
stc
addr16
mov
dec
dec
testl
aaa
cmp
or
decl
cltd
loop
cltd
sbb
inc
cmp
pop
inc
inc
or
adc
das
outsb
pxor
jbe
xor
xor
and
and
sub
push
imul
adc
cs
sbb
dec
std
jb
mov
mov
in
js
jne
push
loope
hlt
mov
jmp
sbb
repnz
insb
data16
lahf
jb
movsl
outsb
add
cmp
icebp
push
dec
daa
aaa
or
mov
xchg
cmp
mov
es
and
xchg
mov
push
push
and
sbb
jbe
es
xchg
cmpsl
imul
hlt
in
push
inc
cwtl
inc
mov
cmp
inc
dec
in
sub
sub
cwtl
into
push
leave
mov
shlw
push
iret
push
fldl2t
jae
lods
sbb
js
jnp
in
dec
in
and
jns
push
push
jbe
and
push
sub
sbb
cmp
js
push
dec
out
sahf
adc
sbb
sahf
jbe
mov
je
movsb
xor
clc
sarb
in
sbb
ja
repz
scas
pop
or
sub
imul
jne
bound
arpl
lahf
shrl
jp
icebp
mov
leave
std
lock
pop
cmp
in
lahf
adc
bound
bound
mov
push
jae
mov
cmpb
mov
jbe
jns
or
mov
mov
jbe
mov
push
push
ljmp
arpl
js
popa
ja
xchg
push
sar
jno
xor
fwait
gs
dec
push
pusha
xchg
std
jno
lds
nop
leave
pop
dec
ss
xchg
lods
push
jae
xor
adc
xor
fsts
mov
in
cmp
popf
and
icebp
movsl
call
stos
addr16
cmpsl
fldl
aas
jae
cltd
sahf
inc
pop
sub
pop
loop
dec
mov
mov
mov
sub
sub
mov
int3
xchg
ja
popf
js
in
fnstcw
sbb
enter
sti
lods
lds
shrb
sub
je
and
sub
jno
mov
imul
sbb
add
push
int
mov
jp
cmc
xchg
dec
rcll
aam
fs
jl
sbb
mov
pusha
jnp
sub
adc
jp
les
pusha
loope
xlat
jno
sub
pop
dec
or
int3
ret
cmp
stc
addr16
xchg
xchg
jmp
test
inc
or
popa
push
nop
adc
rclb
orl
jns
jae
stos
mov
mov
gs
add
mov
fdivl
xchg
xor
cmp
sar
push
jp
dec
adc
shll
int3
mov
clc
push
ja
inc
and
sbb
in
fwait
push
lock
stos
adc
shll
jns
ja
mov
inc
stos
pusha
push
jmp
add
es
and
shufps
ja
or
mov
jecxz
sbbl
pusha
mov
es
dec
repz
pushf
fcmove
mov
push
dec
jp
lret
pop
gs
test
addr16
push
hlt
cmp
test
shll
jge
dec
cmp
jp
ja
jbe
pop
adc
pusha
xor
andb
xor
cld
dec
inc
aam
jg
sti
mov
dec
in
arpl
xchg
adc
sub
int3
adc
cmp
sti
cmp
cmp
jb
inc
subl
or
mov
sbb
imul
ds
sti
test
jle
xchg
je
insb
mov
pop
push
adc
aam
pop
in
push
xchg
push
mov
add
insl
push
push
push
adc
adc
mov
add
cmp
inc
xchg
push
mov
or
in
push
add
ja
inc
inc
scas
shufps
pop
push
stos
adc
ds
inc
out
inc
sub
subl
js
jno
and
and
mov
push
inc
ds
mov
lcall
or
inc
adc
xchg
push
pop
inc
cmp
pop
pop
inc
inc
push
dec
outsl
mov
inc
and
sahf
jno
fidivrs
ja
cld
push
shll
dec
imul
insb
mov
int3
sti
or
pop
jmpw
cmp
and
jb
lcallw
pop
push
stos
jns
aad
dec
dec
mov
dec
lock
int
ja
out
and
je
addb
insb
mov
jae
adc
xor
scas
movsl
mov
dec
cltd
sbb
add
or
sbb
repz
cmp
mov
in
leave
adc
sub
in
dec
ja
ds
and
dec
cwtl
cmp
movsb
mov
jne
cmp
sub
push
outsb
scas
pop
js
aam
rcl
aam
adc
mov
lret
jl
dec
mov
loope
sub
pop
stc
les
xchg
cmc
outsl
cltd
mov
out
aam
mov
and
mov
sahf
inc
add
pusha
jmp
ja
inc
inc
push
xor
xchg
or
and
sub
fs
mov
ja
xor
xor
jbe
adc
pop
pop
in
xchg
fidivrl
ds
xor
inc
cmp
inc
or
xchg
jle
divl
inc
popl
jae
in
mov
dec
xor
les
dec
adc
pop
xor
jg
dec
inc
pop
mov
or
stos
push
push
sarl
inc
cltd
sbb
jb
je
sbb
or
sbb
sub
xchg
imul
add
cmp
mov
and
outsb
stc
inc
jle
das
inc
cmp
pop
movsl
push
pusha
adc
or
in
int3
fsubs
pop
mov
cmp
test
js
mov
push
xchg
shrl
in
cmp
mov
aad
sub
xor
inc
push
sub
sub
push
repnz
pop
std
inc
test
xor
add
inc
xor
rcl
pop
pop
les
add
cmp
push
repnz
inc
cmpsl
push
inc
xchg
dec
xorl
sti
ret
push
inc
xchg
xorl
push
loop
pop
add
fcmovu
fsubs
add
jbe
mov
jae
sbbl
push
add
dec
mov
shll
and
pop
mov
cmp
push
and
xor
inc
dec
aas
dec
lcall
add
push
mov
xchg
mov
cs
adc
outsb
imul
js
dec
sbb
js
jge
dec
inc
dec
jnp
adc
pusha
orl
inc
popf
or
ja
call
cmp
jecxz
in
lea
mov
test
mov
out
sbbl
pop
popa
pusha
sub
mov
pop
out
std
out
sbb
push
sub
dec
popf
pop
icebp
imul
fs
int3
test
mov
outsb
test
lahf
push
enter
jmp
mov
sub
hlt
lods
cmp
dec
xor
in
dec
test
out
popl
loope
sub
out
add
jns
dec
push
mov
fnstenv
or
push
adc
ljmp
lahf
or
push
jp
xor
dec
dec
aad
xor
jb
pop
ja
add
sbb
fwait
mov
jp
out
or
movsb
push
aam
inc
jnp
stos
lds
sub
push
ja
jne
push
cmp
divl
shll
ret
aad
or
rcr
push
movsb
out
sbb
mov
or
int
adc
push
ret
pop
sbb
repnz
std
ja
push
pushf
aas
cmp
lret
aaa
push
xor
in
mov
imul
fdivrl
loope
lret
push
add
xchg
arpl
jb
pcmpeqd
push
push
icebp
mov
xor
dec
cmp
mov
jle
cmc
pop
fstpt
cmp
lahf
cmc
dec
and
xor
rcrb
cmpsb
jle
xchg
and
aam
or
lret
loope
add
mov
jnp
imul
in
xor
ds
pop
cmp
pop
loope
inc
in
sub
push
sbb
adc
imul
push
add
sub
insb
repnz
std
js
mov
push
inc
pop
aad
lea
xor
jbe
adc
aad
jb
popl
in
sbb
daa
jecxz
or
out
mov
fcmovnb
inc
jb
decb
fistl
push
outsb
orl
mov
xorb
adc
mov
xor
dec
jge
aaa
out
jbe
pop
cmp
in
popf
jp
mov
nop
lea
mov
jl
aam
repz
push
jl
mov
gs
repz
insl
roll
aad
jne
js
jbe
xchg
sbb
jmp
adc
jns
out
mov
out
fmuls
pushf
push
subl
push
js
xor
push
jnp
jp
stc
jmp
pushf
hlt
out
data16
movb
and
das
mul
xchg
mov
push
lsl
jnp
insb
in
add
sbb
lock
call
mov
js
push
push
and
push
mov
jp
cs
inc
inc
inc
sub
pop
xor
add
adc
je
mov
shl
pop
bnd
clc
aas
pop
lcall
addr16
call
fs
mov
pop
mov
dec
pusha
das
mov
fstl
rclb
out
scas
ficoml
adc
loopne
addl
cmp
and
inc
dec
pop
aad
aas
leave
inc
xor
add
mov
lea
sahf
sub
shll
adc
loopne
insb
push
adc
icebp
aam
jbe
inc
pop
call
subl
sub
pop
or
add
or
inc
add
into
incb
or
inc
adc
sub
pop
lret
in
int3
mov
xor
outsl
lea
movsb
inc
inc
pop
cmp
sub
cmp
add
sbb
push
outsb
dec
mov
cmp
jp
scas
pop
pop
and
jge
out
push
add
push
or
xor
bound
bound
or
pop
into
sbb
psubsb
dec
fcmove
popa
mov
outsb
pusha
sub
inc
loope
xchg
andb
cmp
dec
push
gs
jo
and
std
jae
sub
loope
jb
dec
dec
scas
stos
xor
add
scas
out
add
jl
hlt
and
into
add
ucomiss
or
iret
or
ss
xchg
jb
outsl
push
lock
mov
xor
jns
mov
jp
xor
pusha
cmc
loopne
push
into
ja
hlt
data16
je
test
je
orb
js
xor
push
mov
dec
js
and
sbb
out
sbb
les
dec
push
insl
sub
dec
push
push
mov
subb
xor
pusha
dec
loopne
mov
xchg
xor
js
jnp
pop
jae
pushw
push
fdivrs
push
mov
loopne
je
pop
pop
pusha
insb
dec
mov
or
bound
sarb
sbb
idivb
and
xor
ljmp
jno
adc
inc
cmp
mov
extrq
jns
cld
fsubs
scas
lods
in
cmp
dec
adc
push
push
jg
test
outsb
ds
movsl
lds
mulb
xor
aas
and
fwait
sub
mov
jae
inc
mov
add
xor
in
loopne
in
shlb
xor
out
sbb
scas
or
fiadds
xor
push
jns
shrl
jle
pushf
ret
adc
shll
movsb
mov
loop
lret
add
shlb
out
addb
mov
lock
jne
into
mov
add
dec
jno
pop
sbb
xchg
in
inc
sbb
jns
cmp
add
adc
xor
sub
pop
pop
andb
mov
fs
lock
mov
rorb
stc
pop
inc
das
ret
xchg
shll
loope
jp
adc
repnz
cmp
cmp
loope
movsb
js
xchg
mov
out
insl
and
push
add
insl
dec
lods
jnp
sbb
mov
dec
dec
js
sub
mov
push
mov
pop
push
xor
pop
mov
ds
cmp
cmp
dec
ds
outsb
mov
mov
mov
scas
movsl
dec
mov
push
outsb
xor
adc
outsb
mov
adc
int
xor
mov
je
gs
mov
fsub
and
outsb
in
lods
je
js
pusha
aad
mov
lret
mov
cli
in
out
sbb
outsb
loopne
dec
adc
pop
enter
into
shl
jmp
push
inc
icebp
insl
sub
pop
imulb
outsb
mov
inc
cmp
stc
outsb
or
or
outsb
sbb
outsb
hlt
adc
outsb
call
outsb
cmp
fildll
in
add
sbb
outsb
jns
sub
push
sbb
outsb
rol
outsb
into
pusha
iret
dec
mov
outsb
lcall
pusha
out
clc
mov
aad
outsb
pop
test
push
fldcw
add
int
and
add
pop
rcr
pop
aad
adc
or
outsb
and
outsb
out
push
ljmp
adc
hlt
jb
sub
or
jns
and
call
outsb
shlb
push
mov
into
jae
sbb
outsb
jecxz
lds
pop
fs
xor
lock
xor
pop
and
outsb
mov
dec
mov
push
les
cmpsb
pop
dec
xor
movsl
push
mov
mov
sub
pop
adc
pop
out
movsl
jecxz
mov
outsb
movsb
stos
jns
sbb
lret
cmp
outsb
jns
jmp
lea
add
xchg
aam
test
stos
insl
sahf
out
mov
divl
data16
bound
adc
mov
clc
lock
sbb
mov
in
les
pop
pop
scas
mov
jl
xchg
mov
outsb
leave
je
gs
and
in
loopne
scas
push
mov
dec
cmp
mov
pop
jne
insl
cmpsb
outsb
mov
mov
ret
arpl
xor
push
xchg
cs
jb
and
cmp
sahf
insl
ret
mov
or
xor
mov
fnstcw
push
inc
adc
adc
outsb
xor
mov
push
mov
push
outsl
les
test
insl
dec
xor
xor
adc
fcmovbe
xchg
fldpi
mov
icebp
push
stos
and
repz
mov
xor
mov
int3
js
sbb
out
sbb
adc
loope
insl
out
push
sub
pop
add
bound
pop
mov
mov
fstps
lret
and
es
cmp
aad
fnsave
cli
loop
cmpsb
dec
fstp
divb
ret
adc
outsb
sti
data16
jecxz
push
data16
insl
les
daa
in
push
outsb
int3
sub
jl
dec
and
into
out
hlt
cmp
dec
xchg
aad
and
jae
lret
div
fistl
repnz
cmpsb
arpl
loopne
imul
mov
into
lods
fcmovbe
sbb
jmp
out
mov
divl
jb
insl
xorl
mov
xchg
std
inc
popa
lahf
in
les
in
daa
inc
sbb
pusha
mov
cmp
out
push
sahf
push
outsb
xor
add
mov
jmp
fcoml
push
pop
push
fcompl
insl
sbb
repz
outsb
stc
pop
loopne
jmp
xlat
fiadds
xor
pop
push
pop
les
leave
jae
fld
mov
dec
and
lret
aad
loopne
add
jns
movsb
fidivs
ficomps
sahf
icebp
push
enter
pop
arpl
shrb
les
std
sbb
add
xlat
insl
sbb
outsb
pushl
or
in
stc
outsb
sbb
inc
jb
fldt
xor
loope
aam
xor
andb
insl
mov
jl
sbb
insl
push
push
ret
cmpsb
inc
mov
addr16
pop
shll
jae
sbb
not
clc
icebp
jb
sbb
dec
or
mov
in
rcrl
cmp
outsb
icebp
adc
cmpsb
outsb
pop
mov
push
sbb
xor
in
ret
test
adc
sbb
outsb
sbb
cmp
dec
subl
and
jns
fisubs
mov
dec
into
fsubrs
les
popa
adc
dec
adc
std
or
repz
dec
fisttpll
ds
or
gs
mov
push
loope
es
pop
bound
pop
insl
insb
jl
popa
xor
dec
out
aad
sti
jmp
mov
or
xor
es
cltd
push
arpl
adc
shrb
fsubr
shrl
lock
dec
leave
cmpsb
dec
pop
ds
cmpsb
cmp
in
and
insl
sbb
push
mov
subl
inc
mov
add
cld
sahf
arpl
inc
mov
mov
pop
shll
insl
mov
andb
divb
pop
push
cmc
inc
fstps
xor
rorl
aas
int
ret
pop
stos
mov
cmp
and
dec
sbb
fwait
inc
into
aam
insl
sahf
gs
push
sbb
pop
and
popf
icebp
aad
pop
xor
push
les
add
and
xchg
ss
push
test
mov
insl
iret
xor
xchg
les
pop
mov
fwait
xor
popf
or
daa
jnp
dec
dec
sub
push
cs
adc
insl
sub
mov
cmpsb
inc
aad
push
enterw
es
gs
movsb
xor
fldcw
leave
sbb
mov
shl
jp
fidivrl
jmp
loope
insl
out
add
cmp
inc
jns
push
mov
add
xchg
push
lret
ss
push
push
ret
and
mov
jmp
sbb
xor
pop
and
pop
mov
cmp
mov
sbb
jp
sbb
insb
jb
insl
pop
pop
pop
dec
push
cltd
mov
sbb
inc
push
mov
movsb
sbb
les
aam
loop
ret
sub
and
push
mov
test
loopne
movsl
sbb
jns
lods
adc
dec
push
popf
cltd
sbb
aaa
sbb
add
arpl
xor
push
imul
mov
sbb
pop
and
ljmp
and
sbb
sbb
insl
fbstp
jne
hlt
jl
stc
xor
push
mov
nop
hlt
adc
out
sbb
arpl
popa
movsb
and
inc
push
pop
dec
jp
inc
mov
ret
and
scas
dec
mov
inc
sub
ja
mov
mov
test
insl
sbb
adc
mov
mov
dec
leave
mov
mov
mov
ja
push
movl
adc
int3
outsl
mov
push
jl
scas
imulb
push
adc
push
adc
popf
jno
dec
leave
lods
mov
lahf
mov
mov
jae
scas
pop
mov
outsb
ror
aad
mov
pop
int3
pusha
mov
mov
lret
or
ficompl
ret
mov
dec
lods
jge
mov
mov
lret
mov
push
mov
ja
mov
or
sub
outsb
xor
in
sbb
mov
mov
xchg
ret
lds
int3
enter
mov
lcall
or
mov
scas
fcmovb
mov
sbb
mov
imul
mov
ret
cmpsb
fidivs
cmp
enter
das
sahf
or
in
mov
clc
fsubl
mov
stos
cltd
daa
or
lret
sbb
insl
xchg
jbe
xor
cmc
cltd
cmp
rcrb
fistpl
jmp
pop
in
out
push
les
enter
and
ret
fisttpll
insl
and
inc
push
pop
push
scas
mov
jle
das
push
cwtl
in
fiaddl
add
dec
add
inc
mov
jae
shll
loop
out
call
jmp
jmp
arpl
into
stc
rolb
aam
dec
push
adc
jae
fsts
insl
popa
mov
insl
ret
lods
add
in
lea
mov
mov
sub
hlt
loop
push
cld
stc
ja
hlt
clc
jecxz
inc
in
xchg
bound
icebp
mul
repnz
jns
cmc
jecxz
inc
pop
inc
inc
loopne
cld
xor
cmpsl
out
add
arpl
bound
sbb
jb
or
aam
hlt
inc
idiv
mov
ljmp
sbb
cli
and
mov
jb
cli
inc
std
mov
add
push
and
inc
mov
clc
fisttps
repz
dec
xor
jns
sub
fdivl
testb
das
std
mov
jb
rorl
add
cs
cmp
enter
and
adc
loop
insl
dec
push
jae
std
or
inc
cmpsb
xor
cmp
and
and
ret
sub
or
push
add
icebp
fwait
jo
std
int3
dec
pushl
inc
test
pop
add
inc
jmp
cmp
daa
in
imul
cli
dec
mov
cmp
ret
pop
pushf
sbb
add
es
into
push
enter
xor
fdiv
stc
fprem
dec
loop
mov
inc
ja
or
jo
add
outsl
addr16
push
bound
xor
in
cmc
push
inc
ja
sbb
ss
ret
fiadds
mov
in
push
sti
imul
stc
inc
jmp
out
hlt
div
mov
ds
push
pop
stc
push
jb
jae
push
insl
in
or
push
int
jl
lock
cmp
leave
dec
or
or
testl
add
cmp
pop
incl
loopne
mov
and
jb
sub
shr
adc
inc
mov
and
add
and
jecxz
lret
das
dec
or
dec
stc
lret
data16
jae
sbb
in
out
adc
iret
pop
xor
or
in
and
mov
dec
clc
mov
call
iret
pop
fildll
push
out
dec
pop
or
iret
hlt
mov
clc
pop
lahf
not
xor
add
or
inc
fbld
ds
lods
inc
cli
inc
dec
loopne
das
fstl
push
imull
jnp
or
shlw
push
xchg
jbe
sbb
jb
jo
call
in
iret
aam
cld
data16
or
and
in
popf
or
out
cwtl
out
add
ja
dec
loop
xor
addb
pop
xchg
out
jae
lea
icebp
rorb
lock
clc
inc
shlb
sbb
stc
add
lcall
or
pop
cmpsb
in
and
and
xor
mov
clc
jae
in
insl
out
rcll
fnsave
mov
push
mov
jb
leave
cmp
popf
roll
cmc
fmull
xchg
adc
divb
daa
leave
sub
inc
out
mov
dec
test
xor
insl
fsubrs
or
icebp
add
stos
inc
xchg
push
add
in
mov
and
dec
mov
xor
loope
les
push
hlt
iret
clc
les
insl
mov
fwait
insl
push
or
and
enter
nop
cli
fdivs
es
sbb
jp
mov
cmp
stos
sub
lret
in
and
mov
mov
inc
add
cmpsb
cs
sub
pop
stc
push
or
les
aas
adc
dec
je
ja
mov
and
jne
decl
push
sahf
or
shll
scas
add
adc
or
fiaddl
int
dec
push
jbe
pop
add
or
sub
sbb
or
addr16
insb
and
mov
push
cmc
shlb
cmp
test
enter
insl
mov
pushf
hlt
pop
sbb
fimuls
ja
imul
adc
cmp
jae
rcrb
add
bound
cwtl
or
push
sbb
gs
or
sahf
ret
mov
stc
in
cmp
or
pop
lahf
cmp
cmp
jae
fdivrs
mov
aaa
or
arpl
xlat
cs
add
jb
mov
cmp
and
add
insl
and
js
inc
in
jns
aas
arpl
jge
pop
mov
dec
xor
mov
push
jl
mov
push
insl
pop
leave
imul
jae
rorl
aam
mov
rcrl
pop
xlat
xchg
daa
mov
imull
mul
hlt
inc
jns
xchg
push
mov
xchg
push
jl
stc
int
dec
inc
cmc
mov
popf
lea
mov
enter
aam
mov
xor
sub
dec
fst
insl
ds
inc
loop
inc
pop
inc
push
int
jne
mov
sbb
aas
arpl
hlt
mov
sbb
icebp
and
inc
dec
pop
jle
mov
push
sbb
je
adc
inc
pop
push
fstpl
test
sahf
loope
iret
insl
push
sti
jmp
iret
xlat
mov
mov
jne
daa
pop
insl
mov
xor
or
push
xchg
xchg
gs
xor
sbb
lea
inc
pop
mov
fisubs
and
cmp
stc
cmp
jne
gs
jne
mov
fmull
repnz
andl
jmp
insl
sarl
inc
cmp
xchg
insl
sbb
push
insl
mov
adc
and
loope
mov
push
neg
add
icebp
mov
push
push
jge
into
imul
ss
fadds
and
xchg
and
adc
push
fcomps
mov
mov
in
mov
pop
in
es
mov
mov
xor
aam
mov
jne
loopne
bound
xlat
push
mov
pop
push
fsts
inc
xor
call
mov
aam
shl
mov
iret
js
stc
jno
testb
mov
gs
sbb
sbb
push
dec
ss
jmp
es
sbb
movl
and
and
pusha
ret
xchg
ss
ss
insl
and
inc
pop
jns
cmp
xlat
dec
mov
or
push
cmpsb
negl
shl
aaa
adc
mov
negl
push
xlat
scas
lcall
pop
or
adc
jmp
aad
data16
jge
xor
nop
and
mov
outsb
lods
jne
adc
mov
sbb
fsubrl
sub
ss
aad
sub
inc
and
insl
jmp
sbb
icebp
popa
fcmovnu
push
xor
jle
mov
gs
hlt
loope,pn
lret
and
sbb
sbb
pop
imul
and
test
fcompl
aad
xor
sub
cmpsb
fldl
xor
and
mov
xor
aas
inc
pop
and
stos
mov
sahf
push
shr
mov
arpl
sub
cmpl
adc
mov
jmp
sbb
jmp
mov
sti
lods
leave
sbb
scas
fsubrl
sbb
adc
mov
repz
push
cltd
and
sbb
test
popf
iret
cmp
jmp
or
add
pop
popf
iret
es
and
or
insl
mov
pop
aaa
sbb
into
xchg
jae
je
or
jle
imul
push
cmpsl
mov
insl
sub
inc
inc
and
sbb
fs
inc
push
inc
dec
gs
popa
stc
and
and
aam
jle
jecxz
iret
and
pop
aam
insl
lret
inc
inc
arpl
mov
mov
pop
in
insl
sahf
mov
inc
les
int
stc
xchg
cmpsb
fldt
fistl
pop
adc
cmc
sarl
fldcw
adc
fdivrl
xchg
sbb
and
add
cld
in
idiv
fadds
loope
insl
add
out
pop
jecxz
sub
add
loope
sub
inc
cli
jl
movsl
add
sub
pop
xchg
jae
shl
xor
and
jge
fsubrl
lods
push
inc
std
fcompl
out
fdivs
movsb
xor
insl
adc
imul
xlat
shll
dec
push
insl
stos
rcrl
insl
inc
mov
push
pop
aaa
insl
push
mov
mov
mov
xor
imul
cmp
inc
loop
jne
adc
in
pop
iret
lods
insl
roll
sub
cmp
loope
fisttpll
and
jge
push
ret
push
jne
pop
outsb
mov
dec
mov
adc
mov
stos
and
test
or
dec
push
inc
jmp
xor
lea
inc
in
decb
add
popf
lcall
jecxz
inc
push
sub
cmp
fidivs
iret
cmp
add
jge
lods
insl
sub
stos
roll
fldcw
and
jnp
mov
insl
pop
fcomi
xchg
pop
repnz
dec
jne
jae
out
or
pop
stos
popf
sub
fstpl
leave
insl
mov
push
mov
push
sub
mov
aad
outsl
mov
js
push
or
popf
clc
je
sub
insb
sti
aas
mov
sub
nop/reserved
outsb
mov
stos
cmc
jl
lret
mov
movsb
js
rcr
jmp
idivl
mov
push
push
lret
cmpsl
pusha
xor
test
lea
shl
dec
add
out
test
or
imul
into
or
sub
clc
and
xlat
pop
cli
fimuls
testb
push
pop
jno
cs
push
js
or
push
ret
je
fisttpl
cwtl
inc
push
xchg
in
mov
pop
clc
jns
rclb
js
push
hlt
lahf
push
pusha
int
fs
jl
data16
xor
or
and
repnz
loope
sbb
mov
sub
dec
pop
jmp
add
pop
call
ret
sub
push
clc
es
call
int
pop
je
dec
or
or
xchg
dec
sub
push
push
push
data16
and
cmp
add
push
push
je
and
lret
and
add
clc
lock
sbb
push
cs
pop
je
addb
je
sub
loope
cmp
sbb
int3
dec
pop
testl
loope
aas
xor
pop
add
divb
mov
out
jbe
enter
push
aad
aad
mov
pop
pop
push
cwtl
je
pop
push
clc
aaa
mov
cs
push
xor
into
pop
fidivrs
jo
loopne
nop
into
cmp
jne
xor
popa
inc
sbb
or
cmc
mov
xor
push
pusha
fs
clc
es
mov
pop
cmc
test
je
push
ss
push
clc
mov
sbb
int
aam
rclb
fs
arpl
insb
sbb
loopne
fimuls
notl
xor
pop
fsubs
add
into
inc
and
lea
xlat
clc
jnp
cwtl
pop
push
movsb
into
je
fdiv
fs
lock
jne
adc
call
mov
shll
cltd
popa
add
je
popf
je
jl
pusha
mov
mov
lods
jbe
je,pn
and
adcl
cmp
mov
js
fsubl
cmp
dec
cmp
cmpsb
jge
pop
push
push
in
cmp
clc
push
cmp
or
je,pt
fsubr
sbb
and
pusha
sub
jl
pop
and
stc
lock
or
je
push
shl
js
dec
fiadds
push
aad
data16
mov
fs
inc
pusha
push
pop
mov
mov
fs
fiadds
dec
out
vsqrtps
popf
mov
fsubp
repnz
sbb
je
or
push
push
lods
push
fs
into
js
jne
mov
pop
sbb
shl
rolb
adc
outsb
mov
sub
lock
int
push
sbb
push
add
inc
pop
pop
jne
mov
sbb
and
mov
shll
inc
sarb
xlat
outsb
fisubs
sub
fsubrl
int
iretw
outsb
sbb
or
insb
adc
push
push
fildll
cmp
cmpsb
sub
adc
add
loope
cmp
lea
adc
pop
mov
cld
aad
les
and
clc
cmpsb
sub
jmp
or
pusha
cltd
sbb
mov
icebp
movsb
outsb
call
cmp
into
cld
sbb
les
divl
outsb
and
pop
cmp
cmp
outsb
push
push
sbb
cmp
fs
cwtl
push
cwtl
inc
push
arpl
xor
fmuls
popf
dec
jl
inc
js
je
or
jl
enter
cmp
xor
jns
push
fdivrl
popf
outsb
push
cmp
pushf
push
dec
inc
mov
and
adc
je
out
or
push
add
sub
sub
sbb
pop
push
loopne
add
cwtl
shl
sbb
outsb
pop
cmc
dec
je
or
hlt
les
hlt
cmp
adc
inc
stc
test
sub
test
hlt
inc
sbb
icebp
mov
je
insb
repnz
not
push
xor
outsb
cli
and
je
or
fcompl
xor
enter
and
stc
add
inc
dec
sub
clc
rcrl
outsb
dec
je
inc
popa
cmp
add
and
je
inc
push
rcrb
std
cwtl
aas
scas
js
xorb
add
js
adc
je
and
push
sub
lock
inc
cmp
icebp
je
ss
add
or
je
test
xor
pop
js
mov
daa
les
dec
hlt
les
sbb
js
mov
xor
inc
mov
cmp
and
pop
add
inc
out
mov
pop
dec
xor
mov
sbb
leave
push
cmp
and
mov
cmp
add
into
outsb
imul
mov
adc
gs
je
dec
pop
sbb
sub
inc
data16
enter
mov
pop
into
outsb
push
fisubrs
cwtl
mov
or
insb
fscale
popa
mov
pusha
into
loopne
push
xchg
pop
je
rclb
sbb
outsb
fsubp
push
je
rcrb
popa
pusha
push
js
dec
inc
aam
fdivs
mov
lock
je
insb
jecxz
fdivrs
add
les
aam
mov
les
sar
sbb
xorb
cmp
cwtl
sbb
outsb
sub
je
mov
test
mov
out
push
sarb
dec
mov
fs
inc
fs
and
int3
popf
fdivl
push
gs
inc
hlt
cmp
fdivrs
aaa
pop
stc
cld
outsb
pop
test
lret
outsb
cmp
lods
mov
test
and
mov
push
mov
outsb
inc
push
adc
sbb
outsb
sbb
sbb
and
xor
xor
test
lock
cs
inc
leave
outsb
into
mov
cwtl
or
shlb
inc
mov
and
in
ljmp
pop
hlt
or
jl
mov
jecxz
aaa
cmc
pop
sbb
into
in
mov
je
pusha
mov
popf
outsb
sbb
sbb
sub
mov
pusha
pop
cmpsb
inc
dec
je
and
je
fisubrl
add
mov
cmp
fisubs
hlt
mov
mov
ss
add
je
inc
inc
xor
mov
lcall
dec
and
pop
inc
sahf
popf
outsb
inc
popf
je
in
push
cwtl
jp
xor
adc
insb
pop
push
lea
rclb
sbb
pusha
mov
sbb
je
mov
and
roll
xchg
ret
cwtl
out
js
push
gs
shrl
shl
lock
jge
cmp
inc
rorl
sbb
lcall
aam
dec
inc
test
push
enter
xchg
mov
pop
hlt
cmpsb
into
outsb
je
add
shll
les
adc
and
and
mov
movsb
outsb
js
dec
out
pop
inc
push
les
shll
int
mov
and
dec
inc
pusha
jne
jl
xchg
sarl
push
sub
xor
inc
adc
pop
push
ss
pop
pusha
je
and
and
jne
xor
inc
push
jo
add
outsb
mov
aaa
pop
loopne
inc
movsl
outsb
es
data16
add
and
cmp
outsb
push
in
jl
into
outsb
jl
std
inc
popf
dec
out
loop
imull
sub
sbb
into
enter
mov
dec
push
mov
js
rcpps
mov
dec
je
int
jl
shll
int3
push
or
sub
dec
fadds
sahf
lods
into
pusha
fs
push
mov
sbb
inc
std
lahf
popa
and
pop
sub
jl
mov
dec
int3
es
dec
iret
mov
pusha
jl
pop
mov
pop
aam
jl
int3
xor
and
xchg
jp
jl
js
push
mov
xor
push
je
xor
hlt
inc
popf
adc
mov
dec
push
jns
mov
inc
leave
mov
aam
mov
mov
gs
lods
mov
pop
scas
mov
pop
dec
pop
les
in
popf
jge
jne
dec
sbb
xor
push
dec
loopne
inc
jo
int3
hlt
movsb
loopne
sub
pusha
fcoml
leave
lods
insl
rol
cld
sub
scas
pusha
mov
mov
pop
repnz
mov
std
int
jle
fbld
loop
insb
sbb
push
nop
mov
js
sbb
in
xor
mov
mov
js
lds
lret
lock
sub
push
je
mov
fucomp
out
test
fcompl
pop
fisttps
ljmp
or
lock
mov
test
sbb
js
mov
jl
pushf
testl
inc
repz
rorl
mov
mov
clc
js
pop
mov
fstp
mov
int3
in
mov
stos
jb
pusha
push
xchg
sbb
lock
mov
adc
popf
negb
lret
je
aam
int3
pop
subb
aam
mov
int3
dec
fsubrl
mov
and
ss
adc
adc
mov
bound
sbb
aas
mov
pop
xor
imull
scas
imul
push
lock
jecxz
lods
or
subb
inc
adc
fstpt
aad
mov
loopne
xor
inc
test
xchg
dec
pop
test
and
mov
dec
or
in
iret
inc
add
jno
lods
lods
cmp
jecxz
jl
fs
je
mov
xchg
inc
shll
dec
push
pop
fsubl
mov
lods
push
mov
add
dec
movsb
pop
fistps
fidivrs
cltd
pop
jge
lret
je
loope
loop
jp
call
test
icebp
pop
rcr
ljmp
fdiv
sub
pushf
addr16
loope
rcrb
cmp
or
je
les
ja
push
js
inc
push
dec
lods
cli
lret
add
sbb
dec
iret
sbb
xchg
call
xchg
mov
cmp
dec
pop
add
fdivrl
int3
fiadds
loopne
int
xorl
jl
pusha
fldcw
das
test
divl
sti
or
dec
sbb
dec
push
je
icebp
not
repnz
sub
push
cmc
and
sbb
jg
loopne
idiv
push
push
lret
pusha
sub
push
jecxz
loope
cs
gs
bound
mov
mov
jle
addb
int
nop
cmp
adc
lea
dec
mov
xor
mov
mov
int3
clc
sbb
push
mov
clc
filds
or
hlt
cmp
push
test
add
add
dec
inc
repz
cld
icebp
xor
push
aam
add
fidivrl
sbb
add
cs
out
test
clc
cli
sub
movsb
les
push
mov
cmpsl
mov
adc
xchg
lret
jne
add
or
int
sub
mov
and
icebp
pop
lret
dec
sarl
or
sbb
mov
lea
or
pop
dec
cmp
mov
shrb
mov
les
or
out
into
in
ffreep
icebp
inc
lods
xor
std
ret
sbb
push
es
pop
movsl
or
push
scas
pop
and
mov
int3
ss
mov
hlt
enter
jle
dec
pop
test
test
repnz
add
rolb
bnd
pushf
popl
je
push
pushf
movsl
or
mov
lret
push
xor
cmp
je
test
int
add
cld
inc
push
lods
sbb
sbb
sbb
sti
add
lret
dec
cwtl
pop
adcb
sbb
fbstp
cs
aam
push
or
int3
ss
adc
js
je
mov
stos
mov
pop
iret
dec
hlt
aam
repnz
mov
in
fldenv
jne
mov
std
fdivr
hlt
jnp
xor
sti
push
inc
loope
lret
and
cmc
cwtl
and
fs
mov
add
mov
clc
je
or
jl
mov
or
loopne
mov
lea
add
push
pop
sbbb
repnz
or
fdiv
fmull
push
xchg
xor
leave
and
divb
or
pushl
out
push
imul
jle
fisttps
mov
push
pop
clc
test
dec
mov
in
je
sub
jle
fildll
loop
xor
mov
out
flds
xor
or
dec
sub
loopne
in
sub
call
lea
cld
dec
cmp
cmp
cld
loopne
js
pop
pop
loop
and
dec
je
inc
je
or
int
push
sub
lock
sub
mov
or
mov
js
push
inc
inc
addps
or
push
adc
sub
rcr
dec
cmp
movsb
sub
jbe
inc
aaa
mov
adc
or
dec
sub
jle
cld
pop
and
shlb
sbb
cmp
lea
inc
sub
dec
xchg
mov
xchg
std
test
inc
nop
jle
fs
int3
xor
outsb
mov
arpl
in
int3
mov
sub
ljmp
je
repz
jb
push
push
jnp
sar
pop
movsl
and
jno
sub
mov
lret
jb
not
sbb
push
mov
xchg
scas
pop
sarb
or
push
out
mov
jl
cwtl
or
je
sbb
jne
sti
pop
xor
mov
icebp
fmull
push
fdivrl
outsb
dec
push
test
jb
gs
or
pop
mov
lock
sub
stc
sub
clc
cmp
in
fdivr
jnp
loopne
in
hlt
enter
push
mov
sub
subl
mov
cli
dec
inc
mov
cmp
add
cmp
sub
andb
and
cmp
stos
ljmp
repz
pop
push
cs
mov
lea
dec
in
hlt
xchg
pop
aam
sbb
or
in
lret
mov
mov
lret
pop
mov
mov
inc
or
xor
arpl
std
jl
or
push
dec
hlt
loopne
jecxz
inc
outsb
add
cmc
enter
pop
add
fildll
inc
bound
mov
pop
std
mov
adc
pop
pop
mov
push
bnd
cwtl
mov
and
fistps
fcomps
pushf
add
add
cmp
mov
outsb
mov
je
clc
mov
mov
dec
rorb
pusha
pop
add
mov
subl
add
je
cli
jl
xlat
push
jbe
mov
roll
enter
sub
shlb
sbb
xchg
or
adc
fs
test
mov
cmpsl
pop
and
jl
or
movsb
cmp
ljmp
cmpsb
in
js
or
enter
cmp
aam
int3
loop
test
pop
hlt
scas
pop
push
test
add
sti
push
cmp
xor
out
sbb
insb
inc
icebp
outsb
and
push
testb
cld
and
or
jl
dec
fcoml
cs
je
inc
sbb
xchg
int3
test
je
mov
fs
xchg
test
dec
and
sbb
fs
enter
js
or
or
gs
jne
sbb
aas
cmp
fs
loope
pop
xor
inc
push
arpl
mov
adc
push
jl
inc
into
in
dec
bnd
pop
sbb
xchg
jne
fimuls
cli
into
outsb
xor
and
jl
sbb
xchg
hlt
cmp
aam
sub
mov
test
fs
shl
mov
cmp
push
test
jne
sbb
outsb
xor
leave
js
jl
or
lahf
stc
imull
push
lock
sub
les
imul
jl
idivl
dec
ficoms
hlt
in
fisttps
and
or
leave
mov
in
outsb
jmp
add
cmc
leave
in
or
jl
mov
movsb
aam
push
push
jl
cltd
js
pop
xchg
enter
cmpsl
andl
outsb
out
ds
adc
js
les
int3
int
out
outsb
add
xchg
test
loope
jmp
clc
gs
test
loope
xorl
jl
cld
push
in
cmp
mov
push
fs
or
scas
push
aad
push
cmp
loop
loopne
cmpsb
push
pop
push
sub
inc
add
cs
jl
sub
cwtl
es
mov
test
inc
fs
and
insb
mov
inc
or
enter
fmul
or
shrb
test
cld
loope
mov
jne
push
mov
sub
jl
cmp
shl
sbb
mov
outsb
int3
hlt
ss
fidivl
xor
dec
push
loopne
xor
inc
xchg
insb
aad
outsb
fcom
adc
inc
call
mov
call
mov
hlt
cmpsb
jge
jl
mov
ss
push
pop
aam
sbb
sbb
push
mov
jl
lret
lock
inc
je
inc
push
cmp
inc
int
int3
dec
xor
je
fs
mov
iret
push
xor
test
xlat
outsb
ficoms
xchg
lock
sub
pushf
sbb
lret
or
fiaddl
fcompl
je
aam
es
subl
sbb
outsb
data16
idivl
imul
lods
add
lret
mov
cmc
clc
or
push
mov
xchg
aad
mov
lods
sub
cwtl
jecxz
xchg
inc
je
shrw
xor
outsb
cld
dec
test
sub
loopne
aam
or
mov
testl
sub
jl
sbb
push
rolb
aad
dec
cmp
push
test
pop
sahf
xor
push
rolb
jl
mov
dec
cs
xor
lretw
outsb
js
xor
sbb
push
mov
push
push
xorl
jl
pop
inc
loope
sub
or
sbb
mov
clc
inc
sub
xlat
outsb
xchg
pusha
mov
jne
pusha
rorl
mov
mov
outsb
out
pop
movsb
je
and
int
push
and
into
and
pusha
pop
rcrb
fsubrs
lock
xor
cmp
pop
lock
mov
idivl
xchg
movsl
cld
push
lock
aad
stos
jne
fsubrl
hlt
mov
inc
andb
pop
cmc
lock
adc
jl
jl
in
popf
outsb
cmp
mov
cs
pop
mov
xchg
orb
test
test
ret
sub
call
and
push
sub
jl
loope
push
mov
jl
je
or
pop
mov
fnstcw
xchg
push
pushf
xor
jge
aam
adc
cld
into
inc
mov
jl
xlat
mov
js
loopne
mov
mov
je
fnstsw
sub
lds
xor
call
sub
jle
lods
mov
jmp
xor
and
outsb
js
int3
jle
js
movsb
mov
mov
dec
bnd
in
out
je
movsb
push
mov
arpl
sub
notb
movsl
cwtl
fldenv
dec
rclb
sbb
sub
inc
fsub
call
movsb
dec
cwtl
jl
pushf
xor
mov
je
jl
xchg
jne
sub
fwait
sbb
cld
fiadds
int
dec
bound
iret
cmp
cli
jl
push
mov
and
loope
cmpsl
push
inc
inc
je
test
lock
pop
jl
adc
inc
aam
sbb
je
js
data16
xor
pusha
repz
aaa
jne
jl,pn
pusha
pop
cld
sti
mov
mov
fs
jl
push
int
mov
test
clc
lods
mov
sub
pop
fs
adc
out
iret
aas
lcall
fidivrs
jl
fildl
pop
inc
mov
push
imul
mov
outsb
and
fs
fldt
les
fdivr
jne
xchg
lock
outsb
mov
add
push
insb
cli
inc
mov
cld
push
dec
xlat
nop
or
pop
cwtl
push
jl
push
in
inc
fnstsw
sub
fldcw
loopne
je
pushf
sbb
shlb
aas
pushf
pushf
jge
cld
cmp
test
outsb
sbb
mov
inc
mov
inc
inc
cmpsl
outsb
daa
xor
push
or
in
pop
out
jl
push
fnsave
shrl
jge
or
push
adc
loopne
or
pop
jl
je
cmp
fisttpll
test
inc
cld
mov
mov
xor
or
dec
inc
jne
xor
push
push
shll
mov
sub
outsb
ficomps
jl
inc
push
int3
push
out
mov
cmp
pop
rorb
outsb
sub
jg
int3
pusha
xchg
mov
insb
add
pop
movsb
mov
popa
push
fiaddl
shlb
clc
fdivl
jl
clc
add
je
mov
gs
movsb
sbb
lods
outsb
jne
jle
mov
bnd
daa
enter
cwtl
push
sarb
sbb
dec
and
push
divb
jp
or
cmp
dec
imul
pminsw
out
fs
sbb
dec
rcrl
aad
popf
cld
les
in
out
push
call
pop
jl
ljmp
add
cwtl
or
mov
jne
push
xchg
cmpsb
pop
sub
mov
sarb
jl
rolb
sub
mov
hlt
push
clc
cs
sub
xor
outsb
mov
pop
pop
jl
push
jbe
les
test
push
push
xchg
cmp
push
iret
push
jl,pt
and
push
jns
std
push
add
jge
inc
mov
cld
or
sahf
outsb
cmc
test
mov
enter
insl
out
jmp
scas
je
pop
or
js
das
je
mov
xchg
push
js
je
cmpsl
fdivl
stos
int
je
push
clc
dec
fbstp
pop
movsb
xor
je
pop
das
je
mov
xchg
loop
int3
jl
cmp
outsb
pusha
cmp
int3
dec
push
cmpsb
mov
cmpsl
jmp
jl
std
das
jo
adc
shll
adc
popf
pop
je
mov
shl
xlat
or
mov
out
inc
js
je
mov
mov
sti
jo
push
je
fwait
and
jl
test
dec
movsl
sbb
push
movsb
pusha
cmpsb
push
add
stos
and
and
je
pusha
mov
test
push
lods
les
mov
xor
pushf
inc
test
es
pop
xor
push
cmp
pusha
test
sub
je
divb
int
push
xor
shrl
mov
mov
fs
das
mov
jecxz
mov
movsb
pushf
mov
mov
mov
sbb
pusha
popf
je
push
movsb
jg
mov
dec
mov
in
jg
jo
sbb
movsb
lds
das
xlat
fcoml
fs
roll
shlb
pusha
out
jecxz
je
mov
int3
je
movsb
mov
push
mov
test
mov
mov
inc
mov
cmp
fs
pusha
sbb
inc
movsl
js
pop
push
shlb
lret
jmp
aaa
jne
and
sub
fs
mov
popf
js
movsb
jl
push
cmpsl
pop
insb
jb
jp
fmul
sub
mov
inc
mov
sub
shll
loopne
mov
push
je
dec
adcb
and
nop
fisttpl
in
sahf
mov
push
inc
fbstp
xchg
es
rclb
cwtl
sahf
frstor
nop
lahf
adc
insb
lret
dec
insb
out
and
addr16
fdivp
cld
mov
gs
and
pop
mov
loop
test
je
jl
mov
cwtl
cmpsl
sahf
fstl
cmp
fwait
mov
mov
loop
popf
mov
xor
xlat
push
sub
dec
jo
pop
hlt
loopne
loope
pusha
jbe
or
mov
push
pop
fcomps
cltd
dec
mov
dec
jle
js
cmp
xor
push
jbe
cs
pop
into
call
stc
mov
mov
push
xchg
sub
lea
je
popf
outsl
sbb
das
mov
or
fadd
mov
mov
sti
ja
fcomi
mov
mov
mov
xchg
aas
adc
pusha
int3
mov
je
mov
lahf
outsl
rcl
sbb
clc
subb
mov
cmp
mov
jbe
lret
mov
movsb
cmp
and
mov
insl
or
lds
mov
gs
fcoms
xchg
cld
pusha
fisubrl
push
mov
test
mov
call
cld
out
leave
je
add
mov
ficoml
jl
leave
js
fidivl
test
lret
fisubl
mov
push
pop
pop
inc
sub
adcl
cmp
lods
inc
test
mov
cmp
xchg
les
xor
sub
inc
mov
mov
xor
pop
mov
mov
dec
pusha
rcrb
shrb
fidivrl
lds
int3
loopne
arpl
pop
in
xchg
push
movl
mov
xlat
test
mov
stos
in
js
cmpsb
adc
mov
xlat
lahf
js
sarl
loopne
cmp
mov
inc
adc
mov
add
test
xchg
xor
subb
xor
lret
lret
mov
test
fimuls
inc
mov
cli
mov
jns
int3
js
mov
mov
popf
lods
repz
lahf
das
js
mov
inc
aad
push
inc
les
mov
mov
roll
or
sbb
mov
jo
lahf
jge
xor
lahf
stos
pop
clc
insb
scas
daa
mov
dec
fcomps
js
mov
or
shrb
lret
push
lds
push
cli
lds
jg
pusha
gs
pop
xor
add
mov
xor
xlat
inc
push
jl
mov
inc
jl
and
mov
lods
popf
std
je
sarl
je
lea
pop
popf
cmpsb
rcll
mov
mov
mov
mov
lret
jl
mov
out
cwtl
mov
das
in
rcll
mov
jne,pt
xchg
jo
out
ror
scas
test
int
test
aam
je
mov
lret
lahf
jne
xor
sub
stc
dec
int
je
xor
pop
pushf
hlt
enter
lret
inc
push
shrb
cwtl
jl
mov
sub
js
ret
mov
je
pusha
sbbb
shrb
mov
mov
iret
or
mov
mov
mov
pusha
lret
mov
add
cmp
out
adc
mov
inc
mov
fdivrl
scas
mov
test
mov
sahf
mov
sub
mov
sbb
jecxz
mov
movsb
imul
cmp
mov
ret
mov
ficoms
fwait
xor
or
rorl
dec
insb
repnz
lret
ret
mov
call
js
je
ret
push
mov
dec
fcoml
jne
popf
scas
and
mov
fmulp
sub
je
repnz
jbe
popf
shr
mov
outsb
je
xchg
jno
mov
push
mov
jl
cmp
mov
les
mov
jg
mov
je
push
mov
jno
mov
les
mov
into
movsl
pop
pushf
dec
add
fs
pop
mov
mov
mov
js
xor
lret
sub
lret
mov
js
xchg
movsl
nop
push
pushf
jo
mov
cmp
popa
adc
nop
mov
hlt
leave
mov
cmpsb
clc
shll
add
dec
lods
mov
pop
int3
lock
leave
mov
cmpb
adc
call
rol
aas
ficoms
aam
jl
mov
and
push
gs
mov
aam
pushf
cld
mov
xlat
cmp
xchg
add
mov
mov
call
sahf
xor
cmpsb
jo
add
mov
popf
inc
in
clc
leave
popa
insb
das
rolb
je
mov
mov
add
shrl
mov
pusha
fcmovnb
je
into
xor
mov
mov
ret
mov
jg
je
and
add
mov
mov
add
mov
shlb
jnp
ret
mov
jecxz
xor
adc
mov
roll
cltd
sbb
mov
shlb
sub
iret
mov
push
repnz
sbb
mov
jo
jl
mov
loopne
and
mov
sub
push
fdivs
test
shlb
mov
aam
pusha
sarb
inc
push
lahf
sti
int3
lea
push
inc
jns
mov
shlb
shlb
ret
lret
test
inc
sub
adc
jo
jecxz
pushf
sbb
push
ss
sbb
shrl
push
mov
push
sarb
mov
push
mov
and
jnp
mov
push
mov
fnstcw
inc
mov
mov
cmc
icebp
je
push
loopne
js
jb
call
subl
push
jo
mov
jecxz
sar
in
mov
pusha
xlat
sbb
fstpt
pushf
cs
call
mov
dec
mov
js
lret
mov
push
push
ror
mov
cmp
test
mov
lea
cmp
int3
pop
js
mov
leave
bound
mov
xchg
cmp
stos
xchg
mov
clc
rcr
lds
mov
xor
mov
lahf
fcomps
test
scas
mov
pop
movsb
or
data16
dec
mov
lods
mov
sarl
movsb
addr16
jbe
cmpsl
sub
shll
jo
int3
mov
mov
scas
sbb
mov
lock
leave
xchg
js
mov
je
jne
pop
in
je
jp
in
scas
cmp
adc
mov
mov
mov
test
les
rcrb
xchg
jo
sub
mov
js
in
scas
mov
dec
rol
or
arpl
mov
into
insb
cmp
jmp
nop
jo
out
addr16
mov
mov
enter
loope
aaa
loopne
js
aas
aam
xor
lret
mov
rcl
je
lods
iret
adc
aam
leave
nop
fdivs
mov
dec
xor
jle
sbb
inc
cmp
lock
dec
or
enter
nop
push
int
mov
cwtl
mov
sbb
mov
cmp
int3
out
mov
push
add
loopne
test
xchg
jmp
or
mov
inc
sbb
cmp
mov
les
int3
clc
lods
outsb
int
pushf
ljmp
jecxz
ret
sarl
dec
mov
shlb
sbb
enter
mov
loopne
rcr
cmp
adc
push
and
dec
pop
xchg
shl
scas
pusha
mov
arpl
or
lret
into
mov
je
xlat
mov
jp
lods
sahf
ret
aad
mov
popf
push
mov
aam
adcb
sub
and
cmp
fwait
jns
xchg
and
push
jo
xor
inc
xor
jl
cmp
aam
pushf
cmc
ror
sub
lret
push
pop
lds
aaa
mov
mov
lcall
and
mov
outsb
jne
adc
sub
enter
int
mov
xchg
jo
or
je
mov
faddl
mov
in
sub
rol
rcr
adc
leave
and
push
je
int3
popf
pusha
adc
mov
xchg
test
add
cld
aam
sub
movsl
loop
addr16
mov
js
mov
rcrb
hlt
xchg
push
ror
pushf
adc
cmp
lds
mov
je
mov
pop
and
push
pushf
clc
inc
into
xor
shll
shl
push
lds
jne
sbbb
rol
test
into
pop
int
faddl
divl
es
aas
je
jge
ret
mov
adc
mov
loop
mov
les
icebp
je
mov
je
js
int3
es
insb
mov
aad
je
mov
or
leave
or
rcl
enter
adc
rol
mov
shlb
mov
in
out
je
mov
pop
pusha
cmp
sub
pushl
nop
mov
int
popf
aaa
pusha
xchg
pop
shrb
into
mov
mov
clc
cld
pop
inc
mov
and
je
sarb
pusha
in
lods
mov
sbb
push
ret
divl
jmp
push
sarl
insb
mov
in
mov
js
jl
dec
jl
mov
mov
pop
js
adc
into
sarb
aad
xchg
and
rcr
insl
mov
popa
mov
loope
pop
adcl
sbb
mov
jp
pusha
lret
int
rcl
mov
mov
pusha
hlt
iret
mov
cmp
sub
nop
pushf
idivl
je
lret
int
lret
je
movsl
xor
cld
sub
insb
cmpsl
adc
aad
inc
test
mov
outsb
imul
fs
scas
jnp
into
into
jo
mov
mov
jo
lahf
and
mov
in
scas
jge
sub
rorb
push
cld
daa
mov
aaa
pop
aam
cwtl
rcr
inc
inc
aam
ror
and
test
or
jl
pop
sarb
fdivrl
mov
jp
ret
mov
call
ret
hlt
mov
cmp
mov
inc
sbb
lret
loopne
lds
arpl
repz
iret
scas
mov
inc
cld
icebp
sbb
sub
dec
dec
sbb
or
push
rcrb
jecxz
outsb
int3
enter
jbe
int
hlt
int
movsb
jnp
repz
mov
rcl
lret
mov
lret
js
fsubs
mov
push
push
pop
pop
clc
ss
lods
or
mov
into
fidivl
ljmp
xor
mov
js
stos
out
insb
pop
je
lock
jne
movsb
test
xor
mov
lods
fisubl
loopne
lcall
mov
ljmp
testb
xlat
xlat
hlt
je
mov
in
lret
fidivs
loopne
cmp
push
add
icebp
lock
je
push
hlt
call
das
popf
lods
pop
pop
or
mov
add
scas
sbb
mov
out
jno
ljmp
rcr
scas
fs
sbb
aam
or
pop
sti
fldcw
nop
or
mov
cmp
in
dec
pop
fldcw
into
in
xlat
mov
jmp
push
sub
enter
mov
push
fidivrl
popf
ret
add
cmp
xor
jno
mov
dec
dec
shrb
mov
cld
fsubrs
and
fdivl
pop
mov
out
in
shl
mov
mov
stc
mov
in
mov
mov
in
mov
and
cmp
mov
inc
into
sub
pop
cmp
adc
xor
mov
data16
cmp
mov
rcrl
mov
shlb
jmp
fmul
mov
mov
scas
or
in
shl
shlb
mov
adc
mov
mov
mov
js
les
loopne
jne
notl
js
mov
stos
push
and
nop
inc
cwtl
xor
mov
jmp
lret
adc
insb
je
test
aam
je
scas
pop
inc
push
pop
aam
inc
mov
enter
mov
ror
mov
insb
in
fucomip
jbe
je
fmull
nop
fcoms
and
fldcw
add
and
data16
mov
inc
in
in
push
pop
rol
leave
neg
lret
dec
push
sarb
mov
cmp
jg
push
mov
andb
push
pop
lret
cmc
int3
xor
xor
rcrb
je
rcrb
rcr
mov
pop
add
mov
mov
cmc
fadd
jmp
push
mov
icebp
ret
scas
mov
xchg
inc
or
mov
je
cmp
roll
rolb
fbstp
mov
fs
mov
cltd
jne
sbbb
mov
pop
cmpsb
daa
add
mov
mov
cmp
rcr
cmp
push
insb
mov
dec
in
cmp
sbb
lock
pusha
mov
mov
push
movsb
jnp
aam
hlt
in
fldcw
push
test
int
out
int3
lret
mov
mov
mov
pusha
je
aam
lret
pop
sbb
mov
mov
into
popf
leave
sub
xor
lods
orl
fs
push
mov
push
or
pusha
stos
outsb
mov
cmp
or
aad
rcrb
jmp
aam
sbb
je
mov
pop
es
sub
in
lock
ljmp
mov
mov
popf
clc
xchg
mov
lods
out
mov
inc
push
popa
sbbb
dec
dec
sub
adc
enter
inc
test
xchg
sbb
pop
and
ret
lret
call
mov
js
mov
push
cmp
mov
pop
jmp
aaa
je
into
ret
jno
nop
cmp
mov
xchg
ret
xor
nop
add
je
out
ret
fs
jo
cmpsl
jne
std
jo
cmp
pusha
fimuls
js
imul
lret
fwait
sbb
mov
test
sarb
je
aam
fadd
mov
jle
sbb
xchg
rcr
lahf
hlt
mov
rcll
fldcw
mov
add
data16
scas
add
mov
aad
lret
push
mov
jle
mov
push
xchg
mov
fs
mov
fcomps
push
scas
sbb
push
rcr
mov
cld
sub
pop
mov
int3
cmpsb
imul
popf
hlt
enter
mov
mov
in
ljmp
mov
mov
push
je
fucomp
fcmovnb
stc
sub
sarl
imul
xchg
mov
and
frstpm(287
pop
int3
dec
sbb
hlt
push
mov
jne
scas
out
insb
je
inc
icebp
je
jecxz
push
fdivl
xchg
inc
push
pop
dec
rol
pop
js
aam
mov
je
pop
add
mov
sub
andb
cmp
out
adc
shll
cmpsb
mov
pusha
sbb
fdivrl
sbb
push
je
mov
sbb
push
popa
push
cltd
jne
push
je
inc
cwtl
lret
sbbl
push
mov
lret
sub
xor
push
push
das
mov
inc
xor
cmc
je
popf
cwtl
jl
leave
dec
cld
xor
jp
push
lret
jne
ror
shlb
push
cli
push
adc
popa
je
ss
je
push
int3
inc
movsb
int
mov
je
int3
jmp
push
pushf
test
lea
pop
testb
sub
inc
and
push
sahf
push
pusha
mov
jg
xor
sahf
cmp
push
xor
les
je
push
jo
or
scas
sub
push
push
shlb
push
push
push
mov
jmp
cmp
xor
mov
mov
stos
divl
pop
lret
insb
fs
je
lea
mov
cmp
enter
push
test
shll
jo
and
out
or
pop
lahf
lock
rorb
mov
mov
fnstcw
and
xchg
mov
mov
mov
adc
mov
repnz
cmpsb
mov
movsl
mov
iret
je
loopne
hlt
cmove
stos
jl
dec
ret
lret
les
push
lock
je
mov
aaa
je
xor
fsubrl
jle
mov
jne
jo
iret
test
cmp
int3
fs
pusha
mov
sbb
cwtl
cmpsb
pop
xchg
cmp
divb
pop
or
and
add
mov
pop
sub
and
shl
push
cltd
cmp
fs
push
jo
fs
xor
pop
cmpb
nop
jmp
cmp
mov
mov
xor
shl
insb
sub
push
jo
and
xor
pushf
lret
cwtl
subl
aam
pushf
rcrl
das
mov
jle
mov
lods
cmp
push
mov
inc
js
lahf
jo
mov
mov
fists
pop
in
mov
pop
xchg
and
or
push
pusha
ss
add
fsts
fcompl
fldl
mov
dec
or
jl
inc
loop
imul
roll
push
pushf
imull
inc
xlat
sbb
pop
sbb
je
cmp
pop
rol
push
mov
sbb
scas
or
pop
mov
cltd
movsb
push
xor
pop
inc
cmp
mov
pop
les
out
ss
pop
push
mov
aas
sbb
mov
in
lcall
movsb
inc
fldcw
sbb
jo
movsl
mov
outsl
cmpsb
push
adc
mov
jne
pop
enter
push
push
mov
xchg
push
push
test
push
dec
sub
in
ss
mov
pop
dec
into
mov
je
scas
aaa
mov
xchg
cwtl
mov
daa
je
js
sti
mov
hlt
mov
dec
sub
je
rcll
and
std
dec
and
js
mov
xor
adc
pop
test
mov
outsl
xor
aam
fadds
push
mov
test
lahf
mov
lods
mov
fnstenv
sbbb
pop
movsb
rcrb
jo
stos
add
or
inc
mov
dec
xchg
sbb
mov
adc
in
adc
fldcw
fisttps
mov
je
fs
xchg
mov
push
pop
jmp
adc
sbb
jecxz
test
mov
cmp
aam
push
jg
fistl
cmp
push
leave
pop
jmp
test
ss
iret
scas
jle
movsl
add
fimuls
in
cmpsb
movsl
or
jne
insb
mov
aad
nop
cmpsl
lret
dec
cwtl
inc
mov
cwtl
sbb
lcall
jo
xchg
dec
outsb
pop
push
add
lea
les
je
and
pop
and
gs
cltd
dec
adc
dec
kmovw
inc
idiv
loop
inc
mov
sbb
cwtl
inc
gs
je
mov
mov
inc
sbb
pop
in
gs
flds
cmp
push
movsb
sub
cmp
xchg
cmp
rorb
leave
insb
push
xor
jl
push
sub
mov
inc
sahf
stos
in
cmpsb
jne
mov
or
cmpsb
movsb
out
and
js
aad
loop
mov
cmp
outsb
je
xchg
jo
cld
xor
cmp
or
sub
and
xchg
outsb
es
mov
xlat
pop
sbb
pop
faddl
mov
push
ret
inc
xor
sub
aad
cmp
sbb
xchg
rolb
rolb
sub
pop
pop
mov
mov
push
mov
mov
cs
pop
enter
sahf
lahf
or
hlt
and
cld
mov
mov
gs
mov
jne
ret
je
call
shlb
adc
inc
or
adc
aam
int3
gs
mov
mov
fwait
rorb
mov
out
nop
dec
js
je
xlat
outsb
or
mov
mov
cmp
inc
sub
in
rcl
sbb
fists
nop
inc
sbb
xchg
fsubs
out
aas
movsb
push
dec
cld
sub
dec
enter
je
pusha
out
out
or
in
cld
or
sub
gs
add
inc
adc
das
pushf
sbb
sub
mov
add
std
inc
jl
and
push
lock
push
add
adc
or
outsl
sbb
sahf
push
pop
ret
inc
rorl
nop
push
lock
cmpsb
mov
mov
je
xchg
inc
mov
je
xor
js
mov
aad
xor
cmp
les
cld
je
jmp
jo
in
outsb
fildl
pop
je
in
rcrl
shrl
or
adc
lret
xor
js
popf
outsb
je
mov
into
je
sarb
shll
negb
loop
dec
sbb
dec
mov
pop
inc
adc
sbb
pop
daa
lret
dec
cli
hlt
ficoms
inc
jo
jne
add
sahf
jne
dec
aam
xchg
loop
push
mov
mov
je
pushf
sub
test
cmp
jmp
push
clc
add
pop
xchg
adc
enter
cmpsb
pop
sub
and
jne
fstps
leave
inc
mov
add
rcl
push
ljmp
adc
dec
out
in
es
clc
adc
mov
pop
mov
insb
call
outsl
in
rcrl
cltd
cmp
ficompl
movsl
fcoms
fsubrs
je
lds
and
or
mov
test
fcomp
xor
jmp
sbb
xor
dec
hlt
pop
dec
adc
pop
push
inc
mov
mov
ficoms
xchg
or
or
xchg
xlat
mov
xchg
sahf
fcomip
fstpl
cmp
adc
or
shlb
and
xor
cmp
lock
rcrb
and
xor
inc
movsl
into
adc
popf
outsb
or
aam
test
enter
fnstenv
ljmp
cmp
les
push
jo
dec
imul
clc
dec
fs
je
int
inc
cs
push
or
movsbl
mov
data16
add
and
xor
ss
sbb
jne
movsb
aam
shlb
popa
xor
or
sub
rcl
call
sahf
inc
movsb
xor
das
je
popf
icebp
je
popa
mov
lods
in
sub
jne
flds
shlb
test
adc
les
loop
mov
xchg
scas
outsb
jecxz
adc
outsb
cmpl
or
in
mov
lods
cmp
xchg
fstpt
push
fists
jo
loope
outsb
push
sbb
outsb
jl
inc
js
jne
test
xor
int
dec
or
or
cs
xchg
add
shr
cmp
xor
popf
jne
fnstenv
ljmp
je
push
push
cwtl
pop
test
in
stc
sub
popl
cld
sahf
and
movsl
insb
pop
rol
psubusw
mov
aas
or
jbe
test
xor
sbb
popfw
outsb
test
push
cwtl
insb
mov
outsb
shlb
add
ds
sbb
and
sbbb
mov
negb
out
inc
inc
int
add
and
push
pop
fldenv
imul
sub
fiadds
jp
xor
push
shr
push
cltd
push
imul
cmp
int
lock
push
inc
gs
mov
pop
xchg
push
mov
in
cmp
mov
adc
pop
dec
enter
gs
lods
xor
xchg
int3
add
dec
sahf
pop
jl
and
je
loope
sahf
jmp
jo
das
je
mov
outsb
lcall
jo
inc
dec
je
xor
mov
jo
movsb
std
fists
fucomi
jo
jo
aad
in
jo
xchg
mov
je
xchg
fisttpl
push
cld
outsl
add
loopne
sti
test
and
fcmovnu
fs
testl
jmp
xor
aam
cmp
pop
cmp
jl
cmp
sbb
pop
idivb
pop
lods
cld
push
pusha
pop
and
or
cmp
and
ds
les
push
ret
mov
sub
push
cmp
dec
sbb
and
add
sbb
cmpsb
dec
insl
mov
sub
fdivl
mov
cld
push
test
xor
cld
loopne
cld
filds
js
cmpsb
xor
leave
xor
js
push
loope
pop
or
push
rcr
push
cmp
dec
addb
cld
pop
sub
jmp
dec
sbb
sti
pop
cwtl
stc
dec
inc
jne
and
mov
in
jne
mov
inc
sub
or
xor
rol
pop
cmp
dec
mov
jne
fs
sub
cmp
lahf
arpl
sti
dec
frstor
pusha
xor
dec
push
clc
les
adc
sub
fisubs
pop
aaa
ja
pop
in
mov
fcomip
and
and
push
jo
push
fbstp
dec
pop
cld
pusha
cli
xor
and
lock
adc
and
push
pop
cmp
dec
jne
lods
outsb
push
es
pop
sub
pop
sub
lahf
push
sub
pushf
mov
push
sub
adc
pop
or
push
adc
adc
adc
or
dec
sub
push
popf
lods
sub
test
sbb
or
cmp
loop
add
test
js
cli
cmpsb
adc
mov
ja
push
lods
inc
cmp
adc
adc
jl
cmc
and
cmp
lods
jae
pop
add
mov
inc
push
jb
xor
inc
adc
mov
shll
cld
xor
int3
mov
shll
push
or
int
daa
add
pop
cmp
add
add
fs
movsb
rcl
mull
js
out
mov
scas
xor
xor
ja
or
add
cld
push
enter
popa
fcomp
cld
int3
fcomi
sti
add
adc
div
hlt
jnp
pop
out
in
xor
loopne
arpl
sub
push
cmp
inc
and
sub
xor
sahf
or
and
push
js
cmp
mov
xor
pushl
dec
push
lock
loopne
cmp
out
push
dec
adc
jne
xor
cmp
cmp
inc
push
mov
cmp
fbld
pusha
cmp
inc
push
je
divb
dec
dec
je
dec
or
sbb
imulb
mul
pop
xor
xor
aas
fidivrs
js
push
pop
pop
cmp
dec
inc
push
pop
stos
add
push
jle
dec
mov
stos
je
push
push
ret
sub
sbb
push
iret
push
ds
push
fdivl
push
sbb
xor
sbb
hlt
sbb
pop
cmp
xorb
mov
mov
sahf
jo
add
and
mov
and
jp
scas
clc
or
cmp
out
loopne
and
aad
fisubl
cmp
lock
fcoml
xchg
fsubl
out
test
mov
or
ds
cmpsl
push
sbb
enter
cmpsb
les
push
pusha
xor
out
les
fbstp
js
or
call
cmp
loopne
enter
divb
cmpsl
xor
or
cwtl
das
and
scas
push
cmp
inc
and
shlb
push
or
push
add
pop
mov
js
pushf
push
call
sbb
add
add
decb
aam
and
les
cmp
adc
in
mulb
movsb
loope
das
dec
shl
das
mulb
pop
outsl
xlat
fidivs
js
sub
push
cmp
dec
add
mov
decb
pop
inc
add
test
je
aaa
lcall
lcall
push
cmpsb
js
pop
dec
aas
popf
jg
xor
push
sbb
dec
push
add
xchg
scas
jo
je
sub
mov
mov
stc
in
pop
jo
inc
and
out
mov
lock
pop
add
movsb
shll
adc
mov
xor
cli
fs
adc
sbb
loope
ss
es
aas
adc
pop
pop
movsl
adc
pop
cmp
cwtl
xor
sbb
int3
pop
inc
push
inc
pop
and
jo
icebp
loopne
cwtl
dec
mov
pusha
mov
clc
aas
dec
mul
pop
xor
jne
loopne
sub
sbb
pop
jne
add
je
pop
not
cmp
hlt
mov
add
pop
or
idivl
dec
fs
xchg
fsubl
mov
shl
jo
or
sbb
sbb
je
aam
pop
divb
cmpsl
dec
decl
in
dec
push
cmp
jnp
clc
outsb
mov
add
call
pusha
or
js
and
pop
or
jne
pusha
inc
je
or
mov
push
popa
je
clc
add
jle
fmull
mov
dec
cmp
sub
sub
mov
pop
push
lods
push
movsb
mov
int3
jnp
idiv
out
imul
es
rcrb
pop
pop
xchg
mov
movsb
jge
cmc
push
sub
xor
faddl
hlt
mov
cmp
icebp
in
out
lock
aas
cmp
loopne
pop
and
loopne
pop
pop
and
cmp
push
fnstsw
jge
mov
jb
xchg
push
cmp
lahf
insl
and
add
rcrb
enter
clc
jne
or
movb
mov
mov
mov
mov
subl
mov
adcl
cmc
dec
cmp
or
xor
loopne
push
rcrb
sbb
test
enter
and
and
cmp
sub
jo
divb
fcomip
xor
dec
lock
or
push
cmp
scas
xor
adc
push
pushl
xchg
cmp
or
or
push
dec
pop
rcrl
loop
cmp
pop
cmpsl
push
xor
add
push
adc
loope
imul
roll
pusha
push
push
cwtl
je
pop
add
push
cmp
mov
jo
shrb
enter
repnz
pop
sub
sbb
jecxz
sub
dec
icebp
js
mov
inc
arpl
dec
icebp
movsb
stos
hlt
cltd
jo
cmp
jmp
in
sbb
lahf
cmp
mov
or
push
or
or
pop
or
in
sbb
fs
xchg
xor
test
ss
addr16
add
sbb
mov
xor
fs
les
hlt
jnp
sbb
sti
out
cmpb
sbb
and
sahf
push
js
je
fs
and
js
or
inc
sarl
dec
je
dec
int
cwtl
pusha
int3
push
xchg
je
pop
sbb
lea
int3
and
mov
inc
cltd
inc
xchg
push
jo
push
fbstp
arpl
adc
imull
sbb
lods
ds
xor
shlb
sbb
cmc
pop
pop
cmp
or
pushl
xchg
pop
lret
pop
sbb
push
push
cmpsb
jl
lods
inc
in
xor
sbb
insb
adc
push
pop
sbb
adc
inc
add
ds
cli
inc
clc
test
mov
or
das
push
lea
or
adc
loopne
xor
mov
dec
add
cmp
in
pop
and
jno
pop
xlat
inc
mov
cmc
inc
nop
and
pop
dec
and
je
sub
cmp
loop
mov
and
adc
mov
fisubl
fucomp
lock
sbb
or
or
cltd
cld
push
add
xchg
cmpsl
mov
rclb
push
adc
scas
mov
insl
icebp
clc
cld
inc
xor
jbe
sub
clc
jne
leave
hlt
inc
or
sbb
and
sbb
cmp
ret
pusha
in
cmp
js
sbb
inc
fnsave
pop
add
mov
cli
pusha
dec
test
push
jmp
js
jge
xor
add
je
ds
je
inc
add
dec
push
add
add
adc
cmp
cmp
sbb
jne
pop
push
jo
jmp
enter
jo
ficomps
bound
xor
adc
sub
pop
pop
add
test
cmc
mov
dec
pop
lock
or
and
push
lock
mov
je
jl
and
push
xor
sub
sub
or
hlt
push
mov
sbb
xor
or
cmp
js
dec
add
popf
repnz
mov
adc
js
fbld
movsb
push
in
shl
in
ljmp
repnz
pusha
out
test
js
out
repz
sbb
fcomps
jae
cmp
std
dec
ss
push
sbb
lods
mov
inc
sub
jo
push
sub
aas
or
or
push
sub
pop
pop
out
lds
cmp
int3
push
push
adc
pop
loope
clc
pop
add
or
ret
pop
add
je
add
sbb
and
call
js
jl
mov
push
sarb
cmpsl
or
inc
bound
shlb
and
mov
test
pop
cmp
fmull
push
xchg
or
and
jne
push
dec
es
sub
pop
pusha
push
adc
push
mov
pop
outsb
je
adc
adc
inc
pop
pusha
dec
aam
das
adc
inc
aaa
add
int3
cmp
mov
lahf
orb
in
cmp
jecxz
inc
add
in
inc
pop
cmp
out
or
mov
or
pop
dec
dec
repnz
cmp
push
rclb
call
mov
push
cmp
nop
sbb
adc
out
xor
xor
loop
pop
and
pushf
pop
push
or
lock
mov
std
push
push
push
test
sbb
fnstsw
jae
dec
sub
dec
js
aam
sub
out
js
daa
rorl
je
and
inc
dec
and
repnz
fistpll
or
ljmp
idiv
pop
mov
cmp
div
pushf
or
jo
test
dec
cwtl
ficoms
lock
es
sub
ljmp
sbb
xchg
movsb
pop
lcall
push
add
mov
pop
push
ud1
scas
or
in
xor
test
inc
inc
es
jb
adc
pop
adc
sbb
pop
pop
xchg
out
cmpsb
adc
sarb
stos
inc
push
jl
cs
lock
stc
hlt
mov
js
sub
imul
insb
add
fidivs
inc
pop
lahf
dec
lods
loop
rcl
or
pusha
push
sub
xor
das
adc
les
es
jl
and
js
cmp
insb
jmp
popa
dec
sub
inc
imul
or
pop
xor
nop
and
mov
push
sbb
pop
adc
mov
adc
lahf
or
push
jo
mov
jno
or
jmp
sub
push
sbb
mov
push
add
push
mov
mov
imull
and
fbstp
out
mov
movsb
lahf
outsl
lret
pop
enter
inc
fcoml
jo
xchg
xchg
out
jo
sub
lret
jo
push
add
cld
cmp
and
xchg
in
jg
sbb
push
daa
adc
mov
cli
hlt
jecxz
xor
or
call
out
nop
push
leave
in
in
pop
push
leave
cmp
sub
test
sub
shlb
mov
mov
aam
mov
push
adc
subb
or
stc
xchg
test
negb
and
je
incb
loopne
les
adc
cmp
rcrb
sar
add
sub
inc
test
sti
inc
enter
push
daa
int
add
sti
push
test
xchg
test
enter
sub
shll
inc
dec
js
out
dec
sbb
adc
push
pop
push
js
lahf
outsb
add
mov
push
ret
sub
mov
mov
mov
sub
and
dec
dec
dec
adc
pop
adc
mov
cs
nop
pop
rorb
in
int
rol
push
fsubrp
dec
fsubl
adc
or
push
mov
in
bound
ds
xchg
lret
push
and
cmpb
push
int
mov
inc
push
aad
daa
mov
sbbb
fdivrs
arpl
jl
mov
cmp
data16
jecxz
addb
mov
loopne
cmp
je
rcrb
loopne
push
cmp
inc
negb
pop
lock
mov
stos
cmp
and
adc
les
call
movsl
cmp
xor
dec
hlt
xor
sahf
insb
negb
and
mov
sbb
insb
popa
je
clc
test
cmp
enter
mov
sub
and
mov
test
and
je
and
fwait
jb
icebp
int3
andps
clc
adcl
iret
dec
jo
push
mov
jo
sbb
sub
call
dec
sub
or
cli
push
fadds
es
pop
or
cwtl
adc
pop
mov
dec
arpl
lock
adc
in
inc
push
pop
adc
or
or
fsubrl
std
xchg
or
movsb
leave
loopne
dec
and
rorb
loopne,pn
push
je
andb
jo
mov
fs
or
inc
es
in
andb
or
sub
xorl
cmp
or
in
cmp
push
in
pop
out
xor
fisubrl
jo
sar
stc
push
test
mov
int3
adc
std
mov
out
int3
cs
in
lahf
fdivrl
mulb
es
xchg
mov
mov
cmc
mov
mov
mov
xor
jle
and
in
push
pop
in
popa
aam
dec
xor
insb
push
int3
fdivs
push
mov
inc
loopne
or
nop
pop
clc
sub
sub
sub
dec
mov
sbb
push
repz
or
icebp
out
xor
or
pushf
mov
sub
sub
add
inc
push
cmp
xchg
push
xchg
jecxz
sti
mov
icebp
inc
mov
inc
cmp
shr
jo
xor
cmp
mov
and
cwtl
clc
hlt
mov
dec
sbb
cmc
dec
sub
pop
cmc
je
mov
sbb
aam
cmc
fdiv
sub
aaa
je
cmp
in
ds
jnp
add
xchg
jo
pop
adc
ljmp
push
cmp
jge
and
and
pop
pop
clc
aam
aam
push
je
jns
jne
repz
dec
mov
adc
push
sbb
cmp
repz
inc
pop
in
push
inc
sbb
jo
icebp
mov
cmp
adc
or
add
fbstp
les
out
pop
aas
in
mov
add
dec
xor
sbb
xlat
lcall
js
out
fldl
add
les
push
add
cmc
subb
les
dec
or
lret
cld
xchg
sti
insb
je,pn
aad
in
cmp
jo
pop
sub
xor
sub
pop
add
lods
adc
in
cwtl
hlt
cmc
sbb
jo,pt
in
in
je
cmp
call
cmc
xlat
or
loope
jo
je
cmp
sbb
shlb
sub
cmp
push
and
out
pushf
pop
sbb
mov
inc
enter
enter
pushl
arpl
pop
push
arpl
and
nop
inc
sbb
rcll
clc
adc
adc
push
icebp
pusha
mov
aad
adc
dec
in
sbb
cmp
push
pop
pop
mov
icebp
pop
add
mov
jno
loopne
pushf
cli
fsubrs
mov
enter
js
xor
mov
mov
inc
pop
fmull
out
test
icebp
test
pusha
inc
les
inc
shl
es
inc
or
jge
sbb
js
push
sbb
jmp
jb
dec
adc
jge
jnp
xchg
and
je
in
and
cmp
arpl
mov
adc
lds
sbb
xchg
cmp
jne
add
add
gs
add
out
subl
push
mov
aam
negl
sbb
jne
fs
test
insb
push
mov
cmp
sarb
stos
scas
inc
and
pusha
in
dec
pop
pop
pushf
pusha
sbb
iret
js
test
adc
ss
and
loopne
adc
cmp
pop
in
dec
or
js
add
adc
push
popf
xchg
daa
scas
push
push
sbb
mov
test
cmp
addr16
cmc
pushf
movsb
fmulp
movsb
sub
inc
lock
and
push
mov
nop
sbb
pop
push
mov
inc
xor
vmread
mov
and
cmp
loopne
js
jo
mov
add
out
test
sub
repnz
dec
movaps
push
jne
repz
data16
xor
and
hlt
add
fdivs
rorb
mov
adc
push
addr16
faddl
push
es
out
scas
and
insl
pop
or
cmp
jo
dec
je,pn
mov
out
lahf
jg
inc
or
xor
mov
lock
mov
jmp
sub
jo
sbb
cmp
sub
xor
scas
jno
pop
sbb
pop
push
in
lcall
sub
pop
and
rorb
dec
mov
sub
push
and
in
cmp
insl
push
add
int
fs
nop
hlt
or
cmp
cmpsl
pushf
lods
out
xor
int
nop
and
call
push
mov
jo
and
sub
js
lods
les
sbb
and
push
adc
jmp
in
in
ss
dec
in
push
hlt
mov
fcomps
mov
into
js
pop
fucomip
cld
insb
cmc
aam
fucomp
out
xchg
bsf
cmp
je
fdivl
sub
hlt
fnsave
jg
clc
test
inc
je
test
push
and
shrb
je
push
mov
pusha
mov
fwait
test
xor
mov
mov
add
adc
mov
jo
lock
mov
cwtl
bnd
mov
or
mov
sbb
jg
icebp
sub
js
lcall
cmp
adc
daa
jmp
xor
clc
movsb
pop
testl
mov
loopne
cmp
inc
fmul
inc
hlt
andb
inc
lods
xchg
js
push
cmp
xchg
jbe
cli
loopne
dec
je
sbb
aas
call
xchg
sahf
outsb
push
pop
outsb
pushf
hlt
jle
negl
add
clc
pop
push
mov
loop
aam
or
lahf
push
repnz
loope
les
repnz
mov
sahf
dec
push
nop
ljmp
popf
mov
test
cvtps2pi
ret
mov
hlt
cmc
sub
stc
push
pusha
push
icebp
bound
fmuls
or
xchg
rcrl
jo
xor
jo
pop
nop
lods
push
negl
cmpb
pop
sbb
loopne
mov
add
cld
add
mov
pusha
add
sbb
push
adc
hlt
and
mov
lea
lds
fnstsw
fmuls
lds
popf
mov
shrl
jle
pop
push
sarb
enter
jl
es
xor
nop
arpl
cld
pop
icebp
jge
jo
pusha
inc
sbb
or
pusha
sti
xorb
push
out
xchg
insl
sbb
shrb
in
xchg
ficoms
pusha
sbb
mov
cld
jne
test
dec
pusha
sub
in
dec
fs
je
dec
fs
insb
nop/reserved
add
cmp
pop
mov
clc
idiv
jl
in
lds
mov
fbstp
loopne
pop
xor
pop
and
clc
je
aas
icebp
rorb
mov
out
xchg
mov
lret
jo
out
cmp
mov
out
mov
sbb
jo
cmp
mov
negb
in
mov
inc
sbb
aam
sub
push
call
pop
xor
aam
fs
mov
pop
pop
sti
jg
adc
clc
jne
xchg
and
mov
mov
jbe
adc
js
out
lods
dec
daa
iret
out
jl
mov
add
stos
mov
mov
push
fildll
sti
nop
aas
or
push
es
subl
daa
push
sbb
stos
lock
cmp
loopne
xchg
jle
lock
cmp
add
and
lods
push
cwtl
int3
lret
sti
and
mov
and
push
push
sub
and
js
hlt
ds
cmp
adc
push
pop
or
ret
cmp
cmpb
movl
fs
in
xchg
jo
xlat
outsl
outsl
int
push
and
adc
shlb
arpl
jae
inc
in
lea
jo
into
lret
cmp
in
pop
inc
and
out
and
cmpsl
sub
push
test
push
cli
xor
nop
or
pop
out
call
mov
jo
dec
cs
lret
xor
pop
cmp
lea
pop
push
adc
rolb
jne
clc
nop
inc
add
cwtl
pop
sbb
mov
adc
icebp
xchg
adc
push
cmc
out
dec
das
pop
adc
push
sub
call
push
mov
adc
scas
arpl
inc
pop
jo
push
mov
inc
add
mov
mov
jno
test
mov
int3
mov
or
pop
add
inc
add
inc
and
test
je
fs
add
pop
jae
or
cmp
adc
inc
or
rorb
push
xor
lock
hlt
push
inc
or
or
pop
adc
lods
xlat
sti
sbb
inc
mov
in
je
xchg
lock
js
xor
and
dec
xlat
int
mov
loop
jecxz
je
push
loopne
mov
std
push
jno
and
dec
dec
repz
ss
lds
pop
pusha
in
mov
push
jo
jecxz
out
xor
push
loope
cmc
nop
push
adc
pop
and
nop
dec
loope
mov
inc
push
jo
lock
div
out
adc
or
stos
jns
xchg
push
xorb
out
mov
mov
fs
mov
in
sbb
int3
roll
cld
clc
js
push
or
dec
lock
and
in
xchg
push
call
lods
jl
xchg
rcrl
mov
jp
lods
test
std
sub
enter
lods
pusha
or
out
pop
out
je
push
dec
adc
je
cltd
jno
lcall
mov
pop
pop
loope
xchg
jne
pop
cld
xchg
mov
push
test
je
push
notb
repnz
pop
pop
or
call
out
and
mov
loop
notb
add
jo
mov
push
or
sub
loope
loopne
jle
iret
in
mov
dec
or
mov
sub
sti
and
jo
in
fs
jl
out
lock
stos
jnp
insl
insb
push
call
jge
cld
pop
clc
test
add
jo
out
in
shl
sub
es
mov
push
or
mov
mov
push
jle
call
je
sub
sti
loopne
hlt
fmull
popf
xchg
out
js
or
add
xchg
jno
or
cwtl
int3
pop
xchg
mov
xchg
cmp
movsl
loop
out
jge
iret
shll
sti
mov
fcompl
daa
les
stos
sar
adc
rolb
fisubrs
cwtl
cmpl
lock
aam
cmp
je
cmc
pop
int
inc
inc
jne
in
inc
dec
pop
mov
les
shlb
adc
pop
lock
incl
cld
jecxz
mov
outsl
roll
jo
in
add
repz
sbb
xor
cmp
push
jne
jmp
push
push
jle
rorb
jo
cmp
dec
inc
pop
out
lock
cmp
and
aaa
repz
dec
sub
nop
test
scas
aam
or
jbe
jge
sbb
pop
cli
xchg
out
hlt
or
sub
and
pop
and
fnstcw
je
cmc
mov
cmp
insl
pop
into
adcb
shl
mov
out
jl
pop
dec
dec
push
movsb
jnp
les
lock
pop
adc
cmpsb
adc
dec
aam
mov
mov
ja
sub
lods
ss
cmpsb
adcb
nop
imul
loop
repz
test
mov
out
adc
lret
mov
inc
jne
fnsave
and
je
push
rorl
mov
cmp
mov
push
sbb
jne
jns
jge
push
mov
xor
ljmp
ss
nop
fisttps
ficoms
cli
in
cmp
pop
xchg
insb
pop
push
jo
cmc
ret
inc
int
push
movsb
fcoms
js
sahf
inc
rclb
fsubrs
sbb
iret
mov
mov
sub
add
pusha
push
stc
ret
sub
aam
pop
xchg
jge
sti
pop
in
test
or
adc
mov
daa
xor
ret
hlt
push
pusha
repnz
out
dec
or
mov
call
arpl
adcb
cld
ds
stos
mov
std
mov
xor
xor
pop
out
fcomps
dec
cwtl
and
daa
out
inc
cmp
and
push
fisttpll
mov
mov
aad
push
mov
outsb
add
outsb
xchg
and
cmpsl
sub
xor
lret
cmp
cmp
lock
in
lret
sub
cmc
mov
jb
aad
js
mov
xor
mov
into
cltd
pusha
push
in
subb
stc
jmp
lea
xchg
sarl
in
xor
pusha
dec
mov
dec
out
push
popa
loop
jl
jge
cmp
dec
push
push
xor
mov
push
sbb
orb
movsb
ss
int
popa
mov
jo
and
je
arpl
add
pop
daa
lds
dec
rclb
push
mov
test
pop
and
sahf
scas
and
lea
cmp
xor
enter
mov
sub
pushf
pop
cmp
mov
push
mov
pop
call
mov
inc
push
iret
cmpb
out
repz
dec
in
out
adc
pusha
mov
pop
xor
aas
add
mov
cmp
in
mov
shrb
add
nop
push
rcr
jl
mov
xor
and
lea
shlb
test
jbe
or
adc
dec
mov
loope
pushf
pusha
loop
push
rcrb
lock
int
loopne
cld
subb
mov
pop
or
mov
iret
fs
mov
repz
jo
cmp
loopne
adc
lock
mov
cmpl
iret
repnz
out
mov
push
mov
dec
loopne
or
rorb
jecxz
xor
pusha
push
xor
jl
call
call
and
aam
enter
fcoml
sub
cwtl
push
mov
mov
pusha
or
repz
or
inc
mov
and
add
pop
adc
cli
cmpsl
out
dec
sbb
mov
loopne
loop
jo
push
add
jo
push
sub
in
lret
dec
fnstenv
push
mov
test
push
add
pop
mull
or
sub
shll
inc
fucompp
lea
adc
inc
out
jo
or
jo
outsb
and
cmp
sub
or
repz
push
jae
pop
push
mov
fmuls
mov
xor
mov
sti
fsubrl
adc
pop
dec
gs
jb
enter
out
sub
out
xlat
in
push
scas
aaa
add
xchg
and
or
pop
push
rolb
lock
pop
push
btr
gs
xor
testb
mov
aaa
loope
enter
jo
ret
pusha
push
ret
pop
fisubrs
xor
test
cmc
mov
inc
inc
sbb
jne
mov
inc
xor
mov
sub
mov
push
cmp
add
or
bound
pop
mov
mov
or
sub
push
lock
push
out
lock
mov
pop
icebp
mov
lea
push
out
cld
inc
cmp
enter
loopne
pop
cmp
hlt
jnp
shr
pop
add
xchg
jo
test
je
cmp
or
pop
cld
mov
jo
mov
lcall
ret
xor
shl
push
cmp
pop
sub
jo
dec
and
fdivl
je
mov
pop
in
mov
icebp
inc
jno
push
ret
fisubs
or
xchg
push
cmp
out
add
mov
or
xlat
and
in
arpl
iret
es
pusha
popf
mov
jl
push
ffreep
and
sbbb
pop
rcrl
cmp
push
dec
push
sub
xchg
out
and
sahf
unpcklps
and
in
dec
out
and
dec
sarb
ret
or
push
xor
in
mov
pop
add
icebp
mov
insb
arpl
lret
into
test
fldcw
or
in
lea
xor
or
adc
or
lods
xchg
test
adc
inc
pop
or
lods
jo
xlat
arpl
push
rclb
cmp
dec
mov
mov
jnp
push
sarb
movsb
xchg
pop
sub
adc
pusha
adc
sub
popa
sti
js
push
incl
sbb
fidivrs
mov
adc
je
pusha
sbb
cmpsb
dec
bound
insb
or
imul
push
add
loopne
cmpsb
mov
push
add
je
sti
adc
shll
lds
sub
push
lret
xor
push
mov
pop
ret
rolb
stc
mov
rcr
das
je
push
test
and
mov
fs
mov
and
cmp
mov
fistpl
jo
lock
and
dec
add
fsubrl
push
rorb
push
loopne
add
sub
popf
cmp
jne
dec
lods
cld
cmp
call
out
sbb
cmc
lods
fmull
cmp
adcl
or
xchg
hlt
inc
sbb
and
js
imulb
and
or
gs
xchg
adc
jne
lds
sti
push
xor
inc
sbb
and
movsb
xchg
lahf
out
or
sub
sbb
rcrb
inc
fs
pop
inc
push
scas
repnz
clc
sub
push
leave
out
xchg
and
sbb
addr16
or
nop
sbb
inc
jne
rclb
sbb
rcrb
sub
fnsave
fsubs
lock
cmc
push
cltd
push
adc
loopne
xchg
divb
pop
out
or
pop
es
mov
push
mov
inc
push
scas
mov
imul
icebp
pop
or
fisttpl
mov
xlat
loopne
xlat
mov
jo
inc
lcall
fmull
inc
cmp
nop
xlat
pusha
add
add
mov
es
and
mov
in
sarb
dec
mov
or
cmpb
add
jmp
mov
out
or
dec
xor
mov
lods
mov
adc
fs
adc
in
xchg
aam
jge
pop
outsb
inc
imul
fcomp
je
hlt
mov
outsb
cmpb
add
cmc
in
xchg
jo
int
fistpl
adc
hlt
sub
mov
pop
fisubrl
sub
dec
scas
movsb
rorl
out
cwtl
adc
ljmp
in
sti
xchg
fnstenv
or
fs
mov
and
or
dec
pop
pop
adc
sti
jo
sarb
insb
pop
push
jo
mov
push
mov
adc
pop
jo
adc
or
xchg
push
mov
test
sub
mov
inc
mov
lea
push
std
or
xor
test
push
add
sub
jo
push
les
jae
inc
ficompl
jno
mov
xor
test
push
rcrl
ja
sub
lods
add
out
and
xchg
add
repnz
pop
rcl
iret
les
mov
out
je
cmp
lcall
loopne
dec
inc
adc
add
lcall
fmull
push
jge
iret
xchg
mov
fs
push
or
in
cmp
pusha
rclb
mov
adc
fs
mov
pop
inc
xor
test
std
mov
out
les
fcomps
js
push
xor
shlb
and
pusha
push
gs
jecxz
aam
push
jo
cmpsb
outsb
popf
enter
stos
mov
fs
push
mov
push
imul
addr16
adc
or
or
jp
out
ret
push
mov
mov
dec
int3
enter
scas
nop
inc
adc
enter
jo
imul
repnz
mov
and
jae
scas
andl
dec
rolb
xor
sub
outsb
sbb
push
jecxz
int3
mov
pop
xchg
or
arpl
stos
movsb
loopne
mov
mov
push
adc
or
js
or
mov
in
cmp
repz
test
sub
or
dec
scas
call
dec
out
jbe
mov
pop
pop
push
in
outsb
fistps
or
dec
dec
pop
mov
cmpps
push
ss
pop
sub
jo
push
fisubl
pop
jo
pop
out
mov
test
divb
cmp
adc
insb
lock
in
in
sarl
cmp
mov
sub
fstpt
mov
mov
insb
out
mov
pop
arpl
es
fdivrl
in
push
xchg
or
inc
rclb
nop
dec
loop
jno
mov
mov
jne
lret
jnp
aad
xor
cmp
push
push
adc
push
je
aam
push
lret
lock
adc
ret
js
mov
push
jne
mov
mov
cmp
nop
andb
loope
insb
je
les
sbb
div
pop
lds
cmp
dec
mov
mov
jo
out
xor
mov
cmp
cmpsl
in
xor
movsb
cmp
or
xchg
sub
mov
repnz
sbb
loopne
lcall
sub
jo
add
xlat
dec
loop
or
out
jecxz
or
inc
push
adc
mov
mov
or
push
dec
test
loopne
or
or
mov
jo
lahf
insl
cmp
mov
jo
lfs
mov
push
ljmp
pop
icebp
je
out
outsb
js
fs
push
or
sbb
pushf
and
movsb
imul
je,pt
sub
aas
and
add
cmp
xor
or
pop
mov
push
in
in
lea
aam
sub
cmp
push
rorb
cmp
push
negl
adc
mov
jns
cld
call
je
ss
mov
loop
std
fisttpll
fs
nop
adc
shl
mov
jo
mov
mov
pop
xor
xchg
out
push
push
mov
ret
inc
inc
clc
pop
pushf
dec
shll
xor
sub
pop
adc
or
sbb
popa
dec
ret
jg
push
push
sti
dec
jns
enter
xchg
jne
cmp
in
call
dec
add
int
sbb
adc
or
mov
les
jg
or
inc
lock
les
pop
clc
push
ficoms
rol
jo
xor
repz
sub
lea
push
mov
loopne
push
mov
jl
adc
xor
mov
in
add
mov
in
or
call
xchg
jne
xor
test
dec
mov
fdivs
insl
call
sarb
bound
jo
mov
iret
fidivs
push
xor
sbb
push
jmp
ror
mov
es
inc
push
dec
sub
push
cltd
rolb
mov
mov
pusha
xlat
lret
add
xor
int
inc
out
or
or
pop
xchg
rcll
xor
or
js
push
add
jg
hlt
mov
jnp
mov
jle
les
push
iret
in
jl
les
ret
add
mov
xchg
push
loop
jl
pop
mov
adc
lea
dec
jo
repz
jo
mov
xlat
int
je
aad
mov
add
pop
push
in
mov
mov
sub
je
dec
mov
xchg
cmp
je
hlt
push
js
mov
and
add
jl
das
jo
and
je
jge
sbb
push
iret
out
jo
sahf
mov
sub
test
sbb
jmp
mov
js
shll
aaa
outsb
cmp
or
cmp
or
pop
sti
xorb
or
loopne
mov
xchg
js
inc
dec
shll
enter
hlt
xor
lcall
les
cmp
mov
dec
cmp
ja
loop
scas
pop
mov
js
lret
cmp
adc
pop
in
adc
fcoms
jl
sub
fs
add
mov
clc
cmp
sbb
pop
inc
outsb
xchg
mov
and
sarl
or
mov
mov
xor
jne
mov
outsb
js
jge
fcomps
mov
je
and
stc
inc
dec
jl
adc
cmp
fs
notl
in
mov
pushf
ret
jg
cmp
loop
call
rolb
jo
adc
lock
xor
jg
cmp
xchg
enter
ss
rorl
mov
pop
xchg
push
sbb
add
mov
xor
push
xchg
test
cs
je
dec
cwtl
cmp
aas
push
or
sub
mov
sub
push
mov
jmp
cmp
rorb
sbb
add
lahf
xchg
adc
ds
je
cld
mov
pop
dec
les
mov
in
mov
pop
cmp
jecxz
jl
jl
or
xchg
shll
or
js
sub
addb
pop
fsubl
fcoms
scas
jle
dec
push
dec
pusha
bound
and
scas
pop
dec
ljmp
mov
arpl
orl
push
xor
repnz
push
subl
int
enter
les
fidivrs
enter
pop
xor
cltd
nop
nop
clc
in
push
and
jl
mov
jo
outsl
jne
aad
inc
bound
pushf
inc
mov
loopne
push
fistpll
test
add
pop
sub
sub
rcr
testb
je
mov
insb
mov
jmp
jge,pn
add
mov
sbb
cmp
inc
ret
js
outsb
jbe
loop
jo
and
je
xor
dec
adc
mov
pop
lahf
outsb
call
sbb
sbb
push
stos
int3
loop
pusha
out
inc
sub
xchg
sbb
add
adc
mov
push
push
repz
jge
addr16
lods
jl
enter
nop
push
inc
jo
add
lods
pop
or
add
mov
pushf
mov
out
int3
mov
nop
subb
pop
out
xchg
hlt
add
dec
and
mov
jbe
mov
cs
fsts
jo
xor
rolb
scas
xchg
mov
mov
mov
sbb
movsl
add
pop
mov
mov
pop
push
es
mov
xchg
fwait
out
fcomps
rclb
jl
out
cmp
enter
aam
inc
in
fdivl
xor
jbe
mov
jne
mov
sbbb
or
xchg
mov
and
lock
inc
adc
cmc
js
sbb
adc
shrb
or
hlt
and
mov
inc
js
pusha
push
je
andb
repnz
inc
and
inc
and
xlat
je
inc
and
inc
sub
push
inc
loopne
je
aas
sbb
pop
jne
pop
pop
push
inc
pop
movsb
addr16
and
mov
push
out
push
mov
jg
data16
jl
jne
add
mov
add
clc
cmp
adc
mov
jle
jo
or
push
in
dec
jne
ljmp
out
inc
sub
scas
mov
inc
jle
movsb
or
jo
jl
and
loope
jbe
lret
mull
shrb
mov
and
rcrb
pop
aam
adc
bound
xor
mov
test
je
pop
imul
dec
hlt
outsl
mov
and
cli
lret
and
jecxz
mov
daa
sbb
push
mov
int3
adc
add
nop
out
sub
insb
mov
sbb
cmpsb
mov
push
sarl
push
data16
je
mov
mov
rorl
pop
and
push
xchg
hlt
sti
sahf
mov
imul
out
mov
decb
out
js
lret
lods
cld
clc
stos
cld
sub
mov
push
or
dec
mov
jp
inc
push
inc
pop
into
movsb
lods
aam
sti
and
cld
sub
dec
cmp
insl
dec
clc
clc
js
cmc
js
idivb
cld
ja
fbld
mov
call
lods
repz
lea
int
or
ror
push
fmull
dec
neg
jl
fisubl
adc
js
aad
fwait
push
mov
adc
cwtl
sbb
hlt
arpl
or
test
add
rcr
mov
loopne
push
push
divl
es
mov
cmp
jo
js
push
push
add
add
or
out
push
mov
mov
jmp
test
cmp
in
faddl
sbb
fisubs
sbb
push
clc
call
cwtl
jne
fdiv
fcom
mov
jle
popa
add
in
cmp
or
jle
es
shr
mov
sbb
movsb
insb
cmp
inc
addr16
mov
sbb
jne
je
loope
and
dec
cmp
sub
fcoms
mov
je
push
mov
sub
push
jle
xor
or
pushf
inc
mov
lahf
stos
nop
pop
sbb
hlt
dec
pop
sub
jne
xchg
pop
lods
cmp
sarb
mov
jo
xor
pusha
pop
push
mov
push
xor
xor
jge
jl
pop
adc
xor
jno
out
lods
pop
sahf
fwait
add
pop
movsbl
js
mov
adc
lret
mov
ds
fiaddl
push
jne
inc
popf
dec
je
push
mov
lea
test
push
pop
ret
js
mov
inc
sarl
scas
mov
dec
xchg
inc
clc
test
or
jge
jne
cmp
push
scas
mov
cmp
inc
call
mov
sbb
repz
je
jb
ds
jne
bound
add
mov
lds
fs
clc
nop
dec
sub
mov
loope
push
sbb
cmp
mov
xchg
jo
mov
mov
movsl
fnsave
or
jge
or
outsb
sub
out
sbb
sbb
xchg
sub
jg
xlat
xchg
test
test
inc
int3
add
pop
push
loope
sub
dec
mov
inc
jmp
ret
js
mov
add
out
and
jl
push
adc
xchg
mov
pop
out
and
loop
xor
lea
cmp
cmp
pushf
or
fdivl
bound
in
mov
lods
pop
notb
scas
jo
data16
and
mov
pop
mov
int3
mov
fs
xor
popf
lods
cltd
xchg
icebp
les
psllq
loopne
jl
out
in
and
daa
jecxz
and
dec
and
add
test
cmp
frstor
push
js
je
cmp
jno
push
mov
sbb
cs
push
mov
rclb
dec
jne
pop
dec
daa
je
push
mov
testl
cli
pop
dec
mov
loop
or
imul
mov
adc
pusha
push
rolb
loopne
jae
pop
sbb
out
in
sbb
or
inc
pop
jo
xchg
fsubs
mov
add
push
xor
sahf
notl
mov
mov
mov
call
adc
aas
cmpl
call
add
or
in
js
pop
jo
push
int3
rcr
mov
add
nop
inc
nop
les
out
pusha
push
and
jge
mov
scas
or
mov
mov
jl
or
loope
jl
mov
or
push
and
sbbb
scas
pop
mov
je
and
jge
dec
push
push
or
or
arpl
push
movsl
and
xchg
loope
mov
imul
test
lret
test
add
add
hlt
push
pop
icebp
in
mov
pusha
jne
stos
test
enter
push
mov
paddusw
dec
mov
dec
sub
std
jmp
in
cmp
mov
add
pop
pop
cmp
jae
inc
adc
or
mov
push
lods
cmpl
pop
fs
fsubl
js
je
aaa
lea
loop
in
dec
in
jne
jge
shlb
rclb
jnp
sbb
repnz
lds
ficoms
mov
or
mov
fs
cmp
shlb
dec
shlb
stos
jo
mov
or
andb
jne
adc
movsb
stos
jo
or
std
pusha
fdivl
je
jne
pop
les
add
outsb
inc
sub
pusha
in
add
loope
out
cmpsb
sub
out
and
enter
add
add
cwtl
in
pusha
sbb
sbb
dec
outsb
mov
adc
add
test
shl
xchg
test
pop
mov
pop
push
ss
or
test
in
mov
sbb
nop
cmp
mov
and
pop
xor
pop
dec
jnp
add
sub
sbb
in
xchg
or
jo
loop
sti
loopne
mov
push
jmp
and
nop
cmp
nop
and
cld
nop
ss
mov
lds
cmpsl
enter
jge
or
shlb
fstps
hlt
iret
cmpsl
popf
mov
int
int
aad
dec
js
dec
sbb
mov
mov
sahf
insl
jl
mov
push
jle
lret
push
movsb
push
mov
jecxz
push
dec
dec
loope
mov
dec
push
rorb
dec
push
scas
jle
pusha
or
fs
pop
jo
clc
aas
dec
sub
xchg
sti
push
xor
push
sub
mov
fs
push
jle
pusha
jno
lds
push
and
inc
pop
push
shlb
pop
mov
adc
mov
sbb
pop
and
jo
hlt
xchg
aam
negb
dec
cmp
mov
push
cmp
cmp
int3
aad
sub
arpl
push
jo
add
orb
jns
cmp
xor
adc
xchg
xor
out
cmp
leave
xchg
adc
and
sarb
push
push
adc
xor
and
push
lock
jnp
jge
xlat
jle
xchg
sub
inc
jo
loopne
movb
or
or
pushf
cmc
or
je
jge
jl
inc
and
repz
mov
xchg
pop
out
enter
ret
mov
pop
pop
jmp
jb
aam
cmp
mov
xor
aad
int
iret
add
dec
push
in
je
sub
lea
nop
mov
rolb
push
dec
shll
or
test
pusha
inc
shll
jl
pop
je
ds
xor
cmp
jg
je
dec
je
cmp
js
pusha
jge
sarl
cmp
sahf
jne
adc
cmp
stos
xor
mov
push
xchg
mov
cmpb
movsb
add
rcrb
mov
push
in
sahf
push
repz
dec
push
lock
jne
or
push
aas
sub
orb
int
push
das
into
adc
cmp
fnstenv
call
js
loope
mov
fisttpl
je
xlat
fdiv
cmp
push
es
mov
add
jge
leave
mov
ss
lea
aaa
nop
xlat
add
fcoml
adc
dec
push
lods
jne
or
jno
add
cmpsl
jno
icebp
mov
js
push
je
xor
fnsave
push
rorl
jne
out
mov
cltd
dec
add
or
mov
mov
and
xchg
add
fwait
inc
xchg
inc
add
adc
mov
xor
and
out
mov
push
push
std
mov
pop
lds
mov
and
imul
aam
data16
adc
or
insl
adc
sbb
clc
in
les
mov
sub
cmp
add
je
pop
aad
or
dec
push
mov
fdivl
xchg
aaa
insb
xchg
jbe
push
je
or
xchg
push
or
or
fiaddl
jne
push
repnz
inc
pop
sbb
mov
and
mov
dec
sub
addr16
sub
icebp
loope
and
jo
movsb
or
push
or
std
divb
inc
push
pop
rorb
js
and
jge
jb
pop
aad
dec
cmp
add
loope
int3
push
insb
pop
pop
js
fs
add
outsb
add
loope
ljmp
pusha
into
hlt
in
icebp
outsl
sarl
add
xchg
or
pushf
loopne
cmp
jne
push
clc
add
add
repz
movsb
hlt
mov
push
xor
rorl
push
fdivrl
dec
ds
adc
into
fsub
fmulp
push
pusha
inc
cmpsl
pushf
shl
push
sbb
pusha
cmp
out
mov
cmp
push
pusha
out
pushf
lret
hlt
int3
mov
fmull
jg
adc
and
mov
cmp
mov
lret
fdivrl
fadds
pop
stc
cmp
jo
insb
repnz
add
xchg
ss
cmp
std
lret
adc
dec
and
pop
fcomps
ds
int
cmp
fildl
xchg
mov
fidivrs
je
sub
je
loopne
je
fs
jle
je
adc
js
push
push
xchg
cmp
bound
jmp
push
mov
or
mov
sub
fdivrl
int3
out
push
shrl
testb
jmp
decl
adc
or
lret
dec
mov
je
clc
stc
add
sub
jo
cmp
les
inc
mov
rorl
adc
push
jo
je
js
cmp
mov
ds
adc
mov
out
xchg
mov
fstps
cmp
pushf
pop
xor
pop
or
or
sbbb
add
inc
js
cwtl
mov
std
pushf
sarb
mulb
insb
mov
cs
push
pusha
mov
xchg
or
dec
inc
fisttpll
dec
add
fs
cmc
add
test
js
fdivs
add
mov
add
in
mov
sbb
loop
bnd
and
xorl
mov
add
call
aam
cwtl
mov
dec
je
in
sbb
dec
fsub
icebp
popf
repnz
mov
xorb
add
data16
pusha
push
fadd
je
cmp
lock
adc
jne
mov
mov
or
cmpsl
mov
out
push
xor
loopne
inc
fwait
stos
xor
or
mov
out
inc
enter
popf
pushf
je
pop
xchg
cwtl
mov
add
je
or
leave
mov
push
insb
ret
add
stos
push
sub
push
add
cmp
push
mov
sub
repnz
mov
inc
rcrb
mov
pushf
and
push
mov
js
je
dec
inc
jo
fcomps
xchg
add
add
outsl
push
xchg
je
mov
inc
adc
and
adc
pop
sbb
je
lahf
js
sub
inc
fsubs
je
pusha
out
inc
in
les
inc
rcl
pushf
xchg
addb
mov
popf
je
xchg
divb
xor
pop
mov
std
cmp
rolb
jle
dec
or
jecxz
and
cltd
int
je
xor
jmp
cmpsb
fs
sub
dec
js
int
adc
jnp
ret
xchg
outsl
cmpsb
mov
sahf
ss
das
je
add
outsb
js
enter
xchg
movsl
adc
testl
cwtl
negl
pop
outsb
dec
inc
loop
xchg
jo
dec
add
sbb
fs
and
or
or
push
test
push
xorb
dec
adc
mov
jo
fnsave
enter
cmp
mov
jl
push
mov
pushf
dec
stc
adc
pop
jo
xchg
jmp
mov
or
std
rol
movsb
pop
es
or
js
je
push
and
pushf
mov
sahf
mov
outsb
fbstp
outsb
mov
push
je
push
outsb
out
lcall
add
je
daa
xor
sbb
add
sbb
inc
jne
jl
sarb
data16
rcl
jl
dec
sbb
fmul
loopne
fneni(8087
test
cs
ret
je
mov
insb
popf
out
shrb
xlat
movntq
out
xor
repnz
push
fadds
or
sub
lcall
and
aam
mov
pop
nop
aad
and
dec
xor
les
dec
pushf
push
mov
push
jo
loopne
mov
mov
aaa
je
and
cmp
sub
or
dec
out
and
pop
dec
add
gs
hlt
aam
je
mov
testb
fdivs
je
adc
shlb
mov
sar
or
in
fcoms
into
test
jo
and
sbb
push
pop
popf
add
xchg
outsb
pop
sub
pop
or
aam
je
mov
je
aaa
outsb
xor
jo
shlb
add
adcb
enter
test
push
mov
pop
inc
fcompl
ffreep
sahf
mov
adc
push
fstl
or
je
jle
add
sbb
push
aam
dec
or
sti
les
aam
or
psrld
mov
sahf
push
add
or
mov
es
add
mov
fldenv
cmp
rcr
xlat
lds
push
out
inc
mov
icebp
mov
xor
adc
ror
call
or
pop
mov
adc
mov
test
fldenv
loope
inc
outsb
mov
je
sub
jo
cltd
jne
push
and
jns
in
outsb
push
in
ret
aam
out
int3
fsubl
jmp
mov
stc
outsb
ljmp
or
je
rcrb
sbb
outsb
jl
pop
sti
cwtl
sbb
xchg
outsb
inc
fs
and
pop
in
aam
mov
mov
shlb
mov
or
mov
or
mov
inc
or
add
mov
shlb
sbbl
inc
mov
pop
jo
sahf
outsb
das
adc
aas
je
and
xchg
movsb
mov
or
pushf
fwait
jle
fisubs
pop
js
shlb
mov
xor
les
and
pop
jne
hlt
loop
cwtl
cmp
sub
add
popf
outsb
add
jne
cmp
sbb
outsb
mov
sub
xchg
faddl
xor
mov
in
mov
pop
mov
in
int
xchg
ljmp
je
lock
inc
scas
or
mov
clc
out
fnsave
adc
outsb
and
stc
je
xor
in
shlb
add
je
and
int
rcrb
mov
push
js
push
test
js
in
pop
adc
add
leave
pop
jo
pop
fists
jo
fs
je
loop
jo
cli
pushf
stc
or
mov
mov
mov
sub
mov
cmp
into
outsb
adc
clc
mov
sar
mov
fcomps
out
repnz
dec
rcrb
in
outsb
loop
out
fcomp
mov
mov
das
lods
fidivl
aad
mov
and
rolb
and
adc
inc
je
or
ds
mov
hlt
in
pop
adc
outsb
in
cmp
and
xchg
js
je
push
shlb
xor
outsb
mov
mov
dec
loopne
and
sbb
inc
aam
in
test
stc
je
sub
mov
out
sub
sahf
std
test
inc
jo
out
outsb
sbb
mov
loope
push
out
loope
push
jmp
xor
mov
or
out
outsb
inc
js
lock
or
div
inc
in
popf
jne
les
outsl
movsl
rolb
nop
xor
aam
pusha
int
enter
fsts
fs
je
fnstcw
les
sahf
and
je
ss
jo
fcom
adc
inc
out
outsb
enter
pop
cli
je
push
mov
aam
inc
and
mov
je
add
mov
push
js
andl
push
mov
jl
push
movsb
and
cmp
sahf
xchg
lods
cld
pusha
mov
es
rcrb
test
mov
call
pop
outsb
roll
mov
data16
outsb
xor
in
pop
outsl
add
in
ret
sbb
inc
je
xchg
add
adc
aam
xor
pop
adc
mov
xor
xor
outsb
xlat
fadds
div
pop
or
hlt
mov
or
xchg
std
movsb
push
adc
cmp
je
xchg
divb
sbb
je
inc
add
lret
test
movsl
adc
and
mov
in
outsb
inc
enter
mov
lods
in
js
shrl
cmp
andb
out
les
pusha
shlb
mov
xor
mov
lahf
nop
fdiv
rorb
outsb
out
and
je
mov
mov
aad
or
fimull
rcrb
xor
sarb
movsb
movsb
fcom
shl
cmp
test
insb
inc
lock
bswap
les
push
leave
ds
fcompl
call
sub
fwait
dec
call
loopne
je
or
xchg
adc
out
in
cld
cld
xor
in
pushf
or
inc
pop
pop
cmpsb
cmp
or
mov
inc
or
js
jl
cmp
push
aaa
je
or
mov
cltd
aas
xchg
lock
outsb
mov
shll
add
sub
push
mov
xor
cmp
mov
imull
in
and
das
inc
mov
inc
sub
inc
fs
jo
xor
jne
lods
fs
jne
mov
and
mov
outsb
push
cmp
xor
ljmp
xor
push
xor
aam
mov
xchg
out
push
outsb
cmp
mov
mov
or
and
cmp
mov
lret
xchg
jb
or
adc
cld
dec
cld
cmc
jl
int
enter
popa
jo
sbb
outsb
add
cmpl
mov
test
outsb
jmp
add
sbb
add
movsb
cmpsb
addb
or
adc
outsb
inc
push
daa
js
cmp
mov
leave
out
das
sbb
jne
lock
loopne
bound
call
jo
push
hlt
imul
outsb
fs
jae
pop
cmp
jmp
cmpsb
add
test
outsb
dec
call
repnz
xor
cwtl
mov
rol
fnstsw
push
push
aam
je
add
outsb
sarb
mov
inc
and
mov
movsb
fs
inc
lret
out
fchs
fsubrl
clc
push
pop
call
jo
pop
mov
pop
push
pushf
cmpsb
cmp
adc
sahf
outsb
pop
cmp
pop
pusha
cmpsb
pop
lods
cld
sub
xchg
push
add
outsb
in
mov
outsb
xor
push
mov
lds
dec
push
sbb
push
mov
lods
and
dec
jl
aam
les
mov
rcl
es
add
mov
ljmp
cwtl
je
cli
outsb
data16
ss
aaa
je
mov
outsb
jmp
adc
movsb
mov
cmp
movsb
sahf
fdivrs
cwtl
cmp
mov
ret
add
outsb
pop
inc
lock
hlt
les
add
outsb
je
mov
call
xor
and
sbb
sbb
mov
jne
sub
cmp
add
test
icebp
xor
xor
cmp
outsl
stos
call
fists
push
and
outsl
lahf
pushf
and
out
push
add
push
or
pop
sahf
outsb
inc
and
in
and
jne
cwtl
inc
or
into
pop
inc
shrb
je
sbb
xor
sahf
push
inc
repz
inc
and
mov
cmp
jne
xor
insb
leave
inc
rolb
shr
xor
cmpsb
jne
pop
cmp
dec
aam
pusha
push
lock
lock
mov
daa
fcom
and
rcll
imul
shl
fstl
lock
in
mov
and
gs
test
popf
outsb
je
xchg
aaa
je
sub
push
movsb
adc
fbstp
add
cmp
cld
xor
outsb
in
and
or
outsb
js
xor
mov
cld
fnsave
shl
outsb
clc
mov
ret
jne
mov
sub
sub
xor
int
xor
je
in
cwtl
or
cld
fsts
fs
test
jns
add
xor
lds
push
mov
fdiv
mov
je
mov
or
out
inc
in
mov
xchg
jl
mov
loopne
inc
push
lock
sub
mov
inc
or
in
sub
fstps
push
dec
lret
ss
cwtl
mov
mov
movsl
sbb
and
shll
aam
scas
xchg
les
mov
fdivs
pusha
fstl
push
test
xor
shll
mov
xor
loopne
mov
je
cmp
add
jne
cmp
jb
sti
outsb
filds
cltd
dec
push
and
pop
sahf
outsb
sbb
push
push
dec
test
std
enter
and
outsb
jg
cmp
push
loope
dec
cld
and
mov
or
mov
adc
xor
pushf
xor
push
or
or
jge
test
pop
shrl
mov
xchg
es
je
test
inc
sarb
aam
in
jo
and
add
ss
adc
aaa
outsb
and
adc
call
cld
cmpsb
xchg
add
inc
iret
daa
out
inc
jne
je
les
sub
test
je
outsb
jbe
fldenv
xchg
and
inc
inc
inc
mov
sarl
shlb
sbb
in
jo
sahf
outsb
inc
xchg
divl
mov
jecxz
xlat
or
sub
cltd
int3
test
xor
outsb
mov
mov
jnp
xor
jecxz
test
mov
je
or
loope
jmp
sub
pusha
ljmp
nop
xchg
sar
je
movsb
stc
fsubrs
js
cmp
and
inc
jo
mov
mov
iret
jo
jne
mov
jne
dec
jecxz
and
and
pushf
xchg
fs
sbb
fsubrs
in
popf
mov
sarl
xlat
test
pop
dec
fdivl
xorl
rcrb
repnz
cmp
push
je
aad
gs
int
inc
push
push
insb
and
adc
je
push
mov
jne
popf
popf
dec
sub
mov
mov
adc
mov
jo
lret
das
js
xlat
cwtl
cmpsb
jne
popa
mov
jo
push
pop
insb
push
add
jo
cmpsb
push
dec
and
adc
divl
outsb
inc
pop
mov
cmp
mov
ds
loopne
inc
add
adc
xchg
cli
xor
sbb
bound
inc
or
mov
mov
lods
adc
add
pop
pushf
std
jl
add
xor
outsb
mov
sbb
pop
jo
and
cmp
jne
je
jne
adc
lods
pop
push
adc
outsb
mov
into
shl
aam
aad
in
jo
mov
mov
movsb
leave
or
xchg
mov
mov
outsb
out
enter
jo
mov
inc
mov
fdivrs
inc
fildll
push
pusha
cwtl
je
cmp
and
inc
inc
fsubrl
cmp
mov
ljmp
adc
faddl
mov
jge
xchg
xlat
inc
jo
sbb
je
mov
jo
push
push
fcompl
mov
and
imulb
sbb
add
sbb
mov
jne
js
je
cmp
fs
adc
xchg
lock
fldcw
in
hlt
aam
fmull
outsb
mov
cmp
test
jo
repnz
xchg
outsb
mov
nop
ret
fstpt
cmpsl
addl
sbb
fdivrl
pusha
inc
dec
add
mov
cmp
aaa
je
or
sub
je
add
outsb
and
cld
xor
mov
push
inc
add
fildl
adc
mov
pop
lahf
jo
push
cmp
pop
adc
dec
jo
xor
push
nop
push
push
dec
adc
divl
outsb
and
aad
loop
cld
pusha
popf
jne
mov
outsb
sub
test
xchg
mov
outsb
sti
sub
mov
and
loop
jo
lahf
jl
pop
imul
jmp
sbb
add
outsb
addr16
jne
pusha
push
mov
negl
jbe
sub
add
outsb
cmp
or
icebp
or
addr16
je
jle
jo
cmc
fadd
mov
lods
in
shlb
cmpsb
xor
shlb
hlt
fdivl
stos
xor
push
rcrb
cs
sbb
or
pop
sbb
je
add
mov
std
jo
pop
lods
and
fwait
pop
fs
int
mov
xchg
cmp
push
sub
fwait
test
inc
ret
jl
subb
cld
data16
test
lods
add
adc
fcmovbe
adc
outsb
pop
xchg
mov
in
je
aam
cmp
cmp
sbb
adc
mov
xchg
je
rcrb
and
sbb
outsb
int3
sbb
js
fimull
jo
sahf
inc
mov
test
test
add
mov
cmpsb
push
cmpsl
adc
shlb
sub
popf
je
sbb
shl
outsb
aam
sbb
out
sahf
lahf
jo
xor
jmp
cmp
outsb
xor
inc
and
push
outsb
out
jb
mov
pop
add
outsb
jl
cmp
inc
hlt
les
hlt
inc
lods
and
out
out
jl
lret
or
test
mov
pop
jo
into
xchg
out
mov
int
xchg
in
dec
sbb
add
cmp
dec
xor
sbb
xchg
sbb
cmp
int3
fsub
repnz
jge
and
jo
daa
rorb
enter
jl
enter
movsb
add
shl
sti
outsb
in
aam
xlat
fs
sbb
divl
xchg
aad
jge
cmp
mov
enter
mov
je
and
aam
mov
inc
ljmp
fsubs
outsb
inc
and
cmp
mov
lahf
rclb
add
cwtl
mov
mov
mov
cld
xchg
sbb
fldl
les
xor
add
mov
imul
jmp
lock
outsb
in
enter
mov
fscale
aam
sub
inc
pusha
out
pushf
xchg
out
dec
or
pop
test
and
loop
pop
xchg
push
cmp
pusha
sbb
outsb
in
add
mov
xchg
and
pop
rorl
adc
jne
decl
xlat
jne
lock
aad
mov
mov
xchg
jo
test
and
test
insb
ret
dec
sub
negl
inc
xor
sbb
xchg
mov
outsb
in
je
mov
sub
push
jo
inc
in
out
js
push
mov
xor
mov
sub
pop
std
push
xchg
cmp
and
sub
mov
xchg
enter
cmpb
leave
sub
and
jne
sub
xchg
push
mov
xor
cmpsl
outsb
mulb
call
mov
jo
cmp
mov
push
int3
aam
adc
mov
xchg
push
divb
ss
in
jecxz
push
out
fcompl
sbb
and
lods
jle
loop
inc
aam
inc
add
cmp
sbb
aam
test
sbb
jl
jne
cltd
in
aas
mov
loopne
aam
js
xchg
xor
fs
sub
clc
cltd
rclb
mov
outsb
jmp
inc
mov
or
shrb
sbb
or
outsb
stos
and
push
push
les
std
ret
and
je
jne
mov
ds
adc
mov
jecxz
in
je
dec
shr
adc
cmpl
pop
pushf
or
and
cltd
push
fwait
loop
cli
jo
or
push
jl
adc
pop
push
popf
jne
inc
loopne
mov
in
outsb
dec
je
rclb
cli
outsb
enter
and
sub
push
cmp
je
test
js
mov
cmp
rcrb
cltd
push
outsb
out
adc
outsb
in
les
sbb
push
jmp
xor
cltd
adc
aad
mov
sbb
les
sbb
outsb
pop
test
decl
aam
lock
sbb
outsb
bound
js
rorb
mov
fisttpll
sub
xor
lcall
inc
rol
cmp
pop
adc
dec
je
in
outsb
add
cmpsl
jne
aam
inc
mov
pop
movsb
xchg
shl
cmc
das
je
sbb
cmp
push
js
je
xchg
mov
pop
outsb
push
inc
push
mov
gs
jo
shl
aam
dec
jl
sbb
xchg
adc
enter
xchg
ss
pop
fcom
pop
xor
inc
pop
ret
xchg
in
sahf
and
fdivl
sar
or
ret
add
out
in
adc
inc
xchg
shl
movsl
pop
xor
fisubrs
mov
lret
dec
xchg
clc
outsb
repnz
adcb
movl
mov
shr
mov
push
enter
lods
pop
push
sbb
popa
ror
ret
jo
movsb
icebp
je
jecxz
xor
in
xor
push
adc
sbb
or
rorb
mov
xor
outsb
popa
add
pop
add
push
int
mov
xor
add
enter
jae
negl
outsb
push
push
sbb
cmpb
sarl
popf
mov
jecxz
lock
out
out
mov
cmp
ret
add
les
in
je
fbld
or
in
lcall
and
std
xor
icebp
je
aad
data16
cmp
mov
lock
cmp
dec
pop
push
jl
xchg
insb
mov
data16
test
fsubrs
lock
mov
mov
je
outsb
pusha
lret
xor
jns
dec
or
inc
or
pushf
xor
dec
cwtl
das
mov
xorb
add
and
cltd
lds
lods
std
hlt
pop
out
sub
push
pushf
fisttpll
outsb
cmpsb
mov
adc
cmp
xor
cmp
lds
jecxz
cmp
shlb
push
dec
lods
mov
cmp
pusha
aam
adc
xchg
push
mov
mov
outsb
mov
pushf
popf
loopne
je
nop
push
mov
pusha
out
push
sbb
and
xchg
push
rcll
mov
dec
pop
inc
pop
xor
es
push
push
lock
fwait
cmova
or
xchg
mov
daa
jo
int3
aad
and
js
push
rcrb
outsb
mov
sbb
pusha
jbe
test
cmp
push
lock
cmp
fdivrl
pusha
mov
push
das
movsb
cmp
int
jbe
mov
outsb
clc
fs
outsb
rcrb
stc
loopne
or
and
push
push
sbb
mov
inc
loop
sub
jl
xchg
inc
cltd
mov
inc
jl
das
je
mov
imul
mov
ds
mov
aam
dec
aam
fists
pop
sbb
ret
aad
lahf
mov
popa
je
add
orb
mov
cmp
dec
in
les
mov
sti
js
aad
std
int3
push
out
dec
mov
outsb
jl
mov
je
and
je
pop
test
inc
and
outsb
xor
mov
ss
jl
add
push
ss
mov
cmp
out
cmp
and
mov
xor
dec
loopne
sub
fisubs
dec
int
push
pushf
lods
hlt
add
in
jo
cmp
js
je
xchg
jo
push
jo
enter
je
lret
outsb
dec
dec
fs
push
xchg
xor
cmc
sub
dec
pusha
shll
push
sahf
ss
movsl
mov
leave
frstor
fxch
jl
mov
mov
and
jne
adc
fbstp
outsl
xchg
mov
sbb
and
bound
mov
mov
fcomps
andb
mov
push
xor
or
xchg
mov
fsubl
sahf
and
pop
aad
js
sbb
and
cmpsb
jne
popa
pushf
push
and
and
xchg
fisttpll
out
outsb
mov
cmp
pop
outsb
repnz
int3
pushf
push
stos
cmpb
mov
js
movsl
push
xchg
mov
push
cmp
xor
je
les
cmpsb
push
fsubl
int3
ffree
shll
in
popf
sbb
outsb
xor
sbb
shr
jl
in
xlat
mov
xchg
lahf
je
stos
aam
add
xor
jmp
call
push
dec
je
lods
mov
je
shrl
in
or
inc
xor
cmp
clc
mov
es
fs
je
ret
je
in
pushf
test
fnstcw
js
pop
je
sub
je
lods
dec
int3
popf
mov
mov
push
sbb
test
test
mov
call
mov
mov
test
add
js
les
stc
imulb
out
je
sub
and
push
xor
dec
je
bound
jo
das
js
mov
mov
or
int3
sahf
pop
fmull
xlat
outsb
pop
les
call
cmp
sbbb
mulb
mov
lahf
je
lahf
jl
mov
mov
out
outsb
add
push
andb
pusha
xchg
add
aad
data16
and
sub
add
mov
js
push
mov
jl
aaa
int3
push
mov
xor
outsb
mov
outsb
cwtl
sbb
faddl
in
mov
loope
push
cmovno
jge
xchg
cmp
inc
add
xlat
cwtl
mov
je
push
fisubrs
js
divb
daa
jl
inc
shrb
jo
outsl
outsl
cwtl
or
sub
aam
imull
adcl
into
mov
pop
mov
test
jo
aas
addr16
jo
add
sub
leave
xor
jge
outsl
xchg
pop
cwtl
shll
and
loope
js
jl
fildll
js
in
dec
jo
int
mov
aam
fdivl
shrl
iret
inc
add
fldcw
int3
mov
outsb
mov
push
mov
mov
rorl
adc
add
in
or
cmp
je
out
test
cmp
test
adc
adc
hlt
mov
movsb
inc
cld
outsb
lret
push
sbb
lahf
mov
inc
and
push
pop
aam
mov
in
outsb
jmp
outsb
std
or
mov
shll
orb
inc
je
adc
jo
push
stos
sbb
insb
out
outsb
sub
outsb
and
adc
fnstcw
fisttps
add
std
xchg
int3
fsubrs
mov
test
xorl
add
dec
aam
xor
inc
cmpb
es
movsb
rolb
add
xor
push
out
test
rcrb
shll
adc
fcmovnb
popf
push
push
and
sbb
fdivrs
shrl
loopne
loopne
mov
and
xchg
cltd
gs
cmpsb
mov
ss
mov
cmp
outsb
das
mov
popf
test
pushf
inc
lret
je
fs
cwtl
jecxz
pop
lods
mov
paddw
cmpsb
fcoms
sbb
jo
int3
jo
fidivs
outsb
push
pusha
pop
test
movsb
cwtl
cmp
outsb
std
js
pop
je
mov
sarb
jne
shlb
in
out
cmc
sbb
fsubrl
sbb
outsl
mov
push
addr16
add
outsb
nop
roll
iret
and
sub
mov
fimuls
cmp
add
orl
fisubs
fs
adc
hlt
push
jo
sbb
cmc
outsb
scas
cltd
int3
test
js
or
sub
mov
js
jne
adc
jne
andb
into
fcomp
lods
mov
enter
cmp
fdivr
hlt
jbe
and
adc
test
lahf
dec
ss
lcall
mov
sbb
push
jo
fwait
dec
sbb
mov
xlat
push
inc
sbb
in
outsb
ficompl
outsb
inc
je
testb
pop
dec
push
push
mov
adc
leave
xorl
cmpsl
push
out
stc
cld
sarb
out
mov
mov
outsb
add
call
push
adc
mov
mov
mov
sub
sbb
mov
je
mov
or
and
cmp
in
pop
mov
and
dec
je
cmp
loop
jo
push
faddl
outsb
stc
cwtl
push
sub
aad
leave
adc
cmp
fs
mov
mov
call
lock
mov
int
rclb
mov
and
icebp
xchg
push
mov
pushf
rorb
adc
jne
addl
sub
je
pmullw
hlt
aad
mov
push
xor
int3
cld
jo
mov
rcrb
rol
insb
pop
cmp
aam
inc
fs
add
dec
sbb
sub
out
inc
cmc
cld
mov
les
push
popf
je
and
sub
mov
out
dec
mov
repnz
rcrb
rolb
xor
mov
mov
je
jl
sub
push
push
das
jmp
add
or
and
sahf
pop
fdivrs
pop
or
pop
nopl
outsb
mov
into
cwtl
mov
jl
je
mov
or
and
fwait
lret
xor
push
int3
in
dec
push
add
in
or
incb
sbb
outsb
les
inc
ss
pushf
not
push
je
sarl
mov
push
pusha
clc
mov
outsb
cli
sbb
pop
xor
popf
je
loopne
aad
jo
sbb
outsb
pop
or
fisubs
cld
mov
lret
dec
inc
aas
pushf
and
jmp
outsb
inc
inc
mov
rcl
xlat
push
in
je
int
je
and
je
int
mov
jp
cs
aam
je
movsb
cmp
in
lock
adc
inc
sarb
leave
dec
xor
int3
xchg
mov
in
mov
mov
insb
xchg
push
push
loop
cli
call
outsb
inc
enter
ret
mov
mov
push
jb
lahf
outsb
idivb
frstor
outsb
bswap
je
pushl
cwtl
setae
adc
adc
and
cmp
mov
fwait
pop
xor
fisttpl
cmp
movsb
outsb
loopne
popf
outsb
push
je
movsb
push
stc
lock
jne
fbstp
mov
xchg
rcll
cmp
add
loopne
je
mov
outsb
repnz
ffree
cmp
mov
mov
lods
mov
dec
cmp
movsb
movsb
and
loope
inc
shlb
cltd
jp
inc
out
mov
and
test
pushf
aam
fdivs
fistps
popf
inc
inc
mov
and
xor
mov
sbb
and
je
push
push
in
xchg
xor
cmp
lods
inc
jl
insb
and
and
xor
call
lods
popf
in
mov
sub
in
aam
lods
pop
dec
mov
jo
loop
fdivl
mov
lahf
mov
sub
and
pusha
and
sub
adc
ret
xor
sarb
es
shlb
push
xor
cmp
ss
pop
xor
cmp
xor
js
pop
adc
decl
push
jo
jecxz
mov
sub
add
movsb
movsb
mov
xor
iret
sahf
outsb
inc
lock
je
cmpsl
outsb
push
pushf
xlat
jne
lods
push
test
inc
fsub
xor
fcoms
cltd
push
dec
pushf
pushf
leave
jnp
test
cmp
lods
popf
mov
adc
iret
jl
jne
pusha
sahf
jne
pushf
aam
test
mov
lahf
pop
and
dec
mov
push
xchg
outsl
test
shlb
lahf
xchg
cmp
jl
in
push
jl
xor
cmp
je
xor
lds
sahf
jne
sub
loopne
insb
lea
pop
aad
popf
enter
mov
test
adc
and
and
or
cmp
fldcw
and
cld
sahf
sbb
mov
push
rcl
nop
sbb
outsb
adc
jne
mov
push
je
cmpsb
jge
sbb
aam
sub
movsb
shll
je
js
mov
adc
je
dec
out
sub
into
in
mov
add
movsb
and
xchg
mov
jns
xlat
outsb
cmp
sahf
movsb
outsb
insb
shrl
aam
in
pop
les
je
lods
fistps
and
ret
jl
mov
roll
push
ficomps
repnz
mov
je
mov
pop
mov
and
cmp
rcrl
push
inc
adc
dec
out
add
je
out
dec
mov
or
sub
jne
push
out
outsb
mov
sub
add
or
je
movl
outsb
cwtl
es
nop
imul
fwait
punpckhdq
divl
xor
in
rcrl
movsb
mov
mov
std
mov
outsb
or
or
aam
cmp
xor
sbb
aam
mov
aad
mov
loopne
xchg
idivb
test
cmp
jl
rcrb
sahf
outsb
cmp
push
je
lcall
cmp
push
mov
dec
clc
jecxz
rcrb
rolb
into
fsub
fwait
add
out
int3
push
das
je
pop
hlt
push
les
js
push
cwtl
lds
in
mov
pusha
and
out
adc
rcll
inc
mov
cwtl
in
xchg
xor
into
outsb
push
or
inc
cmpsb
test
mov
inc
adcb
fbstp
lds
jne
pushf
sbb
cltd
jne
rcll
in
andnps
int3
xor
sahf
outsb
push
lock
test
dec
push
mov
cmp
cwtl
aam
mov
sub
dec
pushf
push
sub
xor
int
push
cltd
adc
icebp
sbb
outsb
inc
mov
or
inc
mov
adc
and
push
pop
mov
xor
cmp
aam
jl
outsb
cmp
daa
mov
jp
sub
outsb
inc
orb
nop
sbb
test
addb
fs
or
jmp
add
cmpsb
dec
push
xlat
inc
jl
js
mov
pop
rcl
outsb
mov
jo
stos
add
push
mov
mov
addr16
push
in
and
dec
pop
pop
jl
enter
insb
push
mov
cmp
cmp
jns
mov
je
out
and
push
mov
xchg
shll
mov
xor
aad
je
and
shll
mov
mov
inc
xchg
cmp
xchg
fs
cmpsb
in
cltd
insb
cmp
lock
adc
out
cmp
pop
cs
shl
je
cmp
adc
push
enter
je
sahf
outsb
push
and
xchg
aam
sti
shlb
jnp
mov
cmpsl
outsb
cmc
xor
addb
cs
lahf
cld
push
mov
outsb
jle
and
mov
push
xchg
int3
outsb
ret
je
in
jl
mov
in
es
mov
pop
nop
cmpsb
aad
pushf
sahf
add
imul
push
int3
nop
aam
subb
pushf
popa
nop
cli
mov
imul
out
sub
add
rorb
les
mov
into
movsb
jmp
mov
and
fstpl
movsb
outsb
rorb
adc
add
cltd
popf
aas
xchg
js
test
in
enterw
push
shrb
aaa
pop
je
cmp
test
push
stc
into
outsb
push
fsubl
pop
stc
mov
in
mov
pop
jl
add
mov
xchg
jl
cwtl
mov
dec
aas
jo
iret
cmpb
xchg
dec
mov
mov
test
jle
out
out
les
pop
enter
loope
push
pushf
int
daa
fdivl
in
pusha
sub
in
aam
dec
cmp
push
xchg
xor
sub
inc
sub
je
mov
add
xchg
xor
je
push
sub
cmp
pop
mov
mov
mov
fsubrl
cmp
and
jne
cmp
mov
int
pop
fwait
inc
pusha
icebp
pushf
inc
cmp
lea
mov
js
clc
data16
insb
xchg
movsl
pusha
cltd
jne
cli
pushf
test
aas
nop
adc
and
into
xchg
in
int
sahf
imul
in
mov
clc
pop
mov
movsb
cmp
cmp
mov
idivb
in
js
mov
push
dec
ss
fldt
mov
data16
push
jo
push
js
nop
inc
mov
and
rcrb
dec
js
popa
je
popa
and
into
fsub
test
mov
out
inc
adc
lahf
dec
les
fs
fs
mov
add
outsb
fadd
aam
shlb
fs
and
push
or
outsb
push
add
popf
popf
sbbb
inc
je
popf
mov
sub
idivb
outsb
enter
rclb
gs
shll
data16
dec
mov
fcomps
out
jecxz
test
mov
sahf
pop
call
and
pop
sahf
pop
xchg
xlat
shrb
nop/reserved
fs
push
cmp
outsb
data16
pop
mov
mov
cmp
push
xor
mov
shll
sbb
les
sbb
outsb
popa
loopne
les
push
add
lods
adc
jl
jne
jmp
test
cwtl
movsb
push
inc
fsubrs
jge
and
rolb
adc
mov
xor
inc
cwtl
out
shr
push
adc
mov
js
jne
js
shll
push
mov
divb
loopne
je
and
jmp
fdivrl
and
shrl
sbb
mov
flds
aaa
push
pop
movsb
mov
adc
rclb
pop
lods
mov
loopne
imul
je
add
push
jb
enter
sbb
fdivrl
push
shrb
sbb
test
es
int3
addr16
jge
sub
pusha
jmp
testb
xchg
test
cmp
adc
pushf
xor
outsb
jmp
je
push
in
pop
jo
in
and
lds
in
ss
xor
je
xor
mov
inc
cmp
daa
pop
mov
pop
dec
test
or
fstpt
outsb
sbb
mov
les
mov
roll
fs
rcrb
dec
rcl
add
jl
xor
dec
push
pop
clc
sub
jne
mov
stos
mov
js
lret
dec
jo
filds
push
push
insb
addl
jmp
xchg
inc
jmp
je
push
outsb
sbb
adc
jmp
xchg
cmp
incl
je
and
sub
cmp
ss
loope
shll
or
js
in
cmpsb
lea
ret
insb
cmp
call
sbb
int3
das
test
sbb
sarl
daa
push
jl
cmp
xor
iret
mov
pop
jo
out
stc
je
sahf
lea
leave
fs
cwtl
decb
add
jo
xlat
outsb
dec
inc
je,pn
loop
jo
fdivrs
data16
dec
mov
inc
adc
adc
mov
into
fs
je
lds
xchg
leave
rcll
insb
enter
popf
rcl
outsb
xchg
add
shl
test
adc
mov
in
aam
enter
stos
cmp
jne
enter
push
pop
out
cmp
mov
out
fbstp
xchg
cmp
iret
out
aaa
ret
mov
pop
cmpsb
add
sbb
or
pushl
jo
int3
out
je
and
inc
js
adc
sub
mov
imulb
cwtl
and
xor
sub
jne
shll
mov
loop
hlt
cmp
jl
je
mov
js
cltd
rcl
fisubl
lcall
sub
sbb
adc
pop
push
mov
stos
mov
lret
xchg
scas
aas
and
outsb
pop
divb
and
out
adc
sub
je
mov
push
and
xor
jg
xchg
shlb
push
adc
idivb
and
pop
jo
jne
imul
je
and
scas
dec
push
mov
dec
je
push
cld
icebp
xor
mov
push
call
cmpsl
outsb
testb
pop
mov
xchg
sbb
xchg
scas
or
jo
fcoms
movb
push
and
sub
push
mov
sbb
outsb
ret
into
and
mov
and
inc
lahf
inc
aam
sti
pop
movsb
cwtl
xchg
dec
js
mov
mov
pusha
in
add
pop
cmp
test
push
mov
je
out
js
enter
leave
int
mov
ss
mov
shll
mov
jo
jne
fadds
mov
test
loopne
push
sub
pop
cmp
push
stos
inc
sub
sbb
fwait
imul
in
neg
pop
xor
and
xor
and
jle
fisubs
test
xorb
test
adc
out
fs
mov
shlb
xchg
je
push
add
je
scas
push
fs
fs
mov
sub
loope
pop
lcall
in
jo
push
inc
je
jge
push
jl
sbbb
inc
je
mov
data16
js
leave
cmpsl
outsb
mov
ss
fsubl
call
movsb
test
xlat
mov
sahf
aad
and
shrl
es
je
leave
jge
cwtl
je
mov
fisubrl
mov
or
jo
xchg
inc
aam
iret
push
mov
mov
push
pop
rolb
xor
inc
je
or
into
mov
xchg
push
xlat
leave
call
movzwl
fwait
addr16
push
into
insb
xlat
lods
add
pop
les
je
or
adc
jmp
shll
in
js
popa
loopne
pusha
shl
jo
je
mov
mov
faddl
mov
fs
cmpb
loope
es
mov
mov
je,pn
loop
jo
sahf
outsb
mov
dec
mov
adc
xor
call
movsl
outsb
jmp
mov
ljmp
pop
ret
jo
adc
in
xchg
leave
outsb
mov
mov
enter
add
and
lods
shll
fiaddl
jo
enter
daa
inc
nop
inc
je
adc
pop
jo
out
fnop
sbb
or
pusha
and
xchg
adc
mov
sub
mov
sbb
jo
pop
mov
add
in
jo
xorb
pop
push
je
mov
les
cmp
push
je
ret
nop
xor
dec
cmpsb
clc
loope
and
int3
out
fldl
and
mov
cwtl
cmp
push
enter
inc
cmp
jo
adc
fimull
inc
push
adc
xchg
je
enter
lods
outsb
xchg
and
pop
scas
sub
addr16
scas
shrl
in
ss
dec
jo
shll
xchg
jge
add
dec
pusha
inc
outsb
cli
je
cmp
adc
jge
push
leave
out
jecxz
cmpsb
cmp
mov
out
mov
pop
aas
sub
mov
mov
dec
adc
add
movsb
xor
test
mov
cltd
mov
push
lds
iret
inc
xor
andnps
pusha
popa
pop
inc
lods
aad
mov
jo
je
stc
lret
outsb
adc
xor
shrb
loop
out
push
cmp
adc
je
out
xorl
test
insb
push
andb
adc
cmp
mov
mov
cmp
fs
fadds
mov
je
xchg
fistpl
mov
push
adc
jo
fisubrs
rolb
mov
lahf
push
xor
push
ret
outsb
cmp
sbb
les
shl
dec
jo
rorb
or
sub
jo
cmp
pop
mov
js
je
fisubrs
fisubl
cmp
jo
iret
inc
xor
je,pn
adc
push
mov
and
stos
outsb
pop
mov
pop
pop
je
inc
outsb
adc
push
js
inc
clc
and
data16
cmp
or
jne
jo
dec
xchg
xor
nop
mov
faddl
xchg
out
sub
daa
xlat
add
mov
mov
test
jo
push
jo
inc
pop
lods
je
test
ret
jl
xor
mov
pusha
xchg
pop
pusha
int3
aad
nop
out
adc
je
push
clc
js
xchg
mov
aaa
adc
nop
sub
cld
imul
scas
cli
insb
out
jo
lods
outsb
pop
push
mov
andl
pop
add
in
stc
je
fldenv
fdivl
push
lods
outsb
nop
mov
mov
adc
jne
sub
push
addb
enter
jo
loope
cmp
cmp
lock
sub
pusha
out
jo
test
mov
adc
sahf
mov
push
je
loope
jmp
sub
xchg
adc
xlat
inc
jo
pop
mov
xchg
pushf
and
push
mov
cmp
sbb
pushf
rcrl
les
jo
ficoms
pusha
aas
popf
push
adc
jo
mov
out
xchg
sub
cmp
dec
loop
aas
mov
or
mov
sub
cwtl
hlt
shll
iret
inc
jo
test
mov
jo
movsb
add
test
je
popa
test
out
loop
jo
pusha
fsubs
nop
mov
push
jo
in
data16
rcll
mov
data16
pop
mov
ss
add
out
jl
icebp
je
notl
inc
lret
mov
mov
jo
xorb
fisubs
movsb
cmpsb
rcrb
sti
je
in
aam
push
das
rol
out
je
lret
xchg
and
mov
popa
pop
aas
nop
xchg
pop
jo
aaa
je
lret
test
sti
je
xchg
pusha
loope
xchg
ret
mov
cwtl
je
jle
pushf
popa
jo
xchg
aam
das
jo
std
sahf
xchg
pop
mov
inc
enter
push
adc
je
and
fwait
inc
mov
pushf
nop
leave
pop
xchg
aad
jne
xchg
xor
mov
add
mov
sub
sub
or
in
xor
or
sbb
nop
mov
je
inc
shrl
inc
xor
shlb
add
stos
fbstp
aad
xor
push
mov
mov
lods
rcrb
je
into
mov
shlb
rolb
push
in
dec
je
mov
and
and
and
outsb
rcll
fmull
xchg
and
dec
xor
cmp
cmp
mov
cwtl
cmpsb
and
int3
outsb
in
sbb
je
and
sub
enter
jne
xchg
in
movsl
add
cmp
ror
cmp
xor
jo
xor
rcrl
shl
ret
jo
test
mov
les
push
sahf
cmp
je
stc
mov
push
mov
mov
test
push
outsb
cli
jo
xor
and
je
dec
out
pusha
cmp
xchg
pusha
aam
je
insb
out
and
push
insb
int
out
outsb
or
outsl
lods
outsb
xchg
mov
cmpsl
fadd
in
push
out
push
addr16
mulb
test
outsb
nop
mov
int3
pushl
ror
fsubp
sbb
push
sbb
add
mov
test
out
or
dec
lods
cmp
mov
xor
push
call
jo
mov
movsb
loopne
loopne
mov
mov
and
xchg
lcall
or
add
xchg
je
and
je
ret
jne
movsb
cmpsb
daa
jge
xchg
nop
xchg
pop
mov
rcrl
aad
loope
les
jo
adc
xchg
lds
call
aad
jo
cmp
mov
push
nop
into
fs
stos
xchg
mov
mov
sbb
clc
ret
or
push
das
je
pop
loopne
shrb
adc
fldl
push
mov
jo
jne
cld
fnsave
test
loop
and
clc
sub
push
cmp
nop
mov
and
je
pushf
xor
or
scas
cmp
test
pop
int3
adc
push
jmp
or
popf
add
pop
pop
adc
mov
push
test
fcomp
xchg
loope
sti
jo
dec
add
add
push
or
xchg
jnp
xchg
adc
sbb
fucom
cmp
shl
stc
les
ret
mov
gs
and
and
je
in
aam
js
xor
lock
outsl
fwait
aaa
push
insb
pop
inc
push
outsb
mov
mov
outsb
xchg
icebp
je
data16
adc
sahf
jne
adc
jmp
and
fcmovnb
push
je,pn
pop
test
test
shrb
int
mov
je
lea
js
aad
xchg
call
popa
je
idivb
popa
push
pop
divb
pop
aam
aam
sahf
dec
jl
pusha
push
mov
mov
sub
mov
xor
in
xchg
popa
add
je
popa
jl
dec
dec
mov
push
mov
test
mov
loope
into
enter
je
push
mov
sub
shll
test
popa
push
push
jo
mov
cmp
hlt
stc
scas
outsb
mov
and
xchg
int3
fstp
ss
add
js
xchg
pusha
mov
leave
jbe
xchg
or
mov
clc
out
shlb
je
mov
jo
sbb
jl
inc
mov
das
enter
mov
pop
push
aad
in
dec
pop
sahf
push
push
mov
in
je
inc
inc
jnp
mov
adc
mov
aam
shrb
ret
je
jmp
mov
sbb
sub
je
and
or
jge
xchg
or
dec
pusha
je,pn
cmpsb
test
in
adc
sub
sarb
fcompl
btc
imul
mov
cmp
dec
add
jl
loop
inc
mov
push
inc
pusha
cmp
sarl
dec
lods
stc
mov
jns
push
int3
mov
jne
lods
fdivl
push
clc
das
fsubl
addr16
je
int3
pusha
push
sub
cltd
jne
pusha
shlb
jl
fistl
push
mov
jge,pn
mov
mov
loopne
nop
and
loope
sub
pusha
jecxz
stos
add
je
sarl
pop
cmpb
ss
out
je
xchg
repnz
movsl
cmp
and
std
je
mov
jne
hlt
push
pop
mov
mov
je
push
sbb
sub
cmpsb
jne
mov
loopne
movsb
fmull
aad
inc
and
pop
std
je
sub
xchg
je
mov
insb
xchg
in
sbb
mov
mov
jns
jbe
sub
cmp
lds
fsubrl
je
mov
xchg
outsb
mov
add
aam
movsb
push
test
sbb
imul
mov
mov
outsb
push
mov
mov
rclb
insb
cmpl
rcrl
sahf
movsb
push
inc
insb
sahf
cmp
ds
jecxz
stos
cmp
mov
into
shl
push
inc
mov
and
fwait
rcr
in
pop
mov
adc
pop
je
mov
pushf
sbb
scas
aad
hlt
cmpsb
decl
mov
or
and
popa
jl
jg
fdivl
adc
jl
cwtl
cmp
push
jecxz
insb
xor
pop
sar
andb
mov
popa
fcomps
in
shlb
mov
dec
jo
sub
paddd
or
push
fadd
call
sub
jne
popf
je
shlb
cmpsb
mov
and
pop
and
hlt
loope
aaa
jl
je
xchg
adc
hlt
ss
fs
int3
aam
aas
call
lret
mov
inc
mov
adcb
and
inc
mov
pop
jg
xchg
leave
push
add
push
sub
push
mov
mov
and
jl
mov
cmp
dec
cld
stc
xchg
outsb
inc
push
or
je
insb
mov
adc
fwait
dec
js
hlt
adcb
cltd
aam
fmuls
mov
mov
add
sub
mov
iret
add
sbb
outsb
cld
shr
je
call
mov
push
mov
push
cmpsl
jmp
dec
pusha
mov
lods
ret
push
mov
ret
push
xchg
and
pop
movsb
cmp
outsb
sbb
ficomps
lret
out
pusha
jecxz
clc
xor
je
xor
loopne
xchg
push
call
mov
mov
or
sbb
loopne
push
rclb
push
clc
shr
push
mov
lcall
jo
sub
fldcw
adc
in
rcrb
outsb
cmpl
jmp
xchg
popf
outsb
leave
adc
out
lahf
pop
mov
lcall
fs
sbb
mov
mov
xor
je
dec
loopne
cmp
pusha
xchg
add
ss
es
or
int
or
fwait
or
jne
pusha
ss
movsb
mov
xor
and
dec
push
push
pushf
push
and
push
cld
xlat
cltd
hlt
push
das
or
jne
je
cmp
jl
mov
frstor
daa
jo
test
cmp
mov
stos
mov
jle
sbb
sti
jo
mov
test
xlat
fs
jne
je
xlat
lock
test
loop
pushf
pop
sarl
movsb
sbb
mov
mov
outsb
rclb
adc
adc
jne
jo
mov
in
push
hlt
out
inc
in
sub
xlat
or
jne
loopne
inc
js
mov
cmp
adcb
int3
mov
mov
out
ljmp
and
mov
sbb
inc
je
jo
vpcmpeqb
xchg
or
and
inc
mov
loopne
cld
xor
rcll
pusha
int
jge
mov
inc
popf
cmp
xlat
lea
and
sbb
fldcw
mov
or
mov
pop
loopne
fdiv
shll
push
and
jne
cwtl
roll
sub
jo
sub
fldcw
cmp
insb
enter
fcomip
cmpsb
jne
rclb
mov
cmp
cltd
popa
mov
test
fwait
add
lahf
adc
enter
mov
sbb
jne
sarl
or
push
je
sahf
push
cld
xchg
movsb
mov
mov
pusha
mov
sbbb
add
je
aas
pushf
cmp
xor
xor
sbb
testb
mov
movl
int
je
mov
adcb
add
je
lahf
outsb
loope
adc
mov
loope
scas
push
int3
sub
je
shl
andb
test
sbb
test
fs
fldenv
outsl
push
and
mov
or
pop
push
sub
daa
clc
push
and
das
adc
leave
or
push
jo
xchg
push
rorb
cltd
inc
push
push
je
xchg
clc
push
mov
adc
fdivl
add
adc
sub
inc
mov
mov
adc
mov
and
ret
jne
shrl
dec
fdivl
test
push
in
pop
fsts
movsb
inc
stc
int3
xlat
jne
jl
pusha
mov
jne
call
andl
add
lds
stc
xchg
outsb
or
pop
out
clc
out
xchg
fdivs
adcb
mov
je
scas
xchg
jo
js
aad
fs
push
mov
mov
xchg
cmp
inc
cmpsl
call
pushf
and
adc
push
or
mov
xor
jns
push
mov
je
scas
dec
mov
insb
mov
leave
cwtl
shll
test
test
add
je
push
pop
sub
loope
test
or
inc
mov
movsb
sahf
jne
stos
sarb
lcall
pop
enter
cld
mov
inc
xchg
outsb
sti
sub
je
push
fldl
and
pushf
sahf
jge
das
test
mov
cmpsl
push
sahf
push
lret
leave
jp
and
mov
jl
movsb
fmull
xchg
mov
sbb
cmp
test
jne
test
jne
fstps
mov
dec
fwait
xor
dec
adc
cmp
dec
cmpsl
jle
sbb
and
and
dec
sbb
test
cld
cmp
rcl
mov
or
push
pop
js
jl
mov
cmp
mov
les
or
xchg
pusha
xlat
cmp
int
jne
mov
je
pop
lods
ror
pushf
scas
jg
into
clc
fsts
mov
sub
push
dec
sahf
jne
call
mov
xlat
xchg
pop
push
jge
sub
mov
outsb
cmp
push
cmp
xchg
out
xor
aam
jecxz
xor
cmc
clc
or
rcrl
cltd
fs
push
pop
cmpsl
or
xorb
adc
sub
push
mov
cmp
fs
mov
dec
test
jo
into
test
je
xchg
jl,pn
add
outsb
rorb
mov
mov
mov
inc
in
cltd
jne
push
aad
rolb
push
sub
iret
fdivrl
lret
out
inc
xchg
int3
mov
sub
shlb
lods
fisubrl
and
mov
inc
dec
aaa
je
and
xor
pop
mov
mov
jo
xor
outsb
dec
cmp
aad
test
aad
adc
test
adc
adc
idivb
int3
xchg
or
adc
mov
pop
or
roll
add
insb
cmp
test
mov
mov
shlb
mov
pop
mov
xor
xor
sarb
mov
aam
xor
nop
aam
jmp
sahf
into
movsb
test
inc
jl
sti
mov
and
and
pop
sub
cmp
or
pop
popa
je
push
mov
outsb
loopne
nop
fisubrl
push
mov
aas
je
xorl
pop
mov
adc
in
stc
cld
cmp
les
loope
pop
adc
mov
and
jle
cmpsl
push
rcl
or
cmp
les
adc
enter
sbb
and
cmp
cmp
fildl
rorb
add
mov
mov
sbb
sbbl
test
je
popa
test
mov
jle
xorb
nop
sahf
pop
leave
pop
fwait
inc
jo
sub
je
mov
outsb
sar
in
push
add
aam
fdivl
out
rorl
mov
cltd
test
fs
jl
loope
pop
test
cwtl
lret
sub
or
cld
pop
enter
sbb
mov
inc
pop
scas
xlat
adc
inc
mov
mov
push
add
pop
jo
out
in
pop
jmp
cmp
les
and
in
and
shll
mov
cmpsl
jne
pop
loop
js
je
shlb
adc
call
stos
mov
aad
mov
das
push
dec
pop
jle
jo
lahf
je
pop
shlb
mov
sub
rorb
jmp
cmp
xor
mulb
out
addb
cwtl
iret
mov
sbb
xor
adc
mov
pop
test
popa
xor
int
mov
jmp
je
mov
xor
push
and
xchg
movsb
push
push
mov
xchg
mov
xchg
mov
fwait
imul
and
mov
inc
xchg
pop
test
leave
and
aad
aam
or
popa
je
lcall
cmp
dec
les
je
push
cld
shrb
leave
inc
cld
loopne
loopne
aad
incl
mov
xchg
add
add
lret
je
je
jl
je
or
cmp
data16
les
mov
jo
das
jl
icebp
mov
outsb
add
shl
xor
or
mov
cmpsb
orl
mov
subb
popf
mov
outsb
test
out
les
adc
push
and
and
divb
outsl
inc
rcrl
xchg
mov
sub
movsb
mov
push
mov
cmp
test
aaa
jne
cmpsb
pop
pop
mov
jne
jo
jne
sbb
add
push
lret
add
dec
je
sub
movsb
push
sub
add
pushf
addb
cmp
out
jo
icebp
je
js
je
loope
fldt
push
das
aam
addr16
sahf
dec
je
push
add
clc
stos
xor
pop
insl
outsl
outsl
test
ja
pusha
mov
js
outsb
sbb
outsb
ja
data16
fdivrs
inc
xchg
cmp
insb
in
je
push
push
rep
js
jg
adc
inc
push
imul
mov
js
jg
jae
dec
das
or
sbb
add
jo
adc
cmp
xchg
xchg
pop
push
add
pop
dec
adc
dec
jns
insl
dec
or
inc
lret
jl
adc
sbb
push
xor
adc
and
inc
stos
in
xchg
pop
inc
add
sbb
and
pop
aaa
adc
fists
add
xchg
in
cwtl
pop
mov
and
aas
popf
jbe,pt
ds
xor
es
sbb
add
ret
pop
outsb
pop
roll
pop
mov
loopne
add
and
in
cwtl
sub
add
adc
pop
inc
cltd
mov
cmp
push
dec
push
popa
push
mov
dec
arpl
dec
jp
adc
jns
les
push
xor
cmp
xor
loope
aas
sub
rep
xor
das
test
and
sbb
adc
fs
pop
adc
add
sar
adc
dec
add
adc
push
inc
cmp
xchg
dec
pop
fistpll
sub
test
inc
pop
add
xchg
loope
pop
xor
add
and
sbb
nop
mov
loopne
fs
pop
clc
pop
and
or
inc
sub
aaa
xor
rsm
shl
push
rcl
inc
xor
orb
aam
mov
js
cmp
inc
int3
mov
sub
pop
stos
push
ret
out
mov
cli
lods
fidivrs
sub
cmp
cmc
mov
pop
jl
in
lcall
xor
jno
add
dec
adc
clc
int3
sbb
adc
add
xor
mov
mov
call
sub
add
xchg
sub
into
push
out
dec
xor
ds
fdivrl
mov
add
or
sub
push
sub
push
adc
sub
cmp
add
push
jmp
inc
adc
into
rclb
pop
cmp
push
xlat
arpl
aas
mov
xchg
les
and
in
sbb
insb
imul
jnp
jl
loopne
dec
mov
pusha
imul
mov
out
mov
jb
push
repnz
outsb
rolb
add
jnp
jne
jb
pop
jp
lahf
mov
cmp
stos
jbe
xchg
insl
je
out
inc
lret
inc
ja
es
sub
pop
pop
pop
mov
jae
shlb
into
push
insb
jno
cmp
jp
jp
jp
jp
jp
jl
jne
shrb
dec
shll
je
add
push
imul
adc
adc
rolb
test
je
js
or
mov
insl
aam
jbe
jno
push
sarl
inc
jns
sbb
loop
add
je
arpl
and
jns
shlb
or
xchg
cwtl
cmp
popa
insb
ja
repz
adc
add
jbe
push
insb
pop
outsb
jbe
popa
cmp
mov
pop
repz
add
clc
movsl
cmp
push
arpl
loope
mov
pop
sbb
sub
popf
inc
test
cmp
mov
xchg
pop
dec
scas
or
in
repz
test
push
fisubl
cmp
and
and
xor
inc
mov
pop
stc
cmp
lock
jo
in
or
jo
shl
adc
stos
icebp
int
shl
mov
jge
lock
sbb
sbb
adc
sahf
xor
dec
jp
decl
mov
movsb
scas
ja
out
pop
jo
xchg
inc
movsl
jecxz
jo
adcl
sar
in
jo
jno
lods
stos
enter
and
inc
dec
mov
and
dec
mov
lock
test
cmpsb
ja
jo
pop
cmp
ret
dec
cmp
push
jo
xor
aad
push
inc
pop
jl
aam
nop
out
push
xor
ja
lahf
and
cmp
mov
lods
mov
test
jo
mov
add
cmc
dec
lods
xchg
lock
mov
sub
bound
in
jle
sub
daa
addl
adc
gs
adcb
cmp
cmpsl
es
jo
dec
jl
cmp
push
fiaddl
cwtl
adc
insl
xchg
mov
idivb
cmpsl
sub
mov
sbb
fiadds
outsb
out
adc
jbe
push
shrb
fidivrs
pop
imul
js
stos
jae
ja
fbstp
je
adc
imul
ja
lcall
inc
loopne
ja
xchg
cmpsb
rclb
pop
loopne
dec
outsl
je
jno
ja
inc
dec
pop
pusha
push
mov
fs
xor
jo
rolb
jo
pop
fistpll
xlat
mov
loop
inc
xor
sub
mov
rorb
repnz
aas
movsl
adc
aas
idiv
push
clc
aas
add
sbb
bound
pusha
pop
adc
mov
add
fsubrp
push
pop
cmp
mov
je
push
dec
pop
pusha
lods
outsb
repnz
and
pop
add
test
dec
insl
inc
dec
hlt
sbb
jo
das
sti
xchg
mov
pop
cmp
inc
sbb
mov
addl
mov
push
jo
xchg
jo
xchg
sub
fisttpll
outsl
cmp
mov
sahf
xchg
call
ja
pop
out
pop
lcall
scas
pusha
pop
xchg
xchg
xor
xchg
popf
in
jo
cli
push
adc
pop
jmp
orb
mov
ds
mov
inc
fidivrs
lock
into
mov
loope
jo
inc
shl
or
icebp
je
mov
jae
out
mov
dec
lock
add
es
repz
shlb
inc
fists
jo
jl
xor
push
cmpsl
mov
fidivrs
divl
and
or
mov
pop
jo
shrb
jp
xlat
mov
repz
ljmp
pop
movsb
xor
push
jo
sbbl
jo
cmc
mov
xor
dec
leave
cli
into
jno
push
ret
pop
insl
cmpsl
inc
nop
clc
jecxz
cmc
lret
cmc
shll
dec
mov
loopne
fadds
testl
clc
push
adc
dec
or
inc
movsl
inc
nop
inc
ds
jle
or
testl
push
cmpsl
aam
out
addr16
inc
push
adc
push
xor
cmp
imul
cmp
inc
rep
pop
xor
inc
inc
cmp
mov
insb
stos
ret
add
push
fdivs
inc
jo
into
pop
cli
fcompl
fsts
std
lret
rorb
insb
xchg
push
mov
fcmovu
in
lods
shlb
inc
inc
ds
aas
out
jo,pn
jne
and
jo
sti
pop
fwait
out
je
lcall
shll
insl
pop
nop
bound
cmpsb
mov
sti
aad
and
fnstsw
loope
insl
ja
lock
jno
std
movsb
mov
or
jmp
popf
push
xchg
xor
call
ja
inc
addr16
pop
and
xor
push
xor
repnz
pop
push
cmp
jae
mov
test
scas
mov
arpl
cmp
call
imul
shll
in
test
push
lods
mov
out
out
mov
dec
sub
pop
imul
mov
cmpsl
and
mov
xor
push
or
cwtl
jo
or
sbb
es
in
xor
in
ljmp
lcall
mov
inc
inc
pop
lret
hlt
sbb
xor
jbe
xor
rolb
clc
pop
inc
and
cmp
cmp
xor
sub
hlt
lcall
mov
fcoml
ss
dec
fisttps
dec
es
ss
in
in
stos
mov
rorl
cmp
mov
xchg
mov
jmp
fcompl
out
pop
pop
jl
lret
pusha
push
mov
dec
add
mov
mov
sub
sti
xchg
xchg
lahf
xchg
and
popl
jo
frndint
popa
shlb
sbb
or
xchg
mov
or
pop
add
fsubrp
mov
inc
push
jp
addr16
in
xchg
es
or
negl
sbbl
mov
mov
mov
shll
lods
sbb
xchg
sub
adc
mov
jo
in
cmp
jbe
sahf
mov
xchg
pushf
dec
jo
xor
mov
insl
cmpsb
adc
inc
xchg
xchg
mov
xchg
mov
jo
xorl
and
inc
cmp
mov
out
xchg
lock
sbb
insl
jns
jne
adc
inc
pop
jb
add
jg
je
sbb
popa
cmovo
jne
outsb
push
cmc
jecxz
pop
adc
pop
bound
in
cmp
sbb
popa
jg
pop
lret
cmp
push
test
insb
pop
push
jge
push
and
addl
call
inc
rcrl
inc
das
pop
inc
xlat
int3
push
fistpl
pop
pop
xor
iret
int
mov
ficoms
sbb
leave
jo
xchg
mov
sbb
mov
pop
lcall
shlb
pop
fwait
ja
and
popa
jo
in
cs
call
cmpsb
jo
cwtl
or
pushf
cmc
bound
xchg
call
mov
jmp
pop
jae
or
cmp
int
lods
push
and
jp
mov
je,pn
test
sbb
pop
cmpsl
pop
lods
xor
and
mov
push
fsubl
add
jl
jae
insb
mov
loopne
inc
sbb
andl
mov
xlat
decb
jo
sbb
les
loopne
cmp
pop
push
push
xor
out
mov
out
xlat
mov
fs
out
iret
jo
and
mov
imul
xor
stos
push
and
mov
and
iret
mov
pop
mov
repz
or
jns
mov
jo
cmp
test
scas
pop
push
jnp
sbb
pop
pop
arpl
add
jno
mov
adc
clc
int
or
sub
popa
movsb
pop
and
in
sub
ljmp
jo
fsubr
adc
and
jo
push
arpl
loope
xchg
aam
adc
or
out
pusha
in
fldenv
ss
test
add
test
and
aaa
mov
shlb
dec
sub
pop
dec
sbb
clc
and
cmp
mov
pop
dec
mov
cmp
imul
test
pusha
out
dec
mov
jo
inc
test
jo
mov
mov
sub
jl
fisttpl
enter
into
cld
xchg
push
lock
outsb
mov
and
test
lret
outsb
mov
imul
in
jo
mov
fbstp
mov
andb
test
xchg
xchg
jo
mov
jle
jb
icebp
jae
fstl
insl
dec
add
add
jns
xchg
int3
jo
jmp
jo
enter
pop
pop
mov
sbb
das
call
mov
test
pop
ja
jnp
xchg
add
outsl
icebp
mov
scas
enter
andb
insl
out
mov
pop
sub
scas
cwtl
int3
or
or
inc
mov
outsb
adc
insl
addr16
aas
sahf
cmpsb
cwtl
call
adc
ret
pop
aas
jo
test
repnz
jmp
inc
cmp
jo
add
push
push
imul
pop
data16
sbb
cmpb
lret
jo
xor
xchg
test
fadds
enter
std
push
pop
push
add
push
add
xor
clc
sarb
insl
mov
add
push
adc
mov
xor
test
mov
pop
lock
push
xor
xchg
and
shrb
pushl
in
push
add
pop
lcall
lods
shlb
push
dec
dec
cmc
int
or
shl
cli
aaa
sbbb
mov
ds
mov
push
mov
leave
jmp
adc
dec
pop
mov
xchg
dec
xchg
rol
adc
jo
and
movsb
sub
in
shll
ret
shl
add
fimuls
arpl
aas
fdivrs
mov
cld
inc
push
scas
lock
mov
mov
mov
lcall
push
jnp
mov
jo
xlat
out
cmp
mov
sub
cmp
mov
das
pop
and
mov
push
rorl
je
pop
popa
dec
js
fnstsw
inc
sahf
mov
push
inc
cmp
mov
scas
ss
movsb
leave
pop
jns
jo
icebp
inc
cld
mov
inc
cmp
jo
mov
mov
ja
iret
inc
jbe
or
sub
lcall
jo
sbb
incb
notl
cmpsl
inc
mov
add
push
jg
ja
fldcw
repz
mov
lds
or
mov
jns
enter
scas
int3
out
das
insl
insb
call
loopne
stc
fmuls
push
jo
ljmp
jo
xor
in
add
jo
lret
cmpsl
lahf
aad
jo
jbe
into
fadds
fstps
insl
jp
nop
dec
les
sbb
mov
lods
cmpsl
add
flds
repnz
icebp
test
jo
imul
dec
mov
cmpsl
lock
adc
in
inc
or
jo
out
inc
cmp
outsl
movsb
outsb
lcall
iret
mov
or
faddl
sbb
jo
ss
add
dec
repz
negb
pop
mov
push
ja
dec
into
mov
rorl
mov
cmp
add
je
jle
sbbb
jmp
subl
mov
mov
dec
add
dec
decb
dec
pop
push
sbb
fidivs
gs
inc
in
cmp
jecxz
decl
repz
push
push
add
or
sbb
pop
cli
inc
sahf
sti
icebp
lock
int3
rclb
push
rcl
jg
push
or
mov
mov
xor
dec
jmp
mov
iret
mov
mov
add
int
dec
cmp
adc
cld
imul
adc
inc
mov
out
fldl
jo
mov
sub
bound
push
push
scas
loop
aas
jo
and
pusha
add
jo
adc
rcrl
lea
lds
xchg
outsb
xchg
xor
jl
loope
lcall
add
jnp
xor
or
fwait
cmp
mov
test
jo
sbb
pop
dec
xor
bound
aam
lret
rorb
sarl
dec
test
notb
or
fistpll
scas
or
shlb
icebp
pop
rcll
sub
xorl
adcb
fstpl
jno
jl
sbb
cmp
jae
ja
into
mov
pushl
push
mov
insb
loop
mov
xor
xchg
lea
fists
mov
insl
dec
add
xchg
sub
sbb
dec
cmc
pop
jo
pushf
out
sarl
shll
iret
test
jo
sub
jo
test
movb
ja
or
ret
adc
dec
scas
orb
push
call
imul
inc
lret
cmp
xor
je
out
jo
xchg
xor
fistpll
mov
insl
movsl
cmpsl
and
nop
inc
or
int
push
mov
enter
sub
xchg
idivb
pop
jo
or
or
cmp
jno,pn
jnp
outsb
ja
cltd
outsl
push
jb
shll
adc
ret
ds
fisttpll
mov
int3
sbb
inc
iret
xchg
dec
stos
aam
jbe
test
xchg
icebp
outsb
js
mov
jo
jnp
jle
jb
adc
imul
or
or
or
jo
arpl
pop
cmp
jne
cmp
fbstp
xchg
xchg
and
xor
not
in
mov
gs
cmp
andb
jnp
jp
push
popa
test
inc
pop
je
divl
shrl
jo
dec
adcl
sar
jo
js
sbb
push
adc
jl
push
mov
sarb
add
nop
aaa
mov
push
add
pusha
daa
and
jl
adc
pop
aad
pop
in
jne
insb
xor
int
lock
push
call
adc
push
pushl
push
ret
and
insl
add
data16
repz
cmpb
ret
lret
mov
dec
mov
xor
pusha
roll
cmp
mov
cmc
inc
and
jo
mov
jbe
test
into
inc
fdivl
cs
jo
nop
mov
adc
rcr
push
arpl
inc
cmp
pavgb
jle
push
lret
pop
push
fs
cmp
add
in
insl
mov
jmp
test
jo
ljmp
inc
mov
cwtl
loop
lock
sub
call
add
pop
dec
jp
popf
fisubrl
jo
stos
not
mov
lods
xchg
inc
jo
mov
mov
sbb
nop
and
add
xor
mov
fwait
xchg
jo
cmp
aam
clc
int
sub
pushl
jmp
mov
xchg
imul
aaa
mov
call
test
add
jmp
push
mov
adc
push
or
lea
imul
push
int3
push
cmp
mov
sub
adcl
not
sub
jnp
xchg
ja
fldcw
jno
sub
repz
jg
inc
imul
repz
jo
outsl
rclb
push
mov
mov
xlat
call
popf
jo
outsl
cld
pop
xchg
or
adc
and
pop
shlb
ja
imul
repz
mov
adc
dec
and
orl
dec
push
pop
lock
adc
insl
dec
in
mov
inc
cwtl
mov
dec
test
jo
mov
icebp
loopne
pop
jnp
inc
jmp
pop
mov
cmp
fs
fucomp
mov
jbe
lcall
ja
xchg
rolb
in
push
insl
add
stos
and
ja
and
jae
jecxz
pop
sbbb
cmpsb
cmp
adc
js
enter
jo
adc
or
inc
jns
in
dec
fistpll
dec
pop
hlt
stos
cmp
xchg
xchg
add
insl
jo
jbe
xchg
pop
and
mov
repz
mov
stos
jo
jecxz
sahf
cmpsl
pop
jmp
cmp
imul
push
ret
lods
adc
bound
xchg
stos
pushf
cli
dec
lock
xor
push
out
mov
inc
adc
xlat
xchg
and
lods
mov
movsl
mov
mov
sahf
push
scas
mov
inc
pop
mov
daa
jg
pop
mov
add
sbb
adc
dec
cmp
pop
lds
xchg
adc
or
push
mov
ret
fadds
xor
lods
fs
mov
and
lock
adc
sbb
cmpsl
cwtl
movsl
out
aam
sbb
ja
xor
pop
out
iret
sub
xor
mov
dec
pop
add
sub
adc
pop
mov
mov
and
mov
pop
out
test
add
movsl
loopne
xchg
or
add
push
mov
and
pop
push
inc
inc
inc
inc
inc
push
in
inc
cmp
adc
popf
push
jno
jp
add
jle
push
negb
mov
mov
push
jne
jecxz
dec
jne
loope
into
in
cld
push
gs
xor
insl
jae
mov
out
mov
mov
mov
mov
mov
mov
ja
pusha
mov
iret
ja
xchg
ljmp
lea
mov
ret
lahf
out
shl
fucomp
mov
enter
xchg
int
mov
cmp
sub
iret
xchg
jle
inc
out
mov
in
ljmp
sbb
mov
shlb
inc
iret
xchg
in
cmp
pop
xor
jp
leave
mov
nop
shl
ljmp
add
jb
mov
jl
xchg
test
cmp
jo
cltd
loop
or
sub
jo
sbb
cld
sbb
in
jo
add
call
pop
push
in
add
sbb
adc
ds
lds
inc
stos
cltd
mull
pop
cmp
insl
sbb
repz
sbb
nop
adc
or
adc
int
loop
nop
and
in
je
cwtl
loope
jns
insl
cli
mov
sbb
sbb
pop
pop
adc
loopne
das
or
add
lock
or
sti
jecxz
mov
stos
sub
mov
mov
push
sub
ds
dec
dec
mov
out
and
add
dec
xor
imul
or
jno
scas
mov
lea
dec
or
out
mov
fcmovnu
insl
jl
cmp
adc
mov
jo
push
and
cmp
in
sub
sbb
inc
nop
dec
sub
call
cltd
repnz
jmp
xor
sub
sub
sbb
das
inc
inc
scas
push
cli
or
adc
fcmovb
loop
push
add
rorl
or
dec
mov
adc
decl
push
push
inc
push
push
jo
jl
add
xchg
cmpb
push
inc
jecxz
sbb
push
pop
adc
rolb
fistpl
push
sub
push
or
push
ret
and
sub
stos
mulb
sbb
femms
pop
sti
adc
in
insl
in
add
adc
cltd
jne
neg
enter
add
xor
dec
das
sbb
dec
out
sbb
pop
adc
test
cmp
sti
sbb
jo
add
sub
mov
subb
pop
and
cs
xor
dec
jo
out
push
and
inc
dec
push
shl
sbb
cmp
dec
adc
das
outsb
clc
sarb
std
xchg
add
dec
xor
aaa
push
inc
jns
or
fiaddl
data16
push
cltd
adc
sbb
pop
pop
adc
fcoml
test
inc
aad
push
push
adc
jo
sbb
or
insl
jmp
aaa
notl
sbb
fidivs
out
decb
add
inc
pcmpeqd
sub
pop
jp
push
in
and
out
je
or
sub
push
push
push
push
outsb
cmp
div
imul
lcall
popa
adc
push
iret
adc
add
loope
hlt
loop
add
out
outsb
xor
pop
inc
repz
push
or
pop
stc
push
adc
pop
dec
sbb
xchg
jae
sti
hlt
cmc
call
fsubp
jecxz
sbb
jnp
and
push
icebp
stc
jo
mov
std
add
lock
into
jo
pop
bound
push
mov
ja
xchg
loopne
test
jo
sti
scas
mov
loope
fwait
jecxz
repz
adc
inc
push
notb
adc
das
cmp
jecxz
loopne
stc
out
sbb
pop
cmp
aam
adc
sub
loope
div
fimuls
xor
adc
pop
pop
es
adc
sub
imul
xchg
adc
addb
add
cmp
xor
push
test
and
aam
or
jne
jne
js
mov
outsl
sar
in
push
out
jae
repz
push
adc
fwait
xchg
aas
insl
loope
lods
iret
cwtl
xor
jle
je
sub
inc
dec
repz
lods
pcmpgtb
pop
cld
xchg
jo
pushf
mov
lcall
shlb
test
jecxz
or
sub
fsubr
mov
sbb
push
and
push
sub
and
jle,pn
dec
sbb
or
icebp
mov
loopne
stc
out
mov
ss
lock
aad
jecxz
sahf
mull
fidivl
punpckhwd
inc
inc
loopne
jo
add
and
mov
fldt
cmp
dec
inc
dec
aad
adc
adc
in
cmc
xor
cmp
add
xor
lock
sar
cld
outsb
out
and
loopne
mov
stc
add
sti
arpl
adc
pusha
xor
and
adc
xchg
jne
push
and
shlb
jg
stc
mov
or
fiadds
std
adc
pop
loopne
inc
push
pop
es
sub
push
sbb
sub
loop
out
loopne
jnp
or
push
repz
shl
ljmp
xor
lock
in
mov
pop
push
mov
insb
dec
adc
and
lahf
stos
ja
sarb
mov
daa
arpl
les
push
outsb
lock
fucom
xchg
xchg
shr
in
sbb
dec
daa
pop
addr16
insl
dec
into
hlt
icebp
loope
lds
xor
jg
loopne
mov
cmp
cmp
loop
xor
hlt
addr16
loop
nop
adc
dec
les
lods
lahf
loopne
jmp
jo
add
push
push
sti
pusha
pop
or
fisubs
clc
cmp
xor
sub
cmpsl
jo
in
mul
mov
sub
push
dec
or
repz
sub
loopne
call
fmul
ficomps
sbb
jne
pmaddwd
jo
pop
add
or
iret
aad
icebp
repnz
out
adc
push
mov
cmp
xchg
cmc
loopne
and
ss
pop
lods
jbe
adc
loope
ret
lret
aaa
xor
cmc
adc
sbb
jb
rol
stc
lret
sub
test
jo
pushl
xor
inc
pop
rolb
sbb
clc
push
ficoms
push
aaa
ss
push
dec
push
mov
into
jg
or
jns
pop
aas
push
adc
call
jecxz
arpl
shlb
nop
or
sub
xor
xor
sbb
or
outsb
cmpsl
xchg
hlt
in
pop
adc
in
lock
stc
push
sbb
xor
icebp
in
les
repnz
rorl
scas
loopne
ret
int3
mov
je
aaa
cltd
xor
sti
adc
scas
mov
mov
out
jp
push
ret
mov
cltd
push
sbb
mov
cmc
out
adc
add
test
jnp
cld
xchg
cmp
xor
mov
sbb
negb
xchg
adc
jo
sbb
test
inc
sub
or
inc
add
es
mov
cli
add
add
xor
mov
fcompl
jno
loopne
mov
in
xor
sbb
inc
or
sbbl
mov
out
jecxz
iret
or
scas
or
adc
insl
add
lahf
and
xor
fsubr
jne
cmp
and
push
pop
icebp
hlt
repnz
out
sbb
push
popf
or
fs
xchg
cmp
push
shlb
dec
lock
fcomps
jmp
dec
mov
sub
xor
cmp
fwait
cmp
dec
jo
daa
bound
add
movsl
out
xor
arpl
pop
dec
hlt
mov
or
adc
pop
cmovo
and
inc
insl
push
cmp
inc
mov
loop
arpl
ja
jmp
pusha
hlt
adc
les
jb
xor
hlt
jno
clc
or
jbe
pop
and
sbb
add
and
cmpsl
sahf
jo
fbstp
pop
add
addb
xor
jo
shl
adc
es
cmp
fsubrl
mov
jecxz
es
add
xor
aad
push
mov
jo
or
adc
es
pop
dec
mov
loopne
int3
pop
insl
pop
and
fidivrs
or
or
cs
xor
ss
hlt
sub
sub
push
push
jbe
bnd
shl
in
cld
shll
ljmp
insl
sbb
mov
mov
pop
js
or
ds
xor
lock
pop
sbb
je
call
mov
fiadds
hlt
jecxz
sti
jo
xlat
rorb
daa
sub
inc
jne
or
cmp
jo
sarb
and
out
pop
sub
xor
adc
add
add
jo
mov
push
xchg
in
rolb
pop
inc
add
mov
in
xchg
jne
or
push
cmc
insl
push
lret
or
add
and
adc
adc
push
jo
bnd
xchg
xchg
push
cmc
or
dec
jle
cltd
in
push
aad
adc
incl
dec
add
pop
icebp
adc
jecxz
dec
in
mov
add
sub
aaa
inc
imul
dec
pop
sti
cmp
jecxz
enter
push
cvtdq2ps
adc
loopne
push
mov
mov
or
adc
outsl
dec
rcll
sbb
and
and
sub
dec
and
cmp
sbb
mov
mov
rol
out
sbb
jno
add
pop
aas
fisubrs
adc
push
mov
call
pop
push
xorl
and
mul
fidivs
ja
enter
into
add
jp
cli
add
jnp
add
ds
inc
mov
mov
or
enter
es
dec
push
sbb
and
inc
cmp
ds
mov
shl
or
inc
ss
movsb
notb
sbb
fidivrs
sbb
dec
mov
push
es
dec
and
or
inc
idivl
sbb
pop
or
dec
loopne
sub
in
cltd
jp
dec
and
xchg
and
out
cmpsl
adc
in
dec
adc
jmp
add
aad
incl
out
cmp
adc
loope
incb
scas
add
and
mov
cmp
arpl
sbb
into
pop
dec
inc
es
add
and
rcl
les
sub
rcll
or
jo
ss
test
std
decb
inc
jo
push
pop
sub
inc
call
aaa
pop
xor
andb
pushl
push
add
sbbl
rclb
aas
adc
sub
icebp
mov
lea
pop
push
inc
dec
pop
or
sub
adc
ficoml
jno
and
aas
cmp
cmp
pop
or
cmp
repz
in
mov
hlt
cmc
push
mov
out
cmp
add
pop
xor
jo
out
test
or
cld
scas
aas
adc
pop
sbb
incl
add
add
jae
adc
dec
sbb
cmp
nop
sub
sub
sbb
sub
inc
push
cs
cmp
test
add
xor
dec
dec
sub
aas
sbb
or
fidivl
and
or
xchg
pop
xor
jp
dec
push
sub
jo
push
cmp
push
out
lahf
and
and
cmp
ljmp
add
adc
shrl
pop
dec
push
outsb
daa
sub
and
adc
lock
in
lcall
add
push
dec
pop
iret
hlt
push
cmp
loope
mov
clc
stc
leave
mov
sbb
sub
jnp
adc
cmp
je
or
sub
push
inc
jae
xor
add
xor
inc
stos
pop
sub
mov
sub
sbb
fcmovnb
in
sbb
jge
lahf
jo
inc
and
push
cwtl
or
jnp
push
sub
aad
jno
pop
out
mov
push
stc
jae
inc
sbb
test
popf
adc
daa
inc
shlb
repz
jecxz
clc
es
les
dec
push
push
cmp
lock
jo
add
out
and
incl
sub
repnz
ja
sahf
call
cmpsb
je
xor
add
lock
lods
mov
sbb
lock
inc
jo
sbb
and
insl
roll
inc
mov
dec
dec
xor
imul
add
mov
lock
pop
das
sbb
pmulhuw
outsl
add
jne
and
pop
fbld
adc
adc
push
aas
std
mov
jo
xor
pop
inc
jne
push
sbb
lock
jo
scas
pop
inc
sbb
pop
ljmp
test
mov
in
cmp
insb
cmp
jl
pop
arpl
je
add
lahf
lods
fdivl
sbb
cmc
adc
or
in
push
inc
sub
jp
sub
adc
or
sbb
mov
mov
icebp
sbb
dec
hlt
testl
je
dec
lock
es
daa
sub
push
jo
mov
hlt
lret
data16
dec
push
hlt
fsubrp
jns
jb
sub
dec
mov
adc
fists
jo
cli
aam
cmp
outsl
pshufw
sub
and
ficoms
out
adc
add
arpl
push
adc
ss
sbb
jmp
stc
push
lock
push
push
aas
jae
adc
in
gs
sub
mov
dec
mov
xor
lock
cmc
imulb
jmp
and
push
pop
mov
xchg
sti
hlt
orl
xor
fdivrs
das
add
xchg
and
and
push
mov
insl
mov
cltd
xor
pop
sbb
adc
out
sub
fs
push
push
dec
sub
jo
pop
and
or
jo
and
mov
ja
mov
cld
pop
insl
mov
push
pop
cmp
jg
add
jle
imul
into
sub
mov
xchg
test
mov
outsb
sub
inc
inc
in
sub
adc
or
push
xorl
insb
dec
xor
pushl
fwait
out
lcall
outsl
das
or
sub
cmp
je
sub
and
std
mov
jno
pop
inc
adc
xchg
sub
push
in
add
mov
subb
dec
jo
nop
and
dec
dec
and
rorb
pop
jl
inc
cmp
pop
adc
jecxz
lods
loopne
stos
push
jo
cmp
mov
dec
lcall
add
adc
cmp
sub
sub
scas
fimuls
js
jne,pn
add
lock
cmc
call
xorb
mov
cld
lock
rcr
jecxz
or
sbb
sub
sub
pop
loop
xorb
jmp
test
lock
outsl
push
rep
jp,pn
out
cmp
adc
sub
ja
out
filds
nop
push
std
and
jae
sub
mov
call
insb
les
and
sbb
xor
add
dec
and
xor
sbb
sub
add
ficompl
sti
movsb
xchg
lock
sub
test
jge
push
iret
sub
and
add
int
jo
jecxz
or
push
pop
lock
add
les
test
jb
dec
ljmp
or
jo
add
lods
sub
sahf
and
fisubrs
out
jo
in
outsl
aaa
iret
mov
ret
dec
jge
mov
fadds
loopne
push
mov
cltd
push
into
jo
push
in
or
cmpsl
in
jo
xchg
and
mov
mov
test
adc
ja
inc
out
das
int
es
outsl
cmp
subl
nop
dec
clc
jo
insb
push
movsb
push
xchg
push
insb
in
push
mov
cmp
xchg
nop
jo
cmc
sahf
xchg
cmp
subl
aad
rorb
jmp
push
in
sub
cmpsl
out
mov
fistpll
imul
fistl
mov
movsl
pushf
jmp
in
mov
outsl
mov
fldl
and
outsb
sub
adc
pop
test
mov
loopne
push
jo
inc
shrb
lahf
jle
jp
cwtl
and
mov
mov
mov
data16
mov
push
int
adc
mov
loope
xor
mov
cmp
or
mov
sub
jnp
jo
xchg
or
sbb
inc
cld
adc
roll
ret
hlt
into
xchg
cltd
mov
inc
sahf
pop
out
iret
inc
jae
les
jo
add
mov
push
xchg
sub
subl
and
test
mov
jecxz
jecxz
dec
inc
je
test
jo
xchg
and
add
jbe
inc
in
les
fs
leave
dec
xor
jns
rcll
pop
das
ficoms
push
lock
lock
mov
mov
jo
into
xchg
xchg
or
adc
cmp
gs
jae
filds
loopne
xor
stos
les
orb
test
xchg
cmp
cmp
test
cwtl
insl
xadd
sub
fdivl
xchg
in
aaa
cmp
and
push
faddl
incb
pushf
xor
das
sub
popf
jecxz
and
pop
jge
fsubrs
cmp
cmc
popa
stc
cmpb
pushl
push
fiaddl
int
jb
mov
sub
inc
or
xchg
push
les
pop
loope
push
inc
inc
jo
iret
mov
subl
cwtl
jecxz
les
cltd
inc
ja
cmp
inc
das
in
subb
ss
push
and
fadds
pop
loope
pop
insb
loopne
aaa
mov
mov
scas
lcall
push
mov
xor
push
repnz
xchg
pop
push
jne
add
and
jno
lods
lcall
push
into
loopne
and
jecxz
movl
adc
in
xor
xor
aam
pop
dec
pop
es
dec
cmp
inc
xor
mov
data16
mov
faddl
loopne
jno
fmuls
and
dec
in
push
mov
pusha
mov
les
sub
bound
pop
insl
aas
sbb
lcall
test
push
insb
adc
push
sbb
cltd
sub
scas
sub
ss
sbb
imull
ljmp
mov
out
push
in
push
pop
cmp
cmp
xchg
pop
or
orl
aad
in
mov
lcall
mov
cltd
xor
xor
mov
push
pop
aam
xchg
rorl
or
lcall
cmp
push
orb
push
pop
outsb
rolb
adc
orb
dec
inc
into
aad
xor
sbb
and
in
into
les
push
pop
std
jne
test
clc
push
insb
adc
jg
cmp
pop
adc
mov
addr16
dec
pop
sahf
cmp
cmpsb
push
sub
push
cwtl
dec
fwait
out
xchg
icebp
push
xor
add
mov
in
mov
adc
loop
ret
jnp
cli
jo
loope
or
pusha
les
dec
pop
push
xor
and
je
mov
aam
xchg
pop
sbb
out
hlt
aaa
in
fwait
adc
cmp
adc
repnz
leave
jg
insb
scas
xchg
pop
dec
mov
mov
inc
adc
ret
das
mov
pop
dec
bound
pop
arpl
mov
mov
test
cmp
mov
and
jmp
xor
gs
inc
call
jnp
test
jbe
aas
jo
test
rolb
jmp
sbb
mov
pop
mov
and
enter
cmp
cmpsb
push
pop
push
jo
xchg
cwtl
sbb
jg
and
mov
push
inc
or
in
lock
jmp
jge
pop
fildl
jno
mov
orb
jmp
and
jg
lahf
pushf
jecxz
movsl
xchg
dec
add
fildll
and
jns
bound
imul
movsb
in
jb
adc
in
push
lock
adc
loopne
int
push
or
sub
push
mov
pop
pop
inc
jmp
inc
ja
nop
pop
fadds
call
loop
xchg
lret
cmp
out
jnp
fwait
in
nop
xlat
fistpll
fdivrs
enter
arpl
in
loope
arpl
ja
gs
out
mov
fldcw
in
xchg
loop
push
sbb
or
mov
adc
sbb
cmp
sub
mov
cmp
test
scas
cld
mov
in
and
out
cmc
adc
lahf
pop
add
push
gs
mov
or
sub
frstor
ljmp
clc
mov
lods
fisubs
jmp
loopne
cmp
dec
jle
fistpll
mov
mov
mov
daa
adc
sbb
mov
enter
jecxz
xor
fs
mov
dec
into
jo
sti
mov
xchg
xchg
std
les
or
das
out
leave
jmp
ret
adcl
jle
mov
mov
mov
cmc
lahf
jg
lods
pushf
shrl
mov
adc
mov
jle
xor
pushf
or
mov
or
jecxz
mov
nop
fwait
mov
icebp
mov
pusha
sbb
adcl
add
iret
or
les
outsb
incb
lret
and
lock
lods
test
mov
bnd
sti
scas
fucomip
in
test
and
cld
mov
outsl
outsl
xor
js
lock
jbe
insl
xchg
add
loopne
mov
push
jne
loope
add
jno
xor
jns
push
insl
cld
ja
and
jno
dec
inc
out
aam
insl
lock
inc
mov
and
ja
ja
ja
jae
jae
jbe
outsb
or
and
divl
cmp
insl
test
xor
mov
ljmp
or
cmpsl
pop
cmp
xchg
sti
sbb
dec
jo
cmp
call
outsb
pop
out
sub
jecxz
mov
and
and
aas
pop
push
jl
and
inc
push
into
mov
or
jmp
adc
adc
push
push
je
ds
in
and
cwtl
xchg
mov
in
and
xor
nop
inc
shll
xchg
jecxz
adc
jbe
or
push
pop
xor
int
cs
add
add
andl
out
push
push
ss
inc
cmp
js
push
jecxz
fwait
push
nop
push
fdivs
insl
cmp
nop
outsl
faddl
cmp
mov
inc
push
mov
dec
pop
xchg
push
out
jmp
inc
mov
imulb
pop
aaa
lods
lods
pop
mov
push
push
cmp
mov
pop
adc
cmp
xchg
jne
lcall
and
pop
or
jp
dec
xchg
aas
and
in
je
ds
jne
cmp
orb
cltd
fidivs
pop
or
xchg
and
and
push
and
push
in
gs
pop
movsb
cmp
xor
add
sbb
aam
faddl
dec
xor
inc
push
insl
add
pop
data16
arpl
insb
rorb
mov
in
pusha
and
add
inc
mov
sbb
shlb
dec
mov
push
dec
mov
pusha
cli
cld
enter
pushf
cmp
popa
aad
popf
and
sub
pop
sbbb
aaa
cmp
mov
data16
fmull
pop
jne
in
fadd
xor
cmp
adc
test
jp
ss
lods
push
jl
sbb
clc
js
and
pusha
inc
sti
push
js
outsb
jbe
sti
jb
fs
inc
insl
lods
fistpll
and
xor
lcall
bound
jo
loop
cli
mov
pusha
inc
pusha
nop
adc
fisttps
aas
adc
add
inc
addr16
and
xchg
mov
pop
sub
dec
adc
dec
loop
sub
insb
inc
insb
jb
incb
jmp
loop
jl
sub
push
loopne
and
pop
in
ds
inc
lahf
sbb
pop
in
xchg
in
fcomps
test
js
cmc
je
loop
repnz
push
hlt
js
pushf
incl
mov
outsb
je
nop
mov
cmp
sbb
jp
jne
mov
shlb
shlb
sub
adc
add
push
dec
pop
adcb
loope
fisubs
mov
add
dec
mov
pop
jbe
jb
push
in
bound
mov
jb
insl
loopne
xor
in
xorb
jnp
out
pop
pop
add
pop
inc
pop
cmp
pop
pop
or
push
xchg
mov
sub
xor
movsb
push
repnz
dec
sbb
pop
cmp
mov
sub
aaa
sub
xorl
cmp
movb
lea
ja
call
ret
and
mov
aaa
add
std
fs
cmpsl
sahf
gs
dec
in
dec
add
pop
cmc
and
mov
adcb
fists
jno
mov
ret
movsl
xor
mov
pop
xchg
loop
pushf
mov
push
and
mov
lahf
dec
shrb
shlb
kmovw
xchg
mov
add
call
pusha
movl
pushf
call
push
imul
call
movsbw
movzbw
pop
movzbw
movzbl
pop
not
bswap
pop
not
movsbw
movsbl
pushf
mov
call
pushf
movb
call
aam
cmpsl
mov
adc
add
dec
jb
aam
dec
xchg
xor
popf
lret
je
pop
stos
lods
pop
mov
js
jae
rolb
sub
cmp
sbb
aad
mov
jmp
iret
jno
cmp
push
mov
shr
out
inc
scas
or
movsb
and
addb
in
out
add
pop
ds
or
mov
push
mov
scas
push
inc
cltd
clc
movlps
xor
pushf
movsl
addr16
add
lahf
mov
jae
rcrb
js
xchg
imul
dec
aad
mov
adc
popf
mov
pop
out
sbb
outsl
lock
push
repnz
loopne
mov
loopne
in
fs
pop
loopne
jl
cltd
mov
inc
push
pop
shl
fldl
jmp
fcmovnb
loopne
cmp
and
jb
stc
cmp
pusha
jmp
add
dec
outsl
arpl
inc
jb
add
sub
in
sub
inc
mov
aaa
jbe
mov
push
sbb
test
roll
mov
lods
test
iret
pusha
or
xor
nop
fists
jb
inc
pop
imul
leave
rclb
loop
mov
outsl
jb
fsts
pop
pop
or
enter
shl
lods
pop
fldl
decb
div
mov
fnstcw
mov
and
cltd
das
cmpb
decl
adcb
dec
jl
mov
les
les
add
movsb
jae
out
sub
lds
lahf
iret
jno
mov
scas
sbb
dec
mulb
xchg
or
sub
scas
inc
push
jle
iret
mov
push
psubw
mov
in
jmp
xchg
xchg
popa
das
pushf
dec
popa
loop
inc
ds
push
std
push
add
jne
sbb
movsb
pop
or
push
cli
xchg
cmp
fisttps
orl
add
fwait
xchg
faddl
inc
loop
inc
and
push
fwait
lahf
pop
inc
insl
cwtl
stos
ja
fcmovbe
push
cmovo
sub
rcll
fistpll
adc
clc
xor
aad
sub
add
mov
ret
cmp
js
xchg
cs
les
pushl
ja
stc
mov
stos
fisubl
and
cmp
dec
or
mov
dec
dec
movsb
pop
hlt
in
dec
test
xchg
lret
mulb
lret
mov
repz
mov
imull
dec
mov
pop
or
mov
dec
out
shrb
lods
mov
cs
mov
push
xchg
inc
sbb
xchg
push
xor
ss
scas
aaa
imul
pop
imul
sub
into
sbb
addb
rcrb
scas
xorl
movsb
iret
rclb
gs
xlat
sbb
mov
push
fcompl
stos
sub
movsl
jle
insl
outsl
je
lea
subb
inc
adc
mov
sub
repz
gs
dec
adcb
fisubrs
xchg
es
sbb
out
or
ret
fisubl
ja
inc
cmc
mov
and
pushf
cld
mov
clc
xchg
testl
cld
movsl
bound
je
fstl
add
pushf
setge
pusha
pusha
lods
jmp
lea
movb
pushf
pusha
movl
push
mov
pusha
push
pushl
ret
mov
fidivs
or
fldl
bound
movb
push
mov
ds
dec
shrb
rolb
add
call
or
dec
push
xor
xchg
test
jge
js
push
idivl
dec
std
push
fdivl
lods
call
sti
jne
xchg
jmp
mov
add
repz
cmpsl
hlt
movsl
adc
rcll
dec
std
scas
cli
jno
add
fcmovne
gs
stos
lea
je
pusha
call
pushf
mov
push
pushf
lea
jmp
mull
daa
inc
clc
orl
xchg
pop
repnz
roll
lds
add
mov
jg
xor
cwtl
mov
cli
scas
aaa
out
mov
cwtl
pop
bound
or
les
in
xor
clc
mov
jo
inc
cmpsb
inc
or
test
rolb
dec
xchg
adc
loopne
mov
loope
and
or
cmp
dec
xchg
and
push
inc
insl
les
mov
out
add
cmp
in
pop
cs
cld
aas
fdivrl
mov
xchg
cld
je
fdivrl
push
aam
adc
push
insb
jnp
pop
sarl
add
test
xchg
clc
cmc
mov
out
jb
cmp
out
ja
push
mov
cmpsb
fwait
jnp
sarb
int3
dec
mov
push
clc
iret
mov
and
cmp
sub
mov
mov
cmp
testb
mov
rorb
xchg
std
cmp
call
test
sub
inc
call
insl
add
or
into
inc
push
mov
add
jne
xorb
sub
inc
aad
xchg
lcall
outsl
and
xlat
pop
inc
fcomi
out
ja
scas
add
add
cmp
mov
fidivrl
and
mov
adc
dec
mov
jae
xchg
sahf
cmpb
cwtl
jmp
test
aaa
sub
std
push
inc
imul
call
push
push
lea
jne
lahf
movsbw
push
movb
movzbl
lahf
mov
mov
lea
call
cli
mov
je
push
mov
xchg
aas
lret
adc
mov
scas
fs
add
mov
ja
mov
mov
popf
push
add
mov
add
gs
into
xchg
daa
aaa
popa
aam
inc
push
pop
test
jnp
or
aam
mov
in
mov
insl
pop
inc
lret
push
jg
xchg
int3
pop
push
adc
shrb
int
lcall
subl
ret
sbb
leave
enter
inc
push
fists
ss
imul
adc
test
push
movb
push
jle
pop
xchg
pop
mov
movsb
jne
xchg
fwait
les
bound
daa
aaa
push
mov
add
pop
pop
jo
mov
fisubrs
jle
popa
mov
dec
xor
or
sub
packuswb
sub
out
xor
or
lcall
mov
into
aas
jno
jo
loop
nop
xor
dec
or
cmp
pushf
sub
addb
dec
inc
es
xchg
mov
sbb
mov
mov
pop
scas
cmp
sub
fistps
push
imul
xchg
jne
jb
lods
out
pop
xchg
inc
and
jno
outsl
adc
cmp
sbb
in
je
outsb
aad
mov
push
add
dec
mov
insb
push
bound
fcmovne
fst
cmp
test
cmc
cmc
cmp
sub
cmp
cmc
jmp
cmpsb
cmpsb
jmp
sbb
movsb
xchg
inc
fiadds
or
cli
cmp
mov
mov
fisttpll
test
fs
cltd
inc
dec
sbb
xor
enter
or
mov
loop
pop
fsts
xchg
xchg
lods
and
inc
lcall
pop
or
mov
mov
pusha
lea
je
btr
rol
jmp
jmp
fs
cwtl
mov
insb
out
dec
or
aam
adc
mov
or
test
jmp
das
or
xlat
pop
push
fwait
out
ja
mov
jge
mov
xchg
push
sub
mov
cld
fsubp
pop
xchg
insl
shrl
ss
add
inc
push
xchg
insl
pop
enter
fwait
lods
mov
aas
xchg
ror
or
jbe
lods
outsl
fsubs
jae
or
cmpsl
lods
push
test
add
lods
mov
out
sbb
js
dec
nop
xlat
sbbb
shrl
pop
out
test
or
arpl
jne
dec
in
inc
popf
arpl
into
pop
rcrl
pop
mov
xor
cmp
inc
adc
jnp
loope
popa
cmp
das
push
cmp
cmpsb
inc
hlt
mov
push
loop
data16
sub
int3
mov
jb
aad
ret
inc
pop
rep
push
sbb
adc
jge
mov
and
ret
lea
test
add
test
and
pop
mov
outsl
push
mov
adc
xchg
push
xchg
jo
and
test
in
xor
fnstenv
movsb
inc
pop
ja
jnp
or
aas
dec
jecxz
xchg
call
add
mov
test
loopne
dec
sub
inc
cltd
xchg
xlat
mov
sbb
xchg
out
je
mov
stos
sub
std
hlt
inc
mov
adc
sarl
push
ja
mov
cli
mov
xchg
in
cmp
sbb
ja
ljmp
out
es
repnz
lods
push
mov
cmpsl
inc
scas
mov
ja
adc
jg
js
bound
mov
pop
into
xor
push
mov
jp
add
adc
pusha
fwait
sbb
mov
sbb
popa
or
inc
pop
incl
popf
lea
sbb
icebp
addr16
cmp
mov
repz
ljmp
aas
popf
add
xor
or
adc
xchg
imul
pushl
bt
add
pushf
mov
lea
jmp
setp
bsf
rol
setle
add
seta
mov
pusha
cmc
sar
mov
jmp
movl
pushf
mov
movw
pushf
mov
pushf
pushl
ret
seta
movb
setg
mov
sets
setge
pushf
setbe
lea
jmp
bt
add
test
stc
test
push
lea
jne
pusha
mov
pushl
pusha
mov
push
jmp
inc
lea
pusha
jmp
lea
ja
pusha
lea
jb
cmc
cmp
push
cmpb
mov
pushf
call
xchg
sbb
xchg
pop
ljmp
mov
fwait
and
add
fwait
jle
test
jg
aam
and
jecxz
les
mov
loop
test
push
sahf
loope
cmp
into
mov
icebp
nop
inc
push
andl
mov
psrad
clc
and
jmp
idivl
das
add
mov
cmp
stc
sbb
jle
or
lcall
mov
repnz
mov
lea
jne
shl
mov
ror
bsr
sub
bsr
and
push
lea
sub
jae
cmc
bt
cmc
sub
jmp
pusha
push
lea
je
pushf
pushf
pushf
pusha
lea
jmp
mov
movsb
lods
test
jge,pn
mov
iret
scas
ficompl
mov
test
pop
and
or
pop
inc
sbb
add
cmp
leave
pushf
jp
imul
mul
lock
rcll
pop
push
test
arpl
inc
sub
lock
icebp
mov
sbb
arpl
ret
mov
pop
dec
xchg
push
jae
ret
and
movsb
add
pop
sbb
sub
test
or
dec
call
sti
xlat
scas
xchg
sbb
sbb
xchg
ss
imul
test
xor
xchg
jmp
fstpt
stc
das
les
cli
jg
inc
or
daa
xlat
mov
pop
popf
dec
jge
mov
stos
dec
push
push
ja
aam
mov
xchg
cwtl
test
inc
mov
xchg
adc
test
sub
pop
mov
jmp
cmp
pop
mov
xchg
or
outsb
int3
jp
inc
xchg
ds
inc
pushf
inc
lds
jg
sbb
mov
mov
xor
fmuls
add
or
lea
sub
push
movsl
in
loop
adc
les
mov
or
mov
es
aam
test
dec
sbb
xchg
enter
fwait
or
dec
push
in
mov
repnz
jle
push
adc
adc
cltd
add
rol
sub
pop
push
popf
sbbl
dec
jmp
cmp
outsb
sbb
mov
call
insb
push
xchg
mov
xor
cmp
push
or
mov
adc
ljmp
add
ljmp
jo
in
xchg
mov
dec
sbb
aaa
cmp
and
rcrl
or
and
jnp
or
xor
xchg
movsb
mov
jno
mov
outsb
cmc
imul
mov
cmp
and
lahf
xlat
mov
lret
insb
out
call
cmc
cmp
add
jp
and
aas
jb
fdivl
push
mov
dec
lcall
cld
push
cmp
in
push
dec
mov
jb
mov
push
dec
push
pop
sbb
mov
sbb
and
mov
outsb
push
jp
aas
je
ret
mov
mov
xor
lds
daa
lcall
inc
shrb
ss
nop
loope
or
inc
mov
jp
push
ja
and
add
out
and
fistpll
mov
js
or
out
jns
pushf
pop
sarb
popf
fsubrl
xchg
or
xchg
push
pushf
inc
or
ljmp
fstl
mov
mov
loopne
leave
enter
mov
repnz
aad
hlt
adc
and
ss
sbbb
gs
ret
mov
pushf
cmp
adc
imul
sahf
lret
xor
push
mov
mov
sub
loope
mov
xchg
clc
mov
aas
xor
jns
mov
sub
adc
movsb
cmp
out
out
out
mov
push
out
push
daa
orl
stos
mov
cmpsb
or
stos
mov
popf
jp
push
mov
xorl
xchg
adc
addl
sbb
in
in
lret
aam
and
shll
shll
fwait
and
dec
push
mov
lock
adc
and
arpl
in
adc
pop
mov
test
std
les
outsl
or
jp
and
mov
fcmovnu
pop
dec
int3
and
adc
adc
add
pop
sbb
sub
lcall
cmp
mov
and
in
aad
enter
dec
hlt
sub
sahf
xor
sbb
movsb
jns
shlb
out
jae
jg
or
xchg
adc
sub
mov
fcmovnu
push
sbb
fs
jne
pushf
pusha
mov
jmp
pusha
call
je
bound
cli
int3
lahf
push
test
fisubrs
test
jae
or
ss
flds
sbb
add
popf
test
cmp
jbe
xchg
jmp
je
mov
sti
fisubl
int
cmp
mov
and
jmp
cltd
inc
mov
sbb
push
ret
jno
xor
jae
add
aad
fistps
js
fcmovnu
insl
ret
ljmp
dec
fdivrs
shrl
dec
push
fs
movb
enter
clc
xchg
in
daa
cld
and
out
mov
mulb
int
push
sarl
outsb
movsl
sbb
addl
call
cmpsl
addr16
mov
xor
adcb
mov
sbb
cwtl
cmp
pop
xor
pop
leave
loopne
push
das
imul
mov
shrl
mov
sub
nop
rcrb
fucomp
sbb
inc
cmp
mov
lods
push
add
jmp
lea
jne
rol
aas
sub
rcr
rcr
aad
mov
clc
add
not
xor
mov
cmc
clc
test
pusha
pusha
pushf
lea
je
test
pusha
call
push
lea
jge
push
pushf
mov
pushf
lea
call
push
call
mov
movl
pusha
movb
movl
pusha
mov
pushf
mov
lea
jmp
pushf
mov
lea
jae
call
jmp
pushf
lea
je
cmc
daa
xor
aaa
add
stc
mov
not
pusha
mov
bswap
jmp
pushl
test
cmp
call
or
pushf
push
lea
je
mov
setle
adc
bsr
sub
aas
bsr
movzbw
sbb
mov
cwtl
daa
mov
rol
shl
bts
add
shr
shr
mov
cmc
test
or
pusha
pushl
push
push
lea
je
shl
bts
add
add
bsr
jmp
inc
mov
pop
adc
pop
xorl
out
mov
fwait
jbe
out
icebp
sbb
or
sbb
push
das
fidivrl
lahf
loop
rorb
fsub
ja
push
mov
xor
sub
sub
add
xlat
jnp
call
lds
pop
mov
and
xchg
jno
imul
ret
cs
int3
lahf
xchg
xor
xor
int3
imul
stc
das
imul
fiaddl
std
sub
add
sbbb
cmp
ds
and
add
mov
int
inc
cmp
push
add
mov
inc
fdivrl
mov
cmpsl
mov
or
and
sub
cmp
pop
xor
sbb
push
pusha
das
inc
cmp
cmp
popa
fsubr
sarb
and
adc
mov
push
test
xor
rclb
inc
arpl
add
loope
or
inc
movsb
ret
in
add
test
or
cmp
movsl
test
sahf
or
call
xchg
sub
shrb
imul
enter
mov
dec
push
mov
push
mov
insl
fisttps
sbb
ss
pop
into
insb
js
mov
adcb
lods
or
je
inc
mov
dec
mov
ljmp
rclb
xlat
adc
outsl
call
push
out
sahf
xchg
and
cmp
xor
shr
popa
sbb
jg
jns
cmc
punpckhbw
push
xlat
inc
cmp
sbb
stc
mov
in
sbb
imul
or
xchg
sets
mov
lea
push
call
pusha
adc
pushl
pushf
jmp
pushf
mov
movb
pushl
ret
pushf
lea
jne
sar
rol
and
mov
jmp
pushf
call
mov
mov
and
scas
fnstenv
in
jnp
imul
push
add
rcrl
sub
pop
or
dec
pop
stc
mov
pop
pop
inc
and
stc
push
mov
mov
test
jo
pop
push
in
dec
outsl
jno
das
ljmp
and
pop
mov
loopne
xchg
xor
in
xchg
rol
clc
dec
xor
add
fs
mov
nop
jmp
or
or
mov
int3
lahf
xchg
fwait
push
jno
jb
fwait
xor
pop
and
and
incb
adc
xor
ds
fdiv
jmp
fisttps
pop
pop
jne
js
jo
ret
sbb
cmp
pop
and
decb
xchg
fnsave
clc
out
lods
pop
xchg
insb
push
or
int3
imul
jno
jae
sbbl
add
push
mov
scas
in
stos
lock
fcmovnu
mov
ljmp
mov
pop
add
mov
pop
add
mov
in
gs
push
xchg
in
pop
into
jne
aaa
clc
faddl
adc
movsb
pop
mov
and
ss
inc
push
add
mov
movsb
inc
loopne
inc
xchg
imul
in
mov
add
mov
mov
les
ret
lods
sub
jb
pusha
mov
inc
cld
push
movsl
jns
cmp
adcl
divl
or
xchg
or
push
dec
clc
pop
mov
orl
call
out
aad
add
aam
inc
pop
xchg
mov
pop
cmp
xchg
sahf
inc
loopne
and
pop
lods
pop
in
jge
pop
inc
push
or
jbe
pop
inc
jle
fld
rol
dec
test
cmp
pusha
mov
int
jae
push
movsl
orb
mov
ror
push
inc
mov
cltd
mov
scas
mov
mov
adc
jno
adcb
cmpl
in
jb
into
push
mov
daa
mov
add
inc
adc
xor
and
or
pop
cld
mov
jno
call
or
es
stos
jmp
pushf
mov
pushf
xchg
movzbl
xchg
mov
bsf
shld
mov
rol
rcl
pusha
mov
dec
mov
pushf
stc
test
mov
dec
setge
pusha
ror
mov
push
cmc
cmp
cmc
or
call
fbld
sbb
and
and
mov
and
adc
int3
jg
fcomip
ja
fcoms
clc
inc
stos
sub
fdiv
mov
call
mov
sahf
das
or
clc
push
jmp
cmp
mov
sub
out
scas
pop
dec
repz
repz
and
sub
lods
fstpl
sub
adc
or
mov
cltd
aas
outsb
fldl
repnz
xchg
mov
out
xchg
lret
mov
jle
xchg
aam
into
cmp
sbb
adc
jae
jno
sub
imul
add
lods
packsswb
pop
gs
xchg
in
inc
sbb
jmp
push
and
inc
negb
mov
or
cmp
lret
fwait
hlt
jl
mov
inc
ret
jmp
ret
push
xchg
xchg
jp
test
pop
fisttpl
pop
mov
mov
fcmovnu
scas
movsb
stos
in
jo
gs
jne
xchg
sti
mov
adc
sub
cltd
vlddqu
xchg
jo
mov
dec
fadd
faddl
loopne
jae
push
xlat
outsl
js
pop
lea
shlb
in
dec
fcmovne
mov
pop
push
xorb
aam
out
push
mov
cmp
aad
addr16
loop
xchg
orb
jp
popa
daa
xor
lea
mov
or
or
jp
jp
outsb
jo
mov
and
xchg
inc
lock
lods
lds
sub
or
jo
add
faddl
cmp
insl
adc
mov
inc
or
xor
jbe
aad
pop
flds
xchg
sbbb
shll
pop
add
xchg
test
aaa
jp
inc
push
mov
addb
insl
sub
lcall
pop
sbbb
mov
and
stos
inc
xor
jo
jns
mov
lret
and
push
ja
jp
push
cltd
inc
xor
movsl
sbb
adc
lock
xorb
sub
enter
jo
imull
jo
jecxz
repz
jo
push
jbe
sub
dec
or
shll
int
jo
in
pop
or
test
addr16
mov
and
lcall
adc
nop
idivl
xor
push
nop
xchg
adc
push
jo
jno
out
pop
ja
lods
jo
out
push
pop
mov
push
insl
dec
enter
je
mov
sbb
fs
inc
in
pusha
sub
pop
push
push
sbbb
mov
aad
movsl
inc
jo
loopne
pop
push
out
add
pushf
divl
dec
adc
lret
adc
and
cmpsb
xchg
xchg
push
mov
testl
test
xor
mov
jo
nop
mov
xchg
pop
data16
adc
cld
shrl
ret
test
xchg
test
mov
es
std
inc
popf
xorb
mov
insl
aam
jo
push
and
xchg
test
xchg
ds
jnp
adc
cmp
lock
rcl
sbb
push
enter
jae
jo
adc
ret
inc
das
out
in
push
nop
pop
mov
add
pop
ljmp
pop
cmpsl
sub
sarb
jge
mov
in
aad
jo
sbb
fcoms
fidivrs
insl
out
or
arpl
push
jo
xor
sbb
jo
fcoms
nop
jo
adc
inc
push
xchg
mov
js
inc
mov
movsl
xchg
mov
stc
rcrb
mov
adc
repz
outsb
cmpsb
out
fsts
pop
mov
pop
les
cwtl
or
jo
pop
cld
nop
mov
out
cltd
bound
loopne
sub
sbbl
xor
dec
nop
mov
arpl
addr16
jo
mov
push
pusha
push
shll
mov
cmp
jo
push
dec
cld
fldl
mov
aad
and
gs
roll
or
cmp
test
mov
js
adc
push
icebp
aas
or
cmpsl
jo
out
push
fisttpl
add
push
inc
imul
cmp
or
ret
or
fs
xchg
ja
add
lock
jo
add
sub
mov
mov
lahf
dec
pop
cmp
push
test
jo
mov
icebp
xor
jo
orb
xchg
insl
or
sbb
jne
rcll
ja
xchg
xor
outsb
gs
mov
pop
insl
xchg
dec
jp
loopne
push
insl
enter
repnz
and
popf
inc
pop
loop
data16
mov
dec
ja
inc
decl
in
or
pop
add
lods
sub
jo
je
loopne
xchg
mov
fsubr
mov
and
add
inc
sbb
ljmp
sbb
add
dec
leave
sbb
xchg
aaa
in
js
test
nop
ds
popa
push
sbb
cwtl
insl
dec
push
pusha
push
add
mov
addb
lods
sub
cmp
jae
cmp
js
xor
jns
xor
xor
xchg
or
std
xchg
sarl
outsl
and
add
jl
dec
sub
xor
xor
adc
push
add
push
add
stos
jbe
cltd
paddsb
xor
imul
add
cli
pop
dec
fists
fidivrs
push
les
rorl
jne
and
jno
pop
sbb
jl
inc
and
adc
outsb
sub
sub
and
outsb
push
ficompl
add
aas
jns
jmp
inc
outsb
and
js
xchg
xor
jp
adc
mov
stc
outsb
insl
cmp
inc
pop
cmp
jmp
and
push
notl
fadds
repz
xor
add
inc
ss
gs
add
or
push
or
imul
xor
sub
fs
lahf
pop
ffree
loopne
aam
call
fisttpll
add
add
sbb
add
adc
sbb
and
fidivl
dec
add
scas
frstor
mov
in
add
pusha
sbb
ret
add
test
sbb
sub
and
cmp
xor
push
cmc
inc
sbb
or
cmp
jne
add
aas
push
and
adc
push
test
add
add
xor
mov
add
pop
xchg
add
in
lea
xor
dec
sbb
insl
sub
pop
cmp
push
push
sbb
push
pop
pop
dec
jnp
popf
adc
cmp
sub
xor
xor
inc
cmp
xchg
shlb
lret
mov
push
push
add
adc
push
jbe
cmp
add
clc
dec
push
dec
out
inc
js
push
push
push
nop
insl
jo
jae
jno
ja
jne
jbe
jl
jp
pusha
pop
jo
arpl
addr16
insb
imul
push
push
push
push
push
pop
push
jo
pop
pop
pop
pop
aas
inc
cmp
inc
inc
inc
dec
inc
jo
dec
dec
dec
dec
das
xor
xor
aaa
cmp
cmp
pop
and
and
daa
sub
sub
movups
adc
pop
sbb
sbb
incl
std
into
jo
add
or
or
out
out
dec
xlat
enter
and
pop
sbb
js
cmp
xorb
xor
add
cmp
jle
dec
rclb
push
adcl
insl
jbe
enter
sub
je
outsb
jno
dec
inc
inc
push
and
push
dec
pop
sub
add
jge
sub
in
adc
ret
inc
or
pushl
xor
dec
jg
or
mov
movsl
test
or
out
sub
lods
shll
xchg
cmp
jnp
inc
jo
adc
and
push
pop
xor
data16
in
cmp
push
xor
nop
inc
lea
mov
xor
bound
sbb
sub
sti
push
jmp
sarl
data16
xchg
stos
adc
fs
sub
cmp
adc
push
jnp
inc
fidivl
add
mov
jl
or
cmp
push
inc
and
or
cmp
out
xor
and
adc
adc
push
adc
js
lods
loopne
push
loope
add
daa
sbb
cs
inc
pop
inc
pop
mov
sbb
pusha
rclb
sub
int3
into
test
ljmp
push
sub
xchg
push
and
dec
cmpsb
shl
dec
pop
pop
repnz
test
lock
dec
pop
inc
aas
pop
pushf
jmp
add
adc
in
and
or
aam
push
dec
in
fs
inc
jb
inc
xor
in
add
call
pop
cmpb
mov
adc
jbe
dec
sbb
imul
mov
lcall
push
cwtl
sbb
inc
sub
add
call
push
xor
pop
sbb
in
dec
aam
scas
pop
adc
push
sbb
xor
bound
je
sarb
push
mov
pop
aam
jmp
xchg
dec
xor
dec
rcrb
add
cs
movsl
rolb
mov
or
cmc
dec
inc
cmp
rcl
stc
and
inc
mov
push
mov
push
or
adc
test
xchg
mov
addr16
sbbb
sbbb
lods
fs
mov
jb
cwtl
and
sub
push
ss
sub
fs
lret
subb
pop
xchg
pop
adc
and
je
sbb
test
inc
aam
push
sahf
xor
test
sub
sahf
and
dec
cmp
cmp
push
push
xchg
inc
jp
pop
loopne
je
sbb
cmpsb
xor
hlt
adc
popa
sbb
pusha
add
stos
pop
je
sub
sbb
push
add
mov
push
aaa
rcrb
hlt
movsb
dec
into
in
lcall
jl
fsts
loopne
sahf
sub
repnz
push
adc
cmpsb
jb
outsb
jne
dec
scas
sub
lods
mov
jl
clc
pusha
arpl
dec
pop
pusha
push
cwtl
mov
pop
clc
cmc
pop
pop
xor
cwtl
scas
js
fisttpll
dec
gs
data16
enter
pop
cmp
mov
js
dec
dec
push
or
push
clc
cmc
dec
pop
call
add
add
xor
mov
inc
pop
outsl
push
cmp
data16
aad
in
adc
and
mov
bound
xor
jno
push
les
jge
mov
pushf
pop
jbe
js
fldcw
lods
add
es
aam
sbb
push
sbb
ds
jns
cmp
stc
push
bound
pop
pop
dec
aad
and
cmp
test
imul
and
sbb
incl
int
adc
adc
insl
lods
add
nop
insl
aas
dec
xor
jne
jno
gs
ja
add
add
push
pop
push
push
lret
adc
add
push
insb
or
adc
add
mov
cs
adc
push
cmp
push
es
ljmp
and
lods
xor
fwait
xor
push
add
xor
xchg
pop
jge
stos
dec
dec
adc
dec
sbb
adc
clc
in
inc
test
add
and
pop
adc
fsts
jmp
push
fdiv
push
stos
mov
adc
mov
and
push
rcrl
pop
inc
outsl
cmpsb
lds
les
pop
push
lahf
lret
aaa
mov
push
adc
push
cltd
sbb
dec
jecxz
shll
dec
xchg
nop
xchg
dec
int
cmpsb
filds
sbb
sub
sub
loopne
add
icebp
loopne,pn
xchg
pop
push
call
push
repz
lret
pop
aaa
dec
cs
std
fistps
stc
pop
pop
cmp
push
inc
imul
xor
push
and
xor
mov
add
test
xchg
fidivrs
loopne
add
pop
test
and
das
shrl
mov
scas
add
push
inc
test
sbbb
aad
enter
inc
jg
ds
xor
call
sbb
pop
or
lock
cmpsb
ds
push
push
adc
adc
cwtl
push
call
xor
aaa
stc
dec
pushf
push
cmp
jl
out
xor
dec
xchg
in
jbe
add
ds
jne
push
pop
cmp
or
xor
jne
or
push
fimull
inc
xor
pop
push
fnsave
jp
dec
push
imul
lock
je
test
imul
js
cmp
dec
in
lahf
or
cmp
jecxz
dec
mov
pop
add
cmp
pop
push
mov
arpl
pusha
push
inc
fcompl
jbe
adc
incb
and
jns
push
jl
pop
adc
push
add
add
add
or
or
pop
in
lea
fnsave
dec
enter
cmc
in
cld
push
hlt
cmp
fstpl
xor
ds
sub
lds
in
jne
pop
cmp
cmp
xor
dec
dec
inc
xor
pop
cmc
pop
pop
push
push
push
cmp
dec
fs
jl
js
je
pop
pusha
cmp
mov
xor
pop
cwtl
push
xchg
cmp
xor
mov
fnsave
cmc
rcrb
push
or
add
sub
dec
xor
mov
fnsave
cmc
call
cmp
pusha
imul
pop
mov
fucom
dec
lock
xor
insb
pop
test
cmp
fstl
dec
dec
xor
xchg
sbb
ds
call
cmp
int
and
push
movd
jmp
pusha
movsl
hlt
jnp
dec
into
in
loop
cs
mov
push
out
outsb
adc
aas
popf
dec
cmc
push
loope
test
insl
outsb
push
insl
mov
outsb
outsl
outsb
dec
outsb
or
outsb
mov
fildll
and
mov
test
inc
outsb
xlat
outsb
stos
aaa
lock
iret
jg
aaa
lock
jo
repz
icebp
repnz
cmc
jo
sti
cld
stc
cli
fnstsw
fnsave
jecxz
loope
out
in
out
in
jmp
jo
rcl
rcl
xlat
fcom
jo
fcmovnu
mov
ret
enter
lret
int3
leave
lret
lods
jo
mov
mov
mov
mov
mov
mov
popf
jo
mov
test
jo
stos
lods
test
jo
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
jo
fwait
pushf
cltd
lcall
test
outsb
xchg
stos
insl
and
sub
push
jo
lock
stc
push
lock
shl
fstps
xlat
out
xchg
fs
cwtl
scas
inc
icebp
outsb
cld
push
inc
xchg
mov
mov
aas
jae
pop
push
dec
mov
cmp
jns
pop
ds
mov
outsb
js
ja
std
add
pop
jb
mov
aaa
adc
enter
dec
sbb
pop
and
and
popf
pop
cmp
jbe
sbb
daa
inc
sti
cmp
adc
add
push
fs
dec
aaa
dec
inc
cmp
fsubs
cs
or
out
and
pop
into
and
in
sub
rep
cmp
jne
and
push
dec
loope
fstpt
adc
or
mov
in
sti
xor
pop
divl
and
xor
idiv
dec
adc
and
adc
sub
adc
adc
xor
push
addl
mov
push
nop
sbb
test
cwtl
add
pop
xor
dec
lock
and
fnsave
dec
and
cmp
xor
xor
jl
mov
je
enter
pop
rclb
cld
dec
or
add
cmc
adc
inc
inc
inc
out
loopne
push
pop
mov
out
pop
add
push
jo
mov
ret
mov
fnstenv
je
mov
xchg
mov
nop
mov
jo
popf
xchg
mov
and
mov
cmp
lret
mov
enter
mov
rol
push
enter
rol
xchg
mov
ja
mov
push
movsb
test
int
mov
xor
ds
xchg
cmpsb
jo
ret
rcr
mov
lahf
mov
sarl
mov
push
scas
mov
mov
mov
add
lret
mov
insl
mov
xorb
inc
pop
adc
cmpsl
xchg
jno
mov
or
daa
push
cmp
and
dec
ds
int
lea
lahf
pop
pop
or
dec
and
add
jnp
insb
sbb
dec
aas
inc
mov
stc
jo
inc
dec
inc
aas
push
jp
adc
add
xchg
lods
dec
add
clc
sbb
pop
popf
inc
and
inc
dec
sub
or
gs
adc
dec
dec
push
push
cmp
add
jle
xchg
out
jl
dec
shlb
lea
pop
sti
lock
sub
push
sbb
inc
int3
and
mov
js
push
pushf
xchg
gs
add
aam
out
jb
cmp
add
data16
cmp
loope
imul
std
inc
jae
jne
pop
scas
divb
dec
outsb
out
pop
and
rcll
xor
sub
popf
out
jb
js
popf
inc
ds
jmp
pop
pop
pusha
pushl
das
leave
dec
movsb
jp
pop
cmc
dec
jp
push
mov
ret
je
pop
out
lds
pop
jo
pop
sti
pop
mov
sub
mov
and
lods
xor
mov
jo
jne
shrl
mov
push
pop
lock
push
push
dec
add
imul
lock
mov
js
pusha
ret
inc
imul
fstps
inc
pop
lock
cmp
test
fstps
xlat
pusha
popa
push
inc
jo
movsl
cmp
dec
lods
xchg
idivb
push
rorb
fnstenv
loope
pusha
mov
in
pop
enter
and
pop
xor
fs
mov
into
cs
inc
and
xor
or
sub
inc
and
ds
jl
jae
xor
jge
cmp
jbe
push
jp
pop
mov
push
repz
pop
mulb
xor
js
xor
push
and
and
cmp
jl
fidivrs
push
xor
add
pop
pop
mov
add
add
sub
mov
cmp
xor
xor
test
sbbb
test
mov
fdivrs
sbb
insl
pop
adc
outsb
cmp
fnsave
sub
and
jb
cmp
inc
dec
adc
jl
hlt
std
cwtl
test
mov
mov
adc
out
cmp
pop
sub
clc
test
jno
and
inc
sti
pop
std
js
xor
pop
or
and
int3
cmp
xor
or
jb
adc
adc
push
inc
jecxz
pusha
dec
push
in
pop
lods
push
mov
push
dec
gs
and
insb
inc
and
gs
aam
push
notl
test
daa
inc
pop
push
cmp
out
imul
imul
jae
mov
pop
dec
adc
jl
and
pop
fnsave
pop
loopne
jle
push
in
fldl
je
inc
mov
cmpsl
js
xchg
xchg
cmp
xchg
movsb
cmp
mov
cmc
cmp
xor
nop
testl
cmp
sub
popf
jle
outsb
out
cmp
mov
cmp
add
push
pop
and
mov
int3
bound
dec
mov
inc
push
xor
scas
fiadds
pop
in
pop
xor
or
mov
ds
sbb
cmp
inc
nop
aas
mov
xchg
push
notb
push
cmp
ss
addb
sbb
cmp
sbb
xor
incb
lcall
dec
test
jno
fdivl
mov
cmp
adc
xor
bound
xor
push
xor
adc
js
cmp
or
ret
dec
je
push
loopne
sbb
mov
je
jmp
jmp
add
cmp
mov
fnsave
pusha
mov
pop
cld
sbb
scas
lock
in
push
into
js
adc
cmp
jne
lret
jmp
cs
sbb
js
addr16
adc
xor
jg
sub
dec
clc
mov
adc
mov
divl
loopne
adc
adc
mov
jl
pop
mov
pop
loope
cwtl
push
mov
jns
sbb
arpl
pop
adc
lock
or
add
inc
or
xor
cmp
or
dec
cld
or
sti
pusha
pop
and
imul
dec
add
out
divb
pop
sbb
adc
insb
movsb
adc
rcrb
into
jl
pop
in
mov
ljmp
ss
cs
jmp
inc
jne
and
cmc
rcrb
nop
in
adc
sarb
mov
pop
fs
sti
xorb
fdivs
insb
add
add
inc
sbb
mov
dec
nop
adc
push
loopne
push
ror
pushf
out
cld
nop
jecxz
dec
jne
adc
nop
push
test
jmp
dec
arpl
and
lock
pop
fs
je
add
push
mov
xor
xor
cmp
mov
nop
pop
jns
fnsave
dec
loopne
mov
repnz
jne
cmc
adc
in
dec
int
lea
lret
and
pop
adc
insl
pusha
sti
push
jne
lret
in
jne
nop
jge
xor
cli
gs
jne
fbld
jne
loopne
fimuls
jecxz
jne
fucom
imul
dec
jne
xor
mov
push
cmp
fst
dec
mov
push
jne
enter
out
ja
imul
pop
js
pop
pop
mov
xor
push
pop
hlt
add
insl
push
test
pop
fbld
arpl
or
aad
adc
cmpsl
popa
jno
filds
addr16
or
mov
jno
mov
dec
sbb
jp
pusha
loope
and
jae
subb
fcoms
xabort
jl
adc
sub
dec
dec
push
aaa
pop
mov
jle,pn
loop
jl
pop
rcrb
push
dec
pop
jns
adc
clc
imulb
test
inc
aas
sub
cmp
add
dec
mov
add
add
lahf
out
pop
xor
mov
cmp
insl
jo
mov
jne
int
dec
inc
aas
test
movsb
dec
dec
test
ret
and
pop
pop
mov
mov
jo
push
aaa
aad
xlat
je
mov
sbb
lahf
testl
mov
inc
jo
test
jne
add
dec
sbb
insl
movsb
mov
in
pushf
rcrl
shrl
outsl
add
xor
in
push
nop
sub
popf
pop
in
dec
jne
je
push
insl
loope
rorb
inc
sbb
push
lock
insl
add
in
pop
push
cmp
clc
js
js
xchg
mov
aas
dec
xor
xor
dec
sub
inc
jle
loopnew
int3
pop
icebp
xchg
push
aas
add
xchg
insl
cmp
clc
dec
push
xchg
js
cltd
in
fcompl
push
cmp
cwtl
jle
xor
clc
int3
pushf
pop
rorb
xor
fs
dec
fwait
in
insb
addr16
xchg
xchg
cmc
fnsave
dec
sub
lods
jne
inc
xchg
cwtl
push
jne
add
cmc
je
test
pusha
adc
dec
cmp
pusha
clc
test
cmpb
movsb
int3
xor
push
adc
jne
sub
mov
cmp
sub
push
mov
in
push
das
test
insb
adc
sub
dec
dec
inc
outsb
add
jae
inc
mov
clc
dec
inc
je
lock
xor
inc
dec
sub
fadds
cwtl
jne
fs
push
fstl
in
dec
push
ds
outsb
adc
xchg
jmp
pusha
leave
pop
fbld
xor
lahf
pushf
jmp
and
xchg
dec
loopne
xlat
js
hlt
adc
cld
aaa
cmp
pop
mov
mov
idivb
add
cld
inc
dec
dec
xchg
add
mov
mull
int3
cld
cli
jg
push
loopne
sarb
faddl
add
xchg
dec
or
xor
sub
insb
push
push
mov
xor
das
sbb
mov
adc
cwtl
dec
mov
dec
mov
or
xor
insb
pop
xchg
mov
or
push
sarb
sbb
cwtl
mov
inc
add
loope
add
cmp
fcoms
sub
xor
jge
jle
sbb
mov
insb
push
test
xor
jae
xchg
call
int3
and
mov
mov
jne
dec
int3
pop
and
or
fwait
or
xlat
xor
fcomip
mov
cwtl
dec
and
mov
in
scas
and
insb
cs
andl
cmp
mov
dec
add
roll
pop
mov
pushf
mov
orb
mov
pusha
dec
in
outsb
insb
sub
dec
inc
mov
mov
add
dec
mov
cwtl
iret
add
xor
lea
cltd
dec
cmpb
xchg
mov
and
xor
call
dec
xchg
test
cs
int
cltd
sbb
test
mov
rcr
les
sahf
fcoms
insb
xlat
lret
mov
dec
cmp
dec
sbb
repnz
pop
pop
mov
mov
xor
js
jno
adc
in
cmp
cmc
aam
sbb
push
inc
clc
push
push
insb
scas
push
test
xor
mov
dec
jbe
jg
sahf
mov
xor
lea
jg
dec
icebp
adc
dec
cmp
dec
push
xor
dec
xor
shlb
mov
jl
mov
in
jl
test
fwait
insl
cwtl
subl
sub
in
dec
lock
push
pusha
adcb
jnp
push
sub
dec
je
sbb
dec
jno
or
shlb
pushf
pop
jnp
mov
dec
cmp
test
fisttps
mov
cwtl
and
mov
and
hlt
aam
pop
dec
movsb
icebp
mov
cld
jne
jge
cld
pop
cmp
adc
mov
enter
sti
sub
iret
mov
inc
or
jae
cmc
cmpb
enter
jne
fs
insb
or
insb
addb
xor
les
or
dec
rol
loop
add
les
aaa
and
push
mov
scas
mov
aaa
cmp
icebp
je
push
xor
dec
fs
pop
test
fs
xor
sbb
jbe
orl
scas
addr16
popf
xor
loopne
and
ffree
jle
push
mov
pop
xor
pop
cs
adc
xor
movsb
dec
aaa
jle
dec
jl
pop
leave
inc
sarb
hlt
push
call
insb
pop
mov
pushf
jecxz
jmp
clc
je
stc
mov
mov
xor
inc
fmuls
sbb
les
xor
jae
mov
test
xor
jge
loop
jl
xor
jge
adc
xor
subl
test
test
je
inc
into
cmp
outsb
aas
dec
lock
insl
push
lret
cmp
cmp
pop
push
repz
ds
in
jne
in
fdivrl
and
or
or
cld
iret
mov
enter
sub
sbb
dec
pop
popa
addb
js
inc
cmp
jno
dec
movsb
pop
dec
orb
sub
inc
adc
add
mov
mov
loopne
jo
lret
rclb
lahf
aam
dec
and
lock
mov
jo
adcl
ret
push
imul
lret
enter
adc
in
hlt
icebp
xchg
cwtl
pop
arpl
inc
les
pop
mov
cltd
and
pop
and
scas
lods
jo
mov
je
jo
into
push
dec
jae
sbb
leave
and
jmp
rcl
and
mov
pop
imul
les
jmp
aas
mov
jo
in
sbb
dec
leave
xchg
jo
push
ficompl
insb
popa
mov
lret
lock
bound
push
cmp
orb
pop
es
nop
fwait
sbb
lahf
lock
sti
lds
and
scas
xchg
js
jo
repnz
cmc
jo
mov
hlt
leave
out
or
in
pop
mov
jo
and
pop
out
cmp
leave
jl
inc
xor
imul
dec
add
cli
jle
cmp
mov
inc
mov
inc
icebp
jo
push
and
adc
xchg
push
scas
xor
rorb
cmp
pop
stc
mov
jmp
inc
push
dec
dec
or
jp
fbstp
adc
hlt
sbb
pushl
cmc
or
lods
int
cwtl
inc
insb
and
jmp
negl
xor
pop
push
testb
push
movsb
not
loopne
stos
push
push
cmp
sub
icebp
aaa
lea
push
pop
dec
mov
mov
cmp
test
pop
jl
mov
jl
or
inc
shrl
dec
sub
add
xchg
sbb
xchg
sub
dec
test
adc
into
rclb
xor
jg
xor
js
pop
jge
jl
inc
test
pop
xchg
xor
cmpl
pop
popa
and
push
mov
sub
scas
jb,pt
pop
mov
adc
push
pop
jge
dec
addr16
dec
lock
test
pop
mov
mov
aaa
pop
clc
mov
stos
inc
fildll
sub
sub
mov
or
and
cwtl
hlt
and
icebp
pushf
and
fcomps
and
and
and
sub
xor
pop
and
aam
xor
dec
scas
cs
adc
pop
sub
pop
lock
imulb
cld
jle
in
insl
pop
mov
in
adc
jle
push
xchg
je
push
aaa
jl
and
jb
pushf
mov
cld
lock
xor
mov
js
push
in
push
xchg
lock
sbb
and
shr
push
inc
std
mov
inc
mov
test
mov
cmp
divb
pop
pop
jge
and
aaa
sub
js
sbb
add
std
push
adc
shrb
and
aaa
nop
push
cwtl
in
dec
mov
cli
mov
js,pt
push
jo
out
cs
in
inc
mov
js
decb
call
adc
mov
cli
fbstp
pop
mov
jle
xchg
inc
lea
fdivrl
es
insl
fstps
je
jle
in
pop
inc
mov
pusha
rolb
dec
xor
mov
es
pop
mov
cmc
in
mov
enter
loop
aaa
pushf
jle
inc
test
js
cli
aaa
pushf
push
sbb
mov
loopne
pusha
push
enter
js
inc
pop
insb
inc
cli
and
inc
push
cmp
push
mov
sbb
add
or
aaa
clc
push
out
into
xchg
fsubl
les
push
mov
inc
adc
insb
mov
push
js
dec
mov
xor
outsb
or
dec
js
cs
cmp
and
jae
test
std
shrb
pop
mov
adc
enter
inc
mov
fnstsw
jl
pop
cli
aaa
insb
dec
push
cld
cmp
push
sub
or
lds
or
fucomp
mov
mov
mov
js
cmp
je
lods
dec
popf
jl
push
jecxz
mov
sub
push
insl
cmp
loop
jno,pn
lds
push
jle
mov
pusha
pop
sbb
adc
sub
push
shlb
jae
clc
adc
rorb
mov
cs
mov
jb
pop
nop
fsub
cltd
js
xchg
outsb
in
adc
xor
xor
inc
in
into
hlt
das
in
pop
mov
jle
das
frstor
pop
and
pusha
loope
dec
leave
pop
fnsave
es
cmp
xchg
pushf
or
loope
in
push
fstpl
dec
pushl
or
jno
cmc
push
jb
loop
ja
shll
shl
pop
leave
push
jbe
mov
jnp
movsl
xor
cwtl
shlb
adcl
loop
aaa
jns
and
popa
notb
aaa
imul
lock
mul
mov
not
mov
test
xor
mov
cmp
js
push
out
gs
insb
add
xor
cmp
sbb
pop
add
dec
lret
sarb
mov
shlb
incb
fnstsw
pop
jne
decb
jnp
pop
xchg
inc
cmp
xor
sub
adc
aaa
sbb
xor
out
cli
xor
popa
sti
mov
iret
push
addr16
xchg
les
push
test
nop
dec
imul
clc
js
pop
push
call
call
and
push
cmp
frstor
mov
cmc
adc
js
divb
xor
jne
js
inc
mov
js
mov
mov
insb
jbe
pusha
and
clc
push
imul
mov
dec
fnsave
push
or
add
or
jnp
adc
in
jo
pop
pushf
bound
sub
mov
mov
xor
in
sub
lods
dec
cmp
pusha
jnp
out
jno
jb
and
pushf
sbb
pop
ljmp
out
fdivrl
mov
dec
clc
in
loope
jbe
into
js
fsin
movb
mov
inc
stos
cmp
fwait
jge
or
test
testb
jge
mov
hlt
adc
dec
and
push
inc
jmp
fdivl
jl
adc
pop
aaa
test
loopne
insl
fs
mov
jns
pop
sub
nop
jmp
call
jge
push
sbb
jns
pop
cmp
cmc
push
cmc
adc
js
inc
js
xor
push
pop
adc
sub
sbb
pop
loopne
imul
js
sarb
and
in
mov
cmp
scas
js
mov
adc
xor
jp
in
pop
jmp
pusha
and
dec
pushw
adc
js
push
mov
pop
adc
sbb
jecxz
mov
pushf
jp
or
cld
or
call
pop
jg
xchg
jmp
push
fs
js
cmpsb
nop
xchg
xchg
js,pt
in
cmpb
cmc
ja
js
dec
mov
pusha
fs
loopne
mov
mov
and
aaa
or
mov
lcall
xchg
idivl
enter
cmc
mov
inc
pop
addr16
jnp
pusha
mov
je
mov
or
in
pop
lock
or
nop
ljmp
pop
mov
mov
in
dec
xor
jle
and
push
rcrb
js
insb
add
push
xor
nop
popa
sub
lret
mov
fdivrl
iret
bound
pop
jge
sub
mov
in
adc
inc
mov
rclb
push
mov
mov
in
das
insb
cmp
add
dec
cmp
add
xchg
jo
pop
mov
aam
inc
mov
jae
test
js
pop
jno
jb
frstor
mov
pop
bound
popf
adc
js
das
and
js
push
ds
in
insb
or
push
or
in
and
ror
jo
pop
pushf
xor
je
mov
test
pop
pop
cmp
add
or
cmovae
pusha
xlat
cwtl
hlt
and
test
jge
icebp
adc
dec
in
fists
in
fdivrs
ret
push
dec
mov
fs
mov
dec
aaa
jnp
cmp
bnd
push
push
dec
mov
popa
jge
insb
push
jge
dec
negb
xorb
dec
fistl
andb
out
cld
pop
pop
pop
inc
mov
lock
imul
fiaddl
mov
bound
cld
or
insl
sarb
dec
push
cmp
imul
push
push
sbb
data16
mov
mov
pushf
in
mov
cld
stc
mov
cmc
dec
sti
mov
sub
cli
mov
ret
jo
pop
mov
cltd
add
jb
fidivl
pop
testb
ja
xchg
out
sbb
cmc
jo
push
in
mov
fildll
movl
sahf
fsubs
adc
loop
rcrl
mov
ret
gs
jo
sarl
das
mov
inc
sbb
add
js
push
fld
pop
clc
mov
jecxz
mov
xor
xor
push
cmc
xchg
fldl
enter
jo
sub
lea
adc
jge
pop
out
lods
push
les
jae
inc
pop
fs
push
test
lcall
mov
xchg
imul
jge
js
outsb
into
jo
fcoml
lea
fisubrs
mov
cmp
push
jb
js
cli
push
or
sbb
test
cmp
dec
fnsave
dec
push
test
push
out
pusha
jl
dec
fsts
mov
les
xor
adc
and
xor
push
frstor
hlt
out
lret
add
mov
jp
js
fisttpll
xor
add
repnz
in
fdivrs
fnstsw
xor
cmc
xor
sub
adc
or
cli
dec
out
scas
cmc
movsb
pop
xchg
push
test
jl
popf
mov
push
pop
pop
dec
jb
adcb
xor
lret
pop
ljmp
push
mov
dec
jne
push
push
std
jne
pop
mov
les
aam
loop
divb
sbb
push
pop
and
ljmp
jle
in
mov
dec
in
xor
or
sbb
sub
cmp
inc
fstl
bound
pushf
mov
push
mov
dec
in
mov
mov
loop
hlt
xor
adc
loopne
in
and
pop
xor
pop
push
jb
mov
frstor
cmc
clc
in
sbb
cmp
jno
cmp
sub
into
clc
jne
insl
pop
aam
je
js
jne
xor
ja
outsb
pusha
push
dec
lahf
push
pop
ficompl
mov
jne
fdivp
cmc
add
adc
mov
xor
pusha
xor
cmc
inc
pop
xor
adc
sbb
or
loopne
into
pop
rclb
std
and
dec
mov
dec
mov
shr
negb
push
add
push
clc
inc
push
cmp
fnsave
dec
push
xor
mov
dec
mov
cmpsb
pop
mov
les
into
dec
add
sub
xor
push
dec
cmp
push
mov
adc
jne
xor
mov
push
int
lds
or
xor
or
jae
mov
insb
stos
jne
sub
sub
push
pop
push
push
xor
pop
frstor
je
dec
fsubs
outsl
jle
push
pop
ja
pop
or
sbb
xor
es
dec
sahf
or
jae
cmp
xchg
xchg
shll
rorb
repz
sub
cwtl
jp
add
or
ret
stos
test
loop
mov
lock
and
gs
dec
lret
xchg
jmp
dec
in
cmp
push
in
into
push
and
mov
out
popf
insl
rcr
inc
mov
mov
loopne
lret
add
fmuls
and
xchg
lahf
or
push
pop
xor
dec
jo
xor
leave
adc
jo
out
add
dec
mov
insl
fisubs
mov
lret
fs
push
pop
mov
js
fistpll
in
sub
pop
ja
mov
gs
mov
mov
sahf
mov
mov
mov
fildll
fildll
inc
rcrb
insl
sti
add
fldt
or
mov
sub
mov
cmpl
add
insb
mov
movsb
dec
das
mov
mov
mov
sbb
jmp
insl
aam
jp
or
cwtl
inc
mov
sahf
sub
mov
divl
mov
xor
add
jns
sbb
cli
lea
pop
jl
mov
inc
jae
int
pop
dec
mov
sbb
fiaddl
lock
push
xor
adc
test
jae
lds
ret
push
cld
sub
xor
inc
xor
xlat
pop
data16
jo
idiv
ficoms
ds
mov
shlb
or
jecxz
xchg
xchg
jo
xchg
pop
and
jbe
jo
xor
push
divb
shlb
movsb
cmp
pop
sbb
push
cwtl
ret
mov
sbb
ja
int
add
mov
stc
pop
nop
shll
push
xor
mov
push
insl
shr
push
jl
icebp
cwtl
xor
cmp
jo
jge
cmpsb
fildll
mov
dec
xor
pop
mov
xchg
jp
mov
loopne
pshufw
ret
xchg
mulb
std
push
lcall
jae
pop
lods
int3
mov
call
pop
inc
push
xlat
dec
fucomi
push
sub
push
pop
jo
cltd
rcl
inc
adc
or
jo
jmp
mov
cmc
jo
mov
dec
xchg
out
mov
ljmp
adc
push
jbe
mov
push
pop
jo
xor
enter
push
jae
xchg
push
imulb
lock
mov
fisubl
push
jo
data16
test
fst
jp
adc
mov
ljmp
idivl
add
jo
push
push
jae
pusha
sahf
xchg
mov
sub
adc
lock
push
ret
dec
inc
add
hlt
mov
xchg
out
fistpl
fisubrl
xor
es
aam
cmp
mov
sub
and
mov
loop
jo
inc
push
sub
or
scas
sub
inc
and
xor
add
bound
rep
shrl
push
xor
fisubl
jo
xchg
push
lods
cmp
shlb
lock
dec
addr16
les
jo
shl
pop
mov
adc
mov
push
popa
mov
dec
repz
jmp
jbe
pop
jo
mov
add
jo
cmp
mov
pop
mov
inc
jo
test
cmp
jo
cltd
mov
insl
cmpsl
divl
xchg
jg
lock
mov
mov
fimuls
fcoms
arpl
outsb
mov
mov
push
push
dec
call
test
out
mov
pop
stos
lds
imul
mov
xor
mov
sbb
mov
jb
jbe
cwtl
mull
cmpsb
sbb
xorb
insl
xchg
dec
dec
nop
cmpsl
cmp
insl
shll
ret
push
push
mov
out
jo
gs
xchg
out
xchg
ss
loopne
movsb
pop
jo
xor
je
xchg
push
mov
lock
jns
sbb
out
adc
andl
rolb
dec
jne
xchg
rol
jmp
cwtl
divl
lods
scas
mov
xchg
aad
nop
sub
xchg
jne
dec
inc
push
jo
rcrl
jo
adc
push
adc
aas
jl
in
ds
push
jo
mov
lahf
lea
push
movb
and
pop
aam
cwtl
lahf
mov
test
outsb
mov
cmpsl
out
lret
or
mov
pop
ret
es
push
int
sub
sbb
jo
xor
push
add
jo
add
cmp
xchg
or
addr16
and
mov
insl
dec
mov
movsl
pop
nop
jne
jo
rorb
xchg
push
inc
cmpb
loope
test
jo
and
mov
mov
sarl
jo
mov
jb
jo
loopne
adc
pop
mov
jp
xchg
mov
out
mov
outsl
lods
dec
jo
xor
js
mov
daa
mov
scas
insl
jge
and
imul
insb
push
push
popf
mov
jecxz
sahf
jno
jo
xor
shlb
pop
in
lahf
jp
jns
sahf
imul
sub
mov
xchg
out
jae
pushf
mov
adc
pop
and
jae
xchg
pop
rcrl
lock
or
and
test
ret
xchg
in
lret
ror
mov
mov
dec
inc
mov
ja
sbb
sub
cli
sti
lret
jo
scas
sbbb
xchg
out
cmp
jbe
jb
push
sbb
loope
mov
and
lret
and
jo
mov
in
cltd
mov
data16
aad
sub
xchg
sbb
ja
mov
jo
and
int
stc
mov
and
adc
cwtl
or
ja
push
ds
stos
movsb
and
js
push
inc
arpl
jo
ja
add
hlt
call
mov
imul
mov
inc
out
or
jo
or
pop
xchg
jle
pop
push
push
mov
insl
dec
enter
jge
test
cmc
adc
or
mov
scas
pop
push
mov
jo
in
pop
lret
mov
jae
cmpsb
jg
dec
mov
xchg
xor
jo
cmp
xor
xchg
out
or
inc
lds
mov
dec
xchg
xorl
stos
add
das
pop
shr
adc
xor
adc
movsb
xlat
xchg
out
or
dec
sbb
add
fwait
scas
testb
cmp
adc
les
xchg
jle
in
scas
mov
iret
insl
in
sub
jmp
fucom
xchg
lret
add
xchg
add
cmp
rcrb
cld
mov
jo
cmpsl
loope
inc
mov
xchg
or
cli
test
testb
sbb
bound
add
xor
jnp
jp
jae
and
push
stc
jne
pop
jbe
jo
push
fdivr
xorb
repz
and
call
xchg
sub
lods
cmp
es
mov
lcall
pop
pop
jg
movlhps
mov
mov
push
xor
cltd
mov
or
and
in
mov
jo
aas
in
xchg
pusha
mov
das
add
mov
jnp
mov
jg
inc
sub
jo
loope
cmc
call
sbb
testb
cli
sbb
data16
jo
mov
sbb
nop
pop
mov
jo
add
jno
jo
adc
nop
cmp
popa
test
sub
jg
lock
push
xchg
xor
xor
jp
mov
and
sarb
hlt
arpl
in
pop
sub
bound
push
test
sbb
adc
jo
fistpll
arpl
cltd
sti
enter
fcmovnu
jo
mov
test
or
jo
cmp
mov
cmp
dec
xor
inc
and
decl
or
mov
int3
cmp
cmp
mov
lret
lods
orb
jo
les
dec
mov
das
add
dec
repz
loopne
cmp
mov
mov
inc
mov
lahf
mov
mov
jo
cmpsb
cli
xor
ja
mov
xorb
mov
insb
and
sahf
in
rclb
ss
sub
adc
xchg
pop
cs
out
xchg
jo
mov
bound
es
or
inc
jecxz
mov
xor
dec
insb
lcall
mov
jo
mov
mov
adc
mull
outsb
push
clc
sbb
xchg
xorb
aad
pop
jo
mov
or
scas
repz
dec
ss
ret
adc
pushf
leave
dec
cli
or
repnz
inc
and
popf
jne
lcall
inc
pusha
push
fmull
repz
fcmovnbe
pop
dec
repz
mov
lock
jae
push
cmpsb
mov
mov
pop
test
lock
mov
fidivl
xrelease
cs
test
sub
nop
out
test
stc
pop
mov
jle
xor
sar
loope
int
mov
pop
mov
cld
fnsave
and
fidivs
jo
dec
pop
cmp
sti
push
mull
cmpsl
adc
jp
sbb
in
adc
mov
in
repz
insb
lock
fldcw
mov
aas
adcl
dec
nop
cmp
jo
mov
in
popa
fadds
jo
add
adc
jo
or
xchg
xor
or
jb
test
jo
lea
daa
jo
das
pushf
in
loop
xor
test
add
jo
and
xor
push
or
inc
mov
xor
lds
xchg
mov
stos
xor
mov
xchg
xor
jo
lret
or
mov
jl
int
adc
fs
subb
inc
sub
rorb
jno
xor
call
rolb
into
sub
jo
sub
stos
jbe
insb
mov
xor
sbb
std
jo
daa
pop
xlat
or
shll
adc
jo
bound
mov
pop
ja
or
lret
ljmp
and
push
insb
pop
out
mov
lods
dec
lock
jo
pushf
daa
inc
sbb
xor
jo
jecxz
push
out
push
add
xchg
jo
xor
cld
outsl
insb
inc
mov
in
sub
sub
xor
mov
and
push
push
mov
pshufw
and
gs
mov
pop
popf
mov
mov
xchg
push
add
push
add
jo
mov
pop
jns
lret
or
sub
cs
mov
jnp
std
sbb
insb
and
call
ja
jbe
jle
add
adc
lods
loope
outsb
fnstenv
mov
cmp
sub
push
lods
test
insl
xchg
das
loope
pop
cmc
stc
mov
mov
aad
sahf
cmp
test
enter
int
mov
xchg
pop
fildl
call
lret
adc
gs
jo
mov
push
aam
movsl
enter
test
pop
lcall
cltd
adc
mov
jno
pop
pusha
xor
lock
lcall
pop
ds
jae
insl
push
fidivl
nop
insb
jbe
ret
jo
jp
loopne
out
or
mov
push
pop
sbb
sbb
in
cmp
arpl
dec
sub
aad
out
sbb
movsb
sahf
jns
ficomps
bnd
cwtl
xlat
push
or
adc
lea
imull
ret
daa
jo
mov
mov
enter
enter
jmp
jnp
cmp
dec
jo
test
dec
imul
mov
out
jp
inc
es
clc
insb
xchg
jo
mov
jl
fucomp
jo
cmpsl
cld
loop
jo
shl
dec
xchg
enter
rcrl
add
pop
out
mov
push
xor
add
xorb
mov
xor
jl
fidivs
jmp
call
inc
jecxz
xchg
xchg
sbb
jb
cmp
enter
iretw
and
mov
mov
pop
and
mov
insl
rcll
nop
sub
mov
push
jo
mov
xchg
dec
mov
js
stos
lds
insl
or
mov
lea
test
ja
test
xchg
jo
out
imul
lea
xchg
xchg
rcl
in
sub
add
cmc
jo
add
repz
jo
cli
pop
test
or
jp
lods
pop
or
jb
ljmp
pop
mov
dec
insl
pop
cmp
mov
or
jae
inc
mov
imul
mov
push
add
sbb
jge
aaa
inc
into
mov
push
xor
mov
and
jo
inc
rolb
imul
insb
insl
test
call
mov
jo
call
stc
sbb
jo
je
xorl
sbb
or
insl
push
fistl
fidivs
mov
loope
and
lcall
jo
int3
outsb
stc
out
les
dec
fsubrs
test
jo
add
push
insl
xchg
sub
dec
add
dec
iret
cmp
pushf
jns
insb
xchg
in
jo
ret
lods
push
add
dec
int3
adc
push
aam
jo
inc
jmp
pop
arpl
xchg
add
inc
adc
in
arpl
jo
mov
push
idiv
adcl
sub
in
pop
jo
lahf
sbb
div
push
push
jae
push
scas
cmp
aad
outsl
mov
cld
jo
rorl
push
cmp
dec
jmp
sbb
jo
push
push
xor
and
inc
cmc
ret
das
push
jae
pop
data16
pop
shl
ljmp
inc
jo
jge
jg
push
jo
xchg
sub
inc
sti
test
jo
outsl
mov
push
dec
ja
cmp
jmp
jae
lds
cmc
test
cmpb
insb
adc
out
ss
mov
mov
push
pop
jo
into
ss
in
pushf
imul
adc
or
sub
es
dec
jo
lods
stos
aas
inc
clc
out
jo
in
imul
xlat
loope
dec
fsubs
inc
push
cmc
or
sbb
mov
pop
mov
scas
insl
xchg
sub
push
daa
cmp
and
shlb
xor
pop
sti
xor
popf
xor
pop
mov
stos
pop
fadd
push
popa
add
jg
pop
repz
into
jbe
xchg
pop
imul
fcoms
lea
fsubs
call
push
pop
push
test
pop
stos
jecxz
clc
push
lods
adc
inc
ret
iret
js
push
fistps
push
mov
mov
or
sarb
add
pop
and
and
clc
mov
scas
mov
scas
insb
cmpsb
jmp
dec
pop
lahf
imul
data16
sbb
xchg
pop
push
fldl
xchg
sbb
or
mov
out
lcall
sbb
rcl
bound
popl
dec
imul
push
mov
fimuls
outsl
fimull
imul
sub
and
aaa
mov
test
lock
call
add
sbb
and
add
call
mov
lea
ja
cmc
pushf
imul
clc
pusha
pushf
test
add
mov
lea
jmp
pushf
neg
test
bt
cmc
cmp
xor
stc
test
clc
sub
movb
mov
movw
lea
call
cmc
cmp
cmp
pusha
push
pushl
lea
jae
test
cmp
cmp
jmp
pusha
hlt
sub
cs
inc
push
loop
leave
pop
fisubl
inc
jmp
pop
pop
popa
popl
push
pop
fsubp
xor
jl
ficompl
add
mulb
xchg
std
fsubs
lret
sar
lcall
xlat
pop
push
and
cmp
jnp
dec
inc
cmpsb
in
sub
adc
sbb
jmp
stos
adc
dec
popa
lret
iret
xor
and
mov
push
jge
out
sbb
mov
stc
js
sbb
pusha
and
das
repnz
mov
xor
bound
into
xlat
mov
imul
icebp
sub
gs
and
ljmp
push
sar
push
and
adc
push
sbb
add
fildl
es
stos
or
mov
nop
frstor
int3
and
sbb
cmpsb
jmp
mov
push
add
pop
repz
inc
in
leave
test
xchg
repnz
enter
data16
inc
sarl
push
mov
into
sbb
push
xchg
sub
mov
jb
sub
inc
mov
dec
xor
xor
and
or
cltd
addr16
fistpl
clc
xchg
jge
clc
sarb
sbb
mov
lcall
rorl
out
dec
cld
jb
add
jbe
lret
xor
imul
or
sbbl
bt
pusha
cmp
push
movw
push
lea
ja
mov
mov
inc
setns
inc
shr
xor
xchg
aad
btr
mov
sub
not
mov
cmc
push
and
mov
push
pusha
sub
mov
call
lea
jae
push
mov
jmp
xchg
es
xchg
fs
cmp
cmc
int
sbb
xor
fld
loopne
repnz
or
cwtl
push
or
or
roll
push
add
xor
xor
sub
xchg
sbb
fcmovu
mov
ljmp
jp
lods
rcrl
cmp
aad
pop
dec
mov
dec
mov
cmp
cmp
or
pop
mov
cmp
pop
push
sti
mov
or
out
subl
or
adc
cli
jmp
xchg
xchg
sbb
inc
xor
cltd
into
dec
sti
repnz
mov
mov
repz
sarl
rcrb
and
mov
pop
sub
dec
fwait
inc
movsl
call
ds
loop
aad
repnz
lock
jae
flds
insb
stos
dec
mov
or
mov
int
cmp
push
sub
aam
shl
lea
add
cmp
std
adc
or
fisubs
test
adc
lock
push
xor
cmp
push
dec
sub
jb
iret
pushw
and
dec
loop
fsubs
mov
leave
idivl
stos
mov
enter
xor
cmpsb
leave
adc
sbb
inc
and
push
mov
movl
and
jmp
pusha
call
loop
data16
cmp
xchg
ds
test
and
outsb
sti
add
adc
gs
leave
les
mov
loope
jb
push
mov
mov
dec
jge
pop
out
xlat
loopne
pop
ss
leave
or
cli
xor
lahf
insb
add
rolb
shrl
dec
out
pop
subb
iret
std
mov
cld
pop
cmp
aad
test
scas
jge
sahf
or
cltd
mov
pop
push
adc
dec
cmp
push
mov
jecxz
dec
or
stc
fs
les
je
cmp
rol
mov
cmc
mov
pop
clc
out
sbbl
cmp
xchg
xor
xchg
adc
and
andb
mov
rclb
mov
jno
pop
sub
sbbl
imul
adc
or
loope
ljmp
enter
daa
cmp
ret
xchg
fptan
roll
out
lret
xchg
mov
and
cmp
cmp
ljmp
adc
and
imul
les
sbb
jae
add
pushf
pop
cs
mov
pop
out
into
lahf
ds
test
or
and
fldt
xchg
push
lea
push
or
adc
push
cmp
in
test
push
dec
loopne
and
gs
mov
mov
cmp
pop
rcrb
pop
mov
mov
rorl
aas
and
jno
add
jmp
pop
cli
dec
sub
mov
je
jmp
test
mov
mov
mov
xchg
xchg
mov
out
jne
sbb
cmp
dec
fidivs
inc
pop
xchg
add
and
cmp
cmp
xchg
xor
jns
push
mov
ret
add
push
cmpsb
and
xchg
mov
pop
mov
mov
or
adc
test
bt
add
cmp
cmc
call
clc
sbb
inc
mov
int
aaa
ds
mov
ljmp
and
mov
inc
dec
aam
cmp
add
scas
mov
xchg
or
dec
sbb
arpl
nop
jp
fstpt
pop
daa
shlb
xchg
hlt
xchg
fnstcw
lcall
cmp
push
mov
jae
pushw
imul
or
outsb
std
cld
daa
xor
dec
loopne
xor
gs
andl
xor
jle
shr
loope
fsubl
fcmovbe
pop
pushf
lea
ja
stc
jno
sub
bswap
rol
sbb
shr
add
test
movzbw
mov
sub
mov
clc
repnz
jmp
movb
call
push
add
pushf
call
subb
sub
lods
cmpsb
popa
jne
mov
dec
ret
std
jne
mov
lret
test
loop
cmpsl
mov
push
loope
jg
lods
cmpsl
mov
add
sbb
jne
call
test
mov
mov
mov
stc
jne
fmuls
lods
outsl
xchg
jne
or
lods
outsl
mov
and
xor
jne
bound
lods
outsl
out
jne
loop
mov
lods
push
jne
decb
add
add
add
mov
or
mov
add
popa
mov
add
shrl
add
sub
and
mov
in
jbe
lods
outsl
movsb
jne
lcall
lods
cmpsb
divb
cli
mov
stos
xor
add
xchg
adc
addb
test
sub
stos
addb
add
mov
mov
mov
nop
inc
adc
sub
les
add
mov
lods
jo
jne
mov
fisubrl
xchg
xor
mov
add
mov
bound
sbb
divb
mov
iret
jne
les
and
mov
mov
outsl
out
jne
clc
xchg
lods
jbe
xor
jne
or
aas
inc
jmp
inc
jne
sub
ret
mov
push
xor
and
mov
lods
outsl
lea
jp
ljmp
mov
add
nop
movsb
add
shll
dec
adc
lods
cmpsl
mov
or
lods
push
jne
cld
mov
addr16
add
mov
fstp
lods
outsl
out
jne
adc
lods
cmpsl
mov
sub
lods
outsl
popf
jne
cli
mov
cmpsl
mov
dec
jne
adc
lods
push
jne
xchg
mov
and
mov
mov
xchg
jne
push
mov
mov
push
jne
sbb
sub
xchg
jp
adc
lea
jae
xor
shld
mov
pusha
pop
sub
pushf
mov
dec
bts
mov
cmc
sub
call
fiaddl
leave
adc
adc
cwtl
mov
test
mov
inc
inc
shr
inc
arpl
push
dec
fiaddl
enter
fsubrs
fisubrl
out
mov
jecxz
sub
mov
push
aad
js
mov
mov
mov
lods
mov
loop
fisubs
or
incb
imul
or
lods
ret
das
and
adc
ljmp
inc
or
mov
mov
adc
jle
pop
mov
and
stc
adc
jg
push
mulb
cmpsb
xchg
xchg
sbb
ja
test
push
add
loop
pop
xchg
mov
inc
mov
clc
test
fmulp
push
cmp
mov
insb
mov
iret
aaa
and
fwait
xchg
cmpsb
aad
out
pop
adc
test
sbb
fldenv
ficoms
fsubrs
dec
add
and
mov
jb
cltd
xor
inc
pushl
call
lea
call
pushf
adc
pushf
pushf
movb
mov
lea
jae
pusha
movb
lea
jne
pushf
stos
pushf
lea
jmp
pushf
call
pushl
lea
jne
lahf
lahf
lahf
movb
not
call
pusha
call
lea
bswap
mov
push
mov
lea
setbe
setnp
jmp
clc
or
pushf
lea
je
bsr
add
add
dec
shl
add
sub
movzbw
pushf
or
shr
pushl
jmp
sbb
jl
push
ds
jno
cli
lahf
push
lods
mov
and
ja
rcll
insb
push
xor
mov
fmull
sbb
mov
movd
xchg
cmpsb
sbb
pop
adc
xchg
push
or
adc
jmp
xchg
sub
aaa
push
sahf
mov
mov
movsl
inc
or
and
nop
cmp
jo
hlt
hlt
jo
cmp
arpl
mov
and
mov
add
pop
add
jp
add
movb
pusha
jmp
dec
clc
stc
cmp
not
jmp
sbb
xor
je
loope
arpl
jl
adc
lods
ret
test
das
fmuls
ret
add
mov
pop
push
addr16
push
out
mov
ljmp
in
mov
sahf
movsl
js
inc
leave
dec
inc
xchg
pop
mov
jge
sbb
or
sub
dec
jecxz
hlt
cmc
mov
int3
shrb
mov
cmc
sub
imul
and
cmpsl
call
xor
push
cmpb
or
push
push
jmp
fstl
xchg
insb
lcall
mov
lea
xchg
mov
mov
fucomip
leave
cmpl
xor
fdivrl
mov
mov
in
or
sub
das
cmp
test
jno
xor
mov
xlat
out
mov
cmp
add
push
insb
push
pop
fbld
outsl
ljmp
int
and
or
enter
cmpb
pusha
pushf
jmp
cmp
pushf
call
movl
pushf
pusha
push
movb
lea
jmp
jmp
ret
xor
popf
stos
ror
cld
jae
in
adc
cs
push
lock
cmp
lea
ficoms
lret
imull
cli
sub
les
shlb
and
iret
mov
xor
fcmovnbe
lret
test
dec
mov
fcoml
cs
mov
xchg
repz
cld
rolb
mov
into
in
mov
inc
or
ss
inc
mov
cmp
sub
mov
cld
lret
cmp
xchg
and
pushf
movl
lea
je
bt
clc
pushf
cmp
call
pushf
pushf
stos
pushl
pushf
pusha
lea
jmp
lock
or
push
pop
pop
stos
imul
jo
inc
adcl
sbb
push
mov
repnz
mov
scas
fistpll
push
iret
push
cmpb
in
jge
pop
cltd
fwait
mov
nop
add
gs
cmp
cmp
cmp
cmp
adc
adc
cmp
or
cmp
pop
lds
into
roll
adc
dec
mov
fcoms
inc
add
pop
xchg
pop
sahf
jo
jnp
and
sbb
pop
dec
shlb
sbb
sahf
inc
in
aam
and
int
xchg
mov
lds
adc
adc
stos
xor
stc
jne
inc
pushf
dec
ret
push
loopne
aaa
sbb
push
mov
inc
lgs
or
movl
pusha
mov
jmp
popa
stc
push
pop
mov
pop
sbbl
or
in
pushf
jl
cmpsb
lds
ljmp
xor
adc
bnd
idiv
dec
jge
lret
loope
mov
out
cmpsb
jl
inc
adc
movsl
or
sahf
lds
sub
lds
movzbl
mov
clc
jmp
bt
mov
cmp
test
call
sub
dec
pusha
out
inc
jl
mov
repz
mov
add
imul
mov
lcall
mov
mov
or
push
jne
xor
fcompl
adc
ja
sbb
sarb
sub
out
dec
and
fstpl
pop
adc
inc
pop
bound
mov
loope,pn
fsubp
sti
movsl
mov
sarb
push
add
jg
repnz
rcr
cmpl
cmpl
stc
js
push
orl
fsubrl
test
push
push
data16
ds
cmp
cmpsb
add
ret
mov
stos
xchg
sub
lods
mov
subl
clc
push
enter
mov
imul
xlat
pop
and
dec
fstpl
jb
ror
xorl
mov
jns
or
ja
mov
xchg
es
jae
adcb
sbb
xor
jb
movsb
fidivrl
sub
add
add
add
add
add
xor
enter
or
add
add
add
add
cmp
rclb
and
cli
cmp
fcoms
and
cmp
and
add
add
add
add
jmp
add
xchg
cmp
sub
add
add
add
add
xor
lock
cmp
xor
add
add
add
add
in
add
xchg
cmp
cmp
add
add
add
add
cmp
inc
push
and
mov
cmp
dec
push
and
xor
cmp
adc
add
cmp
sbb
add
xor
and
add
or
cmp
add
int
mov
jmp
ds
int3
cmpsl
scas
sbb
mov
xor
adc
xchg
clc
push
inc
or
loop
sbb
or
dec
idiv
ds
aas
lcall
or
lods
inc
pop
sbb
aas
fsubrl
int3
out
dec
mov
mov
mov
shlb
or
add
fdivrl
or
xor
fs
sbb
and
std
add
cmp
mov
jge
lods
dec
in
mov
clc
sahf
push
fiaddl
pop
push
bound
popa
inc
jbe
xor
insl
cmp
rorb
repz
scas
lds
pop
pop
add
in
jecxz
pop
stos
xor
movsl
hlt
lret
ret
repnz
or
mov
fbstp
inc
arpl
mov
mov
add
mov
in
or
pop
pusha
push
dec
inc
sets
pushf
mov
jmp
repnz
jmp
adc
mov
mov
mov
movb
pushl
ret
adcl
inc
xchg
cwtl
jecxz
mov
lret
xchg
lret
icebp
mov
pusha
pop
lahf
jmp
andl
sbb
inc
es
mov
std
test
bound
loopne
cmp
fmulp
into
cltd
ss
fdivp
cli
gs
mov
jne
ja
sarb
rol
lds
xchg
jecxz
popa
fistpl
loope
dec
mov
mov
sub
sbb
fsubrl
outsb
cmpsb
das
mov
arpl
outsl
subl
imul
and
xchg
xor
xchg
xorb
fdivs
repz
push
dec
outsb
mov
cmpsb
add
add
or
sub
xor
rcrl
loopne
inc
cs
ret
pop
clc
notl
mov
int
sbb
lds
outsb
adc
mov
pusha
xor
leave
pop
ds
nop
data16
pop
dec
aad
dec
sti
int3
push
out
nop
sub
filds
es
pop
add
sbb
ja
adc
sbb
stc
test
test
inc
mov
movsl
cmp
daa
xor
lret
xor
setg
pusha
repnz
mov
jmp
lea
jae
setb
inc
sets
mov
pusha
seto
setle
pushl
inc
jmp
jmp
jmp
lcall
fidivl
push
jb
or
outsb
daa
sti
mov
arpl
push
divb
xchg
inc
and
mov
movsb
ss
scas
xchg
pop
js
imul
loope
adc
mov
push
or
mov
mov
mov
push
or
add
sub
mov
aad
not
mov
mov
sub
ror
imul
jne
xchg
lret
ss
or
movsl
popa
or
popa
cmp
cli
cmc
push
testb
lahf
sub
mov
and
mov
inc
je
clc
pusha
pushf
cmp
pusha
movb
call
iret
in
loope
movsb
sub
or
je
cmp
pop
jmp
aad
mov
mov
mov
cmp
jo
pop
dec
or
pop
call
lcall
xchg
imul
xchg
je
insl
inc
outsl
in
aam
add
mov
cmpsb
or
cmp
xchg
movsb
ds
stc
jb
push
mov
mov
fcomps
dec
insl
aad
incb
clc
rcrb
repnz
adc
orps
sbb
xor
imull
test
inc
cmp
in
jbe
test
pusha
xchg
fdivl
cmp
addr16
mov
bt
bt
bt
call
scas
mov
mov
data16
movsl
dec
fwait
mov
cwtl
or
mov
into
shl
push
mov
add
xor
adc
sahf
or
and
add
mov
stos
mov
add
mov
or
sub
imul
les
mov
inc
add
aam
inc
xor
lret
push
mov
out
inc
in
scas
mov
lds
mov
movsl
testl
shlb
ret
and
mov
cmpb
jl
pop
insl
sub
mov
or
add
and
lret
fdivs
movsb
xchg
enter
roll
inc
or
add
inc
and
in
adc
mov
fsub
nop
fstps
dec
mov
add
mov
out
inc
insl
jbe
sbb
push
or
and
mov
inc
push
push
xor
cs
insb
add
xor
push
call
daa
pop
in
popf
daa
mov
scas
sbb
cli
mov
cmpl
push
gs
imul
test
cmpsl
test
xchg
sub
cwtl
xchg
inc
and
or
mov
fdivl
je
cmc
adc
btc
rcr
mov
pushf
cmpb
movb
pushf
call
lds
lds
jae
sub
cmp
scas
mov
lret
or
xchg
int3
clc
loopne
hlt
std
adc
iret
fs
test
ljmp
test
in
cmpsl
jecxz
cmc
nop
xchg
push
dec
out
inc
leave
add
adc
jecxz
lea
push
cmp
aas
out
adc
adc
in
cmp
outsl
mov
adc
sbb
add
insb
jp
jbe
andl
nop
jecxz
mov
ds
les
loopne
mov
xor
repz
xlat
inc
add
lock
mov
sahf
xchg
pop
div
lcall
mov
cmpsb
push
icebp
out
or
aam
adc
movsb
adc
loopne
ja
cmp
ja
orl
or
out
cmp
mov
aas
push
cmpsl
push
xchg
mov
or
add
ja
aaa
enter
test
fs
pop
stos
pop
loop
int3
mov
sub
ja
adc
xor
mov
ret
xor
sub
inc
jecxz
push
sarb
adc
and
aad
pop
add
jne
push
addr16
inc
pusha
add
push
xor
pop
in
inc
stos
cmp
fwait
jecxz
iret
and
pushf
xrelease
int3
imul
or
push
daa
xchg
mov
loope
cmp
mov
jns
stos
int
mov
sub
push
jmp
popa
fs
jg
lock
dec
pop
mov
ret
inc
dec
std
movsl
add
jge
lahf
movsb
xchg
cs
cmc
mov
mov
push
addl
mov
ficoms
movsb
mov
inc
mov
inc
addr16
mov
movsb
stc
xchg
fcom
scas
in
test
and
xchg
inc
stc
xchg
loope
sbb
mov
loope
sub
jne
jmp
lea
jne
clc
sar
aam
sub
or
cmp
push
mov
rol
add
call
sbb
jge
int3
inc
in
outsb
xor
sarb
loopne
mov
js
jno
sub
aaa
jp
adc
imulb
hlt
sti
gs
dec
mov
repz
jecxz
data16
int
sbb
jmp
dec
adc
frstor
fildl
inc
call
push
loopne
outsb
xchg
xor
iret
xor
in
popf
fwait
and
inc
jl
mov
mov
or
rorb
lds
cltd
mov
inc
fcmovne
int
mov
pusha
adc
ljmp
imul
jnp
lods
inc
decb
hlt
add
bound
out
pop
aad
xchg
jne
dec
addr16
iret
or
fldl
subb
xor
outsb
ljmp
repnz
movsl
and
mov
pop
jns
jl
mov
mov
and
mov
testl
mov
mov
push
add
shl
mov
or
and
dec
decl
ret
ret
push
pusha
and
loope,pn
and
sahf
sbb
divl
negb
sarl
rcrb
adc
sub
jecxz
sub
xchg
dec
iret
lea
sub
and
cwtl
cmpsl
cld
add
repz
sbb
mov
mov
repnz
jle
testl
cmpsb
loopne
gs
push
cltd
push
icebp
dec
imul
sarl
or
or
outsl
aas
mov
pop
and
or
add
cld
cmpl
lods
sarb
lret
subb
loopne
jnp
pop
push
imul
xchg
ret
cli
orl
repz
aas
mov
xor
mov
or
rolb
xor
jmp
add
push
push
js
arpl
gs
add
or
pop
xchg
mov
mov
or
adc
mov
repnz
dec
sub
in
mov
xchg
js
pop
jbe
fnstenv
and
jle
dec
xor
mov
rorl
repnz
sbb
jecxz
mov
leave
xor
mov
scas
pop
mov
pop
push
jmp
inc
out
push
movl
pusha
lea
jmp
adcb
lahf
mov
leave
test
push
dec
mov
rorb
push
dec
jns
imul
sub
aaa
enter
jmp
mov
cmpsl
xor
add
and
pop
push
insl
shl
mov
mov
xchg
lret
sub
pop
jg
mov
jns
rol
enter
hlt
shll
or
adc
lahf
test
es
jl
icebp
pusha
and
fists
xchg
dec
cmc
test
shl
jmp
lea
jb
pushf
push
lea
je
pushf
pusha
pusha
lea
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
cmp
icebp
and
scas
into
add
sub
jno
cmp
mov
or
mull
daa
cwtl
cmp
or
xchg
inc
push
loope
lcall
ljmp
cs
jge
dec
xorb
lods
movsb
jae
add
pop
and
dec
outsb
imul
stos
aaa
mov
repnz
loope
xchg
jae
test
push
jecxz
dec
outsl
bound
fs
and
or
lret
pushf
cmp
mov
ljmp
or
or
push
stc
or
jo
jp
and
mov
in
sti
mov
jmp
test
mov
sbb
and
or
inc
mov
int
adc
push
mov
sti
mov
test
and
inc
andl
jge
cld
lcall
fdivrp
inc
sbb
rcrb
and
cli
lock
push
mov
pusha
imull
out
fmuls
faddl
call
cld
call
add
int3
mov
hlt
mov
mov
hlt
cld
mov
add
hlt
les
cwtl
mov
nop
mov
lods
pushf
mov
mov
mov
test
lods
call
xor
lea
je
pusha
push
call
call
push
mov
mov
jg
sub
out
push
ret
mov
mov
mov
or
mov
jecxz
xchg
sbb
xchg
mov
mov
fadds
cmp
mov
add
or
repnz
mov
push
clc
vmread
gs
cmp
mov
negl
test
in
repnz
jge
dec
scas
adc
cmp
int
mov
or
fdivrl
add
dec
cmc
ljmp
xchg
push
in
pop
push
cltd
dec
fmuls
jnp
sbb
dec
add
or
arpl
nop
xchg
call
clc
dec
mov
imul
mov
vpminuw
or
aad
aad
out
xlat
pop
shrb
adc
ljmp
and
in
test
xor
cmc
add
cli
sbb
dec
or
cmp
pop
shlb
lea
lahf
push
fimull
mov
and
popa
inc
xlat
jl
dec
pusha
mov
clc
pop
rclb
cmpsl
push
push
out
mov
mov
jp
aas
inc
adc
test
cs
push
sbb
dec
pop
notl
pop
data16
or
andl
aas
jae
iret
dec
or
mov
cmp
call
roll
jb
iret
pop
push
test
sbb
xchg
push
xchg
pop
aam
xchg
jbe
mov
push
jle
aad
xlat
dec
sbb
push
xor
and
push
mov
mov
jns
out
pushf
push
and
mov
mov
push
inc
mov
and
rcll
inc
push
imul
jle
dec
aam
repnz
std
jecxz
loopne
into
jecxz
push
pop
cmp
adc
scas
aad
inc
scas
leave
int3
adc
pushf
or
fdivrl
push
lea
inc
bt
cmc
xor
mov
jmp
pushl
push
xor
bt
stc
cmc
bt
sub
push
mov
shr
call
mov
mov
fwait
mov
sbb
dec
enter
test
fcomps
xlat
rorl
ret
stos
push
pop
arpl
scas
mov
cwtl
add
mov
rcl
jae
inc
fldt
data16
sbb
dec
xor
jb
add
mov
call
inc
outsl
push
mov
pop
loopne
das
sarb
lret
jo
pop
repnz
add
icebp
pop
sbb
or
in
insb
or
dec
dec
and
jno
inc
dec
lret
cmp
faddl
in
aam
and
cwtl
lea
loope
mov
dec
je
or
leave
gs
or
mov
jbe
lds
jne
push
inc
xchg
inc
lds
sbb
loope
int3
inc
lock
xchg
pop
adc
leave
and
pop
gs
imul
movsl
imulb
rorb
sti
xchg
fs
dec
ds
adc
stc
repz
push
and
mov
ljmp
js
shl
sti
and
mov
scas
stc
cli
repnz
fistl
or
jmp
js
arpl
iret
xor
pop
jnp
dec
add
cs
mov
scas
xor
cmpsl
push
rcrb
mov
mov
cmp
arpl
fildll
insl
pop
lods
pop
std
stc
adc
mov
adc
or
jne
mov
cld
inc
jo
and
mov
fsubl
fistpll
enter
cmpsl
aad
dec
add
pop
xlat
push
movsl
sub
stc
dec
adc
or
cmp
lods
scas
jl
mov
sar
mov
xor
mov
icebp
pop
filds
in
cld
imul
cld
inc
or
jo
sub
test
cmp
call
das
inc
sbb
gs
xchg
leave
loopne
add
hlt
test
mov
jb
cmpsb
pop
into
jge
repz
jb
data16
mov
ljmp
sub
fistpll
jae
out
aam
je
xchg
mov
sub
inc
ljmp
adc
fwait
int
pop
jbe
or
lods
test
sub
jae
clc
add
jp
pushf
mov
mov
mov
pusha
mov
mov
pushf
lea
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
dec
push
fisttpl
stos
fmulp
js
mov
xor
xor
sub
data16
push
arpl
fbld
fs
jecxz
mov
adc
stc
stos
mov
rol
pushf
cmpsl
xchg
lea
dec
rep
mov
arpl
push
fwait
nop
push
fwait
xor
imul
out
sbb
movsb
lea
adc
cmc
pop
inc
and
or
jg
xor
xor
repnz
es
iret
ss
cmpl
lock
lock
das
inc
or
xor
ret
push
lds
xchg
das
data16
mov
or
stos
sbb
sub
push
decl
jge
das
insb
push
stos
mov
xlat
jecxz
add
jmp
xor
lret
add
cltd
sbb
jl
mov
sub
lcall
pop
add
jnp
sbb
mov
push
jb
inc
mov
xor
dec
dec
aad
fwait
jne
inc
jo
fldenv
loopne
stc
in
hlt
sbb
xchg
xor
xchg
xor
sub
jo
cmp
xlat
ret
push
push
divl
fmull
std
push
cmp
mov
xor
mov
ret
lock
out
mov
jg
sahf
ret
aaa
inc
inc
subl
xchg
adc
push
mov
xchg
or
xchg
dec
lods
and
dec
and
pop
arpl
leave
ficoms
cmp
cwtl
andb
test
stos
aas
sub
les
or
dec
fs
ja
xchg
inc
inc
clc
push
cld
add
pusha
pop
xor
in
cmpps
pop
out
push
jne
ror
outsl
outsl
cli
pop
dec
or
mov
inc
test
into
or
mul
testl
dec
cmp
mov
and
jmp
adc
cmp
data16
push
xor
mov
out
inc
mov
push
shrb
jl
xchg
jp
dec
rcr
mov
call
mov
subl
fadds
add
inc
nop
push
jge
mov
inc
lods
cmp
pop
or
mov
das
xchg
lret
adc
stos
sti
sbb
es
or
loopne
sub
push
add
ljmp
insl
push
lret
popf
cmp
nop
or
adc
je
xchg
and
sub
xlat
aam
xchg
popf
fnstcw
mov
inc
pop
aas
call
int3
adc
popf
mov
ds
movsb
cmp
fistps
fistl
cs
mov
pop
sub
out
mov
jbe
or
jmp
faddl
pop
pop
stc
push
testl
out
inc
or
popa
fsubrs
xchg
mov
mov
mov
rcll
mov
push
jl
ljmp
rorb
repnz
jbe
xchg
push
or
idivl
enter
sub
addr16
lret
mov
std
movsb
cli
add
pop
mov
iret
dec
cmp
and
outsl
or
test
jae
pushf
sete
shl
bswap
mov
sar
mov
sbb
movzbw
mov
cmc
push
stc
xor
test
bt
pusha
pushf
repnz
push
jmp
outsl
xor
aas
fiadds
inc
cwtl
fmull
outsb
leave
add
mov
loop
inc
xchg
movsb
mov
push
dec
sti
mov
push
and
pop
hlt
inc
loop
pop
adc
dec
jnp
in
cltd
movsb
addr16
adc
out
push
jg
dec
rep
mov
inc
xchg
sbb
jge
shlb
popf
cmp
fdivp
add
repnz
inc
jecxz
out
pop
mov
aam
out
movhps
mov
cld
imul
ret
pop
les
rorl
or
mov
or
cwtl
push
lea
xchg
push
adc
push
jbe
scas
sbbb
popf
cltd
stos
rorl
sub
or
rcrl
stos
and
lea
dec
test
inc
jo
xor
dec
in
mov
cs
leave
fsubs
jp
pop
cmc
jo
pop
mov
imul
aaa
push
push
mov
std
pusha
or
inc
push
cld
add
mov
dec
sbb
add
adc
mov
inc
pop
mov
je
out
lea
fs
push
fldenv
mov
and
dec
ljmp
dec
int3
jno
mov
pushf
stos
loop
pushf
push
movsl
push
push
xchg
outsl
testl
add
popa
jns
pop
cmpsb
sub
mov
jmp
aaa
arpl
inc
mov
xlat
cmpsl
cmp
pop
or
dec
movl
push
pushf
lea
jmp
pushf
push
repnz
jmp
push
movb
bswap
mov
pushf
lea
movb
movb
movl
call
mov
lea
jne
bswap
mov
xor
sbb
pusha
btr
mov
shr
add
bt
cmp
mov
pushl
stc
cmp
test
call
call
repnz
pushf
jmp
lods
mov
push
pavgw
mov
lea
xchg
ds
pop
sarl
jg
mov
sbb
inc
xacquire
jb
orw
fwait
push
mov
addb
add
sub
mov
cli
fsubs
in
push
lock
mov
sarl
stc
pop
sarb
test
mov
or
mov
mov
fwait
jg
sub
or
jl
and
jo
push
mov
pusha
push
lea
jmp
mov
pusha
pop
pushl
lea
pushf
jmp
pusha
push
lea
call
pushf
adc
movb
pushl
mov
lea
jae
call
sbb
psubusw
mov
mov
jnp
or
mov
enter
subb
jecxz
lds
sbb
in
fsubrs
loop
jo
mov
outsl
cmpsb
shlb
and
repz
clc
adc
imul
bound
outsb
nop
pop
push
inc
aas
rorb
cmp
xchg
clc
jl
movsl
repz
mov
cli
xlat
mov
push
aad
push
cs
mov
faddl
dec
cmp
cli
sub
rcll
daa
lcall
cmp
xor
mov
lods
adcb
mov
jecxz
es
inc
sub
jno
adc
push
push
popa
pop
ljmp
and
push
xchg
sti
imul
inc
add
test
popa
or
mov
hlt
pop
icebp
xor
std
jno
and
xlat
inc
rcrb
je
or
lock
jae
sbb
lock
and
insl
pushf
push
outsl
sbb
int
pop
and
cs
inc
mov
stc
xor
cmp
clc
sti
insl
ja
cwtl
aad
dec
ja
loop
dec
add
sti
repz
loop
sub
or
and
daa
push
jno
test
aad
mov
dec
jbe
cmpsl
sti
jns
ds
mov
arpl
fisttpll
pop
mov
dec
cmp
repnz
cli
dec
cvtpi2ps
xchg
cmc
cli
and
xchg
pop
cmpsb
mov
pop
out
lods
sub
insb
adc
scas
call
or
pop
imul
fimull
jo
into
fcomp
orl
in
xor
adc
insb
xchg
sahf
ljmp
ljmp
inc
insb
push
mov
mov
mov
sub
push
cmc
arpl
xorl
scas
inc
jns
sarb
xor
icebp
mov
cli
push
lods
sarb
outsb
mov
push
les
mov
dec
loopne
test
push
popa
sub
pop
cld
adc
shrb
cmp
mov
icebp
repz
imul
mov
rorb
jl
add
push
js
sub
insl
icebp
sbb
divb
add
dec
push
cs
fidivs
mov
arpl
add
and
cmp
push
xchg
cs
add
popa
stc
mov
push
sbb
stos
orb
jo
push
pusha
lcall
aas
inc
sbb
mov
ja
dec
insb
mov
and
cmp
dec
fs
test
pusha
mov
insb
fistps
jb
lcall
cltd
pop
loopne
push
jl
insb
mov
mov
sub
push
mov
jl
add
xlat
push
mov
insb
push
sub
jbe
or
in
rorb
bound
dec
fcoms
mov
inc
popa
loopne
les
push
pop
inc
mov
and
or
dec
jecxz
scas
pop
cmp
ja
add
cmpsl
inc
pause
xor
int
jae
repz
push
sbb
movsb
mov
hlt
insl
sbb
jecxz
and
or
dec
and
jb
insl
push
orb
or
lahf
inc
sub
jno
or
xor
add
repz
fisttpl
push
orb
rolb
enter
mov
js
sti
jl
cmc
fwait
sbb
cmp
repz
cmp
push
and
push
jbe
jne
mov
lret
sbb
jl
rclb
adc
adc
popf
daa
or
and
into
and
sbb
rcl
cmp
push
out
pop
aas
dec
jp
pop
xor
iret
xor
or
sub
cld
sbb
cmp
out
jle
int3
xchg
jge
push
cwtl
and
mov
ja
jecxz
repz
push
out
and
insl
cwtl
pop
out
sbb
lretw
or
xor
sub
test
nop
push
js
inc
out
stc
jl
sbb
add
je
jb
jp
or
mov
xor
pushf
js
rcrb
push
jne
jb
popa
fidivl
repz
add
test
jbe
call
in
pop
loop
mov
mov
fwait
push
int3
je
lock
insb
pop
cltd
mov
adc
adc
in
aaa
js
dec
out
xor
pop
insb
xor
sbb
test
adc
push
inc
xchg
adc
in
insl
push
add
jmp
or
call
ds
ds
jno
mov
rcll
push
push
fildll
and
adc
mov
jo
mov
stos
repz
clc
je
fmull
insl
xchg
imul
nop
loop
jl
movsl
es
xchg
pop
repnz
bnd
enter
push
movsl
push
mov
mov
sub
in
mov
cmp
mov
pop
adc
fcoms
adc
outsl
mov
and
rcl
sub
lock
in
das
frstor
sub
sahf
ds
inc
inc
jno
sti
imul
mov
mov
ret
mov
inc
push
movsb
push
push
shl
outsb
pop
or
push
sub
cmp
add
fwait
jb
jmp
loopne
sbb
sub
inc
leave
cli
xor
mov
dec
stc
cmp
and
popa
test
inc
stos
in
cmp
enter
test
sub
mov
xchg
out
and
sub
cs
inc
int
test
pop
fwait
adc
mov
jbe
mov
hlt
jl
imul
cmp
out
out
dec
imul
sti
jbe
lock
cwtl
mov
shrb
scas
xor
lret
imull
xchg
pop
shll
mov
xchg
mov
mov
jle
loopne
push
xchg
pop
lock
jbe
cld
out
push
insl
xchg
adc
push
push
mov
sti
push
sub
fs
xor
cmpsl
adc
out
cmp
add
es
jl
cltd
and
jecxz
cld
outsl
mov
jbe
mov
div
bound
insb
in
lock
call
in
pop
hlt
mov
std
sub
pusha
aam
push
je
jns
mov
sbb
jne
mov
mov
in
test
or
mov
mov
jmp
jno
ficomps
into
int
mov
mov
mov
pop
pop
inc
jl
popf
jne
test
mov
dec
leave
pop
ficoms
aas
insl
adc
idivl
cltd
insb
cmp
push
push
lock
and
mov
int3
mov
test
fs
xchg
adcb
sub
lock
rcll
aad
jnp
mov
mov
mov
add
mov
mov
sub
pop
cmc
mov
xor
sbb
dec
inc
movsl
push
les
loop
pop
int3
lock
xchg
paddq
xor
cmpsl
push
or
cmp
cmp
or
and
xor
cmc
mov
sbb
jb
xor
xchg
fisttpll
pop
cmpsb
imull
faddp
jo
cmp
andl
out
insl
sbb
popf
jecxz
cwtl
nop
xchg
in
xchg
movsl
inc
ja
idivb
and
jg
inc
and
cmpb
dec
lods
lods
sbb
pop
mov
std
pop
fildl
jo
shrl
lea
adc
in
movsb
mov
ficoms
imul
xorb
cmp
call
cmp
or
push
or
out
dec
add
mov
lods
xchg
shll
sub
sub
cmp
push
js
add
jle
push
and
addr16
xor
xor
pop
in
cmp
inc
clc
pusha
call
mov
sub
nop
call
xchg
in
mov
jge
xchg
and
pusha
jmp
sbb
xor
fidivrs
insb
adc
aam
jb
sub
add
jb
icebp
stos
add
dec
mov
jae
aam
sub
mov
mov
mov
stc
and
movsb
xor
xor
push
movsl
fwait
pushw
repz
mov
cmp
cwtl
imul
push
mull
pop
sbb
jl
mov
hlt
mov
mov
shll
inc
dec
sub
add
stos
xor
mov
out
push
rcrl
pop
in
insl
aam
enter
or
gs
decb
mov
pop
adc
lock
sub
xlat
push
aas
scas
inc
pop
imul
gs
xchg
inc
cmp
mov
daa
cmc
pop
pcmpeqb
jns
push
imul
inc
sub
cmpsl
push
dec
push
les
mov
orl
lock
dec
stc
test
or
cs
loopne
cmp
cmc
data16
push
jp
jnp,pn
lods
adc
mov
test
cli
adc
and
aaa
lods
js
fnstcw
inc
inc
or
clc
xor
fcoml
imul
scas
je
mov
jne
xchg
pusha
push
xor
lock
mov
push
jl
add
hlt
and
xor
mov
push
mov
fcompl
xchg
cli
cwtl
aaa
inc
lret
test
mov
cmp
bts
push
mov
jnp
dec
mov
fiaddl
sub
incb
dec
adc
cmp
test
adc
push
andb
je
icebp
xchg
js
rcll
je
sub
jnp
fstpt
icebp
lcall
fstl
pop
inc
jo
and
xchg
in
dec
test
call
pop
sbb
shrb
pop
aam
insl
jae
xchg
mov
lock
repz
roll
pusha
nop
jp
outsl
xchg
jne
sub
insl
cmp
bound
lock
inc
push
nop
fildll
ret
xor
add
inc
or
inc
dec
xchg
lret
xorb
insl
fdiv
xor
gs
pop
mov
pop
sbb
cmp
insl
push
fwait
jae
ds
clc
sub
ja
outsb
and
mov
dec
mov
in
xchg
insl
xor
adc
es
out
jp
divb
into
ss
push
inc
dec
xchg
push
ss
insl
push
rorb
sub
outsb
pop
outsl
xchg
cmp
sbb
jp
flds
jo
ljmp
mov
cmp
push
fisubrs
sbb
dec
mov
cmp
cmp
mov
inc
ret
cwtl
mov
push
stc
xor
push
push
shlb
adc
dec
pusha
icebp
inc
xor
inc
cmpsb
xor
sub
lea
add
outsb
lods
mov
or
push
insb
das
push
test
add
mov
cli
xor
push
sbb
sbb
mov
pop
dec
pop
ret
sub
jae
push
stc
cmp
sbb
cwtl
dec
imull
inc
dec
fs
sti
stc
xor
push
jne
cmc
inc
addr16
pop
insl
insl
fidivl
outsb
pop
jl
icebp
insl
push
js
shlb
cltd
mov
js
imul
and
mov
mov
mov
sbb
hlt
pop
xor
fisubs
fucomip
jno
pop
jp
push
sub
imul
jnp
and
cmp
ja
and
shlb
dec
mov
mov
mov
add
out
sbb
adc
jb
loopne
cmp
filds
test
mov
call
lods
xor
mov
imul
and
mov
cmp
mull
inc
push
dec
xor
movsl
in
dec
jb
add
mov
pusha
in
repnz
or
mov
mov
outsl
shl
add
and
sbb
xor
repz
or
add
daa
xor
shlb
push
jecxz
cmp
test
shlb
les
adc
ss
inc
lret
je
sbbl
cmp
shlb
jecxz
adc
js
insl
lcall
push
rcl
jno
jge
push
inc
addb
push
jno
mov
ret
mov
mov
push
pusha
repz
sbb
nop
pop
xchg
js
hlt
cs
dec
xorb
mov
sub
jl
pusha
dec
test
cmp
push
rcl
ficoms
xchg
popa
ds
pop
mov
jl
mov
insb
or
jno
sbb
loopne
mov
xchg
pop
mov
jge
or
xchg
cmp
cmp
xor
mov
jg
je
xor
outsl
sahf
repz
rorb
push
mov
out
dec
sub
dec
scas
arpl
lods
nop
sbb
cld
out
pusha
xor
test
pop
hlt
pusha
push
sub
add
cmp
iret
outsb
stos
add
jae
into
sub
jo
daa
inc
outsl
inc
add
fiadds
data16
pop
mov
nop
mov
scas
pusha
cwtl
into
clc
or
push
or
ja
cmc
jae
inc
mov
shr
jle
and
loop
push
movb
lds
add
fwait
jae
mov
bound
icebp
sahf
and
pop
jmp
outsb
xchg
int3
jo
add
dec
mov
add
push
mov
xchg
mov
sbb
fimuls
push
gs
pop
pop
push
inc
ds
daa
adc
mov
lock
js
enter
call
hlt
mov
jp
jp
popa
and
call
adc
mov
imul
pusha
xchg
nop
sahf
dec
ficoml
sub
aas
out
cwtl
pop
adc
aaa
pusha
cs
int
aas
dec
cmp
jle
mov
pusha
mov
cmc
add
test
jae
push
inc
data16
pushf
pusha
fcomps
push
jae
xor
insl
add
jmp
sbb
das
pop
xchg
or
push
mov
js
jge
inc
inc
out
in
sbb
adc
push
repnz
sbb
nop
push
xchg
or
push
shl
je
mov
inc
aaa
mov
mov
mov
lcall
dec
fistpll
add
or
adc
jno
jp
xor
pop
and
mov
lods
mov
in
push
jl
dec
mov
push
pusha
lock
push
mov
push
sbb
dec
pop
mov
mov
jb
pop
aaa
or
int
jl
pop
sti
cmp
and
scas
mov
and
dec
mov
sarb
ret
fdivrl
and
stc
or
cwtl
and
sub
mov
js
sahf
and
ss
stos
out
cltd
lret
mov
dec
aas
outsl
push
in
mov
xor
cltd
aaa
push
push
push
mov
sahf
push
in
lock
bound
dec
and
push
push
mov
pop
add
jbe
cmp
and
jle
xchg
push
xor
sbb
bound
fwait
push
push
cmp
std
bound
fwait
inc
test
insb
fistps
jbe
mov
sub
mov
pop
or
clc
outsb
ret
lret
adc
push
in
xchg
hlt
movsb
pop
mov
dec
add
dec
es
dec
pusha
mov
js
cmpsb
jns
sbb
enter
outsb
cs
mov
mov
xorb
xor
cli
mov
cs
add
daa
and
ret
call
and
inc
dec
nop
mov
in
in
aas
pushf
pop
ljmp
xchg
fwait
jae
inc
sbb
cmc
jmp
rcll
hlt
add
mov
loope
push
jns
mov
addr16
test
dec
stos
or
mull
icebp
push
cmp
jle
imul
sti
mov
xchg
mov
push
inc
and
sti
lods
adc
xlat
pushf
pop
push
jle
or
jne
or
and
add
fwait
js
adc
dec
sub
int3
and
or
or
add
or
mov
movsb
push
and
mov
cwtl
and
fdivs
dec
hlt
add
mov
mov
xchg
and
outsb
daa
cwtl
sbb
mov
xchg
stos
fdivl
xor
ret
inc
loope
cli
add
cli
shll
add
pushf
cmc
sub
push
add
mov
sbbl
or
fcoms
outsb
dec
inc
or
ja
in
ret
lock
lock
mov
in
rclb
and
or
adc
sbbb
daa
xor
inc
or
pop
cmp
call
aad
pop
aam
add
push
and
and
add
les
stos
push
xor
cmpsl
inc
xchg
cwtl
dec
cmpsb
xor
outsl
movsb
jnp
rorl
stc
or
cmp
jae
hlt
cmp
xor
push
inc
mov
fs
pop
jae
mov
lods
fsubs
push
xor
xor
fwait
gs
enter
adc
loopne
aaa
dec
mov
adc
xchg
push
dec
dec
addb
call
fldl
cmpsb
mov
adc
cmpsl
cwtl
sbb
dec
ret
xor
hlt
fxsave
push
cmp
fistpl
jnp
mov
movsb
adc
in
nop
jmp
inc
mov
pop
jmp
leave
outsb
lock
out
out
mov
pop
mov
inc
std
pop
aad
xorl
into
mov
sarb
push
cmpsl
pop
cmp
pop
push
or
jne
gs
lods
push
arpl
and
xor
or
and
push
fnstenv
push
cld
sub
repz
pop
pusha
mov
sbb
jp
jne
test
push
aas
cld
push
movsb
je
lahf
dec
das
or
cmp
cmpsl
xchg
push
lods
xchg
push
push
lock
stc
cmp
insl
dec
mov
aaa
std
lock
mov
dec
push
jae
out
push
jae
cmp
or
pop
push
pop
js
mov
jge
orl
js
jb
or
add
or
aas
push
pop
mov
push
jae
mov
cwtl
xchg
jge
sbb
dec
jmp
jmp
ljmp
loop
aaa
sub
jl
mov
mov
jnp
pushf
nop
data16
fisubrs
inc
xor
lock
pop
insl
jae
call
push
mov
sub
xor
in
xlat
jne
inc
out
push
in
dec
fdiv
mov
jnp
loopne
dec
in
test
add
fadds
sbb
dec
movsl
dec
es
sub
call
add
fs
add
fwait
outsb
idivb
dec
xor
xchg
jno
imul
cwtl
daa
les
mov
jp
fwait
jne
sub
and
fmuls
or
pop
inc
loopne
xchg
lock
adc
je
adc
icebp
and
push
and
in
xorl
stc
or
sbb
pop
repz
pop
inc
int
mov
cmpl
bound
ja
push
inc
push
xchg
lret
dec
in
lahf
incb
jae
cwtl
mov
bound
mov
push
mov
and
pop
sub
mov
adc
xchg
and
cwtl
inc
pop
data16
outsb
fcmovu
sub
dec
popf
xorb
sub
pop
dec
insb
or
popa
or
pusha
add
dec
cmpl
jne
sub
repz
or
enter
in
xchg
outsb
add
mov
dec
xlat
mov
push
adc
push
cs
clc
jl
test
xor
cmp
hlt
movsl
hlt
adc
int3
add
jae
or
jecxz
pop
sub
mov
pop
and
xor
mov
xchg
jne
test
fidivs
shrb
xchg
jle
outsl
mov
cmp
addr16
cmp
adc
dec
stc
and
sbb
pop
ffreep
mov
fcoml
jl
call
in
pushf
pop
je
nop
push
sbb
test
into
sub
nop
out
jb
lods
push
inc
je
jo
jmp
nop
arpl
and
cwtl
testb
rcll
jbe
filds
push
or
cmpb
dec
inc
sub
cmpsl
mov
or
add
xor
xlat
fwait
fs
jp
scas
adc
mov
outsl
cli
mov
out
cmp
in
aas
xchg
rcrb
cmc
dec
sti
and
js
mov
mov
cmc
dec
ja
call
sti
mov
data16
cli
xchg
push
dec
add
shll
mov
cmp
xor
icebp
aaa
js
neg
add
add
fsubrp
hlt
adc
cwtl
cmpl
xor
push
outsb
daa
xor
into
jbe
add
push
push
je
jno
clc
lea
ds
mov
sbb
js
imul
push
stos
sub
in
jnp
adc
ds
pop
pop
and
cmpsl
repnz
and
shll
lock
mov
jbe
shl
cmp
inc
lods
outsb
dec
mov
pop
mov
add
push
xor
cwtl
cmc
fisubrs
dec
xor
add
fwait
mov
jnp
negl
inc
mulb
xchg
sbb
popa
fs
jne
enter
inc
shrb
cmp
mov
jmp
pop
mulb
gs
int3
jecxz
inc
sub
hlt
push
shrb
xchg
adc
in
fldl
insb
mov
push
lahf
sarb
loope
push
in
loope
cmpsb
inc
nop
cli
icebp
shlb
rorw
cld
fwait
mov
dec
ror
pop
vmread
aad
jl
filds
aam
fstps
cmpsb
sub
add
sbb
and
mov
add
mov
mov
aam
js
inc
dec
sti
lods
fwait
push
or
pop
scas
and
xor
mov
push
xor
cmp
movsl
stc
push
sub
cmp
mov
and
loop
cmp
adc
mov
jl
test
mov
lock
das
jne
cwtl
aaa
fnstcw
cmc
dec
and
push
pop
xbegin
mov
cwtl
mov
add
sub
xchg
xlat
mov
dec
mov
cmc
add
and
dec
stos
out
inc
aas
insl
jne
cwtl
cmpsl
adc
sub
je
cmc
fwait
das
dec
or
pusha
aas
inc
mov
push
adc
add
int3
fwait
inc
jbe
and
and
mov
dec
fwait
xor
hlt
rorl
enter
mov
push
hlt
mov
fdiv
movsb
out
push
sbb
lret
roll
cs
rcrl
inc
pop
fldl
jno
cs
and
cmc
xor
jecxz
addb
or
xchg
cmp
sub
leave
jo
insl
in
xchg
xor
mov
sbb
jge
jp
cwtl
repz
mov
jo
xchg
jle
inc
dec
cs
int3
aam
sub
pop
add
cwtl
xchg
stc
fldl
or
xor
dec
je
dec
mov
dec
or
xchg
jp
dec
xor
push
dec
or
fcomps
or
sbb
cwtl
xor
test
ret
mov
dec
dec
loop
bound
lahf
xchg
mov
loopne
insb
mov
jno
xchg
add
repz
movsb
ss
roll
dec
lds
rol
adc
enter
adc
mov
mov
adc
dec
dec
cmp
xor
test
cmp
pop
cwtl
in
fstps
cmpl
cmp
gs
mov
fwait
inc
sarl
out
repz
adc
out
pusha
mov
dec
push
movsl
and
or
pop
gs
push
pop
inc
push
dec
inc
mov
mov
sub
ja
adc
js
lods
xchg
icebp
ret
dec
mov
add
fwait
stos
sub
mov
outsb
insl
push
lea
hlt
mov
rol
imul
pop
gs
push
dec
mov
jo
ja
cmpsb
sti
mov
in
pop
enter
lock
dec
push
pop
icebp
xchg
xor
pop
sbb
lock
jb
sub
pop
cmp
adc
mov
xor
sub
lea
xor
lock
mov
and
insl
loope
jp
in
testb
repz
jmp
fdivrs
cmp
loopne
mulb
bound
cmp
or
fwait
rcrl
lret
ret
push
inc
addr16
in
sub
cmp
dec
shlb
mov
jp
lock
dec
push
cmp
repnz
push
jp
fucom
idivb
xor
lock
imul
repz
jns
sub
mov
xchg
mov
orb
enter
cwtl
inc
movsl
or
aaa
daa
push
sarl
call
int3
jns
pop
sub
add
or
pop
popa
dec
sbb
clc
sub
mov
jmp
mov
adc
xor
cwtl
cmp
hlt
dec
add
cmp
out
sbb
mov
xor
or
mov
iret
xchg
aaa
adc
pop
in
pop
adc
jae
lahf
sbb
call
jno
cvttps2pi
sbb
fsubl
in
scas
icebp
mov
cmp
sbb
jns
lret
hlt
movsb
and
jnp
lcall
pop
nop
xor
cs
stc
loope
inc
push
cwtl
jno
fmuls
push
int
xchg
aaa
sbb
adc
cs
xor
add
add
pop
std
int
inc
stos
pop
test
clc
dec
cwtl
pushf
sbb
add
pop
movsb
cmp
test
or
arpl
stos
or
mov
icebp
notb
inc
jge
out
bound
inc
pop
data16
cs
adc
pop
inc
fwait
jbe
inc
aaa
jb
daa
out
outsb
ds
cmp
insl
jae
stc
dec
jne
aam
jo
lahf
sahf
nop
js
xor
orl
mov
mov
and
sbb
movsb
pop
sub
push
jle
in
xor
xor
and
sub
jecxz
int3
xor
xchg
push
cmp
sub
xor
jp
outsl
movsb
loope
jnp
push
insl
jno
icebp
jns
and
cmp
xchg
push
addr16
pop
lods
cmp
mov
es
repnz
sahf
push
cmp
cltd
cmpsb
push
loopne
test
push
or
push
push
sub
test
mov
shr
dec
ud2
cwtl
cmp
mov
add
mov
push
enter
insb
push
js
jle
and
adc
and
int
sti
xchg
sarb
out
je
in
movsb
pop
inc
ret
xchg
xor
clc
clc
xchg
push
sysenter
jecxz
xchg
push
sarl
push
dec
pop
rorl
enter
sub
and
fcoms
es
int
dec
mov
test
lods
jne
push
or
stc
shlb
cmp
pop
rcr
ss
jb
mov
stc
fwait
out
jo
idivb
test
add
dec
inc
and
jmp
sbbb
cvtps2pi
stos
push
clc
jnp
push
add
es
out
jbe
xor
mov
pop
jne
jae
fs
lods
mov
adc
push
test
cmp
arpl
push
addr16
push
jp
jno
jp
outsb
jp
stos
out
decb
hlt
sub
mov
fwait
imul
mov
xor
cwtl
push
fiaddl
push
jmp
stc
rcll
lcall
js
ss
int
cmp
jne
dec
and
insl
pop
jae
insl
mov
mov
aam
jns
insb
lret
orb
mov
xor
or
mov
xchg
and
flds
dec
outsb
mov
out
pusha
and
jbe
push
std
cmp
in
pop
jb
xor
jle
and
pop
fbstp
and
sar
outsb
cwtl
adc
lock
dec
outsb
cmpsb
test
pop
cmp
push
mov
lcall
mov
rcrb
mov
adc
sub
jns
aaa
daa
stc
outsb
popl
rorl
cwtl
cmpsb
cmp
roll
loop
mov
icebp
cli
repz
pop
fbstp
xorb
movsl
insb
cmc
sub
add
outsb
jge
inc
jle
and
and
inc
mov
enter
cld
cmp
loop
or
pop
push
roll
popf
negl
inc
xor
dec
lods
add
jae
jle
adc
inc
dec
sbb
and
lods
push
rorb
idivb
mov
mov
xor
sub
adc
or
ds
xor
nop
out
sbb
add
jns
jne
jle
and
dec
ds
jnp
inc
popf
push
fldenv
jno
sbb
cmpsb
inc
ficomps
out
push
adc
dec
hlt
lds
jb
inc
fsubr
sti
jmp
test
xchg
jb
loop
push
sbb
add
mov
push
sti
arpl
push
push
int
daa
cmc
dec
cli
jp
mov
fs
add
cwtl
int
cmp
pushl
dec
in
in
mov
or
xorb
jg
lcall
movsb
subb
enter
test
inc
push
sbbb
lock
push
daa
add
cmc
imul
sbb
int
jmp
xor
gs
ret
push
out
jbe
sbbl
dec
mov
pop
lods
lock
dec
pop
fists
mov
push
inc
push
arpl
into
mov
mov
and
and
call
or
pop
ljmp
lock
sbb
mov
aaa
pop
mov
inc
xor
inc
dec
sahf
adc
mov
outsb
inc
push
push
hlt
popa
fidivrs
jae
js
pop
dec
mov
xor
push
sbb
mov
ja
ja
loope
cltd
out
cmpsb
push
out
jp
sub
inc
mov
dec
mov
out
loop
arpl
push
int3
shrl
daa
clc
xchg
loop
je
adc
jl
and
data16
loopne
push
test
mov
inc
clc
sahf
dec
fstps
hlt
inc
mov
enter
fcoml
call
ja
mov
sub
pop
imul
dec
pop
mov
xchg
lret
pop
jns
insb
cmpl
fst
lods
or
lock
xor
out
push
movsb
out
jecxz
xor
movsb
pop
enter
pop
cmc
sbb
stos
les
xlat
pop
fs
ds
stc
inc
push
inc
sbb
mov
mov
outsb
outsb
adc
or
mov
sbb
in
and
adc
or
cmp
mov
cmpsb
frstor
stos
test
jmp
mov
sub
repz
pop
ljmp
mov
pop
inc
inc
pop
repnz
xor
push
testb
divl
pusha
xor
leave
cs
test
xor
insb
mov
shlb
sub
jbe
test
insl
xor
cmp
dec
jno
or
hlt
push
imul
cs
dec
or
adc
sbb
ds
dec
push
subl
cmpsl
rol
push
xchg
cmp
int
mov
add
pop
movsl
ljmp
pusha
icebp
movsb
cwtl
nop
jle
adc
cld
sub
outsb
insb
popf
dec
fidivrs
pop
jne
dec
inc
mov
or
jnp
nop
shrl
aad
push
pop
and
idivb
push
push
fidivl
pop
push
scas
in
bound
fcompl
xor
in
outsl
loopne
xchg
sti
and
loop
pop
push
adc
cwtl
mov
mov
js
push
div
lea
rorl
adc
mov
sti
push
stos
cwtl
dec
repnz
mov
cmp
aam
clc
and
cs
dec
or
jae
je
testl
repnz
sub
xchg
scas
cmp
shll
insb
dec
push
mov
jo
je
add
ds
push
std
clc
cmp
hlt
rcll
ljmp
xchg
jg
mov
gs
loopne
mov
inc
jg
sbb
xorl
cmc
ds
pop
xor
cwtl
adc
mov
jnp
lea
mov
out
adc
mov
jne
dec
xor
loop
rclb
mov
dec
cmp
inc
pop
dec
movsl
or
mov
add
mov
pusha
cmp
dec
mov
rorb
mov
add
lock
add
push
adc
jne
sub
sbb
jae
push
mov
jb
mov
insb
cwtl
data16
push
fisttpll
subb
add
out
inc
add
sub
in
mov
add
daa
and
pop
adc
mov
stos
nop
mov
adc
insb
inc
add
or
enter
mov
shrb
enter
aad
ss
dec
cwtl
push
daa
push
push
cmp
bound
repnz
push
lds
jmp
sub
cmp
xor
mul
sti
into
pop
sub
push
cmp
adc
mov
dec
jge
dec
ds
xchg
hlt
mov
cs
inc
mov
push
stc
test
inc
mov
inc
push
andl
sub
jl
and
sbb
xchg
adc
inc
push
dec
in
mov
iret
loope
cmpsb
adc
gs
pop
mov
cmp
jle
mov
mov
fs
enter
std
adc
data16
sbb
xor
in
mov
leave
jae
sti
cmp
lret
in
outsb
push
and
inc
dec
mov
add
fs
hlt
adc
dec
lcall
outsl
push
cmpsl
pusha
adc
push
arpl
mov
fstl
or
iret
xchg
push
aam
cmp
cmp
sub
cmc
mov
dec
stc
lahf
dec
adc
dec
jns
mov
cmc
test
sbb
ficoms
fwait
enter
push
xor
orl
cwtl
push
dec
push
jo
iret
jae
cmp
ficoml
cmp
adc
jns
push
push
or
test
jne
push
cmp
xchg
je
adc
push
out
ss
inc
pop
fwait
je
test
loop
pop
adc
cmp
push
data16
fdivrl
mov
adc
sbb
inc
jmp
js
fs
iret
shll
lahf
pop
in
pop
into
add
jnp
and
fs
add
jns
dec
pop
dec
popf
imul
fdivrp
mov
cld
and
dec
cli
cmp
and
push
in
jb
rcrb
popf
arpl
xchg
add
fwait
mov
lahf
fs
ljmp
cmp
popa
jmp
inc
rcll
mov
mov
xor
pop
sub
jmp
rcll
in
pushf
add
scas
sub
rep
js
test
stc
pop
clc
dec
pop
cmc
leave
enter
shlb
mov
hlt
sahf
pop
leave
and
stc
les
jmp
or
loopne
adc
lock
loope
shll
ss
icebp
jl
dec
call
adc
fmuls
jmp
imulb
int3
sub
push
xor
add
xchg
ret
shll
cmp
das
insl
dec
adcl
popf
in
imul
hlt
cmp
jnp
js
mov
pop
add
fs
imul
daa
mov
sbbb
inc
cs
push
mov
jno
sbb
cs
pushf
cmpsb
mov
divb
jg
sub
push
xchg
out
in
mov
adc
loope
pop
dec
dec
inc
add
fdivrp
shr
cwtl
inc
adc
dec
aas
xor
xor
push
xchg
mov
push
out
cwtl
in
mov
clc
xor
cwtl
mov
and
dec
mov
mov
push
pushf
js
jecxz
adc
mov
pop
pushf
mov
mov
mov
into
mov
adc
loope
dec
jp
lods
lahf
arpl
js
xor
push
mov
les
and
push
in
insb
fistpll
dec
leave
sbb
mov
push
push
sbb
mov
and
mov
dec
sbb
fstpl
xchg
jne
adc
pop
mov
sbb
jno
adc
push
pushf
cmc
sti
aas
lods
insb
sbb
sub
hlt
mov
aam
cld
xor
pusha
in
add
push
xor
and
sbb
jp
fs
into
lods
insb
pop
cwtl
stos
dec
fst
push
in
faddl
push
in
cltd
push
stos
aam
push
mov
pop
clc
fdivrs
loope
js
mov
mov
leave
int
rclb
mov
adc
mov
addr16
cmc
mov
and
jl
ja
rorb
xchg
ljmp
mov
clc
test
add
out
sti
loopne
mov
mov
xchg
icebp
pop
hlt
aas
jnp
loopne
pop
mov
push
dec
cld
pop
cmp
loop
mov
stos
push
std
cs
pop
sub
imul
jl
pop
hlt
adc
stc
bound
jnp
pop
call
dec
sub
push
cwtl
mov
ffree
mov
push
and
cmpsb
loopnew
fmul
stc
xchg
enter
inc
icebp
stc
insl
mov
mov
xor
int3
jns,pn
push
aas
jnp
call
in
hlt
clc
add
jg
hlt
int
std
or
jle
hlt
pop
ret
or
xor
pop
sub
pop
faddl
ja
ljmp
test
pop
dec
add
cs
pop
data16
in
out
pusha
cld
xchg
pop
insl
mov
sub
movsl
cmpsl
mov
dec
movsb
inc
jp
or
pop
push
mov
cmpsb
and
push
std
mov
push
sti
pop
pop
fwait
add
jge
jl
sarl
sti
or
pop
scas
arpl
movsb
sbb
test
add
pop
jno
and
or
cmpsb
fldl
pusha
test
fdivrs
mov
push
ret
les
sbb
pop
adc
addr16
cwtl
cs
repnz
jge
cmp
js
cmp
sti
fs
and
dec
and
outsl
mov
out
pop
gs
pusha
mov
mov
mov
jl,pn
hlt
mov
ffreep
cmp
dec
int
bound
icebp
nop
add
jl
push
neg
jl
push
mov
popa
push
movsb
jo
sub
mov
hlt
cmpsb
pop
xor
jl
xchg
ds
sub
fs
add
das
or
je
pop
add
inc
js
push
adcb
jl
xor
data16
xchg
jp
jae
aas
cmp
dec
and
lods
cmc
popa
ds
mov
pop
nop
pushf
and
mov
and
aas
andb
rorb
dec
addr16
test
je
daa
xchg
test
pusha
js
sbbb
or
enter
test
push
and
je
pop
movsb
test
mov
sub
loope
pop
fsubs
mov
or
push
sub
out
mov
repz
sub
movsb
shrb
into
nop
clc
jecxz
ljmp
jg
lret
and
jl
cwtl
jne
dec
mov
inc
enter
or
pop
cwtl
jmp
inc
jne
inc
xor
mov
pop
add
bound
shll
mov
dec
and
dec
aas
dec
add
sub
mov
fildl
xor
mov
lahf
nop
mov
dec
test
gs
xor
xchg
add
push
pop
jl
sub
inc
jecxz
mov
aaa
in
fwait
arpl
enter
xchg
sahf
out
jns
sub
dec
repz
lock
add
stc
or
or
add
mov
gs
push
insl
pop
je
sti
xor
jb
mov
adc
push
xor
in
pop
push
xadd
xor
fcom
sub
push
sub
or
ficoml
mov
push
or
push
cmpsl
xchg
lock
movzwl
pop
stos
into
movsl
sti
push
push
or
fstl
push
mov
je
cmpsb
orl
es
push
insl
cmp
dec
stc
sbb
sbb
loope
xor
or
pop
rcll
xor
lods
es
and
and
pusha
loope
bound
push
das
cs
and
sahf
xor
push
out
cmp
cltd
add
push
lods
push
jmp
inc
repz
je
add
sub
loopne
mov
aam
sbb
xor
cmp
mov
in
arpl
out
mov
je
lods
and
adc
hlt
sbb
cmp
outsb
mov
inc
push
inc
fidivs
mov
lods
je
mov
mov
pushf
fldenv
popa
sbb
les
leavew
pop
xchg
loope
pop
icebp
xor
cld
aam
rclb
mov
push
jl
cmpsb
mov
lds
loope
cld
out
js
push
or
scas
xorl
testl
pop
mov
push
sbb
jno
cmp
aaa
adc
xor
add
mov
stc
inc
sti
and
loopne
push
js
idivl
cmpsb
dec
dec
add
or
mov
push
jl
xor
nop
add
or
adc
pop
outsb
jg
ss
sub
or
sbb
vmread
test
cmp
push
das
add
xor
mov
push
mov
xor
lea
js
push
rclb
je
mov
jl
jl
inc
xor
int
push
xchg
bound
fs
add
insb
clc
add
cwtl
mov
push
inc
pop
repz
gs
jns
insb
jecxz
popa
add
xchg
mov
mov
pushf
add
inc
pop
pop
andb
mulb
ja
jl
ds
mov
je
cmp
aaa
mov
jae
repz
nop
push
data16
fs
in
sub
push
add
inc
push
xchg
imull
add
paddb
mov
lahf
data16
mov
sub
aas
js
xlat
pop
jne
pop
add
xor
and
dec
push
pusha
scas
int3
push
or
cmp
loopne
and
jbe
pop
pusha
or
and
fs
inc
jae
scas
xchg
sbb
jl
sub
dec
pop
cld
fisubrs
xchg
seto
xor
iret
xchg
fs
hlt
add
hlt
int
inc
xor
outsb
dec
mov
jl
push
in
repnz
push
notl
xor
nop
movsl
jmp
stc
or
pusha
adc
jbe
push
cmp
push
dec
ficoml
negb
pusha
in
mov
or
mov
push
and
xchg
shrl
cmp
insb
cltd
mov
int
fcoml
cli
ljmp
ds
loop
fs
and
dec
adc
xchg
sbb
inc
sub
sub
cmpb
cmp
dec
jne
cmc
dec
loopne
pop
fpatan
xlat
lds
pop
jl
js
nop
loopne
movsb
imul
fistps
push
and
rolb
adc
sbb
xchg
arpl
loop
sbb
xchg
test
xor
dec
xor
jl
push
out
pcmpgtb
lea
mov
dec
or
out
notb
out
imul
and
sub
xor
push
insl
loope
cmpb
gs
pop
loopne
insb
jecxz
or
pop
dec
jmp
and
lret
mov
jl
dec
clc
jmp
push
jne
loopne
icebp
js
ja
insl
mov
xchg
pop
pusha
hlt
cmp
icebp
jecxz
sarl
je
int
pop
push
adc
pop
pusha
psrlq
jns
fcoms
insl
clc
dec
js
dec
cmp
mov
push
adc
jl,pt
pop
xor
mov
pop
lahf
jp
pusha
ss
lds
pop
push
xor
repz
xchg
xchg
jp
lret
out
bound
hlt
cwtl
fs
lea
xchg
mov
dec
jno
mov
xor
cmc
and
js
push
push
lds
push
xor
nop
xor
mov
ja
sbb
cltd
and
push
xor
adc
icebp
dec
push
xchg
pusha
fists
mov
pop
xor
push
xchg
dec
shrl
lahf
mov
iret
push
cmc
stc
pcmpeqd
cmp
loop
fwait
push
stc
leave
xor
out
cmp
mov
push
sahf
sbb
mov
jmp
js
mov
sub
loope
push
bound
cmp
and
cld
cmp
mov
jb
pop
xor
stc
jno
rclb
and
mov
stc
fcoms
push
xor
or
shl
pop
arpl
push
pop
in
adc
repz
or
rolb
jge
jnp
add
cmc
lods
lods
sub
mov
xor
adc
pusha
pop
fwait
push
jb
jp
jecxz
pop
inc
jmp
bound
xor
cld
test
out
adc
mov
loope
fidivrs
pop
xchg
stc
shll
arpl
cli
insb
cmp
hlt
stos
call
stos
mov
jmp
inc
jle
and
xchg
inc
stc
cmp
scas
daa
test
xchg
dec
jge
xor
sub
es
mov
stos
xor
adc
xrelease
fiadds
sbb
outsb
in
and
add
xor
or
xor
jb
and
mov
decb
push
jbe
cmp
sbb
pop
adc
sub
daa
push
sbb
shrl
and
fs
out
mov
insl
pop
jb
and
sub
sub
ffreep
scas
push
dec
jmp
cmp
movzbl
pop
cs
sub
cmp
int
push
pop
push
inc
push
dec
scas
dec
jecxz
push
xchg
cmpsl
xchg
leave
into
push
lods
repnz
pop
in
dec
pop
pop
cwtl
in
imul
repz
xchg
mov
mov
adc
enter
pushf
ja
jns
cmp
ja
xchg
fwait
mov
mov
icebp
push
movsb
cmpsb
insb
fs
clc
loopne
hlt
sarl
inc
ss
mov
sub
inc
mov
mov
mov
ret
and
jne
and
insb
push
stc
or
cld
nop
pusha
daa
and
fcompl
insb
enter
xchg
sbb
lret
dec
adc
icebp
mov
insb
inc
stos
push
ja
rolb
and
cmpsb
fiadds
inc
cmp
es
ss
push
xor
mul
adc
cmp
push
push
out
nop
pop
sbb
xchg
dec
scas
arpl
pop
lods
loopne
cwtl
lds
jo
nop
pmaddwd
mov
sub
jmp
adc
pusha
or
stc
aas
popf
mov
fimuls
out
mov
call
sarl
jno
cld
subb
nop
sbb
call
js
stc
xor
clc
mov
ret
xor
imul
jbe
lock
inc
pop
in
mov
test
add
cwtl
insb
dec
push
dec
push
jg
shrl
add
add
sahf
fiadds
loope
sub
pop
xor
xchg
dec
mov
lock
js
dec
rclb
adc
push
add
push
lds
cld
and
test
xchg
in
sbb
popf
and
mov
xchg
or
and
jmp
jne
jl
mov
jb
loop
int
ret
scas
in
xor
inc
adc
dec
and
xchg
adc
jl
je
pop
jnp
adc
push
jns
sbb
pop
pusha
sbb
pop
je
pop
arpl
add
push
popa
cs
addr16
or
gs
repnz
rorb
pop
imul
jle
pop
cwtl
cld
adc
mov
call
mov
outsb
jae
into
xchg
pop
popa
ss
inc
mov
cli
scas
xchg
mov
repnz
xchg
add
out
dec
fs
mov
arpl
dec
xor
mov
ds
push
mov
loop
push
sti
mov
shrl
adc
sarb
repnz
mov
pushf
cltd
dec
js
bound
les
cmp
movsb
jne,pn
push
jnp
stos
int
or
jb
add
jno
sbb
dec
je
sbb
outsb
adc
insl
adc
inc
and
je
in
inc
jbe
push
push
cli
iret
orl
les
and
add
sub
xchg
das
into
add
arpl
insb
fnstenv
icebp
xorl
xrelease
xchg
or
add
loopne
mov
xor
xchg
add
pop
mov
push
ds
mov
cltd
inc
xor
push
or
pusha
pusha
jl
push
cmc
insl
dec
sbb
inc
enter
inc
push
lahf
dec
push
iret
js
sarl
clc
aam
roll
out
mov
ja
add
loop
and
addb
jl
add
decl
mov
mov
je
xchg
adc
sub
popa
pop
xor
js
cmp
or
ror
cmp
jae
xchg
and
in
mov
fcomps
scas
inc
sub
bound
es
repz
negl
xor
dec
arpl
mov
pop
repz
nop
jae
in
rcrb
dec
sti
push
xor
sub
xchg
xor
add
aas
stc
fcmovbe
jnp
rcrb
stc
les
xor
enter
in
dec
popa
outsb
mov
mov
sbb
int3
xlat
dec
push
push
push
daa
and
outsb
sub
push
and
and
das
rorl
xchg
out
je
cmc
mov
out
ljmp
clc
jb
and
hlt
xor
ret
ja
icebp
cmp
leave
repz
loopne
inc
outsb
push
cmc
subb
jno
xor
mull
and
jp
adc
jmp
push
hlt
sbb
je
jbe
sub
lock
cmp
mov
rorb
push
filds
pop
jns,pn
xchg
or
ja
xor
sbb
cs
mov
xor
dec
repnz
cmp
push
incl
and
jge
mov
in
imul
pop
pop
ficomps
and
jge
je
pop
mov
push
outsb
add
aas
cs
shll
xchg
sub
clc
js
adc
pusha
cmp
repz
loopne
fs
cmp
xor
rcll
je
push
jmp
nop
mov
xchg
xor
push
fists
dec
mov
adc
stos
in
gs
and
dec
pop
dec
out
jae
jbe
sub
pop
pop
add
dec
sahf
or
shl
cli
mov
xor
test
leave
in
and
es
call
inc
pop
add
dec
jmp
adc
shlb
int
popa
outsb
inc
mov
dec
push
cs
mov
sbb
repnz
xor
xor
cmp
cs
sti
xor
or
add
push
jp
daa
inc
adc
mov
dec
dec
xchg
aas
mov
repnz
outsl
push
sbb
ret
adc
pop
add
in
xor
xchg
add
xor
push
inc
jl
gs
or
je
xor
or
cmpsl
fbstp
movsl
shll
or
xchg
testl
lahf
adc
loopne
sbb
push
into
adc
leave
pop
pop
adc
jg
push
sbb
mov
sbb
sbb
rcl
push
inc
jns
fidivl
sub
lret
dec
fs
stos
pusha
loopne
inc
mov
pushf
jge
xchg
shlb
xor
adc
sbb
ret
mov
add
cs
ds
push
dec
add
hlt
test
scas
imul
lret
jnp
je
scas
cmpsl
gs
mov
xor
pop
cmp
mov
push
repz
gs
bnd
mov
gs
les
or
add
and
mov
add
push
and
pop
or
cmp
jns
mov
mov
int
ljmp
cmp
rolb
loopne
loop
cmc
jno
je
fwait
dec
cwtl
xchg
lods
mov
mov
jmp
scas
fiaddl
fucomi
ja
and
jno
mov
roll
push
or
cli
mov
mov
sub
mov
negl
lods
pop
xchg
pusha
and
jp
daa
sti
lret
cli
jae
cmp
cld
cli
mov
pop
and
scas
sub
jae
inc
shlb
inc
loopne
adc
sub
adc
xor
pop
mov
sub
cmp
data16
dec
mov
rclb
out
dec
xchg
aam
es
fildl
ret
mov
xchg
movsl
lods
xlat
sub
and
mov
push
push
enter
fisttpll
iret
cmp
and
outsb
cmp
mov
cltd
push
mov
add
mov
sarl
push
pop
andb
imul
scas
gs
je
cmp
jne
sarl
mov
notb
fisubs
jmp
sti
ss
pop
push
out
mov
sub
dec
cmc
mov
jl
mov
js
in
sbb
push
mov
add
add
push
jae
jecxz
cwtl
pop
andb
dec
into
mov
rolb
inc
xor
sub
inc
lret
cmp
cli
push
push
fisubrs
movsl
push
push
arpl
dec
inc
and
mov
fisttps
pop
jl
cmp
bound
adc
out
mov
mov
movsl
mov
addr16
stos
inc
pushf
les
mov
sub
xchg
mov
and
add
cmpsl
cwtl
sahf
push
rcll
inc
test
pushf
mov
sbb
scas
daa
scas
push
mov
imul
xor
hlt
loopne
dec
insb
aam
mov
gs
push
sub
hlt
add
mov
push
int
bound
cwtl
add
and
fisubl
aad
or
jp
ljmp
xchg
inc
jecxz
out
leave
dec
cmc
outsl
in
jl
mov
pop
sbb
xor
sbb
mov
movsl
into
shl
pusha
ret
ja
cmp
push
insl
shll
gs
fsubr
icebp
leave
stos
aaa
dec
pop
jg
or
and
mov
scas
in
psrlw
cld
cwtl
mov
in
mov
iret
sbb
rcrb
into
rorl
fs
leave
jmp
jle
cmovg
sbb
push
rclb
shrl
rorl
sbb
insb
in
fwait
cwtl
adc
js
insl
hlt
cwtl
js
ds
bound
xor
ja
xor
out
fs
pop
scas
out
fwait
std
cmp
inc
inc
add
sbb
or
inc
lods
pushf
je
repnz
pusha
cmp
cmc
cmp
pop
lcall
add
stos
out
cmp
fcom
push
cmp
pop
jg
sbb
push
add
xor
loopne
cs
pusha
das
push
and
mov
pop
xlat
mov
sbb
out
inc
sbb
cmp
lret
adc
movsl
and
clc
and
mov
mov
sub
sub
sahf
push
xor
mov
cs
lock
push
ljmp
add
ret
add
cmp
mov
daa
add
mov
or
insl
sub
clc
test
inc
dec
insb
mov
cwtl
ror
int
mov
push
movsl
incl
mov
xchg
paddusw
mov
pusha
lock
gs
cwtl
mov
in
cwtl
adc
mov
fsubrs
push
add
cwtl
in
sbb
je
pop
inc
fwait
outsb
arpl
jl
fcmovnbe
cmc
sbb
jbe
push
fisubl
lods
push
bound
mov
popf
loope
rclb
repz
fcomp
enter
cmpsl
in
iret
ljmp
adc
aaa
sub
pusha
adc
in
loop
jl
xorb
xor
fldt
ret
into
and
sahf
outsb
jl
mov
daa
and
push
cmp
or
pushf
out
ss
outsb
xor
ds
sbb
xchg
ret
cwtl
inc
pop
jne
push
outsb
xchg
outsl
cmpsl
cmpb
inc
xchg
mov
push
clc
pop
mov
arpl
mov
cltd
or
addr16
ljmp
pusha
vpunpckhdq
ja
inc
pop
sub
mov
dec
out
pop
mov
insl
adc
adc
scas
ja
pop
stos
scas
pop
xchg
or
ret
icebp
pop
sub
jne
push
push
imul
cmp
add
xor
hlt
xchg
jae
hlt
js,pt
cmp
xchg
repnz
hlt
xor
lea
mov
and
cs
sub
daa
push
cwtl
int3
addr16
mov
cwtl
cmp
jbe
and
call
test
and
in
lods
jp
mov
imul
sbb
inc
mov
xchg
scas
jno
push
jp
ss
cs
sti
jno
pop
fmull
and
sbb
pop
arpl
and
and
pop
add
sbbb
cs
insl
cltd
aaa
cmpsb
lahf
gs
xchg
mov
imul
sbb
and
and
xchg
repz
xor
rcrl
cmpsl
jno
repnz
notl
nop
or
ljmp
pusha
sarl
out
and
pop
pop
cmp
push
jae
pmaxub
in
mov
mov
dec
arpl
mov
jl
insl
dec
dec
cmpsb
jb
pop
cmpsb
jae
lcall
bound
arpl
loopne
cwtl
and
mov
push
inc
xor
or
call
add
mov
cmc
mov
jo
jg
xor
lock
out
pop
inc
lods
cs
iret
cs
scas
add
stc
cmp
test
add
inc
and
lods
je
ss
int
out
sub
shll
mov
std
and
mov
inc
aad
bound
iret
into
std
push
cmp
push
and
push
out
ljmp
sbb
inc
mov
icebp
aam
rorb
adc
lods
or
aaa
add
xchg
xor
push
lock
in
mov
inc
cs
daa
xchg
inc
pop
push
clc
pop
lods
cmp
into
pop
or
aad
pusha
inc
xor
imul
inc
into
inc
dec
xchg
dec
push
mov
and
add
and
adc
dec
bound
jnp
jnp
in
pushf
cld
addr16
cwtl
or
inc
push
fbld
icebp
cmp
cmp
lret
sbb
xor
cmpsb
add
ja
test
jp
pop
lods
shll
cmc
inc
jmp
ret
out
in
push
xchg
add
addr16
push
popf
lock
js
jl
js
xchg
and
enter
imul
imul
mov
daa
insb
ljmp
jbe
lret
add
das
lods
pop
jl
sbb
xor
xor
xor
outsl
shlb
xchg
es
test
jno
cwtl
inc
sub
dec
femms
call
sar
mov
and
cli
repz
jno
or
mov
rorb
fs
cltd
jl
int3
dec
lods
int3
adc
pop
sbb
cwtl
or
ret
pop
daa
bound
mov
ss
subb
sbb
push
pusha
stc
sub
or
push
mov
popf
rclb
fs
cmp
sub
jge
inc
mov
adc
push
or
les
loop
push
and
sbb
sbb
cmp
pop
mov
stc
sbb
push
add
push
loopne
testb
push
sub
aaa
cmp
repnz
test
popa
push
enter
sub
xor
push
xchg
ret
lock
push
mov
lods
neg
inc
xor
sub
in
or
hlt
test
mov
inc
mov
xor
cmp
sbb
jmp
daa
cwtl
out
cmpsb
push
pop
cs
xor
cmp
jns
int
or
outsb
js
cwtl
adc
push
es
cmc
mov
pop
and
out
outsb
adc
and
insl
inc
add
fstl
cmp
repnz
mov
es
jbe
dec
adc
mov
sbb
mov
loop
in
mov
inc
imul
jbe
jno
aas
pop
xchg
pop
cltd
cmp
lock
mov
es
clc
stc
es
aaa
sbb
sub
pushf
scas
leave
push
ficoms
xor
out
cmp
fidivrs
lds
cli
jge
insl
repz
inc
mov
cmpsb
jp
stc
aaa
into
and
or
fnstsw
dec
lods
dec
add
movsl
sub
loopne
or
mov
pop
into
mov
jp
arpl
sub
mov
into
mov
in
adc
js
bound
mov
imul
imul
aam
stos
mov
js
sbb
dec
adc
ja
pop
enter
in
cld
jecxz
jecxz
inc
push
fs
dec
xor
xor
hlt
and
inc
jo
xorb
push
aam
int3
sub
icebp
jbe
lea
cmp
lock
cmp
cmp
jns
cmp
xchg
jo
int3
mulb
dec
sbb
pop
ret
movsl
jne
mov
cmc
scas
jge
mov
loopne
add
es
mov
dec
icebp
sbb
adc
clc
out
fs
sbb
push
pusha
hlt
out
push
cmp
lea
iret
aas
aaa
nop
mov
pusha
mov
pop
sub
stos
push
movsb
pop
jne
clc
hlt
xor
testl
mov
add
xor
faddl
hlt
and
cmp
pop
clc
pushf
sub
fstl
dec
xchg
jae
push
jle
loopne
cmp
test
mov
jp
dec
xchg
jl
rol
cmp
fsubrs
mov
mov
sbb
add
decb
imul
cmpsb
mov
add
cld
ljmp
ss
cltd
orl
sbb
lret
loop
sub
aaa
mov
std
cmp
insb
mov
bound
lret
sbb
bound
jne
or
lods
dec
in
fwait
xbegin
sbb
jns
pop
icebp
loopne
test
fdivrl
xchg
mov
mov
dec
or
jns
or
xchg
fistps
xor
cmp
sbb
cwtl
push
imul
aas
sarl
inc
lock
adc
push
shlb
sbb
cld
mov
cs
xor
and
in
iret
xchg
clc
sub
mov
mov
mov
push
outsl
dec
lods
xor
cwtl
lea
xor
and
push
fdivp
mov
pusha
and
inc
sbb
test
repnz
push
and
xrelease
test
pop
sti
aaa
enter
nop
mov
out
cld
add
xchg
mov
clc
mov
scas
int
push
and
cmp
iret
test
popa
and
xchg
inc
cmp
pop
insl
outsl
mov
fs
cmp
ret
or
or
ret
mov
imul
cmp
jo
adc
nop
in
xchg
sbb
mov
cld
push
clc
int
lock
out
stos
and
hlt
loopne
in
add
jnp
pop
cmp
mov
roll
xchg
mov
insb
cmp
inc
sahf
clc
js
out
sbb
loopne
cmp
ljmp
push
insl
cmpsb
push
testb
sbb
pushf
jbe
cmp
sbb
sahf
jmp
clc
in
icebp
mov
dec
mull
mov
sbb
jno
aam
push
sar
dec
push
xchg
jb
xor
and
testl
inc
orb
xor
into
es
js
insb
mov
inc
cmc
jns
push
jne
sbb
push
dec
adc
push
xchg
in
add
scas
int
cmp
push
or
das
mov
int3
iret
fdivp
adc
pop
sub
adc
sub
push
jae
and
xor
xor
je
mov
filds
xchg
cmpsl
mov
loopne
stos
sub
pop
arpl
push
aam
fistps
and
lock
insl
leave
movsl
push
push
jne
mov
fdivl
lods
sbb
xor
pop
sti
shlb
sbb
mov
mov
adc
popa
fsub
push
mov
daa
pop
cmpl
cld
adc
cmp
ret
dec
lcall
hlt
sbb
icebp
mov
xor
sbb
xorb
popf
shlb
repz
lock
push
test
push
xchg
pop
mov
test
xchg
arpl
sbb
scas
cmp
adc
cmp
repz
sbb
loope
sub
test
pop
push
sub
mov
pop
pushf
gs
jbe
xor
cmc
and
loopne
roll
icebp
cwtl
xchg
cmp
lods
int
and
out
xchg
and
les
daa
stc
xor
pop
mov
clc
movl
ds
lcall
fiadds
int
pop
push
jnp
cmc
icebp
lods
das
shrb
and
test
cwtl
push
add
add
pushl
sbb
test
stos
fs
cli
arpl
scas
orb
cmpsb
sub
push
cmovo
ja
jne
xor
aam
pop
mov
lock
dec
and
mov
mov
daa
js
inc
cld
pop
loope
aaa
fmulp
out
inc
push
mov
out
inc
fdivl
out
adc
cmp
cli
pusha
sbb
hlt
pop
mov
xor
icebp
stc
insl
sbb
mov
and
add
xchg
leave
mov
loopne
sub
out
les
and
je
cmp
adc
or
stc
das
fidivrs
sbb
in
ss
aas
mov
test
xchg
loope
xchg
dec
and
stc
scas
cmp
pushf
push
daa
xchg
jnp
mov
test
repz
daa
addr16
cmp
mov
stos
rclb
add
cmp
jle
fnsetpm(287
test
sbb
pusha
aas
mov
divl
ss
adc
or
call
mov
addr16
jle
imul
pusha
adc
mov
repnz
aad
clc
xchg
out
push
mov
int3
add
mov
mov
xor
mov
fcoml
dec
fisubrl
sub
push
pusha
sub
sbb
int3
or
loope
jg
pusha
int
popa
jno
leave
cmp
sbb
mov
inc
push
sti
cmp
sub
cld
push
pop
sub
inc
lea
imul
xor
leave
cmc
fwait
xor
mov
lahf
push
pop
aad
pusha
xor
test
push
scas
mov
or
dec
scas
lock
adc
jb
daa
adc
out
sub
push
and
in
pop
mov
cmp
sub
in
dec
and
fbld
fsubs
test
pop
dec
aas
mov
insb
inc
push
pushf
mov
rolb
dec
jp
push
adc
pusha
mov
cmc
inc
and
xcrypt-ofb
cmpsl
outsb
dec
mov
out
adc
mov
int3
cmp
roll
out
mov
mov
loop
lret
pop
movsbl
mov
inc
or
jne
test
dec
nop
addr16
pusha
and
arpl
shlb
jmp
pusha
pop
jl
and
inc
pop
enter
lret
sti
loop
in
shlb
lret
push
push
mov
gs
shlb
lret
adc
addb
jl
push
sub
enter
test
adc
cmp
aam
sbb
hlt
and
pop
imul
inc
or
inc
lock
incb
inc
je
sbb
mov
xchg
xor
fcomip
dec
sbb
xor
pop
stos
das
adc
js
js
fs
pop
inc
js
jmp
and
arpl
and
sub
cmc
inc
sbb
pusha
outsb
push
dec
cwtl
fidivl
mov
cmp
sub
push
xor
fidivrl
ds
das
pop
jl
mov
in
enter
pop
push
jae
mov
jg
stos
inc
dec
mov
pop
mov
jb
sbb
cs
outsb
arpl
insl
mov
mov
rolb
dec
adc
pop
jecxz
cmp
pusha
fisttpll
int3
js
popa
pop
xlat
aaa
popf
sbb
sub
add
popf
cwtl
mov
xor
push
and
adc
ja
inc
pop
push
je
sahf
sub
sub
sahf
and
fstl
outsb
je
and
cwtl
jle
mov
les
ds
xor
mov
pop
sub
and
insl
pushf
nop
jp
ja
arpl
lea
pushf
into
xor
fwait
adc
and
and
lea
pop
and
add
lods
jbe
cmp
jl
push
and
ds
ja
lods
test
or
add
imul
or
mov
mov
xchg
push
mov
jp
bound
popf
call
pop
sahf
insb
stc
xor
inc
pop
push
sbb
inc
jl
nop
ja
sub
repnz
mov
push
out
fcompl
add
pop
jno
pushf
pop
bound
push
push
fwait
pop
jl
ja
push
pop
mov
sbb
iret
sbb
mov
addr16
outsb
aam
insb
xor
ds
aaa
push
leave
sub
xor
adc
sub
es
fs
sbb
cmp
filds
jmp
ljmp
daa
int3
shlb
jl
imul
sub
jns
pop
sub
pop
or
or
jl
xor
dec
ds
aam
xor
jp
push
outsb
dec
cwtl
data16
pop
repnz
addr16
or
sub
out
mov
or
sti
aam
mov
push
cmpsl
sarb
popa
dec
and
aas
xor
pop
rcrl
shl
imul
jl
inc
push
jne
pushf
imul
fdivs
xor
fcompl
fisubs
and
xor
dec
or
fstpl
icebp
into
aaa
jl
pop
push
xchg
stc
shl
fstl
inc
clc
out
push
add
cli
sti
push
mov
sbb
bound
scas
mov
push
sbb
push
fldcw
jns
dec
cmp
pop
iret
dec
ss
repz
xor
mov
ljmp
mov
add
mov
rep
inc
pop
cmp
lret
push
adc
dec
sub
or
icebp
cltd
es
jl
cmp
sbb
cmp
dec
xchg
imul
ret
pop
jbe
mov
sbb
pop
inc
mov
pop
cmp
push
data16
cmc
add
test
pop
mov
loop
sbb
mov
push
and
xchg
push
xor
adc
pusha
dec
xor
mov
jbe
sti
xor
out
mov
int
dec
push
pop
mov
inc
sbb
je
cwtl
arpl
mov
outsb
js
lods
cmp
lods
insl
add
andb
shrl
mov
xor
fidivrs
test
dec
add
loope
sbb
inc
and
in
jecxz
hlt
pop
daa
outsl
inc
xchg
sbb
and
jmp
and
pop
sub
jl
add
cmc
cmc
les
clc
and
sahf
in
repz
cmp
test
cmc
mov
popf
or
pop
xchg
jg
out
push
xlat
mov
les
cmp
xchg
xchg
sub
and
icebp
mov
xor
nop
push
movl
add
pop
in
addr16
and
cli
insl
xchg
sub
outsb
adc
mov
fs
mov
pusha
pop
dec
adc
pushf
mov
mov
pop
in
push
and
xor
loopnew
push
push
call
gs
fwait
lret
xchg
push
jbe
ret
cwtl
cmp
adc
xor
xor
sbb
ds
dec
dec
stc
xor
jle
jae
gs
fs
xchg
sbb
jmp
loopne
cwtl
fwait
push
gs
inc
sbbl
lods
enter
add
cmp
repz
xchg
jne
mov
mov
sbb
pop
or
call
cmpsb
adc
movsb
xor
jae
ljmp
or
push
das
add
fs
ret
pop
lods
adc
cmp
or
mov
ljmp
imul
jb
mov
sub
rcrl
jp
pushf
jno
mov
mov
cmp
pop
cs
scas
sub
test
pop
insb
sub
mov
nop
mov
pop
xorl
in
sbbl
sbb
jmp
mov
dec
int
push
cmp
test
gs
cmp
push
mov
sti
in
subl
rolb
pop
pushf
xlat
xor
pushf
cltd
inc
hlt
sar
cwtl
mov
push
pop
xchg
jge
push
es
lods
int3
arpl
into
movsb
and
cs
and
aaa
or
dec
xor
or
testb
lods
xchg
mov
or
push
jne
popa
cmp
adc
mov
dec
mov
test
rcll
in
psubq
cmp
jae,pn
push
add
data16
dec
xchg
pop
je
or
daa
mov
pop
adcb
dec
jp
xchg
addb
cmp
imul
inc
inc
mov
sub
pop
jle
sahf
dec
push
add
stc
fcomps
sbb
jo
ret
xor
bound
subb
pop
mov
xor
mov
fwait
push
stc
scas
rcr
cs
cmpsl
push
jge
lret
push
arpl
cli
xor
pop
push
nop
cmp
xor
adc
fcoms
dec
test
adc
cmp
add
sahf
push
push
subb
mov
out
sbb
or
push
nop
outsb
lahf
xor
mov
movsl
shlb
mov
cmp
shlb
push
add
sub
cmovge
aaa
xor
out
lods
mov
cmc
sub
inc
pushf
mov
pop
xchg
dec
mov
mov
loop
stos
push
jecxz
jmp
pusha
jno
cwtl
and
push
add
dec
test
add
js
scas
mov
lods
leave
cmpsb
mov
or
enter
bound
and
mov
or
es
cmc
mov
fs
test
js
outsb
lock
or
xchg
and
mov
lock
fisubrs
fs
jo
nop
bsr
push
roll
in
jp
wbinvd
xor
fwait
adc
jae
insl
push
dec
icebp
std
push
nop
mov
hlt
push
pop
sub
int3
xor
sub
push
push
aas
or
sbb
nop
and
neg
push
pop
rcrl
mov
inc
enter
push
loope
lds
pop
push
xchg
or
dec
inc
insb
dec
jno
iret
mov
into
aad
mov
lea
push
hlt
push
jb
arpl
sahf
sahf
mov
pop
xchg
dec
dec
aam
in
into
enter
dec
cmp
pop
add
es
jp
dec
pop
hlt
ficoms
xor
cmc
js
mov
push
lahf
daa
inc
push
xor
dec
addl
shrl
cmc
jp
add
out
into
xchg
cmc
pusha
loopne
fwait
outsb
jge
stos
insl
mov
cmp
push
gs
pop
das
mov
add
fcom
jle
add
sub
pop
and
push
or
fdivrp
fcmovnu
sbbb
jnp
loop
push
imul
lcall
pushf
sub
out
rorl
jns
and
enter
mov
scas
inc
int
in
or
aaa
insb
or
insb
push
cmc
icebp
sbb
popa
imul
pop
mov
inc
mov
xlat
les
sub
mov
nop
rorb
mov
xor
lods
fs
cld
es
enter
movsb
fdiv
mov
jbe
adc
ret
xor
or
push
lret
jbe
je
xor
scas
lcall
add
jmp
enter
test
pusha
hlt
sahf
add
fnstsw
add
mov
adc
mov
inc
out
push
test
ja
dec
out
push
mov
adc
cmpsb
and
sbb
sbb
push
add
mov
adc
jne
pop
in
and
inc
aaa
lock
mov
aaa
arpl
scas
mov
mov
mov
push
mov
mov
rorb
mov
stos
xor
push
cltd
iret
mov
insl
mov
jp,pn
lret
mov
pop
push
iret
sub
out
pop
jne
mov
push
xorl
stc
adc
push
cmp
add
ljmp
xchg
jae
cmc
ja
pop
push
xor
pop
push
and
test
xchg
shll
inc
aaa
dec
mov
lock
xchg
bound
je
lock
adc
pop
jnp
mov
lods
incb
and
mov
fsts
lock
lret
fwait
into
dec
cmc
pop
jnp
push
cmp
mov
loop
xor
hlt
jne
aas
cmpsb
rcll
and
in
dec
or
cmp
cld
mov
aas
fimull
pop
or
add
sub
lods
arpl
jne
ret
jbe
pusha
cmpsb
push
lds
xchg
les
pop
addb
inc
sub
repnz
jge
xchg
push
inc
roll
fwait
loopne
pop
and
or
xor
or
jg
cmp
adc
test
cmp
dec
push
js
bound
imull
sub
and
scas
inc
sub
or
push
out
mov
popf
test
popf
or
fisubs
mov
lret
jmp
fidivs
pusha
ficompl
neg
cmp
mov
loop
pop
xchg
ja
pop
push
jne
cltd
and
cmp
out
push
inc
fsubrs
xor
jb
jle
adcl
mov
daa
xchg
mov
int3
nop
xor
add
rolb
scas
pop
lods
jae
adc
rol
push
ss
test
mov
mov
add
neg
ror
shll
pop
push
inc
popa
cmp
push
add
inc
arpl
or
dec
sbb
outsb
cmp
ret
push
xchg
js
and
pop
repz
inc
mov
shll
aad
sti
nop
test
rcrb
pop
jbe
xchg
icebp
aas
test
mov
xchg
test
js
xchg
mov
pop
inc
mov
mov
cmp
xchg
jb
xor
mov
test
jbe
pop
pop
mov
fsub
jge
fistpll
daa
es
push
mov
dec
mov
adc
xor
loope
jg
mov
fwait
pop
inc
jne
out
repz
adc
jne
pop
cmp
cwtl
mov
sub
out
dec
cmc
or
loop
fnstsw
fnstcw
push
sti
arpl
xor
xchg
shll
and
jle
rolb
stos
cmc
sbb
lods
fldenv
and
pop
pop
mov
clc
inc
xchg
add
xchg
mov
mov
nop
fisubs
xchg
rclb
je
xor
pop
pushf
add
out
dec
inc
and
cs
outsb
push
aad
aas
dec
push
pop
or
pop
jb
lods
std
insb
add
das
sahf
out
pop
xor
mov
outsl
test
pop
outsb
bnd
js
adc
mov
inc
subb
fmull
pop
daa
cwtl
aas
sbb
jmp
mov
push
or
out
int
jne
repz
ljmp
or
test
aam
cmp
fnstsw
scas
pop
repz
lea
xor
aam
dec
inc
dec
test
test
scas
or
cmp
in
push
xchg
movsb
jne
xchg
lock
fistps
insl
stc
sub
pop
stos
out
mov
xchg
insb
aam
loopne
cmpl
es
xor
and
xchg
in
mov
jmp
fsubl
xor
xor
adc
stc
mov
and
shlb
cmp
sti
ss
jmp
call
hlt
nop
inc
sti
mov
pop
loopne
mov
mov
xor
testl
pop
mov
mov
daa
lret
aas
out
push
mov
repz
sbb
xchg
dec
jno
mov
push
jne
mov
scas
jb
push
sbb
cwtl
xlat
bound
jl
test
lahf
xlat
test
ds
xor
int3
cmp
jp
and
adc
mov
xor
nop
mov
shlb
push
push
or
add
or
adc
adc
jmp
stc
and
lret
jge
push
ror
test
inc
shrb
jo
mov
insl
fwait
pop
cmpsb
pop
jmp
pop
outsb
dec
pusha
ss
or
jle
stc
pusha
daa
das
mov
mov
xlat
std
ja
jp
js
in
jbe
les
push
movsl
insb
outsb
push
xchg
test
mov
imul
aaa
je
cmc
hlt
into
std
xchg
in
add
pop
lods
loopne
jnp
push
push
ds
sub
xchg
push
ss
js
sbb
enter
cwtl
adc
mov
loope
mov
imull
xor
aas
subb
mov
xor
fimull
lock
add
cmp
xchg
mov
jl
pusha
jb
in
js
sub
cmp
jne
cmpsl
ret
popa
or
jmp
push
pushf
clc
fwait
push
nop
sub
jg
xor
push
je
push
sub
sub
xor
cmp
push
dec
int
cmp
fidivl
lock
adc
jne
jns
aam
insb
daa
mov
inc
and
xor
xchg
cs
movsl
and
inc
hlt
sub
sti
jb
xchg
mov
push
sarb
std
add
lds
fldt
add
push
push
test
loope
xor
lret
pop
mov
test
inc
subb
loopne
push
lods
and
es
cltd
aas
adc
adc
stc
loope
dec
outsl
insl
or
popa
push
inc
sbbb
jge
mov
test
xor
subb
push
push
or
cmp
mov
pop
jne
add
add
xchg
push
cmp
stos
jo
push
dec
xchg
pusha
and
ror
and
sahf
sub
lods
pusha
fdiv
xor
jp
jmp
xchg
mov
in
pop
lret
insb
mov
addr16
fcoml
lods
mov
dec
js
mov
cmp
mov
imul
jo
shrb
je
pop
push
cwtl
adc
jge
insb
jp
and
out
xor
icebp
stc
or
cmp
cmp
adc
mov
cmc
inc
mov
and
fistpll
fs
sub
jmp
xor
jmp
loop
xchg
push
cmp
xchg
jne
nop
mov
jbe
and
xor
imul
pop
int3
fidivrl
jnp
push
xor
xor
cmp
xor
mov
les
cmpsl
fdivrl
push
sbb
add
pop
jl
imul
cwtl
inc
pusha
rorl
aam
mov
cmp
and
insb
cmp
lret
mov
xchg
pop
pop
insl
insb
repnz
add
mov
sbb
and
or
adc
pop
push
cmc
and
and
dec
push
js
xchg
and
out
cwtl
je
push
sub
sub
lcall
int3
jo
adcl
xchg
pusha
cwtl
clc
icebp
push
int
enter
dec
mov
pop
rclb
fwait
sub
sbbb
mov
push
pmulhuw
pushf
popa
aam
andl
lret
call
push
pushf
and
sub
outsl
sbb
test
mov
pop
push
xor
mov
jns
movsb
cmp
cmc
jl
movsb
es
and
sub
inc
addb
inc
inc
add
in
sbb
cs
popa
popf
cmc
xchg
dec
clc
dec
je
and
dec
push
and
or
cwtl
push
push
enter
dec
loope
adcb
incb
inc
mov
cmp
jae
push
sub
pusha
mov
mov
jle
pusha
lea
add
test
sbb
call
pop
arpl
mov
into
mov
cli
push
or
add
pop
cwtl
cmpsb
xlat
mov
cmp
lea
loopne
push
jmp
xor
repz
sbb
loop
inc
imul
sub
jo
dec
jmp
or
sub
or
ror
lods
fidivl
adc
mov
pop
fdivl
pop
movsb
scas
inc
and
dec
dec
call
xor
push
cmp
nop
das
cmc
pop
and
insb
js
shlb
iret
adc
es
xor
sub
rcrb
cs
fsubl
mov
lock
sbb
xor
data16
mov
add
xor
mov
jnp
and
sbb
sub
xor
test
dec
out
outsl
jns
addl
mov
data16
push
nop
pop
cwtl
aaa
jecxz
mov
push
fsubrl
add
es
mov
mov
jl
sbb
fstps
jp
pop
mov
jns
jg
hlt
dec
mov
cmc
add
jp
xor
nop
or
dec
add
aaa
jnp
push
icebp
lcall
mov
imul
std
sbb
cld
pop
ss
lock
mov
mov
xor
nop
inc
mov
mov
mov
jecxz
inc
iret
sbb
push
xchg
daa
ds
bound
push
or
mov
sahf
fmul
cli
xchg
mov
cwtl
xor
add
popf
dec
dec
out
call
push
movl
insb
and
fwait
daa
jge
repnz
sub
push
lcall
call
xor
push
scas
mov
add
and
xchg
mov
lods
icebp
cmp
sbb
push
sub
mov
repz
insl
dec
xor
inc
sahf
inc
rol
add
out
je
nop
mov
ret
push
ret
dec
or
arpl
pop
or
pop
cmp
rclb
mov
lods
pop
aad
aaa
push
mov
cs
lds
pop
mov
movsl
push
push
in
cmp
jge
push
imul
add
mov
mov
out
add
insl
push
jp
add
push
out
push
xorl
test
loopne
es
cmc
xchg
pop
je
daa
ljmp
fs
jge
aam
cs
fnstcw
pop
or
sbb
mov
leave
cld
push
jp
ljmp
cmpsb
sarb
sbb
push
sbb
cs
jmp
sarb
gs
jp
leave
sbb
cmp
jl
jns
lock
sarl
jmp
xchg
shrl
mov
mov
imul
inc
pusha
dec
lret
pusha
or
mov
cmp
push
push
dec
fldcw
sub
orb
or
mov
nop
out
inc
xor
cmovo
and
sub
movsb
das
insb
cltd
ja
mov
xor
insl
pop
je
adc
gs
and
pop
xchg
popf
dec
shl
mov
push
int
iret
push
pusha
xchg
pusha
subb
jp
lods
mov
ret
cmpsl
cmc
pusha
hlt
bound
fbld
mov
cld
pop
lock
sbb
cwtl
push
cmp
inc
dec
int3
jl
addr16
push
add
je
add
cwtl
loope
std
push
and
adc
pushf
jl
adc
add
movsb
and
xor
arpl
out
cwtl
xor
dec
mov
outsl
insl
add
dec
lret
push
add
xchg
fstp
in
aad
dec
sbb
cmp
lods
mov
pusha
fisttps
add
pushf
mov
outsb
sti
pop
rorl
inc
cmp
stc
and
stos
jns
pusha
pop
lret
fmull
rorl
cmc
mov
jg
sahf
es
add
sbb
push
inc
sbb
pop
lcall
push
jle
nop
test
jl
inc
sti
mov
addb
sti
mov
fs
adc
inc
inc
mov
insb
fdivs
mov
iret
loope
pusha
cmp
push
sbb
rcrl
push
xchg
lds
aas
outsb
js
loopne
loop
movsb
xorb
enter
out
cmc
loope
ror
cmp
js
jne
lods
mov
je
cltd
pop
call
pop
in
push
cmp
and
fimull
push
cwtl
rcrb
enter
xorb
mov
daa
imul
mov
sbb
test
push
and
push
add
jnp
scas
sub
rcll
sub
jne
push
addr16
in
xor
repnz
dec
push
sub
and
fistpll
cmp
or
sub
cmp
enter
pop
xchg
xor
rol
je
and
mov
punpckhbw
js
stos
sub
lahf
repnz
xor
mov
fs
xchg
push
lods
cmpb
rclb
sahf
xor
sahf
mov
insl
jecxz
push
xchg
in
pop
dec
sbb
loopne
push
std
sub
cmpsb
notl
pop
lods
loope
int3
xchg
call
pop
fdivrs
and
cmc
pop
and
inc
or
lcall
call
inc
cmp
lcall
push
sub
mov
cli
pusha
hlt
fsub
dec
add
stos
and
add
cmp
rcr
daa
into
in
mov
adc
fsubs
push
sub
insl
or
xchg
push
push
pusha
sbb
data16
lea
inc
xor
push
insl
adc
bound
inc
ljmp
lret
cwtl
daa
dec
ja
push
loope
dec
cmp
fmulp
mov
rcrl
xor
sbb
pop
push
push
and
pop
rolb
mov
jae
fs
add
sbbl
sbb
mov
sbb
lds
xchg
insb
inc
lods
inc
mov
push
fwait
imul
mov
lahf
fcos
or
dec
adc
insb
fstpt
or
pop
pop
andb
push
sbb
adc
stc
add
push
push
and
add
cmc
int
xor
mov
or
and
bnd
adcl
add
jnp
pop
lock
mov
sbb
inc
or
cld
adc
xlat
lods
adc
fnstenv
adcb
cmp
sti
push
add
popf
add
sub
and
or
jle
push
fs
inc
mov
or
mov
cmp
pop
ret
push
pop
dec
aad
push
dec
pop
xchg
xor
into
pop
pop
push
adcb
scas
in
or
mov
imul
out
loopne
shrb
rolb
cmc
jmp
pop
insb
xchg
and
dec
xlat
jnp
add
adc
pop
andb
dec
outsl
hlt
pop
in
jnp
inc
stos
cltd
std
xor
mulb
push
ds
xor
push
mov
mov
test
push
cmp
add
cmp
add
and
pushf
das
out
cmpsl
pushw
insb
popa
jno
mov
adc
push
js
sbb
inc
push
xchg
fcomps
mov
inc
dec
mov
xchg
test
mov
mov
jb
pop
mov
xchg
outsl
cld
aas
hlt
mov
scas
hlt
mov
push
fiadds
mov
dec
insb
lods
jp
sbb
je
xchg
inc
cltd
fsubl
insb
xchg
jb
pop
js
bound
push
xchg
mov
jl
lods
ss
shlb
outsb
lock
les
xor
outsb
loopne
pushf
dec
and
adc
js
xchg
xor
adc
inc
loopne
xchg
fwait
sub
imulb
xchg
dec
jle
xor
lock
fwait
and
push
sbb
ret
nop
cli
pusha
iret
mov
in
xchg
dec
xor
cwtl
cmpsl
pop
insb
lods
push
inc
push
pop
lock
test
sbb
push
mov
inc
push
jns
mov
adcl
jp
jl
jmp
icebp
pop
jns
cwtl
add
in
sahf
insl
or
cmc
leave
push
xlat
sub
add
mov
outsb
mov
xor
cmp
xor
pushf
pop
push
fs
jle
mov
outsb
push
lcall
dec
dec
jae
sub
jae
lret
outsb
aad
pop
ret
mov
and
clc
lret
subl
out
adc
mov
dec
mov
in
sub
es
mov
cwtl
or
mov
sub
adc
and
cwtl
sbb
and
pop
outsl
mov
cmpsl
aad
lock
and
inc
test
lock
int
mov
jns
imul
lret
sub
movsl
jmp
outsl
mov
cmp
shrl
pop
cmpsl
cld
sub
and
out
pop
sti
pop
leave
xor
out
mov
outsb
call
rcr
sub
rorl
or
fisubrl
loope
out
repnz
into
jle
adc
mov
cwtl
pop
mov
rol
add
ror
inc
mov
call
lock
mov
inc
fdivr
adc
int3
mov
hlt
push
addr16
mov
insl
pop
xor
push
add
dec
je
cmc
ja
insl
inc
cwtl
cmp
pop
xor
daa
sbb
cmp
js
mov
bound
and
xor
cwtl
xor
mov
sbb
add
sub
pushf
stos
mov
lret
sbb
sub
lret
repz
fs
rcll
fwait
adc
repz
xor
je
cmpsl
cmp
sbb
mov
jne
inc
data16
xchg
or
sbb
iret
mov
imul
sbbb
push
adc
add
xchg
push
mov
out
cmp
je
frstor
jbe
xor
dec
xor
mov
into
js
jne
dec
ss
nop
pop
fs
cld
icebp
fnstcw
adc
jne
xor
in
sbb
test
inc
mov
sarb
pop
sub
sti
shlb
nop
xor
jb
mov
int3
loop
je
cmp
pop
vmovss
adc
jnp
push
pop
ja
inc
loop
sub
dec
dec
pop
inc
test
adc
push
in
movsb
pop
pop
loopne
enter
push
push
push
cmp
outsl
xor
push
cmp
mov
jl
fcomps
push
fstl
repz
inc
das
jae
pop
je
hlt
mov
or
shlb
aas
or
shll
subl
cmp
xchg
sub
cmp
push
jae
sub
mov
push
call
cwtl
mov
xchg
mov
outsb
xchg
dec
jns
lcall
outsb
xorl
adc
push
fs
sbb
into
rcll
mov
jg
pusha
aas
or
daa
pop
fsub
sbb
sbb
cltd
jnp
sub
nop
ja
in
dec
adc
add
mov
mov
std
jp
arpl
sbb
mov
scas
das
adc
push
jp
xchg
push
mov
mov
js
scas
jnp
and
xchg
shll
sahf
cmpb
repz
inc
fs
bound
xor
sbb
sbb
lcall
shll
xchg
cmpl
rep
jne
enter
fcmovu
repz
xchg
xor
xchg
ret
iret
pop
bound
repz
mov
clc
lods
repz
pushf
jb
inc
dec
fs
imulb
pushf
loopne
clc
ja
fisubrs
sub
mov
addr16
and
nop
pop
push
inc
jae
xchg
addl
jnp
cmpsl
mov
fsubrp
push
dec
pushf
push
mov
xor
stc
shrl
mov
imul
jae
cmpb
and
repz
jge
and
add
add
mov
bound
imulb
ret
lahf
adc
scas
pop
inc
insl
icebp
pop
push
sbbb
dec
les
jl
sbb
mov
pop
ret
push
je
sbb
sub
or
adc
sub
add
aam
mov
jbe
je
sub
int3
shrb
loope
bound
push
stos
xor
mov
or
sub
mov
mov
leave
cwtl
in
adc
jp
cmp
jp
sbb
scas
and
neg
mov
cmp
jae
cwtl
pop
push
cmp
jno
inc
dec
rcr
js
push
sub
cmp
xorb
outsb
mov
repz
insl
fwait
scas
mov
sarl
mov
inc
popa
aam
sub
mov
push
pusha
lret
inc
pop
dec
mov
add
sarb
push
repnz
mov
add
sbb
add
mov
dec
push
jnp
cwtl
sub
push
jge
lds
jns
sbb
inc
push
inc
fwait
mov
mov
sub
pushf
pop
and
stc
xor
out
cwtl
adc
std
lahf
je
shll
mov
out
push
enter
push
data16
or
dec
mov
push
push
jge
jle
push
xor
push
fnstsw
adc
sub
lahf
loope
xorb
data16
mov
pop
pop
repz
je
sbbb
cmp
sub
loopne
push
lods
pop
in
fsubl
pop
leave
jnp
push
stos
jnp
add
cmc
adc
out
cmp
bound
or
outsl
jbe
inc
pop
pushf
lea
and
out
or
in
xor
insl
cmp
cmpsb
fdivs
movsb
loopne
call
push
push
xor
adc
mov
fwait
shld
movsb
xor
idivl
jnp
dec
xchg
das
clc
std
fs
push
int
jb
mov
add
or
pop
push
std
xchg
lret
push
addr16
adc
mov
jmp
xchg
adc
test
xor
mov
sbb
inc
addb
jb
add
cwtl
repnz
in
int3
fmuls
ss
mov
js
and
xchg
in
mov
test
sbb
push
pop
inc
mov
push
das
out
outsl
mov
ds
cmp
jne
fwait
jae
outsl
and
aad
fstl
fucomi
xor
sub
int3
and
inc
xor
lods
aad
adc
bound
mov
fwait
adc
cs
push
adc
fsub
aaa
repz
and
orl
stos
jns
arpl
mov
test
fstpl
jg
bound
mov
into
mov
addb
xchg
rolb
das
inc
cmp
stos
push
push
mov
push
sbb
mov
fimuls
stc
cmp
jns
rorb
xchg
idivb
jae
jbe
inc
aaa
outsl
jmp
sub
mov
das
dec
loope
mov
push
pop
outsl
nop
or
sbbb
push
and
sbb
aad
iret
jnp
cwtl
popf
sbb
fstl
sbb
push
je
clc
popa
idivl
in
dec
pop
jno
pop
mov
int3
stc
adc
cmpsl
or
out
push
mov
xor
mov
sub
repz
repnz
mov
lock
in
or
roll
jne
fs
push
and
pop
mov
inc
cmp
adc
xlat
fs
bound
bound
enter
sahf
mov
pusha
stos
and
test
leave
popa
and
jl
xor
push
jno
pop
dec
testb
sub
inc
dec
pop
lret
pop
dec
sahf
jno
dec
fs
mov
test
pop
sbbb
ret
cmp
imul
je
fldt
sbb
gs
and
je
add
lret
xor
aaa
pop
mov
rcrb
in
popf
ds
push
pop
xor
cwtl
inc
setnp
test
adc
cld
sbb
mov
pop
aam
mov
pop
out
in
pusha
and
hlt
xor
in
add
mov
and
enter
jno,pt
filds
shr
mov
fdiv
loopne
xor
dec
push
add
lods
scas
outsb
and
inc
xorl
rorl
clc
iret
int3
push
adc
mov
pusha
test
push
dec
in
cmc
fs
mov
push
cmp
mov
xchg
and
xor
les
push
jnp
sub
mov
aaa
and
in
stos
call
pmullw
xchg
mov
sbb
sti
xorl
testb
cmp
and
sarb
insl
stos
dec
mov
nop
sahf
sub
jge
push
jnp
pop
icebp
xchg
fisubrl
sub
push
xor
fs
arpl
ds
adc
and
jl
imulb
add
dec
stos
add
pusha
inc
sub
cmc
sub
xor
roll
cmp
dec
adc
cs
subb
xchg
or
mov
jae
jl
and
sahf
nop
popf
fisubs
push
jno
fs
nop
gs
xor
push
cmp
cwtl
sub
cmpsl
jnp
bound
into
jmp
fs
mov
cmp
inc
hlt
or
pop
and
adc
cld
sub
and
pop
pop
lret
push
add
push
shlb
dec
and
fwait
mov
iret
mov
or
inc
inc
lcall
push
pop
push
add
jg
cwtl
int
aas
dec
imul
in
cs
repz
xchg
or
mov
xorb
mov
scas
mov
or
push
mov
push
push
sti
lahf
dec
in
icebp
hlt
inc
inc
jae
xor
dec
fs
mov
mov
daa
xchg
testb
xchg
movsb
ss
outsl
roll
dec
dec
xor
mov
cmp
hlt
cmp
push
pop
lock
pop
loop
mov
sbb
clc
fnsave
push
call
sbb
cmp
lods
jp
jnp
ds
dec
aas
cmp
jb
cmp
cmp
inc
jno
pop
add
fsubs
dec
gs
push
dec
das
and
in
jl
xchg
lds
sub
nop
lods
repz
jp
mov
rcrb
scas
xor
mov
insb
adc
shlb
pop
pusha
subb
push
repnz
mov
inc
js
add
jns
aam
jno
inc
imul
inc
repz
test
jp
lods
dec
push
rorb
inc
inc
rcrb
jne
stc
es
adc
xor
adc
xor
movl
pop
cmpb
mov
and
sbb
sarb
pop
inc
xchg
inc
jb
js
mov
or
into
lods
pop
sbb
inc
pop
lods
jle
jl
pop
xor
mov
outsb
mov
je
cmc
mov
inc
cmp
je
clc
cmp
mov
xchg
dec
xchg
jp
scas
sub
out
int
xchg
mov
sarb
jno
xrelease
lcall
popf
clc
ja
adc
mov
ja
lods
nop
js
ss
pusha
jl
repz
outsb
test
adc
ret
jbe
pop
xchg
arpl
btr
adc
repnz
jns
jb
cs
pusha
imul
popa
pop
js
ja
jns
jp
imul
dec
pop
mov
inc
and
fiaddl
mov
push
dec
and
sub
xor
jno
int
loopne
cmp
pop
cwtl
jns
jne
ds
pushf
push
insl
cltd
mov
or
and
jnp
imul
or
mov
add
cmpsl
add
push
stos
idiv
testl
push
out
cmovns
add
and
and
sub
mov
push
xchg
imul
push
lock
inc
jne
cmp
mov
stos
rclb
movsl
icebp
sti
xor
fsubp
bound
ja
jp
loope
loope
pusha
fstp
fldenv
pop
or
outsb
push
xchg
sbb
dec
in
pop
cmp
inc
jl
sbb
data16
push
and
sbb
pushf
sbb
jnp
rolb
pop
rcrl
adc
out
and
test
ds
sbb
stc
dec
pop
nop
mov
shll
jb
mov
push
add
sbb
sub
jno,pt
mov
push
add
adc
push
outsb
jb
xor
leave
test
sbb
or
mov
mov
xor
lahf
inc
jl
or
addb
pop
js
pusha
fwait
pop
xor
push
cmpsb
pop
mov
and
es
push
out
xchg
mov
out
psubw
cmp
xlat
xor
cld
cmpb
pop
mov
pop
fs
jno
aam
cltd
adc
jns
xor
aaa
ljmp
mov
insl
push
pop
mov
inc
and
cwtl
sbb
test
xor
ss
movsl
in
inc
aas
xor
add
pop
and
sub
insl
js
arpl
rcll
xchg
push
outsl
popa
xor
test
leave
popa
cwtl
xor
call
pop
inc
sub
sub
addr16
mov
pusha
fsub
fmuls
lcall
lea
in
inc
and
pop
hlt
pop
arpl
cmp
gs
dec
clc
xor
jno
sbb
das
pushf
lods
loop
shll
sbb
pusha
mov
cmc
add
pop
inc
gs
pop
scas
je
ss
jb
adc
add
into
jne
push
push
in
jbe,pn
test
mov
movl
pop
je
js
scas
jle
dec
add
inc
jb
pop
jbe
or
or
fisubrs
adc
gs
pop
dec
jae
jns
lods
cmpsl
jns
inc
cwtl
sahf
sti
loope
jmp
loopne
popf
popf
std
test
clc
add
inc
imulb
pushf
fists
lods
dec
inc
outsb
jb
adc
inc
xchg
pop
pop
mov
xor
leave
scas
cmp
fwait
clc
add
jnp
dec
outsb
movsb
mov
rcl
xor
add
push
sub
lret
int
add
scas
push
and
or
push
insb
pop
lock
and
fptan
call
adc
jmp
inc
push
adc
jbe
leave
imul
js
test
bound
inc
push
xor
adc
jns
data16
out
add
push
jp
popa
sub
roll
sub
mov
hlt
sub
rolb
pop
call
cmpl
xor
rcrl
lock
cmc
or
mov
jge
push
sti
jnp
sbb
push
ret
dec
cmp
mov
push
popf
or
outsb
lods
xor
push
fidivs
dec
cwtl
sbb
sbb
cmp
gs
mov
xchg
mov
xor
clc
scas
or
and
inc
daa
sub
inc
insb
and
xlat
int
mov
cmp
inc
and
dec
mov
imul
push
imul
cmp
mov
fwait
jne
mov
daa
enter
sbbl
loopne
mov
fisubs
into
data16
mov
push
adc
outsl
xor
imul
pop
push
add
clc
push
mov
push
and
xor
cmp
xor
push
push
jne
dec
pop
xlat
je
gs
cmp
push
xor
iret
push
and
mov
inc
in
test
mov
mov
push
pop
add
cmp
push
pushf
dec
clc
mov
sbb
add
push
dec
dec
dec
push
push
fs
lock
jl
mov
pop
push
push
in
sub
jns
scas
dec
int3
inc
push
jl
mov
fidivrs
loop
cmpsb
jecxz
add
mov
push
adcl
xor
push
mov
pop
js
push
lea
in
inc
arpl
push
or
jne
and
xor
or
out
out
xor
jge
inc
push
dec
mov
scas
aad
sbb
mov
pop
sar
xchg
int3
aam
insb
pop
mov
int3
dec
xor
outsb
push
shll
push
adc
jns
push
sbb
notb
cmp
leave
sub
mov
je
popf
jg
hlt
add
dec
ja
xor
push
dec
lods
idivb
dec
shl
jno
pusha
bound
or
inc
push
cmp
xchg
pop
mov
inc
cwtl
loope
sbb
adc
jbe
cmp
mov
test
shll
aaa
jno
inc
stc
sarb
mov
lret
call
pop
loopne
mov
imull
cwtl
adc
prefetchwt1
jno
loopne
insb
push
in
popa
mov
push
ficoms
mov
xor
mov
jmp
or
and
cmp
pop
jo
pop
repz
cmp
dec
cmp
add
inc
jno
jb
dec
dec
lret
inc
hlt
push
and
incl
or
push
pop
adc
outsb
push
outsl
popf
push
fwait
lret
pushf
cwtl
and
in
sbb
sbb
cwtl
aam
sbb
pop
sub
jb
sbb
mov
xor
and
loop
notb
push
jnp
jl
rolb
adc
mov
add
pop
es
add
jge
mov
jno
sbb
cwtl
inc
ds
jl
jge
inc
cmpsb
pusha
fisubrl
outsb
cwtl
push
sbb
fcmovne
loop
dec
add
sub
and
divb
pusha
into
and
pop
repz
dec
jmp
aad
jne
je
dec
movsb
jbe
fstl
lods
nop/reserved
inc
rclb
or
lods
jl
repz
jg
gs
mov
arpl
cwtl
push
rolb
ja
cltd
imul
sub
push
cmc
ja
mov
adc
inc
imul
add
stc
cmp
stos
xor
cmpsl
bound
fstpt
cmpsb
xor
lods
addr16
add
cmp
jne
bound
in
cs
or
jp
bnd
sub
mov
rolb
dec
adc
pop
arpl
mov
pop
push
add
pop
ss
lcall
out
and
insl
cs
in
mov
cmc
pusha
loopne
cmc
push
imul
xor
mov
mov
gs
call
aas
scas
test
jmp
sub
rcr
lods
daa
inc
pusha
push
loope
sbb
and
sahf
inc
jge
add
sti
pop
and
jbe
sbbl
dec
xchg
popa
xchg
xchg
pop
push
insl
pushf
mov
adc
cmp
andb
ret
push
call
jmp
inc
adc
lods
jl
and
sti
sub
adc
sbb
bound
lods
nop
xor
or
mov
dec
dec
fnsave
push
sub
icebp
pusha
icebp
out
cmp
fs
js
dec
fistps
dec
fidivs
push
push
shll
dec
stc
je
dec
les
push
cli
aaa
outsl
add
and
pop
lea
sbb
sub
pop
es
and
mov
pop
arpl
jl
cmp
jp
jns
cmp
jno
sbb
jo
and
push
cmp
cwtl
movsl
xchg
sbb
jb
cmp
push
cs
xchg
mov
xchg
mov
test
addr16
or
pop
movsb
inc
sti
aam
test
addb
xchg
push
and
lods
push
sub
add
or
imul
lea
mov
mov
cmp
or
xor
sub
lods
cmpsb
rcr
stc
cmp
xor
jbe
mov
aaa
mov
xchg
rclb
sbb
pop
shl
jl
cmp
fwait
addr16
das
dec
lods
xchg
push
stc
rcll
das
mov
push
mov
repz
xabort
inc
xor
lds
pushl
stc
icebp
xchg
arpl
xor
sbb
xor
stc
inc
push
inc
test
cmc
stc
jle
loope
hlt
dec
jmp
cs
mov
mov
ja
pushf
repnz
jmp
push
shll
in
fisttps
and
into
stc
cmp
xor
mov
add
call
sti
xor
sub
pop
xchg
jecxz
inc
pop
pusha
push
inc
cld
pushf
xor
pop
pop
int
mov
dec
cmc
fs
jno
sbb
mov
pop
inc
loop
and
jl
pop
mov
lahf
sub
enter
sub
cmp
call
mov
push
scas
push
in
mov
mulb
cld
add
mov
push
fidivl
outsl
pop
nop
mov
aad
sar
dec
inc
xchg
and
insl
fwait
mov
insl
cmp
mov
aam
icebp
add
dec
inc
cwtl
je
addr16
popf
jl
mov
outsl
add
clc
js
pop
mov
jnp
insl
aam
inc
ficompl
insb
enter
in
hlt
icebp
pop
mov
inc
adc
pusha
jnp
stc
xchg
fldt
lds
pop
mov
fs
pusha
jne
pop
add
add
aad
js
cmp
pop
fs
insb
jno
daa
in
dec
cwtl
xchg
scas
aas
rcrb
int
scas
scas
cmpsl
pushf
mov
clc
xorb
out
sub
lcall
push
int3
insb
jb
stc
jmp
ret
jae
scas
pop
bound
scas
jno
in
jb
push
push
ljmp
xor
mov
mov
add
mov
and
mov
mov
stos
sbb
cmp
sub
and
mov
sub
dec
lods
adc
push
aad
push
xor
pop
cld
xor
iret
es
jo
lock
imul
fwait
or
popa
js
hlt
mov
cmp
in
jne
pushf
dec
scas
ficomps
adc
repz
push
mov
jl
and
jb
pop
hlt
jp
dec
jae
jecxz
push
jae
gs
jbe
aam
pusha
cmpsl
sbb
xchg
jl
xor
jae
and
mov
jne
ficoms
mov
xchg
and
int
mov
aaa
add
repz
out
sbb
jnp
sti
pop
sbb
test
sub
jns
insl
inc
lret
push
pop
xor
mov
mov
and
lret
pop
in
mov
aas
sbb
leave
adc
cmc
aaa
sbb
and
mov
mov
ljmp
mov
bound
out
test
pop
cs
cmc
imul
add
jno
call
cmpsb
imul
xor
xor
and
stos
pop
mov
xor
fwait
mov
add
sub
mov
cmpsb
adc
test
mov
sub
aas
loopne
xchg
int
jmp
adc
push
out
pusha
pause
mov
mov
xchg
fdivs
dec
mov
inc
add
mov
push
jnp
mov
bound
mov
dec
push
stc
xor
arpl
in
icebp
stc
xor
push
cs
loop
jp
add
repnz
lcall
jg
push
jp
mov
mov
jnp
xor
push
xlat
xchg
aad
aaa
add
pusha
fistps
mov
inc
nop
pop
stc
mov
pop
negb
adc
push
push
dec
int3
jb
fiadds
nop
div
fs
js
xor
imul
and
mov
scas
mov
xchg
nop
insb
mov
icebp
popa
xchg
sti
mov
add
xor
jnp
mov
out
jle
fmul
insb
ja
es
cmp
jbe
adc
add
jge
sbbl
jp
mov
jae
je
jbe
add
or
jb
ror
xor
mov
xchg
std
js
xor
sub
fsts
js
xchg
testl
fldt
or
inc
inc
cmc
cwtl
out
and
and
lods
push
dec
push
nop
fwait
xchg
and
iret
adc
cwtl
fiadds
add
sahf
xchg
xchg
mov
outsb
mov
xor
pop
lds
push
sub
jne
push
sti
add
rol
add
and
mov
mov
add
push
and
sti
xor
mov
nop
gs
sub
xchg
pop
imull
mov
adc
sbb
ljmp
pop
or
outsb
jecxz
add
nop
pusha
js
or
or
push
and
movsl
je
jno
pusha
in
sbb
scas
jbe
jl
sbb
xor
pop
insl
or
cmp
insb
clc
mov
inc
int
xchg
gs
pop
mov
push
cmp
xchg
outsl
mov
call
aad
arpl
mov
dec
imul
pop
sahf
outsb
hlt
and
push
ljmp
inc
jbe
rolb
mov
negb
sub
inc
das
adc
loopne
xchg
sarb
pop
shll
sbb
loope
shlb
insl
inc
arpl
sub
xadd
jns
enter
mov
push
sarb
push
in
or
lods
xor
or
pusha
mov
xchg
cmp
js
rep
push
jno
and
cmp
inc
fs
xchg
icebp
loopne
ret
jmp
sub
out
sbb
bound
movaps
das
and
ficoml
mov
lret
jae
decl
loop
adc
pop
shrb
sub
push
push
cmpsl
jno
stos
mov
aaa
inc
mov
cltd
repnz
xlat
dec
clc
xchg
test
mov
pop
push
push
mov
xor
xor
mov
dec
mov
pop
mov
push
stc
mov
jp
out
cmp
mov
add
pushf
sbb
dec
pop
push
imul
in
cli
es
sbb
movsb
js
fadds
stc
or
xor
adc
pushl
icebp
jnp
ss
dec
jecxz
mov
fs
je
into
pop
pusha
repz
and
cmp
add
pop
ret
jl
sub
fistl
push
popl
dec
cwtl
push
mov
cmp
pop
mov
pop
or
add
mov
pop
mov
pop
and
add
xor
dec
dec
repz
mov
out
xchg
hlt
jge
dec
xchg
js
orb
pop
cmp
cmp
arpl
cwtl
xchg
and
add
daa
jnp
mov
mov
pop
int3
movsl
push
sub
xor
mov
pop
jg
xchg
lock
fucomi
nop
push
sub
lods
adc
test
push
rcrl
leave
xor
pop
negb
push
outsb
clc
sub
mov
test
fwait
jbe
mov
mov
sub
push
jl
fs
loope
test
jmp
fs
dec
adc
pusha
dec
xor
mov
sub
jl
or
out
sub
push
enter
int
lock
and
sub
pop
ja
dec
or
add
and
pushw
out
pop
mov
pop
das
lahf
adc
jecxz
push
push
and
inc
insb
jbe
mov
ss
pop
sahf
lds
or
jno
outsb
rep
push
enter
test
xchg
push
mov
xor
sbb
mov
rolb
xchg
inc
xchg
xchg
dec
test
mov
js
cmp
cmp
mov
int
cwtl
or
dec
and
push
inc
shll
ja
mov
popf
sub
nop
adc
decb
inc
xchg
test
data16
mov
test
pusha
dec
subb
mov
cmp
push
hlt
fwait
push
lret
add
push
cmc
imul
fs
dec
jl
push
cmp
aaa
data16
push
push
and
xor
dec
dec
sar
push
outsl
mov
mov
inc
jno
divb
push
das
into
dec
cmp
scas
lret
cltd
mov
and
xor
push
pop
aas
adc
mov
mov
inc
or
mov
mov
push
dec
sub
fwait
insl
xor
dec
push
add
xchg
jb
or
mov
icebp
pop
mov
cwtl
add
cmp
xor
outsb
lret
jo
fwait
jnp
cmp
mov
repnz
hlt
rclb
clc
stc
add
xor
adc
sub
lret
and
add
adc
sbb
addr16
jnp
push
add
pop
xor
repnz
jbe
jbe
dec
je
pop
icebp
notb
inc
cmp
xor
mov
pop
jnp
leave
mov
mov
fldcw
loope
fistl
orb
imul
loop
mov
jl
outsb
jnp
sbb
inc
or
sub
fwait
sbb
jp
xor
inc
loope
popa
jbe
jb
outsb
xor
xchg
jnp
ds
aaa
incb
xchg
adc
fwait
cmp
and
pop
push
in
mov
mov
call
or
cmpsl
push
lock
or
push
hlt
lock
jae
sbb
out
or
push
jae
dec
jbe
dec
add
push
mov
sbb
and
jnp
jno
js
bound
andb
push
js
outsb
je
push
ja
in
mov
hlt
out
mov
sbb
xor
cwtl
std
cmp
js
push
flds
cs
push
pavgb
pop
adc
xor
fs
xchg
lock
dec
outsl
jno
hlt
push
je
cmp
mov
shr
js
push
hlt
xchg
mov
scas
push
testl
fdivp
push
jnp
mov
js
push
arpl
adc
dec
call
mov
imul
inc
call
arpl
jl
jne
add
aad
push
enter
cmp
adc
pop
pop
pusha
inc
cmp
mov
outsl
inc
rcl
mov
cmc
pusha
sti
call
add
and
ffree
call
mov
push
cmpsl
jns
cld
je
pop
in
cmp
shlb
fs
dec
push
sub
and
mov
jns
cwtl
sub
or
imul
cwtl
daa
iret
mov
mov
jbe
pop
inc
push
push
repz
pop
pusha
outsl
lods
cmp
kmovb
and
addr16
dec
jg
xchg
cmp
jnp
and
push
dec
cmc
pop
xchg
fidivl
jns
daa
inc
les
xchg
aad
js
aad
sub
mov
aaa
sub
or
aas
repz
dec
dec
cmc
inc
ret
xchg
mov
stc
xchg
mov
jnp
ret
adc
add
cwtl
cs
or
lea
jns
clc
fwait
shlb
daa
es
mov
je
sub
sub
rorl
cwtl
push
mov
push
pusha
outsb
fs
dec
out
ds
pop
push
mov
cmc
outsb
xchg
mov
dec
push
outsl
ds
insb
jb
insl
pop
cwtl
popa
cmp
movsb
outsb
jle
sti
xchg
push
or
push
arpl
sub
shlb
mov
push
mov
dec
xchg
les
xor
lret
ret
sbb
xor
icebp
mov
rorb
dec
js
jle
mov
in
cmc
and
push
sbb
pop
insl
add
es
pop
pop
jnp
outsb
xchg
insb
mov
xor
hlt
mov
dec
inc
sbb
idivl
insb
inc
incl
in
ljmp
fidivs
cmpsb
test
hlt
jae
jbe
push
push
je
mov
bound
nop
mov
fcmovnbe
mov
xchg
dec
xchg
jb
mov
xor
xchg
shll
pop
push
bound
fmuls
cmp
jne
stos
xchg
pop
loope
mov
and
mov
cmpsl
pushf
shll
jae
or
imul
mov
push
aad
andb
mov
fwait
mov
or
xor
fwait
pop
pop
testl
jnp
cwtl
stos
dec
lcall
xor
pushf
inc
shrb
cmp
sub
loopne
adc
inc
cmc
jp
ffreep
jno
cwtl
insb
xchg
mov
mov
es
roll
mov
pop
dec
je
outsl
add
cmp
adc
call
mov
sub
mov
jae
test
into
push
xor
sbb
popf
add
dec
pop
nop
inc
or
jge
jge
cli
xchg
sysenter
mov
pop
jp
hlt
mov
test
mov
mov
add
pop
mov
sub
push
loopne
sbb
jne
adc
arpl
and
mov
xchg
hlt
aas
test
mov
cmc
call
fs
sbb
js
lods
pop
sbbl
ds
mov
ret
mov
sbb
add
mov
testb
cmpsl
push
out
jae
jl
lods
insl
dec
aas
inc
and
pop
loope
ss
mov
push
pop
repnz
or
mov
aas
icebp
add
lret
mov
dec
mov
hlt
fucomp
lea
aam
mov
cmpsb
dec
pop
adc
cld
insl
lods
insb
mov
pop
jb
push
push
in
jne
mov
pop
out
jb
sub
out
add
cmpsb
and
xor
xor
shrl
dec
arpl
mov
sub
cmp
pusha
pop
hlt
adc
pop
pop
push
enter
cmp
jmp
outsb
gs
aad
sti
add
jb
pop
jne
xor
js
jl
xor
mov
xor
inc
pop
nop
jb
into
jnp
pusha
dec
daa
pop
push
hlt
lock
movsl
mov
push
xor
dec
mov
imul
sub
push
aad
pop
and
scas
push
test
imul
hlt
repz
dec
ficompl
insl
jb
je
push
and
enter
arpl
pop
mov
jp
and
icebp
data16
push
scas
fcmovbe
mov
idivb
xchg
clc
xchg
fwait
cmp
push
daa
sub
insb
xor
mov
sub
add
pop
mov
orb
push
jnp
ja
arpl
mov
fistpl
int3
xchg
push
adc
pop
push
or
xor
adcl
rcll
dec
out
fwait
sbb
xor
das
scas
ret
jae
iret
jnp
and
pop
xorl
pushf
cs
fs
mov
push
shrb
js
pop
cmpsb
fs
loop
inc
in
mov
dec
outsl
add
lret
nop
clc
push
and
pushf
jno
inc
fs
inc
test
bound
xchg
clc
enter
jmp
sub
mov
loopne
testl
add
jb
xor
mov
xchg
push
bound
mov
es
xchg
xor
mov
sub
mov
arpl
or
and
cmp
in
pop
std
out
es
sbb
jne
clc
dec
lret
pop
int3
adc
and
mov
xchg
outsl
xchg
jbe
testb
arpl
xor
mov
push
js
jge
xchg
cmc
cwtl
push
add
pop
repz
push
pushf
lea
arpl
outsb
push
repnz
outsl
xchg
dec
dec
cmp
jns
imul
dec
insl
pop
test
xor
hlt
dec
jbe
mov
scas
stos
jno
jbe
outsb
lahf
lcall
sub
jge
mov
shlb
sub
sub
je
cmpb
cmp
dec
pop
cmpsb
cmc
nop
xchg
ja
mov
mov
movsl
filds
scas
outsb
in
mov
ret
push
movsb
mov
mov
scas
loopne
jno
cwtl
das
and
inc
inc
pop
mov
mov
and
adc
mov
shlb
lret
mov
mov
repz
cmp
sub
mov
jl
add
mov
mov
xor
mov
sbb
in
repz
push
sar
leave
ds
pop
lret
mov
pop
pop
push
enter
push
roll
sbb
aam
sbb
adc
xor
jbe
sub
insl
je
add
cwtl
out
add
movsb
xchg
lcall
sub
clc
cld
jno
mov
adc
stos
add
xor
xchg
outsb
cwtl
and
icebp
repnz
outsb
clc
sub
cld
pop
leave
je
mov
pop
test
push
jne
and
add
mov
ss
jg
bound
clc
cwtl
adc
adc
cmp
enter
loopne
out
jns
mov
mov
aam
cmp
jno
cmpsl
or
pop
je
mov
sti
mov
lods
addb
jbe
pushf
das
and
push
mov
test
push
and
inc
pop
dec
mov
add
es
cmp
pop
add
test
ja
sti
insl
outsl
mov
or
adc
mov
je
mov
cwtl
sti
sub
inc
xchg
cli
push
rorb
arpl
pusha
jae
fwait
mov
adc
sbb
loopne
mov
loopne
loopne
pop
negb
sti
mov
das
push
in
jecxz
bound
ja
lahf
inc
shll
mov
inc
scas
mov
movsl
jns
jb
clc
jbe
add
fs
in
outsl
notl
or
push
xor
add
mov
jae
sbb
adc
fistl
push
scas
xchg
imul
imul
leave
jns
jp
out
std
sub
movsb
inc
mov
or
xchg
pop
pop
xchg
out
sahf
push
cmpb
pop
jl
test
aad
inc
sti
lods
sub
push
test
ss
mov
in
sbb
clc
jb
lahf
inc
test
dec
cmp
jl
push
les
fs
dec
push
push
mov
jg
arpl
cmp
shrl
dec
mov
insl
pop
or
fs
sub
mov
inc
iret
aaa
sub
xor
mov
insb
pop
test
cmp
clc
je
dec
adc
sahf
lods
rol
dec
addr16
sub
lods
add
or
inc
cwtl
mov
cmc
and
mov
pop
gs
insl
sbb
imul
add
stc
or
push
dec
push
jg
addr16
fwait
js
or
push
scas
sbb
push
jns
sub
cwtl
lea
pop
push
dec
dec
jl
mov
insl
xchg
fwait
paddd
jbe
outsb
or
ret
push
pop
mov
dec
dec
push
push
push
sub
insl
push
push
push
scas
or
sub
in
js
std
cs
mov
mov
fwait
inc
in
adc
repnz
push
icebp
inc
jecxz
jecxz
mov
push
leave
mov
and
arpl
fwait
cmp
adc
and
lods
cwtl
out
jbe
lods
insl
inc
mov
push
lods
insb
xor
in
mov
mov
adc
add
mov
stos
mov
cwtl
mov
repnz
adc
jg
fcmovne
jmp
ret
and
outsb
adc
icebp
push
mov
stc
lock
inc
adcl
push
cmp
addl
insl
les
mov
pop
insb
or
arpl
lahf
insl
sub
add
dec
pop
xor
mov
pop
cmpsl
jnp
and
push
adc
push
loope
inc
insb
sub
imul
rorb
inc
jp
stc
xor
loopne
pop
mov
and
jnp
jne
clc
push
popf
shl
clc
ja
sbb
outsb
mov
push
mov
cs
pop
addr16
sbb
xchg
pop
sarb
loopne
inc
inc
imul
xchg
push
ds
fs
push
je
mov
in
jne
pop
xchg
dec
sti
xor
test
dec
pop
cwtl
xchg
pop
pushf
pop
fisttpll
xchg
pop
test
dec
mov
stc
je
arpl
dec
push
cmpl
sbb
fs
loopne
dec
jl
mov
pop
push
pop
rcrl
add
mov
hlt
mov
int
mov
jge
imul
or
out
in
xor
insb
push
mov
adc
jne
lods
jae
das
nop
lcall
sub
rclb
std
lcall
loopne
ret
les
int3
jg
ret
dec
decb
mov
sub
lock
clc
rorl
jne
xor
fdiv
rcrb
sbb
insb
add
pop
push
aam
pusha
xor
sti
aam
js
xor
sti
aam
in
and
jns
dec
jne
push
js
in
push
js
ret
cwtl
pusha
mov
loop
adc
or
scas
ja
mov
hlt
lret
es
jno
mov
lods
sbb
or
fs
addb
in
mov
cmp
aaa
pop
sahf
inc
fadds
dec
pusha
mov
adc
xchg
cmp
jne
movsb
mov
mov
add
test
mov
sbb
inc
fcomps
aad
rcl
dec
je
mov
in
std
cwtl
ror
inc
and
sti
push
lahf
cwtl
shll
movsb
xlat
and
mov
arpl
scas
loope
xchg
pop
jl
mov
loope
scas
inc
lret
push
cli
scas
cwtl
or
cld
int3
lods
dec
ret
push
repz
stc
or
cmp
jp
sub
fldcw
in
stc
jp
dec
aas
cmp
jo
daa
cwtl
push
imul
jecxz
pop
rorl
or
adc
jo
fs
push
jno
gs
popa
and
jp
dec
hlt
or
cmp
outsb
sub
sti
fildll
push
dec
jecxz
insb
xchg
push
mov
mov
pop
lods
xor
mov
and
shlb
push
pop
js
and
mov
pcmpeqw
cmc
pop
in
jnp
fisubl
arpl
xor
mov
pop
pop
add
add
ret
adc
mov
clc
dec
dec
mov
aaa
fnsave
sbbb
ja
mov
out
xchg
push
je
out
andb
add
lea
cmp
jecxz
lock
adc
push
push
and
sub
out
push
xor
cwtl
push
movsl
in
xlat
sahf
test
das
xchg
andl
iret
adc
and
cwtl
sub
repz
sarl
xor
jno
hlt
mov
negl
mov
std
jbe
sub
mov
mov
fwait
xchg
xchg
lea
cmpsb
xchg
adc
dec
scas
pushf
xlat
jle
pop
push
test
rorb
inc
es
sub
fadds
xchg
ret
xchg
xor
xor
fwait
dec
outsl
aad
sahf
add
rcrb
out
cmpl
xor
jmp
sub
sub
dec
jb
push
pop
clc
imul
ds
mov
stos
jno
jbe
inc
iret
loope
stc
outsl
out
cmc
jb
xchg
pop
hlt
xchg
movsb
cld
stos
pop
rorb
push
out
add
and
mov
int
xor
outsl
insl
inc
stos
xor
xor
sub
test
cmc
push
or
inc
fmuls
loopne
sub
js
lock
push
adc
fwait
pop
jns
ficomps
popf
ss
in
xchg
pop
xor
fistpl
mov
ds
aam
cmp
aaa
mov
and
sub
enter
mov
test
mov
sbb
inc
int3
pop
sub
mov
cmp
or
push
sub
cmc
pop
subb
sub
push
mov
mov
stos
inc
imul
call
imul
cwtl
icebp
movsl
insb
je
int
xor
inc
ficoms
sub
jae
iret
or
mov
in
and
outsb
test
stos
push
call
and
in
test
pop
inc
jne
lock
xchg
outsb
stc
aas
je
or
sub
mov
add
lods
jae
daa
and
jno
rcrl
incb
cmc
xor
jne
in
test
nop
mov
lret
ss
and
inc
pop
add
pushf
movsl
or
insb
xorb
cwtl
mov
jl
and
add
fistpl
fs
jno
outsl
cmpsl
mov
dec
fists
mov
imul
out
cmp
mov
adc
cwtl
std
lret
cmp
xor
jmp
adc
out
push
jne
enter
ret
in
mov
xor
aam
lds
dec
insb
mov
xor
push
sub
std
mov
xor
mov
stc
ss
dec
push
rcll
inc
jne
xchg
jbe
scas
add
insb
jno
cmp
xchg
mov
cmc
test
arpl
mov
dec
imul
aas
shlb
stc
and
dec
mov
daa
xchg
pop
cmp
call
loopne
mov
mov
push
pushf
stos
or
add
loopne
lock
sbb
pop
dec
into
cwtl
pusha
cmp
push
imul
ds
sub
lods
adc
inc
cwtl
dec
xchg
in
pusha
inc
pop
rolb
push
fnstcw
aas
movsb
pop
repz
and
dec
popf
sub
or
mov
and
mov
pop
sbb
into
aas
sub
mov
daa
in
pop
divb
out
cld
jbe
aas
add
or
inc
je
xchg
in
iret
jae
sbb
dec
hlt
mov
mov
je
iret
xor
mov
lret
test
xor
mov
loopne
mov
call
xor
inc
cs
or
push
int
cmp
std
adc
fcomp
dec
subb
jbe
xor
mov
jae
subl
loopne
cld
fistl
cs
jl
daa
push
scas
xchg
push
aam
pop
inc
clc
fcomip
push
dec
cld
outsb
add
cmp
mov
xlat
in
xlat
or
addr16
sub
pop
loopne
les
mov
popa
nop
xor
mov
pop
cld
aas
push
mov
stc
adc
stos
xchg
dec
sbbb
cwtl
mov
in
jno
sbb
in
xorb
push
and
adc
andb
xchg
pop
scas
cmp
pop
pop
mov
lock
rcll
fwait
adc
mov
ljmp
inc
ljmp
andb
mov
jecxz
ja
pusha
pxor
inc
out
loope
fmuls
xchg
ja
pop
out
rcrl
dec
jns
sbb
mov
cmp
in
xor
dec
push
insl
fsubrl
fidivl
imul
pop
dec
pusha
movsb
push
mov
pop
push
and
js
push
pop
pusha
arpl
loopne
mov
icebp
mov
xor
pop
adc
jne
cmp
dec
hlt
xor
add
jge
sub
mov
cmp
xchg
mov
and
clc
sub
and
adc
sub
push
add
in
int3
daa
ljmp
sub
push
loopne
mov
jne
fstpl
inc
xor
xor
and
loopne
and
jns
dec
jne
xor
or
adc
mov
sub
mov
out
push
scas
jp
scas
cs
ja
inc
or
mov
jne
pusha
jno
push
clc
inc
xor
dec
and
js
pop
stc
cmc
clc
sub
and
pop
je
pop
fwait
and
inc
incl
inc
ja
stos
lods
xchg
outsb
out
push
in
lock
lea
icebp
xchg
sub
jmp
enter
fwait
rclb
pusha
insl
sub
inc
or
cmp
out
push
mov
addr16
xchg
jnp
shll
jb
mov
push
and
lea
mov
push
bound
xorb
mov
or
movsb
or
nop
cmp
mov
andb
out
insl
add
lods
sub
sub
in
dec
add
pop
ret
cmp
in
stc
popf
dec
dec
xor
xchg
jmp
adc
pop
sub
jl
jb
sbb
stc
xor
push
jns
inc
mov
jne
add
jae
and
bound
repz
or
inc
iret
or
push
je
sbb
sahf
mov
fisttpll
ss
mov
xor
outsl
and
mov
in
fs
and
mov
js
inc
sti
test
pop
cwtl
dec
lcall
jo
cmc
adc
mov
mov
xchg
inc
loopne
cs
pop
scas
mov
cmpl
dec
popa
cmc
fmull
jo
push
in
inc
xor
js
or
data16
fistps
mov
cwtl
push
and
fs
arpl
or
or
jns
mov
les
mov
xor
lods
push
psubsw
js
jae
dec
push
xor
jmp
jno
push
or
outsl
je
xor
scas
mov
or
mov
jne
jno
jmp
jmp
cwtl
stos
mov
and
inc
mov
add
fwait
sbb
sub
mov
bound
cs
mov
mov
cwtl
add
out
sahf
mov
add
jl
mov
fstl
mov
bound
popf
and
push
xchg
inc
fwait
jnp
dec
inc
ja
or
aad
or
sbb
and
cmpsb
arpl
dec
cwtl
icebp
cmc
push
and
adc
cwtl
mov
gs
inc
jbe
or
cmp
daa
lret
add
cld
mov
enter
out
or
bound
inc
lcall
jle
pop
xor
jl,pn
xor
add
and
mov
sbb
and
jp
pop
jno
sub
adc
push
addr16
mov
fmull
sbb
jl
out
jns
mov
mov
or
sub
sbb
dec
outsb
push
out
outsl
inc
xor
cwtl
insb
aam
pop
xchg
es
mov
sub
jge
repz
pop
lods
mov
scas
add
cwtl
mov
push
fs
push
and
push
lret
int
sub
pop
addr16
sub
negl
and
iret
jb
fwait
sbb
loope
inc
scas
inc
jecxz
cmp
ja
push
mov
pop
mov
in
shll
bound
dec
dec
jbe
fwait
or
jno
cmp
loope
jo
xlat
push
shr
jp
or
nop
sub
cmc
inc
sti
push
ja
call
xchg
sarl
pop
mov
and
lock
sahf
mov
add
cmp
adc
cmp
movsb
add
cmp
insl
mov
xor
pop
pop
loopne
xor
in
lods
pop
in
pop
jae
pop
inc
jae
gs
and
test
sub
cmc
xor
pop
outsl
xor
fwait
test
test
xchg
fldenv
jne
and
nop
and
loopne
cmp
xor
mov
insb
out
jg
fwait
in
sar
mov
adc
push
fdivrs
sub
fnsave
sbb
sub
sbb
cmp
dec
insl
cwtl
jg
mov
cmc
xchg
xor
mov
xchg
lret
mov
and
xor
or
sbb
mov
aas
dec
push
sub
into
out
shl
xchg
cmp
push
and
mov
add
ds
xor
jb
mov
cmpsb
les
pop
enter
and
jne
shll
push
mov
stos
leave
call
loope
mov
inc
stc
xor
js
fmull
jecxz
pop
sbb
mov
add
pop
fwait
cwtl
sbb
movsl
rclb
test
addb
daa
mov
and
push
push
insl
fistpl
mov
nop
pusha
sub
sub
in
jl
dec
aam
mov
mov
icebp
cmp
pusha
in
xor
xchg
ret
insb
popa
inc
add
and
leave
jle
pop
push
and
or
jno
sbb
js
data16
leave
insb
pop
cmp
mov
adc
scas
sbb
mov
imul
imul
push
shll
pop
andb
mov
or
insl
arpl
adc
fbld
hlt
ret
bound
xor
push
sub
fmull
stos
in
push
xchg
mov
jae
sbb
dec
push
cmp
insb
mov
out
fnsave
push
clc
fs
dec
insb
hlt
out
subl
in
outsl
aaa
clc
das
je
inc
out
pusha
and
test
test
mov
ffree
ljmp
js
push
xlat
xchg
popf
inc
push
imulb
cmpsb
push
dec
inc
ret
movsb
xchg
negb
pushf
push
je
addr16
cmc
inc
or
fwait
mov
popf
and
lods
pusha
adc
fstpl
fxch
stc
push
js
dec
js
cmc
out
js
scas
fbld
idivl
out
hlt
out
inc
and
pop
push
mov
addr16
pop
scas
adc
lea
jl
andb
or
dec
insb
dec
xor
dec
inc
xor
inc
in
into
xor
bound
subb
cmp
frstor
cmp
jns
jno
jno
js
je
fcoml
scas
andl
call
dec
repnz
scas
mov
jl
xorb
dec
or
ljmp
ret
jo
bound
jl
hlt
xor
dec
cld
pusha
or
in
sbb
xor
dec
in
pusha
push
mov
aam
dec
jl
hlt
xor
mov
mov
pusha
jl
hlt
xor
mov
xchg
mov
enter
jnp
pop
mov
mov
mov
or
ds
pop
iret
jl
hlt
xor
dec
andb
test
mov
jl
hlt
xor
add
dec
push
loopne
divb
ret
sbb
aam
pusha
dec
pop
aam
fs
push
gs
js
repnz
dec
outsb
loopne
hlt
xchg
dec
pop
pop
pushf
jl
hlt
xor
mov
dec
pop
mov
dec
hlt
xor
dec
xor
dec
xor
iret
mov
ret
mov
and
or
jnp
xor
sub
jl
hlt
xor
dec
adc
xor
sub
dec
int
and
aas
clc
dec
sbb
xlat
mov
pop
cmp
loopne
lods
push
inc
je
std
adc
inc
sub
inc
int3
pop
pusha
and
mov
xchg
hlt
add
inc
lret
adc
push
call
outsb
in
inc
out
push
cld
xor
xor
push
push
aaa
fcoms
pusha
push
push
push
clc
dec
pop
mov
xor
push
xor
insb
cmp
jbe
cmp
mov
sub
mov
js
xor
pop
ss
push
cmp
xchg
bound
jg
out
std
nop
adc
int3
lret
es
flds
outsb
jbe
adc
insl
pop
mov
sbb
or
adc
mov
shrl
lcall
mov
xchg
fsubl
fnsave
je
push
push
icebp
decb
and
inc
je
lods
pop
sahf
xor
add
mov
jge
mov
pop
jle
jbe
jl
jno
inc
mov
fwait
sub
aad
jp
insl
pop
sub
pop
pop
in
jo
outsb
clc
gs
mov
sti
dec
pop
sarb
jae
push
and
sub
cmpsb
sub
cwtl
stc
lret
adc
mov
pop
lods
push
arpl
out
and
subb
jne
add
movsl
negb
jne
je
lcall
sbb
and
gs
imul
dec
js
loopne
xor
jnp
repz
dec
inc
test
scas
fwait
pop
je
xor
fdivs
xor
mov
dec
dec
xor
ret
jns
xchg
jecxz
inc
xchg
andl
cmp
or
fcomps
lods
and
jne
lods
push
fwait
jle
pop
rcrb
loop
jne
outsl
ds
out
stc
decb
shlb
dec
in
stos
cli
jle
bound
mov
jns
sub
je
sti
xchg
rcrb
or
xlat
test
mov
cld
mov
fwait
or
xchg
sub
pop
imul
push
rolb
movsb
aad
jge
shlb
inc
jge
push
adcb
out
jnp
xor
jno
xorb
clc
inc
mov
mov
xchg
jbe,pt
add
test
fwait
pushl
pop
insl
xor
add
xor
test
fs
xchg
cld
jb
xchg
xor
ja
es
lods
add
lock
test
pusha
fucom
mov
cld
or
add
cmp
sub
insl
xchg
cmc
push
push
movsb
mov
pusha
xchg
icebp
xchg
stos
push
lock
pusha
cmpsl
daa
add
pushf
inc
xchg
insb
aas
xor
and
les
lret
inc
dec
push
sbb
cmpsb
adc
inc
roll
pushf
pop
repz
fwait
push
adc
jae
pop
popa
arpl
xor
insl
hlt
lahf
clc
sub
pusha
mov
sti
pop
adc
ss
int3
in
dec
lods
out
inc
xor
sahf
and
bound
cmpsl
sahf
andb
filds
pop
push
and
xor
arpl
sbb
jno
and
pop
add
push
lret
mov
add
xlat
mov
add
pop
ja
arpl
shlb
fs
icebp
jle
jge
pop
aas
jo
xchg
hlt
mov
ja
ljmp
cmp
inc
pop
repz
pop
jb
pusha
fwait
jae
jne
sbb
scas
push
push
sub
pusha
std
gs
xchg
cwtl
insb
loope
in
push
mov
ficoml
xchg
push
mov
leave
ret
mov
adc
inc
stos
lock
scas
imul
or
das
xchg
pusha
aas
pushf
pop
mov
or
nop
jmp
mov
mov
mov
push
in
adc
sbb
sti
inc
sub
inc
jb
push
mov
adc
mov
mov
nop
and
sub
xor
xor
cwtl
mov
mov
dec
xor
rep
lods
dec
pop
repz
popf
stos
lds
mov
fwait
ror
or
fisubrl
js
rcr
sarb
jl
rolb
and
not
test
pop
outsb
je
cltd
das
insl
out
outsb
push
ja
clc
cmp
sarb
subb
dec
xlat
sub
xor
push
out
je
es
xor
in
or
add
mov
fisubl
mov
and
and
ss
xchg
push
push
gs
clc
data16
dec
cwtl
sub
gs
add
jbe
mov
pop
sub
sub
or
mov
pop
push
mov
jnp
cmp
jae
out
hlt
les
outsb
add
dec
in
push
mov
jp
push
dec
imul
je
sti
fs
push
jae
insl
fwait
push
test
jno
jbe
outsb
fwait
sbb
add
mov
insl
push
inc
outsl
clc
cmp
icebp
add
inc
jmp
mov
shl
aas
xchg
xchg
or
push
out
addb
syscall
test
mov
repnz
sbb
jbe
and
jno
sub
lret
cmp
mov
fs
inc
sbb
outsb
xchg
or
ja
mov
jnp
fs
pop
pusha
jnp
dec
mov
push
mov
pop
xor
jae
xchg
dec
cwtl
mov
pop
pop
cltd
add
push
jae
minps
push
xor
push
sub
int
mov
and
je
negl
daa
arpl
push
mov
inc
shlb
pop
push
out
mov
mov
xchg
js
pop
ljmp
jnp
adc
sbb
pop
pop
cs
movsl
dec
xchg
pop
repnz
mov
lahf
ds
les
dec
rcll
rcll
out
addr16
jnp
sub
icebp
into
dec
cmp
inc
into
add
pop
jae
dec
out
sub
rol
lods
jl
mov
clc
insl
push
jo
js
cmp
inc
xlat
dec
mov
jnp
aas
cli
xchg
shlb
arpl
jbe
jp
mov
js
add
cs
jno
js
stos
xor
and
jae
neg
imul
cmp
dec
pop
push
or
cwtl
dec
aad
sbb
ja
ds
adc
aas
dec
sbb
sub
mov
sbb
fsubrl
fsubrs
dec
and
insl
cwtl
mov
sub
push
aaa
aad
leave
lods
js
dec
xchg
xorb
rol
dec
xchg
inc
enter
and
mov
xor
stos
add
jnp
push
out
mov
gs
mov
dec
jne
hlt
sbb
jbe
xchg
mov
push
pop
adc
add
xchg
fmuls
das
repnz
nop
xor
frstor
pop
mov
lahf
andb
mov
dec
and
adc
shll
lods
push
arpl
and
nop
sti
xchg
scas
push
sub
cwtl
repnz
inc
pop
adc
xchg
outsl
call
gs
jnp
cwtl
adc
sbb
js
test
mov
mov
ret
inc
cmp
mov
or
xor
arpl
je
cmc
mov
vpcmpgtw
insl
and
cmp
add
adc
adcw
negb
mov
fwait
and
lea
mov
jl
mov
jge
imull
jl
jns
pop
jb
jae
fs
cmp
pop
jns
push
fwait
adc
and
subb
repnz
xchg
jecxz
mov
int
outsl
pop
in
enter
xorl
mulb
les
inc
xorl
lret
pop
cmpsb
imul
pusha
mov
mov
orl
mov
scas
ss
aas
outsb
cmp
sbb
fwait
xchg
test
dec
push
inc
xchg
sbb
xor
daa
call
dec
in
les
push
in
dec
test
out
pusha
out
adc
ljmp
imul
push
mov
hlt
out
mov
xchg
push
fwait
pop
cmp
jbe
dec
mov
pop
pop
hlt
jle
loop
jl
lods
xor
pusha
dec
fs
fidivrl
mov
bound
pusha
out
pop
testb
sti
movsb
mov
jns
stc
or
mov
jb
xor
inc
push
push
test
fwait
mul
mov
popa
sbb
clc
scas
jne
xor
xchg
add
movsb
into
fs
into
mov
fnstsw
cmc
add
push
test
push
iret
mov
test
mov
daa
les
sub
cmp
inc
or
fs
loope
pusha
mov
pop
pop
push
js
cmp
xor
js
popa
aas
inc
mov
mov
mov
inc
xor
out
iret
mov
push
mov
fs
mov
scas
adc
imul
pop
jp
dec
subl
out
add
mov
or
lea
out
cld
mov
jne,pt
dec
fwait
faddp
orb
jbe
sti
pusha
icebp
in
add
arpl
sbb
jbe
jno
sbb
dec
fmulp
adcb
pop
sti
sbb
sub
sub
and
and
mov
outsl
mov
lock
and
push
add
nop
pop
stc
dec
cmc
data16
pop
xchg
out
mov
and
inc
xchg
inc
xor
push
cwtl
xor
js
insl
jle
push
test
shlb
sbb
push
cmc
cmp
cmp
sub
mov
sbb
pop
cmpsl
inc
lret
cmp
cld
mov
sub
movsl
mov
sbb
push
jge
scas
sbb
ja
or
mull
sti
nop
add
mov
dec
xchg
std
repz
loop
pop
fwait
popa
xchg
js
sub
movsl
and
outsb
into
push
mov
xchg
ss
js
or
mov
jnp
push
mov
rol
xor
mov
clc
jae
hlt
push
jns
out
or
ficomps
pmaxub
psrad
leave
ds
xor
inc
nop
or
xchg
out
ja
pusha
gs
push
cwtl
inc
rclb
sub
scas
in
xchg
pmaddwd
inc
mov
add
push
sub
add
push
es
dec
add
ss
xchg
mov
mull
xor
cli
jp
add
push
mov
clc
divl
scas
sti
and
jnp
imul
orl
dec
mov
repz
push
sti
inc
sbb
inc
lds
push
pop
jno
push
daa
sbbb
loop
xorb
imull
sub
or
dec
aad
lock
mov
imul
nop
out
jge
push
lods
xchg
push
clc
or
lods
das
fsubl
bound
in
xor
stos
repz
imul
inc
mov
add
scas
jp
add
push
lods
aaa
lea
xor
inc
popa
pop
fsubr
lods
mov
cmp
data16
lods
add
mov
cmp
pushf
lcall
test
call
in
scas
movsb
test
je
xchg
push
jmp
pop
sbb
cs
cmp
pusha
lahf
repz
ffree
xor
mov
xor
and
add
popa
xor
cmc
nop
sti
mov
enter
dec
sub
jle
cmp
icebp
inc
cmp
jb
inc
arpl
pusha
mov
pop
jnp
dec
jb
faddl
dec
sbb
das
and
fisubrl
jb
ss
mov
stc
insb
ret
out
jae
adc
cmp
insl
push
outsb
mov
test
jmp
stc
das
jns
shrb
push
jno
mov
push
lods
xchg
xchg
lea
jns
mov
xchg
imul
jge
outsb
and
cmp
ret
in
sbb
cmp
je
into
cld
dec
cwtl
in
adc
xor
sbb
pop
jae
fs
icebp
push
pop
cltd
orb
ja
dec
and
dec
mov
nop
jge
push
jl
jmp
push
and
add
hlt
dec
xchg
sti
jmp
gs
pop
pusha
inc
xor
pop
repnz
jno
jmp
cltd
xor
mov
mov
jnp
shll
pop
outsb
test
icebp
insb
imul
dec
or
add
mulb
inc
clc
and
test
cwtl
inc
push
mov
cmp
outsb
out
mov
sti
sbb
jae
gs
xor
pusha
cmpsb
shrl
and
int
stos
pop
mov
mov
mov
cmc
fwait
imul
arpl
cmp
xchg
sbb
in
push
mov
push
push
dec
and
cmpsl
dec
dec
mov
test
adc
adc
cmp
aam
test
dec
cwtl
adc
decb
je
dec
je
inc
xor
js
dec
testb
push
daa
xchg
addr16
repz
jo
lods
ret
add
pusha
hlt
and
and
mov
mov
shrb
ficoms
xchg
push
shrb
dec
pop
pop
movl
push
lods
pop
adc
cmc
shl
mov
pop
push
xchg
cmp
xor
mov
and
mov
cmc
fcoms
push
pop
in
clc
fstpl
cli
sub
pop
mov
jnp
out
test
xchg
js
sub
push
push
clc
and
adc
xor
sahf
xchg
jg
cmp
arpl
xchg
dec
int
xchg
leave
das
pusha
sbb
sub
mov
inc
mov
xor
in
fadds
cmp
add
pop
xor
lock
jnp
clc
mov
movsb
or
js
rorb
cs
inc
pop
mov
xor
and
nop
fnstenv
sbb
insl
call
add
add
out
push
out
sbb
push
xchg
push
lret
incl
mov
shl
pusha
fs
adc
hlt
ret
dec
pop
sub
leave
xor
arpl
stos
pop
mov
insw
shll
insl
sub
cmc
push
mov
pop
xor
jb
pop
pusha
dec
in
cs
push
mov
mov
dec
push
shll
cmpsb
or
popa
cmp
pushf
negb
add
popa
stc
clc
pop
movsl
cwtl
cmpsl
add
loope
cltd
hlt
pop
insl
mov
stos
jp
mov
jb
mov
mov
push
sbb
int
inc
fldl
daa
insb
pop
lods
in
scas
popf
mov
inc
mov
jo
je
insb
nop
out
jnp
adc
mov
hlt
push
inc
push
insl
andb
pop
mov
push
sub
or
jle
lahf
pop
mov
mov
sub
ds
pop
lds
jnp
fwait
das
cld
rolb
add
mov
dec
cwtl
dec
packssdw
and
popa
xor
hlt
dec
mov
popl
add
fstl
repz
xor
jns
sbb
pop
push
add
add
sub
cmpsl
jno
ror
gs
mov
nop
vcmpsd
and
mov
jecxz
jno
dec
data16
jbe
cwtl
push
xor
insb
clc
fldenv
jno
sti
ds
pop
mov
sub
cmc
fcomps
push
loop
mov
inc
sar
orl
aam
dec
fsubrp
xlat
xchg
pop
shll
aam
pop
call
popf
mov
addr16
es
test
mov
inc
call
arpl
dec
arpl
pop
aam
into
int
fs
cwtl
inc
push
int
shrb
cmpsb
es
int
mov
jb
cmp
adc
mov
popa
or
dec
lods
std
xor
or
jle
jne
cwtl
mov
cmc
mov
or
subl
mov
pusha
daa
xchg
pusha
mov
lahf
xor
fisubl
jmp
ss
arpl
xor
inc
dec
and
jmp
and
lahf
fwait
mov
sti
stos
cmp
inc
sub
add
outsl
pop
out
loop
xchg
mov
nop
xorb
cwtl
mov
adc
push
mov
jle
in
enter
nopl
popf
mov
or
mov
inc
or
cmp
outsb
lea
cmpsl
cwtl
cltd
addl
insb
mov
xchg
cmpsl
mov
jne
nop
fwait
jno
and
sub
add
ret
mov
dec
nop
fidivrs
and
xor
push
test
aas
xchg
push
ss
div
cwtl
and
iret
test
int
sub
repz
push
imul
fs
arpl
or
fisubs
pop
cwtl
mov
fnstsw
unpckhps
repnz
cs
sbb
and
push
out
insl
cmp
add
mov
mov
jno
sub
jg
mov
pop
mov
sahf
inc
stos
scas
sub
cwtl
mov
jns
push
mov
cmc
push
jns
jae
sub
cmp
out
add
pop
push
pop
int
cmovge
scas
divl
inc
sub
fs
mov
outsl
into
jne
or
cmc
cmp
xchg
cwtl
ss
lret
rcl
mov
push
inc
mov
add
into
popf
out
in
adc
push
jno
push
scas
cmpsb
shlb
mov
gs
imul
jmp
sub
rorb
inc
pop
sub
dec
dec
add
push
js
add
mov
add
jno
push
out
dec
pop
mov
fwait
lds
cmp
loopne
push
inc
and
ds
add
dec
repnz
mov
xchg
test
jecxz
sbb
fmuls
and
loop
jne
pop
daa
xchg
movsb
push
jge
test
js
pop
sbbb
adc
mov
jae
inc
fwait
aaa
gs
push
lcall
stos
cwtl
xchg
pushf
test
jnp
add
xor
sub
jp
sbb
sbb
and
mov
loopne
mov
xchg
scas
push
mov
dec
movsl
icebp
sbb
outsl
lock
subb
repz
outsl
xor
pusha
pop
clc
outsb
pop
leave
fldenv
push
sbb
insl
push
stos
push
bound
jo
or
push
push
ret
movsl
cwtl
iret
mov
xorb
leave
dec
in
arpl
in
cmp
pop
push
dec
cwtl
loop
inc
pop
aam
fisubrl
adc
lahf
cmp
loopne
xor
ss
push
cmp
inc
rorb
jg
icebp
stos
out
add
ljmp
adc
leave
xor
insb
in
sti
or
int3
bound
fsubs
mov
push
add
es
clc
fsubrs
jmp
sarb
jb
adc
ds
mov
mov
add
sub
cmpsl
das
leave
loop
icebp
enter
in
clc
jne
aas
stos
inc
out
enter
ret
jnp
orb
scas
imul
jecxz
mov
push
or
jae
shl
dec
std
outsb
push
out
add
hlt
pop
gs
fs
push
stos
add
stc
inc
push
scas
xorb
push
lock
sub
xor
mulb
cmpsb
lods
hlt
pushf
nop
hlt
mov
clc
loope
jg
push
sahf
and
jbe
loop
cmc
leave
mov
dec
inc
pop
repnz
cld
cmp
nop
dec
sub
and
scas
movsl
dec
lock
mov
xchg
sbb
js
cmp
pop
scas
sbb
cmc
addr16
xor
leave
into
out
and
mov
pusha
sub
or
popa
xor
cmp
xchg
filds
sub
cmp
fadds
call
mov
xchg
dec
xchg
rcl
xchg
adc
je
add
cmp
psubsw
clc
inc
cmc
lock
xor
je
jle
sti
sub
pop
jle
rcrl
popa
xchg
xchg
outsb
push
sti
cmp
outsb
xorb
mov
jbe
mov
mov
lahf
mov
push
jge
insb
int3
js,pn
sti
dec
sbb
aam
xchg
cwtl
dec
loope
xor
sbb
xor
sbb
push
push
js
in
dec
xor
rclb
sbb
add
popa
mov
xchg
and
lods
pusha
mov
fidivrl
xor
divb
dec
inc
add
out
insl
ss
fsubs
mov
dec
inc
push
dec
ds
sbb
xor
adc
xchg
and
js
in
test
js
in
mov
popa
js
mov
jp
hlt
pop
stc
icebp
shlb
lret
push
scas
push
dec
stos
mov
add
in
dec
jecxz
dec
js
fadd
mov
mov
cmp
in
dec
jne
adc
pop
mov
loop
xchg
insl
lea
mov
pop
push
lea
sub
ds
js
jno
lock
push
mov
cli
lods
sbb
pop
mov
add
stc
movsb
xchg
test
pop
fcompl
adc
xor
xor
mov
xchg
rorb
adc
aam
and
xor
inc
dec
or
sti
pop
push
repz
pop
push
dec
int
pop
pusha
cmp
test
mov
shll
add
outsl
add
sti
jbe
sti
jb
sti
daa
mov
xor
mov
cmp
add
lds
adc
inc
pop
xor
sbbl
jp
js
push
and
fimuls
aam
fwait
arpl
mov
clc
push
mov
inc
inc
loop
push
mov
sti
jae
jne
out
dec
cmpl
mov
out
push
mov
mov
test
gs
jge
je
sub
outsb
and
mov
xor
sti
xchg
lret
mov
cli
ds
clc
jne
push
add
sub
dec
adc
jecxz
inc
xor
lock
pop
add
or
fwait
and
inc
pop
mov
ret
dec
xchg
pusha
inc
pop
divb
adc
sub
jnp
fs
bound
lret
sbb
jecxz
pop
jbe
sti
pop
pop
xchg
mov
jae
sti
xor
xchg
mov
add
stos
add
cmp
cmp
sub
daa
inc
xor
test
in
in
fnstcw
sti
rcrl
sub
and
test
and
pop
pusha
adc
js
in
fldenv
lahf
sbb
das
mov
push
mov
dec
push
jo
dec
ss
in
repnz
pop
cld
cmp
stos
and
push
jnp
ss
cmp
cmp
ds
scas
insb
inc
add
adc
mov
push
in
xchg
dec
push
add
mov
pop
in
sub
and
fdivs
xchg
push
pusha
or
sub
pop
stos
aaa
mov
jp
sbb
shlb
add
mov
adc
cmc
arpl
xor
add
xchg
push
repnz
mov
testb
sbb
cmp
scas
dec
mov
pop
xchg
and
icebp
and
es
addb
xlat
bound
jbe
inc
jnp
je
aas
in
jb
out
jb
jae
outsb
inc
sahf
push
int
icebp
test
sub
shl
es
dec
dec
dec
add
cmpsb
movsl
fdivrp
outsl
loopne
sti
cmpsb
sub
stos
std
dec
or
mov
cmc
mov
mov
jecxz
mov
mov
mov
add
dec
rorl
jmp
test
out
jb
jp
pop
movsb
test
daa
cwtl
lds
cmc
iret
inc
arpl
lcall
cmp
jp
fwait
leave
mov
sbbl
xor
adc
dec
xchg
pop
add
mov
inc
subb
adc
or
jb
insl
insb
inc
xor
or
xor
adc
jp
jle
les
mov
fwait
pop
rcll
xor
xor
js
aam
cs
add
cmp
xor
aad
dec
jne
fstps
fwait
push
pop
mov
hlt
jns
mov
mov
pop
movsl
nop
and
mov
xor
mov
loop
or
push
jbe
cwtl
cmp
out
fistpll
xchg
fsub
xchg
out
push
adc
mov
sub
jbe
js
add
pop
jbe
je
dec
fidivrs
mov
cwtl
lea
xchg
mov
dec
in
add
hlt
iret
and
ja
jb
push
dec
push
jmp
mov
lret
and
je
xchg
adc
add
sub
mov
push
lods
and
jno
stc
sub
sub
hlt
dec
scas
and
hlt
mov
pop
fcmovu
jmp
neg
loopne
dec
inc
std
fdivl
arpl
out
or
and
fs
divb
in
fdivl
hlt
mov
mov
jle
je
mulb
mov
dec
jns
jne
loopne
aas
xchg
test
dec
and
cmp
push
mov
pop
push
mov
inc
sub
xor
mov
push
pop
adc
sub
clc
addr16
rcrl
mov
and
test
pusha
xchg
cwtl
push
mov
mov
pushf
imul
sub
add
sbb
mov
mov
frstor
sets
imul
pop
roll
mov
xor
jnp
sub
insb
sub
mov
push
gs
sbb
js
hlt
sub
out
popa
cwtl
or
movsb
into
gs
fs
pop
int
jno
jp
and
stos
push
jmp
sbb
fdivl
outsl
push
jnp
ficomps
pop
out
cs
arpl
movsb
lock
lods
sbb
out
aad
inc
mov
scas
and
in
cmp
in
nop
push
inc
int
cld
and
add
push
and
in
dec
fs
mov
add
pushf
imul
pop
pusha
mov
nop
imul
and
pop
movsl
inc
lods
daa
icebp
orb
aas
popa
loopne
cmp
in
lahf
jno
in
into
inc
cmp
les
mov
xchg
mov
test
xchg
push
jmp
jae
inc
lcall
jnp
out
mov
xchg
aam
jle
xchg
les
and
xchg
int3
dec
mov
gs
outsb
movsb
mov
movsb
fadds
mov
stc
jp
push
pop
fwait
dec
cld
mov
inc
jl
jb
stos
cli
inc
cmp
jae
cmp
fwait
pop
shll
pop
decl
push
ja
xor
pop
xor
mov
xchg
adc
mov
mov
xchg
pop
xchg
lea
scas
movsb
xchg
loop
insb
jne
mov
sub
enter
fcomp
sti
sub
into
cli
push
jno
xor
jno
mov
cs
inc
shl
cmp
movsb
add
andl
inc
jl
jl
jae
add
mov
fdivr
ja
jns
jns
cwtl
clc
fistpll
fwait
call
das
stc
cs
sub
cltd
cmpl
hlt
int
lret
imul
mov
xor
mov
push
sbb
jnp
daa
addb
jbe
pop
mov
xchg
and
jge
mov
je
jmp
insb
push
ja
add
iret
outsl
dec
js
xchg
stc
lock
mov
jns
lcall
add
inc
or
xchg
lds
sub
adcb
popa
push
lods
cmp
movsb
fwait
loop
cld
les
ja
push
mov
dec
cmp
dec
lock
ret
sub
mulb
fs
and
imul
xor
sbb
push
loopne
sub
jl
aaa
xor
cmp
pusha
add
gs
cwtl
in
push
int3
cld
in
lods
lret
popf
ljmp
adc
or
fwait
push
and
sub
out
ja
jne
push
xchg
daa
addr16
nop
fdivl
jnp
xor
add
or
add
push
fwait
lcall
add
sbb
jb
ss
cmp
xchg
loop
je
xor
scas
inc
add
xchg
in
jg
or
push
mov
mov
inc
add
xor
ljmp
xor
mov
xchg
hlt
and
sub
in
mov
or
dec
clc
addr16
divl
loopne
jne
xchg
jnp
push
sub
and
sarb
xchg
jae
lods
imul
out
inc
bound
dec
inc
out
mov
xorb
sub
mov
jmp
push
js
cld
sub
fucomip
xor
xchg
xchg
fistpll
inc
jle
jbe
sahf
scas
pop
push
pop
cwtl
rorl
push
aad
sarb
jmp
lea
movsb
pop
in
mov
mov
cmp
pop
stos
out
push
je
push
lret
jl
cwtl
int3
jbe
mov
fstps
xor
addr16
push
fidivl
mov
imul
das
shrb
lock
stc
or
inc
iret
orb
shl
clc
dec
scas
fmuls
lods
dec
jl
xchg
in
xor
jo
pop
stos
sub
and
stos
outsl
push
push
imul
mov
sbb
pop
mov
or
cmp
push
xchg
xchg
and
mov
cmpsb
cltd
xor
cmpsb
pop
subb
cmp
pop
hlt
out
js
lea
int3
mov
and
stos
adc
cli
push
xor
push
je
lcall
jl,pn
dec
addr16
sub
cli
es
jbe
ds
daa
xorb
outsb
dec
xor
mov
dec
ret
stos
adcl
in
or
jb
pop
mov
out
fsubrp
mov
push
mov
xor
inc
adc
dec
and
call
leave
imul
or
push
div
dec
jno
inc
push
flds
das
div
mov
fwait
leave
dec
mov
std
or
add
cmp
dec
lea
fmull
or
stos
jae
arpl
jp
fcmovne
popa
push
js
in
lds
jno
add
xor
cmpps
inc
sti
andb
mov
out
shr
push
cld
lods
repz
sbbb
hlt
xor
mov
jo
fstpl
jo
pop
push
mov
xchg
dec
subb
lahf
clc
mov
xor
jne
or
jmp
enter
cwtl
mov
xor
push
push
cmp
movsl
cs
cmp
daa
xchg
or
loopne
fs
repz
cs
xchg
push
cmp
dec
mov
ss
iret
mov
add
divb
jo
outsb
mov
mov
xor
mov
and
sub
imul
fldt
test
mov
and
out
fwait
push
push
bound
lea
jecxz
clc
adc
fwait
inc
cs
test
rcrb
pop
sbb
or
and
push
mov
mov
roll
repnz
scas
or
test
cmc
xor
pop
fstl
data16
subb
push
push
divb
decb
sbb
in
xchg
mov
jnp
xor
cld
mov
jno
xor
push
aaa
imul
or
push
xor
loopne
push
outsb
ja
jbe
dec
adc
dec
data16
pop
jae
push
jbe
jmp
cmpsl
les
ja
inc
jb
fs
jnp
xchg
adc
pop
inc
sbb
decl
push
notl
stc
scas
icebp
gs
cmp
cmp
inc
subl
add
orl
mov
jae
push
mov
orb
pop
leave
jbe
mov
popf
icebp
dec
daa
repz
inc
sbb
iret
clc
jae
sub
and
dec
mov
sub
jnp
push
mov
mov
fwait
mov
lock
outsl
jbe
les
cltd
std
ret
adc
jmp
std
dec
lods
mov
popa
push
popa
mov
outsl
sub
jns
idivb
loopne
cmp
inc
jbe
push
dec
ljmp
fadds
movsb
je
icebp
call
je
or
insl
out
xor
cwtl
out
or
outsb
add
cmpsl
or
xor
or
mov
mov
addr16
inc
xor
ja
hlt
cmp
out
arpl
push
jnp
dec
lock
cs
add
mulb
mov
ret
cmc
xor
sbb
addr16
repnz
cmp
pop
sub
jae
push
xor
mov
xor
and
jno
outsb
inc
or
push
mov
movsb
repnz
sbbl
pop
push
fs
fs
and
jb
xchg
pop
mov
popf
mov
int3
es
sub
aaa
add
lods
aad
inc
sbb
push
addr16
and
push
dec
pop
cltd
cmp
bound
call
adc
or
jmp
nop
mov
adc
inc
fwait
mov
arpl
repz
insl
das
mov
dec
movsl
sahf
pop
insl
push
lea
xchg
cmp
inc
mov
lock
add
cmp
inc
je
fwait
cmc
sub
arpl
xor
ds
outsb
sbb
outsb
mov
insl
mov
adc
push
rcrl
mov
pop
rorb
mov
xchg
mov
jae
push
cwtl
cmp
test
adc
fwait
push
adc
test
pop
icebp
in
loopne
hlt
inc
lea
jne
xor
fs
movsb
cmc
add
hlt
sub
jne
sti
jbe
xor
mov
xchg
fimuls
out
repnz
outsb
cs
mov
mov
sbb
fs
or
xchg
mov
push
lock
xchg
sub
loop
addr16
mov
rcll
fsub
mov
push
mov
jmp
test
fdivrs
mov
jg
adc
sbb
cs
adc
dec
cwtl
pop
clc
stc
call
pushf
imulb
mov
je
loop
xchg
sbb
popf
mov
xchg
push
ret
and
lock
lcall
outsb
js
xor
lock
cmp
push
testb
pop
dec
popa
fwait
push
into
out
jbe
push
bound
data16
xlat
dec
mov
mov
movsl
adc
push
mov
jno
pop
sub
in
outsl
xlat
xor
push
test
mov
jns
sbb
test
das
ficoms
scas
cwtl
mov
adc
mov
in
into
out
xchg
and
dec
out
pop
js
mov
loopne
jmp
adc
shll
inc
pop
popa
inc
jne
jle
dec
push
pop
and
mov
mov
and
mov
push
push
mov
rcll
fmull
sti
fwait
mov
jo
scas
outsl
xchg
jl
lods
add
insl
or
push
adcb
cwtl
test
cmp
sub
xor
pop
sub
dec
inc
out
push
dec
sub
loope
shrl
adc
xchg
stc
inc
es
mov
stc
sahf
es
ss
mov
addr16
adc
es
cwtl
stos
inc
xor
mov
mov
fwait
ficoml
pop
mov
lret
sub
daa
sbb
adc
mov
push
and
shl
je
fs
push
cli
push
cmp
scas
in
xchg
mov
push
mov
mov
push
or
pop
add
xchg
in
mov
and
cmp
lods
push
adc
js
pop
mov
xor
lock
pop
or
jnp
in
mov
je
and
ds
sub
cmp
shll
insb
ret
test
and
jnp
pop
and
inc
sub
les
mov
stos
xchg
sub
push
and
jp
xchg
repz
push
shll
and
sbb
jb
xchg
pop
std
outsb
push
xchg
mov
popa
mov
mov
nop
jae
xchg
insl
popf
stc
mov
jb
outsb
xchg
sti
lods
sub
xor
and
movsb
xor
cwtl
mov
sarl
mov
push
scas
and
xor
enter
shl
int3
dec
clc
cmp
jnp
jns
inc
add
je
loope
mov
sarl
push
add
jae
dec
lea
sub
divb
ss
int3
mov
fwait
pop
loope
mov
sub
mov
mov
xchg
outsl
push
nop
sub
divl
push
daa
loopne
inc
icebp
cmc
add
push
into
and
cmp
loop
enter
xor
ljmp
enter
add
ljmp
add
loope
negb
arpl
hlt
cwtl
pop
lcall
pop
sti
mov
and
mov
int3
cmp
mov
outsl
fcmovu
flds
add
xchg
js
and
push
jle
scas
dec
and
or
iret
pop
enter
lds
fwait
dec
xchg
xchg
shlb
lods
adc
push
sbb
mov
cmc
push
loopne
cwtl
push
insb
sub
push
adc
xchg
sbb
inc
test
pop
jb
or
and
pop
mov
pop
cwtl
xor
cmp
inc
push
push
movsb
sub
int
and
ljmp
repz
test
fdivr
fwait
jne
ret
and
and
mov
std
aas
and
push
mov
outsl
mov
add
lahf
inc
mov
push
insl
rcll
fwait
sbb
push
or
cmp
push
inc
mov
sarl
test
push
shrl
mov
rsm
aas
popf
sbb
addr16
int
daa
insb
push
sub
sbb
inc
test
push
out
push
mov
std
pop
in
stos
fwait
pop
repz
xchg
jnp
add
and
cwtl
mov
sbb
cmp
jno
mov
push
mov
ljmp
fidivl
aaa
dec
xor
sqrtps
popl
clc
repnz
adc
xlat
and
add
sub
xor
or
rclb
push
shrl
repz
cmp
add
jp
and
ss
int
pop
cwtl
fistps
dec
xor
sub
pusha
cmp
cmc
clc
call
xor
dec
jge
push
adc
call
ds
into
shlb
jne
movsb
aas
aam
push
sbb
je
xor
sub
mov
movsb
xlat
imulb
push
cwtl
xchg
gs
addr16
adc
mov
xor
fisubrs
icebp
xchg
pop
int
lahf
mov
sub
pusha
gs
std
pcmpeqd
fcomp
mov
ljmp
das
mov
out
jg
mov
push
les
in
dec
clc
aaa
andb
jge
mov
out
xchg
mov
insl
sarl
jbe
mov
and
dec
aaa
shlb
dec
push
xor
in
pop
pop
push
dec
cwtl
cmp
loopne
repz
mov
push
pop
dec
enter
mov
jne
fimuls
test
cs
sbb
or
jle
jno
out
je
sbb
add
xor
lods
adc
sbb
push
mov
push
add
es
dec
cmp
push
or
js
sbb
ss
loop
inc
lods
sub
loope
sbb
repz
je
test
hlt
sbb
dec
and
cwtl
idivb
xor
jecxz
mov
arpl
repz
jmp
jb
sahf
xor
int
int3
pop
rcl
add
jmp
fs
popl
jbe
mov
cmpsb
and
ds
fs
es
stos
iret
mov
outsb
dec
push
add
cs
cmc
cs
xorl
jbe
push
shr
cli
outsl
je
je,pn
sbb
cmp
push
lret
shll
insb
xor
cwtl
cmp
jae
fs
mov
dec
cmc
imulb
imul
jno
insl
clc
sub
mov
add
imul
jp
mov
lods
xor
fnstcw
outsl
jbe
sbb
aad
lods
pop
pop
pop
xor
lret
mov
mulb
xchg
rcrl
jb
push
rorl
inc
mov
mov
je
push
out
sbb
xchg
cwtl
sub
into
leave
sub
sbb
lods
fwait
sbb
insl
xchg
rclb
dec
ja
sub
rcrb
arpl
mov
jbe
out
add
in
adc
repnz
hlt
repz
cmc
divl
out
pop
aaa
or
icebp
mov
test
jno
cmp
setns
pop
sbb
clc
cs
sbb
xor
xchg
dec
out
mov
fisubrl
mov
das
pop
mov
jo
xor
shrl
cld
repnz
jb
pushf
ret
cmpb
cld
sbb
out
mov
push
out
xchg
cwtl
movsl
mov
cmp
push
sti
adc
mov
fistps
je
js
jl
shl
and
jmp
mov
sub
and
add
push
fdivrl
aaa
cmp
js
mov
mov
cmpsb
fmull
mov
daa
xchg
cs
out
inc
pop
xchg
sti
ljmp
pop
lods
push
cmc
aaa
enter
xchg
and
cmp
stos
push
clc
xchg
loope
jp
mov
call
or
call
ja
add
icebp
adc
fsts
xor
and
sarl
mov
mov
or
xchg
shlb
in
push
and
and
daa
add
sub
pop
pop
lcall
sub
lea
push
sub
int
xchg
aas
add
sub
and
cld
outsl
pop
stos
push
xchg
sar
adc
jle
adc
xchg
pop
lea
arpl
xchg
in
xchg
mov
imul
inc
mov
add
dec
add
cwtl
pop
ja
fs
cmp
mov
mov
mov
out
fs
mov
jmp
mov
in
inc
popf
push
fimuls
or
and
out
push
pusha
xor
adc
cs
dec
sbb
sub
mov
cmp
imul
lea
repz
cmp
lock
sti
mov
jp
mov
mov
push
sub
int
fmuls
into
push
mov
mov
sub
jmp
xor
and
push
adc
xor
adc
inc
fdivs
sti
inc
xor
cltd
and
xchg
orl
xchg
or
pop
iret
add
sbb
in
repz
push
out
mov
pop
outsb
mov
cmp
mov
pusha
jns
inc
jecxz
inc
sbb
movsb
bound
test
aad
rorb
xor
mov
orl
mov
out
jb
mov
js
xchg
std
sbb
enter
sub
ret
stc
inc
les
popf
inc
ja
xorb
loop
adc
xchg
jno
push
add
cmpsl
in
mov
sbb
mov
loope
adc
scas
imul
push
xchg
insb
add
shr
push
xchg
in
mov
pop
dec
scas
test
pop
jge
jae
and
or
popf
add
lods
lea
dec
lods
sbb
jl
push
js
pop
jae
and
scas
push
shr
sti
xchg
adc
repnz
rcrl
adc
xor
mov
bswap
pop
ret
inc
shll
aaa
push
daa
in
out
pop
divb
mov
sbb
scas
fistpll
mov
js
dec
jl
dec
sub
clc
pop
lret
lds
push
insl
jno
imul
push
adc
jnp
ds
pop
and
fs
cwtl
jae
mov
xchg
adc
push
jge
sub
or
xchg
roll
and
sub
je
outsl
sbb
cmpb
cmc
in
sbb
or
jnp
push
dec
and
xchg
call
in
mov
xor
or
addr16
scas
and
xor
sub
outsb
cmovg
imul
inc
andps
add
daa
mov
jns
outsl
mov
sub
adc
dec
mov
pushl
ret
mov
dec
fistpl
outsb
sbb
push
pusha
sub
rcr
shrl
push
fs
movsb
xor
push
xor
loope
rclb
jle
xor
clc
adcb
pop
mov
push
or
pop
inc
call
mov
inc
js
inc
fcomip
aas
dec
pop
test
or
xchg
pop
js
fnsave
sbb
hlt
mov
movsl
add
push
jae
test
push
lods
cwtl
iret
addl
cmp
mov
inc
ss
test
mulb
aas
cwtl
lret
in
dec
into
test
cmp
loopne
lods
std
stos
push
ficomps
sub
inc
mov
cmp
jecxz
addb
push
mov
xlat
and
pop
pop
out
and
xchg
jne
jbe
sbbl
in
ret
mov
insb
les
enter
jnp
or
rcr
sub
cmp
xchg
shll
jno
sarl
fiaddl
push
in
leave
sbb
mov
cwtl
stos
orb
or
outsb
mov
push
jne
pop
rol
dec
scas
push
or
das
push
push
into
ds
mov
dec
iret
mov
dec
sbb
aas
bound
out
loope
push
inc
cmpsl
ret
mov
mov
xor
xchg
push
insb
xor
cmp
inc
lret
dec
lret
inc
mov
pop
dec
cmpsl
add
pop
in
xchg
lret
pop
andb
jo
mov
push
insl
int
jecxz
decl
add
or
ret
jno
outsl
and
stos
push
test
push
xor
sub
sub
loop
add
inc
inc
fwait
jne
add
mov
push
or
pusha
addr16
js
lock
mov
das
sbb
fwait
dec
lods
push
xchg
push
pop
imul
cmp
iret
sub
add
sbb
js
and
in
pop
jno
cwtl
and
xchg
mov
fwait
push
in
test
sbb
bound
inc
pop
xor
and
and
sbb
loope
notl
mov
pop
sti
pop
cwtl
scas
pop
mov
mov
or
sub
cwtl
push
sti
outsb
pop
ljmp
es
idiv
jl,pn
ss
insl
enter
fs
outsb
jg
add
aaa
imul
inc
sub
popf
sbb
lcall
hlt
jg
aam
icebp
insl
push
xor
cwtl
aas
push
mov
mov
push
mov
sub
repnz
fldl
loopne
hlt
int
lock
sarl
xlat
push
loopne
clc
cmp
push
repnz
fcomps
lods
bsf
pop
clc
xor
sub
cs
and
mov
and
mov
loopne
fs
push
and
iret
mov
ljmp
pop
xchg
gs
pop
dec
mov
sbb
xchg
pop
pop
pop
cld
pop
mov
ljmp
fsts
loopne
divb
inc
jne
cltd
inc
aam
push
or
mov
gs
dec
rcll
xchg
push
ss
hlt
xchg
pop
cmp
cs
pushf
aaa
xor
pusha
mov
dec
gs
loopne
aad
dec
int3
dec
into
insb
cld
xor
pop
clc
vpcmov
in
xor
out
mov
fcomps
mov
xchg
loop
jge
js
hlt
cs
mov
fs
unpcklps
cmp
pop
xchg
cs
pop
inc
scas
xchg
inc
pop
lcall
in
adc
fwait
movsb
mov
dec
sbb
in
cmp
ret
add
clc
push
lret
filds
clc
adc
cld
pop
xor
xor
dec
sbb
dec
lock
cmp
mov
mov
fldt
and
pop
pop
xlat
and
loopne
xchg
cmc
aam
mov
into
mov
cmp
icebp
movsb
xchg
or
xchg
push
fldt
inc
test
cs
test
fs
push
or
pop
js
mov
stc
ss
popa
inc
addr16
and
js
inc
lods
gs
popa
ja
enter
jmp
clc
shll
fs
icebp
fstp
movsb
and
cs
out
notb
pop
adc
subb
daa
and
pop
in
scas
xchg
inc
pop
pushf
jp
pop
lret
inc
in
in
sbb
push
pop
fdivl
jne,pn
pop
sub
push
cs
xchg
popa
scas
xchg
cmpsb
aam
xchg
hlt
jo
js
xor
sub
mov
and
inc
jae
jle
clc
shlb
call
fs
push
inc
lret
cmp
fisttps
cmp
rclb
testb
mov
pop
inc
push
into
fmuls
in
jnp
push
dec
push
pop
popa
mov
jbe
fs
xchg
mov
cmp
in
xor
and
mov
into
xor
cmp
xor
adc
push
or
adc
cld
aaa
test
in
dec
arpl
jmp
pop
cmp
fstl
xchg
call
mov
and
cli
xor
fcompl
and
mov
cmp
ss
dec
loop
xor
push
call
sbb
popa
cwtl
imul
or
inc
xor
inc
hlt
dec
adc
xor
stc
cmp
inc
dec
nop
cmc
jnp
push
mov
je
in
rolb
mov
xor
adc
movsb
xchg
dec
jo
cld
mov
inc
insb
xor
aam
mov
jo
test
mov
popf
imul
and
and
add
out
cwtl
cmc
and
push
push
stc
rcll
cmp
dec
idivb
xor
hlt
dec
cld
dec
fs
cmp
jp
fwait
cmp
rolb
xchg
icebp
or
push
hlt
xor
lret
hlt
cs
dec
les
popl
stc
jno
out
shll
inc
fildl
pop
push
stc
icebp
and
leave
in
push
mov
and
push
repz
inc
pusha
xor
adc
movsb
in
fsubrs
je
dec
xchg
pop
push
addb
and
lcall
data16
adc
and
sbb
cmp
add
add
dec
jnp
or
fs
jno
dec
sbb
lods
repnz
ljmp
mov
mov
inc
inc
fldt
aaa
jmp
jecxz
aaa
push
repz
or
pop
in
sbb
dec
andl
clc
rcrb
pushf
dec
je
pop
dec
orb
dec
adc
mov
dec
mov
and
xor
nop
dec
mov
inc
xchg
bound
pop
cmp
push
or
push
push
and
enter
mov
ror
out
xor
icebp
pusha
icebp
into
sbb
add
pusha
sbb
adc
sub
in
pop
jbe
xor
js
sbb
cs
clc
insb
sbb
xor
outsl
test
mov
push
push
lods
mov
sbb
addr16
mov
add
xor
lock
adc
mov
add
outsl
dec
and
repnz
jp
daa
push
hlt
push
or
jnp
and
scas
dec
add
push
ljmp
push
rclb
clc
mov
clc
mov
popf
lea
cmpsl
loopne
xchg
mov
lret
xchg
push
jnp
int
xor
or
cmp
mov
shll
or
dec
xor
std
mov
rcrl
icebp
push
iret
dec
fs
js
idiv
add
ljmp
adc
daa
inc
or
cmp
or
sub
cmp
fbstp
mov
nop
test
je
clc
inc
add
mov
orb
xchg
hlt
xor
loopne
hlt
nop
lcall
hlt
jnp
fdivr
xor
jg
fidivrs
lcall
hlt
dec
clc
jnp
pop
in
cmc
fsubs
fs
dec
les
nop
xor
xor
mov
in
jecxz
pop
sub
sahf
imul
push
clc
sub
loope
mov
cmp
int
jnp
lret
mov
sbb
sbb
js
clc
xor
and
rorb
push
fs
mov
repz
test
push
push
push
into
imul
xchg
aad
push
push
jns
into
jge
sbb
or
fisttpll
adc
in
dec
dec
cld
jne
stos
adc
push
mov
or
arpl
inc
push
cmp
leave
add
jecxz
dec
xor
call
pop
xchg
sbb
dec
outsb
stc
add
clc
inc
dec
mov
push
add
add
jle
jb
mov
jne
sbb
icebp
out
add
jp
or
cld
fdivrl
mov
std
jne
loopne
sub
idivb
jmp
push
sbb
pop
add
dec
scas
add
push
adc
pop
clc
pushf
lods
cli
loope
inc
decb
mov
xchg
in
inc
dec
xor
int3
mov
mov
inc
ljmp
jge
push
cltd
out
mov
xchg
imul
mov
cmp
jge
cmpb
mov
in
lock
xor
hlt
cs
mov
loopne
push
sar
notl
push
aam
pusha
out
les
mov
hlt
xor
fmull
pop
clc
hlt
xchg
dec
arpl
add
movsl
pushf
minps
sahf
stos
rorl
gs
inc
mov
or
movsb
and
inc
fdiv
cs
jecxz
or
aaa
repnz
stos
adc
ds
push
push
pop
jo
outsb
push
pop
dec
cmp
aaa
shl
call
es
jns
adc
dec
mov
loope
pop
add
dec
outsb
icebp
loopne
mov
js
cmp
les
dec
add
xor
insb
cs
dec
int3
pop
inc
mov
lret
jmp
jge
pop
in
out
lock
adc
or
outsl
pop
sub
js
imul
xor
pop
les
mov
jp
fsubrp
jmp
fisttps
int3
mov
pop
xor
loopne
loope
out
orl
cmp
cmpb
cwtl
push
fstl
ss
pop
pusha
xchg
iret
sarl
mov
enter
add
cmpsb
test
movsb
enterw
ret
sahf
icebp
jle
mov
mov
jge
or
sub
inc
jbe
ret
data16
pop
lretw
cmp
push
loope
add
cmp
pop
pop
xor
je
cmpsl
dec
les
js
test
int
roll
dec
mov
mov
shll
adc
cs
push
fnstsw
shr
rclb
shlb
dec
pop
les
cmc
es
les
push
xlat
je
cmpsb
popa
andl
mov
push
sub
fdivrp
shrb
cmp
pusha
popa
mov
fistpll
dec
sarb
cmpsl
adc
push
xchg
add
cmp
pop
iret
push
push
in
repnz
lods
cld
mov
pop
ror
jbe
pop
rorb
clc
xor
sub
lock
test
xlat
add
clc
jl
xor
xor
sbb
add
jl
cld
cs
dec
and
mov
inc
popf
lock
hlt
cmp
jne
lds
gs
or
out
jbe
pushf
or
arpl
inc
pop
or
push
cmpsl
mov
cs
dec
cmp
inc
jo
inc
sarb
cmp
jecxz
pop
and
cld
and
sub
ror
and
movsb
cbtw
and
mov
jno
jl
test
sub
sbb
or
or
repz
inc
cmp
shll
and
mov
sbb
sbb
rclb
int
push
cld
sti
imul
mov
loopne
test
fs
outsb
pop
cwtl
adc
shll
int
mov
sbb
jl
cmp
cli
out
dec
lcall
lahf
inc
sbb
dec
ljmp
ffree
shlb
fldcw
insl
cltd
lock
cmpsb
sbb
imul
dec
fisttpll
rcrb
pop
stos
xchg
jp
cltd
pop
popa
sbb
mov
or
dec
dec
fsubrl
lods
fwait
rorb
cld
mov
pop
loop
pop
bound
mov
fisubrl
mov
xchg
pop
push
lods
push
test
lea
ret
xchg
adc
dec
insl
and
out
push
repz
jg
mov
in
jbe
xor
out
int3
xchg
imul
arpl
xchg
cmp
fs
jl
or
mov
and
inc
fwait
pop
mov
test
mov
nop
lcall
iret
jno
ss
ljmp
xchg
dec
sbb
jecxz
pop
bound
dec
insb
xrelease
xor
push
pop
fisubs
push
lahf
sub
adc
jb
cs
push
subb
xchg
push
fadd
inc
cld
xchg
aas
inc
es
pushf
push
fiaddl
mov
cmp
lahf
popf
push
and
out
jmp
and
mov
test
les
test
pop
enter
xor
add
stos
fs
loope
lea
inc
leave
cmpsb
adc
push
mov
por
imul
or
cmpsl
in
movsl
mov
cmp
int3
xchg
and
xor
inc
xchg
hlt
aaa
test
dec
inc
push
pop
faddl
mov
adc
mov
inc
cmpsl
sbb
pop
lret
or
jbe
xchg
push
or
xor
dec
mov
jno
cmp
pushf
lret
scas
fs
dec
jge
imul
cmp
inc
and
lahf
inc
or
shr
xor
add
add
add
call
cld
cltd
xor
test
scas
sub
fistpl
mov
loope
add
lcall
fisttps
push
cmp
jecxz
ret
pop
mov
and
jnp
loopne
jecxz
test
icebp
mov
out
popf
xchg
jo
cmp
imul
je
jl
mov
jne
push
call
sti
push
xchg
lods
movsl
pop
mov
sbbl
lods
jae
push
add
inc
and
jne
aaa
repnz
sbb
lahf
sbb
or
lahf
int3
sti
push
cltd
dec
fbstp
xchg
int
out
cmp
push
nop
sbb
adc
add
cwtl
dec
ljmp
push
in
jecxz
ljmp
in
push
out
xchg
sahf
cmp
cmp
aam
inc
mov
or
fnstsw
dec
push
push
decb
mov
jp
icebp
iret
gs
dec
sbb
add
fidivl
sub
adc
and
loop
xchg
xor
sbb
cld
aas
dec
inc
and
mov
nop
pop
ret
mov
sub
sub
imul
push
jmp
testb
sub
mov
sbb
sti
lret
dec
or
out
xor
sahf
cld
cli
cld
repz
inc
es
mull
pop
fcoml
inc
stos
sbb
mov
std
push
fldenv
fldlg2
mov
frstor
lret
add
inc
outsl
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
push
pusha
lea
ja
shl
push
sub
test
push
test
add
jne
add
rol
mov
shl
shl
mov
call
dec
divl
addr16
cmp
push
pop
dec
mov
mov
scas
or
pusha
sub
std
out
in
fcoml
xchg
enter
sub
jp
adc
xchg
push
pop
lret
ss
push
inc
dec
fistpll
cmp
lret
scas
xor
push
mov
int3
shrd
repz
jo
addb
sub
xor
pusha
push
test
sbb
xchg
in
rol
mov
cld
imul
imul
or
jno
shrl
mov
pop
mov
pop
fimuls
add
mov
int
add
add
pop
push
mov
out
es
out
in
clc
std
sahf
pop
pop
mov
pop
insl
and
shll
fsubr
push
ds
xchg
insb
jge
mov
pop
cmp
jl
adc
frstor
mov
sub
test
out
jmp
rorl
repz
btr
mov
call
pushf
stos
pusha
lea
jmp
call
lods
pushl
call
outsl
insb
xor
cs
insb
add
andl
cmc
sub
pusha
movb
lea
call
jmp
jnp
pusha
xchg
jmp
sbb
ss
sub
xchg
int3
sbb
cmpl
pop
jmp
aas
sbb
test
inc
sbb
sub
mov
sub
ja
fnstsw
push
icebp
sub
sti
xor
scas
je
push
add
cwtl
loopne
cmc
inc
xchg
inc
loop
xchg
dec
adc
out
iret
inc
sbb
xchg
mov
testb
mull
mov
iret
cltd
mulb
push
dec
nop
inc
xchg
xor
fs
and
ja
icebp
mov
mov
mov
arpl
and
ret
cmp
mov
mov
stos
sub
notb
cmp
inc
xchg
mov
clc
fsubrl
mov
lods
dec
jecxz
push
add
jnp
and
and
movl
mov
pushf
jmp
pop
xor
pop
dec
mov
push
jg
cmp
shrb
fcoml
sarl
test
dec
pop
xchg
mov
inc
cmp
pop
and
mov
sahf
loope
xor
sarb
aad
inc
dec
mov
inc
or
lea
insl
pop
imul
pop
lret
mov
pop
add
mov
loop
sub
fcomps
stos
aad
xchg
cmpb
mov
or
pop
dec
arpl
lods
nop
sbb
push
std
lods
mov
clc
aaa
ds
mov
and
or
lret
out
aaa
sbbl
mov
pop
sbb
popa
adc
xor
sbb
pop
in
hlt
push
jno
and
ljmp
sbb
mov
xor
jae
mov
fisttps
cmp
loop
sbb
mov
mul
dec
test
test
lea
jmp
repnz
or
fimull
xchg
or
pop
inc
xlat
shrb
fcomps
xchg
sbb
mov
pop
in
mov
lods
pop
fcomps
mov
pop
stc
cmp
jne
pop
sahf
mov
inc
xchg
cmp
frstor
mov
push
sbb
inc
aaa
inc
add
xchg
pop
sbb
cmp
sub
jae
lock
stc
sahf
add
and
outsl
aas
pop
scas
sbb
int3
loop
xchg
addr16
jne
test
sub
mov
pop
and
das
pop
rclb
add
ds
scas
int3
in
fcos
lock
fwait
inc
jg
push
pop
sub
xor
jne
lcall
mov
mov
fiaddl
test
in
xor
jnp
das
jne
bnd
lret
jl
or
daa
push
lock
std
std
xchg
inc
ret
je
pushf
jg
outsl
jge
push
cltd
adc
lret
push
aad
jl
jge
mov
dec
pop
and
aam
pop
roll
das
adc
test
inc
lea
add
loop
inc
and
in
xchg
push
xchg
outsb
icebp
or
xor
aas
and
jmp
push
sbb
and
in
jge
cli
pop
iret
mov
bound
mov
push
mov
push
cmp
xlat
push
inc
jp,pt
xchg
inc
sahf
inc
push
mov
inc
out
ficoms
xchg
mov
daa
scas
mov
iret
movsb
inc
or
stos
repnz
sbb
push
mov
je
pop
notb
pusha
cmp
xchg
pop
mov
jecxz
sub
je
dec
movsl
andb
js
clc
cmp
scas
pop
push
nop
repz
xor
ret
xor
out
mov
add
call
lea
jb
push
pushf
pushl
ret
and
hlt
xor
dec
inc
xchg
out
stos
mov
push
andb
loopne
and
scas
or
xchg
xchg
mov
sbb
inc
pop
movsb
test
jae
cs
aad
enter
xor
xchg
and
lret
sub
xchg
fwait
and
js
lea
cmp
push
mov
jmp
fldcw
out
leave
push
pop
stc
loope
repnz
jbe
jnp
rcr
cmpl
adc
mov
add
stc
pushf
lea
jne
bt
sub
shld
mov
setle
add
rcl
rcr
add
cmp
mov
cmc
test
test
pusha
pushf
jmp
pusha
neg
stc
call
xchg
cli
sub
outsl
dec
cwtl
lret
jb
scas
adc
xchg
sbbb
mov
outsl
and
adc
sub
mov
mov
out
iret
out
test
or
out
pop
sub
jno
push
pop
push
mov
dec
xor
popa
insb
push
push
mov
cmpl
scas
ljmp
cmp
stos
push
jns
mov
insb
scas
push
xchg
dec
cld
or
outsl
insb
and
sbb
cmpsb
xchg
aam
mov
xchg
aad
add
push
jns
jb
fs
push
dec
lea
sarb
push
cmp
lret
fisubrs
xchg
insl
cmp
rorb
gs
and
in
pop
or
fbld
dec
or
movsb
xlat
and
add
sub
pop
sbb
push
in
iret
inc
int
adc
adc
aaa
in
and
idiv
stos
xor
sub
cmpsb
iret
pop
jle
ds
mov
outsb
mov
pop
fiaddl
das
dec
pop
data16
cs
mov
or
sbb
in
or
pop
mov
movsb
pop
dec
add
pop
mov
pop
ds
daa
dec
lahf
outsl
cmp
adc
sub
jp
pop
ret
stos
ficompl
sbbb
xor
mov
subb
push
imul
ljmp
push
popfw
jmp
call
movzbw
rcl
cmc
mov
pusha
cmpb
mov
lea
jne
rcl
ror
test
xor
neg
bt
mov
bt
add
pusha
stc
not
mov
bt
pushl
pushf
test
mov
pushl
jmp
mov
lea
pushf
jmp
icebp
inc
sbb
sbb
adc
jmp
mov
push
lea
jmp
sbb
outsb
mov
pop
cmp
cli
nop
outsl
mov
pushf
setp
je
lods
fsubrs
ljmp
or
lahf
dec
xchg
hlt
mov
sbb
and
jne
or
leave
sbb
js
scas
push
test
fsubrs
shlb
dec
negl
push
jmp
inc
jnp
and
dec
cwtl
pop
cmp
lcall
daa
orb
and
or
jo
add
add
unpckhps
insb
adc
xor
and
push
or
mov
adc
add
insb
or
add
outsb
popa
insl
sarb
xchg
xor
mov
xchg
outsl
add
bound
inc
jae
js
cmc
push
cmp
jne
ja
jl
cli
aaa
jne
jbe
loopne
jle
out
jno
pop
sub
fs
pop
pop
out
je
dec
incb
pusha
sub
and
push
daa
adc
and
push
add
insb
loope
fdivl
inc
in
in
out
cmp
repz
and
cmp
xor
ljmp
aam
fst
mov
rclb
inc
push
inc
cwtl
insl
out
xor
sbb
repnz
js
test
push
jo
adc
adc
sbb
sbb
incl
std
inc
jp
add
pop
or
jo
xor
xor
cmp
cmp
pop
and
and
daa
sub
scas
cmp
push
jnp
repz
cmp
je
js
jae
adc
add
popl
sar
js
iret
nop
mov
js
jp
lods
shll
in
mov
xor
rcrl
sub
into
xchg
jecxz
repz
ret
cwtl
scas
sub
loopne
int
sbb
sub
mov
invd
push
cs
mov
test
or
mov
test
sub
pushf
cwtl
cmc
xchg
pop
nop
push
lods
cmp
pop
fcoml
call
xor
clc
cmc
hlt
pop
lock
or
or
add
add
sbb
adc
push
cmp
xor
adc
cmp
dec
push
xor
jl
hlt
xor
jl
jne
cmc
test
mov
insl
fisubl
jne
fdiv
aam
in
push
in
hlt
fldl
adc
and
pop
push
enter
ret
cwtl
pop
nop
push
test
mov
xor
fdiv
in
clc
push
or
inc
add
and
xor
xor
js
hlt
xor
sarl
cmc
fsubs
insl
pusha
jg
jl
cs
add
clc
dec
pop
push
add
nop
mov
pusha
int3
add
mov
push
in
js
cmp
outsb
push
pusha
test
cwtl
fsubrl
lds
jne
lock
jbe
andl
aam
push
inc
xchg
sub
insl
sub
xor
add
sub
and
add
je
push
out
insl
in
or
pop
clc
and
and
xor
arpl
sbb
adc
or
cli
lea
mov
and
shll
pushf
jo
xor
ja
add
sbb
pushw
or
adc
push
lret
adc
push
lods
inc
xor
cmp
sbb
fistl
lret
sbb
sbb
dec
fcoms
das
getsec
call
adc
inc
sti
dec
scas
lea
inc
fildl
fs
jg
jbe
push
xchg
lods
inc
cmp
sub
add
sbb
adc
xor
addb
adc
dec
and
lea
int3
jae
ja
and
xor
sbb
push
push
xor
sbb
jle
aam
hlt
jb
inc
mov
adc
add
rorb
popa
notb
mov
sbb
dec
dec
sbb
sub
xchg
and
rcll
pop
push
push
adc
addr16
sbb
out
and
and
sbb
ss
pusha
ss
cmp
fildl
int3
test
or
sbb
jle
or
or
ror
xor
mov
mov
les
push
in
sahf
push
push
data16
push
push
cmp
cld
mov
clc
xchg
mov
fucom
push
ljmp
jne
dec
shl
dec
loope
fsubl
rorb
test
and
incb
add
cs
insl
sarl
fildll
xor
fs
in
mov
push
imul
les
add
cmp
dec
test
sbb
sbb
jmp
lods
jne
movsb
adc
insl
add
cld
jno
adc
insl
bound
movsb
and
add
adc
shrl
mov
push
fucomip
test
in
adc
or
loopne
and
mov
xor
inc
and
adc
sbb
pop
cwtl
inc
sub
sbb
xor
mov
push
xor
sti
mov
cmp
or
add
movsb
frstor
push
mov
mov
dec
out
jno
adc
inc
cmp
rcll
andl
xchg
or
fbstp
in
push
inc
and
cwtl
sub
stc
ljmp
mov
mov
sbb
in
add
call
push
adc
xor
sub
popf
shufps
pop
xor
hlt
xor
mov
movsb
fs
insb
dec
and
cmpsl
int
adc
sbb
push
xor
mov
pop
push
cs
pusha
jo
add
adc
mov
imul
mov
sbb
or
movsb
cmpsl
js
je
jno,pn
jle
rcrl
insl
lcall
push
movb
lea
ja
clc
call
sub
jmp
neg
sub
das
mov
and
add
or
shl
mov
movb
test
test
call
cwtl
je
mov
pop
push
in
jl
mov
add
dec
cmpsb
or
lods
pop
insb
and
movl
push
test
aas
pop
mov
cwtl
mov
and
inc
inc
sbb
rolb
mov
arpl
pusha
lret
cmp
std
data16
cmp
sub
pop
cmpsl
cmpb
int
ficoml
fcompl
push
cmp
daa
addr16
repz
test
movsb
je
xchg
sub
scas
mov
xchg
rorl
pusha
call
pushf
pusha
pushl
jmp
sub
dec
rcl
mov
sbb
add
not
mov
call
lea
jne
push
call
test
jo
add
and
and
xor
pop
ljmp
pop
adc
stos
mov
imul
out
xor
out
testb
jge
ds
xlat
icebp
jb
shll
sbb
push
imul
and
stc
jo
mov
mov
sub
int3
sub
inc
fmuls
stos
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
test
pop
xchg
sub
cwtl
cmpsl
push
inc
mov
stos
cmp
pop
xor
jne
cmpsl
inc
adc
jp
repz
movsb
push
and
je
and
cmp
mov
aam
bound
inc
lcall
cwtl
subl
cmc
ss
pop
idivl
or
pop
aam
sub
or
mov
sbb
shrd
call
and
mov
movsb
pop
lods
dec
add
fmuls
dec
jg
outsb
popf
add
and
mov
ret
popa
cmp
pop
lret
out
data16
add
inc
cmpsb
pop
xchg
fidivl
pop
fbstp
scas
stc
lea
xchg
sbb
mov
mov
mov
cmp
jb
push
push
ret
popa
dec
jmp
xlat
cli
push
sbb
sbb
icebp
lea
xchg
sbb
or
in
dec
and
loop
push
push
movb
lea
je
call
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
xorl
hlt
or
je
shl
scas
sub
or
loop
add
mov
enter
adc
aam
cmpsb
ja
leave
in
jge
push
pop
inc
fistpll
lock
adc
rcrl
mov
xchg
sbb
icebp
jns
mov
pop
and
arpl
xor
das
rorb
jns
jp
test
push
xlat
mov
stc
jne
out
and
repz
pop
mov
or
xchg
out
mov
cltd
dec
addr16
jb
loop
cmp
or
or
mov
cltd
pushf
rorl
pop
mov
xchg
popa
popa
mov
mov
test
dec
movsb
push
cmc
fisubrl
jo
mov
js
jns
inc
sarl
shrb
mov
pop
jl
pop
lret
and
mov
xlat
mov
es
loopne
lret
pop
mov
inc
in
sub
sbb
lock
mov
cli
dec
mov
dec
ret
and
mov
push
mov
loopne
mov
es
dec
adc
int3
inc
dec
bswap
mov
pop
int
fwait
jecxz
add
int
movsb
or
xchg
leave
cmp
xchg
ficompl
mov
or
insl
fs
mov
pop
bound
mov
fisttpl
inc
push
jg
fadds
mov
and
or
mov
out
add
adc
dec
pop
lods
jae
ror
lods
dec
jecxz
in
cmpsb
add
or
pop
cmp
cltd
mov
push
jmp
dec
fcomp
repnz
cmp
addr16
cmp
stos
inc
pop
xchg
lret
clc
pop
ficoms
xchg
pop
cld
insl
imul
pushf
xchg
pop
xchg
pushf
aaa
mov
push
test
and
imul
add
lds
es
pop
cmpsb
push
loope
and
mov
ds
pop
sub
loopne
or
mov
inc
add
push
gs
insb
outsl
jae
dec
gs
test
clc
cmc
add
pushl
lea
jmp
clc
movl
cmpb
push
jmp
dec
adc
pusha
testb
popa
lahf
out
and
mov
pop
pushf
jno
and
dec
mov
sub
mov
into
loop
mov
and
push
hlt
jns
jo
scas
fsubrs
add
int3
mov
test
push
mov
push
ret
xchg
pop
mov
add
dec
mov
out
loopne
lods
lds
popa
add
les
mov
pop
and
pusha
shll
cmp
mov
cmp
or
cmc
jmp
lods
lock
dec
outsb
cmp
lcall
add
outsb
adcl
mov
cwtl
fwait
jmp
xchg
subb
ret
mov
inc
mov
and
push
dec
out
mov
mov
xlat
jecxz
add
movsl
fbld
arpl
fcoml
ret
adc
pop
insb
lea
outsl
sarl
cmp
sbb
xchg
mov
movsl
lock
in
mov
inc
inc
aad
and
inc
addb
fiadds
stc
out
lock
orl
ljmp
xor
dec
pop
loopne
cmp
rolb
dec
imul
sbb
pop
aaa
test
lea
ret
std
mov
nop
cmpsl
dec
cwtl
lahf
sub
pop
push
outsl
mov
roll
and
adc
rcll
pinsrw
jnp
out
mov
sub
and
push
arpl
ficoms
cwtl
call
xor
xchg
add
add
pop
icebp
pop
mov
sub
imull
xor
fcomps
sub
push
push
loopne
cmp
cwtl
loopne
cli
fnstcw
mov
pop
dec
int
repnz
leave
mov
push
lds
repnz
jbe
add
xor
jg
movsl
dec
lods
dec
mov
fstpl
es
mov
dec
mov
in
sub
push
sti
sbbb
cli
sbb
add
dec
loope
fwait
cmp
jno
data16
arpl
popa
in
xor
push
ret
sbb
fnstsw
add
adc
fisubrl
sbb
in
sbbb
and
push
mov
scas
push
jb
stos
sti
mov
int
sbb
xor
xchg
push
ljmp
loopne
adc
mov
in
jge
scas
pop
pop
jge
in
jnp
dec
rolb
notl
cli
push
xchg
jp
sub
aam
mov
das
lcall
jl
sti
inc
push
std
lahf
pop
push
fsubr
scas
mov
cmp
mov
stc
pushw
popfw
jmp
xchg
rolb
mov
outsb
int
pop
mov
sbb
dec
lds
sbb
in
lock
fisubl
mov
aas
inc
aad
fmull
inc
je
push
push
test
sub
dec
sub
in
or
rorb
in
push
dec
mov
xchg
mov
mov
mov
mov
and
repnz
sub
loope
sbb
mov
dec
sub
pop
xchg
or
stc
sar
es
push
stos
cmp
stos
das
cmp
mov
pusha
nop
fistpll
enter
fwait
lahf
mull
add
sub
cwtl
jge
fs
cmpb
out
or
sub
dec
xchg
lods
xor
aaa
cmpsb
test
insb
jmp
xlat
xchg
sub
sbbb
mov
fidivrl
insl
pusha
mov
adc
sbb
push
aaa
pop
idivl
cs
addr16
not
paddsb
fst
fidivrl
mov
movsl
mov
test
jmp
loopne
pop
sbb
cmp
data16
iret
pop
cmp
push
shl
fcompl
push
inc
mov
out
lret
sbb
ss
and
and
add
xor
and
dec
popf
jo
cmpsl
or
push
fisttpl
call
fldt
pushf
and
sti
std
add
lcall
xorb
sub
outsb
and
sbb
add
sar
sbb
xchg
pop
fcomps
das
dec
loope
sub
mov
imul
and
dec
jl
shr
xor
fnstsw
clc
dec
jne
cmp
ljmp
dec
andl
jecxz
scas
pushf
call
mov
pushf
lea
call
jmp
sub
sahf
or
dec
jae
int
mov
mov
mov
jl
aad
add
or
je
popa
jmp
sbb
and
mov
xchg
xchg
jmp
or
les
push
stc
mov
lret
dec
lret
push
push
andb
push
xor
or
lods
inc
inc
insb
mov
sbb
loop
xor
scas
ja
mov
leave
or
call
out
adc
push
imul
sti
and
arpl
iret
sub
pop
xlat
pushf
std
jbe
pop
adc
aaa
xchg
cltd
nop
stc
mov
push
inc
sub
cs
sbb
xor
cltd
sbb
cwtl
loopne
cs
xchg
pusha
aad
mov
fnstsw
xchg
call
shrb
subb
jnp
pop
lea
mov
cld
stc
hlt
mov
rcll
pop
cmpsb
dec
add
jbe
sub
fstpl
stos
push
adc
adc
idivb
pop
fsubrl
and
call
mov
cltd
mov
es
pop
js
jge
jmp
out
inc
loope
mov
shrb
idivl
mov
sbb
push
pushf
lahf
push
jns
das
or
sti
sub
cwtl
lret
fxch
pop
push
pop
nop
iret
cmp
mov
rorl
mov
mov
fsubl
enter
ficomps
loop
dec
fprem
orl
sbb
enter
call
push
pop
call
jae
or
push
jb
sub
js
movsb
jle
push
mov
mov
dec
loopne,pn
and
inc
dec
ds
stc
sub
call
movl
pushf
movb
call
enter
and
cmp
loopne
inc
scas
inc
test
and
fldcw
cli
mov
and
jnp
mov
mov
jno
out
inc
jbe
cwtl
aas
and
imul
dec
pop
xchg
cmpsb
test
add
sbb
sub
pop
out
inc
int
xchg
ds
not
or
cmp
jp
cmp
cltd
cld
fwait
stc
xchg
or
jg
leave
sbb
pushf
ret
push
xchg
push
nop
repz
imul
rcl
btc
mov
jmp
bt
test
pusha
push
repnz
push
movb
push
lea
jne
stc
stc
mov
lea
mov
add
sub
lea
mov
cmp
sub
jmp
add
mov
mov
lea
jmp
pop
mov
movsl
xchg
cmc
and
adc
mov
ret
jp
stos
enter
mov
cmpsb
fidivrl
push
pushf
cmc
sbb
jmp
xchg
je
mov
sub
xor
ret
loope
lahf
out
daa
enter
lret
push
leave
int3
push
mov
fidivrl
add
jnp
mov
pushl
pop
mov
in
das
push
fcmovb
sbbb
lcall
or
imull
in
ret
cmpsl
inc
cmp
cmp
lds
in
stos
mov
loopne
in
or
lds
out
push
push
pop
push
pusha
mov
adc
stc
dec
jb
pop
push
cld
hlt
mov
cmp
sub
repnz
out
loopne
sub
andb
add
pushl
popl
pushf
pushf
stc
cmp
push
lea
ja
xor
sub
pushf
adc
add
add
xor
mov
rcr
sbb
setb
setae
mov
jmp
jmp
push
push
cwtl
dec
mov
dec
mov
sbb
mov
and
pusha
arpl
dec
and
mov
dec
sub
sbb
pushf
pop
mov
mov
dec
xchg
std
cmp
jb
inc
xor
pop
jns
push
aas
shrb
push
adc
mov
sbb
adc
nop
scas
adc
jb
into
jp
test
pop
popf
jnp
push
scas
gs
sti
or
int3
imul
adc
add
and
fdivr
cmp
movw
pushl
lea
ja
setnp
inc
inc
dec
pusha
movb
pushf
inc
lea
jmp
pushl
adc
pushf
mov
pushl
call
call
xor
push
in
cs
push
push
aas
jb
adc
dec
shrb
call
js
sbb
fistps
adc
xor
mov
mov
test
sbb
adc
jb
shrb
aas
xor
pop
fsubrs
daa
andl
cmp
mov
xor
in
pop
sbb
fwait
push
jmp
clc
jmp
push
sub
xor
pop
sbb
fisttpl
jae
sbb
sbb
pop
xor
xorb
test
clc
mov
sahf
stos
cld
mov
lock
in
test
add
cmp
or
jne
ss
rclb
lret
or
mul
or
insl
stc
dec
lret
jmp
push
mov
insl
clc
call
insl
add
out
add
rorb
inc
imul
or
xorb
insb
push
mov
sbb
cld
cld
outsl
call
clc
cmp
filds
iret
fisttpl
mov
cmc
hlt
or
push
cmp
in
stos
or
sub
adc
mov
push
xor
xchg
int3
ja
jle
sub
mov
lea
pop
pop
push
mov
fisubrs
lret
inc
js
push
ss
xor
xor
test
lret
xchg
push
pop
outsb
adc
out
mov
xchg
into
sarl
pop
scas
fnstcw
add
push
pop
pop
inc
push
inc
mov
and
xchg
mov
sbb
stos
jp
rcr
outsb
scas
push
movsl
push
or
push
ljmp
sbb
aas
in
push
mov
insb
test
add
sub
jae
adc
popa
jle
pop
out
pop
lahf
ret
xchg
sarl
jp
or
stos
fnstsw
jnp
fldl
rclb
mov
cmpsb
call
call
loop
clc
jne
add
es
cmpsb
call
js
test
pop
mov
cmc
incl
ds
add
in
add
xchg
aad
xor
aad
into
sub
cwtl
or
pop
adc
mov
xchg
and
int3
jl
rol
push
repz
sbb
xchg
mov
xchg
add
adc
ljmp
pop
jmp
jne
sbbl
and
or
inc
stos
pop
dec
and
out
lods
loop
pop
outsb
mov
int3
mov
lret
out
pop
std
rorb
adc
push
dec
enter
mov
sarb
les
mov
xchg
pop
jnp
jo
fxch
add
fsubrp
mov
popf
or
push
leave
sbb
xor
adc
cli
sahf
ret
fnstenv
into
sahf
js
xor
xchg
jb
add
mov
and
sti
pop
inc
popf
rorb
xchg
add
mov
test
xchg
lea
adc
jae
dec
cmp
cmp
xor
and
cli
popf
mov
push
mov
add
fsubp
bnd
stos
fimull
xlat
sbb
jge
enter
arpl
lcall
mov
nop
cmp
imul
lock
or
xchg
xlat
test
fstl
cmp
or
iret
es
stos
ficompl
sub
scas
lahf
hlt
cltd
aas
mov
insl
rclb
or
and
addb
mov
ja
pop
mov
fistpl
mov
and
loopne
dec
pop
mov
pop
cli
jmp
pop
sbb
xor
inc
popf
and
scas
xchg
xchg
xor
push
or
jbe
loop
fcomps
outsb
popa
push
dec
int3
adc
pushf
lock
cmp
dec
test
ret
push
mov
test
push
les
inc
bound
outsl
ret
mov
mov
mov
fdiv
pusha
lret
or
mov
and
ja
pop
je
xchg
xchg
xlat
je
adc
jecxz
push
pop
data16
lret
aam
adc
xor
mov
or
test
js
mov
or
call
data16
add
pop
dec
and
and
lahf
pop
cmc
cmp
or
dec
jge
enter
or
out
lock
std
std
test
cmpeqps
jae
call
lods
sub
pushf
mov
pop
addr16
xor
jge
jb
in
or
fisubl
aam
push
les
call
xchg
ss
test
sub
inc
add
push
mov
test
pand
movsl
ror
dec
sbb
inc
and
cmp
xchg
fidivrs
xchg
lods
inc
andl
dec
add
rolb
out
in
or
shrl
ffree
cld
hlt
pop
enter
enter
test
das
ss
imul
sbb
jle
out
cmpb
clc
or
fwait
stc
int
mov
in
mov
xorl
imul
outsl
repnz
lds
lds
inc
movsl
fmuls
dec
mov
mov
fisttpll
mov
lea
call
pushf
jmp
sub
stc
pushf
cmp
mov
movw
lea
ja
clc
jmp
xchg
mov
aam
cmp
test
lret
and
mov
xchg
call
dec
xchg
add
in
xchg
lods
xchg
shrl
or
push
push
push
jno
mov
pop
lahf
test
ret
daa
addr16
sbb
repz
cmp
bound
aam
fcompl
out
inc
sti
xlat
dec
mov
insl
rclb
add
inc
xchg
int
mov
mov
ljmp
jb
pop
sbb
sti
inc
sub
xor
les
mov
cmp
jg
test
mov
jbe
mov
clc
jmp
ss
push
pop
jmp
mulb
gs
incl
inc
jno
aas
lods
loope
xchg
shl
movsb
rcrl
movsl
pop
sub
or
leave
ret
mov
lret
subl
fisttpll
push
testl
movsl
subl
and
sbb
test
sbb
or
aaa
xor
dec
sub
xor
iret
sub
aam
test
sbbb
dec
call
stos
es
imul
push
mov
or
xlat
mov
mov
add
push
mov
outsb
pushf
sti
es
jge
cwtl
push
or
fs
pushf
sbbl
iret
fs
or
mov
loop
sbbb
loopne
cmpsl
add
xor
andl
test
cs
fcomps
push
fstpl
sti
lock
stos
jns
test
and
call
mov
push
mov
dec
test
stc
sbb
push
stc
aam
sub
sbb
std
mov
shrl
lret
movsb
mov
xchg
mov
xchg
xchg
nop
test
push
loop
inc
sub
aas
aaa
mov
adc
jno
mov
inc
invd
mov
push
and
cmc
jns
and
inc
or
es
or
sbb
mov
jg
fmuls
fisttps
xlat
int3
loop
test
inc
int
orb
jmp
and
or
mov
cld
xor
scas
cli
pusha
inc
or
lea
and
fldt
adc
or
clc
inc
insb
test
add
jl
mov
adc
add
mov
repnz
ljmp
nop
inc
ds
sub
xchg
imul
pop
sbb
movsl
inc
jp
loope
mov
xor
add
icebp
insb
xlat
dec
insl
clc
mov
or
dec
loop
mov
adc
mov
or
sbb
jae
xor
inc
aaa
aam
xor
cmp
and
add
inc
sbb
rcr
adcl
leave
scas
out
sarb
or
repnz
xchg
aam
test
fstpl
cld
arpl
jno
mov
lret
lea
gs
cltd
sbbb
mov
cmpsl
insb
xchg
cmpsl
or
xchg
pop
das
and
push
les
aas
push
gs
int3
sbb
push
int
js
mov
popa
stos
scas
mov
mov
aam
cmp
popl
imul
cmp
lods
mov
sahf
jmp
pop
lret
ret
cmc
inc
ret
xchg
fimuls
mov
fldcw
fisttpll
mov
sbb
imul
mov
jge
test
jns
test
adc
fimull
sbb
bound
xor
push
loope
mov
push
or
xor
mov
add
and
cmp
insb
test
jb
xchg
push
add
jbe
push
pop
pop
test
sbb
stos
pop
or
data16
lea
push
scas
adc
shlb
mov
test
insb
ljmp
lahf
je
sti
mov
pop
hlt
loop
and
bnd
jmp
pop
pusha
push
push
test
insb
sub
rcll
aaa
aad
sub
adc
mov
loopne
mov
imul
jnp
sti
sub
push
push
lods
and
add
out
cmc
js
ljmp
or
fmull
sbb
call
xchg
sbb
jg
mov
or
ja
and
mov
xor
fidivl
lret
sete
pop
sub
in
xchg
in
mov
inc
loope
es
xchg
mov
rorl
subb
jp
inc
ljmp
roll
daa
xor
xor
or
or
lahf
loope
cmc
push
clc
pop
sbb
or
pop
pusha
jmp
movb
sub
pushf
pusha
clc
pushl
popl
cmp
cmc
cmp
cmp
cmp
movw
push
pushf
lea
ja
shr
jmp
xchg
mov
adc
cmc
dec
add
je
adc
pop
pop
icebp
cmp
in
or
mov
insl
pop
inc
adc
cwtl
inc
mov
mov
nop
xchg
inc
and
cmp
scas
push
pop
adc
jne
xchg
jnp
jae
or
xchg
mov
pop
jbe
mov
pop
mov
push
stos
adc
testl
lret
sub
aad
cmpsl
cltd
rcrb
sbb
fs
aaa
mov
repnz
rol
and
jge
push
add
add
jl
divl
cmc
mov
push
mov
jno
orb
je
in
xchg
adc
add
inc
jbe
sbbb
scas
add
and
jns
mov
xchg
aas
pop
jo
cmp
push
stc
dec
sbb
push
not
stos
sbb
insb
sub
jbe
mov
push
inc
ror
mov
mov
inc
gs
test
mov
outsl
inc
jbe
xor
lods
mov
mov
add
in
pop
leave
xchg
sti
and
pop
lcall
xor
inc
cmpsl
adc
xchg
nop
cmp
push
fdivl
lcall
cmp
ja
cltd
mull
stc
cld
test
lcall
pushf
in
cwtl
inc
bound
sbb
fs
lods
shrb
and
lret
ja
xor
jge
sub
mov
push
js
in
stc
jl
xchg
mov
sbb
insl
jmp
call
in
movsb
xor
pop
xor
pop
mov
inc
jns
lcall
push
dec
mov
dec
xchg
imull
sbb
push
pop
push
xor
pop
pop
cmp
xor
cmc
or
jl
clc
rcrl
xchg
psubusb
sub
pop
test
test
adcl
pop
xchg
and
mov
outsl
insl
xor
pop
movb
out
js
js
pop
mov
lods
xchg
sbb
fsts
jb
mov
push
mov
aam
dec
int3
scas
xchg
cmp
adc
ss
add
out
js
movsl
outsl
jl
mov
fwait
int3
ret
and
pop
inc
loope
int3
mul
fnstcw
sbb
and
jl
push
aam
pop
lods
xchg
shlb
ret
sub
in
jb
jo
xor
xchg
push
and
andb
lret
cld
cmp
xchg
loopne
sub
dec
sahf
and
sub
repnz
fstl
iret
call
sbb
add
notl
or
aam
cmp
cmp
pop
div
xor
sbb
fs
out
stc
jo
je
mov
vpshufd
cmp
lods
mov
jo
xchg
popa
sbb
pop
jb
pusha
dec
addb
test
into
mov
or
inc
rclb
mov
fdivs
mov
xchg
cmp
xorb
and
in
sti
add
sahf
ficoms
xchg
fldenv
mov
cs
xchg
dec
xchg
mov
xchg
mov
mov
test
mov
cwtl
jne
jno
mov
pop
fldcw
fcomp
xor
and
sbb
mov
push
mov
and
push
cwtl
loopne
mov
mov
jb
add
mov
inc
shrl
in
popf
mull
ljmp
test
mov
test
sti
jl
icebp
notb
xchg
popf
addb
fidivl
pop
dec
in
pop
hlt
test
and
mov
and
out
mov
mov
cmp
in
and
mov
mulb
icebp
clc
out
loopne
sbb
ds
fidivl
add
mov
push
adc
adc
insl
sub
adc
in
fnsave
iret
icebp
in
xchg
lods
clc
mov
daa
imul
or
clc
push
mov
cmp
pop
neg
or
repz
inc
mov
call
lods
pop
test
fcoml
iret
pop
pop
sahf
outsl
jp
mov
dec
mov
movsl
xor
dec
mov
cmp
stos
lea
jns
xor
adc
stc
int3
xor
enter
inc
pop
imul
and
xchg
jno
lds
push
sub
xor
pop
inc
lea
mov
test
mov
sahf
mov
lods
stos
jns
sub
inc
and
mov
call
jbe
cmp
mov
hlt
test
jne
out
or
mov
xchg
insl
push
aas
pop
jno
movsl
pop
or
inc
mov
mov
cltd
sbb
mov
cmc
and
arpl
test
adc
lret
xor
js
push
xchg
fidivrs
jo
clc
xchg
mov
pusha
je
rcrl
mov
lock
push
outsl
cwtl
dec
dec
shrl
add
adc
cmp
fsubrp
and
xchg
out
xchg
imul
xor
adc
dec
add
xchg
js
addr16
repz
and
rol
insl
stc
loopne
lcall
andb
sbb
aas
pop
test
mov
cli
insl
sahf
pop
popf
hlt
mov
xchg
lea
aad
hlt
ja
fbld
mov
and
pusha
ret
int3
mov
rorb
cmp
cmp
insl
mov
jnp
mov
in
xor
dec
cmp
xchg
xchg
push
out
pop
push
push
mov
push
jns
hlt
cltd
call
scas
fcoms
sbb
mov
dec
adc
push
sbb
jno
ds
mov
xlat
mov
in
sub
dec
xchg
dec
inc
notb
push
repz
call
cmp
dec
mov
mov
in
ds
push
aam
inc
test
cmp
dec
js
pusha
xchg
stos
lds
fsubrl
arpl
je
frstor
mov
adc
sahf
repz
or
in
adc
cmp
mov
mov
out
sahf
in
xchg
adc
lcall
or
jle
mov
mov
mov
mov
sub
push
mov
test
lock
sub
mov
jnp
jle
insl
fwait
mov
ror
push
divl
dec
icebp
mov
enter
cmp
jle
pusha
push
gs
xchg
loopne
fcoml
push
sbb
cli
sub
icebp
sub
clc
sub
inc
into
in
sub
sbb
mov
lock
mov
mov
andl
jge
mov
xor
insl
mov
or
addb
scas
inc
insb
cltd
nop
ss
xchg
js
popf
test
xor
scas
call
jne
imull
xor
mov
jne
mov
or
cmpsl
jno
sahf
push
scas
lret
ret
pop
mov
es
mov
call
cwtl
test
xchg
popf
mov
xchg
insb
mov
cmp
cmp
dec
in
lods
sub
push
mov
dec
xor
dec
loopne
xchg
insl
xchg
mov
add
arpl
out
jp
sahf
stc
movsb
jnp
cwtl
rcl
ficompl
movsb
xor
clc
push
xor
and
cmp
lods
cmp
lods
mov
in
inc
rcrl
mov
out
sbb
mov
push
push
in
imul
testb
add
xchg
pop
fcmovnb
sahf
dec
mov
dec
mov
ljmp
adc
sbb
sub
dec
jae
xor
add
and
lds
xchg
jne
scas
sbb
mov
push
fmull
and
mov
cwtl
xor
lret
push
clc
xchg
in
and
mov
aaa
pop
mov
push
mov
push
jl
pop
jnp
shrb
mov
pusha
pop
sbb
rcr
jl
jo
and
mov
or
clc
imul
xor
mov
imul
add
leave
cmp
push
jo
xchg
push
xchg
xchg
sub
and
ret
inc
add
das
clc
dec
outsb
sbb
and
in
outsb
sbb
mov
pop
jp
sbb
mov
je
mov
sbb
out
cmp
dec
cmpsl
clc
insb
push
adc
pusha
cmp
fdivl
mov
xchg
jnp
jge
ljmp
cli
dec
pop
mov
stc
loop
jmp
mov
mov
leave
and
fistpl
sub
xchg
fs
mov
pop
adc
clc
add
ds
outsl
pop
aaa
pop
loopne
sub
sahf
imul
xchg
sbb
rorl
lahf
hlt
cmp
je
mov
lods
insl
xchg
mov
popf
into
cmp
test
or
jnp
adc
sub
clc
test
je
sbb
mov
cli
add
sbbb
andl
mov
call
xchg
incb
jp
pusha
pop
xchg
andl
sbb
adc
push
jmp
cmc
int3
js
cld
movsb
fs
outsb
xchg
sbb
xor
adc
xor
push
dec
lods
xchg
mov
pop
jnp
mov
mov
scas
sub
in
fcmovu
cmp
and
push
and
mov
mov
adc
hlt
fisubl
push
xchg
or
pop
jae
cmp
pop
mov
xchg
dec
push
jg
and
dec
cwtl
pop
cmp
daa
cmp
xor
das
sub
pop
int3
jge
cmp
dec
ss
orb
adcl
pushf
hlt
pop
int3
movsl
xor
inc
leave
and
sbb
ret
dec
je
idivb
xchg
out
sti
push
and
pop
icebp
mov
frstor
sbb
imul
or
jmp
xor
mov
std
xchg
pop
scas
jne
in
cmp
fdivs
cmp
pusha
adc
mov
xchg
jecxz
add
mov
sub
iret
xchg
outsb
in
repnz
imul
jo
mov
adc
mov
cli
push
cwtl
pop
xchg
xor
dec
ret
xor
pop
adc
clc
xor
daa
push
jo
shrb
sbb
dec
call
push
lea
pop
je
mov
sti
dec
xchg
add
mov
shrb
vmaxss
cwtl
pop
loopne
sbb
push
jnp
mov
xor
into
or
sbbb
xabort
push
and
add
arpl
push
pusha
push
scas
push
and
xorl
push
sbbb
sub
push
sahf
xchg
int
test
cld
inc
std
mov
jae
sbb
rol
mov
andb
pop
mov
xor
dec
dec
stc
hlt
mov
jno
inc
pop
int3
jb
inc
cmp
dec
jns
in
pop
ds
adcl
mov
cltd
jl
mov
and
cmp
mov
dec
pop
sub
inc
mov
xor
mov
xor
lock
out
in
fmuls
jge
adc
xchg
xchg
adc
push
sbb
shll
adc
lock
inc
mov
insb
cmpsb
pop
pop
adc
shll
movsl
jg
push
cwtl
mov
pusha
jb
clc
xchg
sahf
sub
push
cltd
shlb
aaa
adc
mov
xchg
repnz
sahf
push
add
mov
xchg
ffreep
out
xchg
and
shrl
and
cs
std
adc
arpl
sar
inc
es
aas
and
push
lahf
dec
lea
push
inc
inc
adc
cltd
fidivl
push
pop
fdivrl
bound
mov
in
cmpb
mov
xchg
ljmp
mov
xchg
or
pop
and
xchg
sub
loopne
lock
dec
in
inc
push
cmc
daa
push
xchg
pop
xor
dec
cmp
sahf
hlt
dec
dec
repz
iret
lret
inc
mov
push
push
pop
frstor
bound
and
mov
sti
scas
xchg
andb
mov
je
xchg
out
aam
pop
sub
call
daa
mov
insb
pop
mov
jmp
test
push
and
xor
jg
out
je
ss
push
je
mov
pop
out
insl
add
xor
sbb
fisubrl
enter
xor
add
push
sbb
dec
mulb
jl
adc
mov
adc
sub
std
or
sbb
js
pop
jl
or
stos
lock
mov
add
in
push
xor
hlt
dec
add
add
les
imul
test
jbe
sbb
jne
aam
popf
mov
out
in
push
loopne
cld
shl
push
inc
pop
pusha
inc
call
dec
mov
ds
and
mov
push
pop
or
inc
enter
or
int3
dec
pusha
fisttps
or
je
repnz
add
hlt
in
dec
jno
out
and
lahf
push
shll
int3
push
mov
js
sbb
pusha
inc
out
lds
sub
int3
and
les
movsb
pusha
call
adcb
dec
mov
in
test
fcoml
cmp
repnz
popf
add
and
js
dec
ficomps
adc
hlt
cmp
loopne
sub
sub
loopne
js
mov
push
mov
inc
es
lea
or
xor
jno
adc
fmull
jmp
gs
jl
or
push
insb
hlt
adc
fcoms
cmp
loopne
js
adc
in
js,pt
in
mov
js
icebp
dec
adc
inc
adc
jo
inc
fdivr
enter
jbe
fs
adc
cwtl
enterw
xchg
je
iret
mov
mov
mov
repz
xchg
ret
and
or
xchg
xor
or
enter
mov
dec
mov
xchg
insl
mov
mov
cwtl
inc
fldl
js
mov
mov
xor
test
mov
mov
inc
cmpb
xor
insl
and
cmc
pushf
cli
repz
nop
or
shrl
mov
add
inc
sub
insb
aam
jns
sub
in
cmp
iret
sub
jns
cmc
mov
orb
call
in
iret
mov
je
jg
in
es
pop
adc
daa
adcb
clc
pop
js
xchg
and
nop
jb
sbbl
out
leave
loop
cmc
xchg
adc
lret
repnz
mov
xchg
dec
and
pushf
in
cmp
xchg
pusha
mov
hlt
lcall
push
jae
ja
mov
jmp
cmp
ss
scas
xor
xchg
pusha
daa
jecxz
sub
mov
fldcw
mov
dec
inc
xchg
into
adc
pusha
cwtl
ss
mov
and
or
mov
nop
jp
mov
js,pn
lock
pop
jae
movsb
push
dec
lock
fs
xchg
in
and
adc
jb
add
loopne
cmp
sbb
clc
sahf
cmp
mov
pop
pop
jecxz
pop
lcall
pop
dec
pusha
fidivrs
xchg
sbb
imull
add
fldcw
cltd
push
lods
popf
cwtl
enter
xchg
dec
into
inc
mov
adcb
cwtl
inc
and
mov
sbb
and
jne
sbb
pop
adc
adc
in
push
rorl
fwait
sbb
lea
outsb
jge
movsb
pop
lock
fnstenv
jg
cmp
lods
in
pop
sahf
mov
mov
and
mov
pop
clc
xchg
push
jo
cmp
sbb
stc
icebp
sub
dec
pop
lock
push
cmp
lods
xor
iret
call
jg
je
pop
jmp
je
cwtl
xor
sub
sbb
inc
sbb
jbe
jbe
and
xchg
and
leave
mull
push
mov
jnp
adc
inc
iret
out
lock
and
xlat
in
insl
ret
das
inc
scas
loope
nop
inc
testb
cmp
adc
or
push
stc
gs
xchg
lahf
inc
xor
lahf
cmp
inc
out
sub
je
ret
xchg
push
dec
rcrl
xor
inc
ljmp
push
in
jle
push
dec
mov
je
cmp
cs
cmp
mov
push
and
lock
or
xchg
jmp
scas
cwtl
iret
pusha
xchg
fs
push
lock
xchg
push
js
sti
scas
sub
mov
xor
fs
lock
jae
mov
sub
out
cmp
or
cmp
out
xor
inc
inc
xchg
test
cmp
arpl
lahf
xor
popf
outsl
push
inc
jmp
mov
mov
bswap
pop
and
cmp
xchg
clc
cmpb
mov
and
insl
in
adc
cwtl
adc
cmp
cld
push
pusha
test
jmp
iret
out
shll
mov
inc
pop
sahf
subb
jnp
cltd
mov
bound
dec
cltd
xchg
pushf
jns
notl
and
mov
repz
int3
pushf
cmp
out
jl
cmpsb
and
ds
rcrb
dec
sub
pop
adc
inc
adc
sub
mov
cmp
dec
imul
pop
dec
mov
xor
cmp
jo
mov
xchg
mov
in
mov
and
ficoms
adc
and
cmp
ret
xchg
imul
or
mov
mov
jl
dec
adc
mov
aam
lods
enter
sub
push
mov
das
in
ss
dec
out
mov
mov
jae
push
mov
std
popf
mov
mov
cli
jbe
clc
enter
fwait
popa
jno
iret
xchg
push
jge
or
icebp
or
xor
inc
insl
daa
cmp
adc
ds
cmp
repnz
xor
jge
jne
test
jl
mov
fldl
fimuls
xor
aaa
sbb
repnz
mov
dec
xchg
mov
movsl
cmp
pushf
push
testl
fistpl
hlt
jne
sub
sub
push
cwtl
adc
mov
ficoml
adc
push
cmpsl
cs
mov
lods
jg
lock
push
aam
xchg
imul
loop
fsubl
xchg
repz
jg
call
push
sbb
fmul
fimuls
movsb
push
cwtl
xor
sbb
dec
pop
mov
push
rdmsr
jl
shlb
push
cmc
pusha
cwtl
clc
icebp
int3
sub
mov
jl
or
xor
jo
cwtl
pusha
imul
xor
mov
inc
add
pop
sbb
xchg
mov
jno
push
rcrl
sbb
pop
pop
and
jae
and
imul
movsb
lock
fdivr
in
sub
mov
cwtl
scas
adc
iret
mov
mov
lahf
fsts
sbb
xchg
aam
aad
and
orb
jge
mov
sbb
cmpsl
dec
push
idiv
xor
mov
mov
in
sub
js
ret
dec
xchg
jge
je
pop
jno
loop
xor
call
inc
mulb
cltd
sub
xchg
fnsave
dec
shll
rcrb
popa
jl
mov
jne
icebp
fwait
jbe
icebp
insl
mov
mov
outsl
mov
xchg
aaa
mov
jno
aam
out
add
inc
divl
pop
fisubrl
pop
stc
mov
pop
ret
xchg
jb
scas
ja
loop
pop
out
shrl
dec
or
mov
test
mov
pop
cmc
scas
call
mov
je
sbb
sbb
ffree
cwtl
cmp
cmpl
sub
orb
push
jae
subb
sbb
in
xlat
inc
inc
test
fdiv
movsb
scas
bound
loope
out
lret
pop
popf
xchg
pop
inc
push
xor
ja
into
addr16
sbb
ja
sub
adc
stc
push
mov
and
stos
push
insb
hlt
xrelease
cwtl
ja
dec
clc
in
in
das
cmc
scas
pop
in
sub
sahf
inc
mov
stos
in
mov
pusha
adc
pop
sub
dec
cmp
xlat
inc
xor
repz
dec
mov
mov
push
ret
out
hlt
sti
cwtl
xchg
push
and
leave
imul
pop
cmp
subb
xor
mov
hlt
cmpl
orl
test
xorb
push
movsl
cmpsl
mov
cwtl
mov
xor
xchg
aas
test
jne
divl
cltd
adc
and
jmp
jecxz
pusha
sbb
and
sub
mov
insb
adc
push
xorb
imul
rclb
inc
jle
int
rcrl
outsb
hlt
xchg
icebp
cs
or
jecxz
or
and
xor
inc
and
lea
test
shr
or
mov
pop
aaa
and
add
mov
inc
and
mov
mov
js
and
xor
pop
cwtl
push
jbe
aas
sarb
imul
mov
aad
jnp
arpl
shll
fwait
ret
iret
inc
xor
sub
into
mov
dec
jmp
scas
mov
mov
addr16
bound
add
mov
adc
xchg
push
cmp
or
stos
xchg
hlt
jl
arpl
jno
jl
je
xchg
push
movsl
in
lock
xchg
and
xchg
mov
loopne
lock
adc
adc
cmp
loop
fldl2e
xchg
add
and
xlat
push
push
in
mov
xor
test
movsl
ficoms
cld
mov
aad
push
addr16
or
cmp
in
adc
and
sbb
lock
out
and
enter
mov
jle
lds
xchg
in
push
pop
je
pop
xchg
mov
xchg
adc
dec
xchg
cmp
das
ficoms
cli
cmc
and
int
cmp
outsl
mov
sbb
test
ror
cwtl
and
icebp
xor
and
repz
xor
fs
and
cwtl
mov
fiaddl
add
mov
jecxz
sub
out
sub
int3
lock
cwtl
push
add
mov
clc
jge
jecxz
mov
leave
jne
fimull
cld
xor
push
mov
jno
jnp
in
leave
cld
out
in
mov
jo
dec
les
rcl
push
jle
mov
mov
js
iret
push
add
dec
test
repnz
xchg
mov
cmp
nop
insl
repz
in
jno
cltd
test
cmp
clc
test
pop
arpl
cmp
sti
roll
clc
and
jmp
dec
xchg
inc
ljmp
arpl
ficomps
outsb
inc
xchg
add
cmc
pusha
dec
int3
mov
pusha
add
dec
and
xchg
inc
scas
add
inc
bound
lds
insb
push
iret
push
xchg
stos
cmp
les
sti
cmp
cmp
dec
mov
sahf
aad
jb
xchg
andl
call
stos
mov
inc
xor
xchg
mov
cltd
sbb
lods
in
cli
sbb
sub
pop
jne
mov
fbstp
sub
js
cmpsl
hlt
ljmp
dec
fnstenv
sets
sbb
jbe
cmpb
popa
cs
sub
lock
sbb
or
mov
xor
xchg
mov
push
xchg
out
inc
sub
mov
fucom
push
push
in
pop
add
dec
inc
mov
push
sub
js
dec
subb
mov
xor
mov
outsb
shl
icebp
xchg
jp
lret
xchg
lods
pcmpeqw
mov
jbe
leave
mov
das
movb
jmp
test
mov
in
je
dec
xchg
sub
lods
ss
popf
es
andb
sbb
scas
or
outsb
imul
push
jbe
test
loope
mov
jmp
mov
mov
insl
xchg
sbb
add
xor
and
aam
fisttpl
int
cld
jnp
mov
lock
adc
jne
outsl
mov
dec
add
in
fxam
cmp
xchg
cmp
push
outsl
lods
xor
dec
call
je
in
hlt
addb
inc
out
loopne
adc
inc
cs
cmpsb
mov
test
push
arpl
push
dec
pop
lahf
call
adc
cmp
pop
add
xchg
cmp
mov
xchg
sub
pusha
jb
cmp
sarl
rcrl
pop
adc
test
into
mov
push
xchg
push
mov
cmp
inc
mov
sti
jecxz
mov
lahf
cmpsb
adc
insl
fildl
xor
or
cmp
jge
cmp
and
pusha
push
mov
cli
loopne
outsl
jmp
cmp
repnz
or
mov
fs
push
mov
imul
data16
jno
mov
scas
and
mov
jne
mov
adc
test
loope
aam
jnp
in
shr
in
outsl
jecxz
sti
inc
outsb
in
cmpsb
mov
out
xor
pop
xchg
dec
mov
dec
setns
test
ret
test
outsb
jne
cwtl
cmp
stc
jne
mov
inc
push
adc
jg
out
xchg
jp
fisubrs
and
cld
iret
sbb
xor
pop
jns
pushf
je
hlt
insl
in
mov
or
stc
xchg
cld
jnp
and
dec
leave
imul
mov
stos
in
jnp
sti
push
sbb
add
ds
mov
inc
scas
or
jne
cwtl
push
pop
stc
sbb
cmp
in
lcall
test
pop
add
cmpl
mov
outsl
je
sbb
lret
pop
pop
fimuls
push
mov
push
ds
xchg
stc
shrl
cmpsb
cwtl
pop
nop
repnz
adc
and
mov
jle
jo
scas
pushf
clc
fwait
out
fmul
sub
ret
test
adc
sbb
mov
pop
lcall
mov
je
insb
mov
mov
out
mov
ss
mov
in
mov
jg
outsb
xchg
sti
pushf
jo
cltd
push
or
adc
leave
js
out
push
pop
in
push
sarl
insl
pop
push
add
pop
or
ret
cmpb
cwtl
cmp
dec
jae
and
vmread
jge
xchg
xor
rorb
or
fsubp
aas
shrb
and
mov
and
inc
pop
icebp
jle
sbb
leave
mov
sub
jne
adcb
in
jbe
nop
xor
insl
xchg
inc
cld
dec
lock
push
btr
sbb
shlb
sahf
lods
in
movsl
cmpsb
outsb
and
loopne
or
dec
pop
xor
lock
push
in
arpl
sub
cmp
push
insb
adc
in
jns
dec
lods
fwait
xor
push
push
sub
cwtl
leave
and
cmpsb
sub
sbb
insl
adc
lods
mov
and
xchg
negb
test
cmp
lea
out
pop
in
mov
int3
mov
in
inc
aas
pop
dec
or
cmc
sahf
jae
cmpsl
mov
addl
and
cld
aam
in
jp
js
sub
neg
popl
bound
lods
subl
jne
out
lock
clc
or
sub
pusha
mov
adc
cmpl
cs
jb
into
and
cld
je
and
ljmp
test
mov
cmp
add
loop
arpl
mov
push
mov
mov
cwtl
and
add
nop
sub
int3
inc
sub
aad
sbb
inc
and
cmp
js
adcl
push
sahf
loope
shll
jle
outsb
sbb
icebp
scas
ret
and
dec
mov
sbb
jne
fchs
pop
fcmovbe
lock
mov
adc
cmp
icebp
call
lock
mov
movsb
add
inc
dec
xor
push
push
je
sub
xor
shr
pop
and
and
stos
mov
ja
cs
mov
outsl
mov
or
outsl
push
or
test
xchg
mov
test
adc
mov
shlb
in
cmp
test
mov
and
pop
std
leave
popf
sub
mov
fadd
test
adc
jne
ds
and
into
sbb
sub
fwait
jo
mov
mov
pop
dec
testb
scas
or
arpl
in
ja
cmc
xchg
int
daa
dec
cld
aam
sub
nop
mov
fsubrp
lods
lcall
mov
inc
and
ret
gs
push
ds
xor
insb
jle
push
ror
cmp
cwtl
out
push
pop
mov
cmpsl
and
jnp
mov
jmp
pop
andb
mov
es
mov
js
pop
adc
addr16
lea
dec
jne
jge
push
jb
int
and
mov
cmp
gs
xchg
mov
test
stc
add
outsb
mov
je
push
dec
outsb
arpl
jle
push
adc
bnd
addl
test
dec
sbbl
xchg
adc
dec
add
mov
jae
aam
fwait
aas
mov
shlb
jnp
lea
pop
into
xchg
shr
popf
mov
fnstcw
mov
jnp
push
shll
int3
mov
mov
movsl
jb
fmull
cmp
inc
rcrb
jg
fstp
outsl
adc
xchg
bound
les
and
xor
xlat
add
pop
jle
pop
sbb
fmuls
ret
add
cmp
cltd
repz
dec
adc
mov
in
lcall
xor
out
lret
push
dec
les
pop
cli
push
orb
xor
test
fidivl
loope
push
mov
shll
loope
test
push
xchg
ds
jno
shlb
mov
dec
movsb
jle
cmp
xor
xchg
leave
xchg
push
mov
mov
xchg
out
int
aaa
jne
xchg
jb
orl
lret
cmc
and
mov
or
js
push
addl
jne
pop
scas
xchg
int
das
or
cltd
jl
mov
pop
lcall
repz
and
std
add
lcall
nop
mov
rclb
mov
jl
testl
sbb
ds
pop
fsub
jb
xchg
and
jmp
hlt
scas
loopne
xchg
xchg
and
mov
movsl
cmp
fisubrs
xacquire
xor
or
xor
test
sbb
inc
xchg
sbb
ret
out
sub
stos
add
pop
add
xor
inc
mov
inc
pop
xchg
xchg
push
sbb
jno
in
ret
cmpsb
in
inc
pop
call
cmp
cmp
sub
sbb
movsl
push
xchg
int
jbe
ficoml
pop
nop
jecxz
mov
int3
mov
and
cwtl
inc
mov
sbbl
mov
bound
mov
jnp
addb
xor
mov
sub
pop
adc
das
cmpl
out
xchg
clc
adc
rcl
repnz
and
addr16
int3
scas
mov
sbb
mov
daa
cmp
repnz
lods
and
fnsave
adcl
andb
sub
cmpl
adc
sub
call
jle
fucom
ja
and
sbb
pop
popa
pop
pop
sbb
xor
cmp
fucom
js
movsb
cmc
loop
out
add
jp
scas
outsb
call
push
fists
aam
inc
jae
cmp
pop
mov
ret
xchg
out
mov
pushf
dec
or
cmp
push
xchg
push
cmc
jge
das
xor
test
shll
arpl
jno
push
std
cwtl
lods
push
pushf
loopne
pop
movsl
mov
xchg
jno
cmp
dec
push
jns
sub
push
fidivrs
mov
je
push
xchg
fildl
xorl
in
arpl
mov
icebp
jb
pop
jo
sbb
mov
scas
push
leave
addr16
pop
pop
jmp
nop
and
fcoms
pop
fwait
pop
pop
scas
mov
leave
or
fidivs
int3
in
in
sbb
xchg
dec
fdiv
repz
enter
sbb
fucomip
cwtl
mov
xchg
mov
push
sub
mov
xchg
fsubs
and
jmp
xchg
lock
xchg
je
mov
js
inc
xor
mov
pop
test
push
divb
push
xor
aam
adc
fsubr
sub
mov
cwtl
ja
je
sbb
push
enter
push
ret
xchg
sbb
cwtl
das
xor
nop
aam
pop
mov
xchg
jno
test
out
pop
inc
lret
xchg
je
or
mov
setge
adc
cmp
test
push
pop
rol
arpl
jmp
hlt
cs
mov
in
mov
movsl
outsb
cmc
add
mov
inc
and
jmp
aad
sub
mov
loopne
fcmovnu
push
jge
push
cmpsl
sarb
pop
subb
lock
out
mov
adcl
call
xor
push
xlat
pop
xor
mov
aam
clc
fst
rcrl
sbb
push
dec
sbb
pop
xchg
hlt
scas
xchg
jo
mov
sub
pushf
imul
xor
mov
mov
dec
sub
hlt
jnp
cltd
adc
jno
mov
sahf
test
jns
xchg
insl
lcall
jle
dec
iret
cwtl
enter
pushf
jmp
push
or
cmp
pop
pop
sbbl
and
pop
movsb
es
pop
outsb
popf
mov
inc
fdivrl
cmp
popl
js
fwait
jb
clc
cwtl
mov
dec
addr16
or
xor
popf
and
jb
xor
or
repz
inc
mov
out
rcrb
aam
movsl
inc
xor
stc
stos
or
dec
std
mov
mov
xorl
and
ljmp
js
dec
call
stc
ficompl
jb
fcomps
sub
inc
adc
jnp
movb
jg
ss
loop
test
lods
mov
inc
fldl
fldt
movsb
mov
sub
lods
ljmp
cmc
xchg
and
subb
push
lahf
xor
add
ss
in
cld
jo
rep
mov
cmp
gs
test
push
mov
shll
cmp
loop
add
xor
imull
loopne
arpl
mov
push
sub
mov
sarl
dec
push
xchg
dec
jbe
fcomps
in
cld
pusha
cwtl
add
les
sti
jle
pop
js
xchg
mov
pop
fcmovu
mov
mov
loop
negl
xchg
out
or
pop
cwtl
and
adc
xor
mov
mov
cwtl
lock
sti
jg
inc
mov
nop
out
loopne
psubq
mov
subl
repnz
je
mov
test
xchg
aam
sbbb
test
jae
rolb
mov
popa
ljmp
xacquire
pop
xchg
rclb
movsl
mov
arpl
and
mov
xor
mov
mov
jnp
mov
dec
movsb
mov
push
cli
je
out
adc
and
mov
push
sbb
mov
push
or
rcr
imul
mov
inc
ss
jg
inc
outsb
jb
mov
test
in
andb
gs
sub
icebp
je
adc
outsb
push
dec
in
sub
out
pop
pop
inc
mov
fcoml
jecxz
cltd
loopne
pop
aam
scas
int3
mov
inc
cmp
push
inc
aam
mov
xchg
mov
jno
std
test
push
or
into
lods
shll
cmc
fs
mov
mov
mov
mov
in
adc
outsl
push
pop
in
dec
xchg
mov
lret
xchg
mov
enter
jge
pop
fs
push
inc
js
sarl
sbb
cmc
mov
cmc
icebp
js
in
push
sbb
push
and
jge
mov
testb
pop
arpl
sti
mov
mov
outsb
inc
pop
jb
inc
mov
jb
jl
in
mov
inc
outsb
iret
xor
addr16
cmp
mov
mov
mov
mov
mov
mov
dec
adc
mov
test
jne
sub
jge
mov
pop
in
call
lock
cmp
xor
xchg
rolb
cld
xchg
jne
mov
jns
xor
mov
outsb
stos
cwtl
stc
mov
adc
loope
shrl
in
test
dec
or
hlt
dec
hlt
sub
into
fwait
add
pop
faddl
mov
roll
into
aam
cmp
js
rcrb
or
stc
mov
xchg
jo
jae
xchg
xchg
or
xchg
in
xor
test
rolb
pop
scas
lds
or
cwtl
mov
stc
arpl
hlt
ror
xor
adc
xorl
and
cwtl
addl
cmp
leave
push
in
and
jo
shll
sti
aad
lock
leave
je
dec
add
pop
xor
xor
jle
test
shlb
jecxz
fs
int
dec
mov
jb
pop
sub
in
popf
or
xor
sbb
ljmp
mov
xor
mov
ja
ljmp
mov
mov
add
mov
arpl
pop
js
xor
jo
int3
stc
call
jns
mov
sub
ja
jg
dec
cmpsb
shlb
js
mov
call
lock
push
je
sub
das
hlt
jo
leave
dec
movsl
out
push
int3
fldt
xchg
pusha
dec
mov
cwtl
ret
js
or
lock
test
mov
inc
and
js
roll
shrb
mov
jl
pop
cmp
outsb
icebp
into
mov
dec
andb
clc
aaa
lock
dec
je
or
je
in
cmc
dec
push
lock
xchg
out
xor
jp
test
adc
push
scas
pusha
sub
pusha
icebp
push
mov
dec
fsubrl
lock
and
inc
add
fisttps
insl
add
jb
dec
sub
insl
inc
lods
mov
outsb
jle
jae
daa
arpl
and
pusha
xchg
in
push
jo
sub
out
loopne
or
je
cmp
ds
loope
je
leave
cmc
add
stc
or
insb
push
push
jo
dec
xchg
arpl
dec
mov
shll
scas
idiv
bound
pop
pop
pop
fidivl
xlat
std
push
ds
jae
outsb
pop
gs
cmp
sub
jns
mov
add
icebp
hlt
dec
mov
outsb
jbe
sub
test
pop
mov
xor
out
shlb
cs
and
push
dec
push
push
loopne
je
inc
dec
ljmp
bound
pop
iret
outsb
dec
dec
pop
adc
fnstenv
outsb
inc
lock
fcomp
jmp
adc
fcomps
xchg
imul
mov
cmp
jmp
jl
shll
call
adc
jns
out
push
lahf
in
insl
rclb
pusha
jo
jbe
cmpsl
or
jp
pop
xor
push
out
push
jo
in
cmp
inc
cli
mov
pusha
mov
fnsave
mov
xor
insl
into
jmp
cmp
sti
arpl
out
icebp
test
roll
jo
mov
fistpl
jae
mov
les
pop
jb
mov
int
ja
lock
xor
sbb
imul
inc
mov
int3
leave
adc
mov
mov
fnsave
rorb
cmp
push
adc
stc
mov
insl
loope
test
jge
push
in
mov
mov
xor
xchg
movsb
jo
ret
pusha
cs
outsl
xchg
in
sarb
lcall
mov
cli
test
insl
repz
mov
dec
mov
ret
pop
jo
cmpsl
xchg
mov
stos
pushf
push
pusha
movl
imul
jne
or
pusha
sub
fdivl
jns
mov
leave
xor
repnz
dec
mov
loopne
aas
pop
icebp
inc
orb
cmpsb
jo
mov
mov
jo
mov
outsb
mov
xor
mov
enter
or
mov
daa
adc
aad
xchg
loop
clc
push
dec
add
hlt
cltd
addr16
jo
lods
xchg
push
jle
pop
std
mov
iret
jo
mov
fstpl
stc
inc
and
les
pop
sbb
mov
pushf
and
ja
and
add
dec
je
test
mov
jo
jne
pop
push
xlat
shrb
mov
mov
push
mov
std
xchg
inc
jo
push
mov
xor
out
xchg
imul
scas
fbstp
outsb
in
aad
jo
js
lds
mov
insl
pop
scas
xchg
jp
inc
rorb
and
jo
mov
fidivrs
mov
iret
lock
test
pusha
das
pop
fidivs
mov
lock
xchg
je
mov
lea
push
outsb
pop
fwait
mov
fldcw
xchg
dec
dec
mov
pusha
roll
jo
int
inc
lahf
sahf
xor
push
lods
je
orl
push
mov
push
push
dec
pop
inc
mov
mov
les
popf
push
bound
mov
nop
xchg
insb
dec
dec
outsb
push
jge
jae
mov
lock
sbb
stc
scas
les
xchg
test
jne
shl
loope
sbb
and
into
mov
mov
xor
xor
inc
jg
inc
add
sbb
push
push
adc
xchg
stos
sub
mov
pop
clc
cmp
or
cwtl
and
loope
in
divl
shl
aad
cld
fcoms
mov
and
mov
mov
enter
cmp
aam
js
sti
lock
imul
xor
adc
das
adc
mov
iret
xchg
js
divl
xchg
in
adc
imul
cmp
cmp
lods
imull
inc
das
popa
adc
leave
sti
mov
mov
mov
mov
push
sbb
cwtl
popf
in
jbe
addr16
mov
pop
outsl
stos
movsl
dec
xchg
xchg
jl
scas
pusha
mov
xor
inc
mov
cmp
iret
je
mulb
call
fidivrs
adc
loopne
push
sub
sub
leave
pop
aam
das
xor
mov
fnstenv
jno
and
jb
jl
or
or
mov
push
les
and
lods
inc
scas
dec
push
arpl
test
dec
jb
mov
pop
scas
popa
and
jl
fldpi
or
inc
sti
mov
xchg
scas
mov
pop
pop
mov
mov
scas
adc
cmp
xor
adc
sarb
push
daa
pushf
xorb
shl
js
in
call
sti
mov
adc
push
lods
cmp
inc
es
mov
outsb
jmp
xor
push
fdivl
jg
pop
jns
and
mov
and
cmp
test
and
cmp
jle
jne
push
subb
pop
adc
jns
in
mov
pop
xchg
lahf
movd
mov
in
lret
mov
xor
mov
mov
loop
push
jnp
dec
push
cld
dec
outsb
mov
cld
mov
cmp
mov
sbb
cmp
into
cmpsb
jae
mov
fimuls
lock
mov
xchg
inc
jne
inc
insb
cmp
out
popf
dec
jne
cwtl
sub
push
dec
cmpsl
ret
mov
iret
ret
mov
cmp
cmp
aam
jl
dec
bound
push
loope
push
xlat
fwait
xor
hlt
subl
mov
fwait
outsb
outsl
xor
jae
filds
or
mov
outsb
sbb
movsl
in
cmp
scas
xor
cmp
stc
cmp
outsb
stos
loop
psubq
ss
cmp
fisubs
jp
add
pusha
orl
out
pop
iret
inc
pop
mov
je
lret
inc
cmp
sub
pushf
adc
cltd
cld
lods
fnstenv
mov
cmp
js
cli
in
jns
sub
and
aad
sbb
cld
mov
scas
cmp
jl
sarl
mov
rcr
xchg
cmc
mov
xchg
xchg
stc
fisubrs
aas
xchg
inc
xchg
jge
aam
pop
xor
dec
sub
jo
pop
out
enter
push
mov
notl
test
test
rclb
mov
in
or
xor
not
cmp
adc
fnstsw
mov
sub
inc
cmp
std
in
xchg
sub
into
jae
insl
test
cmpsb
cltd
aam
fdivp
cltd
pop
fwait
jl
push
mov
or
fnstcw
lds
clc
sub
or
lea
pop
dec
rclb
clc
and
push
call
jnp
daa
dec
rolb
inc
lds
push
repz
dec
pusha
xor
xor
xor
or
lods
sub
clc
sub
shrb
arpl
insl
pop
iret
mov
mov
aaa
andl
mov
rcl
mov
stc
arpl
cmp
or
ss
fsubrl
sub
push
adc
imul
mov
cmc
je
leave
add
in
icebp
cld
arpl
addr16
and
mov
ficomps
jo
jecxz
jg
mov
aad
xlat
inc
push
sub
cmp
divb
xor
or
push
pop
cwtl
int
out
insl
in
lock
pop
adc
call
mov
adc
ja
cli
push
addb
scas
mov
sub
subl
call
cwtl
sbb
xchg
outsl
add
imulb
fisubrs
mov
movsb
insl
mov
jo
sbb
clc
pusha
and
jb
mov
enter
lcall
cmp
insb
enter
dec
and
inc
insb
data16
inc
and
rcrb
pop
fwait
jbe
push
xor
sbb
in
out
ja
into
pop
pop
scas
inc
mov
xchg
mul
pop
mov
in
outsb
lds
lcall
jecxz
push
inc
sub
pop
fisubrs
xor
sub
xor
loopne
and
shlb
and
cwtl
sahf
sub
xchg
testb
enter
jno
movsb
or
mov
jae
adc
loopne
xchg
mov
adcb
test
js
in
push
sub
ficoms
pusha
leave
lcall
cmp
jo
sbb
push
dec
dec
sub
orl
test
popf
jle
es
movsl
hlt
inc
and
into
test
dec
inc
faddp
in
pop
shll
push
and
push
mov
mov
and
pop
sub
out
cmc
shll
jle
loopne
or
pop
add
cwtl
nop
cld
xchg
adc
clc
test
fsubl
sbb
cwtl
xor
push
nop
dec
xor
mov
and
dec
enter
mov
test
test
jge
inc
mov
mov
outsb
cmpsb
enter
fimull
arpl
stc
outsb
dec
xlat
mov
add
ss
inc
adc
mov
dec
scas
jl
mov
mov
jo
xor
xchg
jo
test
jo
jae
push
cmpsb
lahf
inc
lcall
jbe
xchg
pop
out
lret
repz
push
cmp
and
jmp
das
jo
xchg
repz
inc
mov
xchg
in
shlb
stos
rcr
jo
or
gs
add
sub
out
dec
vzeroupper
sti
mov
sbb
jo
pop
and
or
sbb
adc
sahf
push
mov
pushf
cld
mov
inc
and
push
or
push
mov
enter
andb
pushf
xchg
and
test
mov
push
push
jp
pop
inc
divl
ret
push
jl
lea
dec
mov
push
loopne
jbe
jno
add
sbb
shll
jo
jae
or
ret
scas
lds
add
lods
cmp
aad
nop
push
sbb
popa
mov
outsb
shr
and
jnp
sub
ja
ljmp
dec
xor
push
jo
fiaddl
test
push
imul
lock
shrl
or
jo
frstor
call
cwtl
popf
jo
fdivrs
lods
or
enter
aam
or
loop
jo
pop
xchg
iret
dec
push
and
ja
cmpb
mov
jo
rolb
pop
into
cmpsb
sbb
add
jae
out
xchg
nop
jo
faddl
mov
mov
and
test
xchg
jg
push
mov
mov
dec
cmc
aas
add
cwtl
sub
dec
rorb
lock
sahf
dec
das
fwait
lock
pusha
jo
loope
sbb
xor
enter
mov
andb
nop
fistps
push
lods
jne
cli
orb
mov
jo
cmpsb
push
out
dec
jo
ja
repnz
pop
iret
jo
cld
std
xchg
pop
and
jo
in
jb
push
mov
ja
cld
mov
ja
pop
inc
frstor
jg
test
mov
popa
pop
iret
cltd
mov
lock
push
cwtl
dec
ss
push
sub
jo
pop
mov
bound
outsb
fs
aaa
sbb
jo
sbb
mov
jp
dec
xor
fs
jo
pop
xchg
push
add
adc
mov
stos
gs
mov
add
dec
cmc
jo
dec
mulb
clc
and
fisttps
xor
movsl
lods
aam
inc
outsb
xor
push
out
lret
jecxz
xor
std
fistl
jo
add
enter
jae
scas
repz
ja
add
daa
sbb
or
dec
lret
rorl
xchg
aaa
push
lods
inc
jae
push
addr16
aad
adc
xchg
add
push
insb
lock
pop
inc
repz
in
aam
iret
call
jg
sbb
pop
test
ret
add
jge
mov
add
jl
jp
test
aas
xor
inc
jo
ror
pop
arpl
call
jno
or
pop
push
push
cmpl
mov
jo
mov
cmp
lock
outsb
pushf
or
cmp
and
jle
push
lods
adc
sahf
jo
and
shrb
cs
dec
pushf
jo
sbb
inc
jo
cmpsb
push
xchg
cmp
fwait
dec
and
test
jo
ret
push
mov
sbb
stos
int
dec
jle
lahf
inc
sbb
jo
xchg
addl
insb
mov
jae
mov
data16
cmp
sbb
jo
and
mov
stos
jno
mov
imul
jo
mov
jo
push
and
and
repnz
add
stos
inc
xor
xchg
adc
or
mov
jne
shrb
test
mov
hlt
mov
dec
repnz
shll
mov
aas
idivb
xor
push
ss
std
rorb
outsb
dec
ja
cmp
stos
push
rol
cmpb
je
aam
xorl
xchg
mov
negb
cmpsb
mov
out
mov
jo
les
jo
mov
test
addr16
je
cmp
xor
int
mov
ret
lock
mov
outsb
mov
or
and
add
ret
mov
xor
gs
sub
mov
jo
lret
mov
inc
jb
nop
leave
clc
out
lds
mov
mov
data16
xor
xchg
mov
mov
add
dec
xchg
xchg
or
cmc
adc
out
jp
or
jo
sbb
add
add
lock
pop
sub
sbb
jae
xor
imul
xchg
das
push
pop
repnz
jp
and
xchg
mov
mov
sub
mov
jb
adc
mov
sahf
push
fs
dec
pop
ret
es
jo
ss
icebp
xchg
add
call
xchg
repnz
aam
push
sub
jmp
dec
jg
mov
dec
sub
sub
lock
xchg
inc
pop
add
sbb
push
add
scas
lock
test
sbb
outsl
adc
lock
jp
sub
nop
into
mov
xor
add
arpl
or
pop
das
sbb
lock
out
loope
jae
mov
mov
sub
movsb
sub
jo
or
cmc
sub
pusha
subb
imul
cmpsl
subb
in
lahf
lock
pop
or
je
fisubl
add
pop
lret
call
ljmp
or
lds
xor
data16
notl
push
lods
unpcklps
and
cltd
gs
push
mov
loope
int3
jo
and
outsl
and
dec
jp
lock
neg
lcall
inc
movsl
push
mov
mov
xchg
mov
pop
jae
pusha
orb
test
sbb
ja
scas
sbb
shlb
hlt
jo
jg
call
insl
mov
mov
mov
jo
add
or
cmpsl
cmp
jo
adc
in
jbe
jo
and
mov
mov
daa
lock
jo
call
lods
xchg
push
addl
les
lret
jo
fnstenv
jno
or
jo
xchg
sub
or
or
lret
cli
out
divb
mov
cltd
jo
mov
xor
insl
or
ret
mov
jecxz
insl
incl
and
adc
shrl
lods
test
inc
cmpsb
pushf
and
loope
jge
call
jo
ror
mov
dec
inc
jnp
sbbl
push
pusha
inc
add
pop
add
movsb
xchg
mov
jo
repz
cld
mov
rclb
xor
sub
jo
nop
fwait
pop
push
sbb
jnp
je
sbb
or
bnd
std
addr16
enter
cmp
and
adc
scas
out
ret
out
mov
push
mov
xor
int3
dec
pop
imul
fnstsw
popa
sub
dec
adc
imul
pop
jo
in
push
mov
cmp
pop
sbb
adc
mov
aaa
insl
jae
popa
jge
or
jmp
pop
mov
stos
dec
mov
jo
mov
mov
ja
pop
ret
lock
pop
add
sub
movsl
call
fstpl
push
mov
jo
mov
cmp
neg
shlb
or
xor
jo
js
mov
jo
xchg
and
adc
jo
arpl
lcall
ret
fidivrl
int3
jo
lcall
jo
insl
pop
scas
mov
mov
mov
jo
pushf
inc
lods
push
sbb
jo
xchg
fs
insb
das
fidivl
leavew
in
push
popa
aaa
insl
jle
inc
movsb
jmp
pop
mov
enter
lahf
fwait
movsl
push
add
mov
and
fldcw
add
pop
inc
push
jmp
lea
int3
adc
arpl
lret
cmp
pop
andb
cmp
jp
jo
lret
or
jo
add
mov
inc
xchg
push
adc
pop
add
jo
shll
sbb
mov
cmc
jo
data16
inc
xor
push
jo
sti
cmp
lods
test
jne
lock
pop
jmp
sbb
sti
test
push
pop
imul
cwtl
insl
dec
out
push
popa
mov
inc
jbe
aas
arpl
push
add
sbb
cmp
xor
cmp
inc
lock
stc
or
sub
aam
jmp
mov
jne
in
sbb
cmc
pop
push
or
jo
idivl
loop
sub
jnp
jns
inc
cltd
fsubs
in
jno
cmp
cmpb
xchg
xchg
cli
test
je
dec
dec
jmp
push
pusha
sub
cli
add
fnstenv
and
shll
insb
shrb
mov
nop
sub
cs
jb
and
dec
cmp
jl
jae
mov
pushf
inc
adc
fld
daa
jmp
bound
out
dec
outsb
imul
pop
loop
es
jmp
xor
arpl
int
aas
inc
imul
scas
sub
cmpsb
ret
mov
loopne
imul
dec
es
pop
iret
pop
pop
test
lea
xor
fsubrs
and
jnp
mov
sub
lcall
stos
push
das
insl
dec
loopne
jl
out
mov
jmp
stc
insb
mov
dec
mov
je
mov
das
pop
add
addb
push
inc
loope
xchg
std
repz
aad
sub
and
iret
test
js
jae
dec
cwtl
push
inc
push
dec
sti
lock
jle
int
out
xlat
jnp
inc
jo
iret
enter
xor
or
xchg
lock
addr16
cltd
out
dec
jae
jbe
push
push
cmp
pop
iret
cmpsl
sub
mov
and
or
ja
mov
daa
jnp
andb
fdivp
push
inc
push
inc
inc
dec
stos
cwtl
mov
mov
call
movsl
loope
sub
jmp
adc
mov
inc
or
call
push
shlb
lock
push
mov
pop
icebp
repnz
jbe
push
push
inc
divl
xchg
in
pop
mov
and
outsb
in
fsubrp
mov
cwtl
jbe
lret
sbb
xchg
cmp
jmp
shlb
cmp
cs
adc
je
cwtl
push
add
push
xor
inc
test
in
xor
add
sti
loopne
cwtl
lcall
pusha
rcll
pop
and
dec
inc
ja
arpl
daa
sbb
rclb
inc
mov
pusha
cwtl
cli
jbe
enter
dec
cltd
lock
push
push
mov
mov
push
jo
dec
pop
fsubrs
dec
add
push
pop
into
loope
leave
push
stos
and
fs
je
lret
rclb
frstor
lock
into
sbb
faddl
push
ss
mov
add
or
rol
icebp
test
lock
sahf
jg
sub
in
mov
rcll
stc
shl
push
scas
aad
push
shlb
ja
cwtl
gs
mov
into
je
cmc
stos
mov
cmp
xor
or
and
jl
xor
push
int3
jns
xchg
rclb
add
add
js
fcoml
push
dec
jecxz
arpl
xor
leave
sub
nop
loopne
out
and
inc
mov
cmp
jno
jl
ret
jne
jnp
cmp
inc
insl
sti
ret
imul
movsb
and
lret
ss
xor
add
and
adc
jae
in
jb
daa
nop
push
loope
dec
jne
je
xor
in
call
add
in
or
adc
pop
add
lahf
and
ljmp
hlt
xor
test
pushf
push
jne
sbb
or
xor
pusha
jg
testl
mov
adc
mov
adc
push
xor
push
xchg
jmp
int
test
mov
xchg
fiadds
sub
mov
lods
sub
cmp
cmpsl
push
addl
rclb
mov
negl
inc
out
je
xchg
hlt
icebp
jb
sub
ss
and
icebp
sahf
sarl
dec
sbbb
cbtw
mov
dec
fcompl
fstl
daa
out
adc
je
cmp
add
push
xchg
notl
cmp
push
loope
pop
aad
in
andb
sbb
push
outsb
mov
adc
test
out
in
push
cmp
lods
call
test
xchg
fadds
das
inc
adc
out
int3
add
jmp
cmp
pop
dec
jle
iret
pop
jno
push
out
push
xchg
mov
sbb
hlt
ret
add
dec
cmpb
sti
push
adc
pop
sbb
aam
jmp
cmp
lods
in
arpl
fs
shrb
jb
dec
sahf
push
shlb
and
cmpb
dec
mov
xor
outsb
stc
mov
xor
fwait
cld
inc
jecxz
mov
push
imul
daa
pop
push
insb
fs
mov
mov
fucom
out
lret
sub
pop
imul
ljmp
js
daa
inc
outsb
mov
out
sbb
or
pop
pop
and
lock
pop
scas
out
loopne
adc
pop
sbb
arpl
pop
cmp
lods
pop
jp
je
dec
insl
inc
in
enter
add
jne
daa
dec
into
lret
pop
pop
xor
mov
jne
jmp
in
lcall
mov
pop
xchg
sub
mov
mov
cwtl
gs
int
out
bound
fildll
mov
and
iret
push
inc
aam
push
les
mov
mov
push
fdivl
scas
pop
bound
rcrb
out
sbb
fs
push
repnz
insl
cmp
and
movsl
mov
push
sti
in
shll
ret
and
ljmp
mov
inc
out
push
out
ss
loopne
in
xchg
mov
ds
inc
addr16
pop
xor
mov
dec
int
int3
xor
sub
aaa
pop
sub
pop
sbb
arpl
pop
mov
jnp
xchg
lea
or
addr16
sub
ds
mov
push
insb
xchg
jno
sub
jg
add
jp
addr16
mov
mov
ficomps
popf
sub
adc
push
mov
cmc
jl
out
or
adc
adc
and
mov
and
lods
xor
and
sub
dec
lea
xchg
jae
sub
in
xchg
loopne
pop
mov
popf
clc
jns
xchg
cli
sbb
and
push
repnz
dec
out
outsb
repz
iret
inc
clc
mov
fnstcw
cmp
out
imul
jnp
push
hlt
mov
pop
je
xchg
add
xchg
cwtl
les
in
push
xor
pop
cwtl
jecxz
fdivrp
xorl
pop
xchg
ja
ljmp
test
dec
aaa
xor
clc
xchg
sbb
xchg
addr16
jne
in
dec
or
mov
scas
daa
orb
das
xor
sbb
insb
sarb
dec
dec
lds
add
mul
rorl
enter
pop
sub
adc
add
jmp
lret
cmpsl
inc
pop
xchg
push
mov
test
sbbl
ret
cs
mov
loopne
mov
lock
xor
cmp
lds
jae
jl
hlt
clc
and
xchg
pop
xchg
repnz
iret
adc
or
mov
jo
cmpsl
xor
jg
sbb
pop
arpl
mov
sub
out
xor
loopne
sbb
xchg
fistl
adc
add
add
aas
fldenv
repz
xchg
jmp
lahf
mov
dec
xchg
movsb
arpl
push
add
in
shll
gs
repz
aas
pop
loope
es
addr16
add
in
mov
jo
out
cmp
jo
xor
jbe
mov
and
sbb
into
sbb
jo
push
push
mov
addr16
jb
cmp
sbb
or
lds
jo
das
lods
or
test
jge
icebp
stc
arpl
cmp
add
push
jo
ja
dec
xchg
mov
std
lock
out
jo
pop
adc
ja
mov
filds
orb
dec
jo
sub
add
mov
icebp
jo
mov
xorb
xchg
jl
stc
aaa
xchg
jo
test
mov
outsb
lcall
outsl
ljmp
mov
out
rcrl
jo
sahf
and
cld
cmpsb
sub
jo
jmp
mov
pop
jo
out
push
jecxz
jo
fdivs
enter
insl
sbb
out
jo
add
inc
ficoms
xor
ret
pop
jmp
incl
hlt
cmp
lcall
ja
pop
and
dec
adc
loop
jo
mov
aas
jne
jo
add
insb
cmp
adc
lret
test
xor
dec
loope
lods
nop
xor
jle
inc
xchg
mov
cmpsb
lock
movsl
sbb
out
push
cltd
stos
cmp
mov
mov
scas
mov
jo
mov
lcall
scas
push
mov
dec
sti
lock
sub
pop
jo
rcl
inc
mov
out
xor
mov
and
sub
pop
push
leave
mov
xorb
push
into
loopne
cmc
jo
mov
dec
sbb
push
xchg
loop
sub
xor
popf
push
in
push
add
mov
inc
imul
test
ss
jbe
inc
rcll
je
ret
bound
test
jae
cli
or
fsubs
out
jo
sbb
cmpsl
les
shrb
jb
xchg
and
je
fucom
add
adc
jmp
or
out
mov
lods
lock
in
jo
or
jae
stc
mov
int3
insb
dec
add
shlb
mov
xchg
sub
in
pop
mov
imul
adc
nop
fwait
mov
jo
xorb
pop
sbb
stc
pop
es
push
test
imul
arpl
pushf
cmp
fidivs
sbb
add
xchg
test
mov
or
jmp
push
loope
xlat
mov
add
iret
inc
rcl
jo
inc
sbb
cwtl
push
fistps
cmp
push
and
mov
rclb
arpl
rcll
xor
add
popf
dec
mov
ss
xor
jo
inc
push
lods
sub
arpl
pop
insb
jg
mov
mov
jns
out
mov
popa
jo
std
mov
pop
pop
call
cmpsb
lret
cmp
push
int3
jo
and
adc
jp
addr16
lods
push
sbb
push
jle
jo
int
jb
repnz
mov
ret
push
mov
push
jo
loop
shll
fistps
mov
fwait
jb
jae
pushl
lods
mov
in
sub
pop
movsb
shr
dec
push
cmpxchg
scas
jo
add
rcrb
jp
shll
div
gs
sub
imul
movl
insb
fnsave
enter
ja
mov
pop
sub
mov
lock
and
push
repnz
add
mov
cmp
mov
sub
jecxz
fs
pop
push
jge
jo
in
push
mov
mov
push
jb
jmp
xchg
dec
jmp
in
ja
rclb
inc
jo
scas
sub
hlt
int3
adc
aad
fs
mov
jo
jl
sub
jo
imul
std
or
sbb
push
ret
ja
mov
mov
mov
aad
jns
insb
push
cli
mov
mov
jo
and
xchg
add
inc
lds
sahf
dec
jo
xchg
pop
rorb
cs
ja
jmpw
rorb
fwait
jo
add
pop
mov
lret
lahf
mov
in
mov
sub
inc
rorl
xchg
dec
popf
or
mov
jo
out
cmp
jp
jae
jo
je
xchg
push
mov
call
lods
or
sti
mov
sarb
sub
jg
sub
push
lock
in
jae
jb
pop
push
xchg
out
lods
adc
repz
stos
cwtl
jne
jo
dec
das
sbb
aam
cmp
daa
mov
inc
pop
subl
and
xchg
cmp
jo
enter
add
cmp
mov
pop
xchg
imul
nop
lock
pop
mov
mov
push
mov
xchg
lock
stos
cmpsl
lods
test
jo
cmp
sub
shll
add
negl
pushf
jne
clc
adc
jo
rolb
mov
pop
std
lods
jl
jo
lods
imul
in
add
mov
outsb
ljmp
ficoms
dec
cli
sbb
add
movsl
push
call
fucom
mov
dec
adc
xor
jo
cmp
dec
mov
xor
xchg
fnstenv
outsb
outsl
mov
in
sub
loopne
xchg
mov
mov
lock
cld
pop
jo
adc
jo
or
negl
loopne
dec
pusha
data16
xlat
xchg
sbb
pop
xchg
push
jo
pushf
imul
jo
shll
loopne
adc
imul
pop
mov
or
xor
clc
mov
pop
add
jae
xor
jp
adc
fldl
ja
clc
jnp
pushf
pushl
movsb
inc
jp
jo
in
call
fimull
mov
and
jg
outsb
jmp
sub
adc
mov
sbb
in
or
sub
fstpt
scas
scas
cmp
lcall
inc
jge
adcb
icebp
mov
loop
lods
dec
jo
sbb
mov
scas
jo
add
lods
adc
mov
adc
xchg
inc
jmp
dec
lcall
mov
repnz
aaa
push
push
sub
jb
imul
mov
out
rcrl
arpl
enter
push
sbb
push
jo
lods
cwtl
outsl
add
jo
out
outsb
inc
inc
or
push
sbb
mov
aaa
lock
inc
add
sti
cmp
jo
mov
xlat
add
test
sbb
jo
sbb
mov
insb
out
pop
pop
mov
mov
xor
call
jge
push
movsb
pop
xor
cmp
mov
insl
inc
inc
ja
std
jo
mov
cli
push
shll
sub
xchg
add
fcompl
add
out
mov
fwait
add
enter
sub
jl
sahf
mov
dec
mov
stos
jbe
dec
js
ja
addr16
divl
jo
and
lret
loop
pop
jo
xchg
lea
inc
adc
ljmp
inc
jmp
imull
pop
data16
cmpsb
fs
mov
pop
inc
add
das
push
setae
lret
xchg
dec
outsb
sbb
inc
jo
fstl
aas
xor
lock
jo
and
push
xor
inc
dec
ret
stos
lock
pop
movsl
inc
jo
adc
mov
ret
xchg
xchg
sbb
push
fidivs
and
pop
dec
decb
jo
icebp
cmp
jp
repnz
shlb
jnp
pop
lock
and
jo
aaa
test
jp
mov
jnp
pop
sub
iret
jae
jg
dec
dec
or
fisttpl
mov
les
jnp
sarb
sbb
imul
cltd
je
ja
test
xorb
mov
mov
inc
addr16
arpl
xor
cmp
out
jp
mov
add
xchg
jno
jo
cltd
cwtl
loopne
pop
jo
mov
dec
dec
pop
cli
imul
mov
call
xor
aas
jnp
inc
add
jo
into
lock
outsb
mov
insl
push
and
jb
jno
dec
fimuls
int3
outsl
xchg
jl
insl
adc
cmp
jmp
cmp
xor
jae
jns
insb
adc
gs
xchg
pushf
into
ljmp
push
sahf
xchg
push
mov
sub
outsl
roll
xor
pusha
mov
cmc
dec
imul
enter
sub
movsl
xchg
sti
outsb
pop
int
in
ss
popa
scas
pop
mov
pop
cmp
push
push
sti
fidivrs
adc
jae
mov
mov
jge
clc
in
sub
in
mov
mov
cwtl
dec
xor
mov
js
data16
repnz
ss
loopne
in
and
stc
bound
insb
xchg
mov
pop
daa
xlat
imul
inc
xlat
mov
daa
pop
imul
pop
sbb
dec
sub
fld
inc
fsubrs
cmpsl
outsb
sar
js
pusha
cwtl
add
je
jmp
or
aas
push
xchg
sbb
mov
push
pop
and
add
stc
jmp
pop
cmp
out
adc
adc
mov
xchg
inc
mov
popa
pop
sti
jnp
subl
cmp
mov
pusha
lea
add
lds
jae
dec
faddp
inc
push
iret
dec
xorl
inc
insl
cmp
jl
aas
jne
bound
xor
and
pop
insl
inc
pop
cmpsb
push
push
mov
stc
loopne
clc
test
inc
fidivrs
push
and
xlat
test
mov
lret
in
aad
aaa
jbe
lods
call
sub
fistpl
or
pop
call
stc
mov
ss
mov
clc
movsb
add
lret
dec
lock
jle
jp
in
and
xor
xchg
cbtw
jbe
sub
push
xchg
stc
cmp
mov
xchg
mov
xchg
fcmovb
xor
inc
leave
mov
pushf
ss
ret
sbb
movsl
stos
xchg
insl
jle
and
jmp
and
rcrl
std
adc
inc
xchg
jno
popf
xor
pop
push
push
repz
fisubs
push
test
push
xchg
push
sbb
xlat
sbb
les
lahf
test
adc
adc
xor
push
push
cwtl
and
jae
or
push
pop
mov
iret
xchg
inc
mov
inc
jge
jecxz
sub
fwait
inc
out
and
and
call
cmc
inc
sub
and
cltd
push
jae
cmpsl
and
nop
fcomip
jmp
lods
pop
jge
sbb
hlt
xor
sub
les
enter
call
hlt
sub
inc
push
cmc
stc
cmp
sub
fcomip
push
scas
cmpl
movsb
pop
in
lock
cmpsb
inc
and
jg
and
inc
dec
jb
scas
add
fnsave
test
gs
fs
out
xchg
dec
jecxz
loop
aam
pop
xchg
out
pusha
jle
or
daa
pop
xor
sub
jle
in
mov
imul
sbb
sub
frstor
fdivrs
sbb
sbb
push
mov
push
adc
cmp
sbb
mov
scas
xor
rcr
jne
push
sub
outsb
cwtl
inc
aaa
insl
add
cmpsb
cld
sbb
push
cmp
fwait
dec
repnz
dec
fdivrs
jle
shrb
pop
and
shlb
xor
and
loopne
mov
push
or
rcrl
mov
inc
jmp
cmpb
xchg
inc
and
mov
daa
mov
push
out
and
stc
adc
adc
mov
fisubs
jmp
arpl
push
push
cmp
jbe
jbe
aam
pop
mov
fnstenv
test
test
cmp
push
mov
inc
sub
cwtl
sub
cmp
jns
test
and
pop
mov
xchg
inc
mov
pop
jno
popa
fs
cwtl
add
pop
add
fildl
test
add
shlb
mov
push
xchg
loopne
jp
push
sbb
pop
dec
adc
inc
in
pop
jno
sub
imul
pushf
xchg
repnz
icebp
sub
into
sub
mov
lahf
scas
mov
aam
inc
cmp
cmc
push
pop
iret
shrl
mov
push
sbb
pop
scas
xchg
xchg
jae
cmp
loop
pop
push
bound
js
jp
sbb
push
nop
stc
loope
insl
into
sti
leave
push
inc
jne
mov
cwtl
roll
icebp
jg
outsl
and
and
sbb
insl
stc
fnstcw
cmpsb
leave
cwtl
pop
popf
dec
add
dec
movsl
shll
cmp
xor
je
fldcw
test
push
cmp
gs
std
xor
and
lcall
scas
push
lds
cmp
mov
push
push
adc
shlb
push
aaa
scas
nop
ds
das
and
pop
xchg
mov
mov
xchg
jge
cmc
jnp
in
jg
mov
mov
adc
sahf
mov
cwtl
roll
sub
jb
jg
insb
inc
shll
fiadds
sub
sub
sub
bound
and
jmp
ret
lahf
cmp
ljmp
fwait
pop
jmp
adc
jno
jnp
pop
mov
mov
sahf
push
push
inc
jno
xchg
fimull
pcmpgtd
ds
hlt
mov
inc
fisttpll
cmc
adc
sbb
repz
in
or
or
lock
outsb
js
xor
mov
mov
iret
cmc
lock
mov
test
and
mov
enter
mov
dec
mov
fs
inc
ficoms
sub
loopne
js
and
dec
inc
fisttps
jbe
mov
out
in
push
ret
jp
rcr
incl
xchg
enter
xabort
adcl
imul
push
inc
ret
cli
inc
mov
cmp
and
fisttpll
and
sbb
xor
shll
insb
outsb
rorl
push
mov
push
jno
jmp
loopne
cmp
mov
scas
out
adc
add
icebp
cmc
aam
test
xor
dec
cwtl
mov
je
idivl
cmp
pop
jne
mov
je
das
xor
add
call
arpl
aam
ffreep
or
adc
xor
jb
in
outsl
lock
xor
ret
mov
dec
fidivrs
mov
push
cmp
das
loop
ret
mov
clc
xchg
or
xor
pusha
add
pop
inc
cmp
sbb
stos
or
adc
mov
repz
enter
xor
push
mov
addl
pusha
or
jp
and
cmp
mov
push
bound
cmc
cmpsb
test
scas
loop
out
jae
lahf
pop
bound
inc
in
add
mov
push
je
dec
push
xchg
mov
dec
cwtl
xchg
mov
leave
hlt
inc
loope
test
add
and
dec
sub
popf
and
call
outsb
xchg
jb
push
xlat
add
jecxz
decb
arpl
and
andb
or
lods
push
movsb
xor
bswap
fsubrs
stc
enter
rorb
out
add
inc
mov
or
add
push
mov
sbb
mov
pop
mov
inc
xchg
cmpsb
jno
cwtl
imul
lock
loopne
mov
out
push
xchg
mov
pop
xchg
push
iret
in
cmp
fs
jle
dec
imul
mov
jl
add
mov
adc
in
scas
out
cld
pop
adc
fs
sbb
lret
insb
cmp
cwtl
push
sbb
inc
inc
stos
jo
mov
jo
mov
and
aam
pop
pop
push
test
jbe
sub
sti
jo
cltd
cmpsl
aas
call
data16
mov
imul
cmp
aaa
jo
std
dec
push
imul
push
outsb
or
aam
jo
loope
xlat
push
mov
jo
push
dec
popa
add
sbb
fptan
add
subb
lcall
jo
jmp
idivb
sub
call
fnsave
roll
ljmp
mov
lods
jo
stos
testl
jo
repz
sbb
jo
jp
xchg
shll
sarl
imul
xchg
jo
inc
pop
pop
push
push
cmp
xor
mov
ja
jnp
outsl
ljmp
dec
nop
and
enter
cmp
pop
xchg
mov
mov
cwtl
sarb
addl
adc
mov
insb
cmp
mov
push
loop
dec
jo
cmp
popa
sub
lock
push
inc
jo
and
aam
repz
lret
push
add
mov
or
pusha
mov
aas
adc
adc
jo
or
mov
lods
clc
jo
data16
sbb
xor
mov
inc
dec
outsb
lock
add
mov
dec
jl
jmp
hlt
mov
jae
out
and
jg
insl
add
lahf
mov
jbe
xchg
daa
pop
push
insl
test
es
and
adc
lods
enter
cmp
repnz
push
out
lahf
dec
inc
inc
shlb
mov
imul
mov
sub
xchg
fnstenv
mov
push
sbb
jae
jae
or
push
sti
xchg
cmp
lods
xchg
shlb
clc
ljmp
and
in
dec
and
and
orb
fmul
jo
and
push
ss
inc
jo
pop
sti
push
inc
sub
pop
sub
loope
sar
addr16
adc
int3
pop
icebp
pop
jle
into
jo
fucomi
adc
js
sti
mov
jne
outsb
xor
mov
adc
sub
xchg
insb
jg
fidivs
push
xchg
push
cmp
jo
mov
in
mov
repnz
jo
ljmp
jo
xchg
mov
push
roll
outsl
jo
in
mov
or
push
dec
cwtl
test
sahf
mov
mov
lcall
pop
daa
sti
sub
lea
das
cmp
jo
orb
mov
mov
mov
repz
jo
add
mov
fnsetpm(287
add
cmp
inc
and
dec
pop
in
das
repz
xorb
jp
push
or
dec
xor
fisttps
mov
addr16
decb
ret
cmp
loope
xchg
es
mov
lret
bound
push
xchg
shl
jo
add
and
jo
inc
aas
stos
test
sub
push
xchg
push
cmp
push
add
jns
pusha
mov
adc
imul
and
pushl
orl
sbb
movsl
jo
sub
addb
pop
cmp
cmp
mov
in
out
xorb
lods
imul
or
dec
jo
filds
mov
cmp
shlb
call
jo
dec
loop
or
mov
jo
sbb
inc
test
arpl
or
push
ja
in
fwait
jnp
adc
orb
jo
sbb
pop
pop
add
cltd
loope
popf
push
dec
mov
cmp
sub
xchg
stos
sub
ljmp
xchg
cmp
std
insl
mov
lock
jae
gs
addr16
cwtl
xchg
jo
das
cmp
pop
inc
fcmovnbe
mov
sbb
jmp
addr16
pop
adc
sahf
pusha
xchg
mov
add
jo
cmp
add
jo
adc
or
push
cmp
aaa
call
adc
and
or
ror
fsubrs
pop
add
mov
pop
clc
jo
mov
sbb
mov
movsb
sti
jmp
pop
or
lock
push
mov
push
movsb
call
paddusw
sub
repnz
add
sbb
add
das
insb
hlt
jo
iret
mov
pop
sub
imul
sbb
xor
dec
sub
mov
xor
dec
insl
jo
frstor
fistl
nop
ret
daa
push
xor
xor
je
adc
mov
mov
sub
fstl
xchg
sti
pop
movsb
jo
leave
xlat
div
aaa
push
mov
test
jo
sub
scas
testb
jmp
pushl
je
sbb
push
cmpsb
pop
dec
stos
cmc
inc
jno
xchg
insl
test
rcrl
jo
pop
sbbl
pushf
mov
out
sbb
mov
xchg
faddp
jo
lcall
jp
enter
and
mov
xchg
mov
xchg
add
out
fdivrp
lcall
jo
jns
pushf
mov
jmp
cmp
subb
push
lock
pusha
jge
jo
dec
lock
adc
sub
aad
fnstenv
xor
jo
scas
add
enter
jge
loopne
rorl
pop
incb
mov
push
loopne
imul
ret
fcmovnu
jo
inc
xor
sub
dec
sbb
sbb
cmp
sbb
aam
adc
cmp
out
or
push
pop
add
fs
inc
dec
mov
jg
xor
mov
jmp
mov
jo
stc
daa
cmp
aaa
pop
ja
jg
mov
lock
ret
jo
sub
cmpsl
fwait
lahf
sbb
addb
push
pop
sub
mov
mov
inc
mov
dec
les
jo
dec
std
pop
inc
loop
es
or
insl
lret
jb
sbb
out
lret
nop
inc
popf
fsts
jo
and
icebp
fwait
add
pop
std
fdivrl
enter
jo
imul
fbstp
adc
xchg
jl
inc
pop
push
cmpsl
jo
push
imul
jo
push
hlt
and
out
and
cld
bound
cmc
mov
gs
jbe
push
lods
jo
cmp
leave
jne
fimuls
rep
mov
div
xor
ret
lcall
jo
adc
call
mov
jo
sbb
push
insl
sbb
movsb
aaa
lret
jmp
mov
out
test
mov
lcall
jp
shll
adc
in
ret
out
xor
jo
fisubl
outsb
mov
push
nop
mov
popf
mov
inc
ss
js
lea
rcrl
and
sub
add
lea
std
pop
jp
lods
ljmp
lahf
xor
mov
pushf
test
jo
dec
push
mov
pop
and
jmp
jns
mov
jl
rcrl
testl
push
ror
das
jae
jg
inc
cmp
push
jo
loopne
mov
movsl
iret
test
cmp
lcall
jne
stos
jo
icebp
push
jecxz
repnz
mov
das
sub
push
cmc
arpl
inc
or
xchg
push
insb
xor
addr16
mov
lock
push
or
out
stc
xchg
mov
pop
nop
inc
xlat
cmp
jo
sbb
inc
out
jbe
cwtl
jo
xor
mov
movsl
shr
xor
lret
fmuls
insb
rcrb
or
lret
jnp
in
jo
das
and
popf
mov
jo
iret
push
xorl
mov
aam
or
int3
sti
pop
sbbb
test
ret
scas
jle,pn
or
rolb
jo
jg
loopne
int3
test
repnz
jmp
and
cmp
push
cmp
jno
das
outsl
mov
jae
ds
aad
jl
pop
mov
repz
jno
fs
jge
pop
push
testb
pop
add
repnz
cmp
mov
inc
sbbl
fnstenv
fwait
icebp
xor
out
mov
sub
inc
jo
ret
jmp
jle
lods
mov
iret
out
mov
pop
cmp
out
jb
cld
insb
mov
inc
mov
lret
sbb
dec
mov
in
jo
loope
rorl
sbb
addr16
adc
xchg
daa
push
pop
jno
sahf
jo
imul
mov
mov
pop
out
inc
xchg
mov
jo
push
mov
mov
or
das
daa
xlat
jo
mov
les
lret
and
sub
jo
ljmp
jo
insl
bound
pop
in
shll
pop
jo
add
stos
cmpsb
jo
push
outsb
adc
sbb
jp
hlt
inc
push
xor
mov
dec
into
bound
inc
les
out
cmp
sarb
push
cmp
bnd
out
push
pop
loopne
mov
mov
mov
out
jo
xor
dec
lret
jo
in
cmp
popf
pop
push
fidivrs
shlb
xlat
es
mov
lds
in
mov
mov
enter
push
aaa
jns
aas
lret
mov
fnstsw
inc
dec
pop
cwtl
shlb
push
psubq
pusha
sbb
pop
mov
out
jno
push
push
push
mov
mov
pop
inc
int
mov
scas
outsb
in
inc
xchg
test
aas
insl
out
mov
mov
pop
xchg
add
jne
mov
test
pop
in
pop
mov
or
outsb
add
sub
je
das
xor
aad
pop
ds
inc
loopne
dec
sarb
jl
xor
cwtl
mov
in
sbb
and
ret
lret
js
inc
jnp
cmc
orb
sub
movsb
iret
call
js
in
loope
mov
or
insl
ret
pusha
movsb
cmp
adc
js
and
loop
cmpb
sub
push
ret
adc
push
ja
fidivrl
int
xor
xor
add
mov
daa
cmp
add
lods
adcb
jl
sti
jmp
jns
imul
inc
daa
repz
out
adc
push
clc
cmp
shrb
push
pop
ret
nop
jae
ss
adc
test
or
and
rdmsr
push
lret
stos
imul
sbbl
shll
scas
inc
pop
je
dec
or
les
jecxz
cmc
fisttps
pusha
push
inc
mov
pushf
mov
mov
jle
mov
ret
or
dec
fdivrl
rcrb
adc
enter
test
mov
mov
lock
pop
iret
enter
lret
pusha
inc
xchg
sti
cmp
pop
test
sbb
xchg
pop
xchg
aas
mov
or
jmp
mov
push
add
dec
xlat
push
nop
ror
dec
in
sub
sub
jge
xchg
pop
pop
adc
push
inc
arpl
es
pop
and
jnp
sub
mov
clc
pop
cmp
movsb
add
push
sub
outsb
cwtl
pop
fs
adc
dec
and
jbe
dec
jae
arpl
cmp
pusha
cmp
push
or
xor
fwait
sbb
sub
sbb
js
jmp
dec
es
push
mov
xchg
jl
push
scas
mov
cmc
loopne
out
fs
in
insb
aad
jnp
repz
dec
cmp
cmpsl
push
mov
setne
imul
jl
push
push
fisubrs
mov
mov
testb
dec
jl
lds
or
or
inc
add
mov
cmp
outsb
mov
pusha
dec
sub
mov
dec
out
stos
mov
enter
into
xlat
sub
add
aaa
bnd
jns
xchg
jg,pn
xor
lret
out
leave
xchg
or
and
cmp
jo
pop
mov
xlat
push
xchg
cld
hlt
ret
xchg
lea
jg
pusha
inc
out
pusha
or
cltd
xor
jae
xchg
cmp
pop
es
and
pop
and
jge
xor
scas
sti
inc
mov
push
push
fs
mov
es
call
lret
jbe
lret
testl
shrb
cld
pop
sbb
sub
stc
loope
into
dec
movsb
xorl
jno
jge
test
inc
hlt
fs
jne
jae
pusha
stos
mov
repz
adc
cmp
pop
lods
sbb
xchg
fdivl
lret
fnstenv
pushf
cmp
lret
mov
xor
outsb
pop
pop
jle
push
pop
nop
cmc
jbe
xchg
and
ret
jne
jns
jns
loop
mov
push
imul
sub
or
aas
test
xor
xor
xchg
sub
dec
push
dec
in
inc
cwtl
imul
mov
pop
pushf
pop
ljmp
mov
in
mov
or
mov
xor
and
push
mov
mov
add
xchg
mov
pop
pop
inc
fldl
jo
mov
or
fnstenv
je
sbb
bound
cmp
mov
dec
or
sbb
mov
rclb
imul
xchg
mov
inc
jo
inc
mov
push
inc
mov
insb
jmp
das
mov
push
stos
ljmp
jle
subb
jae
sarb
or
cltd
cld
pusha
int3
test
mov
adc
fldt
or
xor
pop
xchg
les
fdivrl
adc
xor
cld
hlt
leave
xlat
sbb
mov
and
mov
sub
jg
push
orb
add
jo
cltd
cmp
test
or
pop
mov
sahf
mov
int3
xor
data16
lods
jo
mov
pushf
insb
outsb
jg
dec
rol
xor
pop
loop
call
in
mov
mov
and
faddl
bound
mov
lret
mov
sbb
or
popa
mov
jbe
push
mov
jo
les
pop
enter
push
imul
lret
lods
repz
dec
dec
push
pop
divb
cmp
jo
mov
jne
test
jge
daa
and
cmp
ja
lret
adc
fcmove
add
pop
dec
pusha
sub
xor
jo
push
mov
push
jae
inc
jo
arpl
cmp
add
xor
pop
pop
adc
sbb
dec
imul
hlt
arpl
xchg
dec
lock
mov
mov
and
rcr
outsl
jo
add
jmp
xchg
repnz
jmp
fcompl
into
fimull
jo
jecxz
cltd
xor
mov
lods
jne
pushf
pop
mov
pop
lea
mov
jo
lds
sbb
dec
and
cmc
sub
dec
ja
push
and
rclb
mov
pop
pop
push
nop
lock
or
mov
icebp
into
jbe
jnp
jge
jb
adc
sub
in
adc
or
jp
jg
cmp
sbbl
outsb
jo
or
add
aas
jo
sub
mov
das
xchg
int
fs
jae
jle
add
adc
xor
int
dec
xlat
push
pushf
in
loopne
aaa
int3
insl
inc
pop
data16
lods
or
stos
stos
int
push
push
cwtl
sahf
inc
jo
cmp
inc
xchg
divl
cmp
mov
push
push
insb
lock
mov
ja
dec
jb
adc
jno
lahf
push
and
test
out
mov
movl
jmp
outsb
mov
pop
inc
pop
std
xchg
jae
mov
or
and
pusha
mov
insl
jg
and
movhps
test
or
rcrb
ror
sub
sahf
aam
xor
add
das
jo
call
jb
inc
mov
stc
rcl
pop
or
and
insl
sub
mov
ds
or
jns
dec
mov
jmp
outsl
popf
inc
testb
push
std
out
call
push
push
mov
mov
mov
and
inc
pop
xchg
pop
jo
cmovg
mov
in
cmp
and
jge
mov
xlat
jo
inc
mov
add
xor
lret
fmul
mov
sub
fdivr
jo
js
jp
in
mov
cmp
pop
mov
shlb
adcl
mov
sbb
sub
push
jo
stc
sub
loopne
push
in
aad
mov
push
sub
jle
xchg
outsb
pop
mov
inc
adc
sbb
mov
outsb
ret
test
sub
test
add
leave
loopne
inc
call
mov
out
pop
sub
and
outsl
sbb
and
mov
mov
push
outsb
mov
mov
and
cld
xor
jae
mov
pop
pop
movsl
sub
out
ret
fs
and
mov
ret
cmp
cwtl
hlt
xchg
adc
push
push
scas
xchg
sbb
aaa
pop
and
pop
scas
cmp
in
fdivrl
sub
pop
aad
movsl
adc
dec
insb
lds
sub
bound
mov
xchg
dec
lret
fldcw
nop
movsb
jge
jo
ret
pop
jne
sbb
push
fcomip
push
sub
sbb
loope
hlt
ret
ss
adc
mov
mov
add
inc
and
jo
jge
cmp
call
lcall
or
mov
pop
push
pop
pop
int
mov
or
cmc
mov
mov
mov
into
xchg
dec
clc
mov
jg
aam
test
insl
push
lock
addr16
xchg
or
mov
pop
fcoml
out
jne
add
test
test
cmp
popa
pop
adc
sub
rolb
xchg
jp
pop
cwtl
xchg
jecxz
enter
lret
mov
mov
or
jo
xchg
daa
push
xchg
jb
jo
jns
jp
and
mov
cmp
jbe
mov
cmc
imul
xchg
mov
jo
fdivr
imul
push
jo
aad
push
cld
sub
mov
insl
icebp
mov
mov
int3
ja
adc
add
cmovnp
daa
dec
cwtl
mov
pusha
repnz
mov
inc
mov
cmp
aas
in
int3
outsl
or
outsb
lret
cmpsl
push
add
pop
jecxz
out
repz
or
roll
daa
jo
inc
subl
pop
jo
lret
lods
cmp
cmp
adc
mov
sarb
aas
jo
and
cmp
add
popa
stos
lock
addr16
jo
push
xchg
pop
fcomi
aas
jo
xchg
cmp
rcrl
adc
scas
in
mov
jo
xchg
jg
shl
and
jecxz
outsl
xchg
mov
sbb
aas
fistl
iret
shlb
pop
enter
push
adc
jo
loope
and
push
divb
inc
mov
mov
jno
dec
test
mov
pop
ret
jb
pop
pop
mov
daa
ss
jae
xor
test
pop
jae
imul
gs
dec
movsb
mov
mov
lahf
or
notl
and
cmp
sbb
into
andb
popa
jo
in
pop
sbb
std
repz
repnz
das
xchg
adc
in
fs
push
jo
scas
lock
xchg
mov
xchg
repz
sub
je
jo
ljmp
jo
xlat
mov
sub
iret
push
aas
jae
xchg
fiadds
lahf
push
or
jo
outsb
adc
mov
jnp
inc
popf
push
push
sub
dec
mov
sub
dec
aam
jp
lock
scas
mov
cmp
into
mov
lods
jae
adc
pop
mov
outsb
jo
jne
jbe
lret
jp
jp
adc
cmp
sti
inc
or
or
jo
in
sbb
jo
loope
add
pop
arpl
mov
lock
rcr
jo
idivb
or
sub
jge
xor
jo
xchg
and
jno
das
daa
mov
mov
cmpsb
cmp
dec
adc
jo
shl
jno
and
enter
jge
push
jo
pop
or
jnp
stos
insb
jl
jo
shlb
aas
jmp
push
and
xor
add
jo
int3
mov
ljmp
pop
and
outsb
add
out
xor
jo
mov
mov
mov
inc
daa
pushf
cwtl
out
jno
add
adc
lock
xchg
pop
push
jo
rol
scas
sub
shr
jo
adc
inc
inc
and
and
jbe
iret
push
mov
out
sbbl
jo
lret
push
fistpl
or
xlat
fisubrs
sub
popa
jge
xor
pop
lds
frstor
int3
lods
hlt
sub
dec
sbb
mov
or
jo
sbbl
ja
dec
adc
and
sbb
hlt
leave
je
test
pop
add
jb
xor
jo
daa
insb
jo
addr16
pusha
mov
data16
fiaddl
out
jmp
jmp
sti
mov
insl
sbb
mov
imul
jo
inc
cmpsb
out
mov
in
cmp
inc
cwtl
mov
jo
dec
push
push
subl
or
jo
sub
jg
lret
add
mov
test
popa
jo
push
dec
sub
mov
in
sbb
push
lods
jo
dec
mov
jo
in
inc
jle
in
xorl
cmp
call
clc
jp
or
cmp
sub
cwtl
mov
push
aaa
in
add
add
xchg
shlb
cmp
fbstp
ja
and
sbb
ja
jge
pop
xchg
inc
mov
dec
push
adc
adc
mov
lds
xchg
and
fwait
jg
pop
test
sbb
daa
mov
pop
and
pop
lock
nop
dec
or
mov
shll
sub
lock
mov
jg
icebp
out
cmpsl
pop
pop
jo
mov
jo
mov
nop
fbstp
movsb
loop
jmp
xorl
in
pop
iret
aaa
lret
lock
xor
sbb
inc
jle
mov
mov
popa
and
imul
aas
push
xchg
xchg
out
lods
movsl
hlt
insl
mov
sbb
adc
pshufw
cmpsb
nop
fucomi
in
inc
ss
xor
jo
push
jae
push
mov
push
dec
lcall
aad
dec
mov
xchg
push
push
push
mov
jo
stc
pop
mov
movsb
xor
jo
dec
push
mov
cmpsl
push
pop
mov
rorl
and
dec
shlb
adc
subl
lcall
add
dec
jo
mov
mov
sbb
or
dec
ja
faddp
sti
jo
ret
call
movsl
xorb
pop
mov
xor
mov
or
mov
xchg
nop
jo
scas
mov
ljmp
clc
test
add
orl
pop
adc
mov
jo
sahf
mov
mov
mov
adc
pop
mov
or
add
mov
icebp
mov
imul
testb
lods
dec
sbb
test
or
and
popf
add
test
lods
lea
cmp
and
jae,pn
mov
cltd
cwtl
call
mov
add
nop
es
mov
cs
and
xor
or
jecxz
es
test
rorb
dec
sub
jnp
push
repz
in
fdivr
pop
icebp
jo
mov
jnp
popa
jno
and
lcall
repz
mov
out
pop
imul
sarb
stos
adc
xchg
sarb
dec
jo
push
mov
sub
das
mov
adc
inc
jo
mov
stos
popa
jo
push
pop
jae
imul
xchg
aaa
dec
scas
inc
test
pextrw
mov
dec
imul
insl
pusha
adc
jb
and
mov
jo
cmpsl
ljmp
and
pop
xchg
sub
shrl
xor
fstpt
and
std
jo
cmpsl
stc
cli
popf
lahf
jle
jo
dec
adc
push
sbb
pop
mov
out
xchg
bnd
jmp
stc
xorb
jb
cli
lret
fwait
std
imul
test
push
or
mov
sbb
jmp
dec
pop
xchg
aaa
xor
imul
mov
loop
lods
in
cmpsb
outsb
pop
sub
push
dec
dec
gs
xchg
sub
shll
mov
pop
aas
xor
stos
pop
cs
loop
pop
jo
dec
mov
jo
xorl
imul
push
hlt
push
ja
cmp
call
rorb
mov
add
lea
ss
and
jp
mov
jg
mov
lds
inc
push
fisubrs
test
icebp
push
pop
and
mov
fs
incb
push
arpl
cmp
xchg
repnz
mov
fs
leave
mov
outsb
into
rcl
push
jg
dec
sbb
data16
subb
jo
leave
das
rol
push
xchg
cmpsb
jo
mov
out
jo
aam
adc
shr
mov
inc
xlat
and
and
loope
mov
xor
aaa
movsb
bnd
sub
push
jecxz
aam
jns
stc
lock
and
ss
jmp
out
xchg
jae
sbb
lock
sbb
loop
xor
iret
mov
push
std
pop
jo
xor
adc
adc
and
sbb
sub
add
mov
aas
jae
sbb
lea
ret
jo
popf
jne
rcl
or
jo
std
xchg
shrb
xchg
mov
dec
mov
cmp
and
push
pop
sbbw
adc
xor
sbb
and
add
xor
xchg
testl
jmp
push
ret
mov
inc
pushl
neg
or
and
bound
mov
jo
arpl
sbbb
push
mov
testl
int3
xor
or
jo
jb
sbb
add
adc
xor
sbbb
js
mov
jb
pop
loopne
lea
fdivrl
bound
jl
ffreep
mov
in
mov
lock
int3
stos
add
rolb
mov
xchg
fcomp
jo
int
push
mov
mov
xor
push
jo
pop
dec
jge
into
ret
jo
cltd
inc
jmp
loopne
shlb
or
jo
js
jns
jno
add
add
aaa
shl
adc
push
jo
aam
mov
push
add
mov
pop
lret
aaa
mov
jo
jns
scas
inc
lcall
add
nop
inc
sbb
jo
xor
out
jo
sbb
jp
sbb
iret
jo
test
das
mov
movsl
pop
call
dec
out
rclb
hlt
insl
test
pop
dec
lods
pop
mov
mov
jmp
jo
ljmp
insl
movsb
daa
aas
shlb
xor
add
je
jo
loop
ds
testb
push
fnstenv
movsb
dec
push
push
pop
push
mov
ljmp
dec
sub
push
or
jnp
aam
sub
dec
xchg
sahf
jbe
jae
mov
and
xorb
adc
nop
shl
into
inc
js
jo
movsl
cld
daa
mov
pop
xor
sub
xlat
xchg
bnd
aam
decl
xchg
jo
loope
sbb
mov
mov
jb
add
data16
dec
lret
ss
in
andb
add
pop
mov
nop
jnp
mov
sbb
push
jno
mov
push
int3
adc
adc
ja
push
sbb
mov
xor
mov
pop
pop
push
stc
xor
xor
insb
jbe
std
lahf
lods
mov
out
inc
in
pop
roll
add
das
jo
test
fsubs
pop
xlat
add
fcoms
lret
cmpsb
fldl
dec
xacquire
es
sbb
jo
lock
push
repnz
pop
cli
fs
adc
jo
imul
outsb
test
adc
push
push
test
ja
lods
test
jp
imulb
mov
cmp
dec
fprem1
lock
popa
sti
aad
shlb
cmpsb
inc
sub
mov
push
insb
xchg
pop
xor
dec
insl
xor
xchg
mov
aad
xorl
xor
outsl
dec
jo
jge
pop
inc
out
mov
and
jne
add
mov
pop
pusha
mov
mov
jo
gs
stc
rcrb
adc
icebp
out
adc
xor
and
jo
hlt
pop
add
stos
ss
mov
mov
push
xchg
ja
sub
jo
mov
push
push
jo
mov
sbb
pushf
jbe
mov
push
push
loope
aad
repz
sti
add
jo
inc
sbb
xor
adc
sahf
mov
gs
fnstcw
loop
pop
rorb
jg
shrl
fsubrl
pushf
sbb
leave
jo
adc
push
mov
sarl
outsl
addb
push
dec
movups
sbb
fdivs
push
in
frstor
divl
mov
inc
mov
les
mov
xchg
dec
je
pop
mov
cmp
mov
repz
jp
mov
fcomps
xor
pop
insl
or
sub
push
sbb
jl
lods
bound
jns
and
repnz
call
lea
stos
sub
push
and
or
cmp
and
cmc
pop
hlt
pop
mov
sbb
inc
jo
mov
push
sbb
data16
out
imul
les
stos
imul
and
or
jo
fsubs
lds
ds
cli
inc
aaa
or
jo
out
push
or
sbb
jae
push
pop
in
lock
push
pop
jnp
jge
mov
inc
pusha
push
imul
sbb
push
push
or
jbe
mov
cmpsl
out
mov
jle
popa
mov
jne
in
xchg
adc
xor
dec
sbb
mov
leave
je
or
punpcklwd
imul
add
pop
pop
jge
sbb
call
jo
outsb
test
loop
pushf
adc
rclb
std
pop
add
xchg
inc
add
xor
out
sub
mov
fcmovne
outsb
pop
jg
jo
icebp
cmp
mov
dec
loop
jmp
in
dec
outsb
adc
mov
jecxz
sub
pusha
inc
adc
jae
sbb
cmp
test
dec
jle
repz
aas
push
mov
mov
lret
ja
jne
mov
movsl
mov
ret
jp
rcrb
call
iret
cvttps2pi
ljmp
dec
mov
movsl
test
jp
push
mov
inc
insl
lods
and
cwtl
mov
mov
movl
mov
xchg
cwtl
movsl
shrl
lahf
xchg
xchg
shrl
loopne
test
lods
divl
lret
jo
cmp
mov
jo
test
jmp
pop
idivl
insl
cld
mov
jp
xor
movb
inc
gs
add
inc
nop
imul
fstpl
ds
insl
ja
xor
mov
or
push
push
movsb
jo
test
cmp
pop
cld
add
mov
out
pushf
loope
cmp
dec
cs
inc
sub
and
or
adc
sub
pop
push
jle
sahf
outsl
inc
jno
outsb
push
inc
insb
push
pop
dec
lock
push
pshufw
mov
and
in
ret
fcmovne
and
stos
inc
ja
cs
rol
daa
jo
push
cmp
xchg
loopne
repz
pop
jo
cmpsb
adc
mov
cltd
push
push
daa
enter
outsb
cmp
mov
adc
inc
in
and
shr
in
xor
mov
adc
nop
pop
dec
sbb
cmp
jb
jo
push
jne
sbbl
lock
mov
in
or
pop
fcoms
jne
insl
adc
ret
shrl
int3
jo
jno
sub
jo
or
sub
jo
roll
mov
insl
aad
inc
cmpsl
pop
out
jg
push
stos
jo
arpl
gs
mov
sbb
fcmovnb
and
ja
jbe
add
shlb
fstps
jo
mov
xchg
jp
in
or
jbe
lret
lret
js
int
jbe
cmp
jae
push
or
imull
aaa
clc
insb
mov
inc
pop
pop
cmc
xorb
std
adc
jo
add
mov
mov
xorb
dec
jg
pop
or
jno
lods
ja
inc
lahf
jns
adc
enter
test
out
jg
fwait
nop
jo
add
add
cmp
dec
jle
stc
dec
imul
xor
mov
repz
aaa
insl
out
cmpb
cmpsl
sub
and
lods
pop
add
add
imul
aam
jle
popa
mov
mov
or
lock
cltd
and
out
nop
and
cmp
mov
pop
xchg
das
clc
loopne
dec
push
sub
and
cwtl
jo
imul
mov
jle
test
out
push
lret
jae
push
sbb
popf
int3
dec
lcall
xchg
fcoms
cmp
inc
jp
sub
sti
lret
cwtl
daa
outsb
jns
ss
add
jno
xchg
flds
outsl
popa
cwtl
push
data16
dec
insb
pusha
lds
push
mull
jo
mov
repz
push
push
dec
aas
add
push
fstps
adc
test
inc
inc
orb
jle
dec
add
cmp
adc
mov
shlb
xor
mov
adc
pop
popf
or
inc
jmp
mov
outsb
xchg
jge
stc
iret
test
jne
xchg
pop
lcall
or
fchs
and
push
dec
mov
insb
lods
sub
shrb
sub
hlt
or
xchg
jbe
icebp
xor
shrl
xor
mov
icebp
and
jl
ficoms
sub
jns
es
mov
mov
testl
lods
sbb
sahf
stc
ret
mov
insb
sbb
ficoms
push
loope
aam
call
mov
outsb
sbb
and
icebp
cmp
loopne
jne
pop
inc
jne
sub
lock
mov
mov
push
cli
mov
sti
jmp
push
dec
mov
jbe
fidivrl
sub
and
mov
push
add
inc
pop
xchg
cmp
adc
stos
jle
mov
dec
lock
int3
xchg
push
push
aas
je
pop
clc
pop
loope
jecxz
jnp
scas
push
adc
adc
aas
nop
in
cmp
aam
or
movsb
cwtl
xor
outsb
mov
lds
into
jle
and
lds
sub
ficoms
jnp
xchg
lock
pop
cmp
shrb
clc
aam
cmc
es
cmp
testl
mov
ror
loop
xor
xlat
cwtl
add
stos
push
dec
in
sbbl
jp,pt
out
into
sbb
cli
xor
and
data16
lret
cwtl
cmp
shrl
jnp
and
xor
ret
iret
out
and
repnz
test
iret
mov
cmp
shrl
mov
cwtl
xchg
pop
inc
mov
and
ret
bound
inc
push
lock
push
js
test
and
testb
mov
jb
sbb
mov
xchg
pop
test
mov
out
das
jg
aam
dec
xor
xor
leave
pop
insb
int3
in
repnz
xchg
cmpsb
jno
mov
pop
fisubrs
add
xchg
jae
xchg
pop
mov
cwtl
aas
sbbl
jns
cmp
fs
fidivl
dec
pop
out
jbe
movb
mov
insl
jo
mov
cmp
pop
pop
add
das
push
into
mov
int
mov
xchg
sbb
cmp
sub
xlat
or
jge
jnp
jge
iret
cwtl
insb
std
push
inc
mov
cmp
xor
in
pusha
xchg
adcb
or
lcall
insb
nop
jmp
inc
push
mov
and
mov
xchg
das
movsl
shll
ret
cmpsb
je
pop
outsb
adc
clc
or
xor
xchg
push
cmp
lods
cwtl
push
rcrl
das
movsb
movsb
cwtl
lret
mov
call
out
sub
push
inc
or
out
push
fstpl
mov
push
test
mov
mov
inc
pusha
ret
popa
scas
sbb
insl
inc
mov
cwtl
push
insl
inc
fisttpl
xchg
cmc
sbb
ss
lds
scas
jmp
cs
adc
test
les
jne
xor
jns
lret
adc
xchg
fimull
cwtl
and
sub
lret
lret
sub
repz
pop
xchg
xchg
insb
adc
lret
add
mov
add
icebp
mov
scas
leave
mov
jnp
sbb
cwtl
and
mov
shl
into
xchg
xor
dec
push
fnsave
adc
push
xchg
jne
adc
hlt
cmp
je
xchg
pop
js
pop
inc
iret
fldt
shl
scas
scas
scas
dec
out
xor
loop
adc
sbb
pop
int
mov
cs
jo
jne
stc
out
adc
cmp
je
loopne
sbb
leave
jb
dec
das
jg
inc
out
dec
aaa
lds
ret
adc
arpl
and
adc
negl
mov
into
cwtl
and
xor
test
or
or
daa
fldt
dec
xlat
xchg
adc
dec
jae
loop
xchg
push
cmp
out
adc
popa
dec
and
cmp
out
jl
dec
xchg
call
andl
push
inc
jbe
inc
clc
das
popf
xchg
xchg
loopne
mov
fisttps
xor
fnsave
jle
jns
mov
pusha
mov
rcr
pop
divb
sbb
adc
sub
mov
jbe
fimuls
mov
lock
adc
mov
push
dec
dec
out
adc
and
stos
stc
jno
lahf
push
fidivrl
mov
push
jae
in
mov
iret
and
pop
pop
pop
push
fstpt
and
sbb
clc
fldenv
or
jo
bound
mov
insb
or
sbb
in
je
mov
pop
xchg
add
and
xor
lea
jo
cmp
pop
fmulp
dec
adc
fwait
cmp
mov
sub
mov
cmc
adc
mov
cmc
je
adc
jns
sub
lret
or
xor
mov
cwtl
ljmp
xor
shll
test
and
enter
in
outsb
sbb
add
rolb
jmp
cmp
push
mov
cwtl
cli
mov
outsb
xor
sub
jno
add
nop
sbb
cwtl
push
iret
bound
xchg
in
dec
fidivs
and
cmp
push
add
xchg
lahf
out
jne
pop
in
pop
xor
outsl
orb
xchg
add
cmp
jmp
in
fmul
mov
xchg
jb
and
push
loope
pop
clc
pop
popf
sbb
mov
fsts
cs
mov
sbb
loopne
xor
push
movntq
xchg
cpuid
scas
cmp
pusha
out
lds
mov
hlt
pop
pop
je
xchg
dec
jecxz
xor
icebp
hlt
lret
inc
pusha
sub
insl
dec
sub
or
sbb
test
pop
aam
movsl
insl
jne
add
sbb
ja
cld
jno
sbb
js
inc
outsb
cwtl
mov
xchg
mov
std
cmp
aam
mov
xchg
gs
dec
sbb
push
pop
push
mov
mov
push
orb
out
adc
call
sbb
mov
adc
cli
add
imul
mov
mov
xchg
and
cwtl
lcall
ror
cmp
mov
aam
and
ror
insb
jnp
xor
in
jecxz
call
cmp
xor
rolb
into
cmpsb
gs
fstps
mov
dec
adcl
or
lock
inc
popa
mov
dec
sbb
jmp
sbb
repnz
in
enter
fwait
inc
adc
sbb
lret
or
in
lea
jle
stc
xlat
out
loopne
lods
in
aad
movsb
mov
or
clc
jae
cwtl
add
in
lret
loop
xor
inc
aam
js
push
icebp
cmp
jo
je
jge
sahf
jnp
enter
inc
cmc
pop
or
pop
test
jbe
inc
out
mov
cmp
jp
loop
movsl
jbe
sub
in
jo
fdivl
cwtl
inc
cmp
cmp
xor
iret
sbb
xchg
pop
test
push
fidivrs
xlat
jp
cmp
add
in
push
loope
pop
test
jp
lods
ds
sbb
scas
lods
pop
or
sbb
cmp
xor
mov
repnz
mov
jbe
jecxz
lock
test
cmpsb
in
inc
mov
push
pop
xchg
cmp
js
insb
dec
inc
add
pop
loopne
cwtl
enter
int
jo
cli
cmp
inc
or
sbb
insb
in
fstpl
dec
push
mov
mov
jnp
jae
ss
lea
sbb
pop
rorl
push
inc
loop
pushl
jno
mov
sub
adc
loop
leave
xchg
loopne
mov
stos
cmp
sub
push
clc
and
mov
addb
pop
ds
outsb
sbb
mov
dec
das
mov
sub
lea
xor
insb
add
cmpsb
or
test
mov
inc
sub
jne
jno
adc
push
mov
lock
inc
out
test
mov
and
mov
lock
and
adcb
xor
xchg
pusha
ljmp
pop
movsb
rcrb
sub
xor
mov
bound
cs
test
shll
jo
stc
pop
mov
push
sub
xchg
shl
lock
pushf
jns
out
xlat
rcll
cli
cmp
and
lea
movsb
rol
lods
ja
stc
inc
jno
or
lret
push
gs
mov
xchg
rorl
fisttpll
adc
xor
mov
lahf
push
call
ljmp
fists
orl
aam
data16
xor
pop
sahf
jae
push
mov
hlt
lds
loop
lods
mov
cwtl
cld
adc
dec
rorb
cmp
adc
mov
pop
movd
aaa
pop
jl
sti
ljmp
xchg
xchg
jb
sbb
stc
js
ds
in
add
cmpsl
mov
je
aam
arpl
scas
lea
rep
ret
sti
mov
cmc
inc
pop
xorb
je
pushf
bound
jno
mov
cwtl
jne
mov
sti
xlat
scas
aam
push
into
push
gs
jmp
dec
mull
rep
mov
and
pop
popa
imul
pop
xchg
jnp
outsb
push
cmc
mov
xchg
cltd
dec
arpl
push
std
cmp
les
jno
jmp
lret
js
xchg
inc
sti
pusha
push
lret
imul
mov
cwtl
sarb
in
je
lret
loopne
mov
jae
xchg
mov
push
test
inc
shrl
dec
cwtl
push
dec
xchg
rolb
jns
lods
pop
mov
push
pop
hlt
adc
jne
mov
and
and
mov
fcomip
push
shrb
push
imul
std
xchg
adc
repz
inc
push
fistpl
inc
xchg
inc
cmp
xchg
shlb
jne
push
stos
push
or
shlb
cmp
outsl
mov
push
inc
adc
sbb
cwtl
insl
mov
dec
pop
outsb
dec
mov
xorl
sbb
push
incl
subl
jnp
les
or
mov
cmp
push
loopne
fdivr
push
pop
insb
outsb
or
push
sti
cld
adc
rorb
leave
sub
pop
in
jmp
dec
cmp
sub
notl
xchg
xchg
jo
mov
sbb
out
ficomps
sub
add
or
xor
out
leave
add
sbb
loopne
cmp
js
cwtl
ss
fadd
mov
cld
pop
jne
das
mov
add
mov
dec
les
loopne
cwtl
inc
sbb
popf
lcall
mov
out
test
inc
pushf
int3
sahf
popf
insl
cmpsl
mov
cmp
loope
clc
and
mov
push
mov
mov
mov
loope
xchg
sbb
and
xor
xor
leave
call
outsb
outsl
dec
mov
mov
addr16
lds
cwtl
dec
dec
jmp
daa
je
fdivs
add
pop
imul
rorb
call
setle
nop
lock
sbb
mov
fs
adc
ds
jo
stc
fs
mov
in
mov
rcr
shlb
jns
jnp
mov
xlat
dec
loopne
addr16
jg
fdivrs
xchg
cmpsl
fidivs
je
int
xchg
xchg
xlat
sbb
push
in
outsl
in
sbb
push
sub
repz
cs
in
jp
add
fwait
push
cmp
js
mov
adc
sbb
push
dec
mov
mov
mov
sbb
adc
imul
add
daa
shrl
rolb
mov
cs
ror
adc
aas
std
repz
mov
inc
or
fisttpl
cmpsl
ja
shrb
loopne
ret
mov
xchg
notb
xlat
mull
fldl
sub
add
push
call
js
hlt
cmp
mov
roll
push
fcompl
and
mov
mov
rorl
outsl
dec
pop
and
push
inc
mov
push
xchg
jo
adc
stos
repnz
scas
mov
adc
call
sub
repnz
mov
mov
lock
pop
jo
sbb
pop
lods
sbb
es
and
mov
cwtl
adc
sub
js
pop
mov
add
jo
ja
sti
sub
ret
or
push
add
call
lret
jne
mov
push
add
leave
inc
test
insl
gs
inc
mov
enter
test
je
and
jo
jecxz
mov
mov
pop
or
sbb
inc
fwait
inc
dec
or
jae
mov
and
imul
xchg
das
push
lcall
imul
out
inc
jp
lock
clc
sbb
xchg
or
jb
jo
xchg
enter
push
in
jo
cmpl
mov
adc
mov
jo
sub
mov
stc
dec
jo
stos
test
jo
icebp
jmp
and
and
sbb
cli
lahf
jo
dec
jg
inc
jl
jmp
fwait
jb
cmpsb
mul
cmp
adc
imul
xchg
lret
jecxz
mov
loop
je
and
add
or
xchg
shl
lock
jo
pushf
push
sub
mov
sub
jp
jo
ret
btc
jp
pop
push
push
inc
cmc
jo
mov
inc
test
sahf
cld
mov
in
mov
and
pop
mov
dec
push
mov
sbb
push
jl
push
and
lock
leave
jo
cltd
ficoms
icebp
out
jl
push
jo
sub
popa
jo
decb
fs
enter
gs
or
push
data16
jo
out
js
mov
sub
cltd
mov
cli
jo
inc
mov
xor
ja
jae
out
xchg
arpl
pop
mov
xor
jo
pop
mov
mov
push
ret
in
xchg
int3
rcrb
jbe
shll
jo
cmpsb
pusha
sub
pop
cmp
lods
lock
jmp
pop
push
loope
aas
cmpsl
popf
jo,pt
cli
imulb
enter
lea
pop
xchg
sub
inc
jecxz
push
inc
jo
rcrb
imul
orb
and
scas
sbb
in
jo
or
push
popf
xchg
or
mov
xor
jp
imul
cld
jno
test
negb
push
lret
or
sahf
lock
inc
shll
stc
mov
xlat
pop
repz
push
pop
jo
rclb
mov
imul
lock
xchg
pop
jo
jbe
sub
jo
lock
ljmp
mov
jns
addb
scas
dec
inc
xchg
lock
pushf
push
jl
enter
inc
lock
sbb
ds
inc
sub
xchg
in
dec
loopne
rol
lock
add
jl
sahf
jl
cwtl
inc
or
xchg
test
data16
xchg
daa
fcmovb
lods
xchg
mov
mov
xor
sub
dec
cmp
jo
mov
or
subl
insl
xchg
xor
push
xor
imul
jno
or
dec
and
sub
push
shlb
cmp
adc
push
fimull
sbb
sub
mov
std
mov
sub
outsl
or
dec
dec
cs
daa
pop
test
sahf
jge
jo
gs
ljmpw
and
dec
adc
xchg
jo
jne
fildl
xchg
mov
inc
lcall
jo
addr16
xchg
sub
in
pop
push
mov
jo
cmp
cmpsl
cmp
fnsave
and
fbstp
insb
call
cwtl
jo
lock
test
cld
jecxz
mov
pop
daa
jo
or
shll
scas
jmp
mov
jo
and
mov
jo
aad
push
xor
xor
in
xchg
inc
lods
dec
mov
jo
push
cmp
jecxz
in
adc
leave
pushl
cmp
pusha
fldl
popa
push
bound
scas
shlb
mov
shll
jo
sahf
and
sbb
sti
push
jecxz
loop
jo
fadds
push
mov
aam
jg
sbb
jo
inc
lds
loop
in
imul
add
cmp
enter
mov
data16
subb
movsl
xor
xor
sbb
dec
cld
jb
out
adc
and
or
or
xchg
divl
pop
push
dec
and
jle
popa
jo
and
test
arpl
repz
sub
loopne
mov
inc
stc
fwait
sbb
pop
mov
aaa
ret
push
pushf
gs
jmp
arpl
fs
lock
stos
add
test
hlt
hlt
sti
push
movsb
jo
pop
inc
mov
pop
and
cmp
je
repnz
add
mov
lock
jmp
jp
scas
lret
xchg
dec
mov
jae
arpl
aad
fwait
dec
fsubrs
jae
outsb
hlt
push
stos
pop
jp
push
mov
call
repz
into
add
dec
mov
dec
outsb
or
jmp
and
ss
mov
insl
xlat
cmp
mov
lock
mov
jo
xchg
out
push
in
pop
and
push
mov
jae
push
lahf
mov
jge
adc
mov
mov
add
lds
loopne
outsl
out
test
push
mov
jno
cmp
loope
cld
test
daa
jo
add
and
aas
jo
sub
mov
jo
cmp
shrl
jo
jae
fsubr
test
aad
push
or
xchg
dec
mov
mov
push
mov
jo
je
mov
imul
add
jo
notl
and
xchg
pop
ffreep
jnp
fisttpll
jecxz
fsubl
push
data16
out
subb
loope
pop
jle
fnsave
xchg
jp
scas
fcomps
in
jbe
test
mov
adc
scas
jge
enter
jo
add
jo
outsb
jmp
xor
adc
sub
and
ljmp
inc
roll
dec
push
jb
fwait
xor
adc
cs
mov
ljmp
jo
mulb
call
jnp
xlat
xchg
xor
shlb
cmp
js
or
push
je
popf
and
add
jo
int3
fidivrl
sub
jo
ret
test
mov
out
dec
jnp
inc
xor
push
adc
xor
jo
cs
fisttpl
lock
xchg
in
in
lock
popf
mov
mov
or
push
ljmp
mov
aad
rorl
mov
push
repz
fbld
bound
jl
push
dec
lods
dec
lock
add
inc
and
inc
popa
call
dec
xchg
movsb
subb
test
lock
int3
jmp
addr16
add
push
mov
push
insb
xchg
mov
cmp
div
iret
pop
ret
pop
lock
or
or
jg
and
shlb
cs
ret
xchg
pop
xlat
loopne
jp
lcall
mov
mov
outsb
add
cmpsb
jp
lcall
inc
or
outsl
jae
sub
jge
inc
add
dec
adc
loope
push
xor
arpl
ret
in
in
dec
dec
inc
mov
mov
jl
sbb
xchg
cmp
sbbb
jo
add
adc
sub
loope
xor
lods
mov
ss
fmuls
add
cs
and
adc
les
or
loope
lock
insb
xchg
aas
imul
xchg
jnp
push
daa
sub
roll
jecxz
leave
lods
push
mov
rcrl
pop
cwtl
stc
add
inc
xchg
aas
es
xor
cwtl
mov
js
or
xchg
jns
lea
mov
cmp
xlat
mov
mov
pop
add
loopne
sub
push
movsb
push
xchg
dec
lea
xor
cmp
outsl
scas
bound
or
loopne
je
stos
daa
aaa
cmp
sbb
dec
mov
jns
inc
jmp
loopne
stc
insb
addl
or
or
jae
movsb
call
lods
sub
sbb
push
lods
out
mov
sub
sub
clc
cld
das
xor
jl
and
push
xchg
pop
xorl
dec
out
mov
inc
pop
xchg
push
pop
cmp
lret
test
pushf
fstps
and
ss
es
sbbb
add
aas
sbb
jp
sub
mov
jbe
hlt
lret
loope
xchg
in
sbb
lcall
mov
adc
mov
les
je
fdivs
lahf
imul
jo
sbb
sub
xchg
sub
mov
pusha
in
outsb
sbb
add
clc
divb
adc
jmp
mov
shll
push
jl
sbb
add
daa
adc
cmp
aas
mov
jge
fisttpl
popa
cwtl
out
jp
push
sbb
pop
aas
ss
jb
in
push
sbb
andb
addr16
ret
or
jno
insb
fistpll
ja
and
js
or
dec
jp
xor
outsl
xor
iret
pushf
jecxz
jo
push
cwtl
mov
adc
jo
out
faddl
push
jns
jo
sbb
mov
dec
and
lock
pop
xchg
sub
or
aad
mov
inc
cmp
xor
das
loop
sbb
stos
jo
lsl
sub
jno
jo
lds
xchg
in
mov
jne
mov
out
lock
test
int3
fmull
fwait
jo
mov
dec
cmp
lods
jae
jmp
fbld
adc
inc
jnp
pop
jo
xor
inc
movsb
sbb
add
jnp
loopne
sbb
jo
in
in
loopne
jo
pushf
call
jo
sub
xor
add
cmp
test
jl
pop
adc
jo
scas
daa
jmp
and
sub
je
mov
jmp
ljmp
jle
or
je
pop
mov
idivb
mov
or
push
dec
inc
mov
xchg
push
ret
int3
lock
inc
xlat
aam
jbe
jo
xor
cmp
shlb
out
jecxz
sub
cltd
mov
or
aad
les
out
sbb
mov
mov
mov
lcall
jae
xchg
insl
adc
aad
test
in
nop
ss
push
mov
jo
enter
mov
xchg
imul
orb
negb
sub
sub
adc
jmp
mov
outsl
fnstenv
xor
pop
cmp
in
jo
jno
sub
outsb
hlt
jp
out
aas
xor
loopne
insl
xchg
jne
cmp
adc
adc
xor
jo
imul
and
xchg
add
stos
lahf
jle
aad
inc
ja
mov
pop
incl
mov
leave
jo
and
ljmp
int3
or
adc
sub
jnp
pop
lret
dec
in
inc
jo
jb
sub
jo
push
or
sbb
and
cld
gs
push
lcall
dec
not
jo
data16
push
mov
in
add
out
es
or
jo
mov
imul
lock
push
jo
aam
pushf
loop
and
inc
mov
mov
pop
pop
movsb
jo
cmpsl
push
add
dec
aaa
mov
imul
cmp
loop
and
fdivrl
jge,pt
clc
mov
sbb
jo
lret
icebp
inc
int3
inc
jae
insb
shlb
nop
fnsave
xor
or
ja
into
jae
mov
loopne
jnp
dec
or
jle
enter
ss
pop
mov
cwtl
leave
insl
aam
push
outsb
mov
movsb
mov
mov
add
in
shlb
push
aad
enter
jo
ficoml
dec
jae
sub
adc
in
jo
xchg
inc
or
mov
popf
in
adc
mov
loope
adc
xor
pop
ja
mov
pop
mov
jg
dec
scas
insl
and
inc
insl
and
push
pop
mov
mov
das
jo
cmp
or
xor
mov
jo
push
pop
cmp
lret
popa
mov
adc
loop
lods
inc
aaa
push
jo
add
jnp
pushl
mov
arpl
mov
dec
aas
jo
pop
or
jnp
scas
ljmp
jo
adc
inc
add
fildll
dec
shlb
and
xchg
lret
jo
adc
xchg
and
jo
mov
vpshufhw
cwtl
stc
mov
leave
jp
out
push
nop
xchg
xchg
fdivrl
test
daa
jo
bound
mov
jmp
sbb
jp
in
shll
dec
jne
fwait
test
inc
inc
xchg
aaa
call
jp
pusha
and
adc
mov
mov
jo
pop
arpl
data16
jo
cmp
xor
jo
jae
pusha
or
in
and
out
push
xor
test
jo
scas
test
outsl
sub
in
daa
mov
xor
rep
mov
in
aaa
fnstenv
jbe
push
cmp
xor
outsb
jo
add
lods
jo
int
mov
cmp
data16
adc
cmp
mov
inc
pop
jg
testb
mov
sbb
fs
iret
cli
and
mov
aaa
jo
and
negl
ficoml
dec
in
lret
jo
and
or
lfs
and
dec
push
inc
mov
sbb
xchg
jae
hlt
mov
cmpsb
stos
ja
sti
jns
sub
push
clc
jo
sub
cmp
add
jo
xlat
adc
and
inc
and
js
lods
ja
icebp
and
ja
test
push
or
mov
hlt
neg
loopne
jns
adc
arpl
mov
pop
sti
sbb
push
data16
in
loop
add
and
test
movsl
inc
jo
ss
packsswb
cmp
mov
add
mov
ficoml
mov
adc
sbb
sbb
mov
and
pop
lock
lcall
add
dec
jmp
test
sub
jbe
clc
pop
repnz
mov
jle
mov
xchg
adc
or
pop
cltd
mov
jne
mov
sbb
scas
adc
mov
testl
cmp
sbb
mov
lock
dec
pop
xchg
mov
push
cltd
int3
stos
add
jo
clc
js
mov
adc
pop
sti
rcrb
ss
shll
jae
stos
xchg
pop
xchg
xor
mov
andb
jle
jae
push
test
insl
data16
xor
outsl
xchg
fcoms
fisttpl
jo
daa
cmpxchg
cld
data16
int3
lahf
cmc
mov
icebp
push
aas
mov
ds
mov
lock
add
pushf
mov
lret
dec
out
xor
jo
jle
shlb
push
daa
sub
into
insl
xchg
mov
push
jp
cmp
jo
out
cmp
dec
xchg
dec
outsl
sub
call
inc
pop
ljmp
cmp
fucom
jo
jge
popa
jno
iret
leave
das
push
fwait
in
fildl
jns
test
lods
mov
jo
add
bound
ja
scas
pop
lods
pop
sbb
add
dec
lret
cmc
push
les
sbb
je
push
inc
sarl
add
cmpsb
pop
dec
or
mov
dec
test
cmp
jge
test
adc
jo
jmp
cltd
mov
sub
and
in
rolb
loop
lock
adc
std
jo
jb
imul
mov
jo
pop
lret
add
push
jae
cmp
movsb
je
jo
jge
lcall
xor
jae
imul
cld
int3
popa
lds
mov
adc
dec
nop
out
insb
jne
insl
xchg
jb
inc
dec
mov
sub
adc
je
aas
enter
cmp
data16
into
outsl
mov
test
lea
mov
xchg
push
enter
outsb
popa
pop
fisubrl
cld
nop
jns
inc
ja
or
and
xor
cld
mov
and
jo
insl
test
je
jo
mov
dec
or
xchg
adc
sub
int
lds
mov
xor
adc
inc
jo
push
push
push
jo
pop
pushf
xchg
clc
pop
das
sbb
mov
jmp
pop
insb
sbb
xlat
pop
push
adc
sarb
mov
or
imull
cmc
inc
sub
cltd
nop
movsb
jne
loopne
dec
push
shlb
mov
mov
lock
jl
mov
xor
stos
lret
faddl
adc
enter
sub
insl
shll
aad
pop
push
imul
xor
repz
jmp
cmp
das
out
bound
int
xchg
adc
mov
scas
mov
push
ret
xchg
inc
loopne
insb
adc
pop
xor
out
xor
clc
mov
pop
ret
out
mov
jo
jae
sub
lret
sub
pop
sub
in
shlb
mov
inc
mov
and
jo
or
enter
jo
or
adc
add
aaa
xor
aas
mov
lea
bound
jo
ret
or
jo
stos
xchg
adc
fdivs
dec
jle
jl
jo
cmpsl
or
sbb
int
scas
mov
out
ja
mov
push
ficompl
jo
mov
shrl
jmp
shll
test
int
jae
push
ret
add
mov
daa
aam
sub
mov
and
cli
mov
xlat
loop
lock
je
jo
adc
cmpsl
outsb
mov
mov
icebp
insb
jo
shll
mov
popa
jp
sub
rcl
xor
aas
pop
cmpsl
pop
subl
xor
inc
adc
loope
lds
adc
jne
in
imul
mov
adc
add
in
inc
pop
rcl
test
ja
aam
mov
add
jo
jb
cli
cmp
sub
ret
dec
push
or
add
jg
insb
cltd
inc
jo
xor
mov
mov
es
ja
cmp
lret
inc
push
xor
xor
xchg
mov
test
insb
sub
hlt
jl
xchg
sahf
push
jae
cmp
pop
jmp
push
xor
mov
xchg
jp
bound
fsubrl
stc
add
pop
xchg
mov
imul
das
sbb
mov
mov
pop
push
adc
fdivrs
xchg
shlb
add
data16
and
dec
jo
shlb
mov
xchg
fcoml
lods
adc
adc
bnd
dec
pop
push
jno
mov
std
push
jo
mov
mov
jo
bound
std
arpl
imul
add
add
in
aam
enter
sbb
xchg
mov
test
jbe
xchg
repz
pop
lods
mov
sub
pop
adc
ljmp
push
sbb
mov
pop
hlt
push
data16
bound
jo
push
or
jg
mov
sub
jo
loope
pop
cmpsl
cmp
jmp
mov
xor
jo
lahf
mov
std
xchg
mov
loop
sbb
div
pusha
jnp
ja
scas
jo
xor
pop
dec
insl
push
and
iret
mov
dec
pushf
adc
jo
mov
sbb
jp
xchg
mov
pop
dec
xor
mov
mov
xor
popa
mov
imul
jns
loop
mov
cmc
stc
in
adc
adc
push
pop
sbb
dec
inc
jae
enter
pop
jge
shrl
jo
std
cltd
aaa
and
lcall
or
jo
adc
jo
daa
dec
inc
xchg
ja
scas
jo
jbe
les
and
fildl
xchg
sub
outsb
mov
pop
pop
sarb
stc
jnp
xchg
lret
add
insl
cmp
or
mov
cmp
pop
xchg
xor
and
mov
sbb
add
sbb
scas
jo
loopne
cmp
fcomip
inc
adc
mov
dec
adc
dec
repz
nop
mov
lret
pop
call
cmpsb
mov
xor
jo
repnz
orl
cmpsb
cmp
ljmp
or
sahf
xchg
inc
stos
or
cmpsb
cmp
daa
adc
fcoml
mov
mov
in
mov
push
imul
cmp
jo
xlat
and
popa
prefetcht1
xchg
dec
or
dec
dec
jae
pop
jno
or
ja
mov
dec
lea
sbb
push
mov
cmp
jnp
scas
jo,pn
mov
adcb
jo
xchg
shll
into
sbb
or
push
outsl
dec
scas
sbb
adc
mov
inc
jae
ss
mov
push
mov
mov
rorl
jle
jne
or
jae
ret
mov
cmp
shll
lock
xchg
repnz
or
push
inc
xchg
inc
ss
and
mov
cwtl
jb
xlat
mov
mov
mov
jo
inc
call
fldcw
popf
push
mov
dec
rcr
iret
cmpsl
in
sbb
cmp
mov
push
xchg
inc
sub
cwtl
mov
outsb
or
idivl
fwait
repnz
dec
insl
call
cwtl
into
in
jnp
and
xor
imul
dec
and
lret
sub
test
testl
sti
bound
xchg
dec
sbb
jbe
fld
es
enter
jno
xchg
lret
mov
inc
mov
push
shrl
xor
cmc
in
sbb
aam
insl
je
add
js
les
in
jae
andl
mov
pusha
jl
adc
and
adc
loopne
lea
and
std
stos
rorl
pop
and
lahf
mov
cmc
xor
lret
mov
jge
pushf
xchg
subl
add
jmp
xchg
jp
lds
in
inc
fwait
xor
and
enter
gs
movsb
push
paddsw
dec
and
lock
stc
push
xorl
dec
dec
cwtl
dec
sub
in
jle
xor
push
jns
or
cmp
xor
rep
cs
adc
xchg
lock
fisubs
into
in
sub
leave
and
jg
cmc
mov
mov
aad
lret
cmp
fmuls
jl
sarl
loopne
jmp
stos
adc
out
lret
push
push
push
adc
in
outsb
jno
cwtl
add
add
pushf
fisubrs
xchg
pop
jb
ds
push
sti
hlt
cmp
mov
enter
loope
mov
cwtl
sub
in
cwtl
add
movsl
cmc
in
sti
ret
push
jbe
push
add
add
cwtl
in
mulb
sti
inc
jge
jne
adc
cmp
adc
lock
sub
enter
out
sub
xor
ret
cmpb
repnz
loopne
iret
mov
add
fdivrl
pusha
lods
test
repz
in
divl
outsb
push
xor
xor
loopne
aas
mov
lods
inc
inc
mov
or
shl
jo
sbb
out
jnp
pop
dec
jmp
cwtl
xlat
push
or
je
pop
ror
std
cmp
and
insb
ljmp
xor
inc
cmpl
cmp
lods
push
adc
cli
adc
dec
lahf
ret
sub
sti
idivb
inc
repnz
subl
sub
int3
pop
stos
fiadds
mov
ret
scas
sbb
fdivr
insb
les
xchg
cld
imul
sbb
xor
pop
dec
or
xchg
mov
push
ficoml
lcall
aas
mov
out
idiv
cld
out
shll
outsb
push
js
das
outsl
xchg
in
cmp
aaa
icebp
jl
out
push
fnstenv
mov
jbe
pop
jmp
jge
test
add
mov
mov
sbb
mov
and
xlat
cmp
mov
aas
hlt
push
xchg
adc
je
jnp
jnp
outsl
fsubl
jo
push
hlt
sub
sahf
iret
dec
arpl
out
xor
ja
cld
gs
sbb
push
sbbl
mov
jnp
lret
add
je
push
aam
sub
loopne
test
push
scas
push
mov
adc
xor
jge
leave
mov
scas
cwtl
scas
mov
xchg
mov
push
jno
test
pop
or
mov
arpl
and
xchg
jle
mov
mov
dec
cli
jg
sahf
daa
enter
add
stc
clc
sbb
cwtl
fiaddl
arpl
and
outsb
push
es
test
out
cwtl
mov
movsb
cmp
jmp
push
outsb
hlt
sub
mov
test
lret
cmp
sti
mov
mov
into
les
fwait
repz
sub
jg
pop
sbb
andb
insl
inc
add
and
push
mov
pop
jne
jg
jmp
dec
bound
dec
pop
hlt
xabort
xchg
jbe
cmp
nop
inc
mov
cld
xchg
out
jae
sti
scas
mov
fstpt
sub
pusha
inc
push
mov
test
test
sub
and
clc
push
popf
pop
xchg
fsub
xor
sbb
mull
sahf
dec
xlat
cwtl
push
insl
sar
ja
stc
fs
movsb
arpl
out
pop
mov
cmpsl
bound
clc
cmpsb
pop
fs
xor
cld
repz
or
outsl
out
mov
pop
je
mov
xchg
scas
push
xchg
sbb
xchg
ds
lods
adc
fcomi
subl
in
xlat
add
push
insl
dec
stc
xor
gs
jle
inc
sub
mov
xchg
push
pop
cld
sub
xor
stos
ss
jmp
sarl
js
add
mov
daa
cltd
ss
jo
mov
push
jo
cmp
pop
jo
push
pushf
rcrl
adc
jo
jb
fsubrs
leave
pop
mov
scas
jo
mov
mov
add
lock
xor
ret
add
pop
jo
lahf
mov
imul
sub
out
cmpsb
dec
adc
jecxz
sahf
pushl
inc
push
mov
fiadds
gs
ret
nop
popa
movsb
frndint
inc
add
jo
mov
data16
xchg
rolb
cltd
pop
addr16
stos
inc
or
push
mov
mov
cmp
mov
and
iret
test
lds
xchg
add
dec
xor
and
jo
mov
daa
cmpsb
dec
movsb
dec
jo
into
or
rcr
stos
or
notl
and
push
dec
cmp
jo
cmc
or
pop
sarb
jne
xchg
into
jo
nop
sub
push
test
fsubrl
fs
pop
iret
inc
mov
mov
xchg
cmp
cmp
pop
jge
mov
je
mov
fdivr
mov
inc
mov
and
xchg
mov
sub
movsl
inc
inc
imul
jnp
sbb
cmp
xchg
xchg
push
push
pusha
nop
mov
or
and
add
aad
nop
ds
daa
jo
fdecstp
sub
and
or
leave
inc
in
push
cltd
cwtl
pusha
jo
dec
outsb
push
push
mov
pop
jno
ffreep
imul
jne
shl
fildl
popf
or
mov
sbb
jo
lods
fcompl
jo
fs
or
inc
and
push
imul
lcall
adc
in
mov
jo
inc
dec
fwait
outsb
shll
loope
push
sbb
mull
dec
mov
sub
cli
mov
ja
xor
jae
jo
add
pop
cmp
mov
test
adc
movsl
sub
sbb
jo
mov
ror
push
scas
mov
cmp
inc
ja
enter
jo
ja
loop
mov
mov
shll
pop
int
test
lret
in
test
enter
dec
sub
jo
in
hlt
lock
daa
pop
xor
pushf
jo
iret
fwait
cld
pop
sub
pop
rolb
rcll
sub
cmp
jo
cmc
push
mov
jo
and
aas
push
std
cwtl
inc
jo
leave
xchg
jo
mov
mov
push
or
lock
jnp
loopne
lock
scas
es
rcrb
cld
mov
adc
sub
fcoms
or
dec
jns
lock
shl
xor
mov
sub
mov
outsb
loop
push
jle
jns
fbld
lock
outsb
lea
addb
jae
lock
mov
xlat
inc
mov
stc
pusha
jecxz
into
xor
ror
std
inc
orb
or
cmp
imul
sub
mov
push
cmp
jl
lret
or
push
stos
mov
rcl
ja
std
sti
cwtl
fidivl
rorb
leave
je
out
mov
aad
jo
cli
xlat
cmc
sub
fdivs
or
add
push
push
imul
adc
mov
sbb
push
enter
mov
xor
std
fsubs
dec
jns
jo
fstpt
xor
jmp
pop
inc
enter
xchg
ret
or
mov
push
pop
mov
fnstenv
fstpl
loope
pusha
lcall
out
xchg
jo
and
push
test
xlat
jo
ret
push
and
dec
jbe
popa
sub
inc
test
lods
ja
mov
loopne
fisttpll
xor
ja
sahf
lahf
fsts
popf
dec
dec
jno
jp
jns
shlb
insb
cs
mov
arpl
add
into
cmp
out
jmp
fmul
jo
mov
test
lods
pop
dec
clc
sbb
mov
insb
or
lock
inc
aam
push
jo
mov
mov
xor
sbb
jp
or
insl
cli
xchg
stc
daa
arpl
adc
cltd
fistl
and
jo
out
sub
cmpsb
dec
xor
cvtps2pi
lock
mov
jo
inc
loopne
sbb
jp
pop
xchg
rcrb
mov
inc
xor
jo
lods
das
jle
cltd
jno
jo
cmp
pop
adc
in
jo
xlat
ss
pop
inc
shl
pushf
jo
sbb
dec
fadds
daa
jo
cmpsb
cltd
and
enter
movl
hlt
xor
jo
inc
cli
shl
jns
xchg
jae
pop
jle
inc
jnp
out
xchg
xorb
pop
iret
pop
inc
sbb
inc
add
stos
cmp
jo
ja
ljmp
jo
inc
aas
xchg
cmp
cmp
or
rcl
insb
pop
in
mov
sub
icebp
incl
or
jnp
sub
fcom
dec
inc
dec
ds
lock
int3
pop
add
xor
push
pop
out
das
lret
jge
push
adc
imul
mov
push
xchg
lods
adc
lret
jae
pop
mov
nop
out
cltd
in
cmp
jge
pop
jo
test
mov
or
jae
mov
lock
jo
mov
adc
jbe
xchg
movntq
xchg
and
outsl
cmp
cmp
and
jp
pop
adc
push
mov
jb
imul
aas
cmc
jnp
pop
mov
popf
mov
iret
or
in
or
pop
dec
dec
lret
jp
pop
enter
pushf
enter
jne
cwtl
xchg
jo
add
movsl
jecxz
and
jo
aad
sub
dec
jo
mov
push
cmp
iret
add
jae
aas
leave
inc
mov
mov
call
in
imul
stos
inc
outsl
mov
xchg
shlb
push
daa
jo
sti
nop
and
ja
sbb
mov
inc
dec
cmc
and
pop
sub
fwait
in
dec
outsb
jecxz
jp
cli
pop
pop
jno
mov
sub
add
stos
insl
jle
and
nop
sbb
jo
xchg
loopne
sub
xchg
cwtl
xchg
inc
or
push
cli
sbb
jo
insl
adc
jne
xor
in
jo
cli
cmp
dec
dec
repnz
push
lea
push
cmpsl
jo
lods
imul
pop
lret
add
jae
xchg
mov
ret
lahf
pop
cmc
jo
es
out
imul
jo
ror
lods
ja
mov
xchg
mov
or
jo
mov
das
adc
test
ffree
mov
and
inc
mov
setl
push
rclb
sahf
or
data16
dec
cs
test
jo
imul
jnp
bound
jno
mov
das
mov
push
mov
jo
jl
lret
test
jo
dec
cmp
in
movsb
jo
push
add
clc
xor
cmp
and
ja
pop
adc
mov
and
jo
push
mov
in
jo
rolb
ror
subb
lds
mov
enter
sub
mov
pop
inc
out
jp
loopne
cmp
cmp
pop
fidivrs
jecxz
outsb
cs
les
sbb
inc
cmpsl
mov
pop
cmp
push
mov
jo
mov
in
das
mov
repz
mov
mov
jo
cwtl
add
cmpsb
pop
inc
in
xor
stc
sub
imul
push
jo
subb
sbb
insl
clc
dec
cmpsl
insb
cmpsb
dec
repz
add
outsl
mov
dec
and
sbbl
and
push
fcom
je
es
test
mov
inc
mov
jo
aam
int
into
xchg
jp
adc
push
gs
push
adc
psadbw
mov
xor
sub
or
les
push
dec
loopne,pn
ja
into
jne
xor
or
hlt
inc
adc
mov
adcl
jo
adcl
std
out
or
jo
xor
adc
stc
pop
mov
lahf
dec
mov
out
lods
xor
aaa
fildll
lret
xlat
adc
cltd
lock
and
mov
pop
xor
fdivrp
mov
sbb
adc
jecxz
jno
jmp
orl
push
jo
mov
and
jl
lcall
inc
das
lods
out
xchg
xchg
push
or
jnp
adc
xor
mov
jo
add
hlt
movsl
adc
jo
push
mov
lods
mov
xchg
pop
cmpsb
jno
es
sub
mov
mov
add
mov
xchg
inc
jb
jns
mov
shll
aam
aad
and
shll
xchg
adc
pop
push
imul
jo
mov
jnp,pt
mov
insl
push
std
push
sub
mov
add
jmp
add
dec
pop
ja
xor
repnz
jnp
pop
das
sahf
jae
jecxz
lock
outsb
outsb
fsubrs
inc
out
in
cmp
xchg
es
jo
das
icebp
dec
fcomps
mov
hlt
jnp
sub
sbb
pop
shlb
adc
pusha
lcall
test
xchg
js
push
xchg
sub
fs
mov
negl
jmp
clc
xchg
loope
push
adc
cwtl
popl
pusha
sbb
sti
cmc
mov
imul
inc
jae
mov
scas
pop
lahf
stos
sbb
int3
scas
fs
jo
sahf
stc
loopne
xor
mov
fs
xor
outsl
xchg
pop
push
pop
xchg
lret
pop
fcomps
pop
call
daa
scas
xchg
inc
mov
pshufw
lret
insb
mov
xor
adc
lods
lock
jnp
daa
jge
add
xor
inc
pusha
xchg
and
jnp
dec
sub
shrb
cwtl
les
jae
cwtl
mov
xor
and
ja
nop
clc
rorb
mov
push
sub
mov
inc
mov
les
insl
add
jle
jnp
cwtl
pop
pop
mov
xchg
push
inc
push
mov
jne
or
mov
cwtl
jmp
cs
inc
mov
out
pushf
testl
lea
mov
popa
sbb
fwait
jge
inc
mov
pop
pop
fadd
loop
inc
jae
inc
loope
mov
and
cmp
stc
sarl
sbb
popa
shll
jle
lods
xchg
jp
imul
imul
pop
loop
shll
stc
clc
ja
push
shlb
mov
push
and
xchg
mov
iret
loopne
cmp
xchg
adc
hlt
adc
pop
mov
xchg
loope
cmp
clc
enter
in
pop
adc
mov
inc
mov
push
inc
hlt
daa
test
loop
leave
mov
lret
inc
mov
imul
cwtl
push
loope
jl
int
inc
jno
pop
cmc
andl
jmp
sti
sub
xchg
sbb
jbe
jne
or
and
push
mov
pop
inc
cwtl
mov
jl
mov
xchg
jae
cwtl
nop
ljmp
jge
sub
cmp
push
jmp
pop
insb
adc
cmpl
pop
dec
fisubrs
fmull
stc
mov
sub
mov
lret
push
jg
mov
sbb
adc
pop
negl
les
out
test
in
jmp
xor
es
mov
dec
jl
inc
jbe
stc
ljmp
or
sub
es
or
or
push
in
sahf
mov
xchg
cwtl
push
rcrb
pop
jecxz
lret
pop
lods
outsl
fs
push
mov
xchg
jne
in
mov
cmp
in
movsb
mov
push
jb
sub
xchg
or
sbb
push
sub
xor
add
fstl
je
clc
lods
icebp
sbb
rorl
sub
adc
jle
movsb
pop
loope
loopne
jae
xor
and
xchg
fwait
iret
xchg
pushf
ret
mov
pop
sbb
sbb
gs
in
adc
jp
adc
out
and
stc
loope
lods
and
fidivs
pop
fs
mov
push
lahf
push
cwtl
inc
push
mov
push
out
push
or
push
cwtl
test
sbb
jne
sahf
addb
adcl
addr16
xor
repz
push
mov
sub
inc
xchg
scas
mov
mov
adc
popa
add
or
outsb
sbb
enter
push
into
mov
sbb
push
mov
sub
sub
int
mov
cmp
sub
xchg
mov
lcall
pop
lcall
mov
clc
cmc
out
jae
jne
lds
jl
xlat
sub
jae
movsb
bound
dec
iret
xor
add
inc
push
fnstenv
cmpsl
arpl
test
mov
or
sub
imul
int
inc
push
ficomps
push
and
push
in
frstor
daa
ficoms
fdivrs
cwtl
or
push
xor
pop
mov
xor
rolb
cmp
pop
shrb
std
fs
sub
jge
xchg
in
xchg
aam
aas
int3
insl
addb
lods
adc
adc
xchg
rclb
das
jo
push
lcall
pop
adc
and
jo
or
jle
jo
lcall
jae
sub
aaa
aas
mov
icebp
notb
adc
fnsave
faddl
mov
push
das
lock
sub
mov
push
pop
lret
cli
fisttpll
xor
popa
cs
repz
mov
inc
ljmp
xchg
or
in
jo
mov
mov
jo
xchg
mov
roll
xchg
jo
aaa
es
lahf
cmp
pop
sbbl
inc
cmp
jp
jo
push
or
cmp
jo
sbb
int
ss
movsb
mov
lcall
out
pop
outsb
imul
adc
jo
mov
ja
push
push
into
insl
fnsave
adc
test
mov
dec
pop
movsl
inc
loopne
insl
shlb
add
in
iret
push
test
add
pop
outsb
ret
ficompl
insl
mov
dec
sti
mov
sub
scas
mov
lcall
jmp
cmp
or
mov
popf
ret
push
cwtl
outsl
rcrb
insl
mov
jo
adc
addl
test
mov
cmp
lahf
lds
leave
fwait
cmp
pop
mov
out
mov
jp
stc
sub
rcl
rcrl
out
jo
ljmp
ja
pushf
sbb
stc
lock
mov
arpl
push
push
cld
outsb
xor
inc
and
and
sahf
xorl
sub
aad
jecxz
push
add
addl
divl
decl
insl
les
xchg
mov
cmp
pop
push
lods
or
loopne
mov
mov
mov
jo
adc
adcb
sub
mov
push
xchg
call
icebp
mov
ret
inc
add
dec
sbb
fildl
jo
mov
or
mov
mov
and
cmpsb
insb
fs
xchg
jo
jecxz
pop
out
xchg
inc
push
jo
lea
add
jae
sahf
or
enter
add
sub
inc
jb
out
int3
adc
or
push
and
ds
and
aam
add
loopne
xchg
and
je
sbb
dec
rcrb
cmpsl
mov
cs
cmp
jp
call
mov
lret
sub
insl
fidivrl
sbb
mov
mov
jnp
xchg
inc
test
cmp
sbb
mov
and
stos
ss
jo
jns
mov
pop
dec
shlb
push
dec
aad
sub
lock
and
push
cs
iret
ja
int3
dec
cmpsl
out
nop
outsb
jmp
ja
add
adc
insl
pop
popa
jo
sbb
mov
scas
sahf
rol
shr
ja
push
push
addr16
mov
lock
rcrb
jo
sub
jl
pop
stc
leave
imul
cmpsl
or
insb
xchg
aaa
icebp
pop
lea
ja
adc
fwait
shll
mov
aam
cwtl
js
jecxz
and
cmp
int3
add
sub
adc
jo
iret
insl
js
xchg
mov
jo
cmp
mov
jo
stos
movsl
sub
mov
sbb
gs
adc
fldl
push
lds
stos
pop
lea
fistps
shl
ja
dec
movsb
dec
or
or
test
pop
lods
jo
mov
mov
mov
popa
jo
push
jl
repnz
rorb
adc
lods
cmpsl
pop
arpl
nop
mov
jo
fcoms
jg
fbstp
pushf
mov
dec
jae
ret
sbb
mov
lea
mov
cmp
repz
jo
add
push
xchg
jo
sbb
push
andb
data16
pop
xor
shlb
jle
dec
mov
jo
pop
mov
add
jno
outsb
aad
les
jge
test
mov
sbb
and
pop
es
sub
pop
jo
loope
and
lret
sbb
insl
rorl
std
dec
mov
adc
push
adc
and
jo
adc
jo
xor
sub
push
xchg
pop
jo
push
out
nop
or
popa
jo
aad
jecxz
xor
and
call
jo
into
sti
hlt
mov
push
testb
add
push
in
insb
xor
or
jo
ja
repnz
pop
sbb
testl
or
popf
test
inc
inc
aam
jno
mov
decl
xor
jo
mov
pusha
ja
mov
loopne
stos
aam
sub
jo
hlt
jb
sub
fisttpll
xchg
sub
xor
sarb
jo
dec
in
bound
sti
jo
mov
lods
pusha
jp
imul
jb
jo
cmpsb
adc
aaa
inc
filds
fisttpl
stc
mov
mov
pop
add
inc
faddp
dec
dec
xor
shll
and
jae
and
xchg
adc
and
adc
bound
xchg
data16
movd
mov
cmp
dec
adc
jo
inc
imul
jmp
adc
jo
movsb
fisttpll
andb
cmp
jo
mov
push
dec
repz
dec
psubusb
push
jo
ret
lret
sbb
jo
test
addr16
jo
jbe
je
cli
sbb
pop
in
rcll
mov
mov
adc
add
xchg
shlb
sub
mov
jae
mov
mov
push
jl
aas
ret
into
sbb
or
xor
lock
pop
test
decb
mov
imul
adc
popf
pop
and
pop
scas
loope
push
jp
or
jo
mov
add
jo
cmp
push
add
dec
arpl
cmp
insb
xlat
fbstp
pop
into
push
stos
lea
pushf
add
pop
sbb
jecxz
mov
cmp
lock
dec
mov
jle
mulb
jo
jg
fistps
xor
lock
push
sub
mov
inc
dec
out
ss
cwtl
icebp
xor
mov
fsubs
ret
xor
sti
jge
dec
jo
sbb
lcall
add
sbb
jmp
inc
jo
adc
cmpsl
pushf
pusha
jmp
pop
inc
imul
pop
sarb
fiadds
jo
mov
push
xchg
jns
lock
xor
stc
inc
rol
sbb
xchg
inc
xor
jo
dec
jg
test
sbb
or
push
in
pop
cmp
dec
sub
add
jo,pn
push
fcoml
shlb
jo
jnp
xchg
iret
adc
enter
cmp
in
jo
shrb
jp
icebp
lcall
dec
xchg
in
jo
out
call
jo
ljmp
jo
and
rep
dec
inc
pop
lock
loope
movsb
cli
dec
push
jo
ds
out
xchg
push
dec
fadd
hlt
add
jo
push
mov
roll
xchg
dec
mov
adc
jo
pop
lcall
loop
jge
mov
xor
sub
cwtl
mov
cmp
xchg
int
jo
or
jae
push
test
ja
inc
pop
cmp
out
jo
in
xchg
push
dec
jo
outsl
jno
arpl
cmp
movb
mov
jo
fwait
add
pcmpgtd
push
popa
scas
jo
mov
popf
pushf
or
shlb
ja
stos
ret
loope
ja
inc
lahf
call
lcall
mov
push
fstpl
sbb
sbb
cld
add
ror
fs
xor
jnp
add
dec
pop
or
insb
pop
mov
out
leave
std
in
xchg
sbb
sahf
xor
push
inc
xor
lock
outsl
cwtl
lock
hlt
cmp
pop
dec
adc
imul
jnp
jne
or
sti
fnstcw
fdivrl
test
sub
insl
loopne
in
xchg
pop
pop
mov
jnp
jne
psubq
mov
pop
dec
repz
loopne
and
inc
test
imul
cmp
mov
mov
loopne
into
lods
push
test
sahf
cwtl
sub
lods
add
lock
pop
aam
shll
push
test
fsubl
or
sbb
idivb
stc
cmpsb
cbtw
cmpsl
pop
adc
xor
test
cmp
in
leave
pop
divl
insb
jg
imul
and
push
lahf
cmp
pop
or
pusha
sbb
inc
cwtl
sub
mov
push
shl
pop
jl
hlt
pop
cmp
sbb
cwtl
outsb
je
loope
daa
xor
nop
xchg
mov
dec
jnp
enter
push
pop
popa
push
fnsave
mov
xchg
jl
jno
sbb
lret
repnz
cmpl
loope
testb
insl
and
ret
sub
idivb
int3
xchg
lret
pop
dec
call
sti
loopne
stos
adc
lock
jnp
jb
in
jge
in
xor
adc
divl
sub
fucomp
lock
ret
stc
fidivrs
mov
loopne
loope
test
mov
into
jo
or
addr16
xchg
lods
les
adc
je
jge
xchg
outsb
sbb
loopne
push
ljmp
stos
adc
sti
sub
das
enter
aas
leave
test
push
in
iret
sbb
outsb
negb
mov
iret
cmp
mov
xchg
mov
mov
loopne
push
loope
inc
jbe
push
test
inc
inc
in
aad
jl
into
mov
test
dec
cmp
cld
les
pop
enter
pop
dec
mov
aad
mov
clc
leave
clc
sub
or
xor
repnz
out
xor
insb
scas
lock
cwtl
sub
scas
add
dec
jecxz
mov
leave
loopne
mov
aas
push
xchg
in
mov
sub
imul
enter
loop
sahf
cld
jle
sbbb
test
sbb
xchg
fidivrs
lret
adc
push
data16
jno
xchg
mov
shll
jl
or
lds
xorb
inc
mov
and
pop
stos
ja
push
fwait
add
add
jmp
adc
orl
cmp
aas
icebp
push
in
outsb
and
inc
pusha
mov
push
mov
jae
jns
xchg
jb
jnp
sub
push
mov
clc
stc
mov
jge
fs
aas
movsl
loopne
cld
and
jno
lods
push
fbld
lcall
sti
orb
arpl
sbb
jne
adc
or
jbe
adc
mov
sub
dec
mov
add
out
aaa
sub
mov
or
test
jge
jne
clc
mov
dec
xchg
loopne
sub
or
in
jge
mov
cmpb
or
sbb
cmpsl
lock
test
sub
xchg
mov
subb
add
aaa
pop
rcll
xor
out
leave
sub
mov
jno
jmp
lods
fsubrl
rorb
pop
xchg
nop
and
mov
addr16
xor
popa
cwtl
push
aas
jmp
xor
sub
sub
xor
xor
mov
nop
addl
push
movsl
ret
cmp
jp
xor
xor
negl
jno
push
pop
loopne
loopne
mov
sub
shr
pop
in
gs
movl
pop
xorl
mov
cwtl
iret
xchg
xor
popa
and
pop
mov
sub
fmull
sub
cltd
mov
test
imul
cmp
inc
push
push
mov
sbb
mov
push
outsl
pop
leave
je
cmp
dec
iret
jl
sub
lds
test
outsb
push
cs
push
jo
test
fidivrs
loope
arpl
inc
lret
pop
add
jne
mov
jo
adcb
jo
hlt
lods
cs
cmc
sbb
mov
mov
and
jge
jb
or
xor
push
sbb
jo
lea
cmp
out
and
iret
fistpl
out
in
xorb
popa
push
pop
in
sub
jo
inc
outsl
mov
jo
sub
adc
jno
test
xor
es
shlb
add
ret
les
sub
nop
cmp
mov
jecxz
fnstenv
add
je
pop
lods
pop
dec
mov
pop
push
outsb
test
popf
xor
jo
aad
shl
adc
pop
fimull
inc
jo
inc
mov
addb
lock
iret
in
mov
int3
in
fs
dec
jne
repnz
shll
pushf
or
push
pop
push
orb
jae
mov
call
data16
pop
inc
pushf
sub
jbe
push
addr16
imul
jle
fs
cmpsb
aam
push
iret
jge,pt
clc
or
popa
fidivs
int
mov
jo
xchg
shll
mov
jno
jo
in
push
add
lods
aad
sub
cmpsl
mov
cltd
and
cli
rorl
subb
dec
push
clc
mov
and
jno
insb
mov
ljmp
pusha
pop
inc
dec
cli
lds
sub
adc
cmp
jge
inc
dec
movsb
jae
mov
mov
mov
jo
add
cmp
jo
jp
push
jmp
pop
jo
mov
std
push
jge
xchg
mov
mov
mov
and
rorb
pop
lods
stos
test
lds
jo,pn
and
roll
dec
in
cmp
or
add
das
mov
nop
imul
sbb
pop
in
inc
cmpsl
out
loope
dec
add
fists
icebp
out
jb
jl
mov
test
jne
clc
outsl
jecxz
jae
mov
xchg
xchg
adc
gs
imul
jo
mov
ja
or
jb
ds
mov
inc
divb
into
int3
gs
ret
jns
dec
arpl
fs
jo
aas
jmp
add
lock
aaa
xchg
and
or
cwtl
cmp
cmp
xchg
mov
mov
mov
mov
add
jo
je
rol
adc
insb
xor
arpl
mov
js
xor
add
loopne
test
mov
pop
dec
push
in
scas
inc
ljmp
cmp
jno
movsl
in
cwtl
bound
hlt
sahf
xor
dec
fucomp
outsb
aas
mov
outsl
stc
push
adc
push
push
mov
sbb
lret
mov
fwait
push
inc
jns
scas
leave
or
mov
xchg
cmovp
jo
sub
pushf
shl
repnz
insl
adc
ss
mov
jo
scas
int
imul
loop
xchg
xchg
push
jo
out
aad
outsb
pop
ja
ss
xchg
xor
jecxz
ja
push
lock
mov
and
int
fbstp
jo
add
and
jo
dec
lret
lea
insl
sbb
add
push
jo
sub
in
test
dec
xorl
xor
and
sub
ljmp
rcrb
mulb
mov
jo
jmp
add
sub
idiv
imul
inc
movsb
outsb
xchg
fdivrs
push
enter
shlb
ret
dec
insl
xchg
add
jo
lcall
jo
adc
cmp
push
fldt
jo
mov
or
mov
jne
enter
out
jnp
scas
pop
and
ds
mov
mov
and
mov
ss
das
jg
sub
cmp
xchg
or
sub
and
adc
jmp
insl
cld
mov
xchg
push
jne
pop
scas
daa
cmp
popf
repz
or
push
push
jo
fisubs
push
fnstsw
rorl
fcmovnbe
jecxz
sahf
adc
mov
out
testb
lret
bound
sub
test
push
add
inc
inc
test
push
insb
cmc
dec
test
movsb
pop
xchg
mov
lea
lret
jo
ja
dec
sahf
or
push
jo
dec
pop
sub
insl
cli
mov
pop
push
pushf
cld
fcoms
cmp
out
test
or
jo
int3
arpl
clc
and
insb
nop
lock
cmpl
sahf
lret
sbb
mov
xor
jo
cli
jg
gs
jae
orb
rcrb
xchg
cs
xor
dec
scas
xchg
fcmovnbe
daa
lock
jo
mov
testl
pop
or
iret
orb
dec
xlat
out
mov
inc
and
xor
jo
insl
sub
push
jge
pop
insl
dec
lret
daa
xchg
out
cli
jmp
ljmp
test
and
jo
fidivl
sahf
ret
push
sbb
stos
cmc
and
shrb
jo
les
jo
roll
fcoms
jae
and
icebp
call
leave
xchg
dec
lret
lock
lods
xchg
jns
pushf
sub
popf
insl
and
movsb
or
push
xor
aas
in
stos
mov
aaa
in
hlt
add
ja
sbb
xor
pusha
cs
cli
jecxz
sarl
mov
sub
add
inc
push
add
mov
xlat
push
xor
mov
push
add
in
xor
inc
add
jo
and
mov
xchg
inc
jo
cltd
dec
xor
mov
divl
lcall
xchg
sbb
adc
pushf
test
addr16
mov
out
sbb
xor
loope
out
pop
into
push
lock
adc
jo
xchg
sbb
dec
jo
xchg
jmp
add
push
in
jae
cmp
cld
aaa
push
call
mov
xchg
xchg
adc
adc
jo
outsb
ffree
ja
fwait
jno
lods
jae
xor
jo
call
rcrb
mov
lret
seto
jo
sub
mov
xchg
rcr
mov
push
add
jo
daa
jg
cld
mov
mov
mov
mov
into
mov
sbb
cld
mov
mov
push
cmc
mov
cmp
push
jo
inc
and
add
inc
adc
dec
inc
jo
or
test
mov
mov
xor
rol
ficompl
mov
popa
std
ss
sbb
xchg
lret
decb
ja
and
imul
lea
inc
mov
jecxz
fisubrs
loopne
xor
stc
xchg
movsb
stos
add
lods
jg
pop
xchg
mov
jo
add
pop
ljmp
into
mov
imul
mov
cmp
data16
dec
aas
mov
loope
xchg
outsb
cli
push
shrl
cmp
jnp
imul
xor
mov
or
and
dec
ror
cmp
pop
inc
adc
lock
test
mov
dec
xchg
jae
fisttps
das
jmp
jo
jge
sub
je
xchg
test
pop
lock
xchg
leave
aaa
jo
xor
sub
push
push
sbb
imul
mov
add
dec
sahf
add
dec
lock
jo
dec
and
int
cmpsl
adc
sahf
cmpsb
add
push
fistps
shll
dec
fmul
jo
sahf
xor
aas
cmpsb
add
mov
adc
enter
sub
jo
and
inc
dec
pop
aam
dec
mov
jo
mov
jo
mov
mov
jo
or
outsl
aas
shlb
inc
mov
inc
aaa
jo
inc
loop
fildl
scas
or
and
inc
cmp
pop
cs
loope
add
jo
and
addr16
pop
fnstsw
outsb
xchg
sar
mov
jno
das
or
jo
jmp
mov
fnstcw
shlb
orb
popf
pushf
es
movsb
aad
xchg
push
enter
repz
repz
dec
lock
scas
fsub
lock
sbb
dec
jo
out
xchg
inc
push
cmp
mov
push
arpl
jo
mov
sub
jno
xor
mov
xorb
jo
out
shrl
movsb
jo
dec
inc
pusha
mov
xchg
repnz
stos
fdiv
and
je
out
out
into
rclb
fnsave
sub
mov
loope
dec
pop
cwtl
mov
nop
sub
test
jo
or
jmp
insl
shlb
or
sub
or
push
into
imul
test
push
add
sarb
sub
notb
or
jns
iret
inc
sbbb
cld
adc
loope
pop
sub
push
aas
dec
or
cs
xor
ret
outsb
dec
mov
mov
out
inc
jle
aas
xchg
cmc
movl
adc
lods
loopne
mov
pop
cmp
lds
push
roll
negl
fs
sti
aam
sbb
pop
fsts
rclb
push
ss
loope
xchg
inc
dec
jp
adc
adcl
rorl
sahf
cmp
or
lock
mov
imul
movsl
xlat
loope
jle
jo
adc
cltd
int3
jb
getsec
je
xor
cld
cmpsb
xchg
outsb
sbb
orb
lcall
test
rcrl
mov
pop
popf
ss
push
dec
mov
inc
pop
pop
mov
ret
in
mov
push
hlt
xchg
xchg
jne
lods
icebp
out
push
xchg
out
test
cmpsl
insb
nop
push
sbb
sub
xor
xor
orb
push
mov
aas
mov
sbb
mov
ss
sahf
out
push
fdivrp
dec
add
push
enter
and
jl
xor
ret
push
push
test
popa
insl
fcoms
arpl
loopne
test
jo
pushf
cs
xlat
int
jo
fnstsw
cmp
mov
xor
xor
inc
lahf
push
add
movsb
lcall
aas
clc
and
mov
pusha
and
jmp
adc
adc
movsl
mov
test
dec
insb
sbb
aad
adc
pop
push
pop
add
jae
les
mov
gs
vucomisd
pushf
mov
inc
iret
pop
mov
mov
xlat
cmp
pop
mov
jo
or
pop
mov
mov
in
hlt
sbb
inc
mov
les
lret
mov
sarl
cs
xchg
add
jbe
pop
sbb
add
cmp
insb
neg
inc
insl
inc
push
loop
movsb
dec
or
xchg
push
xor
cmp
outsb
and
pusha
dec
mov
mov
dec
xchg
sub
ljmp
cmp
sub
push
jo
mov
popf
addr16
repnz
data16
push
enter
ds
lea
cmpb
jo
stos
test
jo
push
inc
jl
xor
push
add
repz
das
jo
sbb
or
pop
push
sub
xchg
stos
push
jo
mov
fs
adc
gs
pop
add
inc
push
push
popa
mov
cld
cs
dec
shlb
es
jle
scas
pop
sub
jo
in
lds
jo
int3
pop
xor
das
mov
inc
jb
out
ficompl
push
leave
out
xor
xorb
insl
adc
aam
dec
cmp
jp
dec
pop
and
nop
roll
or
mov
mov
mov
sub
out
adc
lcall
jo
add
clc
xor
dec
lcall
repz
xchg
add
cwtl
enter
fmuls
je
leave
es
sub
push
ret
dec
into
jg
jo
fiaddl
xor
insl
pop
mov
sub
repz
call
cltd
pop
mov
out
jp
pop
icebp
mov
add
call
lock
mov
lret
xchg
pushf
into
xchg
inc
mov
jo
int3
leave
mov
pop
xchg
xchg
and
inc
push
test
mov
xchg
jnp
lahf
in
mov
push
or
dec
in
outsb
call
jo
mov
mov
jo
mov
out
xlat
popf
inc
sarl
jo
inc
cltd
pushf
call
mov
jl
jmp
mov
push
iret
add
in
mov
jae
outsl
mov
sarl
sub
inc
jo
add
aas
inc
inc
sbb
out
cmpsl
jp
xchg
lret
idivb
mov
cs
imul
inc
popa
rcl
push
jne
xor
inc
movsl
sarl
inc
sti
add
or
shll
out
cmp
ja
divl
xor
push
jo
shlb
ret
jbe
sbb
sub
pop
inc
gs
pop
sub
jo
leave
arpl
push
adc
popf
popl
cmp
dec
cmp
shlb
fwait
adc
and
jo
imul
push
jnp
add
test
push
out
sub
aaa
lea
adc
push
dec
mov
jo
jl
sbb
insb
sub
arpl
fcomps
sub
inc
push
ja
xchg
fnstcw
mov
mov
jecxz
shrl
and
and
xor
dec
outsb
cltd
faddp
in
xchg
ja
dec
outsb
in
xchg
jae
test
movsb
movsl
xchg
push
ja
xchg
dec
sbb
push
cwtl
jo
xor
imul
mov
fidivl
loope
cmpsb
pop
sahf
stos
or
out
ljmp
dec
jle
lock
test
mov
pop
jb
movsl
sti
lock
cwtl
cmp
mov
pop
add
sub
pop
cmpsl
mov
jo
shrb
jns
jmp
int
rclb
jo
mov
bndstx
loop
xor
push
je
dec
inc
ficomps
adc
add
sti
sub
into
pop
movsl
je
inc
xchg
cmp
lret
ret
mov
mov
jo
int3
mov
orl
scas
and
xchg
push
jo
pusha
std
and
xlat
es
xchg
mov
test
sub
pop
lock
arpl
jo
fdivs
and
pop
fidivl
cmp
pop
adc
in
out
push
jo
cli
pop
jns
mov
hlt
jo
lcall
jo
rorl
ds
cli
jbe
je
dec
mov
push
mov
push
jmp
pop
aam
jp
lods
ja
lret
outsl
jae
push
jo
xchg
sar
sbb
outsb
dec
enter
sub
ljmp
lock
mov
cmpsb
bswap
jo
cwtl
loopne
push
adc
inc
jo
mov
in
sub
in
mov
sti
aaa
gs
sub
mov
clc
into
in
mov
icebp
jnp
lock
inc
je
in
das
jo
xor
xchg
pop
jecxz
loop
inc
aad
mov
rol
ss
push
jmp
dec
xorl
dec
out
rolb
push
jecxz
nop
lret
insl
push
test
outsb
movsb
loope
jo
es
shrl
jo
scas
mov
movsl
sub
xchg
pop
adc
adc
jo
xchg
sub
iret
jo
sub
mov
idivl
xchg
push
dec
insb
stc
inc
lods
or
fisubs
pop
adc
out
jo
popa
insb
mov
jge
sbb
pop
inc
xor
sub
jo
sbb
xbegin
out
pop
popa
out
mov
pop
test
push
jo
push
xchg
and
rcrb
jae
xchg
andl
xor
and
dec
call
mov
dec
cmp
or
jo
or
insl
cs
xlat
mov
or
mov
jo
in
jge
or
lods
add
addb
hlt
loope
mov
pop
out
outsl
mov
mov
xchg
jb
ficoml
loop
mov
xor
push
outsb
in
jb
ffree
xchg
repnz
and
push
dec
add
scas
push
in
pop
push
add
mov
and
ja
jb
sarb
lds
aaa
jl
stos
mov
mov
cmc
in
dec
mov
jno
enter
jo
cmpsb
cltd
in
push
jbe
push
das
aaa
daa
lock
fnstsw
dec
mov
dec
jo
push
sbbl
jnp
repz
or
ret
pop
std
inc
iret
and
mov
inc
pop
divb
sti
mov
sub
cltd
xlat
lahf
pushf
adc
adc
enter
mov
jo
mov
mov
jo
adc
mov
das
mov
repz
xchg
mov
ss
and
sbb
mov
test
iret
push
jae
stos
clc
fwait
ss
push
icebp
mov
cmpsb
pop
out
sub
insl
or
sbb
nop
jo
xor
jns
pop
into
jo
jne
inc
je
fdivs
adc
inc
jo
bound
mov
shll
nop
add
push
arpl
test
jo
cwtl
jg
jmp
ss
mov
sub
sbb
jo
lahf
push
jnp
test
or
pop
xor
pop
loopne
lds
fnsave
popf
push
sbb
and
insl
adc
sub
cmc
loop
mov
bound
jno
int
sbb
push
out
jno
mov
clc
mov
push
pusha
mov
jg
test
xchg
or
cmc
repnz
ja
out
repz
inc
xchg
out
addb
inc
fucomi
imul
jbe
mov
shr
xchg
cmp
leavew
lods
cmpsb
cmpsl
pop
gs
test
scas
cltd
std
sti
lods
insb
inc
xchg
sub
pop
repz
lahf
addb
gs
or
mov
pusha
fs
pop
rclb
lock
in
andb
push
inc
mov
pop
mov
mov
out
adc
into
jg
push
inc
in
sbb
jl
inc
sub
push
ss
test
dec
scas
and
jmp
in
sub
mov
insl
xlat
dec
mov
push
shll
lods
mov
fs
add
aam
andl
lea
jp,pt
adc
inc
je
jecxz
sbb
jnp
dec
lock
adc
and
pop
jae
ss
test
loopne
stos
mov
int3
sbb
js
mov
sbb
or
arpl
xor
shll
in
pop
and
loopne
rolb
iret
repz
scas
mov
movsb
push
lret
ret
and
sbb
jns
inc
jb
test
sub
cmpsl
call
mov
cmc
cmp
in
xchg
push
negb
sbb
cmp
xor
cmp
jmp
pop
lea
hlt
hlt
fsub
jo
cmp
cmp
out
das
mov
mov
push
dec
or
sbb
jne
ds
test
mov
test
iret
int
lret
push
xor
xor
les
mov
imul
sub
adc
xor
pop
pop
mov
cmp
xor
xchg
popf
mov
loope
mov
out
xor
pop
test
nop
push
cmp
loop
pop
daa
cmpb
or
push
sub
mov
inc
jmp
sbb
insl
xchg
clc
in
enter
out
xchg
inc
out
in
clc
inc
and
js
ss
sbb
or
dec
dec
push
outsb
sbb
cmp
cmp
icebp
sub
push
rorb
fcompp
sub
sub
leave
and
sti
cmp
adcl
in
cmp
mov
cmp
bound
pop
icebp
daa
sub
xlat
xor
push
mov
fwait
push
add
fstpl
jo
test
inc
pop
jo
in
or
fwait
pop
insl
mov
xor
pushf
not
insb
aad
divb
sahf
je
add
jo
test
jno
jo
std
outsb
stos
mov
push
jo
movsl
test
mov
faddl
nopl
mov
shl
lock
jo
sbb
insb
cwtl
sub
jmp
dec
jo
cmp
test
pop
in
cwtl
insb
jo
cmpsb
inc
pop
mov
mov
push
fwait
enter
imul
jo
data16
sub
shl
jo
pop
mov
in
mov
push
sub
popf
insl
imul
fmuls
outsb
push
dec
psubsw
popf
jo
inc
xor
pop
cli
dec
outsl
dec
incb
xor
jo
xor
jbe
dec
jecxz
inc
call
clc
add
jp
add
je
pop
pop
jo
dec
and
jo
sbb
mov
jp
jo
adc
jns
jo
xchg
std
and
jo
adc
sub
add
push
test
xchg
outsb
insl
hlt
mov
bound
add
sub
psubsb
aad
test
stos
jo
sub
xchg
in
insl
iret
shrl
int3
adc
ja
jmp
insl
dec
repz
xchg
jecxz
nop
into
inc
xor
and
cmp
jns
push
xchg
imul
filds
sub
cli
ds
cmpsb
or
pop
xchg
push
cmp
jp
icebp
dec
mov
xor
pop
mov
add
jp
insb
pop
mov
xchg
lea
or
test
sbb
sti
mov
movsl
pop
push
jo
cmp
jno
pop
icebp
outsl
fstl
nop
jg
es
jl
lret
les
and
jo
sbb
cmp
or
fdivs
mov
push
cmp
insb
std
jo
ljmp
adc
inc
sub
popf
mov
mov
jns
sub
fidivrs
repz
jmp
mov
dec
add
dec
inc
sbb
fildl
test
cld
push
cmp
mov
insb
jnp
divb
insl
or
cmp
mov
rorb
iret
mov
or
adc
movsl
adc
shl
lcall
push
xor
push
lods
cld
fs
xor
rol
imul
adc
dec
xchg
add
in
lock
mov
mov
fldcw
mov
in
jp
scas
sahf
mov
xchg
std
jo
outsl
cmp
aam
mov
and
ss
jae
push
pop
adc
loopne
pushf
outsl
ja
scas
inc
loope
shr
sub
dec
iret
out
jo
jns
inc
jbe
mov
stc
cmp
dec
jo
popa
pop
test
add
iret
jo
xchg
outsb
insb
sbb
mov
lret
into
adc
adc
dec
push
test
je
sbb
xor
cmp
dec
jo
mov
popf
outsl
test
inc
inc
data16
inc
mov
or
orl
xchg
outsb
xor
xchg
jbe
pop
fwait
push
popa
mov
lea
int3
push
xchg
xor
shl
jo
jb
mov
addr16
fisubrl
mov
add
fcmovne
mov
in
push
lahf
xchg
jo
ja
pop
rorl
mov
jno
std
cmc
aam
lahf
jo
mov
lcall
push
mov
inc
inc
stc
cld
pop
adc
loop
mov
ja
addps
mov
cmp
pop
xchg
adc
push
insl
mov
sub
pusha
mov
jo
loopne
je
repz
mov
pop
adc
pushf
daa
add
dec
jo
push
repnz
cmp
pop
subb
out
sbb
test
add
jb
sub
mov
push
aaa
dec
mov
cmp
jo
jnp
xchg
sbb
add
jo
fcmovu
jp
lahf
rorb
addl
sub
mov
fsubr
xchg
xor
rorl
push
jo
pop
std
cmp
insl
adc
push
enter
ret
pop
lock
cs
jo
jno
xor
testl
jo
mov
mov
outsl
int
jo
arpl
adc
fidivs
mov
lock
jo
xchg
push
or
std
add
stos
in
xorb
mov
sbb
nop
cmp
xlat
xchg
shrl
and
jo
pop
cltd
xchg
inc
jnp
xorb
test
repz
and
xchg
cmc
std
fldl2e
pushf
stc
cltd
jo
js
push
fcmovbe
cmp
nop
jo
lds
add
mov
cmp
lret
je
inc
movsl
jo
test
aas
mov
imul
jae
xlat
xchg
jo
xchg
iret
jno
pop
xchg
jo
mov
scas
stos
mov
add
xorb
lea
push
push
insl
sbb
and
mov
ss
lret
add
jne
fsubrp
into
xor
call
mov
mov
mov
lcall
xchg
mov
add
rolb
sbbb
inc
jo
iret
js
push
movl
and
popf
sub
xchg
out
lea
pushl
xlat
lods
push
mov
sub
jo
arpl
jo
std
shl
stc
pop
xchg
leave
outsb
out
inc
cmovp
insl
negb
jg
cmp
jno
ret
push
imul
lret
jmp
jo
sti
mov
fldcw
stc
pushf
cmpsl
fdiv
mov
or
sub
adc
push
jo
cmp
pop
adc
xorb
mov
xchg
inc
js
imul
jp
cld
mov
add
mov
mov
jle
jecxz
inc
clc
lods
test
and
lcall
out
imul
mov
add
jle
mov
repnz
clc
pusha
jo
sti
mov
jo
inc
mov
arpl
jo
xor
clc
sbb
or
rcll
pop
dec
jo
dec
add
aad
pop
jo
adcb
inc
or
push
push
lock
pop
loope
je
cmpl
add
ja
outsl
push
dec
lock
stos
bound
mov
ljmp
hlt
insl
cld
add
out
lret
jo
mov
push
kmovw
dec
xchg
pop
enter
in
cld
es
lret
mov
xchg
ja
ret
sub
pop
add
out
and
loopne
jo
sub
movsl
lock
cmp
sbb
imul
mov
push
rorb
daa
jae
ja
std
loop
in
pop
jo
je
test
cld
jle
push
adc
in
movsl
ja
pop
mov
and
mov
jae
mov
push
call
nop
jnp
jo
jb
aam
popa
adc
jo
cwtl
nop
or
sub
xor
aaa
mov
insl
jg
cmp
adc
pop
sti
cmpsl
sub
jne
outsl
out
mov
jo
ljmp
ja
push
mov
xor
cmp
mov
xor
jo
jne
dec
cmpsb
lret
jae
dec
fucom
sub
or
inc
jo
int
xchg
loope
xchg
pop
jo
sbb
fidivs
sbb
jo
jae
cmp
idiv
jae
movsl
stos
mov
jne
xchg
and
jge
into
rol
lret
lahf
lcall
dec
pop
sbb
or
pop
jo
adc
cld
push
jl
sbb
aam
jnp
icebp
js
insl
arpl
push
scas
or
pop
lock
mov
jo
cmc
cmpsl
shrl
ret
std
push
insl
sbb
xchg
mov
sub
cld
jo
cmpsb
or
adc
inc
jo
lahf
mov
leave
push
sub
mov
ja
xor
test
or
pop
xor
out
add
jo
xchg
cmp
jo
cmpsb
pop
fwait
mov
adc
cmpsl
jno
jae
aad
fmuls
sbb
nop
in
dec
insb
push
xchg
xchg
pop
or
cmp
repnz
adc
adcl
mov
mov
fs
pop
dec
adc
inc
jno
sbb
mov
or
xlat
pop
jo
cwtl
add
xor
push
pop
cmpsl
push
arpl
cli
insl
mov
out
or
lock
pop
test
jno
sub
daa
in
sub
cmp
lock
out
jbe
loop
repz
jl
jns
adc
or
jle
call
int3
add
pop
imul
je
mov
andb
adc
test
jp
aam
dec
jo
and
push
and
add
dec
pop
push
or
push
jo
stc
or
push
in
jae
mov
mov
push
mov
fistps
jo
repz
inc
jo
sub
sub
xchg
or
arpl
inc
in
dec
popf
dec
jo
mov
shlb
out
jo
pop
ret
jle
enter
jne
jbe
mov
in
pop
sub
arpl
mov
adc
push
cmp
lock
test
je
cmp
xchg
push
lcall
jmp
sbb
imul
or
iret
pop
data16
aam
adc
mov
insb
outsl
nop
mov
xchg
jle
pop
add
pop
test
pop
cld
push
push
pop
cmp
xchg
cmp
sub
cmpsb
inc
fidivs
cmc
mov
test
xchg
jo
adc
sbb
out
jb
jbe
ffree
call
xor
mov
jo
sbb
movsb
jl
into
fiaddl
adc
imul
out
out
test
or
scas
lds
mov
pop
imul
lret
ja
xor
and
cmp
fs
lret
or
xorb
mov
jo
pop
test
dec
cli
xchg
jo
lret
jns
mov
enter
pop
test
and
push
loopne
cmpb
je
or
xchg
aaa
mov
cwtl
jo
jle
fnstenv
lods
pop
test
fisttps
jb
mov
push
mov
xor
push
repz
shr
lds
jecxz
lret
dec
mov
mov
cmp
movsb
mov
pusha
inc
add
insl
fdivrl
lahf
rclb
ret
jp
mov
xor
xor
sub
insl
push
mov
addl
jo
mov
jecxz
jae
pushf
mov
xor
jo
ror
in
jp
data16
and
lods
icebp
lods
mov
in
cwtl
repz
fisttpl
fimull
je
shlb
lods
cs
jo
cmp
sbb
subl
mov
xchg
outsl
insl
push
or
mov
insb
inc
xor
jo
cmp
mov
mov
pop
sbb
xor
ljmp
dec
jmp
mov
aas
mov
stc
xchg
jo
inc
addb
arpl
pop
jo
in
adc
jo
jmp
paddb
pop
jo
in
add
aas
bnd
xchg
xor
ss
data16
push
cmpb
and
jo
ret
into
aaa
xchg
sbb
aam
cmp
fwait
dec
lret
aas
mov
test
jne
dec
xor
jo
xor
enter
add
xchg
out
jo
and
pop
fisttps
dec
jl
outsb
scas
xchg
adc
dec
jo
out
xlat
dec
sti
xchg
call
push
mov
jbe
in
jo
lret
adc
pop
test
das
pop
add
data16
sti
clc
aad
pop
xchg
xor
push
jo
push
in
iret
pop
mov
jp
imul
nop
loopne
sbb
mov
and
or
jo
adc
push
cltd
iret
or
push
faddp
mov
test
jo
out
subl
shll
cs
fisttpll
jns
fcmove
dec
fsts
and
icebp
cmp
mov
scas
lock
xlat
lods
jo
pushf
inc
sbb
cmp
lret
es
aas
mov
add
insl
out
popa
xlat
jo
mov
imul
sbb
xor
add
xorl
sbb
jle
jo
pop
inc
sub
mov
fidivs
test
jp
push
or
xor
stos
or
dec
xor
sbb
ja
or
std
movsb
jo
add
js
jne
jo
sbb
xor
popa
xchg
cmpsl
stc
cmp
inc
testl
jmp
adc
decl
imul
jg
xorl
push
and
dec
add
jo
sub
lock
adc
jp
cmp
daa
push
lcall
mov
dec
in
cltd
inc
inc
xchg
jecxz
rclb
pop
cmc
mov
clc
jo
fimull
mov
orb
lods
cld
jo
mov
or
jo
es
fxch
or
insb
les
lea
xchg
sub
or
jns,pn
cld
outsl
jo
push
sbb
jne
jmp
and
sub
jmp
add
sti
push
mov
push
pop
outsl
adc
lds
sbb
in
in
dec
aaa
mov
xor
stos
mov
push
out
ja
lcall
aaa
mov
sub
jae
cmc
loope
pop
gs
fcmovb
jne
inc
cmp
jo
jb
lahf
or
adcb
aas
leave
push
sub
pop
pop
ret
jns
loopne
mov
pusha
orb
addr16
dec
dec
bound
xchg
loope
xor
repz
xchg
cmpsb
jae
insl
lahf
lods
ss
mov
call
push
push
jo
sti
cmp
mov
dec
dec
lahf
cmpsl
xchg
cld
ficompl
jne
xor
xor
outsb
jb
xchg
fdivr
lods
or
push
popf
sub
sbb
push
lea
jg
stos
mov
jo
pop
fisttps
lods
int3
jo
jne
inc
insb
xor
xchg
loop
dec
rolb
jo
repz
xor
and
jae
push
lock
push
cld
xor
jbe
add
arpl
jo
imul
cltd
xor
in
sub
sub
add
pop
add
imul
movsb
fldl
cmp
insb
inc
les
loopne
mov
out
mov
nop
cvtps2pd
jo
inc
add
add
sbb
mov
mov
pop
jmp
nop
scas
adc
popa
jo
les
jl
iret
insb
fistpl
rclb
repnz
push
jo
sub
inc
insl
stos
loopne
ret
jg
mov
imul
add
je
jo
pop
add
daa
icebp
jb
arpl
sbb
mov
lcall
jo
add
ret
jmp
xchg
push
xor
stc
adc
push
iret
mov
jo
sti
test
jle
mov
adc
scas
fs
adc
shlb
mov
jo
idivl
es
mov
ss
sub
nop
fimuls
inc
je
cld
lock
xorb
in
pop
jo
je
jl
add
jo
pop
nop
mov
jo
fdivl
idiv
cmp
pop
std
lret
mov
push
mov
mov
jo
cmc
mov
stos
enter
nop
pushf
xor
jo
push
pop
add
xor
dec
jo
sub
and
mov
lret
outsb
popf
sbb
fildll
nop
xchg
or
insb
lods
cmpsl
aad
popa
bound
inc
lock
shlb
adc
jp
sahf
jo
mov
les
mov
sub
sub
xlat
push
dec
push
es
ds
rol
push
inc
inc
jo
add
push
push
ret
and
dec
cmp
jge
xchg
jo
mov
jle
jae
imul
dec
out
lods
and
daa
sbb
lcall
int
pop
lock
mov
jp
das
jae
mov
rorb
jo
aam
leave
and
sbb
pop
pop
or
jo
addl
ja
mov
jp
jo
call
xchg
jo
cmp
jo
icebp
sbb
and
cmp
repnz
mov
jo
ret
cmpsb
xor
mov
pop
mov
lock
fistpl
ljmp
sbb
sub
cmp
jo
pusha
loop
jecxz
repnz
and
xchg
mov
xor
add
mov
iret
fidivs
loop
mov
jo
subb
rolb
add
mov
in
pushf
stos
jo
ljmp
insb
in
fsubrs
bound
mov
jo
inc
fwait
jl
and
or
cmp
lret
dec
push
rcl
mov
stos
jl
aaa
adc
dec
jle
jmp
jnp
rorl
xor
cmc
jo
outsl
aas
popf
xor
adc
push
mov
mov
jmp
stos
xchg
jns
mov
jo
or
cltd
xorb
out
leave
mov
js
popl
cmp
stc
jo
mov
dec
test
fdivl
test
jo
out
inc
int3
inc
jo
in
subl
std
sub
and
int3
insb
pop
cmpsl
inc
jo
lahf
mov
leave
adc
arpl
cltd
fnsave
mov
sbb
lret
repnz
adc
jecxz
sbb
dec
lds
imul
add
aas
or
cmp
es
mov
dec
inc
loopne
dec
rcrb
push
mov
pop
decl
popf
ret
jae
test
inc
divl
fimull
push
mov
outsb
dec
pop
cmp
jo
push
xchg
mov
fwait
dec
insl
rolb
jge
mov
push
inc
fdivl
stos
subb
add
jo
push
pop
popl
pusha
cmp
ljmp
subb
jae
daa
test
push
popf
loopne
jo
and
inc
mov
outsl
sbb
cmpsb
jb
cmp
popa
push
inc
leave
call
out
scas
movsb
xor
pop
fs
mov
add
rcll
into
xor
jg
cmpsb
jo
jnp
mov
jo
andl
add
xchg
fwait
insl
pop
shrb
popf
push
mov
dec
hlt
pop
call
push
jmp
test
or
ja
push
cli
cmpsb
mov
push
addb
hlt
push
loope
data16
cmp
mov
inc
cmp
jo
pop
mov
fsubl
mov
jo
sbb
and
nop
push
lea
iret
push
mov
ret
andb
cmp
je
mov
mov
stos
pop
nop
loop
adc
movsb
pop
aaa
cmpsb
mov
pop
loopne
xchg
aas
push
daa
cmp
push
push
jp
push
hlt
sbb
test
adc
cmp
aas
sbb
sbb
mov
mov
stc
cmp
scas
stc
repnz
lahf
outsb
lret
insb
icebp
popf
in
stos
and
xor
sbb
mov
and
xor
dec
mov
sbb
inc
subb
cmc
xor
xlat
mov
or
mov
sub
sbb
into
pop
cmp
loopne
mov
leave
inc
jp
xchg
xchg
jnp
mov
sbb
sti
adc
push
mov
pop
sbb
dec
mov
sbb
dec
xlat
adc
cmp
aad
mulb
int
insb
xor
cld
jmp
push
cltd
pusha
inc
mov
adc
jo
mov
sti
jmp
orl
add
mov
and
cmc
stos
sub
int
daa
push
and
fstps
loopne
mov
test
adc
js
xchg
loop
xchg
sbb
inc
jle
in
lret
mov
cwtl
xchg
sbb
loope
aas
xor
insl
cwtl
cwtl
xor
xchg
test
cwtl
xchg
pop
fadds
nop
pop
jne
ret
add
sbb
inc
xchg
daa
jno
cmc
or
insb
fidivrl
jnp
repnz
and
lahf
adc
jp
cwtl
mov
xchg
call
sbb
popa
lret
push
push
jno
xchg
out
addr16
out
loop
add
inc
jl
xchg
sbbb
ljmp
lret
imul
shll
cmp
cs
mov
push
jle
push
xchg
sbb
push
lcall
or
mov
fbstp
xor
pop
push
xchg
ja
jns
jl
cwtl
out
or
sbb
mov
dec
test
cltd
adc
subb
push
sbb
pop
push
mov
push
out
add
lock
scas
xchg
lock
out
iret
in
jae
mov
xor
and
xor
dec
fdivrp
js
loope
jle
cs
push
pop
sbb
xlat
shlb
push
pop
movsb
jns
sbb
ficoms
push
adc
mov
aad
add
xor
adc
adc
mov
and
scas
adc
movsl
xor
dec
or
lret
mov
push
xchg
loopne
lods
jo
sbb
mov
lret
jb
popa
mov
cmp
popf
sbb
inc
roll
stos
in
cmp
lret
push
fcmovbe
jg
fimull
push
test
cmp
mov
pop
and
aam
shll
sti
pushf
cmpsl
add
enter
sub
rorb
cltd
sub
dec
sbb
sub
sahf
leave
fmull
test
lods
out
loop
jge
xorb
push
leave
je
xlat
stc
xor
movb
movaps
adc
scas
sbb
xor
fnsave
popa
pop
cwtl
arpl
lahf
jp
sbb
addl
dec
dec
insb
sub
push
add
and
cmp
lds
idivl
test
fildl
fcompl
rol
es
jae
cmpsl
aaa
ds
daa
mov
jecxz
sub
leave
cmp
sarl
and
sub
mov
aaa
dec
out
pop
sub
push
add
cmp
and
sub
loopne
cwtl
es
jle
pop
and
loope
shrb
test
cmp
cmpsl
stc
and
fs
inc
in
and
push
inc
jl
in
call
xchg
pop
pop
sarl
je
jecxz
sub
xor
loope
neg
loope
xchg
pop
roll
mov
jne
loop
xor
push
fs
insb
stos
mov
mov
xchg
jmp
jo
lods
fdivp
subb
lock
jo
clc
pusha
or
in
push
push
or
jns
cwtl
out
int
pushf
pop
js
or
stos
daa
in
inc
xor
push
jle
in
repz
mov
or
or
lds
sarb
adc
sbb
inc
imul
adc
cmc
fs
lods
jno
jmp
call
add
jb
lods
lds
pusha
clc
and
ss
pushf
mov
mov
mov
jb
test
dec
testb
xchg
daa
shrl
sbb
ja
xor
pop
add
jo
push
cltd
xor
test
pop
test
xor
jp
inc
cmpsl
or
mov
mov
sbb
mov
cmp
cmp
pop
jo
mov
shlb
insb
xor
out
fcompl
out
mov
sub
push
xor
insb
lahf
add
xor
sbb
das
and
pop
rol
pushf
xchg
in
addl
push
cmp
fs
sub
adc
lds
dec
push
ds
jl
jo
out
nop
movsl
std
lods
add
add
fsubs
sbb
scas
dec
xchg
fsts
je
lods
jo
mov
ds
enter
int
call
mov
mov
jo
mov
jo
aam
mov
popa
and
xor
mov
loopne
jo
imul
mov
in
jb,pt
scas
xor
icebp
lods
hlt
cmp
negl
xor
inc
mov
testl
aas
and
mov
cmp
xchg
jle
mov
jo
stc
sbb
dec
mov
insb
inc
mov
lods
testb
subb
jne
aas
adc
push
sbbl
add
xor
popf
mov
in
imul
add
mov
jno
jl
stc
dec
in
inc
divl
mov
ss
in
pop
jo
push
nop
lods
adc
dec
mov
sar
mov
cmp
insb
hlt
inc
xor
loope
mov
mov
inc
jb
xorb
ret
lcall
scas
jmp
sub
test
add
jge
pushl
repnz
sbb
imul
sbb
ret
add
ds
sbb
test
mov
and
mov
and
sahf
test
fldenv
sub
incb
pushf
in
movsb
lods
mov
dec
rclb
sbb
hlt
add
test
jp
jmp
add
jo
adc
jns
shlb
jno
sub
xchg
fidivrl
movsb
and
xchg
cltd
mov
dec
or
icebp
cmc
lods
dec
jo
push
jno
sub
mov
popf
rolb
pop
jp
cmp
pop
pop
ljmp
gs
adc
scas
aam
nop
cli
adc
dec
mov
mov
mov
icebp
push
push
jo
mov
sub
aaa
cld
stos
xorb
test
push
mov
jo
xchg
ja
push
outsb
in
jp
lahf
push
cmc
lock
insl
stos
and
or
cltd
jbe
adc
inc
daa
and
adc
int
sub
sub
in
mov
iret
xchg
stos
jo
movsb
leave
fwait
mov
es
call
jo
sti
dec
fstps
mov
mov
add
jo
je
sahf
cltd
test
push
adc
ret
jo
ret
test
push
inc
lock
or
jae
fnsave
sbb
xor
out
pop
pushf
cmp
imul
mov
mov
jo
jp
mov
ja
push
pop
pop
arpl
add
cmp
test
gs
stos
lcall
mov
sbb
mov
mov
push
lcall
loopne
dec
pop
or
dec
sbb
jo
xchg
je
cld
and
repnz
aaa
fdivrs
loopne
cmc
push
xor
cmp
sub
push
cmc
pop
sbb
clc
ja
imul
dec
xchg
hlt
sahf
push
fstpt
js
jecxz
repnz
enter
arpl
dec
nop
mov
xor
push
lods
mov
xchg
mov
push
mov
cwtl
push
pusha
cmpsl
into
scas
push
ss
push
ja
jg
and
js
jge
icebp
cwtl
pop
pushf
popf
mov
jge
or
or
stos
inc
call
push
mov
dec
xor
out
inc
pop
loopne
hlt
lea
dec
inc
mov
pop
mov
fnstcw
fs
cwtl
cmc
jge
or
aas
mov
sbb
dec
xchg
cltd
ss
add
cmp
cmp
xor
mov
out
nop
add
jmp
mov
out
sub
dec
cwtl
pop
push
mov
mov
cmp
mov
sbb
sbb
cld
xchg
or
insl
cwtl
arpl
push
insl
call
imul
pop
cmp
cmp
or
mov
jnp
movsb
dec
mov
cmpsl
fwait
cmc
cs
dec
je
adc
sbb
mov
jnp
or
stos
es
push
loop
lock
cmc
and
imul
roll
fs
fcmovnbe
or
sub
mov
xchg
les
xchg
loopne
cltd
add
shr
sub
insb
cwtl
mov
arpl
pop
xor
cwtl
sahf
sbb
sbb
lcall
cli
jp
mov
inc
daa
fmulp
and
pop
setne
fnstsw
mov
gs
repz
fisubl
cmp
jg
cmp
jp
fmuls
push
sub
mov
sub
xchg
jns
lods
mov
lea
mov
jno
pop
inc
int3
pop
push
push
adc
rcl
inc
sub
arpl
dec
dec
loopne
mov
xchg
mov
shl
mov
or
loopne
jg
xchg
fcom
add
push
cli
loopne
leave
sahf
add
cmp
and
mov
mov
int3
mov
xchg
jb
sub
fwait
and
cld
lret
adc
stos
call
push
mov
push
aam
cmp
xor
mov
xchg
xchg
cwtl
push
shr
mov
push
pop
sti
out
into
scas
mov
xchg
outsb
cmp
xlat
push
imulb
sbb
mov
mov
scas
mov
stc
out
mov
and
xchg
xchg
in
mov
std
cmc
stc
pop
cli
imul
push
movsb
lds
mov
inc
push
mov
cmp
ss
sub
pop
cmc
mov
sbb
cwtl
xor
lahf
xchg
jle
ret
cwtl
out
sbb
and
or
adc
xchg
int3
daa
xor
cwtl
rorb
shr
inc
ds
fs
adc
and
xchg
and
mov
clc
cmp
mov
push
out
clc
in
leave
cmpsb
popa
or
xchg
adc
loopne
mov
push
pop
jo
sbb
sub
out
outsb
jb
mov
or
inc
loopne
je
or
jne
in
andb
and
dec
xchg
sub
xor
and
adc
sbb
adc
bound
push
mov
out
lock
sbb
jge
je
push
jge
mov
inc
lods
lock
xor
lahf
test
dec
test
jle
cmp
pop
and
daa
mov
push
cwtl
pop
mov
xchg
cmp
sbb
mov
push
mov
mov
push
push
repz
mov
mov
cmp
xor
jg
loope
imul
lret
mov
cmpl
push
lcall
mov
icebp
push
sub
mov
icebp
xchg
and
mov
insl
xor
jno
movsl
in
sub
rcr
push
cwtl
add
and
push
icebp
cld
cli
xor
and
in
cli
pop
push
es
pop
int
adc
and
jne
ja
cmp
jo
stc
call
out
jno
cwtl
into
push
outsb
aam
loopne
fstp
mov
and
lock
fcmovne
or
and
js
cmp
ljmp
push
div
xlat
test
leave
pop
sub
jmp
nop
fsub
fdivl
fisttpll
pop
hlt
cmp
mov
inc
mov
leave
adc
xchg
lret
sub
inc
js
pop
xchg
call
cmpsb
push
jne
cli
cmc
in
ss
inc
sbb
je
hlt
cld
push
aam
clc
outsb
adc
mov
outsb
lret
cwtl
pop
xor
lods
dec
add
ss
jne
lods
imul
out
call
push
xor
push
int
pop
xchg
aad
mov
pop
out
mov
sbb
cmpsl
mov
sti
test
jg
pop
outsb
in
subl
xchg
jbe
mov
pop
jns
leave
cli
test
mov
mov
stc
je
imul
mov
xchg
xchg
mov
in
daa
cmpsl
and
xor
mov
out
test
sub
pop
mov
mov
out
xchg
xor
cwtl
cmp
hlt
push
rclb
jae
out
jle
pop
loopne
pop
mov
jge
orl
nop
decl
frstor
roll
jno
sbb
outsl
fistpl
adc
cmpsb
dec
dec
ficoms
insb
js
dec
cmp
es
push
xchg
xchg
sub
ja
sahf
addr16
orb
adc
mov
lret
es
gs
mov
xor
adc
fcmovne
sub
push
xor
loopne
adc
bound
arpl
and
pushf
push
mov
sub
inc
sbbb
xchg
cltd
mov
mov
cwtl
push
in
in
leave
aam
xor
jne
mov
js
or
mov
movsb
cmp
mov
jnp
jg
sub
xchg
xor
emms
imul
sub
cwtl
xor
outsl
dec
hlt
push
jne
xchg
out
out
pop
insl
xchg
add
inc
xor
or
sti
fidivrs
nop
ljmp
jecxz
push
and
push
lds
sub
insl
mov
sub
outsb
cmc
imulb
mov
push
iret
mov
lock
ret
icebp
lret
mov
mov
outsl
cmp
and
or
push
xchg
icebp
sarl
mov
push
inc
dec
adc
pusha
xchg
adc
out
dec
mov
cwtl
and
pop
cmc
sub
addr16
pop
add
das
push
es
fidivrs
stos
sahf
adc
lods
das
sbb
push
hlt
mov
jo
stc
rcr
xchg
rcrl
inc
jle
sbb
arpl
cmp
sub
push
fcompl
xchg
enter
loop
notb
lock
pop
fisubrs
mov
mov
outsb
sbb
stc
cmp
daa
sarb
push
xchg
xor
mov
and
ficoms
sbb
frstor
adc
cld
loop
and
ja
dec
xlat
rcrl
outsl
jmp
arpl
mov
mov
push
pop
inc
push
sbb
daa
fs
into
adcb
stc
ret
jns
pushf
pop
call
and
mov
aas
jne
cmp
into
int3
addb
imul
push
mov
clc
out
icebp
out
enter
mov
and
sbb
xor
pusha
aaa
inc
push
and
fmuls
iret
movsb
call
decl
jne
inc
inc
dec
dec
inc
test
push
fidivrl
mov
sub
mov
out
or
push
hlt
jnp
push
ficoml
mov
pop
mov
and
in
adc
dec
push
and
es
arpl
mov
in
mov
jp
adc
outsb
mov
das
mov
movsb
out
cmpsl
mov
push
mov
push
xchg
das
mov
inc
xor
and
sub
push
loopne
jp
and
fmuls
and
mov
push
cmp
iret
imulb
sbb
mov
cmp
dec
pop
andb
or
mov
mov
jbe
jae
sub
push
test
jo
lcall
lds
cwtl
stos
arpl
je
add
adc
mov
cltd
int3
mov
push
cmp
mov
es
pop
xchg
mov
fisttpl
out
iret
mov
cmpsb
rorb
data16
lcall
pop
jg
fwait
cwtl
xchg
pop
adc
ljmp
sbb
push
or
adc
data16
dec
jbe
test
xor
sub
shl
fdivl
xchg
lods
jnp
and
cmp
sahf
enter
ja
lret
pop
mov
aad
push
push
and
mov
ds
mov
mov
pop
xchg
sub
cld
or
and
mov
fisttpll
sbb
xchg
out
mov
pop
pop
mov
ja
mov
cmc
sub
jae
stos
mov
dec
inc
jmp
in
jle
popa
jl
out
mov
jno
hlt
adc
sub
movsl
sti
push
xor
int
outsl
sbb
sbb
int
push
xchg
lcall
jae
pop
inc
dec
std
push
shr
xchg
inc
cmp
mov
je
jmp
mov
dec
addr16
and
je
outsb
das
xchg
test
dec
adc
xchg
daa
out
bound
js
cwtl
enter
push
jmp
pop
push
push
lret
icebp
lds
stos
repz
in
inc
rol
mov
xchg
dec
insl
clc
jg
cmp
out
cmp
add
shl
jmp
mov
int
sti
call
add
sub
jbe
aad
cwtl
push
in
or
mov
push
aaa
mov
cwtl
xor
je
sbb
je
dec
push
int
jo
adc
std
sub
lcall
aam
add
jl
pop
cwtl
push
xchg
push
mov
jbe
and
daa
adc
cld
aas
cli
loopne
iret
mov
sbb
adc
dec
clc
ss
pop
sbb
inc
popf
xchg
mov
divb
mov
in
in
test
lcall
sub
adc
push
mov
or
stc
sbb
in
jecxz
sahf
sti
cltd
es
aad
jl
mov
ficomps
and
dec
fnsave
pop
int3
stos
jmp
push
mov
pop
es
or
stos
jp
adc
mov
mov
xchg
cmp
fcomi
mov
mov
mov
xchg
adc
je
cwtl
shrl
jg
and
stos
and
ret
mov
jns
lret
leavew
es
shlb
xor
sub
sub
test
push
lret
push
jle
mov
adc
shlb
jg
rorl
loop
or
and
mov
cmp
in
sbb
mov
and
or
push
jo
fiadds
push
aam
cmp
dec
pop
xchg
fdivs
int
lds
in
mov
xchg
pop
xchg
lret
push
js
inc
mov
cli
cmp
xchg
lock
pop
dec
xor
ret
loop
jo
and
pop
dec
jg
pop
lahf
xor
out
mov
js
lods
mov
jae
outsb
adc
xchg
fldt
ss
jecxz
cltd
pop
cs
cwtl
int3
xor
push
push
ja
sub
in
addr16
shll
nop
test
push
ja
sub
fildl
xchg
popa
adc
clc
jo
mov
add
cmp
in
js
jp
push
jbe
cld
jne
jo
xchg
jb
xlat
xchg
mov
jo
inc
mov
cmp
jge
jmp
mov
sti
fbstp
pop
push
dec
jae
loop
xchg
dec
scas
sub
sbb
jae
movsl
pop
jo
lahf
xchg
fcomp
push
mov
outsb
lock
out
xor
jg
push
lcall
jo
ja
push
loopne
push
arpl
lahf
or
dec
cs
test
fstpl
inc
iret
mov
jg
int
dec
add
sub
cmp
mov
movsb
mov
int
repz
in
pop
cltd
push
mov
jae
cmp
mov
sar
test
and
xchg
push
pop
sbb
and
shlb
aaa
jbe
mov
loope
and
push
xchg
cmp
gs
ljmp
jecxz
leave
adc
push
cwtl
adcb
cmc
into
jo
iret
sub
push
adc
sub
pop
insl
imull
stos
add
mov
pushaw
xor
mulb
out
jo
pop
imul
sbb
and
ret
mov
cmp
or
lods
jle
mov
filds
xor
dec
push
mov
adc
push
cli
adc
cwtl
xchg
xadd
dec
and
add
pop
movsl
pushf
fcomps
xchg
jo
inc
add
dec
pop
push
lock
pop
mov
ds
ss
les
pusha
cmpsb
mov
inc
ret
push
fcompl
insl
sub
add
aaa
mov
inc
ret
or
jecxz
pop
jp
repz
dec
mov
xor
jo
clc
add
sub
adc
mov
jo
pop
jmp
xchg
cmp
jae
dec
pop
push
sti
test
popf
push
dec
cwtl
enter
inc
sahf
jp
mov
jp
mov
or
stc
shlb
and
ret
inc
insl
xor
in
mov
sbb
push
mov
pop
shld
hlt
jmp
iret
or
dec
lock
inc
cmpsb
inc
xor
jo
rdmsr
xchg
orb
jo
xchg
rcll
cmp
jo
or
jne
adc
mov
dec
int
sub
xchg
int3
inc
jo
js
aas
mov
clc
stos
and
push
lock
mov
cmp
lock
test
leave
jo
aaa
inc
out
scas
xor
insb
fdivs
addb
jo
stos
std
sbb
aas
jo
mov
jo
fwait
repnz
outsb
cmpsl
jecxz
mov
inc
mov
jp
add
shll
popa
pop
push
add
dec
jo
dec
in
dec
xchg
xchg
out
pop
cmp
mov
xchg
inc
sti
pop
cmp
les
in
xor
inc
rcrl
hlt
mov
mov
sub
cmp
cmp
test
mov
mov
pop
mov
loope
movsb
sbb
cld
xchg
ljmp
xor
xor
jo
lret
movsb
sbb
jo
pop
cmpsb
addr16
enter
jb
sbb
push
push
ljmp
divl
sbb
cld
inc
sub
adc
ja
dec
arpl
mov
aam
add
push
clc
cmp
mov
aaa
xchg
jp
nop
ret
xor
jbe
jns
jno
stos
outsl
in
sub
push
fmul
mov
imul
addr16
xchg
loope
or
loopne
loop
inc
es
int
test
leave
das
outsl
fistpll
fdivl
out
loopne
jp
movsb
sbb
in
aaa
mov
push
sub
test
mov
jo
lret
and
dec
jo
rcrb
out
enter
adc
test
xchg
jo
pushf
orl
xor
ja
xchg
mov
popa
int3
push
pop
and
sub
adc
sahf
jo
cmp
mov
and
aas
enter
mov
mov
icebp
or
out
jo
inc
inc
mov
test
mov
pop
jne
pop
mov
push
xor
adc
in
movsb
test
insl
sub
mov
scas
cltd
push
lock
xor
jnp
mov
jo
shll
enter
mov
loop
daa
outsl
jo
test
int
pop
cmp
or
xchg
adc
mov
pop
fistps
pop
adc
jo
mov
cmp
pushf
pushl
jo
fstpt
out
mov
mov
ljmp
mov
mov
insb
mov
andb
xchg
insl
add
lds
insl
push
mov
shlb
inc
pop
xor
pop
divb
mov
mov
insl
loopne
popf
mov
lea
adc
jle
cmpsb
mov
or
ret
nop
addr16
cwtl
dec
pop
loop
mov
jmp
fadds
outsl
jo
mov
inc
lods
ss
fadd
or
pop
mov
popw
int3
es
sub
xor
add
cwtl
das
dec
lcall
clc
mov
mov
xor
push
lret
fbld
and
cmpsb
into
cmp
aad
pop
je
in
fsubl
repnz
mov
xchg
iret
mov
roll
movsb
hlt
push
or
lock
sbb
push
pop
pop
cld
mov
push
and
push
xchg
pushf
arpl
xor
jae
jb
iret
mov
mulb
out
je
icebp
mov
pop
daa
negl
std
mov
das
add
cmpsb
mov
cmp
cwtl
aas
jnp
mov
ss
stc
mov
inc
loope
pop
xchg
push
es
dec
loop
push
divb
rcrb
jp
insl
push
stc
scas
out
rcll
dec
pop
push
or
xor
insb
mov
daa
cmc
cmp
pop
loopne
jne
or
push
in
dec
loope
cmpsl
scas
cmp
push
push
jbe
jge
jno
add
mov
inc
xchg
hlt
mov
test
push
sub
dec
jo
xchg
xor
scas
cs
push
ja
mov
dec
scas
sbb
jae
dec
scas
mov
adc
stos
jo
jae
sub
xchg
push
sahf
or
mul
in
sti
sub
lock
fdivrs
in
mov
jo
mov
ret
add
ja
les
and
mov
sub
stos
xchg
mov
cmp
jo
xchg
not
imul
jo
cmp
lahf
bound
in
jge
movsl
in
test
add
or
jo
lods
and
js
movb
add
pop
dec
xor
sbb
mov
movsb
adc
pop
in
loopne
cli
cmp
jae
test
bound
das
jo
dec
hlt
cmp
pop
dec
test
ja
out
nop
mov
jo
aad
jecxz
andb
mov
aas
jl
mov
mov
cmpb
mov
rol
pop
insb
popl
jo
ljmp
out
jg
xor
mov
dec
in
jle
dec
xorb
into
push
cld
dec
divl
mov
jle
mov
negb
fistps
cmp
xchg
arpl
repnz
xor
inc
lock
into
sub
movsl
dec
lret
or
and
mov
cmp
std
xlat
pop
add
jno
and
mov
in
jb
pushf
lret
test
rolb
jo
ja
pop
mov
push
pop
dec
xchg
sbb
enter
push
xor
pusha
push
leave
fistl
int
jo
out
in
mov
add
xor
sub
sub
cmp
pushf
cmp
cltd
jo
sahf
cwtl
and
fcmovnb
jb
ljmp
xchg
xchg
popa
hlt
sbb
js
mov
int3
xchg
jo
test
cltd
push
jo
inc
shlb
mov
mov
sbb
jo
inc
in
out
out
xor
sti
sub
lea
jo
and
mov
xchg
push
insl
into
xchg
sbb
jo
xor
inc
cmpsb
mov
mov
arpl
push
jb
adc
jns
pop
testl
int3
mov
jp
lock
jae
push
ss
cld
cmp
js
test
add
int3
lcall
inc
jne
inc
pushf
hlt
mov
and
xchg
loop
dec
push
cs
jl
repz
cmp
pop
jmp
jo
xor
pop
icebp
imul
dec
inc
ja
insl
and
sub
pop
jp
mov
adc
push
add
movsl
and
cs
push
jo
mov
dec
jp
mov
cli
dec
lock
fildl
popl
fisttps
cmp
xchg
orl
lret
jno
jno
mov
lock
jbe
mov
insb
lret
jo
arpl
xchg
push
jo
cwtl
incb
jae
repz
push
sbb
or
mov
out
inc
adc
pop
dec
dec
ficompl
jno
repnz
mov
outsl
ffreep
fnsave
int3
and
lahf
rclb
sub
stos
jo
cmpsb
jg
repnz
jmp
shrb
enter
cltd
test
in
lcall
pop
push
rcl
jb
and
jne
inc
dec
je
push
jo
add
and
push
pop
jecxz
push
pop
stos
jo
repnz
cmpsl
mov
sub
je
cmovbe
cld
lock
cmp
cli
dec
scas
add
jo
push
fs
inc
inc
imul
lahf
test
xchg
or
outsb
adc
out
mov
lock
testb
push
fisttpll
jo
dec
pop
das
cld
dec
je
adc
fwait
repz
jp
ret
sbb
mov
jge
jle
push
push
imul
xorl
xlat
orb
psrlq
std
jnp
xchg
nop
jo
aam
test
and
push
in
xchg
adc
stc
fwait
aad
sub
into
outsl
and
xchg
dec
aas
xchg
repz
rclb
pop
clc
xchg
cmc
mov
insb
mov
in
jo
into
add
cld
ss
push
mov
inc
inc
lahf
sub
divl
xor
rcll
in
outsb
jbe
fisttpl
or
aad
fmuls
inc
dec
jo
jnp
outsb
lods
inc
xchg
mov
jle
mov
jo
lea
pop
or
sbb
shrb
jmp
jo
jle
pushf
mov
sti
stos
sub
adc
in
jo
fisttpl
nop
jo
shlb
fsts
mov
fidivl
in
lods
dec
call
jg
shrl
cmp
mov
or
xor
push
xchg
je
jo
and
stos
jg
push
mov
jle
jo
and
dec
xor
dec
insl
and
std
inc
mov
or
das
ds
adc
test
jo
testb
xor
jo
or
jo
and
test
mov
jo
pop
ljmp
repz
jo
pop
clc
cmovs
push
addr16
push
jo
arpl
outsb
in
jbe
xor
scas
cmp
rclb
push
std
fcoml
mov
pop
lods
inc
sbb
dec
lock
jge
xor
pop
or
popa
xchg
int3
outsb
rcr
push
pop
dec
jge
inc
int
jg
jg
add
ret
mov
arpl
pushf
sub
dec
in
cmpl
in
cld
jp
jne
test
pop
jns
xor
jle
scas
mov
lcall
movsl
jo
int3
pop
xchg
add
sbb
push
mov
in
pusha
or
push
aaa
xchg
pop
out
and
jae
xor
sub
mov
icebp
inc
adc
in
add
pop
sbb
sbb
cmp
mov
pop
outsb
int
movsb
xor
xor
arpl
jo
push
ja
mov
icebp
xor
dec
mov
mov
ja
pop
sar
fnop
xchg
xchg
test
lock
adc
cli
cmp
mov
dec
dec
inc
fnsave
xchg
mov
lock
mov
sbb
dec
or
cltd
xorb
sahf
lods
sbb
sub
adc
jnp
les
add
lahf
mov
push
lcall
jl
lret
mov
nop
orl
xor
pop
pop
mov
jmp
jo,pt
int
xchg
stos
fidivrs
loopne
shlb
lods
push
cmpsb
sbb
jb
aad
clc
jo
xorl
idivl
add
xchg
aas
jo
sti
dec
xor
icebp
js
ret
lods
lods
and
movsb
add
orl
shll
das
icebp
outsl
js
bound
xor
xor
cmpsb
mov
js
lods
mov
sbb
mov
or
int
orb
mov
mov
dec
xchg
push
or
jo
push
or
mov
push
sbb
sbb
jnp
mov
ja
jecxz
adc
in
xor
mov
dec
cmp
jo
mov
out
scas
aad
imul
xor
insl
loopne
sbb
jo
popf
sub
or
insl
inc
popa
cli
cmpsl
pop
push
adc
inc
sti
sbb
push
in
or
sbb
xchg
push
test
cmp
pusha
jo
clc
and
mov
adc
out
fidivrs
shlb
mov
push
cmp
inc
outsl
mov
and
mov
outsb
inc
mov
or
inc
mov
loope
ja
pop
adc
in
hlt
xchg
and
je
pop
lcall
jo
mov
or
loop
push
sbb
inc
inc
mov
mov
jg
jo
pcmpeqw
cli
movsl
dec
xor
adc
jno
push
jo
xchg
stos
ja
cltd
in
mov
mov
mov
nop
mov
pushf
mov
xor
outsl
mov
mov
jns
xchg
adc
xor
fisubs
cmp
cmpsl
inc
jle
ss
sahf
jae
icebp
and
adc
add
mov
pop
and
lret
mov
cs
leave
add
dec
jne
lods
in
and
js
sub
mull
fs
scas
lock
stos
je
sub
adc
aas
popa
loop
dec
jmp
je
dec
pop
and
in
enter
stc
ret
pop
insb
xchg
mov
pusha
stc
flds
push
mov
mov
sbb
aaa
je
test
cwtl
test
and
sbb
pop
sarb
int
ret
fwait
mov
out
fadd
or
adc
and
js
mov
dec
hlt
leave
lock
pop
add
xor
mov
inc
or
and
mov
sbb
jecxz
xor
mov
lahf
dec
faddp
adc
lods
cs
push
nop
or
dec
xchg
cltd
and
and
out
xchg
inc
inc
popf
cmp
mov
lea
dec
or
popf
ja
inc
ja
lret
arpl
jmp
xchg
aaa
adc
sti
pop
jp
aas
pop
or
jmp
mov
jae,pn
imul
fdivr
insb
xchg
jb
repz
ss
lods
xor
jnp
sarb
sub
popa
xchg
addr16
js
hlt
cmpsl
lahf
cmp
jno
popf
cmp
stc
and
cmpl
lods
xchg
cmp
fbstp
xor
xchg
jp
dec
mov
fdivrl
jne
xchg
lds
lret
mov
mov
and
or
mov
push
sub
pop
stc
je
pop
push
repz
imul
mov
mov
je
test
cwtl
cmp
jle
push
imul
pop
sub
loopne
pusha
sbb
or
xor
out
jno
jl
adc
xchg
cmp
push
lock
inc
adcb
je
inc
pop
fldcw
or
push
cmp
push
add
jae
pop
sbb
mov
notb
sub
rep
insb
xchg
call
popf
mov
cmp
enter
or
lcall
stos
cltd
or
mov
sub
mov
clc
mov
or
in
jg
addr16
xchg
out
shrd
inc
mov
dec
fwait
nop
adc
sti
pop
mov
mov
cmc
insb
negl
bound
pop
dec
cmp
arpl
fsubl
jns
loopne
jnp
xchg
insb
sbb
sub
adc
es
jne
cmc
stos
mov
test
cmp
enter
and
pop
inc
int
mov
iret
or
mov
jle
cli
and
dec
jg
jno
ror
bound
insl
mov
outsl
inc
xchg
fiadds
jne
sub
insl
je
sub
sbb
adc
mov
iret
enter
inc
repnz
shl
jl
scas
add
pop
ss
lret
lret
adc
nop
fadds
mov
mov
sbb
orl
inc
insb
jp
jge
outsl
ret
jecxz
lret
js
jno
fs
call
sub
lret
mov
js
adc
cld
mov
idivb
push
cmp
inc
andb
cmp
or
insl
dec
cwtl
push
popf
insl
adc
dec
inc
jns
push
jle
or
xlat
push
arpl
lret
sub
inc
pop
jnp
add
adc
es
fisubl
repz
xchg
incb
fisubrl
sahf
pop
outsb
test
cmp
mov
add
xchg
mov
xchg
mov
push
jnp
xor
rcll
in
push
orl
dec
ds
into
and
cmp
sbb
xchg
add
loopne
fistl
cmp
cmp
xchg
pop
imul
out
dec
cwtl
pop
in
fdivrs
ja
popa
push
add
ljmp
aam
sbb
or
out
and
jne
add
pushf
fs
popa
push
and
inc
nop
and
pusha
rclb
orb
pop
adc
dec
scas
movsl
cmc
ja
movsb
loope
icebp
jb
cmp
mov
sti
dec
adc
in
fst
push
mov
xchg
inc
inc
sti
inc
fwait
jb
xchg
push
fnstcw
fmull
loope
xchg
arpl
xchg
cld
dec
jbe
sbb
push
fldl
clc
daa
insb
pop
je
mov
repnz
adc
loope
aad
test
mul
pop
das
call
and
xor
cmp
cwtl
adc
mov
inc
push
out
jge
pushl
jecxz
cwtl
adc
lods
push
sub
mov
xor
pop
xor
pop
push
inc
insl
in
dec
mov
jl
sbb
ficoms
stc
mov
bound
shrl
adc
cld
sbb
ret
xchg
out
xchg
mov
fst
mov
scas
push
inc
add
dec
sbb
shlb
lock
cwtl
or
and
xchg
cmpsb
jb
in
jp
jb
mov
movsl
push
out
iret
mov
pop
es
add
into
or
jno
lds
push
mov
jge
aaa
lods
jmp
sahf
jns
cmpb
jnp
xchg
hlt
mov
loopne
mov
mov
lret
je
or
mov
scas
xchg
xchg
inc
je
lock
aad
sub
jae
and
shl
aas
iret
push
push
lret
push
push
xchg
adc
cs
loopne
xchg
sbb
imul
jle
popa
inc
loopne
cmp
dec
in
push
or
hlt
leave
pop
mov
jae
sti
fxtract
cmp
bound
mov
xchg
or
pop
outsb
xor
pushf
insl
repz
lods
push
push
push
enter
movsl
out
inc
mov
xorl
enter
cli
pop
out
in
pop
in
pop
adc
ret
cwtl
and
inc
notl
pop
adc
out
dec
stos
insl
shlb
jp
in
xchg
mov
xchg
jbe
lret
pop
fdivrs
in
push
movsl
iret
mov
jmp
inc
test
add
sub
pushf
jns
xchg
in
jbe
in
push
call
sbb
push
mov
push
dec
push
mov
inc
push
dec
jno
loopne
push
scas
xchg
imul
sub
lea
adcb
sahf
out
fwait
push
dec
mov
mov
test
sbbl
in
jge
pushf
push
call
scas
sub
cmc
addr16
je
and
scas
je
sub
xchg
xchg
jmp
pusha
int3
jl
mov
inc
adc
cmp
xor
xor
movsl
loopne
pushf
mov
out
rcrl
outsb
in
lret
sub
jnp
adc
cmc
fs
jae
dec
mov
jg
call
mov
mov
aam
in
icebp
lret
mov
mov
imul
shlb
sahf
xchg
adc
jo
mov
adc
jnp
std
in
or
xchg
xor
outsl
jo
sub
xchg
mov
scas
xchg
jle
lret
out
ja
jae
loop
mov
xlat
jbe
mov
mov
adc
dec
int3
ja
repz
aad
mov
ds
dec
cmp
cltd
mov
fdivl
jae
or
fisubs
sahf
pop
xor
push
jo
jno
or
jo
and
ja
pop
cmc
cmp
stos
lret
mov
add
sub
insl
or
pop
test
ss
scas
loopne
ds
mov
pop
loopne
sbb
mov
xchg
insl
mov
jmp
xrelease
das
cmp
in
push
mov
std
bnd
adc
push
pushf
sbb
sub
dec
cmc
adc
lret
insb
pop
arpl
insl
jae
icebp
out
mov
add
into
jo
pusha
xchg
fucomi
mov
mov
ficoms
sti
jns
dec
test
xchg
jo
iret
gs
fwait
cmp
mov
dec
jo
mov
ds
add
enter
push
jo
or
mov
inc
sub
outsb
imul
mov
jo
les
or
add
fs
pop
imul
jle
addb
jo
pop
xor
xchg
imul
les
pop
lods
sub
gs
jae
xchg
sbb
jo
sub
push
mov
outsb
inc
pop
insl
adc
notl
xor
cmp
mov
imul
leave
pop
mov
inc
jo
or
cltd
jecxz
add
jo
push
lahf
push
push
or
lock
xor
or
loopne
jecxz
pop
lea
loop
jae
push
mov
cmp
jnp
jae
inc
loop
dec
outsl
push
pop
mov
jo
mov
push
add
jo
scas
dec
and
adc
push
or
pop
or
pop
rolb
mov
call
xlat
clc
xor
xor
push
cmp
nop
rcll
pop
jo
inc
dec
sbbl
ja
mov
test
daa
data16
aam
jmp
jo
loop
cmp
arpl
inc
push
ret
and
dec
jb
mov
lcall
stos
hlt
je
cmpsl
xchg
xor
subb
lock
jo
inc
fwait
repnz
popa
pop
lock
sbb
cmp
pop
cmp
jo
mov
ror
mov
jo
mov
movsl
cld
jbe
ja
xor
fadds
stc
xchg
xor
test
sbb
or
mov
mov
jo
pop
xor
lahf
fisttps
out
jae
pop
cmp
and
mov
add
sbb
cwtl
jp
jo
xchg
lds
jne
loope
js
inc
dec
jg
test
push
shrl
jnp
xor
lret
popf
mov
jo
pop
pop
mov
mov
pop
pop
je
shll
imull
add
xchg
rcll
repz
jg
jno
mov
mov
jl
adc
ret
and
push
jp
sbb
add
ljmp
fs
pop
dec
test
pusha
mov
lea
xor
mov
enter
sbb
jb
gs
mov
loopne
and
incb
test
je
je
fistps
xchg
cmpsl
movsb
lcall
sub
ja
das
nop
mov
jp
and
adc
jo
add
or
cmp
jnp
or
aam
fldl
pop
dec
hlt
inc
xchg
loope
jo
xor
repz
push
jmp
jo
dec
mov
jl
lods
jns
cmp
mov
sub
dec
mov
iret
outsb
pop
jo
or
rcll
xor
enter
add
and
sbb
mov
xorb
and
loope
enter
mov
test
popl
ds
sbb
iret
jl
cmp
dec
jne
xor
lahf
sub
out
cltd
call
inc
push
movsl
lods
cmpb
scas
dec
fadd
lock
cld
mov
jo
sbb
mov
jo
scas
shlb
ja
cmpsb
jo
add
dec
dec
insb
mov
shl
iret
dec
jo
outsb
mov
in
sub
mov
dec
jl
scas
push
cmp
pop
and
enter
int3
dec
movsl
fldcw
and
sbb
aad
es
xor
and
add
pop
push
cwtl
fildll
push
ljmp
es
jp
jnp
jnp
cmp
stc
jmp
adc
fsubs
mov
in
jmp
cmp
and
inc
pop
lret
inc
movsb
cwtl
pop
lods
lret
dec
pop
and
jo
sahf
loopne
shrl
les
sbb
int
shrb
inc
push
lret
mov
clc
jecxz
outsb
xchg
ret
mov
rcrl
nop
cli
push
xchg
dec
adc
push
fdivrs
movsl
and
rcrb
xor
repz
cmp
clc
pop
push
xchg
jnp
in
movsl
dec
xchg
or
imul
adc
lock
in
cmpb
idivb
jae
adc
jge
jb
pop
outsl
xor
shl
xorb
mov
int
cwtl
mov
icebp
pop
fisubrs
cwtl
mov
pop
loopne
lret
inc
sbb
push
cli
aad
jp
insb
jecxz
ss
cmc
pop
jmp
pop
inc
sahf
jne
cmp
fidivrl
scas
pop
data16
inc
sub
jno
cmpsl
lret
out
shr
dec
push
loop
popf
inc
inc
ffreep
stc
shlb
xchg
jl
pop
add
fnsave
das
xchg
inc
test
fidivs
jnp
cmpsl
es
pop
push
dec
adc
sbb
daa
scas
push
mov
or
xchg
xchg
insb
ret
sub
sti
jp
mov
or
xchg
or
lods
arpl
xor
out
and
cmc
mov
andb
bound
ss
insl
in
xchg
cli
stos
sbb
or
mov
ds
pop
es
xchg
in
push
sub
fimuls
sbb
push
cltd
fs
insl
fwait
sbb
jne
inc
fcompl
popf
lods
pmaddwd
std
pop
xlat
int
cwtl
loope
das
loope
jg
sti
dec
outsb
leave
xor
pop
in
loopne
pop
repnz
es
push
xchg
pop
or
jnp
cmp
mov
les
sti
out
lea
adc
mov
or
rolb
sbb
push
scas
cmp
mov
pop
mov
push
fs
out
inc
or
xchg
es
stc
fcomip
pushf
ljmp
or
cltd
lds
jmp
xor
in
push
mov
push
and
push
mov
in
daa
test
pusha
adc
enter
lock
cmp
inc
jnp
sbbb
sbb
cmpsb
add
jns
outsb
or
sbb
and
or
inc
push
test
inc
push
cli
lret
in
jmp
pop
mov
popf
cwtl
sub
mov
jbe
push
daa
bound
sub
xor
ret
sar
jae
int3
jo
push
shrb
and
sbb
adcb
jb
or
xchg
jo
gs
hlt
inc
sub
dec
or
fwait
push
insb
jo
lds
sub
pop
xchg
cmpsl
sbb
aad
subb
push
xchg
mov
or
dec
mov
int
xorl
sbbl
sub
rol
xor
xchg
and
lret
cmpsl
lahf
loop
into
nop
jo
pop
and
dec
xchg
mov
inc
inc
test
cmpsb
xor
xor
or
jo
jp
lock
xor
jmp
xchg
xor
add
jo
add
xor
dec
mov
jo
sahf
or
mov
aad
sbb
jo
js
cmc
pop
xor
pop
dec
cmp
jne
loope
xchg
imul
xchg
and
sbb
jg
jnp
sahf
adc
sub
xchg
fnstenv
loope
jl
bound
jo
add
add
roll
enter
fbstp
mov
arpl
mov
popf
jo
pop
imul
sbb
jo
push
rolb
or
ljmp
insb
or
mov
daa
sbb
or
xor
dec
ds
jbe
adc
and
mov
fimuls
adc
cwtl
jo
push
imul
andb
xor
sarl
mov
jo
gs
iret
push
repnz
out
push
sbb
and
pop
xor
popf
jo
out
sbb
sbb
subb
and
test
sbb
jg
xchg
xchg
inc
lods
pop
test
xchg
inc
sub
jne
and
pusha
add
adc
jb
shlb
out
and
jle
mov
stos
ficoml
popf
jo
addb
mov
xor
fildl
mov
into
xchg
sub
xor
mov
adc
je
push
or
test
repnz
cmp
xchg
jo
pusha
inc
push
and
inc
jmp
pop
xchg
mov
enter
bnd
cmp
arpl
shl
adc
nop
sbb
shl
pop
mov
and
movsb
adc
popf
addr16
pop
pop
mov
lret
dec
in
addl
es
mov
jo
lahf
dec
in
leave
ja
popa
add
inc
jmp
push
pop
cli
lahf
sub
jnp
popa
enter
addr16
sahf
xor
add
mov
loop
mov
les
mov
xchg
in
outsb
add
ss
fisttps
lods
jo
pop
stos
xchg
xchg
xchg
xchg
sub
mov
xchg
lock
mul
push
pop
stc
js
jle
jo
int3
push
sub
or
jp
sbb
pusha
lea
ds
inc
cwtl
jne
dec
add
pop
jo
sbb
jl
jo
push
or
sbb
test
stos
and
pop
lods
shrb
adc
loopne
cmp
push
or
jl
sbb
jns
rcl
es
mov
cs
inc
data16
push
cmp
jl
mov
xor
movsb
ret
stos
loop
mov
hlt
lret
mov
jo
int
sbb
ficompl
fimuls
or
dec
sbb
add
sub
inc
cmp
stos
pop
jae
ds
je
fwait
rol
hlt
inc
sbb
jo
pop
inc
push
dec
xor
jo
in
pop
xchg
or
in
mov
inc
cmp
icebp
xchg
jo
lock
jl
mov
xor
mov
dec
sub
jbe
add
jo
cmp
inc
xor
push
jo
inc
scas
inc
xlat
jno
adc
xchg
shrb
mov
sahf
mov
enter
fdivrl
test
in
loope
dec
mov
loop
or
nop
fdivp
lods
xchg
xchg
jo
mov
popa
xor
or
shll
cmpsb
iret
mov
out
adc
add
mov
pop
je
xchg
jl
jo
test
mov
into
das
dec
sub
adc
loopne
mov
jp
fcomp
mov
subb
sub
adc
outsl
adc
pop
idivl
and
test
push
mov
addr16
push
nop
add
xor
add
adc
jge
jo
push
data16
ja
jo
push
adc
fnsave
mov
into
dec
or
push
stos
shll
sahf
leave
mov
filds
enter
pusha
aaa
add
cmp
aad
fs
insb
xor
and
fisubrl
mov
mov
push
xchg
imull
pusha
add
or
and
sbb
loopne
mov
xor
pop
push
lahf
aam
mov
mov
mov
mov
shrb
out
cmp
fwait
lahf
mov
sub
inc
xchg
ja
nop
and
jne
xor
push
insl
std
mov
jge
stc
xchg
jo
pop
push
push
rorb
test
dec
das
inc
ja
xor
fstl
rcrb
xchg
lods
call
xlat
cmp
jo
idiv
mov
int
roll
push
iret
lea
xchg
sbb
xor
push
ja
nop
test
mov
or
repnz
call
mov
jo
cmp
lock
shll
fwait
xor
pop
jecxz
push
icebp
mov
pop
lcall
js
lahf
imul
pop
sub
sahf
add
inc
add
or
repz
mov
mov
xorb
in
pop
in
mov
jo
sub
movsl
and
stos
inc
ret
outsl
fwait
xchg
lods
loope
jg
adc
adc
mov
and
xor
cwtl
das
jo
rdpmc
lds
insl
nop
loop
inc
iret
mov
test
jne
mov
push
sbb
ja
movsl
js
jo
push
test
jmp
rorb
lods
sbb
xorl
aad
aas
mov
jo
sub
adc
in
dec
and
stos
mov
repz
jne
inc
aam
les
sub
push
adc
cwtl
sbb
mov
dec
mov
jo
lret
mov
mov
cmp
outsb
js
dec
adc
jno
mov
jo
add
movsl
adc
mov
ficoml
scas
pop
jo
ss
xor
jl
lods
inc
pop
mov
sbb
test
insl
xchg
mov
inc
lret
cmp
mov
cmp
sbb
lock
movsl
push
pop
inc
sub
in
insl
mov
pop
jo
sbb
imul
orl
xor
or
add
pop
es
jo
jmp
push
std
xorl
cld
jne
jns
iret
insl
push
into
push
jl
insb
mov
sub
dec
and
loopne
scas
jo
push
or
jge
xor
push
insl
inc
push
inc
loopne
xchg
cwtl
insl
pop
pop
insb
mov
mov
pop
mov
popf
nop
pop
or
jo
inc
sar
cmpsl
daa
insl
mov
push
jns
stos
rcll
jp
cmp
push
mov
sub
pusha
mov
loope
xchg
jp
and
cmp
sub
int3
pop
jo
mov
or
xchg
xchg
cli
js
mov
pop
hlt
outsb
cmpsl
test
les
fdivl
xchg
mov
and
xor
lcall
inc
jo
outsl
pop
ds
inc
gs
jbe
xor
out
add
mov
test
enter
inc
mov
das
jle
jnp
leave
push
aaa
test
jo
xor
inc
mov
sahf
cmp
rorb
popa
jo
or
push
das
or
jbe
rcrl
mov
inc
nop
fbstp
push
xchg
xor
sarl
jo
and
fdiv
out
cs
xchg
jo
add
sub
mov
push
nop
push
cmp
jo
cs
jp
cmp
lahf
cmc
xor
iret
xchg
and
push
test
jecxz
add
jo
jne
bound
jmp
xchg
xor
mov
add
addr16
mov
pop
jo
push
mov
jg
dec
add
mov
test
das
xor
jo
fdiv
jge
rclb
or
jle
jae
xor
shrb
outsb
fisttpll
jo
ja
pmaxub
sbb
push
pop
xor
jb
jg
xor
add
cmp
adc
push
cmp
mov
jo
jae
in
and
sub
xlat
or
negb
pop
jo
sub
cmc
jo
rcll
cli
and
xchg
jo
lcall
jo
xchg
ficomps
xorl
pushf
and
mov
or
lcall
sbb
je
inc
inc
xchg
or
mov
jo
lods
jbe
or
pop
mov
je
pop
scas
cwtl
mov
mov
outsb
jno
mov
and
insb
addr16
xchg
jno
cwtl
subl
arpl
aas
pop
fisubl
pop
xchg
inc
pusha
sbb
sbb
orl
mov
sbb
pop
cmpsl
shll
in
imul
outsl
push
cmp
sbb
addr16
xchg
xor
mov
pop
jge
and
jl
fadd
xchg
dec
nop
jp
jle
jae
aad
repz
rcrl
popf
jno
dec
popa
scas
insl
andl
xchg
pop
negb
push
imul
mov
into
and
jb
mov
jbe
cmc
mov
stos
jg
push
add
push
mov
das
push
push
scas
jge
flds
scas
add
popf
ja
lock
or
and
and
xchg
cmpsb
test
mov
aas
shr
sbb
cltd
sub
or
fldenv
jnp
inc
movsl
cld
jl
pop
loope
dec
lds
sti
cmc
aas
xor
pop
lods
ljmp
sub
inc
jo
push
das
ljmp
mov
mov
mov
daa
dec
pop
and
stc
leave
lock
add
stos
jo
cmp
cwtl
out
sub
lock
cmp
bound
ficoml
sbb
and
das
jo
repnz
jbe
and
outsl
pushf
inc
pop
push
out
add
sub
repz
nop
mov
rclb
shrl
test
in
xchg
cmp
mov
jo
mov
scas
mov
mov
sbb
jp
repnz
icebp
mov
je
test
jo
mov
scas
in
fwait
mov
jo
pop
loopne
sbb
shlb
pusha
or
jb
ja
pop
pop
cli
cmp
adc
orl
jo
jns
jecxz
leave
rcrb
test
and
jo
push
push
jl
xlat
add
adc
jo
cmp
roll
call
jp
stos
lds
dec
jb
sbb
std
addr16
mov
xchg
jo
mull
data16
xchg
scas
add
inc
int3
push
fidivrl
lret
sub
loop
lock
sti
fsubrl
lock
fstpt
out
arpl
adc
jo
jae
sub
mov
and
jo
push
mov
push
and
mov
push
xchg
sbb
sub
jo
loop
lock
xchg
jo
andb
sbb
mov
add
pop
nop
out
fsts
jo
in
sahf
adc
and
jg
cmp
fdivrl
fldl
dec
jae
leave
and
mov
js
sub
arpl
jl
inc
jo
insl
out
lcall
repz
outsl
in
sub
dec
scas
les
adc
das
adc
imul
mov
int3
dec
fldl
dec
sarb
xor
lock
jmp
dec
adc
pop
out
arpl
jo
stos
sub
inc
out
subl
mov
cmp
adc
sbb
cmpsl
cmc
mov
xor
pop
fcomip
mov
ja
jnp
mov
aad
adc
lcall
outsb
dec
xchg
or
lock
cmp
pop
push
iret
jecxz
sahf
sub
sahf
inc
or
push
cwtl
je
jo
push
call
push
mov
xchg
push
and
test
enter
adc
jo
into
int3
pop
test
adc
xchg
jae
jp
dec
add
push
cltd
out
adc
jo
sti
lds
mov
aas
jo
negb
clc
insl
cli
cmp
lods
mov
jp
add
jo
pop
in
fdivl
lret
jg
sbb
cs
jecxz
or
jo
sub
mov
mov
mov
je
mov
pop
cli
clc
pop
jo
mov
cmc
pusha
jae
hlt
idivl
clc
mov
pop
jo
mov
enter
push
jo
in
adcb
ret
lock
lret
cmpsb
sahf
fs
dec
add
pop
mov
pushl
dec
dec
in
pushf
sbb
xor
lock
loop
or
xor
dec
fidivrs
mov
and
outsb
mov
pop
jo
cmp
cmpb
lret
shrl
pop
fisttpl
insl
mov
adc
adc
fadd
mov
test
lods
push
in
push
cmp
jo
dec
xlat
and
jno
cmc
jo
fistl
nop
cld
aaa
mov
jo
inc
cmp
and
cmc
jg
fnsave
mov
add
inc
inc
jle
insl
lret
dec
jb
fwait
mov
mov
jo
fst
pop
dec
mov
pop
test
data16
popf
fcmovne
or
mov
jo
dec
mov
jo
or
pop
jo
jl
or
pop
mov
jecxz
xor
rcrl
mov
pop
lret
sbb
icebp
push
xor
arpl
call
and
insb
clc
adc
sub
xor
or
sbb
pop
mov
push
jo
cltd
inc
xchg
mov
bound
adc
inc
jno
jp
es
lret
pop
add
cli
mov
mov
leave
dec
aas
faddl
scas
lahf
in
pop
out
adc
add
mov
mov
push
cmp
jo
xchg
mov
mov
pop
or
aas
mov
xor
clc
add
iret
and
cwtl
inc
mov
cmp
pop
sbb
jne
adc
ljmp
mov
fidivrl
lods
or
mov
jo
shl
lea
and
mov
cmpsl
sbb
sbb
nop
hlt
cmp
cmp
adc
jo
push
ficompl
dec
enter
and
rolb
cmc
push
push
mov
xor
fidivrs
mov
push
cli
mov
push
mov
shrl
jp
insl
lret
jo
and
call
insl
mov
mov
in
jno
jne
jo
addr16
mov
and
fdivs
popf
out
adc
pop
xchg
cmpsb
aam
fdivrl
mov
jb
jge
sub
mov
sub
sbb
mov
iret
imul
jo
fcomi
pushf
out
mov
into
mov
insl
adc
js
inc
adc
in
movsb
pop
push
sub
mov
mov
inc
outsb
sbb
pop
or
insl
adc
jo
push
push
mov
dec
jecxz
testb
sub
daa
xor
dec
lret
add
jo
mov
mov
insl
mov
ja
dec
ficompl
shl
pop
add
cmp
dec
push
pushl
jo
es
bound
notb
fidivrl
adc
pop
jae
cmc
ret
sub
outsl
or
mov
jo
adc
je
jae
shlb
imul
or
jne,pt
loopne
mov
ret
imul
xchg
addr16
jo
cltd
xor
xchg
dec
out
push
xor
mov
push
dec
pop
call
repz
mov
jne
push
in
in
or
mov
enter
inc
mov
push
aas
js
jo
imul
cwtl
xchg
out
inc
iret
add
rcrb
cltd
enter
cli
fsubs
mov
ret
jecxz
mov
enter
or
dec
jo
shl
and
mov
movsl
enter
jle
mov
roll
mov
or
xor
pop
shlb
push
xchg
movsb
jo
mov
push
sbb
add
addl
ja
and
roll
or
rcrb
jo
pop
rorl
jge
jne
in
lock
imulb
add
std
arpl
mov
pop
ret
js
sub
loop
jo
add
inc
loopne
or
insl
cs
xor
xchg
lds
mov
push
jo
jne
adc
cmp
jo
xlat
sbb
sub
xor
cmp
jmp
sub
ljmp
xorl
daa
jae
or
icebp
sub
mov
and
pop
jge,pt
jo
jle
adc
stc
sbb
mov
adc
call
loop
stos
and
std
ja
pop
aaa
rcll
mov
ljmp
jmp
dec
aas
add
push
add
xchg
xor
pop
push
or
mov
movsl
jae
pop
pop
je
add
inc
inc
testb
in
push
fstps
js
enter
push
push
sub
mov
jg
lock
sbb
stc
test
xor
ja
cmp
pop
inc
ljmp
jge
dec
jl
neg
les
gs
popf
rep
or
mov
scas
mov
and
xchg
cmp
mov
dec
inc
push
add
test
lock
cmpl
cwtl
cmp
push
dec
insb
jnp
imul
xchg
pop
jl
orb
cli
xor
push
iret
or
clc
daa
cmp
xor
sti
addl
repnz
pop
pop
ret
mov
enter
cs
mov
iret
call
mov
fs
or
pop
or
imul
test
test
sarl
add
das
dec
push
cwtl
cmc
mov
adc
shr
pop
pusha
mov
or
mov
iret
pushf
push
dec
jmp
push
loope
mov
fdivrs
lock
cwtl
sbb
add
pop
adc
xor
or
adc
or
lods
ljmp
push
inc
sub
out
and
fiadds
insl
xchg
in
sbb
dec
pusha
clflush
adc
cmp
dec
je
les
jp
lret
int
clc
bound
je
pop
mov
xchg
sti
sub
out
pop
sub
mov
std
inc
fsubrl
stc
cld
lock
jae
push
loopne
sbbb
mov
mov
icebp
dec
lock
xchg
cld
test
mov
stos
dec
divl
cli
dec
sub
jmp
mov
in
mov
arpl
xchg
xchg
mov
or
xchg
sub
dec
fisubrs
and
es
rcrl
imul
movsb
rcl
adc
add
loope
call
mov
aad
adc
loop
mov
in
inc
loopne
or
pusha
pop
xchg
and
mov
lea
divl
jo
pushf
dec
movsl
mov
insl
cmp
jl
jo
push
test
xchg
jo
add
test
cmpsl
jns
fs
lock
out
das
inc
xchg
test
inc
lds
cltd
leave
jo
sti
js
xor
dec
pop
jo
out
lret
aad
jo
je
fistps
nop
cmp
jo
adc
stos
loopne
sti
imul
loope
xchg
mov
jp
movsb
fisttpl
mov
nop
add
dec
dec
cwtl
rcl
orb
arpl
add
inc
jo
fstpl
jo
sahf
fld1
push
or
jno
dec
push
add
insl
jge
je
adc
inc
int3
pusha
jo
in
scas
mov
xchg
dec
jo
lret
fidivl
ficomps
dec
ja
xor
pop
mov
outsl
sbb
es
mov
and
sbb
xchg
lea
ja
movsl
jno
push
xor
dec
loop
jae
pop
insl
push
rcl
lcall
cmp
movsl
cmp
loope
imul
fnstsw
test
shll
movsl
push
sub
jo
and
mov
or
mov
into
insb
call
lock
pop
das
push
jo
mov
cmp
pop
dec
jne
test
int3
out
lock
mov
jo
out
insl
out
cmp
or
cmc
loopne
lea
dec
xchg
in
pop
jo
pop
mov
push
loop
jb
dec
shlb
loope
pop
jge
xchg
int
fadds
lds
in
and
jp
rorl
mov
ret
inc
inc
in
pop
jo
mov
rorb
jb
stc
cmp
dec
cmp
imul
jo
ljmp
jo
fucompp
xchg
aaa
aam
stc
jo
lds
sbb
push
mov
inc
xor
ljmp
ja
ret
sahf
pmuludq
rcrb
mov
cmp
jo
dec
fiadds
xorl
loop
lahf
sbb
out
jnp
mov
pop
pop
cmp
les
lock
lods
andb
sbb
xchg
mov
mov
inc
pop
pop
mov
or
jo
xor
fcoml
fadds
jo
mov
in
incb
icebp
negl
add
jo
sbb
xchg
imul
int3
jo
push
scas
in
data16
jo
icebp
inc
or
enter
cld
loop
adc
loope
jno
pusha
jg
cld
dec
or
sbb
mov
aas
jge
scas
jp
shll
mov
pushf
pop
or
clc
in
inc
das
sbb
pop
js
mov
leave
mov
loopne
cld
pop
adc
fidivrl
mov
xchg
jo
test
insb
jo
inc
mov
dec
sbb
xchg
jo
mov
ss
sub
sbb
xchg
das
jb
ja
mov
aad
xor
mov
push
and
fs
arpl
stos
jo
jnp
cmp
stos
mov
xchg
insl
sbb
fsubs
jo
pop
fidivrl
jo
js
addr16
or
jo
mov
dec
cmc
jo
jb
mov
add
jo
jg
xor
movsb
lcall
xor
scas
adc
mov
ds
mov
ret
dec
pop
mov
jmp
test
cwtl
push
bound
pop
lcall
dec
jno
les
xlat
pop
cmp
push
inc
jo
jae
cmc
fistl
cmp
dec
sbb
data16
call
pop
leave
jno
cmc
jo
dec
icebp
cwtl
daa
jae
and
adcb
push
dec
roll
pop
lea
jo
jp
dec
loopne
xlat
es
or
subb
bound
cmp
test
ja
fildll
les
xorb
dec
fnstsw
jo
jl
sahf
ja
jp
jo
test
lock
jno
decl
mov
dec
xor
adc
cmp
jo
dec
cmp
out
sbb
ljmp
mov
jae
insl
sbbl
sbb
jge
adc
sub
jo
xor
cli
jo
mov
mov
push
repz
in
inc
dec
jno
daa
and
ja
test
mov
mov
rcr
nop
daa
or
insl
mov
push
das
imul
or
addr16
add
fidivs
sub
aad
or
inc
shl
xchg
int
imul
pusha
imul
dec
xor
fidivrl
add
lea
jno
sbb
jmp
or
inc
push
lock
sub
sbb
arpl
scas
jo
or
and
add
lock
ja
ss
lods
mov
mov
jbe
and
mov
testb
mov
xchg
jb
add
jle
jl
les
mov
push
or
lret
cmp
subl
add
and
das
pusha
lods
jecxz
fcomp
iret
jl
lods
test
pop
jae
inc
and
pusha
imul
stos
es
xor
lock
pop
jo
jge
mov
out
dec
jo
inc
cmp
xchg
mov
in
jo
xchg
lock
pop
or
push
fisubs
mov
xchg
dec
aas
pop
jo
or
pop
mov
movsl
and
test
xchg
shll
out
aam
fiadds
mov
iret
mov
loop
nop
push
rorl
mov
outsb
xor
xchg
nop
imul
insb
lcall
sbb
lods
jne
lock
inc
jo
xor
mov
fs
push
test
cmp
das
jo
mov
insb
jo
stc
lcall
sbb
test
cmpsl
and
jne
cmc
lds
cs
dec
mov
jo
insl
repnz
mov
adc
cmpsl
not
push
mov
jo
pop
xor
jo
pushf
dec
cmp
jle
jecxz
pusha
xor
clc
cs
jmp
dec
jo
cmc
mov
cmp
into
je
xorw
les
jmp
lcall
stc
pop
roll
or
jo
in
dec
or
mov
jo
jne
and
nop
mov
mov
pop
xchg
imul
xchg
push
pushf
pop
sub
out
cmp
lock
test
cltd
cmp
xor
nop
out
sub
inc
jo
mov
lret
cmpsb
push
jb
and
sub
cmp
lock
jo
fcompl
and
int3
fs
mov
lahf
aas
das
fsubrs
xor
popf
loopne
ret
pop
jnp
adc
addr16
jo
adc
in
pop
cmp
jo
push
cmpsb
cmp
sbb
sbb
push
bound
and
pop
mov
enter
cmp
lret
les
mov
fcomps
adc
xlat
jo
sub
popf
cmp
dec
jo
adc
jo
mov
dec
call
inc
test
mov
push
pop
push
decl
cmp
insl
xor
jo
mov
jo
out
out
mov
cmp
repz
lret
mov
insb
inc
jo
cli
xor
scas
push
jmp
inc
cltd
xchg
lods
mov
push
ljmp
dec
pop
outsl
sbb
inc
imul
sub
push
fldenv
jo
cmp
loope
pop
ss
stos
sub
sbb
icebp
shlb
aas
xchg
loop
push
push
pop
sub
stos
imul
mov
jo
outsl
add
mov
hlt
push
insl
stos
push
xor
ss
mov
mov
out
push
mov
aas
lret
mov
and
xor
and
xchg
dec
pop
pop
rcrl
lods
sub
pusha
mov
icebp
mov
aad
mov
cli
mov
mov
outsb
scas
fisttpll
pushf
mov
sub
pop
jo
jecxz
aad
dec
fdiv
jo
jno
data16
repz
mov
dec
or
ja
ljmp
push
jo
cmp
mov
inc
sub
mov
ljmp
jmp
cld
outsb
mov
push
pop
arpl
mov
fs
jge
ficoml
loope
sub
das
jae
inc
mov
xlat
lcall
repz
repz
inc
or
push
inc
ljmp
sahf
cltd
insl
push
loopne
fwait
daa
cmpsl
movsl
xchg
test
int3
jo
bound
fistps
movsb
lret
mov
movsl
push
leave
call
jmp
jge
add
jo
xchg
push
gs
jo
shr
add
jp
out
or
xor
loope
push
pop
mov
jo
mov
test
jp
sbb
push
fidivrl
fldenv
out
jo
sub
loopne
in
push
adc
hlt
lret
pop
imul
push
push
jo
pop
adc
mov
push
inc
xorb
lock
xchg
cmc
mov
and
mov
cmp
popf
loop
jo
xor
inc
dec
adcl
loopne
popf
mov
ja
jmp
out
xor
loope
mov
hlt
testb
outsb
clc
adc
xor
mov
push
jo
or
cmp
rorw
jbe
jle
aaa
push
cmpsl
ret
jo
dec
or
fwait
out
add
pop
insb
sub
xor
ljmp
push
repz
inc
js
repz
iret
insl
xchg
mov
rcl
xor
mov
clc
mov
mov
fcom
ljmp
in
jle
lahf
add
jo
inc
push
cmp
add
jg
outsl
divb
inc
xor
cwtl
cltd
cmpsb
jo
stos
sub
imull
std
sbb
sub
xor
insl
jns
gs
cwtl
in
dec
mov
testb
bnd
iret
sub
je
scas
jl
ficomps
rep
adc
xchg
mov
ss
push
pop
movsl
push
jnp
pop
mov
nop
cmc
stos
push
adc
testl
xchg
mov
push
movsb
push
insl
sbb
std
push
xor
sbb
ret
sub
int3
imul
mov
les
addr16
mov
daa
nop
add
push
sbb
add
xor
iret
ss
cmpsl
hlt
push
sbb
or
cwtl
sub
movsb
movswl
fdivl
je
jnp
cmc
pop
pushf
imul
js
jnp
sbb
in
leave
arpl
nop
pop
push
mov
aam
xchg
mov
repz
push
or
js
sub
shl
add
mov
into
div
popa
out
in
pop
pop
push
movsw
lock
mov
test
xor
loope
in
cmp
xchg
leave
add
insl
xchg
inc
mov
add
fs
test
lcall
sub
jae
shlb
adc
sbb
cs
mov
fdivs
or
xchg
loop
cmp
jno
xor
sbb
shrb
and
xor
cmpb
js
nop
or
rcrl
repz
pop
rorl
shrb
mov
stc
jmp
mov
scas
or
sarb
mov
adc
cmpsl
sarl
adc
dec
inc
nop
test
push
cld
xor
leave
push
faddp
mov
and
mov
out
pop
add
jo
cli
call
test
mov
pop
dec
pop
push
add
out
loopne
jl
mov
and
and
xor
inc
outsb
pop
push
jae
inc
push
imul
daa
push
sbb
add
mov
out
push
adc
jbe,pn
es
or
inc
cmpsb
mov
sub
out
or
fnstsw
cwtl
test
or
shl
stc
fcoml
or
mov
jl
cwtl
test
sub
push
pop
pop
xor
push
xchg
push
test
shrl
sub
jo
aad
rcll
pop
lock
inc
and
mov
iret
add
outsl
or
cwtl
mov
sbb
xchg
push
out
xchg
in
out
pushf
test
imul
cwtl
pop
mov
lea
cmp
adc
imul
push
idivl
mov
lret
xchg
push
and
inc
inc
daa
icebp
jl
lret
jb
lods
cld
cmc
xor
mov
mov
aaa
insb
sbb
mov
jne
scas
in
pmullw
testl
push
imulb
mov
fadds
dec
fisttps
mov
or
addr16
push
push
xchg
cmp
push
inc
push
cwtl
hlt
cwtl
call
xchg
xor
push
in
mov
add
push
movsl
clc
jne
push
pusha
notb
mov
mov
jbe
adc
push
in
fimull
cwtl
int
lods
inc
pop
in
sub
sbb
jb
pop
xor
scas
lods
adc
pusha
ret
xchg
xchg
add
lds
scas
pusha
cli
mov
sbb
clc
mov
inc
cwtl
lcall
daa
jl
sti
jl
sub
data16
or
and
xor
cmp
sbb
push
call
push
cs
ja
test
xchg
pop
and
fimull
test
jp
mov
mov
jo,pn
mov
test
jmp
xchg
mov
idivl
cmpsb
jo
loope
add
jb
mov
stos
and
imulb
cltd
xchg
hlt
mov
xor
inc
pop
ja
dec
call
jno,pn
jbe
lods
je
loopne
mov
sti
lods
int3
mov
cwtl
jmp
sbb
movsb
test
push
in
jo
xor
outsb
in
push
insl
shrb
in
push
inc
pop
inc
mov
and
adc
xchg
jns
cs
adcb
scas
or
mov
std
ja
jb
cmp
push
stos
pop
pop
cmp
out
dec
jmp
out
push
aam
cmp
jo
enter
fs
divl
outsb
test
insl
push
cmc
jp
pop
mov
rcrb
repnz
dec
push
sub
adc
mov
fwait
mov
add
jo
pop
outsb
popf
imul
or
mov
push
fwait
jns
jo
ljmp
jo
jge
out
mov
adc
cmpsb
bound
sbb
stos
pop
jo
adcl
std
aad
jo
inc
sub
stc
sar
xor
jo
movsb
int3
mov
or
mov
pushf
push
sbb
mov
mov
mov
inc
ret
or
push
push
dec
out
sub
outsb
and
mov
ret
arpl
in
jo
sbb
loop
cwtl
pusha
mov
xor
mov
and
jbe
fadds
insb
jo
jno
mov
rclb
ret
pop
pop
jo
fsubrl
addr16
add
pop
test
adc
or
adc
xor
insl
mov
mov
cltd
mov
sarb
cmpsb
xor
test
jle
push
pushf
cli
jo
dec
mov
xchg
bound
inc
lahf
lock
add
jo
add
dec
or
mov
fdivl
and
mull
push
flds
fwait
push
push
mov
mov
xchg
lock
mov
jo
mov
xor
jae
mov
lock
add
or
or
hlt
mov
jo
sahf
rolb
sub
sbb
adc
movsl
mov
bnd
das
xchg
mov
notl
cmp
fbstp
call
sub
insb
lcall
pushf
or
test
inc
imul
jo
lods
fbstp
sahf
push
mov
cmp
mov
jo
clc
and
jo
sub
mov
xor
mov
popf
lds
inc
dec
cmp
pusha
ret
or
jo
popa
std
jb
addb
jae
dec
mov
or
mov
push
arpl
cmpb
dec
dec
dec
push
jmp
mov
stos
es
fnstenv
pop
popf
sub
or
and
mov
insb
dec
insl
adc
add
jo
lods
mov
inc
or
pop
jo
or
out
arpl
out
add
inc
test
out
jo
ljmp
leave
inc
xchg
lds
lret
fisubrl
dec
mov
and
jno
dec
lock
aad
mov
xorb
mov
insl
and
icebp
xchg
sub
daa
pop
sbb
cmpsl
mov
daa
push
lret
mov
xchg
add
jo
xorb
ret
arpl
jo,pt
or
lret
mov
enter
cld
mov
or
and
mov
inc
sub
pop
sub
fwait
int
push
xchg
imul
xor
shll
inc
outsb
scas
ret
movsl
jo
cwtl
popf
cld
push
xchg
imul
sbb
xchg
and
push
mov
not
pop
mov
insl
loope
mov
push
sub
or
cwtl
bound
movsb
movsl
sub
jns
addr16
xor
inc
xchg
or
insb
add
shll
pop
cs
adc
jo
pop
mov
cwtl
orl
scas
test
jo
push
xchg
sub
push
popa
lcall
fsubl
jo
testl
fnstenv
sub
shll
mov
cmpsl
add
arpl
pop
aas
test
cltd
push
pop
jo
jno
xor
pop
cld
mov
inc
jle
add
or
sub
sbb
push
sete
push
inc
aaa
cmp
mov
adc
push
pop
sbb
jle
sbb
shlb
adc
jp
mov
pop
adc
call
jle
imul
movsb
jmp
mov
xchg
mov
mov
dec
fcompl
pushf
xchg
cmp
pop
test
ficomps
into
mov
inc
sbb
inc
inc
insb
mov
je
fmull
aam
insl
loop
adc
pop
or
jo
addr16
jno
mov
mov
filds
jno
or
cmp
and
fbstp
dec
lds
adc
xchg
jae
jo
pop
push
adc
push
loop
popf
shlb
mov
jo
dec
mov
add
mov
lock
xor
sbb
jo
pop
mov
push
push
mov
adc
sbb
sbb
fwait
arpl
adc
dec
jo
aaa
es
call
adc
add
outsl
jo
aam
lea
pop
xchg
jo
inc
ljmp
int3
jp
lret
push
jo
clc
xor
arpl
jp
inc
adc
sub
push
jo
xchg
mov
dec
testb
test
or
jo
nop
pusha
aaa
leave
int3
out
dec
cmp
inc
mov
sub
xchg
xchg
enter
movsb
enter
mov
dec
jo
mov
lahf
push
jo
cmp
das
bound
icebp
or
push
es
pop
pop
cmp
int3
jp
xor
mov
scas
pop
and
or
pushf
outsb
addr16
sub
cmp
dec
xchg
std
jne
addr16
aad
mov
jo
test
mov
jo
mov
sub
ret
cltd
fs
and
xchg
mov
cltd
or
jo
ljmp
mov
int3
jmp
test
push
xorb
mov
xchg
push
push
jo
and
inc
jo
dec
shrd
xlat
jo
lds
xor
jmp
xorl
adc
mov
dec
cmp
lock
xlat
pop
jo
jl
lcall
adc
push
and
je
scas
fidivs
fbld
jo
mov
pusha
sub
mov
cs
cmp
inc
sar
adc
test
jns
or
jnp
in
sub
push
je
call
popf
cmpsb
test
push
jo
dec
lahf
notb
push
jo
jae
je
and
ret
outsb
dec
push
mov
push
cld
loopne
dec
fdivrl
pop
test
mov
dec
clc
jo
sbb
icebp
mov
jns
pop
sahf
rclb
xor
dec
mov
mov
inc
test
jo
fisubl
inc
jne
adc
aas
loop
mov
mov
mov
shr
and
push
movsb
sub
cmp
rcr
mov
rolb
lods
jo
sbb
clc
ja
lock
fcmovne
addb
stos
add
adc
bound
xor
fdivp
and
mov
jo
arpl
dec
jo
loopne
lea
adc
jno
inc
decb
push
and
add
jb
jo
sti
xchg
adc
push
sbb
ds
dec
loop
xchg
push
imul
cmp
jo
pop
inc
fsubrs
test
jo
arpl
xlat
jo
sysexit
xor
popa
inc
dec
mov
sbb
sub
mov
or
cld
test
out
rcr
sbb
les
add
mov
mov
divb
push
arpl
jo
sbb
icebp
lock
push
cmc
sub
pop
xor
movb
jo
das
push
add
jo,pn
jbe
mov
mov
and
cld
or
jo
xchg
je
jo
xor
and
mov
enter
pop
xchg
nop
pushf
dec
imul
inc
xor
jae
xchg
push
lods
xchg
movsb
enter
jo
cli
aam
pop
inc
divl
mov
and
jo
or
negb
mov
lock
outsl
scas
enter
in
loope
jo
cld
idivl
push
arpl
lds
iret
das
or
sbb
ja
xchg
insl
test
sub
mov
shlb
lds
sbb
and
inc
xor
and
js
xor
push
lods
int
pop
in
pushf
aaa
jno
cltd
aam
cmp
push
jge
pop
xorb
pop
or
inc
aas
jb
lret
push
jg
fwait
subb
jno
lods
dec
sub
cmovae
xor
pushf
inc
jo
or
add
and
std
jo
mov
cs
scas
das
mov
je
scas
out
mov
pop
inc
lret
cmp
ror
pop
lret
jo
popf
xchg
rclb
jo
inc
popa
cltd
adc
pop
repz
mov
mov
cmp
call
cmpsl
xchg
mov
call
cld
aas
sub
orl
mov
push
loop
sub
ret
adc
enter
arpl
lcall
jne
adc
imul
sbb
repz
shrb
lcall
jo
sarl
mov
add
sub
cs
pop
pusha
cmp
stc
push
loop
and
mov
cmp
pushf
ret
sbb
popa
cwtl
push
mov
sub
sbb
fldenv
push
flds
ret
xor
sbb
clc
sbb
sub
mov
ljmp
ffree
or
or
sti
pop
scas
pop
and
je
adc
dec
push
out
shlb
inc
add
jnp
fs
stos
sbb
vxorps
and
shlb
jnp
arpl
movl
mov
xchg
pusha
push
add
mov
mov
sub
mov
add
xchg
je
cmpsl
adcb
add
or
xchg
cmp
adc
test
icebp
insl
inc
jbe
test
mov
mov
adc
movsl
mov
mov
sub
inc
in
mov
jne
test
add
fwait
addr16
out
lods
ficoms
mov
jb
mov
cmpsl
sbb
negb
jge
pop
aam
fcmovne
movsl
movsb
js
push
out
fsts
stc
sti
fldenv
adc
jg
movsl
call
xchg
mov
xchg
ret
repnz
pop
jne
adc
jbe
mov
enter
mov
push
or
lret
mov
sahf
pushf
sti
and
xchg
jmp
cs
cwtl
push
and
int3
inc
movb
mov
xor
dec
xor
push
imul
cmpsb
scas
cltd
cmp
cmp
shrb
in
filds
ss
xlat
ret
callw
or
xchg
or
imul
pop
jns
pusha
je
or
clc
pop
faddl
test
add
loop
pop
sub
mov
roll
adc
loop
pusha
jecxz
rolb
scas
lods
out
dec
in
xchg
pop
cmp
repz
pop
pop
arpl
xchg
lods
add
test
push
mov
xchg
pop
fcom
test
push
cmpsl
mov
ja
jnp
push
or
push
push
jbe
jmp
popf
jne
nop
or
in
test
lock
jmp
inc
or
jne
cwtl
fidivl
mov
arpl
mov
jb
in
dec
or
xor
lahf
xchg
lret
inc
outsb
inc
ret
sub
notl
hlt
xlat
cvtdq2ps
or
jp
cli
es
leave
mov
fldcw
pop
in
cld
aad
test
mov
lock
push
out
push
stc
mov
cwtl
aad
xor
pushf
sbb
pop
cs
jns
cs
int3
cmp
and
fwait
mov
sbb
cwtl
lea
out
jae
dec
adc
daa
lock
push
dec
lret
xchg
insb
lahf
xor
cs
dec
add
xor
icebp
orl
enter
xor
sbb
jns
pop
mov
add
out
jne
iret
and
mov
jae
push
xchg
insb
bound
mov
outsb
cmc
mov
xor
js
adcl
inc
mov
sub
out
jno
jne
or
insb
cli
insl
test
jecxz
jns
sbb
dec
cli
pop
and
out
push
jle
out
jo
shr
push
lahf
call
add
jecxz
dec
xor
mov
rcr
incl
mov
add
jo
dec
fs
movswl
jo
pop
mov
insb
sub
ret
mov
cltd
shll
repnz
das
sar
into
insl
imul
xchg
scas
jl
lods
mov
add
mov
and
out
dec
dec
jns
lock
mov
and
repz
insl
sti
je
pop
bound
movsb
pop
dec
mov
cmp
ror
loope
out
inc
push
sub
fistl
jo
stos
or
jo
aad
cltd
mov
and
imul
pop
sub
cli
popf
jo
imul
stos
mov
push
stos
orl
xlat
leave
add
dec
lret
nop
adc
js
xchg
xchg
dec
les
pop
pop
jo
hlt
seta
adc
cltd
popa
add
jo
iret
cmp
push
jo
aaa
mov
imull
dec
arpl
mov
std
repz
gs
rclb
inc
mov
pop
das
daa
or
je
out
jnp
or
mov
mov
inc
xchg
pusha
es
cmpsl
or
xlat
out
jbe
mov
bound
sub
push
lret
inc
inc
fcoml
lock
mov
test
sbb
pop
pop
mov
mov
dec
jl
xchg
jo
icebp
loopne
out
mov
in
rcrl
dec
push
mov
inc
shl
pop
lock
mov
cmc
dec
mov
je
xor
jo
shll
fsubr
mov
mov
or
insb
xor
sbb
push
daa
loope
jns
xchg
pop
cwtl
jmp
je
sub
bound
lret
add
sub
push
lahf
test
in
jo
cmp
dec
or
test
lods
shl
sti
jns
lahf
cwtl
push
xlat
jl
or
pop
mov
dec
fdivrp
into
jo
in
in
xor
lret
mov
hlt
push
mov
jae
push
push
cmc
aam
mov
adc
push
mov
and
int
cmp
fs
cmp
dec
shlb
xor
lea
test
out
mov
adc
mov
pop
outsb
loop
xchg
dec
mov
lock
xlat
shll
adc
pop
add
jo
fcomps
fwait
out
mov
mov
sub
mov
outsb
fs
cld
nop
sbb
nop
jo
mov
lock
inc
xchg
and
lahf
lret
rorl
xchg
test
push
add
push
es
popa
xchg
out
jo
test
les
xchg
pop
call
pop
push
add
mov
jo
mov
mov
jp
xchg
clc
or
xchg
movsl
or
xchg
hlt
or
jo
lods
xchg
cld
mov
stos
fwait
mov
lcall
jo
aaa
jl
or
cmpb
fisubl
jo
fwait
xchg
and
jo
popf
push
arpl
mov
xchg
imul
jnp
jmp
iret
pop
lods
jb
mov
jo
xchg
test
ret
push
pop
sbb
push
mov
pop
pop
xchg
jo
add
jl
out
inc
sarb
stos
or
jnp
imul
push
call
in
and
leave
pop
mov
dec
add
mov
jnp
gs
inc
sarl
cmp
xor
dec
fadds
cs
rorl
jo
pop
adc
mov
mov
mov
add
jo
mov
lret
dec
mov
jo
cmc
jecxz
mov
out
jo
dec
cmp
insl
sbb
inc
or
jp
das
fstpl
push
add
adc
into
mov
mov
movsb
push
lods
hlt
push
push
xor
sti
jge
iret
mov
mov
push
insl
mov
clc
sbb
test
adc
mov
insl
and
jno
inc
pop
adc
lcall
sub
scas
jno
movsl
mov
add
jo
xchg
mov
sbb
jo
push
out
push
mov
xchg
arpl
sub
mov
jecxz
cmp
jo
pop
movsl
ret
xor
or
xchg
and
xchg
jnp
insl
add
dec
push
add
mov
jne
imul
xchg
daa
jo
adc
shrb
jmp
pop
fcoms
lods
cmp
jo
jns
pop
loop
enter
xor
pop
push
mov
stc
jo
in
mov
insl
stos
divl
lea
lods
ret
adc
int
outsl
jo
add
mov
xor
jbe
xor
push
sbb
jp
inc
xchg
xchg
mov
mov
pop
roll
loop
fs
push
or
lock
cmp
lcall
test
test
sbbl
gs
jmp
out
xchg
roll
mov
jno
shr
and
andb
fldenv
jp
mov
shll
and
push
ja
mov
lret
xchg
xor
cmpsb
shrl
in
lret
scas
outsl
sbb
enter
les
jo
inc
cmp
ret
mov
adc
xchg
test
jmp
lcall
sti
xchg
aad
jo
clc
outsl
scas
icebp
fiadds
sbb
cmp
sub
xor
xor
pop
pop
les
xor
mov
pop
cmpsl
aad
test
and
out
sbbb
sub
jno
insl
gs
pushf
mov
mov
pop
movsl
or
lock
jbe
push
leave
jo
and
cmpsl
int
push
movsl
jo
sahf
inc
sub
jo
mov
imul
pop
popf
cmpsb
jne
mov
mov
and
adc
lret
aas
lea
sbb
cli
jge
stos
adc
dec
xchg
in
jnp
cwtl
mov
outsb
lcall
push
stos
mov
imul
js
xchg
inc
insb
adcl
cmpsl
negl
hlt
jnp
xchg
jge
mov
mov
in
mov
loop
pop
jae
sti
scas
xor
dec
dec
mov
imull
repz
sub
and
mov
xor
cmc
daa
mov
in
adc
call
xor
popa
cmpsl
mov
test
cwtl
movsb
xchg
cmp
daa
ror
push
push
testl
lock
sahf
loopne
pop
out
pop
jo
in
sbb
movsb
push
cwtl
aas
add
test
push
jbe
popf
inc
addr16
mov
pushf
add
xor
stc
les
es
mov
lret
pop
hlt
sub
pop
pop
or
push
arpl
leave
mov
sbb
xchg
cwtl
js
jno
cmp
pusha
popf
or
pop
ret
inc
inc
sbb
xchg
outsb
or
jno
jecxz
daa
pop
aad
sub
loopne
xchg
dec
cmp
or
jo
dec
xlat
adc
and
pop
lahf
loopne
jecxz
xor
test
sbb
push
insb
or
in
jnp
test
and
xchg
mov
aas
int
sbb
sbb
xchg
push
fidivrs
sbb
mov
daa
ror
mov
mov
pop
fs
dec
int
pop
inc
subb
pop
pop
jp
xor
dec
out
hlt
mov
xlat
cwtl
in
out
scas
cs
std
jbe
xchg
sahf
xor
xchg
adc
sbb
sub
lock
mov
lret
sub
jp
ret
shll
sahf
jmp
push
stc
push
cmp
arpl
jne
adc
test
add
push
fiadds
fldenv
push
push
and
xor
call
fildll
fwait
aam
mov
enter
adc
sub
cmp
mov
scas
cwtl
xchg
pop
sub
mov
xchg
dec
ss
test
and
pusha
int
push
loop
in
xchg
les
enter
mov
out
daa
cmpsl
cmp
jg
mov
jne
pop
enter
jns
lret
mov
fldt
ss
orl
mov
pop
sbb
movsb
mov
out
cwtl
shrl
cmp
jo
push
ficompl
jbe
lcallw
inc
daa
je
addr16
adc
and
or
hlt
jo
cmpsl
and
dec
stos
cld
push
inc
pop
lods
lock
push
es
push
dec
fmulp
dec
les
cmp
mov
jo
cltd
sahf
mov
jo
push
pushf
leave
insl
mov
lods
push
out
ss
mov
inc
nop
mov
adc
adc
inc
mov
js
nop
push
mov
out
xchg
mov
iret
adc
packsswb
dec
imul
sar
std
lds
add
movsl
mov
out
push
call
loopne
sub
jo
pop
test
popa
stos
aam
jo
push
fs
bound
fidivl
out
add
lret
push
push
jp
mov
sub
jle
testl
xchg
jo
add
data16
and
out
sbb
mov
lcall
shrl
rcll
fs
inc
sahf
xchg
mov
pop
jo
add
pop
dec
stos
push
or
jo
test
scas
cld
insl
jnp
ror
movsl
arpl
nop
icebp
jp
call
lock
xchg
out
sahf
xchg
jg
xor
xchg
scas
pusha
cmp
jns
xor
das
cmpsl
popa
aas
test
aaa
jo
mov
mov
xchg
loopne
and
mov
out
insl
test
imul
dec
inc
dec
jle
lock
sub
ja
dec
sub
imul
filds
ja
adc
nop
pop
pop
jo
mov
adc
mov
cmp
jo
testl
pop
imul
leave
and
int3
cmp
into
pop
in
pushf
ja
lock
push
inc
add
jne
jnp
xchg
jo
cwtl
sbb
add
pop
adc
xchg
adc
mov
int3
pop
ljmp
mov
adc
pop
and
ja
xchg
mov
div
push
cmpsl
mov
mov
out
add
sub
or
mov
mov
xchg
xchg
es
mov
jge
data16
jo
int3
lahf
pop
leave
cmc
mov
jo
mov
adc
jo
push
jb
pop
mov
or
pop
mov
pop
xchg
repz
loope
outsb
jo
rol
test
jmp
fcomip
dec
in
lock
dec
shlb
mov
xchg
and
mov
or
jo
mov
mov
fcoml
jo
inc
in
or
leave
in
inc
xchg
pshufw
xchg
adc
sub
cmc
fcomps
dec
mov
mov
out
lcall
xchg
xor
scas
sub
and
dec
mov
inc
xchg
dec
jo
lea
mov
adc
sbb
aad
inc
popf
jo
pushf
outsb
sbb
fmull
outsb
xor
fnsave
nop
inc
jae
fcompl
pop
push
or
pushf
or
and
insl
push
fcmovnb
pop
lret
rclb
leave
sti
cmp
cmpl
test
jo
push
pop
jnp
outsb
cmp
cmp
mov
mov
jle
sbb
push
lods
pop
stos
rcr
jae
cmp
andl
dec
cmpb
jo
or
fs
pop
xchg
jno
pop
fst
adc
mov
sub
es
mull
push
test
push
dec
mov
ret
fs
repnz
xor
xlat
repz
inc
ss
je
das
xor
daa
add
mov
vpshufhw
aam
lcall
loopne
shrl
bound
mov
popa
pop
dec
mov
mov
cmc
jo
add
push
add
jae
and
fs
jae
push
addr16
jp
jo
xor
out
pop
xor
decb
adc
jl
imul
mov
cltd
daa
inc
pushf
movsl
fdivr
add
jo
lret
sarl
mov
cmp
jae
and
stc
insb
push
add
divb
nop
xchg
dec
loop
add
jo
and
jo
mov
pop
dec
jo
gs
scas
xor
ja
pop
add
cli
fdivs
push
jo
xor
test
lret
out
popa
push
test
js
xor
lds
fwait
aaa
ret
jo
dec
dec
scas
stos
lea
mov
push
cltd
fldl
cmc
mov
mov
adc
stc
mov
push
and
dec
outsb
cltd
hlt
sbb
in
aam
jnp
push
jo
scas
lcall
push
jne
jp
dec
das
shll
inc
arpl
out
dec
xchg
and
outsb
jae
addr16
insl
and
aas
mov
sub
jo
mov
xor
xor
lods
bnd
adc
leave
sbb
add
push
movsb
xchg
push
jo,pt
sbb
add
js
cmp
cmpsb
push
cmc
jo
cli
stos
ficompl
push
add
mov
jo
js
push
push
mov
or
lods
mov
push
xchg
dec
sub
mov
adc
shlb
std
and
cmp
dec
test
jmp
lcall
cmp
jo
aad
mov
insl
lahf
stc
jbe
adc
jno
mov
mov
cmp
ss
inc
jb
dec
cmp
jo
mov
dec
outsb
push
jmp
std
icebp
jo
jbe
mov
jo
call
arpl
jo
add
mov
vsqrtpd
data16
jo
hlt
fwait
jbe
test
leave
sub
cmp
outsl
pop
and
push
cmp
pop
pop
aad
pop
jo
jmp
or
adcb
cmp
in
and
adc
rcr
jle
and
mov
test
lds
or
push
dec
xor
xchg
mov
xchg
scas
pshufw
push
xchg
push
data16
inc
jo
cmp
int
out
jns
cmc
mov
mov
xchg
aaa
jo
into
jp
push
test
cmp
stos
dec
rolb
sbb
divb
stos
jmp
jbe
jo
insl
cs
dec
sbb
lock
test
out
and
jo
clc
repz
cmp
test
jae
in
add
mov
imul
push
jo
sbb
test
jge
and
sub
loop
pop
push
pusha
insl
cltd
loope
lods
dec
mov
mov
cmp
shll
sub
stos
fnstcw
cs
jb
jae
adc
enter
jo
push
in
nop
xchg
jo
mov
icebp
data16
jecxz
jl
xchg
les
repnz
mov
scas
cmpl
fcmovne
jo
sti
sahf
mov
jg
addr16
xchg
test
adc
cmp
mov
push
je
xor
adc
adc
out
clc
dec
mov
jnp
push
xchg
cmp
je
mov
mov
adc
shlb
int3
roll
sub
pop
pushf
or
add
jo
arpl
sbb
fstp
imul
pushf
jnp
test
shl
cmp
jo
rcrl
shr
fnstenv
ja
xlat
lock
or
mov
ljmp
lret
jl
push
add
scas
xor
mov
fnstenv
in
push
cmp
add
jo
jmp
loopne
jnp
cmp
or
mov
lods
xor
les
aaa
mov
mov
nop
xchg
or
dec
jo
or
jo
loopne
sbb
jo
fcmovne
idivb
ja
jp
mov
inc
sub
push
leave
dec
ljmp
sub
mov
lods
push
xchg
jae
add
mov
mov
push
aad
fcoml
jo
leave
push
enter
mov
xchg
ljmp
jno
jo
push
hlt
popa
mov
mov
sub
push
push
push
pushf
cld
jo
sbb
test
insl
loope
inc
jecxz
adc
and
call
enter
and
test
sbb
outsb
adc
pusha
cmp
sti
sar
lret
pshufw
shrl
das
jo
dec
scas
sarb
add
xor
adc
shlb
mov
mov
sarb
and
xor
ret
aaa
pop
outsb
add
test
xchg
push
stos
mov
cmp
shrl
jo
incb
sub
push
push
cld
insl
xchg
jne
mov
push
push
pop
fmull
dec
enter
mov
out
push
or
xchg
or
insb
adc
leave
fmul
jo
inc
mov
cld
ror
mov
cwtl
shrl
sti
mov
mov
sub
pop
pushf
cmp
mov
jne
xor
outsb
lock
sbb
jno
stc
in
daa
dec
outsb
inc
enter
ficoms
adc
ljmp
stos
add
dec
push
or
lds
sbb
jnp
push
je
outsl
data16
push
mov
js
outsb
add
xchg
outsl
cmp
sub
enter
sub
or
push
xorl
je
add
lock
push
outsb
hlt
sub
movsl
fldt
push
sbb
mov
dec
ja
inc
insb
xor
dec
nop
pop
ficompl
cmp
adc
or
jo
jg
in
xchg
inc
jmp
jns
mov
in
cwtl
call
pop
cmc
cli
push
add
scas
stc
in
mov
xchg
jle
das
or
movsl
negb
push
adc
leave
add
cmp
sub
int3
xchg
ret
jne
pop
movsl
jmp
xor
lahf
stc
mov
loopne
adc
sti
jle
lcall
lock
mov
xchg
inc
fwait
jnp
loopne
pop
rcll
cwtl
pop
pop
adc
std
test
mov
mov
pop
movl
mov
leave
in
jns
dec
pop
xor
and
scas
jno
xor
nop
daa
xchg
addr16
jae
cmc
cmc
das
sub
adc
adc
jb
iret
sbb
xchg
mov
aas
pop
sub
sub
cmp
mov
xchg
xchg
aad
loopne
jg
insl
mov
pop
inc
outsb
lods
cmpsb
mov
adc
cwtl
xor
sub
and
pop
add
setl
lods
fdivrl
lret
movsb
test
loop
xchg
push
pop
iret
mov
xchg
xchg
add
push
movsb
js
test
mov
inc
jecxz
pop
push
xlat
fdivrl
jg
dec
cwtl
mov
int
stc
movsb
fildl
sbb
popf
inc
fst
ja
flds
icebp
xchg
sarl
sbb
int
adc
mov
inc
in
shrl
adc
sbbb
and
iret
es
or
xor
cs
loope
outsl
call
cmp
push
xchg
push
pusha
pop
jo
or
push
push
call
or
cli
jl
jmp
jg
in
cmp
mov
cmp
ja
push
add
xchg
nop
and
adc
jg
out
leave
pop
xchg
xor
pop
mov
icebp
xchg
sbb
jmp
sbb
sti
faddp
push
pop
xchg
and
push
stos
xchg
xor
inc
jns
ss
sbb
stos
lret
inc
scas
pop
or
xchg
mov
or
ret
and
mov
fcmovnb
mov
mov
mov
mov
ljmp
icebp
inc
js
cmc
loope
jo
xor
jl
movsl
xor
xchg
add
push
or
cwtl
insb
sbb
xchg
repz
dec
jae
push
and
movsl
cs
adc
pop
or
jbe
sbb
out
je
dec
push
inc
xor
sub
pop
cli
cmp
rclb
push
cmpl
jne
sti
jne
aad
icebp
dec
sub
in
loopne
aaa
dec
xchg
ds
arpl
cwtl
mov
ret
jecxz
jg
sqrtps
mov
jp
lods
adc
fsubp
sub
add
pop
leave
fistpll
aam
enter
daa
int
xchg
lock
call
js
push
cmp
and
xor
push
les
inc
out
mov
test
lock
test
xor
sbb
jno
cwtl
in
int3
push
lcall
push
dec
and
loopne
push
inc
cmp
push
xchg
mov
subb
sahf
es
out
or
pop
cwtl
mov
jmp
cld
in
cmpsb
shlb
inc
mov
sub
sub
pop
mov
mov
mov
pop
adc
ja
ja
dec
sub
fs
jecxz
dec
mov
stc
push
pop
leave
jne
and
dec
push
adc
lock
push
add
mov
pop
aas
es
xchg
ja
mov
inc
pop
pop
shrl
addr16
loope
push
and
jp
mov
mov
adc
jl
and
mov
lret
insl
dec
xchg
mov
xchg
std
and
inc
cld
lods
xchg
cwtl
xchg
push
cld
and
hlt
js
loopne
lcall
sbb
or
cmp
push
or
mov
arpl
into
inc
andb
push
lds
jl
adc
cwtl
or
fists
hlt
mov
into
jo
sbb
inc
fcomps
ja
repz
adc
orb
test
fcoml
outsb
ret
lods
pop
loopne
cwtl
pop
icebp
mov
jno
sbb
sub
pusha
jb
mov
xor
in
les
jo
ja
adc
rep
jmp
mov
xchg
nop
aad
pop
fcoms
add
dec
dec
loop
fs
jo
std
push
mov
jo
xor
inc
push
jo
sbb
fsubrs
adc
repz
jo
jne
and
mov
xchg
adc
push
ja
push
cwtl
test
lret
aam
je
jo
lods
xchg
sbb
inc
jo
out
pushf
sub
std
cwtl
push
addr16
lods
arpl
jo
js
mov
pop
enter
fmuls
loopne
inc
push
int
pop
inc
and
fbstp
cmp
push
jo
repz
adc
jge
test
sub
rcll
fdivs
mov
xchg
jo
out
repnz
subb
push
mov
jns
xor
jp
xchg
fisubrs
fsub
icebp
inc
mov
int3
push
sub
xchg
add
cli
push
iret
dec
or
fistl
test
lea
inc
add
pop
enter
dec
movsl
cmp
mov
repnz
in
cltd
and
addr16
mov
pop
xchg
dec
ret
pop
fisttpl
cmp
and
and
fs
sbb
fwait
repz
pop
das
mov
dec
cmp
outsb
loope
aaa
icebp
cld
fbstp
cmc
scas
and
and
or
jl
or
out
jne
mov
jae
or
shrl
popf
fcomps
sti
add
cli
cmp
and
mov
and
test
mov
lock
mov
inc
cmp
sub
xchg
cwtl
cwtl
dec
and
imul
addr16
cs
repz
jg
mov
xchg
jge
xchg
jo
mov
stc
insl
cmp
inc
test
mov
xor
inc
xor
ror
sub
inc
pushf
add
xor
adc
fs
sbbl
es
je
adc
cwtl
mov
fistl
lcall
push
je
std
adc
es
cmp
dec
push
mov
mov
mov
aad
cmc
dec
ret
and
in
loope
jge
push
incb
jge
xor
add
adc
mov
adc
sub
sub
jne
push
mov
inc
jecxz
iret
daa
and
movsb
fxtract
in
xor
jp
shl
js
inc
pop
mov
push
lods
add
dec
aas
xchg
push
sub
sub
in
mov
fs
xchg
jle
loop
into
dec
pop
clc
fs
pushf
shll
aam
jno
rorb
and
mov
push
loopne
shr
xchg
lods
xchg
pop
out
loopne
aas
pushf
lods
movsl
sub
leave
scas
xor
pop
sub
scas
push
movsl
ljmp
mov
imulb
in
and
xor
lcall
pop
dec
lret
xor
dec
out
pop
lods
push
mov
inc
and
insb
jbe
xchg
outsb
inc
and
shlb
inc
sbb
fbstp
clc
movsb
loopne
lahf
int
and
jnp
mov
insl
into
or
mov
push
sub
sti
popf
or
pop
mov
leave
loope
xor
jno
out
jns
or
xor
dec
push
ret
sarl
je
aam
addr16
pushf
sub
lock
sbb
mov
in
lock
outsl
inc
or
push
daa
call
lahf
xor
cmc
dec
sbbb
outsb
iret
call
jne
inc
jbe
sub
sub
pop
mov
pop
in
sbb
sahf
inc
imul
jg
or
cwtl
pop
nop
cmpsl
sahf
xor
fidivrs
xchg
dec
push
pop
mov
xor
ljmp
orl
xor
test
cwtl
mov
jne,pt
stos
out
fisubs
jecxz
pusha
jo
inc
stc
lret
jmp
insl
mul
rclb
jns
xor
aaa
inc
fists
sub
jmp
inc
dec
pushf
mov
sbb
inc
pop
clc
jg
dec
mov
xor
jae
adc
scas
mov
cld
inc
adc
inc
call
mov
inc
fistps
arpl
mov
mov
data16
mov
imul
jl
sbb
ja
js
add
test
scas
mov
test
or
cmpl
loopne
xor
mov
ficoms
jmp
fidivl
incl
mov
movsb
cli
lods
cmp
aas
pop
dec
sarl
sub
sbb
add
popa
add
xor
xor
sub
cmp
sub
xchg
mov
add
loopne
ss
push
xchg
xchg
cwtl
jno
xorb
jno
out
sub
dec
int
movsb
adc
add
out
outsl
mov
add
jae
jle
int
inc
ss
xchg
xchg
clc
mov
dec
lods
cli
in
mul
aas
mov
stc
jae
fs
lret
pminub
fdiv
cmp
mov
jnp
lret
mov
push
repnz
sub
xorl
insl
mov
dec
and
push
inc
insl
imul
jae
scas
mov
loope
loopne
fbstp
testl
fldl
push
aad
lea
pusha
in
jo
xchg
ret
jmp
gs
test
and
fs
rcrb
mov
aad
cld
addb
push
xchg
rcll
jns
pusha
push
pop
scas
xchg
mov
pop
jo
fildll
ds
cltd
ret
mov
sub
int3
sub
cmp
mov
insl
pop
adc
dec
push
inc
adcb
jo
add
xchg
mov
shrb
mov
aas
pop
xchg
cltd
lahf
leave
add
jo
or
add
xor
dec
dec
fs
sbbb
jae
mov
fsubrl
dec
fbstp
aaa
out
icebp
mov
iret
mov
and
add
xchg
cltd
push
fdivrs
scas
imul
iret
mov
popf
lods
or
inc
xchg
mov
cmp
data16
mov
insl
das
pushf
ss
into
add
xchg
hlt
cltd
inc
xchg
mov
jnp
and
adc
xor
rorl
pushf
mov
into
adc
test
or
push
push
mov
push
lds
sahf
std
push
mov
xor
jo
sti
xchg
into
mov
outsl
mov
rcrl
dec
test
lock
mov
fistps
xor
mov
insl
jns
clc
sbb
push
out
lahf
xor
mov
test
stos
pop
aaa
or
push
pop
push
mov
pop
xor
insb
jo
faddl
insl
in
lret
popa
push
sar
xchg
cmpsl
mov
xchg
dec
sub
rcr
dec
xchg
icebp
mov
pusha
cmpsl
je
shlb
in
mov
jo
xchg
dec
xor
mov
xchg
jo
push
add
dec
cmp
ljmp
aam
jae
leave
pop
or
xchg
lock
orl
push
jo
hlt
ja
cmp
add
mov
jo
xor
add
dec
jo
adc
mov
into
add
mov
push
mov
call
rcr
ret
xchg
jo
lret
jae
imul
pusha
pop
lahf
ss
push
pop
repnz
adc
dec
pop
xor
arpl
mov
jne
int
xor
inc
sub
shlb
scas
push
fnsave
orl
out
or
jl
sbb
shrb
mov
in
pop
je
sub
sti
push
lock
ss
adc
jo
pop
jnp
mov
pop
cmpsb
int3
jbe
je
loopne
pushf
das
dec
int
or
and
xchg
xchg
jo
inc
cmp
popf
lock
es
xor
pop
add
mov
movsb
and
shll
push
lcall
pop
pop
dec
lock
fs
xchg
jnp
sub
jne
imul
mov
lods
sti
adc
adc
add
push
aaa
outsb
lahf
xchg
jg
sbb
adc
loopne
xor
cmp
adc
adc
push
stc
adc
push
xchg
test
jo
xchg
mov
ja
dec
pop
and
gs
jo
out
repz
scas
mov
test
jo
jno
mov
jae
pushf
mov
mov
add
pop
and
fcmovne
fsubr
jo
inc
xchg
xor
in
jo
xchg
cli
sub
mov
fstpl
outsb
out
scas
cmc
mov
add
mov
dec
ljmp
or
pop
jg
cmp
jo
imul
jp
jg
out
and
cmp
aaa
sbb
sbbl
adc
movsb
jo
lods
push
divl
pop
insb
push
jo
ljmp
pop
inc
jecxz
in
mov
testb
adc
clc
jge
jnp
jae,pn
insl
fiadds
jecxz
test
dec
mov
push
mov
sub
outsl
imul
mov
sbb
mov
or
jo
or
push
xchg
std
imul
jae
test
cwtl
dec
jne
jo
in
mov
pushf
cwtl
out
jo
ret
xadd
scas
fcmovnbe
add
je
mov
sahf
insl
adc
jo
test
jb
cs
xorb
adc
arpl
sbb
loope
int
cmc
or
hlt
ret
cld
xchg
add
jg
push
cmp
jo
test
xor
jae
pop
dec
imul
ds
add
jo
jl
addb
sub
xchg
test
idivl
xor
std
sahf
dec
jo
aaa
jg
mov
pop
cwtl
sub
cmc
jno
dec
fwait
cmpb
movntq
inc
dec
fs
adc
shll
inc
xchg
popf
cld
std
ss
cmp
mov
dec
jo
pop
jl
adc
push
or
pop
lods
cmp
cld
xor
ret
outsb
test
mov
out
cltd
push
aam
dec
es
ret
rolb
enter
jnp
aad
sub
repnz
mov
adc
pop
push
xchg
ds
pop
pop
sbb
jo
in
push
adc
jo
icebp
pop
inc
mov
das
push
cmpl
mov
divb
jmp
xchg
int3
jo
mov
jp
pop
lds
sub
and
shlb
in
mov
jne
xchg
jle
jno
repz
adcl
lret
xor
or
ss
lds
add
out
pop
enter
insb
push
cmpsl
or
in
mov
jo
ljmp
add
pop
stos
push
test
pushf
cmp
filds
lods
jns,pn
push
loope
sbb
orl
sbb
insl
call
jno
jo
and
ffreep
jp
pop
ds
inc
stos
sahf
shlb
push
and
movsb
or
jp
int3
adc
sub
aas
xchg
inc
stc
mov
jo
push
sbb
and
loope,pt
imul
and
mov
out
jo
push
scas
sarl
rolb
and
jo
jg,pt
xor
int
sub
arpl
add
or
pop
dec
sbb
jo
cwtl
pop
push
jo
aam
push
and
adc
push
lods
jo
out
lcall
mov
gs
or
xor
jg
jo
fisubl
adc
xchg
mov
jle
rorb
dec
fcomip
dec
adc
mov
mov
jo
stc
mov
xlat
cmc
jo
incb
xor
xchg
mov
ret
sub
inc
fbstp
inc
shrl
insl
adc
push
enter
push
mov
cmpb
and
cmc
xor
inc
call
mov
mov
popf
xchg
mov
or
sub
add
add
outsl
jp
fcompl
aas
jo
sub
lret
dec
add
add
push
in
insl
mov
inc
mov
test
in
and
jo
bound
mov
push
dec
ja
xchg
aas
loopne
loopne
fildl
insl
or
movsl
subb
mov
ds
jo
push
pop
jp
xor
dec
jo
dec
sbb
data16
cld
jae
scas
mov
movsb
mov
dec
into
imul
or
jo
cmpsl
mov
aad
sbb
js
pop
jno
stos
ftst
sub
mov
push
adc
pop
cmpsl
jo
xchg
dec
mov
inc
popl
jno
add
sub
rcll
into
and
lret
inc
add
sub
mov
je
fcompl
or
add
scas
outsb
les
mov
ret
push
pop
jo
xchg
in
inc
cmpsl
pop
jo
lods
leave
arpl
push
adc
cmp
or
int
cmp
jmp
adc
or
mov
pcmpgtw
lret
jo
shll
add
fstps
sahf
add
adc
les
inc
xor
pop
int3
insl
sub
ss
mov
stc
jo
sub
adc
sub
mov
sbb
test
out
adc
fcmovne
jno
scas
mov
xor
pop
lahf
sub
jbe
into
adc
scas
mov
fs
adc
push
push
cli
dec
sub
add
fisubrs
push
movsl
jge
outsl
mov
jo
push
jl
daa
dec
sub
pop
and
or
test
push
daa
push
testl
lds
jo
xor
jae
sahf
mov
movsb
dec
lcall
push
inc
jo
out
cmp
arpl
xor
jo
imulb
out
xchg
loopne
fsubrl
jo
inc
shll
fldcw
inc
movsb
push
xor
loop
in
mov
filds
inc
les
stc
loopne
jo
xchg
inc
loop
inc
sub
pop
aad
jmp
cmp
jae
push
add
dec
jns
popf
mull
stos
adc
outsb
sbb
cmp
mov
xlat
sub
jecxz
jmp
push
sub
mov
test
das
lods
out
adc
sahf
movsl
in
negb
xchg
sti
ret
dec
push
xchg
jo
inc
mov
nop
loope
clc
mov
pop
in
pop
adc
sbb
xchg
pop
enter
inc
mov
mov
cwtl
xchg
push
repz
and
or
shll
add
wrmsr
sub
movsl
imul
mov
cmpsb
jne
sbb
cli
pop
or
xchg
movsb
cmp
xchg
popf
cmpsl
pushf
data16
lock
insb
ret
jmp
int3
je
cmpsb
adc
movsb
inc
inc
ds
rol
inc
bound
mov
ljmp
fmulp
jg
or
inc
in
loope
adc
call
sub
cmp
jno
lahf
lods
jecxz
sub
adc
sbb
pop
push
loopne
cwtl
cmp
scas
pop
mov
iret
js
inc
addr16
jo
sub
sbb
roll
mov
and
jb
xor
mov
stos
and
or
repz
jp
cmp
daa
out
pop
addb
pusha
inc
pop
movl
jbe
mov
lcall
fidivs
daa
sbbl
inc
outsl
and
in
jle
leave
add
insb
push
int
push
std
sbb
xchg
stos
enter
enter
fadd
mov
scas
push
movsl
icebp
inc
jo
in
xchg
inc
add
add
shll
xchg
outsb
jo
pop
push
jb
xchg
lret
cli
or
int
lock
mov
jae,pn
iret
rorl
andb
push
inc
and
aad
jne
push
jo
push
fwait
push
mov
inc
jae
mov
mov
dec
xor
mov
mov
inc
daa
movsl
mull
push
nop
mov
jo
imul
push
das
inc
test
mov
sbb
mov
rolb
pop
or
pop
arpl
movsl
push
jno
mov
mov
in
fidivrl
addl
lods
out
inc
jle
rorb
or
insl
cmp
dec
scas
ds
add
jo
xchg
sub
pop
dec
xchg
push
popf
lock
dec
mov
frstor
jo
cmp
je
push
orb
jo
gs
mov
cld
insb
fcompl
cmp
mov
jae
int
cmp
sub
dec
jo
fnsave
inc
sbb
imul
std
xchg
fwait
dec
fcomip
add
push
pop
jl
movsb
out
xchg
fisttpll
ret
xchg
sbbl
loop
push
pop
les
std
imul
adc
jb
pop
xor
inc
nop
jo
ljmp
ja
out
xchg
shll
lock
sbb
jbe
in
loopne
loop
push
movsl
dec
jecxz
push
lods
jo
gs
xchg
sbb
subl
div
ja
sub
inc
icebp
pusha
xor
push
mov
push
in
mov
jo
pop
ficompl
jo
ficoms
mov
sub
xorb
movsb
pusha
dec
jae
mov
leave
mov
call
repnz
sbb
pop
add
cmp
jo
and
xchg
or
hlt
push
fdivr
int
jo
pop
std
cmp
idivl
bound
mov
call
call
lock
sbb
mov
ds
and
mov
js
insl
mov
sbb
push
dec
dec
andb
jo
fstl
pop
or
scas
push
ret
out
xchg
cmp
dec
cmp
mov
imul
mov
mov
divl
cld
xor
push
xor
jnp
jno
leave
fildll
addr16
nop
sub
jecxz
addb
lea
xchg
mov
or
sahf
pop
pushf
xchg
pusha
icebp
xor
jo
sub
sub
lock
dec
xor
inc
scas
sbb
gs
mov
jo
int3
mov
loopne
cld
in
adc
jl
mov
dec
push
jo
cmp
pop
xchg
nop
pop
pshufw
adc
mov
pop
or
aaa
jo
add
mov
lea
push
rcr
lods
jo
arpl
sbb
dec
jnp
pop
jl
out
xchg
sarb
cltd
xchg
mov
int
pop
fcoml
out
insl
movhps
rclb
mov
fdivrs
jo
aam
or
push
pop
push
or
cld
jmp
imul
xchg
push
pop
test
push
inc
dec
xor
lcall
push
std
adc
jo
jecxz
loopne
xor
pop
leave
scas
mov
or
jo
push
mov
rcll
pop
pop
call
inc
mov
add
sbb
xchg
test
pop
xor
push
dec
testb
mov
out
push
js
cmp
jl
sub
jp
add
inc
lea
mov
repnz
sti
repnz
aad
jg
inc
jp
push
mov
and
insb
inc
sub
jo
ret
or
mov
adc
mov
push
jmp
mov
or
fbstp
loop
loopne
outsb
sbb
jo
data16
cmp
hlt
add
in
mov
scas
jo
push
pop
push
cmpsb
sbb
mov
add
xor
fwait
adc
je
scas
insb
adc
jo
pusha
jge
xor
jo
push
cmpsl
xchg
jo
mov
addr16
adc
adc
add
sub
inc
dec
sbb
xchg
mov
mov
or
lea
mov
xchg
xchg
popa
fdivl
lds
repnz
ja
inc
fnstenv
dec
adc
ror
inc
or
sub
jne
repnz
call
ficompl
mov
xor
test
insl
mov
mov
inc
adc
sahf
loope
push
xchg
add
es
loop
ja
mov
push
jle
xchg
scas
mov
psubusw
jg
inc
movsl
pop
jo
loope
gs
pusha
or
stos
addr16
jne
xor
add
jo
rcl
leave
mov
ss
insl
mov
push
push
icebp
xchg
stc
or
sub
lods
ss
pop
lock
pop
sbb
inc
add
lods
mov
and
ja
mov
loope
push
pushf
in
insl
stos
rolb
mov
lods
orl
jo
xor
divl
mov
not
arpl
sbb
xor
and
int3
into
jbe
rcrb
lock
push
sbb
jae
mov
movsl
dec
dec
mov
dec
ja
or
adc
lret
xchg
jle
je
inc
andb
je
cmp
jo
hlt
or
sub
dec
je
int
pop
or
inc
das
jo
jl
adc
pop
jb
cmc
inc
ss
and
dec
xchg
mov
or
xor
out
test
jo
jae
push
jo
xor
jle
push
xchg
mov
imul
jl
mov
mov
rcl
loope
jb
movl
mov
jle
push
inc
jge
test
in
fwait
cmp
jp
or
or
jp
cmpsl
lcall
jno
pop
jo
ja
jbe
loope
jae
fwait
iret
pop
dec
je
rorl
mov
add
adc
xchg
inc
rclb
int3
jo
pop
add
jo
scas
dec
push
jle
xchg
fnsave
ja
shlb
orb
sub
push
or
cwtl
xchg
movsl
sub
sti
mov
subb
jae
enter
das
aad
jne
adc
sub
jo
popa
pushf
outsb
adc
push
inc
push
fidivl
inc
and
js
mov
cld
pop
add
push
test
aaa
jae
jne
jno
hlt
jae
fwait
inc
cmp
stc
fadd
adc
outsb
xor
xchg
out
test
sbb
mov
std
push
xor
push
cmp
xorb
sti
mov
sub
shll
sub
fs
or
adc
sbb
jno
jl
jnp
imul
jg
sub
mov
nop
test
cmp
aaa
inc
lods
mov
addb
push
fdivs
in
adc
insb
int
pop
xchg
dec
sti
aas
pop
mov
pushf
lock
xchg
inc
jp
sbb
jo
ficompl
sbb
jo
jnp
cld
pop
mov
loop
mov
jecxz
xor
push
data16
mov
jae
jne
insb
aad
rolb
mov
sbb
lods
and
leave
loope
dec
xlat
pop
jns
stc
xor
in
sub
shrl
sbb
jae
pop
mov
mov
aaa
jo
cmp
lods
bnd
add
xor
sbb
mov
or
test
imul
pop
fwait
divb
sbb
or
repz
mov
push
ds
cmpsb
scas
jo
pop
xchg
lds
mov
sbb
push
jle
add
iret
dec
jo
test
xor
adc
jmp
add
das
lock
jne
push
push
jp
pop
or
test
loopne
in
rorl
outsl
sbb
push
jo
bound
rolb
aam
arpl
inc
cmp
test
insb
testl
outsl
adc
push
enter
add
sbb
adc
testb
xchg
mov
fmuls
and
mov
cs
nop
dec
js
sbb
jno
inc
inc
into
movb
jmp
lods
inc
add
push
popa
in
inc
jo
bound
cmp
lcall
ret
inc
jo
mov
mov
jo
adc
cmpsb
daa
stos
fdivrl
mov
and
mov
pop
or
roll
idivb
jmp
pop
jo
mov
lock
inc
inc
test
orb
es
jae
mov
iret
adc
adc
stos
negl
push
pop
cmp
jb
leave
nop
cltd
push
mov
xor
repz
mov
xorb
pushf
lods
loope
clc
sbb
ror
sar
loopne
add
scas
subb
push
push
imul
mov
shll
dec
lock
sbb
dec
cmpsl
stos
dec
sbb
lods
pop
int3
dec
mov
test
stos
jo
inc
imul
aas
push
push
pop
clc
xchg
xor
dec
andb
fists
divl
adc
and
sub
in
outsl
jecxz
sahf
or
inc
xchg
jns
imul
cwtl
pop
hlt
push
or
dec
adc
mov
jmp
mov
cmpsl
xor
in
imul
shll
add
imul
andl
or
mov
and
and
aaa
xchg
aam
mov
rorl
test
es
push
sbb
jl
scas
cmp
mov
negb
jo
jbe
sbb
adc
divl
and
push
sub
testl
or
test
xor
out
popa
or
mov
mov
test
faddl
loope
push
jo
mov
mov
jo
dec
std
insl
mov
aam
cmpsl
in
cmpsb
test
mov
dec
lock
cli
inc
mov
dec
pop
andl
pop
inc
xchg
jo
jg
shrb
jo
inc
inc
scas
pushf
ret
std
fbstp
sub
adc
xchg
jecxz
dec
lret
fnsave
xchg
jns
dec
lock
cmp
push
mov
mov
cmp
push
test
cld
add
xchg
push
and
push
jbe
sbb
clc
mov
icebp
dec
enter
xchg
push
mov
or
cmp
ja
movl
push
or
in
dec
dec
mov
or
push
test
popf
xor
aas
in
or
xor
rorl
jg
dec
aaa
int3
fiaddl
jo
sbbl
sub
lcall
mov
jmp
in
movsl
into
int
jae
mov
insb
mov
icebp
lock
push
cmp
fs
out
jo
cmp
test
movsl
jl
test
cmpsb
jno
call
aas
sbbb
sub
outsl
mov
pusha
jo
push
enter
jb
push
xor
das
les
in
rorb
insb
and
adc
cmpsb
xor
rorb
ja
lcall
mov
aas
ss
in
insl
outsb
lret
daa
sub
fs
in
or
mov
lcall
lock
inc
ja
cltd
pop
mov
xchg
nop
mov
pushf
fdivr
loope
lea
inc
das
shlb
push
test
fwait
scas
ret
lahf
mov
push
das
sbb
and
mov
cmp
popa
add
into
lods
xor
inc
roll
push
jo
sub
enter
inc
ja
mov
stos
cltd
rcrl
ja
repz
xchg
dec
insb
mov
and
sbb
lock
aas
rcll
in
inc
out
fistpll
push
jo
jb
mov
aas
mov
dec
daa
sbb
jge
cmp
jmp
sub
xor
xor
jo
nop
sbb
xchg
cmp
enter
dec
clc
repnz
outsl
mov
pushf
cmp
sub
jo
push
fildll
pop
mov
cmc
xor
test
lock
jge
cmp
push
jo
xchg
push
jp
inc
pop
adc
loopne
lea
pop
or
add
inc
call
jo
pusha
pop
bnd
imul
mov
fs
fdivl
push
cwtl
loopne
mov
clc
cmp
js
les
jo
sbb
inc
push
fidivrl
adc
cmp
mov
sbb
add
aas
xor
jo
jecxz
cli
mov
jne,pt
hlt
sbb
jno
adc
mov
mov
or
inc
or
cmp
add
cmc
xchg
sar
insl
in
cmpsb
pop
or
fsts
mov
aad
jbe
dec
lcall
dec
and
sbb
std
xchg
mov
lock
shl
sub
jo
sbb
xor
repz
push
jo
xchg
scas
xlat
aam
es
fldl
xchg
jno
cwtl
or
mov
mov
jo
jno
movsl
sub
or
mov
popf
lret
in
out
lock
ja
add
jno
popa
jae
sub
sarb
xchg
clc
jp
jge
mov
inc
jae
add
inc
addr16
or
sub
lcall
xlat
mulb
outsb
xor
and
push
movsb
loopne
es
sbbb
jnp
adc
and
je
out
lds
in
dec
pop
add
outsb
test
pusha
xchg
xlat
mov
push
xlat
loope
movsl
add
mov
ljmp
jnp
daa
mov
or
aas
jne
popf
outsl
addr16
pop
adcb
pop
mov
cmc
popa
mov
outsb
rcrb
sub
cmc
jge
ficoml
mov
in
jl
dec
rcrb
jne
insl
sbb
jl
call
sti
js
xor
mov
mov
sub
jmp
hlt
inc
insb
or
pop
lcall
push
add
movq
xchg
xchg
incb
idivl
cwtl
clc
xchg
pushf
les
outsl
xchg
test
fcom
mov
mov
popf
iret
jno
stc
dec
lret
adc
clc
aam
popa
aad
jae
cmp
jp
jb
xchg
sbb
mov
fwait
test
push
adc
in
inc
sbb
xor
movsb
dec
xor
aam
dec
mov
mov
incl
mov
rol
adc
push
push
out
inc
cs
jo
cmc
aas
outsb
lock
lret
sar
adc
mov
jecxz
mov
andl
call
adc
add
outsb
cmp
repnz
insl
je
and
xor
ljmp
lds
pop
shll
cs
movsb
mov
push
iret
dec
int
testl
cmc
inc
js
add
fldt
lret
inc
mov
adc
daa
out
outsb
scas
das
push
pop
daa
push
in
mov
ret
aas
divb
sarl
dec
je
int
clc
pusha
cwtl
push
inc
push
int
adc
lock
jae
pop
xlat
pop
popa
filds
sub
cmp
mov
or
clc
shrl
jo
int3
add
rclb
jo
gs
mov
ljmp
rcrl
jo
sub
jo
mov
inc
xchg
cwtl
pushf
dec
pop
mov
mov
loope
std
jo
loopne
mov
push
push
scas
xorb
ja
dec
pop
add
push
cld
pushl
sub
or
frstor
lock
daa
jle
cli
dec
inc
insb
xchg
jg,pt
jns
fists
les
arpl
dec
minps
fnstsw
imull
lret
mov
mov
daa
xor
jo
mov
das
lea
or
adc
pop
sarb
jp
cmp
aaa
jae
push
dec
or
or
mov
lcall
arpl
bnd
sub
daa
aad
mov
jecxz
xor
mov
pop
jo
push
jmp
dec
popf
cld
lock
pop
daa
lcall
jg
xchg
aaa
sahf
xchg
mov
bound
jo
outsl
mov
jae
mov
mulb
cwtl
in
sub
fwait
pop
sub
loopne
add
outsb
sbb
mov
lods
nop
pusha
mov
jbe
dec
and
arpl
jo
mov
ja
cld
decb
xchg
push
jo
lds
xchg
jo
cmpsl
jbe
mov
jno,pt
mov
mov
mov
push
test
xor
lcall
pop
mov
jnp
lock
sbb
mov
inc
cmp
adc
add
pop
add
jo
fwait
push
inc
mov
fmul
jo
les
xchg
jo
sar
adc
test
stc
xchg
ja
lcall
movsl
rclb
dec
inc
or
xchg
or
xlat
insb
hlt
jbe
jo
in
inc
sahf
mov
add
or
outsb
data16
lock
jle
ret
dec
sbb
xchg
mov
mov
insl
icebp
xor
xchg
push
int3
nop
scas
add
cmp
jb
addr16
jo
pop
dec
inc
jae
cmpsb
xor
cmc
cmp
in
mov
add
xor
push
jo
mov
mov
mov
jo
jle
lcall
cmp
orb
sub
jo
add
test
pushf
jne
sti
push
push
movsl
jge
shll
jo
popl
inc
nop
jmp
mov
xchg
loope
xchg
lea
cmp
mov
out
nop
pop
icebp
jg
dec
pop
das
test
xor
jne
lock
or
test
xchg
aad
push
or
mov
adc
xor
mov
push
push
addb
and
mov
add
inc
jl
call
or
cli
lcall
insl
cmpsl
xchg
aaa
jecxz
xor
xor
jo
frstor
xchg
jo
nop
ljmp
or
push
xor
leave
fnstsw
add
jo
xor
lea
sbbl
insl
cmp
xchg
fwait
xlat
inc
mov
out
ja
cltd
daa
dec
xor
neg
loop
mov
cmpl
in
dec
aaa
mov
adc
loopne
and
push
or
jo
out
es
pop
mov
jo
int3
sub
push
or
scas
mov
lret
inc
movsl
jo
gs
ret
jo
xchg
mov
scas
sbb
xor
mov
lock
sub
out
les
stos
mov
sti
fdivrl
jo
sub
mov
xchg
mov
out
pop
out
movsb
pushf
xor
or
mov
or
bound
gs
js
adc
shll
push
inc
inc
test
and
mov
pop
out
and
pushf
sub
jo
leave
imul
jo
das
fistl
jo
ja
shll
pop
jo
push
fsubrl
outsl
daa
imul
jo
cmp
pop
and
cmpsl
mov
add
nop
jo,pn
or
movsb
sahf
arpl
fmull
je
inc
xchg
cmpb
cmp
test
adc
sarb
ljmp
outsb
inc
adc
popa
lock
add
repnz
mov
pop
xor
jbe
jo
mov
xchg
push
arpl
or
cmp
mov
xorl
nop
jbe
mov
cmp
push
xchg
mov
int3
movsb
xchg
xor
je
movsl
mov
xchg
add
jae
popl
repnz
mov
jge
xor
dec
ja
dec
imul
sbb
shl
xchg
fsubrl
jg
xor
hlt
mov
fsts
sbbl
andb
adc
das
xchg
pop
adc
mov
jnp
rorb
add
cmp
xchg
push
inc
lock
push
mov
add
sbb
and
sbb
outsb
cltd
lods
inc
jecxz
daa
xchg
lretw
pop
lock
cmp
negl
out
lods
test
pop
push
sbb
dec
sub
and
mov
inc
mov
push
jo
fisttps
mov
add
jo
outsl
mov
ja
sub
ja
jo
lahf
movl
jo
cmp
cwtl
xchg
prefetch
sbb
xchg
addr16
mov
cli
sub
gs
pop
ds
insl
pop
xor
ja
and
jp
adc
jb
sub
jle
pushf
sbb
in
and
subl
xchg
scas
or
out
shll
loop
in
xor
dec
mov
test
jo
push
std
test
test
add
jns
push
arpl
mov
and
xor
or
jo
fistps
pop
test
jl
cltd
jnp
push
lret
mov
in
pushf
jnp
sbb
mov
stos
aam
jo
push
outsb
enter
add
mov
je
in
xor
dec
xchg
or
jo
inc
inc
push
mov
jl
jo
lds
and
add
jae
pop
inc
mov
movsb
jo
mov
lds
push
dec
add
jo
lret
movlps
cltd
insb
out
jo
lock
movsb
dec
xor
test
dec
in
mov
js
jl
inc
ljmp
add
jns
xor
sbb
jo
or
mov
stc
fidivrs
in
or
addr16
xor
out
cmp
jo,pt
dec
cmp
fisubrl
or
movl
mov
jmp
push
gs
jl
fucomp
push
dec
lret
jmp
sbb
fcoms
and
or
mov
xchg
mov
push
mov
push
in
es
xchg
movsl
int
rorb
insb
sbbl
pop
sub
and
lock
ss
pop
push
sarl
sbb
pop
jns
nop
loope
cmp
jo
shrb
cltd
push
jo
test
inc
xor
repnz
cmp
mov
add
adc
mov
sbb
sub
imul
xchg
mov
js
adc
push
repz
sarb
jo
pop
aas
mov
jl
sbb
pop
dec
and
sahf
rcll
fidivl
or
js
repz
pushf
pop
insl
out
sub
rclb
ja
fmul
pop
xorl
and
lock
sbb
icebp
jo
xor
sub
pop
outsb
inc
fwait
mov
dec
clc
pop
or
jle
xchg
adc
cmp
bound
andl
sub
pop
pop
push
adc
pop
mov
jp
jp
loopne
into
insl
mov
add
pop
test
jo
outsl
mov
test
sahf
mov
jbe
insb
popa
mov
addr16
mov
push
sub
iret
jo
subb
xchg
pop
adc
push
divb
sub
into
mov
jo
push
mov
ret
mov
jb
scas
roll
dec
sbb
ss
jo
aad
clc
in
dec
test
insb
add
cmp
call
aaa
rcll
shrl
jmp
xor
mov
daa
jecxz
out
fnsave
or
mov
ja
jg
rcrb
fistpll
data16
jo
push
push
test
nop
outsl
sbb
inc
lahf
lds
jo
xor
dec
ljmp
js
aam
and
jns
add
adc
out
shrl
dec
jne
mov
mov
mov
in
es
cwtl
cltd
inc
jnp
mov
testb
insl
sbb
in
jno
insl
and
fnstsw
cmc
xchg
xadd
scas
xor
push
or
mov
jnp
and
fcompl
cmp
fsts
mov
mov
std
hlt
push
xchg
or
es
jle
push
jbe
xchg
imul
xor
cmc
aas
mov
cmpsb
andl
ljmp
sti
jmp
or
dec
aam
fnstcw
pop
mov
jecxz
dec
mov
sbb
test
testl
fs
in
aas
mov
movsb
sahf
insb
mov
out
gs
lds
loopne
pop
int
das
mov
fldenv
xchg
mov
in
pop
in
inc
mov
ds
stos
dec
in
jbe
xchg
and
mov
jbe
and
pop
pusha
mov
in
jne
insl
or
jl
loopne
ret
inc
arpl
adc
in
insb
jle
aam
cmpsb
cmpsb
jmp
mov
jo
jecxz
or
xchg
dec
mov
dec
xlat
add
xchg
or
and
mov
insl
sbb
imul
pop
add
sbb
xchg
jo
stc
pop
mov
adc
xor
outsl
jb
loopne
and
fwait
lahf
mov
imul
pop
mov
push
mov
jecxz
add
adc
dec
sahf
jg
int3
jp
pushf
jmp
and
mov
mov
pop
cmpsl
rcrb
lods
xor
mov
cmp
lahf
mov
jecxz
adc
xchg
sarl
data16
jp
je
or
pop
xchg
cwtl
pop
in
js
fsts
call
mov
adc
sbb
insl
xchg
jne
daa
jne
xchg
in
cwtl
and
and
jo
inc
sub
shll
sub
sbb
lcall
fdivs
ja
dec
inc
xchg
jno
fs
cmp
pop
cmp
arpl
jne
cwtl
insb
frstor
ss
and
fstps
jne
inc
xchg
sub
outsb
out
xchg
das
push
sub
psubb
mov
jns
mov
rcll
aas
addr16
pop
mov
mov
out
inc
out
or
cli
sarb
jo
xor
add
mov
rcrb
arpl
lret
ret
test
jae
dec
or
nop
xor
jnp
js
push
call
jne
fistpll
ss
push
and
sub
loopne
inc
je
fstl
repz
push
xchg
inc
xchg
sbb
aaa
inc
push
testl
pusha
push
test
idivb
sub
push
lock
jbe
pop
pop
into
mov
and
push
inc
in
jns
gs
insb
inc
xlat
sahf
adc
je
int3
mov
cwtl
insb
xor
and
or
sub
pop
in
push
xor
fcmovnb
ja
jno
outsb
mov
lcall
push
or
mov
and
sahf
and
repz
and
sbb
imul
insl
jne
enter
push
xchg
inc
or
into
dec
inc
pop
xchg
xor
xchg
arpl
jae
fsubs
sti
fstps
movsb
mov
and
jle
dec
sbb
jb
cmp
rcl
xchg
jae
adc
repnz
cmp
adc
adc
leave
add
fsubrp
dec
xor
cmc
fnstenv
adc
mov
int
xor
ss
sub
push
add
subb
sbb
mov
and
fcompl
nop
push
jge
add
inc
je
out
rorb
test
mov
cmp
adc
call
push
pop
outsl
pushf
sbb
ds
outsl
les
lret
lods
sub
sbb
pop
lds
push
fcompl
pop
out
fsub
or
loopne
sti
add
test
sbb
jns
test
inc
push
inc
fucom
cmp
lret
lea
out
js
cld
in
dec
cwtl
inc
push
jmp
test
pop
jl
cbtw
test
mov
testb
or
clc
test
loopne
push
sub
xchg
mov
mov
lret
lret
mov
bndstx
lock
jne
mov
xchg
subl
loopne
and
cmp
sbb
loopne
xchg
jne
iret
xchg
pop
cltd
add
lret
jb
sub
xchg
mov
ret
rcrl
mov
push
arpl
add
pop
mov
popf
ret
jb
push
loope
xchg
into
rcr
adc
test
fs
dec
fnstcw
mov
mov
xchg
out
sub
ljmp
ret
ja
stc
mov
mov
lcall
lret
shr
jle
mov
loope
pop
pusha
adc
rcrb
adc
push
int3
outsb
out
in
sub
into
push
mov
sbb
repnz
mov
cld
sarb
ljmp
dec
movsb
lods
inc
leave
ja
dec
mov
and
xchg
xchg
jmp
mov
stos
mov
sbb
push
cmp
scas
in
xchg
addr16
out
xor
sbb
repz
pop
cmc
mov
mov
mov
xchg
insl
sub
or
sub
lea
cmp
andb
jae
cmp
mov
xchg
pushf
fsubrl
mov
xchg
push
daa
ss
xchg
sub
ljmp
sarl
jge
out
rolb
jg
cmpsb
fnstcw
cmpsl
mov
jo
das
inc
leave
or
stos
cmp
inc
test
mov
inc
js
repnz
mov
lock
sub
mov
dec
nop
mov
jo
mov
push
inc
insl
flds
das
mov
ficoms
cmp
aad
les
cmp
jno
sub
mov
xor
sub
insl
add
push
pop
inc
cmc
or
jne
dec
imul
and
sub
test
jb
jo
pop
cmp
js
inc
adc
bound
dec
mov
jle
hlt
jae
sarb
jnp
clc
or
lods
jo
pushf
rcrl
push
jecxz
xchg
insl
sub
insl
pop
push
rcl
jo
pop
imul
jne
jo
cmp
xchg
hlt
das
push
insb
lea
ret
icebp
test
lock
jg
xor
cmc
jns
addl
mov
loop
inc
daa
jo
push
cmp
jo
mov
dec
fsubrs
sti
insl
out
loope
nop
pop
push
cmp
dec
lcall
orl
sub
mov
push
jmp
inc
sbb
outsb
jmp
rorb
push
jge
movsl
lods
dec
call
sti
adc
cmc
xchg
inc
pusha
jo
adc
fnsave
daa
push
xchg
int3
pcmpgtd
nop
das
fdivrs
aaa
jo
insl
pop
adc
dec
xchg
jo
hlt
ds
mov
cmp
insb
cmp
xor
in
dec
push
mov
lock
adc
push
add
ret
fwait
mov
dec
push
rcll
cmp
push
dec
sti
shrb
insl
inc
insb
or
xchg
mov
fsubrs
std
imul
mov
push
xor
xchg
fwait
dec
mov
mov
pop
test
iret
jo
sbb
inc
pop
je
inc
lods
adc
dec
push
jo
cmp
movsb
cwtl
insl
inc
int
sahf
mov
push
lock
mov
pushf
shlb
icebp
or
jae
push
in
jbe
int3
lock
lods
xchg
jo
inc
inc
imul
sahf
xor
push
aam
into
lods
xorb
inc
mov
scas
lret
insl
mov
pop
xor
repnz
mov
subl
rcr
xor
jo
aam
out
cs
jle
jo
inc
push
inc
sbb
ss
xor
subl
jo
xchg
fs
sbb
pusha
jo
and
lds
fcmove
or
lods
sahf
jo
inc
inc
repz
mov
jo
in
mov
fwait
jmp
jmp
and
icebp
mov
ss
mov
popa
mov
insb
addr16
sbb
pop
lds
sub
push
jbe
jo
leave
push
and
pop
stos
pop
jo
lret
lods
push
push
jp
pusha
adcl
mov
aaa
push
jo
mov
dec
test
sub
xor
das
bound
jo
out
fwait
pop
cmp
dec
jp
lahf
mov
test
add
jo
lret
popf
outsl
popa
or
push
or
jo
mov
dec
fimull
inc
inc
xchg
jnp
mov
in
mov
lods
fildl
loope
or
mov
xchg
js
ss
xchg
aam
push
jnp
std
xchg
adc
out
push
dec
jo
push
lahf
cltd
imul
and
notl
jno
stos
pop
rcr
sbb
add
xor
outsl
mov
lcall
jmp
jo
dec
ficoms
stos
cmc
ret
jo
clc
frstor
js
je
inc
inc
jmp
dec
cmpsb
inc
lcall
add
clc
push
ljmp
icebp
adc
add
mov
mov
in
insl
sub
pop
sbb
mov
mov
fidivrs
lds
std
mov
into
inc
cld
cwtl
xchg
clc
jo
data16
mov
jo
repnz
ja
dec
pop
shll
gs
in
bound
adc
out
jo
mov
dec
das
imul
fnstcw
out
lret
pop
jmp
jo
inc
pop
lahf
add
shrl
push
push
dec
pushf
in
dec
fsubrl
adc
dec
cmpsl
pop
fs
sbb
xor
out
enter
add
dec
adc
pop
shl
jo
test
lahf
popa
jo
stc
jns
out
lret
pop
inc
shl
iret
lock
das
mov
jo
ret
dec
push
inc
sub
push
fcmovu
ret
adc
rolb
or
lcall
ret
cmp
jo
adc
mov
inc
pop
xchg
lock
inc
adc
inc
jo
fildll
lea
push
jo
add
fwait
mov
jo
and
push
dec
xchg
xlat
lds
lret
test
in
jmp
fimull
cmpsb
fisttpl
bound
std
jo
outsl
lahf
out
jecxz
mov
test
in
pusha
jo
or
mov
push
inc
jno
sub
lods
inc
sti
dec
wrmsr
inc
adc
adc
fsubr
xor
lods
daa
cmp
add
loopne
dec
push
je
mov
cmpsb
ss
adc
dec
push
sbb
ljmp
loopne
jo
pop
mov
shrl
pshufw
push
movsb
out
daa
adc
push
js
incb
sub
insl
lods
pop
in
ja
arpl
or
or
jae
mov
loopne
mov
out
sub
pop
out
nop
jo
sahf
adc
sbb
jo
lea
xchg
jo
addr16
mov
jp
mov
cmp
sti
pop
cmp
add
jo
add
fwait
popf
mov
jo
jl
loop
addr16
jo
add
push
xlat
jo
rcll
mov
jmp
jo
imul
dec
clc
arpl
ficompl
cmp
xor
lret
outsb
insl
mov
lret
mov
xor
push
movsl
push
add
std
dec
xor
daa
adc
mov
fs
sub
mov
insl
cli
shlb
mov
xchg
jo
popf
loope
ja
jge
insb
sub
pop
push
loopne
pop
jo
mov
scas
arpl
or
xchg
add
push
out
clc
and
inc
mov
or
jo
pop
sbb
dec
roll
pushf
mov
pop
push
sub
mov
lock
cwtl
data16
test
sar
in
ds
adc
leave
mov
jo
sub
daa
jae
cmpsb
rep
jae
jge
pop
nop
and
ja
popa
pop
imul
jb
aaa
fld1
pop
idiv
ret
adc
adc
test
stos
mov
inc
test
inc
jo
sub
dec
pusha
outsb
jb
in
fists
inc
pop
ja
mov
xor
jp
xchg
in
jle
push
cmc
aas
push
xor
jno
lods
adc
mov
loop
pop
xor
jmp
jae
out
or
push
loopne
sarl
jo
sbb
cmp
adc
push
jo
outsb
iret
adc
inc
ret
dec
inc
out
ja
xor
sbb
divb
inc
lahf
dec
out
mov
mov
data16
gs
sub
mov
lock
mov
in
pop
jl
enter
test
xlat
mov
shrb
stos
push
lock
or
test
push
jo
out
lcall
cmp
addr16
pop
dec
int3
enter
adc
xchg
xorb
pop
nop
lret
lock
fwait
jo
test
inc
cmc
jp
sub
nop
cmp
jo
pop
mov
les
pop
push
cmp
cwtl
lock
jo
mov
out
movsb
mov
icebp
pushf
xchg
pop
jo
xchg
jae
mov
pop
jno
insl
mov
ss
pop
rcl
int
sbb
jp
cmc
mov
lods
jo
out
js
lods
out
loope
jp
je
fdivs
cld
lcall
test
nop
stos
add
jae
xor
mov
lds
add
daa
loop
test
test
scas
jg
mov
sbb
nop
stos
aam
jo
ljmp
pop
mov
dec
mov
int
ljmp
sub
mov
jo
cwtl
in
mov
in
sbb
mov
or
lret
js
aam
jne
out
loopne
xor
mov
pop
push
mov
xchg
pop
or
inc
in
pop
call
cmpsb
sbbb
xchg
add
mov
adc
in
gs
add
sub
imul
bound
sbb
or
mov
xchg
fs
xor
dec
dec
daa
mov
sbb
and
cmp
clc
cli
inc
and
dec
mov
sub
cmp
dec
add
jge
push
dec
aaa
mov
jl
and
repz
js
xchg
imul
test
lcall
lods
ss
rclb
out
addb
or
sbbl
mov
fistpll
mov
sub
popa
or
sarl
shll
inc
sub
mov
dec
and
mov
push
jle
push
popf
setl
scas
mov
adc
jl
ds
fidivrs
bound
cld
arpl
and
js
test
fwait
nop
pop
outsb
add
fiadds
lods
push
jmp
aas
lret
adc
hlt
mov
aaa
cwtl
mov
fwait
daa
xor
adc
lock
or
push
dec
sbb
sub
xor
cwtl
inc
fnstcw
add
int
cwtl
mov
stos
lahf
jnp
sahf
cmpsb
iret
push
cld
xor
sub
movsb
cli
je
xchg
pushf
sub
inc
xchg
loopne
inc
sub
cwtl
dec
mov
mov
jmp
fcmovu
pop
mov
repnz
fsts
clc
outsb
sbb
mov
push
pop
adc
shrl
xor
and
insl
shl
cwtl
pushf
mov
enter
mov
out
mov
ud1
push
sub
xchg
sub
xchg
fisttpl
push
je
repnz
or
loope
pop
and
add
fsub
pop
pop
xchg
outsb
sti
mov
cmp
xor
repz
adc
in
imul
jg
push
ret
scas
ss
in
xorl
loopne
xchg
mov
mov
lods
jg
and
cmp
jbe
sbb
cmpsl
fwait
push
dec
lret
ss
mov
mov
jae
scas
gs
imul
mov
sub
xor
lock
adc
test
addr16
jmp
call
pop
ja
push
inc
jne
and
sbb
lahf
scas
add
in
insb
xchg
lods
or
test
xor
std
sbb
clc
iret
lods
xchg
cmp
xor
call
push
mov
hlt
dec
loop
cli
jo
and
jmp
std
add
jns
jo
out
xor
adc
outsl
test
mov
ja
insl
mov
ret
icebp
xlat
push
jo
mov
lods
int3
imul
xchg
push
mov
bound
test
fcoms
push
mov
or
push
mov
ljmp
ret
jae
jo
lahf
negb
jne
es
loope
shll
pop
dec
test
popf
in
fldt
mov
test
cmp
sub
push
scas
pushf
pop
negl
or
roll
xor
insl
sbb
sub
xor
mull
cmc
mov
sbb
or
push
push
lahf
sub
push
mov
cmp
in
push
jno
aam
lret
in
xor
cmc
and
inc
aam
bound
mov
dec
in
sub
in
mov
out
notb
loop
sbb
test
push
adc
mov
pop
mov
jnp
push
push
sub
loopne
je
shlb
pop
adc
cmp
jge
scas
daa
mov
mov
push
pop
lahf
pop
fistpll
xchg
xor
fadd
cmp
es
sets
inc
cmp
test
sub
inc
dec
jae
imul
arpl
mov
inc
and
int
scas
sub
mov
mov
sbb
lret
icebp
mov
sbb
shufps
add
push
popf
jns
dec
mov
std
pop
inc
aad
sbb
imul
sti
dec
adc
dec
iret
xchg
xchg
lods
arpl
jo
mov
sub
imulb
clc
sub
adc
pop
pop
jo
and
fidivs
cld
xor
adc
cmpsl
jo,pt
dec
cwtl
ss
pop
pop
jo
movl
mov
scas
mov
imul
clc
leave
push
jp
lds
mov
jno
test
jno
jo
cmp
vmovhpd
sbb
mov
mov
sub
sbb
ja
adc
test
sub
adc
add
pop
sbb
mov
jp
fs
ja
jle
jb
inc
dec
ss
mov
sti
xchg
subb
sub
cli
unpckhps
dec
jo
test
insl
lcall
nop
adc
jo
mov
lcall
cmpsb
jns
lret
stos
pop
jo
pop
add
iret
push
lahf
in
ja
mov
jp
cltd
lock
movsl
rorl
jb
jg
jo
mov
mov
jo
pushf
cld
add
pusha
std
lret
movsb
fists
inc
fnsave
mov
out
jo
xlat
icebp
push
push
add
ljmp
pop
and
cmc
int3
jo
and
sub
xor
jo
out
cmp
xchg
cmp
xchg
sarb
les
rcll
cld
lea
dec
mov
lock
sub
sbb
mov
fsubrl
std
add
cmpsb
mov
jns
cld
mov
popa
cli
inc
adc
dec
clc
mov
mov
int
dec
insl
and
data16
insl
pop
aad
pop
mov
xchg
bt
fs
xchg
jo
xchg
fidivrs
pop
dec
mov
jo
sbb
jo
inc
or
add
jne
pop
out
xchg
jo
cmp
or
push
push
sub
hlt
pushl
sbbl
mov
pop
and
ljmp
mov
jo
pop
mov
sarb
sbb
lods
cmpsl
jns
fisttpl
dec
jg
sbb
mov
lods
push
ljmp
idiv
jnp
jns
js
or
push
push
jo
nop
push
jmp
cmp
cli
jnp
jmp
xchg
ret
mov
lock
scas
mov
adc
pop
mov
lahf
neg
mov
and
push
stc
xorl
outsl
sbb
aad
stos
cmpb
jo
mov
cli
arpl
rorb
cmpsl
adc
out
data16
xor
not
repnz
sbb
sub
or
mov
lods
mov
andb
aam
jo
inc
xor
xchg
ficompl
sti
sbb
xlat
mov
xchg
shll
inc
push
loop
xor
push
out
cmp
mov
into
les
cmc
pop
jmp
negb
enter
imul
pop
dec
jo
xchg
fbstp
cs
repz
mov
jne
cmp
add
jo
xchg
jo
xor
gs
adc
xchg
shlb
mov
mov
inc
xchg
jo
inc
fsub
jge
jo
or
sub
lds
insl
pop
pushf
out
nop
adc
pushl
stc
lock
push
fldenv
push
in
inc
jae
scas
adc
cmp
jne
dec
or
jmp
jo
cmp
mov
int3
push
inc
pop
and
std
les
push
ja
movsl
push
lcall
sbb
shlb
scas
aad
inc
arpl
movsb
pop
mov
mov
bound
xchg
shll
lods
and
aas
xchg
movsb
test
pusha
ret
aaa
loopne
add
popf
jge
sti
adc
pop
xlat
jecxz
shlb
aaa
xchg
mov
lret
sarb
fimuls
fnstenv
mov
or
jo
inc
gs
test
push
fisubs
pop
aam
xchg
inc
jo
dec
xchg
jo
cmp
add
xor
inc
lods
popf
sub
fsub
sbb
adc
nop
cmp
jmp
into
push
leave
jo
popf
lahf
std
mov
movsb
dec
mov
jo
jnp
out
das
in
jne
enter
pusha
cwtl
jo
aas
mov
loope
insb
sbb
cmpsl
jo
jge
sbb
xchg
push
jo
adc
sub
ja
js
dec
xor
movsl
mov
rcl
and
fmulp
pop
sbb
lods
inc
in
jo
scas
sbb
inc
mov
je
mov
sub
sbb
ret
cltd
push
xchg
inc
pop
aam
lcall
push
adc
test
push
popfw
jbe
outsl
pushf
pop
mov
inc
dec
dec
mov
mov
jae
xchg
sbb
jno
ret
gs
jo
adc
fidivl
lds
mov
jo
cmp
sar
mov
pop
jb
in
mov
and
fidivl
mov
jmp
jp
mov
mov
faddl
pop
jo
inc
cmpb
hlt
jo
jge
flds
shlb
mov
lods
adc
mov
ja
daa
pop
cli
das
loopne
add
cli
dec
push
mov
xchg
xlat
test
jo
add
shrl
insl
aam
scas
cs
dec
xlat
xchg
repnz
xchg
pusha
jno
lock
mov
mov
push
push
and
subl
push
je
jmp
das
scas
repz
lret
loopne
mov
or
ficoml
in
xor
dec
shrb
pop
mov
sub
pop
insl
push
inc
out
cwtl
je
aas
call
sbb
mov
jge
sub
add
jbe
imul
sub
or
rclb
std
push
pop
mov
cs
add
push
gs
push
push
jo
inc
or
fxch
or
fs
xchg
pop
addb
xchg
inc
xor
dec
jo
add
xlat
sub
jo
lods
jmp
sbb
inc
scas
pushf
cmp
pop
jo
outsl
jecxz
jl
push
sarl
lcall
pop
ja
dec
repz
pop
jo
in
lds
loope
jo
cmp
out
and
test
mov
rcll
loopne
mov
jo
jle
mov
addr16
mov
jbe
out
mov
xchg
lret
mov
rorl
outsl
jo
or
stos
jge
jl
in
sbb
jnp
js
pop
mov
adc
jns
cmp
out
pusha
xchg
jno
pop
mov
aas
in
fildll
outsl
jo
add
stos
adc
rclb
out
add
adc
or
push
lock
jp
movsl
shr
scas
mov
xchg
xor
std
push
mov
mov
adc
mov
mov
aad
std
fdivs
repnz
loopne
or
sub
fdivr
cmp
movsb
mov
jo
mov
mov
cwtl
pushf
or
stc
pop
inc
out
cmp
jo
adc
cmpsb
int
lcall
add
xchg
sbb
dec
jo
xor
in
fmull
cmpsb
sub
out
jo
push
pop
sub
ret
outsb
mov
cmp
fisubrl
iret
add
andb
jns
mov
hlt
xchg
out
jo
xchg
das
sahf
jne
lret
enter
inc
dec
out
pop
inc
add
out
fs
es
xorb
sbb
xchg
xchg
in
jb
and
lds
jo
icebp
mov
jo
inc
fstl
push
xchg
mov
cmpsl
lcall
sub
add
int3
sbb
jne
inc
xor
sub
and
xchg
insb
cltd
jo
rorl
das
rcll
adc
fmuls
addr16
pop
jo
out
cmp
cld
jo
cmp
ja
push
jl
andl
cmp
jo
cmp
jno
jo
push
or
sbb
adc
arpl
pop
stc
lcall
stos
xchg
es
mov
je
daa
das
pop
clc
jbe
mov
rcrl
loope
jo
sub
lret
dec
jo
scas
clc
dec
xchg
cmc
fdivl
jo
cmp
jns
cld
mov
jnp
sbb
cltd
hlt
int
adcl
fnstsw
dec
in
addr16
enter
lods
inc
test
sbb
xchg
push
and
xchg
mov
mov
in
iret
std
push
js
push
jb
inc
jb
xchg
nop
ljmp
sbb
fsts
dec
popf
inc
hlt
cmc
pop
fsubrs
dec
sbb
clc
add
xchg
sti
mov
ret
notl
neg
adc
lcall
faddl
xchg
pushf
jo
mov
cmp
xchg
mov
testb
stos
lock
cwtl
mov
add
sub
imulb
pop
mov
pop
xlat
je
xor
add
jae
sti
jmp
leave
addr16
mov
dec
xchg
fistl
cmp
xchg
enter
push
inc
jno
mov
xchg
jno
sub
cmp
inc
inc
pusha
and
cmp
pop
or
unpcklps
ljmp
cmc
push
pop
jl
jae
dec
dec
in
jne
lret
jnp
sub
jl
ret
mov
lods
in
gs
xlat
aas
xorl
loope
in
inc
jne
push
nop
in
ss
rcll
pop
shrb
gs
sub
rolb
push
ret
je
sub
ljmp
and
jno
push
mov
xchg
aad
andb
xchg
mov
shl
pop
js
and
lds
fldt
aam
and
pusha
mov
scas
xchg
jp
sti
lahf
xor
clc
mov
cwtl
and
sub
inc
mov
jecxz
xchg
aaa
mov
in
mov
outsl
mov
in
addl
fwait
cmp
mov
sub
xchg
mov
jb
sub
shlb
aad
movsl
mov
pop
pop
into
hlt
data16
movsl
dec
repnz
fildll
add
dec
movsl
inc
sub
icebp
loopne
lret
adc
sahf
in
mov
dec
fnstcw
nop
and
fcoms
imul
xchg
mov
shll
and
loopne
xchg
out
in
idivl
scas
enter
push
adc
pop
mov
cwtl
pop
je
out
mov
mov
mov
stos
push
setae
mov
scas
pop
jg
inc
fisubl
mov
aam
jp
out
or
sti
ret
mov
mov
mov
or
jno
xchg
jl
insl
cmp
sahf
std
and
ret
loopne
scas
dec
js
sub
push
sbb
lods
fnstenv
out
cmp
nop
mov
mov
add
fwait
orb
lahf
and
dec
popf
cwtl
jge
pop
cmpsb
pop
or
ds
add
lods
fisubrs
in
adc
fistpll
mov
aam
scas
push
shrl
sub
dec
push
negl
mov
sahf
pop
jne
mov
xchg
sub
sti
xlat
je
adc
xchg
or
add
ds
subb
ret
mov
scas
inc
shlb
adc
shlb
mov
xchg
xor
xor
imul
sbb
jl
clc
dec
imull
mov
divb
adc
mov
fisubrl
insb
or
jle
jne
scas
push
mov
push
mov
es
and
out
push
enter
imull
dec
xchg
pop
push
sub
je
sbb
leave
inc
cmpsl
outsl
mov
fldcw
xor
push
dec
ret
mov
xchg
ljmp
int3
mov
in
int3
mov
dec
xchg
pop
aas
jmp
xchg
pusha
or
push
lcall
xor
xor
adc
jae
or
lods
sbb
insb
jne
and
addl
and
jmp
fisttps
mov
fnstsw
and
mov
in
outsb
outsl
insb
loop
cwtl
mov
jbe
jb
or
push
es
push
xchg
push
cmp
insl
and
lods
insb
sub
jae
std
lret
sbb
int3
outsb
or
mov
sub
in
push
xchg
enter
xlat
xchg
inc
xor
je
cmp
mov
jmp
push
outsb
jecxz
in
mov
mov
lahf
cmp
cwtl
sti
testl
incb
int3
lods
arpl
cmp
and
mov
pusha
mov
adc
push
pop
fisubrs
jg
rcrb
stc
outsb
data16
xor
lcall
outsb
jnp
xchg
mov
xchg
adc
nop
pop
jns
mov
fadds
pop
jl
cmp
mov
or
sub
ds
js
daa
push
sub
cwtl
jle
mov
cmp
ds
fs
sbb
cwtl
push
jns
or
mov
jbe
jl
in
and
lret
inc
je
dec
add
mov
mov
mov
loop
push
addr16
inc
push
lods
xchg
jl
mov
imulb
cwtl
inc
notl
mov
push
cmc
xchg
xchg
inc
loope
leave
lea
pop
mov
jo
sbb
leave
add
out
outsl
out
mov
cmp
shrb
outsl
xor
outsl
push
mov
flds
test
fwait
or
or
push
lret
pop
gs
and
hlt
cmp
mov
jl
cs
mov
popf
cmpsl
sti
push
outsb
pushf
sbb
xchg
or
aaa
into
in
push
push
mov
lds
pop
sub
in
mov
and
pushf
sbb
daa
xchg
fyl2xp1
dec
out
jb
andb
rcl
push
insl
or
xchg
mov
cli
mov
and
sbb
xchg
jo
in
inc
mov
adc
push
pushf
xor
pop
xchg
pop
mov
cwtl
cmp
aas
cmp
fidivrl
insl
and
addr16
aam
and
test
adc
xchg
mov
mov
mov
out
aad
jo
jl
mulb
and
std
cli
sub
add
out
mov
push
or
xchg
or
cmpsb
fwait
das
jae
jns
cmc
in
loopne
pop
sbb
xchg
cmp
cmc
and
sub
js
scas
loope
adc
lods
pop
inc
cmp
dec
fcom
cmp
mov
cwtl
rorb
vpminsw
pop
or
and
and
lods
aad
fwait
call
int
jge
lock
cmpsl
lds
pushf
mov
pop
in
xchg
or
rcrb
dec
nop
lods
mov
and
inc
sub
pop
add
call
dec
sub
pop
decb
mov
idiv
mov
adc
movsl
jns
mov
inc
test
rcll
maxps
int
jo
push
pop
inc
inc
sti
dec
jmp
imul
cmp
loope
loope
or
and
cmp
xchg
mov
add
aam
jge
lret
pop
xor
mov
push
pushf
scas
pop
int3
or
sbb
pop
fbld
andb
fimull
adc
xor
or
mov
es
mull
popf
mov
in
jnp
imul
mov
ljmp
mov
aam
dec
hlt
mov
xchg
dec
notb
cs
cwtl
or
cmp
jl
inc
pop
inc
fisttpl
mov
sub
rcl
mov
sti
repnz
lods
sbb
notl
inc
push
sti
mov
lds
push
test
daa
jbe
test
cmp
bound
and
scas
push
ret
js
fisubrs
jg
xor
and
push
jmp
aaa
pushf
ss
xchg
data16
and
subb
cwtl
out
and
pop
in
inc
jo
subb
and
mov
cmpb
cmp
ljmp
jge
pop
and
orl
push
jl
ds
mov
adcb
cmc
push
jg
and
xchg
cmpsl
and
shl
dec
shll
and
xor
push
mov
jae
xchg
rcll
daa
cwtl
dec
sbb
in
mov
icebp
sub
jnp
js
and
pop
lcall
xchg
inc
inc
push
push
pop
mov
pop
push
popa
out
fildll
push
fstps
cmc
movsl
lahf
outsb
lahf
lret
sub
sti
ret
xchg
in
or
cmc
xchg
pop
mov
xchg
fchs
aaa
js
sub
inc
cwtl
enter
push
sbb
dec
stos
pop
push
adc
xor
jnp
cwtl
outsl
inc
arpl
jp
pop
sbb
inc
popa
cld
icebp
cmp
aad
mov
lcall
stos
sub
mov
orb
inc
push
mov
mov
jmp
xchg
shlb
push
adc
or
jb
bound
jae
out
bound
inc
mov
lock
ficomps
int
or
inc
push
adc
adc
aas
in
leave
xor
lock
and
mov
xor
add
sub
or
movsb
jb
roll
das
adc
dec
jecxz
or
int3
fisubs
clc
je
filds
push
out
hlt
adcb
mov
not
mov
test
mov
jo
shll
or
fs
jp
inc
push
in
cmc
push
orb
jmp
pushf
mov
sub
sahf
and
xchg
cmp
in
outsb
push
negb
jg
xchg
mov
testl
push
mov
cld
int3
movsl
mov
pop
loopne
es
xchg
imulb
inc
adc
dec
movsb
lahf
fdivs
mov
sysret
mov
pop
lods
jmp
dec
pop
rcrb
jl
adc
out
mov
stc
push
adc
cwtl
inc
test
pop
push
push
fnstenv
mov
imul
fcmovne
pop
dec
add
jmp
pop
in
mov
aas
pop
inc
test
add
std
insb
cwtl
mov
xchg
mov
cmp
xchg
cs
cli
icebp
int3
xchg
dec
sub
aaa
addr16
pop
icebp
jecxz
lds
push
jae
scas
test
lcall
push
sub
dec
xor
aaa
jl
pop
clc
mov
sbb
and
sbb
ljmp
sbb
loopne
out
mov
arpl
mov
jae
lret
or
popf
add
ret
cs
push
sar
outsl
dec
in
popa
aad
fldl
cwtl
xlat
cmc
push
mul
add
neg
mov
jo
ret
stc
fstpl
rcrb
xor
push
lock
pop
notl
std
std
fcom
sbb
pop
jl
push
mov
xor
aas
shrb
outsl
jecxz
enter
mov
xor
xchg
pop
push
jbe
mov
fs
popa
int3
insl
sahf
cmp
pop
mov
sbb
xor
shrb
cmp
or
aad
es
enter
das
lret
jne
mov
mov
dec
pushf
or
orb
or
in
outsl
xchg
fdivrs
xchg
scas
mulb
xor
push
pop
repnz
leave
or
sub
repz
out
adc
call
out
sahf
sub
inc
scas
lock
add
sti
xchg
or
xorb
mov
scas
push
bound
daa
push
push
jg
push
daa
xor
pop
sub
jge
cmp
mov
aaa
lds
movsl
jp
cmp
add
pop
imul
jle
add
sbb
push
push
xor
popf
cmp
push
scas
arpl
and
xorl
inc
sub
jb
fwait
cmp
xchg
dec
cmp
and
xor
jbe
in
scas
rorb
and
xchg
xor
cmp
lock
out
bound
mov
repnz
adcb
push
lock
xchg
mov
xor
lds
cld
sub
and
pushf
in
cwtl
popa
lds
enter
adc
fwait
lock
xchg
jo
cmp
int3
stos
cwtl
sbb
add
xchg
cltd
xlat
outsb
daa
int3
jge
push
cmp
dec
dec
rcrl
push
push
mov
imul
fmul
jbe
xchg
leave
aam
lret
fcoms
sub
add
inc
jle
inc
frstor
push
mov
xchg
xchg
fistpll
in
jo
pop
and
or
stos
je
andb
das
adc
loopne
and
push
notl
sub
repz
add
xchg
mov
roll
test
leave
clc
jo
testb
sbb
inc
push
fildll
mov
xor
repnz
inc
aaa
push
adc
sbb
jp
add
lret
and
movsb
cmpsb
cmp
push
and
pop
cmc
add
into
push
mov
pop
dec
adc
sbb
std
pop
or
and
daa
outsb
rolb
xor
mov
call
ja
cmp
mov
rolb
push
shrb
push
cwtl
and
add
insb
jg
xlat
sti
scas
fs
xchg
jp
fists
outsb
enter
and
push
and
and
mov
xorl
in
jl
xor
aad
adc
mov
mov
cmpsb
test
cmp
cmp
dec
popa
dec
sub
scas
negl
jnp
xor
enter
jg
cwtl
or
xchg
lods
imul
push
imulb
add
aas
pop
sbb
lds
or
push
movsl
mov
out
inc
addr16
andb
lret
mov
outsb
or
addl
cmp
xchg
jp
push
imul
xchg
mov
xor
cmp
insl
sbb
adc
imul
into
out
out
lock
and
jl
icebp
mov
in
fimull
test
xor
mov
test
js
cmp
pop
aas
divb
pop
and
loope
mov
xor
ret
fnstsw
sbb
and
mov
jl
fiadds
rol
sbbl
sbb
sbb
das
lods
imul
lock
and
bound
negl
xchg
hlt
jbe
cmp
mov
pop
cmp
xchg
lret
jae
or
mov
xchg
mov
adc
jnp
lcall
and
push
mov
add
clc
imul
push
hlt
pop
sub
sbb
mov
cmp
jnp
xor
jne
jp
enter
xchg
imul
pop
cmpsb
mov
int3
jne
xchg
sbb
movsl
pop
icebp
inc
cmc
insb
lock
add
cmp
imul
prefetch
rorb
sbb
add
fcoml
push
loopne
cwtl
pop
jmp
push
sbb
cltd
mov
inc
dec
dec
orl
int3
jle
loopne
in
adc
jle
push
cltd
cld
out
inc
push
mov
iret
or
ss
js
mov
mov
push
sahf
pop
adc
fs
aaa
test
adc
pop
ret
rcrb
push
ret
flds
xchg
mov
gs
adc
sub
xchg
xor
push
fnclex
xor
push
add
hlt
cwtl
dec
mov
aad
sbb
je
cwtl
or
inc
fldenv
pusha
shll
xchg
call
xor
xchg
mov
loopne
and
adc
add
mov
lret
jnp
sahf
mov
cmp
pusha
lods
or
xchg
add
dec
xchg
jnp
cmp
xor
lds
cld
ret
test
mov
sbb
arpl
sub
sbb
rcrl
jle
cmp
lods
jo
inc
sar
rolb
mov
cmp
lds
adc
pop
pop
or
loopne
mul
fstl
jp
dec
ficoml
sbb
stc
push
orl
pop
jo
sbb
and
push
divl
test
mov
call
shll
jnp
shl
push
jp
out
imul
lds
dec
sbb
addr16
jl
jle
rcrb
lret
cwtl
pop
shll
push
sub
xor
or
pop
orl
pop
movsl
mov
dec
fimuls
adc
and
mov
hlt
dec
mov
cmp
pop
cmp
cmpsl
xlat
push
push
xor
icebp
add
cmp
cmc
sbb
arpl
adcb
jbe
push
adc
cltd
mov
ret
ss
shrl
arpl
ja
jae
sbb
repz
cmpsl
movsb
jmp
test
fstl
jg
outsb
test
cmp
cli
add
jae
mov
mov
in
fs
adc
fwait
jo
sub
lahf
jo
clc
ret
movsl
inc
std
jo
mov
out
jo
add
cmc
adc
daa
jo
inc
and
jecxz
jo
fisubrs
popl
mov
and
loopne
fisttpll
mov
pop
aaa
imul
jnp
loope
daa
xorl
adc
out
sbb
lods
dec
xchg
scas
add
test
mov
aad
mov
add
fidivl
rcr
xchg
dec
mov
loop
call
ret
jae
mov
aad
push
daa
in
or
sbb
add
fnstsw
outsb
jo
addr16
add
mov
jo
push
test
jo
pusha
inc
cmp
jae
inc
adc
test
imul
cmp
sbb
insl
iret
add
fidivl
imul
jmp
aam
lods
jge
jo
dec
push
inc
push
outsb
into
insb
pop
ret
int3
or
pandn
pop
sarb
inc
add
dec
jo
shrb
or
incl
sahf
add
sub
cmp
ss
jae
inc
adc
cli
dec
and
or
mov
scas
add
jo
push
mov
push
jo
scas
or
jo
add
xchg
stc
cli
int
jno
decl
xchg
lcall
ljmp
mov
sbb
mov
jo
mov
fwait
xlat
or
cli
push
aam
jo
fbld
or
jo
and
pushf
imul
lods
cwtl
jl
int3
cmpl
mov
xchg
enter
inc
xchg
adc
add
sub
dec
stos
xor
aaa
add
repnz
rcl
jo
inc
repz
dec
out
imul
mov
xchg
jo
sub
rolb
cmp
jo
pop
inc
push
js
callw
mov
xchg
ds
mov
fdivr
xor
mov
in
andl
mov
scas
sub
jo
adc
xchg
lcall
jns
lahf
push
jg
jo
xchg
add
add
bnd
cmp
out
bound
sbb
push
mov
rorb
jo
outsb
adc
je
dec
xor
sub
and
sbb
icebp
pusha
or
mov
lock
push
jo
sahf
cld
push
push
nopl
stos
mov
jb
jmp
jo
imul
test
das
push
xchg
out
pop
cmp
cmp
xchg
push
outsl
push
mov
cmp
repz
jae
test
mov
ds
cmc
jg
fs
repnz
jo
int3
cmp
jo
ret
xchg
inc
adc
jae
enter
mov
rclb
inc
adc
ljmp
nop
fnstenv
push
dec
sub
lret
pop
inc
frstor
aad
mov
jb
sub
data16
push
push
nop
lds
outsl
loopne
pop
nop
or
insl
js
jmp
mov
push
loope
ja
testl
pop
push
dec
add
out
and
pop
addr16
xchg
addl
dec
add
sbb
into
adcb
cld
pop
add
ret
jo
xchg
js
lods
and
pop
mov
xor
dec
out
sti
icebp
scas
push
rcr
test
jmp
sbbb
test
jnp
popf
sub
mov
add
fstpt
jo
mov
insl
jo
pop
jmp
xchg
test
fidivs
and
or
gs
jae
fcomps
cmp
inc
cwtl
and
imul
in
jo
data16
lods
pop
jo
fwait
dec
shll
xor
out
data16
inc
dec
pop
dec
mov
adc
mov
fwait
add
fisubrl
sub
arpl
jae
adc
mov
aaa
in
jmp
mov
stos
xchg
push
xchg
or
jo
rolb
lret
aas
scas
jo
outsb
push
aaa
mov
data16
push
out
push
pop
insb
push
jo
pop
cmp
mov
dec
mov
or
insl
rclb
fstl
add
pop
jl
ret
arpl
jo
sbb
movsl
mov
loop
and
push
jge
jo
es
xorb
leave
out
pop
jmp
out
add
imul
in
dec
mov
gs
aaa
push
mov
fimuls
call
jmp
jo
jne
divb
ret
and
xchg
popa
ret
sbb
cli
xchg
jo
xchg
ficomps
sub
xlat
nop
cmpsb
inc
outsb
dec
jo
sti
popa
push
push
shll
in
push
scas
jge
sbb
mov
mov
mov
pop
sbb
jle
jo
repnz
dec
push
inc
inc
pop
ja
imul
push
jns
ss
test
out
and
jo
in
inc
sbb
push
cs
mov
mov
dec
xchg
mov
call
ret
add
test
flds
nop
adc
ret
jo
rcrb
add
jo
and
shll
mov
cmpsb
and
cmp
jo
add
subl
incl
loopne
loop
sub
in
repnz
subl
pop
mov
cld
arpl
dec
mov
aam
fs
add
mov
test
loop
insl
stos
and
sub
xor
xor
popa
sbb
lds
loopne
daa
sub
xor
insl
jle
sbb
pop
std
in
adc
insl
xor
mov
jb
push
inc
shlb
jo
add
fidivrl
or
cmp
or
out
xchg
cwtl
divb
icebp
mov
add
je
cwtl
bound
jl
ret
clc
xchg
inc
mov
aaa
sbb
pop
cmp
test
hlt
call
sub
mov
jle
fs
and
sub
sub
jo
mov
sbb
jo
xchg
les
mov
sbb
inc
out
cmpsb
fstl
mov
je
ret
pop
test
jo
outsl
fwait
adc
jbe
jae
or
ret
xor
mov
dec
leave
jp
push
jno
rcl
xor
mov
jo
mov
dec
lods
xchg
pop
insl
push
sub
add
add
jo
xchg
in
mov
adcb
fldcw
cld
loopne
loope
nop
dec
clc
std
jo
cmp
lcall
mov
sbb
in
jo
inc
pop
std
in
pusha
dec
jo
outsl
sbb
push
mov
jo
pop
fistl
push
lods
push
mov
pop
stos
mov
jo
mov
out
cmp
dec
mov
jo
loop
sbb
jo
and
inc
mov
call
iret
mov
out
or
cld
jo
push
mov
xchg
jo
cwtl
lods
out
jmp
xchg
xor
add
push
push
push
pop
inc
je
scas
aad
lret
imul
jo
aam
sub
dec
cmpsb
pop
cmp
insl
insl
lods
movsl
pop
xchg
mov
push
es
jb
je
jne
cmp
imul
jns
xchg
add
jp
fmull
cmp
xchg
pop
pop
jo
andb
lcall
cmp
xchg
sub
cwtl
sbb
lock
inc
mov
xchg
scas
jo
mov
cmp
jo
sbb
jecxz
sbb
adc
insl
jbe
shlb
cmp
xchg
test
adc
dec
je
pusha
movsb
push
pop
lcall
xor
jle
hlt
jg
clc
nop
les
and
jp
pop
xchg
ja
mov
popa
orb
outsb
jo
shr
outsl
les
sahf
sbb
mov
mov
lock
add
cmc
dec
sahf
insb
inc
xor
mov
or
sub
jo
bound
in
adc
aam
sbb
mov
sub
fidivl
mov
lahf
dec
int3
pop
movsb
in
adc
or
sub
hlt
dec
scas
jb
jo
test
mov
stc
mov
adc
mov
test
cltd
addl
adc
push
daa
sub
sub
cmpsl
dec
adc
jo
out
adc
sbb
mov
push
sub
xchg
add
xor
mov
lods
cmp
push
aaa
std
daa
push
sub
test
les
incl
pop
jns
insb
mov
mov
out
mov
jo
fmul
dec
cs
sbbb
pop
lock
cld
imul
xor
call
enter
mov
mov
and
mov
inc
enter
dec
jle
les
adc
and
lock
in
mov
dec
or
push
jae
ja
push
shll
mov
sar
mov
mov
xor
sub
jnp
jmp
mov
jo
loop
pop
mov
or
movsl
jg
insb
mov
jo
fnstcw
jb
test
lods
xchg
popf
shr
fmul
jo
dec
rol
stos
push
or
dec
jg
data16
jo
or
cltd
xchg
cmpsl
adc
jo
lret
pop
int
data16
ret
pminsw
out
mov
cmp
xor
add
mov
xlat
outsb
fcmovnbe
in
pop
dec
adc
addl
aas
push
mov
or
lahf
mov
xor
mov
into
xchg
test
int
mov
sub
dec
sti
aaa
dec
dec
jo
vpunpckldq
negl
jo,pn
imul
cmp
call
and
pushl
mov
mov
cmpb
gs
es
adc
notl
hlt
inc
mov
pop
stos
push
xchg
xor
inc
mov
mov
popf
cwtl
sub
dec
stc
jo
inc
gs
movsl
lret
mov
jo
sarl
jg
or
push
ret
sahf
movsb
outsb
add
stos
mov
lods
ja
or
fdiv
test
jo
mov
lahf
inc
lret
cmp
add
imul
adc
jmp
jo
shrb
imul
roll
mov
test
fistpl
fistpll
sbb
aas
out
outsl
leave
jo
fsubs
adc
rcrb
bnd
cmc
imul
mov
mov
xchg
mov
mov
xor
jae
pop
aas
imul
rcrb
fimull
hlt
nop
insl
int
dec
loop
ret
sti
jo
xor
jno
jo
and
cmp
xor
test
shl
sub
cmp
sbb
ret
dec
mov
mov
das
or
mov
xor
repz
dec
dec
xor
and
jp
je
cmp
jo
dec
fnstcw
jns
jo
jge
ret
cli
cmp
mov
jno
ret
lock
ljmp
jo
cltd
js
aas
sub
icebp
jo
inc
sub
repnz
test
jo
ror
in
pop
or
int3
sub
mov
ja
push
lock
jnp
xchg
jae
inc
or
rolb
pop
insl
das
sbbl
mov
enter
jo
xlat
cmp
dec
push
aaa
outsl
xchg
popf
pop
jae
cmpsl
push
and
ja
adc
cmp
nop
and
inc
cmp
aaa
sub
arpl
sub
pusha
mov
jo
mov
inc
cmpl
push
ds
std
clc
push
stos
pop
jo
lea
jo
dec
mov
add
inc
std
xor
das
sub
out
movsl
shrl
aam
xor
fildl
or
insl
es
push
add
jne
rorl
pushf
addr16
push
push
loop
mov
fildl
lock
leave
adc
in
ljmp
inc
dec
out
lds
lods
sbb
test
out
jo
add
aas
dec
std
pop
jo
cmpb
es
loopne
xor
push
nop
movsl
xchg
mov
xor
lods
outsb
and
mov
aad
jmp
movsb
xchg
mov
shll
adc
xorb
dec
inc
push
cmp
loope
fsubrp
xor
shrb
jo
pop
int3
pop
push
mov
out
inc
sbbl
mov
cmc
test
mov
mov
push
push
fcomps
cmp
mov
fs
cmp
gs
dec
fucomi
add
clc
fs
push
fmull
sbb
push
jo
rorb
mov
push
jo
cmp
outsl
jle
jns
les
and
dec
jo
dec
sub
push
cmpsl
sub
movsl
xor
leave
lahf
cwtl
jmp
jge
jns
or
icebp
dec
push
mov
pushf
pushf
mov
stos
sbb
hlt
jbe
mov
rcll
lock
adc
jo
div
mov
add
divb
fimuls
mov
jo
icebp
adc
push
or
and
vphaddubd
jg
pop
mov
adc
int3
ficoml
insb
jo
mov
sti
out
jo
jnp
shrl
fidivl
test
loop
iret
pop
sub
vpshufhw
fs
test
push
mov
jno
xchg
test
mov
dec
jno
add
mov
pop
nop
and
cmp
lret
es
int3
cli
pop
gs
aaa
adc
subb
jge
jo
xor
mov
jo
jmp
pop
xor
add
int
dec
jg
xchg
in
inc
push
bound
enter
cmp
aad
jge
sahf
lods
adc
test
xor
movsl
and
divl
mov
mov
aaa
leave
inc
add
lea
jp
shll
ss
loopne
jl
adcl
or
mov
push
mov
int3
mov
jns
xchg
pop
adc
jecxz
mov
mov
xchg
outsb
jo
fisttpl
dec
jo
mov
mov
es
adc
mov
jp
xor
aaa
pop
adcl
aas
mov
addr16
rorb
mov
pusha
jno
sbb
movsl
mov
por
mov
xchg
fcomip
inc
sarb
pop
lock
xchg
rcrb
aas
sbb
push
insl
sahf
cmp
sub
addb
xchg
dec
icebp
sub
sub
or
xor
cmpsb
das
jb
je
push
and
push
dec
push
cmp
and
not
xor
ljmp
mov
jo
xchg
sub
push
aad
aas
mov
sub
jp
add
pop
mov
shr
insl
add
test
mov
push
pop
and
push
add
call
jmp
cmp
jo
std
mov
aam
xor
jge
jo
cli
aaa
xchg
jnp
mov
jo
iret
add
cmp
xchg
int
pop
mov
mov
pop
or
inc
push
bound
adc
addr16
movsb
data16
pop
mov
sub
je
insb
push
inc
out
nop
daa
mov
add
ja
cmp
ret
pop
jo
nop
cmc
lcall
inc
lock
cmp
mov
xchg
mov
shll
pop
in
mov
jge
or
icebp
jo
ljmp
jo
sub
cli
insl
jle
sub
std
test
les
ljmp
aam
or
xlat
fwait
nop
ja
es
mov
test
add
mov
aam
iret
test
das
lret
jo
movsb
in
push
xchg
cli
add
sub
push
jo
and
repz
jo
stos
ret
pop
xchg
jo
sbb
je
call
rolb
jo
das
cmpsl
dec
pop
mov
or
mov
adc
push
data16
popa
cs
and
push
dec
jo
or
dec
lock
adc
xchg
adc
mov
mov
jo
or
xor
daa
sub
and
push
sarl
dec
dec
repz
insl
lahf
push
clc
in
dec
cmpsl
frstor
sbb
jge
lods
out
cli
in
mov
dec
sub
mov
stos
loop
xchg
or
inc
jl
adc
addr16
or
sub
mov
xchg
aam
cwtl
cmc
pop
out
call
dec
dec
push
incl
pop
mov
mov
xor
adc
sbb
cmp
les
sbb
sti
and
daa
aad
insl
out
add
jmp
outsb
testl
std
push
push
movsl
push
inc
push
aam
push
cmp
push
imul
jmp
sbb
mov
push
stc
call
in
adc
daa
scas
lea
sarl
imul
add
jne
and
mov
imull
test
ss
popf
imul
sub
icebp
xor
mov
cmp
inc
andb
imul
jg
rcrl
sti
jmp
pop
leave
push
jb
notb
jne
mov
adc
inc
xchg
and
cwtl
push
dec
sub
jae
call
pcmpgtb
lcall
icebp
cmc
jg
in
xor
fldcw
mov
mov
scas
push
adc
mov
add
outsl
aad
mov
pusha
fwait
lret
xchg
lods
cmp
clc
cmpsb
adcl
cmpsl
xor
in
leave
mov
adcb
js
pop
xchg
decl
inc
pusha
out
cmp
mov
ficoml
leave
xchg
push
in
in
xchg
adc
shr
sbb
into
sub
ljmp
inc
and
xchg
dec
sbb
cmc
pop
xchg
adc
xor
mov
je
pop
or
dec
cmp
push
add
lret
push
pop
mov
ret
dec
xchg
loopne
jle
add
sbb
or
sbb
scas
inc
ja
lds
pop
mov
pushf
movsb
cld
test
adc
lret
cmc
repz
mov
test
es
jle
mov
lds
aas
cwtl
cmp
dec
ss
cs
sbb
xor
add
sarl
xchg
jge
and
cmp
aas
and
mov
insl
add
aam
scas
sbbb
xchg
xchg
push
mov
cmp
jne
adc
add
outsl
shrl
sahf
rorl
imul
jg
adc
repnz
sbb
pop
push
es
push
adc
xchg
mov
cli
xor
mov
cmp
xor
cmp
hlt
cmp
pop
aam
xchg
insb
adc
aam
push
iret
fsubrs
and
xor
jnp
lea
leave
and
jbe
rorb
lock
cmp
adc
cmp
inc
aad
data16
dec
dec
fucomi
cwtl
jge
xchg
jno
lods
xchg
mov
insb
shrl
in
jge
data16
clc
mov
int3
out
fisttpll
pop
scas
pop
inc
test
and
bound
jbe
andb
stc
jo
shrb
bound
xor
mov
hlt
dec
cmp
mov
ljmp
and
iret
push
jns
in
and
test
push
adc
stc
pop
icebp
pop
xchg
cmpsl
leave
hlt
cmc
sub
pop
mull
out
data16
mov
test
xchg
out
xchg
lods
int
adc
sub
xchg
mov
mov
test
mov
sbb
mov
xor
pop
xor
xchg
ja
test
pop
cwtl
sbb
mov
loope
cmpsl
rorb
scas
mov
int3
jo
sbbb
xor
inc
bound
inc
jle
insb
sbb
insl
xchg
sarl
mov
aas
mov
je
arpl
fisttps
jbe
fimuls
adc
ja
adc
adc
pop
in
mov
xchg
ja
leave
shll
test
jl
cmc
nop
mov
fdivp
push
push
xchg
mov
push
and
dec
cli
mov
bound
pop
mov
mov
push
sbb
sbb
cmpsl
cwtl
xchg
xchg
add
cwtl
add
jbe
mov
js
imulb
add
push
les
fisttps
ljmp
call
sbb
rorb
test
test
add
bt
cld
cmpsl
clc
inc
and
pop
cmp
ret
push
mov
adc
cwtl
std
inc
scas
hlt
fs
jg
mov
add
loopne
jno
and
and
fs
sub
lcall
arpl
sub
popa
lods
adc
stos
stos
fdivs
lret
lods
mov
movsb
popf
jne
jge
je
clc
adc
fsubrs
cmp
mov
add
xor
outsb
loopne
clc
mov
push
jns
lret
repz
arpl
dec
stos
popf
sbb
insl
cmp
lock
cwtl
rcl
mov
pop
push
aad
jl
int
ficomps
inc
and
and
xor
test
test
push
jp
into
mov
pop
push
mov
jp
stos
addr16
mov
push
sbb
repz
stos
xor
mov
lds
out
stos
push
dec
xor
imul
sahf
adc
shlb
mov
in
jno
pop
xchg
enter
adc
pop
out
and
in
aaa
fucomi
mov
pop
testb
ds
sbb
dec
repz
repnz
out
loop
hlt
lods
out
out
or
dec
push
dec
jmp
mov
sub
lahf
lret
je
repnz
jecxz
push
xchg
fstps
push
lods
roll
lahf
push
adc
fidivl
add
xchg
aas
pushf
sbb
pusha
push
sub
jno
sar
orb
jmp
icebp
sar
mov
push
test
cmp
inc
mov
mov
xorb
inc
cwtl
in
inc
into
stos
loopne
or
clc
add
pop
push
xchg
push
shlb
push
mov
pop
push
inc
adc
test
rcll
es
xchg
out
pushf
cwtl
sub
jno
mov
add
addr16
or
or
mov
mov
stos
or
enter
movsb
jo
jmp
scas
call
mov
fs
and
adc
testb
out
xchg
xor
insl
pop
aam
cmp
in
ja
cmp
adc
jae
repnz
xor
xor
call
sub
ja
adc
ficoml
iret
mov
mov
sub
and
sbb
ja
cmc
jmp
shll
jle
push
sti
jg
data16
ja
push
fs
dec
mov
ficoml
ret
jmp
jo
sbb
or
ja
loop
out
pop
add
rep
jo
clc
ss
add
jo
sbb
mov
dec
dec
xlat
add
or
jp
pop
into
dec
adc
cld
push
pop
mov
mov
dec
test
push
jge
xchg
test
orl
cwtl
imul
push
dec
mov
pop
sbb
cs
cmp
pop
insl
movsb
xchg
sti
mov
dec
pop
xor
sub
mov
js
ljmp
add
pusha
jo
scas
sbb
fidivrl
mov
aaa
mov
and
dec
shrb
jp
or
into
adc
dec
mov
lahf
add
nop
sub
repnz
movsb
lcall
insl
ja
push
dec
scas
enter
sub
push
xchg
test
add
add
jg
nop
sbb
jnp
adc
adc
lret
add
xorb
jmp
lahf
sbb
lods
xor
inc
arpl
out
lods
push
jmp
dec
jo
vmread
rorl
jae
pop
xchg
mov
pusha
insb
cmp
jo
jecxz
sub
imul
xchg
jo
mov
popa
mov
mov
sbb
cwtl
movsb
xchg
cli
and
std
adc
inc
add
in
test
dec
inc
popa
sarb
nop
dec
outsl
mov
sbb
sub
dec
and
sarl
in
in
or
dec
push
mov
dec
inc
mov
pop
gs
mov
xlat
das
mov
jae
ja
ss
js
pop
out
movsl
adc
andb
stc
mov
lret
and
mov
jb
push
jmp
insl
loope
add
and
addb
jo
adc
xor
and
adc
out
je
mov
aam
sahf
mov
fdivl
out
cmc
add
jo
lods
iret
add
cmc
fbstp
mov
pop
mov
mov
dec
dec
jg
xor
add
mov
cs
xchg
xor
jo
int
stos
negl
sbb
jne
daa
mov
jo
ficoml
aam
push
adc
cmp
fdivl
movsl
std
jge
adc
jp
scas
fucomi
lods
sbb
mov
adc
inc
cltd
jbe
xchg
jo
xor
jnp
jne
mov
loope
push
into
lods
and
xchg
popf
jne
sbb
arpl
in
pushf
sahf
das
js
jo
daa
inc
or
add
bsr
mov
push
xchg
sub
xchg
mov
pop
mov
sarl
and
xchg
mov
jo
push
lcall
jnp
inc
sbb
jo
xchg
mov
push
cmp
adc
pop
pop
sub
hlt
jg
and
cmpsl
jns
scas
dec
add
bound
cmpb
sbb
push
and
icebp
jmp
cmp
sti
mov
jmp
addl
shrb
andnps
cmp
xchg
jb
rolb
cwtl
pop
loope
inc
out
xor
test
arpl
sti
xchg
pop
test
fmull
pop
and
fildl
mov
es
test
pop
sti
pop
out
cwtl
cmp
fucomp
je
pop
mov
leave
shlb
sub
sbb
insl
mov
jecxz
mov
enter
std
jo
and
popl
lcall
jae
sbb
mov
loope
mov
es
aas
pop
fstp
or
ja
mov
xor
divb
insb
subb
cs
mov
aam
divb
mov
push
push
cli
pusha
add
jae
scas
or
mov
sub
mov
aas
arpl
xor
mov
insb
xchg
inc
sbb
jecxz
out
insl
lods
mov
das
mov
mov
rol
cmp
mov
movsl
jmp
pop
jbe
xchg
xchg
out
test
push
mov
mov
lock
jnp
sub
inc
subl
pusha
push
cmp
hlt
pop
mov
cmpsl
pop
rcrb
cmp
nop
and
dec
outsb
in
subb
outsb
outsl
jge,pn
lds
dec
pop
sti
sub
and
mov
cwtl
add
loop
sub
ret
push
fldt
outsb
fsubs
mov
jo
xchg
pushf
xor
cmp
dec
outsl
es
cmpsl
inc
or
leave
push
add
inc
clc
das
cwtl
fwait
and
xchg
jl
inc
and
fsubrs
fs
mov
mov
arpl
mov
pop
mov
push
inc
sbbl
and
mov
hlt
mov
outsb
js
pop
push
mov
cmp
mov
scas
stos
xchg
dec
divl
xor
add
mov
push
inc
mov
fs
add
jae
out
xchg
add
stos
scas
adc
sub
adc
mov
ljmp
push
data16
cmc
sbbb
arpl
mov
mov
outsl
sar
jl
cmp
xchg
inc
mov
xor
imul
inc
negl
in
adc
aaa
nop
out
mov
bound
jbe
and
push
addr16
pop
insb
call
arpl
xchg
and
lock
jnp
cwtl
sbb
push
push
inc
push
and
xchg
push
sub
sbb
sahf
jle
bound
cli
movsb
int3
adc
fstl
cmpsl
mov
loop
cltd
sbbb
push
ljmp
and
rcrb
aam
ret
xchg
iret
adc
lret
dec
es
repnz
mov
dec
pusha
outsb
push
mov
jle
add
pop
leave
xor
adc
int3
mov
out
movsl
mov
test
addl
lds
popf
fdivrl
jmp
fwait
dec
repz
clc
bound
push
idivl
mov
cli
cli
repnz
out
insb
ret
xor
stos
cmp
test
fildll
aaa
cmp
adc
test
stc
lahf
out
int3
pop
xor
popf
aam
add
pop
mov
mov
clc
je
mov
pusha
and
mov
and
dec
out
dec
mov
shl
xchg
subl
and
rcl
sub
imul
aas
fidivrs
pusha
das
push
xor
mov
cmpsl
fsubr
mov
arpl
ds
lea
sbb
bound
gs
push
addr16
mov
xchg
xor
mov
jecxz
xlat
and
sbb
aad
mov
test
cli
jo
adc
aas
jo,pt
insb
or
adc
jo
pusha
dec
xor
in
push
shll
mov
mov
sbb
scas
mov
cltd
dec
inc
sti
nop
xor
jb
add
fisubs
lock
push
mov
popf
loope
jo
pop
xchg
fbld
lret
pop
mov
ret
mov
cmp
aad
es
jl
test
shll
out
cld
mov
nop
test
sub
xchg
inc
cmp
mov
inc
insb
or
jo
xlat
pop
lret
xor
ja
push
rol
xor
xchg
inc
ja
movsb
jge
mov
dec
stos
lods
jo
fadds
in
cmpb
in
and
loope
xchg
lahf
out
jmp
pushf
jl
add
mov
jb
xor
xor
jo
pop
jg
cmp
dec
inc
mov
mov
push
stos
jle
enter
mov
fcmovnb
jo
jge
mov
jg
cli
jo
loope
jmp
les
mov
xor
mov
jo
mov
cmp
adc
xchg
mov
jo
pop
sbbl
mov
mov
jo
xor
adc
lds
pop
gs
out
inc
lcall
jo
xchg
fcomip
cld
pop
imul
aas
repnz
int
sbb
xlat
nop
pop
lock
outsb
stos
jo
jno
fwait
mov
add
adc
add
xchg
jnp
loope
lahf
mov
aaa
in
jo
mov
pop
fistl
fsubl
nop
pushf
jno
mov
insb
fucom
aas
jo
xchg
cmp
clc
aaa
mov
mov
cmp
mov
inc
insl
adc
lretw
push
addr16
dec
mov
inc
mov
in
mov
lds
jmp
ror
push
xchg
mov
add
mov
pop
bnd
dec
lods
pop
cwtl
call
xor
jo
push
outsl
xor
push
cmp
push
xorl
and
add
fstp
out
out
in
jo
lods
or
sbb
pop
test
inc
in
sarb
xchg
sub
xchg
cmp
or
and
add
cmpsl
nop
lret
lds
jo
pushf
pop
sub
je
push
insl
loope
and
ja
push
lcall
inc
hlt
pop
or
in
dec
arpl
jo
lahf
adc
out
pop
jo
test
ljmp
lret
clc
lock
insl
test
mov
cld
inc
fldenv
out
dec
inc
shld
mov
imul
adc
mov
das
pop
mov
pop
out
mov
stos
pop
push
jbe
imul
xchg
insb
fsubr
cmp
xchg
cwtl
scas
ja
inc
pop
dec
push
xor
xchg
les
jge
jo
push
mov
xchg
xchg
mov
mov
std
sub
mov
fbstp
into
fldl
shrb
icebp
inc
jo
jl
mov
insl
pop
mov
mov
jg
mov
xchg
jmp
jb
cmp
scas
xor
loop
xor
inc
cwtl
pushf
lock
adc
jo
sbb
mov
fwait
fdivr
mov
insl
inc
dec
notb
stc
fsubs
pop
lds
jae
jecxz
es
push
repnz
jne
aam
insl
mov
pusha
cmp
dec
jo
enter
in
int
sub
mov
into
jo
push
lcall
lds
aas
sbb
or
mov
fs
daa
dec
jnp
je
repz
mov
imul
lcall
rcrb
lock
fwait
xor
das
int
lock
dec
or
scas
stc
std
popf
mov
xchg
stos
xchg
icebp
jo
jbe
adc
movsb
jo
or
jnp
hlt
js
jo
pop
cld
fdivl
and
stos
xlat
enter
dec
mov
shll
jns
or
xchg
xor
enter
and
jmp
scas
jo
mov
jno
jo
xor
sar
jl
jae
cmp
sti
sbb
inc
cmp
rcrl
repz
jnp
aas
fisttpll
lock
leave
xchg
decb
pushf
mov
add
enter
inc
sub
call
push
pusha
mov
adc
push
cwtl
rcll
insl
mov
add
inc
shlb
cli
cld
lret
test
jl
jnp
je
les
xor
sub
mov
mov
add
inc
jno
xchg
fwait
pop
shr
mov
xor
jmp
imul
or
scas
cltd
sub
fdivrs
fnstenv
clc
sbb
push
mov
cmpsb
seto
scas
adc
outsl
cmp
fwait
push
adc
add
lods
push
xor
ret
je
push
push
insl
push
mov
pushf
subl
mov
imul
lea
out
imul
in
adc
xchg
pop
pushf
or
mov
insl
iret
pop
and
mov
adc
jo
mov
cmp
push
sbb
or
lcall
and
pop
pop
out
jbe
pop
push
jo
dec
cmc
pop
jnp
push
in
jae
inc
or
dec
xchg
ja
mov
xchg
nop
shl
mov
repnz
cltd
jo
cmp
mov
enter
fwait
clc
hlt
sbb
jmp
lret
xorl
or
js
subl
mov
nop
insb
push
jo
popf
pop
stos
push
std
inc
insl
jo
out
pop
mov
xchg
jg
mov
mov
data16
divb
fs
pop
rol
pop
fcompl
ror
jo
cwtl
cld
imul
shrl
shll
popf
jmp
mov
push
jo
rolb
ret
add
and
xchg
push
inc
cmp
jo
xchg
adc
sbb
sbb
das
mov
shll
jo
pop
mov
mov
insl
push
jo
out
sbb
xchg
mov
pusha
int3
ret
pushf
stos
jo
andb
jo
je
fwait
sahf
clc
cmp
pushf
and
add
loopne
aas
insl
test
movsl
nop
mov
fdivl
cmp
lcall
fnstenv
notb
pop
mov
out
jo
test
mov
inc
jo
adc
cmp
pop
pop
dec
shll
dec
cli
mov
jo
mov
jne
cmpsb
mov
xor
ja
cltd
pmovmskb
inc
xor
xor
out
pushl
lods
cltd
mov
ja
sub
cmp
push
lods
adc
pop
movsb
int
jo
insl
cmc
scas
xor
scas
lea
lods
sub
std
rcll
sbb
jmp
ret
test
bnd
out
stos
and
push
ja
roll
adc
imul
and
ja
xor
rcl
sahf
dec
dec
mov
push
mov
decb
lock
lret
sub
or
and
cmpsl
sbb
jo
inc
icebp
push
adc
dec
sub
adc
xchg
jo
pop
es
fwait
lret
sti
jo
aad
pop
lods
ds
dec
add
jns
lahf
cld
xchg
or
add
xchg
pushf
jge
pop
test
mov
and
insb
fcomps
jb
add
aad
mov
sub
fbstp
sbb
clc
or
bound
push
jo
mov
sub
fidivs
sub
pushl
test
in
jo
dec
aas
push
mov
ja
orl
negl
push
push
or
jo
movsb
subl
jp
push
call
fsubrs
shlb
fisubl
iret
xchg
shlb
mov
mov
pushf
xchg
mov
dec
xor
inc
xchg
add
jo
xchg
mov
jo
sbb
or
mov
jnp
pop
movsl
pop
push
push
nop
jns
mov
sub
scas
xchg
add
cmpsl
fcmovbe
mov
mov
jbe
aaa
dec
adc
xor
or
test
jp
xor
xor
sbb
and
insl
sbb
adc
push
push
outsl
mov
mov
int3
jb
sbb
lods
add
jo
mov
in
pop
sub
jno
jg
mov
into
xor
jae
adcb
insl
imul
dec
jg
jle
jmp
xchg
fs
cs
sahf
xorl
add
sbb
or
aad
arpl
test
sbb
or
push
xchg
out
js
mov
lret
stos
and
xor
or
pop
shll
dec
jno
pop
xchg
lds
insl
outsl
mov
cwtl
mov
inc
cmp
sarl
sub
xlat
mov
adc
pushf
sub
fs
push
sbb
bound
inc
mov
inc
pop
mov
outsb
dec
leave
ret
int
mov
cmovo
inc
shl
stc
xor
dec
xor
lcall
push
sub
adc
xchg
mov
fwait
mov
cwtl
mov
scas
sub
xor
push
rcrl
popf
les
and
movsb
fcoms
les
stc
and
aas
cmpl
lods
test
jns
and
aas
mov
daa
cltd
cmp
imul
sub
add
stc
dec
popa
mov
or
xor
add
enter
test
data16
jbe
push
loop
xchg
std
es
pusha
adc
imul
push
sub
mov
test
jbe
jge
inc
and
sbb
test
xchg
test
sub
mov
inc
jno
test
bnd
pop
outsl
fwait
mov
inc
mov
and
lret
cmpsb
adc
cmovg
cmpsl
subl
and
ds
insb
lcall
aam
adc
sbb
subl
push
push
or
push
sbb
iret
inc
cmp
sbb
imul
push
sar
inc
cmpsl
xchg
fidivl
loop
lcall
imul
clc
push
xchg
jno
sbb
xorb
or
scas
test
xchg
and
mov
inc
push
daa
xchg
mov
xchg
leave
mov
sbb
icebp
popa
mov
mov
inc
repz
cwtl
stos
or
daa
push
int3
ljmp
ljmp
dec
and
cltd
sarb
xor
frstor
cld
mov
in
sbb
int
add
jb
lock
add
mov
cmpsl
jbe
pop
sbb
test
movsb
shll
pop
add
popf
pop
js
std
nop
adc
sbb
xlat
push
fs
jnp
mov
mov
out
inc
stos
xchg
or
dec
pop
xchg
stc
out
iret
push
xor
jne
mov
lock
mov
fsub
icebp
je
fwait
rorl
dec
cmc
cwtl
ja
dec
hlt
pop
cmp
rcll
mov
loope
fdivp
push
fs
lods
addr16
pop
cmp
pop
imul
pop
pop
and
adc
stc
loopne
lds
shll
sbb
jno
test
arpl
fistl
add
lock
mov
and
enter
clc
cwtl
lcall
scas
xor
cmp
es
cs
adc
imul
arpl
lds
xor
adc
enter
loop
fimuls
adc
sub
dec
je
dec
pop
mov
jne
repnz
xchg
fdivr
xchg
movsb
pop
dec
fisubrs
mov
push
lret
in
leave
xor
mov
xchg
add
xor
push
out
add
jns
sbb
lods
in
jno
cwtl
hlt
xor
cmp
out
daa
mov
clc
out
mov
jnp
scas
add
std
or
xchg
aad
pusha
mov
int
cwtl
fsubs
mulb
in
jae
movsb
sbb
push
pop
loope
lock
in
lds
lods
xchg
mov
sbb
movsl
push
shrl
sbb
jp
mov
adc
mov
inc
in
xorl
in
push
aad
das
in
sbb
lods
fnstcw
mov
mov
sahf
in
push
xchg
push
add
xlat
cmp
lret
repnz
hlt
jnp
xchg
cmp
in
enter
push
je
fbld
stc
adc
test
cld
sub
loope
scas
pop
insl
push
enter
inc
push
pop
add
outsb
int3
in
stc
gs
lea
pop
pop
sti
ds
add
and
out
and
add
nop
mov
lds
ficomps
add
adc
lcall
ljmpw
mov
cmp
scas
mov
data16
mov
pop
repz
aam
add
cmp
xor
xchg
xlat
dec
push
into
mov
mov
pop
sti
push
in
push
mov
xchg
or
jnp
stos
or
jne
lret
add
push
aad
pop
stc
dec
xchg
sub
push
xchg
popa
mov
leave
in
adc
daa
loop
cmpsb
jne
movsl
test
xchg
ret
sub
sub
mov
jge
pop
or
in
mov
cs
call
lds
jecxz
push
movsb
adc
sub
test
xchg
fs
mov
push
flds
cs
jmp
mov
pop
das
push
push
push
and
add
dec
mov
out
jnp
jecxz
pop
dec
js
sahf
ss
call
cwtl
mov
icebp
push
loopne
arpl
les
add
push
insl
pop
test
cltd
xor
popa
adc
lahf
pop
cwtl
cmpsb
jp
shlb
mov
out
add
arpl
jle
pop
and
out
fadd
movsb
push
cmovbe
xchg
rcr
push
cmp
data16
sub
adc
xlat
xor
push
sbb
repz
clc
lods
fcmovne
popa
cld
sti
push
inc
into
imul
aaa
sbb
stc
pop
push
lret
add
popf
dec
sbb
jo
sbb
cwtl
sub
daa
cmp
je
mov
test
xchg
pop
mov
add
mov
sbb
dec
push
push
mov
dec
dec
aad
jae
jne
ret
push
aaa
subl
sub
cmpsl
add
and
pusha
add
insb
lods
leave
lret
push
sub
push
xor
out
jge
push
jecxz
fwait
outsb
adc
inc
xchg
add
lods
push
jno
or
ja
stos
in
scas
subb
cmp
shl
jo
mov
lds
sbb
jle
in
jo
cmp
xor
jo
xchg
sub
dec
cmc
or
jo
repnz
push
push
test
fwait
shrl
lcall
fcmove
jle
jo
xchg
das
add
xor
jo
aam
xchg
mov
xor
je
pop
addl
les
add
hlt
jbe
clc
jo
ds
mov
aam
testb
lock
xchg
loop
mov
push
iret
sub
stos
xchg
cmp
rcl
aas
fcomps
jo
fldt
push
adc
call
mov
xor
jge
push
xchg
int3
sub
cmp
pop
out
repnz
std
lods
sbb
int
outsb
dec
movsb
mov
movl
leave
lock
xor
push
xor
sbb
repz
mov
jo
xor
lds
call
fists
sbb
and
cltd
jo
jecxz
scas
dec
pop
jo
daa
jno
xchg
lret
push
mov
lock
dec
dec
sub
lock
sbb
mov
insl
or
fadd
jo
pop
test
xchg
or
mov
popa
mov
in
jo
addr16
into
xchg
nop
inc
lods
jo
and
push
fs
cmpl
jle
jo
movsb
shll
xchg
inc
ja
aad
lods
jo
aas
das
jns
cmc
mov
scas
jo
pop
inc
cmp
dec
lods
jo
cmpl
cmpl
and
fs
mov
push
sarb
out
movsb
inc
pushf
imul
lcall
sbb
xchg
imulb
mov
jo
xchg
loopne
cltd
cwtl
clc
push
jo
or
mov
divb
lock
fldcw
sti
mov
sbb
iret
jae
sbb
push
push
jp
mov
cltd
pop
jg
outsb
xchg
gs
jne
xor
mov
jo
int
leave
cmp
mov
cmpb
pop
divb
in
test
and
sbb
jge
adc
cwtl
das
mov
repz
nop
dec
loopne
aas
jnp
jge
in
lock
jne
cltd
insl
cmp
test
mov
out
jns
jo
xchg
cmp
jo
stos
add
inc
test
cmp
or
and
add
sub
lods
insl
dec
je
fadds
or
jbe
insl
xchg
ret
sbb
mov
xor
sbb
cli
in
inc
jo
push
dec
xchg
aad
pop
cmc
jp
stc
jp
lock
xlat
into
jl
jg
jno
xor
shll
pop
pushf
adcb
cmp
fdivl
dec
jecxz
mov
xchg
fwait
jo
add
les
test
rorl
jecxz
jae
faddl
jmp
insl
stos
push
ss
ret
pop
jp
shrl
sbb
sar
mov
mov
out
jmp
insl
mov
jp
xchg
lock
and
cli
popa
inc
add
fisubrl
shl
jmp
je
lds
sub
inc
sbb
jo
test
andb
add
cmp
jle
or
cmp
pop
jo
push
das
es
orb
jo
int
scas
ss
jl
pushf
sub
xchg
sbb
xor
jns
mov
ja
sahf
or
sbb
jecxz
out
pop
jo
jb
in
imul
enter
lret
jo
push
jp
push
lock
cmpl
adc
sbb
mov
pop
rcll
jo
enter
fcmovnbe
ret
call
pop
pop
jo
out
mov
push
shlb
jo
xor
popa
imul
test
mov
cs
notl
sbb
cmp
aaa
mov
shlb
int
cld
fs
pop
insl
lcall
xor
insl
pusha
sub
in
jo
xchg
in
outsb
sbb
or
lret
das
sbb
cmp
adc
inc
nop
arpl
lcall
ljmp
andl
cmc
mov
enter
pop
int
test
shll
xor
into
cmp
arpl
stos
xchg
lock
and
jo
and
test
movsb
fidivs
jne
jmp
test
pop
arpl
gs
dec
mov
or
aaa
imul
fists
jne
imul
icebp
jns
loopne
fnstenv
xorb
pop
xor
xor
adc
stos
pop
insl
cs
mov
mov
xlat
addl
fdivs
ror
push
jmp
ja
adc
push
fidivrs
adc
or
inc
shrl
jne
pop
mulb
jo
pushl
pop
outsl
test
out
jae
mov
sub
jns
xor
mov
aad
lret
popf
test
pop
mov
sbb
push
lock
movsb
mov
es
loop
push
mov
sub
les
xlat
lds
mov
xchg
shlb
movsl
mov
fstp
xor
jne
int
push
lock
pop
or
jo
jno
mov
dec
add
outsb
loope
cli
push
jo
xor
mov
insl
scas
inc
daa
sbb
adc
adc
divb
xchg
xchg
mov
xchg
mov
jo
fcomps
inc
jo
aas
pop
ss
mov
xchg
xchg
push
cmpsb
mov
lds
sub
leave
push
xchg
out
insl
test
repnz
fs
in
icebp
test
hlt
or
adc
ljmp
ss
dec
push
jbe
sub
ds
mov
int
insb
pop
scas
and
sahf
xchg
in
inc
add
xchg
jo
imul
loop
lods
bound
mov
or
cmp
ja
ret
ds
dec
pop
cmpsb
fidivl
sub
and
roll
orl
push
jp
sub
xor
xor
cwtl
bound
mov
or
clc
or
dec
jo
xor
jl
nop
out
jo
xchg
pop
jo
xorb
dec
enter
pop
mov
stos
push
movsb
dec
jno
sub
outsl
sub
out
pop
clc
das
and
jo
sub
mov
and
aaa
xor
sbb
push
xchg
bound
sub
jo
cwtl
xchg
jne
dec
jae
jmp
pop
mov
loopne
test
jo
pop
es
cmpsl
fcmovnu
cltd
xchg
lahf
jo
lret
aad
cli
pop
das
mov
lods
mov
jmp
xor
mov
imul
std
mov
test
fiaddl
mov
not
mov
lods
movsb
xchg
or
jo
repnz
jo
sub
xchg
js
jo
xchg
fscale
outsl
es
pop
pop
push
lods
jo
add
sub
and
jo
daa
xchg
dec
insl
xor
mov
mov
jg
inc
mov
xor
mov
mov
jo
jmp
push
inc
pop
pop
mov
outsb
jo
out
jno
jnp
shrl
aaa
imul
cmp
mov
pop
ja
cmp
sbb
xor
scas
mov
and
std
cmp
repz
les
xchg
lds
adc
dec
and
stc
mov
xorb
popf
dec
fndisi(8087
or
fnsave
inc
fs
jge
cltd
mov
dec
xor
pushf
inc
test
lea
lock
mov
cwtl
std
ret
jo
mov
pop
or
pusha
xchg
cmp
aas
insl
xchg
stc
or
mov
jno
roll
clc
sub
cmp
dec
jno
popf
and
je
daa
jo
or
rep
dec
mov
jl
in
mov
xchg
pop
sbb
xchg
jnp
jae
cmp
cmpsl
or
orb
sub
sbb
dec
ljmp
popa
cmp
nop
les
mov
andl
jg
sbb
jp
js
seto
jo
ss
xchg
mov
sbb
call
call
adc
das
sub
jo
adc
leave
mov
xor
es
pop
jbe
mov
mov
sbb
push
fidivrs
adc
mov
in
movsl
xor
xor
call
xor
js
push
adc
test
and
sti
mov
jo
add
sbb
push
mov
dec
or
fwait
mov
mov
mov
jo
jl
loop
popa
jo
out
or
push
or
cmp
insb
dec
lock
idiv
adc
pop
jo
pop
js
and
dec
jb
lret
subb
test
jo
leave
jge
dec
push
call
mov
mov
out
push
sbb
insl
ret
inc
aam
mov
sbb
into
xchg
pop
ljmp
stos
or
insl
pop
and
fldl
inc
mov
xchg
cmp
or
shlb
js
xchg
dec
pushf
sbb
es
scas
inc
pop
data16
xchg
jp
aam
mov
in
and
dec
and
imul
mov
mov
aad
out
ss
xchg
imulb
cmp
mov
notb
pop
sub
nop
pop
mov
loopne
outsl
sub
comiss
addr16
mov
jo
adc
test
lret
push
pushf
xchg
cmp
jno
and
pop
cmc
js
sbb
jnp
or
and
xchg
dec
cmpsl
and
psubsw
push
mov
cmp
push
and
je
xchg
mov
xor
cwtl
inc
stos
fnstsw
push
jmp
sbb
mov
jno
flds
lods
shrb
jno
push
xchg
lds
shll
sub
mov
xchg
mov
loopne
jl
cli
jp
lds
pop
pop
out
mov
fsubl
sub
fsts
pop
xchg
jmp
pop
or
adc
fwait
sbb
dec
push
ret
mov
popf
negb
subl
in
shl
jl
repz
mov
dec
hlt
sbb
outsb
pusha
cs
bound
xchg
push
sbb
inc
je
push
out
and
and
cmpsl
in
pushf
scas
sub
sbbb
inc
xchg
dec
jae
mov
pop
sarl
jo
dec
or
cwtl
call
mov
push
push
cwtl
cwtl
bnd
jbe
inc
bt
inc
cwtl
push
mov
in
sahf
fs
dec
aad
ficoms
and
jg
loopne
stc
mov
cmp
fidivrl
cwtl
mov
loope
jl
lret
neg
inc
xchg
rol
mov
je
pop
inc
cmc
outsb
movb
cmp
push
jle
cmpb
push
push
mov
lret
pop
in
adc
add
jb
fsubrl
mov
insl
test
pop
dec
inc
and
vpshlq
repnz
lcall
push
movb
push
in
negl
inc
aad
cmpsl
movsb
int3
js
and
push
jnp
cmp
test
aad
xchg
out
dec
loop
xchg
inc
scas
xorb
sbb
aaa
ja
call
lods
jge
add
xchg
or
mov
out
add
mov
mov
and
ljmp
shll
jmp
cmc
dec
push
sbb
hlt
iret
and
lahf
mov
inc
cltd
jecxz
daa
ja
aaa
stos
push
pusha
lcall
pop
fs
or
lahf
add
jo
shll
mov
mov
fildl
mov
in
inc
jae
or
in
call
and
pop
aam
in
mov
jo
xchg
sbb
in
jb
mov
aad
pop
shll
xchg
jo
xor
sbb
icebp
jo
rcl
push
stos
or
add
scas
lea
dec
push
pop
push
insl
add
mov
std
adc
je
arpl
xor
jmp
lock
cmc
adc
imul
lret
jo
std
aam
les
stos
jp
xor
mov
sti
jle
outsb
subb
mov
sahf
jo
pop
fsubrs
jo
inc
not
fwait
mov
mov
push
inc
jo
or
mov
out
sbb
jo
cmp
add
or
lds
adc
push
int
imulb
test
cmp
push
out
scas
xor
jo
lock
xorl
lahf
add
insl
testb
inc
mov
lods
int3
aam
fiaddl
repz
inc
sub
cwtl
pop
mov
jae
iret
pushf
ja
sub
in
xchg
jg
ja
sbb
daa
pop
das
push
jp
sub
mov
ja
push
repz
mov
push
push
mov
jo
mov
sub
sub
orb
inc
lcall
mov
aas
pop
repz
scas
mov
je
setp
call
in
push
xor
shlb
push
jo
mov
fdivrs
lock
jo
push
xchg
cld
mov
cwtl
jo
add
lods
mov
jo
pop
dec
nop
ret
jg
xchg
loop
arpl
xchg
jnp
or
or
ljmp
cmp
cmpsb
mov
out
inc
sbb
mov
or
sub
cmpb
pop
js
daa
dec
cmc
mov
ds
pop
loope
ljmp
rolb
add
jo
push
xor
mov
stc
xchg
xchg
dec
mov
outsb
dec
call
xor
jmp
mov
cmc
lcall
in
mov
xor
xchg
fbstp
jo
aad
outsb
cmp
sub
insl
inc
or
es
jle
jo
stc
out
inc
mov
adc
hlt
icebp
ret
insb
mov
jo
or
xor
xor
inc
imul
in
mov
clc
in
lret
jo
cmpsl
lock
sbb
mov
add
mov
hlt
mov
jo
push
jmp
sub
jo
out
or
leave
pop
add
mov
pop
fs
push
mov
jecxz
enter
icebp
inc
ret
cltd
insl
pop
xchg
ficompl
std
and
push
mull
aad
push
jo
test
pop
sub
cs
mov
pop
xchg
or
add
shll
dec
cwtl
arpl
mov
mov
popf
jo
dec
addr16
mov
insl
jo
adc
rolb
xchg
add
jo
inc
ss
into
sbb
jo
loopne
add
jle
jo
xorl
xor
jo
adc
out
jo
test
jb
add
and
into
dec
addb
lock
in
mov
scas
bound
outsb
mov
or
add
into
arpl
sub
mov
popf
dec
xchg
xchg
icebp
xor
fwait
hlt
jo
lods
loope
test
test
shrl
aam
jns
xchg
addr16
jb
push
cld
bnd
jne
xchg
in
xor
js
imul
mov
stc
fidivs
outsb
inc
sub
xchg
lret
lds
data16
xchg
mov
cmp
imul
sub
cmp
mov
in
gs
xor
les
pushf
imull
cs
leave
adc
outsl
addr16
pop
stos
cmp
pop
dec
sbb
pushl
push
cmp
mov
je
lods
xchg
lret
mov
data16
arpl
lods
outsb
setl
rcr
sub
hlt
or
adc
sub
ss
pusha
dec
inc
xchg
aas
adc
sub
cmp
mov
stos
lret
fs
scas
sub
insb
mov
cwtl
push
cmp
jge
push
push
sbb
inc
ficoms
sbbl
cld
sbb
out
lret
in
sbb
ss
daa
arpl
lock
out
cmp
clc
mov
or
subl
pop
inc
and
dec
imul
sbb
lods
es
hlt
insb
mov
pop
daa
xchg
xor
adc
and
dec
mov
jmp
movsb
mov
mov
xchg
dec
subb
pop
mov
in
sahf
jg
idivb
cmp
xor
push
push
sti
add
lock
mov
mov
sti
out
pop
jmp
or
loop
ja
cwtl
aaa
js
popf
subb
cmp
cmpsl
pop
fidivs
out
or
shr
push
push
push
gs
add
xchg
add
push
dec
push
add
lret
push
push
pop
jnp
inc
shll
ja
mov
fcomp
push
lods
and
cmp
rcrb
sub
dec
fwait
jecxz
sbb
pusha
je
pop
mov
adc
fistpll
cwtl
or
int3
add
sar
lock
imul
sub
inc
sbb
fisttpl
push
out
cld
sub
dec
sti
jp
and
clc
repnz
js
inc
push
pop
insl
arpl
jae
in
bound
dec
mov
cmp
fs
ss
outsl
mov
pushl
mov
ss
stos
and
es
out
addl
lock
fsts
cmp
jp
cmc
push
lods
push
outsb
sub
sub
stos
jnp
xchg
pop
inc
test
clc
outsl
mov
adc
jle
xor
mov
je
add
pusha
daa
mulb
mulb
fwait
pop
pop
cmp
or
xor
jle
push
ds
fsubr
in
sub
inc
loop
and
call
mov
repz
cmpb
jnp
add
cmp
dec
pop
pop
mov
or
lods
pop
imul
mov
cs
pop
add
rorb
cmp
sub
out
scas
pop
das
icebp
call
push
inc
mov
sbb
ss
movsb
lock
popf
lock
and
dec
movsb
mov
jne
ret
pop
repnz
lret
div
mov
fisttpll
addr16
nop
std
sbb
fildl
sub
fcmove
or
push
sub
push
jne
andl
jno
insb
movsb
or
imul
cmp
call
mov
into
push
mov
adc
cltd
ss
mov
cmp
aaa
aas
cmp
pop
in
scas
and
sub
or
push
and
pop
insl
mov
in
jg
jecxz
dec
loopne
loopne
int3
jnp
lcall
mov
iret
dec
and
pushf
sarl
pushf
push
in
mov
or
pop
and
cmp
inc
dec
pop
in
enter
add
push
jno
push
sub
lods
scas
je
or
int3
jg
or
jg
rclb
sbb
ljmp
sbbl
mov
cmp
xchg
inc
icebp
inc
clc
mov
sbb
adc
lods
jp
int3
les
das
inc
int3
mov
loope
cmc
lock
mov
mov
jle
pop
and
cwtl
mov
fwait
or
sbb
fistpl
lods
fwait
into
mov
outsb
into
cmp
sbb
push
in
jno
mov
cwtl
pop
xchg
xor
icebp
jl
pop
test
out
mov
mov
jmp
dec
imul
pop
outsb
fs
cld
sub
test
enter
sbb
cmp
cmp
call
xchg
insl
loopne
mov
sbb
push
inc
dec
xchg
cmp
pusha
adc
adc
ljmp
mov
cwtl
leave
repz
fndisi(8087
push
cli
je
lods
call
inc
sbb
push
pop
sahf
xor
lods
fidivs
and
push
inc
pusha
jo
xchg
int3
adc
outsl
jp
cmc
xchg
xchg
cmp
icebp
inc
or
loopne
outsb
lds
es
jne
repz
hlt
mov
test
test
and
fdivs
or
xchg
sbb
enter
inc
jo
sbb
and
idiv
int
lock
sub
cmc
xchg
cmp
and
push
repnz
xlat
js
stos
sbb
sahf
call
sub
dec
ss
out
fdivrs
jb
jl
sub
dec
gs
mov
mov
pop
jns
and
jo
inc
movsl
flds
xchg
jg
mov
pop
inc
sbb
jo
inc
mov
lock
hlt
cmp
jo
leave
lcall
add
lret
shlb
not
ss
pop
rolb
xchg
roll
in
sarl
in
aaa
dec
aas
test
jns
mov
jbe
or
ds
or
adc
jo
mov
xchg
xchg
clc
cwtl
cmp
and
sbb
mov
jo
test
les
ss
pushf
xlat
mov
clc
push
test
and
rclb
jae
std
push
orb
decb
shlb
inc
mov
cmp
out
sub
mov
daa
mov
rolb
push
pop
je
dec
dec
xchg
fdivs
adc
pop
or
push
jl
add
cwtl
jb
push
data16
or
mov
add
mov
jo
gs
xor
mov
or
movsl
inc
out
lock
cmpsl
dec
add
xchg
pop
mov
int3
cmp
fpatan
call
mov
daa
jo
scas
imul
mov
cmpsb
push
or
mov
xchg
roll
mov
dec
add
cmc
cld
cmpsb
fsubrs
xor
fcoml
adc
jns
rorl
in
jp
cmpsl
mov
fwait
js
mov
cmp
bound
imul
icebp
mov
cs
push
and
pushl
gs
jns
mov
push
mov
jo
popa
mov
xchg
adc
mov
jl
fsubs
dec
jmp
mov
addb
ja
cmp
cld
pop
inc
popf
inc
jnp
insl
movsb
and
adc
and
test
out
jo
and
in
lods
lcall
lret
mov
rorb
hlt
sti
pop
jo
outsl
lods
adc
mov
aad
imul
mov
xor
into
sub
inc
mov
sbb
nop
cld
cmp
inc
jo
movb
das
jbe
jo,pt
sub
imul
mov
or
cmp
ds
and
clc
repz
xchg
dec
in
jo
xchg
adc
aad
fsubrl
ret
out
mov
inc
mov
fiadds
mov
pushf
ja
xorl
lock
insl
inc
push
pop
into
imulb
nop
enter
xlat
insl
xchg
xor
and
out
cmp
call
pop
das
cltd
in
int
rorl
lods
icebp
daa
sub
sub
insl
xchg
xor
mov
adc
dec
dec
pop
lods
fbld
icebp
and
popa
fdivs
xchg
clc
outsb
pop
push
xlat
jo
iret
jmp
popa
jo
das
movsb
pop
and
cmpsb
add
push
jge
mov
cmp
bound
dec
inc
jo
cmpsl
jmp
inc
xorb
adc
jb
icebp
pop
fildll
cs
jo
mov
aam
xchg
pop
outsb
stc
call
dec
dec
pusha
loope
adc
mov
jae
aaa
or
outsb
jl
sub
jo
jb
gs
jmp
rcrb
push
cwtl
out
sub
jo
fsubp
ss
adc
std
jo
push
ret
sub
sbb
push
loope
aaa
dec
or
inc
add
loopne
xchg
lods
pop
mov
jl
mov
scas
enter
cmp
dec
pop
lret
rclb
adc
cmp
jge
pop
sahf
je
or
jo
mov
inc
mov
sti
xchg
jo
cmc
std
pusha
frstor
jmp
outsb
mov
outsb
add
clc
pop
shll
adc
jo
lcall
jo
jg
dec
inc
inc
mov
push
mov
push
lret
xchg
call
xlat
xchg
jns
fisttpl
popa
fstpl
fimull
insl
push
movb
sbb
xchg
jp
mov
cld
pop
aaa
stc
and
add
enter
pop
imul
sub
mov
hlt
mov
sub
orb
pop
jbe
mov
cmp
insb
in
dec
rcrb
sub
mov
loop
mov
or
push
jae
push
and
jb
and
mov
fabs
push
cs
dec
adc
cmc
push
cmpl
insb
mov
les
push
loop
std
aaa
jo
sbb
mov
ficompl
jo
scas
pop
daa
sub
jo
xchg
push
popa
in
aas
and
arpl
out
inc
mov
cmp
call
and
dec
jae
cmpsl
es
js
mov
xchg
cmp
mov
adc
mov
lock
clc
mov
jo
add
inc
imul
pop
rolb
mov
jo
dec
mov
jo
cmpsl
lret
iret
mov
mov
push
data16
arpl
rcl
loope
or
mov
dec
into
mov
jl
out
rcr
xchg
xor
sub
pusha
xchg
push
fdivs
pop
xchg
inc
imul
mov
clc
dec
jnp
lds
mov
cld
jo
repnz
ds
test
cmc
jo
popa
stos
movsl
stos
jo
sub
dec
push
cmp
adc
fwait
stos
mov
jo
push
subb
jns
or
insl
pop
mov
mov
or
sti
in
fldl
sbb
iret
xchg
sub
push
mov
fsubr
jo
orl
lret
jae
lds
aad
call
imul
pop
rol
xchg
cmpsb
adc
subb
jnp
adc
mov
rcrb
pop
mov
jo
xchg
loopne
jo,pn
gs
cmp
cmc
mov
mov
add
neg
pop
xor
inc
jl
cmp
jo
add
dec
xchg
dec
jb
pop
mov
fdivrs
mov
scas
mov
jo
and
push
test
xchg
unpcklps
cmp
mov
sub
mov
leave
ret
orb
push
dec
mov
mov
out
loope
mov
xchg
mov
lods
pop
andb
lock
shlb
mov
mov
gs
outsb
out
jns
jo
cmp
sbb
clc
mull
xor
cmc
adc
xchg
jle
jo
shll
xchg
sbb
mov
inc
pop
dec
int
or
dec
sbb
adc
insb
nop
test
pop
divl
or
jo
mov
add
insb
addr16
and
mov
pop
shr
in
xchg
lods
pop
repnz
lock
xor
cmpb
shr
fimull
enter
inc
push
adc
xchg
pop
js
nop
cld
das
sbb
sub
xchg
loope
mov
and
shrb
pusha
int3
pop
lds
fisubrl
jae
fidivrl
xchg
ja
inc
stos
cmpsb
cmp
jo
aam
adc
jo
xor
mov
jo
or
or
or
jo
mov
mov
jae
cmp
pop
sbb
add
lret
out
sub
mov
rol
dec
lret
xchg
add
dec
arpl
out
adc
sahf
xchg
and
stos
or
xchg
push
rcl
jo
fcoms
mov
sbb
mov
idiv
dec
jo
lea
and
xchg
xchg
xorl
bound
jl
xchg
mov
dec
imul
scas
jo
cwtl
sbb
jo
call
flds
je
inc
cld
les
mov
pop
ret
ss
pop
adc
lds
mov
cmp
push
pop
js
jo
movsb
lret
cld
jae
ja
adc
cmc
jo
std
mov
jle
cmpsb
pop
xchg
imul
int3
cwtl
push
out
pop
testb
lock
mov
jo
lds
or
jge
dec
add
frstor
jo
ja
ror
add
inc
gs
xchg
pop
jo
cwtl
icebp
and
or
repnz
lahf
push
jo
ret
insb
arpl
dec
or
push
pop
inc
pop
sub
sbb
aas
pop
or
ffree
gs
inc
nop
insb
jo
icebp
pop
outsb
inc
aad
mov
dec
int3
insl
push
ljmp
stc
jo
stos
sarl
fdivrl
ss
repz
lock
mov
stos
mov
adc
add
cmpb
cmp
xorb
clc
mov
or
pop
fists
pop
jo
add
daa
push
insl
mov
loope
pop
cmp
jo
fstl
cwtl
or
push
inc
push
cmp
out
mov
in
push
lds
cmp
sub
scas
adc
and
mov
and
jp
popf
xchg
xor
ss
push
jmp
jbe
dec
mov
fcmovu
cs
jg
inc
jge
mov
mov
test
push
push
icebp
jo
dec
pop
jg
push
and
enter
aaa
mov
xchg
insb
iret
and
rolb
inc
jp
jae
jns
mov
mov
out
xchg
push
and
jnp
pop
mov
mov
lret
pop
pop
idivb
pushf
test
mov
pop
push
xchg
cwtl
xchg
sub
popf
cmp
mov
sub
sbb
das
dec
jmp
xor
sbb
cmp
in
mov
push
cmp
sahf
je
in
shrb
cmp
jecxz
insl
leave
ja
jle
pop
jge
mov
mov
cld
inc
and
push
jle
imulb
push
mov
or
mov
push
mov
shll
movsb
sbb
xor
inc
sbb
aam
jmp
mov
sahf
stc
das
pop
cmpsb
jo
mov
leavew
hlt
pushl
mov
mov
lahf
inc
rcll
out
nop
out
add
sbb
jae
out
inc
adc
testb
fisttpl
insb
cli
call
int
lock
pop
sub
movsl
lods
mov
pushf
jo
ss
lds
jno
stos
jo
pop
inc
stc
pop
and
test
fisubrs
push
or
mov
enter
pop
insl
std
push
jo
sub
jns
mov
aaa
lods
loopne
jo
sub
xchg
test
mov
ss
rclb
aaa
jo
jl
lods
or
mov
inc
lods
cmp
jg
pop
stos
js
xor
test
and
jo
push
fcomi
out
sub
outsb
jbe
repz
xchg
fsts
popa
lds
in
cmp
jno
mov
imul
adc
pop
mov
and
sub
cmc
push
mov
add
xorl
cmc
ficoms
imulb
adc
fldl
jo
xlat
mov
xchg
pop
or
adc
mov
xchg
imul
adc
pop
push
hlt
add
cmp
and
int
insb
pop
std
pusha
dec
ja
jo
mov
and
xchg
popa
out
lock
mov
ret
inc
xchg
or
insl
jle
cltd
jo
lret
fisubrl
or
dec
push
jo
pop
lahf
sbb
adc
pop
les
xor
jo
sub
in
mov
sti
ret
insl
jecxz
cmp
shrb
inc
jo
xchg
adc
jne
jbe
aas
jo
arpl
cmpsb
jo
popf
fisubrs
inc
gs
jo
nop
test
mov
dec
ljmp
mov
out
scas
mov
orb
test
out
mov
movb
jo
mov
ja
test
push
and
notl
std
cmp
icebp
aaa
jno
dec
push
dec
lock
js
test
cmp
push
decl
pop
add
sti
mov
int
in
fbstp
shr
cmp
into
jl
or
cmpsl
lods
cmp
jae
and
js
or
adc
jl
mov
popa
or
dec
fisubs
jp
or
enter
dec
add
adcb
pop
mov
pop
shlb
int
movsl
addb
push
mov
jo
lods
fcomps
sub
lahf
rcrl
je
jg
repnz
or
lods
rorl
xchg
into
xor
jne
jg
and
xchg
push
mov
dec
jo
andb
cmpsb
dec
mov
and
pusha
scas
mov
mov
jl
pop
cmp
or
push
mov
mov
mov
ljmp
sub
mov
pop
jo
lret
icebp
stos
enter
addr16
mull
lcall
gs
push
pop
addr16
dec
adc
test
xor
push
loop
jae
out
push
rclb
enter
out
push
mov
push
adc
adc
jo
bound
pop
notl
lret
xor
mov
stos
jo
dec
jge
add
jo
xor
icebp
inc
or
arpl
bnd
data16
dec
mov
push
aad
adc
inc
aas
jge
jo
scas
or
lahf
shr
xorl
out
xchg
inc
jae
sub
negl
nop
and
inc
jo
mov
pushl
loop
fwait
jo
push
lea
gs
arpl
imul
dec
out
adc
stos
adc
pop
pop
addl
mov
inc
push
add
nop
in
or
std
jo
inc
jecxz
xchg
enter
add
mov
fisttpl
jo
das
aaa
push
fwait
xchg
push
mov
jmp
jp
dec
jae
or
addr16
ja
add
mov
xor
fs
rorl
bound
mov
pushf
sub
orl
clc
cmpsb
inc
push
jnp
sar
pop
outsb
cld
test
dec
lahf
adc
mov
push
xchg
add
outsb
out
jo
arpl
ficoms
sub
jmp
shrl
jo
mov
fldl
jae
out
dec
jle
loopne
addb
call
or
sub
mov
and
sbb
sub
pop
rcr
add
cmp
mov
cwtl
xor
aam
cltd
xchg
push
jne
add
jo
ss
jae
iret
daa
xorl
mov
jge
sub
inc
mov
jno
mov
lret
and
jo
aad
pop
outsb
cld
fimull
ljmp
sub
scas
jmp
test
dec
test
repnz
cmp
cmp
mov
jnp
fwait
pushl
ret
jp
cmp
aad
call
shlb
dec
ja
and
xor
jmp
ja
jbe
push
mov
xchg
nop
jle
je
add
push
cmp
ja
clc
aam
popf
js
test
testl
jmp
xchg
hlt
jo
rol
test
pop
dec
add
and
sub
out
test
inc
jo
pushf
out
outsb
in
mov
adc
cmp
inc
add
adc
cwtl
jmp
aam
insb
cltd
push
ds
dec
enter
andb
ja
xchg
push
inc
rorb
lds
lret
adc
mov
mov
and
push
rcl
jo
and
xchg
jo
pop
or
sub
sub
movsb
test
sti
outsb
cmp
mov
fucomi
mov
movsb
pop
aas
lea
sbb
cmp
popa
daa
mov
call
jo
sub
jg
jo
mov
outsl
shlb
jno
nop
pop
mov
xor
mov
pop
cli
adc
inc
fimull
mov
rolb
mov
and
dec
nop
insb
jg
mov
andb
cltd
stos
lock
leave
jmp
in
push
and
fdivl
pop
adc
stos
sarl
push
addr16
rep
bound
pop
jo
push
gs
push
test
ja
shrb
dec
testl
dec
sub
subb
inc
jp
jns
xor
outsb
aad
mov
dec
pop
nop
xchg
dec
pop
jo
insb
in
jle
mov
enter
rcrb
and
into
insb
jo
hlt
adc
push
jo
mov
jecxz
sbb
test
aas
pop
push
jmp
les
mov
pushl
test
xor
ljmp
jo
dec
sti
xor
adc
jo
add
adc
insb
cmp
jnp
outsb
mov
insl
lods
adc
xchg
adc
out
imul
cmpsl
movsb
cmp
insl
cli
rdtsc
jno
stos
mov
jnp
push
hlt
jo
push
xor
repz
loopne
jo
push
push
sub
jo
pop
jle
or
loopne
sahf
imul
mov
into
sub
addr16
sbbb
fcmove
test
outsb
or
jo
push
mov
ja
fsubs
popf
popa
push
dec
inc
pop
gs
outsb
imul
pop
mov
jg
mov
ret
decb
sub
pop
mov
into
test
divl
and
dec
in
loope
insl
mov
lds
pshufw
shll
je
push
sbb
cs
stc
jbe
add
das
jle
negl
or
adc
mov
jo
hlt
shll
jl
jle
inc
ss
insl
fists
pop
out
xchg
push
xchg
pop
cmp
jo
call
push
insl
xlat
pop
xor
fnsave
xchg
mov
test
xchg
inc
jno
add
test
insl
mov
cmp
andb
jbe
rcrb
push
insl
inc
xchg
cmp
or
shll
jo
jp
cmpsl
pop
scas
and
xchg
sbb
push
into
jo
mov
push
inc
jo
daa
clc
cwtl
inc
iret
jae
or
mov
insb
pop
cs
add
push
xlat
cmp
mov
jg
mov
into
inc
xchg
cld
insl
sub
add
ficomps
mov
iret
sub
jo
push
sbb
std
jo
dec
xchg
push
jg
mov
dec
lret
sahf
mov
mov
out
les
push
ffreep
fmull
mov
bound
in
icebp
mov
je
in
das
cli
gs
xor
ret
jo
dec
sbb
enter
addr16
mov
cwtl
aas
or
sub
jp
scas
mov
or
cwtl
pop
outsb
shll
stos
lock
or
xor
lock
stc
fcmovnbe
addr16
sub
and
loopne
in
cwtl
inc
pop
stos
ror
push
sbb
nop
and
adc
xchg
rcrb
lods
loope
insb
dec
mov
jne
data16
sub
icebp
xchg
inc
cmpb
bound
xchg
sti
cmp
add
sbb
mov
andb
push
xchg
sub
mov
add
arpl
inc
mov
mul
movl
or
out
add
push
mov
push
leave
aas
or
pop
fiadds
test
cmp
in
icebp
imul
sbb
sbb
or
mov
and
pop
xchg
xchg
mov
shlb
out
lock
es
fidivl
leave
inc
push
xchg
mov
movsb
outsb
movsl
and
or
xor
andb
sub
jg
or
mov
pop
mov
ret
xchg
je
cwtl
pop
loopne
push
or
inc
sbb
inc
jo
roll
or
xchg
test
mov
jo
push
mov
lock
lods
jo
xor
cmp
cld
fs
xor
arpl
adc
outsl
jo
aas
mov
xchg
shrb
xchg
daa
and
mov
int3
fsts
je
imul
outsl
les
cmpsb
jb
or
or
loope
pop
add
jo
dec
das
hlt
icebp
int
jns
and
in
dec
js
add
je
dec
mulb
add
cmc
int3
leave
push
sti
inc
jno
dec
into
jo
mov
lds
fnsave
int3
outsl
int
call
popf
jo
dec
mov
in
mov
xor
in
push
sbb
mov
lret
or
aad
imul
pop
adc
push
jecxz
cmp
push
lcall
stos
dec
or
pop
ja
pextrw
cmp
loopne
cmp
movsb
adc
jne
xor
sbb
je
outsb
stos
dec
dec
xchg
jl
push
or
pusha
and
and
loopne
fdivs
push
cld
call
cmp
incl
ret
mov
sub
scas
rclb
xchg
repz
call
jo
xor
cmp
mov
pop
push
subb
rcrb
inc
jp
imul
jnp
pushf
ja
rcrl
xor
sbb
adc
inc
mov
outsb
jl
mov
xchg
and
xor
int
nop
cmp
or
jo
stos
adc
aaa
xor
cmpsb
sub
jnp
outsb
sbb
adc
pop
jo
ret
xchg
bound
adc
aas
pop
adc
pshufw
nop
fs
lret
jo
and
call
push
sti
inc
lret
subb
dec
jge
xchg
inc
xchg
nop
pop
ficomps
jmp
jp
call
inc
cmp
jo
dec
inc
popa
sbbb
push
jo
push
sub
pop
or
clc
and
dec
push
inc
push
sbb
mov
or
dec
inc
xchg
mov
imul
pop
fs
jo
mov
filds
cmpsb
mov
test
das
xchg
jo
scas
pusha
jp
mov
dec
add
add
jo
sbb
mov
sarl
sub
lcall
cmp
je
jo
pop
sbb
adc
dec
mov
push
pop
ror
shrb
loope
jmp
xchg
add
jo
ret
xchg
jns
push
jo
std
cmc
cmpsb
push
mov
dec
es
ljmp
or
lcall
jl
aas
sub
std
inc
mov
jo
or
outsl
or
sbb
mov
enter
dec
mov
into
and
jo
fcomps
shr
sbb
loope
sti
mov
pop
push
push
test
and
add
popa
int
lods
imul
dec
lock
sub
sti
mov
mov
gs
dec
dec
lret
lock
test
test
mov
mov
cwtl
jae
aaa
cmpsb
dec
clc
mov
jo
jns
push
dec
lea
or
mov
shlb
or
outsb
pop
dec
inc
roll
jo
xchg
mov
addr16
jo
sub
rorb
lahf
xlat
mov
xor
je
jbe
repz
mov
mov
inc
adcl
dec
and
pop
shrl
or
in
push
push
fimull
bound
mov
ret
faddl
mov
cmp
shrl
lock
or
imulb
call
jp
in
cmp
leave
insb
jp
xor
lock
adc
xchg
jno
mov
pop
lods
cmp
adc
pop
clc
mov
inc
mov
repz
lock
in
mov
addr16
imul
ljmp
mov
cwtl
int
or
dec
aam
in
scas
mov
or
in
mov
out
pop
lret
jnp
push
lahf
cmpsb
stos
leave
test
mov
in
dec
inc
call
in
add
mov
jle
fwait
repnz
cmp
loope
mov
push
mov
sti
dec
fadds
jmp
subl
sbb
mov
in
je
pop
lock
sbb
test
jmp
pop
jl
sub
mov
jle
scas
and
rol
jge
mov
push
and
test
adc
lods
pop
lds
adc
cwtl
xor
mov
push
inc
xchg
repz
cmpsl
enter
xchg
loop
and
pop
lds
xor
fistl
loopne
cmp
cld
mov
fucomp
test
lret
test
outsl
repnz
jecxz
jge
cmp
xor
insl
daa
jecxz
jne
lds
adc
push
nop
jmp
es
and
mov
ficoml
pop
clc
les
std
pop
gs
xor
shr
mov
adc
fs
mov
xchg
rclb
lock
adc
out
jecxz
push
xorl
inc
int3
push
mov
aaa
dec
add
mov
mov
jo
fisttpl
jno
cmpsb
repz
lods
loopne
pusha
ja
add
jnp
scas
mov
jo
or
dec
bnd
push
push
lock
pop
jp
mov
clc
shll
adc
jle
daa
xlat
add
ret
push
out
cmp
or
lea
jge
jo
pop
in
mov
pop
mov
cmpsb
lcall
imul
gs
ljmp
xchg
addb
fdivl
xchg
lret
insb
lahf
xor
jnp
cwtl
stos
jb
add
stos
shr
inc
jecxz
lock
into
sbb
mov
or
mov
push
inc
cmc
cwtl
lock
push
mov
pushf
fnstsw
les
jp
pop
dec
mov
aam
ljmp
xor
in
or
outsl
push
push
lea
arpl
std
add
jecxz
je
pop
mov
fcoml
pop
mov
testl
xor
xor
cmp
jo
push
clc
str
cli
fwait
jo
and
cmp
sbb
sbb
inc
jae
pop
cmp
mov
mov
rcll
xor
add
jbe
mov
divb
outsb
orb
sub
dec
push
xor
nop
mov
into
subb
add
lods
cs
lock
dec
dec
lock
mov
push
cltd
dec
dec
jae
sub
sbb
lret
jo
cmp
imul
lock
inc
mov
mov
cmpsb
dec
push
dec
push
insl
dec
push
xor
fdivl
int3
or
push
nop
jo
jecxz
or
jo
dec
mov
cmpsb
mov
cmp
pop
add
dec
push
andb
jo
sub
jo
insb
and
outsl
mov
jo
add
xor
ja
imul
or
dec
lods
and
mov
push
lock
stos
int
clc
jo
mov
test
enter
sub
adc
aaa
mov
pop
repz
int
jo,pn
dec
in
loop
insb
pushf
movsl
ja
cmp
aad
inc
rcrb
cmp
pusha
imul
sarb
or
aad
insl
andb
dec
hlt
movsl
out
dec
lods
jo
jns
shlb
nop
cld
dec
js
lock
push
test
cmp
rorb
adc
shlb
push
push
mov
cmp
lods
roll
jae
cmp
aam
adcl
mov
or
jg
xor
push
es
outsb
push
sbbl
or
jb
out
inc
push
jb
mov
test
mov
ret
dec
xchg
add
ja
mov
adc
dec
loopne
cmpl
jae
xchg
mov
and
call
sbb
sbb
cmp
add
cwtl
adc
jae
test
jo
push
lods
movsl
sbb
mov
push
add
adc
loope
fidivs
sti
cltd
adc
call
aaa
jo
xor
rclb
adc
jo
push
xor
nop
or
cwtl
jo
ret
scas
push
adc
aam
cmp
stos
mov
dec
jae
lock
addr16
mov
jo
push
mov
cli
jo
pop
xor
mov
in
push
pushf
pop
outsb
xor
stos
loop
dec
sarb
xchg
mov
and
lock
scas
outsb
ljmp
xor
rorl
add
shll
jo
sub
cmp
jo
fmuls
xchg
mov
lahf
push
adc
pop
and
sbb
push
inc
bound
fisttpll
adc
ja
mov
ret
add
add
xlat
and
aas
sahf
jmp
jo
in
loopne
js
xor
sbb
dec
pop
jbe
inc
jo
out
movsb
idivl
pop
mov
mov
ljmp
jo
mov
xor
or
mov
jo
jno
into
jp
les
pshufw
fwait
jo
imul
jo
popl
adc
data16
movsb
fidivrs
and
pop
adc
xlat
mov
push
jo
sub
jo
lahf
fdivrs
icebp
push
or
je
sbb
cmc
cmpsl
vpshufhw
aaa
mov
ja
xchg
mov
jb,pn
xor
das
repz
dec
or
pop
dec
cs
movsb
pushf
or
lret
cmp
sbb
sub
enter
out
dec
out
push
lret
jno
inc
push
mov
fwait
push
jle
adc
mov
arpl
add
sbb
mov
push
pushf
sbb
arpl
loopne
mull
xorl
pop
dec
into
jge
test
fnsave
add
loopne
or
jo
pop
lret
dec
sbb
jo
lea
sti
test
loopne
insl
xchg
mov
out
mov
bound
xchg
mov
cmpsl
jo
xchg
inc
xor
sbb
dec
jmp
pop
inc
shlb
ja
mov
lcall
test
shrl
dec
stos
mov
test
jo
or
lahf
cli
leave
dec
jo
add
out
pusha
sub
mov
movsl
adc
addr16
xchg
add
cmpb
popf
sbb
fildll
inc
loopne
push
and
xor
jecxz
push
jns
int
or
scas
scas
ror
jo
add
mov
jo
cmpsb
cmp
dec
push
push
movb
add
jo
fadds
test
mov
ds
repnz
xchg
dec
out
mov
adc
sbb
sub
push
mov
adc
cmpsl
sub
mov
repz
pop
outsb
icebp
mov
nop
push
xor
outsb
xor
lea
pushf
jo
call
mov
aam
cli
mov
xchg
shrb
add
pushf
sti
add
scas
jmp
xchg
dec
das
lock
jne
pop
sub
mov
push
fistpll
push
repz
dec
or
jo
push
mov
outsl
jo
scas
adc
pusha
hlt
test
jno
mov
das
movsb
aam
mov
pop
sub
rclb
jo
fcompl
pop
dec
js
or
cld
push
jo
filds
cwtl
lahf
mov
hlt
cltd
jo
mov
pop
fimull
cmpsb
mov
dec
loopne
in
dec
addr16
insl
mov
jbe
pop
mov
mov
mov
xor
xchg
mov
jo
jno
outsl
into
mov
sub
pshufw
jmp
bswap
scas
jae
mov
std
loop
jno
movsl
push
das
jae
in
cmp
jg
out
lods
lcall
xchg
int
jo
push
dec
push
loop
fisubs
adc
nop
ljmp
jo
jp
pop
push
push
pop
cltd
mov
adc
adc
jl
inc
sahf
mov
mov
sbb
jg
outsl
idivl
iret
push
sub
outsb
jo
std
rcll
mov
in
mov
loopne
jo
pop
cmpsl
nop
rcrb
cmp
mov
pop
mov
lock
sti
xchg
mov
push
fistpl
xchg
jae
mov
jge
je
repz
rcrb
fstpt
jl
pop
shl
fwait
into
mov
rorl
gs
outsb
rdpmc
pop
sahf
sub
jo
mov
sub
gs
inc
ss
jo
fsubl
fwait
jo
fisubrl
sub
sbb
xchg
ret
test
xchg
dec
jo
into
lret
push
jns
loop
adc
outsb
subb
cli
jo
pop
add
or
into
jne
in
and
fsubs
xchg
xchg
dec
pop
mov
jb
andb
cmpsl
sti
pop
int
and
push
insb
xchg
adc
xorb
dec
jne
jo
push
scas
pop
and
mov
cmp
cmpsb
ret
jae
cmpl
mov
sbb
clc
and
push
call
adc
je
and
ja
xchg
mov
test
ds
arpl
dec
inc
push
mov
dec
add
jno
push
jne
cmp
xor
and
dec
insl
xchg
pop
popa
push
cli
jae
mov
shlb
mov
jo
inc
clc
cmp
xor
pop
fcmovnb
jmp
into
cli
push
mov
sub
push
jo
loop
ljmp
rcl
jge
mov
jae
ret
dec
inc
mov
cmp
jmp
pop
fildll
add
mov
js
pop
xor
dec
inc
loopne
lock
cmp
xchg
or
add
testl
sub
sar
mov
hlt
loop
int
dec
mov
push
nop
repz
repnz
push
gs
mov
aam
out
jo
push
push
out
mov
sbb
jo
push
dec
mov
jo
xlat
xchg
or
adc
and
rcll
loopne
pop
aad
jo
xor
scas
push
call
ss
fistpl
jns
fsubrl
xchg
add
loop
push
addb
add
jg
xor
mov
jl
lock
add
inc
lcall
in
jge
jo
jne
int3
xor
arpl
jbe
cmp
push
pop
ja
inc
xchg
or
jge
not
add
mov
mov
jo
mov
iret
sbb
rcl
mov
pop
jo
adc
enter
jecxz
arpl
adc
mov
pop
mov
lds
ror
mov
jp
mov
sti
rcr
sbb
adc
daa
xchg
push
sub
lahf
mov
ljmp
and
or
jo
lds
push
rcl
lret
call
mov
pop
icebp
rclb
lret
mov
daa
mov
jle
jecxz
inc
ror
xchg
add
lea
fwait
arpl
adc
inc
and
in
xchg
insb
push
cmp
scas
or
xchg
sub
inc
imul
xor
cmp
loope
sbb
repnz
jecxz
movsl
leave
pop
pop
xchg
push
mov
test
ljmp
inc
ror
lret
lss
push
mov
inc
rcl
rclb
aas
ss
lea
sub
and
xor
mov
mulps
mov
je
daa
ficoml
leave
pop
cmp
lret
mov
xchg
rcll
cmc
xchg
xchg
adc
iret
cmp
fildll
jbe
js
mov
fstpl
stc
ret
add
cwtl
inc
adc
xor
jb
fstl
mov
mov
mov
lretw
pop
adc
or
xchg
test
dec
lea
jbe
imul
cmpb
push
pop
insb
and
xor
testl
add
sub
call
xchg
or
mov
xchg
cmp
sbb
imul
jle
xor
push
jg
fstpt
sti
cld
ss
cld
sbb
mov
nop
dec
iret
popf
shlb
fidivl
adcb
loopne
sti
in
fsubr
and
roll
enter
push
popa
sbb
jns
jne
adc
movsl
lret
mov
ljmp
fiaddl
pushf
cmc
pop
mov
xor
mov
loopne
dec
in
call
les
insl
dec
and
mov
arpl
mov
jns
push
fisubrs
push
adc
jne
scas
rolb
mov
xchg
xchg
lock
fdivrs
addb
xchg
jbe
jo
test
subl
push
xor
sub
das
test
mov
dec
aad
cmpsl
mov
xchg
std
adc
lea
subb
inc
outsl
cli
hlt
loopne
mov
xor
xchg
shll
pusha
and
xchg
xchg
fstl
std
xchg
pop
enter
and
test
fldl
fimuls
cmp
fs
fiadds
sbb
mov
imul
and
movsl
push
cmp
xchg
dec
ficoms
sbb
xchg
fiadds
cwtl
icebp
cmp
jle
dec
test
cmp
dec
insb
and
loopne
dec
sub
jmp
test
jb
mov
inc
subl
xchg
sub
xchg
lret
out
pop
inc
mov
inc
dec
add
ficoml
fdivrl
xchg
add
inc
fwait
inc
or
bound
jge
mov
add
dec
sbb
mov
loop
pop
mov
mov
sbb
xlat
repz
icebp
leave
adc
or
push
mov
jne
les
cltd
gs
cwtl
outsb
int
push
and
mov
dec
push
mov
imul
push
xchg
in
cmp
mov
les
xlat
test
pop
insl
sbb
rcll
mov
inc
and
je
rcll
ffreep
xor
xchg
mov
xchg
jb
xorl
mov
inc
push
pop
jg
hlt
js
xchg
aas
jg
outsl
pop
jmp
adc
daa
jo
dec
sub
push
je
leave
cs
cmp
outsl
inc
inc
jge
mov
les
add
daa
xor
lcall
fs
push
call
push
mov
jns
ja
sbb
jne
jne
enter
adc
pushf
iret
cwtl
mov
lret
aas
rcrl
pop
adc
push
ret
xchg
cmpsb
pop
aas
lret
lods
jo
xorb
dec
jo
jg
pop
push
leave
push
xor
mov
hlt
in
scas
ljmp
jle
mov
das
je
jo
mov
aaa
mov
aas
jo
pop
jnp
enter
xchg
dec
fs
lock
jo
push
pop
enter
inc
insb
fwait
adc
das
enter
xchg
inc
lods
push
sub
xor
sub
outsl
pop
jo
cwtl
or
add
jl
les
dec
insl
adc
icebp
pop
repnz
fists
inc
outsb
pop
push
xor
and
add
pop
and
mov
jo
xor
rolb
push
xchg
jo
push
popa
mov
add
jo
push
rolb
shll
hlt
add
add
mov
iret
test
stos
leave
add
orb
js
pop
mov
outsl
imul
ja
xor
lret
sub
mov
idiv
sbb
mov
push
xlat
loopne
inc
sub
dec
test
jns
data16
mov
jl
sarl
nop
loopne
mov
xchg
jnp
and
lret
pavgb
add
inc
cmpsl
pop
cmp
bswap
xchg
scas
xchg
stos
add
pop
cli
ja
test
scas
jge
cmc
ret
push
enter
stos
repnz
addl
pop
jne
or
fisubl
mov
loope
enter
and
xor
xchg
sub
dec
int
out
icebp
test
andb
lods
shll
test
pop
xchg
fs
out
insl
int
mov
das
clc
push
jl
test
inc
push
ret
push
mov
mov
movsb
sub
in
pusha
in
movl
arpl
adc
adc
pop
shrl
insl
loopne
sbb
add
jno
pop
cwtl
jle
loopne
repnz
mov
jnp
cwtl
pop
push
and
mov
negl
rcrl
xor
pop
add
rorb
dec
lret
lock
dec
adc
sub
pop
fisubrs
popf
lock
mov
sarl
mov
cwtl
repz
adc
xchg
jmp
cli
or
scas
lret
mov
movsb
pop
xchg
pushf
rcrl
cmp
cwtl
mov
in
js
jb
std
fmul
and
sbb
fidivrs
xchg
int3
fdivs
mov
pop
lret
mov
mov
jne
out
sub
arpl
rorb
ret
jnp
adc
jle
or
cli
popf
dec
push
cmp
and
mov
into
jae
cwtl
shll
outsb
fisttpl
addr16
sbb
dec
incl
and
scas
stos
jae
mov
cwtl
pop
leave
loop
aaa
mov
mov
scas
mov
je
mov
sub
mov
sbb
inc
mov
push
pop
mov
fwait
test
cld
mov
dec
sarb
xchg
into
sbb
jge
cld
lret
cwtl
push
hlt
cli
add
icebp
sbb
gs
dec
iret
mov
mov
sub
sub
clc
dec
pusha
in
out
adc
pop
bound
push
out
jg
popa
and
test
pop
in
sub
add
lock
sbb
push
into
push
mov
sahf
mov
sub
mov
dec
inc
xchg
int
fisttps
jae
mov
dec
cs
xor
dec
ss
push
mov
cmp
push
mov
arpl
shr
cmp
aad
je
lock
loopne
lret
in
jge
std
push
ja
add
dec
mov
push
pop
mov
mov
adc
mov
loope
mov
fs
iret
sbbb
or
inc
imul
shrb
sub
pop
jo
arpl
cmc
test
mov
dec
je
mov
shll
outsb
test
jg
xor
push
movsb
loopne
pop
negl
cwtl
pop
jmp
cmpsb
cmpsb
push
movsb
clc
nop
xchg
nop
popf
shr
or
mov
in
xchg
sbb
inc
in
mov
xor
addr16
enter
pop
sub
xor
or
insb
mov
mov
pop
into
repnz
mov
pusha
xor
rep
lret
sbb
dec
aas
push
jge
andl
ds
lret
add
out
xor
adc
adc
mov
jp
pop
out
mov
in
repz
loopne
jb
mov
popf
das
lea
js
sbb
mov
pop
insl
xchg
and
shl
mov
leave
hlt
jo
mov
mov
jo
and
mov
add
es
mov
loope
add
loopne
in
sub
jo
mov
bnd
add
pop
sub
xchg
jo
mov
mov
ret
sbb
mov
andb
stc
jg
push
pop
pop
lock
in
fwait
js
imul
mov
scas
imul
jno
jo
clc
sbb
jp
test
data16
mov
dec
cltd
ja
or
mov
gs
cmp
std
xor
clc
xor
jp
pop
pop
dec
jb
test
adc
sarl
out
cmp
mov
cmp
jo
xchg
add
jo
and
dec
mov
jo
jbe
mov
dec
xor
in
jp
pop
aaa
jge
test
mov
nop
daa
mov
lock
mov
push
jno
jo
cltd
jne
mov
and
jns
stos
and
sarl
mov
mov
jb
mov
ja
fstps
jae
lcall
jae
add
mov
insl
mov
lret
jb
or
xchg
jo
mov
sarb
dec
add
add
stc
stos
jne
roll
repz
push
in
or
jnp
insl
xor
mov
jo
sbb
lret
push
mov
movsb
cli
pop
sbb
ljmp
daa
scas
jne
jo
das
cmp
in
xchg
std
sub
test
ret
and
ljmp
fdivrs
bound
pop
pusha
mov
lds
cltd
dec
jp
pop
out
jo
mov
pcmpgtw
mov
mov
jo
lods
out
jg
add
lock
inc
in
sbb
lea
int
fcoml
arpl
xor
jle
mov
imul
push
mov
jg
cmp
ja
stos
cwtl
aas
mov
jo
adc
push
mov
xor
mov
ja
mov
pop
xchg
mov
ss
pop
add
loopne
das
leave
jo
mov
hlt
jo
pop
cmpsl
or
out
xor
fidivs
mov
xor
insl
sahf
dec
fcmovne
jo
cmp
inc
xchg
scas
jle
jno
pop
sub
xchg
xor
pop
inc
cmc
push
inc
ror
outsb
add
xor
mov
jo
scas
push
cmp
and
cmp
jmp
push
imul
insl
xor
out
mov
inc
std
jb
adc
sub
out
add
shlb
mov
sbb
pop
mov
mov
or
jo
xchg
orl
mov
xlat
dec
xor
sbb
push
lret
jo
fstp
dec
mov
das
pop
jo
daa
xor
inc
lds
jo
arpl
lods
mov
shl
jae
lods
jge
js
mov
inc
lock
xor
aaa
hlt
xchg
push
lea
ret
fdivrs
in
mov
pushf
jo
mov
aam
pop
jo
lcall
pushf
mov
cmpsl
jo
dec
addr16
pop
sub
fldl
ljmp
xchg
stos
push
test
xor
mov
push
test
sti
ret
jo
into
sub
jle
sub
in
add
icebp
mov
mov
out
lock
mov
add
pop
push
xor
pop
or
sub
lods
movmskps
cmp
push
pop
mov
or
scas
into
mov
subl
cvtpi2ps
pop
mov
mov
ljmp
xchg
mov
in
xchg
gs
jo
xor
push
lcall
cmpsl
mov
mov
or
leave
lock
lock
les
mov
jo
mov
mov
ds
jo
lock
inc
test
and
jle
loop
lret
adc
rorl
and
xor
xchg
mov
inc
cmp
xlat
cmpsl
mov
push
lahf
rorl
sbb
jmp
jo
dec
inc
fstl
iret
mov
mov
aad
in
enter
lock
cs
fistps
inc
jo
add
cmp
leave
fimull
insb
pop
mov
out
and
ret
stos
rol
inc
pop
pop
jge
jo
inc
das
icebp
cld
and
dec
sub
push
insl
adc
jne
pop
fsubrl
leave
cmp
in
jo
push
sbb
lea
sahf
add
jo
int
movsb
js
xchg
sub
push
sub
cltd
call
mov
mov
jae
cmp
jo
mov
outsl
mov
scas
outsb
sbb
cmpsb
push
sarb
xchg
pop
jo
nop
and
jo
ja
push
movsl
cmp
pop
jo
mov
popa
imul
adc
xlat
dec
scas
outsl
js
xchg
popf
mov
dec
roll
addb
xlat
push
sti
jbe
outsl
jae
and
jo
je
testb
fcoms
test
jl
movsb
shr
daa
aam
dec
push
adc
push
inc
filds
add
sahf
inc
or
aad
hlt
std
idivl
xchg
jo
cmpl
cmc
jo
out
aam
popa
cmp
movsb
jo
in
lahf
aas
sbbl
adc
jo
scas
je
cmp
fstps
pop
mov
popf
sub
sbbl
out
jo
sbb
loope
shlb
orb
addr16
stc
rclb
test
insl
cmp
daa
int
stos
fcomps
xchg
xor
flds
dec
in
add
aaa
fidivs
mov
popa
std
cmp
loopne
mov
jo
sti
mov
in
cmp
gs
xchg
cwtl
jo
push
dec
mov
mov
jo
add
xor
add
xorb
push
shlb
test
adcl
ficompl
in
dec
insl
inc
ds
cmc
jo
mov
adc
push
pop
loope
loopne
jbe
mov
bnd
jnp
inc
pop
xor
jo
lock
into
incl
repz
mov
sbb
push
pop
insl
push
adc
je
stos
das
ret
gs
lock
rclw
jno
fdivrl
or
jo
xchg
mov
add
outsb
mov
fidivrs
jo
cld
out
xor
popa
pop
out
and
orl
jp
movsl
xor
mov
aad
cmpl
jo
lods
push
inc
cmp
pop
enter
testb
iret
roll
xchg
call
adc
dec
ja
mov
insb
sbb
fwait
shlb
add
sbb
jo
into
jns
xchg
insl
jo
adc
jo
mov
mov
repz
imul
adc
std
addr16
outsb
xchg
sub
xchg
jg
sub
xchg
jge
pop
mov
fmuls
ja
sbb
into
int3
out
pop
jle
jo
out
cwtl
or
imul
loopne
or
subps
jo
repz
and
loope
cmp
jp
mov
jno
stos
adc
outsl
shll
lds
int3
add
pop
and
or
jnp
xchg
rol
add
pop
jmp
xchg
and
rclb
xor
and
fwait
or
sub
push
fcoml
insl
jae
xlat
hlt
clc
scas
push
mov
pop
push
pop
xchg
jo
xchg
sub
inc
daa
orb
andb
jo
push
pop
mov
inc
cwtl
xor
mov
ja
mov
push
sub
inc
xchg
dec
ret
xor
iret
inc
adc
rol
sub
cmc
inc
and
jecxz
lret
jle
mov
push
lret
jo
data16
or
fdivrp
or
dec
pop
jae
and
dec
outsb
out
mov
mov
bound
enter
pop
dec
inc
push
jno
jo
push
ss
cmp
jae
push
arpl
rol
nop
test
pop
insb
icebp
xor
sub
mov
jmp
jo
inc
ds
lahf
int
ja
mov
sub
push
and
jo
xlat
insl
mov
jp
xchg
rolb
clc
lods
pop
push
insb
jo
mov
fdivl
nop/reserved
nop
fs
lods
mov
jo
pop
inc
fidivrl
clc
mov
outsb
dec
pop
das
mov
xor
aas
loope
lods
dec
ja
inc
aaa
lock
mov
push
lcall
mov
dec
mov
jge
add
cmp
insl
pop
xchg
jmp
adc
outsl
cmpb
jo
mov
hlt
scas
jo
imul
test
pop
pop
cmpsb
add
enter
jo
dec
xchg
stc
cmp
in
xchg
movsb
lods
bound
jo
mov
imul
das
fcmovb
ret
mov
xchg
sub
shll
xlat
aad
rcrb
test
xor
adc
push
dec
roll
xor
cmp
mov
push
subb
adc
std
subl
adc
idivb
frstor
jo
mov
inc
dec
sub
popa
call
lahf
jo
lahf
in
push
ja
enter
mov
jno
dec
in
jo
in
sub
cltd
lock
adc
sub
sbb
insb
fsts
out
xorl
hlt
mov
js
imul
test
int3
mov
lock
testl
jo
jg
xchg
fisttpl
dec
jae
mov
mov
shll
pushf
pop
jecxz
xor
and
rcrl
push
xchg
dec
push
cli
sub
pop
pop
out
adc
lret
jo
mov
pushf
ds
imul
adc
pop
jb
negl
movb
fs
jo
jmp
loopne
inc
mov
jo
mov
jecxz
int
in
cmp
xor
mov
cmpsb
mov
jo
mov
jmp
hlt
or
hlt
jo
roll
or
jo
fs
sbb
insl
ret
cmp
lea
sbb
jae
dec
fiaddl
jo
in
cmc
pusha
push
sbb
testl
dec
xor
sub
jmp
add
test
jo
clc
stc
addb
mov
xor
adc
mov
jne
jo
xor
jmp
adc
jb
in
inc
jecxz
jo
fwait
shlb
dec
sahf
repnz
loope
inc
push
jae
jl
adc
lock
ljmp
jmp
mov
cmp
mov
nop
sahf
inc
cltd
punpckldq
je
aam
jo
shll
sub
mov
das
cmp
mov
cmc
xchg
mov
inc
out
fsubrl
pop
scas
push
nop
dec
pusha
jo
scas
rorb
inc
int
jo
sub
lods
decb
and
shl
or
push
jo
inc
mov
xchg
pop
jp
adc
xor
pop
mov
shrb
or
push
scas
les
mov
or
jo
scas
mov
push
mov
imul
fs
jmp
mov
in
outsb
cwtl
push
rep
jbe
lds
or
pop
inc
ret
fs
imul
es
jnp
sub
mov
mov
cli
outsb
inc
sbb
mov
mov
dec
adc
pop
pushf
cmp
sti
ficoms
aam
adc
daa
mov
and
imul
mov
or
adc
aas
loope
pusha
xchg
xchg
pop
sahf
cltd
bound
push
nop
and
push
sbb
adc
xchg
insl
xor
sbb
dec
sbb
and
jp
pusha
push
pop
mov
lea
in
sub
jae
jbe
mov
mov
out
repnz
cli
shlb
in
push
sbbl
and
dec
xchg
xchg
orl
movsb
cltd
out
sbb
shlb
enter
sub
xchg
or
fs
push
push
femms
mov
and
jnp
out
or
out
insb
cmp
daa
ror
cli
adc
or
inc
scas
das
stos
xchg
es
fisubrs
cli
inc
sub
das
dec
mov
cwtl
fcomi
add
jne
js
arpl
je
push
cmp
in
push
cmp
push
push
jb
dec
mov
outsl
adc
addr16
pushf
ret
scas
cmp
pop
jbe
outsb
sbb
stos
inc
mov
xchg
push
ret
adc
jbe
xlat
dec
xchg
pop
std
inc
xchg
in
jecxz
xor
into
mov
sbb
jp
pop
into
cmp
movsb
loopne
jo
and
inc
jo
scas
rolb
inc
lahf
jo
jge
mov
ja
or
mov
mov
xlat
sbb
sub
pushl
mov
dec
aad
jecxz
xchg
rorb
or
push
jge
hlt
dec
rcrl
lock
dec
imul
sbb
aam
loopne
jo
pop
cwtl
mov
and
jmp
push
ljmp
pop
outsb
in
or
inc
cmpl
mov
insb
mov
ljmp
stos
icebp
nop
cwtl
loop
mov
jo
out
call
mov
cmp
int3
psubb
cwtl
jae
dec
insl
in
jo
leave
push
and
mov
pop
rcll
jo
das
cmpsb
cmp
jo
js
inc
mov
gs
ja
sub
dec
call
test
or
dec
ja
leave
mov
int
icebp
inc
addb
push
mov
lock
sub
cmp
inc
movsl
in
jo
fs
pusha
jo
add
data16
bound
jo
add
gs
lcall
jno
arpl
data16
mov
pushf
cltd
jo
aas
jge
jnp
push
movsl
xchg
insl
jo
jne
fsubl
xor
cli
adc
sub
jp
jae
das
shll
shrb
jo
out
mov
jo
lods
add
push
imul
jo
jb
repnz
jo
xor
xchg
mov
addr16
mov
dec
bound
sbb
mov
xchg
and
dec
ret
mov
dec
xchg
aaa
xchg
mov
jo
fwait
add
test
mov
mov
lahf
rcll
or
fwait
ljmp
adc
adc
cmp
int3
mov
call
pop
nop
enter
sahf
shll
push
add
jo
sub
fisttpll
add
call
aaa
outsl
mov
and
in
sub
std
push
in
jo
xchg
add
mov
lock
icebp
xor
outsb
jb
repz
mov
lcall
add
push
jo
xchg
sbb
mov
int3
jo
sub
mov
mov
and
or
mov
mov
scas
jmp
pop
gs
adc
pop
pop
xchg
or
jo
xor
not
fdiv
shlb
scas
movsl
paddsw
mov
pop
aam
push
mul
push
jge
dec
lock
push
je
loop
out
jo
adc
pusha
fmull
jo
xchg
insl
daa
adc
jo
inc
mov
repz
pop
jo
cmpsb
adc
icebp
loop
inc
jo
ljmp
push
cwtl
std
jo
push
xchg
push
xor
fwait
jo
lods
mov
pop
test
dec
xchg
stos
jae
add
lret
adc
mov
ljmp
adcb
mov
add
mov
outsb
jmp
mov
jo
jmp
xchg
mov
test
or
sbb
mov
add
mov
insl
or
sahf
mov
mov
push
sbb
mov
pop
repz
movsb
xor
mov
sbb
lds
adc
std
es
and
mov
aaa
mov
shr
mov
insb
ja
and
insl
fnstenv
hlt
lret
jo
dec
ret
push
mov
mov
insl
mov
out
andl
dec
jle
pop
test
add
inc
jecxz
jl
cmpsl
inc
jae
sbb
jns
mov
insl
inc
push
das
js
xchg
into
cmp
pop
pop
inc
stos
jo
fs
adc
leave
lcall
jo
and
jge
fsub
inc
jo
pop
mov
adc
sbb
mov
mov
mov
insl
jo
sub
or
push
mov
mov
nop
adc
test
xor
adc
arpl
ljmp
imul
xchg
push
jp
dec
xor
rcrb
pop
mov
lea
arpl
jo
push
xor
fldcw
pop
xor
cmp
iret
test
inc
sub
mov
push
incb
out
outsl
push
push
jecxz
mov
pusha
xchg
pop
adc
stc
sub
dec
pushf
js
imul
lods
aaa
inc
pop
jns
in
adc
icebp
sbb
mov
insb
sahf
sbb
lock
in
fwait
pop
insl
imul
mov
xor
imul
jo
addr16
clc
pop
inc
les
gs
in
jle
lcall
not
mov
jg
imul
ja
das
lcall
sub
fcomi
mov
in
cmpsb
xchg
sub
imul
fsubr
pusha
test
divl
andl
jg
push
in
mov
add
xchg
jae
adc
je
mov
dec
loopne
insl
cmpl
bnd
mov
cmpsb
cmovns
aas
cmp
int3
adcb
jo
es
and
sbb
jo
cltd
push
mov
insl
mov
fimull
pop
addb
in
insl
cmpsb
ret
ds
popf
roll
jo
rcrb
cmpsb
add
xor
jo
jnp
ret
inc
sbb
fcom
loop
imul
shr
and
out
bndldx
xlat
into
jecxz
mov
cmp
movsb
push
scas
jo
cmpl
mov
std
enter
xor
push
data16
dec
jo
out
jp
fsubrs
xchg
sub
jo
in
fistpl
add
das
and
dec
xor
popa
nop
dec
loop
sti
xchg
jo
mov
in
ss
std
cltd
push
mov
dec
les
push
hlt
cltd
mov
pop
insl
cmp
inc
out
bnd
lods
jae
adcb
jo
cld
push
loopne
pop
mov
dec
xchg
add
stos
shlb
jno
js
mov
negl
es
inc
cmp
adc
xchg
xchg
mov
xlat
arpl
push
xchg
xor
mov
inc
pop
inc
mov
jb
in
jae
sbb
inc
jae
cs
dec
jo
in
in
push
add
movsl
add
jo
sub
inc
lcall
inc
fs
xor
in
and
dec
dec
inc
jo
in
add
rep
jbe
popa
std
sahf
icebp
xor
pop
xorb
insb
aam
xchg
sbb
pop
inc
jg
inc
mov
sbb
lds
dec
insb
mull
sub
lea
pop
mov
out
push
mov
dec
add
or
int3
xchg
jb
popa
stc
icebp
push
push
decb
gs
test
jae
dec
jecxz
pop
adc
jo
inc
add
jo
push
clc
pop
out
sbb
adc
push
pop
mov
pushf
in
fnstsw
stc
arpl
insl
sub
dec
mov
outsb
std
cmp
mov
xor
addr16
push
add
add
lods
aaa
hlt
mov
xlat
jo
ss
or
dec
int3
ja
mov
cmp
gs
jecxz
cmc
sbb
push
mov
pusha
mov
mov
test
out
push
jo
cs
sbb
frstor
sbb
jo
arpl
je
mov
xor
int3
adc
adc
inc
mov
and
or
push
inc
arpl
adc
xchg
into
mov
fisubl
aam
jno
insl
mov
fldcw
pop
lock
jge
hlt
push
shlb
cmc
mov
sbb
out
lret
sub
push
xchg
paddw
inc
daa
js
divl
loop
xor
push
add
pop
bound
add
fsubp
jne
xchg
jne
and
xor
sub
fsts
andb
cmp
mov
xchg
imul
mov
xor
aad
jl
les
jl
fstp
les
dec
add
loope
call
and
mov
inc
dec
and
pop
push
fiadds
loope
mov
sbb
sbb
lahf
iret
daa
fimuls
hlt
push
mov
cltd
pop
cmp
xchg
jne
xor
mov
sub
mov
ja
jbe
sbb
mov
loopne
and
sti
int
cwtl
hlt
push
xchg
gs
inc
cmpsb
test
xchg
add
push
insb
push
or
xor
andb
out
sub
mov
insl
sbb
cmp
sbb
fdivrs
push
out
test
mov
subl
hlt
cwtl
mov
and
test
pop
sub
mov
mov
loopne
add
mov
int3
popa
psllw
out
addr16
xchg
shll
fdivr
out
scas
fiaddl
pop
outsb
jmp
and
js
mov
mov
insl
scas
clc
data16
sbb
mov
jle
outsb
adcb
push
out
int
into
nop
cli
mov
int
hlt
jge
lret
push
push
mov
sbb
repz
mov
jbe
cwtl
fwait
mov
mov
shl
mov
scas
cwtl
mov
testb
push
add
pop
movsl
pop
pop
fidivs
jno
cmp
mov
fmull
pop
xchg
jp
ret
insb
dec
inc
xor
or
push
test
dec
lock
loope
cmp
outsl
inc
and
pop
call
xchg
inc
pop
jo
repz
bound
lcall
negl
dec
daa
and
sub
mov
fwait
mov
cwtl
andb
push
lods
inc
mov
mov
sub
push
adc
je
mov
lret
mov
jo
dec
xor
cmp
or
clc
dec
movsl
push
mov
jo
xor
sbb
shlb
sbb
jmp
xchg
and
mov
rcrb
cmc
mov
and
imul
in
lock
pop
out
cmpsl
xor
cld
and
push
jo
movsl
outsl
and
inc
add
jae
jmp
xor
inc
mov
mov
push
jmp
or
jo
lret
xor
lcall
jge
mov
cmp
shll
jo
lds
xlat
add
inc
movsl
rorl
xchg
push
outsb
mov
add
jae
xchg
jo
mov
pop
sahf
or
jo
adc
xchg
jg
into
sbb
in
pop
push
dec
sub
jne
xchg
negl
leave
or
jo
xor
movsl
xor
dec
inc
lock
icebp
dec
inc
mov
lock
xchg
dec
jbe
jo
repz
shll
mov
mov
jo
icebp
pop
jmp
jo
fstpt
loope
ja
or
jo
lds
jo
push
nop
mov
xchg
dec
out
out
jge
outsl
sbb
jo
aad
jecxz
mov
enter
dec
gs
sarl
jno
test
mov
gs
jne
adc
mov
push
iret
inc
pop
hlt
ss
insl
fwait
into
daa
jnp
cld
jb
hlt
sar
inc
cwtl
jnp
in
divl
fidivs
jne
clc
pop
sbb
inc
rcr
stc
sub
xchg
jmp
or
push
adc
xchg
cli
mov
xlat
sbb
inc
add
sub
imull
xor
enter
out
mov
jle
scas
je
sbb
adc
in
jne
sub
dec
inc
mov
adc
loopne
and
adc
fstpl
sbb
xchg
sbb
int
dec
or
xor
leave
cmp
push
jl
sub
idivl
xchg
cwtl
lock
cmp
lret
mov
out
fidivl
in
mov
iret
and
scas
fidivs
jns
loopne
pop
jp
lock
gs
or
je
mov
xor
pop
repnz
lret
pop
roll
and
sub
enter
mov
repnz
jge
test
popa
dec
push
xchg
pop
sub
sbb
cwtl
ficomps
dec
mov
minps
inc
mov
xchg
mov
addl
mov
dec
je
or
pop
dec
test
les
ds
push
movsl
mov
sbb
cmp
outsl
push
push
je
sub
stos
pop
clc
repz
aas
scas
mov
inc
shlb
popa
jo
loopne
icebp
cwtl
push
sub
mov
arpl
push
out
je
and
fnsave
enter
test
cltd
sahf
data16
addb
add
es
mov
adc
adc
push
lret
dec
imul
pcmpeqb
sbb
fnsave
add
sbb
push
sti
in
add
cmp
add
fs
shll
mov
mov
addl
imul
push
mov
jne
insl
push
andb
fildl
loopne
out
cli
addr16
add
xchg
dec
leave
ss
test
xor
aad
jl
and
nop
int
mov
pusha
jb
cld
jle
dec
imul
into
mov
cmc
test
mov
or
mov
outsl
or
ret
cwtl
pop
xor
sbb
rorl
stos
je
sti
dec
movsl
mov
imul
jo
jne
cwtl
aaa
sub
jo
cwtd
push
neg
xchg
lret
push
sbb
arpl
push
popf
xchg
test
xor
mov
mov
mov
lea
lea
cmpb
pop
or
sahf
loopne
jmp
xchg
pop
call
ss
pop
loope
test
roll
icebp
out
std
das
xor
movsb
cmp
leave
jle
aad
pusha
and
js
sbb
lock
or
and
push
iret
add
push
adc
dec
out
popf
bound
dec
xor
lret
movsb
push
mov
adc
mov
out
xor
cwtl
pusha
lock
shr
cmp
push
mov
fdivl
cmp
ret
notb
loopne
xlat
cmpsl
sub
lock
jae
test
cltd
sub
jb
push
iret
jmp
mov
in
xor
dec
push
or
adc
adc
mov
push
and
sub
dec
arpl
xor
push
outsb
push
pop
dec
dec
loopne
ljmp
push
xor
fwait
jno
pop
imul
repz
jae
sbb
popa
mov
les
and
sub
aad
pop
cmp
lretw
mov
xchg
mov
cwtl
stos
and
push
ljmp
mov
mov
jne
push
cwtl
mov
nop
ds
imul
xchg
cmp
aad
arpl
mov
loopne
movsl
mov
out
imul
hlt
ja
fidivl
in
push
xchg
js
and
add
mov
or
cltd
jo
in
xorb
xchg
test
add
mov
int3
cmp
xchg
dec
jl
loop
xchg
xor
fwait
and
aaa
pop
mov
clc
jnp
sub
adc
mov
loopne
leave
xchg
cmp
push
aad
in
xchg
andl
xchg
clc
repz
xchg
out
xor
cmc
rorb
movsl
gs
stos
dec
and
push
scas
cmp
imulb
dec
enter
cmp
sarl
sub
movsl
repnz
lcall
adc
jo
movsb
in
inc
xchg
mov
push
mov
enter
jo
pop
and
out
dec
addr16
mov
sub
dec
and
jo
imul
jo
mov
popa
and
xchg
or
push
sub
lods
jo
movsb
addr16
stc
divb
out
pop
mov
loopne
push
dec
sbb
or
push
xchg
repz
push
dec
insb
ja
int
das
ret
scas
inc
or
gs
clc
in
jp
aaa
pop
cmpsl
ret
inc
sub
cltd
cmp
adc
dec
int
jmp
incl
movb
push
lock
out
fidivl
testb
stc
inc
fnsave
jle
fisubrs
xor
jo
addr16
dec
add
cmpsb
insb
add
clc
jo
out
rclb
jns
leave
mov
xchg
or
xor
pop
mov
xchg
push
mov
add
enter
add
fwait
es
mov
clc
push
dec
jo
pushf
push
pop
int3
mov
jae
mov
ljmp
mov
mov
jbe
lock
es
mov
daa
add
add
shlb
xchg
jg
ja
inc
std
mov
nop
xlat
ja
cmpsl
ret
subl
call
mov
pop
clc
jo
xchg
cmp
fsts
push
pushl
rcl
sub
jo
lods
mov
pop
xor
sbb
addb
pushf
mov
mov
mov
jo
insb
or
ja
out
fisttpll
ret
cmp
jno
inc
sbb
xor
out
into
repnz
cmova
mov
mov
icebp
popf
jo
pusha
dec
out
int
inc
xlat
dec
sbb
ja
jnp
hlt
mov
shll
pop
mov
int
std
mov
sub
ljmp
sbb
cld
lret
jo
inc
out
cmp
pop
jo
xor
adc
inc
cmp
ja
add
popa
pop
inc
and
and
jge
test
push
ficoml
pop
xlat
imul
stos
push
in
movsb
ja
pop
cltd
jge
push
lret
jecxz
push
mov
mov
lock
dec
cmp
xchg
outsb
sbb
mov
sub
adc
or
jp
dec
ror
mov
repz
pop
sub
xorb
sarl
fnstenv
jg
xchg
dec
dec
lods
xor
hlt
mov
into
add
jo
xchg
les
stos
push
xchg
outsb
sub
cmp
scas
lock
dec
ljmp
and
cli
jl
imulb
dec
xor
and
inc
insl
inc
lds
pushf
rol
jo
xchg
and
xchg
int3
xchg
pshufw
lea
or
ret
and
nop
inc
mov
mov
jo
sbb
xor
subl
scas
pop
ja
jo
fiadds
test
xor
sbb
test
imul
pop
aaa
sbb
lds
jne
jns
insl
stc
nop
pop
jae
imul
rorl
jae
jo
cmp
aaa
push
add
int3
adc
je
inc
sbb
push
in
and
int
inc
jo
mov
and
data16
stos
out
xchg
jo
daa
lahf
mov
outsb
inc
push
es
lcall
fwait
outsb
test
mov
jns
lock
inc
fsubrl
stos
lret
push
ficompl
xchg
and
jmp
sbb
push
sub
mov
cmp
leave
scas
push
pop
jge
adc
dec
insb
push
repz
dec
jae
das
fidivl
ja
mov
push
in
dec
lods
mov
fnstenv
and
mov
or
aaa
dec
jo
loop
mov
pop
mov
xor
xchg
sbb
jnp
dec
mov
outsb
jns
dec
pop
imul
subb
gs
xchg
push
out
mull
outsb
dec
movsl
mov
jo
xchg
shrl
push
mov
mov
xchg
call
notl
stos
fwait
insb
mov
cmp
mov
jo
ss
mov
jno
xchg
pop
sbbl
pop
test
push
add
and
push
jnp
orb
inc
mov
sbb
xchg
cmpsl
lea
jecxz
jo
jnp
and
inc
imul
xchg
lahf
mulb
inc
cs
int
bound
and
adc
loop
pushf
adc
pop
ret
ds
loopne
adc
aaa
clc
cmpsl
cmp
jo
rcrb
leave
jo
daa
das
and
fdivs
lock
xchg
jmp
shl
loop
sub
int
cmp
jp
xlat
and
addb
dec
add
jo
pop
jb
jmp
dec
mov
mov
push
and
push
push
lahf
mov
inc
cmpsl
int
in
enter
cltd
cmp
ja
pop
call
inc
dec
cmpsb
jo
dec
jmp
les
jo
lahf
adc
je
cli
fidivs
sarb
push
jo
mov
and
dec
lahf
xlat
jo,pt
dec
cmpl
out
ds
adc
mov
mov
cmp
imul
scas
xchg
lods
out
lock
testb
cmp
call
jo
sahf
pushf
adc
jo
cmp
insl
mov
mov
aas
adc
jo
adc
pushf
imul
jo
xchg
mov
jo
pcmpgtb
add
push
loop
js
loopne
outsl
addr16
dec
les
fnstenv
or
fstl
dec
mov
sbb
sbb
jo
or
push
imul
lods
loopne
jo
xor
mov
jo
add
enter
jo
pop
mov
ss
sbb
and
inc
jo
cmpsl
pop
aad
jae
sbb
clc
xor
lahf
orl
mov
ficompl
xchg
inc
jo
sbb
adc
or
into
inc
cli
outsl
ja
and
js
jmp
push
adc
fisubrs
aas
mov
dec
cltd
sub
cmp
cmpsl
inc
pusha
and
shr
test
xlat
movsl
mov
rorl
push
mov
pop
es
out
dec
xor
rcrl
cmpsl
jle
jo
xchg
adc
mov
fimull
jo
push
lods
sub
movsl
xor
pop
cld
and
test
push
add
cmpsl
dec
leave
sbb
mov
or
dec
mov
dec
xor
mov
adc
or
push
bound
jo
fldl
sahf
jo
push
push
xchg
insl
pop
inc
mov
pop
cltd
push
hlt
sub
mov
or
pop
loope
mov
jecxz
jo
cmp
jo
and
cmp
popa
add
push
push
pop
shll
fildll
adc
add
sub
das
je
jae
lock
jnp
cmpb
insl
dec
pop
or
mov
xchg
jo
enter
and
leave
std
xor
pop
jo
mov
xor
roll
ret
jmp
xchg
dec
mov
push
mov
ja
adc
inc
adc
addr16
pop
cld
leave
push
ja
jae
push
or
lret
loopne
add
loope
mov
ret
in
cmp
cwtl
xor
jo
outsb
dec
sbb
jbe
icebp
into
mov
daa
insl
jp
xor
enter
stos
mov
lcall
ja
outsb
mov
in
push
es
jo
testl
ljmp
fsubrs
imul
adc
cli
subb
shrl
pop
mov
out
or
jbe
test
lret
pop
js
push
das
dec
testb
pop
jp
push
pop
repz
and
rorb
or
jno
lret
cltd
mov
xchg
movsb
outsl
dec
and
jae
inc
dec
xchg
mov
outsb
cli
test
lods
jo
sub
ja
sbb
cmp
fwait
pop
lahf
push
push
out
or
inc
outsb
push
outsl
xchg
insb
or
lock
xor
dec
fnstenv
push
mov
test
jo
sar
jg
test
inc
call
data16
int3
jae
sbb
jp
int
les
in
lahf
test
popf
aam
mov
sahf
cli
scas
into
and
mov
lock
aam
jns
mov
lock
xchg
mov
stos
mov
leave
shrl
sbb
fnsave
cmp
jb
xor
jns
mov
shr
xchg
dec
daa
in
push
pop
andb
and
cmp
and
dec
in
add
std
and
xchg
bound
pop
rclb
mov
sbb
ret
popa
sti
rcrl
fs
iret
cltd
xlat
cmc
rorb
add
xchg
loop
inc
cltd
dec
mov
mov
daa
clc
jl
pop
insl
sti
adc
add
cmp
xor
sbb
pop
fldt
sahf
add
push
inc
cmp
jo
lea
gs
pop
adc
sbb
cwtl
fdivl
js
int
jne
inc
inc
mov
nop
mov
mov
and
mov
and
add
rclb
lods
xlat
xchg
mov
and
shll
das
or
cltd
xchg
adc
ret
jo
test
cmp
scas
jp
mov
mov
lods
nop
or
mov
cmp
insb
sbb
inc
push
andl
pop
movb
icebp
jae
jge
in
aaa
cltd
in
jo
fs
loope
pop
test
dec
xchg
enter
mov
sub
xchg
sbb
aas
jnp
mov
push
mov
or
jo
fistpl
andb
gs
cmp
out
mov
test
mov
pop
mov
jge
repnz
mov
lods
insb
cmp
test
mov
mov
mov
or
sub
mov
pshufw
mov
mov
cmp
sbb
aad
jo
push
cvtps2pi
das
cmp
fbld
pop
xchg
push
jo
xor
aam
movsl
rol
jo
enter
sbbb
and
xlat
sub
jo
int3
push
mov
jo
jns
and
push
inc
jecxz
jo
sub
imul
testl
lret
js
mov
adcl
xlat
adc
cmp
or
sub
ja
mov
push
lds
or
sub
cld
out
jo
sub
inc
jo
scas
loopne
jp
push
fisttps
mov
popf
ja
push
fisubs
arpl
inc
int
cwtl
jo
sahf
incl
mov
jne
outsl
mov
push
fiaddl
mov
xor
xor
stc
sub
pop
call
shlb
leave
jo
test
mov
jo
in
sub
pop
mov
jo
das
out
pop
mov
ret
imul
loope
adc
or
clc
cltd
call
and
xchg
mov
lds
sahf
into
cmp
fidivl
test
jmp
jo
add
jmp
cmc
cld
or
jo
and
es
jo
add
test
or
push
jae
push
lds
test
insb
sub
inc
xor
jl
or
xor
jle
xor
in
cld
iret
movsb
bnd
bound
arpl
mov
and
stos
in
push
xor
fisubrs
fdivrs
jo
sub
shlb
stc
rclb
cmpsl
sbb
jp
imul
xchg
and
aaa
jo
fs
mov
jo
or
dec
mov
mov
loopne
fimuls
jae
aas
inc
mov
dec
scas
push
pop
insb
xlat
pop
push
scas
push
xor
ss
sbb
lea
jo
jmp
adc
jo
and
mov
aad
jnp
nop
cmpsl
in
or
dec
lock
dec
xor
sub
pop
mov
cmp
jo
sbb
adc
insb
jle
push
les
jl
push
out
cmp
cltd
mov
sbb
pop
outsb
cli
cmp
inc
xor
xchg
xor
jo
dec
xchg
cs
add
int
arpl
jo
idivl
cmp
mov
mov
jg
rclb
out
dec
xlat
jno
mov
or
dec
pop
je
jo
mov
sbb
outsb
repz
jns
test
mov
pop
ds
mov
jae
adc
dec
fsubs
mov
adc
mov
inc
cmp
stos
xlat
mov
mov
insb
push
out
lods
pop
lock
orl
mov
lds
mov
insl
xchg
aad
in
jo
repz
xlat
lret
insb
pushf
add
jo
adc
aad
jo
and
mov
jge
jp
pushf
call
xchg
mov
stc
xchg
in
mov
ret
mov
enter
pop
xor
mov
std
testb
je
lock
push
int3
sub
dec
mov
sub
faddl
adc
rorb
or
jae
sub
xorb
jo
jne
jecxz
dec
jae
adc
mov
or
mov
in
jle
dec
pop
sbbb
jo
mov
pop
test
hlt
jo
adc
xor
loope
dec
imul
sbbl
jo
jb
cmp
sbb
imul
sbb
jo
xor
fisubs
iret
mov
inc
sbb
pop
jo
push
ljmp
test
in
cmp
pop
out
xchg
pop
pop
addb
cmpsb
jo
call
jnp
pop
out
insb
insb
jae
ja
push
mov
hlt
pushf
dec
cmp
xor
jo
sbb
jo
ja
xor
pop
mov
jg
lock
jge
jo
and
cltd
mov
shlb
sbb
outsb
dec
mov
test
xor
add
cltd
push
cmp
rol
mov
mov
orl
jo
sub
fbld
jo
xchg
xchg
sbb
ss
lret
or
int
pop
stos
mov
mov
dec
add
push
nop
mov
or
cmp
jge
dec
cmpsl
jns
mov
lret
sub
les
xchg
stos
push
jnp
in
jo
leave
xlat
insb
ds
adc
add
nop
add
and
jo
jg
popa
sbb
mov
lret
or
jo
mov
pop
push
sarl
jo
jae
sub
jo
push
sbb
fmuls
push
inc
jo
mov
inc
push
mov
xor
pop
pop
sbb
xchg
ja
xorl
daa
pop
jo
push
pop
stos
xchg
out
add
outsb
fistpll
mov
or
daa
in
pop
popf
pop
mov
enter
fidivrl
and
sbb
lods
jo
jno
and
aas
movsl
loop
inc
push
jbe
sub
sti
xor
lods
iret
dec
mov
jo
addr16
push
sub
outsb
jo
and
push
jo
mov
mov
xchg
dec
lods
ds
out
push
jl
ret
je
je
jns
subb
cmpsl
xor
dec
fs
lds
hlt
mov
jo
aam
or
call
jo
cmp
or
xor
lock
cmp
or
mov
pushl
jo
cmp
fwait
insl
jo
jge
loope
dec
inc
xorb
aaa
nop
xchg
xor
scas
add
ja
loopne
xchg
lods
sub
lods
mov
test
fdivrl
stos
lock
jo
int3
aaa
mov
aad
sbb
inc
stos
sahf
lret
adc
push
sub
lea
scas
jnp
shrl
xorb
sub
les
jo
sarl
add
mov
out
jo
jmp
lods
cmp
jo
xorl
jno
cs
rol
loopne
iret
adc
sub
push
loope
mov
mov
call
pop
dec
pop
aad
add
inc
mov
pop
jae
cmp
cwtl
lahf
test
dec
stc
pop
lret
scas
pop
add
ret
mov
fstpl
lods
mull
pop
xchg
outsb
bound
nop
or
insl
xchg
lds
pop
sub
add
in
sar
addl
out
pop
adc
dec
cmp
fmull
out
jo
pop
xchg
jge
sbb
das
gs
lock
xor
jo
cmc
cmp
sarb
aaa
sbb
xchg
push
fdivl
push
inc
mov
in
xchg
iret
dec
or
jo
mov
push
jo
inc
push
lock
mov
es
outsl
mov
mov
jno
jp
jo
xor
or
mov
dec
pop
daa
mov
or
sub
clc
pusha
sbb
inc
inc
idivb
jo
mov
pop
call
and
xor
mov
add
or
jb
jo
fcmovne
insb
and
push
jne
mov
sbb
bound
adc
and
inc
cmc
scas
add
jo
lods
sub
jo
sub
cmp
jne
outsl
jo
cmp
jo
inc
loop
aaa
push
aam
jo
pop
lds
jo
js
cmp
rolb
lods
push
xor
cmp
xor
shll
lret
sbb
mov
mov
fcoms
int
jo
push
lock
scas
add
dec
loope
insl
arpl
add
sub
scas
sbb
addl
js
in
jae
mov
fwait
dec
mov
inc
xor
ret
rorl
lock
popf
mov
jge
lea
mov
inc
jmp
xor
jo
pop
sub
jecxz
jnp
xlat
in
and
xor
pushf
repz
les
push
mov
sbb
cld
jo
and
ljmp
lock
pop
movl
mov
ljmp
jo
lret
out
sti
cltd
jo
adc
jmp
test
push
mov
in
jo
fnstsw
inc
out
jmp
ljmp
pushf
mov
xchg
stos
jo
xchg
pop
in
imul
insl
aas
repz
int3
dec
sbb
in
push
xchg
lock
sbb
insb
jo
inc
arpl
push
and
jo
or
jae
mov
xor
pop
lock
inc
add
and
or
jp
jo
outsl
popa
flds
xchg
popf
jo
std
xchg
dec
aaa
lret
outsb
push
ja
adcl
push
or
sub
cmp
push
push
jo
adc
pop
popa
mov
fldl
push
push
aaa
loope
cmp
stos
notb
lock
mov
inc
jo
cli
mov
sub
adc
adc
pop
in
or
sbb
cmp
lea
int
dec
mov
jle
je
aaa
out
lods
push
lock
fsubs
imul
add
jo
sbb
mov
push
add
cmp
in
inc
jo
clc
repz
scas
lds
or
adc
jo
and
or
jmp
jae
repz
cmp
es
inc
jo
jnp
in
das
movd
ljmp
out
inc
mov
xchg
outsb
sbb
rcrl
fcoms
mov
pop
jo
mov
push
push
inc
jo
mov
adc
or
enter
lret
fsubp
sbb
jge
adcb
jb
cmp
xor
repz
insl
xorb
pop
shlb
jo
enterw
mov
inc
pop
jns
insl
test
mov
xchg
test
int3
and
mov
out
daa
test
es
in
fcoml
push
cmp
sti
sahf
aad
jnp
stc
lock
jmp
push
push
push
cmc
mov
js
test
cmp
in
loop
out
xchg
in
stos
jb
and
push
xor
cmpl
insl
bound
sbb
pop
xchg
inc
or
lods
add
mov
test
mov
cmpsl
mov
xor
ljmp
inc
outsl
shlb
fisubs
or
sti
sbb
pop
movsb
pop
imul
shlb
push
jno
mov
sub
push
sub
test
cmc
xchg
imul
movsl
dec
jl
xlat
sbb
nop
fisubl
dec
enter
notb
pop
shld
xchg
test
mov
insb
fdivl
loopne
or
out
mov
jne
jmp
add
cmp
dec
inc
in
cmpsl
ss
push
fnstenv
dec
je
push
movsb
in
loope
addr16
test
push
add
mov
sbb
int3
push
mov
unpcklps
outsl
or
push
jno,pn
and
inc
out
test
mov
loope
fwait
mov
jnp
xor
movsl
dec
push
outsl
aam
clc
pop
cwtl
sub
lret
insl
lods
push
jb
fwait
or
lret
mov
mov
pop
cmp
xchg
mov
clc
lcall
jnp
repnz
sub
lock
mov
out
cmp
mov
or
jnp
popa
push
sub
push
fwait
cld
lret
sbb
in
lcall
xchg
dec
lock
loopne
fsub
dec
loope
and
imul
pop
ss
mov
dec
insl
sbb
mov
ret
sbb
mov
pop
push
xchg
inc
add
and
lds
mov
lret
fwait
mov
push
popl
ss
and
movsb
rcll
push
add
cs
cmpb
js
mov
and
enterw
xor
pop
add
sub
xor
pop
adc
jo
mov
jns
gs
rolb
cmp
mov
insb
test
cwtl
lret
mov
test
jne
and
cmp
jo
pop
mov
xchg
inc
out
lods
dec
jg
bnd
sahf
arpl
jne
push
adc
jp
scas
inc
xor
sti
mov
cmc
stos
jg
aam
xchg
dec
pusha
or
inc
sbb
mov
fdivrl
bound
stos
xor
mov
sub
testl
aam
popf
js
clc
push
xchg
sub
test
pusha
outsl
loop
lock
sbbb
inc
mov
sbb
sti
cmp
inc
xor
and
push
outsl
mov
test
cmc
and
arpl
push
sbb
pop
fs
jnp
scas
sub
ficoms
or
in
jg
xchg
sbb
mov
pop
je
jne
push
cli
fistl
sti
clc
fidivs
add
notb
mov
adc
cmp
adc
sub
daa
adc
jb
pop
divb
or
mov
xor
xchg
cmp
leave
cmp
scas
cmp
loopne
sbb
dec
mov
adcb
or
ret
push
lock
into
leave
mov
push
in
jge
iret
xchg
inc
jl
nop
jno
loopne
sub
test
push
xchg
xchg
sub
cmp
or
aas
mov
sahf
jno
in
lret
rcrb
adc
sbb
clc
scas
xor
ret
dec
and
jne
cmp
cmp
or
in
sub
ficomps
jle
pop
and
das
mov
jb
cwtl
jg
aam
xchg
divb
and
inc
and
inc
sub
or
xor
lcall
clc
xchg
lock
sbb
mov
xor
and
test
out
cmp
cmp
mov
es
fisubl
jo
and
mov
mov
and
lret
xchg
xchg
sbb
sbb
imul
xlat
inc
mov
cmp
insl
push
adc
mov
lods
pop
dec
jg
enter
aad
movsl
add
divl
fdivrl
mov
rcr
xchg
loop
xchg
jo
jb
add
fisttps
scas
lock
outsl
sub
jo
mov
sti
xchg
rclb
loopne
xchg
dec
jp
dec
mov
mov
push
incb
ja
mov
test
push
dec
adc
addr16
cmp
jo
add
cli
pop
jo
sti
ret
mov
jo
xchg
movsl
lret
xor
imul
pop
xlat
ja
lods
pmulhw
xor
mov
add
inc
xor
adc
mov
jo
lods
dec
setae
popa
push
push
jo
xchg
mov
jo
mov
mov
jo
loope
mov
insl
push
mov
jg
fcoms
or
mulb
cmp
inc
clc
fwait
jo
sub
xchg
xchg
xor
scas
lock
gs
mov
add
rorl
insl
push
xor
mov
jle
int
inc
sbb
mov
jae
loop
pop
loopne
mov
bound
enter
aam
dec
jo
mov
adc
or
jo
call
push
push
hlt
mov
mov
bound
cmp
jg
ja
mov
cmp
fistpll
mov
je
sbb
xchg
in
mov
aam
sti
jae
repz
lret
std
adc
jp
jo
cli
in
mov
aad
insb
psrlq
sub
jg
sti
ja
mov
adc
inc
jne
jbe
sahf
rol
sbb
push
xchg
xor
mov
in
or
add
mov
cmp
push
mov
dec
in
lock
jo
mov
sub
jnp
fildll
lock
les
pop
jo
sbb
test
das
xchg
ja
push
lock
mov
jb
loopne
pop
mov
dec
call
loop
xor
push
pop
push
outsl
arpl
pop
push
mov
add
mov
jae
mov
mov
aad
aas
fisubrs
loope
jo
mov
rcl
cwtl
dec
shrd
popf
aaa
add
push
add
int3
push
mov
add
or
sub
cmpsl
xchg
pop
lcall
das
pusha
jge
aad
lock
aam
insl
pop
pop
mov
int
cwtl
jecxz
sti
fcmovnu
mov
cmp
pushf
mov
mov
push
ret
sbb
pop
push
sarl
dec
jo
imul
cs
push
stos
sbb
xor
xor
movsl
jno
xor
lock
ret
add
in
mov
ret
into
test
lret
int
cltd
add
pop
aaa
mov
pop
pop
dec
ja
jo
loopne
adc
push
scas
mov
jmp
das
sahf
jo
cli
fs
jo
sbb
cmp
fsub
pop
jo
dec
push
inc
js
jge
pop
nop
scas
push
mov
fisubs
loope
or
pop
jo
call
ss
pop
loopne
pop
popf
les
cmp
pop
cmp
fisttpll
out
jo
and
stc
fwait
add
push
and
cld
jo
scas
push
in
inc
jne
xchg
addr16
cwtl
xor
sub
mulb
adc
jo
mov
stc
into
insl
jp
fcoms
mov
jo
jg
mov
ja
in
xor
fcmovnbe
xor
adc
out
sbbl
stos
and
jg
pop
push
cmp
pop
das
jne
aam
outsb
jo
xchg
movsb
mov
inc
cmp
in
xchg
popa
cmpsb
jne
or
add
and
mov
mov
dec
pusha
fs
adc
loop
testl
sub
xchg
mov
jmp
xchg
leave
xor
jmp
push
mov
fbld
inc
push
data16
mov
lds
sub
xchg
mov
push
lcall
jo
jae
dec
xchg
mov
jno
popf
xor
fsubs
xlat
out
push
lock
aad
jp
jp
push
push
aas
push
mov
dec
jo
cmpb
insl
adc
dec
loop
ficoml
jo
data16
leave
pop
aad
or
inc
sbbl
shll
jmp
dec
jo
xor
imul
rorb
mov
scas
or
iret
mov
add
adc
sbb
gs
jo
imul
adcl
scas
push
jmp
pop
add
add
xchg
jo
sbb
inc
cmpsb
into
adc
repz
es
or
nop
cld
push
xchg
ret
jo
xchg
push
into
mov
daa
out
jo
cmpsb
mov
std
aad
or
sbb
hlt
cwtl
jb
jg
inc
fstpl
das
int3
jecxz
cmc
addl
mov
jo
lock
orl
jo
movsb
inc
in
and
test
xor
stc
xchg
aaa
out
popf
lock
fstl
in
nop
stos
leavew
mov
jo
outsb
xor
sbb
add
ds
popf
outsw
jo
adcl
or
ja
cmpsb
repnz
inc
xchg
cmc
mov
fwait
out
xor
jmp
into
es
int3
pop
jo
cmp
addb
aas
ret
dec
jae
mov
inc
nop
mov
aam
sub
into
mov
inc
pop
movsl
jmp
or
cmp
fdivrs
xchg
nop
pop
push
xor
adc
scas
mov
push
inc
call
or
jo
out
adc
dec
pop
push
pop
push
repnz
and
imulb
mov
sti
push
add
ss
cmpl
jbe
mov
insb
push
mov
adc
mov
stos
stc
inc
lods
mov
fsubl
icebp
jl
and
nop
and
add
lods
fsubs
enter
daa
jo
insb
push
popa
dec
fdivrs
jo
sbb
leave
and
lock
ret
gs
ljmp
addr16
inc
mov
jo
jmp
sub
nop
mov
jns
std
dec
je
and
adc
stos
push
fiaddl
jnp
inc
jp
pop
adc
mov
add
push
bound
xor
daa
cmpsb
int
mov
ss
push
in
shrl
scas
or
sub
out
loop
in
repz
xor
sbb
pop
mov
adc
sbb
scas
add
daa
push
cmp
add
adc
cli
loopne
push
cmp
dec
das
les
pop
sbb
lods
test
ja
cmp
mov
xchg
xor
mov
jle
jo
xor
fidivrl
fs
pop
lods
scas
insl
jg
xor
pop
sbb
or
lock
nop
xchg
std
ja
xchg
mov
xor
mov
loop
add
sbb
jo
mov
xor
mov
lret
pusha
jo
imul
mov
movsb
test
mov
pop
jo
aas
in
sbb
js
jo
push
outsl
push
jo
pop
mov
xchg
cmpsl
insb
shlb
jb
mov
add
mov
pop
mov
rcl
push
mov
outsl
in
jns
insl
les
adc
ds
mov
jo
cmp
jecxz
imul
push
rorb
or
sti
pop
cmpsb
dec
popf
add
inc
add
add
sbb
pop
aam
popf
xchg
outsb
dec
adc
out
bound
sub
pop
cld
mov
sub
fstpl
add
mov
jb
mov
outsb
ficoml
xor
test
xchg
adc
fcmovb
push
jo
movsl
pushf
xor
das
sbb
in
cmpl
xor
mov
rolb
andb
and
jbe
jo
mov
jmp
jo
fcompl
sub
and
mov
inc
lds
imul
or
test
pop
xchg
push
jo
sub
add
adc
push
inc
mov
mov
dec
xchg
shlb
in
pop
repz
jo
inc
sbb
jo
mov
sbb
jo
push
jge
jo
mov
xchg
repz
mov
dec
insb
mov
iret
adc
sbb
std
js
imul
jb
ja
das
or
clc
mov
sub
jo
sbbb
xchg
jns
xchg
jo
sbb
loope
into
fs
or
outsl
leave
je
sub
es
ja
ljmp
mov
inc
outsb
xchg
sbb
and
mov
lods
stos
dec
dec
mov
inc
es
mov
cmc
mov
adc
push
nop
xchg
cmp
lahf
push
and
add
push
pop
cltd
scas
sub
cmc
pop
jo
ljmp
jo
jbe
pop
lahf
mov
into
mov
jb
xchg
mov
mov
add
xchg
stc
xchg
mov
jo
sub
jbe
mov
mov
jo
inc
fldenv
or
das
sbb
cmp
repz
jle
jo
cld
lds
sub
jae
daa
mov
add
sub
pop
cmp
lcall
jo
lahf
movsb
pop
sti
xchg
sahf
dec
clc
ret
or
sub
shll
into
jge
fcomi
add
or
jo
jle
lahf
push
pop
shlb
cmp
cmpsl
add
lahf
ja
cli
imul
inc
xor
ret
iret
cmp
call
es
insb
fs
add
jp
pop
mov
cmpsb
insl
xchg
mov
mov
ficoml
inc
jo
cs
pop
loope
scas
xchg
dec
lods
int3
insl
xlat
std
jle
jo
dec
jge
sarl
jae
jae
cmp
jmp
into
inc
xor
bound
inc
movsl
out
test
cmp
orb
ss
enter
jo
pop
adc
movsb
jo
sbb
dec
pop
or
lods
pusha
subl
orb
leave
mov
sti
out
cmpsl
addr16
mov
jnp
mov
sahf
insb
pop
push
imul
jns
xchg
or
xchg
jno
jo
lock
mov
in
sbbb
dec
push
int
pop
adc
mov
push
test
or
jae
pop
mov
mov
popf
pop
xchg
je
test
loopne
js
test
jno
test
push
ret
leave
pop
jo
orb
mov
mov
outsl
mov
mov
lcall
jp
mov
jg
pop
fisttps
rorl
outsl
std
test
out
push
shlb
jbe
mov
inc
jns
testl
add
or
xor
jge
mov
cmp
into
dec
add
out
dec
sub
jae
lods
insl
and
jg
inc
dec
lcall
test
mov
test
xor
andb
push
lods
mov
orl
les
jo
ret
jne
sahf
jo
dec
fisubrs
ret
repnz
mov
ss
sub
and
ljmp
pushf
lcall
cmc
mov
clc
loope
aam
popf
jo
out
das
and
dec
xor
ljmp
push
scas
test
mov
adc
repz
add
jo
lods
xor
or
iret
test
leave
mov
fwait
sbb
jb
int
repz
adc
fsubrs
push
shrl
jo
dec
mov
pusha
mov
jo
sti
negl
ja
cmp
bound
fisubrl
shrl
or
in
pusha
jo
jecxz
movsl
and
dec
push
jne
lock
out
push
jg
jo
mov
test
leave
mov
jo
xchg
xchg
sub
inc
jo
scas
mov
push
cwtl
mov
and
clc
lods
jo
push
bound
shl
push
xchg
imull
jmp
cmp
or
je
mov
sahf
mov
outsb
stos
adc
xchg
loopne
lock
vmaxsd
nop
jo
mov
das
divl
inc
mov
xchg
shlb
add
insl
xchg
add
sahf
or
sahf
cwtl
jp
mov
mov
scas
mov
xchg
loop
ja
and
jmp
sbb
or
arpl
push
sarl
cmp
repz
jp
aad
fwait
adc
mov
ret
sbb
or
cli
push
dec
dec
mov
push
mov
sub
aas
mov
cld
jl
inc
pop
jae
pop
cmp
or
outsl
jae
shll
out
jo
pop
jb
inc
mov
jmp
adc
pop
jo
lahf
mov
and
insl
outsl
dec
mov
lods
or
jo
push
push
repz
add
jo
cwtl
xchg
sbb
cmpb
push
stc
push
dec
out
xchg
jnp
lcall
jbe
push
dec
jo
adc
jmp
jo
orl
jo
and
mov
ret
jae
and
orb
mov
xchg
and
f2xm1
das
aaa
inc
pushf
pop
cwtl
inc
pop
xor
lock
sub
pop
pusha
jo
push
jle
ljmp
mov
testb
jo
mov
movsb
xchg
arpl
xchg
or
lods
jo
in
clc
pop
fidivrs
inc
cmp
xchg
sub
subb
pop
inc
push
mov
xchg
jo
int3
out
loope
sbb
add
xchg
mov
push
push
or
jo
pop
aad
cmp
aaa
jns
js
les
xchg
pop
ja
jmp
or
mov
dec
jb
add
jo
out
test
jo
repnz
ljmp
jo
xlat
mov
jo
adc
and
xchg
int3
push
pop
lock
mov
xor
mov
mov
xor
jo
jno
dec
nop
popf
shlb
lret
lock
cwtl
jp
pop
jo
and
xor
mov
mov
pop
xchg
cmp
mov
outsl
jo
mov
push
outsb
or
add
jae
fxch
push
insl
push
dec
shrb
stmxcsr
notb
jo
ret
cld
mov
rorb
pop
cmpsl
or
adc
outsl
cmp
jo
or
inc
dec
adc
sarb
imul
push
jmp
out
fisubrs
lea
pop
jo
add
fists
push
shll
xlat
fsub
sahf
lods
push
ja
sbbb
jo
fistpl
pusha
jo
jge
jbe
mov
in
ja
fsubr
xchg
ds
mov
xor
shrb
sarb
xchg
lret
sbbb
jno
sbb
fbld
inc
enter
adc
enter
rorb
sub
dec
into
gs
cmp
and
and
out
dec
mov
es
inc
lcall
hlt
mov
or
push
jnp
test
fwait
scas
push
out
inc
mov
cmp
mov
negb
inc
call
jg
cmp
pop
not
pop
sub
mov
and
aaa
inc
cmpsb
lods
mov
xchg
scas
fwait
test
mov
mov
xchg
adc
inc
mov
outsl
mov
jle
adc
mov
mov
and
in
jnp
jmp
jl
lea
push
ret
or
adc
aaa
inc
and
fidivrl
cmp
xchg
je
jge
mov
je
mov
pusha
mov
xchg
andb
jl
mov
jbe
movsb
dec
sub
stos
in
imul
rcll
dec
iret
loopne
cwtl
sbb
pop
fsts
sub
or
xor
and
and
inc
push
cmp
fs
pop
sub
fidivrs
outsl
pop
sbb
imul
cmp
and
lods
sbb
xchg
in
jno
es
mov
scas
xor
adc
and
stc
xchg
xor
out
mov
rorb
and
pusha
xchg
or
neg
lahf
pop
and
cld
es
push
adc
and
rcr
mov
add
push
push
stos
pusha
cmc
fdivrl
shll
gs
imull
adc
sub
cltd
mov
iret
out
xorl
push
xchg
shl
and
orb
or
xchg
shr
sub
js
jo
mov
sbbb
xchg
loope
dec
xchg
les
add
shll
lods
popa
mov
lahf
jne
or
and
test
sub
fldcw
pop
lock
cmp
mov
jo
fiadds
fbstp
pop
and
or
jo
out
shll
jo
icebp
ficoms
sub
xor
in
cli
jo
lahf
or
test
mov
dec
mov
dec
in
lock
inc
add
inc
pop
pop
jo
pop
imul
int3
cmp
jp
loope
jge
push
dec
jle
stos
cld
shlb
aaa
xor
loope
lret
jne
sbb
scas
test
cld
mov
mov
and
mov
xchg
dec
jo
pop
insb
repnz
pop
ficomps
and
push
mov
out
loop
mov
jo
mov
rolb
pushf
leave
loope
mov
dec
or
out
xchg
into
out
pop
pop
rcr
push
pop
mov
inc
push
sub
je
ja
cwtl
lret
pop
mov
test
gs
lock
mov
ret
int
jo
pop
jecxz
jo
lcall
jo
jb
hlt
dec
jle
repz
mov
cmpl
xchg
loopne
and
aaa
xchg
jo
cmp
push
push
sbbl
mov
insb
xor
gs
addl
mov
sub
out
inc
ljmp
flds
scas
adc
xchg
jo
dec
sub
cltd
data16
sbb
adc
adc
cwtl
and
imul
jno
pop
mov
jb
mov
movsl
jo
inc
ja
jo
sub
push
insl
iret
xor
stos
pop
pushl
jmp
inc
aad
or
inc
dec
push
lock
xor
daa
push
jo
aas
mov
cmpsl
jo
insl
out
dec
mov
mov
cld
dec
jo
ficoml
jne
repz
rcrb
sbb
pop
lock
divl
lock
jne
cmp
sti
jo
test
inc
inc
into
lock
push
mov
xlat
xchg
lods
jo
cmp
cmp
sbb
mov
cmpb
jo
xor
inc
xor
dec
jo
imul
mov
mov
jle
dec
push
jp
cmp
rcl
cwtl
cld
jl
ja
fwait
loope
insl
shl
and
adc
stos
add
push
fistpll
dec
fldcw
and
ret
push
scas
adc
fimuls
jne
lret
mov
imul
ljmp
outsl
aaa
insl
mov
cli
cmp
jnp
push
add
addr16
mov
outsl
add
sub
ja
aaa
xchg
fistl
cmp
ja
popf
cmp
jo
mov
xor
es
cltd
aas
xchg
insl
stos
push
sub
sub
sahf
and
je
psubusw
adc
push
xor
lock
push
jp
lods
inc
cld
mov
sbb
mov
das
ss
dec
pop
push
test
dec
sarb
fld
in
movsb
out
jo
dec
mov
mov
rcrb
ffree
mov
add
mov
leave
sahf
dec
std
filds
inc
sub
or
imul
xchg
outsl
enter
jo
sbb
cmp
and
jo
push
ffree
rcrl
test
inc
jle
mov
adcl
xor
fs
dec
stos
jo
punpcklbw
mov
jo
ljmp
divb
out
adc
jo
rorb
or
inc
jo
push
scas
mov
sub
jo
mov
jo
jno
fbld
sbb
jo
cs
imul
stos
or
outsb
cs
leavew
add
ja
popa
inc
aas
in
jmp
inc
sbbl
jae
lahf
or
and
or
insl
jo
mov
jmp
push
pop
dec
push
int
jae
fsubrl
mov
test
jo
fnclex
mov
pop
in
push
pushf
cmc
cmpsl
out
mov
inc
or
jo
xor
dec
fwait
out
inc
loop
jns
xchg
sarb
das
inc
and
outsb
shll
xchg
aas
mov
jno
mov
mov
bound
lahf
mov
mov
or
xchg
jo
inc
mov
test
dec
mov
jo
loopne
push
inc
sbb
and
mov
les
fcom
inc
insl
or
mov
mov
add
mov
fdiv
shlb
test
add
pop
inc
xchg
jnp
les
pop
jo
das
and
xchg
data16
mov
dec
clc
sub
call
shlb
pusha
sbb
aad
adc
lock
cltd
out
inc
fwait
dec
lea
je
sbb
adcl
pop
push
pop
fwait
dec
outsb
nop
xor
xchg
mov
imul
dec
faddp
and
dec
movsl
jmp
push
jae
mov
jo
out
negb
sub
jo
iret
add
cltd
rcll
mov
pop
jns
mov
or
int
push
lock
shlb
mov
insb
push
and
jo
clc
xor
test
movsl
push
out
jne
hlt
shl
xor
jo
xchg
mov
rorl
and
lcall
call
repnz
aaa
pop
out
xor
in
mov
clc
push
cmc
movsl
add
sbb
std
xor
add
mov
sub
mov
aad
or
notb
mov
xorb
jo
test
leave
jns
outsl
mov
or
xlat
enter
ja
pop
inc
pop
xchg
pusha
std
jl
sbb
js
ja
sbb
lahf
mov
call
fldt
sub
out
cltd
aad
jae
loop
push
mov
loopne
xchg
push
insl
jg
xchg
jge
jne
xchg
into
je
push
push
icebp
rcl
popa
enter
xchg
aam
negb
jo
sbb
lods
dec
xor
insb
lds
imul
push
adc
and
sub
add
inc
and
ds
call
sbb
aam
push
imul
rep
jo
push
mov
out
jae
filds
enter
xor
adc
and
jo
hlt
inc
lahf
mov
mov
push
jo
int
xchg
out
push
jbe
pop
dec
pop
mov
push
int3
cmp
cmc
bound
jo
sub
push
jne
into
jo
das
inc
lret
push
adc
pop
jo
fldl
rcrb
dec
pushl
inc
ret
dec
in
ds
pushf
insl
sbbb
sbb
push
aam
aad
repnz
pop
jo
adc
ret
push
push
xlat
imul
mov
adc
add
jne
jb
push
insl
je
adc
xchg
pop
fildl
mov
sahf
ret
cmp
pop
xor
jecxz
dec
aas
shll
xchg
test
mov
pop
xor
mov
enter
and
icebp
inc
pop
jo
and
shrb
cmp
pop
dec
xor
jl
pop
divps
jo
cmp
mov
xchg
adc
pop
fldl
loope
jne
ljmp
pop
roll
push
xorb
ret
jp
test
jo
push
cs
jo
lret
insw
dec
in
loop
jo
jnp
xor
jns
inc
cmp
arpl
push
dec
sahf
xchg
or
xor
pusha
fcmovnbe
aaa
es
xrelease
mov
or
pop
jo
mov
jbe
ja
inc
xchg
mov
loopne
or
jo
lcall
insl
mov
out
je
jns
dec
xchg
cmp
pop
dec
stos
in
out
inc
repz
sub
xor
jo
jl
jmp
add
outsb
push
jle
xor
in
push
jo
xchg
dec
rcl
ljmp
mov
xchg
mov
add
lds
jo
mov
xor
jo
cmp
xchg
and
sub
in
dec
in
push
dec
sub
icebp
xor
dec
outsb
scas
js
jmp
mov
add
out
jno
mov
pop
lahf
and
dec
int
pusha
je
xchg
fistpll
es
aad
sti
pop
mov
push
jp
and
xor
flds
push
sbb
out
mov
jne
jae
scas
adc
testb
leave
xor
add
cmp
outsb
push
leave
xchg
aas
sub
push
fildll
pop
out
mov
das
jns
cwtl
nop
jge
mov
cs
sub
clc
pop
movsb
jg
jo
dec
les
sub
in
jle
xchg
fwait
insb
dec
out
test
outsl
je
xor
test
mov
jge
jo
mov
xchg
inc
cwtl
xchg
outsb
mov
test
out
inc
lret
fidivl
inc
js
lds
xor
inc
sub
sbb
in
inc
in
sti
or
sbb
adc
ret
call
pop
loop
nop
pop
fisubrl
mov
sub
pop
push
fistpl
loope
int
call
stc
jbe
ds
aas
sub
aad
adcl
or
es
mov
loopne
and
in
js
lret
das
sub
mov
xor
jge
mov
adc
ja
popf
push
push
cwtl
repnz
adc
or
imul
ret
into
and
push
mov
jbe
push
mov
lods
xchg
sbb
fidivs
jnp
mov
push
mov
jl
pop
lret
mov
inc
loopne
in
xchg
out
aam
xchg
pop
data16
int3
subb
sub
paddsb
dec
imul
call
push
and
je
stc
fimuls
and
test
xor
xchg
jo
test
sub
aam
idivb
outsb
cld
pop
adc
xor
outsl
mov
adc
bound
jns
xchg
lods
sti
add
stos
js
movsl
sbb
fsubrs
call
sub
lret
jo
in
sbb
fsub
gs
xchg
mov
dec
lock
sbb
ds
dec
das
roll
fucomi
dec
leave
jnp
mov
dec
movsl
xabort
popa
lods
leave
and
fcomps
stos
into
iret
testb
ljmp
out
scas
mov
rcll
fcoml
push
jbe
aas
dec
mov
lahf
adc
jl
pop
negl
or
jmp
push
xchg
push
mov
sbb
hlt
mov
adc
std
and
mov
fidivs
xchg
dec
es
xor
and
cld
xchg
call
dec
mov
js
cmc
jge
call
pop
movsb
xchg
inc
pop
data16
xchg
mov
cmp
lods
inc
sti
jl
jge
push
and
mov
push
xor
inc
sbb
sbb
cmp
subb
mov
pop
mov
iret
shll
xor
cmc
fwait
adc
popa
xorl
test
xchg
pop
adc
leave
and
shl
mov
jecxz
and
aaa
sahf
shrl
mov
xchg
xchg
icebp
jmp
mov
pop
cmp
xchg
adc
push
push
popa
je
or
push
lods
push
push
fs
jo
mov
in
dec
xchg
out
sub
fists
scas
in
sbb
jmp
mov
cwtl
mov
sbb
lret
or
fidivrs
push
inc
push
bound
shll
outsb
mov
fsub
mov
inc
xchg
je
adcl
cmp
jae
fsts
pop
loope
test
dec
fisttpl
push
mov
mov
push
mov
fstl
sbb
jbe
fstpl
shlb
in
outsl
mov
xchg
push
addr16
xchg
jae
mov
push
sti
fmulp
pop
ss
cwtl
or
scas
adcl
mov
xchg
xchg
stos
sbb
dec
out
outsb
imul
mov
add
subl
push
ss
aam
rorl
xor
cmpsl
lret
pop
cs
push
sub
inc
fistl
xor
mov
andb
sub
xor
pop
in
stc
lahf
dec
jbe
push
daa
dec
mov
lock
bound
push
fbld
sub
adc
mov
push
xchg
mov
cwtl
es
test
jae
push
sub
dec
sbb
cmp
adc
das
mov
pop
xchg
rcrl
cbtw
shlb
xchg
out
pop
ret
movsb
pop
inc
data16
fstl
movsl
cmpsb
insl
mov
pusha
xor
daa
stos
sub
pop
sbb
xchg
or
xchg
cmpsl
xchg
sub
enter
sub
add
sub
bound
pop
xchg
mov
and
gs
cmp
out
daa
outsb
cmp
in
mov
into
out
mov
xor
andb
push
lcall
jno
lock
push
mov
push
bound
lcall
adc
fcomps
lock
js
dec
roll
jne
call
xor
loope
shl
loopne
xchg
inc
and
mov
je
push
fisubrs
jl
and
sbb
outsl
cwtl
adc
imul
clc
inc
out
imul
sub
in
outsl
xchg
dec
ss
daa
mov
xchg
das
xchg
adc
cmp
dec
or
leave
pop
or
fs
scas
adc
jae
jbe
mov
pop
mov
out
mov
sub
cwtl
dec
ja
sbb
icebp
xchg
loopne
es
dec
js
in
xorb
fst
jmp
clc
dec
out
sub
cmpsb
adc
pop
ljmp
insl
jae
fs
insb
fnstcw
lcall
mov
mov
cli
mov
xlat
bound
popa
nop
xor
jo
add
push
adc
int3
cmp
fistpll
dec
test
in
std
jo
pushf
xchg
xor
insb
add
push
popa
jo
jmp
cwtl
sbb
ret
pop
cltd
imul
push
adc
mov
test
mov
adc
lods
sub
fstpl
cmp
add
push
sub
fwait
loop
jo
mov
divl
rcll
jo
xor
lret
imul
cltd
shlb
jo
stos
sbb
sbb
stos
jae
in
pop
push
cltd
sarl
test
loop
pop
xor
sti
addr16
jo
dec
jle
push
test
mov
out
mov
stos
pusha
mov
jo
cs
js
inc
repz
or
das
insb
and
pop
pop
cwtl
or
inc
push
push
jo
ss
mov
cld
lock
xor
add
jno
mov
lea
mov
mov
jmp
jo
cmpsb
mov
push
lret
dec
mov
mov
jecxz
arpl
sub
jo
in
lahf
push
dec
mov
mov
add
out
mov
rclb
lods
outsb
cmpsb
sbbb
int3
mov
adc
xchg
hlt
push
sub
fdivs
jo
call
adc
dec
cmp
jnp
ss
pop
inc
imul
test
out
mov
jae
xor
shlb
add
cld
sbb
mov
insb
sbb
pop
nop
insl
jbe
xor
dec
jo
outsl
jge
repz
lock
jae
into
stos
and
shlb
cwtl
jo
mov
fdivp
shlb
and
mov
mov
lock
and
loopne
xor
and
outsb
and
add
jo
cmp
inc
stc
and
sub
int3
jo
in
roll
adc
movsb
sub
mov
cmp
ja
cmpsl
dec
and
xchg
jo
and
jne
jo
fwait
das
jl
lea
inc
rolb
filds
cmc
push
adc
lods
adc
cmpb
xchg
lods
mov
or
sbb
jb
jo
cmp
out
cwtl
std
lods
jo
xor
mov
jo
xchg
ret
push
outsb
repnz
enter
push
push
mov
sbb
and
jl
jne
rorl
orb
mov
add
jo
mov
pop
and
jmp
xchg
aad
cmp
dec
mov
jg
mov
insb
arpl
jo
aaa
stos
rcrl
adc
sub
lods
imul
pop
jbe
jo
cld
call
jg
or
push
insb
pop
out
insb
mov
jo
add
dec
inc
sbb
pop
imul
xor
mov
test
cwtl
pop
sti
xchg
jo
mov
push
out
mov
enter
push
and
jo
aam
sahf
loopne
sub
lcall
jne
jmp
enter
mov
and
inc
jo
push
psubsb
or
lret
dec
jo
test
pop
cmp
and
add
and
mov
or
add
push
mov
pop
push
push
fsubr
js
movsb
insl
fisttpll
sbb
cmp
jo
hlt
xor
dec
inc
push
aas
fisttps
xchg
push
ljmp
pop
push
jo
lahf
pop
push
mov
jb
jo
stos
test
std
das
mov
xor
fs
dec
call
lock
add
xor
jge
push
xchg
mov
jo
mov
dec
jo
aad
push
sti
es
add
cmp
imul
xchg
arpl
jnp
jmp
jp
sahf
jo
dec
pop
repnz
enter
or
sbb
jp
out
sbb
inc
add
push
inc
lahf
aaa
ljmp
and
sub
cwtl
jb
idivb
pop
jne
jo
cmp
scas
jo
mov
adc
out
out
jo
and
push
jo
outsb
andb
mov
sub
in
hlt
xor
addl
adc
das
movsb
lods
pop
ja
dec
aam
inc
shlb
enter
shl
fisttps
jnp
mov
mov
divl
cmp
sub
mov
add
xor
dec
in
jnp
pop
pop
loop
xor
jo
outsl
sar
xchg
sub
dec
xchg
mov
cmp
push
cmpsl
jo
call
ljmp
lock
cmp
push
loop
sub
cmp
mov
xlat
add
lods
jo
sbbb
push
cld
sti
popl
mov
movsb
and
xor
cmp
pop
clc
pop
jo
xchg
pop
sbbb
jo
sbb
sarb
shlb
cmpsl
cmp
jnp
pop
in
push
mov
add
cwtl
icebp
jns
jo
add
push
insb
inc
dec
mov
sub
mov
ss
xchg
sub
sbb
xchg
adc
lods
cli
xor
dec
in
sbb
pop
push
rorl
xchg
jo
jge
sub
ja
dec
leave
jae
jo
es
dec
icebp
jl
fwait
xchg
mov
add
jo
mov
mov
dec
pop
add
mov
out
jle
jo
sub
pop
push
out
jae
popa
jns
sbb
and
push
jmp
test
or
cmp
and
lods
mov
stos
mov
testl
jae
push
fistpl
mov
push
pop
cmp
xor
inc
mov
hlt
xchg
inc
lds
test
ret
dec
mov
test
out
stos
jo
xchg
sti
js
roll
mov
sub
cmp
add
add
inc
enter
js
adc
negb
jg
lahf
lock
cmp
ja
pop
mov
sarl
rcll
pop
jo
andl
xchg
fidivl
adc
lods
in
out
jae
int3
das
pop
test
nop
xor
jbe
cmpsb
push
jp
dec
fcom
xor
pop
cmpsl
mov
jo
outsl
shufps
and
sti
pop
push
sub
lock
ret
icebp
sbb
movsb
imul
xor
xor
cwtl
fiaddl
cmpsb
addb
inc
add
jo
xchg
push
inc
subb
ja
jge
xchg
ret
push
sub
push
lret
push
test
sub
mov
into
mov
cli
insl
scas
std
sbb
roll
pop
lock
mov
mov
sbb
pop
aam
popf
fsts
nop
test
inc
insb
sbbl
mov
imull
ljmp
jbe
push
xor
popf
mov
sbb
pop
jae
cli
stos
in
cmp
push
mov
pushf
mov
scas
xchg
jne
out
xor
lock
add
cmp
xor
js
cmpsl
and
jae
adc
mov
push
add
pop
cmp
rcrl
xor
lret
jle
push
or
aaa
leave
pop
mov
int3
iret
add
mov
push
dec
fidivrl
mov
shrb
push
inc
inc
ret
jo
inc
pop
inc
xlat
mov
xchg
push
xor
or
xor
lea
insb
mov
fwait
xchg
sahf
fmuls
pop
and
hlt
mov
jo
xchg
imul
dec
adc
lock
add
push
gs
orb
in
jecxz
ss
ja
arpl
mov
push
loopne
test
push
repz
ljmp
test
push
daa
lock
push
ret
jo
das
shlw
push
loope
xchg
push
push
push
mov
shll
std
test
pop
xor
mov
jo
lcall
jnp
mov
inc
negl
sub
scas
or
dec
idivl
push
jae
or
push
fadds
out
mov
cmp
cs
pop
xor
lahf
arpl
mov
inc
jb
dec
fs
xorb
sahf
dec
push
mov
pop
pop
jnp
mov
sbb
out
test
fstpl
ljmp
pop
cltd
jo
arpl
push
or
cwtl
push
jo
in
cltd
fnstcw
or
outsl
fdivrl
outsb
push
lahf
sti
ret
test
push
xlat
pop
iret
add
cwtl
in
jno
loopne
out
out
fwait
sub
sub
push
clc
sbb
and
lea
cwtl
push
add
in
insl
pop
cli
and
adc
sbb
pop
xchg
cmp
and
sub
mov
pushf
xchg
pop
add
std
mov
cmp
sbb
pop
data16
and
sbb
rolb
outsl
adc
testl
jno
lret
out
xor
in
outsl
cli
jle
inc
lods
jle
jo
arpl
fwait
or
cwtl
loope
jo
jle
xchg
lahf
mov
popa
dec
ja
dec
das
jmp
shr
sbb
loopne
fisubl
notb
jo
xchg
jg
xchg
out
cmp
nop
adcb
sbb
leave
add
mov
jg
movsb
push
aad
lcall
adc
addb
outsb
loope
add
push
add
mov
mov
hlt
imull
pop
es
mov
jmp
lock
jo
inc
imull
jbe
outsb
or
cwtl
test
ret
scas
loop
rol
dec
jo
cmpsl
mov
and
cli
or
adc
sub
xor
and
outsb
cmp
and
sub
or
insl
inc
hlt
cmp
inc
mov
push
sbb
sbb
jo
mov
loopne
outsb
mov
and
in
sub
add
loop
xlat
dec
mov
cld
dec
cwtl
aaa
push
shlb
jo
dec
adc
xchg
or
fs
jo
in
movsl
lock
push
jo
pop
test
xchg
mov
lods
mov
test
push
test
nop
outsb
repnz
popa
jo
sti
je
jecxz
cmp
and
into
cmp
rcrb
rcll
data16
imul
pop
pop
inc
lret
jo
inc
scas
in
jae
int
cmp
xor
fs
lock
xchg
mov
jne,pn
adc
cmp
adc
stos
outsl
dec
test
mov
push
ret
fidivl
movsl
sbb
push
mov
fidivrs
and
cmp
rep
shlb
hlt
inc
pop
jo
mov
decb
jo
loopne
lods
or
movsb
or
mov
int3
xor
mov
or
jmp
jo
jnp
sub
enter
jo
jbe
inc
fs
jge
mov
aas
sub
jo,pt
inc
dec
add
mov
ror
jo
and
jo
mov
push
push
sarl
sub
push
das
dec
loop
faddl
cmp
into
rorb
clc
jle
or
jo
and
out
pop
cmp
or
insl
and
mov
jo
fcomps
push
xor
not
xor
dec
mov
xlat
dec
jo
push
imul
test
jge
inc
rclb
or
xor
mov
mov
int
loopne
add
mov
icebp
dec
lock
push
ret
dec
push
movsl
jo
mov
or
fsub
rorl
insb
mov
jne
loope
push
dec
cmp
and
fists
jo
test
gs
mov
mov
jae
and
pop
in
call
jo
outsl
mov
out
push
lret
lahf
pop
std
filds
xchg
lock
fldt
fimull
mov
mov
add
ret
adcb
lahf
add
push
xor
mov
mov
addr16
call
loop
stos
dec
jbe
pop
test
mov
mov
ljmp
xchg
push
popa
jp
into
mov
mov
icebp
mov
cmpsl
dec
mov
mov
cmp
jp
xor
adc
add
into
imul
in
jne
push
std
sbbb
jle
xlat
push
add
inc
mov
rcll
dec
mov
add
test
lcall
dec
int
insl
pop
push
popf
sbb
cwtl
divb
or
insl
mov
nop
shr
push
adcb
js
inc
outsl
mov
lods
in
fnsave
imul
jne
xor
outsb
and
popa
aaa
sub
ljmpw
int
insl
push
sbb
das
push
mov
pop
jo
sub
fs
test
mov
imul
movsb
addr16
xchg
inc
xchg
mov
jo
enter
mov
decl
xor
pop
into
xchg
fwait
enter
jo
in
sarl
mov
ja
gs
push
call
pop
jns
inc
jo
cmp
stos
outsl
dec
or
bound
sbb
enter
mov
xchg
aaa
ja
test
push
jecxz
pop
adc
enter
jo
mov
ret
xchg
fs
mov
or
adc
jecxz
jle
stc
jnp
xchg
inc
repnz
es
jo
stc
jmp
fcmovne
pop
in
jno
fsub
sub
xchg
cld
test
test
inc
jo
pop
mov
push
ret
imul
adc
adc
jmp
cmp
mov
mov
cmpsl
lret
outsl
mov
push
out
ret
cmp
xchg
out
mov
les
sbb
sbb
addr16
bound
outsb
fisttps
fstl
pop
repz
mov
cvtdq2ps
incb
in
lcall
daa
pop
jmp
xor
and
mov
lcall
inc
jae
sbb
test
clc
cmp
ja
enter
adc
clc
in
mov
clc
cmp
mov
and
vaddpd
out
mov
mov
inc
xor
push
call
or
rcll
lock
aad
jl
adc
ljmp
and
ss
or
in
sbb
cwtl
test
mov
lret
ja
or
loope
and
stc
mov
cs
aam
shrb
in
pop
loopne
adc
je
lods
mov
mov
mov
cwtl
not
cmp
imul
in
and
xorb
dec
xlat
or
mov
lock
jnp
cmc
scas
mov
cwtl
negl
cmp
scas
ja
lds
std
sarl
cmpsl
sub
inc
sub
xchg
setne
cmp
loope
jne
fists
stc
out
cmpsl
adc
dec
sub
loope
mov
xor
aaa
push
cmp
nop
sub
and
dec
push
lods
jno
xchg
rolb
fimull
cmp
and
mov
cmpsl
sbb
jb
mov
mov
push
inc
and
cmc
das
int3
inc
rcrb
lds
into
sub
dec
cwtl
rcrb
pop
aam
push
cld
js
popa
jecxz
fidivrl
arpl
nop
mov
pop
icebp
push
and
or
mov
fucomip
and
jb
icebp
sub
into
push
dec
adc
inc
fsubl
push
sub
scas
std
cmpsb
shrl
shrb
cmp
lea
out
xchg
stc
cltd
daa
movsb
test
idivl
into
mov
push
jg
mov
sbb
imul
pop
popfw
out
mov
jo
xchg
mov
sbb
scas
das
lods
rcr
shlb
xchg
inc
push
out
scas
inc
aad
push
or
xchg
gs
sbb
mov
push
jnp
mov
cmc
lock
or
rolb
in
ss
push
or
push
sbb
dec
loopne
fwait
ja
mov
aam
loopne
mov
xorl
cwtl
aad
movsb
aas
cs
mov
into
add
mov
scas
test
jb
sbb
int3
nop
cmp
leave
loope
faddp
pop
dec
stos
insl
fcmovb
mov
and
mov
xor
jge
jecxz
test
cmp
mov
out
outsb
inc
jmp
orl
jp
loope
and
push
sub
xor
xor
xor
cli
loopne
xchg
sub
lods
jo
add
pushf
popa
icebp
xchg
push
fwait
cld
leave
pop
push
clc
shufps
dec
aad
mov
testl
push
lea
hlt
stc
dec
xchg
cld
ss
in
and
je
dec
adc
fs
fstps
ret
nop
orl
jecxz
and
aad
dec
adc
sti
mov
sbb
mov
pop
and
js
sbb
bound
insb
scas
repnz
lret
leave
outsl
or
clc
fldenv
mov
push
bound
loopne
cmpsl
dec
call
sbb
int
sub
in
mov
fsts
push
mov
add
lock
mov
pushf
mov
mov
std
das
add
jnp
adc
push
test
insb
je
addl
movsb
testb
dec
and
decb
cmpb
das
pop
jecxz
sti
cwtl
mov
mov
mov
xchg
mov
xor
push
lods
scas
mov
inc
push
outsl
arpl
xor
mov
mov
cmpsb
test
push
aas
fwait
xor
sub
in
rcrb
shl
int3
push
or
pop
dec
jg
adc
or
xchg
mov
xchg
lods
loope
and
adc
push
aad
std
sarb
popa
mov
adc
dec
arpl
stos
pop
mov
jg
call
adc
mov
push
xor
fistpll
mov
jne
mov
adc
sbb
arpl
das
cmp
out
roll
les
and
arpl
sub
mov
cmp
jbe
mov
cmp
cwtl
inc
jb
inc
mov
daa
xchg
inc
icebp
push
pop
jns
or
out
pop
std
xor
cmp
mov
cmpl
adc
mov
cwtl
mov
xchg
adc
ja
sub
fprem1
icebp
xor
jne
sub
insl
pop
popf
sub
or
mov
add
aam
xor
idivb
and
jno
adc
push
leave
scas
test
cs
sbb
cmpsb
add
fs
xchg
mov
sub
enter
jle
and
xor
lds
test
cltd
mov
xchg
pushf
pop
out
lds
data16
out
test
cmpsb
pusha
push
ss
mov
sbb
mov
jne
cwtl
inc
cmp
sbb
cmpsl
int3
std
in
sbb
push
cwtl
mov
mov
pop
pop
stos
fcoml
pop
mov
jb
icebp
sub
fisubrs
aas
pop
inc
popf
imulb
pop
out
dec
push
jecxz
and
lds
jne
inc
push
push
je
dec
cmc
cmp
push
hlt
cmp
add
loopne
jne
adc
nop
cwtl
pop
adc
mov
test
fcomps
in
mov
push
pusha
and
push
in
xlat
sbbb
sub
scas
adc
adc
jle
clc
mov
shrb
sbb
lcall
testb
pop
iret
add
addr16
sub
mov
adc
mov
lea
push
pop
mov
out
dec
xor
inc
subl
jp
push
inc
test
mov
icebp
dec
xlat
shlb
ljmp
test
jo
pushw
clc
fisttpll
push
jo
jb
fcoml
inc
insl
mov
xor
and
std
lea
jo
xchg
in
shrb
movsb
pop
cmpsl
dec
sahf
lods
dec
divl
scas
int
and
pop
nop
jo
notb
cmc
cltd
mov
outsb
imul
xchg
movsl
les
add
jo
aam
pushf
mov
les
call
sub
mov
jo,pn
xor
dec
aam
bnd
mov
out
xchg
dec
orl
and
jo
or
fsubrp
push
dec
mov
ja
dec
test
cmc
jb
xchg
push
mov
mov
fisubrl
aad
in
jo
int
js
repz
pop
push
fsubr
jo
dec
imul
int3
and
inc
jo
add
pop
das
or
pop
jo
jge
dec
dec
cld
scas
rorl
mov
test
ja
and
andb
pop
mov
sbb
outsb
jo
jge
xlat
jp
pushf
fs
dec
jo
xor
pusha
fdivl
sbb
lret
jo
jl
mov
hlt
sub
jo
in
and
test
dec
jo
inc
fs
inc
xchg
xor
jo
cltd
aaa
scas
or
mov
ds
jo
aam
cld
negl
mov
jo
dec
adc
loopne
pop
pusha
outsl
insl
cmc
fiadds
mov
jne
xor
xor
mov
into
test
repnz
inc
inc
pop
insl
outsl
mov
das
pusha
inc
clc
arpl
jl
stos
mov
or
push
shlb
mov
xchg
jp
inc
jmp
push
shll
mov
jo
cvttps2pi
ret
ja
fwait
pop
push
xor
in
jo
cmp
and
mov
sbb
push
mov
mov
xor
cld
jb
mov
shrl
ret
stos
adc
lcall
adc
xor
lea
ret
int3
and
xor
and
aaa
inc
mov
jno
js
jge
mov
sar
sahf
fldl
cs
sbb
lahf
sub
mov
mov
imul
mov
xchg
dec
mov
mov
out
and
iret
jo
cld
lock
add
jno
lods
insb
and
mov
pop
dec
in
dec
imul
jo
mov
adc
stc
int
fildll
mov
notl
add
mov
xchg
jg
pop
inc
add
jo
orl
addr16
xchg
imul
sti
fwait
push
and
insb
ljmp
jo
shl
call
ficoms
mov
dec
cmp
jmp
add
xchg
aad
ja
pop
daa
pop
push
nop
stos
mov
pop
jb
scas
inc
inc
imul
out
pop
jle
mov
fucomp
mov
dec
adc
aam
jo
data16
xor
das
and
jb
pop
dec
sbb
shlb
jo
mov
cmp
dec
leave
fistpl
jbe
jae
inc
cld
add
repnz
jo
sbb
push
mov
mov
cli
push
push
jo
pop
or
jge
icebp
pushf
sbb
mov
mov
jecxz
in
cwtl
cli
push
jo
sbb
mov
cmp
or
ror
cmp
pushl
mov
and
daa
mov
push
dec
dec
fs
aad
iret
lahf
loope
loop
pop
aam
jnp
mov
enter
mov
jns
xchg
pop
jo
fsubr
jb
scas
dec
cmpsl
imul
int3
outsb
test
cmpsb
xor
pop
xchg
inc
dec
popf
xchg
sbbl
jmp
int
cld
pop
push
addr16
push
rol
jae
roll
pop
and
lea
test
jo
out
mov
or
sub
dec
jo
dec
out
push
mov
push
jo
jae
lods
push
ja
xchg
ficompl
mov
jo
and
andl
mov
xlat
pushf
stos
mov
in
fiadds
push
pop
push
mov
add
dec
mov
filds
insl
lock
push
pusha
jo
mov
dec
mov
xchg
mov
in
out
and
insl
mov
and
jno
subb
gs
aam
pop
xor
test
fiaddl
jo
pop
jp
jns
pop
adc
mov
jae
fdivrp
add
jmp
mov
lret
sub
loope
shr
xorb
jo
push
cmp
cmp
jo
adc
popf
xchg
xchg
xor
insl
mov
xlat
icebp
jb
mov
sub
jo
in
je
adc
adc
nop
pop
jge
sub
add
dec
in
scas
dec
jo
repnz
jo
ss
inc
adc
pop
jo
mov
sahf
xor
outsb
xchg
in
or
ficoml
xchg
add
cli
ja
pop
sbb
sub
sti
lock
das
lock
xchg
jo
sbb
push
stc
fstl
jge
pop
mov
inc
add
and
mov
dec
add
inc
aaa
inc
sti
rol
rorl
jo
pop
push
icebp
fnstcw
sahf
mov
add
jo
popf
pushf
shl
xor
adc
fsubs
jo
push
call
into
cmpsl
in
jae
out
and
pop
lea
xchg
insl
cld
or
push
dec
or
jo
mov
mov
dec
es
jo
andl
test
adc
jg
cwtl
mov
jo
nop
je
idivb
pop
aam
test
mov
jo
xchg
ja
imul
ficompl
shl
into
aam
in
aaa
mov
mov
es
push
test
stos
mov
inc
xchg
jo
inc
sahf
je
sbb
adc
rorl
xor
lret
sbb
and
push
ja
addr16
xchg
mov
push
adc
push
mov
jo
mov
loopne
jo
pushf
jns
dec
mov
xchg
mov
jo
mov
jo
cltd
mov
out
xchg
or
call
les
or
aad
push
es
adc
jo
insb
sbbb
mov
jmp
mov
fwait
add
movsl
sub
mov
fldenv
cmp
push
addl
insl
js
mov
pop
push
push
mov
jo
nop
out
pop
add
cmp
xor
inc
dec
cmp
rolb
sahf
fsts
xor
pushf
add
mov
sub
xor
jnp
add
add
add
mov
cmp
fs
push
push
xchg
pop
stos
adc
sub
fidivrl
mov
scas
mov
movd
jo
adc
add
and
mov
insl
insb
shrl
lods
subl
dec
push
inc
movsl
cli
inc
lahf
jo
xor
fdivrs
and
jbe
and
fidivl
jmp
loop
mov
or
imul
call
enter
pop
jo
inc
lds
add
divl
jo
addr16
outsb
movsb
xchg
iret
jecxz
cmpsb
stos
sti
sbb
fmul
jo
fisttps
div
lods
cld
pushl
fs
popa
xchg
push
aas
mov
int3
xchg
xor
inc
jo
dec
cmp
sti
jae
sbb
and
div
stos
lods
mov
lret
sub
or
mov
pusha
cmp
call
es
cmp
in
loopne
cld
dec
jo
out
fistl
jo
and
cmpsl
push
push
roll
clc
lods
xchg
adc
mov
mov
bnd
test
pop
ds
scas
xchg
insl
mov
mov
lods
or
pop
jb
jge
aam
aaa
jg
jo,pn
pop
addr16
push
and
ja
rorl
pop
jl
lcall
push
arpl
inc
lock
jge
and
jo
jecxz
push
out
pop
test
inc
adc
jb
ss
pop
pop
mov
adc
pusha
push
sub
dec
pop
lret
mov
clc
pop
mov
and
add
jo
movsl
jns
in
inc
out
xchg
pop
and
xchg
imul
inc
in
repnz
dec
push
fcmovbe
xchg
test
inc
dec
inc
lock
jle
mov
in
cld
sbb
ror
xor
or
rclb
test
dec
mov
lret
add
fs
jnp
xchg
repnz
roll
ss
adc
repz
and
ret
outsb
insl
subl
daa
movsl
sub
test
pusha
dec
add
fmull
sub
arpl
add
xchg
sub
in
adc
mov
sub
push
add
xchg
popf
ss
repz
jb
je
sbb
fidivrs
imul
push
cwtl
pop
add
clts
dec
call
push
mov
or
cwtl
mov
test
push
cmp
pop
in
out
jo
mov
outsb
sti
ret
pop
push
push
jae
out
pop
rclb
xchg
mov
mov
sbb
mov
mov
imul
jmp
lret
inc
add
adc
add
xlat
or
mov
lret
lods
mov
lcall
lock
and
jns
cmc
and
or
fs
aaa
aas
mov
xchg
stos
xor
inc
je
xchg
pop
hlt
lock
mov
inc
push
inc
pop
lret
adc
into
out
cmp
mov
mov
jmp
add
dec
xchg
loope
daa
mov
in
pop
arpl
mov
mov
dec
in
mov
jmp
push
fwait
mov
pusha
es
ss
push
mov
xor
cmp
jge
test
mov
int
test
sbb
lcall
mov
in
and
shr
cmp
jecxz
pop
fwait
insl
adc
into
or
mov
leave
lds
rorl
lahf
and
push
lock
icebp
std
cmc
cmpsb
inc
scas
adc
adc
jne
cld
or
push
aad
and
rclb
shll
fmuls
notb
xchg
mov
or
out
call
leave
or
adc
mov
arpl
sub
sbb
mov
andb
mov
dec
sbb
push
add
sub
imul
nop
push
and
add
jl
mov
adcb
cs
jo
cmp
call
mov
xchg
and
das
cwtl
fbstp
sub
aam
scas
sbb
pop
loop
iret
test
sbb
pop
int3
cmp
mov
push
in
xor
in
sbb
cmc
stc
mov
sub
leave
mov
push
insb
daa
mov
inc
ja
clc
dec
js
cld
in
add
fwait
mov
jnp
leave
es
jb
mov
loopne
lret
cli
sarb
mov
inc
stc
icebp
lods
movaps
orb
test
or
cmpsl
std
mov
in
push
jg
inc
sub
lcall
shl
mov
jne
add
pop
push
lock
jae
mov
subl
call
push
pop
lock
mov
mov
mov
ja
sub
sub
jb
and
cmpsb
mov
or
xor
sub
mov
je
jo
mov
xchg
pop
sub
jo
test
lods
xchg
jno
and
dec
fdivs
jo
mov
jg
andb
out
fldcw
sub
adc
pop
loope
push
xchg
jo
movb
je
and
push
flds
add
test
lock
jo
ljmp
lods
data16
pop
popa
mov
test
cmp
sub
repz
xchg
jb
ljmp
sbb
aad
xchg
push
jo
sub
outsl
xchg
push
jo
inc
out
or
inc
inc
lret
jo
dec
out
fstps
je
dec
xchg
in
xor
sbb
pshufw
mov
aam
sbb
sahf
inc
loopne
sub
xchg
jo
inc
cmc
orl
imul
mov
lock
jo
inc
lcall
lret
or
pop
sbb
jo
fs
std
dec
jo
add
shlb
scas
xor
adc
xchg
loopne
fldl
jo
pop
out
aas
fiaddl
sub
jo
outsb
sub
fs
fidivs
cmpsb
int3
out
mov
push
dec
icebp
inc
jo
jb
orl
jle
cmp
rorl
mov
mov
stos
mov
dec
sbb
dec
jmp
call
ljmp
adc
sbb
jo
xchg
fwait
ja
cmp
sahf
or
daa
push
or
std
adc
ret
push
dec
or
aas
ss
jo
addr16
jns
iret
outsb
xchg
mov
pop
pop
xchg
pop
call
cmc
fldenv
mov
test
cmp
pop
outsb
jnp
pop
mov
cwtl
xchg
and
std
mov
and
jne
xchg
jne
cwtl
jl
shr
loopne
sub
cld
aaa
fsub
insl
sbb
hlt
in
call
jns
xor
jge
adc
inc
loope
mov
mov
sbb
add
inc
pop
mov
stc
dec
mov
or
scas
sti
jp
jne
push
int
daa
add
jne
xchg
clc
lahf
loopne
jbe
aam
fimull
lret
cmc
orb
xor
fbstp
or
lods
xchg
xorl
shlb
mov
in
addb
pop
adc
sub
int3
add
lea
jb
mov
jae
adc
enter
mov
aad
xchg
loopne
xchg
xlat
pop
inc
in
scas
adc
lcall
repnz
and
fisttps
jo
add
inc
enter
jo
mov
popf
push
lods
jo
mov
int3
jo
call
xchg
shrb
cmp
cmp
jo
inc
roll
insb
sub
in
pop
adc
test
mov
jae
cmpsb
aad
dec
stos
call
xchg
dec
pusha
addr16
xchg
jbe
enter
pop
mov
dec
adc
mov
jnp
push
mov
pusha
ret
scas
adc
ljmp
xchg
out
int3
push
imul
inc
inc
mov
add
xchg
imul
pushf
ljmp
fildll
adc
mov
dec
mov
sub
je
pop
in
jmp
bound
fcompl
icebp
mov
gs
mov
insl
call
push
push
xor
mov
shlb
sbb
orb
in
les
jo
jge
stos
leave
call
dec
cmpsl
sub
sub
cltd
pushf
popf
int
inc
scas
jne
mov
jo
dec
or
mov
ja
or
pop
jb
outsl
xchg
cs
mov
inc
leave
jno
loopne
jo
icebp
mov
adc
xor
jo
into
and
notb
gs
jo
xor
mov
push
push
mov
xchg
mov
pop
sbb
push
sahf
push
sub
jg
jnp
jns,pt
push
mov
lock
fbld
cmp
cmpsb
in
shlb
flds
or
sbb
inc
push
test
jb
movsl
popa
outsl
aad
dec
mov
pop
call
iret
pop
or
test
adc
outsl
hlt
scas
dec
rclb
dec
jo
mov
adc
push
xchg
jb
cmpsb
in
inc
jnp
lret
loope
out
adc
clc
es
fnsave
adc
ljmp
jmp
pop
lret
jo
lahf
or
mov
inc
addb
xchg
jns
enter
jo
mov
xor
div
jo
mov
je
jnp
adc
adc
notl
ret
mov
ja
lock
dec
add
xchg
pop
mov
xor
imul
pop
mov
jp
inc
sbb
cs
cmc
pop
ljmp
mov
insl
addr16
pop
pop
rolb
mov
add
lods
insb
movntps
stc
and
jo
pop
sbb
mov
gs
rcll
jg
dec
in
insl
sbb
out
mov
adc
je
sub
mov
sbb
jo
mov
mov
jo
pop
dec
out
push
and
mov
or
enter
mov
pop
pop
mov
jae
dec
mov
mov
jo
push
movsl
jp
inc
cmp
das
cmp
mov
sti
inc
je
adc
out
xor
rcrb
repnz
mov
xchg
pop
adc
ja
dec
or
shrb
int
jae
movsb
lea
adc
std
ja
sbb
aam
movsb
insl
popa
ja
mov
pop
out
xorb
xor
dec
pop
jo
push
fcomps
xor
push
mov
cmp
insl
sahf
mov
in
jo
cmpsl
add
in
pusha
or
and
out
dec
jo
es
sbb
adc
jo
cmpb
or
test
mov
inc
hlt
inc
and
xchg
fstpt
gs
or
push
ja
ja
cld
and
fstl
cld
ja
rcll
mov
testb
ret
shlb
and
inc
jo
mov
shlb
mov
mov
xchg
mov
mov
fwait
xor
xchg
sbb
into
adc
add
push
fs
stos
cltd
in
cmp
mov
jo
call
mov
imul
shlb
cmp
pushf
fsubl
sti
cmp
rorb
test
sub
dec
or
loop
std
jo
cmp
sbb
adc
stos
jo
leave
outsl
fisubl
dec
fldt
mov
jo
hlt
mov
mov
jmp
cmp
std
adc
mov
xor
push
jo
lods
repz
jbe
and
xchg
lea
ret
mov
lock
inc
inc
ret
mov
dec
jmp
jae
in
xchg
clc
ds
pop
js,pt
test
fwait
jo
push
push
and
insl
rcrl
mov
dec
xchg
inc
sarb
test
and
cmp
mov
pop
roll
out
dec
clc
adc
enter
sbb
pop
add
pop
adcb
int
test
outsb
roll
jb
xchg
inc
nop
or
jne
mov
sub
jne
into
outsb
mov
aaa
movsb
mov
lods
jo
inc
scas
in
xchg
xchg
mov
in
icebp
loope
outsb
addl
dec
sub
clc
and
push
outsb
imul
nop
or
insl
daa
popa
out
lea
add
jae
adc
jo
cmpsl
cmpl
scas
mov
pop
ret
cwtl
mov
or
dec
sarb
and
jo
sahf
inc
fiadds
std
push
jo
push
not
jl
add
lahf
push
adc
pop
shlb
mov
notb
xchg
cmpsb
loop
popf
sahf
jo
fstpt
jp
jae
scas
jo
xchg
add
out
dec
aaa
test
jl
insl
inc
cmpl
jp
cmp
and
test
or
dec
iret
jae
inc
repz
loopne
xor
repnz
lds
cli
or
loopne
push
jo
xchg
jmp
xor
aam
das
dec
inc
jo
mov
xchg
inc
iret
loop
jb
push
jo
jmp
mov
or
insb
or
std
xchg
mov
insl
ljmp
mov
pop
pop
cmp
test
jo
inc
xor
xchg
jo
and
fldenv
add
loop
cmc
sbb
push
sbb
in
insl
push
mov
mov
gs
adc
xor
in
cs
mov
shlb
les
outsb
out
mov
push
jg
adc
mov
shlb
xor
push
sahf
fs
jne
test
loop
cmpsl
aad
jae
insb
sub
cld
rcr
out
mov
xchg
xor
push
add
dec
xlat
adc
fs
sbb
inc
jmp
cmp
adc
dec
inc
lret
mov
ficoms
test
sbb
cs
cmp
stos
setl
jo
data16
or
cmpsb
or
imul
inc
push
dec
int3
jo
xor
dec
xor
loope
mov
cmc
and
xchg
insl
mov
mov
insl
cs
dec
sbb
jo
mov
mov
insl
mov
insl
mov
daa
inc
xor
push
jl
add
loop
nop
outsb
inc
subl
dec
xchg
add
jo
inc
jge
in
adc
xchg
cmp
mov
dec
pop
ficomps
in
lret
gs
lods
dec
cmpsl
jo
test
jg
jo
test
mov
push
outsl
jo
dec
xchg
dec
cli
mov
fnsave
jnp
aad
push
add
jo
or
push
add
pop
cmpsb
jp
loope
dec
xor
push
aad
pop
lods
sub
outsb
xchg
aas
inc
xchg
test
stos
stc
shlb
add
mov
in
lcall
ret
mov
push
jb
insb
pusha
xchg
jnp
dec
ret
and
les
inc
mov
xchg
adc
call
enter
dec
and
xor
lods
test
inc
test
scas
in
fdivs
lods
cmpsb
or
inc
jo
mov
cmp
dec
push
xchg
add
std
fsub
aam
inc
es
ret
jo
jle
test
push
cmpsl
pop
jo
or
sbb
push
inc
test
rorb
out
jmp
jo
fs
jmp
ds
mov
mov
xor
mov
call
outsb
subl
out
repz
jo
jnp
icebp
sahf
xor
or
jo
pop
leave
dec
push
push
xchg
sub
mov
lock
scas
rcrl
dec
or
add
lock
test
jle
enter
pop
sub
addb
leave
adc
jle
dec
test
mov
test
sub
cwtl
inc
adc
push
test
std
outsl
jmp
pop
jle
gs
xor
adc
lcall
pop
cmc
pop
push
flds
lret
stos
lcall
jl
call
insl
loope
mov
out
xchg
or
arpl
out
adc
or
pop
in
sbb
mov
add
leave
int
je
push
push
addb
in
sbb
in
daa
jl
xchg
sub
sbb
ret
pop
negl
shlb
enter
pop
adc
lcall
jnp
dec
orb
test
dec
imul
in
mov
ss
or
sahf
iret
jl
repz
mov
mov
and
imul
jno
push
mov
sub
jb
cwtl
aam
outsl
mov
add
push
mov
nop
inc
adc
cmp
enter
jmp
or
stos
fwait
sub
out
std
frstpm(287
mov
push
cmp
in
cmp
jp
lcall
jae
call
sub
xor
aam
fs
mov
sti
imul
fists
popf
jnp
pop
xchg
jae
cli
outsb
sub
push
sub
rorb
lock
lahf
sub
into
and
fisubrl
pop
test
push
push
repz
mov
lret
in
and
leave
and
xor
loope
adc
int
cwtl
jae
fsubr
pusha
sbb
jo
je
ljmp
jge
rolb
jp
jmp
dec
mov
imul
jnp
loopne
cwtl
pop
pop
jecxz
mov
cld
pop
outsl
pop
xchg
jbe
pop
cmc
imul
ljmp
xchg
fdivl
dec
jno
fcmovnu
repnz
jbe
bound
push
pusha
outsb
insb
sbb
loop
dec
daa
mov
cwtl
insb
ss
mov
xor
mov
les
sbb
and
push
pop
jl
pop
fwait
or
repz
push
ret
xor
jmp
hlt
and
adc
cwtl
inc
jne
pop
sbb
mov
jecxz
sub
lods
xchg
lret
sub
push
sbb
data16
ja
push
xchg
xchg
imul
addr16
jo
mov
leave
and
shrb
outsb
lcall
pop
sub
sbb
add
clc
sub
and
hlt
push
xchg
gs
insl
ss
call
insb
lret
in
xor
lcall
mov
jbe
jno
scas
xor
loopne
scas
and
jbe
xchg
cld
jg
out
push
adc
jp
pop
in
mov
loopne
enter
mov
and
subl
jle
push
pop
mov
mov
js
dec
fs
adc
std
inc
xor
and
std
je
lret
testl
pushf
out
push
out
xor
sbb
in
jl
sbb
and
pop
dec
and
iret
lret
rorb
aad
movsb
ja
leave
test
xor
mov
dec
lds
js
fs
lds
test
scas
sbb
lods
rcrb
xor
jnp
cwtl
adc
sti
sub
xor
xor
inc
hlt
xor
daa
cmp
mov
add
xchg
jae
sti
scas
stc
jo
into
xlat
pop
cwtl
cmp
test
cwtl
negl
imul
dec
jmp
cmp
outsb
sbb
unpckhps
xchg
test
daa
cmpl
enter
cmp
shl
adc
jecxz
sbb
adc
jmp
jne
js
mov
inc
out
scas
movsl
fs
and
inc
sti
sahf
fisubs
xchg
adc
mov
jne
inc
sti
cmp
inc
je
xchg
push
loop
scas
daa
das
leave
stc
jno
xchg
pop
cmp
xor
pop
adc
fstl
rorl
insl
daa
sarb
or
movsl
lret
arpl
push
cwtl
inc
int3
loope
movsl
dec
imul
jbe
cmp
call
stc
jl
sub
scas
and
adc
push
sahf
lcall
inc
bound
inc
test
mov
fwait
adc
cmp
push
flds
je
clc
jne
sbb
sbb
adcb
mov
mov
cli
and
xor
inc
cmpsb
pop
js
sub
adc
jae
cmpl
stos
jns
jg
xchg
lahf
je
mov
mov
roll
lcall
loopne
sbb
cwtl
jecxz
xor
ret
xor
cld
dec
mov
lret
iret
and
push
lds
addr16
rcl
cwtl
and
mov
insl
pop
xchg
pop
mov
xor
mov
nop
push
dec
pusha
das
dec
fcoml
mov
cmp
subb
push
inc
scas
jge
fmuls
sbb
das
mov
lahf
lods
cmpsl
and
jge
xchg
jno
movsb
dec
outsb
push
ret
sbb
push
les
mov
call
sub
fdiv
or
sbb
shlb
rcrb
lahf
aam
mov
add
cwtl
stc
fs
xchg
mov
cli
scas
jle
iret
or
xchg
icebp
insl
pop
jnp
push
or
in
pop
fnsave
mov
add
xchg
inc
jmp
adc
in
sbbl
xor
rorl
repz
add
fwait
pop
pushf
out
xchg
xchg
inc
pop
push
lock
sbb
push
mov
test
adc
mov
pop
pop
in
arpl
pop
mov
sbb
test
inc
das
add
lock
sbb
fbld
cmc
mov
sahf
es
in
call
aas
out
or
sti
out
outsb
lods
aaa
mov
lret
sahf
subb
sub
mul
es
pop
xor
scas
std
sarb
sub
adc
popa
xchg
loope,pt
xchg
xchg
pop
pop
cmp
aam
or
popf
popf
movsl
adc
dec
lcall
test
sbb
cmpsl
xchg
flds
cmpsb
andb
out
jo
je
gs
test
jmp
sub
push
jne
dec
dec
mov
cld
clc
clc
and
lock
sub
lahf
aad
daa
leave
adc
shrb
xlat
dec
adc
xchg
shl
or
pop
mov
add
pop
roll
sub
daa
fidivs
aam
je
jns
in
push
dec
mov
test
insl
jg
mov
lret
mov
xchg
push
pop
jae
mov
mov
pusha
lcall
scas
or
repnz
jb
jo
test
push
inc
stc
les
insl
adc
push
mov
loop
mov
or
add
xor
sub
mov
cmpsb
add
ja
je
popa
enter
jecxz
jo
mov
fbld
mov
adc
mov
push
movl
pop
jae
pop
insb
jmp
sti
jo
rcl
adc
clc
iret
lods
mov
add
test
mov
in
imul
fnstcw
lcall
pop
cmpsl
add
push
jno
sbb
fadds
mov
pop
jo
les
sub
add
jo
cli
mov
sti
jo
movsb
mov
xlat
ljmp
incb
hlt
and
xchg
lret
or
add
setp
mov
jo
aaa
dec
push
inc
fsts
mov
daa
insb
int3
dec
je
xchg
lahf
jo
das
jmp
and
das
push
fsubrs
adc
lock
push
mov
xchg
lea
addl
push
pop
jo
mov
rclb
xchg
xchg
or
jae
rcrl
jns
push
inc
data16
add
fs
ja
in
pop
dec
and
imul
push
jo
test
pop
xchg
push
das
mov
mov
jo
and
dec
or
mov
mov
pushf
iret
jnp
sub
jo
addr16
push
jo
fstpl
jae
and
bound
or
xchg
cmp
dec
pop
pushf
sbb
sub
dec
in
cmp
inc
jae
aaa
pop
pop
xchg
loop
out
cli
sub
in
sarb
fstps
and
mov
jp
test
syscall
scas
xchg
aas
cwtl
enter
or
insl
call
test
mov
cmpsl
dec
in
inc
rol
jae
lret
and
mov
push
jo
sbb
cmpsb
cld
and
xchg
mov
mov
mov
mov
jge
mov
sub
ficoml
jo
push
push
gs
les
je
subb
fnsave
push
mov
inc
notb
dec
dec
jmp
aad
lock
xor
cli
xor
push
cmp
fwait
icebp
jo
js
incb
pushf
xchg
jo
cwtl
orl
jg
jae
mov
mov
jno
jo
cmp
or
jns
popf
jmp
mov
mov
adc
xor
lahf
sub
inc
lock
pop
jo
je
arpl
cmc
pop
rcrb
or
iret
rcr
insl
or
push
add
insl
push
push
mov
mov
or
div
mov
movsb
sub
push
mov
stc
mov
jo
xchg
lret
cwtl
adc
mov
xor
into
push
adc
ja
xlat
shll
cmp
jo
shlb
jo
add
les
loopne
sbbl
jge
mov
icebp
sub
xchg
cmp
out
push
shll
jl
outsl
pop
into
jns
sbb
mov
out
repz
jo
clc
xlat
daa
in
adcb
sub
pop
jo
imul
mov
enter
arpl
mov
push
xchg
xor
pop
pop
mul
std
cmpsb
cmp
pusha
sbb
icebp
leave
xchg
cmp
enter
mov
call
jae
xchg
jne
lods
and
jnp
push
stos
sub
xor
pop
xor
sub
xchg
outsl
xor
jns
popf
out
mov
scas
inc
mov
test
loop
mov
add
xchg
inc
int
lea
imul
pop
mov
mov
jge
pushf
ret
jo
or
xchg
jo
and
pop
out
pop
loop
mov
push
mov
adc
mov
jo
fldt
jnp
in
loopne
jo
or
inc
inc
jo
call
cltd
push
dec
inc
in
cli
iret
stos
fisubs
xor
dec
data16
jg
inc
mov
gs
icebp
xor
jl
jo
stos
push
pushf
inc
sahf
mov
push
jo
mov
stos
adc
mov
cmp
push
jbe
enter
dec
push
stos
mov
fistpll
in
test
add
adc
sahf
or
shlb
pop
fcomi
add
lahf
push
out
pop
jo
or
jo
mov
imul
popf
out
bound
inc
enter
dec
inc
sbb
xor
xchg
jo
dec
out
testb
sub
lahf
sub
mov
sbb
outsb
fists
xchg
sbb
mov
sub
xor
mov
dec
stc
dec
push
lock
outsb
cmpsl
loop
outsb
add
lock
mov
lret
dec
jmp
cmp
inc
cmp
int
push
add
dec
jb
lock
xchg
push
xlat
fsubrs
jo
push
pop
aas
andb
cmp
pop
jnp
ficomps
jp
ret
or
jno
add
sbb
mov
add
dec
jo
mov
push
xor
mov
mov
push
sub
mov
xchg
sub
push
and
sub
jno
jo
adc
or
test
jnp
add
sbb
int3
arpl
rolb
sbb
xor
lahf
sbb
cmp
inc
sub
jo
enter
sbb
add
mov
repnz
test
mov
jge
and
in
or
jp
jl
jo
mov
pop
fdivl
mov
sub
dec
sbb
add
cmpsb
nop
mov
enter
shl
mov
test
jmp
cltd
dec
jg
xchg
test
jno
rorl
fisubrl
inc
dec
mov
rolb
test
ret
enter
sbb
cmp
addr16
nop
adc
enter
jo
ja
sbb
mov
push
jo
adcb
jp
xchg
cmp
xor
sbb
popf
dec
cmp
jo
shlb
pop
jo
xchg
sbb
mov
cmpsb
bound
test
inc
outsl
fldenv
jo
mov
fisttpll
inc
cmp
cmp
sub
jmp
jp
sub
rolb
mov
ja
sub
adc
mov
xchg
rclb
push
dec
jo
push
iret
or
punpckhdq
lds
popf
and
lret
add
and
jo
xchg
js
bnd
popa
jo,pn
aad
cmp
add
dec
pop
xchg
adc
insl
cmp
jne
mov
shlb
push
sub
xchg
jo
lods
pop
aaa
push
insl
or
out
add
inc
ljmp
repz
cmp
nop
loop
push
sbb
shlb
inc
lods
addl
inc
add
xchg
scas
push
mov
imul
cmp
test
jo
pop
data16
or
insl
mov
je
dec
movsb
jae
add
imul
adc
cmp
sub
pop
adc
mov
cwtl
shrl
fisttpl
imul
jo
nop
dec
adc
clc
mov
cmp
sub
addb
mov
test
xor
mov
or
cmc
jo
push
test
test
aas
jnp
push
shlb
or
in
pop
mov
jmp
inc
xchg
mov
insl
push
mov
jb
jo
pusha
xchg
sbb
addb
jo
into
scas
push
jo
fs
sahf
push
les
and
jae
add
mov
push
mov
imul
xor
inc
lahf
inc
jo,pn
ret
sub
dec
jl
mov
dec
or
gs
jo
movsl
and
dec
repnz
repz
mov
sub
arpl
push
adcb
and
and
dec
cmp
xlat
mov
or
lock
clc
stc
mov
jne
movb
xchg
inc
jo
mov
js
dec
cmp
cmp
out
insl
scas
insl
les
mov
fadds
jmp
jle
insl
es
xor
test
pop
cmc
jo
push
fcompl
jo
mov
decb
cld
mov
and
jge
jo
push
cmpsl
xchg
mov
adc
mov
int
das
movsl
and
lcall
adc
adc
adc
mov
pop
dec
loope
test
subb
sbb
stc
test
and
or
insb
jno
stos
repz
pop
pop
jno
hlt
inc
loopne
outsl
lock
mov
mov
gs
sub
jo
movsl
xor
in
dec
xchg
outsl
jo
mov
jg
iret
jo
bound
pop
lock
push
push
sub
mov
or
pop
inc
in
nop
jo
cli
pop
xor
pop
gs
jo
popf
repz
cmpl
mov
loope
pop
sbb
lret
cs
outsl
in
jbe
cmp
dec
jns
sub
mov
mov
or
push
std
push
or
cmp
dec
mov
mov
sub
outsl
sbb
js
nop
sub
inc
loope
in
push
pop
out
sti
cmp
lcall
push
out
loope
xchg
mov
subb
dec
loope
lds
mov
clc
xor
adc
jnp
sbb
loopne
mov
pop
sbb
stos
sbb
and
xchg
cmp
mov
xchg
jae
ficoms
mov
mov
jmp
inc
jb
in
dec
movsl
cli
dec
add
and
ds
adc
or
test
sub
cmpb
cmp
lahf
in
lods
cmp
addr16
adc
flds
mov
aad
or
sti
mov
inc
mov
movl
fcmovne
adc
push
int3
xchg
mov
fidivl
inc
pop
std
pop
stc
jp
in
popa
scas
pushf
add
dec
sub
ret
out
and
jnp
pop
movsb
sbb
ss
mov
xchg
arpl
lret
pop
jge
fldenv
cmp
cmp
adc
loope
push
scas
imul
push
xchg
push
and
cmp
lret
insl
jl
fcomip
and
add
push
in
mov
mov
icebp
sarl
lods
xlat
call
cmp
cwtl
or
mulb
mov
push
ret
data16
out
ror
adc
fisubrl
xchg
mov
call
pop
psubd
or
sub
ret
add
movsb
addr16
sahf
mov
push
pop
adc
and
not
pop
sbb
mov
jp
fimuls
negb
jg
and
xchg
stos
adc
sbb
lahf
xchg
sub
pop
cmp
cld
test
or
in
cmc
lret
test
enter
out
arpl
icebp
jno
outsb
sarl
je
add
mov
sbb
fcmovnb
inc
sub
mov
insl
cmc
fadds
mov
mov
jp
cwtl
xchg
imul
fadds
test
loop
cwtl
xchg
add
jle
push
xor
movsl
lock
lret
xor
cmp
pop
in
jecxz
xchg
or
xor
add
jge
cltd
mov
lcall
ret
pop
arpl
dec
cwtl
insl
jle
xchg
cmpsl
jg
mov
test
test
mov
xchg
outsl
xor
mov
push
lret
sbbb
mov
xor
jp
stos
in
adc
mov
push
jns
mov
and
fsubl
gs
and
pop
pop
dec
les
call
sub
sbb
fld
xor
je
push
xor
scas
inc
jne
cmpsb
aad
pop
lcall
fiaddl
inc
js
insl
insl
movsl
sbb
loop
out
lods
jbe
xchg
pop
push
xor
sbbb
cmp
cwtl
stos
add
pop
movsb
dec
push
ljmp
cmc
arpl
enter
push
sbb
std
outsl
jmp
dec
dec
push
cmp
je
fistps
adc
sub
test
ds
ret
mov
pop
inc
push
shr
leave
cmpl
out
call
sbb
jo
mov
subl
rcr
mov
push
decb
arpl
js
pause
mov
ds
lods
iret
and
and
aad
les
push
aad
and
bound
in
ret
pop
dec
loopne
cwtl
mov
negl
cmp
lret
pop
xchg
and
test
lock
shr
sbb
fisttpll
je
scas
fisttpll
fucom
popa
ret
mov
rcrb
iret
shl
loop
in
pop
push
addr16
adc
clc
stos
add
test
shrb
lods
popf
fs
push
mov
and
inc
mov
add
sub
lret
test
mov
mov
sbb
stos
arpl
xchg
inc
jne
and
and
push
std
mov
push
call
shl
imul
cltd
inc
je
inc
mov
clc
mov
jge
ljmp
mov
sub
xchg
mov
jl
loope
dec
and
aam
push
sub
popa
pop
xor
push
push
mov
cmp
xlat
mov
cmp
jne
in
pop
mov
idiv
std
xchg
fnstsw
dec
sub
loopne
pop
xchg
mull
ror
push
hlt
cwtl
dec
cmp
mov
data16
sahf
push
cwtl
xorl
divl
push
xor
push
mov
loopne
into
add
lcall
icebp
lock
lcall
sbb
jo
pop
or
sbb
dec
call
add
clc
leave
adc
jge
or
out
gs
push
mov
and
pushf
insl
repnz
lods
jo
or
jl
into
lgs
push
ljmp
dec
test
ficoml
divb
movsb
mov
sahf
jno
sbb
xor
mov
and
es
scas
jo
fisubl
inc
loope
mov
xor
andl
movsb
popf
aas
jo
pop
jbe
ficoml
aad
add
mov
or
stos
xchg
add
push
aas
adc
xor
jle
lahf
scas
hlt
mov
push
cmpsl
lock
adc
in
sub
adc
xor
add
fdivl
imul
movsl
inc
loopne
jo
repz
imul
mov
lods
lahf
mov
shll
ss
and
enter
pushf
lock
insl
jl
jo
les
and
xchg
pop
push
mov
aam
push
mov
out
in
sbb
ds
mov
pusha
cmp
dec
in
js
xchg
or
xchg
adc
pop
or
sub
push
int3
sbb
jo
jbe
outsb
adc
lcall
loop
mov
pushf
mov
push
and
jb
enter
xchg
gs
dec
lock
cltd
add
dec
dec
into
dec
pop
jle
aaa
sbb
mov
push
subb
test
add
xor
fwait
jo
sbb
ret
imul
out
xor
notl
mov
data16
xchg
and
out
imul
mov
sbb
adc
jae
mov
or
and
inc
imulb
and
es
jp
aam
lea
sbb
insl
dec
mov
movsb
bound
addl
mov
mov
cli
jo
and
mov
imul
call
stos
push
and
fwait
gs
jb
cmpsb
cmp
dec
mov
popa
inc
clc
jo
rclb
jecxz
mov
adc
xor
cmc
or
cmp
pushf
cmpsb
mov
pusha
lcall
jo
adcl
mov
mov
cmp
or
jo
pop
dec
les
sub
mov
testb
jo
cmp
movsl
dec
xchg
mov
aad
inc
add
dec
pop
sbb
push
add
lock
subb
cmp
in
lcall
sub
mov
jbe
aaa
loop
lods
push
ror
jo
mov
jl
outsl
cld
jb
popf
mov
mov
outsb
mov
lods
mov
jo
fdivs
sub
xchg
mov
shrb
cmp
lock
or
and
mov
and
sbb
cwtl
xchg
adc
jo
popl
cmc
and
in
sub
std
push
jmp
outsl
lods
sub
mov
rorb
push
das
mov
add
jp
inc
pop
in
push
test
inc
ja
lock
jae
dec
xchg
dec
cmpsl
jo
xchg
fldt
mov
clc
xchg
xchg
jo
fisttpll
and
fwait
out
in
mov
jno
mov
rolb
sbbb
sbb
fildll
push
ss
mov
or
or
jo
sahf
je
mul
bound
fs
lock
dec
mov
pusha
or
mov
iret
repz
mov
pop
jne
dec
popf
lock
cmc
sbb
insl
mov
loop
adc
xlat
sbb
mov
dec
mov
cmpsb
jo
iret
cmp
adc
mov
lcall
cmpb
scas
jo
in
lea
in
inc
jo
insl
jns
inc
push
cli
xor
lods
iret
sub
dec
aad
out
pop
out
or
and
outsl
sbb
insb
stos
orl
outsb
push
aaa
in
dec
jae
mov
arpl
sub
pop
jo
into
out
cs
loop
jmp
push
cmp
or
mov
inc
cmp
cmp
cmp
aaa
dec
push
inc
jo
dec
idivl
jo
pop
mov
call
data16
loope
int3
je
stos
jo
out
xor
push
sbb
jo
mov
insb
mov
into
inc
test
and
loopne
inc
or
fimuls
jo
out
fisubl
sub
xlat
cld
out
pop
jo
mov
pop
pop
out
and
loopne
mov
or
jo
scas
je
sub
pop
cltd
out
mov
jo
fdivp
out
ljmp
cld
dec
jne
lods
notl
mov
or
mov
dec
cmp
cmp
xlat
bound
cmp
cld
and
or
ret
mov
rcrb
xchg
jo
std
adc
jle
loop
cmp
xor
adc
dec
jns
rcll
cmp
jno
jno
push
lock
repnz
imul
std
jns
jecxz
jo
nop
fidivl
jo
and
scas
sti
fimuls
testb
jnp
add
inc
cmp
dec
or
clc
cmp
gs
lcall
pusha
movsb
push
or
or
adc
insb
icebp
jo
clc
loope
add
call
xchg
femms
xor
sub
pusha
mov
rcll
sub
int
imul
mov
fdivrl
mov
sbb
or
lret
jo
adc
cmp
and
pop
adc
mov
mov
cmc
mov
sub
adc
lock
pop
jo
lahf
test
push
xchg
das
push
sub
pop
push
call
ror
push
xchg
mov
mov
pop
out
outsb
rorl
mov
aas
lret
jo
std
fs
in
popf
and
jo
lea
insl
jo
std
xchg
stos
out
scas
dec
jns
ljmp
push
jo
xor
dec
inc
cld
xchg
xchg
out
jo
mov
movsb
aad
mov
addl
sti
popa
mov
add
pop
xchg
aaa
push
jo
inc
jns
insb
loop
sub
out
andb
jns
xor
rcrb
shll
adc
mov
jo
int3
lret
fsubl
cmpl
sbb
lahf
jmp
fcmovu
add
jo
mov
int
imul
mull
push
test
shlb
sti
pop
jo
xor
pop
inc
cmp
and
jbe
jl
adc
in
jle
ja
jecxz
es
leave
xor
jo
dec
push
cmp
push
xchg
imul
add
mov
pop
mov
jg
mov
outsl
mov
mov
adc
test
jo
lds
mov
dec
inc
loopne
push
imul
mov
cli
mov
div
mov
addr16
jo
mov
jns
insl
pop
shlb
test
or
js
cld
imulb
or
cmp
fstps
fnstsw
scas
xlat
mov
push
lcall
rolb
enter
test
bound
in
sbb
lea
jnp
bound
jno
jl
je
arpl
cmpsl
cld
lods
mov
insl
call
dec
imul
lret
iret
ss
jo
dec
out
adc
jmp
mov
movsl
sbb
stos
mul
jo
ret
test
leavew
imul
andb
mov
push
insl
pusha
xchg
aad
nop
jge
push
push
mov
icebp
pop
and
roll
lock
push
sub
xchg
fists
pop
mov
mov
or
dec
push
cmp
mov
cmpsb
dec
jge
lock
xchg
jl
xlat
or
ret
jge
fsub
divb
repz
cmp
pop
js
mov
mov
jo
mov
out
dec
cmp
fldenv
leave
ret
fs
cmp
push
into
insl
jmp
push
and
dec
jle
jns
int3
mov
shll
pop
or
jo
sub
add
or
xor
shrl
mov
push
and
pop
jo
pop
incb
mov
or
outsb
loopne
fmull
mov
mov
iret
inc
xchg
sbb
xchg
stc
sbb
jno
rcrb
pop
lock
mov
into
icebp
cmpsb
dec
or
cmc
jo
push
inc
push
jae
mov
insl
jb
or
sbb
jo
pushf
lock
mulb
stc
inc
mov
insl
mov
sbb
jb
push
push
mov
and
aad
sbb
sbb
xor
cs
and
jnp
rolb
scas
fld1
hlt
nop
xorb
xchg
in
out
add
mov
pop
popf
xchg
jo
sar
cltd
sub
daa
jl
jle
mul
test
jo
inc
push
xchg
imul
or
jp
or
push
push
insl
movsb
ljmp
sar
fnstenv
add
jg
loop
ljmp
in
lods
sti
jo
sbb
les
imul
lcall
jae
add
bound
les
decl
push
jae
push
adc
mov
add
mov
pusha
jo
xchg
dec
aas
push
jmp
ret
sub
jo
ss
xor
fcmovbe
jo
push
pop
push
fwait
lahf
adc
pop
lock
cmp
lret
cld
push
jmp
cmp
into
adc
adc
mov
cmp
jns
aas
jl
stos
clc
or
loope
aam
jnp
test
jo
dec
mov
or
and
push
es
ja
std
lods
mov
sbb
and
shr
clc
imul
sar
add
jno
lock
adc
lret
andb
add
sub
rclb
jge
rcll
flds
repnz
jo
fst
ja
jge
je
idiv
stc
jns
mov
mov
lret
push
addl
fcompl
push
cwtl
cmp
in
jl
jge
cwtl
add
hlt
jnp
test
push
in
stos
add
ja
mov
inc
popa
pusha
push
fs
filds
pop
and
fwait
movsl
mov
fcompl
push
sbb
adc
sub
jo
xchg
add
test
jno
jnp
outsl
push
jo
pop
sub
sbb
sub
lock
daa
cmp
imul
fbstp
xchg
jo
test
mov
pop
xorb
test
fstpt
sub
xchg
iret
jo
xor
ljmp
adc
inc
bound
xchg
mov
mov
add
das
int
cmp
jmp
dec
mov
test
push
pushf
clc
pop
jo
and
jae
pushf
mov
jo
push
sub
sbb
jo
sub
stos
fsubp
add
dec
fcmovnb
insb
xchg
rcrb
pop
fidivrl
fdivl
mov
sbb
xchg
jmp
popf
into
push
ja
lea
jo
or
dec
gs
jo
xor
pop
adc
lock
xor
mov
add
stc
loop
insb
ficomps
lock
out
mov
push
mov
mov
jecxz
int
sub
sub
mov
xchg
loope
sbb
mov
sub
or
dec
pop
lds
inc
cltd
mov
lods
jo
fcmovnb
adc
scas
sbb
rcl
idiv
cvtdq2ps
push
decl
adcl
dec
mov
adc
cli
or
test
xchg
mov
or
adc
mov
xchg
mov
js
clc
push
aas
psubsb
xchg
cli
cmp
aam
and
sbb
lahf
cmp
xchg
or
packssdw
fisttpll
xchg
jp
out
add
pop
pop
int
aas
lcall
fsubr
out
cwtl
pop
das
out
add
jp
and
inc
pushf
or
fiadds
insl
aad
cwtl
out
aaa
inc
mull
xchg
fwait
lret
int3
scas
fdivrl
and
test
test
leave
imul
movsb
repnz
orl
add
stc
or
push
int
inc
pop
addb
cmp
int
pusha
cmp
cwtl
movsb
mov
add
sbb
stos
pop
xor
mov
adc
mov
jg
push
repnz
add
adcb
icebp
std
into
cltd
inc
sbb
push
push
push
dec
mov
in
or
sbb
cs
cli
mov
mul
pcmpgtb
out
xor
jb
adc
inc
pusha
hlt
in
pop
cmc
push
cli
andb
mov
lds
jp
jo
movsl
pop
add
jo
inc
push
inc
xchg
mov
test
cmpsb
and
ja
divl
jo
shrl
lods
fcmove
int
in
xchg
adc
mov
push
xorl
xchg
jo
scas
jmp
push
dec
out
inc
notl
pusha
fimuls
sbb
adc
iret
mov
inc
sarl
push
lock
mov
movsb
int3
jo
das
addr16
add
sbb
pop
scas
mov
rolb
push
andb
gs
inc
mov
ret
decb
nop
mov
adc
cld
pusha
mov
jo
jns
popf
sbb
adc
pop
sahf
jo
adc
jl
aas
push
mov
imul
or
jo
jg
cltd
in
in
push
outsb
fstpt
nop
mov
faddl
xchg
js
mov
pop
xor
call
mov
sahf
clc
lock
insl
mov
and
fdivrs
ja
fwait
xchg
jno
fbld
in
lea
push
add
inc
mov
mov
fwait
xor
jo
cld
nop
or
cmp
out
test
mov
pop
xlat
sbb
imul
lret
std
call
mov
shrl
push
push
push
shlb
pop
sbb
jo
arpl
add
shll
cwtl
cmp
ljmp
cmp
ljmp
pop
ja
push
jl
inc
adc
aam
jo
lret
mov
fs
shlb
cmp
arpl
jo
mov
out
lods
jo
mov
sbb
addr16
cwtl
popf
sbb
mov
push
mov
jbe
pop
popa
cmp
std
adc
mov
fcompl
push
dec
pop
mov
js
in
mov
movsb
inc
xchg
jo
jge
notl
jb
mov
sti
jo
out
test
inc
push
in
jle
dec
gs
xor
lods
testl
jp
incb
lcall
dec
jo
adc
iret
jo
stos
and
test
inc
add
fldl
pop
lds
push
jae
in
lods
clc
stos
mov
sti
out
or
sbb
dec
popf
mov
push
std
js
popa
daa
ret
fs
mov
jo
ret
or
pop
adc
cs
ja
movsl
cwtl
ljmp
js
xor
pushf
icebp
subb
ja
lods
jg
mov
add
nop
ss
dec
outsl
into
lock
adc
loopne
insl
and
test
jo
cltd
test
sahf
repz
jo
pop
xchg
dec
loop
mov
jo
dec
out
cmp
hlt
jle
dec
push
mov
pop
adc
cmp
mov
je
test
iret
push
je
sahf
mov
adc
lds
mov
rolb
xchg
fcmovnb
mov
jno
cli
push
xchg
mov
and
and
push
repnz
xchg
out
push
push
jno
jp
jo
hlt
cltd
jmp
clc
ret
stc
sbb
repz
movsl
sub
sbb
mov
outsb
loop
mov
inc
shlb
scas
push
jo
sbb
pop
cmp
pop
cld
jp
sti
orl
out
dec
push
cli
push
cltd
mov
adc
rcl
cwtl
xchg
xor
and
lahf
pop
andb
pop
jo
mov
jge
jmp
xchg
subb
jecxz
pop
je
add
sbb
mov
push
push
pop
pop
gs
jnp
adc
push
jo
xor
pop
aam
pop
stc
cmp
out
pop
loop
jo
jbe
inc
lods
fimuls
bound
movb
pop
jo
push
ljmp
xor
mov
icebp
inc
lret
mov
mov
repnz
in
mov
cwtl
push
out
outsb
cmc
xor
cld
loopne
hlt
mov
mov
mov
mov
xchg
mov
jo
mov
lea
inc
je
mov
clc
xorl
xlat
jo
outsl
pop
fucomip
or
pushf
jo
cmpsb
lret
mov
insl
adc
sub
inc
sub
lock
dec
xor
xor
or
jge
ret
jo
inc
fwait
test
les
enter
pusha
pop
jl
dec
cmp
mov
jae
push
ja
xor
mov
xchg
orb
call
ja
push
ja
xor
cltd
mov
addr16
fistps
enter
pusha
or
daa
push
inc
cld
test
pop
bound
inc
nop
adc
push
insl
push
add
mov
inc
outsb
ja
pop
sub
jo
push
xchg
movsb
in
int
xor
cs
cmp
enter
sub
mov
lock
pop
adc
pop
pop
stos
ss
mov
mov
dec
jae
dec
pop
mov
into
adc
ja
shrb
fnstenv
cmp
pop
adcb
imul
pop
inc
outsb
in
add
lock
insb
into
inc
test
into
mov
push
push
jo
sbb
repnz
mov
pop
pop
jo
ss
cmp
xchg
mov
inc
inc
jbe
ret
loope
and
inc
mov
mov
xchg
jo
repnz
jo
jg
or
xor
lcall
push
loopne
jo
pop
test
jo
and
stc
inc
shrl
les
in
jo
or
dec
leave
push
cmpsb
jge
xchg
push
jns
push
lds
jo
shrb
xchg
insl
dec
pop
aad
repz
add
jo
sbb
popa
jns
pop
addr16
js
jnp
cmc
insl
jno
and
xchg
cmpsb
dec
mov
push
or
cmp
inc
das
lock
xchg
fbstp
sub
mov
mov
idivb
lcall
scas
pop
push
pop
outsl
jo
push
cmp
jmp
cltd
xchg
mov
loop
std
and
stc
jo
mov
pop
fs
sbb
jecxz
aad
aam
mov
push
jo
stc
mov
mov
sahf
lret
jb
fsubrl
xchg
jo
inc
add
xor
cwtl
shlb
fcoml
jae
xchg
cmc
ror
nop
dec
fldcw
dec
shrb
das
insl
jno
cmp
mov
in
mov
xchg
cmp
arpl
cmc
imul
sbb
inc
in
aad
push
vpshuflw
movsl
into
cmp
mov
mov
loope
and
pop
add
cmp
xor
shlb
popf
jb
sub
lahf
fisubrs
sub
mov
dec
jo
aas
addr16
loopne
pop
cmp
adc
mov
stos
aam
enter
insl
mov
lcall
mov
and
mov
mov
adc
lods
adc
mov
shrb
sub
sub
add
adc
xchg
sub
jo
sub
jo
xor
add
push
and
inc
cli
lea
push
dec
mov
shll
mov
xlat
add
cld
mov
das
mov
inc
pushf
jo
jmp
fidivrl
sub
cli
mov
lahf
xchg
xchg
or
jo
lods
adc
jo
sti
mov
xor
sub
xor
jo,pt
leave
mov
xor
jo
loopne
jbe
filds
inc
mov
in
ret
push
jo
dec
shrb
jbe
sti
xchg
jecxz
xor
mov
dec
xchg
ret
jo
popf
adc
pop
jp
inc
repnz
sub
adc
mov
out
shrb
dec
mov
and
fnstenv
mov
jo
jmp
call
fwait
test
popf
dec
push
shrb
les
jg
jo
cmp
adc
stc
or
xchg
xor
add
jo
imul
das
jae
inc
stos
mull
repz
je
nop
jo
sti
mov
in
add
dec
lock
xor
add
loopne
jo
sub
push
ret
jo
testl
mov
jo
jmp
mov
cmpsl
shr
pop
adc
jne
loopne
hlt
sti
fs
sbb
lret
sub
adc
sbb
pusha
rorl
and
xor
fwait
inc
inc
mov
pop
mov
mov
notl
mov
ja
orl
mov
adc
push
es
bnd
add
xor
push
pop
in
mov
mov
imul
pusha
sahf
xchg
adc
sahf
fsubs
jl
in
into
in
xor
mov
adc
loopne
movsb
cmp
push
sbb
push
repnz
test
fsubs
mov
stos
sti
ret
dec
div
out
or
loopne
jno
inc
addr16
sbb
lret
sub
dec
es
sbb
cltd
pushf
fstpt
cwtl
stc
fsts
idivb
leave
in
xor
xchg
out
pop
icebp
push
and
test
pop
es
xor
xchg
insl
rcrb
clc
scas
sub
out
test
cwtl
pop
inc
sbb
mov
stc
cmp
fwait
push
sub
sub
and
aas
push
cmpsl
int
leave
xchg
pop
fldcw
movsb
push
push
rcrb
adc
stos
dec
fildll
mov
push
ret
ja
push
sbb
mov
push
push
out
ja
scas
and
push
js
pop
movsb
gs
das
adc
pop
cld
add
bound
cmc
or
gs
xor
or
mov
arpl
arpl
outsb
enter
xchg
cmp
les
dec
jl
out
mov
jae
push
inc
setne
push
mov
nop
jo
push
xchg
add
add
pushf
push
lock
push
adc
clc
aad
fwait
adc
leave
add
daa
test
pop
cmpl
andb
jne
in
sub
fwait
jl
sub
push
push
jne
data16
xor
cwtl
cmp
xchg
loopne
cwtl
cmp
inc
dec
dec
and
hlt
sahf
mov
pop
clc
and
test
push
jl
int3
add
jns
cmp
xor
pop
cmpl
xchg
push
pop
fwait
sbb
scas
sub
or
dec
in
jnp
les
in
xorl
lods
js
je
xchg
data16
lock
stc
setle
push
mov
cmp
xchg
cwtl
jb
in
imul
cmp
inc
ficomps
jbe
cld
or
hlt
clc
lret
pop
sbb
mov
pushf
daa
adc
xor
aad
loop
aas
or
jo
mov
aad
sarl
je
or
inc
xor
shufps
insl
mov
push
pop
or
pop
xor
xchg
cltd
mov
adc
cmp
inc
aas
outsb
out
mov
icebp
call
gs
and
outsb
push
xchg
stos
mov
ss
xor
push
sbb
or
mov
pop
fs
cwtl
inc
ja
or
mov
jae
mov
mov
rcr
clc
lcall
or
or
jecxz
xchg
jle
aas
lret
mov
popa
mov
jnp
jp
push
mov
loopne
ret
add
clc
sbb
mov
jns
sti
mov
pop
xchg
xchg
push
xchg
dec
cmp
xchg
push
pop
dec
jge
push
gs
cwtl
repnz
dec
cltd
das
movsl
scas
aam
jecxz
fstpl
mov
jno
and
adc
call
cwtl
push
addr16
ja
test
imul
sub
sbb
add
xchg
push
pop
pop
std
gs
js
in
in
scas
gs
push
leave
in
je
leave
jnp
mov
cmp
and
test
cwtl
jmp
push
cmp
rorb
aas
mov
int3
jmp
insl
fnstsw
xchg
sub
ss
shlb
arpl
repnz
fildll
out
dec
out
push
pop
jae
mov
ljmp
xchg
jb
ljmp
in
xlat
lods
and
int3
daa
or
addb
lods
mov
cmc
mov
adc
mov
mov
js
pop
dec
xorl
push
fists
imull
mov
mov
jge
mov
sbb
mov
dec
ret
cmp
stos
mov
xchg
jg
inc
pop
pop
inc
int3
xor
int
jecxz
push
movsl
jb
mov
jge
xchg
adcl
les
jmp
outsl
lods
loop
pop
sbb
push
int3
and
push
and
pushf
adc
movb
add
outsl
jl
cmp
push
pop
cltd
jg
js
fstpt
paddb
dec
push
adc
pop
pop
xchg
cmp
outsb
sub
and
cmp
push
sub
movsl
sub
jns
scas
sbb
fists
jmp
les
popf
bound
mov
inc
and
pop
cmpsl
lea
push
push
aam
ds
test
fldt
push
xor
in
and
sub
das
movsb
pop
xchg
rcl
data16
mov
cmpb
clc
insl
lcall
or
add
add
jnp
outsb
into
jp
sub
add
aad
add
insl
movsl
sub
test
pushf
jnp
xchg
fstpl
sti
addr16
pop
fmull
add
xchg
adc
jne
xchg
xor
cmp
sbb
push
inc
mov
xor
or
push
push
cmp
xor
xor
xchg
push
xchg
cltd
cmc
cltd
dec
jle
ficoms
pop
jno
cmp
in
jae
mov
adc
loopne
jnp
out
xchg
pop
ret
aas
cwtl
pop
testb
ret
lods
sahf
je
fsubrl
and
pop
or
inc
lcall
mov
or
sbb
inc
movsl
xchg
ljmp
ficompl
sbb
aam
pop
aad
loopne
lahf
add
or
cmp
mov
inc
push
mov
pop
and
lret
push
mov
mov
mov
iret
arpl
movsl
cmpsb
dec
ss
jnp
lock
stos
adc
push
inc
or
pop
and
inc
bound
cmp
pop
add
imul
scas
xor
ljmp
insb
into
addr16
xorb
insl
lods
fdivrs
lahf
xchg
adc
repz
cmp
sub
mov
repz
add
xor
mov
cmp
or
mov
cwtl
push
lds
adc
fdiv
xchg
push
ret
cmp
fcoms
iret
mov
sub
rcrl
fildll
out
mov
fsubs
jo
ds
ficoms
jae
aas
push
movsl
dec
push
mov
hlt
insl
push
pusha
jle
arpl
popf
inc
lods
and
lods
insl
sti
adc
dec
fdivl
inc
xor
inc
fsubrs
or
add
cs
adc
or
jo
jmp
cmc
dec
jo
lret
test
push
insl
jo
nop
adc
xor
bound
xchg
xchg
int3
mov
insb
aad
xchg
push
lcall
xor
jo
mov
sub
hlt
adc
dec
aad
lock
inc
lds
testb
and
push
or
sbb
repnz
xchg
lcall
aas
jo
shr
pop
push
insb
dec
gs
xor
out
inc
std
test
inc
add
mov
jo
or
mov
pushf
jmp
fisubrs
cmp
add
fcoml
outsl
jo
cs
add
add
mov
or
cmp
out
xchg
add
in
scas
jne
and
movsb
fwait
cwtl
fsubl
xor
sub
in
pop
push
jb
lock
add
jb
mov
ss
push
pop
xchg
or
and
push
xchg
pop
hlt
pop
pop
mov
test
and
mov
pop
out
xchg
ljmp
and
es
mov
cs
adc
in
add
iret
jae
and
xchg
insl
scas
xchg
jno
dec
jl
cmc
stos
mov
adc
inc
bound
add
dec
in
enter
jns
pop
loopne
ds
push
hlt
sub
arpl
sbb
xchg
outsl
cmp
add
hlt
aam
pop
fwait
enter
push
push
and
xchg
sbb
jnp
mov
arpl
cmp
data16
jae
in
pop
jge
mov
push
add
bswap
inc
xchg
jns
in
jl
frstor
sub
push
inc
and
pop
or
or
inc
pop
mov
test
jno
mov
jp
and
pop
fs
iret
push
inc
mov
in
enter
fdivs
jge
sbb
push
outsb
int
je
std
loopne
ret
mov
lret
cmp
jns
lock
pop
outsl
push
sbb
mov
pop
in
out
xchg
popf
adc
push
lret
mov
insl
jle
daa
xchg
add
fwait
mov
out
hlt
orl
mov
imul
push
sarb
in
pop
and
jbe
movsb
sub
and
xor
xchg
cmp
and
insb
adc
mov
dec
push
pop
aad
pop
inc
dec
fs
ljmp
fstl
outsb
xchg
mov
je
es
push
xchg
clc
outsb
outsb
sub
add
sbb
loope
jmp
data16
cmp
nop
xchg
xor
imul
jnp
push
daa
aam
ret
repnz
lods
cmp
dec
mov
pop
xor
pop
xchg
cmp
icebp
das
jne
daa
mov
sub
fidivl
cwtl
test
hlt
push
jo
call
out
xchg
shrb
inc
je
cmp
mov
cli
leave
add
pusha
cmp
inc
and
xchg
cmpsl
cmp
cwtl
pop
sbb
push
inc
push
stos
lahf
xchg
sub
aad
out
or
mov
adc
sbb
rcll
jo
leave
in
inc
rorb
cmc
jbe
hlt
cmpsl
repz
insl
call
arpl
fdivl
fnsave
cwtl
lret
mov
insl
js
sbb
popa
jl
adc
loop
xchg
pop
ss
imul
and
test
rcl
ds
cmp
outsb
sbb
xor
sbb
push
mov
lcall
clc
movsb
cmp
ja
pushf
pop
in
mov
inc
std
inc
jo
sbb
ja
and
xchg
test
sub
jbe
enter
int
xor
lock
fcomps
push
fimuls
clc
sbb
jne
inc
rcr
adc
fidivs
fs
daa
and
push
je
or
pop
xchg
inc
sub
dec
loope
int3
mov
and
xor
ficoms
push
hlt
fwait
mov
das
dec
fisubl
lahf
into
mov
mov
xor
call
cmc
adc
dec
and
inc
inc
pop
pop
push
xchg
xor
call
lret
lods
enter
push
ljmp
shrb
sbb
dec
fildl
je
loope
cmp
clc
cwtl
adc
and
inc
cld
push
xchg
pop
scas
pop
and
daa
mov
fs
jecxz
icebp
mov
xor
test
and
cmp
and
andl
add
dec
es
in
idivb
insl
jno
test
mov
or
test
mov
mov
clc
xor
repz
jmp
xor
push
dec
lods
dec
push
xor
or
add
or
sti
mov
or
cmp
stc
in
insl
hlt
rcr
ss
aad
inc
pop
inc
dec
roll
mov
adc
loope
and
xor
cmpsb
insb
jp
imul
stos
mov
sbb
inc
mov
fdivrs
insb
lret
mov
pop
js
ret
das
cmp
stos
test
leave
and
push
sub
inc
and
fidivs
out
push
ret
data16
and
fmulp
jno
xor
pushf
add
shl
xor
adc
sbb
bound
mov
jp
hlt
lock
out
jo
stos
inc
mov
lods
adc
je
clc
mov
outsb
jg
cmp
stos
pop
push
sub
sub
mov
push
adc
and
test
dec
mov
loope
pop
xchg
inc
pushf
outsl
loope
popw
adc
xor
push
mov
cli
dec
or
add
iret
cmpsl
leave
jge
cwtl
cli
cmp
outsb
push
jp
arpl
js
fwait
jmp
pop
in
in
dec
test
sahf
jge
mov
imul
mov
cmp
out
arpl
shl
insl
aad
adc
push
cwtl
jne
xchg
scas
daa
jo
cli
cmp
lea
or
dec
mov
dec
popl
xor
test
jb
cwtl
movsl
shll
repz
push
xchg
pop
es
gs
cmp
int3
mov
call
fdivrs
add
mov
sbb
lcallw
push
pushf
pop
cs
mov
pop
xchg
cmp
mov
out
loopne
jl
cmp
fs
xchg
mov
pop
add
jo
mov
orb
xor
lea
in
movsb
xor
dec
or
dec
cmp
pop
mov
inc
xchg
test
adc
sbb
push
jl
arpl
cmp
jo
pop
pushf
inc
jg
ja
jo
ret
rcl
mov
pop
int3
cmp
lahf
mov
xorb
jg
iret
jge
nop
push
stos
mov
daa
jo,pt
ss
addl
test
add
jnp
xor
xor
pop
out
es
xor
xor
xlat
and
lret
mov
int3
test
lcall
mov
mov
jo
or
mov
xor
stos
ret
fsubrs
dec
sub
setl
fidivrl
jmp
imul
jo
sub
dec
fnstcw
ret
mov
jo
mov
clc
inc
add
das
push
sub
mov
jo
pop
rol
adc
add
jle
or
mov
mov
adc
add
add
jo
mov
pop
xchg
fidivrs
mov
dec
sub
mov
jo
mov
aam
mov
fnsave
adc
sbb
mov
js
fistl
adc
dec
mov
out
jo
aam
mov
mov
lock
pop
sbb
jle
lret
dec
and
insl
cmp
jmp
add
inc
jo
xchg
sub
push
hlt
enter
and
mov
pop
mov
into
outsl
push
mov
outsb
movd
cmp
movsl
dec
movsb
inc
pop
sub
daa
mov
test
inc
bound
push
insl
in
mov
lods
dec
cli
ja
jo
push
jno
push
in
les
in
push
push
cmc
aad
fnstenv
mov
jae
ja
shll
sub
insl
pop
xor
xchg
fidivs
ret
dec
push
pop
shlb
clc
jmp
aam
dec
jo
sti
and
sbb
push
aas
mov
dec
push
fidivrl
jo
test
es
jb
rolb
arpl
out
adc
sub
ja
rcl
shrb
imul
mov
push
dec
rorb
jo
dec
push
add
jo
inc
xor
leave
pop
fwait
in
jo
mov
shlb
sbb
icebp
add
inc
in
push
insl
lea
repnz
sub
sub
testl
jo
push
fisubl
bound
call
jnp
test
fdivs
pop
loope
rcl
sbb
insl
dec
cmp
push
repz
mov
fwait
outsb
jo
mov
incl
out
add
jge
call
adc
jne
xor
insl
mov
sbb
xchg
add
out
sbb
inc
clc
jo
adc
bound
rorl
sti
jo
iret
pop
cmp
xchg
adcl
adc
mov
xchg
jo
dec
stos
fwait
daa
jns
mov
cmpsl
sub
and
test
lods
mov
jo
out
push
add
sbb
je
cld
sub
push
push
cmp
fbstp
lock
imul
jmp
jo
repz
cmp
mov
in
mov
xor
sbb
sahf
leave
mov
cmp
jo
add
cmp
jp
in
fdivrp
sbb
push
jo
dec
inc
imul
jo
ljmp
jo
aad
bound
out
leave
xorb
adc
mov
jl
fcomps
pop
ja
insl
fcmovne
push
lods
sub
push
and
add
out
aas
shrl
sbb
popf
jo
arpl
ret
push
adc
iret
lock
scas
call
add
in
fsubrs
lcall
lock
sahf
mov
jo
and
cmpsl
add
and
mov
or
xchg
stos
cmp
sahf
fcomps
cmc
jo
mov
aam
jo
add
push
lahf
js
mov
push
inc
and
jo
test
pop
das
and
insl
mov
mov
sub
inc
js
leave
inc
insl
jo
xchg
inc
xchg
sti
shll
lods
jg
mov
loop
daa
movsl
out
mov
sti
sub
fistpll
inc
fwait
imul
add
popf
pop
in
loopne
call
hlt
pushf
cmpsb
stos
pop
inc
mov
fcompl
and
outsb
add
cwtl
pop
jo
mov
jo
jge
shl
imul
jns
aaa
pushf
jae
sbb
pop
aam
xchg
adc
push
cmp
xbegin
shl
ja
dec
out
dec
es
jo
push
push
mov
dec
les
call
dec
mov
nop
loop
sub
or
stc
and
push
movsb
cmp
add
fmul
pop
cmp
xor
inc
les
out
jae
test
ret
in
xchg
lods
inc
push
sub
push
fstpt
sub
pop
jo
mov
add
enter
adc
mov
or
jo
lock
pop
inc
cmp
mov
or
test
inc
pop
out
pop
add
xor
adc
or
insl
pop
sahf
xor
mov
out
jo
push
jle
movsb
out
pop
jmp
xor
push
push
jo
lret
dec
jl
mov
dec
jno
mov
mov
cmp
push
aam
sbb
pop
outsl
and
or
mov
pop
std
jo
dec
dec
sub
testb
mov
insl
lock
xor
add
sti
jo
push
fsubrl
data16
adc
cmpsl
jns
sub
mov
mov
lods
pop
popa
sub
jno
es
loopne
mov
insl
or
adc
push
rcr
loop
pop
iret
jo
dec
test
mov
aam
das
or
sub
std
xorb
sar
imul
add
mov
add
aas
repnz
jo
daa
insl
adc
aaa
push
cmpsl
std
sub
dec
or
rcr
cmp
std
nop
insb
insl
lcall
mov
lret
repz
dec
xchg
jo
scas
dec
les
push
mov
sub
sbb
adc
loope
dec
or
gs
xchg
sub
js
jmp
jo
jecxz
xor
loope
jo
jp
jg
and
ret
jo
cwtl
movl
fidivl
sbb
test
mov
or
call
jo
cmp
movsb
or
mov
sbb
and
xlat
jp
loopne
mov
xchg
cs
jo
ror
movsl
xchg
xchg
test
jo
xor
nop
jle
pop
jo
clc
adc
mov
jp
mov
mov
pusha
lea
test
add
inc
and
mov
mov
into
int
sahf
in
add
enter
jo
scas
rol
gs
loopne
adc
add
decl
sub
mov
inc
nop
jp
arpl
sbb
movsb
jle
mov
ja
cmp
lock
and
jo
add
mov
jo
repz
and
mov
jo
adc
xchg
dec
mov
jp
jne
and
mov
pop
push
js
sub
mov
fldt
insl
mov
xor
pop
add
sub
pop
ja
int3
mov
ljmp
imul
push
test
fisttpl
jg
push
notb
iret
dec
mov
divl
mov
dec
lods
jno
xchg
mov
mov
rorb
dec
jo
pop
xor
jbe
push
jo
or
ret
xchg
ror
pushf
insl
lods
fstps
mov
or
aas
push
or
jecxz
jo
or
xchg
sbb
fnstenv
cmpsb
lds
jo
add
cmp
fstpt
mov
insl
push
in
fwait
pop
int
test
and
cmpsb
xor
lds
icebp
ret
sub
sub
out
mov
rcll
enter
mov
bound
cmp
stos
mov
es
sub
fsubl
pshufw
shlb
inc
lds
pop
clc
int3
out
or
jo
arpl
shlb
in
jae
psubsb
fistps
push
lock
cmp
sub
lea
repnz
test
mov
jo
cmp
jle
mov
shlb
jo
mov
jo
adc
loop
and
clc
das
mov
lock
mov
test
mov
xchg
add
ret
dec
test
xchg
jg
leave
ds
out
mov
scas
sbb
icebp
jo
xchg
pop
leave
sbb
rolb
in
dec
lods
repz
mov
sub
sbb
mov
xor
jmp
jo
jae
push
and
dec
jo
add
insl
or
gs
test
mov
test
xchg
sbb
mov
pop
outsb
jl
xchg
gs
pop
mov
and
jne
in
and
xchg
sti
lock
and
cmc
fists
insb
mov
jbe
out
mov
mov
outsb
je
pop
mov
ret
jbe
pop
xchg
rorl
stc
cmc
jo
gs
dec
sbb
int
jne
xor
mov
pusha
and
mov
jnp
shlb
or
fucom
test
mov
add
test
insb
mov
movsb
xor
inc
mov
int
cmpsb
or
dec
jg
ss
xor
cmpsb
sub
adc
adc
inc
sti
lock
das
sbb
mov
inc
in
push
xchg
fwait
xor
cltd
lds
daa
fbstp
add
shlb
cmp
push
xchg
inc
test
inc
sbb
pusha
mov
popf
out
test
xor
sti
fsts
jg
xlat
fwait
jl
mov
dec
ss
cmp
lcall
repz
jnp
hlt
and
xchg
loope
xchg
jno
mov
movsb
shll
jbe
sbb
push
push
test
insb
in
pusha
orb
push
cmp
arpl
aam
cwtl
pusha
subl
push
inc
or
xor
test
pop
cwtl
mov
rorl
lock
sti
scas
sbb
push
fistl
sbb
add
mov
cmp
lahf
movsl
test
ss
jnp
leave
imul
cmp
inc
sbb
pusha
lods
xchg
pushf
dec
lock
xchg
out
jae
dec
in
cmp
jno
dec
shll
ja
sub
mov
sub
cltd
test
push
loop
mov
cmp
subb
stc
outsb
inc
shll
imul
adcb
cwtl
std
ds
and
pop
adc
out
les
xchg
pop
test
lods
add
out
sbb
sub
dec
or
test
mov
jl
jmp
cmc
fcom
jg
pop
mov
loop
jge
imul
addb
push
add
lods
cmpb
hlt
and
jne
lds
test
push
jl
fsubr
inc
dec
in
or
leave
dec
mov
test
fwait
mov
xor
insb
sub
repnz
sbb
popa
add
hlt
test
lret
clc
inc
add
jl
cwtl
ret
out
ja
sbb
xor
dec
dec
add
inc
mov
adc
jp
pop
fnsave
stc
das
xchg
xor
pusha
xchg
or
lcall
jne
cli
mov
pop
mov
fisttpl
dec
pop
rcr
sbb
xor
jle
ss
sahf
jno
enter
insb
fstl
dec
jne
mov
cs
test
adc
dec
das
jl
out
fildl
and
cmc
jmp
push
into
cltd
jle
push
lods
mov
fwait
mov
or
xchg
cmp
pop
and
cmp
insl
push
lret
and
test
mov
lods
push
leave
insl
xor
mov
cwtl
pop
sub
cmc
jl
iret
roll
xor
xor
pop
inc
daa
mov
pop
aad
inc
lcall
aam
inc
mov
adc
or
jae
cwtl
pop
add
outsl
clc
xor
dec
add
xor
aas
push
push
xchg
sarl
mov
adc
sub
sub
or
inc
push
fcoml
fistps
cwtl
inc
add
or
pop
sbb
cwtl
inc
pop
xchg
push
mov
and
add
sti
fdivs
fs
andl
push
pop
lret
sub
aad
lret
mov
sbbb
mov
push
mov
movsl
jl
mov
cmpsb
jae
xchg
leave
dec
and
lret
and
mov
sub
leave
xchg
xlat
aas
xchg
cwtl
in
sti
ret
xor
or
stc
loope
fsts
pop
sti
xor
inc
mov
push
jle
loope
addb
subl
pop
lds
jae
aas
mov
sbb
cmc
pop
pmullw
mov
and
scas
fimuls
lods
mov
clc
lods
leave
negb
push
call
popa
lcall
rsm
ret
mov
jbe
cli
push
cmp
push
jecxz
xchg
and
fcoml
inc
out
push
ljmp
enter
negb
dec
addb
adc
inc
push
jno
mov
cmp
lds
les
fcomps
mov
cmp
pop
mov
cmp
xor
xchg
push
lahf
pop
jge
pop
js
imul
aam
adc
test
insb
cmp
test
inc
push
movl
outsb
aam
fcomps
sbb
popa
cwtl
jns
icebp
pusha
pop
in
and
pop
pusha
rorb
sub
xchg
sub
inc
sub
pop
adc
pop
rcrb
jo
test
and
sub
lret
dec
adc
jg
rolb
mov
inc
or
and
or
lods
paddusw
mov
movsb
xchg
outsb
popf
pushf
je
pusha
xchg
cmpsl
dec
leave
shlb
cmp
pop
pop
xchg
mov
and
aaa
mov
mov
mov
xchg
add
adc
mov
adc
jge
and
pushf
test
insl
insb
fwait
mov
adc
or
adc
rclb
inc
xorl
mov
mov
mov
pop
je
push
test
movsb
push
mov
clc
insb
and
mov
daa
cmpsl
push
mov
ret
jmp
out
xor
stc
je
addl
int3
jo
fdivp
mov
push
loopne
cmp
inc
pop
sahf
mov
jle
sbb
adc
inc
imul
sbb
ret
cmp
mov
add
push
add
getsec
xor
data16
outsl
inc
xchg
sahf
mov
or
mov
inc
arpl
or
js
cwtl
pop
adc
lret
into
inc
jp
xchg
movsb
aaa
inc
lock
nop
cmp
out
aad
sub
js
out
mov
lret
and
jo
push
xchg
shrb
nop
dec
mov
jo
mov
enter
ret
sub
mov
pushf
and
loop
sub
lahf
jl
pop
test
lret
sbb
mov
mov
xchg
leave
aam
int3
pop
mov
nop
int
cmp
jo
dec
dec
lahf
daa
test
imul
divb
out
subb
cmp
shl
xor
lea
mov
mov
push
test
or
inc
inc
pop
icebp
push
mov
outsb
sbb
adc
jo
adc
mov
jbe
push
fs
insl
or
stos
fnstenv
stc
in
iret
testb
out
jge
mov
mov
sbb
jnp
shlb
xchg
push
adcb
xchg
jo
mov
mov
sahf
shlb
dec
aam
add
inc
outsb
test
push
mov
scas
je
push
shlb
jg
sahf
out
loope
shll
test
mov
pop
subb
jno
adc
pusha
in
push
jo
jno
fidivl
pop
push
sub
add
pop
call
mov
cmp
adc
mov
dec
xlat
inc
mov
and
hlt
mov
jbe
or
loopne
jo
test
inc
jo
jl
popf
cmp
inc
lds
jo
out
xchg
pushf
jecxz
jo
mov
ds
insl
xchg
push
push
into
cmpsb
fwait
mov
xchg
mov
xchg
jp
cli
out
movsb
test
pop
sbb
push
xorb
outsl
out
je
scas
dec
mov
pusha
push
add
push
insb
mov
pop
lret
cmp
std
jp
pop
jbe
scas
shl
cmp
orl
insb
in
arpl
out
iret
xchg
mov
test
sub
js
jo
and
scas
mov
inc
dec
cwtl
aad
jo
push
jno
iret
out
jo,pn
jne
data16
stc
shlb
and
dec
adc
pop
iret
lock
sbb
lds
cmpsb
push
les
jae
fwait
inc
pop
mov
fwait
ds
jo
and
movsb
adc
xchg
mov
rcr
mov
dec
fistl
sbbl
shr
or
push
mov
movsl
jb
pushf
nop
mov
mov
jecxz
adc
jo
shrl
xchg
adc
ret
call
pusha
imul
xchg
mov
inc
bound
je
insl
cmp
lock
pop
test
jg
jns
jo
add
scas
cmpsb
popf
repz
sahf
out
aaa
movsl
addps
loope
sbb
add
sbb
div
out
mov
movsb
ret
pop
insl
add
jecxz
lahf
in
xor
leave
int
ds
mov
pop
pusha
lret
js
sbb
imul
mov
fidivs
filds
or
aam
and
loope
adc
clc
push
or
lods
lock
mov
mov
add
int3
mov
cmp
mov
cwtl
jo
push
decl
jmp
push
mov
ret
jo
cli
notb
pop
pop
int3
add
fbld
imul
mov
mov
adc
mov
push
mov
jae
jmp
fwait
mov
mov
jo
lods
ret
fisubs
ds
cmpb
jo
bound
inc
ja
xor
cmp
leave
mov
shll
or
daa
aad
fidivl
test
sub
jo
inc
ja
xor
xchg
sbbb
jo
push
pushf
lods
pop
xor
shlb
mov
das
jo
sbb
fnstenv
je
stos
subb
adc
mov
dec
ret
pop
or
jo
shll
cli
xor
aad
imul
in
mov
push
jo
mov
subl
hlt
rcrb
jo
ss
inc
ja
lods
enter
out
sub
repz
push
or
sbb
and
xchg
imul
addr16
scas
push
xor
pop
dec
dec
enter
cld
sub
mov
xchg
mov
inc
ljmp
sbb
dec
cld
sbb
daa
jo
out
or
inc
xor
mov
jnp
mov
leave
lods
pushf
out
in
daa
jo
xorb
pop
jmp
push
lock
clc
pop
rol
or
lock
jecxz
fnstenv
aam
testl
pop
jo
and
int
lcall
jno
in
jo
pop
scas
xchg
mov
sbb
jae
xlat
push
mov
mov
sahf
mov
pop
stc
lock
cmpsl
jle
sbb
std
jo
dec
adc
dec
mov
fdivs
stc
aas
or
and
adc
add
sbbb
jne
xor
jo
mov
hlt
sbb
mov
mov
dec
and
aas
jns
xchg
orb
xor
and
in
cwtl
leave
mov
gs
ret
mov
and
jne
outsl
loop
rcrl
test
jo
aas
enter
jo
sarb
std
data16
lods
das
xor
scas
sbb
out
sub
cld
jo
cmpb
adc
bound
jo
push
push
aad
add
sbb
add
rclb
push
repnz
movsl
aam
inc
push
lods
arpl
test
jo
cmp
jmp
xlat
scas
push
jo
shld
gs
out
fcompp
jae
into
int
xor
repz
loopne
jo
mov
pop
loopne
cwtl
les
stos
insb
jle
inc
or
add
std
or
jp
fucomp
pavgw
insb
push
xchg
adc
jo
sub
adc
out
fldcw
xor
lock
cmpsb
sub
aaa
sbb
cmp
scas
ror
ret
jecxz
jle
and
pop
xor
insl
mov
pextrw
mov
and
dec
pushf
mov
ja
lock
mov
pusha
inc
mov
xor
mov
jae
push
aas
outsl
push
ja,pt
push
loopne
xchg
cmpsl
push
jo
lcall
shl
mov
lods
sub
hlt
xor
shll
scas
fisubs
pop
push
jo
and
dec
das
xlat
lock
add
cmpb
or
mov
into
inc
lods
xchg
aaa
dec
mov
cmp
pusha
daa
stc
das
push
in
inc
out
jo
xchg
mov
test
cmc
and
pop
decb
cli
nop
push
insl
pop
stos
inc
insl
mov
xor
push
xor
aas
push
mov
jo
mov
repz
pop
jno
or
nop
cltd
push
ja
imul
cmp
mov
or
movsb
xchg
inc
pop
cltd
test
jo
ds
xchg
jg
ss
xchg
jo
cmp
xchg
mov
shl
and
test
imul
into
pop
or
jo
xchg
aam
cmc
insb
pop
int3
dec
push
fidivs
sbb
jo
dec
mov
loopne
repz
cmp
jo
ja
data16
rorb
fiadds
jo
stos
cli
cltd
inc
mov
xchg
jle
mov
in
inc
gs
jne
or
mov
lahf
imul
inc
int3
loope
fs
movsb
jp
jb
and
adc
jo
andb
jo
popf
fwait
push
dec
pop
lahf
push
test
aam
cmpsl
je
pop
inc
shlb
vpunpckhdq
jae
dec
sbb
xor
aas
insl
stos
lahf
mov
mov
dec
pop
out
inc
outsl
add
mov
jo
ljmp
jo
pusha
ficomps
jo
sahf
mov
scas
outsb
lods
push
push
test
adc
ds
jo
xor
mov
insl
push
cmp
cmp
out
ds
inc
dec
mov
pop
lea
test
jo
data16
mov
test
jo
mov
pop
jne
mov
enter
sub
lods
loop
mov
cmp
aam
imul
mov
xor
add
fisttpl
aad
push
push
nop
jo
mov
lea
inc
outsb
fnstenv
shll
fcompl
adc
imul
pop
jle
xchg
inc
mov
push
test
sub
lds
or
das
in
add
enter
dec
sub
mov
sub
dec
subb
inc
push
push
sbb
outsb
sahf
push
jns
xor
cmp
or
jae
mov
call
mov
lock
popf
fidivl
sbb
rorl
mov
testl
mov
mov
int3
fs
xchg
add
rclb
shrb
or
lods
hlt
inc
ffree
pop
cmc
je
syscall
ljmp
pop
int3
out
outsb
icebp
pop
insl
add
mov
push
and
fs
xor
orb
xchg
adc
xlat
rcrl
mov
dec
jge
repz
sbb
push
pop
mov
jno
dec
repnz
cltd
icebp
shlb
pop
sar
push
push
lods
lock
jo
pop
dec
lods
and
insl
sub
and
cld
dec
in
int3
jo
int
cmpsl
insb
inc
pop
push
mov
stos
lods
jo
mov
cltd
int
insl
sbb
es
in
adc
adc
arpl
addr16
cld
shlb
jo
movsl
neg
fisttpll
sbb
cwtl
mov
out
jo
ljmp
dec
in
inc
jecxz
pop
fdivrs
pop
xor
mov
pop
xchg
sbb
jp
dec
test
fucom
inc
repz
stos
jne
jbe
mov
lock
leave
mov
cmpsb
das
lods
repnz
into
sbb
pop
insl
loop
dec
in
or
xor
fwait
cwtl
mov
jo
bound
in
ficomps
mov
int3
push
jo
lea
inc
mov
mov
add
add
inc
orb
jmp
or
push
inc
pop
cmpl
sbb
add
mov
pop
jo
ljmp
jo
sbb
mov
jo
xchg
data16
push
lds
xchg
lock
jae
pushf
cmpsb
jo
gs
xchg
push
imul
cmp
pop
dec
mov
and
xchg
std
shlb
in
fcom
andl
or
ljmp
lds
pop
sbb
es
bound
and
push
push
sti
je
xchg
nop
lods
jo
or
in
test
aad
cmpsb
add
inc
cld
jno
lret
push
loop
insl
or
pop
push
data16
shl
or
mov
xchg
es
push
sarl
push
inc
sbb
push
or
sbb
dec
pop
add
ljmp
ja
rorb
mov
lock
mov
sbb
push
add
ret
mov
or
jo
and
inc
cs
ja
xor
dec
inc
inc
cltd
sub
jo
pop
mov
lahf
popf
pushf
jge
xchg
fisttpl
jae
xchg
mov
push
nop
jbe
xchg
ret
adc
cmp
jno
xor
jo
mov
iret
cmp
inc
cmp
insl
lock
pop
loop
das
pop
push
jae
movsb
loopne
xchg
mov
xchg
mov
iret
xchg
mov
add
or
push
mov
and
loopne
jo
aas
or
sbb
rcll
sub
lret
mov
lret
adc
mov
and
push
jo
test
cmp
sub
cltd
xchg
mov
jo
scas
push
jmp
stos
dec
sbb
loop
jo
out
adc
jo
fdivs
bnd
mov
daa
cmc
cld
jo
cmp
shlb
jb
inc
sbb
add
data16
lret
cmp
jo
ds
pop
push
or
dec
pop
fcompl
mov
icebp
cmp
dec
into
dec
jo
inc
fisttps
inc
xor
bound
xor
call
je
push
xchg
popf
inc
mov
repnz
shrl
aad
scas
data16
ss
jae
lea
imul
lcall
pop
mov
xchg
or
pop
pop
push
test
sub
das
pop
jo
mov
push
pshufw
dec
mov
pop
repz
in
std
or
jo
aad
pop
add
inc
sbb
sub
lahf
push
jo
pop
pop
adc
and
inc
sub
in
fidivl
inc
shrb
jo
jne
popf
hlt
sub
jge
ret
cltd
fsubl
repz
ja
in
fs
mul
sub
cmp
mov
push
iret
mov
cmp
stc
or
push
adc
dec
cli
add
inc
mov
push
mov
inc
sub
jo
rcrb
push
in
subl
add
insl
cmc
cmp
adc
xor
sub
cvtps2pd
ja
enter
addr16
in
fcmovnu
sti
inc
xorl
jo
movsb
cmp
push
out
push
pop
cmc
xchg
pop
stos
sti
mov
adc
out
mov
jnp
cwtl
xchg
xor
sbb
cmp
sbb
fsts
sbb
dec
mov
cmp
in
pushf
in
in
jno
popf
shll
xchg
add
adc
or
adc
cmp
push
mov
insb
jle
into
and
je
mov
dec
pusha
cmp
sub
cmpsl
mov
jne
xor
jno
in
dec
scas
add
or
cwtl
mov
jle
cmp
daa
push
or
mov
xchg
lods
addr16
loope
insb
in
xorl
out
lock
mov
leave
and
jp
dec
mov
xchg
dec
jnp
outsb
sub
add
arpl
fidivrl
pop
mov
js
pop
push
jge
inc
outsb
push
aas
push
jecxz
push
leave
outsl
dec
lahf
inc
hlt
mov
mov
sbb
stos
jo
jmp
shr
mov
pop
pop
and
mov
aad
data16
jmp
das
push
mov
or
call
sub
loop
add
cmpsb
xchg
pop
cwtl
cli
jb
and
inc
ret
mov
adc
std
dec
mov
cmpsl
lock
ds
adc
ror
inc
mov
adc
leave
call
adc
test
les
mov
sbb
sbb
sbbl
jo
lret
int
movsb
push
ja
adc
jecxz
enter
jo
mov
push
pop
jo
xor
loopne
and
ljmp
out
push
add
out
mov
mov
xor
or
adc
negl
jo
adc
shlb
xor
imul
mov
call
ret
aaa
adc
sti
out
or
pcmpeqb
inc
gs
cmp
arpl
cli
jle
jp
pop
mov
aad
jo
mov
testb
cmp
push
cmpl
xchg
adc
pusha
aad
sbb
mov
mov
xchg
stos
xchg
jae
orb
jp
shl
cld
sbb
mov
and
mov
popf
adc
repz
push
rcrb
in
fldl
jp
dec
mov
mov
jo
in
push
jae
lds
je
or
cld
xlat
pop
mov
mov
and
pop
mov
push
aas
or
ret
xchg
mov
add
push
push
cmpsl
push
daa
xchg
jo
iret
idivl
lcall
xchg
insb
push
jo
enter
push
inc
hlt
pop
testl
pop
sub
mov
idiv
adc
cltd
std
pushf
pop
cmpsl
jp
mov
xor
dec
pusha
adc
fwait
jno
jne
and
cmp
subb
gs
pop
cltd
test
in
inc
sbb
loopne
xchg
push
dec
shl
jo
daa
es
js
jo
in
mov
inc
test
jo
int
dec
push
xchg
adc
cs
outsb
push
push
jae
and
xlat
xorb
insl
add
aad
adc
outsb
cbtw
es
pop
xor
adc
arpl
push
int
les
shll
mov
push
sar
pop
and
sar
inc
mov
sub
incb
mov
sbbl
fnstenv
mov
lea
testl
mov
sbb
pop
mov
lea
xor
fcompl
and
sbb
xlat
mov
pop
fbstp
insl
mov
and
jae
xlat
push
bound
clc
out
mov
out
jg
fwait
xor
xor
mov
ja
sbb
cltd
cld
jo
adcl
cmp
nop
outsb
ja
test
out
ja
adc
mov
and
hlt
xchg
out
mov
call
adc
ret
cwtl
pushf
cltd
repnz
and
leave
setg
loopne
mov
or
sbb
jg
cmp
imul
pop
test
sub
inc
fsubrs
sub
xchg
das
in
orb
mov
aaa
xchg
jae
jb
xor
std
test
bound
and
nop
jl
lea
cmc
sub
add
jnp
mov
in
mov
xor
iret
pop
loop
mov
xor
fxch
sub
jno
sbb
push
test
mov
orb
cltd
dec
ds
lcall
jmp
dec
addr16
aad
bnd
jnp
mov
das
sbb
sub
popa
ljmp
scas
pop
rcl
mov
xor
push
sti
jmp
iret
ficoms
sbb
jnp
sbb
fisubrs
lock
pop
sbb
sti
cmc
or
ret
loop
loopne
xchg
dec
and
pop
lret
dec
les
leave
mov
push
inc
and
xchg
iret
xor
sbb
jne
ja
sub
inc
test
pop
loopne
jb
int
in
test
ds
cmp
sub
js
sub
imul
push
inc
fsub
das
in
sahf
stos
repz
dec
mov
mov
push
jmp
clc
push
cwtl
scas
je
mov
insb
pop
insb
test
shll
inc
test
sbb
and
repnz
xchg
fwait
or
push
in
roll
xor
and
loope
adc
xor
lahf
cmp
dec
mov
xor
xchg
sub
xchg
jb
out
jnp
clc
push
xchg
mov
or
and
inc
fimuls
push
jmp
pop
pop
fsubs
pusha
sbb
and
jp
cmc
ja
mov
lahf
scas
adc
mov
push
imul
out
sbb
leave
mov
sub
js
sbb
bound
push
and
xchg
add
scas
fisubrl
in
test
or
ret
ja
sbb
and
stc
mov
inc
cmp
adc
clc
and
lea
push
or
mov
ja
cwtl
lock
repz
mov
test
mov
lock
xor
stos
push
dec
outsb
or
popa
pop
xchg
dec
out
sub
mov
insl
jl
fisttpll
dec
push
xchg
push
call
icebp
and
and
pop
sbbl
ret
push
out
pop
inc
mov
in
dec
arpl
adc
loop
cmp
jp
je
pop
xchg
pushl
aas
cmpb
jne
jo
test
lahf
push
cmc
adc
xchg
aad
sbb
out
lret
dec
movsl
push
lods
sub
ss
cmp
insl
mov
cs
xchg
adc
adc
nop
rorb
rcr
adc
jge
jmp
pop
fwait
mov
cmp
jns
pop
mov
scas
pop
arpl
loopne
sub
adcb
scas
ja
stos
cwtl
dec
push
out
ljmp
jbe
mov
mov
mov
xchg
or
faddp
jo
add
mov
jne
jo
jb
sbb
cmp
cmpsl
inc
push
mov
not
jo
sbb
daa
pop
test
xchg
xchg
jo
enter
pop
in
jo
int
pushf
arpl
add
rorl
mov
vmovhps
sbb
xchg
loop
xorb
jecxz
subl
inc
mov
pop
pop
or
aas
jecxz
xchg
cltd
add
push
pop
push
mov
mov
insb
mov
adc
jl
mov
sub
shlb
pop
dec
mulb
sti
cmp
xlat
aas
cltd
push
jo
jl
mov
and
aad
rclb
nop
adc
sbb
cmp
and
pop
adc
aam
lods
notl
rcrb
js
and
mov
pop
ds
or
push
fs
cmp
std
scas
fists
xor
mov
sbb
mov
imul
imul
push
add
add
push
xchg
sbb
cmp
icebp
lock
cs
rcr
adc
jae
adc
int3
jg
mov
sub
sub
aas
push
mov
pop
jmp
push
sub
mov
popl
clc
jo
iret
add
pop
shr
adc
lret
mov
lahf
mov
jo
mov
jo
pop
dec
mov
add
dec
jne
push
jp
jnp
jo
cltd
jmp
push
jo
fs
sub
xor
pop
jo
mov
sub
xchg
into
mov
jp
add
aaa
push
pushf
xor
out
jo
pop
add
cmpsb
aad
les
pop
mov
sub
jo
aad
push
cmpsb
leave
and
lods
in
jo
mov
mov
jge
inc
cmp
outsb
int3
aaa
lea
add
sub
shll
jo
sub
adc
inc
xchg
jo
mov
mov
loope
shll
add
int
cmpsb
aaa
stos
mov
jo
lock
cmpsl
xchg
xchg
insl
mov
hlt
pusha
mov
ljmp
and
imul
jo
cmp
lret
mov
popa
mov
pop
shlb
incl
pop
ja
out
cmpb
sti
push
or
push
aaa
add
mov
and
es
call
sar
xchg
sbb
jo
lret
mov
insb
enter
or
fisttps
mov
push
sub
pop
pushf
movsb
jl
imul
xchg
or
jp
dec
jnp
xor
loope
movsb
jo
ljmp
insl
pop
adc
std
pushf
movsb
clc
jo
push
icebp
outsl
and
inc
das
jo
lea
loopne
add
test
hlt
or
jo
gs
ficomps
cmpsl
jecxz
jo
sbbb
int
and
inc
jl
or
add
ja
fimull
cltd
xor
inc
sarb
jl
int
or
push
test
mov
jae
stc
enter
jl
inc
jb
push
add
mov
lds
add
dec
and
mov
mov
inc
pop
push
jo
add
lods
jo
inc
cs
mov
stc
push
jo
loop
or
xor
add
repz
aas
sub
notb
out
inc
mov
adc
ja
lret
movb
mov
push
std
loope
jo
add
pop
sbb
jo
xchg
andl
iret
jp
inc
movsl
xchg
in
das
rcr
cmp
test
iret
popl
out
clc
add
std
stos
js
push
insb
jne
xor
fwait
or
popa
and
aas
push
xchg
mov
mov
sbb
add
outsb
push
das
jo
mov
or
aaa
xchg
out
mov
mov
xor
fwait
cltd
lcall
dec
mov
fs
std
cmp
addl
jo
add
and
cmpsb
push
jae
mov
cwtl
sbb
imul
or
xchg
inc
dec
inc
or
jle
shrl
cld
mov
jo
repnz
cwtl
ret
mov
outsb
adc
jb
mov
pop
jo
lcall
jne
loop
loopne
jne
sbb
pop
pop
les
data16
scas
aas
cmpsl
lods
sbb
test
daa
insl
fisttpll
cwtl
rcrb
cmp
adc
cmp
cmpsl
repz
push
insl
rcr
push
mov
testb
sub
mull
sarl
lock
rorb
leave
xor
push
add
xor
stos
adc
jo
mov
push
jg
jp
jo
hlt
xor
jo
jmp
out
in
jmp
pushf
call
ds
jo
adcb
jo
xchg
iret
loop
test
sti
mov
addr16
pop
mov
jno
cld
jmp
pushf
jb
lock
test
out
movsb
repnz
cmp
inc
je
inc
add
push
jo
data16
xor
xchg
dec
out
jo
arpl
mov
sub
jo
push
jno
xchg
jns
pushf
pop
xchg
mov
inc
ljmp
jae
sahf
jl
inc
jo
or
jge
sbb
xadd
cld
and
call
push
pop
mov
pop
ss
mov
mov
inc
sbb
repz
xor
jo
in
loop
push
and
xchg
push
into
out
and
ja
ret
push
mov
sti
shlb
mov
test
inc
xor
adc
pop
xor
test
shrb
leave
cmp
aas
in
bound
and
adc
adc
lahf
mov
loopne
lods
bound
sahf
jae
imul
pusha
mov
or
into
mov
mov
add
inc
jge
jo
adc
mov
jo
sub
je
les
pushl
mov
sub
insl
jecxz
es
inc
shrl
mov
test
ja
jge
jl
mov
pop
stc
insl
mov
mov
inc
cmp
jmp
mov
adc
pop
pop
pop
xor
test
pop
loope
mov
inc
add
arpl
cmpb
jae
jecxz
stc
rclb
jnp
inc
rcl
jb
int
cmp
mov
sub
pop
je
movb
movsb
jo
aaa
or
mov
cmp
pop
pushaw
adc
jo
stos
mov
jo
test
lea
push
mov
jne
cli
jo
dec
sub
push
test
test
xor
or
jo
js
mov
jo
and
and
add
push
add
lcall
mov
lock
jne
icebp
divb
loopne
add
popf
popa
out
lret
addr16
mov
or
jo
enter
lret
dec
push
and
stos
dec
or
jo
stos
lods
xchg
fcmovbe
mov
aaa
ja
mov
and
in
pop
cmpsb
pop
movsb
pop
popa
nop
clc
scas
adc
add
xchg
shrb
adc
mov
push
fcomip
jl
adc
pop
xor
or
std
pop
mov
int3
out
mov
or
addb
jnp
scas
orb
icebp
dec
inc
inc
aaa
mov
xchg
out
pop
mov
mov
mov
mov
insb
pop
or
and
add
lock
testb
or
dec
stos
jae
push
inc
iret
in
in
add
add
add
ljmp
bnd
sub
xlat
std
insl
pop
jecxz
loopne
mov
xorb
inc
push
jo
mov
test
jo
mov
lcall
fsubl
sbb
mov
add
jo
dec
out
push
dec
dec
je
paddq
std
lods
jl,pn
je
jmp
mov
in
jo
cmc
fwait
sub
mov
lea
pop
lret
aad
call
xor
xor
test
adc
mov
jne
jp
data16
adc
cs
fidivl
xchg
nop
daa
xchg
aad
stc
cmc
fiaddl
push
cmp
loopne
cwtl
push
in
pop
and
jmp
sbb
cltd
push
xchg
aad
and
push
pop
push
dec
arpl
mov
pop
dec
aas
popa
hlt
and
nop
fisubs
jecxz
jmp
cmc
xor
test
add
jecxz
scas
in
rorb
add
fiadds
push
je
jo
or
jnp
nop
mov
bound
push
in
cwtl
mov
outsb
leave
cwtl
jg
adc
sti
cmc
int3
xor
pop
cmp
dec
out
insl
xchg
mov
pop
clc
mov
push
pop
lahf
pop
push
imul
jp
jle
push
shl
out
lea
mov
pop
dec
xlat
cmc
xchg
out
or
repz
xchg
and
xchg
mov
dec
into
cmp
lcall
push
fldl
lods
pop
enter
mov
dec
sub
and
roll
mov
mov
stos
push
adc
mov
jle
jg
mov
pop
loopne
mov
pushf
mov
xchg
mov
mov
dec
fisubs
jmp
lock
addr16
mov
push
push
ficoml
pop
fs
cmpsb
adc
cld
in
jge
push
jo
orl
lcall
xor
push
shrl
das
data16
cmp
insl
aam
xchg
push
lods
cmc
test
divl
xchg
xchg
or
dec
mov
mov
insb
mov
je
leave
adc
int3
clc
in
js
xchg
push
hlt
sbb
ds
imul
inc
inc
lds
ret
mov
cwtl
push
insb
mov
sbb
imul
jb
mov
and
pop
out
sbb
into
jno
pushf
loopne
sbb
scas
ret
test
movsl
inc
cltd
clc
inc
pusha
jle
cmp
lcall
push
fdivrl
sub
mov
pop
cli
adc
out
das
popf
call
ja
xlat
mov
and
xchg
cmp
xchg
jo
es
mov
loop
scas
mov
pop
pushf
enter
inc
push
sub
dec
es
test
add
sub
cmp
mov
lock
or
sbb
xor
data16
fcmovnbe
lahf
stc
inc
in
jae
jo
mov
imul
int3
rcll
jnp
scas
scas
push
jo
leave
inc
xchg
lods
pop
xchg
jnp
inc
cmp
mov
mov
mull
out
imul
jo
jp
ja
mov
jo
sbb
inc
js
cmc
mov
mov
ret
enter
daa
jo
jle
cmpsl
push
gs
int3
add
arpl
cli
push
dec
mov
sub
aad
add
dec
flds
xor
outsl
insl
sub
mov
pushf
outsb
cmc
jo
inc
rclb
push
pop
jo
int3
and
insl
or
push
sub
lret
adc
shll
xor
push
mov
adc
xchg
imulb
shll
xor
dec
jo
mov
jg
pop
subb
jo
pop
int3
outsl
cmpsb
aas
ja
and
ljmp
dec
inc
mov
fisubs
clc
in
in
rorb
xor
pop
call
insl
int3
pushf
xchg
cmp
jo
cmp
sub
xchg
mov
jns
cmpsb
call
inc
jo
mov
dec
jecxz
int
jo
pop
mov
aaa
test
push
jo
jae
mov
jne
scas
leave
bound
clc
das
loopne
lock
fisttps
test
jno
data16
jo
imul
out
adc
push
add
jo
push
cmpsb
jnp
rcrb
adc
addr16
inc
mov
jnp
in
hlt
icebp
lock
push
mov
inc
lods
sahf
cltd
andb
pushf
ret
arpl
or
jnp
aad
xlat
add
lea
sahf
pushf
sbb
pop
aas
clc
pop
jle
ds
xchg
stos
pop
lcall
xor
fwait
leave
das
cmp
mov
adc
and
sub
sub
aaa
pop
xor
cwtl
sub
maskmovq
notl
cs
icebp
mov
dec
pop
push
push
cwtl
sbb
jbe
xor
cmp
roll
es
adc
xchg
addb
lea
fnsave
push
xchg
dec
sahf
lods
push
aad
xchg
or
sub
pop
cmc
adc
xchg
sbb
mov
ror
movsl
imulb
inc
mov
cmpb
push
std
mov
aas
sbb
mov
jmp
xchg
jns
cmp
fs
in
xlat
xor
jnp
dec
js
cmpl
pop
sub
std
xor
jg
pop
add
fcmovne
pop
mov
push
in
jmp
sbb
loop
mov
adc
dec
and
lods
pop
dec
pop
or
test
jae
repz
mov
in
leave
cmp
mov
cmp
sbb
es
loope
ret
in
sbb
test
gs
or
cmp
pop
test
cmpsl
jo
push
push
jne
mov
sub
jl
cli
icebp
mov
test
push
loop
out
inc
jmp
cwtl
jecxz
and
and
enter
inc
pop
jae
icebp
xor
out
cmc
ret
iret
je
pushf
ljmp
mov
call
cmp
ret
mov
and
jb
jle
add
pop
mov
pop
negl
sub
cmp
sub
les
cmpsl
mov
cmp
mov
pop
sub
adc
je
jo
sets
sub
xchg
push
loope
dec
and
sub
xor
out
call
enter
pop
jecxz
mov
jne
sbb
add
inc
stc
outsl
les
int3
mov
je
test
xchg
fsub
movb
xor
and
mov
sti
jmp
pop
dec
jmp
mov
push
mov
movzbl
push
fmuls
int3
xchg
in
push
add
jecxz
push
mov
lock
or
loop
scas
pop
unpcklps
jb
cmc
and
orb
fnstsw
xor
fldenv
cmp
inc
call
rol
pop
fldcw
je
mul
add
addr16
fwait
inc
inc
sbb
pop
jmp
cli
jb
out
leave
lret
mov
dec
imul
ficoml
adc
mov
ret
add
addr16
mov
fbstp
sti
mov
stos
sbb
in
push
adc
std
or
fcomps
sub
jb
stc
icebp
jne
push
lcall
pop
and
xor
int3
lret
ja
xor
aas
jne
jl
sti
cwtl
out
pusha
js
sub
sub
mov
clc
daa
push
push
pop
xchg
icebp
cmp
dec
or
xchg
loopne
jne
jmp
clc
cmpl
and
jecxz
dec
dec
xor
and
push
jno
mov
in
xor
movsl
mov
add
mov
and
daa
cmp
xor
cmpsb
and
pop
jmp
pop
sarb
mov
dec
pop
in
sti
xor
cwtl
loop
sbb
cmp
and
and
or
fs
push
sub
ss
inc
pop
cmp
test
xor
movsb
xor
in
dec
mov
ret
inc
dec
add
ficoms
fld
jb
fsts
arpl
fwait
inc
outsl
test
pop
mov
test
mov
data16
leave
into
sbb
leave
sti
movsb
inc
jmp
lret
pop
and
or
mov
mov
jns
mov
dec
xor
mov
loop
push
loopne
xlat
les
sub
test
inc
mov
adc
scas
les
sub
sarl
addr16
sbb
push
shl
lds
and
fisubrl
sti
cmc
push
cltd
cmp
ja
cmpsb
fs
push
movsl
outsb
push
mov
fwait
mov
and
jle
add
mov
sbb
dec
shr
nop
pop
ljmp
xlat
or
pushf
call
push
movb
daa
cwtl
push
and
adc
aas
xor
pop
pop
and
cs
xlat
add
xchg
ficomps
outsb
and
and
repnz
loopne
popa
jne
mov
cwtl
push
insb
dec
mov
and
call
faddp
out
rsm
shr
inc
xchg
dec
ja
sar
mov
mov
and
mov
push
insb
insl
xor
xchg
fidivs
test
inc
lret
fwait
insl
js
inc
sbb
mov
mov
lock
sbb
push
dec
pop
loop
hlt
icebp
xchg
and
push
xchg
out
xchg
test
fs
inc
push
scas
mov
jl
jns
loop
pop
jnp
mov
in
outsl
insb
aad
fs
inc
out
mov
ss
stos
lock
pop
cmc
dec
adcl
inc
xchg
jbe
pushf
xor
cwtl
dec
mov
push
adc
pop
dec
pusha
outsb
notb
das
neg
jns
aaa
clc
sub
push
popf
stos
arpl
dec
data16
ja
ret
addb
cmp
dec
add
testb
shl
inc
cmp
test
mov
leave
aam
xchg
mov
je
out
mov
cmp
cld
push
arpl
call
xchg
add
bound
xchg
lock
and
shl
imul
sbb
out
loop
aad
jno
andl
arpl
insb
cmpsl
sub
xor
cli
mov
and
mov
arpl
mov
or
mov
xor
fucompp
sbb
dec
dec
sbb
icebp
imul
sub
xchg
cmc
mov
fnstcw
inc
clc
mov
xor
mov
mov
scas
cmc
ror
in
or
icebp
stc
insl
mov
dec
dec
outsb
in
push
add
fwait
push
xor
sbb
in
aam
jnp
xchg
pop
int3
mov
lret
and
xchg
or
inc
call
dec
rcr
or
jo
enter
xchg
bound
pop
nop
pop
cmpsb
ret
out
xchg
popa
pop
mov
popf
mov
jne
xchg
sbb
xchg
lret
sarl
sbb
sbb
fsubrs
jl
test
or
out
iret
add
in
push
jne
sub
fwait
pusha
add
inc
push
fisubl
cwtl
add
scas
mov
idiv
pop
fidivs
lret
push
push
and
push
mov
cltd
lret
in
lcall
xchg
pop
and
mov
movsb
and
adc
popa
dec
add
lea
cltd
fisubrs
imul
sarb
repnz
retw
fsubrl
adc
scas
xor
mov
push
pop
jbe
in
pop
xchg
jnp
xchg
push
sub
sub
popf
pop
push
ror
jae
cwtl
mov
js
jns
neg
jle
out
mov
fistl
mov
add
dec
inc
enter
fidivl
push
nop
andl
test
shl
dec
dec
lock
insl
std
mov
sbb
sti
cmp
sub
in
test
call
test
ret
jmp
xchg
mov
and
fwait
sarl
pavgb
inc
jns
cwtl
adc
inc
push
shrb
and
xchg
mov
rcll
sub
rcrb
mov
pop
int3
shrb
movsl
out
push
jmp
test
inc
pop
and
push
xor
xchg
lock
iret
or
xlat
out
sub
data16
dec
test
nop
ret
insb
xor
daa
idivl
test
or
mov
push
fstps
hlt
push
xlat
lret
add
xchg
es
imul
mov
push
cwtl
adc
stos
icebp
add
hlt
jge
sbbl
jge
push
pop
lcall
dec
in
xchg
aas
add
jge
ja
out
dec
movsb
lock
lods
jl
xchg
pop
cli
into
adc
inc
inc
fwait
cmc
sub
xchg
hlt
sbb
dec
dec
lock
push
std
mov
div
mov
pop
setns
mov
xor
pop
jnp
add
aas
and
push
mov
xlat
cmp
insl
add
xchg
xor
mov
push
inc
shll
stos
daa
dec
loop
cwtl
vpmacswd
mov
andb
lds
sti
xchg
dec
int3
lods
call
push
imul
bound
cmp
negl
xchg
out
rolb
pushf
out
rcrb
pop
jmp
xor
dec
push
rorb
fdivl
out
loope
sbb
fdivl
push
stc
inc
lahf
jae
fildl
xor
jo
pop
xor
icebp
dec
xorb
sbb
enter
je
push
lea
outsb
ret
int3
xchg
sub
addr16
and
jo
xor
dec
lds
pop
cld
cltd
iret
sbb
dec
mov
mov
pop
push
jo
out
shrb
cwtl
adc
push
dec
shl
jo
add
add
pop
cmpb
mov
mov
xlat
das
jo
in
lods
scas
mov
dec
mov
loope
insl
and
sbb
pop
inc
dec
fldl
add
pop
jp
xchg
lea
jno
in
lcall
clc
rol
stos
push
cmc
movsl
ficompl
setbe
push
xchg
shrl
stos
ljmp
sarl
mov
jno
movsb
xor
sarb
iret
xor
repz
jle
jp
shl
push
mov
jo
lea
jge
xchg
ja
cmp
dec
add
sarb
inc
jbe
pop
xchg
jns
push
sub
bound
cmc
lahf
enter
sub
mov
outsl
cmp
pusha
mov
sub
and
cltd
push
imul
jmp
mov
ja
jb
sbb
pop
test
push
xchg
jbe
nop
add
jmp
in
cmp
rcll
pop
lods
mov
pop
pop
jp
movsb
insl
push
insl
cmp
in
mov
lods
pop
test
adc
mov
add
jns
in
loop
add
sbb
push
pop
cmc
mov
jo
cwtl
loopne
or
cmova
ret
pushf
dec
rolb
jo
daa
lret
mov
in
xor
or
sub
inc
cwtl
imul
cmp
daa
rcr
pop
ret
pushf
stos
fsubl
ret
repnz
imul
mov
test
dec
pushf
std
repz
xchg
loop
ret
data16
fs
add
jae
xor
mov
dec
popa
xor
or
test
insl
or
test
pop
mov
pop
jo
push
shrb
inc
mov
lds
sbb
jo
sub
shll
leave
pop
cmp
iret
pop
or
jns
inc
cwtl
js
jo
sbb
outsl
cli
mov
mulb
xchg
lock
jo
push
movsb
out
push
mov
jo
jg
mov
push
mov
jmp
sub
movsl
jmp
mov
lds
inc
jo
sar
lret
ret
sbb
xchg
inc
add
arpl
aaa
mov
mov
das
jo
mov
fidivl
sbb
sub
mov
inc
cmp
test
scas
ror
fwait
ja
push
fistl
pusha
mov
jp
mov
mov
push
push
int
jp
fsts
jae
jge
push
adc
loopne
inc
scas
loop
push
enter
lret
add
cmc
hlt
pop
sbb
lock
negl
jo
lods
inc
xchg
sub
jmp
jae
pop
jle
cmpsl
mov
push
jo
movsl
adc
add
xor
push
movsb
mov
icebp
mov
sub
pop
mov
mov
in
scas
jo
in
call
jo
xor
shll
dec
jg
sub
jl
js
xchg
jp,pt
jne
xchg
or
xor
xor
jo
xchg
mov
data16
or
ret
mov
sbb
add
push
loopne
fnstenv
jo
dec
sub
in
test
pushf
jl
in
inc
add
mov
sbb
and
mov
cmp
push
outsb
mov
mov
orl
cwtl
movsb
mov
xchg
dec
insl
je
pop
jle
aad
mov
mov
jo
push
push
hlt
mov
rorb
inc
dec
jo
aas
popa
or
cmp
xor
dec
stos
cmp
pop
add
jo
das
imul
pop
jne
nop
xlat
add
aam
xor
cmp
push
insb
lods
or
pop
xor
fwait
mov
ja
xchg
and
popf
sbb
out
xchg
mov
lock
jae
mov
loop
mov
jmp
mov
inc
icebp
xchg
lock
fimull
aam
xchg
les
insb
nop
push
jo
mov
dec
fmuls
cmpl
dec
adc
jo
pop
xor
aad
stc
or
push
cmc
imul
add
jo
sbb
push
pop
push
xor
cmpsl
adc
cmp
cmp
stos
pop
fs
adc
xchg
mov
push
insl
sub
xor
dec
imull
jo
xorl
push
stc
fucom
jo
xchg
mov
pop
lea
rolb
cmp
jo
mov
push
jp
sbb
and
push
popaw
mov
push
or
lcall
stos
jo
pop
adc
jle
mov
lods
in
test
lret
jo
sahf
jae
aam
in
gs
adc
daa
cmp
mov
pop
jge
call
scas
push
stos
dec
mov
nop
xchg
mov
xor
int3
cmp
jl
into
iret
xchg
or
repnz
inc
aaa
mov
lret
mov
outsb
loopne
cmp
add
imul
cmp
cmpl
xor
clc
jo
jbe
xor
mov
popf
test
dec
sub
rclb
xchg
pop
jmp
repnz
addr16
pop
loop
mov
ret
xchg
cmp
jo
mov
leave
imul
scas
dec
je
mov
shll
add
pop
stos
sbb
ds
aaa
aad
push
jo
mov
mov
jp
dec
lods
mov
adc
mov
frstors
lahf
xchg
repz
out
rcll
jp
psraw
xchg
jg
ja
pop
insl
add
mov
mov
popf
xor
jecxz
jo
cmpb
dec
or
xchg
pop
out
jb
ljmp
jbe
rorb
xor
jo
jge
adc
or
push
ja
jle
lret
das
inc
push
stos
js
cmp
ficomps
in
or
jl
push
cmp
jns
xchg
adc
mov
sbb
mov
jle
imul
add
ljmp
fnstenv
sub
ror
int3
push
push
pop
out
push
jo
addr16
sub
or
xchg
cwtl
sub
ja
stos
add
dec
lock
jo
mov
jmp
es
mov
sub
rcll
push
mov
inc
iret
adc
std
sarb
popa
mov
clc
jo
pop
loopne
sub
dec
sub
shll
leave
call
mov
dec
dec
sbb
push
adc
xchg
xchg
adc
scas
lret
dec
dec
jmp
push
lcall
inc
adc
push
data16
jbe
loope
add
cld
mov
mov
mov
xor
fdivl
test
mov
xchg
divb
add
mov
lods
fists
cmp
pop
and
bound
pop
outsl
rcrl
mov
insb
insl
jmp
and
jne
test
mov
fs
aaa
or
xchg
mov
xor
repz
or
test
inc
cmp
xchg
inc
jo
jno
lock
in
sbb
or
push
pop
sahf
jo
loopne
xchg
push
inc
shll
push
sbb
push
imul
les
cmp
sbb
daa
loopne
imul
mov
xor
jo
ja
outsb
mov
lea
int3
push
pop
adc
decl
xchg
fisttps
dec
lock
add
sbb
lretw
dec
mov
rcrl
jo
mov
xor
enter
xchg
adc
nop
fldl
cmp
mov
flds
dec
sti
stos
insl
pop
adc
repnz
add
popf
jge
jo
dec
aas
inc
push
pop
mov
int
cmc
insb
fdivl
rcl
jo
sbb
jecxz
es
pop
clc
outsl
imul
cmp
imul
or
sub
cld
jae
pop
mov
sahf
lods
cmpsl
xchg
jg
jo
aad
push
fcompp
jo
aam
sti
rcrb
fistl
jp
mov
pop
mov
or
sbb
jbe
add
lock
int3
arpl
jno
ja
inc
in
jo
sarb
jle
ja
dec
aam
dec
sti
adc
adc
jge
sub
and
xor
inc
pop
xchg
add
in
daa
ja
pop
ret
adc
ret
mov
sbb
jp
sub
daa
out
and
in
hlt
nop
jl
cwtl
std
dec
jecxz
adc
inc
filds
lahf
jo
jge
mov
rcll
jmp
pushf
not
mov
or
leave
imul
push
idivl
xchg
inc
xchg
fstpt
movsb
mov
xchg
lea
ja
sbb
fcoml
jbe
cltd
mov
jae
fistl
repnz
inc
mov
shll
mov
xrstor
mov
into
adc
push
stos
cli
jns
dec
cmpsb
mov
xchg
test
sub
pop
test
stos
adc
push
jnp
xor
xchg
inc
fwait
mov
cmp
jb
and
dec
jnp
xchg
xchg
jnp
mov
push
mov
ret
mov
xlat
sub
sti
jne
iret
fldlg2
xchg
xchg
pop
add
push
jnp
xor
subl
stos
test
cli
lret
mov
pop
sti
jnp
add
push
xchg
in
or
sti
inc
sahf
into
outsb
je
rorl
ss
xchg
jp
jo
and
sub
xchg
test
push
sti
sub
sub
jnp
mov
and
fiaddl
sbb
jge
fwait
jmp
or
enter
adcl
sbb
mov
nop
aas
test
stos
sub
inc
in
add
pop
fs
nop
jb
movl
in
out
jg
adc
mov
pop
nop
enter
or
ss
sub
aas
adc
dec
mov
es
out
ljmp
pop
xor
call
sbb
inc
pop
xchg
mov
jge
hlt
xor
imul
sti
jmp
inc
fstl
add
sarl
ljmp
fs
cwtl
cmp
lcall
or
lahf
cmp
cmp
in
add
xor
mov
outsl
fstl
clc
sub
fwait
movsb
iret
pop
aam
aam
sahf
leave
inc
jecxz
mov
mov
pop
xchg
jmp
pop
setl
arpl
mov
xchg
push
cwtl
push
movsl
lret
xor
in
pop
jg
test
mov
xor
and
mov
dec
rorb
enter
and
out
fwait
dec
and
cli
ds
js
dec
cmp
loopne
push
mov
out
out
lds
adc
mov
jo
pop
mov
push
imull
jge
xchg
sbb
jno
pop
test
lea
cmc
pop
jl
lods
lock
popf
mov
mov
push
iret
lock
xchg
mov
mov
or
jbe
inc
mov
and
jmp
jg
mov
mov
mov
shll
and
scas
aas
jae
xor
into
mov
xor
adc
movsb
in
lods
adcl
outsb
cmc
mov
and
jns
xor
cld
cmp
cmp
cld
int3
hlt
push
and
mov
mov
clc
fwait
mov
mov
push
and
push
fwait
adc
arpl
leave
repz
in
xchg
inc
jbe
jnp
lret
jecxz
push
push
adc
add
int
dec
and
or
cmp
movsb
pop
je
mov
std
out
aam
and
dec
xchg
add
pop
repnz
pop
xor
mov
clc
das
xlat
mov
jmp
sbb
test
cmp
in
sub
xchg
shll
add
pushf
arpl
test
inc
fmull
push
push
lahf
cmp
push
sub
pop
pop
jo
mov
out
ret
mov
inc
xor
hlt
stos
and
sahf
out
sub
pop
or
push
out
jo
cltd
pop
lret
pop
repz
push
adc
cltd
xchg
shr
pop
push
mov
cli
or
inc
cmc
push
mov
mov
inc
push
shlb
push
inc
out
loope
test
adc
out
jne
mov
out
ret
mov
or
in
dec
xor
fdivp
add
push
mov
mov
or
pop
push
xor
and
jl
cmp
call
popf
push
push
and
inc
js
nop
jnp
test
lock
inc
inc
mov
loopne
cwtl
lcall
insl
xor
mulb
sbbb
sbb
mov
push
das
outsb
mov
cmp
ss
nop
sbb
sahf
xor
in
xor
shll
jb
iret
adc
pop
dec
jle
cwtl
out
popf
xchg
push
insl
pusha
sbb
xchg
push
or
outsb
dec
jbe
mul
xorb
je
fwait
cmp
dec
xchg
shll
or
out
push
cmp
push
das
or
leave
mov
sub
mov
mov
inc
in
lock
mov
pop
sub
add
cmpsl
cmp
sbb
movsl
nop
push
add
aam
sbb
xchg
mov
outsb
out
pop
outsb
mov
scas
callw
jle
and
scas
test
or
aam
fsubp
sub
shr
sub
adc
loopne
ficoms
dec
jb
fwait
not
call
xorb
and
cwtl
test
xor
xchg
adc
xor
push
cmp
xchg
lods
pop
flds
das
xchg
js
or
or
jle
push
add
sti
mov
je
push
clc
sbb
fsubr
sbb
iret
fcmove
mov
out
add
jl
sbb
ss
mov
cwtl
push
addr16
insl
loopne
or
xchg
insb
jno
fdivrs
cmc
iret
add
aad
js
std
xchg
sbb
pop
pop
mov
lret
jl
and
xor
xchg
pushf
jmp
inc
inc
add
in
adc
inc
andb
pop
out
out
dec
push
int3
imul
loop
js
push
or
inc
inc
mov
daa
dec
loope
sub
ficoms
outsl
mov
adc
xchg
inc
xchg
push
in
sbbb
ds
jmp
sti
clc
insb
aad
test
sub
aaa
dec
inc
mov
sub
lcall
inc
inc
jge
shll
loopne
jg
ss
jae
mov
rcr
cmp
movsl
xor
jp
mov
push
pop
js
add
pusha
imul
push
out
or
adc
pop
bound
dec
pop
jnp
scas
out
jo
xor
mov
or
push
push
addr16
xlat
enter
das
add
jp
mov
nop
mov
push
sbb
inc
xor
and
jo
addr16
cmpsl
sbb
stos
jo
adc
push
jo
inc
pop
xorb
sub
xchg
mov
adc
inc
pushf
jmp
ret
jl
dec
jmp
jo
cmp
arpl
jo
or
push
loop
jne
cmp
push
xchg
icebp
mov
sub
fidivl
sti
ret
into
inc
jo
lret
pop
cmp
movsb
pop
mov
inc
adc
push
and
test
xchg
das
push
mov
js
fs
adc
jbe
xchg
les
jo
loope
mov
scas
into
sbb
pop
dec
rcll
sub
mov
test
jo
pop
and
repnz
sub
jo
icebp
push
into
push
dec
cmp
and
int3
jo
sahf
jbe
sar
xchg
jo
iret
xchg
jmp
jo
cmpb
add
ret
mov
jo
push
sbb
jo
shll
pop
pop
xor
mov
or
insl
call
lea
daa
mov
mov
outsb
leave
pushf
fldcw
ret
and
jmp
in
insl
inc
xlat
lock
push
inc
lods
jae
push
cmpsb
leave
negb
mov
jle
sbb
fsubrp
aaa
int
aad
dec
xchg
mov
inc
rorb
in
shrl
loop
sub
sub
filds
std
ds
mov
ljmp
imul
mov
jno
cmpsb
push
add
stos
jo
xor
addr16
jne
fisttpl
xchg
mov
cmp
into
sub
xchg
int
jo
enter
std
mov
jo
neg
pop
dec
sarl
mov
notl
mov
cmc
repz
or
jge
sub
xchg
jo
xlat
movsb
add
dec
pop
inc
jo
pop
jge
dec
and
mov
push
pop
hlt
mov
es
outsb
jo
push
arpl
xor
mov
fwait
cmp
jo
xchg
sbb
bound
adc
pop
cmp
jecxz
push
jecxz
xor
jmp
fucom
mov
repnz
jo
jp
fs
ret
mov
in
mov
insl
push
push
imul
into
push
sbb
gs
and
out
pop
mov
sbb
ret
sub
sub
jo
jge
inc
fwait
push
out
jo
std
xor
jo
or
outsl
pop
aam
ret
pop
sbb
fwait
call
push
insb
fists
in
je
enter
add
xlat
or
stc
cmpl
lret
inc
subl
jg
pop
add
stos
xor
xor
jnp
inc
xor
scas
jo
nop
push
test
xchg
loopne
push
mov
popa
jns
fstps
cmp
xor
sbbb
in
jo
out
and
insl
dec
dec
pop
cmp
pop
loope
add
in
dec
mov
lret
js
mov
movsb
nop
cmp
stos
dec
sub
push
clc
push
lds
push
lret
shrb
xchg
xchg
iret
shlb
ja
jl
add
xchg
outsb
in
test
pop
mov
xchg
push
jo
mov
inc
push
mov
in
clc
inc
pop
mov
lods
out
cmpsl
and
insl
jp
std
dec
out
push
mov
sbb
lea
pop
or
iret
jo
push
ret
mov
mov
std
js
xor
outsl
jo
jecxz
cmc
mov
cld
jo
jp
or
pusha
jle
jo
scas
and
cltd
pop
jo
xor
mov
and
dec
mov
outsb
jo
or
sbb
dec
push
or
or
dec
js
and
mov
xchg
jne
xchg
ret
pop
and
out
mov
and
and
sub
shlb
inc
jo
push
mov
adc
or
dec
fimull
pusha
push
dec
sbb
or
adc
jo
sub
mov
mov
jo
movb
je
xchg
sbb
push
hlt
clc
insl
pop
jo
cld
inc
pop
notl
nop
pop
jae
cmpb
mov
jp
inc
jo
add
shrb
mov
jo
mov
mov
nop
and
ja
xor
sar
mov
xor
sti
push
add
push
pop
sarb
push
in
add
mov
xchg
mov
xor
sti
test
mov
inc
add
sbb
and
inc
das
and
jae
jo
pop
mov
jg
outsl
inc
mov
jp
sbb
mov
paddd
xchg
mov
jp
jg
push
inc
adc
xor
pshufw
jae
jg
into
xor
leave
jmp
lahf
push
inc
inc
incb
jo
jl
xor
cmp
jo
sub
rclb
sub
out
ja
clc
mov
movsb
bound
adc
jmp
pop
nop
jmp
fwait
sub
jmp
gs
dec
mov
test
fsubs
push
xor
jo
sbb
roll
jo
add
repnz
dec
adc
mov
mov
mov
jo
push
fwait
sti
mov
jp
jo
imul
movsl
and
popf
xchg
or
mov
jo
loope
sub
push
jo
hlt
sbb
cmp
jmp
push
jno
cmpsb
int
xchg
jbe
mov
sbb
xchg
movsl
arpl
cmp
jecxz
out
fdivrp
xor
sbb
fs
mov
lahf
jne
cmp
addr16
notl
pusha
insl
pop
adc
dec
mov
inc
push
dec
sub
mov
bound
fs
inc
lock
push
and
fidivl
cmp
ja
shrl
sbb
insb
outsl
icebp
stos
pop
push
xchg
test
sarb
xchg
ja
xor
je
or
loop
mov
ss
sbb
push
popa
jmp
or
ss
jo
js
pusha
mov
lret
adc
add
or
call
or
jo
aad
mov
jae
imul
lea
into
lods
jnp
xor
push
stc
inc
xchg
imul
dec
mov
rorb
cmp
pop
addps
enter
jp
dec
inc
push
lea
mov
insl
out
xor
pop
adc
cmp
ss
mov
loop
or
pop
jne
jmp
pop
sti
lcall
inc
pop
and
popa
mov
lahf
or
bound
cs
or
xchg
push
push
insl
inc
or
mov
mov
mov
pop
jo
mov
js
insb
mov
pop
mov
mov
lock
mov
les
call
out
jnp
pop
pop
jo
popf
push
ds
mov
mov
cmp
jno
aaa
testl
add
jo
sbb
adc
movsl
or
jo
dec
mov
cmp
cmp
mov
fs
loope
pop
sub
je
sahf
in
pushf
pop
lock
jbe
or
xchg
fsubrp
xor
inc
jns
jmp
insl
cmp
fwait
xchg
fsubrl
push
ljmp
mov
jae
dec
pop
mov
jae
sub
and
out
jp
ja
pop
inc
bound
orb
aam
pop
sahf
nop
add
xchg
push
jo
dec
cld
outsl
mov
pop
pop
in
scas
out
cmpsb
add
jae
aad
inc
push
inc
nop
rol
jo
xchg
mov
daa
lret
jne
push
pop
add
xor
scas
jo
testl
movsb
push
stos
dec
insl
mov
push
fisubrs
mov
sub
xchg
xor
in
scas
jo
push
cmp
jo
addl
xchg
jo
out
push
aas
enter
loopne
dec
cmp
scas
je
xchg
jae
sbb
imul
das
jnp
sbb
loope
cmp
xor
inc
sti
cmp
jo
xchg
jo
shrb
std
cmp
mov
pop
mov
push
sti
add
insb
int3
jo
out
mov
jae
mov
sbbl
xor
cwtl
in
mov
and
adc
jg
jo
test
mov
xor
jo
dec
dec
push
outsl
mov
jnp
push
push
inc
iret
mov
jo
xchg
bound
push
dec
sbb
pop
ja
jo
sub
fmuls
xor
daa
xor
pop
out
and
es
clc
jl
ret
sti
lock
imul
mov
adc
test
fisttps
fsubrs
mov
loope
sub
or
fbld
mov
les
pusha
push
mov
sti
cmp
push
repz
dec
das
mov
jle
clc
dec
out
fs
in
sub
mov
out
sub
jl
lods
in
sbb
rolb
xchg
xor
xchg
push
cmp
jmp
arpl
shlb
or
mov
mov
mov
nop
jg
data16
cwtl
gs
sbb
insl
mov
sbb
sbb
leave
idiv
or
es
sbb
cmp
inc
daa
jne
and
stc
mov
dec
push
mov
sbb
lea
cmp
push
lea
adc
loopne
jl
push
inc
aas
jl
lahf
in
xor
sub
mov
dec
push
sub
jmp
iret
in
aaa
sti
mov
jg
daa
pop
xchg
cld
arpl
jnp
rcrl
push
lret
sbb
mov
mov
sbb
int3
add
loope
repz
into
es
mov
popf
into
push
std
clc
jmp
adc
andb
enter
inc
insl
push
nop
mov
test
je
repnz
mov
aaa
mov
loopne
adc
sbb
lods
sbb
adc
aas
pop
jmp
lret
dec
dec
pusha
inc
addr16
jae
cwtl
js
hlt
loopne
lods
sub
mov
mov
push
dec
adc
inc
or
lret
xchg
pop
cpuid
lret
dec
lods
cmp
sti
scas
ss
xchg
mov
jmp
cwtl
aas
loope
pop
out
insl
lret
enter
sub
scas
pop
pop
cmc
sub
insb
mov
mov
mov
pop
popf
jmp
xchg
and
clc
cmc
mov
or
iret
shll
and
fisubrl
fistl
xchg
loope
aaa
out
jle
fucompp
es
popf
test
test
xchg
inc
adc
push
jp
add
nop
and
popa
bound
xchg
insl
scas
cli
cmp
stos
inc
mov
dec
fisubrs
cmp
movsb
imul
cwtl
sbb
add
xchg
lcall
popa
in
lock
dec
pop
das
mov
mov
add
xchg
js
pop
rolb
push
push
sub
scas
ds
jl
sbb
mov
hlt
push
hlt
fdivs
pop
out
jp
rclb
or
mov
sub
jecxz
push
stos
scas
adc
jno
mov
jmp
pop
imul
mov
stc
mov
fists
xchg
or
inc
test
out
push
mov
fsubrl
lods
dec
mov
sbb
nop
xchg
jno
fs
mov
insb
clc
cwtl
fwait
les
xchg
sbb
push
enter
lea
ss
fnsave
xchg
jecxz
sub
jo
test
rcll
sbbl
sti
jbe
cmp
pop
pushf
jle
jo
cli
xor
and
push
mov
mov
inc
xchg
adc
sub
sarb
or
js
into
ja
hlt
jo
rcr
scas
mov
mov
inc
sub
jmp
dec
fs
test
xchg
mov
inc
and
cmp
cltd
in
cmp
js
dec
imul
lds
push
leave
cwtl
jo
test
xorps
movsb
inc
xor
lock
pop
mov
stos
push
in
pop
and
jo
sbb
out
je
mov
out
sbb
inc
cmpsl
jo
mov
add
insl
in
pop
popf
add
mov
jo
adc
jns
stos
mov
or
dec
jae
imul
push
fmuls
add
mov
bound
push
dec
mov
pop
push
add
iret
dec
out
mov
and
push
clc
push
push
or
xchg
adcl
lret
scas
adc
fstpt
rcll
hlt
sub
jb
mov
inc
add
insb
repnz
sub
orb
outsb
sub
cmc
push
fidivl
lds
mov
cmpsl
jo
inc
add
js
pop
insl
jo
bound
lcall
test
ja
cmp
xchg
orb
mov
pop
ret
mov
push
dec
lods
jo
push
sbb
cwtl
out
je
repz
insl
xchg
out
jo
pop
mov
push
jo
js
dec
in
mov
pop
mov
mov
push
mov
gs
pop
and
and
add
aaa
dec
addb
jecxz
push
ja
ja
pop
loopne
inc
cmpsb
stc
jo
inc
xor
jo
inc
movsl
mov
fmuls
dec
push
mov
dec
dec
pop
push
xor
mov
dec
pop
add
dec
int
pusha
push
jo
pop
mov
movsb
jo
push
mov
sub
jmp
mov
xor
movsl
lcall
cmp
faddl
mov
xlat
jnp
xchg
dec
xor
test
mov
in
rclb
mov
dec
dec
xchg
jp
rclb
sar
in
es
sub
push
adc
test
lods
jmp
gs
jnp
aas
nop
ds
dec
sti
jo
dec
into
push
or
ja
xchg
inc
pop
lock
imulb
iret
enter
std
mov
jb
ds
in
in
mov
jge
shlb
xchg
cmp
cli
outsb
jg
popa
cs
xchg
push
mov
in
addb
lret
cwtl
fildl
sub
jae
mov
pop
dec
ljmp
aad
cs
in
imul
testb
adc
jo
xchg
inc
jo
jne
je
mov
orb
dec
aaa
mov
mov
cmp
push
or
call
int
mov
mov
xor
out
rcr
pop
push
movsb
insb
fdivs
and
shrl
test
cmp
add
push
jo
out
mov
cmc
and
pushf
stc
jo
fsubs
cltd
mov
inc
jo
push
dec
stos
negb
jae
push
fmuls
movsl
mov
insl
dec
test
fxtract
and
nop
xor
jo
push
mov
push
das
mov
mov
insb
jo
rol
cmp
add
daa
sbb
fs
ja
push
mov
inc
mov
fcoml
cmpsl
pop
imul
inc
xchg
inc
mov
xlat
cli
call
push
out
pop
iret
mov
mov
adc
xlat
mov
and
mov
nop
jl
xor
sub
sahf
push
in
mov
inc
dec
mov
add
cmpsl
cmc
mov
ljmp
or
inc
jo
lock
test
into
fwait
or
cwtl
push
sti
cltd
add
sbb
ja
jbe
arpl
adcb
adc
push
rcll
fsub
mov
fld
inc
subb
mov
outsb
std
stos
lahf
into
insl
stos
test
stc
mov
cmc
adc
push
push
xchg
push
xchg
and
in
out
push
addr16
mov
mov
jo
testb
jo
inc
inc
fcmovnbe
pop
gs
sub
push
jo
or
or
jae,pn
sbb
call
std
repnz
iret
and
rcrl
dec
push
cmp
dec
dec
ja
stos
mov
movsl
xor
pop
jo
mov
mov
mov
jecxz
add
push
inc
mov
divb
sbb
in
pop
jg
test
icebp
pop
lock
stos
mov
shlb
sub
or
fbstp
pop
jae
mov
mov
es
in
jo
cmp
jnp
int
sub
pop
outsb
je
lock
ret
and
pop
out
and
and
fisubl
sarb
sub
jne
loopne
or
pop
xchg
test
fnstenv
test
movsl
inc
push
push
dec
jae
insl
lea
mov
es
test
lods
xchg
xchg
movsl
pop
and
data16
mov
call
icebp
ret
xchg
fdivrl
jo
sarb
nop
jns
lea
insl
ret
rorl
add
mov
and
pop
lods
cmpsb
push
fldt
lret
mov
jae
mov
jno
and
movsb
push
ja
and
lcall
push
ljmp
push
scas
jae
or
xor
mov
sbb
push
jge
popf
in
ret
outsl
out
subb
ret
sub
mov
lds
sti
push
and
test
mov
jo
aaa
fmull
addr16
inc
push
outsb
sbb
daa
mov
pop
adc
inc
pop
jo
adc
mov
clc
pop
in
xorb
fbstp
jb
test
sbb
mov
and
rolb
xor
cmpsb
out
nop
pushf
sub
divb
and
fisubrs
das
sub
xor
fsubl
cmpsb
dec
jp
jg
add
xchg
mov
jmp
shl
fs
out
lods
inc
add
rcr
dec
int3
and
cld
test
lret
mov
or
mov
inc
bound
repz
in
cwtl
adc
jo
aam
out
mov
sbbb
jmp
jle
dec
dec
cld
cli
mov
pop
jae
dec
enter
inc
rorl
test
mov
adc
je
or
outsb
sub
jo
pop
mov
dec
jo
das
aad
outsl
push
es
in
jo
in
jecxz
cld
movsl
mov
jae
out
out
imul
adc
or
jno
out
jo
lcall
out
pop
sub
ret
jo
in
push
inc
sbb
jle
stos
dec
xchg
xchg
inc
mov
into
lods
sub
push
lock
xor
xorb
fdivr
js
scas
adc
int
push
test
add
or
mov
arpl
out
iret
jo
mov
js
push
lea
shr
mov
push
fbstp
mov
or
ret
int3
call
xor
jo,pt
das
sbb
into
insb
mov
jp
out
push
ret
dec
push
insl
or
cmp
xchg
ficomps
leave
lret
das
adc
out
jae
stos
push
addl
jo
or
jo
pushl
sbb
movsl
jo
push
stc
les
out
jo
outsl
fldenv
jo
jnp
mov
dec
cld
shll
jb
sbb
daa
jecxz
mov
jo
in
cli
cmp
xor
out
mov
jge
mov
mov
mov
cmp
jo
and
push
or
jae
jno
lock
imul
cmp
lret
jo
or
jo
pop
cwtl
and
inc
shl
dec
jne
lock
aaa
jo
cmpl
dec
mov
mov
xor
fxch
repnz
jns
mov
imulb
sub
ret
lock
rcll
jge
leave
sub
jmp
aas
xchg
rorb
es
fwait
push
sbb
adc
lods
adcl
dec
scas
out
mov
hlt
stos
jnp
lock
loop
sub
enter
pop
inc
dec
icebp
fmull
loop
pop
xchg
xchg
jbe
loop
mov
aaa
mov
jae
lods
cmp
xchg
in
xchg
stc
ss
mov
lret
fidivrl
mov
arpl
mov
roll
mov
inc
jnp
hlt
adc
adc
push
int3
mov
test
and
loopne
mov
and
xchg
inc
jl
lahf
rcrb
pop
shr
lcall
iret
out
mov
mov
sub
fcomps
xorb
pop
int3
cmp
arpl
imul
call
adc
xchg
jne
out
sbb
into
adcl
push
mov
ret
sub
aaa
jb
jb
mov
push
jae
test
pushf
sbb
adc
in
inc
test
nop
pop
repnz
loope
mov
pop
shl
jne
mov
insl
in
icebp
mov
sbb
fnsave
pop
xchg
mov
jl
lret
fiadds
mov
or
jmp
into
testb
push
mov
xchg
pop
mov
mov
mov
fidivrs
add
lret
test
or
test
add
push
sub
xor
into
leave
mov
jno
mov
xchg
mov
test
lock
dec
adc
fldl
lret
cli
inc
xor
pop
mov
rcll
inc
xlat
or
or
out
nop
pushf
stos
aas
jmp
nop
jl
jbe
ljmp
jle
push
mov
inc
decb
push
mov
mov
xchg
xlat
jo
add
cwtl
push
and
jns
in
jnp
mov
and
lock
fisubs
jnp
adc
adc
cmc
and
xchg
jno
pop
xchg
pop
mov
gs
jbe
aas
lds
add
mov
sub
xor
mov
movsl
cmpb
jp
mov
inc
jo
mov
stos
adc
cwtl
rorb
loope
fucomi
sets
insb
cmp
fsubp
imul
repz
and
xor
adc
inc
xchg
out
arpl
add
sbb
cld
mov
addr16
dec
xchg
loope
aas
cmpsl
mov
sub
dec
sbb
lcall
clc
mov
lock
xchg
cmc
xchg
push
mov
in
lods
mov
lds
test
rorl
imul
ljmp
jno
jb
push
dec
push
enter
std
push
push
leave
cli
out
xlat
movntq
pop
dec
lret
aas
jno
test
scas
inc
loop
push
orb
xchg
add
lcall
xchg
pop
inc
in
ja
cwtl
xorb
adc
aas
pop
and
sub
or
jle
cmp
pusha
or
rcrl
call
push
xchg
dec
jnp
and
mov
loopne
cmp
and
xchg
pop
pop
lea
cli
mov
mov
test
mov
and
je
out
dec
pop
inc
testl
loop
gs
js
mov
outsb
lods
cwtl
out
xorb
push
sbb
push
xchg
lds
push
fists
rcl
dec
lock
out
mov
into
jb
dec
xchg
pop
mov
add
es
sbb
pop
into
scas
mov
xor
xor
push
or
out
into
mov
adc
loope
outsl
xchg
cmp
into
fldt
test
insl
mov
push
xor
dec
jle
dec
xor
jnp
lea
adc
dec
outsb
sbb
cmp
out
add
xchg
jb
icebp
sub
push
popa
jb
inc
scas
mov
sbb
xchg
mov
lds
imul
xor
xchg
out
add
adc
mov
and
mov
aas
mov
scas
push
mov
xchg
lret
int3
in
in
lahf
pop
cmpsb
sub
mov
sarl
push
insl
fisubrl
shlb
mov
mov
lea
mov
xchg
mov
mov
dec
movsl
mov
leave
xor
sbb
adc
aad
or
flds
clc
or
fimuls
sub
lcall
out
mov
test
push
sub
mov
dec
jno
jo
inc
dec
and
add
push
mov
or
setl
or
inc
pop
sahf
test
int3
jo
pop
sub
and
cmpsb
push
in
or
notb
xlat
sbb
add
or
or
jo
cmc
arpl
sbb
sub
jmp
adc
ss
leave
popa
pop
out
mov
and
mov
icebp
inc
fucomp
mov
adcb
shr
jo
inc
pop
xchg
lea
pop
xchg
jo
and
loope
mov
cmp
shll
sarb
jb
daa
outsl
lret
push
cmpsb
jo
jmp
out
dec
mov
xchg
ljmp
pop
jmp
cwtl
inc
dec
mov
lahf
mov
mov
mov
shrl
xorb
dec
cwtl
mulb
mov
repnz
cmp
xchg
dec
push
mov
inc
rcl
mov
and
push
push
jo
loop
push
mov
cmp
jo
mov
jl
add
xchg
aam
mov
mov
bound
jo
mov
insl
adc
sbb
jo
daa
pop
xchg
ljmp
adc
cmp
insb
cmc
aas
popf
fwait
cmpsb
jo
clc
outsl
jle
sti
mov
mov
or
fcmovne
push
mov
xchg
fdivrl
add
xorb
imul
lock
cmp
movsl
jo
stc
mov
push
push
mov
mov
pop
jb
jae
and
loope
dec
cmpb
jo
sbb
insb
dec
xchg
xchg
jae
out
daa
dec
jo
loopne
out
jge
sbb
push
lods
push
mov
dec
enter
dec
push
sub
jge
lea
cmpsl
sub
rcll
jo
das
scas
int3
sub
sub
dec
jo
movsb
daa
out
push
push
jmp
fstps
jmp
cmpsb
sub
dec
aaa
mov
cltd
lea
pop
js
dec
cmp
icebp
jo
shl
loope
mull
cltd
imul
mov
sub
sahf
dec
pop
mov
jl
jmp
xlat
cmpsb
sbb
fidivs
ja
ljmp
jp
and
nop
mov
cmp
pshufw
sbb
jbe
insl
mov
fidivs
movsl
xor
sbb
arpl
shr
pop
push
aad
jmp
dec
mov
inc
inc
outsb
xchg
imul
dec
add
jo
in
mov
adc
js
cmp
mov
sub
jmp
inc
dec
jo
mov
cmp
or
jo
pop
xor
ficoms
lods
jo
mov
xchg
sub
xchg
out
jbe
mov
jo
imul
shlb
xor
les
sbb
cli
adc
and
adc
repz
add
jo
xor
add
andl
push
inc
mov
rcrb
js
test
xchg
xchg
or
jo
dec
jae
iret
cmp
test
les
add
mov
sub
insb
fisttpl
mov
dec
dec
dec
lret
mov
lcall
adc
lea
mov
add
jae
lret
push
rcll
fmuls
jo
jle
cmp
cmc
daa
push
pop
jbe
dec
movsb
jp
jo
pop
mov
adc
mov
loope
jae
loop
aad
xor
movsb
gs
jo
xchg
adc
mov
push
pop
push
les
loopne
lock
out
add
jo
mov
jle
jo
lret
jno
je
aad
dec
pop
xor
dec
shll
mov
push
cld
insl
jle
push
dec
inc
or
mov
mov
xor
cmp
push
jo
in
shrb
leave
clc
mov
add
cmpl
in
aad
mov
adc
ret
aam
adc
lock
mov
xchg
push
lock
jb
adc
bound
addl
mov
adc
jge
les
inc
jo
cmp
repz
outsb
sbb
mov
jg
push
push
xor
outsl
nop
ret
lret
xchg
sbb
dec
jl
dec
call
lods
jo
jne
shlb
mov
stos
jo
xchg
push
cmpb
mov
mov
mov
jl
aam
dec
xchg
imul
repnz
cmpsl
sub
xor
xchg
sub
jo
clc
and
movsl
and
add
iret
jo
mull
and
jmp
lea
cmc
dec
decl
xchg
push
mov
fs
hlt
insl
cmpb
cmp
adc
mov
cmp
roll
jo
rcr
lret
jns
jo
fimuls
jp
xor
pop
dec
repz
jo
daa
mov
xor
stc
sub
push
jl
mov
aad
mov
mov
xchg
shlb
inc
aaa
inc
xor
ja
xchg
mov
test
daa
push
out
mov
mov
or
pop
das
ret
pop
push
xchg
insl
xor
push
adc
or
lods
jae
mov
jle
and
scas
add
jo
inc
lds
xor
xorl
mov
mov
push
dec
arpl
mov
insl
and
mov
jo
adc
mov
sub
adc
pop
shlb
mov
pop
inc
mov
and
xchg
mov
jecxz
mov
or
jns
and
push
loopne
jg
sub
jae
int
xchg
cld
int
test
mov
pop
sbb
sarl
cli
pushf
fcomps
vpshufd
xor
scas
dec
cmp
ljmp
jo
imul
sbb
mov
lea
rolb
movsb
into
lock
mov
js
ss
push
arpl
mov
imul
imul
inc
mov
xchg
adc
xchg
outsb
stc
xchg
jne
aam
adc
jle
stos
lods
jae
outsb
popf
push
cwtl
push
imul
lret
add
xchg
jo
pusha
push
mov
cmp
repz
adc
sbb
jae
pop
popa
inc
inc
mov
push
xor
pop
nop
mov
pop
sbb
stos
movsl
shrl
jo
pop
xchg
pusha
mov
push
jno
and
push
mov
dec
shlb
arpl
xor
lret
xor
and
sub
mov
imul
lahf
push
popa
jae
jo
out
jno
shll
push
mov
jno
addl
scas
mov
mov
jo
shr
ljmp
xlat
jae,pt
push
and
rclb
xor
jo
jecxz
scas
stos
loop
jo
aaa
sbb
cmp
jo
sbb
push
aad
aas
ja
mov
insl
sub
addb
pusha
or
pop
popa
jae
or
dec
push
jo
and
shll
and
shll
jo
mov
adc
mov
push
das
testl
jo
pop
jbe
pushf
sahf
lds
dec
sub
xchg
and
push
adc
sbb
aas
inc
inc
pop
mov
and
jo
sbb
outsb
stos
or
jo
jnp
jns
xor
dec
add
sahf
sbb
dec
jne
push
repnz
lock
inc
adcb
push
imul
or
xchg
aam
lahf
mov
cs
jo
mov
jb
addr16
add
mov
push
int
xor
inc
cmp
and
jno
xchg
jne
cmpsl
xor
cmp
and
push
mov
and
stos
pop
inc
ds
fs
fldt
rcll
or
or
and
movsb
jl
sarl
mov
jns
aas
into
incb
in
jbe
cld
dec
xchg
pop
insl
dec
cmp
add
fidivl
es
adc
pop
test
sbb
cmpsl
cli
push
lcall
mov
jo
loopne
lods
and
push
out
adc
mov
xor
pop
jo
mov
inc
jp
lcall
mov
and
push
push
mov
fdivs
fildl
popf
nop
xchg
mull
sub
jo
inc
sub
jo
outsl
sbb
push
lcall
pop
pop
sbb
cmp
jp
bound
xchg
mov
ret
mov
loope
in
mov
es
popa
jo
mov
inc
rorb
daa
jae
cwtl
pop
ljmp
jo
mov
mov
jecxz
adc
sbb
or
arpl
mov
dec
pop
arpl
in
out
sti
dec
xchg
lock
mov
lods
pop
bound
repz
popa
inc
push
test
sti
add
cmc
call
or
nop
imul
xchg
and
icebp
xor
pop
psubsb
cwtl
xor
fnop
xor
andl
and
pop
enter
mov
sbbl
push
xor
insl
lock
sub
adc
cmpsb
sub
stos
jl
push
mov
mov
mov
cmp
popf
cltd
push
aaa
sub
enter
inc
push
xor
stc
mov
jo
add
inc
or
call
jns
pmaddwd
repnz
std
fnsave
aam
cld
cmpsb
enter
cmc
jg
lock
mov
push
cld
cmp
addr16
push
push
jg
pop
mov
cmp
ds
sbb
rep
movsb
negb
lea
add
pop
jb
pop
xchg
lret
mov
fildll
mov
test
loopne
js
cmp
adc
movsb
mov
lret
xor
cmp
ja
mov
fdivs
addr16
xchg
ret
enter
mov
xor
mov
stos
jl
push
mov
loopne
sahf
add
or
outsb
repnz
sbb
add
and
jo
lahf
or
fildl
fdivr
or
jecxz
push
jo
mov
hlt
stc
dec
jo
sub
xor
mov
push
mov
lret
dec
mov
dec
lret
fdivrs
fucomip
sbb
adc
adc
sub
adc
dec
ja
pop
pop
lock
dec
aad
lock
jbe
enter
xor
je
leave
stos
xor
xor
push
pop
cmp
mov
mov
outsb
push
imul
sbb
pop
cs
outsb
inc
test
dec
test
movb
cmp
iret
ss
sbb
mov
xchg
sahf
lock
sbb
adc
repz
xor
mov
sti
mov
and
enter
sbb
adc
mov
lock
mov
aas
xchg
insl
ljmp
xor
xchg
je
and
mov
rclb
push
dec
mov
mov
dec
ja
pop
sub
xor
hlt
lcall
insl
frstor
mov
fdivs
jg
cmp
fmulp
in
xor
insl
pop
cmp
inc
lock
dec
sub
and
sbb
enter
adc
xor
out
mov
je
test
inc
and
pop
xchg
lahf
ljmp
icebp
aam
push
push
repnz
cmp
nop
pop
test
lods
sbb
push
lret
push
imul
mov
and
cli
mov
add
sub
cmp
xor
inc
and
and
dec
movsb
addr16
dec
repnz
mov
or
jmp
jne
ret
jbe
nop
mov
repz
mov
xlat
jl
pop
push
inc
xor
hlt
test
dec
imul
lock
or
inc
cmp
sbb
dec
xor
ffreep
xchg
lock
push
lods
push
jp
inc
mov
mov
and
pop
les
cmpsl
enter
cmp
mov
into
mov
dec
mov
das
pop
popf
mov
hlt
out
jno
out
lods
xor
je
faddp
imul
sbb
add
push
cmp
xor
sbb
or
or
push
or
adc
les
sbb
lds
mov
jl
lcall
jl
js
int
gs
xchg
or
xchg
or
test
insl
les
aad
in
dec
mov
dec
lea
add
hlt
je
aam
mov
adc
jb
mov
and
lods
jmp
push
addb
mov
pop
lock
push
pushf
shr
ja
mov
in
fs
aad
sbb
cmc
popf
sbb
xor
jno
pop
std
jle
mov
mov
cmp
hlt
pop
lock
shrl
xchg
lods
je
insl
dec
mov
pop
test
pop
pop
add
jo
lret
pop
hlt
imul
push
lret
loop
fs
dec
xor
shr
mov
and
or
jecxz
fdivrs
shll
xchg
pop
cld
hlt
subl
ja
push
nop
add
mov
xor
insl
xchg
lret
mov
and
push
xchg
ss
je
push
enter
or
insl
inc
les
inc
mov
mov
in
mov
push
cmp
and
jle
mov
lock
and
jg
ds
in
mov
sarl
jbe
std
jl
lods
and
out
mov
mov
je
pop
add
and
ja
cmc
pop
mov
jo
fcmove
sbb
adc
push
pop
jo
lret
insb
jne
rorb
jo
movhps
std
xlat
inc
push
in
push
test
jg
enter
jo
inc
shrl
outsl
sub
jp
mov
xor
or
stc
jl
push
pusha
inc
mov
jl
stos
jno
loope
dec
aaa
pop
mov
cwtl
lock
or
test
or
hlt
adcb
out
sbb
leave
aad
sub
test
mov
push
aam
shll
lock
mov
jb
test
in
aaa
hlt
adc
mov
orl
pusha
or
xor
and
sbb
inc
mov
dec
or
dec
jo
mov
lods
hlt
push
dec
push
mov
sub
or
mov
outsl
jb
pusha
pop
and
inc
fdivs
movsl
and
push
icebp
add
xor
outsb
clc
jl
pop
insl
cwtl
mov
pop
pop
sbb
shrl
fnstenv
fdivl
sub
jbe
xor
cmpsl
and
adc
jne
adc
repnz
loopne
clc
test
aam
adc
mov
pusha
jns
outsb
repz
inc
enter
aam
test
fs
sbb
pop
loope
pusha
cmp
iret
pop
pop
xchg
push
pusha
outsb
hlt
stc
mov
frstor
mov
jne
cmp
js
subb
cmpb
xor
dec
lods
in
pop
jnp
pusha
sub
sub
cmp
enter
push
icebp
scas
sbb
loopne
pop
orl
jl
int
dec
ja
call
push
movsb
ja
in
adc
sub
insb
js
popa
xchg
xor
xchg
mov
jl
int
into
mov
sub
out
and
fnstsw
xor
cmp
rcrb
push
insb
xor
out
xor
rorb
pop
mov
sbb
repz
mov
jmp
loopne
dec
loopne
into
inc
lret
cmp
cmp
jbe
addb
es
loop
push
mov
sub
inc
outsb
dec
add
lock
sbb
mov
sub
lahf
test
enter
add
jbe
lock
cmp
pop
lods
sub
adc
hlt
dec
and
daa
pop
test
nop
aam
les
int
lock
jae
pop
out
lret
xchg
sti
cmp
or
ja
xor
push
in
fs
dec
jno
pop
jg
in
inc
aas
negl
inc
jnp
mov
cmpsb
mov
icebp
sub
jl
out
loopne
cs
pop
push
inc
cmp
jno
or
mov
hlt
shl
loopne
inc
push
out
sub
hlt
cmpb
jnp
jl
aad
out
orb
mov
imul
and
or
popa
jno
jmp
fsubrs
dec
xor
jns
leave
mov
push
mov
mov
mov
subl
mov
imul
repz
and
mov
or
mov
scas
repnz
outsb
das
call
add
xor
push
jl
sarl
cmp
popa
lret
push
test
into
and
sbb
xor
cmp
jne
or
inc
dec
mov
outsb
sub
xchg
lock
sahf
mov
and
mov
call
ja
insb
sbb
jae
les
test
addr16
movsb
out
push
jmp
movsb
xchg
push
inc
frstor
jle
enterw
call
jno
frstor
out
xor
mov
pop
mov
or
enter
mov
subb
or
mov
hlt
enter
inc
sub
aaa
js
xchg
xor
test
scas
enter
movsb
jno
outsl
xor
mov
jb
or
dec
dec
push
push
push
outsb
xor
pop
sub
sbb
rolb
pushf
fst
adc
dec
sbb
dec
cs
imul
cmp
das
push
loopne
imul
xchg
pusha
arpl
hlt
push
gs
sbb
push
je
mov
dec
das
mov
in
push
shlb
lods
sub
js
insl
and
in
repnz
pop
push
dec
test
lock
lret
hlt
out
mov
add
inc
and
inc
test
fiadds
xor
xchg
jnp
cmpsb
hlt
test
mov
mov
xchg
push
jbe
mov
lods
test
and
pop
out
add
mov
jno
jmp
mov
push
arpl
in
xorl
mov
sbb
out
jno
movsb
mov
ds
dec
lret
sbb
rorb
push
jb
fnstenv
loopne
js
je
sbb
cwtl
aas
in
out
jl
mov
cmp
loopne
jno
loope
inc
jo
fimull
enter
mov
das
pusha
mov
sub
mov
push
sub
jle
enter
push
cmp
outsb
ffree
or
push
rorb
mov
fs
enter
add
aaa
daa
mov
jbe
movsb
pop
call
or
aam
bound
scas
cmpsl
jnp
or
outsb
cmpb
ja
and
xchg
adc
mov
js
nop
jbe
jmp
mov
aam
add
xchg
inc
xor
rorl
int
pop
sub
mov
adc
push
sbb
sub
insl
rorl
jnp
mov
in
or
fwait
mov
push
sub
outsl
dec
dec
loopne
outsb
or
jnp
inc
scas
lock
sbb
sbb
icebp
or
aad
jbe
xchg
fdivrs
inc
pop
lret
xadd
adc
xchg
push
push
add
mov
push
cmp
les
cld
xor
xrelease
jne
es
adc
push
xchg
leave
repnz
das
rclb
or
lret
xlat
mov
std
xchg
xor
in
movb
shrl
fsubr
rcrl
mov
inc
inc
test
sbb
in
daa
imul
dec
cmp
movsb
lods
clc
mov
loope
pop
dec
push
or
addr16
ds
jno
sub
scas
gs
mov
sub
push
pop
sarl
rcrb
sbb
adc
insl
adc
iret
mov
mov
shrl
dec
xchg
adc
lea
iret
mov
pop
int3
adc
popa
fdivrl
sub
dec
push
out
es
call
sub
iret
je
add
jno
mov
cs
add
in
xor
aad
pop
movb
stos
fisubs
cmp
cltd
jmp
mov
loopne
test
outsb
dec
ja
movb
cmp
roll
ja
cld
imul
jge
dec
sbb
lock
add
push
ss
push
jo
and
jge
pusha
sub
lock
mov
mov
jecxz
xchg
stos
dec
add
aas
in
arpl
shrl
lahf
ja
adc
lock
enter
fnsave
test
fs
push
mov
pusha
sub
sub
jno
addr16
cmp
incl
cmp
mov
dec
imul
xor
cmpsl
arpl
sub
cltd
xchg
adc
push
dec
dec
test
call
push
push
jb
sub
call
pop
fcoms
rclb
cltd
dec
outsb
xor
data16
pop
push
push
insb
mov
gs
mov
sbb
mov
pop
aaa
es
je
xchg
rol
in
aam
lods
push
out
xorb
inc
out
jne
lock
xchg
jg
lods
sti
pop
in
mov
lret
mov
cwtl
and
sbb
clc
cmp
xchg
jb,pt
out
loope
movsb
aad
dec
xchg
std
mov
aaa
test
das
les
cmp
shlb
or
pop
jecxz
jl
in
int3
xchg
xor
lahf
ja
js
dec
lret
jge
dec
addb
adc
push
sub
hlt
mov
std
dec
adc
fcom
lock
xor
jge
mov
es
sub
and
das
sti
movsb
mov
outsb
sbb
ret
insl
int3
and
addr16
js
push
rorb
xor
fdiv
xchg
mov
lock
jp
jae
or
test
lea
mov
cmc
xchg
in
insb
push
mov
mov
push
das
cmpsl
hlt
adc
xchg
subb
popf
sub
loopne
insl
cmp
in
jg
aad
add
je
cmp
cmp
mov
shlb
mov
dec
and
sub
cmp
ja
push
or
xor
loopne
adc
jno
mov
add
testl
inc
je
dec
dec
sti
push
xor
mov
add
push
fcoms
and
mov
rolb
xchg
jb
inc
jg
dec
mov
jae
dec
out
loopne
push
jne
sbb
push
lcall
pop
sub
xor
enter
insl
shrl
ficoml
adc
mov
test
inc
cltd
fsub
outsl
jbe
shrb
dec
fld
iret
or
jo
push
rorl
push
or
mov
sbb
in
loope
xor
push
js
cmp
sahf
insb
sub
mov
pop
dec
lahf
dec
dec
ss
push
jo
out
bound
pop
in
pusha
push
adc
scas
xchg
or
and
in
pop
lock
fnstcw
fwait
xchg
int3
and
leave
ret
scas
movb
mov
jle
mov
xchg
test
ds
sbbb
imul
push
scas
mov
loopne
loope
xchg
push
enter
xor
jl
mov
mov
sti
imul
fs
mov
nop
imul
xor
out
mov
pop
outsb
in
push
enter
push
xor
leave
das
jbe
lock
push
xor
push
insl
or
sbbb
jl
push
in
sbb
rorl
push
pop
out
adc
xor
jns
hlt
jo
mov
push
sub
mov
inc
insl
sbb
shrb
jp
dec
pop
pop
pop
cmc
popf
and
hlt
cwtl
mov
mov
dec
jmp
loopne
icebp
aaa
jno
sbb
adc
pop
and
cmp
cmp
inc
movl
in
mov
push
fmuls
jnp
add
sbb
hlt
push
inc
xorl
xor
loop
fbld
jl
gs
int
sub
cmp
jno
out
xor
jp
jmp
enter
add
lock
fisubrs
cs
dec
cwtl
enter
fbstp
pop
inc
jo
mov
dec
pop
push
jno
pop
jp
mov
sbb
sub
or
in
xchg
insl
mov
out
lret
or
sub
pop
inc
mov
jmp
gs
int3
enter
aas
dec
in
movsl
ret
jge
inc
cmp
cli
or
mov
add
es
mov
mov
je
loopne
inc
push
popf
push
jnp
hlt
orl
mov
lock
mov
mov
xor
repnz
ss
dec
mov
mov
loope
pusha
jno
outsb
sbb
pop
mov
pusha
and
je
out
lret
test
in
sti
shrb
shll
pop
mov
jle
mov
loop
lds
jl
pop
lock
movsl
push
dec
stc
sub
jno
mov
lds
and
sbb
fcmovnb
mov
push
jnp
cmp
jns
addb
xor
icebp
cmp
jns
mov
enter
lock
xchg
dec
mov
mov
dec
sar
push
dec
lahf
hlt
sub
mov
push
push
outsl
mov
dec
in
lret
add
out
mov
lahf
mov
and
pop
or
jo
lea
dec
mov
outsb
push
sub
and
out
adc
mov
enter
mov
les
push
sbb
mov
je
mov
fdivl
push
sbb
push
or
aam
pusha
xor
jno
push
mov
pop
or
jno
dec
lcall
and
xchg
roll
mov
dec
fwait
mov
scas
xor
mov
rorb
pop
push
adc
cmp
dec
mov
hlt
or
jb
add
mov
lock
jbe
and
cmp
xchg
cmc
enter
mov
pushf
jle
aaa
iret
in
inc
std
lret
mov
jecxz
xchg
xor
repnz
jns
mov
aaa
push
negl
xchg
or
out
fstpt
nop
adc
xor
scas
test
xor
pop
rcll
dec
lock
xor
xlat
cmp
cmpsb
lock
mov
pop
icebp
arpl
jle
pop
adc
lea
mov
adc
iret
loopne
movsb
jo
mov
aas
das
fs
mov
jo
cmp
test
or
add
pop
pop
cmp
int
popf
cmp
call
jge
test
rcrb
xor
jo
jp
out
enter
mov
lahf
shr
insb
std
adc
xchg
adc
or
cmpsl
ror
arpl
xor
mov
call
and
movsb
jne
xchg
movsl
or
ja
sbb
or
cli
jne
rorb
rclb
or
sarb
cmc
mov
pop
fs
jecxz
add
test
les
lcall
pop
jae
xor
scas
inc
cmpxchg
sub
ret
pop
popa
mov
ja
or
icebp
jb
popf
addr16
jnp
psllq
negl
loopne
stc
sbb
gs
movb
dec
jge
lcall
rcrb
xor
stos
jae
push
mov
pop
and
aas
jo
hlt
or
adc
and
mov
xchg
repz
enter
adc
mov
and
shl
std
test
mov
dec
in
add
mov
hlt
enter
push
xor
jno
call
xor
jne
movsl
imul
leave
mov
cltd
cmp
sbb
jne
mov
out
push
stos
mov
hlt
xchg
or
pop
movl
outsb
mov
xchg
test
nop
movsb
xchg
jnp
out
mov
call
mov
sbb
in
rcll
dec
sub
xchg
jg
jae
fmuls
das
outsl
xchg
popa
mov
pop
aaa
add
sbb
orb
xor
ja
jg
dec
enter
dec
mov
sbb
push
push
lock
hlt
fwait
pop
test
je
insl
jle
jae
push
dec
pop
push
lea
add
jnp
lock
adc
xor
mov
insl
lods
mov
repnz
jg
je
inc
jecxz
test
push
add
jnp
leave
adc
jo
arpl
lods
clc
insl
movsb
push
stos
xlat
nop
inc
lahf
push
cmp
pop
dec
int3
inc
mov
in
call
pop
lret
sub
test
mov
mov
push
jne
adc
in
mov
addr16
sbb
sbb
and
sbb
lock
test
test
enter
jo
mov
push
lret
fnstsw
je
inc
pushf
push
mov
and
jl
das
xchg
pusha
fs
rcr
pop
lret
loop
mov
dec
or
xchg
dec
hlt
inc
jle
mov
addb
lret
and
push
xor
loop
pop
aad
inc
fs
and
push
pop
mov
dec
push
pop
int3
movsl
sub
lods
xlat
pop
lret
into
mov
pusha
adcl
and
cmp
adc
and
jne
in
fwait
push
adc
jno
lock
xor
add
lret
xchg
mov
mov
pop
int3
test
ret
add
push
imul
adc
dec
pop
jo
test
in
bnd
jp
push
jo
dec
mov
dec
pop
xchg
pusha
fisttps
pop
fnstsw
pop
repz
arpl
loopne
cmp
cmp
pop
cmpsl
mov
scas
je
stc
enter
int3
movsb
divl
lea
push
daa
push
sub
cmp
dec
cmpsb
dec
add
xchg
bound
mov
cmpb
or
jnp
pop
mov
negb
int3
lds
enter
and
mov
in
bound
lcall
sub
pop
insl
jle
push
xor
push
das
dec
push
cmp
test
sbb
and
vshufps
cwtl
xchg
mov
test
push
xor
dec
lret
sti
lods
jbe
jecxz
cmp
data16
push
push
pop
fidivl
fidivs
pop
cmp
fdivl
mov
mov
push
sbb
out
lock
inc
sbb
or
out
xchg
icebp
xchg
dec
imul
pop
push
xlat
loopne
mov
sarb
leave
and
imul
popf
mov
sub
mov
mov
lret
jo
sub
and
jno
inc
lock
call
xor
aad
sbb
push
add
jae
or
mov
push
cld
int3
jns
mov
aas
dec
sub
dec
mov
inc
enter
pop
fmuls
movsb
mov
in
mov
lea
cwtl
inc
lods
repnz
inc
jns
sbb
fxch
insl
push
sub
lret
nop
sub
sti
mov
xlat
dec
aam
and
gs
cmpsl
cwtl
xchg
enter
adc
mov
add
mov
jae
jmp
push
mov
mov
xor
pop
mov
test
mov
mov
cmp
sahf
enter
hlt
jno
xor
fcoms
pusha
test
rep
out
enter
push
pusha
pop
push
mov
jge
sub
jp
fisttps
mov
adc
test
pop
xchg
jbe
in
inc
enter
and
pop
imul
lret
jo
mov
push
mov
dec
push
add
pop
xor
divl
xor
enter
out
in
fs
mov
push
dec
movsl
sbb
jmp
dec
fs
je
jb
adc
mov
cld
aam
insl
mov
inc
dec
lock
xchg
or
insl
pop
push
jnp
sbb
clc
clc
jno
or
dec
inc
sub
mov
std
mov
inc
sub
in
jmp
test
hlt
pop
mov
dec
mov
dec
mov
sbb
add
xchg
jle
out
or
test
fsubp
or
inc
jle
sbb
pop
jmp
inc
outsl
loopne
xor
push
pop
dec
lahf
dec
out
aaa
test
or
mov
clc
add
outsb
fsubs
xor
mov
jo
push
add
popa
mov
outsl
cmp
out
jne
in
in
add
fisttpl
cmpsb
dec
loope
aas
lock
insl
inc
mov
pop
or
lock
movb
loopne
lds
jmp
out
repnz
mov
sbb
fs
or
outsb
add
xor
ljmp
mov
out
push
jo
mov
xchg
lahf
out
iret
loop
cs
enter
jo
fistpll
pop
hlt
push
lret
adc
aad
mov
xchg
jb
dec
aam
push
ss
jle
repz
icebp
xchg
xchg
shll
outsl
xchg
sub
mov
iret
sti
adc
inc
xor
cmc
or
sub
xlat
push
sbb
je
xchg
lods
test
pop
mov
mov
or
dec
test
in
js
fiadds
push
shlb
pop
shl
pop
inc
mov
ja
xchg
xchg
xor
nop
jmp
adc
addr16
cmpsb
fs
test
lock
jg,pn
imul
pop
ljmp
jbe
jmp
inc
jae
pop
cli
pop
mov
mov
add
das
jne
mov
xchg
test
sbb
or
std
cmp
aad
jbe
enter
lcall
les
and
outsl
ja
dec
cmp
sub
insl
mov
xor
pop
jl
push
lea
insl
pop
dec
push
ljmp
pop
push
outsl
inc
dec
out
or
sub
rcrb
lret
and
outsb
dec
les
push
sub
clc
cmovge
icebp
xor
outsb
mov
lods
push
int
xchg
or
push
repz
pusha
pop
jno
outsb
sub
lods
push
and
out
cmp
pop
jno
stc
repnz
loop
dec
and
loopne
cmp
fmull
popa
testb
repnz
xor
insb
cli
push
fs
mov
and
int
push
mov
icebp
mov
fsts
int3
outsl
enter
sbb
psadbw
cmp
pop
addr16
and
cmp
repnz
xor
popa
loope
sub
pop
ja
les
pop
rolb
hlt
xor
xchg
enter
shl
cmc
lds
js
pop
pushl
sbb
shrb
repz
movsb
mov
cmp
jecxz
cli
mov
sub
lds
cmp
pop
jno
cmp
mov
inc
fs
dec
call
testb
loope
xor
sub
push
je
jne
gs
scas
lods
xchg
mov
mov
aas
imul
rorb
mov
mov
testb
xchg
lea
scas
in
dec
lret
xchg
inc
movsl
mov
mov
push
jb
cmp
cmp
arpl
arpl
mov
aad
dec
mov
add
jo
orl
inc
outsb
hlt
jle
inc
lods
test
ja,pn
pusha
loope
jno
cmp
mov
sub
lret
ret
out
enter
les
mov
xor
and
lret
adc
addr16
mov
dec
jl
test
mov
fmuls
iret
dec
xor
insl
test
pop
outsl
hlt
jo
jg
clc
movsb
enter
dec
mov
cmpl
repnz
lods
out
sub
nop
mov
es
lds
jo
pop
loope
lret
out
mov
xlat
loopne
aam
pop
pop
pop
sbbl
lods
scas
adc
call
clc
jmp
mov
repz
outsb
pushl
mov
mov
sti
pop
jmp
xor
and
lods
fsubrs
imul
test
jo
jle
push
dec
cwtl
add
arpl
test
push
xchg
inc
je
pop
aaa
shr
addr16
data16
hlt
testl
outsl
cmp
outsb
into
fbstp
fstl
dec
pop
in
pop
mov
pop
ficompl
jl
aad
or
cmp
pop
mov
outsb
push
hlt
sar
lock
sub
mov
pop
mov
push
adc
dec
jg
dec
leave
jb
sub
push
fwait
in
mov
sub
xor
inc
js
in
mov
pop
enter
add
mov
aam
inc
or
or
out
adc
inc
jae
outsb
adc
movsb
stos
cwtl
icebp
out
add
jle
or
or
aas
jo
jne
mov
xchg
lcall
adc
push
dec
int
pop
sub
add
pop
xorb
jle,pn
mov
dec
push
push
mov
xchg
xchg
jp
rcll
adc
add
fsubr
add
bswap
fsubs
int
and
test
dec
pop
sbb
push
ja
in
jo
aad
jl
out
add
sbb
repz
lods
pusha
jo
adc
loope
and
repz
fwait
xlat
mov
jo
sub
or
icebp
inc
je
dec
xlat
add
arpl
movsl
jmp
push
mov
cld
pop
or
pop
fstp
mov
addr16
sbb
lock
stc
out
dec
xchg
inc
push
pop
jo
test
arpl
mov
sub
and
push
pusha
leave
jne
lock
add
lcall
pop
lock
jp,pn
fsubr
enter
cmc
xchg
test
jnp
lret
inc
mov
filds
stc
cltd
sub
inc
jl
test
and
dec
scas
int3
dec
pop
mov
clc
outsb
lret
mov
jnp
xchg
in
cld
pop
dec
inc
push
jnp
lcall
adc
out
cmp
sti
gs
mov
pop
or
push
pop
inc
in
jo
and
xchg
sarl
ss
adc
push
push
mov
out
jnp
in
in
adc
adc
adc
out
sub
mov
std
loope
jnp
shlb
or
lods
sub
je
jmp
xor
popf
insb
aas
mov
loopne
push
adc
loop
js
mov
jnp
lods
aaa
or
in
ds
pop
jo
xchg
cmpsb
and
enter
add
movsl
mov
jo
jne
dec
daa
pop
ja
xchg
andb
jno
popf
orb
mov
pop
sub
int
sti
or
cld
push
bound
xor
add
sub
es
sbb
repnz
stc
enter
hlt
or
enter
mov
shl
jmp
sti
xlat
sbb
lea
dec
mov
cmp
xchg
adc
mov
mov
jae
popf
test
xchg
dec
or
and
subb
pop
dec
call
xchg
loop
xor
repz
rcrb
mov
mov
push
fs
cs
fbstp
push
imul
cmc
lock
add
cli
xchg
dec
repnz
cmpsl
cltd
scas
in
std
aam
in
xchg
xchg
sub
push
loope
add
orl
xchg
mov
lock
mov
pushf
ss
push
dec
jo
loope
adc
out
lds
pushf
jae
mov
imul
push
repz
sbb
scas
ret
idiv
nop
je
sbb
and
je
lods
hlt
nop
lds
cmpl
mov
lods
out
out
push
and
outsb
ja
add
in
sbb
xor
or
test
dec
je
pop
enter
ds
in
in
xor
clc
jl
lret
negb
inc
imul
popf
xor
inc
bound
repnz
outsl
jle
je
mov
lock
daa
fs
cmp
push
pop
lods
fdivr
lret
jo
jno
pushf
cmp
jne
or
cmpb
xchg
lret
pushf
lods
mov
hlt
adc
ja
pop
lret
mov
std
and
cmpsb
stos
and
mov
lret
lahf
enter
cmp
dec
dec
jle
bound
xor
movsb
and
sbb
and
jae
pop
into
nop
loopne
test
mov
inc
test
mov
mov
les
int
enter
mov
sbb
int
movb
add
mov
out
mov
xchg
jo
or
sti
push
hlt
gs
sub
mov
push
pop
sbb
mov
adc
xchg
loopne
push
xor
arpl
inc
push
mov
ret
hlt
mov
je
mov
pop
xchg
cld
call
clc
enter
mov
mov
iret
mov
push
pop
out
mov
and
sub
iret
jmp
cli
fmuls
xchg
pop
pop
cwtl
sub
icebp
pop
inc
jo
mov
aas
adc
popa
hlt
jne
inc
jnp
adc
test
mov
cwtl
jo
push
in
cld
lds
pop
sbb
inc
mov
jae
adcl
inc
jg
std
test
in
ret
add
adc
or
adc
adc
xor
icebp
xor
mov
jae
lods
outsb
jo
sub
pop
and
lock
dec
cmpsl
mov
lods
and
scas
addr16
adc
fiadds
mov
sbb
push
ljmp
jo
mov
addr16
push
movsl
jle
insl
test
outsl
cmp
push
sarl
xor
outsl
mov
das
dec
mov
andl
out
push
jnp
test
jno
insl
hlt
sbb
ret
dec
call
dec
xchg
push
ret
enter
or
mov
sbb
mov
jo
and
in
or
je
loope
cmp
rorb
cmp
push
shr
push
mov
xlat
cwtl
nop
enter
adc
movsb
arpl
fcoms
gs
xor
sbb
sarb
or
mov
lods
fsubr
fs
in
scas
push
fstpl
loopne
jns
fs
xor
push
xchg
insb
add
enter
and
lock
mov
and
into
lock
test
add
add
or
popf
shlb
jae
test
push
pop
ffree
lock
xor
lcall
ret
lret
lock
testl
sub
pushf
mov
les
mov
outsl
rclb
pop
and
pusha
iret
push
loopne
js
pop
aad
and
imul
xchg
pusha
loopne
sub
dec
outsb
fyl2xp1
add
adc
sub
jne
sub
lods
jge
ds
dec
cmpsl
in
sbb
mov
and
sbb
cwtl
aaa
sub
mov
adc
ja
jmp
testl
jecxz
stos
out
mov
dec
popa
outsb
jae
in
incl
pop
pusha
mov
and
adc
lods
jae
arpl
push
divb
pusha
jns
lock
push
popa
cmp
subb
lock
lods
push
leave
adc
movb
sbb
push
out
dec
jmp
push
aas
das
cmp
iret
add
dec
xlat
mov
lock
outsb
fdiv
cmp
test
imul
loope
out
loop
and
adc
fs
or
frstor
push
pushf
jle
push
jo
adc
mov
out
mov
mov
std
and
pushf
addr16
ljmp
push
and
xor
cmp
lea
add
hlt
xchg
push
movsb
and
xchg
fistpl
and
or
lock
mov
pop
dec
call
hlt
insl
out
dec
push
js
mov
jnp
enter
xor
and
inc
xor
call
push
nop
pop
sbb
addr16
ja
mov
sub
enter
adc
sbb
test
in
shl
fmul
subb
dec
push
inc
leave
orb
xor
inc
jo
les
xchg
mov
and
aas
test
addr16
mov
repz
pusha
ss
into
insb
mov
and
shl
cs
or
xor
cmc
inc
adc
push
push
mov
scas
push
push
call
mov
and
mov
cmp
idivb
dec
ljmp
mov
nop
das
pop
in
fdivp
ret
push
outsb
pusha
xor
mov
jle
inc
test
jge
pop
or
pop
pop
sarb
sub
outsl
inc
js
dec
adc
pop
dec
fs
adc
sub
jp
lock
out
add
aad
fs
mov
pop
sahf
and
xlat
xchg
lock
movsb
test
adc
test
pusha
mov
out
cwtl
push
mov
out
mov
pusha
mov
lods
pop
jne
jl
mov
aas
fcmovu
mov
int
dec
ss
push
xor
xchg
mov
add
xchg
pop
push
nop
leave
dec
dec
movsb
push
mov
add
out
xor
rcr
fs
lods
lds
clc
cltd
arpl
add
js
daa
xchg
repz
mov
mov
lds
out
mov
jo
jmp
loopne
pop
orb
into
outsb
mov
mov
pusha
pop
popf
cmc
mov
sti
jae
pop
or
pop
pop
cmpsl
insb
adc
push
push
jo
dec
pop
inc
cld
lret
test
test
popf
xchg
ja
enter
xorl
pop
add
dec
cs
jo
scas
movsb
add
lret
lahf
pop
xor
pop
mov
hlt
adc
enter
mov
inc
addr16
push
push
push
jo
daa
push
inc
stos
hlt
push
xlat
dec
mov
enter
xchg
sti
mov
mov
adc
xor
cmp
xchg
ret
cli
adc
or
adc
and
push
js
lock
popf
push
mov
or
leave
jbe
out
adc
arpl
add
loop
push
mov
mov
add
leave
inc
and
nop
jo
xchg
loopne
rcpps
xor
sub
and
nop
enter
xor
jl
or
pusha
push
test
fildl
mov
test
outsb
xlat
xor
mov
hlt
xor
cmp
jbe
enter
jo
jg
mov
mov
addr16
push
sbb
sbb
mov
std
call
adc
jo
out
aam
sti
clc
loope
add
enter
mov
mov
cmp
mov
movsb
js
xchg
outsb
pop
ret
mov
mov
push
sar
jecxz
pusha
push
sbb
jl
push
mov
xchg
gs
scas
scas
pop
pop
mov
insl
push
xchg
add
xchg
pop
push
popa
mov
loopnew
in
out
inc
push
sub
in
out
lret
pop
mov
aaa
pop
test
sahf
js
loope
in
inc
pop
int3
lret
mov
mov
lock
lea
mov
push
fwait
mov
pop
cwtl
popf
mov
jo
mov
scas
or
enter
push
shll
jno
imul
popa
ret
push
jl
mov
cmpsl
or
pop
sub
jo
dec
pop
iret
mov
ja
hlt
cmp
inc
jno
enter
and
shrb
pop
mov
insb
out
andl
pop
mov
add
xor
ja
dec
negl
out
movsl
cmpsl
xchg
call
leave
dec
mov
and
cld
jo
jp
add
sub
and
pop
inc
outsl
loop
pushf
lods
div
cmpsl
jmp
test
fdivp
push
cmpsb
fisttps
mov
sub
lock
and
fsubrs
push
add
xor
mov
jno
mov
popa
add
dec
fidivl
fwait
and
aas
inc
or
loopne
stos
cmpb
test
jge
push
mov
and
cli
or
sbbl
fwait
stos
pusha
dec
adc
pop
sar
jo
pop
jl
call
inc
jae
and
into
inc
sahf
xlat
mov
aas
inc
jg
cmp
dec
push
aaa
push
fs
pop
push
push
pop
and
jecxz
insl
pop
xor
arpl
loopne
sub
scas
sub
aam
insl
lret
mov
imull
sbb
ja
mov
imul
jo
das
mov
mov
push
popf
imul
cmp
pop
mov
push
call
xchg
sub
in
or
xchg
mov
js
push
and
or
push
repnz
and
fdivrs
adc
inc
sub
rorl
push
loopw
push
aas
test
push
jae
clc
les
loopne
jne
movb
push
repnz
popf
in
fistpll
jp
into
int3
test
test
pop
lcall
nop
es
jmp
xor
aas
inc
arpl
mov
push
mov
jg
sbb
pop
in
gs
sahf
jbe
repnz
mov
pop
ljmp
push
xchg
mov
sti
call
test
push
fmuls
fxch
inc
das
sbb
mov
popf
jg
push
pop
xchg
hlt
sarl
jo
lock
pop
ja
pop
testl
pop
cmp
fistps
jmp
adc
loope
dec
cld
into
jno
lahf
enter
jl
iret
or
je
mov
in
adc
sarl
pushf
lods
testl
push
lods
jl
and
lock
jl
jne
and
add
or
cmc
xchg
stos
lret
mov
mov
xchg
lahf
push
mov
shl
sub
aad
cmp
lea
and
sub
add
push
rclb
jne
scas
push
fsubrp
arpl
mov
in
loope
leave
adc
adc
mov
jne
and
ja
nop
enter
push
mov
mov
fs
lock
insl
jge
xchg
sbb
stc
or
xor
or
fsts
rclb
in
dec
lock
xor
push
add
leave
push
pop
inc
call
leave
jnp
fwait
or
mov
in
arpl
in
cmp
jnp
loopne
adc
out
dec
enter
mov
pop
or
or
cmp
push
mov
mov
aas
lock
jnp
add
int3
dec
fistps
mov
cs
je
addr16
lcall
icebp
incl
fcmovnbe
mov
push
xor
or
pop
and
push
add
int3
hlt
jg
dec
pop
call
test
scas
xchg
outsb
jle
mov
and
cltd
sub
ljmp
test
add
pop
lock
xor
mov
enter
xor
movsl
hlt
sbb
sbb
leave
sbb
mov
insl
lahf
mov
mov
adc
sub
adcb
add
outsb
or
add
scas
fsubr
loop
call
mov
cmp
sub
xchg
or
iret
sbb
pusha
hlt
cltd
add
stc
mov
mov
aas
frstor
xchg
je
out
and
mov
hlt
movsl
dec
cld
and
mov
out
movsl
mov
in
pop
dec
sar
rclb
out
movb
lock
or
xor
adc
add
mov
int3
pop
mov
xorb
jne
mov
jp
xchg
je
cmc
mov
enter
shrb
push
and
dec
or
pushf
divb
fadds
mov
pop
enter
aam
lock
push
int
mov
cs
jge
cwtl
cmp
mov
aam
push
int3
repnz
sub
push
imul
mov
js
jbe
inc
sbbl
cmp
dec
into
leave
cwtl
clc
in
outsb
stc
fdivrs
add
dec
inc
gs
xchg
dec
repz
out
mov
imul
test
test
cmpsb
dec
mov
mov
cmp
cmp
icebp
fcoms
sub
rcrb
pop
pop
mov
pop
lods
aas
jo
push
popa
outsl
jb
pop
cmp
push
ja
mov
cli
in
scas
lahf
cmp
les
lea
dec
hlt
cmpsb
cmc
lock
add
pop
out
out
pusha
and
jl
in
inc
lock
clc
test
jnp
push
and
hlt
dec
iret
mov
imul
jns
subl
sub
pop
loopne
outsl
stos
fsubrs
mov
inc
jmp
repnz
mov
mov
pop
enter
pushf
pop
movsl
fnsave
lock
js
mov
divb
shll
cli
test
push
inc
and
test
lea
insl
ret
mov
fwait
lret
sbb
pop
aas
mov
and
aam
mov
lods
mov
and
hlt
mov
cld
push
and
adc
insl
sbb
sbb
out
pop
cmpsb
xor
pushf
and
push
push
push
jmp
jne
fdiv
test
sub
jnp
mov
repnz
clc
add
mov
add
test
or
or
mov
lret
lds
loope
je
adc
pop
call
out
hlt
sub
nop
jae
les
pop
scas
mov
enter
mov
adcb
subb
rclb
mov
fs
repnz
les
int
xor
mov
push
pop
stc
cld
adc
cmc
and
fnsave
aas
sarl
inc
or
popa
mov
adc
mov
ja
movb
lret
icebp
icebp
repnz
shll
lods
out
iret
jnp
or
insl
les
andnps
or
rorb
push
movsl
lret
pop
dec
pop
test
mov
xchg
aas
hlt
xchg
push
test
divb
dec
sub
in
sbb
adc
inc
mov
outsb
pop
adc
out
mov
popf
and
iret
faddp
stos
sub
jae
push
fcoml
dec
aad
test
lock
mov
jmp
jbe
xchg
push
insb
std
insl
inc
xchg
enter
lock
inc
mov
call
fdiv
add
repnz
cmp
lret
sub
cmp
xor
repnz
jecxz
test
arpl
je
push
movsl
popf
and
lret
int
jl
push
jno
pop
inc
enter
mov
pop
lods
fs
or
sbb
mov
lock
cld
push
pop
xor
pop
adc
push
outsl
mov
stos
xor
clc
pop
fnstenv
pop
mov
mov
jnp
outsb
mov
push
and
mov
sbbb
pop
sbb
push
test
dec
cltd
pop
pop
pavgb
xor
sahf
xchg
adc
pusha
in
xor
orb
rcrl
push
or
sbb
pop
test
and
cmp
mov
mov
mov
call
jl
adc
hlt
lahf
outsb
hlt
je
mov
aaa
mov
xor
push
lods
hlt
insb
ret
dec
jbe
jmp
loopne
lods
pop
sub
arpl
dec
lahf
pushf
in
movl
push
cmp
jmp
xor
mov
cs
mov
repz
xor
fisttps
inc
outsl
inc
sub
pop
pop
dec
inc
jo
inc
ror
ret
lret
lds
and
aam
subl
fcoms
int3
test
inc
mov
stos
jbe
hlt
dec
lds
std
int
pop
jne
push
jg
add
stc
sti
xchg
inc
mov
mov
mov
mov
xor
push
clc
bound
fisubrl
lock
xlat
xor
insl
inc
insl
lea
imul
push
inc
xor
cli
testl
push
jl
or
enter
lods
cld
cmp
mov
xorb
shrb
jle
out
sbb
das
into
mov
or
daa
iret
pusha
xor
xor
sahf
jecxz
xor
jl
cmp
movsb
adc
mov
inc
fs
sub
push
repnz
jae
outsl
sti
hlt
insl
or
fstpt
into
lret
dec
les
aam
xchg
insl
leave
mov
and
inc
jo
mov
adc
mov
lds
enter
jl
shlb
daa
dec
mov
scas
push
cmp
dec
outsl
inc
xor
inc
pusha
xor
je
fadd
jg
cld
aam
out
loopne
popl
pop
push
xchg
stos
aam
mov
mov
jne
pop
call
cld
jno
sub
jle
ja
sub
mov
xor
add
sti
pop
hlt
lods
stos
xchg
je
pop
enter
sti
dec
add
das
jae
lds
rcrl
dec
cmpsl
sub
fwait
cltd
jo
dec
xchg
mov
pop
repnz
xchg
loopne
sub
xchg
lahf
out
lds
pusha
inc
cmp
jno
add
mov
mov
hlt
dec
push
cmpsb
insl
cmp
dec
pop
or
dec
sub
or
clc
popf
int
call
cli
or
rol
cmp
das
sub
pop
sbb
nop
xor
scas
pop
lret
leave
fsubrl
pop
insl
dec
xor
xchg
enter
fs
out
jge
test
cmp
push
dec
dec
enter
aas
ja
cmpsl
mov
jmp
pop
movl
pop
inc
mov
pop
adc
mov
fcomps
bound
lds
jo
in
jbe
dec
enter
xchg
dec
jnp
pusha
outsl
hlt
pushf
jmp
sbb
popa
pop
xchg
cmp
lret
mov
push
jnp
shlb
sbb
dec
in
lods
xor
pop
aas
and
push
sarb
add
clc
mov
out
lahf
repnz
movsl
mov
inc
scas
mov
in
int3
pop
jb
aad
icebp
lahf
cmp
or
hlt
pop
or
addr16
popf
pop
clc
dec
in
jno
scas
xor
aaa
pop
jne
scas
mov
imul
pusha
mov
jo
add
mulb
mov
daa
push
dec
call
out
ret
outsb
inc
jo
xchg
loop
push
pop
in
lods
nop
repz
aam
movsb
pop
or
je
add
jno
mov
dec
push
inc
repnz
push
mov
mov
out
sbb
push
mov
lods
fdivrs
in
call
test
adc
aam
add
push
mov
or
mov
movsl
pop
repnz
cmpsl
popf
cmp
outsb
cltd
in
cmpb
pop
sbb
adc
pop
loopne
test
xchg
orl
out
jno
cmp
or
fimull
lock
pop
push
pusha
jl
and
pop
pop
pop
mov
rorl
pop
jo
or
adc
add
and
int3
imul
adc
arpl
inc
fsubs
dec
and
sub
and
sbb
aam
dec
mov
xchg
hlt
push
fcomps
inc
dec
mull
je
jnp
scas
mov
outsl
loope
rorb
sarl
xor
mov
loopne
div
jne
dec
lret
and
in
movsb
test
lea
insl
dec
nop
lock
or
jb
cmp
dec
arpl
shr
scas
mov
dec
outsb
mov
lret
jle
mov
ja
sub
mov
push
insl
or
fucomp
sbbl
lret
inc
cwtl
dec
daa
imul
outsb
daa
ret
hlt
iret
jle
mov
ret
in
lods
test
cli
mov
outsl
cli
sbb
push
movsl
cmp
jno
xor
testl
lahf
xchg
push
test
xchg
lret
in
scas
scas
fucomp
or
inc
fsubl
subb
mov
jno
pop
mov
rol
fdivp
jp
adc
mov
mov
jno
in
fidivl
enter
fs
arpl
lods
pop
jo
imul
push
dec
mov
ja
mov
xchg
lock
insb
or
cmp
or
outsb
arpl
mov
std
lods
fs
sub
push
into
imul
xor
cltd
lods
ja
int
sbb
daa
jnp
stos
in
jnp
lock
movsb
sub
and
jecxz
cmp
shlb
out
jne
std
cld
push
stc
iret
or
ss
int
rorb
les
mov
mov
xor
jg
mov
enter
adc
xchg
orb
pop
test
sub
and
addr16
mov
xor
dec
int
xchg
push
pop
lea
push
je
push
mov
enter
cwtl
jnp
jno
mov
adc
push
loopne
test
andb
out
push
scas
clc
mov
out
fwait
bound
sbb
loope
repnz
mov
xlat
sub
sub
mov
xor
or
dec
xor
mov
popf
cmpsl
jae
inc
lock
mov
outsb
js
fucompp
lock
cmp
mov
xchg
inc
dec
dec
shll
xor
pop
dec
in
popa
inc
sbb
bswap
movsb
sbb
shl
lods
xor
xchg
sbb
lret
adcb
jne
pusha
test
scas
outsl
jbe
hlt
popf
popa
mov
xchg
aaa
dec
jmp
sub
push
inc
mov
les
xor
arpl
mov
icebp
push
je
faddp
and
push
jne
repz
popa
lock
mov
fiaddl
fsubs
frstor
std
in
aad
repnz
and
cmp
fimull
dec
fs
push
outsb
or
mov
xchg
test
inc
scas
neg
cmp
mov
jmp
add
lock
icebp
mov
adc
test
add
adc
enter
loopne
push
cmp
or
lret
das
hlt
mov
xor
adc
mov
and
jl
push
push
push
or
shl
cmp
out
test
aad
xor
icebp
xchg
inc
jo
imul
hlt
in
clc
pusha
pop
dec
movb
test
sub
mov
jae
dec
mov
mov
stos
dec
xchg
inc
in
scas
xor
insl
scas
dec
cmpsb
hlt
adc
idivb
pop
fbstp
incb
cltd
insl
loope
repnz
fwait
jl
adc
jg
loop
or
stos
cmpsb
lock
xchg
pop
es
and
into
repnz
hlt
rcll
mov
xlat
jbe
fstl
jo
lahf
loope
push
mov
sbb
pop
push
inc
jne
mov
adc
jnp
shrb
ja
out
xchg
xor
jl
cld
push
mov
xor
sub
ss
push
xchg
xor
sub
or
enter
xchg
cld
cwtl
js
push
dec
jo
mov
ret
out
stos
mov
push
xor
add
addr16
loop
xor
mov
pop
mov
pusha
out
fdiv
inc
add
or
repnz
aam
insl
movsb
sbbl
jg
push
dec
movl
mov
jne
push
in
pusha
jle
mov
xchg
lock
ficompl
clc
lret
lret
out
xchg
and
push
xchg
aaa
and
xlat
adc
fisttps
xchg
insl
xchg
cmp
or
stc
cs
insl
adc
hlt
mov
pop
mov
pop
scas
in
cmp
mov
call
fcompl
adc
pushf
cs
push
jecxz
mov
je
adc
jae
lods
xchg
add
clc
adc
rcr
or
fs
xchg
lret
push
repnz
mov
lret
lcall
test
push
cmpsl
push
cs
movsl
insb
sub
mov
cld
lret
sarb
outsb
sti
pusha
xchg
push
je
jno
rcrl
pop
adcb
add
adc
fldenv
cmp
add
sub
add
dec
das
xchg
pop
ja
adc
inc
outsb
sbb
icebp
hlt
jnp
jge
addr16
jbe
and
mov
fmul
jne
lock
cmp
mov
inc
adc
pushf
add
lods
sar
jl
xor
loopne
int3
cmp
and
call
pop
jno
xor
repnz
hlt
dec
stc
dec
pop
out
lret
pop
or
dec
data16
movsb
fs
bound
pop
out
xchg
push
xchg
bound
loop
aas
cmpsb
xchg
cld
notb
xchg
mov
test
cwtl
inc
arpl
mov
test
faddl
lock
mov
fcomps
add
jo
xor
repnz
jle
inc
jo
xor
sbb
xchg
jo
cmp
and
insl
insl
mov
repz
mov
adc
add
mov
cmpsb
lock
mov
in
sub
inc
pop
adc
cmc
xchg
or
in
mov
dec
pushf
int
pop
push
push
movsb
mov
push
xchg
mov
pusha
aas
jo
or
stos
repz
outsl
iret
mov
pop
jbe
in
sti
leave
imul
scas
or
pop
xlat
push
inc
jo
mov
dec
js
ffree
sarb
in
cld
pop
jp
divps
inc
dec
loopne
dec
xchg
sub
mov
sub
mov
pop
add
aam
jae
shlb
jne
sub
push
imul
leave
repz
inc
stc
movsl
ss
push
test
xor
hlt
ja
pop
gs
or
mov
push
mov
insl
xchg
xor
adc
and
lock
subb
lods
ja
lock
pop
aam
xchg
mov
xor
test
mov
adc
hlt
arpl
inc
std
insl
das
cwtl
sub
sbb
mov
out
test
lahf
or
pop
lea
jp
jb
adc
call
hlt
aam
lret
sub
lods
cmp
rorl
add
dec
dec
out
fidivs
jnp
mov
pop
filds
inc
enter
mov
mov
mov
and
ret
das
xchg
fcomps
cli
mov
roll
cmp
pusha
pop
inc
push
push
lret
or
enter
adc
nop
es
jb
stos
dec
subl
mov
imul
cld
test
repnz
push
xor
add
cld
out
loopne
xchg
mov
mov
pop
dec
lahf
test
sbb
loope
adc
dec
lock
mov
mov
test
jnp
js
pop
loopne
mov
mov
add
out
js
fs
pop
fadd
icebp
aam
insl
or
popa
fstl
xor
leave
loopne
popf
outsl
arpl
xchg
pop
arpl
mov
or
insl
fsts
hlt
popa
je
pop
pop
stos
push
ljmp
adc
mov
shlb
or
repz
sub
and
adc
je
jge
mov
cld
mov
dec
xchg
in
out
sub
sub
mov
orl
jge
bound
sbb
mov
ja
outsb
push
and
and
dec
pop
cmpsl
jle
out
enter
jl
imul
mov
lock
out
push
xor
mov
jp
and
sub
push
jge
mov
cs
movb
pop
dec
and
xlat
insb
std
xor
lret
lods
fs
imul
jo
add
jae
lock
and
jl
dec
pop
lea
into
pop
jno
dec
arpl
scas
popa
xlat
outsl
inc
clc
movb
out
lods
mov
mov
in
scas
insb
testl
int
push
jp
jl
mov
jnp
scas
lock
push
in
or
xchg
inc
fcom
jb
jno
outsl
sarl
int
push
jae
jge
jge
jo
incl
je
pop
lds
not
je
jge
test
test
aaa
lock
push
notb
and
mov
pop
dec
bound
test
sbb
ret
mov
mov
dec
outsl
xchg
mov
mul
into
xor
xor
std
xlat
sahf
jno
shl
fldenv
shl
es
and
fistpl
out
cmc
test
jl
rorl
je
cwtl
hlt
repz
push
or
mov
sub
xchg
sbb
xchg
orl
popa
nop
adc
mov
inc
jo
inc
jb
ljmp
mov
mov
push
xor
dec
aas
jbe
bnd
inc
insl
and
addb
movsb
repz
xor
push
das
pop
jo
add
in
mov
xchg
mov
daa
adc
enter
jae
add
and
sarb
arpl
push
out
sub
movsb
push
dec
insl
mov
cltd
mov
jo
pop
gs
das
loope
xlat
loop
dec
jno
dec
jno
add
dec
scas
and
mov
jo
xchg
pop
cmp
lea
cmpb
sub
scas
mov
shll
insl
mov
ss
xchg
outsl
cwtl
movsl
and
addr16
idivl
xlat
stc
test
insl
shrb
clc
mov
insb
out
mov
jae
loop
enter
jo
sti
or
fdiv
pop
pop
shrl
mov
jno
iret
mov
dec
insb
xlat
fnstsw
pop
mov
sbb
jo,pt
cltd
xchg
in
sbb
aad
incl
inc
or
in
divl
outsl
push
insl
lock
call
and
and
lock
xchg
or
nop
scas
stc
sub
call
gs
or
mov
test
arpl
jecxz
mov
lds
xchg
mov
test
add
jmp
jo
adc
loop
xor
mov
jbe,pn
enter
lock
pop
pop
pop
in
xor
add
movsb
push
popf
dec
inc
repz
mov
xorl
gs
mov
push
nop
scas
cpuid
push
jl
je
fsubr
lock
sbb
mov
mov
movsl
cld
dec
lods
out
arpl
sbb
mov
inc
lock
pop
pop
std
adc
jnp
mov
js
jne
cmp
rol
hlt
mov
jo
jge
jp
aaa
add
jl
cmp
push
in
jns
xor
cmp
lock
fisubrl
mov
and
addr16
mov
cmp
je
cmp
cmp
addr16
ror
cld
jo
int3
cmp
lock
cmp
xor
loopne
arpl
cltd
ja
and
bnd
lods
aas
jo
pop
sub
int3
pop
push
jle
pop
test
pop
jmp
and
or
sub
inc
test
lods
aaa
fidivrs
adcb
mov
cmp
pop
pusha
sbb
xchg
pop
adc
call
cmp
outsb
addr16
out
aaa
mov
cmp
inc
and
enter
hlt
out
je
repnz
sub
sub
mov
loopne
out
test
lods
test
pop
cmp
mov
lock
push
push
sbb
leave
mov
stos
lock
pop
pop
cltd
mov
cmp
je
je
xchg
jg
into
cwtl
inc
push
out
in
enter
rorb
scas
std
cld
push
aaa
out
or
je
lods
pop
out
xor
insl
push
mov
push
jbe
push
or
js
aam
lea
bound
mov
jl
mov
mov
jnp
in
push
outsb
and
sub
push
mulb
fwait
mov
xlat
push
enter
test
sti
repnz
call
dec
inc
fs
and
jno
sti
lcall
scas
out
mov
dec
pop
les
cmpsl
push
lods
orb
test
jne
jge
jo
aas
push
je
pop
lock
clc
inc
dec
push
xchg
mov
mov
xor
imul
arpl
jp
mov
mov
mov
adcl
jl
or
in
mov
cwtl
lds
jnp
push
test
js
adcb
mov
inc
arpl
jae
pop
pusha
push
add
and
movsl
out
test
clc
imul
enter
cld
lds
inc
xchg
js
pop
cwtl
cmp
and
xlat
dec
int
cs
pop
imul
xor
and
stos
shll
iret
clc
test
unpcklps
lret
sub
dec
jo
cltd
cld
and
insb
mov
pop
or
and
imul
in
popf
add
jne
adc
adc
lods
rep
sub
xor
iret
jle
pusha
leave
in
jge
into
scas
mov
aam
js
mov
pop
ss
adc
xor
push
jo
icebp
sahf
xorl
dec
add
push
movb
sarb
lds
fs
outsb
in
push
xlat
or
lock
xchg
fidivrl
es
mov
lea
sbbl
nop
jmp
scas
add
and
dec
pop
pop
enter
fsubrl
outsl
mov
or
shlb
xor
pop
mov
cltd
lds
pushf
mov
orl
or
push
leave
cmp
lock
mov
imul
enter
dec
mov
dec
fdivrs
mov
mov
fidivrs
insl
in
ss
cltd
fcoml
les
fdivrs
cwtl
pop
or
gs
jo
cltd
inc
rcl
out
pop
iret
data16
and
popf
fwait
rorb
mov
adc
loope
or
lds
fistpll
sub
push
insl
subl
or
lea
enter
ror
int3
mov
pop
cwtl
loop
xor
enter
pushf
jo
test
jge
or
and
pop
cmc
lock
sbb
out
ret
mov
paddusb
push
fsubrs
xchg
mov
jns
push
xor
push
fld
pop
je
outsb
enter
ror
outsb
test
lcall
xchg
es
and
fs
push
cmp
push
in
or
loopne
or
dec
jne
push
jne
mov
insl
mov
enter
inc
and
push
subl
jae
jge
jo
mov
lahf
je
adc
fildl
or
movsb
add
pop
inc
test
and
pushf
popf
jne
aas
lahf
out
cmc
adc
xchg
pop
out
lcall
dec
cld
imul
add
js
pop
fnsave
outsl
enter
dec
enter
movsl
inc
lods
jge
adc
fldcw
inc
in
lcall
or
sub
pop
xor
ja
jne
inc
insb
mov
cwtl
and
mov
push
enter
loop
outsb
and
lods
push
pop
fistpl
nop
jne
jmp
dec
push
cs
and
adc
repnz
push
pop
bound
insl
dec
pusha
pop
jo
mov
out
fs
and
cltd
imul
inc
aad
outsl
mov
int
lods
je
xor
and
lods
mov
pusha
sub
inc
addr16
add
leave
mov
lret
in
cmp
mov
aam
bound
ficoml
pop
sub
fs
inc
sbb
fwait
movsl
mov
dec
outsb
dec
movsb
mov
mov
dec
jb
imul
lods
stos
andb
jne
fwait
or
in
inc
lret
sub
push
in
cli
and
jl
jns
daa
loopne
jle
jb
cmp
shr
lret
mov
xchg
push
movsb
dec
test
mov
pusha
aad
pop
pop
adc
xchg
scas
psubsb
sbb
fsubr
xchg
into
je
pop
int
and
rcll
sub
outsb
mov
push
nop
out
push
xchg
and
push
je
xchg
arpl
adc
fstps
xor
clc
test
arpl
mov
cmp
test
adc
js
dec
xchg
push
mov
call
pop
ficoms
mov
xlat
movsl
jo
roll
lods
add
lods
nop
cmp
push
push
in
add
iret
sbb
cmp
fsubl
pop
inc
lock
mov
push
or
nop
movsb
fisttpl
insl
jl
fwait
push
and
xlat
push
push
mov
xchg
orb
jb
mov
pop
out
icebp
push
insl
jns
dec
push
aaa
hlt
xchg
dec
movsb
lock
sti
mov
mov
mov
std
inc
cs
loop
fs
subps
lods
leave
std
popf
inc
enter
jmp
or
leave
in
pop
mov
sbb
rorl
dec
dec
lock
rcll
mov
popf
sbb
xchg
enter
gs
xor
scas
mov
and
std
movsl
dec
js
scas
adc
sub
inc
lock
test
dec
leave
and
das
cmpsl
inc
outsl
xor
xchg
jno
testb
loopne
sub
hlt
aas
xor
adc
push
js
lock
aas
sti
jbe
ss
push
jle
mov
pop
lret
jnp
xchg
outsl
push
test
movsl
mov
pop
dec
call
mov
cmp
dec
into
sub
in
fdivs
mov
jne
mov
lcall
fs
jo
mov
movsl
movsb
aaa
jmp
jno
xchg
lock
mov
jl
jb
je
pusha
hlt
outsl
pop
lock
iret
enter
test
add
test
outsb
push
subl
fldl
test
pop
sbb
mov
jl
dec
ja
repz
imul
push
arpl
xor
div
cmp
int
adc
adc
fdivs
jb
ja
xor
push
jg
sbb
shl
jecxz
adcb
fiaddl
and
js
subl
inc
je
sbb
dec
push
pop
or
lock
push
xor
add
pop
test
lock
and
push
shlb
inc
test
push
ja
sub
jno
jg
nop
aas
dec
ss
nop
lock
cltd
repnz
add
jo
fmull
xlat
mov
dec
sahf
loop
push
cmc
pushf
and
or
mov
iret
aad
jo
in
jne
hlt
pop
cmpsb
jo
call
das
or
adc
add
push
movsb
in
outsb
adc
lods
sbb
insb
out
loopne
pop
xchg
jl
les
cwtl
outsb
xor
lock
inc
mov
fcoms
ret
and
jl
fdivl
push
loopne
in
dec
pop
mov
mov
mov
pushf
lret
insl
je
aad
popa
das
push
sti
cwtl
fs
cmp
sbb
sub
mov
mov
push
push
je
mov
and
out
lahf
cmp
les
lret
mov
lret
xchg
and
iret
fld1
frstor
cmpsl
pop
add
sbb
mov
clc
and
inc
in
dec
cwtl
aas
arpl
add
jb
daa
jl
clc
cmc
enter
adc
inc
gs
insl
push
notb
dec
cmp
gs
das
scas
mov
fs
jecxz
scas
pop
js
dec
sbb
clc
mov
jp
mov
fs
cmp
jae
dec
mov
addr16
push
xor
push
mov
out
jo
jo
pushf
insb
pop
sti
hlt
ffree
fs
int3
mov
repz
mov
dec
sub
sbb
lods
jl
dec
xor
or
fs
loopne
sbb
or
push
sub
fcoms
shrb
loop
into
movsb
lret
pop
fmull
inc
insl
push
arpl
add
xor
inc
inc
orl
dec
cmc
fdivr
sbb
inc
or
divl
ja
pop
out
scas
mov
shlb
loope
bswap
in
pop
ficompl
pusha
ffree
fdivl
adc
and
and
or
pop
inc
pop
mov
daa
mov
shrl
adc
fistpll
push
enter
jo
loope
fisubl
lods
jl
mov
sbb
add
inc
adc
dec
hlt
adcl
jl
fildll
nop
das
lock
fbld
adc
mov
lds
adcb
mov
insl
arpl
sub
jnp
add
and
or
popa
pop
into
xor
mov
mov
bound
cmc
scas
jo
cmpsl
mov
loope
and
mov
insl
inc
in
push
xor
movsl
cmp
mov
hlt
test
sbb
repnz
xchg
xor
clc
mov
insl
push
enter
pop
jo
pop
int3
pop
ja
sbb
inc
fcomps
adc
dec
pop
test
sbb
inc
out
mov
dec
jo
les
das
mov
jle
mov
ja
sub
push
test
push
cmp
pop
enter
mov
or
repz
add
jno
xor
inc
adc
shlb
scas
inc
dec
pusha
cmc
iret
outsb
mov
inc
xor
pop
out
mov
enter
mov
sahf
xchg
js
lcall
mov
cltd
mov
je
test
pop
scas
clc
dec
or
xchg
cmp
sub
maxps
enter
int
fists
movsb
dec
push
dec
ja
xor
pop
and
mov
orb
les
pop
pusha
out
xor
jo
loope
mov
fmuls
inc
mov
jle
push
jp
cld
adc
xchg
add
sbb
cmpl
mov
push
outsb
out
in
sbb
data16
sub
cs
push
or
loopne
add
cmp
test
add
push
mov
jecxz
fsubl
dec
out
or
dec
xor
lds
mov
loopne
sub
and
mov
lods
enter
pop
adc
movsl
sahf
cld
loop
movb
roll
test
fs
out
jo
inc
arpl
ja
dec
mov
fs
or
pcmpgtb
mov
sbb
mov
pop
test
or
adc
lods
js
add
hlt
and
mov
mov
cwtl
rorb
fs
js
lods
and
mov
mov
jnp
popa
inc
fimull
sub
push
adc
lock
adc
sbb
clc
ss
jo
int
lcall
into
ror
jne
xlat
add
mov
push
out
mov
outsb
cmp
pusha
mov
outsb
add
enter
call
jno
jae
ja
cmc
test
pop
jp
in
mov
and
outsb
popf
dec
hlt
imul
sbb
jg
push
jbe
mov
adc
test
pop
lock
cmpsl
and
es
jae
inc
jo
mov
test
ljmp
js
shrb
lcall
cwtl
cmp
mov
jecxz
hlt
jo
clc
test
enter
test
sub
icebp
mov
add
pmuludq
ret
rol
xchg
push
add
lock
enter
mov
jne
leave
add
sahf
jge
jo
mov
imul
leave
mov
es
fs
cwtl
dec
lea
std
daa
sahf
adc
xor
and
dec
insl
jns
cmp
and
cld
js
inc
pop
out
enter
loopne
lods
pop
in
mov
xchg
daa
xor
jae
stos
push
mov
sub
gs
out
fdivrl
movsl
out
aaa
popf
pop
mov
mov
imul
std
xchg
sbb
lock
pop
lods
inc
jo
sbb
xor
loopne
pop
in
mov
scas
adcl
mov
and
sahf
aas
pop
idivl
jno
addb
lods
jo
xchg
sub
mov
adc
adc
fwait
pusha
insb
rcrl
ss
popf
sbbl
sbb
aam
jae
lret
pop
mov
movb
jecxz
and
lret
js
arpl
shll
or
mov
lds
push
push
fdivrl
insl
mov
popa
enter
call
imul
pop
aaa
push
or
sbb
push
jnp
inc
lock
xchg
adc
fisubrl
push
outsl
enter
fdivs
mov
cwtl
ja
sbb
nop
outsb
imul
insb
insl
test
inc
sub
or
testb
sub
enter
sbb
and
jb
dec
not
in
adc
jl
or
lret
sbb
ret
dec
mov
pusha
inc
rorl
push
test
shlb
or
pop
cmc
loopne
enter
adc
inc
push
mov
sub
add
sub
enter
icebp
popf
lds
mov
push
iret
lock
cmp
xor
xchg
sub
jo
sti
ror
or
lret
push
adc
dec
rclb
or
cmp
pushl
pop
push
adc
mov
push
fcompl
js
fs
cmp
scas
mov
daa
jl
dec
mov
dec
std
push
pop
dec
test
dec
scas
mov
mov
mov
insl
stos
rol
enter
clc
sarl
xchg
add
sub
and
fcomi
adc
dec
nop
add
lods
sti
test
push
sti
jnp
repnz
ret
sbb
aaa
fsubr
ret
inc
mov
inc
stc
ret
jae
aad
mov
and
stos
cmp
mov
pop
lock
out
pushf
test
or
jne
cmpsb
lock
mov
insl
cmp
cltd
pop
mulb
rcrb
sti
test
or
pusha
je
lahf
pop
mov
hlt
cltd
push
loopne
push
enter
push
sub
and
push
ss
jae
lret
mov
out
jne
adc
pop
or
sahf
mov
adc
rclb
xchg
scas
adc
aad
jno
cmpsb
or
lock
sbb
xorb
aad
dec
insb
jmp
scas
rcll
sbb
insl
int3
pushf
lock
popf
out
mov
or
hlt
push
loopne
pop
in
int3
mov
je
je
out
enter
sub
lea
or
les
sub
aas
push
daa
bound
dec
pop
aas
sub
shlb
mov
movsb
jmp
xchg
bound
test
mov
fcomi
hlt
fnstenv
leave
jge
jo
aaa
pop
mov
cld
sub
xchg
cwtl
push
les
ret
fadds
pop
shl
mov
xchg
xor
dec
xchg
xor
outsb
jne
rol
scas
lock
popl
mov
lods
adc
sub
lds
mov
call
das
scas
repnz
pusha
cmp
dec
push
cs
inc
pop
pop
pusha
test
mov
imul
sbb
cmp
jno
clc
dec
adc
int
mov
outsb
xchg
enter
or
stos
iret
std
test
aad
test
jge
jne
hlt
adc
shlb
enter
fidivl
hlt
jo
inc
jnp
mov
mov
sub
movb
jbe
enter
jo
pusha
xor
push
cmp
fsubl
lock
cmpsb
je
leave
icebp
mov
pop
and
jb
rclb
add
pusha
jo
dec
add
cmp
int3
pop
xchg
or
inc
addr16
adc
push
inc
fisubs
sti
arpl
inc
fcom
in
test
je
xchg
and
jae
hlt
push
xor
andl
add
adc
mov
mov
loopne
xchg
and
xchg
or
or
int3
clc
mov
xchg
lea
addr16
fcom
ret
iret
pushf
cld
sbb
iret
add
push
xchg
pop
pop
arpl
jo
dec
push
std
add
jno
and
cld
in
idivb
push
jl
jne
and
or
and
mov
sbb
lock
aam
je
mov
pop
xchg
push
inc
mov
test
scas
and
sbb
leave
loop
fs
outsl
icebp
dec
pop
lcall
cmp
test
xorb
inc
jo
cmp
dec
add
pop
std
sbb
or
hlt
arpl
sti
outsb
mov
div
sarl
mov
repz
jmp
jno
inc
and
xor
lock
dec
add
or
clc
aad
adcb
lock
push
xor
shll
clc
sub
push
scas
or
pop
lock
add
lock
jecxz
cwtl
cmp
loop
add
icebp
movsb
dec
jne
movsl
test
push
xchg
incl
sti
adc
loop
push
leave
sarb
jne
xlat
push
sub
in
iret
and
in
stc
pop
lcall
pop
inc
jne
cmp
aam
mov
mov
cmp
jo
in
fistl
pop
add
jno
xor
out
jg
sbb
jmp
xorb
mov
test
ficoms
aaa
decb
jne
js
dec
ja
loop
xchg
mov
in
lds
imul
pushf
or
jno
inc
enter
mov
jne
and
jb
fdiv
or
push
xchg
icebp
jl
enter
mov
lods
inc
jo
sub
mov
aas
repnz
xchg
and
xor
sub
fldl
sub
mov
outsl
pop
or
pop
mov
outsb
icebp
push
int
dec
daa
push
push
lods
cld
push
sti
lods
xchg
int3
cmc
dec
and
std
mov
push
popa
xor
or
lock
mov
xchg
clc
jo
sbb
add
push
je
lret
and
lock
lds
push
mov
and
iret
loop
js
cmp
pop
nop
fadd
push
mov
mov
icebp
insb
push
shl
dec
rcrl
pushf
arpl
add
fs
lret
xchg
scas
xor
dec
cmpsl
loopne
jbe
jmp
lock
out
loope
scas
push
int3
repz
mov
ds
sub
enter
jo
int
mov
hlt
scas
cmp
notl
notl
imulb
inc
cs
jo
xchg
test
cmp
sub
jecxz
inc
xor
push
pop
mov
pop
and
adc
scas
andl
mov
push
nop
ds
mov
xor
push
or
mov
xor
cltd
jl
jno
xor
xchg
in
add
dec
jo
mov
xor
das
je
inc
outsl
lock
inc
xchg
sahf
xor
cltd
clc
mov
adc
rcrb
inc
pop
add
hlt
es
mov
jns
or
push
lock
in
aas
lret
lods
inc
lea
or
mov
dec
add
adc
popa
mov
or
push
sbb
daa
dec
push
in
inc
sbb
movsb
sti
jl
inc
movsl
and
je
push
lahf
cli
int3
pop
jge
test
testb
xor
lret
pushf
shll
push
dec
icebp
bound
stos
lods
movb
repnz
int3
inc
stc
xlat
sub
adc
scas
mov
out
andl
mov
out
scas
in
jmp
sbb
in
sti
insl
enter
xor
jno
cmp
jge
xor
aaa
insl
pushf
das
push
enter
ja
sbb
int
out
adc
std
jge
inc
pop
mov
push
xchg
adc
lock
push
lock
outsl
inc
pusha
jo
mov
add
and
test
fadd
out
or
lock
jmp
mov
mov
daa
xchg
dec
stc
leave
insl
orl
mov
jmp
inc
mov
in
enter
mov
fs
loopne
push
dec
fdivs
hlt
pop
or
jl
out
es
add
cs
outsb
or
or
shl
into
jnp
enter
xchg
outsb
fcomip
int
cmc
les
cltd
sub
hlt
xor
les
aaa
popf
xchg
push
in
ljmp
fcomi
pop
dec
pop
dec
pop
mov
scas
in
psrad
mov
cmp
push
jmp
aad
int3
inc
dec
xchg
mov
ret
sbb
and
loope
in
inc
adc
shll
xchg
int3
push
mov
sub
hlt
js
fsubrs
ja
fmull
jno
push
pusha
mov
sub
in
lods
gs
sti
sub
mov
rorb
mov
mov
xor
jnp
test
lret
xchg
pop
fisubrl
mov
jno
lock
mov
or
mull
hlt
xchg
push
xor
roll
out
sub
sar
mov
xchg
inc
mov
add
out
pop
icebp
push
adc
loop
and
lea
or
jl
inc
sbb
shrb
lcall
fmulp
bound
out
add
scas
dec
mov
test
cmpsb
pop
sbb
out
enter
cs
cmc
idiv
iret
movsl
out
cmp
lds
lods
sub
inc
sub
repnz
xchg
cmp
pop
mov
popf
mov
je
gs
in
call
je
js
rcrb
mov
sub
cmp
dec
stos
inc
fisubl
pusha
div
aad
jg
insb
add
mov
and
and
sbb
test
lret
pushf
pop
push
ss
fbld
loop
gs
pop
pop
pop
fisttpl
cmp
jnp
out
add
push
or
mov
or
cltd
gs
cmp
bnd
cmp
loopne
and
xchg
cwtl
push
push
cld
adc
enter
rol
push
jns
movsb
mov
aad
add
push
aam
inc
push
test
je
or
sbb
lret
movsb
pop
push
imul
pop
fs
in
enter
sbb
dec
mov
add
or
insb
cwtl
and
add
test
pop
in
test
or
in
adc
out
jl
and
pop
inc
je
cmpsl
inc
lods
out
addr16
clc
hlt
push
xchg
inc
sbb
shll
mov
add
pop
xlat
pop
in
lock
adc
xchg
cmp
pop
loopne
and
cmp
enter
test
and
jo
and
push
cmp
jno
mull
shl
jo
add
rclb
subb
fidivl
inc
out
cli
dec
hlt
imul
addr16
or
sbb
dec
jno
insl
in
push
adc
lahf
rclb
xor
notb
xchg
hlt
mov
loopne
enter
add
lock
or
out
and
imul
mov
test
xorl
enter
or
test
push
and
jl
jbe
mov
add
ror
insl
fldt
test
mov
and
jne
out
fsts
or
adc
insl
sbb
adc
jle
scas
jae
test
sub
data16
cmp
and
lea
sbb
mov
ljmp
pusha
out
lods
icebp
jno
scas
xchg
lods
cld
rol
add
adc
adc
add
clc
dec
stc
outsb
pop
test
mov
shlb
xchg
jae
mov
xorb
insb
movb
ds
jbe
js
sti
xor
inc
mov
push
jo
jne
out
xchg
mov
shrb
cmc
xor
es
jbe
test
pop
or
push
mov
addr16
dec
xchg
jne
mov
aam
xchg
dec
lret
cmp
inc
jo
jns
jbe
hlt
repz
rclb
pop
stos
cmp
inc
fistl
insl
mov
pop
cmp
sbbb
mov
jnp
xchg
lea
aam
mov
sti
fcompl
and
pushf
xchg
dec
adc
cmp
sti
and
fwait
std
xor
insl
mov
inc
hlt
lahf
loop
aad
pop
or
movsl
fists
rolb
fiaddl
out
sub
mov
sub
and
pop
cs
jae
scas
adc
cmp
cmp
push
adc
outsb
movsl
mov
sub
js
jne
mov
addr16
pop
adc
out
hlt
dec
fdivrl
aam
inc
push
xchg
mov
lods
xor
and
out
iret
lret
and
dec
xchg
icebp
cmpsb
out
in
sbb
cmpsl
sub
hlt
dec
jne
jo
dec
adc
ret
mov
or
repz
pop
shlb
mov
outsb
icebp
mov
pusha
jns
jp
movsl
outsl
mov
std
hlt
xor
lcall
dec
loopne
cmpsb
or
sbb
jecxz
orl
subb
push
dec
dec
das
lds
arpl
pusha
enter
outsb
mov
xchg
aam
pop
ljmp
sarb
outsb
mov
in
xchg
ss
lea
add
pop
addl
and
inc
into
pusha
jno
sub
fdivrl
pop
sub
push
mov
cmc
je
pop
enter
xchg
scas
xorl
lret
lcall
push
ja
add
inc
xchg
inc
dec
enter
and
ljmp
xchg
bound
aam
in
sti
xor
or
jne
lret
bound
mov
or
pop
fldcw
cmp
lods
jnp
mov
mov
mov
adc
dec
adc
rcrb
push
arpl
js
xchg
mov
mov
mov
mov
xchg
ja
in
cld
xor
pop
xchg
adc
sub
mov
jmp
inc
pop
rolb
push
dec
cmp
in
push
sub
sub
inc
cmp
mov
jae
mov
insb
lea
ljmp
lds
push
fisttpll
xor
pop
dec
call
call
push
stos
push
fsubrl
enter
pusha
sbb
ja
es
fsubl
shr
mov
mov
dec
or
into
push
add
lds
adc
jl
pop
cltd
xlat
cmp
adc
push
pop
mov
sub
enter
mov
pusha
jns
jae
movsl
rorl
jo
jb
aam
insl
repnz
sbb
mov
xor
adc
jnp
cmp
cs
jnp
mov
lds
or
int3
sbb
lock
and
or
pop
dec
test
icebp
stc
bnd
lods
jbe
add
dec
ja
pop
in
lods
cltd
xchg
test
or
fs
mov
ds
sub
push
mov
stos
movb
fwait
adc
fdivp
test
mov
pop
mov
lock
dec
insb
mov
xor
rclb
jp
or
into
sub
push
fwait
lock
dec
mov
mov
js
jnp
xor
xor
inc
push
cwtl
insl
enter
mov
and
push
pop
mov
dec
jmp
nop
and
xchg
js
add
sbb
mov
jb
cmc
pop
test
xchg
mov
or
push
push
andb
shr
rorb
jne
mov
mov
pushf
jge
mov
mov
jo
das
aad
mov
sub
push
mov
rclb
jnp
outsl
movsb
sub
movsb
push
or
mov
push
repnz
js
enter
jo
xchg
xchg
pusha
mov
push
mov
adc
outsb
in
inc
sahf
enter
bound
push
add
cltd
add
shlb
lock
popa
jns
dec
int
insl
mov
and
loopne
xchg
je
mov
in
outsb
lcall
inc
jo
psllw
mov
mov
stos
stos
fcomps
imul
jle
divl
flds
mov
mov
mov
adcb
adc
icebp
fisubs
hlt
insl
pop
aaa
mov
fcoms
sub
js
fs
xchg
push
test
jno
mov
cmp
mov
aas
push
popf
in
push
icebp
and
inc
mov
pop
lea
js
jne
jmp
mov
and
cmp
fsubrs
out
sbb
pop
cld
popf
and
xchg
hlt
or
mov
jge
mov
stos
mov
jmp
aaa
push
popf
out
or
stos
jo
jecxz
pusha
cmpsl
mov
or
xor
sbb
rorb
lock
nop
adcl
pushf
test
mov
icebp
loope
mov
lret
test
inc
mov
jb
rol
or
mov
mov
pop
in
cmp
pushf
lods
stos
lcall
xor
arpl
fildl
and
add
pop
arpl
aad
ds
adc
lock
mov
add
js
insl
adc
lret
dec
mov
or
loopne
and
push
dec
outsb
mov
add
xor
inc
sbb
insl
out
iret
mov
out
xchg
jl
lock
mov
shlb
push
sub
enter
adc
nop
and
or
loope
cmp
cmc
in
add
movb
lods
fstp
push
ja
lahf
xor
scas
in
jge
outsb
fldenv
dec
pop
scas
xchg
movsb
shlb
in
push
jne
enter
mov
sub
inc
ss
je
xor
mov
pop
xor
dec
fmuls
mov
frstor
fbld
adc
push
imul
adc
mov
cmp
cmpsl
pusha
mov
loopne
loop
xor
fcmove
mov
lods
rol
out
rcr
push
lock
mov
imul
sbb
push
pop
dec
cmpsb
call
sti
lea
sub
jmp
dec
pusha
lods
cmc
dec
sub
mov
push
loope
fimuls
add
and
dec
jge
hlt
pop
push
cmp
cltd
test
sub
aas
and
and
mov
dec
jl
test
jne
inc
fisttpll
xchg
pop
ror
jnp
enter
inc
js
test
adc
or
mov
sub
int
and
pushf
hlt
test
and
xchg
mov
jne
mov
pop
adc
stos
mov
mov
and
fs
clc
cmp
scas
mov
loopne
dec
in
jno
imul
mov
mov
sub
cmc
lock
icebp
jmp
aam
insl
or
stos
push
pop
outsb
imul
and
jl
repnz
lods
add
adc
xchg
adc
mov
jge
test
lea
fstps
ret
and
aad
cmp
push
cld
repnz
popa
mov
gs
inc
pop
pop
lods
lock
and
mov
ss
or
xor
ja
idivb
lret
outsl
push
or
mov
movsb
or
push
pop
mov
test
mov
adc
std
enter
cmp
dec
jo
mov
adc
fcomps
enter
in
es
push
lods
pop
or
xchg
repnz
jo
mov
loopne
cs
mov
adc
push
mov
aaa
lret
inc
loopne
push
negb
xor
inc
dec
clc
test
addr16
push
adc
or
popf
mov
lock
jmp
leave
out
mov
lods
jo
pop
stos
outsl
xor
call
pop
arpl
sub
pushf
mov
mov
repnz
or
push
push
stc
iret
ss
lret
enter
ja
bound
push
lock
mov
or
cmp
mov
out
lods
dec
add
test
lret
test
out
mov
xchg
mov
jne
mov
test
test
mov
jo
hlt
out
pop
mov
push
xlat
cwtl
pusha
insb
mov
or
int3
mov
outsl
ljmp
clc
pop
jo
xchg
bound
out
dec
jecxz
jne
divl
sbb
dec
test
hlt
loopne
push
popf
leave
repnz
loop
js
cmpsl
enter
xlat
aaa
push
lahf
fldl
or
in
sub
fstpt
test
sbb
decl
adc
mov
fwait
fcoms
inc
inc
je
push
jae
mov
xchg
insl
push
lahf
jb
mov
dec
dec
xchg
hlt
cli
bnd
mov
je
xchg
xor
repz
ret
jg
pop
xchg
xorb
rcrb
mov
in
insb
lods
hlt
jg
insb
aam
mov
mov
stc
loop
pop
mov
mov
mov
pushf
mov
jmp
push
popf
or
xor
fwait
push
lret
xor
int3
add
into
push
andl
adc
mov
arpl
or
dec
push
ss
call
push
insb
jg
pop
or
negb
add
jle
jo
ret
orl
jnp
dec
orl
mov
sti
jg
xchg
test
cltd
jbe
je
call
sbb
inc
push
cmp
stos
stos
dec
push
imul
dec
jno
ds
orb
jne
pop
inc
cmp
insb
aas
mov
xlat
mov
sti
xor
addr16
lods
mov
mov
insb
cmp
ret
inc
fsubrs
loopne
add
iret
jbe
cmp
push
pop
lds
jecxz
mov
and
sbb
adc
sbb
je
lock
dec
dec
mov
pusha
and
sbb
add
ja
inc
cwtl
mov
lea
cmp
out
dec
add
inc
jo
add
xor
push
push
hlt
jo
iret
loope
xchg
lock
hlt
insl
movsl
mov
js
insl
xor
pop
and
jns
test
out
xor
aas
sbb
push
gs
cmp
dec
jle
enter
aad
arpl
clc
jnp
xor
dec
mov
sub
pop
fidivrl
js
shr
add
in
sbbl
pop
and
fs
xor
in
rep
jmp
icebp
mov
xchg
mov
stc
xor
loopne
f2xm1
shrb
hlt
xchg
ffree
jo
xchg
sbb
enter
pop
pushf
mov
and
sub
inc
dec
out
adc
push
dec
sbb
pop
jg
rorl
pop
dec
enter
adc
call
cmp
aas
frstor
xor
hlt
pop
mov
jbe
test
xor
xor
jbe
enter
jo
sbb
dec
dec
push
int
popf
sbb
jmp
ror
ret
push
in
hlt
jae
loop
xor
jns
shlb
mov
pop
lods
fistpll
mov
add
adc
jne
add
bound
jg
mov
inc
lock
pop
cld
aaa
shll
add
and
sub
dec
shr
das
bound
icebp
jo,pn
mov
push
hlt
negl
daa
push
pusha
jp
pop
scas
mov
into
or
lods
xor
jae
mov
adc
lcall
xor
std
shll
xor
jl
fwait
lahf
xchg
pslld
in
mov
daa
jo
in
sbb
mov
xlat
sahf
loopne
dec
cmp
push
inc
aam
lret
mov
sub
ret
call
sub
fmuls
vpmulhw
jge
pop
pushf
jo
mov
mov
in
xchg
es
cmp
out
movsl
out
xchg
and
jmp
cmc
hlt
dec
adc
je
xchg
repz
in
in
repnz
pop
pop
data16
js
push
ljmp
jne
sarl
test
pop
sahf
mov
scas
in
sbb
xchg
aam
cli
mov
sub
mov
dec
mov
lock
push
les
jnp
mov
jge
fsubs
xchg
ja
xorb
sarb
outsb
leave
mov
cli
add
cwtl
pop
xchg
mov
mov
popa
pop
jb
test
stos
call
push
mov
or
repnz
pop
clc
dec
insl
lds
jne
add
sbb
push
aaa
leave
mov
insl
aam
loop
lret
push
into
sbb
mov
mov
xor
idivb
pop
or
cs
repnz
xchg
js
movsw
adc
add
dec
sub
loope
cwtl
fisttps
into
fnstsw
fwait
imul
andb
mov
jnp
out
mov
mov
lock
fs
repnz
test
pusha
sti
lods
pop
jo
jno
cli
out
cmpsl
inc
jne
gs
ds
das
mov
stos
int3
push
loop
pop
push
pushf
xchg
js
hlt
repz
aam
push
test
cwtl
adc
js
cld
jbe
fildl
mov
mov
enter
js
sub
xor
jno
inc
cld
outsl
dec
imul
pop
shrl
pcmpeqd
push
addl
dec
sub
sub
or
test
xor
adc
in
inc
das
mov
test
dec
addr16
mov
dec
call
scas
jno
xchg
clc
arpl
inc
insl
mov
xchg
cmp
xor
enter
or
loopne
imul
mov
push
out
lret
xor
or
int3
lea
sub
gs
fcompl
pop
pop
out
and
mov
push
push
adc
cmpsl
push
push
rcr
mov
mov
mov
or
test
jmp
outsb
lret
sbb
fdivl
xchg
or
jne
sub
xchg
mov
inc
jno
mov
fs
in
sub
push
aam
into
sub
sub
cmc
dec
sbb
jne
cmp
pop
inc
js
xor
mov
inc
hlt
cltd
cmpsb
xor
pop
ja
lcall
xor
sbb
enter
push
aam
jne
mov
je
push
hlt
movsl
fimull
das
push
and
addb
and
xchg
js
cmc
sub
jbe
filds
movsb
push
sub
les
cmp
imul
jmp
jge
jo
mov
pusha
adc
mov
sub
adc
and
sbb
inc
cmc
mov
sub
addr16
adc
xchg
dec
clc
call
mov
xchg
test
in
mov
push
outsb
jmp
enter
push
jne
xchg
inc
jnp
hlt
insl
imul
icebp
gs
insl
jl
sbb
sbb
xor
xor
dec
push
inc
test
push
lea
or
dec
je
cmpsl
arpl
scas
cmp
bound
in
in
mov
mov
es
hlt
imul
push
ret
pusha
sub
adc
push
fsubrs
lret
pushf
lea
scas
outsl
pop
adc
js
iret
lret
sti
sub
popf
outsb
dec
dec
test
lahf
aam
or
sbb
fsubrs
sub
hlt
and
insl
in
push
lret
xchg
adc
add
cli
lods
mov
jp
out
pop
cmp
push
jo
lock
lock
inc
les
outsb
inc
and
out
mov
mov
sbb
pusha
or
push
jno
stc
pop
js
add
lock
lret
loope
nop
lahf
imulb
jae
add
cmp
outsl
cli
xor
mov
dec
in
pop
nop
or
fisubs
jno
outsb
sbbl
jnp
loope
clc
jnp
add
inc
sub
hlt
pop
add
cmp
fldl
cltd
jnp
enter
adc
push
ja
les
test
rcr
pop
call
mov
pop
aad
cmc
cmc
je
inc
jae
add
shl
pop
adc
lock
mov
fs
in
and
jb
mov
mov
pushf
inc
scas
addl
push
mov
jl
mov
movb
mov
sub
call
iret
sbbb
xor
add
and
shll
lods
aas
imul
push
push
push
loopne
mov
les
push
movsb
mov
int
repnz
jns
push
push
xchg
dec
rclb
dec
roll
inc
les
std
sub
pop
subps
setbe
stc
test
cwtl
insl
push
mov
insb
enter
jo
ret
test
out
fwait
out
hlt
mov
pop
enter
adc
adc
mov
or
clc
test
enter
hlt
pop
jae
fidivs
cmpl
push
mov
or
scas
xlat
adc
call
int
clc
lock
sub
fs
mov
pop
inc
test
mov
hlt
pop
icebp
gs
insl
adc
lea
inc
outsl
pop
jb
xchg
xor
icebp
aaa
mov
mov
inc
nop
enter
push
insl
jmp
adc
xchg
rcrb
iret
pop
ret
fs
shrl
jge
scas
jecxz
pop
daa
xor
enter
ror
popa
les
inc
xor
jbe
mov
jg
jle
dec
ja
insl
mov
pop
push
pop
add
daa
test
lock
rcr
fsubrl
lods
fdiv
jns
cmp
sub
push
movsb
and
adc
mov
lods
push
sbb
push
and
dec
out
test
pusha
lds
es
gs
frstor
out
hlt
fdivs
std
mov
mov
adc
cmp
cs
mov
mov
fwait
sub
xorps
mov
cmp
test
push
and
inc
pop
dec
jge
mov
jo
test
divb
sub
push
xor
pop
mov
rcrl
xor
aam
xacquire
push
xor
jnp
cli
xor
sub
rorb
inc
aaa
inc
cli
mov
inc
xchg
dec
ja
mov
add
and
test
pushf
imul
lods
jp
jmp
movsl
fisttps
scas
inc
aad
adc
jno
nop
enter
push
shrb
mov
jbe
mov
lods
and
inc
out
sub
jmp
and
popf
mov
lods
rcrb
je
ljmp
jne
xchg
jge
push
in
std
dec
jae
jge
push
lea
push
lods
clc
jl
pop
imul
jbe
fistpll
je
cmp
lock
mov
adc
fldcw
cltd
xor
push
out
testb
push
hlt
out
repnz
lock
leave
cli
andl
dec
sub
lret
adc
jae
inc
dec
subl
lock
aad
jmp
add
jl
inc
cmpsb
mov
hlt
pop
jno
adc
fcoml
test
adc
xchg
lods
mov
enter
and
hlt
xchg
cli
pusha
add
std
enter
xor
mov
add
xchg
call
lods
out
cmp
inc
push
and
loopne
int
dec
aad
cmp
push
push
and
loopne
popf
push
push
repnz
jmp
out
hlt
xor
imul
pop
fmuls
and
push
xchg
std
scas
mov
ret
out
jbe
inc
dec
cmc
stc
xchg
pop
outsb
in
leave
pusha
mov
outsb
pop
push
xor
imul
mov
fcom
fsubs
stc
pop
cmp
inc
cmpsl
in
js
dec
mov
adc
lret
pushf
pop
xchg
aas
test
mov
jnp
sub
jl
sbb
mov
mov
xchg
sub
mov
and
push
jns
gs
xchg
dec
fcomip
hlt
enter
in
sbb
pop
mov
mov
cwtl
mov
pop
jo
scas
aas
xor
lock
aad
adc
jne
mov
dec
jo
or
clc
stos
out
ja
test
mov
out
pusha
pop
in
sbbl
pusha
lahf
andl
pushf
aaa
pop
jl
mov
dec
int3
jmp
sbb
push
enter
inc
xor
mov
pusha
pop
outsb
les
pop
jle
sbb
outsb
jmp
stos
fldcw
sbb
lret
dec
mov
aam
insl
stc
cmp
cli
insl
hlt
pop
push
clc
pop
sarl
lock
lahf
push
jb
xchg
push
cmp
jle
and
jo
in
dec
cmp
scas
and
mov
adc
out
lret
aaa
scas
sti
mov
dec
in
sbb
enter
cmp
or
sub
insl
adcb
jg
adc
subb
out
test
push
clc
lods
sbb
icebp
das
rcrl
cmc
and
inc
test
add
sbb
pushf
clc
mov
sub
aas
iret
mov
js
insl
jbe
cmp
enter
shll
jnp
nop
mov
lock
sti
sbb
or
sbb
in
push
push
pushl
mov
cmpsl
fcoml
rol
or
lock
ret
push
sbb
sbb
push
xchg
and
sub
movsb
sti
jno
add
and
pop
mov
sub
movsb
push
sbb
add
xchg
xor
push
pop
lds
add
xor
in
enter
cmp
jae
loopne
adcl
aaa
std
ret
dec
push
call
lea
in
and
rol
repz
icebp
add
mov
lock
popa
cmp
adc
dec
mov
das
ja
in
nop
inc
pop
enter
inc
test
pusha
mov
or
fistpl
inc
xchg
lods
dec
jp
add
pop
mov
ficoms
jle
lret
jo
lret
movsb
cld
jge
addr16
ds
xchg
rclb
adc
jo
lss
cmp
sahf
mov
hlt
cltd
pop
jo
or
outsb
or
imul
loope
xchg
insl
lcall
push
or
call
dec
jo
xor
stc
fcoml
dec
cmp
xlat
mov
ja
inc
test
or
scas
jo
jne
mov
xor
fwait
xchg
jo
xrelease
lcall
jmp
mov
or
mov
lock
inc
pop
push
and
sub
ror
pop
leave
push
push
ret
in
jecxz
cmpsb
in
jo
outsl
mov
push
enter
jg
push
sar
lret
js
push
cmp
jmp
sbb
popa
jo
loopne
nop
loop
push
pop
jo
pop
pop
xor
js
jo
add
sti
add
jecxz
repz
xchg
mov
dec
shl
popl
cmp
cmp
pop
or
cmpsl
or
jo
jbe
pop
inc
fisttpll
jo
out
sub
sub
jae
xchg
ljmp
bound
jo
inc
xor
sub
and
mov
pop
lahf
test
mov
fbld
adc
adc
sbb
lds
xchg
adc
fstl
mov
push
jns
ja
sbb
lahf
and
xor
bound
jp
cmc
lret
mov
out
scas
jo
or
mov
pushl
mov
ret
jo
adc
sub
add
mov
insl
push
add
jbe
cmp
js
in
push
or
dec
add
inc
pop
sti
aam
jnp
inc
jo
inc
dec
mov
jns
sbb
je
jo
inc
es
loope
jmp
outsb
cmp
or
lret
add
pop
rolb
jo
push
xchg
filds
mov
cltd
push
fsubl
shlb
cmpsl
jb
pop
repz
lea
push
ja
jno
iret
imul
jo
rcrl
clc
push
xor
ds
pop
cmp
outsb
push
popa
mov
jo
or
adc
jno
push
mov
movb
je
add
lock
jo
fmuls
popa
jo
jae
sbb
repz
jo
push
xor
sub
insl
mov
iret
ljmp
push
lcall
jmp
jo
loope
fldt
lock
cmp
icebp
jo
outsl
das
ljmp
jmp
cld
push
dec
lds
mov
push
test
test
mov
dec
incb
jmp
arpl
mov
daa
test
repnz
jo
xorb
adc
inc
jno
push
cmpsl
sbbl
sub
je
cmp
pop
xchg
lea
jo
popf
mov
lcall
adc
pop
push
push
inc
psllw
shlb
mulb
jo
cmp
mov
mov
cli
int
clc
sbb
inc
cmpsl
mov
xchg
mov
imul
shrl
adc
popa
mov
mov
jl
aad
test
loopne
and
mov
pop
pop
ja
fwait
les
mov
pop
jae
es
fbstp
mov
mov
aam
mov
or
stos
add
cmp
jo
push
fcomip
xchg
movsl
cltd
jae
popf
inc
movsb
xor
cmpsb
xor
test
lcall
or
mov
lock
test
mov
mov
sbb
mov
setnp
dec
lds
pop
into
loop
stos
aas
mov
popl
leave
jno
jo
cld
ljmp
mov
xchg
sarl
pop
xchg
mov
xchg
jae
cmp
inc
sub
push
sub
jo
mov
stos
jo
sub
sahf
add
pop
xor
rorb
pushf
add
xor
lret
repz
push
fsubr
or
mov
jo
jbe
cmp
sub
popf
push
jo
mov
hlt
mov
outsl
in
sub
pop
or
push
addr16
or
push
mov
jmp
sub
jo
ljmp
pop
wrmsr
idivl
fsubrs
jbe
jae
mov
repz
call
shll
scas
ret
jne
jo
push
lods
pop
add
call
ja
and
les
or
lea
jl
lret
sub
sar
push
jo
xchg
sub
leave
mov
mov
movsb
rcrl
xchg
lea
dec
add
sub
jg
data16
add
cli
cmp
inc
and
xor
dec
push
sub
cwtl
outsb
je
pusha
es
lret
out
xchg
xchg
nop
xchg
outsl
repz
lea
and
pop
xchg
jo
pop
push
fidivrs
mov
jae
push
lea
cwtl
sub
xchg
stc
mov
mov
mov
lock
xlat
shlb
jo
or
enter
jno
outsb
fsubrs
add
add
pop
xor
imul
scas
subl
inc
test
mov
and
dec
jb
mov
jnp
sbb
and
jo
arpl
pushf
push
jns
ja
ret
test
aas
xorb
sti
mov
adc
test
inc
in
insl
mov
imull
scas
jo
inc
mov
js
mov
inc
cmp
mov
cmc
and
jbe
xor
xorl
or
loop
mov
cmpsl
and
xchg
dec
gs
jmp
xchg
dec
jo
xor
add
push
into
inc
xchg
or
jp
xor
jo
test
or
clc
fdivrp
loopne
add
push
jo
test
mov
jo
rol
rolb
stos
xchg
cs
cmp
aad
test
jo
xchg
pop
aaa
iret
dec
mov
ficoml
sar
lret
dec
mov
push
xor
fnstsw
out
mov
or
addr16
or
shlb
sub
shlb
inc
call
or
gs
sub
dec
out
lock
mov
mov
popa
dec
clc
dec
sbb
jl
dec
cmp
or
push
outsl
jo
out
pop
push
ja
lea
pop
in
cmpsb
bound
jb
orl
insb
cmc
pop
pushf
mov
out
lock
sbb
notb
insl
outsb
dec
cs
add
cmp
mov
push
jo
xchg
popf
pop
test
xchg
add
ja
das
bound
cmpb
adc
mov
jnp
mov
outsl
jbe
stc
jo
inc
bound
jge
jo
jecxz
mov
pop
sbb
out
push
sahf
jo
xchg
mov
arpl
fsts
inc
cmp
jae
ror
lods
subb
push
sbbb
push
paddq
rcrl
adc
out
xor
rolb
loopne
int
or
icebp
insl
jecxz
cmpsl
mov
dec
dec
mov
inc
sbb
lock
clc
subl
xor
out
jo
push
pop
js
aas
loopne
jo
mov
or
push
lcall
in
jo
adc
xor
mov
hlt
nop
cwtl
out
inc
stc
push
jo
push
mov
lea
inc
add
hlt
fnstenv
inc
jo
inc
das
add
xor
push
es
sub
nop
aaa
jo
adc
add
mov
mov
gs
and
push
call
into
jo
filds
push
js
push
xchg
aam
jmp
into
push
push
pop
aas
lods
push
mov
jb
hlt
fbld
jo
dec
mov
mov
popl
dec
mov
xchg
jo
ret
jp
cmp
cltd
inc
sbb
jl
shll
mov
mov
mov
push
and
scas
sahf
xchg
popf
dec
dec
andb
jo
mov
push
subl
insb
lret
lock
ds
cltd
jo
test
lods
jo
mov
mov
inc
fs
aaa
stc
std
ret
add
adc
in
test
outsb
aam
sbb
sahf
out
and
mov
scas
lcall
lock
shll
sub
idiv
jo
sbb
movsl
pop
mov
adc
sahf
inc
repnz
xor
shr
pop
jb
inc
jp
popa
jne
and
jo
aas
movsb
das
outsl
inc
arpl
nop
push
mov
inc
push
jo
inc
jmp
cmp
subl
jo
sbb
rcll
and
sbb
mov
ja
sahf
and
add
push
lcall
cmp
xor
adc
cld
cmp
or
push
mov
fnsave
pop
xor
lock
mov
pop
and
dec
jne
repz
mov
adc
movsb
inc
push
push
pop
jle
jo
clc
sub
jo
push
pop
or
cwtl
xor
dec
lret
jo
popa
lret
daa
adc
enter
test
push
push
repnz
and
add
lods
mov
and
js
fcomps
pusha
cmpsl
sbb
and
pop
test
imul
insb
inc
adc
fstpl
jo
cmpsb
iret
aas
and
jnp
insl
pop
sbb
pusha
dec
jns
sbb
add
dec
xchg
adc
cltd
xchg
test
outsb
bound
jle
mov
scas
das
fldl
ret
mov
cltd
test
sub
jp
insl
cmc
das
jo
sarl
dec
inc
mov
or
cmp
imul
aas
insl
jo
inc
outsb
scas
push
add
mov
insb
jo
inc
cwtl
inc
cld
jp
stc
jo
cmp
xor
and
cmp
jge
mov
xchg
rcll
mov
jo
in
fst
add
jo
in
and
sub
push
jo
mov
sub
push
jo
ljmp
jo
sub
les
jo
fistl
xchg
mov
push
jo
mov
addr16
orb
mov
subl
jnp
lock
sub
in
ret
and
out
fldenv
fistpll
jo
mov
adc
adc
pop
inc
insb
push
lods
jae
sbb
pop
pop
xchg
mov
test
jb
add
les
gs
jo
lahf
mov
test
jo
out
imull
test
shrl
lods
icebp
insl
cwtl
lods
ljmp
pop
test
xor
sahf
jo
xchg
test
push
jo
dec
mov
into
inc
lds
push
push
ficoml
add
mov
imul
cltd
inc
jo
add
jmp
sub
dec
loopne
int
insb
xchg
mov
xchg
clc
xlat
jo
fnstcw
frstor
mov
icebp
cli
jl
sbb
pop
jo
ja
btr
xlat
adc
mov
sbbl
pushf
mov
sbb
xor
mov
cmpsl
je
testl
leave
in
loop
sub
andl
cmpsb
ja
or
mov
pop
sti
push
loopne
or
mov
pop
stos
cmp
fwait
jo
add
in
cli
sbb
pop
jae
or
test
mov
imul
repz
pop
lds
add
popa
aas
sbb
fidivl
stc
xor
das
pop
stos
sub
cmp
ret
es
sub
mov
jecxz
push
mov
add
je
and
mov
mov
std
fs
jl
aaa
out
jne
xor
adc
ja
mov
lds
jnp
push
int3
sub
aas
lret
pop
adcb
adc
cmp
pushf
cli
push
jo
aaa
mov
fwait
jp
xchg
jge
mov
shll
jmp
sbb
xchg
push
ficoms
or
dec
jo
addr16
push
cmp
jp
dec
fcoml
sbb
pop
shl
pop
or
push
jo
pop
lret
je
lret
lea
add
xchg
inc
xchg
dec
out
bound
loope
jo
mov
dec
ret
das
lock
hlt
jp
out
in
ja
pop
outsb
out
stos
rorb
and
jl
adc
jo
push
push
sub
dec
xchg
jo
jle
jmp
mov
outsl
stos
fsubs
dec
jo
inc
add
jmp
inc
and
jo
ds
shlb
and
or
insl
jb
push
mov
jmp
mov
push
enter
ja
sti
scas
ds
adc
xchg
mov
shrb
dec
jle
jo
xchg
cmp
push
in
lahf
stos
jg
lods
or
ljmp
sbb
sti
fs
push
jo
adc
mov
jo
js
movsb
mulps
dec
push
sbb
repz
lock
pusha
faddp
ja
dec
push
outsb
jo
push
mov
xchg
jmp
out
shl
push
or
jo
aas
sbb
jns
dec
mov
mov
insl
sahf
enter
jmp
jnp
repz
arpl
xor
jo
das
and
imul
lahf
fsub
jo
mov
xor
fcmovu
outsb
inc
sbb
mov
xchg
int
aaa
fstpl
rcrb
push
inc
or
xor
xor
add
adc
and
test
out
pop
jle
outsl
shrb
insl
and
iret
nop
pushf
ljmp
add
insl
push
es
out
inc
inc
iret
lock
imul
jno
lods
aam
enter
mov
dec
jo
and
mov
sub
dec
inc
mull
enter
jo
or
push
aam
mov
xchg
inc
jo
push
sub
adc
jo
mov
sub
jo
insb
icebp
xor
lods
and
push
jo
push
mov
jo
int
rorl
and
dec
jo
pusha
dec
vmovntps
lcall
sbb
addr16
daa
lock
sub
pop
xor
call
jg
adc
or
mov
cmp
mov
popa
ror
sbb
push
xlat
push
xor
or
out
call
leave
pop
fidivrs
cwtl
mov
bndldx
loop
jno
or
jp
pop
jle
out
push
stos
push
lock
dec
sahf
icebp
xor
cmp
imul
mov
pop
lods
adc
jo
xchg
out
jo
dec
pop
outsb
mov
lods
arpl
jmp
test
cmpsb
pop
mov
outsb
dec
or
sub
xorl
and
jnp
cmp
cmp
cmpsl
loopne
xor
xchg
lods
xlat
sub
ret
dec
imul
jae
fs
jo
adc
ljmp
jg
xor
add
sub
inc
jo
les
jnp
js
cmp
adc
jo
push
sbb
cmpsl
xor
loope
ret
rorb
aam
cltd
loop
mov
addl
jo
mov
gs
movsl
rcll
mov
pop
adc
shl
dec
shlb
or
pshufw
sbbb
pop
fs
mov
icebp
les
stc
mov
dec
mov
jno
dec
xchg
test
dec
std
and
mov
nop
aaa
or
fcmovb
jo
xor
or
clc
leave
jo
sub
add
cmp
in
mov
xchg
test
fadd
mov
outsb
dec
xchg
mov
or
push
inc
inc
push
mov
xor
lds
mov
aas
out
inc
pop
subb
lahf
ljmp
jo
mov
jo
jne
ss
xlat
lea
push
cmp
out
mov
lret
call
bound
mov
adc
in
test
jle
addl
mul
dec
sarb
jo
outsb
push
insl
sub
lret
cli
cmp
mov
cmpsb
fdivl
jb
mov
jo
add
loope
int
cwtl
jo
stc
pop
insb
and
xchg
jae
jp
fcomip
gs
jo
and
pop
or
jo
loope
clc
adc
fldt
std
sub
push
jmp
out
ja
lds
fisttpll
div
jo
mov
cmp
jnp
in
repnz
jo
shr
add
jo
aam
ss
lods
lahf
jae
mov
stos
cwtl
lock
ja
jbe
xchg
push
pop
je
sbb
aaa
jl
clc
jnp
mov
or
rolb
push
sti
add
sbb
ret
mov
jo
out
lea
jo
fs
jle
std
mov
jo
test
insl
add
pop
cmp
fdivl
repz
int3
lods
jne
mov
xchg
jo
sub
fs
jo
push
popf
xlat
xchg
or
mov
shl
rcl
ja
dec
fidivs
jo
ljmp
jo
jnp
mov
or
dec
aam
lret
outsb
pushf
cwtl
adc
bound
mov
enter
pop
jmp
mov
jo
clc
xor
adc
and
scas
jp
jbe
add
mov
add
icebp
daa
int3
fidivrl
push
aad
test
insb
ffreep
xchg
jno
das
aaa
jne
cs
cmp
jns
lods
loop
in
scas
jo
in
mov
test
add
or
imul
jo
add
nop
mov
jo
xchg
es
mov
insl
jo
fnsave
sbb
inc
ret
jo
mov
mov
adc
add
pop
or
xor
pop
inc
add
pop
sub
xorb
jo
add
sahf
jo
out
ljmp
or
inc
popa
push
std
cmp
push
lea
mov
cltd
mov
hlt
shrb
std
fbstp
sti
rcrl
mov
leave
and
jae
iret
in
sbb
shll
enter
inc
decb
sbb
icebp
pop
test
lea
mov
and
jcxz
dec
out
das
mov
sub
jo
pop
mov
xorb
je
and
xchg
inc
out
mov
ja
std
mov
xchg
jp
pop
dec
and
sub
addr16
out
sbb
xchg
jno
pop
jns
int
mov
inc
scas
shlb
es
les
xor
mov
jo
mov
sbb
stos
dec
jecxz
icebp
mov
pop
cmp
push
cld
jp
dec
lods
mov
xchg
mov
jp
adc
mov
test
jo
push
dec
jp
mov
mov
adc
jo
and
sub
mov
inc
push
jae
adc
outsl
lock
jae
cmpsl
mov
cmp
pusha
or
clc
adc
or
lods
dec
adc
lock
dec
jae
lock
imul
mov
std
add
mov
adc
jo
fimuls
ret
pushf
test
pushf
add
pop
int
fadd
push
stos
lea
dec
lcall
jo
mov
stc
fs
sub
shlb
jo
enter
push
test
jo
xchg
xor
test
pop
in
xchg
mov
pop
sbb
or
pshufw
mov
mov
scas
mov
mov
mov
insl
xchg
js
hlt
add
cmp
mov
movsl
das
cmp
jne
out
test
icebp
ret
aad
stos
jge
ja
cmp
leave
lret
in
out
jo
xchg
mul
and
cmc
call
out
sahf
cmpb
icebp
mov
sti
add
jo
mov
jns
jo
add
insb
and
shll
ja
mov
sub
leave
mov
subb
jae
cmp
sbb
out
das
push
dec
jo
mov
clc
inc
movsb
in
inc
jmp
sahf
mov
mov
add
jo
mov
call
lret
and
das
push
dec
mov
lock
cmp
out
nop
out
mov
movsl
sub
ret
mov
push
aam
in
cmp
inc
sbb
jo
jae
fnsave
push
xor
inc
jl
xchg
jo
rcrb
fbld
jbe
idivl
sahf
fadds
mov
repnz
adc
fiadds
or
xorb
pop
jno
outsl
fs
nop
adc
jo
cmp
pop
xchg
jmp
pop
mov
and
std
jo
test
mov
popa
sub
les
fistpl
test
scas
jne
lock
sbb
add
push
xlat
data16
ja
shlb
add
ja
into
sti
jle
or
test
jnp
push
out
mov
fidivrl
cwtl
sbbl
or
stos
repz
jmp
lock
sbb
fisubs
mov
jo,pt
and
cmpsl
xchg
aad
jl
or
add
sbb
xchg
dec
jae
aaa
pushf
out
adc
std
ret
test
jnp
popf
cmpsl
jmp
fnsave
in
mov
add
cltd
jo
sub
pop
shlb
sbb
and
push
cltd
sbb
enter
bound
sub
and
mov
add
cmc
lea
jo
loopne
loope
or
dec
jns
jle
sbb
inc
mov
inc
xor
stos
rcrl
jmp
mov
insl
cmp
loopne
cli
cmp
stc
xchg
push
sbb
mov
pop
cmp
and
jo
pop
aam
push
inc
inc
push
jo
dec
dec
faddl
mov
jo
pop
and
mov
jo
jbe
jne
lcall
or
inc
insl
fcoml
push
sarl
cltd
xlat
add
shrb
aas
jo
pop
jne
jecxz
test
or
nop
movsb
sub
enter
push
imul
outsb
dec
push
mov
pop
adc
cmpps
das
lods
clc
lock
shll
or
sbb
icebp
push
mov
inc
mov
mov
cld
ja
xchg
aam
out
xor
fstp
jl
and
stos
popa
dec
jo
adc
cli
inc
xor
jo
subl
pushf
sub
ja
decl
mov
jb
in
push
les
xchg
rclb
mov
adc
push
lock
sbb
lret
imul
inc
addr16
test
ret
das
popf
aam
or
xchg
jo
fisttpll
and
out
jo
xor
pop
stc
adc
jo
mov
inc
in
nop
mov
mov
cmp
jae
inc
cmpl
push
filds
pop
cmp
xor
xchg
scas
out
jo
orps
fldln2
sub
pop
jae
adc
cmp
pop
jo
pop
xor
fisttps
push
jo
jecxz
dec
jmp
adc
dec
divl
dec
jo
push
ljmp
int
adc
jo
lods
test
dec
push
or
jo
ds
xor
decb
lods
inc
mov
xor
movsl
arpl
cs
hlt
cli
jb
mov
inc
mov
push
cmove
outsb
pop
scas
dec
aad
pop
xorb
mov
loop
cwtl
repnz
jp
mov
adc
xchg
addr16
testb
pop
xor
repnz
add
pushf
out
push
jo
jmp
rclb
sub
mov
cmp
jo
arpl
gs
div
jo
stc
sbb
sbb
ds
test
ficoml
lret
mov
les
sub
imul
cli
jo
shrb
roll
outsb
mov
pusha
sarb
dec
mov
cmp
jo
push
fnstcw
mov
jmp
xchg
xchg
jp
push
lods
push
adc
push
fnstcw
mov
test
push
clc
push
pop
xchg
or
out
outsb
and
lcall
or
xchg
stc
and
out
sti
jo
mov
mov
les
mov
sbb
fcoml
add
jo
enter
sub
xchg
pop
pop
dec
add
jo
aad
loope
rclb
fisttpl
out
inc
popf
xchg
or
mov
lock
nop
test
loopne
inc
mov
xchg
inc
jo
ljmp
insl
or
sub
ret
fldl
out
jno
adc
push
lods
ja
jo
movsb
cmpb
sub
ss
sub
inc
int
lock
xor
js
jo
ret
jecxz
sbb
xchg
call
add
push
inc
cli
sarb
xchg
pop
add
and
lods
sti
or
addr16
mov
ja
roll
pop
das
subb
test
andl
pop
in
cwtl
xor
ficomps
add
adc
mov
jbe
jl
ret
pop
insl
mov
in
cmovge
or
jo
daa
or
mov
push
jmp
and
jo
add
inc
jne
push
mov
and
and
popf
lahf
jo
lods
mov
hlt
ljmp
enter
dec
cmpsl
pshufw
fstpl
aad
add
ja
aam
jo
out
pop
jns
gs
xor
stos
call
iret
imul
mov
cmp
mov
arpl
jo
cmp
sbb
sub
dec
sub
and
or
in
iret
add
ficompl
inc
cmp
jecxz
or
pusha
inc
add
inc
pop
aam
cmpsl
push
inc
stos
jmp
or
mov
add
sub
je
out
cltd
jo
sti
cmp
fcomps
inc
std
lock
inc
xchg
idivl
cli
test
add
xor
xchg
push
push
sub
xchg
sti
iret
jo
mov
push
ret
shll
fadds
dec
add
dec
jo
xchg
cmp
or
jae
inc
imul
fs
addr16
jecxz
fimull
sar
sub
jo
mov
in
jo
je
in
adc
ja
fldz
test
jns
and
test
sbb
pop
cmp
cwtl
lods
decl
out
push
cs
out
pusha
jo
ja
sub
pop
jae
mov
jb
xchg
inc
xchg
mov
call
dec
cmc
ds
lock
jo
mov
lock
faddl
call
or
into
inc
repnz
jo
iret
lods
push
int
mov
test
mov
inc
jo
dec
sub
cmp
inc
packsswb
lret
sub
test
jle
mov
dec
push
jnp
fildl
out
and
mov
lock
or
ja
mov
cmp
add
push
xchg
lret
pusha
es
fnstenv
mov
adc
cltd
inc
mov
adc
jo
ret
xchg
comiss
iret
fcoml
neg
mov
xchg
mov
pushf
dec
xor
jo
push
mov
movsb
cmpsl
nop
repz
dec
adc
xchg
pop
insl
pushf
loop
mov
adcl
and
ss
jo,pn
xchg
leave
pop
xchg
inc
mov
pop
shlb
inc
aaa
test
es
fwait
cmp
pop
jmp
mov
jp
mov
jo
dec
cwtl
insl
inc
jmp
subb
mov
add
jo
insb
xor
movsl
jno
mov
sti
sbb
dec
xor
cmp
clc
shrb
outsl
push
repz
cwtl
decb
pop
divb
in
pusha
data16
inc
jo
sti
mov
jo
andb
jae
aam
inc
ds
jl
inc
daa
icebp
push
fdivs
rcll
inc
cli
stos
jae
mov
rcrb
jo
aas
rol
push
cltd
xlat
enter
cmp
xor
push
jo
add
dec
xor
lret
push
sahf
add
jo
dec
xchg
outsl
mov
jae
mov
bound
or
jo
cmc
mov
or
xchg
jo
sub
pop
mov
add
lock
mov
xor
jge
hlt
inc
push
jo
in
adcl
pop
jmp
mov
jo
sub
lcall
add
sub
aad
popf
jo
xchg
data16
addr16
divl
shll
jo
mov
mov
jo
out
inc
icebp
jecxz
jne
lcall
outsl
push
lret
xchg
mov
add
int
jo
xor
jmp
mov
jl
mov
sub
daa
out
outsl
pop
adc
shrl
scas
and
leave
mov
xchg
jo
jecxz
dec
sbb
mov
pop
push
mov
jp
and
jbe
enter
dec
adc
inc
push
ja
jo
cvttps2pi
cs
mov
lock
notl
dec
mov
dec
js
cmp
pop
lods
pop
push
xchg
je
adc
inc
xchg
pop
xchg
xor
mov
pusha
mov
cmc
jne
jae
pop
add
aas
sub
es
mov
dec
cmp
or
shlb
rorb
jo
jmp
addr16
add
mov
arpl
and
pop
adc
lahf
jo
cli
aad
push
xchg
and
xorl
pop
mov
inc
insb
loopne
in
fnsave
pushf
pop
aaa
mov
rcrb
and
inc
xor
xor
xchg
test
pop
pop
clc
jle
fnstcw
insl
or
mov
mov
int
mov
dec
sub
cmp
insl
or
pop
jbe
jo
inc
xor
push
or
inc
cs
movb
add
stos
pop
inc
loope
jo
dec
sahf
jg
mov
add
push
inc
jp
mov
xchg
or
pop
cmp
inc
test
push
clc
mov
sub
jg
shlb
jg
mov
jp
aad
jne
push
mov
and
push
jo
or
shl
inc
mov
das
dec
lock
clc
lea
dec
out
jo
frstor
je
or
dec
xor
bound
push
mov
inc
adc
jo
gs
pmaxsw
pop
jo
lret
imul
mov
push
push
sbb
lret
pushf
out
fstpt
jecxz
xor
adc
mov
dec
shrl
sbb
cmc
aad
cmp
out
into
std
fcomip
pop
outsb
jo
icebp
push
jno
ljmp
sahf
sub
lahf
movsb
dec
aam
out
mov
pshufw
iret
out
dec
jae
jo
inc
js
sub
fstpl
mov
bound
jo
decl
and
inc
dec
push
jo
subl
jo
jnp
mov
jo
cmp
aad
arpl
xchg
leave
jo
clc
and
fnstenv
jp
adc
mov
inc
in
jo
scas
adc
ja
iret
pop
cvtpi2ps
fistl
adc
jge
mov
cmc
jo
mov
ds
int3
mov
mov
inc
dec
iret
pop
imull
rorb
outsb
xchg
mov
leave
pop
movsl
jae
mov
repz
fistl
jo
mov
mov
dec
clc
ljmp
add
or
mov
jle
fnstcw
in
insl
inc
outsb
and
lcall
sbbl
cmp
loope
push
push
stos
xorl
dec
loopne
adc
sub
js
leave
divl
jbe
push
jl
mov
iret
sub
insl
mov
add
pusha
call
sbb
jp
mov
mov
das
cmc
cmp
jl
xchg
xor
pushf
inc
jmp
sub
jo
andb
shl
xchg
bnd
push
cwtl
xor
jbe
lahf
xor
mov
mov
stos
cmp
sti
insb
cmc
dec
cmpsl
enter
xchg
stc
in
push
adc
repnz
xchg
icebp
stos
mov
adc
add
sub
jl
mov
dec
out
neg
pop
push
jg
imul
call
push
aam
mov
mov
movhps
mov
sbb
inc
sbb
push
cltd
gs
gs
repz
je
adc
popf
in
xor
bound
sub
dec
jno
test
dec
or
mov
and
mull
xor
dec
mov
mov
loopne
jbe
insb
imul
cli
aam
repz
xor
aad
cmp
jns
mov
in
cwtl
loope
outsl
push
idivb
ficompl
jns
sub
outsl
movsb
mov
mov
popa
mov
push
cltd
imul
and
sti
fwait
xchg
insb
stc
inc
test
pushf
ret
push
mov
xor
sahf
lea
scas
jo
inc
adc
loopne
push
lock
je
bound
or
push
es
hlt
mov
das
repnz
sub
fcmovnb
in
decl
adc
aad
mov
inc
popf
cmp
or
mov
adc
mov
cmp
ljmpw
icebp
xor
ret
jno
test
cltd
inc
mov
cmp
mov
addb
fsubr
jbe
mov
push
cmp
fisubrs
sub
xor
mov
sbb
sbb
mov
mov
cwtl
xlat
mov
mov
push
xchg
cs
in
push
or
inc
dec
sbb
jns
push
pop
dec
push
inc
mov
pusha
sahf
add
pop
das
decb
jo
xlat
jecxz
fwait
lret
mov
or
inc
sahf
xlat
jo
fs
loop
fistps
sub
popa
xchg
repnz
jo
je
lods
sub
loop
jo
xchg
xor
jo
enter
aas
std
mov
jmp
cltd
jo
and
jp
mov
lods
pop
out
push
push
xchg
mov
push
mov
dec
divl
inc
fimuls
pushf
adc
lahf
inc
call
inc
push
cmp
nop
lahf
xor
mov
adc
je
jo
cli
sub
gs
jo
fs
mov
jne
jo
push
es
dec
and
push
dec
std
cwtl
jo
ret
call
xor
mov
mov
insl
xor
mov
adc
mov
js
pop
cmp
jle
push
iret
into
dec
in
jo
fnstsw
ljmp
dec
sbb
jo
sub
dec
jo
scas
outsb
pop
into
cmp
rorb
and
movsl
push
push
rorb
cmp
xor
insl
pop
gs
ja
or
mov
mov
lcall
aad
idivb
adc
aas
ret
fbld
loopne
mov
xchg
mov
es
ja
xchg
mov
rclb
mov
jo
add
inc
ds
mov
xor
jo
push
jmp
mov
outsb
clc
sahf
mov
je
mov
and
bnd
jo
cmpsb
loope
aam
pop
add
test
aas
stos
in
xchg
cmp
faddp
lret
and
hlt
fstpt
and
out
mov
sbb
scas
jo
rcll
cmp
and
pop
mov
lods
mov
xchg
xor
nop
lods
jo
cmpsb
dec
pop
icebp
leave
jne
jo
pop
frstor
pop
aaa
xchg
jo
std
out
notl
int
mov
push
insl
lds
mov
mov
cmpsb
stc
jl
xchg
mov
lret
cs
daa
jo
loopne
jp
int3
lods
dec
jae
mov
mov
in
and
pop
loope
or
das
or
pop
push
push
or
divb
cmp
xlat
je
addr16
push
aaa
mov
mov
divl
popf
xlat
rclb
lds
jo
cli
mov
cmp
nop
sbb
jo
push
enter
jp
push
sub
adc
ja
xor
jno
inc
test
icebp
in
jp
sbb
adc
adc
pusha
dec
push
jae
inc
int3
stos
into
cmp
movnti
push
dec
mov
movsb
jge
jo
mov
lcall
adc
mov
mov
inc
push
add
mov
mov
jne
push
jo
cld
sbbb
add
xor
or
add
jo
pop
and
jo
pop
mov
jge
scas
or
jecxz
pop
inc
or
jo
ror
addr16
stos
ljmp
cmp
mov
lcall
out
fstpt
jo
js
and
int
loop
cmc
in
mov
dec
xchg
hlt
pop
clc
jmp
es
fidivrs
mov
addr16
aas
int3
out
test
jnp
call
stos
jo
dec
in
hlt
lahf
cmp
adcl
jo
mov
outsb
aam
imul
mov
pop
insb
xor
lret
pushf
cmp
and
pusha
mov
push
les
std
es
or
push
jmp
jo
mov
sub
leave
pshufw
loope
jbe
dec
xchg
lock
pop
stos
cmp
loope
dec
nop
mov
clc
outsl
pop
pop
mov
cltd
add
nop
bound
jae
rcrb
adc
mov
out
pop
scas
cwtl
jecxz
ret
loopne
insb
nop
gs
int
xor
pop
xchg
inc
xchg
xor
cmc
fs
enter
add
test
std
sbb
das
hlt
xchg
xor
sub
movsb
fisubrl
add
pop
aaa
pop
clc
inc
in
and
dec
mov
jl
daa
inc
or
xchg
shl
sahf
lock
lahf
iret
rcrb
sbb
sbb
adc
test
dec
adc
fwait
negl
dec
in
push
ja
xor
fstpl
pop
xor
cmp
ja
loopne
cmc
mov
testl
cltd
push
inc
and
dec
in
js
pop
push
and
xchg
mov
lcall
push
pcmpeqd
pusha
cmp
aad
fs
xchg
and
and
sbb
jle
test
inc
je
aam
xchg
mov
sub
xor
mov
lret
mov
repz
xchg
lods
lods
xchg
inc
out
js
popf
cmpsl
add
adc
andb
jmp
into
fs
leave
and
inc
sub
cmp
sbb
mov
cwtl
pop
jge
in
fstps
imul
cwtl
in
xchg
mov
flds
loop
mov
inc
imul
fstps
mov
xchg
cmp
stos
adc
mov
divl
leave
jbe
dec
and
or
sub
stc
cwtl
inc
shll
or
cld
push
push
xor
push
dec
pop
fwait
enter
loopne
lock
push
int
and
in
std
mov
fwait
roll
shlb
or
cmp
ss
inc
loopne
mov
sbb
shll
scas
xchg
jp
test
hlt
hlt
mov
shl
lea
lock
jle
jnp
adc
sub
lcall
adc
les
in
adc
enter
lret
test
or
inc
aad
ficoml
test
add
or
dec
fisubl
pop
shrl
outsl
xor
sbb
fisubs
lods
pop
dec
cmc
mov
adc
sub
mov
fimull
push
jl
add
cmp
xchg
add
sti
jbe
test
imul
push
lods
nop
xchg
aam
arpl
jbe
sub
xchg
cmpsb
and
ret
jl
dec
jmp
imul
dec
bound
xor
mov
cld
jae
mov
jns
jne
or
arpl
fcmovnu
push
mov
inc
mov
int3
push
cwtl
xchg
and
and
or
mov
inc
and
fstl
lods
push
mov
aas
xchg
loope
add
outsb
jl
cwtl
push
std
loopne
xchg
or
imul
inc
lret
shufps
mov
fmulp
cli
jne
std
inc
shll
jne
faddl
repz
xorl
pop
ret
lcall
mov
movsb
leave
outsb
pop
sbb
jl,pn
daa
mov
pop
fmuls
push
daa
ret
scas
test
enter
adc
push
jo
hlt
sahf
xchg
push
scas
mov
xor
pusha
cmp
add
jmp
mov
jnp
mov
dec
leave
pop
and
mov
andb
sbb
mov
sbb
dec
sub
shrb
mov
push
stos
pop
arpl
loopne
pop
lcall
mov
xchg
in
int3
roll
mov
fadds
repnz
sbb
cmpsl
movsl
movups
inc
and
cld
jnp
or
mov
out
aam
test
dec
sbb
adc
fldln2
and
inc
mov
pop
in
jo
and
jbe
mov
cmc
jnp
sbb
xor
adc
push
jbe
movsb
cmpsb
adc
lret
jnp
pop
pop
push
notb
sbb
pop
dec
cmp
push
jno
mov
shll
lahf
inc
sub
pop
stc
mov
int
imul
and
mov
js
repz
cmpsb
fstl
xchg
inc
sbb
je
sub
xorb
bnd
gs
ret
pop
out
popl
push
pusha
icebp
mov
imul
add
inc
je
sub
loop
insl
xchg
xchg
es
jae
stc
sarb
lods
jle
adc
divl
sub
mov
loop
in
dec
pop
repz
jae
sbb
sahf
or
fiadds
je
fsts
push
xchg
jne
outsb
ljmp
or
dec
sbb
mov
fistps
imul
dec
push
inc
popa
popl
push
je
scas
movsl
xor
scas
and
je
in
out
orl
aam
jmp
je
in
in
fs
inc
pop
fldenv
jns
push
mov
push
mov
push
stc
cld
push
cmp
sti
lock
xchg
add
xchg
bt
outsb
mov
imul
scas
lret
xchg
mov
adc
push
int3
push
mov
into
mov
adc
jge
or
dec
cmpsl
sbb
nop
in
sbb
mov
sbbb
dec
int3
jp
jl
cmc
rcr
in
push
fimull
je
pop
mov
cmc
cld
dec
in
call
mov
test
stos
mov
push
jo
stc
dec
cmp
scas
pusha
sbb
sub
jae
mov
jl
or
push
sbb
notl
mov
and
xchg
in
mov
cwtl
dec
push
pop
or
cmp
js
sti
incb
out
and
movl
les
outsb
call
push
cwtl
mov
dec
fisubs
mov
cmp
pusha
jnp
and
mov
mov
mov
movaps
lock
jae
xchg
jnp
cwtl
xchg
or
sbb
in
stc
xor
jl
adc
inc
out
movsl
jp
sub
ret
lock
xchg
xor
jmp
sbb
pop
in
je
js
scas
mov
xor
insl
mov
in
pop
or
sub
xchg
jo
adc
and
cltd
jb
sub
outsl
ss
mov
cli
outsl
push
jg
push
das
fnstenv
sarb
pop
jae
dec
and
mov
and
xchg
push
daa
cmp
mov
aas
sbb
fdivl
pop
outsl
sbb
pop
jo
fimuls
cwtl
aas
int3
mov
aad
loopne
ja
mov
hlt
popf
push
xchg
imul
ficoml
enter
cwtl
lock
inc
fs
xchg
icebp
push
jle
and
jg
aad
incb
push
xor
repnz
or
loopne
sub
sahf
repnz
in
loopne
xchg
loope
push
adc
nop
scas
push
mov
xorb
xchg
icebp
sbb
scas
jne
dec
xlat
mov
jno
sti
les
mov
iret
inc
mov
sbb
andl
and
clc
mov
cmp
mov
lcall
aam
daa
add
sbb
sbb
pop
fisubs
mov
les
fs
and
adcb
jmp
js
mov
jnp
push
push
mov
cmp
fisubrs
call
scas
adc
fidivrs
stc
ret
or
fnsave
adc
pop
clc
or
leave
and
adc
ficomps
andl
loopne
push
ret
jo
dec
or
mov
xchg
lock
adc
cmpsb
repnz
mov
sub
fadds
sbb
cwtl
sub
jnp
pushf
xor
lret
dec
push
pop
sbb
pop
movsl
push
pop
lods
xlat
cmp
pop
dec
push
mov
inc
sub
jmp
or
scas
leave
sub
addl
jbe
insl
dec
fsts
jge
nop
icebp
lea
mulb
cwtl
arpl
arpl
shll
jno
pop
fnsave
loopne
arpl
jo
dec
rcl
mov
sarb
lret
pop
cld
aad
mov
adc
fs
mov
pop
jae
add
sbb
xchg
mov
inc
cmpb
bnd
xorl
add
stos
rclb
jmp
or
imul
cltd
loopne
inc
mov
loope
enter
push
dec
or
jae
gs
inc
xor
fildl
leave
jo
pop
dec
mov
out
movsb
jo
shl
testb
xor
cmp
lods
lcall
jo
pop
inc
roll
jo
mov
add
cmp
add
mov
call
or
jo
jg
das
mov
push
movsl
dec
cltd
aaa
rcrl
sub
daa
mov
or
mov
insl
das
xchg
jmp
jge
mov
push
mov
mov
jo
sub
push
fdivs
dec
and
cld
pop
inc
mov
mov
jl
xchg
or
jl
sti
fcoml
pop
mov
nop
pop
sub
loop
pop
pop
repz
jo
rcrl
pop
jo
xchg
das
mov
push
push
mov
incb
in
inc
jb
xchg
adcl
mov
mov
adc
scas
insb
inc
pop
dec
sbb
shrl
jmp
fidivl
lea
jo
es
and
inc
jo
cmp
mov
jo
dec
data16
mov
push
jmp
jp
pop
or
cmp
inc
sub
mov
adc
ja
call
int3
push
jo
and
andb
jo
mov
aam
push
add
inc
mov
dec
mov
and
bound
lds
mov
out
aas
sub
insl
cmp
pop
sbb
leave
es
and
inc
pop
jo
mov
cmpsl
jo
push
pop
lret
add
pop
sub
xchg
push
xchg
jo
jb,pt
jg
pop
or
aam
cmp
add
xlat
mov
pop
fsubrs
sub
mov
scas
cs
mov
cmp
xor
inc
inc
inc
je
and
jmp
or
fsubrl
sub
mov
cltd
mov
push
sub
sbb
inc
or
and
std
or
sbbb
mov
jnp
jo
fidivrs
xchg
inc
push
add
lahf
mov
jo
sahf
sub
lock
ljmp
incl
outsb
jmp
cwtl
or
bound
cli
test
jp
mov
pushw
xor
mov
xchg
dec
ja
dec
repz
mov
adc
pop
popa
ja
outsb
and
call
adc
xchg
jnp
jo
xchg
shll
lods
pop
add
jmp
loop
lock
mov
jl
xchg
push
mov
dec
xchg
std
lods
lahf
push
leave
pop
in
mov
movsb
negb
and
push
fs
xchg
gs
int
popf
mov
mov
push
push
pusha
jo
sbb
xchg
xchg
jo
cli
xchg
ja
call
adc
nop
mov
mov
cmp
pusha
lods
outsb
mov
jnp
mov
int
cmp
cltd
push
in
sub
pop
jo
jbe
mov
bound
inc
cmpsl
mov
mov
jmp
aam
dec
mov
mov
sub
jo
mov
pop
add
push
jb
jo
gs
xor
insb
push
dec
sub
xor
adc
push
xchg
sub
sbb
packuswb
mov
jo
add
icebp
jo
mov
mov
push
std
dec
fmuls
aam
call
push
add
lcall
out
pop
aam
insl
adc
orl
jo
push
cltd
jle
xchg
call
push
loopne
mov
jo
dec
lods
and
push
stos
dec
sbb
outsl
movsb
divl
cmp
sub
sahf
pop
mov
jecxz
outsl
xor
jo
cmp
dec
popl
xor
inc
adc
inc
ljmp
out
arpl
inc
sbb
add
outsb
je
inc
pushf
inc
add
mov
lret
xchg
pop
fcomip
push
outsb
or
pop
lea
cwtl
mov
jo
addb
jo
adc
pop
test
jbe
hlt
push
int3
dec
mov
dec
subb
xchg
test
add
or
out
imul
imul
cli
bndldx
jnp
mov
mov
hlt
insl
jo
aam
repz
jo
sbb
test
testl
jo
mov
push
jo
cli
enter
jbe
jo
add
call
jae
xchg
testl
fdivs
cld
lods
in
add
inc
addr16
ja
push
sub
jo
nop
xchg
jo
cmc
loopne
mov
jbe
shl
cmp
push
das
sbb
dec
add
dec
in
jg
dec
mov
insb
jo
mov
sub
lds
cmp
or
dec
popa
ja
call
xchg
stos
jo
fcmovbe
sbb
mov
ret
and
int3
jp
cltd
cli
fdivs
out
ljmp
imul
pushf
mov
lea
inc
fs
mov
inc
lea
adc
jl
paddd
xorl
stc
test
jo
shll
push
enter
sub
pop
rolb
dec
jo
mov
inc
pop
push
inc
fdivl
pop
pop
rcrb
mov
fimull
sarl
cwtl
mov
les
loop
sub
jbe
push
pop
adc
push
scas
fcos
loope
jo
aam
ljmp
fimull
js
rcll
std
cmp
and
aas
nop
sti
divb
pop
xor
sarb
jo
dec
int3
sbb
rolb
push
mov
repz
jbe
imul
mov
ja
in
or
jecxz
or
ljmp
fdivrl
sbb
xlat
xor
aam
sub
lea
mov
and
xor
inc
jo
inc
sub
jo
jle
push
xchg
cltd
jae
jo
iret
or
mov
lods
shll
in
sahf
cmp
mov
sub
jo
leave
mov
fwait
insl
jo
clc
mov
jae
xor
pop
mov
mov
and
cmp
mov
aaa
or
sbb
xchg
jo
xor
inc
pop
sub
jo
lea
sub
popf
in
dec
dec
adc
fisubs
mov
add
inc
jo
push
push
scas
xor
es
ljmp
jo
mov
setno
pop
or
popf
inc
push
outsb
icebp
cmp
push
jo
xchg
xorl
ss
xchg
mov
mov
jo
push
movsl
sarb
pop
jmp
jecxz
fs
xor
out
push
aas
ja
sbb
mov
fs
jo
adc
inc
incb
loop
inc
mov
ficoms
cmp
ja
imul
dec
subb
fdivl
xchg
inc
push
pushf
xchg
jo
xor
and
mov
jg
fsubr
inc
fnstcw
call
shll
dec
pop
inc
loop
cwtl
xor
mov
cltd
iret
jo
ss
mov
clc
test
push
mov
inc
pusha
leave
lock
cmp
insl
int3
lock
lahf
dec
mov
pop
push
lock
shrb
testl
pop
lea
out
test
adc
lds
push
xchg
add
sub
popa
enter
sub
jo
or
dec
fisttps
push
int3
aaa
mov
mov
js
cmc
je
push
lcall
jecxz
xor
mov
lds
lock
ss
adc
sbb
lea
fs
and
ret
aad
js
push
adc
aad
nop
xchg
mov
pop
aas
mov
add
insl
pop
sti
jmp
aam
mov
or
inc
sbb
test
in
adc
cmc
mov
cmp
ljmp
xor
and
jecxz
mov
pop
adc
or
xchg
adc
xchg
adc
imul
ljmp
out
adc
xchg
test
movsl
pop
pop
clc
in
pop
sbb
pop
int3
sar
daa
in
gs
xchg
rcrl
shl
jl
arpl
popa
rolb
out
in
sahf
sahf
pop
mov
jne
jo
sub
xor
pop
push
insl
fidivs
inc
adc
jo
cmp
xchg
mov
fimull
jo
sbb
test
cmp
scas
jo
add
call
ret
inc
pop
sub
push
push
lods
mov
mov
call
dec
sbb
xchg
loopne
pop
cwtl
jo
bound
pop
jp
inc
movsl
or
cmp
jo,pt
faddl
jmp
dec
fbld
or
subb
ret
lock
dec
xor
aad
jo
lret
and
cld
mov
ss
fimull
jo
in
mov
pop
sti
call
sub
fwait
mov
adc
and
sbb
pushf
xchg
adc
and
cltd
mov
ss
arpl
int
jno
fdivs
movsl
lock
xchg
push
decl
add
dec
mov
out
test
xor
es
stc
fsubs
outsb
ja
sub
pop
sti
inc
cmpsl
mov
mov
push
sbb
les
rcrb
mov
mov
and
loope
xor
or
push
pop
push
sub
inc
and
or
repz
push
mov
mov
mov
xlat
jo
popa
lds
xchg
add
jo
sub
test
pop
ret
xor
addr16
dec
gs
mulb
sub
sbb
mov
fnstenv
jae
std
xor
mov
or
push
jo
or
or
mov
cltd
cwtl
ss
orb
push
cmc
aam
sub
jno
shrb
adc
lock
jbe
imul
movsl
jo
and
insl
adc
nop
mov
lret
mov
pop
jp
lret
pusha
ret
push
in
mov
push
fistl
jp
nop
jo
mov
inc
loope
mov
outsb
mov
push
xor
or
jbe
sbb
repnz
jmp
in
push
sub
je
cmp
xlat
mov
xchg
xor
xchg
jo
sbb
jg
jecxz
inc
jo
into
shr
and
shll
cs
mov
cwtl
sbb
shl
mov
popa
mov
push
fwait
cmc
jo
mov
shr
ss
push
jo
pop
mov
or
jbe
insb
idiv
shlb
mov
jo
sahf
adc
mov
ja
jge
in
and
add
and
push
mov
daa
int
lock
sbbl
pop
in
das
aad
add
jo
and
dec
pop
mov
icebp
and
pop
int3
mov
mov
fildll
fsub
sub
loop
inc
jp
inc
scas
mov
lock
cmp
mov
pushl
ja
dec
dec
pop
insl
fcmovne
jmp
push
cmp
outsl
xchg
les
jo
jmp
in
ja
repz
sbb
lahf
jl
pop
xor
mov
jo
fidivrs
sub
add
int3
push
subl
lcall
sbb
push
add
xchg
or
cld
inc
test
rcll
pop
xchg
push
sti
push
lds
imul
jmp
popa
jo
stos
or
pop
in
mov
jo
sub
hlt
fwait
mov
bound
adc
mov
jno
insb
fnstcw
add
dec
inc
dec
mov
enter
fimuls
fcompl
mov
ljmp
xchg
ud0
sbb
or
push
jo
out
sub
xor
push
xorb
fimull
movsb
mov
jo
pop
adc
je
jo
xor
mov
add
pusha
pop
pop
xchg
rorb
jge
lock
inc
pop
pushf
or
mov
adc
and
aad
push
ds
lods
pop
or
ja
dec
cs
mov
mov
cwtl
pop
stos
xchg
cmpsb
pop
xchg
nop
iret
jo
push
or
push
mov
adc
cmc
fdivl
dec
mov
jno
inc
add
dec
inc
jo
jb
les
sub
lock
dec
and
inc
mov
jle
dec
push
cmpsb
pop
jo
lcall
jo
xlat
and
cmp
mov
pushl
xchg
jle
fdivs
gs
cltd
mov
push
mov
jp
mov
dec
inc
sub
adc
adc
mov
mov
test
push
or
mov
lock
daa
xchg
jo
jp
dec
repz
shr
cmp
sub
xor
lret
push
jae
sbb
and
mov
sub
lock
pop
xorl
pop
jp
xchg
fs
icebp
cmp
jo
test
jmp
jo
xor
test
push
ja
cmp
cltd
or
jo
mov
pop
sub
test
inc
jb
aam
jae
cli
push
lcall
shlb
add
imul
jp
jmp
lock
mov
sbb
imul
cmc
jo
or
cmp
pop
sti
cmp
jo
shrl
push
cmp
jo
lahf
mov
mov
xor
rcrl
sub
xor
xchg
cli
je
mov
jo,pn
aas
fsubs
jo
xor
pop
mov
push
sbb
jo
or
adcl
decl
je
in
out
jae
jnp
fstpt
sbbb
dec
and
or
mov
fnstenv
xor
jo
nop
roll
dec
fidivl
shlb
cltd
fnstsw
adc
ret
aam
push
or
mov
jo
movsl
xor
inc
jmp
ja
je
push
inc
ret
ja
adc
daa
cld
ss
jo
and
pop
jo
mov
shlb
xor
adc
mov
jo
push
sar
inc
insb
mov
jo
cwtl
pop
or
jmp
mov
dec
jo
cmp
mov
sub
loopne
mov
rcr
pop
lods
cmc
mov
fwait
pop
jbe
xchg
cli
pop
fistpll
mov
cmp
mov
jb
inc
outsb
sub
roll
push
insl
jo
adc
mov
aaa
ja
pusha
fs
sahf
ja
das
mov
jns
xor
jo
movsl
inc
push
sub
mov
idivb
or
sbb
lret
jo
stc
push
popa
inc
in
pop
fwait
daa
pop
jo
dec
clc
mov
mov
fisubrl
repnz
cmpsb
xor
sbb
sti
jo
in
stc
hlt
dec
jp
test
sub
push
mov
adc
jp
ret
xchg
lcall
jo
and
mov
sbb
mov
imul
addr16
add
icebp
stos
xor
pop
push
sbb
imul
jecxz
lods
pop
int
arpl
mov
dec
sub
lock
xchg
pushf
inc
jo
push
or
aaa
inc
push
jo
xchg
mov
hlt
jo
aad
mov
jo
into
jmp
or
jmp
lock
inc
repz
xor
stos
pop
cmp
ss
adc
add
xchg
insl
dec
out
rcrl
popf
mov
cltd
add
mov
xor
repz
jne
sahf
xchg
push
lock
call
inc
jo
pop
std
es
jno
lcall
arpl
int
in
jo,pn
lds
lcall
lock
mov
ret
or
lock
cmpsb
jns
add
jo
ja
sbb
lret
jo
pop
mov
fcmovnu
push
jo
xchg
jg
xchg
fldl
pop
xlat
mov
push
xchg
xchg
push
mov
cmp
add
jo
aaa
fisttpl
insl
inc
mov
dec
int
ds
shl
sub
cmp
mov
outsb
mov
insl
xor
mov
jo
mov
insb
xchg
je
negb
pop
shrb
mov
stos
loopne
mov
xchg
insl
pop
iret
out
fwait
and
sbb
out
gs
insl
add
or
stos
negl
add
jo
pop
mov
jno
pop
mov
mov
mov
jo
cmpsl
cld
leave
scas
fisttpll
dec
into
mov
ret
mov
push
adc
clc
fs
stc
scas
pop
xor
jo
jbe
jge
push
add
insl
jmp
mov
inc
add
out
jo
test
pop
adc
xor
and
mov
jo
in
cmp
test
push
push
sub
fimuls
jo
xchg
jecxz
pop
lahf
mov
cmp
aam
ss
jo
pop
adc
cltd
jg
ja
pop
cmp
adc
mov
mov
int
pmaxsw
insl
clc
pop
outsl
xchg
adc
nop
iret
ja,pn
popa
jo
repz
sbb
pop
lahf
xorb
sti
pop
jo
cwtl
and
imul
aaa
negl
pop
add
jbe
adc
mov
dec
mov
insl
in
pop
mov
mov
lret
pushf
add
sbb
mov
mov
insl
imul
stc
mov
cmp
clc
fs
mov
nop
lock
shl
insb
push
in
clc
mov
sbb
dec
xchg
out
out
or
adc
pop
ret
popf
idiv
ret
nop
cmp
or
insb
mov
xor
popa
dec
xchg
push
fst
mov
jnp
sti
jb
hlt
mov
cwtl
mov
sarb
mov
dec
jb
jns
outsb
fsubs
rol
arpl
sub
inc
mov
push
and
iret
push
xor
mov
mov
test
movsb
pushf
das
into
aaa
mov
jo
xchg
lcall
pushf
xor
fdivs
orl
nop
test
jle
gs
xchg
and
adc
pushf
jo
inc
dec
cs
sbb
cmp
into
fdivrs
jo
insl
nop
xchg
jl
test
jo
push
adc
cltd
push
call
repz
cmpsl
int3
test
data16
pop
js
lcall
inc
cmp
jo
in
imul
incb
add
insl
mov
fisubs
push
mov
inc
cmpb
in
xor
cltd
sysexit
lods
lcall
mov
cmp
sub
ret
aad
or
mov
jmp
jo
inc
aam
jmp
ret
dec
insl
ljmp
pop
xchg
out
shrl
jmp
es
xchg
jo
xor
or
jne
lods
test
or
push
xchg
xchg
xchg
mov
and
add
sub
mov
movsb
mov
mov
xchg
in
out
pshufw
lret
jo
cld
mov
insl
mov
cmp
xor
and
push
aas
jns
outsb
arpl
fwait
mov
mov
or
jo
je
outsl
push
inc
call
movsl
rorl
mov
outsb
jo
inc
orb
ljmp
mov
fcoms
xchg
xor
or
mov
out
insb
divb
test
push
xlat
insl
inc
shll
lret
sbb
xchg
xchg
rcrb
jae
ljmp
fbld
jo
inc
push
ja
xorb
mov
jg
xchg
inc
das
pop
call
add
mov
and
loope
enter
jae
sbb
mov
push
mov
ss
dec
scas
les
inc
loop
jae
jno
push
push
and
pop
call
enter
leave
out
pushl
dec
push
cmp
xchg
rorb
scas
shll
xor
sbb
cmp
push
pop
or
mov
lods
push
push
idivl
add
std
shll
inc
pop
jo
fwait
pop
add
shlb
sbb
pop
mov
inc
hlt
test
aad
pop
insl
jo
in
in
call
pushf
cmp
loop
inc
xchg
jo
in
fbstp
push
std
in
insl
aas
push
cmp
cltd
cmp
jo
and
sbb
data16
jae
and
mov
fwait
xor
notb
insl
push
mov
lock
insb
mov
call
ffree
and
test
mov
lock
jo
pop
sbb
xchg
jo
dec
adc
inc
test
jo
aaa
movsb
call
sub
push
or
daa
mov
out
jns
jp
inc
shlb
je
dec
ret
test
or
mov
iret
pop
and
in
lock
cmp
mov
in
or
jo
ljmp
insb
push
out
jo
or
jo
push
enter
lock
out
loopne
das
shlw
mov
mov
lea
jo
lret
ss
push
ljmp
ljmp
sbb
jno
fidivl
and
xor
insb
jbe
cmp
pop
jnp
mov
and
movsl
jp
ljmp
in
jo
push
dec
pop
mov
jnp
jo
dec
xor
push
and
outsb
lret
push
data16
cmp
pop
sub
push
cmp
enter
jo
lret
repnz
outsb
leave
insl
sbb
out
xor
dec
insl
shlb
pushf
push
in
subb
dec
test
jo
dec
xchg
push
sar
xchg
out
jo
movsb
xchg
pop
jle
jnp
mov
in
in
imulb
pushf
jnp
mov
sbb
xorb
mov
cmp
lods
mov
lods
mov
sub
roll
loop
insl
and
daa
sbb
nop
js
int
gs
push
mov
xchg
pop
inc
and
bound
and
enter
mov
mov
push
les
pop
scas
sub
cwtl
bound
test
setno
jo
arpl
sti
jo
sbb
call
insb
movsl
add
add
not
push
mov
adc
mov
sahf
pushl
jo
or
negb
mov
insl
rolb
mov
das
mov
je
mov
je
sti
xor
fdivrp
outsb
aam
jo
inc
bound
loope
push
jo
ss
mov
hlt
inc
aaa
jo
push
and
jnp
shlb
xchg
popl
pop
add
jp
bound
mov
shll
iret
and
pop
adc
lret
inc
movsl
outsb
jo
addr16
lock
hlt
jo
mov
pop
jbe
dec
cmpsb
and
fwait
jo,pn
in
or
and
arpl
and
add
sub
fcmovb
jo
mov
dec
mov
fs
cld
add
in
ja
mov
out
shrb
jo
cwtl
jp
shlb
jo
push
add
jnp
xchg
jl
negl
mov
pushf
inc
xchg
lock
jno
cmp
sub
jns
popf
xchg
mov
test
aam
inc
addb
xor
sti
mov
inc
out
dec
or
jo
fdivrp
cmpl
mov
mov
pop
addr16
xchg
daa
das
mov
sbb
sbb
fisttps
rcll
inc
jnp
loope
xor
pushf
push
sub
insl
mov
repz
stos
call
loop
data16
je
shlb
sbb
push
jae
stos
inc
and
jo
mov
add
jecxz
pop
cltd
push
jae
jp
je
mov
jo
pop
adc
divl
jg
mov
dec
jae
lock
lods
jo
jle
dec
sub
fmuls
xchg
jge
dec
xorl
inc
aas
jo
jnp
push
xor
leave
lcall
iret
loop
jp
mov
push
shrb
mov
adcb
ss
stos
aad
outsl
add
sub
mov
insb
test
or
or
pushf
cwtl
and
jo
mov
js
pop
add
fildl
pusha
jb
mov
lret
inc
pop
shll
into
jecxz
xchg
xchg
arpl
cmp
cld
shll
fcomps
jo
mov
add
lock
nop
rol
cmp
cmpsl
sti
mov
mov
cmp
ret
lret
outsb
jae
pop
stc
ljmp
jo
and
adc
loop
or
jo
inc
push
mov
fnsave
fidivrs
cs
and
addr16
mov
pop
mov
push
jo
xor
inc
cmp
cmpsl
insl
xchg
and
or
mov
call
inc
jb
rolb
hlt
testl
mov
aam
sub
jp
mov
cwtl
mov
dec
jo
les
and
rcrb
adcb
mov
push
adc
cmp
jle
xor
fs
gs
mov
lods
pop
mov
cmp
fwait
jmp
jo
ret
jl
push
sahf
jo
inc
inc
mov
jo
aaa
std
adc
jg
paddd
sbb
add
inc
pop
push
stc
jge
jo
jmp
or
imul
jo
or
out
add
mov
outsl
js
cmp
xchg
push
movsl
ror
mov
cmc
jge
popf
test
sbb
inc
ds
sarl
mov
mov
xor
mov
insb
hlt
push
push
xor
xchg
jo
or
stc
cmp
inc
enter
fnstenv
out
das
pusha
arpl
int3
andb
vpsrad
fcomps
inc
fwait
jo
jg
loope
dec
jl
mov
mov
and
push
lcall
scas
xor
or
add
or
mov
stos
dec
mov
pop
fs
fsubrl
cmp
arpl
jnp
lock
mov
into
dec
ja
jo
dec
loope
or
dec
mov
jo
mov
ja
pop
pshufw
jmp
mov
sahf
cmpsl
mov
and
popa
add
jo
push
sbb
stos
adc
fdivl
das
out
jae
xor
andb
loope
cwtl
loopne
dec
jl
ss
aas
and
in
call
add
mov
jo
ds
hlt
out
or
xchg
icebp
addr16
cmp
add
cbtw
loopne
popa
jo
push
pop
dec
add
insb
mov
adc
sbb
iret
inc
sahf
andb
mov
pusha
dec
shrl
xchg
movsb
mov
lock
xchg
mov
out
push
pop
push
cmp
int
sub
ret
jp
push
adc
inc
lcall
push
jo
mov
jo
jl
test
or
stos
jo
in
mov
lods
jo
and
and
ja
stos
ja
push
adc
aas
xchg
mov
neg
jo
push
push
jge
sbb
add
out
pushf
into
sub
mov
push
inc
nop
sub
mov
addr16
jmp
lds
sub
aad
dec
sbb
imul
xchg
mov
cmp
and
inc
jo
fiaddl
in
xor
in
clc
adc
sbb
stc
jo
add
outsb
out
pop
insb
sbb
add
mov
jae
mov
hlt
xorl
push
inc
sbb
jmp
rclb
mov
xchg
push
cmpsb
fs
dec
arpl
out
xchg
les
jne
ret
or
pop
lods
push
mov
add
das
inc
testl
jae
inc
bound
push
lock
lcall
aas
in
jl
pop
fnstenv
xchg
jns
adc
or
ja
das
jae
dec
in
pop
cmc
scas
xor
pop
sub
jmp
movsb
je
insl
push
adc
jl
rcrl
xchg
xchg
sub
mov
insl
dec
insb
cli
fisttpl
dec
xor
xor
stos
and
pop
jo
or
incb
js
outsb
daa
dec
push
jecxz
cs
jo
cld
xor
in
stos
jo
lret
xor
jp
or
in
and
jmp
fstps
stos
inc
mov
jp
rcrb
jo
dec
dec
cltd
cmp
pop
add
repnz
iret
jae
pushl
push
mov
scas
jo
nop
xor
test
addb
or
mov
sbb
ss
insb
icebp
jno
imul
ret
add
pop
jo
jns
push
imul
test
xor
sub
jo
fs
loop
sbb
fsubr
fsubs
imull
cwtl
arpl
sbb
call
outsb
nop
popa
hlt
shll
sbb
mov
xor
jb
sbb
shl
cmpsl
mov
sahf
loopne
add
cwtl
je
and
pop
push
push
and
sti
jl
enter
daa
add
test
cwtl
out
push
lcall
jo
sbb
xchg
pop
lods
lea
flds
popf
sbb
out
insl
sbb
hlt
xor
enter
sahf
push
push
xor
out
bswap
lock
sub
es
int3
mov
mov
arpl
pusha
xor
pop
andb
xor
inc
pop
mov
ja
sti
lock
push
pushf
cwtl
push
leave
cmpsb
ljmp
insl
xor
lahf
fadd
cmp
sbb
arpl
fldenv
clc
sahf
into
jg
in
jns
arpl
pusha
add
jl
fnstsw
repnz
fwait
adc
out
dec
mov
push
mov
xchg
shll
cwtl
xor
and
lods
adc
fisubs
testb
mov
fidivl
popa
sub
push
xchg
add
pop
pusha
add
outsb
es
fistps
sahf
jbe
ret
icebp
jp
test
pop
and
fiaddl
outsl
rcl
inc
in
lcall
xchg
fildll
cmp
mov
movsb
into
sarb
xchg
push
xor
inc
adc
or
jbe
or
jge
push
aam
lods
pop
inc
fcoml
stos
or
jg
push
addb
and
mov
add
shll
and
inc
push
shl
and
dec
mov
cmc
pop
stos
push
insl
ds
adc
push
push
rorb
iret
cmpsl
test
push
jnp
pop
jo
cmp
jl
ja
lds
jae
adc
xchg
mov
mov
jo
sub
popf
jo
mov
pop
inc
jo
pop
stc
lret
outsl
arpl
adc
xchg
test
movsl
test
inc
pop
mov
mov
pop
jo
xor
push
and
mov
cld
sti
mov
shll
or
pop
add
mov
leave
dec
lcall
jne
sbb
aaa
js
jo
xchg
hlt
pop
mov
stos
imul
pop
mov
jne
push
adc
fwait
jecxz
xlat
push
jo
adc
inc
jo
pop
dec
push
imul
insl
dec
mov
insl
lods
rcrl
add
dec
insb
sahf
cmp
xor
dec
or
outsl
loop
ja
orl
ret
rcrl
sub
push
in
mov
xchg
out
pop
sti
sub
pop
mov
inc
pushl
cmp
cwtl
xor
xchg
addr16
lea
cmp
or
icebp
lock
pop
hlt
xor
mov
jne
pop
xor
loope
insl
sub
and
ja
adc
js
mov
ja
loope
pop
sbb
sub
mov
insl
idiv
push
lds
aad
les
xor
pop
or
mov
sub
pop
int3
cld
popf
sbb
jo
xchg
pop
data16
or
fsubl
movsl
jo
daa
out
int3
icebp
cmp
cmc
les
pop
sbb
dec
mov
cmp
les
add
lea
imul
in
jle
leave
jo
xchg
orl
fisttps
cmp
xorb
rcll
jo
sub
gs
in
push
jo
jp
mov
add
insl
jmp
mov
xor
aas
and
loop
sbb
add
jmp
jo
pop
popf
mov
inc
inc
jo
in
imulb
jae
mov
or
xchg
jg
mov
cli
imul
stos
das
add
jo
cmp
dec
out
jo
add
xchg
movsl
mov
add
loope
cmpsl
add
jo
mov
xchg
pop
cmp
sbb
in
jae
imul
ljmp
jbe
xor
jo
divb
pushf
scas
push
cld
adc
xor
cmp
rclb
cmpsl
jo
xor
jae
aaa
call
add
in
mov
cmpsb
ficoms
sbb
push
pop
cmp
inc
leave
fstpt
pop
imul
mov
pushf
shlb
out
pshufhw
and
push
mov
xorl
jo
sahf
cmp
xlat
push
mov
test
js
jo
int3
test
insb
cmpsl
inc
out
insl
cmp
add
pushf
and
xor
shlb
mov
inc
push
mov
inc
scas
dec
in
jmp
mov
jo
inc
xor
jo
ret
sbb
cmp
mov
adc
or
jg
push
sbb
xchg
or
insb
or
ss
jo
xor
sbbb
test
pop
sbb
rorb
fdivrs
out
andb
adc
cmp
iret
push
andl
pop
jo
jnp
loop
mov
scas
mov
bound
shll
andb
jle
mov
movsl
pop
mov
out
pop
mov
adc
sbb
jo
stos
test
and
adc
mov
mov
sub
hlt
cmp
jo,pn
xchg
ret
add
ss
lds
sub
out
jnp
pop
fs
add
jo
out
outsb
lea
test
xchg
shl
fadds
push
jl
nop
scas
dec
add
jl
pop
jns
les
mov
dec
dec
pushl
fildll
push
lret
xchg
das
cmp
cmp
inc
xlat
ljmp
jp
push
pusha
nop
lods
jl
insb
inc
lods
xchg
xor
lock
push
movsb
sub
add
jp
mov
pop
jo
dec
daa
cmp
or
int3
jmp
shll
and
lock
mov
cmp
daa
pop
jo
ljmp
fcomps
fldl
stos
not
jo
adc
scas
jle
fcmovne
dec
fnsave
sub
and
xchg
xchg
loopne
test
pop
jbe
andl
loope
je
jo
mov
ret
into
jae
mov
sub
push
jo
lret
add
repnz
fimuls
adc
or
sub
jo
and
xchg
outsl
mov
divl
scas
imul
cmp
ret
mov
jo
aaa
jb
xchg
addl
test
cmp
lods
mov
fs
sbb
cli
ficoms
jb
xor
in
lods
stos
lret
loopne
sbb
mov
push
repz
fwait
pop
cmp
cltd
add
ret
mov
test
mov
outsb
jle
les
jo
sbb
idiv
mov
out
mov
xor
mov
mov
pop
inc
insl
jo
push
sbb
jg
xor
ficomps
pop
enter
arpl
cli
jo
inc
jmp
rorl
fimull
sbb
cmp
mov
into
insb
inc
test
mov
fdivrl
pop
or
mov
add
orl
shlb
js
sbb
std
stos
inc
fstpl
pop
insl
sahf
popf
ss
jge
or
imul
rclb
or
movsl
mov
and
or
jo
or
inc
repnz
ret
dec
std
cltd
sub
jo
jp
into
jb
rorl
sbb
or
sub
sarl
dec
les
ja
lea
jne
mov
mov
sbb
jo
iret
ja
xor
enter
aam
xchg
test
pop
mov
les
dec
xchg
in
mov
ret
fsub
add
mov
cwtl
cmpsb
mov
insb
inc
mov
or
mov
imul
lret
fisubs
sahf
test
pop
lret
pop
sub
push
pop
mov
adc
jo
fdivrs
popa
and
add
push
cmp
cmp
inc
addb
pop
mov
jo
aam
fbld
sbb
rol
stc
xor
cld
push
lock
sbb
jae
xor
outsb
xchg
xchg
cmp
add
arpl
mov
insl
mov
sub
mov
nop
mov
sar
es
stos
insl
xchg
lcall
cld
cmc
insb
mov
xor
pop
mov
out
and
xor
cmpsb
inc
or
xchg
push
inc
fnsave
test
jecxz
jno
mov
mov
fcmovnb
scas
dec
jo
subl
jp
pop
push
jmp
insl
mov
stos
fs
movsl
loop
dec
push
fildl
shll
pusha
mov
inc
ss
mov
xlat
leave
jo
aaa
cld
sub
rol
shll
nop
mov
and
jb
mov
insb
out
pop
jo
enter
arpl
or
in
mov
fsubrs
out
push
dec
xor
roll
ds
dec
lahf
and
ja
cmpsb
ret
pop
mov
test
add
sub
mov
jo
in
push
push
cltd
xchg
out
movsb
jo
js
fisttpll
xchg
lock
xchg
arpl
mov
pop
jg
shll
push
push
dec
lock
aad
add
stos
pop
dec
add
in
jl
test
int3
sub
adc
mov
fdivr
sub
int
call
xor
push
jo
stc
fimull
rol
fdivl
popl
insl
jo
add
je
enter
int
sbb
cmp
mov
pop
scas
xchg
aaa
push
mov
mov
jb
jo
jbe
xor
lods
jns
mov
mov
push
push
jg
mov
xchg
jns
loopne
jle
mov
adc
stc
enter
pop
mov
push
mov
mov
lret
jnp
push
push
popa
ret
test
pop
push
mov
xchg
jmp
scas
test
sar
push
cltd
push
test
lahf
jne
imul
into
xor
push
sub
lret
and
or
mov
sbbb
mov
sub
cmp
sbb
mov
xor
mov
inc
and
jg
or
mov
and
loope
fs
movsb
xchg
cli
lock
inc
push
outsl
in
lea
mov
sub
inc
sbb
int
std
data16
and
lock
sbb
cs
bound
lds
cmc
iret
stos
hlt
inc
adc
or
mov
adc
js
cmp
test
insb
sti
jge
popf
jo
push
xchg
dec
out
sub
cmp
mov
xor
or
sub
dec
ljmp
ret
movsl
leave
repnz
ljmp
jnp
in
and
andb
jno
xchg
out
pop
jns
xlat
jbe
mov
mov
mov
shlb
xor
push
ret
lock
ret
mov
data16
scas
mov
js
aad
inc
xchg
jecxz
sub
push
out
enter
insb
inc
mov
leave
orb
divl
cmpb
pop
out
sbb
stos
jae
push
xor
push
push
lds
push
xor
xchg
add
pop
mov
pop
fs
adc
pop
stc
out
aaa
jae
idivl
xchg
or
jle
cmp
sub
ss
and
or
mov
or
addr16
les
fcomps
jae
or
lret
dec
flds
push
js
popf
lds
das
aaa
out
enter
sbbb
xlat
inc
cmp
sbb
xchg
mov
and
adc
pop
xchg
loope
repnz
insl
addl
or
es
adcb
xor
mov
lret
push
fldt
sti
ret
xor
xchg
out
cmp
and
dec
pop
cmp
xor
stos
sub
sbb
push
cwtl
imul
bound
js
xchg
add
stc
call
mov
scas
insl
insb
cltd
in
xchg
inc
mov
scas
fsubr
sbb
push
push
and
mov
adc
sub
and
push
cs
insb
repnz
cmp
adc
mov
dec
sub
sahf
daa
or
push
ret
jno
scas
sub
push
in
leave
insl
cmp
loopne
gs
aas
xchg
loop
xchg
clc
xor
cltd
cmpsb
fiadds
mulb
dec
out
ss
pop
xchg
cmp
pop
adc
sbb
xchg
push
lods
pusha
enter
imulb
and
cmp
cwtl
push
ja
and
icebp
les
xlat
cmp
sbb
sub
mov
sbb
mov
outsl
push
nop
mov
hlt
and
jo
subl
pop
mov
imul
mov
fldl
xor
sbb
ret
out
fldl
adc
sub
add
out
movsl
or
jbe
cmpsl
andb
inc
sbb
iret
fdivs
shlb
imul
xor
pop
and
je
fnsave
repnz
and
decb
sbb
addr16
aad
lds
mov
out
inc
mov
mov
es
add
addr16
mov
jmp
cs
xchg
adc
outsl
cwtl
push
xor
stc
push
mov
dec
pop
jo
and
adc
pop
insb
stos
cmp
push
sbb
cwtl
dec
or
arpl
imul
sub
aas
push
into
imul
ret
xchg
cmc
fistps
ja
pop
jnp
mov
outsb
lock
mov
mov
push
cmpxchg
push
dec
xchg
flds
lcall
xchg
js
mov
mov
or
scas
in
sub
pop
int
xchg
and
out
mov
mov
jbe
and
in
inc
mov
sub
xorl
mov
mov
jle
das
sub
sbb
call
dec
pop
lahf
mov
cmp
xor
and
test
sarb
and
cmp
mov
loope
repnz
idiv
xchg
and
push
pop
sbb
sub
pop
xor
jl
ss
fcoml
shl
mov
pop
jge
cmc
ds
arpl
push
fsub
adc
lods
in
xchg
add
jbe
lcall
scas
add
clc
out
sbb
pop
jecxz
cmp
movsl
pusha
pop
inc
insl
jnp
pop
cltd
xchg
lahf
mov
adcb
dec
or
and
loope
push
jnp
insl
sub
jge
mov
cld
pusha
popf
mov
adc
push
pop
cwtl
ja
insl
nop
xchg
push
dec
push
mov
fwait
push
call
adc
icebp
cmp
xor
xchg
dec
roll
push
mov
jno
lods
and
in
aaa
js
adc
push
xor
loopne
fwait
popa
pop
jns
cwtl
or
and
mov
jle
adc
dec
xchg
inc
adc
hlt
sbb
sahf
sbb
sbbl
scas
push
mov
sub
fcoml
mov
popf
adc
dec
scas
dec
sub
psrlw
lcall
jo
pop
jnp
xorb
jo
and
sub
cli
cmp
clc
aas
adc
cmp
test
add
mov
xor
lea
push
sahf
js
arpl
lret
sbb
add
pop
fidivrs
xchg
mov
insl
mov
cmp
mov
ret
jae
mov
fadds
pop
and
jo
pop
enter
dec
ja
incl
sbb
dec
stos
xorb
aaa
shrb
cs
add
inc
fnstenv
jo
jmp
and
fisttpl
js
dec
mov
fstl
inc
aad
sbb
fnstenv
je
push
repz
sub
insl
inc
or
dec
mov
std
insl
lret
push
cmp
movsl
ficompl
xorb
out
es
push
mov
inc
jo
and
fdivrs
lds
cmpsl
lock
insl
bound
mov
pop
subl
jo
cmp
popa
push
jo
mov
imul
xor
jo
jae
sub
cmc
jl
sub
les
dec
push
sub
lds
mov
or
adc
icebp
jno
stc
push
push
jae
out
adc
inc
inc
jp
add
scas
in
rclb
hlt
jo
and
sbb
cmc
test
cmpsb
push
add
aad
adc
stc
jo,pn
js
mov
pop
lcall
sub
jp
and
jge
sub
in
jmp
or
pusha
push
aaa
je
jo
and
mov
clc
xor
setl
mov
adc
stos
jae
ja
movsl
or
mov
mov
and
stos
push
jae
lock
mov
cs
sub
daa
mov
cmc
aam
das
mov
jo
lods
sub
xor
mov
mov
mov
ja
test
and
xor
leave
test
pop
or
mov
push
pop
std
sti
add
dec
xchg
jmp
and
dec
adc
add
outsb
pop
jae
in
dec
add
inc
cmp
jo
push
jge
xlat
mov
jo
repz
enter
sub
jmp
leave
cmpsl
cltd
mov
test
je
shlb
adc
inc
push
add
addl
into
int
mov
mov
insl
xor
dec
inc
test
and
lret
mov
repz
repnz
cwtl
je
ret
fsubl
prefetchw
fisubrs
lock
lods
pop
gs
jo
cmp
adcb
int
mov
jo
jmp
dec
cmp
shll
dec
jle
ret
dec
pusha
adc
insl
xchg
adc
pop
cmp
pop
push
sbb
cwtl
jo
repnz
in
jnp
push
or
bound
scas
jp
jo
repnz
mov
add
xor
ret
lock
cmp
jo
xor
movsb
imul
mov
xor
addr16
xor
lods
ret
lock
cwtl
jnp
dec
pop
or
bound
mov
add
fwait
push
sub
jo
pop
or
xchg
je
push
lods
out
lock
roll
popa
xchg
mov
push
test
movsb
cld
fnsave
out
int3
sti
pop
add
jl
rcrb
xor
nop
mov
jo
or
dec
and
jo
sub
mov
and
in
jno
popa
sbb
mov
sbb
sahf
outsb
imull
pop
xchg
pop
mov
rorl
pop
sub
jge
cs
adc
rorb
cli
push
pop
jge
lock
and
pop
dec
push
aam
movsl
out
push
loopne
pop
lcall
enter
sti
ficomps
xchg
inc
mov
cmc
inc
sti
mov
repnz
push
and
arpl
xchg
outsb
mov
jno
pushf
adc
outsb
movsb
incl
out
sti
jmp
xchg
arpl
pop
lods
push
sub
shll
leave
adc
popf
js
lock
or
pushf
add
push
and
fcomip
jle
sub
movsb
jae
ja
xchg
enter
ss
jge
xchg
jmp
mov
sbb
addr16
ja
ret
and
lds
insl
dec
cmp
or
pop
in
scas
push
dec
jo
and
imulb
jnp
xchg
dec
fisubrl
xor
lsl
sbb
cmp
fsubs
inc
cmpsl
xor
mov
jnp
iret
jnp
lods
loopne
lret
cwtl
xchg
mov
mulb
je
inc
adc
cwtl
cmp
mov
in
push
mov
in
and
icebp
clc
xor
ds
ret
adc
cmc
js
pop
ret
cmpsl
fidivs
ljmp
xor
mov
adc
xchg
je
add
sub
shll
inc
test
dec
xor
mov
imul
fidivs
cwtl
test
icebp
leave
xor
cmpb
in
pushf
in
scas
ficoms
mov
pop
ret
jno
icebp
xchg
mov
aad
std
jne
cwtl
lods
mov
ja
in
sbb
stc
in
cmpsb
jae
push
pop
loopne
mov
push
xchg
and
cwtl
mov
shlb
mov
ss
push
dec
sub
add
and
sbbl
mov
faddp
and
pop
es
mov
mov
xor
lock
sub
dec
push
sub
ja
cmp
jne
enter
sub
mov
je
xchg
outsl
fs
xchg
fld
xor
dec
aas
ret
fwait
mov
sbb
fadds
xchg
addr16
in
add
pop
outsb
mov
cld
adc
cmp
mov
cli
xor
pop
andb
shlb
jbe
sti
fiadds
addr16
lds
or
ds
clc
popf
sub
sub
sbb
sarl
add
mov
outsb
pop
lcall
jg
dec
inc
push
push
in
mov
xor
lea
out
mov
shll
stos
lods
idivl
pusha
pop
scas
adc
fmul
rorl
mov
and
lret
cmp
test
imul
push
cmp
jg
or
mov
aam
loopne
pop
jecxz
scas
jns
daa
xchg
cltd
cmc
fdivs
and
mov
and
rcrb
popf
jl
cwtl
sti
sub
jno
jg
mov
in
orl
jo
mov
fs
gs
jp
ja
mov
stos
mov
sub
jmp
push
hlt
int
pop
xchg
dec
jbe
jecxz
jae
inc
fnstsw
xchg
xchg
mov
adc
sub
loopne
lret
sbb
adc
add
dec
addb
popa
fidivrs
add
xor
and
sbb
cmp
fidivl
mov
leave
aam
xchg
mov
in
jle
mov
nop
je
push
ja
jg
push
and
xchg
adc
je
or
addr16
test
cwtl
pop
xchg
jbe
in
pop
insl
sbb
nop
lods
xchg
cmp
dec
pop
and
adc
je
das
cld
mov
or
insl
xor
adc
add
cmp
fs
lret
or
int
add
mov
and
adc
xchg
cltd
cmc
fisubrs
test
out
in
mov
pushf
jp
test
dec
rorb
mov
and
xchg
sub
and
testb
ret
and
mov
rcrl
les
push
push
push
mov
arpl
cli
jb
and
ja
mov
or
inc
jmp
push
aam
rol
xchg
fs
hlt
lret
lea
test
loop
inc
jnp
imul
mov
in
jge
xchg
jbe
fisubrs
aas
shlb
ret
lret
xor
scas
test
sub
push
movsl
xor
rorl
outsb
and
and
sbbb
lods
insb
pushl
enter
je
sbb
or
je
cwtl
jge
rclb
ljmp
inc
pop
insl
or
ja
pop
adc
dec
insl
sbbl
pop
xor
stc
xor
jmp
mov
jno
mul
lahf
jp
mov
inc
push
sub
outsb
out
sub
inc
ret
test
cmc
and
movsb
mov
mov
stc
and
out
mov
xchg
inc
out
js
lret
and
loop
xor
xchg
out
outsb
jne
sbb
hlt
xchg
and
fdivrs
lret
adc
sbb
scas
repz
cmpsb
fildll
sbb
decb
es
cwtl
mov
popa
imul
cmp
iret
pop
sahf
jno
inc
pop
es
or
pop
js
dec
je
inc
mov
stc
mov
cmp
test
test
das
mov
jns
inc
ljmp
mov
cmp
lods
sbb
icebp
rcpps
push
jne
or
fs
lock
push
sbb
out
call
cwtl
mov
sbb
fdivrs
xor
inc
lret
mov
or
les
mov
pop
push
and
das
int
or
mov
scas
push
js
sti
inc
es
jle
test
sti
mov
jne
int
movsb
pop
lock
xchg
scas
data16
std
insb
jnp
in
lret
repnz
push
mov
jbe
cwtl
gs
pop
pop
dec
pop
leave
jno
or
int3
outsl
cmp
loopne
push
inc
aas
aam
stc
sbb
les
pop
add
mov
jp
out
loop
mov
test
sqrtps
add
or
adc
cwtl
lret
and
push
mov
jne
pop
hlt
cmc
push
jmp
push
push
push
add
cmp
pop
xor
clc
shld
xchg
dec
jecxz
mov
cltd
cmp
pop
xchg
cmpl
push
test
mov
mov
out
sub
pop
pusha
sub
sbb
sub
lret
mov
js
jb
inc
sarb
and
mov
jne,pn
jg
in
xor
add
cmp
imul
inc
mov
jbe
movsl
sub
movsl
inc
rclb
outsb
sbb
cmc
sub
out
push
xchg
push
and
xor
fistps
insb
cmp
rcrb
cwtl
sbb
push
sahf
jbe
xchg
clc
push
std
int
adc
xchg
call
jge
cmpsb
xchg
mov
bswap
rcrl
push
mov
jecxz
sbb
xchg
and
fsubrl
jl
idivb
add
sub
pcmpeqb
lret
dec
and
sub
daa
and
andps
mov
ss
push
stc
push
mov
push
mov
cli
pop
inc
xchg
sub
jg
adc
xlat
pop
mov
and
adc
scas
aad
out
into
push
add
add
hlt
in
inc
inc
dec
dec
sbb
ret
test
jne
cwtl
les
std
pop
pop
mov
dec
lea
push
lea
pop
inc
and
push
js
repz
dec
clc
in
push
fnsave
jne
scas
and
js
add
jp
cmpsb
lret
das
or
nop
jo
in
xor
jno
sbb
push
cmp
jge
inc
xor
jmp
or
pop
js
call
xor
rolb
add
arpl
addl
cmp
ss
or
mov
fld
fnsave
sub
imul
pop
mov
pushf
jo
xchg
xchg
movsb
call
add
std
or
mov
or
aaa
lret
xor
cmp
add
sub
fistps
mov
push
adc
cmp
fdivp
loope
jnp
jno
sub
out
add
push
enter
cmp
cli
jmp
inc
mov
adc
pop
gs
jno
sub
dec
sahf
xchg
dec
push
ss
push
in
int
and
imul
push
add
ds
or
push
rep
dec
cld
repnz
iret
xor
xchg
add
enter
xchg
push
cmp
test
stos
lds
sub
aam
jb
mov
push
inc
negl
loope
in
mov
push
add
and
cwtl
sbb
xchg
xchg
xor
and
aas
or
in
in
hlt
aam
shrl
insl
cmp
out
inc
in
push
jmp
add
xchg
mov
and
push
adc
rcrl
idivl
and
xor
icebp
cwtl
add
jecxz
and
or
pop
xchg
inc
lock
ss
outsl
mov
ds
arpl
cmp
adc
sub
arpl
xor
pop
pop
popf
pop
imul
cs
daa
adc
adc
pushf
popa
xchg
pop
ret
mov
xchg
lahf
xor
outsb
andb
ret
xor
pop
sbb
out
adc
hlt
hlt
fcomps
arpl
xor
fcom
mov
adc
out
inc
movb
push
lea
add
aaa
inc
and
mov
cmpsl
in
adc
jp
sbb
sub
push
gs
jg
mov
lds
mov
push
movsl
aas
ret
call
push
pop
mov
sub
xor
jb
xchg
cmp
sbb
xor
fdivr
mov
inc
add
xchg
xor
aad
push
xchg
lock
jge
cmpsb
in
push
add
mov
mov
xchg
sbb
cmp
xchg
loopne
imul
jmp
in
popa
iret
push
js
cld
enter
mov
push
call
fistpll
pop
mov
pop
xchg
pop
cmpsl
jge
gs
insl
fs
and
adc
pop
mov
rcr
out
adc
mov
inc
push
and
mov
xchg
adc
and
jb
orl
push
loope
clc
hlt
lahf
sbb
mov
and
push
stos
push
pop
out
add
xchg
aas
mov
and
sub
adc
mov
lock
sbb
dec
push
sti
push
cbtw
addl
adcl
test
mov
cwtl
cmp
pop
adc
in
loopne
sbb
stos
fwait
icebp
dec
adc
jmp
inc
aam
push
sbb
or
xchg
rcrb
mov
xchg
push
lods
adc
rol
daa
push
adc
pop
cs
adc
jo
jno
push
repz
push
push
inc
bound
loopne
xchg
jmp
out
cli
notb
pop
loope
jnp
sahf
in
lret
push
aad
out
pop
jmp
lods
dec
xchg
daa
sahf
out
jmp
loop
sti
cmp
xchg
push
shr
dec
mov
or
push
xchg
xchg
hlt
jmp
std
outsb
cwtl
call
push
or
loope
inc
xor
lock
ss
rolb
daa
sbb
lds
je
sub
dec
push
jl
push
push
jle
sbb
pop
stc
out
rcl
pop
or
inc
jno
bound
ss
pop
pop
mov
add
mov
rclb
pop
ds
inc
enter
in
xor
loopne
jge
daa
sub
hlt
and
adc
adc
xor
adc
mov
andb
data16
cwtl
mov
stos
cmp
popa
xor
adc
dec
sbb
push
ja
cmpsl
aas
mov
jecxz
sti
xchg
jns
icebp
cmp
or
movsl
jo
in
hlt
in
push
in
push
nop
jp
xchg
test
loope
icebp
dec
lock
mov
mov
jo
into
shlb
insl
cltd
mov
call
push
add
xchg
dec
dec
add
sahf
lock
add
test
rolb
mov
and
xor
ficomps
push
pushf
mov
inc
icebp
jle
pop
test
cmpsl
test
mov
dec
mov
popa
rorl
pop
dec
mov
xor
ja
scas
jmp
push
into
mov
cmp
inc
push
imul
outsl
outsb
cmc
call
jo
sbb
sub
imul
ret
sub
shlb
cmpsl
shrb
push
sbb
xor
in
add
lods
fisubl
mov
das
mov
jnp
lock
iret
push
lock
and
dec
push
lock
ljmp
fimuls
rorb
push
in
into
cmpl
out
repnz
jb
push
jne
mov
jo
loopne
leave
xchg
mov
lahf
jg
push
test
jo
sbb
jno
jo
mov
add
cmpsb
loopne
adc
and
nop
push
lock
addr16
inc
hlt
scas
ja
push
testl
shrl
ja
mov
repnz
nop
sahf
cmp
shlb
mov
dec
nop
insl
into
shrl
imul
inc
out
pushf
jo
or
xlat
fmul
jae
dec
mov
fs
adc
mov
gs
test
and
mov
mov
adc
insl
adcb
jmp
or
and
bound
mov
repz
cmpsl
inc
jo
lahf
jge
or
ljmp
or
ja
xchg
push
orb
mov
aas
adc
pushf
and
out
add
iret
and
jo
jb
mov
cmp
das
mov
xchg
push
std
add
xchg
pop
icebp
mov
rcrl
lcall
insb
cmpsb
cmp
adc
cmpsl
add
loopne
push
mov
in
push
cmp
fstpl
arpl
ja
fldenv
mov
mov
jo
repz
pusha
insl
inc
sbb
out
into
add
jmp
jo
fstpt
stos
out
lret
push
sub
cmp
ret
in
fcompl
test
dec
loope
jo
int3
mov
hlt
fsubrs
mov
jo
or
loop
xor
xchg
cs
inc
test
divl
aad
stc
lret
test
out
mov
adc
cmp
jp
inc
ja
pop
lock
push
das
inc
lods
pop
inc
divb
test
push
adc
mov
mov
popa
das
cltd
xor
xlat
jae
jbe
pop
dec
push
xlat
adcb
mov
xor
shrb
aas
pushf
in
adc
jo
xor
mov
sti
jo
add
cmpsl
out
jb
sub
inc
cmp
ud0
mov
mov
pop
decb
mov
popf
push
jl
inc
repnz
arpl
jo
jge
cmp
aad
xor
in
cmp
ret
int3
cmpl
push
pop
jb
aaa
mov
jmp
popf
stc
mov
rorb
xchg
lock
mov
jo
ret
insl
in
test
je
jo
arpl
sub
mov
sbb
jo
add
jle
inc
outsl
fisttpl
push
sbbb
adc
mov
pop
lret
sub
das
xor
dec
jo
cmp
cmpsl
fcoml
jo
push
sbb
fbstp
xlat
jo
enter
cld
push
or
pop
ret
jo
lock
pusha
mov
jae
sahf
rorl
mov
jmp
repz
roll
jno
std
jl
mov
jo
add
jle
jno
jg
adc
mov
jo
std
inc
mov
imul
ret
jo
daa
repz
xchg
fnstenv
sbb
pop
lock
push
jo
ss
inc
and
call
cmp
and
mov
jb
outsb
stos
in
imul
loopne
movb
dec
mov
js
xor
fdiv
arpl
xchg
fnstenv
insl
loopne
xor
call
ret
pop
mov
icebp
pop
jmp
mov
lock
in
cmp
ficompl
std
jne
out
xor
lock
dec
or
jo
in
insl
xchg
jbe
fimull
sahf
loope
mov
out
push
or
push
xor
cmp
in
lods
out
popf
jo
mov
sbbb
or
inc
decb
dec
pusha
jge
xor
dec
add
clc
mov
movl
test
add
pop
idivb
pop
or
scas
nop
jo
xchg
xor
push
aam
push
adc
jbe
sub
insl
pop
data16
and
insb
dec
shr
jecxz
jns
pop
mov
adc
std
sub
lods
cmpsl
dec
test
dec
mulb
mov
test
sbbb
mov
sahf
divb
push
push
sbb
xor
xchg
sub
jnp
or
lock
das
jne
pushf
mov
mov
jns
nop
jo
cmc
jg
xorl
pop
negb
sub
out
fimuls
jmp
dec
imul
add
les
jmp
inc
and
cmpsb
jo
in
dec
jge
rolb
aaa
sub
jo
lods
push
and
shlb
jmp
pop
jo
pop
es
test
pop
nop
lcall
jp
mov
loop
fildl
inc
pop
sti
pop
xorl
lahf
icebp
scas
sub
sub
push
mov
mov
cmp
gs
mov
sbb
inc
rcrl
sti
jnp
in
jo
or
xlat
xchg
pop
jb
insl
movsl
sbb
rcl
cmp
idiv
jo
lods
mov
je
stos
jo
push
pop
jo,pt
adc
fnstenv
mov
js
out
dec
jge
notl
mov
ja
mov
pop
xor
mov
ret
add
sbb
sub
jle
scas
push
dec
pop
mov
jae
push
bound
xor
jge
adc
stc
xor
push
fisubl
cmpsl
les
rol
cmpsb
pop
loop
mov
clc
in
bound
jg
xor
js
push
add
mov
lods
jmp
sahf
mov
decb
sub
pop
jo
xor
push
faddl
lcall
mov
dec
jg
jb
arpl
add
pop
sbbb
xchg
sbb
pop
sti
mov
add
outsb
ja
or
imul
push
cld
scas
jo
xor
sbb
pop
cmp
pop
fnstenv
out
je
adc
fs
lds
mov
ret
clc
mov
jo
movsb
loopne
jae
jo
sti
mov
sub
cmc
mov
decl
or
jp
push
and
adc
lret
sub
inc
push
jae
insb
fcompp
nopl
and
push
xor
lcall
div
push
ja
pop
imul
mov
je
cmp
xchg
imul
push
xchg
iret
addr16
pop
jo
sub
rep
pop
dec
cld
aam
mov
pop
insb
fidivl
andl
jo
fsts
xchg
jo
fs
loop
out
out
loope
pop
pusha
mov
jge
aam
mov
adc
subl
jno
sahf
ja
mov
and
mov
lock
inc
js
mov
inc
enter
xchg
mov
push
out
sbb
aam
xor
int
popa
jo
xchg
pop
and
js
jp
mov
push
repnz
or
push
push
das
pop
sub
lock
mov
pop
push
fwait
lock
xchg
fistps
movsb
sub
jo
arpl
into
push
aam
addr16
jnp
mov
cwtl
adc
jns
lcall
rcrl
inc
adc
dec
push
dec
data16
out
outsl
int3
xchg
xchg
clc
rorb
add
mov
inc
cmpsb
fs
into
mov
insl
mov
enter
fbld
mov
icebp
pop
mov
jo
imul
imul
movsl
jo
outsl
mov
xchg
cmc
push
push
mov
push
cmpsl
xchg
shll
sbb
popf
cwtl
add
jmp
xor
gs
sub
xor
or
dec
cmp
int3
insl
push
cmp
sti
js
mov
leave
insb
clc
pop
adc
sbb
or
imul
xchg
das
es
fldcw
mov
pop
and
add
push
lods
out
insb
and
mov
popf
sub
mov
ds
cmpsl
mov
inc
rclb
lock
push
pushf
dec
push
xchg
push
jne
mov
ret
adc
je
in
push
lock
push
push
ss
mov
or
nop
sub
rcll
sbb
or
stos
inc
dec
leave
jno
adc
jl
lods
pusha
loopne
dec
xor
rcrb
data16
cwtl
or
cli
add
sbb
add
flds
in
pop
clc
inc
pop
or
fldcw
insb
or
pop
in
add
mov
dec
aad
or
mov
inc
jl
jle
jo
jp
aaa
into
xchg
lret
add
cmc
insb
pop
je
adc
cmpsl
cmc
jl
popf
gs
jb
in
add
jne
leave
xor
cmp
and
adc
ss
jae
mov
push
push
arpl
fwait
sub
xchg
aas
xlat
push
stc
ret
add
outsb
adc
and
pop
stc
push
mov
jbe
xor
les
shlb
loopne
jbe
jle
cmp
loopne
cmpb
jae
xchg
enter
xchg
xor
loopne
or
rcrb
sbb
repnz
ret
push
imul
outsl
outsb
aad
pop
and
inc
mov
js
ss
mov
cmc
and
inc
outsb
lret
xor
cmpsl
call
out
cmpsl
pusha
hlt
hlt
cmpsl
cmp
nop
addr16
fistl
scas
imul
pop
js
repnz
adcb
negl
repz
outsb
out
dec
jb
repz
mov
fcomps
int3
jp
iret
pop
mov
adc
push
xchg
clc
pop
div
sbb
adc
lds
or
icebp
mov
jo
mov
push
xor
mov
cmp
jp
jo
repz
dec
pop
inc
jmp
xchg
in
out
adcb
icebp
out
dec
inc
inc
aaa
pushf
pop
and
shll
ret
add
pop
and
popf
pop
or
sbb
dec
jb
inc
cwtl
icebp
pop
ret
test
lcall
jecxz
mov
jo
dec
out
mov
jp
in
jne
mov
xlat
lods
sbb
pop
adc
clc
pop
mov
int3
cmp
imul
out
pusha
cmc
hlt
jp
mov
dec
cli
sti
lock
mov
je
jno
add
pop
mov
pop
rclb
mov
push
sahf
jmp
push
lahf
frstor
out
add
push
jo
aad
mov
jo
xor
or
sbb
bound
les
pop
jl
rcl
inc
in
pop
orw
adc
cli
push
sarb
sub
add
add
nop
mov
mov
out
and
jo
pop
andb
xor
in
popf
jo
push
mov
test
jp
xchg
or
sub
scas
ret
xor
fcomp
mov
push
lret
jo
clc
lahf
daa
dec
out
jo
sbb
or
insb
dec
inc
mov
jo
mov
sub
loopne
lock
pop
xor
mov
enter
loop
cmpb
mov
or
inc
out
sbb
and
or
dec
icebp
dec
jno
jo
aas
insl
mov
xor
jo
out
ds
mov
jo
in
mov
jo
sbb
sub
jnp
cmpl
data16
insl
adc
jo
jge
roll
or
cmp
jo
xchg
dec
js
aas
jmp
int3
push
pop
jmp
popf
in
mov
in
sub
mov
in
and
mov
pop
push
movsb
mov
pop
push
push
and
or
rorl
loopne
xchg
nop
cmc
push
mov
xchg
jl
sbb
lahf
fisttpll
xor
stos
ss
in
faddl
shll
mov
loop
lahf
jo
adc
pshufw
xor
cmp
pop
aaa
xchg
pop
cltd
adc
push
hlt
push
in
inc
adc
jo
sub
loope
sarl
lods
jo
movsb
popf
test
lret
jo
data16
mov
push
dec
cmp
jo
xchg
pop
mov
movsl
shlb
in
jbe
cs
xchg
pushf
daa
ss
aaa
jg
call
negb
cli
push
mov
notl
xor
fwait
shll
mov
es
loope
xchg
jg
enter
xchg
pusha
bnd
jbe
in
mov
jo
mov
push
mov
popf
and
cwtl
test
sub
xchg
push
mov
jo
loope
inc
loop
repz
jae
ret
daa
fidivrs
in
shlb
inc
jl
push
addr16
mov
scas
jo
xlat
adc
mov
jl
sbb
and
jo
xor
sarb
xchg
loopne
push
and
lcall
in
pop
fiaddl
jae,pt
mov
mov
icebp
hlt
mov
pop
jae
jb
in
scas
or
dec
lock
fldt
xor
dec
outsb
jo
jg
jnp
dec
imul
adc
mov
cmc
leave
jo
mov
lds
icebp
lock
ljmp
dec
pusha
and
pop
adc
sub
daa
jo
xorb
aam
aaa
mov
cvtps2pi
lahf
dec
movsb
or
xor
jb
jo
push
stos
dec
data16
jo
lods
loopne
fsubrl
test
mov
jo
gs
sub
jo
movsw
test
pop
jae
xchg
sub
daa
test
sub
stos
int
push
xlat
int3
fisttpll
decl
sbb
pop
mov
sbb
cmp
xchg
jo
sbb
imul
arpl
mov
test
push
es
mov
mov
and
shrl
out
mov
jb
mov
jo
or
mov
lret
movsb
ljmp
push
and
std
insb
icebp
loopne
xor
cmp
loope
jo
lods
cwtl
xchg
test
push
stos
ja
in
jge
std
inc
aad
jo
in
cmp
and
xchg
insl
adc
mov
or
data16
push
jo
xchg
mov
xchg
inc
mov
push
push
nop
jo
repz
cs
sub
cld
jo
cmp
jbe
insb
sbb
shlb
out
xor
shlb
shlb
jo
pop
xchg
sbb
xor
imul
mov
jo
notb
push
inc
jno
jo
add
add
xor
popl
das
mov
negb
xor
into
mov
outsl
xchg
jo
fstpt
mov
out
hlt
adc
loop
dec
dec
les
sbb
cmp
in
dec
lock
sbb
mov
or
sub
dec
or
add
pop
adc
pop
insl
mov
mov
mov
test
xchg
jo
lods
cmpsl
xor
lahf
and
xchg
push
dec
insl
xlat
loop
jg
cmp
sub
nop
sub
xchg
push
jb
pop
dec
adcb
cmp
add
cmp
mov
or
cmp
dec
js
in
jecxz
aaa
sub
mov
jo
popf
clc
fxch
lds
aaa
jo
imul
addr16
mov
push
and
hlt
aas
xor
jo
popa
mov
in
xchg
mov
push
imul
mov
test
in
mov
test
jo
and
fistpl
popa
inc
mov
jne
test
dec
rclb
xlat
jo
popf
sbb
je
sub
jnp
loopne
ja
mov
faddl
jo
pop
cwtl
dec
adc
adc
jo
mov
inc
or
add
imul
sub
loop
jo
aas
popl
mov
pop
daa
mov
mov
jle
jae
pop
scas
jo
xor
xor
push
roll
jo
dec
and
and
sbb
or
int
fnstsw
lods
mov
mov
mov
pop
xchg
jo
or
insl
les
jle
pop
ja
sahf
dec
push
popa
je
lock
inc
dec
insl
clc
lahf
xchg
pushf
inc
sbb
pushf
adc
jo
insb
or
dec
data16
hlt
jo
xlat
mov
scas
fldenv
adc
jp
mov
xor
jne
mov
sub
mov
jno
jl
mov
add
ja
out
mov
add
lret
dec
mov
nop
jmp
mov
dec
je
mov
jo
bound
clc
pop
jnp
sbb
testl
add
jo
data16
in
cmpb
mov
xor
jo
push
or
dec
jo
mov
sets
jo,pn
aaa
daa
mov
and
mov
xchg
cwtl
loop
bnd
adc
add
repnz
cltd
cmc
cwtl
icebp
ret
out
adc
pop
cmpsb
jo
sub
jo
mov
mov
pop
or
push
sbb
push
jle
loope
pop
dec
inc
mov
jge
jae
inc
gs
and
jecxz
cwtl
pop
dec
pusha
jp
mov
sub
jo
push
or
xor
or
sub
rcrl
mov
data16
jno
jbe
and
push
stc
pop
jo
push
ljmp
ss
sbb
xor
and
out
push
into
cltd
inc
add
insb
cmp
fldt
lods
inc
repz
dec
sarb
nop
pop
push
xchg
jo
inc
outsb
or
jo
mov
aas
mov
mov
push
in
lret
in
mov
cwtl
addb
rcll
push
jae
movsl
or
pop
addr16
adc
adc
dec
leave
insl
adc
inc
in
dec
fisttpll
mov
std
push
into
xor
imul
xchg
decb
mov
jno
xor
inc
loop
pusha
std
ret
mov
dec
fsubs
and
dec
test
imul
jns
jo
jg
scas
in
cwtl
sub
hlt
pop
movsb
mov
xor
iret
xor
loope
pop
pop
or
sbb
mov
pop
insl
xchg
js
outsl
fsub
rcr
es
sbb
test
cmc
pop
outsl
repnz
xor
mov
xchg
mov
pop
clc
mov
sti
fnstcw
add
mov
pop
or
es
push
subl
inc
cltd
stos
test
mov
push
enter
xor
cmp
lret
ds
mov
rorl
loopne
dec
fcom
lahf
repnz
and
hlt
cwtl
pop
push
ficompl
ds
cmp
js
jbe
insl
out
lret
adc
mov
loopne
stc
enter
sub
pusha
jecxz
cli
sbb
out
movsl
adc
and
rolb
out
pop
sub
adc
mov
in
and
jp
mov
xor
mov
inc
in
and
wrmsr
push
js
dec
pop
dec
adc
sbb
cwtl
push
ficomps
push
jno
lock
ja
add
mov
popf
roll
pop
adc
fs
addb
in
push
into
pushf
inc
aas
adc
movsl
push
movsl
dec
jp
mov
inc
aad
sbb
or
ficoml
stos
lock
mov
addr16
in
sbb
aad
cld
jg
loopne
test
sub
mov
test
ret
jno
add
sbb
icebp
bound
test
lret
outsl
cmp
test
jnp
dec
jne
lret
mov
test
call
mov
sub
mov
mov
pop
stos
data16
jmp
shlb
mov
mov
sbb
sahf
in
add
cwtl
dec
inc
and
xchg
jne
lods
faddl
test
clc
test
stos
add
adc
sti
cs
cmp
cmp
dec
imul
jp
daa
mov
imul
popa
sub
jge
or
mov
lock
mov
jae
enter
in
mov
rep
mov
mov
lods
dec
jg
and
lret
sbb
sarl
in
sbb
sub
aam
jnp
push
punpckhbw
cmp
ret
pop
aam
not
inc
adc
jne
lahf
adc
outsl
lret
pop
push
mov
mov
push
fsubr
adc
lret
insl
and
or
mov
xchg
notl
xchg
jmp
mov
mov
jle
cmp
outsb
xchg
std
lcall
push
imul
pop
and
dec
aaa
mov
adc
jne
int3
or
fld
mov
sub
sbb
out
pop
repz
aaa
mov
push
sub
mov
push
jnp
mov
sti
ficomps
in
and
cmp
mov
cmpsl
in
push
pusha
sbb
inc
xchg
ljmp
or
cwtl
call
push
pusha
xchg
movsl
push
sbb
cli
aas
mov
cmp
loopne
stos
mov
mov
clc
in
js
daa
mov
mov
add
jmp
enter
repnz
xor
cmp
sub
sbb
jo
sub
add
mov
jne
pop
repnz
hlt
jle
leave
adc
dec
sub
test
dec
shrl
xchg
repz
xchg
mov
rcll
je
sbb
lds
sbb
adc
jns
sub
cwtl
dec
out
mov
pusha
inc
push
insl
shr
enter
pop
xor
arpl
test
add
mov
clc
cmp
push
out
rorl
loop
frstor
pop
test
or
adcb
push
jnp
addr16
add
sub
pop
pop
iret
mov
pop
rcl
mov
int
cwtl
push
xchg
xor
icebp
jmp
scas
addb
or
cmpsl
push
mov
hlt
or
loopne
scas
ret
ss
int
js
ja
cmpsl
arpl
popa
add
test
scas
dec
rorb
pop
lea
push
jo
xchg
mov
sbb
lret
xor
movsl
push
out
orb
pop
mov
jge
dec
inc
fs
dec
ja
test
xor
rcrb
push
adc
popf
cmpsl
mov
jo
gs
sahf
xchg
xor
jbe
mov
and
add
push
cmpsl
jp
sbb
sbb
jo
xchg
jb
cmc
or
sbb
lret
imulb
int
adc
dec
rorl
sbb
testb
mov
je
mov
push
aad
and
fisubl
cs
sub
jo
mov
testl
jp
ja,pt
push
and
and
jo
lret
and
shl
fildl
or
and
lock
int
pop
cmp
out
insl
ja
adc
fsubl
xor
rolb
jo
jl
aaa
inc
lods
jle
jo
enter
jae
ss
pop
inc
jo
pop
sbb
pop
xchg
stc
add
and
add
xorl
mov
cmpsb
test
jp
push
or
arpl
clc
jo
dec
fs
inc
xchg
mov
imul
mov
cmp
out
sub
jo
ja
scas
mov
sbb
popa
adc
inc
xorl
es
pushl
jns
jecxz
ljmp
sbb
jo
out
add
data16
pop
jo
mov
clc
ficoms
fdivl
scas
out
xlat
push
mov
sub
cmp
fadds
pop
jno
cmp
rorl
seto
aaa
outsl
out
lcall
jo
ljmp
xchg
inc
jo
lds
dec
jno
loope
addb
xchg
push
inc
sbbb
mov
sbb
mov
jnp
add
shrb
push
mov
push
push
mov
xchg
jp
fwait
dec
adc
fwait
jmp
idivl
xor
dec
cmp
je
pop
sti
lahf
pop
arpl
cltd
sub
fwait
arpl
pop
fildl
repnz
jne
or
xorb
out
add
hlt
lret
pop
xchg
cmp
add
lcall
jmp
add
imul
stc
lods
mov
loop
out
rcll
jmp
cmp
pop
out
inc
arpl
rorb
in
dec
and
jnp
divb
in
dec
inc
in
cs
xchg
jne
cmc
inc
add
xor
in
ds
mov
push
xor
scas
daa
mov
in
xchg
xlat
cmp
icebp
cmpsl
pop
sbbb
sbb
sarb
imul
sbb
jl
cwtl
rsm
xchg
sbb
cmc
pushf
lahf
stos
cmp
sbb
mov
adc
pop
mov
repnz
pop
in
inc
fs
mov
test
ret
cs
mov
mov
adcl
cmp
iret
outsb
pop
int3
mov
sbb
xchg
sub
inc
sbbl
sub
jle
sbbb
adcb
mov
call
imul
cmp
add
mov
aas
leave
out
dec
mov
xor
out
xor
jne
inc
rcrl
and
or
test
mov
sbb
mov
insl
mov
jecxz
pushf
les
cmp
pop
stc
lahf
out
daa
loopne
jne
mov
jge
jl
fisubrs
mov
and
push
jo
gs
loope
test
mov
stos
and
iret
rorb
cmpsb
insl
je
mov
arpl
mov
or
jo
sbb
add
cmp
in
jle
cmp
push
push
xor
fsubp
pop
jno
lds
xor
and
cmp
jmp
push
and
out
jnp
lock
outsb
cmp
into
push
in
cmpsb
dec
dec
mov
lret
sub
jg
xor
fsubrl
ret
fistps
adc
hlt
cmp
jo
jl
mov
push
sbb
sub
sub
mov
cld
jo
shr
mov
imul
insl
lcall
ja
fwait
mov
jl
jmp
popa
rcr
pop
popf
jo
sub
sub
jo
lret
outsl
test
std
cmp
andb
scas
icebp
cmpb
shll
repnz
decb
pop
xor
sbb
jo
jns
sbb
iret
and
add
lock
mov
jne
mov
lock
shlb
stos
ljmp
push
lock
nop
inc
into
pop
cmpsl
mov
fwait
nop
cs
sub
or
fdivl
push
and
inc
add
jo
xchg
mov
scas
gs
jo
out
xor
push
orl
jo
test
xchg
jae
ret
mov
xor
push
push
add
roll
adc
push
out
nop
sub
jo
inc
dec
mov
sbb
je
into
mov
pop
jl
dec
jo
ss
stc
inc
xor
dec
sub
jno
in
adcb
lock
shll
test
outsl
jecxz
jo
pushf
in
add
mov
or
adc
push
jo
xchg
fisubs
outsb
out
add
imul
pusha
int
mov
jo
nop
out
into
inc
push
push
mov
jae
in
xchg
sbb
lock
clc
jo
inc
loopne
cmp
ret
inc
jp
xor
xchg
add
bound
insl
mov
nop
jo
xchg
mov
fwait
xor
outsb
pusha
sahf
popf
mov
pop
mov
sti
jo
pop
fst
jecxz
inc
jo
cld
pusha
scas
clc
jmp
add
in
push
repnz
pop
jp
pop
cmp
mov
inc
popf
add
jo
push
sbb
mov
jecxz
pop
jno
pushf
cmp
sti
xor
out
xorb
jae
push
cmp
jmp
mov
fs
xchg
xchg
jns
add
dec
sbb
push
mov
addr16
fimull
pop
add
sub
push
outsl
jo
mov
repnz
mov
xlat
pop
mov
jb
divb
fldt
shr
fucomp
xchg
dec
adc
dec
fdivrs
xchg
sbb
roll
imul
out
shl
movsl
sub
test
mov
arpl
xlat
add
mov
mov
outsb
jo
or
mov
jo
ficoms
out
arpl
adc
iret
cmp
scas
sbb
adcl
jo
std
es
insb
mov
ror
or
mov
lods
push
adc
in
insb
add
dec
jge
mov
jo
xor
insl
movsl
push
push
out
jo
inc
xchg
mov
xchg
das
sbb
mov
cmpsb
loop
mov
jns
xlat
and
mov
movsb
inc
outsl
dec
add
enter
pop
mov
ror
clc
mov
shll
xor
push
mov
add
jo
pop
adc
add
shll
jge
jo
jno
jl
adc
jo
les
xchg
xchg
sbb
dec
movsb
ret
out
mov
and
jne
adc
loop
popa
jo
stos
push
cmp
pushf
xchg
jo
or
rclb
mull
jo
mov
ljmp
jo
out
push
mov
jo
mov
jnp
cmp
fs
xchg
mov
or
pop
mov
sbb
inc
xchg
adc
dec
je
mov
aas
xchg
stos
stos
shr
popf
mov
jo
lock
lret
inc
dec
jae
cmp
imul
xor
in
mov
insl
loopne
jecxz
mov
add
pop
adc
cmp
inc
mov
lahf
mov
cwtl
imul
or
jo
cmp
es
stos
mov
or
inc
xchg
popa
adc
jo
add
adc
jo
fistpll
jmp
int3
push
jb
es
push
inc
nop
jae
mov
cwtl
cmp
fisttps
shlb
jecxz
sar
fdivrs
test
fdivrl
pop
adc
add
mov
loopne
mov
xchg
icebp
nop
sub
leave
negl
xchg
std
or
mov
sub
jae
sbb
inc
nop
sub
and
inc
xor
pop
imul
into
and
push
lock
pushl
mov
sbb
lds
pushl
cmp
int
mov
sbb
movsb
add
rorl
mov
sahf
adc
fsincos
adc
cmp
jo
xchg
add
and
add
pushf
dec
outsb
push
mov
jecxz
nop
nop
pop
leave
jo
ret
out
lret
jno
jae
pop
lds
movsl
leave
adc
or
pop
sarl
jo
xchg
xchg
testb
jo
jle
inc
lcall
lock
outsb
test
dec
pop
mov
mov
fwait
iret
fidivs
mov
cwtl
jmp
ds
ljmp
mov
daa
cmp
test
test
aam
mov
pop
jo
or
xchg
cmpsb
jo
cmp
stos
jo
outsb
dec
pop
push
pop
out
pop
leave
nop
lret
jo
test
subb
add
loopne
xchg
lods
fmull
jo
loope
sbb
mov
or
push
and
inc
lret
jo
out
clc
gs
xchg
jo
ret
mov
loopne,pn
fmuls
pop
jo
sub
in
enter
xchg
fbstp
in
int3
pop
fnstenv
ja
xor
jo
test
jo
mov
xlat
aas
push
js
dec
push
adc
mov
wrmsr
cmp
roll
out
es
sahf
push
test
inc
aam
lock
cld
sub
and
sbb
lock
std
fsave
dec
inc
mov
mov
iret
imul
ret
je
imull
xchg
fsubrl
adc
cli
lods
xchg
mov
mov
sbb
jo
insl
icebp
lea
pop
pop
or
pusha
push
in
insl
loop
xchg
std
stos
mov
dec
jecxz
in
movsl
cmp
insb
xor
fiaddl
mov
cli
push
jp
pop
popa
pop
lock
xchg
dec
xchg
imul
jbe
cli
sti
push
popa
mov
bound
inc
dec
stos
xchg
stos
jb
repz
push
in
mov
rorb
into
mov
or
xchg
lea
icebp
dec
sub
jo
movsb
dec
scas
cld
dec
jo
mov
jb
jge
xor
data16
pop
lock
jo
mov
ljmp
stc
and
mov
jmp
xor
sub
push
sub
jo
fidivl
scas
flds
mov
lods
xorb
cmp
fidivs
arpl
shrb
loop
repz
and
ja
adc
xchg
jo
mov
shlb
and
outsb
pop
mov
inc
xchg
lods
inc
fs
pushf
ja
add
jmp
cmp
cmpsb
nop
adc
jo
inc
cli
imul
mov
xchg
lock
push
push
divl
or
popf
add
pop
mov
jnp
mov
jo
dec
xorl
cltd
and
mov
cld
and
mov
mov
jo
lahf
adc
xchg
loopne
ljmp
jo
xchg
orl
mov
int3
scas
in
fidivl
xchg
into
or
adc
shlb
sahf
inc
adc
jo
xlat
int3
je
pop
or
push
jo
stos
cmpsl
int
mov
cld
xor
mov
inc
in
jo
xor
or
adc
ja
js
addr16
xor
push
pushf
into
jo
mov
loope
or
daa
xor
cmp
aam
jnp
fucomi
popf
insl
jns
pop
movsl
sbb
cmp
add
push
jo
cs
sub
stc
and
sub
sahf
vpaddusb
jbe
or
dec
sbb
jo
ss
jo
call
sub
lods
and
shl
xor
in
lock
or
jae
add
push
mov
cmp
xlat
jne
lods
leave
int
or
cmp
pop
pusha
shrb
bnd
mov
data16
and
mov
add
adc
scas
mov
scas
add
aas
sbb
mov
jmp
jo
int
imul
ljmp
test
xchg
jo
xchg
inc
popa
shll
xchg
sbb
adc
mov
mov
pop
sti
rcll
jo
cmpsb
mov
in
mov
lock
inc
dec
into
mov
aad
adc
or
mov
lock
nop
ljmp
pop
jbe
jo
rdpmc
jmp
jo
addr16
pushf
xorb
or
lock
sbb
js
and
sub
loop
sub
cmp
jae
add
mov
jo
mov
cmp
cmp
fstpt
sbb
lea
jmp
jo
cmp
and
loopne
cmp
inc
jo
js
or
idivb
mov
pop
inc
mov
hlt
jo
push
movsl
test
mov
jo
insb
movsb
push
jmp
sti
ja
cmp
test
pusha
mov
or
jo
dec
push
fbstp
cwtl
nop
jnp
hlt
sahf
and
lock
dec
int3
and
sbb
insb
pop
adc
push
popa
gs
into
or
push
mov
ret
sbbl
lcall
lcall
nop
arpl
push
jo
push
cmp
cld
mov
mov
jno
or
je
fisttpl
jp
rolb
js
lock
lds
push
push
mov
outsb
mov
fdiv
pusha
lods
inc
jmp
js
jo
lds
xchg
shlb
mov
arpl
mov
adcb
ja
push
outsl
ret
repz
inc
mov
sarb
addr16
jo
mov
xlat
sbb
jo
mov
or
out
hlt
push
jg
scas
xchg
mov
repnz
jo
mov
insl
imul
mov
adc
popa
das
in
xlat
adcl
mov
jo
fwait
mov
outsl
insb
or
lock
int
sbb
mov
pop
jle
lock
push
sub
and
xchg
pop
xchg
push
in
fwait
dec
mov
inc
xchg
mov
outsb
js
in
enter
lret
jns
js
or
lds
movsl
je
jne
jnp
add
lods
testb
cwtl
sbb
cltd
ljmp
in
mov
test
push
add
mov
insb
sub
xchg
loopne
push
adc
cmp
pop
push
stos
ds
xchg
pop
add
insl
mov
mov
or
das
cwtl
inc
add
adc
add
imul
or
lock
cwtl
call
cmpb
xchg
xor
jbe
addb
adc
in
jge
out
mov
addr16
pop
leave
in
fdivs
inc
rol
in
orl
and
jae
subl
cmc
and
mov
mov
leave
cmpsl
push
scas
in
xchg
subl
sub
xchg
lahf
cmp
adc
jge
push
aas
push
pushf
rclb
cmp
aad
outsl
adc
out
jmp
cmp
add
je
icebp
pop
xor
out
jg
jae
inc
pushf
xor
mov
rolb
mov
movsb
jl
je
mov
dec
sub
aas
dec
mov
and
lea
fildll
fcomps
inc
loope
mov
push
and
sbb
xchg
inc
push
ss
push
sub
dec
pop
add
cmp
push
or
push
cwtl
and
jnp
or
and
xor
push
sbb
aad
push
lds
loope
out
gs
cmp
int
js
loope
int
dec
and
xchg
xlat
mov
and
mov
fcmove
jecxz
jns
movsb
pop
cwtl
sub
inc
mov
das
imul
sbb
lret
and
stc
insl
enter
loope
sti
fisubs
xchg
shrb
roll
xchg
cltd
pop
in
add
inc
and
aaa
dec
rcrl
incb
popa
xchg
mov
test
cmc
cmp
push
lret
inc
cld
cwtl
mov
jmp
mov
adc
push
xchg
sbb
push
push
dec
mov
out
sbb
in
pop
adc
and
and
push
jno
pop
cli
pop
mov
in
mov
ss
xor
pop
data16
cmp
xchg
sub
xor
jno
push
cltd
and
stc
mov
inc
mov
in
adc
insl
sbb
mov
and
lcall
imul
clc
int3
lahf
mov
cmp
cmpsb
dec
mov
and
xor
pop
cmp
sub
repnz
cmp
sti
vprotb
idiv
sub
arpl
jb
sub
fnstcw
dec
icebp
cmp
stc
cmp
add
mov
jb
jne
in
pusha
pop
inc
cmc
ss
popf
out
and
adc
divb
clc
subl
fistl
cmp
jl
rorb
int3
fdivrl
out
mov
adc
xor
insl
aas
nop
rol
push
mov
mov
add
cmp
sarb
shl
std
adc
sub
sub
decl
jp
fs
xlat
cld
outsb
clc
or
jns
and
or
fstpt
in
fldenv
stos
jo
mov
cmpsl
jne
hlt
inc
mov
leave
jo
icebp
mov
enter
adc
inc
dec
pop
mov
lahf
insl
xchg
outsb
and
call
cli
mov
fisubrs
jge
adcb
test
dec
addr16
int3
fwait
dec
jae
nop
or
fcmovnb
in
into
dec
mov
pop
mov
add
sbb
bound
bound
adc
js
mov
push
xchg
push
push
sbb
cwtl
pop
sub
sbb
cmp
hlt
divb
outsb
pop
fstps
icebp
sub
aas
das
loopne
xor
jp
or
mov
data16
mov
or
nop
bound
in
mov
or
adc
popf
rol
sub
rcrl
mov
push
ficoms
push
push
push
or
es
mov
in
inc
loope
faddp
xor
adc
xchg
cmp
fsubrl
or
sbb
loop
les
ljmp
dec
lret
pop
insb
adc
lods
in
sbb
faddl
divb
sarb
push
push
insb
cmc
hlt
pop
test
dec
insb
xchg
mov
adc
pop
loope
dec
aam
jo
sbb
cmp
jnp
jl
xchg
push
mov
inc
aam
iret
out
arpl
repnz
jno
cwtl
aam
cmc
loopne
aaa
and
mov
cmpsl
gs
add
clc
push
outsl
ret
inc
imul
scas
in
xchg
mov
pushf
jo
jp
sub
xlat
std
sbb
imul
testl
shll
inc
lret
test
or
pop
jo
and
xchg
push
jbe
cmpb
lahf
inc
inc
push
fistpl
out
pop
xor
jae
fisubl
mov
sti
cmc
jmp
dec
lret
cmpsl
fisubs
cmp
xchg
cmp
cmp
fidivs
adc
cmp
xor
dec
sub
push
cs
cmc
sbbb
icebp
and
movsl
cmc
push
out
daa
loopne
jl
call
mov
mov
ss
cmp
insl
cmp
and
repnz
mov
jge
inc
int
xchg
xchg
loope
lds
ficomps
cld
pop
aas
lea
shl
and
loopne
icebp
or
addr16
lret
sbb
out
in
out
mov
fidivrs
fildll
loop
cmp
js
orb
xchg
test
int
sub
jl
scas
lret
fimull
cmc
xchg
mov
mov
je
sbb
mov
xchg
jo
mov
jnp
jo
cld
push
xor
negl
sub
cmp
pop
jo
adc
xchg
mov
ja
jne
jbe
add
push
push
mov
jo
push
or
ret
adc
mov
jo
mov
xor
es
sbb
or
and
icebp
pop
sub
loopne
and
inc
jo
lea
loope
jmp
int
inc
mov
stos
mov
pop
adc
int3
or
std
or
popa
push
rolb
mov
cmp
pushf
icebp
dec
ja
stos
inc
sbb
cmpsl
mov
bound
xchg
and
jp
jo
aaa
in
cmp
jne
data16
ret
xor
and
ss
movsl
mov
jo
pop
fidivrs
mov
lds
sarl
push
cwtl
in
fwait
ja
int
lock
jo
insl
scas
cmc
xchg
pop
jg
imul
cmp
cwtl
dec
sub
test
or
mov
jo
mov
shr
sub
jnp
add
in
jo
mov
push
shll
inc
pop
jmp
mov
sar
and
xchg
ret
xchg
jo
mov
cmp
fdivl
adc
mov
xorl
movsl
pop
jb
xchg
mov
es
hlt
dec
call
jo
adc
jge
aas
jp
xchg
or
cmpsb
inc
mov
add
repnz
dec
jo
mov
xor
and
cmpsl
cwtl
shlb
idivb
add
mov
sbb
ljmp
xchg
lods
jo
int
lret
popf
dec
mov
sub
cmpsb
push
jo
hlt
sbb
fidivl
push
push
jo
jle
xchg
out
insl
ficoml
pop
dec
mov
mov
fdivs
push
add
ljmp
jo
je
int
sub
pop
push
mov
xchg
push
xchg
jmp
ja
sti
es
clc
mov
mov
movsl
rol
pop
lret
jo
testb
jo
mov
jns
jae
int
sbb
mov
lods
lcall
jo
in
mov
pusha
jae
sahf
ss
cmp
cltd
mov
jo
mov
lods
nop
cli
insl
push
aaa
andnps
arpl
enter
cwtl
lds
mov
jecxz
je
cmp
adc
xchg
sub
jo
lahf
pop
mov
push
jnp
stos
popf
outsb
or
shl
int
cwtl
insb
cmc
je
or
or
out
addr16
jp
pop
lea
mov
adc
or
shlb
ret
fldln2
jo
aam
jae
stos
mulb
jo
and
stc
mov
out
jle
xor
lret
mov
dec
inc
adc
adc
adc
movsl
mov
add
out
cld
push
lock
pop
in
jo
jge
push
or
shlb
nop
out
pop
add
cld
hlt
fildll
cmpb
das
into
cmp
add
jo
lods
pandn
ss
sbb
xlat
pusha
repz
and
cmp
xor
sbb
jmp
enter
aaa
enter
push
repz
xor
cld
int3
add
and
jecxz
jo
add
xchg
cmp
add
inc
xchg
sbb
jne
insl
sub
push
jo
loopne
cmp
insb
bound
arpl
sub
mov
lret
loope
xor
pop
mov
mov
sbb
mull
jo
jecxz
pop
and
cmp
xor
or
or
jecxz
bound
fsub
int
and
int3
jo
shr
add
enter
loopne
fcompl
jo
aad
push
xor
sbb
jno
mov
cwtl
adcb
outsb
das
push
fdivrs
mov
or
addb
sbb
les
cmp
cwtl
fwait
xor
and
daa
cltd
nop
push
imul
jnp
pop
lock
je
pop
and
sub
test
adc
es
repnz
mov
loopne
popa
pusha
fldt
push
or
lods
ja
in
jl
in
jbe
xchg
inc
mov
xor
dec
mov
aaa
pop
xor
or
test
inc
sahf
out
jae
insl
pushf
ret
clc
loop
mov
leave
mov
xchg
inc
in
jp
inc
push
outsb
aaa
cwtl
or
je
xchg
into
loope
pushf
out
mov
sbb
ja
adc
dec
js
cmp
push
dec
pop
and
mov
pop
fstps
pop
mov
popf
jo
xor
add
mov
xor
shlb
cmpb
jo
mov
add
inc
shl
and
add
bound
lea
lock
stos
rorb
jo
adc
nop
je
test
popa
icebp
jne
insl
mov
pop
cmpsb
dec
push
push
push
aad
insl
jle
fsubrs
mov
frstor
xchg
loop
add
mov
lock
pop
popa
aad
fnstsw
dec
cli
jmp
add
mov
jl
fwait
push
push
lods
jo
daa
jp
ss
xchg
insl
fbstp
jae
add
cmp
jo
add
adc
jns
xchg
jo
jecxz
fimuls
xchg
mov
shlb
push
mov
xor
bound
mov
jo
jp
fs
lret
stc
jo
adc
push
push
lcall
cld
test
loopne
jo
in
mov
adc
punpckhwd
xchg
xchg
mov
xchg
insl
es
jecxz
mov
jo
add
add
sub
sbb
sbb
ficompl
in
mov
xchg
cmc
lock
sahf
sub
mov
jge
outsb
and
xchg
jo
lcall
ja
mull
xor
jbe
jns
xor
cmp
jle
sbb
jo,pn
inc
and
mov
xor
insl
push
xchg
scas
jb
rorb
stc
cmp
movsb
pop
insl
dec
dec
or
jg
test
addr16
fldt
mov
std
cmc
push
cld
and
xchg
test
pop
scas
xchg
mov
adc
dec
jo
outsl
ljmp
pop
jo
xchg
js
jae
push
std
add
jmp
adc
ss
sub
dec
and
stos
es
addb
ficoml
cmp
push
xor
cmp
sub
movsl
inc
xchg
mov
dec
inc
jo
add
add
jo
xchg
sahf
in
jecxz
jg
dec
or
mov
insl
shlb
mov
stos
pushf
pop
cmp
jae
stos
iret
je
inc
test
dec
shrb
cmpsb
movsb
sbb
fists
mov
cwtl
adc
push
or
jo
shl
stos
mov
pop
sub
mov
in
addr16
rorb
iret
repnz
dec
sbb
loopne
cmp
outsb
outsb
fldl
loope
sub
dec
jo
cmp
sbb
jo
lret
shl
das
hlt
imul
cwtl
pop
xchg
sub
pop
adc
addr16
jle
adc
add
pusha
insl
in
push
je
lret
das
nop
cmp
sub
insl
scas
jg
jbe
and
mov
test
xchg
lds
jo,pt
ficomps
mov
jle
jp
fsub
in
nop
insb
inc
jb
dec
jo
popf
dec
aad
cwtl
pop
ret
or
jo
add
leave
jo
inc
xchg
pop
loop
imul
mov
aad
int
out
adc
out
divl
lcall
ds
scas
inc
and
inc
lret
pop
push
cmpl
mov
jmp
mov
ret
loope
outsl
jo
adc
repz
mov
add
mov
outsb
fucomi
bound
push
or
enter
ljmp
stos
roll
std
adc
jno
or
push
pop
push
xchg
cmp
xor
or
jne
or
mov
jne
pop
and
xor
shlb
stos
pop
dec
movsb
mov
mov
cmc
in
jp
push
addr16
outsb
mov
lock
cwtl
mov
les
xor
add
enter
rclb
cmpb
xchg
cld
sarb
pop
xchg
lret
jbe
cwtl
lret
iret
and
push
cld
enter
sbb
adc
xchg
xchg
es
pop
daa
loopne
hlt
ret
in
outsb
cmp
lret
xor
repnz
pop
cmp
fs
xchg
adc
pop
xchg
push
adc
jne
fcoms
add
dec
xchg
xchg
dec
pop
jb
sti
cmp
je
and
add
stc
fwait
inc
jle
es
clc
inc
jg
nop
adc
cmp
fs
arpl
scas
xchg
fists
and
call
je
inc
xchg
mov
add
sub
pop
das
pusha
aad
or
lea
popf
outsb
push
loopne
loope
add
les
leave
mov
or
xor
mov
push
dec
insl
hlt
sub
pushf
lret
and
jne
pop
scas
je
xchg
icebp
cmp
adcl
lahf
pop
mov
or
insb
pop
ret
lods
xlat
sbb
add
call
xorb
enter
push
mov
orl
pop
mov
adc
cld
scas
xor
dec
cmpl
cwtl
mov
or
leave
cmp
jne
xchg
and
dec
cmpsb
std
stos
sub
and
test
inc
and
js
leave
das
pause
pop
xchg
jbe
xor
ret
add
jp
cmp
and
jne
mov
sub
or
and
lock
aam
inc
adc
push
and
je
mov
mov
ret
outsl
dec
shl
outsb
sbb
insb
mov
cmp
push
sub
sub
cmc
mov
dec
test
jns
out
cli
push
cmpsb
insb
stos
cmp
push
inc
popa
clc
pop
mov
mov
xor
sti
dec
jo
ljmp
shll
xor
mov
testb
mov
test
xor
rclb
jmp
insb
lods
cltd
rorb
je
and
aas
je
daa
int3
inc
aad
pop
push
dec
mov
pop
je
fistl
out
sbb
xchg
gs
pop
scas
push
adc
cmp
maxps
jb
enter
sahf
sub
bound
imul
test
cwtl
cmc
das
add
cmp
mov
xor
out
cltd
sbb
mov
ja,pn
int
cwtl
mov
xorb
je
pop
sub
xor
es
mov
daa
dec
add
pusha
cmp
xorl
and
fcompl
dec
mov
mov
cmp
test
loopne
adc
sbb
js
imulb
adc
movsb
cmp
mov
outsb
mov
gs
fistl
ss
jle
rcrl
xor
imul
pop
imul
cwtl
les
jae
lcall
and
xor
aaa
movsl
ss
adc
adcl
mov
dec
push
inc
jmp
mov
jle
jno
movsb
inc
xor
adc
inc
push
cmp
daa
adc
cwtl
sub
mov
adc
mov
xor
push
daa
mov
jl
xchg
lds
outsb
dec
mov
pop
sub
aam
gs
jo
test
xchg
andb
jns
rcll
cmp
xchg
mov
jmp
lds
sub
rcrl
int3
sar
mov
push
push
test
or
jle
imul
sub
arpl
adc
xchg
mov
stos
jge
sub
sbb
scas
and
movsb
lcall
out
push
dec
divl
inc
pop
jae
xchg
mov
fidivs
and
mov
and
adc
adc
xlat
xchg
call
out
gs
dec
enter
jo
cmpl
fistpl
push
and
adc
jg
inc
pushf
dec
cmp
or
inc
stc
pop
out
jbe
sub
and
and
leave
sub
lret
iret
scas
aad
cmpb
pop
mov
push
popa
iret
loopne
dec
sbb
adc
xchg
adc
sbb
ds
mov
arpl
xchg
mov
fs
inc
clc
out
xor
mov
loope
push
inc
xchg
sarl
and
push
lock
stos
in
jmp
addr16
mov
mov
push
adc
dec
inc
sbb
push
sbb
sbb
mov
adc
cld
push
sub
cmpsl
sub
pop
add
arpl
inc
cmp
mov
sub
enter
in
dec
sti
cmc
add
inc
insl
xor
and
pop
in
lock
stc
cmc
test
and
ss
aas
dec
in
add
popf
and
fsubl
sbbb
in
jge
arpl
in
test
pusha
ss
add
in
mov
inc
cvttps2pi
mov
jae
fwait
push
push
xchg
mov
sbb
pusha
sub
cs
pop
xor
push
hlt
xchg
out
xchg
jno
push
sub
ja
sub
adcb
mov
sub
push
je
scas
xor
sub
adc
push
testl
push
xchg
subb
cwtl
fs
pop
pop
pop
dec
aam
sbb
stos
mov
pusha
fsubrl
mov
jge
arpl
fwait
rcll
xchg
fs
pusha
fs
sbb
add
popf
insl
cmpsl
jmp
xchg
mov
stc
loopne
sbbb
cltd
rcrl
add
leave
pop
rcrb
mov
rclb
cmp
mov
call
cmpsl
into
fldcw
push
stos
pop
cmpb
sti
std
and
pop
mov
or
cmp
and
mov
in
xor
xor
pop
fbstp
sbb
push
and
das
jns
fldl
sahf
pop
rolb
lret
in
push
adc
sbb
pop
pusha
mov
and
mov
pushf
inc
pop
xchg
int
icebp
sbb
scas
push
xor
dec
gs
rclb
lea
movsb
mov
shl
rol
sbb
vpxor
sarl
xor
loope
lret
gs
lock
call
inc
lret
imull
aaa
sbb
push
mov
call
or
test
mov
enter
out
add
sub
jmp
jmp
lret
mov
ficoms
xchg
xchg
add
sub
mov
xor
inc
dec
out
notl
and
loopne
outsb
in
sbb
push
hlt
jge
repz
int3
add
bnd
ror
add
mov
sbb
xor
lea
push
mov
leave
push
cmp
mov
repz
fwait
aaa
mov
std
add
icebp
dec
outsb
cmpsl
push
scas
mov
or
adc
push
mov
xchg
mov
mov
out
xor
sti
aad
lock
hlt
mov
adc
into
pop
test
add
mov
jmp
xor
fcmove
ret
xor
xchg
mov
test
pop
mov
insl
xor
sub
dec
std
daa
xchg
push
dec
clc
inc
xchg
push
mov
outsb
mov
cmp
jl
jno
lahf
jg
cmpl
mov
cmp
incl
pop
out
lods
lret
sub
jno
cmpsb
mov
lahf
cmpsb
sub
xor
insb
pop
mov
jne
sbb
pushf
xchg
sbb
push
push
loop
jecxz
lds
cld
mov
fildl
cmpsl
jp
sarb
mov
es
mov
subb
cmpsl
fidivrs
sahf
out
push
lods
pushf
clc
mov
out
in
icebp
repnz
xor
cmpsb
pop
cwtl
fs
in
xchg
add
adc
pushf
pop
sub
cwtl
lods
rorl
pop
push
and
dec
ja
es
sub
and
in
add
out
sbb
pop
and
jl
ds
add
mov
mov
ret
out
sbb
lret
sbb
jb
aad
sub
inc
in
scas
sbb
lock
ljmp
and
xorl
inc
int3
sti
cmp
inc
mov
dec
test
lsl
push
sub
in
pop
and
mov
pop
sub
xchg
ss
sti
adc
pop
push
imul
in
scas
das
push
pop
adc
mov
mov
sub
into
push
pop
pop
jb
stc
call
addr16
dec
sti
mov
inc
clc
push
push
and
pop
dec
cmpxchg
fldenv
adc
mov
pop
add
mov
inc
lock
pop
rcll
cmp
popa
js
xor
mov
fs
cmp
stc
sbb
adc
sahf
fnstenv
or
loope
hlt
cmp
add
movsb
insl
aaa
mov
in
xor
jle
insl
mov
aaa
dec
or
cmp
call
jp
sti
movsb
es
or
icebp
sbb
push
jo
sbb
nop
cmp
mov
fnstcw
mov
cmp
xchg
movsb
outsb
sbb
cmp
sub
insl
pop
and
ds
push
or
sub
mov
cmp
dec
sbb
adc
insb
xlat
cmpsb
jl
andb
dec
hlt
and
sti
dec
push
cwtl
mov
fldcw
adc
lock
add
sub
cmp
sbb
pusha
rcl
cwtl
stc
sbb
adc
in
out
add
push
fcomps
arpl
inc
xchg
adc
imul
dec
js
pop
sub
mov
dec
xchg
push
das
test
xchg
pusha
and
dec
sub
cwtl
dec
fsubl
cmp
adc
or
hlt
sub
and
repz
sub
iret
add
adc
pavgb
and
repnz
mov
bound
cmc
fs
test
je
mov
mov
sbb
and
cmp
push
cld
mov
test
ljmp
push
fisubrl
out
ficoms
test
out
push
insb
call
fs
pop
pop
jns
lock
pop
loop
or
push
mov
sbb
mov
add
or
mov
popf
insl
mov
push
rcll
paddd
adc
push
fmul
xor
mov
cmp
lcall
adc
cwtl
adc
imul
repz
cmpb
jge
mov
mov
lock
sbb
mov
sub
lock
cwtl
jne
sbb
push
js
xchg
push
mov
pop
cld
xor
push
jmp
cmp
scas
pusha
xchg
inc
sbb
pop
pop
stos
cmp
push
andb
mov
xchg
sub
das
andl
je
rclb
mov
mov
insb
dec
rorl
sbb
mov
push
pop
cmp
fidivs
push
pop
cli
and
or
cwtl
add
jbe
add
jnp
std
mov
pop
ljmp
js
cmp
xchg
pop
push
xor
aaa
cmp
cwtl
dec
scas
jl
add
or
dec
push
add
sub
and
stc
scas
or
out
mov
in
adc
ret
mov
ds
push
inc
int
in
jge
xor
sub
insl
mov
in
outsb
inc
daa
stos
aaa
jb
adc
call
movsb
loopne
adc
cwtl
fildl
mov
andb
mov
pusha
or
lcall
inc
push
test
enter
insl
test
add
fwait
icebp
xor
push
sbb
rcll
and
arpl
bnd
adcb
test
xor
push
adc
lods
mov
xchg
xor
mov
cmp
push
push
adc
lock
mov
outsb
sbb
iret
mov
pop
cmpl
xchg
mov
inc
pop
mov
lds
sbbl
xchg
test
clc
sbb
dec
sub
outsb
jp
mov
xchg
addr16
hlt
push
fneni(8087
subl
addl
push
sets
insl
sbb
push
sub
and
ffree
xor
add
xor
xchg
pop
add
stos
in
dec
fimull
addr16
mov
xchg
jnp
cmpb
rep
hlt
stos
jnp
pop
jmp
add
and
int
jge
jno
in
pop
inc
or
pop
jecxz
adc
sub
mov
cwtl
adc
and
dec
add
mov
jl
pop
pop
adc
or
lea
xchg
mov
jae
clc
pop
sub
test
push
aam
and
pop
shlb
or
jae
pop
sbb
mov
jne
and
xchg
sbb
in
jns
sti
rcrb
mov
push
insb
or
bound
xchg
mov
cmp
es
addr16
sbbl
sub
sbb
mov
je
cwtl
cmp
mov
sub
orb
dec
sbb
lds
sub
mov
loopne
insb
je
fs
pop
mov
loope
loope
test
jle
dec
icebp
arpl
dec
in
and
pop
ret
cmp
aam
lock
sbb
aaa
fs
scas
in
and
dec
xor
cwtl
and
jno
sarl
pop
out
push
rclb
daa
add
push
pop
scas
ja
mov
std
mov
cmp
aaa
ds
ja
std
and
sbb
push
push
xchg
in
int
dec
cwtl
es
scas
adc
dec
fwait
cld
out
fchs
xchg
addb
add
lds
mov
aam
push
sub
add
dec
mov
xchg
outsb
loop
pop
test
loope
stos
sub
fsubrl
adc
insl
mov
sub
insl
add
mov
mov
mov
pand
mov
jnp
pop
cmp
push
mov
mov
add
and
fs
sbb
outsl
push
mov
mov
pop
pop
mov
jl
iret
call
out
push
lds
xchg
sti
sahf
sbb
adc
mov
mov
pop
sbb
movsl
or
push
inc
sahf
jnp
fwait
mov
sahf
stc
sub
fs
xlat
negb
cs
loope
xor
and
mov
mov
inc
mov
fcomps
test
jb
mov
and
dec
popa
mov
ljmp
pop
repz
divl
cwtl
ret
fisubl
dec
lods
outsb
inc
mov
stos
xchg
test
jecxz
loopne
loopne
push
ret
mov
cmc
mov
cs
push
lret
or
sub
stos
movsl
xor
pushf
sti
jmp
in
push
in
and
sti
jnp
pop
mov
mov
repz
call
out
xchg
addl
xchg
cmp
jne
add
xor
sbb
adcb
cmc
pop
add
or
in
sub
mov
add
dec
cmp
js
popf
hlt
mov
inc
nop
jl
repz
jo
stc
insb
mov
jmp
stos
lret
aas
mov
add
lret
aas
or
scas
out
inc
mov
iret
mov
jb
ljmp
aas
loopne
mov
ljmp
sarl
jmp
jle
mov
fistpl
loope
je
cmc
mov
mov
in
subb
and
and
clc
sarl
jne
insb
pushf
addr16
xchg
adc
out
clc
sub
pop
clc
lea
jns
mov
jmp
daa
xorb
into
nop
ss
inc
cmp
je
leave
mov
mov
insl
ret
int
jl
push
enter
sub
je
xchg
add
pushf
adc
lret
mov
lret
sub
je
adc
hlt
fwait
ds
jp
fsubrp
inc
mov
loop
sub
mov
add
mov
dec
fstps
cmc
jno
cmp
popa
mul
jb
loopne
sub
and
insb
pop
aad
cmove
cmc
pop
or
push
test
or
imul
push
ljmp
ja
aam
add
jo
shll
insb
jne
adc
jg
orb
jge
insl
mov
rol
insl
ja
mov
lods
adc
jo
xor
jle
dec
into
xchg
jo
and
push
push
cmp
lock
fidivrl
cmpsl
push
notl
aad
mov
pop
fmull
inc
cmp
call
lock
outsb
sbb
mov
pop
and
loopne
sub
fdivl
sbb
int3
nop
lcall
ret
push
mov
and
idivb
enter
jo
and
bnd
pop
rclb
cmc
jmp
scas
jo
mov
push
xor
cmp
inc
pop
jo
rcll
or
cli
dec
outsb
xchg
punpckhwd
jne
xor
mov
pop
mov
mov
jo
mov
popf
mov
dec
jo
mov
call
outsl
mov
mov
ja
pop
jecxz
mov
sub
push
aaa
shl
orb
xchg
jo
inc
fidivrs
fs
ljmp
mov
jmp
cltd
in
xchg
jp
rol
adc
mov
lahf
sti
sub
jo
iret
into
xchg
cli
lock
insl
cmpl
and
jo
inc
or
sub
jo
sbb
fmull
xor
cmp
xchg
pop
repnz
add
push
jnp
sub
and
jo
pop
push
loopne
push
cmp
jo
mov
jle
cwtl
cwtl
or
pop
in
shrb
fcoml
aas
dec
idivl
mov
out
lcall
xor
jne
movsl
pop
and
sub
in
or
xchg
test
dec
jo
fmuls
jo
repnz
sub
pop
jp
test
mov
pop
mov
jo
loope
arpl
xchg
mov
lock
inc
lcall
push
test
or
mov
pop
push
and
lret
cmpsl
mov
cltd
ljmp
jmp
push
push
scas
jmp
jo
arpl
iret
jo
mov
cmp
scas
leave
insb
and
lods
clc
xor
mov
dec
xchg
lock
jns
hlt
jne
jne
inc
out
jmp
cmp
ja
sbb
fs
mov
lods
arpl
and
xchg
jo,pt
adc
fiadds
nop
mov
ljmp
fdivrs
test
xchg
jae
xor
mov
into
sub
jno
push
adc
testb
ja
push
pop
std
cltd
xor
mov
dec
dec
and
xor
cmpsb
lret
jo
cvtps2pd
sbb
hlt
and
cmp
xchg
outsb
in
jg
fidivrl
jnp
cli
cmc
dec
les
jo
sub
adc
ret
pop
add
fildl
and
cs
mov
xor
sub
int
cmp
mov
test
mov
or
xchg
and
push
fisubrl
jo
sbb
sti
jnp
inc
inc
inc
lock
cld
fcompl
mov
lock
mov
outsl
cmp
adc
sub
loope
cltd
lock
imul
pop
cmc
ja
mov
cli
cld
fnstenv
cmp
jo
xchg
popf
add
lock
jo
daa
jne
mov
nop
lcall
loopne
inc
loope
inc
jo
fwait
ror
fidivrs
pop
insb
mov
jmp
sbb
mov
movsl
fs
mov
insl
pop
cmc
ror
imul
mov
mov
fs
lock
sahf
sahf
mov
shll
push
pop
and
test
imul
sub
pop
cwtl
out
and
incl
stos
sub
fimull
inc
arpl
push
cmp
sub
call
in
jnp
and
stc
jo
inc
and
cmp
in
dec
std
arpl
add
jo
push
fs
scas
or
iret
jo
jmp
cwtl
jmp
subb
lcall
cmp
mov
loopne
stc
clc
js
lds
lods
xchg
lcall
es
out
sbb
clc
loopne
pusha
cwtl
mov
sahf
pop
mov
inc
dec
mov
sub
and
movsl
xor
pop
shll
roll
jmp
cmp
xchg
insl
xor
and
pop
and
aaa
pop
sub
jl
lcall
mov
popf
add
fisubs
dec
and
mov
add
popf
dec
and
push
loopne
hlt
in
adc
dec
in
jo
int3
adc
mov
ficoms
cmp
mov
mov
cs
sbb
push
xlat
cmp
rcl
filds
fiadds
sub
xchg
xor
fs
pusha
es
lret
clc
sti
pop
jmp
and
incl
jnp
icebp
std
adc
outsb
xchg
enter
inc
insl
inc
mov
xchg
std
pop
in
mov
movsl
daa
mov
js
jb
fsubrs
jbe
ja
adc
cltd
sub
in
outsl
push
mov
iret
mov
dec
dec
adc
and
lret
jmp
xor
jge
inc
push
jp
cmp
pushf
mov
jbe
insb
jo
mov
mov
pusha
mov
jo
add
sbb
in
or
inc
iret
inc
loopne
outsl
lcall
or
vpslld
inc
mov
dec
stos
jo
and
inc
sbb
mov
les
jo
int
dec
lahf
out
sbb
dec
or
jo
and
bnd
mov
or
add
inc
or
jo
cmp
mov
loope
dec
js
cmpsl
sarb
cwtl
jo
pop
push
mov
or
add
rorb
mov
int
jmp
mov
in
xchg
and
mov
test
jp
lret
pushf
lock
sub
and
repnz
and
inc
jmp
jno
cld
in
nop
int3
xchg
inc
jae
push
mov
jp
shl
push
subl
or
jns
sar
rolb
fistpl
push
sbbb
enter
fmull
push
jae
clc
lock
std
sub
add
rcrl
into
pop
jnp
jo
mov
pop
imul
jno
iret
push
xorl
push
dec
xchg
sub
mov
xchg
sarb
xchg
fdivrs
pop
jae
es
fdivrl
jo
loope
mov
fidivrl
test
adc
jo
sub
mov
push
sbbl
jo
fdivrs
out
std
jo
cmpsl
dec
jmp
test
jo
or
sarb
jo
in
and
outsb
jle
in
insb
iret
or
inc
ja
push
daa
xchg
nop
jae
xlat
icebp
jo
pop
mov
inc
fldl
push
xchg
lret
loop
xor
cmp
in
rorb
xchg
jo
dec
aas
out
movsl
es
out
sahf
pop
inc
loope
loopne
xor
jae
sti
cmpsl
insb
pop
ror
xor
inc
in
cwtl
sahf
jo
les
aaa
add
insb
cmp
inc
in
fdivrs
icebp
orb
imul
sub
add
ret
dec
aad
inc
add
test
mov
pushf
or
pop
jmp
xor
scas
and
arpl
or
jo
cmpsb
aad
cltd
sbb
jl
jo
orb
mov
add
and
shrl
inc
pop
mov
xchg
ret
pop
mov
cltd
adc
test
mulb
pop
mov
es
sbb
adc
sub
xor
inc
ja
or
ficoml
dec
ret
scas
dec
mov
test
mov
movsl
loope
add
shll
cmp
out
jo
data16
in
fmuls
jo
sub
mov
jg
cwtl
jo
outsb
stc
inc
inc
loop
test
cli
enter
mov
into
mov
call
js
jle
xchg
addr16
enter
pop
mov
bnd
jo
inc
cmp
push
pand
popf
dec
ljmp
mov
dec
ja
aaa
and
jo
push
inc
ds
outsb
lds
shlb
arpl
shlb
xchg
imul
cmp
cmpsl
icebp
aas
push
orb
mov
inc
cmp
je
notb
xor
lcall
addr16
and
call
rorl
pushf
cmc
je
push
or
fwait
mov
mov
cmpsb
mov
xor
mov
push
lods
lock
cmp
sahf
jo
les
xchg
jo
into
bswap
mul
icebp
jo
inc
aaa
test
call
scas
mov
ljmp
add
fdivrs
add
jo
jge
pop
cmp
sahf
sub
arpl
jo
and
or
push
ljmp
repz
pop
mov
shll
popa
sbb
or
fs
loope
bound
test
pop
jo
sbb
dec
ja
js
out
sub
jo
jns
movsb
and
insb
xchg
imul
int
xchg
mov
out
pop
and
lods
jno
mov
pusha
fwait
scas
jnp
sub
cmp
pop
xor
jne
dec
stos
cmp
dec
pop
jnp
loopne
inc
mov
pop
ret
out
or
test
sub
jg
xchg
jae
pop
mov
cs
jle
cmp
xchg
mov
inc
lcall
imul
outsl
int
lds
push
in
js
and
inc
cmc
enter
je
xchg
mov
repz
lock
sahf
adc
mov
xchg
sub
ror
mov
and
xchg
test
pop
test
int3
xchg
data16
pop
fwait
or
fsubrl
in
jnp
cmc
push
fcomps
push
and
sub
push
jns
adcl
fmul
and
das
cmp
rclb
test
jo
in
or
lcall
sbb
push
movsl
dec
mov
push
mov
pushf
xchg
add
xor
fnstcw
idivl
cmc
cwtl
clc
mov
dec
mov
in
push
movsl
xchg
idivb
lods
jb
outsb
insb
sub
pop
or
adc
jmp
mov
cmp
jns
mov
cltd
out
jmp
cmc
dec
sub
mov
add
push
into
orl
jno
cwtl
push
inc
scas
xor
je
in
xchg
enter
pop
into
popf
jnp
in
lock
je
push
lock
rcrb
enter
adc
enter
sub
cmp
popa
mov
imulb
add
xchg
adc
xlat
xchg
xchg
push
enter
ret
stc
lret
dec
lds
insl
dec
adc
and
adc
add
sbb
in
xor
lahf
scas
fwait
cmpsl
mov
test
push
pop
mov
cwtl
movd
dec
and
push
jo
cs
call
xchg
xchg
pop
sub
mov
inc
mov
mov
fisubs
dec
dec
enter
xchg
jo
xchg
cmpsl
stc
fidivrs
lcall
sti
sbb
js
cmp
cwtl
gs
jo
daa
test
mov
loopne
cli
nop
out
mov
fwait
mov
cmp
mov
push
andb
push
fdiv
clc
dec
idivl
and
mov
sub
cmpsl
pop
aad
push
inc
mov
not
push
test
std
jno
sbb
shrl
jle
mov
outsl
jne
incb
outsl
sub
ja
hlt
ficoms
bound
xchg
nop
fldenv
out
fwait
and
cmc
pop
sub
or
ss
mov
pop
jmp
inc
mov
jg
mov
mov
shl
outsb
dec
sbb
loopne
pop
adc
push
xchg
pop
lret
mov
lods
pop
jb
cmp
xchg
mov
sbb
in
or
mov
test
mov
adc
in
scas
data16
scas
xchg
add
mov
or
notl
lock
sbb
nop
fiaddl
sbb
mov
pop
addb
mov
data16
repz
sbb
rorb
in
lret
push
xchg
pop
ss
lret
mov
in
push
cmc
arpl
out
jae
inc
mov
movsl
fstl
pop
jnp
es
jae
xor
pushf
sub
jg
cmc
inc
pop
in
insb
call
adc
je
jp
and
pop
pusha
mov
test
xchg
sti
in
or
in
sub
and
mov
jb
mov
cmp
adc
ret
aas
stc
cmp
bound
int3
mov
mov
push
dec
mov
xchg
sub
insb
jbe
xchg
cmpsl
dec
xor
mov
and
mov
mov
sub
into
iret
and
bound
icebp
aam
jg
jmp
inc
cmp
dec
lret
xchg
push
mov
inc
sub
sbb
add
cmc
lea
ss
addr16
stc
mov
push
shrl
mov
xor
movsb
cmp
cmp
xchg
inc
cmp
cmp
jl
lock
xor
cmpsl
mov
sbb
mov
dec
fdivr
in
xor
cmp
push
fildll
cs
mov
fildl
insl
fidivrs
xchg
push
jp
movsb
cmpsb
adc
sub
pop
and
mov
cwtl
push
popf
mov
adc
push
push
pop
cwtl
jecxz
popa
pop
in
jmp
mov
xor
fnstsw
outsb
stos
scas
and
sbb
movsl
repnz
ljmp
xchg
sub
popa
xchg
cmp
xchg
inc
jbe
cmpb
out
jmp
int
mov
fidivs
pop
mov
mov
add
pop
out
adc
mov
push
xor
cs
pop
cmp
xor
sbb
rcrl
xor
negb
inc
push
and
add
inc
fdivp
sbb
leave
mov
xlat
cmp
and
dec
pmaddwd
xchg
pop
jl
xchg
cmc
addr16
outsb
fs
stos
and
mov
mov
popf
jo
inc
fcomip
xchg
and
mov
sti
xlat
pop
icebp
sbb
je
push
cld
add
or
cmc
int3
cmp
jecxz
and
pop
loope
push
jecxz
decl
mov
in
and
mov
je
mov
cmp
dec
xor
sub
cmp
xor
movsl
inc
hlt
mulb
lods
aam
movsb
push
clc
dec
and
mov
adc
push
repnz
jns
pop
int3
cwtl
xchg
xchg
sub
bound
or
lret
mov
pop
mov
rclb
sbb
enter
arpl
pop
push
xchg
and
lret
in
fimuls
es
stc
into
push
hlt
pushf
xor
xor
cmp
push
and
out
arpl
jb
ret
cmc
lret
add
clc
jl
jno
cwtl
mov
cmp
and
fnstcw
es
leave
out
sbb
js
fsubs
je
addr16
xchg
dec
mov
mov
pop
add
sti
negl
mov
mov
ficompl
rorb
push
mov
aam
clc
int
xchg
mov
into
movsl
andb
push
pop
cmp
push
adc
adc
ficomps
rclb
and
iret
andb
inc
mov
mov
lods
insb
jge
loopne
icebp
test
xchg
fcompl
cli
inc
enter
sub
cmp
and
cmp
sub
mov
mov
orb
in
sub
out
pop
cwtl
pop
cmp
insb
lock
pushl
nop
aad
xchg
fstpl
sahf
cmp
adc
insb
movsb
and
xchg
jmp
ljmp
jnp
dec
add
shrb
stc
cwtl
add
mov
xchg
loopne
scas
inc
sub
pop
pop
cwtl
push
lret
push
add
ds
lea
dec
call
xor
and
fsubrl
xchg
fists
loopne
sbb
mov
aas
in
jne
insl
add
mov
addr16
mov
sbb
and
enter
xchg
aad
test
jp
jg
cmpsl
dec
add
xchg
lock
insl
sbb
xchg
sbb
pop
inc
jno
sahf
in
pop
jg
test
dec
negb
daa
daa
push
cmp
jecxz
out
pop
sarl
pop
sbb
stc
call
and
ret
inc
loopne
cmc
push
dec
sbb
js
cltd
jle
mov
sub
mov
int
iret
pop
in
jnp
out
in
pop
xchg
lahf
fmul
push
movsl
outsb
stc
ret
das
mov
inc
add
in
lcall
and
in
nop
mov
mov
pusha
xor
mov
mov
pop
pop
test
inc
js
jp
push
scas
add
mov
mov
loopne
adc
pop
and
sbb
clc
pop
fisttpll
dec
dec
mov
int3
pop
pop
and
stc
aas
mov
xor
scas
or
xchg
add
stc
mov
xor
cld
popa
out
push
aad
mov
jecxz
stc
lcall
in
push
testl
push
and
jecxz
addr16
inc
and
scas
into
sbb
bnd
popf
roll
cmp
fcmovnu
and
pop
cmp
push
push
push
jae
dec
popf
jae
jmp
orb
dec
jp
xor
sub
jecxz
cmp
jo
out
adc
cmp
sub
push
lea
test
test
jo
bound
push
push
sbb
fcoms
mov
lock
es
insl
xchg
fdivs
repz
xor
xchg
cmp
xchg
fdivl
xchg
bound
and
int3
arpl
ds
lcall
xlat
and
or
jl
jo
ljmp
out
xchg
test
jecxz
mov
insl
sub
push
lock
jo
sbb
adc
add
insl
test
pop
test
mov
loopne
xchg
cmpsb
jo
jne
sarl
or
loopne
jo
gs
or
negb
inc
ljmp
inc
push
jl
jp
push
fidivrs
and
add
rcrb
cs
and
xorb
adc
test
lret
mov
cmp
mov
lds
cli
or
fisttpl
cmp
out
in
js
mov
xchg
inc
jo
popa
and
sub
cmc
cld
cmp
fs
aad
aam
popl
imul
add
add
pop
add
pop
iret
adc
jae
push
mov
xor
loopne
or
jo
scas
xor
out
mov
jo
fwait
lods
inc
call
pop
mov
outsb
lock
call
jo
verw
lods
xor
cmp
testb
mov
notl
dec
or
push
loop
jbe
jecxz
xor
mov
cmpl
lret
mov
cmp
sti
aam
jo
add
movsb
or
add
xor
push
pushf
mov
jo
mov
mov
xlat
insb
mov
push
fldl
adc
sub
jns
scas
or
in
in
jo
xorl
pop
lods
repnz
add
jo
dec
mov
or
ja
pop
jnp
mov
das
jo
fbld
mov
les
xor
and
outsl
outsb
add
jo
in
test
imull
outsb
rcl
repz
divb
mov
pop
insl
mov
insb
adc
and
je
pop
mov
dec
jo
loopne
push
xchg
xchg
jns
jo
lods
add
mov
fildll
loope
lock
insb
jp
icebp
inc
popa
xor
xchg
enter
sub
in
int
sbb
sbb
andb
mov
sub
xlat
sub
jecxz
nop
jge
test
les
sub
dec
or
cld
lods
addb
dec
jo
push
lock
stc
push
shrl
inc
and
es
mov
xchg
mov
test
addl
shrl
pusha
mov
repz
aas
mov
jl
xchg
div
push
imul
inc
xor
dec
or
ja
add
mov
mov
lods
pop
mov
mov
movsb
repnz
inc
popf
mov
jecxz
aam
jbe
adc
dec
push
aad
mov
push
push
call
icebp
jle
add
insl
adc
daa
sbb
add
cmp
jo
or
in
mov
ja
sub
scas
movsl
mov
lcall
or
jo
add
jbe
mov
inc
popa
or
in
ret
pop
lcall
and
xchg
mov
rolb
jo
mov
movsb
pop
jle
push
jp
sub
enter
adc
mov
cmpsl
push
mov
add
insl
addr16
gs
sbb
lcall
mov
push
in
adc
mov
mov
sub
jo
pop
divl
dec
sub
pop
je
xchg
sbb
imul
les
in
adc
andl
mov
fcompl
jo,pn
dec
repnz
dec
adcb
jle
sbbl
jne
push
xchg
dec
jo
inc
imul
jo
jb
mull
push
insl
ja
jp
xchg
cmp
xchg
xor
test
add
jo
data16
je
mov
pop
incl
sbb
sub
scas
dec
sub
imul
fwait
imul
mov
cmp
push
in
test
jo
and
out
push
dec
pop
lock
test
pop
jo
adc
pop
int
mov
push
call
xor
adc
imul
jo
push
push
xchg
hlt
test
sub
dec
ss
aam
rclb
add
jo
aaa
leave
xor
gs
push
jns
pop
test
rcrb
bound
push
les
insl
mov
std
mov
insb
insl
in
test
mov
jo
xor
and
or
cmpsb
pusha
mul
test
adc
sub
shlb
and
jmp
cmpsl
addb
fs
xor
ret
mov
mov
push
jecxz
add
sbb
mov
lret
mov
jmp
jo
mov
or
xor
cmp
fnstenv
mov
xor
out
mov
cld
sub
mov
mov
in
in
jmp
inc
xchg
cltd
pop
add
mov
or
xchg
mov
lock
cmc
or
mov
sbb
dec
inc
loop
cmp
jns
jo
mov
icebp
insb
dec
sbb
ja
popf
mov
jo
push
ja
jo
lock
sahf
test
jo
mov
stc
mov
push
jae
shrl
and
mov
mov
hlt
aas
jo
xlat
les
jo
mov
pop
xchg
jo
mov
mov
mov
sbb
pop
and
fbld
lods
popf
or
lret
cmp
cmpsb
jo
sbb
jg
push
in
dec
pop
push
test
push
fistps
call
inc
inc
mov
jnp
xchg
aas
or
and
mov
subl
mov
jo
pop
jae
fdivrs
dec
jmp
and
jle
xor
rolb
and
inc
dec
aad
pop
mov
jge
outsl
sub
sbb
into
dec
mov
std
inc
xchg
flds
mov
cmpsb
push
sbb
xchg
jge
sub
loop
js
sahf
xchg
adc
pop
xor
or
xchg
sar
push
mov
dec
adc
or
pop
std
test
shl
cmp
push
gs
adcl
ret
sub
pop
sbb
insb
sub
mov
adc
sbb
fs
sbb
loopne
jo
lcall
or
test
xchg
mov
cmc
aaa
jo
lds
in
movsb
fbstp
pop
jo
iret
mov
cltd
insl
jnp
xor
adc
jge
cld
jle
cmp
mov
jo
sbb
mov
dec
hlt
fwait
rep
jo
pop
adc
jo
mov
popf
cmp
daa
dec
iret
dec
dec
xor
out
or
jo
subb
jo
outsl
mov
cmpsl
adc
jo
xor
pop
cmp
jb
cwtl
push
cmpl
pop
insl
mov
adcb
out
cwtl
lcall
inc
cltd
in
mov
xchg
fbstp
jo
inc
cwtl
test
jae
loope
sbb
movsl
enter
sub
and
sbb
add
in
scas
jo
inc
jmp
cmp
mov
adc
push
push
xchg
xorb
mov
stos
jo
mov
add
pusha
leave
in
inc
or
ficoms
aam
jb
fnstenv
jp
fcoml
mov
jo
ficomps
lods
dec
or
cmp
cmp
jo
call
imulb
jmp
rcl
mov
cmp
xor
imul
xor
jnp
inc
mov
xor
pop
jno
add
push
mov
cmc
jo
cmp
inc
sarb
xchg
rorl
or
mov
push
jl
mov
jecxz
daa
loope
xor
jo
add
push
pop
test
inc
dec
ljmp
pop
inc
or
xor
test
inc
push
out
dec
hlt
aad
jo
dec
pop
mov
jl
add
aas
push
push
leave
sub
xchg
xor
fptan
or
jecxz
mov
jae
pusha
mov
adc
or
rcl
dec
inc
fsubl
insl
stc
and
cmp
mov
dec
sub
popa
jg
enter
mov
xchg
mov
lods
mov
mov
fisttpl
push
std
jo
out
jns
cwtl
test
lcall
mov
jl
push
adc
mov
adcl
and
xchg
and
enter
jae
mov
jno
pop
sub
shll
pop
mov
pop
mov
xchg
js
aas
xor
ja
lcall
daa
push
int
or
push
jno
sub
lds
shl
xchg
push
push
sub
mov
aad
push
mov
push
decl
mov
subb
lcall
mov
pop
push
fbld
int
addb
xorb
push
sti
rcr
sahf
in
xchg
push
pop
push
jge
addr16
arpl
into
outsb
adc
mov
dec
stc
pop
cld
mov
js
jns
in
mov
xor
pop
aad
inc
fneni(8087
pusha
outsl
push
stos
xchg
scas
std
mov
loopne
xchg
pop
sbb
out
outsb
pusha
daa
mov
pop
jne
and
mov
xchg
leave
popf
add
cmp
add
sarl
push
pop
addb
mov
mov
push
rcll
add
xchg
mov
adc
ret
mov
pusha
rclb
cmp
jns
sahf
js
fs
or
add
fchs
sbb
jnp
inc
out
pop
hlt
push
cmp
adc
or
sub
mov
pushf
push
ljmp
and
and
cmp
xchg
and
andb
and
xor
and
cmp
mov
jae
cmp
repnz
in
add
cltd
xchg
test
shl
in
sub
jmp
and
mov
inc
adc
xor
inc
loope
movsl
pop
dec
fsubrl
cmpsl
clc
sub
xchg
inc
cmc
cwtl
push
orb
fnstsw
fs
movntq
mov
xchg
add
fdivrs
testb
sti
test
jl
jns
push
push
scas
pop
movsl
pop
mov
xchg
mov
dec
and
das
call
xor
sbb
jbe
lcall
cwtl
std
outsb
fadd
add
rcrb
push
rep
mov
sbb
in
sti
adc
jge
movsl
and
and
sti
scas
pop
outsl
dec
jp
shrl
mov
mov
pop
dec
mov
pop
ds
xor
or
adc
sub
mov
dec
mov
sbb
sti
lcall
push
sahf
pusha
je
dec
ljmp
lods
jne
bound
pop
ss
pop
fmulp
jle
es
fdivs
in
jo
shrl
iret
mov
xchg
jno
sti
scas
inc
jnp
xor
adc
sbb
andb
cmpb
je
scas
negb
cmp
inc
in
loopne
sti
xchg
sub
sbb
adc
adc
fsub
addr16
cmp
mov
test
jl
mov
cmp
lock
sub
xor
push
testl
xchg
dec
xor
insb
add
mov
iret
or
mov
jne
movsl
scas
jne
pusha
ds
imul
je
scas
xchg
scas
fldt
mov
out
pop
dec
sti
mov
mov
ss
push
jp
mov
and
sub
adc
jg
shr
test
lret
mov
mov
push
push
or
xchg
mov
add
out
pop
cmpsb
fsubr
push
mov
mov
cmp
test
jle
cmp
mov
push
adc
stos
pop
push
add
scas
sbb
mov
inc
lea
jno
and
test
inc
out
jnp
add
cmp
stc
arpl
in
push
cmp
push
xchg
lock
dec
or
jnp
in
scas
xor
and
and
insl
mov
dec
jo
cmp
xchg
out
mov
inc
sbb
stc
mov
pop
sub
dec
pop
out
push
mov
dec
push
inc
xor
hlt
sub
mov
loopne
mov
and
pushf
outsl
xchg
jbe
xor
sbb
shrl
jbe
mov
inc
nop
movsl
ret
add
xor
sub
inc
add
jl
fs
inc
mov
jno
inc
jo
outsb
cmp
leave
pushf
xor
xchg
cmp
enter
insb
loope
es
xor
jne
cwtl
into
cmpsl
pop
and
das
mov
sahf
sahf
dec
test
cmpsl
xor
inc
les
adc
ret
mov
ljmp
jmp
inc
mov
les
mov
gs
std
mov
out
mov
push
xchg
lock
movsl
xor
xchg
mov
dec
inc
mov
jo
cmp
loop
cmpsl
mov
jo
cld
into
das
pop
jo
xlat
sub
fdivl
stc
inc
testb
sub
mov
jle
jbe
jne
xlat
xchg
jo
fmull
out
ljmp
pop
test
jo
xchg
lcall
loope
pop
xor
adc
sub
adc
mov
cmp
jo
mov
cmpsb
loopne
push
movsl
xchg
stc
inc
shrb
jo
fnstenv
inc
xor
fs
mov
aas
popf
push
movsl
mov
inc
push
pop
and
jo
loope
je
in
sub
insl
scas
shlb
mov
das
mov
lock
and
das
mov
inc
rol
insb
pop
push
jo
adc
add
add
jo
push
adc
cmp
lahf
fisubrs
sub
jo
jecxz
pop
xchg
dec
jo,pn
push
add
je
mov
inc
mov
pop
xchg
xchg
call
dec
jo
nop
push
loopne
adc
xor
jo
test
pop
inc
repz
nop
lret
pop
adc
nop
push
aaa
jns
jo
leave
dec
xchg
inc
fcoms
cmp
pushf
mov
out
xchg
dec
sti
push
subb
leave
and
add
jo
aad
lds
dec
xchg
push
jle
adc
pop
in
fcmovb
lock
xlat
jl,pn
mov
orl
dec
or
adc
sub
test
js
incb
mov
inc
jge
jo
test
mov
jo
mov
sub
leave
lcall
lahf
stos
push
jp
cmp
popa
sub
lcall
jo
lret
xchg
rorl
mov
call
clc
pop
mov
lahf
jo
sub
adc
std
arpl
mov
ja
dec
adc
test
jo
std
xchg
les
jno
and
adc
add
mov
dec
push
mov
shll
setg
mov
das
daa
loopne
jo
repz
add
jge
jae
outsb
mov
cld
enter
xor
jmp
inc
jns
testb
lds
js
push
int3
dec
dec
cmpl
mov
add
adc
cmpsb
jo
pop
add
jle
jo
and
mov
ds
or
lret
dec
and
and
popa
imul
orb
and
cmp
and
xor
pushf
test
or
push
ja
fs
pop
mov
dec
push
jg
jo
pop
int3
xchg
xchg
jnp
jo
jno
in
ret
test
scas
rcll
jo
xor
sti
pop
sub
push
iret
cmp
ficoms
jo
jge
mov
mov
insl
jb
int3
and
inc
jg
push
and
and
push
movsl
jo
bound
int
ljmp
cmp
jns
out
js
mov
jo
jno
aaa
mov
sub
stc
imul
stos
jo
dec
lods
divl
adc
cmp
sub
jae
sub
clc
sbb
jo
loopne
imul
out
jns
mov
das
jae
test
rcl
mov
mov
add
or
sbbb
aad
inc
xchg
mov
cli
pop
sbb
daa
adc
out
sbb
xlat
pop
add
xchg
repz
sub
dec
arpl
fwait
mov
das
push
ss
mov
in
adc
arpl
sbb
fdivrl
pop
pushf
sbb
sti
push
push
sahf
loopne
jo
gs
inc
jo
pop
push
xor
push
pop
jo
sar
adc
jae
std
xchg
cltd
fidivs
jo,pn
sbb
fcompl
fcmovne
lock
or
fwait
or
cmc
std
out
mov
jo
test
mov
jo
ficompl
sub
mov
push
loop
ljmp
mov
inc
fisttpll
and
insb
insb
mov
inc
dec
stos
xchg
push
das
mov
jo
cli
inc
repnz
jae
mov
in
jle
mov
jo
adc
subb
jae
mov
nop
out
fstl
fdivl
mov
cli
jo
test
dec
inc
dec
dec
inc
fs
jno
insb
daa
push
ja
outsb
mov
notl
dec
jo
pop
add
or
or
outsb
addr16
test
adc
and
das
insl
inc
push
sub
mov
loope
mov
cmp
mov
ja
adc
cmpsl
xchg
jae
in
lods
or
imul
lock
popf
mov
add
jo
sub
test
xchg
jo
mov
mov
les
or
add
decl
inc
repz
fisubrs
and
test
xorl
jecxz
mov
xchg
popf
push
enter
xorb
jo
jbe
mov
add
addr16
popa
push
xorb
xor
loop
rorl
xchg
fsubl
mov
jnp
testb
xchg
dec
stos
inc
cmp
dec
out
sahf
iret
ds
jmp
mov
adc
mov
sar
cwtl
in
jo
mov
sbb
mov
jo
cmp
mov
xor
mov
sahf
enter
xchg
xorl
jo
jb
lock
mov
ja
xchg
inc
adc
add
jecxz
jo
dec
lret
add
and
jg
adc
insl
addb
movsb
pop
xchg
jo
divl
jns
test
in
ss
push
sbb
pop
inc
jo
xchg
out
push
popf
fistpl
les
or
shll
mov
pop
push
adc
cmp
icebp
loope
adc
loop
call
sbb
jp
leave
inc
sub
rcll
pop
cli
mov
jo
xchg
fisttpll
out
mov
aas
ja
int3
sub
push
jo
inc
inc
pop
jb
jo
jne
cmpsb
xchg
cmp
xchg
jo
jae
dec
out
jge
inc
jo
push
outsb
loope
push
mov
jp
in
fidivs
ss
mov
imulb
jmp
xor
cmp
xchg
add
cmc
push
stc
sahf
or
jo
out
mov
inc
fsubl
cmp
xchg
inc
jo
cld
adc
addr16
jl
jg
sarb
ds
mov
jo
lods
jne
rcr
jo
popf
int3
push
lock
mov
in
fwait
inc
adc
les
cmp
sbb
out
cmp
nop
push
mov
js
add
cmp
leave
das
aas
cmp
nop
mov
cld
jo
mov
push
mov
inc
push
xor
xchg
cwtl
dec
test
jge
call
fisttps
test
mov
int
insb
dec
pop
lcall
aad
mov
mov
or
fidivs
cmc
push
push
int3
insl
push
mov
fldenv
cmpb
xchg
stc
pop
stos
adc
adc
jo
and
push
xorl
loop
jb
adc
push
pop
addr16
push
jnp
icebp
cmp
bound
and
pop
fimuls
mov
mov
xchg
cmp
test
jae
stc
dec
dec
push
bound
pop
jo
fildl
jb
lret
dec
outsb
mov
jl
mov
jo
pop
cli
dec
jne
inc
into
mov
jo
pop
fiadds
xor
gs
sub
mov
fidivl
fcompl
jle
sbb
mov
add
ret
sub
pop
sahf
jno
cmp
jg
lock
lock
push
pop
cwtl
push
dec
or
jo
enter
pop
xor
jae
ret
std
arpl
rcrl
xor
sbb
jo
jle
mov
jo
rolb
test
jo
aad
daa
mov
pop
mov
sbb
jo
mov
out
push
pop
gs
inc
in
orl
sbb
push
mov
mov
cs
cmpsb
inc
addr16
sbbb
outsb
aas
sbb
nop
lcall
push
mov
test
lea
adc
ja
out
xor
in
test
jae
lahf
fdiv
mov
mov
jg,pn
subb
les
hlt
test
sub
imul
xchg
mov
int
add
jl
push
ljmp
cmp
dec
cmp
loopne
mov
enter
out
stos
insb
lds
sub
ja
push
sbb
jecxz,pn
addb
jnp
jmp
jmp
mov
pop
stc
insb
addl
mov
outsb
aam
cld
or
mov
inc
into
pop
sahf
mov
adc
pop
aas
scas
dec
mov
or
mov
xchg
call
cmpsb
js
mov
or
testl
hlt
mov
imul
and
insb
adc
dec
ja
adc
push
mov
xchg
test
add
adc
std
mov
jno
sbb
out
mov
cmpsl
mov
ret
xchg
mov
dec
mulb
imul
mov
cs
add
enter
cwtl
or
fxch
lods
pop
and
int3
call
lods
cmpsb
lds
push
hlt
loope
sub
cmp
mov
rclb
cmpsb
sub
cmp
pusha
sub
mov
pop
sbb
in
xchg
inc
out
push
jle
jae
inc
xor
add
ljmp
or
jecxz
adc
jecxz
lret
jno
mov
lcall
xchg
jbe
test
hlt
or
test
frstor
hlt
stc
fldcw
xchg
xor
add
adc
sub
xchg
mov
inc
jo
mov
mov
cli
sbb
inc
push
adc
jo
pop
mov
stos
and
dec
mov
or
sub
ficomps
fs
arpl
loopne
ret
cmp
lahf
cbtw
mov
inc
int3
enter
mov
lret
std
push
aam
push
aad
dec
out
in
jg
cwtl
push
mov
repz
xchg
dec
lea
in
sub
xorl
push
xchg
fs
loopne
jno
mov
lods
out
cwtl
shll
cmp
sub
movsb
sub
mov
ret
cmp
lock
andb
ss
fstpl
push
pop
test
faddl
cmp
push
sbb
add
cmp
cmp
notl
in
rcrb
pop
cmpl
jg
jne
pop
push
or
js
lods
imul
popf
sub
jl
sub
inc
push
push
insl
sub
enter
xor
movsb
hlt
adc
jae
jo
mov
repz
das
mov
dec
jno
jne
or
push
imul
sub
mov
push
cld
outsl
xchg
bound
mov
jo
inc
popa
subl
js
negl
cmc
aad
ret
jo
fdivr
mov
jo
in
adc
dec
loope
out
test
mov
xor
hlt
lods
test
jnp
add
adc
inc
pop
and
adc
jg
pop
push
jo
repz
pop
stos
cmp
bnd
push
fdivr
cmp
cli
mov
add
mov
push
jo
outsb
fcoms
jae
xor
nop
and
inc
xor
and
inc
loope
adc
adc
mov
jle
mov
cmp
cmp
mov
push
movsb
mov
nop
test
imul
or
mov
jo
ret
add
fs
mov
sub
and
das
mov
adc
nop
jo
in
mov
mov
dec
mov
fadd
insl
ds
push
outsl
shlb
xor
sub
js
mov
stc
shll
inc
addr16
xchg
mov
pushf
xor
out
iret
fidivrl
push
jo
dec
adc
insl
cmp
lock
dec
jnp
outsl
pop
adc
pushf
xlat
loopne
mov
and
mov
into
xor
roll
scas
cmp
xor
xor
xchg
pop
mov
out
rclb
jge
scas
jp
stos
push
fcoms
aad
dec
dec
jo
pop
and
jo
jecxz
mov
pop
in
mov
popa
out
or
jo
mov
or
dec
mov
add
mov
iret
jbe
mov
dec
push
lret
jge
xor
addr16
daa
mov
sbb
jp
jbe
or
cli
push
inc
mov
add
mov
pop
jo
test
aaa
hlt
ss
pop
push
outsb
fistpll
pusha
add
insl
mov
sub
lods
shlb
pop
pusha
jl
add
out
das
xchg
push
in
push
lock
inc
lret
pop
add
jo
sbb
inc
jo
shrl
push
sub
cli
jo
int3
aas
sub
mov
jo
mov
jo
inc
lods
jp
and
data16
mov
mov
pop
shl
xchg
rorb
mov
mov
pop
adc
mov
adc
sti
iret
hlt
pop
lret
sbb
aam
int3
les
cmp
pop
mov
jge
aaa
jo
fwait
add
mov
repnz
scas
testl
cs
jo
adc
pop
insl
fidivrl
push
jo
dec
mov
jno
pop
mov
int
pop
gs
div
push
leave
ja
std
pusha
and
mov
sbb
inc
adcb
aam
sbbl
ja
fcoml
pop
mov
jo
sub
pop
jo
inc
lret
insb
jge
jo
int3
xchg
add
xor
ficoms
mov
jo
aaa
sahf
mov
cmp
ja
popa
mov
bound
jo
out
sar
xchg
push
xchg
lods
call
mov
jle
lcall
sar
mov
adc
cltd
aas
dec
push
pop
and
mov
push
negb
popf
sbb
into
jo
cmp
nop
imul
cmp
mov
ljmp
clc
addr16
fdivl
or
jg
dec
cli
push
jo
mov
jl
and
and
push
cwtl
xor
mov
cmpsb
mov
shrl
ja
ja
and
push
std
pop
dec
inc
jo
jns
test
int
stc
jp
ljmp
loope
jo
sbb
and
xor
jo
pop
cmp
jo
pusha
fildll
jo
fs
add
notb
es
mov
pop
lock
push
sub
adc
das
push
out
test
dec
push
or
aam
jmp
dec
insl
out
lcall
add
pop
xor
iretw
adc
inc
mov
subb
jl
jo
push
stos
and
dec
je
jo
dec
cmpsb
mov
lods
jo
pop
outsl
jno
jns
mov
push
scas
es
out
nop
cmp
and
xor
mov
jo
jp
fbld
sub
sub
inc
daa
inc
jo
test
or
jo
or
in
rclb
jo
fs
mov
jo
cltd
xchg
imul
jo
cs
scas
jo
leave
inc
and
fcmovu
mov
push
cmpsl
imul
fdivs
mov
dec
test
aas
testb
insl
sub
fs
jg
ficomps
mov
mov
pop
lds
lock
fdivrl
rol
xor
addr16
sub
mov
xor
xchg
or
outsb
xorb
frstor
xchg
push
jo
mov
xchg
movsl
ss
loope
ret
mov
jo
mov
rcll
xchg
sub
sub
lea
mov
rclb
jl
dec
jo
loope
jmp
sub
and
pop
add
jo
xor
mov
cmpsl
mov
jns
je
and
xor
cltd
shll
jno
add
test
push
clc
jo
mov
inc
sti
lcall
inc
popa
fsub
mov
jo
cmp
jo
adc
shll
ljmp
loop
cmp
jo
hlt
or
ja
arpl
adc
orb
pushf
addr16
data16
or
fs
mov
dec
mov
fdiv
out
movsb
fwait
decb
into
std
mov
adc
mov
push
out
jecxz
xor
in
jo
jnp
dec
adc
mov
jo
dec
iret
sbb
and
sbb
mov
jo
mov
insl
and
pop
dec
fisttpll
cwtl
hlt
cmp
mov
in
mov
pop
cwtl
add
cmp
push
in
loopne
addr16
mov
inc
jo
pop
ret
les
das
lds
test
sbb
imull
lock
cmp
in
into
and
mov
push
repz
push
dec
lock
insb
push
adc
jo
int3
dec
aad
popf
lret
mov
sub
mov
jo
sbb
mov
xchg
jle
cmpsl
mov
jo
hlt
imul
sub
sub
adc
imul
ss
ret
scas
ret
xor
nop
mov
jbe
cmp
mov
fs
ds
jp
xlat
mov
sub
mov
pop
dec
les
cmpl
cmpsb
jae
sbb
mov
xchg
fnstcw
inc
mov
mov
jbe
jo
cltd
mov
xchg
push
xchg
jae
push
mov
clc
loopne
in
mov
jo
add
lea
je
inc
cmovs
mov
cmpsl
xchg
mov
sub
jecxz
imul
jnp,pt
mov
mov
mov
jo
lods
mov
add
in
in
fs
call
ret
push
mov
repnz
inc
jo
cmp
data16
pop
loope
jo
ja
mov
sbb
and
cmp
jo
and
mov
jo
xor
mov
mov
sbb
jne
aaa
imul
outsb
dec
jle
jo
push
in
je
and
dec
hlt
call
jo
mov
pop
sub
xchg
jo
lea
pop
aaa
xchg
je
and
xchg
mov
xor
mov
adc
mov
rcrl
fs
sbb
insb
outsb
jl
enter
out
or
das
mov
or
es
jge
mov
mov
jo
xorb
mov
adc
out
in
sti
ret
repnz
ficompl
mov
dec
push
outsb
xchg
shrb
xor
xchg
test
loop
push
gs
push
xchg
jge
ljmp
dec
lahf
xchg
jo
push
arpl
jo
dec
cld
cmp
sub
dec
mov
mov
push
fisttps
and
and
cmpl
repz
insl
pushf
ss
cwtl
sub
jo
mov
xchg
aam
scas
setb
xchg
jo
not
sbb
int
jo
sahf
and
mov
rolb
xor
pop
shrb
je
push
popf
in
jle
ret
pop
adc
out
mov
js
sbb
push
into
lahf
out
lock
sub
cmpsb
mov
ds
push
inc
jl
jb
dec
mov
pusha
mov
frstor
jmp
pop
imul
in
and
cmp
lock
scas
sub
out
or
sbb
sub
xor
xchg
cmp
and
inc
sti
ficoml
subb
xorl
outsb
mov
sub
fs
jb
jne
mov
mov
lods
xlat
xor
repz
xchg
cmp
push
inc
mov
sub
insb
pushf
test
sti
lock
push
sub
aaa
adc
xchg
and
xchg
mov
and
sub
aam
scas
lret
adc
cmp
cmp
mov
push
iret
and
jecxz
cwtl
mov
mov
jb
jle
lcall
push
xor
iret
shll
xchg
fcoms
scas
sbbl
adc
mov
dec
enter
sbb
shrb
pop
dec
in
addr16
sbb
xchg
subb
mov
in
jl
insb
dec
add
jmp
adc
push
adc
ror
inc
pop
int
xchg
stos
sub
mov
jmp
mov
int
cwtl
test
mov
dec
push
mov
test
jno
xchg
jb
jle
insl
daa
sbb
repz
jle
pop
ret
inc
dec
pop
inc
xor
xchg
push
jle
test
and
pusha
cmpb
xor
mov
or
shlb
pushf
adc
xchg
jno
or
lret
ds
clc
lock
dec
mov
mov
xchg
cmp
insl
insb
jnp
stos
jl
gs
ja
outsb
or
jo
enter
xor
aad
mov
push
adc
mov
jo
or
icebp
xor
lds
sub
mov
ja
aam
jnp
lahf
shlb
inc
incb
lods
aad
nop
jnp
mov
aaa
insl
pop
dec
sub
lea
pusha
movsb
mov
pop
add
movsl
ja
mov
pop
call
dec
inc
xor
jp
or
push
xchg
aam
out
movsl
xor
mov
push
inc
adc
mov
scas
loop
jle
enter
pop
jecxz
pusha
mov
pop
xchg
andl
or
mov
mov
xchg
in
mov
out
scas
jo
dec
mov
inc
jo
fmuls
dec
scas
mov
jo
jg
sbb
push
pop
dec
loopne
in
inc
jo
mov
dec
mov
jae
mov
pushf
lea
fiaddl
sub
loope,pt
inc
jge
pop
mov
mov
xchg
mov
mov
or
jne
mov
nop
out
cmpl
insb
xchg
adc
rcrb
mov
or
jo
and
int
jo
pop
leave
les
and
jo
mov
jno
jnp
daa
in
jo
pop
addl
add
stos
lds
test
jnp
in
pop
orb
lock
scas
jmp
das
or
ja
add
clc
xchg
inc
rclb
cmp
xlat
xor
push
cld
sub
dec
push
add
add
jo
jle
daa
inc
xchg
jae
or
outsb
xchg
adc
pop
shrb
dec
aad
mov
mov
cli
js
adcl
cld
in
inc
inc
push
lock
nop
dec
pop
popa
mov
jno
jle
shll
and
cwtl
fadd
xchg
jnp
mov
pushf
jne
inc
add
cli
adc
push
hlt
pop
sahf
jae
movsb
xchg
xor
dec
mov
in
lahf
mov
pop
jo
add
xchg
push
pushf
shlb
sub
jl
lea
pop
ds
ljmp
ja
pop
lock
bound
add
mov
mov
sub
jo
xchg
notb
sti
in
cmp
sti
jmp
ss
lods
cmovl
xchg
pop
imul
cltd
mov
cmovge
dec
aad
cmp
xchg
cmp
data16
fsubs
push
inc
es
insb
test
pop
sub
mov
adc
cmp
mov
sub
pop
decl
lcall
push
nop
sub
jae
mov
sub
push
lods
sbb
sbb
pop
repz
jne
cwtl
cld
adc
rcrb
loopne
mov
inc
xor
mov
sub
je
push
insb
bound
xchg
daa
jo
int
sbb
cwtl
clc
cmpl
mov
mov
rclb
enter
pmulhw
xchg
jb
add
iret
mov
lods
add
rcrl
fmull
repz
ror
cmp
lret
mov
push
stc
mov
sahf
in
inc
and
mov
mov
stc
sub
leave
ret
arpl
fldcw
jo
scas
pusha
sbb
sti
push
scas
and
pop
std
push
je
push
in
in
dec
in
and
int3
addr16
test
inc
pusha
pop
loopne
adc
sti
sbb
movsl
cmp
mov
cld
outsl
pushf
mov
inc
add
test
and
in
pop
pop
push
loope
mov
lock
stos
xchg
ret
xlat
jle
and
out
xchg
out
mov
push
mov
mov
cmp
adc
bound
outsl
in
lock
lea
xchg
adc
inc
mov
inc
fdiv
sub
xchg
out
xor
test
out
aas
fsubs
mov
sub
xchg
repz
sbb
inc
jnp
adc
inc
icebp
push
movsl
push
fdivrp
ret
or
scas
daa
dec
pop
sub
scas
inc
mov
cs
push
pop
jbe
dec
test
mov
ficoms
cltd
pop
call
add
cltd
sub
cltd
mov
xor
mov
sbb
lret
in
sub
std
hlt
lret
in
lcall
pop
fsubrp
cmp
imul
jmp
test
in
cmp
push
or
cmp
mov
out
mulb
cmpsl
pop
bound
pusha
pop
test
in
std
lcall
roll
mov
sbb
and
test
xor
scas
jns
loopne
xchg
shlb
pop
mov
andb
pop
sbb
add
adc
test
in
xchg
dec
sbb
and
out
xor
xchg
sti
pop
sub
cwtl
mov
mov
loope
lock
shll
jle
mov
lods
call
adc
popa
lock
loopne
stc
repz
sbb
sub
xchg
or
mov
dec
stc
hlt
mov
clc
cltd
cld
call
loopne
jl
insl
jmp
cwtl
dec
adc
movb
or
jbe
lret
mov
cmp
or
sbb
not
inc
xor
enter
cmp
mov
jb
sbb
lock
fcoms
loope
movsl
inc
jno
pop
fwait
insl
cwtl
in
mov
aaa
push
in
cmp
rclb
add
outsb
add
daa
jge
lcall
jbe
sarb
mov
std
jl
loopne
shrb
inc
jb
sub
inc
jae
in
add
repz
loope
adcb
movb
push
or
sub
test
cli
pushf
cmpsl
pop
scas
cwtl
inc
xchg
sub
mov
mov
adc
std
add
imul
cmp
cmp
adc
push
pop
adcb
mov
repnz
pusha
mov
xchg
xor
test
mov
push
xchg
stc
dec
leave
sahf
imul
push
mov
dec
test
mov
pushf
lods
adc
jnp
cmp
cmpb
repnz
loop
insl
fsubrs
shrb
lods
jbe
xor
cwtl
jnp
pop
mov
sbb
sbb
pop
mov
jae
fcmovnbe
pop
arpl
cmpsl
xor
aad
pop
lods
call
in
or
mov
sbb
movsb
push
sahf
cmc
jbe
cmc
jge
push
icebp
mov
popf
ss
out
dec
ljmp
gs
adc
cwtl
cmp
out
push
bound
fs
mov
rcrb
lret
cld
push
cwtl
pop
rorl
clc
in
mov
int
or
mov
sarl
jle
test
inc
push
mov
inc
inc
imul
icebp
lret
test
mov
jns
jecxz
pushf
mov
outsl
lock
inc
mov
lock
jecxz
cmp
cs
pop
cwtl
lds
push
call
mov
hlt
dec
cld
call
and
jge
adc
jnp
and
jp
xlat
popa
jl
xchg
or
adc
mov
sub
mov
out
test
jecxz
sbb
and
cmp
sti
or
sbbb
cmp
mov
es
and
sbb
cltd
and
pop
mov
xor
insl
into
push
mov
dec
int
jmp
xor
lcall
cli
aas
lds
pusha
rorb
aaa
movsl
mov
dec
je
clc
cmp
gs
repnz
and
mov
sbb
xor
jle
xorb
inc
popf
test
mov
mov
movb
or
pcmpgtb
in
jo
sub
pop
pop
add
jnp
sub
loop
test
add
adc
popf
fs
xchg
in
inc
ljmp
in
mov
xlat
in
into
jo
jbe
jae
int
jo,pt
jns
adc
sub
fxch
nop
or
insl
insb
pop
bound
clc
into
dec
pusha
sbb
pop
aam
pshufw
push
adc
and
xchg
insl
sarl
out
cmp
imul
nop
cltd
mov
mov
scas
aad
call
jo
adc
lock
int
dec
mov
or
pop
or
mov
inc
cmp
ja
mov
loopne
sti
dec
scas
bound
movsl
int
mov
mov
aaa
test
test
call
xor
jmp
xchg
int
mov
daa
jne
mov
dec
mov
sbbb
mov
cmp
mov
hlt
rorb
mov
pop
repz
lret
das
mov
fmuls
data16
push
mov
stos
int3
insl
xor
add
push
and
sti
mov
mov
std
fldcw
cmp
xchg
lahf
sar
push
or
data16
imul
add
jnp
pop
mov
scas
pop
lahf
mov
cltd
sbb
push
repnz
mov
lret
pop
add
push
out
clc
movsl
mov
daa
imul
pop
cs
push
jo
pushf
jle
leave
daa
xchg
push
insb
insl
test
mov
cmc
cmpsb
in
cld
imul
outsb
fnstenv
push
pusha
lods
je
fwait
pop
add
stc
movsb
pop
mov
sbb
jo
clc
stos
adc
gs
push
sarb
add
add
ficoml
mov
xchg
dec
push
push
sub
jae
subb
and
lret
jmp
lock
push
jo
mov
xchg
mov
pop
pushf
jo
into
cmp
lds
push
cmp
jbe
adc
ja
sub
xchg
add
and
xor
dec
repz
sub
nop
adc
add
mov
out
lods
jb
jo
sbb
inc
ja
add
out
shrb
xchg
out
xor
pop
and
jg
lret
sub
jp
jecxz
inc
adc
xchg
jge
std
jmp
rorl
jo
xchg
mov
sti
jo
xchg
bound
xchg
cli
add
outsb
xchg
mov
mov
jg
jns
shrl
test
add
je
jo
shll
dec
fcompl
add
repnz
push
movsl
icebp
imul
mov
jo
fisubl
andb
jl
sub
inc
sub
sbb
bound
shll
or
dec
insl
xchg
lcall
push
jo
dec
mov
das
lods
mov
popf
ja
ret
das
jp
jo
jg
fcmovbe
sbb
jo
outsl
lret
xchg
lahf
scas
icebp
insb
jo
roll
jne
leave
jo
push
fsubrs
add
jae
inc
movsl
aad
xchg
fidivrl
sbb
cmpsl
mov
fdivl
clc
dec
nop
shrl
cltd
jo
push
roll
mov
jo
sub
data16
pusha
loopne
jo
incl
lret
push
cmp
jo
lock
mov
push
xorl
jmpw
mov
out
mov
sub
pop
inc
out
cmovbe
xchg
fs
or
sbb
or
jo
push
aaa
inc
sbb
jo
lds
cltd
jo
or
mov
fwait
in
xchg
shll
hlt
addb
cld
mov
jns
fdivs
mov
dec
ja
mov
hlt
in
add
and
jp
popa
push
ljmp
enter
loope
and
ret
daa
push
mov
bnd
adc
pop
add
ja
adc
and
enter
xchg
test
movsb
adc
mov
jnp
repnz
les
jne
add
sbb
inc
mov
push
insl
out
dec
adcl
jo
ja
std
pop
sbb
jo
nop
xor
jo
imul
jle,pn
xorl
push
test
cwtl
mov
mov
add
rcl
adc
inc
enter
je
sub
mov
dec
sbb
scas
and
push
sar
jp
mov
pop
outsb
movsb
cmp
push
sbb
dec
inc
insl
cmp
shrb
push
mov
pop
imul
inc
ss
insl
adc
dec
add
clc
insl
mov
dec
or
and
xorl
in
int3
testl
ja
push
mov
cld
lret
jo
mov
adc
divb
xorb
aam
and
je
mov
add
rorl
mov
outsl
push
lret
stc
test
push
or
jne
jno
add
outsb
cmp
sbb
cmp
jl
add
xchg
inc
popf
inc
xlat
dec
shrl
cs
dec
fldenv
mov
add
ret
cld
cmp
sub
or
lods
test
xor
cmp
test
fisttps
jecxz
mov
ret
dec
ja
cli
icebp
sbb
and
push
jmp
pusha
adc
push
sub
xchg
push
fsubrl
xchg
in
jl
jo
cmp
mov
loopne
push
add
xor
aas
std
rcl
cmpsl
push
jo
sub
mov
pop
test
sbb
test
adc
lahf
int
or
jae
push
cwtl
jno
xor
aaa
enter
rol
sub
mov
jae
dec
test
jo
sub
popf
mov
xchg
repnz
sub
sahf
or
clc
jnp
jo
cmc
std
ret
pmulhuw
and
loope
arpl
dec
inc
jo
clc
out
pop
sbb
into
es
jne
xchg
sub
sub
pop
or
leave
push
jo
bound
repz
xchg
push
icebp
jo
inc
inc
cli
pop
adc
push
bound
mov
cmp
mov
movsb
or
aam
lods
cltd
ret
imul
inc
mov
xlat
or
ja
adc
inc
sbb
mov
aam
inc
add
push
dec
dec
jnp
push
loop
pop
jo
les
test
shr
daa
cltd
adc
pop
cmp
cld
lret
dec
aas
lcall
xor
inc
xor
push
push
add
decl
jo
jecxz
scas
pop
jo
enter
fmuls
addr16
ljmp
jo
xchg
mov
fmuls
lea
cmp
aad
mov
jo
fcoml
and
stc
jp
ja
shrb
and
or
out
dec
lods
aas
in
push
out
pop
jne
pop
int
sub
jp
addr16
mov
sbb
shlb
push
std
inc
ret
and
mov
inc
test
cmp
das
dec
inc
inc
ret
call
sbb
adcb
jo
shl
mov
mov
clc
jbe
fimull
xor
or
cmpsb
jecxz
sbb
lea
sbb
and
dec
jbe
outsb
mov
jp
mov
cmp
je
mov
mov
adc
mov
mov
ja
rolb
mov
jmp
shll
test
in
jmp
adc
je
push
mov
fsubrl
adc
jp
into
push
mov
jo
cmpsb
loopne
xor
xchg
mov
aaa
rolb
scas
or
lret
rclb
jo
cmpsl
roll
aad
lock
jo
in
pop
sub
jo
or
jo
inc
in
mov
jo
xor
xchg
lret
sub
sub
arpl
xor
inc
jo
and
push
push
or
dec
inc
dec
arpl
mov
jno
cmp
ficoms
fnstenv
adc
mov
insl
stos
push
cmpsb
and
push
fs
cwtl
push
bnd
mov
std
jo
push
fdivl
adc
jo
push
loop
pop
mov
mov
dec
cmp
jo
aam
test
inc
pushf
leave
jae
mov
shrb
in
jo
ret
mov
adc
pop
xor
sub
sarb
pop
imul
ja
sub
insl
adc
pop
adc
sub
xlat
cmp
or
pop
mov
sub
xchg
jl
shll
xor
mov
out
outsl
jne
pop
fsubs
ret
cmp
xor
jecxz
shlb
cmp
cmp
pop
imull
jo
bound
xchg
arpl
jno
jo
ljmp
fsubrs
push
lock
mov
jp
adc
sub
and
jo
add
and
adc
repz
xchg
test
mov
push
sahf
das
add
cmp
mov
inc
mov
cmpsl
popa
mov
test
dec
fcomps
int3
and
dec
jo
and
and
mov
call
mov
or
mov
push
insl
test
flds
out
arpl
mov
dec
scas
daa
popa
jnp
push
call
insb
mov
test
inc
adc
nop
sti
jo
push
or
sub
pop
loope
iret
xchg
push
sarl
es
cmpsl
popf
ret
mov
xor
addl
mov
push
lock
jo
mov
fs
jo
rcrb
adc
jecxz
jne
scas
sbb
jo
adc
mov
jo
push
out
mul
out
add
pop
push
ja
ret
push
xor
lahf
pop
jbe
xchg
fdivl
xchg
leave
lret
push
cmp
imul
in
push
xor
ja
push
or
xorl
xor
stos
cli
jo
jno
imul
and
add
sahf
pop
pop
cmpsb
jo
mov
ds
pop
imul
and
jns
push
mov
push
pop
cmp
sbb
add
repnz
jo
daa
dec
imul
or
clc
xchg
pop
cmp
aas
pop
sarb
pop
xchg
mov
cmp
fidivl
adc
sub
inc
insl
mov
add
movsb
pop
bound
xor
push
or
in
xor
jl
adc
insl
outsl
push
sti
add
xor
sub
mov
lahf
adc
mov
pusha
int3
adc
mov
sub
push
jo
xchg
add
or
mov
xchg
mov
gs
lock
sub
xchg
mov
xchg
pop
jle
aas
jnp
int3
inc
mov
mov
xor
and
popf
push
stos
dec
add
insb
int3
gs
lahf
lods
loope
jo
mov
push
jge
out
inc
outsb
scas
lock
outsl
or
mov
add
mov
sub
mov
inc
pushf
cmc
inc
adc
or
in
sub
dec
or
cmp
push
pop
fcomps
sbbb
sub
sbb
lret
idivl
adc
hlt
fdivl
jne
mov
mov
in
xor
jl
xchg
fcmovnu
mov
pop
xor
lods
std
xor
jg
sub
popa
es
mov
call
out
mov
pop
pop
add
push
das
fwait
sub
cmc
xor
dec
pop
js
repz
insb
icebp
outsl
push
sbb
insb
mov
inc
and
fisubs
fwait
lea
mov
pop
in
jge
ret
lods
push
icebp
lods
jle,pn
iret
stc
lods
sub
in
sub
shrb
aam
call
mov
push
and
jl
sahf
shr
aam
mov
aad
jne
enter
test
nop
cs
push
cwtl
pop
sbb
mov
dec
test
fwait
in
push
mov
lret
hlt
adc
xchg
mov
jmp
inc
and
xchg
push
jno
adc
je
jmp
nop
push
scas
into
adc
jge
mov
push
pop
fnsave
scas
aad
jns
xor
hlt
movsb
cmp
jmp
lods
sbb
ds
push
subb
insl
push
sbb
lcall
adc
cwtl
mov
psllq
adc
xor
cli
bound
xor
out
mov
in
adc
xlat
mov
pop
sub
adc
sbb
xchg
xor
movsl
xchg
cmc
mov
jno
cmp
jmp
int3
xor
test
cmc
mov
into
xlat
movsl
or
sub
jnp
lock
mov
mov
dec
fwait
sahf
dec
scas
and
lret
inc
cmpsl
bound
push
jne
fstl
mov
sahf
cmp
pushl
sbbb
in
cmp
inc
js
pop
sarl
subl
pop
add
xor
ja
test
lods
sub
mov
popf
jne
rorb
xchg
jnp
popa
insl
jle
lret
dec
repnz
push
pop
lret
cwtl
pop
pop
lods
in
lods
ja
addb
jns
xor
add
lds
push
sbb
cmpsl
jl
cwtl
jp
hlt
aam
in
scas
mov
je
es
icebp
or
jle
test
mov
lds
cmp
mov
cld
clc
cmpsl
mov
cmc
enter
pop
fucomip
ss
aas
mov
push
lea
mov
mov
mov
stc
scas
out
xor
inc
push
cld
aam
cmp
ret
inc
in
in
fs
jecxz
pop
lret
ds
popf
mov
pusha
and
ja
push
inc
outsb
cmp
enter
and
add
mov
daa
cmp
aam
dec
es
add
mov
ja
movsb
jg
push
cmpsl
andl
jo
mov
xchg
dec
jp
ja
pop
adc
int3
cs
jo
xlat
mov
mov
or
fdivs
adc
repz
jo
xchg
ret
and
je
jo
out
mov
inc
jo
andl
jae
fstpt
clc
push
enter
mov
add
scas
das
orb
push
or
nop
jo
stc
dec
inc
je
fadds
sbb
fildll
pop
xor
sub
pop
lcall
icebp
dec
xchg
pop
testb
jo
jno
mov
movsb
rcr
ja
add
lret
jo
xchg
cmp
stos
push
test
xor
in
enter
lock
jl
dec
sub
mov
mov
push
mov
jle
jmp
shl
and
add
xchg
fstpl
es
mov
test
sub
fidivrs
mov
in
jmp
leave
push
sahf
movb
cmovns
jmp
pop
lahf
push
push
jl
fs
mov
fdivr
pop
jo
xchg
dec
jo
xor
sbb
mov
add
adc
clc
out
pop
jo
push
push
and
sbb
aas
stc
sub
in
jo
cmp
sar
mov
xchg
pop
insb
mov
loop
imul
movsb
mov
insl
into
xor
mov
sti
sahf
nop
add
mov
jo
xlat
push
les
add
arpl
mov
imul
aad
lahf
push
mov
and
lods
sti
add
pushf
jo
xchg
push
adc
jo
pop
jmp
lods
jo
or
xchg
add
inc
nop
into
cld
cmp
sub
adc
adc
test
into
xor
movsb
jo
cli
repz
xchg
jo,pt
push
shl
retw
jo
xor
adc
or
jo
pop
jne
cli
sti
mov
or
movb
scas
lods
jo
int
insb
push
sbb
pop
jo
and
and
cmp
scas
dec
pop
dec
mov
or
xchg
sahf
out
sbb
dec
mov
jl
pop
jle
pop
scas
jo
ds
and
out
jns
lcall
shl
loopne
mov
xlat
add
xor
and
gs
icebp
mov
sbb
add
push
in
outsl
popa
repz
jne
mov
mov
xchg
pushf
jo
xchg
pop
inc
inc
push
xchg
aad
lds
jo
test
xchg
mov
dec
jl
mov
into
pop
ja
mov
imul
cmpsl
std
jnp
xorl
push
jo
int
pop
jg
xor
dec
and
and
or
or
jne
mov
xor
icebp
sub
cwtl
mov
add
into
xor
sub
ja
ljmp
jne
jo
gs
xchg
or
xchg
inc
adc
jbe
dec
xorl
sub
rorb
push
dec
cmpw
jo
inc
pop
or
jo
cmp
lods
or
in
inc
sbb
cmpsb
popa
jo
inc
pop
loop
jmp
pusha
std
ret
jo
mov
pop
sbb
mov
test
jo
and
add
in
shlb
push
mov
pop
cltd
xlat
xor
mov
dec
fwait
int3
lock
in
cmpsl
pop
rorl
pop
jge
push
cmp
mov
xchg
cmp
push
dec
cmpsb
leave
and
adc
jecxz
das
and
pop
cwtl
ficompl
insl
stos
enter
push
es
mov
pop
mov
push
jo
inc
pushf
xchg
mov
dec
iret
lock
call
filds
push
lock
fidivrs
sbb
repnz
adc
push
or
mov
pop
sbb
daa
jae
dec
add
cs
jo
cmp
cmp
mov
imul
mov
call
sti
imul
pop
daa
xchg
xchg
ret
clc
pop
or
mov
add
add
arpl
push
xchg
sub
sbb
out
lock
mov
sub
mov
shll
cmp
dec
stos
rorb
fdivrs
rorl
imul
adc
pop
in
nop
push
insl
xchg
das
test
lds
ja
push
inc
push
pusha
or
in
arpl
xchg
mov
std
push
inc
int
push
pop
adc
shrb
sbb
decb
pop
loope
pop
jne
cmp
sti
dec
add
sub
out
jge
jo
and
fs
push
je
pop
imul
mov
pop
stos
mov
insl
aam
mov
xchg
mov
push
sti
jmp
mov
int3
movsl
mov
hlt
lahf
pop
jb
mov
jae
add
pushf
xorb
xor
rclb
add
aas
popa
sub
jno
pop
jae
or
aaa
mov
insl
jo
pop
addr16
mov
jae
aad
add
inc
clc
jle
addl
lods
ja
or
mov
fcmovnb
imul
and
jmp
clc
std
push
mov
mull
imul
insl
inc
push
push
dec
aad
jo
xor
outsb
arpl
insb
das
xlat
jbe
dec
jo
nop
xadd
movsb
pop
cmpb
addr16
movsl
fwait
jae
adc
push
mov
in
test
mov
ja
mov
or
insl
imul
sbb
mov
cmc
in
fisttps
loope
add
sbb
mov
cmp
push
stos
jg
inc
rcrb
adc
insb
xor
xor
inc
xchg
mov
movsb
ja,pn
vmovdqu
cmp
test
add
fbld
pop
aam
mov
and
and
mov
cmp
jo
xlat
jle
imul
insl
inc
in
dec
jecxz
cmpsl
mov
test
push
pop
cmpsb
and
mov
pop
mov
daa
xchg
cli
xlat
movsb
std
ja
pop
in
rorb
ja
push
popa
jae
xchg
jp
inc
cwtl
out
cmp
lcall
pop
push
push
cmp
outsl
sbb
and
js
mov
int3
sub
ljmp
xchg
jo
inc
cli
push
pushf
popf
inc
fildl
dec
addr16
stos
mov
jp
cmpsl
adc
jo
jg
int3
mov
stos
cs
dec
cmp
insl
lret
jp
mov
push
dec
movsb
xor
sbb
cmp
stos
lret
jne
dec
push
outsb
mov
mov
or
xlat
jae
into
test
insl
lds
gs
loopne
cmp
push
sbb
pop
add
lret
jo
scas
sub
les
add
sahf
cli
pop
divb
mov
nop
xor
push
xchg
dec
loopne
xlat
mov
mov
mov
xor
inc
sbb
sub
mov
sub
in
mov
mov
or
aas
fs
pop
push
cmpsl
jo
cld
inc
xchg
sub
movsb
addr16
jo
jecxz
xchg
sbb
push
div
mov
push
arpl
add
ucomiss
xor
jg
movsl
cmpsl
jnp
cltd
rcrb
icebp
dec
loope
cli
xchg
ficoml
push
lods
lock
shl
xor
das
jo
add
pop
jo
aad
int3
outsl
sub
jecxz
out
insb
sbb
or
jne
out
lret
int3
jae
mov
sbb
jp
dec
mov
adc
je
shr
mov
add
pop
mov
or
add
xchg
jo
mov
push
std
adc
push
lea
je
xor
jo
push
std
pop
pop
mov
and
xchg
jmp
jns
dec
dec
xor
mov
xchg
in
jo
lahf
es
or
jo
dec
aam
add
rorb
jae
push
mov
scas
xchg
pop
xchg
mov
hlt
jo
jle
movsb
pop
loop
sub
adc
outsl
sbb
inc
and
subl
jle,pn
mov
pushf
test
hlt
sti
insb
and
hlt
cwtl
int3
fistl
dec
fimuls
xchg
jle
push
mov
sub
push
cli
aas
cmpsl
push
in
pop
in
stc
jl
or
inc
lahf
xchg
sub
xchg
dec
xor
sbb
fildl
and
arpl
insb
bound
xchg
outsb
jo
jle
stos
xor
adc
jmp
jecxz
and
cli
out
cmp
cltd
adc
adc
lret
iret
mov
outsb
sub
fdivrs
scas
pop
bound
fs
in
andb
clc
lret
dec
mov
mov
mov
fmuls
sti
push
add
dec
pop
sub
scas
ret
xor
push
xchg
mov
or
daa
out
bound
lds
pop
shlb
lret
ja
xor
or
shlb
movb
cmp
loope
jg
fcmovnbe
and
mov
xchg
jle
mov
loopne
iret
sub
imul
dec
fcomp
pop
aas
mov
inc
sti
and
jo
adc
sbb
fnstsw
out
or
and
lret
stos
popf
xlat
add
out
shlb
jnp
and
dec
mov
mov
ficomps
adc
add
in
dec
lods
sbb
sub
mov
inc
add
jb
pop
repz
cmc
pop
mov
scas
jle
pop
testl
cmp
repz
jl
cwtl
mov
jbe
cltd
es
and
insb
cld
push
mov
lcall
imull
in
clc
adc
jecxz
iret
jge
jo
stc
inc
sub
pop
les
push
sub
and
mov
push
mov
sub
outsb
ficompl
xor
loope
cmc
and
mov
shr
mov
jne
daa
and
into
and
push
cmp
in
pushf
out
pop
or
or
out
data16
repnz
addb
cmp
adc
stos
stc
add
addr16
insl
pop
xchg
mov
xchg
subb
cmp
dec
sbb
jp
adcb
fcmovnbe
or
test
jp
iret
mov
imul
outsl
aam
push
mov
pop
adc
mov
faddl
xorb
dec
or
insl
nop
dec
push
enter
leave
clc
arpl
xor
imul
pop
cwtl
mov
xchg
inc
lods
out
js
sub
cmc
andb
pop
popf
mov
or
xchg
inc
aaa
xor
jmp
mov
sysret
int3
aas
cmc
add
mov
dec
sti
fs
or
js
hlt
icebp
outsl
jmp
mov
sbbb
repnz
adc
dec
jo
stc
fs
gs
pop
movb
enter
add
addr16
mov
fimuls
arpl
mov
push
sub
adc
sbbb
inc
shlb
push
cmp
adc
lods
and
xor
ss
in
mov
insb
jo
je
andl
movsb
lock
xchg
xchg
jno
pop
loop
out
jnp
and
inc
mov
sub
notl
rcll
out
add
mov
sub
xchg
adc
fcoms
mov
lahf
cmpsl
xchg
fadd
in
loopne
push
fs
lret
mov
outsb
sub
rolb
mov
push
mov
aas
sbb
stc
fldenv
cmp
ss
pop
pop
dec
rclb
push
xchg
into
lods
inc
arpl
insl
and
outsl
dec
xchg
dec
or
or
push
cltd
inc
inc
jp
jo
subl
aam
loopne
push
cmp
dec
or
loop
nop
fdivl
sub
jo
movsl
fadds
jo
cmpsb
hlt
clc
data16
adc
imul
and
cmpsb
lea
fwait
out
xchg
fisubrs
in
push
inc
shl
xchg
bnd
addr16
mov
jo
lods
movsl
jp
out
test
mov
iret
mov
inc
aaa
into
xor
sbb
in
push
mov
jno
add
loopne
inc
or
jo
push
pop
fiaddl
rorb
pop
mov
data16
lock
or
jae
pusha
pop
pop
out
xlat
xchg
or
jg
test
mov
scas
pop
jo
push
or
dec
inc
mov
xchg
fidivl
bound
adc
or
ja
jecxz
add
inc
and
jo
push
data16
sahf
fsubrs
addr16
mov
mov
mov
mov
jo
fisttpl
pop
adc
cmc
inc
inc
mov
or
mov
movsl
mov
in
cmp
adc
or
mov
jb
or
cli
mov
jecxz
mov
cmp
cmpsl
add
icebp
ret
loope
cld
xchg
aad
rorb
pop
lcall
inc
loopne
jo
xchg
stos
popf
movsl
fidivrs
imul
jmp
or
lcall
lods
inc
dec
or
fsubrl
les
jns
mov
stc
mov
aad
jo
rolb
dec
and
add
jb
xchg
stc
aaa
sbb
dec
insl
fsubrp
jns
or
fwait
adc
dec
sahf
jo
bound
mov
dec
loope
mov
scas
sub
stc
jo
in
push
clc
or
jno
imulb
jl
pop
cli
xor
jo
or
add
or
fsts
in
xor
pushf
jo
jmp
dec
jo
js
cmp
leave
xchg
pop
movsl
rorb
repz
shrl
jo
rclb
pop
or
pop
jo
xor
adc
xchg
dec
or
lods
stos
lock
imul
test
lret
sti
in
inc
xor
movsb
jo
xor
pop
es
lock
les
sbb
jo
lea
inc
aam
fnsave
push
xlat
imul
xor
mov
xor
das
repz
dec
xor
ljmp
mov
adc
sub
inc
out
jae
jnp
out
shlb
and
add
jo
iret
push
xchg
xor
clc
outsb
lock
out
mov
cmp
out
test
icebp
xor
ljmp
jo
div
imul
pop
jo
popf
shrl
imul
sub
mov
lret
jo
sub
push
aaa
inc
jg
fcmovbe
popl
pop
or
mov
jp,pt
je
inc
mov
mov
insl
fwait
fs
pop
pop
xor
mov
cmp
xchg
mov
fmulp
dec
jge
fdivr
aad
or
push
dec
push
jo
decb
xor
in
test
sbb
xor
cmp
mov
outsl
pop
jmp
lods
out
nop
test
jl
mov
jo
popa
cmpsl
dec
dec
je
cmc
xor
xchg
icebp
push
ja
jae
andl
insl
bound
and
or
pop
ja
rclb
lret
das
jne
jno
adc
add
test
jo
ret
cli
push
add
mov
jo
and
cmc
push
push
outsb
loopne
pop
mov
mov
insl
sahf
sbb
pop
inc
xchg
adc
cwtl
jbe
icebp
ja
add
mov
sbb
jae
xor
pop
xchg
fsub
mov
jo
pusha
insb
subl
stos
or
aam
mov
mov
shl
lods
fidivl
push
mov
xchg
xchg
addr16
sub
jo
cmp
mov
test
insl
fs
sbb
fidivs
xchg
jno
scas
pop
js
or
mov
xchg
stos
rclb
jle
iret
jo
fs
mov
jo
mov
int3
out
and
movsb
pusha
rcrl
xor
outsb
adc
mov
pop
or
cmpsb
out
call
cli
or
pop
adc
not
lcall
imul
call
aas
or
lods
add
fisttpll
inc
jg
or
pop
and
mov
dec
dec
lret
push
inc
pushf
adc
notb
adc
xor
arpl
sbb
push
jp
scas
test
lds
push
push
jo
adc
jno
ds
xor
push
mov
inc
push
jbe
fdivl
mov
mov
je
cli
popa
mov
inc
cltd
xorl
jne
xor
shl
add
jo
nop
iret
push
jg
cltd
jp
mov
fs
jo
cmp
adc
mov
ds
lret
jo
and
add
jo
sbb
jg
or
pop
jo
fisttpl
add
ss
addr16
mov
mov
cmp
fs
shlb
insl
dec
cmpsb
ja
out
dec
inc
imul
scas
cmp
jo
jge
pop
or
outsb
push
mov
jo
aaa
mov
dec
popf
arpl
push
push
push
adc
mov
repnz
jo
adc
lock
les
repz
and
add
insl
ficoms
jno
add
xchg
push
int3
xchg
cmc
jo
jge
sbb
and
sti
insl
es
inc
adc
mov
add
out
gs
xor
adc
push
cli
mov
jbe
insl
ds
mov
xchg
iret
xor
not
sub
push
test
xor
insl
imul
fs
jle
shrb
adc
fmull
mov
insl
and
je
adc
out
sub
loopne
insb
jb
shl
mov
ja
jmp
clc
mov
jo
jmp
fcmovnu
jo
out
jge
ret
cs
jp
jle
bound
lock
jnp
or
mov
cwtl
pushf
leave
jp
sub
xor
xor
or
pop
mov
call
sub
imul
jg
pop
jle
inc
jbe
shrb
xor
int
out
mov
ja
int3
dec
sar
add
lds
out
mov
fidivrs
fistps
sbb
aaa
fs
mov
in
inc
jne
call
fadds
jbe
ret
scas
insl
nop
xchg
push
add
insl
fucom
adc
sbb
movsb
orl
movsb
push
pop
jo
ret
sub
dec
cmp
lock
iret
outsb
stos
sub
out
and
cmpb
das
mov
mov
jns
pop
cmp
into
pop
or
out
fildl
in
aas
push
je
adc
jbe
cmp
cmpsb
jo
pop
sbb
lcall
mov
pop
frstor
out
and
jecxz
imul
mov
cmc
xchg
cld
rcrb
jo
inc
push
inc
fcmovne
xchg
out
add
xchg
lds
inc
or
sti
xlat
in
jo
dec
jb
or
pop
or
sarb
out
out
and
cld
insb
test
push
in
mov
outsb
jo
mov
dec
ljmp
mov
nop
adcb
fstpl
repz
insl
adc
mov
cmpsb
ja
data16
jge,pt
aad
sbb
add
aaa
dec
test
jecxz
int3
stc
icebp
jo
lods
out
je
leave
push
stos
jnp
sarb
pop
xlat
cmp
jo
pop
outsl
jecxz
jmp
adc
jg
loop
xchg
sti
jge
push
inc
add
sbb
jne
mov
xchg
sbb
int3
xchg
movsb
sub
add
xchg
cli
rolb
std
add
sub
push
lods
add
adc
inc
add
pop
mov
or
clc
shlb
xchg
xor
ljmp
adc
add
jo
jge
add
mov
daa
outsb
fidivrl
jnp
and
dec
mov
mov
cld
sbb
cmp
lock
pop
inc
add
push
pop
subb
xor
aaa
mov
dec
ret
int
mov
or
int3
aas
cmc
jo
in
sub
fiaddl
push
fwait
xchg
test
movsb
xor
mov
jo
mov
xchg
jo
push
cltd
mov
jo
jg
clc
sarb
mov
inc
push
push
aad
jo
sahf
mov
bound
jo
in
das
mov
lods
lea
jbe
xlat
push
data16
or
sbb
aam
outsb
jns
inc
in
pop
fimull
push
mov
cmp
or
es
dec
or
sub
add
pusha
sub
lock
dec
jl
nop
mov
pop
je
push
sarb
pop
je
out
ds
cs
in
enter
daa
mov
scas
pop
pop
xor
lock
shlb
dec
repnz
mov
lret
sub
or
inc
push
cwtl
mov
add
push
stos
push
in
jg
and
addr16
arpl
lret
dec
filds
sub
mov
movsb
pushf
mov
sub
sbb
fs
outsb
sub
mov
mov
inc
sbb
push
leave
push
icebp
stc
insb
icebp
push
inc
lods
fcmovb
and
mov
jo,pn
mov
fldt
pop
mov
jae
xchg
dec
push
pop
jbe
imul
xor
pop
sub
jae
out
jbe
dec
sti
mov
insl
inc
leave
popf
xor
mov
xchg
push
pop
mov
jne
mov
ljmp
cmp
scas
adc
xchg
test
cwtl
push
cmp
jmp
insb
mov
sub
cwtl
xor
leave
arpl
inc
mov
gs
mov
divb
lret
push
xor
jo
push
sti
jmp
es
mov
clc
jle
cmpsb
pop
cltd
xchg
ret
lcall
jno
mov
sub
orb
and
cld
cmp
push
icebp
cltd
pop
lret
cmp
mov
or
push
test
push
imul
xchg
jle
dec
or
fiadds
aas
enter
cwtl
lret
mov
clc
push
mov
sub
cmp
xchg
jnp
movsb
dec
inc
out
outsb
and
cltd
jmp
gs
test
iret
pop
loopne
jae
out
test
push
mov
cmpsl
jle
bound
imul
mov
mov
mov
mov
les
rclb
aas
dec
stos
jmp
mov
pop
leave
cmp
sub
ret
test
mov
mov
scas
xchg
add
adc
insl
insb
stc
repz
mov
sbb
je
inc
fistps
and
adc
or
sbb
repz
insl
sarl
mov
les
sti
sub
sahf
pop
cwtl
cld
dec
mov
std
pop
pop
in
cmpsl
lahf
cmc
mov
mov
addr16
test
mov
js
popa
push
cmp
push
lret
mov
pusha
insl
stc
pop
loope
xor
outsb
fwait
adc
or
out
jnp
fiadds
stc
je
sbb
cmpsb
in
shlb
pminub
jne
mov
out
ret
dec
push
cmp
lods
es
in
mov
mov
insb
xor
scas
scas
pop
mov
andb
call
mov
scas
cli
ds
jns
out
outsl
mov
mov
cmpsb
sarl
addr16
cmc
mov
ss
jno
cwtl
adc
shr
lock
adc
in
sbb
loopne
jp
push
mov
push
mov
mov
out
mov
dec
mov
xchg
jmp
imul
add
push
test
cwtl
xchg
imul
and
xor
shr
ret
pop
cmp
adc
or
rcr
popa
adc
insl
jnp
das
jg
test
dec
and
jo
jne
cs
xchg
iret
push
jo
cld
jno
sbb
bound
mov
mov
jo
jl
mov
mov
fcompl
and
loopne
shr
sahf
pop
push
std
dec
add
cmp
and
inc
aas
es
jo
mov
cmp
movsb
pop
cmp
iret
push
mov
inc
jns
test
xor
add
mov
adc
mov
movsb
xor
dec
and
fsubs
call
lock
or
or
sbb
add
movsl
enter
jo
add
and
inc
jbe
jo
add
out
sub
dec
push
outsl
mov
fstps
jo
ja
sub
xchg
enter
lret
inc
add
inc
jecxz
cmp
cwtl
lds
lahf
stos
jle
pusha
dec
adc
loopne
pop
sbb
jo
or
insl
jo
push
icebp
xchg
outsl
dec
sbb
pop
das
dec
sub
filds
into
sti
pusha
jl
jecxz
jg
xor
pop
push
in
iret
testb
call
jo
das
out
mov
int
and
mov
cmc
xchg
add
popf
mov
xor
jo
or
jo
lcall
rorb
pop
adc
cld
push
jecxz
mov
or
dec
dec
in
mov
jae
mov
inc
les
mov
out
xor
adc
jmp
lods
int3
addl
pop
inc
js
fistl
insb
jecxz
mov
mov
or
or
mov
and
xor
mov
push
orb
jo
xor
pop
jbe
mov
mov
lcall
repz
mov
mov
sbb
adc
and
fildll
cwtl
sub
mov
imul
stc
lret
jle
mov
insb
call
dec
pop
mov
add
jo
mov
jo
push
adc
jle
int3
decl
insl
add
gs
adc
mov
jp
cltd
cmp
outsl
add
jae
sub
fisubs
xchg
jb
and
es
jo
lods
adc
test
sbb
sbb
xor
cmp
aam
imul
aam
mov
test
jo,pt
bound
pushf
andl
dec
aad
mov
insb
jb
rcl
fcompl
mov
gs
ja,pn
je
jo
mov
arpl
iret
lcall
fnstenv
xchg
fcoms
in
ret
sub
test
adc
add
push
ja
scas
adc
push
stos
or
js
pop
dec
jle
jo
orb
jo
xchg
sahf
dec
inc
fwait
inc
xchg
or
jo
mov
gs
adc
mov
sub
mov
out
mov
dec
repz
dec
ja
int3
jo
jmp
xchg
mov
test
nop
lds
pop
enter
out
data16
jb
cltd
outsb
test
lea
in
inc
adc
sti
mov
rcrb
or
pop
lock
insb
mov
ja
cld
fnstenv
cmpsb
aad
nop
icebp
push
jae
xchg
sub
repnz
jo
fcmovne
and
imul
sbb
jo
cmp
sbb
test
add
push
mov
jp
pop
xchg
aad
fwait
mov
mov
dec
mov
shl
bound
std
mov
inc
add
iret
popf
lods
rcrb
sarb
push
mov
stos
test
push
fildll
insb
fwait
insl
bound
cmovbe
sub
pop
pop
mov
sub
jo
pusha
and
fsubl
adc
jno
int3
jnp
adc
add
jo
hlt
pop
icebp
dec
mov
es
int
movsb
out
push
dec
inc
xchg
mull
push
inc
fnsave
jo
dec
rcrb
cli
movsl
and
jo
push
pop
mov
mov
and
lahf
mov
mov
test
jo
adc
outsb
cmpsl
int
sub
mov
push
call
scas
outsl
fs
inc
push
or
mov
insl
lret
sbbl
test
mov
jmp
add
or
fwait
sti
xchg
in
mov
dec
mov
sbb
in
fdivl
shrb
mov
jge
pop
jl
stos
push
loopne
inc
sbb
and
xor
inc
pop
pop
dec
push
arpl
sub
jp
hlt
movsb
repnz
jo
test
adc
push
push
jmp
xor
in
mov
lods
cwtl
jl
pop
add
lahf
scas
js
data16
jb
add
dec
incl
ret
sbb
ja
lahf
push
adc
push
jno
mov
mov
sub
adc
inc
mov
shlb
popa
push
insl
mov
inc
mov
cmpsb
int3
push
sbb
xchg
dec
arpl
jae
cmp
jne
cmp
fdivl
movsb
pusha
cli
add
jo
push
mov
xorl
into
movsb
sub
ret
jmp
inc
inc
cmc
lods
aaa
jo
into
add
scas
or
xorl
test
inc
dec
ss
ja
cltd
stos
mov
or
pop
lods
push
test
imul
cmp
push
je
popa
sbb
dec
inc
mov
sahf
mov
jo
adc
sub
dec
nop
jo
loope
rclb
jae
int3
and
les
aaa
or
jo,pn
adc
and
cmp
push
xchg
in
mov
sub
movsb
jo
mov
pop
nop
mov
negb
push
push
cmc
cmp
sub
outsl
pop
and
pop
dec
aam
aas
jo
out
mov
mov
lret
xor
or
insl
jg
mov
test
mov
mov
inc
iret
xor
nop
in
stos
xchg
in
pop
push
cmp
imul
fldcw
jne
and
inc
push
sbb
sbb
in
jo
gs
loopne
jo
xor
int3
pop
or
call
pop
in
cltd
cmp
cmpsl
mov
cmp
mov
dec
xor
jo
mov
loop
jo
into
imul
ja
add
mov
cmp
sbb
into
jp
cltd
xchg
push
jno
xor
int
jle
jo
in
add
fcompl
jo
pop
dec
out
test
jbe
int3
enter
jnp,pn
jae
out
mov
popa
mov
imul
mov
dec
push
repz
add
shlb
pusha
pop
ret
insl
fbstp
int3
sbb
sbb
movsb
call
mov
jbe
clc
jl
jge
sbb
imul
dec
ja
fdiv
bound
push
cmp
je
push
and
mov
sbb
imul
add
call
pushf
jo
stos
dec
loopne
xchg
call
dec
or
dec
jo
lret
insb
gs
pop
dec
inc
orb
fdivrs
stos
push
push
mov
dec
or
jb
and
leave
xchg
dec
push
rol
jp
out
xchg
mov
lds
js
movsl
sti
out
adc
outsb
cmp
xchg
xor
inc
fbld
shll
arpl
shlb
jo
cmp
xchg
adc
cmpl
data16
rorb
fucomi
test
cmp
jecxz
daa
jle
ror
dec
scas
mov
sbb
add
addl
repz
pop
mov
cli
jbe
jae
or
jnp
nop
sub
movsb
popf
negb
jmp
int
jo
pop
in
mov
cmpsb
inc
out
sub
imul
fdivl
lds
pop
rcrb
push
movsb
push
xor
push
mov
mov
jmp
sub
jae
incl
mov
mov
adc
inc
lock
sub
insl
and
gs
xchg
jo
xchg
and
fidivrl
pop
cwtl
sbb
or
stos
cld
xor
scas
out
outsl
pusha
cmp
push
ret
std
insl
jo
push
fwait
xor
imul
jo
bound
inc
and
jo
mov
scas
jo
pop
jns
sub
in
loope
dec
fldcw
xchg
outsl
mov
mov
stos
ret
out
jge
push
sub
cmp
mov
sti
fldenv
ss
xchg
xchg
sbb
push
adc
dec
mov
xor
repz
cmp
or
push
push
mov
rcrb
cmpsb
push
je
dec
push
mov
and
push
jne
cmp
lock
lock
add
leave
mov
cmp
popa
xchg
inc
jle
dec
in
sbb
enter
lret
popl
xor
pop
xchg
cmp
ficompl
repnz
incb
fdivs
je
es
push
cmp
rclb
push
cwtl
pop
pusha
cmpsl
ljmp
daa
scas
inc
xor
orl
ljmp
jno
sti
scas
pop
cmp
or
cmp
and
iret
pop
stos
insb
mov
movb
or
repnz
jb
mov
shl
outsb
lods
sahf
sbbl
loope
scas
cld
mov
add
testb
insb
les
call
in
jns
or
cld
cmp
jae
sbb
stc
fsub
testb
jne
lahf
and
push
stos
notl
pop
ljmp
lock
sti
add
adc
sarb
add
lret
cwtl
mov
pusha
sub
jp
ja
es
jno
movsl
and
jmp
add
aad
enter
fisubs
je
hlt
push
out
jg
lods
mov
dec
hlt
mov
jo
pop
cmp
sti
addr16
nop
or
lar
ja
mov
imul
push
xor
mov
call
popf
lea
cld
insb
in
add
mov
das
rorl
lods
popa
mov
push
andl
xchg
cwtl
sar
lret
xchg
jae
leave
negb
inc
xchg
or
fwait
pop
sbb
push
push
daa
and
add
or
scas
mov
jno
mov
cmp
jbe
and
xor
jmp
nop
xchg
notb
xchg
ftst
mov
int
push
add
xor
call
insl
push
cmp
rclb
adc
cmc
pushf
mov
xchg
into
std
jne
mov
stos
mov
scas
mov
insb
out
and
out
and
mov
popf
sub
insb
sbb
jnp
xchg
pop
mov
push
dec
or
cltd
loope
test
rorb
jp
or
pusha
icebp
out
outsb
cs
in
push
and
fiadds
pop
arpl
fdivr
fs
shll
es
mov
jle
cmp
fs
insb
scas
xchg
pop
pop
sti
pop
mov
hlt
push
rcl
sub
jo
stc
lret
repnz
movsb
lock
pop
dec
imul
mov
and
js
je
imul
sbb
xor
lods
cmp
sub
push
outsb
push
cwtl
mov
inc
sub
cmc
pushf
xchg
fistpl
dec
cmp
add
cmp
lret
sub
cmp
cld
in
mov
ficomps
xchg
iret
push
imul
int
sbb
lret
fstpl
lods
push
js
mov
clc
pop
fnstcw
xchg
mov
mov
cmpsb
ret
add
mov
sbb
mov
sbb
scas
xchg
sbb
pop
outsl
pop
mov
hlt
xor
jb
lods
rclb
lea
mov
cmpsb
outsl
xor
push
xor
out
fimuls
testb
and
inc
dec
pop
cld
or
scas
movsb
imul
or
inc
in
orl
mov
test
pop
outsb
inc
mov
add
push
inc
and
fs
lods
rorb
jbe
mov
sahf
ficomps
push
xchg
add
adc
mov
adc
or
mov
xorl
cmp
daa
ds
jl
aad
dec
push
js
iret
xor
sbb
sbbl
lds
out
ljmp
mov
cmp
pusha
mov
sbb
mov
adc
dec
and
mov
xchg
cmpsb
mov
cmp
xchg
mov
mov
push
je
loope
dec
out
testb
and
data16
jae
adc
push
shrl
sbb
lods
or
cwtl
xchg
jo
inc
pop
xor
psubd
sbb
mov
cwtl
stos
jo
int
test
jge,pn
pop
mov
inc
fwait
pop
jg
pop
mov
sub
icebp
jb
imul
inc
or
stos
jo
cmpsl
test
cld
jo
fwait
cmp
fcom
cmc
jo
cmp
jle
test
mov
in
pop
mov
and
aaa
cs
pop
jmp
xor
xchg
pop
imul
shlb
push
jo
and
sbbb
stos
pop
add
sti
pushf
and
jp
mov
jo
mov
enter
pusha
les
jnp
xchg
stc
clc
mov
xor
pop
jae
mov
test
scas
or
and
xchg
aaa
push
sbb
shll
loop
repnz
sti
push
icebp
es
mov
pushf
fisttpl
cmp
jge
call
cmc
sub
lcall
push
jae
xchg
cmpsl
and
je
push
jg
insl
test
xorb
adc
push
jae
dec
sbb
push
pop
lret
jo
mov
adc
jo
push
icebp
adcb
dec
ja
xlat
xchg
cmp
mov
out
ret
fcomps
or
mov
jo
xor
mov
dec
fcomi
lock
push
loope
adc
cmp
scas
ret
dec
xchg
ret
xchg
xor
jo
sahf
or
or
jno
dec
sub
ja
or
dec
jne
push
adc
sahf
js
xchg
loop
jo
lret
shrl
jp
mov
jnp
adc
xor
loopne
mov
jo
push
in
xor
mov
pushf
xlat
xor
jno
inc
mov
xchg
mov
jo
pop
or
xchg
jp
cs
mov
mull
out
insl
xchg
jns
mov
xor
inc
pop
mov
dec
js
mov
loopne
dec
mov
xlat
ss
pushf
jo
lret
jg
repz
jae
mov
subb
pop
fsubrs
lods
je
or
ficompl
jo
jle
cmp
movl
aas
or
movsb
das
adc
pusha
mov
fmuls
out
add
gs
adc
sahf
mov
jo
dec
mov
mov
dec
xlat
push
push
fbstp
jno
loopne
or
test
ret
vhaddpd
movsl
lcall
inc
pop
adc
jo
pop
or
jo
dec
outsl
or
jae
inc
pop
int3
fwait
add
push
ja
dec
mov
out
jo
mov
dec
xchg
inc
jnp
mov
mov
sub
inc
jo
addb
jae
dec
mov
nop
out
jo
and
je
pop
xor
jnp
mov
pop
dec
jo
adc
push
jo
sub
and
aad
jo
cmc
adc
xor
jo
mov
roll
mov
xor
pushf
test
sub
sti
jae
inc
out
lret
subb
pusha
sub
aas
sub
mov
jns
in
xchg
pop
inc
mov
test
lods
imul
xor
add
push
addr16
fwait
jae
mov
imul
mov
pop
insb
push
jbe
cmp
xorl
ds
cmpsb
jo
fwait
pop
mov
sbb
jo
xchg
mov
stos
jo
mov
pop
add
mov
in
adc
sbb
add
cmpsb
cmpsl
inc
je
shll
jo
ljmp
mov
and
inc
outsl
ja
pop
cltd
nop
daa
sbb
push
js
mov
pop
repnz
push
lock
xor
imul
insl
sbb
xchg
divb
sub
mov
inc
and
xchg
mov
pop
movsb
jecxz
add
stos
sub
push
inc
push
xchg
insl
imul
bnd
lds
rorb
xorb
call
add
jne
cmpsb
out
jle
clc
movsl
pop
push
jo
call
push
xchg
jo
inc
fs
bswap
or
lcall
push
or
lret
cmp
fcom
mov
adc
hlt
stos
fstl
loop
daa
jo
ja
sbb
stc
dec
mov
test
pop
sub
jo
jns
pop
lret
cmpsl
jo
push
and
cmp
jo
call
ret
lods
mov
lret
nop
mov
push
rcr
sub
xchg
out
adc
mov
dec
jg
lret
xchg
adcl
jo
movsb
jle
xchg
adc
das
lret
add
fistps
push
ljmp
sarl
adc
mov
cld
mov
lret
mov
jo
fdivrp
pop
mov
decl
lock
pop
inc
imul
mov
xor
jo
xchg
mov
es
dec
movsb
jno
jg
jo
pop
jge
ret
outsl
xchg
subl
mov
push
addr16
movsb
xchg
cs
fwait
dec
int
adc
push
adc
jo
cli
mov
lds
enter
and
jo
sbb
or
aaa
cwtl
mov
rclb
ljmp
pop
fldcw
movsl
dec
xchg
xchg
pop
jo
adc
jge
scas
dec
subb
mov
mov
icebp
jge
shlb
jp
mov
jo
out
dec
mov
out
je
push
cmc
push
adc
push
pushf
sbb
fmull
ret
lret
into
xor
and
test
xor
jle
insb
js
add
cmp
dec
gs
je
cmp
rcrb
adc
popf
rorl
jo
not
push
insl
mov
and
cwtl
es
pusha
xchg
sar
ja
mov
aaa
les
loopne
cmpsl
mov
jo
enter
xchg
push
aaa
jo
lds
popa
jo
ljmp
jae
adc
int3
je
fsubrs
sbb
or
jo
cltd
in
mov
sbb
jecxz,pt
mov
jp
cltd
push
shlb
jns
sbb
sub
jl
push
dec
hlt
sub
cs
push
sahf
push
sbb
imul
jb
scas
es
jo
out
fstpl
mov
loope
pop
iret
fidivs
inc
jnp
adc
pop
addr16
add
shll
lods
fmulp
sub
inc
jo
inc
jl
fisttpll
add
lret
mov
xor
cld
mov
lock
pop
and
mov
xchg
adc
pop
inc
jle
jo
xchg
sbb
jo
pop
pop
xor
fdivrl
mov
inc
std
in
ja
jns
and
mov
ss
and
cmp
adc
cltd
cmc
ret
cmp
xlat
jo
aaa
es
movsl
lods
jb
test
and
adc
fimull
inc
outsb
bound
aas
inc
dec
jp
add
mov
mov
jo
adc
out
dec
xchg
xchg
sub
mov
xor
out
xor
pop
loopne
sbb
sahf
jo
insb
inc
subb
lahf
int3
pushf
repz
add
mov
jnp
fwait
mov
dec
jl
and
push
mov
sub
push
jno
xchg
jo
bound
test
fsubs
sbb
fldcw
push
jo
iret
aaa
xchg
cwtl
inc
les
jl
add
cmp
mov
test
call
ss
cli
fstp
nop
mov
dec
mov
mov
mov
jo
lock
movsl
ja
loopne
lret
loope
mov
pushl
aam
insb
xchg
mov
jne
or
xchg
lods
xchg
in
jo
xchg
sahf
icebp
mov
jbe
insl
int
fstpt
andl
fidivl
and
psrlq
lock
ret
mov
mov
pop
lods
inc
jge
out
cmpsb
jo
flds
pushl
cmp
adc
xor
dec
sub
arpl
out
mov
push
add
int
ret
cld
hlt
out
call
xorl
test
outsb
jo
xchg
mov
stos
push
fdivp
ds
jo
hlt
negb
ss
lret
scas
jae
imul
xor
jne
add
mov
idiv
aad
add
jle
pop
jno
testb
adc
repz
jo
arpl
imul
das
xchg
movsl
add
jp
xor
lock
adc
cwtl
dec
ret
inc
insb
shlb
pop
daa
pop
dec
rcrb
lods
ja
divl
in
jmp
mov
insb
loope
outsb
dec
cmp
add
dec
cmp
lock
outsl
leave
nop
lret
imul
ja
sbb
mov
mov
add
call
repz
les
sti
jnp
adc
mov
inc
fisttpll
out
test
add
jo
mov
jbe
lods
dec
pop
stos
lock
mov
aaa
jo
xchg
mov
add
cmp
cmpsb
shlb
jo
fcoml
xchg
rcrb
jmp
mov
outsb
aas
sub
jo
mov
leave
mov
push
push
xor
nop
test
sbb
and
cmpb
movsl
jo
inc
popa
or
mov
pop
insb
into
sbb
lock
in
dec
lea
jo
popf
adc
xor
xor
cld
in
add
add
mov
jo
popf
add
pop
addl
jo
and
pop
cwtl
add
add
jo
pop
jmp
rcr
xor
jo
pop
jle
sub
or
jp
outsb
out
adc
lock
jp
jno
aam
and
idiv
jae
in
iret
mov
adc
adc
fistl
jg
dec
jne
mov
aaa
orl
pop
jbe
add
pop
sub
cmp
sub
jge
movsl
push
or
outsb
xchg
mov
hlt
inc
cltd
pop
aad
outsl
div
mov
dec
fnstcw
roll
or
and
push
jmp
or
int3
mov
arpl
push
es
or
xor
subl
cltd
enter
inc
xlat
clc
lret
xor
push
pop
xchg
in
mov
inc
je
mov
mov
sub
imul
fs
in
inc
sbb
sbb
xchg
mov
push
mov
push
adc
mov
stos
and
aaa
pop
iret
jnp
mov
sub
or
mov
jp
jg
ss
mov
fstps
call
dec
dec
stc
mov
iret
xor
and
bound
xor
jle
out
sbbl
sahf
mov
aas
cmpsl
nop
mov
jne
sub
xor
mov
call
lret
mov
pusha
dec
or
shrl
mov
stos
xor
sub
fbld
adc
mov
xchg
ds
xchg
pop
shlb
add
inc
sbbl
sbb
inc
cmp
inc
cmpb
out
sbb
mov
pop
cmp
iret
cmp
dec
inc
pop
loopne
pop
cmc
les
hlt
pop
dec
int3
sub
adc
in
mulb
dec
cld
jo
jmp
arpl
adc
cmp
setb
jnp
inc
cmc
inc
pop
enter
bound
pop
fs
aad
mov
in
xorb
insl
mov
pop
js
loop
adc
fnstcw
xchg
cld
xchg
cmp
fmull
mov
ja
push
daa
pop
rcrb
and
sub
mov
lods
add
sub
mov
ss
imul
inc
sub
pusha
pop
and
xchg
andl
hlt
sub
and
sbb
test
cmpsb
inc
fistpl
or
pushf
sub
xchg
add
xchg
mov
jnp
xor
sub
or
in
das
jl
push
xor
test
cmp
push
mov
push
sub
jle
mov
xor
cmc
mov
mov
sub
mov
lods
pop
fs
clc
mov
rorb
pusha
test
adc
adc
sbbl
sbb
mov
sub
movb
xor
jb
or
pop
mov
lock
pop
and
pop
jl
sti
push
adc
or
jge
das
aam
adc
inc
lock
fsubp
pop
fdivl
mov
loopne
fs
pop
cld
movsb
dec
xchg
mov
jae
loope
adcb
lock
mov
nop
mov
jecxz
cmp
fistl
mov
sub
inc
and
out
adc
je
subb
jns
mov
xchg
xor
aad
jecxz
rolb
cmpsl
clc
xchg
stos
bound
mov
scas
push
or
mov
push
je
int
sbb
lods
aad
repz
jb
dec
sbb
sub
xor
leave
mov
inc
pop
cmc
bound
xor
or
out
sbb
mov
das
cmc
inc
xchg
xor
jb
lods
leave
push
mov
pop
mov
mov
out
adc
cltd
mov
push
fldt
dec
mov
mov
jne
push
jp
mov
jae
dec
push
sub
mov
mov
push
inc
shll
scas
loope
cltd
lods
icebp
xor
adc
loope
jmp
addr16
mov
and
fdivrp
cmp
clc
jno
aas
sbb
mov
and
mov
test
sub
sbb
mov
jns
out
pop
mov
adc
sub
repnz
sbb
insb
ja
cmp
adc
jne
sti
jo
inc
cld
pop
stos
jl
cwtl
in
testb
enter
js
cmp
stos
subb
in
lret
pop
lret
adc
mov
or
popf
adc
or
out
test
dec
jb
push
fstpt
jbe
daa
add
sbb
push
nop
arpl
jae
lds
ljmp
xchg
fmul
mov
jns
jb
mov
jmp
jb
daa
leave
ljmp
sub
fdiv
movsl
les
mov
pop
xchg
or
out
push
je
sbb
jle
cmp
std
jb
imul
jg
or
add
lock
bound
and
xor
cmp
mov
movl
lahf
jg
xchg
and
mov
ss
add
mov
adc
jb
sbb
pop
and
mov
push
repz
cmp
test
sub
xchg
mov
loop
ficomps
scas
inc
clc
pop
push
or
fcomps
cwtl
ja
aad
lock
aas
or
ja
xchg
mov
inc
push
sbb
push
adc
into
mov
sti
in
subl
mov
xor
insl
jne
cmp
ret
lahf
mov
and
mov
xor
mov
adc
jo
jge
and
pusha
or
or
mov
mov
mov
pop
enter
push
pop
mov
mov
inc
repz
jp
insb
xchg
jo
cmp
into
leave
fdivrl
push
mov
inc
jns
jo
mov
incb
cmp
jo
lahf
scas
and
ja
stos
test
loopne
jl
out
inc
ja
cli
daa
push
cmpsb
cmp
in
xor
cmp
dec
push
mov
jo
ss
std
lret
inc
mov
mov
gs
add
int
pushf
lahf
mov
stos
leave
lods
loop
xchg
push
out
mov
out
out
fs
or
mov
push
call
cmp
xchg
arpl
mov
inc
in
shll
cwtl
dec
into
xchg
dec
pop
push
fmull
scas
in
in
insb
jbe
or
xchg
js
cmc
and
shl
mov
push
es
sti
pop
inc
cwtl
pop
pandn
jo
loopne
jecxz
cmp
int
negl
jb
xchg
or
xor
add
enter
xor
jno
mov
ret
sub
lock
pop
and
and
push
xchg
hlt
sub
adc
scas
pop
in
stc
cmc
in
jo
clc
jnp
sbb
sti
pushf
cmp
xlat
adc
loop
jecxz
jl
js
adc
cmc
cmpsb
int
xor
xchg
mov
adc
jl
loope
call
xor
push
sub
dec
inc
push
jb
fs
cmp
pop
jmp
daa
lea
ud1
adc
out
jo
or
mull
mov
std
popf
jo
jge
cmc
adc
call
out
adcl
cmpsl
into
les
fmull
pop
xchg
test
cmpsb
jo
push
insb
and
std
js
and
push
sbb
sarb
jo
test
call
jo
and
fwait
jp
push
mov
filds
icebp
mov
jl
and
xor
jo
xor
pushf
fistpll
jo
inc
call
pop
jo
mov
subb
push
das
lods
popa
lock
push
sub
popf
jo
ja
and
out
jo
mov
into
rcl
sub
jnp
ds
jae
cmp
out
xchg
xchg
jae
and
adc
cmc
je
vpcmpeqw
lock
or
jo
stos
adc
lods
std
addl
out
and
insl
lods
andl
pop
das
divl
aas
ds
divb
or
dec
loopne
lock
or
dec
or
fcmovbe
pushf
shlb
ret
dec
ljmp
jl
idivl
fwait
push
fisttpl
mov
sti
push
lret
ja
cmp
pop
faddl
xor
jo
and
inc
nop
xor
sub
xchg
andb
outsb
cltd
and
fwait
test
xor
pop
jo
stc
push
mov
scas
outsb
sbb
jae
cmp
pop
mov
jo
or
orb
nop
icebp
lock
mov
ret
fdivrs
jo
push
in
clc
push
hlt
push
jo
jecxz
gs
jb
jae
mov
out
std
or
sahf
mov
loop
lock
mov
add
sub
mov
add
jnp
hlt
pop
inc
nop
pop
lods
movups
dec
add
and
loop
jp
aad
cld
push
jo
mov
shl
pop
push
inc
movsl
out
xor
adc
mov
je
movsb
jp
in
lods
mov
aas
lock
adc
dec
sti
aam
lahf
jo
mov
stc
inc
insb
push
xchg
mov
lret
out
add
mov
inc
ds
fcmovnbe
outsl
scas
cwtl
mov
push
jo
stos
out
mov
mov
push
stos
jp
dec
aam
lock
dec
ljmp
lock
aad
mov
aas
call
cmp
enter
std
xchg
mov
jo
into
pop
xchg
cmp
rcr
mov
jo
adc
xor
jo
lea
push
iret
mov
pop
sub
lods
add
jo
cmpsl
mov
lahf
jo
sbb
pop
xor
add
pusha
jecxz
xor
ljmp
icebp
test
in
jb
fildll
outsb
adcb
cli
mov
dec
jne
hlt
je
scas
mov
fwait
out
ret
divb
in
jge
out
sub
mov
jbe
add
loop
adc
shrl
xor
jge
ja
nop
mov
inc
mov
je
inc
jo
lods
int3
push
xchg
xchg
xchg
xor
cmc
sub
pop
pusha
std
cmovge
sbb
filds
mov
jns
jo
adc
cmpsl
and
jo
cmp
outsl
mov
jno
lock
sti
lds
in
mov
cmpsl
sbb
call
mov
bound
mov
inc
enter
in
out
jo
jmp
sub
jo
mov
outsl
pop
outsb
clc
xchg
jbe
pop
sarl
js
outsb
out
test
scas
imul
jae
jle
cmc
stc
je
in
lock
pop
std
mov
lds
lea
adc
rolb
jo
mov
cmp
jo
cmc
aad
scas
sbb
jp
jg
pop
lock
push
subl
bound
out
adc
js
es
dec
lret
sbb
xor
testb
xor
jnp
aaa
inc
data16
inc
cs
inc
cli
mov
push
adc
scas
aad
cmpsb
cmp
lret
es
jo
adc
fnstcw
jo
fsubl
push
jo
movsb
int
mov
mov
jb
test
cmp
leave
pop
and
icebp
xchg
test
insl
dec
lcall
mov
call
sti
mov
cmp
jo
stc
jae
test
jo
and
or
push
jbe
jo
and
dec
data16
aaa
cs
jnp
cwtl
mov
bound
jle
push
imul
jo
push
loope
les
jo
push
push
xor
ja
adc
fistl
icebp
xchg
jns
xchg
clc
cmpsl
fxch
jo
test
jge
push
jp
jo,pt
jle
sub
or
insl
adc
repnz
jl
jg
icebp
mov
jl
lock
int
inc
adc
add
nop
imul
das
dec
xchg
jo
lods
mov
clc
jae
sti
out
gs
fsubs
stc
fdivl
pop
xchg
pushf
push
loop
fidivl
js
inc
aad
mov
jo
and
rorb
jo
negb
jo
test
jmp
and
lock
pop
push
out
cmp
dec
frstor
test
jo
jg
fwait
mov
sub
add
pop
add
jp
ss
fnstsw
out
and
out
xor
jns
jecxz
movl
lea
rcrb
pop
add
call
js
jo
shll
sub
adc
dec
jo
test
mov
push
in
ljmp
sbb
xorl
or
xchg
in
mov
stos
pshufw
lcall
outsl
rcl
adc
jo
bound
lock
xchg
jo
imul
enter
push
adc
jb
jmp
ret
ja
xchg
push
add
loop
bnd
fistpl
mov
cmpsl
jo
xchg
lock
mov
sbb
outsl
mov
lea
rolb
scas
out
mov
or
clc
mov
xchg
ds
jmp
icebp
jo
gs
das
sbb
xchg
mov
clc
in
loope
into
mov
cltd
lods
jne
push
sub
cld
adc
inc
pop
jl
mov
jae
shll
jo
add
pop
jo
pop
cmp
arpl
adc
cmpsb
push
xor
push
push
dec
es
sub
notb
lahf
or
cltd
cmp
xchg
add
ret
imul
jp
decb
aas
nop
mov
sbb
int
jo
loop
or
lea
jo
inc
xor
and
inc
daa
mov
or
jo
je
sub
fsubrl
loope
popf
mov
and
or
jae
out
mov
fiaddl
jo
mov
cltd
daa
push
rcll
jo
mov
mov
jo
gs
popa
out
lods
andb
daa
sahf
cmp
adc
jle
cmp
jo
dec
pop
fs
cmp
test
movsl
pushf
sub
insl
mov
xor
test
ds
imul
inc
inc
lods
mov
out
mov
xorl
cmp
jp
xor
push
jo
jmp
cld
or
imul
outsl
mov
push
dec
jne
leave
inc
dec
jo
mov
stos
xor
sub
enter
ja
movsl
and
leave
ljmp
mov
outsl
adc
movsb
mov
add
js
call
adc
mov
out
pop
jp
pusha
sub
dec
inc
jne
nop
xor
fimull
lds
mov
stos
aaa
pop
jg
bound
sub
xor
add
or
movsl
mov
add
pop
mov
ret
adc
mov
icebp
insl
xor
pop
push
movsb
cmp
fisttpll
xchg
shll
pop
jo
xchg
jmp
pop
jo
adc
mov
jo
adc
pop
sahf
dec
cmp
xor
mull
xchg
adc
clc
add
arpl
jo
adc
pop
je
and
fnsave
sbb
adc
clc
call
pop
push
jge
lds
or
in
sbb
push
testb
or
mov
loope
movsb
cli
imul
pop
js
call
insb
and
xchg
xchg
sub
call
cmpsb
mov
in
dec
adc
pushf
insl
pop
int
mov
scas
dec
jmp
mov
and
adcb
mov
mov
int3
xchg
imul
jg
dec
push
inc
idiv
inc
and
mov
push
out
mov
mov
mov
xchg
test
nop
jmp
jg
into
push
cmp
mov
jnp
xchg
in
sbb
cmp
push
sti
jp
sub
pop
jl
mov
mov
cwtl
sti
rolb
cmc
xabort
js
cwtl
or
int3
rcrb
inc
xchg
fabs
sub
push
adc
lcall
aad
scas
mov
xor
mov
and
test
jne
dec
pop
sub
scas
xchg
in
and
and
scas
nop
ss
fs
sub
xchg
movsb
adc
jge
stc
ss
mov
lret
jns
push
mov
fucomip
dec
cmpsb
dec
add
sahf
push
fcompl
jle
sub
mov
shll
add
popf
inc
xchg
xor
clc
mov
push
mov
rcll
sbb
jne
es
xor
cmc
adc
dec
push
fisubrs
lods
stos
pop
imul
cwtl
repz
mov
dec
repnz
jne
mov
xchg
inc
push
hlt
sbb
scas
lock
jo
mov
pop
popl
xchg
je
ss
cwtl
xor
jbe
adc
pop
jmp
dec
ljmp
ret
jbe
stos
pusha
cwtl
mov
pop
fcomp
fldln2
sbb
int
sbb
mov
loopne
clc
mov
pop
je
fs
push
mov
add
sbb
ror
loopne
cmp
outsb
nop
lds
loopne
jns
ror
je
lcall
inc
stos
adc
push
cwtl
push
jns
sub
cltd
sbb
fstl
push
xor
jne
xor
leave
mov
pop
and
push
scas
and
jns
inc
sbbb
push
inc
popl
ja
out
adc
lea
dec
data16
lahf
iret
neg
rcll
jno
jle
sbb
lods
imul
xor
fisttps
cltd
pop
cmp
cwtl
push
jno
xor
mov
inc
and
test
jl
aad
in
aas
in
fwait
nop
nop
adc
mov
push
and
std
dec
push
cmp
cmp
sbb
je
mov
ss
cmp
in
ja
je
nop
dec
stc
les
scas
popf
push
push
mov
outsb
push
pop
faddl
shl
lret
clc
pop
xchg
aas
and
jne
adc
sub
push
push
lock
mov
pop
sbb
loopne
or
icebp
mov
fadds
pop
and
xchg
dec
and
stc
pop
test
iret
add
out
cwtl
aam
mov
push
push
and
mov
add
in
mov
cmpsb
pop
sbb
clc
cwtl
sbb
int3
cld
push
ret
test
inc
fcomp
inc
out
jne
cwtl
sbb
sbb
pop
inc
shlb
out
imul
add
sub
out
cwtl
mov
mov
lock
sub
push
call
popa
xor
loopne
lock
cwtl
and
fisttpl
xchg
mov
xor
add
pop
cmp
push
mov
lods
call
sbb
fmuls
enter
pop
cmc
mov
jne
out
adc
pop
mov
int
out
rol
pop
sbb
pop
outsl
jno
inc
mov
adc
mov
movsl
pusha
je
xchg
adc
and
adc
mov
mov
xor
pusha
test
mov
inc
sahf
xchg
inc
ljmp
mov
sbb
mov
cmp
xchg
mov
cmpsb
lret
fwait
xchg
das
fmuls
sbb
cmp
lret
xor
outsb
mov
jne
outsl
pop
shl
pop
mov
mov
sbb
jno
mov
mov
inc
sub
clc
icebp
addr16
mov
imul
adc
xor
call
xchg
je
dec
xchg
sbbb
loop
add
orb
fists
nop
scas
lret
mov
fs
mov
mov
push
or
pop
jo
add
mov
push
jo
cs
pop
cltd
or
test
call
movsb
movsb
emms
daa
mov
lds
adc
jo
mov
mov
jo
jae
test
xor
jo
pushf
in
adc
icebp
jo
aam
fdecstp
mov
and
mov
and
sbb
jo
fimuls
out
nop
add
push
jo
jg
push
sbb
lods
outsb
je
movsb
push
cmpsl
adcb
add
cmp
movsl
dec
movsb
sub
mov
xchg
mov
repnz
outsb
jo
jmp
imul
xchg
in
xor
and
xorl
mov
adc
imul
xlat
scas
xor
out
loopne
out
mov
frstor
js
data16
loopne
aas
jo
cmp
out
jne
int
jo
cs
push
push
movsb
sub
xor
popa
js
inc
pop
hlt
jo
pop
stc
iret
dec
cmp
sub
adc
and
adc
jo
movsb
adc
push
jle
insl
cld
lods
mov
mov
and
lods
fsubrl
ss
adc
xchg
rorb
xor
mov
xor
xor
jo
pop
pop
mov
or
inc
xor
ljmp
mov
fidivs
jp
xor
hlt
out
imul
mov
rorb
mov
mov
push
or
mov
stos
lods
icebp
sub
movsl
push
sbb
out
jo
in
jnp
mov
pop
imul
jmp
lods
js
mov
xlat
cli
push
jo
aas
dec
pop
or
xchg
sbb
push
mov
lods
and
repz
xor
clc
in
bound
dec
or
dec
je
xor
mov
cmp
movsl
jo
lock
jae
pushf
cltd
out
lods
cld
push
cmp
cli
xlat
call
mov
xor
aas
fidivl
mov
cmpsl
js
pop
out
cld
outsb
add
xchg
std
adc
mov
sbb
stos
push
popa
jo
jecxz
inc
hlt
push
push
leave
jo
or
mov
repnz
sub
aam
inc
mov
mov
out
push
adc
cmp
cmp
enter
les
jmp
jo
cmp
int
mov
jns
push
adc
and
jae
xor
in
mov
lods
ss
fdivrs
xor
push
lea
test
addr16
or
cltd
in
fisttpll
jae
aas
and
sbb
test
mov
insl
cwtl
lea
icebp
or
jbe,pt
lods
js
gs
mov
ficoms
add
dec
rorb
dec
xorl
outsb
daa
addr16
xor
int3
leave
jb
inc
lods
outsb
dec
cmp
push
or
lods
sub
dec
jmp
jo
pop
in
std
jge
adc
insl
movsb
les
add
pop
roll
ss
xchg
into
dec
xor
xor
andb
sbb
jo
xchg
je
outsb
mov
pop
lret
mov
add
jo
add
jg
jo
sahf
insl
mov
mov
pop
cmp
lock
arpl
std
jle
jo
stos
xchg
loop
clc
dec
jo
outsb
inc
aam
xor
jo
add
and
or
stos
cmp
loopne
js
jo
das
jnp
dec
popa
inc
jo
push
incb
jo
lds
call
mov
sub
mov
ret
xchg
insl
sub
dec
icebp
xor
sub
jle
xchg
adc
lods
ffreep
out
inc
sub
jo
cmpsl
outsb
xchg
cmp
out
sbb
jle
sbb
jo
xchg
and
fistpll
jle
or
mov
loopne
cmp
dec
jo
sbb
ljmp
cmpsb
lcall
arpl
jne
shl
lea
bound
loopne
or
push
sbb
outsl
pop
xchg
sub
in
mov
pushf
xor
jo
xor
jae
xchg
dec
outsb
jo
test
sbb
ret
shlb
imul
ja
testb
and
outsb
jp
jae
sub
xchg
inc
test
push
dec
jp
jnp
jbe
or
mov
pusha
or
add
cmpsb
jo
dec
mov
insl
adc
stos
xchg
mov
sbb
movsl
es
test
sub
xchg
jo
les
das
or
pusha
addr16
imull
cmpb
mov
loop
mov
mov
sbbb
stos
lock
ja
sbbb
stc
shlb
and
lea
xchg
jge
xchg
mov
mov
out
xor
xor
mov
inc
jg
and
pop
pop
imul
dec
cs
test
pop
aam
pop
jo
ss
push
sbb
enter
jecxz
pop
jae
lcall
shll
lock
out
push
fidivrs
jo
cmp
dec
sbb
push
sti
divb
js
push
xor
sbb
out
xlat
jo
xchg
in
outsb
test
inc
sbb
mov
add
iret
xor
repnz
push
gs
mov
mov
jo
jae
jns
int
dec
insl
push
xor
inc
cmp
mov
in
sahf
xor
bound
xchg
jmp
arpl
lret
push
mov
icebp
imul
pop
stos
push
mov
js
push
jo
dec
aaa
imul
or
stos
pushf
and
mov
aad
imul
lock
jo
jmp
pop
out
dec
ja
call
lahf
mov
pusha
incl
push
push
push
pop
pop
jo
adc
cmp
xor
cld
lcall
out
xor
outsl
clc
or
cmp
cmp
fstpl
sbb
lock
pop
xchg
mov
push
pop
loopne
out
xor
jb
mov
xor
push
jo
mov
stc
negl
jae
dec
xchg
sbb
pop
enter
xor
std
into
cmp
push
add
jno
in
outsb
dec
test
xor
das
pop
mov
mov
pop
pop
sub
and
test
pop
add
imull
push
std
or
adc
js
arpl
or
push
popf
lock
jae
pop
test
mov
mov
and
shl
loope
mov
stos
aas
sahf
test
outsl
js
pop
popa
xchg
jo
mov
scas
pop
jo
adc
lahf
xor
push
jo
and
sub
push
out
fistpll
jo
cmpsb
mov
icebp
jo
loop
call
jne
test
std
push
pop
enter
jo
and
pop
out
lock
cmp
dec
xor
stos
sub
jo
cmp
cs
dec
xchg
or
pusha
sub
xor
xor
iret
pop
sbb
lret
ljmp
outsb
lcall
repz
mov
jecxz
jo
pusha
or
leave
test
xchg
jne
adc
mov
pop
push
pop
mov
jo
lcall
jo
movl
or
and
sbbb
pop
push
scas
rcrb
mov
pop
cwtl
adc
dec
adc
cmpsl
subb
out
ret
out
cmp
fmuls
mov
fisttpl
popf
ja
push
test
add
xchg
sbb
mov
xor
ja
ljmp
pop
out
cmpb
pop
xor
loope
xor
xor
mov
je
inc
stc
jg
imul
xchg
ss
jo
fptan
and
mov
xor
dec
xor
jo
and
push
out
cmpsb
xchg
xor
aaa
nop
xor
jne
clc
xchg
lock
incb
mov
repz
push
cmp
xor
push
ljmp
insl
popf
lcall
xor
pusha
loope
jo
xor
sub
pop
ljmp
fists
inc
cmpsb
mov
add
or
jae
inc
fiaddl
xrelease
pushf
add
loopne
sbbb
jae
xor
lahf
xchg
aaa
fisubs
testl
fidivs
jecxz
cmp
popf
pop
mov
jo
push
or
ds
sti
into
or
inc
mov
sub
or
lea
sub
in
sti
stos
push
and
mov
js
lock
sub
arpl
cmp
jo
rcl
mov
mov
and
sub
fisubrl
rolb
jnp
adc
xchg
xchg
hlt
mov
daa
int
pop
sbb
xor
push
call
aaa
push
out
ss
jae
mov
jge
lret
cwtl
dec
clc
insl
mov
sbb
cwtl
or
cmp
xor
fidivs
dec
shll
xchg
lcall
mov
sbb
jne
enter
imul
mov
sub
fldcw
jo
xor
std
popf
cli
push
xlat
adc
clc
pop
mov
fdivl
loopne
and
push
shl
push
lock
insl
or
arpl
mov
out
push
jge
jp
pop
rorl
nop
in
pusha
push
outsb
imul
or
mov
push
cmp
shl
jecxz
mov
aam
enter
lcall
mov
fnstcw
push
pop
loopne
xor
sub
jno
inc
push
dec
jo
xchg
stos
lock
insl
ljmp
ret
hlt
sbb
xchg
popa
fsubrl
dec
aaa
dec
js
lahf
sarb
and
jo
test
mov
xor
cli
jg
cwtl
fidivs
dec
into
xor
pusha
mov
cmp
cmp
out
sbb
pop
jo
arpl
pop
lcall
inc
call
xchg
test
sub
ss
mov
adc
js
adc
js
cwtl
adc
xor
cmp
repz
add
mov
popf
inc
inc
push
push
or
jo
mov
jno
loop
jo
aas
adc
xorb
pop
cmp
xor
xor
cmp
stc
insl
mov
outsb
jmp
add
cmp
xor
clc
dec
pop
scas
std
mov
adc
lock
and
mov
test
jge
js
jo
mov
std
popa
xor
add
xor
gs
pop
pop
arpl
jmp
lock
loopne
addr16
lods
sub
cmp
insl
or
jo
xchg
sarl
ja
push
gs
and
outsb
xchg
cmp
out
hlt
xchg
dec
cmpsl
cwtl
jo
lods
cmp
ds
cmp
jo
dec
pop
push
shll
divl
insl
inc
sub
cmp
aas
jo
mov
imul
mov
fwait
jns
push
jmp
insl
cltd
pusha
std
jo
push
adc
das
push
xor
fsubrs
icebp
push
insl
andl
clc
pop
bound
xchg
or
adc
mov
xchg
in
ds
xchg
test
inc
inc
jnp
insb
dec
push
dec
or
inc
int
scas
cli
mov
xchg
jae
inc
xor
cmp
ffree
shlb
xchg
dec
inc
inc
and
movb
mov
pop
dec
push
jecxz
rcr
ret
int3
mov
mov
repnz
dec
sti
inc
out
mov
data16
dec
jecxz
sarl
and
popf
orl
push
clc
mov
xor
popf
mov
ds
gs
lahf
outsb
pop
pop
or
in
fcomip
lahf
sti
lahf
loopne
loope
arpl
pop
xlat
lahf
fstps
in
flds
aas
das
jp
inc
inc
inc
xor
mov
mov
inc
hlt
xchg
push
inc
inc
ds
sbb
add
repz
fisttps
das
jmp
cmova
xor
dec
sbb
xchg
inc
test
pusha
inc
inc
or
dec
dec
cli
xor
xor
dec
fsub
scas
shl
das
ficoms
inc
cs
int
inc
cmp
mov
cli
pushf
mov
inc
shl
inc
rcl
pushf
inc
and
rolb
sarl
shll
add
jecxz
ror
ret
shlb
andl
xchg
xor
push
je
inc
dec
das
inc
decb
dec
xlat
push
fidivrl
mov
xchg
mov
jno
pop
push
sub
stc
ljmp
ja
dec
insb
push
dec
pop
mov
adc
divl
jp
insl
jbe
lock
sbb
jp
cmp
adc
mov
dec
clc
cmp
mov
mov
add
add
inc
inc
jmp
push
push
ljmp
popf
test
xchg
mov
push
cli
lods
lahf
movsl
push
inc
cmp
adc
inc
inc
and
dec
int
clc
add
cwtl
sub
mov
test
lcall
adcb
mov
addb
inc
xchg
insb
inc
inc
sub
cltd
ret
in
pop
ds
pop
inc
loop
xlat
push
int3
aaa
mov
dec
testl
test
dec
enter
insb
push
and
adc
ljmp
mov
add
lds
inc
lods
jmp
cmpb
pushf
aaa
jle
add
xchg
out
insb
pop
inc
jmpw
pminsw
push
sbb
dec
repnz
fmulp
int
ror
fsubrs
loopne
jae
jns
adc
notl
inc
push
fdivs
mov
inc
repz
inc
cmp
insb
hlt
add
loopne
bound
xchg
lods
add
nop
dec
xchg
in
scas
mov
add
add
inc
add
push
cmpsb
sub
int
xchg
inc
insb
ret
jmp
je
pop
mov
popf
jmp
repz
lock
cmc
jnp
cmp
cwtl
int
test
insb
jb
popa
jmp
xchg
ja
inc
adc
aaa
out
or
fistl
dec
push
add
mov
cli
xchg
lahf
jle
ds
ret
int
das
inc
xor
cwtl
test
mov
outsb
xor
inc
adc
cwtl
mov
into
inc
lods
jp
inc
cmpsl
cmp
fists
lret
xor
cmp
hlt
out
dec
das
add
out
cmp
pusha
dec
inc
cli
xchg
xchg
cwtl
xor
xorl
outsl
nop
xor
insb
pop
inc
fcomip
jp
sub
inc
lock
clc
ret
cld
mov
mov
fcoms
dec
insb
add
hlt
testb
loopne
dec
imul
adc
mov
shrb
jns
push
call
xor
pop
or
or
or
or
insb
outsb
cmp
ret
or
shlb
push
add
xor
dec
mov
jp
inc
idivb
in
pop
lahf
fistpl
xor
jmp
std
jmp
insb
dec
inc
fsubrl
aam
cmp
es
cmc
divl
xchg
mov
aaa
and
sbb
repnz
in
or
mov
mov
add
call
pusha
jmp
push
sbb
dec
xchg
int
das
ds
popf
hlt
movsl
jmp
into
xchg
cmpsb
cs
ss
jmp
imulb
iret
cwtl
dec
outsl
idivl
push
in
hlt
ds
mov
shll
ret
sbb
lcall
imul
cmp
movsl
or
dec
or
or
or
or
or
rolb
mov
jecxz
mov
adc
rep
mov
mov
mov
lock
inc
adc
cmp
add
add
add
rolb
inc
xor
imul
add
pop
mov
iret
lea
cmp
movsl
mov
pusha
inc
mov
jecxz
shll
ret
or
dec
dec
sub
pushf
mov
xor
add
dec
add
repnz
xchg
mov
dec
mov
nop
xor
dec
inc
inc
xor
dec
adc
arpl
div
mov
inc
cs
popf
mov
inc
mov
mov
in
pushf
ret
enter
cmp
sub
ret
mov
xchg
xchg
cmpl
xorb
xchg
xor
out
out
or
or
or
or
and
test
push
push
mov
sub
adc
sbb
das
add
cli
iret
loope
jmp
iret
ljmp
fwait
iret
mov
pop
insb
fucompp
xor
fidivrl
mov
mov
insl
jbe
pop
dec
inc
mov
popf
pop
aaa
mov
mov
lea
mov
mov
jb
pop
cwtl
dec
pushf
push
orb
and
mov
data16
shrb
mov
cmp
cli
add
ds
jecxz
into
sub
xor
or
dec
test
movsb
or
sub
data16
out
shrb
xlat
das
fldcw
les
iret
mov
mov
iret
fwait
iret
or
iret
mov
outsl
cmp
jbe
popa
cli
push
lahf
inc
pop
cmp
test
test
test
pop
inc
das
clc
das
mov
das
mov
inc
sarl
ret
lahf
mov
test
dec
xchg
mov
fmulp
push
and
or
or
or
or
insb
jl
arpl
dec
pop
push
cmp
or
scas
pop
cmpsl
xor
push
fisubrs
xchg
sub
jp
dec
sub
fdivrp
aad
dec
dec
dec
mov
das
pop
cmp
mov
insl
popa
call
add
std
cmp
pop
cmpb
jp
dec
loop
mov
add
icebp
lahf
negb
pop
sbb
loopne
inc
js
inc
inc
inc
fimull
dec
movsl
dec
pop
xlat
xchg
addr16
lods
cmpsb
inc
popf
das
movsl
pop
mov
test
test
add
scas
mov
inc
dec
push
or
sub
out
imul
dec
xor
mov
mov
mov
ja
addr16
pop
cwtl
loope
jle
fmull
dec
cmp
mov
popf
mov
call
cli
stc
lahf
lods
jae
ds
loopne
inc
test
push
inc
pop
pop
jmp
cmpsb
and
inc
dec
cmp
pop
lahf
add
cmc
pop
cmc
sbb
jno
cmp
sub
xchg
insb
insb
dec
inc
ret
outsb
xor
inc
inc
iret
mov
in
dec
mov
iret
movsb
iret
test
lods
cmp
mov
inc
popf
dec
stos
dec
outsb
into
dec
fldcw
mov
das
test
lods
scas
mov
dec
and
lahf
sbb
pop
add
add
or
mov
lahf
test
pop
dec
xor
shlb
ljmpw
fwait
mov
outsb
les
cmp
sub
pop
shl
ficomps
push
cmp
lea
mov
cli
or
jnp
mov
and
lret
sbb
jecxz
lds
cs
push
cwtl
fcompl
mov
mov
dec
aas
push
cmp
sub
icebp
sub
cs
pop
or
add
cmp
mov
jecxz
into
cmp
sbb
or
or
or
mov
je
js
jl
and
insb
adc
add
or
mov
and
xlat
test
dec
inc
push
dec
cmp
ja
sti
mov
xchg
enter
cmpsb
xchg
mov
lea
xor
xor
clc
hlt
sbbb
jae
js
pop
das
fs
imul
pop
fisttps
cmp
pushf
pop
jge
mov
push
sub
or
and
fdivs
stos
addl
push
xchg
outsl
ret
ss
mov
xchg
dec
je
dec
jns
jmp
push
dec
jnp
pop
mov
popf
movsb
loopne
xor
insb
fdivrs
mov
jae
push
loopne
ret
mov
fstl
aas
in
pop
ret
push
mov
sahf
fwait
and
insb
bound
jmp
xchg
pop
xor
mov
mov
sbbb
and
add
inc
sub
sub
filds
fsubrp
sub
mov
mov
push
enter
sbb
in
mov
pusha
sbb
div
out
je
lea
and
or
inc
ds
inc
pop
jae
inc
sub
adc
adc
fcomps
sbb
sahf
iret
mov
inc
jl
inc
jns
adc
pushf
pop
ljmp
cmc
iret
ror
leave
jecxz
scas
js
out
rorb
mov
xor
inc
fcoms
popa
lock
fisttpll
lds
pop
dec
out
sbb
mov
push
mov
ds
inc
sub
cli
ds
dec
sbb
aam
mov
push
inc
dec
cmp
aam
cmpsl
loop
out
shl
adc
mov
loop
imul
loopne
outsb
adc
dec
cmp
andb
pop
jl
inc
pop
push
out
pop
mov
fdivp
cli
lahf
xchg
inc
ljmp
insb
fiaddl
divl
inc
push
dec
ja
dec
mov
popf
push
adc
jbe
dec
or
push
mov
in
ficomps
pop
mov
shlb
mov
addr16
adc
dec
mov
cmp
lds
and
ficoms
repz
or
out
xor
fdivrl
mov
fadds
and
push
test
inc
dec
and
mov
sbb
add
loop
shrl
rcll
fcomps
xchg
fwait
loope
repz
hlt
push
repz
xor
enter
sarb
fsub
add
or
push
mov
mov
mov
dec
cmp
pop
or
or
loopne
jb
dec
ds
mov
ds
fcompl
mov
mov
in
test
je
loopne
ss
mov
inc
cmc
dec
sub
xchg
pusha
pushf
cwtl
inc
sub
test
sub
in
push
fs
lds
xchg
or
or
cmp
and
sub
adc
push
or
pop
jb
clc
push
cld
jno
in
loopne
mov
mov
mov
mov
int3
call
mov
mov
mov
int3
or
mov
cwtl
or
mov
mov
je
js
jl
push
xchg
pop
stos
dec
push
iret
push
iret
pop
iret
pop
out
pop
cwtl
dec
lahf
dec
mov
pushf
and
pop
das
sub
adc
sbb
jae
fs
push
adc
cmp
inc
orl
xorl
xchg
inc
sub
lods
pop
aad
dec
push
movsb
cmp
mov
mov
ret
sahf
in
and
mov
orb
js
fs
cmc
pop
sub
dec
cmp
and
and
sub
sub
xor
sub
clc
jecxz
pop
fsub
lahf
call
lods
push
fadds
les
mov
mov
mov
test
das
pushf
das
adcb
subb
nop
dec
pusha
pop
fs
insb
fwait
idivl
push
xchg
pop
xchg
pop
xchg
inc
nop
nop
dec
mov
mov
cmp
mov
and
and
subb
lahf
adc
sbb
add
or
test
test
sbb
iret
shl
aam
test
add
les
dec
or
lods
movsb
lahf
test
lods
lahf
nop
lahf
xchg
lahf
cwtl
lahf
pushf
lahf
sbbb
lods
arpl
jp
js
jl
pusha
pop
fs
push
lahf
push
mov
lods
push
inc
test
test
push
xor
inc
aas
push
mov
xchg
adc
sbb
add
or
ds
mov
mov
int3
repnz
call
repz
fadds
or
int3
test
das
mov
ja
lods
xchg
nop
xchg
xchg
xchg
cwtl
xchg
pushf
xchg
adcb
mov
pop
js
jl
pusha
rorb
mov
dec
push
iret
pop
iret
pop
mov
or
or
cmp
cmp
and
and
sub
sub
call
test
or
sub
das
hlt
pop
clc
aam
loopne
in
in
sub
ss
jo
add
les
mov
mov
test
sub
sub
adc
pop
mov
jecxz
push
notl
mov
xchg
and
sbb
or
lock
in
call
pop
mov
cwtl
iret
mov
mov
jl
xor
nop
outsb
pop
dec
pop
cmpb
push
mov
fsubrp
hlt
or
call
lahf
aam
fcomps
les
mov
mov
mov
movsb
test
aas
xchg
idivl
xchg
sbb
pop
mov
inc
je
pusha
imul
inc
mov
lret
sub
adc
in
mov
add
fs
or
or
lock
adc
mov
loope
shl
xchg
call
xchg
aam
add
mov
mov
mov
mov
mov
dec
mov
repz
jle
mov
sbbl
mov
pusha
jmp
xor
cmp
orb
pop
loopne
inc
call
pop
mov
mov
lods
fcoml
inc
pusha
mov
popf
push
xchg
dec
jge
test
test
or
mov
mov
cwtl
mov
dec
je
insb
popf
pop
dec
aad
popa
mov
mov
add
cld
das
in
das
shrb
aam
fcompl
nop
test
push
movsl
inc
lea
ret
cmpsb
add
cld
test
test
test
test
lret
shrb
dec
add
sub
sti
cld
lds
faddl
sub
and
ds
and
add
add
or
mov
push
test
xchg
rcr
int3
mov
cwtl
scas
clc
cmp
bound
pop
sub
pop
sub
sub
adc
hlt
lahf
in
mov
add
int3
pop
inc
xchg
lahf
cwtl
mov
or
dec
pop
push
jp
pop
lahf
inc
jnp
shll
jmp
pop
loopne
adc
sahf
cmp
cmp
sti
inc
retw
aaa
or
mov
adc
or
adc
cmp
cmp
test
test
jl
dec
loop
dec
inc
and
in
fdivr
bound
loope
test
int3
cli
das
test
mov
ja
je
js
jl
pusha
mull
mov
xchg
dec
cwtl
in
cmp
ss
push
das
sub
adc
adc
sbb
ja
add
or
in
fsubr
das
enter
movsb
das
pushf
das
mov
rcrb
js
jl
sbbb
xor
jmp
ljmp
mov
movsb
jle
sub
call
xor
gs
pop
dec
xorb
repnz
or
dec
loopne
rorb
mov
nop
inc
je
insb
sbb
dec
mov
outsb
dec
add
lock
dec
push
fdivrl
sub
push
and
xor
in
or
and
push
subb
test
inc
and
or
das
adc
or
xchg
negl
xchg
mov
mov
mov
push
push
sti
push
push
adc
test
mov
pusha
mov
dec
and
out
or
or
push
call
push
in
sub
arpl
out
push
mov
inc
sub
loopne
shrb
jne
test
fsubrs
lock
into
or
or
cld
xor
cld
arpl
call
aam
mov
cmp
imul
in
lock
push
loopne
call
jb
sbb
push
dec
je
sbb
mov
clc
xor
mov
adc
repz
in
pop
cmp
dec
xor
sbb
push
lock
out
adc
and
mov
cmp
push
bound
int3
mov
push
ds
jbe
inc
fisttpll
push
and
or
sub
jp
hlt
iret
cld
iret
in
out
adc
mov
add
pop
or
mov
jp
int
push
jp
xchg
pop
repnz
cmp
or
xor
or
xor
cwtl
mov
dec
cmc
adc
push
add
inc
pop
mov
fimuls
xor
or
sub
jbe
clc
cwtl
faddp
out
jl
xor
and
sbb
das
or
hlt
pop
cld
mov
in
repz
jle
movsb
or
push
xchg
ljmp
jl
and
push
xor
icebp
pop
and
lods
sbb
jl
in
in
lahf
les
test
pushf
push
test
je
jl
xor
insb
dec
push
push
pop
pop
push
lret
adc
insb
or
divl
fcoml
push
iret
ja
lods
xchg
xchg
mov
xor
out
in
bound
fdivrp
mov
push
les
push
pushf
xchg
jl
sub
arpl
call
xchg
shlb
ljmp
jl
pushf
push
ljmp
out
shlb
sub
pop
push
incb
test
in
xchg
les
andb
subb
in
dec
push
pop
cmp
jecxz
scas
call
in
push
pop
fcompl
jnp
push
and
stos
pop
add
dec
hlt
mov
aam
in
addb
iret
mov
ja
js
js
pop
xor
test
xor
rorb
enter
inc
dec
pop
xor
out
and
pop
fimuls
xchg
lods
xchg
cwtl
mov
adc
sub
lock
add
jecxz
cmp
xlat
add
xor
clc
add
push
shlb
xor
inc
fs
sub
sub
or
in
pop
fcoms
iret
mov
mov
addr16
inc
push
dec
scas
xor
adc
pop
hlt
add
sub
sub
adc
mov
fs
push
mov
lds
jecxz
cmc
sbb
push
das
sbbb
mulb
pushf
cmp
pusha
inc
inc
out
mov
pop
and
dec
inc
out
push
sbb
xor
cmp
push
lahf
sbb
add
das
clc
push
cld
pop
call
mov
rol
enter
mov
loop
aam
dec
and
mov
js
mov
sahf
mov
inc
mov
outsb
dec
mov
out
cmp
mov
xor
nop
mov
cmp
jo
out
mov
mov
loope
mov
or
int3
jge
xor
add
cmp
push
pop
and
fdivrp
scas
mov
or
pop
pop
mov
sbb
clc
scas
fcoms
pushf
call
inc
cmp
inc
fidivl
clc
imull
inc
dec
xor
int3
fimuls
xor
fs
movsb
jno
call
pop
xlat
rcrb
ficoms
nop
mov
xor
sub
in
insb
inc
jne
insb
sbb
aas
cmp
mov
insb
jns
ljmp
inc
jg
sti
or
inc
in
scas
ret
cmp
sub
out
push
aad
inc
rcll
repnz
in
push
loopne
inc
dec
jae
inc
sub
loopne
inc
jbe
mov
ja
adc
add
lock
jp
inc
icebp
xor
or
loope
fsubrl
rorl
addr16
mov
xor
push
push
inc
adc
loop
je
xchg
inc
dec
fcoms
push
mov
jnp
das
and
push
cmp
dec
xchg
dec
cmovns
push
inc
nop
jl
das
xchg
fsubl
idivl
sbb
in
xor
pop
jecxz
into
test
inc
das
lret
mov
cs
je
xor
inc
lcall
xchg
and
cmp
incb
insb
pop
inc
adc
repz
insl
cli
inc
inc
inc
mov
jae
cmp
jno
adc
xchg
cmp
aam
or
inc
adc
dec
int
adc
dec
in
dec
adc
bndstx
jp
out
xchg
pop
insb
push
inc
sub
jmp
sbb
xchg
insl
push
ds
lods
lods
gs
mov
mov
sub
in
sbb
inc
mov
xchg
inc
add
xchg
cltd
nop
dec
sbb
mov
movsl
inc
xor
xchg
pusha
dec
inc
pop
and
inc
stc
ds
insb
dec
cmp
cmp
cwtl
xor
sahf
xchg
cmp
jae
test
filds
dec
pop
fsubr
dec
rorb
mov
jne
adc
dec
push
and
dec
in
or
outsl
icebp
pop
and
mov
je
inc
andb
mov
sbb
shll
imul
stos
add
push
jo
imul
push
dec
out
das
inc
add
notl
out
cltd
sub
mov
into
repz
scas
loopne
dec
jge
icebp
mov
mov
dec
cmp
or
roll
cs
lds
or
es
nop
pop
cs
inc
mov
mov
xchg
and
loopne
push
pusha
xchg
inc
shll
orl
in
lods
iret
imul
fwait
hlt
xchg
clc
mov
mov
xchg
jno
cmp
or
dec
inc
xchg
loopne
inc
mov
outsb
pop
push
mov
movsb
rorb
idivl
adc
and
ret
inc
mov
ja
leave
fdivl
repz
je
push
enter
xchg
pop
ret
mov
int3
mov
inc
xchg
outsb
ret
cmp
in
lds
das
in
dec
in
push
nop
and
imul
inc
cmp
mov
and
gs
popf
push
test
inc
out
es
insb
pusha
aaa
loopne
mov
sbb
insl
rorb
jp
dec
sarl
in
add
push
call
int3
push
jne,pt
push
mov
popf
imul
testl
mov
push
dec
xor
jge
jne
les
in
imul
rorl
fidivrs
insb
repnz
pop
push
inc
xor
lods
outsb
inc
test
mov
mov
pop
jb
inc
xor
in
xor
add
inc
inc
and
cmp
or
fisubrl
cmp
push
divl
lock
mov
out
dec
dec
popf
mov
sbb
ret
push
cmp
push
cmp
daa
cmp
pop
rorb
ljmp
sub
pop
adc
jb
dec
dec
movsb
and
fcoml
in
jecxz
xchg
mov
jmp
lea
das
test
test
fcoml
xchg
ja
inc
cmp
pusha
dec
lock
in
fisubs
xor
popf
ds
sbb
int
jno
repnz
xor
jp
pushf
repz
inc
and
push
mov
push
loopne
lock
adc
xchg
xor
or
jne
jge
jnp
outsb
pop
dec
pop
add
in
pop
rclb
adc
imul
cmp
lea
push
pop
pop
push
adc
jo
popa
inc
in
dec
ss
ret
xchg
lods
mov
pop
inc
push
jne
hlt
pop
dec
xor
int3
outsb
bound
pop
dec
sbb
mov
and
sub
fidivs
mov
cli
pop
repnz
inc
addb
dec
or
cmp
push
push
fs
call
std
jmp
dec
mov
imul
out
jle
mov
mov
push
in
dec
jno
dec
imul
inc
rorl
aas
xor
push
enter
dec
in
hlt
mov
hlt
out
sbb
pop
movsb
sbb
cmc
dec
cmc
inc
aam
test
xor
or
inc
stc
dec
and
stos
push
shl
push
xor
inc
fs
shrb
ja
dec
fstl
push
adc
xor
cmp
aaa
orl
push
jae
xor
jecxz
sarl
aam
cli
pop
and
adc
xchg
cmp
es
adc
inc
jle
xchg
aas
sbb
insb
xchg
mov
inc
lret
inc
cmpsb
jbe
mov
pop
insl
sbb
lahf
cmp
es
mov
push
aaa
divb
jp
inc
mov
xor
sub
data16
push
iret
or
dec
adc
dec
mov
nop
pushf
xor
out
ret
in
cmp
dec
sub
jp
test
sub
dec
sub
out
adc
mov
mov
iret
inc
push
inc
cmp
fsubrs
mov
xchg
adc
xor
shlb
xor
int
jno
push
nop
cld
addb
rolb
jnp
push
inc
mov
inc
inc
jne
inc
sahf
outsb
pushf
inc
stc
addb
insl
push
sub
inc
in
fcomps
cmpsl
shl
dec
cltd
xchg
rclb
mov
pop
das
incb
sbb
push
inc
std
sti
testb
add
cli
jg
les
cmp
test
adc
xor
cmp
sbb
pop
aas
insb
lods
xchg
icebp
sub
xor
pusha
add
mov
std
dec
out
jecxz
xlat
and
in
in
push
push
xor
mov
mov
std
dec
lret
push
lea
enter
push
pop
xor
std
pop
pop
pop
add
or
sti
ja
jno
insl
shlb
cwtl
dec
inc
inc
mov
icebp
jp
loope
icebp
out
dec
cmp
xchg
dec
adc
mov
lock
dec
pusha
or
aam
int3
jnp
cli
xchg
sub
ficoms
cmp
in
mov
out
incl
lcall
clc
dec
lods
ffree
sub
js
fs
jns
inc
add
inc
cli
ror
addr16
or
clc
dec
dec
pop
jecxz
jne
test
fildl
inc
inc
xchg
ds
mov
ds
out
mov
push
inc
fcmovnbe
jp
leave
je
sub
push
les
dec
jnp
out
mov
and
cld
mov
out
pop
inc
push
test
sub
gs
ds
adc
jle
out
adc
outsl
inc
push
inc
inc
xor
cmp
lods
dec
sbb
dec
mov
cmpsb
ja
dec
lret
push
js
movsb
jno
shlb
dec
cmpb
mov
cmp
sub
sub
movsl
xchg
xor
adc
jnp
inc
mov
add
pop
xor
adc
lock
dec
cs
cwtl
sub
in
inc
or
popa
inc
jle
ss
dec
xchg
decb
add
pop
push
cmp
outsb
loopne
das
lods
andb
cmpb
mov
cmp
adc
push
ss
cmp
decb
or
popf
cmp
insl
mov
sarb
imull
fildl
fmul
xchg
jo
sub
std
pop
dec
adc
jecxz
js
test
push
xchg
cmp
jne
lods
inc
jg
xchg
data16
cs
je
xor
inc
in
fidivs
ucomiss
nop
dec
push
dec
ss
jbe
mov
jecxz
and
sub
sahf
inc
mov
jecxz
rcrb
mov
cwtl
sbb
jle
dec
dec
out
cmp
jo
adc
stc
inc
xchg
out
jb
aas
gs
inc
dec
and
inc
out
je
rcrb
insb
mov
push
jg
adc
out
clc
sub
rclb
inc
fisttps
dec
mov
sub
insl
test
clc
push
xor
xor
push
push
pusha
ror
xchg
shl
mov
pusha
stc
lea
sar
mov
movzbw
cmc
mov
xchg
neg
mov
sub
or
pushf
xor
lea
setle
push
call
in
mov
call
xchg
inc
and
xchg
pusha
jg
jae
add
jbe
ss
int
jne
sbb
ss
loope
add
mov
dec
insl
cmc
pop
aad
cmp
xorb
or
pop
sub
gs
loope
out
add
pop
negl
sbb
xor
icebp
int3
daa
or
jmp
into
rcr
orb
push
mov
and
jbe
test
mov
filds
cmp
or
jbe
insb
and
push
pop
pop
test
js
arpl
or
cwtl
jo
cwtl
inc
push
pop
iret
fmuls
aam
or
push
add
mov
insl
fadds
inc
sbb
xor
or
mov
xor
or
daa
in
push
push
enter
pop
loope
in
or
pop
stc
in
mov
jno
pop
sbb
or
gs
push
and
loop
push
call
add
inc
rolb
xor
neg
movw
movb
jmp
lea
jne
mov
lea
movb
pusha
pop
not
pop
mov
pusha
lea
pushf
movb
movl
pushl
mov
pushf
pushl
pushl
ret
add
aas
jae
sbb
insb
cmp
jne
jae
sub
faddp
mov
dec
xlat
push
lret
push
stos
or
dec
sbb
stos
push
mov
cmp
pop
dec
jmp
xchg
mov
int
pop
mov
dec
daa
and
mov
shlb
mov
stc
ss
pushf
sub
lahf
cld
test
jmp
mov
bound
inc
loope
pop
scas
lret
xor
or
aad
call
push
pushf
repnz
pushf
lea
jne
jmp
dec
ja
aam
ja
xchg
pop
lods
fists
push
mov
push
xor
out
xchg
in
xchg
test
arpl
and
xchg
mov
addr16
cmp
icebp
pop
push
add
mov
aad
jns
or
xor
xor
arpl
cmp
scas
jmp
loop
das
and
movzbw
movsbw
lea
pusha
pusha
pushl
pushf
movl
pushl
jmp
mov
clc
movb
clc
cmpb
pushl
pushf
jmp
cmp
jmp
pushf
mov
pusha
movsbw
movzbl
pushf
mov
mov
pushf
pushl
ret
and
call
nop
nop
jae
das
inc
cmp
roll
adc
arpl
xchg
cmp
dec
add
loope
pop
aaa
xor
cwtl
or
clc
subb
inc
add
pop
pop
les
mov
fiaddl
out
into
push
push
ljmp
jle
pop
push
lods
jmp
rcrl
adcb
sbb
inc
pushf
adc
mov
out
add
pop
mov
test
mov
push
gs
or
push
jae
ficoml
popa
jnp
jmp
lds
sub
loopne
popa
inc
icebp
push
cvtps2pi
fs
mov
mov
sub
dec
test
push
fiadds
into
push
ja
shl
es
leave
add
mov
push
test
bound
sub
andb
mov
insb
call
std
or
dec
mov
jns
mov
push
aas
lea
inc
test
fs
repz
loopne
jb
movsl
dec
or
stos
mov
clc
cmp
pushl
lea
jbe
ror
mov
xor
inc
shl
and
add
xchg
mov
sbb
add
shl
add
bswap
xor
movl
or
mov
pusha
jmp
add
movw
lea
jmp
push
xlat
or
pop
push
addr16
and
in
mov
sbb
mov
out
lret
popf
push
lret
ret
jne
xchg
dec
arpl
aaa
stos
mov
push
xchg
cli
adc
mov
mov
outsl
and
iret
into
popf
cmp
mov
in
loopne
xchg
xchg
mov
cmp
add
lahf
push
sarl
jle
test
jnp
scas
lea
mov
mov
mov
out
in
add
mov
pusha
lea
jmp
mov
gs
pop
fsubs
sub
jnp
outsb
fs
fnstsw
mov
xchg
inc
stos
mov
lea
pop
movsb
dec
loope
pop
mov
loop
bound
xchg
xchg
inc
cmpl
mov
imul
pop
arpl
cld
fistps
adc
push
mov
xchg
dec
xchg
in
or
out
or
outsl
cmp
xchg
xchg
or
lds
cmp
cmp
dec
psllw
lret
and
fistpl
je
mov
call
pop
adc
scas
cmc
iret
or
push
xchg
sbb
iret
jge
movsl
pop
in
aad
adc
fs
or
mov
scas
jge
ja
mov
mov
ja
pop
cwtl
daa
or
pop
cmpl
pop
pmuludq
lret
gs
xor
push
lret
std
dec
movsl
xchg
insl
sub
push
or
push
popf
sub
les
adc
scas
cmc
idivb
jg
das
mov
sub
cmp
inc
push
inc
mov
stc
adc
pop
ret
insl
jl
xchg
jno
mov
pop
fisttpl
inc
xor
movsl
add
pop
test
or
orb
call
push
insl
js
movsb
push
addr16
jp
fisubs
xor
mov
push
sbb
cmp
stos
ficomps
subb
mov
cwtl
xor
cltd
lret
sbb
xor
aam
nop
add
mov
jg
test
fs
sbb
dec
jecxz
adc
inc
cmpsb
bnd
out
ljmp
jb
push
and
adc
fisubrl
rcrb
jmp
out
loope
lret
sub
jg
cld
xchg
dec
mov
push
iret
or
add
aas
outsb
mov
cmp
inc
pushf
pushf
pushl
ret
jge
imul
scas
incl
hlt
aas
stos
test
push
out
lods
bound
cmp
mov
lea
dec
pushf
and
mov
iret
leave
cli
rcrl
push
xchg
lods
push
das
cld
jno
push
mov
add
mov
jbe
push
nop
jb
int
ret
aas
xchg
popl
jne
lret
dec
or
repnz
add
call
sub
xor
and
js
adc
sti
mov
inc
in
push
or
nop
sub
xchg
push
xchg
or
adc
push
xlat
mov
loop
data16
mov
iret
mov
sub
lods
mov
jbe
scas
jbe
fnstsw
adc
jnp
test
ja
xchg
cli
inc
or
les
jp
ds
insl
mov
sub
fs
scas
mov
jmp
cltd
xchg
pop
movsb
imul
inc
loopne
lret
push
stos
inc
movsb
fists
loop
mov
call
push
pusha
pusha
pushf
mov
push
lea
jmp
cmpsb
mov
gs
cmpsb
data16
mov
les
stc
cmp
inc
jo
fldenv
scas
inc
ret
scas
dec
add
sub
fiaddl
std
pop
sbb
rcrl
cwtl
call
out
shll
sti
dec
jmp
test
in
insb
subl
in
pushf
lds
xor
inc
out
fcoml
jns
std
mov
inc
push
scas
sbb
push
lret
mov
inc
pop
pop
nop
out
push
xor
inc
in
or
xchg
enter
mov
call
push
push
mov
ficompl
jl
incb
adc
jge
aad
xchg
jge
out
sbb
dec
sarl
in
or
add
insb
push
dec
rcll
xor
nop
pushl
push
mov
flds
daa
sbb
incl
jmp
out
pop
adc
cmpsl
pop
cmpsb
xchg
sub
dec
mov
xor
adc
xor
icebp
or
out
jne
and
jge
mov
mov
inc
mov
add
cmpsb
push
test
inc
mov
inc
xor
or
in
inc
cmp
in
fcom
lahf
lds
mov
or
mov
ret
icebp
popf
mov
lret
in
add
add
int3
lea
sbb
mov
jns
adc
nop
push
pop
jne
xorb
jg
cmp
fiaddl
cmp
stos
or
outsl
dec
jo
inc
lret
mov
pushf
out
pop
nop
fwait
ljmp
aaa
add
add
call
jo
inc
test
pop
pushf
xor
jae
inc
inc
dec
stc
shr
jl
sub
clts
ret
faddl
or
pop
aam
mov
bnd
xor
push
pop
mov
loope
sub
loopne
shrb
jp
jp
mov
das
pop
fs
shrl
sub
xor
mov
xor
mov
sbb
loop
jl
inc
shrl
mov
cmp
stos
cmp
push
dec
test
sub
cld
add
cmp
jp
mov
call
add
xorb
pop
push
in
sub
xchg
pushf
aaa
dec
daa
in
pop
addr16
sub
ljmp
scas
adc
loop
and
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cwtl
shr
or
clc
inc
dec
nop
daa
aas
add
outsl
jl
pop
test
insb
negb
pop
xlat
cwtl
pusha
shrb
and
pop
rcr
mov
pop
xor
jge
es
or
sub
out
sub
testl
push
xchg
testl
mov
frstor
enter
pop
pop
mov
push
in
gs
repz
lds
cmc
mov
orb
and
xor
jge
push
loop
into
les
shrl
fbld
inc
jmp
je
bound
pop
addl
ret
cmp
add
insl
pushf
xor
sbb
clc
mov
cmpsb
fstpl
dec
sub
rcrb
mov
fstl
outsb
pop
pop
cmpsl
mov
rolb
jge
in
pop
adc
cmpb
aaa
outsb
xchg
pop
mov
stos
pop
or
mov
ret
and
fs
jne
pusha
btc
jmp
jmp
pusha
pusha
cmp
lea
ja
jae
call
mov
xchg
bswap
pushl
xchg
mov
push
mov
pushf
jmp
into
popf
pop
ret
fists
push
push
inc
or
int3
divb
and
add
cwtl
add
push
out
mov
add
or
sahf
imul
in
sbb
stos
mov
and
stc
push
or
das
xor
fnstsw
sub
jbe
inc
jle
xor
adc
pop
lret
push
inc
sti
cltd
addl
dec
inc
jbe
sbb
xor
jns
mov
inc
mov
gs
cld
cmc
sbb
xlat
cwtl
ret
test
or
xlat
addr16
std
loopne
mov
aaa
lock
dec
out
and
mov
enter
pop
dec
rclb
mov
in
mov
mov
inc
inc
inc
pop
sbb
fcoms
inc
jecxz
adc
incb
scas
hlt
add
mov
sub
mov
xchg
cmpsl
ljmp
test
and
test
jnp
xor
inc
inc
outsb
xlat
adc
pop
addr16
popf
mov
mov
mov
movsb
jno
mov
shrb
mov
jmp
rol
mov
loop
mov
int
mov
sbb
or
mov
sub
shrl
jae
mov
mov
ja
aad
rcr
dec
lahf
ret
hlt
jnp
xchg
xchg
jmp
iret
mul
pop
xchg
and
cmpsb
pop
mov
inc
stos
sbb
icebp
adc
jnp
aaa
mov
fcmovne
testb
popf
mov
mov
sub
xchg
aam
add
mov
dec
filds
push
pop
pop
repz
pop
inc
rcrl
pop
ret
or
sbb
adc
and
xlat
cmpsb
pop
fsubrs
pusha
loope
and
ret
sub
icebp
fdivl
outsb
daa
and
push
imul
out
jp
mov
test
mov
and
clc
inc
or
and
push
adc
stc
stc
sub
pusha
clc
pushf
pushl
popl
cmp
mov
cmp
push
jmp
jmp
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
test
and
add
add
push
pusha
pushf
lea
je
clc
add
call
push
lea
call
pushf
push
stc
test
sub
mov
call
mov
inc
call
call
neg
rol
mov
clc
push
cmpb
jmp
push
lcall
mov
stos
adc
fdivl
jae
sub
mov
push
mov
cld
rcr
lret
test
int3
jbe
xlat
jbe
cmp
xchg
std
testl
rcrl
icebp
jecxz
pmaxsw
dec
cmp
mov
sbb
movsl
push
xor
pop
rcrb
or
es
sub
call
stc
lods
push
dec
roll
es
aam
mov
les
pop
cli
inc
pop
outsb
mov
xchg
or
xlat
outsb
and
shll
loop
negb
dec
dec
pop
mov
lds
add
cmp
mov
lods
lret
fwait
sbb
daa
jmp
push
test
sbb
sti
popf
fmull
mov
xchg
repz
mov
dec
xchg
and
inc
psrlw
leave
jl
leave
js
fmul
fcom
sub
cli
imul
mov
push
negb
fisubs
jne
mov
inc
imul
push
xchg
mov
fmulp
bound
loop
arpl
mov
nop
or
out
cmp
dec
clc
xlat
out
int
inc
mov
pushf
xor
cmp
cmp
movsl
push
out
cmp
mov
jmp
inc
and
nop
sahf
mov
mov
nop
popa
or
nop
xor
bound
test
lods
or
js
xor
das
mov
jne,pt
stos
test
bound
add
cmp
sbb
push
lcall
mov
fadd
mov
into
leave
sub
or
out
jg
inc
test
sbb
loop
push
dec
mov
inc
loopne
dec
mov
sbb
add
cmp
cmp
xor
roll
popf
jecxz
mov
pop
movsb
push
mov
lret
push
sub
push
add
ljmp
idivb
xor
mov
stc
nop
push
inc
negl
sti
xlat
ds
jns
cmp
mov
jp
mov
adc
idivl
loop
jno
add
sub
pusha
clc
bt
mov
repnz
pusha
lea
jne
sbb
bswap
pushf
mov
dec
inc
sub
btr
cmc
btr
rol
lea
sub
stc
sub
jne
cmc
test
pushl
cmp
test
cmp
cmp
push
call
lea
ja
pushf
seta
pusha
sub
sub
mov
btc
bts
rcr
sub
add
stc
shld
btc
inc
mov
bt
mov
pusha
jmp
mov
sub
dec
cs
lods
aas
mov
insb
sahf
fldt
cmp
or
inc
mov
cli
in
and
jae
mov
out
iret
push
insb
add
pop
leave
push
rcr
sbbb
lcall
dec
loop
imul
push
push
add
inc
cs
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lea
ja
rcl
sub
pushf
shl
sub
add
bsr
not
mov
shl
pusha
rol
mov
pushf
pusha
repnz
movl
jmp
pushl
lods
sbb
neg
sar
bt
add
stc
and
neg
neg
rol
shr
xor
bt
inc
add
sub
setg
jmp
bt
test
cmp
pusha
jmp
pusha
pushl
popl
movb
bt
cmp
mov
pusha
call
mov
int
cmp
aaa
push
test
and
cwtl
aaa
cmpsb
sub
and
mov
mov
pop
dec
fistps
test
dec
jl
jae
shrl
lea
xor
pop
and
lret
rcrb
push
add
repnz
mov
push
adc
loop
in
aas
test
rclb
enter
sahf
push
pop
add
aam
cmp
leave
mov
mov
and
xchg
jge
push
adc
mov
bound
adcl
push
test
push
pop
mov
sahf
sbb
mov
std
xchg
and
cwtd
or
scas
or
test
push
mov
aaa
and
xor
add
pop
inc
insb
jbe
pop
int3
das
sub
dec
add
jnp
add
mov
xor
call
mov
push
enter
and
jle
mov
pusha
or
hlt
mov
mov
in
imul
xor
xlat
insb
push
mov
and
and
aam
adc
test
pushl
lea
je
jmp
push
push
inc
push
xor
cs
insb
add
test
add
movsbw
call
js
jle
pop
in
testb
sbb
hlt
cmp
jb
or
sbb
jge
push
push
and
push
test
test
xchg
pop
aas
stos
or
inc
add
out
sbb
cmpsb
sub
or
cmp
data16
push
scas
bound
or
imul
dec
lea
add
stos
mov
add
sbb
cmp
mov
or
sarl
lock
clc
aas
add
fildl
dec
jo
pop
mov
xor
and
push
jg
scas
gs
inc
insb
and
cmpsl
sub
loop
nop
adc
jg
mov
mov
or
gs
push
fwait
jo
sub
lahf
mov
push
push
mov
fmull
je
push
cmp
mov
cltd
cld
inc
or
push
and
popf
enter
imul
mov
adc
mov
push
rclb
icebp
or
push
aad
std
or
mov
xor
cs
je
sbb
enter
lahf
xchg
push
insl
mov
nop
add
aad
xor
nop
adc
inc
xchg
add
hlt
jmp
mov
js
push
xor
xchg
inc
aas
mov
pop
adc
rolb
xchg
clc
jnp
in
lds
cwtl
mov
andl
dec
das
or
pusha
push
push
jmp
add
xchg
jle
loopne
push
imul
mov
je
mov
push
and
jle
nop
icebp
xchg
push
negl
out
dec
sahf
hlt
arpl
sub
mov
push
decl
sub
adc
xor
sbb
fisubs
sarb
jnp
ficoms
pop
daa
sbb
push
mov
jmp
iret
sub
sub
mov
push
push
aam
insb
mov
sub
mov
sar
mov
fwait
xor
mov
lds
cmp
mov
mov
cmpsl
filds
jns
lds
call
mov
pop
xchg
pop
bswap
lea
pop
lea
movzbl
pop
push
pushf
pushl
ret
pushl
mov
pushf
lea
jmp
in
add
jno
mov
mov
in
pop
mov
lcall
sbb
hlt
or
mov
out
push
test
scas
dec
ret
adc
sahf
popa
cmp
iret
jp
jle
mov
cltd
add
push
je
addl
and
add
and
jg
insl
sub
push
imul
mov
ljmp
xor
testb
xor
orl
std
stc
fwait
fwait
jb
push
dec
sbb
mov
dec
xor
nop
jo
mov
sbb
pushf
stc
subb
and
mov
pop
movq
incl
or
jne
sbb
aad
mov
and
xor
cld
and
add
mov
sub
rcrb
insb
push
jne
push
loop
mov
movsb
mov
fs
sub
dec
cltd
inc
xchg
shrl
inc
enter
stos
inc
pop
ds
push
dec
dec
inc
lret
mov
xor
add
jne
adc
pop
sbb
loope
xchg
incb
out
mov
add
pop
int
or
loope
aas
mov
mov
lcall
jb
dec
add
andb
bound
cmp
out
jecxz
and
push
jecxz
pushf
dec
sub
inc
cmp
popf
pop
sahf
into
daa
mov
mov
mov
aas
andl
test
loopne
mov
pop
mov
ds
enter
in
xlat
or
xchg
rorb
hlt
pushf
test
neg
cmc
xor
push
call
fmuls
xchg
sbb
clc
jnp
add
mov
jnp
xor
add
or
sbb
sub
or
sub
sbb
cmp
and
and
jmp
and
cltd
inc
pop
adc
or
add
cmp
and
dec
mov
dec
loope
sahf
in
or
xor
addb
cmc
jp
dec
or
push
sub
sbb
leave
adc
xchg
dec
in
xorb
jbe
int
ds
mov
sub
mov
dec
push
imul
pop
add
jnp
lret
imul
pop
push
bound
mov
or
jl
outsl
arpl
nop
dec
repnz
in
repnz
adc
test
dec
inc
xchg
cmp
cmpb
push
pusha
lea
jne
sub
btc
call
jmp
mov
lea
pushf
mov
neg
neg
not
xor
mov
call
push
push
xor
xor
fs
insb
add
out
lret
mov
movsb
pop
xchg
adc
into
inc
add
mov
insb
fucomi
clc
pop
mov
add
push
ja
jg
add
out
test
xchg
fstl
mov
scas
loop
add
arpl
or
push
pusha
sub
cmp
bt
mov
pushl
cmp
mov
jmp
imul
call
pop
out
cmp
cli
xor
or
sahf
cmp
dec
fisubrs
in
inc
inc
orb
rcll
rolb
sub
xbegin
jo
jmp
int
push
mov
pop
imull
mov
in
repnz
add
test
adc
mov
inc
jg
pusha
cmp
add
cmp
lret
push
addr16
cmp
jnp
loop
scas
dec
jno
rcrl
jecxz
inc
test
mov
cmpsl
es
es
not
out
add
lahf
inc
pop
mov
cld
fadds
xchg
enter
lcall
cmp
xor
imul
or
movsbw
add
pushf
neg
dec
add
shrd
pushl
mov
clc
pushf
pushf
shr
jmp
push
pusha
pushf
pushl
ret
movzwl
lea
movzbw
mov
clc
add
pushf
test
jmp
push
lea
jnp
push
lea
je
cmc
cmp
or
push
call
inc
inc
dec
xor
cs
insb
add
push
pushf
pushl
ret
pushf
pushf
push
cmp
push
jmp
aad
popf
and
enter
subl
mov
mov
sub
idivl
mov
sbb
sbb
xorl
js
fldenv
outsl
negb
sahf
mov
push
int3
rcrb
mov
cmpsb
lahf
mov
repnz
jo
fmul
jl
mov
outsb
ja
xchg
and
mov
jne
sbbl
out
aam
or
push
pushf
pushf
movl
jmp
arpl
push
shll
ret
jmp
jl
and
inc
rcrb
movsb
shrb
push
xor
adc
pop
adc
bound
movsl
sbb
lock
test
idiv
mov
adc
or
mov
mov
imul
nop
call
cmpsl
cli
movsl
pushf
mov
add
out
sub
add
dec
je
inc
adc
leave
nop
outsl
mov
and
loope
sub
ja
lods
or
ficoms
loope
jnp
outsl
fists
dec
pusha
arpl
das
sbb
sub
leave
and
imul
xchg
fdivl
in
fmull
clc
in
jp
inc
jno
sahf
leave
push
mov
lcall
stc
add
stc
sub
dec
call
pusha
xor
lea
mov
fbld
adc
add
dec
stos
in
sti
popf
inc
pop
mov
push
loopne
call
mov
mov
andl
cmp
stos
fists
push
lods
mov
mov
sub
gs
fwait
popa
and
cld
jns
leavew
mov
pop
fiaddl
mov
push
push
int3
cli
lcall
and
inc
jb
jle
cmp
xchg
out
or
nop
fnstcw
push
repnz
or
xor
and
jbe
dec
iret
dec
xchg
sbb
mov
ret
lcall
inc
ror
loop
fiaddl
add
adc
mov
or
cld
cmp
sbb
fdivl
popf
roll
or
mov
pop
mov
pop
mov
mov
call
ret
out
inc
in
sub
inc
xchg
jg
lret
mov
cld
dec
prefetchwt1
or
pop
mul
std
xchg
adc
test
aas
lret
lcall
ret
and
mov
jg
movl
pop
fsubl
jno
insb
jae
sbb
pop
mov
loop
cs
lea
aas
pushf
xchg
btc
movsbl
bsf
mov
sub
cmp
shr
not
sub
clc
cmp
bsf
shr
push
call
push
lea
jno
stos
pushf
pusha
lea
jmp
arpl
mov
inc
add
push
lret
cmp
jl
and
pop
jp
xor
jp
mov
fwait
mov
dec
push
mov
aaa
adc
int
push
cmc
fsubs
or
test
add
xor
mov
notl
insb
cwtl
inc
fsts
inc
ret
push
imul
loopne
addl
xor
add
add
ret
add
add
add
add
add
add
add
jmp
add
or
xor
add
add
or
add
je
xor
add
add
or
add
add
addb
add
sub
cmp
add
add
call
js
add
jnp
add
push
and
pop
jg
add
add
add
cmp
jmp
xor
loopne
xchg
xchg
fmulp
cmpsb
jbe
or
mov
mov
aas
fiadds
xchg
arpl
mov
call
cmpsb
push
or
sbb
scas
stos
loope
push
and
sarl
imul
sbb
mov
adc
dec
testb
mov
sub
sar
bt
add
add
pushf
sbb
rcr
shl
mov
bt
test
pushf
pushl
lea
je
pushf
sub
bt
stc
cmc
clc
cmp
pushf
mov
push
lea
ja
cmc
stc
stc
clc
imul
test
bt
add
pusha
push
lea
jmp
push
pusha
mov
push
lea
jmp
lea
jne
btc
xor
shr
inc
mov
shr
add
dec
rol
cmp
mov
push
push
test
test
call
imul
bt
cmc
call
xchg
jb
push
in
jmp
sub
cmpsl
fisubl
pusha
cmpsb
in
push
lds
mov
cld
sub
pop
adc
in
and
repz
adc
push
mov
lds
in
or
and
cmp
xor
sbb
rolb
rcl
ds
push
idivb
add
adc
add
cmp
shrb
andl
sbb
sahf
lods
imul
mull
clc
or
aad
cld
jge
sbb
das
call
sub
and
or
inc
addr16
pop
rcll
and
sub
lods
xorb
sarl
int
jp
dec
shl
push
lahf
and
in
das
mov
mov
push
and
cmp
dec
nop
leave
out
dec
sbbb
cmpsb
pushf
mov
mov
pop
mov
lock
jle
ljmp
mov
clc
inc
cltd
or
out
pop
or
pushf
mov
in
ficomps
pushf
pop
les
movl
bound
js
call
in
sub
nop
std
xchg
les
mov
sbb
sbb
cmp
clc
ljmp
or
jne
and
jmp
add
stos
push
xor
jns
jg
or
dec
and
inc
cmp
enter
aam
pop
repz
and
in
mov
push
mov
jmp
stos
in
test
add
jp
lret
stos
mov
pop
adc
inc
cmp
jle
dec
xchg
adc
jmp
fcmovnbe
dec
daa
push
aas
dec
jmp
test
repnz
int3
pop
cmp
repz
xchg
ja
sub
ja
sub
scas
into
cwtl
or
call
insl
pop
insb
sbb
lock
nop
or
pop
inc
xlat
xor
test
jle
pop
testl
xchg
or
mov
pop
inc
mov
insb
pop
jnp
mov
xchg
test
xchg
sub
jmp
mov
mov
jge
jmp
mov
dec
mov
pop
rcr
fwait
and
xchg
ret
stos
fnsave
jae
xchg
in
pop
sub
add
inc
jg
cmp
jnp
sub
sbb
imul
std
in
das
in
sti
nop
and
mov
jl
fisubrl
sub
mov
cld
loopne
xor
pop
insb
test
faddl
mov
push
lret
stos
sub
or
test
sbb
nop
fdivrs
sub
mov
in
inc
or
imul
loop
jmp
mov
movsb
int3
pop
cltd
sbb
and
cmp
mov
sahf
aam
icebp
in
pop
in
imul
decl
inc
fdivs
xchg
cmp
mov
ds
jmp
outsb
mov
test
xorb
sahf
sub
divl
incl
mov
jo
cmp
lret
dec
adc
push
decb
xor
test
hlt
jmp
or
mov
btr
xor
inc
mov
aas
bsf
mov
movzbw
bts
movsbl
add
shr
sar
lea
mov
cmc
test
bt
or
jmp
lea
ja
call
sub
std
xor
mov
cmp
mov
outsl
rolb
movsl
cld
lret
adc
mov
xchg
into
orl
loope
shr
adc
mov
sub
sbb
rclb
test
inc
cld
mov
and
iret
cmpsl
adc
xor
mov
pop
fstps
inc
test
movsl
sbb
mov
out
adc
test
inc
adc
xchg
lret
mov
jp
inc
push
mov
or
cld
adc
cmpl
cmpsl
sbb
xlat
sub
mov
xchg
push
imull
or
xor
push
cld
mov
outsl
lea
jecxz
mov
rep
sbb
stos
lahf
inc
ret
aam
out
rcrl
pop
mov
xchg
mov
mov
pushf
pusha
lea
jmp
push
outsb
fdecstp
jns
ffreep
ja
xchg
xor
or
jg
imul
lock
rol
sub
mov
pop
sub
jnp
mov
in
mov
mov
cmp
pop
lret
in
outsb
das
addr16
in
in
mov
aad
lds
jns
push
out
sub
fwait
stos
push
daa
cmpsl
fs
outsb
sbb
pop
cmc
cmp
cmpsl
or
and
jne
loope
fwait
je
xor
mov
mov
loope
dec
push
push
xchg
xchg
mov
cmp
jl
data16
pop
dec
xor
jmp
or
pop
mov
dec
push
adc
aas
lret
and
or
inc
fstpt
mov
xchg
and
mov
inc
pop
xor
cli
cmp
popf
mov
shrb
popa
test
loope
or
jns
shl
pushf
push
or
lods
or
jmp
pushf
pushl
jmp
and
jmp
clc
mov
sub
adc
andb
div
add
mov
mov
fdivrl
shr
mov
jb
es
movsl
sbb
ds
pushf
pop
add
in
or
cltd
sbb
mov
dec
fists
inc
int3
and
lea
inc
shr
imul
hlt
mov
push
mov
sbb
dec
shll
movb
inc
cmp
es
pop
push
mov
aam
and
push
mov
sub
sub
inc
fs
add
dec
fiaddl
out
fucomp
xor
push
fs
jae
jge
cli
mov
mov
callw
insb
dec
pop
mov
arpl
push
add
enter
insb
popa
jmp
or
mov
ret
mov
cwtl
out
sbb
aam
les
mov
pop
sahf
jno
movsl
adc
mov
repnz
jbe
pop
mov
stos
rorb
pop
in
push
lret
sbb
insb
call
sbb
insl
ljmp
adc
mov
loopne
inc
daa
dec
pop
sbb
add
pushf
sub
mov
subb
out
cmp
pop
xor
mov
cmpsb
or
and
clc
inc
out
mov
or
cmp
xchg
jmp
and
sub
sub
ror
cmp
btc
push
add
add
sar
test
mov
clc
cmp
mov
call
cmp
adc
sahf
push
xor
sbb
in
jns
stos
int
shlb
aad
sub
jle
push
or
inc
lock
icebp
pop
out
aaa
cs
and
imulb
int
pop
pushl
pop
lret
inc
mov
setg
adc
nop
pop
xor
jbe
insb
push
ds
jl
jle
loop
fbstp
or
test
out
jmp
xchg
dec
mov
btr
sub
cmp
clc
mov
call
jmp
dec
sub
jg
test
neg
pusha
stc
call
stc
imul
stc
clc
pusha
add
pushf
movl
pusha
push
lea
jmp
mov
loop
jne
push
int3
sti
mov
ss
pop
stos
sbb
mov
ja
test
out
out
xor
jg
cltd
inc
sti
lahf
cmp
repz
movsb
inc
sbb
nop
jmp
js
popf
scas
inc
adc
js
out
sbbl
xchg
xor
mov
push
push
test
sbb
push
mov
scas
das
xlat
or
pop
ret
lods
dec
jmp
or
rorb
icebp
sarb
ret
adc
arpl
xor
stc
dec
in
mov
jb
mov
test
outsb
pop
lcall
xchg
data16
xor
and
or
sbb
in
clc
ljmp
ds
jb
push
mov
mov
sub
jae,pt
sbb
jne
arpl
push
int3
adc
mov
jge
inc
call
lcall
jle
adc
in
and
xchg
sbb
clc
push
sti
imul
enter
inc
sub
stos
shr
xorb
push
cmpsb
mov
jae
xchg
mov
mov
or
jg
shlb
adc
add
xchg
cli
jmp
orl
pop
jp
dec
mov
rolb
adc
mov
xlat
aam
cs
insb
pop
les
push
sbb
xchg
fucompp
pop
testb
push
popa
xchg
pop
fwait
adcb
or
sbb
push
icebp
dec
adc
xorb
push
enter
xor
sub
sub
scas
sarb
sub
dec
adc
insb
mov
imul
lahf
jno
arpl
sbb
lcall
loopne
decb
fildl
add
fs
pushf
push
fbstp
add
pop
lret
cmpsb
mov
ljmp
xchg
add
and
cmp
jp
mov
cmp
lods
pusha
or
ret
pushf
push
push
lods
inc
mov
js
pop
lret
mov
or
in
nop
std
test
xchg
xchg
bswap
or
pop
rolb
pop
pop
or
cltd
sub
std
lods
xchg
lods
mov
loopne
mov
test
leave
stos
push
mov
out
aas
in
mov
pop
inc
into
cmp
test
push
and
jg
mov
add
aad
adc
movsb
mov
push
daa
in
or
mov
cld
leave
scas
shrl
dec
mov
mov
jge
es
jno
jae
inc
icebp
push
sbb
or
pop
mov
sub
push
aam
mov
push
test
negl
xchg
insb
rcll
push
je
leave
aam
clc
cmc
jg
and
clc
add
push
cmp
mov
adc
xchg
rcrb
int3
or
mov
add
or
xor
stc
mov
js
adc
jne
xchg
inc
xor
in
test
sub
call
push
dec
jl
iret
gs
dec
gs
out
orl
cmp
daa
mov
xor
fadd
sbb
out
push
mov
and
popf
xor
sbb
mov
outsl
dec
fcmovne
jmp
lret
lahf
clc
bnd
in
notl
adc
jo
mov
mov
movsb
sub
aas
sbb
add
jnp
xchg
inc
or
dec
test
jmp
sub
pusha
pusha
lea
call
jbe
pusha
lea
jae
jle
mov
mov
mov
inc
push
call
cmc
add
sub
jmp
je
push
lea
jmp
idivl
dec
outsb
or
loop
adc
push
pop
mov
jnp
aaa
fsubrs
inc
insb
loope
inc
notb
test
sbb
push
addr16
sub
jl
push
xor
mov
inc
xchg
or
insl
mov
push
push
jmp
xlat
enter
cmp
mov
pop
sarl
mov
push
test
f2xm1
push
cmp
add
inc
lock
pop
stc
fldt
mov
jle
mov
test
js
and
mov
insl
js
sub
fidivs
jbe
cwtl
adc
movsb
out
cltd
ljmp
push
repz
fs
push
add
addr16
out
sub
pop
lods
div
inc
shlb
xchg
xor
je
pop
lea
lods
test
stos
loope
stos
stos
cmpsb
mov
jbe
inc
adc
xchg
fadd
int3
lret
or
in
outsb
cmp
or
fs
cs
movsb
inc
or
std
insb
or
shll
push
pop
stc
fidivl
sub
ret
test
ds
cmp
lret
cmpsb
xchg
mov
dec
adc
cltd
incl
sub
fcmovnbe
mov
loope
mov
in
out
cwtl
in
aam
out
mov
dec
call
inc
daa
xor
lods
dec
xor
pop
in
dec
not
mov
stos
movsb
sbb
add
and
in
or
mov
mov
arpl
jle
pop
rclb
loop
pop
std
dec
jecxz
ds
nop
sub
add
jle
inc
out
lods
or
aas
pop
inc
in
or
and
popa
or
out
add
mov
fadds
adc
gs
xchg
jge
inc
inc
mov
scas
lods
lds
adc
lea
insb
out
enter
or
jle
add
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
jno
xchg
dec
cmpsb
xchg
clc
jae
push
adc
push
fistpll
lahf
mov
lcall
xchg
inc
jmp
into
lret
mov
shlb
fwait
ss
jmp
pop
cmp
jg
inc
jmp
pushf
scas
repnz
scas
jns
lret
pop
fiadds
shrb
mov
in
mov
negl
jp
sbb
pop
test
cltd
vsubpd
faddl
mov
cltd
inc
ret
or
sbb
dec
push
stc
call
rorb
pushl
ret
push
mov
rep
bswap
pusha
bswap
bswap
mov
push
push
lea
jmp
lea
call
clc
test
push
mov
cmp
call
lea
jne
movsbl
neg
shl
bswap
mov
shl
sub
mov
rcl
stc
mov
stc
pushf
call
lea
je
pushf
mov
push
lea
jmp
call
clc
pushl
call
cmp
cmc
add
pusha
call
sub
pushf
cmp
call
ror
call
pushf
lea
call
jmp
push
dec
dec
dec
dec
inc
push
cs
insb
add
jmp
call
adc
inc
pop
fistpll
or
sbb
mov
sbb
pop
or
or
inc
sub
xchg
sub
hlt
mov
xor
cltd
sbb
mov
adc
jl
add
enter
add
sahf
xor
stos
xchg
adc
xchg
adc
jle
into
das
outsb
pop
lcall
add
adc
arpl
mov
sahf
xchg
movsb
test
adc
rcpps
in
cmc
cs
in
inc
xor
hlt
nop
cmp
xchg
ljmp
mov
hlt
movsb
insb
popf
imul
enter
imul
adc
dec
in
dec
mov
ret
mov
push
add
test
stc
cmp
bt
cmp
jmp
test
cmc
pushf
sub
clc
clc
pushl
popl
movw
cmp
call
cli
sbb
sub
outsb
mov
test
gs
in
mov
je
sub
sbb
xor
cld
mov
aas
ss
inc
hlt
mov
rcr
mov
in
lea
cmp
movsl
jae
dec
aas
mov
shrb
add
js
and
int
or
out
lods
and
data16
jg
or
xchg
mov
xchg
rcrl
fwait
push
jno
mov
dec
sahf
cmp
push
popa
cwtl
jb
and
push
dec
add
add
lret
aad
int
or
sub
clc
mov
dec
push
and
xor
add
and
fcmovb
cmp
mov
in
lahf
push
test
or
out
test
cltd
mov
lods
loop
ret
and
or
and
test
decl
out
movb
pushf
cwtl
movl
movl
mov
cwtl
bswap
mov
lea
jmp
jmp
or
andl
mov
lea
xchg
movsl
push
and
push
jne
jb
sub
add
add
minps
adc
insl
and
mov
fadd
ljmp
iretw
ja
mov
xchg
jo
push
js
dec
js
fidivl
lcall
outsb
mov
adc
cmp
push
mov
inc
out
sub
or
ret
bt
bt
add
stc
call
or
push
add
insb
cmc
fisttps
or
pop
mov
fildl
cmpsb
mov
inc
inc
mov
adcl
sbb
fdiv
cmpsl
pop
jbe
lcall
clc
sbbb
jmp
aam
enter
popf
mov
mov
mov
sbb
fsub
les
mov
jnp
cmp
jg
or
sarl
cmp
mov
pop
aas
xor
scas
and
fimull
loop
ljmp
loop
mov
cmp
bt
stc
test
call
pop
orl
insl
imul
cmp
jecxz
jns
sbb
daa
adc
dec
rclb
iret
mov
dec
stc
scas
cltd
dec
cmp
mov
or
mov
out
sbb
mov
daa
push
sub
push
xor
in
out
adc
insb
out
or
ja
jb
shll
mov
mov
dec
mov
jne
jnp
cmp
or
and
enter
cli
aas
push
lock
add
adc
cmc
and
fisubrl
push
mov
jne
jne
stos
dec
dec
xchg
inc
cltd
es
sti
cs
cmp
or
int3
ret
arpl
mov
jne
xchg
fiaddl
pop
loopne
movsb
push
addr16
das
adc
mov
inc
dec
arpl
adc
adc
ja
aad
inc
pop
test
fsts
hlt
xor
rcrl
xorw
cmpl
add
lods
add
std
out
aaa
int3
push
xor
test
sub
addr16
testl
mov
data16
fisubrl
test
call
lret
movsl
rorb
pop
in
jmp
mov
dec
and
mov
xchg
mov
pusha
repz
and
mov
add
sub
movsl
push
cmpsl
jge
cli
gs
out
popf
inc
sti
out
mov
inc
cld
enter
fisubl
xlat
mov
cmp
push
or
dec
cmc
push
add
push
pushl
dec
pushf
pusha
lea
jne
stc
xor
cmc
mov
pusha
stc
cmp
bt
cmp
pushf
jmp
addr16
nop
cld
xchg
mov
sbb
out
xchg
adc
jns
sub
mov
cmp
xlat
ret
push
outsl
clc
mov
add
nop
fisubl
lahf
subb
adc
lods
mov
push
sub
sbb
arpl
arpl
mov
add
cmp
roll
push
mov
dec
shll
fwait
pop
mov
and
insl
enter
adc
in
leave
sar
mov
cwtl
adc
nop
lahf
sarb
cmp
dec
adc
adc
out
push
into
je
movsl
mov
inc
loop
jp
and
sub
or
cmp
test
imul
dec
cmp
sarb
mov
movsl
jge
pop
fldt
pop
mov
cmp
in
dec
stc
sub
cmp
sbb
inc
lea
jae
pusha
movb
call
setno
mov
dec
mov
inc
pusha
dec
inc
pushf
mov
pushf
pushf
push
call
ds
rcrb
jbe
push
pop
dec
jmp
loope
les
and
push
cmp
shll
mov
inc
mov
mov
push
adc
test
add
enter
js
xor
adc
js
mov
shl
pop
or
into
add
sbbb
lock
cmp
lcall
jns
aaa
pop
decl
mov
loop
cmp
adc
push
and
test
add
lea
bsf
mov
stc
bt
test
cmp
shr
cmp
pushf
bt
cmp
push
push
movb
lea
je
stc
cmp
call
enter
mov
out
jnp
in
inc
lods
add
lcall
fnsave
leave
je
mov
inc
cs
xlat
aam
cmp
mov
add
sbbb
mov
mov
xlat
mov
lea
out
jae
sbb
sbb
jne
rolb
inc
out
mov
into
cwtl
sub
mov
movsb
out
mov
fdivrl
mov
stc
fcmovnbe
dec
clc
mov
ss
dec
xchg
ret
or
push
fwait
push
lods
fisttpl
inc
sbb
stc
loopne
ret
in
sub
test
js
pushf
and
cmp
rcr
mov
loope
xor
push
inc
add
sub
mov
lods
mov
pop
das
mov
xor
lds
sub
fmull
test
stos
adc
aam
xchg
mov
sti
fistpl
out
push
test
je
push
int3
or
cwtl
adc
add
ret
jo
out
sub
xchg
ljmp
jbe
push
popf
jl
pushl
dec
pop
std
jae
pop
sahf
xchg
push
push
adc
and
and
sub
cs
cmp
repz
push
pxor
xchg
and
xchg
cmc
outsl
icebp
jecxz
bound
xchg
cli
dec
int3
xchg
jecxz
xchg
pop
or
clc
mov
sub
dec
xchg
jecxz
push
ss
test
push
mov
or
or
fiaddl
das
shlb
shll
sub
int
cmc
mov
test
add
mov
mov
sarb
mov
in
js
mov
rorb
lret
jge
jae
mov
pop
inc
mov
or
aam
test
adc
idivb
inc
jbe
loopw
xor
push
lods
push
xchg
mov
aam
cmp
cmp
movb
mov
mov
mov
and
adc
sbb
loop
jbe
xchg
test
sbb
pop
into
jp
mov
cmp
lcall
nop
aaa
jno,pt
es
int3
xchg
mov
lods
dec
and
mov
in
loopne
adc
insb
ret
or
or
sarl
pusha
xor
fisubrl
clc
push
ss
je
xchg
gs
xorb
das
pop
xchg
mov
fildll
push
repz
sub
inc
cmp
mov
out
std
in
outsb
sti
sarb
mov
jmp
int
insb
and
pushf
pushf
pusha
pushl
ret
setbe
lea
add
bt
neg
bsf
adc
mov
cmp
mov
jmp
push
out
stos
inc
jmp
sbb
jns
test
sbb
inc
push
pop
xor
aad
push
push
mov
in
in
fdivrl
dec
pushf
cmp
mov
test
mov
cmp
fnsave
inc
xor
aaa
push
outsb
test
mov
outsb
and
insl
aam
leave
mov
fwait
iret
ja
jmp
adc
mov
fs
pop
ret
mov
faddl
mov
add
push
xchg
or
idivl
xor
les
inc
insl
scas
jmp
mov
mov
imulb
sbb
ret
ret
sub
aam
ret
mov
sub
mov
cs
sub
data16
inc
in
lods
dec
xor
mov
mov
push
sahf
cld
xchg
inc
cmp
xchg
out
cmc
dec
pop
pop
xchg
inc
jmp
loope
sbb
stos
jle
mov
add
rcrl
or
or
mov
imul
jp
inc
fisubrl
jns
repz
inc
inc
clc
push
pop
jle
pop
and
fidivrl
and
mov
enter
mov
cmp
dec
loope
fiadds
das
sub
pop
mov
movsl
xchg
jmp
nop
mov
jp
mov
sub
jp
mov
ljmp
push
inc
mov
lods
in
xor
stos
mov
clc
shl
mov
das
cli
sub
ljmp
imul
push
jecxz
aam
inc
imull
push
xchg
aas
cmc
lods
mov
pop
or
sub
in
xchg
jmp
mov
ret
dec
addr16
test
cld
mov
rcll
mov
test
enter
cltd
aas
sahf
loope
xchg
sub
loop
add
inc
or
call
dec
arpl
push
mov
push
pshufw
jnp
sbb
out
jmp
xor
in
dec
add
iret
faddp
sbb
push
test
xor
xchg
dec
jecxz
into
fwait
lds
stos
push
pop
movsb
xchg
jmp
xor
iret
and
mov
and
insl
mov
push
ljmp
sub
xor
clc
cmp
notl
jge
lds
lods
out
inc
or
mov
sub
sbb
mov
test
push
and
jns
fildl
pop
out
dec
inc
sub
data16
fimull
outsl
and
pop
mov
rorb
data16
lret
pop
mov
and
and
pop
xor
and
fbstp
mov
arpl
ss
cs
cmp
or
inc
or
adc
or
stc
dec
aam
jl
xchg
inc
mov
daa
cmpb
inc
cmp
pop
pop
adc
icebp
arpl
cmc
stc
jbe
call
jnp
adc
pop
sbb
or
pushf
stos
push
pop
pushf
inc
jbe
jae
push
adc
test
xchg
pop
jge
xchg
std
test
sub
or
sub
inc
mov
sub
and
mov
or
int3
add
dec
gs
popa
addr16
outsl
js
add
xchg
ret
ljmp
mov
add
sbb
incl
sti
mov
sub
jmp
mov
testb
mov
gs
push
inc
jge
repnz
outsl
sbb
mov
jmp
inc
push
push
std
cmp
pop
ret
test
shlb
lods
push
cmp
and
pop
call
jo
pop
das
data16
rcrb
daa
xor
cld
or
stos
adc
hlt
mov
cltd
jg
mov
arpl
mov
pop
lods
call
mov
jle
pop
sbb
incl
push
inc
push
dec
xor
cs
insb
add
lock
and
push
jge
lods
rcll
scas
mov
push
out
ret
push
mov
jno
xor
inc
orl
lods
iret
push
ljmp
cmpsb
fldt
ror
aaa
movsl
fmull
or
push
call
xlat
cmp
std
jl
je
movsb
aam
call
pusha
or
jb
clc
dec
scas
jmp
add
in
call
jno
or
and
scas
mov
pusha
ficompl
inc
sbb
loopne
mov
push
in
into
popa
popf
in
pop
repnz
sub
inc
mov
hlt
movb
divb
sahf
or
push
dec
ret
push
clc
jg
stos
scas
iret
insl
jecxz
cltd
lods
inc
xchg
xor
nop
inc
out
inc
xchg
rcl
mov
mov
mov
mov
mov
pop
outsb
add
cmp
and
in
cmp
add
fsts
hlt
jb
pushf
popw
rcr
ror
sar
mov
clc
cmc
stc
cmc
add
pushf
neg
test
movw
push
xor
jmp
shrd
jmp
je
xchg
add
mov
adc
sub
sbb
pusha
shr
shl
inc
mov
sub
mov
add
sub
mov
add
cmc
or
shl
mov
mov
cmc
shr
call
mov
jae
push
into
mov
cmp
sub
jmp
data16
cmp
mov
loope
jp
push
aas
repz
adc
fisttpl
leave
cld
ret
shll
adc
sbbl
pushf
fnstsw
in
inc
mov
mov
jl
mov
rolb
dec
repnz
jecxz
cwtl
sub
push
fwait
add
mov
sti
movsb
dec
mov
sub
jb
iret
and
cmpsl
cmp
or
jl
bsr
mov
jmp
mov
scas
aas
mov
jp
or
inc
inc
test
xchg
ss
add
lock
adc
and
fwait
or
repz
and
pop
push
mov
push
inc
and
xor
push
sbb
jle
push
rolb
sbb
cltd
and
jnp
loope
mov
sub
into
or
mov
cs
or
repnz
mov
adc
in
jg
pop
pop
or
push
out
jns
leave
dec
mov
fimuls
xchg
mov
lahf
rclb
push
and
sbb
cmpsb
ret
hlt
mov
sarl
fimull
or
sbbl
outsb
sbb
pushf
movsl
inc
call
jne
cmpl
popa
add
push
insl
fsubs
sub
push
rcll
arpl
mov
rcl
mov
add
jb
pusha
jmp
movb
mov
dec
cmc
pusha
stc
pushf
shl
mov
call
sarl
repnz
xor
lods
pop
jp
mov
push
xchg
gs
test
popa
xor
js
pop
push
int3
stos
stos
and
mov
fwait
cs
insb
divl
and
lea
pop
andl
mov
add
out
into
adc
or
xchg
or
out
cmp
lods
imul
xor
mov
popa
loope
add
jl
xor
mov
imul
aaa
cmp
jmp
lret
cld
cmp
jmp
in
loopne
push
imul
xchg
sbb
cltd
xchg
mov
and
daa
lds
mov
sub
pushf
sub
sahf
sti
andl
orb
testl
xchg
cmp
out
mov
jbe
data16
fdivp
lcall
push
scas
lea
bswap
mov
mov
bswap
mov
mov
jmp
mov
pusha
pusha
movb
stc
test
lea
jno
push
lea
je
test
push
mov
add
push
pushf
clc
cmp
pusha
lea
jne
jb
stc
call
bt
sub
jmp
cmp
cmp
mov
or
pop
inc
or
aam
arpl
or
mov
xchg
mov
icebp
ret
fsubr
ss
lcall
mov
movsl
add
ficoms
push
shrb
icebp
fbstp
fisubl
bound
mov
insb
movl
mov
pop
lods
test
jno
xlat
lcall
fisttps
mov
mov
clc
stc
test
bt
and
test
pushf
jmp
pushf
push
lea
jne
shl
sub
call
xchg
mov
mov
call
jmp
pop
pop
jmp
bound
ret
push
test
add
xor
xor
mov
adc
fsubl
int
xchg
clc
lods
jge
movsl
pop
adc
add
loop
mov
pusha
rorl
aas
fmull
nop
fistps
cmp
mov
mov
push
stos
sub
fisubs
push
sarl
xor
dec
xchg
sub
xor
aad
mov
pop
mov
jbe
in
imul
xchg
test
mov
pusha
pop
cltd
cmp
pop
out
inc
xchg
in
add
push
mov
sub
add
or
xchg
or
sub
adcb
jb
or
jo
neg
pushf
pushf
cmc
xor
pushf
call
rep
pop
mov
pushl
push
push
push
lea
jmp
sahf
mov
push
push
adc
pop
repz
jmp
inc
dec
stos
sub
mov
aad
sub
pop
mov
mov
out
or
mov
and
int3
test
lahf
std
push
fwait
scas
pop
fdivs
cli
lret
cli
bound
hlt
add
rcll
pop
sbb
movsb
in
mov
xchg
mov
xchg
out
push
cmovge
push
jecxz
jg
xor
or
jmp
sbb
enter
insl
fsubr
fcoml
jl
mov
inc
hlt
cmp
push
sub
and
out
dec
enter
rclb
mov
push
out
fptan
outsl
cmc
pushf
xlat
mov
out
mov
push
pop
dec
stos
test
inc
fsubs
mov
push
aad
ja
mov
cmpb
fs
jb
push
fldenv
add
outsb
sub
mov
cmp
mov
call
sub
adc
mov
cmp
sub
andl
call
divb
xor
mov
in
mov
xchg
mov
and
sub
xchg
dec
movsb
sbb
jl
sar
inc
jp
into
mov
sub
push
sub
xchg
fwait
in
std
nop
push
hlt
jnp
add
xlat
mov
test
pop
dec
mov
push
or
mov
mov
jle
incb
outsb
jge
pop
pushf
pop
mov
outsl
leave
pop
adc
sub
dec
movsl
in
jg
cmovbe
xor
aad
sbb
inc
jp
push
push
fisubrs
push
sar
pop
or
iret
sahf
inc
shl
mov
cmp
push
fs
mov
pop
cli
add
xor
pusha
push
and
or
out
fbstp
lahf
in
ror
mov
dec
scas
or
out
push
inc
mov
mov
or
cmp
push
mov
aaa
loope
in
pop
push
pop
or
add
push
repnz
cwtl
sbb
cli
loop
pop
cltd
loopne
repnz
jb
insb
mov
mov
mov
mov
mov
aad
call
push
add
or
leave
sub
leave
dec
mov
sbb
data16
push
mov
aam
xor
mov
xchg
test
cmpsb
jecxz
add
xchg
in
inc
mov
pusha
and
addr16
push
in
and
adc
adc
rolb
inc
mov
and
cmpsb
jo
repnz
das
in
mov
push
jmp
sti
aaa
mov
sbb
push
stc
rcrl
mov
scas
inc
or
mov
mov
push
jne
mov
sarb
test
pop
outsl
add
xchg
xor
push
nop
stos
jne
das
call
adc
into
and
aaa
or
or
jl
bound
leave
inc
jbe
sub
out
int
adc
ljmp
xchg
mov
hlt
jno
jg
out
push
xchg
xchg
js
sbb
jbe
fbstp
loope
adc
fdivrl
insb
cmp
pop
sti
mov
mov
outsl
fcmovnbe
cmp
adcb
cli
ljmp
sbb
lods
cld
inc
imul
in
mov
pop
dec
movsl
mov
outsl
push
lods
xchg
jge
mov
cmpl
loopne
ret
xor
pop
adc
cmpb
xchg
fs
xchg
jb
jb
lods
ja
mov
jp
push
in
xor
ljmp
lahf
pusha
jle
sahf
movsl
xchg
jle
sbb
loop
inc
xlat
xchg
mov
sbb
jo
movsb
faddl
pusha
into
fidivs
into
repz
mov
mov
pop
xor
inc
popf
into
inc
mov
xchg
test
ret
jns
sub
dec
mov
mov
stc
int3
inc
ret
loop
out
push
pop
mov
nop
xorl
mov
cmc
and
aaa
sysenter
ljmp
dec
xchg
sub
add
mov
push
mov
ficoml
push
nop
outsl
dec
test
loopne
mov
jbe
fwait
mov
outsb
push
and
xchg
cmpsl
rorl
jno
push
jbe
std
and
in
loop
aam
icebp
outsl
xchg
leave
out
loopne
imul
pop
bound
into
scas
push
fcoml
cmp
dec
mov
cmpb
lahf
lods
push
xorl
or
dec
scas
add
mov
adc
jecxz
mov
adc
in
loopne
lcall
sbb
mov
lahf
xor
movsl
jne
dec
mov
jne
xchg
jmp
fisttpl
stos
lods
mov
mov
lods
rorb
call
xor
rorb
adc
cmp
dec
mov
push
testb
sub
ljmp
cmp
in
pop
add
movsb
xchg
pop
dec
xchg
push
mov
pop
leave
pop
adc
fiadds
xchg
mov
mov
mov
pop
mov
sbb
add
cmp
mov
push
jno
inc
add
imul
xor
push
adc
loopne
in
push
push
mov
push
bound
imul
bndstx
frstor
lcall
dec
daa
pop
test
mov
js
aas
fisubrl
mov
out
mov
push
lcall
fdivl
orb
pop
imul
add
or
jno
outsl
jp
les
test
cli
jbe
sbb
cmpsb
call
mov
lret
push
and
xor
ds
dec
nop
mov
sbb
dec
or
mov
push
test
jle
imul
cmc
xor
jae
mov
or
movsb
repz
pop
lret
mov
cli
shlb
clc
xchg
in
into
and
pushf
add
ss
rcrl
and
fsubrl
lock
ljmp
jge
stos
cmp
rcrb
test
xchg
or
jbe
xchg
or
adc
aas
push
out
loope
mov
dec
mov
scas
popa
int3
jmp
cmpsl
mov
push
sti
rorl
jg
xor
push
xchg
lahf
push
adc
in
sub
push
test
mov
je
and
insl
mov
jmp
lret
push
bound
pop
loope
cmp
popa
pop
and
dec
mov
jmp
push
or
outsl
sub
jle
dec
push
push
sub
inc
lods
movb
addr16
test
push
and
dec
add
adc
mov
loope
mov
mov
cmp
adc
dec
in
mov
mov
insl
sub
jno
shll
add
stos
stos
mov
mov
and
fldcw
or
ret
into
push
cs
cmp
mov
cs
insb
js
mov
push
fmuls
ja
adc
lcall
add
jo
jl
lea
push
inc
mov
dec
out
xchg
bound
fldenv
fldcw
fists
pop
fs
and
xchg
push
rorl
pop
pop
repz
mov
test
add
pop
add
add
adc
adc
idivb
daa
stos
popf
iret
sub
aam
insb
xchg
stc
scas
mov
xor
sbb
cmp
mov
add
xchg
cmp
sub
outsl
sbb
dec
push
mov
inc
stos
jb
mov
js
pop
mov
xor
adc
cltd
or
in
insl
add
insb
test
mov
fidivrs
popa
pop
cltd
add
cld
lret
pusha
fwait
clc
sti
or
mov
cwtl
bound
push
movsb
sbb
xor
mov
roll
push
sbbl
leave
test
int
test
xchg
inc
mov
mov
and
push
mov
jge
pusha
jb
pushl
pop
mov
jg
sti
pop
jnp
ja
insb
adc
fxam
addb
xorb
or
mov
leave
dec
and
mov
testl
or
xor
xchg
fdiv
fldl2t
mov
xlat
int3
lods
addr16
pop
sub
pop
cwtl
in
or
pop
sbb
hlt
fldlg2
jg
xchg
pop
int
mov
xchg
shll
sub
jne
std
dec
out
sub
mov
stos
dec
outsb
mov
lea
and
sti
dec
fsubs
pop
and
xchg
inc
jecxz
jp
ficoms
jmp
stc
mov
or
loopne
pop
xor
cmp
in
test
loop
aad
dec
rclw
rorl
and
xchg
inc
xchg
mov
inc
stos
imul
in
int3
mov
and
inc
out
icebp
push
lods
fisubl
push
in
js
loopne
cmp
fisttps
addr16
pop
das
lret
or
sbb
xchg
cltd
cmpsb
inc
cmp
and
mov
nop
jmp
das
jne
sarb
or
cmp
cmp
repnz
pmaxsw
push
xchg
xor
sahf
hlt
push
pop
jecxz
fidivrs
ja
sti
cmp
bound
and
xchg
enter
lds
jg
or
xor
es
ds
mov
lcall
in
xchg
call
push
enter
lahf
repnz
out
insb
and
mov
inc
mov
sahf
xchg
pop
ljmp
fisttpl
sbb
mov
outsl
adc
lcall
fimuls
fwait
cmp
inc
sub
mov
dec
loope
xchg
fwait
call
jl
rcrb
shrb
xor
cmpsl
sbbb
lcall
movsl
repz
out
aam
or
inc
push
inc
fwait
pusha
push
push
sub
adc
je
add
faddl
or
test
nop
add
or
loope
subl
pusha
popf
roll
out
jp
out
mov
ljmp
imul
notl
fdivrs
xchg
mov
xchg
mov
cmpsb
xor
fildl
mov
and
sbb
inc
out
sbb
inc
sahf
add
daa
push
jmp
xor
mov
mov
scas
mov
xchg
pop
mov
rolb
lahf
fdiv
cmp
mov
jne
pop
jns
out
out
push
jmp
and
sub
ljmp
pusha
aam
movsb
or
mov
es
mov
add
rorb
push
xchg
push
mov
cs
push
ljmp
lahf
mov
rorb
gs
int
xchg
sbb
mov
mov
or
or
xor
mov
sti
mov
ds
and
sub
sbb
cmp
les
in
dec
mov
mov
in
js
push
xor
das
in
loop
sub
jb
inc
sbb
sbb
pop
cmpsb
call
mov
repnz
stc
xchg
dec
dec
jns
xor
jg
aad
dec
mov
aam
jmp
jae
pop
cli
mov
bound
or
cmpsb
fldcw
jbe
ret
mov
sub
add
cmp
call
push
leave
cmp
js
repz
negb
and
mov
xorl
pop
push
xchg
addr16
adc
in
mov
inc
jle
lret
pop
xchg
out
sbb
movsb
loope
pop
mov
das
test
sub
mov
push
cmpsl
sbb
repz
push
push
push
pop
cmp
negb
pop
cs
lret
sub
int
jge
push
or
pop
popf
mov
mov
arpl
inc
test
nop
outsl
in
scas
rorl
inc
mov
loope
test
sahf
adc
jmp
jle
dec
mov
aam
xor
lahf
inc
and
ret
out
addr16
dec
sahf
insb
lock
mov
test
scas
insb
push
or
das
jne
insl
in
adc
dec
aaa
mov
xor
mov
mov
lock
mov
mov
data16
or
stos
push
jmp
mov
push
jns
ja
and
sub
int3
lahf
cmp
fcoms
mov
sub
pop
and
fisubrl
cmp
mov
dec
xor
sub
lods
repnz
sub
inc
test
sub
xor
pushf
add
pop
jno
inc
mov
push
cltd
add
pushf
out
stc
push
fidivl
lds
and
jno
adc
cmpsl
gs
xor
inc
movsl
and
jo
push
dec
jno
rcr
sti
ljmp
scas
mov
cmpsb
scas
aam
in
mov
adc
rclb
pop
shrb
mov
stos
cmp
test
add
rol
popf
cmp
mov
mov
pusha
sbb
xlat
gs
mov
fsts
mov
test
xchg
andb
addr16
pop
inc
xor
lock
ficoml
adc
into
sahf
inc
sbb
and
mov
ss
adc
subl
pusha
push
ud0
jecxz
mov
in
sub
sbbl
stos
ret
mov
shll
cmp
pop
shlb
popf
insl
push
pop
jl
aad
fcoms
shll
sbb
daa
or
vpmaxsw
stc
cmpsb
jecxz
jmp
add
pop
fs
mov
mov
adc
or
mov
xchg
fiadds
in
add
dec
stos
subl
jl
sub
mov
fiadds
in
xor
jl
and
and
add
jmp
or
fstps
sbb
cld
imul
inc
fisubrs
out
imul
lahf
push
pop
jae
orl
and
popf
iret
fcoms
xor
mov
sbb
iret
mov
sbb
pop
mov
cmp
movsb
xor
outsl
and
popf
sahf
cs
in
pop
int
fmuls
push
call
inc
xchg
stc
imul
test
dec
rcl
aaa
pop
lret
cwtl
cmpsl
xlat
pop
push
icebp
or
mov
mov
pop
ljmp
dec
sbb
je
ja
fmull
ret
in
dec
or
mov
add
mov
xor
and
pop
lds
pop
mov
xor
hlt
mov
insb
ss
inc
movsl
adc
mov
nop
or
movsb
lods
pop
mov
dec
bound
pop
pop
imul
test
sbb
rcll
mov
and
or
mov
shll
popf
add
in
cmp
jl
int3
aad
shlb
repnz
push
fsubl
add
fxch
lahf
repnz
cmp
mov
ret
out
movsb
test
mov
or
cwtl
call
xor
lods
cli
bound
add
jne
aas
add
mov
subb
test
push
out
shlb
mov
xor
push
cmc
dec
xchg
adc
dec
sub
repnz
pop
ror
and
loop
xchg
aad
popa
stos
test
js
dec
and
mov
aad
cmp
test
outsl
ljmp
push
mov
rorl
push
cmp
pop
mov
push
pop
mov
mov
dec
out
mov
clc
insb
xchg
sub
xor
cltd
in
cmp
ss
movsb
fldt
mov
mov
push
mov
ficoms
sahf
stos
dec
leave
xor
xor
adc
test
outsl
imul
inc
movsb
adc
test
aaa
aam
jns
lcall
stos
rcr
in
inc
pushf
fs
stc
inc
or
mov
sub
jge
pop
xchg
pop
shrb
mov
daa
mov
dec
sbb
inc
push
call
shll
xor
mov
cmp
mov
aas
jae
and
push
cmpsb
add
push
scas
out
mov
inc
push
sbb
xchg
push
mov
jg
dec
fisubrs
ficoml
outsl
or
dec
or
mov
push
int3
pop
push
mov
aad
add
out
cmp
movsb
ljmp
cmp
in
push
push
out
roll
idivl
mov
out
or
popa
mov
adc
dec
test
xchg
mov
dec
in
pop
pushf
xor
jmp
data16
mov
aad
fs
jne
loope
das
dec
and
dec
xlat
in
outsb
and
in
stos
jnp
sub
js
jo
sub
or
ljmp
push
cmp
mov
into
rcll
test
repz
aad
lea
cmp
xor
inc
push
pop
enter
stos
push
xchg
push
aaa
xchg
sub
mov
and
inc
add
test
jns
sbb
pop
testw
jl
or
push
iret
mov
push
sub
push
stos
sbb
loop
push
cltd
std
mov
add
repz
lods
dec
fcmovbe
cmpsl
pop
pcmpgtw
mov
inc
adc
sub
testb
xchg
push
lds
dec
sbb
iret
dec
inc
inc
mov
add
jmp
pop
clc
pop
lods
outsl
and
and
fwait
rcrl
cs
and
movsl
outsl
pop
test
jle
or
jnp
mov
adc
and
xchg
dec
push
mov
pop
cmp
sub
cwtl
and
sbb
fistpll
in
jge
addl
nop
pop
test
aad
pop
push
out
ffree
cmpsl
test
popf
jg
mov
gs
sbb
mov
mov
add
jp
xor
cltd
and
popf
jno
and
arpl
stos
mov
imul
sbbl
mov
aam
lret
dec
pop
xlat
es
arpl
imul
or
sbb
cmp
scas
and
adc
mov
adc
das
ljmp
les
cmc
lds
movsl
ret
push
pop
sbb
add
mov
or
fisubrl
dec
imul
mov
adcl
mov
int
sub
dec
dec
iret
movsb
je
fdivr
pop
jg
dec
add
lock
mov
xchg
adc
mov
pop
push
jno
mov
ja
nop
mov
loop
cmpsb
lock
out
push
xchg
cltd
sbb
cmpsb
ret
push
cmp
push
xor
adc
inc
mov
ret
shll
das
push
or
std
sbb
and
ja
lcall
in
mov
pop
jmp
mov
mov
mov
jae
push
in
lret
push
ja
xchg
mov
retw
pop
sub
jle
dec
in
int
int
imul
xor
in
pop
shll
sub
mull
mov
clc
rcrl
lea
pop
pop
in
mov
dec
popa
cmp
adc
out
add
inc
or
and
call
pop
scas
or
std
std
pop
shrl
inc
xor
pop
inc
jmp
sarl
outsb
icebp
push
add
mov
imul
push
push
std
sub
mov
adc
jp
testb
sbb
lods
cmp
inc
fwait
cmpsb
jge
loopne
adc
mov
mov
into
popa
sub
pop
sub
test
gs
push
xorb
shrb
lret
mov
jo
sahf
lock
ja
je
adc
xchg
jl
leave
lret
call
nop
push
fisttpl
clc
stos
test
dec
ret
xchg
adc
adc
xlat
mov
cli
mov
mov
mov
mov
jl
enter
dec
sub
and
mov
cli
mov
mov
movsl
insl
sub
adc
mov
aaa
repnz
insb
cmp
mov
push
add
movsb
cli
push
lcall
or
aas
xchg
inc
sti
and
add
adc
dec
or
jp
scas
dec
xlat
xlat
jae
test
adc
sti
ljmp
dec
stos
cwtl
bound
push
mov
mov
dec
pop
repz
outsb
cmp
sbbb
imul
inc
aaa
xchg
dec
sbb
pop
jge
cmp
mov
std
and
cs
xchg
sub
jle
inc
xor
mov
ss
mov
jl
lahf
jge
or
lock
pop
sub
adc
loop
lret
sub
repnz
icebp
add
mov
xchg
test
mov
add
pop
and
js
sub
add
and
outsl
mov
insl
mov
add
cmp
xor
sbb
loop
jl
xchg
enter
shll
adc
cs
xor
cmpsb
dec
xchg
add
cmc
scas
inc
shl
sub
cmp
iret
lcall
push
xchg
jecxz
adc
imul
out
sub
js
into
mov
lods
xchg
outsl
leave
mov
mov
dec
test
mov
pop
dec
add
out
loope
mov
pop
fcomp
cmp
movl
pushf
fsts
loopne
in
inc
mov
loop
gs
or
mov
add
and
and
and
and
test
mov
xchg
or
inc
jp
dec
and
dec
sub
xchg
mov
ja
jns
call
jne
arpl
xor
mov
fstp
push
pop
xor
or
cld
jno
mov
lahf
push
inc
dec
ret
sub
test
xchg
push
in
xor
pop
and
jecxz
push
leave
push
out
test
movsb
aaa
pop
lea
fisttps
pop
or
js
sti
cmp
sbb
push
movzbw
sub
add
sar
bswap
rol
mov
setge
mov
pusha
pusha
repnz
jmp
mov
mov
pushf
movl
lea
ja
push
pushf
movl
pushf
lea
jmp
dec
sub
subb
mov
test
xlat
cwtl
jg
lea
pop
xchg
shll
sbb
or
jne
adc
stc
std
jns
fstl
adc
iret
aas
sbb
cmp
mov
cmp
inc
leave
jmp
movsl
arpl
push
pop
jae
cmp
insb
or
push
push
mov
fldl
sbb
or
mov
test
mov
lods
je
test
and
dec
pop
ljmp
lods
jg,pt
aaa
adc
add
out
iret
jnp
cwtl
xchg
push
jl
mov
xchg
femms
repz
insl
lea
dec
repnz
mov
mov
mov
negb
jmp
cmp
adc
rclb
and
and
adc
ret
xor
adc
jmp
push
pushf
sbb
call
jne
out
subb
ja
rorb
inc
fnstenv
mov
sahf
mov
mov
jbe
sub
jecxz
push
mov
notb
inc
adc
pop
in
popf
xlat
es
adc
bound
xor
repnz
mov
mov
js
sbb
inc
ljmp
roll
icebp
loope
inc
and
loopne
movsl
pop
fucomi
daa
push
and
and
inc
shll
jge
stos
sbbb
pusha
sbb
jmp
fistpll
nop
in
pop
add
std
das
mov
cmpsl
push
xor
sbb
fdivl
push
fst
call
je
imul
mov
add
stos
movsl
push
jmp
lcall
arpl
loope
dec
sar
idivl
inc
jecxz
sti
pop
insb
mov
mov
sbb
pop
notb
add
es
jnp
pusha
cmp
fsubl
addr16
xchg
mov
push
int3
outsl
add
xor
jb
mov
lret
nop
pop
dec
fistpl
dec
outsb
icebp
or
das
call
add
add
push
lea
jne
bswap
movsbw
lahf
pushf
movb
setbe
movsbw
mov
pushf
seto
movzbl
lea
pusha
call
movb
lahf
push
pushf
mov
lahf
lea
lea
movb
movl
jmp
push
data16
cmc
push
outsl
mov
xor
movsb
lahf
stos
in
outsb
xchg
insb
adcl
or
nop
pop
sbb
arpl
cmpsl
push
mov
jmp
aaa
xchg
jecxz
jg
and
mov
dec
inc
mov
jnp
call
sbb
rcl
aas
mov
jp
icebp
sahf
or
enter
sbb
or
push
rclb
int
test
jae
pop
inc
push
add
sbb
loopne
xchg
inc
jbe
cli
dec
popa
ret
ret
mov
cmp
inc
jl
adc
cltd
int3
sti
mov
push
scas
repz
inc
ljmp
mov
lcall
andl
and
push
and
cmpsl
mov
and
mov
add
aad
dec
cmc
sbb
dec
jg
cld
mov
enter
mov
mov
bound
or
subl
jp
jmp
jecxz
or
xchg
bt
neg
mov
push
clc
cmp
jmp
pusha
mov
lea
je
test
jmp
gs
sbb
sbb
and
sbb
or
jl
push
push
jl
loope
dec
pop
arpl
xchg
pushf
pop
adc
shrb
dec
and
loopne
push
mov
dec
jmp
mov
cmp
jo
inc
jno
xor
pop
adc
and
mov
hlt
xor
call
pop
ret
data16
repz
xor
xchg
in
and
test
arpl
stos
in
jg
rorl
jecxz
add
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
xchg
jb
pusha
shl
neg
add
ror
push
rol
shl
btr
sub
test
pushf
lea
and
movsbw
cmc
mov
test
pushf
pusha
cmp
add
pushl
call
movb
pushf
popl
jmp
mov
bswap
mov
mov
jmp
shld
dec
cwtl
dec
mov
stc
add
pusha
pusha
jmp
cmc
sub
mov
pushl
bt
shl
lea
ja
pushf
mov
call
not
xchg
push
xchg
not
push
call
clc
sub
clc
cmc
sub
call
push
div
pushf
pushf
jmp
jmp
movsbl
pushf
mov
pusha
push
pushl
pushl
ret
bswap
movzbw
mov
call
pushl
call
pushl
popl
pushl
lea
jmp
setno
bswap
mov
call
lea
cmp
xor
rol
sub
jmp
add
pusha
movb
push
pusha
lea
jmp
not
mov
call
lea
pop
mov
jmp
mov
pusha
jmp
movsbl
mov
pushf
pusha
pushl
movsbl
repz
popl
adc
shld
sar
adc
mov
shrd
bt
pushl
pushl
popl
neg
pop
rcl
shr
movl
pushf
and
pusha
mov
movzbw
xor
bswap
neg
adc
or
ror
and
sub
inc
ror
shr
pushf
lea
rcr
call
pushf
pushf
popl
call
pusha
add
pusha
pushl
mov
call
mov
movzbw
lea
mov
mov
jmp
mov
push
push
movb
pushf
lea
jmp
pushl
mov
pop
push
jmp
movzbw
mov
movsbw
movzbw
bswap
repz
popl
xadd
xchg
shl
clc
shld
pushl
popl
or
dec
bts
movl
lea
dec
mov
xor
shr
xor
test
neg
xor
stc
sub
ror
lea
dec
shl
sub
pusha
lea
movsbw
lea
mov
lea
jmp
aad
mov
or
pusha
bsf
mov
push
cmc
bt
cmc
add
push
mov
pushf
pushf
movl
lea
jmp
pusha
pushf
mov
push
lea
jmp
pushl
popl
movl
pushf
lea
jmp
mov
call
mov
jmp
test
cmc
pushl
popl
clc
pusha
clc
pushf
add
bt
pushl
popf
push
lea
jmp
mov
pushl
push
movw
pop
repz
popl
pop
xchg
rcr
pushl
popl
rcr
movl
sar
cmp
mov
sbb
bts
pusha
rcr
xor
rol
jmp
mov
bt
push
or
pusha
push
jmp
xor
jmp
jmp
call
pusha
pusha
movb
pushf
popl
pushf
pushl
popl
push
mov
lea
jmp
call
ror
notl
or
cmp
inc
add
mov
bt
bt
test
sub
cmp
bt
pushf
clc
and
push
call
pushf
call
call
call
sub
pusha
stc
call
add
movb
stc
add
jmp
lea
bt
xor
push
push
push
push
ror
call
pushl
popl
call
pusha
pushf
popl
call
xchg
push
mov
pop
mov
movzbw
mov
mov
lea
jo
mov
push
jmp
pushf
popl
jmp
movb
mov
lea
jne
jmp
lea
ja
mov
push
pusha
pusha
lea
jmp
pushl
sub
pusha
call
movb
ror
cmc
xor
cmc
pushf
cmp
mov
call
movsbl
aad
mov
add
stc
rcl
setle
mov
pushf
movw
add
push
mov
pusha
pushl
mov
lea
jmp
jmp
pushf
mov
movsbw
movzbw
bswap
push
lea
push
movsbw
push
movsbl
pusha
jmp
pushl
popl
mov
pushl
lea
jmp
not
mov
mov
movsbw
mov
pop
mov
jmp
pusha
push
mov
pushl
pushl
pushl
lea
jno
push
mov
mov
push
js
push
mov
not
mov
push
call
mov
push
mov
mov
pusha
call
rcl
rol
rcl
lea
shl
adc
sub
movzbw
mov
pusha
movw
push
lea
jmp
push
mov
pushf
pushf
movb
pushf
lea
jmp
jmp
jmp
call
call
push
pusha
pushf
mov
bswap
mov
mov
push
call
pushf
pushl
popl
movw
pushf
lea
jmp
call
xchg
rol
aas
mov
clc
mov
cmc
add
jmp
setae
xor
xadd
mov
cmc
mov
cmp
sub
jmp
mov
pusha
movzbw
pushf
xchg
seto
call
mov
pushf
lea
jmp
mov
inc
push
call
pushf
popl
push
call
push
pusha
call
pushl
popl
pushf
push
pushf
lea
jmp
bsf
cwtl
mov
stc
test
clc
and
mov
push
not
stc
cmc
call
push
ror
setne
movzbl
cmc
sub
push
pusha
sub
test
jmp
pushf
mov
pushf
mov
lea
pop
bswap
push
mov
jmp
not
clc
and
pusha
mov
mov
lea
jne
pushf
pushf
popl
push
call
pusha
pusha
pushf
popl
call
clc
push
add
mov
call
bsf
xor
mov
pusha
cmp
add
pushf
pusha
pushf
lea
jmp
mov
movb
xchg
pusha
not
call
mov
pushf
pusha
mov
mov
lea
jmp
call
lea
ja
pushf
pushf
popl
pusha
mov
pushl
popl
pushf
mov
pushf
movw
lea
jmp
pushf
mov
mov
mov
pushf
pushf
mov
movb
push
mov
call
pushf
pushl
popl
movb
pushl
push
mov
lea
jmp
pusha
dec
call
clc
mov
bt
and
clc
mov
stc
test
cmp
not
clc
test
jmp
pushl
pushl
mov
pushf
movb
jmp
jne
pusha
movb
pusha
pushf
popl
jmp
stc
add
jmp
jmp
call
mov
push
pushf
push
lea
jmp
xchg
bswap
movsbw
call
push
pushf
popl
pushf
movb
jmp
movw
mov
inc
lea
jnp
pusha
push
decl
push
pushf
call
call
mov
pushf
bswap
repz
popl
rol
ror
dec
pushf
mov
shl
xchg
or
inc
pushl
movzbw
push
sar
mov
cmc
xor
call
mov
pusha
add
jmp
bswap
push
call
ror
jmp
pushf
dec
mov
sub
pushf
cmc
cmc
bt
sub
mov
mov
pusha
lea
jmp
xor
shl
rol
jge
mov
cmp
clc
sub
stc
call
pushf
xchg
not
push
pusha
bswap
mov
movsbw
call
ror
sbb
movsbw
movzbl
setno
sub
shld
sub
setg
sub
btr
rol
xor
inc
inc
neg
sub
shld
shr
movzbl
bt
call
pop
mov
jmp
rcl
sbb
cltd
not
mov
xor
movsbw
test
mov
push
cmp
stc
push
add
mov
jmp
jmp
jmp
pushf
mov
xchg
jmp
push
pushl
popl
pusha
pushl
mov
movb
lea
jmp
mov
clc
test
cmp
test
sub
stc
bt
add
pushf
call
mov
not
repz
popl
shl
movsbw
shrd
xchg
call
movb
push
pushf
pushl
popl
push
pushf
pusha
lea
jmp
lea
jne
stc
xor
pusha
pusha
mov
xchg
lea
jns
push
pushf
push
mov
mov
pusha
push
mov
pushl
ret
movzbw
mov
repz
bsf
shl
lea
push
lea
pushl
xchg
bts
neg
add
push
inc
sete
sar
bsr
mov
xchg
rol
bswap
shrd
xor
rcr
and
or
neg
shrd
sbb
or
bswap
sub
xchg
mov
or
sbb
sub
lea
mov
setl
lea
shl
xor
mov
sbb
sar
lea
add
shld
mov
cmc
shr
shl
sub
jmp
shr
mov
cmc
jmp
movsbw
movzbw
push
pusha
mov
jmp
movzbw
lea
mov
xchg
repz
popl
inc
dec
sub
rcr
mov
shl
pushl
popl
bsf
xor
ror
dec
movl
rcl
pusha
mov
add
xor
call
movzbw
mov
pusha
repz
popl
xchg
xchg
cmp
xchg
inc
pushl
popl
shld
bswap
bt
movl
bsr
shld
mov
jmp
jmp
pushf
cmp
sub
pusha
stc
jmp
pushf
popl
jmp
mov
pusha
call
setns
bswap
movsbl
pushf
mov
pushf
lahf
mov
pusha
lea
cpuid
pushf
push
cmp
pusha
sub
clc
cmp
movb
jmp
add
btc
call
shr
shld
clc
mov
movzbw
adc
sub
add
movzbw
xor
bt
pushf
pushf
mov
test
shl
jmp
call
movzbw
mov
mov
ror
rol
cmc
bswap
shl
sub
test
sub
and
shld
not
test
xor
cmp
sub
btc
rol
movzbl
shld
mov
call
mov
movl
pushf
popl
call
call
jmp
pop
not
repz
popl
rcr
bswap
pop
xchg
shl
add
pushl
popl
btc
test
movl
not
cmp
shl
mov
mov
xor
bsf
neg
neg
jmp
mov
movb
pushf
pushf
popl
movw
pushl
popl
pushl
push
mov
lea
jmp
mov
pushf
jmp
lahf
mov
mov
pushf
mov
push
mov
push
push
pusha
mov
push
lea
jmp
pushf
add
pusha
mov
lea
jmp
cmc
ror
cmp
pushf
pusha
sub
stc
bt
sub
mov
push
sub
jmp
cmc
pushf
pushl
ror
cmc
stc
sub
pushf
sub
cmc
stc
pushf
test
cwtl
bt
sub
test
jmp
test
cltd
bts
inc
mov
rol
dec
mov
pushf
pusha
add
pushf
mov
movw
movb
lea
jmp
pusha
inc
cmp
test
sub
cmc
mov
clc
mov
cmc
stc
pushl
test
sub
pushf
clc
mov
bt
clc
call
stc
push
cmc
sub
movw
cmp
clc
movw
sub
call
pushf
inc
call
mov
mov
pushf
popl
mov
lea
jbe
pusha
pushl
popl
pusha
lea
jmp
pusha
pushl
popl
pushf
pushf
movb
pushl
lea
jmp
xchg
not
mov
mov
bswap
repz
popl
xadd
sub
dec
add
mov
shl
shld
rcr
movzbw
pushl
popl
cmp
neg
movl
shr
sbb
pushl
mov
btc
test
sub
xor
rcl
neg
call
lea
jmp
jmp
call
test
add
pushf
jmp
xchg
mov
cltd
mov
lahf
pushf
movsbl
mov
pusha
divl
pushl
mov
movw
mov
push
mov
pushf
popl
pushf
lea
jge
pushf
pushl
popl
pusha
mov
lea
jmp
cmc
shr
pushf
jmp
movzbw
bsf
xor
add
clc
dec
bsr
neg
sub
bts
dec
sub
movw
or
lea
sbb
bsf
shrd
cmp
sub
mov
mov
pusha
pushf
lea
jmp
bswap
pusha
mov
push
mov
movb
pushl
ret
pushf
test
cmc
sub
pushf
mov
push
push
pushf
lea
jmp
cmp
add
pusha
call
pushf
pusha
jmp
aas
daa
not
mov
add
and
setp
mov
mov
pushf
cmp
call
push
push
pushf
bswap
mov
mov
mov
call
shr
mov
pushf
jmp
bt
pusha
mov
shld
rcl
sub
not
ror
stc
shr
and
sub
not
pusha
add
or
sub
shrd
cmp
not
movzbw
add
sub
bsf
inc
rcr
movzbl
shl
neg
and
mov
push
test
test
bt
add
mov
cmc
add
pushf
mov
pushl
push
pushl
ret
pushf
call
push
sub
setl
stc
pushf
rol
ror
and
movzbw
rcr
sub
setb
sub
movsbw
not
pop
sub
sub
movzbl
rcl
shrd
cmp
mov
mov
jmp
sub
movb
call
pushf
popl
pusha
push
push
pushl
popl
mov
mov
mov
lea
jmp
pushf
jmp
sbb
sub
call
push
pusha
cmc
shr
jmp
popl
push
pushf
lea
jmp
call
rcr
xor
ror
bt
ror
call
movsbl
push
mov
bswap
mov
pushf
movsbl
lea
movzbl
mov
movzbl
movzbl
mov
push
movsbw
call
lea
je
cmc
pushf
pusha
cmc
xor
cmp
cmp
movw
pusha
xchg
test
mov
test
test
sub
pushf
pushf
jmp
dec
sub
shl
lea
shrd
ror
btc
sub
jb
sub
shl
adc
shrd
mov
shr
xchg
bsr
jmp
bsr
mov
cmc
sub
test
add
push
lea
jae
push
push
pushf
popl
call
call
mov
lea
xchg
pushf
mov
bswap
push
lea
repz
popl
movzbl
shl
mov
xchg
pushl
popl
bts
movl
btc
mov
cmc
stc
xor
shl
movzbw
btc
or
neg
mov
neg
sub
sub
lea
cmp
bsf
bsf
sub
pusha
lea
pusha
pushf
movw
lea
jmp
cmc
xor
pusha
inc
pusha
dec
cmc
movb
sub
clc
stc
sub
push
jmp
add
add
adc
lahf
mov
call
bt
stc
sub
bt
cmp
mov
cmc
test
pushf
sub
bt
test
call
lea
jno
mov
pushf
mov
pusha
lea
jne
push
pushf
popl
pusha
pusha
pushf
push
pushl
popl
push
mov
movw
movb
lea
jmp
repz
popl
shrd
adc
xchg
call
movw
xchg
call
pushf
pusha
call
bsr
mov
neg
sbb
add
pusha
mov
jmp
xor
and
neg
rcl
sub
or
bsr
cmc
bt
lea
bswap
adc
rol
clc
sub
movzbw
mov
pushf
pusha
pusha
mov
lea
jmp
bswap
mov
jmp
mov
pushf
push
pusha
lea
jmp
cmc
mov
mov
sar
mov
clc
push
sub
pushf
bt
pushf
sub
jg
shl
push
mov
jmp
xchg
not
movsbw
movzbw
mov
mov
jmp
push
pusha
push
xchg
pusha
lea
mov
pushf
mov
pop
mov
not
not
jmp
push
mov
jmp
jmp
call
jmp
pusha
pushl
popl
pusha
pushl
mov
lea
jmp
pushf
popl
call
and
shld
movzbw
clc
mov
dec
cmc
stc
add
mov
mov
pushf
mov
pushf
lea
jmp
pushf
pushf
pushl
popl
push
lea
jmp
lea
lea
movb
pushf
call
add
mov
push
call
pushl
xchg
mov
movsbw
movsbw
lea
movsbl
repz
popl
bswap
shrd
mov
sbb
ror
and
add
pushl
popl
sub
sub
push
pop
movl
call
not
pushf
mov
pop
pusha
mov
mov
pusha
pop
mov
not
pushl
lea
mov
call
mov
pushf
movb
pushl
lea
jmp
jmp
call
pushl
popl
pusha
pushf
pushl
pushf
lea
jmp
mov
call
bswap
sub
not
mov
push
lea
jmp
mov
pushf
pushf
pushf
pushl
ret
xchg
pop
bswap
call
mov
movb
push
lea
jmp
mov
not
lea
pushl
movsbw
mov
lea
mov
lea
movzbw
call
pushf
movw
xchg
lea
push
pushf
pop
push
push
pushf
mov
movzbw
pushl
pushf
mov
lea
pushf
pop
not
mov
mov
xchg
mov
bswap
movsbw
repz
shl
push
adc
movzbw
lea
pushl
add
lea
push
movsbw
btc
cmc
mov
sub
shld
mov
shl
xor
ror
lea
xadd
neg
bts
ror
dec
sub
stc
lea
not
xadd
mov
inc
shl
sub
bswap
push
bswap
bswap
lea
pusha
mov
pushf
lea
jmp
pusha
movsbw
xchg
lea
mov
not
movb
mov
push
repz
popl
jmp
push
pushf
pusha
jmp
cmp
mov
jmp
bt
rol
push
clc
neg
movb
push
inc
pushf
sub
call
call
test
cwtl
jmp
add
jnp
bt
xor
call
sub
jmp
jmp
push
jmp
call
pusha
pushl
popl
mov
pushf
pushl
pushf
lea
jmp
mov
call
pusha
cwtl
mov
mov
pusha
jmp
pushf
call
call
sub
and
pusha
bswap
jmp
movzbw
mov
push
pusha
pusha
pushl
mov
jmp
bswap
sbb
neg
dec
sub
add
lea
bts
sub
movsbw
mov
push
lea
jmp
lea
mov
movsbw
movsbw
push
jmp
lea
repz
popl
dec
mov
btr
bts
rol
shl
pushl
popl
shr
pusha
movl
rcl
mov
rcr
xor
call
mov
lea
pushl
push
lea
jmp
stc
cmp
xor
call
call
call
mov
push
lea
jmp
lea
jle
popl
push
pushf
lea
jmp
push
not
pushf
pusha
sub
cmc
clc
cmc
add
jns
and
push
pusha
mov
pushf
call
pusha
pusha
lea
jne
shr
pusha
xorb
lea
setne
movsbw
movsbw
pop
push
pushf
lea
jmp
push
not
pusha
lea
mov
mov
movsbl
push
lea
not
mov
movzbw
movzbw
movsbw
mov
pushf
lea
pushf
bswap
mov
call
rcl
call
lea
call
add
clc
push
add
pusha
mov
mov
pushl
ret
mov
movsbw
pushf
call
movzbw
mov
lea
pop
mov
mov
call
inc
cmp
stc
movzbw
sub
seto
bsf
mov
clc
add
call
mov
not
mov
cwtl
movzbw
lea
movzbw
mov
not
lea
jae
pop
pushf
pushl
ret
shl
cmp
neg
cmp
bsr
btr
pusha
sub
bswap
btr
shld
lea
inc
movw
cmp
sub
btr
mov
adc
cmc
mov
xchg
test
btr
clc
add
bts
mov
bts
rcr
call
movl
movzbw
xor
mov
sbb
btc
pusha
xor
rcr
rol
bswap
bswap
neg
xchg
shl
test
push
sub
add
clc
lea
shl
sub
pushf
lea
push
pushf
mov
lea
jmp
push
ror
rol
xor
call
bsr
mov
and
jmp
pusha
test
shl
pushf
mov
push
mov
jmp
pushl
popl
movb
push
pushf
lea
jmp
pushf
lea
jle
pusha
mov
pusha
mov
pushf
popl
jmp
pushf
mov
bswap
not
mov
pushf
xchg
lea
jmp
mov
lea
repz
popl
movw
mov
rcl
pushl
popl
btc
movl
rcl
neg
cmp
shl
mov
btc
xor
not
movsbw
neg
shrd
movw
lea
sub
shld
bt
lea
shl
bsr
sub
pusha
not
mov
lea
pusha
pushf
pushf
lea
jmp
dec
cmp
pushf
stc
cbtw
cmc
pushf
cwtl
jmp
call
btc
lea
xchg
mov
call
rol
pushf
xor
movb
sub
jmp
pushf
add
pushf
mov
pushf
movw
movb
pushl
ret
jmp
jmp
call
bt
stc
neg
clc
neg
btc
pushf
sub
ror
lea
bt
pop
rcr
bt
sub
call
pushf
pushl
popl
pushf
lea
jmp
btr
shld
sub
pusha
jmp
shl
adc
mov
daa
bt
daa
mov
test
cmc
cmc
sub
clc
push
mul
push
call
pushf
cmc
pushl
movl
and
pusha
push
mov
mov
pushf
pushf
popl
jmp
rol
rcr
call
shld
call
pushf
mov
pushf
mov
mov
pusha
push
call
pusha
jmp
call
pushf
cmc
mov
cmp
sub
pusha
movw
jmp
mov
jmp
pushl
popl
mov
pushl
lea
jmp
pushl
popl
add
movl
movzbw
movsbw
mov
bt
bswap
xor
xadd
neg
pop
neg
call
jo
pusha
xchg
not
jmp
call
mov
mov
lea
jmp
mov
or
add
rcr
ror
movsbw
lea
mov
jmp
shr
push
lea
ja
mov
call
push
and
dec
bts
add
movzbl
pushf
pop
call
rcl
cmc
movzbl
shl
rcl
call
mov
jmp
mov
pushf
pushf
pusha
lea
jmp
push
pushf
mov
mov
lea
jmp
shrd
push
mov
movb
shr
mov
stc
test
sub
test
clc
pushf
stc
shr
push
call
ror
shr
sub
sar
shr
sub
shld
adc
not
cmp
xor
sub
shld
movzbl
test
mov
cmc
pushf
jmp
pushf
popl
call
movzbw
lea
movw
pushl
push
pusha
lea
jmp
jmp
jmp
shr
mov
call
mov
pushf
pushf
mov
mov
movw
pushf
mov
lea
jmp
movw
mov
call
jmp
push
movb
pushl
popl
movb
push
push
lea
jmp
mov
push
lea
jmp
mov
cmc
sub
shr
stc
mov
cmp
cmc
add
bt
stc
cmc
pushf
shrd
mov
pushf
pushf
mov
jmp
movsbw
call
xchg
jmp
pushl
lea
pushf
lea
jmp
bswap
lea
pushf
mov
lea
pushf
lea
jo
not
push
xchg
push
jmp
stc
sbb
rol
mov
jmp
inc
btr
mov
cmc
pushl
popl
sub
movl
neg
lea
shl
mov
rol
sar
xor
rcr
clc
neg
mov
adc
sub
stc
lea
add
add
shl
sub
jmp
pushl
or
clc
xor
movw
jmp
movzbw
pushf
mov
lea
mov
pusha
xchg
mov
bswap
jmp
bswap
not
movzbl
repz
popl
movzbw
xchg
bts
cmc
pushl
popl
shr
clc
dec
bt
movl
add
movsbw
dec
xchg
mov
adc
and
xor
push
btc
pop
neg
neg
sub
rcl
lea
shrd
pop
bt
adc
sub
mov
movzbw
movzbw
jmp
jmp
movzbl
mov
movzbw
movsbw
push
pushf
bswap
pusha
mov
pop
pusha
repz
popl
mov
and
adc
shr
xchg
btr
shl
btc
pushl
popl
pop
cmp
movl
rcr
mov
not
stc
xor
stc
not
neg
xor
sub
clc
lea
push
sub
mov
not
mov
pushf
pusha
push
lea
jmp
xchg
movzbw
lea
mov
pusha
bswap
repz
popl
rcl
not
xadd
btc
mov
sub
not
shl
pushl
popl
shl
ror
neg
movl
shl
add
bswap
btr
mov
cmp
or
xor
lea
test
btr
neg
xor
sbb
movsbw
sub
pop
clc
adc
lea
pop
sub
pushf
pushl
movzbl
lea
movb
push
pusha
lea
jmp
jmp
pushl
mov
mov
pushf
push
push
lea
jmp
dec
movb
push
mov
pushf
lea
jmp
jmp
lea
jl
inc
jmp
seto
movsbw
btr
mov
test
pusha
mov
cmc
btc
dec
mov
jmp
rdtsc
btc
pushf
mov
not
mov
rcr
test
mov
push
add
jmp
jp
bt
clc
push
sub
pushf
mov
push
lea
jmp
lea
ja
bswap
shrd
lea
adc
mov
bsr
lea
rol
setg
xor
sub
xchg
lea
xor
pusha
and
shl
shrd
bsf
sar
sub
movsbw
movzbw
mov
pusha
pop
pushf
popl
bswap
pusha
std
xchg
call
push
mov
test
mov
aaa
mov
mov
xlat
mov
xorl
xchg
mov
into
mov
mov
in
mov
and
mov
add
mov
jns
mov
add
mov
and
mov
hlt
mov
orl
movsl
mov
cli
mov
cmp
mov
cmpl
mov
cmpl
mov
cmpsl
mov
mov
test
cltd
mov
jnp
mov
test
mov
test
movsl
mov
into
mov
mov
mov
cmpl
test
subl
mov
mov
mov
or
mov
sbb
movsl
mov
aaa
mov
mov
test
mov
nop
mov
jns
mov
fwait
cwtl
mov
inc
movsl
mov
fwait
cwtl
mov
jg
mov
mov
mov
nop
mov
xor
mov
test
mov
mov
mov
xorl
mov
jns
mov
aaa
mov
mov
pusha
cltd
mov
sbb
mov
mov
cli
mov
addl
lcall
mov
mov
pop
mov
mov
test
test
addl
mov
into
mov
mov
sbb
mov
sbb
mov
xor
mov
adc
addl
mov
inc
lea
adc
xchg
mov
adc
mov
mov
mov
into
mov
mov
mov
mov
adcl
xchg
xor
test
sbbl
mov
subl
cmpsb
mov
xor
mov
pusha
cltd
mov
repnz
orl
mov
cmpl
mov
cmp
mov
xlat
mov
or
mov
xorl
stos
mov
inc
movsl
mov
mov
mov
cmpl
test
xorl
mov
addl
adcl
movsl
mov
pop
mov
mov
repnz
xorl
test
cmpl
mov
cmp
mov
loopne
mov
xor
mov
aaa
mov
xorl
mov
mov
xorl
mov
loopne
mov
cli
mov
adc
mov
addl
movsl
mov
mov
mov
pop
cmpsl
mov
sub
mov
inc
movsl
mov
or
mov
jnp
mov
add
mov
jg
mov
jg
mov
nop
mov
test
mov
test
mov
inc
movsl
mov
scas
mov
mov
push
mov
test
test
subl
mov
cmp
mov
pop
mov
mov
xor
mov
and
mov
inc
lea
sbbl
mov
jns
mov
cmpsb
mov
hlt
mov
addl
mov
cli
mov
addl
cmpl
mov
andl
mov
inc
lea
or
test
jmp
inc
add
out
add
movw
lea
jmp
movsbw
call
jmp
bsf
shrd
sub
movsbl
call
push
mov
jmp
sub
mov
push
jmp
stc
push
xchg
clc
call
bswap
mov
movsbl
pop
pushf
mov
lea
movzbw
mov
movzbw
mov
bswap
xchg
pushf
movsbl
mov
bswap
repz
popl
cmc
and
ror
dec
mov
bts
sar
xadd
pushl
popl
shrd
lea
sub
cmp
movl
rcl
dec
stc
mov
cmp
stc
xor
movzbw
neg
and
sub
ror
not
lea
xor
add
dec
shrd
sub
jmp
lea
jne
shrd
mov
cmp
clc
and
jmp
jmp
mov
movzbl
mov
lea
mov
lea
mov
lea
repz
popl
movsbw
push
stc
push
shl
pushl
popl
rol
shr
push
cmp
shr
bswap
mov
bsr
add
xor
not
or
inc
rcr
neg
add
jmp
rep
shl
mov
bsf
mov
test
pushl
popf
mov
movl
mov
lea
jmp
pushf
lea
mov
call
pushl
jmp
pushf
jmp
not
push
call
jmp
pushf
pushl
popl
push
push
lea
jmp
jmp
mov
rcl
not
mov
rol
cmp
mov
cmc
test
stc
sub
stc
test
stc
clc
shl
call
movb
pushf
pushf
pushl
popl
pushf
movb
mov
movb
lea
jmp
push
push
lea
mov
mov
bswap
push
mov
bswap
push
call
push
repz
popl
jmp
stc
sub
jmp
call
pusha
pushf
xchg
pop
mov
pushf
pop
bswap
mov
push
jmp
rol
or
stc
bsr
neg
jmp
pushf
pushf
popl
pusha
pushf
push
pushl
popl
movb
push
mov
push
lea
jmp
movzbw
shrd
mov
shl
mov
clc
pusha
sub
bt
stc
jmp
cmp
jmp
bswap
mov
movb
cld
cld
cld
push
pushl
jmp
movzbw
mov
lea
xchg
bswap
jmp
movb
pushf
mov
lea
jbe
pusha
pushf
popl
movb
pushf
mov
pushf
pushl
popl
pushf
pushf
lea
jmp
pusha
mov
call
not
mov
push
push
lea
jmp
decl
call
clc
aas
inc
movzbw
rdtsc
push
pusha
bt
sub
call
jmp
mov
pushf
pusha
push
pushl
lea
jmp
jmp
not
mov
movw
mov
lea
xchg
pop
call
sub
jmp
movb
mov
jmp
cmp
neg
movzbl
jmp
pusha
call
jmp
sub
bt
rol
clc
test
neg
call
pushl
mov
push
pushl
mov
lea
jmp
call
mov
push
push
lea
jmp
xchg
mov
call
call
push
xchg
lea
pushf
mov
pushf
jmp
pushf
pushf
lea
pushf
pushf
pushf
pusha
lea
jmp
lahf
mov
cmc
push
bt
test
xchg
cmc
pusha
lea
jle
sub
clc
xchg
call
bswap
call
pushf
pusha
mov
lea
mov
pushf
not
mov
mov
lea
bswap
pusha
mov
movzbw
call
jmp
call
mov
lea
jo
sub
push
pusha
mov
movw
pushf
movw
lea
jmp
mov
test
cmp
movb
sub
push
push
pushf
lea
jmp
call
pusha
movzbw
jmp
pushf
call
mov
pushf
mov
pushf
mov
lea
jmp
jmp
sub
pushf
pushf
pushf
mov
lea
jmp
pusha
pushf
mov
jmp
test
mov
mov
mov
pusha
pushf
bt
sub
bt
jmp
shl
and
mov
pushf
bt
bswap
pusha
pushf
clc
sub
clc
sub
bt
pushf
push
neg
push
call
pushf
mov
pushf
pushl
ret
movsbl
bt
btc
neg
movzbl
not
sub
pushl
xchg
xor
lea
adc
cmp
rcr
sub
movzbw
mov
pusha
mov
push
push
lea
jmp
jmp
push
and
mov
cmc
pushl
pusha
clc
sub
pushf
push
mov
push
pushf
push
lea
jmp
pushl
pushf
popl
pushf
pushl
popl
push
lea
jmp
jmp
sub
rcr
not
and
xor
shrd
rol
sub
pushf
inc
pushf
movzbl
stc
bsf
or
mov
mov
cmp
add
bt
clc
push
add
jmp
pushl
xchg
mov
std
call
shr
mov
call
rcr
movzww
test
pushf
movb
xchg
cmc
pushf
cmp
push
sub
cmc
jmp
mov
pushf
lea
bswap
mov
lea
push
jmp
mov
pusha
movb
call
call
mov
mov
movb
movb
mov
lea
jmp
cmpl
call
bsr
sub
bt
lea
shrd
neg
ror
lea
jl
sub
lea
pushf
mov
movsbl
lea
pusha
pushf
pushf
push
lea
jmp
ror
movzbw
sub
test
ror
mov
bt
bsf
shl
rol
mov
shr
cmp
add
xadd
jmp
pushf
jmp
movzbw
mov
bswap
lea
lea
pusha
mov
mov
pop
movzbw
mov
bswap
pushf
not
mov
lea
pusha
mov
mov
mov
movsbl
jmp
call
jmp
jmp
cmp
sub
jmp
mov
lea
movzbw
pop
xchg
call
call
call
pushf
popl
jmp
movsbw
bswap
xchg
repz
popl
sbb
pop
mov
and
btr
sub
pushl
pushf
dec
dec
inc
movl
pushf
jmp
pusha
pushl
movl
pushf
mov
pushl
pushf
pushl
pushf
pushl
ret
bts
mov
or
movzbl
sar
ror
shld
sub
call
imul
push
pusha
movb
mov
jmp
pushl
mov
pusha
mov
movb
push
lea
jmp
lea
jno
pushf
mov
jmp
aad
lea
pushf
mov
cmp
pusha
mov
jmp
aad
mov
rol
clc
lea
jmp
and
mov
bsr
movzbw
movw
rcl
xor
pushf
shr
cmc
neg
movsbw
cmc
sub
bswap
inc
push
lea
shrd
sub
jmp
call
shl
add
shl
mov
cmc
call
pushf
pushl
popl
pusha
movb
lea
jmp
pusha
not
xchg
dec
not
pop
pushl
popl
xchg
movl
rcr
bsr
rcl
cmc
mov
ror
xor
sets
neg
push
shld
neg
xchg
sub
or
bts
rcl
shrd
lea
add
sub
mov
mov
sbb
sar
push
shld
mov
not
test
add
pusha
stc
rol
mov
or
mov
bsr
sub
mov
clc
rcr
pushl
ror
bt
movzbw
sar
sub
adc
movsbw
bt
call
call
pushl
popl
pushl
lea
jmp
pusha
jmp
aam
mov
test
call
jmp
pusha
pushf
mov
push
pushf
call
pushf
popl
jmp
lea
movb
pusha
pushf
pushf
lea
jmp
pushf
popl
mov
push
pushl
popl
pusha
pushl
push
movw
lea
jmp
pusha
mov
mov
push
mov
pushf
mov
pushl
push
lea
jmp
aas
mov
btr
shl
shld
aad
pop
aam
not
pop
dec
shld
pop
bt
cltd
rdtsc
popf
bswap
lahf
pop
lahf
bswap
movsbw
cltd
pop
bswap
cwtl
movzbl
pop
pushf
lahf
seta
lea
jg
pop
pushf
not
mov
push
not
not
mov
mov
not
jmp
mov
lea
mov
pop
movzbw
not
pushf
mov
pusha
repz
popl
btr
xchg
sbb
stc
pop
not
pushl
popl
sar
shr
movl
dec
pushf
bsr
mov
ror
bsr
xor
rcl
not
xor
lea
neg
shl
sub
stc
sar
sar
sub
lea
pushf
clc
bt
sub
call
and
aas
call
call
mov
push
pushf
mov
push
lea
jmp
lea
jne
push
mov
call
mov
push
pushl
movl
mov
lea
jmp
pushf
popl
lea
jne
pusha
pushl
popl
mov
lea
jmp
xchg
stc
jmp
pop
sub
or
and
bsf
movsbw
stc
mov
jmp
jmp
call
mov
push
pushl
push
lea
jmp
stc
pushf
pusha
sub
pushf
jmp
jmp
sub
call
add
add
add
add
pusha
xor
xor
jns
push
add
add
add
adc
add
lods
jp
add
mov
add
mov
add
add
mov
add
add
cmc
mov
add
lea
add
add
mov
lea
add
mov
add
mov
add
mov
add
popl
add
add
mov
add
adc
add
mov
add
cs
add
push
add
mov
add
cli
xchg
add
xor
add
mov
add
or
add
add
test
add
in
add
or
add
cld
xchg
add
mov
add
cltd
add
lret
cltd
add
and
add
cmc
lcall
cmp
add
mov
fwait
add
imul
add
add
mov
sahf
add
ja
add
rcrb
add
lahf
add
test
add
enter
add
mov
add
test
add
mov
add
mov
mov
add
push
mov
add
test
add
.byte
.byte
add
