push
call
or
adc
and
adc
jb
lahf
scas
ja
add
mov
out
fstl
decb
shrb
xchg
into
mov
cmp
pop
cmp
test
gs
shrb
adc
fldpi
jns
ficompl
jl
cmc
fmuls
xchg
das
outsl
push
or
pop
pushf
fimuls
and
stos
pusha
push
and
mov
xchg
pop
lea
insb
cmp
xorb
jb
xor
adc
pop
inc
or
dec
out
repnz
or
or
fwait
aad
orl
insl
jmp
jo
les
ret
sarl
xchg
xorb
andb
dec
insl
adc
lret
decb
dec
or
jge
ljmp
roll
mov
aam
fildl
fwait
imul
add
dec
lock
xorb
testb
adc
sbb
pop
movsb
push
roll
push
sarl
jl
loop
inc
and
rol
mov
jno
pop
movl
push
loopne
xlat
repz
cld
pushf
pop
fcompl
lods
mov
hlt
or
lret
mov
sub
je
ret
test
and
out
push
xchg
dec
scas
adc
clc
sti
cld
inc
test
mov
shlw
icebp
fists
jo
mov
adc
ret
or
lcall
punpckhdq
sahf
push
shl
sahf
leave
jmp
cmpsb
mov
jmp
push
mov
mov
push
mov
loop
mov
and
fmull
add
and
adc
sbb
xchg
xchg
mov
ljmp
ss
pop
stos
popa
cmpl
lock
fcmovnbe
jecxz
popa
and
add
mov
fnsave
icebp
jle
cmp
dec
in
stc
idiv
mov
dec
repz
aad
or
jb
out
sti
mov
add
out
and
dec
push
or
and
jnp
pop
adc
movsb
out
push
adc
arpl
and
out
sub
rorb
mov
js
sub
add
nop
dec
xor
insl
add
mov
pop
enter
rcll
aad
outsl
loop
push
fs
mov
add
lods
js
dec
mov
or
ret
int
shlb
add
ljmp
les
cmc
gs
mov
dec
mov
sbb
fdivrl
jne
or
lock
xchg
ret
sbb
sbb
fs
out
cwtl
fmull
aas
push
cli
shr
xchg
fdivrl
adcb
xor
pop
das
push
and
enter
decl
cld
push
leave
stos
cmp
adc
or
loopne
lock
sbb
push
sbb
xchg
clc
movl
or
jp
mov
mov
push
jecxz
xor
leave
stos
imul
fwait
jg
into
fisubrs
out
mov
out
orb
dec
aas
push
xchg
and
pop
jge
ljmp
int
rcrb
lods
adc
ret
xlat
loope
xchg
stos
outsl
xor
pop
mov
mov
add
xchg
inc
ret
and
mov
pop
push
mov
loopne
fsubrs
lcall
lcall
fwait
out
vmovss
fs
out
cmp
rcr
jmp
scas
imul
data16
sub
push
push
lds
mov
pop
iret
inc
das
pusha
pop
lahf
std
mov
jecxz
repz
insl
je
lcall
dec
sub
add
and
outsl
or
fbstp
jecxz
ljmp
repnz
imul
scas
inc
daa
push
mov
jbe
sub
push
jle
ret
pop
push
adc
lahf
aas
addl
addr16
or
add
je
pushf
leave
test
mov
or
gs
popa
push
mov
scas
stos
xor
push
xchg
movsb
dec
pop
ja
scas
pop
cmp
movb
adc
mov
sahf
pop
jmp
jecxz
in
pushf
ret
push
mov
lret
jbe
gs
cmp
or
enter
or
in
popa
fstl
jb
mov
orl
cmpsb
inc
subl
xor
test
or
inc
xor
add
sub
add
push
pusha
or
cmpsb
sbbl
ret
fcompl
dec
in
jle
dec
hlt
jmp
test
icebp
dec
stos
and
pop
jbe
xchg
dec
fisubrs
bound
lret
or
cmpsl
addr16
out
popf
addr16
xor
lds
and
jl
ss
pop
and
repz
jge
and
adc
lea
dec
div
cmp
pop
inc
mov
add
cmp
rcrl
pop
cmpsb
enter
push
pop
rcll
mov
movsb
rcrb
aas
add
push
sbb
repz
int
mov
add
jge
fbld
sub
repz
mov
push
sub
sub
or
js
pushf
sbb
loopne
push
repz
in
mov
xor
push
pop
sahf
jns
popf
push
xchg
test
xor
rclb
jle
xor
daa
xor
sti
push
dec
pop
mov
inc
mov
mov
jnp
repnz
cli
mov
ljmp
push
lret
xorb
sub
xchg
push
addb
ljmp
test
push
andb
dec
pop
ret
lahf
mov
push
mov
dec
and
jecxz
popf
and
into
inc
jno
leave
xchg
and
push
aas
dec
ss
loope
mov
leave
clc
xchg
in
inc
inc
dec
movsl
lret
xlat
mov
xor
mov
test
addr16
mov
fildl
and
jno
clc
sbb
jle
push
jecxz
sub
fwait
shrl
ret
lret
sub
push
adc
adc
or
movsb
jno
sbbb
ret
xlat
mov
jae
mov
xchg
hlt
add
xor
outsl
stos
jmp
push
adc
add
les
loop
push
xor
sbb
rcrl
call
dec
add
xchg
adc
cmpl
sbb
xchg
dec
es
loopne
and
or
inc
ss
xchg
cmpsl
push
push
sub
fdivs
in
ret
sub
xchg
int3
mov
dec
punpcklwd
cmp
negl
dec
sbb
cld
or
pop
pop
pop
xchg
in
or
dec
push
push
pop
inc
sub
mull
in
jo
cmp
mov
jbe
push
dec
inc
or
fbld
shlb
xlat
fdivl
or
cmp
sbb
sbb
leave
mov
push
dec
mov
es
ficoml
movsb
jae
sub
jecxz
sete
mov
pop
pop
jno
movsl
sub
inc
aad
adc
getsec
ror
shr
addl
ja
popa
mov
sub
inc
fiadds
mov
stos
adc
outsl
mov
mov
scas
pusha
cs
.byte
.byte
add
add
add
or
add
add
push
add
addb
add
mov
add
js
add
call
add
add
add
rorb
add
mov
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
mov
or
xor
add
in
add
add
add
add
add
add
add
fadds
add
in
or
xor
add
in
add
add
add
add
add
add
add
add
add
sbb
or
xor
add
in
add
add
add
add
add
add
add
sub
add
dec
xor
add
add
in
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
js
add
mov
or
xor
add
in
add
add
add
add
add
add
add
mov
xor
add
add
in
add
add
add
or
add
sbb
add
push
add
sbbb
test
add
mov
add
xor
add
sub
add
add
xorb
sbbb
add
fiaddl
add
push
add
xorb
add
pop
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
je
add
in
or
in
add
in
add
add
add
or
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
scas
add
add
cmp
add
add
add
add
add
add
add
add
inc
add
dec
add
push
add
add
add
add
add
add
add
out
add
mov
add
add
add
add
add
add
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
jo
or
rolb
add
in
add
add
add
or
inc
add
dec
add
dec
add
push
add
add
add
add
add
add
add
push
add
add
or
rolb
add
in
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
add
adc
add
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
inc
or
rolb
add
in
add
add
add
pop
add
inc
add
inc
add
add
add
add
add
add
add
add
repnz
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
es
add
add
add
add
add
add
add
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
add
add
add
push
inc
or
call
add
add
add
add
add
add
add
cwtl
add
addb
add
rolb
add
add
add
add
or
add
sub
add
add
in
add
add
add
add
add
or
add
add
add
xor
test
add
in
add
add
add
add
add
add
add
dec
add
push
add
dec
add
dec
add
push
add
add
add
add
add
add
add
xor
or
push
add
add
add
add
add
add
sbb
jmp
push
add
cmp
add
pusha
push
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
pop
add
js
add
mov
sldt
enter
cmc
sldt
lock
add
sbb
add
inc
or
cmp
add
push
sldt
nop
or
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
or
cmp
add
orb
addb
add
test
add
add
add
add
add
add
add
add
add
sub
add
inc
popa
or
pusha
add
add
add
add
add
add
add
add
add
push
push
add
movsb
popa
or
sub
add
in
add
add
add
add
add
add
add
js
add
shlb
add
add
add
add
add
add
add
add
add
mov
imul
add
add
add
add
add
add
add
add
enter
in
insb
or
push
add
add
add
add
add
add
add
lock
add
push
outsl
or
faddl
add
in
add
add
add
add
add
add
add
sbb
add
xor
add
add
add
add
add
add
add
add
add
add
inc
pop
add
cmp
add
add
add
add
add
add
add
add
add
add
push
ja
add
add
add
add
add
add
add
add
add
add
nop
pop
add
clc
ja
add
add
add
add
add
add
add
add
add
add
mov
jnp
add
add
add
add
add
add
add
add
loopne
add
mov
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
xor
add
cwtl
jg
add
add
in
add
add
add
add
add
add
add
pop
or
add
orb
or
add
in
add
add
add
add
add
add
add
orb
add
or
test
add
in
add
add
add
add
add
add
add
test
add
nop
mov
add
add
add
add
add
add
add
add
rorb
add
inc
lea
add
add
add
add
add
add
add
add
add
add
clc
or
add
or
cmp
add
in
add
add
add
add
add
add
add
and
add
nop
xchg
or
in
add
add
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
add
add
add
jo
add
movsb
xchg
or
mov
add
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
add
add
add
rorb
add
pushf
or
les
add
in
add
add
add
add
add
clc
or
addb
add
inc
or
subb
orb
add
inc
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
pop
or
add
add
in
add
add
add
push
add
add
push
add
push
add
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
movsb
or
add
add
add
add
add
add
pop
add
jg
add
or
cmp
add
and
add
dec
or
cmp
add
je
add
pushf
or
cmp
add
les
add
in
or
addb
add
add
add
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
add
add
add
cmp
add
int3
stos
or
adc
add
in
add
add
add
add
add
add
add
or
add
stos
or
adc
add
in
add
add
add
add
add
add
add
mov
add
hlt
stos
or
adc
add
in
add
add
add
add
add
add
add
mov
add
or
add
in
add
add
add
add
add
add
add
fmull
add
sbb
or
adc
add
in
add
add
add
add
add
add
add
add
add
xor
add
in
add
add
add
add
add
xor
add
pop
or
xorb
addb
add
add
add
add
or
add
add
test
or
and
add
in
add
add
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
mov
add
or
adc
add
in
add
add
add
sub
add
adc
add
and
add
add
sbb
add
add
inc
add
add
add
lods
outsl
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
lods
outsl
fsubrl
fsubrl
fsubrl
fsubrl
fsubrl
fsubrl
fsubrl
cld
mov
test
cld
mov
test
cld
mov
cld
mov
cld
mov
cld
mov
test
cld
mov
movsb
gs
cld
mov
movsl
gs
cld
mov
movsl
fsubs
fsubs
fldenv
fldenv
fldenv
cld
mov
mov
cld
mov
mov
aam
popa
aad
popa
aad
pusha
aad
popa
aad
popa
cld
mov
fwait
pop
cld
mov
fwait
pop
aam
pop
aam
pop
cld
mov
fwait
pop
aam
pop
aam
pop
aam
pop
aam
pop
aam
pop
cld
mov
cltd
pop
cld
mov
lcall
pop
rcrl
cld
mov
cld
mov
lcall
mov
stos
jne
cld
mov
stos
jbe
stos
jne
stos
jbe
stos
jne
cld
mov
stos
jne
stos
jbe
cld
mov
stos
jbe
cld
mov
test
fldcw
fldcw
fldcw
fldcw
fisubrl
fisubrl
cld
mov
cmpsl
jno
cld
mov
test
fldenv
fldcw
fldcw
cld
mov
test
fldcw
fldcw
cld
mov
cmpsb
outsb
fsubs
cld
mov
cmpsb
outsb
fsubs
fsubs
fsubs
fsubs
cld
mov
movsb
insb
cld
mov
cld
mov
movsb
insb
xlat
movsb
insb
xlat
movsb
insb
xlat
movsb
insb
xlat
movsb
insb
xlat
movsb
insb
cld
mov
mov
mov
mov
mov
mov
mov
mov
cld
mov
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
mov
add
add
lahf
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
sbb
add
add
orb
add
outsl
add
outsl
add
add
add
add
outsl
add
outsl
mov
outsl
add
outsl
add
outsl
add
outsl
mov
outsl
add
outsl
add
outsl
add
outsl
mov
lcall
incl
add
add
outsl
add
outsl
mov
lcall
incl
add
add
outsl
add
outsl
mov
lcall
incl
add
add
outsl
add
outsl
mov
lcall
incl
add
add
add
add
out
incl
outsl
inc
out
incl
outsl
incl
add
add
add
add
outsl
add
outsl
add
outsl
add
outsl
add
out
incl
outsl
inc
out
incl
outsl
incl
add
add
add
add
outsl
add
outsl
add
outsl
add
outsl
add
outsl
add
add
outsl
add
outsl
add
add
add
add
mov
add
add
outsl
add
outsl
incl
add
add
add
add
outsl
add
outsl
add
add
add
outsl
add
outsl
add
add
add
add
sar
sar
add
add
add
mov
add
outsl
outsl
add
add
add
add
sar
sar
add
add
add
mov
add
outsl
add
iret
aas
sar
add
add
add
mov
add
add
outsl
add
add
iret
aas
sar
add
add
add
mov
add
add
outsl
add
outsl
mov
add
add
mov
mov
add
add
outsl
outsl
mov
add
add
mov
mov
add
add
outsl
add
outsl
pusha
iret
incl
add
inc
pop
mov
add
add
mov
add
outsl
outsl
pusha
iret
incl
add
inc
pop
mov
add
add
mov
add
outsl
add
outsl
mov
add
inc
pusha
incl
add
add
add
mov
add
outsl
outsl
mov
add
inc
pusha
incl
add
add
add
mov
add
outsl
add
outsl
mov
add
incl
add
add
add
jmp
outsl
add
add
outsl
outsl
mov
add
incl
add
add
add
jmp
outsl
add
add
outsl
add
outsl
mov
add
add
pusha
iret
jmp
outsl
add
add
outsl
add
add
out
incl
add
add
add
jmp
outsl
add
add
outsl
add
lock
jmp
outsl
add
add
outsl
add
lock
jmp
outsl
add
add
outsl
add
add
lock
add
nop
incl
add
add
add
outsl
mov
outsl
add
add
outsl
add
add
add
add
outsl
add
outsl
add
outsl
add
outsl
add
add
add
add
add
out
incl
add
add
outsl
add
outsl
mov
lcall
incl
add
add
add
add
add
out
incl
outsl
lcall
incl
add
add
add
outsl
mov
inc
out
incl
outsl
incl
add
add
add
add
outsl
add
outsl
add
outsl
add
outsl
add
outsl
incl
add
add
add
add
outsl
add
outsl
add
add
add
outsl
add
add
add
outsl
add
outsl
pop
sar
sar
add
add
add
mov
add
outsl
outsl
push
iret
aas
sar
add
add
add
mov
add
add
outsl
add
sar
add
add
add
mov
mov
add
add
outsl
add
iret
incl
add
inc
pop
mov
add
add
mov
add
outsl
add
add
add
inc
pusha
incl
add
add
add
mov
add
outsl
add
loopne
add
add
incl
add
add
add
jmp
outsl
add
add
outsl
add
out
incl
add
add
add
jmp
outsl
add
add
outsl
outsl
mov
jmp
outsl
add
add
outsl
add
outsl
mov
outsl
add
add
outsl
outsl
add
outsl
add
outsl
add
outsl
add
aas
lcall
lock
sarb
pop
addb
add
add
add
add
add
add
add
add
add
add
add
pop
mov
loopne
mov
loopne
mov
loope
mov
jg
mov
loopne
sarb
pandn
rolb
fistpll
rolb
mov
add
push
rolb
test
aas
push
sar
test
add
add
adc
add
add
sbb
push
add
and
add
add
add
add
cmp
add
cmp
add
adc
jne
fcmovnbe
insb
ds
add
jp
cs
adc
jecxz
das
jae
add
or
iret
mov
test
jmp
add
jmp
and
push
xor
add
sbbl
pushf
dec
scas
mov
ljmp
fisubrl
mov
inc
lcall
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
fimuls
cmp
jno
adc
sub
fildl
pop
and
jb
xchg
pop
fwait
inc
mov
sbb
int3
addb
push
pop
xchg
and
adcb
pushf
out
popf
popl
pop
jg
mov
enter
addb
mov
sub
jg
andb
subl
add
jl
mov
xor
mov
ror
push
stos
jg
cmp
jno
adc
push
cmp
cs
icebp
xchg
sbb
ret
xchg
push
add
push
mov
call
cmp
xchg
repz
sti
std
inc
push
das
mov
int
xor
mov
pop
push
mov
addr16
clc
push
xchg
stos
sbb
jo
pop
mov
or
adc
xchg
pop
leave
shll
dec
dec
rcr
mov
out
lahf
mov
out
js
clc
pop
in
imul
xchg
ja
pop
push
ss
fwait
push
push
sub
dec
mov
sbb
daa
mov
out
roll
push
lods
cmovl
jno
scas
push
push
xchg
lds
xor
push
inc
sub
add
aad
repz
jge
cs
jle
pusha
addr16
lds
adc
shr
jo
testl
adc
stos
mov
cwtl
inc
movsl
cmp
loop
and
repz
in
jl
sub
movsl
or
cmp
or
cmpb
xchg
add
sub
sub
mov
pop
mov
daa
std
test
stc
mov
push
clc
pop
mov
jmp
pop
xlat
insb
ret
shrl
mov
add
cld
dec
mov
or
mov
and
insl
xor
std
fbstp
mov
jl
icebp
sbb
lret
mov
cmp
lods
stc
mov
stc
and
idivb
mov
or
add
add
push
je
pusha
test
sub
dec
popf
push
xor
iret
shr
lcall
les
dec
iret
ja
jnp
pop
test
iret
xor
sbb
cmp
fwait
fwait
dec
push
xchg
bound
or
loope
xchg
test
jge
lea
arpl
mov
decb
test
pop
jnp
inc
xchg
fcomps
or
or
adc
shlb
fistps
and
jns,pt
jne
jns
dec
jl
push
mov
add
pop
pusha
repnz
sahf
movaps
lds
jnp
pushf
shlb
inc
mov
push
sarl
addr16
int3
test
cmp
repz
aas
or
xor
test
pop
dec
lods
and
jnp
mov
cltd
xorb
cmpsb
xlat
ret
scas
xor
xor
cmp
gs
pop
jb
inc
push
xorb
mov
xchg
sub
inc
mov
sub
mov
cs
js
mov
pop
out
push
mov
rcr
inc
xor
das
inc
mov
adc
sbb
xor
ret
sbb
xchg
dec
out
mov
int
jns
dec
sub
and
sbb
push
shrb
fdivrs
and
insl
sbb
or
lods
push
mov
icebp
jp
lods
dec
shlb
inc
fdivl
and
mov
xchg
scas
jecxz
mov
mov
idivb
sbb
fdivs
xor
sub
inc
and
ss
dec
jge
sub
xchg
movsl
and
sbb
mov
fstl
aad
into
add
fcompl
xor
dec
sub
lock
mov
das
into
adc
imull
xchg
push
sub
xchg
and
mov
cmp
jmp
mov
fbld
in
mov
lret
pusha
jecxz
rorb
xchg
mov
inc
lods
sar
sub
decb
stos
sub
adc
add
rolb
xchg
clc
in
js
cwtl
push
mov
mov
xchg
jo
mov
and
sti
push
and
ret
dec
scas
add
test
mov
and
sahf
sub
cwtl
ss
loopne
push
cmp
adc
mov
iretw
pop
iret
xchg
fildl
or
cltd
fildl
mov
push
jne
je
xchg
mov
jg
inc
jmp
jl
jb
jnp
push
lock
arpl
mov
mov
imul
xor
jo
loope
jnp
push
icebp
mov
je
scas
aam
mov
ffreep
mov
adc
or
in
in
repz
testl
mov
xchg
imul
inc
xor
sbb
xchg
dec
xlat
imull
das
in
out
or
and
add
cmp
in
roll
cmp
mov
inc
push
jnp
mov
inc
inc
bound
and
pushf
jns
cs
ja
icebp
gs
dec
push
adc
jnp
rcrl
xchg
scas
push
push
sarb
xor
repnz
repz
adc
xchg
xor
inc
mov
cmp
iret
loope
test
pop
les
fldt
push
push
xor
mov
int3
xor
pop
out
bound
mov
adc
inc
test
test
ds
inc
pushf
jae
ret
and
icebp
cmp
adc
fidivl
xchg
out
test
mov
pop
push
sbb
enter
pop
sbb
push
cld
lds
stos
out
fimull
movsb
mov
scas
das
mov
mov
pop
imul
movsb
xchg
shlb
mov
pusha
jae
jmp
jns
popf
adcb
add
add
mov
or
pop
adc
incl
xor
push
loope
and
jnp
push
divb
cmpsl
xor
push
cs
repnz
or
and
pushf
mov
sbb
push
sub
repz
and
loope
mov
je
sbb
scas
shl
inc
mov
sub
mov
xor
add
rclb
push
push
jae
les
dec
sahf
sub
mov
cmp
dec
stos
add
data16
jl
mov
pop
scas
mov
pop
mov
leave
insb
popa
js
cs
es
inc
cmp
loopne
cmp
adc
jno
repz
inc
outsl
addb
shr
xor
adc
xor
ljmp
hlt
mov
push
or
in
les
add
lret
aad
sahf
int
mov
icebp
dec
inc
ret
xor
mov
ja
dec
and
in
inc
flds
dec
mov
out
push
lret
das
dec
xorb
addb
lahf
rcrb
iret
add
sub
cs
pop
sbb
sbb
mov
fiaddl
pusha
cmp
sub
mov
sarb
outsb
push
rcrl
inc
mov
sti
pop
js
xlat
leave
and
lods
adc
xor
sub
mov
pushf
mov
mov
xchg
ds
ret
jo
jl
lret
popa
cld
in
loop
or
loopne
aaa
dec
pop
lcall
gs
iret
in
pusha
mov
scas
loopne
push
adc
or
mov
stos
out
or
sbbb
fidivl
add
arpl
jnp
shrl
mov
scas
push
ret
arpl
aam
pop
xor
sub
scas
lods
pop
stc
cmp
in
pop
push
fwait
imul
dec
mov
dec
cs
sarb
cli
inc
js
mov
mov
ja
mov
push
and
sbb
inc
mov
cltd
test
daa
push
add
and
sarl
pusha
loopne
mov
clc
loope
mov
jns
cmpl
in
sbb
xorl
or
test
dec
mov
shll
loopne
jle
add
add
xchg
xlat
clc
mov
xchg
jnp
cld
scas
fs
add
mov
loopne
out
jecxz
jg
jp
adc
pop
cli
test
test
adcl
mov
std
xor
std
in
mov
jecxz
mov
aaa
inc
out
xor
and
sar
and
gs
cmp
xchg
cli
and
xor
push
inc
add
lret
ljmp
lahf
sti
rorl
xchg
ss
sub
aam
xchg
js
setno
dec
inc
lret
ds
adc
insb
sahf
mov
mov
inc
sub
shlb
cmc
out
fs
sub
outsl
das
sbb
sbb
mov
test
fnsave
jl
js
mov
ja
adc
shrl
adc
dec
mov
dec
mov
ljmp
fdiv
cmp
dec
repz
adc
pop
in
rcrl
je
movsl
jnp
mov
stc
adc
lret
adc
push
xchg
fists
push
in
sahf
pop
enter
dec
cwtl
imul
lods
repz
jl
and
fildll
xchg
xchg
mov
es
mov
mov
and
ljmp
jcxz
lahf
mov
hlt
dec
notb
mov
jp
rcll
pushl
dec
das
pop
repz
rcll
mov
inc
sub
ss
mov
out
push
mov
ret
pushf
xchg
mov
loop
pop
mov
sub
and
fwait
inc
mov
bnd
push
sti
insl
xchg
jne
popa
movsb
das
mov
out
jle
jbe
stos
iret
mov
pop
addl
pop
test
adc
xchg
jbe
mov
add
pop
and
push
jp
pushaw
xor
les
sub
imul
sub
or
jns
fldcw
outsl
dec
lds
dec
lcall
add
adc
sub
and
cli
jl
dec
stos
cmp
push
mov
iret
add
inc
dec
mov
jo
cltd
mov
addl
fstl
xchg
mov
pop
pop
mov
ss
or
sti
lock
sub
sbb
dec
pop
add
jl
fidivrs
fucom
mov
adc
addr16
stos
hlt
mov
push
call
adc
cmp
sbb
cmpsl
int3
adc
mov
test
xorl
call
in
mov
mov
xchg
dec
das
sub
cltd
push
hlt
cld
jge
push
mov
mov
jge
and
ljmp
inc
insl
dec
inc
inc
cmc
mov
in
sbb
xchg
xchg
jbe
gs
daa
hlt
xchg
pop
rol
iret
adc
cli
sub
sub
dec
pop
mov
fdivrs
jp
or
adcb
mov
pusha
xchg
fmul
ljmp
pop
dec
js
movsl
mov
ljmp
mov
lahf
aaa
pop
sub
inc
mov
xchg
and
jl
sub
int
ficoml
stos
and
insl
xchg
cmc
and
jecxz
cwtl
and
ret
addb
popf
mov
nop
mov
push
imul
call
cmp
pop
idiv
mov
rclb
cmp
xchg
lock
or
xor
dec
inc
cmc
dec
inc
test
int3
jne
jns
arpl
jp
pop
pop
dec
into
jns
sahf
sbb
out
xchg
vmwrite
lret
add
cmp
loopne
sarl
push
mov
inc
xchg
aad
addr16
sbb
and
dec
pop
mov
rclb
js
test
je
aaa
fcmove
jge
out
lock
cmp
into
mov
nop
mov
sbb
lret
cmc
push
mov
jne
dec
sub
movsl
pop
and
inc
outsl
mov
pop
loopne
pop
imul
fldcw
pop
xchg
cvtps2pd
add
jg
mov
inc
fcom
pop
lock
cmp
popf
inc
xor
jne
xchg
jle
add
jbe
mov
aaa
adc
mov
imulb
push
pop
imul
mov
in
pop
stos
mov
aaa
mov
aaa
add
pop
jnp
sbb
je
scas
clc
les
lcall
out
es
add
leave
scas
adc
mov
rclb
rcll
cwtl
loop
pop
ja
xor
add
and
jno
cmp
mov
test
int
mov
jle
iret
pop
outsl
jmp
insb
mov
mov
rorb
push
out
push
push
inc
lret
jle
insl
mov
push
push
adc
and
aas
add
xchg
lret
les
je
std
aaa
xor
cmpsl
mov
xlat
sub
js
push
mov
pop
push
jmp
enter
push
lcall
scas
xchg
pop
cmp
inc
mov
sub
push
add
mov
xlat
mov
xchg
push
and
addr16
addr16
push
insl
cmc
mov
jge
test
add
adc
jne
jecxz
or
aam
rol
je
and
cmp
dec
jnp
add
idiv
mov
jns
mov
aas
pop
scas
xchg
fsubrs
and
mov
mov
sbb
and
jnp
adc
adc
dec
ret
xchg
push
jp
mov
cmpsl
outsb
in
das
mov
loop
cmc
jmp
sbb
shlb
lods
adcl
out
arpl
mov
pop
ret
jp
out
test
in
std
mov
outsl
lea
sbb
xor
adc
inc
lea
push
mov
and
ret
mov
jmp
nop
and
jae,pt
push
aaa
mov
stos
pop
mov
jbe
dec
imul
idivb
pop
ret
adc
loop
add
int3
mov
fstl
inc
add
or
gs
dec
loopne
sbb
cmc
inc
inc
xchg
xor
xor
arpl
push
cmp
movsb
push
dec
xchg
inc
cmp
pop
dec
add
and
jmp
fists
sbb
loope
xchg
or
mov
mov
xor
pop
add
jno
in
fadds
mov
lcall
cli
stos
add
sar
add
xchg
jle
roll
jmp
mov
mov
fsubp
rcrb
mov
pop
jb
mov
pop
test
in
call
ret
mov
pop
pushf
pop
fdivl
dec
push
sub
jo
jb
nop
xor
lods
jmp
loope
dec
mov
dec
jge
lret
aaa
idivl
test
xor
xor
mov
cmp
mov
jl
ret
notl
xchg
cwtl
movsb
add
add
outsl
lds
push
adc
mov
adcb
aas
pop
faddl
out
push
jnp
mov
addr16
adc
sub
ljmp
mov
shrb
dec
and
scas
enter
mov
fmull
sahf
jg
loopne
mov
cmp
cltd
lods
mov
rorb
in
sub
in
jb
and
adc
das
popa
mov
pop
pop
pop
ret
fisubrl
call
pop
lret
xor
mov
mov
imull
jo
pushf
cmc
flds
mov
daa
inc
jg
xor
lahf
out
push
outsl
out
mov
stos
pop
mov
test
mov
sbbl
loope
mov
ljmp
pop
cltd
cli
sbb
push
addr16
clc
adc
filds
cmpsb
xchg
mov
mov
push
xor
mov
shl
jbe
inc
ljmp
in
cld
xchg
test
or
in
int3
mov
pop
es
andb
sbb
repnz
push
pop
out
xor
loopne
push
sti
fldl
push
push
pop
pop
stc
push
repz
mov
out
mov
pop
fsubrl
negb
in
lret
inc
scas
faddl
mov
sub
and
repz
fwait
das
mov
inc
data16
mov
inc
sub
xchg
jns
cmp
lahf
mov
mov
and
push
mov
sub
in
add
lret
rorb
xorb
mull
lret
stos
mov
jne
pop
or
test
test
arpl
outsb
fistl
in
jae
cmp
xchg
cmp
ja
mov
pop
xor
test
pop
pop
mov
jge
adc
pop
out
sbb
xchg
js
pop
aaa
test
out
push
inc
in
pop
jge
into
add
push
scas
xor
mov
jbe
das
mov
fldlg2
mov
push
fdivl
jg
fwait
jl
cmc
sub
pop
dec
cmp
into
push
stos
loope
sahf
mulb
push
cmpb
pop
orl
push
xor
sbb
pop
aam
pop
or
jmp
jns
push
hlt
mov
xor
repnz
pop
les
leave
ret
out
mov
rolb
jne
sub
cmp
aam
ret
xchg
sbb
jle
inc
es
subb
imul
outsb
sub
cs
test
pop
stos
sub
cs
jbe
lcall
xchg
stos
push
and
xchg
jb
cmpsb
xchg
fs
stos
insb
shll
adc
lret
jbe
dec
mov
pop
jmp
push
in
movsl
lds
sub
out
push
sub
divl
jecxz
and
test
mov
jl
xlat
pusha
loopne
xchg
mov
cld
cmp
mov
cmp
idivl
into
xchg
cwtl
icebp
arpl
stos
in
and
jno
imul
or
xor
scas
push
xchg
mov
loopne
xorl
pop
arpl
xchg
in
push
and
push
mov
push
popa
mov
lahf
adc
sbb
loopne
jg
test
lret
fsubrl
pop
sbb
cmpb
sub
mov
out
inc
mov
mov
dec
pop
xlat
fisubrl
outsl
cmpsb
or
sti
js
xor
mov
sbb
out
sbb
inc
orb
mov
pop
mov
aaa
add
fadd
mov
out
jmp
dec
clc
repz
into
mov
sub
ret
jb
mov
cmp
movsb
test
xor
inc
pop
loopne
pop
mov
fdivl
dec
cmc
fwait
adc
je
push
mov
sub
sbb
jg
push
jbe
fincstp
mov
cmp
push
aam
idiv
stos
outsb
push
push
ret
mov
inc
adc
jp
adc
sbb
jno
mov
mov
daa
mov
adc
xor
dec
or
fidivrl
pop
icebp
popf
push
stos
mov
call
fdivrs
xchg
subb
adc
dec
inc
sub
xchg
inc
cltd
shll
scas
clc
rorb
xchg
pop
in
mov
adc
and
push
push
push
arpl
or
or
or
cli
jae
mov
jmp
or
cmpsl
and
xor
arpl
sub
push
jnp
xchg
mov
inc
lret
adc
rcrb
jmp
pop
mov
mov
mov
jp
xchg
addr16
jmp
sarl
sub
xchg
dec
add
push
aas
jnp
lds
adc
orl
bnd
or
fnstenv
dec
lods
bound
je
mov
xchg
inc
aaa
stos
movl
jnp
in
cmp
movl
push
dec
fisubl
test
enter
mov
into
adc
cld
push
cmp
mov
push
das
test
int
mov
push
dec
xchg
push
cmpl
pop
pop
xlat
lret
jg
lahf
sub
or
icebp
out
pop
sbb
popa
mov
mov
jecxz
and
pop
movsl
xchg
pop
filds
ret
mov
js
push
fs
sbb
jge
inc
fabs
push
lret
lret
and
cmc
bound
aam
sub
jne
mov
mov
pop
or
inc
ljmp
add
bound
je
sbb
jmp
jae
mov
in
loopne
andl
stos
repz
scas
push
jmp
insl
and
pop
lahf
push
or
or
lret
push
and
imul
jecxz
shl
push
inc
push
pop
clc
js
test
mov
and
nop
fs
inc
xchg
repnz
aad
stc
leave
popa
lcall
and
aaa
lcall
out
loop
outsb
adc
test
xchg
ret
sbb
loop
loope
jno
sbb
popa
mov
sub
rcrl
int
lcall
fdivrl
rolb
test
pop
out
repnz
iret
cmp
movsl
outsb
test
stc
lock
hlt
lret
stos
aaa
ret
in
adc
sbb
fsubl
mov
cs
push
icebp
lret
stos
cmpsb
adc
movb
jb
ja
fmuls
sbb
dec
outsl
cmp
xchg
add
and
into
ss
push
lea
pop
test
rcrb
rolb
lahf
imulb
adc
fmuls
push
loopne
add
or
fwait
sahf
cmpsl
mov
jo
cmc
xor
dec
stos
sub
push
enter
outsb
sbb
into
inc
mov
push
test
in
jns,pn
addl
imul
dec
sub
pop
jle
cmpb
adc
and
push
lods
cmp
nop
mov
fsubrs
mov
mov
push
cmpb
js
adc
shufps
dec
xor
fstl
imul
and
jle
jp
inc
mov
mov
cli
js
and
out
ja
int
push
test
fcmovb
js
pop
mov
cmpsb
sbb
inc
push
adc
jae
testl
mov
add
xchg
xor
out
dec
rolb
jl
pop
cmpl
jne
pop
rcrl
cli
and
aas
jnp
repz
shl
into
mov
cmp
adc
pop
xsaveopt
test
jo
inc
gs
movsb
sub
cwtl
xchg
mov
cmp
iret
xor
mov
sbbb
jne
pop
fmulp
les
in
pop
adc
and
ds
ds
aad
lret
jmp
aas
test
das
dec
test
out
pop
aaa
pushf
sbb
mov
pop
dec
adc
sbb
lea
fdivrs
push
movsb
sub
cmpsb
lretw
cmp
in
popa
mov
pop
pop
add
sbbb
sahf
mov
xchg
xor
in
push
and
dec
in
jo
and
xchg
xchg
ret
adc
xor
jmp
and
or
adc
dec
add
das
mov
fmulp
nop
xchg
adc
or
mov
xlat
xchg
pop
loopne
xchg
ret
or
mov
enter
les
adcl
mov
jmp
iret
mov
xchg
adc
jge
dec
out
add
pop
repz
inc
rol
jns
inc
std
xor
jge
jge
adc
icebp
or
push
inc
test
and
sub
pop
sahf
fidivl
lcall
pop
inc
and
cmp
in
cmp
inc
addr16
xchg
fnsave
push
gs
sbb
push
adc
out
mov
mov
rorl
rcl
jb
push
out
jmp
fsubs
pop
pop
popa
xor
lds
sub
pop
sub
gs
mov
divl
push
pop
mov
dec
sti
ffree
xchg
xor
push
cwtl
pop
das
xor
dec
imul
scas
xor
aad
add
dec
adc
ja
in
xchg
ds
pop
scas
icebp
cmpsl
mov
inc
in
xor
pop
cmp
pop
jne
mov
punpckldq
aam
dec
ss
mov
xchg
movsb
fcmovu
ret
dec
mov
outsb
rorl
das
and
cmp
mov
add
call
mov
mov
or
mov
ret
leave
lea
sub
sub
push
mov
xchg
jo
sub
and
mov
nop
push
out
mov
mov
pop
ret
mov
cmp
jo
pop
pop
adc
xchg
jbe
jecxz
pop
jne
out
adc
stos
push
nop
test
jge
adc
push
mov
add
hlt
leave
dec
andb
mov
jno
push
push
insl
inc
lods
adc
jbe
sahf
cwtl
lock
add
iret
sbb
stc
pop
sub
fwait
dec
pop
out
mov
jo
cmp
nop
adc
and
jne
cmp
adc
and
ja
ror
int3
or
insb
sub
add
ljmp
sahf
outsl
add
out
scas
stos
mov
xor
cltd
cmp
and
xchg
mov
insl
fwait
pop
movl
andl
outsl
xchg
jnp
jnp
popa
adc
mov
int3
xchg
bound
fbld
es
jb
stos
inc
bnd
cmp
loopne
pop
dec
and
jne
cmp
js
jl
inc
rcrb
enter
xor
push
loopne
mov
pop
sar
sub
pop
pop
xorb
pop
inc
stc
lods
add
push
cmpsl
xchg
out
ljmp
mov
clc
push
aam
jae
shlb
mov
lahf
cmp
inc
shrb
jl
fisttps
xlat
pop
push
inc
in
mov
rcrl
xchg
or
push
lret
aam
xor
sbb
adc
and
cli
pop
add
jmp
pop
sub
cmpsl
mov
cmp
in
inc
mov
sbb
out
jmp
repnz
popf
fmuls
nop
fwait
int3
rolb
xor
xor
data16
xor
std
scas
xchg
pop
bound
xor
sub
mov
cmp
pop
and
incl
aad
xorl
lcall
lahf
cmp
sbb
iret
mov
scas
test
jbe
mov
xchg
inc
sbb
imul
lret
pop
into
imul
int
pop
inc
mov
cmp
mov
xor
push
in
icebp
dec
scas
xchg
pusha
cmpsb
or
repnz
enter
add
sbb
xor
pop
in
sbb
xchg
mov
addr16
cmpsb
nop
addl
sar
in
mov
out
ja
in
or
or
mov
repnz
test
push
sbb
negb
push
add
in
mov
mov
stc
loop
cmp
cmp
out
sbb
scas
sub
sbb
jmp
loop
lds
add
jbe
mov
jnp
insb
mov
mov
mov
out
ja
hlt
lea
shr
cwtl
and
leave
xchg
adc
xchg
and
add
jae
push
mov
inc
lret
ljmp
mov
and
adc
in
sub
mov
addr16
cmpl
mov
cmp
and
pop
cmpsl
mov
adc
jg
add
pusha
inc
pop
or
lret
lds
inc
push
mov
arpl
mov
cmp
negl
sub
cs
dec
mov
push
cmp
jns
sub
push
xor
cmp
cmp
adc
pop
mov
dec
mov
mov
fs
cld
scas
dec
and
ret
push
cmp
mov
and
mov
dec
movsb
insl
and
aaa
out
cwtl
push
notl
pop
and
push
loopne
mov
scas
mov
out
bound
cld
xchg
scas
cmp
cmp
dec
into
add
push
adc
jp
or
xor
orb
mov
push
add
out
mov
roll
call
mov
mov
in
cmpb
mov
push
ds
dec
sbb
mov
fisttpl
mov
inc
repz
ret
jo
xchg
xchg
dec
mov
push
int
int
mov
cltd
dec
mov
jecxz
cmp
jo
mov
insl
adc
pop
push
dec
push
push
bound
cld
daa
and
div
lret
adc
lds
cld
add
inc
lea
aaa
imulb
out
pop
mov
data16
push
dec
mov
das
test
or
in
sub
jecxz
dec
in
xlat
test
push
daa
test
mov
sti
dec
jge
inc
sub
icebp
jecxz
pop
cmpsl
push
stos
cmp
push
mov
adc
pusha
fisubl
mov
test
push
outsb
into
outsl
sbb
dec
mov
test
lods
fildll
outsl
sti
xor
push
ror
in
add
dec
data16
out
shll
arpl
push
inc
jl
repnz
adc
jae
xor
sub
mov
dec
jmp
and
dec
fsubr
push
pop
les
jb
pusha
and
mov
in
mov
push
adc
data16
mov
xchg
iret
xchg
and
daa
in
sub
jp
mov
lods
ja
daa
add
test
scas
mov
cmp
pop
and
sahf
aad
jo
popa
add
gs
cmp
pop
loop
cmpsb
or
movsb
orb
or
fildl
dec
mov
test
dec
sbb
bound
imull
aas
lods
adc
inc
repz
ss
mov
jb
lahf
add
xor
add
cwtl
pop
aad
mov
xchg
jae
cmc
adc
cmp
xor
adc
rol
dec
int
out
lret
adc
cmp
nop
aas
shll
or
xor
jo
clc
iret
xor
xchg
push
outsb
mov
add
adc
or
ficoml
call
inc
jle
daa
fisubs
sbb
fistl
push
adc
jmp
test
cmp
mov
fisttpll
inc
adc
and
dec
fs
ret
xchg
das
jl
fiaddl
sbb
loope
mov
je
notl
dec
push
les
rcrl
inc
xchg
call
xor
xchg
aas
xlat
into
mov
orb
mov
sub
pop
and
jbe
push
dec
fidivs
jecxz
jg
dec
into
fs
jne
sub
adc
addr16
or
xchg
in
mov
aam
or
add
outsb
ja
and
xor
sub
inc
orl
adc
mov
movsb
dec
lods
cwtl
nop
cmpl
clc
jno
pusha
je
jae
xor
scas
xor
push
or
inc
jne
jp
in
and
cmp
dec
test
or
popa
ljmp
stos
sbb
mov
sub
data16
xchg
aas
xor
shll
jmp
jo
jne
stos
adc
adcb
pop
xchg
pop
cmpsl
stos
ja
lea
cmpsl
xchg
lret
jo
and
inc
xchg
mov
aam
test
pop
xrelease
xchg
rcll
js
sbb
out
sub
pop
lds
push
mov
aaa
arpl
movsl
subb
jl
loopne
cs
sbb
mov
pusha
mov
xchg
das
sti
add
leave
ja
inc
out
push
dec
mov
jge
cmp
mov
movsl
xlat
scas
outsb
sub
loopne
ja
pop
clc
dec
adc
mov
test
stos
xchg
cltd
sub
xchg
push
std
aam
add
int
push
mov
xchg
inc
outsl
and
test
leave
je
into
mov
xchg
dec
dec
sti
iret
ds
call
lret
xchg
in
int
repnz
push
div
cwtl
decb
and
adc
lret
fdiv
mov
xor
push
pop
adc
fstl
insl
pop
aas
loope
testl
adc
cmpb
pushf
cmp
lods
xchg
add
sub
pop
into
pop
aas
lahf
mov
movsl
or
mov
push
stos
inc
rol
mov
add
icebp
push
popa
push
dec
push
jo
aas
out
clc
mov
shll
adc
cmp
fwait
pusha
adc
into
pop
xchg
pop
movsb
negl
xor
pop
int3
pop
popa
cmp
js
repz
adc
xor
mull
dec
lret
mov
fcmovnu
stos
addb
push
and
and
cmp
jb
aad
punpckhbw
xor
stos
in
jne
jae
dec
dec
popa
fmul
popf
sahf
scas
mov
aaa
and
imul
xor
sbb
aaa
push
xor
push
push
mov
pop
push
xchg
or
das
aad
mov
test
cmp
shlb
xchg
lcall
add
cltd
or
dec
jp
das
movb
addb
imul
add
out
jle
sbb
test
add
lds
mov
sub
fiaddl
add
pop
push
mov
repnz
push
int3
push
mov
daa
fcmovb
and
out
hlt
cmpl
pop
mov
sub
in
fstpl
fnstsw
pop
ret
loopne
jns
insb
fisubrs
cmp
push
push
mov
lcall
mov
dec
pop
das
or
xor
dec
xor
push
cli
push
push
push
and
fucomi
and
or
jns
dec
sub
inc
adc
mov
mov
movsl
mov
push
add
flds
jp
iret
testb
dec
ja
aad
movsl
sub
popa
sahf
mov
test
stos
fcomps
mov
pop
xchg
lds
out
insb
jl
cwtl
mov
test
pushf
push
inc
push
rcrb
sub
sbb
aad
jmp
jns
fidivrs
out
pop
dec
xchg
push
dec
jb
fsub
clc
daa
int
fwait
jbe
iret
xor
sar
pop
rcrl
insb
xor
in
pop
repnz
cmp
cltd
and
cmp
pop
xchg
xchg
not
push
test
xchg
cmc
pop
push
mov
inc
xor
sar
pop
dec
mov
inc
test
pop
cmp
iret
lret
imul
sub
jle
fists
sub
mov
inc
std
add
dec
sub
lret
xchg
enter
pop
mov
stos
ret
inc
push
jnp
ljmp
inc
adc
sbb
movsb
lock
push
push
mov
aam
fcomi
leave
sbb
xchg
jmp
mov
arpl
inc
xchg
jnp
mov
pop
mov
add
push
xlat
cs
sub
bound
jge
lock
movl
sbb
test
mov
shl
or
sub
cmp
mull
sub
inc
and
sbb
es
pop
imul
mov
idivl
leave
pop
in
mov
stos
mov
es
xchg
jmp
push
insl
push
push
jne
sti
push
sbb
jmp
push
sbb
sub
or
cmpsb
loopne
fs
mov
xchg
push
bnd
in
test
insb
aad
fs
sti
mov
mov
ljmp
cld
jno
lds
push
jmp
mov
das
dec
and
sbb
adc
lea
sbbb
je
or
lret
jmp
pop
sbb
sub
xchg
ja
or
aad
xchg
push
rolb
mov
ret
cmpsb
pop
pop
sub
and
ds
nop
xchg
add
cmp
shll
dec
jp
jo
incl
inc
pop
jae
push
fwait
jl
cmp
pusha
dec
lret
shll
sbb
lea
sbb
cs
sub
pop
pushf
jbe
std
stos
outsl
push
lret
pop
outsl
lret
mov
mov
and
xchg
rcll
mov
xchg
inc
hlt
clc
andb
dec
imul
xchg
clc
hlt
sub
ret
sti
popf
leave
iret
psubusb
int3
mov
dec
ja
movsb
into
push
mov
cmp
jbe
dec
xchg
sub
push
inc
jge
lds
stos
loope
push
loopne
aad
rsqrtps
mov
xchg
idivl
push
movsb
add
jl
gs
or
xor
data16
mov
jne
dec
or
fistpll
sub
add
cmp
icebp
and
lods
cmc
lods
shll
mov
notb
cmc
outsl
stos
ds
inc
add
cmp
popa
pop
adc
dec
les
loope
adc
jp
mov
inc
pop
lret
in
inc
jp
loopne
cmp
popf
stos
in
stc
repz
add
into
into
mov
or
rcll
mov
out
or
cs
jne
or
sbb
jl
rorl
sub
out
out
ja
ret
dec
xlat
imul
mov
imul
pop
mov
push
repz
addr16
fdivl
xor
in
xchg
repz
pop
push
stos
pushf
mov
mov
mov
loope
push
push
push
dec
or
cmp
adc
mov
sbb
popf
std
jbe
mov
int
inc
dec
mov
dec
sub
sbb
push
xor
sbb
and
insl
cli
cmp
xor
cmp
stc
inc
dec
xor
fistps
stos
int3
popf
std
testb
outsl
imul
aas
push
daa
ss
dec
fwait
jo
testb
movsb
hlt
rorb
imul
or
mov
push
stos
mov
daa
mov
fstpl
adc
push
sub
sbb
roll
inc
repz
leave
adc
mov
iret
int
mov
sub
subb
shrb
imul
push
lock
push
gs
call
in
xchg
sarl
out
popa
or
jns
es
mov
pop
sub
xchg
xor
adc
cs
mov
sarl
rcll
fwait
sbb
push
stc
adc
lcall
dec
pop
jnp
dec
test
push
xlat
cmp
movsl
out
sbb
mov
insl
mov
sbb
adcl
sub
cmp
je
mov
pop
inc
cmpl
out
adc
fdivp
add
mov
mov
sub
push
mov
sbb
cmpsb
mov
push
cmp
push
add
hlt
aad
std
iret
iret
xchg
adcl
xor
pop
out
push
add
sbb
pop
mov
adc
mov
leave
jo
jbe
jbe
andl
out
sub
out
sub
and
dec
inc
sub
xor
fsts
pushf
and
jne
pop
xchg
jle
cmpl
montmul
cmpsb
inc
fmull
fldcw
cli
or
jbe
sbb
loope
and
sbb
nop
sbb
pop
dec
xchg
xchg
clc
cmpsl
fists
cwtl
es
push
push
cmp
mov
xchg
sbb
loop
mov
adcb
das
mov
lahf
mov
mov
xchg
push
dec
jbe
fnstsw
xchg
add
jo
push
leave
inc
add
aas
jne
or
in
loope
loope
ret
mov
xor
mov
xchg
lea
jg
rcrl
adc
stos
repz
or
xchg
aad
pop
dec
jecxz
fldl
dec
mov
push
xchg
das
pop
or
mov
or
out
in
mov
test
mov
outsb
cmpsl
aam
daa
daa
das
shlb
insl
lods
aam
xor
out
cmpsl
sbb
push
inc
adc
hlt
sub
mov
inc
push
inc
mov
loop
xlat
inc
mov
xchg
mov
and
std
and
mov
mov
push
and
push
rcrb
mov
pop
out
rol
push
cmpsl
inc
cmp
call
dec
in
shll
pop
das
sbb
clc
leave
dec
push
ret
jbe
shll
loopne
mov
or
jb
frstor
xchg
stos
sub
or
hlt
gs
repz
xchg
jle
add
and
out
push
into
push
jbe
cli
or
fsubrs
mov
jbe
insb
scas
sub
rclb
mov
fidivs
cmp
add
jp
mov
cld
sub
mov
cmpsb
or
sub
add
lea
mov
push
xchg
add
jnp
lahf
js
dec
test
test
repz
ret
inc
cwtl
sbb
xchg
test
mov
add
xchg
sbb
dec
adc
or
clc
xchg
jl
pop
sub
adc
mov
fdiv
outsb
in
inc
imul
scas
rorb
aaa
pop
xchg
repnz
std
jge
adc
stos
lds
jge
fs
gs
fistpl
push
dec
mov
subl
mov
hlt
lahf
xor
cmpsl
lret
cmpsb
mov
mov
add
repz
xor
scas
sub
dec
fnsave
mov
imul
mov
sbb
pop
lret
mov
cmp
mov
mov
ja
ret
mov
pop
out
cmc
or
mov
xor
push
and
and
sahf
xchg
in
cs
xchg
faddl
push
imul
jne
jb
cwtl
mov
imul
rorb
fistpl
jge
rcrl
repz
or
sbb
cmp
jle
mov
sub
and
mov
incl
xchg
loop
jb
and
sbb
or
mov
inc
xchg
cs
push
jne
cli
stc
mov
jbe
iret
pusha
shl
sbb
loop
fs
bound
nop
inc
and
pop
test
inc
in
mov
inc
or
int3
imul
sarb
std
and
ja
sbb
push
or
mov
loop
pop
jmp
mov
lret
cmpl
je
test
inc
mov
jo
cmpsb
repz
ja
out
sub
in
add
mov
leave
mov
popa
shll
ljmp
xchg
mov
outsb
sbb
jecxz
imul
or
out
bound
add
pop
imul
cli
and
push
imul
inc
aad
xchg
jnp
inc
ss
and
pusha
cs
jae
and
aas
rclb
enter
mov
dec
adc
mov
jle
jae
fs
jl
mov
in
inc
je
fcomi
sbb
mov
sti
jbe
pop
fimuls
pop
xchg
or
add
ds
push
lds
rorl
mov
ret
jp
jmp
adc
jbe
mov
dec
dec
lods
lcall
sbbl
cmp
push
mov
aad
dec
add
call
mov
xchg
cmpsl
pop
lds
cmp
jge
mov
cmpsl
gs
xchg
mov
pop
pop
push
repnz
xor
push
jge
cmc
insl
dec
mov
cmp
and
loope
test
xchg
adc
jns
das
arpl
jno
sbb
in
sub
mov
lahf
pusha
stc
adc
sub
xor
cwtl
sub
inc
data16
jno
fildl
aas
repz
paddusb
dec
cli
cld
pushf
stos
xchg
mov
sub
push
ret
aad
das
jno
sbb
mov
leave
adc
and
daa
cmpsb
cmp
xor
dec
sbb
out
mov
movsb
les
in
jno
xor
sub
sbb
push
add
adc
imul
ret
ret
scas
mov
orb
and
xchg
pop
dec
push
test
xor
cmp
adc
psubsw
dec
lret
hlt
nop
iret
push
rorb
into
cwtl
lcall
popf
hlt
test
sub
aaa
mov
push
cltd
mov
fdivrp
test
repz
out
pop
jne
aad
inc
add
nop
loop
xchg
mov
adc
dec
daa
loopne
adc
subl
jl
inc
adc
ret
mov
out
push
xchg
cmp
push
bound
arpl
mov
fidivl
push
fs
and
jne
mov
outsl
adc
xor
dec
in
mov
pop
cwtl
push
mov
icebp
test
jp
and
cmpsl
xchg
imulb
stos
cmp
jl
mov
bound
xor
and
das
sbb
jmp
cmc
aad
mov
loop
ficoms
pop
push
imul
clc
jmp
inc
adc
shrb
and
fmulp
add
pop
sub
out
imul
insb
jecxz
rcrl
sub
insb
in
daa
mov
shr
push
push
adc
xchg
jo
arpl
insl
outsb
ffreep
mov
in
dec
push
dec
jb
lahf
xchg
cmp
cmp
lea
push
aaa
cmp
pop
dec
iret
andnps
jg
sarb
stos
scas
pop
adc
and
bound
add
int
por
push
jecxz
cmpsb
sub
jne
js
adc
or
imul
xchg
xor
loopne
adc
sub
frstpm(287
xor
inc
xor
insb
or
data16
out
notb
fisubrs
jmp
dec
test
sbb
psrlw
stos
add
rcll
push
and
movb
cmp
xchg
jmp
jge
repz
pop
adc
jmp
mov
mov
test
xchg
ss
jmp
loop
push
sbbl
add
push
js
pop
xor
mov
frstor
call
xlat
jne
pop
and
popa
or
repz
push
mov
push
pop
pushl
std
std
rcll
cs
cltd
mov
lea
fsin
ljmpw
jmp
ja
dec
mov
inc
divl
fwait
testl
mov
xchg
adc
es
fabs
lods
incb
cmc
orb
or
jo
fiadds
out
mov
fstps
sbb
cwtl
xor
add
push
xchg
sub
stos
aas
repnz
mulb
pushf
iret
adc
test
cmp
push
sti
rcl
shlb
mov
not
ja
ret
pushf
mov
stc
pop
aas
push
hlt
cmp
icebp
push
into
ret
mov
movsw
jo
push
into
dec
test
push
mov
sti
inc
mov
jne
pop
in
jmp
fbstp
sub
jg
inc
push
sbb
mov
xlat
push
xor
mov
or
pop
xchg
negl
pop
and
jnp
xlat
xchg
cmp
sarb
jne
pop
inc
mov
mov
scas
dec
mov
lea
cmp
in
mov
jb
insb
jle
jl
sbb
ljmp
xchg
inc
movsl
pop
in
push
cmp
sbb
sub
mov
outsb
inc
loop
nop
mov
xor
int3
add
sub
xor
cmpsb
push
in
cmpsl
cmp
lret
hlt
cmp
sub
decl
adc
pop
mov
pushf
mov
fsubr
pop
mov
loopne
mov
cwtl
clc
dec
roll
fistpll
mov
cli
mov
lods
loope
and
and
xor
xchg
lds
sub
inc
xchg
aas
pop
addr16
add
dec
xor
lret
mov
pop
pop
mov
push
pushf
pop
ret
movsb
hlt
jl
cmc
mov
jle
mov
scas
ds
mov
add
daa
xor
out
add
inc
repnz
sbb
cmpsl
mov
mov
mov
push
mov
sub
daa
lret
lea
adc
jnp
mov
stc
stos
dec
cmp
bound
out
or
mov
xor
sahf
stos
sahf
jno
leave
cmc
in
enter
sub
test
dec
dec
jmp
test
push
adc
filds
cmc
jle
cmp
dec
movsb
push
or
and
cmpb
xchg
push
fcom
xor
sub
je
sbb
test
dec
fstpl
pop
clc
hlt
push
sub
fdivr
push
mov
jge
jle
roll
mov
es
out
std
mov
xchg
popa
xor
repz
scas
push
shll
outsw
xchg
out
xor
outsb
pop
in
out
shl
mov
sub
dec
aas
int3
insl
mov
or
das
fisubl
insb
pushf
sub
decb
and
xchg
inc
ss
fwait
into
loope
jge
pop
std
cmp
cmp
jl
arpl
test
cmp
in
xor
inc
sbb
fs
insb
arpl
cmp
xor
je
shlb
mov
fcomip
push
lret
popf
cli
sub
adc
mov
jns
mov
jo
popa
jmp
outsb
int3
in
push
imul
sub
xchg
ret
and
pop
ja
fstpl
jmp
mov
mov
xchg
das
fistpl
mov
fidivrl
mov
fiadds
iret
jns
xchg
lods
inc
push
inc
cli
adc
mov
dec
jge
icebp
cltd
mov
or
nop
dec
ljmp
js
scas
jae
mov
scas
cmova
or
mov
jae
and
jo
mov
das
arpl
pop
cmp
cmpsl
dec
pusha
xor
int
push
addr16
rcr
stos
test
or
xchg
jecxz
cli
sbbb
std
jecxz
aam
push
mov
pop
lds
or
pop
mov
push
cmpsb
xchg
jl
repz
add
leave
lahf
repz
shrl
jo
adc
inc
ljmp
push
movsl
mov
cmp
mov
test
mov
sub
mov
testb
popf
fdivl
mov
dec
jmp
xchg
aas
call
mov
jo
cltd
xor
scas
mov
arpl
cmp
adcb
sub
adc
and
mov
ficompl
or
push
add
add
xchg
in
test
out
movsb
repz
ds
or
inc
cmp
out
stos
jbe
and
les
std
jmp
xor
inc
cmp
dec
mov
ja
lods
les
push
and
pop
and
fstpl
mov
test
icebp
xchg
sar
idivl
pop
inc
mov
sub
adc
jg
pop
mov
and
pop
clc
push
xor
popl
pop
xor
mov
mov
jae
dec
out
in
add
mov
repz
cmp
or
xchg
out
loop
push
mov
aad
lret
cmpl
in
inc
lcall
cld
sbb
dec
sbb
xchg
sub
adcl
inc
push
jne
mov
and
shlb
icebp
jecxz
fimuls
lahf
cmpb
xchg
mov
and
loope
fsubl
fdivl
js
cld
adc
sub
jecxz
mov
sbb
xor
jecxz
xchg
jne
jno
mov
rol
push
sahf
icebp
hlt
fcomps
in
mov
test
divb
or
dec
daa
dec
dec
inc
inc
in
sbb
lret
cmpsl
jmp
or
mov
roll
dec
addl
sbb
outsl
insl
inc
arpl
ja
leave
xchg
jle
imul
cmpsl
popa
push
xchg
adc
push
or
sbb
push
mov
push
adc
in
add
ds
cli
cmc
sub
or
test
ds
rcll
inc
insb
pusha
insb
sbb
orl
mov
push
mov
scas
or
rorb
mov
mov
pop
shlb
sub
sbb
roll
js
movl
lds
jns
dec
loopne
scas
dec
push
lret
ret
sbbl
int
lea
and
xchg
jne
ret
jbe
sbb
jno
xor
sub
or
adc
pop
das
mov
mov
jbe
in
mov
jl
ret
cli
mov
in
push
pop
int
jl
mov
roll
rcll
fs
je
lea
ja
stc
shll
lea
je
mov
cmpsl
insb
lock
or
mov
insl
xor
jecxz
jno
xchg
fwait
ja
cs
add
push
mov
push
jno
lret
sbb
sbb
xchg
mov
mov
js
jp
pop
pop
add
jle
ljmp
or
test
cmpsl
sahf
mov
punpcklwd
or
pop
pusha
xchg
test
mov
outsb
mov
jmp
xor
pop
xchg
testl
cmp
sub
adc
aad
mov
in
push
add
xchg
arpl
dec
inc
or
aam
test
xorb
xor
iret
cmp
and
pop
sbb
repnz
jae
cmp
in
lock
dec
sti
decb
clc
and
into
insl
cmp
lret
inc
xchg
or
cmp
out
xchg
add
adc
out
jbe
pushf
lods
dec
rolb
dec
mov
cs
vpunpckhqdq
cmpsl
jb
pusha
fs
cmc
in
mov
pop
and
sbb
fldl
xor
pop
sub
xchg
andb
push
mov
lea
pop
ss
jmp
dec
sbb
stos
sub
sub
loop
pop
daa
fs
scas
adc
adc
stos
imul
clc
stc
movsl
dec
mov
push
push
stos
nop
mov
je
pop
gs
fs
mov
add
xchg
dec
add
cmpsb
pop
inc
inc
lods
ficomps
int
mov
loop
loopne
mov
xor
mov
inc
cmp
ljmp
xchg
test
xchg
test
sub
mov
faddl
lret
push
aaa
lcall
das
dec
jae
cmp
cld
add
sti
frstor
xor
aam
dec
stc
pop
hlt
mov
andl
inc
inc
lock
xor
sub
les
sbb
and
xor
fs
orb
xlat
sbb
and
daa
mov
jg
pop
jle
lds
inc
or
add
pop
xor
aad
mov
mov
jno
in
scas
jb
jg
rorl
in
xchg
lea
ret
pop
xlat
sbb
mov
mov
push
mov
call
sub
data16
divb
cmp
arpl
pop
out
mov
out
cmc
les
push
aad
and
hlt
in
lock
loop
cld
mov
repz
call
outsb
mov
xor
inc
mov
cmp
inc
add
pop
sbb
jl
pop
add
mov
xchg
cwtl
aad
mov
cmc
movsl
fbld
ja
sub
mov
movsb
aaa
xchg
push
sub
xchg
xor
mov
fwait
sbb
xchg
lds
and
mov
outsb
in
out
and
imul
mov
dec
cld
xchg
jg
and
xchg
in
test
sahf
incl
je
inc
cld
adc
loop
es
jge
in
inc
jbe
jl
xor
je
adc
roll
out
pushf
pop
inc
fimull
mov
outsl
lock
lods
push
popa
xchg
mov
or
js
pop
out
cmpsl
jmp
mov
sahf
mov
add
mov
cmpsl
xor
mov
fwait
inc
dec
adcb
push
ljmp
lret
out
aad
sub
sbb
cmp
movsb
pop
inc
ja
repnz
outsb
add
jecxz
insl
pop
lods
push
mov
mov
insl
imul
shr
in
xor
cmp
or
xchg
ret
pop
iret
jl
lahf
mov
add
adc
mov
and
xor
movsb
fiaddl
cmc
lea
sub
inc
stc
mov
cwtl
mov
xor
jnp
aaa
lcall
ljmp
cltd
rolb
out
cwtl
fcomip
push
aam
out
mov
shrb
mov
ss
popa
pop
mov
loop
xchg
jecxz
adc
lret
in
jg
mov
ljmp
iret
aaa
lock
xchg
cltd
imul
rorb
pop
xor
lods
jp
nop
jge
lcall
iret
inc
inc
les
ljmp
add
shr
jmp
int3
test
xor
test
mov
add
lods
enter
popf
mov
adc
call
or
notb
or
mov
hlt
fnstenv
addb
cmp
jp
inc
adc
jp
add
outsb
fcoms
aam
xor
and
jne
les
dec
fistl
pusha
pushf
repz
mov
fdivrl
sub
sub
test
cmp
int3
orl
repnz
xor
pop
imul
fwait
adc
push
orb
loopne
xchg
test
scas
xchg
inc
inc
xor
xor
outsl
fucomi
dec
xchg
pop
dec
test
ds
mov
in
scas
cmp
aad
mov
push
xchg
ds
loope
outsl
lcall
std
push
push
stos
inc
imul
loope
push
xorb
dec
gs
jnp
adc
sbb
jp
xchg
push
ret
xchg
cs
xlat
xlat
jecxz
fucompp
xor
mov
mov
in
das
xlat
jmp
fld
sbb
into
push
out
jg
loop,pt
aam
iret
mov
sarb
divl
push
psubb
xchg
or
or
fsubrl
out
push
jmp
xchg
cmp
sub
rclb
inc
cli
sub
das
push
jp
xor
jl
adc
call
jno
jno
arpl
stos
mov
mov
ja
pop
mov
scas
jae
push
clc
add
inc
push
push
bnd
jp
int
cmp
aas
adc
mov
cmp
mov
pop
orl
add
mov
mov
cmp
and
mov
adc
faddl
inc
idivl
fcmovne
mov
pop
sub
popf
inc
subb
fmull
lret
or
iret
std
add
pop
sub
lahf
fdivl
mov
dec
jne
clc
sarl
sahf
lcall
in
push
xor
push
inc
addr16
and
cmp
scas
add
dec
jae
stc
adc
sbb
mov
sbb
mov
jnp
xor
jo
lahf
pop
loope
sar
add
rol
jb
jge
in
jmp
cwtl
add
pop
sub
pop
idivl
inc
lret
stos
xchg
das
lods
add
cmp
lret
xchg
imul
jmp
inc
aad
testb
or
add
idivl
dec
fwait
pop
lret
cmpsl
pop
pusha
ss
out
jmp
push
push
mov
shr
clc
jmp
push
outsl
inc
pusha
sbb
test
into
or
xchg
sbb
xor
jae
inc
adc
stc
hlt
out
je
lea
or
dec
lret
cmp
mov
xchg
pop
sti
push
mov
sbb
or
sbb
add
or
push
hlt
pop
sub
aad
add
push
dec
adc
push
cmp
inc
add
adc
mov
in
rol
and
fucomi
adc
cltd
out
out
or
pop
fs
sbb
inc
push
adc
test
push
jg
loop
cwtl
push
or
fwait
sbb
imul
mov
pop
int
int3
pop
popa
mov
cmp
repz
hlt
push
je
sbb
dec
rcrl
mov
push
xor
dec
push
push
sbb
movsb
call
test
pop
int3
xor
xchg
arpl
or
je
cld
sbb
imul
outsl
aas
int3
or
outsl
rorl
jmp
int3
stos
xchg
cmp
pusha
mov
pop
jmp
shlb
xlat
fistpl
mov
outsl
sbb
pop
sub
into
enter
ja
xor
lahf
mov
xorb
fwait
or
es
lea
sbb
xor
sbb
sbb
adc
lds
je
hlt
mov
push
add
mov
lods
sub
inc
inc
mov
aam
clc
into
xchg
cmpsb
sbb
scas
popf
dec
inc
test
ja
in
push
movsl
enter
fxch
jnp
xor
jp
out
dec
mov
loop
in
jp
jae
mov
and
jo
data16
ret
lock
push
lahf
cmp
sub
cltd
add
ret
pusha
dec
xchg
call
sbb
and
xchg
bound
lea
data16
in
test
jmp
jle
inc
insl
outsb
or
jmp
enter
push
ljmp
pushw
cmp
aas
andb
cmp
ja
pop
adc
mov
mov
nop
es
sbb
mov
test
cmp
mov
btr
addr16
stos
es
cmp
popf
mov
jg
inc
scas
sbb
jo
dec
mov
sub
je
jne
push
fucomi
adc
mov
jl
jle
out
insb
arpl
in
mov
loopne
bound
int
push
push
es
and
inc
scas
inc
xchg
test
mov
insl
repz
std
cltd
loop
icebp
es
adc
test
add
inc
iret
psrlw
enter
jecxz
out
or
test
push
out
sub
cmpsl
out
jmp
shlb
add
and
popa
sub
mov
cmp
dec
push
xchg
call
sub
in
fs
jle
push
cli
mov
test
or
les
and
stos
or
and
inc
add
out
repnz
push
dec
mov
push
jmp
dec
cld
hlt
iret
ror
mov
fcompl
ja
imul
inc
sub
leave
add
test
outsb
mov
shr
movsl
imul
inc
xchg
cwtl
fs
push
sub
add
xor
add
icebp
pop
push
in
inc
in
and
imul
jp
adc
add
std
inc
push
mov
dec
push
bound
imul
stc
xchg
ficoms
fisttpl
mov
ljmp
add
jl
mov
inc
cmpsb
test
icebp
mov
ljmp
jns
xchg
ljmp
in
aad
imul
loope
sub
and
xchg
cmpsb
popf
jmp
push
sbbl
scas
lock
push
pusha
pop
jbe
ret
mov
push
cmp
and
xchg
jp
test
mov
push
les
jnp
pushf
adc
jb
and
mov
jge
inc
mov
in
xor
insb
sub
popf
or
std
xchg
cmc
or
push
push
push
leave
jno
js
cmp
movl
mov
pop
insb
mov
test
ret
or
mov
add
clc
outsb
dec
addb
add
imul
mov
pushf
xchg
cmp
xchg
and
stos
lods
lea
fnstsw
aaa
int
mov
jge
and
xor
push
cmpsb
in
mov
aas
cwtl
jno
mov
gs
push
test
mov
inc
mov
sub
pop
or
pop
outsl
sbb
lods
dec
test
add
or
xchg
sub
add
fs
lret
xchg
outsl
mov
mov
push
and
les
mov
cmp
aaa
jmp
and
or
inc
cmp
subl
leave
jne
das
mov
iret
pop
call
cs
lret
and
test
pop
and
sub
dec
jge
test
adc
lea
push
sbbl
aaa
arpl
js
sub
mov
or
push
js
in
les
out
adc
das
xchg
or
ret
cmp
loop
pop
cmp
in
fs
dec
xchg
inc
cs
dec
mov
sarb
sub
adc
in
push
out
pop
pop
fmuls
test
cs
fwait
dec
adcb
dec
les
mov
out
xorb
xor
dec
push
pop
inc
xchg
push
pop
push
pop
mov
inc
sbb
jg
dec
call
inc
sti
pushf
lock
or
mov
and
fsubs
gs
push
adc
test
iret
push
popa
mov
lret
mov
clc
push
xor
mov
and
cwtl
movsl
xor
insl
cmp
repnz
mov
pushl
xorb
inc
inc
fbstp
xor
fwait
jns
cltd
push
cld
pop
sub
aad
inc
pop
out
iret
dec
sub
mov
inc
dec
lods
nop
mov
sbb
cmpsl
cwtl
adc
addb
lgs
push
mov
dec
test
xchg
push
in
jnp
push
pop
cwtl
cmp
fsts
jecxz
imul
js
xlat
mov
xor
jge
xchg
dec
jl
sub
into
jecxz
sub
addb
push
or
and
push
ret
or
adc
test
in
lcall
loop
push
int
push
or
mov
pushl
sbb
lcall
inc
pop
popa
push
iret
xchg
lods
add
cmp
daa
cmp
or
pop
push
pop
or
mov
add
xchg
mov
pop
push
push
pop
je
outsl
mov
mov
dec
dec
inc
les
ffree
jnp
pop
je
pop
dec
mov
scas
cwtl
ret
popa
dec
ja
orb
pop
push
into
pop
aam
xor
scas
pop
or
xchg
mov
popf
out
jle
imul
add
mov
sbb
shll
cli
faddl
mov
xrelease
xchg
jecxz
xchg
mov
movsb
dec
lea
pop
ficoms
jl
xorb
jne
xchg
sbbb
jge
xchg
mov
mov
cmc
insb
out
repz
pop
push
inc
and
mov
jle
xor
xor
repz
fcompl
sbbl
mov
pop
mov
dec
dec
or
pushf
cmp
fdivl
outsb
pop
test
cmp
clc
adc
jnp
cltd
dec
divl
dec
out
inc
pop
cmp
push
add
gs
xor
push
mov
mov
mov
dec
xchg
jmp
inc
sub
or
inc
xchg
sbb
cwtl
add
nop
fisubs
dec
cmp
dec
sahf
inc
fsubl
sbb
sbb
std
inc
mov
test
or
or
and
pop
shrl
mov
jmp
jae
repz
lock
sub
dec
lea
push
imul
gs
xlat
pop
leave
inc
push
add
cs
cmp
push
cmpsl
in
cwtl
pop
jge
sbb
adc
test
into
jecxz
lret
xchg
pop
mov
xchg
arpl
ja
cmc
pop
sbb
aaa
ss
rorl
adc
pop
dec
sub
mov
and
sub
cs
push
cmp
mov
mov
pop
sbb
adc
clc
add
in
iret
or
dec
cmp
out
mov
rol
jle
jle
lock
call
call
in
fisttpl
push
cmpsl
xor
push
push
dec
push
cmc
iret
call
xchg
loopne
flds
aad
cmp
divl
pop
sub
ds
wrmsr
aad
mov
add
fsubs
loopne
scas
adc
loope
pushf
jecxz
jbe
cmc
or
add
in
push
iret
pop
test
nop
scas
cltd
mov
xor
hsubpd
jnp
mov
jnp
cmpsl
push
cli
xor
les
lret
pushf
ret
pop
cmpl
push
xchg
add
jbe
sub
and
in
inc
sub
jne
or
xchg
inc
jb
nop
ds
push
inc
nop
mov
mov
xor
insb
fucomi
call
add
sbb
rclb
push
icebp
ds
fsubs
push
out
pop
mov
xchg
int3
bound
adc
jne
shll
ljmp
xchg
pop
jnp
push
add
cmpsl
jecxz
ds
adc
adc
loop
pop
inc
out
leave
outsb
ljmp
les
xchg
std
mov
mov
fmul
mov
push
imul
inc
scas
rolb
fmuls
pop
arpl
cmpsl
addr16
dec
push
mov
bound
jo
add
mov
rcr
sbb
in
inc
stc
inc
add
sahf
add
sarl
out
xchg
in
push
test
cmp
mov
xchg
xor
test
push
and
test
xor
rcrl
and
mov
hlt
dec
inc
adc
in
cltd
or
mov
pop
pop
push
int3
testl
fstpl
movsb
data16
inc
scas
dec
mov
mov
ss
xor
mov
xor
jo
loop
jge
jmp
adc
push
mov
lods
sbb
adc
mov
xlat
xchg
int3
clc
imul
push
jnp
sbb
pop
xchg
and
push
mov
movsl
mov
dec
pop
rcl
adc
cmpsl
sbb
jmp
mov
mov
test
pop
sbb
test
xchg
aam
jge
daa
jbe
push
gs
fidivl
subb
hlt
xchg
mov
and
xor
insb
stos
push
jnp
iret
movsl
sbb
in
adc
call
adcl
loopne
jle
mov
xor
roll
cli
call
sbb
aad
sbb
pop
and
lahf
xchg
jle
sarb
gs
in
in
stos
cmp
mov
xchg
aas
lds
jge
mov
adc
xchg
adc
ja
aas
sbb
pop
lods
imul
pop
fidivl
mov
xchg
xor
fisttpll
pop
idivl
pop
std
fs
pop
add
fwait
movsl
jmp
jge
repz
xchg
loopne
iret
repz
test
out
cli
cld
lret
aad
xchg
imul
adc
mov
mov
lahf
sub
or
pop
pop
mov
loope
mov
inc
dec
or
xor
push
dec
roll
mov
fidivl
insl
fidivl
aad
push
pop
ret
decl
and
jnp
js
or
iret
inc
cmc
ljmp
sub
sbbb
ffree
mov
mov
xlat
mov
mov
in
into
rcrl
std
imul
push
nop
movsb
cmp
leave
xor
pop
sbb
or
ret
and
arpl
jae
lods
pusha
mov
daa
fbld
sbb
mov
nop
xlat
xchg
testb
cmp
jge
ret
shlb
ljmp
mov
adc
fs
inc
mov
imul
test
fidivrs
lock
es
lods
in
cmp
pop
das
lret
cltd
sbb
mov
cltd
ja
and
sbb
xor
out
cmp
ret
adc
ffreep
jo
in
mov
mov
int
aaa
nop
or
mov
push
mov
dec
fists
jns
ficompl
loopne
inc
xor
jecxz
in
int3
push
xor
inc
loope
mov
lods
and
mov
mov
mov
outsl
test
aaa
lock
xchg
cmpsb
or
xor
das
mov
clc
negb
jbe
cwtl
rcll
mov
push
cmp
dec
push
lods
cmp
int3
sub
ret
fstpl
xlat
xchg
bound
jge
cmp
sbb
xor
sub
jmp
int3
sub
lcall
repz
adc
cmp
subl
cs
cmc
mov
push
push
call
jns
cli
rcll
mov
pusha
enter
jae
and
dec
inc
pop
xchg
jbe
stos
jne
out
cmp
ja
sar
pop
xchg
mov
data16
xlat
popf
pop
inc
flds
outsl
pop
push
add
rorb
or
loopne
icebp
in
adc
test
sti
mov
fisubl
sbb
push
repnz
pop
pusha
test
lahf
into
loope
arpl
arpl
call
arpl
cmp
or
dec
or
dec
add
inc
fnstcw
and
outsb
lea
cmp
das
xchg
push
or
mov
push
icebp
cmp
push
push
pop
and
pop
repz
push
rclb
xor
sbb
int3
sbb
push
push
jecxz
push
or
pop
ss
adc
cld
xorl
sub
jle
and
fildl
cmpsl
stos
fisubrs
std
imul
xor
push
dec
fstpl
sti
fdivrs
mov
in
daa
or
int3
addr16
lods
fwait
popa
mov
out
inc
ret
xor
pop
repnz
hlt
stos
or
fsubrs
clc
and
xorb
mov
push
push
xchg
and
aas
xchg
add
repz
shr
je
insb
out
or
cwtl
out
inc
jno
xchg
sub
dec
in
or
cli
mov
sbb
addr16
pop
out
pop
mov
add
int
jecxz
jns
dec
mov
les
jecxz
shlb
test
pop
stc
jae
pop
in
out
fildl
lret
ljmp
mov
ret
dec
and
stos
repz
cmp
sub
dec
mov
out
pop
ds
xor
sbb
and
repz
xlat
inc
test
jns
ret
mov
jo
xor
lea
rcrb
enter
popa
outsb
jmp
lods
xor
test
cli
insb
cmp
int
jg
sub
fisubl
mov
mov
lea
icebp
int3
push
scas
int
or
mov
sbb
cmp
movsl
into
addr16
push
mov
popa
push
and
lret
hlt
popf
jmp
mov
fsubrl
fistpl
rcrb
or
mov
loopne
mov
or
js
test
push
ljmp
dec
lea
pop
mov
mov
mov
lret
adc
sbb
mov
xchg
hlt
mov
mov
xor
loope
movsb
enter
std
mov
aaa
cmp
dec
insb
shlb
call
shlb
dec
cmc
cwtl
in
aas
mov
xor
je
push
pop
into
in
jg
mov
enter
or
mov
cli
loop
sbb
cmp
sarl
filds
mov
stos
insb
sbb
pushf
pop
cmpsb
xchg
fsub
leave
jnp
shlb
movsb
mov
insl
sbb
fbstp
aad
lcall
push
push
test
rep
fdivl
loopne
stos
mov
lea
push
adc
cmp
cs
dec
into
hlt
pusha
mov
aaa
sub
mov
daa
cli
xlat
inc
icebp
push
inc
push
dec
out
mov
mul
or
sbbl
dec
xor
push
xchg
sbb
fsubs
scas
push
jbe
xor
mov
sub
arpl
pop
push
mov
cmp
imul
insb
mov
jle
cmp
aam
push
repz
lret
push
pusha
adc
jecxz
lock
cmp
fiaddl
jno
mov
mov
push
sbb
mov
outsb
fnstsw
out
add
mov
gs
and
fistpll
sub
or
or
sub
push
dec
add
inc
inc
pop
clc
xchg
dec
je
jns
imul
inc
nop
jne
leave
test
jb
loopne
shl
cmp
jp
daa
cmpsb
rorb
cmc
pmaddwd
inc
or
daa
sti
das
iret
jg
lcall
cmp
in
cmp
imul
push
pop
adc
inc
adcl
add
aam
xchg
jle
rcr
popf
push
adc
hlt
mov
mov
lret
fsub
dec
xchg
inc
lret
sti
mov
jg
sbb
jno
sbb
pop
outsl
xchg
and
shrb
mov
sti
and
adcb
sub
and
jns
and
test
xchg
dec
ret
or
xor
and
push
adc
scas
xor
jb
aaa
outsb
ja
rolb
sbb
cmpsl
xchg
ljmp
aaa
push
arpl
xchg
test
push
add
test
or
jl
xor
nop
aam
dec
xor
or
mov
adc
push
cwtl
pop
push
pop
and
mov
scas
das
mov
int
jo
ret
push
xor
xchg
aad
pop
sahf
adc
mov
mov
dec
ds
cmpsl
test
mov
or
loope
icebp
mov
jg
inc
scas
daa
retw
dec
adc
and
pushf
xor
in
outsb
cmp
or
jb
icebp
pop
bound
push
mov
push
cltd
pop
scas
nop
jg
push
movsb
xlat
mov
outsl
ljmp
aaa
sbb
in
out
ljmp
negl
outsl
pop
ljmp
sahf
mov
pop
adc
cwtl
je
in
pushf
cli
add
push
shrl
mov
pop
lds
sub
mov
adcb
jne
adc
notl
xorl
dec
xchg
add
xor
xor
push
push
mov
out
loop
pop
iret
cs
jecxz
lea
loope
jg
push
pushf
push
cmp
jecxz
pusha
pop
inc
outsb
adc
sahf
aad
pop
sub
cmp
cmpsb
dec
or
cmp
lcall
xchg
or
sub
pop
gs
push
data16
pushf
fs
fnsave
mov
jns
test
stos
or
sub
faddp
mov
xchg
stc
xchg
push
insb
lahf
mov
inc
inc
and
cmc
inc
sbb
stc
sahf
jns
or
push
pop
jae
std
jle
or
jnp
push
jns
dec
inc
push
cltd
lock
mov
aas
sub
sub
xchg
je
cld
mov
xchg
jae
mov
xchg
push
push
pop
cmp
mov
jmp
or
add
cmp
divl
into
fs
call
inc
dec
pushf
sbb
cltd
jnp
lret
mov
cmpl
mov
mov
movsl
pop
sahf
test
push
mov
xor
test
and
add
pop
pushf
mov
std
and
push
pop
dec
ja
xor
int
cli
jg
incb
and
push
movsb
jb
mov
les
jnp
pop
enter
and
cmc
int
sub
das
inc
mov
and
mov
loope
das
cld
addl
stc
sti
dec
out
mov
push
pop
jbe
cmpsb
push
sti
lock
xor
shl
cmpsl
and
push
adc
dec
fstpl
aas
sarl
mov
sbb
add
pusha
jae
data16
inc
jbe
incl
mov
dec
sti
cmp
inc
xchg
int3
arpl
outsb
mov
aas
mov
mov
xor
cmp
cli
repnz
xlat
dec
movsl
stos
or
xor
test
mov
mov
test
xchg
or
shll
adc
popa
adc
pop
ja
and
push
push
sub
bound
xchg
xchg
into
dec
push
loop
leave
test
jge
fmull
ror
in
pop
shll
and
and
test
jmp
push
adc
in
rolb
push
pop
cld
test
imul
shlb
inc
dec
adc
clc
aam
add
add
or
cltd
into
mov
in
pop
fcompl
aaa
jp
fs
fwait
adc
in
lret
adc
push
rcrb
dec
mov
data16
mov
lods
mov
loop
pop
lea
sbb
aam
jg
dec
pop
movl
push
sub
lahf
pop
mov
lret
imul
jb
mov
insl
mov
std
push
cmpb
scas
mov
pop
add
xchg
mov
jo
fisttpll
pop
sbb
jne
mov
push
loope
sarl
cli
cmp
jmp
pop
sub
cmc
mov
xor
stos
test
dec
inc
mov
out
iret
mov
sbb
icebp
das
pop
stos
mov
out
inc
lds
sar
mov
hlt
int3
lahf
mov
add
or
jo
mull
cmp
mov
mov
xor
jecxz
fldt
and
inc
bound
les
push
jle
popa
cmp
xchg
popf
ja
orl
mov
or
inc
jne
adc
adc
and
lret
mov
or
inc
xchg
jns
push
xor
pop
loopne
xor
js
cmp
cmp
cltd
xchg
cs
icebp
int
loope
cmp
mov
pusha
pop
cli
stc
in
cli
call
shll
add
filds
stos
mov
inc
lds
es
lods
xchg
inc
mov
pop
les
repnz
jbe
push
in
movsb
and
cmpsb
sbb
mov
sbb
add
in
pop
pop
pop
test
ret
repnz
shl
shlb
scas
addr16
lock
dec
pop
sub
ja
scas
insb
jg
jnp
iret
mov
or
pop
sahf
int3
mov
sub
jbe
mov
fidivs
push
imul
call
shll
cmpsb
pop
dec
adc
adc
jecxz
adc
pop
jecxz
add
inc
out
fwait
in
dec
sub
sbb
mov
cmpsl
es
inc
mov
fistps
daa
pop
test
add
out
aaa
jp
pop
sub
xor
mov
cmc
test
adc
xchg
hlt
push
inc
test
cmp
bound
cwtl
shlb
cld
sub
pop
movsl
cs
xchg
pop
gs
ljmp
in
push
movsl
inc
dec
mov
hlt
ljmp
and
loop
cmpsb
scas
inc
push
dec
insb
icebp
or
sub
xchg
dec
sub
shlb
cmpl
lret
cmp
push
ret
adc
pop
cmpsb
inc
shr
pop
loope
inc
sbb
ljmp
mov
mov
sbb
pop
scas
lea
fistpll
mov
enter
data16
pop
hlt
into
sti
fmul
mov
jl
mov
leave
pop
clc
sbb
pop
fistpl
sbb
add
cmp
push
sbb
fidivrl
jnp
inc
and
and
cmp
ja
insb
sbb
data16
mov
out
sbb
sub
jbe
mov
sbb
outsl
mov
outsb
pop
sub
andl
push
lds
xor
xlat
and
outsl
push
filds
mov
pop
jne
rcrb
bound
testb
aam
fdiv
sti
push
stos
push
enter
xor
and
je
mov
push
push
xchg
fnstenv
and
inc
push
pop
out
push
jb
sub
dec
lcall
pop
out
jecxz
popf
lcall
jno
lods
cli
pop
fdivs
jge
adc
mov
inc
leave
fnstcw
or
jno
clc
inc
pop
minps
xchg
or
out
mov
jo
and
cmp
fiadds
or
ret
mov
cli
movsl
xlat
fcomi
int
rorb
das
gs
mov
xchg
sub
out
pusha
in
cwtl
jae
xchg
pop
lock
div
pusha
cmp
jb
lcall
jae
imul
jg
fxch
gs
fists
pop
lea
or
pop
outsb
arpl
jge
dec
xor
shrb
aam
mov
mov
mov
add
test
add
mov
or
out
jge
sub
testb
sbb
je
daa
xchg
add
mov
insl
test
jmp
and
insb
push
popa
add
loopne
fldenv
pop
inc
mov
lret
jge
ds
pop
test
rolb
notl
sub
and
aaa
pop
pop
mov
test
sub
inc
sub
in
add
sbb
inc
or
or
loop
or
mov
or
jp
ret
push
sbb
or
mov
mov
mov
mov
daa
mov
inc
outsb
test
ds
add
jae
jo
cld
inc
cmp
xchg
pusha
push
rcrl
lret
sub
arpl
mov
sub
push
popf
mov
repz
and
dec
addr16
loop
pop
dec
cli
ja
xchg
pop
xor
into
mov
sbb
testb
test
push
les
push
out
jns
pop
mov
dec
rcrl
inc
sub
sub
insl
jae
xchg
insl
fists
loop
fcmove
out
pop
pop
cmp
lcall
les
push
cli
sbb
lods
movsl
scas
pop
rclb
scas
sub
lcall
jnp
cmpb
or
xchg
fwait
aam
out
adc
jae
push
mov
pop
jp
cmp
mov
or
sub
cmp
popf
pop
lahf
scas
gs
test
pop
call
mov
outsl
ss
mov
mov
sub
out
or
nop
jbe
xchg
push
push
test
subl
mov
rolb
ret
pop
gs
lds
jnp
xor
insb
and
mov
sbb
mov
rcrb
orl
cmp
sahf
leave
lods
loopne
ret
and
ja
sarb
inc
sarb
fwait
lods
out
jo
lds
push
or
dec
pop
data16
sti
or
mov
es
roll
fdivr
jmp
cmp
dec
cld
bsf
ljmp
jne
mov
adc
divl
insl
mov
mov
out
jno
daa
ret
aaa
test
movsl
sti
jns
xchg
and
jmp
clc
push
stc
dec
pop
fnstenv
mov
jo
fiaddl
loopne
mov
jb
enter
jbe
add
and
test
cld
cli
pop
jns
inc
sahf
sti
nop
imul
sbb
add
jo
in
add
out
pop
mov
cmp
xchg
mov
adc
dec
cli
push
cmpsl
rcll
test
and
ret
adc
addb
xor
int
roll
mov
mov
xchg
lret
add
roll
mov
jmp
ljmp
fcomi
adc
dec
in
lahf
lret
sub
cltd
ret
cmp
add
push
mov
xchg
testl
inc
clc
sbb
mov
test
xor
loop
pop
dec
inc
sbb
fistl
inc
jg
jne
insl
stos
pop
dec
mov
or
cmp
ffree
jns
stos
sub
roll
push
mov
xor
adc
cmp
fists
test
push
pop
jbe
cs
loop
sbb
add
inc
sub
std
add
pop
sarb
mov
mov
ss
add
xchg
mov
outsl
leave
stos
pop
imul
cs
pop
dec
out
cmp
out
pop
sub
mov
pushl
adc
dec
cmp
lret
push
dec
pop
out
inc
std
cmc
int3
je
sub
je
xor
mov
xor
sbb
adc
repz
pop
sbb
sub
imul
insb
mov
mov
enter
jae
mov
xchg
arpl
adc
movsb
adc
xchg
dec
cltd
das
clc
es
aad
pop
add
arpl
das
outsl
push
mov
and
jecxz
mov
or
movb
xchg
sub
popf
ss
stc
xor
inc
adc
imul
xchg
adc
xchg
lock
outsb
xchg
jae
xchg
daa
pushf
aam
insl
enter
and
sub
in
push
aad
push
aad
lds
outsb
repz
movlps
add
sub
sbb
icebp
pushf
xchg
inc
and
sub
adc
jb
inc
mov
in
mov
sub
add
mov
hlt
daa
out
test
lahf
adc
jecxz
decl
scas
in
loope
stos
jae
push
dec
adc
fstps
inc
lret
jmp
std
xchg
icebp
iret
imul
in
addl
scas
push
popf
int
mov
mov
rcrl
outsl
mov
push
mov
addr16
ds
sarb
test
stos
sub
cwtl
push
jmp
push
mull
imul
lahf
xor
push
pop
repz
or
push
das
dec
daa
pop
jns
leave
cmp
notb
add
pushf
je
mov
adcb
pop
xor
push
bound
jmp
rep
dec
xor
push
or
pop
jnp
xor
mov
xor
mov
gs
push
xor
pop
dec
lock
repnz
sbb
mov
pop
popa
aad
xor
addl
push
add
hlt
cs
pop
std
mov
inc
lds
std
loope
sbb
fistpll
mov
add
pop
pop
jnp
xorl
cmp
inc
rcl
jmp
add
mov
cmp
mov
stos
jl
jae
mov
adc
mov
inc
mov
fildl
cmc
push
dec
pop
mov
mov
jecxz
hlt
arpl
enter
sahf
mov
inc
into
inc
sbb
xchg
loop
jo
adc
jbe
inc
inc
dec
cmp
mov
pop
pop
addb
sbb
js
dec
pop
shll
sbb
xor
cltd
lods
pop
cs
mov
les
sub
adc
fbld
lret
mov
push
push
inc
pushf
inc
rcrb
xor
dec
cmp
cmpl
daa
mov
push
inc
ret
jecxz
lds
mov
mov
pusha
inc
pop
lock
dec
repz
cltd
fcmovnu
add
xchg
add
rcrb
adcb
enter
loopne
inc
push
adc
jnp
inc
sub
pop
push
dec
lods
test
sub
jmp
inc
push
leave
movsl
dec
sbb
mov
pop
fsts
sbb
data16
in
xor
imul
mov
outsl
xchg
arpl
imul
inc
xchg
jns
cwtl
lret
and
sahf
push
mov
cmp
pop
dec
insl
or
and
dec
pop
dec
push
jae
in
lcall
arpl
in
dec
mov
daa
and
lret
push
gs
sbb
xlat
shlb
lret
arpl
add
mov
repz
loopne
fnstenv
lds
adc
mov
and
imul
mov
fmul
je
repnz
sub
dec
sub
arpl
xchg
cmc
insl
pop
sbb
xor
clc
cmp
xchg
iret
add
into
insb
iret
divl
jne
sbb
jge
fnstcw
addr16
fstpt
add
or
fistpll
cmpsb
mov
sub
das
mov
adc
inc
adc
lods
push
jo
jno
das
in
inc
push
ss
pop
fsubp
jl
cwtl
out
xor
mov
jge
push
mov
data16
mov
in
adc
ret
and
es
push
mov
mov
addl
fbstp
cmp
shrl
and
fisttps
push
xor
dec
and
xchg
pop
test
jno
nop
lret
sub
or
popa
lods
cs
stc
ja
jno
mov
aas
lret
or
mov
jl
adc
push
cmp
out
adc
xorl
sbb
aam
xchg
je
inc
mov
pop
push
fs
pop
popa
or
lods
pop
enter
pop
xchg
test
sub
shll
imul
pop
jbe
sbb
xlat
data16
stos
icebp
lods
cmp
gs
sub
push
mov
dec
push
sub
daa
daa
xchg
pop
lret
addr16
leave
push
les
xor
popf
xchg
pop
mov
add
xor
push
adc
lahf
loope
sub
add
mov
inc
loope
js
xor
fwait
lahf
cmc
dec
andl
repnz
stc
nop
repnz
and
or
repz
add
je
lock
out
sbb
aam
out
and
pusha
inc
sbb
pushf
mov
mov
mov
out
aaa
sub
adc
lods
popa
ljmp
enter
or
stos
popf
jb
popf
mov
imul
fldl
adc
pop
mov
test
jg
mov
repnz
dec
mov
push
imul
jae
test
loope
sub
call
xor
loope
sub
adc
xchg
orl
mov
inc
adc
jp
test
cmp
shll
mov
aad
mov
je
out
ljmp
loope
jnp
xor
jbe
dec
adc
gs
sub
sahf
loop
xor
cmp
push
sbb
xchg
inc
loop
gs
cwtl
push
dec
cs
test
dec
cmp
adc
call
lods
sub
mov
cli
divb
pop
pushf
mov
dec
jae
test
add
inc
out
stos
ret
je
mov
pop
mov
cmp
xchg
imul
pop
push
and
sbb
jbe
test
lret
fnstsw
adc
cltd
jnp
popf
lret
jl
push
sub
mov
cmc
loopne
mov
dec
pop
lock
iret
ret
repz
jg
xchg
dec
jp
and
lods
inc
jle
idivb
dec
ret
mov
popa
mov
cld
faddp
out
mov
jmp
out
fildl
sbb
or
popa
push
jb
push
xchg
mov
cli
mov
jp
mov
cwtl
cli
lea
loop
xor
aam
adcl
cmpsb
andb
add
mov
js
test
jle
js
loope
sbb
push
mov
push
int3
bound
lock
add
add
outsb
fidivs
daa
dec
adc
fisubrl
xor
mov
xor
or
jecxz
sbb
popa
sbb
mov
cmc
out
ret
clc
jge
mov
insb
mov
dec
aad
rorb
setb
sbb
inc
jmp
pushf
lahf
mov
es
imul
inc
sub
jne
fistl
sti
push
sbb
ss
push
sti
push
aam
pop
and
xchg
je
popa
in
sub
add
lret
jo
mov
movsl
fsubr
sbb
or
ss
xchg
inc
loope
dec
xchg
add
jp
mov
int
xchg
fisubs
jg
jbe
cmp
insl
mov
loope
ja
into
aas
mov
mov
std
cmp
clc
push
jns
xor
jmp
inc
das
sbb
ds
hlt
fcmovne
mov
sbb
ss
jae
ror
mov
ret
fwait
xchg
repnz
in
xchg
outsb
mov
sbb
pop
cmp
in
sbb
mov
add
dec
divl
in
push
lea
add
and
rorl
fs
cltd
or
dec
xor
xchg
cmpsl
rcrb
mov
pop
sbbl
out
sbbb
ljmp
pop
imul
mov
inc
test
jae
fcompl
aad
sbb
test
sbb
adc
into
adcl
in
adc
and
adc
aad
push
fnstenv
or
inc
cmpb
insb
in
mov
sar
lods
add
lock
adc
cmpsb
imul
ret
push
mov
fists
jmp
xchg
dec
fadd
add
cmp
xor
js
cmpsl
sbb
mov
push
fmul
cmp
shl
in
inc
cltd
pusha
xchg
shlb
cmp
leave
inc
jle
test
fmuls
adc
adc
insl
aaa
mov
and
fiadds
test
sbb
xor
mov
push
movsb
fs
test
xchg
mov
lcall
in
push
xchg
outsb
fnstcw
js
mov
movsb
fs
scas
enter
sub
inc
sbb
test
cli
outsl
scas
in
idivb
push
movsl
daa
cmp
mov
outsl
sub
dec
testb
mov
or
outsl
and
stos
mov
movsb
ljmp
mov
or
cmp
push
sub
xchg
repnz
out
fimuls
lahf
rep
orb
pop
lea
mov
repz
fdivrl
add
xlat
in
push
cmp
dec
shlb
add
loopne
out
cmpl
call
imul
int
rcr
or
aas
int
std
lret
sbb
push
cli
mov
fwait
imul
in
mov
jnp
dec
gs
iret
xor
cwtl
xchg
cmovne
lahf
data16
lcall
or
loope
aam
mov
xor
test
lods
or
rorl
mov
shl
push
stc
dec
mov
pop
pop
nop
dec
mov
sbbb
loope
adc
dec
repnz
mov
and
adc
or
ret
mov
mov
push
mov
push
pop
jnp
pop
les
jb
cmp
pop
bound
in
mov
filds
mov
insl
fmulp
out
dec
outsb
popa
lahf
xchg
cmp
adc
pushf
lds
aad
mov
dec
mov
mov
clc
out
cmp
dec
cld
add
adc
aad
int3
push
inc
mov
imul
mov
das
jae
loope
cmp
dec
movhps
stos
mov
and
xchg
sub
pop
xchg
ret
sub
test
xchg
outsb
int3
popa
loope
pop
in
scas
xor
testb
lret
dec
ret
add
pushf
push
orb
cltd
lods
dec
stc
faddl
pop
not
test
add
loop
mov
cltd
push
add
fisttps
jae
xor
ret
push
push
xchg
into
cmp
dec
lea
inc
fwait
mov
cmp
fisubl
bound
mov
test
imull
cmp
out
inc
sar
push
mov
lcall
shll
push
loop
imul
into
add
and
or
das
mov
sar
jl
jnp
or
pop
inc
sti
pop
mov
fcmove
cli
and
js
jmp
insb
pop
lahf
lea
nop
mov
out
lods
dec
sub
out
in
imul
or
push
sbb
loopne
loope
pusha
daa
out
inc
negb
mov
stos
test
dec
adc
and
adc
in
push
jmp
mov
adc
iret
xor
out
lea
sub
imul
lret
test
insl
cwtl
mov
or
push
cmpsb
ud0
hlt
imul
sbb
fcoml
xchg
cmpsl
sbb
clc
out
lods
lods
sub
xor
cltd
out
addl
xchg
insb
mov
or
bound
cmp
mov
pop
mov
gs
xlat
or
sub
icebp
xor
loopne
rol
push
enter
test
push
xorl
arpl
add
cmpsb
mov
icebp
add
and
shrb
jo
ja
movsl
lea
aaa
jo
mov
mov
int
or
jo
inc
adc
out
fidivl
push
mov
pop
mov
sub
jge
fdivs
ret
das
dec
push
mov
insl
pop
cmp
lods
das
aaa
jb
out
pushf
inc
and
arpl
cmc
or
inc
mov
push
cwtl
ret
adc
je
xor
push
mov
cwtl
gs
aam
dec
roll
push
add
inc
mov
sub
mov
pop
push
lret
call
ds
cltd
push
mov
popa
bnd
scas
fwait
sti
jle
jmp
aas
adc
push
imul
insl
mov
jge
mov
or
push
sub
pop
outsl
mov
in
call
push
movsl
leave
inc
cwtl
add
inc
jne
enter
imul
ss
icebp
mov
mov
cs
push
mov
loopne
pop
nop
in
or
das
mov
jb
jo
push
mov
mov
ljmp
es
lahf
hlt
in
lret
stos
jne
jg
xchg
mov
fidivrl
cmp
jle
ret
inc
bound
sub
add
sbb
mov
lods
lret
mov
pop
in
das
movl
jle
dec
mov
xchg
mov
xor
inc
adc
push
in
jb
xor
out
add
cmp
and
mov
fcompl
cmp
pusha
pop
aaa
divb
int3
or
dec
movsb
neg
test
sahf
mov
inc
call
mov
pop
mov
pop
xor
sbb
mov
test
adc
adc
icebp
in
lock
adc
push
pop
xchg
int
sbb
pop
add
or
jno
in
push
cmpsb
lock
scas
push
gs
cmpsl
gs
dec
daa
mov
and
xchg
stos
movsl
aam
pop
cmpsl
dec
sub
sub
and
ss
out
loopne
aam
loope
subl
cltd
jg
or
add
ja
mov
or
scas
pushf
scas
pop
add
lret
jl
movsl
and
fcompl
jecxz
inc
xor
idivl
cmp
mov
scas
ja
inc
cld
mov
dec
daa
cwtl
adc
cmp
lcall
xor
pop
dec
insb
jle
xor
xchg
aas
gs
mov
insl
and
cmp
sub
pop
repnz
addb
outsl
mov
xchg
scas
in
xchg
cli
imul
mov
mov
push
xchg
test
out
mov
icebp
int3
push
cmp
mov
sub
je
or
bnd
xchg
and
aas
add
dec
and
cwtl
jb
xor
sbb
sahf
push
pop
shll
xchg
ficompl
hlt
mov
loop
mov
les
pop
push
adc
dec
cmp
mov
xchg
sbb
insb
sahf
imul
es
inc
push
mov
in
jne
adc
or
insb
int
xor
shll
ret
orb
dec
lcall
jns
scas
mov
call
pop
mov
push
ficoml
adc
enter
mov
test
cld
stos
or
xor
nop
jns
xchg
xchg
shrb
imul
sarb
jno
mov
and
insl
xchg
push
fildll
xor
adc
push
mov
test
add
add
adc
ljmp
push
mov
and
mov
jge
or
lods
jmp
lods
out
xlat
mov
aaa
cmpsl
inc
subb
add
jg
nopl
xor
sbbb
testl
adc
sub
loopne
or
push
jns
mov
in
dec
fst
test
inc
in
pop
fiaddl
sub
in
and
adc
ss
cmova
lcall
mov
cld
sub
cmp
mov
out
jle
push
push
pop
cmpl
in
inc
jmp
push
lret
xor
mov
inc
hlt
loop
or
add
loop
jns
xor
divl
shl
hlt
push
aas
sahf
rcll
xchg
pop
push
stos
mov
and
fwait
repz
jg
mov
pmullw
cltd
movsb
xor
pop
iret
and
add
push
out
xchg
loopne
cli
push
push
inc
adc
add
aam
mov
dec
mov
mov
pop
sar
sub
mov
test
shrb
mov
jne
movsb
cmpsb
ret
jmp
inc
cmp
pop
imul
mov
daa
mov
push
pcmpeqw
mov
cmc
xlat
mov
ja
movzwl
pop
jmp
in
insb
xchg
dec
test
in
enter
out
dec
lock
jo
pop
ds
dec
sub
cwtl
mov
test
pusha
and
out
mov
mov
cmpsb
sbb
mov
and
pop
mov
xor
xor
sub
sub
sti
sbb
lea
mov
inc
cmc
in
mov
sbb
addb
jb
roll
test
fmuls
xor
or
lea
dec
movsb
addr16
sbb
fnstcw
mov
mov
pop
testl
movsl
mov
mov
push
mov
movsb
and
movsl
adc
in
sbb
pop
or
cmp
adc
js
call
mov
sub
cmp
clc
inc
loopne
fldenv
mov
lret
adc
repz
sbb
or
add
jmp
scas
jns
sub
popa
jnp
add
adcl
inc
cmp
in
lcall
mov
leave
xchg
cmp
dec
jb
pop
pop
cmp
cmp
jno
xchg
clc
gs
imul
xchg
sub
sbb
adc
dec
xor
test
xchg
insl
inc
stos
push
mov
dec
cli
mov
xor
jmp
je
pause
cs
cwtl
jb
cltd
out
jl
mov
xchg
lcall
add
and
and
lods
lock
cmp
mov
sarl
ja
sub
xor
icebp
sti
inc
inc
push
push
sub
mov
jp
insl
mov
xchg
inc
cmpsl
push
sub
dec
scas
dec
or
std
aas
cmp
scas
jne
sub
jl
push
push
push
cmpsb
pop
in
sub
in
or
mov
inc
cli
out
xlat
insl
outsl
adc
xor
dec
dec
adc
mov
outsl
ljmp
adc
iret
lret
lock
and
sbb
add
xchg
mov
inc
push
icebp
and
cmp
and
jnp
pop
fs
jns
dec
cltd
adc
out
inc
int
fs
aad
jns
mov
xchg
daa
into
jp
inc
lss
mov
xlat
std
cltd
cld
add
fmuls
cwtl
call
xor
mov
add
sbb
xor
insl
aad
imul
jg
sbb
cmp
std
popa
inc
insb
subb
inc
add
sub
sbb
shrl
lahf
dec
push
lret
inc
sub
xorb
outsb
dec
jg
rclb
into
inc
push
or
popf
jmp
push
cs
loopne
inc
cmp
outsw
test
adc
cmpps
gs
push
or
arpl
lds
aaa
mov
xchg
ret
int
xor
movsl
mov
add
jb
fdivrp
outsl
int3
add
lret
clc
adc
call
dec
mov
xor
shl
daa
xchg
mov
or
mov
cli
fiadds
mov
push
daa
aam
sarb
sub
jo
imul
test
pop
xchg
dec
std
pop
rorl
mov
pop
js
ljmp
sbb
mov
mov
xor
test
cmp
int
push
mov
scas
jo
mov
das
pusha
out
push
sub
movb
xor
aam
mov
jge
outsl
iret
pop
repz
int3
pop
mov
loop
out
jae
addr16
loop
icebp
sub
cmp
js
jg
loope
push
push
or
push
cmp
ds
jae
ja
inc
add
pop
in
dec
adc
push
loop
push
mov
mov
adc
leave
mov
cmp
data16
adc
or
shlb
sbb
jns
mov
in
stos
js
xchg
mov
mov
push
pop
sub
lods
jno
mov
push
push
jl
shrb
hlt
dec
mov
outsb
aaa
ss
test
insb
test
mov
adc
mov
push
sti
lahf
test
fisubl
ficoml
pop
push
fs
popf
mov
mov
pop
test
fisttpll
repz
mov
test
cmp
add
pop
push
lods
inc
jnp
fimuls
stc
push
pop
movsb
test
or
mov
popf
pop
xor
push
pop
cmp
jbe
adc
mov
push
xchg
repnz
loope
sbb
daa
xchg
divb
mov
std
dec
or
je
outsl
xor
cltd
inc
ljmp
jbe
pop
cmp
and
enter
bound
add
xchg
enter
lahf
push
subl
push
jle
pop
dec
adc
inc
pop
dec
iret
test
scas
mov
cmp
push
andl
push
or
push
clc
jnp
mov
outsl
add
int3
push
test
jnp
mov
shll
cld
nop
add
mov
mov
inc
xchg
int3
idivl
imul
sub
sub
mull
jl
out
push
gs
xchg
xor
jmp
aas
mov
ficoms
mov
inc
push
mov
dec
mov
mov
mov
lods
call
jne
mov
les
cld
int3
xor
in
stos
xor
ds
mov
jle
push
jg
in
xchg
jmp
jge
fnstcw
dec
in
jmp
icebp
jns
fidivrl
sub
lods
cmp
leave
pop
repz
mov
mov
mov
or
mov
stc
out
into
jo
xlat
leave
mov
daa
inc
mov
shl
rcrb
stos
mov
add
mov
and
jae
mov
int3
adcb
jno
mov
sub
or
lret
sub
lret
sbb
mov
mov
mov
sub
push
testl
xchg
add
notb
pop
popf
lahf
stc
xchg
movsl
sahf
xchg
mul
push
and
lret
fisttps
std
or
fisubs
lea
movsb
ja
sbb
pushf
in
inc
xchg
and
arpl
imul
mov
push
out
sub
cltd
hlt
mov
xor
sbb
adc
fucomp
rcrl
pop
inc
rorb
dec
dec
icebp
add
js
mov
and
shll
cmp
sbbb
imul
cmp
and
push
cmc
imul
sub
adc
mov
shrb
imul
adc
or
or
aas
inc
imul
movsl
adc
cs
in
mov
hlt
push
xchg
dec
push
mov
push
call
cmp
ljmp
and
push
mov
mov
insl
hlt
inc
je
pop
xchg
push
loopne
ds
cltd
xor
sbb
and
jne
nop
adc
imul
gs
into
jae
cs
xor
sbb
jo
test
imul
add
testb
mov
in
out
test
pop
das
dec
pand
sahf
outsb
xor
repnz
sahf
jno
int3
sti
dec
cmpsl
xor
cmp
fldl
cmp
fstp
push
or
orb
sbbb
add
xchg
jg
dec
push
int3
insb
repz
inc
popa
and
and
hlt
mov
pop
arpl
inc
mov
sti
or
mov
in
sub
and
fwait
cmp
or
lret
push
pop
jnp
mov
sbb
insl
enter
cmp
mov
mov
push
sbb
or
mov
jo
push
mov
sub
cmp
xor
cltd
push
sbb
or
arpl
sub
mov
test
xlat
dec
aaa
in
jb
inc
cmpl
adc
mov
xor
mov
push
insl
xor
loop
popf
mov
mov
sbb
cmpsl
sub
and
fucom
std
jnp
inc
sbb
dec
imulb
mov
adc
lahf
loope
cmp
stc
aad
cs
inc
xor
xor
hlt
mov
ret
adc
icebp
flds
sahf
shl
hlt
sbb
enter
jae
mov
mov
inc
pop
nop/reserved
push
mov
shrb
jl
inc
inc
cmc
push
add
cltd
bound
insb
pop
idivb
rcrl
mov
or
mov
xor
mov
out
push
loop
and
xchg
xchg
pcmpgtd
leave
push
les
adc
xchg
movsb
cmc
bound
imul
call
adc
jne
das
arpl
cmp
aad
mov
daa
xor
mov
push
enter
test
rcll
xchg
add
push
xchg
shlb
mull
stc
mov
mov
inc
xlat
lea
cld
arpl
xor
arpl
sub
sub
adc
nop
cs
int
in
enter
sbb
frstor
jg
shlb
cmc
scas
cld
je
mov
push
ss
rcrb
sub
sbb
xlat
lds
arpl
lahf
dec
pop
sbb
pop
jg
stos
in
mov
movsb
es
fdivrl
jg
aad
in
shl
adc
and
jb
clc
jne
sub
ret
xor
and
sbb
dec
mov
push
mov
cmpb
xor
pop
dec
out
add
testb
divb
test
xor
inc
popf
cmp
xor
mov
fstpt
add
call
inc
in
hlt
xchg
jns
fisubs
cs
clc
jl
ds
cltd
pop
sbb
cltd
mov
mov
shrl
sarl
push
ds
mov
mov
pop
dec
sub
xchg
add
xchg
sub
popf
int3
xchg
dec
dec
and
dec
mov
inc
iret
lret
pop
mov
mov
lahf
pop
cld
out
inc
pop
jnp
jmp
dec
sub
inc
jp
cltd
inc
int3
xchg
jmp
hlt
pop
cmp
pop
lods
arpl
vpcmpgtd
sub
ja
fwait
dec
adc
hlt
insb
lods
adc
mov
test
enter
insb
sub
fs
xchg
push
jb
loope
mov
lahf
adc
xchg
das
xchg
jg
or
mov
test
loopne
dec
outsl
jmp
mov
dec
sub
scas
rolb
in
popf
adc
push
pop
daa
call
xor
shll
xchg
bound
cwtl
sbb
in
xchg
pminsw
pusha
addb
mov
stos
cmp
in
mov
sub
mov
insl
mov
and
call
xchg
adc
mov
hlt
sbb
mov
outsb
xchg
js
or
mov
inc
inc
ljmp
and
jno
fistl
xchg
aad
and
jbe
or
fisubs
insb
mov
mov
add
cs
rcl
jge
outsb
mov
cmp
call
adc
loope
jno
xchg
add
cmpsb
mov
cld
fwait
jbe
pop
cltd
ja
movsl
mov
jle
pop
mov
pop
sbb
adc
xor
fmull
int
ret
dec
or
cmp
loopne
mov
xor
std
mov
sub
js
jmp
into
lods
adc
ror
andb
dec
or
call
ss
sbb
jp
sub
mov
lahf
inc
push
mov
aas
mov
jne
out
push
outsl
push
icebp
mov
push
fsubrp
scas
or
lods
push
cmp
add
ss
pop
jecxz
mov
in
es
shrl
pushl
popa
movsb
icebp
popa
pop
loop
mov
jno
fadd
cmpsl
push
xor
dec
fdivs
push
sbb
cmp
adc
pop
pop
sub
movsl
mov
sub
xor
xchg
dec
adc
push
jnp
loop
push
inc
aas
adc
fisttpll
cli
lock
pop
inc
cltd
jp
mov
pop
sahf
inc
adc
clc
repnz
mov
xchg
or
adc
jge
mov
add
xor
lcall
pushf
push
adc
pop
jo
add
lret
sub
ret
mov
cmp
dec
mov
jg
or
jmp
cmp
push
cwtl
cmc
aad
or
cli
mov
aam
sbb
test
xor
stos
jbe
mov
cmpsl
pmulhuw
test
test
je
mov
inc
xchg
xchg
push
sub
or
int
ror
jmp
fsubrs
call
cmp
jmp
and
jecxz
xchg
out
lods
imul
and
std
cmp
in
adc
mov
cli
repnz
xor
xchg
lret
call
mov
ret
lret
dec
arpl
or
icebp
and
hlt
mov
cmp
nop
sbb
adc
idivb
ret
pop
test
xor
addr16
adcl
or
mov
popa
jmp
mov
add
iret
fcompl
inc
xchg
leave
xor
jno
fisubrl
push
out
inc
mov
sbb
mov
jbe
negb
sub
mov
inc
xchg
cmp
js
jl
gs
sbb
bound
xlat
xchg
sbb
in
sbbb
adc
mov
jae
inc
lea
dec
test
das
xor
sahf
ds
mov
mov
push
adc
test
stc
sub
out
int
xor
inc
nop
xchg
and
subb
and
and
aam
test
lods
xorl
mov
add
jne
arpl
pop
lds
in
pop
insb
loop
inc
shll
jg
or
cwtl
rclb
adc
sbb
in
loope
call
sub
jge
loop
and
inc
pusha
ret
xor
subb
ret
cwtl
mov
jne
or
add
push
sbb
add
arpl
sub
adc
add
hlt
test
jno
or
es
jle
cs
mov
push
mov
push
add
mov
gs
sbb
pop
jecxz
ret
sbb
and
into
fildll
or
mull
scas
inc
and
cmp
or
and
mov
mov
pusha
in
push
add
imul
mov
sub
scas
cmp
aaa
push
clc
imul
adc
daa
mov
fdivrs
stc
push
dec
sahf
inc
xor
xchg
push
lcall
test
sbb
mov
add
mov
in
test
adc
jno
pop
dec
leave
movsb
sti
aad
adc
gs
into
mov
lock
pop
sbb
aad
push
push
add
das
js
mov
dec
in
xchg
icebp
sub
and
mov
outsb
jae
shl
sub
push
push
setae
or
cmc
pop
cmp
fwait
mov
and
lods
pop
arpl
pop
push
fcmovnbe
jecxz
pop
add
loop
xchg
inc
xchg
cld
or
adc
xor
in
sub
popf
pop
addr16
adc
fwait
xor
imul
mov
ljmp
jl
stos
push
mov
xor
test
cmp
pop
add
outsb
int
enter
or
andl
jecxz
add
pop
pushl
ret
outsb
insb
addl
xor
int
fcoms
movsl
inc
lea
dec
fldcw
ret
outsb
jb
push
jns
push
call
lahf
icebp
jbe
mov
inc
mov
iret
jl
xor
push
rcrb
jmp
ss
adc
mov
aas
ljmp
jp
hlt
std
push
fsts
jo
shl
fidivrl
push
pusha
int
pop
js
dec
lret
xor
int
push
dec
xchg
add
aam
aam
cmp
xchg
mov
addr16
out
xchg
sub
lcall
mov
outsl
xchg
add
rcrb
stos
pop
mov
leave
adc
push
mov
xchg
sbb
enter
xchg
adc
jne
mov
arpl
loopne
lods
mov
xchg
and
adc
ljmp
jmp
cmp
mov
add
cs
mov
sbb
pushf
mov
pop
sti
fldcw
lret
in
outsb
mov
inc
mov
jp
mov
push
push
dec
push
mov
mov
orb
mov
cmp
xor
out
cmpsb
jg
jb
rorl
out
and
mov
jns
aaa
sub
pop
or
adc
dec
pop
cmpsb
push
adc
xchg
bound
mov
cmp
pop
dec
ss
xchg
sarb
jg
jnp
xchg
add
push
and
addr16
pop
lcall
nop
dec
rolb
outsb
jb
sarl
inc
imul
adc
and
mov
pop
xor
xor
loopne
xor
mov
aad
jp
sarl
or
data16
jmp
icebp
jp
ds
test
dec
out
cmp
xchg
sbb
and
sbb
adc
sarl
mov
scas
cmp
cmp
adc
fimuls
movsb
jecxz
xchg
inc
test
bound
dec
cld
sbb
cmp
nop
dec
and
pop
mov
xor
jns
clc
fwait
mov
mov
lret
loopne
mov
xor
xchg
inc
pop
xchg
fcompl
popa
pop
aas
push
fmuls
xor
cmpsb
imul
cmp
sbb
es
lock
pop
test
imull
mov
cmpsb
pop
mov
into
jno
mov
pop
push
dec
not
ficoml
mov
scas
inc
cmpsl
and
jae
mov
jne
xchg
icebp
popf
in
stos
add
mov
rcl
fistps
inc
pushf
stos
jg
mov
in
fxch
mov
aas
lods
insl
repnz
pop
repnz
xor
mov
fabs
mov
lahf
pop
add
addr16
arpl
loopne
push
aam
ret
xchg
xor
lock
int
aaa
icebp
xchg
scas
pop
stos
lods
add
mov
rcl
icebp
sub
pop
push
pop
int3
loopne
fisubrs
js
icebp
mov
rolb
jb
aam
inc
cmp
xchg
push
push
std
or
adc
sbb
sbb
push
and
mov
mul
or
push
in
outsl
or
clc
xchg
out
jge
out
test
pop
xor
fldcw
pop
jge
icebp
sbb
les
out
add
cmp
push
mov
sbb
pop
xchg
popf
ret
das
jnp
sub
mov
repnz
jns
daa
js
fiaddl
cmpsb
xchg
addl
jp
sbb
jo
mov
adcl
jns
xchg
jp
lds
sbb
fs
imul
jns
bound
xor
fbstp
xchg
pop
mov
in
xor
mov
xchg
test
inc
dec
push
cmp
ret
jns
icebp
cmp
es
lods
jecxz
nop
pop
loop
cmp
or
lods
cmp
jmp
sub
repz
dec
inc
loope
outsl
pushf
sub
std
and
repz
dec
xchg
stos
push
scas
push
sub
loop
pop
clc
xchg
push
jecxz
push
xor
je
std
repz
pop
andl
jp
shlb
cltd
lret
xchg
pop
subb
jae
and
cs
scas
mov
jb
xor
jecxz
pop
push
push
mov
fisttps
fstpl
push
fwait
ds
cmpb
es
pop
stc
pop
andl
cltd
push
cmp
add
lcall
mov
ds
adc
mov
movsb
stos
push
xor
stc
out
pop
or
sub
and
stos
in
push
mov
lea
dec
jbe
jne
ficoms
insb
add
push
or
cmovae
mov
adc
xlat
and
enter
mov
push
mov
stos
jg
cld
inc
jp
push
push
inc
addr16
adc
jmp
inc
es
push
fmuls
fstpt
repz
lcall
add
push
xor
dec
fstpl
das
imull
push
movsl
fwait
test
leave
pop
push
ficomps
jno
into
push
mov
jb
xor
dec
xor
adc
pop
jecxz
and
in
lcall
add
subl
inc
and
dec
pop
fnsave
push
int3
pop
cmp
xchg
fbld
movsb
push
int
or
mov
add
inc
lods
repnz
pop
jge
pusha
ret
sbb
popa
insl
out
sbb
sqrtps
pop
pushf
aam
icebp
push
sub
mov
cli
cmpsl
or
jo
cmpsl
mov
fdivrs
mov
popf
icebp
lea
pop
mov
sti
jo
fists
imul
mov
out
iret
dec
xchg
pusha
sbb
mov
es
lods
push
fiadds
sub
cmp
lods
clc
cmpsb
cmp
xor
inc
loope
shr
pop
xchg
jbe
clc
andb
jo
popa
orl
and
cwtl
jae
pop
jnp
lret
lahf
push
inc
mov
adc
mov
repnz
xchg
js
mov
imul
enter
xor
jecxz
mov
and
test
movsl
inc
lea
mov
addr16
int
xchg
sbb
jo
cmp
xorl
pushf
cmp
cmp
insl
sti
fcompl
pop
decl
into
out
and
imul
cmp
inc
daa
add
cmp
mov
push
ret
sbb
cltd
jns
and
in
aad
sub
dec
ret
call
or
iret
jnp
out
sbb
lock
punpckhdq
xchg
mov
push
int3
repnz
addr16
flds
mov
stc
ja
cli
push
fistpll
push
mov
mov
add
insl
jp
mov
rorb
sarl
popf
inc
mov
pop
pop
inc
repz
dec
mov
push
mov
pushl
insb
fadd
ret
std
pop
ret
outsl
mov
mov
lock
sbb
pusha
cmp
repnz
repz
xchg
xlat
mov
js
mov
addb
movzbl
push
pop
add
out
nop
jo
jmp
cmpsl
les
arpl
inc
fisttpll
fucom
shrb
in
mov
xor
or
pop
insl
aaa
jae
aas
pop
or
sbb
out
call
addr16
rclb
pop
or
inc
inc
or
jg
vmaxpd
fwait
cmpsl
loopne
std
pop
fisttps
cmp
ljmp
pusha
js
and
xor
es
cs
sbb
xor
sub
mov
mov
movsb
mov
sbb
mov
xchg
push
pop
test
inc
lods
jmp
inc
sbb
mov
or
cmp
and
test
outsl
jg
lods
aas
adc
jnp
jp
sbb
dec
nop
mov
ss
cwtl
out
loopne
pop
fwait
mov
mov
dec
inc
mov
pop
imul
xor
lods
jbe
shl
inc
sarb
push
cmp
and
or
hlt
mov
iret
sub
js
lahf
imul
out
addr16
out
int
jae
outsl
aam
sbb
pop
cs
mov
jmp
fbld
call
ficomps
dec
ljmp
fisubrl
out
loop
adc
into
subb
or
dec
sbb
mov
xchg
ss
or
mov
loop
clc
out
ds
add
iret
push
iret
or
or
lds
stos
jg
jge
sti
loop
stos
int
adc
shlb
shll
jns
sub
cs
movl
pop
mov
roll
test
xchg
cmp
das
cmp
lock
cs
dec
pop
push
dec
jno
dec
or
test
adc
cld
xor
jnp
push
mov
call
lret
adc
iret
iret
imul
xor
dec
andb
subb
lret
int3
xchg
shl
sbb
pop
sbb
and
mov
xchg
mov
jl
pop
mov
and
push
cwtl
xor
inc
mov
push
or
repnz
jp
es
fcmovbe
push
push
arpl
ja
aaa
in
cmpsl
and
lret
lods
mov
popa
xor
dec
ljmp
sub
jle
mov
jp,pt
les
icebp
mov
jno
sub
orb
sbb
xor
mov
jl
pop
imul
mov
and
imul
inc
push
test
or
inc
ss
and
test
fnstcw
sahf
xchg
dec
adc
out
sub
das
in
sub
add
and
mov
ljmp
rolb
sbb
out
enter
xchg
out
push
xchg
roll
int
jge
dec
jg
scas
scas
push
mov
enter
movsb
mov
pop
cmp
inc
dec
cmpsb
jnp
adc
pop
jns
repz
movsb
nop
mov
push
pop
adcb
xchg
jb
xchg
lods
das
out
rcll
pusha
lahf
test
sbb
into
stos
or
mov
xlat
int3
scas
push
push
repz
cmp
repz
loop
arpl
push
sbb
loope
mov
int3
mov
dec
xchg
fdivl
push
adc
jnp
or
sbb
xchg
pop
add
push
lods
stc
out
call
adc
shlb
imul
andl
mov
pop
hlt
test
cwtl
or
mov
jo
int3
dec
adc
stos
mov
pop
mov
mov
or
call
sti
add
cmp
lea
cltd
fcmovnbe
daa
add
jb
popf
mov
decl
push
and
push
inc
dec
dec
int3
mov
cmc
add
jg
xchg
ficoml
jg
imul
std
push
xor
imul
out
in
scas
inc
mov
movhps
popa
shlb
mov
int
mov
fcomip
out
xchg
arpl
cmp
inc
loope
push
push
cmp
test
stos
jnp
aam
addr16
push
jbe
mov
cmpsl
adc
sbb
mov
ds
mov
cmp
shrb
push
push
mov
and
or
xchg
sbb
jnp
mov
pop
add
cmp
sbb
mov
int
pop
mov
sbb
mov
ret
adc
mov
daa
add
inc
cld
push
mov
loop
push
jge
mov
xchg
jge
roll
scas
aas
mov
pop
adc
gs
lods
sub
xchg
ja
and
decl
lahf
ftst
jecxz
cmpsl
xchg
inc
flds
push
mov
dec
subb
or
pop
hlt
inc
dec
decb
jne
les
mov
jnp
aaa
fwait
rolb
push
lret
sub
adcb
orb
dec
ds
push
outsl
jb
mov
pop
lds
repnz
and
test
and
cmpsb
xchg
aas
test
imul
cmp
push
lock
fldenv
gs
mov
aad
test
jb
cld
jbe
xchg
decb
stos
lcall
out
jbe
stc
scas
mov
jg
cs
adc
sbb
je
push
outsl
sbb
lods
mov
cmc
sbb
push
cwtl
xchg
or
inc
into
mov
icebp
add
in
stos
dec
dec
mov
or
xor
xchg
daa
arpl
aas
pop
cs
addr16
mov
icebp
ds
jmp
jae
or
xchg
fstps
mov
xor
ss
or
xor
lret
aas
cli
jl
mov
les
fdivs
dec
sub
popa
inc
aad
int
data16
ret
pop
jge
shlb
jo
adc
xor
out
sub
jbe
clc
call
sti
enter
lahf
mov
dec
or
popa
out
xchg
push
sbb
and
mov
sub
insb
adc
add
imul
dec
and
add
insb
addr16
dec
sbbb
adc
arpl
cmc
in
cltd
jo
jno
out
jb
adc
jmp
sub
mov
sub
mov
inc
xor
adc
jnp
xchg
mov
insl
mov
shrl
or
into
call
inc
aaa
fiadds
std
mov
dec
inc
mov
hlt
lods
xchg
pop
sbb
inc
mov
pop
hlt
sub
sbbb
imul
fistpll
jo
push
icebp
xchg
rcl
icebp
mov
shll
cltd
push
inc
adc
mov
pop
xor
dec
imul
fcmovb
or
jl
fnstenv
out
adc
pushf
pop
int3
dec
imul
daa
ds
repnz
gs
out
out
and
jns
mov
outsl
aad
push
sbb
mov
mov
sbb
push
mov
mov
test
cltd
jmp
push
aas
xchg
mov
push
or
mov
sub
stos
ret
jnp
pop
xor
cmp
clc
jbe
sub
fisubrl
pop
jno
enter
xchg
inc
mov
stc
jl
and
sahf
mov
test
sbb
and
push
push
je
fdivs
imul
es
sub
dec
adc
mov
std
jge
imul
fcmovne
mov
and
push
sub
shlb
hlt
in
add
data16
dec
or
ja
push
push
cwtl
xchg
test
inc
mov
je
xorl
push
rcr
dec
xchg
sub
in
stos
fs
push
dec
imul
push
mov
mov
popl
cwtl
mov
add
push
lods
clc
mov
inc
inc
inc
xchg
aad
mov
pop
push
rcrb
xor
adc
fnstenv
dec
hlt
ficoms
ror
pushl
mov
lret
jmp
ljmp
sub
push
jo
enter
rcrb
pusha
outsb
xor
cmp
xchg
mov
insb
push
loope
das
pop
inc
and
ds
daa
sahf
mov
sti
mov
out
in
xor
out
leave
pusha
pop
or
cmp
cld
inc
add
and
test
test
imul
sub
pop
sbb
sar
xor
add
add
push
mov
stc
mov
and
sbb
sbb
mov
test
and
cmp
das
sbb
add
cwtl
jb
push
sbb
aaa
int
pop
xchg
es
pop
or
push
sub
pop
jg
sbb
nop
in
cmp
sub
iret
push
xor
or
pop
hlt
add
sbb
jae
sub
stos
adc
inc
push
repnz
les
mov
std
cmp
jl
pop
xchg
and
cmp
pop
ja
sbb
mov
popf
test
mov
xlat
loope
sub
sub
test
sti
mov
dec
daa
xor
sbb
and
push
into
cwtl
lods
cmpsl
ret
fstps
lret
js
cmpsl
lods
push
adc
subb
adc
xchg
and
hlt
inc
mov
dec
daa
mov
mov
in
aaa
mov
dec
in
jl
addr16
clc
or
cmpsb
shlb
jmp
scas
inc
pop
cmp
imul
cltd
cltd
pop
sti
mov
jmp
fs
push
mov
in
fsub
sti
sbb
stc
mov
mov
and
mov
fninit
nop
dec
inc
sti
xor
cmpl
jmp
xchg
insl
adc
out
inc
adc
fcoms
cmp
pop
push
jmp
mov
and
cmpsb
push
mov
or
lret
ss
xchg
lock
pushf
mov
dec
add
or
lahf
int3
shll
int
pop
dec
or
sub
in
in
push
jl
cmpsl
xor
jmp
mov
insl
add
cmp
hlt
inc
imul
sbb
repnz
shll
testl
out
jb
stos
bound
adc
push
int3
cs
pop
or
shlb
xchg
sbb
div
das
ds
into
ljmp
shrb
ss
cmp
sub
notb
and
cli
xchg
dec
shlb
push
lods
ja
pushf
cmp
mov
enter
sub
pop
stos
mov
iret
out
xchg
out
sub
cltd
ss
loop
pusha
out
aad
adc
mov
lret
sub
or
rolb
push
mov
je
lahf
push
pop
stc
or
fildl
sub
ja
cwtl
add
fwait
jecxz
mov
movsb
xchg
pop
outsl
movsb
pop
dec
stos
arpl
out
pop
push
jbe
and
mov
jmp
int
loopne
andl
ret
mov
mov
dec
mov
das
jo
cli
sbb
int3
sub
icebp
ud2
xor
rep
jl
or
out
outsl
mov
dec
cmp
mov
cs
xchg
xor
add
xchg
mov
add
sbb
add
dec
outsb
ja
push
mov
inc
adcl
jns
dec
scas
and
outsb
mov
scas
add
fs
add
xor
aas
mov
jnp
jne
lcall
cld
ret
repz
xor
sub
sbb
ret
and
arpl
xor
mull
cmp
pop
add
or
and
ret
mov
cmp
in
daa
aaa
dec
mov
mov
cmpsb
lcall
stos
jmp
mov
sub
adc
daa
out
jle
adc
cmc
mov
sbb
cmc
xlat
loop
cmp
xchg
jae
jb
pop
rcr
pop
stc
or
fdivr
sbb
adc
mov
push
pop
xchg
pop
les
xchg
stos
cmp
mov
or
adc
xchg
pop
jns
shrl
aam
nop
mov
mov
sbb
stos
cmpsl
scas
sahf
pop
xor
outsl
pop
in
ljmp
pusha
push
or
std
dec
inc
je
test
adc
stos
in
lods
rcrl
aas
repnz
dec
jbe
xor
outsl
aaa
mov
int
icebp
bound
mov
adc
mov
xchg
jb
in
test
mov
lds
push
fstl
and
xor
or
sahf
xchg
test
and
mov
fistpll
and
add
cmp
cli
mov
inc
cmpsl
push
cmp
dec
or
add
mov
adc
sub
data16
push
mov
fimuls
jae
sbb
mov
andl
stc
loop
lcall
or
lea
push
cwtl
roll
and
inc
mov
jecxz
in
push
mov
adc
cmp
jge
movsb
stc
rcrl
insb
and
sti
sbb
mov
mov
cmp
js
aaa
fs
cmc
je
jne
pop
jns
incb
bound
lock
and
fsts
or
jmp
shlb
in
inc
jmp
mov
xchg
lds
mov
pop
daa
les
sub
dec
fcoms
mov
or
xchg
lock
add
xchg
in
sbb
mov
sub
push
clc
mov
cmp
pop
or
scas
add
cs
jae
dec
shrl
adc
xchg
in
enter
sub
inc
fsubrs
ss
push
pop
fcoml
adc
ret
shrl
mov
add
jmp
sbb
push
ja
xor
sub
lds
fimull
rcr
stc
mov
lret
clc
or
xor
adc
int3
push
inc
mov
push
xor
sti
repz
sub
lods
lods
mov
mov
adc
in
jb
fcmovne
into
xor
out
fnstcw
add
daa
lods
lret
and
adc
lds
mov
shrb
xchg
enter
gs
lods
sbb
add
mov
adc
dec
fldt
icebp
mov
fdivrl
dec
sub
or
int
push
aam
sti
lret
pop
orl
mov
sbb
repz
call
mov
cmp
repz
jnp
sbb
jbe
jl
jns
mov
shr
js
setle
test
or
arpl
jl
cmc
xchg
nop
dec
decl
pop
in
or
retw
xchg
loop
sti
and
pop
insl
clc
pop
lods
adc
iret
cli
pop
mov
in
popf
xor
dec
jae
pop
test
ja
mov
mov
dec
lock
pop
sbb
into
out
rorl
cld
cmp
xorb
adc
pop
mov
push
xchg
outsb
adc
jmp
sub
or
mov
cld
adc
add
lahf
shl
stc
pop
push
or
stos
or
popa
iret
outsb
cld
fsub
sub
fstpl
jmp
es
cmpsb
ret
sub
add
sahf
fstps
sbb
daa
out
jbe
out
cmp
lea
addr16
or
lret
movsb
pop
rorb
mov
cmpb
out
sarb
imul
cmp
cmp
xor
inc
rol
lock
imul
adc
fsts
dec
xor
pop
sub
cltd
sti
inc
hlt
mov
inc
push
mov
fnsave
mov
mov
loop
inc
pop
sbb
inc
jo
xor
push
rclb
bound
push
loopne
int
cwtl
inc
inc
sub
xchg
ficoml
cmp
outsb
gs
mov
push
jle
pop
xchg
out
out
pop
mov
jo
nop
xor
adc
daa
cmpsl
mov
dec
push
sub
shr
out
mov
std
out
or
hlt
sub
bound
js
sbb
push
lea
mov
insl
dec
pop
cwtl
out
cli
push
jg
fildl
sbb
xchg
repz
loope
mov
sbb
jbe
xor
sbb
pusha
xchg
mov
cmp
jo
bound
jmp
fadds
mov
or
je
xor
sar
enter
dec
pusha
or
mov
into
jl
mov
xor
mov
sti
adc
std
movsl
jle
mov
mov
jmp
jecxz
cmp
test
inc
clc
mov
cltd
xchg
out
jmp
sbbl
stos
mov
dec
insb
gs
fistpll
enter
pop
into
pop
pop
mov
add
sarl
xor
loope
cmp
aas
pop
xchg
mov
mov
bound
call
mov
cs
repnz
cmp
test
ljmp
push
cmp
and
rol
xchg
or
add
ret
cmc
jnp
call
pop
scas
pop
daa
mov
adc
xor
js
dec
xchg
inc
push
sub
outsl
mov
into
mov
add
add
pop
xchg
jnp
rdpmc
decl
mov
sub
out
dec
xchg
adc
cs
push
in
mov
adc
jae
clc
xchg
rorl
mov
sar
pop
sub
sub
test
mov
int3
mov
and
and
mov
or
roll
loope
add
test
std
mov
xlat
data16
addr16
pop
pop
stc
daa
aaa
ja
xchg
outsl
dec
ficoms
cs
sbb
mov
ret
lea
mov
sbbb
mov
jbe
in
ret
aas
pop
adc
sbb
shll
dec
fcompl
mov
mov
out
cmc
sbb
outsl
cli
jg
stc
stc
adc
add
outsb
sti
into
jecxz
and
pop
mov
inc
ret
icebp
sbb
pop
jmp
add
xchg
xchg
into
daa
mov
jge
mov
xor
loopne
push
daa
add
dec
imul
loope
test
pop
fistpll
popf
stc
xchg
addr16
fcmovbe
dec
fs
xchg
dec
mov
and
std
pop
xorl
cmp
xchg
xlat
icebp
sbb
and
sbb
cmpsl
push
xor
jecxz
in
jg
cltd
xor
outsb
mov
inc
xchg
ret
outsb
call
in
jmp
adc
cmc
iret
mov
loop
pop
fists
inc
les
dec
sbb
sub
lahf
jg
scas
push
dec
stos
mov
dec
push
js
ljmp
mov
cwtl
xchg
push
push
imul
gs
pop
movsl
push
cld
lret
push
shll
orl
lahf
adc
rcrb
mull
lret
mov
mov
xor
jb
pop
inc
aas
jle
fisubrs
je
mov
in
imul
pop
pop
lahf
scas
or
negb
rorl
cs
and
int
or
or
int
mov
cmpsl
fwait
mov
mov
add
out
rorb
sbbb
adc
std
and
cs
je
testl
pop
xchg
cmp
xor
push
enter
fdivr
add
or
add
pop
jg
cmp
in
loope
mov
out
pushf
push
add
add
inc
fbstp
cmpsl
shrb
mov
mov
or
shlb
and
fsubrl
fs
in
and
jmp
xchg
push
dec
hlt
mov
cmpsl
jns
add
xchg
loopne
das
roll
mov
sbb
jno
dec
test
mov
jae
jl
cmp
rolb
push
push
sti
rorl
addb
push
push
xor
mov
pop
ja
and
loop
daa
push
mov
dec
or
out
loop
notl
jb
jne
iret
daa
and
sti
mov
cmp
in
mov
idivb
pop
xor
jno
sub
sbb
in
inc
inc
icebp
cltd
mov
inc
fisttpl
shll
imul
jle
out
jno
and
cmp
jo
mov
sbb
and
add
fisubs
or
and
or
or
push
push
sbb
inc
mull
das
mov
out
dec
and
icebp
outsb
es
in
sbb
shll
cs
std
scas
aad
adc
cltd
jmp
loopne
pushf
sbb
cmp
repnz
push
cwtl
pop
call
imul
xchg
pop
dec
lahf
scas
adc
test
cmp
pop
aaa
mov
pop
ffree
shll
fsubs
cmc
incl
aas
xor
iret
dec
dec
mov
xor
mov
test
ret
insb
adc
inc
call
loop
xor
fwait
sbb
mov
cmpsl
popa
push
ljmp
mov
jge
xchg
lock
lret
jae
pop
jmp
fwait
pop
pop
cmp
sub
sub
add
in
pop
cmp
sub
daa
insb
and
add
and
inc
and
bound
mov
in
bound
mov
push
sub
fstpl
cwtl
mov
mov
dec
xor
rorl
mov
jle
into
ficoms
xor
sub
daa
cli
inc
popf
filds
push
shl
pop
repnz
push
xchg
out
scas
ficoms
add
mov
fs
xchg
add
fldl
xchg
out
fs
jmp
cmp
fwait
imul
dec
mov
insb
faddp
leave
adc
popa
aas
popf
or
inc
mov
outsl
cld
and
in
fidivl
adc
inc
xchg
xor
aas
rcll
adc
cwtl
out
scas
mov
or
hlt
mov
and
dec
bswap
mov
js
loopne,pn
jae
adc
xor
fisttpll
and
or
xchg
sub
push
mov
popf
mov
jo
stos
sub
roll
lret
sbb
push
sbb
sarl
pop
dec
adc
and
movsb
jne
stos
scas
outsl
inc
enter
dec
adc
in
lods
aas
mov
int3
insl
xor
cmp
stc
dec
mov
xchg
fcomps
stos
clc
adc
fwait
sbb
push
xor
into
daa
aam
mov
dec
clc
jo
repnz
cli
test
insl
xorl
mov
add
cmp
ror
ret
outsl
js
iret
pusha
mov
and
inc
pop
or
mov
mov
sbb
lea
enter
adc
and
aad
or
jno
mov
cmc
cltd
fs
pusha
loop
clc
add
pushf
pop
cmp
cmp
jmp
jg
sub
sbb
int
mov
sub
daa
mov
mov
mov
aaa
mov
mov
loop
pop
jecxz
xchg
call
dec
adc
insl
mov
loopne
shlb
cld
dec
mov
dec
je
and
lods
in
or
mov
pop
mov
sub
pop
lahf
adc
add
je
inc
mov
jb
sarl
push
aaa
mov
out
and
adc
mov
ss
bound
push
js
xor
mov
xchg
xchg
xor
pop
les
cld
dec
mov
rcll
push
popf
adc
pop
popa
sahf
or
mov
mov
add
gs
leave
adc
pop
push
or
mov
fbld
cmp
push
push
cmpsl
push
sub
pop
mov
ljmp
test
push
push
gs
mov
mov
icebp
xchg
addr16
ss
fsubrl
sub
adc
adc
jge
shll
jp
lds
inc
lahf
pop
mov
xchg
mov
out
ficompl
adc
mov
cltd
and
inc
cmp
es
cmp
icebp
ja
popa
mov
sbb
dec
cmp
push
in
jb
mov
arpl
shrl
or
pop
pop
add
mov
sub
out
arpl
mov
push
ds
lea
stos
inc
pop
lock
das
jg
inc
inc
push
mov
cld
add
push
ffree
rcl
lea
lock
xchg
sub
add
jp
mov
fstl
adc
test
jns
sub
sti
stc
or
mov
dec
incl
in
mov
pop
das
iret
push
out
popa
xor
and
or
dec
mov
or
es
mov
mov
fisubs
inc
movsl
out
iret
jmp
cmpsl
dec
xchg
xor
add
xchg
xchg
pop
xchg
add
loope
pushf
dec
pop
nop
inc
push
add
js
add
xlat
std
mov
and
sbb
xor
xchg
sub
ret
sub
test
dec
xchg
mov
inc
in
ret
aas
add
scas
icebp
mov
and
mov
and
movsb
cmp
jns
andb
adc
lods
je
xchg
js
jns
jge
cld
add
fildll
inc
jnp
jle
cmp
mov
xor
dec
pop
ja
and
mov
fwait
mov
in
fsubs
scas
sbb
mov
jge
fs
push
push
cwtl
call
shlb
ljmp
xor
in
mov
dec
xor
gs
repnz
jp
inc
or
lret
fldl
sbbl
inc
test
push
and
fimull
ss
sub
push
loopne
jae
jl
stc
ret
lock
enter
cmp
adc
cmp
or
mov
pushf
out
int3
pop
les
outsl
cs
xor
lods
aaa
mov
imul
insl
movsl
jmp
ret
jle
xor
cli
dec
xor
mov
fidivrs
insl
negb
mov
sbb
stc
cmp
xchg
xor
jge
mov
repz
das
xor
adc
dec
idivl
setae
fldl
xchg
push
xchg
shlb
and
orb
dec
pop
mov
pusha
faddp
jno
icebp
fcomp
push
pop
fs
jno
jmp
bound
push
cmp
and
mov
or
xchg
or
aad
mov
fistl
xor
scas
xchg
aaa
mov
test
and
xor
xchg
movsl
and
aaa
loop
lahf
bound
mov
arpl
andb
stos
shrb
cmp
fidivl
add
and
mov
sub
dec
fadd
xchg
shrl
in
dec
int3
int
sbb
jnp
inc
dec
ss
or
nop
mov
adc
pop
pop
and
jle
cmovo
mov
sbb
mov
sbb
pop
cmpsl
mov
std
fsubrl
test
and
adc
icebp
pop
cmp
cld
xchg
iret
cmp
in
jle
pop
sub
sbb
push
aas
lock
mov
push
hlt
dec
test
dec
adc
push
stos
repz
mov
push
fsubr
inc
inc
xchg
inc
mov
mov
pushl
xchg
add
jo
push
es
push
push
idivb
rorl
xlat
mov
mov
das
out
add
rcr
popf
add
lret
fdivrl
cmp
roll
shr
popa
sub
push
ljmp
add
movsl
sub
cld
fwait
cld
push
loopne
pop
xchg
mov
jmp
fidivl
loopne
xor
mov
cs
inc
xchg
test
repnz
test
mov
add
jo
cld
std
mov
or
cltd
out
sub
mov
mov
shlb
pop
push
mov
and
push
fistpl
loopne
lds
sbb
add
sub
inc
cmpl
push
and
pop
xor
aaa
mov
xchg
fbld
mov
sti
popa
mov
stc
mov
pop
xor
push
and
outsl
jns
ret
ret
jbe
aad
xchg
xor
add
mov
pop
push
fsub
adc
cmc
dec
gs
push
dec
std
ja
or
clc
idivb
outsl
mov
shlb
mov
inc
aas
loope
in
cmp
xor
mov
inc
mov
mov
arpl
gs
jl
cmc
cmpsl
adc
mov
movsb
jno
xchg
or
inc
jecxz
andb
pushl
popf
sub
cltd
movsb
adc
mov
mov
mov
int
repnz
or
mov
movsl
loope
lcall
xor
jnp
lods
iret
pop
and
mov
cmpsb
mov
in
sub
test
mov
or
mov
inc
shll
lea
in
in
pushf
shll
int3
jno
jo
bound
xlat
into
ss
cld
ret
fidivl
mov
loope
sahf
jp
ja
cmpsb
lods
lretw
addr16
mov
fs
rorb
push
push
xor
jmp
xor
push
jmp
mov
adc
repz
sahf
jnp
jne
outsb
repnz
pop
in
jns
mov
mov
in
repnz
inc
mov
jns
push
pop
and
lahf
xchg
outsb
jle
lret
mulps
adc
push
mov
out
mov
or
addr16
sbb
divl
push
jo
push
out
xchg
iret
cmpsl
push
and
sbb
xlat
mov
cmp
scas
jae
xchg
cmp
mov
mov
in
scas
or
push
sbb
jle
cmpsb
or
outsl
bound
cmp
dec
bnd
addl
test
and
dec
outsl
fistps
xor
xlat
add
pop
cli
jmp
dec
xchg
fisttpl
cmp
out
bound
sub
xchg
ss
or
js
mov
jo
pop
fistps
js
imul
adc
push
cmp
and
jnp
loope
pop
into
and
pop
xchg
int3
cmpl
sarb
adc
xlat
cmp
ljmp
arpl
dec
outsb
push
jmp
mov
insb
mov
hlt
aaa
enter
ja
inc
outsb
imul
cmp
movsl
bound
mov
mov
mov
or
repz
xchg
jb
icebp
ret
and
cmp
icebp
mov
jge
push
cmp
out
sbb
mov
push
xchg
lds
clc
popf
add
inc
lds
or
fcomp
mov
cmpl
lret
lea
hlt
sbb
or
mov
push
or
jmp
stos
adc
mov
repz
mov
jge
jge
fldenv
daa
add
hlt
dec
inc
push
mov
jle
lret
nop
idivb
push
dec
dec
cltd
mov
sbb
jmp
pop
rorb
mov
adc
insb
shl
jmp
lret
cltd
sub
cmpsl
pop
mov
dec
jns
rorl
fisubs
clc
inc
and
mov
es
inc
test
jmp
inc
add
fsubp
push
inc
les
dec
jae
sub
jno
mov
test
push
sti
fdivrs
pop
cmp
lea
cs
cmp
outsb
test
jne
scas
lea
hlt
jnp
addr16
mov
xchg
movsl
int3
cmp
aad
and
fisubl
repnz
hlt
and
pushf
pop
cmpsb
sub
xchg
fiadds
mov
into
js
stc
ficompl
jb
pop
addl
adc
mov
mov
jp
push
push
sbb
iret
mov
pslld
std
dec
jge
mov
mov
lret
jg
pop
sbb
lret
jecxz
inc
cli
push
imul
aaa
sbb
enter
push
adc
das
mov
pop
xchg
movsl
ja
aam
fbld
cltd
fsts
daa
pop
fwait
pop
jae
rcrl
pop
fisubl
ret
adc
cmp
cmc
arpl
mov
out
sub
rcrl
dec
dec
push
int3
pusha
lods
and
cmp
push
addr16
lcall
movsb
mov
bound
and
dec
std
xor
outsb
pop
ret
adc
inc
fwait
rcrl
add
mov
inc
jecxz
stos
xlat
aad
test
push
xor
pusha
ficoms
ret
sub
pop
rorl
aam
xchg
cld
push
fldcw
sbb
jg
jmp
jb
sub
xlat
popa
mov
mov
lods
aad
lods
inc
lcall
icebp
xchg
pusha
popa
sub
ret
jl
iret
lret
shl
mov
inc
sub
mov
xor
imul
pushf
and
mov
ret
pop
pusha
or
fsubrl
jg
mov
pop
mull
stos
gs
fstpl
sbb
jmp
cmovnp
jp
cld
adc
xor
orb
xor
xchg
inc
into
int3
es
xchg
sahf
cwtl
dec
sbb
jle
push
in
clc
xor
mov
dec
jmp
cli
push
and
out
imul
add
xor
mov
xchg
and
sub
cmp
dec
stc
mov
or
je
push
test
mov
aam
subb
xor
inc
or
idivb
xchg
sbb
or
xchg
jno
jnp
jmp
pop
fwait
adc
lock
jb
fmuls
popf
add
dec
loop
stos
fcmovnbe
mov
cmc
pushf
sub
xchg
and
scas
ljmp
lcall
push
fdivrs
jb
movsb
lds
jge
mov
adcl
ss
pop
or
or
aad
out
sub
mov
push
or
in
jbe
rclb
xor
and
sub
fisubl
xchg
int3
sub
insb
les
gs
mov
adc
cltd
adc
mov
mov
pop
pushf
in
dec
add
das
push
lods
rorb
pusha
push
xlat
leave
pop
in
mov
mov
imul
cmpl
adc
fisttpl
push
push
xchg
dec
mov
scas
ja
push
mov
dec
jmp
sarb
jo
rcll
sbb
loop
inc
add
cmp
push
shrl
add
mov
sbb
and
mov
out
mov
push
xchg
fstpl
out
shlb
mov
test
stc
add
loope
xor
scas
popa
sub
loop
pop
or
cmp
nop
out
cmp
lcall
jne
push
mov
shr
jo
sbb
inc
scas
into
arpl
imul
pop
test
pop
cs
leave
aaa
mov
sub
sub
pop
sbb
and
pop
xchg
icebp
xorb
add
sti
mov
add
ja
dec
pop
xchg
in
mov
jge
sub
nop
ret
push
lcall
and
cwtl
push
stc
and
stos
xchg
ret
xchg
bound
scas
add
imul
sbb
sbb
aad
in
add
in
jp
mov
xchg
add
sub
push
ret
xchg
jnp
loop
push
enter
pusha
cmpsl
xlat
jmp
test
movsb
cmp
mov
insb
in
ja
test
ljmp
cmc
stc
dec
out
xchg
in
daa
rcrb
sbb
and
enter
add
fsubs
inc
xorb
jle
test
push
xor
pop
testb
mov
adc
mov
int3
pop
aam
cmp
xor
xchg
enter
fldcw
hlt
test
inc
xchg
pushf
xchg
jle
jg
mov
mov
mov
filds
push
arpl
and
in
or
mov
push
cmp
fimuls
movsb
movsb
mov
mov
mov
subb
jle
popf
jne
inc
and
int
imul
inc
hlt
stos
ds
xchg
cld
mov
mov
mov
jne
xchg
sub
orl
clc
xchg
adc
enter
jl
ret
mov
cmpsb
jo
inc
or
dec
fisubs
push
cwtl
cmp
fsubrs
xlat
push
jg
jae
insb
add
pop
aam
jecxz
xor
jle
test
inc
xor
push
xor
test
sub
lahf
int3
lock
std
testb
xchg
mov
es
push
movsl
mov
rcll
cmp
pop
es
xchg
mov
cmp
jmp
fmuls
lahf
inc
jmp
lcall
ja
jg
or
cmpsb
imul
inc
inc
xorb
and
mov
push
mov
pop
imul
add
sahf
loop
fildll
rolb
ljmp
into
sbb
sbb
test
hlt
xchg
xchg
out
dec
dec
pop
inc
sbb
icebp
jno
mov
inc
ds
inc
or
adc
jno
stc
ret
je
lds
push
mov
pop
stc
and
shll
xor
jbe
loop
lods
xor
mov
add
mov
pop
dec
sahf
xor
mov
xchg
pop
push
dec
and
xchg
cmp
arpl
jge
cmp
daa
je
out
pop
notl
xchg
add
aaa
adc
jb
mov
out
mov
pop
bound
sub
dec
cmp
fidivl
push
mov
inc
clc
inc
es
lcall
shrb
mov
arpl
enter
xor
or
into
es
in
shlb
cld
jo
mov
lret
iret
shufps
cmpsl
xor
sbb
sarb
das
std
movl
xchg
adc
inc
pop
outsl
mov
add
dec
sti
mov
sbb
xor
in
into
cltd
test
mov
lea
out
adc
sub
repnz
scas
and
cmp
lea
andb
push
xchg
in
inc
adc
xor
add
cmp
es
pushl
dec
iret
stos
and
adc
pop
cmp
leave
push
adc
inc
insb
shlb
adc
imul
mov
sub
hlt
pusha
cmp
jp
shl
xlat
bound
push
cmpl
inc
jo
into
pop
ret
adc
test
je
divl
jo
add
and
iret
pusha
sub
in
out
fldt
sbb
push
add
sahf
scas
xor
jp
arpl
in
add
repz
iret
rcrb
pusha
insl
push
in
fcomps
insl
xchg
jns
push
push
add
pusha
imul
out
xchg
push
jmp
push
and
and
add
test
xchg
iret
mov
fisubs
imul
mov
sbb
insl
in
mov
cwtl
jb
push
out
push
hlt
shll
or
lahf
jo
mov
lods
imul
dec
and
sbb
std
or
mov
inc
jle
inc
add
adc
xchg
mov
pop
mov
pop
push
mov
movsb
add
fdivl
cs
rclb
sbb
xorl
cmp
jg
mov
mov
cmp
ljmp
mov
jle
test
inc
imul
fbld
fs
imul
lds
loope
xor
add
mov
sub
jle
fwait
into
dec
aaa
and
mov
mov
outsl
inc
ret
fsubrs
and
out
mov
fxch
test
mov
xor
xor
int
fcomi
out
leave
pop
dec
testl
test
adcb
aas
fs
inc
jo
gs
jbe
inc
test
or
bound
dec
xchg
aam
mov
cmpsl
ja
lock
jl
xchg
dec
mov
in
xchg
push
imul
dec
mov
rorb
mov
or
add
in
mov
in
push
push
sub
stos
daa
cwtl
out
inc
mov
or
subl
test
mov
inc
scas
lds
jno
shrb
insl
pop
loopne
test
push
nop
xor
sbb
fnstcw
sarb
mov
lock
sbb
pop
roll
ja
fcomps
stos
lods
sub
adc
push
add
cmp
dec
pop
int
push
addr16
clc
hlt
push
or
sbb
and
or
xor
push
or
daa
push
scas
xchg
in
pop
cld
arpl
cmpsb
incb
lock
aad
cld
int3
iret
in
push
lods
mov
inc
int
adcl
fwait
insl
cmp
cmpsb
rol
sbb
call
push
pusha
jo
dec
int3
sarb
cmpsb
dec
push
aas
push
pop
inc
add
jnp
aam
repz
cli
cmp
loop
out
mov
jp
pop
les
stc
jp
mov
sbb
pop
lods
fbld
jo
jns
lds
cmpsl
sbb
lea
cs
cmpsb
lcall
dec
popf
xchg
sub
jb
js
sbb
stos
or
mov
push
pop
push
add
sub
lock
fistl
or
rcrb
push
outsb
or
loop
cli
cwtl
stc
mov
fmul
iret
dec
adc
adc
cmp
push
dec
pop
xchg
orl
and
fisubrl
scas
sbb
mov
insl
mov
push
lods
divb
ja
jnp
iret
mov
xchg
pop
leave
js
sub
dec
xor
outsb
in
clc
out
or
imul
popf
cmp
outsb
filds
and
js
jb
inc
sub
in
push
jle
xchg
rcrb
sub
jge
sub
dec
aam
mov
pop
push
call
add
add
in
xor
sub
adc
aas
or
and
scas
mov
aas
fbstp
cmpsl
mov
and
sbb
hlt
jecxz
xor
imul
call
in
repz
dec
rcr
ss
mov
push
lret
adc
pop
daa
test
jl
enter
sub
out
sub
movsl
data16
pusha
lcall
or
gs
cmpsb
stos
mov
sub
test
xchg
or
imul
lret
nop
outsb
fistpl
push
rcrl
insb
fwait
fwait
loopne
sbb
jmp
ret
add
cmpsl
mov
outsb
popa
pop
push
lret
or
in
std
xchg
xor
ffreep
call
roll
cli
rorb
jmp
pop
fldcw
inc
mov
mov
ja
or
int
aad
xor
or
adc
push
in
lods
das
add
aaa
jne
mov
aam
test
ret
sbb
adc
imul
inc
jg
mov
rolb
js
pop
test
out
fwait
rcrb
lret
mov
outsb
hlt
ds
jbe
jb
loopne
jne
imul
arpl
arpl
test
cmpsb
loop
inc
lods
sub
pop
es
mov
je
pop
lret
cmpl
movzbl
sub
sbb
adc
hlt
sub
xor
es
icebp
inc
sub
dec
push
sub
mov
jle
xchg
test
scas
jmp
lock
popl
out
cmpsb
mov
outsl
inc
push
data16
push
or
insl
shrb
iret
push
mov
inc
mov
hlt
sub
ds
xchg
mov
add
fisubs
aas
jnp
fwait
test
lds
xchg
and
stos
scas
sub
popf
xor
cmp
xchg
daa
sub
mov
lods
pop
roll
out
cld
mov
lahf
cmpsl
mov
jmp
xlat
sbbl
mov
roll
aad
mov
add
and
dec
addr16
cs
mov
sti
in
cltd
xchg
mov
mov
push
js
adc
sub
insl
insb
ds
inc
adc
and
pusha
adc
pusha
cmpsl
fs
jne
cmp
adc
mov
aaa
aam
lahf
fmul
push
xchg
push
cmp
loope
cmpsl
cmp
xchg
pop
push
js
punpckhbw
or
or
sbb
dec
loop
push
fmul
rolb
iret
int3
sbb
clc
fwait
aad
ljmp
in
lds
out
xor
stos
jb
sbb
and
sti
cwtl
fnclex
pop
or
loop
jge
xor
pop
adc
outsb
lcall
ljmp
xchg
and
jb
in
mov
lds
cld
cld
or
xor
or
push
popf
clc
mov
cli
sbb
inc
sub
cmc
out
in
ffree
mov
repz
and
push
movswl
movsb
xchg
mov
int3
ja
mov
and
cmp
add
je
test
mov
fdivs
dec
ljmp
lahf
insl
call
sub
jns
fwait
sub
notl
stc
xchg
movb
push
out
pop
push
cmp
lcall
pusha
pop
cwtl
dec
jl
ljmp
mov
out
loope
xchg
ret
and
xchg
xchg
imul
adc
and
addr16
and
or
aas
fsubrl
jl
dec
sahf
jae
cmp
aaa
push
clc
ljmp
sub
mov
jno
sbb
repz
pop
stc
mov
mov
ss
in
aam
dec
pop
leave
sbb
jae
mov
test
or
jae
adc
pop
fsubl
mov
and
add
repnz
xlat
and
lock
outsl
outsl
pop
flds
push
jnp
leave
xchg
shlb
xchg
test
aas
jo
fisttps
test
mov
nop
notl
adc
add
jbe
pop
rcrl
sbb
gs
mov
xchg
xor
jne
or
cmpsb
aas
stc
xchg
inc
insl
jne
dec
push
test
in
jp
jle
clc
jns
jo
hlt
mov
fidivl
incl
ja
mov
ror
movsl
fnsave
cmp
in
movsb
test
into
push
cmp
addr16
jmp
es
sbb
push
insb
pop
push
in
and
imull
mov
sub
lock
stos
in
ja
or
cmpsl
xchg
div
loopne
in
inc
cli
loop
lea
pop
cld
mov
rcrb
bnd
pop
fstpt
notl
mov
pop
std
lcall
push
std
cmp
xchg
pusha
push
jo
sahf
or
jbe
rcrb
push
jae
pop
dec
pushf
mov
mov
insb
pop
mov
push
sbb
xor
push
xchg
mov
pusha
cmp
out
dec
ljmp
jle
push
push
add
xchg
stos
mov
mov
fwait
ret
aad
pop
sub
and
and
movsb
push
lds
sbb
add
lret
imull
jno
mov
aam
aam
lods
es
dec
mov
xchg
icebp
shlb
dec
mov
mov
inc
cltd
aam
lds
arpl
bound
sbb
js
mov
pushf
in
push
pop
push
inc
sahf
jno
xor
es
xor
movsb
les
jecxz
cmpsl
lret
xchg
jo
arpl
call
btsl
int3
sbb
mov
gs
jge
ret
out
pop
lds
jl
or
jo
adc
cmpsl
nop
and
adc
and
inc
test
add
dec
arpl
mov
imul
clc
test
xchg
sti
ss
jmp
pusha
inc
outsb
mov
jl
or
popl
daa
add
push
mov
cmp
call
ds
cmc
sub
xchg
mov
std
pop
insl
loopne
fsubr
cmp
cmpsl
sbb
jno
lods
mov
sbb
cmp
pop
sti
dec
mov
test
outsb
cmp
call
popf
or
mov
jne
repz
pop
popa
test
leave
sbb
xor
insb
jo
push
mov
test
cli
dec
push
aas
push
imul
les
jbe
inc
and
popf
lods
add
aam
mov
decb
filds
jne
daa
cmp
push
ficoms
int3
mov
imul
mov
push
mov
and
cmpsl
je
jmp
mov
push
xor
pop
cmp
cmp
out
add
jecxz
pop
shll
aas
pop
xor
imul
pop
or
inc
mov
mov
loopne
lock
testl
inc
mov
push
div
xchg
and
mov
es
sbb
jp
jns
jo
testl
sbb
mov
push
insb
lahf
cmpsl
cmc
icebp
outsl
pop
subl
leave
movsl
int
and
negl
retw
es
insl
das
xchg
mov
lods
jne
adc
sbb
fistpll
or
mov
jne
xor
popa
adc
xchg
mov
dec
ja
mov
inc
adc
fnstenv
xor
xchg
out
fadd
int3
mov
into
xor
shl
movsb
xlat
fists
out
jae
and
push
add
cmp
jmp
xchg
es
pop
stos
pop
fs
clc
test
stc
cmp
and
loopne
enter
fsubrs
inc
movsb
jmp
int3
jne
mov
mov
imull
inc
pop
sub
out
das
repnz
jae
pusha
xor
cltd
mov
lods
sbb
lds
or
or
push
push
mov
lods
pop
lods
cmpsl
ja
jns
xchg
ljmp
mov
xor
mov
out
mov
push
fwait
mov
stos
mov
dec
jbe
sahf
or
cmp
stos
pusha
hlt
or
lds
pop
ljmp
mov
inc
rorl
xchg
cmp
pop
mov
mov
and
xchg
add
into
push
inc
dec
mov
cmpsl
mov
cmp
mov
jg
dec
xchg
jnp
in
filds
sbb
lahf
in
stos
and
push
pop
push
imul
pop
repnz
cld
ret
clc
and
jne
insl
adc
rorl
pop
pop
pop
cmp
sub
ljmp
xchg
adc
ret
iret
mov
push
mov
push
add
int
popf
lock
pushf
jb
mov
pushf
lds
jbe
jns
aad
cmpsb
mov
pop
jno
jae
sbb
xorl
cmp
mov
cs
pusha
add
ss
arpl
bound
jo
inc
imul
sub
mov
push
stos
sub
cmp
mov
das
ss
scas
loopne
hlt
mov
mov
inc
push
gs
inc
ljmp
and
cmp
nop
negl
out
rol
rorb
mov
mov
mov
iret
scas
mov
ffree
push
jp
data16
fsubs
es
popa
aas
xchg
cmp
aad
stos
mov
adc
daa
add
movsl
icebp
adc
fdivr
repz
jmp
adc
shlb
shll
xchg
ljmp
mov
xor
mov
daa
mov
aas
data16
test
or
or
lcall
lods
push
sbbb
lret
xor
idivl
dec
pop
xchg
inc
xchg
fsubl
faddp
lods
sub
push
add
inc
jge
out
add
mov
and
mov
or
icebp
or
inc
xchg
stc
in
icebp
int
ret
test
mov
jg
fimuls
cltd
fst
pop
subl
adc
das
pop
mov
lret
popf
cmp
push
cmp
dec
shrl
mov
mov
std
lods
xor
jno
jnp
xchg
mov
daa
lds
sbb
adc
mov
xor
fnstsw
add
push
enter
into
sub
jg
les
jecxz
jno
aaa
lods
rclb
mov
fs
dec
add
in
aam
or
adc
ljmp
cmp
loope
pop
mov
out
stos
je
inc
jge
add
stos
push
test
aaa
xchg
fildl
movsl
xor
mov
xor
jmp
mov
mov
std
cmp
fcoml
add
lea
dec
stos
jp
das
pusha
mov
callw
fsub
push
pop
sahf
js
mov
cmp
mov
mov
scas
jmp
or
imull
and
divb
sbb
icebp
pop
inc
test
mov
push
lea
out
out
loop
cmp
hlt
xor
mov
lahf
ljmp
pop
pop
icebp
and
mov
mov
aam
sub
or
aas
mov
lret
sti
imul
int
int
icebp
sti
inc
dec
addr16
xchg
je
and
and
aam
jo
into
ljmp
and
lods
push
in
shrb
pop
cli
mov
inc
inc
jo
int3
cmp
jnp
xor
ficoml
shlb
and
xchg
std
add
pusha
mov
xchg
adc
add
pop
fdivs
stc
ret
mov
sbb
xor
jae
pop
cmp
mov
fsubl
or
pop
xlat
jbe
cmp
popa
imul
pop
arpl
pop
mov
es
test
jle
fdivrs
out
adc
jecxz
aam
in
cmpsb
cmp
mov
stos
test
or
adc
xchg
add
js
je
mov
xchg
jecxz
fs
push
pop
dec
mov
mul
jb
call
mov
outsl
jg
arpl
addb
xchg
loope
pop
xor
xchg
dec
and
leave
pop
out
les
sarl
adc
imul
dec
in
jnp
push
xchg
dec
pop
adc
xchg
adc
repnz
lret
imul
pop
inc
and
data16
aad
push
out
cltd
out
test
mov
sub
xchg
sbb
ss
cmc
bound
scas
daa
xchg
div
xchg
push
inc
cmpsb
and
pop
mov
addr16
popa
clc
inc
xchg
push
in
lret
jmp
sti
outsl
push
out
cld
mov
ret
sbb
js
int3
push
push
xchg
inc
je
dec
out
cmpb
push
subb
leave
mov
jne
cmp
fistpll
pop
fcoms
xlat
xor
shlb
adc
sub
call
addl
orl
call
fcomip
popa
push
mov
push
mov
pop
cmp
bound
push
cmpsl
test
inc
fidivl
mov
xchg
xchg
cli
mov
outsb
lcall
add
xor
mov
push
adc
dec
aad
lret
notl
aas
sub
nop
adc
inc
movsl
shll
insl
cmpsl
xor
icebp
negl
adc
push
ja
daa
add
pop
lret
mov
repz
out
stos
sysexit
xchg
nop
bound
sti
das
mov
adc
mov
test
mov
ja
add
fwait
sbb
ljmp
sub
push
or
jp
dec
loop
add
popf
jmp
pop
mov
adc
push
xchg
fcomi
mov
or
clc
cmp
push
add
cld
call
jno
mov
pop
pop
pop
rcl
imul
push
cmp
cmp
nop
test
movsl
inc
sub
negl
fistl
outsb
lcall
xchg
out
pop
sbb
lret
mov
js
jno
mov
push
dec
add
stc
add
cltd
jmp
clc
faddp
mov
decb
push
icebp
fiaddl
test
pop
or
test
mov
test
test
rorl
pop
push
imul
imull
sub
cs
cmp
xchg
xchg
sub
add
aad
adc
cmp
xchg
dec
stc
movsl
popa
dec
jne
lahf
and
ljmp
inc
movsl
int3
shll
sub
push
jge
xchg
imul
or
xor
out
out
mov
pop
sarb
inc
mov
xor
outsl
inc
ss
sub
jmp
adc
insl
loopne
xor
add
inc
xchg
dec
cwtl
or
stos
es
jp
pusha
pushf
enter
loope
pop
stos
sti
mov
sahf
clc
cs
push
pop
inc
and
test
daa
add
pushf
ficompl
test
inc
ret
into
mov
or
mov
ljmp
cmc
push
fldl
mov
cmp
pop
nop
sbb
adc
mov
mov
jp
test
add
pop
shlb
cld
repnz
xor
pop
scas
filds
inc
mov
loope
cmpsb
add
mov
mov
dec
stos
mov
inc
jae
ret
les
es
mov
lods
mov
sbb
push
pop
dec
pop
sub
mull
lds
out
mov
int3
cmp
pusha
inc
mov
sbb
dec
pcmpgtd
mov
pop
sbb
in
and
jp
inc
into
iret
mov
push
dec
sbbl
or
and
fldcw
dec
insb
icebp
out
iret
or
mov
mov
mov
mov
jno
jmp
ss
xor
pop
jl
out
jns
icebp
ljmp
aas
cmp
xchg
or
daa
mov
push
adc
jge
pushf
shl
fsubrl
push
push
repz
inc
xchg
adc
sbb
rcr
pop
mov
or
lds
shrb
xchg
or
add
loopne
pop
xchg
mov
mov
test
add
xchg
cmp
jmp
or
pushf
jno
sub
test
or
mov
cmp
mov
ja
in
xorb
stos
adc
jg
and
pushf
mov
mov
rcll
inc
loope
ja
out
pop
loop
or
aam
xchg
cld
clc
mov
xchg
jnp
jecxz
mov
mov
scas
adc
mov
cmp
notl
cld
mov
mov
rcrb
xlat
inc
jb
aam
data16
and
aas
nop
notb
mov
push
inc
cmp
sub
stos
mov
lret
test
push
or
inc
pop
dec
loope
xchg
sbb
mov
sbb
lret
mov
jne
pop
mov
mov
mov
test
shl
xorl
movsb
add
xchg
stos
addr16
stos
add
jnp
cltd
mov
mov
adc
mov
ss
jecxz
clc
in
xor
aaa
das
mov
out
pop
or
stos
sbbb
xor
fildll
sub
jmp
dec
loop
sub
int3
mov
mov
in
cmp
xor
mov
adc
jnp
outsl
add
imul
sub
adc
sbb
xchg
adc
fs
adc
xor
stc
add
push
bound
fimull
mov
out
leave
flds
xchg
xchg
int3
cmp
repz
cld
dec
das
adc
popa
cs
stos
sub
in
inc
insl
clc
push
add
jg
cmp
data16
jnp
pop
addb
rolb
cmp
scas
fildl
pushf
adc
push
sar
mov
add
push
je
ret
cmp
imul
repz
hlt
inc
pop
jge
bound
int
xchg
pop
push
jbe
sub
int3
push
lods
fstl
cmp
test
jno
cmp
jno
mov
mov
in
pop
push
dec
jle
xor
aaa
lea
cmp
iret
dec
push
repz
imul
and
ja
ljmp
xchg
clc
fmuls
cmp
mov
rorl
imull
stos
andl
clc
cmp
xchg
into
call
add
aam
or
push
pop
sarb
dec
dec
stos
cmpsl
jo
inc
cli
mov
movsl
movsb
hlt
test
or
gs
jle
rclb
adc
add
xchg
lods
pop
gs
pop
mov
aaa
xchg
adc
push
push
cmp
stos
cmp
cmp
dec
cmpsl
loope
mov
jno
mov
ljmp
xchg
mov
cmp
and
or
aas
jno
outsb
sbb
push
shlb
mov
adc
mov
sub
sarl
fidivrl
or
bound
add
push
xor
mov
sub
xchg
rorl
stos
pop
rclb
std
loop
jle
pop
enter
lret
out
push
xor
out
push
adc
imul
jns
repnz
repnz
cmp
out
mov
inc
jl
int3
aad
test
fbstp
out
push
mov
jb
xor
lahf
lea
cmc
int
jns
out
mov
call
popa
pushf
and
ds
xor
xchg
mov
popf
cmp
or
mov
and
das
sbb
fstl
inc
fisubs
call
mov
and
or
pushf
das
adc
int3
nop
jl
jle
ret
mov
icebp
xchg
outsl
imul
sub
xor
push
and
movsb
push
ficompl
loopne
mov
outsl
cli
mov
mov
es
cmp
jle
inc
mov
fldenv
jp
xor
and
cmp
fildl
stos
in
jg
dec
lds
mov
sti
mov
pop
ja
ja,pt
cld
and
sbb
test
cwtl
sbb
arpl
lea
jb
sbb
arpl
fdiv
cmpsl
mov
cmp
add
push
incb
jcxz
mov
xchg
cmpsl
lods
adc
lods
cld
in
in
jmp
pusha
xchg
xchg
shrl
rorb
or
sub
iret
jno
mov
in
aaa
inc
imul
scas
mov
fimuls
fstl
addl
sub
pop
mov
cmp
addr16
push
fwait
add
adc
bnd
ss
stos
ret
inc
adcb
stos
rcrb
mov
pusha
cmp
shll
imul
jl
mov
mov
push
sbb
adc
sbb
dec
adc
inc
movsl
xlat
repnz
sahf
cmp
cwtd
xchg
rclb
arpl
sbbb
add
sbb
xchg
add
xor
shlb
inc
in
push
lret
scas
mov
fs
push
out
ds
jno
push
dec
cmp
sbb
inc
adc
push
test
insb
scas
cmp
push
mov
jbe
aas
data16
pop
inc
outsb
sbb
sub
xchg
repz
sub
outsl
loopne
inc
outsl
jne
sti
inc
cmc
mov
cmp
hlt
subb
sarb
test
int3
imull
mov
ror
je
xor
jle
pop
lock
add
and
fsubs
stc
test
outsl
add
cs
mov
mov
imul
popa
into
shl
pushf
or
sub
stos
jg
cwtl
xor
out
sub
xor
push
push
push
xlat
adc
mov
in
ror
mov
nop
test
mov
outsb
sbb
jb
xor
fsts
mov
mov
pop
scas
fwait
inc
dec
repnz
mov
xor
psubw
jecxz
or
ljmp
pop
sub
jno
or
lea
stos
sbb
push
inc
cmp
adc
pop
in
sbb
jbe
add
inc
pop
ja
add
mov
jle
fidivrl
loopne
sbbb
adc
push
stos
adc
shll
mov
mov
imulb
das
repnz
sahf
das
out
fwait
ror
mov
jb
cmpsb
cltd
xchg
ds
mov
popa
push
inc
cli
inc
test
enter
or
push
fnsave
cmp
lret
mov
fsubl
pop
inc
in
outsb
ret
pop
in
enter
sub
loope
lret
jnp
out
pop
loop
adc
push
mov
xchg
arpl
scas
ret
clc
mov
pop
sbb
xor
das
gs
stos
roll
sbb
mov
je
divb
jp
cltd
flds
xchg
iret
and
fwait
pop
xchg
ret
icebp
out
sub
sbb
push
sarl
jo
and
je
lahf
fdiv
adc
push
aas
popf
add
dec
mov
icebp
outsl
adc
cmp
addr16
sbb
test
mov
out
aas
test
cmp
cwtl
fdivr
mov
imul
xchg
mov
insb
inc
push
in
mov
push
fwait
mov
fistps
adc
out
imul
fiaddl
into
xor
mov
jmp
mov
into
add
in
push
or
mov
or
mov
push
pusha
mov
lret
inc
cld
and
lea
out
pop
mov
cmp
cwtl
lock
xchg
pop
mov
or
popa
les
mov
stos
inc
jno
out
das
dec
cli
in
push
jg
dec
lcall
shlb
push
push
js
lods
jmp
sub
mov
mov
mov
adc
call
xchg
hlt
push
rcrl
fwait
mov
jno
mov
pop
int3
xchg
mov
rol
sub
arpl
mov
jl
icebp
loope
js
cmp
call
xchg
movsl
jb
lret
in
mov
clc
gs
pop
or
fdivrl
mov
mov
into
sbb
xchg
leave
add
test
pop
fdiv
or
xor
adc
xchg
aaa
cmpsb
mov
iret
dec
mov
mov
insb
xchg
push
outsl
les
sahf
inc
lret
in
or
or
inc
mov
push
xor
mov
sub
stc
sbb
mov
jg
ds
xor
xchg
push
cmp
ss
jb
aam
js
out
inc
jae
jb
stos
shll
mov
movsl
outsl
xchg
mov
jb
stos
lods
sbb
pusha
and
dec
fwait
shrb
data16
inc
in
or
stos
or
pop
mov
aaa
test
fisubl
jne
adc
shlb
push
jnp
lock
and
pop
ret
test
mov
iret
dec
out
push
test
mov
out
mov
clc
mov
xor
in
jecxz
in
dec
cmp
repz
fidivrl
popa
hlt
js
jae
cmc
dec
jnp,pt
inc
and
jb
jb
mov
or
pop
xchg
adc
rcrl
adc
sysret
stos
shlb
outsl
jo
in
mov
jnp
pop
sbb
daa
cli
sbb
dec
xlat
mov
add
std
mov
jmp
out
xchg
in
imul
sub
adc
jae
jecxz
add
leave
mov
lds
sub
xchg
aad
faddp
jge
jnp
aas
cwtl
test
stos
jb
xchg
les
imul
test
dec
lds
stos
leave
and
std
xor
adc
addr16
cwtl
js
inc
scas
out
inc
stos
cli
sub
mov
push
repz
push
pop
mov
pop
cmp
xchg
inc
insb
adcb
xchg
or
pushf
xchg
ds
inc
push
jg
inc
popa
dec
adcl
xchg
ljmp
cmp
divb
jns
hlt
call
and
add
aaa
inc
test
mov
pop
mov
pop
dec
or
mov
xor
fdivl
mov
jns
pop
sub
mov
xor
dec
jle
sub
inc
xchg
lea
jo
sbb
adc
cld
bound
adc
int
and
jnp
nop
andl
pop
fsubs
mov
fimull
into
mov
mov
mov
stos
leave
push
add
cs
jne
jmp
pop
dec
inc
mov
adc
cli
xchg
xchg
gs
mov
mov
jbe
xchg
mov
sar
test
wrmsr
ljmp
cld
cli
cmp
push
adc
xlat
mov
xor
addl
push
sbb
push
scas
and
jnp
cmc
out
stos
inc
xchg
xchg
je
sti
in
push
xor
popa
test
inc
and
insl
sbb
pop
sbb
or
cmp
sbb
inc
and
cmpsl
iret
lret
ja
jb
xor
dec
inc
add
adc
aad
or
push
cmp
stos
aam
mov
fs
add
jle
sub
jbe
imul
mov
mov
popa
push
jge
jge
push
fsubl
dec
mov
mov
xchg
mov
rcr
scas
or
idiv
xor
enter
int3
push
pop
dec
cmpl
insl
pop
add
div
mov
ljmp
and
jnp
xor
xchg
jmp
or
repnz
outsb
jl
cld
sub
dec
sbb
cmp
loopne
dec
xchg
std
xor
push
out
and
adc
and
xchg
movsb
xchg
mov
cmpsl
adc
xchg
pop
inc
lcall
popf
test
push
mov
rorl
xor
sbb
jae
jmp
sarl
jl
cmp
lret
jbe
xchg
push
mov
int
mov
mov
mov
cmp
ja
into
xchg
jp
lcall
sbb
fs
pushf
push
test
sbb
hlt
andps
in
sub
mov
push
jns
insb
insb
cmp
outsb
push
jmp
out
pop
push
test
and
add
mov
in
mov
pop
or
cltd
das
mov
xor
mov
mov
mov
fxch
or
outsl
adc
push
daa
mov
test
and
rcll
mov
mov
cmp
int
jne
xchg
mov
pop
repz
push
mov
in
pusha
ror
ret
dec
push
jle
sahf
dec
cltd
mov
xchg
mov
incb
mov
adc
sub
push
push
or
dec
iret
adcb
dec
inc
bound
call
jae
test
lods
ss
popf
js
adc
mov
cmpsl
cltd
push
dec
je
pop
dec
ror
aaa
dec
adc
jle
push
lret
pop
imul
pushf
fidivrs
insb
test
arpl
dec
int3
popa
pop
outsb
pop
test
mov
push
aaa
lds
subl
dec
push
sahf
and
mov
cld
sbbb
stos
int3
stc
xchg
or
loop
movsl
xchg
mov
imull
push
aas
movsb
jns
mov
xchg
xor
xor
xchg
cmp
loop
movsl
push
xlat
loopne
movsb
sbb
pop
and
mov
daa
xchg
addr16
sub
jb
lds
iret
cmp
leave
jmp
lcall
sub
mov
je
cmp
jns
pop
dec
loopne
ret
add
cmpl
cmpsl
mov
or
cli
jmp
and
mov
sarb
add
in
mov
dec
ja
repz
cmp
imul
notb
adc
rclb
mov
sti
adcb
icebp
adc
js
ljmp
pop
pop
ds
jne
rcll
lret
addb
fs
xor
push
jp
add
adc
scas
push
rcll
add
dec
out
mov
enter
lods
hlt
cmpsb
and
movsl
mov
mov
push
jp
mov
in
jno
push
loope
subb
loopne
pop
jp
mov
xlat
pop
shrl
pop
mov
and
xchg
stos
push
push
inc
push
mov
pop
ds
cmp
scas
or
daa
and
jp
testb
jp
and
loopne
pop
push
into
shrb
and
dec
and
mov
es
or
and
ja
movsl
fsubrs
fsubs
jl
mov
pop
jae
cwtl
xor
dec
stos
sub
jmp
hlt
ds
outsl
incb
push
push
and
lahf
into
aam
stc
sahf
sub
sub
insl
rcl
and
xchg
dec
jge
fldt
jle
shl
jp
dec
neg
sti
std
mov
pop
and
ds
xchg
hlt
xchg
pusha
pop
lock
push
inc
lea
stos
mov
mov
push
enter
lret
add
cmpsb
and
jo
push
int3
cli
add
ljmp
loope
ljmp
mov
push
adc
jns
push
mov
adc
sub
sub
in
stc
dec
idivl
into
push
or
sub
cwtl
mov
sahf
lahf
or
fists
sub
adc
mov
scas
mov
enter
jae
ficomps
sbb
bound
xchg
xchg
xchg
leave
pop
js
loop
mov
lds
aas
es
push
insb
xchg
cmp
mov
stos
daa
jns
in
mov
js
sub
in
mov
xor
mov
cmpsb
into
cld
imul
fnclex
mov
push
outsl
pusha
inc
int3
imul
push
mov
and
fsubl
or
roll
or
xor
into
loop
movb
xor
pushf
jg
mov
lods
push
fwait
mov
mov
jg
cmp
sub
mov
adc
jp
jmp
cmp
out
fs
rcr
hlt
loop
push
stc
xchg
pop
xlat
ucomiss
and
fnstsw
adc
lds
repz
adc
xchg
xorb
stos
xor
stos
or
hlt
push
mull
jp
shl
shlb
leave
icebp
or
push
fsubl
frndint
and
inc
stc
push
jae
sbb
adc
rolb
sub
cld
xchg
mov
xchg
clc
xor
inc
adc
jg
rclb
or
outsl
pop
jns
push
out
call
test
mov
xchg
scas
jl
ljmp
movsb
jp
pop
aam
ficompl
mov
repz
xchg
jge
or
ret
or
icebp
mov
mov
mov
pop
or
cld
jnp
jns
and
dec
fldl
jmp
ds
or
and
enter
pop
sub
sub
jno
rcrl
repz
orl
lahf
nop
cmp
dec
outsl
pop
lret
push
ret
adc
push
xchg
jb
imul
inc
mov
ret
sub
popa
lods
lds
movsb
sub
repz
xor
subb
into
clc
jnp
adcb
fidivrl
js
pop
in
std
adc
sbb
inc
xchg
inc
xchg
add
xchg
addr16
mov
repz
push
lahf
je
int
out
enter
idiv
inc
add
adc
dec
rcl
ja
repnz
xchg
js
mov
dec
inc
mov
or
in
inc
dec
ds
bound
cmp
pop
aad
xchg
or
insl
aas
add
imul
gs
add
jge
push
adc
xchg
cltd
scas
imul
cmc
jl
add
inc
je
in
sbb
stos
mov
leave
cwtl
jg
leave
lods
jae
jl
or
sti
shrl
sbb
mov
iret
pop
and
xchg
popf
mov
inc
lock
lahf
pop
fldt
pop
mov
mov
mov
xor
pop
add
sbb
stos
mov
mov
xor
mov
pop
adc
cmpsl
mov
movsl
fldl
cmp
dec
into
mov
lcall
push
fsincos
lcall
add
mov
mov
cmp
test
cmp
les
call
aad
test
and
xor
mov
or
or
jl
or
mov
sbb
out
push
or
jne
jecxz
jnp
data16
add
xor
jp
repnz
cltd
sbb
je
insl
cwtl
fs
fidivs
addb
shr
adc
test
ds
daa
mov
flds
push
daa
sbb
lret
push
into
aad
in
sbb
push
jns
sub
mov
mov
pop
mov
xor
jg
jecxz
and
add
fiaddl
mov
daa
push
inc
jnp
mov
or
mov
sbb
sub
dec
mov
and
std
out
adc
inc
decl
ss
repz
popa
stos
sbb
and
lcall
arpl
mov
in
cli
in
mov
cwtl
jne
dec
inc
fildl
data16
test
hlt
and
mov
mov
xor
movsl
pop
push
pop
std
fwait
xor
outsl
push
mov
mov
fdivrs
adc
mov
dec
and
int3
push
repz
add
scas
mov
pop
aaa
jae
push
and
daa
int
lds
insl
hlt
jb
add
sahf
mov
pop
out
enter
push
and
aad
and
lods
hlt
mov
mov
push
fwait
and
mov
stos
ja
imul
push
mov
shlb
sbb
xchg
mov
pop
icebp
roll
packsswb
daa
push
xor
test
stc
sub
movsb
push
or
adc
adc
repnz
shr
ljmp
sub
or
sahf
int
arpl
cltd
mov
scas
lahf
xchg
mov
cmp
jp
aas
xchg
out
test
std
incl
sbb
xor
or
mov
and
add
ss
mov
cmp
push
icebp
out
shr
push
insl
add
mov
pop
lret
xor
aad
sbb
add
adcb
xchg
jmp
inc
inc
in
int
insb
push
fcom
jno
inc
xor
cmpl
ss
ss
or
pop
push
cmpsl
add
jnp
fnsave
rclb
add
cmp
sti
sahf
cmp
push
xor
sbb
insb
scas
ja
lods
icebp
jg
or
inc
lods
xor
jl
mov
or
int3
push
mov
dec
inc
cmp
adc
sbb
addr16
leave
add
pusha
dec
cmpl
rcrb
scas
aam
jge
sub
jecxz
sbb
imul
inc
xchg
aad
shlb
cld
je
push
call
je
mov
sbb
pop
das
dec
mov
in
push
inc
push
into
sbb
mov
das
fimuls
jle
lret
jl
in
inc
mov
mull
cli
mov
imul
add
fildll
in
mov
cmp
and
in
push
mov
out
pop
xor
bound
fs
fildl
movsl
imul
jne
lea
jge
fcomp
loope
es
cld
test
out
test
adc
fwait
xorb
mov
inc
cmpsl
add
stos
push
pusha
lea
pop
fsubr
xchg
adc
sbbb
xchg
inc
sti
mov
inc
or
cmpsl
adc
lock
mov
adc
pop
and
enter
add
shll
test
movsl
aaa
cwtl
dec
outsb
inc
jne
sarl
scas
mov
push
dec
push
push
sbb
pop
insb
insl
mov
hlt
cmp
mov
xchg
xchg
mov
push
mov
iret
push
mov
mov
or
js
inc
sbb
inc
outsl
arpl
icebp
mov
pop
lahf
mov
cmp
cvtps2pi
cltd
jecxz
lret
mov
nop
mov
popa
es
lods
push
sbb
cmp
js
movsb
dec
std
imul
sbb
mov
andb
popa
push
ja
repz
dec
push
dec
out
data16
lret
subl
scas
jae
cltd
fidivs
fs
adc
insb
ljmpw
int
call
pop
imulb
jp
test
jmp
push
test
fwait
mov
or
push
jmp
mov
mov
xchg
mov
fldt
inc
outsb
xor
in
cmp
add
add
mov
pop
cmp
adcl
dec
cltd
out
mov
pop
call
cmpsl
lret
sub
jecxz
lods
mov
movsl
mov
inc
pop
sahf
addr16
pminub
cmpb
or
jmp
popf
fstl
les
mov
or
xchg
lock
dec
ljmp
inc
inc
insl
jmp
xchg
ffree
jecxz
mov
jb
inc
cltd
insl
adc
inc
pop
call
push
cmp
addb
adc
pop
ucomiss
sub
jp
mov
pop
pop
jns
push
jb
sahf
dec
aam
in
sub
int3
sbb
jecxz
pop
adc
in
mov
lock
stos
mov
ja
lods
cmp
test
inc
loope
pusha
out
jbe
xchg
mov
test
nop
loopne
cld
and
lret
jmp
push
ret
sub
and
adc
fldt
insl
xlat
in
jl
cmp
in
mov
or
shll
cmp
addb
shrl
je
pusha
jae
mov
dec
scas
dec
mov
dec
xlat
mov
outsl
shlb
push
aaa
int3
mov
cmpsb
sahf
mull
xor
jmp
aam
stos
add
sub
fcoml
push
sbb
mov
stos
pushf
jg
ret
repnz
sbb
pop
xor
mov
and
dec
fnstenv
xor
jae
and
push
or
inc
rcll
fadds
dec
mov
aam
or
mov
push
ret
sti
js
mov
cmpsb
cld
mov
jae
mov
jne
shll
dec
mov
aaa
or
into
pop
std
repnz
mov
xor
add
mov
cld
or
jl
nop
mov
mov
xor
nop
leave
stos
cli
mov
cmp
loop
dec
inc
shlb
lods
push
outsb
in
lret
push
ljmp
push
push
jg
xchg
sti
xor
mov
or
pop
push
mov
aam
les
mov
sbb
push
lods
std
and
push
push
sbb
aad
xor
loopne
frstor
std
call
push
cmp
push
es
icebp
call
clc
adc
incl
lods
out
push
cli
mov
inc
cmpl
popf
push
adc
lcall
jbe
dec
jbe
sub
insb
lods
sbb
push
in
push
sub
xchg
fwait
test
ljmp
aam
mov
add
aam
dec
jp
pop
xchg
pop
adc
add
xchg
and
rorb
rorb
mov
mov
in
or
mov
add
popa
mov
out
push
mov
repz
jns
shrl
int
add
hlt
and
mov
xor
scas
jno
mov
es
insb
ja
ds
mov
outsl
outsb
movsb
jae
dec
add
js
jne
xor
lods
and
dec
jp
hlt
stc
add
mov
mov
or
sahf
xchg
es
jmp
or
scas
push
movsb
lret
lock
rclb
aam
inc
aad
mov
fs
inc
and
sub
add
out
mov
arpl
sbb
rorb
xchg
jmp
push
filds
inc
movsb
sbbb
push
mov
push
mov
push
xor
lcall
and
or
jl
sbb
mov
in
jge
dec
push
daa
out
bound
fcomip
imul
ret
xchg
cwtl
add
popf
pop
cld
mov
aaa
pop
xchg
into
add
push
nop
sub
xor
xchg
xor
push
ljmp
pop
mov
cmp
push
inc
cltd
xchg
or
loopne
fs
jmp
jg
inc
imul
shrl
shll
stc
push
lock
test
sub
dec
push
pop
hlt
adcl
cmp
push
adc
xor
push
sti
je
out
pop
hlt
inc
in
adc
xchg
and
dec
rorl
movsl
jb
jg
cmp
cmpl
mov
sti
stos
or
hlt
cmpb
xor
lock
fcmove
lea
xlat
in
mov
adc
fsubs
mov
rclb
cmp
sbb
cltd
jns
bound
dec
xor
daa
lock
sub
xor
xor
loopne
lret
lret
or
test
lods
mov
xor
lods
sarb
fisubrl
outsb
mov
daa
cmp
clc
loopne
rol
ja
inc
xchg
loop
xchg
iret
mov
sub
dec
lods
jmp
add
xor
xlat
cmpsl
fiadds
fadds
in
cmpsb
xchg
jmp
xor
fsubrl
mov
xlat
pop
xlat
mov
loope
sbb
loope
fidivs
ljmp
adcb
dec
imul
into
mov
loop
sbb
lods
mov
inc
fstpt
sub
cmp
jge
pop
je
int
inc
xor
jecxz
stc
mov
repnz
jns
fwait
loope
pop
int3
pop
ja
inc
add
jae
pop
and
stc
pop
shll
push
cli
sti
insl
jo
add
mov
lret
in
cmp
pop
inc
sub
andb
scas
gs
shlb
movsl
mov
or
jmp
mov
pop
int
sub
je
std
push
scas
xor
add
imul
clc
adc
sbb
pop
fidivs
aam
and
leave
cmc
jo
mov
pop
int3
cs
movsb
mov
dec
mov
rclb
fsubr
call
and
icebp
fstp
sbb
xor
or
mov
push
sahf
cmc
out
call
loope
in
sub
out
push
mov
movswl
outsb
mov
pop
cs
mov
ja
xor
es
aad
dec
pop
call
or
je
pusha
mov
sub
dec
mov
in
jmp
icebp
adc
xchg
inc
insb
mov
adc
or
fsubr
push
pop
les
xchg
jno
xchg
les
lds
jb
test
fidivs
je
jae
or
mov
mov
cmc
inc
xor
add
test
or
cmc
add
dec
jo
add
mov
div
cwtl
adc
arpl
ret
pop
js
lock
in
gs
mov
pop
cmp
mov
push
insb
das
add
clc
lret
mov
das
and
cwtl
mov
arpl
adc
ss
nop
mov
testb
jns
int
icebp
mov
int3
push
mov
call
or
xchg
jge
xchg
and
push
lea
mov
mov
or
sub
adc
insl
xchg
jge
adc
xor
push
shll
repz
cmpsb
rolb
test
xor
aas
mov
aas
popf
es
mov
push
fildll
stos
push
cmpl
push
int3
mov
cltd
fistpll
in
mov
inc
and
out
faddl
nop
jmp
jnp
jbe
inc
mov
inc
mov
int3
insl
js
push
push
les
push
jno
xchg
test
int
or
pop
in
fs
mov
aas
fcoms
lret
mov
stos
js
je
xchg
push
xor
cmp
gs
mov
stc
enter
into
outsb
push
mov
imul
xor
outsl
mov
or
pop
xor
fcompl
add
push
and
cmp
in
xor
jl
mov
sbb
mov
das
dec
adc
xchg
mov
roll
popf
pushf
in
pop
mov
aaa
ds
jl
fwait
call
les
or
mov
rolb
and
iret
inc
mov
inc
inc
dec
jo
fimull
mov
sub
xchg
aad
popf
or
mov
adc
aam
mov
cmc
mov
cli
adc
les
loop
inc
mov
insb
cmp
mov
ljmp
popa
and
cmp
movsl
es
sbb
leave
or
xchg
pop
into
repz
mov
sbbl
cmpsl
push
subl
test
fidivl
jp
sbb
inc
mov
cld
les
repz
movsb
rcrb
adc
ds
popa
int
inc
out
mov
mov
cltd
adc
push
jp
or
xor
jb
jp
insb
inc
add
xchg
push
sub
addl
neg
mov
adcb
in
jge
fbstp
add
mov
cmc
and
aam
cli
fisttps
daa
jne
repnz
fimull
dec
and
mov
rcll
outsb
xchg
push
jg
iret
add
sbb
outsl
jl
push
icebp
imul
inc
sahf
lods
sub
jp
test
pusha
arpl
push
cmp
xchg
adc
xor
dec
sub
add
lea
jle
xor
push
dec
dec
repz
jge
addr16
ret
dec
int3
add
popf
push
sbb
ss
lcall
sbb
ret
and
sbb
rcl
jle
fidivs
lods
and
stos
xchg
jns
les
je
pop
pop
sbb
bound
rorb
or
movsb
xchg
inc
cmpsb
add
mov
sahf
movsb
icebp
sub
mov
ds
stos
sub
gs
mov
fwait
iret
arpl
or
xchg
add
out
xchg
adc
sbb
pop
mov
cmc
inc
fcmovnb
jl
xchg
rcll
fcmovnb
push
push
mov
push
mov
cmp
das
into
nop
cli
je
adc
cmp
iret
mov
sbb
mov
stos
xchg
pop
xchg
leave
xchg
repz
cs
loopne
bound
mov
enter
es
add
cwtl
in
or
add
dec
pop
xor
mov
ficomps
xor
je
nop
clc
xor
mov
mov
lret
mov
pop
mov
in
add
or
sbb
mov
push
inc
iret
sub
dec
cmc
pop
pusha
sti
insl
mov
dec
and
sar
loop
pop
aaa
dec
in
sbb
xchg
hlt
in
adc
jge
in
fscale
cmpsl
in
pop
xor
andb
mov
jecxz
xchg
je
ret
push
int
mov
in
loop
loop
and
jo
cmp
dec
pop
pop
sub
adc
dec
sti
and
mov
adc
int
imul
dec
ret
insb
orl
test
push
sbb
pop
int3
ljmp
fmuls
test
pop
dec
mov
test
insb
faddl
cmp
mov
or
jmp
sbbb
inc
sbb
js
cmpsb
nop
xchg
inc
mov
fs
and
popa
mov
fbstp
je
inc
cmp
ja
fmuls
shl
cmp
mov
pop
mov
sub
std
cld
stos
outsl
mov
int3
or
adc
mov
adc
mov
test
add
enter
jl
adc
into
pop
das
sub
in
jo
arpl
adc
push
mov
icebp
adc
and
stos
xchg
scas
cld
dec
in
incl
mov
sbb
cmp
adc
sti
test
push
fdivrs
mov
push
jno
je
in
adc
aaa
insb
popa
aam
lods
mov
insl
pop
mov
fistps
inc
adc
clc
push
arpl
inc
mov
int3
add
sbb
enter
dec
adc
test
fiadds
ret
cmp
outsl
flds
or
in
ljmp
and
sub
stos
movsb
jmp
lea
loope
test
sub
sbb
pop
add
cmpb
push
sub
or
jmp
popf
lcall
mov
scas
sub
popl
in
clc
dec
dec
and
add
and
test
mov
jo
adc
inc
andl
outsl
fisubs
xor
cmp
jle
decl
insb
arpl
popf
mov
xchg
inc
fwait
push
iret
xchg
inc
push
push
push
hlt
imul
bnd
adc
rcpps
sub
std
jo
dec
ret
loopne
mov
mov
lods
cmp
mov
inc
add
lret
jg
fwait
icebp
cli
stc
fs
push
cli
int
insb
push
adc
sub
xor
das
test
test
loop
jnp
pop
rolb
add
lds
pop
fs
cmp
adc
clc
mov
mov
imul
scas
mov
xor
push
inc
lock
ret
out
ficoml
add
xor
xchg
mov
fsubr
ja
rcrl
test
and
cmp
push
cmp
xchg
clc
cmp
jmp
lahf
stc
dec
subb
das
push
repz
pusha
push
push
sub
mov
out
inc
mov
sbb
shrb
jge
out
jmp
cmpsb
popf
jge
je
fistps
push
inc
jne
mov
push
repnz
dec
pop
xor
ret
stos
pop
adc
popf
sbb
push
in
inc
xor
sbb
push
aaa
fildl
orl
push
nop
shlb
pop
iret
mov
pop
jge
fistps
call
aam
cmpsb
sarb
loopne
das
hlt
pop
mov
fimuls
inc
pop
dec
push
xchg
mov
dec
loope
add
dec
xor
or
scas
cld
sbbl
sbb
adc
dec
mov
gs
imul
ret
push
aas
xor
sbb
push
mov
int
sbb
push
addr16
and
cmp
cwtl
push
shlb
mov
sbb
cmc
ds
jae
loop
mov
adc
xchg
sub
sub
aaa
push
jmp
lock
mov
and
push
movsb
add
sar
pop
sbb
adc
aas
iret
pop
test
pop
gs
cwtl
out
pusha
dec
fadds
adc
aam
imul
into
fcomps
flds
cwtl
fisubs
test
pusha
pop
xchg
pushf
cwtl
fsubrs
cmp
in
js
dec
dec
mov
fwait
outsb
mov
mov
xchg
xlat
mov
sub
stos
xchg
adc
stos
imul
mov
add
cltd
pop
imulb
mov
xor
mov
and
jae
aad
sub
decb
ja
shld
sub
xor
or
scas
scas
jle
cmpsb
xchg
xlat
jae
pop
xor
insl
adc
in
shl
loop
mov
mov
jne
mov
mov
sub
cmp
test
cmpb
inc
repnz
hlt
pop
sar
std
ja
mov
clc
outsb
inc
cltd
cmc
mov
fs
cltd
popf
test
and
mov
push
mov
inc
call
out
pop
push
mov
mov
arpl
or
xor
mov
inc
in
sbb
pop
bound
and
pop
aam
mov
imul
std
mov
add
xchg
shll
mov
hlt
mov
icebp
in
dec
in
cmp
and
repz
out
push
loope
cld
ljmp
setg
cmp
jbe
xor
dec
fisubrl
lods
shl
mov
xchg
cmp
mov
test
jbe
call
fildl
movsl
lods
dec
fcomps
mov
xchg
jns
push
and
pop
sub
mov
dec
mov
sbb
stos
add
push
test
sub
daa
inc
out
aas
loope
out
adc
pop
push
rcl
int3
and
testb
addr16
inc
sbb
js
xchg
mov
sbb
mov
scas
and
jbe
scas
sub
test
in
xor
mov
ljmp
add
sbb
data16
dec
xor
leave
arpl
sbb
pushf
and
aam
frstpm(287
lcall
pop
fists
mov
mov
dec
popf
and
sbb
push
das
dec
psubw
dec
xchg
test
push
xchg
clc
add
pop
fiadds
jnp
nop
push
sub
xchg
je
loope
mov
mov
rorb
adc
xchg
cli
pop
mov
cmp
test
clc
in
les
ds
loopne
mov
mov
ffreep
std
repnz
fsubs
push
mov
push
sbb
jp
adc
cmp
cmp
addl
mov
pop
ja
jnp
jae
xor
jg
outsb
jns
out
das
add
xor
ficoms
incl
ja
push
inc
lret
xor
or
jle
mov
mov
inc
jbe
pop
and
popa
xchg
in
cmp
shll
enter
inc
jle
push
add
sbb
mov
adc
inc
stc
cmp
into
sbb
stos
inc
lods
mov
hlt
dec
aaa
and
fsubs
lds
cli
mov
lods
and
sub
mov
bound
mov
in
imul
lcall
mov
push
cmp
out
in
es
push
dec
andl
mov
xchg
inc
aas
xchg
cmp
cli
fsub
adc
inc
ret
aad
arpl
mov
les
loopne
xlat
mov
and
aad
data16
dec
sub
lret
mov
add
jecxz
jns
outsl
sbb
inc
dec
faddl
cmp
mov
push
xor
mov
xchg
push
adc
outsb
imul
cmp
inc
pop
sahf
clc
dec
push
mov
mov
out
es
or
clc
adc
fcompl
movsl
xchg
or
mov
inc
or
outsb
push
test
mov
in
cmp
cld
cld
rcr
push
jb
je
dec
or
push
inc
add
fs
jb
stos
insl
fstpt
ss
outsl
subb
xlat
leave
loop
lret
adc
jnp
cmp
repnz
into
push
inc
and
cmp
outsb
int
mov
aaa
add
clc
inc
pusha
mov
leave
cli
adcb
loope
mov
jecxz
loope
icebp
stos
add
pop
popa
pop
inc
sub
js
loop
xor
insb
cmp
cmp
and
iret
int
xchg
xchg
dec
outsb
inc
inc
test
xor
iret
xlat
pop
je
sub
pop
add
mov
or
ds
sub
pop
fdivrl
clc
test
push
bound
sbb
scas
in
add
sbb
adc
jecxz
dec
fs
scas
xchg
outsl
addb
cmp
push
or
dec
out
les
inc
sahf
pop
xchg
fists
pushf
ljmp
addb
dec
insl
mulps
out
fimuls
out
movsb
xlat
jp
jge
jne
inc
cmc
aad
ficoms
mov
bound
clc
popa
je
popf
sbb
mov
xchg
mov
out
xchg
push
ja
mov
test
jne
rcrb
ss
jbe
call
repz
pop
xchg
out
inc
mov
lcall
inc
or
dec
xor
cmp
jb
xor
les
imul
cmp
enter
test
scas
scas
in
xchg
push
hlt
cmp
pushfw
mov
sub
leave
iret
scas
in
nopl
xchg
mov
pop
xor
pop
repz
xchg
imul
mov
and
sbb
mov
inc
addr16
insl
xor
sarb
insl
fst
add
add
xor
sti
aad
adc
sub
dec
adc
push
jne
lods
or
cs
int
pop
dec
fwait
mov
mov
ret
cmp
push
jo
popa
aas
jnp
stos
add
aaa
add
mov
repnz
out
dec
jecxz
in
cmp
lds
fcmovbe
aaa
sbb
dec
jae
xlat
clc
dec
inc
stos
mov
das
arpl
xor
je
lret
decl
bound
in
inc
je
stos
cli
mov
xchg
cmpsb
stos
mov
dec
shlb
out
dec
mov
and
arpl
jp
pop
mov
pop
xor
test
scas
sub
dec
xchg
pop
lcall
cmp
fimuls
insl
adc
push
test
adc
jg
ljmp
sub
lds
cmp
incl
sub
sub
mov
xor
cmp
stos
add
sbb
inc
and
sbb
dec
roll
rolb
adc
mov
mov
cmp
push
aam
xor
mov
dec
add
jns
scas
mov
mov
sub
movsl
nop
push
daa
push
push
dec
jne
ljmp
adc
fiadds
push
or
dec
mov
xchg
mov
and
fsubrl
sbb
ficoms
or
pop
dec
jmp
sub
cmc
repnz
fldt
add
out
jae
inc
add
xor
mov
aas
adcl
xchg
xchg
sbb
cmc
mov
add
mov
sbb
jbe
rcrl
cmpsb
pop
sub
andl
inc
xor
repnz
xchg
sahf
push
ljmp
outsl
dec
and
clc
xor
sbb
push
dec
pop
mov
and
cwtl
inc
sub
clc
xchg
sti
outsl
xor
jmp
xchg
push
and
repz
fmull
push
cli
aas
jnp
lcall
xchg
fsubr
lock
or
and
ljmp
jecxz
or
pop
add
adc
dec
loop
mov
sbb
mov
pop
mov
cmp
lret
xlat
jp
or
rorb
inc
jbe
cld
xor
jne
leave
lock
mov
sub
sbb
nop
xchg
dec
imul
pop
cmpsl
xor
ja
out
mov
in
int3
mov
dec
dec
out
das
in
dec
mov
js
xor
es
mov
es
jl
fbstp
scas
out
add
pop
aad
mov
mov
stos
fisttpll
push
xchg
ss
jecxz
lcall
loop
inc
dec
xchg
mov
mov
mov
nop
jns
in
inc
dec
rclb
lock
pop
repz
xor
pusha
test
hlt
dec
in
ds
xor
sub
dec
sahf
cmp
adc
std
dec
lret
push
sbb
push
xor
insl
push
adc
iret
mov
inc
test
and
mov
nop
xchg
mov
out
pop
mov
popf
pop
test
add
fs
gs
inc
mov
inc
in
and
jno
addr16
daa
clc
cli
push
inc
cmc
inc
out
xchg
add
test
lea
mov
fdivrs
jne
or
loop
rcl
jbe
mov
push
sub
aas
ljmp
mov
mov
or
pop
je
scas
mov
sbb
fbstp
pop
push
test
cld
push
xchg
fdivl
mov
lahf
addr16
in
test
das
push
push
xchg
and
test
jg
fisubrs
dec
and
cmp
sub
fdivr
inc
pusha
cmp
int
fs
cmp
ret
dec
fmull
jge
pop
ljmp
dec
jp
ret
adc
daa
js
notb
mov
call
aaa
adc
or
pushf
xchg
xor
push
fmul
daa
pop
out
fwait
in
sub
mov
shrl
cwtl
stos
add
les
arpl
lea
ss
rcll
or
into
fidivrs
aas
popa
or
mov
addr16
jl
sbb
adc
lock
pop
jb
xchg
xor
xchg
lods
rolb
es
iret
sbb
cmp
int3
mov
xor
or
ret
adc
in
mov
mov
push
cmp
in
cli
or
adc
and
aad
imul
adc
dec
push
push
adc
test
fsubs
push
adc
shlb
daa
addr16
xchg
jnp
inc
data16
jbe
cmpsb
mov
mov
addr16
mov
cmpsb
push
cmp
cmpsl
dec
insl
jmp
add
cmp
lret
lcall
mov
sbbl
cmc
pop
cmp
sti
xchg
mov
jno
cmp
mov
jl
rcll
sub
sti
ret
jecxz
mov
je
in
and
mov
popf
jge
mov
ss
or
sahf
pop
mov
jbe
mov
push
xchg
subl
shl
mov
xor
and
lock
push
popa
jno
inc
mov
sub
dec
adc
jmp
cmp
hlt
pop
push
lret
sti
aas
jecxz
mov
xor
popl
cmp
fnstsw
adc
adc
xor
fldcw
pop
lods
adc
inc
pop
jg
mov
jb
jecxz
test
fs
sub
sti
mov
xlat
cli
lea
xor
add
xor
enter
mov
push
mov
std
fdivp
push
frstor
iret
and
mov
jnp
lods
dec
fs
mov
insb
mov
add
das
cmp
jae
mov
inc
out
pop
ret
call
mov
mov
jecxz
rcr
xsave
cmp
andb
scas
lcall
and
jp
mov
scas
mov
popl
jg
fisttpl
fcomp
fwait
addr16
sub
dec
pop
bound
push
shll
fdivp
pop
test
inc
mov
jo
jecxz
les
adc
inc
and
stos
ss
iret
call
jns
push
ss
mov
adc
push
push
push
fnstcw
popa
pop
stos
dec
pop
jp
sbb
dec
scas
sub
outsb
xor
sbb
jns
aam
mov
adc
add
mov
loope
cmc
ds
repz
pop
xchg
sub
ja
aas
loop
sti
dec
xlat
adc
inc
divb
sub
jns
imul
nop
arpl
mov
mov
arpl
aaa
push
dec
cmc
push
movl
mov
les
scas
imul
sub
aad
jmp
subl
mov
test
pop
mov
lret
pop
fsts
ljmp
es
ds
sbbb
cmp
jp
sub
outsb
mov
out
fnsave
aaa
mov
in
in
add
imul
cmp
jle
adc
sbb
sbbb
das
leave
pop
adc
cli
mov
fwait
dec
inc
iret
mov
gs
inc
xor
test
jnp
shll
sbb
inc
aam
stos
pop
mov
pop
cmp
fidivs
xchg
shl
pop
loop
popl
xchg
rcrb
lret
aaa
add
test
fmulp
pop
add
imull
jo
mov
je
inc
imul
out
cmp
mov
pop
ret
xorl
popf
shlb
xchg
or
jns
pop
inc
push
fimull
lds
ret
jae
inc
lods
jmp
jb
pop
and
sti
int3
cmpsb
fsubrl
push
fst
xor
ret
insl
jo
or
mov
or
fmul
test
je
ja
add
hlt
out
mov
add
jns
and
cmp
adc
sub
jae
lods
sub
xor
loop
cwtl
xorb
xchg
dec
adc
cltd
loopne
lret
sbb
push
or
ja
add
rcl
aas
fstpt
ja
push
sahf
notb
rcrb
xor
cmp
push
xchg
mov
arpl
or
dec
lods
push
data16
mov
or
xchg
ror
mov
testl
fmull
adcb
adc
xchg
aas
sar
inc
rorl
xlat
sahf
mov
test
or
push
mov
mov
jg
lret
adc
sub
sbb
xchg
inc
repnz
push
out
mov
lock
mov
fisubrs
int
push
mov
pop
pop
das
idivl
filds
inc
ds
add
dec
and
pop
mov
and
call
es
add
adc
inc
dec
inc
mov
or
mov
pop
or
pop
test
rcl
or
mov
sbb
in
cmpb
pop
push
lods
xchg
fwait
cmpsl
stc
cld
jp
cmp
dec
dec
sbb
push
cmp
sub
mov
loop
jp
add
cmp
push
add
adc
push
psubb
mov
pop
pusha
dec
sbb
movsl
stos
pop
aaa
sbb
cmp
fwait
shl
inc
imul
loopne
mov
inc
mov
repnz
mov
dec
pop
pop
ret
or
jecxz
insl
dec
je
lods
pusha
add
lds
loope
pop
nop
sbb
pop
ret
push
in
jle
enter
jb
jg
sub
jo
xorb
mov
movsb
xchg
jp
jno
cmp
fs
mov
sti
pop
add
adc
es
outsb
pop
lds
ror
push
sbb
cli
in
mov
out
or
inc
sahf
data16
popa
or
sub
push
je
in
pop
jbe
out
test
mov
cmpsl
push
dec
hlt
lcall
call
in
hlt
in
inc
stos
dec
add
sub
push
or
pop
xchg
out
pop
pop
mulb
int3
aas
mov
sbb
outsl
mov
ret
lret
rorl
lret
push
or
flds
inc
pop
leave
adc
push
xchg
jbe
pushf
data16
sbb
imul
xor
mov
push
mov
push
pop
out
iret
pop
jnp
in
sub
aas
loopne
outsb
loopne
mov
mov
sub
or
lods
in
cli
cmc
xchg
ficoms
dec
jae
pop
out
testb
popa
sub
cmpsb
xor
pushf
and
push
mov
and
int
push
hlt
pop
daa
clc
js
repnz
mov
push
xchg
movsl
daa
jbe
aad
mov
mov
xchg
fldt
shrl
push
lret
add
jmp
test
xchg
lock
inc
ljmp
fs
dec
cmp
in
into
roll
ret
jge
mov
sbb
mov
fstps
fldt
in
xchg
add
lock
loopne
inc
adc
mov
xchg
iret
mov
popa
mov
xor
sbb
sbb
pop
lods
insb
lods
movsb
jno
jecxz
add
xchg
popa
cmc
mov
adc
lea
and
sbb
aad
leave
loope
shlb
xor
cmp
adc
cld
out
mov
arpl
aam
lea
xor
es
enter
test
cmp
cmp
in
sub
adc
add
mov
fsts
ljmp
push
or
push
pop
mov
and
insl
inc
aas
sub
add
add
rorl
pop
call
stos
jmp
xchg
push
or
loope
xchg
ret
sub
add
les
lock
shrl
repz
addr16
adc
inc
add
fs
mov
pop
or
pop
xlat
imull
lret
mov
decl
aad
popf
mov
shll
mov
das
es
ja
add
loop
iret
mov
cli
sbb
imulb
mov
mov
sub
pop
push
mov
dec
faddl
mov
imul
hlt
cmc
jns
or
pop
sbb
pushf
xor
addb
dec
mov
int3
nop
pop
cld
xchg
dec
out
loop
aam
sub
inc
mov
pop
out
je
sahf
add
pop
push
sahf
lods
pop
pop
fsts
cmp
cmp
iret
push
sub
test
out
gs
mov
out
xchg
ja
scas
mov
outsl
cmp
push
or
lahf
mov
xor
add
or
push
popa
push
mov
pop
jge
test
pop
sub
push
xchg
mulb
icebp
inc
lahf
sub
cmp
repnz
sbb
and
movsb
gs
repz
out
mov
clc
dec
xchg
or
inc
push
pop
xchg
mov
enter
push
lock
add
outsl
std
jns
lcall
stos
mov
imul
insb
mov
mov
data16
stos
mov
mov
xchg
lcall
in
pop
xchg
pop
clc
lret
mov
push
cmp
popf
inc
pop
xlat
dec
ret
test
js,pt
xlat
enter
movsl
xor
icebp
addr16
dec
mov
std
sbb
xchg
add
sub
loope
cmp
sti
js
add
push
xor
pop
pop
in
sbb
insb
imul
cmp
lret
cmp
inc
jl
pop
pop
int
push
js
mov
or
loope
call
or
cmpl
outsb
in
jb
mov
out
loope
call
mov
pop
js
adc
out
shlb
lahf
inc
in
mov
pop
mov
fwait
je
xchg
mov
jo
xchg
cmpsl
imul
cmp
inc
jbe
daa
mov
push
int3
xchg
mov
inc
cmp
repnz
subb
mov
minps
insl
sbb
leave
rolb
fs
xchg
mov
jnp
ds
in
lds
cwtl
je
rol
fsubrl
cmp
in
jne
bound
in
aaa
sub
jle
fidivrl
jmp
dec
jmp
in
sub
lods
and
add
pushf
and
leave
sub
sub
sbb
rorl
ja
fbstp
or
push
xor
roll
push
loop
sub
movsl
jg
push
sbb
pop
sbb
jmp
fimuls
insl
dec
repnz
jno
dec
mov
adc
pop
sbb
cwtl
movsl
jmp
lcall
into
icebp
addr16
test
mov
jne
dec
fsubp
or
sar
stos
ret
jl
in
adc
xchg
je
mov
imul
pop
aad
add
mov
mov
push
cmpsl
adc
push
mov
and
jge
sbb
adc
cld
and
or
mov
cwtl
mov
xor
adc
out
mov
pop
fildll
and
das
jo
sbb
cmc
repz
xor
sbb
sub
mov
and
pushf
xorl
jl
dec
pop
xorl
push
outsb
daa
stos
push
mov
into
xlat
ds
xor
sar
lods
pushf
fisttpl
cmp
xchg
rorb
movsb
cmc
ss
mov
xchg
sbb
repnz
fisubl
ret
pop
push
ljmp
mov
cli
add
xor
movsl
xchg
push
lods
pusha
cltd
mov
mov
icebp
jle
and
mov
repnz
push
out
unpckhps
movntps
aad
jg
inc
xchg
arpl
sti
dec
inc
xorl
pop
adc
bound
clc
adc
xchg
shll
xchg
pop
out
dec
adc
mov
xchg
or
push
cmovae
mov
mov
std
push
sub
inc
adc
mov
out
cld
test
inc
push
push
or
sub
and
adc
ds
jmp
int
movsl
inc
adc
gs
mov
das
and
jp
mov
jb
lahf
call
int3
jg
adc
or
adc
test
mov
lea
cmp
outsb
xor
push
inc
or
adc
mov
repnz
cmp
out
loopne
mov
stos
gs
mov
out
push
insb
gs
in
dec
popl
stos
call
and
insb
jecxz
pop
ss
lea
test
fs
loopne
adc
mov
fisubs
lcall
cmpsl
std
outsl
cmpsl
inc
std
out
imul
ficoms
mov
adc
nop
adc
sbb
in
addr16
aas
mov
rclb
repz
test
and
adc
mov
or
xor
xchg
mov
lahf
add
mov
popa
or
stos
push
push
iret
sbb
imul
xor
jne
xor
sub
movl
xchg
xchg
push
dec
xchg
pushf
repz
pop
enter
cmp
lock
mov
bound
icebp
sub
scas
push
mov
mov
dec
mov
sub
pop
lahf
xorl
pop
jecxz
jo
les
lea
jne
jae
pop
outsl
stos
mov
and
mov
push
sahf
cmpsl
iret
jnp
div
aad
add
fdivrs
in
adc
or
test
and
int3
xchg
rcl
dec
fxch
es
clc
xlat
gs
xor
popf
jnp
sbb
out
fsubrp
fistl
pop
sbb
cmp
xchg
loope
ja
xchg
cmpsb
push
sbb
int
movsb
out
pusha
fstpl
fistps
sub
ret
or
adc
imul
xchg
mov
jae
jl
aaa
aas
fwait
lds
and
iret
mov
mov
imul
sbbl
cmp
mov
pushf
cmp
or
insl
roll
dec
aas
into
scas
sbb
mov
mov
mov
push
mov
pushf
std
add
or
mov
inc
movsl
test
and
xor
lods
loopne
subl
jbe
xchg
push
jo
cltd
test
fildll
or
mov
fsub
pop
ljmp
mov
cltd
adc
aas
inc
mov
dec
jno
xchg
xchg
xchg
lret
or
xchg
adc
adcb
dec
xchg
loopne
xchg
sub
mov
mov
xor
add
mov
jae
or
adc
in
iret
mov
fcompl
cld
xchg
mov
jl
cmpsl
push
and
and
jge
push
mov
fst
pusha
pop
pusha
dec
fs
and
nop
xlat
xchg
stc
lahf
and
xor
in
insb
lea
pop
insb
movsl
loope
scas
mov
xchg
pop
pushf
xor
aad
mov
insl
push
into
rcrb
mov
pop
divl
call
rorl
lcall
mov
ss
or
pushf
jns
fs
xchg
aaa
cmp
int
xlat
fmull
ljmp
sar
push
xor
add
lods
sub
mov
rorb
test
sub
dec
inc
dec
push
mov
push
idivb
dec
cltd
dec
mull
mov
pop
inc
jmp
int3
cmpl
cld
mov
sub
dec
dec
jnp
cmp
pop
xor
dec
push
mov
dec
mov
clc
mov
loop
movsb
roll
nop
mov
loope
es
add
add
jmp
and
mov
icebp
lret
jnp
lds
pushf
cmp
mov
add
icebp
sti
dec
cltd
dec
adc
xor
push
xor
inc
mov
pop
das
or
imul
jbe
dec
jb
imul
dec
xor
outsl
cltd
xor
push
mov
add
aas
repnz
sub
stos
cmp
push
imul
sub
ja
mov
in
loopne
dec
incl
lea
xor
jmp
and
jnp
ror
popf
pop
fdivrp
and
jl
sarl
sub
mov
sbb
sub
movsl
gs
push
in
popf
adc
xor
aad
cmc
push
add
sbb
es
add
mov
dec
and
cs
pop
jno
fdivrs
aaa
add
dec
fidivs
loopne
pop
inc
popf
push
add
sti
mov
jae
xchg
mov
mov
dec
sub
orb
js
lds
clc
pop
pop
jb
pop
cli
push
mov
xor
insb
jp
pop
dec
xlat
lret
outsb
idivb
mov
movl
jnp
clc
insl
insb
imul
adc
sbb
or
xchg
mov
add
addl
stc
data16
ret
daa
in
aaa
adc
test
mul
ja
mov
jns
pushf
pusha
xor
outsl
icebp
sahf
cli
das
mov
xchg
in
adc
mov
jg
push
mov
sbb
cwtl
add
dec
in
push
jo
add
fst
adc
cmp
fsubl
fldl
sbbl
pop
daa
movsb
lret
pushf
cs
sahf
push
xor
in
mov
movsb
loopne
mov
cmc
fidivs
push
stos
fdivrp
sbb
pop
inc
inc
sahf
adc
shlb
aad
adc
jp
or
sbb
rol
in
add
mov
mul
lahf
adc
fwait
pop
push
test
cld
enter
gs
das
pop
xchg
mov
stos
es
pop
outsl
jmp
lret
int3
sbb
xor
adc
out
stc
ljmp
ret
pop
or
xlat
in
push
addr16
xchg
mov
xor
out
adc
and
rcll
inc
popf
insb
pop
dec
idivl
imul
mov
mov
sbb
pop
loope
movsl
and
add
dec
and
mov
cwtl
xlat
pusha
repz
mov
ss
out
out
inc
mov
outsb
inc
sti
in
es
aam
pusha
aad
cmp
in
dec
mov
nop
rclb
push
pushf
or
push
cwtl
or
and
and
or
mov
adc
inc
icebp
aas
fnstenv
mov
xchg
dec
cmp
scas
cld
xchg
and
test
inc
aad
imulb
int
shll
inc
stc
mov
push
jo
sbb
ror
or
push
imul
mov
enter
adc
or
pop
in
xchg
cwtl
stc
aaa
bound
sbb
mov
das
jmp
push
and
pop
nop
xor
test
or
add
loope
dec
add
and
test
jmp
sub
imul
and
jge
iret
inc
jo
dec
xchg
mov
addr16
pop
out
sub
xor
in
dec
mov
jne
gs
pop
dec
movsl
inc
mov
cmp
push
jecxz
and
aam
mov
gs
push
cwtl
jmp
mov
sbb
sti
and
test
push
ret
or
dec
push
push
mov
jp
movsl
lcall
aad
fst
sub
mov
sub
adc
enter
jnp
xor
pop
adc
aam
sarl
stos
cmp
lds
xorl
popf
adc
jno
movsb
add
jl
dec
xor
iret
dec
ja
and
adc
out
xchg
inc
jb
jecxz
outsl
jne
cmp
stos
repz
hlt
and
idiv
xchg
xchg
ret
je
xor
and
call
arpl
outsl
add
out
addr16
push
mov
cmp
pop
cwtl
mov
test
shrl
jne
mov
loope
ja
js
pop
mov
and
cltd
push
scas
scas
sub
pop
mov
pop
js
loopne
mov
mov
dec
mov
inc
add
mov
sub
mov
repz
sub
sarl
stos
mov
cwtl
movsb
fcomps
pusha
popf
dec
pop
dec
ljmp
lret
dec
lds
lret
nop
fisttpll
fsts
adc
fistl
add
inc
fcoms
call
fdivs
mov
push
adc
inc
xchg
jno
pop
aaa
xchg
mov
lcall
push
negl
pop
les
movsb
aad
cmp
sti
xchg
fdivrl
jns
ror
mov
in
jo
xor
icebp
dec
sbb
jo
aaa
gs
mov
int
pextrw
das
in
subl
xor
fisubrs
outsl
adc
es
mov
and
aaa
outsb
lret
fs
pushf
sbb
gs
loope
clc
ja
mov
push
in
out
and
sub
sub
popa
out
pop
xchg
push
mov
mov
ret
ds
stos
mov
jb
lds
or
cltd
in
xor
orb
sbb
adc
imul
fildl
je
rclb
test
dec
lods
mov
orl
das
sbb
imul
sti
xchg
cmp
shrl
or
aas
rol
not
cwtl
fistpl
ret
mov
pop
in
dec
xor
cmp
add
lock
mov
pop
pop
adc
and
aam
scas
fmull
test
push
outsl
lods
aas
sbb
je
iret
fwait
mov
outsl
movsb
jmp
shlb
sub
scas
pop
cwtl
insl
in
push
inc
and
mov
mov
lcall
dec
mov
je
pop
fdivs
xchg
mov
sub
or
push
and
enter
pop
adc
leave
jnp
sub
or
inc
test
sub
jnp
inc
add
and
xchg
pop
repz
xchg
jp
cltd
add
rcrl
sbb
ja
scas
js
cmp
cli
ret
pop
push
mov
pushf
cmp
ds
sbb
mov
and
dec
mov
outsl
push
push
notl
sbb
dec
cmpsl
mov
jne
adc
leave
sbb
fwait
xor
jnp
inc
cwtl
std
inc
add
rcll
out
push
call
push
adc
push
mov
ds
jg
jmp
jno
lea
je
jb
inc
inc
jno
push
jle
xchg
inc
hlt
stos
and
outsb
lock
pop
inc
cld
cmp
in
vandnps
cmp
sbb
sti
cld
fs
xchg
mov
sbb
sub
test
mov
dec
pop
lods
call
insb
sahf
out
inc
nop
mov
ret
js
popa
mov
mov
das
leave
jne
add
es
cmp
sub
enter
add
jne
iret
test
pop
xchg
adc
xchg
inc
pop
cmp
add
and
enter
sub
jns
mov
dec
mov
cwtl
mov
cwtl
clc
ja
aas
xor
and
push
fwait
pop
and
mov
mov
fidivl
les
mov
jb
jmp
push
mov
outsl
jge
cmpsl
aam
arpl
dec
or
dec
sbb
sub
pop
test
int3
dec
sbb
scas
into
push
add
outsb
cmp
aad
movb
push
stc
int
mov
fldt
pop
pop
add
push
pop
or
sbb
push
and
add
push
inc
clc
xchg
pusha
and
es
roll
push
stc
jmp
test
ficompl
xor
sub
mov
test
scas
loope
jp
xchg
mov
pusha
enter
dec
xchg
push
pushf
mov
jp
clc
cmpsb
rorl
ja
mov
jo
and
cld
ss
loop
cmp
add
sahf
movsl
pusha
addr16
cmp
mov
sahf
dec
scas
or
arpl
fimuls
in
or
ja
nop
loop
sti
push
daa
push
mov
sbb
rolb
call
pop
addr16
push
xor
es
notb
lods
and
dec
mov
add
mov
adc
or
cmpsl
cmp
cli
shrl
push
and
insl
sbb
mov
pop
scas
and
cmp
mov
add
push
insl
movsb
dec
cmp
push
push
jae
insb
lods
in
out
int3
or
and
loopne
lock
fistpll
test
int3
cmpsl
cli
mov
test
rorl
cmp
push
push
sbb
push
call
cmp
pop
insb
sbb
or
sbb
sahf
mov
loop
inc
pop
cwtl
xor
pop
hlt
and
popf
aas
neg
pop
dec
cmp
test
or
cmp
mov
sub
aam
in
xchg
bswap
adc
and
mov
fs
push
mov
fcoms
mov
mov
dec
out
out
cmp
in
fsubrp
call
mov
rcrb
sub
dec
mov
and
in
fsubrs
xchg
cmc
dec
mov
xchg
in
xlat
lcall
fwait
mov
sti
jg
jp
sbb
into
out
or
ds
out
jns
and
in
outsl
xchg
lods
push
lret
xchg
lcall
dec
nop
cmpl
lahf
jb
cmp
jne
fs
mov
inc
out
hlt
jbe
jo
jge
lods
or
aam
aam
testb
push
in
jbe
sbb
cmp
mov
push
cmp
sbbb
push
shrl
cmp
xor
mov
cld
js
sqrtps
lcall
mov
push
test
cltd
fcmovb
dec
lods
pop
lods
adc
cmp
push
sub
mov
sub
push
sub
xchg
jecxz
push
fmuls
push
loope
js
sub
imul
leave
addb
xchg
push
mov
inc
mov
stos
popl
lahf
fidivrs
cmpsb
imul
in
pushf
rclb
enter
data16
cltd
and
lods
sahf
movlps
loopne
sbb
fs
sub
jmp
ss
fldt
mov
push
cmpsl
clc
push
lods
sub
xchg
stos
and
je
loopne
pop
or
jl
dec
and
or
idivb
push
arpl
add
icebp
fidivl
pop
or
jecxz
mov
and
imul
cmpl
call
fwait
mov
into
repnz
mov
into
imul
test
insb
jno
rorl
icebp
js
mov
mov
add
xchg
pop
ds
inc
jae
imul
mov
mov
leave
daa
and
jmp
mov
ja
lock
add
push
jmp
idivl
loop
pop
leave
ljmp
arpl
xchg
loope
clc
dec
sahf
lock
leave
adc
in
add
xor
jno
and
xor
xchg
leave
fidivl
stos
inc
pop
insl
sbb
out
lret
mov
repz
pop
adc
scas
adc
mov
mov
dec
inc
movsl
add
dec
mov
xor
cli
cmpsb
cli
cli
cmpsb
cmp
jge
dec
xchg
out
pop
sahf
arpl
icebp
stos
hlt
sub
scas
fisubl
insl
jp
sbb
imul
mov
dec
xchg
loope
mov
adc
out
popf
inc
into
mov
fadds
jge
mov
push
out
adc
rclb
out
xchg
mov
test
std
dec
push
call
imul
xorb
inc
es
fbld
mov
pop
loopne
or
mov
mov
jmp
sub
dec
sub
adc
outsl
mov
push
add
fimull
cld
fsubrl
and
call
je
out
aad
inc
lahf
xchg
sbb
inc
movsb
sub
cmp
stos
fildll
fldt
js
out
pop
push
pop
ret
inc
mov
xchg
xchg
xor
or
xchg
aas
or
jo
mov
mov
daa
adc
pop
mov
lods
cmp
lds
xchg
xor
popa
dec
loop
leave
or
adc
cmp
pop
ret
in
bound
xor
dec
add
xchg
dec
dec
rcll
loope
push
jl
cmc
xor
int3
push
jnp
lods
fwait
pop
fstpl
in
dec
mov
fwait
xchg
dec
call
push
call
add
scas
xchg
repnz
adc
mov
fimull
ds
fwait
xlat
cmpsb
sbb
insb
movsb
fildl
xor
movsb
pop
cmp
test
sbb
leave
rorb
cmp
cld
sub
xor
jg
gs
insb
inc
or
mov
mov
mov
add
lret
das
repz
or
jle
int3
adc
in
xchg
rorb
jp
test
mov
lret
lahf
pop
sar
icebp
dec
std
and
fcoms
inc
out
mov
xchg
repz
mov
sbb
xchg
or
jg
js
divb
push
ds
push
test
push
xor
xor
and
leave
cltd
leave
fs
mov
stc
dec
xor
sti
imul
xchg
ret
inc
mov
lea
aam
jle
add
xchg
xor
push
stos
pop
sbb
iret
pushf
pop
leave
and
jnp
dec
addr16
iret
jns
and
add
jnp
scas
testl
movb
push
rclb
adc
in
jg
fcoml
dec
mov
xchg
sub
xchg
adc
adc
test
lret
fxch
or
fisubrs
xor
mov
xchg
popa
mov
mov
pop
in
int
mov
pop
ljmp
and
xchg
pop
mov
jle
ss
fwait
jbe
and
decb
int
fstpt
add
mov
stc
jo
jp
daa
xchg
adc
mov
lods
xchg
mov
fisttpl
fstps
push
sbb
mov
negb
push
repnz
inc
in
out
out
and
jle
xchg
push
leave
std
sbb
lock
inc
arpl
sub
lahf
xchg
mov
movsb
stc
and
xchg
or
mov
cs
xor
xor
dec
jne
andl
adc
mov
mov
cmpsl
mov
lcall
xchg
scas
leave
int3
in
cmp
sub
or
ret
push
xor
mov
shrl
das
aaa
repz
jge
lret
dec
inc
jecxz
pop
ret
push
jb
and
sub
or
sbb
ja
pop
mov
arpl
push
scas
pusha
loopne
push
push
add
inc
cli
jbe
jno
push
outsl
sbb
outsb
sbb
push
and
pop
or
lea
jp
shl
push
out
inc
scas
fs
sub
fcmovnb
dec
fildll
push
jnp
mov
out
cmp
cs
orb
push
pop
fistpll
jns
dec
cmpl
sbb
sub
and
mov
stos
adc
mov
mov
cmp
popa
lret
jmp
mulb
lret
xchg
and
pop
xchg
xor
aad
insl
outsb
imul
push
pop
jb
jae
dec
mov
hlt
in
add
icebp
test
stc
imul
mov
popa
sbb
movsl
dec
jno
add
jp
xlat
int3
ret
add
jecxz
push
xor
jg
shrl
add
xchg
scas
fnsave
jl
jne
pop
pop
icebp
stos
pop
jae
jnp
lcall
je
mov
sbb
ret
adc
cltd
into
imul
ficomps
inc
scas
adc
and
xchg
repnz
inc
inc
mov
and
mov
movsl
or
in
ss
jne
lock
mov
mov
add
mov
sahf
lcall
mov
dec
mov
jo
or
ljmp
cmpsl
dec
les
insb
xchg
push
stos
mov
repnz
add
sbb
mov
pop
xlat
add
jnp
ljmp
xor
dec
inc
daa
and
push
xchg
rcr
test
push
lahf
rcll
jg
inc
xorb
dec
iret
int
and
in
shll
xchg
mov
in
mov
xchg
xchg
rol
ljmp
pop
stos
das
das
or
hlt
pop
adc
sbb
pop
mov
shl
test
fs
mov
pop
sbb
fwait
repz
xor
loope
dec
pop
mov
mov
jp
int3
mov
dec
in
mov
xor
mov
movsb
loop
inc
xchg
pop
mov
insl
sub
cmp
adc
sbb
fidivrl
sub
arpl
mov
and
adc
jb
sub
jl
sti
fimull
fstpl
imul
push
cmp
divl
lret
or
lret
ljmp
aam
pop
jo
and
mov
cwtl
xchg
cmp
and
mov
xlat
clc
pop
lret
push
imul
dec
into
popf
inc
or
lock
or
test
jno
cmp
leave
xor
mov
repz
shrb
imulb
es
xchg
fwait
cmp
cmp
outsl
or
dec
repz
xor
cmpsl
add
mov
cmpsl
call
pop
imul
loope
sbb
sub
scas
xor
iret
xor
mov
jl
roll
ret
pop
aaa
pushf
sahf
cmp
inc
fisubrl
fstps
sub
in
jae
and
or
lods
adcb
je
insb
inc
stc
sub
jb
cmpsb
mov
jg
cli
mov
int
addb
cmpsl
inc
rcrl
test
sub
mov
out
xchg
pop
mov
dec
jno
cs
ja
push
pop
add
sub
jmp
fstps
fisttps
fdiv
add
add
xchg
pop
jmp
jecxz
aad
sbb
andb
jp
adc
sbbb
mov
sysret
xchg
pop
dec
fstpt
hlt
xchg
mov
mov
inc
pop
adc
sub
mov
jns
lds
sub
xor
lds
lret
mov
roll
in
in
test
lock
lods
lods
and
fcmovb
arpl
xchg
fadd
pop
adc
xchg
sbbl
in
sub
xor
movl
mov
push
sbb
cs
jle
int
inc
decl
and
cltd
outsb
sbb
hlt
mov
sarb
leave
or
sub
es
sub
mov
in
dec
pop
mov
pop
cltd
jle
sub
mov
idiv
fsts
cmpsl
cmp
push
js
fwait
pop
enter
loope
icebp
std
cmpsl
divb
mov
jl
repnz
repz
inc
jnp
xlat
mov
lock
mov
mov
add
jge
mov
stos
arpl
popa
push
cmc
cmpsb
push
jmp
add
stc
push
fnstcw
sahf
cmpsl
cld
cwtl
loope
push
inc
cs
std
mov
add
jae
roll
mov
mov
or
push
subl
and
adcl
dec
add
or
adc
mov
sbb
cmp
xchg
out
inc
sub
jmp
aam
sar
inc
rcr
daa
push
xor
inc
lds
sbb
fmul
jge
push
mov
jp
push
cltd
jp
and
xor
dec
ret
sub
aas
mov
ss
jmp
das
packsswb
sarb
movsl
add
test
or
popf
shrl
push
jb
inc
sub
fimull
mov
push
adc
add
imul
cmpsl
lret
inc
mov
cmp
mov
hlt
fidivl
addr16
cmpsb
adc
mov
mov
inc
push
xchg
push
cmp
push
scas
xchg
call
rorb
xor
lods
pop
or
dec
dec
or
jne
int
out
mov
inc
cmp
sbb
jmp
mov
mov
in
sub
aaa
jno
adcl
mov
sti
popa
cld
push
mov
test
mov
sub
sbb
aad
mov
push
mov
xor
jl
add
xchg
xor
mov
lss
fmul
mov
pusha
mov
pop
dec
sub
and
aam
mov
dec
lahf
push
mov
mov
insl
cmp
push
mov
jns
xchg
jo
mov
loope
testb
jmp
jge
lods
dec
jns
push
pop
mov
and
sti
push
int
fnstenv
lcall
out
out
mov
stos
hlt
stos
aam
mov
mov
push
int3
lcall
scas
inc
pop
dec
out
inc
push
stos
cmc
sbb
sub
ficompl
adcb
mov
jnp
and
pop
into
pusha
outsb
or
mov
push
cmpsb
xor
cmpsl
pop
aam
xchg
and
jnp
cmp
pop
jl
stos
mov
jno
xchg
ss
test
shr
mov
cmp
in
in
loop
out
adc
cmpsl
pop
in
cmpsl
out
mov
cmpl
jb
xchg
mov
out
dec
xor
das
push
das
or
mov
dec
out
push
call
and
in
pop
popf
loopne
inc
jnp
fists
jmp
push
int
mov
push
imull
cmp
xchg
xchg
add
arpl
cmp
icebp
popa
insb
push
es
aas
jmp
roll
subb
sti
mov
add
loope
push
sbb
dec
xchg
sbb
ljmp
bound
daa
pop
push
shl
adc
adc
push
shl
stc
xchg
loopne
push
cmp
fdivs
mov
mov
mov
stos
mov
sbb
sub
dec
notl
add
xchg
mov
dec
or
sahf
mov
xor
xorl
call
mov
fnsave
mov
adc
lods
es
popl
orl
xchg
adc
push
mov
popa
arpl
clc
pop
pop
jns
leave
js
sbb
xchg
mov
stos
jne
addr16
imul
sub
push
xchg
test
inc
xor
std
sub
fsubrs
xor
or
nop
insb
sbb
scas
fs
ret
jno
cmp
lods
stc
mov
cwtl
outsb
adc
add
mov
imul
pop
dec
daa
clc
xchg
adc
lds
pop
mov
inc
sbb
stc
enter
popf
mov
pop
and
nop
addr16
call
dec
subl
lods
pop
pushl
xor
addr16
dec
cmp
mov
je
pop
dec
jmp
roll
inc
add
mov
pop
les
or
mov
mov
push
pop
mov
cmp
fsubr
decb
enter
in
inc
cmp
jmp
mov
repz
shlb
stos
hlt
sub
lcall
adc
cmp
sub
mov
scas
jbe
jmp
stos
inc
shl
movsb
test
jno
push
ja
cwtl
jp
dec
or
xchg
jnp
push
mov
mov
xor
scas
pop
dec
je
in
fbstp
mov
std
fildl
js
repz
adc
push
xchg
and
pop
mov
push
or
pop
cwtl
loop
sub
mov
pusha
icebp
xor
sbb
inc
ret
popl
into
mov
enter
daa
xor
test
aam
adc
fstpt
fisubl
mov
repz
movl
ja
arpl
mov
ja
cmp
dec
in
mov
inc
and
in
aas
sub
sub
sub
mov
pop
mov
aas
aam
cli
ret
daa
xor
inc
mov
push
xchg
jmp
mov
hlt
xlat
punpcklbw
bound
popa
and
fnsave
in
sti
cmc
mov
jg
push
int3
decb
cld
mull
push
mov
jne
xor
pop
ficompl
adcl
jmp
jmp
pop
adc
mov
xchg
std
jmp
push
xor
cmpsl
jle
je
push
pusha
cmp
call
pop
sbb
jle
jl
test
jbe
jmp
fnstsw
rolb
lret
fisubl
sbb
sbb
movsb
je
push
mov
mov
mov
jmp
idivl
lods
popa
jle
jge
pop
adc
fadd
sahf
and
jae
insb
sub
add
jl
lcall
in
or
jl
xor
stos
rolb
fs
leave
ret
xor
std
stos
filds
mov
out
aaa
insl
mov
in
dec
rcll
clc
mov
or
or
movsb
cltd
dec
bound
dec
cwtl
insb
jg
into
add
cmp
es
addb
pop
lods
pop
push
scas
and
call
xbegin
sub
test
lods
sbb
push
add
mov
fnop
sbb
in
jns
jne
enter
int
xchg
inc
dec
into
ljmp
jno
int3
rclb
mov
inc
mov
divb
or
out
pop
outsb
inc
jbe
test
adc
data16
int3
or
cmp
jae
inc
pop
mov
notb
addb
movsl
mov
sbbl
clc
sub
mov
jnp
xor
pop
shrl
or
div
inc
inc
xchg
sub
jg
fsubrs
pop
lods
addr16
mov
ljmp
fistps
cmp
push
jb
lds
or
lret
xchg
jne
jns
dec
dec
jge
lock
xor
add
add
dec
imul
stos
inc
out
stc
or
xor
cmpl
cmp
xor
scas
gs
test
mov
inc
rorb
hlt
mov
cmp
push
shl
adc
in
js
popl
das
jae
in
lret
mov
xchg
adc
inc
mov
xorb
loop
mov
sti
and
cmp
mov
mov
jp
xchg
fidivrs
mov
sub
add
std
pop
inc
or
js
dec
sbb
sbb
popa
sahf
scas
inc
ret
cmpsb
cli
or
and
jp
pop
dec
bound
dec
in
fsubrl
xor
fwait
enter
add
aad
push
sbb
mov
inc
xchg
mov
dec
loopne
roll
in
orl
test
mov
sub
dec
imul
stos
push
pusha
xlat
shr
fwait
add
js
mov
adc
stos
and
arpl
sub
ds
xor
int3
xchg
sbb
jb
cmc
xchg
or
xor
sti
inc
fcomps
and
fidivrs
sbb
cmp
imul
push
ret
in
mov
push
lods
inc
imul
pop
xor
push
fstps
inc
add
push
pop
sub
mov
sbb
sub
in
adc
movsw
mov
repz
adc
mov
mov
jae
sub
dec
xor
cmp
xor
push
sub
lahf
cmp
dec
and
xchg
fsubrl
sarb
pop
xchg
jns
and
xchg
sbb
cmp
inc
or
inc
into
or
clc
mov
out
add
inc
push
adc
push
xchg
or
lcall
cltd
and
add
pop
loop
dec
imul
daa
sub
fidivrl
popf
dec
mov
add
xchg
movsb
cmp
or
mov
in
or
js
test
mov
mov
nop
lods
addb
xchg
mov
jo
cmp
mov
cltd
cmp
test
icebp
mov
adc
addb
call
jo
inc
fs
lds
iretw
jne
cmp
fldt
push
test
sahf
fistps
nop
jno
flds
cmp
ds
out
rcrl
pop
ja
repz
aam
cld
dec
xchg
pop
gs
cmp
je
jno
pop
lret
loope
in
iret
adc
add
fwait
shrb
sub
add
mov
push
sbb
add
cmp
xlat
push
jb
cltd
cltd
mov
inc
outsb
cmp
in
stos
roll
pop
pop
lcall
jp
dec
test
repz
mov
jb
out
icebp
inc
and
cltd
fdivl
in
mov
stc
dec
adc
rolb
mov
or
dec
fisttpll
mov
test
movsl
mov
inc
test
add
xchg
jb
nop
xchg
and
fnstcw
push
add
inc
push
ljmp
inc
pop
addr16
jl
imul
dec
push
and
mov
js
push
mov
cmp
jb
fs
xchg
adc
push
into
add
addr16
jle
sarl
mov
ja
jl
in
xor
dec
dec
hlt
cmp
xor
add
insb
inc
adc
cmp
nop
xor
sti
mov
enter
mov
adc
fnsave
mov
xchg
pusha
xchg
mov
inc
mov
addl
call
and
sub
out
std
mov
xchg
cs
popa
add
or
mov
mov
outsl
jne
mov
xchg
xchg
sbb
sub
mov
or
or
xor
enter
jl
mov
pop
xlat
in
push
and
outsb
adc
inc
outsl
daa
xchg
jae
inc
ljmp
jno
and
xchg
pop
sub
ret
add
push
xchg
lods
iret
int
push
mov
mov
outsl
cli
ja
jns
lods
lahf
pop
in
sub
xchg
test
sti
mov
aas
mov
das
out
aad
mov
sbb
push
dec
mov
cmp
out
notb
sahf
std
inc
popa
jl
xchg
inc
pop
mov
std
ficompl
adc
jmp
in
mov
sbb
add
es
sbb
int
mov
dec
jno
push
push
jne
mov
movsb
sub
add
in
pop
mov
push
mov
arpl
fadd
inc
loope
js
aad
bound
push
jns
mov
in
mov
fsub
push
jo
mov
ja
outsl
sbbl
and
popa
sar
lods
lret
xchg
mov
cmpsb
mov
popf
xchg
cmc
push
pushf
loop
mov
sub
leave
stc
or
adc
stc
xor
jbe
xor
mov
xchg
cmp
add
gs
and
cmc
cmp
push
mov
das
push
sub
mov
push
xor
sub
leave
icebp
cltd
lret
mov
lds
ret
or
or
popa
mov
sbb
pop
mov
lahf
loopne
bound
push
add
jmp
lret
mov
add
clc
repnz
jb
lods
scas
aaa
push
jg
pop
leave
adc
mov
addr16
mov
and
das
xchg
mov
pop
pop
stos
cld
inc
xchg
jecxz
test
pop
hlt
inc
jle
lahf
imul
add
pop
fsts
in
ficoml
mov
ja
cmpsb
clc
ret
in
std
std
inc
test
loopne
aas
pop
and
pop
lcall
pusha
push
xorl
sbb
xchg
sbb
push
pop
test
fnstsw
fldl
dec
fistpl
jmp
lock
testb
push
mov
adc
xchg
push
cmpsb
scas
cmp
adcl
add
add
cmp
sarl
fs
cmp
xchg
ds
ret
addr16
sub
mov
mov
cmpsl
sarl
in
ret
andb
popf
mov
aas
test
inc
mov
vphadduwd
sti
imul
inc
xchg
cwtl
aaa
xlat
ret
and
inc
and
jl
sbb
cwtl
mov
addr16
jnp
adc
movsl
rorb
mov
jge
mov
clc
in
out
pop
cltd
and
xchg
pop
inc
pop
and
mov
imul
loop
add
inc
daa
mov
je
push
dec
repz
cli
xor
sbb
or
and
pop
push
add
xchg
add
lock
cli
and
shlb
mov
icebp
lret
jae
rclb
mov
out
loope
pop
decl
rorb
jle
xchg
mov
dec
and
nop
pop
inc
xchg
push
inc
inc
into
mov
cs
mov
cmp
sahf
and
jmp
subl
mov
loop
test
test
movsb
mov
faddl
mov
xchg
jge
and
adc
pushf
sti
cmp
popf
popa
shll
test
sub
ret
adc
call
clc
pop
loope
jbe
and
mov
mov
push
int3
cltd
movl
loopne
insb
mov
lods
jb
dec
and
into
xor
in
inc
jbe
mov
or
mull
and
mov
pop
xchg
push
test
or
dec
cmp
jns
roll
lcall
push
jbe
push
pusha
push
inc
addr16
fnsave
mov
sti
inc
fiaddl
sbb
mov
loopne
imul
xor
fcmove
pop
fsubl
adc
shrb
sub
inc
mov
adc
add
mov
cmp
das
jne
mov
and
ss
test
rcrb
adc
add
dec
ja
jl
jnp
out
clc
hlt
hlt
cmp
roll
add
sbb
leave
mov
pusha
idivl
push
mov
mov
xchg
lcall
call
scas
sbb
ret
outsb
sub
mov
sub
shll
fdivl
aas
xor
jecxz
inc
rcl
mov
fisubrl
test
out
ss
and
testb
mov
mov
xchg
mov
push
jo
incl
push
adcl
xor
xor
sbb
dec
call
test
mov
or
test
in
inc
adc
xchg
push
cmp
mov
add
hlt
mov
mov
dec
lds
repnz
int
mov
ffree
mov
out
pop
add
cmc
pusha
mov
mov
sbb
push
ret
mov
aas
cli
adc
aaa
xor
dec
xor
pop
jmp
or
jns
shll
hlt
pusha
or
stc
in
cld
ss
xor
outsb
xor
addr16
and
sbb
mov
test
cmp
jbe
sub
jg
xor
imul
popa
mov
outsb
cmp
sbb
mov
fisttpl
out
inc
xor
push
jnp
mov
popa
xor
rcl
mov
jnp
push
ds
cmc
xchg
push
or
or
sahf
pop
jbe
dec
lods
mov
mov
sub
shll
sbb
jg
frstpm(287
inc
xor
jmp
mov
lahf
out
lds
jne
in
xchg
sub
add
test
enter
push
xchg
mov
out
jg
pop
mov
mov
adc
out
xlat
lret
xchg
sbb
pop
jp
xor
push
dec
test
addr16
xor
movsb
cmp
sbb
jnp
xor
xor
inc
mov
lret
push
mov
sbb
lcall
pushf
fs
xchg
pop
in
xor
push
je
lea
ret
cmp
mov
ror
mov
subb
inc
jno
jb
gs
imul
cld
repz
dec
outsl
add
xchg
push
shrb
addb
in
ja
dec
ja
nop
xchg
pop
adc
cmc
stos
out
adc
leave
gs
into
and
push
mov
test
and
shr
stc
inc
jmp
sahf
mov
sbb
sub
cmp
jg
jle
sti
push
push
lock
int3
pushf
ss
fldenv
jo
xchg
and
inc
or
and
les
movl
out
jne
push
xchg
adc
push
and
out
aas
in
sarl
xor
add
xchg
test
dec
negb
sub
movsb
push
subl
roll
push
stc
add
aam
cltd
and
xchg
sti
cmovne
mov
scas
sub
mov
daa
add
jecxz
dec
aam
fcmovbe
popf
inc
and
lcall
fwait
mov
xor
js
mov
mov
push
xor
lea
stos
lods
je
sub
ljmp
mov
push
outsl
mov
mov
sar
std
or
dec
mov
lcall
cli
cltd
cmp
jle
nop
mov
mov
aad
mov
and
cmpsl
pushf
stc
jg
scas
or
pop
addr16
cmpsb
pop
nop
fildl
adc
jb
aas
adc
adc
xchg
sbb
xlat
cmp
sub
popf
push
call
xor
add
dec
adc
fldl
push
adc
xchg
pop
cld
movl
cwtl
jne
push
xchg
cmpsl
add
mov
movb
jl
inc
sbb
jecxz
pop
insb
xor
push
loop
xor
fnstsw
daa
xor
aas
add
mov
cmp
adc
rorb
ror
lcall
test
sub
inc
cmp
cmp
sbb
jp
adc
sub
ljmp
jl
bound
or
inc
jge
sahf
rcrl
inc
and
iret
push
in
and
dec
sub
xchg
mov
inc
fdivs
pop
inc
punpckldq
add
xchg
enter
mov
out
dec
call
jle
jae
popf
sti
clc
jns
fs
dec
xor
cltd
adc
stos
mov
jnp
mov
repnz
dec
inc
mov
xor
fwait
add
inc
fmuls
js
test
xor
mov
sahf
int
ja
leave
dec
inc
cmpsl
add
jge
in
sahf
aad
xchg
sahf
xlat
xor
push
fimull
jge
out
iret
icebp
ud2
jne
loope
inc
or
inc
into
mov
cmc
sti
in
jne
jo
mov
sub
mul
jne
mov
push
xor
pushf
fwait
aam
lcall
sub
dec
mov
js
xor
sbb
jb
jne
jp
fildll
xor
imul
movsb
ja
push
xchg
mov
dec
lds
cs
mov
clc
cmp
sarb
lods
adc
adc
sbb
mov
push
and
inc
xor
dec
inc
xchg
daa
mov
adc
shlb
sti
popf
jne
mov
js
pop
push
add
or
xchg
mov
aas
xor
dec
cltd
jb
imull
lods
pop
scas
add
mov
and
or
ret
enter
mov
dec
xlat
es
lahf
push
ret
sub
inc
adc
xor
mov
out
pushf
jo
sub
or
jp
rolb
fcmovu
cmp
push
mov
jle
inc
lods
in
leave
add
xchg
dec
xchg
ficoms
mov
pusha
mov
cmpsl
idiv
or
add
add
xlat
pop
add
lea
ret
push
mov
xchg
pop
push
sub
mov
repnz
popf
jecxz
xor
push
lahf
mov
int
in
ficoms
mov
jae
push
sbb
inc
xor
sbb
roll
and
mov
fisubrl
xor
mov
and
test
inc
imul
mov
insb
add
mov
out
leave
lods
xor
ljmp
adc
mov
and
popa
dec
mov
pop
mov
pop
std
mov
int3
push
les
mov
or
repz
mov
add
sar
and
ss
push
mov
jl
xor
mov
cmp
cmpsl
inc
mov
aaa
push
lahf
sbb
inc
out
dec
dec
and
sub
cmp
loop
jmp
mov
mov
lock
rorb
fcmovnu
jmp
dec
lock
or
int
pop
or
push
add
add
xchg
cmp
inc
xor
pop
mov
and
imul
mov
in
testb
add
scas
jae
lahf
lods
or
subl
ljmp
shrl
xor
ficompl
inc
test
enter
fidivrs
and
mov
je
fs
sbbl
or
jno
mov
cmp
sub
scas
mov
mov
loope
xchg
cli
dec
xchg
inc
lods
imul
leave
xchg
imulb
mov
ljmp
pop
fldenv
xor
and
movsb
inc
int3
ret
jnp
push
inc
in
lods
jnp
cmp
push
jmp
and
clc
pusha
popa
add
push
and
je
sub
add
sub
in
out
rcr
cmp
filds
lret
sub
shrl
mov
stc
dec
push
dec
lea
cli
subl
aad
dec
cmp
jge
mov
pop
iret
aam
jmp
and
addb
mull
push
dec
loope
enter
mov
jb
xor
shl
loop
or
es
xor
inc
cld
lods
inc
loopne
cmp
leave
cmp
insb
push
fisttps
sbb
jne
push
daa
fadds
xor
mov
scas
imul
sub
gs
int
mov
xor
xchg
push
dec
call
mov
data16
mov
sub
mov
mov
adc
clc
rorl
jo
pop
les
roll
stc
mov
push
mov
loope
stos
mov
fwait
push
aad
cld
aad
mov
sbb
test
or
aas
aaa
adc
dec
pop
popa
jo
add
cmpl
xor
mov
jl
adc
push
mov
and
repz
imulb
push
jmp
or
je
rcll
sbb
es
mov
mov
push
sbb
into
add
lahf
pop
cmp
addr16
mov
popa
hlt
add
cmp
popl
xlat
mov
add
and
enter
inc
std
retw
repnz
or
adc
aam
and
jnp
dec
adc
ss
add
cld
sub
jo
mov
aam
sbb
fwait
jno
mov
mov
jo
imul
inc
sahf
pop
lds
sub
sbb
stc
jae
pop
into
adc
sarb
adc
push
lock
xor
cmp
inc
inc
cmc
and
mov
or
cmp
lods
cwtl
pop
outsb
mov
mull
or
and
mov
rorb
fcoms
push
jmp
mov
lret
sbb
ret
jnp
iret
push
decb
into
mov
outsl
fstps
push
dec
jnp
mov
in
fmul
xor
sbb
push
jp
and
xorb
push
insb
fsubrs
in
dec
out
daa
dec
divl
mov
pop
mov
add
add
mov
mov
dec
xor
pop
xchg
lods
out
dec
in
or
movsl
dec
outsb
imulb
gs
sbb
subb
mov
into
add
inc
je
fimull
fwait
mov
ja
push
setae
fisubs
test
lods
test
inc
fwait
xchg
mov
cltd
call
push
inc
dec
sbb
sti
cmpsl
sbb
aas
dec
and
fs
mov
mov
cmp
rorl
sahf
mov
sbb
adc
pop
jmp
or
hlt
lods
jl
cmp
mov
push
dec
add
cmc
int3
pushf
sub
or
mov
stc
sub
pop
pop
adc
mov
dec
popf
pop
mov
dec
xorb
adc
imul
mov
xchg
push
dec
and
push
push
decb
and
in
mov
mov
insb
xchg
sbb
in
cltd
pop
je
in
incl
jecxz
xchg
xor
push
adc
sub
dec
jp
hlt
dec
pop
cmp
lds
mov
mov
push
fisttpll
pop
xor
fsubrl
adc
sbb
lea
imul
divl
push
inc
out
rorl
inc
sbbb
fstl
inc
pop
sub
je
jge
das
jns
dec
lret
mov
insb
push
xor
mov
jecxz
jae
inc
jmp
xchg
orl
pop
out
adc
scas
loope
aad
jns
ficoml
xchg
and
inc
adc
test
arpl
aad
and
fsubrl
mov
add
sub
ret
xchg
orb
mov
pop
add
cwtl
in
lret
movsb
mov
cmp
shl
jl
sbb
test
iret
inc
jo
fstps
xchg
pop
jae
iret
push
sub
into
imul
incl
sub
in
in
lret
push
cs
popf
fcoml
xchg
hlt
and
and
lcall
mov
adc
loope
adc
pushl
loop
movsb
xchg
mov
je
leave
push
dec
fwait
adc
add
xchg
xchg
push
mov
sub
mov
pop
xchg
cmp
mov
cmp
imul
icebp
mov
data16
shr
jnp
lods
movsb
aam
mov
cmp
stos
sbb
fcmovb
cmp
xchg
pop
pop
push
inc
jp
mov
mov
test
xlat
stos
jge
shll
or
scas
inc
or
push
mulb
mov
call
add
scas
mov
ljmp
jl
arpl
cmp
fwait
and
mov
int3
xchg
loopne
test
cltd
out
shlb
push
dec
dec
ffreep
iret
pop
mov
mov
gs
andb
out
mov
pushf
adc
sarl
mov
pop
jb
inc
cmp
mov
sbb
mov
dec
clc
mov
adc
mov
mov
sub
lcall
and
or
hlt
and
inc
xchg
xchg
push
and
dec
and
mov
xor
sarl
daa
and
es
lea
imulb
in
jb
and
popl
in
dec
in
cld
or
inc
shlb
xchg
arpl
icebp
inc
in
jl
scas
or
repz
in
and
mov
mov
rcrl
test
mov
sti
xchg
push
dec
xchg
push
and
dec
fisubl
sub
push
scas
loopne
sub
fldenv
sub
ss
adc
adcl
or
shr
arpl
mov
mov
mov
mov
cmp
jmp
popf
jecxz
dec
add
repnz
mov
test
adc
enter
xor
jp
aas
shlb
cs
lds
loopne
mov
dec
mov
xchg
mov
push
mov
or
stc
icebp
int3
mov
in
test
sub
jmp
jp
decb
push
enter
lds
iret
inc
ret
addr16
pusha
push
leave
mov
movsl
in
jae
fstl
mov
std
inc
je
adc
cli
adcl
cmc
sub
out
jg
fdivr
push
loope
insl
mov
xlat
enter
mov
and
idivb
fs
jno
ror
pop
inc
push
sbb
xor
xchg
scas
enter
test
push
mov
and
pushf
decb
and
jae
scas
je
pop
sub
adc
add
nop
pop
sahf
pop
xchg
mov
cmp
and
clc
movsl
xor
jmp
aas
cs
sub
jbe
sti
pop
push
cmp
inc
outsl
les
jle
clc
out
mov
cmp
sbb
sbbl
cmp
dec
ret
mov
psrlq
lods
sub
in
lods
jae
filds
push
push
lds
imul
add
aad
lea
fbld
adc
loope
js
aad
xor
bound
dec
fiaddl
adc
dec
mov
lret
adc
test
mov
xchg
add
loopne
inc
pusha
mov
rcrb
aas
psraw
repz
and
sbb
mov
lahf
or
lds
add
or
pushf
pop
or
outsl
jns
lods
fsubl
scas
and
push
dec
mov
sti
inc
push
iret
sbb
adc
icebp
repz
inc
dec
aad
cmpsl
daa
scas
mov
aaa
call
and
push
mov
fadd
and
popf
adc
das
inc
lods
sub
movsb
inc
clc
and
ret
jo
pop
in
xchg
pop
incb
mov
pushf
pop
out
sbb
hlt
adc
dec
lret
pop
call
adc
stos
dec
mov
in
bound
jg
test
nop
adc
lahf
rorl
lahf
xchg
add
inc
and
ljmp
lahf
xlat
in
xlat
push
fisubrs
lcall
mov
inc
jge,pt
xor
push
punpcklbw
sub
inc
or
mov
sti
out
mov
enter
pop
lock
pop
sti
dec
out
cwtl
inc
sub
rcr
popa
rolb
fcmovbe
and
in
lret
mov
data16
pop
icebp
mov
xor
sbb
fs
stos
inc
aaa
add
lea
leave
dec
andl
lcall
sarb
mov
pop
ds
test
dec
dec
sbb
sub
movsb
cmp
sub
ss
enter
int
mov
cld
lods
clc
int
sub
xchg
iret
neg
fmuls
stc
adc
jns
dec
mov
test
mul
jmp
insb
jge
mov
sub
aas
add
add
and
jmp
loop
out
cmp
lcall
dec
mov
stc
xchg
xorl
sbb
and
test
jbe
sahf
add
aam
js
enter
jg
mov
ror
mov
jge
gs
fsubr
pop
or
je
mov
adc
dec
push
inc
xor
xchg
cmp
sub
push
sahf
push
out
inc
fwait
xrelease
shll
inc
xchg
push
push
lock
loopne
loopne
je
es
ret
and
lcall
inc
scas
call
dec
fs
cli
lcall
pop
leave
mov
rcrb
into
jns
inc
mov
fs
adc
aam
ffree
in
fdivr
mov
int
xor
cmp
mov
adc
repz
aam
and
jle
cmp
ss
and
dec
jmp
jle
inc
sub
push
xchg
jo
enter
cmp
xor
dec
mov
pop
inc
mov
xor
fmuls
lea
pusha
push
push
xor
or
cmc
pop
popa
int
lock
test
dec
sbb
int
nop
mul
sub
int3
lods
js
leave
push
insb
je
imul
outsb
jmp
cld
jae
mov
jbe
repz
mov
stc
ja
jle
arpl
add
out
std
fcomps
push
inc
test
sub
fucom
mov
in
sub
xchg
lea
adc
push
jne
imul
mov
inc
arpl
xchg
mov
ljmp
lret
pop
insb
or
hlt
iret
adc
add
sbb
add
dec
pop
pop
push
dec
test
dec
ror
mov
sbb
mov
ss
leave
jl
mov
frstor
push
daa
sub
gs
xchg
mov
in
and
int
ret
cld
mov
lock
add
hlt
mov
testb
stos
or
or
xor
xchg
testb
mov
sbbl
jp
stos
mov
scas
adc
push
xchg
test
fcoml
std
push
in
add
rcrl
leave
add
es
adc
jb
scas
pop
lds
fmuls
pusha
dec
mov
or
loope
and
xchg
cmp
inc
fldenv
inc
imul
aas
mov
call
lahf
gs
dec
lds
cmpsl
cs
sbbl
in
icebp
mov
sar
xor
rorl
rcrl
leave
addr16
cmpsl
push
cwtd
out
mov
cmp
lret
in
sub
out
insl
and
or
mov
sub
and
adc
adc
loopne
sbb
test
popf
lret
icebp
push
push
mov
push
lret
out
inc
pop
daa
mov
pushf
fidivs
jge
sub
mov
mov
xor
ss
or
insb
roll
rol
dec
popf
aam
push
jl
push
adc
jno
les
daa
rorb
push
jp
ss
xchg
fstpt
jg
push
mov
sbb
xchg
jecxz
mov
nop
das
mov
lock
dec
test
cmp
aad
jnp
inc
mov
icebp
sbbl
lret
mov
xchg
rcr
xor
and
test
and
lea
sub
lahf
mov
out
out
mov
dec
mov
mov
leave
sbb
call
mov
mov
pop
push
stc
enter
shll
mov
and
pop
out
mov
or
subb
std
testl
shl
aaa
inc
cwtl
inc
push
push
jns
sbb
into
test
sub
and
fwait
cld
cmp
leave
jne
pop
xchg
aaa
lahf
cmpl
mov
sbb
xchg
or
fsubrp
xchg
or
and
xor
mov
jp
stc
jnp
icebp
add
jno
lods
leave
stc
idivl
xchg
jge
dec
mov
xor
inc
push
rcrb
and
mov
inc
cmp
es
jo
imul
outsb
sbb
cmpsl
test
mov
inc
call
movb
xor
cli
xlat
arpl
cmp
es
stc
pop
push
sti
les
add
in
loope
sub
jle
add
sub
lahf
jae
je
repz
jp
into
ds
xchg
cmp
clc
rorl
and
mov
sarb
in
out
jbe
and
mov
aam
lock
jae
mov
pop
or
adc
addr16
inc
ss
xor
stos
xchg
pop
int3
scas
sub
std
jb
lock
fldl
repz
cmp
das
ss
ret
insb
imull
je
push
push
cltd
loope
mov
loope
mov
jecxz
iret
mov
arpl
insl
je
in
xchg
mov
adcl
cmp
xlat
ds
adc
and
insl
icebp
out
es
cmpsl
jl
xor
add
cmpsl
out
les
or
inc
add
loop
mov
dec
ret
ficoml
dec
xor
add
jns
inc
scas
xchg
insl
hlt
jne
sbb
shr
push
icebp
jns
mov
mov
xor
cmp
mov
hlt
push
shrl
pop
mov
push
inc
pop
loope
pushf
ljmp
or
inc
mov
add
fisttpl
ja
cmp
push
enter
ret
pop
stos
das
stc
outsb
xor
aas
add
mov
jb
mov
pushf
xor
pop
stos
cmp
pop
mov
icebp
or
ljmp
xor
and
iret
test
cwtl
add
aas
or
mov
push
nop
into
add
lret
jae
cmpsl
jns
mov
cmp
sub
inc
ret
jns
movsl
in
sbbb
pop
outsl
pop
ret
loop
adc
push
push
jl
cmp
pop
push
sub
jl
sbb
aad
adc
dec
ja
les
mov
add
rorl
hlt
jns
xchg
or
push
out
in
mov
enter
popa
int3
aas
jmp
arpl
out
xor
or
pop
das
mov
or
mov
ficomps
out
push
scas
adc
mov
into
mov
dec
loope
cs
inc
jo
in
or
mov
push
call
std
sbb
mov
arpl
lock
lods
inc
clc
std
and
mov
dec
movsb
inc
jbe
mov
sbb
or
fwait
das
xor
xor
lcall
lret
loopne
lcall
or
xor
pop
sub
bound
mov
insb
adc
mov
inc
les
and
add
sbb
jmp
push
out
or
sub
clc
adc
cltd
sbb
aad
ret
add
push
push
sub
popa
cltd
iret
mov
rclb
movsl
add
jge
in
mov
cmc
test
scas
mov
popf
mov
orl
mov
sub
add
aaa
fnstenv
shll
pushf
movl
xchg
jmp
jge
sub
aad
in
jl
lahf
sbb
and
ret
sbb
out
inc
and
push
cmpsb
lods
popf
jo
mov
into
andb
jo
daa
xor
jo
add
pop
aaa
movb
mov
movsl
gs
aad
and
repz
mov
out
nop
aaa
out
jns
xor
add
ja
or
push
in
sub
movsl
inc
cmc
xchg
inc
xchg
cmpsb
sub
data16
cmp
fsts
fidivrs
mov
xor
mov
mov
outsl
push
test
ret
jnp
insl
or
inc
xchg
fmull
mov
mov
ljmp
jnp
in
ret
insb
int3
mov
dec
jno
fwait
rol
jmp
insl
xchg
mov
and
sti
pop
pop
fiaddl
mov
dec
jp
xchg
adc
int3
nop
add
mov
sub
sub
mov
sub
out
int3
test
test
scas
or
movsb
mov
insb
push
xchg
pop
mov
inc
ret
add
jge
inc
add
rorl
movsb
xor
lret
js
jle
add
push
cmp
cmp
push
jno
pop
jnp
sbb
pop
fistpl
push
jae
sub
mov
pop
mov
ja
inc
jmp
xor
insl
ret
imul
push
out
pop
mov
aaa
jle
inc
dec
in
push
push
clc
sub
jge
outsl
adc
pop
mov
sub
pushf
xchg
push
push
scas
fsubs
or
mov
test
ljmp
leave
mov
int
lods
lock
dec
xchg
adc
pop
gs
in
pop
arpl
rcrl
inc
adc
gs
lret
stos
stc
mov
add
dec
cs
or
mov
fcmove
popf
jnp
scas
in
cwtl
sub
push
stos
pop
pop
arpl
inc
jl
inc
push
test
call
subb
leave
bound
push
in
sub
aam
mov
fcmovu
repz
ret
dec
dec
aaa
mov
repnz
xor
shlb
jl
and
enter
es
push
mov
orb
add
in
add
sti
ljmp
lea
push
cmp
sbb
jp
insb
and
mov
dec
ficoms
sub
inc
mov
loop
sbb
and
cmp
je
mov
jns
shlb
lea
repz
dec
push
add
push
pop
and
and
cmp
sub
push
movsb
mov
jbe
out
jnp
dec
fnsave
jae
ljmp
js
loope
mov
dec
sbb
inc
mov
lret
orl
mov
cmpsl
sbb
add
inc
xor
xchg
nop
jnp
lds
pop
fwait
mov
and
xor
loope
stos
mov
stos
dec
es
push
out
inc
hlt
pop
push
scas
sub
ror
xchg
cmp
iret
stos
xchg
in
sti
mov
sub
inc
int3
push
mov
icebp
pop
push
pop
mov
cltd
fcom
mov
xchg
pop
mov
cmpsl
push
std
and
push
dec
dec
push
pop
add
push
adc
outsl
out
leave
fs
cmp
stos
test
jmp
data16
jbe
repz
lods
imul
cmp
mov
xchg
mov
cmpsl
inc
mov
test
push
fwait
jl
aaa
cs
std
lods
and
frstor
addb
push
xlat
mov
hlt
xchg
in
mov
add
or
mov
movsb
mov
gs
ja
mov
add
sbb
in
ficompl
and
pop
shl
jo
sub
aaa
and
cmp
push
lea
aas
inc
sbb
pop
call
call
fidivrs
cmp
fwait
mov
push
xchg
push
cmc
inc
push
out
add
data16
xlat
loope
xchg
stos
mov
sarb
bnd
sarb
jnp
inc
and
jmp
jmp
enter
mov
inc
es
xchg
lahf
in
mov
pop
ret
ret
daa
mov
push
dec
xor
cmp
fs
cmp
out
pop
jecxz
outsl
lods
mov
repz
mov
mov
xchg
jne
adc
faddl
imul
dec
sbb
rorb
in
push
and
enter
ds
shlb
out
sub
and
mov
pushf
push
mov
outsl
lret
cmpsl
les
int3
fstps
je
sbb
outsb
out
xor
and
shll
jl
cmc
mov
ret
aas
mov
fwait
push
jmp
ss
mov
movsb
popf
cmpsb
and
lock
test
mov
dec
imul
xor
push
add
add
mov
mov
in
pop
out
jg
push
mov
jecxz
xchg
js
dec
jno
mov
aam
cmc
sbb
xor
sbb
mov
push
mov
popa
imul
shlb
inc
mov
mov
shl
cmp
stos
sub
pop
push
inc
push
pop
sbb
out
add
sbb
ret
fmuls
cmp
sahf
add
xor
test
scas
out
adc
push
mov
shlb
fucomi
mov
icebp
test
dec
push
lret
jae
pop
inc
jo
adc
pushf
push
gs
push
push
clc
or
mul
mov
loop
faddl
popf
xchg
ror
lds
fiadds
add
lock
xor
cmp
arpl
adc
add
aaa
sbb
cmp
xorl
push
and
sub
cld
or
clc
pop
push
mov
rcll
loope
gs
xchg
mov
add
dec
inc
lea
dec
test
scas
clc
cli
mov
popf
andl
lods
shl
push
cmc
mov
lods
xor
movb
add
push
adc
jb
sbb
jle
push
testl
xor
cmp
fstpt
addb
push
in
inc
inc
xchg
popf
outsb
outsb
xchg
pop
mov
lret
cmp
nop
or
jl
xor
dec
pop
test
js
cmpsb
mov
pop
popf
int
xor
dec
inc
push
ss
scas
pop
or
mov
jbe
xor
test
or
out
pop
xchg
testl
popa
outsl
lea
rolb
mov
mov
pop
pushf
movsb
mov
inc
cmp
jbe
and
fmull
pop
jb
pop
mov
mov
mov
insb
fsts
mov
sub
push
pop
or
mov
sbb
xchg
cmp
mov
mov
adc
imul
dec
loop
pop
mov
shr
sarb
dec
push
jne
xchg
pop
in
and
and
imul
sbb
cmp
cli
cs
ja,pn
rclb
dec
int
cmp
dec
adc
jae
negl
lods
jge
push
xor
outsb
ja
mov
ds
push
mov
and
clc
sbb
jg
je
fcoml
icebp
mov
data16
ss
dec
dec
adc
lock
stc
or
pop
fdivr
lods
xchg
adc
inc
jbe
hlt
push
jnp
movsl
cmp
jo
mov
inc
andl
mov
aad
nop
cs
or
dec
cmp
ret
mov
dec
xlat
mov
jle
je
jne
out
mov
inc
pop
daa
faddp
pop
out
lret
je
fisubrl
mov
pop
ss
push
cmp
popa
call
mov
mov
test
jb
sub
call
xor
push
call
cmpsb
daa
mov
shr
cmp
outsb
fldt
pop
imul
xchg
sbb
out
je
push
mov
xchg
mov
sbb
sub
mov
nop
in
xchg
sbb
pushf
flds
cmp
lock
xor
divl
jb
out
lds
fdivrl
sbb
pop
lret
cmp
daa
shrl
adcb
push
mov
leave
cwtl
mov
arpl
sti
lcall
xchg
dec
mov
push
cmp
sti
pop
sub
mov
outsl
fbstp
pop
adc
movsb
inc
mov
inc
popf
sub
jmp
push
shlb
mov
sub
xchg
fldl
mov
adc
ret
mov
jne
inc
pusha
cmc
inc
inc
cmpb
sbb
scas
aad
adc
pop
mov
das
and
shll
add
push
xchg
pop
and
in
and
insb
clc
adc
sbb
rcll
js
rcll
popf
and
inc
xchg
dec
jmp
adc
xchg
movswl
das
js
pushl
pop
out
ljmp
xchg
push
jno
lock
cmc
sti
outsl
add
test
jg
stos
adc
mov
push
cmp
lods
add
mov
mov
xchg
sbb
aas
xchg
jge
add
js,pt
inc
or
add
jne
inc
repz
in
mov
iret
sub
stos
ss
int
pop
lret
dec
iret
add
pop
and
ret
mov
inc
dec
movsl
fstpl
fdivrs
rcll
xchg
mov
iret
sbb
sub
jb
pop
pop
xor
cmp
mov
fwait
sub
lds
mov
xor
xor
mov
inc
add
push
in
out
aam
xchg
lahf
pop
push
add
stos
xor
dec
push
add
in
jo
sbb
xchg
mov
out
jecxz
sub
into
popl
pop
inc
mov
cmp
inc
in
or
sub
jl
adc
pop
das
mov
fcomps
jnp
inc
lock
fiaddl
stos
xlat
pop
and
sub
jmp
jbe
jp
les
movsb
dec
pop
and
mov
mov
in
push
dec
dec
push
sbb
jno
push
jns
cmp
xchg
jae
or
xchg
xchg
jmp
mov
movsb
mov
push
icebp
cs
mov
or
lods
sbb
mov
push
cmp
inc
les
stc
xchg
pop
aas
mov
xor
outsb
mov
xchg
push
dec
xor
pop
out
fdivl
xor
mov
inc
inc
sub
rorb
add
mov
jle
dec
iret
scas
les
jecxz
jb
pop
mov
push
add
dec
and
sarl
in
pop
dec
push
loop
mov
lods
xchg
arpl
out
sar
imul
ss
je
ja
push
test
jae
or
sub
orb
jb
jnp
ljmp
cmp
scas
and
sub
int3
insl
fsubrp
das
add
inc
dec
push
push
fs
mov
pop
mov
sbb
jns
addr16
lea
leave
loopne
sub
jbe
inc
push
lds
or
repnz
dec
jp
test
lea
jge
xchg
xchg
in
mov
adc
add
mulb
sub
adc
mov
xchg
insb
adc
dec
aaa
sbb
and
sbb
or
or
push
fstpt
pop
ljmp
cmp
imul
push
iret
outsb
js
jl
and
fdivl
mov
xchg
inc
js
mov
xchg
test
push
adc
pushf
jmp
cltd
fcomps
mov
ss
das
jnp
fistpll
adc
xchg
xor
pusha
sahf
into
stos
repz
cmpsl
jmp
enter
test
in
in
dec
sbb
je
mov
cmp
cmp
jg
sbb
add
mov
mov
push
inc
inc
push
aaa
adc
add
dec
iret
or
add
arpl
sub
xchg
sub
cmp
or
push
outsb
std
lods
rep
lds
adc
cld
adc
nop
jo
mov
lcall
in
jg
lcall
sbb
aaa
fnsave
lds
rolb
push
fcmovne
cs
pop
iret
cmc
shlb
sti
push
fstpt
mov
and
sbb
data16
in
or
jg
or
and
je
mov
dec
cmpsb
scas
bnd
and
int
rcrb
inc
jge
pop
xchg
into
mov
mov
jl
test
mov
jbe
lgdtw
rorl
popa
mov
jle
sub
int3
xchg
cmp
adc
imul
jecxz
xchg
push
xchg
imul
or
push
mov
iret
pop
dec
push
js
std
pop
sbb
push
sub
adc
add
adc
fldcw
test
xor
pop
sub
xchg
frstor
sbb
repnz
push
lcall
mov
or
nop
aas
mov
mov
mov
pushf
push
cmp
pop
xor
aam
stos
lock
push
popa
popa
sar
orl
lcall
out
or
pmulhuw
mov
jg
or
sub
lcall
lods
push
jg
adc
roll
es
js
jmp
dec
arpl
call
aam
fdivrs
xchg
stos
xor
cmp
jl
or
and
xchg
into
hlt
les
mov
and
sti
push
add
xor
and
test
mov
cmpsl
push
adc
fisubrs
out
xchg
mov
fnstcw
adc
adc
out
sbb
ja
pop
data16
shrb
pop
sub
mov
sub
xlat
cmp
test
test
repnz
add
mov
bound
sbb
in
ljmp
jg
adc
fimull
xor
ret
inc
mov
imul
push
add
in
repnz
push
mov
sarb
lret
test
lcall
mov
inc
mov
pop
mov
nop
sbb
je
jmp
insb
call
lahf
cmpsb
int3
adc
fwait
mov
sub
imul
leave
or
fdivr
sbb
ret
push
lea
or
sbb
sub
movsb
mov
mov
or
pusha
stc
adc
nop
out
xchg
cld
in
movsl
popf
rcrb
in
stc
mov
rol
nop
push
sub
and
into
pop
sti
jmp
icebp
mov
and
andl
sub
xchg
inc
inc
and
push
out
popa
std
testl
mov
pop
insl
inc
jbe
lds
and
xor
push
sub
and
std
addl
cmp
add
dec
hlt
inc
sbb
xchg
ja
xchg
jns
jb
imul
lret
rcll
pop
das
nop
testl
xor
or
xchg
fstps
hlt
mov
nop
aad
fbld
mov
xchg
jnp
sti
scas
jg
cmc
sbb
mov
into
push
jno
aam
dec
sahf
sub
repz
gs
icebp
outsb
mov
pop
cmp
movsb
push
mov
push
fcmovnbe
xor
test
hlt
aam
outsb
adc
into
call
jnp
or
mov
xor
mov
out
and
pop
lods
push
fmul
jno
mov
mov
scas
out
mov
xchg
jg
mov
mov
add
lret
inc
push
xor
mov
lea
xlat
fldl
push
xchg
stc
push
sbb
iret
and
int3
push
push
or
mov
mov
cltd
jb
xchg
dec
dec
cmp
sub
push
xor
cmpb
jno
jno
push
mov
adc
lahf
mov
imul
push
insl
dec
insl
cmp
mov
push
sub
mov
inc
aad
mov
mov
mov
arpl
push
and
insl
ret
dec
sti
cmp
ss
lea
jmp
inc
out
xor
push
and
shl
xchg
ljmp
ret
dec
ds
vmwrite
pop
cs
mov
xchg
jge
pop
movsb
mov
add
push
insb
int3
aaa
xchg
or
sbbl
iret
and
mov
repnz
repnz
mov
hlt
out
push
ss
mov
xchg
mov
mov
popf
clc
adc
mov
mov
push
jne
nop
xor
orb
mov
pop
movsb
stos
jmp
stos
repnz
sti
bound
lahf
mov
xor
sub
std
xchg
dec
pop
push
add
sahf
pop
cli
inc
push
notb
dec
adc
popf
nop
mov
jns
mov
iret
mov
xchg
mov
and
dec
daa
ljmp
sbb
mov
icebp
mov
push
pop
mov
mov
sbb
fs
movsb
adc
mov
mov
lods
jecxz
shrl
mov
add
push
clc
and
test
sbb
mov
mov
push
push
add
loopne
mov
call
mov
xor
in
or
mov
cltd
in
int3
daa
stc
pop
je
cmp
test
lret
lret
flds
ja
jne
or
and
cmp
push
mov
testb
cwtl
cltd
xor
xor
imul
sub
in
cmpsl
mov
dec
lret
jb
les
fdivl
mov
dec
popa
test
sbb
mov
lods
mov
cld
mov
and
aas
inc
sub
popa
inc
push
fs
insb
mov
jnp
mov
cmp
push
test
mov
and
test
sbb
add
inc
sbb
nop
cld
inc
inc
loop
push
mov
cmp
addr16
jmp
mov
and
imul
adc
cwtl
and
lods
test
jmp
jae
xchg
loopne
inc
scas
lods
or
or
lret
add
cmp
push
xor
mov
repnz
shrl
mov
jmp
push
add
bnd
or
lods
xor
mov
repz
adc
bound
je
lcall
subb
mov
fwait
push
aas
cmp
cmp
adc
cltd
mov
inc
push
setb
jmp
or
pop
sbb
aam
fisubs
jns
dec
xchg
pusha
fwait
inc
mov
mov
pop
mov
add
jmp
cmpsb
mov
inc
adcb
mov
in
enter
daa
out
push
push
dec
cwtl
adc
cmc
orb
or
pop
push
movsl
adc
andl
jns
add
ret
cli
movsb
cmp
inc
fstpl
mov
mov
jl
jbe
or
push
xor
xchg
mov
push
fwait
aam
and
dec
jne
and
xchg
mov
aad
out
xor
repnz
out
gs
inc
test
gs
mov
movsb
xchg
fbld
push
pop
xchg
ret
add
jecxz
sbb
mov
sbb
sub
xor
xchg
ret
mov
xchg
cmc
pop
mov
scas
sbb
xor
push
cmpsb
lock
int3
cmp
cmp
add
out
xor
xor
pop
adc
out
adc
les
cmp
pop
xchg
jo
outsl
ret
int
xchg
lea
xchg
lahf
mov
call
adc
jnp
enter
mov
dec
aad
jmp
out
in
out
out
fsubl
ret
mov
mov
in
adc
fimull
inc
jecxz
repz
push
adc
out
stos
mov
pusha
cmpl
adc
std
fdivr
pop
mov
jae
lock
push
sti
jo
add
or
in
jb
pop
lds
and
dec
xchg
mov
lcall
mov
fcoms
mov
dec
testl
cmp
test
push
and
adc
test
cmp
pushf
scas
cmpsl
xchg
pushf
mov
cmp
mov
scas
movsl
inc
or
mov
sub
in
out
jmp
xorb
dec
dec
pop
mov
shlb
in
fildll
pop
mov
gs
cmpsb
cmp
jp
ljmp
sub
nop
stc
cmp
push
cmpsb
fldcw
jp
mov
call
call
pop
dec
mov
mov
or
movsl
gs
mov
add
add
cmpsb
inc
xor
jno
sti
or
sbb
pushf
pop
push
mov
call
adc
test
inc
mov
lock
inc
loope
pop
jnp
cmpb
pop
inc
jmp
jmp
rorb
sub
xchg
sub
pop
jmp
das
enter
xor
lahf
xchg
fisubs
dec
shr
je
jl
inc
cmp
fistpl
jbe
hlt
js,pn
add
loop
std
lahf
and
outsl
movsl
push
push
pop
imulb
incb
dec
ret
lock
dec
add
loopne
aas
out
dec
sbb
mov
push
leave
xorb
jge
push
sti
arpl
out
push
adc
inc
mov
mov
and
imul
mov
dec
sub
fmulp
mov
mov
imul
jne
test
mov
subb
repnz
xchg
popf
pusha
aad
mov
lret
fstl
add
cltd
mov
stos
jo
stos
cmp
test
movsb
add
mov
cmpsb
es
xchg
push
cmova
loopne
jae
stos
mov
loop
outsl
or
int3
lret
push
xor
cs
movntq
pop
es
fs
and
outsb
movsb
lahf
test
sbb
inc
js
setg
das
xchg
nop
jnp
orb
pop
aaa
std
pushf
dec
jns
pop
out
xchg
fists
mov
out
adc
mov
ret
aad
and
test
sbb
xor
clc
jae
and
fmuls
scas
out
loop
cmpsb
sub
fnstcw
imul
outsl
cmp
in
outsl
jmp
add
push
clc
pop
xchg
jmp
xchg
jnp
pusha
xor
frstor
ret
xor
scas
dec
push
jp
ja
mov
cmpsl
pop
lods
pushf
sub
loope
sub
cwtl
dec
mov
addr16
loope
fwait
inc
fistpl
fcomi
and
mov
test
and
stc
push
mov
or
rcrl
call
lds
aam
xchg
mov
jp
sub
shrl
jp
mov
in
xchg
push
leave
daa
mov
add
jne
sbb
mov
or
and
rclb
test
stos
std
addr16
loope
jmp
jo
stos
test
mov
pop
jge
push
leave
mov
add
jmp
iret
roll
or
xchg
jns
nop
lods
leave
xchg
outsl
mov
in
xchg
mov
cmp
into
movsl
out
or
add
xor
cmpsb
mov
and
mov
in
cmp
sbb
jle
xlat
jp
ret
pushf
sub
sahf
fucomp
cs
lret
iret
add
mov
in
xlat
adc
daa
inc
adc
bound
aaa
das
lret
pop
pop
pop
push
in
aad
stos
xchg
sti
xchg
shrb
loope
jae
lods
sbbl
enter
inc
stc
xchg
hlt
xorl
or
mov
stos
sbb
js
test
fwait
scas
ffree
pop
mov
pop
scas
pop
mov
lock
jecxz
ret
aad
rclb
mov
fwait
test
testl
pop
mov
ret
into
addr16
mov
sbb
loopne
xor
int3
test
push
pop
leave
movsl
ljmp
dec
sarl
loop
lds
pop
or
jl
mov
bound
mov
out
pop
cmp
inc
repz
or
fnstcw
in
xchg
sbb
cltd
fs
repnz
loop
cmp
sbb
ljmp
lds
or
daa
dec
ss
pop
shl
dec
adc
loopne
xchg
xor
aad
jp
test
sub
mov
je
shlb
push
outsl
mov
push
mov
pop
arpl
scas
addr16
call
xor
inc
rorl
mov
ret
xchg
loop
jl
mov
push
dec
xchg
adc
inc
sbb
repnz
fisubl
int
sbb
mov
push
negl
inc
mov
inc
es
cld
lret
iret
in
jle
hlt
ja
lret
call
aam
xchg
in
fistl
es
or
add
jae
jge
lret
repnz
mov
xchg
cmpsb
pop
rorl
lds
xchg
mov
ss
push
mov
pop
push
testl
inc
outsb
cmp
imul
cmp
cld
test
xor
cmp
dec
std
or
cmp
subb
adc
insb
pop
xor
pop
mov
fistpll
lods
movsb
jg
ljmp
icebp
push
xor
repnz
xor
in
pusha
mov
fwait
stos
mov
push
sbb
xor
testb
cmp
cmc
movsl
push
outsb
lcall
movsb
out
sbb
scas
pusha
sarl
es
add
sbb
sbb
mov
push
mov
jl
xchg
ss
lock
shl
movsb
add
cwtl
aaa
or
cltd
cmp
mov
mov
test
fisubrl
aad
mov
loope
fcomp
pop
mov
add
stos
sbb
shrb
pop
xchg
imul
adc
insl
cmc
ficompl
pop
sbb
xchg
xor
addr16
add
lahf
test
mov
gs
popa
jnp
imul
mov
lock
cld
inc
jae
sahf
fsubl
push
sti
mov
in
inc
loopne
inc
mov
stc
lret
leave
imul
sub
adc
lods
adc
inc
data16
add
int3
shrb
add
ret
inc
mov
add
test
dec
jno
ja
sub
dec
dec
push
lods
mov
jmp
fldpi
mov
lds
add
adc
flds
jbe
outsb
out
sti
ja
sbb
data16
ficompl
inc
sbb
int
jb
adc
sbb
mov
jae
pop
int
inc
pop
sbb
dec
sbb
adc
push
mov
mov
sub
movsb
dec
xchg
cmpsb
sbb
sub
out
gs
out
and
das
lret
mov
adc
jno
test
shll
dec
imul
por
std
mov
inc
mov
test
lret
ljmp
push
int3
imul
sub
outsl
mov
or
insl
addr16
enter
subl
stos
add
jmp
jbe
jp
pop
in
cmp
cwtl
imul
es
cmp
mov
fmuls
dec
out
pop
inc
mov
pop
mov
nop
mov
int3
push
ds
lret
dec
push
lret
add
jl
cmc
sub
lock
add
dec
stc
addr16
hlt
or
lret
add
adc
mov
sub
dec
ss
mov
dec
dec
xor
not
out
js
cmpsb
jb
jl
jo
je
mov
sbb
inc
inc
test
or
cmp
repz
scas
ljmp
fwait
ds
loopne
lock
push
movsl
addr16
lret
xchg
nop
mov
ja
adc
shrb
mov
iret
sub
popf
push
cmpl
mov
mov
hlt
xor
jp
inc
dec
cmpsl
mov
jp
int3
mov
sub
mov
pop
xor
in
push
test
dec
mov
neg
jmp
int3
add
fcom
mov
sahf
or
mov
lods
xchg
sub
into
insb
loopne
push
lret
sbb
int3
sub
pushf
xchg
mov
dec
es
pop
and
popa
cmp
dec
mov
xchg
pop
imul
inc
mov
inc
stos
mov
push
dec
fcmovu
adc
gs
push
iret
lds
mov
popa
cmpb
xchg
push
cmp
pop
adc
inc
stos
inc
data16
xchg
adc
outsl
fiaddl
xchg
repz
push
pop
stc
jb
pushf
jo
fldenv
cmp
xor
mov
and
int3
dec
divl
adc
addl
sarb
dec
rcl
xor
pop
mov
into
dec
or
scas
aas
xchg
ss
mov
lea
lods
pop
sbb
jo
mov
pop
mov
pop
and
js
std
dec
mov
and
pop
rclb
mov
pop
jmp
sub
and
stos
push
push
sub
ds
adc
mov
in
xor
jecxz
fxtract
shll
jns
adc
lock
and
outsl
sbb
pop
out
lock
roll
jb
js
mov
movsl
jo
call
push
fisubs
push
enter
jg
or
aam
addr16
sbb
sti
jb
push
imul
and
mov
or
mov
mov
movsl
dec
xchg
jmp
std
pop
repz
mov
clc
sahf
mov
sub
add
out
sti
fdivrl
mov
adc
loope
mov
or
addl
adc
out
mov
enter
inc
cmp
xchg
pop
pushf
iret
fisubs
ret
or
sub
das
cli
cmp
add
fistpl
popf
push
fbstp
gs
xor
pop
shll
mov
or
mov
and
daa
out
out
add
xchg
xchg
jnp
ficoml
out
loop
hlt
dec
mov
cli
repnz
lret
outsl
push
test
or
pop
sub
sub
stos
popa
adc
xor
sbbb
ret
arpl
mov
outsl
mov
or
jne
movsb
xor
in
adc
shrl
aad
adc
scas
lret
pop
or
mov
cmp
cld
add
mov
add
mov
pop
jbe
cwtl
outsb
xchg
xorl
orb
add
jae
outsb
sbb
imul
inc
nop
repz
jno,pn
dec
push
push
hlt
dec
mov
cmp
mov
pushf
lods
out
mov
popf
xorb
enter
sbb
push
cmp
mov
popf
nop
mov
lods
test
std
js
roll
push
test
imul
enter
fs
inc
mov
out
stc
hlt
sahf
lods
vminsd
jb
cmp
sbb
or
sub
jg
psrlw
clc
fidivrl
daa
sahf
stos
inc
add
and
jl
mov
inc
psubsb
mov
xor
loop
pop
dec
jmp
cmpsb
nop
dec
decb
test
jl
dec
dec
test
lcall
clc
fs
mov
sub
and
jno
mov
fdivl
jns
cs
xrelease
jo
jl
fmul
push
and
sub
mov
mov
pop
sub
sbb
inc
mov
pop
sub
cld
mov
jge
stos
ror
hlt
imul
fmull
aam
or
psubb
iret
pop
sub
inc
cwtl
mov
lret
mov
mov
xor
add
aad
push
imul
mov
mov
push
rcrl
or
push
dec
mov
cmp
mov
fsubrl
inc
sti
bound
pusha
cmp
push
pop
loop
add
shl
clc
mov
cmc
push
push
das
or
fwait
jmp
inc
fs
dec
mov
mov
stos
icebp
ss
lock
cli
pusha
lock
cmp
xor
aas
pop
scas
lods
ret
sti
mov
cmp
and
inc
stos
sub
sbb
clc
or
insb
daa
xor
add
inc
xchg
cmp
mov
call
aaa
add
inc
dec
sbb
ror
push
jne
or
repz
adc
lret
subb
inc
mov
js
aas
jb
xchg
cmpsb
push
mov
pop
sahf
and
loop
addl
pop
into
sbb
fcompl
sbb
xor
callw
notl
push
and
mov
or
in
sub
xlat
fsts
xchg
pusha
rolb
testb
mov
clc
xchg
lds
scas
clc
mov
adc
jb
test
rol
jmp
aas
and
push
into
mov
dec
dec
addr16
gs
cmpsb
push
rcll
rorl
test
ss
adc
and
mov
adcl
add
pop
shr
sar
outsb
dec
dec
stc
popl
add
out
inc
adc
into
loope
cld
lods
cltd
aam
mov
jae
push
pusha
mov
imul
loop
mov
dec
fisubrl
div
xchg
sbb
mov
jp
push
les
sub
lock
das
jmp
sarb
dec
pop
cltd
or
loopne
add
mov
pop
sub
mov
mov
pop
repnz
push
sbb
pop
adc
push
loop
dec
insl
iret
dec
mov
xor
add
ret
xlat
pop
stos
lea
push
imul
mov
sub
aas
and
mov
inc
jecxz
sti
gs
adcl
outsl
jb
scas
push
gs
sarl
aad
fs
adc
pusha
ds
xor
xchg
and
lcall
mov
daa
xor
or
pop
and
xor
xor
nop
fiadds
fcomps
cmp
stc
loope
outsl
pushf
pop
xchg
cwtl
add
xchg
xchg
pushl
lds
inc
cltd
jno
loop
pop
jae
movsl
jnp
push
int3
lcall
mov
out
icebp
add
aas
icebp
pop
ljmp
push
jg
push
mov
fisubrl
add
inc
push
cli
and
subl
cmp
adc
adc
and
fsubrs
push
push
roll
lret
adc
sahf
out
sahf
outsl
sti
test
pop
stos
pop
lods
push
sub
fsubrl
fidivrl
iret
jb
sbb
or
inc
and
jnp
mov
ret
jecxz
aas
sub
xor
xchg
loopne
cmpsl
arpl
sbb
adc
imul
mov
pusha
loopne
and
mov
push
mov
push
jmp
sahf
mov
cmova
dec
popa
hlt
mov
call
xchg
imul
popa
cmp
xchg
in
mov
int3
sub
sbb
jnp
push
test
scas
imul
sub
mov
or
and
test
push
xchg
or
sbb
cli
repz
enter
jb
xlat
lds
setne
xor
cmp
roll
and
jns
push
mov
mov
jnp
addl
test
xor
dec
mov
in
jp
jmp
and
xchg
outsb
sbb
repz
fisubl
xchg
movsb
dec
test
mov
scas
sbb
xchg
int3
sub
nop
fdivr
xchg
sbb
cli
cmp
aas
ljmp
into
xlat
stc
rclb
mov
insl
pop
fimuls
xor
dec
inc
int3
sbb
adc
and
cld
cmp
inc
test
mov
jae
int
xchg
mov
lret
ss
into
or
pop
jbe
mov
add
clc
cmpsb
jbe
or
out
jl
lret
mov
pop
jmp
rolb
lea
sbbl
xor
jl
pop
or
and
or
clc
and
push
cmpsb
inc
inc
adc
lods
adc
cmp
jo
in
repnz
push
fnsave
jl
aas
popf
xor
test
int3
test
daa
js
movsb
test
shl
or
fstps
call
push
fs
pop
jno
jge
mov
jo
int3
orl
pop
cmp
sbb
sub
inc
clc
jecxz
les
inc
jne
lret
push
adc
mov
ds
and
aad
negl
sbb
ja
adc
or
fidivl
mov
inc
ja
adc
mov
cli
add
orb
clc
mov
ljmp
imul
inc
inc
xchg
jns
mov
adc
sbb
je
dec
fstl
repnz
or
pop
data16
and
xor
add
fwait
xor
dec
jb
xor
add
and
sub
and
clc
jl
mov
dec
int3
lret
xchg
inc
hlt
leave
jns
pop
push
bound
in
imul
jmp
out
hlt
bndmov
sub
adc
hlt
jnp
popf
lahf
lcall
cmpsb
push
aam
ret
orb
xchg
mov
mulb
sub
mov
fisubl
push
xchg
ljmp
fldl
xor
test
xor
ds
in
in
mov
mov
sbb
push
lret
push
andb
popf
push
adc
push
xchg
mov
add
inc
jns
mov
adc
jecxz
aas
pop
xchg
fidivrl
shrb
mov
push
or
xor
js
inc
dec
add
fwait
inc
jbe
leave
jnp
pop
dec
mov
dec
jp
mov
insl
out
ljmp
shrl
add
push
jg
mov
and
adc
divl
jnp
rcrb
fmuls
push
push
jae
xchg
xor
xchg
or
adc
cmp
test
je
mov
nop
sub
jb
jecxz
jle
out
test
sub
mov
dec
psllq
loop
fsubrs
mov
fidivs
fs
mov
mov
or
mov
add
imul
fisubl
sub
scas
push
lock
jmp
xor
scas
ror
mov
dec
dec
cmp
cmpsl
cmpsl
dec
sbb
outsb
add
int
call
aam
call
sti
out
inc
aas
icebp
pusha
into
mov
mov
fbld
inc
mov
mov
fwait
lock
mov
pop
adc
fcomp
xchg
mov
loope
and
scas
mov
push
ljmp
scas
push
lods
repnz
inc
add
and
xor
lods
pop
adc
sub
dec
rcrb
ret
ret
movsb
hlt
mov
jbe
fstl
push
enter
loopne
aad
stos
fcompl
push
mov
inc
pop
add
adc
sub
aam
or
xor
push
pop
cmp
jo
pop
xor
jae
imul
dec
lock
or
xchg
xor
mov
dec
leave
dec
insl
data16
xor
or
push
inc
aas
fnstenv
lret
and
mov
iret
push
ja
stos
pop
mov
fld
inc
aaa
and
xchg
test
arpl
call
mov
jbe
dec
xor
loopne
jne
fsubp
mov
xchg
mov
xor
ficomps
fldl
cmpb
xchg
stc
push
movsb
sbb
fmulp
pop
je
or
mov
js
sub
sub
add
pop
mov
push
pop
scas
push
stos
jl
ret
cmpsl
mov
test
pop
sahf
ja
push
jbe
push
cmp
mov
mov
in
sti
xchg
cwtl
shr
repnz
fsubs
add
lahf
jo
push
sub
jnp
mov
out
scas
jecxz
mov
fdivl
inc
and
pop
cmp
stos
mov
testl
stc
sti
cmp
bound
clc
test
cmp
iret
mov
mov
mov
jp
call
xchg
add
sub
outsl
mov
mov
aas
mov
sahf
inc
cmp
adc
lods
ds
sbb
stos
jns
int3
adc
insb
je
bound
add
xchg
test
fdiv
adc
pop
fistpl
lcall
lock
or
xor
lods
pop
dec
xchg
stos
jb
xchg
lret
or
ret
scas
pop
into
mov
mov
sub
and
jl
inc
push
loopne
popf
aad
ret
mov
xor
pop
rol
xchg
cmp
int3
sub
jo
icebp
and
inc
push
movsb
imul
sysexit
sub
xchg
repz
sub
imul
dec
add
cmpl
adc
add
hlt
fiaddl
test
push
or
and
inc
xchg
jg
rol
push
push
mov
out
mov
dec
jno
pushf
cld
repz
sar
pop
mov
xchg
rclb
push
sahf
imul
dec
cs
popa
push
mov
inc
sbb
mov
pop
lods
test
adc
int
in
stc
adc
or
mov
adc
sbb
or
popl
in
push
mov
fbstp
cmpsl
fsts
fistl
cmovbe
xor
dec
xchg
faddl
or
adc
pop
push
adc
push
sub
int3
rcrl
push
enter
rcrb
mov
and
lods
dec
or
add
adc
fidivrl
adc
lret
int3
inc
pop
sub
and
dec
lret
xchg
push
push
daa
adc
xchg
mov
nop
xchg
arpl
test
xor
movsb
bnd
test
mov
add
decb
add
and
add
pushf
xchg
outsl
fs
push
ret
xor
mov
dec
inc
subl
dec
lea
dec
lret
loopne
add
popa
dec
xchg
and
out
mov
inc
cmp
pusha
mov
jg
jno
stos
frstor
mov
cmpsl
push
pop
test
idiv
dec
inc
lahf
fadd
mov
mov
std
cwtl
movsb
xchg
jae
cmpsl
sti
je
jne
add
lock
adcb
fidivrs
dec
lret
int
lcall
lret
sbb
push
lods
ffreep
rcll
sahf
mov
insl
xchg
popf
setns
cmp
pop
rclb
jae
mov
adc
mov
xchg
mov
mov
test
sub
aas
in
ljmp
mov
addr16
ss
mov
push
or
pusha
xchg
out
mov
imulb
dec
mov
dec
xchg
imul
xchg
cmp
pop
call
or
lock
shl
lds
adc
adc
lret
xor
dec
fnstcw
divl
fs
cmp
mov
aam
popf
movsb
aad
sarl
mov
mov
cltd
xor
jmp
and
jp
aam
or
ja
dec
lahf
pusha
mov
data16
push
xchg
or
imul
inc
mov
cmc
ret
popw
push
imul
push
in
mov
jl
xor
gs
mov
mov
in
daa
lahf
mov
dec
pop
push
and
cmpsb
jg
or
pop
jl
rcrb
sbb
clc
mov
xor
ja
xor
psrlq
xchg
aaa
pusha
data16
in
fs
stos
and
fcomp
push
push
xchg
fldt
movsb
add
lea
dec
or
out
push
lock
int
sbb
pop
mov
pop
insb
inc
or
cmovnp
shlb
mov
mov
lock
jle
les
inc
sub
insl
and
fldcw
in
cmp
dec
xor
sub
cmp
mov
mov
iret
inc
loope
aam
inc
push
dec
cmpsb
pop
push
add
cmp
sub
jno
test
leave
sub
test
movsb
lea
sub
xchg
mov
pop
in
mov
jl
stos
fnstenv
pop
mov
pop
loop
lods
lahf
fstl
push
push
fisubs
sub
popa
mov
cmp
aaa
loopne
nop
scas
mov
mov
mov
imul
js
and
mov
mov
sub
jle
imul
insl
lahf
dec
test
xbegin
mov
pop
or
lret
cmpsl
or
pop
hlt
adc
ficompl
xor
insl
sbb
cmpb
ss
insl
in
call
enter
repz
cmp
outsb
or
fnsave
mov
mov
mov
lcall
loope
ja
pop
mov
sub
movsl
out
lret
stc
fsubrs
adc
push
mov
inc
mov
imul
in
mov
pop
or
mov
sub
and
addl
imul
and
xchg
xchg
dec
sbb
ret
push
mov
ret
out
dec
clc
xor
dec
ret
push
sbb
adc
mov
dec
or
mov
bound
xor
sti
add
and
loopne
inc
cwtl
inc
or
push
movsl
dec
inc
jb
test
add
nop
cmp
push
cmp
fwait
in
push
jno
sbb
iret
lods
or
jmp
pop
push
push
xchg
inc
sbb
lret
movsb
mov
shrl
roll
jmp
add
cld
les
imul
sbb
xor
push
test
out
and
test
jns
mov
mov
ss
stos
mov
jge
mov
sub
mov
mov
stc
push
dec
xchg
aas
sahf
mul
rcrl
pop
aam
mov
ja
je
in
lods
adc
and
iret
cs
loop
push
in
push
cmpsb
addr16
mov
lahf
mov
adc
dec
lods
push
mov
add
leave
xor
add
cmp
es
std
inc
dec
add
aaa
fildl
dec
int
pop
push
sti
jecxz
push
lcall
andb
inc
pop
pop
scas
pop
popf
lock
imul
lret
xchg
jne
jle
jle
xor
add
dec
jo
fs
inc
pop
addr16
and
inc
fs
pop
int3
or
mov
loopne
fs
inc
jno
jns
xor
mov
repz
popa
div
cmpb
js
jle
leave
dec
inc
xor
jp
test
imul
rorl
lea
leave
and
pop
jb
push
add
jmp
rorl
dec
mov
or
add
stos
xor
ljmp
mov
stos
movsb
adc
negb
xchg
cmp
imul
call
and
sti
les
jle
mov
jns
fiadds
or
cmpsl
cli
mov
mov
or
dec
fildll
js
pop
loope
inc
nop
addl
xor
xlat
dec
push
pop
sbb
jecxz
fimull
call
lock
adc
popf
xchg
push
add
jnp
push
xchg
sub
jp
orb
pop
push
mov
sub
add
clc
fmulp
in
mov
inc
cli
sub
xor
jle
mov
sti
mov
pop
iret
dec
dec
ret
xlat
push
outsl
pushf
adc
pusha
sbbb
pop
sahf
mov
xchg
shl
pop
jnp
jns
ljmp
mov
data16
fldt
mov
adc
xorb
roll
push
stos
push
xor
mov
push
mov
mov
andb
lods
lods
lds
xchg
push
js
sub
sub
adc
sub
xchg
pusha
loopne
mov
xor
iret
sub
cli
repz
loope
pop
fmuls
popa
repz
mov
push
hlt
cltd
loop
in
dec
sbb
stos
out
sub
fdivrl
aad
mov
sbb
adc
add
sti
aad
xchg
pop
jb
test
stc
xchg
mov
adc
ret
stc
inc
jp
inc
ljmp
lret
dec
push
xchg
into
push
loopne
adc
addb
jp
aad
lock
lcall
sub
push
or
add
jns
lock
les
int3
repnz
test
dec
mov
lret
lds
lret
sub
jge,pn
leave
add
je
roll
inc
cmp
aam
push
or
cmc
mov
pop
adc
mov
xchg
dec
push
xor
cmpsl
push
rcr
aam
sbb
xor
push
or
rcrb
pop
jne
push
pop
and
mov
ret
push
cs
jae
ljmp
fidivrl
mov
xchg
testb
aas
bnd
loop
mov
pop
dec
ljmp
push
and
aas
inc
repnz
out
push
pop
imul
cmp
mov
lds
cmp
addr16
adc
insl
outsl
mov
aas
dec
xchg
test
sub
lcall
add
mulb
adc
pop
push
xchg
pop
ljmp
insb
les
and
ret
fcompl
sub
in
dec
daa
cld
and
pop
enter
or
pop
cmc
pop
mov
arpl
ljmp
ja
mov
cmp
xchg
mov
les
sub
pop
lcall
fcmovnbe
sub
xor
fnstcw
lcall
popa
inc
xor
das
hlt
movsb
repnz
in
pusha
lret
fstl
into
imul
mov
int3
enter
xor
xchg
in
sub
lahf
addr16
popf
xchg
test
or
daa
data16
testb
push
cmp
push
dec
jo
jno
sbb
mov
pop
imul
sub
sbb
adc
cmp
add
pop
fcompl
outsb
adc
nop
test
mov
jl
lock
fadds
imul
mov
imull
or
sub
pop
xchg
std
sbb
enter
jbe
mov
insl
cs
pop
hlt
daa
pop
fdivrp
cmp
push
outsl
cwtl
push
dec
ljmp
nop
pop
in
cmp
outsb
int
inc
and
stos
xchg
ds
xor
inc
ljmp
push
jmp
enter
gs
sub
nop
or
cmp
cmp
inc
sub
aaa
lock
inc
inc
lcall
mov
insb
pop
into
jae
xchg
cmp
pop
shll
jae
jnp
mov
push
sbb
cmp
outsl
mov
push
mov
xchg
jmp
imul
mov
jl
mov
mov
ja
cmp
xor
sbb
inc
ficoms
fwait
jp
mov
xor
dec
lea
fs
cmpsb
iret
mov
out
xchg
shrl
lret
jge
popa
out
in
xchg
inc
aad
in
pop
shrl
and
dec
or
inc
dec
lods
sahf
xlat
xchg
xchg
out
mov
mov
mov
inc
inc
mov
arpl
lea
sti
sub
jecxz
inc
rcl
push
push
stos
imul
rcrb
movaps
rorl
cld
push
and
ret
mov
lock
cltd
das
js
pop
loope
daa
lods
jle
dec
mov
sbb
or
sub
xor
movsb
cwtl
xchg
ss
xlat
sub
loope
lock
neg
loop
test
popa
inc
cmp
xor
icebp
dec
mov
adc
pop
mov
xchg
mov
push
jbe
ret
out
add
add
lea
sti
test
insb
inc
ret
jnp
push
jle
int3
cmp
mov
and
fstpt
aas
xchg
lret
pop
inc
imul
add
mov
inc
dec
jp
push
pop
cltd
aam
push
mull
scas
push
fcmovnu
inc
addr16
xor
popf
iret
sbb
and
mov
sub
sbb
orl
fldln2
mov
sub
insl
mov
adc
scas
pop
adc
inc
stc
cltd
out
pop
testb
lret
repnz
xlat
xchg
std
and
lret
fnsave
lret
add
lds
mov
and
orb
das
xchg
pop
lods
dec
adc
in
scas
cmp
lods
xchg
clc
psllw
add
fs
mov
push
cmp
sub
mov
adc
fs
jecxz
xchg
cmp
jne
movsb
lods
or
pusha
inc
int
movsb
hlt
sbb
or
dec
mov
into
push
jne
dec
jecxz
test
shrb
leave
stc
aad
cwtl
pop
xor
and
push
sub
loopne
out
xchg
cwtl
add
cmp
xor
xor
xor
icebp
cmc
jae
cmp
xorb
or
int
stos
adc
add
push
incl
push
out
xchg
push
dec
arpl
cld
push
push
imul
rclb
dec
push
push
mov
sub
add
dec
test
sub
cmpsl
xchg
mov
loopne
sub
adc
jmp
in
xchg
cmp
lods
pop
adc
repnz
xor
and
addr16
sub
imul
pop
pop
or
mov
sahf
dec
add
inc
inc
dec
inc
xchg
icebp
lahf
cwtl
in
lock
or
test
bound
cmp
outsb
call
cmp
stc
cmc
clc
add
fwait
xchg
push
inc
xchg
emms
scas
mov
lock
stc
sub
out
dec
xorb
cwtl
stos
lret
xor
mov
dec
dec
aad
lods
mov
jne
jg
xchg
add
movsl
imul
in
test
lret
mov
mov
popa
popf
jb
inc
jno
sbb
ficoml
pushf
nop
jmp
pop
int3
pop
popa
xor
or
pop
fstps
mov
repz
in
xor
bound
jbe
nop
jo
push
int3
inc
ret
mov
inc
jo
mov
jmp
inc
scas
scas
fildl
je
frstor
mov
repnz
push
mov
sbb
push
add
lret
outsb
fcompl
or
aad
xchg
data16
xchg
cwtl
jl
mov
xchg
push
add
mov
pop
pop
cmpsl
mov
cmp
push
cli
loop
or
call
mov
sub
sbb
int
sahf
bnd
int3
ret
jns
cmp
sub
in
xadd
into
dec
xchg
outsl
inc
in
outsl
sarb
test
cmp
cmpsb
mov
pop
mov
adc
push
jns
lds
xor
jbe
lahf
cmc
cmp
xchg
fsubrs
rorb
ja
add
outsl
mov
leave
mov
in
cld
push
or
dec
push
xor
dec
jle
popf
dec
cmc
pop
lcall
or
insb
sub
test
jae
je
ret
imulb
lods
xchg
outsb
mov
add
cmp
sub
in
xchg
frstor
mov
inc
mov
lds
sbbb
ret
mov
xor
addr16
lret
data16
popa
pushf
sbbl
push
jl
xor
aas
insb
fwait
xchg
cmp
dec
mov
loopne
add
scas
or
sbb
add
repnz
clc
push
mov
inc
int3
lret
data16
or
sbb
sbb
fimull
cmp
insl
adc
jp
push
fsts
push
fcmovne
popa
add
mov
or
inc
mov
pop
pushl
in
cmp
pop
xor
aad
or
outsb
cmpsb
push
mov
stc
lcall
lods
push
pop
ficoml
xchg
mov
xor
pusha
push
rorb
shlb
push
out
sbb
push
jb
sahf
mov
in
out
push
sbb
sahf
daa
aaa
pop
mov
jbe
jbe
pop
push
and
push
mov
push
push
fwait
xor
xchg
mov
fwait
insl
rol
aam
adc
cmp
pop
push
mov
or
cmp
mov
in
mov
mov
dec
push
clc
push
inc
cmp
pop
pop
sbb
adc
pop
clc
sbb
in
mov
inc
clc
pop
fildl
cmp
cli
and
mov
pop
fisubs
inc
bound
addr16
mov
in
imul
sub
push
ficomps
lret
jnp
add
mov
jg
addb
dec
sub
jecxz
or
in
or
orl
sbb
dec
push
fsubr
lcall
mov
or
cmp
inc
mov
or
push
lock
lds
xchg
loope
adc
daa
fcoms
xor
ja
sahf
xchg
xchg
dec
jae
add
xchg
repnz
leave
mov
mov
lea
ja
and
xor
mov
sbb
jecxz
mov
incb
or
adc
cmp
dec
pop
ja
push
out
cmp
imul
hlt
or
xchg
lock
dec
iret
mov
jbe
mov
mov
mov
rcll
out
shl
jnp
sub
jmp
fmuls
xor
stos
add
pop
and
scas
sub
scas
xchg
imul
loope
fldl
aam
xor
loope
outsl
mov
imul
adc
xor
cmpsb
mov
fcomps
scas
ds
jno
lret
add
adc
aam
pop
test
mov
lods
push
jle
test
add
cmc
adcl
sbb
xor
es
int
dec
pop
pop
ds
lea
cmp
fisubs
outsl
xor
dec
adc
imul
in
mov
inc
ljmp
push
in
sub
inc
insb
xor
movsb
pop
push
jb
fwait
ja
mov
xlat
fcmove
aas
test
dec
xchg
hlt
pop
mov
leave
sti
or
mov
and
sub
jb
call
mov
mov
push
rcll
and
jge
sbb
and
stos
es
mov
xchg
jl
movsb
add
mov
pop
stos
in
pop
mov
outsl
js
add
int
loope
inc
mov
pop
add
mov
outsl
insl
cmp
adc
cmc
mov
dec
mov
add
sbb
ja
sbb
inc
sahf
mov
les
arpl
inc
mov
insb
ljmp
mov
mov
out
shrl
inc
outsl
fmull
cmpsb
bound
call
inc
lret
xchg
mov
dec
cmpl
xor
xor
add
insb
pop
enter
adc
push
xchg
pop
outsb
mov
lcall
scas
xor
pop
and
cmp
cmp
icebp
clc
lret
scas
std
decb
bound
in
int3
int3
xor
cmp
and
adc
iret
sub
shl
add
add
xor
pop
inc
stc
icebp
pushf
inc
mov
push
insb
push
xor
cld
fdiv
dec
dec
aam
repz
in
jno
outsl
enter
mov
jle
sbb
stos
cmp
add
sbb
cmpsb
and
nop
add
out
add
arpl
es
jno
sbb
jmp
xlat
inc
jge
mov
or
sub
jb
test
jmp
lret
push
sub
add
arpl
pop
fmulp
test
lret
fists
and
jnp
xor
mov
bound
add
popf
sub
push
pushf
dec
jge
out
cld
pushf
sahf
push
aas
lds
test
mov
mov
pop
out
shll
hlt
push
gs
xor
fimuls
dec
push
ret
xchg
pop
or
or
sbb
pop
scas
stos
inc
xlat
mov
push
inc
fwait
cmpsl
enter
icebp
pop
insl
sbb
outsl
repnz
out
jno
mov
push
add
call
cmp
mov
or
jp
cmp
notb
adc
dec
mov
dec
sti
loope
insb
xchg
pop
push
sbb
xor
xor
mov
xor
jae
add
cmpsb
sub
outsb
mov
repz
inc
mov
stos
add
mov
ds
adc
or
lahf
pop
sub
cmp
andl
sub
lock
imul
out
gs
out
jbe
cltd
sbb
or
cli
out
mov
mov
adc
neg
les
mov
ds
jne
dec
mov
fwait
push
das
lret
xchg
cmpsl
mov
inc
mov
aam
aam
cli
stc
popa
xchg
inc
or
in
shl
sbb
repz
jns
mov
aam
movsl
jmp
in
je
aaa
xor
jmp
xor
add
in
or
in
or
push
xchg
inc
sbb
jno
out
jcxz
loope
les
sbb
push
test
mov
subl
add
xor
enter
ljmp
mov
jns
fbld
sub
fsts
stos
xor
rcrl
pop
and
push
jg
xor
inc
fwait
repz
jl
cmpsb
fistps
adc
loope
addr16
testl
call
mov
inc
into
out
dec
jl
dec
jg
ret
jae
sbb
shll
xorb
jge
xchg
outsb
mov
lods
lcall
xchg
loop
lea
add
push
imul
nop
shlb
frstor
rclb
xchg
cli
fisubrl
in
adc
frstpm(287
pop
add
jle
fimuls
inc
out
mov
mov
leave
push
or
leave
add
imul
xor
pop
cmp
je
cs
mov
adc
pop
mov
xlat
cmc
fistl
aas
xchg
sub
mov
cli
sub
mov
fst
xor
jg
fisttpll
mov
ror
add
jle
pop
outsb
xchg
mov
push
outsb
push
jnp
cli
pop
mov
lcall
jb
repz
dec
cld
pop
std
call
add
bnd
hlt
jp
push
push
add
int3
aam
mov
loop
fistl
push
push
loope
mulb
xchg
pop
inc
nop
push
add
data16
aaa
mov
mov
inc
pop
sahf
lcall
mov
push
inc
sub
sbb
or
xchg
mov
inc
scas
sbb
add
fstps
or
inc
cmp
xlat
or
sub
jg
arpl
mov
sbb
outsb
scas
in
mov
xlat
jge
sahf
inc
and
xchg
lret
into
xor
add
fs
sub
mov
xchg
xchg
pusha
je
cmp
cltd
dec
fstpl
or
jge
jbe
push
adc
add
je
jnp
or
push
cs
sbb
in
push
cmp
movsl
xchg
push
add
and
sub
out
lods
testb
aad
mov
sbbb
rcrl
mov
xlat
divl
call
and
mov
repnz
fwait
mov
inc
pop
stos
loopne
fidivrs
inc
int3
repnz
adc
pmaddwd
lret
adcb
add
mov
adc
lret
push
jns
xor
mov
fidivl
mov
popl
mov
mov
mov
xchg
cmp
push
shlb
mov
mov
mov
jae
xorb
sarl
ja
lret
test
mov
enter
lds
adc
jecxz
in
out
jno
enter
inc
pop
addl
popa
loopne
xchg
push
arpl
jo
dec
jecxz
sub
mov
addr16
out
imul
data16
repnz
inc
cmp
jb
roll
shll
push
movsl
mov
push
mov
cs
dec
lods
xchg
dec
aad
nop
cwtl
loope
into
dec
mov
push
jl
adcl
sbb
test
mov
test
sti
xchg
das
inc
jp
push
bound
in
sbb
xchg
in
imul
xchg
dec
inc
jle
cmp
pop
adc
jae
mov
int
mov
imul
ja
cmp
pop
pop
out
mov
shll
xchg
call
stos
jo
pop
mov
mov
xor
inc
or
stos
inc
repnz
or
rclb
or
xchg
mov
or
cltd
inc
pusha
aas
inc
inc
mov
jge
lret
dec
mov
push
jg
push
rorl
cmp
filds
xchg
and
cs
jp
jl
adc
mov
call
fidivrs
jb
mov
test
jb
sbb
popf
mov
xchg
sub
inc
cwtl
pop
push
push
xchg
daa
pusha
sub
inc
dec
in
sbb
cmp
xor
xor
jge
ljmp
xchg
mov
shlb
icebp
in
scas
add
xchg
negl
nop
subb
xor
sub
popf
xchg
call
sbb
push
cmp
ja
gs
and
ret
cli
cld
out
mov
aam
lods
inc
and
loopne
scas
and
nop
push
dec
push
sbb
mov
sbb
cwtl
insb
push
test
cmpsb
mov
cmpsb
mov
int3
cmp
adc
out
fdivrl
leave
in
mov
add
sbb
sbb
in
shrl
idiv
adc
mov
adc
xchg
jle
lahf
and
out
je
insb
mov
out
push
pop
push
pop
fildl
sbbl
js
cltd
call
mov
mov
mov
and
lods
test
clc
fcomps
inc
dec
dec
xor
cmp
pop
push
mov
pop
pusha
fistpll
cmc
in
sbb
gs
lret
add
jg
out
test
cs
addb
fnstsw
xlat
lcall
fdivrl
xor
je
sbb
inc
movsb
cli
scas
pop
pop
inc
mov
int3
sub
push
outsl
push
loopne
loopne
adc
mov
or
iret
frstor
xor
push
mov
inc
cs
test
sub
dec
or
sbb
adcb
or
in
test
movsb
sub
jle
inc
mov
outsb
scas
filds
and
test
hlt
jl
sbbl
and
inc
lahf
xor
mov
cmp
mov
inc
mov
lahf
mov
xchg
shr
es
adc
ss
mov
and
add
pop
push
orps
add
inc
adc
rcl
sbb
jne
rcl
cs
jmp
rcl
loopne
dec
mov
imulb
ret
orl
lds
out
int3
or
cmp
xchg
xchg
aas
mov
mov
dec
add
fisttps
dec
sub
ja
mov
dec
mov
and
pop
adc
fdivrl
arpl
ss
jb
sbb
divl
adc
lcall
call
out
jecxz
jbe
push
xor
lods
xchg
imul
xor
push
aam
test
test
int3
push
cltd
test
push
mov
or
xor
cmp
and
ljmp
pop
mov
clc
jg
shll
sbb
int3
dec
test
push
and
sub
cmp
pop
push
lcall
in
jge
js
cmp
rolb
cs
push
loopne
and
inc
ss
xlat
hlt
inc
int
das
xchg
push
iret
jb
add
lock
or
test
insb
lcall
adc
jne
jmp
lds
divb
cmp
ljmp
into
lds
pop
ret
sub
leave
pop
pcmpeqb
outsb
push
loop
xchg
and
adcl
repnz
and
dec
lret
mov
scas
jne
dec
sar
pop
incl
je
mov
out
add
out
ds
pop
je
jge
xor
lret
xlat
pop
out
and
por
repz
dec
xor
lods
sti
setge
dec
out
push
data16
loope
mov
inc
xor
outsb
arpl
xor
dec
mov
addb
sub
jg
repz
jle
mov
decb
shr
and
cmp
loop
fisubrs
jle
imul
jle
testl
repnz
nop
dec
sub
add
insb
jle
lods
cmpsl
or
in
adc
add
mov
fists
pop
mov
les
gs
lock
sahf
cmp
xchg
imull
mov
sbb
cmp
jo
inc
iret
sarl
lcall
mov
movsl
scas
jecxz
sbb
push
mov
shr
lock
add
es
fwait
sbb
js
sub
xlat
lcall
ljmp
in
adc
mov
mov
mov
fsubs
mov
jne
jge
fs
mov
shrl
hlt
call
dec
dec
imul
mov
ja
jbe
xchg
outsb
add
xor
les
xchg
stc
cwtl
mov
mov
iret
pavgb
aaa
aaa
lahf
clc
add
idivl
dec
jns
jno
rdtsc
jl
loope
add
aad
sub
loope
push
mov
lods
add
cltd
xchg
xchg
push
enter
pusha
fisttpl
lcall
in
pop
lods
scas
mov
mov
enter
std
mov
dec
mov
xor
cltd
cwtl
inc
or
subb
dec
cmp
push
mov
das
and
dec
mov
sub
test
ret
icebp
and
cmp
sub
push
xor
lahf
popa
aaa
aad
mov
dec
lret
movsl
xor
sbb
jns
fistps
inc
mov
mov
xor
aaa
or
ret
fwait
inc
sbb
sub
das
cmp
mov
cmpb
push
outsb
leave
outsb
xchg
shlb
push
fwait
xchg
mov
iret
insl
sti
sbbl
inc
ret
inc
roll
inc
sub
or
sub
rcll
lret
add
stos
sbb
insl
inc
xor
mov
dec
aam
mov
jbe
lcall
mov
sub
arpl
sti
cli
jns
push
loopne
test
mov
lahf
scas
rolb
divps
add
xchg
push
and
adc
std
popa
xchg
test
stos
mov
jb
xchg
push
or
in
out
je
adc
xchg
insl
mov
add
xchg
mov
bound
sti
repnz
lahf
and
out
jo
and
rclb
stc
sbb
lods
pop
mov
cmp
outsl
xor
inc
hlt
bound
mov
fcoml
xchg
lock
inc
roll
loope
test
repz
sub
mov
cltd
into
jb
ret
into
push
enter
rcr
pop
add
cs
sbb
mov
jg
jecxz
pop
out
adc
push
pop
jo
pop
xchg
icebp
insl
imul
stos
xchg
loope
push
lahf
out
shl
imull
jecxz
cli
and
into
adcb
and
inc
outsl
cltd
dec
into
push
xchg
btrl
imul
insb
and
jne
push
in
jnp,pt
push
xchg
ret
pop
and
scas
icebp
sti
add
xor
lret
lds
or
ret
mov
lahf
jae
cmpsl
fs
push
lret
lods
add
xlat
cmp
dec
dec
outsb
aam
jp
mov
stc
adc
int3
dec
aas
cmp
stc
insb
add
stos
sbb
xchg
sbb
paddb
add
xor
xchg
sbb
and
inc
lods
arpl
mov
xchg
sbb
rolb
or
fimull
divb
loopne
push
xor
mov
xor
imul
mov
fnstenv
cmp
dec
int3
lret
push
bound
insl
sbb
push
in
and
clc
int
js
push
in
sahf
mov
into
loopne
test
sub
push
les
push
add
stos
mov
pop
mov
xchg
push
pop
sub
push
dec
push
ja
in
cmp
push
insl
scas
mov
adc
out
cltd
cmp
xchg
stos
popa
jo,pt
mov
imul
ret
repnz
int
or
inc
dec
xchg
test
out
lea
push
jg
mov
and
in
stc
push
and
nop
dec
xor
dec
scas
pop
xchg
les
adc
cmpsl
sar
adc
cmpsl
fcmovnb
rcll
cmc
shrb
add
or
ljmp
cltd
sahf
andl
stos
push
iret
insb
lahf
out
das
lcall
subb
xorb
mov
lods
lods
outsb
jne
adc
sbb
dec
cmp
sub
mov
sub
sub
outsb
xchg
adc
icebp
in
xchg
push
add
mulb
idivb
cld
cld
lcall
cli
dec
testl
xchg
aad
xor
jnp
int3
clc
lods
jle
xor
test
movsl
imul
adc
stc
sub
xchg
push
paddq
out
sbb
xor
add
lea
mov
push
adc
loope
sub
dec
or
xchg
fldl
mov
sar
lahf
lock
sbb
and
dec
inc
mov
cmp
xlat
nop
mov
aad
push
xor
ret
cmp
mov
xchg
cmp
sub
pop
xlat
mov
cltd
sbb
add
cmp
fs
xor
ret
xchg
lds
inc
push
dec
xchg
shll
cmpsl
jo
sub
pop
or
loop
adc
push
aas
rol
xor
adc
add
xchg
aad
fisttpll
shll
repnz
je
jbe
ret
mov
inc
sub
or
rcrl
rcrb
pop
shll
jbe
push
addl
out
mov
aad
pop
stos
jbe
leave
or
in
lock
ss
pop
mov
jecxz
test
pop
repnz
movsl
mov
arpl
pop
add
and
mov
shll
outsb
out
sub
test
mov
dec
pop
cmp
xor
enter
loope
push
xchg
push
lea
insb
mov
outsb
xor
pop
cmpsb
fistps
cmp
stos
xor
fcoml
mov
mov
mov
pop
pop
add
adc
jp
jns
sbb
jmp
arpl
add
and
imul
lea
pop
cli
insl
mov
ret
repz
inc
test
pop
arpl
jmp
cmp
outsl
jl
dec
loope
xlat
push
sbb
jns
cmp
mov
lahf
aas
bound
les
sub
cwtl
mov
in
adc
sub
ret
xor
je
add
in
sub
out
push
imul
xchg
ds
push
adc
lret
mov
mov
fstl
and
scas
mov
shll
call
mov
push
pop
data16
lret
and
dec
enter
mov
sub
inc
xchg
jg
sbb
icebp
into
sbb
jns
jbe
xchg
stc
cmp
call
lea
pop
jle
jg
out
inc
xor
andb
test
cmpsb
ror
test
mov
mov
mov
sub
lods
cmp
out
mov
or
int
sbb
cld
test
add
and
cmp
rcrl
imul
outsl
in
dec
push
fstl
repnz
ret
xchg
lods
push
push
insl
xchg
int
fisubs
iret
int
ret
inc
push
cmp
rorb
lods
dec
test
and
sub
cmpsl
adc
pop
scas
mov
dec
jns
outsb
sub
lret
pop
imul
pop
pop
mov
popf
je
jbe
pop
out
mov
jns
mov
add
jno
mov
xchg
stc
movsl
out
push
lods
xor
stc
adc
in
push
xchg
sti
hlt
push
scas
scas
imul
ret
test
mov
pop
subb
lds
jmp
popf
out
test
lock
int
mov
jo
xchg
pop
icebp
stos
ja
add
push
cld
sbb
jl
add
inc
xlat
out
nop
dec
movsl
mull
jnp
pop
cmp
push
sub
push
jne
ret
repnz
mov
daa
dec
mov
add
add
add
cmp
stos
jnp
dec
cmp
push
hlt
push
fcomps
in
inc
int
jp
ficompl
mov
fwait
mov
push
rcll
outsl
sbb
xchg
data16
adc
jp
cld
lea
aaa
or
cmp
adc
adc
or
inc
int3
pushf
or
dec
pop
hlt
jo
sbb
mov
mov
sbb
mov
rcrb
sbb
mov
test
cmp
cmp
icebp
inc
fsubs
push
push
sahf
mov
sbb
push
mov
notl
fcmove
adc
cmpxchg
clc
rorb
or
jb
test
dec
fsubrl
mov
push
inc
mov
push
lcall
jnp
sub
rolb
in
mov
push
mov
in
fiaddl
call
mov
insb
or
push
in
outsb
push
ficomps
sbb
pushf
push
xchg
dec
rcrb
arpl
xor
mov
paddb
inc
in
hlt
cmp
daa
out
mov
or
loop
insl
mov
mov
jle
pop
xor
xor
adc
stos
mov
mov
out
fbld
jnp
outsb
call
pop
or
call
mov
xor
push
aas
sahf
mov
stc
and
ja
dec
and
pop
or
mov
aas
fwait
stc
and
mov
jg
mov
and
popa
dec
iret
mov
stos
mov
xchg
mov
xchg
dec
dec
lret
inc
pop
mov
rol
andl
and
jecxz
pop
arpl
mov
xchg
push
mov
fs
stc
add
lods
dec
push
sbb
jp
mov
lret
add
mov
je
dec
mov
sti
cmp
lock
cmp
jnp
inc
cmp
lock
dec
push
and
test
sbbl
leave
or
sbb
push
inc
mov
or
sbb
mov
fidivl
jge
iret
insb
cmp
cmc
add
lret
outsl
cmp
add
dec
out
icebp
or
test
loope
dec
or
sbb
xor
mov
fwait
mov
fmull
cmp
mov
pushf
or
jmp
insl
loop
jp
mov
das
jmp
daa
push
sub
popa
test
clc
orb
mov
int3
jge
push
std
inc
inc
mov
pop
mov
lock
and
cmp
mov
add
or
nop
dec
inc
push
lock
js
in
sahf
xlat
addb
stos
push
hlt
sbb
jnp
jne
shl
notl
mov
mov
jecxz
cmp
cmpsl
xchg
mov
imul
xchg
repz
jge
addr16
fcomps
dec
movb
sbb
dec
flds
scas
repnz
lea
incl
add
add
test
pop
xor
std
add
cmp
ret
cld
adc
jmp
ss
sbb
add
ja
push
pushf
jge
scas
jb
jmp
popf
lods
xor
sub
icebp
xchg
add
cltd
notl
test
push
shr
xor
inc
xchg
sub
fwait
or
jnp
nop
dec
cmp
jge
in
notl
outsl
xchg
movd
jge
cltd
add
rorl
js
imul
mov
pop
adc
hlt
and
dec
loop
xor
mov
test
sbb
negb
push
push
call
inc
stc
jg
xchg
enter
xchg
fstp
mov
icebp
xchg
mov
sbb
cmc
sub
adc
mov
in
std
aas
lds
sub
jg
inc
jne
cmp
cmp
lcall
inc
out
clc
mov
cmp
and
sub
add
iret
movsl
jae,pt
jl
ret
push
loop
in
bound
jne
sarb
lods
cmp
jle
mov
and
xchg
lds
lret
enter
daa
hlt
cltd
and
pop
mov
std
mov
inc
aad
mov
adc
arpl
adc
call
jg
addr16
xor
out
inc
mov
sbb
data16
pushf
jge
lods
dec
jmp
fcmovbe
pop
fsubs
sub
loop
loopne
add
dec
repz
loopne
jbe
imul
mov
lret
xchg
mov
add
push
adc
push
cmp
push
shrb
popf
jl
push
lods
adc
ds
xor
orl
aas
lock
insl
cmp
fwait
ss
pushf
xchg
rclb
push
xor
jb
int3
andnps
imul
jge
inc
dec
aam
inc
push
xor
movsl
je
xor
or
imul
clc
xor
jmp
cmc
or
out
mov
mov
cmpsl
dec
push
pop
jge
or
ficomps
and
loop
mov
test
adc
bound
movsb
cmpsl
mov
add
insl
repnz
xchg
xchg
and
ffreep
rcr
fmulp
dec
cmp
mov
sbb
jmp
ljmp
out
pop
pushf
mov
test
push
mov
jnp
lods
jle
mov
pop
add
cs
cs
sahf
mov
add
insl
sbb
cmp
icebp
sub
popf
flds
in
jl
fiaddl
mov
xorl
cwtl
sbb
test
jle
nop
jge
mov
es
xchg
inc
xor
gs
xchg
sub
cmpsb
scas
fiaddl
icebp
adc
stc
inc
insb
dec
shll
in
adc
aaa
mov
out
int3
sbb
arpl
mov
jle
in
jmp
jb
fimuls
loop
dec
cmp
or
jae
cmp
lds
push
in
scas
ljmp
pop
or
sbb
int
xlat
push
sbb
and
inc
pop
fxam
bound
shr
loope
dec
push
std
cmp
jge
push
filds
fiadds
popf
add
sub
mov
ret
jge
cmpsb
leave
mov
je
rcll
int
loop
or
xchg
jecxz
push
mov
repz
mov
xor
xchg
adc
xor
adc
jg
inc
xchg
and
enter
or
in
cli
adc
mov
adc
dec
stc
cmp
cmp
mov
sbb
mov
push
cmc
jne
dec
cmp
and
sub
data16
dec
cli
loop
pop
jne
mov
mov
mov
call
lret
in
nop
inc
pop
into
call
movsw
mov
fs
cmp
add
mov
jp
pop
flds
xchg
insb
cmpsl
mov
mov
and
mov
push
fimuls
lods
cltd
mov
hlt
jns
mov
sbb
xchg
ja
fsubl
fstpt
fucom
sub
sbb
in
pop
push
cmpsb
out
jnp
mov
cwtl
sub
pop
stos
or
add
jmp
stos
lea
or
jp
fists
fstps
sub
sti
daa
sub
mov
xchg
and
xor
in
loope,pn
fildll
lcall
faddl
pop
mov
cltd
and
adc
mov
xlat
cli
pop
cmp
xchg
ja
leave
push
fistpll
lock
int3
mov
xchg
push
mov
jp
clc
ucomiss
xchg
fs
insl
xchg
pop
xor
xor
adc
lcall
stc
xor
jbe
stos
mov
mov
aam
jp
notl
xchg
mov
pop
mov
ucomiss
stos
andl
adc
sub
movsb
lods
push
inc
int3
push
add
pop
bound
push
out
dec
rcrl
xorl
xchg
cmpsl
int
shl
inc
jg
and
cmp
jmp
xchg
mov
out
clc
aam
pusha
jecxz
test
clc
jne
dec
cmovne
inc
xchg
outsl
push
test
pusha
sarl
popf
lret
loopne
and
daa
jmp
imul
mov
mov
pop
or
cmp
test
mov
sub
push
mov
add
out
add
adc
mov
aaa
imul
mov
or
or
inc
mov
cs
fisttps
mov
jno
rcrb
pop
and
xchg
call
push
mov
lea
sbb
push
imul
inc
sti
test
cmc
int3
imul
in
int3
out
mov
addl
lds
dec
jbe
pop
inc
lret
or
adc
xchg
or
sub
xchg
ljmp
sarb
mov
ds
imul
jae
inc
xor
dec
js
jne
jno
popa
ja
dec
test
push
jns
cld
xchg
mov
mov
dec
xchg
and
test
sub
fcmovnu
enter
divb
xor
dec
sbb
ret
push
shl
mov
movsl
pushf
add
jle
push
inc
sub
sub
jp
and
je
cmpsb
add
rclb
inc
jnp
jecxz
add
sbb
ficompl
hlt
and
mov
jnp
test
lods
stos
js
cmp
inc
stos
cwtl
dec
adc
repz
lahf
adc
sbb
incb
rcrb
insl
push
ljmp
pushw
mov
lods
test
int3
ret
pop
std
test
outsl
sbb
out
movsl
inc
pop
sub
mov
repz
out
shll
inc
inc
gs
imul
loop
daa
iret
outsl
push
and
push
fs
loopne
adc
cmp
mov
fistpl
and
cmp
jae
cwtl
mov
fisttpll
and
movsl
and
stos
mov
out
lahf
mov
popf
lock
test
mov
inc
cmc
dec
mov
pop
push
pop
mov
outsl
xor
push
sbb
rcll
pop
add
cmp
jae
jno
cmp
dec
or
pop
aam
rorl
dec
outsb
push
xchg
adc
loop
inc
mov
notl
mov
aas
or
and
loope
arpl
cli
out
out
cld
jo
and
es
sub
fsubr
popf
cmpsl
ss
adc
or
adc
inc
lds
lods
add
lahf
bound
insb
dec
scas
lret
mov
out
mov
enter
arpl
stos
xchg
adc
outsl
test
call
popf
ret
out
jns,pn
testb
xor
cld
mov
loope
enter
out
pop
shrb
sti
add
test
sub
shr
pop
loope
pop
in
fwait
jns
or
shll
dec
mov
push
jmp
jg
in
movsl
rcrl
lret
push
dec
mov
adc
popf
xchg
inc
mov
inc
adc
stc
dec
jmp
fcoml
pop
dec
mov
mov
xchg
mov
sbb
pop
negb
in
and
ja
enter
addb
js
sub
cmp
out
push
adc
sub
and
sbb
dec
aaa
insb
adc
sbb
lods
sbb
pop
add
mov
aas
insb
sub
xchg
jecxz
mov
loop
lock
scas
fists
divl
enter
pop
inc
aaa
and
mov
fwait
cli
push
xor
in
xchg
data16
jb
std
adc
lret
dec
mov
shll
push
fwait
pop
and
data16
nop
sub
and
sub
cld
xchg
gs
push
xlat
in
sar
dec
scas
lods
or
nop
in
adc
jae
sub
mov
fs
push
lcall
or
cmpsb
lds
dec
frstor
xlat
cmp
mov
xor
mov
pop
outsl
xlat
in
icebp
aad
push
cmp
lret
fs
fildll
iret
orb
stos
cli
jb
jns
mov
mov
movsb
push
roll
aaa
pushf
push
pop
test
pop
mov
js
inc
les
movsb
and
dec
stos
cwtl
stos
xchg
aam
movsb
cmpsb
mov
adc
outsb
std
inc
mov
dec
cli
jb
inc
fwait
ds
mov
shrb
repz
incb
jmp
mov
popa
scas
and
sbb
dec
mov
inc
cmpsb
or
add
imull
clc
jmp
js
xchg
enter
cmp
adc
sub
les
inc
movsl
jae
xchg
jmp
cmpsl
and
es
loope
xchg
mov
jnp
lret
sub
mov
jmp
popa
inc
iret
not
test
nop
inc
xlat
add
insl
mov
dec
pushf
cmp
in
mov
mov
adc
out
ja
arpl
into
jl
xchg
test
jge
jge
push
cmp
inc
mov
sub
lods
into
scas
push
jns
cmp
add
cmpsl
lea
xor
out
stos
test
dec
daa
into
mov
pop
or
mov
xchg
aam
jno
sbb
mov
repnz
popa
imul
mov
dec
adc
pop
insl
stos
push
xchg
shrl
in
repz
or
cmpb
mov
sarb
enter
pop
lods
lods
adc
scas
sub
inc
aam
shll
mov
je
lret
cmp
loope
push
outsb
or
out
lret
das
inc
mov
inc
dec
pop
and
adc
cmp
inc
and
pusha
dec
enter
or
mov
mov
dec
arpl
lahf
xchg
fisubrl
rolb
je
mov
mov
fisubl
outsl
stos
repz
iret
cmovge
add
pusha
in
bound
dec
add
cmp
imull
ljmp
loopne
cmp
push
lea
and
loope
mov
add
out
shlb
sub
repnz
xchg
mov
pop
into
test
aam
mov
std
adc
insl
andb
cltd
jecxz
scas
push
frstor
mov
and
cmc
xor
sub
out
push
jbe
jmp
mov
ror
inc
cmp
lock
and
icebp
adc
add
outsl
dec
adc
push
loop
pushf
scas
add
pop
adc
push
sbb
mov
ljmp
loopne
movsl
jp
mov
sbb
out
inc
dec
jno
mov
jl
out
les
sub
mov
pop
rcrl
inc
push
xor
jg
cmp
jg
or
and
sbb
iret
jbe
testl
xor
pusha
mov
mov
cmp
sbb
pusha
mov
sbb
into
and
movsl
pop
inc
cmp
pop
add
or
ljmp
xchg
xchg
addr16
cltd
mov
cmp
and
dec
cld
jp
xchg
lods
pop
push
test
xchg
fadds
movsl
mov
in
lds
sub
inc
fwait
rcr
jbe
cmc
adc
or
sahf
or
inc
inc
repz
adc
jl
fdivs
jmp
jg
mov
mov
dec
sub
in
inc
scas
out
lds
cmpsb
or
jb
cmp
pop
cvtps2pd
dec
jae
pop
loopne
mov
sub
jp
inc
mov
scas
push
mov
jae
inc
lea
ljmp
lds
or
sbb
cs
mull
pop
stos
cmpsl
cmp
and
pop
lods
and
call
movsl
or
xlat
jno
adc
out
lods
sub
stc
adcb
lret
ja
cmp
cli
xor
iret
xchg
insl
lods
mov
int
shrb
leave
sub
mov
movsb
and
xchg
mov
test
jns
rorb
or
adc
leave
adc
push
inc
ljmp
lods
stc
mov
or
jae
filds
push
pcmpgtb
dec
stos
lock
ret
mov
xchg
xor
insl
loop
or
ret
fmuls
jo
ds
adc
jmp
rclb
aam
jl
mov
jp
popl
mov
mov
xor
stc
fnstcw
filds
adc
daa
mov
out
mov
mov
clc
xor
cmp
dec
sbb
cmp
outsb
fcmove
push
fldt
mov
stos
push
movsb
mov
jecxz
sbb
inc
pop
xchg
in
mov
lock
lods
mov
in
and
test
insb
jmp
out
repz
mov
dec
movsl
add
test
in
pushf
shrl
call
push
fimull
or
fs
arpl
int
ja
and
xchg
outsb
pmulhuw
xchg
and
mov
loopne
sub
inc
scas
pop
ss
insb
xchg
mov
add
popf
jne
push
clc
mov
fists
mov
leave
dec
scas
jae
rolb
mov
ja
imul
jecxz
mov
sbb
and
stc
or
addr16
sbb
cmp
sbb
and
dec
stos
in
xor
lret
xchg
mov
imul
outsl
cmpsl
outsb
xchg
lds
loopne
mov
xchg
arpl
aaa
jg
cwtl
sahf
insb
sbb
pop
mov
gs
push
cwtl
cmp
in
cmp
mov
or
clc
pop
jge
add
movsb
fwait
or
sub
insb
scas
xchg
mov
cmpsl
ret
das
jecxz
mov
jbe
in
sub
hlt
enter
mov
jmp
and
sbb
pop
test
jp
add
js
inc
adc
pop
jns
scas
sahf
int3
and
popf
mov
rclb
cmp
and
nop
jbe
cmp
push
and
insl
xchg
insb
fwait
test
mov
sbb
js
out
std
in
lahf
cltd
cmp
loope
loop
stos
lods
je
cmp
fmull
les
jmp
inc
mov
mov
cmpsl
mov
scas
rcrl
rcr
adc
mov
inc
fdivp
dec
pop
movsl
out
xor
mov
adc
inc
jle
or
iret
adc
xchg
aas
mov
mov
fidivl
add
xor
or
iret
movl
out
or
xchg
xchg
arpl
sahf
lcall
xchg
add
inc
or
stc
int
lea
inc
mov
sbb
add
push
testl
cmp
lret
dec
daa
sub
pushl
fistl
adc
xor
mov
cs
mov
es
lds
inc
pop
ss
dec
mov
iret
pop
mov
cld
mov
int3
cmp
cmp
sarl
or
jnp
out
pop
les
push
les
bound
cmp
xor
lds
or
je
rcll
ret
fsub
scas
pop
out
push
pushf
icebp
jns
mov
mov
outsl
mov
in
mov
pop
push
pop
popf
ror
mov
dec
xchg
loop
sbb
or
pop
jle
sub
lea
sahf
dec
ret
cwtl
push
push
or
loope
cs
icebp
addr16
repz
out
jbe
and
adc
mov
scas
out
repz
iret
lahf
pop
cmp
ss
pop
xor
mov
sahf
clc
xchg
cmp
fnstsw
inc
or
stos
mov
add
std
mov
xchg
mov
pop
decl
jno
popf
and
add
mov
push
je
pop
jp
test
ljmp
pop
cmp
xchg
cwtl
xor
push
daa
inc
std
cmp
mov
adc
cmp
lret
lcall
mov
aas
and
jns
lcall
cmp
push
fisttps
orb
imull
or
add
pushf
loopne
dec
or
cmc
jne
fcmovbe
xor
imul
into
and
test
stos
mov
fcmovnbe
sahf
data16
sti
inc
jmp
add
adc
xchg
adc
rcll
adc
inc
pop
lock
xchg
sbb
loop
mov
sti
in
arpl
cwtl
stc
mov
lods
push
shlb
or
sbb
and
xchg
push
jmp
aas
repz
lcall
adc
shrl
dec
cwtl
adc
push
jmp
mov
dec
fisttpl
xchg
jecxz
andb
testb
movsb
and
mov
pop
into
icebp
pushf
or
push
std
mov
adc
dec
dec
mov
lret
js
es
lret
jne
sub
test
fidivl
xor
xchg
mov
mov
jb
movsb
or
sub
pop
arpl
divb
mov
ret
fs
xor
sub
iret
push
adc
cmp
mov
push
insb
jl
stos
inc
ljmp
data16
repz
mov
movsb
jbe
out
or
push
add
add
hlt
jae
insb
pusha
push
dec
xor
mov
hlt
mov
jns
aad
ss
loope
lock
in
ja
lds
mov
xchg
push
cli
jnp
aas
fnstenv
dec
sbb
xchg
movb
jge
psubq
addl
dec
sbb
dec
fimuls
fsubs
xchg
gs
sub
mov
xchg
aas
sub
dec
sahf
pcmpgtd
movsl
test
cmp
loopne
add
fs
cmp
into
or
jbe
jnp
inc
test
iret
pop
sub
in
pop
push
in
addr16
rol
jp
shrb
inc
cwtl
or
push
jmp
lock
jmp
mov
inc
lcall
jnp
jo
cmpsb
cld
mov
mov
arpl
cwtl
mov
fwait
jmp
xor
test
in
out
mov
push
cmp
mov
sbb
add
cmp
lret
fldl
hlt
xor
aaa
or
cmp
xchg
ja
mov
loope
fdivp
test
cmp
sub
cmpl
adc
mov
in
cmp
and
lret
cld
jno
jl
sbb
dec
push
sub
push
jo
push
mov
jns
jbe
sub
xchg
or
icebp
outsb
loopne
nop
loop
adc
push
xor
sbb
les
and
jno
or
mov
mov
add
push
mov
dec
mov
jne
out
les
outsl
mov
bound
or
ja
imul
xchg
xlat
push
push
sarb
rcrb
xor
push
push
dec
jge
cs
or
mov
cmp
pushf
or
jecxz
pop
stos
daa
ds
ficoms
mov
xor
and
fiaddl
ja
cmc
adc
and
lods
push
jns
xchg
rclb
nop
mov
lock
out
push
inc
call
icebp
or
push
push
jae
sub
dec
sarl
xchg
aas
cmp
stos
shlb
or
xor
cmpsb
inc
xor
adc
and
psrld
mov
inc
sub
popl
and
ja
jl
cli
pop
pop
repz
dec
lahf
cmpl
sbb
cmp
fildll
ror
mov
mov
jns
jae
fiadds
nop
out
jne
dec
xlat
cmp
sbb
outsl
pop
aas
jge
sbb
fadd
push
jo
sub
fsubrs
mov
cli
dec
pop
pop
pop
js
lret
jle
ret
das
mov
fiadds
mov
inc
negl
cmp
add
ljmp
cwtl
cmp
sbb
sbb
pop
fwait
sbb
subb
je
into
filds
imul
xchg
xor
sarl
push
mov
jl
setg
stc
shl
dec
cmp
jb
dec
add
flds
pop
popf
jns
imul
xchg
jle
fucomi
loop
fldt
popf
ljmp
out
xor
mov
pop
cmp
push
incb
cwtl
cmp
xchg
adc
mov
das
cs
pop
ret
inc
jg
cmpsb
in
imul
das
xor
push
mov
inc
gs
iret
inc
mov
outsb
insl
repz
lods
sub
call
cmc
jnp
xchg
mov
mov
pop
dec
inc
ret
dec
sub
sti
data16
xor
data16
mov
pushf
dec
repz
inc
movlhps
cmpsb
add
sub
insb
xor
test
out
sub
verr
mov
dec
popf
push
adc
jge
mull
sbb
lahf
lcall
xchg
jg
in
jae
out
enter
dec
bound
mulb
cmp
and
test
jl
mov
push
push
ret
inc
loopne
subb
mov
inc
mov
push
mov
sahf
cmp
xor
pop
add
int3
pushf
add
push
push
test
jb
jb
xchg
push
std
xor
out
push
push
pop
jle
mov
sbb
jno
add
popf
lret
xor
ljmp
fcoml
test
cs
addr16
mov
jb
mov
rorb
push
and
bswap
mov
loope
std
or
not
xor
scas
push
pop
nop
out
mov
movsl
push
mov
cmpsb
fisubl
lods
inc
shr
xchg
lret
jb
imul
cs
fs
sub
cmp
mov
iret
add
fldenv
dec
push
lret
fildll
push
inc
mov
jo
mov
dec
and
xor
adc
adc
cmpsb
jbe
mov
mov
push
scas
js
aad
sti
xchg
pop
movsb
cwtl
mov
mov
lock
dec
adc
mov
xlat
mov
scas
jno
adc
push
daa
dec
pop
push
ljmp
cmp
mov
add
push
cmp
ja
and
xchg
push
incb
rcrl
xlat
aad
fisttps
in
pop
scas
arpl
lea
fiadds
std
popl
fstpl
inc
ds
mov
cmp
jg
imul
sub
rcl
xor
pop
fmuls
nop
shl
hlt
push
xchg
xor
jno
xchg
lock
in
repnz
lret
or
push
inc
mov
jmp
cmp
inc
shl
out
cmpsb
sbb
outsb
cmp
push
das
mov
dec
out
mov
out
lea
in
insb
cmp
je
loope
out
js
flds
stos
mov
ljmp
jo
cmp
ret
mov
lcall
pop
push
xor
dec
sbb
cmp
rcll
das
ss
sbb
sti
iret
insl
in
dec
out
movsl
push
aad
or
mov
shrb
daa
das
pop
dec
sub
sub
push
xchg
sbb
jb
addr16
nop
fimuls
cmp
pop
test
or
inc
out
mov
stos
and
sti
fmull
mov
mov
sbbb
sub
mov
sbb
xor
arpl
jge
mov
jo
jae
mov
nop
ret
mov
dec
pop
mov
jo
pop
in
aam
sbb
push
cltd
ja
ds
aaa
inc
inc
xlat
mov
fwait
or
stos
add
popf
insb
xchg
lret
xchg
mov
repnz
idiv
jnp
imul
add
pop
icebp
shrl
fwait
mov
cmpsb
imul
push
out
ja
adc
fwait
sub
jle
inc
sub
in
ret
cmpsl
aam
jg
push
lods
std
pop
or
mul
cmpl
loope
or
push
and
repz
push
and
sub
movsl
mov
je
or
aad
cmp
loop
mov
scas
pop
sub
mov
xlat
jo
push
sub
adc
push
lcall
xchg
adc
nop
clc
xor
xorb
pop
xor
cmp
pop
dec
mov
push
push
popa
xor
xchg
lods
stos
in
and
mov
mov
clc
test
pop
pop
inc
dec
mov
lahf
scas
xchg
mov
jne
mov
mov
cmpsl
adc
mov
xchg
sub
scas
dec
mov
push
rclb
jb
sub
fs
or
mov
fimuls
xchg
cmpsb
je
sbb
pop
dec
push
outsl
shll
pop
dec
mov
xchg
pop
xchg
call
mov
das
jle
es
push
adc
aad
mov
push
pop
push
push
mov
hlt
pop
and
xor
scas
add
mov
std
aad
xchg
cmp
mov
ja
or
js
loop
sub
inc
adc
mov
aad
mov
int
xchg
gs
dec
in
xlat
adc
push
popa
movsl
int
mov
adc
sbb
inc
jge
addr16
adc
xchg
push
mov
dec
aas
xchg
ljmp
mov
jns
sbb
and
xchg
punpckhdq
xor
cmpsb
daa
lods
adc
out
add
push
xchg
rclb
jp
pop
cld
and
mov
xchg
cld
sub
xor
icebp
cmp
pop
sub
push
cmp
sub
test
daa
cmp
jns
pop
sbb
add
into
outsb
enter
jmp
scas
clc
mov
nop
in
icebp
jge
out
jnp
xchg
add
arpl
cmpsl
inc
mov
mov
ret
mov
shlb
frstor
mov
mov
sub
xchg
ficomps
addr16
popf
jge
mov
adcl
je
jle
mov
push
out
inc
mov
cli
xchg
stos
fs
into
mov
clc
and
push
add
popa
jmp
push
arpl
xor
mov
dec
push
mov
push
bound
mov
stos
call
xor
mov
inc
daa
pop
in
inc
scas
mul
out
std
test
sti
jne
movsl
aam
xlat
sub
in
lahf
xlat
sub
fmull
mov
stc
imul
and
push
cltd
fs
dec
shll
sarb
std
add
inc
inc
pop
mov
sub
imul
cmc
adc
fs
int3
test
aaa
jno
sub
lods
iret
dec
arpl
mov
test
rcrl
sub
sahf
sahf
mov
cs
jno
push
js
cmp
insl
push
push
lock
call
jp
fsubrs
mov
inc
sti
mov
push
pop
or
dec
push
sbb
mov
pop
in
adcl
cltd
pop
xlat
outsb
mov
jnp
faddl
adc
mov
push
and
xor
shlb
fildll
cli
push
add
ds
push
sub
adc
lds
fnsave
je
dec
pop
mov
mov
aaa
jmp
imul
popf
jb
pop
arpl
and
ljmp
test
cmpsb
xor
fildll
aaa
add
dec
xor
enter
dec
mov
imulb
bound
test
push
inc
push
out
loope
bound
dec
xlat
subl
das
lcall
dec
insl
pusha
sub
sub
push
cmp
arpl
jae
fs
dec
xchg
jns
inc
repz
push
cli
dec
jge
out
jo
addl
xchg
in
icebp
aaa
pop
lods
push
push
stos
xchg
das
push
xlat
and
inc
pop
cs
in
xchg
xchg
leave
fbstp
inc
xchg
daa
ja
insb
inc
addr16
popf
xorb
fnstenv
inc
or
rclb
adc
std
mov
sbb
pop
xchg
adc
cmp
stc
and
lret
hlt
mov
out
or
fcmovb
sbb
lcall
je
js
xchg
mov
lock
jg
and
add
mov
neg
push
mov
ja
mov
sbb
out
loope
xchg
js
dec
lret
test
pushl
sub
xchg
adc
adc
pop
out
inc
ret
shrl
les
jb
daa
fistl
scas
addr16
sub
movsl
imulb
xchg
xor
into
subl
lahf
push
aaa
leave
push
add
pop
dec
cmp
fs
int
sbb
daa
push
sub
mov
popf
mov
out
sub
jns
std
push
or
loop
mov
adc
loopne
sbbl
jbe
add
es
adcl
sub
dec
sub
fdivrs
adc
inc
cmp
sub
fnstcw
lock
js
push
cmp
iret
jmp
and
pop
lret
jg
push
icebp
popa
stos
sbb
push
pop
jnp
pop
das
cmpsl
mulb
stc
dec
lret
es
adc
jg
jle
cmc
repnz
jae
adc
push
shrb
ja
loopne
movsl
xchg
mov
add
shlb
adc
scas
outsl
fidivs
out
add
sarl
mov
sub
ss
jge
lret
jo
dec
mov
push
xchg
and
sub
mul
es
cmpsb
jge
sti
pop
sub
cmp
inc
cmp
mov
dec
mov
push
adc
cld
ret
xlat
pushf
xchg
cltd
jle
repnz
ret
sub
xchg
pop
jg
mov
mov
loope
call
xchg
mov
decl
xor
jle
loope
lods
inc
outsb
mov
dec
cmp
mov
sbbl
pop
sub
divps
cltd
xor
pop
imul
shrb
push
dec
xor
jecxz
push
bnd
add
cmc
mov
test
fcompl
iret
mov
in
sti
xchg
inc
mov
cmp
ja
mov
jne
enter
inc
xchg
jge
orl
aas
mov
movb
add
jae
cltd
lea
in
stos
cwtl
or
and
sub
xchg
hlt
ret
pop
lds
hlt
mov
fistpll
jbe
popf
mov
ret
arpl
jno
lods
subl
in
push
inc
fadds
pop
mov
cmp
scas
add
xor
int
imul
inc
mov
jmp
lods
mov
hlt
mov
xor
lcall
push
mov
gs
pushf
pushw
cmpsb
dec
lods
jns
cmpsl
inc
xchg
mov
sbb
out
in
roll
pop
lret
in
ret
clc
cmp
mov
or
stos
stc
inc
add
repz
movsl
xchg
iret
add
mov
test
imul
mov
jns
fcoms
jbe
cs
dec
and
call
loop
push
ficompl
into
dec
ljmp
fbstp
loop
cmpsb
xor
fcmovu
nop
dec
arpl
test
and
out
fsubrs
lock
sub
add
js
mov
test
xchg
jbe
es
adc
jp
pop
out
scas
add
fwait
popf
inc
mov
dec
pop
rcr
xchg
enter
lds
adc
cmc
stos
pop
int
mov
jg
orb
loopne
or
dec
or
stos
imul
fsubr
fmul
cmp
ret
pop
mov
lods
lds
pop
in
test
jb
xchg
call
jecxz
arpl
jge
xchg
int3
cmpsb
pop
xor
loop
ss
adc
cmp
push
lods
sub
add
and
out
mov
sub
jge
notb
pop
hlt
cmp
cmc
mov
add
mov
adc
aam
xor
push
out
jmp
sub
and
dec
xor
mov
jle
shlb
mov
dec
imul
cld
jl,pt
leave
cmp
iret
xor
movsl
cmp
es
pop
rorb
ds
xchg
and
loopne
loopne
mov
inc
fsubrl
xchg
adc
in
add
or
add
in
std
jno
jg
std
test
jecxz
or
gs
shrl
sbb
adc
jb
and
imul
cld
stc
mov
js
mov
clc
xchg
fmuls
aam
mov
jno
or
mov
or
mov
leave
daa
xor
and
fsub
jb
adc
popa
sub
rorb
movsl
push
cwtl
nop
roll
clc
mov
dec
loopne
insl
mov
dec
lahf
pop
sbb
mov
adc
pop
push
cltd
mov
push
lahf
lods
mov
xor
mov
stos
hlt
mov
xchg
dec
push
push
pop
sbb
or
scas
xor
jnp
lret
sbb
mov
inc
pushf
xchg
adc
mov
mov
test
je
and
lock
call
xor
test
fwait
shrb
fs
lret
inc
call
xor
mov
pop
hlt
aad
jecxz
ret
cmp
jb
pop
jae
mov
gs
cmp
and
gs
push
lret
dec
mov
push
cmp
dec
mov
sbb
addb
hlt
mov
mov
cmp
rolb
fdivrp
test
inc
cmp
xchg
pop
and
sub
test
pop
fdivl
and
sub
sub
adc
lods
jbe
cltd
add
mov
iret
mov
mov
aaa
adc
lcall
es
sub
repz
cmp
stc
jno
jmp
inc
adc
xchg
mov
sub
and
xchg
fistps
movsl
scas
insb
mov
repnz
mov
sub
ja
das
push
gs
sub
push
lock
fcmovnu
push
and
es
mov
mov
pop
aas
aas
jo
aas
mov
mov
testl
outsl
sbb
test
je
jb
das
pusha
push
enter
inc
xor
fs
push
add
jns
sub
mov
out
fisubl
push
push
scas
adc
jae
cltd
sbb
movsb
cli
jge
mov
pop
mov
pop
aas
xchg
scas
das
and
sarb
in
out
push
inc
mov
insb
roll
das
loope
dec
rcrb
nop
ja
aas
mov
mov
xor
sbb
or
cmp
adc
push
call
imul
movsl
icebp
jle
jno
scas
shrl
jb
sub
fsts
ficoml
cmp
mov
es
loop
pop
sbb
mov
jge
in
out
pop
or
rcrb
mov
inc
push
pop
adc
test
hlt
fidivrl
sub
addr16
push
jno
xchg
sub
mov
mov
dec
int3
cwtl
mov
add
imul
xor
fs
int3
leavew
into
fildll
int3
scas
enter
push
mov
xchg
rorl
rorb
vprotq
movsl
fwait
nop
mov
xor
lea
decb
or
pop
cmpsb
or
jecxz
pop
je
pop
dec
push
xchg
xchg
push
adc
jno
divb
nop
sahf
xor
add
jnp
lods
mov
mov
xchg
xchg
repnz
pop
jns
push
cld
jnp
aad
test
sub
mov
cmp
call
jp
push
cs
cwtl
mov
jmp
add
sub
pushf
andb
sbb
dec
aaa
popa
mov
add
shlb
aam
dec
insb
rolb
xchg
rolb
xor
xchg
jg
nop
lds
test
xchg
shll
push
pop
cmp
push
add
xor
popa
adc
push
addps
cmpsb
xchg
out
mov
fildll
mov
dec
inc
out
jl
in
mov
jmp
in
ds
xchg
mov
pop
mov
and
pop
vpshldvq
mov
xchg
jp
mov
push
adc
mov
pop
cmpsl
mov
cs
hlt
dec
jg
xchg
imulb
jno
dec
insl
mov
push
data16
ljmp
icebp
and
mov
repnz
and
sub
push
dec
pushf
shr
scas
mov
xor
xchg
pop
ja
dec
out
and
jge
adc
std
jb
mov
jnp
test
dec
jle
sbb
or
pop
incl
and
push
or
xor
push
cli
pop
inc
stos
sub
and
loopne
out
jbe
adcb
insb
mov
bound
pop
lea
push
jnp
loope
es
lret
push
mov
and
inc
stos
jno
fldcw
adc
mov
push
jle
add
xor
sbb
cltd
popf
sub
shrl
hlt
mov
or
cmpl
nop
outsb
in
pop
mov
jae
mov
iret
loop
mov
pushf
mov
dec
enter
pop
pushf
cmp
sbb
xchg
outsb
adc
mov
jnp
in
orb
leave
add
cmpsl
lret
shlb
loope
add
adc
mov
ficoms
fsubl
test
aas
dec
push
cmpb
adc
mov
test
imul
in
orl
into
cmp
cld
mov
jno
cmp
pop
mov
adc
push
test
ljmp
ror
mov
ss
jns
mov
inc
sbb
mov
fs
das
push
dec
daa
pop
lock
and
popa
cmp
or
lock
or
jge
push
cmp
popf
adc
mov
inc
in
adc
mov
jne
push
jnp
add
lahf
popa
aam
mov
daa
test
jae
sub
sbb
mov
in
into
jmp
lahf
scas
jle
adc
arpl
inc
mov
pushf
add
push
jecxz
dec
lret
arpl
and
ds
cwtl
es
mov
push
mov
inc
leave
ljmp
sahf
ret
aad
test
jmp
jno
push
das
orl
pop
jmp
jne
in
dec
test
dec
in
jbe
and
pushf
dec
add
ret
add
imul
jp
mov
cmp
inc
inc
lock
and
imulb
jp
inc
cmp
lods
in
jae
dec
out
pusha
subb
push
xorl
sahf
jb
inc
cltd
mov
out
test
addb
mov
sbb
push
hlt
addr16
stos
lcall
jecxz
aad
cmp
out
scas
jae
in
adc
in
mov
mov
mov
and
jo
pop
cmovs
add
testb
popf
lods
pop
mov
pop
mov
in
pushf
lods
jnp
popf
faddp
popa
sub
lds
fwait
ss
mov
push
push
xor
aas
sub
lahf
fimuls
sbb
adc
inc
cmp
hlt
xor
xor
jmp
mov
aam
dec
mov
dec
adc
add
fcoml
popa
mov
sbb
hlt
dec
or
out
aas
das
out
repnz
out
stc
cmp
jmp
dec
add
sahf
sub
ljmp
out
mov
rcll
orb
add
jmp
aad
adc
xchg
push
aas
xchg
jno
cs
lock
sbb
dec
lods
xchg
fmulp
ds
daa
dec
pop
jl
lret
inc
jg
or
mov
subb
push
inc
dec
stos
and
xchg
mov
xor
jecxz
mov
xchg
inc
js
xor
mov
xchg
and
dec
hlt
xchg
repnz
xor
xlat
push
pop
sbb
inc
ds
stos
in
pop
xor
out
pusha
mov
je
xor
insb
roll
mov
addr16
pop
cwtl
pop
daa
js
cwtl
sbb
sub
les
push
les
push
pop
aad
aad
out
les
push
pop
stos
dec
pop
cmpsl
decb
ljmp
fnstenv
and
repnz
sub
mov
cmp
cmpsb
aas
jmp
jno
loop
push
adc
aaa
push
out
mov
jg
jle
movsl
mov
pop
add
movsl
ljmp
jb
sub
test
js
fs
mov
mov
and
jns
xlat
jl
dec
mov
xchg
push
mov
push
sub
push
loop
and
mov
jo
xor
push
daa
pop
xchg
mov
jae
jle
jl
daa
fs
movsb
testb
pusha
test
pop
pop
pusha
and
pop
insl
pop
or
sahf
dec
ljmp
adc
mov
int3
add
popf
mov
flds
fldl
xor
sub
and
insb
push
std
rcrl
mov
push
mov
or
lods
xor
mov
cli
xor
inc
scas
inc
stos
dec
add
pop
mov
push
insl
lahf
jge
adc
cmp
lret
push
pop
out
mov
pushf
cmpsl
and
pop
test
roll
aas
mov
jbe
ljmp
mov
int3
xchg
repz
loopne
outsl
test
scas
insb
in
ret
xchg
add
and
les
lret
adc
ss
iret
push
push
inc
fisubrl
mov
and
call
lret
mov
jge
aad
clc
sub
fucomp
fisttpll
sbb
int
xchg
push
mov
adc
stos
mov
add
pop
fstpl
add
out
mov
inc
sbb
pop
call
dec
xorb
xchg
pop
ds
dec
xchg
push
sbb
subb
in
jne
cmp
mov
cmp
or
push
movsb
ficoml
xchg
in
popf
neg
rcr
hlt
movsl
mov
ret
or
sbb
scas
sbb
pop
jbe
subb
mov
ror
inc
xchg
enter
inc
cmp
sbb
test
add
aaa
mov
adc
xor
mov
test
inc
fistps
sahf
pop
iret
int
movsl
adc
xor
hlt
jb
inc
lahf
pop
sub
pop
roll
inc
das
dec
mov
sbb
es
cmp
aam
imull
add
mov
test
mov
js
pop
fs
cmp
push
jae
lods
jbe
imul
jne
pop
mov
mov
fnstcw
jnp
xor
adc
pop
arpl
loopne
xor
push
push
dec
push
ss
mov
and
pop
lods
loopne
mov
and
adc
mov
mov
pop
rorb
pop
mov
test
scas
imul
adc
cmp
and
nop
into
pop
ljmp
lahf
aas
cmpl
xchg
or
adc
imul
jge
out
jge
in
js
xchg
rcrl
lods
sub
daa
shlb
mov
pop
nop
ret
xor
js
sbb
mov
aad
cwtl
or
mov
cltd
hlt
fwait
testb
sahf
jge
jmp
imul
fisubrs
shlb
pop
lock
xchg
ja
mov
pop
cmp
pop
jno
or
fwait
cmp
dec
incl
mov
lret
xchg
inc
dec
jns
test
dec
leave
push
jle
lock
jmp
imul
pushf
push
scas
rcl
testl
xchg
cmp
jno
shlb
inc
outsl
add
mov
movsl
cmp
inc
cmp
mov
cwtl
push
adc
pop
sub
jbe
or
sbb
mov
sub
sbb
aad
xor
lea
sar
xor
lret
or
mov
xor
test
push
cmp
adc
addr16
shrb
es
call
sbb
insb
in
push
jecxz
dec
sub
xor
fnstsw
adc
fdivr
pop
cmp
and
and
popa
and
xor
adc
sub
sbb
cmpsb
add
fdivp
dec
mov
add
outsb
lcall
sub
xor
into
xor
mov
sub
icebp
dec
data16
loope
dec
xor
pushf
jle
jmp
pushf
jno
and
sbb
cmpsl
or
popf
jmp
mov
xor
aam
addb
push
sub
sbb
pop
push
stc
sahf
jb
push
sbb
insl
mov
ja
adc
inc
mov
mov
fnsave
fcoms
mov
out
xchg
inc
sbb
mov
aas
hlt
out
lds
jp
cltd
out
or
fs
call
cmp
repnz
lcall
adc
adc
fwait
roll
add
or
pop
lret
daa
and
sbb
inc
fs
and
jmp
push
das
iret
loope
lahf
sbb
and
cmp
adc
shlb
fisubl
mov
int3
or
out
mov
jge
rolb
add
cwtl
test
mulb
push
mov
sub
loopne
ficompl
cmc
std
in
and
inc
lods
mov
pushw
mov
jo
fmuls
xlat
cwtl
hlt
add
push
sub
call
cmp
mov
xchg
imul
call
sbb
iret
roll
scas
pop
lret
adc
and
test
sbb
pop
enter
pop
fistl
mov
les
repnz
dec
or
repnz
out
ljmp
ret
add
dec
sbb
mov
sahf
add
sbb
jns
mov
repz
add
iret
add
jbe
xor
ficoms
mov
in
cltd
adc
das
ret
je
xchg
xlat
scas
nop
cmp
push
mov
sub
cmpsb
push
in
sub
pop
ret
jge
or
or
dec
dec
mov
mov
es
xor
insl
sbb
dec
popf
clc
mov
fldt
xor
cmpsb
mov
dec
push
pushf
iret
int3
ss
pushf
leave
mov
add
jno
stc
std
xorl
scas
cmp
fstl
out
aas
ljmp
in
jle
fisubl
mov
pop
adc
enter
js
push
test
xchg
jecxz
lret
or
dec
dec
shrl
jmp
jno
or
xor
cli
lock
into
shl
jp
cmp
or
xchg
mov
push
rorb
xor
je
ret
ret
out
dec
jbe
int
push
std
rorl
aas
xor
pusha
mov
lock
xor
or
and
pop
jecxz
add
cmp
sub
test
les
mov
push
stos
fwait
inc
fbld
jno
xchg
mov
jle
jg
mov
stc
ds
push
dec
ja
shlb
lea
push
loopne
mov
jno
or
add
xor
ja
sbb
out
add
stos
inc
cmp
lock
in
shl
lret
out
je
data16
and
xchg
sbb
fiaddl
aas
jle
jle
imul
mov
in
int3
and
cmpsl
add
aas
data16
cmpsb
leave
mov
in
fxtract
sahf
push
push
inc
inc
cmp
jg
jno
lahf
push
mov
sbb
sbb
mov
pushf
inc
sbb
pop
or
int3
sbb
mov
out
jo
xchg
and
outsl
xchg
cmp
popf
stc
jecxz
test
adc
adc
andl
pop
xor
aaa
inc
xchg
and
call
jmp
cmp
pushf
pop
dec
mov
add
insb
aam
or
add
test
cmp
loopne
es
loop
aaa
sbbl
cli
les
out
fadds
jb
or
je
testl
inc
cmp
js
add
rclb
add
push
aad
or
sub
dec
ss
cltd
rorb
dec
cmp
push
lret
insl
pop
js
ljmp
mov
pop
in
shll
cmpsb
stos
sub
iret
aaa
jo
pop
xor
int
sbb
cmp
jo
sar
cmp
inc
aam
pop
rolb
gs
iret
cmpsl
xchg
jge
dec
lea
add
fldenv
popa
adc
jno
js
lahf
pop
mull
lret
push
in
jle
pop
outsb
or
add
repz
pop
jo
or
sub
jmp
jno
test
jge
adcl
jnp
xchg
xor
sti
fists
xor
add
cld
sti
sar
cld
faddp
fucomp
popa
add
cmp
add
stc
cmp
movsl
out
std
mov
sub
fistl
mov
or
sub
ljmp
dec
mov
sub
cmpsl
xor
mov
push
xor
loope
adc
push
into
loop
dec
clc
mov
sub
push
mulb
inc
jns
mov
daa
cmp
fwait
mov
addr16
push
sbb
mov
loope
inc
sbb
ret
xchg
pop
sbb
or
add
shlb
ret
xchg
fldl
fistl
xor
mov
pop
adc
pop
pusha
dec
xor
push
loop,pn
hlt
icebp
and
cmp
cmp
xlat
addr16
in
jns
fimull
clc
cmpsl
mov
dec
push
mov
add
call
notb
clc
les
xor
xchg
jmp
mov
je
mov
mov
mov
into
out
add
std
jne
push
std
pop
mov
fwait
jns
cmpsl
and
push
jo
roll
imul
xchg
std
aam
jmp
jns
cmp
cmp
push
mov
insb
imul
frstor
add
push
andl
sub
cmp
out
loope
mov
push
and
add
dec
xor
xchg
xorl
add
aad
loopne
je
or
jo
sub
ss
lret
push
xchg
repz
mov
cld
pop
cmp
adc
push
sti
sarl
lods
scas
xor
push
or
rcrb
clc
fisubrl
cmp
adc
outsb
arpl
inc
scas
mov
pop
pop
incl
stos
sarb
add
idiv
test
jno
jmp
das
rcrb
add
push
xor
lods
add
cmp
pop
leave
mov
xor
adc
inc
jb
xor
in
mov
loope
outsb
in
clc
sbb
cli
sti
daa
inc
sub
cmp
push
int3
jns
lock
or
cmpsl
cmp
shr
fs
cltd
dec
cmpsb
and
sub
imul
stos
and
loope
jns
adc
out
fnstcw
ja
push
adc
out
mov
cld
fcmovne
xacquire
imul
push
in
add
push
lcall
xor
das
mov
lds
inc
sub
scas
pop
adc
outsb
add
dec
sbb
xchg
add
in
test
inc
nop
jp
or
mov
lret
lret
inc
push
xchg
pop
xor
enter
inc
mov
out
or
lds
leave
xor
or
add
and
pop
aad
aad
imul
ja
pop
into
out
bound
cltd
ds
rclb
xchg
and
pop
cmpsb
push
pop
movsb
xor
cmpsl
xchg
andl
leave
or
shr
mov
dec
add
cmpsl
into
mov
add
add
adc
inc
xlat
mov
push
pop
jmp
repz
addl
jle
mov
lcall
out
fistpll
mov
popa
addb
cmpsl
popf
add
rolb
add
push
fidivrl
in
aam
sti
xchg
xor
in
pusha
cmp
int
add
and
mov
pop
scas
pusha
dec
sub
push
ror
sbb
jbe
sbb
scas
xor
mov
jle
scas
jmp
xor
adc
repz
cmp
dec
mov
cli
imul
movsl
and
inc
add
pop
and
sbb
adc
lds
and
shll
outsl
jmp
jecxz
xor
cmp
pop
out
jl
sbb
popl
cmp
dec
push
addr16
cmp
inc
xchg
scas
push
in
rcr
sub
lock
sarl
inc
iret
scas
xlat
pop
scas
ss
ljmp
jle
inc
sub
call
pop
fnsave
pop
sub
lcall
xor
or
ret
out
rcrl
fwait
push
call
stos
jp
stos
jb
cmp
push
rclb
jge
dec
repz
ljmp
icebp
push
push
and
mov
push
and
das
jnp
fmuls
mov
adc
jns
incb
push
stos
test
pop
fstps
or
pop
arpl
lret
cs
out
xchg
ljmp
in
sub
loope
push
movsl
iret
dec
and
ret
daa
push
dec
fdivr
cli
jle
and
dec
arpl
xchg
mov
outsl
dec
adc
inc
pushf
enter
xor
pop
pusha
shl
inc
rcrb
test
addr16
insb
jo
jg
mov
divb
clc
sbb
fsubl
and
jns
mov
jne
cmp
call
push
popa
ret
repnz
aaa
or
cli
mov
mov
sub
sub
dec
sub
cmp
sub
xchg
cmpsb
cmp
add
lea
int3
pusha
pop
les
inc
and
xor
fdivl
jl
sub
xor
lock
mulb
jae
or
loopne
cli
movsl
jb
aad
inc
dec
mov
outsb
mov
inc
xchg
xchg
int3
es
inc
add
or
fadds
pop
xor
dec
shr
aad
shrl
insl
in
ret
inc
orl
stos
sti
add
clc
lret
sbb
cmpsb
lock
push
pop
int
xchg
dec
pop
int
rcrb
jno
xchg
jge
xor
push
push
sar
stos
enter
cmp
push
mov
fwait
pop
jnp
in
cwtl
jge
cmp
aad
jno
xchg
mov
loop
ret
mov
mov
insl
inc
lcall
xor
xor
je
jp
data16
mov
popa
test
gs
mov
push
adc
jge
rcrb
xchg
in
lea
daa
into
flds
inc
sahf
cmp
daa
fs
inc
lea
dec
adc
push
xor
add
jno
adc
push
addr16
or
pop
addr16
lock
and
cld
lret
jmp
adc
pop
mov
cmp
in
push
xlat
dec
aaa
sbb
or
lret
pop
mov
rcr
fmuls
dec
or
out
std
roll
cmp
jmp
lcall
jb
xor
pop
push
mov
mov
mov
pop
push
pop
sahf
sub
shll
fisttps
movb
mov
ds
mov
jge
out
mov
aas
movsl
mov
pop
xor
nop
cwtl
mov
int3
sti
jo
pushf
les
lret
adc
inc
cmp
les
pop
loope
icebp
shrb
lods
mov
add
cli
or
stos
scas
out
sahf
adc
sti
hlt
adc
dec
loope
sarb
lods
push
std
jbe
imulb
aad
add
popf
inc
sbb
push
mov
jo
pop
dec
aas
jl
xor
dec
or
pop
loopne
stos
sahf
mov
gs
sbb
jmp
push
inc
lret
mov
adc
sub
je
jo
imul
cmp
gs
jle
dec
dec
mov
add
sbb
cli
loope
jnp
aad
jnp
xor
or
push
cltd
cmp
pop
and
pop
mov
call
bound
ss
outsb
dec
adcl
or
lret
mov
popf
jg
negl
shl
push
mov
mov
cmp
push
or
jle
and
mov
stos
and
inc
fiadds
fmuls
xor
xchg
imul
and
clc
lods
popf
ss
pop
pop
pop
dec
in
adc
sahf
rcr
add
outsb
fwait
lods
test
or
ds
out
insb
add
incl
mov
xor
pop
test
out
xchg
cld
into
pusha
sbb
xchg
inc
div
mov
jb
xchg
cs
and
jecxz
xor
jmp
lahf
xchg
fidivrs
cltd
rcr
xchg
out
add
scas
fldenv
pop
adc
mov
mov
jecxz
xor
daa
ret
mov
mov
iret
or
sahf
add
cmp
inc
mov
adc
jno
sub
imulb
scas
xor
outsb
inc
shl
sub
jle
jo
mov
push
and
fnstcw
in
cmp
lods
and
rcll
fwait
enter
leave
jg
in
test
mov
js
mov
orl
jg
push
pop
add
pusha
lock
pop
int3
jmp
sub
xor
dec
jl
lods
mov
fidivs
decl
cmp
arpl
mov
imul
xor
mov
shl
sub
adc
push
pop
push
inc
nop
cmp
add
pop
popf
jno
enter
adc
into
sub
std
push
cmp
decb
mov
repnz
and
add
inc
jp
jp
jl
adc
lahf
xchg
in
sbb
pop
inc
adc
mov
xor
incl
and
mov
cli
insl
notl
sbb
mov
jge
loop
call
adc
sub
arpl
add
enter
inc
mov
mov
pop
push
push
pop
mov
mov
cmpsl
jne
mov
std
sbb
mov
push
fisubrs
ror
cltd
push
push
scas
into
cmp
cmp
sub
lock
lret
xchg
mov
jp
imul
inc
or
std
inc
ret
mov
xchg
aam
fistl
dec
mov
xchg
cwtl
cld
lcall
ret
sbb
sub
pop
movsl
insl
lret
xchg
div
jecxz
sub
mov
mov
or
or
fnstenv
pop
outsb
push
pop
mov
nop
pusha
mov
popa
adc
orl
xchg
push
imul
pop
lea
jne
hlt
sbb
vmread
cmp
inc
jbe
mov
xlat
fbld
mov
xlat
mov
sbb
stos
js
dec
shlb
sbb
jne
push
sub
mov
ret
hlt
push
testl
sahf
xor
daa
xchg
push
ds
push
cltd
aaa
inc
jae
jmp
xchg
sti
push
mov
sbb
mov
and
push
rcr
lock
cmpsb
mov
in
sbb
mov
push
les
jno
mov
movsb
xlat
mov
cltd
or
les
xchg
pushf
pop
pop
jbe
movsl
aad
jl
pop
xchg
faddp
insb
scas
mov
fcoms
mov
mov
sbb
repnz
push
jb
mov
pop
push
mov
cmp
jle
push
sub
adc
out
stc
push
sbb
mov
into
dec
add
mov
stos
xor
ja
in
sbb
and
sbb
mov
in
lea
insb
lret
push
xchg
sub
inc
adc
out
adc
sub
jne
sbb
stos
ds
scas
jns
ljmp
mov
loopne
out
frstor
push
push
sbb
inc
cmc
add
fmulp
out
fisubs
push
jae
push
pop
jmp
jge
push
lret
int
cwtl
mov
push
xchg
aas
dec
push
rcl
and
xor
repnz
adc
xlat
aaa
rcrl
cmpb
mov
cld
push
pop
push
pop
inc
ret
pushf
jmp
in
lock
push
ljmp
adc
and
flds
mov
or
mov
iret
sti
and
cmc
sub
inc
fnstsw
xchg
adcb
jb
mov
xchg
pop
les
push
test
cltd
mov
shrl
dec
aaa
jb
xor
ja
mov
xchg
outsb
mov
scas
inc
and
sbb
dec
xchg
mov
test
sub
cs
imul
movsb
mov
push
or
sbb
dec
mov
sbb
sub
cmpsb
inc
fs
rcll
mov
leave
and
cli
jg
mov
xchg
jle
xor
sti
scas
sti
jg
ljmp
cmpsb
les
adc
dec
mov
das
dec
mov
gs
xchg
lret
roll
mov
jb
xor
pop
loop
jnp
pop
mov
add
gs
repz
loope
out
mov
or
aaa
mov
hlt
fistps
add
es
pop
int3
ficompl
and
rolb
sbb
test
inc
cltd
or
ret
addl
lock
movaps
std
loope
sbb
xor
bound
notb
out
jns
dec
out
lds
stos
mov
mov
cmove
add
rcl
or
dec
jns
inc
testl
jne
push
push
mov
push
adc
repz
sbb
popa
inc
inc
pop
jbe
xor
mov
mov
ret
adc
pushf
insb
and
pop
enter
xor
mov
xchg
fisttps
ja
into
in
sub
jo
cli
clc
inc
stos
pop
mov
dec
xor
ss
mov
cmc
sbb
mov
sbb
and
popa
add
ret
jmp
fsubs
movb
cmp
stc
push
push
shr
sub
adc
lret
xchg
cmp
out
mov
call
jge
fwait
mov
ret
int
aam
push
orl
dec
jg
xor
dec
mov
adc
xchg
jecxz
mov
lcall
jmp
shrb
lods
pop
out
and
adc
push
jno
stc
xchg
xchg
repnz
test
mov
push
stos
mov
cmp
and
adc
out
mov
mov
add
inc
test
mov
xor
ds
adc
loope
jmp
repz
sub
inc
jae
cli
lret
add
sbb
outsl
out
xor
int
popa
test
cld
cwtl
sbb
data16
decl
popf
nop
inc
insb
loope
inc
mov
fdivp
xchg
add
inc
mov
inc
out
xlat
pop
cli
mov
and
xor
pop
push
mov
mov
xchg
cmpsb
mov
stc
xchg
sub
jb
out
das
mov
jmp
idivl
shr
rcrb
mov
inc
out
ss
daa
adc
jne
pop
mov
jb
xor
and
inc
data16
push
add
rolb
sarl
mov
add
je
inc
in
pop
pop
sbb
loop
or
mov
dec
aaa
sbb
adc
out
lret
sub
insl
lret
mov
sti
or
mov
outsl
mov
iret
adc
mov
sbb
test
inc
and
sub
addr16
mov
inc
mov
pop
and
aaa
jbe
fdivrs
lret
pop
xor
popf
jae
push
sbb
or
bound
lcall
rorb
and
push
pop
pushf
cmpsb
add
cld
ret
push
cld
mov
faddl
or
addr16
inc
shrl
pop
dec
scas
idiv
nop
icebp
sub
inc
ret
mov
outsl
mov
dec
icebp
xchg
xor
ret
jnp
cmpsb
push
mov
jo
push
mov
cmp
mov
pop
cmp
pop
cmp
or
add
in
cmp
aaa
cmp
out
xchg
idiv
aam
test
adc
int3
pop
jae
xchg
movsl
test
pop
and
sub
bound
mov
ds
mov
cmp
popf
push
sub
data16
mov
pushf
mov
lret
popa
repnz
adc
cmpsb
pop
scas
xor
mov
movsl
lahf
mov
je
cmp
cmp
xchg
cmc
fldt
fstl
jmp
lods
inc
xor
add
pop
shll
js
enter
adc
mov
sub
xchg
pop
mov
in
rolb
xchg
mov
xchg
xor
dec
jns
mov
mov
mov
lock
loopne
xor
mov
pop
imul
pop
lods
mov
sbb
or
insl
adc
jecxz
movsb
mov
inc
or
adc
dec
dec
push
adc
push
fdivrl
scas
subl
and
xchg
test
iret
dec
fistpll
movsl
cmp
cltd
pop
xchg
clc
sub
in
in
jge
cli
mov
xor
stos
ljmp
sub
inc
in
mov
adc
mov
dec
pop
pop
les
xchg
and
fldl
outsb
les
mul
pop
test
pusha
inc
sti
bnd
sub
addl
mov
pop
mov
sub
arpl
icebp
mov
aas
jp
push
nop
mov
std
std
in
popa
lea
add
test
xchg
vcvttpd2dqx
pusha
cmp
mov
sahf
sub
or
inc
or
or
pusha
cld
pop
out
cltd
fmulp
mov
mov
sbb
les
fadd
pop
fwait
lahf
cs
pop
push
jle
subl
ljmp
repz
lods
jnp
jns
mov
mov
stos
out
mov
xchg
movsb
push
or
ljmp
sbb
scas
lcall
nop
cmc
nop
add
xor
sbb
ljmp
and
xchg
and
insb
dec
test
cmp
inc
push
inc
ret
cmpl
cmp
mov
jg
pop
std
push
mov
insb
inc
mov
movsl
sbb
xor
lret
push
shrl
movsb
test
fsincos
xor
push
push
sub
jno
jle
and
mov
outsl
shlb
nop
sbb
movsb
lds
lds
mov
fwait
mov
sub
js
addb
lods
dec
cwtl
xchg
rcrl
shll
mov
in
mov
or
jnp
xor
xchg
cmp
out
sbb
sbb
test
sbb
mov
icebp
push
pop
cmp
sbb
mov
adc
ret
ss
inc
inc
xchg
cmpsb
addr16
je
sbb
popf
xchg
jmp
cmp
stos
loope
push
sub
and
jl
and
addr16
jl
pop
movsl
jnp
ljmp
les
add
sbb
cmpsl
inc
pop
nop
shlb
jecxz
js
and
and
out
mov
loopne
aaa
push
sub
pusha
or
outsb
pop
sbb
mov
iret
mov
test
xor
dec
clc
cmp
mov
pop
daa
push
pop
cld
push
fnsave
rolb
imul
dec
int3
rcrb
cmp
add
xchg
and
cltd
mov
lcall
sbb
cmc
inc
jo
xchg
sub
aam
jle
jmp
jb
xor
lcall
sbb
cli
stos
popa
push
addr16
xchg
int3
mov
adc
inc
jno
mov
jns
and
aad
fimull
lahf
sbb
add
push
ret
fdivl
out
mov
stos
xchg
dec
xlat
dec
jnp
hlt
dec
ljmp
lahf
outsl
push
pop
cmc
and
xchg
cmp
call
lock
cmp
push
sar
inc
pop
jg
sahf
jae
fwait
cmp
sahf
mov
imul
cld
cmpsb
add
shlb
loop
mov
das
push
dec
jne
cmpsb
inc
bound
rorl
pushf
or
scas
or
lahf
dec
jb
push
push
pop
in
scas
xchg
inc
mov
dec
inc
mov
push
aad
xor
or
fucom
aad
fsubp
repnz
addl
push
and
inc
push
mov
lcall
push
jg
aad
jae
sub
xor
mov
pop
inc
mov
lods
mov
jmp
subb
adc
fcmove
pop
add
cmp
lods
dec
sub
std
and
xlat
test
aad
add
xor
xor
es
addb
sbb
jp
cmp
pop
adc
adc
bound
mov
jne
add
gs
lahf
aas
loope
ss
aaa
mov
fsubrs
push
inc
out
push
jmp
sbb
sub
cltd
and
inc
pop
dec
xchg
cltd
aam
lea
jb
popf
push
xchg
rorl
aas
jae
xchg
sbb
clc
test
jo
jmp
mov
xchg
in
gs
jl
iret
xchg
enter
mov
add
repz
push
sahf
rcrb
stos
jo
cmp
rcrl
pushf
fidivs
loopne
pushf
icebp
xchg
dec
sub
icebp
cwtl
fwait
push
les
and
movsb
fwait
mov
std
nop
push
nop
lahf
cmp
push
xchg
add
add
xor
and
sub
or
rcll
pop
xchg
bound
call
movsb
pop
jae
and
xchg
popa
mov
faddl
call
orl
mov
sub
inc
push
sbb
mov
sub
inc
inc
xchg
aad
lret
gs
push
scas
imul
pop
xchg
insl
popf
mov
int
fwait
add
ret
std
jnp
loopne
push
clc
stos
dec
nop
nop
inc
ss
jbe
push
mov
dec
jmp
in
xor
fdivr
xlat
mov
inc
jne
sub
mov
push
pushf
scas
inc
add
sti
inc
or
test
xchg
mov
cmc
mov
in
testl
cltd
or
adc
into
stos
popa
sub
sbb
cmp
jbe
test
sbb
sbb
cmpsl
xchg
mov
aas
dec
lret
push
jmp
inc
pop
dec
cltd
or
pop
mov
repnz
stc
pop
int
cltd
mov
adc
cld
jno
mov
repz
or
out
jno
add
stos
mov
pop
xor
in
push
outsb
test
xchg
leave
loope
jno
repz
or
jbe
rolb
cwtl
xchg
call
xor
dec
pop
ret
mov
in
jmp
lods
mov
rcl
and
push
add
dec
insb
pop
fstl
mov
sahf
mov
outsl
outsb
sub
add
cmp
xchg
or
es
jl
push
inc
fcomps
pop
test
lcall
or
unpckhps
push
arpl
cmpsl
in
and
xor
cmp
xlat
and
stos
ljmp
int3
lahf
push
cli
inc
sti
hlt
je
clc
clc
pop
mov
enter
mov
lds
cli
jmp
pop
cmc
imul
push
lods
stos
outsb
add
outsb
outsl
jge
push
sub
mov
stos
outsl
mov
sub
adc
insl
adc
test
mov
mov
fs
cmp
cld
pop
inc
pusha
mov
std
adc
cmp
test
cmp
das
or
jp
lods
push
rcrl
test
loopne
push
fstp
scas
sbb
int
sub
je
rcrb
mov
das
adc
pop
push
jnp
stos
rcrb
jbe
sbb
fstl
shl
and
and
sbb
pop
xor
add
push
push
mov
mov
repz
mov
mov
or
mov
sbb
rcll
pop
test
or
xor
outsb
and
xlat
xor
dec
or
pop
lret
out
pop
pop
leave
fmuls
imul
or
and
mov
mov
and
or
lret
mov
out
cmp
in
xchg
fimull
lret
cmpsl
adc
fcom
inc
scas
xor
mov
sarb
loopne
lret
pop
fiaddl
push
mov
push
xlat
dec
push
push
aad
mov
aaa
roll
cmp
jae
cmp
hlt
sub
pushf
sbb
sub
pushl
and
repnz
adc
cwtl
fs
test
mov
xor
push
lahf
jg
fmul
lahf
in
xor
jae
mov
incl
xchg
xchg
in
int
sahf
sub
or
int
maskmovq
negl
cmpsl
pop
popf
push
test
leave
dec
kmovd
lret
sbb
dec
out
outsl
push
mov
mov
rorb
and
lcall
test
call
ret
mov
push
mov
int
fdivrs
mov
sar
pop
dec
inc
jns
sub
add
addr16
cmpsl
cmpsb
sub
fucom
jnp
sahf
jne
jge
sahf
enter
rolb
insb
jmp
push
aas
es
cmp
cmpsl
loopne
bound
sbb
push
sahf
mov
cmp
mov
pop
hlt
push
push
daa
out
cwtl
lds
add
cmp
mov
adc
mov
movsl
stc
xchg
xchg
cbtw
jns
rclb
dec
adc
push
dec
xor
jo
int
sbb
push
gs
mov
sti
or
xor
mov
xor
jno,pn
std
sbb
iret
push
mov
sub
mov
inc
pop
cld
mov
ds
sbb
aad
icebp
movsb
jnp
scas
into
push
xlat
shrb
adc
push
roll
ja
xor
call
call
inc
jmp
loope
or
mov
in
mov
lods
sbb
adc
xchg
arpl
xchg
ret
int3
out
xchg
int
es
cmpsl
xchg
in
push
mov
lock
outsb
pop
lret
dec
sti
mov
pop
mov
out
jnp
mov
dec
cmpl
ds
inc
lret
roll
out
movsl
cli
jns
sbb
sbb
jae
xchg
xchg
outsb
fbstp
loopne
pop
into
lods
bound
push
inc
pop
sarl
mov
push
data16
fdivrl
out
sub
outsb
ljmp
rolb
pop
and
cmpsl
cmpsb
add
fistpll
pushf
mov
adc
outsl
push
test
fbld
scas
fisttpll
rorb
dec
mov
cmpb
repz
shrb
les
and
add
xor
mov
xchg
icebp
mov
test
das
sbbb
roll
lret
out
push
mov
jg
mov
popf
mov
lcall
stc
cmp
inc
ja
and
adc
add
push
sub
sahf
sub
jne
sbb
lcall
mov
xor
mov
popa
xchg
bound
mov
leave
arpl
jecxz
enter
insb
cmp
filds
lds
inc
jl
js
cmpsl
sti
cmp
loopne
dec
cmovs
repz
mov
push
repz
and
sbb
xor
push
add
pusha
clc
out
sbb
mov
mov
inc
mov
pop
decl
decl
movsl
lds
lret
addr16
mov
push
call
or
push
push
xor
push
subb
in
or
or
inc
fisttpll
fisubl
jg
and
sub
out
fxam
xchg
cmp
adc
push
dec
cmpsb
dec
dec
enter
mov
stos
iret
hlt
js
mov
enter
scas
fwait
iret
outsl
in
push
dec
push
call
inc
mov
scas
flds
inc
pop
add
add
mov
inc
shl
add
mov
sub
or
pop
adcl
xchg
mov
xor
add
adc
push
adc
mov
loope
fs
cwtl
jecxz
inc
mov
test
dec
mov
cmp
inc
sbb
cmp
insl
orb
rcll
inc
xchg
sbb
sbb
test
xchg
add
fstp
mov
push
stos
popf
das
xchg
bound
push
add
addl
repz
mov
scas
rorb
xor
ja
add
mov
push
hlt
loopne
xorl
lahf
cmp
xchg
inc
rclb
push
jne
jmp
movsl
adc
cmc
loope
popa
add
out
inc
mov
mov
dec
popf
or
mov
fwait
adc
test
cmp
sbbb
pop
xor
mov
xor
enter
lret
pop
int3
addr16
xchg
sahf
dec
xor
fidivl
aad
mov
in
dec
adc
pop
xor
scas
clc
xor
mov
mov
xchg
sub
pop
aas
pop
std
pop
cmp
repz
xor
test
aam
dec
sbb
mov
adc
mov
jns
nop
adc
add
xchg
pop
dec
pop
mov
pushf
data16
add
mov
stc
push
xchg
jle
stc
inc
daa
cltd
clc
jg
daa
lods
sbb
push
pusha
jno
push
and
mov
dec
out
dec
xchg
in
or
fmul
ss
mov
push
sbb
mov
pop
lea
xchg
cmp
mulb
inc
adc
iret
jno
out
inc
stos
loope
cltd
cmp
and
imul
cmp
add
lcall
icebp
push
cmp
and
sbbl
shrl
pushf
jbe
mov
fwait
and
add
pop
js
jmp
xchg
outsl
ljmp
arpl
cmp
jo
jmp
mov
std
pop
cmp
inc
add
pop
inc
aaa
jnp
imul
adc
jecxz
or
mov
pop
dec
sbb
mov
jb
popa
fstpt
jmp
xchg
scas
test
popa
sub
adc
xchg
push
mov
int
mov
xor
shll
sub
popa
and
add
pop
sub
filds
sub
cmp
jmp
pmaddwd
adc
push
adc
pushf
xchg
out
hlt
cmp
xchg
inc
lret
fisttpl
cmpsl
out
or
or
or
arpl
pop
mov
dec
push
ret
mov
test
fildll
mov
leave
mov
mov
adc
in
repz
push
ret
outsb
fwait
jl
sub
in
sbb
pushf
push
and
imul
xlat
hlt
push
fwait
mov
shrl
sbb
mov
or
adc
xorb
fdivrp
mulb
icebp
mov
aaa
cmc
nop
cmp
ljmp
ljmp
in
mov
gs
dec
lret
clc
xor
ret
jge
dec
subb
jle
inc
les
jle
push
mov
and
iret
xchg
jecxz
xchg
pop
mov
rcrb
jge
mov
sbb
leave
test
mov
scas
pop
cmpsb
xor
dec
push
imul
movsl
loope
mov
mov
jb
mov
mov
inc
push
adc
add
ret
sub
test
xlat
lret
adc
in
and
sub
cmp
imul
in
ljmp
repnz
inc
inc
inc
call
stos
mov
into
fidivrs
lcall
stos
pushf
push
mov
icebp
es
inc
in
xor
xor
rcr
mov
lods
jmp
rcrl
out
imul
push
mov
xchg
in
out
inc
lds
movsb
adc
test
popa
fisttpl
sub
and
pop
jecxz
shlb
aaa
and
xor
sub
mov
mov
fwait
adc
aad
mov
xchg
add
add
dec
aad
test
jp
and
out
jp
fcomps
jecxz
add
scas
scas
push
jle
int
adc
repz
cmp
xorb
mov
cltd
mov
mov
xchg
xchg
jns
jbe
jge
mov
subl
push
pop
mov
xorl
cmp
and
stos
aaa
mov
in
subl
cmp
into
xor
mov
jb
or
repz
fcoml
sub
and
push
fdivs
push
xor
add
daa
jno
mov
enter
insl
fidivrs
enter
xchg
jns
add
stos
gs
int3
pop
hlt
dec
cltd
mov
cli
add
popw
add
inc
push
aad
lahf
mov
data16
sub
call
popf
movsl
sti
mov
js
daa
sbb
xchg
add
push
clc
dec
xlat
cwtl
pop
icebp
push
mov
pusha
jmp
in
mov
xchg
mov
mov
jno
mov
std
push
and
mov
stc
sbb
xchg
jbe
pop
daa
mov
push
mov
sub
ja
ret
scas
cld
or
lret
in
inc
in
and
sbb
iret
daa
and
pop
xchg
add
sbb
mov
cmp
adc
es
sbb
loope
aaa
sahf
sbb
adc
lods
int3
adc
pop
icebp
or
outsb
add
cli
clc
hlt
popf
dec
in
push
int
jo
addr16
cmp
push
push
push
loop
and
xor
adc
shrb
das
add
aaa
sub
dec
dec
out
mov
scas
sub
mov
mov
shrl
mov
ja
jmp
lret
mov
push
push
test
addr16
adc
cmp
add
pop
sub
pop
xchg
rep
imul
sub
mov
lods
push
add
xor
xchg
xchg
mov
push
cmp
mov
popf
xchg
mov
xchg
daa
xor
ret
jp
mov
dec
mov
mov
ss
xlat
and
push
pop
pop
insb
mov
mov
cmp
scas
pop
and
dec
xchg
sub
jl
xlat
stos
pusha
std
shlb
pop
es
dec
mov
push
or
js
inc
out
cld
in
rcrl
mov
test
sub
dec
add
mov
pop
push
dec
xchg
repz
out
into
mov
xchg
lret
out
mov
cmp
push
add
das
lcall
outsl
adc
aaa
inc
gs
xchg
incl
enter
xor
xor
mov
in
xchg
dec
inc
popa
xor
sahf
insb
popf
or
scas
aas
dec
add
pop
mov
dec
jnp
inc
inc
inc
shl
movsl
sub
ret
test
sbb
jnp
mov
or
adc
pop
xor
stc
jb
aas
jge
or
cmpsb
notb
aas
bound
fstpl
movsl
pop
dec
loop
daa
xchg
popf
fiaddl
daa
sbb
testl
loop
mov
cwtl
xchg
xor
rolb
shll
insb
dec
sti
or
xchg
adc
sbb
rorl
xor
push
adc
mov
dec
pop
pop
sub
mov
cmp
cmpsl
popf
or
das
sub
xchg
pop
sbb
mov
scas
enter
add
es
xorl
lods
dec
fldt
mov
inc
mov
add
mulb
adc
cld
scas
icebp
sbb
mov
push
icebp
and
sbb
out
shrb
mov
dec
push
loope
cld
insl
incl
jl
lods
loope
or
cmc
es
cmp
sarl
sub
pushw
lock
add
outsb
jp
pop
mov
into
imul
cmp
fmull
into
dec
mov
xchg
adc
scas
rorl
cmc
mov
pop
scas
aad
pop
rol
nop
xchg
fisubrl
mov
xor
push
out
test
aad
test
dec
xchg
gs
push
pop
mov
push
xchg
mov
sub
jo
xlat
jnp
push
or
xchg
jp
jge
mov
mov
push
add
pop
cmpsl
mov
adc
adc
push
call
adc
cmp
cmp
test
ss
divb
mov
test
repz
arpl
xchg
mov
dec
sarb
mov
scas
pop
xchg
mov
lret
subl
out
mov
and
shl
mov
dec
lea
into
ds
xchg
or
and
xchg
sbb
inc
mov
out
cmc
xchg
test
add
lds
xor
mov
cld
inc
mov
dec
cltd
loop
negb
adc
and
sahf
mov
movsl
mov
mov
mov
dec
pop
fidivs
outsl
movsb
das
sbb
jns
test
push
test
mov
lea
sub
mov
mov
decb
xor
pop
mov
jg
mov
pusha
push
sbb
inc
mov
mov
scas
pop
sub
and
or
dec
xor
fnstcw
dec
mov
inc
mull
pusha
mov
cmp
test
dec
xlat
jae
mov
inc
and
dec
xchg
mov
int
leave
outsl
int3
dec
add
jecxz
je
jg
push
xchg
jbe
fwait
mov
test
call
xor
push
sbb
test
adc
stos
add
rcr
cmpsl
js
jne
add
add
inc
aam
mov
adc
mov
xlat
push
insl
cwtl
push
xchg
cmp
or
jmp
and
mov
loopne
mov
xchg
ljmp
xor
mov
cmc
mov
push
negl
outsl
mov
mov
sbb
or
and
std
mov
adc
cpuid
cmp
xchg
push
mov
mov
aad
push
ss
rorb
loope
arpl
push
jb
jmp
out
int3
pusha
mov
jns
xchg
popf
jb
ret
or
xor
mov
gs
and
insl
dec
push
adc
mov
sbb
sbb
inc
mov
adc
movsl
mov
mov
sbb
cltd
inc
mov
adc
mov
cmp
dec
mov
jae
in
cmp
adc
push
cli
add
push
addr16
cmpb
cmp
ja
idivb
loop
movsl
call
and
ficomps
dec
push
movl
les
aam
jnp
js
xor
in
push
push
inc
je
dec
cmc
xchg
jnp
aaa
xor
xchg
scas
inc
ja
clc
fbld
cltd
cmp
ret
adc
jle
sub
mov
cmp
idivl
cmc
adc
xorb
push
in
mov
pop
jge
insl
rorb
dec
mov
sub
mov
mov
sahf
push
push
sub
pop
adc
push
out
adcb
insl
push
jo
sub
cmp
loopne
sub
sbb
fsubs
mov
push
adcb
int3
je
pop
icebp
stc
ljmp
mov
loop
out
lods
dec
clc
dec
xchg
lret
aas
mov
call
arpl
mov
ja
push
sahf
cmc
jno
stos
fimull
and
gs
inc
pop
dec
add
enter
sar
ljmp
or
mov
icebp
lahf
cmp
sbb
sub
xchg
mov
xor
add
stos
aaa
push
mov
push
adc
fstp
call
imul
cltd
shl
mov
mov
jmp
in
rolb
aam
notb
jb
rcrl
subb
dec
pop
mov
fcmovu
mov
adc
stos
out
out
gs
cmpsb
dec
push
inc
pop
int
xor
imul
andb
es
popf
sbb
pop
mov
stos
add
lahf
scas
shl
dec
repnz
push
leave
jg
inc
andl
pop
adc
push
sbb
imul
nop
out
loop
cwtl
mov
jns
cwtl
jle
add
and
in
out
iret
mov
iret
sbb
xchg
lahf
lea
mov
ret
loope
mov
sti
lret
dec
clc
lcall
jp
adc
cli
or
sub
jp
insb
outsl
dec
clc
mov
mov
add
and
adc
imul
enter
or
shrl
mov
rclb
dec
lock
icebp
stc
xor
jnp
add
jo
push
sub
push
cmpl
movsl
in
mov
fidivl
lea
push
push
adc
mov
sub
jecxz
xor
and
mov
mov
cmp
add
mov
repz
mov
mov
popa
sbb
nop
lahf
xor
sub
in
mov
or
bnd
adc
gs
xchg
into
fcoms
sbbl
and
cmc
rcrb
xchg
jns
es
push
arpl
xchg
pushf
add
mov
adc
lret
cmpsb
adc
sbb
xlat
pop
mov
insl
ret
xor
xchg
jo
jmp
in
dec
aad
ret
rol
or
xor
mov
xchg
add
aad
aaa
push
sbb
mov
cld
xchg
inc
mov
into
cmp
les
gs
sahf
in
inc
xchg
xchg
popf
jmp
repnz
adc
out
push
lret
jg
repnz
mov
sub
fbld
pushf
bound
scas
mov
jg
cmp
push
pop
mov
pop
xor
rolb
iret
leave
jg
xor
ret
jle
stos
dec
or
sbb
movsb
inc
testb
xchg
xchg
orl
mov
xchg
jle
loop
and
stc
sbb
jp
jp
sbbl
pop
cmp
aas
push
inc
cli
mov
inc
jne
jno
stc
cmp
fidivl
mov
jnp
adc
pop
gs
push
shr
repz
lods
sar
std
es
jbe
pusha
out
pop
aaa
movsl
imul
stc
test
adc
and
xor
xchg
push
xchg
mov
inc
mov
add
sbb
inc
xchg
andl
inc
or
jmp
dec
das
push
push
nop
dec
add
mov
scas
insl
jno
cmp
inc
in
decl
pop
mov
jne
sarl
das
xor
pop
mov
lods
les
sub
dec
sbb
and
insl
dec
cld
mov
push
test
pop
xor
xor
std
lret
mov
mov
cmp
mov
dec
pop
stos
adc
push
aam
pop
or
jge
outsl
into
push
inc
in
cmp
out
lea
xchg
dec
inc
mov
xor
push
gs
cmp
rcl
dec
sbb
test
sub
iret
lods
cld
dec
popa
mov
rcrb
cmp
lcall
int3
mov
mov
das
cmp
icebp
mov
mov
in
push
jno
cs
jae
or
jne
mov
mov
fwait
out
cwtl
movsl
cmpsb
ljmp
iret
aad
dec
mov
fwait
and
pusha
pusha
mov
or
rclb
mov
xor
or
xor
and
nop
scas
jns
insl
xor
out
pop
add
popa
or
rcl
out
dec
dec
cmpsl
scas
push
iret
fsubl
xchg
daa
xor
cs
mov
rcl
imul
push
std
popa
in
std
dec
sahf
jmp
bnd
xor
xchg
cmpb
insb
je
hlt
inc
fcoms
inc
lea
adc
icebp
ret
jno
jg
xchg
push
mov
add
iret
int3
pop
pop
insl
pop
jbe
mov
inc
out
dec
lcall
push
add
push
cmp
pop
jecxz
pop
inc
adc
mov
test
sbb
int
xor
inc
ror
repnz
aas
mov
add
xchg
imul
popf
xchg
pop
into
lock
lahf
mov
mov
in
lock
mov
out
pop
das
ss
pusha
subl
gs
leave
jnp
or
outsl
fbld
mov
out
jmp
jo
jo,pn
xor
push
lret
jne
je
roll
or
arpl
xor
mov
jge
insl
and
out
stos
inc
xor
out
dec
mov
notl
cmc
jae
cltd
mov
xor
in
fwait
ljmp
filds
aam
loopne
cmp
adc
jmp
popa
pusha
adc
sbb
fsubp
fs
push
dec
and
es
std
cmp
in
mov
enter
dec
in
lahf
call
pop
cmpsb
in
jp
push
jo
in
jmp
cmpsl
adc
mov
shlb
addr16
mov
jmp
add
in
jnp
mov
js
ljmpw
outsb
adc
outsl
inc
and
into
jge
cmp
jmp
std
mov
push
int
mov
jle
imul
adc
dec
es
loop
push
push
lea
mov
cld
sahf
push
loop
sub
jae
cmpsb
dec
leave
movsb
cmp
jmp
jb
jg
lret
dec
outsl
stos
adc
mov
in
ret
clc
out
push
stos
fnstcw
lea
mov
clc
inc
mov
inc
ret
jbe
icebp
mov
sbb
sti
incb
xchg
iret
jle
stc
mov
aas
es
mov
push
and
jb
mov
enter
pop
jecxz
mov
dec
lret
sub
pop
hlt
cltd
arpl
stos
mov
mov
pop
pushf
scas
mov
xor
add
arpl
xchg
ljmp
ret
data16
clc
sbb
dec
xchg
push
popa
ja
movsb
and
inc
or
xchg
xor
mov
or
insl
mov
cmpsl
mov
pushf
fs
outsl
dec
out
sub
xchg
pop
stos
lret
incb
sbb
fwait
in
icebp
cmc
or
cmp
dec
jns
xchg
mov
mov
cmc
and
bound
into
repz
push
adc
mov
outsl
pop
xchg
cli
or
xor
add
out
in
push
aaa
xchg
daa
or
sub
iret
roll
xchg
loop
lcall
cmp
jbe
addr16
push
jmp
neg
js
mov
mov
xor
pop
push
pusha
xor
xchg
mov
imul
shrl
jb
lret
mov
pushf
mov
push
and
push
jne
cmp
lret
mov
mul
xor
orl
push
jo
fcmovne
ds
cmp
mov
jl
push
repnz
adc
xchg
das
pop
ljmp
or
iret
pop
cmp
add
push
rcl
jb
sbb
pop
mov
lods
out
bound
sbb
jb
repnz
dec
cmp
shrb
sub
ss
lahf
xor
in
adc
jno
pop
lret
roll
adc
sbb
mov
int3
mov
cmc
push
cld
cmp
hlt
jbe
insb
out
or
lods
mov
dec
fiaddl
sbbl
out
or
push
sbb
test
add
fcoml
mov
mov
xor
ficoms
cmp
daa
mov
data16
dec
daa
dec
jns
add
dec
sbb
cmpl
cmp
imulb
sarb
rorl
mov
jg
mov
cs
rol
je
adcl
xor
gs
jmp
mov
ljmp
xor
jno
imul
push
scas
test
mov
dec
pop
xchg
mov
cmp
ret
jl
push
lods
stos
mov
sahf
rcrb
xchg
xor
fdivr
out
shlb
jo
adc
mov
jbe
cmp
sbb
arpl
ret
inc
jno
sahf
gs
xchg
dec
mov
lds
pusha
jmp
add
ret
add
idivl
mov
pop
scas
inc
inc
lods
xchg
negb
jmp
sub
xchg
xlat
push
add
sar
repnz
jnp
mov
imul
sbb
out
je
cld
dec
test
mov
mov
jg
in
das
imul
in
iret
mov
jmp
mov
int3
jp
sbb
cmp
imul
mov
in
loop
into
test
lcall
jle
rcll
aam
xchg
std
adcl
cmpsb
cli
movsl
dec
aad
dec
outsl
and
adc
data16
lcall
fadds
idivl
inc
xor
mov
dec
sub
leave
repz
sub
xor
aam
or
fisubl
mov
lods
loop
mov
lds
orl
into
stc
int3
ss
jne
out
sbb
cmpsb
lret
push
hlt
bound
fistl
or
xchg
ds
loop
insb
hlt
hlt
aad
sbb
xchg
mov
ss
fbstp
xor
dec
mov
jp
dec
je
xchg
sub
inc
push
fiaddl
ss
sbb
shll
xor
and
scas
jne
mov
inc
cmp
sbb
xlat
movsb
shrl
cs
cli
cmp
adcl
ljmp
cwtl
test
scas
lds
arpl
mov
testl
xor
addr16
jnp
loope
inc
arpl
mov
fcomp
repz
insl
loope
fs
cwtl
lds
mov
sub
or
aas
movsl
lods
bound
jb,pn
fimull
dec
xlat
sbb
mov
enter
mov
dec
adc
lock
xchg
pop
cli
dec
ds
aaa
or
lahf
jg
mov
push
or
sbb
pop
adc
push
leave
scas
das
fistpl
lods
xchg
and
shlb
les
daa
jb
outsl
push
xor
xor
pop
dec
push
lret
scas
push
xor
lret
inc
bound
jns
push
inc
sbb
sbb
lcall
jb
enter
jge
mov
sbb
fmulp
cmp
push
mov
leave
sub
xchg
jecxz
dec
out
shlb
mov
dec
ret
dec
sbb
lcall
or
jmp
fdivr
fcmovbe
mov
ret
and
arpl
push
pop
sbbl
daa
inc
or
and
or
inc
fisubs
inc
das
aaa
xor
aas
mov
pop
je
aas
xchg
popf
fisubrs
out
mov
enter
sahf
mov
jge
push
mov
into
fldl
fadds
enter
test
push
stos
int
in
pushf
push
ss
or
arpl
cmp
imul
fdivl
and
lods
xor
call
repz
mov
cmp
test
add
sbb
es
jbe
add
or
divb
and
je
shl
in
cmp
add
incb
ds
jne
jmp
pop
jg
fs
jne
fcoms
sbb
cltd
xor
shlb
int3
dec
hlt
out
insb
push
or
clc
js
push
dec
lret
adc
fst
scas
add
aaa
xor
push
repnz
stos
mov
inc
sub
xchg
pop
enter
movl
or
lret
lock
jmp
test
out
pop
icebp
sub
push
push
enter
pop
divb
sbb
cmp
sub
insl
pop
sti
das
mov
out
mov
jge
inc
psllw
stos
and
xor
sub
push
stc
clc
std
pushw
dec
cmpsl
divl
xor
fldl
jo
jno
test
adc
into
and
adc
push
in
pop
jns
imul
fcoml
mov
es
sub
push
mov
fsubrs
mov
cmc
cmp
stc
adc
mov
stc
sbb
xchg
rolb
or
mov
hlt
dec
adc
ds
push
lods
hlt
fwait
add
dec
jae
repnz
xor
add
jnp
das
pop
mov
mov
lret
sbb
outsb
adc
adc
fwait
pop
cmpsb
js
pop
js
and
xchg
or
dec
fs
pop
jne
jb
lods
hlt
mov
push
sbb
shll
movsb
mov
lods
fsubl
idivb
lea
xchg
mov
xor
adc
sub
fsubrl
push
push
push
push
dec
fildll
ja
xchg
int
icebp
mov
data16
sahf
add
loope
and
hlt
test
push
sub
pop
sub
lret
jnp
sahf
std
std
fsubrl
jecxz
sub
or
jbe
call
movsl
repnz
loope
push
mov
cmc
xor
push
adc
repnz
int
clc
cltd
pop
xchg
mov
add
mov
mov
fs
xor
js
test
jnp
xor
add
fwait
jb
dec
cmp
mov
arpl
and
xor
repnz
sti
out
rcrl
adc
imul
lret
sbb
fstpl
arpl
inc
js
test
push
incl
sub
fdiv
mov
add
aam
push
sarb
scas
popa
arpl
push
adc
pop
jne
dec
popa
les
xchg
mov
dec
cltd
adc
mov
jl
jle
aad
xlat
repz
dec
cmp
cmpsl
negl
int3
stc
mov
int
jbe
shll
outsb
xchg
int3
daa
xchg
mov
pop
mov
add
aas
insl
inc
push
in
rcrl
int3
outsb
jnp
dec
lahf
and
inc
outsb
outsb
dec
mov
movsb
sbb
dec
es
lea
mov
repnz
icebp
mov
mov
mov
pop
cmpsb
pusha
ret
lret
push
add
cmp
in
into
push
mov
sub
inc
jg
test
aad
lcall
adc
push
adc
flds
jne
fsts
fisubs
int
lret
cmpb
dec
das
ffreep
or
cmpsl
cmpl
mov
jmp
out
and
stc
xor
cmp
imul
popf
push
push
jno
ficoml
cmp
sub
jp
adc
jb
adc
scas
incb
mov
icebp
pop
cmp
jae
jno
xlat
arpl
sbb
xchg
lods
aas
popa
loop
or
out
pusha
push
add
int
sub
adc
loope
js
daa
addr16
mov
push
jne
js,pn
shr
mov
push
cmp
adc
add
lahf
mov
jl
test
mov
mov
je
andl
cwtl
test
pop
into
cmp
arpl
movsb
adc
test
outsb
dec
jae
adc
mov
sbbl
into
jno
popf
sbb
cmp
fsubl
sub
imul
imulb
sub
mov
iret
gs
or
jl
test
and
popf
push
outsb
pushf
and
ljmp
lods
test
icebp
xchg
pop
test
cltd
into
in
aad
stc
insl
inc
loopne
ret
out
leave
xor
pop
imul
push
out
and
inc
add
mov
jle
add
xchg
outsb
add
xchg
sbb
inc
enter
add
adc
les
jo
cwtl
pop
lret
in
imulb
pshufw
mov
xor
repnz
push
shll
push
inc
out
mov
jno
je
pop
push
js
mov
pushf
addl
lds
sbb
jmp
addr16
pop
andb
into
jo
mov
cmp
mov
ljmp
out
or
orl
xor
mov
int3
sub
testb
sahf
pusha
iret
sahf
mov
movsl
xchg
push
lods
inc
lret
xor
lcall
mov
xor
mov
nop
aaa
loop
or
add
add
and
mov
push
out
or
ret
mov
mov
out
lea
mov
pop
fdivrl
or
lea
inc
ret
in
push
cltd
movsl
cwtl
stos
out
sbb
mov
dec
mov
fidivl
movsb
mov
lret
test
sbb
or
jo
adc
cmc
mov
pop
jo
pop
adc
enter
mov
cltd
sbb
in
push
iret
add
mov
stc
mov
cmpsl
insb
xchg
xchg
lock
cmp
addb
out
xchg
dec
in
das
out
pop
mov
insb
lods
ja
insl
scas
fwait
sbb
ds
movsl
xchg
nop
and
jno
pop
bound
clc
mov
lods
fisttpl
xor
andb
push
aad
mov
inc
popf
cmp
sub
popa
xor
inc
push
xor
gs
outsb
sbb
cwtl
pop
mov
loope
add
jp
push
or
push
mov
add
jg
testl
scas
and
dec
mov
sub
lahf
cltd
out
mov
inc
cld
xorb
adc
push
mov
or
fwait
or
fdiv
push
movsb
and
add
ret
jbe
or
dec
lods
mov
dec
cli
mov
jnp
adc
std
fstp
push
add
mov
hlt
inc
inc
xchg
cmp
xchg
cmp
out
push
push
adc
enter
cmpsl
imul
ss
dec
and
xchg
pusha
bound
push
mov
imul
int
idivl
mov
mov
or
movsl
fnstcw
lret
out
cltd
mov
push
in
addl
pop
push
iret
cmc
xor
sub
pop
repnz
or
mov
xlat
ljmp
mov
stos
movsl
fwait
adc
or
push
xor
or
adc
sbb
ja
hlt
popa
dec
or
or
leave
mov
xchg
xor
adc
sti
pop
out
sub
sbbb
mov
push
inc
fnsave
rcr
pusha
popf
or
jmp
incb
loopne
lret
xchg
subl
mov
or
dec
mov
ret
adc
sub
and
mov
and
adc
dec
stos
mov
loop
sub
or
mov
mov
aam
jecxz
ds
jo
pop
jg
ror
lds
cmp
aas
pop
movsl
jge
adc
stos
pop
loope
ret
jae
push
ljmp
insb
dec
sahf
push
sub
lods
sub
lods
add
adc
dec
addr16
or
inc
mov
and
data16
dec
js
adc
xor
bound
ret
dec
lods
in
pop
mov
fadd
inc
cmpsb
xor
jno
pop
push
xchg
fdivrl
je
jo
sub
int3
push
idiv
in
xor
fistps
stos
int
inc
movsl
icebp
jb
pop
mov
add
out
fidivrl
jecxz,pn
rol
mov
scas
and
cmp
sbb
sub
js
cmp
into
xor
jns
adc
push
push
sbb
jecxz
jb
movsl
cmc
add
sbb
mov
mov
and
push
icebp
inc
push
xchg
jnp
mov
sub
pop
popa
sbb
andl
sub
shl
scas
lahf
bound
lret
jle
ljmp
arpl
mov
pop
movsb
pop
js
test
lret
stc
iret
pushf
jp
shl
mov
pop
das
in
fnstcw
and
dec
mov
adc
pusha
shlb
out
popa
fdivrl
sti
shrb
xchg
leave
pusha
jp
cltd
in
and
adc
fimull
cmp
mov
push
xchg
mov
add
inc
outsl
push
mov
cmp
cld
push
aaa
in
sbb
fistl
jne
inc
leave
call
les
jle
sbb
subb
shlb
adc
sub
mov
stos
xchg
loop
cld
lods
in
xchg
rorb
fisubl
jbe
cmp
adc
icebp
call
xchg
jb
sarl
leave
pop
cmp
push
cmpsb
fbld
into
pop
adc
cltd
mov
push
test
xor
xor
cmpl
xchg
fdivrs
push
jb
and
fcomps
xor
mov
es
mov
ss
sbb
or
es
jg
add
mov
orl
sub
sti
add
mov
notb
xor
test
xor
inc
jl
ljmp
out
lock
mov
cli
jbe
aam
popf
mov
push
xor
loop
out
pop
xor
cmp
and
mov
subb
aad
dec
or
shrl
push
loopne
add
xor
stc
in
outsl
cmc
mov
das
pop
push
test
adc
int
jnp
add
xchg
pop
pop
imul
pop
sbb
mov
ss
mov
cmp
or
pop
pop
xor
popa
repz
cmp
push
inc
ljmp
sahf
pop
xor
push
mov
cmp
push
loope
xchg
pop
int3
inc
push
sub
test
push
insl
mov
loope
sbb
mov
and
adc
lock
sub
fwait
xlat
in
push
in
es
jl
fcompl
ror
pop
push
nop
and
mov
inc
mov
imul
cmc
cli
rolb
xchg
orb
push
mov
in
sarl
and
loop
sbb
das
xchg
enter
cmp
dec
inc
test
push
mov
enter
adc
data16
repz
pop
or
dec
mov
xchg
cmp
xchg
cwtl
xlat
gs
ret
pop
and
xor
subb
and
imul
insb
sahf
fwait
dec
rcll
lods
stos
pop
push
or
stos
sbb
cs
imul
out
lcall
push
movsl
movb
cmp
mov
jne
test
sarb
stos
and
mov
xor
sbb
cmp
cmp
lcall
mov
xor
into
shll
mov
scas
outsl
fucomi
and
out
jl
lods
jge
mov
int3
dec
outsb
and
lds
inc
dec
mov
mov
sti
xchg
sub
cmpsb
xor
dec
mov
jmp
movsl
mov
dec
mov
lods
mov
sti
mov
addr16
adc
sub
leave
insl
sbb
pop
xor
mov
in
mov
mov
cmp
dec
jmp
dec
int
fnstenv
adc
movsl
test
call
cmp
jns
push
testl
adc
nop
cld
scas
mov
fildl
dec
inc
add
nop
mov
out
jmp
mov
push
aaa
or
jns
repz
das
push
mov
stos
xor
pop
sub
cmpsb
add
faddl
popa
rorl
or
fiadds
sti
sub
ret
enter
xchg
sbb
loope
pop
mov
cmp
cmp
inc
sbb
lods
in
sbbb
scas
fwait
imul
mov
insl
in
push
xor
data16
dec
cmp
jp
pop
push
subl
fsts
pushf
jge
js
iret
fwait
push
push
outsb
insl
loop
cmpsb
ljmp
pop
mov
fisubrs
mov
stos
mov
adc
stc
sti
mov
pop
scas
imul
xor
and
mov
jge
sub
imulb
addr16
cmpsl
mov
mov
sbb
and
icebp
sti
ja
aam
pushf
ds
adc
rorl
sub
mov
setns
jg
popa
mov
popf
negl
shrb
jmp
xor
leave
adc
mov
shlb
jns
and
daa
xor
xor
mov
jg
arpl
jbe
fcomip
and
jmp
mov
in
and
idivl
dec
scas
jmp
adc
in
lds
insb
push
jle
mov
mov
in
pop
sub
xor
push
push
mov
out
lret
cmp
rclb
arpl
addr16
adc
lret
lret
or
imul
fdivrs
jecxz
jge
pushf
loopne
fidivrl
dec
jnp
xor
int3
bound
xor
xchg
sahf
push
xor
lea
nop
icebp
xchg
dec
cmp
and
push
push
int
mov
test
mov
inc
add
jne
pop
xor
sbb
pop
aas
mov
shl
adcb
lahf
lret
cmpsl
mov
push
mov
sbb
push
and
call
fdivr
fwait
and
dec
addl
pop
test
push
or
mov
sub
mov
jae
leave
adc
imul
push
sbb
rol
pop
ds
fstps
clc
sub
movsl
push
das
or
in
jp
xor
cmpb
dec
testb
or
out
inc
push
add
jno
sbb
and
jle
ljmp
mov
and
aaa
jge
in
mov
inc
and
icebp
js
and
repz
cmp
push
jg
jne
mov
xor
lds
gs
or
in
lea
xchg
push
pop
clc
in
mov
mov
popa
faddl
aad
js
mov
lods
rorb
cs
push
xchg
aad
imulb
ja
in
sbb
mov
mov
pop
jb
mov
cli
dec
inc
adc
inc
xor
negb
cmp
sub
das
scas
mov
and
pop
lret
pop
push
fistl
test
sarb
dec
xlat
inc
out
cmp
jo
pop
add
sbb
sub
xchg
mov
mov
xlat
ja
mov
ss
xchg
in
lock
imul
sub
adc
and
inc
in
sub
and
jo
es
mov
test
and
imul
mov
int
into
dec
sbb
or
pop
mov
iret
push
cmc
sbb
mov
jecxz,pt
pop
push
lds
pop
dec
sub
xchg
inc
xchg
stos
lret
dec
daa
mov
jg
add
in
in
das
int3
fmull
dec
cmp
imul
rorl
lcall
inc
stos
lea
js
imul
in
aam
and
lahf
add
dec
test
cmp
mov
jp
pop
push
jmp
or
bound
xchg
sbb
incl
mov
fwait
test
xlat
inc
imul
decb
cmp
dec
push
test
inc
pop
int3
push
push
or
adc
pop
lcall
into
shr
lds
in
inc
lcall
cmp
or
fdivrp
outsl
xchg
lret
fcomps
xor
les
jg
and
arpl
mov
in
idivb
into
cmp
pop
frstor
or
aaa
std
data16
ds
jg
fxam
push
add
das
and
or
mov
mov
aad
lods
sub
loop
adc
sub
dec
jns
mov
mov
bound
mov
mov
jge
lods
xchg
bound
imull
insl
mov
pusha
add
outsl
mov
pop
mov
xor
dec
and
sbb
shll
ss
cmpl
fldcw
jae
or
mov
lret
out
testb
mov
jl
pop
loope
sbb
add
sub
mov
test
and
or
imul
or
rcrl
pop
gs
scas
fdivrs
add
ret
out
test
je
inc
cli
or
cmp
mov
or
push
sub
data16
ficompl
mov
sbb
adcb
add
jp
sbb
dec
cs
mov
cmp
xchg
mov
push
add
test
ficompl
jb
add
pop
popa
movsl
outsl
jb
int3
push
adc
inc
movb
jnp
cmp
sbb
popa
pop
cli
call
or
jge
pop
push
pushf
fisubrs
xor
jmp
int
nop
out
insb
add
orb
and
inc
push
cmc
lret
insb
in
sub
lea
in
cmp
shll
and
jp
insb
xchg
sub
adc
jb
je
or
hlt
fidivl
and
cmp
fidivrl
or
sti
call
orl
testl
cs
inc
mov
or
popf
dec
inc
xchg
inc
adc
xchg
xor
inc
shll
pop
cmc
jp
cld
xchg
lods
xchg
scas
inc
in
outsl
jbe
mov
aad
repz
in
inc
jl
fldl
sub
subl
push
es
dec
rol
imulb
cmc
cmpsl
ror
inc
jg
or
cmp
pop
push
xor
mov
mov
pushf
mov
cmpsb
insb
lds
out
ffree
xchg
inc
jge
pusha
mov
adc
jp
inc
out
outsb
call
gs
dec
push
test
pop
pop
call
mov
and
pop
test
fsts
jb
out
int3
rorb
clc
or
mov
faddl
divl
lret
pusha
mov
or
pop
sub
mov
insl
or
mov
dec
fs
jl
lock
addr16
sbb
aaa
mov
xor
test
mov
scas
outsb
das
and
pop
movsb
mov
lret
aas
xchg
ror
mov
es
test
jns
movl
cmpsb
sub
out
int
push
popf
lret
insb
xchg
mov
stos
jno
jno
fst
test
leave
sbb
setbe
subb
jae
aaa
lahf
fisttps
movsl
dec
push
shll
push
movsl
outsb
stos
das
push
mov
jae
cld
mov
imul
inc
in
lret
dec
out
pusha
dec
xor
add
arpl
cmp
fidivl
pushf
push
fidivrl
mov
pop
and
cld
sub
xchg
pop
call
push
pusha
orl
push
lret
dec
xchg
adc
gs
mov
lea
in
mov
insl
push
movsl
add
adc
or
jbe
lret
sub
pushw
sbb
xor
jnp
aas
das
ret
and
test
call
sub
xchg
inc
jl
loope
out
add
scas
dec
fldenv
or
out
scas
divb
jge
shrl
cmp
jg
push
test
insb
std
inc
mov
jb
xchg
adc
xor
out
int
add
stos
jl
mov
push
out
ret
testl
mov
xor
enter
jecxz
mov
inc
out
testl
jns
lods
ficoms
xchg
and
pop
inc
add
or
lea
add
sahf
out
mov
adc
lret
xchg
xor
shll
stos
dec
cmp
cmp
sub
aad
addb
mov
mov
mov
out
mov
int3
mov
outsb
ret
popa
xor
ss
test
push
jge
sahf
adc
int3
jecxz
loope
icebp
mov
js
fidivs
jae
or
arpl
rcrl
subb
fcoms
cmp
idivb
cmp
divl
and
inc
popl
nop
mov
adc
fwait
cmp
or
mov
jne
popa
lret
aaa
fsubs
lcall
jbe
cmp
jo
fadd
jmp
cwtl
sbb
add
sub
ja
inc
sub
out
ss
cmpsb
pop
adc
or
jge
ret
lret
es
sub
xlat
lods
out
xor
mov
jb
inc
lds
mov
in
cli
fbld
in
add
mov
pop
rcr
inc
sbb
fistpll
shll
in
fnstcw
or
icebp
les
popa
insl
fistps
pushf
clc
and
lcall
xlat
mov
mov
jl
pop
fstp
outsb
sbb
notb
mov
mov
imul
negb
cltd
mov
inc
dec
cs
or
cld
out
repnz
xchg
push
shlb
mov
push
out
mov
lret
test
mov
push
popf
aad
mov
jmp
adc
xchg
movsl
outsl
mov
mov
cmc
stc
sahf
arpl
int
pop
jb
or
jae
cltd
dec
jg
push
jecxz
and
xorb
dec
imul
mov
and
cmp
inc
jmp
leave
pop
lea
cmp
mov
lahf
into
jbe
adc
add
stc
cmp
sarb
mov
pop
push
inc
mov
cmp
push
pop
leave
mov
rorb
adc
push
add
inc
jb
cmc
into
int3
ss
scas
xchg
subl
stos
dec
or
imul
sub
xor
inc
push
and
in
outsl
pop
pop
jno
ljmp
clc
ret
int3
and
mov
in
jno
push
jb
dec
mov
scas
mov
cli
out
add
push
mov
pop
test
fsubrl
inc
imulb
push
lock
test
xacquire
pusha
cmpsl
pop
xor
xchg
daa
push
dec
sar
add
lods
xor
bound
and
mov
lahf
cmp
aad
cmp
pusha
xchg
add
push
movl
test
test
sbb
mov
mov
sbb
mov
cld
and
sbb
popa
mov
lock
push
loope
in
stos
adc
aad
pop
sarb
jp
pop
sbb
push
mov
push
sbb
jecxz
lret
out
mov
jo
rorl
ljmp
mov
lcall
xchg
andl
jno
xchg
aam
mov
mov
loop
mov
push
int
ja
sub
xor
les
jns
dec
xor
enter
adc
cmpl
mov
lret
movb
imul
mov
adc
sarl
xchg
ljmp
add
andl
xchg
push
cmp
jbe
adc
pop
xchg
cmp
mov
xchg
sub
lcall
loope
or
out
sub
cltd
xor
xor
add
jle
xchg
adc
dec
ja
fdivrs
rclb
and
aas
adc
clc
iret
fmull
push
or
inc
int3
lods
dec
testb
push
je
and
push
scas
xchg
xor
scas
sub
fucomp
ret
xor
xchg
addr16
mov
imul
clc
dec
ret
lods
out
xorb
cs
jle
dec
stos
jmp
ja
iret
popa
sbb
arpl
stos
scas
popf
hlt
arpl
push
aam
jge
adc
cmp
mov
pop
mov
or
sbb
mov
push
repz
aaa
outsb
xor
movsb
jns
push
shr
push
dec
fbld
mov
xchg
scas
xor
add
xchg
lock
andl
sub
push
cltd
xchg
stos
sbb
in
scas
jle
xor
int
xor
cld
shrb
mov
in
xlat
pop
lret
jns
push
leave
fistpll
add
mov
into
sub
mov
adc
xor
insl
sub
popa
scas
cwtl
in
add
inc
mov
mov
mov
js
test
pop
test
push
imull
out
dec
cmp
jl
enter
addr16
sbb
xor
add
fsub
push
or
adcl
insb
in
mov
xor
rcl
sbb
mov
loopne
aas
fistpll
hlt
add
and
mov
lods
xchg
xor
popf
jb
adc
lcall
dec
add
in
cltd
cwtl
sbb
mov
dec
or
loopne
fimull
or
arpl
inc
jecxz
out
jns
in
pop
xor
sbb
ds
aam
sbb
icebp
lods
fcom
pop
inc
lea
out
pushf
lea
cmp
fidivrs
icebp
and
std
cmpsl
lret
rcr
inc
repz
jle
or
add
in
xchg
lock
jns
lds
dec
les
dec
xchg
add
fistpll
lea
jge
pop
push
test
add
test
sbb
mov
dec
or
xchg
aam
adc
mov
add
mov
sbb
mov
pushf
dec
mov
js
or
andb
movsl
xchg
shlb
mov
xchg
sbb
inc
xchg
push
mov
adc
ljmp
mov
repz
mov
aas
outsl
js
cwtl
call
jg
adc
mov
xchg
cmp
fdivl
xchg
xchg
loopne
aam
mov
push
clc
and
or
jno
stos
cmpl
inc
popl
out
push
les
cmc
cmp
dec
lock
das
mov
sbb
sub
jecxz
test
repz
cltd
adc
les
out
dec
jo
sbb
icebp
xor
push
cmp
fldz
addb
scas
xchg
or
mov
mov
jb
in
mov
leave
mov
repz
leave
dec
adc
mov
mov
pop
mov
fcmovu
insl
adc
sub
stos
or
cltd
mov
pop
hlt
pavgw
lret
push
add
or
je
adc
call
mov
pop
xchg
fdivrl
xchg
mov
cld
stc
inc
lret
out
adc
in
loope
xchg
jmp
jae
dec
sar
mov
inc
int
int
pop
cs
xlat
push
and
xchg
idivl
repz
hlt
push
scas
lods
push
pop
mov
jne
push
jle
leave
gs
icebp
inc
or
jmp
jg
shrb
xchg
push
sub
push
fbstp
dec
leave
out
or
in
and
dec
not
sbb
pop
lret
ds
jo
add
insb
sub
jecxz
xchg
push
push
jnp
ficompl
or
es
mov
jo
jle
lock
into
push
hlt
mov
pop
adc
pop
int3
aas
sbb
fs
push
outsb
int
ljmp
stos
push
neg
adc
push
imul
cmc
sub
inc
je
popa
arpl
dec
or
sbb
pop
insb
push
outsl
mov
jb
mov
jne
jnp
mov
xchg
and
and
mov
outsl
mov
ljmp
sbb
adc
xor
jae
orb
cmp
add
dec
loop
xchg
sbb
bound
or
repnz
add
or
fidivs
mov
mov
sbb
push
ljmp
je
jne
inc
jmp
push
adc
cwtl
out
cmp
movsb
mov
sub
popl
xchg
or
cmpsl
inc
popa
jg
out
leave
sbb
add
xchg
cs
and
icebp
jle
into
sbb
cld
jbe
jne
or
jecxz
aad
mov
add
loopne
insb
cld
lahf
mov
jb
add
fdivl
xchg
push
xchg
rorl
add
icebp
sar
ret
xor
jge
adc
insb
mov
sar
mov
clc
gs
inc
pop
jne
push
fsubs
adc
xor
repz
sbb
jl
stos
in
movb
push
cmpl
jb
sahf
add
test
lods
or
shlb
add
mov
xchg
mov
sbb
xor
mov
fdivrl
test
lods
dec
insb
adc
xchg
dec
cmpsl
jmp
test
mov
add
cmc
pop
push
enter
repz
xchg
fwait
jle
shr
stos
in
lock
push
cmp
xor
enter
scas
ret
inc
mov
inc
pushf
ss
push
popa
push
push
scas
lds
add
mov
xchg
sbb
xor
pop
mov
test
mov
insl
cmp
repnz
adc
mov
or
pop
push
iret
adc
sub
cld
sbb
mov
adc
or
sbb
pop
push
out
lahf
leave
mov
jae
mull
daa
jmp
and
test
mov
je
loope
mulb
lahf
fidivrl
push
mov
jg
sar
sbb
push
popa
or
ss
faddl
sbb
int
or
inc
mov
xchg
sbb
test
insb
push
pop
outsl
roll
enter
add
js
jl
sti
push
fcompl
rcl
or
jo
sti
negb
mov
hlt
fistl
cmp
adc
mov
mov
das
insl
mov
std
int
push
adc
enter
vpshufd
jmp
pop
movd
mov
imul
ficomps
pop
rcrb
sbb
fcoml
sub
xor
lods
rcr
xchg
pop
das
in
adcl
dec
mov
cmovnp
loopne
inc
xchg
sbb
scas
addr16
test
movsb
outsl
lret
fsubrl
add
fists
int3
xchg
ja
loop
addr16
xchg
add
mov
xor
les
daa
arpl
popf
dec
jp
mov
test
cmp
sbb
ljmp
idivl
cmp
mov
addb
or
and
dec
push
dec
add
xor
add
cs
dec
in
pushf
mov
ja
xor
clts
arpl
mov
jmp
xchg
xor
clc
fsubp
mov
orb
xor
std
add
mov
push
cmp
pop
loop
lock
clc
test
repz
inc
fdivs
pop
fcmovnu
loope
push
in
mov
push
out
mov
xchg
rol
es
mov
inc
mov
push
add
aam
rcll
jmp
pop
and
ljmp
bound
mov
bound
aam
dec
pop
add
sub
lret
cmp
ret
cmp
fwait
in
ret
shrb
addr16
and
adc
and
xchg
inc
test
pop
sahf
lods
test
dec
jecxz
pop
xor
int3
sub
icebp
pop
pop
loopne
aaa
popf
out
cwtl
mov
mov
pop
cmp
mov
cmpsl
lret
xor
xchg
add
xor
jp
dec
insb
cli
flds
stc
les
sub
dec
movsl
movsb
sarb
inc
nop
push
jmp
leave
and
out
mov
and
jecxz
loopne
aam
lods
jb
mov
jl
inc
pusha
adc
xchg
aad
jne
repnz
ss
or
sbb
push
mov
jmp
sete
sbb
shrl
in
pop
adc
int
adc
lods
adc
mov
pop
clc
cmpsb
xchg
sbb
fistl
rolb
sbb
sbb
and
xor
fs
mov
sub
lods
push
mov
mov
push
or
adc
cmp
imul
push
enter
fisttpll
adc
icebp
push
test
rol
sbb
push
sub
loop
hlt
and
pop
mov
mov
pop
int
push
jg
js
sbb
es
fwait
gs
pop
jae
and
ljmp
les
mov
mov
mov
out
push
test
add
popa
aad
mov
mov
dec
or
jle,pt
mov
popf
fcmovbe
mov
insb
mov
cli
out
and
inc
loope
and
push
sarl
subl
inc
insl
stos
out
cli
jmp
cmp
dec
inc
lds
push
lret
mov
mov
pop
clc
int3
fldl
cltd
or
push
arpl
cmp
arpl
rcrb
push
push
mov
rclb
and
push
push
scas
inc
jecxz
dec
push
aad
jo
jnp
movsl
mov
int
push
fadd
push
dec
not
jae
rcl
data16
dec
add
nop
adc
jae
loopne
cmp
pop
ljmp
test
xchg
hlt
sub
insl
inc
test
cwtl
lock
mov
inc
test
xchg
fcmovbe
flds
sub
inc
lahf
mov
jl
out
pop
ja
repnz
jb
cmp
sbb
ljmp
xchg
jge
stos
or
pop
xchg
pop
jmp
test
add
cmp
push
out
fisubrs
mov
dec
jge
fbld
movsb
arpl
or
lods
stos
rcrb
stos
sub
arpl
add
lock
sbbb
xchg
in
cmp
lods
mov
mov
loop
sbb
mov
pop
repz
mov
pop
daa
pusha
add
xor
sbb
lods
mov
and
iret
pop
das
push
and
rcll
into
cs
pop
add
ja
mov
outsb
sti
pop
add
push
cs
push
sub
mov
in
dec
cmc
in
xor
ret
sar
comiss
fmul
jg
pop
add
ds
push
push
leave
sbb
insl
push
or
jmp
mul
mov
xchg
shlb
mov
in
pop
and
xchg
gs
push
les
iret
test
and
jnp
clc
outsl
stos
and
jbe
in
sub
mov
int
pop
add
jbe
mov
insl
pop
or
aas
xlat
xchg
dec
adc
jno
pop
cwtl
int
int
adc
mov
int3
das
xchg
push
lret
fucom
dec
dec
push
mov
cmp
fdivl
adc
sub
push
adc
aas
sti
outsl
mov
push
jbe
mov
pop
mov
and
push
mov
jl
mov
mov
popf
cmpsb
testb
adc
cmp
fisubrs
fnstsw
inc
fs
movsl
push
dec
mov
lock
mov
mov
fists
push
sub
gs
negl
in
sti
add
adc
daa
jl
ljmp
testb
mov
ficoml
xchg
adc
jne
iret
push
push
push
repnz
jae
cmc
in
jne
lret
jnp
sub
cmp
stos
outsb
cmpsl
fxch
jo
inc
int
mov
popa
imul
les
testl
popf
lods
addr16
shrl
mov
cmc
mov
sbb
cmpsb
xchg
pop
fcom
imul
adc
sub
cmpsb
dec
xchg
mov
pop
mov
or
jnp
mov
adc
sbb
pop
xor
mov
xlat
jns
aas
adc
jno
or
lds
ds
fldt
mov
shlb
movzwl
pop
outsl
leave
jmp
sbb
jle
lahf
lods
sbb
iret
push
jg
pop
int3
imul
adc
stc
mov
aaa
mov
int
mull
dec
cmp
cmpsb
insl
mov
daa
xor
cmp
fcmove
cmpsl
jecxz
ja
idivl
leave
lcall
ljmp
pushf
sbb
iret
es
sbb
jp
jo
pop
rol
fs
movsb
cmp
fistpll
push
gs
mov
ljmp
outsb
inc
jg
push
mov
adc
jge
out
dec
roll
adc
cmp
aaa
and
lahf
push
out
addr16
add
clc
or
negb
fsubrp
inc
daa
rcrl
xchg
je
nop
xor
lahf
and
mov
mov
out
cld
add
jl
cmp
inc
lods
and
push
jecxz
cmpsb
push
jmp
cmpsb
daa
fs
pop
das
sbb
addr16
popa
pop
mov
cmc
ret
lret
xor
bound
inc
jmp
jg
insl
dec
cmpl
jbe
gs
or
push
adc
pop
pop
test
pusha
or
repz
push
aad
push
in
mov
mov
mov
mov
stos
sbb
inc
insl
mov
mov
xlat
mov
bound
jg
loopne
dec
cwtl
lods
leave
cld
inc
jl
leave
dec
sub
mov
movsb
push
and
push
pushf
lret
cmp
insb
aam
adc
inc
dec
movsb
push
push
stos
cmpsl
out
and
mov
jle
cmp
inc
lods
mov
imul
mov
fcoms
adc
adc
lahf
push
popf
cs
fildll
mov
or
cmp
lods
xchg
ret
push
and
push
pusha
pushf
xchg
push
add
sbbl
or
stos
leave
es
fiadds
sahf
adc
imul
push
das
or
mov
inc
imul
cmp
mov
lret
jno
sbb
stos
in
test
stos
cmp
movsb
and
mov
mov
mov
lahf
pop
add
sub
sub
ja
lea
repnz
fnstcw
lods
out
sub
cmp
adc
dec
jmp
jae
xlat
adc
mov
arpl
lods
mov
pop
adc
xor
cmpxchg
sbb
mov
or
sbb
pop
push
mov
mov
pop
jb
fcomi
jge
xor
push
jns
pusha
repz
mov
pop
test
dec
aam
in
mov
jmp
iret
mov
mov
ljmp
jae
add
jecxz
pop
fildl
iret
jb
sub
xor
mov
add
aam
dec
aas
lcall
xchg
popa
jl,pt
sub
dec
inc
std
decl
cltd
cwtl
jmp
xor
sub
cmpsl
cmp
loope
push
jge
push
lods
xor
dec
into
jb
cltd
clc
je
ret
in
and
test
imul
pop
pop
xchg
jbe
aad
fcmovne
or
dec
arpl
mov
mov
cs
fs
add
fdivrl
fimuls
popf
lock
lock
xor
cwtl
subb
jnp
jmp
xlat
sbb
xchg
les
mov
pusha
mov
enter
mov
into
sbb
inc
outsl
dec
xor
lcall
fisttpll
xorb
fstps
ror
fidivrl
xchg
push
scas
mov
dec
gs
bound
test
and
push
mov
mov
sbb
mov
mov
mov
lock
xor
popf
orl
loope
xorb
inc
test
pop
mov
test
xchg
push
fwait
and
dec
mov
ljmp
loopne
stos
in
out
aas
push
lds
mov
bound
ror
int
scas
mov
dec
shrl
lret
xchg
xor
or
cmp
ret
inc
sarl
je
ss
dec
jne
nop
jbe
cld
lcall
sbb
in
insl
mov
xchg
cmpb
cmpl
mov
jge
incl
loope
push
cmp
inc
jnp
xor
fwait
mov
xchg
inc
pop
loop
and
jmp
imul
loopne
out
xchg
cld
cwtl
mov
fmul
jnp
out
xchg
jmp
mov
popaw
call
popf
outsb
mov
and
add
mov
insl
fwait
dec
and
xor
inc
shll
sbb
xor
sbb
ficomps
push
jg
insl
repz
addr16
lods
sub
dec
or
mov
jo
mov
adc
inc
mov
xchg
pop
in
aaa
jbe
test
out
cmp
mov
sub
xchg
pop
cmp
mov
enter
ljmp
aaa
popl
test
xchg
or
rcll
cld
lods
and
pop
loopne
mov
mov
subl
add
rcl
xor
enter
popa
in
imul
mov
mov
sub
jle
enter
cmp
lods
mov
sbb
inc
stos
add
mov
test
test
or
out
xor
imul
jp
icebp
jg
fwait
sbb
mov
sbb
cmc
imul
test
pop
xor
and
out
shll
jl
testb
xchg
jns
stc
add
out
jae
mov
lock
cli
push
inc
scas
add
or
pop
mov
addl
or
stos
movsb
scas
and
jne
lea
loop
push
add
enter
adcb
xor
js
xor
les
pop
mov
shll
push
cli
or
cmp
xor
popa
pusha
mov
pop
daa
mov
and
pextrw
jno
inc
fwait
mov
or
cmp
mov
cmpl
test
dec
xorb
cmp
xchg
das
hlt
setae
adc
movsl
adc
std
mov
inc
adc
add
sbb
push
sub
test
adc
push
stc
lahf
jae
ret
cmp
cmpl
dec
stc
mov
movsb
in
sbb
jne
mov
push
jnp
and
jmp
dec
cld
test
cld
cmpb
testb
sarb
jp
fadd
leavew
sub
bound
mov
sbb
adc
mov
inc
push
push
mov
adc
sti
aas
cs
cwtl
xchg
daa
jae
ljmp
add
ret
pop
mov
mov
repz
rclb
fisttpll
and
stos
and
or
or
mov
inc
dec
jge
cli
ss
mov
fsubs
ds
mov
xchg
adc
or
xchg
inc
leave
mov
inc
shlb
insl
sahf
in
cld
xor
adc
jge
push
cmp
rorl
inc
xlat
mov
in
jbe
int
lahf
je
mov
and
inc
inc
mov
sbb
ljmp
shl
and
pushf
rsqrtps
sbb
scas
pop
nop
andb
in
push
inc
mov
movsl
lods
add
pop
inc
orw
stc
xor
mov
sub
pop
adc
cwtl
movsl
sti
stos
repnz
sub
xor
clc
sarl
jb
test
or
test
les
dec
push
mov
or
cwtl
movsb
adc
push
repnz
int
mov
and
mov
sub
imul
mov
pop
jno
cmpsl
aad
sub
or
rcr
insb
shlb
or
xchg
add
and
mov
icebp
daa
loopne
mov
inc
sbb
orl
push
shlb
jge
push
hlt
push
sbbl
xchg
pop
mov
mov
dec
sbb
xchg
std
repnz
cli
pushf
mov
or
pusha
push
cld
mov
adc
lds
push
fadds
into
mull
lods
data16
sbb
push
js
rclb
dec
fwait
xchg
rclb
sbb
adc
sarb
fiaddl
mov
mov
mov
loope
dec
jne
ret
xchg
movsl
add
les
out
add
scas
cmp
popf
hlt
dec
sub
xor
lods
inc
shll
adc
mov
jg
outsb
mov
push
push
arpl
aas
call
out
dec
or
test
in
xor
jl
mov
leave
sub
pop
cli
fistl
mov
mov
mov
imul
dec
stos
cmp
mov
xchg
push
call
mov
inc
imul
adc
mulb
cli
fbld
pop
sub
push
fists
xchg
xor
fidivs
cltd
dec
imul
pop
sarb
xchg
push
jae
and
mov
jge
ret
mov
fisubrl
mov
in
sub
jb
push
test
rep
hlt
into
mov
add
mov
jg
inc
push
adc
int
sarl
and
xchg
movsl
test
sub
jo
pop
addl
add
cld
aaa
push
xchg
sub
cmpl
cli
mov
je
mov
pop
or
push
in
push
xchg
aaa
cmp
mov
xor
sbb
adc
pop
cwtl
mov
and
mov
repz
bound
push
mull
loopne
enter
je
in
jbe
xchg
push
xchg
sub
add
and
xorb
xor
push
dec
cmp
add
jo
jmp
xchg
outsb
aas
outsb
lret
loope
inc
xchg
mov
adc
mov
lret
clc
mov
daa
pushf
pushf
push
push
xchg
arpl
adc
cwtl
jp
xchg
pop
call
sbb
or
lcall
cltd
sti
fisttpll
mov
push
xchg
out
adc
fnsave
hlt
or
jns
loope
into
cmc
into
jns
or
and
sub
bound
sub
leave
frstor
xchg
jb
std
rcrl
pop
int
outsl
jo
outsl
adc
sahf
aaa
mov
dec
cmp
notl
fadds
xor
fnstsw
hlt
imul
in
jb
or
cmp
std
xor
sbbl
sar
insb
push
pop
das
out
push
adc
scas
lret
negb
bound
gs
sbb
jp
int
scas
fwait
test
inc
pop
pop
fnop
jno
fbld
out
fs
push
xchg
xor
cmc
jl
sar
jecxz
and
pop
lret
jge
mov
cltd
int3
adc
mov
and
sbb
fs
das
mov
stc
mov
out
mov
lret
and
lret
cmp
xor
cld
insb
fs
into
in
pop
shll
sar
call
inc
in
jns
dec
fsubs
xor
jne
aad
call
pop
mov
or
jnp
mov
sub
and
pop
jge
inc
pop
stos
push
mov
fistps
scas
mov
and
dec
mov
xchg
push
outsb
adc
adc
mov
in
cmc
or
in
lcall
adc
pop
pop
adc
stos
jp
dec
adc
xchg
xlat
test
add
or
test
repnz
xchg
jb
or
iret
aaa
dec
cmp
not
jno
gs
cmp
lea
push
lcall
sbb
push
popf
mov
std
int3
jo
cwtl
xchg
or
add
repz
mov
imul
jp
fidivrl
je
arpl
roll
pop
std
xor
push
cltd
mov
call
adc
mov
mul
lock
lret
or
mov
sbb
xlat
push
pusha
jl
les
xor
ljmp
outsb
pop
jbe
int3
inc
das
dec
es
mov
xor
dec
or
push
adc
cmc
mov
out
jo
popf
cltd
icebp
pop
and
pop
ret
leave
xor
or
lcall
in
mov
push
mov
xor
lods
sahf
sahf
cmpsl
iret
or
loope
insl
icebp
xchg
js
mov
dec
loope
in
rep
jmp
mov
bound
je
mov
sbb
inc
incl
add
jecxz
adc
jp
outsb
out
xor
rorl
in
cld
fiaddl
jg
repnz
shlb
jle
jnp
inc
adc
repz
and
xchg
fidivl
fisubrs
dec
pop
outsb
and
pushf
inc
xlat
sbb
pop
xchg
gs
jns
push
cmpsb
mov
aas
pusha
dec
dec
in
ljmp
arpl
push
incb
into
and
in
sub
push
in
inc
xchg
dec
arpl
mov
bound
or
dec
aad
mov
lds
fcoms
dec
mov
cwtl
cmp
xor
jmp
lock
dec
icebp
and
cmp
inc
jb
cltd
xor
sub
sbb
jmpw
add
xchg
outsb
cld
sub
jae
lods
jo
or
mov
xchg
adc
cwtl
jb
into
fs
mov
or
ret
sbb
sub
loopne
and
adc
push
cmpsb
push
inc
xchg
scas
sti
xchg
push
jnp
jl
jne
mov
test
push
and
into
outsw
lret
test
lahf
pusha
and
or
sub
pop
cwtl
adc
mov
add
test
dec
add
fs
sbb
push
add
scas
movsb
add
xor
fwait
jae
push
stos
jb
je
sbb
cld
sub
mov
adc
or
push
dec
outsl
ja
daa
pusha
sub
mov
xchg
into
ljmp
lds
jbe
jmp
mov
push
lret
jmp
andb
rcr
pop
jne
push
insb
stos
out
jecxz
jg
inc
dec
pop
cwtl
mov
xor
and
sahf
lahf
rorl
dec
sbb
mov
or
jmp
pop
pop
mov
cmpsl
jns
xchg
aaa
scas
stos
push
xor
cmp
cs
xor
push
sbb
shrl
lcall
pop
adc
ds
lods
pushf
inc
cmp
stos
push
icebp
mov
ss
mov
imul
lret
push
fdivr
or
fdivr
movl
pusha
movsb
jle
inc
cld
out
int3
gs
xchg
mov
inc
sub
cmpsb
push
icebp
adc
push
or
xchg
jecxz
mov
rclb
cmp
cmp
fbstp
dec
leave
dec
sbb
fists
hlt
into
aaa
aad
out
call
sbb
xchg
loope
lock
iret
add
sti
add
cmp
cmp
cwtl
xchg
or
ret
add
shlb
sub
popa
pop
mov
call
sub
addl
out
stc
sub
lcall
test
jp
cmpsb
js
jnp
addr16
inc
jne
inc
lods
sbb
nop
aam
ret
mov
cmp
or
and
pop
leave
sbb
test
xchg
rorl
push
ss
cmpsb
aad
in
xor
dec
in
jle
add
adc
mov
loop
dec
xchg
adc
push
mov
mov
push
ret
rorb
jne
sub
cmp
cli
mov
inc
imul
pop
mov
push
leave
add
xor
mov
cmc
lea
and
xchg
jo
add
sub
mov
jle
adc
loope
push
nop
inc
lods
into
xchg
pop
jb
and
add
jg
lret
leave
xchg
sub
adc
or
mov
lcall
call
div
push
dec
dec
imul
adc
adc
push
jb
push
in
lods
fldcw
fcmovnb
xchg
fwait
xchg
fidivl
push
mov
fisubrs
scas
test
mov
in
push
pop
lcall
xchg
pusha
push
add
inc
ds
push
adc
and
xorb
lea
sbb
mov
sbb
adc
jo
ret
sbb
sbb
or
les
inc
dec
xor
xor
and
and
sub
int3
push
lret
sbb
ss
mov
negb
in
sub
xchg
bound
push
xchg
adc
xchg
shll
add
and
call
pop
adc
fwait
add
out
sub
subl
cmc
adc
sub
lahf
or
jnp
leave
cmp
imul
into
scas
jl
inc
mov
mov
pinsrw
jp
sub
pop
xchg
dec
das
jb
ret
loope
pop
stos
xor
cmp
cwtl
xchg
outsb
les
mov
outsb
mov
dec
addr16
push
inc
in
popa
lods
dec
push
sub
addb
push
test
pop
sub
cli
int3
cmpsl
pusha
inc
in
mov
sahf
xor
push
mov
clc
aas
ret
dec
mov
shll
gs
jb
cmp
mov
pop
mov
jnp
add
cmc
push
mov
sbb
xchg
loopne
ds
outsl
adc
pop
add
daa
add
xor
test
out
inc
les
jecxz
cmp
mov
nop
loope
aad
pop
testb
cmpsb
add
sub
pushf
cmpb
nop
pop
fsubrs
icebp
push
fisubs
loop
dec
push
popf
mov
push
loop
xlat
and
pop
loope
or
cmpb
ds
test
adc
popa
and
stos
or
mov
int3
inc
movsb
inc
and
pop
outsb
test
into
ret
out
adc
xchg
mov
mov
xor
pop
push
add
shrb
jl
stc
xor
data16
fnstsw
notl
xlat
out
or
movl
xor
inc
xor
pop
xor
jae
imulb
add
lahf
mov
aaa
clc
not
xchg
rcr
push
aam
loopne
fldt
or
or
imul
mov
loop
cmp
pop
lcall
arpl
jno
lods
popf
shll
mov
std
outsb
in
btr
xchg
arpl
sub
lods
adc
and
jne
cmp
aaa
or
push
xchg
push
push
lods
inc
dec
inc
sub
sti
ja
mov
adc
xchg
add
jp
out
and
sbb
xor
out
arpl
movsl
pusha
add
jns
mov
mov
push
mov
iret
push
idivl
in
jecxz
pusha
pushw
aaa
test
mov
mov
mov
fistl
pop
xchg
push
cmp
xor
out
jmp
out
push
cli
fwait
out
adc
test
mov
mov
push
cmp
aam
js
jg
aas
fsubrl
in
and
jmp
sbb
mov
xchg
inc
inc
inc
loop
pop
fwait
jl
push
into
and
and
add
in
fcmovb
call
subb
scas
loopne
xor
mov
test
mov
inc
xchg
add
subl
adc
out
fwait
or
xor
sbb
pop
scas
jae
test
cwtl
mov
cmpsb
loope
dec
xor
stos
inc
sar
pop
daa
push
cmp
and
repnz
pop
cltd
mov
jp
sti
leave
mov
inc
add
rcll
scas
inc
jo
mov
or
cmp
jno
cmp
outsb
sub
jge
fisttpl
push
sbb
sarb
insb
outsb
push
cld
movsl
pop
pop
rcll
clc
jns
cmpl
sti
inc
cli
and
add
add
mov
push
popa
dec
clc
dec
out
xor
test
lcall
inc
pop
call
lahf
ja
pop
sub
jl
sti
daa
stc
nop
enter
test
pusha
mov
jge
mov
jecxz
je
or
test
les
jae
cmp
pop
fcmove
std
jbe
stos
jp
mov
out
aaa
and
and
roll
sbb
mov
pop
mov
xchg
sub
xchg
mov
sbb
lock
pusha
in
push
ret
out
out
mov
rorl
stos
dec
add
inc
into
mov
sahf
jg
icebp
or
or
nop
fsubl
pop
sub
pop
shll
imulb
jne
xchg
jae
test
mov
and
and
fstpt
or
pop
sbb
push
mov
xchg
xor
aam
and
icebp
xlat
dec
stos
insl
sub
outsb
add
cmc
jnp
data16
daa
or
mov
mov
inc
inc
mul
js
les
mov
or
ret
lret
andb
ficomps
adc
and
divl
hlt
sti
sahf
xlat
movsb
or
mov
xchg
out
cld
jne
pop
cmp
xor
inc
add
mov
stc
inc
pop
ret
and
add
jnp
inc
in
mov
sbb
jge
lock
es
addr16
cli
pop
mov
js
gs
mov
js
pop
pop
leave
femms
cwtl
xchg
dec
insb
jno
jl
stc
push
popf
add
adc
and
sbb
fcom
test
cmp
cld
push
dec
lret
not
adc
test
bound
sub
movsb
cmpl
push
gs
shll
dec
ja
andl
sbb
int3
inc
lock
fmuls
mov
xorl
mov
scas
mov
push
insl
ss
inc
subb
add
out
sti
sub
leave
pop
and
inc
loop
xor
aam
test
and
arpl
xchg
cmc
daa
aam
cmp
ficomps
in
and
adc
and
cmp
mov
or
outsl
or
mov
imul
xchg
sub
ljmp
push
xchg
mov
pop
jne
inc
push
shlb
sbb
pop
adc
repnz
out
dec
aad
lcall
sti
dec
je
in
sbb
sbb
mov
adc
mov
fsub
jno
add
enter
and
lret
out
test
cmp
aas
mov
and
mov
imul
inc
inc
xchg
mov
pop
cmp
popa
enter
addr16
cmc
xor
inc
popl
aam
pop
sbb
or
cmpb
add
add
xor
pop
sub
fmuls
out
lock
jnp
push
xorb
jge
les
mov
std
mov
push
adc
imul
jecxz
sub
adc
stc
xchg
adc
icebp
or
mov
inc
out
stc
or
sub
xor
and
inc
aaa
pop
out
cmpsl
jae
jl
sub
repnz
ret
dec
stos
dec
clc
sub
push
pop
xchg
call
mov
pop
iret
jbe
mov
add
lds
jbe
dec
popf
or
call
dec
pop
cmp
dec
xchg
repnz
int
mov
mov
xor
std
adc
rcrl
enter
fsubrs
out
adc
ljmp
out
sbb
adc
push
add
mov
push
mov
enter
mov
int
roll
pushf
scas
mov
push
mov
xor
pop
inc
add
adc
ja
push
shrl
popf
icebp
int3
sbb
pop
lcall
insb
ja
shl
mov
and
add
sbb
inc
into
loope
or
jbe
test
mov
data16
hlt
rcll
aad
movsb
jecxz
mov
inc
adc
or
and
fnstsw
jmp
sub
jo
dec
lret
mov
push
xor
mov
and
mov
ss
lods
cltd
add
call
ret
mov
jl
std
adc
push
in
pop
xor
outsl
mov
dec
push
jae
dec
jnp
adc
int
lahf
scas
movsl
repz
out
cmpb
xor
sub
pop
push
mov
inc
js
sub
cld
and
pop
xchg
icebp
movsb
push
fsubs
pushf
mov
or
or
xlat
in
sub
mov
loopne
js
repz
lock
jp
pop
or
jb
xlat
out
inc
and
cwtl
loopne
insb
mov
fldl
xorb
fs
jge
int3
lret
pop
add
jmp
mov
test
xchg
dec
pop
or
cs
push
in
inc
jae
cmp
adc
cld
sub
lods
lea
dec
je
cwtl
sbb
inc
push
jbe
xchg
adc
cmp
pop
jecxz
dec
xchg
out
insl
ror
sbb
inc
cmp
xlat
push
pop
pusha
sub
leave
mov
add
inc
xchg
dec
or
lea
aam
lods
xor
out
mov
pop
mov
cmp
xor
lods
pushw
shr
mov
or
icebp
iret
cwtl
mov
and
bnd
call
push
into
add
scas
movsl
jp
xor
dec
xor
outsl
aaa
push
xchg
outsb
out
mov
inc
pop
jno
push
shr
jmp
rcr
xor
sbb
mov
mov
mov
mov
pop
or
pushf
int3
mov
and
pop
test
arpl
int
popf
jp
dec
push
cli
adc
inc
fisttpl
add
fcoms
add
lret
testb
inc
sub
aas
cmp
jo
dec
pop
imul
mov
lea
out
add
mov
fstl
xchg
mov
inc
insl
mov
push
scas
stc
pop
lock
push
test
out
in
cmp
cltd
and
push
ljmp
ss
enter
mov
pop
scas
fdivrs
daa
fisttpll
push
cmp
pop
xor
cmpsl
mov
xchg
cld
sbb
or
sahf
out
in
lea
aad
in
xchg
mov
std
pop
add
cmpsb
adc
xchg
outsb
aam
add
mov
bound
sarb
incl
iret
repz
lret
in
add
jmp
ja
repz
sbb
in
mov
push
icebp
out
lea
xchg
inc
imull
stc
hlt
imull
mov
jmp
inc
out
faddl
mov
ret
inc
out
das
xlat
and
test
fs
imul
addl
bound
cmp
insb
pop
outsl
sub
bound
adc
mov
iret
loop
insl
dec
popa
pop
movsl
jg
pop
mov
add
jno
xchg
xchg
insl
mov
js
ds
xchg
ss
scas
xor
pusha
xor
push
test
fwait
xchg
sub
arpl
or
inc
pop
dec
ret
jp
enter
ret
imul
push
je
outsl
xchg
inc
inc
and
jae
sub
mov
adc
push
mov
mov
and
mov
xchg
int
rcr
dec
loopne
sti
dec
sbb
es
push
loopw
jb
adc
xor
cmpsl
xor
mov
push
lock
cwtl
push
cmpsb
dec
inc
xor
mov
sbb
pop
inc
mov
out
adc
pushf
stc
mov
mov
bound
sbb
pop
pop
mov
add
xlat
rorl
xchg
inc
roll
or
xor
sub
ficompl
xchg
inc
add
sbb
fstpl
inc
test
maxps
cltd
jb
lods
xchg
or
scas
xchg
stos
lret
xchg
out
faddp
rcr
or
or
ficoms
jp
mov
sbb
jns
insl
pop
lds
dec
adc
iret
push
sub
inc
ja
in
shlb
and
add
xchg
pop
fstl
add
adc
fnstenv
mov
lcall
shll
arpl
mov
jne
outsl
xchg
xor
adc
mov
movsb
push
data16
mov
jmp
pop
jle
add
push
xchg
clc
lret
cmpsl
mov
and
in
push
push
jmp
jmp
sub
stc
cmp
in
xor
lahf
or
push
ja
push
pop
das
lret
xor
scas
push
cmp
adc
outsl
std
hlt
push
addl
xor
nop
dec
mov
xor
and
or
cltd
addr16
sub
lock
lods
mov
pop
sub
lahf
les
inc
or
cmp
cmp
jns
sub
stos
les
xlat
popa
sahf
pop
sub
push
push
xchg
cmp
repz
sbb
insl
aad
int3
xchg
ret
mov
movsb
cwtl
pushf
xchg
pop
repz
jae
fnstsw
dec
mov
bound
ja
add
xor
subb
repnz
add
lret
inc
stos
outsb
add
sub
int
fnstenv
cmp
cmp
lret
pusha
cmc
inc
xorb
imul
mov
es
cmpsb
adc
stos
pusha
mov
pop
add
in
jmp
pop
cmp
jae
inc
and
test
inc
and
addr16
mov
inc
cmp
mov
inc
imul
fdivrs
xchg
dec
pop
and
repnz
and
je
ret
push
mov
pop
aas
inc
inc
icebp
sbb
and
ss
cs
jmp
ret
xor
mov
cmp
ret
push
mov
insb
mov
fildl
out
fsubs
or
jp
push
mov
inc
pop
cmc
movsl
mov
jmp
mov
fsub
mov
push
in
and
nop
das
mov
leave
sar
jo
or
mov
inc
add
and
mov
popf
push
test
out
push
stos
inc
pop
ss
int
aaa
mov
sbb
cmp
in
lahf
call
pop
aas
dec
ficoms
xchg
push
xchg
sub
sar
out
cmp
sar
or
xchg
test
out
xor
idivb
pop
orb
add
cmp
ret
imul
inc
inc
fwait
xchg
div
cmp
clc
fadd
push
fwait
jb
and
pop
pop
inc
mov
adc
mov
or
pusha
fildll
out
adc
adc
push
lea
inc
push
xor
mov
dec
add
rol
aad
push
adc
daa
cmp
cmp
mull
add
fmulp
lds
sub
cmp
flds
adc
adc
test
jns
xchg
mov
into
mov
mov
sub
enter
in
mov
out
cmp
push
sbb
adcb
cmpsb
push
aas
nop
add
dec
rclb
arpl
jle
jns
in
push
jecxz
mov
mov
lods
pop
mov
rcll
adc
fildl
imul
pop
rcl
stos
mov
lcall
cmpsl
xchg
mov
dec
out
push
pop
sahf
mov
stos
inc
sarl
mov
jnp
stos
popf
popa
mov
das
mov
roll
push
xchg
xchg
jle
push
in
adcl
ss
lock
dec
and
fidivl
adc
cwtl
inc
cmp
sub
pop
ret
mov
mov
push
cmp
cmp
dec
and
mov
add
jp
lods
out
aas
andl
add
mov
pop
sti
dec
add
aam
xchg
sub
inc
pop
loopne
gs
adc
insb
cli
outsl
movb
adc
repz
push
xchg
mov
xchg
mov
cmpsl
scas
inc
adcl
mov
dec
jecxz
fs
mov
call
xor
lods
fisubrl
inc
stos
out
jns
stc
fcmovbe
jl
pusha
cmp
mov
xchg
shrl
dec
loopne
sub
sub
movsl
mov
mov
out
in
push
ljmp
inc
mov
and
mov
cli
dec
add
je
scas
inc
xor
cld
push
and
in
dec
xchg
mov
out
mov
adc
cld
xchg
sbb
sbb
fstp
aaa
and
xor
pushf
adc
pusha
addr16
xchg
inc
les
in
xchg
xchg
fidivrs
jp
push
mov
sti
mov
data16
cld
jae
sbb
add
pushw
js
fdivrl
fnstsw
dec
stos
out
mov
mov
add
pop
sti
push
fs
pop
push
out
dec
je
inc
jns
add
add
inc
inc
pop
jnp
push
into
dec
jmp
sti
cmpsb
push
or
test
mov
pushf
enter
xchg
mov
insb
std
adc
shlb
or
jbe
lds
dec
fidivrs
and
mov
pushl
ljmp
aaa
mov
les
insb
jno
xchg
pop
in
in
sub
clc
in
sbb
push
shlb
cmc
pop
test
add
jbe
popl
aas
cli
jnp
rorl
mov
cs
inc
mov
jmp
mov
pop
mov
mov
adc
out
xchg
cmp
stc
stos
dec
lahf
jno
cltd
add
sub
stos
das
and
push
stos
pop
scas
xchg
cmp
push
mov
lcall
xchg
adc
jbe
ljmp
mov
inc
sub
mov
pop
enter
and
loope
pusha
cmp
cwtl
jnp
test
test
rorb
xor
hlt
xchg
sub
xchg
adc
inc
orl
fisubrs
lahf
pop
mov
jg
mov
xor
mov
icebp
mov
in
cmp
xor
and
jg
pop
fwait
dec
jp
adc
jle
out
push
js
push
jl
and
jmp
es
push
adc
jle
adc
jmp
imul
mov
cmpl
cmc
test
aaa
xchg
and
adc
xchg
xor
into
sbb
std
pop
invd
jecxz,pt
adc
cmp
arpl
leave
and
cmc
ljmp
add
repz
out
mov
cmp
lods
roll
je
xchg
dec
rclb
pop
aas
push
sbb
xchg
dec
xor
ds
push
filds
or
loopne
and
in
dec
loope
ret
mov
xor
out
xchg
xchg
inc
pushf
pushf
mov
jecxz
pop
movsb
jno
outsl
stos
cmp
bound
inc
js
lret
pushl
in
add
aas
fs
movsl
mov
imul
dec
xchg
into
mov
xchg
call
pop
or
cli
test
data16
and
es
ret
lods
inc
push
mov
mov
sti
aaa
xchg
popf
pop
je
xor
push
or
mov
mov
sub
inc
dec
adc
cmc
xchg
ljmp
mov
pop
jp
out
scas
cmp
push
mov
dec
xchg
movsb
jg
jb
inc
inc
sbb
mov
sub
movsl
and
cmpl
push
push
clc
pop
scas
aam
test
xor
mov
fnstenv
dec
fstps
adc
call
mov
cld
ror
outsb
cmpsb
push
mov
out
int3
mov
mov
sti
push
out
sbb
sbb
negl
mulb
movsb
movsl
sub
pop
adc
scas
jmp
test
cmp
data16
cli
jns
xlat
dec
mov
lock
daa
add
sbb
scas
cmp
cs
jbe
push
add
repnz
ret
and
addr16
test
xlat
mov
inc
inc
pop
scas
lret
popa
xchg
test
mulb
popa
push
jo
rolb
xor
and
push
xor
inc
sbb
stos
div
stos
xchg
add
adc
cwtl
out
adc
andb
inc
cmp
jle
pop
jl
test
jo
push
or
iret
xchg
sbb
add
into
mov
jne
push
pop
jo
xchg
mov
test
adc
or
iret
sub
xor
mov
xchg
cmc
std
cmpsb
lock
mov
and
cmp
repz
ljmp
or
pop
jne
xchg
inc
fs
scas
dec
mov
mov
sti
mov
ss
add
movl
push
les
cmp
cmc
subb
scas
inc
mov
fidivrl
es
mov
adcb
jle
mov
add
addr16
cmp
inc
xchg
mov
divb
scas
fldenv
fsubrs
outsl
pmuludq
sahf
int
sub
lcall
and
arpl
icebp
pop
xchg
jbe
scas
adc
fwait
jmp
pop
xchg
ss
mov
out
xchg
push
leave
push
push
stos
mov
ret
mov
jl
dec
inc
xchg
mov
leave
imul
pop
dec
sarl
xchg
lock
lret
loope
lock
into
mov
stos
stos
arpl
lods
enter
mov
xchg
lcall
push
or
push
xchg
inc
insb
mov
aaa
xchg
mov
int3
das
bound
dec
push
dec
or
shlb
jecxz
sbb
mov
sub
add
scas
jnp
push
jmp
int3
xchg
inc
aad
cld
rorb
xor
mov
mov
mov
xor
in
adc
orl
pop
movb
dec
pushl
mov
mov
ret
hlt
xchg
sbb
cmp
mov
sahf
xchg
jns
nop
and
mov
cmpsb
push
xor
dec
aam
mov
fstpl
ss
xchg
notb
cs
sbb
lcall
sbb
add
push
push
fcos
adc
sub
lods
mov
fldl
aas
in
je
cmp
adc
inc
fiadds
movsb
mov
dec
and
pop
in
sub
ds
xchg
push
xchg
aas
stos
push
sbb
adc
adc
fs
std
push
mov
jb
push
js
mov
ss
aam
sahf
push
mov
sbb
jle
dec
pop
inc
fsubrs
repnz
ror
jp
daa
mov
out
popf
test
push
sub
incb
dec
ret
dec
imul
and
adc
iret
mov
xor
pop
rolb
shll
pusha
jo
jg
pop
dec
movl
repz
or
pop
sub
mov
inc
push
cmp
jle
ja
push
shrb
pop
enter
and
shl
stc
sar
lds
mov
roll
pusha
mul
pop
and
ljmp
adc
testl
adc
loope
and
add
aam
xchg
clc
xor
dec
insb
pop
jp
inc
pop
sbbb
cmp
jmp
inc
mov
jb
mov
inc
xchg
popa
mov
ds
and
mov
loopne
inc
push
fwait
xor
push
mov
push
std
outsb
push
or
aaa
cld
cmp
in
stos
jp
pushf
push
pop
orb
pop
fucomi
in
add
mov
lret
add
jmp
or
into
loop
xchg
dec
push
jb
mov
dec
sub
decb
push
lds
xchg
push
or
cld
pop
loop
push
movsl
cltd
push
sub
daa
jecxz
xor
cmpsl
cwtl
fbstp
test
xor
push
daa
scas
ss
rorb
subb
pop
fildll
in
repz
jle
and
in
jne
cmp
mov
push
cmc
push
sub
push
ljmp
loopne
adc
lea
rorb
sahf
lcall
cmc
jo
adc
bnd
pop
xchg
in
testb
scas
adc
cli
outsl
inc
ss
sub
into
aas
enter
addl
ret
push
mov
faddl
pop
aaa
pop
aad
mov
in
add
xlat
dec
add
sub
xchg
rorl
lcall
cltd
inc
mov
outsb
mov
test
and
aam
lds
inc
negb
cltd
fcom
push
sarb
testb
xchg
dec
rorl
sbb
dec
pop
mov
mov
push
push
negb
and
jp
clc
add
jecxz
push
jle
imul
adc
push
ror
clc
add
jne
pop
ja
sub
xor
sti
loope
fucom
inc
xchg
xchg
inc
aad
inc
dec
out
rolb
pop
mov
fimuls
fwait
pop
jno
in
cld
adc
add
out
in
sahf
stc
rcrb
lods
sub
adc
mov
in
out
lods
push
jge
xchg
sbb
lahf
insb
rorb
cmp
subb
jg
jbe
cmp
or
enter
push
notb
xor
jmp
xchg
test
ret
jecxz
aaa
enter
fmull
fbstp
and
jle
mov
mov
dec
mov
addr16
mov
add
xor
lods
shlb
sub
adc
fs
aad
xor
pop
xchg
xor
ljmp
cmp
in
pop
movsl
cli
and
jecxz
popf
and
or
frstor
dec
cmp
std
cli
adc
and
add
rclb
sbb
mov
sbb
sbb
fcomps
inc
adc
fmull
dec
idivl
loop
or
jle
into
xchg
fisubl
outsl
lea
and
xchg
cmpb
insb
inc
jo
xor
outsl
pop
fadds
xor
insl
or
shl
lret
add
and
mov
inc
or
dec
out
sahf
pop
lcall
int
jb
jge
loope
pop
push
and
stos
sbb
add
cld
xor
xchg
insb
xchg
gs
sub
test
clc
xchg
ss
cs
cmp
scas
incl
mov
mov
inc
sbb
inc
aad
jle
rcll
mov
adc
ss
jbe
sub
sub
testb
pop
jnp
cwtl
lods
dec
and
mov
popf
scas
xchg
std
fsubl
mov
jle
ja
in
orl
cltd
andl
mov
iret
pop
adc
inc
jnp
mov
lea
out
nop
scas
aad
movl
sub
mov
shl
out
roll
xchg
pop
or
out
cmp
outsb
add
mov
sbb
mov
push
push
das
and
cmpsb
add
das
fdivrs
arpl
cmc
es
hlt
sub
xchg
rcl
lcall
imul
push
add
push
cmp
stc
ss
xlat
bound
ret
mov
pop
pop
fiaddl
adc
mov
les
lods
lods
lods
imul
lahf
jne
xor
add
lea
aad
les
ja
mov
clc
add
push
jmp
inc
pusha
nop
jbe
mov
les
loopne
mov
cmpsb
add
pop
cltd
aam
mov
mov
xchg
xor
outsb
cmp
xor
sbb
aam
movsb
loope
andl
iret
mov
jnp
jae
adc
in
lcall
adc
and
xchg
les
xor
data16
das
dec
inc
mov
lods
cld
jae
mov
lret
ret
jne
mov
push
lods
rorb
std
adc
ljmp
lods
jns
int3
in
and
mov
jle
cmpsl
dec
xchg
idivl
orl
dec
mov
jmp
or
ficoml
pop
xor
push
or
mov
imul
xchg
push
cmc
aas
jo
fists
movsl
push
mov
insb
adc
repz
xchg
shr
cwtl
in
gs
cmp
xor
cmp
aaa
lock
scas
inc
movsb
cmpsl
jb
sahf
cmc
aaa
pop
pop
fwait
mov
xchg
addb
add
popa
jne
pushf
sbb
je
in
sarb
mov
xor
push
cmc
adc
ja
cmp
push
mov
std
outsl
inc
fwait
call
inc
dec
or
mov
mov
cli
jle
testb
adc
nop
rclb
scas
nop
jnp
adcb
out
add
mov
cmp
dec
push
jb
mov
mov
pop
sub
clc
cltd
loopne
in
mov
xchg
test
es
mov
ret
sbb
jb
cmp
lret
jbe
dec
sahf
xchg
mov
sbb
int3
inc
mov
mov
ret
in
jns
hlt
cmp
cmovb
shlb
insl
mov
popa
cwtl
imul
pop
push
ds
xchg
jmp
stc
fsub
repnz
push
pop
stos
das
mov
dec
mov
cmp
push
cmp
jl
clc
adc
push
push
movsb
push
mov
movsl
cmpsl
sub
add
pop
imul
rol
dec
xor
dec
in
inc
in
sub
popf
cmpsb
lahf
add
inc
icebp
data16
sbb
jns
repnz
inc
das
add
mov
imul
mov
mov
cmpsl
fiadds
sbb
push
aas
clc
xchg
adc
sub
into
out
repnz
adc
sbb
arpl
in
xor
fwait
mov
and
push
cmc
cli
mov
jae,pt
out
pushf
int3
fwait
inc
sarb
inc
inc
jnp
dec
or
loope
test
jno
pop
pop
xor
push
fwait
testl
repz
cmp
cmp
jo
pop
in
mov
mov
mov
aad
fstpl
push
xlat
pop
jno
push
call
mov
adc
xchg
imul
movsl
test
je
inc
push
jno
daa
push
sub
cld
mov
push
ss
cmp
inc
cmp
sti
adc
push
xor
idivb
inc
call
adc
repnz
pop
push
or
mov
ret
mov
loopne
adc
out
sub
xor
pop
out
inc
js
je
inc
push
inc
test
xor
mov
rol
xor
daa
push
in
push
adcl
cli
movsb
mov
pop
rorb
mov
lret
mov
jae
sub
jo
xlat
jl
fstpt
cmp
xor
ja
in
dec
adc
mov
sub
adc
sbb
lahf
shrb
jl
lahf
jg
pop
cmpb
icebp
jb
icebp
ret
cmp
pop
xchg
adc
cli
scas
insb
sub
pop
sbb
neg
jbe
dec
int
mov
xchg
cwtl
sarb
adc
test
call
loop
mov
push
les
pop
fsubs
jbe
int
dec
je
cmp
ljmp
xor
pop
pop
xor
mov
sub
in
dec
xchg
mov
mov
xchg
into
mov
lret
sub
int
or
rclb
adc
pop
pusha
or
ja
pop
push
fildl
fs
pop
xor
fistl
cli
jl
jmp
pop
mov
add
mov
cmp
pop
sahf
xor
out
mov
stc
cltd
scas
repz
mov
out
xchg
sub
add
xchg
aaa
mov
jns
lcall
jo
movsl
push
mov
push
cwtl
xchg
and
hlt
sbb
insl
jbe
pop
cmp
mov
je
jmp
in
adc
and
dec
cmp
dec
nop
xchg
addr16
or
int3
addl
arpl
test
mov
sub
rorl
mov
sarl
inc
jl
packuswb
jno
push
jecxz
sbb
lock
cmp
xor
add
addr16
or
gs
cmp
push
dec
dec
std
mov
push
jecxz
sbb
mov
xlat
in
mov
xchg
int3
xor
pop
pop
lods
xchg
mov
roll
je
outsb
cli
fsts
xor
rorb
cmp
aas
clc
jae
add
jne
mov
fdivs
cmc
mov
dec
pop
lock
loopne
sub
mov
daa
andl
or
loop
inc
fmull
dec
inc
push
dec
loope
xor
jmp
lods
xchg
mov
dec
add
pop
pop
sub
push
mov
and
adc
dec
dec
nop
sahf
dec
insl
faddl
mov
pop
arpl
nop
loope
xor
add
sub
stos
or
ds
std
pop
jns
insb
test
sahf
je,pt
scas
inc
stos
mov
pop
shrl
jbe
iret
xorl
inc
xchg
xor
popa
xor
dec
dec
xor
ror
fwait
es
xchg
xor
bound
xchg
pop
add
mov
adc
push
or
test
inc
xchg
jle
mov
xor
mov
in
movsl
xchg
js
xchg
adc
jb
push
lods
pop
inc
mov
sbb
loope
out
and
adc
mov
outsl
outsl
cmpsb
mov
jg
and
xlat
pushf
movsl
xchg
test
mov
sub
out
xor
fdivrp
stos
lret
sub
and
jo
movsl
pop
jecxz
inc
xor
mov
scas
mov
xor
push
add
push
loopne
sub
push
push
ja
and
push
dec
test
lds
iret
mov
adc
inc
imul
clc
pop
dec
cmp
xor
rdpmc
jne
ss
jno
mov
xchg
jne
test
mov
jmp
mov
into
insb
aas
pop
push
xchg
add
test
loope
push
lahf
pushf
subl
mov
cli
mov
negl
sahf
push
adc
inc
insb
inc
test
add
mov
leave
filds
dec
aad
mov
and
mov
push
leave
or
adc
inc
faddl
lds
xor
and
add
push
std
push
fcmovbe
mov
imul
jo
add
sub
mov
mov
in
mov
das
ljmp
mov
andb
leave
sbb
test
sub
xchg
adcb
in
push
mov
sbb
aam
xor
in
mov
int3
fucomip
jne
push
mov
add
adc
insb
scas
fwait
inc
jae
outsl
fs
mov
jge
pushw
dec
movsl
push
pushf
sbb
and
mov
xchg
mov
xchg
xchg
or
cmp
imul
sub
pop
loop
lcall
inc
inc
ja
pop
ret
add
add
add
push
fsts
mov
cmp
dec
ret
pop
sbb
lcall
sub
insb
pop
mov
aam
lods
mov
data16
fucomp
jb
stos
push
xchg
addl
sbb
nop
adc
cwtl
add
dec
daa
pop
jns
leave
fwait
or
aam
mov
xchg
popa
push
insb
jl
fstpl
inc
ret
mov
xchg
vpandn
jne
mov
push
sub
dec
addl
mov
mov
leave
in
arpl
stos
inc
fnstsw
jge
sahf
int
shrl
adc
add
inc
stos
adc
into
inc
cmp
cli
jmp
insl
scas
ljmp
in
jo
notb
add
sbb
shll
js
or
sti
mov
rcrl
out
imul
or
nop
in
nop
inc
and
adc
push
push
mov
push
sbb
lds
dec
nop
ljmp
jae
inc
aad
jecxz
push
aas
stos
repnz
or
stos
mov
jno
mov
out
cwtl
dec
inc
fwait
sti
loopne
push
lret
sahf
sub
add
or
mov
push
xor
out
orl
dec
aas
add
cwtl
in
fwait
ret
enter
sub
xchg
add
pop
cld
mov
jae
pop
sub
addr16
dec
ja
pop
scas
cld
jb
arpl
inc
int3
aaa
imul
sbbl
dec
and
popf
stc
loopne
mov
mov
jmp
test
xchg
sub
adcb
stc
loop
or
outsl
xor
cltd
ljmp
mov
lret
dec
push
xor
test
and
stos
in
or
or
and
add
fucom
imul
and
pop
cmp
jno
movsl
or
enter
mov
dec
loopne
test
push
nop
nop
pusha
in
insl
inc
jecxz
pop
lret
loopne
pop
in
fs
or
sbb
sub
cmp
mov
iret
adcl
cmp
sarl
xor
or
cmp
ljmp
mov
jo
fildl
int
jns
scas
inc
and
mov
mov
mov
pop
and
loope
insl
lds
push
ret
mov
imul
cmpsl
iret
sbb
iret
cld
push
and
push
xchg
pop
mov
or
mov
and
mov
loopne
fisttpl
hlt
inc
decb
cmp
jl
outsb
and
inc
fcompl
fwait
pop
js
mov
mov
int3
jl
mov
mov
mov
pop
xor
lea
insl
mov
mov
frstpm(287
enter
push
cmp
xchg
and
xchg
loop
xchg
add
es
repnz
jns
adc
pop
out
add
add
sub
sbb
mov
not
fwait
lds
xchg
mov
je
mov
xor
dec
mov
xor
push
push
mov
jb
xor
hlt
or
xchg
xlat
and
stos
in
int
test
leave
popf
jle
mov
push
repnz
pop
jnp
jge
lcall
es
jp
xor
adc
loopne
jbe
xor
sub
aad
adc
jmp
lds
mov
mov
pop
pop
test
xor
imul
stos
inc
stos
xchg
cli
repz
in
cmc
cmpsl
int
lds
xchg
in
pop
in
add
int
pop
loopne
fsubp
lret
fisttps
xchg
sub
pushf
xor
mov
sbb
cld
mov
xor
repnz
cmp
pop
pop
sbb
mov
lret
xchg
clc
faddl
or
loope
xorb
repnz
xchg
iret
shrb
mov
adc
sbb
enter
outsb
and
push
mov
and
and
dec
das
stos
shlb
cwtl
lret
dec
cmpsb
inc
pusha
inc
cmp
fcmovbe
std
movsb
adc
sub
mov
mov
add
std
pop
pop
in
lods
sbbl
loope
cmpsb
call
mov
mov
adc
or
jne
outsl
push
adcb
stc
dec
dec
mov
mov
xchg
xchg
out
js
rcl
pusha
lds
test
mov
xor
adc
cmp
mov
jae
cltd
out
inc
rcr
mov
repnz
push
iret
je
or
ss
es
dec
in
sub
xlat
cwtl
lret
test
mov
bound
insl
push
icebp
jg
hlt
inc
mov
mov
push
xorb
popa
mov
mov
notb
test
test
ficoml
xchg
pop
movsl
add
mov
or
mov
adc
add
cmpsl
out
cmp
mov
pop
cmp
jp
sbb
in
lcall
jbe
push
sub
lret
jne
insl
lds
cmpl
insl
jmp
or
xchg
arpl
jmp
or
das
mov
in
add
adc
sub
fbstp
testl
lcall
shlb
movsb
adc
subb
xchg
adc
ss
dec
pushf
in
ds
inc
push
jbe
fdivp
dec
push
lahf
enter
mov
out
addl
mov
mov
leave
in
jecxz
push
ljmp
jne
rclb
xchg
fidivrs
test
aas
das
mov
dec
mov
popa
stos
movsl
hlt
lods
dec
ja,pn
mov
xchg
nop
jno
inc
aas
call
or
jns
popf
outsl
sub
lcall
test
mov
push
outsl
divl
ds
call
movsb
push
popf
mov
inc
mov
and
sub
scas
shrb
fsubr
dec
leave
pop
cwtl
mov
jl
inc
add
out
mov
shl
ljmp
adc
dec
iret
or
cmp
xor
cmp
lahf
xchg
sbb
imul
mov
xchg
loop
add
xor
inc
mov
rclb
pop
ja
int3
sbb
and
lock
dec
xchg
fsub
stos
jbe
out
mov
inc
dec
mov
mov
int3
sub
mov
ljmp
aas
lds
roll
push
jb
mov
push
xchg
pop
iret
or
gs
lods
fcoml
loope
test
and
push
rcrl
icebp
add
orl
repz
dec
cmp
nop
xchg
dec
pop
popf
movl
xchg
adc
mov
outsb
fsubs
dec
repz
mov
ss
dec
or
mov
aas
add
inc
adc
aaa
mov
aad
xlat
out
dec
sub
inc
push
dec
test
dec
mov
mov
cmpsl
cmp
cli
dec
dec
out
clc
stos
pop
xchg
jns
decl
cmp
add
mov
xchg
mov
int
adc
pcmpeqd
aas
mov
pop
inc
icebp
idivb
sahf
xor
fs
mov
pop
loop
mov
and
sbb
adc
pop
sub
out
and
xchg
sbbb
lea
out
push
pop
ret
fidivrl
loop
je
xor
sbb
js
ljmp
dec
fistpll
int
call
mov
into
sbb
jb
aas
sub
dec
jecxz
adc
add
loop
jmp
adc
inc
mov
push
push
popa
or
jo
ja
ficomps
std
xchg
outsl
inc
iret
jno
outsl
andb
push
je
dec
mov
pop
inc
scas
xchg
and
outsl
sahf
push
add
pushf
fs
mov
mov
jo
xor
mov
lea
test
push
rcrb
xor
xor
sbb
jle
xor
scas
dec
lea
nop
pusha
rcr
out
sbb
sub
imul
add
movsl
vmread
stc
cli
fsubrp
xchg
mov
push
or
ret
dec
push
movsb
mov
outsl
arpl
dec
mov
adc
push
rorl
loope
stos
pop
iret
pop
push
int
js
pop
inc
lcall
pushf
sbb
sub
mov
xchg
adc
push
xchg
sarb
gs
std
dec
sub
push
addl
and
sarl
and
jb
or
dec
into
mov
addb
xor
cs
and
test
aas
test
lods
xchg
ficoms
xchg
jmp
shll
dec
push
xorb
fsubrl
lea
cmp
add
lods
mov
and
imul
loopne
inc
pop
gs
sub
inc
je
sub
aaa
and
std
popf
imul
sbb
pop
movsl
fstl
bound
mov
xchg
pop
rcll
sbbl
jle
lret
in
jl
xchg
adc
mov
jnp
fmull
ljmp
pop
nop
pop
mov
imul
inc
lahf
dec
jae
dec
xlat
xor
pop
in
call
and
stos
pop
add
and
ljmp
mov
addr16
sbb
call
addr16
sub
and
leave
dec
dec
sahf
pop
jle
adc
aad
pop
repnz
jno
fwait
xorb
xorb
jne
iret
pop
or
ljmp
add
rcrb
lea
lock
stos
rorb
push
sahf
push
pop
xchg
push
dec
call
push
lock
fldl2e
das
in
add
cmpb
adc
popf
xchg
ljmp
push
inc
pop
inc
mov
imul
scas
popf
cld
test
sub
lret
and
cmp
nop
jge
cmpsl
das
fwait
int3
add
pop
arpl
repnz
or
movsl
adc
iret
insl
sahf
cmp
mov
lcall
mov
xor
inc
mov
mov
cwtl
icebp
adc
pop
or
pushf
inc
in
stc
gs
mov
pop
aaa
rolb
jmp
stc
stc
jmp
out
scas
push
notl
bound
lods
and
add
cmp
cmc
inc
mov
xor
pop
repnz
sub
cld
shlb
sub
mov
nop
mov
ds
and
xor
adcl
push
loop
sarl
aad
adc
inc
cltd
cmc
jne
test
jl
mov
jbe
rcrl
pop
sub
fcmovnbe
jae
pop
cmpsb
outsb
xor
cltd
jns
lods
jno
add
dec
lds
mov
sahf
iret
in
call
dec
pop
sub
or
push
fcomps
test
push
mov
or
mov
jnp
pop
xor
pop
push
and
out
push
lods
leave
mov
sarb
aam
pop
mov
adc
js,pt
jb
push
std
repnz
dec
pushf
and
or
out
add
ret
cmp
pop
xchg
adcl
das
jno
repz
push
arpl
xchg
pop
sub
fwait
jge
daa
add
bound
cmc
inc
adc
ficoml
data16
jg
lods
jmp
iret
notb
or
cmpsl
inc
pop
push
inc
in
jnp
clc
push
sahf
lret
test
and
xchg
push
in
int3
and
arpl
int
xchg
lock
xor
sbb
sti
ss
aas
fxch
lcall
bound
mov
scas
enter
or
jbe
cmp
test
and
mov
loope
out
je
mov
jl
mov
mov
cmpsl
sbb
dec
sub
icebp
jg
sbb
lcall
sbb
mov
pop
cmp
pop
and
mov
lock
sbb
fwait
inc
push
or
insb
outsb
out
push
jmp
movsb
data16
fyl2x
sbb
out
push
and
pushf
pushf
add
pop
xchg
inc
out
inc
mov
adc
xchg
clc
sbbb
sbb
sub
mov
sbbl
mov
push
jnp
mov
pop
mov
xchg
fwait
lea
cli
int
inc
lret
arpl
fwait
les
rcrl
cmp
int
stos
xchg
arpl
add
enter
xor
repz
test
push
lock
xchg
push
jne
int3
ret
pop
jne
mov
nop
jp
sub
loope
int3
mov
lds
or
es
xchg
or
imul
mov
cltd
int
imul
xchg
dec
pop
lods
adc
xor
pushf
dec
push
mov
pop
jnp
inc
cmpsl
xor
pop
insl
sarb
ds
sub
mov
popa
sbb
pop
xor
dec
ljmp
scas
pop
stos
cld
notl
data16
jns
xchg
or
sbb
adc
cmp
mov
stos
push
rcl
add
inc
lret
js
loop
pop
inc
sub
xchg
ror
lea
fwait
adc
imul
jmp
push
fisubrl
cmp
hlt
cmpsl
mov
mov
inc
and
loop
lods
repz
ja
pop
mov
inc
icebp
out
fmul
cmp
lahf
and
xchg
mov
mov
lret
popf
pop
and
in
imul
add
int
pop
mov
push
xorl
or
add
scas
cltd
push
mov
pop
pop
xor
addr16
lds
cmp
add
lods
cmp
stos
xchg
sti
call
out
and
enter
rclb
add
test
hlt
mov
push
xchg
inc
in
inc
push
xchg
xchg
xchg
mull
in
push
sbb
icebp
adcb
sar
cwtl
inc
in
aaa
xor
sbb
dec
dec
push
dec
and
stos
and
ljmp
xor
ffreep
push
sar
adc
xchg
sti
mov
sti
xchg
push
aaa
dec
das
jbe
pop
mov
mov
inc
rcrl
mov
ror
adc
shrb
enter
fimuls
into
mov
lock
pop
xorl
roll
xchg
xor
add
out
jae
dec
pop
mov
push
pop
and
int3
push
outsl
mov
cmp
lods
loop
pop
jne
mov
int3
idivl
inc
xchg
out
pop
xor
shll
cmpsb
adc
dec
lods
inc
sub
push
test
loop
add
xchg
xchg
adc
push
scas
mov
xorl
cwtl
nop
insb
cs
sti
das
lods
inc
push
cld
loopne
subl
jno
lds
fidivl
or
adc
fnstsw
adc
in
movsb
shlb
xchg
push
addr16
insb
scas
cld
mov
xlat
aaa
into
add
push
in
dec
push
pop
push
test
mov
pop
out
jnp
mov
and
fwait
jmp
mov
xchg
lret
dec
xchg
xchg
sbbb
mov
jmp
inc
fcomp
add
sbb
xchg
mov
xchg
jo
jnp
movsl
and
cs
movsb
mov
int
hlt
imulb
out
dec
add
sbb
ficoml
dec
push
ret
or
insb
stos
pop
ss
push
scas
cmp
xchg
pop
pop
ja
adc
and
jb
pop
scas
mov
mov
ret
pop
sub
push
and
out
in
arpl
gs
out
loope
mov
mov
aaa
adc
pop
scas
arpl
js
jle
jg
cmc
push
xor
jb
mov
mov
mov
push
mov
lea
into
push
jo
mov
mov
adc
adc
fldt
sbb
hlt
push
push
inc
add
mov
sahf
pop
xchg
das
push
cs
xchg
mov
int3
mov
xchg
icebp
mov
push
mov
or
and
push
in
test
sub
loop
jae
dec
mov
cmp
mov
roll
cmp
adc
cld
jl
jae
clc
xchg
lahf
mov
pop
les
out
insl
pop
xchg
adc
ficomps
iret
insl
data16
sub
stos
push
andl
or
sbb
cmp
cmp
movsb
xchg
ss
hlt
inc
adc
cmp
dec
dec
dec
mov
mov
sahf
xor
aaa
mov
push
sarl
movsl
call
orl
mov
pushf
das
pop
xor
mov
pop
dec
nop
sbb
mov
push
in
bound
sub
imul
out
or
mov
add
lcall
cltd
mull
xchg
and
lret
push
rclb
inc
mov
cmp
fimuls
daa
xchg
sub
in
leave
icebp
push
iret
cld
mov
pop
mov
jmp
xchg
leave
subb
in
aam
ret
scas
sbb
leave
lret
pushf
out
cmc
xor
popa
movsb
shrl
movsl
idivb
push
fsts
int3
stos
adc
pop
mov
outsb
mov
mov
js
fldcw
pop
insl
jne
jp
adc
jae
pop
repz
or
jg
lock
lcall
iret
or
inc
sbb
cld
push
insb
and
xor
jp
sahf
popf
aad
mov
es
ds
pop
sar
imul
pop
push
popf
shlb
mov
std
or
sbb
cmc
loopne
xchg
add
jo
test
mov
mov
das
mov
cwtl
cld
imul
idivl
nop
mov
mov
out
in
in
ja
xchg
inc
adc
mov
xorl
fs
jnp
sarb
movsl
clc
push
inc
orl
stos
sub
lret
adc
nop
pop
adc
repz
gs
testb
adc
movsb
add
popa
popa
scas
stc
cmp
in
icebp
and
jge,pt
pop
movsb
push
cmpsb
fsts
fistpl
mov
sub
cltd
sub
icebp
sbb
dec
ds
cmp
sbb
xchg
jnp
mov
xchg
into
mov
imul
fdivr
jle
xor
int3
loopne
int3
push
lods
xchg
sbb
adc
fsubl
and
lods
je
mov
pop
mov
jne
or
scas
or
dec
fstpl
call
inc
add
cltd
inc
sbb
xlat
dec
stos
fcomps
dec
and
hlt
sbb
sbb
out
jno
and
push
or
pop
ret
dec
adc
aam
lahf
mov
pop
mov
stos
xchg
int3
jg
sbb
and
sahf
adc
rol
xor
push
cmp
in
push
subl
scas
out
orb
pop
sbb
mov
loopne
push
lret
mov
pop
int
out
fucom
and
stos
cs
stc
leave
loop
in
mov
clc
loop
xchg
mov
or
xchg
ret
imul
js
pusha
xlat
sbbl
mov
cs
stos
outsb
mov
loopne
push
mov
enter
push
fmuls
add
stos
adc
sti
and
lret
aas
push
inc
dec
cwtl
sub
push
add
ret
shrl
lcall
sbbl
dec
sub
xchg
ljmp
push
push
jns
mov
mov
js
and
jp,pt
sub
mov
aas
inc
test
push
clc
dec
out
cmp
fs
xchg
add
popa
fmull
jmp
lods
ret
mov
sbb
fisttpll
clc
pop
ss
mov
andl
mov
test
js
out
ljmp
in
repz
mov
loopne
push
into
mov
cmp
out
cmp
jne
mov
xchg
fisttps
js
cmp
dec
rclb
out
adcb
imulb
jns
or
sub
mov
cmpl
pop
andl
add
lds
pop
push
std
not
fnstcw
add
call
xchg
outsb
in
stos
pop
stos
jmp
movsb
cmpsb
loope
clc
mov
push
jl
mov
push
dec
sub
xlat
mov
arpl
sbb
enter
std
outsb
insl
push
jecxz
dec
push
fwait
loop
pop
inc
cmp
mov
int
fs
es
test
ds
pop
or
xchg
mov
add
xchg
and
or
lods
push
arpl
xlat
cmp
jmp
push
pcmpeqw
sub
dec
ds
stc
sub
test
sbb
shl
pushl
add
xchg
and
inc
sub
dec
imul
jnp
ss
add
sbb
mov
cld
lods
ja
mov
push
test
loope
sub
jmp
adc
cld
sub
jle
xchg
xor
cmp
int
bound
inc
sbb
add
cmpsb
fisubrl
in
aaa
xchg
pushf
ret
and
cmp
adc
cmpsl
sbb
sbb
sbb
fs
jle
inc
movsb
int3
mov
adc
jp
int3
cmp
and
sub
das
popf
data16
xor
les
in
add
and
lret
sub
mov
imul
arpl
push
and
popf
lock
jmp
bound
xor
mov
jp
in
loope
inc
hlt
sbb
jne
enter
cli
cmpsb
push
test
add
dec
xor
test
aad
sub
sbb
insl
mov
lods
cmp
cmpsl
lods
or
xchg
push
mov
or
pop
mulb
lods
adc
enter
sub
mov
sub
das
in
aas
and
adc
mov
jecxz
mov
or
mov
sub
ss
mov
mov
or
sbbl
mov
dec
xor
sti
into
adc
push
xchg
dec
aad
mov
add
xor
into
insl
loop
or
lahf
xchg
inc
push
push
test
xor
mov
mov
nop
mov
jecxz
pop
dec
call
outsl
js
jecxz
ss
sub
fldl
mov
jp
jo
add
pop
push
outsl
les
jp
xchg
repz
arpl
cmp
mov
jo
mov
cmc
xchg
pushf
inc
ret
adcb
aaa
xlat
xor
andl
add
mov
push
mov
enter
add
pop
xchg
adc
mov
mov
outsl
sub
repz
cmp
test
adc
stos
adc
int
into
mov
sbb
sti
cmovl
mov
mov
push
lock
and
ss
inc
xor
dec
sbb
les
jno
add
in
add
arpl
add
je
jno
dec
popa
std
and
ds
add
or
mov
xchg
and
dec
xchg
inc
and
sub
mov
jl
out
das
mov
xchg
int3
insb
icebp
xor
int3
and
shlb
mov
loop
ret
xchg
dec
cltd
xchg
push
jecxz,pt
push
mov
aaa
dec
js
xchg
xchg
pop
fs
ja
xor
jg
push
lods
popa
lret
pop
mov
jecxz
pop
js
negl
jl
out
push
bound
shl
out
xchg
xor
data16
in
mov
inc
push
les
fdivr
leave
jecxz
cmpsl
cmc
xchg
fisttpl
mov
jg
mov
mov
repnz
test
ret
xlat
loop
dec
cbtw
mov
jg
add
or
ret
xchg
ret
cld
pop
or
daa
in
out
jmp
jge
dec
dec
js
pushl
xchg
in
push
jne
pop
sub
sbb
push
mov
enter
in
inc
or
cmp
dec
sub
test
idivl
add
xchg
adc
loopne
shr
enter
xchg
cmp
cmp
sbb
push
subb
pop
sarl
cmp
sbb
lret
or
int
jns
push
push
xlat
xchg
mov
mov
cmp
pop
nop
or
jne
xor
jle
cmp
ss
pop
mov
inc
jo
out
xor
mov
sbb
arpl
scas
out
aas
sbb
pop
testb
popa
aam
stc
mov
lds
dec
sti
sbb
xlat
inc
add
or
push
and
or
lahf
jbe
insl
jbe
mov
dec
std
mov
push
cmc
sub
in
sub
add
add
lahf
pusha
shrl
stc
movsl
sti
fldt
inc
push
sbb
fwait
hlt
inc
jns
lret
push
test
push
leave
jbe
imul
cmp
ret
mov
clc
or
push
dec
mov
inc
push
ret
push
cmp
mov
jns,pt
les
std
and
repz
loopne
cmc
lret
int
sbb
scas
bound
leave
pop
addr16
sbb
mov
cmp
pop
gs
in
shrb
push
jno
inc
aad
or
push
sbb
xchg
addr16
jg
mov
dec
dec
fistl
mov
pop
cmp
jmp
in
ficomps
pusha
pushl
jo
pusha
dec
iret
std
movsl
xchg
insl
cmpsb
xchg
mov
add
sbb
xchg
pop
les
xor
or
sti
adc
add
andl
xor
jnp
mov
pusha
cmp
xor
push
sbb
daa
les
adc
cmp
es
aaa
loopne
in
pop
xor
pop
sbb
lret
xor
adc
iret
stos
adcb
mov
repnz
fmuls
imul
push
jbe
pop
mov
popf
cmp
mov
in
ss
xchg
or
xor
or
dec
xchg
mov
out
jnp
es
dec
adc
jns
fidivs
sahf
clc
dec
enter
push
jle
popa
push
xor
jp
mov
out
ret
sbb
jno
sub
and
fiaddl
push
fimull
adc
cmp
cmp
hlt
lahf
jbe
dec
daa
ja
clc
mov
jns
call
dec
stos
mov
cs
push
add
xor
scas
fnstcw
pop
scas
movsl
cmp
out
inc
and
dec
stos
cmp
add
xor
pushl
jmp
rol
sub
add
loopne
and
jnp
ret
scas
pop
pushf
in
into
jnp
push
loop
sbbb
rorb
jns
in
pop
aad
xchg
out
ljmp
int3
add
jg
icebp
popf
jg
rclb
imul
outsb
loopne
in
in
addr16
jecxz
adc
lret
and
mov
lret
cmp
xor
ret
movsb
pusha
xor
cmp
sub
negb
cmp
jmp
jp
bound
mov
dec
jo
mov
mov
les
repz
dec
mov
jecxz
push
ds
sub
insb
addr16
sub
out
cmp
jno
mov
add
jb
sbb
lahf
xchg
scas
sub
push
jge
mov
jne
test
mov
add
ficomps
and
sub
cmpsl
daa
aaa
cmp
leave
dec
xchg
gs
and
lcall
mov
cmp
in
mov
lods
or
dec
repz
fwait
xchg
mov
notb
and
shlb
or
mov
xor
xor
xchg
jnp
mov
ljmp
xchg
stos
add
dec
in
add
adc
sahf
mov
orb
mov
sub
mov
lret
pop
and
ljmp
idivb
lds
adc
push
insl
pop
mov
inc
lret
lock
aam
hlt
sub
das
aas
push
ljmp
or
pop
xor
add
cmp
and
and
pop
and
mov
mov
imul
xchg
sti
js
cmc
jmp
xor
stc
sbb
lret
add
test
sub
lret
mov
push
push
mov
in
fcmovnb
mov
cli
add
jbe
aad
imul
bound
cld
inc
sbb
in
or
or
jle
cld
bound
test
mov
push
lock
fstpt
jo
bound
dec
adc
push
xchg
stos
xor
jle
mov
stos
pusha
jne
pushf
pusha
gs
jecxz
arpl
cmp
xlat
mov
mov
fisubrs
mov
addr16
test
idivb
out
sub
lods
jnp
add
lret
outsb
jmp
test
inc
lahf
sub
push
pop
scas
xor
arpl
mov
jmp
jo
sub
movsl
mov
fsubs
arpl
mov
repz
cld
push
fpatan
cmc
xchg
adc
out
mov
lahf
add
mov
test
fmull
adc
bound
rolb
pop
cmpsl
mov
cltd
cld
shll
out
das
leave
mov
xor
imul
mov
dec
insl
mov
mov
std
pusha
jne
lahf
icebp
add
loopne
das
xchg
ja
addl
cwtl
jbe
repnz
outsl
mov
jnp
clc
push
mov
fistl
imul
mov
xor
lret
shll
cmp
sti
push
das
inc
clc
ds
je
shrb
cmp
fwait
mov
dec
lcall
inc
out
imul
add
into
add
subb
and
dec
jb
aas
clc
icebp
or
seto
or
xchg
lahf
nop
xchg
rcrl
popf
adc
xlat
data16
inc
ret
jmp
add
iret
cmpsb
mov
mov
mov
xor
dec
cmpb
and
into
das
bound
lods
pop
jae
xor
push
dec
rorb
dec
jle
jecxz
int
mov
in
jg
mov
xor
js
mov
xor
push
inc
and
enter
insb
ret
dec
xchg
jmp
xchg
lret
mov
pushf
xchg
push
pop
js
andb
cmpb
imul
leave
mov
add
mov
mov
lea
aas
dec
stos
sub
fs
mov
sub
lea
loope
sbb
enter
inc
add
repz
jno
dec
cwtl
std
ss
shlb
xchg
sub
push
das
scas
xchg
adc
cmp
pop
gs
int3
push
jno
loopne
lahf
lahf
nop
inc
mov
pop
stos
test
mov
dec
adc
fnsave
setns
aaa
mov
pop
or
pushl
out
cmp
jecxz
into
push
fidivs
xorb
outsl
push
rcrl
mov
push
fcompl
xor
lcall
out
inc
cmp
cltd
adc
sub
dec
cmpsl
mov
cmp
or
cmp
adc
jle
xchg
lcall
jg
dec
dec
jns
aad
mov
push
insl
or
out
adc
pop
movsl
pop
jmp
nop
ss
xor
cmp
dec
repz
jns
mov
sbb
jp
mov
xchg
mov
add
stos
fstpt
icebp
sbb
shrb
cmp
cmpsb
sbbl
xor
xchg
ds
inc
push
xchg
jg
fsubrp
aas
bound
insb
pop
loopne
xchg
or
arpl
pop
mov
push
cwtl
cli
mov
int3
sub
in
or
repnz
shlb
outsl
shl
mov
clc
in
pop
aam
pop
dec
mov
stc
mov
inc
gs
ret
xor
mov
test
loope
pushf
cs
jecxz
sbb
add
jae
push
repz
sbb
cmpsl
xchg
imul
sub
aad
sbb
stos
sub
dec
and
mov
xchg
xor
mov
inc
ds
adc
jno
repnz
or
jae
aad
pop
mov
adc
in
xchg
mov
sbb
scas
rcrl
pop
popf
sbb
bound
xor
add
push
cmp
xor
xchg
dec
testl
push
int
push
sbbl
addr16
test
mov
sub
sahf
push
dec
imul
cld
lcall
dec
in
popf
sub
jg
ds
sub
movsb
inc
mov
and
ret
cmp
shlb
jl
jle
and
ja
cmc
mov
cld
add
fsubs
push
lea
loope
icebp
dec
mov
popl
xchg
fcomps
das
jmp
xchg
sbb
add
adc
mov
sub
mov
dec
xchg
es
sbb
enter
and
dec
mov
out
jae
mov
insb
mov
mov
imul
leave
dec
jp
sbb
xchg
sahf
pop
pusha
push
fbld
push
inc
enter
std
lcall
sahf
jge
push
inc
mov
ficomps
mov
dec
lret
inc
push
mov
std
push
jno
into
and
jnp
sub
mov
mov
imul
int3
mov
pop
and
xor
fsts
mov
xchg
jns
nop
mov
out
sbb
adc
xchg
pop
xor
jmp
push
or
scas
cmp
mov
mov
out
clc
dec
bound
fidivs
add
dec
outsl
xchg
dec
outsb
ja
lea
lret
and
push
stos
ljmp
mov
jge
lret
jecxz
xchg
adc
lea
out
sar
sti
jns
xchg
int
data16
into
adc
nop
inc
in
imul
or
jbe
push
mov
adc
xor
scas
mov
and
or
add
hlt
sahf
repnz
fbld
mov
or
dec
ljmp
xor
cmp
aam
insb
fs
dec
cmp
mov
sub
enter
mov
cmpsb
clc
jb
pusha
inc
cltd
and
xor
xchg
push
stc
jmp
or
int
add
scas
cmp
out
push
je
mov
shrl
aaa
adc
jae
sub
int
stos
dec
aaa
or
jle
shlb
sbb
lcall
movsb
xlat
xor
sub
stos
loopne
dec
cmpsl
iret
dec
mov
sub
cli
mov
popf
jecxz
xor
pop
mov
jle
xchg
cmp
xchg
mov
inc
fldcw
adc
sbb
mov
adc
mov
cmpsb
in
ret
push
lret
cmpsl
sbb
jns
or
mov
push
mov
enter
sbb
dec
ljmp
xor
fiaddl
int
icebp
movsb
mov
sbb
push
push
out
dec
int3
imul
sub
mov
inc
outsl
mov
xchg
xchg
mov
repnz
adc
xchg
lcall
mov
mov
aaa
push
sti
push
cmp
cmpsb
jg
les
ljmp
adc
mov
outsl
aam
cmpsb
sbb
dec
sub
xchg
push
gs
inc
mov
sbb
insb
add
adc
jae
pusha
out
fistpl
lret
je
mov
mov
inc
ret
push
fistps
icebp
fimuls
xchg
mov
stc
push
rorb
fdivrs
mov
cmp
adc
xchg
jmp
lods
mov
int3
mov
std
cmp
in
push
and
lock
out
outsl
mov
stos
cltd
fidivrs
sahf
jns
es
and
sub
jae
ss
push
cltd
hlt
movsl
es
sbb
adc
mov
dec
aas
pop
inc
dec
fldcw
sbb
ss
mov
and
je
sbb
pop
rclb
or
inc
cwtl
push
int
add
or
mov
jmp
jp
out
mov
jbe
xor
test
push
xchg
call
std
in
loop
and
or
jmp
aad
inc
shll
lret
mov
cli
movsl
das
subl
rcrb
push
sti
pop
pop
test
inc
cmp
jne
push
ret
icebp
lret
push
pop
pop
push
leave
pop
pop
mov
inc
xchg
lods
push
mov
pop
divb
jb
sbb
jno
nop
cmc
rolb
dec
adc
add
rcr
sbb
sub
mov
push
stc
outsl
add
inc
dec
mov
pop
pop
bnd
outsl
inc
std
mov
mov
sub
dec
pop
outsl
inc
dec
xchg
add
sub
mul
and
pushf
stos
dec
icebp
sarb
push
dec
adc
shlb
or
mov
mov
mov
inc
or
mov
sbb
arpl
in
lret
rcrl
fwait
movsl
inc
push
dec
clc
cmp
xchg
pop
arpl
fdivr
sub
popa
das
cld
arpl
add
test
adc
inc
or
rolb
daa
mov
add
mov
xchg
jle
mov
push
sub
sbb
enter
inc
jnp
fcompl
cli
jmp
sub
fistl
xor
aaa
fucomip
pop
test
add
xlat
add
mov
popf
push
subl
inc
xor
mov
in
rorl
stos
mov
fs
adc
repnz
adc
cld
cwtl
aam
out
xor
dec
pop
aaa
cli
cwtl
dec
inc
mov
pushf
mov
movsb
je
sbb
sub
test
arpl
xchg
rcrl
dec
popa
std
pop
jg
mov
jmp
outsb
cmpsb
clc
xchg
add
jne
sahf
pusha
jb
daa
adc
dec
stos
div
xor
jecxz
dec
fldt
and
lret
lret
data16
imul
lock
psubb
das
mov
repz
nop
jl
cmpsb
mov
js
push
or
or
ds
bound
dec
loopne
lret
fidivs
jl
mov
jns
push
frstor
repz
add
xchg
sahf
inc
enter
push
hlt
sbb
mov
jnp
and
dec
dec
xchg
inc
cld
ror
sub
dec
and
pop
stos
pop
mov
data16
into
scas
jo,pt
js
test
popf
call
dec
add
adc
xchg
xchg
insl
add
xchg
fdivs
push
dec
into
push
push
xchg
in
pop
push
insl
ss
js
addl
xchg
pop
dec
sub
mov
fcompl
bound
mov
test
mov
shl
pop
orl
fmull
or
repz
test
insb
ss
ja
dec
jecxz
cmp
xor
in
mov
or
cmc
mov
sbbl
xlat
cmp
pop
mov
cmp
loope
jo
popf
icebp
xor
xlat
push
sub
test
mov
cmpb
fcmovu
popa
and
and
cs
shlb
mov
or
incl
icebp
jp
sbb
sbb
cmp
popf
jne
stc
nop
cmp
push
push
mov
mov
lret
rclb
pusha
repz
sub
vpshufd
les
add
jmp
je
xlat
test
bound
mov
dec
mov
push
cs
movb
cld
and
adc
ljmp
bound
xlat
jmp
jns
rcrb
pop
add
orb
adc
outsb
cmp
pop
sbb
jg
mov
and
dec
sbb
outsl
inc
mov
adc
push
out
outsl
xchg
xorl
and
sahf
dec
ret
outsl
xchg
add
iret
or
xor
jns
xchg
aad
xchg
les
loop
lea
leave
mov
int3
and
mov
ljmp
jle
jb
mov
test
sbb
test
outsb
in
addr16
int3
mov
icebp
inc
fadd
or
cld
test
dec
push
ret
mov
and
ljmp
mov
add
dec
rcrb
add
inc
fsubp
jecxz
in
es
icebp
das
aad
nop
leave
loope
jle
int3
pop
outsb
mov
or
adcl
sbb
icebp
or
add
pop
in
lret
jo
lret
jo
push
push
xor
test
mov
mov
adc
sbb
repz
ljmp
mov
test
mov
aaa
js
movsb
aam
hlt
popa
xchg
out
xchg
loop
imul
pop
and
je
mulb
pop
mov
pop
out
hlt
jo
pop
hlt
out
or
fcos
inc
out
push
int
cmp
or
fisubrl
pusha
sbbb
cmp
out
jbe
jae
mov
push
jecxz
pop
je
pop
popf
mov
pop
jbe
imul
in
mov
or
add
mov
cmp
mov
loope
sub
mov
in
add
cmc
jp
mov
cltd
mov
mov
gs
jo
in
cli
inc
test
pushf
pop
and
add
les
clc
inc
fistps
dec
lods
cmpb
negl
or
movsb
xchg
mov
mov
fstl
shl
mov
and
push
adc
inc
inc
test
pop
int3
sub
mov
pop
fiaddl
in
xchg
inc
out
sbb
xchg
cmp
gs
dec
in
jl
fcoms
pop
dec
ret
mov
push
mov
jb
mov
inc
add
test
pop
mov
sbb
mov
pop
and
lea
add
xchg
mov
push
mov
adc
enter
jnp
mov
dec
cmp
xlat
and
sbb
insl
fwait
xchg
mov
jmp
and
ljmp
ret
push
sbb
int
test
jbe
jbe
ret
lods
imul
faddl
adc
xchg
je
in
int
loopne
and
in
stc
popf
cltd
loopne
mov
mov
mov
pop
pop
push
insl
mov
rolb
pop
sahf
add
cwtl
mov
mov
push
stos
fildll
mov
jbe
dec
mov
jnp
pop
leave
repz
bound
orb
xchg
adc
mov
lret
das
jle
pop
cmp
imul
js
daa
in
int3
mov
cmp
sbb
cwtl
inc
xlat
lock
lret
mov
fmul
sub
sti
pop
xorl
xor
push
ljmp
sbb
test
mov
mov
push
int3
cmpsl
clc
lahf
mov
test
lahf
pop
mov
jns
outsl
mov
int3
push
mov
das
or
xchg
stos
dec
sti
vpmaddwd
fwait
add
stc
ss
loopne
push
negl
in
les
adc
out
add
or
into
xor
in
fmull
inc
in
xor
loope
lcall
jp
xlat
mov
imul
outsl
add
lock
int
cmpsb
mov
or
sbb
sub
add
push
out
pop
nop
ljmp
lds
xor
int
xlat
sbb
in
adc
popa
aas
add
inc
fistl
mov
icebp
sbb
sub
push
mov
mov
jmp
jl
jle
aaa
or
imul
adc
sbb
das
ja
mov
dec
push
xchg
xlat
cmpsl
enter
xchg
out
movsb
cmp
sub
out
adc
sbb
push
adc
pop
hlt
outsl
pop
test
cmpsb
mov
and
popa
shll
sub
push
in
cmc
ljmp
fadd
fwait
into
mov
test
add
in
mov
mov
xchg
fisttpl
or
xor
movsl
clc
cmpl
sub
lods
psrad
cld
jbe
cwtl
popa
insb
fwait
adc
test
xlat
int
pop
mov
out
adc
daa
and
test
jl
loopne
ss
nop
ret
lret
fisttpl
dec
leave
push
out
add
adc
imul
xor
pop
cli
ja
mov
jl
in
xor
mov
repz
pop
cmp
ss
mov
fcompl
pop
and
data16
rcrl
mov
fdecstp
repnz
ss
jo
scas
cmpsl
push
lret
nop
fidivrl
or
adc
scas
pop
lcall
movsl
insl
cld
aas
loopne
xor
xor
in
mov
mov
and
mov
mov
pushf
insb
cmp
xchg
sbb
xchg
js
in
fidivl
pusha
pop
xor
xchg
enter
iret
int3
sub
sub
pushl
dec
js
mov
or
or
and
inc
push
mov
adc
cmp
mov
test
jns
adc
push
mov
lods
push
cli
inc
sub
pop
pop
subl
adc
pop
andb
cmpsb
test
sub
xor
mov
inc
cli
sub
dec
sub
mov
inc
push
into
xchg
dec
test
insb
xchg
std
sbb
test
sbb
fsub
sub
cmpsb
adc
xchg
js
mov
jo
mov
test
sub
mov
add
push
sbb
cli
push
dec
mov
pusha
arpl
lcall
cmc
scas
inc
scas
sub
fcmovbe
jmp
mov
push
fildl
xor
mov
mov
inc
cs
adc
lods
scas
mov
sahf
std
jns
and
cmc
faddl
jae
aaa
add
repz
mov
pop
xchg
fcmovu
sbb
fsubrs
jne
adc
cs
test
inc
clc
lock
mov
push
xor
xchg
notb
jl
mov
rcll
pop
dec
sbb
mov
cmp
adc
shrb
gs
stc
mov
int3
push
jmp
lret
ss
hlt
adc
xor
or
cmp
jnp
jae
push
mov
pop
xor
adc
aas
or
call
sub
in
cmp
into
jle
loope
cmp
test
rcl
lock
xchg
mov
fs
or
cmpsl
mov
shll
lods
movsb
test
lahf
pop
cltd
pop
ds
gs
sbb
sbb
push
push
dec
dec
in
sbb
xor
mov
scas
mov
out
add
adc
inc
inc
mov
inc
xor
fdivl
add
mov
test
sbb
mov
inc
inc
xchg
mov
movsb
ss
jle
and
inc
add
je
loop
xor
das
jne
or
add
xchg
lods
xchg
sub
mov
imull
and
ds
bound
mov
pop
inc
cmp
push
cwtl
cmovae
xchg
daa
or
cmp
mov
jae
lds
imul
jle
add
mov
xchg
xor
fidivs
cli
inc
sbb
sbb
fcoml
or
gs
idivl
nop
scas
dec
jae
xor
push
lcall
sbb
jecxz
push
aas
push
dec
add
cmc
xchg
mov
aad
stos
and
lods
pop
xorl
and
mov
idivl
jge
dec
mov
sub
mov
into
cld
aad
int3
jb
jmp
sub
pop
pop
and
cmpsb
mov
das
fstpl
sbb
das
fwait
rcll
pop
dec
adcl
xchg
sub
cmp
aad
inc
push
xchg
lock
clc
out
and
vmovlpd
movsb
adc
ja
idivl
mov
dec
imul
add
sub
sbb
imul
mov
or
cmp
outsb
imul
roll
xor
xor
mov
mov
xor
in
pop
sub
xchg
xorb
push
ljmp
repz
loop
or
mov
loopne
sub
scas
int
sub
aam
jl
outsl
loopne
mov
adc
sbb
fldt
xchg
repnz
sbb
inc
fists
and
jno
lret
loop
scas
mov
mov
retw
imul
scas
inc
push
idivl
iret
xchg
jnp
sbb
hlt
push
pushf
jl
mov
lahf
mov
cmc
dec
or
std
xor
cmp
jle
subb
adc
scas
test
lock
xchg
cmpsb
add
xchg
dec
imul
shlb
aad
mulb
ja
mov
cs
push
sti
jo
mov
out
je
mov
dec
movsb
in
jl
sbb
jg
pusha
push
pop
add
aas
xchg
repz
arpl
or
ljmp
out
add
test
loop
lret
mov
hlt
adc
test
fisttpll
ss
sbb
clc
scas
cmp
rcl
sub
xchg
daa
mov
mov
ds
popa
mov
dec
pop
mov
out
gs
icebp
mov
dec
lret
cmp
or
dec
shll
push
push
pop
sbb
dec
push
inc
cld
adc
cli
mov
xchg
xchg
pushf
xchg
dec
addr16
or
xor
push
cs
into
popf
pushf
daa
icebp
scas
xchg
cli
call
adc
out
popa
sub
out
and
lret
cmp
jne
or
mov
cs
mov
loope
sub
inc
popf
dec
pop
push
shlb
mov
mov
call
mov
lret
enter
mov
mov
xor
ds
ret
jl
enter
insl
add
inc
dec
mov
xchg
cmp
popa
movsl
lcall
dec
sbb
pop
and
jg
fs
in
xor
pop
and
outsl
mov
jnp
mov
dec
pop
push
mov
inc
mov
stos
mov
es
cmp
push
jg
stc
pop
out
fiadds
mov
inc
adc
push
addr16
mov
jno
mov
mov
dec
negl
jae
jns
dec
pop
insl
pop
enter
mov
adc
cmp
adc
pushf
add
and
sbb
imul
push
dec
sub
jle
dec
inc
int3
addl
ja
xchg
xchg
loopne
jnp
cmp
inc
add
add
orb
addr16
loop
test
pop
inc
repz
fsubrl
cld
dec
lret
stos
jl
adc
ds
adc
fistps
mov
aad
and
popf
pop
push
push
mov
int
aaa
fs
fsubrs
test
scas
xchg
pop
add
das
push
xchg
loopne
jl
loopne
outsb
adc
shl
lret
pushl
dec
les
mov
fs
xor
or
das
ret
inc
outsl
test
insl
iret
loop
lea
clc
aas
cld
or
xchg
xchg
jl
aad
loopne
and
sbb
fstpl
cmp
sti
lea
dec
lahf
orl
in
sahf
inc
pop
dec
dec
mov
mov
xchg
cmp
cwtl
inc
das
push
shl
popa
inc
arpl
pop
adc
scas
cmp
in
test
sbb
dec
popa
rclb
fs
ret
xor
cmp
in
cmpsb
lea
cld
lret
inc
rep
inc
shlb
into
in
jmp
in
pushf
xchg
and
mov
lea
jle
mov
push
cli
es
push
mov
ljmp
sbb
adc
in
insb
or
xlat
and
repnz
push
adc
mov
add
cmp
jmp
xchg
dec
outsb
dec
mov
ret
mov
dec
repnz
jmp
ja
adc
je
xor
mull
xchg
lcall
icebp
scas
scas
nop
scas
mov
pushf
add
push
fbstp
sahf
daa
adc
cmc
push
pop
lea
add
sbb
sti
add
arpl
jo
xor
sub
loopne
and
dec
aas
fcmovbe
aad
sub
dec
aas
rclb
mov
dec
ret
xchg
mov
mov
loopne
hlt
ret
lret
add
mov
jb
popa
or
xchg
aaa
outsb
es
lahf
jbe
popl
mov
push
sbb
sub
test
inc
and
inc
push
cmc
mov
mov
sub
das
jecxz
sub
add
out
pop
adc
pop
popf
pop
testb
add
sub
insl
decl
stos
mov
jge
aam
xor
adc
daa
mov
cmp
pop
imul
sbb
test
movsb
add
push
aaa
insl
data16
jo
fdivrs
xor
call
lret
out
dec
into
divb
out
or
xchg
jecxz
mov
mov
lret
js
in
sbb
dec
insb
xchg
pop
inc
divl
inc
pop
mov
or
xorb
sti
xchg
orl
punpckhdq
inc
cs
push
fst
inc
in
sbb
inc
sbb
xchg
or
pop
mov
shll
mov
lcall
test
fwait
call
and
outsl
push
add
xchg
leave
sub
repnz
mov
pop
mov
mov
xchg
sub
inc
arpl
call
mov
dec
cli
cmpb
sub
ss
dec
ljmp
insl
dec
jno
popf
enter
push
pop
popa
lcall
aaa
mov
test
mov
cmp
pop
test
js
fisubs
pop
je
push
add
lret
adc
out
nop
fs
push
dec
loope
pushf
loope
push
mov
fxtract
and
jbe
mov
xchg
sbb
pop
jmp
sub
fsubrs
pop
sahf
cmp
pop
lods
mov
mov
enter
add
or
xor
adc
adc
jnp
fisubrs
dec
inc
dec
mov
xchg
gs
int3
std
mov
cmpsb
push
ss
test
mov
push
inc
dec
or
scas
mov
ds
adc
inc
mov
call
aad
lea
add
mov
cli
enter
ret
rcll
jae
or
or
adc
inc
test
cmc
mov
xor
inc
cmp
lea
fildll
mov
js
or
jb
mull
je
jg
push
js
add
arpl
icebp
pop
sub
cmp
stos
mov
popf
loop
fs
xor
jae
cwtl
fisttps
scas
jp
mov
or
add
sti
jp
jne
pop
cmp
pushf
lods
sahf
sbb
lods
movsl
popf
pop
mov
gs
in
out
movsb
std
inc
sti
fldz
jg
push
pop
fstpl
fwait
and
inc
aaa
push
rcl
dec
cwtl
xor
pop
pop
rcr
push
pop
adc
dec
ss
push
call
or
dec
fs
lcall
cmp
gs
filds
sbb
shl
jle
add
roll
cmp
inc
xchg
cmpb
mov
stos
scas
mov
mov
jge
inc
fisubrs
jg
pop
xchg
in
or
das
aam
dec
or
xchg
stos
xchg
mov
stc
xchg
push
xchg
stos
and
outsl
dec
test
imul
fdivrp
sbb
incl
lret
rorl
xchg
stc
inc
outsb
cli
scas
jbe
int3
movsb
imul
dec
int
cmp
jae
jecxz
inc
mov
inc
lods
enter
fidivs
movsb
inc
adc
jmp
negl
xchg
clc
add
mov
add
xor
repnz
dec
je
movsb
cmp
mov
and
jg
aas
icebp
pop
clc
inc
xchg
cmp
aas
scas
dec
xchg
shlb
mov
sbb
nop
push
loope
and
cmp
jmp
xchg
arpl
inc
fs
callw
mov
xor
arpl
out
add
mov
enter
out
xlat
xchg
jmp
jge
imul
mov
dec
or
sarl
mov
mov
mov
sti
cmp
or
movb
scas
mov
stos
ret
mov
aaa
push
or
stc
mov
sub
test
leave
or
cmpsl
and
xchg
cmp
rcrl
fdiv
sub
push
lods
add
stc
popf
rclb
fcomp
aad
rcll
shll
stos
stos
mov
sub
cmp
jbe
mov
add
lock
arpl
jp
int3
test
out
in
mov
pop
dec
test
in
jecxz
jle
mov
repz
stos
js
mov
xor
and
pop
movsb
ljmp
loop
adc
scas
mov
push
push
rcrl
sub
daa
adc
xchg
ficomps
cmp
push
jno
mov
loop
add
sub
cmpsb
mov
daa
mov
xor
jae
inc
mov
push
mov
subb
js
mov
ss
and
sahf
jle
xor
jne
addb
leave
xor
dec
xchg
sub
popf
repnz
sahf
sub
imul
scas
ss
scas
push
pop
push
lock
and
mov
or
cmpsl
sbb
cmpl
mov
daa
lcall
stos
pop
inc
call
add
adc
fiaddl
mov
mov
xorl
push
out
push
nop
xor
jmp
shll
inc
mov
xchg
mov
adc
ds
inc
leave
xchg
fs
inc
pusha
and
cmp
loopne
add
aas
sub
je
mov
cmp
push
push
xlat
or
test
inc
mov
jb
xchg
jmp
xchg
mov
pop
cmp
shlb
lds
ss
ds
mov
dec
fisttpll
outsl
in
cmpl
fisttps
mov
push
cmp
add
push
aaa
leave
out
xor
unpcklps
fistl
push
imul
xor
mov
jecxz
shll
pop
push
xchg
dec
or
push
mul
mov
pusha
or
jne
dec
xor
or
inc
ja
jg
fsincos
add
ljmp
popa
xor
call
pop
jns
movb
xlat
cmp
mov
jae
mov
pop
and
dec
in
test
negb
cwtl
sub
add
mov
adc
fistl
bound
and
mov
and
sub
test
lcall
call
inc
lret
inc
mov
mov
and
push
mov
xor
ret
test
insb
mov
shl
cmp
mov
leave
iret
lret
or
inc
xchg
rolb
cmp
ror
push
mov
int3
cmp
inc
enter
mov
jb
insb
pop
lds
cmp
sar
mov
jmp
imul
sbb
je
shl
push
mov
leave
in
pop
jmp
fsubs
add
in
adc
xchg
push
adc
in
cmovnp
xor
in
int
mov
push
mov
or
insl
mov
adc
inc
paddusw
lods
jnp
ljmp
aad
and
xor
in
xlat
jb
cmp
push
lahf
leave
rep
das
jp
shll
test
pop
inc
cmc
mov
scas
push
cltd
sti
push
lret
dec
jge
xor
or
popa
rorl
mov
and
pop
popa
sahf
movl
gs
dec
pop
push
sarb
adc
movsl
adc
std
xlat
xchg
ret
enter
add
aas
ret
rorb
je
lahf
sbb
sahf
mov
sbb
outsl
pushf
dec
mov
je
ficomps
cmpsl
dec
mov
adc
xor
sub
push
in
xor
icebp
divl
mov
repnz
into
les
pushf
xchg
mov
mov
ret
lahf
push
pop
xor
cld
leave
xor
outsb
adcl
arpl
divl
sbb
sti
hlt
movsb
xlat
add
dec
jle
fwait
rorb
in
ret
rcl
push
lock
mov
push
test
cmpsb
lret
cltd
aad
inc
mov
jl
inc
push
pop
rorb
data16
pop
out
mov
daa
jp
push
inc
orl
push
mov
jns
xchg
lahf
fimull
daa
inc
xlat
data16
loope
mov
popf
dec
adc
mov
mull
ds
dec
pop
cmp
mov
sub
cmpsl
fcomp
xchg
mov
aaa
xlat
sbb
sub
mov
push
adc
dec
jbe
je
test
xchg
insb
outsb
add
aam
leave
and
pushf
add
fdivrs
mov
fildl
insb
xchg
adc
sarl
sbb
jb
push
fcoms
inc
mov
je
rcrl
aas
jecxz
cmp
or
adc
loopne
pop
pop
cmp
lds
adc
ret
push
push
mov
addb
adc
mov
popa
jnp
js
arpl
pushl
int
negb
scas
sbb
int
jle
std
or
push
mov
mov
scas
mov
xchg
push
lret
das
fisttpll
xchg
loope
sub
dec
or
cmp
adc
adc
inc
clc
xchg
or
arpl
or
iret
insl
aam
repnz
push
jbe
xchg
xlat
pop
inc
mov
jp
cltd
ljmp
jb
lods
mov
cmp
jns
xor
jge
cmpsb
mov
mov
pop
ds
jmp
les
repz
xor
sahf
pop
inc
in
insb
hlt
loop
movsl
inc
popa
xchg
mov
mov
mov
dec
stc
mov
or
push
pop
inc
mov
int
mov
test
adc
push
test
mov
xlat
fsubrs
adc
test
dec
or
flds
out
hlt
dec
xor
sbb
and
xor
cmp
pop
incb
mov
roll
ljmp
mov
repnz
push
xor
cmp
pop
dec
and
ret
pop
mov
vpcmpgtb
rcr
add
test
sub
rcl
cli
or
nop
fstl
xlat
push
insb
mov
adc
bound
xor
jns
insb
clc
loopne
or
lret
popw
fidivl
inc
add
inc
lock
inc
ror
into
popa
pop
idivb
xor
call
add
sbb
adc
fcmovu
lods
jne
pop
jecxz
or
dec
inc
out
fistl
cli
mov
push
icebp
insb
sbb
inc
test
pop
push
sbb
aaa
faddl
lock
movsl
imul
inc
scas
add
mov
xor
test
data16
cli
ret
lahf
cmp
add
xchg
loopne
std
scas
sub
sbb
pop
scas
adc
mov
add
add
iret
scas
cmc
jmp
xlat
push
xor
popf
lret
cmpsb
mov
aaa
int
xor
or
mov
mov
popf
push
pop
jns
or
mov
pop
push
inc
mov
hlt
imul
je
mov
jg
jmp
imull
jnp
dec
mov
inc
pop
sahf
notb
pushf
pop
xor
les
ja
mov
inc
fcoml
and
cld
push
pop
sbb
mov
hlt
xor
cltd
xchg
pop
mov
aad
outsl
js
test
push
cmc
jp
sub
movsb
cmpsl
loopne
mov
adc
addl
adc
mov
jmp
cmp
ds
cmp
andl
imul
out
push
push
lods
cwtl
in
sete
test
mov
int
xchg
scas
xchg
pop
jno
andl
pushl
jecxz
add
add
fiadds
pop
or
push
loopne
test
add
or
cmp
je
xchg
hlt
mov
int3
cld
mov
adc
stos
mov
mov
sbb
dec
enter
jp
sbb
data16
fldcw
pop
dec
fcos
repnz
jnp
xchg
and
icebp
xchg
adc
pop
stc
inc
and
and
dec
je
dec
pop
data16
add
ljmp
scas
inc
and
sub
xchg
imul
xchg
adc
mov
outsl
les
icebp
sti
cmp
cmp
jmp
sub
pop
mov
sbb
arpl
inc
outsl
fwait
xchg
dec
pop
ret
push
stc
flds
jg
jno
fcomps
xor
pop
cltd
xchg
mov
incl
dec
inc
jbe
xchg
add
jb
in
int3
repnz
adc
dec
in
jno
inc
jmp
scas
icebp
das
pop
add
mov
loop
out
xor
pop
pop
mov
pop
pop
ds
push
testl
mov
shlb
cmp
mov
mov
cli
gs
xchg
xor
shll
das
sti
push
mov
add
add
mov
or
mov
data16
mov
mov
pop
out
jge
nop
cmpsl
cwtl
out
cltd
and
pop
outsl
xchg
in
xor
popf
icebp
mov
test
adc
push
jecxz
mov
jge
je
mov
das
or
jb
xchg
mov
fs
push
mov
push
scas
mov
xor
outsl
loop
mov
adc
dec
or
scas
or
push
popa
mov
andb
xor
xchg
dec
pop
dec
xchg
addb
ja
or
cmp
loopne
hlt
mov
lret
inc
popa
popa
outsb
imul
push
sahf
ds
pusha
inc
scas
and
aam
push
fs
pop
mov
out
jg
cwtl
enter
call
dec
loop
out
and
push
and
fs
or
iret
arpl
inc
mov
mov
cld
dec
nop
lcall
aad
pop
adc
jl
ja
movsl
ja
add
mov
scas
aad
xchg
mov
pop
leavew
sub
dec
fistl
cmpsl
ret
jp
sbb
adc
inc
movsb
aad
dec
push
sub
dec
and
fndisi(8087
xor
cli
adc
sub
adc
ja
test
shrl
movb
cmc
cmp
sbb
xchg
addr16
scas
mov
in
lret
mov
mov
dec
lock
pop
sub
stos
pop
and
jb
leave
lods
fs
xchg
addr16
pop
in
mov
test
xor
cs
push
xlat
mov
jl
sbb
repz
sub
push
int
mov
fists
mov
rcrb
lahf
scas
mov
int
jle
cmc
in
push
fdivrp
lahf
sbb
sub
inc
iret
adc
movsb
enter
testl
insb
sbb
das
inc
aaa
or
cmp
lahf
pop
std
inc
xchg
sub
sbb
push
xor
ret
in
fcmovnu
out
jae
fildll
loop
push
xor
test
incl
add
incb
sbb
ljmp
ret
xor
pop
sbbl
sub
pop
pop
loope
outsb
outsb
lods
xlat
fldl
enter
xchg
les
es
and
clc
aas
cmp
insl
loop
and
cmovae
and
pop
xchg
sbb
adc
in
rcr
test
aad
inc
cmp
aaa
movsl
cld
lahf
xchg
es
test
stc
in
out
les
dec
in
stos
sbb
test
das
imull
mov
sub
sub
cmpsb
fidivs
enter
add
add
sti
xor
mov
lea
scas
insw
mov
add
jnp
mov
cmp
gs
and
mov
repz
bound
pop
push
sub
mov
jg
jle
sub
add
fstps
inc
mov
shr
out
ljmp
inc
mov
mov
je
xor
test
cmp
aaa
fisubrl
and
sahf
rorl
push
inc
mov
leave
jb
xor
push
xchg
cmp
dec
clc
sbb
cld
sbb
mov
xchg
fwait
lds
push
call
nop
test
js
test
sbb
jecxz,pt
outsb
or
mov
ljmp
es
dec
out
and
cltd
pop
sub
xor
mov
pop
pushf
and
decl
pushf
lahf
jns
mov
in
and
xchg
jge
cmp
jb
or
push
aaa
add
bound
and
ss
mov
nop
add
mov
fcmovnbe
cmp
fbstp
lods
outsl
aas
cmp
bound
int
dec
cmp
xchg
or
mov
adc
pop
mov
mov
mov
jg
and
jno
sub
jno
cwtl
pminsw
loop
xchg
sarl
int
mov
nop
mov
scas
and
inc
mov
inc
addr16
fildl
xchg
sub
test
dec
or
loope
add
sub
test
cmc
sbb
fdivrs
cmp
fistps
negl
sbb
xchg
pop
pop
test
test
push
push
push
int
dec
aaa
mov
mov
inc
xchg
inc
cmp
test
mov
rorb
test
aad
clc
outsl
sbb
icebp
clc
addb
ss
xor
push
sub
jge
jg
or
xchg
pop
mov
movsl
mov
hlt
mov
inc
jo
dec
pop
dec
push
sbb
cmp
daa
shll
mov
fiadds
jecxz
sbb
xchg
lods
jp
lods
cmpb
movsl
stos
jle
add
cli
inc
mov
call
stos
dec
popa
push
xchg
mov
ret
cld
test
cmp
mov
es
enter
push
mov
int3
xor
pop
xchg
inc
into
popf
jo,pt
stos
scas
ret
orb
xor
lock
orb
stc
icebp
sbb
jo
xchg
pop
fs
lods
cmp
adc
jge
mov
hlt
mov
aad
jno
in
dec
je
xor
adc
das
cmp
fmull
cmp
inc
mov
jp
into
loope
lds
add
pop
cwtl
mov
push
ljmp
xor
inc
aaa
iret
cs
adc
jecxz,pn
mov
and
test
sub
or
adcb
mov
pop
xchg
out
sti
cmp
cmp
mov
mov
pop
popf
es
xor
and
pusha
push
lds
push
pop
data16
lea
push
cmpsb
aas
cmp
stos
sbb
sub
sbb
cmp
jmp
sub
cld
adc
xchg
test
inc
sub
outsb
inc
sub
andb
ljmp
dec
sarl
mov
enter
jbe
sarl
or
das
movsl
pop
stc
cli
push
dec
movl
hlt
mov
dec
js
in
decl
sub
jae
or
or
xchg
and
adc
leave
xchg
mov
insb
sbb
mov
lret
lock
lock
push
push
lahf
push
xor
std
ds
xchg
shll
jmp
scas
mov
adc
adc
sub
lcall
sbb
test
fs
out
add
push
loope
or
iret
cltd
imul
mov
jnp
mov
inc
pop
cmp
sahf
ds
jmp
or
scas
daa
jmp
mov
xchg
in
shl
pop
xor
or
cmp
push
or
into
xchg
jnp
inc
daa
and
and
inc
mov
stos
cmpsl
inc
jle
scas
in
sub
int3
and
in
sbb
lock
pusha
outsb
decb
push
add
test
inc
push
int3
movsl
test
sub
push
add
mov
mov
push
rolb
out
pop
pop
mov
pop
ret
xchg
inc
pop
mov
add
push
pop
fcoml
xor
daa
add
dec
sub
mov
mov
dec
movsl
and
jae
dec
fildll
insb
mov
aad
dec
and
test
rol
pop
popa
call
mov
xor
ror
out
popl
fnsave
xchg
ror
stos
add
dec
inc
jecxz
xchg
add
fimull
cmpsb
fdivr
test
fmull
pop
lock
fstps
xchg
sarl
lcall
mov
xchg
sub
shll
mov
out
xchg
dec
add
mov
mov
and
fiadds
and
or
mov
in
add
sub
cmp
inc
cmp
into
ss
cmp
js
jb
cmpb
push
cli
into
call
loope
add
and
fwait
dec
mov
mov
xchg
cs
ds
mov
aaa
stos
test
mov
add
mov
and
inc
dec
mov
mov
push
push
mov
mov
outsl
sub
and
sub
stc
sbb
in
mov
jge
sbb
int
inc
add
adc
pop
sub
jp
inc
sbb
sbb
jae
shr
bound
cli
lods
jg
xchg
jg
push
xor
xchg
or
jmp
mov
test
test
call
loope
rclb
sbb
push
lea
jno
dec
decb
pop
push
adc
je
xchg
mov
mov
testl
into
ja
pusha
add
out
ds
sub
ja
sbb
pop
push
lret
lods
fimuls
insb
cmp
sahf
sub
cmp
pop
mov
movzwl
addr16
cmp
ljmp
sarb
cs
adcb
jg
mov
inc
inc
sub
inc
bound
rcl
test
test
out
fsubs
notb
mov
xor
repnz
call
das
mov
mov
es
jle
out
or
jbe
mov
sub
bound
fs
sbb
mov
stos
addr16
js
mov
push
cmc
inc
or
mov
fildl
jo
push
jg
xor
test
cmp
js
shrb
and
push
aam
ja
cmp
cmc
insl
cmpsl
jle
cmpsl
ja
test
fbld
xor
cmpsl
mov
outsb
dec
popa
clc
adc
mov
out
shrl
jns
jns
mov
pop
push
mov
push
push
out
add
adc
push
mov
add
inc
popfw
mov
sahf
test
or
adc
push
xchg
sub
repz
jecxz
sbb
test
mov
mov
mov
dec
jae
sbb
mov
pop
jle
and
cmp
inc
xchg
movsb
xor
push
cmp
test
mov
adc
shr
push
adc
or
out
stos
insl
mov
imul
mov
das
mov
stc
sbb
hlt
mov
icebp
stos
dec
fwait
bound
enter
pop
ret
mov
mov
jb
nop
add
add
pop
mov
adc
pop
imulb
cmc
repz
inc
mov
popa
arpl
mov
es
dec
mov
jge
int
mov
inc
sahf
cmpb
dec
jae
pcmpgtd
adc
and
ret
pop
dec
mov
sub
mov
aam
leave
cmp
es
cmpsb
or
insl
push
mov
mov
pop
scas
shl
jmp
movsl
jg
iret
jle,pn
fists
push
jmp
fdiv
addl
xor
iret
inc
popf
inc
stc
aad
fwait
inc
movsl
dec
sbb
or
pop
lahf
imul
mov
out
ljmp
sti
movsb
push
outsb
cwtl
mov
pop
outsb
mov
insl
mov
add
xchg
pop
and
or
loop
in
mov
xchg
jl
repnz
jle
loop
cmc
xor
jno
nop
mov
mov
mov
sti
cmp
fs
sub
xchg
movsl
pusha
test
popf
and
mov
mov
insl
push
inc
in
iret
inc
in
jnp
xor
loope
dec
mov
test
fnstcw
xor
jns
shlw
inc
gs
bound
add
test
add
movsl
jecxz
cmpsb
testl
sub
out
fucomip
stc
jbe
push
mov
aaa
in
sub
frstor
rcrb
mov
push
sub
js
fwait
jle
cli
mov
and
mov
and
stos
mov
sbb
jae
xor
mov
cmpsl
xchg
fsubrs
ss
repz
mulb
push
pop
or
jns
pop
rol
inc
mov
sub
dec
sar
sbb
scas
imul
sub
pop
add
out
add
adc
out
add
out
aad
pop
jb
adc
shl
sahf
mov
movsb
nop
mov
pushf
movsl
push
mov
divb
insb
das
cmp
dec
test
dec
adc
aaa
insb
push
jp
sub
das
mov
dec
test
push
sbb
push
loop
in
cmp
test
mov
sub
cltd
lcall
call
ds
cltd
test
sbb
lcall
rcll
xchg
std
ss
aam
push
xchg
sbb
mov
mov
lcall
rorb
jno
jno
jne
cmp
jbe
das
mov
std
mov
stos
adc
mov
sub
and
adc
mov
pop
repnz
fcoms
subl
push
ret
xchg
jnp
ds
loop
ret
scas
hlt
into
mov
cmp
dec
std
lret
cmp
pop
test
adc
loopne
dec
adc
inc
and
sub
ret
ret
insb
xor
xor
jle
sbb
ds
xchg
jl
ds
callw
mov
outsl
shr
cld
cli
aam
out
into
inc
push
je
mov
loop
aad
jmp
or
mov
ljmp
xor
sub
push
jnp
jl
loop
iret
mov
ret
fpatan
mov
out
mov
test
push
jg
data16
and
xor
jl
push
mov
pop
gs
outsl
and
mov
iret
jno
and
xchg
imul
jb
test
mov
lea
addr16
sub
xor
inc
sbbl
inc
pop
ret
cmpsl
cmpsb
mov
insl
xorb
adc
push
notl
mov
sub
gs
addr16
jno
outsb
mov
xchg
push
aas
cmc
cmp
fcmovnbe
adc
movsb
mov
dec
sub
movl
fwait
js
fsubs
cli
lcall
push
mov
inc
or
xchg
sbb
xor
sub
cmp
out
sti
ljmp
daa
mov
outsb
sarl
sub
sub
inc
or
fcomps
cmpsb
loopne
pusha
and
pop
loopne
repz
xchg
lahf
cmp
jo
sub
sahf
push
mov
add
fdivs
orb
cmpsb
mov
sti
daa
dec
add
xor
inc
sub
adc
and
or
nop
jle
pop
shlb
jne
imul
notl
imul
inc
inc
sub
or
add
frstor
ss
adc
adc
push
ljmp
add
ret
fcoml
sti
dec
cli
mov
pushf
xchg
xor
mov
in
mov
ja
sbb
mov
ljmp
adc
jnp
inc
xchg
mov
icebp
xchg
jmp
fistpll
xchg
mov
or
cmp
mov
and
lcall
jmp
xchg
ja
repnz
push
iret
mov
inc
push
jne
loope
xchg
inc
cli
int
test
pop
idiv
inc
faddp
jns
cmp
xchg
int
add
test
and
pop
and
arpl
or
mov
mov
xor
dec
push
or
pushf
inc
rclb
pop
sbb
fcmovne
nop
lds
lahf
fwait
sbb
cmc
and
mov
jbe
movsb
pop
or
fmul
cpuid
jo
cmp
xchg
cmpsb
daa
insb
and
push
cmpsl
lret
test
mov
popa
sbb
mulps
ljmp
inc
mov
push
push
fwait
rcrb
sbb
push
nop
mov
andl
neg
sbb
andl
pop
add
xor
fs
jle
push
cli
call
shrb
cli
xlat
fstl
notl
lock
insb
loop
inc
in
fmul
pop
ds
inc
xor
out
pop
movsl
xor
mov
dec
cmp
add
cmp
fimuls
add
out
insl
push
mov
dec
add
js
sub
xor
popa
and
xor
sbb
insb
lcall
jbe
jb
or
cmpxchg
test
xor
sarb
lret
fsts
and
jne
push
pop
sbb
sarl
cld
shlb
dec
ljmp
fnstcw
stos
js
and
mov
es
add
push
std
xchg
ja
fiaddl
mov
mov
or
fsub
xor
lret
xchg
xchg
es
dec
dec
xchg
movsl
mov
stos
adc
seto
sub
push
xchg
pop
sub
fadd
cwtl
dec
push
xor
clc
lods
lods
daa
jne
shrb
lods
add
neg
out
std
adc
out
dec
cmp
pusha
addl
cmc
mov
cmp
sbb
mov
add
rorl
push
push
add
call
scas
std
cld
arpl
jne
clc
notb
xor
add
push
mov
out
mov
cmp
pop
movsb
and
mov
mov
add
dec
orb
lea
sbb
sahf
lahf
jne
adc
pop
dec
pop
fildl
ds
outsb
fwait
mov
lcall
mov
mov
xor
sarl
arpl
sub
dec
out
out
dec
xor
popf
mov
lods
imul
arpl
ret
jo
pop
adc
jae
arpl
or
loope
adc
push
imul
jg
xchg
mov
xlat
push
dec
xchg
pop
xchg
sub
mov
sti
mov
aas
mov
jnp
pop
loope
jle
push
out
leave
aam
pop
xlat
ss
stos
lea
pop
inc
jns
sarb
sub
daa
sbb
inc
repz
mov
jmp
add
jecxz
pop
ljmp
cmp
clc
jbe
ljmp
sub
mov
inc
call
and
sbb
enter
jmp
sbb
bound
xor
out
and
and
dec
or
jmp
cmpsb
cmc
ljmp
jl
inc
test
cmp
sbb
in
icebp
shrl
xchg
out
sbb
xlat
rorb
or
ror
bswap
data16
or
mov
pusha
addr16
hlt
pushf
idivl
aas
insl
cmp
icebp
stc
mov
sbb
push
and
loopne
je
mov
or
std
adc
xor
mov
mov
push
xchg
mov
bound
fimull
negb
jl
push
mov
scas
mov
pop
mov
mov
and
pop
cmpsb
aam
dec
shll
push
in
xlat
es
mov
xchg
jbe
mov
fdivl
jno
dec
mov
xchg
jp
imul
rol
lcall
mov
outsl
outsl
lods
iret
shll
jne
and
and
cmpsb
inc
iret
divb
ds
dec
sahf
mov
push
mov
push
lods
pushf
scas
sahf
push
ds
pop
fstpt
clc
lea
out
leave
sbbb
jecxz
lods
rcrl
or
nop
sbb
lods
fdivrl
pushf
push
imul
sbb
fnstsw
inc
nop
stos
loope
add
pop
aas
push
or
test
aad
cmpsl
stc
and
or
lea
push
mov
inc
shrb
hlt
nop
pop
and
repz
addb
test
cmpsl
jge
mov
add
arpl
mov
mov
cmp
rcr
jl
mov
jne
xchg
sbb
inc
faddl
pusha
test
test
fdivl
jae
adc
fdiv
test
sbbl
cld
xor
je
pop
mov
cmp
or
cltd
roll
cmp
stos
out
cmpsl
mov
sub
cmp
pusha
out
lea
mov
rcl
pop
ljmp
add
lcall
mov
mov
repz
iret
add
push
cmc
cwtl
les
dec
mov
popa
push
cmpsb
xor
push
sbb
or
mov
adcl
inc
popa
sbb
add
jbe
ljmp
dec
push
mov
sarl
pop
mov
pop
imul
rcrb
mov
xor
cld
add
cmp
enter
cltd
xchg
push
clc
xchg
jb
add
dec
sti
mov
imul
adc
fstpl
or
imull
or
jmp
repnz
add
movsl
sub
pop
jne
inc
sbb
add
mov
push
stos
mov
stos
ss
jns
je
nop
push
fists
add
ja
jae
je
adc
sti
mov
lahf
pop
adc
repz
sub
add
xor
cli
rorb
mov
popa
cmp
testb
daa
shll
mov
outsl
outsb
lahf
and
aad
out
jae
outsl
movl
imul
test
negl
sbb
sahf
stc
out
data16
fstpt
sub
jl
mov
call
add
push
jmp
pushf
or
push
rcll
xlat
dec
cwtl
mov
loopne
add
enter
movsl
sub
cld
lea
sbb
or
pusha
add
cmp
iret
pop
inc
mulb
jb
fs
outsl
inc
jmp
xor
cmc
das
mov
stos
insb
mov
sub
imul
mov
cmpsb
lcall
sbb
inc
mov
dec
lret
imul
add
sub
sbb
in
xlat
inc
das
pop
mov
xor
add
xchg
xor
xor
cld
add
loop
call
icebp
mov
sbb
cmp
aam
mov
out
xor
call
push
out
push
mov
pusha
jns
pop
mov
xor
ret
imul
push
js
or
or
setno
lret
cmpsb
sbb
mov
int
lock
loope
cmp
add
sub
std
lcall
das
jbe
mov
lcall
xor
jle
arpl
test
cs
leave
iret
cli
xchg
dec
mov
enter
jnp
pushf
into
out
fldenv
jb
push
std
add
pop
mov
push
inc
cmpb
stos
pop
loop
push
jecxz
adcb
loop
mov
push
mov
stc
rcrl
icebp
sub
divb
inc
shll
jge
scas
push
sahf
xor
and
jle
sub
sahf
lret
mov
rep
mov
lds
dec
lds
and
inc
imul
hlt
shl
dec
pusha
pop
cmc
xchg
je
jle
sbb
xor
adc
je
jmp
test
cltd
testl
ret
dec
xchg
mov
fsubr
je
cmp
lcall
icebp
add
out
adc
adc
push
popf
ja
fmul
ret
bound
ljmp
cmp
shll
subb
mov
insb
mov
ret
mov
jno
push
pushfw
inc
mov
and
je
mov
sbb
and
mov
fsubs
and
add
jne
pop
pushf
rclb
popl
pop
pop
and
shrb
fs
push
jns
lahf
arpl
cmpsl
xor
ja
fadds
cwtl
mov
aad
mov
pusha
fwait
aaa
adc
imul
push
mov
mov
loopne
lret
push
lds
fdivs
add
sbb
dec
movsb
lea
push
adc
icebp
nop
cwtl
inc
int
popf
test
adc
test
sub
cmc
jecxz
dec
out
push
nop
sahf
test
test
sub
sbb
leave
in
cltd
es
pop
adc
dec
out
decl
enter
sbb
fwait
sbb
in
mov
mov
pop
dec
iret
add
mov
dec
cmp
data16
decb
jo
into
pop
lret
pusha
jno
pop
xorl
adc
xchg
inc
mov
jecxz
sbb
pop
pop
das
mov
push
jp
fwait
sbb
ss
scas
repz
icebp
jmp
int
jp
ja
cmp
add
mov
jge
mov
mov
out
xorl
popa
push
into
hlt
mov
pop
mov
or
test
mov
icebp
push
xor
pop
mov
inc
in
nop
mov
push
or
and
push
push
jge
and
mov
pop
xor
xchg
mov
and
ret
rolb
xor
cmp
push
lret
stos
dec
lods
cmp
decl
mov
xchg
mov
loop
push
xor
fists
adc
div
cltd
das
cmp
push
inc
cmpsl
xchg
xor
cmp
fwait
enter
sub
pushfw
sub
or
out
dec
or
xchg
lea
sbb
lret
jge
out
push
nop
clc
push
jl
sub
push
cli
inc
dec
fsubrp
dec
xor
pop
or
dec
cmp
int
cmp
cltd
sbb
push
testb
pop
rcl
and
dec
icebp
pop
xchg
adc
sarl
pop
ljmp
jge
loope
aad
filds
arpl
adcb
nop
das
adc
adc
shrl
add
add
loopne
fsubrp
bsr
sub
xchg
ljmp
xchg
jns
jp
xchg
jl
inc
mov
xchg
jns
push
imul
add
aad
repz
sbb
cwtl
xchg
add
aas
das
andl
enter
sub
scas
push
and
mov
lock
pop
mov
and
xor
mov
and
push
sub
into
dec
aad
or
testb
or
add
cmpsl
lds
mov
inc
in
sbb
xchg
and
cld
mov
dec
aaa
popf
out
ret
pop
push
push
sbb
xchg
loopne
mov
push
movsl
lret
std
pop
cli
dec
push
mov
lock
cwtl
bound
ds
out
cmpsl
out
ljmp
cmp
cmc
divb
inc
pop
sbb
add
je
out
adc
nop
cli
ret
push
imul
out
mov
test
lahf
mov
cmc
std
outsl
pop
xchg
jmp
sub
and
sahf
push
push
mov
add
fldl
push
mov
mov
jne
ja
testb
mov
jmp
mov
ror
aad
xor
mov
inc
popf
mov
mov
add
mov
jno
test
fsubr
in
sub
out
fidivs
arpl
stc
jo
dec
sub
jmp
ja
cmpsb
imul
xor
pushf
xor
int3
rolb
mov
lds
mov
sarl
shlb
inc
out
push
adc
movsb
cltd
lahf
inc
jp
mov
shld
and
cmc
aaa
sbb
ljmp
ror
popa
aaa
ljmp
pusha
stc
mov
iret
mov
and
loopne
xchg
sbb
sahf
add
jbe
test
pop
iret
and
jbe,pt
cmpsb
lret
pop
ret
and
mov
add
fists
mov
sahf
cwtl
mov
mov
pop
movsl
dec
push
xor
adc
xchg
fldenv
jmp
pop
movsl
addr16
sti
fisubl
cmp
mov
lcall
jb
scas
ljmp
lret
cmc
test
stos
pop
fsubrs
mov
in
les
mov
pop
pusha
push
lcall
scas
inc
xchg
jb
cltd
imul
flds
xor
hlt
daa
lods
add
shlb
jecxz
cs
test
mov
outsb
stos
or
dec
xchg
push
js
shl
xrelease
add
cwtl
add
pop
jmp
scas
inc
inc
jg
in
jbe
lcall
dec
jb
lods
dec
pusha
mov
ret
lret
shll
adc
shll
xor
ss
das
inc
push
outsl
out
rcrl
loop
in
cmp
popa
clc
and
outsb
aaa
adc
push
push
repz
mov
movsl
mov
jmp
fsubrl
sbb
lret
sub
adc
inc
xor
pop
jbe
push
xor
js
insb
cmc
push
data16
cli
scas
sub
nop
popf
inc
and
and
sub
cmpsb
jae,pn
sahf
cld
mov
gs
fwait
notl
mov
fucomip
pushf
adc
stos
push
sub
mov
mov
jl
xchg
sub
movsl
mov
dec
fimull
enter
out
int3
cli
sbb
or
fld1
mov
shrl
sbb
lret
cmpsl
mov
lret
mov
or
sbb
push
mov
arpl
adcl
ss
or
pop
lret
cmp
add
jbe
lret
mov
jmp
fldl
mov
loope
shl
in
in
pand
inc
nop
ret
in
xchg
out
adc
inc
xchg
add
cs
jbe
hlt
jl
rolb
movb
dec
setns
and
fdivl
push
mov
outsb
jp
and
xchg
and
sbb
out
jne
shl
and
push
fildll
scas
mov
cwtl
xchg
xchg
lds
add
pushf
or
and
loopne
fisttpll
xor
mov
hlt
outsb
aad
add
aaa
jns
pop
mov
xchg
pusha
or
arpl
push
aam
cwtl
pop
dec
js
cltd
sarb
in
cli
adc
out
dec
int3
fsubl
test
adc
stos
aas
fsubl
push
add
popf
jmp
pusha
xlat
les
jno
pusha
jns
sub
push
fs
movb
dec
sub
insl
xchg
test
dec
inc
mov
mov
or
out
and
mov
adc
cmc
xchg
fbld
and
push
add
outsl
pusha
stc
call
popa
movsb
ljmp
and
lods
pop
jns
call
jne
dec
sti
sbb
cmp
fisubl
xor
push
aaa
aam
mov
pop
xlat
les
lods
mov
sbb
fildll
pop
push
jno
sbb
add
dec
push
and
cmpsb
push
lods
pop
mov
in
adc
outsb
lahf
lods
clc
movb
mov
sub
lods
ret
dec
insb
xchg
sahf
mov
dec
popf
sbbb
dec
xchg
out
inc
movsb
jne
shll
add
or
push
ficoms
cmp
push
jnp
insl
hlt
jbe
adc
movsl
stos
inc
cmpb
dec
adc
pop
sbb
cmpb
dec
inc
xchg
inc
pop
cmovge
lret
pop
insb
adc
mov
enter
ljmp
call
mov
inc
lret
fisttpl
addb
and
jno
push
insl
jne
shlb
jb
cmp
xor
or
pop
insl
jo
daa
jecxz,pn
or
pop
jbe
adc
adc
dec
rcr
and
pop
imul
idivb
push
xor
lock
pushf
dec
mov
push
les
fisubl
or
pop
xchg
xchg
mov
popf
fists
sub
push
into
fstps
or
cmpsb
rclb
gs
jmp
lret
fistpll
out
nop
jg
mov
fwait
pop
or
daa
jmp
daa
data16
sub
and
pop
jo
lods
jecxz
stc
rcr
shlb
push
sub
cmpsl
cmp
cmp
shll
jecxz
inc
repz
mov
rorl
scas
inc
inc
cwtl
mov
and
std
test
mov
dec
xor
jae
mov
jmp
cmc
inc
and
pop
outsb
cmp
cmpsb
shrl
leave
mov
jbe
sahf
xor
arpl
fwait
push
dec
xor
stos
aaa
pop
lret
inc
sti
mov
stc
out
pusha
cmp
fucomip
sub
clc
into
divl
lret
xchg
sub
loop
fcmovne
in
es
call
inc
dec
inc
sti
sub
es
sub
scas
cwtl
cmp
test
jmp
sbb
paddusb
xor
sbb
mulb
js
mov
arpl
dec
and
pusha
ficompl
cwtl
pop
mov
mov
and
inc
jg
mov
lahf
sar
xchg
sahf
jo
sahf
or
cmp
aad
nopl
cmp
aas
js
jb
xlat
mov
repnz
lcall
ja
xchg
mov
cmp
dec
mov
inc
jl
dec
inc
push
outsb
pop
xor
fistpl
gs
push
inc
fidivs
mov
fcoml
lret
or
aam
icebp
mov
and
jb
aad
sbb
flds
pusha
jle
cli
sub
pop
stos
mov
dec
cwtl
aas
mov
xor
adc
jnp
mov
jae
mov
or
cld
es
es
mov
out
sub
lods
and
fiaddl
pop
cmpb
fcmovnb
popf
push
outsb
jbe
fcmovne
pop
or
add
ss
pop
mul
icebp
bound
addl
inc
insb
and
insl
pushf
pop
outsb
aad
enter
push
test
pop
test
dec
and
arpl
mov
jl
out
or
in
xchg
push
mov
popa
mov
xchg
andb
and
cmp
push
push
scas
pop
push
cpuid
popa
mov
adc
mov
dec
add
imul
push
adc
dec
sbbl
push
int3
jae
std
lods
dec
push
repz
sbb
ret
cltd
fsubrl
adc
cmp
mov
addr16
xchg
inc
mov
inc
lcall
sub
sub
push
xchg
add
inc
in
and
into
test
cli
adc
push
fildl
repz
mov
dec
and
gs
mov
lods
xchg
xor
test
mov
pop
push
mov
cmp
rorl
push
shl
cmc
xlat
cltd
in
push
jns
imul
out
cld
xorb
cmp
pop
ficomps
sub
lock
je
xchg
shlb
mov
dec
arpl
and
pop
lcall
sub
push
leave
test
fidivs
es
add
adc
jl
or
xchg
mov
dec
popf
or
mov
mov
xor
mov
push
dec
insb
hlt
xor
push
xor
inc
dec
nop
aam
sub
inc
xchg
adc
insl
fimull
fsubrs
mov
lods
inc
push
adc
cmp
or
inc
lahf
enter
int3
shlb
nop
sbb
lods
out
mov
mov
sub
lds
repnz
insb
mov
push
test
ljmp
pop
adc
je
sti
mov
test
mov
popa
stc
mov
add
jg
into
and
jg
add
mov
and
std
sbb
pop
jbe
jp
popa
cmp
add
jno
adc
ret
xchg
pusha
std
loopne
mov
cmp
inc
into
repz
or
xor
mov
in
ret
cmp
repz
outsl
adc
call
cmc
jae
cmp
stc
add
scas
mov
sbb
push
pushf
mov
mov
ficompl
cmpsl
into
daa
or
ss
mov
cmp
mov
sahf
test
add
lret
dec
incl
fisttpl
daa
lcall
xor
jecxz
fld
dec
lea
icebp
pop
xlat
sub
aas
pop
inc
inc
into
push
or
jecxz
ret
jecxz
and
xchg
aad
xlat
push
insl
arpl
dec
aad
stos
gs
dec
vcvtdq2pd
adc
fiaddl
jne
cltd
dec
xor
add
mov
xchg
loopne
xorb
or
adc
sub
stos
and
lea
sarb
push
xor
xchg
in
movsl
imul
loopne
push
inc
add
sarb
mov
push
es
jae
leave
cmp
imul
mov
lods
mov
xor
fcomp
es
xchg
pop
pop
jae
lea
or
or
imul
cbtw
mov
inc
fucomip
push
jg
testb
add
jge
dec
mov
outsl
or
xor
hlt
pop
in
mov
lret
mov
scas
mov
sbb
xchg
mov
pop
sub
cmp
aaa
je
push
jno
cmp
xchg
xchg
aas
mov
cld
dec
or
xchg
imul
lret
adcb
ljmp
push
ror
sub
jg
repnz
aad
fldt
int3
xor
dec
cmpl
lds
daa
es
out
ljmp
sahf
pop
fnstsw
and
cmpsb
mov
pcmpgtd
repnz
jb
push
notl
movsl
push
ja
or
outsb
sub
xor
add
pop
xorb
cmpb
fxch
ret
lret
jmp
inc
popf
sahf
xchg
ret
xchg
sbb
movsb
icebp
inc
aaa
lcall
mov
sub
enter
shll
push
pusha
mov
xor
dec
inc
mov
xchg
or
pushaw
es
cmp
xor
stos
lock
fidivrs
sahf
xchg
sbb
cltd
mov
aad
xchg
adc
cmp
mov
repnz
fwait
push
or
cmpl
xchg
test
test
stc
lock
jbe
adc
xor
in
rcl
xchg
sub
fld
das
sub
mov
mov
sub
call
sub
mov
decl
fmul
xlat
ja
pop
shlb
inc
or
xchg
fadds
add
in
outsl
bound
in
and
addr16
loop
inc
pop
addr16
mov
and
mov
imul
sbb
int
dec
out
xchg
call
test
pop
pop
repnz
ret
pop
scas
fwait
data16
jnp
lea
jmp
pushf
push
cmp
add
mov
mov
inc
inc
and
push
lods
test
mov
push
lds
add
iret
mov
push
lahf
jl
ljmp
cld
mov
int
xor
push
jnp
adc
pop
jb
cmp
and
mov
push
cmpsl
jl
je
jbe
fcmovu
mov
mov
push
repz
mov
arpl
dec
lahf
inc
leave
outsl
xor
fsubrl
outsl
rclb
mov
mov
int3
pop
mov
pop
xor
jmp
push
paddsw
std
mov
push
sub
push
dec
fcmovnbe
insb
add
pop
adc
rcr
sub
cmc
jge
xor
and
shr
inc
adc
std
loope
dec
loop
out
push
adc
pop
js
test
outsb
pusha
jecxz
sub
fmuls
cld
ljmp
ljmp
popf
sub
sbb
stos
and
insb
sub
xor
iret
mov
addr16
pop
xchg
push
cltd
in
sub
push
xor
out
mov
aad
lcall
sub
in
ljmp
push
outsl
push
adc
push
jmp
mov
iret
sub
xor
push
cli
jmp
imul
idiv
repz
mov
mov
adc
popa
xchg
push
stc
xchg
or
adc
sub
mov
das
inc
nop
in
fwait
inc
push
xor
out
repz
xchg
adcb
inc
mov
adc
scas
add
lahf
neg
adc
hlt
outsl
lock
pop
xor
dec
or
in
das
xor
leave
jne
insl
icebp
loop
xchg
je
mov
rorl
pop
jns
out
les
mov
sub
roll
sbb
insb
test
arpl
ja
sbb
mov
gs
jp
dec
cmp
mov
jne
cmc
in
push
push
xor
push
decb
and
fiadds
xor
jno
inc
pop
mov
lret
test
xchg
gs
fimull
lret
and
jg
test
pusha
js
mov
xor
cmc
lods
cmpsb
adc
and
add
mov
cmp
sbb
pop
xchg
ficomps
pusha
or
dec
push
mov
sub
push
enter
nop
xchg
or
lcall
push
adc
add
int3
gs
lds
mov
out
xchg
pop
add
sahf
xchg
test
cwtl
fprem1
imulb
frstor
je
stos
push
jp
in
dec
inc
xor
loop
nop
mov
imul
sbb
push
adc
sbb
std
imul
icebp
pop
cmp
in
lcall
cmc
cmp
and
sbb
leave
pop
rcrb
movb
adc
fwait
lods
fcmovb
pop
mov
testb
jp
mov
insl
push
rorb
mov
std
push
fs
neg
pop
out
push
cld
imulb
xchg
fildll
fldenv
test
jecxz
mov
add
ror
bound
test
scas
andb
jmp
jnp
leave
out
mov
sbb
dec
fs
data16
stos
mov
insl
cwtl
shr
or
cwtl
jle
push
pop
jl
add
rcll
int
sbb
xor
call
push
ss
inc
mov
sub
jle
clc
sti
or
jge
sub
inc
rcrb
je
and
mov
stc
loop
mov
jne
push
fmulp
bnd
je
loope
ds
jnp,pt
jns
jo
aad
ljmp
pop
xor
jmp
loopne
repnz
daa
cmp
outsl
fldl
push
sub
cltd
push
inc
mov
into
and
sbb
leave
sub
push
in
xchg
add
idiv
push
or
lahf
pop
mov
lock
or
into
xchg
ss
aam
int
pop
mov
lret
test
stos
jae
adc
out
cwtl
xchg
outsb
js
in
in
int
or
insl
fs
cld
inc
shrb
pop
sub
sbb
jbe
or
pusha
movsb
cmp
rorb
push
jle
sbb
jae
mov
mov
inc
inc
push
push
push
bound
iret
mov
sub
adc
push
sbb
insb
xchg
popa
mov
loope
jmp
sarl
gs
add
or
pop
mov
movsl
in
cli
rcl
popa
push
sub
and
arpl
mov
cmp
xor
test
hlt
adc
and
jbe
xlat
cmp
stos
in
and
outsl
sbb
test
mov
push
aad
sub
xor
jno
xchg
and
fs
popa
add
xchg
add
jbe
fistps
mov
addr16
push
ficomps
cltd
or
cmp
add
ja
out
or
cmp
stos
xor
lods
ljmp
sub
mov
mov
sub
lods
mov
jp
xlat
imull
mov
gs
insl
xchg
pop
sub
push
jo
fiadds
orl
cmp
adc
xcrypt-cbc
cmpsl
shlb
subl
mov
pushf
icebp
and
push
dec
add
outsb
cmp
jb
popa
fwait
int3
idivl
cmp
mov
pmullw
orb
push
leave
mov
addr16
sub
es
pop
push
into
out
cwtl
cltd
test
mov
or
or
repz
mov
out
mov
test
into
push
jecxz
jne
push
mov
je
int
jmp
push
mov
adc
idivb
dec
push
test
or
cmp
int3
cmpsl
xchg
stos
or
loop
and
push
jne
adc
outsb
xchg
jge
subb
or
sub
xchg
pop
cwtl
mov
and
and
inc
pop
loopne
lea
mov
notl
in
or
std
or
push
ficoml
mov
or
sub
fxch
sub
dec
pop
or
jmp
sahf
stos
mov
mov
jge
push
sbb
dec
mov
insl
fimuls
xchg
pop
fstpl
jge
fnstcw
mov
add
push
in
movsl
roll
add
push
lahf
les
sar
xchg
cmp
xchg
out
push
sbb
push
fistl
inc
mov
test
xor
cwtl
and
inc
out
adc
cmp
xor
jae
mov
hlt
push
push
mov
push
mov
push
adc
rcrl
mov
jnp
xchg
mov
jg
mov
and
inc
cmp
bound
mov
xor
jge
mov
cmp
ds
aam
sbb
dec
pop
push
test
and
ror
dec
sub
out
std
sbb
inc
movsb
jne
mov
out
pop
repz
repz
lods
out
je
add
mov
lods
fmull
subl
aam
mov
or
push
mov
call
jb
mov
lahf
stc
mov
add
mov
mov
icebp
rcr
clc
push
ror
mov
pop
insl
cltd
xchg
adc
sub
pop
popa
fsts
bound
pop
mov
ljmp
jbe
add
ss
es
mov
jmp
and
pop
mov
int
inc
mov
mov
lds
mov
es
inc
out
jl
nop
push
mov
adc
dec
or
jmp
mov
lea
jno
cli
push
icebp
lock
push
jns
cmp
mov
xor
sub
es
in
cwtl
lret
ret
add
movsl
pop
mov
sub
adc
adc
mov
lahf
fstpt
dec
arpl
ja
test
pop
in
sbb
rcll
or
push
rcr
mov
pusha
das
push
fisubs
xor
xchg
mov
stos
sbb
hlt
in
insl
mov
fs
or
pmuludq
ljmpw
fsubrs
fdivrl
inc
or
lret
push
or
das
cmp
mov
adc
adc
dec
xchg
xor
mov
jge
push
or
xor
and
cmc
jo,pn
xchg
sub
cs
rcr
testl
js
in
bound
push
push
fdivs
nop
sub
lods
add
dec
rclb
xchg
mull
add
push
in
aas
ja
fistpll
mov
cmp
gs
loope
pop
add
outsl
nop
jg
jae
cwtl
dec
pop
in
out
cwtl
pop
sbb
clc
loope
and
jp
and
scas
add
iret
mov
pusha
js
icebp
ret
jno
mov
mov
movsb
out
popa
ret
loop
jb
jg
add
shr
xor
xchg
push
addr16
inc
mov
sbb
jne
dec
iret
sub
sub
lcall
and
neg
lods
lea
loopne
daa
ja
and
pop
out
sbb
imul
xchg
xchg
in
jge
mov
mov
rcrb
aad
sub
dec
pusha
xor
adc
cltd
add
push
out
idivb
cli
cmpsl
pop
inc
jns
mov
or
rcrl
or
fisttpll
mov
add
lcall
mov
inc
movsl
int3
aas
insb
dec
adc
faddp
cmp
xlat
mov
mov
sbb
cmp
imul
xchg
jp
xchg
inc
aad
lea
popl
out
push
in
cmpsl
cmp
dec
xor
xor
ret
cmp
dec
fwait
int3
jns
xchg
mov
iret
popa
xlat
push
adcl
iret
and
mov
aam
test
outsl
sbb
mov
dec
adc
movsb
lahf
dec
fcoms
movsl
lret
sbb
push
push
jnp
mov
lcall
fiaddl
dec
push
cmpsb
pop
push
jp
add
or
adcb
mov
push
shrb
sub
adc
nop
cmc
fsubs
xchg
xchg
push
mov
fcomip
jne
cli
add
add
jnp
dec
mov
fidivl
daa
cli
sarl
dec
sti
insb
pusha
jbe
scas
sub
shlb
push
inc
inc
pop
stc
in
int3
mov
jbe
ljmp
sti
cmc
mov
call
movb
mov
adc
dec
movsl
pop
dec
lret
mov
ss
cwtl
sbb
in
stos
insb
cmpsb
xchg
pop
nop
insb
fucomi
jge
xchg
imul
stc
cwtl
popf
dec
mov
cmp
leave
mov
xor
sub
movsb
imul
scas
popf
fldenv
add
sbb
pop
mov
push
lds
or
daa
arpl
mov
or
cli
outsb
cwtl
push
and
pop
in
xor
pop
std
sti
push
mov
fistl
int
and
add
or
nop
imul
ljmp
gs
dec
push
stos
mov
js
jb
xor
xchg
cmp
ss
std
cmpsb
pusha
out
and
stos
xchg
jecxz
cltd
push
jge
aas
add
mov
and
adc
pop
cmp
push
jmp
mov
xchg
js
test
mov
pop
popa
push
and
sub
sub
jl
push
gs
adc
or
fisubs
xchg
mov
mov
jg
mov
sub
sbb
push
or
rclb
xchg
inc
adc
mov
sbb
bound
daa
into
fcmovb
add
mov
jno,pn
test
in
out
loop
jg
or
je
or
addr16
sub
cmp
ja
movsb
or
jp
loopne
inc
cltd
add
adc
jno
jno
and
js
pop
ds
ljmp
push
insl
fucomip
dec
aaa
scas
das
pushf
mov
ja
sbbl
pop
or
nopl
inc
add
pop
cmp
jle
cmp
pop
mov
mov
enter
lea
fmulp
roll
xor
cmp
cmp
jmp
xchg
cmp
movsl
fcmove
dec
push
std
jge
unpcklps
mov
cmp
repnz
popa
jl
cmp
std
add
lods
insl
inc
cmp
sbb
jae
dec
movsl
pop
mov
push
test
in
psadbw
sti
mov
sarl
mov
pusha
test
push
lods
inc
lods
clc
jl
scas
add
fiadds
movb
mov
sub
jge
loop
popa
outsb
xor
repz
lods
and
das
pop
adc
jbe
adcl
nop
xor
and
pop
mov
xchg
rcr
out
iret
adc
imul
jb
add
inc
test
insl
and
cs
inc
push
fiaddl
test
imul
and
popf
arpl
das
aaa
sub
inc
stos
scas
dec
fdivl
jge
fstps
add
add
imul
xchg
es
jb
add
jmp
and
push
mov
mov
push
cmp
fwait
cmp
sub
and
fbld
jl
cmc
and
pop
push
stos
out
mov
test
fnstenv
ja
js
iret
out
mov
pop
sub
adc
fists
xchg
pop
scas
sti
movsb
fsub
inc
mov
loop
add
lret
or
adc
xchg
xchg
inc
dec
in
out
dec
mov
pop
subl
andl
cmpsb
sub
mov
mov
dec
call
jnp
xor
mov
rolb
mov
xor
fildl
add
std
jg
cmp
dec
mov
mov
pop
gs
fildl
mov
xchg
jge
lods
ret
inc
shrb
in
cmp
adc
mov
cmp
dec
mov
arpl
das
add
mov
mov
popf
testb
mov
xor
test
sub
enter
sbb
jns
jle
push
imulb
in
add
popf
inc
out
pop
stos
adc
inc
loope
sub
aad
test
inc
adc
sbb
mov
or
cs
and
int3
cs
pushf
adc
bound
or
fwait
mov
movsb
pop
or
inc
sub
cmp
or
mov
and
ss
movsb
push
fisubrs
mov
pushf
mov
roll
fsubrs
mov
xchg
inc
pop
jmp
mov
mov
mov
outsl
inc
cmp
add
fmuls
ds
sub
pushf
sub
shll
femms
jg
roll
imul
mov
jg
xchg
mov
js
mov
xor
pop
cmp
pop
in
movsl
insb
and
dec
int3
xchg
dec
pop
iret
cwtl
xor
aas
mull
push
push
test
jl
pop
xor
lods
sbb
jbe
add
cli
inc
shl
mov
cwtl
in
dec
std
dec
pop
sahf
jbe
dec
pop
mov
mov
es
mov
or
fists
loopne
outsl
adc
incl
jae
xor
push
gs
inc
inc
aam
sub
cmp
mov
in
xchg
lock
xlat
lret
inc
mov
fistpl
lcall
mov
mov
xchg
push
enter
xchg
pop
inc
decb
pop
aas
push
add
xor
clc
pop
mov
mov
fwait
stos
push
cmp
jo
sbb
ja
ret
add
xchg
push
nop
mov
cmp
add
xchg
cmp
dec
inc
jo
in
into
mov
xorl
jge
mov
xchg
xor
mov
sub
xchg
outsl
mov
dec
pop
addr16
imull
lahf
mulb
mov
cwtl
mov
rcrb
enter
sub
shll
jp
push
xor
loopne
cmp
mov
dec
out
shlb
aad
xchg
test
adcb
daa
add
cmpsl
or
cwtl
insb
shr
sub
das
mov
pushf
sub
jne
cmp
mov
push
xchg
fmul
fiaddl
lds
push
jb
repz
inc
cmp
ret
xchg
mov
jl
push
test
xor
scas
pop
mov
sub
add
jg
movsb
int
andl
orb
pop
and
stc
es
or
push
mull
mov
mov
test
mov
shr
in
out
push
cmp
cmp
outsb
fsts
dec
adc
adc
dec
jno
fmull
inc
popa
pop
daa
js
pop
data16
imul
ss
fisubrl
adc
cmp
lret
dec
sub
xchg
shll
popa
or
jl
lock
repz
sar
pop
sbb
mov
aad
dec
aas
jae
pushf
ljmp
pop
and
stos
inc
sbb
xchg
call
dec
lret
repz
mov
cmp
inc
xchg
or
fwait
push
sub
pusha
test
pop
dec
jo
jae
outsl
ja
cmc
xchg
hlt
test
xchg
ficomps
arpl
pushf
fmulp
fs
xor
push
cmp
add
mov
js
aas
aam
mov
mov
push
es
jge
test
lret
or
fnstcw
inc
jb
cli
lahf
dec
movsb
fwait
cmp
inc
jo
cmpsb
cwtl
pop
cmp
imul
repnz
xor
jnp
pop
in
out
mov
jae
mov
lock
movsl
xchg
ja
add
in
fs
addr16
jge
nop
pop
out
mov
ss
push
jae
sub
inc
adc
orps
mov
fwait
lods
rcrb
enter
inc
lds
cmp
push
pop
pop
mov
dec
repz
scas
dec
push
outsl
add
int3
adc
fistl
pop
fs
int3
mov
mov
inc
mov
pop
bnd
xchg
jle
icebp
sub
fldl
pop
jmp
lcall
dec
xchg
sub
inc
cmp
cmpsl
outsb
aas
mov
cld
out
or
insb
and
nop
repz
push
mov
sub
jmp
dec
subl
pop
fcomp
aas
push
mov
jp
enter
push
lret
inc
je
mov
out
or
out
popf
mov
inc
mov
nop
aaa
cmp
dec
and
lds
and
inc
arpl
and
mov
addl
mov
notrack
loope
pop
cmp
out
icebp
shll
or
call
pop
sub
stos
mov
adcb
adc
in
add
add
outsl
mov
or
adc
scas
lods
add
mov
pop
roll
inc
or
pop
leave
xor
lret
sbb
inc
arpl
xor
movsb
adc
rcrl
xchg
icebp
clc
mov
test
sub
jp
sub
xorb
rcrb
pop
and
and
pop
cmp
js
addr16
dec
inc
mov
out
or
les
lret
test
pop
jno
sub
xchg
stos
lahf
std
out
lods
inc
pop
push
pop
rcll
mov
mov
into
push
add
jg
or
mov
inc
mov
push
imul
jmp
loopne
insb
movzwl
push
into
movsb
xchg
cmp
test
xchg
xchg
popl
icebp
dec
movsb
scas
lds
xchg
scas
mov
pop
out
hlt
mov
mov
ficompl
xor
scas
call
push
mov
jbe
sysexit
sbb
and
hlt
fnstenv
sub
scas
rol
stc
in
add
pushf
pop
mov
addr16
xor
or
lcall
dec
out
pop
xchg
ret
mov
sub
int
outsb
pop
cmp
xor
rolb
cmpsb
daa
in
mov
js
adc
cmp
sub
in
push
adc
pusha
adc
shrl
adc
mov
jb
xchg
xlat
push
int
push
and
sub
in
lret
aaa
sarb
ss
pop
pop
rorb
add
mov
stos
outsl
inc
stos
jno
push
push
int
mov
inc
sbb
repnz
lret
loope
xchg
or
xchg
incb
add
mov
fwait
push
jbe
sahf
mov
and
inc
iret
shlb
mov
in
add
aaa
mov
xchg
xor
inc
mov
int3
adc
int
dec
jae
lods
and
and
test
popa
sarl
fcmovnu
lcall
cmp
fbstp
xor
xchg
pop
lcall
sub
cmp
scas
jb
in
mov
or
negb
pusha
xchg
sbb
nopl
mov
fdivl
push
daa
lods
test
and
aaa
iret
movlps
add
push
lahf
jne
aas
es
cmp
stc
mov
inc
stos
jle
dec
xchg
sub
fnstcw
iret
xorl
mov
or
in
mov
push
or
aas
adc
aas
ds
jp
out
mov
rcl
gs
xor
or
xchg
or
add
push
adc
and
xchg
enter
leave
repnz
jnp
cltd
out
fmulp
and
add
lret
fnstcw
mov
fisttpl
mov
imul
push
and
fs
ds
and
insb
inc
out
js
mov
xor
or
add
test
add
lahf
fsubrs
push
fnstenv
or
push
les
jecxz
mov
fists
or
popa
stc
outsl
repz
ss
cmp
ret
mov
arpl
jns
pop
mov
push
shlb
and
stos
out
lret
xor
mov
sbbb
jge
push
or
jno
push
jge
cmpsl
cmp
push
call
insl
xchg
adc
pop
inc
aad
xor
out
call
pusha
mov
jle
push
jg
cmp
xor
pmullw
cmp
inc
scas
js
adc
in
xchg
sub
aad
aas
cmpsb
and
dec
sbb
fcomps
pop
pop
test
call
mov
lods
or
sbb
rcr
jbe
sub
mov
flds
test
cwtl
xchg
mul
dec
test
inc
les
data16
leave
xchg
std
testb
jecxz
outsl
mov
dec
add
cmpsb
xchg
sti
shr
popf
popl
adc
es
inc
popa
pop
push
shrd
pop
xchg
mov
mov
sbb
mov
cwtl
jb
inc
jecxz
mov
shll
hlt
mov
xor
push
out
ret
mov
mov
cmp
cmpsb
aad
lea
jecxz
scas
adc
imul
and
ficoms
xchg
pop
scas
adc
aam
lcall
dec
pop
push
movl
jecxz
inc
packssdw
shrb
mov
rcrl
repz
pop
adc
cs
aad
lcall
jle
icebp
xchg
jae
jns
je
loopne
mov
jae
in
test
stos
or
lret
sbb
adc
add
lock
pop
cltd
rorl
pushf
jbe
cmpsb
jl
lret
lret
sbb
pushf
lret
je
jnp
jg
popa
fistl
sahf
jns
stc
mov
cmp
mov
or
mov
dec
mov
daa
ret
mov
jg
xor
push
xor
add
dec
insl
popa
sbb
inc
pop
in
or
sbb
movsb
call
pop
add
cmpsl
and
shrl
clc
xchg
add
std
dec
push
push
dec
lahf
insb
cmpsb
aam
out
gs
xchg
pop
lret
cmp
in
xor
sbb
mov
in
xchg
sar
jecxz
jecxz
xchg
shl
iret
push
out
sub
inc
orb
cli
jl
cltd
lea
dec
or
jbe
cmovo
inc
movsl
ds
out
fildl
jecxz
adc
sbb
sub
inc
push
outsb
insb
movsb
fdivl
ret
addr16
push
mov
dec
leave
insb
dec
xor
push
mov
mov
mov
sbb
ss
push
decl
insb
pop
xchg
int3
inc
push
push
add
incl
repnz
mov
addr16
dec
mov
gs
xlat
jbe
sub
mov
loop
icebp
cmp
cmp
xchg
sub
adc
das
iret
dec
pop
test
lds
sbbb
jae
gs
and
xor
cli
sub
loop
ja
sbb
test
dec
incl
sbbl
mov
sbb
into
add
insb
xlat
xchg
movsb
movl
mov
and
stos
ret
cmp
cmpsb
jmp
je
outsb
pop
push
add
add
out
pop
dec
dec
inc
aam
js
dec
push
movsb
mov
sbb
mov
xor
loopne
sbb
scas
cmp
pop
ret
in
mov
sub
dec
aam
loopne
ljmp
lods
pop
mov
dec
iret
push
cmp
mov
test
test
cmp
add
cmp
iret
shlb
icebp
in
sbb
jecxz
div
adc
out
sbb
out
scas
fists
and
stc
addps
cli
movsl
mov
xchg
cld
add
mov
add
xchg
lea
mov
fndisi(8087
sbb
stc
push
mov
cmpsw
adc
cmp
adc
jb
pushf
addl
loop
sbb
mov
and
in
jo
inc
mov
addr16
sub
loopne
push
das
mov
push
ret
add
sbb
inc
decb
and
insl
jno
shl
cltd
daa
stos
jne
std
loope
add
out
lods
incb
dec
dec
out
or
pusha
add
pop
xchg
pop
out
ljmp
fpatan
pop
maskmovq
testl
loop
sbb
mov
fs
js
and
and
fs
cs
adc
lret
jl
adc
cmc
cmpsl
jecxz
in
sub
jge
ja
shlb
negl
fildl
test
mov
adc
fs
jae
pushf
std
insl
sbb
xchg
rcll
dec
and
jl
adc
pop
les
adc
pop
mov
and
mov
call
int3
push
fcomi
pop
pop
std
xor
add
push
mov
xchg
popf
mov
pop
sti
scas
jmp
out
add
lahf
jmp
cmp
inc
in
movsl
mov
daa
sti
xchg
lods
das
daa
pop
mov
addb
inc
hlt
test
sub
loope
mov
out
mov
stos
dec
aad
in
push
and
aas
jns
mov
lds
out
inc
into
add
into
push
repz
mov
fists
jle
loope
sbb
sti
push
fcoml
mov
sbb
mov
in
movsl
enter
xchg
loopne
or
out
mov
hlt
pushf
ret
cs
xor
inc
mov
inc
iret
sub
scas
cmp
aam
xchg
iret
mov
notl
movsl
dec
pop
sub
movsl
pop
cmc
mov
pushf
fsubr
in
cmc
xchg
cmp
jg
orl
je
dec
push
fsts
mov
fildll
test
xorb
fwait
cmp
mov
jo
mov
add
in
mov
fstpt
lahf
addl
cmp
pop
mov
sbb
lods
add
cmc
sub
add
adc
cmpl
lock
dec
dec
sar
pop
mov
or
outsb
cmp
lods
xchg
sbb
cmp
inc
cmpsl
out
fsubr
xchg
cmp
mov
cmp
test
fmuls
repnz
rcll
pop
cmpsl
xor
xchg
pop
push
adc
and
push
mov
ljmp
inc
sbb
rcl
and
inc
fwait
out
mov
loop
in
rclb
push
loop
lds
cwtl
mov
bound
mov
cmpsb
jb
mov
stc
subb
lods
mov
mov
inc
cmp
add
or
mov
pop
fnstenv
cmp
and
dec
jge
push
outsb
cs
push
mov
mov
scas
sbb
stos
mov
por
aad
ljmp
cmp
stos
and
jmp
mov
inc
popl
sahf
out
or
test
popa
push
jne
cld
mov
fdivrl
mov
xor
pop
imul
pop
xor
test
mov
les
sahf
insb
flds
and
shl
mov
adc
mov
fldenv
sub
fadd
mov
leave
xorl
mov
sub
pop
cmpl
in
pop
add
fcompl
mov
loopne
fsubr
and
inc
dec
js
in
cmp
nop
popf
adc
cmpsb
jge
imul
jg
add
rol
mov
je
sti
mov
pushl
push
jbe
push
xchg
mov
pop
cmp
cmp
add
cltd
movsb
repnz
cmp
mov
sbb
cwtl
cltd
xchg
jb
adc
mov
shrl
pop
adc
add
or
mov
fstp
mov
mov
es
mov
icebp
pop
das
sub
in
mov
aam
daa
pusha
jmp
subl
leave
xchg
pushfw
sub
negb
pop
cmp
repnz
out
adc
jae
push
add
mov
ds
pop
xor
xor
imul
sahf
or
int
pop
sahf
add
and
repz
xchg
bound
fwait
and
jo
push
lahf
out
aam
ja
pushf
js
xor
out
daa
push
enter
cmc
add
mov
add
and
or
mov
lcall
stc
jne
rol
lods
cmpsl
test
ficomps
ds
mov
adc
out
in
xchg
push
in
cmpl
push
xchg
inc
movlps
mov
testl
pop
cli
sub
clc
sub
stos
and
shrb
mov
test
push
xor
push
and
int
sbb
loope
push
cmc
cmpsl
rcll
dec
cmc
inc
cmp
sub
and
xor
sbb
adc
icebp
hlt
loope
mov
stc
subb
imul
inc
adc
out
and
shr
lds
mov
fmull
repnz
out
mov
popf
ja
orl
mov
adc
xchg
cmc
dec
fwait
icebp
xchg
xlat
and
cmp
jmp
mov
fsub
inc
xchg
data16
push
mov
mov
test
aad
mov
xor
cli
mov
inc
orb
mov
addr16
cmp
cwtl
xorl
mov
mov
mov
mov
sarb
arpl
and
in
add
addr16
pop
add
lret
mov
inc
dec
fwait
test
and
xor
mov
in
fnstenv
dec
icebp
stos
cmp
ret
cld
push
shr
adc
mov
addl
std
and
add
inc
lret
lock
scas
inc
icebp
test
lret
sbbb
repnz
aaa
out
cmc
jo
mov
mov
in
lods
scas
cmc
and
cmp
mov
loopne
loop
push
lcall
sub
mov
mov
sbb
mov
test
shlb
xchg
rorl
pop
imul
sub
inc
xor
in
dec
mov
loop
sub
push
es
int
loopne
repnz
fisubs
mov
out
pushf
movsb
inc
mov
push
daa
enter
out
inc
mov
add
insl
mov
xchg
push
out
sub
push
pop
cmp
ja
into
jmp
mov
cld
rcrb
mov
scas
xor
es
insl
ja
add
das
sti
dec
adc
inc
outsl
fsubr
push
in
sahf
sbb
popa
test
mov
cli
pop
mov
pop
dec
movsb
daa
ja
pushl
imul
ret
fsubs
pop
sbb
pop
aas
mov
popa
add
mov
or
sub
outsb
and
mov
add
inc
mov
xchg
adc
add
addr16
repnz
cs
push
pop
inc
cmpsl
das
inc
dec
pop
arpl
cmp
mov
daa
test
aas
mov
lock
or
cmp
dec
hlt
nop
arpl
mov
or
ret
divl
inc
mov
pop
adcb
sbb
sbb
cld
imul
fstl
nop
hlt
stc
sbb
push
mov
xchg
push
mov
movsl
dec
in
mov
or
xchg
jnp
jmp
in
fwait
in
jae
push
movl
sbbl
sub
fcmovnb
rclb
shrl
icebp
testl
outsl
or
out
mov
dec
into
mov
push
sub
adc
mov
repz
jle
shll
mov
mov
adc
in
adc
push
jp
cmc
fs
pop
imul
mov
outsb
add
mov
loop
mov
xchg
cltd
jge
movsb
int
out
stos
push
insl
mov
mov
hlt
les
in
push
sub
ja
repz
nop
gs
jo
adc
sub
popf
adc
cmp
cmp
inc
hlt
fst
cs
lock
in
sbb
test
dec
and
sarl
or
xor
mov
jne
push
mov
adc
int
fimull
xor
jo
aaa
push
mov
loopne
fcompl
push
add
repnz
idivb
sbb
movsb
cmp
js
test
push
adc
loopne
pop
fimuls
adc
roll
mov
push
push
add
xor
jae
out
mov
adc
repz
jae
ljmp
xchg
pop
xor
add
push
pop
jns
loope
cld
jb
ljmp
out
popf
or
mov
inc
pop
cld
pop
and
pop
loope
inc
add
imul
imul
test
incb
mov
test
fs
push
mov
sbb
icebp
adc
cmp
aad
gs
fdivr
jne
fcoml
sub
outsb
push
lods
mov
jmp
sub
xchg
inc
mov
pushf
xchg
aaa
sbb
push
pop
push
dec
inc
or
dec
xor
pop
insb
sbb
fadds
xchg
stc
das
ror
decb
lods
lcall
stos
das
fiaddl
aaa
sub
lcall
popa
out
adc
shlb
fstl
jno
fs
pop
fwait
or
dec
inc
xor
inc
stos
icebp
ljmp
push
sbb
and
push
fxch
sbb
data16
push
and
xchg
lods
movsl
mov
mov
push
lods
cmp
sub
popa
insl
cld
xor
add
mov
adc
cltd
sti
imul
test
les
jle
int3
shlb
pop
insl
and
ficoms
sbbb
lret
lret
fs
out
add
xor
scas
jge
jnp
das
sahf
jne
inc
bound
lds
mov
xchg
xchg
add
pop
mov
pop
scas
xor
outsb
das
out
and
jle
shlb
adc
xchg
or
lods
aaa
ds
ficompl
into
std
fisttps
pop
roll
sub
in
or
push
inc
call
fbld
hlt
nop
sub
loope
adc
insb
inc
or
cmp
roll
lret
inc
inc
jb
pop
call
outsl
aad
push
out
xchg
xchg
or
adc
clc
sbb
jns
sbb
sbb
testb
ds
dec
das
mov
jl
sbb
mov
xorb
push
add
xchg
out
inc
and
cmp
fdivl
sbb
xchg
sti
fidivs
dec
or
and
fldenv
shrb
push
dec
mov
mov
popa
mov
int
in
mov
pop
push
adc
sarl
adc
iret
add
push
sub
push
xchg
adc
inc
or
sbb
lods
repnz
test
mov
or
fdivrs
scas
int3
out
jno
lret
pusha
and
dec
lock
pop
nop
inc
loopne
or
imul
push
pop
popf
out
pop
and
mov
cmp
push
pop
cmp
lahf
and
iret
mov
pop
roll
and
data16
mov
test
fwait
in
and
adc
xchg
sub
mov
rcl
imul
jne
mov
sbb
mov
add
add
and
sbb
lds
aas
shll
popa
pop
xchg
fsubrs
stos
cmp
imul
mov
out
dec
sub
mov
es
lea
cmp
leave
mov
or
enter
sbb
mov
add
insb
int3
xor
dec
mov
adc
push
imul
sbb
jae
lahf
push
adc
mov
movsb
icebp
add
add
scas
push
jo
daa
dec
mov
jp
mov
out
inc
xchg
inc
ficompl
inc
or
je
xchg
std
dec
pop
pop
lock
inc
popf
stc
sbb
loope
popa
mov
sbb
cltd
sbb
jae
in
mov
shrb
add
xchg
out
incl
cltd
xor
lret
xchg
lret
mov
pop
mov
rorb
mov
lods
ror
cmp
dec
pop
or
adc
inc
imul
push
pop
cmp
xor
mov
aad
jge
sbb
js
cs
pop
and
fisubs
hlt
enter
mov
out
mov
xchg
lock
lea
mov
push
nop
test
push
mov
call
dec
sub
sub
leave
dec
push
fstl
enter
enter
mov
push
push
add
adc
xor
cs
icebp
fs
sub
les
jae
test
jmp
xchg
in
pusha
stc
rcrb
inc
cli
mov
cmp
sbb
dec
lahf
dec
xchg
lcall
test
stos
cli
loop
mov
out
jmp
jno
or
xor
in
cld
xor
xlat
movsl
jle
mov
out
dec
adc
dec
lahf
push
cmpb
jb
mov
pop
dec
hlt
lock
jge
push
loopne
test
data16
sbb
mov
mov
push
jmp
xchg
mov
cmp
mulb
add
xor
lds
or
adc
dec
aaa
push
or
xchg
or
outsb
mov
fsubl
insl
sbb
gs
pop
add
mov
adc
cmc
inc
cltd
int3
cs
inc
adc
adc
sub
imul
in
int3
lcall
cmp
icebp
mov
sub
lahf
push
cli
mul
mov
jo
sub
and
popa
mov
xlat
fcmovne
dec
sbb
cld
sbb
dec
mov
xchg
xor
pop
mov
lret
sbb
fmul
mov
and
push
adc
jle
hlt
adc
leave
in
or
js
inc
sub
out
inc
and
xorl
dec
jle
mov
fwait
push
mov
lea
fnstcw
pop
orl
cmp
movsl
sbb
flds
cmpsw
pop
or
outsb
mov
push
and
xchg
and
jp
cmpsl
cmp
push
or
push
lods
out
jle
cmp
repnz
mov
jb
pop
int3
cmp
popa
xor
cmc
cltd
fstps
push
mov
int
pop
and
ljmp
mov
mov
push
int3
lret
pop
scas
sarl
outsl
lods
and
cs
cmp
inc
mov
xor
pushf
lods
push
mov
add
pusha
and
mov
stc
cmp
dec
mov
dec
mov
inc
fpatan
pop
pop
xor
push
dec
loope
jnp
add
mov
add
pushf
rorb
add
fstl
test
aas
or
and
mov
pop
repz
sbb
jmp
aad
pop
lock
cltd
push
ljmp
imul
std
loope
and
out
sbb
imul
mov
jo
jb
lds
jno
mov
sbb
sbb
pop
fsub
mov
lds
xchg
inc
xor
pop
loope
adc
or
xor
cmp
enter
cld
push
outsl
mov
arpl
dec
pop
repnz
out
jne
lret
pop
adc
loop
xchg
sahf
ret
dec
jmp
ret
movsb
aas
mov
pushf
pop
mov
cmp
adc
in
dec
xchg
pop
mov
test
jno
jnp
notb
cld
sbb
sub
aas
shll
push
gs
mov
jle
push
mov
roll
pop
mov
nop
jbe
lret
xchg
xchg
fsub
loope
lods
cmp
push
pop
imul
dec
bound
subl
rolb
lods
mov
int
cmp
mov
mov
dec
pop
lea
insl
or
shll
cld
jns
pushf
sti
pop
int3
scas
jl
fimull
xchg
xchg
ret
insl
filds
and
cmp
xor
xor
dec
mov
bound
mov
out
cli
xor
pop
gs
movsl
and
jmp
in
outsl
push
aas
pop
jo
jae
inc
xor
jo
cli
daa
pop
mov
xchg
mov
nop
sbb
lcall
lea
jge
bnd
inc
rcll
or
push
fwait
and
rcl
mov
jl
paddb
dec
insb
pop
cwtl
push
mov
and
push
sti
sbb
xor
dec
xchg
iret
add
cmp
xor
inc
inc
or
mov
incb
pop
dec
popa
mov
gs
clc
adc
inc
dec
mov
xor
push
mov
jae
sbb
lahf
jb
mov
cwtl
mov
ds
test
stc
ficoml
xchg
xchg
cmp
xchg
xor
repnz
clc
xor
push
jne
mov
subb
xchg
outsl
and
call
nop
test
test
jp
mov
xchg
sbb
shr
sub
cltd
and
xor
mov
fadd
dec
xchg
jge
sbb
xor
xchg
pushf
push
lock
xchg
fcoms
mov
push
pop
jbe
cs
mov
pop
stos
sahf
mov
leave
gs
push
push
stc
jge,pt
add
repnz
push
enter
xchg
cltd
out
push
mov
mov
mov
cmp
dec
mov
and
adc
push
push
int
lret
push
or
add
push
fidivs
cli
mov
loope
pusha
out
sub
paddsb
jo
or
scas
inc
mov
lcall
out
lcall
mov
jmp
xor
sti
push
inc
xchg
jns
ret
pop
xor
push
cmp
rorl
mov
inc
repnz
daa
out
jmp
aam
inc
jge
jnp
jle
pop
cltd
push
xor
movsl
push
repnz
cmp
decl
pop
sbb
xor
test
xchg
and
mov
push
lods
je
fnstsw
insb
cmp
mov
push
jne
jle
push
outsl
aam
mov
repz
and
cmp
les
test
int
jecxz
cmc
loopne
inc
mov
cmp
fildll
mov
jns
jp
sub
pushf
cmp
inc
mov
bound
in
dec
inc
popa
dec
push
push
mov
test
dec
lods
dec
and
dec
rolb
mov
inc
insb
lods
mov
aaa
test
lock
xchg
rcrb
cmp
lahf
jl
xlat
adc
outsl
out
add
stos
pushf
dec
outsb
xor
sbb
or
insb
inc
jb
pop
mov
std
xchg
mov
mov
push
clc
sbb
xchg
add
rclb
subb
sbb
mov
movsl
and
pushf
pop
mov
xor
je
pop
inc
cltd
mov
push
lods
rorb
es
push
adc
loop
das
ret
insb
pop
fadds
inc
mov
push
mov
add
or
inc
pushf
jl
inc
clc
push
arpl
mov
stos
in
imul
fidivl
mov
jle
int3
push
mov
dec
push
je
jae
hlt
sub
mov
sub
adc
push
sub
call
jnp
roll
or
ret
add
aad
cmp
jecxz
sti
adc
inc
fimull
and
pop
cs
xchg
cmc
jp
popf
adc
mov
insb
scas
push
push
xchg
mov
aad
call
stc
add
jp
loopne
fstpt
xchg
xchg
inc
ret
jle
fucomp
jnp
arpl
or
je
sbb
pop
lods
lds
jle
mov
push
cmc
iret
mov
ret
mov
out
repz
adc
pusha
popa
mov
and
add
sbb
movsb
sub
ljmp
mov
cmp
jne
sbb
mov
pop
mov
iret
stos
decb
jl
aad
sbb
test
push
xchg
cs
push
test
push
stos
xor
test
rcrl
pop
ret
out
push
arpl
pop
push
mov
daa
jne
sub
das
pop
jae
fs
add
hlt
mov
add
dec
stos
cs
pop
idivb
mov
insb
add
in
or
xor
stos
ds
in
sub
pop
dec
jg
pmaddwd
inc
mov
adc
out
jns
daa
outsl
mov
addr16
hlt
add
lahf
aad
icebp
push
ja
xchg
fisubrs
stc
pusha
sub
or
inc
cli
adc
jg
push
addr16
cli
cmpsb
fs
pop
mov
pop
and
outsl
leave
lods
inc
stc
scas
insl
and
or
lods
fiadds
fwait
ret
fdivs
cmc
add
adc
mov
mov
cmp
jns
insl
push
sahf
push
mov
mov
jbe
jb
je
xor
xchg
aam
dec
icebp
mov
inc
aas
leave
mov
sahf
cli
xor
sbb
movsl
cmp
push
cmp
mov
nop
cmp
or
shrb
and
jbe
cld
jno
push
stos
push
mov
dec
mov
into
data16
leave
jge
stos
pop
cmpl
mov
lret
jns
divl
insb
stos
push
inc
sub
enter
sbb
jae
fildl
divl
movb
rclb
dec
into
in
jmp
test
jno
mov
add
ffreep
lcall
ss
xchg
jo
adc
out
push
push
clc
pop
pop
sbb
jno
adc
push
mull
xorl
mov
hlt
lods
adc
stos
xor
cmp
jnp
loopne
call
das
mov
rorl
xor
cmp
push
dec
push
rorb
lock
jmp
xor
inc
xor
out
leave
pop
movsl
push
adc
test
pop
push
xor
push
or
cli
cs
jmp
xor
js
test
jp
out
fiaddl
pop
add
popf
imul
clc
test
cmp
push
dec
push
add
push
lea
jns
add
shlb
out
push
pop
lods
adc
mov
adc
lds
call
mov
sti
and
aaa
pop
jbe
call
push
sub
outsw
mov
cmpsb
pusha
popf
sbb
movsl
pop
nop
lcall
repz
cmpsl
call
subb
cmc
jl
inc
pop
scas
mov
pop
pop
push
and
je
cmp
int3
sub
sub
sbb
xchg
hlt
and
lds
cld
call
dec
push
inc
dec
scas
sti
in
in
stc
cmp
adc
adc
sbb
neg
cmp
inc
aaa
imul
and
xor
mov
mov
das
imul
cmpl
xchg
or
dec
sub
inc
sahf
ss
ljmp
scas
cmp
and
inc
arpl
mov
fisttpll
push
lea
xorb
imul
or
lods
cmp
inc
add
push
adc
cmp
and
testb
push
pop
std
inc
fnsave
xor
aaa
dec
test
pop
enter
sub
xchg
sub
int
xchg
push
fwait
stos
sub
shl
shlb
xor
add
dec
sub
lret
lcall
imul
mov
aaa
add
dec
das
cmp
aad
stos
mov
mov
imul
int3
loope
xor
fcomi
mov
push
ljmp
pop
dec
jmp
dec
cmp
xrelease
pusha
inc
pop
jle
call
movsl
cltd
sti
adc
ret
insl
stos
cld
xchg
in
nop
adc
adc
xor
mov
incb
xchg
lahf
dec
sub
mov
ret
cmp
sub
lahf
sub
lahf
mov
test
test
pop
cmpsb
aaa
loopne
inc
cmp
call
repz
sbb
cmp
pop
ret
dec
mov
cwtl
mov
sbb
xchg
popf
push
mov
clc
jge
rdmsr
cmpsb
inc
xor
maskmovq
testl
xlat
mov
je
ljmp
sub
cmp
pushf
out
aas
inc
dec
lods
cmp
and
ja
xchg
jbe
xor
cmp
repnz
loope
mov
leave
jno
jmp
or
mov
mov
mov
mov
and
mov
xchg
in
sbb
leave
xor
pop
mov
das
in
xlat
mov
cmp
push
int3
in
xor
aaa
xchg
add
push
and
mov
sarb
test
out
cmpsb
dec
dec
cmpsl
xchg
push
out
add
loop
add
jle
out
xchg
mov
pop
sbbl
fisubrs
cmp
lahf
iret
lcall
add
ret
lods
arpl
hlt
shlb
xor
pop
push
rcr
jle
push
mov
out
scas
add
xor
jbe
push
dec
in
mov
cltd
fiadds
rcrb
sub
aas
addl
je
dec
jnp
jnp
int
hlt
mov
into
dec
in
lahf
mov
enter
addr16
test
adc
pop
adc
or
imulb
aam
or
out
or
pushf
imul
push
jg
xor
inc
pop
mov
dec
stc
pop
outsl
fcomi
jb
rcl
leave
jmp
sbb
cld
pop
or
sub
imulb
iret
sub
iret
test
cmp
lods
mov
and
adc
jb
mov
cmp
inc
pop
xor
cltd
lods
mov
cli
lea
sbb
dec
cmpsl
sub
jbe
or
push
icebp
call
in
xchg
into
mov
ret
and
fbstp
mov
mov
cmpb
lods
lea
cmp
sub
out
enter
leave
pop
pop
cmp
xchg
mov
mov
dec
fnstcw
sub
subb
cltd
je
add
dec
scas
jbe
xor
into
or
mov
push
sbb
leave
inc
dec
adc
out
sarb
lret
hlt
rcrl
jnp
sbb
cltd
out
adcl
add
scas
icebp
jnp
dec
in
sti
mov
lock
fisubrs
mov
sub
xchg
pop
mov
imul
mov
dec
lret
xchg
in
outsb
iret
dec
push
pop
cltd
inc
or
subl
xor
cwtl
sub
inc
rcrl
cli
shll
mov
jmp
pop
mov
dec
nop
or
add
mov
cmp
xor
mov
stc
push
fs
jg
mov
and
ret
jb
pop
je
mov
test
aaa
push
ficomps
call
xchg
push
scas
nop
pop
es
xchg
inc
ss
leave
lds
dec
cmpsl
jno
aad
cmp
out
adc
lea
adc
xor
add
pop
adc
sbb
push
les
push
repnz
sub
pushf
push
xor
dec
dec
mov
sahf
ja
ret
mov
dec
hlt
or
shlb
push
loop
sahf
imul
test
test
push
push
popf
fsubs
mov
jno
movsl
jbe
pop
shll
ss
xchg
or
in
bound
ljmp
dec
xorl
fistpl
sub
sub
pop
mov
cld
mov
or
cmpb
mov
ficoml
jmp
push
mov
add
and
sub
sbb
dec
arpl
into
aas
add
jge
pop
arpl
ret
aad
cmc
or
je
or
fdivrl
enter
outsl
es
or
dec
cld
into
fadds
out
in
dec
fists
ret
or
jb
out
out
jbe
xchg
jno
xor
fcompl
sar
cmpps
lret
sub
xor
lcall
aaa
dec
add
and
jbe
testb
movsl
xchg
pop
repz
insb
mov
or
je
scas
mov
dec
push
stc
and
push
push
lea
mov
or
jp
insl
xchg
int
push
dec
and
aas
push
pop
fucom
cmp
repnz
xchg
mov
int
inc
jbe
insl
aad
fistl
cmp
fsubp
jmp
adc
in
mov
jo
cmc
loop
cs
lcall
jns
sub
mov
push
mov
in
mov
in
in
pop
mov
jns
fs
loop
xor
popa
cmp
rcrl
pusha
push
or
cmp
pop
loopne
in
ljmp
xor
inc
call
mov
jnp
insb
cltd
mov
and
cmp
and
mov
jmp
fwait
es
add
and
aad
jno
aam
outsl
sbb
sbbl
sub
icebp
ljmp
sub
sarb
sub
mov
out
mov
dec
loop
mov
adc
mov
and
xchg
sahf
mov
and
je
push
adc
jne
shll
sarb
rorl
inc
call
leave
shlb
in
leave
js
rorb
mov
sub
les
cld
jmp
mov
into
les
movsl
and
mov
pop
pop
addl
pushf
fs
cltd
sbb
movb
stc
mov
or
mov
adc
fs
push
movsb
adc
out
loop
shrl
movsb
cmp
ret
jno
push
je
cmp
inc
jmp
popf
ret
jbe
dec
lret
mov
in
mov
out
das
pop
fisubrs
push
stos
and
sub
jle
mov
and
jg
ret
or
pop
xchg
cmp
repz
inc
pop
xor
pop
inc
inc
iret
xorb
mov
xlat
xchg
mov
imul
js
jecxz
cmpb
push
sbb
ds
pop
cmp
inc
ret
push
movsl
cmp
jo
mov
icebp
pop
xchg
orl
insb
loope
arpl
call
clc
gs
outsb
adc
push
pextrw
insb
dec
sahf
stos
test
cmp
sahf
xchg
jno
sub
leave
inc
call
cmp
mov
adc
movsb
mov
leavew
repz
fnsave
xchg
and
mov
popf
ficomps
jbe
sub
js
jne
xor
cmp
clc
hlt
cld
addr16
mov
push
cmpsb
cmovl
mov
adc
dec
sbb
fnstcw
xchg
pop
ljmp
push
add
out
jg
in
sub
popa
mov
addl
stos
inc
mov
outsl
gs
mov
loope
test
mov
xor
or
sti
xchg
dec
mov
or
repz
xor
and
jno
lret
pop
push
cmc
int3
iret
inc
jg
stc
jmp
lret
icebp
mov
adc
push
fs
and
test
in
cwtl
fldenv
mov
mov
movsb
jno
jmp
jge
add
mov
jg
mov
lds
jne
andl
lret
leave
rcrb
sahf
imul
jecxz
popa
out
cmpsb
mov
add
inc
lods
into
test
aam
xchg
and
inc
mov
pop
fucomi
sbb
pusha
sbb
xor
pusha
test
movsl
pop
lods
pop
jne
arpl
add
cmc
pop
ret
int
or
cmpsb
push
and
sub
inc
aad
mov
xchg
mov
std
inc
lds
bound
and
adc
call
cli
adc
push
popa
mov
mov
dec
or
iret
pop
or
sub
mov
jp
xchg
out
jne
xchg
mov
xor
out
jo
in
fcomi
or
mov
outsl
xor
test
jnp
inc
jo
out
test
movsl
outsl
inc
icebp
jmp
push
aaa
xor
and
xor
out
int
test
mov
mov
cmp
cmp
fbld
nop
pop
or
sbb
lds
xchg
movsl
aad
popa
adc
rolb
pop
popa
call
mov
inc
adc
in
mov
sub
rcrl
sbb
add
mov
pop
or
or
in
sub
int3
xlat
repz
scas
mov
mov
subl
pop
dec
xchg
dec
fsts
or
stc
outsl
pop
add
aaa
addr16
std
ja
daa
sub
dec
outsl
sbb
dec
sub
lock
shrl
xchg
jb
pop
sbb
stos
xor
add
icebp
fisubrl
inc
dec
enter
adc
aad
push
cld
stos
addr16
iret
ss
out
mov
mov
sahf
in
loop
xchg
cmp
out
imul
inc
ret
stc
mov
das
mov
pextrw
pop
sub
dec
ret
test
pop
xchg
into
scas
ret
cmp
inc
inc
dec
adc
idivl
aas
add
int
sbb
daa
pushf
jmp
push
xchg
adc
scas
adc
jmp
iret
mov
add
pop
imul
cmp
scas
xor
out
jl
cmp
cmpsb
ds
mov
pop
or
mov
test
icebp
jg
xor
stc
or
lods
dec
mov
je
push
int3
xchg
and
push
cli
les
push
adc
dec
inc
movsl
cmpsl
ret
or
arpl
push
dec
mov
xchg
or
cmp
fdivs
cmc
or
cltd
push
iret
mov
sbb
cmp
mov
mov
adc
imul
imul
jp
stos
sub
je
and
xchg
add
bound
rcll
mull
notb
outsl
and
movsb
pusha
sub
leave
mov
xchg
shlb
mov
inc
or
or
add
repnz
mov
pop
and
mov
adcl
add
mov
jmp
xor
and
mov
mov
xchg
int
push
inc
xor
cmc
mov
int3
jmp
imul
test
popf
pop
data16
cmp
xchg
jle
imul
adc
int3
mov
cli
ja
adc
popa
inc
ds
test
sub
xor
test
ljmp
subb
mov
in
pop
es
push
push
bound
test
out
push
rorl
call
cmpb
mov
inc
lods
push
loop
mov
sarb
leave
leave
mov
push
adcb
adc
mov
shr
cmc
arpl
loopne
je
inc
insb
pop
or
fcmove
mov
mov
decl
mov
mov
out
shrb
cmp
xor
xor
out
fcmovnb
call
insb
dec
mov
xchg
loope
push
aaa
lea
cmp
hlt
imul
mov
daa
mov
orb
nop
fs
insb
imul
pop
xchg
fnstenv
mov
jnp
cwtl
or
pushf
adc
imul
ja
dec
xlat
mov
popf
in
fnstcw
roll
iret
sub
outsl
lret
push
pop
mov
push
leave
xor
add
outsl
dec
inc
inc
push
push
test
lods
cmp
inc
cmpsl
lock
dec
sub
or
les
adc
sub
adc
repz
shl
lahf
test
xchg
push
fisttps
mov
inc
imul
xchg
cmp
mov
and
jnp
push
or
pop
fwait
ret
push
or
and
jmp
mov
ja
cmc
jge
das
sub
cmc
stos
retw
pop
call
js
loop
mov
dec
sub
jle
not
iret
add
xor
pushf
cld
jae
inc
fldl
fucomi
or
jo
push
jecxz
lea
in
out
xchg
inc
sub
scas
in
xchg
pop
add
ss
int3
inc
andb
dec
cmp
push
jecxz
jmp
push
pop
or
push
test
jnp
repz
lahf
adc
daa
adc
inc
lcall
lods
ja
push
adc
out
rcr
push
jo
outsb
jo
imul
addr16
add
adc
or
jae
je
or
es
repz
bound
imul
ficoml
movsb
clc
cmpsl
sub
int
inc
jg
mov
push
mov
mov
jp
dec
push
data16
sbb
fldenv
xor
cmc
and
fs
adc
out
pop
sub
sub
push
cmp
and
rorb
repnz
pop
xor
fcoml
int
rcrl
adc
pushf
xchg
and
mov
mov
xorb
and
adc
cmp
mov
ja
push
les
fisttps
sbb
test
push
inc
outsl
fld
loope
push
test
test
dec
xlat
xor
or
mov
xchg
push
ljmp
adc
cmp
cmp
or
lock
scas
cmp
cmpsb
inc
xchg
jno
jns
hlt
jmp
sbb
xchg
jp
int
sbb
xchg
outsl
mov
sub
ds
dec
leave
ljmp
lods
or
cmp
das
mov
xchg
mov
test
wrmsr
test
sbb
cmp
shrb
nop
mov
fcomps
ss
mov
jl
or
jb
xor
cvtps2pi
shll
je
dec
pop
adc
inc
fstpl
mov
cli
mov
or
xorl
out
pop
mov
pop
push
test
dec
leave
push
or
addb
pop
mov
jmp
xchg
inc
pop
sbbl
mov
dec
dec
adcl
and
cmp
dec
pop
or
in
loop
btsl
cmpsb
jmp
cmp
inc
xor
mov
inc
jg
jg
out
andnps
test
js
aad
and
ss
gs
insb
xlat
jecxz
push
mov
outsl
or
insb
repnz
fadds
hlt
lea
je
pop
aas
pusha
icebp
decl
loope
ljmp
pop
sbbl
push
enter
movsl
push
iret
push
push
hlt
pusha
sbb
mov
inc
push
fdivs
jne
in
jp
sub
push
sub
pop
mov
fmuls
bound
mov
lea
imul
xchg
mov
pop
fwait
add
popf
xlat
std
xor
pop
jge
cmp
stos
rclb
cmp
movsb
pop
inc
push
lcall
push
aas
xchg
mov
and
andb
out
push
jnp
icebp
xlat
orl
mov
add
add
cmp
int
mov
lods
insl
cltd
inc
nop
jno
xchg
cmp
mov
sub
mov
sarl
std
paddw
roll
in
test
inc
repnz
ret
adc
add
sub
fimull
inc
sub
jp
or
jnp
jnp
mov
push
sahf
in
das
xchg
sub
dec
dec
xchg
or
aas
shr
adc
rcrb
fistpll
inc
xchg
sahf
out
shlb
xbegin
dec
nop
cs
xorl
mov
fisttpl
lods
mov
jne
or
movsb
dec
cmp
call
int
lcall
aas
jmp
cmp
sar
mov
jae
call
sub
rcrb
sub
ds
inc
push
cmp
push
fisttps
xor
aam
jne
adc
mov
xor
sbbb
imul
fwait
sbb
loope
imul
sbb
or
shlb
xchg
movl
inc
inc
test
lret
push
jb
das
rcll
orl
mov
jg
adc
jp
add
cmp
aad
adc
mov
sub
daa
push
ss
dec
inc
sub
adc
loope
icebp
cwtl
and
mov
dec
inc
mov
ret
sbb
jp
and
push
mov
pop
out
pop
mov
out
mov
or
pop
in
mov
lock
in
jnp
movsl
js
je
fs
jae
adcl
ja
pop
mov
cli
lds
sub
and
xchg
pusha
movsb
loopne
aaa
jmp
aas
inc
xlat
es
jp
mov
cltd
repz
imul
dec
mov
mov
mov
add
cmp
out
push
js
movsb
xor
int3
jle
push
loop
push
out
adc
jmp
addr16
xor
mov
mov
stc
xchg
push
adc
es
out
inc
pop
mov
mov
pushf
mov
lcall
pop
or
adc
push
jg
ret
mov
push
in
lahf
inc
ljmp
ret
pop
mov
sahf
dec
int3
ficoml
mov
jo
and
add
pusha
popf
aam
cs
push
inc
jbe
or
leave
stos
mov
mov
mov
mov
and
pop
test
sub
insb
imulb
and
lret
outsb
mov
jb
fs
outsb
sub
stos
mov
repnz
mov
leave
loopne
loopne
std
lret
mov
sbb
inc
adc
fnstsw
cmp
rolb
mov
outsl
les
or
mov
jle
out
push
adcb
movsb
ja
mov
pop
cmp
imul
push
xchg
ds
adc
jmp
xchg
out
ret
inc
or
imul
jecxz
das
lds
jge
gs
adc
scas
out
andb
sbb
in
mov
lea
pop
shrl
or
and
mov
inc
xchg
dec
jl
shlb
jne
add
jae
cmp
rolb
dec
cmp
fnsetpm(287
push
jmp
sarb
enter
dec
push
jmp
in
aad
hlt
jmp
mov
jge
pushf
pop
sub
test
movb
push
mov
iret
lods
cmpl
rorb
xlat
das
fldt
xchg
vpunpckhwd
stc
lret
inc
std
ja
sti
cmp
stos
sub
sbb
mov
arpl
jmp
mov
rcll
icebp
mov
pop
iret
push
lods
xchg
pop
in
mov
push
jns
orb
fdivrl
cs
push
lds
leave
sub
fisubs
dec
add
jl
lock
push
jae
mov
push
lret
insb
push
jne
sbbb
inc
inc
cmc
lods
inc
xor
mov
mov
into
sarb
pop
jmp
out
mov
les
inc
adc
add
ds
xor
cmp
push
cmp
cmp
jae
fisttps
push
mov
dec
popf
xchg
mov
rclb
iret
mov
into
jb
cmc
xor
xor
push
add
imul
inc
mov
insl
sub
addr16
imul
pop
outsb
cmc
inc
in
sbb
add
ret
in
imul
test
sub
je
js
pusha
dec
lret
push
xor
pop
mov
rcll
mov
lret
rcll
jl
imul
testl
adc
or
xchg
pop
out
pop
xor
aad
adc
xchg
sbb
cs
lahf
and
loop
sti
stos
push
pop
shrb
ret
leave
xchg
cmc
repz
mov
mov
ja
adc
rcrb
or
pop
jo
loope
mov
inc
out
clc
sti
mov
in
pusha
push
cmpsl
dec
xor
bound
fmul
cld
cld
inc
jbe
out
jne
loope
call
test
and
push
ja
or
push
sti
cmp
xor
fiadds
and
cmc
aaa
outsb
pop
dec
popa
mov
and
incl
inc
pusha
mov
in
stos
fwait
call
cmpsb
loope
outsb
enter
push
ret
jl
dec
or
xor
dec
mov
xor
pop
adc
jno
shl
inc
push
dec
mov
mov
repnz
mov
or
mov
clc
jae
mov
aas
sti
and
jb
mov
push
mov
orb
fbld
mov
jp
push
sub
inc
push
xor
jbe
aam
std
jmp
popa
jb
inc
ss
push
andl
lods
push
jp
enter
out
stos
push
out
aad
ljmp
or
push
sbb
daa
sub
mov
sbb
add
das
mov
pushf
push
dec
enter
or
xorl
stc
push
lock
in
push
mov
sarl
stos
sbb
xchg
adc
dec
adc
test
sub
sbb
pop
sbb
xchg
fwait
mov
inc
push
dec
fisubrs
negl
pop
clc
std
lods
sub
stos
pop
and
xchg
jo
mov
push
sub
cmp
mov
sub
cmpsl
loopne
insl
dec
and
stos
mov
orb
inc
repnz
aad
mov
out
test
mov
or
dec
aam
fsubr
xchg
adc
in
jo
fcomps
and
push
hlt
mov
sub
mov
pop
pop
jecxz
mov
sbb
dec
out
rclb
jae
lods
inc
inc
and
cwtl
push
mov
sub
jbe
enter
xchg
xor
jmp
xlat
xor
mov
pop
loop
pop
push
jle
xchg
mov
repz
adc
add
shlb
xchg
mov
icebp
jecxz
jecxz
pop
cltd
adc
aas
sub
jae
loopne
push
pop
movsb
push
push
ss
jle
rorl
inc
and
out
daa
addb
repnz
adc
cmp
cmp
xchg
test
rcrb
insl
mov
sbb
push
fistpll
sbb
lea
leave
fwait
scas
cli
dec
mov
jle
adc
call
das
das
pop
bound
les
jg
aas
in
mov
sbb
lock
in
cmpb
fidivs
nop
inc
xchg
mov
jl
cltd
fcompl
sbb
xchg
fmuls
fistpll
inc
repz
ret
sbb
das
inc
or
enter
xor
bound
adc
push
ss
in
or
and
mov
mov
adc
xlat
mov
loop
mov
in
lea
xchg
out
inc
mov
sbb
adc
xchg
xor
lret
cli
and
push
mov
sub
data16
fcomps
cmpsb
dec
outsb
cmp
ds
loope
das
cli
cwtl
jmp
mov
xor
pop
stos
fistps
pop
mov
jp
shlb
pop
cmpsb
mov
scas
dec
std
sbb
inc
test
aaa
int
jp
stos
jecxz
movb
icebp
or
inc
dec
mov
jp
scas
out
std
aaa
pop
fwait
sbb
cmp
push
cmp
aam
dec
into
pop
ljmp
jmp
mov
dec
mov
xlat
fsubr
xchg
or
xor
jb
mov
pop
cmp
gs
aaa
outsb
sahf
xchg
lcall
dec
in
ret
sub
cld
out
jnp
sub
pushf
or
in
xorb
xchg
inc
lock
push
ds
pop
or
mov
mov
imul
jle
mov
cwtl
cmpsb
mull
mov
cld
inc
jmp
pop
gs
les
das
out
mov
mov
ljmp
repz
ds
test
mov
sbb
pusha
mov
stos
mov
dec
ret
cmp
movswl
sbbb
in
add
insl
jno
jb
cltd
les
sub
shlb
shll
mov
fldenv
fwait
mov
pop
sbb
dec
push
jo
xchg
sahf
ja
cmpsb
mov
lcall
xchg
pop
aam
xchg
pop
xor
cmp
lahf
xchg
xchg
xchg
adc
cmp
or
rcr
push
aam
push
adc
movsb
outsl
mov
add
movsb
push
std
repz
addl
rolb
xor
sarb
or
dec
sub
aas
pusha
je
jns
add
mov
dec
outsl
out
mov
popf
ja
aad
shlb
mov
data16
sbb
enter
int3
jbe
pop
icebp
cmp
loope
or
sbbb
dec
scas
push
xchg
lahf
sti
jnp
ret
add
xchg
sbb
dec
adc
xor
jle
fdivp
xchg
mov
dec
mov
adc
or
pop
adc
inc
repnz
shlb
repnz
adc
lret
lahf
pop
shlb
push
je
rcr
movsl
fmull
xor
xchg
fldcw
dec
pop
push
ss
or
xor
or
sbb
or
xchg
out
repnz
jnp
push
loope
inc
out
and
jmp
jnp
xchg
loope
mov
ja
sbb
adc
mov
and
dec
fsubs
or
sti
pusha
jmp
cmpsl
push
add
sbb
roll
dec
or
adc
add
lea
mov
inc
outsb
test
xchg
insl
xchg
push
sub
movsb
cmp
pop
std
cwtl
mov
push
and
shlb
lods
pop
dec
fildll
cmp
xchg
cs
mov
or
aad
mov
pop
sub
adc
push
rorl
cltd
insb
mov
add
lds
iret
fldt
push
fisubl
enter
cli
aas
jb
sbb
out
movsb
push
jns
lds
mov
xor
in
negl
add
lods
call
sub
sbb
dec
cmpsb
mov
or
mov
pop
ljmp
out
mov
cltd
scas
mov
ret
fnsave
cli
cmpsl
mov
mov
repz
scas
mov
cmp
xchg
mov
je
mov
insl
push
mov
daa
cmpsl
jmp
out
jnp
int
inc
cld
or
dec
push
adc
shll
in
pop
mov
jnp
cmc
mov
mov
pop
scas
pop
iret
cmp
cmp
xchg
fcomps
dec
insl
lds
daa
repz
mull
in
sbb
lds
mov
int3
sbb
push
roll
xor
test
test
pushf
dec
mov
cwtl
repz
aam
ret
pushf
xor
jg
ds
sbb
pop
iret
test
mov
call
clc
and
jne
push
in
call
call
xchg
add
mov
adc
iret
sbb
mov
div
pop
pop
mov
pop
xchg
inc
outsb
idivb
mov
inc
pop
repnz
mov
mov
sbb
dec
std
int
adc
outsl
loope
lret
mov
or
fisubl
sub
ss
jle
ds
mov
outsl
loope
in
leave
icebp
cmp
inc
andb
in
cmpsb
scas
sub
cli
xchg
rcrb
push
stc
mov
pushf
or
mov
sti
mov
out
ret
xor
sub
or
mov
bound
push
fdivrl
adcb
xchg
pop
cmp
xor
dec
pop
mov
pop
jg
inc
mov
sub
ror
jle
insb
pop
icebp
out
bound
dec
pop
xchg
shll
and
pop
cwtl
and
mov
or
addl
call
cs
fwait
push
xor
cmpsb
lock
in
nop
xchg
push
jp
call
pop
xchg
cwtl
add
push
xor
out
shll
xchg
repz
mov
jmp
cltd
adc
mull
js
inc
inc
clc
xchg
clc
fmull
pop
mov
ss
fcmovu
fiaddl
or
push
cmp
das
call
aad
jbe
ficomps
sti
jb
mov
push
aas
xor
in
xchg
mov
cmpsb
pop
jb
push
sahf
jle
push
jl
stos
adc
sub
or
xor
in
movsb
aad
mov
jo
xchg
push
and
push
cs
aas
or
mov
aaa
xor
dec
mov
push
or
test
pop
decb
cmp
push
inc
inc
inc
fstpl
dec
movsl
andb
les
aad
js
adc
xchg
sub
shll
sbb
jne
pop
push
shlb
fbld
inc
cmc
mov
mov
or
in
fsubrp
xor
cltd
cmpb
push
adc
mov
test
sbb
data16
sarl
cmpsb
or
jno
decl
and
jae
fwait
push
inc
push
loope
mov
inc
data16
outsl
insb
dec
scas
ficoms
imul
add
jnp
mov
jnp
ret
xchg
sbb
mov
jnp
repnz
lods
inc
pop
push
xchg
inc
jmp
cmp
lea
fcomp
test
rolb
pushf
sbb
or
mov
je
mov
clc
jl
or
lahf
and
xor
xchg
cwtl
pop
loopne
ss
pop
imul
jmp
lret
jb
adc
in
dec
clc
ss
pushf
repnz
push
push
add
mov
push
imul
push
popa
loop
pop
int3
inc
mov
shlb
mov
cmp
sub
xor
nop
jge
fsubl
jbe
sub
cmpsb
xchg
mov
or
cmpsl
in
jae
popa
dec
xor
rorl
pop
adc
dec
adc
rcll
stc
mov
sub
test
in
rorl
push
pop
fbld
int3
cmp
inc
cmp
aam
jae
hlt
mov
cmp
sbb
outsl
dec
xor
pop
js
add
xchg
loope
cmpsb
cli
jnp
movsb
dec
cmp
push
cwtl
adc
mov
inc
pusha
cmpsl
test
loope
loope
jne
jae
mov
sarb
cs
idivb
das
jp
fwait
mov
popa
scas
popa
pop
mov
mov
into
cmp
jnp
movsb
hlt
add
out
inc
ds
lds
xchg
mov
fbld
add
jmp
out
bound
and
mov
add
add
shrb
pushf
cmp
ja
sub
inc
mov
mov
dec
ja
xchg
loope
lcall
or
adc
jo
inc
and
out
and
sub
dec
dec
pop
loopne
inc
inc
stos
hlt
andb
mov
sbb
jne
in
xchg
test
rcll
add
ret
xchg
and
pop
das
pop
outsl
add
mov
mov
mov
mov
dec
pop
sub
imul
dec
or
push
dec
std
aam
xlat
bound
fdivp
leave
xor
add
out
xchg
sbb
jbe
in
mov
and
sahf
jnp
fldt
popl
mov
push
mov
pop
push
lea
inc
cli
movsl
fimuls
pop
aas
les
push
data16
cmp
scas
add
add
call
aad
gs
movsl
out
mov
jb
and
and
mov
sbb
loopne
jns
cmp
bound
xchg
mov
scas
faddp
test
jae
adc
shrb
adc
cli
pushf
nop
es
mov
or
sub
cmp
in
jnp
inc
ja
loope
inc
out
pusha
les
push
sbb
sbb
sbb
out
xchg
movsb
das
jle
int
jmp
jecxz
mov
mov
sub
mov
psubsw
nop
lret
inc
or
andl
lock
ret
loope
inc
pop
pop
pop
loopne
adc
or
dec
stos
leave
cmp
xor
in
mov
bound
pop
jle
andb
mov
inc
pop
mov
mov
int3
mov
mov
add
subl
out
popa
sarb
mov
sbb
mov
or
jl
mov
xor
cmpsl
into
jp
sahf
pop
out
cmp
or
test
ds
iret
cli
or
or
mov
mov
push
push
leave
add
cmpl
hlt
and
dec
iret
adc
or
cwtl
push
ficoml
or
mov
int
cmp
test
and
xor
das
ds
mov
popa
adc
cmpsl
les
push
cld
adc
or
sbb
or
pop
pop
dec
dec
fucomi
jns
imul
leave
aas
fidivrl
jmp
mov
arpl
mov
ss
bound
jae
sub
das
cltd
mov
sbb
loopne
bound
mov
ret
mov
shrl
subb
sub
rcr
jb
push
jb
jns
sti
bound
inc
xchg
popa
push
repz
sbb
ljmp
jb
adc
fwait
sub
jg
stos
or
xor
clc
pusha
or
in
pop
cmp
add
loopne
adcl
sbb
lahf
push
lcall
xor
push
jmp
push
in
jb
imul
ret
lea
imulb
push
mov
ljmp
gs
sub
jl
cmp
push
sub
test
or
loope
fildl
push
push
je
mov
addr16
sbb
jb
sahf
cs
je
mov
pop
mov
cld
or
inc
leave
sti
mov
cmpsb
pop
jmp
sbb
dec
mov
sarb
push
pop
xorb
push
mov
sub
xchg
movsb
xchg
adc
in
pop
xor
stos
jne
shl
test
es
pushl
in
jmp
fidivl
outsb
xchg
dec
dec
pop
sub
mov
int
sub
cltd
fstl
mov
push
add
sbb
add
test
inc
push
fiadds
fsubrp
xchg
mov
lret
mov
and
or
inc
lea
and
xchg
int3
stc
mov
addb
and
jnp
lcall
jle
rcll
sbb
aas
in
cmp
xor
shll
jbe
gs
mov
ret
mov
push
jecxz
push
mov
test
jo
adc
pop
push
std
xor
loope
pop
xchg
inc
aam
push
insb
xor
int
sub
push
cs
das
sbb
rclb
test
add
les
lods
dec
push
jle
push
mov
jno
rcpps
rcr
mov
jne
or
arpl
test
lock
test
aaa
or
mov
pop
data16
xchg
loope
xchg
mov
insb
cli
pop
dec
add
inc
sub
add
mov
clc
xlat
add
jl
pushl
aas
in
push
pop
inc
or
out
dec
dec
cmp
cmpsl
clc
cwtl
or
lahf
dec
icebp
mov
shlb
jmp
xchg
adc
insb
fisubrs
pop
shll
stc
es
in
ja
sub
cmp
lock
mov
test
push
sbb
sub
cld
pop
push
dec
push
push
or
stc
push
jns
out
pop
jo
jmp
jno
cmp
pop
cmpb
lret
mov
jecxz
jnp
scas
xor
hlt
mov
in
push
addr16
outsl
cmp
fld
fisttpll
mov
call
loope
add
jb
cmp
adc
mov
adc
ljmp
je
mov
ja
js
jle
iret
jle
jg
int3
fstl
xchg
shrb
js
add
int
or
call
dec
lret
mov
lahf
mov
mov
into
mov
mov
xchg
sarl
shll
xchg
bound
push
and
scas
sbb
dec
stos
inc
arpl
xor
loop
and
jnp
push
inc
dec
pop
aam
loope,pt
and
mov
mov
sbb
or
stos
sbb
lock
int
ss
pop
mov
call
mov
negl
loope
xor
pop
cmpsb
push
out
push
je
adc
add
outsl
mov
cmp
stos
rorb
xor
popf
in
jae
lret
loopne
pop
gs
mov
adc
fadds
xchg
xor
sarl
add
das
movsb
and
popf
push
adc
and
dec
sub
inc
scas
fistpll
cmp
mov
test
js
and
fnsave
sub
jmp
popf
mov
in
subb
ret
sbb
pop
shll
jmp
push
in
cmpsb
sub
fisttpll
lcall
pop
pusha
ret
icebp
add
orl
out
lods
add
mov
mov
jo
jecxz
mull
sbb
insl
mov
fidivs
repz
mov
xlat
add
inc
enterw
add
dec
fldcw
sahf
imul
push
xchg
int
imul
inc
insb
call
mov
stc
dec
addl
test
loop
mov
pop
jp
xchg
imul
loop
out
sub
dec
push
sub
adc
push
inc
loopne
aad
popf
xor
xor
fcomps
mov
sub
sbb
fsubl
xchg
mov
cmp
js
iret
push
sbb
les
aad
rorb
jbe
inc
push
sub
inc
mov
enter
mov
add
push
cwtl
adc
mov
xor
cmpxchg
adc
inc
xchg
dec
add
out
or
sbb
int3
ret
push
call
sbb
lret
pop
js
insl
jmp
push
les
add
xchg
out
insb
call
fbstp
out
pop
push
cmpsb
xchg
mov
and
mov
xor
fadds
mov
scas
cmpsl
adc
ror
dec
xchg
fnsave
lock
push
xchg
cld
lahf
cmp
notl
cmp
adc
cld
push
ds
inc
loope
dec
test
dec
mov
subl
dec
dec
sub
repnz
lods
push
lds
push
dec
sbb
inc
fs
pop
sbb
push
xor
or
inc
pop
sbb
or
lret
mov
int
int
stos
outsb
repz
cld
and
loope
cmp
push
lret
popa
sbb
cmp
sbb
mov
push
loopne
and
in
jbe
nop
pop
mov
mov
fildl
jo,pn
fabs
xor
movsl
and
lods
cmp
mov
lret
cmp
enter
test
and
shrl
jno
addr16
mov
inc
add
cltd
pop
movsl
jle
and
imul
fiaddl
adc
stos
mov
xor
into
jle
iret
dec
test
and
cld
jg
dec
inc
mov
sub
dec
sbb
jbe
cs
jbe
insl
push
xor
jg
fcoms
loopne
stc
lcall
stos
or
dec
repnz
rcrb
out
test
add
insb
adc
mov
cli
dec
xor
pusha
in
mov
mov
rclb
and
loope
or
movsb
mov
and
pop
dec
and
mov
nop
jp
das
pop
jecxz
mov
dec
push
fimull
gs
or
pop
scas
jae
jge
mov
fists
lods
stos
mov
cld
in
outsb
add
lahf
jmp
out
ja
aas
repz
mov
outsl
push
jl
pop
nop
and
outsl
or
mov
test
sub
sub
addr16
mov
outsb
stos
sbb
pop
inc
ficoml
in
pop
dec
scas
pop
andl
mov
xor
pop
xchg
and
xchg
lfs
cmpsb
and
jne
shrl
xchg
mov
je
mov
movsb
cs
jae
fdivs
xchg
cmp
ficomps
push
push
scas
outsb
push
cmp
pop
xchg
jle
pop
xlat
push
in
lahf
pop
push
mov
inc
mov
outsb
jbe
mov
sub
dec
inc
stos
jecxz
or
pop
pop
arpl
cltd
xor
mov
hlt
xchg
insl
push
jle
fsubl
inc
add
or
ss
mov
movsl
and
or
cmp
shl
add
pop
xor
test
xor
or
mov
xor
xorl
cltd
fidivrs
outsb
sub
mov
push
mov
out
fisubl
sarb
shrb
ficomps
sti
or
jnp
cmp
out
imul
notl
push
push
jb
add
mov
or
rcll
sbb
lret
ficompl
add
and
aam
dec
test
lock
cld
pop
cwtl
sub
cmp
rcl
and
mov
or
xchg
push
push
stos
inc
lret
js
pushf
mov
repnz
lret
dec
js
cmp
xlat
in
cmp
sub
movsb
jmp
mov
jne
adc
jae
and
test
jns
add
vmovmskps
sbb
decl
pushw
jp
loop
shlb
loop
cmpsb
or
adc
push
push
xchg
or
push
xor
popa
xchg
pop
test
dec
fs
inc
dec
mov
movsb
or
scas
and
xchg
stos
push
cwtl
mov
pusha
ja
outsl
push
mov
int3
mov
in
sub
pop
rcrb
cmp
cmpsl
lahf
loopne
inc
and
add
repz
jbe
mulb
cli
test
mov
or
push
sbb
and
inc
out
pop
mov
cmp
fisubrl
in
ja
mov
ret
sbb
xchg
pop
lea
xchg
pop
out
add
aas
mov
dec
pop
lcall
std
test
ljmp
pusha
fs
xor
cmp
f2xm1
arpl
cwtl
cmpsl
push
lods
add
jae
jno
sarl
push
sbb
mov
inc
fsub
mov
xor
push
jmp
rcrb
and
sub
mov
popa
cld
out
mov
js
xchg
inc
aaa
sti
stos
sti
aas
lea
push
rorb
dec
jge
test
stos
lock
inc
lods
pop
xchg
push
inc
ficomps
pop
inc
gs
inc
jg
cmc
mov
adc
or
fimull
mov
inc
cltd
xor
test
int3
andb
fstpl
mov
out
movsl
jo
fcmove
add
pop
cmpsl
into
movsb
imul
adc
and
xor
push
test
push
push
dec
in
fidivrl
call
pop
mov
popf
jg
inc
push
cmp
movsb
jle
jle
scas
add
pusha
xchg
stos
xchg
mov
adc
jecxz
jle
daa
push
mov
addr16
je
ficomps
mov
je
mov
jp
outsl
or
push
mov
pop
jne
test
pop
lock
ss
inc
push
sub
sub
shr
rcr
cmp
mov
cmp
xchg
mov
outsb
fwait
jo
dec
xchg
shlb
call
clc
cmpb
jmp
popa
mov
push
into
cmpsb
cmpsb
inc
fdivp
fcomps
mov
movsl
and
mov
lahf
test
aad
xchg
cwtl
loop
sub
rolb
mov
mov
add
dec
pop
cltd
xchg
mov
mov
mov
sub
nop
push
mov
out
aad
adc
aaa
push
push
xchg
movb
dec
dec
fwait
repz
sbb
aam
cld
arpl
mov
arpl
out
leave
loopne
xor
xlat
loope
outsb
pusha
js
xchg
out
icebp
cmpsl
xor
mov
je
inc
xchg
loopne
sub
mov
add
lcall
bound
test
lods
scas
outsb
inc
mov
push
cmp
movsl
popa
dec
cmp
stc
mov
je
sub
adc
adc
out
xor
dec
jns
adc
icebp
into
int
and
stos
pushf
push
xchg
push
push
jle
jbe
pushf
fimuls
arpl
mov
mov
addb
rcr
lea
mov
lods
loope
sbb
or
sbb
push
xchg
lock
outsl
int
jecxz
sub
aas
imul
shlb
push
inc
outsl
test
test
filds
cmp
mov
xchg
adc
int
notb
fnstenv
mov
ss
f2xm1
or
jmp
pop
loopne
xchg
jp
aas
divl
adc
icebp
ja
jle
aaa
loope
dec
inc
push
dec
sbb
pop
push
in
add
xlat
fstpl
out
mov
add
stos
jg
stos
repz
sub
cmp
push
inc
scas
inc
imul
jns
in
inc
mov
pop
mov
or
mov
mov
add
rcrl
mov
xor
lahf
lods
push
or
cli
add
daa
push
xor
dec
loope
cmp
jo
jae
pop
dec
pusha
cmp
and
fsubrp
sub
xchg
xchg
push
jp
sti
sbb
xchg
mov
incb
repnz
test
mov
or
xchg
jns
mov
push
ja
or
sti
fmull
xorb
mov
daa
sub
subb
push
cmp
cmp
stos
pusha
test
jecxz
in
xchg
pushf
and
sub
scas
and
dec
and
pop
and
add
cs
push
push
lcall
test
clc
in
insl
movsl
call
in
jle
mov
pop
sbb
rsqrtps
hlt
inc
mov
or
loopne
mov
pop
lret
sbb
jo
in
or
xchg
jne
popa
push
arpl
test
pop
sbb
cs
mov
call
rclb
pop
jg
ret
and
xorb
add
shll
movhps
mov
dec
movsl
rclb
push
jecxz
in
inc
jns
dec
sbb
out
in
push
inc
xor
inc
in
or
pop
popa
ljmp
test
jle
add
mov
xor
cmc
es
pushf
push
dec
jae
mov
mov
mov
mov
movsb
pop
fidivrs
dec
lods
push
dec
fadd
xor
ret
jp
mov
popa
dec
add
sbb
outsl
xor
pop
cmc
lods
pop
std
cld
mov
shll
popf
insb
or
pop
cmpsb
mov
enter
push
in
out
push
icebp
add
sbb
out
mov
pop
mov
mov
pop
sub
je
mov
scas
insb
sub
mov
aad
mov
nop
jno
fdivl
xchg
mov
movsl
pop
ss
or
faddl
jne
pop
xchg
mov
lods
or
scas
clc
sbb
xor
push
lcall
imul
adc
adc
mov
loopne
jne
xor
icebp
adc
cmp
test
aaa
mov
inc
add
dec
xor
jo
pop
xchg
push
xchg
mov
xchg
mov
inc
jecxz
into
jne
xchg
daa
mov
mov
and
add
or
push
and
stc
lods
mov
or
xor
pop
pop
xorb
lcall
xorl
sbb
push
pop
imul
push
aam
jl
mov
test
push
aas
mov
jmp
add
mov
scas
lcall
sbb
xor
pop
mov
movsl
push
lods
pop
pop
stos
xchg
loope
jae
dec
mov
mov
mov
sub
pop
pop
push
test
mov
aaa
popf
adc
mov
xchg
clc
scas
stos
call
xchg
fcmovbe
shl
decb
push
push
rorb
xchg
jnp
outsl
pop
sti
jno
add
hlt
jno,pt
arpl
xchg
sbb
shrb
imul
xor
dec
fs
dec
mov
mov
fidivl
xor
and
out
pop
cmpsb
test
inc
dec
lods
add
pop
mov
or
popa
cmc
leave
sbb
popf
stc
inc
xchg
shrb
cmpsl
jno
cld
xor
jb
xchg
pop
lods
call
pop
mov
les
xchg
and
call
iret
dec
rcrb
ja
push
pop
xor
jo
push
cmpsl
ss
dec
rorl
mov
pusha
adc
clc
mov
jne
xchg
cld
xchg
in
movsl
gs
aaa
je
cmp
outsl
sbb
sti
pushf
int
dec
pop
lcall
cmp
int3
dec
jns
dec
cld
in
pop
adc
push
jecxz
call
mov
clc
mov
or
in
mov
aad
lcall
and
mov
rclb
imul
push
gs
jb
jp
and
decl
xchg
jnp
jmp
cmpsb
data16
push
sbb
lcall
mov
ret
pop
add
dec
shll
push
mov
xor
jge
mov
pop
fistps
xor
loope
cld
pushf
leave
add
jb
shl
jne
xlat
push
mov
daa
scas
rcrl
call
stos
mov
xor
mov
mov
pop
test
or
xchg
xor
cwtl
mov
push
jae
std
ss
fldcw
xor
sub
dec
subl
or
cmp
lock
inc
mov
xchg
pop
shrl
mov
mov
jo
dec
cwtl
or
addr16
adc
and
mov
pop
mov
lahf
int3
inc
cmpsb
cmp
mov
repz
or
aad
and
dec
push
push
mov
cmp
inc
mov
push
incl
scas
xor
fistl
fistpll
ds
fstl
mov
mov
jnp
pop
sar
out
cli
xchg
mov
dec
mov
dec
push
cwtl
adc
push
mov
es
inc
test
push
insl
mov
jo
outsl
cmp
pop
mov
cmp
push
or
xlat
cli
sub
jmp
mov
dec
adc
bound
addl
lahf
in
lock
jge
cs
push
daa
xchg
ret
add
push
in
lea
pushf
inc
pop
mov
and
push
ret
sub
cltd
inc
icebp
je
ret
sbb
orl
mov
or
mov
pop
daa
int3
sbb
cltd
add
or
push
jg
scas
enter
outsl
fsts
xchg
cld
and
push
ret
jae
outsl
pop
push
push
mov
cld
mov
repnz
addl
cld
cwtl
push
out
adc
lock
xchg
dec
mov
cmp
push
pop
js
arpl
pusha
fcoms
test
push
dec
fs
jns
sub
in
leave
xor
in
adc
stos
push
jmp
push
mov
imul
mov
sbb
cmp
icebp
rcll
sub
sbbb
adcb
xchg
stos
test
fs
and
pop
sahf
mov
test
pushw
sbb
sub
and
pop
dec
testb
and
mov
dec
std
lss
jg
push
loope
gs
mov
mov
lds
sub
mov
fwait
jl
movsb
fnstcw
cmp
push
imul
in
cwtl
cmp
icebp
dec
hlt
mov
pop
loopne
test
sub
addr16
insb
lahf
popf
leave
inc
roll
lock
leave
fmuls
cmp
ret
in
int
faddp
inc
add
arpl
push
into
lods
sub
mov
mov
cltd
mov
std
shlb
enter
or
jno
hlt
cwtl
mov
dec
pop
sub
in
mov
mov
xchg
xor
leave
xor
test
aas
shr
clc
mov
addr16
or
cvttps2pi
std
aas
out
scas
aaa
lahf
sbbb
les
rorl
js
scas
xchg
dec
iret
and
push
mov
mov
inc
das
bnd
or
sub
dec
imul
cmpsb
daa
repnz
mov
push
adc
out
mov
and
mov
insb
dec
ret
jmp
nop
stos
repnz
dec
inc
push
int
int
pop
mov
fnsave
jp
or
lcall
dec
in
mov
mov
nop
mov
int3
push
test
ds
mov
add
cs
aas
mov
mov
cmpsb
movsb
test
stos
gs
sti
std
sarb
fwait
xchg
and
jne
or
shl
in
shll
push
insb
movsl
mul
xchg
sbb
mov
sbb
adc
icebp
add
fcompl
xchg
notb
pop
lcall
and
jbe
outsl
in
jmp
stos
or
fisttpll
xchg
loop
cmp
xchg
xchg
xor
outsb
inc
fmuls
jg
cmpsb
sbb
adc
xchg
jbe
adc
insb
push
dec
mov
outsl
out
ds
xchg
inc
out
sub
shll
lret
mov
push
fcom
inc
test
je
push
jo
pop
movsb
push
fisubrs
jp
sti
or
add
int
lret
iret
fcoms
js
add
pushf
mov
or
cmp
xchg
dec
mov
cld
and
inc
jle
sahf
lock
cmp
pushf
fldl
testb
fwait
iret
mov
pop
or
add
add
lods
cld
arpl
add
ljmp
ja
das
bound
mov
lods
shll
repz
ss
lea
xorb
mov
out
fwait
lods
in
push
orb
sarb
push
xchg
jbe
movsb
icebp
mov
sub
mov
pop
adcl
add
sub
inc
mov
add
push
or
imul
push
xchg
add
test
je
jbe
jle
adc
sbb
cmp
test
aam
ret
pop
inc
je
mov
stos
std
and
jp
mov
in
mov
lcall
arpl
jge
hlt
rcll
ljmp
lcall
jle
call
fcoms
add
leave
movsb
dec
out
pop
in
xorl
sbb
ret
iret
roll
xchg
jb
and
sub
jp
std
sub
call
ret
shl
push
dec
mov
iret
ja
pushf
jecxz
push
adcb
mov
scas
pop
int
addb
lock
lret
je
xor
pop
mov
aaa
dec
dec
test
aaa
cmpb
inc
mov
mov
out
gs
cmp
inc
std
push
shr
enter
ret
sub
jecxz
leave
push
fwait
cmp
sub
lea
shlb
pop
sub
inc
adc
cwtl
loopne
inc
mov
cltd
xchg
pop
add
bound
mov
cmp
push
les
repz
nop
jne
mov
in
in
and
xchg
adc
push
cvtpi2ps
in
ja
adcb
jns
iret
jecxz
mov
mov
pop
xchg
aad
xchg
or
scas
dec
fildll
jp
and
inc
xlat
pop
pop
pop
push
inc
stc
inc
or
jmp
adc
movsl
idivl
pusha
add
divl
pop
pop
mov
push
data16
xor
cld
clc
das
int
cmp
mov
jae
mov
mov
dec
test
clc
scas
pop
rcll
pop
mov
rcl
sub
pop
push
or
out
adc
cmp
cmp
jns
and
loopne
pop
je
iret
insl
add
mov
xchg
icebp
mov
inc
and
cltd
add
adc
dec
dec
mov
cmpsl
jle
gs
lock
mov
cmp
mov
repnz
imul
movsb
cmp
mov
repnz
mov
hlt
xlat
gs
cmp
inc
pop
or
addl
shrl
lods
push
jns
xchg
sbbb
xchg
lahf
and
fdivrs
ret
fwait
stos
xor
lock
movsb
cltd
or
shll
jo
data16
or
imul
jne
mov
pop
call
xor
in
fucomp
xchg
dec
lret
mov
adc
cmp
mov
sub
out
xor
inc
shlb
jecxz
sbb
jge
add
popf
fwait
xor
ret
decl
sub
add
cmp
popf
push
dec
lods
popf
pop
aas
sti
mov
cwtl
and
lret
xor
data16
ljmp
lret
cmpsl
mov
mov
sub
jecxz
out
sub
jl
mov
dec
push
push
sub
fnstsw
jno
cmpsb
push
mov
roll
fcompl
cmp
fwait
popf
xor
testb
sbb
jae
fistpl
cmpsb
rcr
loopne
cli
lea
or
sbb
inc
sbb
cmpsb
sub
mov
lret
lea
imul
sub
repz
jp
test
lcall
addr16
mov
cmp
adc
jno
ret
mov
pop
mov
je
andb
out
dec
lods
call
movsb
sbb
mov
fmull
insb
jmp
iret
mov
ret
sahf
dec
sahf
cmc
in
mov
push
fidivrl
in
push
outsl
jmp
push
daa
js
mov
loope
ds
jp
cmc
mov
iret
sub
xor
pop
cmp
pop
rcll
outsb
cld
jb
xchg
int
and
adc
in
jns
fisttps
sti
xchg
xor
ss
je
xchg
test
push
xor
sub
cltd
enter
addr16
mov
lock
dec
add
adc
in
in
ret
xor
mov
aas
std
mov
jbe
add
dec
dec
cltd
dec
inc
ds
jge
cld
mov
fnclex
mov
xchg
pop
out
sub
or
pop
sub
sub
fldenv
sbb
push
dec
leave
aad
adc
lret
sbb
cmp
pop
sbb
aam
cmp
and
pop
sub
or
add
dec
daa
rorl
sbb
xchg
sti
and
cwtl
cmpsb
mov
out
add
mov
iret
cmp
pop
scas
sbb
mov
cmp
inc
jae
outsl
pop
or
dec
jno
gs
push
mov
jmp
jecxz
fstpt
nop
xor
add
icebp
mov
icebp
mov
push
pop
int
push
les
mov
in
subl
mov
rcrl
dec
push
lcall
dec
xchg
inc
lds
fsubrl
push
xchg
enter
les
mov
pop
mov
cltd
sub
fdivl
ja
pop
arpl
add
mov
pop
mov
adc
mov
fstp
sub
in
mov
shr
xchg
push
pop
sub
pop
arpl
mov
pop
int
cmp
or
jbe
iret
sti
dec
sbb
and
xchg
jb
mov
pop
jmp
insb
push
sub
sbb
iret
sbb
xlat
pop
test
pushf
ffreep
jecxz
push
pop
xor
fsubs
arpl
jbe
xor
jae
call
dec
and
mov
mov
leave
jb
cmp
xor
lock
xchg
and
inc
push
push
inc
jo
outsl
push
loope
sbb
aaa
xor
stos
and
xor
xor
loope
jge
inc
mov
js
test
mov
add
lcall
lods
mov
sbb
in
gs
sub
mov
rcll
cmp
loop
ljmp
xchg
jbe
ja
pop
daa
into
sub
mov
cli
mov
xchg
or
mov
jl
push
cmp
xchg
jb
add
jg
add
push
mov
push
mov
xchg
mov
sarl
mov
jae
sahf
jns
aas
loop
jle
fs
jbe
pop
jnp
dec
xchg
aaa
imull
in
rol
loop
sbb
add
dec
sbb
lods
sarl
xchg
clc
int3
ss
popa
push
xor
cmc
insl
call
mov
pop
jno
cli
int
pop
add
cmp
stc
out
or
adc
inc
mov
push
jl
lods
pop
add
lcall
cltd
mov
shrl
pop
fwait
sbb
sub
lret
push
cmpsb
out
mov
mov
movsl
sbb
shll
inc
sbb
js
cmp
pop
movsl
sbb
dec
hlt
repnz
pusha
jo
aas
add
inc
ret
enter
hlt
fwait
sahf
inc
mov
jl
xchg
pop
aas
leave
mov
cmp
fcoml
insl
sub
fistps
xlat
imul
rol
cld
mov
and
outsl
aam
xchg
fistpl
clc
and
mov
inc
aad
cld
dec
xor
push
loopne
aaa
xchg
sub
or
mov
inc
and
imul
lret
pop
push
or
xor
pop
imul
and
not
jbe
es
data16
add
mov
or
lods
rcll
rolb
test
push
rcrl
inc
mov
sbb
pop
xchg
shr
std
jbe
push
loop
mov
adc
movsl
or
xchg
jo
ljmp
and
subb
movsl
fistps
push
icebp
add
sub
and
sbb
add
data16
ljmp
adc
gs
pusha
lahf
fcomip
mov
and
pop
add
addl
rolb
sub
jge
fisubl
mov
and
pop
xchg
add
icebp
adc
imul
imul
add
push
cld
insl
mov
push
sti
pop
xor
sti
jo
popa
aam
xor
mov
jmp
fcomp
jnp
adc
stc
mov
iret
inc
out
pop
sub
mov
aas
into
and
jecxz
or
lea
mov
sub
cmp
and
jg
and
mov
std
shrl
test
dec
incb
pop
push
xlat
sahf
jne
pusha
insb
icebp
sub
fwait
pop
add
add
hlt
out
or
xlat
js
xor
lods
jge
enter
cwtl
in
sbb
jl
cwtl
jp
sbb
or
dec
xor
movsl
mov
inc
insl
xchg
and
mov
cmp
scas
mov
jne
cmc
and
lahf
cmp
cli
mov
inc
mov
cmp
cld
lods
dec
mov
test
scas
pop
cwtl
das
push
sti
rclb
imul
jne
das
mov
and
sti
dec
dec
jecxz
decl
fcmovu
and
int3
fistpl
popf
mov
add
add
out
jmp
movsb
jmp
outsl
inc
inc
adc
popa
and
mov
iret
pusha
hlt
sub
cmpsl
sar
mov
or
imul
dec
jae
cmp
mov
mov
mov
inc
cmp
enter
call
jle
fwait
sbb
xchg
add
jns
out
into
ja
inc
mov
mov
mov
push
sub
jg,pn
ret
mov
andps
add
mov
inc
loopne
mov
xor
xchg
add
aas
jbe
dec
add
xorl
lret
ret
jmp
imul
cmp
movsb
cmc
sbb
mov
xor
inc
fbld
and
mov
jb
fdivrl
stc
or
enter
xchg
ds
mov
xchg
and
mov
cmpsl
mov
iret
add
je
push
inc
les
fwait
xor
push
les
inc
push
cmpb
mov
add
fs
int3
mov
push
pop
cmc
xor
pop
sbb
mov
mov
sbb
mov
or
lds
xchg
pushf
push
push
ljmp
insl
inc
inc
in
pop
xor
add
sub
mov
repnz
mov
enter
rorb
cmp
jnp
jnp
mov
push
sarb
sbb
mov
xor
clc
push
xchg
stc
and
dec
or
int
jmp
pop
push
int
or
mov
stos
mov
fcoms
mov
mov
xor
dec
jo
xchg
lcall
sarl
pop
gs
adc
inc
cmp
pop
mov
jp
repz
mov
cmc
enter
dec
mov
lock
add
scas
ds
adc
mov
jns
mov
lret
cli
mov
dec
jle
sbb
mov
scas
cmp
lret
pop
flds
mul
nop
scas
lcall
fwait
lock
das
data16
inc
inc
jno
lahf
mull
jb
or
xor
jbe
outsb
mov
ja
aad
sar
add
fcompl
leave
enter
jecxz
loope
dec
lock
cmp
mov
mov
repnz
cmpsl
push
pop
dec
push
hlt
push
bound
sub
and
dec
rol
jb
inc
xor
lahf
iret
dec
push
iret
push
rcll
lret
lret
inc
pop
adc
in
insb
adc
sti
outsb
cmp
out
mov
dec
cmp
or
sahf
loop
frstor
pop
cmpsb
gs
movsl
dec
dec
pop
push
or
mov
js
movsb
mov
pushf
test
xchg
pop
sti
rorb
jb
lods
aam
in
je
insb
jne
sub
jle
incb
daa
scas
push
mov
or
push
mov
inc
jo
pop
jle
decl
sub
std
cltd
push
sub
aam
xchg
repnz
cmp
mov
dec
outsb
stc
and
add
into
inc
jecxz
pop
std
ja
mov
test
mov
jge
fistl
push
mov
out
je
shll
dec
xor
lahf
jp
push
sarb
push
cmpsl
pop
or
test
fisttpl
push
jecxz
sbb
fchs
ljmp
add
adc
push
xchg
mov
sbb
jb
lods
adc
imul
and
or
mov
push
rcrl
cs
and
or
mov
cmp
inc
mov
gs
inc
mov
ss
fmulp
jo
sbb
xchg
inc
fsubs
sbb
clc
sub
mov
xor
cs
push
add
add
add
mov
cltd
push
jo
dec
mov
loopne
push
aam
sub
ret
cmp
movsb
cmc
outsb
loop
mov
aad
fsubs
xor
dec
and
add
mov
dec
call
xlat
fstps
pop
mov
pop
inc
mov
sbb
or
mov
jnp
dec
js
clc
push
in
in
jns
xor
cwtl
cltd
jb
aas
lcall
hlt
test
jecxz
push
pop
call
or
dec
xor
fidivrl
leave
decb
movsb
cmp
cmp
xor
std
pop
mov
leave
xchg
mov
negl
inc
out
mov
in
push
ljmp
mov
jo
xchg
subb
shll
mov
rclb
mov
sbb
aad
push
nop
push
dec
sub
fisttpll
sbb
mov
mov
sarb
jg
sub
cmp
push
cmp
cmp
stc
shlb
enter
sub
inc
es
out
es
ja
jle
lods
test
pop
mov
std
cltd
cmp
mov
es
push
fcompl
mov
test
or
push
inc
push
mov
jl
in
mov
jbe
in
sar
test
in
dec
call
sbb
leave
mov
cmp
es
xchg
and
pushf
repz
lods
fldcw
dec
push
aam
insl
int
fsub
cmp
clc
arpl
and
sahf
jns
cmp
rorb
and
in
insl
int3
pop
dec
pop
mov
in
daa
testl
test
insl
test
mov
inc
mov
lahf
repz
scas
mull
cs
int3
sbb
out
scas
shl
arpl
mov
cmpsb
mov
xchg
sbb
hlt
push
xchg
test
jo
and
fdivrl
push
lock
test
push
sbb
push
xchg
popf
lret
mov
fisttps
jge
push
mov
lds
je
mov
sub
inc
xchg
xchg
adcl
lret
jmp
mov
dec
leave
lock
fwait
and
add
rcrb
cli
cltd
dec
leave
bound
mov
test
sub
mov
cltd
jbe
cmp
ds
pop
or
push
and
sbb
movsb
ret
jns
scas
xchg
clc
ret
and
ds
pop
inc
pop
lds
ss
mov
js
dec
mov
repnz
add
lds
fs
subl
cwtl
fld
fmuls
cmc
mov
mov
mov
stc
lcall
notb
outsl
inc
lret
pushf
aas
scas
lret
das
cmp
mov
lds
int
mov
movsb
insb
lods
clc
cltd
stos
ds
ds
mov
pop
xor
inc
mov
fmulp
stc
ret
imul
repnz
xchg
adc
out
mov
pcmpgtw
js
xlat
popa
lret
sub
sbb
int3
js
gs
jp
imul
pusha
out
in
push
cltd
out
movsl
dec
sahf
mov
xor
imul
cmp
rorl
addr16
dec
inc
cmpb
push
insl
or
add
dec
bt
add
jmp
or
daa
pop
mov
inc
xchg
dec
and
rorb
pop
push
mov
inc
rcl
jmp
scas
out
cmpb
call
push
mov
jle
and
fstps
add
inc
and
jecxz
jecxz
mov
xchg
pop
add
rorb
ja
add
sub
mov
fldenv
mov
mov
dec
cmp
sti
and
sub
sbb
pop
push
mov
mov
insb
mov
push
pop
mov
mov
fstpl
xorb
repnz
in
out
or
stc
jno
or
push
mov
ret
enter
scas
fs
jl
jbe
or
lods
test
ja
xor
mov
mov
subb
fidivrs
test
or
push
push
mov
inc
jmp
xor
pmaxsw
in
sahf
add
xor
sub
lret
testl
popf
adc
je
shl
les
adc
outsl
sbb
dec
pusha
push
fwait
and
mov
nop
das
push
pop
in
xchg
push
ret
mov
lock
or
push
filds
mov
mov
xchg
arpl
pop
ja
xor
mov
mov
pop
int
sbb
mov
xor
dec
pop
sub
adc
cmc
sub
cwtl
jl
and
dec
sub
cs
sbb
icebp
bound
aad
inc
mov
cmp
cmp
inc
popl
rclb
test
push
test
push
cld
xor
icebp
shrb
cmpsl
dec
cmpsl
icebp
push
mov
aad
shl
cmp
push
sysret
and
mov
xchg
xor
nop
xchg
adc
es
sub
cs
adc
insb
ret
popa
pop
or
or
rolb
mov
xor
jno
pop
scas
push
pusha
inc
adc
test
mov
arpl
xchg
test
lea
pushf
nop
jge
sbb
inc
outsb
in
mov
movups
sbbl
in
std
push
dec
jg
cwtl
repnz
mov
push
mov
nop
in
jle
push
pop
sbb
xchg
sbb
pop
cwtl
inc
es
sarl
mov
in
lds
add
push
pop
sti
lock
lahf
movsl
cwtl
lahf
push
sbbl
sbb
xchg
lcall
sahf
int
dec
std
mov
xlat
xchg
dec
nop
sub
push
popf
inc
sub
sbbb
scas
icebp
gs
jge
movb
movb
jb
mull
in
xchg
mov
mov
sbb
inc
sti
bound
fisubrl
pusha
gs
outsb
dec
add
or
fucomp
hlt
sub
fsubr
mov
cmc
jmp
mov
leave
jge
xchg
pop
in
adc
xor
add
enter
rcrl
jle
mov
fdiv
dec
cli
cli
scas
or
movsb
cli
rorb
xor
out
movsb
hlt
leave
jge
pop
cld
int
sahf
pushf
mov
fisttps
ljmp
ficompl
rorb
inc
adc
test
push
sarl
mov
jae
imul
out
sub
mov
or
movsb
test
repnz
jno
lods
xchg
cmc
fistl
mov
lock
filds
daa
icebp
jecxz
xor
ror
je
cmp
sub
dec
dec
ss
orl
js
jns
jl
xor
bnd
jle
je
pusha
cmp
fdivrl
cmp
sbb
arpl
lahf
pop
xchg
jne
in
js
jl
sub
jno
cmp
sbb
jb
out
mov
sub
xor
aas
jl
push
mov
sbbb
xor
sbb
sbbb
dec
xor
test
insb
mov
fdivs
adc
pop
push
scas
aad
enter
mov
in
ss
sbb
sbb
mov
insb
loopne
cmp
pop
ds
sub
sub
std
je
pop
add
imul
mov
test
mov
mov
add
jo
xchg
rcrb
mov
and
pushf
popa
add
jecxz
ss
jecxz
mov
rcll
cltd
test
iret
cmpsb
jmp
mov
inc
dec
inc
xchg
jge
leave
and
icebp
aad
stos
jle
push
insl
dec
mov
addr16
or
lds
js
and
cmp
push
cwtl
add
and
mov
and
xchg
imulb
pushf
cli
cli
cmp
stos
pop
addl
or
pop
dec
cltd
mov
mov
mov
push
jge
xor
xchg
ficompl
sbb
sub
push
bound
pushf
ret
push
inc
xchg
fmulp
ss
cmp
ljmp
and
insl
pop
cs
mov
xchg
pop
push
or
xchg
lea
call
adc
scas
test
pop
test
mov
test
out
sbb
in
call
push
fimuls
lock
clc
test
jbe
mov
movb
sti
dec
jg
add
lds
cmpsb
jle
sub
sti
push
jecxz
or
loope
outsb
sti
xchg
lret
enter
jle
pop
test
cmpsl
cmp
mov
movsb
sub
popf
and
imul
lock
into
sub
stc
cmp
ficompl
fisttpl
xchg
inc
jae
xchg
lods
xchg
mov
lret
pop
push
push
addr16
add
xorl
fsubrl
stos
xchg
bound
ror
add
js
roll
call
inc
dec
sub
jl
repnz
fadd
inc
test
out
push
test
test
faddl
aam
dec
adc
jmp
sub
or
sub
jmp
and
mov
dec
mov
shl
cmpsb
xchg
jmp
pop
gs
push
sahf
mov
fwait
out
cmp
mov
xchg
ss
outsl
loope
jno
and
pop
mov
xlat
mov
add
inc
jle
adc
ds
inc
jp
or
js
cmpsb
mov
fs
and
add
push
push
adc
sti
rcl
scas
jmp
sbb
fisubl
out
shl
fsubrs
addl
inc
sbb
orl
or
aaa
push
push
js
daa
outsb
mov
out
mov
js
cmp
lds
mov
mov
sbb
jg
and
imul
repz
out
js
and
adc
push
sar
popf
scas
cmp
movsb
xor
inc
jge
sbb
adc
mov
call
icebp
lret
movsl
js
clc
subl
test
out
or
pop
jae
xchg
loopne
and
inc
xor
mov
pop
movsl
adc
adc
cmp
in
jns
pusha
add
xchg
mov
cli
push
sbb
mov
out
sub
fwait
lret
sbb
xor
mov
jno
mov
std
add
popl
fwait
jmp
repz
shlb
scas
in
cmp
mov
dec
fs
mov
cmp
cmp
gs
inc
fwait
andl
into
add
push
jbe
xchg
xor
or
adcb
push
std
pushf
aaa
adc
sub
mov
or
sbb
ds
in
aam
testb
mov
fisttps
out
pop
fistpl
xchg
xchg
pop
lahf
aas
gs
pusha
mov
das
js
add
xchg
adc
sbb
leave
jle
pop
cmc
dec
jno
hlt
or
rol
shll
push
jge
cli
movsb
loope
cltd
scas
imul
xchg
jge
sbb
mov
and
lods
out
mov
or
jo
ja
xor
neg
outsl
nop
cwtl
push
mov
cmp
lea
mov
lcall
pop
fistl
ret
add
inc
jbe
mov
nop
cmp
jg
push
in
movsl
mov
inc
addb
cmp
scas
idiv
mov
jbe
aad
mov
movsl
inc
jbe
jae
push
mov
inc
cltd
jno
fwait
jne
cmp
xchg
in
call
sub
xchg
xchg
adc
scas
push
ljmp
stc
lods
sbb
jns
adc
or
in
daa
push
popa
jne
mov
dec
mov
call
mov
adc
push
icebp
xor
lods
mov
ljmp
les
fcompl
inc
shl
jmp
push
sbb
leave
dec
ljmp
scas
inc
adc
stos
dec
inc
add
push
insb
enter
cmp
sbb
or
test
cltd
test
shlb
sbb
sub
es
test
add
xor
cli
cmpsl
add
or
sub
sub
mov
in
mov
lahf
repz
fidivrl
addr16
outsl
ret
dec
or
out
xorl
dec
out
dec
push
add
gs
add
aam
stc
xchg
xor
lds
popf
sarb
add
push
cmp
mov
insl
iret
xchg
sub
jno
popa
rclb
jb
es
aaa
pop
loope
aaa
test
insb
cmp
out
ja
ret
cmp
sbb
dec
movsl
bound
mov
mov
pop
les
sarl
mov
xor
add
cwtl
jne
lret
jno
jecxz
cmp
loope
or
sub
adc
xchg
lds
or
sbb
mov
mov
dec
es
sub
add
pop
inc
scas
gs
lret
lahf
add
outsl
fdivrs
push
out
sbb
xchg
hlt
lret
fcmovnu
dec
jno
and
enter
push
xchg
lcall
adc
pop
lret
cmp
sbb
or
pop
mov
test
push
fs
add
push
test
ja
inc
nop
lods
test
lahf
jne
dec
mov
sbb
loopne
js
pop
pop
ds
sbb
loop
lock
push
push
filds
scas
fadds
sub
fstps
push
push
stc
sbb
repnz
orl
inc
lea
jecxz
icebp
add
or
inc
mov
arpl
nopl
fisubs
mov
xchg
add
sub
dec
adc
jae
mov
xchg
daa
jne
hlt
fldl
sub
xchg
imul
aas
adc
cmp
stos
aaa
in
das
sbb
or
mov
imul
add
and
outsb
or
mov
push
jp
aad
repnz
rcrb
pop
aaa
sbb
mov
xor
mov
shrb
xchg
cmp
xchg
mov
push
pop
jne
test
insl
je
lahf
mov
and
and
push
push
lea
mov
jns
jns
xor
mov
dec
push
cld
dec
push
mov
inc
cwtl
xchg
pop
or
jae
jo
xor
xchg
and
popa
ja
jmp
insb
jle
loopne
pop
loope
ret
adc
mov
sbb
repz
repnz
nop
lock
leave
fimuls
push
adc
mov
jle
adc
stos
inc
loopne
daa
movsl
push
mov
out
or
xchg
mov
mov
fsub
sbb
push
and
push
dec
sbb
inc
popa
ss
aam
inc
dec
imul
xor
xchg
ret
pop
push
mov
or
push
in
xor
test
stos
rcl
cld
xchg
pop
or
test
dec
ds
adc
movsb
dec
divl
mov
or
jne
jmp
popf
xchg
notl
outsl
jl
movsl
xchg
fst
mov
add
and
sub
adc
fcmovnu
lret
dec
or
ljmp
aam
adc
add
stos
sbb
out
lea
addr16
and
sub
rcr
xchg
push
mov
pusha
ror
adc
xor
fisubs
add
xchg
adc
sbb
bound
scas
je
test
xchg
inc
int
addr16
mov
mov
or
fwait
xchg
fsubrs
lret
cmpsl
leave
sub
arpl
or
popf
in
dec
fldcw
pop
leave
loop
out
xchg
sub
add
movsb
pop
rcrl
xor
push
mov
inc
pop
in
and
fstps
adc
xchg
inc
outsb
pop
leave
addr16
pusha
adc
jle
outsb
add
cmpsb
mov
jmp
and
fwait
cmp
pusha
aam
adc
push
lods
cmp
mov
std
std
and
out
xchg
out
xor
cmp
mov
lret
out
lret
pop
push
pushl
popa
push
push
jp
mov
add
hlt
in
mov
not
shll
mov
and
jge
cld
jmp
das
mov
fadds
std
in
insb
push
mov
cmp
mov
testb
xor
or
dec
call
fmuls
mov
adc
insl
mov
aam
push
dec
xchg
mov
mov
iret
xor
pop
loope
mov
mov
leave
ja
jge
and
sahf
call
ja
mov
or
out
testl
mov
jmp
xchg
sbb
jo
jl
std
pop
iret
add
mov
adc
mov
jmp
xchg
sti
add
fcoms
aaa
sub
push
int3
xchg
mov
ficompl
ss
mov
push
dec
push
sbb
pop
xchg
mov
sub
lahf
add
dec
sbb
sahf
push
std
inc
ss
lock
sbb
xor
sub
xchg
dec
jge
imul
ss
mov
xchg
push
nop
xchg
popf
sbb
frstor
dec
inc
int3
aad
xor
call
fisttpll
lahf
shr
xor
rorb
jmp
repnz
mov
inc
adc
and
pushf
ret
test
push
pushl
sbb
xor
add
cld
cmp
scas
jno
aam
mov
xchg
popf
hlt
xchg
cwtl
ja
in
subb
pop
popf
or
insl
call
xor
xor
or
and
adc
pop
cmc
nop
out
xlat
lods
mov
mov
in
js
dec
xchg
scas
cmpsb
mov
inc
iret
inc
jp
sub
bound
jecxz
sbb
adc
mov
or
or
cltd
xchg
ja
mov
in
lds
or
out
out
mov
sete
fldcw
add
js
lods
dec
pop
outsb
jl
pop
dec
dec
xor
adc
adc
cltd
mov
insb
clc
mov
push
iret
cwtl
data16
inc
ja
fldenv
xchg
push
add
out
fdivs
bound
es
imul
or
cltd
inc
xchg
push
lret
add
into
add
cmpsl
mov
outsl
mov
dec
scas
pop
add
pop
xchg
std
sub
pop
push
movsl
pop
aaa
mov
inc
arpl
fsubl
test
and
xor
mov
xchg
and
lahf
jmp
clc
and
or
imul
xor
lds
and
inc
ljmp
adc
adc
jns
jp
ja
and
or
or
jb
loopew
mov
js
and
adc
subl
ffreep
pop
popf
lods
jno
loop
fnstenv
repz
cmp
pop
mov
adc
xor
xchg
pushf
xor
js
lds
adc
lock
and
test
inc
out
add
or
sbb
bts
or
sub
mov
cmp
lret
out
push
pop
test
jnp
sbb
dec
push
xchg
js
aam
jp
imul
mov
or
cmp
out
mov
movsb
leave
sbb
out
roll
mov
dec
dec
mov
push
xchg
lds
les
push
iret
popf
pop
and
xorl
xchg
mov
sub
cmpsb
les
andl
aam
sti
dec
push
aaa
shl
or
loopne
popa
sbb
jl
cmpsl
stc
mov
fcomi
mov
sarl
mov
jne
pop
mov
stos
dec
repnz
sti
sub
dec
mov
jl
pop
orb
xchg
dec
repnz
sbb
lret
mov
sbb
fwait
das
jnp
cmpsl
es
pop
dec
push
push
aaa
sub
je
out
insl
iret
adc
ret
mov
pop
dec
lcall
popa
pop
sub
pusha
cld
clc
out
pop
cmp
mov
call
mov
jmp
push
mov
mov
xor
inc
and
xchg
inc
sahf
mov
xor
jne
bound
iret
jl
ret
fwait
sbb
jbe
rorl
daa
push
inc
mov
xor
xchg
repz
clc
cmovb
and
jecxz
pop
int
or
lea
mov
jp
inc
dec
push
mov
push
repnz
lea
fbld
fdivs
mov
lret
les
mov
jnp
dec
xchg
pop
and
xchg
test
add
sub
roll
jns
or
or
sbb
cwtl
sbb
shrb
jge
fldl
mov
mov
sti
and
repz
xchg
push
out
loop
stos
fwait
jecxz
inc
fistl
sbb
xchg
gs
dec
out
lcall
mov
prefetch
aas
imul
inc
xor
orl
jp
pop
adc
xchg
inc
leave
jmp
inc
adc
fldcw
push
push
dec
sahf
les
test
push
std
mov
shrl
sbb
subl
pusha
addb
push
dec
rol
fs
cmpsb
cmp
add
push
cmpsb
std
cmp
scas
in
sub
jnp
adc
insl
adc
push
mov
push
mov
and
push
sbb
add
jbe
arpl
mov
cmp
push
xor
mov
dec
inc
jb
xor
mov
jb
mov
outsb
fisubrs
imulb
jl
and
clc
pop
stc
aaa
ja
mov
xchg
jecxz
lods
mov
xor
add
inc
inc
and
adc
xor
fildll
jbe
es
xchg
fstpt
fstps
in
movsb
mov
out
mov
jg
fs
hlt
and
push
aad
js
out
std
inc
or
aad
adc
xchg
push
loope
shll
add
mov
cmp
mulb
or
fucomip
lret
cwtl
fidivrs
cmp
idiv
jne
aaa
or
test
shll
fcoml
bound
cmc
fidivl
add
lods
push
ss
shlb
lock
inc
test
shlb
mov
mov
lods
mov
lret
adc
sar
fisubl
or
jno
ljmp
outsl
cmp
out
iret
ror
xchg
inc
lods
mov
dec
xchg
cli
inc
aam
loopne
push
into
sbb
das
push
inc
and
fidivl
fists
sbb
popf
pusha
es
push
insl
mov
sahf
loop
mov
test
std
inc
cld
movsl
outsl
test
pop
adc
jp
inc
fbstp
mov
ss
hlt
mov
popf
imul
sub
not
ljmp
sbb
pop
add
pop
idivb
pop
cmpsb
fldt
shl
push
jg
movsb
push
bound
imul
push
insl
and
jg
rcl
clc
sub
mov
add
dec
arpl
lods
cld
ja
les
pop
rcrb
ljmp
jno
ret
das
test
shl
mov
lahf
stc
lret
and
xchg
lock
icebp
cmpsl
mov
push
addb
mov
leave
testl
imul
inc
ret
sbb
sbb
push
cmc
gs
xlat
lds
insb
fnsave
lds
mov
repz
jns
jmp
xchg
mov
xor
dec
cmpsl
movsb
sbbl
dec
mov
pop
dec
lahf
notb
cmp
cld
nop
popf
xor
std
xor
pop
lock
adc
and
loopne
push
aad
or
mull
and
pop
clc
xor
lods
or
xchg
fmull
sbb
dec
xor
movsl
inc
xchg
leave
stc
sub
cwtl
mov
movl
mov
xor
and
pop
push
bound
adc
loop
fs
mov
jae
jnp
ffreep
in
pop
mov
neg
xchg
jl,pt
scas
mov
add
lods
fimull
mov
push
or
out
mov
push
fisttps
je
inc
loop
imul
push
hlt
pop
push
outsl
jmp
push
pusha
push
or
sbb
pushf
mov
icebp
std
pop
cs
mov
jne
jbe
popf
xor
cmc
xchg
rcl
ja
xchg
aaa
mov
push
mov
jnp
dec
out
push
movsb
shll
repz
sub
in
stos
jnp
jmp
loopne
xor
xchg
adc
pop
mov
cli
cld
mov
fildl
push
jo
and
sub
fs
shlb
pop
sbbb
fcoms
aam
aaa
movsl
pop
cmp
roll
shl
push
mov
push
adc
cmp
scas
push
movsb
xor
call
cmp
rolb
or
mov
stos
ret
mov
adc
mov
sub
sysexit
mov
push
lcall
test
sub
test
std
jo
mov
pop
sbb
daa
cmpsl
fcomps
lret
insl
std
adc
mov
ror
shl
inc
testb
jnp
push
mov
mov
jae
pop
addb
test
jo
push
loop
sub
je
mov
pop
xlat
mov
xchg
nop
fucomp
pop
push
lret
lock
loopne
loope
test
ljmp
loopne
es
pop
jge
add
lahf
cmp
int3
pop
dec
arpl
sarl
push
js
movl
and
cmp
xchg
cmp
out
int3
mov
sub
lret
int3
xchg
xchg
pop
cmp
out
xor
push
add
and
xchg
out
out
pop
inc
cltd
icebp
sub
inc
cltd
sbb
inc
mov
loopne
and
fwait
test
fwait
push
or
xchg
fidivl
and
movups
adcl
enter
in
mov
pop
adc
mov
sub
sub
adc
aaa
mov
mov
addl
clc
mov
das
dec
mov
adc
jmp
inc
xor
dec
aas
and
jle
fisubrs
vpunpckhwd
dec
out
ret
cmp
cmpsl
loope
push
fcmovu
jle
in
push
push
mov
mov
jl
adc
out
fisubrl
leave
movsl
je
xor
out
addb
repz
call
and
mov
push
pushl
cmp
push
orw
test
pop
mov
dec
mov
or
popl
push
rcrl
fistps
and
push
jge
mov
mov
mov
out
out
popf
in
ja
sarl
lret
cld
int
test
and
xchg
ficoml
out
call
jg
push
loope
xor
adc
insb
cmpsl
in
in
jmp
or
out
mov
xchg
mov
mov
jnp
push
sbb
cmp
pop
jmp
scas
cld
popf
inc
jp
aas
dec
std
push
jecxz
pop
fistl
outsb
add
push
cmc
aaa
in
mov
nop
inc
xor
clc
mov
xchg
int3
mov
mov
shr
or
hlt
mov
outsl
mov
out
psubq
jne
rolb
pop
cmp
xor
out
idivb
notb
pop
cld
adc
out
mov
push
pop
or
ret
dec
sbb
xor
pushf
xchg
push
sti
ret
bound
js
mov
shlb
ljmp
pop
into
fwait
dec
scas
jmp
xor
mov
mov
je
lahf
fistps
psubusb
mov
or
xor
movsb
and
outsb
push
jmp
hlt
loopne
inc
iret
clc
enter
test
xchg
je
rolb
inc
fisttpl
inc
lahf
sub
xchg
lret
sbb
xchg
dec
xchg
int3
jo
sti
xor
ss
sbb
pushf
push
movsl
cmp
mov
cld
adc
mov
cli
es
cs
cmc
push
iret
ret
mov
mov
mov
call
fiadds
sbb
push
cli
cld
popf
pop
sub
or
addr16
and
push
mov
stos
test
xchg
xchg
mov
das
mov
mov
or
fdivl
pop
push
repnz
mov
jecxz
jl
mov
or
mov
iret
or
cmp
mov
inc
imul
aam
jno
xchg
repnz
ss
aaa
cmp
nop
call
imul
in
clts
shll
dec
sub
divl
ljmp
pop
pop
outsl
xchg
je
in
clc
fstpt
xor
insl
sti
or
xchg
pop
cmpsl
imul
cli
ljmp
inc
aad
push
mov
insl
loop
fisttpll
mov
jno
mov
rcll
cmp
bound
les
test
and
mov
nop
or
stos
pop
mov
inc
pop
push
imul
mov
outsl
mov
inc
pop
or
inc
jg
jp
xorl
push
das
xlat
sbb
dec
or
adc
push
dec
imul
call
or
inc
mov
das
inc
push
popf
ds
xor
pop
out
or
cmp
jle
je
test
push
xor
test
pop
mov
cmpsl
loopne
jno
dec
mov
in
mov
rcr
cmp
arpl
jbe
inc
es
mov
sbbb
stc
sahf
pop
loope
or
xor
sbb
mov
adc
das
push
stc
test
or
fildl
pop
and
sub
mov
cld
dec
inc
shl
roll
shll
adc
inc
adc
cmp
dec
inc
out
flds
das
shl
and
loope
mov
add
xor
push
in
fwait
adc
push
jmp
cmp
push
lahf
mov
jl
jmp
int3
insl
nop
jge
sub
loop
mov
shl
sub
jbe
dec
or
cmp
fidivrs
sub
les
xchg
xor
mov
sub
cld
xor
ds
and
mov
lcall
ret
cmp
fwait
adc
aaa
adc
mov
pop
inc
lods
out
in
aam
cli
mov
sahf
xchg
enter
push
inc
mov
push
arpl
iret
sub
jno
mov
gs
add
mov
int
mov
jle
mov
lods
jbe
cmp
xchg
dec
ret
inc
insb
mov
cmpsl
dec
jo
pop
push
sarb
mov
lods
jb
jmp
fs
or
repz
dec
stos
cltd
pop
xchg
xor
push
stos
outsb
sbbl
xor
ljmp
fstpl
lods
jp
cs
sub
test
icebp
inc
mov
pop
sub
inc
push
imul
aaa
stos
lret
jb
inc
and
repz
lret
aam
pop
pop
lds
loopne
or
test
popf
ljmp
je
int3
aaa
lret
jns
in
outsb
sbb
dec
or
jge
rclb
ret
orl
sub
pop
push
fwait
test
rcrl
push
cld
xor
mov
scas
push
popa
pop
stos
movsl
shrl
sbb
pop
in
adc
sbb
sbb
fdivl
lahf
subb
dec
jo
pop
cmp
xchg
int3
inc
outsb
bound
and
jl
xchg
push
aad
pop
cld
test
dec
dec
test
push
test
sarl
push
mov
lods
push
in
ds
fsts
outsl
push
xchg
mov
and
loop
xchg
inc
negb
mov
shrl
dec
add
pop
jmp
test
pop
cmp
and
repz
rcll
inc
pop
xor
das
dec
push
fs
pop
push
lret
mov
int
sub
xchg
add
jb
add
ret
pop
imul
div
mov
scas
and
enter
dec
or
lea
andb
mov
mulb
cmova
mov
mov
fwait
in
and
jecxz
or
cmp
xorl
inc
sbb
push
rorl
pop
sbbb
sbb
clc
push
pop
arpl
dec
xor
dec
push
push
sbb
cli
or
xlat
out
dec
add
aam
mov
push
out
jbe
loop
xchg
jns
pusha
xor
cmp
mov
push
lds
xchg
cld
in
ljmp
out
shrl
inc
mov
shll
adc
cwtl
into
inc
insb
pop
or
and
cmp
test
ja
adcb
mov
in
js
pop
add
out
inc
pop
outsl
cwtl
cmp
bound
fdivr
scas
lahf
jl
push
cmc
loop
add
clc
sub
mov
lahf
popa
adc
jle
xor
xchg
cmp
push
loop
mov
cwtl
mov
mov
les
cmp
sbb
inc
insl
pop
add
push
notb
dec
clc
mov
xchg
rcll
pusha
imul
fwait
gs
jl
movsl
xchg
cmp
and
mov
xchg
xor
jle
cmp
jp
adc
jns
mov
push
add
and
xchg
push
jo
and
mov
fildl
xchg
add
xor
mov
or
add
out
mov
jns
or
pop
mov
fisttps
sub
fstp
in
sti
dec
imull
or
xorb
fiaddl
jecxz
cmp
js
addr16
movlps
pop
mov
or
roll
fwait
imul
sub
cmp
jl
inc
sbb
fnstenv
adc
add
mov
or
sbb
jle
push
sbb
dec
or
and
add
mov
pop
dec
int3
ficomps
shrb
insb
xchg
je
lret
mov
outsb
pop
pop
out
std
push
or
insb
push
cld
pusha
cmp
pop
push
sahf
cmp
int3
inc
xchg
jge
arpl
jno
mov
mov
insb
mov
cmp
xor
hlt
push
sahf
and
cmp
or
xchg
and
push
or
int
imul
fdiv
ljmp
enter
ret
jae
mov
movsb
mov
pop
mov
bound
lcall
stos
test
imul
ljmp
out
mov
pop
or
out
stc
insb
xchg
jl
lea
jo
mov
xchg
jp
xchg
lahf
cltd
out
sub
cmp
dec
lods
mov
sbbb
xlat
mov
or
cmp
jmp
xlat
aam
cwtl
imul
mov
mov
js
or
out
adc
out
les
scas
pop
and
push
popf
insl
mov
lret
mov
dec
fiaddl
icebp
loope
pushf
push
push
dec
or
pushf
sub
lea
jb
add
dec
ss
stos
loope
insb
mov
daa
cld
push
xor
or
imulb
cmp
int
data16
adc
lock
jg
jg
cwtl
add
stos
imul
icebp
insl
add
sarb
mov
push
xchg
pusha
mov
add
push
push
xor
and
imul
scas
sbb
in
ret
mov
xchg
lods
loopne
and
test
push
divl
jno
pop
jp
scas
pop
loopne
addr16
mov
jmp
add
aas
fidivrl
add
push
es
and
mov
rol
mov
pop
pop
outsl
sub
int
ret
pop
jge
and
test
mov
test
test
inc
fs
jecxz
test
arpl
shrl
inc
xchg
test
inc
fidivrs
mov
inc
jb
inc
mov
push
test
add
jbe
mov
sbb
xchg
fsubrs
xchg
or
inc
push
ffreep
pop
out
loope
jg
lret
mov
outsb
add
adc
xchg
mov
dec
and
or
adc
mov
mov
lds
mov
dec
arpl
js
mov
mov
pushf
enter
lods
jno
jnp
xchg
push
pusha
xor
add
mov
inc
lods
out
jns,pn
scas
gs
xchg
mov
sbb
insb
xor
loop
inc
test
push
pop
xchg
dec
ror
jnp
add
iret
xor
mov
mov
lods
div
lock
arpl
pop
js
addr16
inc
or
mov
xlat
decb
adc
cmc
pop
pop
mov
sbb
cwtl
cli
mov
call
mov
lret
pop
aaa
jg
dec
pop
xor
mov
stc
sbb
frstor
push
inc
sbb
add
iret
cmp
add
arpl
sub
fistps
lods
push
jo
push
cmp
jmp
sub
jg
and
aad
sub
xor
test
clc
arpl
xor
adc
daa
movsb
xchg
mov
je
mov
icebp
and
dec
and
les
sub
push
std
jnp
icebp
jns
in
test
icebp
push
cltd
xchg
inc
mov
movsl
mov
pop
dec
cwtl
xor
sub
mov
outsb
cwtl
sbb
adc
sub
xchg
inc
cltd
jne
sbb
sbb
xor
and
cmp
movsl
sub
xor
pop
adc
xchg
sbb
push
loopne
fildll
mov
xlat
aad
dec
add
popf
jecxz
int
in
test
push
das
push
shlb
fs
add
jno
cs
cmpsb
xchg
fnstenv
stos
into
rcrl
outsl
fdivr
out
aas
pop
adc
sub
iret
cmp
dec
cmp
dec
lret
dec
out
fistl
out
xor
xlat
jae
mov
data16
hlt
mov
push
rolb
int3
jae
pop
lahf
les
jae
mov
mov
add
inc
stos
xor
shlb
pusha
push
push
xor
icebp
mov
outsb
pop
adc
nop
jne
daa
jp
mov
shrl
mov
sarb
imul
in
cmp
ds
push
xchg
hlt
daa
add
hlt
push
idivb
inc
jb
pop
lahf
cs
in
jecxz
fsubr
mov
fidivrs
sub
call
dec
enter
outsb
mov
popf
dec
push
cmp
call
push
jnp
mov
mov
jae
nop
fidivrs
and
sbb
xchg
xchg
in
addr16
pop
pusha
inc
inc
mov
lret
lcall
insl
adc
xlat
inc
fisubrs
gs
out
dec
push
int
and
frstor
cmpsb
sahf
push
les
push
adc
dec
mov
fwait
outsb
pop
cmpsb
xor
adc
ret
sbbl
mov
les
sbb
cmp
xor
mov
sbb
push
dec
test
push
ficoms
or
cli
or
and
push
jbe
call
and
into
shrb
push
dec
adc
adc
shl
lret
ljmp
stos
shrl
pop
xchg
lock
shr
cmp
icebp
pop
popf
dec
mov
and
stos
xchg
das
sub
pop
rclb
movaps
xor
add
mov
out
sbb
push
pop
add
fwait
mov
loop
call
insb
imul
clc
xchg
xchg
stos
pusha
xor
adc
popf
aad
sub
xchg
aaa
mov
in
in
fs
ljmp
mov
jle
gs
mov
pop
cli
subl
dec
hlt
xlat
sub
lret
loop
outsb
xor
lret
iret
add
sar
jo
ret
pop
and
mov
imul
add
xchg
cltd
pop
adc
push
xor
iret
adc
cmpsb
sbbl
mov
lods
push
in
pushf
int3
xlat
test
xchg
fdivr
jg
cltd
lcall
test
mov
dec
and
cmp
fcmovne
incl
daa
mov
mov
xchg
cltd
stc
or
scas
cmpsl
or
cmp
mov
call
gs
and
scas
aaa
fsts
cmp
testb
adc
jne
pop
mov
mov
push
cmp
enter
adcl
or
xorl
dec
cmp
cmpb
mov
or
nop
int3
push
add
push
rcrl
rcll
int
into
mov
pop
fdivl
sub
xchg
mov
je
jg
das
add
jmp
sbb
inc
lea
bound
aaa
lea
nop
stc
pusha
dec
stos
jne
inc
sub
leave
loope
add
fadds
pop
xchg
cltd
fs
dec
or
incl
inc
js
cmp
xchg
add
bound
jp
inc
inc
add
aam
out
inc
rorl
and
outsb
sub
es
insl
in
push
call
aas
outsb
jb
enter
lret
jno
pop
cwtl
sub
leave
cld
mov
ja
shrb
enter
cmpsb
xor
xchg
cmp
sub
das
mov
inc
push
shlb
pop
lret
push
cltd
push
xchg
cmp
adc
scas
mov
ss
mov
mov
xchg
and
or
xchg
dec
pop
jbe
sub
cwtl
jnp
sub
fs
xor
dec
std
test
sub
jo
adc
xlat
and
xchg
dec
mov
sub
sub
pushl
mov
add
jmp
rclb
lret
inc
dec
mov
stos
scas
fnstsw
sbb
push
ss
cmp
popa
jle
scas
mov
pushf
call
insb
and
sbb
movsl
andb
mov
fwait
gs
cmp
mov
xchg
xchg
bound
push
mov
lcall
loope
int3
out
mov
xchg
push
insl
push
xchg
pop
bound
add
loopne
inc
loopne
or
jmp
sub
repz
adc
jnp
popa
sbb
scas
test
mov
lods
jecxz
loope
stos
xor
jns
cld
sahf
sbb
lret
push
mov
popf
aas
ror
rorl
xor
fldl
loopne
jl
fisubrl
std
jae
jne
movsb
or
iret
jbe
popa
jecxz
and
mov
scas
scas
sbb
mov
lret
lods
add
mov
and
jg
decb
aad
xor
mov
push
push
jl
xchg
std
mov
jbe
cmpb
ret
sub
jl
ds
std
jmp
dec
inc
xchg
lock
push
cmp
aad
add
inc
fwait
cmp
sub
mov
pusha
loopne
adc
aad
jns
mov
ficoms
xchg
jno
push
mov
xchg
shlb
cwtl
insb
or
fwait
test
sbb
sbb
jmp
fdivr
inc
dec
andb
xchg
int
or
lcall
push
inc
out
or
repnz
icebp
cs
cwtl
imul
cmp
mov
dec
mov
sbb
fs
and
nop
push
mov
add
push
sti
cmc
in
ds
gs
hlt
testb
fildll
jb
test
mov
jno
fs
fcomi
int
in
push
pop
xchg
out
shlb
fidivrs
sbb
xlat
addl
cmp
mov
xchg
outsl
or
icebp
mov
lds
mov
stos
sbb
inc
lock
movsl
push
dec
int
ja
mov
dec
adc
ja
sbb
or
adcb
mov
mov
pop
pop
decb
mov
jg
mov
imul
stos
push
call
lock
int3
out
mov
aas
mov
mov
mov
std
xchg
stc
enter
xor
sub
mov
fists
sarl
push
lcall
sbb
cmpsl
or
add
insb
cld
inc
lods
xor
xor
in
dec
ljmp
mov
xor
popa
sbb
pop
js
loope
pop
test
lds
mov
pop
out
es
push
into
push
xlat
stos
mov
lock
mov
or
pop
mov
dec
in
lds
xor
xorl
cmp
icebp
mov
daa
mov
xor
or
or
repnz
std
sbb
push
dec
inc
inc
sub
imul
push
outsl
sub
fndisi(8087
lret
fsubr
aaa
jl
inc
jbe
orl
cmp
mov
sbb
and
mov
xchg
fdivrp
sbb
dec
ljmp
clc
je
aad
pop
repnz
leave
lods
int3
push
out
adc
das
mov
jle
and
push
inc
inc
test
and
push
movsb
jge
data16
sub
jmp
jmp
orl
or
sbb
jmp
lcall
cmp
gs
fsubrs
dec
xorl
jmp
nop
cmpsb
rolb
jbe
and
sub
test
jnp
pop
stos
pushf
pop
add
inc
outsb
insb
jnp
lea
lret
scas
sbbl
jno
dec
pop
int
cmp
and
dec
mov
imul
mov
sub
xchg
pop
in
js
mov
inc
cmp
pop
adc
cmpsl
rcrl
sbb
lcall
mov
inc
or
loop
orps
test
and
mov
sub
int
mov
cmp
fs
sbb
jecxz
imul
add
jmp
mov
lods
shrl
and
xor
push
cltd
pop
push
pop
pop
jp
adc
rcl
cmp
cmc
mov
jge
rol
hlt
sub
insl
out
pop
jb
push
sbb
mov
pop
les
dec
repnz
loop
push
or
jnp
les
cmpl
ficoms
dec
iret
mov
cmp
popa
push
ret
and
cwtl
divb
mov
xlat
xchg
sbb
mov
outsb
pop
cwtl
mulb
int
int3
cmc
fdivp
and
addr16
mov
mov
and
aam
call
jle
inc
push
inc
jb
cmp
or
xchg
xchg
cld
mov
and
in
adc
inc
and
push
outsb
jnp
arpl
xchg
jle
push
mov
lretw
stos
push
inc
pop
shlb
sbb
jle
insl
dec
adc
cmp
int
fdivr
sbb
setnp
cmpsb
aad
add
xor
je
fmuls
les
jle
xchg
jnp
fnstsw
xor
data16
repz
stos
xor
fwait
shl
cmp
mov
sbb
cmp
mov
mov
mov
aaa
lcall
xchg
jg
mov
or
fistpl
lods
sahf
shl
mov
cli
out
aam
subl
push
out
jecxz
dec
ficompl
or
adc
xchg
rolb
pop
lods
in
dec
aad
popl
mov
fcos
mov
aaa
lock
pop
or
nop
xor
adc
or
adcl
cld
or
ss
pop
jg
outsb
arpl
mov
cmp
mov
add
dec
dec
xor
xor
cmp
cmp
lods
lea
mov
or
js
test
out
push
push
or
dec
adc
xor
push
dec
lcall
lahf
adcl
loopne
aaa
lea
add
sub
mov
aaa
repz
add
mov
dec
fwait
xor
or
jmp
sbb
jnp
gs
sbb
insl
push
je
mov
mov
jo
jge
lea
ficoml
dec
scas
es
sbbb
or
sub
or
xchg
popf
jmp
inc
arpl
jbe
icebp
xor
test
fs
jo
jg
push
loope
test
jnp
or
es
adc
ss
aad
jl
dec
xchg
cmpsl
test
andl
ja
and
sbb
ret
test
movsl
lea
leave
out
jle
push
hlt
pusha
into
push
xchg
cli
insb
cmp
add
shrb
mov
insl
addb
cmp
fidivl
push
fwait
int
fidivrl
jno
sbb
and
xchg
in
jl
dec
bound
push
sbb
lock
data16
push
js
mov
push
lea
pop
movsb
loope
or
std
js
cmp
or
xor
inc
and
shrl
push
out
rclb
cmp
mov
dec
inc
scas
les
loop
jl
out
jnp
adc
dec
call
sub
sbbb
cmpl
loopne
mov
inc
insb
mov
addr16
xchg
push
lock
out
jno
xlat
and
das
inc
xchg
int
decb
stos
xor
sbb
movsb
pop
gs
fs
mov
nop
cmp
outsl
inc
push
ds
loopne
insl
sti
mov
scas
cs
out
pop
jno
adc
mov
xlat
enter
add
cs
push
push
mov
popf
out
mov
and
mov
sub
inc
pop
fdivrp
jns
xchg
in
loop
in
inc
and
mov
mov
cmpsb
cmp
and
cwtl
shl
xor
rolb
xor
add
idiv
or
xorb
push
xchg
push
mov
scas
inc
and
dec
xchg
fwait
xchg
push
cmp
into
fidivrs
ret
and
xchg
fwait
mov
cs
and
pop
int3
icebp
sbb
dec
sbb
daa
xchg
jmp
out
mov
ss
int
cmp
subl
push
inc
xchg
call
push
popf
xchg
test
aas
addb
pushf
repz
xchg
aad
ljmp
cwtl
sub
mov
insl
je
push
mov
mov
mov
adc
call
hlt
in
aad
dec
xor
add
add
pop
or
lds
pushf
push
add
pop
add
call
aad
jns
adc
cld
inc
pop
push
xor
adc
not
mov
or
shr
sbb
sub
arpl
push
mov
jne
mov
jg
ret
pop
jge
in
imul
fwait
aad
adc
iret
pop
sub
adc
mov
pop
ljmp
and
jns
js
push
add
iret
adc
into
jae
loop
imul
xchg
daa
repnz
cwtl
mov
add
lods
subps
repz
fisttpl
mov
dec
push
jg
imul
scas
mov
cmp
and
lahf
cli
mov
movsl
cmp
adc
dec
pop
mov
cmp
add
xchg
scas
fwait
outsl
mov
jbe
into
mov
cmp
in
cmp
or
adc
rcr
jno
sub
jmp
adc
jnp
shrl
shll
in
aaa
mov
pop
sbb
mov
lret
mov
addl
mov
jl
lods
xchg
nop
jns
test
testl
fs
xor
cmp
push
imul
lahf
movsl
cltd
push
mov
sub
inc
push
adc
fmulp
jae
mov
jae
insb
lret
jecxz
adc
push
fimuls
out
xor
popf
lods
mov
add
mov
arpl
add
sub
sbb
jmp
je
out
or
rorl
push
lret
or
sub
les
mov
sub
xor
idivb
cmp
pusha
pop
pop
bound
inc
leave
jo
dec
and
ss
fildll
js
mov
dec
arpl
jmp
lcall
xor
rcl
roll
js
jp
les
fmull
cmp
push
loop
jp
repnz
dec
jl
sar
push
inc
nop
inc
popa
push
pop
sub
cmp
call
ficomps
dec
fildll
mov
leave
xchg
fs
pop
lret
jmp
sti
add
ja
cli
cs
jnp
and
jmp
jmp
leave
ljmp
repnz
in
pop
lea
pop
scas
xchg
insb
negb
and
mov
push
inc
dec
and
add
sub
push
sbb
mov
pop
pushf
in
lret
outsl
dec
cmp
jl
or
rorl
fimuls
sbb
sti
add
push
test
or
fnstcw
scas
mov
xor
inc
addr16
xchg
mov
cmpsl
jo
pop
push
sti
outsb
mov
push
fildl
insb
mov
out
lea
ficoms
jmp
ja
test
pop
xlat
xor
out
jo
pop
mov
lret
mov
mov
mov
shrl
sub
imul
cmp
stos
stos
or
sub
mov
xchg
aad
mov
push
add
aaa
jecxz
mov
adc
fstl
fs
xor
xchg
adc
jge
cmp
or
inc
pusha
test
sbb
mov
js
sbb
xchg
scas
loope
inc
jno
fsubrl
cmp
cmp
mov
xchg
pop
in
imul
xor
sub
add
loop
inc
push
in
imul
xchg
stos
xchg
mov
das
cmp
sbb
les
jo
sub
adc
fadds
inc
iret
lahf
sub
cwtl
data16
imul
dec
sahf
cmp
push
xchg
xor
inc
sti
mov
xchg
lock
pop
push
jecxz
mov
fdivs
repz
shll
leave
sti
rdmsr
push
xor
cmp
adc
movsl
inc
and
fisttps
test
mov
outsb
cmp
ss
cmovs
in
lcall
add
add
and
scas
out
out
mov
or
cmp
push
fwait
xor
mov
inc
and
idivl
sub
stc
xor
ljmp
mov
dec
push
outsl
pop
aam
push
push
decb
or
sub
frstor
aad
inc
iret
adc
add
das
les
data16
mov
loopne
ljmp
cmp
sbb
cmpb
rclb
mov
aam
subl
rcrb
adc
dec
inc
xchg
xor
cmp
sub
mov
fnstenv
les
pop
inc
cmpsb
jl
mov
call
aam
push
nop
movsl
mov
mov
and
sub
setge
pop
test
lcall
mov
xchg
loopne
ret
xchg
popa
sub
mov
outsl
mov
dec
xchg
push
push
test
dec
mov
jge
inc
cwtl
push
dec
push
jb
pushf
je
scas
and
add
mov
push
aas
jge
mov
pop
push
push
sbb
pop
or
fsubrl
dec
mov
lret
adc
mov
nop
add
mov
mov
adc
or
pusha
pop
aam
aad
add
xchg
gs
jp
inc
lds
in
jp
cld
push
mov
push
jle
ret
xchg
gs
jle
adc
movsb
and
jnp
fists
jno
jecxz
jae
xor
int3
mov
mov
jge
sub
xchg
leave
inc
cmp
inc
addb
xchg
outsl
push
rorb
jle
xor
gs
xchg
dec
jbe
or
dec
push
push
cs
sti
fcoms
xchg
mov
xchg
cmpsl
inc
xchg
add
outsl
pop
shrb
enter
int
add
scas
je
pop
mov
or
dec
scas
rcrl
dec
adc
add
pusha
adc
daa
xor
sub
mov
xlat
pop
or
arpl
xor
dec
out
xchg
xor
xchg
into
jp
gs
lods
aam
pmaxub
push
sub
rcrb
cmpsl
cmp
mov
test
lods
aas
dec
stos
gs
push
inc
mov
jb
mov
in
popf
jl
cmp
ret
outsl
imul
push
and
and
pushl
jge
loopne
cmpsl
test
lret
xchg
pusha
xor
bnd
sbb
jno
ror
mov
aaa
dec
rorl
xor
sahf
jne
xlat
sahf
aaa
dec
push
in
imul
pop
xchg
loop
cltd
frstor
push
pop
sub
outsl
aaa
je
push
into
push
push
cmp
push
ja
xor
push
inc
sbb
pop
xchg
fwait
and
push
push
lds
sub
mov
js
imulb
das
test
aam
inc
dec
sbb
push
pop
les
test
cmp
xchg
dec
stos
xchg
jg
clc
sbb
ja
add
roll
push
rcrb
ljmp
fiadds
je
mov
pop
xor
aas
or
inc
and
jg
popf
addr16
sbb
lods
aaa
add
xchg
xchg
mov
lret
pop
jecxz
mov
and
push
fisttps
pop
adc
ljmp
bound
mov
fwait
cmp
xor
loope
aad
dec
push
jg
inc
cld
and
pop
into
push
pop
jl
ss
push
fbld
mov
shl
inc
fisubrl
frstor
or
arpl
pop
pop
xchg
xor
pop
sbbb
insb
daa
lret
xchg
push
and
rol
jle
inc
and
sub
cmp
sarl
mov
sbb
inc
aaa
and
push
mulb
jno
outsb
or
jmp
addr16
rolb
jnp
cmpsb
xchg
bound
shl
xor
xor
lods
mov
test
jmp
mov
dec
or
mov
imul
cmp
xchg
aad
stc
and
enter
ss
movsl
je
add
fs
jbe
dec
adc
test
push
cmc
divb
das
imul
dec
cmpsb
push
cmpl
mov
in
loop
push
and
int3
les
xchg
push
add
cmp
addl
out
in
fimull
jecxz
mov
loop
and
lea
movsl
pop
cmpsl
sbb
dec
mov
jno
out
adc
clc
xchg
jg
jmp
sub
cltd
movsb
mov
or
fisubrl
dec
adc
out
fistpll
inc
push
stos
pop
fbld
outsb
jae
jl
cvtdq2ps
jl
fmull
add
jnp
repz
or
shl
pop
daa
movb
and
mov
xor
mov
test
mov
outsb
dec
mov
pop
pop
lret
fmull
mov
hlt
dec
cmc
aam
jbe
pop
add
in
rolb
pop
shrb
mov
jb
xorl
cmp
xor
jl
pop
pusha
cmpsl
leave
repz
mov
pusha
loope
jae
jns
lret
popf
mov
rcr
add
das
push
mov
pushf
jle
sbb
jecxz
insl
mov
jnp
or
cmc
loop
dec
ja
into
js
test
aaa
cmp
adc
icebp
movb
imul
xor
mov
dec
je
hlt
stos
in
sub
fsubs
jg
faddl
iret
cli
outsb
jae
push
sbb
sub
jne
enter
pop
xchg
cmpsl
movsb
mov
adc
add
sbb
push
arpl
mov
int3
int3
fsts
jne
mov
test
fadds
clc
jecxz
cs
inc
fld
call
ds
mov
inc
stos
out
mov
sub
dec
inc
in
pop
jle
fisttpl
fidivrs
mov
ja
xchg
cmp
cmpsl
push
icebp
xlat
push
jmp
jns
scas
mov
testl
mov
pushw
popa
cmpb
push
xchg
xorl
xchg
cmp
xor
enter
xchg
or
sti
dec
daa
jne
lods
pop
imul
cmp
in
xchg
cs
fs
cmpsb
insl
add
mov
in
dec
arpl
call
rcll
std
ret
add
sbb
std
addl
sub
mov
add
in
adc
add
pushf
mov
lods
lahf
dec
gs
sbb
sbb
jnp
ds
in
inc
scas
fs
pop
pop
xor
cli
out
jns
inc
aam
jae
loope
cmp
add
cs
es
jno
push
arpl
or
jb
push
stos
ret
ljmp
cli
lret
mov
fwait
out
test
lock
aaa
daa
ljmp
mov
dec
adc
mov
rolb
mov
pop
imul
pusha
add
cmpsb
lret
xor
loope
mov
stc
jne
ret
jbe,pn
xchg
mov
sub
mov
sbb
mov
ficoml
sbb
mov
pop
je
lods
into
nop
out
movntq
jle
or
sub
cmp
stc
or
arpl
pop
mov
sub
adc
push
outsl
or
js
jge
clc
push
push
fwait
cli
inc
jl
sbb
xor
pop
ljmp
dec
and
cmp
jecxz
in
or
out
out
iret
mov
inc
pop
enter
add
mov
andl
fisubs
or
in
bswap
xchg
fbld
mov
popa
sbb
or
lods
jae
pushf
in
loopne
gs
scas
jno
icebp
int
cmp
popa
sub
lret
das
sarb
and
sub
adc
adc
jp
in
jbe
shlb
sti
bound
jmp
shll
ss
or
cmp
add
inc
dec
sub
push
lods
mov
stc
pusha
lretw
and
stos
cmp
sbb
es
adc
ds
sahf
mov
mov
repnz
fisubrl
repnz
sbb
shlb
lret
je
nop
push
cmp
dec
inc
shll
std
fwait
mov
push
repnz
add
call
mov
fadds
enter
popa
mov
loop
mov
in
mov
lcall
clc
sbb
add
xchg
andl
push
mov
ja
cmc
inc
out
int3
imul
in
enter
out
jae
cmpsb
movsb
jecxz
cld
add
fstpl
scas
sbb
enter
and
push
add
mov
xor
dec
lods
push
push
cmpsb
dec
add
jp
test
roll
and
inc
inc
xor
and
or
add
cmp
in
inc
mov
xchg
cwtl
orl
inc
add
jns
jno
outsb
lea
push
mov
mov
jb
js
sub
mov
wbinvd
test
xor
mov
cmp
pushf
xor
mov
mov
addl
call
daa
jbe
jle
test
dec
iret
xor
xor
push
xlat
mov
mov
adc
mov
aam
xchg
xchg
sub
aaa
push
sub
out
mov
loopne
xlat
shrl
mov
repz
stos
jl
or
out
out
mov
leave
divl
sbb
cld
mov
roll
movsl
mov
insb
or
sbb
push
pop
mov
cmp
std
inc
dec
push
aad
hlt
xchg
out
gs
jmp
mov
inc
mov
dec
jle
add
sbb
ja
inc
dec
fiaddl
and
push
inc
mov
sbb
std
dec
ljmp
aam
dec
xlat
notb
mov
lret
or
add
aam
xor
jbe
or
inc
dec
sub
ret
outsb
stos
cmp
sbb
jno
sub
test
in
or
push
ja
sbb
gs
xlat
add
cwtl
insl
test
lods
add
dec
ds
xor
push
and
mov
imul
or
inc
gs
sub
jp
add
int
or
pop
std
xchg
dec
or
mov
and
orl
jmp
lea
add
sbb
call
cmp
jbe
lea
repnz
pop
daa
sbb
es
jne
mov
cmp
mov
aas
insl
mov
lcall
push
popa
push
fmull
sbb
xor
test
sbb
rcr
inc
insl
pop
push
cltd
bound
cld
adc
and
jecxz
mov
int
sub
pop
and
jge
std
mov
andb
push
shlb
cmpsb
and
lods
or
add
xchg
xor
push
mov
mov
test
dec
imul
or
xor
inc
mov
mov
dec
jle
push
bound
fwait
testl
jnp
movsl
add
lret
sub
cs
hlt
mov
and
xchg
scas
push
dec
dec
push
test
outsl
loope
hlt
mov
sub
mov
in
sbb
or
pop
adc
in
lea
scas
int3
dec
out
gs
lahf
movsl
sub
cli
aas
mov
fs
mov
pop
xor
aad
aas
jae
push
xor
push
rcll
mov
jp
test
push
xchg
xchg
lret
stc
out
push
mov
jo
mov
into
push
cmp
inc
mov
dec
aad
hlt
xchg
push
loopne
cmp
jno
adc
mov
into
cs
test
xchg
or
mov
pop
xor
imul
cwtl
dec
mov
int
pusha
adc
and
push
push
imul
adc
movsb
sub
stos
arpl
lods
inc
pop
imul
mov
pop
cmp
add
fcmovnb
jp
jne
add
enter
and
jno
sub
jg
loop
sub
sbb
fisttps
dec
push
jmp
rorl
je
xor
inc
mov
cmp
inc
outsb
adc
insl
jg
cmp
pop
cmp
rorl
xchg
push
jmp
rcrb
adc
push
inc
jl
or
dec
loop
jb
stos
pop
dec
mov
jmp
adc
icebp
mov
dec
ja
shrd
mov
jb
and
cmp
sti
xchg
push
jmp
add
add
pop
gs
pop
rolb
sbb
and
inc
or
and
jp
imul
inc
xor
or
punpckhwd
sbb
mov
jmp
popa
loopne
fstps
lea
pop
xchg
add
lock
xchg
and
rorl
jne
out
sub
and
mov
pop
cs
outsb
pop
add
ss
inc
push
fistpll
gs
es
fwait
and
adc
lea
out
leave
push
es
or
ljmp
aad
imul
gs
jae
adc
mov
push
mov
or
push
lahf
and
repz
outsl
into
aaa
je
imull
add
lcall
insl
stos
xlat
mov
test
leave
or
int3
sbb
test
dec
lock
subl
mov
add
push
inc
xor
cwtl
icebp
cld
and
cmp
xor
cmp
sub
xlat
add
out
sbb
shlb
sub
notl
aam
and
mov
loopne
mov
xlat
es
data16
mov
hlt
pop
stc
imul
mov
aaa
pop
test
xor
xchg
sbb
lcall
cmp
cmpb
sbb
push
fwait
xor
sbb
imul
xadd
js
call
scas
lea
aaa
or
testb
repnz
pop
mov
adc
or
dec
sub
js
jle
mov
fs
dec
sub
fcoms
add
cmpsb
or
into
ss
hlt
pop
mov
push
mov
xor
push
jbe
popf
pop
clc
dec
mov
jecxz
cli
pop
hlt
sub
es
shll
add
je
inc
shrl
ss
push
addb
adcl
mov
mov
cmp
cmp
jb
sarb
inc
les
out
jp
ja
cmp
orl
pop
mov
repnz
fcompl
pop
pop
stc
mov
xor
repz
adc
movsl
icebp
testl
xchg
mov
test
mov
std
add
sub
mov
xchg
outsl
fisubrs
fidivl
faddp
sti
mov
bound
xchg
jmp
test
repz
ret
xor
andl
addr16
push
hlt
in
push
adc
adc
push
jo
add
pop
mov
lods
sub
fmull
int
out
cmp
les
dec
int
pop
xor
push
jl
add
adc
jo
pop
or
sti
lods
ret
push
pop
pop
stos
movsl
push
or
jle
add
andb
add
mov
xchg
lock
mov
cmpsl
cmp
mov
fsubrp
nop
lcall
jno
int3
xor
mov
push
mov
xor
xor
sub
xor
shrb
loopne
jne
push
sti
cmp
add
cli
shrl
mov
push
lock
add
es
add
aam
mov
pop
movsl
fcmovnbe
mov
push
push
cmpsl
mov
dec
lods
cmp
mov
mov
and
mov
cs
aad
out
pop
mov
das
or
popf
aam
mov
lods
roll
mov
adcb
mov
enter
cmp
push
jb
hlt
or
dec
pusha
xchg
and
je
jnp
out
adc
or
imul
push
lea
jb
pop
aas
scas
fimull
in
in
out
sub
xchg
sub
loopne
jecxz
idivb
into
adc
add
and
loopne
adc
pusha
repnz
adc
fcmovb
dec
outsb
std
jno
prefetchw
or
mov
xchg
test
sbb
inc
int
jae
push
lds
inc
jae
cmp
dec
push
push
push
jge
lret
adc
adc
fadd
add
mov
roll
mov
adc
ret
ret
jl
push
cmp
sbbl
outsb
mov
jmp
xor
jmp
enter
or
je
mov
movb
ret
push
add
sub
xchg
dec
loop
sub
mull
push
dec
pop
pop
js
roll
outsl
into
pop
fistpll
int
into
movsb
loopne
out
sub
dec
std
imull
lahf
dec
sbb
push
das
dec
dec
or
mov
out
hlt
jns
pop
lock
mov
ret
es
pop
jp
cwtl
mov
rclb
add
mov
fstp
lret
xchg
out
ds
mov
cmpsl
sbb
sub
pop
push
push
add
aaa
xchg
pmaddwd
roll
pop
mov
pop
xchg
xor
hlt
push
aam
adc
mov
mov
fldenv
or
in
cmp
sub
bound
jb
int
pushf
iret
cwtl
test
jno
movsl
mov
sbb
sbb
outsl
mov
cltd
sub
addl
fldenv
insl
mov
cld
rorl
insb
scas
xorl
sub
int3
or
pop
and
push
mov
mov
ds
sub
movsb
jne
lcall
jno
jno
std
cltd
pop
sbb
xor
hlt
rclb
push
push
aam
cmp
cmp
xor
daa
mov
xor
pop
mov
mov
ret
scas
das
jge
jns
ljmp
andl
sbb
loopne
das
out
pop
cmpsb
data16
mov
out
push
dec
xor
repz
clc
sbb
shrl
jge
sbb
cld
fsubs
in
mov
fimuls
movsl
push
push
cmp
lret
or
ficoml
push
js
jecxz
aam
negb
mov
rorb
mov
sbb
lea
sbb
repz
aas
data16
rol
enter
fsubr
mov
cmp
jl
add
cli
mov
clc
jp
and
pop
xchg
cmp
xor
sbbl
fildll
std
mov
in
push
jmp
pop
cmp
fldt
push
lea
add
push
test
loop
bound
adc
repnz
shrd
out
add
fcom
rcr
test
push
jno
movl
test
mov
push
lret
lods
xor
mov
cltd
xchg
shrl
xor
mov
inc
lods
lret
lds
inc
xor
push
stos
inc
jl
pop
mov
subw
clc
out
fsubr
push
sti
pop
scas
mov
mov
sbb
jno
iret
leave
enter
popa
sbb
cmp
sbb
mov
pop
or
addl
in
aam
cs
sbb
int3
inc
nop
lahf
scas
adc
cltd
les
adc
mov
lret
popa
push
std
dec
jnp
div
or
mov
pop
cmp
dec
jg
xor
jbe
mov
sub
aam
in
and
lret
movsl
int
push
stos
enter
nop
jecxz
cmp
adc
test
std
or
cmp
inc
cld
addr16
shlb
mov
add
sbb
pop
inc
push
loopne
and
insl
xor
mov
fnstcw
je
rcr
in
and
push
mov
fidivs
xor
inc
aad
test
popf
aaa
aam
cwtl
and
dec
mov
sbb
mov
stos
adc
xchg
enter
inc
mov
push
and
or
and
lcall
in
ja
outsb
push
stos
cmpsb
pop
subl
dec
adc
xchg
out
call
movsl
xor
shll
in
xor
and
aam
mov
shlb
js
add
fadds
clc
push
mull
test
lods
cwtl
adc
nop
std
addr16
testb
jge
push
push
push
mov
sti
stos
cmpl
insb
mov
inc
lret
adc
add
iret
in
or
test
and
mov
xchg
cmp
lcall
pop
test
push
cli
pop
and
pop
fisttpll
pop
mov
sbb
cmpsl
sbb
cmp
and
repnz
aam
repz
out
std
jmp
sbb
inc
fsubs
nop
cmp
lock
mov
out
push
dec
nop
push
sub
jo
and
adc
mov
into
lcall
mov
cmp
dec
fists
dec
cs
lahf
aam
adc
cmp
cmp
push
jle
das
inc
mov
sbb
pop
cmp
sub
sub
ret
dec
dec
push
inc
std
fisubrs
jl
xor
pop
push
xchg
cmp
push
mov
dec
insl
inc
push
pop
inc
std
push
push
push
cmp
xchg
js
add
xchg
mov
push
push
mov
dec
and
jmp
sbb
icebp
imul
fwait
push
test
fwait
inc
mov
or
xchg
push
mov
shr
lea
movsb
sbb
pushf
nop
arpl
movsl
adc
idivb
mov
ret
xchg
roll
imul
mov
inc
pop
out
mov
pop
pop
mov
inc
or
in
loop
bound
jge
popf
mov
inc
cs
fwait
addb
mov
fs
jle
dec
movsb
sbb
and
call
jecxz
or
daa
inc
push
sub
jno
jge
int
and
arpl
mov
jle
jne
sub
dec
pop
xchg
sub
xor
imul
dec
sbb
mov
add
adc
sub
cmp
in
push
pop
mov
pop
mov
aad
sbb
int
loop
pop
sub
adc
lods
xchg
test
jmp
popf
or
pop
int3
iret
xor
push
and
cltd
mov
push
inc
int
xchg
mov
pushf
jmp
into
and
sub
popw
int3
push
inc
mov
and
add
sub
fwait
pusha
jg
push
pop
jmp
stos
movsb
stos
mov
test
push
mov
fstpt
insl
mov
nop
mov
ss
scas
cmp
push
movsl
mov
pop
mov
js
xor
xor
inc
call
adc
pop
or
fwait
mov
je
pop
jbe
dec
fdivrl
sub
movsl
pop
cmp
loopne
stos
xchg
les
dec
lahf
pop
popf
mov
jo
into
ds
into
filds
xchg
daa
andb
jb
lea
mov
mov
mov
fmull
inc
and
aas
pop
mov
repnz
pop
or
out
repnz
sbb
inc
pop
or
pop
jne
mov
push
mov
ret
xchg
jb
sbb
test
in
adc
lds
pop
sbb
pop
or
into
jmp
ljmp
inc
incb
xor
add
mov
adc
inc
cmp
subb
xor
add
adc
push
lods
fdivrs
das
sbb
roll
jae
lock
shl
and
aad
popa
dec
and
ret
xchg
push
aaa
pushf
inc
ficoms
cs
outsl
push
push
pop
test
sub
push
cmp
jbe
ret
push
rolb
inc
and
jnp
pop
cmp
mov
xor
shlb
push
pusha
pop
dec
scas
mov
pusha
fs
xor
inc
jne
aas
and
xlat
int3
mov
dec
inc
dec
add
lods
xchg
mov
or
dec
dec
nop
lret
cmp
sub
stos
add
jmp
sbb
push
mov
movsl
leave
add
and
xor
clc
in
lock
pop
xchg
imul
fldcw
or
cmp
add
hlt
popf
ds
sub
jae
repz
sahf
int
inc
xlat
jno
cltd
mov
push
addl
js
dec
lea
out
cli
std
mov
jp
inc
sub
xor
mov
xor
cmpsl
popf
pusha
cmp
xchg
out
sub
mov
int3
lods
ret
dec
push
aam
leave
aaa
pop
sub
jge
test
cmpsb
cld
mov
das
jecxz
xor
loope
lcall
mov
mov
aas
and
jle
mov
icebp
or
in
addl
enter
mov
xor
sti
movsl
pop
cwtl
dec
fnstenv
loopne
pop
push
cmp
mov
insb
dec
jge
scas
xlat
push
fisubl
mov
inc
pushf
and
cmp
decb
mov
arpl
pop
sbb
cmp
add
push
cmp
mov
sbb
int
or
push
movsb
cmp
lcall
out
jae
sahf
mov
jge
adc
test
pushf
mov
mov
pop
xchg
push
mov
or
in
scas
inc
in
xor
sub
jo
insb
pop
sbb
sbb
loop
jno
add
jmp
adc
mov
lcall
notl
ret
pop
nop
mov
sub
push
and
or
jg
test
inc
stos
movsb
iret
out
xor
push
in
or
jge
push
shll
xor
or
push
shl
cmpb
int3
adc
push
mov
cmp
sub
data16
dec
les
addb
xor
push
scas
cwtl
andb
lret
and
in
testl
dec
cltd
lds
jecxz
inc
sbb
cmp
call
jp
xchg
pop
dec
jbe
xor
in
lods
hlt
and
push
sub
xor
sub
and
aas
fcoms
xchg
das
jp
aad
xchg
adc
sahf
fdivr
clc
xor
rcrb
add
mov
out
lods
mull
mov
cmp
daa
add
lods
loopne
mov
mov
add
fcmove
and
pop
adc
mov
sbb
rcrb
adc
cmp
arpl
std
pop
aas
xchg
sub
pop
ret
pop
inc
shl
mov
xchg
mov
jb
mov
hlt
mov
int
push
lock
xchg
inc
pop
pop
sbb
push
lcall
lock
pop
call
fimull
fiaddl
xor
cmp
sbb
mov
loop
jle
push
mov
xchg
aad
rcr
fisubs
pop
stos
test
outsb
ret
dec
test
push
inc
jbe
insb
jp
movsl
bound
xchg
mov
mov
stos
pusha
sahf
dec
sbb
rcll
int
mov
cli
mov
xchg
push
mov
dec
sbb
shr
aas
mov
cmpsb
enter
imul
dec
insl
scas
cmp
ljmp
negb
mov
pop
xchg
fistps
add
ss
adc
das
mov
adc
or
push
addr16
push
mov
xor
call
sti
xchg
xchg
shll
cltd
push
mov
hlt
cmpb
xchg
fucomi
pop
sbb
call
pop
out
adc
fmul
jbe
dec
movb
nop
clc
leave
pop
aad
popa
inc
test
out
fwait
mov
rcrl
fs
mov
sub
mov
xchg
cltd
cmc
push
rcrl
cli
rcll
jo
lea
in
mov
stos
js
test
add
cli
ss
pop
in
sub
mov
xchg
jmp
pop
cmp
inc
inc
leave
in
js
push
imul
jp
xchg
inc
lret
sbb
or
into
cmp
aas
cwtl
push
mov
lret
scas
bnd
lock
lods
xchg
ret
lret
dec
movsl
dec
mov
mov
xchg
lret
push
hlt
xchg
out
or
adc
jmp
repnz
pop
adc
pop
mov
adc
scas
int3
push
mov
sbb
es
lea
rcl
test
stos
or
cmp
test
jbe
xorl
js
jmp
add
lods
and
cs
gs
mov
cwtl
jbe
xchg
aas
movsl
aam
insl
push
outsl
mov
lods
adc
sbb
jecxz
addl
pop
test
mov
jg
stos
pop
popf
pop
sahf
or
js
xor
dec
xor
nop
mov
scas
inc
repz
dec
or
xchg
pop
push
mov
mov
sti
out
pop
xor
stos
sahf
aaa
shrl
push
xor
sub
nop
movsl
in
push
or
mov
inc
push
cmpsb
inc
pop
clc
das
jmp
cmp
push
adc
cmpsb
dec
or
inc
scas
pop
stc
shrb
xchg
ss
arpl
xor
sahf
jae
jbe
scas
repnz
js
inc
xlat
jnp
jo
faddl
int3
sub
sbb
add
and
aad
add
addl
shll
inc
lods
and
out
mov
lahf
int3
loopne
xchg
mov
mov
filds
mov
imulb
pop
and
push
pop
jnp
mov
idiv
enter
jmp
sub
ds
negl
movsl
mov
movsb
and
pop
push
loope
outsl
or
or
xacquire
mov
iret
pop
lret
or
pusha
inc
fucomi
hlt
fistps
ficoms
jo
filds
mov
std
sub
int3
imul
enter
negb
sbb
insb
in
into
sub
xchg
pop
stc
sub
inc
addr16
repnz
xor
xor
mov
rol
lock
int3
stos
shlb
xor
loope
jge
cmp
xchg
cmp
divl
js
shlb
fninit
mov
out
mov
fidivrl
mov
icebp
fildl
loope
leave
into
aaa
shl
inc
pop
lcall
jmp
lea
jbe
orl
cli
jle
xor
repz
sub
arpl
inc
stos
aad
rcll
adc
dec
in
sbb
or
and
sub
test
xor
shlb
je
push
xchg
pop
dec
adc
adc
push
shlb
jo
mov
jbe
add
dec
add
fisubs
lahf
sbb
push
pop
aad
stos
sub
and
push
fwait
push
push
jne
xchg
loope
ja
cmpsb
push
or
jnp
push
pop
push
imul
outsl
xchg
jecxz
adc
mov
mov
or
xor
mov
mov
bound
out
mov
adc
cli
in
mov
inc
int
outsb
dec
in
imul
push
and
dec
mov
je
mov
popf
jmp
push
cmp
dec
sub
mov
mov
aas
addr16
pop
shrb
iret
in
cmp
dec
je
test
adc
rsm
add
int3
aas
mov
nop
lret
lret
mov
lds
cli
cmp
pop
jmp
popf
push
cwtl
mov
rcl
shrl
pop
mov
lea
mov
adc
add
out
das
dec
adc
jb,pt
lret
push
push
mov
enter
xchg
mov
gs
mov
dec
repz
jge
idivb
repz
das
push
cmc
xchg
inc
fsubrl
sbb
popa
ds
mov
push
movhps
jns
and
push
or
push
andb
les
lcall
out
sbb
push
in
xchg
aas
push
cmp
je
fistpl
in
adc
jns
sbb
jmp
dec
ltr
lret
pop
push
jecxz
mov
pop
push
inc
in
enter
mov
aas
notl
popf
add
mov
mov
pusha
popf
xlat
sbb
hlt
or
jl
inc
mov
arpl
mov
imul
xor
jb
cmp
xchg
push
data16
or
add
mov
jnp
add
sbb
lods
daa
cmp
push
mov
push
jle
cmp
sbb
fmuls
cmp
mov
and
imul
loopne
sbb
in
bnd
mov
mov
sbb
xchg
pop
mov
jl
pop
insb
fs
and
adcb
push
lahf
pop
test
pushf
xor
sahf
imul
mov
and
mov
jg
push
sbb
xchg
mov
cmp
pop
inc
sub
or
add
icebp
dec
aas
cmp
sub
shr
pop
imul
sbb
adc
push
in
icebp
inc
jl
outsl
xchg
cmp
mov
cmp
cmpsl
xor
ficompl
mov
adc
adcl
mov
scas
dec
insb
jp
jmp
mov
stos
xchg
ror
mov
push
adc
mulb
add
repz
test
mov
add
sti
mov
insl
sbb
mov
mov
jmp
dec
mov
andb
xorl
jae
cmc
stos
inc
adc
xchg
in
xchg
jae
in
jle
gs
pop
and
retw
add
ja
add
icebp
jmp
inc
mov
je
push
push
push
jne
jge
lock
test
xchg
push
jbe
sbb
mov
daa
lods
cli
repnz
cmpsl
mov
jo
gs
dec
mov
cld
sar
jg
adc
pop
rolb
leave
lret
and
test
dec
jno
xchg
xchg
dec
push
lds
sub
dec
dec
dec
fwait
dec
push
inc
rclb
ret
repz
xchg
loop
stos
pop
cld
cmp
mov
jb
sub
aad
push
orb
xlat
add
push
call
nop
mov
int
fcompl
vandpd
inc
mov
dec
in
sarl
cmpsb
sbb
js
push
sbb
loop
fwait
cmc
inc
inc
mov
mov
clc
shrb
jne
fldenv
movsb
pop
dec
jo
out
dec
inc
adc
mov
sbb
iret
push
or
push
inc
xchg
sbb
push
add
mov
and
test
mov
jge
mov
rolb
cmp
and
ret
jns
das
das
xor
dec
mov
xor
aaa
lret
pushf
pop
mov
xorl
add
shrb
sbb
sub
pop
stos
daa
sbb
and
sti
dec
dec
push
scas
cmpsb
lahf
mov
lret
gs
movl
sub
loope
int3
leave
out
add
out
cmpsl
mov
fcmovnb
mov
jbe
sub
clflush
scas
call
lods
and
push
arpl
sbb
stos
mov
imul
inc
pop
mov
fsubl
push
and
pop
jl
fdivrs
repnz
and
mov
scas
adc
fsubrl
hlt
push
ljmp
pushf
aas
mov
addr16
push
lock
add
shll
mov
push
pop
and
pop
add
fstpt
aam
ds
adc
mov
rcll
das
stos
mov
cmp
cmp
mov
jae
insl
sbb
xchg
dec
jno
cmc
jp
aaa
test
addps
push
test
inc
sub
mov
sbb
and
sub
xchg
mov
add
mov
gs
lock
sarl
loope
mov
sub
dec
sti
stc
push
push
lock
fmull
mov
mov
jb
sbb
xchg
icebp
loop
scas
sti
mov
cld
and
mov
int3
fidivrl
pop
into
mov
mov
test
sbb
dec
cmp
mov
or
ficompl
pop
xchg
in
jae
jecxz
adc
pop
mov
sub
or
mov
scas
in
pushf
insb
or
and
or
adc
pop
movsl
xor
jne
sub
ret
mov
cld
aam
call
xchg
sub
lret
fdivrs
adc
out
movsl
pop
mov
leave
aas
fidivrs
cmpl
in
int
mov
push
cmp
sbb
xlat
mov
lds
sbb
xorb
adc
scas
adc
testb
sbb
shlb
insl
push
xchg
test
pop
jg
pop
mov
les
push
cmp
test
mov
imul
push
rcrl
fidivl
jno
sbb
and
stc
rorl
shll
push
out
push
xor
outsl
push
pop
outsl
add
hlt
in
pop
and
mov
in
sub
sbb
adc
dec
insb
push
arpl
mov
addr16
scas
cmpsb
test
out
clc
aaa
mov
cmp
mov
fdivr
xor
mov
movsl
pop
dec
cli
jae
movsl
imul
mov
hlt
jp
add
or
aad
nop
inc
std
movsl
sbb
out
lahf
push
nop
sbb
cmp
in
negb
push
sbb
sbb
sub
or
xor
loope
fidivrs
xchg
adc
sub
xchg
fdivrl
ds
cli
in
clc
mov
ja
jmp
dec
addb
decb
stos
ja
mov
adc
push
repz
sbb
xchg
ret
jb
add
xor
mov
shl
mov
or
ficomps
inc
xlat
jle
insb
insb
mov
sbb
cmc
jae
popa
insb
shrb
dec
sub
or
mov
push
mov
icebp
pop
mov
add
mov
inc
shrb
pusha
sub
scas
sub
or
std
xchg
icebp
push
aaa
sbb
lret
mov
mov
mov
jmp
push
add
add
stc
and
adc
lods
out
mov
insl
mov
mov
sub
movsb
shr
cmp
sub
xchg
ljmp
sahf
dec
xor
cmp
push
mov
jo
rorl
arpl
add
iret
inc
jb
sub
mov
in
and
cmpsb
in
jecxz
jb
repz
mov
fdivrl
sbb
and
and
out
sbb
mov
lea
or
pop
mov
ret
movsl
cmp
shlb
sti
pop
mov
push
cmp
push
hlt
xlat
cmc
sub
mov
mov
xor
xor
arpl
push
outsl
jecxz
jb
adc
push
stos
ret
iret
in
leave
or
clc
mov
mov
sarb
js
inc
iret
sub
mov
loope
and
pusha
scas
inc
outsl
fisubl
adc
lock
inc
and
out
stc
outsl
popa
cmp
sbb
or
loope
mov
xor
jecxz
stos
lods
lahf
in
in
push
adc
ret
cwtl
inc
mov
xchg
dec
pop
cmpsb
fcoml
sbb
bound
out
cmpb
insb
in
movsl
jmp
fs
cmpsb
ficoml
mov
stc
xchg
insl
sahf
les
and
inc
dec
xor
scas
lods
sbb
mov
rcr
and
sub
cmp
insl
push
popf
cmp
jle
cmp
insl
xchg
stc
inc
ljmp
xchg
gs
jb
cmpsl
and
movsb
jb
xor
dec
enter
or
cmc
xor
jp
jae
add
shll
out
jae
sub
jecxz
mov
inc
lea
outsl
test
in
inc
popa
xchg
lock
lea
dec
adc
dec
sbb
popa
sbb
cmc
clc
sahf
sub
and
gs
popf
ficoml
jns
ljmp
push
mov
mov
pop
adc
cmpsl
loop
pop
and
je
sub
out
jnp
hlt
push
xor
push
xchg
cmp
mov
sub
push
arpl
pusha
xchg
and
int
or
cmp
adc
and
imul
sub
int3
dec
cmpsl
cmp
loopne
jecxz
jp
aam
insb
cld
cmp
or
lcall
ljmp
inc
pop
adc
sub
jg
or
mov
call
xor
nop
mov
cmp
daa
scas
les
les
lods
push
mov
sbb
popa
cltd
fs
cwtl
test
int
stc
inc
inc
adc
sar
pop
mov
int3
test
loop
cmp
adc
jg
mov
lret
jb
andl
nop
packssdw
adc
xor
cmpsl
ror
xor
fwait
test
push
fs
mov
xchg
ja
enter
hlt
pop
cltd
andl
xor
sub
mov
jge
bound
pop
dec
adc
fwait
daa
lock
push
inc
pop
fiaddl
pop
adc
cld
in
pushf
in
rcll
mov
enter
or
js
sbb
and
and
jecxz
sub
div
mov
es
mov
test
pop
sbb
imul
aam
outsl
insl
insl
sbb
jns
movsb
add
clts
enter
mov
add
mov
inc
orl
push
xchg
mov
lcall
jle
cmp
sub
push
push
out
and
aaa
ljmp
lods
fildl
sbb
outsl
hlt
jae
adc
jno
add
mov
insl
mov
mov
adc
xchg
insl
add
add
cmpsb
in
adc
lahf
imul
xchg
sub
cmpsb
cmc
test
jl
dec
incl
shlb
arpl
and
stc
jae
popl
imul
sbb
outsb
cmp
push
fldenv
xor
sbbb
sarb
loop
dec
pop
ja
xchg
cs
add
mov
adc
fists
adc
cmp
sub
mov
cmpsb
and
into
and
adc
shrl
fistpl
add
cmp
xor
enter
and
jne
cmp
clc
inc
adc
in
jle
xor
cmp
movsl
hlt
ret
scas
fcmove
or
aam
xchg
lock
test
leave
pop
push
mov
repz
xor
xor
jae
push
jne
add
addr16
push
repnz
cmp
mov
mov
aam
mov
mov
ret
clc
pusha
xchg
add
clc
pop
sbb
js
loope
adc
push
push
into
jnp
ror
rcrb
dec
jg
cvtdq2ps
jle
xor
push
lds
repnz
out
call
pop
imull
pop
inc
adc
dec
popf
pop
sbb
jmp
push
addr16
xchg
mov
jle
arpl
popa
pop
jns
mov
mov
cmpsl
aaa
in
test
push
aam
cltd
and
pop
std
adc
xchg
pusha
scas
es
jae
jb
push
mov
adc
sub
cmp
pop
xchg
sbbb
lds
push
inc
int
cmp
adc
mulb
rclb
sahf
aad
cld
and
and
pop
mov
insb
push
adc
inc
inc
mov
xchg
and
clc
fidivrl
or
push
xor
adc
mov
idivl
popf
pop
push
xchg
mov
push
mov
inc
inc
aas
mov
and
imul
test
int
in
push
xchg
aad
jns
jnp
xor
mov
in
sahf
xor
jb
icebp
xchg
in
cmp
sub
pusha
iret
insl
mov
xchg
popf
mov
out
inc
mov
xchg
sti
pop
pop
daa
imul
in
in
fmull
pushf
xchg
lea
sbb
in
push
jne
xlat
mov
dec
sub
stos
pop
fwait
out
btc
and
outsb
mov
mov
outsb
pop
cmp
or
popf
mov
aaa
js
and
cmp
mov
imul
arpl
and
cmp
inc
sahf
test
iret
dec
mov
nop
ja
sbb
mov
xchg
nop
adcl
cmpl
pop
jmp
xchg
lods
cmpsb
out
int3
lahf
daa
or
test
pop
out
in
cmp
cmp
lods
fdivl
mov
enter
pop
sub
shll
push
xchg
add
adc
or
pop
cmp
stos
pop
pop
inc
fists
mov
aam
mov
xchg
jmp
jp
mov
sub
mov
popa
arpl
xlat
pop
cmpsl
and
mov
xchg
clc
or
xchg
pop
mov
push
pop
loop
lahf
sbb
in
cs
cmpsl
pop
outsl
aaa
xor
dec
mov
shrl
cmpsl
xchg
nop
mov
in
in
mov
sbb
pop
xor
or
ja
nop
testb
mov
fnstenvs
xchg
xor
mov
outsl
inc
pusha
pop
xor
jns
mov
sub
stos
adcl
daa
popa
mov
inc
jecxz
push
cmp
mov
push
imul
cwtl
rorb
mov
adc
popl
aad
in
sub
stos
add
dec
mov
pop
into
iret
jb
shll
lret
xchg
push
mov
xor
leave
mov
pop
stos
mov
lret
lret
lret
add
add
pop
push
mov
pop
ljmp
jae
into
lcall
ficoml
rclb
adc
repnz
pusha
lcall
mov
jbe
loope
mov
dec
sub
push
addb
imul
cmp
inc
add
dec
mov
fistpl
push
bound
ret
sti
rorl
lahf
xor
or
mov
loop
cli
pushl
cmovne
repz
outsl
je
mov
fmull
gs
sbbl
xor
ja
shll
int
shlb
mov
inc
lods
aad
dec
mov
out
xchg
in
ljmp
imulb
cmp
shr
iretw
insl
pop
xchg
or
fisubl
and
std
xchg
push
sub
ss
nop
xchg
sbb
stos
jg
mov
es
sub
in
fisttps
add
gs
rorb
bound
push
inc
inc
mov
arpl
call
repnz
sub
aas
mov
mov
cmp
lea
out
mov
sahf
mov
fwait
popf
mov
mov
xchg
mov
push
or
int
ret
mov
mov
xor
mov
std
sub
popa
xchg
push
pop
loop
pop
pop
adc
inc
es
push
lahf
push
xor
or
xorl
pop
mov
fs
xchg
dec
movsl
orb
das
iret
cmpsb
sbb
push
lahf
sti
iret
loopne
inc
inc
hlt
ret
mov
cmp
sub
jmp
pushf
mov
in
mov
pop
mov
mov
idiv
js
ljmp
push
inc
mov
pushf
push
leave
push
push
rcll
cs
mov
cld
lret
dec
aam
clc
and
scas
std
and
cwtl
ret
push
and
rcrl
rcrb
mov
cmp
sahf
mov
add
and
outsl
adc
xor
cmp
iret
paddb
cmp
push
add
fcoms
aam
inc
inc
add
dec
loopne
lahf
mov
jbe
call
in
out
xchg
test
ds
shlb
push
jp
jno
push
dec
lret
mov
testl
and
fisubrl
loopne
faddl
jmp
adc
popa
test
pop
lods
hlt
lret
daa
sbbb
test
pop
jp
or
adc
subb
out
inc
xchg
dec
rep
pop
mov
pop
or
push
hlt
cltd
mov
test
iret
dec
jo
pushf
insb
and
mov
push
lcall
pop
sub
mov
and
dec
leave
pop
imul
xchg
add
mov
xchg
inc
aaa
inc
sbb
mov
inc
fidivs
call
adc
xor
sbb
pop
test
gs
or
inc
dec
push
dec
and
in
outsb
les
push
lock
mov
pop
sbb
loop
fcompl
loope
jp
js
cltd
sbb
iret
push
and
jp
cmpsb
pusha
cld
push
jne
push
push
jg
jle
loopne
jo
dec
and
sarb
pusha
and
mov
dec
adc
add
movsl
jae
jo
adc
adc
adc
scas
mov
ss
pop
fs
sbb
shrb
dec
sbb
pop
out
std
fmuls
and
jle
negb
outsl
aam
sub
es
loopne
xchg
dec
insl
cmpsl
icebp
popf
pop
push
pop
pop
jge
push
push
es
and
lret
push
inc
mov
dec
cmpsl
pop
repz
xor
sbb
movsb
cmp
mov
add
pop
xchg
pushf
aad
adc
mov
hlt
jb
pop
addr16
ds
ret
aad
or
ret
out
push
test
scas
cmp
fisubrs
fadds
inc
shlb
fisttpll
jne
adc
mov
repnz
or
pop
js
cmp
xor
addr16
adc
mov
dec
js
stos
lods
push
mov
outsb
mov
out
sarb
mov
mov
or
ss
pushl
mov
and
popf
sahf
jnp
neg
cmc
dec
por
and
in
inc
and
cmp
mov
add
mov
jle
or
jg
jo
mov
stos
loop
out
push
loopne
dec
pusha
sahf
xchg
das
push
pop
arpl
leave
fwait
mov
fldenv
clc
and
pop
mov
cmp
fcmovnbe
in
mov
mov
sbb
mov
clc
je
jae
cmp
add
inc
adc
push
cmp
aam
fs
es
icebp
shrb
enter
icebp
xchg
popf
enter
fimull
ja
inc
dec
sbb
movsl
xor
clc
fs
lea
fsubrs
and
xchg
cmp
mov
sbbb
xlat
xchg
lock
std
mov
push
test
test
jecxz
pop
jg
adc
mov
lock
ret
inc
addl
jbe
outsl
ljmp
adc
sbb
sbb
mov
pusha
movsb
pop
push
cmp
pop
push
repnz
int
dec
icebp
out
int
sub
and
jb
stos
imul
popf
xchg
or
pop
push
pop
sti
mov
xchg
mov
leave
rol
mov
jno
sub
mov
in
mov
add
push
push
lahf
sbb
mov
aas
cmp
ds
popf
test
jp
mov
imul
stos
xor
lcall
pop
xlat
ret
std
cld
hlt
push
sbb
std
leave
out
jle
call
rcrl
xor
jbe
cld
jbe
lods
xchg
rcr
movb
mov
daa
xchg
cltd
mov
mov
push
popf
ljmp
cmp
or
xor
xchg
jno
xor
mov
xchg
ror
das
lods
pop
aam
push
lret
adc
sub
lea
dec
sbb
sub
dec
loop
xor
jo
addr16
out
adc
inc
int
sbb
test
mov
sbb
or
popf
lds
leave
jmp
dec
fs
rcll
mov
testl
popa
dec
inc
adc
mov
add
and
out
sbb
pop
bound
dec
cmpsb
mov
inc
add
sahf
push
mov
fchs
pop
add
sub
andb
and
mov
jbe
cmc
pop
repnz
dec
fs
and
jl
sbb
adc
xchg
les
cli
adc
sbb
mov
mov
std
bound
xchg
xor
call
xor
lea
adc
loope
mov
nop
int3
arpl
lea
scas
pop
jae
inc
sbbb
sub
es
cmp
jmp
inc
mov
lret
jns
lods
xchg
push
insb
inc
jl
test
cltd
mov
sbb
in
test
test
fdivr
ljmp
andb
aas
push
lods
jnp
pop
daa
mov
inc
test
pop
mov
movsl
bndldx
jge
jg
jge
push
ret
hlt
pop
addr16
and
repnz
jns
xor
test
jne
call
and
sub
or
push
test
int3
data16
inc
jne
sub
mov
outsl
enter
fs
push
data16
dec
pop
mov
xlat
push
add
push
adc
hlt
sub
imul
push
mov
and
out
shlb
loopne
push
daa
and
call
gs
addr16
push
jne
pusha
sbb
lret
sbb
push
pop
repz
jo
inc
dec
cli
mov
add
out
out
fcomi
mov
cltd
jae
popa
in
jb
xchg
mov
stc
cmc
push
pop
adc
dec
pusha
jge
sub
push
js
dec
cmp
pop
inc
out
push
jb
adc
xchg
outsb
jg
mov
aaa
cmpsb
sbb
insl
push
and
or
popa
loope
sbb
inc
push
fsin
dec
xchg
cltd
sub
dec
mov
push
icebp
inc
fwait
push
push
adc
jbe
adc
jecxz
push
sahf
xchg
mov
sbb
dec
ljmp
jle
mov
enter
inc
dec
xchg
enter
in
out
jmp
xchg
adc
aad
push
pop
dec
mov
sbb
enter
into
adc
fnsave
sbb
outsb
pop
mov
mov
out
notl
xlat
ds
add
add
mov
cmp
sahf
pop
loope
js
and
cmp
aaa
and
bound
xchg
xor
scas
shrb
nop
mov
mov
sahf
adc
cmp
sub
in
lret
pop
hlt
mov
inc
push
mov
and
mov
das
decb
add
nop
push
out
jg
xchg
pop
xchg
inc
jmp
jnp
cs
cld
jg
add
insb
in
and
rorl
bound
decl
loope
out
and
imul
mov
nop
popw
and
mov
insl
rol
xor
mov
fcmovnbe
adc
or
ds
fisubl
std
mov
pop
inc
rol
dec
hlt
out
lret
std
sub
lock
mov
pop
xchg
mov
fcomps
aam
ja
push
sub
and
jns
cmp
stc
xor
add
mov
and
inc
and
ja
fisttpl
mov
mov
out
int3
and
out
loope
mov
mov
jge
call
scas
movsl
xor
jp
insb
cmpsl
sbb
cmp
dec
stos
in
push
test
mov
iret
cs
push
dec
stc
jne
and
pmuludq
out
inc
add
fsubrl
fisttpll
xchg
fisttpl
hlt
cmpsb
rclb
inc
stos
incl
es
dec
cmp
in
jne
pop
cmp
inc
xchg
cmpsb
adcb
dec
lret
xor
or
xchg
pop
or
pushf
aam
popa
push
loop
fcmovu
jb
dec
sbb
ds
and
call
xorl
ficompl
cmp
cmpsl
push
lahf
xchg
dec
lea
sahf
add
out
rclb
push
lret
fucomip
out
dec
xor
or
mov
xor
xchg
push
cltd
mov
testl
lahf
out
adc
jmp
xchg
cli
jae
and
xchg
or
xor
outsl
ss
jg
pop
je
jns
aas
mov
xchg
sbb
sub
pop
add
cltd
inc
xchg
cmp
inc
imul
xor
jle
xchg
mov
mov
repnz
jnp
fs
or
rolb
fdivs
pop
mov
push
pop
inc
xchg
mov
xchg
test
insl
mov
shll
int3
inc
js
jle
outsb
in
stos
mov
mov
incl
popa
icebp
pop
dec
lahf
test
cmp
jnp
mov
lcall
ret
daa
adc
mov
adc
test
int
in
mov
cmc
mov
aaa
cmpb
xor
push
inc
inc
fadd
out
clc
aaa
jecxz
sbb
jne
jecxz
std
stos
mov
daa
jo
adc
sti
mov
or
jmp
jo
inc
pop
inc
shr
cmpsl
test
mov
dec
or
xor
adc
bound
xor
push
inc
dec
es
mov
leave
jmp
divl
repz
cwtl
mov
inc
iret
push
fwait
push
mov
in
inc
or
loopne
and
pop
jle
pop
adc
push
dec
pop
iret
ds
aas
mov
adc
jge
dec
mov
comiss
add
sub
ret
and
lret
cltd
sub
mov
and
pop
test
adc
inc
pusha
leave
adcb
shrl
push
jb
sahf
popf
pop
sub
mov
sub
shl
sub
jge
sub
mov
mov
pop
and
nop
or
mov
sub
scas
push
nop
dec
rorb
dec
sti
add
sahf
jmp
xor
mov
push
arpl
lcall
stos
cmpsl
stos
mov
pop
jp
jnp
int3
and
subb
outsl
in
in
dec
fldcw
imul
aaa
mov
arpl
cmp
pop
add
and
sub
pushf
mov
mov
loopne
cs
push
adc
or
pop
cmp
enter
idivb
xor
jle
loop
mov
hlt
jle
add
rclb
adc
mov
jne
or
cmp
mov
repnz
je
mov
loopne
imul
xor
add
mov
mov
push
les
loop
push
dec
add
je
inc
or
pop
jae
xor
sbb
sub
arpl
dec
jge
cmp
call
push
push
fwait
out
or
xchg
lret
fnstenv
stos
loop
lret
test
mov
mov
inc
aas
xchg
mov
cmp
jb
pop
mov
out
loopne
std
jmp
adc
mov
xchg
sub
fs
xor
rcr
inc
fdivrs
and
jp
xor
mov
sub
lret
cwtl
lret
mov
mov
push
xchg
aas
add
sub
test
inc
fiaddl
lock
aam
loop
sbb
mov
lret
dec
xchg
movsb
xor
fwait
ret
mov
push
dec
sahf
mov
mov
cmc
mov
push
lcall
je
push
cmp
mov
add
pushf
xchg
inc
rorl
je
das
mov
jl
je
in
aam
dec
pop
push
cwtl
xor
jno
out
mov
jle
sub
stos
iret
add
ja
aaa
pop
pop
sbb
stc
in
sub
xchg
orb
sbb
sub
shrl
lret
es
sbb
shrl
mov
mov
stos
xor
sub
das
and
mov
lret
ret
cs
cmp
rol
negb
pop
fwait
out
ret
cltd
jg
and
and
arpl
js
out
sub
or
mov
sti
pop
icebp
pop
jge
mov
push
jmp
mov
test
inc
outsl
adc
inc
jno
xor
mov
push
push
jmp
das
or
inc
sub
pop
add
xor
adc
call
enter
inc
jno
cmp
in
test
add
fwait
xor
test
pusha
out
jns
push
insl
scas
lahf
shrb
dec
inc
out
pop
aas
and
inc
fs
subb
mov
cmpsb
mov
mov
pop
js
and
and
and
dec
arpl
mov
jne
or
cmpsl
push
data16
popa
insl
scas
cwtl
dec
jp
loopne
fmulp
or
sbb
es
clc
lds
jl
fiaddl
mov
icebp
pop
ret
dec
fnstsw
jp
int3
adc
enter
call
xchg
pop
fwait
mov
mov
into
jl
loope
or
je
mov
fistps
lds
xor
lret
fisubrs
jbe
and
fistpll
daa
aad
sbb
and
and
sahf
mov
mov
cmc
aaa
icebp
inc
fld
imul
out
push
testl
xchg
sub
xorb
scas
push
dec
inc
sarl
fsubl
pop
or
dec
mov
xchg
mov
popf
nop
divl
jnp
pop
sbb
mov
ss
mov
popa
push
dec
cld
movsb
push
adc
mov
test
cmp
das
mov
jno,pt
inc
cmpsl
sub
lds
xorb
roll
ret
cmp
cmpsb
xor
push
sbb
pop
test
icebp
jge
mov
ret
mov
mov
popa
into
scas
add
cwtl
jo
call
movsl
mov
pop
call
cwtl
icebp
dec
cmc
dec
test
ficoms
jb
sub
dec
cmpsb
and
sbbb
aam
sub
outsb
cltd
jne
or
push
cmp
dec
mov
mov
and
gs
push
int
cwtl
cwtl
xor
ret
mov
pop
mov
adc
mov
fcom
js
xor
subl
out
mov
cmp
mov
dec
xlat
dec
mov
mov
inc
mov
mov
clc
call
xor
pop
pop
enter
ja
iret
inc
mov
out
add
aaa
push
arpl
pushf
rolb
xchg
negl
cmpsb
dec
push
test
in
cltd
std
jmp
fdivs
aaa
insb
aad
in
push
sub
shrl
push
dec
stos
mov
stc
fwait
cmp
cs
xlat
shr
std
jno
pop
add
rcr
adc
mov
subb
imulb
div
outsl
mov
add
out
repz
pop
sbb
mov
outsl
imul
fbstp
mov
nop
dec
jge
scas
jge
stc
xchg
enter
and
pop
lahf
icebp
and
fs
xchg
scas
cmp
out
int3
and
lea
movsb
ss
fcmovnb
xchg
mov
jl
or
outsl
das
pop
jge
fdiv
adc
inc
pop
push
push
xchg
push
repnz
adc
dec
arpl
in
jp
enter
xorl
cld
mov
in
dec
mov
insb
in
aas
push
sbb
mov
nop
popf
add
andb
mov
fldcw
scas
jns
insl
dec
mov
sbb
dec
in
pop
stc
sahf
out
add
or
lock
adc
into
add
sbb
in
cmp
pop
rcll
sbbl
xorl
pushf
add
les
lds
sub
data16
rcl
rcr
pushf
dec
push
inc
js
xor
js
popf
dec
out
addb
clc
idivb
jge
xchg
shlb
and
cmpl
mov
fdivs
mov
pop
cmp
dec
sbb
dec
fldcw
sub
pop
daa
add
push
std
pop
movsl
test
dec
mov
mov
mov
xorb
lret
fdivs
rcrl
or
mov
shl
sub
dec
fistpll
ret
aas
xchg
push
sub
adc
loopne
cmp
mov
dec
xchg
mov
or
rolb
ror
cmp
adc
or
and
push
insb
lds
xor
mov
mov
mov
jle
pop
fisubrs
sbb
push
fcompl
ljmp
adc
dec
leave
dec
dec
push
jae
enter
lods
jo
xor
fadds
orl
mov
push
pop
stc
mov
mov
data16
add
cmp
testb
std
lods
stc
xchg
push
scas
lret
dec
fnsave
das
stos
sbb
add
sub
mov
jno
mov
xor
mov
sbb
insb
jl
jo
push
pop
mov
pop
ds
jg
dec
adcb
outsl
xchg
sbb
imul
lcall
popa
dec
mov
pop
jb
out
shrl
cmp
das
pop
xchg
and
push
inc
out
imul
gs
stos
insb
out
lods
rol
and
xchg
mov
data16
sbbb
push
sbb
fimuls
and
fcompl
lods
mull
mov
call
xchg
sub
popf
imul
arpl
xor
je
call
int3
testl
or
std
das
lidtl
shrl
and
ss
push
adc
pop
add
ljmp
mov
sbb
and
xchg
push
or
mov
movsl
fmull
sub
fists
std
popa
in
cli
sbb
test
or
and
roll
cli
fnstcw
sub
dec
in
fdivs
ret
andb
fistpl
fidivs
js
jl
sub
or
shrl
inc
xor
jp
mov
lods
add
pop
or
push
sbb
jg
inc
sbb
rcrl
rolb
stos
fbld
nop
mov
fidivrl
outsb
cmc
in
dec
and
cwtl
mov
pushf
sub
sbb
add
outsl
jns
inc
inc
mov
xorb
fldt
int
mov
xchg
pop
inc
ret
lahf
rorb
lods
xchg
pop
mov
out
mov
jmp
push
or
movsb
popf
or
out
add
inc
enter
pop
inc
push
mov
filds
pop
jbe
insb
mov
or
xchg
dec
xor
out
movsl
nop
and
std
xor
add
xor
pusha
or
or
paddq
cmpsl
bound
popf
js
adc
fs
mov
shlb
sbb
pop
cmpsb
pop
sub
fdivrl
dec
mov
ds
hlt
xchg
mov
ret
mov
decl
xchg
jg
leave
loopne
push
xor
pop
lds
outsb
shlb
lcall
out
or
mov
arpl
cmp
pushf
out
test
fisubrl
aam
mov
dec
fsubl
clc
pusha
fldl
inc
mov
insb
mov
push
in
mov
orb
push
jno
cmpsb
mov
jns
insl
mov
imul
dec
adc
jp
or
dec
jno
push
push
mov
push
cmpb
ljmp
dec
test
test
ja
rclb
icebp
mov
jbe
dec
sbb
lods
jne
arpl
cmp
jecxz
xchg
lahf
and
clc
dec
test
sti
hlt
cmpsl
add
sbb
jecxz
xor
mov
jb
lods
shl
xor
les
mov
mov
add
lods
and
js
jmp
jb
xor
aaa
mov
nop
inc
adcb
or
fists
push
jmp
push
mov
icebp
dec
sahf
xor
insl
shll
blci
jmp
cmp
ljmp
xor
adc
and
lds
mov
adc
int
pop
dec
shrb
pushf
add
sub
mov
nop
clc
mov
loop
adc
ret
or
push
push
test
adc
sub
test
into
aam
rol
dec
push
pop
mov
push
mov
fs
jo
jge
dec
shll
leave
aad
push
hlt
cltd
insb
and
test
iret
nop
push
pop
cltd
push
mov
scas
hlt
andl
adc
popf
push
cld
sbb
lock
dec
xor
fnstsw
xor
push
into
fildll
add
or
sti
inc
jle
fidivrs
mov
decl
movsl
mov
jp
inc
push
mov
fcoml
inc
aam
cmc
push
mov
stc
dec
ja
xlat
fwait
push
rclb
sub
fistpl
aam
movsb
jl
loopne
adc
sub
or
xor
pop
lock
setp
xchg
or
clc
inc
push
int
das
outsl
jmp
test
xor
mov
mov
pop
pop
data16
pushf
pop
fldpi
outsb
mov
out
inc
mov
mov
aam
dec
mov
icebp
icebp
add
mov
or
sbb
arpl
cld
and
mov
push
lcall
mov
sbb
lods
call
push
mov
pop
sti
inc
int3
xchg
lahf
lea
stos
in
lds
xchg
push
ljmp
inc
std
neg
scas
mov
push
lds
stos
mov
icebp
mov
dec
cli
or
in
pop
lods
aad
sbbb
push
nop
sar
sub
sbb
sysexit
sub
sar
xchg
jecxz
insb
pop
ds
lds
sbb
aaa
push
jmp
dec
rcrl
cwtl
loope
incl
sbb
imul
aaa
jge
mov
jnp
js
nopl
lcall
mov
mov
mov
lods
ds
pop
stos
sbb
arpl
mov
inc
inc
inc
pop
mov
xor
inc
repz
pop
adc
xchg
dec
addl
nop
mov
xchg
repz
daa
aam
mov
adc
jnp
arpl
icebp
dec
addr16
fildll
mov
cli
mov
es
ficompl
jne
ror
inc
nop
pop
aaa
sub
push
pop
add
mov
jl
imul
or
pop
dec
lds
push
rorb
inc
movsb
and
xor
add
pop
addl
lea
pop
aas
adc
dec
rorl
orl
inc
sub
add
outsb
push
mov
sbb
jns
lret
mov
ret
adc
dec
icebp
lret
ljmp
fsub
inc
add
push
mov
xor
xor
inc
pushf
pop
in
test
in
addb
das
orl
xchg
adc
lea
int
dec
inc
out
mov
dec
add
nop
xchg
pusha
loope
into
mov
mov
lcall
loop
mov
fisubrl
cltd
popl
int
cmp
xchg
cmpb
in
movsl
or
out
andb
lret
out
push
int3
sub
leave
ret
jle
mov
aam
je
add
js,pt
testl
xor
mov
jb
adc
cmpl
push
inc
mov
icebp
dec
int3
xor
insb
nop
push
cli
dec
push
fldl
jns,pn
jg
adc
test
sub
xchg
inc
iret
cld
mov
sbb
jne
in
testb
mov
enter
cmp
cmp
repnz
and
push
es
cmpsl
out
jg
xchg
es
cmc
cmp
cmp
loope
hlt
xchg
cmc
insl
xor
lock
std
andl
sub
popf
rcrl
out
pusha
outsb
ss
push
cmp
cmp
cmc
xor
lods
movsl
fs
and
lahf
add
gs
mov
mov
out
sub
imull
xor
mov
jmp
sbb
out
dec
sbb
into
xor
sbb
mov
xor
adc
mov
out
sub
mov
dec
out
js
cmc
movsl
inc
lods
sti
lahf
mov
mov
loopne
xchg
loope
xor
je
xchg
call
adc
lock
dec
lcall
push
clc
push
sub
push
test
mov
das
test
lcall
mov
mov
inc
dec
pop
je
pop
popa
fxtract
push
pop
arpl
push
add
xor
xchg
outsl
adc
scas
pop
jae
inc
jb
ja
inc
ljmp
hlt
mov
shrl
cli
testb
fcoml
lcall
jp
inc
sbb
je
in
aad
xor
add
cltd
ret
lea
cli
repz
adc
adc
in
fcomps
lret
mov
out
gs
popl
shlb
mov
cmp
pop
mov
inc
repz
add
ja
mov
pop
aas
test
rcll
aam
mov
arpl
daa
mov
pop
ss
fisubs
sub
push
test
fisubs
xlat
cmc
and
test
fsubrs
outsb
sbb
mov
sbb
fmulp
cltd
pop
mov
rcrl
loopne
jbe
sub
cmp
xchg
mov
jecxz
sbb
ds
ret
lds
insb
xchg
dec
and
and
fbstp
or
mov
add
loopne
into
mov
and
mov
xor
or
sbb
inc
cmpsl
and
jnp
xor
cmp
mov
popa
shr
lea
in
xor
xor
ret
xchg
ljmp
push
or
in
push
loope
repnz
mov
cmpsb
cmc
pusha
in
dec
dec
and
push
push
mov
stc
or
adc
xorb
ljmp
je
push
outsb
lea
fwait
cmpsl
mov
mov
mov
stos
add
dec
pop
pop
insl
or
push
aad
lods
mov
cmp
xchg
in
repz
mov
out
jle
xchg
rolb
pop
fwait
jg
adc
sbb
and
into
sub
fistpll
and
dec
into
mov
xchg
inc
mov
add
pop
jg
xorps
les
cli
bt
lret
movsb
cld
cmp
js
pop
mov
and
aaa
lods
jns
pop
mov
subb
rorl
sbb
adc
es
out
xchg
rol
or
push
add
cli
inc
cmp
add
jns
dec
jno
frstor
push
mov
jle
pop
inc
pop
jmp
mov
pop
xchg
fsubs
adc
inc
mov
scas
in
iret
mov
fistpll
fdivrp
xchg
add
push
cwtl
test
cltd
mov
addr16
cmpsb
push
fsubrs
js
adc
gs
push
jb
dec
xor
movsl
push
and
or
cmc
sub
jl
sar
loope
xchg
clc
in
sbb
lahf
in
dec
dec
mov
dec
adc
loope
xor
stc
xor
lret
icebp
cmpsb
jnp
xor
xchg
out
cwtl
rolb
js
dec
sub
outsb
pop
cmp
idivb
sub
stos
subb
mov
lock
cmp
inc
loop
shlb
les
pop
std
lods
jno
int3
mov
loope
and
pop
insl
stos
mov
xchg
outsb
mov
test
add
xchg
sbb
das
sarl
push
in
mov
iret
mov
popf
mov
dec
movsl
test
pop
fnsave
in
and
scas
dec
mov
ficompl
bound
mov
inc
cltd
int3
cli
mov
fs
in
fisubl
mov
scas
sahf
movsb
xor
in
popa
jae
xlat
cli
cmp
inc
adc
xchg
mov
aam
xor
jge
push
les
fisubl
sbb
push
mov
sbb
xchg
xlat
push
inc
sub
dec
cltd
aad
xor
adc
add
xchg
pop
daa
or
rorb
push
fs
fsubs
jge
shll
lcall
push
sub
fisttpll
enter
push
xor
stos
sub
sbb
mov
rclb
ds
jne
fwait
data16
test
aam
jmp
stos
mov
ljmp
lds
or
outsb
andb
xor
rorb
or
rclb
cli
cs
fstpl
inc
repnz
and
inc
mov
addr16
std
cwtl
mov
es
or
loope
inc
popf
rcrl
cmp
adc
fldl
cmc
cmp
fstps
push
mov
loop
pop
stc
es
push
mov
in
js
jae
sbb
les
xchg
popf
jge
insl
fdiv
into
ret
lods
popf
sub
mov
or
mov
jle
fisubrl
or
and
push
sahf
cmpsl
subb
icebp
push
int3
and
lret
add
outsl
inc
xchg
imul
xchg
dec
push
loopne
push
fsubrs
sbbb
inc
cwtl
int
mov
push
sub
loope
mov
push
push
fmulp
test
add
je
inc
enter
cmpsl
sub
add
addb
xchg
pop
cli
jb,pt
clc
ja
fsub
cld
lock
mov
aas
sbb
mov
mov
sahf
aas
lods
jae
or
mov
push
push
sbb
fwait
cmp
and
scas
gs
aad
jg
std
sahf
lock
jle
dec
pop
adc
fucom
push
dec
adc
xchg
lods
fnstenv
test
lea
jb
push
push
out
xchg
sbb
sub
inc
or
pushf
or
mov
lds
sbb
jle
mov
inc
mov
shrb
xor
and
push
sub
push
mov
lahf
addr16
iret
push
push
inc
les
bound
icebp
loopne,pt
in
push
arpl
dec
ficompl
lods
mov
pop
or
push
shlb
jns
cli
pop
fs
mov
xchg
mov
xor
adc
push
jmp
daa
outsb
sub
lods
mov
xchg
icebp
pop
push
jo
push
pop
fiaddl
sti
add
dec
add
dec
add
mov
add
jo
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sub
call
jno
xlat
les
cs
pop
gs
loope
hlt
sbb
fidivrs
mov
inc
dec
add
mov
mov
jge
push
mov
pop
mov
movswl
add
mov
sub
jmp
cli
stos
or
push
and
cmp
push
mov
sub
mov
dec
jne
jmp
adc
mov
cmpb
jnp
adc
xchg
les
inc
sbb
mov
add
xchg
mov
or
aaa
sub
mov
dec
mov
ljmp
das
ljmp
and
xchg
imul
aaa
out
imul
jge
pop
movl
sahf
push
scas
into
loop
js
push
add
out
push
cs
inc
xchg
hlt
dec
out
add
out
mov
push
push
xor
daa
lds
mov
dec
sub
test
cmp
in
ss
fstpl
and
sbb
mov
punpckhwd
jae
adcb
stc
pop
rolb
add
mov
cmovne
mov
push
lcall
ss
aam
and
sbb
and
mov
push
lret
adc
xchg
data16
cmp
cwtl
jg
lret
lods
test
and
lods
push
pop
lcall
jb
pushf
fistps
add
inc
pop
xchg
jecxz
cmpl
in
add
inc
xor
mov
xor
iret
dec
add
ds
fldcw
push
in
jne,pn
ljmp
fidivl
cli
call
jge
xchg
sbb
stos
or
test
pop
mov
ret
sarb
sub
sbb
fsubl
sbb
nop
fisttps
add
data16
shr
or
and
scas
jae
ljmp
jo
adc
lahf
outsl
int3
push
or
and
daa
std
cs
add
cpuid
and
jb
flds
shll
sbb
test
fmull
xchg
cwtl
ss
add
inc
andl
test
fs
shlb
daa
cmp
cmp
xor
pop
add
add
repz
popa
sbb
add
xor
sti
push
jb
xchg
jae
mov
add
ds
mov
popf
or
push
or
xor
stc
jle
add
push
add
cmp
test
sbb
rorb
je
mov
pop
sbb
mov
pop
test
sub
push
xlat
rcl
clc
mov
jge
mov
das
in
push
mov
add
pop
das
xor
fildl
popf
mov
sbb
cld
inc
ds
jmp
popa
adc
sbb
pop
imull
fnstenv
pop
jecxz,pn
jns
adc
ja
mov
jecxz
sbb
mov
mov
or
es
outsb
shll
jnp
scas
inc
mov
lret
sbb
mov
aas
inc
mov
sbb
mov
cmp
dec
pop
addr16
rclb
xor
sbb
xor
jge
sbb
xlat
mov
sbb
mov
std
sbb
cmpsl
adc
sbb
jmp
nop
and
jl
push
out
jl
sbb
fwait
sbb
jl
sub
cmp
jl
lea
ror
sbb
and
xchg
cltd
jb
adc
sub
mov
in
cmp
adc
xchg
popa
adc
les
loope
popa
adc
adc
mov
sbb
in
push
jl
popf
sub
sbb
or
mov
lods
enter
movb
adc
push
and
dec
push
and
push
and
xor
xlat
dec
mov
dec
push
mov
sbb
inc
decb
xlat
icebp
cli
gs
mov
gs
les
xchg
inc
xchg
and
and
mov
jp
adc
enter
lea
xlat
popf
and
rolb
dec
mov
inc
js
popf
imul
xor
xlat
or
xchg
jle
sbb
or
mov
lods
enter
push
or
jp
shrb
push
sbb
mov
push
out
jl
adc
les
lret
jp
in
jnp
mov
sbb
mov
xor
xlat
pop
sbb
add
and
lds
scas
pop
sbb
movsl
or
movsb
ljmp
mov
push
flds
dec
or
movsl
insb
inc
rclb
mov
mov
rclb
rol
pop
das
adc
ja
mov
push
mov
fadds
dec
or
movsl
push
test
fwait
push
sub
mov
jle
sub
pop
scas
xchg
fadds
dec
or
movsl
cmovle
mov
jle
sub
pop
scas
xchg
leave
xchg
or
movsl
cmovle
jnp
lods
ss
mov
sbb
pop
or
jp
rol
pop
das
adc
ja
into
jg
sub
pop
scas
push
scas
cmp
jnp
sahf
push
push
pop
mov
dec
fistpll
test
mov
mov
das
xchg
xchg
and
out
mov
insl
js
adc
lret
pop
not
test
jg
mov
inc
mov
insl
mov
adc
test
sbb
mov
add
jnp
lret
sbb
mov
sbb
std
sbb
lock
mov
fiadds
sub
jl
jne
js
sbb
ret
jp
dec
repz
inc
and
or
mov
lahf
dec
jl
scas
mov
in
cltd
jb
sbb
or
xchg
dec
icebp
xchg
mov
adc
pop
sbb
insb
jo
clc
js
xchg
rcrl
insb
lcall
inc
lret
lret
sar
mov
jl
push
jge
bound
in
lods
dec
xor
jp
hlt
mov
int
xlat
cmpsl
xor
jb
test
inc
and
and
mov
xor
ljmp
jp
mov
sbb
mov
sbb
mov
sbb
popa
adc
and
jp
enter
mov
pop
push
jl
sbb
mov
sbb
add
jp
mov
sbb
mov
mov
je
fisttpl
push
fmul
outsl
ds
ficomps
add
lret
icebp
aas
cmp
dec
pop
gs
enter
in
loope
sub
jnp
enter
enter
push
cmp
insb
jae
sub
mov
int3
rcll
pop
and
mov
mov
mov
in
adc
loop
pop
dec
les
addb
sar
popf
hlt
out
fld
es
and
cli
mov
daa
adc
movsl
fidivrl
les
in
mov
fisubrs
imul
xor
pandn
jb
push
cmc
imul
aad
ljmp
sub
xchg
adc
push
xor
fsubrl
out
outsl
pop
aaa
inc
mov
sub
xrelease
adc
mov
add
jnp
loopne
scas
jb
cld
repz
sbb
es
sub
mov
nop
aas
push
lods
pop
add
xchg
xor
pop
xchg
lods
mov
push
in
pop
cmp
pop
inc
sbb
arpl
bswap
fidivrs
jmp
mov
fs
into
flds
pop
stc
movsl
sahf
sbbb
in
xchg
adc
mov
xchg
xchg
cli
ds
fstpt
cmpsl
popa
cmp
mov
enter
cmpl
inc
xchg
cltd
and
inc
push
pusha
xor
shrb
pop
stc
daa
dec
mov
enter
xlat
and
shr
jmp
xchg
mov
mov
jae
pop
imul
setne
inc
jge
sub
add
inc
lahf
aas
ja
push
stc
cmp
xor
inc
mov
pop
std
dec
sub
mov
xor
mov
or
dec
sahf
jge
sbb
lret
sbb
cmpsb
or
jmp
shrl
call
lahf
shl
in
std
jb
test
xchg
xchg
insl
mov
pop
sarb
movlps
xor
fcoml
std
dec
mov
out
mov
or
sub
fcmovbe
iret
jmp
and
aaa
inc
ja
mov
mov
dec
ds
sbb
stos
cmp
out
jg
enter
sbb
std
testl
gs
outsb
shl
inc
lods
ret
roll
pop
xchg
gs
shlb
ljmp
loope
fistps
ret
sub
mov
lret
dec
pop
gs
lahf
loope
push
mov
add
mov
mov
push
add
mov
xor
shld
ja
cld
add
add
add
or
add
add
add
dec
add
mov
add
jo
add
pop
adc
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
adc
hlt
pop
adc
cwtl
pop
adc
mov
adc
movsl
pop
adc
mov
add
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
pop
adc
add
add
fcomps
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
pop
outsl
and
daa
add
pop
lods
in
jge
call
rcl
mov
sub
mov
mov
adc
or
inc
int3
pushf
xchg
push
sarb
negb
cs
xor
mov
ds
mov
sbb
subl
imulb
pop
push
std
loopne
test
push
and
adc
mov
and
adc
xor
cmp
jl
xor
outsb
pop
jg
jno
push
push
jno
subl
imul
adc
fstpt
loopne
sub
xchg
jle
xlat
inc
loop
cmp
in
scas
aas
popa
lods
insl
mov
jp
jbe
and
or
sahf
fisubl
xor
outsb
add
jmp
cli
ficompl
insl
jg
insb
xor
jns
sub
xchg
jmp
bound
test
xor
jb
fistl
xchg
ljmp
push
cmp
mov
inc
and
cmp
outsl
jmp
adc
adc
push
fnsave
or
fisubs
sub
adc
sahf
popa
mov
dec
jns
dec
andl
inc
test
mov
jno
pop
test
xchg
or
lahf
inc
jmp
repz
cmc
std
mov
mov
mov
xor
push
in
cltd
cmpsb
jl
aad
icebp
ret
pop
or
in
in
jae
cmc
insl
faddp
jg
jle
or
ret
loope
adc
hlt
addb
dec
scas
sub
inc
xchg
dec
popa
ret
roll
test
inc
popa
in
shlb
dec
ds
xchg
mov
jp
lds
mov
inc
test
pusha
mov
fisttpl
xchg
imul
xor
ja
pop
loopne
dec
mov
lods
xlat
xchg
stos
mov
mov
test
sahf
sti
and
push
stc
mov
cmp
pop
adc
sub
xor
shrb
insl
mov
or
push
popf
std
cmp
pop
inc
fstpt
ficompl
mov
pop
in
inc
mov
movsl
rcl
test
in
int
nop
mov
xchg
pop
and
add
jbe
fistps
aam
popf
loopne
dec
insl
pop
jge
clc
test
add
fdivr
icebp
and
xchg
out
and
cltd
mov
shl
aad
fstps
sbb
test
push
jb
data16
push
dec
mov
push
cmpsl
scas
repnz
fs
xor
mov
sub
xchg
mull
lds
mov
add
add
rcrl
dec
cwtl
hlt
mov
lret
in
xor
xor
jmp
cmc
sbb
cmc
cmp
ss
outsb
cmp
stc
in
adc
scas
pop
cmc
scas
movntq
out
pop
bound
jns
pop
imulb
fbld
push
loope
imul
decb
cmp
cld
lods
dec
sti
or
aas
sub
push
xchg
push
int3
adc
sbb
outsl
mov
iret
and
and
inc
hlt
adc
xchg
insb
push
sub
sbb
mov
in
call
and
scas
dec
js
cs
orl
mov
lss
inc
lods
mov
jl
iret
jne
sbb
mov
in
and
fsubrs
mov
jg
cmp
test
into
dec
cli
mov
out
gs
dec
sub
ds
xchg
push
sub
outsb
out
pop
arpl
insb
scas
mov
pop
adcl
out
mov
adc
lods
in
nop
xchg
push
pusha
movsl
int3
push
sbb
push
je
or
lods
jns
or
xor
mov
jge
jecxz
push
inc
pop
loope
xor
lods
shrb
int3
lcall
lret
push
out
data16
or
popf
es
sub
bound
jnp
adc
sub
cmpsl
iret
pop
sub
mov
jnp
iret
mov
mov
popa
arpl
push
and
xchg
sub
mov
loope,pt
push
lods
push
nop
arpl
xchg
push
inc
sub
cmp
shrb
in
test
mov
scas
lods
orl
mov
sub
adc
lahf
xor
adc
test
pop
mov
push
push
pop
cmpsl
mov
pop
mov
repnz
data16
mov
mov
or
aam
cmp
mov
vcmpltps
fnstcw
and
mov
add
addr16
or
bound
lahf
bound
mov
mov
jns
lcall
je
hlt
push
push
mov
insl
xchg
ljmp
in
lods
mov
and
cmp
les
jp
or
das
mov
jo
dec
jbe
imul
sub
jb
mov
sub
sbb
dec
fidivl
push
fisttpll
mov
xor
ljmp
mov
xchg
les
mov
or
in
movsb
or
cmp
in
adc
xor
cli
mov
xchg
add
or
xchg
aas
fmull
push
push
out
mov
lock
sub
negb
out
xor
fisttps
ja
mov
mov
jp
jmp
sbb
shrb
rol
mov
mov
pop
gs
mov
jno
push
lret
xchg
cmp
cmpsb
fstps
mov
popa
cmp
xorl
jp
lcall
dec
sub
push
lea
adc
pop
js
xchg
test
push
and
cmpsl
pop
insl
scas
xchg
dec
movsb
jno
dec
adc
sbb
mov
popa
xchg
adc
jbe
xchg
sbb
sub
repnz
cmp
sub
test
push
sahf
sbb
xchg
push
push
ret
lock
sub
addr16
fidivrl
ret
sbb
push
jne
and
push
add
in
popf
xor
add
fwait
add
add
sub
or
mov
xor
fdivrs
leave
fnstenv
mov
mov
dec
fstpt
sub
pop
rclb
mov
test
jae
mov
dec
xlat
and
es
fadds
dec
mov
push
imul
sbb
mov
cmpsb
daa
push
mov
sub
jbe
mov
add
cmp
adc
ret
je
cmpb
dec
aas
pusha
in
mov
cld
adc
mov
outsb
dec
lea
jp
cli
repnz
jp
jle
pop
jge
cs
and
cmp
rcrl
cmp
fs
imul
add
push
pop
adc
leave
aaa
add
call
jns
jge
mov
in
xor
jb
sbbl
in
frstor
mov
jae
mov
sti
js
aaa
ret
push
movsl
ss
adc
xchg
xor
mov
aas
test
xchg
xchg
scas
testl
mov
jle
cmp
mov
mov
mull
ret
enter
cmpsb
sbbb
movsb
cmpsb
aas
or
loopne
mov
and
pushf
imul
jno
loope
sbbb
and
test
mov
outsl
mov
jmp
test
fnstcw
mov
in
inc
negb
xlat
inc
hlt
repnz
cmp
xor
shlb
sub
xchg
inc
sahf
or
imul
push
int3
bound
xchg
xchg
pop
jnp
pop
clc
inc
pushl
inc
out
sti
movsl
shlb
dec
pop
lds
inc
cltd
inc
jb
loopne
mov
and
adcl
push
cmp
jle
ds
jns
sub
nop
test
sbb
in
mov
das
pop
jge
rcrb
ljmp
mov
and
leave
add
leave
jmp
sbb
or
lcall
int3
je
gs
mov
mov
push
test
cmp
insl
stc
in
shll
cmp
mov
xchg
push
xchg
and
pop
ret
push
push
mulb
imul
xor
sarl
jb
pop
mov
pop
arpl
test
dec
dec
pop
rcrl
cmp
fdivrl
jl
push
mov
call
mov
xor
andb
outsb
shlb
jmp
imul
sub
in
aam
jmp
popf
inc
sbb
dec
sub
mov
push
mov
outsb
lock
ds
incb
sub
and
lret
shrb
adc
sub
push
mov
maxps
into
xor
lret
hlt
ss
xor
and
ret
mov
shrb
sbb
stc
nop
cs
dec
mov
ljmp
mov
jbe
mov
sbb
push
aas
ljmp
or
cmp
call
cmpl
andb
test
xor
dec
int
push
xor
imul
fisubl
pop
jmp
sub
in
int
inc
cmpsb
cmpsl
xchg
jnp
mov
inc
jnp
icebp
mov
loope
int3
fs
add
js
sub
or
pop
rcrb
cltd
adc
lret
fldl2t
outsb
ds
pop
sub
push
sub
icebp
sub
insb
outsl
inc
cld
insl
push
sbb
shlb
outsl
sbb
ret
cmp
loopne
pop
dec
pop
hlt
test
scas
sbb
mov
fldcw
data16
iret
xchg
sbb
or
test
cmp
lods
aad
mov
mov
dec
popf
into
int3
mov
ljmp
or
mov
fsts
push
and
or
dec
repz
fisttpl
xchg
push
ret
or
pop
out
push
test
lock
insl
push
and
cmp
mov
daa
aam
loope
push
lods
add
push
fidivrl
xlat
pop
es
jp
jg
pusha
push
scas
shl
mov
outsb
out
lds
cmpsl
jmp
push
je
test
and
and
dec
lods
push
mov
jecxz
push
in
fstps
fs
jns
stos
dec
aad
push
imul
push
cmp
aam
push
jo
push
xor
repz
or
ljmp
add
hlt
sub
mov
shr
enter
jae
mov
adc
cmp
movsl
xlat
adc
dec
mov
movsl
sub
imul
fisubrs
imul
fwait
add
cli
out
sbb
push
lcall
pop
push
adc
fsts
outsb
sub
xchg
sbb
add
mov
outsb
adc
imul
push
fdivrl
pop
pop
push
test
xchg
adc
iret
fiadds
push
pusha
and
push
jp
popf
jno
leave
sti
lret
test
push
add
aas
divb
pop
sahf
fimull
aaa
pop
and
push
adc
and
jb
or
inc
and
cmpsl
mov
ficoml
push
loop
mov
sub
pop
jbe
inc
lds
das
push
cmp
or
insb
mov
popf
arpl
imul
pop
inc
xchg
mov
les
lret
jae
adc
inc
mov
stos
mov
dec
lahf
mov
sub
mov
negl
mov
nop
sahf
or
cmp
test
stc
inc
add
xchg
cmp
jp
cmpl
adc
repz
mov
repnz
mov
push
dec
mov
inc
jbe
and
adc
xchg
mov
outsb
loop
loop
into
cmp
adc
mov
es
adc
repnz
shlb
cmp
cmpsl
das
loope
and
lock
cltd
pusha
mov
int3
push
stos
lret
mov
dec
adc
clc
inc
sbb
mov
or
add
jecxz
sbb
fcomps
dec
push
mov
in
outsb
jmp
push
jb
out
mov
sub
cmpsl
outsb
and
jg
sub
inc
mov
mov
dec
xlat
scas
int
and
and
xlat
xchg
push
ja
or
loope
addb
in
cmp
out
sahf
mov
mov
push
adc
into
test
pop
fcomp
jmp
je
mov
xchg
dec
push
jbe
mov
inc
push
and
pop
jnp
sbb
cli
or
repz
jo
fsubrl
cmpsb
xchg
xchg
mov
push
jae
sbb
and
lret
mov
push
xor
lahf
inc
popa
inc
push
cli
cld
push
add
jae
aaa
cmc
xorl
jmp
and
inc
gs
xchg
in
shrl
shr
or
call
push
sub
jecxz
mov
inc
xor
out
fcoms
fdivr
sub
sahf
stos
lods
cmpsb
xchg
and
pop
xchg
push
fwait
mov
inc
repz
in
jecxz
imul
mov
xchg
fistpll
xchg
loopne
subb
dec
or
call
scas
shl
inc
lods
nop
jl
sub
jo
and
dec
xor
mov
dec
insl
pop
and
lret
dec
mov
sti
mov
sub
pop
jns
cmpl
inc
or
out
dec
fisttpl
dec
adcl
jne
cwtl
sub
out
movb
gs
inc
call
mov
pushf
sbb
adc
les
fldl2t
test
jmp
dec
je
scas
sbb
dec
mov
xchg
sbb
imul
xor
mov
push
pop
cmp
cmp
cld
dec
popa
dec
or
add
adcl
mov
inc
mov
inc
mov
arpl
jnp
jmp
outsb
push
ljmp
stos
adc
insl
filds
movsl
dec
loop
and
ret
in
test
or
fimull
adc
mov
enter
loopne
xchg
incb
hlt
xchg
fidivl
sub
dec
pop
xor
add
pop
aaa
or
sbb
daa
shl
mov
lds
sbb
cmp
test
push
cmpsb
mov
or
jg
icebp
adc
pop
add
loopne
mov
dec
xchg
inc
xchg
hlt
mov
jnp
call
stos
cli
xchg
je
push
mov
mov
and
and
cmp
daa
inc
inc
xchg
or
cmp
xchg
pop
push
jle
lcall
cmpsb
inc
pop
std
test
lock
and
enter
mov
xor
lock
lock
fsubrl
mov
ja
cmp
push
or
out
push
fldcw
lods
fistl
adc
int
jmp
mov
lds
push
pushf
iretw
dec
pop
mov
jp
out
add
pop
push
in
flds
test
cmp
xchg
adc
mov
fnstenv
push
push
aaa
call
mov
add
or
cmpsl
pop
cmp
loopne
adc
cld
mov
stc
in
mov
cs
and
mov
push
out
cmp
mov
mov
es
push
imul
insb
outsb
push
cltd
or
mov
and
fstl
insb
push
pop
xlat
adc
das
imul
xor
sub
imul
jmp
xor
incl
dec
test
cmpsl
push
sbb
dec
cmpsl
xchg
xchg
cli
cwtl
cmp
lock
inc
add
cmp
movsb
cmp
imul
icebp
lret
push
outsl
sarl
imul
in
aad
sub
jge
cmp
pop
push
mov
mov
mulb
leave
pop
sub
shll
jo
test
scas
stos
repz
stc
in
enter
icebp
shl
adc
lods
std
cmp
jno
push
pop
dec
or
ret
fldcw
clc
dec
pusha
xchg
test
adc
in
push
sbb
mov
in
jp
or
lea
mov
add
push
xchg
mov
xlat
popf
xchg
mov
xchg
lcall
xchg
daa
jl
jmp
repnz
jle
adc
inc
push
push
pop
sub
cmpb
adc
mov
inc
lcall
jno
mov
pop
mov
enter
xchg
rorl
push
jo
xchg
les
mov
mov
mov
mov
xor
xlat
mov
pop
xchg
in
mov
push
test
stc
fs
mov
jne
icebp
repz
push
jge
insb
add
lcall
loope
loopne
int3
pop
adc
sub
xchg
push
cli
and
popa
xchg
or
fwait
fwait
mov
out
popa
cwtl
add
clc
shrb
cmpsb
sub
pop
fdiv
out
pop
xor
cld
push
cwtl
sub
sbbb
cmp
or
jae
andb
add
outsl
xchg
inc
push
out
push
dec
fwait
jecxz
subb
mov
xchg
sbb
mov
cmc
pop
outsl
push
pushf
mov
add
fs
lods
repz
or
scas
xlat
pop
rorl
setp
in
stos
push
lods
fldcw
jmp
ds
icebp
test
cmp
adcb
jl
in
lds
cmp
and
dec
xchg
pop
negl
or
cli
fnstsw
mov
ds
test
jne
outsb
and
inc
int3
test
push
mov
lds
push
jmp
outsb
cmp
or
loopne
ret
and
jl
xor
pop
cmpsb
xor
mov
jbe
lock
repz
cmp
jne
cwtl
popf
pusha
adc
test
ret
add
int3
daa
xchg
pop
lret
push
jge
push
lods
push
xor
add
in
mov
es
jnp
dec
sar
ds
mov
je
xchg
cmpl
sahf
push
or
pop
adc
ljmp
les
jo
sub
sar
mov
stos
xlat
orl
ss
mov
dec
mov
lea
mov
pop
popf
out
adc
jae
or
push
and
rorb
dec
push
jg
mov
out
mov
push
fs
push
xor
out
push
xchg
inc
or
iret
sub
mov
in
or
les
push
cmpsb
mov
je
jle
or
jl
jp
xchg
mov
push
jp
inc
ja
daa
movsl
lahf
fwait
aaa
shlb
mov
xchg
mov
sbb
push
ljmp
shll
add
scas
in
xor
test
xchg
sbb
pop
andl
mov
sahf
stc
loop
mov
pop
mov
jle
orb
dec
rcrb
mov
jmp
xchg
mulb
mov
outsl
and
imulb
pop
adc
inc
pop
mov
inc
add
adc
popa
adc
stc
and
je
inc
pop
rcrb
mov
shr
push
inc
dec
iret
call
and
pop
add
mov
inc
fldl
push
test
sub
sub
fdivr
ror
sahf
daa
es
icebp
scas
int3
xor
out
rol
sbb
or
imul
sbb
mov
fidivrl
fs
daa
lds
mov
pop
mov
repnz
lret
lods
xor
inc
push
push
mov
adc
gs
push
insb
adc
push
cmpsb
loopne
push
repz
aaa
push
sub
dec
sub
xor
jns
or
popa
add
xchg
add
and
andb
push
dec
cli
mov
sbb
js
andl
pop
jle
dec
pop
mov
xchg
jo
dec
nop
lret
int3
sbb
cmpb
jp
sbb
shrb
or
in
ds
pop
sub
pop
mov
xchg
popa
jle
sub
sbb
sub
mov
jle
loop
cmp
cmp
push
adc
jb
mov
mov
jne
mov
das
outsl
shrl
push
sub
cld
test
fwait
jl
hlt
idiv
out
mov
add
xchg
and
jg
fidivrs
xlat
sub
xchg
xor
jae
adcb
and
out
sbb
mov
popa
fnstcw
sub
sahf
mov
push
daa
mov
lcall
jmp
out
push
imul
sbb
addr16
pop
dec
in
icebp
and
mov
adc
dec
mov
cmpl
ret
push
fsubs
mov
in
jmp
jnp
fdivp
movsb
sbb
stc
cwtl
add
test
ret
repz
add
pop
push
adc
cwtl
jae
dec
xlat
mov
push
cwtl
mov
stos
popf
jmp
clc
mov
mov
cmp
sub
jo
scas
mov
and
nop
es
ljmp
mov
shrb
ja
imul
mov
fwait
pop
pop
lock
xchg
out
inc
adc
loope
imul
xor
sbb
testl
inc
mov
or
cli
rclb
xor
xchg
sbb
and
pop
in
add
mov
pop
lods
leave
je
lods
addr16
xor
in
loop
cmp
sahf
scas
mov
pushl
sub
and
nop
xor
mov
ss
cmp
mov
pop
add
flds
push
fcompl
sbb
arpl
push
push
push
lea
insb
sbb
in
imul
cmpl
iret
mov
adc
or
test
sahf
loopne
sub
or
fcomps
xor
cmp
sbb
xchg
ljmp
mov
inc
mov
lcall
mov
xchg
fstp
and
fwait
sub
les
test
push
mov
push
outsb
sahf
clc
pop
loope
fisttps
pushf
mov
push
add
adc
cmp
jl
adc
stos
or
test
inc
xor
mov
dec
into
push
enter
sbb
lods
aas
sub
fnstenv
adc
jne
hlt
pop
movsb
fsubr
std
xor
xor
movsl
inc
pusha
mov
shrl
cld
std
dec
mov
push
push
and
cmpsb
sbb
mov
nop
mov
enter
movsb
std
fdivs
lret
lgs
mov
or
call
jge
in
gs
imul
mov
xchg
sub
and
out
xchg
jo
lods
loopne
xchg
jno
vmwrite
insb
add
sbb
jp
or
push
cmp
and
cli
out
mov
icebp
jp
xchg
push
mov
cmp
push
xor
fmulp
mov
out
inc
mov
xchg
and
pop
dec
and
mov
push
jo
xchg
rol
sahf
sbb
sti
das
ja
mov
mov
pushf
in
lea
fldt
cmp
adc
xchg
ja
arpl
jmp
das
adc
xor
add
and
sbb
in
or
outsl
pop
call
adc
aam
dec
lcall
cmc
xor
xchg
lods
push
pop
pusha
sbb
fistps
mov
jne,pn
fs
dec
sar
jo
outsb
aad
frstor
adc
hlt
push
movsl
xchg
repz
push
lea
pop
dec
cmp
mov
ret
fidivs
out
mov
rorl
xor
js
or
jae
push
push
mov
jo
lds
jb
mov
lock
mov
repnz
jae
pop
xlat
push
push
mull
xlat
pop
pop
or
call
mov
je,pn
popf
xor
xor
mov
add
mov
dec
stos
inc
mov
mov
fcoml
fistps
mov
or
mov
mov
inc
jg
aam
adc
xchg
imul
gs
leave
mov
jo
add
ja
jns
cltd
outsb
imul
daa
lods
rol
dec
and
adc
fs
rclb
and
icebp
pop
jg
jne
testb
cmpsb
and
cmp
out
add
jo
or
inc
data16
mov
and
movsl
hlt
xor
adc
xor
inc
mov
add
and
jmp
push
lods
loop
jb
iret
flds
rol
mov
fucomi
mov
test
jle
fdivrl
shll
lods
xor
loop
push
and
inc
pop
incb
cmpsl
out
stos
sub
insl
cmpsl
lcall
push
inc
insl
sbb
test
aad
and
cmp
jecxz
insl
or
and
int
int
and
mov
movsb
add
push
push
sub
xchg
ret
movsb
inc
pop
xchg
and
mov
dec
pop
test
jle
dec
shrb
test
dec
xchg
flds
cmc
mov
aam
pop
pushf
push
movd
push
test
in
lea
mov
pop
push
std
loopne
xchg
and
sbbb
mov
cmp
push
cmp
in
arpl
dec
popa
xlat
dec
dec
cmpsl
out
out
test
fucomi
outsl
mov
jnp
push
int
add
pop
jbe
adc
jo
inc
dec
mov
pop
xlat
stc
dec
rcrb
adc
movsl
lahf
cli
push
mov
xchg
xchg
push
fnstsw
lods
dec
push
mov
popf
cmp
add
jmp
out
ja
inc
test
xchg
cmp
inc
cmp
movsb
inc
jae
pop
repz
lret
mov
lods
inc
fdivrp
dec
jecxz
popf
pop
test
dec
dec
adc
popa
xchg
loopne
mov
dec
and
cwtl
int3
jb
outsl
jns
sarb
sbb
out
adc
push
filds
ja
adc
dec
fldl
fs
dec
clc
mov
nop
sbb
or
jns
lds
lahf
sbb
jo
xchg
gs
jnp
push
push
sbb
adc
mov
int3
sbb
jmp
test
jl
push
insb
xor
pop
dec
sub
lods
negb
dec
jecxz
mov
pop
sbb
lahf
push
push
or
lods
and
cmpsl
push
dec
lret
pusha
inc
mov
scas
rorl
lods
imul
add
in
dec
cs
shll
inc
dec
mov
out
sahf
mov
fiaddl
cld
dec
gs
in
jnp
repz
fs
xchg
in
jecxz
sbb
xchg
xlat
xor
pop
lods
sub
les
mov
jns
pop
js
mov
mov
xchg
pop
leave
add
pop
jae
cmpsl
sbb
ja
inc
mov
lret
scas
insb
dec
pop
add
mov
push
aaa
xchg
pop
xchg
xor
pop
pusha
popf
mov
fmuls
dec
test
gs
int
sub
sbb
pusha
sub
outsl
adc
or
sbb
daa
sub
aad
nop
shlb
xor
adc
inc
xchg
int3
unpckhpd
jae
mov
mov
xor
inc
mov
xchg
xor
cmp
push
or
hlt
dec
pop
shll
out
pop
test
dec
movsl
lock
cmp
subb
dec
fs
mov
mov
xrelease
xlat
push
inc
and
jnp
push
test
push
xor
xchg
dec
enter
jo
xchg
mov
mov
mov
rol
jns
or
into
pop
loop
push
push
inc
or
hlt
push
or
sbb
or
fwait
shrb
and
inc
mov
stos
sub
mov
jb
lret
lock
jp
push
int
insb
shll
mov
insl
into
fldt
in
push
pop
and
loopne
jnp
pop
jecxz
leave
iret
pop
or
dec
jp
cmp
cmp
or
idivl
lea
sub
adc
pop
dec
xchg
ret
add
popf
iret
sahf
scas
mov
dec
add
jle
aas
cmp
cmp
push
sbb
dec
pop
mov
aaa
add
fisubrl
or
loopew
je
jl
xchg
fcmovbe
add
mov
loope
pop
pop
mov
imul
mov
and
mov
jo
lret
mov
mov
dec
add
cmp
ja
and
test
or
lret
cmpl
repz
or
aaa
mov
inc
leave
pop
sbb
das
aad
paddsb
sub
sti
jno
ds
jbe
or
out
out
inc
inc
lret
dec
push
shlb
or
cmp
rorb
test
pop
fiaddl
ds
subl
jae
inc
out
sahf
xor
push
test
addr16
xchg
imul
sub
sahf
fbld
outsl
or
push
nop
pushf
shrl
inc
ret
mov
jmp
xchg
loop
icebp
or
emms
pop
xchg
cmpb
pop
dec
scas
clc
pop
xor
mov
inc
sbbl
jnp
mov
sarb
shl
mov
xor
cmp
add
sub
dec
fwait
mov
les
and
idivb
pop
push
fists
mov
pop
pushf
nop
inc
dec
ds
push
mov
mov
lahf
daa
repnz
push
push
dec
pop
jp
pop
xor
leave
daa
push
test
mov
lret
pushf
scas
push
mov
les
and
das
mov
mov
or
mov
outsb
cmp
and
mov
dec
test
cmp
jmp
jno
nop
cwtl
pushl
mov
loopne
mov
stos
lahf
test
mov
mov
out
mov
es
addb
clc
ret
mov
movsb
pop
repnz
and
shlb
dec
xchg
sub
test
jle
lcall
into
fmuls
movl
sahf
data16
push
or
and
cmp
xchg
ret
mov
aaa
shrb
mov
fidivrl
fldcw
jno
fs
je
xor
int
sbb
lds
outsl
inc
or
inc
mov
add
out
insb
xchg
sbb
cmp
imul
imul
stos
sub
out
ds
adc
add
xor
add
movsl
adc
scas
add
mov
add
shll
mov
std
xor
or
xorb
jne
repz
mov
jl
or
adc
push
xor
add
sub
xchg
cmp
insl
cmp
repz
bound
cli
lea
xchg
ja
jb
push
fcmove
dec
cltd
ljmp
xchg
shr
js
mov
loope
lcall
lcall
push
xchg
ret
inc
adc
mov
cmp
outsl
fxch
mov
cs
adc
or
pop
daa
test
inc
cmp
dec
into
push
add
scas
test
jle
dec
pop
insl
or
push
pop
push
iret
addr16
or
xor
mov
inc
clc
or
jle
pmaddwd
push
cmp
scas
lds
test
andl
jecxz
out
in
icebp
popf
stos
mov
ret
xchg
push
es
pop
mov
nop
inc
out
scas
inc
inc
into
inc
inc
cmpb
jmp
loop
jp
out
scas
cli
aam
jge
daa
mov
sbb
and
loopne
aad
jecxz
out
fadd
xor
pop
jle
push
push
loop
or
xchg
fcomip
neg
lret
jmp
lock
mov
mov
mov
pop
mov
das
les
cmp
negb
xor
shlb
mov
inc
ds
mov
or
cmpsb
cmp
push
into
arpl
ja
flds
add
fsub
sub
ret
cmp
mov
neg
dec
pop
mov
add
mov
pop
call
add
fs
xor
mov
pop
jmp
sub
jne
movsb
test
ja
mov
mov
jno
repz
dec
subb
jno
std
imull
pop
cld
cmp
bound
jne
cmpsl
test
shrl
sbbb
xlat
xorl
and
fdivrs
xchg
out
cmp
faddl
and
sub
cmp
int
ror
iretw
insl
mov
mov
or
cs
inc
xchg
jcxz
jmp
aad
ds
push
imull
daa
stc
rcr
orb
fdivrl
xor
pop
int3
sbb
cmp
cmp
std
add
xchg
repnz
pop
add
and
ljmp
jb
daa
test
adc
lcall
mov
mov
sbb
inc
loopne
les
push
pop
xchg
and
sbb
enter
repz
xor
imul
mov
ror
mov
xchg
push
mov
sbb
fsubrs
jg
xchg
test
rolb
sbb
in
push
xchg
push
xor
push
adc
inc
pop
cmpsb
pop
or
push
and
and
in
or
outsl
xchg
je
inc
fwait
leave
iret
pop
daa
jg
mov
lods
outsl
sub
mov
jle
sbb
insl
rcr
lds
or
jb
in
data16
push
sub
in
divb
pop
outsl
sbb
testl
int3
loopne
cmp
stos
inc
add
jg
jge
es
insb
sbb
in
clc
loope
jl
sub
out
or
lds
push
aas
or
out
je
pop
popf
inc
mov
gs
push
imul
lea
adcb
test
adc
mov
cmp
subl
int
xor
sbb
out
in
adc
xchg
cwtl
lds
loopne
stos
sti
add
and
sbb
mov
mov
int
mov
ret
aas
sti
mov
dec
scas
lods
dec
xchg
pop
pop
mov
iret
mov
mov
mov
cmp
outsl
jle
daa
pushl
mov
mov
and
xor
bound
ret
popl
dec
sub
xorl
sarb
pushf
dec
adc
movsb
xchg
sbb
xchg
lea
pop
sbb
out
jo
mov
mov
mov
idivb
adc
and
loopne
mov
and
fwait
sub
testb
popa
push
mov
int3
fstpl
lcall
sub
inc
mov
int3
jl
cwtl
fiadds
inc
pop
mov
push
mov
stc
jo
cmp
data16
pop
sub
cmpsb
xchg
mov
cmpsb
add
mov
gs
in
xor
adc
cmpsl
out
mov
addb
push
sub
stos
std
enter
shl
mov
je
xchg
mov
fistpl
rorb
pushf
call
sub
and
ljmp
lcall
arpl
loopne
adc
in
fdivrp
loopne
sbb
scas
shrb
arpl
jbe
pop
mov
xchg
mov
je
push
scas
les
repz
push
jnp
xor
cs
jb
mov
das
mov
fucom
popf
lret
les
push
push
sbb
dec
or
out
into
xchg
nopl
xor
scas
out
jge
adc
fs
mov
xor
mov
push
cmpsl
outsb
mov
sub
nop
mov
lods
and
mov
dec
in
cmp
les
inc
jb
testb
adc
xchg
dec
clc
mov
sbb
ds
dec
or
jp
jp
mov
fmulp
addr16
dec
sbb
inc
and
pop
fcomip
cmpsl
mov
std
mov
pusha
je
test
jmp
xor
and
adc
mov
xlat
daa
pop
gs
xchg
jp
jne
ja
mov
icebp
roll
sbb
aaa
pop
fs
mov
push
shll
imul
ficompl
push
sbb
imul
movups
or
push
rorb
mov
outsl
ror
and
push
pop
lcall
mov
stos
repnz
cmp
sar
sti
loopne
filds
test
rclb
or
or
rcr
int3
jae
mov
push
add
dec
push
jne
jb
mov
js
data16
nop
cmp
mov
lods
xor
inc
pop
lock
jns
in
push
pop
mov
pop
jp
lods
mov
out
sub
xchg
cmp
leave
pop
mov
xchg
sub
mov
or
gs
inc
pop
rol
insb
fbld
sarb
mov
and
fwait
pop
dec
fisubrl
adc
jmp
dec
ss
iret
push
je
jae
mov
aam
xlat
xor
movsl
and
ljmp
stc
loopne
adc
cwtl
jge
mov
lea
lea
inc
cld
jno
call
jecxz
add
add
inc
out
mov
push
clc
xchg
mov
popf
xor
mov
movsl
sbb
pusha
ja
push
and
mov
jmp
andl
mov
imul
sub
inc
pushf
loope
pop
pop
divps
les
xchg
das
pop
push
andl
inc
divl
mov
dec
inc
pop
jo
cs
in
test
out
mov
daa
adc
inc
xchg
mov
loop
jp
repz
in
lds
sub
jmp
mov
add
mov
in
stc
movsl
andb
jge
jge
pop
mov
mov
arpl
xchg
lods
jmp
rorl
xor
les
cmp
cmp
lods
and
mov
mov
test
or
sbb
aad
lods
inc
mov
arpl
inc
fildl
pop
out
mov
loope
popa
cwtl
sub
pop
jge
jns
jge
sub
std
scas
dec
cmpsb
addr16
add
or
shll
mov
mov
mov
aas
and
pop
dec
clc
push
scas
sub
mov
lea
aam
jno
jne
cmpsl
mov
aas
mov
jmp
ja
pusha
sub
insb
loopne
push
mov
xchg
pop
das
or
jo
shrb
jp
imul
mov
push
movsl
in
inc
scas
fisubrl
jnp
sub
nop
cmpsb
jno
mov
inc
fdivs
out
testl
lods
mov
mov
add
push
outsl
cwtl
or
je
sbb
popa
arpl
push
xorb
sub
out
jg
xor
jnp
mov
add
ljmp
mov
mov
jo
push
mov
fs
scas
dec
mov
or
orb
rcr
pop
repnz
dec
xlat
push
daa
adc
in
xchg
sbb
imul
ss
mov
insb
push
das
lcall
and
mov
es
xor
adc
fiadds
push
cli
sbb
aaa
rorb
cmpsb
push
jge
xor
mov
hlt
cmpsb
push
inc
in
fwait
into
pop
rcr
shll
dec
mov
cwtl
mov
or
xchg
mov
mulb
mov
jbe
es
mov
mov
push
jb
mov
out
cmp
jae
mov
pop
lret
arpl
pop
cld
pop
add
mov
fisubrs
aam
fistpll
icebp
in
sub
cmp
sbb
jle
xor
aas
and
inc
xorb
add
xchg
ss
fs
cltd
dec
cmc
push
jg
ljmp
mov
adc
int3
repz
aaa
jb
loope
or
adc
adc
je
pop
or
ds
adc
dec
shll
jo
add
mov
enter
lods
lret
aad
mov
les
inc
cmp
cs
mov
movb
out
jl
adc
in
jbe
aam
xchg
ficoms
pop
jbe
das
inc
ret
push
pcmpgtw
dec
iret
ja
lea
movsb
js
add
les
add
cmp
prefetch
ret
cmc
nop
iret
les
lods
and
or
pop
mov
push
inc
sbb
pop
mov
sub
inc
xchg
out
mov
pop
fiaddl
push
mov
sbb
test
dec
stc
movsl
pop
roll
enter
push
xchg
ret
pop
pop
int
outsb
test
lahf
ficomps
push
inc
cmp
pop
pop
imul
stos
xchg
fs
loopne
fcmove
dec
test
hlt
fwait
mov
int3
inc
lds
pop
int
lret
or
repnz
pop
push
faddl
fadds
addr16
mov
cmpsb
sub
popf
stos
adcb
adc
cli
ljmp
mov
aaa
ret
lahf
mov
cwtl
mov
fwait
sub
int3
jge
or
fiadds
popf
call
ja
mov
or
mov
push
xchg
es
jo
aad
jg
cltd
icebp
sub
sar
aam
sbb
mov
sbb
shll
add
mov
enter
inc
add
mov
stc
cs
cltd
cmp
jbe
mov
jae
lea
iret
aam
es
jbe
inc
cmp
mov
inc
cltd
mov
mov
iret
ljmp
jecxz
fcompl
mov
js
rclb
mov
inc
adc
iret
outsb
cmp
xchg
repnz
neg
mov
ret
adc
lock
mov
pop
clc
jge
lcall
pop
in
clc
jns
insb
cmc
popa
test
mov
xor
mov
push
shr
cmpsl
ds
out
addr16
adc
xchg
xchg
jns
ljmp
mov
mov
imul
in
pop
mov
out
or
jl
movsl
stos
and
rcrl
and
jno
and
ss
scas
add
pop
push
loopne
je
imul
mov
pop
and
push
and
sub
adc
sub
movsl
loopne
mov
imul
rorb
push
dec
jle
inc
ljmp
pop
addl
insl
sbb
mov
add
cmp
dec
mov
popf
jae
rolb
jo
ljmp
sub
sub
pop
jns
xor
test
inc
sbb
xlat
mov
arpl
xchg
scas
add
jmp
dec
into
mov
add
bound
enter
jg
pushf
pop
imul
mov
jg
jb
jno
jb
cmpsb
cwtl
push
loope
fnstenv
dec
test
je
jecxz
shlb
repz
outsb
ds
and
adc
xchg
sbbb
push
clc
std
sbbb
inc
movsl
sbb
jmp
aas
mov
leave
push
inc
cwtl
jle
mov
mov
outsb
aam
int3
dec
mov
leave
repnz
mov
insw
add
add
mov
cmpsb
jae
lcall
in
je
mov
popa
mov
lock
sbb
insl
xchg
out
push
lock
jecxz
into
or
aad
fnstcw
lods
jle
push
lcall
push
and
sbb
lea
mov
inc
int
ficompl
push
ja
fists
cmp
pop
dec
mov
sbb
sbb
daa
lret
out
push
mov
outsb
lds
lods
lret
inc
mov
fs
inc
mov
cmp
flds
mov
jle
push
sahf
mov
pop
dec
mov
inc
jecxz
cmp
les
lret
or
out
pushl
cltd
sbb
xor
inc
fwait
push
push
xor
inc
cwtl
cmpsl
out
or
and
xor
daa
addb
cmp
cs
sub
jp
dec
and
jmp
mov
lcall
jmp
andl
imulb
ljmp
adc
ljmp
fadds
and
je
insb
lods
aam
mov
pop
add
jmp
xchg
movsb
fimuls
mov
stos
das
mov
push
xchg
adc
xchg
in
aam
out
test
cmp
xor
cmp
or
cwtl
int
pop
scas
into
jmp
bound
es
jl
das
int
repnz
adc
addl
xchg
gs
sbbb
test
pop
mov
gs
scas
or
out
cmpsl
dec
push
imul
icebp
bound
mov
jns
aad
jne
shl
int3
cld
push
mov
fnstsw
adc
rcrb
mov
outsl
mov
adc
add
jmp
les
int
loop
cmp
mov
dec
ret
sub
inc
cwtl
imul
lods
mov
add
mov
inc
aam
or
inc
inc
xor
adc
or
rclb
xchg
sbb
out
mov
cmpl
nop
sub
sbb
jnp,pn
push
out
int
cs
adc
mov
fs
iret
jmp
mov
push
xchg
sbb
pop
ret
inc
cld
dec
or
push
dec
sub
lret
mov
or
mov
and
cli
cmp
xlat
rorb
inc
adc
mov
sarb
daa
mov
sbb
enter
jl
jmp
cld
clc
mov
jb
or
out
in
sahf
pavgw
push
sbb
push
mov
popl
aam
stos
outsb
adc
jno
test
push
scas
scas
outsl
aaa
adc
mov
loope
mov
dec
and
ljmp
pushf
push
hlt
adc
lds
add
les
gs
sub
mov
lods
or
mov
add
iret
lcall
xchg
mov
lea
repz
jge
xor
ss
and
jns
stos
cmp
push
cld
popa
xchg
inc
pop
push
cmc
inc
mov
cmc
mov
dec
rorl
and
clc
push
jne
mov
test
pop
and
mov
data16
sub
fmul
or
xchg
ret
xchg
popf
mov
sarb
jmp
or
mov
and
push
out
pop
add
and
push
pop
fs
cltd
andl
jle
in
scas
testl
sub
and
stos
out
mov
jne
mov
and
arpl
sub
jbe
xor
push
mov
pusha
xchg
xlat
xchg
cs
ljmp
mov
lock
ret
xor
fistl
sarb
cmc
stc
es
or
push
or
cmp
jno
xlat
mov
js
push
icebp
aaa
mov
in
std
cmp
fidivrl
jg
aad
adc
fmuls
incb
mov
sub
adc
outsb
jmp
mov
cmpsb
in
mov
xchg
arpl
fnstcw
scas
dec
fiadds
pop
xchg
mov
out
sub
or
mov
div
adc
into
in
shll
lods
int
mov
sti
es
mov
push
add
jl
jle
adc
sbb
jae
aaa
arpl
cli
cmp
out
bound
dec
sbb
cmc
mov
outsb
push
arpl
or
jnp
cs
das
sbb
nop
lock
dec
add
add
sub
ss
dec
mov
outsl
sbb
and
pop
sub
mov
aaa
xlat
or
insl
push
xor
popf
mov
fsubrl
xchg
ficoms
dec
scas
mov
lret
xor
ljmp
sub
fidivrl
mov
pop
cltd
push
fbld
cmp
sbb
outsb
mov
fnstenv
adc
fnstcw
push
call
loopne
insb
es
dec
enter
jge
ret
cmp
mov
fcoms
popa
fstps
cmpl
test
lret
pop
sti
les
inc
call
and
cmpsb
pop
inc
testl
mov
aad
sub
pushf
fimull
dec
xchg
cmp
push
mov
push
inc
inc
ds
mov
and
xor
shl
mov
xor
pop
cmpsl
gs
stos
fs
mov
adc
push
pop
subl
ret
jb
out
inc
push
sbb
jne
lods
mov
lret
xchg
nop
xchg
sbbl
pop
popf
imul
das
mov
aad
iret
adc
mov
add
stos
into
cltd
cmp
ljmp
xchg
xor
xchg
sbb
xchg
pop
mov
pop
inc
dec
xor
jp
mov
std
into
hlt
enter
jge
ljmp
jae
aam
jmp
xchg
aas
mov
hlt
or
andb
shl
outsb
xchg
mov
outsb
or
addr16
lds
popl
adc
test
mov
mov
test
test
xchg
dec
add
xor
pop
loope
in
push
fmuls
push
xor
mov
pop
push
cmpsl
jecxz
stc
scas
hlt
or
sub
mov
jne
mov
push
lret
sbb
repnz
push
lret
movsb
jo
jne
cmp
pop
inc
add
push
cmp
lods
jo
stc
jns
push
dec
sub
mov
test
mov
outsl
push
pop
cmp
out
in
jne,pn
dec
fsubl
push
mov
xchg
test
rcrb
cmc
dec
inc
loope
movsb
mov
movsl
mov
out
mov
repnz
add
shlb
aas
mov
mov
inc
pop
cmpsb
test
movsl
in
stos
add
push
mov
jmp
shlb
notl
xchg
repnz
loop
pusha
fidivs
xchg
cli
mov
outsl
enter
sbbb
add
mov
fildll
mov
adc
push
testl
popf
cmp
std
push
sub
sbb
dec
push
jle
dec
mov
xchg
mov
test
jne
mov
mov
in
sbb
jno
push
push
jle,pn
arpl
mov
stos
ret
mov
xlat
out
push
xor
cmp
inc
lret
sub
jmp
icebp
aas
mov
add
test
sub
and
push
inc
mov
mov
cli
mov
sbb
je
cmc
lret
and
mov
cmp
add
imul
sarb
or
push
sahf
xchg
push
sub
mov
data16
adc
fwait
xor
inc
push
movsl
cs
push
mov
push
popf
mov
daa
or
mov
dec
and
into
inc
xchg
out
cld
out
popa
or
lahf
cmc
popa
fsubrl
int3
rorb
and
dec
lret
and
sub
jb
cmp
sub
push
in
data16
dec
in
dec
out
popa
xor
movsl
push
pop
xlat
arpl
int3
or
pop
dec
jmp
sub
pop
inc
cs
cmp
jns
push
leave
push
shlb
mov
lret
pop
jmp
arpl
mov
out
inc
ja
repnz
sub
xor
push
insb
dec
dec
test
aam
inc
jecxz
jns
inc
cmpsl
cli
add
xor
test
pop
in
add
scas
jae
mov
dec
xchg
xchg
aam
rol
mov
insb
fsubrl
cmp
push
in
mov
or
ja
aaa
test
pop
jb
ss
push
adc
aas
stc
mov
test
and
cmp
repnz
sbb
sbb
inc
cld
mov
xor
push
cltd
lds
push
cltd
push
pop
test
movl
sar
fscale
mov
mov
jge
mov
push
mov
push
cmp
mov
cmc
pop
jns
sbb
cmp
mov
and
mov
cmp
cmp
and
sbb
xor
xor
lods
push
jmp
pop
lods
or
fists
mov
inc
fisttpll
mov
lods
xor
dec
sub
std
test
xchg
daa
ja
xlat
jne
repnz
ds
daa
jp
adc
scas
sahf
add
loop
stos
sbb
call
jle
push
jb
xor
test
movsb
enter
push
icebp
lods
bound
scas
into
cmp
sahf
add
cs
mov
scas
dec
fcomp
fidivs
cmp
sub
leave
mov
push
dec
xor
pop
xchg
jb
lds
and
adc
loop
fldenv
mov
mov
sbb
cld
out
cmp
aam
movsl
dec
add
mov
lock
adc
mov
adc
loopne
mov
ror
mov
test
dec
jge
call
icebp
jnp
jle
mov
mov
sub
pop
pop
mov
push
pusha
mov
insl
mov
cmp
cmp
inc
cmp
adc
and
cwtl
push
xor
push
lahf
mov
mov
test
cltd
in
call
lock
je
imul
lods
pop
insb
lds
je
jmp
leave
ss
adc
adcb
outsl
push
mov
or
jae
push
xor
dec
or
dec
jb
push
mov
pop
cmp
iret
adc
cs
push
mov
adc
xlat
cmp
in
scas
push
push
movsb
out
jns
xchg
movsl
jg
psrld
js
das
and
or
nop
pop
xlat
and
adc
mov
lahf
pop
xlat
ja
pusha
ss
pop
ja
pop
repz
inc
not
imul
out
jnp
in
fld
cltd
lds
and
gs
cwtl
data16
jecxz
dec
cs
mov
outsb
inc
xor
js
add
dec
mov
dec
ret
cmpl
lock
icebp
and
jg
xor
inc
jb
xchg
pop
das
arpl
sbb
les
xor
cltd
and
xchg
test
icebp
aam
out
pop
sbb
jecxz
mov
sarb
lahf
nop
jge
pusha
movsb
les
sub
aas
mov
out
ljmp
sbb
push
mov
pop
nop
adc
movsl
inc
xchg
and
adc
jl
ja
rcl
fists
push
in
dec
or
or
and
fildll
mov
pusha
pusha
mov
ja
in
adc
jle
subb
loope
sbb
fisttpll
inc
cmp
mov
popa
lods
sub
andb
or
js
add
adc
dec
inc
es
inc
jb
xorl
adc
and
pop
sbb
xchg
hlt
mov
loopne
fldl
push
mov
jmp
pop
lret
pop
inc
jne
jnp
clc
pushf
cmpsb
sbb
and
inc
mov
or
hlt
inc
mov
mov
into
cli
push
xchg
arpl
mov
dec
aad
cwtl
pop
pusha
push
or
aaa
cmpsb
call
fnstenv
push
out
inc
clc
outsl
dec
jmp
mov
loope
loop
lock
pop
into
dec
lock
sahf
in
in
popa
mov
dec
xchg
dec
jns
push
jp
xor
sbb
jl
fcoml
ret
daa
pushf
sbb
test
xor
stos
stos
popf
xchg
xor
cmp
adc
stos
sub
jge
pop
sub
outsb
fnstsw
cmc
js
mov
dec
lods
ss
inc
clc
orb
inc
ret
jge
xor
mov
rcrl
lret
sarb
bound
xchg
loope
sub
pop
lret
rolb
icebp
aad
xlat
leave
adc
xchg
push
sub
mov
stos
popf
mov
sub
arpl
lods
inc
sarl
std
psrad
and
pop
lods
add
test
js
add
inc
dec
popa
data16
call
adc
dec
ds
imul
daa
push
and
push
jmp
mov
or
push
xlat
mov
mov
pop
fwait
pop
sti
sub
pop
sub
lods
loop
xchg
movsb
cmp
add
inc
add
push
das
insl
pop
call
mov
roll
lds
je
fnstsw
sbb
push
inc
push
lods
std
xchg
scas
sti
lds
cld
int3
sbb
fstp
cmp
jecxz
es
jmp
lock
das
lods
das
out
xchg
nop
add
pop
scas
test
push
sbb
ljmp
dec
inc
dec
and
shlb
faddl
jnp
xor
out
int3
les
mov
gs
call
stc
popf
or
xchg
mov
roll
mov
mov
jmp
ljmp
mov
sbb
out
cmc
cld
mov
cs
mov
out
push
jb
es
fsubr
movsb
cmc
fmulp
inc
and
stc
fnstenv
scas
xchg
ror
mov
xor
xlat
sub
out
sub
push
mov
insb
jbe
mov
in
insl
sbb
and
popa
ja
sub
sbb
sarb
and
dec
add
sahf
mov
in
and
and
ret
das
stc
scas
scas
cmp
add
mov
jno
or
je
push
sub
cmp
jl
sub
xor
mov
jle
sub
dec
cmp
fsts
repnz
add
jno
mov
mov
nop
ds
jmp
mov
push
mov
mov
pop
dec
push
dec
in
dec
js
push
jmp
mov
inc
ret
cmp
mov
jnp
mov
pop
out
inc
inc
cld
stc
je
jb
or
push
jnp
dec
inc
jmp
cmp
cmp
imul
scas
add
add
push
jmp
lds
repz
pusha
or
push
dec
fwait
repz
add
jbe
sub
mov
cmp
sub
inc
mov
lret
cmc
repz
dec
int3
push
stc
rcrl
xor
jmp
loope
insl
adc
gs
ret
push
xlat
lret
pop
lret
int3
std
pop
mov
mov
inc
in
test
jecxz
sarl
push
scas
jb
and
movsl
cmp
negl
lock
movsb
fmull
aam
pop
clc
fnstenv
jnp
bound
inc
inc
mov
cmovl
mov
ds
in
fistl
repz
out
mov
popa
les
scas
jecxz
or
push
lret
xchg
push
sbb
test
mov
test
jno
bound
cmpsl
out
xchg
repnz
sbb
hlt
in
push
stc
or
dec
adc
stc
int
aas
mov
add
stos
cmpsb
adc
ficompl
mov
sbb
test
push
jp
pop
push
cltd
aas
mov
mov
and
inc
pop
xchg
jmp
mov
mov
outsb
and
orl
jecxz
fadds
sbb
les
int3
cmp
mov
scas
insb
in
mov
stc
jge
mov
push
mov
inc
add
mov
inc
jb
subl
push
test
push
and
adc
popa
jbe
jns
and
xchg
ret
push
sub
mov
subl
loopne
sub
cmp
scas
sub
jp
xor
test
mov
std
xchg
add
xchg
lods
xchg
jae
sti
dec
aas
jbe
xchg
leave
sarl
mov
clc
mov
out
sbb
jl
fldt
mov
xchg
sbb
mov
insl
in
inc
fs
xor
inc
pop
pusha
pop
lahf
mov
xlat
out
mov
gs
fsubrl
jge
add
and
pop
pop
inc
push
jns
mov
test
sub
or
fildl
xor
cltd
mov
inc
jg
xchg
popa
pop
jmp
mov
fldt
sbb
into
fsubrs
pop
fxch
daa
fildll
cld
xor
lcall
adc
mov
or
inc
jmp
outsb
pop
jg
push
adc
sbb
imul
xchg
daa
pop
push
cmp
fnstcw
mov
adc
iret
xor
mov
jb
xchg
lcall
push
bound
dec
sub
das
popa
in
mov
dec
lds
mov
cmpsb
pop
hlt
out
mov
in
in
mov
pop
pop
inc
ret
dec
sub
pop
jmp
xchg
aaa
insl
dec
or
mov
push
cmp
xchg
lods
sarb
js
sub
ret
sub
stc
push
push
or
add
ja
lock
pop
and
mov
outsb
inc
mov
xlat
jo
add
addl
mov
in
fadd
or
test
scas
cmp
xchg
pop
push
lcall
pop
clc
cmp
lods
shll
xor
sub
dec
adc
mov
scas
adc
add
jp
cld
xchg
mov
pop
jmp
test
sub
mov
hlt
aam
aam
sbbl
xchg
mov
add
movsb
add
xlat
aaa
mov
mov
out
push
jmp
call
adc
xchg
fs
pop
add
xchg
out
rcrl
jg
fcmove
push
lds
mov
sbb
sbb
repz
pop
cmc
insl
mov
ffree
fwait
pop
push
rorb
icebp
enter
test
xor
fsubrp
push
mov
xor
inc
into
int3
cmp
subl
mov
out
pop
mov
sbb
lods
pusha
cld
cmpsl
call
xchg
das
mov
clc
mov
or
sbb
rcrb
mov
enter
iret
sti
mov
mov
int3
aad
stc
inc
and
dec
lahf
mul
push
clc
aas
in
mov
andl
incl
mov
lahf
jmp
popf
pop
gs
js
lock
cmpsl
cmp
pusha
mov
and
pop
xor
adc
push
repz
inc
in
mov
xchg
dec
roll
or
insl
and
jge
imul
lods
lock
push
popf
sub
adc
imul
aam
outsb
push
xchg
mov
ja
std
jmp
sub
mov
push
pop
arpl
cmpsl
clc
dec
mov
adc
and
xchg
repz
pop
mov
xchg
mov
lret
jne
mov
cmp
inc
cmp
jns
inc
aas
add
mov
mov
xor
fsubr
mov
xchg
addl
imul
loopne
cwtl
inc
xorl
cli
adc
rcrl
stc
inc
push
cs
es
in
rcl
jg
imul
cmp
dec
xor
jecxz
aam
mov
sbb
scas
mov
idivl
iret
icebp
ret
ret
dec
pop
shlb
out
sub
xchg
mov
loopne
cmpsb
jns
pop
jnp
mov
lahf
or
push
and
cwtl
push
xor
xchg
inc
outsl
or
lea
mov
mov
lret
cmpb
mov
nop
cli
cmpsb
aad
sbb
call
pusha
mov
mov
and
pop
addr16
inc
xchg
mov
mov
push
mov
out
add
or
or
add
lcall
lods
sub
mov
jp
cmp
xor
int3
pop
push
push
adc
push
inc
or
fsubl
mov
nop
cmp
enter
xchg
int3
xor
fidivrl
pop
int3
or
dec
pop
ja
sub
add
inc
push
flds
pop
sbb
mov
fnsave
xor
lret
and
adc
inc
stos
xchg
idivl
inc
mov
scas
push
jl
push
cld
dec
shrb
cwtl
scas
sub
adcl
mov
out
push
repnz
imul
push
mov
sub
daa
xchg
mov
rcrb
lahf
les
dec
shll
mov
inc
ja
ja
pop
loop
dec
mov
test
in
sbb
test
mov
sbb
sub
jmp
lret
dec
scas
aas
sub
mov
push
push
adc
daa
or
mov
pop
xchg
rorl
daa
push
movsb
std
inc
dec
adcb
cmp
ret
or
adc
aas
ds
je
jbe
xchg
outsb
xchg
cmp
pop
mov
loopne
mov
repnz
cwtl
or
xchg
bound
xor
push
es
shr
jl
in
mov
xchg
adc
mov
inc
jle
pop
mov
sbb
sar
pop
push
jno
jecxz
ret
lret
in
mov
sub
icebp
je
jecxz
mov
test
xchg
or
push
setl
out
stc
icebp
adc
pushf
adc
sub
aad
xchg
inc
das
push
sbb
mov
ljmp
cmp
mov
pop
std
decb
add
xor
mov
pop
push
pop
mov
mov
fs
ljmp
cmp
xchg
cmp
addr16
add
lahf
in
push
or
das
pusha
scas
leave
sub
mov
stc
fwait
mov
inc
faddl
sbb
cmp
lret
in
cmpsb
jg
adc
cmp
pushf
jg
jae
fs
cmpsl
imul
into
pop
das
mull
jb
sbb
inc
ret
lret
push
shlb
fstl
out
sti
icebp
push
inc
xor
rolb
in
xchg
push
fcmovnu
movsl
xor
sub
gs
ret
dec
outsb
jno
lret
xchg
mov
and
cli
sbb
sbb
push
jb
jg
aad
imul
sbb
gs
jle
pop
mov
fisubs
repz
jg
cmp
jae
jbe
jbe
hlt
jb
jns
inc
scas
dec
adc
push
xchg
das
pop
push
mov
jle
dec
sbb
loop
je
mov
mov
cwtl
inc
les
or
nop
push
das
imul
mov
jmp
daa
inc
js
js
add
fidivs
sub
mov
out
cmp
fsubrs
xor
add
roll
adc
push
fsubrs
mov
in
pushf
pushf
sbb
sahf
mov
filds
lret
inc
subb
add
push
out
repz
pop
lret
lret
jmp
or
cmpsl
arpl
add
pop
lret
cmpsl
jb
popf
mov
cmp
int
lods
mov
adc
lret
fimull
inc
rorl
cltd
negl
pop
pshufw
sti
test
adc
cmp
push
mov
sbb
mov
xchg
cmp
dec
insl
pushf
out
les
fdivl
xchg
mov
lret
mov
pop
xchg
mov
out
adc
lods
test
insb
adc
cmc
xchg
mov
lret
gs
sbb
lds
push
insl
iret
repz
jge
nop
loope
push
lret
mov
jp
loop
pushf
lret
xor
ja
mov
pop
xchg
dec
push
pop
pop
ficoml
push
push
clc
addr16
sarb
or
add
cmp
xor
dec
xor
sub
push
cwtl
mov
jbe
movsl
scas
push
dec
inc
xor
mov
fxch
icebp
xchg
mov
in
nop
mov
repz
cmpsl
dec
cwtl
aaa
fadds
arpl
insb
into
hlt
adc
mov
loopne
test
xchg
mov
inc
dec
mov
sahf
les
jecxz
and
push
cmp
xlat
jle
cmp
mov
pop
iret
cwtl
xor
imull
xor
or
mov
pop
and
clc
cld
xchg
outsl
test
mov
adc
and
ret
dec
repnz
adc
in
dec
cli
sbb
fsubl
ds
stos
lods
jne
sbb
lcall
mov
sbb
mov
inc
dec
cmp
and
shl
daa
jbe
aaa
jbe
add
dec
jb
roll
pop
jl
jno
fbstp
ret
shl
jnp
ds
subb
jno
adc
mov
repnz
in
or
sub
pop
cmp
ficoms
cwtl
pop
repnz
push
jne
dec
xor
dec
addb
dec
xlat
aaa
sub
cmpsl
adc
jmp
mov
popf
jae
mov
jne
and
push
dec
xchg
and
dec
push
xor
pop
mov
fcomp
aas
pop
cmpsl
cmp
gs
mov
fsubrl
ds
sub
lahf
or
or
xlat
push
ds
ficompl
fstpl
jnp
jb
test
test
aam
sub
iret
repz
aaa
out
push
stos
dec
mov
pop
xor
add
jb
adc
imul
jns
jp
or
fiaddl
sub
shlb
cmpsb
mov
mov
pop
out
inc
cmp
out
mov
xlat
std
iret
push
pop
int
mov
daa
outsb
test
in
es
test
in
shrl
pop
fwait
inc
push
sbb
fldl
jb
addr16
fistps
es
and
cltd
dec
loop
and
xor
push
jae,pt
mov
scas
sti
ror
nop
call
mov
hlt
dec
dec
lahf
push
out
sub
mov
xchg
add
cli
sti
cld
gs
xchg
xchg
xchg
xchg
mov
sahf
sahf
lods
sub
xlat
into
jg
roll
xchg
add
icebp
fwait
ret
pop
cmp
cmp
or
decl
xchg
stc
jge
pop
lods
dec
adc
pop
aad
andb
xor
mov
mov
and
mov
mov
pop
adc
ljmp
add
ss
int
out
dec
pushf
ss
jnp
xchg
jp
sbb
mov
xchg
pop
mov
dec
ds
cmp
loope
fistpl
in
xor
data16
faddp
das
fcmovb
mov
lret
lods
sub
cmc
xchg
cmp
mov
in
and
sbb
out
iret
mov
aam
movsb
enter
stc
loopne
movsl
vpsrlw
call
mov
jmp
sbb
cmpsl
or
mov
and
aam
cmpsb
mov
fs
adc
push
jae
imul
xor
and
mov
jns
jnp
out
dec
into
sub
test
scas
std
dec
push
mov
fwait
ret
jge
jbe
pusha
xor
inc
stos
aaa
inc
das
sbb
mov
sarl
test
out
sbb
pusha
out
cmp
flds
add
shlb
sub
push
mov
adc
sbb
test
pop
sub
into
adc
push
add
rol
sbb
xchg
adc
sbb
in
mov
push
dec
mov
or
test
aaa
adc
fmulp
add
jnp
ja
aam
std
mov
cmp
loop
rcll
es
jbe
add
imul
repz
mov
xor
cmp
jp
or
out
jmp
add
repz
jb
roll
aad
push
add
push
push
mov
loope
or
out
xchg
push
mov
push
mov
pop
dec
mov
scas
cmp
scas
mov
movb
out
cmp
gs
mov
mov
or
mov
lea
xor
xchg
repnz
ss
repz
aas
movsb
inc
out
sbb
test
dec
popa
aaa
out
cmpb
xor
cli
fcoml
int
mov
xchg
in
sbb
mov
movsl
lods
mov
mov
icebp
lahf
into
xor
out
and
xchg
cli
mov
inc
dec
adcl
ljmp
mov
add
daa
push
push
xor
in
and
popf
mov
cmp
ljmp
sbb
xchg
andb
test
xor
ds
aaa
sahf
ljmp
out
cmp
dec
in
mov
in
nop
loope
pop
inc
jb
in
dec
shlb
sbb
jnp
adc
xchg
cmp
xchg
pop
jmp
cltd
rcll
ja
pusha
loopne
popf
lods
filds
cs
out
loope
loopw
fdivs
test
cwtl
pop
cmp
xchg
add
jb,pt
add
pusha
jl
fadds
mov
leave
xor
test
pop
flds
scas
sti
imul
repnz
mov
push
lahf
inc
dec
xor
mov
fsts
jns
sahf
adc
xchg
adcl
push
sub
mov
das
rorl
and
sbb
mov
push
icebp
stos
outsl
mov
movsw
addr16
imul
jg
xchg
das
xchg
ds
jb
xchg
inc
in
leave
int3
aam
jns
sarb
push
mov
mov
mov
mov
pop
xor
sub
aam
xchg
and
cmp
pushf
jl
and
lea
dec
add
sti
scas
into
xor
sub
mov
mov
shrb
xor
mov
push
ss
jno
jnp
pop
xor
imulb
mov
xchg
imul
es
lods
mov
push
insl
je
test
mov
sbb
sub
in
jo
pop
cwtl
scas
or
and
je
cmpsb
xor
sbb
jnp
mov
adc
sub
add
mov
les
sti
in
mov
adc
mov
les
jo
into
cmp
clc
mov
repnz
popa
xchg
out
insl
add
cmp
ss
pop
out
addr16
sbb
jmp
jl
and
jge
pop
jg
fcomip
jno
inc
jge
xchg
psllq
cmpl
loope
outsl
add
fwait
data16
into
push
jle
mov
pop
jge
sbb
lret
mov
aam
mov
inc
dec
inc
adc
subl
dec
xor
jle
pop
stc
jb
out
gs
bound
or
fdivl
xlat
insl
or
push
icebp
stos
mov
and
subb
sub
pop
push
clc
sti
pop
xor
leave
imul
loope
mov
xchg
test
and
mov
xor
xchg
xor
fsub
dec
fucom
inc
mov
aaa
lods
daa
inc
mov
scas
imul
push
mov
mov
std
aam
adc
int
push
insb
xor
inc
mov
xor
jecxz
mov
fcmovnu
adc
repz
adc
icebp
mov
jmp
jo
mov
sbb
inc
popf
xchg
xor
sub
sub
sub
sub
cmp
sub
bound
loop
mov
cwtl
push
xor
or
fnstcw
in
cmpsl
mov
test
test
imul
push
in
add
movsb
repz
lea
jns
outsb
cli
sbb
mov
mov
enter
add
xchg
mov
clc
jecxz
sub
cmpsl
cmp
add
and
cs
in
add
out
frstor
mov
jecxz
fistpl
sbb
mov
mov
jno
and
aam
push
lods
and
sbb
add
or
repz
sub
cmpsb
stc
andl
adc
dec
push
mov
push
xchg
stc
pop
ret
mov
scas
scas
repz
mov
les
jno
sub
push
outsb
leave
icebp
scas
subl
xchg
sahf
cld
jae
mov
lds
fstpt
bound
aas
lret
push
add
xchg
jmp
pop
int
mov
pop
pop
cmp
xor
or
xchg
daa
mov
cmp
imul
lahf
pop
adc
sbb
fisttpll
push
jl
cli
mov
mov
and
jg
mov
popa
stos
cmpsb
push
and
pop
loop
dec
mov
divb
xor
cmp
mov
icebp
or
mov
dec
push
inc
push
sbb
pop
xchg
pop
popl
push
popf
cld
pop
shlb
xor
fadds
icebp
lods
xor
cmpsl
test
out
movsb
inc
xor
fwait
mov
pop
es
icebp
pop
cmpsl
enter
pushf
movsb
mov
push
jge
inc
scas
add
cmpsb
mov
or
cmp
xchg
mov
mov
imul
cwtl
lahf
rorw
xlat
cmp
pusha
jmp
lock
adc
jno
add
jmp
adc
mov
mov
mov
nop
or
std
inc
pop
int
shll
xor
fwait
dec
push
mov
push
imul
test
mov
das
cwtl
setbe
inc
addr16
daa
cmpl
xchg
sub
ds
or
pop
iret
cmp
inc
pop
cmpsl
sahf
fisubl
fs
out
pusha
mov
xor
ret
or
push
fadds
lret
push
dec
push
sbbb
inc
mov
jecxz
das
arpl
push
push
dec
mov
sbb
push
cltd
dec
xchg
add
sbb
jle
addl
xchg
mov
loop
out
dec
mov
fsubrs
mov
mov
dec
inc
sbb
jbe
sarb
inc
aaa
pusha
cld
xor
push
push
xchg
cmp
or
xchg
pop
int3
mov
xchg
jnp
sti
pushf
jge
aad
jo
cld
xchg
mov
lret
pop
sbb
xor
addr16
xchg
pop
pop
adc
daa
mov
iret
dec
dec
cmp
sub
mov
mov
scas
movsb
and
stos
mov
and
jbe
shl
mov
cmp
scas
sub
xchg
stc
les
mov
ficoms
test
or
add
mov
xchg
enter
cld
mov
jg
add
gs
fs
cltd
outsl
fwait
adc
xchg
mov
or
out
push
lock
jae
and
xchg
in
dec
pop
ss
pop
adc
pop
lahf
cmpsl
inc
mov
lret
stos
push
xor
mov
out
mov
iret
xchg
test
cwtl
mov
lods
aad
inc
mov
aam
push
lcall
sbb
shlb
push
imul
mov
stc
fcompl
pop
cltd
divb
mov
in
aad
xchg
mov
movsl
lcall
pop
out
xchg
xchg
int
imul
sbb
mov
jge
fcmovb
push
aam
xchg
mov
pop
pop
pop
jno
pop
cli
push
pop
sbb
mov
fcomi
sbbl
dec
cmc
jp
leave
outsb
movsb
sub
inc
loope
mov
dec
add
sahf
and
sub
or
inc
cmpsl
iret
loop
mov
out
inc
into
arpl
mov
cmp
cmpsb
xorb
jecxz
scas
dec
pop
sbb
adc
pop
stos
iret
push
stc
sub
inc
cmpsl
add
add
pop
add
call
int
adc
pop
hlt
scas
add
addr16
mov
push
scas
push
or
sbb
jo
ja
enter
inc
repz
lcall
and
dec
arpl
aaa
incl
xorl
inc
jns
int3
xlat
xchg
adc
lds
aas
or
ljmp
aas
sbb
pop
add
repz
into
inc
sub
cmovo
icebp
inc
add
jns
out
jecxz
xorb
iret
loopne
fadds
pusha
add
lock
xor
negb
inc
push
adc
std
dec
and
xor
std
sub
push
movsb
clc
lds
pop
xchg
sti
xchg
push
lcall
ds
test
cmp
or
cmc
scas
xor
imull
and
hlt
call
xchg
xchg
ljmp
fmul
sbb
sub
push
push
xchg
sbb
mov
int3
cmp
inc
jp
jne
test
add
cli
xchg
cmp
mov
testb
push
adc
dec
pop
xor
pop
mov
mov
or
mov
pop
popa
pop
loop
adc
cwtl
jl
lods
dec
or
and
in
xlat
xchg
xor
jne
test
jnp
push
xchg
dec
hlt
adc
sbb
mov
add
loopne
and
mov
test
cmp
mov
push
les
mov
fdivr
sub
in
mov
mov
sub
push
mov
push
lods
nopl
push
das
into
xchg
shrb
sti
movb
adc
pop
pop
jbe
dec
jns
mov
jo
jle
fmuls
mov
pop
pop
sub
movsb
dec
daa
adc
lds
cmpsl
rol
clc
dec
lret
jle
mov
ja
push
mov
and
fidivs
aas
mov
and
adc
sbb
xor
imulb
dec
mov
or
push
in
std
repz
push
repz
imul
iret
jp
scas
mov
mov
aam
shl
mov
negb
je
add
shlb
dec
jmp
into
xchg
xchg
ret
and
dec
je
addr16
xchg
cwtl
outsl
std
dec
fsubrs
inc
xchg
pop
or
push
jne
les
movsb
in
sbbb
and
nop
ljmp
pop
dec
pop
in
jnp
jno
enter
leave
lret
fwait
xor
testb
roll
pop
mov
aaa
out
orl
xchg
pusha
aaa
lret
adcb
js
xchg
mov
sub
imul
in
arpl
dec
mov
mov
cmp
jo
mov
outsl
loop
push
cmp
inc
xor
sub
ljmp
in
call
fldl
and
cmpsb
sbb
decl
push
clc
adcb
repnz
push
xchg
mov
jge
push
iret
dec
adc
mov
cmp
add
or
int
push
push
and
xchg
cwtl
cmpb
mov
pusha
jno
jns
jmp
xchg
mov
rcrb
pop
in
and
ficomps
cs
dec
xor
add
lds
imul
sbb
sub
movb
jno
xchg
mov
and
push
cmc
inc
fnsave
and
mov
push
fistps
adc
pop
lret
mov
popf
push
aaa
ja
cmp
je
loope
loop
and
cmp
xchg
add
push
ret
and
aam
out
jns
mov
jl
push
and
lock
xor
jno
cld
xchg
fldl
pop
dec
arpl
and
pop
ja
out
and
mov
xchg
and
les
leave
in
int3
adc
mov
jmp
mov
jecxz
mov
mov
rcr
pmaxub
mov
dec
and
jo
hlt
in
sbb
leave
insl
sbb
les
aas
mull
adc
push
lret
sbbb
add
sarb
and
andl
pop
add
imul
loope
fldt
ss
loope
push
dec
in
xor
push
push
les
stos
mov
cmpsb
scas
and
or
cmpsl
lahf
jle
ja,pn
jae
fadd
cmpsb
test
adc
ret
jnp
and
jnp
cmc
cwtl
push
repnz
movsl
dec
and
outsl
lds
jmp
out
fwait
jmp
dec
in
adc
xchg
lret
dec
shl
add
add
cmp
pop
mov
mov
ret
lcall
jl
clc
out
insl
inc
or
adc
and
add
inc
in
cmp
jmp
jne
test
mov
mov
stos
mov
dec
push
jno
pop
push
leave
scas
les
xor
sub
sbb
xlat
mov
inc
pushl
sub
aam
pop
pop
mov
add
mov
cs
xchg
mov
je
fistps
push
pop
mov
lods
sub
xchg
mov
movsb
xchg
adc
inc
jbe
pop
push
sar
into
lcall
dec
mov
inc
sahf
decb
adc
or
call
lret
push
mov
icebp
fmuls
outsl
pop
and
pop
push
fimuls
dec
xor
jo
adc
cmp
dec
xor
lock
ljmp
lahf
cld
sbb
sbb
mov
repnz
hlt
mov
jg
lcall
rorb
rcll
test
xor
and
xchg
lcall
jae
jae
fisubrs
in
mov
fistpll
stos
insl
jb
xchg
repz
cmpsb
adc
mov
mov
sub
mov
lea
sub
push
sub
mov
dec
pop
cltd
pop
outsb
or
or
sbb
das
xchg
push
cmc
push
into
lcall
aad
xchg
xchg
inc
mov
mov
push
test
sbb
lods
xor
dec
adc
mov
leave
mov
aaa
imul
adc
ljmp
jg
cli
test
mull
pop
sub
jns
dec
add
outsl
dec
rorb
addr16
aam
ret
jmp
icebp
sub
adc
testb
cmp
dec
loope,pn
imul
mov
pop
push
jbe
rolb
into
outsb
cmpsb
lahf
sbb
add
and
mov
aaa
outsb
ds
fstp
hlt
pop
mov
mov
outsb
cwtl
xor
imul
ret
mov
out
or
or
cmp
xchg
or
pop
add
add
outsl
inc
lret
mov
lods
or
jne
jmp
nop
sbb
iret
cmc
mov
sbb
jl
test
fildl
rclb
mov
jns
push
add
or
fsubrs
cmpsb
out
insb
fimuls
aad
dec
push
add
dec
ficoml
ret
dec
jp
xchg
mov
mov
hlt
mov
xchg
aas
clc
enter
sub
sub
push
sbb
mov
shrb
fsts
popf
lahf
insl
fdivrs
mov
xor
scas
xacquire
push
push
or
or
and
stos
mov
sbb
mov
mov
xchg
push
loopne
inc
lret
fst
lcall
lahf
jg
sbb
xchg
push
ds
test
call
fs
sub
bound
cmp
jo
out
mov
mov
cmpsb
push
mov
pop
mov
sti
and
mov
adc
mov
add
enter
stc
mov
aaa
leave
sarl
xchg
out
es
or
push
test
push
sub
push
jle
es
mov
ret
repz
cs
or
sete
into
push
sub
test
and
in
dec
fildl
sub
fmull
imul
idivb
in
rol
out
popf
mov
sahf
cmp
je
xor
scas
inc
jp
mov
inc
mov
pop
mov
mov
mov
xchg
insb
and
lcall
dec
jbe
pusha
pop
xchg
subl
mov
in
xchg
cmp
cmp
mov
sub
or
out
and
jo
xlat
jnp
movsl
cld
test
cmp
push
xchg
jg
imull
push
aad
aad
iret
test
aas
mov
inc
mov
imul
push
and
pop
and
in
adc
int3
jmp
std
cli
out
loope
pop
scas
scas
cwtl
scas
ds
sbb
pop
insl
icebp
rcrb
enter
xchg
mov
sbbb
int3
mov
mov
xchg
fidivrs
xor
arpl
popa
bound
cmpsb
aaa
cmp
cmp
jae
xchg
inc
cltd
xor
ss
push
fldt
mov
push
sbb
inc
bound
push
je
arpl
jno
xchg
fstpt
in
and
pop
jns
imul
inc
dec
rcrl
js
repnz
inc
test
cmp
movsb
in
clc
insl
push
sbb
mov
mov
sub
push
and
xor
sbbb
lock
add
pop
lods
fdivl
movsb
int3
insb
add
mov
xchg
call
and
fisttpll
and
pop
aas
cmp
mov
jne
pop
and
dec
enter
push
and
inc
popa
jne,pn
sub
pusha
ds
data16
fwait
sub
jb
mov
xchg
mov
dec
push
dec
mov
mov
xchg
int3
faddl
xchg
inc
pop
adc
and
jp
cmp
fadds
xor
outsl
aaa
add
xchg
addr16
mov
cmp
lahf
mov
aas
mov
imul
adc
insl
jb
xchg
test
std
mov
jle
mov
test
or
jmp
push
jmp
sbb
popf
or
mov
and
pusha
add
push
push
dec
mov
fldt
and
cmp
pop
in
jb
inc
addr16
leave
test
add
inc
icebp
fdivrs
test
outsl
dec
add
movsb
sub
mov
adc
jecxz
inc
inc
inc
aam
or
cmp
cmc
add
repnz
clc
imul
adc
jl
add
into
imul
mov
pop
xor
imul
xchg
mov
push
lret
jl
sub
orl
push
jns
loopne
fdivs
in
mov
in
rcr
cld
cmp
insl
test
jge
xor
jle
pushf
xchg
or
xor
lea
lcall
ljmp
mov
das
cli
loop
repz
or
les
cmp
jle
cmp
push
xlat
dec
orb
in
push
lea
xlat
outsl
stos
sarl
je
inc
dec
pop
nop
xchg
leave
xor
push
stos
sbb
in
sbb
add
mov
test
fistl
icebp
lahf
mov
xchg
xchg
test
movsb
fcoml
stc
push
sub
mov
mov
scas
loop
inc
push
sahf
mov
or
xchg
pop
xchg
jne
xchg
cmpl
mov
inc
pminsw
inc
mov
sbbl
into
mov
push
in
and
push
imul
dec
pop
cmp
pushf
rorl
jo
lock
xor
pop
xor
jecxz
iret
fwait
mov
jmp
rcrl
cltd
mov
mov
dec
inc
and
add
adc
xor
jne
hlt
lea
mov
scas
mov
maskmovq
notl
dec
aam
and
inc
ret
packsswb
loope
push
mov
aam
pop
pushf
arpl
gs
and
add
push
jmp
jo
sbb
stc
nop
mov
sub
mov
dec
and
enter
adc
lock
stos
xchg
or
xchg
push
shrb
or
out
inc
and
ret
lret
mov
push
mov
jae
mov
es
call
test
fimuls
aam
sti
mov
pop
jl
push
cmp
add
fists
cmp
incb
mov
or
jnp
push
jle
push
mov
inc
mov
jno
mov
test
xor
inc
out
lods
bound
pop
int
pop
push
scas
cmp
in
mov
xor
or
pop
stos
xchg
and
or
aam
inc
enter
mov
pushf
cwtl
mov
and
iret
test
add
cmp
out
in
aam
dec
std
lods
nop
lods
repnz
or
je
add
lock
roll
jmp
add
xlat
shll
sub
push
cmp
nop
roll
ja
insl
push
jg
repnz
or
push
adc
pop
mov
pop
pop
sbb
sbb
pusha
pushf
pop
hlt
dec
adc
cmp
mov
xchg
bound
sti
or
das
lret
pop
hlt
aam
pop
cmove
push
test
and
lods
into
popf
ljmp
xchg
push
lods
xor
push
scas
mov
cmp
xor
movsb
sub
cltd
sub
add
loopne
movsl
push
push
adc
daa
push
cwtl
pop
fcom
mov
mov
test
adc
xchg
ficomps
fnstcw
sar
fisubs
sbb
mov
icebp
stc
dec
pop
les
xchg
adc
outsl
jb
and
out
jl
xor
sub
les
sbb
pop
lods
jmp
scas
shll
ficoms
pop
enter
jae
ret
outsl
cmp
and
jp
in
push
adc
cmp
jp
or
cld
lcall
sti
repnz
iret
push
jmp
sbb
ds
jno
repnz
and
call
cmp
daa
cmp
daa
mov
ret
and
test
mov
mov
bound
pop
insl
dec
aaa
inc
lods
xor
add
out
jo
pop
xchg
push
daa
in
and
imul
fdivs
adc
mov
cmp
lock
cmp
and
ret
sahf
dec
aam
int3
psadbw
int
jns
dec
lods
mov
scas
jb
mov
shr
ret
testb
cld
lods
sbb
lds
subl
lds
mulb
je
loope
call
fisttpll
xchg
xor
mov
inc
xor
mov
stos
pushf
inc
add
cmpsb
lret
lds
mov
sbb
shl
jg
sub
dec
sbb
arpl
mov
das
out
mov
lcall
push
dec
repz
loope
and
add
int3
mov
or
push
mov
out
in
ret
xchg
lock
dec
jo
and
mov
jae
adc
pop
ss
in
aam
test
shll
push
insb
lahf
xchg
and
sub
dec
add
faddp
mov
sbb
xor
add
daa
and
enter
push
and
stos
xor
mov
adc
xchg
sbb
shl
and
add
xor
repz
and
repnz
hlt
inc
std
pop
xchg
inc
bound
inc
insb
cmp
mov
push
cmp
lea
and
or
jecxz
cs
idivl
push
pop
stos
out
pop
imul
dec
sbb
xor
sbb
push
mov
sbb
ficoms
js
and
mov
cwtl
and
insl
mov
fstpl
aas
cwtl
insl
mov
in
aas
sub
movsl
jo
sub
cld
push
cmpsl
dec
push
bound
pop
mov
iret
pop
mov
jo
mov
stc
and
add
and
or
sub
andl
outsl
shlb
jecxz
mov
adc
jmp
loope
mov
int
jne
sub
pop
add
pop
push
out
dec
outsb
das
mov
or
iret
cmpsb
inc
adc
xor
inc
shrl
leave
dec
adc
aaa
es
lds
xor
mov
cmp
call
xor
add
jb
js
inc
gs
sbbb
mov
addr16
fisttps
push
push
hlt
pushf
pop
mov
inc
dec
into
and
repnz
ljmp
lret
sub
je
adc
xchg
test
scas
sub
stc
fnstenv
stos
push
adc
mov
pop
sahf
mov
jns
pop
icebp
push
and
sbb
cld
jb
fmull
js,pn
or
arpl
pop
int3
mov
mov
sub
popf
cmpsb
cmc
add
andl
inc
cmp
arpl
inc
pop
push
xchg
xchg
mov
mov
insb
stos
int
cmp
mov
sbbb
dec
ss
popa
popf
out
mov
loop
subps
pop
es
mov
push
add
outsl
loop
fnstenv
or
lods
iret
xorl
sub
fldl
lcall
or
sti
and
add
insl
test
and
mov
sbb
ficoms
fcomps
jg
clc
jb
jecxz
dec
cli
outsb
xor
divb
xor
mov
or
cld
sub
nop
lret
add
xlat
fstpt
fildl
mov
add
pop
jne
pop
dec
jne
loop
stos
push
pop
cmp
mov
push
mov
pop
inc
sub
insl
xor
clc
or
xor
in
push
les
pop
test
jo
pop
xchg
adc
or
js
orb
popf
imul
adc
cmp
pop
adc
hlt
adc
rcll
jno
mov
mov
pop
out
add
stc
adc
and
andb
stos
cmp
fistps
loop
sub
int
jle
je
push
mov
xlat
fs
jbe
add
sbb
loope
mov
xchg
jle,pn
mov
sbb
sarl
xchg
lahf
movsb
sarl
jo
dec
sahf
xchg
cmc
inc
add
iret
inc
mov
call
rcl
push
jnp
aaa
adc
out
push
in
negb
dec
mov
int
movsb
pushf
xchg
jno
insl
test
xlat
or
mov
bound
pop
sub
jp
jle
pop
pop
lret
and
adc
je
adc
testb
cli
mov
dec
jae
shl
add
movsb
xchg
xor
leave
push
push
xchg
cmp
inc
in
movsb
cmc
loopne
or
or
in
and
cwtl
aas
pop
ja
icebp
xchg
jle
es
out
add
inc
ret
aas
or
ds
xorl
adc
movsl
dec
mov
fcoml
ret
xor
xor
and
jb
das
push
test
xchg
push
push
test
mov
mov
sub
ret
jo
jo
pop
or
outsb
icebp
cld
out
push
jmp
mov
xchg
pusha
mov
adc
das
jge
mov
or
sub
jnp
mov
leave
push
fnstenv
jno
sbb
pop
out
jecxz
inc
cmp
je
ljmp
cli
test
mov
mov
nop
push
loop
orl
mov
shrl
mov
dec
ret
rcrl
loope
into
shl
in
mov
aaa
mov
adc
enter
sahf
xor
pushf
cli
mov
push
mov
in
cmp
mov
add
mov
xchg
mov
decl
rolb
in
daa
cmp
out
fs
lods
add
jmp
dec
jmp
insb
or
ds
add
sbb
inc
cmpsl
or
mov
mov
lods
icebp
xchg
into
jge
inc
rolb
fdivrl
leave
icebp
fdivr
frstor
es
inc
rorb
pop
adc
ljmp
and
or
ljmp
dec
mulb
jecxz
or
loopne
imull
or
mov
cli
iret
stc
jg
mov
and
or
mov
push
sarl
cld
mov
mov
xor
orl
xchg
in
insb
loope
fnstcw
mov
xchg
sbb
fwait
cmp
test
mov
stc
xor
push
or
push
sbb
fs
xchg
xorl
shlb
outsb
test
sti
outsl
xor
add
xchg
out
loop
jnp
popl
scas
lcall
or
cmp
cmp
pop
mov
cmp
test
mov
lret
jp
in
sub
cmpsb
rsqrtps
test
jae
mov
add
fwait
inc
stc
imul
in
pop
test
mov
sub
inc
movsl
stos
dec
pop
lds
push
scas
pop
xchg
arpl
and
lds
pop
ja
and
mov
jns
std
xchg
jg
and
lret
arpl
or
push
iret
mov
xchg
push
aas
cmp
stos
jo
pop
pavgb
movsl
mov
jle
stos
dec
pop
bound
ds
daa
push
mov
fs
sbb
jle
movsb
daa
fnsave
outsl
mov
faddl
enter
push
jbe
out
outsb
jecxz
xchg
andl
lret
dec
imul
shld
rcrb
mulb
push
mov
and
insb
sbbb
xor
pop
xchg
lds
inc
inc
pop
xor
mov
cwtl
jnp
repz
or
add
mov
or
mov
mov
ret
addb
ds
push
aaa
in
cmp
lret
sub
imul
inc
xchg
jae
fdivs
fiaddl
lahf
mov
fnstcw
es
iret
mov
aas
sub
or
and
aas
out
xor
gs
mov
imul
test
outsb
mov
nop
add
test
dec
mov
mov
insl
cs
test
mov
movsb
sub
xor
fisubrl
mov
cltd
push
sub
shr
xchg
inc
sbb
sbbb
pop
pop
lds
sbb
inc
iretw
loopne
ss
pop
cld
es
cmp
xchg
mov
gs
xor
lea
add
sub
pushf
test
call
or
std
jge
pushf
adc
enter
test
jge
or
push
test
xchg
in
push
inc
add
cmp
xchg
or
pop
jmp
dec
aaa
mov
pushl
loopne
outsb
jmp
shr
fidivl
mov
cmc
sbb
hlt
test
gs
loop
mov
pop
push
mov
adc
inc
fisttps
fyl2xp1
mov
or
xchg
pusha
xor
stc
lret
xchg
mov
cmp
shrb
idiv
sub
jecxz
pushf
xchg
sbb
gs
das
les
shlb
icebp
mov
inc
loopne
repz
push
sub
xor
mov
ffreep
in
inc
mov
les
cs
fisttps
and
mov
dec
xor
xor
ja
mov
inc
fistl
in
repnz
clc
bswap
push
sub
rolb
and
push
cmc
push
lcall
push
jmp
lea
jecxz
bound
jb
or
test
lret
stos
movsb
push
sub
mov
cltd
sub
mov
cmpsb
cmpsl
inc
mov
xor
inc
cmc
xchg
push
xchg
leave
sbb
shr
sub
xchg
jge
fadd
setl
outsb
aaa
sub
jmp
jle
rol
xor
je
fstpl
cmp
mull
sub
adc
lods
inc
cmp
push
pop
xor
rolb
pop
mov
ds
mov
mov
or
mov
pop
insb
jg
negb
sbbl
sahf
xchg
stos
or
jb
in
xchg
cmpsl
fisubrl
fnstenv
jne
add
xor
inc
je
cltd
aad
jge
fwait
enter
cmp
cmp
jo
sub
aaa
mov
das
into
jbe
cltd
add
xor
inc
push
add
xchg
and
aam
jns
cmpsl
out
imul
movb
xchg
shrb
loope
cld
jb
mov
nop
insb
lea
shll
cltd
push
inc
xchg
int3
mov
addr16
xchg
mov
cld
push
pop
add
movsb
repz
dec
dec
cwtl
and
scas
lods
int3
cmpsl
or
push
mov
inc
std
fmull
dec
sbb
mov
dec
mov
push
fincstp
sbb
xor
and
dec
psubusw
inc
arpl
dec
adc
loope
sbb
cli
lods
inc
lods
and
repnz
ds
out
or
lret
cmp
pop
mov
repz
enter
jle
add
push
test
in
mov
mov
mov
add
fnstcw
and
jno
or
sub
jmp
sbb
loopne
scas
clc
lahf
leave
ficompl
aad
xor
lods
lds
mov
inc
addr16
popa
pop
add
fidivrl
popf
push
andb
das
push
insl
inc
pusha
scas
imul
decb
stos
dec
or
jp
xor
sbb
fldcw
fwait
popa
movsl
inc
lods
cli
mov
sub
adc
adc
in
mov
sub
push
enter
cs
jbe
inc
bound
repz
insb
push
mov
inc
mov
xchg
or
add
popa
inc
push
sti
jmp
or
sbb
xchg
push
fstl
sub
cmp
xor
outsl
jp
mov
add
outsb
popa
mov
out
push
mov
loope
lcall
rorb
push
insb
add
je
and
lret
stos
fldt
sub
add
xchg
pushf
pop
xchg
mov
scas
push
or
cwtl
ds
xlat
push
daa
cmpsl
orl
xchg
pop
rorb
pushf
movl
fisubs
rolb
icebp
cmp
mov
mov
dec
mov
dec
push
xorl
jge
sar
cli
clc
loop
push
and
or
jg
sub
pop
sub
inc
mov
push
sti
and
jg
int3
aaa
fdivs
xor
cmp
loope
and
cmpsl
test
and
repnz
and
fs
testl
push
jae
mov
pop
mov
jecxz
popf
ljmp
clc
push
stos
lret
jbe
jbe
jle
push
mov
mov
mov
icebp
dec
adc
gs
mov
jmp
pop
dec
lods
mov
dec
adc
stos
gs
mov
daa
adc
jmp
ret
sbb
add
loope
dec
subl
mov
mov
mov
iret
sub
stos
push
sbb
repnz
dec
mov
and
fdivr
xchg
xchg
add
or
fimull
lea
inc
imul
jecxz
sbb
popa
aam
dec
or
popa
dec
xor
jp
add
or
mov
scas
rcrl
adc
test
nop
call
movsb
adc
fcompl
sti
dec
dec
leave
xlat
and
and
popf
sbb
inc
cmp
mov
ret
in
adc
adc
push
push
jbe
int
bound
xor
mov
sbb
adc
xor
sbb
lcall
mov
les
sub
call
push
notl
jo
or
enter
ds
pushf
push
lock
iret
pop
ds
out
fs
std
pop
fidivl
jecxz
mov
mov
or
adc
xchg
aad
inc
mov
aas
push
cmp
aas
aam
mov
jl
daa
call
dec
add
xchg
jg
mov
inc
dec
or
dec
mov
mov
push
shll
xor
int3
movsb
out
or
adc
adc
push
push
cltd
sub
testb
dec
cmp
mov
add
add
adc
shr
lods
cmpsl
lds
or
jecxz
push
push
mov
ja
xchg
cmp
inc
iret
xchg
pop
push
mov
je
arpl
pop
inc
test
or
mov
and
leave
xchg
or
in
mov
in
aas
push
scas
sub
fsubrl
cwtl
cwtl
pop
cmpsb
cwtl
in
rcll
out
lret
dec
push
out
mov
sbb
call
insb
add
mov
fisubl
enter
lods
and
out
adc
addr16
xchg
sub
lcall
hlt
sbb
and
rcrl
pop
lahf
or
jne
addb
jmp
sub
out
icebp
push
cmp
and
sbb
xchg
mov
fistps
movsl
pop
inc
mov
pop
jle
out
shll
cmp
and
adc
inc
and
lahf
ret
loopne
sub
jns
sub
cli
add
xchg
bnd
scas
adc
or
and
pop
xorb
lret
out
pop
dec
adc
xchg
sbb
mov
mov
loope
pop
or
pop
sbb
popf
jle,pn
dec
pop
cld
cld
scas
ret
into
adc
std
add
or
ret
jl
int3
mov
push
out
cmp
cmpsb
mov
cli
jle
loopne
jp
es
repz
jno
dec
andl
dec
xchg
call
inc
jb
imul
pop
mov
inc
enter
or
xor
xor
mov
rclb
pop
out
gs
xchg
aas
inc
add
mov
dec
add
scas
xor
ja
imul
jno
movsb
push
sub
sbb
divl
bound
cwtl
repz
repnz
jne
popa
jmp
jb
out
xchg
add
in
jo
into
lcall
movsb
imul
xchg
mov
shrb
add
lods
imul
stos
insb
inc
adc
xchg
jno
dec
jae
add
mov
sahf
leave
and
inc
mov
jp
aam
shll
cld
cld
je
repz
mov
sti
mov
mov
aaa
cltd
pop
test
popa
pop
xchg
fwait
popa
ljmp
sbb
cld
cwtl
stc
int
adc
mov
mov
add
pop
mov
push
mov
pop
adc
xor
xchg
into
pop
mov
mov
repnz
lret
lahf
and
pop
in
xchg
mov
pop
movsb
mov
test
imul
jmp
inc
test
sbb
xchg
or
in
ljmp
inc
icebp
xor
jo
pushf
mov
sbb
popa
stos
leave
push
icebp
and
inc
fs
icebp
cs
jmp
les
lcall
repnz
gs
mov
push
and
inc
add
rolb
fildl
pop
inc
add
scas
lahf
enter
scas
stos
xor
adc
insb
shlb
sbb
dec
jns
push
pop
mov
dec
int3
mov
xlat
jno
fadd
xchg
fcomps
push
add
push
inc
cmp
mov
cmpsl
push
lret
imul
jmp
jecxz
or
cli
cld
cld
fistl
insl
ror
fstps
nop
test
aas
into
jmp
iret
cwtl
xchg
mov
inc
push
shl
int
bound
jns
push
mov
add
mov
jnp
or
cmp
out
lods
jle
xchg
inc
and
in
loop
ds
inc
outsl
or
hlt
stos
testb
dec
test
cmp
xchg
adc
mov
xor
lods
and
iret
imul
repnz
push
push
cltd
in
pushf
inc
mov
call
push
addr16
scas
test
cmp
gs
scas
movsl
aam
fcoms
inc
adc
sbb
pop
and
lahf
int
mov
adc
xor
fcmovnbe
mov
push
xchg
add
push
mov
push
dec
jge
mov
sbb
sbb
xor
jmp
mov
add
lock
pop
subb
std
dec
mov
jge
push
cwtl
shl
jge
repnz
jb
push
sahf
mov
adc
add
pop
push
lds
fucomip
push
fidivrs
dec
loop
loop
pop
jns
fdivp
and
scas
outsb
pop
mov
jb
cmp
mov
inc
adc
into
lods
add
pop
inc
jae
xchg
dec
sbb
pop
sbb
pop
mov
pop
out
sbb
testl
je
cmp
js
imul
xchg
imul
loop
sbbb
mov
push
cli
adc
gs
add
cmp
shr
jno
testl
sahf
mov
movsl
push
sahf
mov
cmp
aaa
mov
incb
pop
movsl
pop
cs
shl
in
lahf
test
or
out
scas
aad
jo
mov
and
push
das
lock
ljmp
inc
in
inc
mov
imul
jo
cs
pop
mov
jo
push
in
sbb
imul
insb
iret
push
sub
add
leave
mov
fiaddl
ss
lret
popa
xchg
je
or
add
xchg
add
lods
pop
xchg
cmp
adc
sbb
jno
push
sub
shlb
jecxz
negl
cmc
loop
mov
add
out
mov
xchg
dec
daa
int
fimull
push
outsb
clc
dec
inc
lock
xor
sbb
jge
inc
lods
leave
cld
faddl
mov
mov
jecxz
leave
jmp
loope
pop
fnsave
jmp
sti
fildl
dec
rcll
aas
sbb
call
sub
fsubrp
lret
clc
scas
mov
adc
pop
xchg
std
cmp
mov
sbb
aad
inc
mov
pop
fsubrp
inc
sub
jmp
adc
push
test
mov
adc
mov
fs
das
jns
dec
fadd
mov
lods
push
sub
in
inc
pop
fsubrl
cwtl
xlat
jno
and
push
xor
int3
fbstp
fbld
mov
ds
aaa
xlat
mov
insl
aam
sub
ss
pop
ret
and
push
cmp
mov
sarb
popa
sub
cs
pop
pop
adc
out
pop
aaa
xor
dec
mov
sbbb
cwtl
adcl
andl
push
scas
or
sbb
jbe
in
test
ds
idivb
inc
add
mov
je
outsb
pop
dec
pop
faddl
test
and
ljmp
fbld
icebp
out
dec
xchg
pusha
shlb
cs
jle
xor
fnsave
jmp
out
cwtl
inc
adc
mov
and
or
cmp
clc
sbb
and
mov
push
inc
fisubrl
inc
bound
or
mov
sub
sti
inc
fldt
add
mov
mov
neg
mov
xrelease
or
jp
std
nop
lret
push
divl
aam
fnstcw
dec
dec
aaa
pop
insl
cli
inc
mov
jge
or
xchg
movsb
fdivrs
mov
sbb
xchg
dec
sahf
push
mov
je
inc
cli
fcomps
insb
inc
mov
pop
dec
bound
mov
dec
mov
ljmp
inc
cltd
aad
test
rcll
pop
push
icebp
rol
dec
sbb
call
jge,pn
adc
push
jmp
loope
xchg
add
xchg
dec
fdivrl
push
lahf
cmc
shll
cld
pop
fwait
mov
and
or
pop
inc
mov
sbb
jbe
mov
mov
jae
sub
or
mov
arpl
in
push
sahf
jg
fwait
outsb
test
fwait
outsb
mov
outsb
stos
xchg
jle
popf
dec
jg
enter
aas
in
xor
je
sbb
stos
and
lock
loop
or
fdivl
mov
jns
sub
push
pop
push
lea
pop
inc
leave
aam
inc
dec
dec
scas
test
andl
cmpsb
cmp
jae
insb
jp
roll
adc
push
ja
sarl
cmc
push
sahf
cmpsb
push
aam
lret
dec
cli
jo
xchg
data16
pop
xchg
sti
cmc
jns
xor
outsb
ss
push
xor
push
mov
fmul
outsb
cmp
adc
ljmp
add
push
cltd
cltd
adc
mov
dec
xlat
fdivs
leave
cli
push
mov
push
jo
fbstp
bnd
rol
add
mov
insb
push
push
pop
adc
push
dec
sub
add
lcall
mov
inc
cmp
adc
cwtl
sbb
push
fistps
mov
xchg
xor
push
outsb
cmp
and
add
sti
test
mov
out
ljmp
mov
sbb
adc
insb
hlt
lds
cmpl
and
add
jns
mov
dec
sbbl
cmp
push
xor
add
mov
inc
lahf
in
jno
lods
mov
and
mov
movsl
xchg
mov
sub
addr16
icebp
pusha
inc
loope
xchg
sbb
xor
cld
iret
mov
out
sub
sbb
push
add
xor
enter
mov
xchg
ds
adc
push
out
push
repz
dec
sub
push
mov
or
mov
fmulp
jae
lret
jp
insl
popa
pop
ss
add
sarl
inc
mov
push
bound
push
out
fucomp
aaa
xchg
ljmp
mov
dec
in
xor
movswl
add
cli
stos
mov
cmp
mov
cmp
jle
sub
jb
out
dec
outsl
mov
movsb
push
xor
adc
nop
fidivl
cmc
jl
inc
ljmp
xchg
mov
inc
push
jmp
test
sub
lods
and
lock
call
xor
rcr
inc
das
xchg
pcmpgtb
xor
jmp
sbb
sbb
test
jno
lea
dec
lods
les
outsl
dec
outsb
lods
ret
addr16
cmp
pusha
ja
push
or
std
or
jmp
insl
mov
inc
mov
dec
xchg
lcall
stos
xchg
add
or
stos
push
sarb
pop
fidivs
dec
mov
and
inc
scas
jno
out
int3
push
in
pop
sbb
jae
movsb
ja
jns
aaa
ljmp
pushl
data16
sub
es
pop
mov
dec
jmp
sub
sbb
mov
mov
cli
stc
js
inc
push
jb
mov
push
jnp
push
and
cli
push
jo
cli
cmpb
pop
cmp
mov
xor
xor
fstl
lret
and
imul
js
fs
dec
and
mov
mov
sbb
out
sar
fcoml
mov
lods
mov
bound
cltd
outsb
pop
lret
jmp
adc
scas
lea
mov
lret
les
add
mov
sti
jns
pop
clc
cmp
lcall
mov
xchg
in
cmp
mov
cld
cmp
pusha
loop
ret
xchg
lea
lret
sahf
pop
dec
dec
outsl
adc
jne
xchg
xor
ja
cmpsl
sahf
imul
pushf
xchg
clc
daa
insb
dec
mov
push
mov
sbb
xor
cwtl
pop
push
int3
rcrl
cmp
mov
jecxz
enter
stos
frstor
insl
enter
cli
xorb
loope
sti
sbb
rol
mov
mov
push
or
test
sahf
push
flds
mov
and
dec
add
cli
cmp
xor
loopne
lret
add
movsb
pusha
shl
sub
push
mov
inc
out
cmpl
int
pop
or
xchg
daa
mov
addr16
enter
mov
mov
stos
rcrb
ds
ja
lcall
jne
inc
icebp
sub
les
mov
inc
mov
ljmp
dec
notb
mov
enter
arpl
xchg
inc
adc
mov
pop
jbe
xor
leave
jns
push
test
and
test
sbb
pop
in
daa
sti
adc
jecxz
sub
mov
jne
mov
sbb
sbb
push
adc
push
inc
push
movsb
lret
popa
cmp
adc
sub
cmp
sub
clc
out
movhlps
bound
pop
mov
or
adc
movl
repnz
cmpsb
shrl
cmp
pop
cli
je
xchg
cmc
jle
and
in
dec
xchg
xchg
sbb
ret
push
addl
inc
test
popf
test
stos
pop
hlt
lcall
imul
inc
enter
lcall
cmc
pop
adc
push
imul
cwtl
ficoml
ffree
mov
sbb
imul
adc
or
dec
adc
mov
leave
fcomps
shl
iret
xlat
out
pop
outsb
push
mov
mov
scas
mov
push
mov
movsl
lds
cbtw
testl
aad
mov
jb
cmpsb
test
data16
leave
loop
mov
xchg
lods
cmp
orb
mov
push
jns
and
test
jno
cmp
lea
pop
push
lods
lods
pop
fwait
dec
jp
xchg
jnp
xchg
movsb
orb
jb
test
data16
jle
sub
jae
cmc
inc
sti
bnd
fcompl
sbb
inc
cltd
pop
push
jecxz
cmpsb
stos
xchg
pop
sbb
icebp
negb
xor
adc
mov
out
pop
int3
cmpsl
std
sbb
xor
push
adc
inc
int
andnps
data16
jne
popl
int
fdivl
xchg
inc
jg
rorl
in
push
dec
or
in
or
sbb
sbb
push
call
jb
hlt
add
fisubrs
jns
and
mov
mov
aad
das
inc
sub
mov
xchg
dec
pop
lods
shrb
leave
and
sbb
loop
mov
idivb
incb
ret
adc
xchg
cmp
xor
shrb
xchg
cwtl
jne
mov
sub
jbe
adc
fstl
adc
mov
jbe
sub
mov
cmp
ljmp
jmp
in
pop
out
enter
mov
mov
pop
jnp
das
mov
push
aas
flds
jnp
cmp
add
or
pop
fwait
xchg
test
insl
pusha
movsb
jns
fstpt
adc
leave
nop
sub
dec
les
insb
ja
es
pop
inc
mov
mov
imul
mov
push
add
add
iret
mov
jno
int
lret
rcll
pushf
pop
mov
sbb
mov
addr16
sub
dec
xchg
mov
cs
adc
lock
dec
imul
inc
data16
mull
loopne
out
popa
inc
fwait
sahf
lea
mov
push
jae
push
mov
leave
add
add
fnstsw
add
jne
mov
out
mov
push
xor
mov
inc
sub
mov
imul
sarl
std
or
test
lods
test
in
adc
leave
mov
mov
sub
add
xchg
push
rorl
and
in
xorl
push
dec
adcb
lods
mov
imul
inc
insb
jl
mov
in
jp
sti
push
mov
out
data16
int3
inc
adc
pop
dec
sti
and
add
cmp
rclb
dec
cltd
mov
arpl
add
out
sbb
loop
add
xor
int
mov
out
std
leave
xchg
test
cli
xchg
mov
leave
pop
cli
adc
or
in
jl
and
fcomps
movsb
jg
mov
andb
inc
cld
stos
mov
mov
jb
mov
and
out
jmp
ja
mov
xchg
mov
adc
popf
dec
dec
pop
sub
icebp
push
push
imul
in
gs
fdivp
stc
pop
ljmp
adc
mov
lods
negl
dec
repnz
scas
fnstenv
jnp
mov
roll
fcomps
sub
mov
ljmp
or
ja
test
lcall
outsb
dec
dec
iret
cmpsl
sub
mov
pushf
lahf
add
sbbb
adc
dec
sbb
pop
sbb
stos
fmul
insb
pop
mov
call
in
iret
jno
je
sysret
lret
test
xor
jle
pop
xor
jge
mov
xor
sub
push
inc
mov
cmp
xor
andl
and
sbb
adc
mov
cld
hlt
insl
xorb
or
or
cmp
push
mov
xor
dec
aad
cmp
add
mov
lock
push
int
sbb
inc
imul
cli
pop
jle
cmp
jne
pop
pop
int
mov
jge
push
ret
adc
lcall
ret
pushf
lds
notb
sahf
std
out
test
pop
inc
push
in
xchg
mov
push
inc
and
lods
movsl
popf
clc
scas
and
mov
cld
or
stos
inc
icebp
jno
ret
add
scas
and
adc
pop
push
xor
xchg
adc
mov
test
push
std
pop
and
imul
rorb
mov
add
je
fbld
cmpsb
iret
mov
fisttpll
dec
sub
mov
adcb
mov
add
cwtl
xor
push
jo
iret
inc
xchg
mov
outsb
fisubs
sub
dec
mov
adc
jno
addr16
in
testb
sbb
push
cmp
movsb
pop
cmpsb
sub
xchg
scas
test
out
and
jge
out
mov
scas
xchg
sbb
jge
dec
ds
out
lods
outsl
dec
in
in
mov
loop
loope
mov
push
mov
leave
sbb
xchg
jmp
out
inc
push
shrb
jecxz
insb
in
lahf
dec
mov
and
loop
pusha
lret
mov
hlt
fmull
lock
add
fs
dec
adc
jp
cmp
ds
dec
cld
scas
daa
rcl
outsl
adc
aad
xchg
icebp
rcr
and
lods
adc
stos
inc
ljmp
fidivl
mov
fsubl
sbb
std
test
xchg
movsl
adc
pop
scas
mov
iret
and
sbbl
pop
mov
adc
je
lret
jg
cli
inc
in
ja
inc
imul
sub
jno
mov
outsl
xchg
pop
arpl
jge
shr
and
out
adc
popa
xadd
sahf
es
stc
sub
mov
test
test
cli
add
pushf
or
mov
sub
push
sub
adc
mov
divb
lahf
aad
push
push
fstpt
mov
ret
adc
xor
sub
out
pop
sbb
cli
lret
test
sti
dec
bound
inc
les
cmpsb
mov
inc
mov
aaa
in
xchg
xchg
dec
sbb
cmpsb
out
xor
xlat
idivl
jp
cmpb
adc
andl
sbb
divl
or
push
adc
pop
rcr
pop
inc
sbbl
or
push
sbb
jecxz
fucomi
xchg
cwtl
push
pop
cmp
adc
pop
imul
mov
scas
pop
test
loop
mov
mov
mov
pop
das
push
mov
fidivrs
arpl
je
cmpsl
ret
push
sub
sahf
jl
sub
fmull
xchg
pop
ret
and
mov
push
dec
xchg
or
jns
pop
push
repnz
shll
xor
adc
and
cmc
xchg
inc
cli
sbb
in
inc
scas
cmp
cmp
push
scas
xlat
sub
mov
jbe
aam
popf
clc
dec
iret
or
arpl
mov
mov
xchg
adc
push
fdivr
loop
cmp
jnp
xorl
cmp
iret
int3
jbe
jns
push
shr
jmp
push
mov
cs
add
pop
ret
cmpsb
imul
insl
iret
es
adc
xor
xor
or
sti
mov
or
push
cld
test
and
dec
inc
out
add
jnp
push
fs
push
mov
pop
jns
icebp
test
mov
lret
pop
lods
jmp
adc
movsl
icebp
mov
std
or
xchg
adc
jno
push
mov
adcl
push
les
fwait
dec
lret
add
ret
sub
push
and
cmp
inc
lods
and
out
sub
popf
rolb
add
outsl
imul
jb
inc
adc
mov
inc
mov
repnz
scas
adc
and
add
dec
les
mov
out
adc
push
pop
cltd
jns
lahf
ja
bound
std
aad
add
or
js
fidivl
or
fwait
ror
scas
cmp
jb
sahf
out
data16
fmuls
mov
xchg
mov
mov
xchg
push
or
mov
imul
cmc
fldt
aad
push
lcall
aaa
fildl
or
adc
pop
dec
lds
rol
mov
repz
adc
adc
lret
nop
jg
sbb
dec
repnz
inc
xlat
pusha
std
and
loopne
roll
mov
sbb
sbb
xor
sbb
andl
lods
cltd
sti
or
rcrl
insb
pushf
inc
jl
sub
bnd
out
jge
mov
lea
adc
dec
lock
test
lcall
adcb
pop
xchg
xchg
clc
cmp
insb
pop
imul
xor
into
aas
cmp
andb
mov
pop
arpl
inc
cmp
aas
inc
lds
fiadds
stos
ficoml
cmovae
inc
push
test
cmc
mov
ret
sbb
sbb
cmp
cli
pop
ss
xchg
imul
lcall
fmuls
pusha
fcoms
jg
pop
pusha
test
popa
xor
es
mov
jno
mov
mov
pop
orb
pop
lock
xchg
call
ja
mov
arpl
and
sub
fdivrl
aaa
push
aad
lahf
gs
sub
add
in
std
or
and
stos
and
xchg
ds
sbb
mov
mov
pop
sbb
jb
inc
mov
cmp
xchg
adc
dec
cmp
inc
jb
lods
std
sbb
mov
bnd
fwait
or
pop
xchg
mov
add
pop
add
add
adc
add
jns
gs
sbb
fisttpl
cltd
mov
jnp
jns
mov
fs
imul
pop
lret
pushf
outsl
test
mov
sti
jne
xor
inc
outsl
rorl
jg
push
mov
and
int
jbe
test
and
add
xchg
push
xor
out
scas
add
divl
decb
mov
fwait
add
shlb
stos
xor
mov
push
mov
cmp
insl
jle
mov
jo
test
push
sbbl
cmc
fildl
lret
xchg
mov
pop
inc
adc
push
mov
cmp
mov
dec
push
push
jmp
and
sbb
adc
and
jns
mov
and
adc
cmpl
test
andb
and
cld
mov
push
pop
fsubrs
stos
enter
sti
js
enter
sahf
ss
jne
lahf
andb
pop
fbstp
fdivl
aas
test
ficoms
pop
outsb
jbe
adc
out
negl
mov
push
dec
stos
es
xor
int3
dec
adc
dec
jl
adc
pop
je
xor
repz
lret
sub
loop
repnz
mov
rcrl
jmp
cmp
mov
dec
adc
ss
aam
sahf
mov
aad
fsubrl
add
sub
jg
test
mov
test
cmc
cmpsl
or
jo
shr
jl
mov
jno
pop
arpl
push
jp
dec
pushl
imul
push
in
pop
out
into
scas
and
mov
cli
aas
fists
repz
mov
mul
mov
jb
mov
popf
out
mov
jmp
cmpsl
xor
jl
ficoml
sbb
mov
add
pop
jnp
cmpsl
sub
inc
pop
cmp
aas
out
cmpsl
shl
sti
call
jae
lods
sub
sbbl
dec
sahf
xor
or
or
add
das
and
pop
nop
andl
nop
sub
xchg
mov
testb
pop
mov
in
jns
inc
jno
cs
dec
xchg
dec
adc
dec
cmp
into
xchg
and
jle
mov
push
sbb
lret
das
sub
enter
mov
mov
fwait
clc
and
mov
xor
mov
adc
je
out
repz
dec
dec
push
sbb
jbe
cltd
cmpsb
push
mov
enter
lods
pop
dec
xchg
jns
loopne
insb
xor
loope
mov
ja
adc
sub
pop
inc
je
test
lods
orl
fnsave
mov
push
int
mov
jne
fs
ljmp
cs
stos
xor
cmp
mov
push
in
cld
les
lods
sti
out
lcall
and
enter
mov
pop
mov
mov
movsl
ret
out
mov
jne
out
cmp
fidivrs
pusha
lods
into
lahf
xchg
inc
mov
and
xchg
jp
jns
fimuls
ret
into
and
orb
dec
dec
or
mov
dec
out
out
and
cmp
mov
jecxz
add
stc
outsb
mov
push
arpl
les
cmp
idiv
and
int3
cmp
pop
inc
adc
jbe
scas
mov
cmp
dec
stos
jbe
insb
cmp
jbe
fcmovnu
gs
xchg
cld
fistl
ja,pn
jbe
mov
and
std
ja
jae
les
mov
ja
xchg
sahf
bound
mov
push
mov
scas
sahf
fwait
inc
pop
nop
cmp
cmp
lret
cwtl
leave
xchg
pop
lahf
pop
jle
jle
push
test
sahf
lahf
push
jno
ss
mov
fisubrs
jns
cmp
hlt
aam
ret
in
shl
insl
fs
outsl
jne
jle
sub
pop
add
pop
je
fcos
mov
addr16
dec
fimuls
dec
dec
shl
aaa
pop
iret
iret
xchg
push
pop
test
call
mov
cmc
pushf
cli
mov
xchg
dec
sbb
in
jae
loop
mov
lea
sub
mov
fnstsw
mov
jb
shlb
cmc
push
sbb
js
mov
cmpb
lock
mov
cltd
ret
jb
xchg
in
sbb
pop
cld
cli
insl
hlt
xor
mov
aaa
cwtl
pop
cmp
or
in
add
push
inc
pop
fcompl
mov
lea
imul
mov
mov
fsts
roll
cmpsl
adc
incl
cmp
int3
out
pusha
mov
cmp
jecxz
les
in
cli
mov
sub
aas
pop
fwait
dec
int
stos
push
les
les
fs
hlt
push
mov
cmp
loop
fisubrl
scas
leave
dec
mov
das
pop
loopne
sub
mov
pshufw
insl
mov
push
fmuls
jmp
test
stos
sub
or
mov
out
pop
call
fisubrs
pop
outsl
loope
push
cmp
loop
add
push
sti
sbb
cmp
fidivs
cmpsl
fcompl
xor
mov
push
adc
mov
je
js
fldt
mov
inc
fsubrl
mov
fidivrl
cltd
sbb
mov
out
mov
xchg
xor
mov
xor
mov
xor
jle
xchg
sbb
mov
test
inc
xchg
or
add
sahf
mov
jg
fnstenv
les
out
in
push
and
push
xchg
cmp
push
lret
jno
shll
push
adc
daa
lret
mov
shrb
mov
nop
popf
mov
dec
and
lea
push
out
mov
xor
mov
pushf
imul
outsb
pushl
pop
xchg
dec
lock
mov
jmp
int
das
sbb
popf
pop
mov
stos
push
out
sahf
test
xor
or
notl
pop
shrb
add
dec
fnstsw
xor
decb
push
jmp
mov
add
data16
mov
and
scas
lods
repz
mov
mov
mov
out
sub
and
lret
jbe
dec
mov
dec
add
stos
xor
xor
mov
pop
lock
and
xchg
push
pop
jmp
mov
insb
insb
and
pop
dec
push
jge
dec
cmpsl
insb
mov
push
fmull
outsb
push
iret
pop
cmp
popa
adc
push
jno
ja
add
lret
push
cmp
sbb
addr16
adc
xchg
xchg
shlb
push
arpl
xor
xor
push
sbbb
adc
inc
cmp
adc
test
cli
in
fs
leave
fisubrl
xor
and
mov
jno
adc
inc
or
dec
push
or
mov
sbb
hlt
xor
out
iret
inc
enter
repnz
push
push
cmp
out
adc
mov
inc
mov
addl
ss
cltd
mov
push
clc
mov
rclb
call
setnp
js
mov
pop
mov
or
insl
pop
mov
pop
push
inc
inc
jl
lock
jecxz
jecxz
hlt
in
dec
daa
popl
loop
push
pop
pop
and
mov
loope
and
insb
push
adc
inc
cmc
cmp
cmp
mov
stos
add
out
arpl
pop
add
outsb
imul
mov
cld
es
sbb
sbb
push
cmpsb
lods
inc
inc
imul
jl
sub
sbb
add
inc
jp
filds
cmpsl
or
xor
leave
push
add
mov
cmp
sub
test
fwait
and
je
subb
adc
fildl
xchg
insb
cmp
mov
jno
or
cld
int3
pop
loop
push
inc
sbbl
and
xchg
mov
shlb
pusha
mov
imul
jecxz
or
mov
jb
jge
cltd
mov
xchg
mov
jbe
sbb
pushf
pop
or
or
scas
into
and
aas
into
fwait
mov
or
cmpsl
lret
jae
push
sub
addb
lods
jno
lret
jmp
sarl
xchg
test
mov
adc
repz
push
cmpsb
into
ror
sub
lret
mov
and
aam
or
sahf
xor
negl
xor
jne
ja
das
pop
fmull
and
jb
lcall
and
xor
cmpb
inc
mov
ljmp
pop
jmp
mov
cmpsl
dec
imull
fmuls
in
jle
lea
pop
neg
sbb
cmp
fcompl
sbb
stos
orl
pop
pop
aas
xchg
sbb
scas
mov
xchg
dec
imul
inc
push
idivl
mov
ret
push
or
fs
cltd
gs
and
mov
jl
aas
adc
sbb
xor
xor
cld
dec
and
fadds
pop
outsb
adc
data16
cmp
pop
popf
ror
mov
out
mov
dec
add
stos
or
pop
add
sbb
into
push
out
jno
daa
aad
jp
imul
mov
cs
inc
push
jo
cltd
pop
adc
push
rcl
jns
loopne
adc
jns
pop
sahf
inc
adc
aas
mov
rcl
push
lea
cli
int3
push
mov
and
push
in
pop
xlat
das
int
mov
js
mov
cvttps2pi
dec
sbbb
push
aam
jle
pop
xorb
leave
popf
and
lods
xlat
mov
fwait
in
fstpt
loopne
inc
movsl
call
jno
pop
ret
aam
lret
dec
sub
fsubrs
mov
sahf
neg
adc
pop
dec
pop
ffree
cmc
test
adc
aam
adc
pop
imulb
mov
jb
jae
xchg
leave
push
fs
movaps
adc
xchg
sub
fimuls
scas
xor
rcrb
pop
aam
cmp
jecxz
call
sbb
movsl
mov
mov
lods
call
dec
aad
pushf
fwait
rcrl
ja
outsb
inc
pop
cltd
jnp
cwtl
jnp
cltd
jp
icebp
cmpsb
dec
cmp
sti
pop
xchg
icebp
push
stos
sbb
push
jecxz
mov
inc
push
in
lcall
enter
call
in
leave
aas
data16
sub
sbb
dec
adc
loope
or
add
adc
lods
push
movb
shlb
lahf
iret
and
rcrb
dec
add
sbb
in
inc
fcoml
sbb
add
mov
int
xor
mov
jmp
push
cmp
push
push
mov
jge
sub
fstpl
dec
es
push
movb
les
and
loope
xor
jns
repnz
dec
inc
cli
imul
repz
and
lret
dec
test
add
sbb
jp
lds
mov
rcrb
and
push
adc
mov
jae
insb
lods
aas
arpl
jg
mov
aas
loope
in
fmulp
shl
cmpsb
jmp
adc
mov
dec
mov
cmpsb
dec
xchg
push
jmp
xor
push
shlb
mov
lods
cmpsl
ljmp
rep
jne
add
leave
lds
mov
mov
movsb
jns
testl
scas
mov
jae
jg
int
data16
cmp
or
and
sar
add
adc
push
cmpsb
test
pop
jg
inc
jl
push
hlt
pop
inc
pop
or
ja
cs
dec
mov
dec
cmpsb
dec
cmp
mov
pop
lret
loope
js
pop
sti
in
and
stc
mov
pusha
out
sbb
sub
and
imul
inc
xor
mov
test
fst
cmp
ret
popl
pop
outsl
inc
xor
shll
or
stc
ljmp
lods
cmp
cmp
push
pop
into
sub
int3
jge
sbb
cmp
jbe
jne
outsb
inc
fidivrs
inc
mov
mov
and
cmp
jecxz
sub
xor
das
test
push
add
mov
imul
cmp
xchg
mov
pop
push
fwait
scas
push
rcll
and
sub
xchg
stc
xor
insb
xor
sub
add
stos
mov
cmp
lahf
inc
stos
dec
add
cmp
jns
jmp
fdivrs
inc
sub
scas
sub
cmp
xor
jmp
ret
mov
mov
mov
sti
movsb
push
scas
mov
sub
in
test
ret
jmp
mov
xor
insb
inc
add
mov
pop
jno
pop
sbb
shll
push
loop
scas
sbb
loope
pop
stos
and
xchg
sub
and
mov
ret
mov
jnp
stos
sub
ja
enter
cmp
mull
imul
mov
fnstcw
mov
cmc
mov
or
addr16
adc
lahf
rcl
sub
je
rorl
ret
xor
push
dec
int3
cmp
rorl
nop
pusha
xchg
cwtl
in
adc
add
filds
sbb
mov
fimull
popf
cmpsb
pop
mov
dec
push
jle
add
push
rcll
rclb
ljmp
sub
subb
dec
mov
rorl
in
cli
mov
popa
out
loop
cmp
imul
sahf
mov
shlb
orl
inc
xchg
add
pop
jnp
inc
mov
sub
lea
or
inc
xchg
jb
fiaddl
push
je
fisubrs
insl
ljmp
sahf
and
jge
stos
add
gs
sti
test
xor
sub
jne
pop
jp
xchg
nop
xchg
or
push
inc
cmp
outsl
imul
jb
pusha
nop
sbb
cmp
push
daa
insb
or
and
mov
mov
xor
push
arpl
pop
add
mov
jmp
dec
adc
out
or
mov
mov
lret
in
nop
jg
js
aas
push
test
stos
xchg
sbb
and
inc
rclb
mov
add
ja
pop
jp,pt
outsb
adc
sarl
dec
mov
mov
push
sub
int3
cld
sbb
sbb
inc
xor
xchg
jo
lods
cltd
les
in
js,pn
adc
aad
lock
and
xor
sar
mov
addr16
jmp
push
fmuls
in
push
mov
sub
shrb
ficoml
inc
inc
cmc
xchg
mov
sub
xor
mov
sti
sti
fdivr
pushf
jmp
negl
dec
jp
add
xor
mov
xor
cmp
cmc
cmp
test
adc
cwtl
push
lahf
xor
in
push
cli
aas
mov
stc
imul
jmp
in
adc
and
mov
pop
in
subb
push
divl
pop
cmp
inc
xchg
nop
xchg
jb
add
outsb
fsubrl
ret
sbb
jecxz
xor
inc
sbb
mov
fmulp
std
movsl
xchg
dec
sbb
or
mov
arpl
testl
je
push
mov
add
lods
out
pop
inc
push
mov
fwait
cmp
pop
cmp
cltd
add
test
je
ljmp
sub
sbb
sbb
mov
jns
adc
shl
add
xchg
mov
lds
es
pushf
repnz
movsb
in
jmp
hlt
aas
nop
and
aam
sub
sarl
mov
ljmp
cmp
roll
sub
pop
add
jne
mov
mov
pop
adc
roll
and
or
xchg
xor
cmc
fisubrl
out
ja
jo
and
clc
sahf
in
adc
cmc
xchg
mov
std
dec
popf
test
fistpl
add
mov
insl
add
mov
mov
popf
dec
adc
sub
xor
sbb
pop
mov
push
std
adc
jecxz
shl
lea
and
repz
outsb
subl
push
imul
idivb
dec
aas
pop
insl
jnp
movsb
pusha
out
aad
xor
cmpsl
mov
fidivrl
dec
push
inc
xchg
xchg
push
push
not
mov
cmp
or
orl
pop
jns
xchg
pop
stos
inc
fs
and
mov
pop
jo
lods
into
cltd
cmp
jb
ljmp
jmp
loop
jo
into
ljmp
pop
hlt
mov
mov
mov
adcb
adcl
pop
inc
dec
push
sti
ss
frstor
mov
sub
inc
jmp
jns
andb
or
and
sbb
pop
js
pop
aam
mov
sti
inc
jmp
je
clc
loopne
inc
outsb
pop
cmpsl
mov
bound
in
add
loopne
cwtl
xchg
je
andb
in
ret
idivb
jge
adc
push
out
xchg
lds
pop
setge
sahf
mov
js
int3
add
test
sarb
or
leave
imul
push
pop
rol
testb
sbb
mov
rcrb
int3
and
rcrb
and
subl
arpl
aas
or
pop
sbbl
and
xchg
sarb
lock
inc
mov
leave
mov
xor
sub
mov
mov
jnp
and
cwtl
adc
scas
jmp
adc
cld
push
dec
mov
mov
inc
ljmp
jbe
or
mov
iret
lock
adc
jbe
test
sub
sub
ficoml
pop
mov
nop
xor
aam
bound
jle
testl
enter
mov
cmp
shlb
outsl
and
mov
cmp
or
cli
insb
in
fsubrs
adc
mov
jge
sub
cwtl
mov
lahf
lods
outsb
mov
fstpt
aam
push
cmp
into
sub
lahf
mov
repz
sti
xchg
arpl
push
rclb
in
aam
scas
les
gs
fnstsw
fidivrl
ljmp
push
scas
addb
push
fldl
push
fisttps
or
sbb
pop
dec
xchg
bound
sbb
leave
lods
mov
bound
pop
sub
bnd
mov
test
xchg
shll
jp
es
or
hlt
sbb
add
xchg
int3
mov
int3
or
aam
fistps
and
jp
push
inc
xor
stc
sub
in
sub
lock
jb
icebp
sub
inc
call
add
cwtl
mov
cld
xchg
into
aam
es
pop
cmc
sub
inc
dec
test
test
push
int
jl
push
aad
out
dec
insl
ja
jno
into
jbe,pt
lret
mov
jo,pt
xor
test
insl
enter
mov
or
push
test
cmove
or
rolb
scas
dec
fwait
mov
mov
xchg
pop
jecxz
imul
out
arpl
repnz
in
or
sbbb
das
std
or
mov
pop
adc
inc
rorl
and
leave
xchg
jge
cmc
and
jbe
in
popf
pop
push
mov
sbb
mov
adc
mov
push
pop
push
adc
or
mov
inc
divl
outsl
out
sbb
sbb
fldt
cmp
jp
in
aas
sub
inc
push
mov
ret
pop
push
and
push
cmp
push
dec
xchg
in
xchg
lea
and
clc
scas
cmp
push
cmpsb
lcall
pop
mov
jg
data16
jae
sub
adc
add
sub
arpl
movsl
call
ret
in
imul
jnp
sub
xchg
gs
pop
and
ficomps
fisttps
int3
aad
mov
cmpsb
loop
cld
dec
inc
push
fwait
test
scas
or
pop
cmp
sub
dec
pop
cmpsb
enter
bound
cs
mov
iret
mov
sbb
or
add
sub
inc
in
and
pop
pop
cmc
into
inc
data16
xor
jns
pop
addr16
add
or
iret
imulb
fldlg2
jl
imul
fbld
cli
cmc
and
mov
sbb
sbb
push
pop
jne
jp
pop
test
add
pop
arpl
mov
jbe
jbe
dec
cmpsl
add
clc
push
or
ret
sub
xchg
ja
iret
inc
sbb
nop
loope
jmp
js
test
cmp
mov
sub
jno
jnp
js
mov
ficoms
shl
rcll
fs
imul
or
mov
inc
pop
inc
in
popa
cmp
push
push
leave
cmp
dec
sbb
adc
loope
in
pop
xchg
pop
push
adc
in
dec
fsubp
lds
stos
loope
mov
cwtl
xorl
repnz
pop
int
and
shl
in
jge
xor
xchg
push
lods
jne
or
test
ja
dec
into
and
pop
jne
lea
push
mov
cli
popa
push
stos
xor
insl
rolb
fnstenv
and
sar
mov
dec
ss
psadbw
loope
cs
test
sahf
cmpsl
xchg
popa
cs
cmp
push
dec
inc
test
aas
dec
and
out
adc
xchg
xchg
mov
push
adc
icebp
pop
push
mov
add
andl
mov
fsubrl
fxsave
shlb
and
mov
push
xor
pop
lret
or
fcoml
mov
jp
adc
pop
push
and
stos
dec
adc
aam
loope
push
dec
loopne
mov
movsb
mov
pop
cmpsl
mov
sub
inc
sub
out
imul
out
nop
adc
jp
fldcw
mov
cmp
mov
mov
mov
xor
daa
push
aaa
scas
jae
ret
sbb
fdivrl
sub
fsubl
gs
popa
out
cmp
adc
in
ljmp
dec
popa
sbb
adc
and
inc
loope
repz
aas
fsts
adc
aad
mov
dec
push
imul
fstpt
inc
lea
or
cmp
enter
pop
addr16
loope
sub
hlt
pushf
mov
pop
ja
dec
push
pop
xchg
jnp
mov
in
or
in
sub
sub
xchg
out
test
sbb
adc
push
xchg
push
scas
sar
pop
xor
fwait
clts
sub
cld
sbb
lahf
ja
inc
orb
in
mov
xor
popl
inc
inc
ret
test
jmp
test
lea
addr16
pop
cli
and
dec
dec
add
add
xor
test
shll
sbbl
pop
enter
jns
daa
cmp
lcall
or
je
pop
cmp
inc
inc
popa
mov
inc
or
or
scas
iret
cltd
stos
adc
and
fildl
jle
push
loope
mov
xchg
sub
xchg
fistl
add
outsb
add
push
or
mov
push
and
mov
sbb
loop
push
sbb
jle
mov
mov
add
xor
mov
cmp
sbb
xor
lret
fidivl
movsl
or
pusha
testb
pop
or
iret
mov
stc
int3
ja
int3
adc
xchg
mov
adc
js
dec
cltd
and
mov
xchg
and
push
push
push
fcom
rep
repnz
jmp
pushf
outsl
sbb
loop
and
adc
add
inc
and
mov
jno
or
out
adc
shlb
jge
fldenv
add
cmp
scas
enter
xor
lahf
xchg
pop
mov
inc
dec
mov
shrl
sbb
popf
ljmp
xor
pop
in
mov
les
cmp
icebp
es
mov
ret
mov
pop
popa
daa
inc
mov
pop
fidivrl
movsl
push
icebp
pop
imul
sbb
jo
rcl
into
dec
syscall
mov
scas
je
xchg
test
cmpsl
pop
pop
inc
add
lds
arpl
call
mov
ja
sbb
dec
les
ja
mov
xor
mov
test
les
movsb
nop
icebp
jae
sbb
mov
stos
push
fisttpl
dec
repz
dec
jne
push
arpl
mov
sbb
cli
enter
inc
dec
icebp
jl
loop
aas
stos
dec
cltd
mov
adc
mov
in
jl
movsl
push
jle
mov
cmp
popf
inc
in
inc
rclb
test
dec
fbld
popa
push
daa
xor
and
mov
sbb
xchg
loope
sahf
cwtl
sbb
es
jmp
sbb
mov
clc
mov
jmp
pop
daa
xchg
lea
cmp
pop
rol
pop
mov
das
aas
shlb
bound
add
mov
into
cmp
fimuls
jns
out
sub
pop
mov
leave
cwtl
out
loop,pt
push
xor
pop
or
int
xor
adc
dec
aas
lock
int3
xlat
aad
les
call
insl
dec
jle
mov
cmpsl
fnstenv
int
mov
sbb
xchg
jno
bound
cmp
out
je
addr16
sahf
inc
cmpsb
push
scas
outsl
enter
mov
fistpll
scas
out
test
xor
jo
dec
aad
lods
js
sub
xor
test
xchg
fwait
mov
xor
add
mov
pop
mov
cmpsb
xchg
pop
dec
test
lcall
bound
cmp
scas
xor
dec
std
out
lret
mov
sbb
pop
loop
sub
sbb
jae
and
mov
sub
mov
test
int3
in
fisubrs
rcrb
push
or
das
sbb
cmp
jl
push
cmc
sub
and
push
js
es
gs
cmp
sub
sahf
and
xor
jg
mov
jmp
push
mov
jge
sbb
cltd
mov
sahf
or
xchg
inc
cmc
mov
fs
fistps
in
push
mov
inc
insl
add
mov
mov
aad
push
aas
or
std
adc
dec
mov
pop
imul
loope
mull
dec
push
mov
rorl
repnz
or
lock
cli
jno
push
cmc
sahf
sub
lock
into
or
nop
and
dec
cmp
xchg
mov
pop
mov
loope
stos
dec
std
test
in
sbb
in
pop
hlt
aaa
dec
mov
push
mov
sub
sbb
xchg
es
sub
pop
jb
das
and
in
mov
sub
repz
out
mov
sub
and
inc
adcb
out
jnp
lcall
xchg
cmp
adc
aaa
shl
stc
ss
enter
das
imul
cmp
lret
adc
add
outsb
mov
sar
push
or
aad
inc
inc
sbb
xchg
dec
add
mov
mov
arpl
pop
dec
stos
jp
incb
in
sbb
add
pushf
sti
fstps
rcrl
inc
adc
jl
push
and
call
call
mov
test
mov
icebp
ljmp
pop
sub
dec
inc
adc
int3
repz
out
cmp
cltd
pop
ja
xor
popf
int3
pop
pop
jp
outsl
hlt
xor
push
mov
xchg
push
sarl
dec
xchg
push
iret
pop
aam
movsb
jb
add
mov
adc
adc
inc
add
pop
pushf
pushf
movsl
lock
outsl
lods
lret
loopne
loop
push
jmp
insl
cmp
pop
push
xchg
sar
testl
jo
and
xchg
cmp
push
inc
pop
push
push
arpl
xor
mov
sub
mov
js
mov
dec
stc
shll
mov
mov
hlt
jno
repnz
cld
int3
lahf
sar
int
push
js
mov
nop
dec
xor
push
sahf
inc
mov
add
jmp
fistl
jns
cmpl
or
sbb
jne
test
dec
adcl
jne
out
test
mov
mov
sti
loopne
test
dec
and
pop
push
jb
ja
jnp
pop
enter
out
jnp,pn
cmpsl
lahf
push
out
ficoms
pop
in
fistpll
inc
lods
mov
rolb
lock
movsb
test
enter
mov
insb
stos
push
pop
push
or
fcmovnu
repnz
rcl
addr16
jge
outsb
cmp
mov
ljmp
xor
cli
jmp
mov
test
fcompl
movsl
xchg
std
cmc
xor
jge
icebp
jno
jp
mov
mov
xor
lret
shll
jle
push
adc
fcoms
or
mov
inc
lahf
cld
psubb
xchg
push
xchg
sub
mov
inc
xchg
popa
dec
jne
movsb
les
and
sub
jae
out
mov
imul
sub
popf
ror
cmp
lea
inc
ret
in
jo
stc
lret
cmc
ljmp
mov
insb
dec
cmp
and
sbb
cmpsl
or
and
fiadds
loope
ret
push
cmp
in
addr16
mov
cli
adc
arpl
mov
pop
insb
scas
leave
ret
aas
mov
xor
push
stos
shll
push
add
and
mov
adc
cmpb
jns
rcr
sub
call
adc
loopne
jecxz
or
or
push
jg
xchg
loope
test
mov
add
push
inc
inc
fmull
scas
lret
arpl
mov
sub
xchg
dec
into
sub
jae
pop
lods
sbb
add
xchg
and
or
lahf
andb
iret
and
test
lock
push
fidivrl
sbb
mov
push
loopne
fsub
aam
sbb
pushf
testl
dec
sub
aam
pop
scas
xchg
aaa
insb
sbb
or
mov
mov
mov
xor
pop
xor
and
lods
bound
pop
cmpsl
mov
add
loop
outsb
push
or
popf
push
cwtl
push
outsl
adc
push
and
mov
xchg
fisubs
and
inc
lea
into
daa
out
pop
xor
mov
push
xchg
outsl
mov
cmpsb
daa
and
lock
push
mov
push
inc
and
mov
cld
cwtl
xor
jg
aas
imull
cmp
std
or
lret
pop
in
dec
cmp
popf
jmp
pop
dec
inc
jmp
dec
in
cltd
out
sub
out
jo
aas
pop
pop
test
dec
pop
push
fwait
cmpsl
mov
repnz
xchg
push
loop
jb
cmp
ljmp
iret
insb
decl
mov
outsb
std
push
outsb
xchg
rcr
pop
cmp
pusha
jle
outsb
adc
inc
add
clc
sub
nop
call
adc
mov
mov
xchg
mov
cmp
shll
loop
adcl
jge
sti
iret
push
or
pop
and
jb
cmp
nop
xchg
and
cmpb
lret
stos
fstps
mov
loopne
fs
scas
or
sub
dec
popf
adc
imulb
pop
pop
jmp
cmp
dec
jp
lret
ss
xchg
jne
sub
ljmp
cmp
subb
add
sbb
xor
jno
into
push
out
js
shlb
iret
xchg
jecxz
dec
jecxz
pop
or
add
cli
mov
add
fdivrs
xchg
shll
int3
cwtl
clc
pop
add
add
and
xchg
dec
cmp
sub
cmpsl
dec
mov
testl
pop
sub
mov
in
ficompl
jbe
lret
jo
sbb
and
sbb
xchg
jno
inc
add
add
mov
pop
inc
push
mov
daa
out
add
lahf
push
mov
pop
cwtl
aad
or
roll
pop
jp
ds
push
push
stos
sub
stos
push
cld
jno
lods
inc
jns
arpl
repnz
add
aad
outsb
jl
les
cmpb
and
lods
in
scas
shrl
dec
in
mov
push
shll
lret
or
sbb
xchg
daa
lds
ret
jmp
cs
inc
stos
cmpb
mov
lahf
call
scas
test
xor
movsb
fs
ljmp
xor
fwait
jle
lock
fldl
addr16
pusha
cwtl
jns
clc
mov
mov
push
or
daa
test
push
xor
mov
fnsave
loop
or
dec
push
fildll
adc
lds
xchg
xor
adc
cwtl
dec
cwtl
loopne
bound
add
mov
fs
or
cs
mov
and
add
sub
sbb
push
pop
rcl
gs
pop
popa
fnstenv
jne
and
ds
lock
push
je
mov
adc
xchg
jg
inc
outsl
mov
idivl
xchg
jl
cltd
cld
pop
pop
sbbb
cmp
and
mov
stc
insl
pop
out
or
pop
mov
aas
or
cli
jmp
nop
mov
cmp
cmp
adc
cmp
sahf
or
cli
pop
enter
out
dec
push
nop
scas
int
rcll
mov
inc
mov
lock
int3
mov
and
cmp
stos
das
cmp
pop
sbb
loop
xchg
push
cwtl
lret
cmpsb
lods
sahf
stos
inc
int3
xor
cld
inc
mov
test
jno
or
adc
pop
cli
daa
jns
add
call
mov
push
mov
dec
mov
jg
test
pop
sbb
in
insb
fcmovne
ss
cmp
adc
in
loopne
push
sbb
divb
scas
inc
fsubl
in
xor
dec
dec
stos
inc
insl
lds
shrl
push
pop
aaa
mov
push
gs
decb
daa
shlb
inc
and
push
sub
repnz
jns
or
xor
js
fwait
sti
cmc
aas
adc
push
xor
loop
pop
xchg
out
add
sub
fs
pop
sbb
cmp
imul
or
pop
sbb
jmp
fsubrl
mov
jl
mov
dec
fs
push
xlat
imul
movsb
xlat
cmp
cmp
inc
lods
jmp
cmp
add
ja
and
adc
jno
jb
call
cmp
clc
shll
lcall
enter
cmp
pop
mov
mov
lods
mov
ret
xchg
dec
stos
pushf
aas
imul
bound
or
cmpsl
xor
add
dec
jmp
leave
adc
mov
lods
mov
ror
aam
in
pushf
imul
push
cmp
push
ds
mov
cmp
inc
mov
jno
rcrb
ds
or
cmp
xor
ret
mov
xor
jne
pop
rorb
mov
inc
inc
cld
stos
cmpsb
dec
or
out
call
xor
cmp
cltd
ss
js
jb
pop
pop
imul
lods
lret
inc
test
push
push
pop
pop
fsubp
mov
sahf
fldt
stos
scas
add
jp
je
fwait
rorl
xlat
test
mov
push
xchg
mov
inc
dec
cmpsb
mov
icebp
clc
js
inc
ret
scas
out
bswap
lcall
pinsrw
movsb
les
mov
lret
adc
dec
and
push
jl
cwtl
imul
aaa
dec
bound
or
xchg
add
and
cmc
adc
mov
jle
arpl
mov
fbstp
jo
push
push
mov
mov
outsb
in
jns
sub
pop
adc
mov
jl
jnp
push
andb
lea
mov
hlt
mov
hlt
adc
pusha
imul
push
push
cs
into
cltd
mov
inc
cli
dec
std
dec
outsl
sub
mul
imul
push
insl
clc
test
out
cmp
std
fisubs
push
push
xor
roll
xor
adc
lret
push
jne
push
insb
mov
add
in
out
inc
pop
je
insl
xchg
sbb
imul
inc
mov
or
dec
add
xchg
decb
das
ds
test
insb
pop
insl
iret
sub
sub
sbb
sbb
test
js
mov
xchg
lea
adc
nop
inc
lahf
jle
nop
dec
andb
mov
out
mov
das
enter
das
mov
xchg
data16
repnz
jmp
xor
sub
xor
dec
jmp
sbbb
push
sub
mov
fidivs
test
adc
xchg
pop
pop
cli
cmp
push
pop
pop
xor
rcrb
pop
xor
out
jne
out
jb
iret
fnstsw
popf
outsl
mov
gs
fsts
stos
mov
int3
pop
je
inc
cmp
jo
mov
jo
lret
mov
test
lahf
lret
and
lret
push
add
mov
push
adc
fcompl
stos
scas
std
mov
scas
jae
xor
fsub
add
leave
fldl
xor
jb
jbe
jnp
xor
pop
mov
incl
test
mov
sbb
outsl
loop
adc
dec
repz
ret
addl
fnsave
inc
pop
in
je
xor
lahf
lret
nop
mov
mov
stos
mov
jns
pop
rol
sbb
mov
xchg
sub
std
mov
xchg
mov
fnstenv
aam
add
test
xor
mov
cs
in
outsb
std
push
lock
std
stos
iret
or
mov
movsl
loop
repnz
dec
imull
jae
push
data16
xchg
mov
addr16
jno
fnsave
add
mov
jl
push
enter
int3
adc
sub
add
ljmp
mov
lods
arpl
push
sbb
or
insl
movsb
mov
mov
into
add
in
enter
aad
test
jb
inc
push
shl
lods
fcompl
mov
test
insl
sahf
pop
add
pop
cmp
pop
adcl
push
xchg
lds
addr16
xlat
dec
sahf
sahf
in
sbb
add
loopne
sbb
fsts
jp
add
adc
movsb
inc
in
fnstcw
mov
push
nop
pop
repz
mov
jl
cmp
push
mov
cmp
inc
mov
mov
sub
subb
data16
faddp
fimull
sub
inc
sub
or
fiadds
lret
sub
lods
popa
adc
fwait
mov
fwait
outsl
dec
and
mov
sub
xor
cmp
enter
jbe
xor
jmp
stc
inc
or
push
cmp
in
mov
test
jle
fwait
popa
lret
dec
nop
xchg
inc
add
mov
aam
pop
mov
pop
jg
xlat
mov
aam
pop
mov
cmp
aas
scas
cmp
jmp
popa
pavgw
jae
ret
outsb
cmp
mov
sub
hlt
xchg
ret
les
mov
push
fimull
xor
movsl
mov
cmp
in
clc
out
repz
dec
cmp
pop
ret
pop
mov
icebp
mov
inc
aaa
iret
daa
push
dec
jecxz
aas
cmc
fldcw
popa
jno
icebp
inc
adc
push
lahf
das
xchg
rcr
mov
cmpsb
pushf
out
jp
inc
imul
or
test
movsb
int3
out
sbb
mov
mov
js
push
mov
popa
sbb
adc
mov
mov
jne
or
shrl
stos
cmp
rcrl
insl
setns
mov
pop
out
rcll
inc
mov
sahf
popf
aad
clc
xor
dec
outsb
pop
js
sbbb
jg
bound
fwait
std
mov
or
or
or
out
cmp
in
dec
xchg
ds
dec
xchg
js
and
jge
lods
inc
cmpsl
mov
jle
sbb
sahf
xchg
test
mov
xchg
pop
cltd
scas
sub
jno
ret
dec
les
mov
add
mov
stos
repz
add
int
adc
jns
mov
mov
pop
mov
jge,pt
jecxz
and
pusha
xchg
cmp
inc
or
sbb
push
push
pusha
sub
mov
and
or
mov
inc
enter
cmp
into
push
nop
or
ret
cmp
lret
jno
loop
add
adc
int3
shl
rclb
pop
pop
imul
push
push
xor
push
jne
xor
sub
es
or
in
rcll
or
push
pusha
pop
xor
hlt
or
xlat
stc
fs
iret
out
fs
sbb
repnz
dec
push
cmp
mov
jp
pop
fistpl
sub
xor
gs
imul
jge
jl
push
addr16
jle
out
cld
stc
pop
out
inc
cmpsb
rorl
push
mov
lods
fisubrs
imul
jp
add
and
sub
inc
xchg
mov
popf
and
enter
sub
mov
add
mov
dec
jle
lcall
lock
dec
outsb
dec
sbb
sbb
adcb
inc
popa
adc
xchg
movsb
lahf
push
cmp
and
jns
pop
clc
aad
fbstp
cmp
sbb
nop
mov
cmc
dec
dec
rcr
jo
add
jb
test
sahf
jg
int3
push
pop
inc
pushf
insb
sub
leave
add
dec
icebp
lret
xor
jno
mov
dec
mov
sbb
inc
add
aad
leave
insl
ret
cmpsb
lret
pop
add
push
sbb
leave
xlat
jp
lret
cmp
mov
cmpb
mov
fistpl
cmpsl
push
inc
aam
test
decb
jle
or
out
mov
sub
cwtl
xchg
xor
add
test
inc
imul
mov
inc
jg
out
cwtl
mov
push
lea
pop
stc
pop
add
inc
insb
std
and
push
pushf
sbb
stc
dec
add
sub
fwait
ljmp
test
pusha
jg
xor
lret
clc
insl
lods
loopne
sahf
inc
pop
jnp
ja
mov
inc
push
or
push
pop
je
push
mov
andl
fiadds
dec
mov
cmp
add
pop
in
imul
ds
ret
inc
js
cwtl
js
arpl
push
xor
clc
sbb
pop
and
cld
cmpsb
push
pop
or
xor
inc
aad
cmpb
out
and
movsl
outsl
jno
shll
push
inc
mov
push
mov
pop
mov
mov
pop
je
ss
sbb
dec
mov
sub
pop
pop
add
and
sarl
ret
das
iret
mov
loope
push
jbe
jmp
dec
mov
aas
xchg
xor
push
lods
cmp
lods
xchg
rol
xchg
inc
xor
mov
ss
and
fidivl
or
loope
add
dec
inc
or
leave
sub
aaa
or
in
sti
and
scas
push
and
add
jnp
dec
xor
into
testb
or
jae
not
call
dec
roll
notb
negl
adc
cmp
ret
aad
into
push
fs
push
cmc
cwtl
cmp
push
inc
lds
jle
lret
mov
sub
leave
push
lret
out
fdivs
or
sahf
pushf
sbb
push
fwait
test
icebp
faddl
cwtl
xchg
ficompl
pop
rcll
in
mov
xchg
add
mulb
mov
outsb
das
add
push
push
adc
mov
in
nop
pop
mov
jp
aaa
mov
lock
insb
mov
xor
pop
arpl
sbbl
dec
jg
xbegin
cmc
aam
dec
mov
gs
add
addb
subb
sub
sub
inc
xchg
dec
fcompl
jnp
insl
popf
mov
cmp
mov
fisttps
mov
imul
test
sbb
je
xor
inc
sub
mov
adc
xchg
test
jmp
jp
xor
jge
cld
sub
popf
pop
or
add
scas
mov
push
mov
and
inc
out
sbb
and
push
jg
jo
xor
add
js
xchg
mov
ret
jl
sbb
cmp
push
std
repnz
mov
das
inc
jg
clc
gs
inc
aam
popa
xchg
das
pop
pop
jbe
sub
fwait
fs
xchg
xor
xchg
or
push
jle
cmp
mov
mov
lods
into
xchg
inc
repnz
sub
imul
jg
dec
jne
mov
fs
jp
pop
aas
xchg
das
clc
dec
jo
lcall
xlat
nop
aas
lock
adc
add
jo
add
jne
pop
xchg
out
dec
insl
lret
add
jmp
push
mov
pop
sub
mov
fs
mov
sbb
out
sbb
lmsw
aad
or
mov
pop
cmp
fsubr
fcmovb
pusha
repz
repz
sub
cmp
or
mov
int3
pop
inc
in
jns
add
pop
or
mov
bnd
adc
mov
imul
push
jno
std
push
xchg
pop
test
mov
cltd
and
xchg
jl
outsb
mov
insl
in
and
fmuls
rol
sub
mov
adc
rcrl
mov
sbb
pushf
jno
cs
rorl
adc
call
inc
pop
pop
int
fisubs
in
movsb
fmull
call
cwtl
xor
rol
lds
in
jns
adc
sub
dec
push
call
or
test
pop
mov
push
cwtl
jne
bound
push
jno
sbb
testl
jl
fs
mov
jnp
xor
out
push
xchg
repnz
pop
stos
outsb
xor
sbb
cmp
jg
scas
adc
jbe
ss
mov
sub
movsl
push
mov
mov
jmp
mov
in
fdivrs
xor
xchg
sbb
popf
dec
imul
ljmp
ss
pop
mov
mov
dec
int
arpl
fidivrl
mov
lret
inc
mov
dec
bound
inc
mov
dec
fcmovnb
jne
xor
sbb
test
pop
icebp
cwtl
inc
lahf
add
sub
mov
outsb
fcomps
iret
jno
lea
loop
mov
mov
sub
loope
mov
and
cmp
fcompl
sbb
lods
jle
or
and
scas
xchg
mov
mov
je
ss
jno
int
lret
cld
out
jg
mov
push
push
mov
subb
cmp
inc
nop
or
mov
dec
dec
das
icebp
xor
and
in
ret
xchg
fwait
cmp
gs
cltd
push
loope
pushf
ss
in
push
outsb
fistps
mov
mov
ljmp
and
clc
out
cmp
shlb
mov
popa
test
jbe
add
mov
das
call
out
jb
sahf
jg
or
or
icebp
js
mov
lahf
nop
mov
insb
cmpsb
repz
jo
mov
lcall
mov
clc
and
das
cs
test
sbb
les
inc
push
ror
jecxz
popf
or
jne
leave
push
cli
fst
pop
sarb
out
inc
sbb
pusha
lcall
cmpsb
jnp
lret
pop
mov
int3
cmp
pop
pop
ret
inc
jle
push
pop
sub
mov
pop
or
pushf
ret
int
sub
and
xor
sub
xlat
mov
ljmp
daa
stos
imul
inc
clc
ret
xchg
enter
xor
push
fists
jo
data16
pop
je
mov
adc
adc
xchg
push
xchg
addr16
std
cwtl
fdivr
pmuludq
rcrl
xchg
dec
cmpsl
lahf
sub
cmpsb
and
cmc
shll
xchg
push
jns
lret
js
ret
add
jl
dec
push
cmp
aam
lds
add
lods
push
pop
mov
out
mov
xor
push
cs
dec
out
in
xchg
jp
ret
movsb
dec
push
bound
repz
outsb
ss
psllq
xor
add
push
push
mov
arpl
scas
adc
mov
jae
cmp
outsb
lret
lahf
jle
gs
aam
push
orl
or
add
add
xor
jno
jbe
insl
je
pop
repnz
scas
icebp
nop
xchg
call
dec
and
test
lahf
inc
psrad
xchg
aas
xor
cmp
mov
and
in
add
mov
inc
or
pop
mov
in
adc
xchg
mov
sbb
stos
je
fimull
add
xchg
push
inc
pushf
sti
dec
test
jb
and
loope
es
xchg
xchg
sbb
or
xchg
testb
adc
xchg
adc
ficompl
sbb
sti
sub
call
hlt
mov
push
in
fucom
ss
push
and
mov
dec
je
mov
imul
cmpsl
lods
push
cli
sub
dec
cmp
insl
xor
mov
les
mov
fs
push
xor
sbb
sub
add
dec
mov
outsl
movsl
cltd
mov
xor
add
insb
dec
add
adc
jns
adc
aam
movsb
xor
pop
add
xchg
addb
xchg
pop
xor
cmpsl
or
in
sub
iret
lds
push
dec
add
push
nop
jg
push
push
cmpsb
inc
cmp
mov
cs
in
sbb
sub
mov
or
inc
sqrtps
cmp
or
in
mov
inc
push
hlt
ret
cmp
adc
jno
adc
xchg
sti
add
aad
inc
and
dec
nop
cmp
lret
jns
xchg
cmpsb
sarb
pop
push
cmpsl
mov
mov
push
push
push
mov
icebp
mov
test
add
dec
fidivl
bound
mov
lods
dec
cmpsb
add
call
cmp
test
adc
and
sarl
int3
xor
imul
mov
sbb
push
jns
and
xor
ficompl
pop
xchg
xor
and
pusha
outsb
imul
cld
mov
inc
lea
sub
adc
repz
cmp
mov
sahf
ret
sti
jb
mov
ret
mov
cmpsb
pop
sbb
pop
inc
add
jbe
stos
cmc
jg
out
lret
nop
xlat
jno
fcoml
leave
mov
mov
sub
enter
pop
sub
pusha
testb
arpl
mov
cmp
stos
sub
mov
aaa
cli
pop
mov
mov
push
bound
xorl
movsb
dec
and
lods
add
cwtl
movsl
adc
movl
scas
test
mov
and
cwtl
nop
repnz
ljmp
and
loop
movsl
ss
rol
stos
mov
rclb
mov
in
or
cmp
aas
cmp
pop
dec
add
lcall
sahf
insb
lahf
sti
mov
and
ja
mov
xor
leave
aaa
out
mov
jmp
data16
in
mov
cmp
rorb
imul
hlt
int3
mov
pop
gs
std
xchg
and
pop
loopne
or
jns
filds
cwtl
rcll
jecxz
or
push
fsubs
std
mov
xor
xchg
movsb
leave
sbb
iret
movsl
sbb
test
mov
in
jl
int3
das
into
adc
sub
rcr
or
enter
sbb
sub
push
decl
jae
mov
mov
adc
out
lds
cmp
xlat
pop
sar
mov
shll
jge
outsl
out
mov
dec
pushf
ret
xchg
sahf
and
xlat
cld
push
cld
mov
ja
dec
sbb
cmc
in
sub
daa
add
dec
rcr
inc
js
mov
mov
inc
mov
cli
stos
movsb
lahf
cvtpi2ps
andb
icebp
in
js
mov
push
lock
enter
xor
sub
mov
call
jp
mov
clc
imul
push
mov
jmp
cmp
cmp
jns
fcompl
xchg
mov
adc
dec
pop
in
into
lret
fcomi
and
xor
xchg
and
push
pop
addl
mov
cmp
nop
dec
pop
mov
rcr
pop
xchg
xchg
dec
push
sbb
aas
xor
dec
jne
scas
dec
add
sbb
jnp
mov
add
pop
inc
out
dec
xor
mov
or
sbb
jge
out
mov
mov
mov
jne
pop
or
xchg
je
pop
or
repz
inc
inc
fstpl
sub
icebp
in
mov
and
push
xor
xchg
mov
inc
je
nop
in
les
and
fsubrs
dec
cmp
sbb
sbb
loop
iret
cmp
scas
dec
jge
arpl
xor
adc
and
fnstenv
cmp
add
mov
jle
lcall
jge
mov
and
push
mov
dec
add
addl
cltd
add
iret
test
lods
add
pusha
scas
lcall
cmp
cmpsb
repz
pop
mov
pop
push
int
into
nop
push
nop
jge
test
out
pushf
scas
add
in
or
inc
ret
add
imull
movsb
add
int3
and
mov
das
lods
stc
dec
inc
inc
in
fs
movsl
sub
out
inc
add
stc
call
add
xchg
pusha
arpl
aas
and
hlt
ficompl
pop
sbb
mov
xchg
enter
loopne
mov
js
fsubr
and
adc
cmp
ss
mov
adc
mov
int
dec
pop
pop
fwait
sahf
in
mov
cmpsl
push
jns
fsubrl
push
movl
or
sbb
lods
test
jne
mov
xor
std
mov
lea
je
aas
ret
out
add
jl
sub
test
addr16
adc
int3
cld
jns
ljmp
jno
add
add
pop
ljmp
aam
dec
mov
and
movsl
jle
loopne
pop
leave
mov
out
aas
ds
or
xchg
imull
loop
mov
imul
sarl
fisubs
push
imul
leave
fdivr
jno
mov
out
xor
in
dec
jge
lahf
iret
sub
add
or
xchg
out
out
xor
dec
sbb
mov
fisttpll
cmpsb
mov
mov
das
loop
adc
pop
jmp
repnz
mov
roll
leave
and
pop
or
nop
pop
ds
in
xchg
fs
lret
fwait
icebp
out
lds
cli
jle
inc
xor
mov
lret
inc
rclb
iret
sti
mov
adc
add
add
xchg
xchg
fnstsw
push
mov
add
adc
rclb
notb
fnsave
nop
enter
xor
mov
sub
bound
pushf
iret
out
dec
mov
jns
mov
jp
and
dec
filds
shl
jmp
jl
push
mov
dec
movsl
xor
push
cmp
icebp
xorb
sub
or
inc
mov
sbb
jbe
lahf
pop
dec
mov
adc
test
lret
jecxz
cmp
cli
and
mov
pop
js
pop
adc
cld
sarl
lahf
imul
lret
mov
cmc
fmuls
rcrl
fwait
pop
cmp
dec
shlb
mov
cmp
fsubl
rol
xchg
clc
mov
inc
pop
pop
fistpl
outsb
pop
mov
fimuls
xorb
ficomps
std
outsl
sub
sbb
mov
push
mov
add
sbb
aaa
xchg
imul
dec
je
inc
mov
xchg
mov
push
imul
mov
mov
repnz
cmc
out
mov
xor
jge
out
loop
pop
sub
loope
jae
mov
dec
jmp
icebp
in
sbbb
jmp
ss
movsb
xchg
inc
rcrb
add
pop
mov
pop
outsb
and
sbbb
mov
aas
test
or
mov
pop
out
movsb
test
les
dec
pop
pop
fs
mov
in
adc
and
into
sub
fs
or
sub
les
mov
mov
shlb
lds
push
cs
test
fcmovnu
dec
mov
mov
dec
adc
pushf
orl
pop
shrl
ds
add
push
mov
sahf
stos
inc
dec
loope
mov
dec
push
insl
inc
inc
nop
xchg
mov
mov
sbb
add
xchg
lahf
out
adc
mov
xchg
aas
mov
jge
in
xchg
movsl
xor
jge
jecxz
xchg
and
pusha
fsubl
adc
gs
adc
fisttpl
scas
jb
push
popa
cmc
sub
mov
int
mov
imul
inc
ds
push
mov
ljmp
mov
cwtl
mull
iret
pusha
lds
fcmovnb
jns
fs
popf
rol
daa
add
xor
add
cmp
fisubl
ficoml
push
pop
fwait
mov
popf
jnp
mov
mov
call
pop
pop
inc
adc
cmpsl
xor
fwait
pop
sbb
and
mov
jg
popa
jb
mov
imul
mov
push
cmc
aam
mov
jg
mov
add
std
dec
xchg
mov
loop
repz
sarl
or
movsb
adc
mov
inc
xchg
mov
fsubrs
iret
jb
xchg
addr16
repz
cmc
jmp
stos
fistpl
leave
lret
lret
add
test
xchg
inc
xchg
das
jno
push
mov
xor
ficoms
mov
stc
lods
xchg
shll
lahf
adc
and
mov
sub
mov
and
mov
test
cmc
test
or
push
sub
add
pop
pushf
addb
int3
push
movsb
mov
mov
frstor
cmp
cs
jmp
ja
mov
stc
mov
or
inc
pop
test
add
push
jnp
and
add
cmp
dec
cmp
clc
aas
imul
pop
icebp
mov
ljmp
cmpsb
xor
mov
mov
xlat
sbb
inc
cmpl
test
mov
pop
xchg
push
call
ret
hlt
mov
lock
jns
mov
cmp
bound
push
int3
adc
jl
dec
mov
sub
int3
ljmp
sub
pop
lahf
clc
mov
je
mov
popf
adc
cli
jecxz
sbb
pop
ljmp
jmp
mull
or
stc
out
pop
add
mov
jecxz
mov
popf
xchg
loop
xorl
enter
les
mov
sub
push
xchg
or
ss
mov
and
push
popa
pop
sub
mov
push
daa
mov
xchg
xchg
mov
in
gs
sete
mov
ss
int3
xchg
imul
pop
cmpsb
test
lods
mov
inc
mov
nop
jecxz
push
inc
dec
int
jb
sbb
fwait
or
or
sbb
orb
xchg
fwait
dec
lret
and
scas
inc
jnp
mov
mov
inc
int
fmul
xchg
lea
cmpsb
scas
mov
pop
mov
xchg
daa
ja
add
imul
adc
int
xor
sub
push
pop
inc
mov
mov
cmp
mov
inc
push
loop
jg
cmp
pop
daa
mov
jae
roll
sti
jno
xor
sahf
andb
mov
pop
out
jmp
ljmp
out
in
inc
dec
ret
xchg
scas
and
sti
jecxz
jne
pop
stos
in
dec
es
jg
push
mov
lock
pop
in
jl
xchg
push
rorb
subb
dec
test
gs
js
mov
std
jmp
cmp
cmp
jae
and
xor
adc
mov
popa
aaa
push
lahf
stc
int3
cmp
call
shrl
pusha
sbbb
and
shrb
or
pop
ret
pop
scas
mov
add
add
orl
icebp
mov
sarb
repnz
pop
jg
cwtl
jge
sbb
push
mov
loopne
nop
push
lea
pop
addr16
jno
and
aas
xchg
stc
sbb
gs
jmp
adc
into
mov
lds
push
aas
or
mull
leave
leave
sbb
xor
paddusb
out
popf
xchg
mov
xor
mov
divb
mov
push
fsubs
sbb
and
or
mov
out
sub
scas
enter
fadd
je
jl
cmp
std
jle
daa
sbb
je
pop
mov
shlb
mov
or
les
xchg
mov
push
pop
cmp
repz
je
lds
das
pop
xorb
movsb
dec
mov
dec
repnz
mov
daa
int3
sbb
add
lahf
out
outsb
out
pop
sub
and
pop
jb
and
cltd
jl
jb
or
mov
push
ficoml
mov
xchg
mov
das
xchg
push
xchg
pusha
cmp
iret
addr16
ds
pop
adc
inc
dec
add
push
add
sbb
scas
gs
mov
jecxz
and
mov
push
rorb
shrl
inc
es
mov
jmp
in
pop
loop
jge
arpl
frstor
mov
sbb
lea
mov
ljmp
sub
cltd
jno
arpl
sub
insl
test
fcmovu
popf
mov
jecxz
repz
test
ds
sbb
sti
push
lds
lea
lret
test
push
xor
imul
fisubrl
call
das
aaa
in
in
es
or
das
jae
rcrl
lret
lea
jbe
inc
jb
sub
cmp
dec
push
jnp
add
fstp
xchg
cs
imul
stos
sbb
pusha
dec
in
push
sarb
out
mov
arpl
aam
into
pop
lahf
push
daa
or
jne
jae
sub
sahf
scas
fwait
mov
test
xor
jbe
aam
icebp
out
sti
sbb
jle
cmp
in
ret
or
fwait
xchg
aaa
aam
clc
sub
test
pop
push
sahf
mov
xlat
mov
push
xchg
sub
cmp
mov
xorb
loope
ds
fwait
dec
jecxz
pop
je
adc
xchg
sub
cwtl
fwait
je
sub
js
jbe
xor
add
repz
xchg
mov
pop
or
add
xor
inc
or
std
cmpsl
test
inc
add
int3
ds
inc
aas
push
or
jl
inc
mov
sbb
mov
clc
adc
dec
mov
xor
mov
mov
mov
mov
cli
adc
push
cs
sub
rclb
mov
fdivrp
imul
enter
jp
sbb
std
movsb
mov
push
in
sub
xchg
mov
xorl
push
sub
outsw
sbb
xor
int
jecxz
je
mov
sbb
mov
pop
mov
sbb
push
add
call
inc
fnstsw
cmpsb
int
pop
mov
xor
aad
outsl
scas
aas
testl
fcomip
test
dec
cltd
xor
or
shrd
hlt
mov
jns
scas
adc
push
pop
jmp
inc
out
shll
push
sub
xlat
imul
or
mov
addr16
cld
sub
cld
arpl
fdivrs
and
jmp
test
shl
cbtw
inc
push
push
jbe
or
rorl
sbb
mull
dec
cmp
mov
cmp
xor
push
or
adc
jp
addr16
jecxz
mov
repz
dec
les
popa
xorb
adc
cmp
inc
imul
imul
sahf
movsl
inc
xor
fs
sbb
xor
jnp
call
and
std
stos
inc
add
addr16
inc
test
fidivrs
dec
out
insb
test
and
jl
ljmp
popf
es
fdivrl
mov
jno
and
xor
in
or
es
daa
xor
pop
cli
call
test
sub
cmp
mov
sbb
pop
or
fistpll
adcl
add
popf
push
mov
and
mov
mov
gs
cld
add
cmc
inc
orl
adc
push
lock
imul
sbb
movsl
ljmp
sbb
out
nop
out
arpl
popf
movsb
fsts
test
cwtl
or
icebp
leave
jo
push
jl
sub
add
mov
es
push
idivb
fidivl
divb
jnp
or
inc
data16
dec
ret
adc
loopne
mov
icebp
loop
xchg
xchg
pop
adc
lcall
adc
sbb
adc
push
xchg
mov
push
jle
loopne
pop
push
std
movsb
repz
addl
xor
dec
fwait
mov
jl
mov
add
std
jle
lret
or
add
scas
movsl
cmp
les
xchg
stc
jae
pushf
loope
adc
mov
int
outsb
mov
rorb
cmp
ret
jmp
mov
lods
cmp
or
inc
dec
test
lods
ljmp
mov
push
mov
mov
mov
xchg
shlb
inc
out
addr16
dec
mov
dec
push
out
aad
movsl
aas
psubb
jns
movb
divb
inc
xor
into
mov
xor
inc
in
js
daa
fs
pop
pushf
mov
test
xor
mov
adc
nop
ljmp
or
test
lsl
xchg
arpl
xchg
inc
jp
xor
mov
push
sbb
inc
push
in
dec
mov
call
adc
xchg
sbb
iret
sbb
mov
lcall
push
call
sbb
inc
mov
sub
icebp
fsubrl
jl
ja
fsubl
insb
push
movsl
out
aam
jle
mov
mov
je
and
mov
cli
dec
mov
fcomps
mov
loopne
pop
ret
cwtl
ljmp
push
std
cs
loopne
movsb
in
and
push
sbb
xor
outsl
mov
and
mov
in
cltd
sti
lret
jnp
pop
in
xchg
or
dec
mov
sbb
out
test
mov
pushf
enter
lods
or
push
add
dec
pop
mov
sbb
jmp
adc
in
sub
cli
fisubs
aaa
clc
imul
jb
push
add
cmp
int3
lods
in
or
sub
inc
test
adc
jge
ja
lcall
jmp
into
repz
mov
arpl
push
xor
pop
sahf
addr16
jo
and
sbb
or
push
xchg
in
cli
jno
sbb
mov
das
das
dec
mov
pop
pop
mov
xchg
fxam
into
fs
mov
fnsave
mov
adc
stos
mov
lea
push
mov
inc
test
in
cmp
adc
cld
in
cs
jg
mov
add
dec
ds
cmp
lret
popa
les
pop
cld
adc
insl
cmp
mov
push
shll
add
dec
lds
hlt
xor
push
flds
movsb
out
mov
sub
test
cltd
push
addl
push
or
shlb
rorb
xchg
movsl
add
jbe
lret
repz
insl
insb
and
mov
jecxz
lcall
jmp
notl
daa
fstps
mov
jbe
add
scas
popa
mov
sbb
jmp
add
push
les
mov
add
jb
rcrl
cltd
ficompl
das
dec
stos
jno
rcll
stos
pop
lret
mov
hlt
lret
test
mov
rcl
outsl
mov
or
push
mov
mov
sub
or
dec
adc
jge
out
or
iret
sub
insb
adc
hlt
jns
fimuls
mov
or
xor
cmp
xchg
imul
je
das
mov
or
adc
push
cwtl
out
pop
xchg
out
sbb
dec
sub
jmp
in
je
jae
push
mov
mov
mov
fdivrl
movsb
imul
cmp
mov
sbb
push
fcomi
mov
xor
cli
andb
in
das
cs
nop
ret
leave
and
leave
cmp
mov
adc
lret
dec
push
lcall
lds
dec
dec
and
sbb
xor
add
iret
inc
fisttpll
mov
cmp
inc
popa
sbb
cmp
and
imul
sub
cmc
push
mov
and
inc
jae
jno
inc
addb
jl
into
push
xchg
xor
mov
jbe
inc
mov
push
insb
shll
inc
push
subb
cli
mov
push
pusha
jo
jge
add
or
std
xorb
sub
jmp
sub
lcall
ret
fidivrl
push
cwtl
movsl
std
rcrb
ljmp
pop
ja
push
pop
push
ja
sub
adc
mov
lret
mov
mov
into
call
roll
incb
pop
adc
dec
mov
and
lcall
pop
xor
data16
data16
mov
mov
rcr
or
adc
fimull
aas
shl
in
mov
dec
adc
int3
mov
adc
lahf
mov
fstp
imul
push
sbbb
outsb
cld
mov
sub
jle
jmp
mov
lods
xor
xchg
clc
repz
pop
enter
repz
push
sub
pop
gs
std
lock
inc
pop
ds
jb
adc
and
lock
mov
inc
push
pop
add
rcl
mov
adc
stc
ffree
mov
divb
add
cli
xchg
xor
int3
test
jle
fsubrp
push
push
or
jne
cmp
aad
stc
rclb
cld
mov
mov
push
adc
std
outsl
rorb
ret
push
xchg
push
add
dec
push
add
fstp
sub
pop
or
jns
xor
iret
movsb
inc
imul
adc
ret
test
inc
xchg
cmpps
test
lcall
or
xor
dec
rorl
gs
jbe
push
das
sahf
shlb
les
sub
inc
sub
imul
sub
pop
loopne
mov
outsw
sub
sub
inc
clc
mov
mov
pop
cmp
aaa
into
test
xchg
adc
pusha
out
pusha
test
pop
mov
cmpsb
ja
je
cwtl
lods
cmp
roll
cltd
mov
and
mov
xor
ljmp
ss
mov
sahf
ret
imul
inc
dec
cmp
push
bound
inc
repnz
loope
xor
or
sub
jb
fbld
das
mov
je
test
outsl
cmp
or
jl
in
inc
std
mov
arpl
lahf
arpl
mov
jbe
pop
pushf
jae
movb
aam
inc
mov
cld
pushf
mov
or
popf
clc
lods
imul
pop
inc
mov
clc
mov
rcrl
ficompl
xchg
data16
lds
jb
cmp
ds
rclb
push
add
jmp
mov
ljmp
stc
and
xor
adc
jne
sti
jmp
mov
xchg
adc
cmp
cli
aas
inc
fsubrl
lds
or
pop
xor
inc
xor
xor
pop
jo
push
mov
push
and
rep
scas
out
pushf
xor
pop
push
cmpsl
les
sbb
stos
push
mov
xchg
shll
push
sbb
mov
subl
testl
stos
cmpsb
stos
inc
mov
or
adc
test
stos
push
xorb
push
cmpsb
stos
cli
test
inc
mov
fscale
fnstcw
pushl
sarl
xor
push
mov
inc
xchg
xor
rclb
inc
repnz
popa
mov
mov
mov
mov
mov
pop
push
subl
add
add
inc
in
dec
and
data16
jb
lods
movsb
jb
fnstenv
les
dec
outsl
sub
into
sti
mov
lret
cli
lods
cs
add
inc
pop
mov
mov
sbb
adc
pop
frstor
mov
adc
cltd
outsl
aad
pop
push
push
push
scas
add
mov
xchg
cltd
jp
xor
repnz
push
or
xlat
push
or
sarb
mov
sbb
insl
mov
xchg
aas
push
ss
lods
nop
lods
arpl
sub
mov
sbb
pop
aam
movsb
mov
in
mov
adc
ds
icebp
pop
inc
stos
mov
das
xchg
add
es
sbb
jle
cltd
aam
cmp
aaa
xor
hlt
sub
push
lahf
sub
xchg
sub
cmp
adcl
cmp
into
js
pop
test
es
mov
pop
dec
insb
lods
stos
lahf
fdivrs
jb
dec
and
push
into
adc
inc
aaa
test
pop
cmp
fadd
fsubl
jg
call
push
add
mov
in
dec
sub
hlt
jp
dec
negl
push
cmp
sub
test
sub
movsl
insb
bound
push
mov
xchg
push
adc
mov
or
jl
inc
std
xchg
xor
stos
cmp
push
scas
sub
bound
popa
and
mov
xor
mov
cmc
jge
or
push
sbb
or
or
loopne
mov
arpl
fistl
stos
sahf
jmp
mov
je
inc
fistpl
xor
cmp
xor
out
fwait
cwtl
adc
loop
xor
or
jge
stos
xor
sub
or
fwait
inc
and
sub
mov
xor
cmp
lahf
cwtl
pusha
push
das
push
and
dec
push
or
dec
out
test
scas
in
jle
pop
xchg
das
loopne
jbe
popa
mov
lret
js
jae
mov
xor
shl
cs
mov
sbb
push
sbb
push
pop
xchg
mov
add
cli
dec
gs
test
ficompl
sub
mov
cmp
xor
jmp
fistpl
test
hlt
mov
adc
dec
jbe
pop
mov
jp
shrb
je
adc
mov
lea
push
dec
into
insb
xchg
arpl
jae
call
or
adc
pop
sahf
sub
mov
ret
dec
mov
sahf
sub
adc
movsl
repz
pop
inc
push
push
xrelease
dec
int
out
mov
in
out
mov
xchg
fstpl
fs
dec
sbb
sahf
mov
push
icebp
lea
sbb
sti
fcmovbe
stos
jnp
std
pop
mov
inc
pop
les
jge
pushf
mov
out
cwtl
or
in
subb
ret
lock
mov
sub
scas
std
stc
push
dec
addb
jp
xor
jle
fdivrl
xchg
pusha
movntps
sub
cli
pop
xchg
mov
sbb
jmp
push
or
xchg
adc
add
lcall
cmpsl
mov
fcmovnu
and
sub
push
daa
lret
movsl
fwait
movsb
lret
lahf
pop
mov
loope
xchg
ljmp
imul
mov
divb
xchg
xor
les
mov
lea
push
test
pop
fnsave
test
and
lea
add
sub
push
jo
mov
mov
jecxz
outsl
les
xor
push
loope
jae
sbb
mov
jnp
shrl
stc
xor
dec
xlat
xchg
xor
sbb
pop
mov
inc
aas
fdivr
pop
out
jecxz
sti
adc
pop
and
cmp
jecxz
out
out
sbb
dec
cmp
pop
out
rcl
lea
cld
out
ffree
les
and
test
xor
int
xor
lock
cmc
aas
or
mov
mov
jbe
push
mov
leave
ret
add
xchg
inc
lret
cmp
loopne
stos
xor
test
xchg
pop
and
mov
dec
sbb
mov
mov
jle
mov
rcrb
shlb
loopne
sti
push
push
mov
repnz
aad
push
sbb
lcall
imul
or
mov
sbb
lahf
jecxz
mov
cmp
insl
in
out
cmp
cltd
out
adc
arpl
xor
lret
push
cmc
mov
adc
sub
dec
mul
lea
mov
sub
lock
shl
inc
inc
in
adc
ljmp
gs
jle
imul
pop
test
mov
in
inc
loop
pop
mov
push
mov
hlt
orl
mov
jp
jnp
jg
fdivrl
addr16
xor
pop
ds
sarb
je
adc
cmp
cwtl
dec
dec
xor
dec
dec
mov
inc
cmp
aam
mov
or
test
push
xor
cwtl
push
clc
push
hlt
shlb
mov
std
std
imul
insl
ret
add
adc
push
mov
xchg
stos
mov
clc
scas
xchg
and
lock
pop
xchg
loope
test
loop
or
inc
js
pop
scas
roll
mov
leave
cmp
xchg
cli
add
xchg
adc
inc
inc
pop
push
andb
rcrl
xchg
mov
jp
mov
add
ficoml
dec
push
dec
repnz
dec
movsl
mov
mov
and
and
into
add
lods
js
jae
icebp
pop
roll
fcompl
lcall
and
andl
mov
pop
mov
outsb
xchg
cwtl
mov
add
scas
not
pusha
jmp
xor
adc
lcall
pop
in
and
pcmpeqb
outsl
scas
cmp
in
push
dec
outsl
mov
push
sbb
dec
cmpsb
rorl
add
in
sbb
jne
fsubrl
add
push
mov
insl
push
daa
or
cmc
add
jecxz
pop
jge
xor
inc
cmc
loop
ja
push
out
in
in
mov
in
dec
das
mov
xor
dec
xchg
and
gs
dec
xchg
sahf
in
cmc
mov
movsl
or
mov
inc
jne
fs
leave
jnp
push
xchg
cltd
xor
inc
es
jbe
add
sub
aaa
xlat
mov
frstor
sub
jnp
notb
xchg
out
mov
ljmp
sahf
mov
divl
add
jp
hlt
mulb
xchg
xchg
ds
push
fldenv
es
sbb
xor
jmp
addr16
inc
inc
mov
inc
cmp
das
subb
push
inc
cs
mov
inc
lret
ds
xor
and
mov
or
out
xor
insl
addr16
movsl
mov
repz
ljmp
xor
shrb
lret
rcll
fsubr
mov
jnp
push
or
jg
mov
inc
test
test
jns
mov
dec
push
adc
xchg
cmp
xor
push
rorl
fiadds
dec
dec
jmp
mov
and
iret
mov
out
fs
push
sbb
xchg
jg
in
xor
in
mov
adc
sti
cmp
inc
lret
js
nop
ljmp
sub
pop
push
adc
mov
push
lds
ljmp
cmpsl
mov
xchg
mov
ljmp
add
les
xchg
sbb
dec
int3
dec
cmp
pop
sub
xor
addr16
jle
sub
add
inc
jne
pushf
pop
jge
push
js
xchg
dec
and
xchg
pop
cmp
or
pop
pushl
jge
mov
cli
push
into
fsubrs
push
xchg
dec
jmp
push
daa
dec
xchg
adc
and
add
fwait
or
sbb
lret
and
movsl
xor
call
and
push
ljmp
add
test
scas
loop
lock
out
jmp
test
jg
cld
insb
dec
js
adc
jecxz
jb
pop
mov
xchg
dec
push
cmp
aaa
pop
sti
pop
stos
mov
xchg
inc
or
call
mov
test
mov
aad
cltd
nop
std
mov
repnz
es
add
popf
sub
jne
jo,pn
mov
mov
dec
iret
or
xor
dec
cmp
dec
ljmp
je
push
push
push
lret
push
xor
mov
mov
stos
push
ds
push
mov
or
lcall
jae
out
int
push
shll
int3
jb
js
popa
cltd
out
jo
rorl
aas
faddl
cmpl
movsb
jns
add
jecxz
mov
ja
loopne
ret
or
mov
into
xor
pusha
rcr
lret
int3
add
add
cmpsl
inc
jbe
add
gs
push
jl
sti
cmpsl
pop
cmp
jmp
repz
cmp
jecxz
jmp
add
inc
popf
mov
cmpsl
popf
pop
cmpsl
mov
adc
sub
sbb
cs
in
dec
pop
andb
int3
repnz
inc
jl
sub
or
dec
add
stos
push
add
notl
pop
add
push
test
jle
inc
push
repz
lea
inc
mov
in
lret
xor
js
pop
cmp
mov
or
pop
iret
pop
fistps
and
xchg
adc
push
ret
sub
jno
mov
jmp
cmpsl
mov
cmp
scas
lods
imul
insb
imul
pop
and
cwtl
iret
int3
xchg
sub
push
fs
shrb
stc
jmp
lret
jbe
hlt
xchg
das
mov
dec
into
mov
cwtl
ret
add
jp
scas
xlat
sbb
and
sbbb
or
push
inc
lods
jecxz
into
iret
xor
jno
aaa
int3
jbe
push
push
fxch
mov
push
jg
jns
or
rorl
adc
mov
out
rcr
and
sbb
orl
addr16
fadd
mov
lock
jg
dec
push
scas
mov
xchg
iret
cli
sahf
push
sub
jb
fdiv
repnz
repz
data16
aas
sub
repnz
call
scas
add
cmp
push
push
in
inc
cmp
or
lret
pop
leave
xlat
lods
lret
test
rorl
cmp
sbbl
int3
es
pop
mov
mov
aaa
or
filds
cmp
xchg
movl
adc
ja
in
fcompl
mov
in
fs
movsl
int
fcoml
xchg
jge
mov
mov
sbb
xor
test
div
pop
sub
push
xchg
dec
adcb
into
out
out
mov
xor
aaa
outsl
lods
insl
sti
repnz
insl
hlt
or
ds
add
mov
xchg
pop
mov
loop
adc
mov
dec
sbb
pop
es
and
lods
inc
adc
pop
nop
ret
fdivrl
decl
cmp
testl
push
and
sbbl
lock
lock
cmpsl
jbe
sub
cmp
xchg
sub
clc
ss
and
sahf
inc
fsubrs
jmp
inc
stos
lahf
cmp
push
mov
in
mov
push
and
adc
mov
je
xchg
mov
mov
push
sub
dec
jbe
sar
out
fmulp
jno
xor
js
pop
push
push
cmp
pop
nop
sub
cmp
ret
repz
dec
mov
inc
jo
fwait
mov
pop
mov
mov
xchg
mov
addr16
aad
call
xlat
test
dec
add
mov
jbe
jle
jg
sbb
inc
xchg
mov
lea
pop
cmp
cmp
jb
pushf
sub
pop
push
js
arpl
js
vpsrad
je
pop
mov
xor
inc
dec
lods
xchg
pop
jo
mov
test
cmp
jns
xchg
adc
push
daa
insb
inc
out
loop
inc
sub
pop
ds
jmp
test
imul
inc
mov
ret
sahf
and
fldcw
mov
fidivs
xor
test
rorl
pop
lret
leave
mov
xor
cmpsb
test
xchg
mov
mov
jnp
lock
add
std
inc
stos
jno
mov
cmp
inc
mov
into
push
push
dec
ja
js
sub
or
mov
out
and
dec
inc
mov
test
addr16
sti
pop
pop
pop
push
stos
mov
in
js
pop
popa
outsb
push
test
les
fsub
xchg
call
imull
lret
mov
jbe
dec
fdivs
test
stos
add
push
mov
xlat
pop
adc
mov
dec
loopne
arpl
pop
icebp
into
xor
dec
cmpsb
dec
gs
jmp
popa
sbbb
imul
pop
mov
sub
xchg
or
or
pop
in
dec
push
mov
jg
xlat
incl
es
gs
test
les
shlb
xchg
jl
adc
scas
or
jnp
lods
sub
xchg
int3
shl
inc
aas
fcompl
mov
test
push
aas
pop
ja
loope
ret
mov
xlat
adc
mov
test
out
mov
adc
outsb
mov
pop
jno
ja
sub
lret
imulb
xchg
push
cmpsb
leave
jl
xchg
out
int
sbb
test
icebp
or
int3
mov
jecxz
inc
loope
pop
gs
push
leave
movsl
or
sub
sbb
mov
lea
aad
or
leave
insl
mull
pusha
push
insb
stc
mov
sbb
outsb
decl
call
adc
adc
add
pop
jns
in
scas
adc
cmp
jg
addr16
les
icebp
xlat
pop
mov
pop
and
pop
rclb
lock
in
push
mov
push
pop
ret
fsin
lock
movb
cmp
ja
rcrl
aas
xchg
jmp
popl
jp
imul
jmp
inc
fs
xchg
inc
mov
aam
dec
and
dec
cmp
lods
jmp
xchg
dec
sti
jbe
fs
sqrtps
loope
xlat
sub
push
xchg
pop
adc
xor
addr16
mov
and
in
insl
push
dec
stc
ja
push
dec
fidivrl
les
mov
icebp
pop
and
sbb
aas
fwait
inc
out
xor
dec
jp
test
pop
cli
loop
outsl
and
mov
in
or
dec
movsl
cmpsl
test
push
xor
mov
inc
adc
push
jge
movsl
lahf
jne
mov
std
xchg
icebp
in
sbb
ss
dec
mov
sbb
jle
div
add
call
cmp
daa
aam
push
xchg
inc
xchg
lods
stc
mov
sub
xor
pop
sbb
cmp
mov
out
sbb
push
jae
pop
dec
mov
jnp
into
jno
out
lea
rcrb
cmp
add
add
and
jecxz
rorl
lret
dec
xchg
divb
sbb
dec
jns
arpl
cmp
push
push
pop
lea
lods
or
mov
xor
mov
rcrl
bound
mov
mov
lods
mov
xlat
rcrl
xchg
sub
pusha
cmp
cmpsb
push
out
shrb
test
push
scas
daa
dec
and
cmp
xor
xchg
rorb
sub
ror
pop
popa
add
into
insl
mov
pop
mov
inc
arpl
sbb
fs
mov
ret
jle
sbb
sbb
iret
xor
movsl
adc
enter
jbe
filds
popf
lods
push
imul
imul
dec
xchg
cmc
sub
pop
popa
push
imul
jbe
jmp
mov
rcll
sub
mov
leave
mov
in
clc
clc
popa
shl
push
cmp
pop
addb
sbb
mov
mov
mov
fildll
icebp
bound
jnp
jg
pop
inc
mov
xor
cwtl
into
ja
lods
adc
fadd
cltd
or
aaa
pop
mov
cli
xor
inc
cs
lds
xor
int3
mov
push
mov
adc
dec
hlt
imul
loope
mov
add
pop
into
sbb
lcall
mov
enter
or
mov
sbb
and
xchg
jno
xor
sbb
fs
or
das
jae
adc
loopne
sbb
mov
sbb
mov
jo
sub
push
je
pop
cmp
pop
and
into
sbb
cwtl
add
push
or
adc
or
xchg
pop
pop
fimuls
fcmovne
jno
xchg
icebp
mov
bound
or
mov
cmp
jo
mov
mov
fisttps
out
push
jecxz
test
imul
xchg
fs
into
out
or
lea
xchg
popa
mov
sbb
repnz
pop
lock
cmp
fbld
add
push
cmp
loopne
cmpsb
inc
nop
stos
nop
insb
mov
fidivl
sbb
dec
pop
adc
sub
dec
mulb
mov
jns
and
bound
cmp
pop
sbb
hlt
lret
add
js
adc
test
aas
outsl
movsb
cs
ret
sub
xchg
dec
into
pushf
jp
mov
mov
mov
test
pop
insb
xchg
mov
in
addr16
push
adc
inc
fcompl
fldl
cld
sub
rcr
lock
rcrl
mov
lods
decl
and
in
pop
cltd
fistpl
mov
mov
out
outsb
sbb
pusha
add
mov
cltd
jmp
jp
bound
les
jo
jb
dec
and
fidivrl
js
adc
out
jecxz
dec
xchg
pusha
incb
dec
pop
dec
pop
fsubrl
add
leave
jl
ret
and
sbb
cmp
ret
jg
lahf
shll
add
push
push
adc
fstps
mov
ficompl
push
sub
mov
cwtl
sub
lcall
and
adc
rorb
aad
cmp
cmp
xchg
aaa
inc
in
fisubrs
pop
adc
cmpl
mov
xchg
loope
les
mov
clc
adc
mov
jl
imul
xor
popf
sbb
test
xchg
push
rcrb
pusha
push
jge
faddl
inc
xor
jne
push
aas
mov
inc
dec
ret
dec
ret
inc
add
pop
pop
mov
push
idivl
sti
mov
lock
add
dec
test
rcrb
stc
pop
ret
movsb
sbb
and
pusha
push
pop
mov
dec
pushf
xor
cmp
mov
mov
and
fs
ljmp
imul
xor
mov
xchg
imull
push
iret
jl
dec
into
mov
xchg
mov
xchg
or
daa
push
or
jmp
insl
outsl
mov
dec
std
dec
ss
xchg
xchg
imul
imul
fnstcw
cmp
xor
insb
lods
sti
mov
iret
xor
je
mov
xchg
aam
add
dec
cmp
adc
fwait
das
push
jne
int
out
push
sbb
cmc
decb
mov
fcoms
daa
pop
sbb
shrl
push
jns
add
scas
xlat
and
dec
pop
or
imul
dec
mov
cmp
mov
mov
rcrl
rcr
dec
imul
call
popa
jb
aam
ja
cltd
arpl
lods
dec
cmp
popf
dec
add
emms
jmp
mov
jbe
and
jmp
inc
scas
mov
mov
or
adcl
xor
gs
outsb
or
push
cs
add
je
mov
add
push
lahf
xchg
scas
sahf
adc
inc
xor
lods
pushf
mov
adc
bound
nop
cmpsl
leave
fdivl
sub
xchg
lock
sub
inc
icebp
test
jbe
aad
xchg
dec
sub
xor
enter
std
dec
mov
aas
push
shll
xchg
mov
push
in
and
xor
ret
add
push
adc
in
mov
cmpsb
jg
das
jg
fsubl
xchg
jl
add
mov
and
sti
lock
cmpsb
outsl
pop
arpl
cmpsl
in
mov
jno
sub
loop
dec
mov
js
mov
mov
mov
lar
inc
or
inc
or
cld
std
fmuls
test
mov
icebp
stos
ror
insb
add
mov
inc
and
xor
call
out
in
cmp
addb
popa
ljmp
roll
pop
jg
mov
pop
fdivrl
dec
push
xor
mov
adc
mov
lahf
cs
stos
mov
mov
pop
or
stc
or
rol
mov
sub
fildll
dec
loopne
mov
mov
test
pop
mov
in
imul
push
sub
add
sub
xchg
mov
lods
in
sub
aam
lods
dec
mov
and
repnz
in
insl
imul
pop
int3
adc
mov
cmp
xor
add
lock
inc
xchg
lret
lds
daa
xchg
jae
in
mov
lcall
cwtl
loopne
ret
add
fwait
xor
loopne
ljmp
jae
pop
jbe
or
mov
jae
test
pop
push
jns
aad
cmp
add
imul
out
pop
or
mov
call
int3
jnp
pop
xchg
or
push
std
add
push
jns
lcall
ljmp
lock
xchg
cwtl
xor
inc
jmp
adc
popa
in
jp
mov
or
jg
enter
cmp
or
shlb
push
andb
sti
mov
mov
popa
push
jmp
pop
out
repnz
fcoms
mov
ss
shl
mov
xor
or
jl
lret
jecxz
add
mov
int3
or
mov
repnz
sub
sarb
mov
insb
insl
sub
lods
ffreep
push
orb
int3
and
fldcw
jnp
pop
fisttpl
jns
lret
or
add
mov
lds
mov
adc
jmp
or
jbe
popa
cmpsl
addb
arpl
sarb
shr
inc
ret
fwait
syscall
push
ret
push
adc
dec
cwtl
push
lods
ljmp
and
into
ds
pop
aam
fistps
sub
pop
xchg
inc
sub
loop
inc
or
aaa
mov
adc
jnp
sbb
inc
push
lods
push
sahf
sbb
mov
ret
mov
cmp
sbb
test
xor
stc
idivl
push
xchg
fildl
lahf
test
or
cmp
jle
push
add
dec
pop
movsb
inc
cmpsl
lods
and
xchg
dec
dec
jge
jo
pop
pop
out
push
pop
lods
sub
mov
fs
xchg
bnd
cmp
cmc
mov
mov
pop
xor
or
lret
out
or
repz
or
mov
dec
adc
mov
cmp
int3
push
mov
cwtl
imul
xchg
mov
adc
insl
push
sub
pop
sbb
xchg
push
push
shl
mov
mov
pop
decb
testl
shll
mov
cmc
mov
xlat
shr
aam
rcll
roll
jg
add
jb
inc
divl
iret
pop
mov
daa
xchg
mov
sbb
data16
sub
stc
xchg
xorb
add
or
seto
fcomi
das
ds
in
scas
scas
repz
dec
or
out
mov
out
cltd
into
and
pop
cltd
lock
or
scas
xor
sahf
pop
std
xlat
cmpb
jmp
push
adc
adc
add
dec
mov
mov
add
and
popf
jns
cwtl
subl
in
fistl
loope
test
mov
inc
sbb
jg
shll
xor
out
movsl
mov
sub
arpl
lods
ljmp
call
in
pop
pop
xlat
lock
cmc
lods
aam
in
daa
and
mov
das
fadd
cmp
imul
shl
mov
inc
out
jbe
dec
jae
lea
mov
push
cs
or
sub
sub
mov
xchg
daa
xchg
es
push
in
jge
pop
mov
add
push
pop
pop
icebp
lods
adcl
and
and
out
fs
mov
in
scas
jns
xchg
rep
mov
jno
int3
cmp
pusha
xlat
jle
jg
in
pop
inc
sub
movsl
stos
jae
mov
sarl
test
pop
repz
fmuls
out
pop
or
shl
cs
call
pop
push
xchg
mov
daa
pusha
mov
and
xor
scas
xorb
ret
clc
stos
dec
cmpl
add
mul
push
xor
stos
sbb
fmul
dec
add
xchg
pop
jno,pn
cmp
fwait
test
imul
outsb
je
mov
xchg
loope
adc
jmp
pop
cs
mov
xchg
xor
push
add
out
inc
scas
dec
push
inc
xlat
push
test
mov
inc
sbb
mov
mov
push
xchg
add
or
cmp
mov
mov
aam
dec
cmp
fs
xchg
pop
dec
push
popa
adc
xor
pop
adc
xor
sub
pop
mov
or
icebp
xlat
sub
push
cmc
adc
aaa
rorl
or
dec
ret
imul
fsubrl
cmp
fisubrl
lock
xchg
cmp
add
je
scas
cmc
jmp
scas
dec
ljmp
insl
ret
movsl
loopne
mov
orb
lods
stc
pop
xchg
movsl
sbb
pop
or
nop
les
shrl
adc
dec
rcrb
cwtl
fdivs
ljmp
daa
xor
stos
xchg
and
xor
jo
push
xor
and
nop
pop
adc
xchg
fwait
pop
inc
arpl
jge
push
pop
add
add
push
cmp
adc
test
and
orb
mov
outsl
lods
jp
adc
fdiv
push
mov
jp
test
cmp
int
in
test
adc
aad
shlb
xor
imul
push
fstpt
lods
add
cmp
push
pop
sub
or
sub
add
push
adc
sbb
out
sub
sub
add
ret
push
repnz
cli
sub
pushf
insl
mov
lret
jmp
in
or
icebp
fcmovu
call
or
pop
frstor
cmp
mov
fsub
fcmovu
test
pop
sub
dec
inc
mov
pushf
push
lret
mov
js
stc
sub
mov
jecxz
adc
adcl
cwtl
ud1
jle
cs
add
nop
call
pop
pop
jbe
jb
pushf
push
cmp
mov
cwtl
add
scas
cmp
jae
inc
inc
lret
ja
xchg
jne
mov
jg
inc
pop
mov
cwtl
lahf
rcr
jne
mov
out
lock
scas
adc
mov
push
in
xchg
xor
mov
push
fildl
jno
and
clc
mov
cmp
inc
jg
fistpll
aaa
idivl
pop
xchg
popf
dec
out
xchg
xor
xchg
cltd
jecxz
dec
inc
test
mov
mov
sbb
xchg
adc
gs
sbb
and
push
faddl
clc
mov
enter
cmp
lods
orb
mov
ds
in
inc
and
dec
lock
pop
ret
or
xlat
dec
movsb
push
out
jae
cmpsb
jmp
lea
sbb
out
leave
mov
mov
mov
fmulp
add
pop
insl
pop
idiv
pop
mov
jle
jae
pop
add
pop
pop
mov
shlb
imul
add
jmp
pop
lret
das
inc
das
add
int3
or
or
or
in
std
sahf
movsb
fisubs
loop
add
js
enter
cmpsl
jle
scas
pushf
mov
jl
loope
xchg
xchg
insb
dec
push
jmp
xor
stos
mov
fdivr
push
pop
insl
mov
push
sub
inc
in
mov
inc
inc
push
sbb
mov
jo
pop
imul
movsl
pop
insl
fcompl
movsl
jge
inc
in
js
test
push
int3
gs
mov
scas
loope
sub
pop
jp
xchg
icebp
mov
sbb
push
inc
gs
out
xor
int3
fcmovne
jl
mov
fadds
int3
jne
ret
dec
push
clc
leave
in
shll
adc
mull
or
or
mov
ja
lret
int
add
lret
outsl
iret
cvttps2pi
repz
dec
out
mov
dec
push
inc
cld
roll
and
xchg
pop
cmpb
pop
pusha
out
sbb
push
dec
lahf
lcall
fisttpll
js
jno
lock
push
jne
jns
xchg
cmp
repz
dec
sbb
loopne
inc
adc
shrb
insl
jge
nop
mov
aad
aad
ss
iret
jns
aas
sbb
cwtl
in
pop
cmp
cmc
cmc
lds
pop
cmp
push
imul
pop
xchg
xor
in
pop
hlt
fs
hlt
xor
add
or
test
sub
addr16
or
add
bound
cmc
sar
dec
dec
inc
popl
add
out
mov
fidivrs
push
orl
pop
or
cmp
pusha
xor
mov
leave
ss
push
leave
xchg
add
stc
mov
test
mov
js
insl
repnz
pop
and
mov
add
xchg
pop
jns
inc
imul
iret
jns
stos
lds
mov
fs
outsl
sbb
hlt
fst
leave
fsubs
ljmp
add
stos
movsl
fdivrs
sbb
inc
scas
aaa
jl
aam
xor
xchg
pop
sti
push
in
je
or
sti
and
inc
inc
push
jmp
xchg
inc
add
adc
dec
dec
pusha
add
shll
imul
xlat
imul
dec
out
jmp
and
mov
xor
pop
mov
addr16
mov
jp
dec
sti
dec
stc
push
iret
jno
fnsave
jmp
stc
in
arpl
test
pop
incl
sahf
sbb
loopne
dec
sbb
mul
cmpsl
sbbb
inc
scas
lods
in
loop
out
inc
andb
add
fwait
lret
sub
enter
adc
sub
sbb
imul
mov
sbb
out
icebp
xor
negb
std
jb
cld
int
mov
inc
popf
cld
lcall
mov
adc
outsb
mov
xchg
rcrb
mov
orl
scas
or
arpl
idivb
pop
sub
test
mov
add
nop
nop
mov
push
inc
inc
mov
test
dec
loope
push
inc
shlb
rcrl
leave
outsl
pop
popf
push
lds
or
je
sub
jle
insb
mov
xor
xchg
fcmovb
sub
xchg
loopne
mov
mov
pop
std
mov
mov
jmp
addl
aaa
jno
mov
push
lcall
faddl
shlb
adc
dec
mov
mov
fisubl
and
push
loop
mov
dec
fldenv
imul
cmc
arpl
mov
adc
in
pushf
and
aaa
enter
sbb
fwait
repnz
mov
mov
mull
push
dec
lea
ret
int
cmpsb
rclb
jmp
stc
and
out
mov
xor
add
cmpsl
gs
push
xor
push
sub
or
xor
mov
out
sbb
and
pop
sub
imul
push
iret
mov
xor
leave
jg
dec
xchg
repnz
stos
xchg
fldl
add
out
mov
mov
mov
push
mov
sub
push
sbb
mov
aaa
icebp
loop
pushf
negb
cld
outsb
std
adc
jmp
outsb
leave
in
inc
mov
ret
xor
dec
pop
mov
scas
scas
inc
mov
ds
xor
jge
jp
push
divb
fldcw
out
loope
and
movsl
jg
dec
insl
xchg
dec
mov
rcrl
and
pop
or
inc
call
add
mov
sbb
push
or
adc
test
cmpl
add
fdivs
in
and
add
lret
filds
popa
xor
jns
mov
daa
insl
lods
out
out
call
cltd
sub
xchg
jg
shrb
xchg
mov
loop
push
std
pop
stos
pop
sarb
aad
jb
je
into
sbb
outsl
lcall
jne
sbb
popf
arpl
sub
mov
loop
jo
inc
fsubrp
add
cmp
enter
xchg
inc
jbe
shl
sub
xchg
in
push
sbb
les
test
mov
mov
dec
xor
jecxz
stos
mov
jmp
sub
push
xchg
mov
or
xor
lea
push
aas
cmpsb
jnp
data16
frstor
loope
sub
imul
dec
pushf
sub
ret
jno
mov
stos
int
fisubrs
cmp
int
jg
add
sub
jb
mov
lods
xor
arpl
in
sbb
out
dec
push
dec
or
inc
pop
xchg
out
cmp
mov
cmp
repnz
fsts
push
xchg
ret
aam
dec
adc
lret
out
push
scas
xchg
bound
sbb
lds
mov
js
push
or
icebp
jb
mov
add
iret
pusha
dec
hlt
xchg
jecxz
cmpsl
inc
push
fstps
push
pushf
inc
shlb
imul
cli
mov
iret
pushf
jmp
and
cmp
xchg
out
push
pop
xor
icebp
fwait
xchg
hlt
mov
je
xchg
stc
push
mov
and
push
push
push
mov
loopne
sbb
sub
pop
lods
push
and
adcb
in
push
rcll
lea
iret
mov
testb
lea
inc
into
jg
jne
in
push
dec
mov
sbb
iret
fmulp
cmp
pop
mov
mov
test
sbb
fwait
stos
mov
int
dec
push
mov
push
fiaddl
pop
adc
mov
pop
dec
enter
and
inc
push
fisubl
push
xchg
and
cltd
cli
cld
les
mov
loopne
outsl
sbb
jle
cmp
lret
sub
adc
inc
call
inc
add
sbb
cltd
dec
xchg
xchg
sahf
lcall
sbb
loope
pop
cwtl
xchg
and
in
mov
and
aas
mov
jb
cmp
sahf
jle
pop
cld
xchg
scas
xor
dec
or
lcall
nop
jge
loope
popa
lock
xchg
dec
push
adc
jns
sub
leave
outsl
push
out
arpl
mov
push
add
icebp
sub
dec
pop
fistpl
imul
push
mov
rcrl
add
je
adc
inc
xchg
pop
pop
add
outsb
mov
mov
xor
adcb
pop
movsb
popa
scas
shll
xlat
sbb
jge
mov
mov
lcall
popf
and
aam
test
push
inc
ljmp
lods
xchg
flds
jl
jecxz
pop
add
iret
aas
ret
inc
dec
dec
jle
loopne
rcr
and
cltd
loop
stc
nop
in
pop
jb
inc
pop
sbb
out
mov
fidivs
pop
pop
mov
pop
fldl
shrl
inc
mov
addr16
mov
sub
dec
cmp
cmp
es
xor
push
adc
cmp
add
or
imull
xor
xchg
cld
decb
mov
push
test
add
lea
push
xbegin
loopne
loopne
movsb
mov
cld
xor
cmp
testl
nop
push
imul
mov
jecxz
push
int
int
pop
cld
out
loope
push
push
pop
test
push
jl
ret
pop
or
mov
sub
mov
insl
cmp
popf
mov
mov
sbb
int3
jecxz
jg
aam
ss
lds
push
lea
xor
in
sub
jp
out
and
bound
mov
aam
int3
push
je
or
iret
pop
pushf
in
inc
jmp
push
adc
cmp
popf
adc
out
rclb
sub
mov
mov
push
inc
repz
cmp
mov
pusha
in
pop
out
dec
imul
out
mov
call
mov
pop
in
cmp
stos
scas
into
lods
test
mov
rorl
icebp
adc
cmpsl
stos
add
xor
scas
add
int3
mov
push
and
add
popf
idivl
cmpsb
sbb
jns
es
inc
inc
cmp
inc
sahf
data16
sbb
push
dec
test
mov
aas
xchg
add
jmp
mov
mov
sahf
mov
xchg
add
jl
mov
dec
push
in
mov
push
loop
push
xchg
ljmp
jnp
sarb
xchg
out
inc
inc
mov
dec
aaa
lret
hlt
xchg
pop
cmpsb
jle
fldenv
mov
cltd
ret
hlt
pop
div
pop
dec
daa
and
out
mov
or
push
nop
pop
into
rorb
subb
lock
xchg
outsl
idivl
pop
ja
pop
inc
xchg
and
sub
pop
repnz
jns
icebp
subb
push
mov
scas
test
lret
negl
push
imul
shl
dec
mov
push
xlat
dec
aas
popf
ss
sub
ljmp
andl
iret
and
outsl
cli
inc
dec
insb
and
pop
decb
or
call
lret
outsl
fcoms
mov
cli
jle
cmp
fcmovnu
stos
and
xchg
negb
out
sbb
pop
sti
stc
mov
and
lcall
push
fsubs
xor
subb
sub
jle
roll
pop
and
mov
sbb
stos
std
ljmp
dec
mov
test
aas
or
out
hlt
cwtl
hlt
mov
shr
sbb
pop
sub
arpl
pop
repz
data16
xor
inc
insl
loope
in
rolb
dec
idiv
sarb
repnz
sub
mov
and
pop
sub
jge
fwait
pop
sarb
xor
shrl
shll
xor
cmpsb
add
fiadds
fwait
rorl
fwait
mov
adc
je
push
outsb
outsb
push
jge
adc
or
pop
ja
jg
loope
fwait
divb
add
les
and
bound
mulps
cld
pushaw
subl
es
cmp
dec
ss
cmp
fnstcw
mov
aam
and
push
mov
xor
mov
negl
rclb
out
out
outsl
inc
imul
or
pushl
fcmovbe
cmp
cltd
or
lsl
push
rcrl
adc
sub
leave
arpl
mov
fdivl
movsb
popa
addr16
rol
xor
ret
sub
lea
fadd
out
lea
pop
popl
and
addr16
push
xchg
jb
dec
dec
sbb
cmp
popa
jne
bound
dec
pop
push
or
dec
movsl
xchg
call
repz
add
push
cmp
gs
int3
insl
ja
shr
sub
push
inc
outsb
ret
cmp
add
push
dec
stos
sbb
sahf
push
pop
aad
stos
icebp
or
scas
rcr
out
popa
addb
stos
call
jmp
leave
ret
dec
mov
pusha
pop
mov
enter
ja
push
not
mov
mov
popl
mov
mov
call
mov
mov
into
in
faddl
in
jae
and
adc
xor
repnz
inc
xor
mov
and
mov
cmpsl
mull
mov
sti
and
inc
inc
or
lods
mov
mov
scas
and
adc
xchg
enter
into
dec
xchg
cmp
xor
insl
cmp
fbld
inc
ds
into
gs
cmpsl
sub
mov
shll
xor
and
jmp
cmc
jp
pushf
in
mov
add
out
inc
les
insb
outsl
lods
inc
or
in
xor
push
cmp
jl
adc
mov
popf
int
dec
xchg
fistl
lds
xor
jbe
cwtl
mov
loopne
lret
mov
pusha
push
rcll
xor
loope
pop
es
jg
je
mov
jne
mov
push
jp
cmpsl
jno
loopne
and
mov
mov
enter
adcl
xchg
adc
dec
jge
imul
outsb
imulb
pop
adc
shlb
pushf
mov
ja
jo
in
mov
inc
sub
fisubrs
jle
icebp
stos
push
pop
in
jb
dec
inc
cmp
cwtl
scas
inc
xchg
ds
xchg
fldt
aas
sbb
cmp
into
sbb
arpl
test
xchg
jno
xchg
scas
insb
dec
inc
loop
ret
mov
sub
int
das
sbb
leave
cmp
rcl
fstpl
jge
xchg
pop
pop
cld
sub
xchg
loop
aas
lret
mov
mov
pop
into
dec
pop
add
jmp
push
lret
fucomip
scas
into
add
fnstenv
dec
adc
dec
and
or
xor
jp
daa
fcoms
sbbl
into
sbb
roll
mov
aam
bound
sub
sub
jns
in
loopne
imul
enter
cmpsl
xlat
aas
movsl
shll
test
mov
push
cmpsl
or
stos
xchg
pop
aam
adc
movb
data16
mov
inc
push
xchg
fisubs
in
and
lret
inc
test
or
sbb
nop
sub
js
inc
fsubp
push
pop
stos
cmp
dec
out
jae
xlat
jbe
push
inc
pop
jb
cmp
mov
aas
sahf
sbb
mov
and
cs
and
add
outsb
cmp
in
call
repz
adcb
pop
outsb
mov
dec
cmc
les
and
in
out
jae
jecxz
outsb
lock
mov
push
xor
out
dec
pop
xorw
sbb
iret
fcompl
push
out
rclb
mov
movl
or
mov
repnz
jb
outsb
mov
push
dec
lods
iret
xor
aas
or
pop
pop
fstpl
out
push
in
mov
mov
rolb
xchg
mov
xchg
fnstcw
jge
je
pushl
and
fsub
pop
divb
jmp
add
mov
inc
jle
xchg
insl
je
lret
mov
mov
stos
jge
xchg
adc
or
jb
pop
mov
add
ds
mov
mov
cs
iret
pushf
mov
and
mov
test
repnz
aaa
test
lds
push
add
or
mov
mov
std
nop
add
notl
inc
sub
hlt
xchg
seto
aas
stos
push
add
ds
stos
mov
mov
pop
mov
jo
mov
sub
rolb
sahf
xchg
les
insb
stc
in
lahf
repnz
adc
adc
and
hlt
movsb
out
cli
and
stos
mov
mov
clc
scas
cltd
fldenv
shl
nop
mov
push
iret
mov
pop
xchg
jo
jnp
push
xlat
inc
cmp
lret
mov
push
arpl
mov
inc
imul
hlt
andl
adc
cmpsb
test
mov
aam
push
ret
cltd
pop
and
dec
mov
mov
fsubrp
orl
call
xor
mov
push
std
mov
cs
cmp
pop
pop
jl
and
mov
test
scas
adc
mov
stos
out
adcl
test
jb
lcall
sahf
mov
jae
sti
mov
mov
jae
xor
push
test
daa
hlt
loope
dec
bound
push
cmc
jg
leave
scas
imul
xchg
movsb
stos
xchg
ja
xor
test
mov
loop
cltd
push
inc
ret
dec
pop
mov
repz
xor
aam
add
cs
neg
inc
rcrb
loope
ja
fucom
or
or
std
imul
sub
test
cmpsb
mov
adc
imul
scas
lods
push
mov
cmp
mov
cld
adc
xlat
jmp
push
shrd
jne
sub
cmpsb
out
xchg
dec
inc
jno
decb
rcr
outsb
idivl
cmpsl
inc
lds
sbb
mov
adc
pop
les
lds
mov
scas
xor
cld
adc
jecxz
push
sbb
divb
pop
cmp
lods
imul
add
leave
fsubrl
popf
sub
out
out
xchg
int
jp
jmp
dec
push
pop
jge
aad
lret
lock
insb
mov
leave
or
xchg
jb
imul
mov
pop
inc
out
mov
fcomps
dec
xchg
stos
lret
shrl
pop
ja
mov
inc
jmp
outsb
imul
fwait
cli
add
xchg
jbe
jnp
xchg
sub
inc
cmp
xor
mov
cmpl
cmpsl
lea
in
or
xor
aas
or
je
or
fldt
mov
in
hlt
daa
sbb
cmp
xchg
mov
test
rcr
sub
loop
cltd
xor
fmull
push
pop
loopne
adc
ret
lea
and
aam
lock
enter
dec
pop
aas
push
and
stc
lds
push
sbb
inc
lret
fs
mov
mov
dec
in
push
adc
testb
fstp
mov
dec
and
decb
mov
insl
jnp
dec
out
out
mov
inc
and
pop
loopne
repnz
imul
mov
push
rolb
xchg
lcall
shll
out
fucomp
or
mov
shrl
mov
in
leave
loope
rcrb
and
lods
mov
jae
call
repz
xor
leave
outsl
mov
mulb
fimull
lcall
lods
mov
inc
aam
push
aaa
imul
lcall
daa
sub
and
loop
lods
leave
pop
adcl
scas
std
xchg
mov
push
cmpsb
add
gs
enter
fwait
stos
stc
mov
fdivrs
jns
push
lock
xchg
nop
pop
jae
hlt
sahf
xchg
jp
popa
testb
add
lods
lods
out
adc
jle
push
sbb
iret
arpl
mov
popa
push
mov
cli
pop
jne
push
andl
in
mov
pusha
daa
data16
out
hlt
pop
and
ja
nop
in
lret
mov
ja
repnz
pushf
sub
movsb
loop
icebp
push
xor
push
add
dec
pop
mov
xor
pop
adc
mov
test
hlt
test
sti
into
mov
sbb
loop
push
mov
adc
aam
dec
lods
stos
stc
aam
push
adc
lcall
dec
mov
mov
sub
lods
loopne
mov
or
inc
mov
and
bswap
inc
out
dec
mov
gs
sbb
test
jg
or
xlat
ljmp
push
fstpt
lcall
add
xor
out
mov
call
into
jno
jb
mov
ljmp
testb
mov
xchg
and
xchg
dec
and
mov
idivb
xlat
xor
mov
mov
sub
xchg
test
or
lahf
inc
push
int
dec
dec
xor
shrl
bound
add
mov
stc
enter
mov
mov
adcb
sbb
push
xchg
mov
sahf
or
rcrl
jb
inc
xchg
push
sti
inc
lods
pushf
push
icebp
push
sbb
lcall
pop
mov
mov
scas
out
out
stc
data16
jmp
lock
icebp
xchg
mov
lods
push
push
xchg
in
fdivl
sbb
icebp
ss
cmc
mov
mul
push
leave
lods
mov
xchg
nop
and
jge
std
out
mov
imul
push
dec
mov
xchg
dec
cmp
insl
insl
mov
pop
ljmp
xchg
sub
std
jecxz
xchg
pop
out
out
pop
pop
cs
cmpsl
test
push
or
or
outsb
popa
sbb
aad
sub
and
das
xor
fildl
cltd
test
repz
pop
mov
call
orb
mov
sarl
push
fsubrl
jno
mov
out
cld
es
cmpsl
ret
lds
sbb
out
loopne
mov
jne
inc
stos
dec
sub
test
icebp
popf
cmp
pop
xor
xchg
and
xor
icebp
jg
scas
mov
jp
sbb
jmp
jns
mov
pop
adc
dec
cmp
mov
mov
push
addr16
addr16
jns
mov
ljmp
xorb
push
and
inc
std
jle
lods
dec
mov
xor
jmp
xchg
mov
add
xchg
mov
out
add
fs
sbbl
jg
add
or
lcall
cmp
loope
popl
add
push
inc
push
lret
dec
mov
lahf
cmp
imul
jp
setns
cmpb
out
adc
rol
loop
shll
jne
dec
sub
out
push
xor
jns
cltd
mov
aad
pop
cmp
push
call
rol
cmp
jno
xlat
cwtl
mov
lea
out
dec
pop
push
jecxz
mov
inc
addr16
std
in
aam
jns
scas
pusha
jnp
pop
push
adc
gs
lcall
incl
in
and
pop
jns
push
and
or
pusha
std
jmp
ja
dec
xchg
movsl
and
out
mov
or
add
cmp
cmp
test
or
xchg
das
xchg
or
test
int3
decl
test
mov
sbb
lcall
xor
popa
dec
mov
ds
out
xor
mov
cwtl
mov
insb
call
dec
in
les
pushf
je
dec
data16
xlat
arpl
mov
dec
inc
add
lock
std
dec
jp
in
repnz
sub
out
xor
cmp
pop
xor
addr16
divl
repnz
fisubrl
xchg
mov
inc
les
adc
sub
repnz
pop
pop
xchg
or
cmp
mov
mov
jge
lods
adc
add
and
call
test
xor
dec
adc
imul
dec
stos
mov
leave
ret
push
movsl
mov
and
xor
cmpsb
daa
loope
mov
adc
aas
xchg
cmp
xor
mov
mov
scas
ret
and
adc
cmp
mov
dec
push
fisttpll
mov
dec
push
push
push
aad
iret
pop
lcall
loope
movsl
fidivl
rcl
xchg
loope
inc
and
mov
mov
out
push
movsb
jo
test
mov
pop
pop
pop
and
aam
in
aad
sub
mov
mov
xchg
insb
loopne
xor
cli
lods
jg
push
imul
and
sub
inc
and
add
imul
lods
dec
push
subb
dec
in
sub
lock
mov
enter
test
mov
push
pop
cmp
dec
test
mov
lret
dec
jmp
out
sub
mov
xor
dec
and
jmp
mov
push
aam
mov
pop
mov
sahf
inc
or
scas
mov
insl
push
push
lcall
out
dec
cmp
scas
out
imul
ds
cmc
rorb
mov
and
push
inc
fwait
mov
mov
imul
loop
mov
cmc
add
aad
insl
jmp
pop
ljmp
leave
roll
add
and
mov
les
jle
or
pop
push
push
out
jae
shl
cltd
jne
xor
call
arpl
cmp
push
pop
jo
in
arpl
adc
push
push
add
rcll
jecxz
repnz
sbb
sbb
inc
mov
jge
mov
popa
aas
pop
insb
inc
test
sub
popf
insl
lds
lcall
lock
popf
sub
mov
ficomps
repz
sbb
jae
aam
pop
xlat
adc
repnz
test
sbbb
push
xchg
sub
ss
push
sti
mov
pop
enter
js
xchg
mov
test
jb
test
xlat
xchg
mov
loope
ss
imul
fs
adc
jecxz
insb
in
inc
clc
push
add
stos
in
daa
outsl
aad
cli
xchg
or
rorl
sarb
dec
mov
pop
cld
pop
rorb
in
dec
stos
jnp
aam
imul
outsl
rcl
sbb
and
sub
aam
jae
sub
pop
in
cmp
or
lahf
mov
mov
cltd
scas
xlat
outsb
sub
and
pop
xchg
ret
das
dec
sub
fildll
mov
push
xchg
push
xor
das
shrl
in
fldt
aam
cmp
add
or
aas
push
shrb
jo
sbb
leave
xchg
outsb
xor
fwait
pop
ret
out
xor
or
clc
sub
mov
push
leave
sbb
ret
and
jmp
mov
jae
ss
in
daa
pop
clc
sub
cwtl
inc
pop
stos
arpl
jbe
aad
arpl
ss
add
fwait
arpl
pop
lcall
push
pop
dec
mov
std
shrl
jg
jp
rclb
jg
mov
ja
push
jno
mov
sarl
sub
sar
iret
shl
je
and
add
mov
sbb
vpavgw
mov
fwait
popl
in
cmp
movb
mov
imul
fcomp
jmp
sti
filds
fiadds
adc
cmpb
add
lods
mov
pusha
in
push
push
jne
jmp
adc
in
and
test
fnsave
mov
inc
cltd
bnd
push
lcall
lea
inc
push
xchg
mov
inc
push
sbb
mov
ror
pop
adc
arpl
mov
dec
add
dec
lock
mov
push
bound
sbb
push
js
pop
lds
mov
pushf
jo
lods
test
out
outsb
sbb
xor
sbb
stc
mov
adc
dec
and
scas
in
pop
ds
sbbl
jge
xchg
and
inc
lock
test
lcall
jns
cmpsl
imul
cmp
out
mov
sub
and
cld
lcall
push
jmp
mov
or
pop
sbb
pop
shr
mov
or
sub
sbb
push
mov
mov
mov
cld
push
push
and
outsb
mov
add
jg
mov
add
cmp
mov
test
add
imul
mov
mov
loopne
sub
ja
mov
xchg
ja
pop
cmp
mov
lds
cmp
lock
mov
mov
sub
adc
pop
aaa
mov
pop
cmpsl
les
dec
orb
add
xchg
out
jns
pushf
in
dec
lcall
sbb
or
sub
inc
sub
out
dec
pop
mov
xor
sbb
lods
mov
rcrb
outsl
sub
cs
cs
pushf
pop
shl
test
sub
out
xor
add
stc
ds
jg
icebp
in
data16
adc
inc
mov
mov
sti
or
fistpl
cwtl
hlt
and
xchg
or
cs
xchg
pusha
mov
mov
inc
and
notb
and
mov
xchg
lods
jnp
adc
jecxz
pop
test
add
adc
stos
xor
sub
ret
loop
out
sbb
jne
cmp
outsl
pop
adcb
or
clc
jl
mov
push
aas
out
iret
stos
pusha
xor
ljmp
dec
and
popf
mov
shlb
push
push
ja
and
xor
xchg
inc
xchg
inc
fsubrp
add
and
adcb
xor
jnp
push
std
xor
cmp
xchg
movsb
add
add
jp
clc
sbb
or
divb
cs
data16
lds
fs
xlat
push
cmpsb
xchg
and
cwtl
cmp
loope
xchg
and
mov
pop
mov
mov
cwtl
add
xor
jns
mov
mov
cmp
shl
xor
mov
pop
xchg
mov
inc
pusha
xchg
gs
cmp
in
nop
ret
and
stc
repz
into
and
les
in
inc
mov
and
out
push
scas
mov
cmp
sub
lahf
and
pop
scas
rclb
mov
dec
adc
cmp
aam
push
popf
jne
sbb
and
adc
xlat
mov
add
insl
adc
test
adc
and
orl
jle
adc
repnz
sub
aam
mov
mov
sub
xor
sahf
scas
mov
int
dec
dec
jne
dec
pop
xchg
pop
and
pusha
cmc
sbb
sbb
add
faddl
pop
jae
mov
push
imul
or
aas
shrb
iret
cld
mov
lahf
pop
dec
xlat
stos
shll
mov
sub
je
movsl
cmovne
out
addl
std
movsl
push
mov
rol
mov
adc
and
adc
scas
sub
mov
loope
add
mov
in
dec
insb
mov
push
inc
lret
add
test
mov
sahf
xchg
or
fnstsw
shll
andl
ret
sub
push
aas
jp
cwtl
outsl
inc
add
xchg
mov
nop
movsl
xchg
cmp
pushf
pop
jp
cltd
stos
push
lcall
xor
andb
mov
arpl
hlt
xchg
mov
jne
arpl
pushf
push
pop
ljmp
rcll
out
movsl
fptan
test
pop
adc
shll
inc
shlb
mov
mov
jns
sbbb
push
xchg
add
inc
mov
and
test
xor
dec
mov
ljmp
andb
xor
inc
pop
inc
arpl
cmpsl
xchg
leave
xchg
sbb
xchg
push
imul
dec
hlt
es
repz
pushf
rol
mov
mov
sbb
aaa
js
adc
xor
mov
nop
cmp
jl
scas
push
mov
or
mov
je
stos
jns
inc
xchg
jo
mov
fldpi
fisttpl
or
and
mov
push
jmp
adc
dec
mov
add
jne
cltd
mov
out
xchg
ljmp
stos
mov
cltd
jb
int3
mov
dec
ffreep
out
add
std
inc
push
lods
rorb
sbb
inc
loopne
sbb
cmp
mov
in
add
mov
adc
loope
aam
dec
pop
push
xor
mov
dec
cmp
xor
sub
push
shl
aaa
mov
mov
or
xchg
xchg
sahf
cmp
dec
in
sbb
or
mov
inc
lods
mov
mov
xchg
bound
inc
mov
mov
inc
jecxz
mov
les
xor
pop
enter
mov
imul
dec
cwtl
mov
pop
lret
scas
mov
xchg
jecxz
jge
jmp
mov
pop
or
push
jae
lods
pushf
test
xchg
cmp
insb
imul
leave
pop
mov
mov
sub
outsb
dec
jg
inc
jg
test
jnp
int
iret
bound
cmpl
add
daa
sbb
jae
loope
jbe
fldenv
pushl
inc
jbe
mov
pop
mov
in
dec
pusha
shrl
mov
xchg
adc
pop
arpl
lahf
popf
loope
movsl
lcall
aaa
cmp
lods
imul
adc
fdiv
rolb
ss
lods
cmp
cwtl
int3
in
jo
xchg
fists
xchg
sub
mov
and
test
gs
out
scas
movsb
mov
ret
jno
dec
sub
std
xchg
inc
mov
ret
xchg
iret
fcomp
enter
je
mov
sub
fcmovu
aam
popa
sbb
mov
and
or
jnp
push
adc
adc
lock
inc
inc
ss
jnp
mov
pop
mov
nop
std
mov
imul
add
adc
out
or
and
add
xchg
sbb
es
mov
sub
pusha
and
test
testl
out
jl
and
xchg
push
ret
fwait
cmpsb
ja
xor
stos
je
fninit
jo
mov
mov
xlat
adc
iret
aaa
dec
sub
movsb
xor
mov
cmp
inc
jae
push
inc
int
xor
int
mov
jl
add
mov
add
cld
cli
sti
clc
cmpsl
cmp
push
mulb
lods
ja
dec
faddl
cmc
inc
cmp
xor
in
and
mov
aam
and
pop
jmp
cwtl
xlat
mov
mov
ficoms
sbb
fneni(8087
pop
out
or
jae
pop
jp
xorb
sar
xchg
addr16
xor
mov
iret
idiv
or
sbb
sbb
mov
insl
rcr
mov
mov
and
mov
daa
push
pop
and
addb
jecxz
in
add
push
xor
sahf
sub
lods
test
mov
adc
mov
lahf
adc
sbb
mov
iret
pop
push
outsb
dec
add
mov
add
dec
sub
divl
inc
cmpl
in
pop
sbb
addb
or
or
adc
lret
out
addl
jno
pusha
call
lret
and
imulb
mov
jge
mov
ret
dec
push
repnz
orb
push
dec
pop
push
inc
clc
lock
push
icebp
xor
dec
jmp
les
cli
add
mov
movsl
rolb
or
cmp
and
rorb
aam
pop
xchg
or
mov
cld
push
or
inc
fldl
pop
rol
std
and
ja
jne
imul
incb
xlat
aad
add
sbb
mov
or
mov
int3
lahf
daa
add
lcallw
sbb
movsl
push
xor
mov
fcmovb
sub
mov
push
jno
adc
popf
jo
jns
cs
mov
mov
es
lret
pop
xor
cmp
push
cmp
shlb
mov
repnz
in
or
mov
stos
cmpsb
pusha
pop
jmp
into
test
push
pop
and
ja
pop
dec
lahf
inc
les
not
or
or
mov
aad
inc
shll
cmpsl
ret
pop
dec
test
loop
fsubrl
mov
sub
sbb
sbb
mov
jl
imul
hlt
jno
sbb
cs
add
fsubs
outsl
das
dec
cmc
rorl
aam
jle
push
dec
mov
hlt
adc
xlat
pop
cmp
sahf
fs
cli
push
ret
xor
out
add
pop
add
add
lock
sbb
test
js
mov
faddl
xchg
les
ja
dec
out
jle
xor
pop
adc
sti
test
in
mov
out
jb
mov
jb
ud2
sbb
faddl
pop
aam
lds
jo
or
pop
jbe
dec
fs
xor
jo
push
add
push
mov
cmpsb
ja
push
xor
pop
push
mov
mov
mov
sar
mov
mov
adc
xor
shlb
addl
leave
outsl
push
mov
or
pop
and
sarl
out
outsl
pop
lret
jg
xor
mov
ds
xchg
out
popf
jbe
pop
hlt
xchg
xor
test
lea
rorb
cmp
sub
or
pop
hlt
shlb
sbbl
ficoml
arpl
push
adc
out
jecxz
enter
scas
pop
mov
and
pop
sbb
lods
imull
gs
ret
shll
sbb
je
nop
and
jbe
hlt
sbb
leave
lahf
aaa
ret
push
in
xorl
fildl
dec
jo
xchg
sbb
inc
mov
push
rorl
cmp
adc
fwait
sub
cwtl
std
pop
mov
adc
xchg
jmp
in
inc
shll
pop
jmp
rcrl
cmp
pushf
jno
sub
hlt
mov
xchg
dec
lds
movsb
fcomps
lods
sbb
dec
jbe
pop
leave
daa
fildl
cld
popf
jge
mov
add
lret
sbb
jo
ljmp
rclb
cld
mov
mov
mov
into
adc
inc
in
push
in
mov
pop
shl
fmull
dec
rcrb
and
inc
dec
mov
push
sarb
mov
scas
negb
insb
cmpsl
clc
or
xchg
adc
pop
aad
repz
xchg
nop
sbb
fwait
repnz
aaa
pop
out
mov
adc
xorb
notb
lock
mov
sub
mov
std
sbb
push
sub
aas
rclb
add
lret
rep
in
orb
sub
push
cli
repnz
add
ja
sbb
jle
mov
pop
pop
cmpsl
movsl
in
sub
push
in
stc
xchg
push
fwait
mov
aam
xchg
int3
fninit
inc
or
rclb
mov
bound
mov
adc
pushl
and
push
dec
stc
dec
push
pop
mov
imulb
jae
lds
and
and
fcoml
mov
or
pop
mov
daa
in
inc
xor
sbb
push
and
sbb
std
mov
stos
sbb
jge
sbb
inc
mov
clc
insl
sahf
xor
mov
mov
in
cltd
mov
mov
mov
cmp
les
adc
sbbb
popf
insb
ljmp
cs
in
mov
mov
mov
rcr
sbbb
imull
mov
push
outsl
and
sbb
movsl
arpl
cmp
jge
push
in
sub
lret
stos
add
shrl
mov
cs
xor
and
daa
mov
out
pop
and
push
popa
push
adcl
call
or
negb
out
stos
dec
mov
pop
loopne
xlat
scas
idivl
xlat
sbb
sahf
jo
xor
lret
arpl
or
dec
xchg
add
or
add
lods
cmp
jecxz
inc
rcrl
lcall
lods
sbb
and
ret
add
stos
mov
mov
mov
pop
and
test
sub
test
push
push
lock
inc
dec
nop
int
add
sbb
xchg
pop
test
push
adc
jl
lret
lcall
mov
lods
xchg
data16
mov
shrl
scas
mov
adc
pop
bound
icebp
sub
and
mov
or
cmpsl
jne
sbbb
push
inc
adc
into
test
mov
push
dec
mov
faddl
mov
addr16
sub
sbbb
int3
sbb
rolb
pop
lret
loope
pop
gs
mov
inc
icebp
das
loop
pushf
loope
or
xor
cmc
or
pop
push
add
push
pop
sahf
or
arpl
xor
jmp
xchg
jb
xchg
lds
push
sbb
jecxz
ss
add
or
loope
sbb
mov
xor
mov
cwtl
pop
push
cltd
inc
mov
ja
ss
sub
sub
out
mov
mov
xchg
xchg
fnstsw
mov
lds
pop
subb
mov
jns
push
xor
mov
stos
je
scas
icebp
jle
sbb
pop
cwtl
cmpsl
in
fsubp
test
inc
jb
push
mov
cs
jle
mov
adc
mov
jmp
dec
je
enter
add
push
inc
aaa
shll
push
mov
mov
inc
aam
cld
mov
addl
js
cmp
xchg
shll
gs
or
outsb
xor
jp
and
rcr
inc
outsb
sahf
daa
mov
or
enter
pop
sbb
inc
and
sub
outsl
pusha
insb
lret
leave
push
shl
loop
cwtd
pop
ljmp
pop
loop
pusha
cmp
xlat
mov
lret
fists
sbb
jl
jno
fisubs
orl
movsb
in
and
cs
inc
xor
out
mov
icebp
jp
jl
jns
mov
fists
aaa
inc
aaa
pop
out
jg
lret
out
xor
jo,pt
inc
mov
out
out
repz
rcrb
cs
stos
sub
jl
daa
jae
nop
iret
dec
aad
pop
pop
ja
cmp
out
push
lahf
add
xor
xor
jno
daa
loope
jnp
pop
sbb
lret
push
fldenv
lds
sahf
push
push
push
inc
cli
imul
aas
xchg
sub
mov
insb
pop
pop
and
fmuls
out
aad
dec
jle
gs
push
jb
adc
fnsetpm(287
das
push
xchg
mov
mov
pop
fstl
lcall
mov
rorl
pop
leave
fs
sbbb
dec
orl
pop
mov
call
outsl
mov
rorb
loopne
add
cmp
mov
lea
mov
xchg
push
divb
push
cmp
call
dec
aad
aad
fisttpl
mov
mov
rol
sti
lret
icebp
jl
pop
push
push
pop
pop
sbb
imul
sbb
dec
testl
cmp
dec
loopne
push
cmp
push
arpl
call
push
aas
gs
or
pop
pop
jg
outsl
sarl
cmp
out
addr16
xchg
and
repnz
cmp
popa
sub
jae
pushf
pop
test
lods
pop
mov
hlt
das
fcompl
arpl
adc
push
lret
je
pop
js
jge
lahf
jl
pop
mov
fs
fldt
repz
sbb
and
in
ret
mov
idivl
jb
inc
out
add
imul
jno
sbb
out
pop
flds
mov
aas
int
sbb
in
sbb
push
or
andb
jb
addr16
mov
cmpsl
sahf
xchg
sbb
leave
fsubrl
push
mov
dec
shrl
mov
sarl
jmp
xchg
pusha
xchg
push
fwait
outsl
test
pop
int3
pop
je
les
loopne
sub
dec
dec
sbb
rcrl
std
mov
insl
lods
test
loop
jmp
cltd
mov
insl
icebp
mov
and
dec
and
dec
stos
dec
ja
or
stc
mov
loopne
enter
ljmp
fdivrp
adcb
push
dec
pop
test
inc
aad
or
sub
mov
inc
or
pop
hlt
out
movsb
je
xchg
loop
pop
jmp
sub
inc
nop
pop
or
jns
imul
insl
scas
mov
mov
xor
test
repnz
or
pop
aam
stos
cltd
dec
add
inc
jle
add
jmp
movzbl
ret
movsb
shlb
repz
mov
loopne
mov
mov
test
cmp
aad
push
mov
push
fistps
xlat
xor
aaa
test
sahf
push
sub
pop
xchg
flds
in
push
sub
ficompl
cltd
jo
dec
negb
pop
jno
cs
js
into
mov
inc
outsb
sbb
cmp
xchg
popf
xlat
nop
mov
xlat
fcoms
mov
mov
sub
addr16
xor
lock
mov
mov
cmp
add
sarb
mov
mov
xor
call
ljmp
and
out
inc
jmp
mov
test
movsb
cmp
adc
lea
rorb
daa
cmp
hlt
movb
mov
fldl
lcall
push
in
dec
cmp
jp
hlt
aas
ja
adc
dec
aam
xor
sahf
pop
xlat
jl
xchg
mov
xchg
dec
inc
aam
sbb
mov
repz
xchg
ljmp
mov
xor
or
mov
rcr
jl
inc
mov
cmp
sbb
imul
dec
addr16
mov
xchg
or
inc
adc
stc
adc
mov
ljmp
cmc
shlb
cmpsl
cld
dec
ret
sbb
cmc
gs
inc
adcl
mov
sub
out
and
mov
mov
int3
and
xor
pop
das
jns
push
mov
fcoms
jbe
fsts
cmp
ret
add
lock
sub
adc
dec
out
pop
adc
les
lods
imul
mov
mov
dec
cmpsl
mov
cwtl
orb
and
outsl
mov
inc
nop
fisubl
mov
call
stos
cmp
mov
rolb
mov
outsb
bound
mov
sub
mov
inc
xor
cmp
adcb
idivl
push
adc
ss
mov
mov
fstl
lods
push
aad
gs
es
add
xor
aad
stc
cld
ljmp
inc
leave
repz
jmp
jnp
lods
stc
xor
sbb
cmp
jecxz
lock
lds
mov
in
insb
out
cmpb
cmpsl
cs
xor
inc
cmpsl
lahf
movsb
cmp
out
ljmp
push
push
fs
mov
enter
push
or
test
add
adc
lahf
jb
nop
mov
mov
or
leave
dec
repz
lea
and
mov
mov
rcrl
xchg
adc
je
inc
dec
fildll
mov
loopne
or
push
ds
jp
fwait
sbb
cmp
dec
sbb
mov
imul
cmpsl
cltd
fsub
outsl
test
and
dec
insb
icebp
daa
jne
push
xchg
cmp
loope
out
test
mov
or
or
jecxz
add
xor
mov
mov
xchg
shrb
adc
loope
jge
lcall
or
test
cltd
out
mov
pop
and
xor
cmp
sbb
test
xlat
lods
mov
push
inc
daa
jae
cli
ret
push
dec
mov
jp
lods
xchg
enter
clc
push
into
gs
lods
ss
daa
sarl
imul
push
inc
sub
arpl
cmpsb
push
popf
aaa
or
mov
adc
rolb
adc
pop
les
pop
xlat
cmpsl
xchg
push
insl
or
cmpsl
or
addr16
adc
es
cmp
sbb
sti
insb
mov
imul
lcall
fmull
out
cmp
mov
and
dec
dec
cltd
lds
cmp
xor
adc
inc
sub
pop
popa
mov
mov
mov
hlt
pop
lds
sub
add
bound
mov
sub
mov
push
leave
imul
inc
movsl
sbb
das
sbb
out
jl
add
ret
cmpsb
jb
sbb
add
addr16
sub
or
mov
push
out
mov
jge
popf
int3
lahf
add
cwtl
stc
jg
xchg
xchg
xor
movsl
cmp
es
or
fnstenv
lahf
in
sub
adc
mov
dec
cmp
mov
aam
int3
scas
jge
out
push
sbb
jo
stos
scas
addl
mov
stos
divl
in
pop
and
shlb
or
adc
jo
ja
push
sub
stos
sbb
mov
or
inc
jne
mov
jnp
mov
pop
ss
xor
push
aas
sahf
orl
pushf
xlat
movsl
jmp
imul
out
xchg
cs
pop
dec
jo
mov
fdiv
mov
xchg
hlt
stos
and
mov
or
inc
movsb
and
sbb
int3
and
aam
and
dec
cld
cmp
fsubl
dec
inc
pushf
push
or
mov
enter
out
inc
pop
stos
mov
in
mov
inc
inc
in
cli
shll
test
pop
jo
xchg
add
mov
popf
or
sub
jno
mov
pop
jl
sub
xor
stos
lods
mov
test
jecxz
cmp
mov
shlb
test
in
or
mov
lcall
jb
in
fwait
loope
mov
xlat
cmp
cltd
js
in
add
stos
or
dec
inc
fs
fcoms
sub
adc
adc
cli
pop
cltd
jl
cmp
push
jae
xchg
scas
fidivl
push
mov
or
and
ror
xchg
mov
mov
push
je
jge
xchg
in
fxch
inc
movsb
pop
ljmp
imul
jmp
std
mov
xor
jp
ja
aam
mov
iret
and
lret
into
jo
imul
movsb
inc
shll
xor
mov
push
ret
out
fsts
fsubr
mov
mov
rorb
je
mov
xor
test
pop
xchg
in
add
mov
addr16
pop
adc
xor
lds
jmp
cmp
sti
xlat
out
insb
stos
mov
imul
sbb
pop
loop
pop
jl
out
dec
or
imul
mov
sub
cwtl
mov
sarb
pop
daa
lcall
nop
not
outsb
lock
stos
lods
ds
and
pop
fwait
mov
lods
or
int3
sub
dec
or
loopne
jb
xchg
out
lock
pop
jns
fists
mov
repnz
stc
xor
xchg
aaa
xlat
cwtl
std
mov
fistpll
mov
push
out
cld
call
mov
cmp
pop
pushf
mov
pop
cmpb
xchg
ds
push
fistpl
loope
das
adcl
stos
fmuls
mov
imul
mov
subb
or
push
push
mov
fsts
out
mov
xchg
cld
outsl
mov
pop
jge
and
jecxz
loopne
scas
andl
xlat
sub
loop
sbb
xor
cltd
adc
das
sub
jmp
mov
pop
dec
sbb
cwtl
mov
jns
cwtl
loop
daa
outsb
jecxz
xor
jbe
sub
dec
pop
add
sarl
cmp
rcll
push
aad
ljmp
loope
jo
and
ret
repz
dec
pop
pop
mov
xlat
nop
jmp
repz
cmp
loop
jnp
in
imul
jg
test
js
pop
icebp
inc
xchg
cmp
xchg
pop
jmp
insb
inc
in
shlb
pop
mov
cwtl
std
mov
or
sub
cmp
gs
movsb
stos
xchg
lcall
cmp
sub
add
test
movsb
jno
jecxz
divl
dec
dec
dec
icebp
mov
fdivl
scas
push
cwtl
imul
dec
rolb
mov
jp
lahf
data16
push
push
adc
mov
cmp
sub
xor
aas
jnp
jbe
push
imul
imul
pop
inc
fldt
inc
or
inc
and
inc
add
movsb
mov
imul
sbb
or
mov
mov
es
dec
rolb
push
jmp
push
addr16
clc
in
andb
popa
lret
in
pushf
add
dec
push
xor
cs
loope
sbb
fmuls
dec
xor
ds
inc
add
cmpl
data16
xchg
hlt
add
pop
xchg
pusha
push
mov
js
mov
fcompl
lods
dec
xor
mov
subl
sbb
xchg
std
jns
in
std
popf
pop
gs
cmp
mov
pop
lahf
xor
jl
mov
hlt
mov
inc
cmp
cmp
in
iret
arpl
fstpl
rolb
pop
sub
adc
and
xor
cmp
psrlq
sbb
das
popf
aas
or
xorl
in
rcrb
jo
push
mov
jp
cmc
adc
or
push
cmpsl
inc
jno
out
mov
or
outsl
shll
int
imul
mov
scas
addr16
mov
or
fdivl
xchg
ss
lahf
and
fdivl
sub
je
cmp
mov
jb
dec
add
dec
inc
cmp
or
add
incb
xor
dec
clc
ljmp
addr16
js
mov
dec
mov
push
inc
testl
mov
stc
test
xor
dec
lods
add
outsl
stos
pop
cmp
ljmp
sub
pop
lds
test
aaa
out
je
mov
sarb
notb
outsb
inc
xor
push
mov
mov
jae
adc
outsl
mov
adc
and
sub
adc
into
jecxz
jmp
pop
pop
xchg
fstpl
out
and
xchg
pop
cmp
or
scas
mov
sbb
addb
in
mov
inc
aad
mov
adc
mov
shll
imul
sub
in
or
test
std
pop
negl
push
nop
ljmp
js
cmpsl
rcr
pop
fbstp
int3
fiadds
or
add
scas
sub
mov
jg
cmc
push
xlat
nop
cmp
sub
std
stc
cmp
scas
fildl
push
cmp
and
inc
pushf
in
ret
or
add
sbb
adc
nop
test
rcrb
and
inc
inc
cmpsl
jmp
mov
dec
cmp
or
lret
addr16
jbe
mov
roll
inc
mov
mov
add
mov
daa
rorl
or
jo
xchg
push
inc
and
mov
or
bswap
cmp
add
adc
mov
inc
cmpsl
cmpsl
inc
andl
iret
push
rorl
jle
mov
roll
aas
mov
daa
cmp
and
jmp
and
cltd
xchg
lds
mov
lcall
inc
jb
cmpsl
mov
sbb
mov
jp
cmp
daa
test
dec
shrb
pop
mov
sbb
mov
frstor
cmp
xor
jmp
int3
xor
scas
xor
push
jp
loope
adc
lahf
enter
sbb
outsb
push
mov
or
xchg
ret
mov
cld
sub
xchg
adc
shlb
lods
sbb
xlat
lahf
shrl
push
testb
fstpl
ss
mov
popf
xor
pushf
les
sub
push
fwait
stos
mov
addb
cmp
and
push
sub
mov
cmp
cs
jae
scas
cmp
cmp
sar
xlat
aaa
add
mov
sub
stos
repnz
add
adc
std
lods
test
mov
les
ja
into
adc
cwtl
bound
in
xchg
in
mov
sbb
xchg
ljmp
shlb
testb
inc
dec
fidivl
sub
ds
aad
sti
mov
mov
inc
inc
pop
cmp
daa
mov
mov
and
out
clc
push
idivb
std
lcall
cmc
add
jp
adc
mov
loopne
jne
dec
adc
out
inc
jnp
jbe
xchg
fsubs
ja
mov
push
nop
lods
jp
icebp
adc
inc
xchg
jno
mov
dec
ja
pop
adcb
into
or
lock
pushw
xchg
push
sub
leave
loope
cmp
xor
push
sbb
dec
adcb
js
mov
inc
ljmp
jl
jg
push
xor
push
pop
lahf
shrb
nop
xchg
xchg
test
in
adc
pop
gs
sub
in
sahf
cmpsl
cmpsl
dec
pop
jge
mov
inc
sbb
push
mov
or
cmp
in
xor
shrl
adc
loop
inc
or
xor
flds
filds
xor
xlat
push
sti
lock
add
or
jecxz
adc
lahf
mov
sbbb
push
arpl
jge
xchg
mov
jns
mov
cmp
aaa
sbb
dec
insl
dec
test
and
aas
mov
scas
or
add
iret
sbbl
ds
sbb
cmp
or
pop
ds
jae
testb
clc
sub
sbb
inc
je
mov
cs
scas
xchg
imul
push
push
fwait
add
fnsetpm(287
lea
popa
das
scas
mul
and
add
movsb
mov
xchg
and
call
sbb
iret
mov
daa
rcrl
popa
mov
sub
xchg
pop
add
stos
inc
loopne
mov
jo
jne
and
or
int
lods
mull
mov
jno
lret
jae
int3
sub
sbb
movsb
adc
and
insl
lock
push
and
scas
push
pop
and
push
inc
pop
add
inc
pusha
xchg
mov
mov
rol
outsl
test
mov
sbb
jne
push
mov
aas
dec
je
xchg
test
or
mov
popa
sbbl
cmpsb
mov
and
xchg
dec
sub
inc
sti
pop
in
pmulhw
xchg
popa
pop
cmp
jo
addb
mov
rcrb
pushf
ja
outsb
popf
xor
push
mov
adc
dec
lods
sbbl
mov
inc
mov
sbb
mov
sbb
inc
push
sbbb
cmp
pop
sbb
ljmp
and
mov
int3
xchg
punpcklwd
daa
divl
and
mov
mov
out
sub
xchg
std
mov
sub
call
jbe
xchg
stos
pop
sbb
dec
mov
xor
or
aam
arpl
lock
sub
out
imul
sbbl
mov
stos
out
loope
enter
out
jae
aas
js
add
ret
pushf
mov
adc
in
mov
xchg
and
nop
pop
add
mov
mov
jl
xchg
loopne
jmp
pop
fdivrs
push
and
js
adc
int
push
je
pop
sub
add
inc
or
add
mov
mov
adc
mov
ret
xchg
push
int3
push
jecxz
stos
xchg
mov
fwait
imul
push
jmp
xor
jnp
inc
scas
fdivrl
inc
push
pop
imul
adc
xor
sub
mov
hlt
cmp
mov
lds
mov
cmp
cli
es
push
insb
fimuls
pop
test
jmp
or
push
insl
xchg
inc
xlat
jmp
mov
cmpsl
mov
jbe
dec
xchg
lds
test
sbb
int3
lods
sub
enter
mov
sbb
xchg
mov
adc
clc
cmp
push
mov
int
sub
jecxz
outsb
in
dec
mov
ja
adc
in
xor
mov
scas
aam
xor
jle
stos
sbb
stos
orps
mov
and
or
scas
insl
cld
outsl
push
push
lods
andl
sub
mul
or
xor
mov
outsl
das
pop
cmp
inc
mov
pop
les
push
xor
nop
sub
push
and
test
xor
sub
sub
fstps
into
les
gs
insl
or
movl
imul
sbb
fisttpl
dec
test
movsb
adc
lods
lret
mov
orl
fwait
clc
adc
mov
adc
ficoms
adc
rcll
xchg
ja
pusha
ret
fyl2xp1
mov
dec
test
push
adc
aam
testb
add
push
xlat
neg
fistpl
jno
mov
xchg
in
dec
mov
es
jl
jno
or
sbb
popf
xchg
loopne
pop
xchg
out
outsl
mov
fstp
fcmove
cmp
cltd
daa
and
cmc
cli
in
lret
sbb
cmp
mulb
ret
sub
mov
add
pop
jb
aam
enter
popf
sbb
je
xchg
jne
cmp
scas
ret
mov
sub
ret
push
push
out
pushf
sbb
push
pop
add
mov
lods
por
fs
lret
lods
add
test
insl
out
sbb
push
imul
pop
cmp
loope
jle
adc
imul
xchg
push
test
adc
loope
inc
insb
sahf
incb
push
leave
cmp
xor
frstor
sub
add
dec
out
pop
in
mov
xlat
mov
or
xor
sub
mov
in
mov
rorb
dec
mov
push
lea
mov
xlat
fdivp
cltd
or
fadd
add
notl
mov
mov
mov
xorl
or
lret
hlt
and
rolb
insb
lock
push
mov
pop
jb
mov
aam
adc
cwtl
mov
adc
adc
push
stc
lret
pop
shlb
mov
pop
mov
pop
lret
aaa
iret
dec
sub
test
xchg
xor
nop
insl
sahf
cmp
xor
jnp
pusha
xlat
fwait
jae
movl
int3
mov
dec
movsb
fidivrl
mov
cmp
and
leave
push
dec
or
outsb
and
inc
xor
mov
pop
mov
in
adc
fidivs
sub
pushf
cmp
pop
xor
sub
rorl
xor
dec
clc
sarl
ret
xchg
shlb
xchg
mov
scas
xorb
push
ds
xchg
js
or
hlt
fiadds
xorl
scas
or
mov
xor
xlat
cli
stos
sbb
montmul
cmpsb
and
sbb
in
lcall
mov
jns
cmp
xlat
mov
push
scas
popa
xor
mov
pop
lea
cs
xchg
push
insl
cmp
jecxz
es
mov
test
fdivs
mov
and
je
mov
fwait
insb
cmp
in
mov
xlat
xlat
loope
aad
inc
repnz
idivb
and
sbb
repnz
nop
pop
push
mov
add
sub
scas
cmp
mov
push
cmpsl
cmp
mov
mov
add
push
fincstp
inc
test
sbb
sbb
pop
imul
jp
xchg
and
sahf
push
dec
sbb
mull
add
xor
mov
adc
and
lcall
mov
mov
pop
neg
pop
jl
jp
stos
adc
loopne
sbb
push
dec
dec
movsl
aaa
xor
inc
jne
aam
xor
push
loope
and
mov
and
loop
push
cmpsb
in
lret
jnp
addr16
jno
cmp
xor
cld
movsb
fdivp
cmpsb
jge
jmp
es
in
test
jecxz
inc
stos
les
inc
mov
sbb
mov
aam
adc
rcll
jecxz
aad
jmp
pop
xlat
pop
shlb
lret
dec
adc
push
jnp
ja
xlat
sub
mov
testb
cwtl
clc
jmp
jl
out
cltd
mov
aam
das
gs
and
lahf
adc
lods
in
call
subl
inc
in
and
adc
lock
ss
jge
inc
sub
imul
das
repnz
cmp
cmc
mov
adc
insb
shrl
jp
call
xchg
int3
add
int
scas
scas
pushf
fmull
add
daa
inc
into
push
int3
xchg
insl
inc
push
out
lret
gs
add
push
pop
test
jne
cmpsb
pop
cmp
ffreep
ret
lret
stos
imul
or
inc
mov
lahf
sbb
inc
pop
pusha
lods
sub
adc
push
les
out
call
aad
push
jge
adc
dec
push
mov
adc
xchg
rcrl
sbb
insl
pop
test
fldcw
shll
je
mov
sbb
test
pop
cmp
sbb
cld
lret
int
xor
pop
lahf
loopne
and
mov
cltd
or
mov
mov
inc
pushf
pop
sbb
lods
xchg
loope
xchg
dec
testl
jbe
cmp
lds
add
or
cli
cmc
sub
sarb
imull
push
push
leave
add
movsb
lret
icebp
testb
or
cmp
push
stos
or
movsl
cmpsb
xchg
pop
xchg
mov
jnp
or
cmp
sarb
fs
pop
xchg
push
push
adc
es
mov
mov
xchg
push
jb
data16
sub
dec
mov
xor
shrb
sub
mov
or
dec
outsb
daa
pop
lahf
int
lods
repz
mov
icebp
mov
sbb
pop
and
shr
fistpll
mov
and
jne
mov
xchg
das
in
loop
inc
push
add
lret
xchg
aas
xor
jmp
dec
cmc
repnz
scas
mov
sbb
sbb
dec
jno
movsb
sub
cltd
mov
pop
lock
repz
cmp
ret
and
jo
jmp
mov
stc
shlb
fneni(8087
in
pop
mov
dec
insl
pop
add
ds
sbb
stc
sti
ds
mov
loopne
cld
adc
dec
mov
mov
and
inc
lret
add
and
jb
inc
mov
mov
mov
bound
movsl
cmpl
push
pop
popw
adc
test
push
in
jp
aaa
xchg
in
xchg
testl
inc
sub
pop
pop
lret
add
inc
das
scas
sub
cs
pop
arpl
out
enter
inc
fsubs
xadd
cld
adc
jge
icebp
inc
xor
pusha
pop
lcall
add
test
inc
cli
and
mov
jmp
sbb
add
or
jnp
incb
add
push
in
mov
xor
cmp
add
and
daa
or
lcall
jp
in
test
sti
mov
cld
adc
mov
xor
ljmp
xlat
push
pop
add
call
xor
out
xlat
std
test
rcrl
mov
into
pop
jp
into
and
sbb
mov
pop
xor
push
sub
inc
sub
sahf
add
data16
or
xor
sub
mov
jp,pn
pop
pop
and
fdivs
xchg
cmp
xchg
dec
addl
inc
pop
jg
mov
test
mov
cmp
xchg
dec
mulb
jmp
cmp
xor
or
out
push
aad
jmp
dec
sar
adcb
imul
les
mov
out
add
mov
call
add
mov
icebp
bound
push
imul
add
jge
lds
jg
add
imul
stos
ljmp
dec
hlt
js
loope
enter
mov
push
ret
inc
push
or
and
and
testb
and
push
xor
sbb
sub
and
jle
lea
loopne
xchg
xor
sbb
sub
mov
push
adc
mov
cmc
fcmove
mov
sbb
xlat
test
ret
out
jg
jmp
test
and
out
fmuls
data16
pushf
push
xchg
xorb
hlt
push
mov
loopne
xor
ds
std
mov
xchg
popf
roll
sar
mov
out
xchg
test
or
add
movsl
test
cmpsb
push
jmp
int3
push
add
mov
add
xchg
orb
jmp
cmp
adc
cwtl
dec
nop
xchg
pop
rorb
mov
xchg
add
or
fidivrl
jmp
cwtl
mov
mov
pop
xchg
std
or
lds
push
mov
out
mov
mov
inc
sub
jp
loop
jge
into
cmp
test
dec
or
mov
mov
push
jg
test
out
in
sub
sti
push
pushf
inc
ror
scas
inc
rorb
or
add
push
test
lds
imul
out
mov
mov
lds
mov
pop
dec
das
push
mov
dec
xchg
scas
sbb
stc
mov
mov
clc
testl
inc
jae
aam
push
inc
mov
jg
pop
inc
mov
mov
sahf
and
xor
je
repz
and
or
rorb
fbstp
cwtl
gs
cmovo
fdivl
pushf
imul
mov
stos
out
inc
jecxz
cs
or
dec
sbb
pop
inc
not
ficomps
sub
ret
mov
inc
xchg
cmp
or
xor
loopne
mov
jae
cmp
imul
mov
push
lcall
push
cmp
sti
dec
dec
rorl
hlt
xor
aas
and
jge
jb
enter
loop
lea
mov
mov
mov
ss
sti
xor
imul
dec
data16
mov
or
ficompl
mov
or
out
test
xor
insl
jae
or
jnp
pusha
mov
push
repz
popa
mov
ljmp
sub
sbb
loope
fsubrl
dec
in
or
sbb
inc
jno
in
mov
int
mov
insb
scas
jg
mov
icebp
xchg
fistpl
cwtl
cltd
adc
add
data16
sub
sbb
sub
jno
adc
adc
dec
sbb
cmp
mov
fisubl
xor
inc
data16
out
jp
xchg
int3
push
and
aas
lahf
pop
inc
inc
jne
cmp
mov
arpl
pusha
push
testb
mov
sub
xchg
cmp
cmp
xor
dec
pop
repz
addr16
int3
int
test
cmpsb
outsl
sbbb
psrad
adc
sbb
ret
or
incl
sub
out
test
shl
std
sbb
mov
mov
mov
or
mov
xchg
mov
pop
addl
scas
insb
out
mov
mov
dec
or
out
out
in
popa
sbb
cmp
rcrl
ljmp
mov
mov
pop
andb
adc
dec
and
xchg
pusha
sub
push
add
lea
xchg
loopne
ficomps
popf
mov
je
cmc
xchg
mov
in
pop
cld
gs
les
es
std
sbb
mov
fmuls
pop
mov
lret
out
xchg
addb
add
xchg
push
pop
xor
gs
daa
mov
and
fdivrp
ljmp
sbb
lods
ds
mov
cmp
stc
dec
test
dec
xchg
and
out
or
loope
push
sub
call
or
mov
mov
mov
loop
sbb
pop
shlb
push
push
aad
test
mov
xor
adc
sub
push
lock
pop
or
subl
or
popf
or
pop
xchg
add
mov
out
popf
iret
xor
shrb
fidivrl
andb
mov
inc
adc
loope
in
xlat
sub
imul
cmp
and
test
jne
mov
shrb
jnp
xchg
rcll
imul
mov
push
lods
lods
jmp
into
inc
sbb
cs
sub
add
test
cmc
fidivrs
fnstenv
sarb
dec
ret
ret
test
or
mov
mov
mov
adc
dec
pop
in
inc
or
aad
inc
leave
cmp
inc
mov
push
fmul
xchg
sarb
scas
pop
lret
mov
push
xor
stc
inc
test
mov
inc
adc
jne
inc
adc
insl
cmp
imul
gs
dec
mov
dec
js
call
adc
int3
bound
jp
xor
daa
mov
loop
xor
sbbl
pop
jns
mov
pop
mov
hlt
imul
es
and
and
jp
push
mov
aaa
mov
push
mov
repz
shll
lods
mov
pop
outsb
call
ret
pop
stc
sub
add
out
dec
add
pop
lds
cmp
stc
ljmp
push
and
sub
dec
jnp
push
mov
xor
subb
push
dec
jle
xor
fsubs
jge
lock
pop
stos
rolb
and
sbb
mov
fs
cmpsl
fsubrl
out
mov
cmp
aas
xor
adc
jl
int
mov
sub
fistpl
enter
repnz
inc
dec
bound
out
icebp
movsl
mov
mov
xchg
push
enter
mov
or
xor
pushf
jmp
xor
push
mov
cmp
jl
and
lds
gs
data16
cmp
add
jbe
clc
scas
mov
push
aam
iret
sbb
and
mov
push
or
or
hlt
daa
loop
popf
call
dec
push
xchg
test
lods
fdivrp
adc
loop
xor
xchg
bound
enter
mov
sub
movsb
mov
popa
jge
cmpsl
mov
insl
dec
aaa
push
fwait
mov
mov
push
mov
icebp
cmp
shrl
mov
mov
sub
xchg
lret
popf
mov
xchg
lcall
cmp
sbb
push
jb
sbb
cmp
add
push
dec
ljmp
jne
push
mov
lcall
ret
inc
mov
ss
js
inc
cmp
stos
jns
aaa
sbb
imul
cmpsl
xlat
dec
movsb
push
loopne
movsb
inc
lods
testl
shlb
or
mov
push
pushf
push
sbb
cmp
cmp
fs
out
mov
and
lods
adc
xlat
jo
pop
sbb
in
inc
imul
fwait
mov
imul
js
dec
movd
add
adc
out
xchg
dec
sbb
hlt
mov
popf
dec
rorb
mov
dec
jne
stos
lods
in
mov
test
pop
and
push
xchg
xlat
test
inc
jl
les
inc
popa
popf
sbb
out
in
std
fptan
fildll
mov
pusha
ss
adcb
inc
mov
xchg
push
lock
imul
pop
inc
sub
jo
add
push
push
sahf
inc
lcall
vpandn
and
or
flds
jb
dec
std
test
or
mov
call
push
loope
add
adc
dec
aam
mov
lret
or
rol
jnp
xchg
jecxz
fisubrl
push
add
pop
and
push
movsb
in
push
inc
fwait
add
sahf
divb
arpl
out
or
push
mov
adc
dec
int3
jle
fisubrl
test
mov
lock
in
sub
jo
adc
dec
or
movsl
cmpsd
cmpsl
aas
loope
mov
popa
repz
loop
je
mov
inc
mov
sti
dec
shlb
xorl
ret
dec
sub
inc
dec
add
ss
ja
xchg
mov
sub
cmp
ds
cltd
push
fimuls
jmp
scas
insl
ja
push
cwtl
loope
add
lds
xchg
add
notb
inc
imul
mov
adc
fdivs
bound
mov
je
and
arpl
add
lcall
fsubl
pop
inc
sub
sbb
iret
insl
sbb
sahf
adc
and
cld
in
add
jo
mov
cmpsb
mov
into
rol
ljmp
call
mov
and
mov
frstor
and
and
ja
dec
mov
addr16
xchg
sub
and
fidivl
jmp
push
mov
out
ds
icebp
pop
jno
push
xor
jo
dec
pop
inc
fnstenv
lock
enter
mov
movsb
push
push
lcall
in
or
mov
pop
in
jg
lret
lods
out
in
push
push
inc
xchg
push
push
push
das
mov
js
adc
test
add
push
pop
test
add
adc
push
js
jg
gs
sbbl
mov
dec
icebp
inc
adc
inc
push
leave
xlat
insb
dec
ret
xchg
xchg
xlat
jge
fmull
lcall
sbb
jnp
out
adc
push
cmp
fcmovne
test
repnz
cmp
mov
mov
and
arpl
pop
xorb
cmp
rol
jle
mov
dec
hlt
xor
mov
js
jl
rep
mov
mov
add
arpl
mov
pop
aas
xor
mov
jle
push
notb
fs
add
mov
or
pop
std
ljmp
movsb
cmp
notl
icebp
mov
fldcw
pop
int
inc
adc
jns
push
shr
daa
mov
rcr
ljmp
pop
xor
xchg
pop
xchg
ret
testb
sbb
xor
mov
pop
fdivs
rcrl
pop
sub
fiaddl
stos
xchg
out
dec
mov
mov
bound
ja
adc
repnz
hlt
notb
sbb
sub
pop
xchg
xlat
push
cmp
pop
pushf
jecxz
lods
loopne
jae
inc
jmp
add
push
xor
or
add
mov
loop
rcrb
stos
xchg
cli
add
test
in
push
lds
cmp
out
mov
clc
icebp
mov
pop
in
dec
and
xchg
test
dec
xchg
add
fldcw
jmp
mov
das
mov
sub
and
push
inc
repnz
imull
and
setb
cli
mov
inc
push
mov
ret
lahf
das
mov
pop
push
dec
outsb
add
xor
cmp
dec
push
push
fisubl
arpl
cltd
xor
lods
hlt
mov
inc
imul
pop
xor
testb
idivb
pop
add
sbb
mov
dec
mov
sti
sbb
call
or
icebp
sbb
xchg
cltd
pop
pusha
inc
inc
fistps
push
mov
xchg
dec
adc
lea
pop
fadds
roll
jbe
dec
push
mov
roll
sahf
push
lds
push
pushf
xor
xor
repnz
pop
fcom
and
xchg
flds
aaa
bound
imul
inc
mov
shll
fimuls
rclb
nop
fbld
mov
mov
stos
inc
mov
test
mov
inc
jae
fucomi
int3
mov
lods
mov
cmc
test
fsub
sahf
ja
add
mov
sub
mov
jno
nop
sub
mov
or
jno
outsb
inc
out
push
iret
fwait
add
sub
and
jge
inc
int3
xchg
jns
and
aas
xchg
mov
mov
cmc
adc
test
sar
aaa
call
add
mov
cmc
aad
jns
lock
pop
in
jmp
cmp
sar
jns
push
mov
int
jns
inc
in
mov
jne
mov
dec
or
sahf
or
imul
mov
pop
pop
mov
cs
sub
and
pop
rcll
inc
and
pshufw
mov
mov
pop
jne
cmp
and
jp
mov
and
aaa
stos
rcrb
test
mov
pop
lahf
and
loop
mov
dec
out
sbb
in
push
in
lret
lds
out
add
vpsubsb
jmp
sub
mov
pop
sub
mov
xchg
cltd
das
pop
sub
push
xchg
jl
mov
mov
outsl
mov
insl
sbb
mov
fisttpll
jnp
ljmp
push
call
loopne
jg
cmp
mov
cmp
call
xchg
pop
xchg
sub
repnz
outsb
clc
and
inc
inc
in
pop
adc
push
dec
sti
or
sub
pop
test
adc
mov
jp
fs
push
lods
imul
cs
cltd
adc
xor
dec
and
push
lods
mov
and
xchg
fisubl
outsl
nop
out
push
aam
icebp
mov
dec
and
xor
cmp
test
call
adc
movsl
pushf
enter
stc
mov
subl
cmpl
jecxz
cmp
sbb
jno
movsb
ljmp
lods
jno
std
adc
jge
ja
orl
and
jmp
adc
mov
mov
cmp
sbb
insb
cmp
cmp
sub
jmp
mov
imul
sub
fs
sub
es
mov
sbbb
cmp
adc
and
pop
aaa
in
inc
inc
leave
xor
sbb
lahf
arpl
cmpsb
mov
add
ss
sbb
insb
sbb
fisttpl
pop
inc
pop
sti
test
enter
add
fisubrs
sub
lret
push
aaa
testb
psubb
in
cmp
movsb
and
nop
add
aas
cltd
xor
stc
and
jnp
pop
std
lret
clc
mov
inc
imul
ja
mov
mov
add
in
jle
fstpt
ss
rorb
add
push
out
test
cld
dec
sub
dec
pop
and
push
cmpsl
bnd
cmp
push
fisubs
subb
and
mov
popa
cltd
aad
pop
stc
xor
mov
icebp
loope
mov
imul
movsb
imul
mov
xor
xchg
mov
xor
lret
or
addr16
add
add
into
jno
inc
mov
jb
jbe
cltd
and
inc
mov
pop
stos
cmp
dec
mulb
push
sti
loope
mov
dec
xor
les
xlat
sub
xchg
mov
stc
push
xlat
sbb
cmp
cmpsb
cmp
push
rclb
shlb
imul
sub
jae
ja
mov
mov
bound
int3
jecxz
scas
outsb
lods
jae
or
nop
ds
dec
inc
dec
movb
dec
add
sbb
lods
fnstcw
ror
adc
popa
lret
lahf
mov
mov
mov
lea
clc
mov
cltd
stos
sbb
xor
and
outsl
or
mov
cmp
push
sti
dec
dec
and
sub
insb
movb
pop
mov
aad
or
sbb
adc
push
int
ds
mov
xor
xchg
fisubrs
jg
sbb
or
xchg
cli
xchg
mov
lods
scas
and
or
mov
mov
scas
and
xor
fldl
orb
lahf
or
mov
sub
jge
insb
sbb
negb
enter
xchg
mov
sbbb
repnz
outsl
std
dec
stos
int
cmp
pusha
in
dec
or
fsubrs
leave
out
pop
lea
movmskps
rclb
adc
or
cs
pop
cltd
daa
push
gs
and
cmp
sbb
jae
dec
push
push
adc
test
out
repz
ljmp
imulb
cmp
inc
mov
popf
mov
xor
out
cld
ss
pop
out
and
movsl
mov
and
lcall
ljmp
loope
xchg
and
insl
lock
test
test
inc
das
lods
lcall
pop
xchg
pop
xor
mov
movsb
jno
inc
shrl
mov
test
push
sahf
cmpsl
outsl
popf
mov
nop
lret
aas
popf
jp
push
sub
jmp
shl
out
sub
mov
sbb
in
dec
pop
and
xchg
stos
rcll
test
add
cmp
je
cld
cs
sti
jae
scas
pusha
push
mov
mov
fdivl
pop
loopne
pop
adc
adc
xchg
test
push
data16
pop
movsb
ss
jmp
int3
sarb
pop
int
mov
xor
fimuls
js
fwait
mov
testb
mov
adc
adc
dec
pop
cmp
je
data16
adc
xlat
bnd
inc
icebp
xchg
jae
aas
dec
int
xor
insb
and
pop
flds
mov
xchg
adc
rolb
adc
or
jne
fsubl
arpl
test
pushf
dec
adc
cmp
cmc
and
popf
rolb
inc
jp
xlat
pop
aaa
hlt
pop
es
jne
push
xchg
cmp
mov
lods
add
jg
push
scas
mov
inc
jl
jnp
iret
mov
cmp
arpl
pop
cli
es
stos
cmpsl
mov
jns
sub
cwtl
jno
mov
or
mov
aaa
gs
rcr
add
pop
divl
loope
sarb
mov
fildll
dec
xchg
add
pop
out
pusha
call
cmpsl
sti
ds
enter
add
lock
mov
inc
mov
mov
adcb
cmp
into
mov
cmp
test
cmp
xchg
adc
rcl
dec
xchg
push
push
lods
and
dec
mov
add
into
dec
xchg
fstl
imul
cmc
xor
out
mov
in
cmpl
mulb
scas
jb
es
jmp
aaa
inc
cmc
jmp
aaa
pop
or
outsb
xlat
cmc
jge
or
rcr
mov
lret
or
test
fcmove
mov
or
sbb
and
sub
icebp
mov
test
shll
nop
stos
bound
sbb
sbb
nop
js
xchg
fs
jb
outsb
cmp
data16
pop
sarb
aad
dec
out
jne
test
repz
or
mov
xchg
xlat
cmp
imul
push
jno
out
jle
jmp
rcll
mov
scas
mov
in
push
adc
lcall
es
push
mov
add
add
aaa
fcomps
std
loope
cli
mov
icebp
mul
cmp
into
mov
mov
test
push
jbe
adc
outsb
call
lds
in
movsl
pop
jg
test
in
std
std
int3
fs
mov
fcompl
sub
ret
sti
inc
push
mov
cwtl
xchg
gs
subl
and
adc
test
test
xlat
cmp
jecxz
lret
jmp
ret
cmpl
aam
mov
pop
push
out
enter
lret
jne
repz
xchg
and
popa
inc
cmp
clc
cs
mov
ret
icebp
pop
jb
mov
ret
pop
idiv
pop
xor
pop
adc
ss
push
push
xchg
bound
pop
cmc
sub
pusha
in
stos
int3
pop
sub
jge
cmp
es
mov
movsb
bnd
xchg
sub
mov
push
jmp
add
imul
jns
xchg
flds
movsb
aas
sbb
lock
cmp
pusha
imul
sub
adc
js
push
jecxz
mov
and
adc
daa
push
ljmp
cli
push
daa
and
xor
xchg
jnp
push
push
test
inc
dec
shr
fists
mov
jne
imul
inc
in
mov
outsb
cmpsl
int3
dec
pop
divl
out
mov
add
xor
xchg
xchg
jno
inc
add
es
lahf
cld
lcall
and
adc
ljmp
cwtl
sbb
or
push
mov
faddl
inc
insb
jecxz
cmpsb
mov
popf
lods
or
mov
sub
mov
out
hlt
scas
sahf
mov
sbb
pop
mov
int3
sub
jne
mov
ret
insl
lock
cmpsb
pop
je
push
imul
mov
mov
movsl
rclb
jbe
data16
or
dec
xchg
or
ret
fidivrs
test
addr16
movl
or
mov
fadds
scas
call
cli
out
and
mov
pop
mov
mov
dec
bound
iret
jns
call
jns
int
dec
ljmp
sahf
bound
xchg
sub
mov
rclb
dec
lods
out
fimuls
cltd
test
xor
mov
out
xor
adc
mov
push
movsb
add
and
dec
call
notb
imul
pusha
clc
jno
mov
inc
jmp
lods
pop
add
sub
es
mov
xchg
mov
xchg
addr16
movsl
ljmp
enter
or
or
pop
mov
xchg
jae
out
daa
idivb
add
xor
cltd
cmpsl
push
call
or
mov
sub
inc
into
mov
sahf
fisttps
test
mov
push
sahf
xor
shlb
add
lock
aas
bound
faddl
scas
dec
pop
jns
fidivs
jne
mov
mov
jge
and
jmp
jno
test
repz
insl
cmp
jp
jne
dec
add
sti
jl
in
and
cmp
dec
shrl
add
mov
fcompl
fs
lods
insl
pop
or
adc
mov
pop
out
add
rcl
inc
addb
push
pop
xchg
mov
loop
sub
adc
repnz
mov
add
cmc
or
sbb
dec
jne
jmp
or
push
repz
add
es
cli
decl
cld
lret
sahf
adc
push
jae
or
push
xlat
jbe
aad
out
adc
insb
test
imul
and
test
mov
rcll
pushf
push
push
mov
mov
in
mov
adc
dec
sbb
aad
and
xor
xchg
xchg
push
enter
lea
out
imul
lods
push
lea
mov
popa
sbb
cmp
pop
push
in
ss
jo
mov
orb
in
pop
pop
ficomps
mov
icebp
push
test
pop
inc
rcrb
pop
js
popl
dec
xchg
sbb
ffreep
scas
inc
aaa
popf
mov
sti
imul
xchg
paddb
fwait
inc
or
lea
xor
aas
dec
js
push
add
inc
cmp
add
clc
or
mov
je
in
popf
out
mov
dec
xchg
xor
cs
into
cwtl
adc
mov
call
adc
rcrb
dec
jl
or
sub
fnstenv
mov
xchg
xor
repz
inc
fbstp
jnp
fdivrl
push
mov
jl
bound
mov
rcll
lret
cli
test
int
stos
jo
xchg
mov
call
leave
mov
aam
sub
loop
sbb
cmp
sub
in
pop
in
jecxz
jne
add
adc
test
inc
les
int
test
int
cmp
hlt
mov
sub
xchg
jge
cmp
jmp
adc
jg
jl
push
sbb
lds
lods
push
mov
mov
shr
mov
xlat
xor
inc
push
ret
nop
mov
cmpsb
pop
push
xchg
pop
fs
push
shlb
xor
mov
jp
xor
out
scas
stos
cmp
mov
sbb
sbb
push
pop
jp
dec
add
fdivr
orb
enter
and
repnz
repz
xor
and
or
nop
inc
push
test
jl
notb
mov
cltd
pop
or
ljmp
xchg
mov
cmp
sbb
sbb
ja
icebp
inc
or
das
mov
int
out
sahf
es
out
loopne
xchg
pop
mov
adc
xchg
in
xchg
in
cmp
sub
inc
dec
push
mov
stos
sarb
add
int
pushf
xchg
mov
mov
xor
shll
fldcw
adc
stc
inc
and
and
lods
pop
jmp
dec
cld
sbb
inc
push
loop
mov
scas
lahf
mov
jge,pt
call
jae
sahf
in
fsts
mov
mov
xor
sub
add
stos
test
loopne
pop
jmp
jno
jo
push
clc
mov
mov
pop
mov
add
cwtl
pop
adc
mov
loopne
aam
orb
rorb
xor
jmp
inc
mov
jl
xchg
mov
adc
sbb
inc
mov
sub
sub
pop
xchg
outsb
test
mov
lcall
dec
imul
out
iret
fsubr
lods
daa
mov
test
sub
dec
pop
iret
adc
dec
fldt
fdivrp
lods
and
and
mov
adc
lea
inc
in
outsl
dec
addr16
arpl
movsb
xlat
or
lods
cmpsb
xor
mov
fstpt
jbe
shll
lcall
movsb
in
pop
nop
mov
and
or
movsl
shlb
cmp
lock
dec
and
jae
scas
cmp
je
push
cmp
add
sbb
inc
nop
out
mov
mov
add
sub
es
ds
fcmovnb
pushf
insl
mov
dec
pop
das
in
add
sub
lea
adc
or
movsb
inc
in
jle
and
mov
cmp
movsl
inc
cmp
je
mov
outsb
sbb
mov
test
xchg
xlat
hlt
lods
xchg
dec
mov
scas
cmp
mov
imul
sbb
aaa
push
dec
xlat
xchg
push
pop
mov
int3
dec
cmp
xor
shl
shrb
in
mov
fs
pop
adc
mov
sbb
xor
dec
andl
jno
cli
fimuls
sub
mov
jnp
out
ss
fsts
test
lea
or
fs
inc
mov
inc
popf
and
add
es
sub
or
mov
cltd
add
mov
push
loop
clc
or
push
addl
dec
xchg
jp
pop
jb
js
mov
pop
inc
bnd
movsb
das
inc
xor
jmp
inc
mov
enter
cli
dec
xchg
rcr
cmp
cmp
fwait
lods
enter
shlb
mov
xchg
jb
sbb
push
jbe
jp
sbb
in
inc
xchg
scas
ds
push
mov
inc
xchg
and
testl
and
mov
loope
pusha
mov
pop
adc
push
push
sti
ds
xor
in
push
fildll
repnz
dec
adc
daa
es
push
xlat
or
mov
sub
xor
or
pop
ss
or
pop
adc
mov
into
je
pusha
mov
test
add
or
sbb
sbb
cwtl
lods
testl
xor
add
cmp
pop
lret
lods
ret
adcb
dec
ret
repz
xor
imul
iret
pop
mov
or
movb
mov
les
adc
call
scas
xor
imul
pushf
js
cmp
push
pop
dec
fimuls
call
push
call
inc
xchg
les
stos
loopne
xchg
cmpsl
test
dec
stos
sbb
mov
sbb
rcrb
leave
insb
hlt
jae
jb
mov
mov
and
xchg
enter
cmpsl
xchg
mov
push
arpl
mov
shrl
push
push
repnz
mov
push
imul
adc
and
add
xchg
ror
imul
pusha
test
into
leave
xchg
mov
nop
add
test
sbb
bound
adc
iret
clc
imul
imul
xchg
imul
push
imul
xor
cmpb
xchg
inc
cltd
lock
rolb
push
test
shrl
cltd
pop
adc
push
movsb
lock
nop
jecxz
fwait
cmp
xchg
dec
stos
push
pusha
mov
fldl
fldl
mov
out
sub
adc
mov
shrl
aam
xchg
test
cmc
in
out
shl
cli
push
fmuls
push
test
pushf
std
cmp
js
aam
add
fdivrp
pushf
cmp
sbb
cmp
mov
imul
pop
js
addr16
mov
js
ds
gs
imul
stos
adc
aad
scas
es
rcrl
icebp
fildl
mov
popa
loopne
sbb
js
and
loope
push
dec
pushf
aad
adc
sub
cmp
repnz
imull
dec
or
and
or
mov
adc
je
iret
out
pop
stos
xchg
inc
mov
xor
sub
jae
mov
push
push
repz
repz
aas
sbb
lds
jp
lret
push
ret
xchg
icebp
push
push
mov
add
frstor
incb
fdivrl
push
inc
add
jno
sbb
fistps
mov
mov
push
mov
imul
add
nop
mov
add
jo
stos
jecxz
xchg
push
addl
xchg
sbb
aaa
pop
test
mov
sbb
push
aaa
sub
pop
stos
mov
ja
sti
mov
push
inc
sbb
dec
cmp
push
jno
inc
sub
inc
dec
adc
enter
arpl
pushf
or
repnz
lea
dec
push
dec
leave
inc
movsb
mov
inc
adc
stc
sub
jmp
int
enter
xchg
out
xchg
pop
jnp
mov
ss
xchg
pushf
sub
shrl
inc
iret
mov
ret
jnp
int3
mov
xchg
test
mov
adc
cli
add
cltd
sub
lds
mov
mov
mov
icebp
pop
enter
dec
lret
push
inc
cmpsl
icebp
sub
jns
push
insb
stos
ds
sub
add
cmp
int3
enter
jno
mov
jae
int
shl
xor
les
call
mov
mov
stos
pushf
sub
pop
or
dec
and
xchg
jl
mov
loopne
test
std
or
adc
push
shrb
xchg
pop
xchg
rclb
jnp
cmc
negb
subb
jo
add
mov
int3
scas
lea
push
mov
jo
out
mov
es
push
rolb
cmp
lret
scas
es
sub
aas
add
faddp
idivl
cmpsb
pushf
xchg
adc
mov
jmp
mov
xor
mov
xor
mov
dec
sub
mov
mov
ds
mov
repnz
push
jno
movsb
inc
stc
add
sbb
or
fistl
mov
jnp
xor
jae
in
js
adc
add
adc
test
sbb
stos
adc
jl
push
push
test
add
adc
push
inc
mov
les
stos
push
mov
dec
xchg
xor
and
lahf
pop
cmp
jne
std
loopne
mov
add
mov
pop
mov
sbb
mov
pusha
testl
lods
or
lods
xor
cli
aad
jb
punpckhbw
lret
int3
or
mov
xchg
shll
clc
add
dec
dec
cmp
xor
adc
fs
out
rclb
push
pusha
cwtl
int
loop
push
enter
inc
nop/reserved
loope
push
push
out
cmp
dec
gs
add
push
sbb
ffreep
push
add
push
test
lods
jge
scas
scas
stos
movsb
into
jmp
ret
cld
sub
and
mov
daa
enter
stos
and
xor
cmpsb
lods
data16
out
jns
dec
sub
aam
out
push
or
adc
lods
sti
sub
dec
cld
jge
dec
icebp
jl
pop
or
dec
add
or
mov
xor
mov
xchg
xchg
xchg
add
cmp
and
or
pop
mov
adc
xor
mov
dec
shll
mov
lahf
inc
jne
cwtl
mov
adc
int3
les
adc
into
test
push
popa
sbb
dec
jmp
decb
cltd
in
jns
xlat
add
rcr
pop
xor
movsl
jp
push
push
sti
adc
sbb
cmp
lods
or
pop
fs
andb
add
out
mov
mov
call
mov
or
and
dec
lods
sbb
call
ss
fs
mov
dec
jmp
and
cmpsb
fisubrs
cmc
mov
pusha
and
fldl
cwtl
cmpsl
scas
xchg
or
sub
clc
inc
gs
js
call
dec
jmp
cmpsb
push
jl
imul
adc
adc
xchg
dec
pop
rcr
aaa
or
orl
lret
adc
mov
cld
dec
mov
xchg
pusha
push
pop
loopne
pushf
cmp
inc
mov
sbb
inc
sub
xchg
sar
or
sub
mov
mov
push
xchg
rorb
lock
inc
sbb
icebp
iret
fimuls
sbb
mov
dec
mov
xchg
ja
repnz
or
mov
sti
adc
jnp
xorb
fiadds
insl
dec
xchg
xor
fiadds
sbb
dec
insl
inc
loopne
test
mov
xor
jmp
hlt
mov
fsubr
hlt
aad
outsl
mov
xor
dec
lock
sbb
lahf
je
adc
test
mov
mov
rol
leave
jne
jmp
lock
data16
and
adc
stc
jp
pop
orl
jge
dec
int3
out
dec
cmp
sbb
sub
xchg
scas
int
jle
dec
and
push
arpl
sbbb
hlt
xchg
sbb
jge
imulb
cmpsl
xor
loopne
dec
js
jmp
push
mov
sti
ret
jecxz
mov
inc
mov
and
xchg
sbb
popa
insl
testl
cmp
push
mov
rcl
and
movsb
push
lret
addr16
mov
clc
xor
push
push
stc
cld
sub
mov
push
call
mov
mov
insl
dec
mov
inc
xchg
test
ficompl
mov
xchg
jmp
mov
mov
movsb
jno
leave
dec
daa
out
dec
addl
test
mov
fwait
jo
out
lcallw
gs
rorl
pop
mov
xchg
test
into
pop
bound
gs
or
out
inc
pop
jo
mov
mov
std
or
bound
sahf
and
movsb
push
hlt
call
sub
or
fcomps
xor
sub
es
ss
pushf
add
mov
xor
cmp
mov
or
dec
sbb
push
std
loope
mov
mov
cmp
push
sbb
enter
andb
jge
xchg
movsl
test
fildll
pop
adc
mov
in
inc
lock
dec
or
loope
xchg
adc
inc
xor
and
mov
mov
out
addr16
test
xorb
and
cmp
mov
gs
and
test
sahf
jl
inc
negl
aam
mov
inc
js
jl
out
xchg
das
push
pop
fwait
xor
xchg
cmp
insb
jns
mov
push
mov
je
cli
xchg
inc
sub
insb
pushf
fistps
push
mov
clc
mov
mov
cmp
push
push
jmp
leave
leave
add
or
lcall
adc
xor
sahf
dec
mov
push
push
or
arpl
add
subb
cmp
stos
push
incb
cmp
cmc
push
sbb
sar
jge
inc
push
and
imul
sbb
std
pop
cmp
test
pop
push
lahf
icebp
mov
add
xor
insb
jp
lods
fbstp
inc
dec
adc
ljmp
push
sub
xchg
xchg
lahf
xchg
push
cmp
add
mov
outsl
mov
test
dec
mov
les
jge
mov
cmpsb
pop
jmp
out
cmp
xchg
mov
push
loop
int3
cmp
mov
int3
or
scas
mov
fucom
mov
fildll
mov
fs
cs
xchg
mov
daa
cmpsb
mov
pop
add
dec
adc
cmpsl
les
xor
out
test
fiadds
je
adc
loope
nop
and
jne
in
inc
loop
in
mov
lcall
cmpsl
test
dec
rcrb
pushl
adc
sbb
xchg
or
pop
sub
jle
pop
movsb
mov
sub
loopne
fmull
push
mov
adc
aad
and
sub
push
imul
std
adc
lret
and
pop
popa
in
add
and
cltd
test
cs
mov
nop
loope
push
aam
jg
cmp
loopne
fst
and
push
repz
dec
jo
fadds
or
jns
push
fcmovnbe
push
inc
xchg
xchg
mov
imul
pop
mov
sarb
mov
push
lsl
jne
xor
mov
mov
rclb
dec
pop
aad
mov
push
repz
mov
cltd
ja
out
adc
inc
adc
push
and
sbb
push
xchg
loopne
arpl
mov
xor
sub
push
mov
mov
fs
or
adc
sarb
jp
repz
lock
push
mov
test
adc
out
or
iret
lock
mov
subb
adc
jmp
ficoms
sub
cli
cmp
add
ss
fistpll
insb
xchg
xchg
adc
fsubs
pop
lods
hlt
sub
outsl
loop
push
mov
mov
orb
arpl
fisttps
dec
sbb
scas
or
cmp
adc
ja
test
in
dec
and
mov
loop
ss
lock
shlb
and
cli
jg,pn
dec
sbb
xlat
sub
cmpsb
push
movsl
pop
cmp
cltd
push
gs
sub
lahf
cmp
sub
push
jnp
rol
push
mov
movsl
xchg
arpl
xlat
mov
xor
pop
addl
cli
or
and
pop
mov
bnd
leave
mov
jo
push
jp
repz
hlt
push
sub
fwait
sub
das
insb
and
mov
jp
mov
and
dec
jb
mov
ljmp
in
lahf
clc
sub
insb
cmpsb
scas
xchg
sbb
mov
outsl
mov
icebp
xchg
jp
add
mov
test
lds
xchg
mov
aam
insl
hlt
negl
mov
aad
insl
xlat
inc
add
xor
jecxz
aam
jne
sub
in
xchg
push
cmp
addl
das
jae
je
add
add
daa
jle
outsb
push
cltd
sbb
pop
jmp
cs
mov
push
jl
imul
lcall
aam
dec
pop
repnz
sub
addl
mov
jecxz
and
or
je
imul
jp
stos
out
shrb
pop
jmp
test
test
pop
lods
xor
mov
cmpsb
xor
dec
mov
nop
int3
mov
sbbb
ja
and
sbb
sub
in
test
jne
cmc
xor
ss
mov
call
mov
mov
mov
jne
cli
add
sub
test
test
sub
je
arpl
lcall
sti
lock
or
mov
mov
shll
xchg
push
jmp
adc
cs
cmp
sbb
pop
push
pop
pushf
dec
test
pop
in
xchg
dec
jae
fcoms
scas
jno
jbe
insb
push
adc
popf
xor
out
jg
je
push
dec
and
mov
mov
decb
jp
xchg
mov
mov
les
into
fwait
dec
xor
frstor
pop
dec
cmp
rclb
push
push
aad
outsb
js
fistpll
cmp
jg
ss
xchg
pop
fwait
out
pop
pusha
and
bound
out
in
push
popa
negl
roll
imul
mov
add
xchg
mov
stos
je
pop
lds
loop
cmp
fidivl
nop
in
xorb
loopne
mov
scas
mov
ljmp
cmp
mov
xchg
rcrl
pop
insl
xchg
inc
inc
mov
fisttpll
sarl
inc
mov
jns
mov
jns
dec
incb
fwait
xorl
rolb
dec
push
dec
mov
out
or
cmpsl
das
pop
fbstp
inc
insl
push
dec
ficoms
iret
filds
push
or
incl
xorl
movsb
ljmp
dec
lock
xchg
push
clc
ss
mov
cmp
jne
sbb
cmpsl
pop
pop
mov
xor
test
ret
push
adc
jbe
lea
xchg
mov
sub
add
dec
push
jge
inc
out
cmc
jns
into
or
xor
or
add
adc
inc
test
loope
jle
cmc
push
pop
jl
push
and
js
aad
push
lods
mov
jmp
sub
shlb
in
movsl
sub
mov
xchg
mov
jg
mov
outsb
aas
jg
test
shl
mov
mov
cmpsl
daa
jp
push
sub
mov
out
sub
orb
xchg
jbe
mov
pop
movsb
xchg
inc
xchg
jo
cmp
aad
and
fmull
mov
popf
cmp
and
xor
fstpl
out
xor
ja
lods
or
jmp
push
xor
or
mov
insb
sub
inc
scas
adc
and
cwtl
outsb
les
fsubl
popa
mov
packsswb
adc
outsl
mov
xchg
mov
sahf
cmp
into
mov
ficomps
jmp
insl
pop
mov
jb
xor
loopne
fwait
rdpmc
outsl
inc
imul
mov
leave
insl
fimull
sub
push
push
mov
add
inc
pop
jle
aad
cwtl
mov
jno
ljmp
xor
add
adc
into
scas
sahf
adc
test
fcomps
mov
aad
sbb
xchg
or
ja
and
xchg
adc
add
xchg
xchg
lock
popa
and
add
loopne
and
loopne
xchg
push
jnp
fistps
std
movb
xchg
divl
mov
xchg
nop
mov
dec
les
mov
fsubl
in
andl
cld
fwait
push
adc
jle
mov
addr16
mov
pushf
imul
dec
nop
or
cmp
aaa
les
shrl
stc
adc
out
test
scas
mov
shl
pushf
cld
sbb
addl
lret
sbb
add
push
mov
xor
inc
int3
and
mov
call
xchg
pusha
aas
ror
test
aad
shrl
or
stc
jno
aad
adc
push
enter
pop
xor
into
outsb
fists
mov
cmpsl
mov
mov
clc
fsubrs
sbbb
jle
ja
pop
mov
dec
push
adc
popa
shl
lea
add
mov
jg
jecxz
mov
inc
mov
dec
add
jne
xor
mov
pop
loop
sub
sbb
test
dec
pop
and
lret
xor
push
inc
xchg
push
lods
sub
xchg
sbb
std
negl
orl
cmp
xchg
and
shlb
aam
aad
ja
pop
dec
cld
rclb
data16
scas
into
cmp
test
movsl
call
pop
rolb
iret
xchg
pop
xor
data16
in
stc
push
or
fmuls
es
rcrb
mov
mov
fimull
stos
clc
pusha
xchg
cwtl
cli
or
pop
push
rol
mov
mov
xchg
mov
push
loopne
adc
add
dec
mov
addr16
out
dec
lock
sub
jb
pop
pushf
out
jnp
stos
hlt
je
mov
cli
push
sbb
aam
pop
hlt
push
std
enter
out
cmp
mov
lahf
xor
mov
mov
xchg
push
cld
movsl
mov
jo
movsb
sbb
jle
daa
leave
mov
rolb
jnp
mov
lods
lahf
les
bound
cmpsl
push
mov
cmp
and
lahf
push
in
sbb
dec
inc
mov
daa
shll
data16
mov
lret
or
mov
or
mov
xchg
mov
fwait
inc
fildl
or
fldt
mov
xor
mov
cwtl
cmp
jg
flds
js
dec
divb
stc
es
inc
fs
into
enter
int
pop
cmp
je
mov
lcall
sbb
jnp
imul
fdivrl
cmc
ret
or
mov
lea
and
rclb
pop
fcmovnbe
xchg
pinsrw
pushf
dec
arpl
ret
xchg
adc
jecxz
push
sub
icebp
mov
jae
adc
mov
push
push
scas
push
or
mulb
mov
push
mov
adc
dec
mov
jb
add
movsb
push
lret
xchg
lcall
lds
add
mov
loope
ror
out
ret
aad
xor
push
icebp
test
sub
cmpsl
pop
cmp
iret
pop
into
push
bound
shl
movsb
inc
inc
xchg
mov
pusha
inc
push
in
stos
mov
mov
xrelease
mov
cmp
lods
lahf
mov
xor
xchg
or
lods
jp
add
mov
add
sbb
test
popl
and
popa
xor
loopne
mov
pop
mov
pop
inc
dec
dec
adc
and
test
test
inc
pop
jo
test
push
dec
jge
inc
stos
push
nop
inc
rorb
and
jae
movsb
popf
fwait
jl
push
dec
sub
enter
jo
popf
fstl
icebp
aaa
mov
adc
mov
lods
mov
and
scas
jmp
les
adcl
aaa
out
sti
adc
mov
movsl
add
sbb
xchg
stos
ds
pop
les
pop
mov
dec
jp
mov
inc
mov
loopne
pusha
pop
ljmp
or
stc
das
sub
push
lods
and
sti
cmp
enter
leave
scas
ds
jne
jo
pop
push
mov
push
xor
mov
mov
test
add
call
out
push
stos
mov
sub
xor
sub
cmc
adc
push
jge
shll
jb
mov
push
hlt
lahf
push
arpl
out
jae
jb
cmpsb
loope
cmpsl
aad
jp
ljmp
sbb
insb
jge
sub
cmp
mov
cmp
lcall
fldt
dec
sbb
cmpsw
lods
push
mov
pop
adc
mov
fdivrl
sub
dec
das
pop
test
pop
lods
push
test
fcomps
into
add
aaa
inc
pop
inc
mov
mov
cwtl
fisubrs
mov
mov
adc
ja
push
adc
scas
mov
xchg
pop
sub
xor
mov
pop
scas
xchg
movsl
and
mov
sbb
pop
testl
fwait
in
mov
adc
push
pushf
xchg
push
test
jmp
in
in
lret
mov
pop
pop
inc
aad
pop
cmp
pop
cwtl
mov
imulb
je
js
jge
loop
pop
pop
outsl
mov
jo
mov
nop
jecxz
outsl
add
sbb
outsl
jg
imulb
cmp
cltd
jle
fcoml
jne
pushf
scas
xor
call
cmp
fadd
adc
xchg
pushf
loopne
sub
notl
stos
out
pop
sub
rclb
es
loope
test
ljmp
test
push
scas
popf
or
mov
in
cltd
push
scas
adc
ss
stos
cmp
mov
lds
mov
push
fdivr
and
dec
insb
dec
or
xchg
xchg
xor
mov
pop
out
lret
ret
stos
jecxz
in
xchg
and
fcomps
out
fbld
popf
dec
push
out
int3
out
bound
mov
sub
lret
cmp
push
xor
notl
out
clc
dec
lret
ftst
or
cmp
jae
push
push
jge
fcomps
inc
lods
aam
dec
out
shl
int
aaa
cltd
xorb
ljmp
add
push
ret
mov
test
mov
cmp
cmpsb
out
test
daa
push
push
inc
mov
pop
stc
mov
inc
xor
mov
push
adc
stos
pop
adc
test
pop
testb
sahf
pop
rorb
jno
xor
inc
sahf
test
pop
test
mov
xchg
iret
or
push
mov
pop
push
lods
out
ret
les
adc
aaa
lcall
lret
cmc
lods
push
inc
aad
call
inc
sbb
addr16
and
mov
enter
ficoms
xor
cmp
add
jmp
push
nop
nop
movsb
enter
xor
mov
cli
xchg
scas
jbe
scas
dec
ljmp
es
icebp
sub
add
cli
jns
lahf
ret
lret
stc
jge
xchg
mov
xor
loopne
jl
xchg
icebp
sahf
inc
or
stc
cmp
push
mov
push
out
and
iret
lods
popf
adc
xlat
popf
ucomiss
leave
out
or
xor
stos
add
movsb
mov
inc
dec
int
and
cltd
pop
inc
pop
push
inc
lea
xor
loop
jnp
jae
idivl
into
mov
imul
jnp
pop
or
loope
lea
mov
xor
sub
cld
mov
mov
or
mov
imul
xchg
mov
scas
add
pop
cmp
sbb
into
and
mov
dec
pop
pop
jnp
das
jmp
sbb
out
xchg
cwtl
leave
test
and
and
pop
xchg
pop
cwtl
dec
cmc
outsb
imul
scas
icebp
adc
jns
movsb
cltd
push
shrl
ret
xor
iret
sbb
xor
ja
int3
out
inc
test
xchg
ja
addb
roll
jecxz
andl
mov
rclb
mov
jo
push
fcmovbe
push
ds
cmp
subl
in
bound
cmpl
add
loopne
add
pop
sub
div
jle
pop
xor
jno
cmp
mov
jb
mov
in
pop
sub
dec
dec
and
jno
xor
mov
mov
dec
mov
cmpl
push
bound
and
jno
addr16
cld
shrb
push
sub
jbe
xchg
dec
stc
fwait
sbb
lds
sub
cmpsl
add
xchg
sub
outsb
loop
ret
fucom
mov
pop
dec
inc
sbb
and
iret
aaa
and
lret
xchg
inc
call
inc
dec
and
insl
dec
dec
adc
mov
push
inc
cld
sbb
push
add
mov
jo
fs
adc
imul
mov
mov
repz
and
test
pop
pushl
dec
in
ljmp
sbb
lods
jcxz
and
lods
in
xchg
jns
mov
mov
push
repnz
js
stc
add
mov
hlt
cmp
mov
lahf
and
loop
cmp
adc
gs
lret
movsl
outsb
inc
hlt
js
into
or
out
xlat
xor
imul
dec
jl
divl
ds
lock
pop
mov
add
sub
pop
sahf
insl
popl
ss
mov
adc
push
or
pop
push
lea
xor
xchg
orl
movsb
and
cmpsl
sbb
movsb
repnz
scas
test
mov
fdivrs
mov
xor
fisubs
sahf
out
mov
imul
lret
jp
sbb
xor
dec
out
and
arpl
stos
jno
xor
in
mov
loopne
sub
jno
inc
cltd
loope
mov
insl
loop
in
push
loop
popa
jae
mov
ss
dec
aas
das
notl
popf
stos
imul
test
push
cmpsl
mov
mov
mov
xchg
adc
cmpsl
sub
pop
xor
incb
push
ficoms
push
adc
sub
lods
adc
xor
sbb
out
jg
sbb
lock
fcoml
cmp
xchg
cli
mov
and
lea
ret
xchg
mov
mov
outsb
or
sbb
popa
inc
inc
mov
mov
lods
ja
inc
into
mov
icebp
inc
xchg
sub
in
dec
jmp
add
or
pusha
jge
ljmp
mov
fisubs
daa
jns
inc
gs
cmp
aam
icebp
mov
movsl
aad
xchg
faddp
mov
popa
mov
push
inc
sahf
loop
in
mov
sahf
cmp
mov
rorl
cli
pop
adc
testb
mov
pop
ds
cmp
fisubs
mov
mov
fs
mov
jb
cmp
inc
popf
rcr
mov
xchg
xchg
jnp
into
push
fcoml
fwait
jae
mov
xchg
add
mov
adc
adc
xchg
popw
and
sub
inc
jbe
xchg
jnp
cmp
or
and
mov
popf
push
cmp
fs
int
les
push
xor
mov
inc
cmpb
mov
xor
nop
in
mov
cmc
nop
mov
xor
mov
fsts
xchg
in
movsb
pop
jmp
imul
sub
lahf
inc
xor
pushl
outsb
fimuls
add
add
mov
sbb
outsl
mov
mov
pop
mov
jae
jmp
imul
push
xor
bound
in
adc
lea
mov
ja,pt
push
fs
js
into
int3
xchg
les
jne
cmp
or
data16
hlt
mov
dec
add
mov
sbb
aad
hlt
add
jle
mov
fldt
stc
aaa
sbb
lahf
mov
pop
add
cmp
in
and
or
stc
xchg
stos
loop
sbb
jecxz
mov
push
shll
xchg
mov
jbe
pop
es
popa
scas
adc
dec
sbb
ret
pop
cwtl
jne
mov
sub
leave
or
loopne
xor
inc
xchg
inc
scas
fs
push
push
jmp
sti
gs
cmc
lahf
gs
cwtl
and
add
scas
adc
mov
hlt
mov
ljmp
mov
test
or
mov
jne
sub
mov
inc
push
xor
dec
jns
lds
xchg
xor
inc
xlat
cltd
cmp
arpl
cmp
cltd
lods
cmpsl
cmpsl
push
adc
dec
imul
lret
mov
sbb
inc
stos
mov
cmc
ds
inc
hlt
dec
adc
mov
hlt
mov
ret
add
rcr
in
test
mov
jge
mov
jp
mov
fdivrp
loopne
inc
and
jecxz
dec
xchg
xchg
xor
add
cli
mov
iret
cmp
sbb
aas
imul
jb
lcall
sbb
adc
aad
rclb
pushf
add
jne
loop
sub
adc
dec
add
test
aad
je
les
rcrb
adc
or
movsb
rcr
fsub
pop
in
lods
pop
xor
mov
pop
cmp
xchg
push
xchg
int3
test
clc
loop
pusha
and
fbld
push
xor
icebp
scas
lret
gs
cmpsl
xor
dec
cmp
lret
mov
bound
jbe
ret
pushf
cmpsb
stos
sbb
mov
jg
inc
mov
test
push
pushf
push
int3
dec
sbb
pop
mov
mov
or
push
add
test
cmp
addr16
cmp
adc
out
testl
add
push
mov
inc
in
jmp
repz
pusha
jb
dec
mov
push
xchg
xor
jmp
mov
mov
popf
frstor
xchg
iret
xchg
roll
nop
std
inc
cmp
and
cmp
or
mov
sbb
sbb
ds
shrb
inc
dec
pop
cltd
inc
inc
nop
add
xchg
mov
cmpsl
fidivl
int
jo
jnp
in
xor
sub
stos
add
jae
imull
cmp
xchg
dec
adc
repnz
lahf
ja
pushf
inc
xchg
push
add
push
cli
or
ljmp
xor
inc
cmpsb
fildll
ja
jb
inc
xchg
and
push
arpl
movsl
cmp
mov
jb
jg
pop
mov
decb
dec
lock
push
mov
inc
insl
cmp
xor
mov
xchg
push
inc
cmpsl
paddb
test
or
push
mov
jmp
ficoml
and
dec
jmp
mov
and
push
and
popa
repnz
daa
mov
test
and
sub
or
movsl
adc
push
jl
sub
loop
add
mov
scas
lcall
enter
clc
jo
icebp
je
call
incl
adc
jg
jecxz
push
mov
cld
jno
push
and
nop
aad
xchg
mov
lods
adc
aas
add
out
lods
push
gs
inc
bound
jno
and
aam
inc
xor
es
mov
daa
mov
outsl
nop
sahf
sbb
mov
test
cmc
sti
popa
scas
clc
out
add
adc
inc
sti
jmp
movsl
test
dec
mov
jb
daa
shl
or
and
pop
sub
add
ds
iret
bnd
sbb
or
push
roll
sub
xor
sbb
loopne
pushf
mov
add
mov
rolb
push
jnp
add
mov
sub
ljmp
gs
push
add
orb
out
iret
xor
inc
cs
dec
movsb
sbb
stos
fldenv
xchg
out
pop
inc
dec
fiadds
in
aad
lahf
ret
std
jecxz
cmp
sbb
fldl
ss
push
in
lds
sbb
je
xchg
outsl
sbb
daa
out
bound
cs
es
push
mov
imul
mov
lret
dec
inc
loop
cwtl
ret
and
pop
ja
add
cmc
mov
sub
imul
mov
dec
pop
adc
mov
in
jnp
imul
pop
push
pop
sbb
fwait
nop
outsb
out
out
adc
mov
orl
sti
outsl
cmp
jg
pop
jp
faddl
cmp
fildl
adc
add
cmpl
inc
out
aaa
int3
add
sub
sbb
cmp
mov
les
call
push
add
or
loopne
cmpsb
xchg
sti
mov
gs
xchg
lea
jo
ret
dec
sbbb
nop
push
leave
xor
push
rolb
leave
xchg
insl
in
push
pop
stos
mov
inc
mov
cmp
xor
jp
or
hlt
test
mov
xor
add
sub
push
adc
sar
xor
ret
leave
pop
lds
sarb
sbb
pop
lods
jle
jae
mov
dec
fwait
lahf
pop
xor
pop
jns
test
cmp
push
addr16
adc
pusha
push
fstl
dec
and
or
ret
mov
mov
repz
xor
xchg
pop
mov
rol
pmulhw
push
sbb
orl
cltd
pop
data16
orb
inc
cli
lock
sti
cld
lods
pop
jns
mov
pop
mov
cvtps2pd
xor
ret
loop
or
imul
lret
add
or
test
test
orb
loopne
mov
xrelease
popf
rcrl
popf
mov
mov
adc
add
add
push
jp
negb
dec
and
std
icebp
test
or
cmp
or
cmp
fisttps
jo
ret
sub
add
mov
and
in
push
fwait
jb
dec
pop
push
ret
mov
mov
or
aad
xor
loop
jbe
push
xlat
bnd
mov
adc
and
inc
mov
out
pop
inc
ss
xchg
dec
out
fstp
adcb
cmc
sbb
cli
shlb
iret
mov
gs
jg
in
mov
loop
pop
sub
es
mov
stc
mov
repnz
or
lcall
inc
mov
push
mov
mov
dec
mov
mov
inc
fistpll
inc
inc
test
in
push
mov
adc
mov
pushf
icebp
addr16
adc
idiv
cmpsl
or
or
push
decl
xor
arpl
push
mov
cmp
pop
jg
adc
mov
xor
and
arpl
jb
shl
cmp
inc
inc
outsb
rorl
clc
mov
movsl
mov
lahf
fcmovu
decl
push
inc
pop
out
push
or
mov
call
outsl
pop
mov
cmp
and
add
fnstcw
dec
out
ret
and
push
xor
and
mov
mov
movb
mov
fisttpll
mov
cmpsl
cmp
xchg
xor
scas
hlt
jno
cmpsb
xor
imul
cs
push
lods
enter
sub
xchg
pop
mov
icebp
stos
jo
jae
addr16
pusha
sub
or
pop
cli
test
sbb
pop
mov
adc
scas
into
fldenv
xor
hlt
lret
ljmp
andl
popf
cmp
or
es
xor
push
inc
cmp
fcmovb
cli
stos
dec
cmp
mov
fsubl
adc
cmpsl
ret
xchg
adc
mov
lods
push
jecxz
xor
sub
mov
pop
or
mov
or
cwtl
push
xchg
pop
cmp
adc
mov
push
push
mov
cmp
dec
cmc
add
xor
push
shlb
icebp
insl
inc
push
xchg
pop
ja
rol
movsb
in
or
jno
outsl
fs
xlat
pop
inc
ret
push
int3
nop
jg
frstor
push
in
xor
outsl
xchg
daa
mov
pop
inc
sti
dec
xchg
sbb
lcall
pop
cmpsb
cmp
dec
xor
push
xchg
mov
repz
jae
jle
fdivl
inc
inc
mov
mov
cmp
push
jecxz
cmp
or
rclb
cltd
arpl
insb
xor
lea
mov
fstl
pop
lcall
or
ret
mov
push
mov
das
push
mov
enter
push
xchg
scas
or
je
mov
dec
or
xchg
mov
sbb
sbb
hlt
xor
xchg
cmp
dec
stc
shll
cmp
popa
icebp
call
ljmp
jbe
mov
movsb
dec
lock
movsb
xorb
adc
push
xchg
push
push
xor
pop
push
sub
mov
ret
andb
jnp
in
notl
mov
ja
sti
in
xchg
xchg
lcall
mov
andb
adc
subl
in
mov
pop
repz
lds
jmp
clc
stos
jo
out
mov
cmp
sarb
cmp
loop
pop
xchg
negl
in
xchg
or
loop
loope
pop
inc
cmp
push
stc
adc
fmull
int
fs
movsl
lods
jnp
fs
bound
mov
sub
lcall
stos
movsb
push
int
addr16
mov
pop
xchg
sub
gs
mov
push
out
adc
sbb
aaa
test
or
movaps
or
jl
xor
loopne
xor
xor
add
sub
enter
sub
jle
and
out
outsb
sub
jecxz,pn
dec
push
mov
xorl
sbb
jae
xor
popf
std
inc
pop
fstl
cmpw
and
je
push
pop
or
xchg
gs
repz
lret
push
add
mov
fstpt
mov
adc
sar
push
push
ret
in
out
xchg
imul
push
pop
xchg
int
stc
cmp
mov
sbb
pop
stos
pusha
pop
pop
xchg
movl
sti
pop
pop
outsb
test
scas
add
popf
inc
jmp
orl
cmp
inc
and
pop
xchg
mov
jge
inc
sbb
outsb
arpl
jle
ret
test
cmpl
add
cmp
xchg
jb
lcall
pop
inc
in
ja
mov
fistpll
jmp
push
push
mov
inc
shl
out
mov
aas
and
cmp
sbb
fsubrl
dec
shrl
add
inc
cmpl
pop
mov
mov
mov
adc
popa
push
sub
jecxz
stos
push
lahf
adc
xchg
cmpsb
xor
dec
jae
andl
lock
insl
jmp
in
or
ficompl
mov
jl
inc
jo
push
negl
rolb
mov
adc
xchg
cmp
jle
cmp
dec
mov
jle
mov
pop
pop
and
jb
pop
mov
mov
in
bnd
fisttps
fsubrl
sbb
pop
lods
or
bound
in
mov
mov
push
nop
jns
roll
clc
mov
lods
push
jp
jae
adc
jmp
add
xchg
movsl
mov
jns
in
rclb
add
fs
addl
call
insl
loopne
nop
jno
sub
inc
push
mov
jns
pop
in
addr16
adc
sub
sti
mov
xchg
insl
movsb
icebp
mov
mov
aam
and
rclb
pop
loope
lds
cmp
inc
mov
icebp
cmp
add
or
scas
pop
add
outsb
or
rolb
cld
mov
ret
mov
push
jae
inc
mov
mov
in
or
and
scas
mov
cmc
mov
push
mov
fisubs
or
in
jne
scas
sbb
fimuls
cs
xchg
pop
out
fs
test
push
jmp
sti
stos
cwtl
idivb
push
or
aam
out
inc
or
and
xor
xor
inc
gs
jne
mov
xor
sbb
cli
mov
int
cmp
xor
stos
test
sarb
sbb
cmp
sbb
ret
sub
mov
mov
in
rorb
cli
lods
xchg
mov
xchg
repz
repnz
pop
ds
insl
sahf
insl
adc
cmc
sbb
mov
hlt
inc
jne
jle
add
sbb
dec
mov
out
jno
push
clc
jne
xlat
push
sti
test
mov
or
mov
sbb
stc
test
dec
xor
daa
push
cwtl
add
sbb
js,pt
test
inc
cmc
roll
inc
hlt
inc
mov
mov
aam
add
add
and
dec
lahf
xor
push
in
test
lock
cmp
or
dec
ds
std
rorb
lods
enter
loope
repnz
popa
popf
loop
popf
in
push
push
adc
mov
clc
mov
mov
push
pop
ret
leave
xchg
test
mov
add
shll
xchg
cmp
mov
jle
and
add
or
in
sbb
popf
or
outsl
bound
cltd
jae
push
xchg
inc
or
fs
mov
push
cli
andb
lds
icebp
fadds
or
or
xchg
and
sub
push
jmp
int
les
push
pop
outsb
sbb
jp
leave
pop
xlat
roll
sbb
mov
shlb
xchg
pushf
and
push
jno
or
fstl
cmpsl
subl
arpl
fistpll
dec
push
out
mov
outsl
pop
jns
mov
inc
jle
rclb
cmp
xor
or
inc
mov
xor
or
lock
adc
enter
shl
mov
jns
inc
setno
ds
insb
dec
jno
mov
data16
jbe
jmp
inc
sub
or
mov
or
pop
jge
cli
pop
pop
mov
bound
lcall
or
xchg
stos
jmp
lret
mov
js
sub
xchg
jne
test
out
int3
push
sbb
inc
and
pop
loop
clc
in
addb
push
sbb
clc
jge
push
xor
or
push
cmpsl
fmuls
outsb
or
cld
xchg
outsl
and
push
loopne
sub
pop
sub
sbb
movsb
es
loop
dec
call
mov
mov
fiadds
lret
sti
fidivrs
pop
mov
pop
mov
les
and
xchg
lahf
std
cmpsl
mov
sub
sbb
mov
fwait
js
xchg
addb
cmp
enter
jp
in
mov
lea
addb
mov
mov
lcall
ficoml
filds
sbb
lods
mov
out
sti
jl
nop
mov
mov
adc
inc
pop
xchg
aas
pop
icebp
or
test
sub
add
xchg
mov
xor
cmpsl
sahf
rclb
jmp
jo
out
scas
push
or
pop
testl
gs
fisttpl
incb
or
cmp
pop
mov
jl
dec
fidivl
cmp
dec
push
outsl
jb
cmc
xchg
iret
pop
addb
inc
shr
mov
mov
int3
ror
add
xorl
or
iret
es
xor
ud1
cwtl
mov
mov
push
fcomi
jp
or
sahf
repz
cmp
into
les
pop
lret
xor
std
aad
jl
nop
push
fisttpl
arpl
testb
addr16
xchg
and
sub
imul
add
push
fidivrl
dec
loope
push
notl
aam
cmp
inc
add
movsb
ret
adc
adc
outsb
mov
xchg
and
pop
inc
and
dec
clc
dec
sub
push
mov
mov
sub
movb
sbb
fs
cld
pushf
lcall
outsl
pop
push
insb
sbb
sub
cmp
std
repnz
fstpt
xor
dec
dec
movsb
mov
mov
icebp
sti
call
into
and
fwait
std
cmp
inc
stc
pushf
pusha
push
gs
leave
sub
ret
mov
popa
mov
subb
pop
cmp
dec
add
cmp
lret
sub
test
or
dec
add
shlb
mov
aad
add
mov
stos
les
aad
xchg
cmpsl
jnp
insl
lods
pushl
sub
mov
pusha
inc
cmp
ret
bound
int
xchg
es
adc
cmp
cld
sbb
shll
xlat
js
mov
out
out
mov
jbe
jmp
pcmpeqw
adc
pop
pop
fdivrl
xchg
and
ss
mov
dec
stos
or
inc
push
pop
cmp
inc
mov
xchg
xor
or
adc
icebp
clc
push
jno
lock
scas
icebp
cmp
lods
pop
inc
or
cmp
xchg
xchg
popl
mov
xchg
adc
ja
cld
or
in
ret
pusha
fiaddl
adc
cltd
scas
sarb
xchg
adc
fisubs
inc
ljmp
test
sarb
clc
pop
repnz
int
inc
mov
push
mov
std
rcll
cmp
add
leave
sahf
xor
pop
xorl
test
out
rcll
fmull
xchg
decl
ljmp
sub
stos
push
xchg
mov
rcrl
add
mov
pop
inc
test
sbb
ret
jmp
mov
or
stc
mov
movsl
imul
jne
stc
xchg
testl
ljmp
std
adc
in
in
sbb
xor
jns
or
pop
mov
movsl
pop
pop
inc
mov
aam
repz
inc
or
cwtl
ljmp
mov
jl
outsb
les
jle
jae
jge
add
push
mov
subb
outsl
xchg
jmp
inc
ss
rcrl
inc
scas
divl
cmp
jecxz
dec
lcall
aam
xchg
stc
jmp
sub
ss
out
or
add
pop
aad
out
push
pusha
pop
sbb
bound
shlb
movsb
imul
movsb
lods
cmpb
sbb
addr16
xchg
ja
cltd
nop
fcoml
mov
pop
mov
mov
stos
mov
mov
cld
out
aas
pop
inc
add
addl
ljmp
mov
fdivs
mov
and
jg
jle
mov
outsb
es
js
add
mov
pop
loop
testl
push
cmp
bound
ljmp
outsl
mov
test
cld
scas
scas
and
mov
aaa
push
ljmp
rorb
inc
jl
sub
jbe
sbb
jns
mov
in
jmp
lock
fisttpl
pop
and
adc
mov
add
xor
fs
movsb
aaa
add
das
rcrb
fisubrl
das
pop
sbb
outsb
lods
fwait
xor
cltd
jbe
jl
in
sbb
mov
call
pop
inc
dec
addr16
pop
sbb
outsb
mov
enter
aaa
sub
adc
hlt
cmp
outsl
xchg
xchg
or
mov
dec
mov
xchg
pop
lret
ja
mov
push
mov
push
jae
or
jmp
test
fisubs
iret
xor
leave
test
push
push
fisubrl
fistpll
xchg
lret
and
in
dec
push
mov
mov
pop
cmp
mov
sub
scas
in
inc
cmpsw
pop
cmp
add
pusha
lds
add
push
out
mov
push
sbb
pop
iret
shrb
imul
pop
adc
mov
mov
cmp
xchg
mov
cld
ljmp
inc
mov
std
shl
push
jb
cs
hlt
sub
orl
jne
push
das
jg
pop
adc
add
loop
sbb
orl
in
or
push
pop
mov
mov
xchg
xor
jne
and
sahf
imul
mov
andl
sarl
lret
jge
add
cwtl
jbe
scas
xchg
jmp
sub
andl
xor
xorb
andl
push
mov
inc
or
and
bswap
push
push
negb
xor
xchg
cld
cmp
std
mov
outsb
into
add
cmp
ss
in
push
sahf
loope
add
jl
or
mov
dec
cli
xor
lret
or
out
dec
or
mov
pop
lods
sar
xchg
adc
adc
fcmove
add
sub
mov
sbb
jns
int3
adc
lret
imul
mov
jmp
mov
mov
mov
jae
mov
inc
idivb
imul
pop
dec
dec
lahf
inc
xor
pop
and
push
std
divb
adc
mov
pop
ret
sub
nop
out
and
ljmp
aaa
push
jb
jmp
mov
mov
imul
jle
ljmp
inc
insb
das
sub
push
jmp
outsb
cli
and
movsbl
lcall
aas
mov
push
cli
nop
fmul
daa
or
pop
xchg
pop
push
xchg
add
mov
dec
mov
mov
iret
dec
inc
sbb
repnz
clc
mov
rorb
adc
mov
lcall
jmp
jae
out
inc
andl
push
mov
in
clc
push
insl
std
jl
lret
push
cltd
jns
cli
mov
mov
fidivs
je
adc
push
insb
aas
sbb
mov
cmp
dec
mov
gs
sbb
mov
mov
cmp
ret
mov
pop
into
jnp
mov
inc
cmp
rorb
das
sahf
sbb
sbb
adc
test
dec
mov
mov
shlb
sbb
out
mov
out
jl
inc
fdivr
xor
and
cld
mov
data16
inc
inc
cmp
xchg
ret
mov
push
mov
dec
imul
scas
sbb
lahf
outsb
icebp
rorb
cmp
out
inc
xlat
pop
shll
loope
mov
mov
add
dec
add
xorl
ljmp
fsubrp
pop
testb
hlt
cmp
fnsave
clc
mov
pop
fisttps
add
pop
dec
push
lock
xchg
mov
xchg
push
push
sbb
stc
cmp
idivb
mov
cwtl
dec
push
ljmp
inc
cltd
xor
jg
mov
cli
xchg
adc
sbb
iret
int
scas
imul
leave
mov
mov
and
inc
mov
les
lahf
orb
xchg
lods
xchg
pop
mov
int3
fldl2t
mov
mov
inc
add
shlb
xlat
repnz
push
sbb
je
hlt
inc
jmp
cmp
pop
inc
or
mov
push
int3
cmp
sahf
jns
sbbl
psadbw
stos
lcall
in
mov
add
sbb
gs
mov
insl
cmpsb
cmp
fiaddl
in
sbb
mov
out
xchg
pop
or
push
out
sub
dec
mov
cmc
mov
pop
sub
pop
push
push
clc
fcom
mov
lock
fisttpl
mov
roll
xchg
mov
sub
test
mov
and
iret
cmp
stc
mov
pop
clc
ret
adc
imul
out
loop
push
in
dec
lahf
adc
adc
xchg
out
mov
inc
mov
mov
mov
mov
pop
or
loope
imul
cli
inc
xchg
adcb
iret
sbbb
push
mov
std
in
das
push
pusha
loopne
cmp
mov
adc
je
adc
mov
pop
mov
sbb
push
rcll
dec
cmp
xchg
mov
jb
cltd
out
rclb
jle
lods
adc
cmc
sub
add
sub
and
addb
in
adc
lods
mov
mov
add
orb
cmp
cmp
dec
inc
lock
jle
lcall
adc
repnz
stos
test
imulb
test
and
dec
mov
ds
repnz
sarb
mov
and
insl
cltd
or
or
mov
mov
dec
sub
sbb
imul
push
inc
jns
mov
out
inc
add
fs
add
dec
xchg
inc
inc
mov
cmp
popf
add
imul
popf
push
push
iret
inc
mov
mov
incb
sbb
dec
inc
mov
pop
hlt
addb
dec
sub
push
mov
or
sub
mov
ljmp
hlt
push
push
cld
add
cmpsl
repz
xor
lods
addr16
xchg
lcall
jmp
jg
call
xor
subb
jmp
pop
jno
daa
adc
fiaddl
out
stos
inc
adc
int
or
or
fildl
insl
push
stos
mov
mov
fildll
mov
test
jae
stos
les
nop
rep
je
test
pushw
xlat
lods
inc
mov
cwtl
pop
and
push
outsl
xlat
insb
xchg
icebp
jbe
jno
sbb
repnz
stos
aas
cmp
cmc
pop
outsb
adc
push
movsb
fdivl
outsl
and
jnp
movsl
jae
xchg
aam
push
pop
adc
or
or
push
out
test
xchg
movsl
xchg
cmp
push
mov
das
jge
loope
cs
imul
arpl
pop
pop
mov
dec
adcl
shl
in
sub
mov
inc
and
sbb
inc
out
sbb
loope
lret
or
or
test
jo
fistl
cld
shr
aas
mov
xchg
dec
lret
push
rorl
aam
testb
popa
lret
push
push
mov
popa
push
sbb
es
mov
push
aad
popa
addl
movsl
in
xor
dec
aam
jb
outsl
mov
mov
adc
push
out
lock
cmp
loopne
fs
rcrl
mov
fs
mov
push
sub
std
xchg
xor
cld
and
out
lret
daa
fsubrs
inc
dec
call
add
lret
and
cwtl
cmpsl
cmpsb
push
push
sbb
ficoml
mov
lods
cmpsb
jo
dec
add
sub
int3
das
inc
dec
mov
icebp
shll
cmp
enter
fadds
push
test
fstl
imul
cmp
add
inc
pushf
sbb
divb
fchs
cmc
ja
rol
xchg
faddl
rorb
fcoms
jecxz
les
add
jl
mov
push
push
mov
pop
clc
and
xchg
movsb
adc
push
jns
lret
cmpsl
mov
jecxz
add
jecxz
mov
adc
adc
or
fcmovbe
in
jl
push
mov
lods
add
es
stos
outsl
inc
fwait
ds
idiv
xchg
xor
dec
pop
orl
setl
in
ss
flds
xlat
gs
cmp
aas
cmp
ds
js
dec
lcall
repnz
xchg
xorl
ds
rorb
mulb
call
mov
div
lds
jae
fiaddl
gs
xchg
xchg
fldcw
pop
rorb
mov
pushf
test
pop
xor
cmp
mov
push
inc
fidivs
aam
loope
adcb
sbb
fwait
mov
loope
pop
mov
bswap
out
mov
jl
sub
xor
out
xor
jne
push
in
dec
pop
test
ja
xlat
mov
mov
jns
push
test
mov
aad
neg
sbb
lret
xor
mov
not
sbb
mov
add
sub
cwtl
insb
xor
int3
sub
enter
mov
mov
nop
push
testb
stos
sbb
loopne
bts
dec
mov
lds
ljmp
in
mov
and
adc
iret
std
fldt
sub
std
lods
sbb
sahf
add
jle
cmc
repz
sub
cmp
xchg
bound
in
es
xchg
dec
lea
in
mov
dec
addb
test
jns
fs
ret
mov
outsb
jmp
add
mov
jns
shll
mov
sarb
in
jecxz
push
inc
mov
mov
idivl
lods
in
cmp
sahf
test
inc
pushf
adc
adc
sar
fs
ficompl
out
repz
loopne
or
pusha
pop
jnp
mov
mov
lcall
lea
and
stc
mov
cli
insb
ja
ret
pop
pop
cld
cwtl
leave
in
pop
dec
mov
das
sbb
cmpsl
scas
jle
cmpsl
xor
orb
pop
fucomp
xchg
jle
xor
ds
add
dec
loop
ror
rclb
adc
sti
pop
xchg
dec
sbb
push
iret
les
test
mov
js
inc
sbb
cmp
push
loopne
mov
jmp
cltd
xor
dec
mov
test
cmp
pop
sub
adc
pop
movl
sub
xor
xchg
xchg
mov
bnd
cs
call
sub
or
lods
inc
pushf
lahf
pop
mov
cmp
xchg
sbb
lods
scas
dec
push
add
loopne
jp
fucomi
jge
push
iret
repz
es
lods
inc
push
cmp
lock
idivb
cltd
lock
mov
clc
out
cmc
and
test
jo
filds
add
mov
mov
and
mov
sub
movsl
lds
pop
sub
ret
cltd
stos
lock
or
xor
cli
pop
xor
nop
pop
pop
fdivp
mov
xor
jp
pop
jg
cmc
sarl
adc
repz
call
and
je
fs
sahf
push
push
stos
std
std
and
lods
and
cmp
cmc
sub
mov
sub
inc
pop
loope
inc
fs
arpl
ret
fiaddl
xor
and
cltd
pop
xchg
xchg
arpl
loop
mov
ret
imul
pushf
jp
mov
mov
mov
jle
addr16
aas
inc
cmpsb
jnp
cld
inc
ret
pop
lcall
rclb
inc
lret
adc
rcrb
pop
add
sub
nop
cltd
orl
mov
ljmp
jle
and
sbb
imul
cmp
or
stos
sahf
in
push
outsb
mov
and
stos
and
add
gs
sub
or
dec
xchg
xchg
sbb
loopne
movsl
and
in
cmc
jo
clc
jmp
scas
cmpsl
add
arpl
mov
or
inc
mov
fsubrl
push
and
stos
cmp
pop
cmp
jb
push
flds
dec
sub
lret
and
dec
push
clc
mov
pop
in
push
pop
pop
out
xchg
inc
movsl
sub
pop
pop
jmp
lods
sbb
cld
call
fistpl
js
adcl
lret
aas
mov
mov
filds
xor
dec
mov
scas
push
je
mov
xchg
push
xor
dec
leave
sti
xchg
aad
jecxz
pop
jno
insb
out
xor
outsl
pop
stos
in
dec
jp
daa
imul
inc
inc
pushf
adc
sub
mov
and
sti
repnz
jp
lock
and
mov
mov
jp
ds
scas
insb
sbb
ss
cs
shll
popa
outsb
dec
push
xor
cltd
push
fistpl
sahf
fnstsw
imul
std
mov
push
sub
lahf
js
int3
push
aam
xor
and
jg
xor
shl
ljmp
jbe
shlb
clc
and
fs
jnp
dec
mov
mov
adc
dec
shll
inc
insl
push
pop
xor
mov
test
lods
pop
push
lahf
fisubrl
dec
aas
popf
jmp
ja
mov
mov
mov
mov
lock
lcall
mov
push
test
mov
adc
inc
test
mov
fcompl
xor
mov
insl
dec
outsb
jl
sub
mov
cld
push
arpl
push
sub
fsts
pop
daa
mov
lcall
rolb
pop
lock
test
xchg
xchg
cltd
jne
or
loop
rol
inc
cmp
mov
add
xchg
fcomps
add
sbb
sub
mov
pop
nop
arpl
mov
imul
add
in
in
stos
arpl
jmp
hlt
sahf
mov
sbb
std
xor
fwait
jae
mov
rcrl
das
jnp
jo
int3
xchg
dec
and
mov
mov
and
pop
das
xchg
ja
daa
jbe
popa
repz
mov
movl
lods
lcall
xchg
adc
dec
xchg
or
cltd
je
cmp
xor
shll
and
jo
dec
std
or
jbe
fucomp
test
movsl
jo
repnz
popfw
orl
or
stos
cmp
outsl
mov
es
cltd
push
jmp
sbb
sub
jmp
dec
jle
cld
imul
int
into
xchg
xchg
into
imul
movsb
xchg
add
dec
or
popa
adc
pushf
mov
ret
lret
xchg
sahf
sub
jmp
sbb
popa
push
mov
adc
cld
fwait
mov
movsl
cmc
repnz
fiaddl
adc
loope
push
jbe
xor
fwait
mov
scas
stos
sub
out
push
jl
in
addr16
in
add
in
shll
xchg
xchg
bt
or
fucomip
stc
popf
cld
enter
bound
out
adc
xchg
pop
adc
mov
lods
roll
jl
imul
sbb
add
push
xorb
sbb
les
cmp
in
or
nop
or
mov
and
into
rcrl
inc
and
sub
out
shl
mov
test
repz
mov
push
lcall
stos
adc
in
into
loope
mov
dec
fldl
push
test
test
cmp
jmp
adc
add
enter
int3
mov
outsl
leave
jo
aad
scas
pop
addr16
bnd
fisttps
adc
call
mov
mov
xlat
cwtl
scas
xabort
cmpsb
mov
les
stos
sub
ret
mov
out
frstor
ljmp
fnsave
ror
jb
and
jl
jg
popf
jl
lea
lahf
xchg
mov
pop
mov
dec
repnz
add
xchg
jl
test
pop
mov
or
loopne
shlb
add
jg
pop
pop
lret
enter
or
int3
pop
lock
js
pop
lcall
dec
shlb
outsb
shl
icebp
and
push
dec
int3
movsb
push
hlt
out
stc
lds
adc
addr16
mov
sahf
pop
push
ja
add
loop
les
lcall
testb
loopne
cmp
sahf
dec
stos
cmp
leave
ljmp
stos
dec
mov
push
lret
xor
inc
arpl
push
pop
fsub
cmpl
xchg
jnp
mov
loop
test
sub
xor
in
mov
cmpsb
loopne
ss
bsr
imul
jbe
xchg
cmp
xchg
sahf
int
xor
into
xchg
jo
int3
pop
loope
push
jo
pushf
aaa
pop
dec
les
aaa
xchg
mov
loopne
mov
mov
aam
pop
mov
repz
xchg
mov
idiv
cmpsb
push
outsl
mov
dec
ds
rorl
scas
lods
mov
sti
push
adc
insl
mov
icebp
xchg
push
jbe
repnz
pop
mov
popf
or
imul
dec
xor
fcomp
push
jne
mov
xchg
int
xor
js
mov
or
inc
or
cmp
aaa
bswap
pop
lea
addb
mov
ja
pop
out
iret
outsl
mov
xchg
lods
xor
inc
cmc
mov
test
mov
pop
xchg
nop
repnz
mov
and
jo
mov
pop
hlt
jno
faddl
push
cmpsb
mov
pusha
dec
sub
and
xchg
xchg
fsubrp
mulb
insl
aas
mov
aad
mov
mov
loop
jle
mov
sub
sar
jns
mov
test
stos
xchg
ret
ds
inc
movsb
das
repnz
mov
pop
movsl
fdivrs
add
mov
mov
movsl
mov
cmpsl
sub
outsb
push
inc
lret
jns
sti
inc
adc
adc
popf
ror
ror
mov
enter
in
ss
push
jecxz
mov
stos
arpl
mov
mov
push
test
mov
and
dec
pop
and
mov
lret
or
inc
adc
xor
roll
call
mov
lods
add
cmp
pop
fstpt
pop
lcall
cmpsl
sbb
mov
add
jne
lods
ror
cld
shrl
mov
rorl
stos
pop
out
js
ret
inc
repz
adc
sti
rorb
dec
cmc
test
sbb
pusha
and
sti
mov
mov
jb
arpl
sub
and
movsb
xor
mov
sub
cmp
cmc
mov
push
ja
scas
imul
scas
aad
stos
imul
daa
fmull
psadbw
lock
pop
nop
out
ret
popf
inc
decl
clc
pusha
cmc
imul
fldenv
mov
das
xchg
lock
je
jnp
iret
mov
mov
fisubrs
jp
jge
pop
pop
aaa
nop
and
aaa
test
dec
into
aaa
imul
je
pop
scas
pop
cli
movsb
push
iret
xchg
sub
stos
rcll
jle
movsl
xchg
inc
fisubrs
and
dec
inc
xchg
inc
adc
stc
fwait
aad
scas
scas
mov
ror
sbb
jecxz
rcl
lock
mov
jl
cmpsl
mov
repz
jg
mov
pushf
mov
arpl
mov
pusha
mov
fnstsw
adc
xor
test
addb
aaa
adc
pop
inc
sbb
mov
push
enter
test
rol
ret
and
sub
pop
into
cmc
xchg
pop
in
sbb
xchg
js
jmp
mov
enter
aad
adc
outsb
scas
lock
repz
int
mov
data16
es
dec
into
repnz
inc
ds
xchg
mov
or
pop
js
jnp
inc
bound
push
les
mov
pusha
insb
mov
mov
js
sbb
loope
aad
xor
xor
sbb
cmp
enter
mov
repz
gs
and
aas
insb
push
pusha
rol
mov
mov
sti
sub
mov
js
sbb
bts
mov
js
sub
pop
mov
push
pop
cld
call
cmp
sbbb
add
sbb
xor
xchg
lahf
inc
jo
and
into
push
int3
int3
and
xchg
xchg
nop
adcl
ja
xchg
push
test
pop
add
enter
repz
icebp
inc
xor
dec
jmp
iret
sbb
mov
ret
lret
rcll
mov
std
pop
push
xor
sub
add
lds
int3
in
mov
mov
addl
pop
xor
pop
imul
loop
fcoml
jno
test
mov
dec
xor
inc
test
sbb
dec
cmp
ljmp
xchg
xchg
nop
pop
shl
xchg
jg
push
inc
adc
mov
aad
jecxz
push
popf
enter
mov
inc
lods
jecxz
and
mov
push
in
cli
mov
stos
in
mov
or
aas
pop
xchg
and
mov
jno
adcl
push
sub
jp
pushf
mov
mov
inc
push
and
int
push
insb
add
fnstenv
mov
addr16
sbb
sbb
movsl
aas
or
jne
dec
push
mov
pop
rcr
mov
es
push
insb
nop
sbb
mov
std
push
cld
into
punpckhdq
adc
fs
arpl
and
test
testl
mov
test
mov
fadds
adc
repz
imull
mov
movsb
cmpsl
aad
pop
js
test
or
sub
mov
push
ljmp
cmp
sub
mov
sub
inc
leave
lcall
cwtl
adc
insl
lret
in
cs
cmc
je
mov
jo
in
pop
mov
stos
hlt
dec
mov
sub
aaa
or
mov
dec
nop
adc
sbb
push
dec
xor
test
shll
pop
or
mov
movl
mov
cmp
cmpb
js
xlat
xor
movsl
mov
push
icebp
filds
jbe
dec
insl
rorl
cli
loopne
sbb
test
arpl
pop
cmp
jge
ja
decl
nop
cmp
sti
and
inc
rcrb
inc
cmp
push
and
adc
lods
xchg
test
pop
or
push
sub
call
jmp
iret
stos
push
aas
dec
jg
xor
pop
cli
and
popl
and
mov
js
scas
push
dec
lcall
jmp
cwtl
adc
adc
xchg
mov
xchg
fstps
inc
dec
mov
movsl
lcall
stc
es
pop
sub
std
mov
adc
push
in
insb
push
ds
inc
mov
out
scas
inc
mov
test
or
imul
das
jae
add
mov
inc
adc
push
push
cmp
mov
pushf
or
rol
cmpsb
xlat
push
adc
cwtl
clc
in
pop
out
sub
pop
lcall
sub
inc
movsb
out
inc
std
push
loopne
mov
lods
inc
popa
pop
out
jbe
mov
insb
pop
mov
mov
push
mov
in
mov
jge
js
popf
adc
add
pop
xor
ret
xchg
in
shrl
pop
pop
jge
and
test
sbbl
lahf
and
cmpsl
pop
mov
imul
sbb
sub
push
into
pop
iret
repnz
out
mov
push
fcomps
push
sbb
or
out
inc
xchg
push
es
aas
mov
fs
pop
cld
pop
adc
lea
fcomps
jae
repnz
subb
es
dec
cmpsl
adc
movsb
xchg
int3
and
scas
lret
xorb
and
mov
and
mov
inc
rclb
pop
dec
mov
xor
fldcw
jl
xchg
out
jbe
fists
insl
aad
pop
jb
mov
sbb
lds
sub
push
inc
mov
dec
subb
ja
mov
mov
sbb
xor
mov
push
fisubrl
subb
xchg
imul
add
adc
xchg
cmp
mov
rorl
push
cmpsb
test
and
mov
mov
out
mov
ficomps
sub
sub
ret
cwtl
jge
aam
fstp
add
push
insl
dec
cld
pop
inc
leave
add
pop
xchg
xchg
sub
sarl
dec
ret
xor
mov
lcall
xor
lds
dec
out
pushl
jge
mov
pushf
test
fmull
rolb
cs
shl
fidivl
jne
sbb
or
xchg
jnp
dec
pop
jae
mov
add
mov
and
leave
arpl
cwtl
inc
add
xor
mov
dec
insl
jle
daa
testb
mov
inc
stos
push
xor
icebp
pop
cmp
xchg
jnp
shrl
cld
pop
cmp
sti
lods
or
scas
lods
je
push
int
inc
pop
mov
inc
add
pop
ret
and
jle
add
ror
je
push
lahf
jns
sub
xchg
lcall
inc
fimull
inc
popl
push
push
les
fwait
push
scas
pushf
sti
add
stos
cmpsb
popa
or
arpl
int
push
push
fwait
repz
or
cli
bound
sbb
sub
jb
add
or
cmp
or
ljmp
movsl
pop
jb
js
push
sub
or
xchg
xor
xchg
les
test
push
movl
js
cs
push
lods
in
mov
xchg
and
das
push
cwtl
fst
mov
scas
add
int3
cld
xlat
mov
popa
dec
shll
cli
jno
aaa
fwait
negb
or
add
imul
fists
int
inc
lret
cmp
adc
orb
sub
das
or
ret
jae
pop
icebp
pop
xor
cmp
inc
dec
ret
cwtl
or
test
push
scas
mov
std
insl
adc
sub
testl
out
clc
fistl
gs
or
adc
pop
lret
lea
push
pop
insl
movsb
jo
rcr
ret
sti
mov
sub
repnz
adc
push
xchg
sti
inc
in
clc
clc
ret
aas
clc
and
lods
js
mov
aaa
cmpsb
shll
arpl
xor
addr16
push
or
dec
cli
cmp
and
xor
pop
xchg
movsb
lods
push
pop
subb
jae
mov
dec
out
movsb
and
mov
inc
push
movsl
pushf
in
sub
mov
repnz
sub
hlt
out
lods
sbb
or
dec
mov
mov
enter
xor
mov
iret
aam
inc
xor
lea
adc
mov
adc
mov
sbb
cmp
jle
loopne
or
or
std
mov
in
les
xor
popf
pop
mov
add
out
pop
cmp
ss
xchg
pop
jno
sbb
aad
jbe
cmp
ss
cmp
test
push
push
out
add
xlat
pop
push
pop
aad
or
dec
enter
scas
dec
scas
cmc
sub
lods
popf
jp
leave
jp
inc
rcr
mov
pushf
pushf
or
insl
mov
pcmpeqd
cmc
dec
inc
pop
push
test
sub
out
xchg
push
fsubs
loopne
in
pop
dec
or
push
std
iret
cwtl
cltd
mov
pop
or
sbb
jbe
or
scas
dec
sbb
jp
inc
mov
xchg
push
ljmp
cltd
cmp
mov
xchg
lea
pop
dec
jns
adc
mov
mov
fisubrs
rcrb
pop
or
add
mov
sub
push
popa
rorb
fmulp
xor
mov
cmpsb
insl
lock
stc
outsl
hlt
aad
into
xor
js
imul
stc
fistpl
push
cld
test
js
push
add
jge
imul
and
mov
mov
clc
xchg
add
das
push
scas
jecxz
test
imul
pop
out
inc
aad
add
outsb
push
dec
mov
outsb
je
mov
lcall
dec
stos
cltd
pushf
in
pop
cmp
cmpsb
negb
push
jne
cmp
pushf
jmp
jle
js
xchg
push
std
arpl
jo
jl
jp
js
je
jmp
xchg
adc
sbb
jno
mov
test
xchg
or
out
inc
arpl
and
cmp
and
cmp
pop
int
pop
mov
push
mov
loop
gs
subl
movsl
pop
ss
push
fcom
jns
xchg
mov
lret
mov
ja
add
das
mov
jge
xor
scas
push
cmp
dec
int3
lret
andb
cld
push
and
inc
lcall
cltd
sbb
xchg
dec
adc
mov
jmp
insb
lea
mov
push
sti
mov
adc
mov
sahf
pop
jbe
pop
push
inc
pop
xor
inc
add
cmp
push
adc
lcall
xor
dec
negl
sub
xor
bound
dec
and
pop
test
lods
push
dec
sbb
mull
pusha
das
movsl
or
mov
mov
dec
in
lock
adc
sbb
jecxz
xchg
hlt
mov
cmpsl
incl
lahf
mov
jno
push
pusha
xchg
bound
imul
xor
add
or
ffreep
cwtl
cmp
cmp
test
mov
sub
lcall
mov
cmp
mov
xchg
push
mov
and
mov
adc
adc
je
ljmp
test
insb
outsb
xchg
xor
data16
repz
fstl
push
push
push
jbe
jbe
inc
aas
xor
mov
pop
adc
or
jle
int3
adc
arpl
and
xor
aas
xor
iret
mov
sbb
inc
and
mov
dec
jo
mov
int3
mov
jl
jnp
xlat
jae
cmc
xchg
loopne
push
push
mov
mov
jo
mov
or
xor
insb
fmuls
or
fmul
ret
imul
jo
lahf
daa
push
push
in
imul
push
fisubrl
movsb
push
fs
leave
sahf
js
insl
imul
int
mov
push
jmp
je
or
pop
pop
pop
add
cmpl
or
out
xor
imul
mov
insl
push
test
incl
push
icebp
jecxz
cmp
nop
les
and
sbb
cwtl
pop
dec
sbb
pop
jp
sub
or
sbb
aam
cld
mov
jge
jnp
jae
aam
jg
subl
out
jb
inc
ret
scas
sbbb
daa
pop
ljmp
inc
mov
sub
aad
xchg
jecxz
mov
loop
std
int
in
mov
in
divb
in
fisubrl
push
mov
add
cmp
in
in
mov
mov
ss
sub
dec
mov
jg
mov
stc
jecxz
push
push
mov
movsl
push
cmp
fwait
enter
push
or
mov
push
out
mov
addr16
jnp
outsl
cmp
xchg
push
mov
xchg
mov
dec
call
mov
jnp
das
push
out
aas
add
mov
add
stc
add
push
xchg
jno
hlt
sbb
addr16
repnz
add
or
fs
cmp
aad
ja
enter
xchg
add
jmp
fiadds
roll
jno
aas
push
dec
xchg
jp
loop
fcoms
and
or
ds
stc
xchg
notb
push
aas
sbb
cmpsb
inc
mov
sarl
lds
cmpsb
cltd
mov
ss
stos
pop
fsqrt
sti
addr16
or
sbb
and
ds
insl
and
dec
icebp
insb
lret
in
scas
pop
sub
cmp
rcrb
cmp
rorl
cli
mov
jge
stc
jecxz
jl
leave
jnp
xchg
imul
push
aas
fbstp
dec
cmovge
test
xchg
dec
loope
pop
push
push
sahf
inc
out
push
fsubrs
mov
sub
and
xor
subb
outsb
jg
sbb
add
adcb
mov
push
inc
icebp
int3
jecxz
iret
inc
jg
stc
push
mov
testb
mov
lea
dec
push
pop
and
stos
loopne
fimuls
repz
mov
adc
lea
std
sub
in
and
mov
fadds
push
lret
imul
sub
rorb
or
incl
out
xor
orl
sbb
push
shrb
dec
jecxz
and
mov
cmp
mov
cmpsl
sub
aad
cmp
cwtl
pop
pop
lahf
lock
repz
out
lock
mov
xlat
leave
testl
rcll
jns
cmpsb
lods
cmp
sub
pop
sbb
cmc
sub
pop
imul
cld
adc
dec
add
daa
gs
xchg
cmp
xchg
mov
push
shll
sub
subl
in
ja
movsb
out
aaa
stc
shrl
xchg
mov
mov
es
jmp
and
pop
push
push
sbb
stc
push
aas
adc
xchg
jb
dec
les
mov
inc
or
jp
ljmp
test
outsl
mov
enter
int3
cmpb
stos
inc
cmp
std
mov
mov
jge
divb
in
scas
jp
lea
push
ret
rorl
mov
daa
pop
addr16
sub
std
mov
rcl
shlb
sbb
fs
mov
mov
popf
call
mov
cmc
mov
xor
and
pop
sbb
jb
jg
das
gs
popf
cmp
inc
out
ljmp
js
or
jg
xor
cmpsb
or
iret
or
push
pushf
push
pop
je
popa
xchg
js
jb
xchg
sti
lret
mulb
xor
cmp
jl
cltd
jl
mov
data16
ljmp
push
outsb
movups
daa
sub
sti
jle
out
jle
hlt
idivl
dec
lods
mov
cli
nop
sbb
dec
lods
jno
mov
bound
fildll
clc
jo
fidivrl
push
xor
adc
inc
cmp
mov
hlt
call
mov
push
lods
mov
cmpsb
mov
mov
clc
subb
aam
arpl
sbb
mov
daa
and
ljmp
push
andl
or
movsb
xlat
lret
xor
movsb
in
bound
je
dec
call
pop
mov
or
cmp
shl
cld
mov
mov
mov
out
sahf
push
xchg
out
sub
sbb
sub
test
stc
movsb
jecxz
movsl
sbb
hlt
xchg
out
fdivrs
popf
push
js
cmp
addl
hlt
test
add
adc
hlt
and
imul
and
mov
lea
outsb
dec
out
adc
popa
cmpsl
mov
push
rcrl
push
lds
cmp
add
mov
dec
es
and
push
mov
pop
inc
jmp
int
and
xchg
or
stos
scas
call
pop
ret
je
scas
cmpsl
dec
fldcw
dec
jae
jnp
orb
jnp
lahf
popf
aam
inc
pop
mov
ljmp
int
inc
sbb
fs
dec
aas
jmp
mov
mov
push
in
fs
ja
xor
or
ret
or
adc
out
in
push
test
hlt
test
inc
jnp
sub
xchg
outsl
lock
pop
movsb
fcoml
icebp
mov
cmp
cmp
mov
cli
jae
mov
aaa
adc
jo
test
ljmp
aam
pop
ljmp
ss
sahf
xorb
fsts
out
sub
cmp
inc
fs
dec
jo
fdivrl
fwait
cmp
add
mov
push
inc
mov
pop
mov
sbb
dec
jnp
jmp
fdivs
jno
and
push
in
jmp
mov
or
push
insb
or
push
dec
push
das
in
xchg
adc
xor
rorl
andb
mov
pop
mov
xchg
enter
stos
in
es
insl
nop
sbb
cmp
dec
xorb
ficompl
and
or
or
aas
xchg
andb
mov
das
nop
les
fdivr
jb
jl
mov
mov
into
dec
jae
subl
add
jo
push
daa
or
pop
pop
jb
mov
shll
or
outsb
icebp
xor
js
sub
pushf
xchg
dec
loop
scas
cmp
ret
out
fstpl
jp
inc
sbb
test
clc
movb
mov
sbb
std
jns
ja
mov
ljmp
sbb
aas
ja
lahf
mov
add
xchg
fldcw
popf
mov
xor
jp
daa
sbb
xchg
movsl
mov
inc
cli
das
icebp
pop
lcall
xchg
push
adc
fidivl
ss
in
sub
and
imul
pop
incl
jo
sub
adc
and
mov
mov
pop
dec
jle
cwtl
push
sub
dec
xchg
xor
mov
lahf
push
mov
stc
mov
dec
lea
idivb
rol
jae
adc
mov
arpl
sbbl
add
insl
lahf
into
jle
js
pusha
lods
lea
rcrl
or
mov
mov
adc
aad
inc
cltd
enter
adc
mov
ss
pop
xor
lcall
and
cmpsl
or
cmp
add
addl
cli
mov
inc
mov
lret
je
pushf
sbb
mov
test
push
out
pop
mov
aad
into
xchg
inc
fistpll
into
push
xor
dec
cmp
add
jnp
dec
dec
jl
pop
orl
mov
shlb
sub
in
mov
xlat
fisttpll
dec
ss
outsb
jp
scas
fsubs
adc
cmp
ret
sbb
jmp
or
fs
and
popf
jl
push
iret
test
ljmp
mov
das
xchg
dec
mov
push
aaa
jno
mov
ret
sub
sub
lret
add
xor
jp
mov
adc
movsb
xor
push
ds
push
mov
jbe
cs
rclb
cmp
lret
or
pop
pushl
mov
shr
jp
adcl
jge
and
daa
sbb
in
sub
pop
mov
cmpsb
jnp
mov
enter
lret
aaa
lea
jg
cmp
cmc
fstl
ret
cmp
mov
movsl
xor
imul
mov
addr16
and
mov
dec
adc
rcll
aaa
jb
mov
ds
cmp
jmp
rcl
movsl
stc
add
or
xor
pop
pop
pop
cmp
cwtl
imul
jle
push
sbb
jo
btc
push
dec
addr16
lret
mov
xor
jmp
sti
mov
mov
and
stos
scas
sti
imul
sti
xchg
subl
shlb
cmp
add
frstor
jmp
enter
ss
pop
pop
cmpsl
jne
mov
stc
ds
loope
nop
push
pop
push
stos
pushf
mov
lret
and
outsb
and
stc
xchg
cmp
movsb
push
mov
add
xchg
inc
ret
movsb
mov
mov
sub
pop
jns
in
lods
xor
inc
fs
mov
call
dec
outsl
sahf
insb
mov
jl
pop
push
xor
lea
mov
sub
push
inc
mov
xor
push
imul
xor
nop
pusha
mov
and
insl
pop
mov
or
sub
dec
nop
ljmp
fwait
popf
push
pop
sub
lock
pop
push
sub
ret
pop
ret
lock
jg
push
xchg
movsl
add
inc
jle
int
in
pop
out
cmp
adc
insl
cmpsl
and
sub
pop
scas
shl
mov
add
out
add
movl
stos
enter
and
mov
orb
cld
lcall
andb
mov
push
in
xchg
push
dec
cmp
cwtl
mov
xchg
or
mov
ret
js
test
dec
mov
inc
ja
inc
pop
aas
inc
jl
leave
xor
jnp
sub
inc
inc
cmp
sub
addl
or
mov
rcrb
data16
mov
scas
insb
fisubl
fdivrl
mov
pop
std
sub
mov
mov
cmp
insl
js
add
mov
out
aas
aas
adcl
les
push
xchg
aas
dec
cmp
test
dec
xchg
sti
aaa
out
hlt
stc
rcll
clc
or
xor
jb
fnstenv
scas
jbe
mov
pushf
loop
imul
pop
lds
adc
faddp
or
mov
dec
xchg
bswap
xchg
and
mov
out
jne
lea
aam
mov
and
out
jne
xor
sbb
pop
test
cmp
fbld
repz
dec
push
jle
es
test
ds
pop
sub
and
sahf
scas
out
mov
sti
jno
test
andl
xor
sbb
or
in
fnstsw
sbb
out
push
mov
lds
sbb
jnp
push
xor
roll
aam
inc
xor
jae
cmpsb
pop
sub
and
dec
aas
add
sbb
fdivrs
shlb
les
cli
mov
xor
xchg
int3
into
sub
movsb
pop
inc
jb
mov
daa
stos
adc
inc
loop
mov
int
add
aaa
sbb
xor
cmp
notb
add
movsb
add
mov
imul
or
addr16
arpl
aaa
jp
and
test
xor
push
inc
test
dec
sub
lret
xor
push
hlt
fidivs
aam
jmp
pop
outsb
mov
ret
rcr
cmpb
orb
aam
pop
push
stos
dec
mov
jge
xchg
in
adc
pop
and
cltd
mov
mov
popf
hlt
out
inc
cwtl
adc
and
add
adc
or
xor
cmpb
pop
call
push
fldenv
jecxz
mov
pusha
cmp
sbb
cltd
push
cmp
rol
sub
rorb
jmp
mov
push
lea
mov
xchg
jb
leave
nop
aas
sub
push
lock
mov
mov
loopne
popa
sub
xchg
shrb
add
push
hlt
push
and
add
ljmp
sub
push
pop
push
xlat
push
loop
mov
stos
inc
dec
fst
int3
mov
xlat
mov
pop
cli
inc
pop
sub
lret
shrl
mov
sbb
les
mov
mov
gs
push
aaa
jmp
iret
pop
jmp
push
cmp
sub
cmp
ja
popa
ss
js
movsb
out
push
mov
mov
into
outsl
or
sub
cld
sahf
mov
mov
out
scas
faddl
cli
repz
add
loop
xchg
adcl
xorl
fucom
mov
push
hlt
sbb
lea
out
fldcw
in
mov
jb
push
jns
cmp
rcrb
pop
push
mov
sub
lahf
fnstsw
xlat
jno
and
adcb
aaa
out
inc
push
cltd
add
inc
add
sub
jecxz
andb
push
cmp
andl
dec
dec
nop
shr
clc
pop
cmp
mov
outsl
jb
or
push
movsl
aad
into
dec
mov
stos
icebp
in
daa
push
lret
inc
jg
movb
adc
flds
aas
fdivl
fnstenv
xor
sbb
cltd
push
call
xchg
add
cltd
pop
shll
pop
aas
or
mov
mov
and
test
lock
out
imul
xchg
mov
adc
mov
test
mov
xchg
push
jp
mov
sub
cmp
repz
push
insl
imul
mov
add
sbb
mov
dec
mov
int3
jmp
stos
pop
out
inc
mov
outsl
lods
fisubrl
xor
repnz
xlat
xchg
add
xchg
outsb
pusha
jo
mov
shlb
iret
and
inc
aaa
inc
les
out
movsb
aas
cmpsl
daa
or
xor
imul
or
pop
mov
mov
cmp
push
mov
push
outsb
cmp
rol
stc
fbld
inc
into
and
jns
push
rcll
hlt
fwait
and
cwtl
jno
pop
cmp
loop
xchg
mov
nop
or
add
adc
fidivs
jle
sbb
jl
cs
add
sbb
into
jno
push
adc
jns
and
lcall
fisttpl
xchg
das
test
xchg
inc
mov
push
mov
sbb
xor
mov
fwait
test
lods
hlt
pushf
test
jno
mov
and
nop
or
ja
cmp
push
push
or
cmc
js
inc
andb
test
add
ss
mov
sub
dec
xlat
roll
xchg
out
les
sbb
arpl
sti
cmp
pop
sbb
dec
repz
in
out
sub
xchg
mov
insl
fmull
xchg
jmp
subl
xchg
decl
test
fists
sub
mov
scas
mov
adc
shlb
sbbl
xchg
push
ja
aaa
hlt
nop
sbb
ja
push
ror
shrb
rcll
push
or
jne
test
inc
fildl
cmp
mov
fsubl
pop
sub
sub
mov
jl
or
pushf
inc
iret
daa
es
push
mov
imul
push
fnstcw
ljmp
leave
imul
dec
ja
push
and
mov
xchg
sbb
test
adc
and
push
scas
inc
xchg
jne
insl
jp
xor
push
mov
jg
sub
mov
jmp
rorb
cmp
cmp
push
add
ja
scas
out
pop
testl
loop
dec
test
mov
lock
adc
jge
cmp
add
shlb
out
faddp
sahf
xchg
pushf
int
repnz
xlat
pop
fsub
mov
lea
idivl
inc
pop
add
add
test
sub
rcrl
pushf
scas
sbb
loop
out
fiadds
xchg
jge
jg
aas
mov
clc
fistl
js
int
mov
loope
test
xlat
mov
push
jns
jmp
pop
mov
xchg
mov
divb
mov
in
test
xchg
pop
dec
mov
test
mov
aaa
mov
bndstx
jbe,pt
xlat
call
xchg
cltd
xchg
dec
pop
pop
rclb
nop
out
xchg
enter
js
bound
xchg
aas
adc
or
icebp
dec
les
xor
xor
mov
cmp
fistps
lcall
rcl
pop
pop
dec
hlt
mov
cmc
daa
jl
xchg
es
and
movsl
push
repz
cmp
jnp
pop
shl
xchg
out
dec
xchg
and
cmp
dec
push
bound
or
test
rorb
aam
jle
test
fimuls
add
jmp
stc
xchg
dec
fnsave
in
test
out
lret
imul
xor
and
xor
stos
stc
adc
rorl
cmpsl
test
test
in
mov
lret
cli
das
imul
movsl
inc
pop
adc
and
sub
ret
xchg
aaa
ret
jnp
loopne
fst
into
movl
movsl
pop
mov
sub
dec
gs
imul
out
jg
push
sbb
ja
mov
loope
or
repz
adc
test
or
andl
dec
dec
lds
xor
lcall
mov
in
dec
daa
and
out
clc
cmpl
xor
and
sbb
xor
jne
xchg
xor
scas
ja
sub
arpl
dec
imul
call
add
inc
pop
mov
or
gs
mov
addl
or
dec
fsubrl
pop
push
fucom
pop
or
and
xchg
cld
loop
loope
out
cmp
xor
inc
inc
cmpsl
or
or
jae
jg
insb
xchg
mov
pop
into
add
push
mov
mov
lods
fcompl
sti
call
add
ljmp
lcall
dec
imul
iret
nop
test
lret
push
movsb
sbb
inc
ret
pop
xorb
mull
fwait
call
inc
inc
cmp
sub
or
pop
xor
daa
subl
mov
jecxz
mov
push
daa
arpl
scas
lahf
cmp
jp
xchg
jnp
and
mov
push
fucomp
or
pop
aam
andb
sub
mov
int3
push
push
adc
push
fnsave
cltd
neg
jmp
rcrb
pop
sub
outsb
xchg
xor
jecxz
stos
mov
subb
movsl
mov
gs
rcrb
pop
int3
lods
dec
orl
jbe
mulb
rorb
jno
imul
or
neg
dec
pop
je
sahf
sbb
pushf
std
or
mov
add
arpl
push
jnp
push
jb
xchg
jo
iret
fimull
test
movsl
jge
jne
add
pop
and
int
adc
cmp
mov
imul
mov
movsb
imul
cmp
jl
call
cmc
cmp
pop
push
jecxz
sbb
jno
sub
cmc
lahf
pop
sub
mov
ret
pusha
xchg
mov
inc
cmp
gs
or
dec
cmpsl
movsb
enter
pop
out
in
and
push
mov
lods
fldcw
test
mov
xor
lahf
int
mov
scas
and
adc
decl
xchg
and
repnz
mov
insb
test
pop
inc
sahf
xchg
outsb
pushf
add
xlat
in
and
mov
adc
mov
pop
push
jmp
out
mov
mov
dec
mov
outsb
push
pop
cmp
mov
sbb
stos
or
lds
sbb
mov
leave
leave
jge
into
in
add
movsb
loop
stos
in
stos
bound
les
mov
sahf
add
jbe
xchg
push
dec
inc
aaa
jo
push
js
xor
mov
and
repnz
adc
int
jne
scas
add
xchg
repnz
sub
jb
sub
xor
imul
fidivl
es
or
mov
fistl
add
popf
ss
mov
popf
imul
sbb
aam
loope
lods
and
mov
call
lret
jecxz
xchg
mov
js
das
clc
mov
stc
test
pop
insl
fucomip
fimuls
aam
insb
daa
xlat
popa
jecxz
mov
jl
push
xor
repnz
fcmove
outsb
fadds
fildll
sbb
xchg
ret
sbb
and
lahf
and
loopne
out
mov
test
sbb
or
mov
arpl
mov
jne
dec
test
jnp
stos
mov
jle
fcmove
cmpsb
mov
mov
lret
mov
pop
popa
mov
and
push
loop
sub
fidivrs
jmp
out
mov
fstpt
sub
sbb
daa
or
push
scas
push
adc
xor
mov
cmpsl
out
pop
xchg
loopne
jb
jns
or
or
ret
push
push
inc
xor
aas
das
hlt
and
fs
mov
sbb
adc
jo
pop
fisttps
add
and
loop
dec
popf
lea
into
mov
in
ror
xchg
cmp
add
cmc
and
jns
cwtl
adc
xchg
aaa
int3
lahf
pusha
out
pop
movsl
fs
test
adc
jge
nop
push
mov
stos
xor
stos
mov
test
aad
inc
out
add
aas
or
xchg
cmp
xchg
mov
ret
add
inc
mov
push
test
popa
popa
jp
pop
xchg
jg,pn
loope
std
and
cmpsl
add
mov
add
xlat
sbb
fcoms
adc
pop
pop
inc
fld
or
mov
xchg
loop
arpl
cltd
push
push
movsb
cwtl
je
arpl
sbb
push
fnstsw
cld
scas
movsb
lcall
xlat
xor
inc
das
sub
pop
xchg
jg
mov
push
xchg
pop
push
mov
mov
rorl
sbb
lahf
xchg
dec
sbb
mov
sbb
cmp
mov
dec
insb
sub
notb
scas
or
cvtps2pi
mov
cmp
xor
cld
or
jge
dec
inc
and
adc
test
arpl
push
scas
and
xchg
test
mov
adc
dec
sub
je
and
les
pop
out
js
ja
inc
aam
xor
mov
inc
mov
mov
iret
xchg
sahf
fisubl
in
sahf
movsb
fldl
mov
adc
jp
mov
mov
or
push
or
inc
dec
sbb
outsb
jle
jle
out
loop
flds
jg
jecxz
jmp
adcl
adc
loop
popf
mov
xor
sub
pop
fisubrl
int
lahf
pop
xchg
aad
pop
add
push
mov
test
loopne
inc
push
iret
pop
xor
adc
sbb
icebp
adcb
fcom
cli
jge
or
push
sub
mulb
aam
nop
add
mov
push
bound
aam
add
cmpsl
fcomps
jb
cld
push
cmpsb
sub
pop
cs
dec
andb
movsb
inc
add
bound
jge
add
test
ds
cmp
and
push
cmpsb
xchg
test
push
mov
loop
call
nop
lods
or
mov
jl
stc
cmp
addb
ret
and
pop
pop
add
into
cmpsl
pop
pop
cwtl
or
jno
xchg
scas
pushf
cmpsl
imull
andb
xchg
imul
and
jge
adc
cmc
mov
gs
std
mov
jp
fwait
dec
out
inc
add
sub
imul
repnz
in
inc
sarb
movsl
pop
pop
inc
arpl
shlb
fnstenv
insl
out
add
subl
add
xor
and
arpl
mov
ja
pop
subl
rclb
ljmp
sahf
fcmovnu
mov
in
mov
jl
scas
sbb
mov
loope
cmp
add
cwtl
cmp
lahf
mov
push
aam
inc
imul
adc
or
pop
int
cmp
lahf
push
jns
and
add
mov
jg
sub
imul
jge
outsb
scas
hlt
inc
or
xor
sbb
fistpl
outsb
add
test
sub
and
scas
xchg
cltd
dec
daa
outsl
arpl
add
lds
popa
nop
fsubrl
sub
mov
or
xor
imul
jp
jns
int
fiadds
iret
insb
mov
mov
or
loopne
jnp
jns
enter
jg
push
popf
adc
in
xor
sbb
aad
inc
cmp
mov
push
fadds
pop
jecxz
pusha
jmp
xchg
dec
jno
lret
ljmp
pop
roll
jns
pop
jbe
sbb
jnp
and
es
pusha
add
fadd
or
xchg
cs
cmp
inc
icebp
push
aam
sbb
outsb
mov
push
hlt
cwtl
jg
sbb
pop
xor
not
es
mov
aad
mov
lahf
mov
repnz
sbb
push
fisubrs
jmp
xchg
js
sub
out
in
push
in
nop
dec
repz
xor
hlt
leave
ftst
inc
push
loope
iret
dec
rorb
dec
mov
xchg
ret
pop
lahf
jo
dec
and
mov
icebp
inc
xchg
rcrb
das
jl
lret
push
and
aas
or
or
outsl
aam
or
mov
sbbb
clc
mov
data16
mov
push
push
and
sub
add
test
add
or
pop
clc
cmc
pop
add
in
xchg
movsb
pop
lods
ret
inc
cmp
cmp
test
pop
xchg
mov
scas
bound
mov
xor
out
sub
rcll
in
add
mov
pushf
bound
cmp
adc
dec
shrl
movsb
ret
into
pop
movsl
and
push
push
and
or
insl
int3
jo
dec
imul
loop
imul
push
dec
sub
pop
out
negl
hlt
js
pop
jge
movsb
inc
lret
cmpl
repz
mov
push
stc
inc
mov
dec
cmpsb
xchg
sbb
lahf
cld
mov
xchg
in
in
inc
pushf
and
add
popa
push
xor
sti
js
or
xor
ret
dec
xchg
cmpsl
pop
adc
lods
scas
adcl
add
shlb
andb
xchg
daa
cmp
push
adc
add
sbb
or
cmp
xchg
bswap
fwait
test
add
pusha
shll
xor
rcl
dec
or
push
add
push
ja
rolb
jno
xor
cli
xor
roll
jae
aad
push
int3
mov
aam
ret
stc
nop
movsl
out
adc
adc
add
mov
fs
adc
mov
leave
xor
jecxz
push
cmp
fstps
pushf
cmp
test
pop
push
fwait
in
leave
mov
popf
scas
fucom
push
outsl
sbb
inc
push
pop
mov
push
fistpll
and
cli
and
call
pop
jmp
mov
sbb
nop
and
fdivr
sbb
dec
mov
cld
xor
or
xor
stos
mov
mov
mov
inc
sub
and
sbb
push
dec
icebp
addr16
cmc
sbb
or
xchg
rcll
or
push
jno
pop
mov
lock
stos
xor
dec
inc
int3
push
or
and
in
mov
push
or
and
add
xchg
sbb
mov
dec
js
lcall
leave
sbb
mov
shlb
test
or
rorb
mov
xchg
jns
dec
dec
js
xor
jne
jecxz
out
xor
repnz
inc
mov
lret
mov
mov
mov
arpl
xor
cs
addl
lcall
leave
mov
sar
imul
lds
rclb
repnz
orb
inc
idiv
mov
push
fisubs
test
rclb
out
ljmp
cmp
in
push
imulb
movsl
push
fldl
pop
adc
mov
sahf
cmp
scas
mov
dec
loop
lock
dec
call
rcrl
cmp
mov
das
lret
out
jp
push
xchg
popa
cmp
shl
inc
jbe
mov
cmpsl
xor
xor
add
fists
insl
repz
jne
ljmp
add
mov
adc
xlat
cmpsl
fistl
jecxz
adc
xchg
pusha
lcall
icebp
push
cmp
stos
push
xlat
popa
mov
dec
fstl
ret
out
cmp
or
int
pop
or
push
xchg
lds
cmp
add
pushf
adc
jne
dec
lret
mov
add
sub
in
inc
add
andl
add
arpl
sbb
data16
and
les
sub
enter
mov
mov
sub
es
ja
lds
jo
lret
jg
call
aas
les
jo
fiadds
outsb
xchg
xchg
ds
sbb
leave
push
std
aam
push
mov
cmp
mov
push
mov
add
rcrl
pop
or
xorl
out
dec
cmp
jmp
xor
xchg
push
push
insb
test
movsb
jecxz
push
fsubs
xchg
loope
xor
fistl
dec
cmp
lret
aad
cmp
push
cltd
and
addb
cs
gs
nop
mov
orl
into
xor
and
adc
inc
and
pop
adc
notb
xchg
jne
stos
push
xor
into
push
push
enter
inc
jae
lahf
lds
imul
mov
movsb
in
lds
testl
pop
lods
test
dec
add
inc
and
andl
push
adc
movsl
pop
enter
xchg
mov
and
push
mov
jl
dec
push
insb
add
xchg
mov
testl
inc
pop
sbb
mov
ret
cmp
aad
arpl
sub
setge
nop
cmpb
and
mov
iret
mov
test
imul
stos
out
aaa
sbb
insb
push
loope
je
dec
pop
repz
xchg
dec
out
rcll
pop
ficoms
dec
cmpsl
sub
mov
loop
outsb
bound
leave
mov
xor
ret
cmp
push
lcall
into
pop
cmp
cmpsb
lret
jl
push
loopew
xchg
jne
xchg
inc
stos
cmc
jbe
daa
enter
in
ss
loopne
or
push
adc
push
and
or
xchg
call
add
adc
cli
ds
hlt
or
sub
and
ret
xchg
xchg
push
dec
jg
sahf
shrb
and
lea
mulb
loop
fwait
and
out
push
mov
stc
cs
inc
dec
testl
mov
cs
mov
dec
dec
cmp
test
xchg
dec
mov
popf
popa
sub
dec
sbb
pop
adc
int
aad
cs
cld
in
movsb
movsl
mov
adc
adc
cmp
int3
mov
dec
shlb
outsb
and
jl
nop
scas
xchg
and
jecxz
inc
mov
xor
xor
sbb
lret
xchg
push
jne
fcomp
enter
inc
mov
into
xchg
imul
lock
xchg
filds
test
dec
sbb
jle
mov
inc
lret
in
sbb
add
js
shl
inc
add
mov
push
call
gs
xchg
cmpsb
cs
test
aam
inc
dec
jmp
addr16
mov
mov
adc
sbb
sbb
mov
test
aam
sbb
xor
inc
jo
xlat
stos
outsl
cld
int
mov
mov
stos
mov
subl
fs
push
dec
sbb
repz
sub
sarb
mov
or
imull
popf
iret
mov
cs
jbe
inc
stos
scas
cmpsl
and
cmpsb
dec
fadds
pop
add
push
add
dec
dec
lcall
jns
push
xchg
movsb
xlat
mov
inc
add
ret
sarl
lcall
inc
mov
and
xchg
loopne
push
add
shl
cmp
mov
and
push
jmp
movb
cli
cwtl
sub
std
adc
dec
repz
movsb
cmp
inc
mov
mov
add
jle
sti
ss
dec
dec
cmp
ss
outsl
mov
in
push
pop
rorl
popa
pusha
scas
cmpl
loope
jp
jl
cmp
jne
movsl
fiadds
fwait
insb
xchg
fldenv
or
popa
pop
arpl
ljmp
out
ljmp
fistl
out
icebp
stos
xor
xchg
test
insb
sub
out
and
push
mov
jmp
xor
jecxz
andl
inc
xor
std
fstpl
pop
iret
xor
pop
test
dec
dec
das
push
or
and
mov
ds
xor
movsb
pop
shl
popf
ss
and
push
xchg
and
cmp
mov
pop
cmp
xchg
or
jge
mov
fs
sti
push
dec
jl
mov
rorb
xor
xor
pop
push
inc
jne
sub
nop
fidivl
add
jo
test
test
adc
lahf
lods
daa
das
pop
pusha
pusha
mov
xchg
add
shlb
or
loop
scas
stos
ljmp
das
pop
xchg
data16
jbe
or
outsb
aas
mov
jae
pop
dec
out
pop
shll
adc
sub
xor
jo
bswap
popa
stos
mov
jnp
aas
movsl
dec
jmp
stos
mov
or
xchg
sbb
sub
sub
xor
jno
fsubl
stc
pusha
xor
fs
jp
add
hlt
adc
ret
rcll
mov
rclb
in
and
dec
sti
out
mov
xchg
dec
insl
pop
pop
adc
aam
and
xor
xchg
in
sar
inc
int3
sbb
shr
mulb
cld
outsl
dec
sub
ljmp
cld
inc
cld
cltd
jo
adc
mov
cmp
imul
out
aas
inc
sbb
js
push
xchg
leave
mov
shl
test
or
cmpsl
add
sub
out
mov
add
fdivs
pop
scas
push
lret
out
mov
or
pop
aaa
or
mov
or
psrlw
push
repnz
daa
andb
pop
cmp
xchg
push
inc
loopne
cli
jl
out
inc
fldcw
add
push
mov
push
jmp
pop
xchg
lret
movsl
bswap
aas
inc
negb
mov
fdivrs
mov
daa
insb
out
mov
shr
mov
mov
pop
repz
sbb
push
imul
push
sub
dec
xor
pop
adc
je
bound
sub
pop
sti
outsb
lock
add
xchg
xor
test
icebp
jo
fisubl
mov
and
enter
pop
imul
inc
loop
xchg
mov
jmp
xchg
pop
in
inc
xor
pop
or
push
jmp
jne
and
mov
pusha
xchg
sahf
mov
cltd
cmpsl
and
ss
jl
inc
mov
sbb
enter
mov
ss
dec
scas
ja
es
outsb
test
adc
jge
push
loopne
or
jbe
mov
insl
inc
mov
lret
lock
mov
mov
ret
sub
inc
cmpsl
nop
outsb
mov
mov
adc
adc
daa
cmc
sbb
and
pop
push
dec
int
push
mov
and
push
cmp
xor
lret
adc
mov
xor
out
rcrl
push
sub
xor
ss
orb
mov
fisubl
push
mov
mov
nop
loope
mov
movsl
pusha
pop
mov
mov
enter
dec
fnstsw
mov
shll
jnp
sub
mov
push
call
mov
rcrl
xor
gs
xchg
bound
js
push
in
stc
mov
fsub
sbb
jl
xchg
cli
out
push
fsubrs
xor
inc
cmpsl
mov
xchg
aam
movsb
and
add
bound
sbb
clc
and
inc
jbe
aam
bound
pop
sbbb
pop
insb
add
mov
pop
iret
cmp
pop
mov
adc
dec
add
dec
xchg
fists
mov
test
and
movsb
pop
aam
bound
scas
xorb
sub
cmp
cmp
scas
loope
repnz
pop
outsl
loope,pt
out
push
aas
fildl
jge
cmp
jbe
call
cwtl
fmulp
xor
je
scas
dec
into
in
pop
sarb
inc
sub
pop
ss
lret
lea
enter
mov
sbb
ljmp
adc
das
xor
xor
inc
cmpsb
movsb
out
jae
push
cltd
mov
add
dec
ret
or
addr16
js
mov
addr16
test
popf
int3
in
mov
push
mov
sbb
mov
ret
jg
xchg
push
faddl
mov
in
aaa
xchg
test
sarb
subb
sbb
fwait
sub
clc
loope
dec
int3
push
int3
cmp
mov
adc
dec
add
push
sub
jmp
and
fwait
add
cmp
mov
jae
and
je
aad
xor
sbb
orl
pop
rcrb
lock
std
rcrl
push
mov
pop
filds
and
add
mov
mov
inc
or
cltd
ljmp
add
mov
imul
pop
movsb
std
xchg
xchg
sbb
pusha
test
pop
adc
sub
pop
enter
adc
mov
les
cmpsl
popa
xchg
or
and
mov
pushl
out
mov
and
imul
push
cwtl
jecxz
shrl
inc
push
iret
adcl
xor
xchg
mov
imul
dec
add
mov
loopne
mov
shr
std
dec
mov
popf
mov
pushf
push
xchg
test
mov
or
push
in
xorb
dec
mov
lods
das
and
in
pusha
xor
or
sti
mov
mov
scas
dec
and
adc
and
xor
imulb
lods
sub
pop
pusha
ret
and
mov
fmuls
aaa
cmp
xchg
or
push
ret
in
or
lret
stos
sub
sub
in
xor
xlat
mov
inc
and
xchg
stos
sti
outsl
pop
add
xlat
movsl
mov
jb
out
aaa
inc
push
or
outsb
and
call
jno
repz
mov
cmp
pop
sbb
push
push
pop
arpl
dec
daa
outsb
adc
cmp
xchg
popa
jb
pop
mov
notb
add
pop
es
test
pusha
fimuls
ds
xor
dec
call
cmc
mov
inc
xchg
jl
and
or
pop
imul
jno
mov
scas
jp
andb
or
rcl
jno
pop
cld
lods
sub
jp
xchg
stc
rol
rcll
jne
imul
and
mov
or
pop
shrl
xchg
push
pop
mov
and
filds
push
addr16
in
out
inc
push
and
mov
int
test
adc
sbb
lahf
loopne
fisubrs
sahf
movsl
adc
repnz
xchg
cmpsb
or
stos
loopne
mov
jg
push
or
ja
rcrl
jae
dec
pusha
pop
adc
cld
push
out
mov
cli
bound
and
lods
add
or
into
jp
lcall
add
test
dec
push
jne
test
ljmp
add
mov
jecxz
aaa
pop
dec
pop
outsl
push
mov
push
inc
jp
ja
xchg
pop
into
mov
testl
cltd
loop
aad
je
push
cmp
imul
pop
test
das
adc
fdiv
in
add
in
psraw
loope
je
mov
or
add
ljmp
int3
daa
jle
inc
scas
js
shlb
roll
push
xchg
mov
loopne
shlb
leave
xchg
xchg
xchg
cmp
and
data16
cmp
sbb
xor
add
cmp
sub
dec
es
mov
pop
jle
dec
mov
push
mov
jne
xor
mov
aas
out
xchg
rorb
mov
mov
ret
daa
jae
shll
xchg
sbbl
cwtl
out
stos
aaa
adc
movsl
xchg
inc
daa
and
add
or
lret
enter
lret
inc
pop
sub
xchg
fs
mov
and
pop
mov
lods
sbb
frstor
add
and
mov
mov
fildll
arpl
cld
loope
cmp
jle
mul
pop
shlb
sub
icebp
ja
pop
movsl
pop
sbb
mov
leave
adc
sub
and
imul
dec
loope
fcomp
pop
mov
add
mov
inc
sarb
gs
push
or
aad
lock
stos
popf
xchg
fsubs
nop
cmp
cmpsl
rcrb
add
and
aad
in
pop
stos
adc
push
inc
clc
xchg
aaa
in
sub
dec
fnsave
arpl
add
outsl
jmp
fdivr
bnd
sbb
sub
leave
mov
inc
inc
add
out
inc
adc
push
adc
mov
popf
inc
add
lods
shrl
adc
cmp
jae
sbb
je
cmp
insb
sub
dec
push
out
mov
pop
pop
ja
or
data16
ja
cmp
lods
sbb
inc
mov
pmaddwd
inc
hlt
aad
mov
push
jecxz
push
mov
lds
shrb
lahf
rclb
out
roll
push
out
mov
in
rcrl
inc
imul
jb
stos
sub
les
stos
jb,pt
mov
sbb
sub
out
and
stos
jp
fbstp
cmp
bound
test
sahf
sbb
inc
stc
xor
xchg
jecxz
jns
leave
push
notl
xchg
mov
mov
inc
fnsave
icebp
cmp
aaa
mov
inc
mov
in
dec
lock
stc
or
int
lcall
popa
dec
cmp
aas
sbb
lea
js
aaa
pop
sbbb
outsl
or
push
fistpll
mov
clc
mov
mov
outsb
add
loop
insb
mov
leave
or
and
imul
push
int3
or
iret
cs
scas
jle
xchg
jbe
and
jnp
sub
notb
sahf
cmp
jl
stc
cmpb
lret
sti
repz
mov
je
mov
and
test
loopne
stc
add
mulb
cmp
rorb
call
push
and
xor
in
es
dec
out
das
popf
dec
ss
mov
xor
mov
cmp
jns
pusha
lea
outsb
inc
push
adc
add
gs
imul
adc
aas
popa
movb
insl
mov
outsl
and
lahf
jbe
and
fs
pushfw
push
push
adc
test
pop
cmc
cmp
inc
sbb
insl
mov
pusha
push
mov
in
dec
mov
xor
jp
xor
xor
jg
fsubrs
mov
add
std
call
cld
or
rcr
add
pushf
pop
xchg
cmp
xor
aaa
add
ret
out
dec
ret
jne
mov
dec
subl
mov
movsl
mov
mov
daa
cmp
dec
pop
jo
shlb
sbb
test
push
xchg
adc
xchg
test
leave
int
cwtl
jae
inc
gs
push
movsb
movsl
cmpsl
test
std
das
popf
jb
dec
insb
idivl
icebp
test
popf
mov
mov
imul
push
in
fadds
lods
js
out
stc
add
sub
mov
inc
testb
jbe
push
nop
cmpsb
jno
xlat
cmpsb
or
xchg
jno
push
inc
lret
dec
test
cmp
and
sbbl
mov
mov
loopne
push
scas
push
lods
pop
mov
pop
loope
dec
push
lahf
xchg
or
sbb
jnp
mov
xchg
nop
daa
adc
mov
pop
ja
xor
sbb
inc
loope
jo
je
stos
iret
fdivrs
lret
and
mov
xlat
into
mov
jo
das
aaa
loope
fnstenv
leave
outsb
js
cmp
outsl
lahf
add
cltd
out
push
xchg
or
mov
into
cmc
in
inc
xor
loopne
testl
fdivrl
add
lock
adcb
or
cmp
push
int3
mov
xor
add
mov
push
daa
xchg
out
call
mov
jmp
cmp
sub
jg
adc
mull
push
push
xlat
cwtl
testl
mov
stos
repnz
mov
push
ja
mov
mov
xlat
cmpsb
push
lret
cmp
mov
xchg
test
iret
xor
mov
iret
fcomps
out
jl
cmp
push
xchg
divb
mov
add
jl
or
rcrl
out
inc
pop
dec
xchg
xchg
xchg
sbb
scas
or
lret
mov
adc
mul
mov
stos
jb
andb
xor
push
rolb
xchg
xchg
stos
ret
dec
jo
mov
adc
cwtl
fstpl
xor
sbb
mov
cltd
outsb
mov
ret
xchg
rcrb
int
outsb
scas
outsb
enter
push
and
mov
fcmovu
cwtl
or
jo
fwait
pop
hlt
fwait
dec
jbe
and
pop
cwtl
xor
cmp
hlt
lahf
stos
negl
out
test
std
iret
iret
je
pop
aad
testl
mov
inc
or
push
cwtl
pop
dec
aaa
paddq
scas
push
testl
rorb
mov
scas
cmpl
add
push
pop
repnz
lret
sbb
dec
xor
pop
dec
inc
pop
repz
loope
cmp
aas
test
cmp
or
sub
adc
fistpl
pop
iret
fmull
mov
out
jg,pn
inc
sub
xor
outsl
jb
lock
int
in
inc
insb
jp
pop
mov
movsl
push
xchg
fwait
sbb
negl
leave
outsl
dec
fwait
and
jecxz
dec
add
outsb
dec
jl
cmp
inc
mov
loop
fmul
cltd
orb
jmp
rolb
scas
sub
adc
xorb
cmp
xlat
add
push
dec
fs
sti
mov
lahf
push
cmpsb
jnp
in
scas
cld
xlat
xor
add
jns
xor
imul
sbb
sti
inc
jbe
gs
ss
cmpsl
and
lahf
pusha
push
dec
or
aad
sub
lcall
cmpsl
stos
mov
mov
xchg
push
pusha
xor
xor
les
xchg
fdivrs
mov
inc
xchg
sub
xchg
xor
sbb
ljmp
add
or
scas
test
ja
pop
cld
int
cmp
add
push
adc
mov
mov
repz
mulb
push
out
loopne
pop
les
mov
xchg
sbb
sbb
jbe
dec
leave
adc
bound
mov
cmp
clc
push
dec
adc
mov
add
sbb
stos
pop
fadd
inc
dec
jb
ds
add
mov
sub
push
lds
testl
fisubl
or
movsb
scas
xchg
loopne
mov
jp
pop
inc
xchg
cmovbe
mov
movsb
call
mov
arpl
adc
jae
jb
push
jnp
jecxz
lock
mov
in
popf
shl
in
in
fwait
push
ret
das
ljmp
in
xchg
push
jns
imul
int3
in
lock
mov
pop
jae
inc
sbb
sbbb
cmpsl
loope
sbb
lods
sbb
ss
mov
jg
call
push
sub
cmp
cmpsb
push
les
pop
mov
in
imul
pop
xor
pop
nop
mov
push
shl
js
mov
jg
icebp
xor
and
outsb
fsubs
outsb
mov
lcall
mov
dec
mov
fs
push
sub
scas
dec
cmp
fcoms
fwait
pop
push
je
adc
imul
push
incl
outsl
repz
push
push
es
hlt
mov
fcomps
popa
out
ja
push
xlat
out
fcoms
hlt
mov
popf
mov
lods
fisttpl
xchg
repnz
rcll
test
lahf
lock
lods
mov
frstor
mov
mov
roll
mov
lods
shlb
inc
enter
in
cmp
pop
mov
ljmp
in
pop
push
xlat
scas
mov
mov
cli
cmpsb
mov
js
sbb
lods
push
fldt
dec
jno
and
jne
cmp
popa
inc
leave
cli
pop
xor
ficompl
bound
push
inc
fcompl
cli
cs
in
fcomip
adcl
pop
out
sub
add
sub
jb
mov
and
imul
icebp
mov
mov
adc
and
cltd
jecxz
sbb
cmp
adc
push
push
in
pop
jge
repnz
cmp
xchg
jbe
mov
loopne
cmp
lcall
hlt
sub
iret
mov
push
call
pop
dec
adc
out
das
ds
mov
cmp
sub
frstor
aad
std
or
shlb
cmp
add
int
add
adc
jbe
shr
and
lods
jno
push
imul
cmpsb
mov
sub
insl
add
repz
mov
mov
adc
hlt
mov
js
popf
inc
mov
or
inc
add
pop
popa
or
mov
loope
or
sub
int3
sub
dec
addb
dec
movsl
mov
inc
movb
rorl
sbb
xchg
pushf
fldcw
sbb
mov
dec
dec
xor
sub
je
mov
or
mov
sbb
rcrl
sbb
xor
adc
repnz
push
mov
icebp
mov
ret
lret
adc
je
test
mov
mov
shrl
jno
and
ret
into
xlat
mov
sub
enter
and
cmp
or
imul
stos
call
cmc
inc
push
or
sbbb
add
lods
jmp
loope
pop
fisttps
sub
cmpsl
dec
sahf
les
xor
cmp
rcl
scas
leave
dec
jl
xor
es
jae
stos
mov
incb
mov
mov
outsb
insb
cmpsl
jnp
or
cwtl
movsb
pop
mov
lods
mov
adc
inc
shlb
cmp
xlat
stos
ss
sub
inc
sub
pop
pop
gs
into
movsl
mov
xchg
push
aad
xor
inc
and
inc
sub
or
mov
sub
jecxz
sbb
sbb
mov
xor
int
test
dec
pop
push
outsb
and
jmp
adc
mov
pushf
shrb
push
mov
adc
rorl
sti
pop
xchg
cmpsl
addr16
add
ljmp
ret
mov
ficompl
pusha
mov
notl
sub
pushf
ret
push
decb
in
fnstsw
lock
xor
mov
testb
xor
aam
jl
hlt
cmp
push
in
xorb
mov
out
jo
xor
sbb
test
mov
push
xor
dec
xchg
mov
fdivs
xchg
or
xchg
jo
lcall
push
loopne
jo
mov
push
outsb
ja
hlt
ret
jmp
dec
icebp
inc
fdivrl
jnp
push
cmpsl
jle
int3
bound
jp
jno
in
pusha
jnp
xlat
ljmp
or
bound
jl
repz
repnz
lret
xchg
inc
adc
sub
jno
shr
es
push
xchg
lcall
mov
xor
cmp
xchg
mov
fidivrs
mov
aaa
out
aam
adc
jecxz
int3
popf
in
xor
orb
cmp
push
xchg
int
mov
jge
int3
loope
or
mov
cmp
and
nop
and
inc
or
push
xchg
mov
jo
xchg
xchg
jns
push
mov
or
inc
push
mov
out
xorb
in
lahf
mov
xchg
xchg
push
mov
xor
enter
jge
test
fldl2e
pop
push
jbe
addr16
repnz
sahf
sbb
mov
cmp
mulps
fwait
and
mov
shl
repz
into
enter
out
in
test
lock
push
xchg
or
xchg
dec
fnstenv
xor
jmp
sbb
lds
andb
mov
mov
in
jle
int3
enter
icebp
inc
mov
mov
inc
cmpsb
sbb
loopne
xlat
fs
nop
jl
movsb
test
scas
push
push
leave
mov
xor
dec
in
loope
gs
xchg
fwait
jp
mov
mov
push
cmp
xchg
je
mov
out
outsb
jmp
adc
repz
nop
stc
stos
scas
cmp
push
push
sbb
push
add
xchg
lcall
shrb
pop
adc
movsb
sbb
mov
mov
test
mov
sahf
inc
or
push
mov
into
lods
jp
call
dec
cmpsl
or
push
cmp
mov
push
jecxz
inc
pushf
xchg
ud0
js
cmp
push
xchg
xorb
or
out
pushf
sbbl
pop
test
insl
sub
push
dec
mov
aam
lods
lods
pushf
mov
or
mov
fimull
lods
lods
into
out
inc
cmp
mov
cmp
inc
inc
outsb
cli
faddl
add
js
inc
push
ret
setbe
jnp
lahf
add
add
imul
data16
pop
fbld
stos
push
fisubrs
sbb
pop
jge
jl
push
xlat
pop
mov
or
and
insb
and
mov
cmpsb
mov
ret
lea
pop
or
push
cmp
into
pop
mov
mov
push
imul
test
icebp
jne
add
xor
add
jo
mov
or
test
pop
mov
aas
pop
mov
or
cwtl
popa
test
rcrb
sub
iret
out
pop
xchg
stc
inc
xlat
iret
jl
sbb
cmpsl
mov
add
rcrl
push
cli
testb
pop
cmp
sub
es
mov
call
outsl
inc
aas
xchg
pop
hlt
insl
lods
inc
mov
jbe
inc
sub
xchg
adc
cvtpi2ps
cmc
gs
loop
fbstp
roll
cmp
cmp
pop
enter
test
sub
in
xchg
out
mov
cmp
adc
popf
add
dec
pop
fidivs
xor
pop
pop
adc
add
dec
loop
pop
or
xor
loope
sub
inc
ja
cmpb
vpsubsw
insl
ljmp
jp
test
xlat
out
aam
pop
and
repz
bound
jmp
xor
leave
mov
jno
out
mov
out
sub
cltd
pushf
je
lea
push
out
jae
add
sub
jno
adc
in
xchg
scas
loop
movsb
int
jmp
iret
push
mov
sub
or
jmp
bound
xchg
dec
clc
sub
cmp
adc
push
jle
sub
jecxz
sbb
push
xchg
and
or
mov
loopne
add
jae
mov
adc
imul
xstore-rng
cmpsl
xorb
mov
fnstenv
push
aad
dec
decb
popa
mov
jne
in
mov
adc
sar
ja
mov
dec
shrl
mov
inc
cmp
mov
mov
or
jmp
push
lock
and
sub
mov
push
fucomi
out
daa
mov
test
es
dec
xor
pop
dec
adc
ror
push
jecxz
sbb
xor
sbb
xor
in
fldenv
xor
iret
mov
sbb
sub
mov
xchg
sahf
sbb
out
add
jno
in
gs
mov
mov
pop
cli
sbb
mov
hlt
cwtl
or
cmpsl
push
decl
xchg
push
fidivl
shlb
aad
pop
sbb
test
add
jmp
or
andb
sbb
scas
mov
cmpl
pop
insl
es
cmp
vpor
mov
repnz
decb
adc
in
sub
pop
inc
jge
and
dec
push
sti
and
lods
xchg
stos
or
xchg
push
mov
pop
mov
dec
or
jbe
loop
mov
cmpsl
out
sbb
aam
xor
mov
lock
cmc
faddl
inc
adc
mov
mov
popf
mov
and
xor
outsl
les
xor
outsl
and
fisubl
mov
or
add
cltd
rep
push
sbb
arpl
ljmp
out
push
or
insl
loope
iret
loope
lds
int3
and
adc
ja
and
sbb
pop
call
xchg
sub
nop
inc
dec
mov
bound
insl
loope
les
inc
lods
add
outsb
mov
cli
mov
mov
cmp
dec
clc
mov
shlb
adc
mov
stos
test
add
test
push
jg
fidivs
jnp
ret
test
sbbl
test
imul
sub
xor
ret
jp
xor
int
aaa
mov
sub
je
loopne
testb
jl
out
jbe
fstpl
aam
add
movsb
insl
sub
imul
out
out
adc
mov
pop
jne
mov
jbe
jle
jne
js
sarl
out
xchg
sbb
cwtl
xchg
sub
jae
and
or
rol
pop
mov
mov
repz
xor
pop
inc
mov
fmull
leave
sub
cwtl
and
mov
inc
push
pop
xor
inc
clc
fmull
arpl
sbb
imul
mov
sbb
popf
add
push
xor
daa
fistpll
and
adc
mov
sbb
xor
test
test
aas
dec
adc
cli
das
out
outsl
popa
mov
push
push
insl
sbb
repz
stc
jbe
lahf
xor
xlat
outsl
pushf
scas
pusha
in
adcl
pop
xor
mov
out
scas
mov
or
jae
cli
es
mov
pop
sbb
push
leave
sub
mov
les
fistpll
call
dec
xchg
sub
in
in
popf
out
aam
dec
fsubr
mov
cmp
sub
inc
inc
cmpl
icebp
fwait
mov
or
cmp
mov
push
je
test
pop
xor
pushf
add
orl
or
xor
into
out
daa
cmp
xchg
xlat
out
in
xor
scas
push
ret
jnp
repnz
mov
sbb
jl
int
outsl
fwait
or
pop
adc
lods
mov
pop
int
lcall
out
push
xchg
in
ljmp
push
xlat
xor
sbb
push
inc
cmpsl
sbb
adc
add
pop
daa
lret
clc
insl
lcall
dec
cld
repnz
inc
test
mov
mov
adc
sarl
es
cmpsl
sub
outsb
movsl
rorl
gs
insl
movsb
test
lret
adc
outsb
mov
cs
aaa
add
mov
jbe
fscale
add
lret
dec
mov
sub
or
test
jne
scas
mov
test
push
jl
ds
dec
lds
xchg
roll
xchg
lock
imul
pop
jae
pop
loope
in
lds
je
scas
mov
js
xchg
scas
sub
xor
xchg
popa
es
mov
push
aas
insb
jmp
pop
add
or
pusha
pop
lret
repz
inc
sbb
aas
mov
arpl
pushf
dec
mov
mov
jge
jnp
lock
cs
adc
je
sarl
in
jmp
int
loopne
in
or
sahf
lea
cmpsl
mov
mov
xchg
dec
inc
or
movsl
call
xor
sbb
outsb
jl
decl
push
sub
cmp
daa
or
dec
clc
jne
arpl
bound
xor
inc
repz
pushf
in
in
daa
imul
xchg
pop
filds
fld1
mov
cld
lods
jecxz
and
hlt
pop
push
mov
aad
repz
sti
push
jg
push
sbb
mov
cmp
pusha
dec
out
je
jbe
add
popf
push
cmp
popa
gs
pop
in
sbb
xor
int
cli
jnp
sahf
and
dec
push
icebp
popf
mov
jecxz
popl
jns
or
mov
enter
repz
xchg
icebp
popf
or
fidivs
xor
inc
xlat
arpl
pop
into
cmpsb
and
or
stos
jmp
mov
jns
stos
xor
lahf
fstp
hlt
rclb
xchg
daa
xchg
out
lcall
jl
movsb
cmp
insl
mov
push
movsb
jo
sub
nop
aam
ljmp
popf
ret
movsb
sbbb
aas
sub
sahf
mov
cld
mov
mov
jmp
xchg
call
push
jmp
mov
jnp
fmul
push
out
add
inc
popf
data16
cmp
mov
and
xchg
dec
inc
insl
xor
sahf
add
push
ror
push
in
cmpsl
into
pushl
push
dec
sbb
rcrl
into
scas
jae
adc
jge
adc
mov
gs
inc
push
int
cmc
bound
xchg
fucomp
push
xor
nop
inc
and
fld
sti
sub
xor
xchg
adc
sub
addl
movsb
insb
sub
adc
inc
dec
dec
dec
cld
cmpsl
je
adc
pop
rorb
arpl
mov
push
aaa
and
push
mov
jge
xchg
jae
aad
repz
movsb
xchg
sbb
js
add
sbb
cmp
hlt
or
pushf
fs
jnp
outsl
xchg
xor
sub
out
push
jmp
cmpsb
rcll
or
push
pop
jge
mov
dec
and
jp
scas
fisubrs
sahf
cmp
das
je
xorl
out
pop
pop
test
adc
repnz
sbb
shl
or
mov
cmpsb
aas
xor
bound
cmp
ret
lahf
das
and
xchg
xchg
add
sub
xchg
sbb
cmp
push
adc
repz
mov
sar
push
cs
pop
add
pusha
xchg
mov
xor
mov
push
pop
je
add
dec
pop
icebp
in
jo
jl
js
jae
repnz
dec
adc
push
push
sbb
add
lret
imul
pushf
jnp
push
jge
push
mov
out
xor
or
sbb
xchg
fbld
pop
sahf
pop
mov
sbb
rcl
popa
push
sbb
cmp
jmp
dec
aaa
inc
xchg
sub
adc
bound
rcl
pop
xchg
ficompl
das
cld
xchg
push
pushf
dec
or
nop
add
sub
enter
and
sbb
mov
or
mov
inc
and
adc
rcrl
cmpsb
and
fistl
sbb
leave
and
push
sub
daa
jmp
mov
fiadds
mov
or
imul
mov
stos
inc
push
loope
out
lods
mov
fcoml
pop
dec
idivb
dec
lock
mov
pavgw
dec
sarb
adc
xchg
mov
es
jecxz
in
inc
mov
and
loop
sub
mov
aad
into
mov
mov
enter
test
sub
movsb
push
rol
add
insb
xlat
ret
sub
movsl
sbb
and
dec
test
sahf
fldcw
repnz
push
inc
add
dec
dec
push
pop
inc
movsb
cmp
adc
xor
pop
or
push
cmc
movsl
lds
filds
and
lea
fisttpl
pop
jmp
insb
inc
xchg
test
ret
fadds
idiv
or
jge
sub
sbb
xchg
xor
ljmp
popa
push
add
insl
mov
mov
ret
das
push
int3
add
test
or
push
sbb
jp
ret
mov
fldcw
jp
out
lock
lcall
sub
cltd
mov
pushaw
adc
mov
and
inc
push
and
sarl
not
inc
in
inc
push
test
cmc
fdivrs
inc
pop
cmp
sbb
out
jg
cltd
pop
push
xor
stos
outsb
mov
pushf
mov
pop
add
xor
imul
adc
lods
fwait
inc
fistps
mov
pop
loop
sub
lret
arpl
and
repz
cmp
adc
int
das
aaa
push
in
in
addr16
test
xorl
js
pop
stos
jmp
mov
je
and
ret
sub
aam
cmp
es
loop
test
cmp
push
loope
mov
mov
scas
cmp
jl
data16
fnstenv
jmp
jb
jno
sbb
inc
push
dec
mov
jge
push
das
test
push
mov
adc
cmp
inc
clc
jle
ror
outsl
movsb
sub
bound
scas
outsl
mov
test
or
fbstp
ror
lods
cltd
addr16
mov
inc
loop
in
popf
add
cmp
or
ret
lods
jns
lret
dec
inc
cld
add
int3
inc
mov
lcall
imulb
icebp
in
adc
outsb
xlat
pop
je
inc
popf
sub
test
jg
les
or
sbb
repnz
aaa
inc
inc
cmp
insl
bound
stos
add
iret
mov
idiv
sub
sbb
ds
fcomps
mov
adc
je
pop
jecxz
cs
test
into
addr16
pusha
xchg
inc
or
pop
mov
adc
dec
cmpl
jno
mov
mov
and
xchg
popl
test
dec
adc
call
mov
cld
arpl
in
add
pop
cmc
adc
pop
test
fistpl
mov
punpckldq
push
cmp
fs
or
lds
sbb
sub
dec
and
jo
lret
int
and
rcl
add
push
mov
pushf
jp
adc
insb
mov
jge
or
cmp
stc
ja
adc
sbb
xchg
fs
jne
pop
outsl
mov
lahf
sbb
cmc
scas
insb
int3
test
cld
mov
jg
inc
adc
fwait
add
gs
mov
ret
dec
es
mov
je
rcl
push
push
loope
lods
pop
inc
fistps
jbe
pop
lds
in
and
repz
adc
je
push
mov
sbbb
sbb
sbb
ret
cmpsb
pushf
out
je
fwait
stos
ss
repz
fstpt
sahf
sbb
add
jno
push
cmp
mov
inc
mov
repnz
push
xchg
scas
sbb
lds
pop
cmp
int3
fists
in
cmc
ret
and
cli
mov
mov
cmp
shll
inc
cmpsl
mov
xchg
lret
mov
addr16
pop
jo
movsb
cmp
push
fsubl
in
xchg
mov
test
icebp
fsubrl
mov
xor
mov
in
lods
mov
mov
gs
test
xchg
mov
addr16
fstl
cwtl
sarb
mov
shll
mov
dec
es
adc
xor
and
icebp
adc
xchg
cmp
push
sbb
push
mov
cs
filds
adc
dec
sti
sbb
fstp
scas
mov
lahf
popa
jne
cld
ret
inc
xchg
sti
pop
pop
xchg
ret
or
xlat
scas
pusha
lock
pop
cmp
cltd
add
arpl
sbb
shl
jg
insb
inc
leave
or
add
daa
mov
scas
push
cmp
fdivrl
sub
push
outsb
notb
andl
cli
mov
sbb
and
punpcklbw
test
cmc
jbe
adc
or
mov
insb
sub
adc
lea
dec
test
std
gs
sub
mov
inc
adc
or
inc
push
pop
mov
push
push
mov
out
jmp
jb
fs
xor
sub
lcall
xor
xchg
cmp
or
in
in
mov
jle
nop
or
mov
lods
sahf
xchg
cmp
cmp
mov
lahf
push
cltd
addr16
and
aam
or
and
arpl
jns
xchg
add
push
sbb
mov
pop
xchg
xchg
mov
es
sub
mov
lds
mov
mov
loop
loop
fstpt
sahf
mov
pop
ja
adcl
fildll
js
in
mov
movsl
mov
xchg
shll
loop
adc
pop
inc
inc
ss
push
inc
cmpb
and
cmp
add
inc
imul
testb
int3
pop
adc
push
cmp
lret
xchg
push
add
sub
push
fcoml
out
dec
add
xchg
lods
xchg
and
mov
xor
lea
daa
shlb
fwait
and
in
in
inc
fisttpl
and
clc
fsubrs
ss
pushl
jns
nop
mov
push
icebp
es
jae
xchg
mov
inc
rcll
pushf
movsb
mov
ja
push
lods
jmp
xchg
xchg
jmp
xor
push
mov
inc
fldl
adc
xor
bound
aam
lods
jne
stc
clc
xlat
js
mov
sbb
fisttpl
pop
and
push
lock
stos
out
daa
rorb
jb
sbb
xchg
cld
push
mov
enter
and
xor
xor
lcall
adc
jns
mov
sub
jmp
adc
je
rclb
fmull
shll
in
and
mov
pop
stc
lods
ret
add
gs
daa
xor
inc
stos
arpl
lock
inc
sub
add
inc
jg
jo
rorb
and
and
loop
jl
in
jo
sub
cld
sbb
push
pop
clc
ret
data16
test
stc
xchg
xchg
xchg
mov
dec
mov
push
or
xor
test
ljmp
sbb
cmpsb
inc
movsl
inc
loope
jg
loop
or
imul
repnz
dec
out
jbe
jbe
push
mov
pop
pop
inc
xor
cmp
fwait
cmc
outsl
out
in
mov
ds
outsl
cwtl
ljmp
inc
lret
adc
mov
or
mov
lods
mov
cmp
pop
lds
leave
cltd
addr16
ret
xchg
lock
rcl
dec
adc
test
xchg
sub
dec
inc
unpckhps
lea
jp
jecxz
shll
inc
mov
stos
test
testb
jno
aas
pop
data16
imul
leave
movsb
popa
jbe
add
aam
mov
mov
mov
push
jo
cmp
clc
loopne
lret
mov
and
xor
test
popf
jp
faddl
dec
xchg
cltd
stos
test
movsl
stc
inc
mov
mov
pop
js
sbb
and
sub
cmp
pop
loope
dec
and
mov
std
lahf
and
or
lahf
inc
stc
sbb
dec
cltd
fistpl
sbb
jle
cmp
push
push
mov
pop
sub
jns
inc
mov
adc
push
sub
lret
mov
cld
sub
orb
xchg
sub
dec
mov
pop
call
cld
sbb
lds
gs
pop
push
mov
inc
lret
cwtl
cwtl
push
aas
ljmp
xor
fstpl
popfw
and
pop
in
in
in
mov
xchg
xchg
sub
int
inc
adc
loop
mov
xor
dec
lret
jb
xor
mov
test
adcb
dec
aad
fmull
add
inc
fwait
jecxz
iret
cs
xchg
push
xchg
jnp
out
out
enter
mov
jmp
sbb
mov
inc
sub
popf
push
cmpb
mov
jae
sahf
stc
mov
and
jb
movsb
icebp
das
cltd
dec
fidivs
cmp
pop
cmp
xchg
xorb
out
inc
or
jns
leave
pop
neg
call
sbb
imul
test
in
shll
push
loopne
push
mov
pop
pushf
pop
dec
add
outsl
loopne
mov
aad
sahf
out
stos
cmp
ja
or
jbe
leave
mov
in
pop
cwtl
repz
xchg
das
rcl
add
mov
fldenv
xor
sbb
and
scas
cmpl
dec
popa
mov
daa
sub
outsb
mov
jge
fildll
cwtl
sahf
xlat
add
clc
cwtl
in
mov
xchg
ja
dec
inc
inc
mov
xchg
insl
jge
cmp
stos
and
jecxz
xchg
popa
add
inc
scas
or
sbb
xchg
cmp
dec
sbb
push
jle
push
cmpsb
popf
sub
fisubrl
push
xchg
insb
test
dec
xlat
sbb
sahf
pop
mov
pop
and
dec
movsb
inc
stos
dec
rorl
mov
icebp
jne
gs
mov
push
jno
mov
mov
push
cmpsl
pop
out
pop
fcompl
mov
lret
mov
jns
cmc
pop
add
inc
mov
int
out
mov
out
fisubs
repz
cmp
sub
cmpb
inc
fucomp
mov
into
test
add
dec
in
in
xchg
or
repz
adc
add
cmp
xor
cmp
mov
inc
lret
dec
gs
mov
mov
adc
and
fcoml
xchg
cmc
adc
insb
jo
adc
icebp
and
jb
adc
cwtl
xchg
and
fidivrs
xchg
push
xlat
or
adc
test
sti
cmpsl
fcomp
pop
lods
inc
cwtl
sub
in
lcall
out
ljmp
lret
xchg
ret
aas
xor
or
xor
test
inc
loop
scas
int3
cli
ds
scas
mov
into
scas
das
dec
cwtl
mov
loopne
or
sub
leave
push
cltd
ss
push
insl
pop
pop
sub
pop
mov
cli
cmc
aas
ja
in
stos
mov
inc
pop
jne
mov
dec
aad
fcompl
ss
icebp
xchg
adc
sub
dec
out
inc
inc
push
pop
or
sbb
jmp
shrl
stos
fld
mov
pop
xlat
orb
jge
push
mov
cmp
fwait
daa
cmpsb
sbb
cmpsb
popa
jnp
mov
hlt
out
fnsave
scas
imul
mov
pop
scas
lock
scas
cmp
mov
ja
pop
mov
xchg
stc
in
lds
mov
xor
clc
repz
dec
repz
pop
mov
xchg
arpl
or
xchg
push
cmp
pop
xor
push
sti
sbb
mov
mov
repnz
sti
and
jns
cwtl
movq
add
out
ret
popa
sub
pop
movsl
xchg
mov
xchg
jmp
insb
xor
mov
fisttpll
push
inc
cltd
sbb
movsb
stos
loop
adc
ljmp
in
scas
push
mov
mov
mov
jo
cmc
inc
cmp
out
add
insb
push
aaa
loopne
enter
rcl
test
sub
movsl
cmp
divl
or
push
xor
jns
pop
lock
or
pop
int
push
adc
jge
adc
pop
sbb
cmpsb
ffreep
xor
cld
sbb
adcb
or
dec
mov
xchg
loope
mov
push
mov
ja
test
nop
popa
call
lods
jg
lret
dec
ss
mov
push
lret
mov
push
arpl
scas
xchg
addl
rorl
push
or
ss
mov
inc
ja
sar
push
scas
cltd
int3
jnp
push
in
pop
dec
mov
fiadds
out
ljmp
push
adc
sub
add
xor
aas
insb
add
jbe
leave
pop
popf
les
stos
mov
jne
enter
ficoml
xor
outsl
sbb
fwait
or
out
xchg
mov
cmp
push
cld
jae
mov
xlat
movsbl
jo
lea
dec
insb
icebp
hlt
int
lcall
xor
ds
dec
pop
push
imul
std
cmp
pusha
mov
jo
sti
cmpsb
cmp
push
or
mov
push
sub
data16
mov
dec
loopne
jae
jae
repz
or
xchg
jle
out
dec
add
stc
push
adc
iret
shr
ljmp
pushf
or
xor
insb
mov
jmp
and
xchg
push
inc
movsl
test
clc
push
inc
arpl
push
popa
push
cmpsb
out
ss
xor
int
repz
xlat
pop
je
js
es
cli
xor
fsubp
push
lea
and
dec
dec
fisubrl
pushf
inc
mov
lret
pusha
dec
sarl
movsb
pop
ret
jmp
push
xchg
and
xor
push
in
mov
xchg
jle
rorb
sub
jle
rorb
push
dec
dec
repz
ret
push
jno,pt
jnp
add
xchg
pop
rcll
jge
ds
test
mov
adc
in
enter
fists
xchg
dec
fucomp
call
loop
mov
jl
jmp
or
and
gs
dec
add
out
test
jae
lret
pop
aas
cmp
mov
or
push
fcoms
pop
pop
or
lock
push
cwtl
push
lods
xor
push
out
das
jmp
andb
inc
scas
push
and
repz
pop
stos
cmp
call
je
xchg
fisubrs
or
push
and
pop
mov
test
in
cmp
xchg
shrb
xchg
push
int
fsqrt
sub
jmp
in
shll
int3
jnp
outsl
cmpsb
sarl
adc
cmc
je
sub
enter
in
xchg
imul
vpaddusw
push
mov
cltd
jle
jb
add
mov
pop
mov
std
cmp
mov
ds
icebp
jae
jmp
jge
fs
lret
imul
fbstp
test
outsl
mov
ss
lds
les
fldl2t
mov
jne
or
xchg
cld
ret
sub
mov
cmc
add
cli
pop
sbb
xchg
inc
test
pop
cli
cmp
lds
mov
cmpsl
mov
rep
cmpb
push
add
xchg
xor
icebp
cmp
lds
int
and
fbld
xchg
aaa
sbb
fldenv
in
es
mov
dec
adc
sub
mov
lahf
arpl
es
std
rcl
mov
sub
or
adc
into
or
out
mov
hlt
pop
fsubp
outsb
rolb
loopne
sbb
out
push
pop
fwait
pop
mov
fildl
lods
out
clc
cmp
and
or
in
loope
sti
outsl
repz
out
das
dec
and
cli
lret
stos
repz
push
xor
and
and
pop
test
sahf
ret
test
xor
mov
pusha
jmp
sub
mov
push
gs
xor
mov
adc
mov
int
leave
push
and
addl
ja
mov
out
loopne
inc
push
ret
out
movsbl
dec
mov
add
out
adc
jge
in
jo
add
dec
cs
int3
push
jae
ret
js
leave
pop
mov
mov
xchg
sbb
cmp
cmp
pop
cltd
xchg
mov
repnz
dec
enter
or
out
jge
jl
push
aam
and
pop
clc
push
cmpsb
sbb
stc
sbb
sub
test
pop
ss
outsb
pop
scas
jmp
mov
pop
xlat
xchg
fcmove
dec
sar
ja
ljmp
daa
ljmp
cmp
lods
addl
mov
sub
int
pop
aaa
pminsw
add
shl
fldenv
shrb
test
stos
add
push
jo
in
test
into
inc
dec
push
jnp
pop
testb
data16
popf
fisubs
ss
sub
and
loopne
insl
inc
fidivrl
mov
test
dec
ret
and
into
xchg
mov
xor
ds
es
xchg
xchg
icebp
mov
xor
xor
jne
xchg
or
xor
gs
adc
imul
shll
aaa
sti
add
stos
push
lcall
pushf
cmc
or
mov
inc
cld
and
or
push
addr16
xor
lahf
add
mov
in
and
pop
cmp
sbb
movsb
loop
push
rol
inc
add
testl
lds
mov
lahf
bound
out
adc
scas
loop
out
mov
xor
nop
xor
lds
jp
sti
setle
jb
push
or
push
std
jbe
xor
adc
xchg
xchg
xchg
jno
enter
mov
popa
orb
arpl
fsubrs
mov
ljmp
movb
or
pop
in
js
inc
aaa
rol
dec
insl
pushf
sbbb
cmpsb
push
xor
pop
scas
mov
lock
sbb
pop
sub
cmp
pop
mov
pop
xchg
scas
add
cmp
jns
and
cmpsl
push
ss
sub
push
fildll
dec
mov
in
adc
sbb
pop
mov
orl
xchg
pop
add
pop
adc
popa
in
xchg
movb
push
divb
in
leave
push
stos
into
aad
adc
adc
lods
cmc
lret
mov
int3
sub
aaa
orl
adc
pop
sub
or
push
or
ret
push
xchg
lret
xchg
rcr
or
scas
inc
sbbb
pop
dec
adc
cmc
or
inc
movlps
sbb
add
shlb
in
pop
clc
pop
dec
adc
mov
shl
push
or
insb
mov
sub
scas
xchg
push
mov
into
xchg
and
js
adc
adcb
push
cs
push
inc
and
jp
daa
lea
adc
dec
inc
fbld
lahf
lods
lods
arpl
inc
pop
enter
jmp
push
lret
fstpl
push
xchg
or
cmc
xlat
cwtl
mov
shr
mov
cltd
mov
xchg
sbb
cltd
sbb
shrb
leave
in
imul
add
lret
push
mov
cmp
sti
das
test
push
fists
fcmovnb
dec
add
fldt
lods
clc
inc
push
stos
es
into
lea
aaa
in
cltd
out
fcmovb
push
add
inc
push
mov
add
js
mov
cmpsb
mov
mov
inc
out
add
add
jbe
movsl
fcomps
int3
andl
jecxz
idivl
ss
imul
adc
cmp
leave
adc
sbb
xor
jnp
adc
mov
hlt
jne
xchg
xchg
inc
in
arpl
mov
push
out
sub
clc
fbld
xchg
pop
mov
push
cmpsb
aam
stos
jno
test
jp
cmpsl
cltd
ljmp
sbb
add
mov
or
clc
sbbb
or
int3
outsl
pop
jno
cmp
mov
lock
jae
push
mov
lods
add
jo
and
xchg
push
push
mov
xor
sub
jl
fs
jl
xor
movsl
mov
insl
pop
out
mov
push
push
push
jnp
push
fmuls
ljmp
mov
dec
es
cmp
inc
jae
lock
jae
jb
sbb
cmp
lret
mov
mov
push
cmp
jge
rorb
lea
mov
adc
xor
mov
dec
dec
jns
aad
mov
jo
adc
mov
push
repnz
rcrl
jg
fsubp
stos
inc
pop
lahf
mov
lea
sub
push
data16
loopne
es
pop
addr16
adc
ljmp
jmp
mov
ja
mov
cmpsb
xchg
jae
mov
cmp
fistps
xchg
or
stos
jno
mov
sti
push
jle
push
aam
mov
push
push
out
dec
mov
les
push
cld
push
mov
jns
push
sarb
cmp
push
mov
cs
loop
cld
sbb
outsl
addr16
out
movsl
fistps
test
push
dec
adc
sbb
cmpsl
insl
or
push
xor
push
hlt
adc
xor
clc
sbb
scas
mov
mov
and
and
icebp
iret
fcoms
loope,pn
das
jne
mov
leave
mov
scas
loope
outsb
xchg
ret
inc
popf
stc
cli
jg
dec
cmp
add
sub
sbb
icebp
rcr
pop
cwtl
stos
cmpsl
and
scas
sub
fucomp
add
paddq
out
enter
lahf
mov
sbb
cmpsb
fldenv
mov
mov
pop
push
add
lret
fiadds
js
insl
inc
ljmp
bound
ret
jno
jg
inc
test
inc
aas
and
jnp
mov
int3
xchg
in
gs
cmc
sbb
in
in
repnz
jbe
mov
inc
cmp
lods
dec
mov
adc
inc
xor
xchg
fildll
sbb
ja
ljmp
or
xchg
scas
mov
add
sub
push
push
jno
arpl
fstpl
jl
and
mov
nopl
insb
and
push
cld
mov
rclb
pop
popf
enter
mov
in
jnp
sbb
jns
shrb
or
push
add
int
xchg
outsl
pop
xchg
mov
ljmp
mov
lahf
insl
inc
pop
push
add
ljmp
je
in
sarb
gs
loop
mov
adc
out
sti
pop
ret
cmp
mov
mov
add
jmp
xchg
jne
inc
std
fucom
pop
ljmp
xor
or
sub
sub
pop
clc
sub
nop
inc
push
push
add
stos
pop
mov
mov
mov
icebp
push
test
jbe
dec
mov
add
andl
pushf
enter
jg
cmpsb
cmp
jmp
and
movsb
ja
loope
jnp
mov
pushf
cmp
cmp
dec
lea
xchg
pop
movsb
cli
outsb
insb
inc
hlt
jne
xor
inc
adc
jle
jo
roll
jbe
push
shlb
mov
out
loopne
stc
pop
or
xor
xchg
ss
push
push
aam
and
push
ds
dec
dec
xor
push
xchg
outsb
adc
outsb
and
aam
pop
push
repnz
inc
ret
aaa
aas
and
mov
xor
fidivrs
pop
iret
mov
mov
fistl
pusha
sub
fwait
repnz
mov
jg
fs
and
loopne
or
sub
cmp
pop
add
jmp
shlb
mov
jae
mov
std
dec
xlat
cmp
and
iret
das
jo
mov
add
push
cmp
das
enter
daa
lds
std
xchg
dec
int3
lahf
xor
data16
jno
push
push
xchg
sbb
pushf
sbb
adc
lods
dec
test
adc
inc
push
je
xor
and
ret
in
add
or
fstpl
mov
or
nop
xchg
dec
aas
pushf
adc
clc
movsb
repnz
push
lea
xchg
call
mov
stos
sub
jnp
nop
push
xchg
mov
daa
jle
ret
add
iret
cmp
lods
pop
mov
and
and
pop
icebp
scas
sub
jg
mov
out
test
sahf
js
clc
ret
sub
cmp
fwait
inc
scas
insb
insl
mov
nop
cmp
daa
mov
lret
scas
repz
mov
xor
xchg
inc
addr16
ja
mov
ja
pop
je
add
push
inc
jbe
aad
pop
mov
notb
outsl
or
sub
mov
shrb
push
mov
and
add
shlb
lods
jno
aas
sahf
hlt
lea
repz
pop
adc
out
push
xor
jno
push
xchg
hlt
pop
inc
mov
imul
inc
pop
push
aas
hlt
mov
cltd
inc
mov
adc
add
push
fimull
mov
and
call
pop
sbb
imul
xchg
stos
add
int
shll
ljmp
int
jl
rep
pusha
mov
mov
pushf
xchg
fldcw
iret
push
int
sti
mov
movsb
into
pusha
or
pushf
ljmp
push
cwtl
xor
pop
inc
icebp
lock
and
sbb
sub
and
out
push
js
xchg
idivl
pop
rorl
pop
push
jb
outsb
mull
in
popf
or
lret
push
cmp
stc
jmp
mov
jno
pop
std
mov
in
adc
sub
and
cmpsb
pop
dec
fs
add
adc
nop
movsl
and
xor
mov
orl
push
or
pop
sarl
pop
fadds
add
shl
in
xorl
outsb
lea
jmp
shlb
addr16
fcoml
andl
mov
mov
lcall
dec
addr16
xchg
gs
loop
ret
cli
and
push
lds
jns
std
push
movsb
xor
fidivrs
clc
aad
pop
in
xchg
enter
loopne
cmp
jecxz
jns
jns
jle
jmp
mov
jno
cs
inc
and
sub
pop
add
pop
arpl
push
jp
cmp
inc
mov
imul
sub
inc
stos
jb
les
jnp
mov
inc
adc
pop
sub
popf
lds
mov
mov
scas
cmp
popf
xor
jmp
cmp
inc
jl
scas
fs
mov
dec
xchg
rcr
xor
add
mov
adc
mov
mov
aam
neg
dec
std
ljmp
lcall
push
push
js
repnz
in
sbb
sbb
sub
xchg
jle
or
aas
xchg
or
jecxz
pop
and
dec
inc
pop
mov
popf
mov
inc
cmp
xchg
int
aaa
jmp
pusha
in
ds
push
mov
jle
push
sub
sahf
dec
jle
pushf
imul
and
std
pushf
jmp
icebp
aaa
push
nopl
push
pusha
jno
cld
dec
push
dec
sub
lret
inc
mov
jo
in
push
rclb
inc
insl
mov
and
or
xor
pop
mov
push
inc
pop
adc
shll
push
scas
jnp
stos
das
push
scas
movsb
shll
jne
pop
or
mov
xchg
test
fisttpl
jbe
cmc
js
xor
lea
cs
add
dec
mov
mov
dec
call
repnz
inc
add
gs
daa
xchg
ret
sbb
pop
push
jno
stc
mov
xor
and
cmp
arpl
push
roll
mov
mov
fsts
insb
fsubr
lds
push
mov
cmpsl
test
into
call
mov
je
sbb
add
jmp
das
push
icebp
insl
jecxz
xor
repnz
jg
outsb
sahf
rep
js
xchg
inc
lret
xchg
iret
jmp
test
mov
test
popl
mov
lret
mov
dec
lcall
lret
xor
adcl
inc
out
lcall
cli
fs
or
xchg
push
inc
add
lock
xor
fs
push
lods
dec
cs
js
xchg
movsb
sub
mov
aam
xor
push
out
adc
pop
push
les
add
pop
imul
jecxz
lds
jae
pop
jge
gs
pop
lahf
push
mov
sarb
fimuls
lret
mov
jb
repnz
inc
rcrl
ds
cmp
xchg
insl
fldl
jle
inc
cltd
mov
xchg
imul
add
outsb
xor
fdiv
mov
adc
fcmovnu
nop
lea
sbb
insl
stc
lret
in
adc
fmuls
dec
mov
inc
cld
lea
aad
ja
in
jo
out
push
das
jg
add
cmp
shrl
mov
out
aam
or
js
pushf
xchg
mov
popa
or
fidivl
jo
mov
lret
std
std
cmpsb
insl
or
push
xchg
mov
out
repnz
sbb
loope
ret
and
in
test
add
mov
int3
dec
enter
outsb
in
lcall
mov
leave
mov
cmpsl
xchg
or
data16
or
std
scas
pop
xchg
mov
rcr
jle
cmpb
fstl
cli
punpckldq
mov
push
sbb
dec
jecxz
mov
mov
sti
cmc
insl
fistpll
and
dec
mov
into
jns
mov
shll
xchg
mov
cmpl
jmp
imul
jp
sub
inc
and
add
pop
fsubs
lcall
jmp
imul
and
xor
and
and
popa
in
jno
mov
addl
nop
adc
mov
ds
sbb
inc
jne
cmp
movsl
test
mov
popa
stos
jae
dec
add
jge
xchg
imul
lods
add
or
pop
ror
outsb
push
aad
movsl
test
rclb
sub
pushl
jmp
push
and
pusha
lds
lret
into
lahf
enter
mov
pop
cmp
xchg
jne
aad
stos
jmp
scas
lcall
xchg
fcos
gs
sbb
mov
jl
pop
test
int
pop
jne
sub
bound
lods
xchg
inc
inc
mov
lds
xchg
pop
daa
xlat
cwtl
leave
testb
cltd
mov
mov
pop
shl
push
jmp
mov
jle
imul
dec
lods
xlat
aas
seta
sbb
out
push
xorl
call
dec
ss
aad
mov
push
cmpb
test
js
fcomps
mov
stos
lea
push
std
sbb
movsl
cld
adc
popf
xor
data16
jle
fiaddl
xchg
mov
mov
mov
cs
add
out
imul
call
aas
cmpl
push
cltd
loopne
xchg
fdivs
or
jnp
insb
mov
gs
xor
daa
in
int3
dec
or
cmp
xor
subb
lds
rcl
pop
xchg
or
shll
jnp
pop
or
push
push
xchg
add
stos
jne
mov
sti
test
dec
inc
mov
sub
icebp
push
push
int
pop
pop
or
jne
clc
mov
popf
fmul
stos
jae
enter
jmp
aas
lret
loop
jno
xorl
jnp
inc
add
dec
sar
sbb
out
mov
jmp
xchg
cmpsl
clc
inc
lret
scas
cmp
xorl
int
jg
mov
mov
mov
rclb
push
and
sub
and
pop
cs
mov
test
rol
es
mov
adc
mov
xor
pushf
xor
push
sbb
repz
xchg
pop
pusha
cld
push
fisubrl
popf
or
test
std
lcall
mov
or
push
je
popf
popf
movsb
cwtl
or
or
adcb
mov
xor
xchg
out
inc
sbb
sbb
js
loopne
xor
pop
scas
loope
mov
and
pop
sarb
sbb
out
lcall
adc
xor
lahf
hlt
xor
ret
push
jbe
jno
shrl
mov
xchg
loop
int
mov
mov
xchg
xchg
xor
popa
add
hlt
stos
push
jg
mov
jle
and
dec
imul
mov
sbb
and
popf
xor
mov
push
pop
shrb
add
fs
jmp
lcall
fsubr
popa
mov
shll
fcmovbe
push
std
out
adc
in
pop
add
and
and
sbb
cmp
incl
dec
push
mov
cmp
mov
lcall
cwtl
pop
jl,pt
ss
sbb
sbb
add
rcr
push
cmp
inc
sub
sar
shlb
jl
xchg
js
or
jo
mov
or
stc
push
xchg
jb
sti
out
dec
test
aad
dec
or
cltd
sub
mov
addb
or
inc
sbb
sbb
mov
fwait
or
cmp
xor
pop
loopne
jl
stos
mov
lock
add
and
push
sub
sti
sbb
adc
jns
push
push
pushf
cmpsb
outsl
mov
mov
movsl
shr
in
fwait
pop
sbb
and
add
pop
adcb
push
fs
xchg
loope
lcall
jns
enter
in
cli
les
pop
push
pop
mov
mov
xor
pop
imul
gs
ss
sbb
fs
and
sub
mov
mov
lods
sub
push
lods
jo
pop
jmp
arpl
or
std
or
das
cwtl
in
jg
adc
mov
mov
popf
mov
call
xlat
hlt
lods
push
js
je
pop
add
pusha
xlat
out
lds
mov
xor
sti
inc
mov
orl
popw
rcr
add
and
test
gs
or
pop
and
imul
mov
lods
dec
xchg
aam
iret
jae
ja
lcall
cmpsb
add
and
inc
cmp
xchg
pop
daa
cltd
sbb
fnstenv
cmpsb
aam
stos
fcoml
popa
ror
jnp
adc
mov
push
push
dec
mov
push
andl
inc
out
fdivs
dec
inc
add
add
int
mov
mov
pop
rolb
cmp
xchg
inc
out
stos
jmp
jnp
fsubrs
test
xchg
sbb
aam
fistpll
fsubl
aam
rorl
jns
daa
in
outsl
leave
pop
ret
or
jmp
les
fcmovbe
sbb
and
push
call
in
jbe
push
rorl
add
inc
aam
push
out
sbb
scas
mov
loop
add
xchg
jo
ds
push
fsubrl
cwtl
mov
jp
in
inc
ret
add
test
add
aas
inc
xchg
or
or
mov
inc
mov
add
jmp
test
sahf
cmp
and
stc
push
or
js
mov
stos
xor
fsubrs
adc
pop
xor
lds
push
cmpsl
mov
cmp
push
out
cmp
jmp
and
mov
sbb
pushf
js
pusha
test
insb
or
jo
rolb
sti
enter
or
push
inc
int
cmp
adc
aas
or
mov
cmp
ret
das
loop
pop
out
xor
cs
jmp
mov
enter
push
pop
jecxz
mov
push
pop
clc
je
fwait
jb
mov
nop
hlt
dec
mov
fbstp
mov
sbb
pushf
in
repz
lret
cs
adc
and
mov
ja
test
lahf
xor
lea
mov
inc
test
shl
mov
iret
pop
fwait
mov
push
mov
pop
imul
jmp
int
cmp
dec
je
inc
in
mov
push
sbb
sbb
inc
test
xchg
aas
sub
dec
lret
cwtl
lea
jb
outsl
dec
in
inc
add
dec
out
pop
mov
or
or
mov
clc
test
or
mov
xchg
dec
pop
jle
inc
lods
test
push
in
xor
loopne
addb
icebp
rorl
test
cli
add
xor
mov
sub
mov
inc
rolb
jmp
add
xchg
out
xchg
pop
lods
adc
jo
push
sarb
jae
and
enter
das
xchg
xor
jae
inc
jp
dec
or
push
cld
or
movsb
push
or
nop
ss
xlat
sbb
xchg
jmp
out
ret
cmp
mov
movl
sti
out
inc
scas
xor
sub
jge
cmp
enter
stc
das
popf
jo
xor
sti
adc
xor
cmp
push
dec
push
push
js
dec
testl
mov
lahf
aaa
add
insb
mov
cmpsb
mov
jnp
xchg
jne
int
or
nopl
popf
mov
ds
xor
or
jb
mull
lods
loope
or
adc
jecxz
fidivrs
push
adc
mov
scas
movsb
adc
jecxz
outsl
imul
xchg
xchg
imul
xor
aaa
jmp
test
fnstsw
je
call
lods
roll
loop
xchg
ret
jl
shl
loope
dec
push
sub
ss
popa
inc
jle
jbe
push
jp
ret
dec
jle
add
inc
inc
mov
cmp
in
dec
pop
xchg
loopne
ret
bound
or
mov
testl
in
xchg
push
int
mov
cli
cmp
bound
mov
mov
call
jb
xor
mov
inc
cmp
jle
mov
push
imul
push
jg
jbe
mov
push
sbb
inc
mov
push
out
xor
sbbb
push
es
mov
sub
repz
and
xorb
sarl
push
fdivrl
mov
xor
add
fisubl
imul
jb
testl
repnz
movsl
xlat
mov
mov
pop
popl
out
add
dec
xchg
pop
sbb
nop
cwtl
fsubr
loop
daa
arpl
lcall
adc
mov
dec
pop
lods
inc
daa
jo
mov
pop
in
int3
scas
jge
cmp
aam
adcl
lea
ret
sarl
cmp
fmulp
jecxz
xchg
loop
fs
into
jae
dec
mov
adc
jo
dec
or
les
push
shlb
cli
adc
cmp
loope
sub
cmpsb
mov
sub
les
cmc
adc
out
lea
and
imul
xor
sbb
push
and
cmp
xlat
fucom
xchg
mov
ret
les
xor
pop
mov
sbb
aas
jnp
ljmp
adc
js
add
cs
xor
cmc
push
lock
dec
loop
into
xchg
es
jl
sbb
in
clc
pusha
fdivrl
sahf
aad
ror
cmp
jbe
inc
hlt
inc
cmp
mov
push
sbb
jnp
mov
mov
enter
loop
mov
push
push
or
sbb
jmp
cmp
lods
lock
nop
add
repz
das
add
movsl
mov
movsb
js
int3
popa
and
or
sbb
lahf
outsl
dec
adc
lea
lock
cmp
ja
mov
jge
add
fldcw
lock
call
pop
bound
jnp
sbb
insb
mov
cmp
fcmovnb
dec
add
adc
aad
test
insl
dec
push
repz
rcll
push
ret
sub
nop
sub
mov
mov
pop
sub
xchg
es
incb
pop
push
mov
stos
or
shrb
sub
push
mov
movsb
imul
and
mov
popf
sbb
pop
mov
mov
dec
in
ss
jmp
dec
push
jnp
enter
sub
rcll
cmpsl
aas
cmp
jno
mov
pop
push
stos
popf
daa
fsts
mov
or
jnp
hlt
mov
mov
or
xor
xor
pop
pop
std
dec
sub
adc
movaps
jbe
std
mov
inc
lahf
adc
mov
enter
cmp
andl
mov
mov
push
out
aad
lea
imul
js
push
adc
pop
add
rcll
dec
lods
mov
cmpsl
loope
pop
inc
mov
ds
jae
inc
repz
stos
fisubs
xlat
in
scas
sub
sub
push
mov
jge
je
push
inc
cmp
icebp
and
xor
dec
loop
pusha
and
sbb
add
pop
cmc
hlt
jne
in
jae
cmp
jb
mov
mov
or
sbb
int3
push
repz
movsl
jne
xor
shlb
scas
inc
test
xlat
sub
insb
pop
add
xchg
loope
push
mov
inc
hlt
aam
popa
les
mov
xor
mov
cmp
std
ror
icebp
and
and
wbinvd
or
scas
stos
ficoms
cmc
push
aam
lds
repnz
pop
rcrb
mov
sub
xor
mov
pop
jmp
xor
in
hlt
lret
fisttpll
movsl
add
sbb
sbb
fstpt
test
ss
sbb
testb
adc
and
mov
xchg
test
jns
sub
cmc
rorl
dec
inc
mov
sbb
jecxz
shll
fwait
sbb
cmpsb
or
dec
mov
call
push
aad
xor
mov
add
outsl
pop
jns
das
ljmp
push
sub
push
inc
pop
sbb
movsl
sub
mov
adc
insb
cmpb
add
sahf
cmc
mov
sbb
arpl
inc
daa
pop
in
add
daa
jnp
cmp
push
pop
jns
mov
sub
add
add
sub
iret
cli
aad
sub
sbb
xor
icebp
imul
xor
leave
and
mov
and
pop
fs
in
pop
cmp
rclb
and
inc
dec
push
cmc
in
mov
push
or
mov
int
push
xchg
add
rcl
adc
sti
or
lcall
inc
jg
enter
sbb
adc
add
jg
jge
mov
mov
daa
sub
cmp
mov
dec
pop
pop
into
xchg
mov
test
xor
and
adc
orb
int3
xchg
enter
push
inc
inc
pushf
aaa
jne
mov
pop
add
scas
mov
fwait
inc
mov
pop
cwtl
mov
pop
cli
jp
jns
sbb
cmp
repnz
mov
movsl
lcall
cmp
push
sbb
add
cmp
sub
mov
mov
adc
insl
and
adc
lret
out
fistps
xchg
pusha
cli
adc
stc
loopne
dec
int3
test
or
inc
mov
movl
repz
jb
mov
xor
mov
lock
dec
data16
dec
enter
dec
call
pusha
cmp
cmp
add
adc
xchg
adc
xchg
fcomps
add
lock
dec
out
or
sbb
adcl
mov
adc
std
out
xor
test
repnz
insl
pop
pop
cli
cmp
popf
mov
push
cmp
xchg
pop
js
jnp
aas
xor
mov
icebp
icebp
sahf
jno
aad
mov
xchg
popf
or
pop
into
jns
cmp
pop
int
ljmp
scas
adc
and
das
jl
xor
sbb
clc
cmp
mov
cmpsl
lcall
es
push
sub
jmp
push
addl
cld
jb
js
insl
bound
push
cmp
shlb
mov
inc
dec
addr16
imul
popa
loop
data16
push
ret
test
sub
fwait
dec
xor
stc
movsw
jg
fchs
or
stos
mov
jne
add
xchg
shrl
sub
call
xchg
xor
cs
cld
ret
mov
cmp
bound
and
dec
inc
sub
fldl
cltd
outsb
pop
imul
adc
leave
xor
or
sbb
into
js
pop
push
js
xor
in
fwait
rcl
push
xor
add
inc
mov
and
in
xor
inc
lock
inc
cmp
pop
sbb
lret
dec
lods
and
mov
jns
push
dec
jge
sbb
bound
lcall
add
push
ret
adc
or
add
cmp
ljmp
push
adc
loop
mov
xor
movsb
mov
cmp
sbb
lahf
andb
mov
mov
loop
pop
mov
in
iret
adc
mov
dec
outsl
popf
pop
mov
push
mov
aam
add
adc
cmpsb
dec
or
popa
daa
xchg
add
dec
adc
mov
jmp
ror
cwtl
xchg
movups
sbb
stos
insl
or
lods
in
negb
push
fwait
data16
sub
jle
add
jecxz
ret
movsb
push
sbb
pop
dec
popa
lret
pop
addr16
sub
ret
repnz
sti
mov
inc
mov
xor
mov
stos
xchg
or
pop
ret
or
outsb
sbb
inc
xchg
cmp
and
xor
xor
push
adc
aaa
push
xchg
lods
int3
dec
dec
cli
test
cmp
stos
xor
mov
mov
pop
addr16
movsl
inc
xor
pop
pop
sbb
mov
mov
pop
push
push
cltd
push
inc
jne
cmp
arpl
add
testl
je
scas
out
int3
mov
sbb
mov
pop
faddp
xor
mov
movsl
mov
push
lods
inc
test
into
aam
jb
sar
pop
adc
clc
sub
add
cmpsb
test
push
or
mov
sbb
pop
fwait
test
pusha
aas
inc
cmpsl
xor
xchg
roll
shll
dec
jmp
ror
stc
push
in
aas
rcr
push
movsb
dec
jmp
cmc
cld
idiv
sub
jnp
fldcw
lahf
jns
call
jns
mov
das
loope
pop
inc
mov
sub
mov
lcall
sub
fidivrl
xor
out
call
stos
arpl
imul
xor
arpl
cs
sbb
lahf
mov
repnz
push
loop
pop
lods
addr16
push
add
cltd
push
xorb
xchg
mov
jbe
adc
jmp
iret
test
inc
jno
and
divl
mov
hlt
mov
adc
int3
ret
lret
data16
push
xor
and
pop
shrb
mov
xor
into
mov
mov
mov
out
jmp
pusha
push
into
in
fstpl
mov
decl
test
vpcmpeqw
ds
lahf
cli
fistpll
movsb
push
mov
cs
add
mov
or
int
dec
add
cmc
add
sub
xchg
lret
lds
xor
or
pushf
ja
lds
rolb
in
jbe
popf
pop
inc
sub
lret
cs
push
scas
sti
jnp
sub
mov
lret
pop
outsb
mov
inc
fnstenv
faddl
sbb
xchg
popa
add
push
and
or
and
adc
repz
test
or
outsb
loopne
scas
mov
add
push
and
push
sub
lods
mov
jl
mov
jle
lds
rcr
mov
xchg
mov
imul
xchg
ljmp
dec
movsl
inc
stos
sbb
insl
dec
add
jb
inc
popa
loop
cltd
xor
and
sub
or
addr16
fsubp
cmpsb
mov
imul
sbb
movsb
push
call
fcom
cli
jbe
cmp
mov
jnp
test
ja
cmp
xchg
mov
sbb
loope
pop
adc
xor
mov
icebp
cmovnp
xchg
and
shlb
mov
inc
mov
neg
adc
test
and
cwtl
pop
pushf
mov
call
jle
addr16
addb
out
sub
or
faddl
and
mov
test
mov
jns
or
pusha
cmp
pop
cmp
pop
mov
xchg
push
fistl
jne
mov
cmp
mov
jb
cli
in
push
cmp
mov
sti
cmp
jmp
hlt
sub
icebp
out
pusha
cld
adc
sub
lret
jae
into
adc
xchg
js
mov
dec
jne
adc
rcrl
push
and
xchg
mov
adc
sub
test
adc
or
add
rol
pop
xor
push
arpl
in
insl
enter
addl
pop
fs
fstpl
cmpsb
je
inc
gs
sub
lods
pop
imul
inc
mov
adcl
adc
jne
rcll
and
fadd
fildll
and
and
and
or
and
inc
shlb
cld
pop
les
jl
int
adc
mov
dec
add
xor
cmp
outsb
mov
aaa
popa
ss
cld
mov
add
push
inc
and
mov
dec
daa
fstl
movsb
ds
adc
xchg
lret
daa
mov
jle
gs
aaa
xor
cmp
jge
push
jbe
std
adc
lock
outsl
xor
mov
ret
enter
je
stos
stc
mov
jne
or
push
sbb
xchg
pop
push
imul
loop
out
pop
mov
jns
enter
mov
sub
pop
negl
mulb
pop
push
lods
push
push
pop
daa
in
mov
aaa
fwait
pop
inc
movsl
mov
rcr
test
int
inc
mov
inc
lds
mov
loopne
enter
and
fcmovne
gs
sbb
insb
movsl
filds
shlb
or
cli
lock
pop
lods
inc
mov
ds
sbb
js
scas
imul
cmc
lods
int
jp
fcomps
sbb
pop
loop
ljmp
in
mov
stc
iret
out
push
mov
push
mov
sbbl
dec
push
lds
subb
add
incl
rolb
dec
movsb
dec
or
pop
ret
dec
add
push
mov
adc
mov
into
ljmp
loop
pop
fisttpl
out
push
mov
mov
jge
jp
shlb
sub
adc
std
daa
mov
dec
jns
inc
fcmovu
push
fiaddl
or
dec
pushf
insl
leave
pop
popa
mov
flds
clc
jno
cmp
pop
stc
bound
cld
out
rclb
int3
fcmovne
sbb
notl
and
inc
fcoms
pop
xchg
icebp
test
xchg
cmp
xchg
xchg
stc
movsl
pop
les
test
push
adc
sub
imul
xchg
mov
fsubl
stos
ja
pop
mov
mov
in
mov
add
xchg
scas
push
clc
js
cmp
xchg
sub
testl
lcall
push
test
insl
xchg
push
jg
adc
xor
scas
sti
pop
push
add
in
cmp
int3
mov
je
xlat
mov
push
pop
push
ret
jne
popf
sbb
push
fnsave
mov
xchg
mov
add
or
outsb
xchg
mov
mov
std
jmp
xchg
insl
dec
and
mov
sub
shrb
push
dec
es
inc
fdivrs
push
xor
pop
dec
out
daa
push
xor
int3
mov
pop
adc
mov
adc
jns
mov
adcb
into
and
fwait
mov
cmp
insb
dec
push
mov
xor
sahf
jl
sbb
sbb
xor
sbb
mov
mov
in
xorb
out
subb
jbe
enter
mov
push
xor
shlb
xor
dec
mov
movsl
mov
bnd
sub
mov
mov
add
push
mov
frstor
add
mov
mov
push
mov
add
push
data16
in
nop
cwtl
jo,pt
push
lock
adc
popf
js
mov
addr16
sahf
bound
add
mov
call
mov
ret
mov
mov
in
mov
arpl
jg
out
pusha
ja
clc
lret
popf
push
adc
sub
sbb
cmp
mov
dec
imull
mov
fwait
lret
loop
inc
aas
test
mov
xlat
fildll
xlat
cmp
in
orl
iret
fdivrl
popf
mov
and
fldenv
ret
mov
push
insl
jle
inc
out
test
push
in
and
and
pop
imul
bound
inc
adc
jno
sbb
insb
push
xor
int3
fcoml
push
mov
xchg
inc
cmp
shrl
xor
pusha
pop
int3
dec
fxam
rol
imul
in
sub
mov
ljmp
mov
fwait
add
call
or
add
aad
idivb
jmp
sbb
mov
inc
cmp
pop
push
sbb
jl
push
inc
jae
mov
xchg
out
jne
jle
lds
and
mov
pop
mov
imul
inc
jl
pop
aad
mov
mov
jl
data16
loope
jl
bound
xchg
mov
ja
lods
xor
add
push
jno
dec
push
ficoml
mov
test
nop
clc
push
mov
add
and
lcall
xor
sub
loope
lea
push
xor
repnz
call
dec
lret
add
ljmp
or
jmp
ja
mov
push
leave
call
ret
xor
rcrb
daa
cwtl
adcl
in
or
pop
and
cmpsb
mov
cs
inc
mov
push
sub
movsl
sbb
push
cmp
test
inc
or
loopne
push
lcall
push
mov
out
mov
in
inc
das
mov
ja
cld
hlt
mov
pop
adc
fwait
les
inc
mov
lret
push
stos
adc
lods
scas
jno
lods
inc
rcll
les
insb
push
xor
adc
in
mov
xchg
iret
fisttpl
imul
cmp
test
ja
ds
out
jne
xchg
inc
aam
dec
es
data16
mov
push
mov
push
test
push
mov
pop
and
stc
scas
loopne
pop
leave
cmpl
xlat
push
or
mov
cmpsb
fsubrs
outsl
xchg
fadd
addb
test
ja
sub
adc
inc
sbb
out
jo
pop
hlt
dec
fsubr
outsb
imul
mov
iret
leave
dec
pop
andb
add
stos
cwtl
dec
ficompl
cld
pop
dec
mov
xchg
jl
incl
cld
test
mov
jno
mov
les
add
pop
shrb
pop
enter
dec
jne
sti
addr16
inc
jecxz
lods
stos
mov
xchg
inc
or
jns
xor
inc
or
inc
cmp
dec
dec
shrb
jge
ret
stos
push
shlb
fdivr
push
outsb
lods
sahf
jp
out
loop
xchg
mov
xor
mov
ljmp
add
push
add
pop
add
pop
cltd
xchg
xchg
imul
and
out
std
xor
jae
out
orl
xchg
add
jb
ret
out
xchg
repnz
mov
les
in
sub
in
jae
mov
adc
dec
fs
or
and
pop
int
adc
dec
popf
lret
sahf
mov
ja
fxch
dec
and
jnp
xlat
sub
lahf
adc
sub
inc
push
mov
mov
aas
or
add
into
rclb
pop
lods
pop
ja
dec
jae
mov
push
dec
imul
imul
sbb
in
in
mov
xor
xor
hlt
lock
and
jge
and
bound
stos
jp
xor
loope
cli
lock
mov
pop
es
lods
inc
pusha
mov
mov
add
cmp
lret
pusha
iret
dec
pushf
inc
ja
lods
subl
dec
sbb
mov
test
imul
pop
ret
adc
ljmp
mov
push
jae
daa
stc
insl
subl
in
arpl
xchg
aam
pusha
add
sub
popf
or
lret
xor
jno
xchg
cli
sbb
out
cmp
lret
lret
ja
hlt
adc
loopne
inc
mov
pop
cld
mov
mov
les
or
add
out
inc
daa
sub
mov
out
stos
jle
cmc
push
inc
mov
xchg
orl
pop
pop
nop
cmc
adc
mov
fsubr
mov
xor
pushf
adc
jle
ss
xlat
xor
loope
and
sub
fmull
sahf
jo
dec
popa
sti
dec
fldenv
push
stos
push
xchg
pop
sti
stos
divb
fcompl
das
inc
push
ljmp
loop
sub
or
lods
inc
xchg
sub
pop
leave
xchg
mov
cltd
mov
jle
lahf
mov
ja
scas
in
call
pop
pop
hlt
xchg
pop
imul
mov
mov
pop
cmp
push
and
push
jne
sbb
lret
pop
pop
mov
mov
mov
rcll
in
mov
addr16
dec
enter
mov
mov
ja
xor
mov
jno
fidivl
push
aad
push
xchg
mov
dec
lret
push
and
rolb
add
pushf
sub
andb
mov
lea
push
mov
mov
rcll
jg
adc
and
in
mov
inc
testb
in
inc
push
movsl
or
lahf
xorb
add
push
pop
popf
inc
or
pop
push
mov
pop
inc
jl
arpl
adc
mov
dec
das
sub
shlb
ds
jg
stc
test
in
xor
lea
jb
add
add
rorl
jmp
js
in
lret
incl
jp
add
xor
mov
jnp
ds
push
cs
jecxz
jns
push
mov
in
xchg
push
stc
mov
or
stos
cli
dec
or
or
push
xor
cmpsb
pusha
repnz
jbe
out
xor
fsts
or
dec
dec
jle
mov
mov
test
xchg
dec
xor
sarl
popa
xor
sbb
ja
mov
sbb
add
push
and
sti
push
int
pshufw
popa
mov
rcrl
dec
hlt
mov
cmp
lds
pop
xor
sub
insb
pop
iret
sbb
mov
mov
jl
dec
cmp
xor
adc
xchg
pop
mov
stos
push
push
pusha
pop
or
sub
movsb
and
lock
xchg
cmp
dec
sbb
pop
cli
orb
sub
push
or
add
aaa
jl
mov
lcall
fcompl
lds
inc
push
cmc
hlt
mov
cmp
std
aaa
dec
outsb
addl
rol
int
jp
lods
imul
sbb
jle
fstps
fadds
jb
rcr
xchg
cmp
aaa
fimuls
jmp
push
xchg
mov
adc
pop
inc
jns
out
push
stc
fstl
scas
jbe
pop
mov
xchg
lods
popa
dec
xchg
imul
xchg
mov
loop
popa
std
es
ficomps
es
pop
movsl
sbb
jns
call
xor
pop
loop
xor
cmpsb
add
test
mov
pop
fsubl
imul
insb
adc
outsl
mov
push
sbb
or
mov
adc
test
enter
inc
mov
sbb
push
in
fisubrs
jo
sbb
arpl
lods
scas
push
pop
push
xchg
cmp
test
ljmp
stos
inc
xchg
dec
negl
jne
cli
pop
lret
daa
in
adc
push
add
jmp
mov
aaa
movsw
aad
cmp
dec
xchg
xchg
xchg
dec
les
mov
xchg
imul
cmc
rclb
icebp
fnstenv
test
push
enter
push
mov
push
daa
mov
push
mov
sbb
mov
mov
jecxz
add
dec
pop
pop
in
shlb
lret
inc
mov
jmp
jl
sub
movsb
dec
pop
jmp
dec
dec
mov
loopne
pop
adcb
fwait
mov
add
jnp
push
push
pop
adc
push
sub
popf
out
insb
bound
sbbb
hlt
cwtl
xchg
mov
imul
js
in
sbb
enter
xchg
dec
adc
es
sbb
mov
das
rcl
outsl
or
mov
pushf
xlat
cmpsb
decl
pop
addr16
push
test
test
fcomps
fimuls
jmp
test
xchg
es
les
mov
or
aad
popf
out
shlb
out
fs
jg
mov
cmpsl
xchg
int3
and
push
stos
cmp
roll
pop
add
stc
push
cld
stos
cmp
jbe
sub
roll
pushf
shl
inc
or
out
push
add
adc
sbb
jb
adc
xchg
jecxz
jl
sub
fstps
cltd
fdivrs
jae
pushf
stos
and
inc
scas
dec
shl
push
adcb
adc
mov
fwait
addr16
jae
dec
mov
fs
fldl
mov
mov
xor
mov
popf
aaa
in
loopne
push
xchg
loope
and
stos
push
nop
cmc
je
add
push
mov
imul
lahf
pxor
lods
movsb
into
mov
ljmp
mov
push
xlat
pusha
pop
out
or
mov
xlat
or
push
out
or
ss
imul
outsl
cmp
xchg
jb
insl
cwtl
loop
push
jne
in
scas
in
add
cwtl
inc
push
iret
cwtl
jle
adc
inc
fsubrp
sub
pop
mov
lret
leave
jecxz
ja
cmp
xor
dec
ret
jno
adc
in
fmuls
adc
xchg
sahf
pop
shl
jge
pop
loope
jecxz
cmovae
dec
sbb
int3
testl
mov
outsb
push
jle
addl
mov
mov
inc
push
ficompl
mov
sbb
adc
bound
mov
out
xor
and
mov
inc
mov
jge
lock
ret
adc
mov
mov
fstpl
mov
jnp
or
push
xchg
and
leave
jmp
shr
imul
dec
das
push
xchg
shll
outsl
mov
nop
lret
sahf
fisubrl
pop
xchg
ficompl
add
sub
rcrb
std
push
shll
pushf
cmpsb
insl
xchg
or
out
mov
jbe
cmpsl
mov
xor
and
outsb
add
xchg
mov
insb
idivb
es
xchg
fistl
mov
add
fwait
clc
aas
ret
icebp
or
inc
aas
stc
pop
pop
add
js
popa
xor
in
sbb
xchg
xchg
pop
int
xchg
call
aaa
fnstenv
mov
xchg
icebp
mov
mov
xchg
aam
xor
mov
lds
out
nop
dec
push
out
outsb
gs
sarb
cmp
mov
lcall
jnp
clc
push
les
test
enter
pop
popf
inc
pop
or
fmulp
mov
xor
xor
sub
lods
cmp
jbe
iret
sbb
into
fisttpll
sub
jno
or
jp
inc
nop
xor
push
in
int
mov
xchg
idivb
dec
in
jb
loop
mov
mov
and
pop
mov
cmp
popf
push
dec
adc
dec
mov
outsb
cmpsl
jp
pop
pop
mov
aas
and
data16
xor
loope
xchg
fidivrl
cs
pop
and
jo
dec
pop
xlat
cmp
xor
movsl
dec
ret
mull
adc
xor
adc
leave
out
lahf
mov
push
add
out
ljmp
cmp
fst
mov
fwait
jno
cwtl
adc
jmp
fdivs
dec
sbb
rcrl
mov
mov
das
pause
xlat
or
lock
cmc
cmp
push
xor
int3
inc
and
adc
xor
mov
fnsave
rolb
pop
shll
xchg
vpperm
mov
mov
mov
fistpll
jecxz
ljmp
cmp
popf
out
scas
fbstp
mov
xchg
ss
shl
out
dec
and
xchg
jno
sbbb
aaa
cltd
jge
xchg
cmp
aaa
fwait
mov
add
xchg
mov
cmp
outsl
lret
xor
jbe
dec
hlt
loop
pop
cmp
mov
adc
in
and
cmpsb
cmp
jb
sbbl
adcl
mov
das
orl
pop
jo
pop
movsl
push
test
push
fcmove
mov
stos
popa
xor
out
mov
fldenv
mov
xor
lcall
jnp
push
iret
out
jno
lods
sbb
push
add
test
and
xor
outsl
jge
data16
and
mov
sbb
inc
pop
lcall
mov
decb
mov
inc
add
inc
imul
popf
pop
stos
rcrl
mov
dec
or
mov
orl
jg
mov
xchg
jmp
popf
int
jp
jns
jno
mov
rol
push
sub
mov
dec
inc
mov
and
inc
adc
xchg
mov
loope
jne
orb
sub
stos
dec
jns
sahf
jecxz
sbb
adc
fldl
hlt
cmpl
mov
mov
divb
add
aam
stc
hlt
je
test
add
mov
in
sarl
cmp
es
lods
jbe
fistl
ss
lods
std
mov
in
cwtl
mov
inc
fcomps
icebp
jns
dec
pusha
fmull
pop
or
movsb
js
sub
std
in
sbb
xor
imul
jb
jb
das
jmp
xchg
push
std
and
cmp
push
inc
and
cmp
dec
lret
xor
jecxz
jg
enter
sarb
cld
xor
add
lock
xchg
mov
and
push
mov
inc
mov
xacquire
aad
jle
pop
iret
push
mov
test
push
idiv
ret
lea
enter
icebp
hlt
push
aas
mov
xchg
movb
fistl
lahf
cli
xchg
jns
inc
push
mov
test
or
pop
cld
adc
push
leave
mov
lret
xchg
dec
mov
dec
dec
shlb
mov
cmpsb
outsl
hlt
or
outsb
mov
xchg
inc
push
mov
dec
xchg
sub
ret
sub
add
add
mov
aam
mov
cmpsb
cmovl
iret
cltd
sbb
xchg
rcr
pusha
cmp
lods
mov
inc
cmp
popf
push
mov
sbb
mov
adc
push
addr16
lock
xchg
repz
out
or
sbbb
jno
pusha
mov
pop
pusha
shrl
shrb
les
sbb
jge
mov
sarl
push
or
notb
mov
enter
sarb
js
mov
fldl
xchg
sub
fsubs
adc
add
dec
and
insl
mov
and
sub
push
or
lds
je
shr
inc
xchg
ds
adc
jnp
or
xchg
out
mov
je
pushf
lea
bnd
repz
sbb
xor
rcrb
cmp
mov
std
loopne
lret
xchg
dec
cli
adc
mov
movsb
pop
mov
or
stos
test
test
adc
mov
jo
mov
nop
xchg
call
xor
arpl
mov
or
in
and
test
xor
cmp
adc
gs
pop
aad
inc
outsl
int
mov
notb
inc
sbb
inc
out
dec
incb
sub
imul
int3
cld
ja
std
push
push
sti
xlat
and
and
ja
push
sub
std
iret
xchg
pop
fidivrs
movsl
mov
out
cmpsl
sub
dec
lcall
push
or
rcrb
sti
call
mov
loop
add
lahf
xor
in
mov
and
push
sub
inc
pop
pop
jmp
aam
push
mov
cltd
pop
std
popa
push
xchg
sbb
enter
daa
xor
sbb
jae
in
cli
popl
sti
inc
xor
and
loope
lcall
hlt
mov
scas
dec
scas
roll
xchg
pop
fsubs
es
add
sahf
std
lods
rcr
jo
loop
push
shrl
bound
sbb
push
mov
xchg
fs
int
mov
pusha
jmp
adc
jl
cmp
cs
clc
xchg
push
mov
add
mov
sub
int3
fsubl
vphaddbq
mov
and
fs
dec
and
xor
cmpsl
pop
rolb
mov
inc
sbb
rolb
lret
xor
sbb
std
pop
mov
out
adc
mov
aas
loopne
push
dec
jl
rcll
push
leave
add
push
fistps
or
cld
adc
addl
shr
mov
call
out
add
fwait
sbb
cmpsb
in
push
stos
inc
test
imul
pop
cmp
push
out
xor
fwait
test
mov
std
rorb
movsl
out
cmp
cmpsl
sbb
push
loopne
jo
aas
sub
cwtl
push
aad
sbb
pop
xchg
insl
pop
sbb
jno
repnz
test
jne
pop
push
or
into
cmp
xchg
popa
inc
loop
sub
js
inc
fucom
adc
push
in
dec
jg
or
pop
aam
pop
test
sahf
dec
daa
push
mov
mov
pop
in
cmp
xlat
push
in
test
stos
stos
add
lods
shlb
clc
sbb
adc
lods
outsb
adc
add
jmp
jno
push
cld
loop
inc
pop
imulb
jge
daa
int
aam
push
xchg
xor
mov
fneni(8087
jecxz
mov
jmp
adc
in
sbbl
xor
xchg
sbbb
xor
nop
xchg
jp
pushf
repnz
sub
xor
mov
push
lahf
fnstenv
nop
movsb
pusha
adc
stc
xchg
lret
mov
jb
jnp
mov
repnz
dec
or
std
mov
xchg
stos
cmp
lods
lods
mov
cs
sbb
sahf
push
arpl
jge
add
inc
mov
call
cmp
jno
shlb
sub
push
adc
cmc
mov
mov
mov
mov
or
add
outsl
orb
sbb
xchg
call
inc
mov
je
pop
adc
add
xchg
fisttpll
lea
xchg
lds
dec
adc
xchg
pop
cmp
ret
xor
mov
xchg
negl
xor
pop
jnp
fcmovb
inc
mov
ja
sbb
jl
pop
cmp
cmp
lds
inc
mov
sub
lods
mov
pusha
pop
fsubrs
dec
ret
repz
insl
aas
inc
aam
ret
lods
addl
call
xor
pop
or
pop
mov
add
xor
dec
mov
test
dec
sbb
sbb
dec
sbb
mov
xchg
mov
movsl
inc
mov
push
xchg
or
xchg
hlt
mov
arpl
or
call
jg
xor
cmp
xchg
adc
test
xchg
inc
das
decl
in
adc
pop
aam
lea
arpl
js
adc
add
adcb
xor
andl
sbb
xlat
jle
fisubrs
sti
mov
repz
int3
push
fwait
xor
mov
insl
je
sbb
das
mov
int
sahf
shrb
in
mov
cmp
pop
cs
or
cmc
add
cs
scas
scas
jp
xor
scas
push
stos
pop
cmpsl
jmp
adc
or
inc
rol
repnz
or
ret
mov
mov
and
enter
orl
push
sbb
xor
cmp
mov
xchg
mov
adc
sbb
push
mov
cmp
jno
addr16
adc
addr16
pop
loop
imul
pop
sbb
pushf
int3
aad
clc
paddb
pop
xor
push
jo
xor
rorb
mov
divl
mov
fldcw
xor
and
popl
pop
sbb
jecxz
push
add
divb
mov
mov
adc
cwtl
icebp
xchg
movsb
lcall
inc
lock
xor
rcrb
fsubl
xor
sbb
stos
adc
mov
mov
lea
or
out
ret
fldenv
mov
sahf
aaa
ljmp
cmpb
fwait
mov
ljmp
mov
test
test
sbb
out
push
fisttps
ret
mov
mov
mov
cmp
rcrl
pop
iret
notb
fstl
inc
lea
out
lcall
mov
arpl
std
fsubrs
push
jge
lds
mov
dec
add
pushf
sbb
orl
dec
xor
sub
call
aas
imul
icebp
and
mov
pop
test
iret
push
arpl
sub
pop
push
call
shll
inc
je
sti
jb
scas
addr16
jl
xor
movsb
xchg
adc
cmp
test
pop
xorl
mov
daa
stc
data16
add
adc
sahf
lcall
mov
cli
push
adc
xor
cmpb
test
xor
push
xchg
mov
inc
cmp
int
push
fwait
and
lcall
js
mov
jnp
xchg
pop
or
int3
cmc
mov
lods
inc
sbb
loopne
lods
das
outsl
or
or
push
mov
push
dec
bnd
sub
cs
sub
ret
adc
xor
pop
push
jb
and
hlt
dec
mov
imulb
stos
fwait
push
cwtl
cltd
outsl
dec
les
cld
pop
mov
jnp
xchg
movsl
mov
mov
dec
adc
lods
cmpsl
xchg
je
xor
aaa
les
lock
add
or
imul
outsl
jmp
inc
mov
scas
cmpsb
out
push
sbb
test
stos
mov
lcall
push
cli
xchg
aad
inc
xchg
test
out
add
xor
xchg
scas
jne
lret
mov
and
push
xchg
pop
or
sbb
lret
cmpsb
push
mov
icebp
jle
mov
cmpsb
addr16
xchg
lret
xor
xchg
imul
push
gs
cwtl
pop
mov
js
jmp
xor
scas
mov
enter
sub
mull
and
stos
test
or
aad
pop
mov
mov
movsl
xor
mov
adc
imul
inc
fadds
and
jmp
dec
sub
icebp
or
jg
mov
mov
mov
outsb
xchg
mov
adc
mov
pop
push
lret
scas
jl
dec
and
mov
in
out
sub
mov
pop
push
orl
mov
pushf
cmpsb
mov
fsubrl
cltd
xchg
sub
push
movsb
fstpl
pop
lea
loop
jge
ret
bts
repnz
dec
ret
insb
adc
or
xlat
pushf
jne
pop
lahf
pop
movsl
xor
push
pusha
mov
cmpsb
insb
imul
clc
aam
test
cld
cmp
mov
loope
shll
std
int3
sub
xchg
push
or
jno
pmuludq
lret
cmp
cmc
fmuls
or
cmpb
pop
orl
bound
popa
clc
add
pop
pushf
sub
shl
lods
loope
fistpl
dec
or
sbb
push
push
adc
or
and
add
ja
inc
out
adc
jb
push
xchg
loop
push
flds
mov
popf
rol
xchg
jp
mov
fs
lods
jg
je
xchg
push
hlt
dec
mov
jno
stc
out
mov
in
inc
push
add
and
push
xorl
dec
jns
rep
mov
movsl
lret
ret
imul
lahf
mov
scas
test
insb
test
dec
jl
sbbb
and
mov
sub
push
ret
dec
sbb
push
dec
neg
jo
icebp
mov
xchg
mov
lods
jmp
mov
bound
scas
flds
dec
or
sub
stos
jmp
cmpsl
or
test
insl
inc
pop
jle
mov
gs
arpl
add
sar
add
insb
or
dec
int
arpl
inc
in
sbb
aam
cmpsl
mov
pop
neg
movsl
lock
fsubrl
ja
add
int3
out
adc
stos
jbe
imul
cli
mov
lret
cs
inc
sbb
dec
cmp
clc
mov
aaa
scas
or
sbb
lods
xchg
jmp
lods
dec
push
inc
pop
xchg
pop
sahf
sub
popa
cltd
sub
xchg
jg
movsb
rcrl
and
and
clc
jp
xor
xor
pushf
outsb
jl
cmp
test
aaa
and
mov
inc
jae
test
es
adc
rcll
push
shlb
icebp
stos
mov
add
sub
loop
mov
test
sbb
fsubl
loop
or
test
lea
in
pusha
push
or
xchg
ds
cmp
sub
mov
pop
aam
or
push
cmp
pop
sbb
jns
fnsave
xchg
xlat
add
test
adc
ljmp
scas
mov
mov
mov
add
imul
mov
out
sub
mov
hlt
and
dec
push
inc
adc
lcall
jmp
fiaddl
push
cwtl
insb
mov
push
sbb
mov
in
jae
sub
jg
jae
cmp
dec
out
mov
popa
fdivrl
and
mov
in
mov
fstpl
fstp
test
ja
inc
xor
lods
jle
shll
out
rcr
xor
inc
lods
xor
rorl
push
loop
pop
and
ss
mov
lds
mov
xchg
scas
pop
rorb
test
icebp
pop
test
and
ss
das
out
int
sbb
lret
mov
and
jge
sbb
into
jne
cmp
inc
and
cmp
sbb
add
mov
cmp
cmp
xchg
test
lret
and
arpl
mov
into
cmpsl
dec
shlb
or
lds
push
mov
insb
lcall
and
push
xchg
sbbb
stc
gs
pushf
jp
in
mov
xlat
lahf
filds
in
add
ljmp
out
stos
jae
lea
mov
sub
pop
xchg
ficoml
mov
jne
xor
xor
push
fadd
movsl
and
fdivrs
loope
hlt
sbb
mov
sahf
adc
test
add
mov
icebp
adc
adc
insb
push
fs
dec
pop
pop
sub
test
jno
sti
fadds
mov
ret
cmpsb
dec
or
aas
mov
scas
cltd
pusha
xor
scas
sahf
gs
and
lahf
movsl
xor
stc
stos
jmp
loopne
imul
dec
nop
mov
lods
xchg
arpl
fisubl
sahf
mov
lods
outsl
stc
dec
pop
stos
mov
scas
scas
out
movsl
popa
adcl
jns
xchg
fsubs
jle
imul
popf
js
sbb
pop
ficompl
or
in
lret
shrb
lcall
fisttpl
dec
mov
adc
and
test
and
maxps
notl
dec
dec
data16
mov
aad
decb
jmp
and
push
pushf
adc
leave
xchg
mov
mov
ds
in
mov
mov
mov
dec
or
pop
cwtl
dec
cltd
mov
imul
lods
out
call
sbb
mov
daa
inc
mov
lds
jbe
and
idiv
add
lods
notl
popa
pop
aam
sub
iret
sbb
insb
jl
hlt
int
lcall
xchg
add
cmovs
lret
push
inc
gs
mov
inc
popa
adc
lock
sarl
enter
add
insl
into
cli
nop
test
orb
cmp
sbb
iret
jge
jb
mov
scas
jns
repnz
mov
adc
bound
xor
mov
push
cmp
xor
fwait
ret
push
xlat
dec
mov
cld
ret
test
cmp
xchg
hlt
cmpb
arpl
test
jmp
add
and
fcmovb
mov
xor
push
cli
fiaddl
popa
int
sarb
sar
push
add
or
mov
inc
sub
cmpsl
sub
dec
rcrb
mov
adc
inc
or
ja
loop
ret
ret
cmpl
fstpt
ds
mov
cmp
nop
shrb
ljmp
cltd
test
push
mov
push
les
std
xor
jge
cmp
add
sti
push
mov
shlb
xchg
inc
in
in
and
xor
adc
jge
das
bound
cwtl
in
sub
sub
mov
outsl
pusha
mov
fs
pop
enter
cs
and
fsubrl
xchg
mov
iret
cmpsl
xchg
xchg
les
int
sarb
in
sbb
iret
inc
std
xorl
ja
add
sahf
aad
mov
dec
xchg
shlb
gs
xchg
cmp
in
lcall
mov
mov
aas
iret
stc
inc
mov
imul
mov
imul
lret
pop
outsl
dec
insl
mov
movsb
jecxz
out
xchg
and
imul
jb
hlt
and
inc
dec
pop
xor
or
sub
and
stos
cmp
imul
daa
and
sub
xor
movsl
push
loopne
mov
add
cmp
mov
js
sbb
cmc
gs
test
scas
mov
push
push
mov
sahf
push
call
negb
cmp
jecxz
subl
xor
push
pop
inc
add
test
std
jbe
inc
adc
fsubrl
xor
cld
jnp
add
xchg
cmp
fucomip
sub
or
out
loop
sahf
aam
dec
push
scas
xchg
adc
movsb
lret
mov
adc
sti
xor
pop
sub
sub
mov
xchg
mov
lcall
push
xchg
mov
and
es
push
mov
imul
mov
aaa
inc
mov
loopne
fs
jg
mov
repnz
mov
xor
sub
cmp
int
mov
lret
outsb
ficoms
test
xchg
sbb
aad
scas
test
pop
and
ljmp
outsb
pop
and
and
adc
or
ror
mov
push
pop
sub
dec
hlt
or
pushl
lret
pop
aas
adc
insb
mov
inc
sub
inc
into
dec
ja
scas
sbb
adc
inc
or
aas
xchg
outsb
dec
cmpsl
mov
popf
mov
je
lret
xor
or
cli
sub
jae
lahf
xchg
enter
arpl
mov
fadds
lea
fld
mov
mov
xchg
insb
mov
fldt
outsl
mov
adc
ret
mov
mov
cwtl
xchg
test
mov
leave
ficoml
and
sub
andb
inc
mov
int3
mov
pop
in
mov
mov
out
jae
sub
jae
and
push
pop
in
and
dec
mov
jns
mov
dec
cmp
xchg
push
out
add
ret
xchg
push
jge
shr
arpl
mov
mov
jno
push
adc
mov
mov
and
inc
rdpmc
jne
push
es
sbb
daa
fs
jnp
or
mov
int
or
mov
jge
pop
fistl
sti
scas
cwtl
sbb
ret
push
xchg
daa
pfrcpit2
es
mov
inc
mov
sti
ja
cmpsb
outsb
lret
cli
cltd
mov
sub
bound
test
mov
jp
pushf
mov
inc
dec
mov
and
out
and
pop
cli
sbb
fsubrs
mov
xor
push
or
add
adc
mov
ret
mov
mov
jbe
jl
adc
mov
leave
shrb
cmp
inc
ficoms
arpl
mov
movsl
jl
shrb
jge
sti
pop
pop
jb
popa
xchg
mov
push
mov
push
pop
xchg
sub
mov
stc
pop
jmp
fwait
xchg
xor
pusha
enter
cs
push
push
xorb
pop
jp
int3
aam
mov
paddusb
fcomip
mov
xchg
mov
outsl
mov
sub
push
dec
cmpsb
push
jp
adc
and
mov
or
dec
dec
inc
dec
out
repz
pop
jno
xchg
enter
and
pusha
out
loop
aaa
push
test
lods
sbb
notl
cmpb
pop
jo
add
hlt
dec
daa
mov
adc
cmp
mov
fdivp
cmc
sbb
ss
sbb
cld
dec
fldl
fstl
xor
push
jbe
sub
mov
and
std
sbb
out
mov
mov
repnz
pusha
scas
jo
iret
xchg
push
or
cmp
adc
int3
xchg
sti
dec
fldt
clc
cld
jb
ljmp
and
dec
mov
add
pop
out
push
push
mov
inc
out
les
nop
adcb
rep
mov
push
fidivs
fistps
test
rolb
sbb
dec
loop
testl
and
mov
arpl
jbe
lea
std
mov
inc
push
outsl
sahf
aas
sbb
dec
stos
adc
inc
and
divl
adc
call
into
cmp
in
dec
add
fmuls
cwtl
and
push
and
pop
scas
mov
pop
fisttpll
cmp
mov
xchg
jae
mov
cli
mov
fldl
dec
cwtl
cmpsb
mov
xchg
fimuls
mov
xchg
sub
xchg
and
adc
push
mov
fnstenv
jecxz
mov
adc
cld
in
or
addr16
mov
mov
outsb
js
sarb
icebp
dec
push
pop
sub
sbb
pusha
xchg
adc
mov
outsl
popa
popf
push
mov
pop
adc
aas
mov
sub
iret
aad
sbb
mov
push
call
cmp
out
cmpsb
inc
loopne
out
decl
add
das
call
dec
add
ret
loope
xchg
mov
fildl
or
dec
inc
fldl
inc
dec
add
xor
jns
ret
mov
pushl
mov
mov
aad
dec
popf
mov
jo
daa
imul
and
push
lods
xor
insb
in
leave
xor
pusha
in
or
and
jb
fstps
xchg
ffreep
jecxz
push
jg
bound
lods
sub
mov
std
and
jne
and
in
in
jmp
mull
fadd
pop
inc
sub
or
dec
lea
imulb
pop
push
dec
outsb
push
iret
inc
pop
lds
mov
test
addr16
jne
jp
pop
xchg
jne
fisubrl
sti
push
aaa
out
call
jns
jecxz
fwait
xchg
fwait
aam
jbe
pop
adcl
add
faddp
in
ss
pop
fs
std
mov
iret
out
jnp
xor
cmpb
push
add
pop
rcrl
or
xchg
iret
movsl
dec
pop
xchg
outsb
dec
pop
or
jl
mov
sbb
imul
test
push
mov
bound
adc
mov
pop
push
test
je
mov
shll
pop
mov
mov
mov
add
sbb
repnz
cmp
hlt
cmp
mov
adc
dec
pop
jo
jnp
pop
xor
imul
roll
push
fstps
insb
push
xchg
lods
inc
bound
sub
sbb
ss
loopne
orb
push
inc
cwtl
frstor
imul
loop
shrl
repnz
dec
inc
push
push
pop
cltd
mov
inc
test
add
mov
adc
ret
sti
stos
or
mov
or
mov
cmpsl
sub
daa
pushf
add
add
or
outsb
adc
xorb
mov
push
mov
push
repnz
cmpl
rcrl
push
pop
xlat
jg
xchg
insb
mov
lahf
xchg
filds
add
dec
hlt
mov
dec
mulb
loopne
lret
adc
mov
jbe
jb
lea
jns
test
or
ja
adc
jmp
jnp
pop
cmpsb
cmc
in
mov
xchg
lret
pop
cli
jmp
mov
mov
xor
xchg
icebp
test
jae
std
stos
jae
jl
jae
insl
add
jl
push
ficomps
sbb
outsl
cmp
or
adc
cmp
je
push
sub
xchg
cmp
loop
scas
pop
jne
aad
add
push
dec
and
dec
push
cld
xchg
jle
xor
fs
movl
pop
sbb
xor
fwait
adc
cmp
push
cltd
into
test
popa
pop
push
xchg
in
or
test
or
mov
jg
mov
add
pop
fidivrl
call
dec
fadd
addr16
arpl
pushf
dec
fmuls
mov
and
cmpsl
jno
pop
andl
in
enter
dec
ret
fcoml
dec
in
jmp
adc
js
mov
pop
xchg
lcall
jno
jae
dec
push
pop
mov
in
cmpsb
xlat
in
faddl
nop
adcl
xor
dec
dec
fbld
stos
sub
cli
mov
push
out
outsl
scas
push
iret
and
dec
bound
mov
in
xchg
in
inc
es
cmp
jl
or
idivb
mov
xor
mov
loope
jecxz
into
in
rorl
cmc
gs
mov
aad
mov
arpl
push
pop
sub
inc
jecxz
jbe
fdivrs
dec
jp
jb
out
andl
subb
cli
mov
cmp
gs
cli
mov
push
mov
cmp
mov
pushf
data16
push
sahf
cltd
xchg
iret
cmp
int3
pop
ljmp
push
add
and
in
outsb
lret
mov
lret
adc
stos
nop
and
push
mov
and
rolb
jb
rolb
pop
mov
movsl
jae
adc
push
es
mov
popf
int
xchg
rcl
xchg
pop
or
cmp
sub
cmp
xor
dec
int
cmpsl
scas
and
mov
fwait
shlb
dec
mov
out
mov
sbb
pop
in
daa
push
and
push
lods
das
inc
adc
in
or
scas
jle
and
out
scas
sub
fadd
inc
xlat
shll
cmpsl
mov
scas
sahf
das
in
movl
mov
pop
ds
adc
push
pushf
push
push
jnp
iret
lods
mov
adc
sbb
or
pop
repnz
dec
pop
data16
inc
jg
xchg
mov
cltd
popa
lcall
lret
movsb
scas
mov
mov
or
mov
bound
repz
and
xchg
jne
test
add
clc
sahf
mov
push
pop
fnstenv
in
out
fwait
add
sbb
outsl
cmp
fadds
push
iret
jg
and
inc
test
fists
nop
mov
cld
add
ds
push
mov
push
push
lods
xchg
in
outsb
shlb
xchg
and
mov
sbb
test
aas
cmp
dec
adc
clc
jl
shll
aaa
jmp
pop
sbb
ja
and
and
clc
mov
in
push
fiaddl
sbb
mov
and
or
adc
rolb
push
aaa
fnstenv
pusha
mov
sub
jo
inc
sti
fnsave
sbb
mov
push
xor
mov
imul
xchg
and
pop
lret
imul
add
pop
mov
sbb
daa
idivb
push
in
xchg
push
push
ja
pop
inc
jae
cmp
cmc
cmp
pushf
subb
xlat
ljmp
mov
sbb
xchg
jb
fwait
cmp
ja
lahf
ret
movsb
xchg
pop
sbb
rorl
fdivl
add
cwtl
sub
jne
jg
lods
imull
sub
adc
or
leave
lock
push
cmp
mov
in
jp
xchg
std
insl
clc
ds
mov
mov
repnz
cmc
aas
add
sarl
xchg
xor
mov
push
jns
daa
mov
fadds
inc
mov
out
xchg
into
mov
mov
repz
mov
jmp
fistpl
add
sbb
sahf
imul
or
inc
cmp
lret
je
dec
outsl
nop
imul
outsb
test
push
rcrb
stc
filds
dec
notb
jns
fidivs
repnz
xchg
add
mov
adc
push
stos
or
test
mov
aas
push
out
push
in
cmc
cld
repnz
jp
sub
mov
fmul
fdivrs
sub
fscale
xchg
fdivrl
mull
or
mov
dec
std
pusha
push
sub
sarl
pop
mov
lods
in
mov
inc
mov
mov
mov
sub
aad
or
inc
push
sub
push
sub
leave
fstl
popf
lods
mov
mov
lds
sub
jmp
jecxz
iret
out
cwtl
mov
or
xlat
sub
push
jmp
adc
sub
lcall
mov
hlt
scas
das
inc
sub
shr
mov
sarb
out
or
mov
pop
or
push
gs
call
xchg
fldenv
and
popa
sbb
movsb
adc
xchg
rcrb
sarl
sbb
sets
or
frstor
jae
jg
cltd
jne
push
sarb
pop
aam
int
cmp
ja
sub
xor
aam
inc
call
add
xchg
push
mov
pop
xchg
xchg
push
cmp
aam
sbb
cmp
out
dec
outsb
and
cmp
and
jg
pusha
lock
int
cmp
imul
mov
stos
mov
or
call
or
xchg
stc
adc
movhps
adc
xor
mov
cmp
insb
mov
xchg
jnp
stos
sarb
in
sbb
sub
enter
cmp
cld
sub
dec
xchg
outsb
loop
push
jg
pop
scas
adc
das
pushf
push
cld
incl
out
dec
pop
inc
add
rcr
jecxz
cmp
daa
mov
movsb
incb
mov
out
cld
out
out
push
test
xor
xchg
xor
lret
xchg
cmp
xor
jge
inc
dec
inc
mov
out
sbb
rclb
xchg
pop
shrb
add
cld
add
arpl
pop
movsl
or
mov
or
ret
xor
pop
in
dec
inc
xlat
inc
les
leave
lret
rorl
and
xor
cmpsl
in
pushf
out
repnz
cmp
ljmp
jb
inc
mov
or
xor
outsl
stos
xor
dec
insb
mov
push
lcall
inc
shrl
icebp
push
xchg
fsubs
jno
mov
mov
add
add
imul
fwait
push
lea
aam
fs
xor
cli
xor
mov
inc
cltd
mov
rolb
loopne
aam
pop
cwtl
outsb
xchg
pop
lods
ja
mov
and
sti
lahf
mov
ret
pop
and
mov
and
loopne
xchg
aad
shr
aam
daa
push
jle
push
sbb
push
jp
inc
mov
xor
iret
fiadds
and
sbb
lret
in
out
xchg
push
jle
mov
mov
cmp
mov
out
mov
imulb
mov
xor
jge
xor
les
pop
push
andl
or
pop
cmp
fldl
lret
sub
or
arpl
xchg
add
jno
xor
sbb
lods
sahf
repnz
jne
outsb
pop
repz
cmc
es
sarl
aad
in
sub
xchg
or
jbe
jle
mov
call
xchg
jp
push
xchg
pop
xorl
in
jns
fstps
fucom
int
aam
inc
int
cmp
sub
mov
lods
test
test
cmc
mov
movsb
push
jp
mov
mov
and
mov
fimull
les
adc
enter
jg
fisubs
idiv
dec
stos
ret
dec
dec
sbb
xchg
cs
push
jl
stc
inc
sub
stos
add
lahf
fisubrl
xor
and
test
xchg
addr16
divl
in
repnz
mov
fildl
rorb
addb
test
test
xchg
xor
inc
and
aad
jo
xor
sbb
sub
insb
sub
mov
or
outsl
decb
mov
cltd
fadds
cmp
sub
push
jmp
sbb
mov
scas
sahf
sbb
sbb
or
pop
jp
shl
push
ret
dec
outsl
xchg
jl
fisubrl
test
cmp
in
ret
lds
or
stc
mov
push
out
or
cmp
pushf
pop
mov
enter
dec
mov
jae
add
push
daa
leave
sub
push
mov
sub
cld
pop
adc
push
add
negb
mull
ret
mov
lods
and
and
inc
loopne
pop
sbb
shrl
cmp
in
pushf
jecxz
mov
rclb
jp
jno
lock
fcmovu
pop
cmc
cli
pop
xor
dec
sarb
jp
jno
push
and
es
and
test
movsb
lock
inc
jno
jp
push
stc
shrl
and
xchg
push
pop
xor
insl
loopne
incb
pop
rolb
mov
cld
dec
mov
xchg
mov
enter
mov
cmp
movsl
jno
inc
test
test
mov
mov
pop
or
mov
or
test
clc
dec
imul
lret
xchg
call
adc
lret
sub
fmuls
cld
mov
lock
adc
xor
lds
push
movsb
xor
add
arpl
filds
shll
call
inc
sub
scas
outsl
jns
dec
push
ss
in
xchg
lcall
cmpsb
rclb
jno
mov
shlb
pop
push
push
pop
mov
and
addr16
divb
les
add
mov
fbld
xchg
in
jmp
sbb
notl
je
gs
xchg
testl
xchg
lcall
cmpsl
cltd
loop
pop
mov
xor
mov
jg
bound
stc
pop
pop
bnd
stos
pop
fidivrl
push
test
mov
outsb
ljmp
fdivl
or
and
sub
jmp
pop
sti
shlb
pop
add
dec
movsl
rolb
sub
sbb
dec
sbb
xor
roll
fsts
lahf
dec
loopne
adc
adc
repz
xchg
push
dec
imul
add
rcrb
je
mov
loopne
mov
sarl
add
xchg
sub
in
arpl
dec
mov
rcll
repz
pop
in
jb
pop
fucomi
iret
fcomps
jne
arpl
add
stos
scas
push
test
addr16
cmpsl
pop
cmpsl
xor
aad
dec
out
mov
mov
arpl
jno
ficompl
dec
xchg
cmp
iret
cltd
jle
add
cmpw
hlt
aas
and
into
mov
cmpb
mov
fstl
mov
push
pop
lahf
mov
mov
out
cwtl
cmc
mov
inc
test
leave
cltd
icebp
xlat
jnp
mov
fistpll
out
lods
mov
stc
rcpps
xorb
cmp
iret
jmp
mov
cld
pop
jne
sub
jnp
xchg
mov
cmp
lds
rcrl
out
push
test
cmp
inc
add
mov
mov
call
cmc
push
icebp
in
aaa
mov
ficoml
bound
inc
hlt
add
sub
sbb
inc
xchg
std
ja
or
inc
inc
mov
and
lahf
or
dec
cli
mov
popf
jmp
pop
push
cmp
imul
lret
flds
xorb
push
lret
stos
fs
mov
mov
int3
std
jo
inc
xchg
sub
sbb
mov
jb
jno
icebp
out
aad
outsb
xor
sbbl
cld
ss
loop
push
mov
push
nop
cmp
cli
push
add
aas
int3
add
xchg
pop
xchg
xor
jae
lea
dec
and
jge
scas
cmp
xor
out
idivb
lods
lods
mov
cli
jge
imul
leave
scas
repz
push
movsl
in
enter
out
dec
shl
jb
and
incl
in
or
or
leave
push
pop
inc
int
mov
mov
add
xor
push
xchg
add
ljmp
push
pop
pop
ds
add
imul
movsb
pop
sub
push
stc
jecxz
add
daa
outsb
test
and
cs
insb
mov
inc
sti
mov
add
movsl
dec
lcall
jae
mov
pop
shrb
lret
mov
scas
mov
stos
dec
cmp
sub
in
push
cltd
dec
cmp
push
xchg
dec
lock
inc
js
test
loop
xchg
cwtl
outsl
lgs
mov
pop
lcall
xchg
dec
ret
push
les
outsb
es
leave
mov
fwait
out
mov
ret
pop
mov
mov
pushf
int3
cmp
mov
cmp
fdivp
sbb
push
push
jmp
jae
and
sti
cmp
popf
cmc
xor
push
sbb
xchg
add
cmp
cmc
dec
add
push
imul
fcoms
dec
adc
push
in
xor
insb
fldt
js
sub
jmp
pop
cmp
shlb
cmp
andb
mov
jle
mov
push
sbb
ror
fwait
sub
sbb
mov
mov
lret
rorb
push
test
call
pop
popf
das
jle
fildll
icebp
push
cmc
mov
mov
mov
aaa
mov
sar
sub
lcall
cs
sahf
out
in
and
rolb
adc
xor
subb
jo
popa
das
add
fs
inc
dec
loopne
mov
loopne
jo
mov
xor
jmp
mov
inc
cmp
cld
dec
icebp
jae
jnp
push
inc
add
call
orl
mov
inc
xchg
icebp
dec
fnstenv
mov
lock
cmovge
cmovs
in
nop
or
cmpb
int3
jae
xchg
test
ds
stc
adc
dec
jg
and
insl
jne
sub
pop
push
fwait
cwtl
dec
out
pop
fidivrs
inc
jnp
fs
imul
cmp
idivl
idivb
repnz
adc
xor
adc
add
stos
xchg
pop
jbe
scas
push
jne
aam
sti
aas
pop
sub
movsl
aaa
int
jle
pop
pusha
inc
cmpsl
clc
into
sbb
mov
aam
loop
fs
adc
daa
call
jecxz
or
pop
jge,pn
mov
je
mov
daa
jnp
dec
ds
nop
xchg
into
fdiv
push
xorl
inc
lret
icebp
pop
push
popa
imul
sub
bnd
test
mov
inc
and
mov
shll
push
cmpsb
nop
and
aam
fxtract
adc
xchg
and
in
pop
push
test
cmpsb
inc
dec
cli
fmuls
clc
shrl
test
test
mov
rorl
aad
jge
popf
xor
shrb
call
mov
stos
addb
fiadds
mov
and
mov
dec
ljmp
xchg
lea
ss
mov
mov
and
pop
stc
xlat
in
sbb
mov
std
ja
mov
add
dec
shl
adc
lea
repz
and
mov
lods
xor
leave
lea
icebp
mov
sahf
xor
mov
loopne
in
push
fmulp
mov
mov
xchg
aam
mov
bound
push
loopne
xchg
xchg
mov
sub
inc
out
sub
stos
cmp
add
push
mov
inc
int
cmpsl
jb
into
and
add
sub
sbb
push
add
lods
pop
aaa
pop
xchg
adc
mov
and
sti
dec
pop
fisubs
test
stos
aad
daa
je
in
dec
xor
lret
daa
aam
mov
loop
test
add
aad
jno
pop
nop
add
pusha
orb
push
mov
xor
pop
dec
pusha
ljmp
sub
roll
imul
fbstp
push
jp
jns
shlb
cmp
add
dec
das
stos
pop
das
inc
ret
mov
arpl
lods
and
push
stos
mov
mov
inc
add
scas
xchg
cltd
sub
dec
mov
fcoml
cmp
xor
pop
fdivs
sub
loopne
and
les
mov
nop
stc
jbe
out
inc
fsubl
iret
pushf
cmpsl
or
mov
inc
mov
fisubs
mov
push
jecxz
arpl
daa
daa
test
lahf
fnstsw
cld
rol
stos
xchg
lret
add
xchg
ljmp
lahf
jb
inc
and
adc
cmp
sbb
mov
and
int3
push
fnsave
adc
push
pop
and
pop
das
cltd
jl
outsb
sub
inc
std
aaa
and
push
mov
add
adc
int
xor
fcmovb
icebp
dec
test
adcl
frstor
and
sti
cs
lds
mov
pop
stos
push
js
outsb
xchg
pop
aaa
xor
mov
repnz
pop
es
xor
push
ljmp
vpmacssdql
inc
fs
in
out
jmp
fisubrs
sbb
cmp
jo
shll
or
push
rolb
int
inc
lret
mov
xchg
rcrl
lock
ds
fsubr
or
pop
mov
push
fstps
pushf
in
bound
pushf
fildll
stos
jns
xor
arpl
push
sahf
jle
push
adc
shlb
push
push
pop
out
sub
sub
stos
mov
dec
sbb
xchg
mov
jo
addl
mov
out
push
fxch
leave
lods
dec
ss
lcall
jns,pn
cltd
daa
cmp
lcall
lods
jnp
xchg
jg
neg
xchg
push
push
filds
stc
ja
sbb
enter
fs
icebp
mov
jnp
push
lea
push
mov
dec
fsubr
mov
ja
mov
ljmp
xor
push
dec
das
mov
shr
sub
mov
lcall
jae
js
adc
inc
std
jae
test
cli
pop
sbb
sbb
leave
je
jo
adc
xchg
jb
mov
loop
xor
popa
mov
.byte
movsl
.byte
movzbl
mov
sub
mov
inc
jmp
mov
sub
mov
inc
jmp
mov
sub
mov
jmp
mov
add
mov
mov
jmp
mov
inc
mov
add
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
mov
not
not
sub
and
mov
pushf
popl
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
jmp
and
mov
sub
mov
jmp
lea
cmp
ja
mov
lea
sub
lea
sub
mov
pushf
push
mov
lea
push
mov
cld
rep
pop
pop
popf
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
mov
add
mov
jmp
mov
sub
add
pushf
popl
jmp
mov
pop
pop
pop
pop
popf
pop
pop
pop
pop
pop
ret
mov
add
jmp
mov
sub
mov
jmp
notl
mov
sub
and
pushf
popl
jmp
mov
add
pushf
popl
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
jmp
movzbl
mov
add
add
mov
jmp
mov
sub
mov
sub
jmp
mov
mov
mov
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
add
mov
mov
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
push
push
push
push
push
pushf
push
push
push
push
mov
mov
sub
mov
add
mov
movzbl
add
jmp
mov
sub
add
pushf
popl
jmp
mov
cbtw
cwtl
add
sub
mov
jmp
mov
jmp
mov
mov
add
mov
jmp
and
mov
add
mov
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
mov
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
push
add
push
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
add
push
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
add
push
push
add
push
push
add
push
add
push
add
push
push
add
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
add
push
push
add
push
push
add
push
push
add
push
add
push
push
add
push
add
push
push
add
push
add
push
add
push
push
add
add
push
add
push
add
push
add
push
push
add
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
push
add
push
add
push
add
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
push
add
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
add
push
add
add
push
push
add
push
add
push
push
add
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
add
add
push
push
add
push
push
add
push
add
mov
mov
sub
inc
mov
jmp
movzww
sub
add
mov
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
mov
mov
mov
add
shld
mov
pushf
popl
jmp
mov
mov
mov
jmp
mov
mov
mov
add
shrd
mov
pushf
popl
jmp
mov
add
mov
mov
jmp
mov
sub
cwtl
sub
mov
jmp
mov
mov
not
not
and
mov
pushf
popl
jmp
and
cmp
adc
push
push
push
add
push
push
add
fcomps
pop
or
inc
add
fcomps
xor
adc
add
add
and
push
call
fcmove
sub
and
or
and
sub
sbb
and
sub
or
or
sbb
pop
push
pop
push
inc
and
pop
sbb
sub
das
adc
adc
adc
add
test
adc
jecxz
ds
sbb
roll
sbb
or
fisubs
and
ret
xchg
pop
add
adc
jo
pop
adc
or
adc
adc
and
mov
add
ja
lahf
fsubs
sub
xor
sub
xor
adc
cmp
sub
sbb
and
xor
or
pop
push
jp
inc
or
or
or
adc
ja
rcr
or
xor
cmp
out
cmp
addl
fcoms
xor
push
cmp
ds
and
cmpl
push
or
or
mov
cmp
adc
xchg
cmp
push
imul
lahf
xchg
adc
cmp
pop
sub
push
or
popa
test
cmp
adc
aas
fdivrs
sub
and
sbb
and
sub
outsb
