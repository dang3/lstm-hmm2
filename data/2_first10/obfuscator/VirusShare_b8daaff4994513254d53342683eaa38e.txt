push
cmp
sahf
cmc
mov
mov
inc
xchg
cmp
mov
push
pop
out
out
sbb
fsts
dec
popf
sbb
jbe
int3
into
cwtl
rcr
lds
loop
cmpsl
test
scas
pusha
movsb
cltd
orl
sbb
decb
xchg
clc
in
lahf
insl
pop
call
jge
dec
dec
inc
cmpsb
je
cmpsl
mov
stos
jmp
pushf
lock
mov
scas
mov
fcomps
subb
imul
dec
jp
outsl
icebp
nop
pop
mov
sub
jmp
xor
cli
mov
sbb
push
das
arpl
pop
aaa
inc
cmp
imul
pop
push
fsubr
mov
popf
fstp
cmp
ds
xor
xor
hlt
add
sbb
loope
aad
pop
jl
push
in
pop
data16
xchg
push
xchg
pop
outsl
loop
test
push
inc
dec
mov
lea
or
adcl
aas
pop
negl
pop
xor
inc
pop
movsb
dec
cmp
lret
push
or
jo
jmp
xchg
daa
inc
call
int3
or
cld
fsubs
mov
iret
jae
lea
iret
cmp
ror
cmc
pushf
jmp
outsb
pusha
imul
out
jmp
jnp
in
popl
sbb
mov
sahf
inc
mov
jbe
lcall
xor
cmp
pop
ja
xchg
xchg
inc
mov
out
pop
or
fists
sbb
cwtl
loop
data16
call
lea
mov
cltd
cmp
fdivrl
mov
cs
sahf
clc
stos
push
add
rolb
cmpsl
orb
shl
mov
test
cmp
jmp
pusha
pushl
cmp
lea
jl
pusha
push
pusha
lea
ja
setne
test
adc
push
add
add
and
pushf
rol
ror
mov
bt
test
clc
cmp
push
jmp
lods
cmc
movb
cmc
jmp
push
movzbw
xchg
rol
push
setp
xadd
push
jmp
add
mov
mov
sub
out
jp
cmpsl
ds
jle
cld
jae
push
jb
out
jb
in
jae
push
jl
decl
pop
icebp
pop
xchg
pusha
or
cli
jns
jecxz
adc
cmpl
rclb
mov
push
inc
fnstcw
repnz
jge
mov
loop
mov
xor
xchg
jp
add
xor
cli
clc
jns
add
cld
out
repz
mov
inc
cwtl
cmp
popf
or
ljmp
movsb
inc
call
repz
or
pop
jecxz
jle
push
and
sbb
pusha
xchg
bound
mov
test
icebp
cmpsb
push
iret
jbe
pop
cmp
xor
inc
xor
ja
jbe
jne
jae
and
je
je
je
je
je
je
jbe
cmp
ss
jns
pop
repnz
icebp
cli
dec
jg
ja
sub
out
scas
fdivs
int
lahf
jp
aam
test
nop
jp
mov
shlb
sbb
lahf
mov
or
mov
popf
mov
cmp
mov
jne
mov
fistps
jb
dec
add
lret
loope
test
rol
mov
rol
mov
scas
mov
shll
rorb
mov
les
mov
mov
rcl
mov
lods
mov
movsb
lahf
fldt
pop
push
jns
mov
sarb
mov
lods
mov
out
insb
out
jns
push
push
xorb
sub
cmp
adc
sbb
adc
repz
es
adc
das
push
adc
sbb
adc
pop
add
push
sbb
jge
bound
jb
data16
adc
into
nop
scas
loope
sahf
loop
mov
jg
test
pop
push
insl
pop
pop
pop
jnp
js
mov
insl
or
stos
incl
stc
jne
jp
lret
fisubrl
or
scas
test
fiaddl
jl
jns,pt
jbe
inc
xchg
pop
cmp
scas
xchg
jp
ret
inc
jo
js
mov
jb
xchg
std
mov
sbb
mov
pop
mov
lea
jle
cltd
push
pop
mov
cltd
js
sahf
jb
cmpsb
popa
subl
cmpl
nop
mov
pop
out
xchg
push
dec
fsubrp
cmp
ret
aam
xor
loopne,pt
sbb
out
mov
ljmp
push
bound
fldl
ljmp
into
test
in
dec
xor
push
xchg
mov
scas
pop
cmovo
enter
mov
and
cmpxchg
push
mov
mov
sarl
adc
es
mov
outsb
push
mov
push
shrl
fimull
jp
loopne
popf
mov
cli
dec
xor
outsb
xor
lods
clc
pop
lea
push
and
cltd
and
aam
subl
add
cmp
cwtl
sub
test
jle
mov
mov
test
ljmp
cmp
outsb
mov
cli
and
push
cmp
jb
xchg
aad
test
inc
xor
insl
outsb
cmp
push
test
inc
xchg
jae
lock
mov
test
mov
push
lcall
or
ud1
sbb
out
inc
outsb
test
push
cwtl
cmp
cmp
push
mov
pop
in
imul
pop
mov
ficoms
lock
scas
les
adc
push
movsl
push
jecxz
movsb
loope
orb
repnz
xchg
xor
inc
ret
es
cwtl
mov
cmp
outsb
aad
push
subb
pop
mov
mov
inc
or
popf
xchg
movsb
cmc
loop
xchg
fisubl
xlat
fimull
adc
lret
pop
subl
rcrb
lea
xchg
data16
shrl
jmp
aaa
int3
sahf
mov
and
xchg
movb
xchg
mov
andb
xchg
test
xchg
sti
lret
jp
test
movsl
in
jp
sub
jl
jle
ds
jno
mov
xor
jp
addb
aaa
jp
stc
add
xlat
incb
cld
or
jp
ret
insl
cmp
jmp
sti
les
adc
adc
adc
gs
out
pop
gs
pop
movsl
sbbb
xor
fsubs
sbbb
jle
jmp
icebp
jp
into
aas
cmp
std
mov
outsb
push
jae
add
orb
je
cmc
aas
rcrb
inc
pop
bnd
pushl
mov
xchg
sahf
decl
sbb
jp
pop
daa
jle
push
add
sbb
inc
lret
pop
mov
addb
lods
jmp
push
add
push
xchg
cmp
je
outsb
sub
and
dec
jb
out
js
fmulp
cmpsb
mov
jle
push
outsb
sbb
jp
mov
jl
jge
jb
jbe
jge
testl
jp
mov
dec
jge
jp
sti
sbbb
adc
aad
jp
cmp
ficomps
mov
mov
movsb
jmp
xchg
test
fiadds
mov
cli
xchg
lea
out
fnstenv
out
iret
sbbb
mov
lds
mov
nop
xchg
stos
imul
inc
outsb
mov
sbb
mov
push
jns
cmp
icebp
or
lret
mov
ds
jle
pop
mov
cli
adc
mov
pop
xchg
xchg
add
xchg
mov
sahf
or
mov
notl
mov
adcb
pusha
jp
sbb
popa
sarb
xor
mov
mov
mov
sub
jle
jns
testb
pshufw
das
das
sbb
push
adc
jbe
xor
inc
scas
or
insl
jge
sub
je
int
imul
js
xorl
int
add
fadds
lret
xchg
mov
push
mov
jae
stos
int3
popf
jae
cltd
add
mov
pop
outsb
push
insb
and
mov
shrl
add
dec
mov
mov
jnp
mov
scas
xchg
rolb
mov
mov
inc
js
loope
aas
iret
out
mov
mov
hlt
je
xchg
lret
int3
xchg
fisttpl
mov
xor
sbb
leave
pop
scas
mov
inc
jp
xor
bound
stos
mov
dec
ljmp
push
mov
jbe
sarl
mov
dec
push
pop
shlb
jb
int
mov
xor
loopne
lods
or
xchg
mov
cmpl
push
push
push
sahf
std
sub
iret
mov
mov
cwtl
clc
jle
in
dec
push
inc
jno
pop
in
cmp
movsl
or
fcoms
mov
leave
lret
mov
pop
jo
scas
mov
outsl
pop
sbb
les
mov
lcall
ficompl
cmp
sub
cmpb
pop
push
jp
push
jno
gs
jno
call
mov
bound
loope
cmpsb
js
jb
add
sbb
pop
sbb
push
inc
sbb
mov
jle
push
pop
sbb
push
movlps
sbb
adc
mov
sub
fcmovb
pop
lds
pop
and
sub
and
mov
xorl
jno
cmp
repz
pop
or
out
adc
mov
std
pop
outsb
cs
inc
ss
add
mov
nop
mov
iret
sbb
mov
cmp
mov
lds
test
cs
outsb
jl
imul
mov
bound
dec
cmp
xor
pusha
mov
sbb
sub
inc
sub
sub
add
rep
pop
or
pop
jo
push
inc
pop
ror
lods
push
jbe
repnz
dec
test
xor
adcb
pop
jb
mov
jbe
loopne
enter
js
shl
loop
rclb
sbb
popa
mov
add
sbb
stos
das
bound
outsb
xor
jo
cmpb
cmp
subb
xor
pop
jb
test
xchg
mov
lock
je
xchg
sti
mov
popf
jns
loop
cltd
mov
push
pop
and
inc
add
sti
data16
cmpsb
stos
fadd
lahf
add
mov
rcll
pop
and
ret
aad
loop
cmp
movsb
and
fwait
inc
leave
add
scas
negl
nop
nop
test
mov
xchg
in
lds
xchg
rolb
jns
add
jl
cmp
ret
sbb
mov
out
pop
fcomps
sub
loope
jle
fcomps
jge
insl
and
arpl
and
divb
fsubl
testl
out
mov
xchg
push
jle
jl
pop
js
xor
imul
addr16
sub
jbe
outsl
xor
jp
push
dec
jbe
xor
ds
jbe
addr16
jbe
pop
inc
jnp,pt
sahf
insl
xchg
mov
cmp
and
cmp
fldcw
add
add
test
lret
pop
sub
pop
outsb
xchg
repz
clc
cmpsb
mov
sub
imulb
cmp
jns
sub
popa
subb
data16
outsb
or
add
inc
cmp
xchg
push
dec
sahf
or
jle
inc
adc
pop
mov
adc
push
push
fists
push
mov
inc
mov
incb
pop
cmpsl
mov
inc
mov
add
mov
movsb
lret
pshufw
ss
mov
inc
sbb
mov
jb
pushf
add
aad
jb
cmp
and
sub
push
ljmp
cmp
push
pop
ds
gs
cmc
push
int3
rclb
mov
rolb
mov
lret
bound
mov
hlt
aam
mov
inc
and
les
jne
jge
fs
dec
fsubs
icebp
xchg
xor
cmpsb
mov
outsl
inc
aas
bound
inc
paddd
xchg
adc
call
and
push
push
subps
inc
je
push
ds
jb
jl
jp
pop
xor
sub
pop
loop
sbb
sbbb
adc
jle
jl
mov
out
repnz
repnz
call
and
pop
add
sub
outsb
jle
pop
push
adc
repz
push
jb
jle
xchg
adc
jp
loopne
jne
sbb
jp
sub
jae
ljmp
add
sub
adc
je
adc
push
and
pop
push
adc
pmulhw
and
jns
or
jno
or
rclb
jns
fs
loope
adc
push
jmp
sbbb
clc
icebp
cli
pusha
cld
ds
std
stc
add
pop
jle
stc
ljmp
sbb
jp
or
in
xchg
lcall
lods
jbe
lods
pushf
jp
inc
test
and
jle
mov
loop
jg
out
stc
ljmp
icebp
repnz
jnp
idivb
cli
jo
pop
cmp
add
stc
pop
jo
pop
or
jne
punpcklbw
jae
push
imul
sbb
ds
jo
and
pop
cmp
sub
ds
stc
xor
pop
cmp
cmp
ds
pop
inc
cmp
dec
pusha
gs
fs
push
jo
pop
push
cmp
pop
pusha
popa
ds
pusha
stc
bound
pop
data16
outsb
pusha
pop
jbe,pt
stc
jle
pop
push
jno
pop
bound
stc
pop
jo
pop
push
cmp
ds
lcall
cmp
ds
stos
stc
push
jo
pop
dec
cmp
ds
mov
pop
dec
cmp
sahf
movb
push
sbb
sbbb
sbb
push
adc
adc
femms
or
or
subb
jbe
xorb
ja
js
andb
jno
dec
and
insl
sbb
pop
mov
dec
adc
inc
shlb
adcb
pop
arpl
dec
subb
push
push
pusha
dec
push
adcb
pop
push
dec
push
pushf
dec
gs
push
pop
mov
inc
jge
sbb
push
pop
andb
sbb
and
sbb
data16
popa
pusha
pop
mov
jae
addb
incl
std
sbb
or
subb
movsl
push
sbbb
or
out
add
inc
jl
jb
data16
jp
jp
jns
jo
js
clc
bound
imul
fnsave
pop
xorb
pop
fldl
sahf
push
inc
pop
std
push
pusha
dec
outsb
jae
jbe
jb
dec
jno
jbe
cmpb
cld
push
cmpb
outsl
pop
movw
jge
pop
andb
add
imul
jp
mov
imul
out
addr16
data16
sbb
gs
lea
andb
sbbb
ds
cmp
js
popa
jb
jge
jp
movsb
pop
pop
cmpb
cmpb
pop
jge
or
js
add
mov
jle
movsl
push
addb
push
stos
dec
pop
repnz
das
dec
adc
fs
pop
icebp
push
nop
push
push
pop
dec
add
sbb
push
add
push
xchg
push
push
sbb
adc
jb
leave
andb
pop
imul
dec
rclb
jl
sbb
push
push
and
outsb
dec
add
push
into
sbbb
dec
mov
push
mov
je
add
js
cmpb
dec
add
je
pop
sbb
pop
pop
push
addb
mov
lcall
dec
std
inc
add
mov
outsb
andb
sub
cmpb
add
insl
sbbb
arpl
es
cmp
jbe
dec
cmp
orb
pop
xor
xor
popa
jo
push
cmp
mov
inc
push
dec
pop
aaa
add
pop
subb
jl
xor
divb
push
mov
fs
mov
pop
dec
sbbb
push
pop
gs
pop
xor
scas
nop
push
roll
cli
das
xor
orb
je
pop
addr16
push
sahf
push
cs
pop
jbe
sub
sub
aas
xor
bound
arpl
addb
pop
xchg
daa
out
ss
jbe
dec
and
and
aas
pop
and
jb
jle
jbe
loope
and
jno
sub
mov
add
pop
js
cmpb
jae
pop
sbb
cmc
sbb
je
loopne
lret
push
imul
sbb
js
jle
jp
jle
sub
fildl
jp
adc
addr16
int
adcb
add
loope
adc
fidivrs
adc
insl
add
femms
test
pop
push
push
add
add
je
or
or
insb
xchg
clc
push
subb
or
pop
sub
pop
mov
dec
lahf
or
pop
and
in
aas
push
std
push
add
add
add
imul
jle
mov
les
pop
jl
push
std
incb
pop
jp
push
sbbb
std
add
fnstenv
arpl
imul
mov
dec
std
icebp
pop
mov
push
dec
pop
cli
add
push
fiadds
jle
ja
pop
testl
push
sub
js
hlt
push
mov
sbb
xor
jo
jmp
js
dec
xchg
sahf
pop
inc
pop
push
inc
out
add
mov
adcb
pop
or
adc
in
lret
nop
gs
dec
mov
xor
dec
jmp
pop
sahf
push
cmp
call
xorb
stos
jl
roll
pop
inc
push
mov
loop
jl
data16
loopne
bound
andb
imul
orb
bound
pop
js
fcmovnu
cld
mov
add
jp
daa
andb
push
mov
pusha
jp
xor
jl
stc
fildll
pop
gs
pop
xchg
add
popa
aam
adc
mov
sarb
subb
push
data16
dec
pop
bound
imul
push
xor
add
mov
push
mov
pop
push
repnz
test
dec
push
lret
pop
xchg
insb
sahf
dec
pop
andb
dec
popa
jge
sahf
addr16
leave
add
push
enter
jle
sbb
jno
andb
arpl
imul
add
jbe
adcb
push
push
std
repnz
dec
les
sbb
pusha
addb
je
gs
dec
cmp
add
lahf
mov
dec
mov
mov
call
insl
mov
mov
mov
pop
mov
dec
xorb
jbe
jle
das
je
into
push
pop
out
adcb
jne
movb
push
scas
scas
or
lods
outsb
int
sbbb
pop
cmp
lods
movsl
pop
orb
js
stos
add
push
stos
cltd
sub
jle
cmp
push
push
pop
pop
arpl
imul
mov
push
jae
add
dec
insl
popa
imul
push
mov
dec
cltd
mov
imul
cmpb
push
das
adcb
mov
mov
pop
add
add
jb
imul
and
outsb
pushf
add
pop
lcall
insl
cwtl
pop
mov
xor
dec
ficoml
xchg
add
push
dec
jge
xchg
enter
pop
cmp
push
adc
xchg
out
inc
dec
xorb
pause
movsb
inc
cmp
popl
mov
outsb
pop
daa
sbbb
dec
fimull
flds
push
dec
pop
mov
fiadds
mov
js
mov
js
mov
push
mov
aad
js
add
pop
out
imul
mov
popa
push
repnz
pop
cmc
push
adc
icebp
pop
pop
push
jbe
add
inc
test
test
imul
pusha
cmp
jl
jne
push
xorl
scas
push
addb
mov
xor
idivb
pusha
sbb
subb
push
andb
jno
lea
add
jns
jb
mov
mov
xor
pop
jne
jp
cmpb
fs
jae
adc
incl
jns
adc
jb
push
cmpb
xchg
jns
xchg
push
std
sahf
pop
pop
outsb
insl
add
in
inc
push
rorl
enter
imul
outsb
push
mov
push
fildll
cs
subb
dec
sbbb
mov
push
add
xor
cmp
pop
imul
fs
jbe
dec
pop
orb
cwtl
subb
bound
sbbb
pop
popa
or
fildl
pusha
mov
add
gs
dec
xor
cli
xor
in
pop
dec
mov
pop
add
push
pop
cltd
call
adcb
outsl
popa
push
addr16
pop
add
pusha
push
adc
bound
push
dec
jmp
mov
push
or
push
pop
andl
push
hlt
xor
mov
xchg
xor
data16
ljmp
arpl
cmc
dec
mov
push
addb
out
adcb
ds
in
jbe
andb
popf
push
orb
inc
add
push
dec
jp
inc
imul
js
pop
cmpb
push
cmp
outsb
inc
add
inc
push
inc
add
aas
jb
pop
addb
fnstsw
push
orb
pop
xchg
sbbb
push
stc
dec
jp
movsb
ds
orb
jg
dec
jae
imul
addr16
push
insl
popa
jge
push
and
adc
jg
cmpl
adc
push
addl
push
push
push
jbe
ljmp
cltd
lock
dec
cmp
ljmp
jae
push
and
cmp
jbe
test
push
dec
mov
bound
scas
arpl
jne
dec
push
addr16
out
or
sti
xchg
mov
push
jb
je
dec
idivb
imul
ss
push
outsb
ja
hlt
xorl
out
les
sti
rcrb
incb
cmp
xor
cld
fs
jne
push
push
andb
js
and
js
ja
addr16
jp
cmc
adc
xor
jnp
xchg
push
jo
mov
jbe
sti
mov
push
repnz
arpl
jae
jnp
push
push
outsl
lcall
js
and
pop
sarl
out
push
les
jp
popf
push
fistps
outsb
lret
bound
push
je
jbe
cs
dec
push
out
into
and
mov
push
jl
call
ja
jge
popf
lods
nop
sahf
mov
push
je
push
cmp
dec
pop
outsb
add
jl
jecxz
jae
push
jg
gs
test
pop
enter
jge
jb
mov
dec
xor
js
push
jg
xchg
outsl
jb
imul
cmc
add
hlt
mov
mov
dec
mov
push
or
maxps
or
outsl
xorb
js
divb
das
loopne
in
inc
mov
cmp
lcall
out
cmpsb
pop
jle
xor
das
out
pop
jl
lcall
popa
paddb
je
cs
xchg
stos
push
jl
pop
sub
addr16
push
fcompl
and
sub
dec
les
push
sub
and
lcall
jns
lcall
stc
mov
loop
pop
popa
or
je
pop
jl
stos
outsb
jg
mov
imul
jp
xor
xlat
xor
fimuls
jp
mov
ljmp
dec
and
dec
jo
es
mov
add
shlb
add
push
nop
and
sub
cmp
cmp
jp
sub
cli
bound
push
repz
fs
out
push
into
push
jge
jns
in
data16
addr16
and
ja
addr16
pop
inc
jl
loope
pop
pop
xchg
push
loopne
fldenv
addr16
fs
inc
insb
pop
lahf
pop
push
pop
test
daa
lcall
loop
mov
push
popa
mov
jb
push
cmp
ss
mov
pop
in
out
or
jb
fsubrl
popa
out
stos
jo
ds
jp
push
ficomps
sub
jg
add
out
and
jo
mov
dec
sub
push
xorl
mov
pop
mov
cmp
pop
dec
mov
loop
and
xchg
ss
insl
lods
ud0
jne
cmpsb
sahf
loop
pusha
jb
repnz
ljmp
dec
push
push
fs
arpl
sbb
pop
xchg
push
jae
sub
mov
pop
outsb
jle
loop
xor
xor
sbb
into
stos
sbb
lods
outsb
xor
fsubr
jb
jne
sbb
dec
inc
rcrb
push
push
test
aas
movsb
popf
inc
mov
jge
loopne,pt
fs
andb
jo
cwtl
or
push
bound
cmp
push
gs
int3
test
insl
dec
imul
outsb
mov
mov
push
pop
add
lods
inc
mov
ljmp
and
jno
fidivs
jo
scas
fsubrp
and
shlb
add
push
psubsb
inc
ljmp
push
jp
popa
fidivl
adc
push
mov
arpl
stos
bound
aad
jo
outsl
xor
jns
jns
sti
shlb
js
adc
jbe
mov
clc
loop
jo
das
cmp
out
imul
dec
push
ja
push
test
jb
mov
sbbb
andl
andb
jo
jge
outsl
push
cld
nop
scas
test
test
outsl
pop
js
mov
add
xor
repnz
loop
mov
cmpsb
rcrb
fidivl
data16
jp
add
add
cld
into
bound
mov
push
push
pop
jp
sbb
jns
xorb
aad
or
cmp
push
push
add
add
pop
pop
dec
push
outsw
push
push
or
lods
incb
cmpsb
ja
sahf
imul
cmp
int3
jl
bound
adcl
jo
js
jg
push
jle
cli
enter
dec
jnp
dec
or
or
std
jl
insb
jbe
jae
pop
mov
loopne
dec
or
out
sub
ficoml
ds
sti
test
push
push
add
dec
repnz
add
aam
push
jge
es
outsb
jo
push
jb
xchg
enter
mov
js
lock
outsl
dec
add
int3
pusha
push
jle
data16
int3
and
addr16
push
in
jge
xchg
mov
fdivrp
pop
push
shrb
in
loop
pushl
adc
std
xor
scas
mov
in
lret
push
sbb
push
cmc
std
repnz
loopne
outsb
arpl
stos
in
je
xor
popa
idivb
gs
insb
push
push
mov
add
test
subl
pop
test
mov
xor
ljmp
jo
outsl
addr16
outsb
and
gs
repz
cmc
mov
jle
and
subb
mov
data16
incb
xorb
adc
mov
sahf
pop
add
jns
js
in
fimuls
jnp
fcmovbe
fidivrs
jg
add
out
push
loop
fbstp
mov
ljmp
insb
jo
outsb
cmp
pop
popa
pop
cli
xor
pop
pop
push
clc
pop
sbbb
unpckhps
push
jle
ljmp
jns
fimull
subb
xor
outsl
and
sbb
je
or
int3
mov
push
jns
test
sbb
clc
add
add
outsb
adc
sti
cld
pop
jb
mov
testl
idiv
jp
icebp
cmp
outsl
das
loop
push
data16
scas
jns
push
outsb
pop
loop
out
cltd
test
test
shrb
adc
add
mov
cwtl
cli
imul
gs
sub
repnz
repnz
ja
xorl
cmc
ror
sbb
push
test
or
cmp
add
pop
inc
in
jne
adc
jle
rorb
jno
js
stos
fildl
dec
push
push
push
shrl
jbe
add
push
bound
and
loope
popa
push
mov
in
inc
dec
push
repz
int3
and
push
and
add
repnz
add
insb
rcll
push
inc
inc
mov
inc
xchg
pop
fimull
jp
sbb
push
xor
xor
or
or
out
push
jb
dec
jl
mov
jle
hlt
in
dec
adc
leave
pop
fimuls
out
add
adc
sbb
mov
clc
push
ss
test
pop
mov
dec
scas
pusha
adc
jmp
pop
mov
jge
mov
js
out
es
cwtl
jns
pop
aam
out
jo
outsl
aam
push
jl
ljmp
int3
fiaddl
mov
insl
gs
in
and
pop
aam
push
add
add
ljmp
add
push
jnp
repnz
in
inc
mov
gs
rolb
pop
jbe
out
jbe
lods
repnz
adc
inc
out
fs
pop
dec
je
insb
pop
mov
in
loop
fdivrs
mov
or
pop
fisubs
shrb
inc
int3
jae
out
sub
cld
fidivl
dec
jne
mov
shr
js
inc
imul
jnp
out
push
jbe
or
xorb
mov
outsb
mov
sub
lods
cmp
hlt
jo
data16
out
jo
and
mov
mov
inc
and
jle
inc
xchg
aas
jbe
or
js
rcrb
inc
insb
cmp
sbb
pop
mov
jno
arpl
or
pop
mov
cld
adc
cmp
callw
pop
out
add
je
jge
fmuls
loop
rorb
inc
ret
add
insl
test
cmp
sbb
sbb
test
loope
push
loop
fidivrl
jbe
dec
jnp
stos
jb
cwtl
bound
inc
push
pop
sub
ljmp
jg
mov
jns
cmc
lcall
leave
sbb
push
mov
and
scas
add
or
pop
lret
cmp
jb
pop
loop
push
push
jl
outsl
imul
jle
shrb
sbb
dec
jp
fisubrl
dec
loopne
push
push
xor
sub
gs
jnp
jbe
or
sarb
mul
call
jp
mov
inc
mov
imul
outsl
ljmp
std
sub
jb
cmp
out
push
or
ljmp
inc
outsl
imul
mov
jbe
cmc
fiadds
cli
inc
lock
out
test
aam
cmpb
xchg
popa
or
gs
hlt
ljmp
ficoms
dec
pop
mov
fldl
repnz
or
leave
cmp
fcmovu
rorb
push
sarl
fnstenv
mov
divb
les
jp
cmp
push
insl
ror
mov
mov
es
sub
inc
adc
outsb
xlat
in
jo
push
mov
loopne
scas
hlt
add
jp
loop
mov
out
rclb
pop
mov
pop
sarb
push
js
sbb
sahf
mov
cmp
add
sub
push
pop
lods
or
ljmp
es
cli
stc
outsl
push
lock
das
xor
jl
jle
fiadds
mov
outsb
inc
push
outsb
and
push
xchg
cld
jp
out
jle
jo
add
mulb
inc
add
mov
scas
outsb
mov
js
add
mov
fdivrs
xor
cs
scas
adc
subb
imul
ljmp
xlat
test
ss
aam
in
pop
je
in
sarb
jl
or
pop
js
jmp
jns
pop
aas
cli
dec
cmp
xor
clc
fdivs
mov
push
add
add
cld
fcompl
out
addr16
sbb
push
push
jns
scas
xor
sub
out
rcrl
mov
mov
loopne
and
shll
repnz
insl
daa
push
adc
mov
jp
scas
je
pop
mov
push
xor
fimull
push
push
fsubl
push
shlb
insb
outsb
mov
and
or
in
adcl
and
jo
std
mov
add
dec
jbe
dec
in
loop
out
pop
push
aaa
insl
xchg
adc
rolb
sti
mov
out
outsl
cld
jbe
push
inc
iret
and
push
jl
push
xor
jo
jns
popa
jle
into
lods
es
sub
daa
repnz
pop
popf
shll
cmp
rcrb
into
inc
xchg
int
je
ss
xchg
adc
loop
movsb
into
dec
inc
or
push
mov
pop
fiadds
push
ja
sub
cmp
add
push
inc
fdivrs
inc
pop
push
insl
ret
pop
loop
jl
lret
or
mov
xor
imul
jns
sbb
outsl
leave
popf
push
shrb
jo
loope
mov
out
and
cmp
pop
rolb
or
dec
and
jns
outsb
fisttpll
push
sbb
jo
lret
jns
js
adc
imul
outsl
and
push
rcrb
hlt
faddl
push
out
les
push
lock
jbe
es
ret
jl
pop
rcr
testb
dec
mov
xchg
cmp
xchg
jns
jne
jb
jbe
cmpsb
jno
push
jl
out
mov
xor
int
mov
ss
cli
push
add
xor
ja
push
mov
dec
out
aaa
outsb
je
scas
jo
rclb
jno
sbb
gs
dec
xchg
cmp
cld
mov
in
pop
jl
test
call
js
sub
sbb
mov
jne
popa
push
imul
push
and
arpl
popa
lods
xchg
pushf
mov
stc
dec
xchg
jge
cli
loop
mov
jl
mov
fnsave
and
and
adc
aaa
jns
jg
pop
mov
mov
push
imulb
push
outsl
je
mov
imul
mov
imull
out
ss
mov
add
sbb
dec
mov
rol
push
dec
mov
idivl
stos
movb
mov
insl
dec
pop
lret
repnz
jo
shrl
in
jne
out
pop
jbe
xchg
mov
cmp
pop
jne
xchg
popa
pop
push
or
push
pop
js
psrld
jmp
bound
xor
popa
xor
mov
xor
outsl
jb
lock
pop
repnz
pop
jnp,pn
sbb
mov
jbe
sbb
test
bound
outsl
pop
outsl
sbb
outsl
mov
fs
jb
cmp
push
insb
aaa
mov
sub
xchg
lock
fidivs
jae
push
push
xchg
push
jmp
insl
sub
bound
shrb
push
jbe
jo
repnz
aam
out
aad
jge,pt
imul
push
add
dec
pusha
add
jns
andb
adc
movsb
mov
pop
loop
push
out
xor
sub
mov
fcoml
add
mov
xor
pop
mov
ss
repnz
inc
insb
es
ja
jbe,pt
into
jg
ficoml
add
test
mov
jp
std
inc
je
mov
ss
mov
fcmovb
shr
rclb
sahf
mov
outsl
addr16
push
gs
dec
jge
leave
cwtl
outsb
insl
pop
scas
or
pop
ss
inc
out
push
dec
jp
or
mov
push
fnstsw
jo
mov
bound
jo
mov
jne
mov
fisubrs
jp
and
add
xchg
push
xor
out
inc
dec
xchg
outsb
lods
and
jo
xor
jns
jae
mov
bound
xor
jns
in
xor
xchg
lret
stos
rcrl
pop
into
pop
je
out
push
pop
add
data16
mov
ljmp
fisubrl
xor
outsl
lret
sahf
mov
js
inc
dec
insb
jbe
call
cwtl
mov
insb
popa
test
ret
fwait
pop
mov
add
testl
add
lods
and
dec
and
data16
jb
popf
push
pusha
shrb
sbb
fsts
scas
out
jmp
shlb
lret
jbe
jbe
int
test
mov
lods
jne
repnz
enter
pop
ss
stc
je
sarb
jg
ja
fcoml
pop
cmp
mov
add
popf
popa
je
fst
or
xchg
sub
cmpsl
sahf
loop
mov
xor
jp
jns
push
aam
enter
cmp
and
imul
cwtl
pop
push
inc
jne
fs
jns
push
dec
pcmpeqd
cmp
cld
push
lods
repnz
fdivr
cmp
sbb
pop
fldl2e
push
dec
js
push
out
pop
lahf
or
imul
call
movsb
push
outsl
mov
rclb
test
sbb
ja
addr16
mov
stc
pop
aaa
push
shrl
gs
xor
js
in
stc
adc
mov
cli
out
mov
mov
jl
push
lret
outsb
pop
insl
test
stos
mov
pusha
mov
jbe
sbb
mov
cmp
bound
ja
add
out
cmpsb
xchg
cmc
ja
cli
fimull
cld
in
sub
dec
repnz
pop
jbe
xchg
fdivrl
outsb
lods
dec
dec
lods
lret
je
jp
or
inc
push
inc
addr16
cmp
lret
push
in
loop
xchg
pop
push
sbb
ss
movd
add
xchg
mov
push
add
pusha
jo
jne
push
and
mov
hlt
jns
pop
loope
dec
je
dec
pushf
mov
cmp
mov
pop
jp
fidivrs
mov
push
loop
cmpsb
add
xor
or
push
jge
xor
and
in
xlat
xor
sbb
ja
and
inc
enter
sub
int3
movsl
push
dec
std
mov
jns
ljmp
sub
push
sub
adc
xchg
rclb
fsubrl
jae
jae
scas
or
movsb
lcall
aas
cli
lods
popf
sqrtps
dec
xchg
or
testl
into
mov
cmpsb
xor
dec
inc
aaa
std
add
outsb
mov
mov
popf
loopne
scas
jg
fimuls
mov
xor
outsl
call
xor
js
loop
enter
sbb
push
pop
mov
imul
sub
push
popa
jbe
jl,pn
pop
jle
sub
sbb
pop
mov
scas
stos
ficompl
clc
leave
cmp
pop
insb
push
push
pop
add
push
mov
dec
mov
nop
rcrb
inc
pop
jge
push
loope
dec
dec
jmp
into
loop
outsl
cli
jne
jo
push
in
jno
jl
bts
mov
pop
push
loopne
fistpll
push
inc
bnd
loop
out
push
xor
rclb
or
int
sbb
pop
cwtl
lcall
sub
inc
adc
fs
jp
jbe
repnz
scas
jne
jl
sahf
imul
cs
les
in
pop
bound
cmp
xchg
fnstsw
push
dec
jl
add
push
fsts
push
dec
repz
outsb
sbb
jbe
scas
and
outsb
imul
pop
imul
hlt
jl
mov
cli
jg
jp
daa
mov
adc
cmpb
jo
fxch
imul
std
outsb
inc
outsl
sub
daa
loope
int3
xchg
jp
test
xchg
repz
out
dec
push
jno
add
inc
jl
jp
aam
pushf
cmp
dec
test
and
pop
jl
gs
dec
cmpxchg
inc
sbb
push
jl
data16
cmp
jns
rorb
mov
imul
jge
xor
imul
fsubrl
clc
or
jne
popa
sbb
je
push
jne
push
pop
mov
cmp
ss
dec
push
jne
aaa
jle
mov
sbb
cmp
jbe
jbe
dec
jb
adc
sbb
mov
jne
popa
insb
pop
pop
test
xor
xor
jne
and
push
jne
out
dec
jbe
dec
inc
jl
cmp
jne
jbe
jns
xorb
outsb
sub
adc
clc
jno
pop
xor
jl
pop
lret
jl
es
inc
jl
orl
xor
pop
jno
cld
mov
repnz
shll
jl
or
push
push
jne
jb
jl
inc
pop
inc
aam
jne
pusha
movsb
call
nop
roll
push
jb
data16
lret
mov
push
adc
jecxz
fdivr
ss
test
pop
xor
cmpsb
jl
ljmp
push
and
in
xchg
data16
ds
xchg
fdivl
jl
and
loopne
mov
ss
push
jl
repnz
jbe
jl
imul
les
imul
rclb
inc
pusha
jno
jl
popa
pop
jne
test
mov
cli
jl
lds
jl
stc
push
dec
gs
jge
enter
jl
loop
jecxz
rolb
dec
fidivrl
xor
mov
jl
shll
jecxz
pop
repnz
repz
push
cld
xchg
push
imul
es
stc
dec
js
scas
aaa
push
shrb
icebp
jl
jno
imul
inc
test
xor
mov
bound
in
loop
push
pusha
dec
pop
pop
cmp
pop
and
push
jne
jbe
fimuls
pop
in
jae
xor
bswap
cli
xchg
jl
andb
inc
jne
jne
mov
push
sub
enter
jno
jns
mov
lret
jne
jne
insl
jbe
cld
repnz
hlt
jbe
dec
cmp
jl
fisubl
outsb
push
or
pmovmskb
inc
jbe
inc
popa
jg
in
imul
adc
jne
mov
jne
sbb
push
in
testl
mov
jns
mov
and
jp
push
test
jb
jl
pusha
orl
dec
pop
dec
mov
in
pop
dec
sti
push
icebp
push
fs
jbe
push
cli
adc
pop
jno
aaa
jb
jl
inc
inc
jae
inc
jb
jl
insb
pop
dec
pop
cmp
divb
jb
test
mov
jle
jbe
dec
fsub
jb
and
mov
or
pop
xor
int3
jae
jbe
inc
push
pusha
push
jne
xor
mov
lds
xchg
xor
push
outsl
je
jp
lock
popa
jl
outsb
pop
add
leave
in
outsb
loope
fsubrl
push
jp
fdivrs
cmpsl
pop
inc
ss
cmpb
add
out
shlb
pop
scas
daa
popf
xor
jl
gs
xor
inc
pop
dec
into
xor
pop
jl
outsl
cli
rorl
inc
mov
stc
dec
out
insl
fsubrl
pop
pop
clc
scas
clc
cmp
ja
out
sub
shll
xchg
bound
stc
xor
in
fistps
pop
xchg
mov
jb
lock
jp
jp
rcrl
cli
shrl
pop
adc
and
outsl
sbbb
xor
dec
scas
lods
ror
stc
aam
nop
sub
cmp
test
xlat
fdivs
dec
sub
mov
cmp
loopne
test
jl
sbb
cmp
sub
xchg
pop
scas
pop
push
sahf
js
sahf
xor
insb
cld
out
shlb
jnp
push
data16
sbb
jns
sbb
out
mov
xchg
jb
fstpl
mov
mov
outsl
ror
jns
jae
sahf
ds
lods
mov
scas
fs
into
add
sub
dec
sbb
outsb
xchg
mov
outsb
jb
andb
or
movb
mov
scas
jnp
loopne
jp
cwtl
cmp
add
mov
call
in
fcoml
popa
mov
pop
jne
mov
mov
pop
lods
xor
shrl
ljmp
xlat
imul
jo
sub
and
xor
shl
call
arpl
jmp
or
jp
push
mov
xor
pop
push
neg
push
scas
imul
cmpsl
add
pop
or
pop
imul
push
mov
mov
mov
adc
pop
jb
aam
pop
pop
fldl
lds
jbe
aam
jl,pt
sbb
sbb
push
fdivs
je
bnd
lods
in
dec
cmpsb
jp,pt
and
lret
scas
adc
pop
fidivrs
test
jle
repnz
outsl
insb
xchg
and
or
push
fstps
push
pop
std
ja
push
cmpb
pop
jo
pop
push
ds
cli
fwait
pop
sub
cmp
pop
push
aaa
push
int
push
add
pop
mov
sub
jb
and
cmp
xchg
cld
push
push
clc
push
or
pusha
adc
imul
icebp
sbb
cmp
adc
xor
sbb
sbb
jns
bound
jp
xchg
or
adc
notl
add
fnstcw
cmpsl
dec
sti
inc
jp
loop
dec
sbb
xor
jns
add
stc
or
pop
or
adc
sbb
cmp
pusha
jns
ds
sbb
adc
jmp
jns
mov
jnp
jp
outsb
rcrb
addl
mov
mov
mov
hlt
bound
inc
or
test
and
jbe
jg
mov
push
pop
daa
add
mov
rcrb
lret
aam
xor
js
test
shll
pop
mov
add
mov
xor
push
mov
mov
cmc
pop
add
mov
mov
aam
rorl
mov
data16
inc
sub
jbe
dec
cmp
cmp
popl
pusha
mov
movsl
lret
dec
pop
imul
push
push
rol
addr16
or
out
int
sti
aaa
mov
xor
xchg
repnz
cli
mov
pusha
adc
sbb
stc
sub
pop
cmp
inc
icebp
dec
pusha
push
ds
stc
push
stos
icebp
jp
cli
mov
add
cmp
ds
lret
pop
sarb
icebp
fisubl
loop,pt
stc
ljmp
icebp
add
adc
stc
and
push
xchg
pusha
cmp
inc
push
stc
pop
jo
pop
jbe
pusha
bound
stc
mov
mov
icebp
loop
out
decb
stc
push
jo
pop
cmp
pop
pusha
outsb
jle,pt
inc
xor
stc
scas
jo
pop
mov
pop
out
jp
inc
mov
pusha
ds
cmp
cmp
icebp
aaa
pusha
ss
xor
cmp
icebp
das
pusha
cs
sub
aaa
sub
adc
fcoms
hlt
popf
push
cmpsb
and
iret
in
or
mov
push
sbb
jns
pop
adc
add
punpcklbw
ds
or
sub
jle
cmp
cmp
negl
mov
jbe
pusha
xchg
imul
pop
negl
mov
jns
dec
and
sbb
mov
mov
sbb
push
jb
push
nop
push
inc
adc
jno
nop
dec
inc
cmp
mov
pop
dec
sahf
push
pop
push
clc
fs
mov
iret
lret
cmpsb
pop
xlat
xchg
outsb
fisttpl
inc
jecxz
in
mov
out
lret
mov
icebp
repz
jbe
and
jp
dec
pop
dec
icebp
dec
mov
dec
dec
push
gs
sbb
and
movsb
cmp
les
int3
cmp
cmp
xor
pop
mov
fdivrl
sub
icebp
sub
cs
das
data16
cmp
pop
xor
xor
ss
aaa
data16
cmp
pop
cmp
cmp
ds
xchg
adc
inc
sbb
mov
movsb
xor
lock
outsb
cmpsb
sbb
pop
xor
jg
inc
xor
cmp
enter
xor
adc
pop
dec
jb
cmp
push
movsl
into
sub
imul
insb
out
cmp
pop
rcrl
jnp
mov
lret
loope
adc
pop
dec
add
cmp
jp
or
jo
test
clc
jb
push
push
cmpsb
cmpb
inc
pop
jnp
lret
cmp
jns
pop
sarb
lret
xor
fdivrs
ds
inc
xor
aas
je
dec
aas
ret
int
bound
mov
mov
or
jg
and
jo
pop
bound
xchg
outsb
pusha
xchg
jle
cli
xchg
add
cmp
ds
stc
lea
pop
mov
psllw
cs
xchg
jo
pop
xchg
cmp
xchg
pusha
bound
xchg
fiaddl
xchg
stc
ljmp
icebp
adc
sub
pusha
mov
shl
pushf
pusha
ljmp
or
cmp
icebp
mov
push
stc
mov
mov
jp
icebp
scas
pusha
movsl
ds
cmpsb
stc
out
jo
pop
push
cmp
ds
stos
stc
push
jo
pop
outsb
cmp
pusha
mov
scas
stc
scas
jo
pop
mov
ljmp
psubw
cmp
icebp
mov
push
ds
stc
mov
xchg
sub
mov
fidivrs
pop
or
mov
ds
mov
popa
rcrl
jno
cmp
ret
push
stc
les
sub
lds
cmp
icebp
scas
pusha
ds
leave
pop
ljmp
ds
int3
stc
push
int
jp
into
cli
mov
ds
stc
shll
pop
sarb
sbb
add
mov
xor
jmp
out
xchg
gs
shll
mov
dec
ret
mov
outsl
mov
mov
sub
push
std
nop
jle
shll
xor
mov
rcrb
xchg
jle
iret
mov
nop
mov
pop
fdivrs
test
jg
mov
aad
dec
jns
ret
inc
into
xchg
fcmovnb
scas
xchg
les
add
push
aaa
sahf
inc
bound
and
shlb
lds
dec
aas
mov
xchg
into
sbb
test
testb
mov
je
sbb
sarl
add
dec
jno
lods
int3
and
mov
int
dec
jmp
sbb
inc
bound
mov
aaa
push
hlt
test
jo
bound
sbb
mov
adc
clc
dec
repnz
js
add
cmp
pop
pop
outsb
mov
pop
jp
push
clc
hlt
in
cmp
push
ljmp
fstpl
inc
pop
into
pop
cmp
imul
mov
mov
fsubrp
jmp
and
xchg
push
iret
mov
push
stos
pop
enter
lret
outsb
pop
inc
shll
pop
push
mov
sub
hlt
stos
lahf
pop
bound
jecxz
sbb
pop
decb
test
bound
sub
fcompp
rclb
xor
inc
idiv
loopne
outsb
lret
scas
mov
aam
repz
popa
outsb
bound
js
sarb
mov
xchg
scas
sub
sbb
lret
ret
inc
lods
sub
xor
fdivrp
mov
je
inc
mov
add
xor
fucom
pop
and
cs
icebp
mov
pop
jns
cltd
into
inc
lret
and
cmp
sti
mov
cmp
inc
cmp
sbb
push
xor
adc
push
repnz
push
xor
pop
push
test
push
fisubrs
jo
mov
pop
outsb
testb
subl
mov
fnsave
jb
in
outsb
pop
adc
gs
pop
ret
sub
inc
dec
add
and
jmp
out
out
scas
inc
xor
fnstenv
insl
push
pop
stos
push
and
rcll
fistpll
lock
lret
sub
mov
xlat
shrb
mov
fcmove
data16
jge
mov
bound
loopne
out
inc
push
sub
out
cwtl
addr16
jo
lret
ficompl
btc
xchg
sub
ret
dec
xchg
ds
push
inc
je
push
adc
lods
stos
lret
mov
mov
jns
lock
data16
bound
jl
sahf
push
popa
xor
js
int3
mov
sti
bound
dec
inc
popa
or
ljmp
push
xor
mov
mov
mov
jnp
leave
pop
outsb
xchg
out
jp
jo
bound
rorb
jge
popf
mov
dec
push
sbb
jbe
mov
xor
sbb
xor
pop
mov
scas
cmp
mov
icebp
aam
add
fisubrs
js
inc
inc
enter
pushf
and
rolb
adc
out
adc
ror
mov
push
xchg
data16
outsb
outsb
pop
lods
fmul
cli
aas
mov
jge
xor
pop
pop
fdivr
inc
xor
xchg
sbb
push
sbb
adc
or
cmp
cmp
sub
xorb
out
mov
xor
sbb
inc
push
emms
in
jns
mov
mov
jge
lcall
sarl
outsb
mov
dec
dec
adc
rclb
cmpb
jnp
and
jae
shrb
cld
test
bnd
rol
mov
jne
xor
pop
jg
mov
out
dec
fdivl
int3
jb
mov
mov
mov
push
pop
inc
cld
sub
ds
es
and
cmp
icebp
and
and
jns
pop
dec
cmp
bound
xchg
push
jno
mov
insb
sbb
mov
ret
xchg
push
mov
jp
push
mov
pop
mov
jb
jp
ja
jb
xor
and
jbe
push
divl
ss
std
lods
test
lcall
cmp
ds
push
and
pop
inc
rolb
fwait
jbe
push
lret
dec
push
dec
sub
push
pop
mov
ljmp
lcallw
mov
stos
jp,pt
sbb
mov
ret
jle
fistpll
pop
shlb
adc
pusha
loop
dec
andl
ret
and
cli
jno
arpl
jp
jle
idivb
adc
jp
jo
inc
mov
push
je
out
jb
or
icebp
sarb
imul
sbb
xor
stos
mov
sbb
xchg
andb
negl
test
push
add
adc
jp
xor
jl
xor
mov
jb
push
xchg
jno
xor
mov
cmpsb
sti
jp
lcall
jp
mov
shrb
bound
mov
pop
jb
mov
mov
mov
xchg
cmp
pop
lods
inc
popa
dec
dec
inc
popa
jp
stos
cmp
jbe
dec
pop
pop
cmp
jp
lret
fiadds
jbe
cld
mov
pushl
pop
jb
adc
mov
mov
cmpsb
and
testb
add
fldl
popa
jb
enter
inc
adc
push
ljmp
and
fdivrl
pop
cmpl
mov
stos
fadds
push
add
push
push
jl
pop
push
or
push
mov
mov
xor
std
jle
out
and
xor
and
nop
add
xchg
mov
mov
pop
rcrb
inc
int
pop
scas
insb
pop
test
cmpsl
dec
pop
push
jb
and
mov
or
cmp
adcl
int3
and
push
xor
insb
pusha
push
pop
andb
popa
in
add
pop
or
jns
sub
fs
dec
ss
aaa
bound
xor
cmp
bound
dec
adc
add
leave
ficoms
xor
adc
xchg
pop
or
jmp
pop
push
or
inc
push
inc
mov
push
sbb
sub
ds
lahf
mov
add
push
cmpsl
push
mov
sub
js
scas
arpl
cs
inc
push
push
mov
xor
mov
cmp
push
repnz
repz
jl
inc
cs
pop
inc
cmp
daa
in
pop
mov
pop
xor
push
jbe
insb
xor
cs
stos
mov
jbe
sub
inc
cmp
sub
inc
jns
imul
dec
imul
dec
aas
inc
inc
push
jbe
sti
icebp
inc
lods
fstps
cmp
sub
pop
imul
sahf
inc
rdmsr
cmp
sub
mov
std
jbe
sub
ds
jbe
sub
cmp
sub
push
cmp
cmp
and
push
ss
cmp
std
cli
popa
cmp
push
lahf
lret
inc
aad
mov
push
xor
into
add
inc
pop
push
cmp
push
cmp
xor
cwtl
push
aas
sub
adc
mov
push
xor
add
ficoms
daa
bound
cs
xor
popa
ds
test
sub
jp
jg
jp
in
cmp
cs
idivl
das
sub
jb
ds
sub
cmp
scas
cmp
inc
inc
clc
jp
dec
dec
shlb
int3
jbe
push
jae
push
mov
xchg
dec
fsubrs
out
pop
fbstp
sub
jb
jb
jb
xor
jp
test
jne
out
mov
cwtl
rclb
inc
loopne
imul
lret
jo
xchg
subl
sub
ss
jbe
sub
lahf
inc
xchg
push
cmp
pop
les
mov
xor
ds
mov
clc
ss
adc
lahf
push
addr16
lods
mov
sub
aas
inc
xor
sub
push
inc
xor
pop
mov
jno
sbb
jp
into
aam
push
jp
aad
fs
loopne
push
bound
inc
push
cmp
jns
mov
jns
cmp
shll
ds
fdivl
jmp
loop
cmp
pushf
fnstenv
sbbb
mov
xor
jb
jae
jb
adc
mov
sub
jno
jp
bound
sub
jp
in
das
xor
cld
pop
ss
xor
jp
jno
inc
pop
sub
inc
stc
sub
xor
jb
or
repnz
pop
mov
pop
inc
loop
and
repz
cmp
jp
cmp
hlt
stc
pop
sub
aas
arpl
sbb
push
xchg
xor
jp
sub
jno
lahf
loopne
stc
repz
cmp
or
addl
sub
mov
jp
cmp
jecxz
cmp
jno
cmc
ret
mov
cmpsb
pop
mov
fisttps
out
outsb
aam
aaa
jle
xor
pop
aas
jo
ss
jmp
fidivrs
cmp
xchg
push
cmp
or
cs
push
push
xor
sub
xor
repnz
xchg
inc
xor
inc
lret
xor
insb
jnp
mov
fisttps
mov
jb
jp
xor
jp
mov
cmp
outsb
cmp
and
int3
cli
sbb
fiadds
xchg
inc
xchg
and
ss
testl
outsb
jp
fistl
test
cmp
add
bound
mov
and
cwtl
jp
dec
aaa
sbb
mov
call
popl
push
jp
mov
jb
adc
dec
push
mov
sub
add
insb
jmp
aas
lods
popf
shlb
cmp
insl
fcmove
imull
outsb
jo
cmp
sahf
ss
arpl
push
mov
lcall
jecxz
cmp
das
jp
mov
inc
push
dec
jmp
push
inc
push
popa
jb
sub
jno
jecxz
loope
inc
xor
fisubrs
cmp
mov
mov
jns
add
sub
insb
xor
pop
and
cmp
cmp
sbb
xor
sub
push
sbb
jne
cmp
jbe
ss
imul
xor
cld
xchg
jns
movsl
sub
xchg
and
pop
inc
and
inc
inc
aas
pop
inc
sub
ds
aas
fcoms
ja
push
xor
xchg
pop
cmp
outsb
pop
push
jp
jb
jno
or
cmp
mov
mov
jbe
mov
fdivrl
mov
sub
pop
jb
divb
das
mov
loop
jl
jns
jo
push
lods
mov
sub
aas
jbe
jno
push
pop
in
test
xor
popf
inc
frstor
jp
cmp
ss
shrb
sbb
dec
aas
out
out
mov
bound
rcl
push
push
addr16
pop
xor
sub
push
jno
sub
xchg
or
arpl
cmp
sub
dec
sub
jne
jns
jae
daa
jle
xchg
push
push
addr16
lahf
inc
sub
push
mov
jno
int
je
or
call
jle
jg
sahf
sub
xchg
sub
cmovs
shll
imul
out
mov
outsb
jnp
sbb
scas
fimuls
insl
push
xchg
xor
adc
inc
icebp
push
dec
xchg
enter
into
jb
out
pop
rcll
adc
test
push
push
sub
nop
lret
jmp
inc
dec
mov
pusha
push
push
ja
xchg
insb
jmp
mov
test
and
pop
mov
pusha
sahf
cmp
xchg
pop
add
mov
pop
aaa
setno
jns
adc
push
jo
pop
push
cmp
icebp
es
sub
cs
ss
pop
cmp
inc
pusha
dec
ds
push
stc
push
jo
pop
pop
cmp
pushaw
push
outsb
mov
cmp
jle
cli
xchg
add
jo
pop
mov
mov
ds
stc
bnd
pop
push
cmp
icebp
es
sub
cs
ss
pop
cmp
inc
pusha
dec
ds
push
stc
push
jo
pop
pop
cmp
pushaw
push
outsb
mov
cmp
jle
cli
xchg
add
cmp
mov
xor
icebp
jp
pusha
dec
ds
dec
stc
dec
jo
pop
push
cmp
pop
cmp
sahf
and
imul
jp
dec
dec
stc
dec
jo
pop
dec
cmp
push
push
cmp
push
scas
outsb
dec
pusha
jns
ds
dec
stc
dec
jo
pop
push
sub
inc
xor
push
shll
xchg
out
xchg
sarb
push
jb
mov
pop
dec
xor
pop
cmpsb
imul
xor
outsb
cli
cmp
dec
je
ds
dec
jne
shl
popa
dec
push
mov
hlt
jp
or
xchg
pop
aas
cmp
test
ljmp
cmp
sub
jns
inc
inc
arpl
shl
out
es
mov
jmp
imul
cmp
popa
mov
jno
jns
fisubl
jl
adc
push
add
mov
pusha
sbb
adc
popa
ja
jns
jno
jns
add
sub
sbb
push
imul
int3
repnz
push
sbb
push
das
scas
or
adc
cmpsl
push
push
jbe
add
loop
pop
jl
push
and
pop
push
adc
xchg
loope
je
lods
je
pop
clc
cs
je
sbb
dec
sub
fcomps
dec
jge
mov
into
push
xor
out
pop
cmp
push
roll
stos
adc
shlb
test
push
paddsb
ret
pushw
inc
and
push
push
bound
pop
jnp
adc
inc
pusha
inc
lea
dec
test
outsb
lea
rorb
pop
lds
arpl
jae
dec
bound
sub
scas
cmp
sub
xor
push
in
push
outsl
pop
pushf
pop
jle
and
xchg
inc
jl
add
enter
popa
inc
inc
leave
jp
fisubrs
inc
test
ds
mov
ret
sub
cmp
ss
lcall
sub
xor
mov
add
sbb
dec
dec
dec
jge
dec
dec
push
push
insb
shlb
mov
inc
jbe
loopne
icebp
test
push
adc
and
sbb
nop
cmp
mov
pusha
aad
dec
decl
xor
sub
fcomi
cwtl
cmp
push
cmp
ret
sbb
push
pushf
aas
cmp
adc
or
mov
sbb
dec
rclb
and
push
or
inc
mov
adc
mov
pop
ds
sbb
mov
or
adc
jle
jns
cmp
pop
adc
lock
sbb
popf
push
push
push
push
insl
aas
pop
dec
mov
jns
and
mov
sub
dec
cli
xor
push
push
push
push
push
stos
jns
xor
pop
das
xor
movb
mov
ret
adc
into
test
bound
xchg
jb
mull
jb
mov
rcrb
mov
aaa
cmpl
cmpb
out
mov
xchg
pop
andl
xchg
xor
jmp
int
scas
jns
pusha
jno
jle
cmp
adc
add
mov
inc
shlb
cmp
mov
push
mov
aaa
jae
ja
sbb
dec
bound
sub
xchg
inc
rorl
push
inc
push
scas
mov
inc
push
push
adc
cmp
push
sbb
lahf
adc
inc
push
cld
inc
push
add
push
cmp
das
das
mov
fidivl
test
dec
insl
push
inc
adc
lcall
push
mov
sbb
icebp
push
int
mov
add
inc
lret
add
ficoml
cmp
cmp
jb
rcll
imul
sbb
js
push
jg
sbb
push
adc
inc
dec
xor
mov
add
data16
xor
test
jns
pop
gs
inc
and
cmp
scas
jae
ss
ds
mov
mov
in
or
das
aaa
vmread
inc
push
nopl
stos
or
adc
sub
cmp
lods
lea
ljmp
and
out
and
js
adc
pop
xor
repnz
idiv
repz
adc
add
fs
ljmp
icebp
push
mov
xor
ss
fistpll
sbb
inc
push
das
cmp
sbb
mov
test
pop
leave
jnp
repnz
subb
push
sub
xchg
faddl
cmp
jnp
add
cmpl
cmp
mov
sbb
pop
cmp
bound
push
adc
ret
adc
add
add
cmp
outsl
mov
ss
movlps
pop
mov
int
push
adc
bound
sbb
or
and
xor
ret
pop
mov
xchg
adc
out
sti
mov
cmp
xchg
lret
jge
push
dec
cmp
repz
icebp
ret
push
icebp
pop
cs
ja
or
jns
adc
lcall
add
adc
and
jmp
cs
cmp
pop
mov
sbb
fsubl
rcrl
push
dec
sub
stc
adc
mov
push
mov
inc
cmp
movsb
jle,pt
bound
xor
pop
mov
pop
and
loopne
das
sbb
push
add
rorl
inc
mov
adc
out
sbb
arpl
lret
mov
adc
inc
adc
rclb
xchg
insb
inc
adc
mov
cli
out
pop
mov
xchg
je
ss
kmovw
out
sbb
adc
lods
and
push
pop
loope
stos
cmp
cwtl
adc
sub
fisubs
push
cltd
push
dec
pop
outsl
jnp
sub
pop
sahf
pop
or
in
jns
addr16
pop
mov
mov
inc
cmp
into
or
ljmp
aad
inc
sub
es
mov
bound
push
fidivrs
adc
repnz
adc
sbb
mov
jb
out
inc
jno
nop
aas
jp
cmp
sbb
or
sti
fnstcw
das
cmp
and
xchg
mov
inc
xor
or
inc
cmp
pop
xor
mov
leave
cmp
wrmsr
mov
pop
bound
xor
xchg
adc
or
xor
dec
bnd
bound
mov
jmp
mov
cmc
add
dec
or
adc
inc
add
bound
bound
mov
lock
mov
popa
pop
fstps
jge
add
pop
mov
aad
push
sub
inc
or
lods
jb
testb
sub
mov
fdivl
lret
xchg
dec
clc
mov
popf
add
gs
in
jp
bound
xor
in
push
int3
sti
mov
bound
push
add
pop
adc
push
xor
or
sahf
cmpl
ljmp
push
cmp
add
pop
mov
jle
fisubrl
insb
add
lcall
fbstp
push
jle
fstpt
pushf
push
bound
imul
jge
imul
and
js
adc
je
jb
dec
xorl
cmp
fstpt
movsb
std
andl
mov
insl
sbb
faddl
fcoms
popa
in
outsb
push
bound
insl
fwait
cmp
or
or
xor
cmpb
add
cmp
push
inc
bound
fcoms
into
inc
inc
orb
jp
jns
jns
pop
data16
outsb
push
stc
jp
jp
mov
ds
mov
mov
cmp
icebp
lret
ds
stc
fidivl
pop
loop
out
out
pusha
cli
add
fcoml
adc
stc
and
pop
cmp
dec
pusha
push
ds
pop
notl
ds
fistps
clc
jg
push
jle
push
jge
jne
jl
stc
jnp
jbe
jp
jns
js
data16
out
insb
inc
mov
pop
jae
out
jb
mov
mov
pop
popa
out
dec
jb
inc
sahf
aas
adc
jmp
das
fdivrl
sub
pop
sub
out
push
push
adc
ds
das
jl
push
add
out
add
add
call
jmp
pop
in
jb
leave
repnz
adc
hlt
sub
loop
mov
icebp
stos
mov
andl
fidivrs
and
or
popa
adc
mov
fnstsw
jecxz
xchg
add
and
fildll
add
fstl
inc
data16
cli
mov
adc
or
repnz
divb
jge
test
and
ret
sbb
es
stos
movsb
mov
pop
dec
jp
js
xchg
jb
mov
xor
pop
loop
inc
dec
pop
jno
icebp
xor
bound
xchg
push
ljmp
dec
stc
imul
jb
lea
ds
or
cmp
xchg
int
ljmp
or
add
andb
adc
sub
jnp
ret
dec
aas
jbe
jge
mov
test
sarb
sbb
pop
outsb
clc
imul
xor
popa
nop
scas
bound
cli
orb
popa
loopne
jae
lea
inc
xchg
xchg
jp
aaa
fwait
cmp
jp
mov
pop
inc
test
jns
nop
cmp
rcl
mov
negb
fidivs
cmp
icebp
outsl
pusha
out
ds
idiv
je
pop
jne
pop
icebp
jae
jg
cmp
icebp
fs
and
jo
stc
bound
pop
jbe
xor
ja
cmp
insl
inc
stc
data16
pop
imul
pop
ds
stc
insb
imul
jo
pop
pop
cmp
pop
pusha
jle
mov
sbb
mov
push
xchg
daa
add
xor
cmp
pop
ljmp
jle
sbb
fs
xor
cmp
inc
data16
xchg
outsb
adc
aas
jp
inc
fnstcw
add
scas
dec
lret
jns
jo
pop
cwtl
cmp
bound
stc
dec
jo
pop
sub
sbb
add
iret
stc
mov
mov
nop
cmp
dec
adc
pusha
sub
adc
pop
sarb
icebp
mov
bound
ds
sbb
or
call
les
sarb
cmp
ds
aam
shlb
fwait
orl
dec
cmp
add
sbb
bound
jb
mov
into
push
adcl
mov
in
ja
jle
lcall
xchg
js
sub
push
mov
jns
sahf
mov
aas
pop
mov
ljmp
bound
dec
jne
jno
jb
add
xchg
int
mov
xor
cs
insl
xor
inc
mov
lret
push
out
mov
fs
jge
ret
jbe
stc
jle
in
sti
icebp
cmc
pop
jp
hlt
nop
repz
repnz
popa
out
pushf
jg
jnp,pt
stc
js
ljmp
push
dec
dec
jo
pop
or
lret
cmp
jmp
jo
push
jp
inc
rolb
cmp
cs
add
stc
jp
bound
ds
pop
jecxz
js
addb
mov
jp
pop
out
push
xor
jae
pop
mov
jle
in
ljmp
imul
hlt
inc
dec
jnp
xchg
mov
rol
scas
xor
bound
push
fcmovbe
mov
mov
test
push
xchg
incl
aas
je
jge
pop
shl
ret
loop
je
add
sbb
leave
mov
inc
lods
fdivl
or
mov
negb
out
fiaddl
sub
mov
mov
hlt
movsb
mov
fdivs
aas
loope
pushf
or
push
incb
jb
fmuls
mov
fldt
cmpb
in
mov
sbb
je
aam
imul
add
ljmp
inc
sahf
fucomi
dec
inc
jnp
lret
das
mov
mov
lock
sub
testb
test
sub
stc
mov
jnp
pop
ret
loopne
mov
add
cmpb
xor
outsb
mov
mov
jle
addl
loope
mov
mov
jo
pop
lea
imul
jae
cmp
arpl
fmul
sbb
sarl
lds
xchg
ret
movb
popf
lods
out
ret
lods
fwait
xchg
rolb
jno
mov
sahf
xchg
push
andb
xor
pushf
pop
mov
inc
push
ds
xchg
call
or
dec
cmp
xchg
xchg
pop
pop
arpl
and
or
addl
xchg
adcb
lock
insl
xchg
cmp
pop
cwtl
add
ficompl
push
loope
push
pop
cmpb
sub
xorb
icebp
add
inc
orb
aas
push
add
inc
popa
stc
mov
add
jmp
addb
cmpb
lcall
cmp
inc
jnp
jmp
push
dec
dec
adc
pop
xchg
push
adcb
les
sub
int
mov
jecxz
sub
cmp
xor
aam
pop
stos
repz
faddp
movsb
rolb
lcall
sub
icebp
inc
add
jmp
xor
sbb
repz
jno
movsb
jecxz
mov
jle
movsl
fsubrl
shll
sbb
fdivl
jp
in
je
cmp
jge
dec
jmp
cmpsb
outsb
mov
cltd
ljmp
jg
aaa
add
jge
jl
xor
pcmpeqw
xor
xor
jecxz
xor
jge
xchg
loop
cmpsb
outsb
nop
jge
and
xor
outsb
cltd
jge
loopne
add
jge
xchg
fildll
mov
push
outsb
popa
jae
or
or
or
dec
rcrl
or
pop
inc
jp
std
in
jnp
pop
dec
jnp
jle
jnp
dec
ja
add
dec
add
push
pop
inc
sbb
pop
jle
add
jbe
arpl
adc
push
jb
adc
and
imul
jp
outsl
xor
adc
and
push
cmp
add
lods
pop
outsl
jns
mov
leave
aam
inc
jmp
cmpsl
sub
sbb
cmp
stc
dec
imul
xor
jg
adc
xor
pusha
in
daa
cli
fistpll
out
push
adc
sub
out
lcall
fs
das
enter
push
jge
mov
sub
popa
adc
cmp
mov
add
incl
pop
add
sahf
repnz
pop
push
push
xor
push
pop
inc
lods
adc
pop
inc
jno
inc
lea
jecxz
push
es
push
lock
push
push
insb
sub
mov
aas
lock
inc
repz
icebp
mov
roll
push
adc
xor
je
jb
adc
push
push
jb
sti
dec
push
jge
jns
dec
out
dec
orb
adc
adc
xchg
cld
xor
cmp
xor
sbb
push
push
sbb
cmp
jge
pop
jecxz
icebp
mov
pop
fwait
sub
xchg
inc
sub
repz
loope
adc
fldt
insl
pop
adc
aaa
adc
aaa
adc
jo
dec
divb
add
insb
mov
jb
dec
pop
add
lahf
xor
cmp
jb
xor
push
xor
icebp
cmp
dec
jp
jo
xor
in
jecxz,pt
mov
call
pop
sti
cmp
sbb
cli
mov
dec
mov
imul
ret
pushl
inc
jmp
lea
ja
pushf
adc
shl
clc
sub
sbb
bt
shld
sub
add
shld
adc
mov
xor
adc
clc
not
mov
test
clc
test
repnz
call
rcr
push
mov
stc
jmp
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
xchg
or
jne
insl
xchg
std
jne
shll
jno
frstor
dec
sahf
in
std
mov
dec
int3
dec
add
stos
jmp
lret
add
push
add
cmp
or
sub
rcrl
dec
sub
pop
sbb
inc
fldcw
out
xchg
pop
push
push
cmp
push
push
fisubs
rcrl
dec
cs
sar
jmp
hlt
xchg
nop
cs
data16
xchg
aam
xchg
cmp
mov
mov
sub
jl
cmp
bt
add
call
insl
push
mov
push
xchg
and
dec
mov
sti
out
jmp
imul
outsb
cs
xor
inc
mov
in
popf
mov
mov
jg
mov
and
pop
popf
aad
ret
adc
sti
arpl
jne
cwtl
add
cwtl
cmp
and
out
fwait
jnp
mov
adc
lahf
pop
movlps
fcoms
cmc
pop
xchg
add
ret
dec
hlt
and
adc
test
mov
in
inc
adc
outsb
popa
sbb
cltd
xchg
mov
cmp
and
icebp
xor
int3
orl
mov
push
jbe
sbb
sahf
xlat
inc
popa
cmp
xchg
lret
popa
into
jne
loope
test
mov
xor
inc
pop
fistpll
lret
movsl
xor
cmp
and
adc
pushl
push
pusha
lea
jb
bt
bt
cmpb
call
jmp
jmp
pop
jbe
notl
test
lahf
pop
lret
mov
ret
xchg
out
cmp
sub
jle
bound
mov
popf
push
or
nop
jbe
test
inc
push
test
inc
lret
jle
cld
xchg
mov
hlt
imul
gs
cmp
add
fdivrs
pop
stc
sub
jne
lahf
mov
loopne
scas
jle
out
mov
inc
out
push
repnz
pop
lods
pop
xor
sub
jg
dec
or
fdivp
or
lea
je
mov
mov
pusha
movb
lea
lea
movzbw
pusha
movsbl
movsbw
movzwl
movw
lea
not
push
lea
pushf
pushf
mov
jmp
push
xor
insl
cmp
add
dec
lahf
adc
frstor
imul
jae
jae
xor
fcoms
mov
js
pop
popf
jl
cwtl
push
inc
clc
mov
ljmp
dec
out
mov
es
stos
movsl
mov
notl
popf
pop
daa
jg
mov
daa
ja
inc
out
lods
test
inc
icebp
jns
mov
int3
adc
dec
or
mov
jmp
incl
cmp
xchg
add
xor
xchg
push
xor
mov
in
arpl
cmp
outsb
mov
stos
and
lock
dec
mov
iret
cmp
hlt
ja
push
test
push
enter
xlat
lret
stos
fnsave
data16
shll
xor
outsb
and
mov
mov
repnz
imul
cmc
push
xchg
sub
jecxz
addr16
jnp
out
inc
shrl
mov
dec
dec
mov
add
mov
sarl
addr16
enter
pop
adc
lahf
jae
xchg
in
jecxz
jge
jge
or
jo
fimuls
aad
jne
pop
addb
jle
xchg
jae
or
lods
movsl
cmp
pop
sbb
inc
std
mov
or
fisubrs
fisttpll
add
je
or
enter
test
or
call
out
adc
push
xchg
cmp
jl
hlt
mov
movsb
add
pop
in
push
fwait
gs
iret
inc
jne
in
mov
sub
and
mov
loop
cmp
call
arpl
in
orl
int3
divl
adc
dec
cmp
aaa
jns
lock
push
mov
mov
dec
cmp
jae
imul
mov
pop
sbb
xchg
jle
in
jne
cmpl
rol
adc
cwtl
jp
mov
sub
lea
int3
outsb
pop
inc
jl
imull
jno
mov
jg
addb
mov
mov
dec
cltd
dec
addr16
fldl
push
add
sub
inc
fidivrs
sbb
mov
push
nop
and
jbe
fcmovne
addr16
lock
lcall
xchg
xchg
out
jg
fisubrs
aaa
mov
gs
stos
test
push
xor
es
xor
clc
data16
stc
negb
adc
jmp
jnp
mov
mov
scas
cwtl
xchg
mov
push
test
add
rolb
mov
stc
cs
cli
xor
std
mov
cmp
jmp
add
cltd
mov
std
inc
mov
movsb
bound
push
pop
jg
mov
push
ds
stc
outsb
add
adc
add
cltd
inc
inc
dec
sbb
out
enter
jp
stc
std
jno
sti
xchg
xorb
ret
das
lcall
mov
sbb
pushf
push
imul
mov
fwait
sti
leave
dec
stos
inc
jg
repz
ficompl
subb
into
cmp
mov
push
cltd
dec
lret
jno
js
ja
in
jbe
mov
jle
orl
loop
adc
cmc
xlat
clc
push
repnz
ss
xchg
jle
inc
xor
fidivrl
push
insl
jecxz
lcall
scas
loope
jbe
enter
lds
mov
adc
ret
mov
dec
cli
adc
icebp
data16
fbld
xor
mov
adc
cltd
out
pop
cmc
stc
fcomi
lcall
jb
jns
and
mov
pop
push
cmpsb
insl
jbe
mull
mov
pusha
sti
rclb
sti
mov
cmpb
dec
popa
sbb
push
lods
outsb
lcall
fcompl
dec
cli
jb
jbe
sbb
leave
push
cltd
pushf
inc
adc
push
jb
or
xor
outsb
ljmp
cmp
xor
jp
cltd
sarb
xchg
fdivs
mov
cltd
fdivrs
outsb
xchg
bound
jmp
xor
cltd
inc
mov
pop
movsl
sub
inc
ffreep
mov
aam
fidivl
in
cmp
jmp
cmp
jmp
stc
jo
orl
push
stc
rcrb
jo
das
sub
insl
ljmp
outsb
mov
cli
jbe
js
jb
pop
test
or
ja
sbb
cld
push
xchg
in
xor
push
inc
pop
scas
iret
pop
adc
stc
sub
insb
mull
sti
jae
mov
out
ljmp
divl
push
iret
pop
call
jecxz
ds
faddp
gs
mov
rcrl
push
movsb
mov
fsub
xchg
out
xor
sbb
xorl
pop
pop
inc
mov
jbe
cltd
call
repz
cltd
stc
cs
icebp
stc
mov
mov
test
jle
push
bound
std
sahf
icebp
jb
js
jae
jl
mov
cmp
mov
outsb
xor
loope
mov
cmp
push
and
sbb
cli
shrb
inc
jno
loopne
into
idiv
dec
fnstcw
addl
mov
inc
aam
push
push
mov
xchg
sub
cmp
xchg
movsb
filds
aam
in
jns
negl
and
ret
inc
xor
xor
mov
adc
and
jl
mov
pop
xchg
mov
bound
cmp
and
js
pop
jb
mov
mov
mov
inc
sbb
jl
cli
arpl
test
jo
lock
push
jecxz
hlt
jl
and
in
xchg
add
jge
stos
loop
mov
mov
sbb
fst
sti
mov
std
scas
push
xor
rcrl
les
xor
pop
cli
andl
jns
jl
nop
scas
fdiv
popf
push
add
or
mov
inc
mov
xor
das
sbb
push
fcompl
dec
push
ljmp
jb
xchg
and
add
or
mov
outsl
arpl
xchg
loopne
test
jp
cltd
cmpb
sarb
cmp
arpl
inc
mov
jp
xlat
pop
jb
shll
pop
push
jg
sbb
ds
aam
and
aaa
out
mov
leave
inc
jns
cmp
out
ss
cmp
dec
shrb
or
andw
jno
pop
sub
sbb
out
sbb
iret
repnz
fsubrl
jp
in
movsl
imul
add
inc
dec
clc
outsl
mov
jge
or
pushf
aad
jl
adc
mov
xor
mov
outsb
dec
loop
int
call
dec
jle
std
outsl
js
shl
adc
xchg
xor
cmp
pop
lahf
jl
cmp
clc
adcb
add
xchg
fstl
sbb
clts
outsb
mov
movb
dec
adc
add
pushf
mov
es
ds
sbb
dec
in
idivl
popf
jb
or
pop
js
lea
lods
push
data16
ljmp
lcall
jae
std
dec
out
lret
add
pop
imul
bound
pop
andb
insb
add
rcll
jnp
test
jbe
sbb
mull
mov
push
cltd
mov
gs
cli
mov
ljmp
pop
xor
jg
mov
mov
cltd
jo
jp
lcall
add
mov
insl
sbbl
scas
test
std
call
lcall
mov
rcll
mov
mov
lret
jl
ds
sub
xor
mov
jl
stos
lcall
addr16
cli
loope
fcoms
and
cs
bound
out
pop
mov
int
in
or
dec
push
and
mov
subl
cltd
repz
out
negl
out
xor
jo
sub
inc
pusha
pop
xchg
pop
add
jno
cli
fisubrs
cmp
pop
push
cmp
je
je
js
mov
push
pop
cs
jnp
jmp
dec
push
and
sub
push
jae
sub
xchg
lcall
sub
add
out
enter
xor
cltd
and
or
xchg
xor
and
mov
orb
mov
sub
mov
inc
sbb
adc
mov
inc
inc
mov
jp
mov
cmp
dec
idiv
rorb
fisttps
pushf
adc
dec
cld
push
or
fs
dec
and
jo
xor
hlt
fnstenv
xchg
and
xchg
jb
pop
movsb
cmp
xlat
call
cltd
dec
arpl
pop
xor
and
pop
add
and
ret
jns
inc
mov
pushfw
cwtl
mov
jb
pop
mov
add
lods
loopne
jns
xor
fs
jmp
sub
push
das
xor
in
inc
inc
in
inc
pushf
jp
insb
bound
mov
and
dec
shrb
jnp
mov
pop
cmp
sbbb
loopne
sahf
jns
dec
mov
cmpl
xchg
and
dec
xchg
pop
pop
out
mov
loopne
jno
out
inc
xchg
pop
cmp
mov
and
lcall
pop
push
add
out
daa
cs
mov
xorb
out
leave
aaa
in
fs
or
sub
pop
inc
outsb
cltd
ljmp
leave
mov
gs
scas
push
insb
sub
adc
imul
jb
aam
idiv
in
adc
push
sbb
inc
insl
dec
dec
mov
jbe
jecxz
rcll
fdiv
lcall
fsubrs
lock
add
inc
and
add
out
push
sarb
cmp
popf
jnp
pop
mov
push
jecxz
or
mov
stos
sbb
cmpsl
icebp
cmp
into
xchg
jp
cmc
addb
enter
jl
sbb
xchg
jg
inc
ret
xchg
mov
cmp
lds
adc
arpl
jnp
testb
out
mov
sbb
stc
jb
in
sbb
icebp
inc
cmp
mov
push
jae
jl
jnp
mov
xor
xor
mov
in
jge
cmp
in
add
mov
shr
mov
int3
add
clc
mov
fcmovbe
loop
lock
test
push
cld
xorb
lods
push
enter
in
outsb
sbb
lods
sbb
sbb
mov
inc
das
les
icebp
cmp
pop
faddp
out
mov
sbb
aaa
das
lret
sbb
jg
cltd
ror
push
pop
cs
ds
fstp
jbe
cltd
xor
shll
lock
inc
dec
cwtl
gs
mov
aad
add
adc
jno
scas
jne
cmpsb
xor
stos
mov
mov
push
sti
xor
add
insb
cld
push
mov
dec
add
jecxz
dec
data16
xchg
test
cmp
into
and
stc
jbe
roll
and
in
ficoms
pop
leave
loope
inc
cli
dec
pop
jb
arpl
test
aaa
stos
cltd
iret
sahf
dec
jecxz
cmp
push
lahf
cltd
aam
lahf
jns
jo,pn
sti
scas
adc
cli
jb
jl
loopne
cmp
stos
xor
fimull
in
int
or
cmpb
adcb
jp
and
mov
pop
jae
pop
inc
ss
push
mov
add
aas
cmp
and
cmp
lods
pop
adc
arpl
cs
in
pusha
mov
xor
imul
movsb
cmp
and
aam
fsqrt
cmp
lods
and
xor
orb
and
cmp
imul
sbb
and
dec
in
jo
loop
inc
mov
jo
adc
adc
xchg
sarl
add
xchg
push
icebp
test
pop
outsb
test
mov
adc
jns
nop
inc
and
dec
adc
jbe
les
lcall
add
sbb
mov
jg
sub
stc
mov
jne
pusha
sub
clc
jo,pt
xor
mov
adc
lret
outsl
ds
add
sub
rclb
sar
sub
popa
mov
cld
jo
mov
mov
pop
stc
mov
or
popa
inc
inc
push
xchg
popa
push
lret
cmp
mov
nop
stc
inc
xchg
jns
mov
pop
incl
pop
lret
mov
mov
pop
sbb
lcall
jae
inc
lcall
jle
xchg
je
dec
push
out
push
xor
inc
sbb
xor
pop
and
sub
jmp
push
xchg
xchg
lret
xor
jle
jmp
sub
mov
in
pushf
and
sbb
fimuls
jmp
mov
repnz
pop
insb
sub
push
dec
imul
mov
mov
pop
xchg
mov
push
hlt
js
in
inc
mov
dec
jo
adc
imul
and
lcall
ja
mov
sbb
and
push
jns
insl
aad
icebp
in
insb
or
aas
in
cltd
imul
push
ds
cltd
cmp
mov
xor
testl
pop
push
xchg
add
ret
or
jmp
mov
ret
push
mov
bound
imul
push
loop
push
push
jmp
cmp
icebp
movsb
popa
sbbl
inc
push
std
or
jno
mov
sub
fnstsw
mov
ds
and
jb
out
xor
lods
pop
dec
scas
mov
dec
sbb
push
mov
sbb
push
rcrb
adc
sbb
xor
loopne
mov
add
adc
rorl
cmp
fs
cmp
cmp
std
add
mov
jge
scas
inc
pop
cmpsb
mov
pop
mov
jns
cmp
outsb
mov
and
inc
jp
dec
xlat
mov
pop
rcrb
imul
jno
subb
ret
stc
jg
ja
mov
fcmovbe
xorb
add
mov
sbb
cli
xor
and
dec
test
mov
outsl
jp
mov
daa
mov
jp
sub
popa
nop
jg
jnp
or
fwait
in
mov
mov
xchg
ficomps
push
add
pop
xchg
xchg
sbb
mov
bound
cmp
ret
xlat
mov
sub
ljmp
shrl
inc
mov
cmc
hlt
mov
sub
lock
scas
bound
test
mov
jge
jle
roll
lcall
and
les
mov
dec
jmp
ja
fdivs
jns
cltd
mov
mov
call
pop
cmc
ret
push
pop
leave
lea
mov
subb
mov
pushf
shll
cmc
or
pushf
lea
mov
int3
mov
stos
mov
std
jbe
add
mov
and
test
fcomps
data16
scas
lahf
movsl
out
pop
cmp
ds
out
mov
mov
cmp
sbb
movsl
add
sub
ret
sub
inc
mov
fldt
ficoms
pop
movsb
pop
cltd
push
iret
shlb
xor
adc
cs
and
test
mov
pop
inc
jp
imulb
aad
mov
cs
nop
push
xor
in
std
daa
orb
xorb
mov
inc
xchg
shrl
mov
adc
test
leave
jo
cmpsl
cli
mov
jbe
adc
inc
and
lcall
cmc
mov
fwait
dec
stos
addr16
jb
inc
lea
push
test
sbb
ja
cs
out
mov
dec
add
dec
cli
mov
jnp
jae
jns
inc
mov
in
mov
jp
adc
sub
out
sarb
add
test
xchg
nop
addl
mov
dec
cli
movsb
pop
and
pop
fwait
jmp
ja
add
ds
cmp
xor
sbbl
jecxz
ljmp
pop
jbe
sbb
mov
mov
cltd
cmp
imul
inc
aaa
adc
add
adcb
inc
cli
push
jmp
jnp
in
jo
mov
jo
jae
les
inc
xchg
jne
inc
loopne
pop
add
icebp
inc
in
notb
xchg
es
mov
sbb
pushf
add
mov
in
leave
jle
out
incb
int
sahf
ljmp
mov
leave
mov
out
inc
enter
xor
ja
fwait
and
xor
ss
xchg
sbbb
xchg
mov
sub
add
mov
gs
xor
mov
sar
out
push
mov
daa
xorl
jl
jle
stos
cltd
fiaddl
incl
sub
cmp
test
icebp
pop
lret
mov
pop
out
xor
mov
sub
add
in
mov
jmp
sbb
or
xchg
push
scas
pop
stos
mov
js
xchg
lcall
mov
jo
scas
push
mov
test
xlat
cmp
xor
mov
xor
cmp
cltd
pop
into
js
ret
pop
shlb
jno
mov
pop
push
stc
cmp
aaa
sub
push
outsl
inc
cltd
dec
fmulp
adc
lods
and
push
or
lcall
mov
enter
inc
lcall
jb
sbb
arpl
cltd
cmpsb
add
sbb
and
call
js
ficoms
lret
mov
inc
jo
inc
cmp
xchg
mov
shrl
cmp
shrb
mov
sbb
push
out
data16
andb
or
sub
lcall
cmovs
movsb
dec
inc
inc
lret
mov
jge
lds
mov
dec
add
lret
mov
ja
push
mov
dec
add
mov
ja
mov
lret
mov
mov
scas
xor
popa
push
aas
cmp
add
test
mov
mov
inc
imul
arpl
xchg
lcall
mov
lock
test
imul
ret
aaa
cmp
mov
imul
outsb
orb
sub
and
or
test
pop
mov
bound
xchg
sub
add
mov
outsb
in
adc
daa
and
mov
scas
andl
inc
lret
jl
shll
in
pop
mov
in
push
or
gs
decl
inc
sbb
mov
jp
lcall
in
push
inc
adc
cmp
inc
loopne
cmp
sub
pop
data16
sbb
and
mov
dec
jno
std
push
dec
rcrb
xchg
sbbl
sarb
xlat
xchg
inc
fists
sub
aam
clc
into
loop
insb
popf
cld
mov
jae
iret
mov
test
std
inc
lds
es
add
nopl
sti
mov
jae
push
in
jae
jg
xor
push
sub
lods
cld
cmp
inc
cmp
lahf
jae
lret
test
fadd
mov
push
mov
jecxz
inc
push
dec
fucomp
pop
bound
jbe
test
dec
lcall
stc
mov
push
rcll
lcall
cmp
movsb
mov
pop
lds
push
mov
call
xor
nop
add
jmp
cmp
cmp
jg
sub
xor
jl
mov
xchg
xor
mov
jns
popf
sbb
jmp
add
add
push
mov
repnz
xlat
mov
rcl
sbb
stc
mov
pop
mov
pop
cld
shll
cltd
lcall
out
fisttps
imul
pop
pop
jp
pop
stc
jb
mov
test
test
pop
mov
lret
cs
mov
stc
jle
loop
rcrl
inc
fnstenv
jnp
rcll
cltd
les
dec
jecxz
xchg
sub
loop
pop
mov
push
ficompl
repnz
addb
repnz
stos
dec
cltd
scas
mov
lahf
sbbb
cs
cmp
dec
add
mov
add
lock
xor
mov
imul
xchg
negb
xchg
loopne
or
testb
cmp
jle
lcall
xchg
in
mov
cltd
push
test
andb
and
jae
imul
jp
mov
fwait
sub
push
iret
loopne
sbb
les
int3
and
jle
ficoms
cmp
dec
dec
or
and
jmp
orb
sub
cmp
sbb
adc
mov
sbb
pmulhw
out
lcall
jmp
push
xchg
jnp
iret
mov
jbe
mov
lds
mov
push
xor
addl
push
pop
movsl
call
or
sub
push
addl
and
sbb
jns
jbe
cmp
push
pop
and
in
sbb
in
popf
bound
mov
push
int3
mov
shll
lcall
mov
dec
out
pop
pop
into
push
push
and
xchg
arpl
sub
xor
jp
jb
pusha
jg
mov
mov
lret
divl
bnd
push
jl
xor
xchg
mov
fabs
dec
ss
adc
cmpl
or
rcr
mov
add
test
jmp
popa
jo
in
sbb
cli
loop
fwait
push
cmp
out
xchg
pop
and
out
inc
xchg
jae
jb
sbb
stc
sti
orl
icebp
mov
mov
test
and
cmp
sub
popf
dec
pop
xor
push
and
repz
pusha
addr16
and
pushf
cmpsb
xchg
and
jo
mov
test
cs
into
push
xchg
out
test
push
ret
mov
sub
and
out
xchg
xchg
fwait
cld
inc
les
push
pop
push
pop
mov
gs
rcr
out
cli
ja
pop
xchg
sbb
xorb
andl
mov
bound
add
sub
dec
cmp
sub
mov
push
insb
loop
pop
jno
inc
dec
cmp
int3
push
cwtl
xor
lods
sbb
jle
test
and
lahf
inc
outsl
scas
mov
nop
xor
xchg
call
jmp
xchg
addr16
int
jp
pop
in
sub
push
out
jno
jbe
mov
bound
fldl
sbb
add
jg
fists
je
mov
jnp
and
fists
push
inc
sub
ljmp
jecxz
lods
push
mov
push
xchg
jbe
je
pop
mov
mov
fisubrl
jp
fwait
test
ret
ja
mov
mov
shlb
inc
dec
mov
clc
jl
ret
and
sub
lea
cmp
out
jl
jecxz
ja
movsb
jmp
cmc
push
mov
xchg
sbb
sub
sub
bound
jle
imul
add
ja
cmp
mov
ja
mov
dec
aad
test
sbb
add
jp
and
rcll
xchg
xor
mov
rcrb
dec
movsl
sbb
outsl
adc
stos
mov
ljmp
mov
mov
push
fs
ja
mov
test
shll
add
and
cmpb
mov
shll
js
mov
out
jecxz
cltd
scas
pop
mov
je
std
push
lret
jno
xchg
and
ds
lds
shll
xchg
pop
stos
dec
xchg
pop
cli
adc
sub
mov
ret
cmpl
std
outsl
jae
ret
push
dec
and
cmpsl
fsubrl
sub
lods
ja
sub
inc
fistpl
sbbb
outsl
repz
mov
xchg
jecxz
sub
mov
out
push
mov
inc
imull
sub
pop
jmp
and
cmc
or
jp
ret
ds
jle
xorl
sbb
mov
dec
daa
and
cmpsb
mov
xchg
jne
xchg
rcll
shlb
xchg
and
stos
inc
xor
and
mov
mov
shrl
daa
shlb
es
pushf
arpl
mov
inc
xchg
andl
out
sub
xor
cmp
push
mov
sbb
push
imul
sub
mov
cwtl
rorl
icebp
inc
adc
jg
ljmp
mov
jbe
add
jns
imul
rorl
mov
fisubrl
loope
inc
xor
xorl
test
into
outsb
jp
add
jno
lock
nop
and
jae
or
jl
push
bound
lock
iret
repnz
ror
imul
es
lcall
inc
push
sahf
ljmp
mov
cmpsb
cmp
mov
sahf
pop
les
add
lock
mov
fadds
shlb
dec
adc
pushf
ljmp
insb
jbe
jge
outsb
push
cs
pop
sbb
cmpb
jno
cltd
mov
dec
xor
jns
mov
fs
jbe
js
inc
imul
out
and
sti
insb
negb
js
repnz
cmp
lahf
cmpsl
push
sub
cltd
loope
mov
lahf
inc
call
popa
cmp
mov
and
adc
stc
ret
sahf
push
sbb
movaps
cltd
jns
lock
jae
icebp
std
xor
mov
inc
xor
jmp
repz
cmp
jns
sbbl
adc
add
rorl
ljmp
jb
pop
std
xchg
dec
jle
lcall
pusha
rcrb
sbb
pusha
lea
cmp
mov
dec
push
mov
add
rcrl
mov
cmp
pop
inc
nop
sub
int3
add
ds
sub
mov
sahf
stc
outsb
mov
jg
das
pop
movsl
lock
ss
enter
jb
and
aam
xchg
mov
mov
aaa
fst
arpl
bound
push
sub
or
and
cs
mov
in
cmp
jns
ss
mov
test
push
jbe
mov
shll
add
scas
cld
xor
lea
mov
jmp
lods
cmc
push
in
or
pop
pop
in
jl
mov
dec
pop
loope
loop
call
ffreep
mov
icebp
jmp
test
call
push
divl
push
mov
out
mov
call
jecxz,pt
pop
sub
xor
shl
push
cmp
mov
negb
es
stos
add
pop
xchg
jle
cmp
cli
mov
test
or
int3
insl
popf
jno
loop
push
in
jl
mov
int
and
jno
cld
pop
mov
mov
lahf
and
mov
sub
and
repnz
lea
pop
xchg
popf
sub
sahf
dec
fistps
cltd
ficompl
pop
imulb
mov
cmp
push
pusha
xchg
mov
xchg
push
cwtl
addl
insb
ret
out
test
ds
pop
mov
jle
push
loopne
sbb
xor
push
lds
dec
mov
bound
jle
xor
mov
push
pop
idivl
push
jno
mov
jo
test
mov
xor
inc
fcoms
jmp
mov
imul
scas
cmpsb
aas
stos
orb
push
pop
xchg
push
cmp
xor
cmc
orb
fisttps
cmp
clc
lea
lahf
out
adcb
outsb
rcrb
iret
jle
mov
add
mov
in
lock
adc
lea
ds
sahf
add
insw
orb
inc
pop
ja
cltd
rcrb
mov
pop
test
push
and
repnz
dec
inc
xchg
and
cltd
clc
call
aad
mov
cltd
mov
pop
sbb
mov
rolb
loop
push
cmc
imul
or
mov
push
and
jge
mov
repnz
ret
inc
lea
roll
sbb
scas
test
sbb
movsb
imul
filds
repnz
mov
jge
xchg
lcall
xor
faddp
push
sbb
popa
pop
nop
imul
mov
mov
fiaddl
popf
and
cli
imulb
xchg
inc
adc
push
xchg
in
pop
mov
in
dec
jns
jbe
jno
push
jge
lock
fistpl
pop
movsb
push
push
mov
lea
mov
loop
add
lret
xor
fstpl
stc
out
pop
mov
inc
ficoml
dec
mov
jo
sahf
jl
rol
shrb
mov
stos
sub
push
cmp
or
and
jb
dec
enter
sbb
pusha
dec
mov
cmp
adc
inc
imul
out
inc
push
out
cli
xchg
jl
and
add
sbb
jb
aaa
ja
shll
sub
dec
xchg
arpl
mov
and
loop
mov
adc
mov
sbb
enter
sub
mov
lods
jge
cmp
movsl
mov
aad
mov
push
das
jle
test
frstor
out
popf
scas
mov
pop
test
add
std
adc
sbb
lea
popf
xchg
push
popa
mov
inc
lcall
sarl
sahf
inc
nop
sub
fisubrs
sub
sub
mov
lods
xchg
fdivs
mov
mov
movnti
cmp
add
ja
stos
mov
out
fidivrl
jb
in
jge
stos
test
adc
inc
fldenv
mov
js
lcall
jp
adc
xchg
xor
cltd
pop
sahf
mov
or
xlat
sub
jle
pop
mov
shr
jge
jne
sub
push
or
dec
xor
out
rorl
jp
mov
mov
repz
jl
mov
ja
jg
xchg
push
xchg
fiadds
insb
mov
lcall
mov
pop
sub
mov
push
add
xchg
loope
es
fs
jge
stc
popf
mov
lahf
ss
cmp
xor
xlat
test
arpl
outsb
cli
add
sbb
sub
cmp
test
out
xor
cli
adc
addr16
cmpsl
inc
dec
and
push
stc
iret
pop
add
pop
cmp
pop
insb
mov
aas
mov
std
mov
cmpsl
nop
and
jne
jle
repz
sti
xchg
cmp
arpl
add
push
jecxz
xchg
nop
jne
jb
ret
rcll
fcoms
push
imul
fs
gs
jae
inc
lock
cmp
lock
xlat
adc
in
stc
insb
les
mov
or
sbb
pop
dec
out
loope
sbb
pop
sbb
dec
mov
mov
inc
movsb
pop
in
or
mov
push
in
mov
push
lret
dec
mov
rcrb
scas
sbb
je
xlat
jmp
loop
test
inc
lcall
cltd
add
pop
adc
out
cwtl
adc
lret
pop
lcall
jmp
fs
or
flds
arpl
and
pop
add
inc
xchg
dec
adc
mov
and
jge
and
inc
sub
fcmovbe
outsl
pop
mov
xor
iret
xchg
dec
inc
lret
aas
jae
div
add
xor
cmp
inc
mov
cmpsl
pop
aas
push
in
mov
js
mov
jbe
xchg
ja
arpl
fidivl
xor
xchg
mov
cmpsb
xchg
in
add
pop
sub
lcall
sbb
cmc
cmp
mov
scas
stc
jmp
repz
sti
push
pop
jmp
xchg
pusha
ljmp
push
imul
xor
pop
hlt
sub
inc
js
cvtps2pd
ljmp
iret
lea
test
popa
popf
sti
xchg
dec
mov
test
mov
inc
fadds
and
and
jae,pt
ret
out
mov
repz
je
jmp
sub
jbe
mov
jecxz
cli
pop
mov
inc
push
mov
pop
int3
mov
xor
mov
xorb
jle
jmp
fisttpl
les
scas
leave
push
cwtl
cmp
les
dec
and
scas
shlb
stos
push
js
mov
andl
dec
imul
pop
xor
int
in
cmp
sarb
hlt
std
cltd
fldl
dec
cs
pop
add
test
jl
mov
daa
mov
jge
add
mov
add
dec
arpl
cltd
mov
popa
pushf
nop
pop
cmp
mov
lcall
sbb
jno
jp
jno
ja
push
cltd
sbb
inc
jno
pop
scas
push
sbb
repnz
test
add
cwtl
cmp
insb
mov
cmpb
mov
sub
test
sbb
mov
pop
push
and
mov
mov
jmp
test
lahf
mov
mov
jle
movsl
jae
mov
ret
jmp
xor
mov
mov
insl
lcall
mov
jp
push
leave
inc
sbb
insb
jae
pushf
push
jp
cltd
jg
xor
xchg
lcall
ds
repnz
lds
jae
inc
sti
ret
cmp
movsb
outsl
pop
inc
ret
dec
and
cltd
dec
xlat
sbb
rolb
inc
aaa
into
popa
lcall
test
repnz
mov
into
sbb
pop
xchg
jns
dec
sub
add
and
xchg
inc
mov
mov
jle
clc
int3
jmp
mov
mov
dec
leave
mov
mov
xor
les
pop
mov
and
fs
call
pushf
gs
mov
push
int
jp
cs
pop
subb
insl
push
dec
lcall
fs
popa
mov
fists
mov
pop
icebp
icebp
outsl
xor
hlt
inc
sub
shrb
sti
and
jns
inc
jl
dec
pop
lret
mov
aad
lds
sbb
push
fsubr
call
xor
ret
mov
sbb
and
push
mov
insl
mov
stos
rol
cmc
mov
jmp
mov
mov
add
add
push
and
in
sar
sbb
cmc
in
pop
mov
sbb
clc
sbbb
idivl
mov
mov
loope
or
jnp
push
cmc
cmp
in
daa
mov
mov
mov
jno
sbb
aas
add
jno
add
mov
aaa
fldl
pop
shlb
insl
subb
jge
jbe
ret
or
nop
movsb
xchg
xchg
and
bound
pop
jl
test
push
mov
inc
icebp
int3
jnp
mov
call
pop
fldl
nop
push
add
cltd
push
or
mov
xor
addb
scas
lea
sub
mov
xchg
push
sbb
cmp
cmpb
sub
mov
cmp
fidivs
sbb
sarl
cmp
cmc
repnz
jg
jle
lcall
sub
loope
mov
jns
shrb
enter
cmpsl
fwait
adc
js
test
lcall
cltd
dec
sub
adc
pop
jne
and
jno
jb
mov
sub
xchg
sbb
add
inc
inc
loopne
cltd
shrb
xchg
push
outsb
jb
int
outsb
sub
inc
out
jge
in
ror
add
jl
push
push
in
mov
mov
aas
insb
out
cli
mov
xchg
scas
jg
sahf
into
sub
dec
mov
pop
scas
xchg
int3
adc
lea
aam
mov
imul
test
out
jb
mov
sbb
mov
lock
dec
fwait
lods
arpl
xchg
jle
pop
push
mov
dec
out
xor
xchg
push
jg
xlat
hlt
cmc
fdivrs
add
push
xchg
mov
in
rol
jg
add
lods
add
mov
and
dec
stos
mov
negb
jge
mov
add
data16
movsl
insl
dec
enter
je
iret
xchg
test
pop
push
jbe
xchg
xchg
xchg
test
mov
cmp
out
pop
xorb
scas
shlb
add
mul
sti
pop
jno
mov
cmp
ror
add
cltd
out
sub
in
cmp
add
cmp
xorb
pushf
sub
cmp
pusha
jecxz
xor
inc
sti
mov
sbb
sub
aam
sbbb
imul
lahf
and
fcoms
jbe
sub
lcall
stos
ja
mov
std
inc
cmp
fucomp
pop
xchg
adc
push
adc
rolb
adc
and
incl
stos
lds
sub
adc
dec
inc
cmp
bound
add
aas
aaa
or
dec
inc
jle
in
cltd
daa
sub
xchg
cli
aaa
outsb
mov
sub
cltd
negl
or
cmp
je
adc
mov
mov
call
dec
pop
mov
gs
aad
dec
jns
movl
nop
inc
add
sbb
sub
pop
xor
fnsave
in
cmp
add
cli
dec
lcall
dec
cltd
cmp
mov
jns
aaa
jns
and
xchg
pop
jg
insl
pop
jle
inc
repnz
addr16
pop
or
and
sbb
mov
sub
ds
adcl
pusha
int
dec
push
jne
cltd
push
sub
jb
mov
jns
cld
shlb
mov
rcll
das
push
ljmp
out
mov
test
cmp
jge
sub
adc
cltd
xor
add
dec
jae
push
fidivrl
mov
add
mov
mov
bound
in
add
les
dec
cmp
cmp
mov
out
lds
cltd
add
mov
lcall
iret
into
insl
out
mov
jle
add
dec
cmp
or
and
add
ret
cltd
insl
xchg
fnsave
lock
inc
ds
mov
test
sbb
bound
out
cwtl
sbb
lock
cmpsb
sbb
jl
stos
out
fistps
adc
push
mov
aaa
sub
pop
arpl
shll
ja
dec
inc
push
xchg
mov
cs
mov
add
movsl
imul
sbb
rcrl
jb
pushf
push
adc
mov
cmp
add
xchg
icebp
add
and
clc
leave
testb
add
hlt
pop
mov
pop
pusha
lahf
xchg
xchg
andb
stc
cmpsl
pop
xor
cld
add
cltd
je
xchg
sbb
incl
scas
imull
sub
push
cmp
mov
mov
push
enter
mov
in
shrl
addr16
or
rcl
inc
xchg
loop
jmp
pop
mov
sarl
out
mov
pop
push
jnp
daa
jo
mov
sub
cmp
outsb
bound
mov
and
push
mov
mov
fldt
mov
xchg
and
shrb
idivb
lea
les
or
cmp
js
lcall
inc
subl
mov
data16
mov
repnz
ss
pushf
cli
inc
lcall
movsb
sahf
mov
xchg
mov
adc
xchg
or
lcall
fisubrl
or
mov
in
push
lcall
adc
inc
movsl
jp
aaa
inc
lcall
mov
add
lea
add
scas
lcall
lds
sub
add
add
dec
jne
sbb
aad
jge
jmp
mov
jmp
mov
xor
pmulhw
loope
lock
pop
arpl
sub
jb
daa
daa
mov
int
rcll
into
mov
adc
jae
dec
repz
and
pop
fistpll
xchg
std
lock
pop
notl
and
call
outsb
cltd
or
push
push
mov
fcomps
idivl
shll
das
scas
js
inc
shl
mov
sub
sbb
sbb
stos
jg
rcl
outsl
lcall
xchg
cltd
dec
mov
int3
bound
call
mov
aaa
out
jle
cmp
pop
or
mov
jmp
dec
mov
jb
pushf
out
xor
xchg
fists
and
lods
jno
dec
imul
fwait
sbb
adc
jl
shrb
xchg
mov
or
shll
shr
xor
gs
or
dec
ljmp
pop
mov
aas
out
js
pop
lea
and
mov
std
nop
pop
add
adc
xchg
cmp
jb
loopne
jae
movsl
mov
fdivrs
data16
sbb
out
dec
insb
lcall
or
les
aaa
sbb
bound
cmp
pop
bnd
push
adc
adc
test
dec
push
sbb
lcall
lcall
sbb
inc
dec
mov
cmp
xchg
pop
sub
mov
mov
stc
jne
lret
scas
test
cmp
mov
sbb
xorb
loop
rclb
addb
sub
xchg
push
push
or
shlb
lea
xchg
add
arpl
push
icebp
jne
and
ja
cmc
adc
stc
push
cs
add
jno
add
testb
jle
fcmove
or
leave
dec
jno
and
jmp
aad
jg
inc
pop
xchg
ds
mov
lods
pusha
and
add
test
dec
in
or
rcl
dec
xor
out
dec
fcmovu
rcrb
mov
sub
incb
shll
ficoms
mov
lcall
icebp
sbb
jmp
aaa
lods
lds
insb
mov
pushf
imul
fistpll
in
cltd
push
sbb
inc
iret
test
xchg
dec
divl
lds
mov
mov
jg
clc
sub
pop
inc
iret
inc
push
andb
add
adc
mov
mov
mov
in
dec
mov
jle
aad
mov
jns
jp
mov
ljmp
inc
add
je
cmc
pop
push
sbb
nop
inc
out
jns
inc
and
fucomi
ja
inc
mov
push
cmp
and
fadds
xor
and
sbb
mov
add
pusha
xchg
dec
mov
mov
stc
mov
hlt
adcb
xor
ret
mov
push
adc
lea
mov
push
lea
ret
pushf
lods
adcb
mov
imul
ja
mov
sti
xchg
mov
imul
jns
add
jl
scas
push
incb
mov
cltd
int
jmp
xor
push
mov
pop
pop
lock
lea
aad
or
xchg
movsb
ret
adc
sbb
ds
inc
insb
hlt
sbb
dec
dec
xor
mov
add
hlt
sbb
bound
sbb
imul
xchg
cltd
stos
mov
fnstenv
subb
lcall
add
lret
imul
popa
adc
pop
and
addb
sahf
and
mov
test
inc
mov
push
xchg
inc
insl
movsb
mov
ljmp
aad
daa
stc
aas
mov
std
sahf
jle
dec
out
lods
cwtl
inc
xor
xchg
js
cmp
mov
mov
pop
xor
ja
lods
das
or
enter
jae
jnp
cmc
ss
add
push
std
cltd
xchg
mull
int
pushf
push
jnp
cmp
xlat
jbe
jo
cli
inc
in
loopne
sbb
bound
dec
loope
daa
mov
mov
cmpsl
mov
scas
daa
sub
es
andl
pop
outsl
in
call
push
ret
shl
addb
push
jno
ljmp
mov
orb
sub
out
daa
popf
cmc
fwait
adc
pop
add
out
std
add
inc
add
ret
testl
and
push
repz
and
adc
jb
jbe
fimull
out
and
rclb
sub
add
cli
test
and
cltd
das
test
dec
jp
mov
and
fisubrl
sub
pop
imul
fstl
cmpsl
push
xchg
scas
pusha
cmp
lret
xor
mov
ffreep
xchg
test
bound
add
jg
aaa
movsl
inc
jmp
pop
pop
cld
jle
push
sub
ss
mov
xor
sub
and
sub
outsl
test
xor
cld
repnz
mov
mov
xchg
lds
jnp
test
add
xchg
lds
adc
cli
mov
jne
mov
mov
jo
ret
es
jg
cltd
loopne
xor
sbb
or
sub
mov
test
mov
sbb
icebp
hlt
push
xor
test
mov
sti
fisubl
nop
movsl
imul
jle
cmpsb
push
orb
jns
mov
negl
cmpsl
pop
jns
enter
ja
aad
mov
ja
out
push
repnz
add
pusha
ret
hlt
mov
shlb
outsb
add
push
xor
jbe
inc
lods
sbb
mov
lods
mov
dec
pop
and
pcmpeqb
shlb
mov
pop
inc
and
jae
gs
mov
fiaddl
incb
push
es
pop
inc
mov
push
add
pop
cmc
mov
mov
add
shll
pop
test
sub
aad
gs
aam
jle
inc
icebp
scas
fs
pop
add
shll
test
pop
out
jb
and
cmp
cmp
and
test
jnp
cmp
xchg
pop
jns
mov
imul
and
and
outsb
test
jecxz
ret
xchg
mov
mov
xor
scas
iret
inc
or
pop
inc
ljmp
testb
cmpb
popa
cmp
in
sub
push
xchg
lcall
mov
or
nop
and
xchg
jge
bound
gs
mov
repz
xor
inc
idivl
je
add
inc
sti
inc
mov
pop
inc
push
push
push
sbb
es
add
mov
adc
int
sarl
mov
jb
test
push
jbe
bound
shrb
inc
dec
pushf
jl
shll
sbb
js
jl
outsb
es
jle
push
loop
mov
xor
ds
clc
jp
adc
into
jno
outsb
inc
inc
loop
xor
or
pop
popa
ds
sahf
cmpsb
std
xchg
repnz
jbe
clc
jb
sub
out
outsb
pop
stos
test
addr16
xor
jmp
leave
andl
sub
loop
jp
jbe
in
fldcw
add
jno
fabs
jle
sub
dec
xor
lods
inc
inc
jp
inc
outsb
sub
shrb
divb
mov
cmp
sub
xchg
jb
pop
dec
jnp
dec
sub
push
cli
imul
outsb
push
pop
xor
mov
loopne
jo
js
out
cmp
scas
loope
cmpsb
cld
jno
out
pop
sbb
push
jb
adc
jae,pn
cmp
repnz
into
fsubrs
icebp
into
bound
dec
ss
cmp
mov
pop
pop
xorb
jle
and
sahf
fcoml
add
pop
cmp
ss
es
rcrb
lret
inc
repnz
cli
jle
fidivl
sub
decb
lods
or
pop
fcomps
jb
xchg
cmp
cmp
bound
mov
sub
repnz
jb
push
dec
mov
fldcw
sbb
cmpsb
hlt
jb
lcall
hlt
inc
loopne
shlb
sarb
push
rcrb
out
cli
dec
and
mov
jo
xchg
cltd
insl
and
mov
cmpsb
aaa
std
xchg
lcall
sbbb
xchg
jmp
xor
push
insb
gs
dec
push
push
jecxz
or
cmp
add
jge
or
mov
jecxz
push
xchg
pop
add
mov
adc
mov
outsb
xor
sub
mov
and
xor
pop
sahf
mov
inc
clc
mov
mov
enter
das
and
adcb
movsl
rorl
ljmp
inc
mov
scas
sbb
jbe
lods
cltd
and
jb
cmp
xchg
scas
enter
mov
sub
ss
sbb
cmpb
or
js
jae
fwait
cwtl
push
adc
lcall
clc
xor
sti
ret
add
mov
inc
xor
ficoml
xor
jns
sbb
mov
xor
pushf
ljmp
shll
lcall
lods
mov
mov
adc
mov
ret
xor
out
or
imul
shrl
test
cwtl
jns
sub
mov
aaa
cmp
out
and
mov
pop
jb
jne
out
mov
xchg
push
aas
into
gs
repnz
daa
mov
je
and
in
nop
divb
fisubrs
push
mov
cs
mov
sti
dec
cmp
push
shrl
ljmp
pushl
fidivl
lcall
lods
fs
or
cmp
mov
jo
and
addr16
cltd
dec
or
pop
jp,pn
js
xlat
dec
pop
xchg
stc
orb
in
pop
rcrb
and
lcall
sub
mov
sbb
mov
pop
lahf
pop
fsub
mov
das
cmp
xchg
js
pop
lret
push
int3
add
jae
jb
lods
and
insl
dec
ret
mov
dec
push
decl
loop
xor
in
out
cmpsl
inc
pushf
and
xorl
out
cmp
loopne
jae
scas
into
ds
jle
adc
call
sub
jg
dec
dec
outsb
lea
lods
incb
jae
lcall
cmp
push
into
mov
fstpt
addb
out
das
mov
xchg
rorl
lods
adc
mov
lock
mov
stos
int
ret
pop
daa
xchg
mov
ret
popf
lret
pop
lahf
push
les
stc
mov
sub
out
inc
jg
jno
repnz
sub
lcall
out
divb
mov
xchg
fildll
ja
movsb
int
xor
fstps
adc
sub
outsl
xor
inc
ret
inc
mov
jle
cltd
push
shll
iret
fwait
test
setp
cmpsl
imul
ret
loopne
jns
aaa
test
xor
js
pop
add
lcall
mov
rclb
mov
in
ja
daa
mov
or
and
daa
push
jmp
jb
xor
lret
insl
xor
add
mov
outsb
push
jle
jecxz
rclb
ds
sbb
and
cmp
movsl
xchg
sub
nop
mov
sub
imul
xchg
mov
or
inc
ret
test
ss
mov
cli
leave
lret
std
mov
in
jns
shr
cmp
addr16
mov
iret
ud2
insb
das
imul
enter
cltd
jge
sbb
sbbb
pop
call
adc
daa
xchg
in
mov
pop
fdivrs
jbe
in
push
in
mov
icebp
test
sbbl
out
cmp
pop
cmpsb
lea
jae
xor
jl
test
xor
xchg
mov
stos
fisttps
pushf
ja
popa
mov
adc
outsb
call
hlt
or
jl
das
sub
push
jo
cmc
loopne
ja
and
idiv
push
rolb
mov
mov
sub
pop
add
out
lcall
pop
adc
jo
xchg
sbb
xor
pushf
mov
rcrb
in
ret
mov
sbb
mov
ret
popf
aaa
iret
or
mov
fwait
cmc
ljmp
cli
sahf
cwtl
jno
mov
sbb
mov
test
sarl
push
mov
adc
sbb
mov
dec
enter
shlb
mov
mov
fidivs
jae
popa
iret
test
fnstsw
ret
mov
insb
dec
rorl
ja
lea
js
addb
es
scas
pop
movsb
mov
or
lods
mov
dec
icebp
lock
xchg
fbstp
cmp
and
mov
push
sub
pop
lcall
push
add
adc
in
repz
pop
test
stos
aam
mov
mov
push
lods
jae
mov
shll
addl
lock
fsubs
add
xlat
mov
subb
push
add
pop
outsl
sub
jo
sbb
ret
sub
lcall
sahf
xor
movsb
lods
loope
loop
pop
jle
mov
pop
or
add
jle
stc
and
and
lock
mov
movsl
pop
push
dec
lahf
add
sub
das
cmc
push
bound
inc
addl
xlat
into
icebp
cwtl
out
mov
jo
stos
insb
rorl
xchg
lcall
and
lea
popa
mov
xchg
loopne
movsb
pop
pop
push
add
inc
mov
adc
ret
es
add
cmp
add
xchg
pop
mov
sub
ds
andb
cmc
icebp
xchg
or
call
mov
outsb
lds
divb
dec
lock
mov
mov
lds
add
jmp
cwtl
jecxz
outsl
push
push
cmp
pop
aaa
cltd
pop
mov
push
pop
and
mov
pop
ljmp
xor
mov
jge,pn
mov
negb
xchg
jno
mov
xor
push
mov
loope
pop
lahf
cltd
jo
sub
and
and
mov
fs
cwtl
test
filds
mov
arpl
jno
loopne
sub
or
cmp
pop
mov
js
and
pop
clc
push
shl
mov
jp
int3
sub
jns
inc
test
xchg
repnz
sub
outsl
adc
lret
cmc
push
add
lcall
jl
mov
scas
test
sub
and
das
stos
stos
sbb
pop
xor
mov
or
mov
jge
daa
fcoms
pushf
lahf
rcrl
std
adc
lock
enter
jle
ja
movsb
stc
orb
sbb
xor
pushf
cltd
pop
xor
fisubl
pop
dec
xchg
repz
rclb
xchg
sbbl
xor
fidivl
std
mov
pushf
push
addr16
jo
mov
or
scas
loope
js
jns
mull
cltd
dec
or
aam
pop
pop
jbe
cltd
mov
ljmp
popf
addl
loopne
icebp
xchg
sbb
addl
pop
push
pushf
dec
imul
and
bound
mov
in
xchg
xor
cli
and
int3
pop
addr16
inc
rcr
cmp
jo
or
sub
std
out
vsqrtps
xchg
adcb
leave
ret
pop
out
outsl
mov
mov
mov
outsb
push
adc
imul
xor
mov
push
std
fnstcw
lcall
xor
sbbl
and
adc
sbbb
pusha
bound
push
mov
stc
lods
xor
pusha
inc
orb
daa
icebp
mov
sbb
push
adc
inc
push
gs
cltd
dec
sahf
xchg
inc
and
sbb
mov
sbb
sbb
push
shlb
mov
scas
mov
insb
outsb
shll
pop
dec
push
les
scas
and
sbb
sbb
add
cwtl
shlb
std
xchg
orb
jns
or
mov
dec
and
mov
jns
fisubs
int
out
gs
in
pop
sub
mov
outsb
push
and
daa
in
push
lods
loop
call
js
and
fcompl
popf
jns
dec
mov
test
jnp
pop
mov
shll
mov
sti
movb
mov
mov
fsub
mov
sbb
clc
imul
insl
adc
lret
mov
in
xchg
jbe
mov
movsl
and
push
mov
push
xchg
mov
movsb
push
push
and
scas
xchg
adc
xor
lods
fnstsw
shrb
push
les
jle
shrl
pop
das
ljmp
and
cmp
repnz
push
scas
inc
jbe
gs
push
jnp
mov
inc
mov
cltd
cwtl
dec
div
mov
sarl
mov
lods
pop
push
or
scas
inc
ds
mov
out
push
pop
incl
lods
inc
xor
es
pop
insb
add
jp
jbe
es
dec
lret
outsb
jmp
clc
adc
es
lea
call
mov
and
imul
pop
negl
xchg
jb
add
mov
imul
ds
jmp
lret
mov
push
add
push
xor
rolb
cmp
jns
jecxz
cmp
cltd
aas
fidivl
movsl
jl
mov
mov
xlat
add
cld
xor
scas
cmp
mov
sbb
inc
lds
sub
cmp
ret
jmp
and
scas
pop
fnstenv
and
jbe
loopne
sub
inc
aad
in
adc
ja
enter
add
xlat
lea
push
mov
push
xor
loopne
je
jns
out
pop
lcall
xchg
cmc
add
or
add
dec
jo
in
mov
mov
popf
sbb
xchg
sub
test
bound
xchg
push
in
mov
mov
fadd
mov
add
jns
push
push
lea
jo
pop
or
mov
fstpl
push
mov
mov
and
and
in
jge
les
out
and
pusha
loope
sbb
and
bound
xor
out
cmp
lcall
in
out
sahf
jbe
push
js
push
add
out
cmpsb
dec
lcall
jnp
pushf
js
test
icebp
adc
nop
lds
out
sbb
mov
in
pop
mov
int3
and
pop
sub
sbb
ret
rcl
adc
sub
xchg
out
xor
add
loope
sti
jnp
and
inc
cmp
and
std
cli
dec
inc
sti
sbb
movsb
pop
incb
idivl
mov
ds
movsl
call
jnp
mov
cmp
aaa
pop
lods
fs
mov
repnz
add
andb
out
aas
jns
xor
mov
pop
stos
add
rorl
mov
pop
cmp
jb
ja
mov
xor
adc
lcall
inc
xor
mov
lods
adc
push
dec
pop
dec
cli
xor
out
cmp
inc
aaa
xor
lcall
sub
xchg
xchg
mov
daa
fmull
gs
xchg
movsb
lods
clc
jg
mov
out
xchg
mov
or
and
cwtl
jge
add
ret
sub
arpl
and
rclb
xor
test
xorb
cmc
or
jle
fs
cs
pop
xorb
imul
push
dec
sbb
xchg
sub
inc
pop
push
sub
aaa
sub
into
inc
mov
sbbb
clc
or
adc
inc
and
and
lock
mov
aas
negb
sub
push
lcall
mov
je
push
mov
inc
jns
test
inc
ds
in
icebp
cmp
mov
jae
add
adc
xor
pushw
das
cld
and
insl
push
adc
add
outsl
jge
fmul
pop
mov
adc
divl
or
or
push
repnz
inc
je
mov
pop
shll
out
push
rcll
cmp
xor
es
pop
loopne
std
loopne
mov
jle
mov
xorl
inc
mov
cld
xchg
mov
test
aaa
jp
ss
lcall
insb
add
mov
pop
cli
cmc
lcall
adc
push
ret
imul
loope
xor
ja
mov
mov
pop
cmc
lcall
mov
sbb
jns
mov
cmc
pushl
fwait
sbb
and
negl
out
stc
ficoml
popa
pop
lcall
sub
pop
fdiv
dec
ss
shrb
iret
mov
pop
call
loop
push
cld
shl
lahf
xor
push
mov
jmp
nop
sub
mov
jmp
or
adc
mov
mov
mov
pop
mov
mov
cmpsb
imul
in
bound
cli
lret
jl
repnz
loop
push
cli
cwtl
jb
sub
lcall
ret
sarl
xor
adcb
inc
sbb
imul
jo
cmp
jle
sub
ss
add
cmpb
xor
and
rclb
jbe
loop
push
lea
hlt
or
out
mov
add
cmp
jb
jle
jb
push
adc
push
inc
push
imul
add
pop
mov
in
sub
pop
inc
out
outsl
aas
popf
mov
ljmp
cmp
jp
mov
shrb
fstps
push
push
sarb
aad
dec
stos
in
or
xor
lods
icebp
sarb
push
cmpsl
in
movsb
push
cmpl
pop
sub
push
and
push
test
xor
clc
dec
mov
adc
lea
sahf
cmp
out
icebp
push
std
xchg
mov
jns
lcall
inc
push
jae
push
lds
sbb
jo
movsb
mov
jae
mov
mov
push
xchg
pop
inc
sti
dec
int3
inc
lock
dec
lods
jg
inc
mov
add
sbb
add
xchg
cmpsl
test
xchg
xor
pop
addl
xchg
pop
imul
mov
xchg
dec
xchg
aam
ret
sbb
add
push
lahf
and
fucomip
and
mov
xchg
lcall
mov
cmp
mov
leave
push
les
inc
and
sbb
xchg
ret
pop
in
stos
testl
insb
push
sarl
out
shl
jns
lock
movsb
roll
fimull
daa
daa
add
mov
mov
cmp
cmc
out
push
jg
and
ret
nop
popl
sub
push
dec
cltd
cs
xchg
jl
ss
mov
jecxz
mov
xchg
ffree
cwtl
inc
loop
push
mov
cld
imul
or
lahf
xor
mov
adcb
ljmp
mov
push
rol
fwait
jl
jp
ds
inc
xchg
ja
out
and
dec
jo
cld
pop
mov
and
mov
sub
jnp
add
in
and
cld
dec
and
bound
sub
push
lret
pop
push
dec
push
pop
mov
call
xorb
rolb
cmp
je
insl
pop
jo
jp
insl
and
je
movsb
fnsave
pop
mov
test
sbb
xor
mov
arpl
inc
daa
push
adc
lods
push
jno
mov
push
jg
call
push
and
ficoml
push
std
mov
decb
scas
jbe
clc
mov
and
jno
xchg
mov
jbe
and
fimuls
add
xchg
jbe
mov
push
jmp
pop
outsl
push
stos
into
mov
ja
adc
push
push
dec
lea
jecxz
mov
ret
in
adc
cli
movsb
xor
faddp
cltd
dec
fcompl
mov
sti
mov
and
inc
loop
xchg
repnz
jmp
mov
out
test
mov
inc
inc
getsec
mov
es
mov
inc
cmpsb
pop
scas
xchg
jo
inc
cld
fxch
ret
or
test
subl
fmulp
or
jmp
ss
adc
mov
pop
push
sbb
xchg
mov
push
outsl
dec
lcall
jmp
jo
out
outsl
jbe
push
sbb
repz
mov
mov
cltd
mov
inc
lcall
sub
mov
out
js
lcall
pop
inc
arpl
jle
insl
pop
aam
add
imul
aam
lret
push
pop
pop
sti
shrb
pop
mov
and
xor
adc
mov
jp
mov
add
stc
rorl
pop
cmp
xchg
jns
mov
adc
jae
pop
dec
cmp
pop
in
in
jmp
xor
aaa
push
xchg
mov
mov
inc
cld
sub
add
imul
nop
add
inc
inc
les
push
jns
or
repz
addr16
shll
incl
popa
int
enter
add
pop
sbb
jns
gs
push
jns
arpl
bound
xchg
cs
inc
sbb
pop
mov
scas
ror
ret
cltd
push
add
xchg
lds
shrb
fcoml
cmc
push
outsb
rclb
out
mov
repz
mov
fstpl
insb
cltd
sub
jb
mov
cmp
jns
jl
mov
push
mov
jns
and
push
pop
out
inc
rol
ja
lcall
std
fwait
shl
cli
iret
in
test
jmp
push
jp
inc
and
in
pop
push
dec
sub
sub
add
and
add
fstpt
xor
jb
test
mov
or
repnz
sbb
in
mov
jae
popf
enter
in
inc
mov
and
mov
std
dec
push
mov
addb
xlat
movsb
dec
cmc
xor
dec
xchg
or
ja
pop
and
sbb
jp
ds
aad
fcoml
push
add
adcl
jnp
xor
push
add
rcll
jne
jecxz
mov
lcall
hlt
es
mov
into
xor
mov
mov
lds
add
ror
cwtl
mov
out
mov
mov
movsl
enter
inc
cwtl
mov
xor
lcall
stc
and
ja
jle
jg
imul
test
lcall
sub
dec
and
push
mov
mov
movsl
movsl
sbb
popa
xor
pop
ret
je
out
leave
ss
jl
popa
dec
jae
inc
rcr
xchg
push
push
out
mov
add
jo
lcall
add
in
push
lahf
faddl
pop
xchg
sbb
gs
mov
mov
sbb
in
inc
loopne
mul
cmp
mov
sbb
dec
pop
xor
ss
lcall
sbb
mov
pop
mov
push
jns
rorl
test
leave
adc
lcall
das
insl
lea
add
lret
sub
shlb
lcall
pop
outsb
jmp
ret
and
out
add
xchg
cmp
push
fwait
and
stc
mov
aad
sub
rolb
add
out
add
popf
cmc
push
addb
mov
ret
out
fnstenv
sar
js
loopne
cmp
jecxz
xchg
sub
shr
fistps
mov
xchg
repz
dec
mov
mov
jo
addl
adc
fcompl
xor
movsb
lcall
sti
insb
xchg
sbb
pop
mov
test
mov
pop
xchg
jns
and
data16
xchg
mov
mov
ljmp
movsl
lcall
and
and
sbb
and
cmpsl
cmpl
in
dec
mov
ds
cltd
outsb
add
adc
pop
cmp
fdivrp
in
jle
mov
in
cmp
cli
sbb
sub
or
sub
pop
cmpb
mov
or
cltd
jl
lock
mov
sub
add
xor
bound
sbbl
push
cmp
lret
mov
push
dec
sbbl
dec
clc
add
sbb
mov
lcall
and
call
lahf
mov
xor
das
outsl
lcall
sub
std
lcall
stos
dec
xchg
ret
cmc
outsb
repnz
fnsave
or
popa
cmp
sub
and
mov
adc
lcall
mov
jge
and
daa
adc
call
repz
sbbb
sub
dec
fiadds
ret
sbb
jne
stos
xchg
gs
xor
sub
lcall
imul
loope
mov
imul
mov
adc
cs
push
push
flds
cmp
mov
pushf
pop
movb
out
jb
scas
imul
cli
sbb
ret
pop
stos
sbb
push
or
jp
mov
mov
mov
cmpsl
jge
sub
sarl
call
sahf
pop
add
cli
mov
into
orb
add
cmp
sbb
jns
and
ja
push
sub
inc
and
les
mov
cwtl
cli
xchg
lea
fistpl
stc
pop
enter
adc
mov
xor
imul
xlat
inc
fiaddl
lea
sub
insb
sbb
inc
push
out
push
lea
mov
scas
or
sti
imul
mov
mov
and
les
push
daa
pop
outsb
xchg
jb
jle
jbe
pop
sub
push
fsubp
in
scas
divl
xor
push
imul
inc
rcrl
shl
and
push
rol
rol
in
addb
add
dec
jnp
inc
pop
inc
std
jae
xchg
cld
ljmp
sti
sub
rcr
clc
xchg
cmp
mov
data16
cmp
push
jp
clc
loop
pop
inc
rorb
push
dec
aam
dec
jb
push
push
pop
push
add
inc
push
mov
adc
or
or
rorb
jp
hlt
or
add
inc
mov
ljmp
popa
bound
dec
out
pop
or
inc
bound
sub
sub
jno
push
in
dec
cmp
in
or
sbb
out
cmp
clc
mov
in
loop
add
out
add
mov
mov
add
xlat
inc
stos
cli
cmp
sbb
sub
jp
ficoms
lret
inc
cmp
inc
and
pop
jg
pop
pop
xor
bound
lea
repnz
repnz
inc
mov
addl
and
loop
xchg
mov
lock
jo
jp
bound
add
out
jp
adc
bound
mov
cwtl
out
jp
bound
ljmp
loopne
jo
lock
jp
add
loop
outsb
xor
stos
nop
ds
mov
lcall
add
ss
lods
jno
xor
dec
pop
or
bound
add
jge
push
icebp
push
lar
lret
out
push
inc
xchg
cli
adc
lret
and
push
cmp
not
sub
loope
icebp
clc
pop
push
or
jbe
fwait
subb
inc
inc
push
cmp
pusha
bound
bound
jns
cmp
mov
bnd
mov
cli
bound
jge
pop
jp
ficompl
clc
out
data16
xor
push
lret
pop
dec
bound
jbe
sahf
lcall
out
adc
add
pop
pop
fldenv
popa
cli
pop
pop
cmp
xor
lock
mov
loop
dec
jo
push
bound
xchg
and
sub
ficomps
push
repnz
inc
ljmp
jle
jb
repnz
pop
mov
adc
jmp
test
cli
cmp
scas
bound
repnz
xor
mov
cltd
imul
repnz
rcr
xor
push
mov
cltd
ds
fsts
imul
add
cmp
in
mov
mov
mov
mov
jle
fisttpll
mov
jle
popa
mov
adcb
out
xchg
lea
lcall
sbb
mov
in
lss
mov
shlb
pop
ja
or
rorl
cld
test
pop
adc
lahf
cs
jmp
sbb
es
movsb
fcmovbe
add
mov
sarl
popf
inc
push
and
mov
gs
jmp
jge
and
inc
adc
loop
enter
cltd
dec
pop
pop
dec
sub
rol
sub
cltd
pusha
xchg
fisubrs
in
xchg
jns
and
push
cmc
mov
or
ljmp
lcall
pushf
sar
int
dec
loopne
test
imull
nop
sbb
add
loop
xchg
testb
mov
push
hlt
inc
idivl
pop
lcall
jne
mov
ljmp
fs
or
jecxz
push
sbb
movsl
cli
ljmp
cs
cmp
loope
mov
das
pushf
push
jno
orb
test
xchg
mov
jp
and
aas
xchg
test
pop
jb
gs
xchg
insl
pop
stc
shrl
jno
mov
cmpsl
sbb
sub
gs
sarl
and
popa
cmp
negl
orl
test
xor
add
test
lret
data16
sarl
xchg
popa
jle
shll
out
jmp
pushf
cmp
pop
lock
outsl
in
gs
push
fcoms
sahf
dec
xor
jno
popa
pop
xor
pop
leave
sbbb
cmp
movsl
and
mov
sub
mov
jo
pushf
loopne
xor
cld
pop
insb
mov
outsl
cmp
adc
and
and
insb
scas
lcall
mov
add
or
addr16
mov
pop
jbe
inc
mov
pop
add
outsb
jle
orl
lods
enter
stos
sahf
jo
ja
aaa
adc
mov
mov
lods
sub
mov
cltd
dec
pop
imul
std
fiadds
mov
cwtl
jge
fisubs
inc
loope
xor
fiaddl
inc
jb
shll
shrl
inc
sub
out
std
scas
mov
jmp
loop
cli
ret
jmp
stc
cmpsl
add
stos
popf
aaa
pop
movb
faddp
lds
jl
out
test
invd
ljmp
lcall
mov
lock
mov
stos
ret
in
lods
jb
inc
add
insb
andb
pop
rol
sahf
and
dec
roll
pop
rorb
enter
iret
mov
scas
jo
popa
cmc
aam
add
test
mov
imul
loope
jnp
add
push
sbb
add
and
mov
jo
lret
rorl
ja
rorl
das
mov
pop
pop
xor
mov
out
pop
cmp
lods
lcall
and
inc
test
mov
mov
push
mov
cmp
xchg
inc
in
cmp
cwtl
push
iret
rorb
sub
inc
icebp
lcall
ss
inc
cwtl
imul
sub
inc
push
scas
jb
frstor
rorb
pop
sub
roll
add
dec
rol
pop
rcl
test
sahf
lock
jl
jecxz
bound
lcall
movsl
xchg
mov
mov
mov
outsl
addr16
cli
add
mov
fnsave
lret
pop
mov
fcoms
dec
jecxz
mov
es
movsl
out
xor
ljmp
loope
and
mov
pop
xor
clc
mov
mov
leave
pop
sbb
and
scas
sub
push
rolb
pop
sub
nop
jg
push
repnz
pop
mov
cwtl
inc
or
mov
and
add
outsb
mov
cltd
mov
mov
and
stc
mov
sub
mov
push
mov
std
stos
lret
pop
lea
xchg
or
cli
ret
cltd
pop
lret
xchg
xor
or
fs
xchg
fisttpll
or
xchg
jbe
mov
mov
xchg
mov
mov
mov
loop
sub
imul
fildll
push
cmp
xor
cltd
insb
push
sbbb
push
xchg
movd
xchg
dec
xchg
test
ret
aaa
mov
mov
push
aam
in
push
mov
jmp
aaa
outsb
xlat
shr
xchg
xor
mov
sbb
add
std
mov
lods
rcrl
adc
sarl
int
mov
shlb
mov
adc
lock
ja
mov
shrl
cmp
and
jb
lret
insb
push
mov
adc
jecxz
enter
test
rorl
lods
in
push
lea
inc
popa
dec
out
dec
mov
push
xchg
jbe
fdivrs
scas
jb
cmp
lret
out
or
incb
stos
jo
fwait
jp
dec
mov
push
stc
mov
and
clc
rcrl
stos
mov
ret
sub
js
xchg
repnz
in
test
jmp
pop
mov
mov
jnp
stc
mov
subb
jle
cltd
and
bound
cmp
mov
jle
das
rorb
dec
sbb
std
mov
mov
add
cltd
push
and
lea
nop
mov
into
xchg
cmp
jge
dec
push
repnz
dec
sahf
mov
xchg
lcall
mov
shll
mov
clc
adc
cmp
xor
xor
lds
sti
xchg
add
xor
jge
jno
dec
hlt
scas
cltd
mov
fwait
sbb
cltd
ficoms
leave
mov
decb
ret
pusha
cs
lods
cwtl
push
mov
movsl
push
int
or
jge
lcall
pop
dec
scas
mov
orb
jb
lcall
mov
lods
mov
xchg
cmpl
dec
sti
sbb
gs
cltd
outsb
push
lret
mov
cltd
mov
ss
imul
mov
or
scas
pusha
lcall
push
cmp
sar
mov
enter
sti
ds
sbb
mov
and
inc
sbb
xor
jo
shl
insb
arpl
lock
lds
push
jne
push
jg
dec
inc
and
pop
stc
mov
and
cmp
cmp
mov
aas
jmp
sbb
lcall
dec
mov
loop
neg
pop
int3
mov
mov
mov
lea
repz
mov
push
dec
lods
insl
mov
fdivr
mov
cmp
sbb
cltd
data16
cmpl
mov
cmp
scas
mov
xorb
xor
out
sub
cmpl
test
adc
aad
dec
adc
rolb
adcb
sbb
cli
jg
push
ficompl
pop
js
sub
outsl
int3
out
dec
les
mov
ljmp
movsb
scas
adc
pop
int
add
repz
or
fcmovbe
mov
add
cwtl
xchg
inc
mov
scas
xchg
lret
xchg
dec
sub
inc
xchg
ss
sub
mov
mov
bound
in
jg
pop
fldl
popf
push
xchg
add
cmp
xchg
lods
mov
rcrb
pushf
movsl
lods
fcompl
std
lods
mov
sub
push
cmpsb
adc
ret
paddsb
jbe
movsb
fs
mov
inc
push
ficoms
movb
inc
mov
cld
orl
jbe
mov
lods
ret
xor
outsl
cltd
mov
icebp
mov
and
mov
jle
mov
sub
daa
cmp
andb
cltd
mov
shlb
push
sbb
jp
sarl
pop
imul
push
push
mov
sbb
shll
addr16
movsl
inc
mov
and
jmp
sbb
adc
in
fldl
outsl
jp
mov
xchg
repz
fstl
xchg
in
pop
mov
popa
inc
and
nop
popf
add
adc
lcall
cmpsl
mov
cmp
cmp
mov
ret
loopne
shll
addr16
mov
imul
sbbb
aad
stos
dec
cs
sub
lock
sub
xorb
mov
fldl
gs
jo
lcall
add
mov
mov
sbb
daa
popl
subb
decb
dec
aaa
daa
sub
cmp
mov
xor
push
clc
jle
rol
jg
fsubrl
mov
ret
insl
jp
movsb
pop
push
sub
sbb
in
int
cmpsb
inc
outsl
rorb
sbb
push
cmp
jne
repnz
shl
push
outsb
mov
test
lcall
mov
or
je
imul
jne
movsl
xorl
idivl
cmpsl
mov
jae
jb
xchg
ja
insb
je
sub
xchg
xor
push
loop
dec
and
pop
inc
test
xchg
add
mov
xor
and
ja
movsb
test
cli
adc
adc
lock
cmp
add
pop
push
inc
sub
inc
push
rorb
out
adc
lea
aad
push
mov
jl
imul
jle
outsl
pusha
out
pop
mov
pop
in
dec
mov
cmc
out
lea
scas
leave
ljmp
or
lods
sub
push
mov
push
stc
outsb
repnz
in
jmp
push
or
mov
les
sub
ret
es
sarb
sbb
jo
mov
pop
jb
clc
sbbb
dec
push
je
aam
ret
pusha
xor
push
push
dec
icebp
sub
leave
jns
push
je
xchg
push
call
iret
pop
loopne
lcall
jmp
gs
mov
add
ret
mov
push
pushf
outsb
jo
pop
xchg
mov
cltd
jecxz
push
mov
inc
jge
xchg
jns
pop
mov
mov
leave
scas
jecxz
mov
jnp
ficompl
and
xor
jg
add
insb
lds
mov
fidivs
mov
cmc
and
popl
inc
xchg
mov
bound
aaa
les
add
cmc
jl
dec
popa
or
xlat
test
aaa
in
push
scas
inc
jge
cmp
das
std
xchg
ds
enter
mov
daa
aam
mov
sbb
nop
stc
test
and
xor
xlat
cmp
and
enter
adcl
or
fnstsw
or
lahf
jge
sub
out
mov
push
and
and
pop
xor
stos
movsb
test
add
xor
push
and
jecxz
jo
int3
cmp
mov
mov
inc
lds
sti
push
mov
mov
repnz
out
mov
loop
frstor
bound
inc
in
aaa
adc
lock
cmp
xor
sbb
lahf
inc
es
jb
mov
xor
test
out
pop
mov
jnp
cmpsl
mov
cmp
mov
sbb
outsb
dec
cltd
xor
jg
cmp
lock
and
ds
ds
les
cwtl
inc
push
bound
sbb
ret
maskmovq
mull
jbe
sub
jb
sub
sbb
pop
das
push
and
cltd
stos
push
pop
dec
lret
lods
mov
ja
sub
sahf
in
cmp
rclb
test
rclb
jno
mov
jb
insb
jnp
sub
pop
pop
sbb
pop
pushf
je
rorb
std
cltd
xchg
pop
cmp
pop
js
mov
mov
jmp
lcall
aad
stc
adc
je
insb
or
and
ja
cmp
mov
stos
sbb
loop
mov
lods
xchg
or
inc
imul
sti
leave
lods
pop
push
push
sub
and
ret
out
xor
fimull
cli
mov
push
and
lret
or
fdivs
fimuls
dec
es
loope
xchg
dec
lahf
das
in
hlt
dec
lock
sahf
imul
xchg
dec
mov
jge
xor
cmp
and
mov
lds
lods
pop
xor
fnsave
pop
inc
push
lcall
imul
pusha
add
sbb
pop
push
add
mov
lds
jae
lea
fsts
notl
and
fsts
stos
cmp
aam
xlat
mov
stos
mov
mov
arpl
sub
lods
sub
pusha
jns
push
sub
jmp
or
cmc
outsb
aad
imull
xor
loop
dec
adc
xchg
cltd
adc
js
add
mov
fwait
insl
jg
inc
mov
mov
cltd
ret
push
jo
movsl
xlat
lock
scas
mov
shlb
jo
inc
sub
outsl
xchg
sub
test
out
xor
je
and
mov
pop
push
sub
loope
or
test
stos
pop
jbe
aas
add
es
cmp
add
pop
jo
into
test
mov
mov
jo
add
sub
pop
les
dec
mov
inc
pop
bound
add
lds
inc
xchg
bound
and
mov
les
sbb
mov
cs
xlat
mov
push
mov
fldt
stos
jns
lods
std
movsl
sbb
stc
cmp
sub
mov
aas
or
fdivp
jmp
pop
and
dec
jno
pop
mov
je
jb
mov
mov
inc
cli
bound
jbe
and
jle
sub
rorb
insb
pop
pusha
inc
in
jo
push
fsubl
jle
leave
push
adcl
mov
pop
cmp
dec
stc
cmp
push
cmpl
lret
xor
mov
mov
aas
push
sub
inc
mov
jp
pop
pusha
sbb
imul
shrl
add
mov
inc
loope
jp
pcmpeqd
push
loope
lret
fadd
bound
mov
call
mov
jne
jp
inc
imul
pop
dec
sbbl
dec
pusha
cmp
bound
jnp
lea
and
dec
shll
cmp
jno
aaa
std
cmpsb
mov
lret
xor
mov
pushf
xchg
push
dec
adc
inc
jno
inc
sahf
xor
inc
sbb
adc
jle
fidivs
in
pop
cli
jb
adc
inc
dec
and
das
adc
rsqrtps
pop
fisubs
jne
loop
sbb
pop
pop
lea
mov
xor
inc
adc
lcall
mov
pop
out
scas
sti
js
stc
out
sub
add
mov
xor
ss
rol
jns
push
push
into
js
adc
sub
cs
and
sub
into
inc
mov
inc
imul
mov
adc
rclb
icebp
adc
aaa
jo
out
ds
fdivrs
pop
into
pop
sbb
outsb
fidivrs
outsb
push
lods
sbb
lock
push
cmp
dec
mov
jno
ljmp
jle
dec
ljmp
loop
ds
push
icebp
mov
sub
outsb
loopne
push
inc
loopne
iret
into
cmp
stos
sbb
push
jb
sbb
jle
popa
xor
or
ds
sub
out
mov
cmp
jbe
repnz
xor
mov
jns
jo
jp
jb
push
loopne
ret
add
loope
cmp
push
mov
jle
lret
cmpsb
test
cltd
stos
lahf
fnstenv
sbb
popf
mov
cld
jae
dec
gs
jnp
add
pop
jg
push
fisttpll
lret
sub
ljmp
cltd
xor
sub
add
call
fwait
jbe
mov
rolb
loopne
push
cmpsl
test
xor
lcall
sbb
xchg
repnz
into
in
sub
xor
add
pop
jmp
push
xor
shll
mov
mov
fcomp
sub
cs
xlat
or
jae
mov
add
notb
cmc
xchg
mov
fcom
enter
pop
pop
ficoml
push
add
jo
les
cli
stos
pop
add
repz
adc
daa
adc
jbe
or
loopne
jecxz
jle
sbb
bound
jle
arpl
jp
ret
xor
cli
jp
push
jle
int
dec
push
push
arpl
mov
cmp
pop
mov
mov
push
jp
xor
dec
push
fldcw
add
fisubrs
mov
push
call
stc
dec
loope
icebp
sbb
or
rcl
ret
jp
faddl
push
sub
jp
into
cli
fcomi
bound
pop
sub
or
push
clc
sub
inc
lahf
aad
jp
mov
jge
pop
push
and
pusha
ljmp
scas
mov
negb
jb
and
xchg
fidivrs
dec
mov
bound
mov
pop
jg
bound
dec
call
push
out
pop
bound
sbb
scas
add
fistpll
jg
jge
jno
in
stc
out
sbb
ljmp
sbb
push
inc
jnp
shr
lcall
cmp
jge
push
pop
jle
dec
xor
xor
pusha
or
cmp
mov
loop
xorl
insl
jns
mov
inc
into
imul
cmp
dec
dec
cs
mov
xor
mov
sbb
mov
das
cmp
cmpsb
inc
lret
loopne
pop
jle
pop
out
pushw
jp
es
pop
ds
jp
or
xchg
dec
xchg
push
mov
sub
push
icebp
dec
ljmp
push
leave
adc
mov
imul
jno
xchg
cs
xchg
sub
mov
cmp
sub
push
ret
jno
into
icebp
mov
dec
push
out
scas
imul
loop
ljmp
xor
cmpsb
fcomps
pop
es
dec
cwtl
repnz
mov
pop
jb
cmp
ret
and
mov
test
enter
popa
movsbl
pop
jle
enter
pop
xlat
inc
mov
mov
sar
faddp
sbbl
rcrb
ret
cltd
mov
xorl
xor
imul
shlb
inc
loop
cltd
mov
pop
popf
lea
pop
inc
shr
push
jle
sahf
jge
mov
mov
sbb
lret
push
and
cmp
idivb
mov
bound
bound
sbb
pop
cmp
scas
cmp
mov
mov
jae
or
sbb
test
mov
mov
mov
popf
mov
add
or
repnz
jmp
or
test
and
sbb
lahf
cmp
test
add
and
fisubl
push
xchg
push
dec
out
mov
or
mov
mov
test
cmp
xor
dec
sahf
xchg
jg
jg,pn
jb
sti
fdivp
arpl
add
stc
cmovge
outsl
xchg
sti
loopne
cmpb
in
data16
outsb
dec
push
jge
cmp
add
adc
lcall
ss
out
outsl
insl
rcrl
cmp
lods
mov
loope
cwtl
add
mov
xor
jge
dec
ds
jle
push
insb
fsts
pop
push
push
cmp
pop
lds
imul
cmc
add
outsl
pop
stos
xchg
jle
xchg
cli
mov
push
push
dec
pusha
jbe
sub
scas
add
test
mov
jecxz
je
test
shr
push
jo
sub
idivb
jne
mov
jp
scas
sar
mov
mov
negb
loope
mov
rcrl
pop
fistpll
lcall
xor
sar
icebp
fimull
mov
xchg
cltd
arpl
shlb
mov
rorb
sub
ret
or
lock
push
cmp
mov
fwait
jbe
cmp
mov
lcall
pushf
pop
fsub
jge
jae
loopne
sbb
add
test
lock
push
pop
clc
jp
call
inc
roll
jno
dec
popf
inc
push
outsl
test
test
rcrb
push
cld
mov
lcall
and
push
mov
add
sarb
add
pop
mov
xchg
cmc
xchg
xchg
cmc
adc
xchg
outsb
pop
cltd
mov
lea
push
outsb
lcall
imulb
bound
in
aad
push
mov
lea
xor
filds
das
idivb
aaa
sub
push
jbe
mov
nop
rclb
cmp
push
cltd
add
mov
pop
push
mov
stc
mov
and
mov
xchg
sbb
pop
push
ret
cli
lret
addr16
in
js
das
mov
add
addr16
pop
ja
jl
adc
pop
sub
je
cld
xor
jae
mov
jle
add
push
inc
jl
cmp
mov
pop
adc
lods
push
nop
movsb
mov
add
imul
inc
jle
sub
xchg
insb
aaa
stc
sbb
xor
dec
adc
sbb
inc
push
pop
sub
and
dec
sbb
or
pop
popa
bound
push
and
add
repnz
xor
mov
aam
daa
cmpsb
daa
mov
scas
lcall
lds
and
stos
test
jns
and
jo
fucom
bound
cmc
pop
sbb
mul
sub
cmp
add
jle
cltd
pop
sub
je
fdivrs
lret
and
loopne
and
push
leave
inc
push
sbb
jp
rorl
repz
dec
ret
pop
mov
ja
mov
lds
pop
mov
mov
mov
lds
idivl
push
jmp
jbe
test
mov
fsts
xlat
lcall
cmpsb
adc
push
dec
mov
and
cmp
push
jle
cmp
add
aam
jge
xlat
push
mov
out
test
mov
xchg
lods
push
cmp
jo
sub
lahf
incl
mov
push
std
mov
sbb
or
lcall
xor
out
and
mul
and
cmp
fnstenv
test
ret
mov
push
cltd
mov
test
inc
insb
mov
scas
aas
fsubs
roll
and
mov
add
mov
pushl
xchg
lahf
jnp
xchg
sub
mov
pop
dec
cltd
cmp
push
push
mov
pop
rorl
int
loopne
mov
jno
inc
nop
inc
dec
movsl
jo
fildll
ljmp
outsl
in
mov
xor
movsl
sbb
adc
mov
or
lds
mov
add
pop
divps
or
adc
or
pop
subl
lret
call
adc
std
jbe
and
rorb
jb
jle
xchg
scas
xchg
aaa
xor
insl
xchg
lcall
add
lret
mov
mov
rorl
mov
pop
jns
add
sub
xchg
xor
jl
pushf
fucomip
sahf
jecxz
fstl
mov
jbe
jle
lcall
ja
ret
cmpl
arpl
das
iret
jbe
inc
push
push
xor
and
jecxz
push
fdivrs
jnp
test
lds
dec
and
mov
leave
adc
pop
mov
pop
jle
fs
mov
pushf
aam
stos
stos
popf
aaa
add
xor
pop
and
xor
std
outsl
and
mov
stc
pop
stc
je
and
cmp
dec
add
dec
xor
jg
aad
mov
pop
inc
push
sub
xor
sbb
std
xchg
outsl
pop
pop
scas
and
mov
mov
push
test
mov
adc
outsl
sahf
jge
cld
cltd
int
add
mov
sub
movd
std
xor
and
pop
lcall
aam
ds
jns
push
mov
and
xchg
xchg
lock
xchg
test
ja
and
pusha
mov
ss
daa
xchg
mov
xor
leave
mov
inc
push
lods
jge
mov
mov
rcrb
lret
xchg
scas
cli
pop
clc
lock
add
outsl
inc
pusha
fldcw
mov
lret
push
mov
cli
test
ja
xor
jg
les
or
xchg
pop
outsb
or
das
mov
pop
mov
jmp
lods
cltd
add
inc
leave
jne
lret
loope
out
das
sbb
sbb
add
sahf
sbb
mov
mov
push
xor
getsec
lods
rcr
xlat
sbb
or
push
inc
cltd
enter
and
push
push
inc
mov
jae
ror
in
push
inc
cwtl
clc
cmp
push
rcrl
aaa
dec
lods
sub
xor
fstps
sub
ljmp
setbe
sbb
adc
sbb
jb
or
flds
movsl
lret
cltd
pop
add
mov
sub
adc
fstpl
and
rcrb
sub
insb
and
movsb
push
xor
test
repnz
sub
aad
dec
jbe
fs
fimull
jle
js
sbb
dec
mov
shrb
pushf
xchg
pop
gs
push
ds
push
sbbb
mov
pop
pop
movsb
dec
cmc
sti
push
cmp
sub
add
in
shll
push
pop
or
sub
ret
mov
scas
mov
dec
lcall
idivl
aaa
pushf
xchg
les
loopne
scas
enter
cmp
cmpsl
push
push
mov
pop
xchg
fisubs
cs
pop
idivb
sub
xchg
adc
mov
sti
sbbl
scas
subb
int3
aaa
jp
outsb
std
push
cltd
xor
jo
notb
and
leave
sub
add
jb
jae
rol
or
add
mov
out
cmc
or
jg
clc
mov
add
inc
aaa
push
into
repz
mov
sub
pop
and
loope
cltd
sbb
or
cwtl
sub
mov
shll
xor
sub
ds
imul
lea
lcall
jo
lret
lds
cmp
mov
insb
movsl
orl
push
mov
mov
xchg
lret
mov
mov
cmc
repz
and
cltd
push
or
inc
or
stc
mov
idivb
lcall
mov
ja
dec
xlat
rorl
pop
mov
mov
mov
sbbl
std
mov
mov
ljmp
or
add
and
lods
jnp
mov
fstps
pop
inc
int3
cltd
shl
divl
loope
leave
xchg
adc
imul
in
adc
insb
cmp
lock
lods
out
ja,pt
in
pop
pushf
pushf
iret
decl
stc
xchg
mov
andb
push
or
add
mov
lds
xchg
pop
in
xchg
and
divl
std
push
xchg
and
movl
mov
and
out
mov
sbb
shl
cld
pop
mov
dec
int
lods
es
mov
popl
popf
notw
fldl
movb
or
test
cltd
in
mov
pop
popf
insb
std
jmp
dec
xor
jp
clc
push
xchg
xchg
inc
loopne
cld
or
repnz
test
stos
sbb
inc
dec
scas
jge
or
fstps
cli
cltd
out
jle
jp
test
xor
add
lcall
jnp
lea
and
sti
lock
repnz
jb
mov
sub
test
inc
lcall
clc
nop
in
add
cli
lock
sbb
jbe
jbe
cltd
stc
test
fsubl
cmpsb
imul
fdivp
testl
cmp
data16
xor
lods
cmp
pusha
and
mov
jecxz
or
pop
pusha
dec
mov
and
pop
push
push
pop
mov
aad
sbb
push
pushl
cltd
mov
jp
push
lea
lods
add
push
jns
mov
jmp
inc
and
sbb
ret
nop
in
mov
lods
sub
cmpsl
xor
stc
dec
js
pushf
push
jns
sbb
je
hlt
stc
ret
clc
imul
out
jg
fcomps
je
test
mov
jns
xorl
scas
sub
cli
pop
shll
push
sbb
movb
pop
or
mov
pop
sub
fimuls
sbb
test
subl
mov
ficoms
aam
sbb
popf
jle
push
call
call
aad
mov
stos
jg
adc
js
pop
adc
xchg
mov
mov
sub
outsl
fistl
outsl
xchg
sahf
addr16
pop
jno
test
inc
fists
add
mov
daa
mov
cwtl
jo
ret
dec
out
test
call
mov
imul
inc
fidivs
lods
lret
xor
mov
scas
imul
inc
cmp
cli
insl
adc
fs
xor
inc
repz
mov
flds
sbb
ja
pop
loopne
jmp
sub
sbb
push
dec
inc
add
movsb
pop
push
mov
sbb
int3
jmp
dec
xchg
shll
mov
lcall
add
jge
cmpsl
cmc
addb
push
fst
cmp
test
jb
push
fucomip
add
out
lcall
pop
or
stos
call
out
xchg
mov
aaa
mov
cltd
sarb
test
aas
lcall
push
xchg
ja
mov
mov
jecxz
pop
test
pop
subl
jb
ja
dec
mov
or
out
push
daa
pop
inc
pop
popa
cli
xchg
and
and
dec
jns
out
mov
lret
xchg
jne
mov
shrb
int
pushl
cmpl
sbb
outsb
out
test
fnsave
and
and
testl
mov
test
jmp
cs
mov
xchg
sbb
push
cmc
lret
or
lcall
push
adc
push
adc
dec
pop
jle
jo
shlb
cli
dec
and
mov
shlb
cltd
js
push
sbb
jmp
cld
sbb
lahf
mov
xchg
sub
ja
test
pop
add
pop
cmp
jne
imul
mov
aas
sub
cltd
int3
out
dec
out
adc
pop
mov
push
adc
dec
pop
out
push
push
jno
movsb
xchg
mov
inc
inc
test
orb
push
repnz
cld
adc
faddp
cmpsl
push
or
pushf
and
fbstp
add
lds
cmc
dec
xor
sbb
fisttps
cwtl
in
xchg
lcall
mov
ja
ret
pop
rcrl
pop
xchg
sub
ja
movsb
ljmp
pop
jle
inc
popf
jne
xchg
bound
jle
push
test
test
mov
leave
mov
std
cltd
cmp
enter
js
cwtl
mov
xor
mov
mov
adc
sbb
fidivrs
sbb
es
xor
mov
outsl
cltd
movsb
sub
jle
push
adc
xlat
mov
adc
cwtl
stc
mov
loop
mov
mov
cmp
mov
mov
jbe
jns
add
xchg
dec
test
jp
fmul
adc
imul
loope
cwtl
cmpb
mov
sbbb
scas
sbb
mov
mov
push
je
lea
in
jae
sbb
xchg
js
mov
jns
xchg
inc
mov
lock
mov
cmp
mov
push
jecxz
test
lahf
jne
rcrb
shl
pop
push
and
mov
mov
cmp
aad
jns
lea
pop
jae
mov
shlb
shlb
push
mov
movsl
rclb
pop
add
stc
lcall
repnz
lahf
add
pop
mov
pop
cltd
sbb
repz
lcall
jmp
hlt
push
pop
xor
mov
imul
fcomps
add
into
adc
rcll
orb
mov
adc
adc
loop
jnp
adc
xchg
jge
fcmovne
mov
scas
mov
das
xchg
jp
mov
add
rcrl
movsb
xor
stos
jbe
pop
fisubrs
jp
cld
xchg
lock
jns
xorb
jb
mov
mov
int3
push
push
jo
mov
insl
bound
testb
inc
shrl
lea
sub
jns
mov
sbb
mov
lahf
pop
mov
lret
jle
inc
int
inc
push
sarb
sub
fwait
jle
sbbb
iret
nop
outsl
jo
sub
dec
lods
ret
inc
dec
scas
imul
out
lea
add
aam
inc
or
aad
cltd
imul
test
adc
add
movsl
push
rcrb
jecxz
push
sbb
pop
xor
or
lds
insb
sbb
imul
xchg
sub
push
xchg
add
test
in
and
jp
imul
jb
outsb
orb
jl
jle
loope
bound
insl
iret
dec
jae
push
sub
fidivl
add
addl
dec
and
lds
add
ss
pop
xor
in
dec
into
dec
add
mov
rcl
jg
ljmp
outsb
lret
repnz
int3
pop
push
dec
push
jbe
xor
jmp
loopne
push
inc
bound
inc
push
insl
pop
sbb
mov
pushw
xchg
jp
and
mov
sub
call
push
repnz
jp
cs
mov
xor
pop
popf
jg
test
jnp
pushf
adc
jne
jno
stos
pop
cmp
bound
imul
mov
popa
and
imul
dec
cli
lret
jp
inc
fists
imul
cld
sahf
mov
bound
out
lds
mov
xor
lcall
data16
mulb
pop
pop
popf
jp
dec
popa
mov
push
sbb
sub
mulb
cmp
std
test
inc
gs
icebp
lcall
loop
sub
cli
das
into
jb
mov
mov
jno
repnz
repnz
cmp
sbb
ljmp
inc
bound
stos
sub
push
lcall
inc
out
adc
push
in
std
ret
idiv
mov
sbb
xor
or
sub
jge
jb
push
inc
adc
shl
stos
es
imul
sbb
jmp
cmp
lea
out
aas
jns
sbb
cmp
fwait
pushf
lret
repnz
cmp
dec
jle
jo
sbb
pop
out
bound
dec
lcall
sbb
push
cld
mov
cmpsb
data16
add
xchg
xchg
and
leave
repz
mov
and
data16
imul
addr16
sub
sub
mov
add
ja
lock
mov
std
adc
xor
test
sarb
xchg
stc
clc
jl
mov
mov
sbb
scas
stc
arpl
sub
orl
test
push
mov
lea
nop
xchg
daa
pushf
xchg
roll
cmp
sbb
daa
push
jge
cltd
and
mov
imul
std
sub
or
sub
data16
out
pop
rcrb
pop
dec
lret
shlb
jbe
xor
cmp
hlt
xor
rol
adc
jo
test
mov
sbb
rclb
nop
sti
out
cltd
stc
in
test
addl
add
roll
mov
test
daa
popa
cli
test
jo
jl
add
cwtl
xchg
out
cmp
jne
mov
xor
mov
adc
push
push
aaa
xor
aaa
mov
mov
sbb
jo
pop
rorl
sub
pop
xor
sub
sbb
xlat
lods
mov
shll
std
mov
aad
and
push
push
mov
stos
les
addl
rorl
iret
lds
mov
jne
mov
pop
lods
jns
stc
or
lcall
out
jmp
mov
in
xchg
add
cltd
or
mov
nop
es
sbb
jecxz
pop
outsl
and
out
loope
jns
cli
lods
enter
rcrb
in
enter
lock
insl
add
push
mov
push
out
jae
jp
inc
lods
mov
xchg
adcb
push
push
pop
xor
lds
cmp
in
mov
pop
cltd
add
fnstenv
push
loope
bound
xchg
fisttpl
in
lret
sub
movl
pop
dec
cwtl
rcll
aas
outsl
rcr
imul
ja
sub
jo
xor
cmc
pushw
adc
stos
mov
jo
movsl
or
mov
pop
mov
ds
mov
push
outsb
jnp
mov
pop
mov
shlb
mov
nop
and
data16
stos
mov
and
xor
cli
mov
insb
jle
push
sbb
pop
les
mov
loope
andl
fwait
sarb
andb
xchg
sub
dec
stc
js
pop
jmp
adc
xchg
sahf
jae
and
xchg
mov
sub
ss
leave
xchg
int
sahf
and
ja
ljmp
mov
sub
pop
inc
mov
mov
and
insb
and
imul
cs
pop
int3
dec
sbb
out
mov
lcall
inc
mov
push
sbb
mov
movsb
test
mov
mov
push
jmp
pop
in
and
mov
lcall
clc
add
loopne
mov
and
aad
out
push
mov
andb
cltd
jns
sbb
jne
push
movsl
ds
dec
push
or
or
fucomp
jbe
or
sub
dec
in
outsb
dec
xchg
mov
rolb
jmp
adc
push
mov
mov
mov
cmpsb
mov
sti
and
pop
imul
addb
pop
xchg
push
sub
xchg
xchg
cmp
sbb
jo
cltd
idivl
shr
test
inc
add
mov
js
std
ss
sbb
daa
std
add
cmp
cmc
add
adc
dec
mov
fdivs
cmp
int3
in
ret
push
inc
xchg
sub
push
mov
jae
lcall
xchg
jb
jns
and
mov
pop
mov
mov
jge
movsb
and
out
mov
insb
enter
cmp
mov
jbe
mov
pop
out
ret
inc
mov
sbbl
mov
pop
jecxz
mov
jle
push
jns
inc
sub
insb
mov
mov
ja
mov
mov
stc
mov
je
pop
xor
out
lret
jae
ret
loop
lcall
lea
inc
adc
push
sahf
inc
repnz
dec
or
les
lcall
cmp
or
jmp
out
ret
push
dec
add
add
fstps
loopne
push
or
cltd
push
int3
and
es
pop
sbb
adc
outsl
xor
out
mov
jo
mov
push
jmp
or
popa
mov
pop
and
push
je
xor
push
aad
mov
sub
inc
sti
dec
das
jae
insb
add
cmp
test
mov
and
jo
test
push
pop
popa
push
lea
jne
push
int
clc
cmc
idivl
cmp
mov
and
mov
pushf
cltd
mov
xchg
sub
add
imul
sarb
cltd
test
popf
push
mov
jbe
fcmovbe
mov
pop
sbb
dec
outsb
push
jo
aad
jp
pop
jle
dec
scas
sbb
icebp
adc
mov
jbe
push
mov
push
dec
jno
icebp
pop
jmp
shlb
add
lds
faddp
xchg
pop
sahf
jo
je
sarl
sbb
inc
sub
fcmovne
fwait
mov
lcall
or
clc
xor
cmpl
scas
push
test
ja
pop
gs
test
and
in
cli
aaa
pushf
bound
xchg
jns
cltd
mov
jns
iret
xchg
xor
lahf
outsb
bnd
jns
mov
xchg
call
and
mov
xchg
push
test
mov
mov
scas
mov
jge
cmc
insl
sahf
test
ret
xchg
push
ret
xchg
sbb
lods
xlat
lret
outsl
arpl
xchg
adc
cmpl
push
adc
arpl
cwtl
and
fwait
sub
fidivrs
outsb
mov
aam
in
push
sbb
cli
jns
popa
movsb
cs
fisttpll
jbe
aad
xchg
pop
in
or
and
mov
sarb
xchg
je
lcall
cmp
jae
add
insb
xchg
push
ja
bound
fwait
lcall
in
pop
adc
jb
push
popa
outsl
jnp
imulb
inc
in
mov
mov
repz
dec
xchg
mov
das
bound
jge
jne
xor
outsb
repnz
push
test
fsubrs
push
mov
fs
xchg
pop
jle
cmp
ror
mov
imul
mov
adc
pop
cmp
ret
mov
push
lods
and
and
call
cld
out
xchg
sub
xor
icebp
pop
fisttpll
mov
sbb
lea
out
stc
cmpsb
and
nop
inc
push
cmpsl
out
or
stos
mov
rol
daa
jb
jecxz
ja
dec
lcall
jl
or
sub
mov
fisubrs
mov
or
cmpsl
cmpsl
orl
fisubl
sub
movups
push
jecxz
daa
sbb
sarb
inc
mov
shll
cmpsb
push
rorl
xchg
lret
or
mov
scas
push
add
xchg
inc
push
into
roll
adc
inc
fildl
lahf
inc
and
leave
xor
jb
push
aam
aaa
lods
adc
in
push
dec
jle
nop
daa
rcrl
mov
cmc
cmc
add
ret
in
xor
jge
fisubs
sub
pusha
xor
sahf
mov
fs
mov
movsb
cltd
push
sbb
xor
pop
xor
ret
insl
cli
pop
and
adc
testl
jns
cltd
les
sahf
daa
fistps
jns
mov
fdivs
push
test
sbb
jb
filds
out
fdivl
sbb
repnz
mov
frstor
mov
test
pushf
or
sub
loop
cmp
mov
dec
fisubs
inc
cltd
lods
and
xor
add
clc
sbb
add
pop
jb
mov
jns
sbb
lock
movsb
ja
mov
es
xor
jnp
js
mov
faddl
push
mov
dec
xchg
popa
popf
add
sbb
mov
es
or
daa
xchg
cli
or
pop
mov
mov
ret
mov
pop
mov
repnz
das
pop
ret
push
shl
mov
mov
push
dec
mov
or
push
bnd
outsb
orb
cmp
push
mov
movsb
inc
cmp
add
les
fmuls
inc
loope
clc
js
in
jmp
lds
push
sub
pusha
push
jnp
shrl
mov
inc
cltd
mov
outsl
scas
cwtl
mov
test
inc
cmp
inc
dec
adc
xchg
or
dec
cli
mov
xor
cld
mov
mov
sub
and
pop
jo
jle
push
std
add
sbb
push
xorl
sub
jo
cmpsl
mov
sbb
inc
sahf
movb
mov
mov
lahf
int
bound
mov
mov
dec
out
jp
daa
add
jl
add
test
mov
mov
push
dec
das
dec
pusha
outsb
cmpsl
ret
lcall
xchg
shl
ss
js
call
lcall
repnz
popf
xor
xchg
je
out
int3
jecxz
xor
inc
mov
ds
xor
shll
xor
insl
cmp
jno
mov
dec
pusha
mov
xchg
sub
cltd
inc
sub
aaa
mov
push
sbb
xor
dec
cwtl
std
out
mulb
stos
aas
mov
hlt
inc
fists
arpl
adc
pop
mov
stc
push
sub
ret
and
daa
jp
or
add
pop
sbb
imul
fs
lods
mov
stc
aaa
sbb
push
sub
out
fnstcw
cli
jl
push
cs
das
mov
jmp
cmp
xchg
jge
clc
inc
push
out
adc
decb
or
sub
push
ljmp
jns
xchg
test
nop
cwtl
sbb
jnp
ljmp
xor
loop
test
ss
adc
pop
mov
push
repnz
sub
inc
pushf
aas
xchg
test
ret
xchg
mov
in
pop
cmp
sub
imul
enter
inc
loop
stos
gs
sbb
or
inc
daa
mov
cmpb
fisubrs
adcl
push
xor
pop
daa
push
mov
and
and
mov
dec
xchg
push
or
xlat
aad
aaa
sub
xchg
mov
imul
jp
lds
lcall
sbb
mov
loop
sbb
jge
and
nop
fldt
sahf
mov
sbb
mov
jp
dec
and
sbb
cmpb
lcall
call
shll
outsb
push
mov
push
data16
xor
push
cmpsl
inc
xchg
jb
xchg
inc
cmc
pop
sub
or
push
test
push
lcall
lods
xchg
mov
inc
sbb
outsl
enter
push
divl
inc
jge
shrb
enter
lods
loop
ss
cmpsl
jae
mov
xor
mov
shll
movsb
repnz
lock
outsl
cmp
das
les
inc
pushf
aas
or
lock
sub
sub
shll
outsl
sbb
into
lea
pop
mov
or
jns
sub
mov
out
ljmp
sub
cmp
push
loop
addl
popa
mov
insl
jb
mov
push
xchg
cld
dec
daa
mov
xlat
or
repnz
mov
pop
adc
inc
loop
clc
div
jl
hlt
cmp
and
test
pusha
fsubrs
xor
int
pop
jns
mov
into
testl
cld
cmpl
or
and
xor
into
stc
push
jg
stc
imul
or
xor
sbb
sub
cli
insb
xor
lret
cmc
mov
add
dec
sub
test
pop
pop
add
pop
push
xchg
mov
xorl
aam
in
aaa
add
jg
pop
mov
push
iret
jbe
push
lods
pop
xchg
aaa
js
lock
insb
pusha
inc
stos
sub
add
outsb
inc
scas
push
xchg
jmp
xor
cmpsl
or
adc
jns
sarl
lock
pop
fwait
insl
std
push
cli
subl
sub
movsb
out
jl
lods
movhps
lods
jne
ret
xchg
push
imul
mov
jge
jns
xchg
into
add
jle
add
mov
ja
hlt
push
push
and
add
xor
jmp
jae
cmp
pop
xchg
and
outsb
push
sbb
or
andl
mov
adc
mov
imul
mov
stc
popf
test
mov
push
xchg
flds
outsl
out
jb
mov
mov
movsb
mov
pop
sti
testb
repz
fstpt
mov
add
jne
decb
nop
push
and
cli
sub
test
dec
push
pop
icebp
push
push
or
xchg
inc
je
sbb
mov
hlt
or
incl
pop
rolb
xchg
pop
xchg
jbe
and
xor
mov
test
movsb
ja
insl
mov
mov
les
mov
adc
test
ret
xlat
mov
mov
popf
ficoms
xchg
mov
mov
or
pushf
mov
js
inc
or
jne
mov
leave
jns
ss
cmp
rcll
xchg
mov
loope
xor
daa
iret
pushf
jle
adc
pop
je
imull
add
cmpsb
xchg
push
insl
call
mov
roll
push
idivl
mov
scas
push
lret
icebp
xor
mov
fimull
sysenter
xchg
jmp
out
mov
ret
mov
rcrl
pop
cmpsl
mov
sub
ljmp
pop
xor
ljmp
mov
ds
ret
gs
ffreep
mov
out
fs
loop
push
sbb
jmp
in
and
out
mov
scas
ljmp
push
jns
push
mov
shll
adc
adc
popa
add
pop
fdivr
cli
jmp
push
push
stos
mov
fidivrs
xlat
testb
jns
mov
cmpsl
imul
xchg
dec
mov
jbe
cmp
mov
repz
mov
out
mov
mov
jb
cmp
fbld
jge
iret
lods
pop
mov
add
stc
test
and
sub
mov
sub
rolb
mov
sub
add
or
xchg
insb
insl
arpl
cmp
pushf
shlb
mov
lcall
call
push
mov
jno
add
cli
pop
add
adc
lcall
lock
loop
rorl
nop
lahf
je,pn
icebp
stos
in
lods
int3
daa
lret
sbb
sbb
mov
rcrb
and
xchg
push
aad
cmp
fstpt
fwait
pusha
pop
mov
mov
inc
imul
leave
push
bound
fsubrl
in
call
inc
dec
mov
lods
sub
cltd
and
lret
mov
in
push
hlt
add
xlat
xchg
sub
ja
jae
cwtl
jle
sub
mov
flds
jg
cwtl
outsl
dec
xchg
mov
scas
mov
or
mov
xor
popa
mov
repnz
imul
lcall
jge
sbbl
divl
sub
and
out
xor
repnz
mov
inc
pop
cmc
dec
cmp
jb
xor
pop
mov
insl
scas
out
gs
xchg
mov
or
add
add
fcmovbe
sbb
popa
loopne
ds
mov
jl
dec
cli
inc
or
imul
addb
xchg
test
aas
jp
jb
mov
es
fidivrs
lods
jbe
aaa
ljmp
add
daa
pop
and
in
sub
pop
xor
mov
cmp
mov
and
pop
xchg
push
pop
push
sahf
mov
jns
xchg
jmp
push
jbe
stos
daa
cmp
movsl
pop
xor
pop
outsb
and
push
jmp
lea
jns
test
pusha
adc
ja
cltd
cmpsb
hlt
push
push
lods
outsb
sub
xor
insb
in
dec
adc
jb
arpl
adc
inc
cs
cmp
addr16
ds
xor
stc
mov
xor
cmpsl
js
repnz
mov
les
test
lea
mov
lock
mov
mov
fnstsw
dec
inc
ficompl
sti
xchg
pop
add
lea
ret
or
shrb
add
stos
bnd
xchg
ljmp
in
adc
jns
or
out
bound
cltd
fisubl
push
stos
add
xor
scas
cltd
test
mov
js
cmp
adc
cmp
mov
sbb
cs
imul
enter
pop
inc
mov
mov
loope
pop
adc
and
imul
shr
fidivl
lcall
outsl
pop
xor
insl
sub
jae
mov
sub
lcall
outsb
xor
sbb
add
pop
jge
jle
mov
cs
sti
xor
fnstsw
and
cmpsb
add
cmp
mov
cltd
xchg
or
lock
aas
insl
imul
cltd
jae
mov
sahf
cmp
outsb
mov
adc
movsb
popa
inc
and
repnz
push
sti
ds
nop
es
sub
xchg
insb
cmpsb
cmc
imul
mov
xchg
add
mov
aas
add
ja
sub
cmp
das
sbb
mov
scas
std
push
shll
int
rdtsc
jns
lods
pop
sbb
std
mov
push
imull
push
pop
cli
negl
shrb
scas
call
aaa
xchg
pop
pop
push
scas
fsts
and
in
aam
fiadds
xor
pusha
jb
lods
push
enter
xor
push
adc
xor
int
stos
negb
js
int
lock
mov
sahf
inc
mov
xor
mov
add
clc
jl
mov
lock
xchg
pop
dec
stos
sbb
les
and
cli
and
in
je
mov
std
mov
test
mov
jg
mov
mov
xor
dec
xor
mov
negl
xor
mov
mov
mov
push
in
push
mov
mov
mov
dec
rcrb
sub
fwait
ljmp
adc
mov
outsb
lods
xchg
jnp
aaa
xchg
jp
lcall
jb
pop
mov
xor
push
jg
hlt
lea
dec
stos
loop
and
adc
cmpl
test
imull
xchg
sub
les
jae
push
inc
in
xor
mov
scas
js
sub
push
and
aad
repnz
xor
cltd
push
push
subl
add
imul
mov
and
xlat
scas
or
jbe
sub
test
cmp
xchg
inc
mov
pop
lret
ret
sub
push
push
shll
pop
cld
stos
lods
or
sti
jb
mov
xchg
mov
or
lods
es
xor
int
sbb
mov
popa
xor
shrl
jnp
inc
lcall
int
outsl
lds
push
stos
dec
mov
cmpsl
test
dec
icebp
ret
data16
leave
mov
mov
jg
in
aad
dec
pop
inc
jp
xchg
dec
stos
xchg
fildll
sbb
inc
stos
mov
xchg
ret
cmp
dec
std
mov
sbb
outsl
inc
add
je
lea
test
ja
jle
and
xchg
mov
insb
sub
add
ja
stos
push
push
sub
and
cmp
imul
loopne
sub
lea
es
push
inc
adc
daa
mov
sti
push
rolb
jns
jecxz
mov
push
int3
aas
jge
les
jp
push
in
cmp
fadd
cmpsb
das
pusha
xor
icebp
sub
jle,pt
das
mov
in
into
std
ds
int3
inc
js
pop
cltd
test
shlb
or
mov
and
pusha
add
mov
xchg
inc
or
mov
fmull
sub
repnz
xchg
jo
jae
sbb
insb
ja
mov
repnz
pop
loop
rorb
bound
xor
jo
insb
xchg
xor
and
jle
add
rolb
dec
ret
outsl
lcall
dec
mov
dec
jo
enter
mov
fdivr
pop
outsb
es
mov
ficomps
sub
jecxz
jle
fisubrs
fcom
push
cmc
bound
bound
lcall
or
ja
push
mov
cmp
mov
mov
nop
sub
stc
ljmp
sti
dec
mov
test
jb
clc
and
fnsave
or
mov
sar
inc
cmpsb
lcall
and
scas
cmp
cmc
add
enter
enter
inc
inc
scas
adc
call
stos
mov
add
lock
test
in
push
outsb
inc
mov
jp
or
mov
cwtl
xchg
in
andb
rclb
loope
sbbl
lcall
push
xchg
or
stc
inc
push
mov
cld
adc
inc
clc
scas
mov
jl
or
push
xchg
jo
xchg
mov
jg
in
lret
jl
dec
mov
sub
movsl
push
xchg
cli
mov
cmp
sbbl
outsl
loopne
or
jnp
out
sbb
and
adc
cmp
jmp
push
mov
sub
rcll
mull
mov
fistl
jmp
jbe
lock
test
xor
into
push
rolb
mov
ret
sub
mov
dec
pop
lock
dec
add
int3
movsl
pop
outsl
jl
cli
pusha
cmp
rcrl
daa
mov
arpl
inc
idivl
dec
out
imul
push
add
cmp
jl
imul
and
push
movsb
adc
jg
mov
pop
adc
js
arpl
or
rcl
sub
jmp
in
fsubp
and
sub
shrb
xchg
out
jp
push
dec
repnz
std
sarl
rcrb
iret
add
cltd
imul
icebp
scas
dec
mov
insl
dec
jnp
adc
mov
pop
jae
sub
inc
movsl
add
jp
insl
lcall
pop
cltd
xchg
push
nop
mov
dec
outsl
sub
fimuls
push
mov
outsb
and
das
push
fmul
inc
sbb
jne
sub
cmp
xchg
sarb
fidivl
orl
test
mov
push
adc
insb
sbb
dec
jl
movsl
xor
rol
lret
lods
inc
aad
adc
add
out
call
jns
or
xor
lock
xor
inc
lds
out
jecxz,pn
stc
and
pop
or
ret
imul
dec
cmp
fcompl
and
mov
jle
pop
jbe
stc
mov
sub
push
ds
cmpl
dec
mov
and
stc
lds
mov
cwtl
mov
ljmp
jb
pop
dec
xchg
sub
inc
scas
xchg
sar
or
dec
xor
stc
sahf
mov
and
xor
daa
inc
in
lds
mov
cmpsb
rorl
and
jmp
mov
sbb
inc
mov
daa
popf
int
insl
clc
insl
shlb
ja
xchg
lods
orb
pop
movsb
ja
stos
shlb
mov
xor
enter
mov
rol
mov
test
jo
adc
outsl
icebp
inc
mov
out
xchg
dec
mov
cmp
xchg
lcall
inc
jle
xor
inc
jns
mov
mov
mov
jns
les
scas
addr16
jl
add
mov
aaa
mov
adc
push
xchg
pushf
pop
add
push
jp
jns
cltd
test
test
sbb
inc
fistpl
add
outsb
in
in
jl
cmp
out
lods
mov
lcall
mov
push
leave
mov
test
orb
int3
mov
iret
decb
scas
xchg
sti
ret
rolb
int3
hlt
lock
cmp
push
adc
xor
xchg
cmp
pop
push
xchg
xchg
mov
fdivrl
and
jae
dec
out
mov
lret
js
jmp
dec
mov
mov
faddl
jg
mov
stos
add
xor
pop
jns
dec
and
sbb
lds
push
bound
mov
loop
ficomps
test
mov
aaa
and
pop
lret
jo
mov
push
bnd
lea
and
and
out
fiadds
mov
pop
push
ret
cmp
and
mov
shrb
xor
rcrl
inc
jae
cli
arpl
stc
add
pop
jl
mov
shrl
jnp
stos
mov
jg
ja
lods
out
lock
xchg
popf
in
push
sbb
test
daa
mov
xchg
push
negb
cli
insb
es
out
sub
mov
or
xorl
ret
addr16
push
pop
in
ficoml
inc
icebp
fidivs
insl
outsl
or
int
sarb
loopne
ja
movsb
cs
sbb
add
scas
cmp
sar
sahf
and
pop
dec
mov
nop
jno
in
push
xchg
ds
gs
push
sahf
pop
xor
jo
mov
push
lock
les
push
xchg
pop
sbbb
mov
lahf
std
jmp
loop
test
cmpsb
je
mov
notl
lods
cli
mov
adc
lret
push
ds
adc
and
push
mov
in
jne
bound
inc
sub
pop
add
cld
repz
sub
incb
push
push
or
push
outsl
and
pop
sub
pop
iret
testl
cltd
pop
xchg
add
mov
scas
xchg
xor
xor
stc
rol
xor
push
ret
push
fisubrl
sbb
movsl
jle
and
lock
frstor
int3
aam
stos
xorl
repz
jge
xor
push
out
negl
mov
orl
ja
cltd
mov
adc
xor
test
fwait
and
pushf
sub
sbb
lock
jo
add
insb
sub
fs
push
sub
and
lea
leave
pop
js
push
repz
ljmp
ret
xchg
rol
imulb
jge
adc
int
repz
jp
enter
rcrl
jno
lea
cmpl
pop
imul
popa
and
cmp
push
inc
and
pop
outsl
jb
jecxz
repnz
popa
push
mov
fisubl
bound
pop
jb
adcl
jp
mov
loopne
jbe
add
pushf
repz
shll
pop
push
lock
sbb
jb
test
jb
jo
jne
loope
fmulp
mov
out
in
fsub
out
dec
sarb
sub
icebp
sub
xchg
fdivp
adc
pop
cs
out
addr16
jp
fimull
adc
ret
sub
mov
sbbl
out
out
dec
jne
andb
xchg
cli
inc
sub
dec
mov
sbb
fcmove
xchg
push
fimuls
pop
es
fdivrp
dec
sahf
pop
es
sbb
test
inc
adc
xchg
cmp
cs
dec
insl
and
push
sub
into
cmp
into
imul
mov
cmp
repnz
adc
xchg
fcomps
fsts
cmp
shrl
push
nop
loopne
jb
mov
xchg
bound
cli
bound
and
lea
scas
arpl
bound
clc
inc
pop
mov
mov
and
sub
mov
andl
cmp
mov
loop
mov
and
filds
mov
neg
bound
cmp
mov
mulb
jp
mov
shl
cmpsb
pop
mov
cmp
bound
pop
mov
mov
inc
cmp
pop
divb
xor
and
push
scas
xchg
mov
and
jbe
xchg
ss
inc
loopne
push
push
inc
dec
lock
data16
cmp
repnz
add
inc
inc
mov
push
and
pushf
icebp
loop
xor
outsb
out
loopne
insb
mov
addb
xor
scas
add
movsl
sub
sbb
mov
enter
lds
pop
cltd
push
push
sar
push
dec
adc
js
sub
popf
imul
shrb
jnp
je
dec
mov
cmp
cmp
pushf
dec
popa
cwtl
cmp
mov
orl
cmp
mov
lea
icebp
push
mov
js
bound
add
xchg
and
mov
scas
sub
mov
rcr
dec
loope
test
xor
jnp
imul
push
mov
mov
push
pushf
cmp
out
pop
inc
jecxz
ficompl
adc
push
mov
add
cltd
sub
lods
dec
xchg
mov
mov
xchg
frstor
sub
xor
test
lcall
xchg
shlb
scas
je
daa
lcall
cmp
sti
scas
xor
outsb
sub
iret
mov
fidivrs
mov
push
dec
jp
add
and
int3
jp
xchg
jns
mov
insb
lcall
int3
pop
cltd
mov
jle
int
lock
inc
xchg
add
into
jbe
xor
mov
add
scas
xor
inc
mov
lea
mov
inc
jle
ret
jae
mov
mov
cltd
movsb
in
mov
imul
xchg
roll
sub
sbb
sub
xor
cmp
push
daa
roll
cltd
dec
fisttpl
fldl
cmc
cwtl
std
scas
xchg
cltd
push
sbb
nop
in
scas
adc
jg
mov
sbb
or
mov
jp
push
xor
cli
and
loop
mov
jae
mov
leave
mov
adcl
sbb
xor
jo
mov
pop
cmpsb
fisubl
fnstsw
cwtl
in
aad
imul
xlat
les
sub
xchg
psubw
mov
clc
insb
cmc
cmpb
nop
lds
lcall
lcall
stos
lcall
cmc
mov
xchg
cltd
lods
sbb
cs
xchg
or
push
jb
stc
fstpl
add
jg
cwtl
lea
in
shrl
arpl
jbe
es
fnstsw
inc
add
aaa
lds
xor
insb
push
fidivl
xor
jo
jne
std
mov
xchg
jb
jb
sub
mov
push
jbe
cmpb
mov
rcll
leave
insl
add
movsl
cmp
sub
or
or
out
xlat
mov
lret
mov
mov
fs
dec
ret
sbb
fistpll
aaa
lcall
sub
push
mov
push
lcall
ret
sbb
dec
cmp
sub
cltd
pop
push
bound
aas
sbb
fnstsw
mov
cltd
insb
nop
lock
jne
sub
mov
rclb
mov
inc
sarl
dec
mov
adc
cltd
dec
add
xchg
lahf
inc
es
test
xor
in
mov
mov
mov
ret
pop
xor
mov
pop
ds
xor
roll
sbb
inc
xchg
shll
xchg
test
jle
and
jle
xchg
cmc
icebp
cltd
data16
mov
jo
push
movsl
or
jg
pop
jae,pt
es
push
xor
mov
jge
xchg
and
cwtd
dec
arpl
xorl
xchg
xchg
mov
shll
jmp
lea
mov
mov
pop
pop
idivb
call
jo
daa
cli
shr
adc
ljmp
lret
pushf
cs
adc
xlat
xor
daa
nop
mov
fstp
xchg
jmp
sbb
and
jmp
push
jo
dec
xchg
and
pop
ja
pushf
and
stos
jno
cmp
jo
loop
adc
and
jns
cltd
repnz
sub
loop
jge
jg
and
cmpb
fucomip
cmpsl
xchg
fidivs
in
add
inc
fldl2t
sbb
xchg
shrb
xchg
rol
inc
inc
dec
mov
mov
jp
loop
and
jge
cwtl
je
icebp
in
sub
daa
negl
ja
sbb
ja
jecxz
iret
pop
jns
fs
pop
sub
stos
cmp
or
sbb
adc
cltd
lods
lcall
sub
or
xchg
call
push
jl
or
outsl
cltd
jmp
jmp
mov
add
add
jno
pop
bound
leave
movsb
out
xchg
test
and
lea
imul
xor
iret
popa
inc
sarb
imul
and
fbld
loope
fldl
lret
cmp
or
sti
jnp
and
mov
jbe
sbb
cmp
xor
sub
test
aad
cmp
and
sbb
xlat
mov
dec
mov
push
sbb
daa
push
mov
scas
pop
dec
shrb
movsb
ja
sub
mov
lea
ffreep
add
and
scas
lahf
rolb
sbb
adc
add
inc
cmp
lret
add
insb
sbb
ljmp
adc
lret
fiaddl
scas
mov
repnz
xchg
scas
gs
dec
cwtl
popf
xchg
dec
lcall
das
mov
test
in
stc
mov
jb
cwtl
pop
loop
jae
pop
push
cld
adc
sbbb
jle
sub
push
lcall
jnp
popf
into
xchg
stc
std
es
lret
mov
test
sub
cltd
add
mov
pop
jle
sub
sti
int
fldl
sub
test
mov
pushf
mov
insb
mov
adc
inc
sahf
mov
das
jp
shrl
leave
sbb
push
mov
imul
pop
aad
bound
inc
cmp
mov
mov
in
jle
pop
cs
lret
std
pop
inc
add
xchg
scas
mov
dec
sub
and
mov
test
dec
rolb
or
test
xchg
in
out
or
cltd
test
push
je
mov
cmp
leave
daa
outsl
cmp
aas
insl
inc
mov
lcall
std
mov
sub
mov
nop
das
inc
repz
sub
mov
xchg
inc
ss
ret
jmp
xor
dec
push
fwait
sbb
and
push
faddl
lcall
rcrb
xchg
pop
pushf
dec
mov
stc
fistl
outsl
jbe
xlat
sbb
lret
inc
adc
out
mov
sub
and
int
dec
sub
out
and
test
add
cmp
mov
loope
cltd
mov
inc
je
mov
xorl
push
mov
out
mov
and
inc
pop
lcall
mov
ds
mov
cltd
nop
imul
cmp
andl
cmpb
and
mov
cmp
xor
xor
mov
nop
adc
pop
pop
sub
in
scas
test
xor
stos
jns
xchg
testb
lods
dec
fldl
inc
xor
xlat
adc
sbb
cmp
movsb
jp
jb
push
lock
adc
std
outsb
mov
jnp
lods
add
stos
cltd
or
cmp
ljmp
addl
subb
lcall
pop
mov
sub
lcall
mov
sbbl
cltd
aam
lret
add
mov
je
cli
mov
dec
push
inc
inc
add
cmp
xor
lret
inc
inc
test
pop
jl
push
cmpb
xor
mov
inc
divl
jl
lock
loope
inc
dec
cmp
scas
sbb
push
stos
aad
repz
aad
jb
inc
xor
loope
cli
jnp
leave
test
sbb
xchg
out
stc
xacquire
sbb
mov
fisubs
jge
mov
jb
pop
repz
mov
push
mov
push
and
and
mov
lock
lret
jle
cli
lds
pop
cli
call
scas
iret
cld
jo
xor
nop
mov
jno
repz
pushf
add
loop
lret
fwait
dec
aas
and
shl
fwait
out
and
mov
pop
mov
mov
cmp
mov
push
test
jle
aam
jo
mov
aad
jne
push
adc
lahf
outsl
mov
lds
mov
in
mov
jp
cltd
insb
xchg
jae
imul
scas
cld
jns
scas
xor
and
nop
test
sti
stc
and
aam
or
lahf
imul
mov
dec
cltd
xchg
dec
outsl
ficomps
int3
push
mov
jae
stos
loop
or
daa
xchg
mov
xor
stc
bound
or
mov
jne
int3
mov
in
mov
mov
jg
outsl
push
jno
outsl
inc
xor
adc
lea
and
scas
lcall
setp
mov
out
jno
add
mov
mov
pop
lds
xchg
notb
rcll
adc
scas
add
jo
lds
repnz
sub
ficompl
mov
xchg
push
das
inc
lods
sub
xor
pop
in
sbb
sub
cs
xor
notl
pushf
lcall
out
pop
orb
xchg
repnz
cmpsb
xchg
mov
dec
je
ja
insl
aam
and
lods
sbb
gs
bound
add
cmp
and
push
mov
or
push
cmp
cwtl
scas
bound
mov
jmp
push
inc
cltd
out
outsb
pushf
ljmp
xor
cltd
ljmp
lods
loopne
push
and
add
sub
pop
clc
or
imul
and
cmpsl
sub
movsb
pop
mov
dec
mov
stc
test
out
xor
inc
pop
mov
mov
sub
or
lods
and
pushf
dec
leave
mov
jl
cmp
mov
mov
jb
mov
xchg
icebp
rcl
int
mov
mov
ja
ret
test
pushf
pop
jo
sub
mov
in
mov
mov
icebp
jmp
idivl
sub
or
adc
pusha
frstor
jecxz
mov
ss
mov
call
sub
push
sbb
cmp
pop
pop
in
cwtl
movsl
sbb
push
lsl
cmpsl
sub
les
lret
adc
out
pop
mov
add
mov
xchg
imul
jecxz
test
jnp
popf
stc
bound
xor
xchg
test
sbb
orps
xor
push
jbe
jp
push
push
ret
push
pop
out
sbb
repnz
push
mov
fldt
jmp
mov
out
ficoms
sub
fadds
movsl
pushf
and
xchg
loope
jns
inc
iret
sti
lea
push
or
and
push
and
lret
les
movsl
mov
ret
cmp
add
add
mov
inc
rcll
push
push
and
sbb
in
pop
adc
imul
subb
xor
nop
pop
bound
mov
ret
adc
ficoml
xchg
insl
inc
rolb
addb
xchg
jbe
out
out
cmp
ss
mov
js
and
inc
mov
push
jnp
fwait
jb
xchg
add
sbb
stos
fpatan
jge
mov
sbb
pop
mov
lock
push
mov
jnp
mov
lea
icebp
jecxz
pop
cld
sub
out
test
cmp
fucom
jp
dec
inc
dec
rclb
cmp
bound
pop
call
in
stc
jmp
sbb
inc
sbb
scas
pop
mov
add
jnp
pusha
add
xchg
push
pop
push
pop
xchg
sti
lods
xchg
dec
push
out
mov
mov
and
push
cltd
pop
mov
ficoml
mov
push
jae
scas
jo
pop
fs
cmpsl
addb
jns
out
sbb
or
mov
push
jg
jle
cmpb
and
mov
daa
mov
mov
rorl
xchg
call
inc
addb
lret
fists
pop
test
arpl
cwtl
insl
and
sub
jecxz
lret
cmpl
and
xorl
cmp
mov
pop
out
dec
shlb
push
sub
sbb
and
jns
mov
fildl
nop
jge
mov
fdivs
xchg
iret
jo
mov
jmp
repnz
inc
imul
or
add
jmp
dec
test
aas
insb
les
dec
inc
ficoml
cwtl
cmpsb
xchg
push
xor
mov
lret
add
test
loope
lcall
pop
sbbl
push
test
ss
lahf
shll
dec
out
xor
stc
xor
jae
ret
addr16
lcall
loopne
test
and
inc
push
cwtl
test
out
sub
pusha
add
mov
lea
mov
sbb
cmp
mov
out
lods
lock
cltd
jmp
sub
sub
adc
jno
loop
sbb
jo
push
aaa
into
cmp
imul
aad
arpl
scas
push
test
ret
mov
pop
and
clc
pop
inc
arpl
mov
xorb
popa
mov
add
out
in
lcall
pop
jmp
mov
jle
cmpsb
jae
adc
jle
sub
add
pushf
mov
or
aad
enter
out
inc
pusha
sti
lcall
xchg
std
or
mov
mov
cmp
push
mov
cli
sbb
aaa
sub
lret
jb
add
and
movsb
xchg
xchg
sub
sbb
xchg
sub
ror
dec
cmp
ret
out
repz
shll
mov
sahf
mov
adc
jl
push
mov
add
lcall
rcl
pusha
mov
mov
pushf
jecxz
std
ret
xor
jmp
adc
test
pop
outsl
and
fildll
xor
and
test
loopne
and
cmp
lds
sahf
andb
out
stos
push
pushf
loop
leave
test
xchg
in
sbbl
movsb
xchg
imul
mov
imul
dec
mov
fs
add
orb
xor
lods
pop
push
mov
cmp
fwait
sub
test
push
xor
in
enter
cltd
mov
sbb
in
adc
or
enter
inc
outsl
cltd
sahf
shl
ja
lcall
fwait
sbbl
push
mov
cmp
mov
mov
xlat
inc
and
pop
data16
xchg
jle
push
mov
adc
test
arpl
jae
mov
out
ret
push
add
adc
mov
sahf
add
ljmp
repz
es
ss
data16
mov
push
mov
mov
push
cmpsb
and
sbb
jbe
dec
and
mov
xchg
adc
jecxz
lcall
dec
mov
mov
test
sbbb
lahf
inc
pop
enter
adc
mov
hlt
pop
cmp
lcall
xor
or
mov
bound
scas
movsb
add
vprotq
xor
inc
mov
sub
mov
mov
pop
aas
sarb
push
lods
adc
test
test
in
and
movsl
sub
mov
xchg
dec
cmpsb
add
mov
jns
rcrl
mov
push
rcrl
push
sub
xor
pop
mov
inc
or
xor
int3
roll
inc
test
xchg
jne
jecxz
sbb
adc
ljmp
es
xchg
dec
ljmp
sub
cmp
aaa
pop
and
push
mov
ret
in
popf
outsl
jp
iret
dec
mov
sbb
sub
ror
mov
adc
cmp
mov
jmp
fidivl
jns
aad
sbb
mov
insb
sbb
fwait
ret
mov
inc
enter
and
xchg
adc
jbe
dec
xor
jns
xchg
pop
xchg
aas
leave
xchg
stc
push
mov
test
lret
and
xchg
push
decb
mov
clc
add
and
mov
lods
int
sbb
ficompl
bound
cli
sub
jecxz
loopne
data16
fnstcw
push
sti
ret
sbb
push
xchg
mov
sbb
jmp
jae
enter
jecxz
ret
dec
xchg
lahf
sbb
push
mov
addr16
mov
psubusw
jmp
push
cmp
fwait
pop
stos
pop
lods
into
enter
int
out
sbb
push
clc
xchg
dec
out
aaa
push
mov
and
xorl
lock
xchg
pop
inc
mov
fcomps
rorl
mov
aam
or
pop
pop
popf
jmp
sub
add
mov
cs
sub
push
mov
xchg
xor
test
in
lds
adc
xchg
cmp
and
in
ss
xchg
inc
sub
es
sbb
push
sub
push
insb
jae
jmp
test
xor
in
clc
jp
mov
loope
push
loope,pn
pop
jl
xlat
xchg
pop
adc
les
out
adc
jmp
cmp
sub
add
fdivp
jmp
xor
sbb
push
add
movsb
in
mov
xchg
sub
mov
mov
outsl
adc
insb
lods
mov
push
push
push
adc
inc
cmp
dec
add
sbb
fmul
dec
fwait
xchg
sbb
loopne
ja
push
rorl
pop
cmp
lods
cli
inc
insb
lds
xlat
lock
rcrl
repnz
push
int
push
sub
xlat
outsl
xor
xor
test
and
test
or
lcall
xor
jb
popl
cmpsl
je
jb
sub
pop
ret
xchg
xchg
clc
jno
pop
or
outsl
mov
mov
xchg
push
cmpsb
pop
mov
gs
mov
aad
mov
cmp
push
sub
xor
push
sbb
call
cmp
in
ja
lret
std
add
inc
mov
mov
clc
or
mov
xor
out
push
sub
push
cmp
inc
push
xchg
fcoml
xchg
push
xor
mov
roll
push
lcall
xor
push
sub
and
daa
sub
stos
ret
loope
lcall
clc
mov
and
vmovq
scas
mov
mov
add
sbb
mov
out
add
cs
nop
sahf
bound
dec
dec
xchg
pop
xchg
call
push
mov
lcall
ret
add
test
xor
or
pop
sbb
es
xchg
jbe
adcl
or
fs
shll
inc
dec
jae
sub
push
jge
sbb
ror
xchg
imul
pushl
jns
scas
loopne
loope
cltd
ljmp
fimull
jecxz
roll
xacquire
pop
mov
pushf
push
adc
push
lret
scas
test
jmp
jbe
mov
pop
mov
or
mov
fsubr
add
shll
scas
movsb
fwait
adc
cmp
movsl
mov
pusha
xchg
cmp
aad
ds
sbb
lods
outsb
lret
call
lret
in
inc
or
int3
lea
mov
mov
push
js
xchg
jne
adc
pop
and
fdivrp
cmc
movl
jle
sbb
mov
outsl
rol
push
jecxz
rcll
outsb
and
dec
and
out
stos
pop
add
sub
fisubl
xor
scas
pop
clc
insb
imul
ret
pop
imul
mov
add
daa
test
fwait
jl
cmpsl
mov
mov
inc
push
adc
dec
mov
mov
scas
xchg
dec
pop
outsl
jbe
and
test
arpl
cmpb
mov
pop
mov
lcall
inc
test
sbb
sub
xorb
ljmp
sbbb
outsb
mov
cltd
out
pusha
loop
lods
cmc
icebp
aas
jns
mov
and
mov
ja
lcall
insb
jmp
mov
lcall
xchg
pop
test
add
shlb
jbe
or
lea
arpl
inc
push
cmp
lcall
and
ret
stc
mov
test
lcall
test
jg
or
fldenv
pop
nop
in
cmp
push
mov
mov
pop
ljmp
mov
lcall
dec
mov
insl
lods
sbb
std
out
mov
push
ret
scas
or
pop
push
and
loopne
dec
notl
ss
jns
mov
push
repnz
loopne
inc
mov
inc
push
ret
pushf
adc
push
into
push
push
mov
repnz
jmp
mov
jne
mov
or
xchg
sbb
sbb
xor
jns
jg
sbb
aad
xchg
pop
sub
orl
push
iret
jp
pushf
notb
xchg
ds
in
fsubl
dec
les
push
in
mov
push
andb
cltd
xor
ss
mov
pusha
mov
mov
es
addl
in
mov
dec
xor
rcll
mov
ret
mov
adc
adc
mov
inc
je
repz
adc
pop
cmp
pop
sub
push
sbb
jbe
sarb
scas
shll
jecxz
mov
or
sbb
mov
lahf
and
idivl
inc
xor
sub
insb
inc
ficoml
insb
pusha
xchg
fdivrs
jno
adc
jp
cmp
shll
jb
cltd
rol
ja
call
ljmp
call
jb
adc
mov
mov
lcall
outsl
ret
mov
pushf
stos
outsl
mov
out
dec
movsl
iret
xchg
pop
mov
cli
mov
lock
loopne
lcall
cmpsb
daa
cmp
sub
push
shlb
add
mov
sbb
decb
inc
mov
and
outsl
shll
xchg
sub
in
clc
jl
cmpsb
cmc
divl
dec
sahf
mov
mov
stc
mov
add
pop
cs
mov
cmp
jge
mov
pop
jns
sahf
xchg
jl
cmc
or
cltd
and
test
inc
out
stos
fstpl
mov
or
or
or
pop
inc
pop
fwait
jo
mov
sbb
push
ds
out
enter
cli
mov
jmp
push
add
filds
stc
pop
pop
lcall
dec
divl
mov
int
pshufw
or
imul
mov
and
push
mov
xchg
popa
movsb
mov
adc
enter
adc
insb
sub
stc
inc
inc
daa
mov
mov
pushf
iret
lcall
orb
loope
xchg
mov
stc
xor
stc
mov
cli
sub
pop
insb
mov
aam
pushf
jge
pop
in
mov
sahf
loope
repnz
testb
xchg
xor
sub
xchg
sub
sub
mov
inc
out
sbb
inc
or
iret
sub
test
or
hlt
ja
cwtl
mov
sub
ds
sub
out
dec
cs
std
test
stc
mov
mov
push
stos
add
sbb
aad
jo
shll
mov
cli
scas
pusha
mov
xor
out
push
cmp
adc
push
xor
mov
inc
push
movsb
orl
test
lahf
or
push
or
into
sbb
push
mov
xor
jmp
lods
movsl
pop
push
out
jo
push
sub
jo
jno
push
insl
imul
stos
test
pushf
cmp
xchg
jbe
mov
and
incb
adc
mov
rclb
sbb
push
jmp
lds
inc
gs
repnz
push
cli
jp
cmpsb
and
cmp
outsl
mov
jle
lcall
roll
mov
out
je
mov
push
mov
dec
mov
insb
mov
lods
cmpsb
cmpsb
mov
fildll
je
push
jecxz
cltd
and
fnstsw
adc
jo
test
test
lret
push
push
stos
lea
push
lods
lds
lahf
jbe
mov
cmc
repnz
cltd
xor
mov
xchg
ja
xchg
insb
pop
jo
pop
push
push
xor
js
imul
mov
lods
lea
and
sbb
dec
sbb
pusha
loop
and
and
jb
pop
cmpb
out
call
subl
imull
cltd
push
in
adc
sbb
push
lret
arpl
pop
roll
add
mov
cltd
addb
pop
insb
divb
les
inc
sub
xchg
into
xchg
fisubs
mov
jg
xor
test
out
dec
xchg
pushf
lahf
das
test
pushf
jbe
stos
test
mov
lcall
xor
dec
jns
outsl
lcall
push
cmpsl
mov
jl
xor
and
lcall
jnp
and
add
out
inc
orb
loopne
out
mov
pop
insb
loope
pop
mov
add
jno
dec
xchg
xor
dec
hlt
xor
inc
call
iret
jecxz
pusha
loopne
int3
push
jns
jae
mov
orb
mov
jo
cltd
xor
jne
sbb
sti
movsl
mov
push
shrl
xchg
pushl
adc
xchg
xchg
lods
cmp
roll
sbbb
mov
and
cmpsl
lcall
mov
nop
jp
jecxz
pop
xchg
ds
call
ja
cmpsb
inc
lods
or
das
lcall
and
lret
pushf
jecxz
pop
pop
cmp
xchg
and
xor
sub
test
ja
dec
mov
mov
mov
mov
mov
jmp
inc
adc
pushf
mov
insb
rclb
out
and
cmpsb
daa
ja
push
adc
stc
xchg
pop
cmp
mov
insl
sbb
jns
test
out
xor
jo
jne
dec
cs
loopne
inc
mov
xchg
xchg
out
add
insb
out
test
xchg
repz
test
cli
inc
int
push
lds
pushf
mov
ljmp
jns
push
ds
ss
lret
out
leave
in
sub
lcallw
fistpll
int
and
sub
cmp
pop
lcall
lcall
mov
scas
mov
je
aam
mov
lods
xor
imul
xor
mov
rcrl
ljmp
lds
jbe
fcomps
inc
jae
pop
mov
sbb
ja
ds
push
mov
jb
or
cmp
xor
js
push
inc
jmp
fiadds
pop
test
xlat
insb
inc
xchg
cld
popf
xor
mov
sub
xchg
lock
xchg
int
dec
mov
and
in
leave
add
fbstp
mov
jge
ds
call
jne
pop
in
fs
out
enter
cltd
fdivs
and
movsl
sbb
and
cs
divl
loop
pop
mov
mov
push
pop
xchg
sbb
sbb
jae
pusha
inc
mov
ljmp
sub
lcall
dec
xor
mov
push
dec
shr
sbbb
movsb
stos
cmp
mov
jb
inc
out
push
inc
int3
outsb
cmpsb
sbb
test
jb
imul
sub
cmc
cmp
adc
mov
xchg
jne
and
sub
xor
cld
jnp
xor
and
aam
sub
lret
mov
lds
push
in
cmp
push
and
xchg
jp
mov
ret
pop
outsb
mov
ja
mov
pop
in
xor
pop
test
xor
and
sahf
jle
hlt
xor
jns
outsl
or
sub
lcall
or
mov
mov
js
addr16
jno
pop
mov
test
push
stos
sbb
test
cmpsl
fiaddl
fimuls
pop
push
pusha
xchg
nop
in
push
sub
push
fs
push
xor
out
pop
pop
aas
sub
cmpb
push
shll
and
lret
dec
cltd
jmp
test
dec
add
sub
cmc
repnz
pop
add
imul
mov
shlb
dec
mov
iret
mov
dec
ja
mov
stos
out
scas
movsl
jecxz
sbb
fnstsw
mov
sub
addr16
inc
test
adcl
push
out
icebp
xchg
aad
cltd
xor
jae
int
aam
dec
stos
loop
add
into
and
lds
push
call
ds
insb
mov
mov
mov
test
ds
daa
xor
cltd
iret
push
jb
minps
sbb
pop
out
shl
adc
add
add
push
lds
push
cmp
imul
lea
jns
cmp
push
mov
adc
sbbl
lcallw
xor
mov
jl
popf
lcall
sbb
xchg
sub
pop
cli
mov
arpl
subl
cwtl
and
sub
xchg
cltd
cmc
in
push
push
outsb
or
fldl
push
in
sbb
and
mov
js
push
pop
clc
xor
mov
dec
mov
cmp
in
cmc
ds
sub
cmp
xor
mov
in
jmp
xchg
nop
scas
xchg
loop
push
rcll
mov
dec
jo
call
out
pop
xchg
popa
lock
pop
hlt
mov
sub
test
movsb
imulb
mov
stos
or
jle
pop
or
jmp
pop
stos
mov
jns
insb
movsl
js
int3
or
dec
stc
xchg
mov
dec
mov
pop
fnstsw
add
sub
lcall
cli
mov
jmp
push
stc
pop
adc
sub
fiaddl
and
and
out
sbbb
adc
cltd
pop
fstpt
cli
data16
pop
stos
pop
daa
mov
cwtl
jbe
adc
nop
pop
jle
add
and
mov
into
dec
in
int
add
add
and
add
inc
mov
aaa
rol
and
pop
lods
mov
or
xchg
jns
sub
gs
jl
mov
adc
sti
sub
push
sbbl
inc
sub
ret
or
cmpb
pop
sbb
adc
xor
cli
andb
lcall
push
cmp
arpl
lods
mov
adc
lret
mov
push
mov
jo
aas
imul
inc
shl
xor
aad
lock
or
call
cmp
orl
mov
sti
push
test
test
sub
mov
jmp
xor
jl
das
loope
inc
and
xor
rorb
ret
in
xor
fisubrs
clc
jp
lret
je
mov
mov
xchg
push
cltd
ret
pop
jmp
ret
sbb
ficoms
mulb
vpmacswd
and
and
js
sub
test
push
fwait
inc
aad
push
mov
test
in
jns
stos
lcall
sub
mov
dec
adc
ficoml
movsb
jnp
xor
adc
orl
inc
pop
xchg
xor
test
push
dec
mov
xor
mov
jae
sbb
pop
ret
test
xchg
and
in
jbe
cs
ljmp
scas
mov
outsl
push
push
js
cltd
cli
add
movsb
xchg
pop
shll
lcall
and
adc
int
insb
mov
and
sti
lahf
add
outsb
out
cmp
ret
js
fs
mov
test
shrl
jnp
loopne
sti
jle
mov
mov
add
mov
jle
jmp
adc
aas
mov
mov
cmp
mov
sbb
push
addb
sahf
jns
aas
and
xorl
jnp
adc
jae
int3
lods
pop
jg
les
into
lcall
jne
lea
xor
js
cltd
mov
pop
mov
add
and
cmp
push
jp
mov
dec
jge
jle
loop
dec
cmp
divb
pop
pop
and
sub
cmp
imul
lcall
cmpsb
sbb
in
xlat
add
jo
test
xchg
ss
sub
stos
out
lcall
ljmp
mov
ljmp
popa
cmpsl
add
mov
xchg
roll
sub
push
int
aad
cmpsl
mov
imul
fisubs
pop
dec
outsb
and
jle
rol
xor
xchg
jbe
lock
push
pop
push
jge
mov
push
dec
lcall
jmp
fcoml
pop
mov
lcall
or
mov
xorl
jp
fstps
mov
push
movsb
jge
or
imul
test
sahf
ljmp
cwtl
xor
out
pop
fistpl
xchg
xorb
cltd
les
mov
adc
lcall
data16
jge
popa
test
fbld
dec
outsb
mov
mov
incb
pop
jle
and
mov
pop
imul
ljmp
add
ss
loop
sbb
mov
aam
xchg
mov
inc
in
and
sbb
adc
lret
jns
push
mov
sbb
aas
lock
loopne
pop
and
push
xchg
dec
mov
mov
dec
lods
repnz
jg
sbb
outsl
dec
in
bound
mov
dec
movsl
sti
pop
les
ret
cltd
mov
mov
mov
ja
pop
jp
xor
ret
mov
movsb
pop
in
gs
xchg
sub
inc
rolb
pusha
push
pop
xor
scas
cmpsl
jbe
jle
inc
scas
lea
ss
int
xor
out
mov
mov
push
xor
movsl
pop
pushf
mov
sub
mov
mov
fistpl
pop
test
jbe
mov
and
push
mov
sbb
inc
jl
xchg
push
inc
pushf
push
ficompl
test
push
mov
xor
jbe
add
add
xchg
int
addl
jge
mov
mov
mov
in
lcall
mov
xor
and
push
test
js
imul
lods
ss
pop
mov
imul
ret
pop
xor
rorb
lcall
jp
dec
test
cmpsl
pop
xchg
int
stos
sbb
dec
cmp
scas
mov
mov
xchg
mov
mov
imul
mov
aad
es
mov
mov
mov
popa
push
cmp
lcall
sub
mov
push
cmp
mov
sbb
jle
sar
cmpl
xor
fwait
pop
outsl
xchg
push
xchg
pop
jmp
sahf
mov
rolb
imul
mov
pop
fidivrs
add
and
adc
in
repz
fmull
sbb
je
jle
and
mov
add
mov
ljmp
xchg
lcall
jl
xchg
mov
sub
loopne
sbb
mov
push
mov
vmovddup
mov
repz
fisubrl
out
in
outsl
out
inc
mov
test
insb
cli
xchg
mov
std
daa
push
mov
mov
mov
pop
cmp
and
mov
jo
mov
mov
sbb
shrl
clc
hlt
sub
loope
in
cs
scas
fcomps
lock
and
clc
jle
imul
mov
jb
in
leave
aad
mov
cli
outsb
sbb
jg
call
sub
sbbb
sub
cmp
aaa
lea
push
sahf
mov
cmp
outsb
cmc
aam
je
rol
lcall
pop
mov
iret
jae
cli
lods
and
cmp
ret
or
outsb
smsw
cmp
sarb
lcall
into
or
ds
fstpt
lock
mov
cltd
cmp
sub
iret
xor
jo
dec
scas
mov
jp
mov
xor
je
mov
lea
push
lcall
pop
rorl
jns
sahf
addr16
addb
mov
rorl
xchg
roll
pop
pop
cmpsb
outsb
sbb
lret
mov
inc
jb
and
push
testl
shl
nop
pop
jb
mov
xor
orb
out
sarl
popf
jb
test
inc
and
inc
into
scas
mov
sbb
pop
push
sbb
add
jns
das
ja
cmpxchg
mov
mov
in
je
jae
lret
negl
push
add
cwtl
xor
addr16
mov
fs
xchg
les
xchg
pop
xchg
and
pushf
add
mov
setae
pusha
mov
fiadds
lods
or
stc
fwait
and
rcrl
in
sti
cwtl
lret
shrl
xchg
cli
ds
sub
add
dec
inc
xchg
jns
adc
sub
add
add
push
arpl
inc
and
push
orl
dec
sahf
fistpll
xchg
cs
test
imul
addr16
pop
das
mov
into
lret
lods
jecxz
and
std
pop
sub
dec
push
xor
int3
enter
mov
xor
mov
pop
aad
fsts
pop
scas
mov
mov
push
fnstsw
and
mov
dec
cmp
sbbb
imul
int
bnd
cmpsb
in
jmp
insb
lcall
cltd
bndldx
mov
inc
shlb
ja
mov
pop
inc
and
scas
xor
repnz
jne
fldcw
sarb
dec
dec
shrb
push
lret
jle
loopne
idivl
rolb
xor
stc
rcrl
es
push
push
stc
inc
mov
loope
rolb
lods
jp
inc
int3
mov
push
jp
jmp
lock
or
mov
nop
lods
jnp
cmp
lods
add
fcoml
pop
pop
mov
cli
or
sub
in
jnp
cs
jb
add
das
dec
and
stc
loope
push
xor
dec
pop
test
popf
mov
jnp
mov
outsb
mov
addr16
ret
mov
lcall
movsl
ljmp
cmpsl
inc
mov
sahf
inc
int3
sbb
outsb
xchg
adc
test
sub
mov
pop
stc
sub
lds
ret
into
sbb
push
stos
les
jge
xor
lcall
push
add
shll
test
sbbb
jo
sub
lock
iret
push
ret
orb
pop
dec
xor
testb
add
jecxz
push
sbbb
cmpsb
adc
mov
xchg
pushf
inc
pop
push
mov
out
push
xchg
ret
cwtl
ja
and
daa
pop
mov
mov
or
sub
out
xchg
add
loop
xchg
xor
cmp
cltd
push
push
lods
icebp
clc
les
lods
test
dec
inc
pusha
sahf
lcall
pop
lret
sarl
mov
lret
push
xchg
pusha
fidivs
mov
aam
inc
aad
mov
sti
mov
and
sbb
jns
adcb
cmpsl
cltd
fadd
ds
divb
pop
outsb
aad
and
or
push
addr16
mov
icebp
imul
icebp
bnd
jge
icebp
daa
out
jae
aad
insb
sar
or
out
mov
mov
sub
sub
stc
mov
xor
jp
gs
push
movsb
and
cmp
push
push
fists
mov
xchg
mov
daa
xlat
pop
testl
or
jle
stos
pusha
je
repnz
lods
cmp
in
pop
or
out
sbb
adc
mov
jmp
cmp
fwait
push
push
jo
aaa
mov
cmp
xchg
rep
xorb
and
jb
or
sub
and
and
xchg
sub
jbe
push
jb
mov
or
push
and
xchg
inc
cld
push
and
sub
mov
or
add
lods
dec
dec
lret
jbe
mov
jns
test
stos
mov
mov
andl
lahf
xlat
shlb
lock
push
shll
add
lods
xor
and
jmp
mov
xchg
jge
rcll
jg
arpl
mov
push
mov
out
push
pop
and
cltd
fisubrs
xchg
rcll
mov
cltd
cltd
pop
pop
xor
pop
test
mov
stos
cmp
sbb
jge
loopne
cltd
adc
adc
mov
popf
test
adc
xchg
lods
jl
mov
mov
xchg
cmc
xchg
mov
mov
mov
lods
jmp
cwtl
mov
movsl
mov
mov
dec
pushf
bound
and
aas
lods
xlat
stos
lods
sub
out
inc
lcall
ja
add
leave
add
jno
cmp
inc
inc
cmc
mov
jle
dec
frstor
pop
bound
daa
cs
ficomps
add
jnp
mov
mov
add
loopne
pop
popf
pop
dec
mov
imul
enter
lods
pop
lods
push
outsl
inc
nop
out
push
stos
mov
and
jb
push
push
push
xor
mov
push
fisttpl
or
cltd
mov
sbb
inc
push
loope
or
mov
adc
arpl
shrl
mov
orb
out
mov
fidivrl
in
outsb
mov
push
xchg
pop
daa
push
sahf
je
xor
lret
cltd
xlat
jnp
lock
dec
xor
aad
pop
sub
out
cmpsb
outsl
lcall
cltd
pop
sahf
sarl
nop
add
lds
and
out
out
and
inc
add
fwait
pop
add
pop
lcall
mov
clc
pop
cs
stos
fcomps
out
and
and
faddl
inc
test
sub
mov
dec
xor
cs
jo
xlat
out
mov
jnp
mov
cmp
jg
xchg
js
lcall
xchg
test
mov
data16
jmp
push
xchg
and
scas
mov
cld
pusha
bound
mov
or
cmc
jp
mov
push
lret
jp
lea
aas
jp
push
push
subl
mov
push
ds
jb
roll
rclb
ds
pop
sub
jb
jno
cwtl
push
imul
jbe
inc
push
jp
cmp
push
push
xor
push
arpl
pop
sbb
cs
jp
push
jge
pop
divb
push
dec
mov
pop
push
outsb
lret
scas
mov
insb
mov
jp
fidivl
jo
pop
adc
sahf
inc
or
notb
add
repnz
xchg
sti
mov
bound
cs
out
loopne
dec
aam
push
mov
jb
adc
cli
rolb
jo
out
sub
icebp
pop
add
aas
jge
jp
imulb
lret
repnz
loope
xchg
addb
xor
out
repnz
lahf
repz
sbb
mov
sub
jb
mov
jb
in
jp
inc
es
jo
push
jb
xor
mov
jb
sub
lock
bound
jp
cmpsb
and
ds
incl
test
push
or
add
pop
mov
bound
bound
xchg
addb
bound
dec
sub
sbb
push
jp
in
outsb
push
outsb
inc
jbe
inc
pop
mov
push
fsubp
ljmp
jp
and
pop
mov
bound
repnz
popa
bound
ret
pop
cmpsb
bound
out
mov
ret
and
ds
jle
out
fiadds
js
mov
dec
cmp
cmp
jle
outsb
add
xchg
jp
adc
add
push
jo
je
popa
push
imul
bound
jp
adc
jp
sahf
popa
bound
push
inc
cli
push
push
outsl
jl
xor
loopne
xchg
pop
pop
mov
push
ss
repnz
jge,pn
pop
mov
inc
cmp
mov
jge
pop
push
jp
insb
insb
in
jb
sub
lock
xchg
push
mov
cltd
sbb
outsl
mov
nop
push
dec
inc
add
icebp
xor
ss
mov
sbbb
cltd
and
cs
inc
call
lea
mov
jge
roll
xlat
mov
aam
and
lds
mov
xchg
cltd
dec
dec
or
pop
fsubs
rorl
inc
cli
popa
xor
sbb
mov
outsb
cltd
jo
mov
add
rclb
inc
pop
out
push
fiadds
add
and
lcall
sahf
idivb
dec
or
pop
arpl
jp
aad
loope
sbb
arpl
and
fstps
lcall
insb
rcll
jle
pop
mov
adc
pop
cmp
insb
jl
movsl
push
jb
dec
push
inc
cli
test
xchg
and
pop
ljmp
inc
fldl
cs
pop
dec
sbbb
fld
mov
filds
add
and
fwait
adc
arpl
and
lea
insb
cmp
ret
adc
lds
fwait
shrb
lods
lret
fbld
push
fstl
xor
outsb
fsubr
sub
fisttps
or
mov
mov
pop
imul
xchg
adc
outsl
lcall
xor
sti
fmuls
test
cli
lods
push
mov
ret
cmp
ja
imul
cs
add
mov
cmp
rorb
ds
aaa
aam
mov
add
pop
stos
mov
lcall
add
jno
insl
add
add
dec
adc
add
adc
pop
push
mov
jae
dec
pop
das
fwait
aas
add
jbe
stc
jae
test
jo
mov
adc
rcrl
lahf
aam
hlt
push
mov
xchg
lea
nop
lret
inc
mov
cs
dec
push
mov
mov
push
xchg
std
stc
cmp
mov
jge
mov
dec
jne
sahf
cltd
sarb
in
js
mov
cli
and
pop
xor
xor
dec
xchg
inc
iret
nop
cmp
jb
xchg
fsubrp
imul
stos
jp
jo
testb
nop
mov
adc
sbb
lods
jno
pop
in
lds
es
push
mov
out
test
mov
in
mov
ret
jo
mov
inc
lds
and
xor
pop
mov
andl
sbbb
jb
bnd
lods
pop
mov
repnz
cli
cwtl
or
push
xchg
nop
push
or
inc
sbb
adc
inc
jg
mov
or
mov
repnz
add
mov
int3
or
stos
jp
push
jae
sbb
loopne
adc
es
data16
push
pop
outsl
repnz
and
bound
jo
cmc
cmp
or
and
jo
insb
push
sbb
push
or
xor
push
jo
leave
pop
pop
cld
mov
imul
sahf
in
sahf
cmp
jb
dec
jecxz
mov
inc
idivl
mov
inc
shrb
out
push
jno
loop
lret
nop
addr16
decl
addb
push
inc
add
dec
out
repnz
repnz
inc
nop
cmp
cld
xchg
scas
call
adc
pop
ret
jae
popa
pop
jo
mov
sbb
imul
cld
jo
jl
push
or
arpl
scas
sbb
mov
out
xchg
mov
out
jmp
mov
addr16
inc
or
fisubs
lcall
pop
pop
xchg
mov
pop
mov
jg
je
adc
push
sahf
in
lods
sahf
mov
fists
jg
imul
or
je
jo
inc
pop
inc
scas
stos
in
push
or
push
dec
inc
lds
inc
popa
sbb
xchg
dec
sub
push
insb
or
jae
adc
outsl
push
pop
jo
jo
repnz
jnp
scas
inc
repnz
std
lea
ficoml
jg
cmove
aas
jmp
ljmp
and
popf
js
clc
mov
inc
push
inc
add
in
stos
cmp
xchg
lods
bound
mov
repnz
or
sbb
pop
xchg
and
jle
dec
ret
mov
and
mov
pop
cwtl
jns
cmp
inc
mov
jo
cmpl
lahf
cmp
inc
xchg
lock
sbb
mov
loopne
loopnew
loopne
cmpsl
nop
in
outsb
push
lds
lds
and
mov
les
outsl
shl
jnp
scas
inc
bnd
ja
ljmp
mov
repnz
lods
push
aas
rcl
xor
mov
sub
jae
adc
jo
mov
mov
jmp
inc
mov
fmull
jb
lds
lret
mov
xor
dec
and
lcall
in
mov
es
sti
jo
cli
addr16
lret
mov
loope
mov
sub
dec
mov
and
sub
jo
repz
je
jl
or
mov
inc
notl
inc
fisubs
pop
add
aam
sahf
mov
jae,pn
popa
add
or
mov
into
mov
aam
jo
mov
inc
jae
cmp
mov
jg
outsb
pcmpgtb
xchg
mov
in
xchg
jmp
sbb
jo
lret
adc
inc
push
repz
bound
inc
cmc
xchg
repnz
ja
sub
sub
dec
shlb
jl
cmp
in
stos
jo
out
and
movsb
xor
subb
inc
adc
xor
sbb
pop
jo
mov
pop
cmc
outsb
xchg
cwtl
jnp
outsl
repz
in
lret
sti
add
inc
nop
repnz
push
jae
incb
repnz
cltd
push
popa
sub
and
icebp
sahf
test
cmp
cmp
lret
mov
mov
mov
bound
sub
fcomip
pushf
mov
or
out
push
cmc
cmp
adc
out
in
cwtl
lret
in
leave
in
or
imul
stc
cmc
pop
inc
add
aad
and
loopne
orl
inc
dec
into
arpl
scas
pop
pop
in
clc
inc
jb
mov
fimuls
cmp
adc
pandn
gs
cmpl
ja
std
jbe
jo
ja
xor
jecxz
cltd
and
shll
sbb
cmp
inc
out
ss
repnz
nop
xchg
xor
cwtl
xor
or
push
jo
stos
pop
or
test
rclb
or
jge
mov
xor
add
xor
pop
jo
movsl
test
or
nop
ds
imul
movsl
and
and
shl
clc
sti
lcall
cmp
pop
jo
mov
cmp
loop
jge
sbb
lods
xlat
mov
xor
ret
mov
stos
mov
push
or
insb
mov
in
sbb
iret
mov
jbe
pop
in
sbb
mov
and
mov
jle
jmp
ret
shl
inc
adc
shrb
cmpsl
cmp
xchg
lds
add
or
jge
mov
lock
insb
inc
and
add
nop
ss
xchg
clc
add
hlt
mov
nop
adc
push
movl
dec
nop
into
or
jp
xchg
ret
iret
and
push
cld
out
rclb
inc
and
jle
dec
cld
mov
mov
xchg
ds
dec
adc
inc
pop
lock
shlb
or
pop
add
jns
xchg
add
mov
or
push
jo
jae
arpl
jmp
xchg
addr16
int
pop
jbe
aaa
push
inc
cld
fstpl
and
mov
dec
push
jo
add
testb
insb
fists
pop
popa
test
add
and
ljmp
in
enter
scas
add
in
lcall
mov
mov
push
and
jo
movsb
js
pop
inc
mov
mov
mov
divb
pop
cmp
add
jo
lahf
dec
adcl
jecxz
repnz
inc
jo
clc
insl
push
or
or
cmp
mov
jae
sarl
das
outsb
ret
mov
icebp
inc
mov
jge
inc
pop
jmp
mov
sbb
mov
or
stos
fisubrs
repnz
pop
xor
xorl
test
test
nop
rol
mov
jnp,pt
je
dec
imul
sahf
notl
lock
pop
fs
adc
bound
or
nop
xor
adc
sbb
pusha
add
cmp
push
cmp
or
rcl
mov
jns
pop
jg
or
cmp
xchg
popf
mov
fcomi
fcomps
inc
or
pop
fisubl
ja
mov
sarb
addr16
mov
call
mov
xchg
popa
sahf
or
adc
outsl
mov
push
jns
sub
repz
pop
andl
and
lret
inc
sub
xor
sbb
and
repnz
sbb
and
xor
dec
es
fistps
dec
add
xor
cmp
dec
aaa
push
or
xor
push
dec
pop
mov
nop
xchg
shlb
mov
add
ja
jo
ljmp
das
mov
pop
xchg
insl
sarb
ja
rcrl
repnz
pop
fucomi
fistps
aam
dec
add
call
nop
dec
jae
add
push
inc
jo
jbe
clc
ljmp
pop
mov
cmp
or
lock
sbb
push
jbe
lahf
jg
add
fs
xchg
inc
add
jg
or
xchg
fcomip
out
roll
push
fildll
fs
mov
cs
xchg
jnp
or
ja
add
mov
mov
push
push
loopne
jo
enter
movsb
in
inc
aas
cld
inc
stc
fwait
out
icebp
jnp
or
outsb
xlat
sbbb
jp
test
stos
push
les
lods
popf
jno
call
inc
mov
jo
or
popl
push
xchg
sub
mov
es
not
mov
imul
push
jo
ss
inc
lds
jmp
xor
mov
inc
loopne
jno
mov
sahf
enter
movsb
shlb
lcall
ljmp
and
add
fs
pop
mov
pop
inc
xchg
daa
jbe
pushf
jo
xchg
lahf
or
mov
test
add
jne
mov
scas
bound
rcrl
pushf
repnz
jle
mov
mov
popl
enter
loop
mov
push
sub
dec
cmp
push
data16
mov
mov
inc
add
jle
cmp
push
mov
test
pop
push
xchg
cmp
stos
loopne
push
in
or
push
dec
test
or
dec
add
inc
push
xchg
add
sbbl
out
xchg
inc
je
dec
xchg
roll
mov
mov
inc
cmp
cmp
pop
push
mov
scas
sub
inc
or
fmull
loopne
fbstp
inc
bound
lret
cmp
fisubs
push
gs
cmp
add
adc
inc
cmpsb
and
mov
xor
jmp
mov
cltd
pop
push
jle
in
mov
push
adc
sbb
add
or
push
inc
dec
jo
sar
repnz
push
inc
dec
sub
xlat
rorb
ss
mov
jae
add
dec
push
imul
jmp
push
arpl
push
cmp
push
dec
cwtl
mov
test
shl
jbe
addr16
sahf
fdivs
mov
jmp
jg
out
pop
dec
test
sub
negb
bound
adc
popf
push
icebp
pop
rcrb
and
push
jno
jg
add
mov
cmp
xor
xor
add
jbe
jns
xchg
pop
in
push
divb
js
inc
push
or
xchg
movsb
sarb
stc
rcrl
jbe
test
cmp
jae
jle
pop
add
xchg
adc
mov
sbb
cmp
call
add
mov
dec
mov
ret
mov
push
xchg
repz
push
insl
cwtl
inc
jo
mov
cmp
ficoms
or
pop
sbb
xchg
push
add
push
jae
sub
jecxz
add
sbb
xchg
rcrl
xlat
push
aas
jmp
and
cwtl
jne
push
into
bound
and
outsb
repz
loopne
add
pop
adc
or
out
js
shll
push
lcall
sbb
lods
push
push
incb
stos
bound
into
mov
hlt
or
push
lods
adc
in
mov
notb
adc
or
push
jne
dec
jecxz
push
ljmp
enter
mov
mov
cwtl
ret
push
loopne
inc
popa
repz
cmp
fisubl
or
lds
mov
sbb
data16
repnz
inc
push
pop
jnp
jno
push
pop
lock
sbb
repnz
mov
outsl
aad
sbb
sbb
insb
js
ja
jecxz
rolb
ret
es
mov
push
xor
loope
jnp
imul
push
out
jecxz
jbe
inc
scas
or
out
daa
cmc
insb
pusha
mov
repnz
pop
fsubl
xchg
imul
js
and
jnp
push
push
mov
push
ret
pop
xchg
test
add
ficomps
out
sub
push
pop
push
adc
mov
cmp
inc
mov
xor
add
mov
leave
xor
jo
je
rcrl
cmp
xchg
int
scas
ljmp
mov
mov
js
aaa
sti
jg
lahf
inc
into
mov
movb
sahf
stos
leave
rolb
mov
add
stos
lock
nop
xchg
xor
repnz
cwtl
xchg
shlb
push
xchg
dec
sbb
mov
rcrb
xchg
and
addl
mov
mov
addr16
mov
test
dec
mov
push
rolb
sub
test
loope
adc
jecxz
dec
mov
cmp
sbb
js
mov
push
fimull
repnz
mov
push
jge
js
rcl
mov
fst
jo
cmp
mov
pop
push
mov
cmpsl
push
fcmovnbe
loopne
sub
fstl
push
jo
nopl
andl
add
adc
shr
fcomip
jg
test
insb
fdivs
jmp
xor
xor
jae
and
push
xor
sbb
xchg
pop
inc
and
int3
cmp
add
push
and
in
imul
repnz
pop
fwait
ss
push
mov
jg
popa
stos
jbe
call
insb
and
out
push
mov
lahf
pop
xchg
mov
xchg
mov
cmp
out
rolb
mov
inc
ljmp
out
movsl
mov
cwtl
clc
repnz
jmp
faddl
inc
incl
shlb
cmp
mov
lds
jae
iret
adc
pop
sbb
sub
outsl
inc
mov
jo
cmpsl
inc
push
repnz
mov
adc
jo
pop
mov
imull
in
cmpl
and
mov
enter
imul
scas
pop
imul
jbe
repz
xor
dec
mov
cmp
idivb
lret
mov
adc
jmp
jo
aas
push
mov
mov
out
jmp
or
and
mov
gs
inc
sbb
pop
mov
test
jmp
xchg
test
jbe
out
add
mov
in
insb
fistpll
lock
pop
ret
push
xchg
mov
push
xchg
cmpsb
popf
orb
or
or
dec
jge
movsb
jo
in
jnp
dec
sub
jl
jo
ljmp
push
mov
cmpl
not
ljmp
mov
ds
add
psubusb
nop
inc
xor
sub
cmp
sbb
mov
sbb
aam
loop
andl
jp
nop
loopne
and
xor
aas
inc
cmc
jae
push
dec
nop
push
fldt
repnz
bnd
call
mov
xor
loopne
sub
push
std
mov
pop
aad
sti
out
fisubl
stos
iret
mov
adc
pushf
or
mov
cmpsb
inc
stos
aas
sahf
inc
popf
sahf
call
mov
pop
stos
fwait
xchg
jne
xchg
mov
imul
cli
jl
mov
add
cli
push
pop
mov
xchg
es
int3
jb
mov
xchg
sub
sub
mov
sbbl
jo
lret
test
sbb
xchg
mov
add
cmpsl
test
lods
mov
xlat
or
jp
scas
jge
or
push
fbstp
pop
mov
scas
lds
push
jge
lods
sub
sub
in
aam
and
sub
inc
mov
fs
mov
sub
or
and
in
lret
mov
outsb
jns
out
mov
mov
push
in
pop
pop
or
das
inc
or
repz
out
xor
dec
xchg
test
mov
roll
rorb
push
add
mov
lahf
push
add
mov
mov
adc
adc
test
in
daa
mov
and
mov
jno
dec
test
mov
xchg
addr16
jmp
sbb
mov
xchg
sub
adc
push
aas
ljmp
cwtl
in
push
popf
dec
test
pop
outsl
push
jmp
loop
adc
dec
and
rcll
or
test
pop
ret
pop
or
adc
pushf
rcr
push
jo
cwtl
lret
or
pop
mov
ss
adc
add
out
sub
cld
pop
pop
jae
mov
scas
sub
pop
dec
pop
dec
cmp
adc
mov
inc
and
mov
inc
nop
xchg
adc
repnz
fiadds
incb
mov
cmp
movsb
pop
inc
popa
sbb
jnp
in
rcll
jne
mov
mov
jmp
pop
mov
cmc
repnz
out
cmp
outsl
pop
xor
xlat
cmp
fnsave
sahf
push
push
movsl
aad
ljmp
pusha
mov
pop
jnp
mov
push
push
iret
pop
mov
repnz
clc
mov
movsl
xor
push
add
jl
ja
dec
inc
inc
mov
sub
outsb
cmp
ja
jmp
sub
ja
dec
add
adc
and
sub
clc
pop
nop
cli
sbb
movsb
iret
push
inc
lds
push
hlt
dec
loopne
and
lret
jae
cwtl
inc
dec
std
mov
loopne
pop
pop
cmpsb
fwait
xchg
mov
dec
ss
outsb
jnp
into
jge
rcrb
mov
jl
and
outsl
add
arpl
push
sub
pusha
pop
ret
pop
insl
push
and
push
dec
outsb
int3
and
shrb
dec
pop
shl
fs
aam
cmc
pusha
rcrb
dec
and
cmp
loop
shrl
mov
inc
call
pusha
int
sbb
loop
mov
rcrl
jns
std
adc
repnz
or
sub
dec
fstpt
or
push
pusha
insb
push
jecxz
push
cmp
and
sti
jo
repz
arpl
mov
jae
mov
adc
insl
cmp
inc
rclb
xchg
jo
push
imul
lods
pop
jle
mov
in
mov
add
fimuls
cmp
jge
or
push
out
add
or
mov
adcb
repnz
push
sbb
cmp
push
adc
into
jbe
push
sub
jo
mov
fs
ret
or
push
repnz
sub
mov
gs
push
jo
shll
hlt
pop
fcoms
pop
mov
dec
jnp
sub
pop
lock
sbb
or
pop
mov
jl
mov
sbb
adc
mov
jae
test
aaa
pop
jl
adc
inc
daa
xchg
sub
push
pushl
jle
mov
jnp
rcll
in
scas
xorl
pushl
jp
lods
mov
add
test
sahf
and
les
test
fisttps
mov
dec
jns
in
sbb
xor
xchg
outsl
fisubrs
dec
push
jo
adc
cwtl
in
jle
add
inc
mov
push
subl
jmp
push
and
sub
int3
and
dec
xchg
cld
dec
ljmp
jns
jo
and
xor
idivb
jbe
sbb
hlt
mov
dec
cmp
or
inc
repnz
xor
ror
push
jo
shrb
inc
cmpsb
into
stos
jo
add
jbe
push
xchg
cmp
call
pop
jo
push
adc
dec
inc
lret
mov
popa
mov
pop
and
mov
mov
push
push
and
cmp
negb
lahf
addb
test
add
popf
jns
dec
cmp
loopne
cmp
push
lahf
ss
int3
mov
and
cwtl
inc
stc
jecxz
push
sahf
outsl
sbb
sub
inc
xchg
xchg
cmp
dec
fsubrl
mov
lea
decl
loopne
and
push
insb
and
cltd
mov
mov
stc
outsl
pushl
cli
in
enter
jnp
cmpsb
popf
jnp
dec
jns
cltd
add
jg
add
jge
pop
fcmovb
mov
arpl
es
mov
outsb
fucomi
adc
inc
jl
push
pop
and
lock
fcmovb
or
scas
push
mov
jle
or
repnz
and
lcall
push
daa
cld
mov
inc
or
rorl
orl
outsl
xor
mov
fwait
shll
push
pushf
push
and
cmc
ret
sti
insb
sub
cmpsb
add
sub
jno,pn
in
push
or
std
xchg
mov
mov
xchg
sar
inc
inc
call
rclb
jge
jg
pop
xchg
jp
mov
nop
repnz
daa
inc
pop
bound
push
loope
mov
cmp
ret
insl
xorb
dec
mov
sub
jae
mov
loopne
jne
jle
je
xor
jmp
mov
xor
push
jo
in
jle
repnz
push
sbb
mov
xor
das
int3
mov
insl
mov
bound
int3
daa
js
or
aad
outsl
cli
xchg
bound
cmp
lcall
ljmp
test
cld
inc
mov
insb
adcl
popa
es
xor
dec
jle
push
xchg
in
adc
mov
lock
imul
movsl
fidivs
sub
aam
std
lods
push
in
xor
jp
add
dec
lcall
inc
or
xor
aam
call
dec
push
cltd
mov
bnd
idiv
cmpsl
scas
jbe
push
arpl
subb
inc
cltd
inc
adcl
adc
ds
cltd
and
ljmp
rcrb
pop
add
hlt
push
shrb
or
addl
mov
loop
mov
in
or
aaa
jle
inc
sbb
sub
inc
push
xor
mov
out
xor
jl
es
inc
mov
jb
xorb
div
mov
in
jmp
mov
cltd
ss
mov
bound
or
fwait
dec
dec
outsb
mov
gs
fs
pop
loop
push
cmp
jae
jl
fisttpl
adc
inc
es
mov
cwtl
mov
mov
or
mov
movsl
sahf
lahf
lcall
andl
ret
cli
ret
and
ss
lds
pop
jno
ja
sbb
outsb
push
push
fdivs
fldenv
inc
push
pushf
imul
mov
loop
add
jg
jbe
cltd
mov
xchg
test
push
stc
adc
push
incb
imul
sbb
mov
add
jne
adc
test
sbbl
imull
test
ja
dec
sbb
or
shrb
jae
dec
int
leave
xchg
push
pop
lods
subl
mov
insl
jg
pusha
pop
in
out
cmpsb
pushf
cs
and
ljmp
mov
cld
aaa
cltd
sbb
orl
popa
mov
push
jmp
cmpsl
shrl
jae
rcrb
test
dec
orb
xchg
jbe
or
xor
adcb
add
jg
inc
jbe
jg
mov
dec
push
fwait
cmc
lcall
dec
adcb
adc
add
push
es
adc
int
push
xlat
popa
adcl
add
and
lds
lcall
xor
clc
jnp
fcompl
sbb
addr16
xchg
cwtl
adc
sbb
push
lds
xor
pop
sub
cmp
inc
ljmp
sbb
jns
sahf
sub
mov
loopne
insb
data16
test
popa
pop
lcall
sub
cltd
lods
xor
clc
cli
scas
push
aas
and
lods
xchg
adc
lds
lcall
sbb
arpl
lahf
bound
sti
and
jle
incl
pusha
jns
imul
jge
daa
sbbl
jg
sub
aam
dec
jp
ss
pop
aaa
jge
das
cmp
jbe
pop
jle
andl
cmpsb
scas
add
sbb
scas
test
lcall
inc
cltd
pop
and
mov
daa
jmp
xchg
outsb
jno
pop
ret
icebp
daa
sti
data16
inc
push
fldl
hlt
js
lcall
xchg
ror
push
incl
mov
mov
xchg
cld
pop
xor
das
fldl
cld
xor
fimull
add
pop
mov
cli
jns
test
leave
mov
andb
jmp
lcall
je
mov
outsl
fucomip
jge
lcall
jge
shl
rcrb
lea
pop
jo
out
pop
mov
xor
ss
jp
cmp
xor
frstor
ljmp
adc
mov
mov
cli
pop
mov
mov
fstps
cmp
lock
in
lds
xorb
add
movsb
inc
inc
sub
int3
in
mull
outsl
or
mov
mov
jmp
andb
ljmp
push
jge
push
mov
xchg
es
inc
xchg
and
sub
movsb
push
fwait
cmp
subb
adc
hlt
dec
pop
andb
and
shrb
out
ja
iret
lahf
mov
testl
andb
add
ret
cmp
shll
xorb
inc
cmpl
daa
mov
jmp
inc
adcb
in
or
mov
test
add
sub
cmp
jae
clc
mov
ret
add
adc
mov
movsb
lock
repnz
mov
addb
das
pop
mov
mov
cmp
out
or
jmp
jmp
adc
xorb
adc
rolb
stc
jp
dec
or
jnp
push
adc
lret
inc
lret
fsubr
loopew
rcr
ret
sbb
jno
cmpb
scas
subb
mov
mov
cmp
push
pop
mov
sbbb
adc
js
lods
fdivrs
cltd
adcl
lea
fsubrl
arpl
push
dec
fadds
mov
and
popf
jecxz
xor
cmp
lods
scas
gs
sbb
pop
jl
fdivs
daa
loope
sbb
scas
dec
jo
jns
pusha
adc
subb
sbb
je
dec
inc
popl
loopne
aad
lret
jb
jg
cmp
clc
roll
mov
cmp
xchg
jns
adc
orb
push
pop
andb
push
cmpsb
dec
clc
mov
iret
std
flds
cmp
pop
pop
jbe
loop
push
jae
mov
ds
or
add
mov
push
mov
cmp
out
leave
repnz
xor
jle
test
xlat
nop
inc
jg
mulb
add
aad
je
and
pop
test
push
cmp
js
cmp
imul
mov
jge
orb
ss
movsl
test
mov
and
jno
adc
sub
jnp
xor
insl
xlat
inc
sbbb
pop
fisttpl
xorl
dec
rcl
cmpb
js
dec
jae
loop
mov
push
xchg
xchg
mov
test
rolb
out
lcall
in
out
insl
scas
jg
cld
xchg
fsubrs
cli
leave
mov
fisttps
clc
xchg
and
out
dec
lcall
sbb
pop
pop
fists
push
sbbl
inc
insb
mov
fldpi
xchg
dec
mov
mov
push
push
or
ret
and
dec
adc
xorb
push
adc
fldl
cmp
or
sar
pop
mov
mov
fwait
out
roll
lret
mov
mov
pushf
jle
push
push
shll
fiaddl
add
in
xchg
addl
or
cmpsb
jnp
and
push
cmpsl
adc
outsl
popf
in
sbbb
dec
mov
cmp
aas
loopne
andb
push
or
xchg
or
insb
addl
pop
inc
xor
push
mov
lcall
mov
cmpl
and
pusha
andb
push
add
sbb
testb
stc
rcr
sbbb
mov
and
jp
popf
push
push
jns
arpl
and
add
incl
fsub
jmp
fs
pop
ret
insl
adc
orb
loop
jmp
iret
dec
out
leave
cvtps2pd
mov
sarb
jge
ds
xchg
fisttpll
or
int3
mov
sbbb
inc
mov
addr16
lds
lods
mov
out
mov
addb
jb
push
aad
subb
cmp
sti
xchg
in
loop
pusha
std
inc
enter
mov
iret
pop
sbbb
add
xorb
clc
cmp
sub
push
ret
or
cmp
cmpb
and
cmp
push
bound
out
jl
sar
jmp
ret
shr
sub
jns
mov
and
outsl
sbb
jo
or
testb
les
xchg
add
in
lahf
sbb
push
mov
lret
repz
orb
jno
punpcklwd
add
lock
mov
les
push
cltd
jl
sub
mov
js
ljmp
flds
inc
sub
mov
fldl
cmp
mov
dec
fs
cmp
mov
push
push
and
push
incb
cmp
jg
cmpb
mov
mov
in
jnp
psllq
fs
cmpb
pop
jle
push
sarl
cmp
dec
loope
dec
bound
insl
data16
push
adcb
sub
cwtl
gs
cmp
adc
push
repnz
pop
adc
enter
sub
std
push
in
outsb
dec
stos
sub
sub
mov
xchg
sarl
xchg
cmc
lock
jae
idivl
mov
cmpsb
push
cmp
pop
and
add
addl
rcr
cmp
add
lcall
aaa
js
movsl
mov
into
and
not
movb
loop
int
xlat
js
iret
mov
adc
sarl
or
sahf
shl
in
shlb
mov
daa
and
dec
bound
jbe
add
les
sbb
mov
lcall
ljmp
call
je
cltd
pusha
pop
out
push
dec
cmp
popf
call
lret
jl
shll
loop
je
inc
pop
add
lret
xor
jge
add
es
push
mov
cltd
add
mov
pop
repnz
add
or
fmul
jge
mov
sub
sbb
div
cmp
mov
push
cmpsl
loopne
jbe
fsubrs
outsb
hlt
push
and
inc
pop
push
in
andl
push
int
mov
inc
fdivs
jge
addr16
lahf
lret
int3
cmpb
enter
inc
jg,pn
sbb
xor
call
and
pop
stos
dec
cmp
in
mov
and
das
cmc
ret
icebp
repnz
sub
fsubrs
lcall
imul
js
jl
dec
jb
push
add
popa
rcll
cmp
in
push
mov
jb
sub
lock
jo
jge
cs
nop
jl
or
xor
push
pop
pop
mov
mov
imul
mov
push
mov
adc
incl
imul
icebp
cmp
aad
or
mov
push
stos
inc
mov
lcall
daa
insb
xchg
test
lcall
dec
push
ds
cmp
shll
das
jp
and
cli
mov
stos
imul
pop
jns
into
and
and
mov
arpl
push
add
jnp
xor
xor
and
inc
into
pop
cmp
xchg
mov
adc
mov
push
clc
push
fcoms
push
cltd
push
lock
in
in
sub
iret
cmp
sbb
xor
divb
jne
insl
aam
jae
js
sub
out
push
jno
push
mov
imulb
jno
scas
mov
fidivrs
sub
fcomps
ret
cs
stos
sub
jge
daa
xor
icebp
js
cltd
icebp
pop
arpl
stc
ja
out
stc
lea
push
cltd
mov
shr
sbb
sbb
push
dec
into
xor
cmp
sbb
mov
rolb
lcall
xchg
std
jg
mov
ret
sub
inc
cmpsb
inc
hlt
nop
mov
jo
imul
mov
inc
enter
ret
sbbl
inc
cwtl
sbb
mov
or
dec
lret
inc
ss
sub
lods
inc
and
pop
xor
jns
sub
mov
jp
out
fcoms
cmp
aam
sub
inc
test
jno
mov
cs
cs
mov
mov
cltd
bnd
ja
in
mov
xchg
jecxz
push
push
and
pop
test
sub
and
jb
cmp
mov
sti
inc
xchg
lcall
push
andl
and
xchg
mov
jle
stc
ss
cmc
mov
shl
das
pushf
lds
mov
es
cmc
in
pusha
repnz
jecxz
scas
cltd
push
repz
mov
pop
imul
loop
leave
movsl
push
stos
addl
push
mov
ljmp
add
push
sub
out
push
lea
jae
inc
rcrl
ret
outsl
or
or
cmp
xor
add
dec
mov
cmp
idivl
loop
sbb
sbb
lcall
adc
mov
add
push
sbb
push
push
insl
imul
roll
and
inc
jl
jg
jp
jns
and
push
loopne
pop
lcall
jbe
fdivl
lock
xor
stos
lcall
jp
fildl
jg
cwtl
lds
xor
push
inc
mov
bound
jecxz
enter
or
clc
leave
in
sarl
repnz
pop
sbb
lods
mov
add
push
arpl
cmp
add
push
push
mov
add
stc
xchg
jo
lea
mov
pop
fistpll
shl
lahf
lret
lock
pusha
cmpsl
or
lcall
xor
sub
sahf
negl
cld
ds
repnz
mov
loopne
outsb
xlat
cmp
push
sub
jo
jge
jge
repnz
mov
xlat
xchg
in
push
and
pop
int
xor
jmp
data16
mov
lock
das
inc
cli
or
xchg
in
add
xlat
push
call
adc
jne
sbb
sub
cmp
push
jb
xchg
pop
xor
mov
inc
imul
std
into
cmc
daa
jle
cltd
fisubs
cwtl
cltd
inc
repz
push
dec
scas
popa
outsl
pop
xor
sarl
and
movb
push
repnz
mov
imul
xor
fsubs
aad
mov
movsl
or
xchg
lcall
cmp
dec
xchg
adc
xchg
rcrb
and
sub
dec
push
lret
insl
shll
out
inc
mov
sbb
jl
mov
and
inc
fisubl
lods
ljmp
xor
movsl
lret
push
add
cs
pop
jns
in
pusha
mov
sbb
shrl
js
cmovae
xchg
pop
pop
jp
inc
jbe
pop
int3
in
push
and
mov
shlb
and
lock
aaa
inc
inc
mov
sbb
xor
insb
fs
push
sbb
rclb
jge
xor
repnz
mov
shl
pop
push
call
mov
push
xrelease
out
aam
dec
cli
mov
jns
mov
loope
lock
jge
xlat
inc
das
stc
daa
pop
int3
and
popa
jo
xchg
mov
arpl
int
mov
or
jbe
cmc
push
cmp
dec
mov
xor
sub
cmc
jo
push
inc
loope
fmull
mov
das
cmpsb
push
mov
jp
adc
outsl
mov
repnz
sub
fiadds
in
cs
xor
ja
pop
daa
cltd
pop
ret
or
bound
jle
adc
gs
ja
and
mov
hlt
lods
sbb
jg
fdivs
cs
and
shll
test
inc
cmp
repnz
pop
pushf
or
ret
push
icebp
push
xor
cwtl
mov
js
sub
in
imul
repz
mov
xchg
mov
lods
mov
jne
je
mov
scas
pop
inc
aaa
fadds
stc
fstpt
push
aaa
addr16
repz
push
ror
jmp
testb
out
arpl
adc
js
in
jb
add
call
rcl
adc
xchg
mov
ljmp
stos
stc
pop
cmp
push
out
cmc
xor
ljmp
cmp
test
push
fsubl
loopne
jge
lcall
std
or
leave
sbbl
movsl
mov
cmp
insl
mov
imul
insl
jmp
jno
adc
add
jbe
pop
xchg
popa
sbb
jl
outsb
pushf
jnp
or
je
jbe
pop
lea
arpl
dec
xchg
or
inc
iret
out
xlat
inc
es
in
iret
pop
and
addl
push
cld
mov
xchg
imul
and
mov
ljmp
int
lret
cmp
inc
scas
mov
cmp
insb
mov
push
mov
sub
je
sti
popf
in
pusha
test
lcall
xchg
xchg
xor
push
into
call
pop
add
out
push
lcall
jbe
adc
inc
mov
pop
enter
jle
gs
add
lds
ds
mov
xor
aad
int3
js
jns
insl
mov
cli
xor
sub
das
inc
pop
adc
adc
out
inc
lcall
mov
and
push
in
mov
or
jnp
sbb
push
mov
into
lret
jbe
cwtl
outsl
js
cmc
xchg
or
and
fdivrs
add
lcall
ss
int3
xor
fistpl
movsb
mov
mov
sub
cltd
add
les
xchg
leave
outsl
mov
test
push
cld
adc
xor
mov
loopne
cmp
fldcw
dec
mov
lea
and
push
mov
fs
arpl
mov
mov
aad
inc
out
or
lock
pop
add
cltd
add
sbb
and
ror
inc
mov
pop
xchg
fld
jne
lcall
xor
adc
test
dec
jnp
stc
pushf
aad
jns
xor
jae
push
sub
xor
sbbb
sub
adc
xchg
jbe
test
mov
pop
dec
test
imul
inc
fnsave
inc
imul
insl
rol
inc
fisubrl
jne
jle
pusha
lcall
and
mov
cmpsl
bnd
daa
aaa
lcall
mov
call
inc
js
adc
fidivl
sbb
fwait
or
mov
jecxz
fildll
je
test
mov
call
pop
out
ret
xchg
and
inc
sbb
xchg
or
mov
sbb
sub
mov
in
xor
test
jecxz
sbb
mov
xor
scas
lret
cmpsb
into
sbb
and
test
scas
adc
inc
xor
ss
dec
bnd
push
xchg
pop
iret
ja
dec
outsl
xor
dec
jnp
arpl
mov
add
jp
and
popa
jne
in
xlat
or
push
movsl
sbb
dec
push
repnz
mov
bound
or
and
pushf
andb
out
xor
insb
out
or
sbb
cmp
les
sbb
stos
jb
jg
mov
sarl
sbb
inc
ljmp
jle
pop
jmp
int3
sbb
ja
lcall
pop
xchg
shr
rclb
pop
cmpsl
add
cmc
mov
and
add
push
jb
add
pop
cltd
cmpsb
scas
fisubs
cmp
ja
sbb
outsb
jns
push
into
lea
insb
cmp
pop
adcb
push
fstpl
lcall
mov
orb
fsts
pop
scas
imulb
fsubp
test
jle
leave
add
jg
insb
ljmp
xor
jbe
mov
in
or
outsl
add
jbe
fdivrl
mov
or
push
rol
fs
ja
mov
jl
jns
lods
ret
ds
aaa
jb
jmp
sub
jle
and
in
dec
popa
mov
ja
into
ret
nop
nop
and
sti
pop
mov
insl
outsb
sti
push
sub
stos
push
lahf
mov
xor
sbb
testl
sbb
fwait
mov
test
jo
loopne
and
outsl
cmc
das
adc
rclb
les
mov
inc
cmp
cmp
push
dec
repnz
adc
sbbl
lcall
jmp
insb
dec
rorb
jns
stos
mov
shlb
addr16
popa
inc
das
inc
push
mov
cmpl
lahf
test
ds
mov
or
ja
push
lahf
sbb
rcrl
xchg
pop
sbb
sbb
sub
cltd
mov
xlat
pop
pusha
and
xor
sbb
pop
sti
lret
pop
subb
aaa
out
push
jmp
hlt
cmp
add
push
jp
shll
aas
ficoml
popf
les
push
lods
mov
xchg
shll
xchg
xor
negb
vpmacsdqh
shl
sub
lcall
ljmp
aas
lcall
aaa
sub
popf
pop
int3
jecxz
or
jns
enter
pop
sbb
fists
lahf
scas
sbb
popa
les
inc
les
insb
jge
xor
lock
jnp
dec
xor
push
and
jns
repnz
or
lret
xorb
lret
jbe
mov
push
mov
icebp
mov
inc
cmp
cltd
sbb
or
inc
jge
push
shlb
jns
pop
out
push
push
or
hlt
inc
clc
cltd
add
dec
cmp
sbb
or
push
dec
and
jecxz
fcoms
and
repnz
insl
xchg
or
or
jns
sub
jnp
push
repnz
dec
lods
outsb
cmpsl
mov
cmpsl
xor
lock
or
mov
ja
nop
divl
or
lcall
xchg
jb
lds
sbb
pop
xor
inc
neg
in
push
pop
jbe
popf
push
dec
inc
cltd
xchg
aas
jge
dec
cmp
sub
insl
and
ret
orb
cmp
stc
imul
and
outsl
or
sbbl
leave
rcrl
js
or
jp
hlt
jecxz
mov
test
outsb
add
decb
mov
shl
jo
add
repz
or
lea
in
ror
mov
out
jp
sub
jg
push
test
mov
inc
xchg
ret
add
pop
or
jb
jmp
jns
adc
sub
test
outsl
jns
cmp
push
adc
xchg
mov
outsb
lds
and
mov
sbb
add
jle
mov
lret
jp
out
xchg
jo
xor
mov
xchg
addr16
loop
out
jg
mov
sarl
mov
insl
fcoms
imul
jo
popf
cltd
sbb
xlat
jne
push
push
js
add
push
xor
repnz
test
nop
pop
and
inc
and
mov
sub
cmp
jb
pop
xchg
inc
shl
sbb
mov
ss
xchg
push
in
ja
aaa
lret
mov
jge
xor
cmpb
sbb
push
push
and
ret
pop
hlt
jp
xor
cmp
mov
data16
stc
adc
loopne
mov
cmp
pusha
pop
in
in
adc
mov
mov
ret
adc
adc
cmp
xchg
push
jecxz
ja
repz
insl
fsubrs
mov
cmp
pop
and
test
inc
cltd
jns
push
jle
pop
sub
std
pop
rol
mov
inc
add
mov
jb
cmp
insl
adc
sti
pop
push
ss
sbb
mov
rclb
jg
and
ds
fisubrl
sbb
fcmovnu
lcall
push
or
push
jl
ret
push
mov
or
jmp
enter
in
mov
sub
fistps
mov
cli
cltd
icebp
push
es
in
mov
cmp
pop
je
scas
inc
pushf
cwtl
addb
xchg
lahf
mov
mov
sbbb
mov
pop
je
orl
xchg
push
add
ret
push
sub
and
daa
cmpsb
shrl
xor
cmpsb
sub
sbb
divl
loopne
pop
ret
sbb
cmp
add
jne
dec
xchg
lcall
sahf
out
nop
ret
das
ljmp
push
jns
mov
jg
xor
and
adc
lret
cmc
cmp
test
js
lcall
out
pop
sbb
leave
pop
dec
add
jmp
out
or
and
add
cmp
mov
or
lds
jecxz
not
sub
dec
ret
mov
imul
xor
mov
movsb
mov
and
es
test
sahf
adc
jb
cltd
mov
pop
jne
jle
dec
adc
xor
test
and
out
enter
call
shl
pop
pop
or
rolb
or
hlt
out
mov
lea
jg
pushf
add
jb
mov
xchg
ret
dec
outsb
aad
mov
pop
jns
sub
sub
cmp
xchg
xor
and
cmp
cmp
sub
push
mov
cmpsl
cs
xor
xchg
sbb
mov
faddl
repnz
push
aaa
in
sub
incb
rcl
stos
cmp
lds
or
js
cmpsl
xchg
sti
cmp
or
sub
jp
xchg
enter
mov
out
cltd
stos
adc
xor
das
xchg
mov
mov
dec
subb
dec
pushf
cltd
test
jo
jle
loop
push
lcall
pop
adc
repnz
cli
add
xorl
mov
rcr
pop
sub
pop
popa
js
outsb
mov
aad
push
pop
subb
sub
cs
push
jge
icebp
sti
jle
dec
push
xchg
lds
mov
cli
stos
repnz
sub
mov
jle
and
jge
lret
mov
rcrb
xor
dec
iret
cmp
xor
mov
repnz
jns
or
inc
std
mov
push
repz
scas
shll
push
iret
lahf
out
lret
sub
orb
jne
sbb
sti
jge
cmp
jp
pop
mov
cli
or
pop
push
jecxz
aam
clc
insb
fcmovne
cmp
pop
xor
push
mov
mov
in
mov
xlat
fcoms
push
shlb
orl
jg
loopne
leave
add
int3
push
xchg
insb
adc
mov
movsb
jo
jno
adc
scas
rclb
push
cmp
dec
sub
mov
and
insl
add
cs
jns
pop
data16
mov
xchg
mov
sbb
sub
lcall
insb
pop
xchg
out
push
jns
lock
mov
cmp
and
daa
cs
or
dec
xchg
movsb
jns
jg
stc
push
shrl
jle
sub
sbb
loopne
jbe
outsb
or
je
gs
mov
mov
cmpb
push
lock
push
pop
xchg
or
jle
mov
lea
ljmp
mov
rolb
int3
fsubrl
jge
xchg
dec
sbb
int
jno
mov
sbb
add
mov
mov
xchg
and
or
subb
pop
outsb
adcb
hlt
sub
push
xorb
adc
or
cmpsb
add
fs
cmp
pop
pop
lods
mov
lcall
or
dec
sub
mov
cli
inc
imulb
or
iret
cmpl
xor
popfw
in
movsl
dec
push
pop
clc
fimull
and
mov
jnp
into
fcompl
adc
push
pop
das
push
mov
mov
xorb
adc
les
dec
inc
addb
out
adc
daa
test
xchg
adc
lret
cmp
mov
lock
push
pusha
sbb
mov
mov
insb
xchg
sub
jmp
movsl
rcrb
and
dec
xchg
xor
sbbb
push
into
push
push
mov
cwtl
call
sub
cmpsb
cli
jbe
xor
ret
mov
enter
in
ljmp
nop
pop
adc
out
gs
mov
push
ret
rclb
nop
jns
or
xchg
clc
inc
mov
xchg
out
test
rcrl
stos
pop
lcall
mov
push
les
jg
roll
aad
es
mov
stos
inc
sbbb
jg
out
push
dec
cmp
sbb
jecxz
inc
push
clc
pop
mov
ljmp
stc
test
les
and
lret
jle
cmp
mov
enter
jg
lcall
cltd
es
sub
adc
nop
jo
ret
xchg
dec
or
xchg
enter
sbb
and
jns
aad
dec
lret
cli
sub
cltd
jmp
jns
repnz
push
xor
and
cmpsl
or
insb
mov
movsb
cmp
push
outsb
cli
ja
in
out
loopne
stos
xchg
imul
xor
dec
xor
cld
pop
cltd
xchg
call
pop
fwait
inc
inc
or
mov
xchg
addr16
add
shll
mov
jnp
fisubl
lea
dec
in
pop
pushf
ja
cltd
cmpsb
dec
icebp
aad
ja
mov
jns
pusha
arpl
dec
lods
out
and
xchg
jmp
out
cld
inc
push
test
lcall
rorb
stc
imul
stos
repnz
jbe
lods
jns
test
scas
pop
jp
or
movsb
dec
fcmovnb
repnz
add
xor
fbstp
sahf
add
testl
or
jg
adc
inc
mov
jg
rol
mov
push
mov
push
jbe
push
cmc
out
lds
sbb
dec
loopne
jns
inc
mov
imul
dec
jecxz
cli
mov
xlat
jg
negl
lret
mov
imul
stos
in
mov
or
lcall
pop
test
out
dec
cli
int3
lcall
lea
int3
push
pop
stc
xchg
mov
fbld
sahf
add
push
mov
icebp
sbb
xchg
cmp
xor
outsl
inc
clc
and
lcall
mov
aaa
xlat
jnp
testl
test
jl
mov
sub
pop
mov
xchg
aad
sub
mov
int
mov
cmp
popf
aad
in
adcb
mov
adc
and
loop
push
jecxz
or
movsl
pop
mov
mov
xorb
jl
in
or
repz
mov
mov
repnz
jnp
sub
incl
adc
andb
or
sub
pushfw
andb
inc
fsubl
push
nop
ret
lods
lret
cmp
mov
pop
or
dec
subb
pop
mov
jg
clc
jae
pop
popf
push
sarl
movq
imul
xchg
inc
ja
rcl
sbbb
addr16
push
pop
jb
pop
sbb
cmp
stos
mov
jl
ljmp
fiaddl
shlb
or
jg
loop
inc
cwtl
adc
test
scas
bnd
adcb
out
cmp
xchg
or
xor
inc
test
in
push
xor
sbb
add
jbe
inc
xor
or
mov
push
outsb
ret
sarl
dec
cltd
xchg
add
mov
mov
add
mov
sbb
addb
mov
add
adc
jnp
add
inc
jo
iret
clc
sbbl
sahf
jl
jnp
pop
and
xchg
jns
xor
push
mov
jo
and
jae
stc
lret
aam
pop
hlt
xor
push
sbbb
sbb
ljmp
jb
and
addb
push
popf
and
fsubrl
xchg
jns
jo
jecxz
repz
mov
gs
call
lock
insb
ss
jno
pop
popa
or
xorb
jnp
or
pushf
jp
subb
sub
notl
jns
pop
loopne
cmpb
fsubs
push
dec
and
enter
subb
nop
inc
xchg
cld
jp
inc
mov
jo
mov
loope
mov
shrl
sysenter
mov
fisttpl
imul
and
loopne
shl
outsb
subb
test
lahf
subb
mov
addb
jl
std
ja
dec
scas
fs
orb
mov
cmpsl
out
in
and
lret
jge
mov
fsubrp
xor
dec
ja
fwait
inc
pop
cmpb
fs
and
xchg
push
fists
cmpsb
sub
test
xchg
mov
pop
subb
and
mulb
test
mov
lea
dec
negl
adc
push
ljmp
subb
xor
subb
pop
xchg
dec
push
or
mov
inc
mov
scas
inc
mov
inc
pusha
xchg
cmpsl
dec
mov
xchg
cmpl
mov
jg
sbbb
push
bound
aaa
mov
dec
and
mov
imull
out
push
adcb
fwait
ljmp
loopne
loope
bound
xchg
mov
incl
mov
fs
or
ret
push
jmp
addb
aaa
repnz
dec
jne
push
les
push
inc
repz
fcoms
cmp
mov
sbb
sahf
andb
dec
add
inc
jno
mov
orl
xor
addr16
fbld
cmp
pop
subl
dec
sub
subb
call
pusha
pop
pop
push
bound
aad
je
xorb
int
sarl
push
ss
sbbb
add
or
cld
addb
lods
and
jae
adcb
add
lret
pushf
adcb
cmc
pop
adc
bound
mov
xor
pop
dec
leave
xorl
add
mov
scas
in
repz
inc
fdivrp
xorb
lods
aas
jb
je
ret
dec
push
and
imull
sahf
pop
mov
fisttps
add
sbbb
enter
xchg
stos
fldenv
cmpsl
mov
push
gs
mov
or
orb
rcll
lods
cli
add
sbbb
imul
or
lcall
xor
xchg
scas
jg
js
mov
mov
cmpsb
int3
aam
scas
push
push
es
mov
pop
subb
clc
adc
or
jp
gs
orl
fs
ficompl
lcall
cltd
xchg
imul
mov
cmpsl
fstp
cmpb
push
xor
xchg
lcall
cwtl
imul
repz
mov
bound
push
stc
mov
or
mov
xchg
sbb
ds
out
subb
divb
hlt
jmp
xchg
jno
bound
clc
pusha
pop
push
mov
dec
lcall
insb
enter
notb
jmp
mov
mov
jb
repz
jg
or
adcb
cld
cltd
cmp
scas
orb
daa
inc
xchg
les
andb
xor
mov
push
push
pop
loope
cmpsb
adcb
xor
scas
add
mov
js
js
or
ret
out
nop
push
xorb
lcall
sub
mov
push
rcrl
or
or
and
lea
test
ja
ds
or
or
inc
neg
cmp
arpl
mov
test
push
mov
sarb
mov
orl
jno
js
sub
pushl
add
rcl
cmp
lods
incb
jp
mov
xchg
rorb
out
adc
loopne
fldenv
adc
jle
xchg
mov
add
push
in
sub
fldt
or
xchg
sbb
and
ret
das
fldenv
mov
adc
lret
and
aaa
repnz
stos
xor
jnp
sbb
push
xor
aas
and
inc
mov
xchg
rsqrtps
inc
loop
add
push
sti
adcb
sbb
dec
xor
ljmp
push
jp
in
pop
je
adcl
test
pop
jg
es
cmpl
repnz
or
lret
sbb
jnp
jne
testl
ss
lret
push
addb
inc
out
inc
in
repz
rolb
movsb
lcall
ret
and
adc
jne
out
xchg
xlat
push
mov
mov
adc
cmc
jbe
mov
sub
mov
push
pop
mov
addb
subb
hlt
push
shll
idivl
scas
push
imul
jmp
iret
loope
cmp
xor
dec
cmp
pop
lods
stc
add
outsl
xor
test
int
push
jno
xchg
xlat
ret
xchg
ret
icebp
imul
sub
ds
sti
fdivrs
icebp
push
enter
imul
add
stos
push
ret
cmp
out
adc
lock
mov
mov
call
lret
adc
inc
xor
pop
leave
xorl
imul
pop
test
mov
push
sub
cmpsb
cmpb
fcomip
sbb
mov
push
and
xor
inc
pushf
arpl
mov
or
idivb
js
loop
add
les
xchg
mov
ja
stos
jbe
jle
repz
xchg
or
cltd
push
mov
shll
jge
mov
rcrb
jg
inc
xchg
popf
lcall
jae
stos
mov
testl
cmpsl
stos
xchg
or
ret
sub
daa
das
aaa
xorb
add
jae
repnz
mov
dec
xchg
mov
out
xchg
sahf
addb
int3
add
cli
and
ret
out
xlat
dec
mov
cmpl
inc
std
mov
in
sbbl
dec
and
lcall
and
cmc
jl
test
adc
lds
mov
inc
movsb
aad
xor
xor
frstor
icebp
cld
in
mov
cmc
or
adc
jle
push
ljmp
stc
test
or
jae
ja
inc
mov
jge
sbb
xchg
push
enter
xchg
leave
imul
out
xlat
dec
fwait
stc
jge
ss
loope
fimull
aad
xchg
or
push
call
adc
fcomps
mov
xor
xor
cmp
mov
add
js
pop
jge
cmp
fidivs
fildl
cs
or
pushf
mov
data16
cmp
xchg
mov
pop
push
lods
xor
xchg
loop
faddp
lret
bound
sarl
es
xor
xlat
push
xlat
jo
nop
xor
sbb
in
repz
jl
jg
not
jne
jbe
xor
dec
jns
repz
jle
aas
push
enter
add
mov
sbb
int
adc
pushf
into
in
add
jle
test
cmp
push
inc
lret
xchg
ret
imul
jle
pop
js
pop
outsb
sub
sub
fldenv
testb
dec
sbb
js
stos
int3
cwtl
mov
mov
enter
in
xor
adc
enter
inc
inc
jnp
clc
lods
rclb
ret
mov
lcall
daa
or
je
jnp
cli
cs
sub
jo
repz
jno
addb
mov
in
paddw
cwtl
xchg
sbb
icebp
sub
flds
in
clc
mov
push
push
xchg
inc
add
push
or
leave
or
jmp
dec
sub
cmp
or
sarl
jecxz
lock
mov
mov
push
dec
or
push
adcl
jbe
fwait
scas
mov
dec
arpl
jae
ljmp
xchg
cs
fldcw
fdivrs
push
loopne
rcl
bound
xchg
sbb
mov
fstps
and
cmpsb
es
outsb
mov
sbb
push
cmp
gs
insb
dec
out
pop
adc
arpl
loop
xor
lret
add
sti
add
or
andb
loop
dec
and
sti
inc
pop
andb
fsubrp
xchg
add
outsl
cltd
xchg
and
mov
jl
pop
test
push
addb
mov
leave
andb
mov
dec
cmp
and
flds
les
lock
inc
sub
mov
cmpb
bound
jno
arpl
lcall
and
push
neg
xchg
scas
insb
cld
cmp
sbb
stos
cmp
adcb
scas
mov
fbstp
mov
andb
mov
lcall
or
mov
sbbb
jne
enter
andb
call
pop
cmp
or
ret
sbbb
xorb
in
incb
out
sub
cmpb
rorl
xorb
flds
xchg
insl
xchg
pop
and
dec
push
aad
jnp
inc
push
cmp
mov
jns
das
inc
fdivrs
inc
pop
mov
jns
scas
fsubrl
rol
mov
cmp
mov
mov
and
push
out
pop
cltd
and
pop
jmp
sub
or
pop
filds
inc
movsl
jo
subb
es
test
xchg
push
daa
jno
imul
andb
mov
jmp
jne
adc
pop
push
sub
jnp
imul
cmp
movsb
cmp
andb
jb
sti
sub
out
stos
dec
int
lds
push
icebp
movq
je
and
jmp
sti
mov
jae
mov
das
int3
popf
rolb
mov
jg
or
fildll
jb
in
sbb
xor
aad
loop
gs
lahf
sahf
daa
into
mov
push
add
mov
nop
push
push
in
insl
jp
inc
mov
cmp
cmp
adc
imul
js
cwtl
in
arpl
cltd
fisttps
fldt
out
into
icebp
push
push
push
inc
dec
fildl
stos
xchg
add
rcll
out
aad
psrlw
jge
cltd
outsb
mov
push
jne
mov
cmp
sbbb
sbb
mov
sahf
pop
xchg
je
jbe
cmp
addr16
insb
hlt
add
mov
cld
ja
or
pop
ss
les
and
daa
into
shll
dec
xchg
arpl
xchg
imul
shrb
xchg
aas
inc
xor
sbb
lock
cwtl
jnp
je
xlat
lret
pusha
gs
push
ret
adc
push
enter
inc
add
cltd
cli
jecxz
push
push
mov
int3
xchg
enter
jle
pop
xor
push
in
sbb
pop
jg
or
jae
subl
mov
lock
push
loopne
sahf
jnp
es
fdivl
jne
lock
xchg
add
ret
mov
xchg
mov
insb
add
lcall
aaa
add
lcall
inc
imul
jp
leave
sbbb
addr16
negb
xor
add
loopne
das
jle
mov
ss
lods
pop
repnz
call
jno
imul
xor
rorb
mov
jle
cs
mov
inc
test
jns
dec
jns
xchg
inc
jecxz
dec
pop
ja
adc
push
dec
mov
mov
popa
adc
and
lahf
mov
mov
xor
cltd
jo
mov
mov
jae
push
sub
pop
push
mov
cmp
movsb
push
and
fimuls
xor
xchg
push
sbb
mov
mov
xor
rcrl
xor
lock
push
jp
inc
cli
jle
push
dec
sbb
xorl
ss
xchg
or
cmc
std
fdivrs
push
lcall
mov
mov
ss
outsb
cld
jns
adcb
das
jg
loopne
ss
xor
xor
pop
ret
mov
pop
fsubrs
aaa
mov
mov
jbe
mov
cmp
insb
pop
push
jge
dec
mov
push
push
xor
jbe
and
insb
ret
dec
repz
add
pop
pop
jmp
xchg
mov
jl
jmp
les
rol
jo
mov
pop
jg
subb
gs
into
mov
cmp
inc
and
lret
sti
and
or
leave
jno
jecxz
and
xor
je
fsubr
and
push
dec
loop
cwtl
lcall
das
xor
fstpt
push
dec
mov
outsl
ss
jns
ds
xchg
dec
loope
pushf
xorb
jge
push
jp
and
cmpsb
xchg
push
ljmp
cltd
and
push
dec
add
outsl
add
cld
inc
cltd
ljmp
add
cli
xchg
notl
test
sub
xor
push
movsl
rcrl
sbb
repnz
push
loope
add
divl
jnp
fisubs
pminsw
add
stc
leave
and
jle
mov
dec
inc
cltd
mov
fcompl
push
js
mov
pushf
mov
shll
pop
ja
xor
ja
dec
sub
inc
push
mov
stc
pop
inc
xor
inc
mov
insb
fistps
les
sub
adc
pushl
lcall
sarb
hlt
es
pop
stos
rcll
imul
pop
loopne
sbb
pop
es
xlat
outsb
push
add
adcl
sbb
inc
fdivs
cli
push
pushf
arpl
adc
addl
out
lret
jp
xchg
enter
shrb
mov
cltd
push
sub
jge
leave
inc
dec
ret
jge
je
mov
ret
push
inc
sub
dec
popf
nop
xor
movd
mov
sbb
shlb
sbb
lock
pop
pop
movsb
stos
cvtps2pd
mov
sahf
mov
jl
inc
cmpsb
ds
outsb
imul
adcb
cmp
clc
add
ja
ds
ljmp
popf
pop
sbb
mov
pop
jg
mov
cltd
jo
pop
jmp
xor
dec
sbb
clc
and
aas
shl
lret
jnp
bound
cltd
add
xchg
iret
mov
out
imul
shll
or
xorb
jbe
and
sub
jle
sar
fsub
add
pop
mov
pop
rcrb
push
jb
ljmp
push
or
test
idivl
jae
mov
xchg
mov
leave
mov
out
adc
not
insl
and
add
cmp
jns
int3
sub
test
jecxz
jb
and
mov
jbe
sbb
repnz
xor
cli
sub
iret
lock
mov
or
das
and
int
jecxz
push
ret
xor
jle
push
mov
popa
out
mov
sbb
imul
push
stc
movl
out
repnz
xchg
insb
cltd
push
push
xor
adc
mov
jns
fisubs
jg
fcoml
fisttps
mov
cmp
dec
aas
fs
mov
mov
sbb
fwait
push
ret
out
xor
push
aaa
cmpb
cltd
sub
add
mov
ds
in
mov
mov
in
stos
aas
es
push
jp
cli
xchg
jecxz
and
xchg
dec
sti
mov
les
xchg
cltd
sti
sbb
fisubs
cmpsb
inc
not
pop
out
mov
pop
or
sbbb
dec
push
or
aam
sbbl
mov
daa
sahf
out
test
jns
pop
mov
stos
and
popf
add
into
dec
pop
sbb
lcall
xchg
pop
popa
mov
ljmp
lea
and
mov
cmovbe
gs
mov
pop
shl
push
mov
jp
cli
push
add
jmp
push
dec
xchg
or
jp
insl
pop
pop
sbb
push
mov
fs
lods
pusha
jge
cmc
stos
pusha
daa
jno
andl
std
popa
mov
jp
lret
and
inc
stos
sbb
pop
or
fiadds
xor
lcall
lods
adc
aad
mov
ret
lods
xchg
test
sub
inc
jp
lcall
addr16
lods
xchg
aad
or
imul
aaa
xchg
cmp
add
sbb
leave
jge
ret
mov
test
mov
movsb
arpl
lods
leave
cs
cs
in
fstpt
loope
xor
pushf
inc
test
pop
divb
xchg
cmpsb
int
and
jg
and
test
lds
xchg
addr16
aad
or
pop
jbe,pt
punpckldq
sub
adc
and
inc
dec
adc
jecxz
cltd
sbb
push
jmp
rcr
mov
ja
cltd
sbb
nop
std
repnz
loopne
xor
sbb
imul
sub
fadd
sti
mov
jnp
adc
add
sbb
inc
insb
cmp
es
cltd
add
sbb
jno
lcall
nop
sbb
fldcw
in
xorb
xchg
test
mov
repnz
popl
cltd
in
stos
and
lcall
out
jns
iret
popa
sbb
push
arpl
mov
cltd
pop
movsb
pop
int
icebp
add
and
mov
push
out
add
cltd
mov
movsl
mov
fsub
inc
leave
cs
pushf
add
jb
cli
mov
loope
push
ljmp
es
xchg
xorb
inc
lcall
lret
jp
daa
nop
xor
lds
cmp
jb
lcall
push
xchg
mov
add
mov
cmc
and
mov
push
rcl
push
push
popf
xlat
xchg
notb
lds
sarb
dec
sti
push
std
sahf
das
push
loopne
fstps
jb
leave
jp
popf
pop
push
loop
outsb
push
arpl
xchg
nop
mov
idivl
in
xorl
mov
jmp
dec
xor
xor
pop
push
sbb
push
mov
data16
pop
ret
sarl
jae
mov
or
cmpsb
jmp
repnz
enter
rclb
sub
stos
sbb
insl
and
push
jno
pop
mov
xor
cltd
xor
addb
push
icebp
into
je
mov
fsubrs
sub
push
and
push
mov
mov
mov
sub
xchg
lock
push
cmp
scas
aaa
into
inc
add
gs
icebp
fistps
xor
sub
xchg
and
stc
dec
jns
sub
mov
cmp
fcmove
dec
je
and
pop
aam
jl
adc
lret
adc
sbb
dec
pop
or
sahf
das
jne
out
cmp
and
jl
mov
daa
cltd
push
stos
ss
or
fidivrl
add
int
inc
mov
flds
adc
cwtl
hlt
bound
pop
xchg
pop
imul
add
jl
xchg
mov
pop
mov
adc
push
subl
dec
and
out
mov
dec
adc
mov
and
call
jp
daa
add
mov
push
lods
sub
cltd
adc
mov
and
outsl
inc
push
xor
in
and
sahf
xor
icebp
les
pop
push
push
andl
sbb
imul
dec
pop
mov
repnz
lcall
mov
sarb
jbe
cwtl
mov
xchg
sub
bound
push
int3
cld
cltd
push
idivb
push
pop
inc
cmp
sbb
sub
pop
mov
inc
mov
push
and
cmp
jb
popa
aaa
daa
mov
loop
mov
lods
jmp
out
dec
jns
lcall
mov
jns
and
mov
scas
push
pusha
pop
imul
movsl
cmp
ret
ret
addr16
subl
and
mov
jle
xchg
push
add
jns,pn
stos
outsb
mov
ds
bound
push
leave
sub
or
add
imul
sub
es
cmc
les
lods
sbb
sbb
in
add
int3
int
into
push
loopne
push
sub
sahf
bound
outsb
push
fisttpll
push
sti
into
cmpl
aam
loopne
jns
add
push
dec
fs
and
xchg
fcoms
pop
pop
movsl
push
sub
jns
cltd
adc
mov
aas
cmp
xchg
push
lock
pop
rolb
out
or
mov
dec
xor
or
jae
push
mov
sti
cmpl
arpl
or
add
lret
jns
add
add
mov
sbb
inc
mov
lcall
pop
test
xorb
jnp
mov
sub
daa
inc
xchg
ficoml
dec
xor
pop
ja
pop
in
in
fisubrl
fimuls
das
andl
jae
movsl
stc
mov
rclb
and
lds
pop
pop
inc
jle
sub
dec
jle
inc
xor
push
sbb
lcall
sub
bound
stc
adc
sub
enter
sarl
add
xor
sbb
xor
icebp
sub
or
mov
jae
popa
stos
inc
shll
stos
ljmp
insl
aad
daa
repnz
push
jae
fdiv
ja
inc
mov
je
outsl
repnz
pop
in
jne
aas
xor
cmc
out
sbb
xor
add
inc
jge
ljmp
incb
cmp
cld
repnz
inc
sbb
xchg
cmp
sbb
lret
push
sbb
cltd
je
push
mov
scas
pusha
or
mov
push
jo
outsl
ja
mov
fldcw
sbb
cmc
lock
loope
jle
jae
stc
test
mov
outsl
and
push
aad
jns
mov
clc
mov
dec
pop
push
push
and
aam
imul
bound
cltd
mov
jecxz
je
or
fcomps
fsubrs
jo
xor
jbe
pop
movsb
rcr
jecxz
add
pop
and
inc
sbb
fdivl
loopne
sub
push
jns
stos
push
sub
cltd
jl
mov
stc
pop
cmpsb
xor
aam
cs
jns
mov
int
out
push
xchg
push
inc
insb
dec
mov
in
lret
push
mov
outsl
stc
xchg
test
outsl
push
cmp
sti
ret
addr16
add
mov
pop
pop
xor
je
xchg
pop
jo
xchg
hlt
mov
pop
fwait
xchg
xchg
pop
les
jbe
cmp
repz
scas
mov
push
push
fwait
test
mov
out
ljmp
daa
jne
bound
push
stc
aaa
xchg
push
inc
das
cli
pop
and
stos
lds
push
fwait
add
mov
push
das
dec
push
bound
cwtl
loope
mov
and
aad
pushw
xchg
dec
cmpb
push
aam
xchg
cwtl
adcb
and
push
loope
stc
jb
dec
mov
insb
lret
outsl
sub
push
repnz
jl
lcall
xor
jbe
mov
test
ret
icebp
pop
aam
push
fdivrs
in
rcl
or
data16
mov
outsl
loop
sbb
lock
sahf
add
aad
jecxz
out
cmp
fidivrs
pusha
jnp
bound
rorl
push
lcall
mov
xchg
sbbb
inc
mov
fists
lods
push
ret
xor
xorl
int
gs
cld
mov
lcall
and
add
sub
ss
stc
sub
push
jb
lcall
mov
inc
dec
xor
xchg
mov
ret
sub
outsb
loop
lcall
mov
cld
push
loop
enter
adc
in
xchg
inc
push
sub
test
push
les
inc
icebp
jg
jae
scas
clc
js
ficoms
mulb
jle
inc
and
aad
or
sbbb
and
jmp
cmpb
fucom
cmpb
mov
xor
flds
sub
add
subb
jns
test
xchg
mov
clc
pop
roll
ja
or
push
mov
mov
add
adc
sub
daa
addr16
div
shll
dec
xchg
push
jge
mov
outsb
fiadds
adc
xchg
fdivl
mov
dec
lcall
jns
popf
into
insb
jnp
mov
xchg
sbb
in
push
scas
mov
and
sub
mov
and
mov
mov
sub
sbb
popf
sti
and
add
mov
data16
addb
dec
daa
pop
test
inc
int3
sub
jle
push
into
xchg
mov
aam
dec
sbb
lahf
fstl
fdivp
and
sbbb
popa
sbb
bound
jl
adc
repnz
subb
dec
xchg
cmp
xchg
fadd
sar
shrb
xor
subb
jg
aam
add
ss
dec
subb
into
mov
lock
cltd
enter
add
stos
cmp
pop
aas
mov
test
jecxz
jnp
xchg
cmp
es
nop
add
ja
aam
rcrb
dec
add
mov
subb
cld
and
dec
jl
add
fdivrl
imul
std
xor
scas
stos
xor
imul
add
outsb
stc
cmp
mov
neg
lods
ud0
mov
mov
jnp
pop
test
dec
call
mov
std
cmp
movsb
push
test
xchg
sti
in
pop
popf
hlt
mov
iret
adc
and
out
and
rorb
ja
jge
add
xor
mov
mov
in
movsb
fadds
adc
popw
subb
repz
data16
and
movsl
lcall
ljmp
lods
subb
add
sub
sub
cmpsl
lock
movsb
lret
test
int3
in
or
insb
xchg
stc
sbbb
pop
cmp
cli
pop
sbb
sbb
lahf
stos
mov
enter
add
adcb
loope
cmp
dec
mov
xchg
stos
das
mov
repnz
mov
xlat
push
addb
popf
push
je
or
std
and
nop
loopne
int
sub
rcll
add
cmpb
arpl
mov
mov
xchg
xor
faddl
js
jecxz
adcb
inc
dec
int
push
jmp
xor
mov
inc
add
lea
fs
or
arpl
fcoms
sti
sub
lock
out
sub
orb
adc
inc
and
xor
or
lods
sbbl
movsl
cmpsb
xor
mov
test
sbb
or
in
addb
and
incl
pusha
enter
rcl
rorb
mov
jnp
inc
cmpb
movsb
mov
and
pushl
jne
int
jecxz
out
jg
movl
cmp
loopne
add
mov
cmpb
mov
mov
nop
pop
subb
inc
inc
and
rcll
inc
lret
sbb
add
lahf
jge
aad
xlat
and
mov
and
push
and
fstpl
mov
sbbb
loope
jne
out
subl
push
test
inc
dec
imul
cmc
imul
sub
test
aad
add
out
push
xor
test
dec
xor
xchg
stos
or
inc
lea
cmp
or
pop
xchg
test
lret
sub
rol
inc
popf
addb
and
test
mov
jns
or
out
xorb
push
push
mov
pop
or
or
pop
add
popf
pusha
push
cld
nop
jmp
fildl
pop
sub
out
inc
xlat
cmp
and
ret
mov
sbb
jne
setno
out
mov
in
xchg
ds
data16
fnstcw
inc
je
imul
push
mov
sub
or
xchg
fnstenv
je
iret
lods
push
adc
sub
xorb
ds
add
scas
subb
push
jns
sbb
xor
fistpll
push
adc
adcb
mov
xor
lds
dec
in
push
adc
sub
bound
lahf
int3
pop
jne
into
imul
imull
or
jnp
cmpl
xor
fcmove
mov
lret
add
mov
mov
sti
scas
ret
insb
das
sti
sub
fcompl
dec
lahf
jmp
std
jae
in
inc
jbe
pushl
sbbl
jb
jno
xchg
nop
subb
push
lahf
xor
jnp
add
xor
or
and
or
mov
insl
mov
jne
xor
addb
xchg
xchg
jnp
out
mov
jae
sbbb
sarb
je
cmpsb
dec
xchg
mov
aam
jnp
lock
xchg
cmp
mov
and
nop
and
add
or
call
mov
lock
jb
adc
roll
dec
cmp
mov
scas
fisubrs
subb
xchg
add
jno
cmc
addr16
mov
push
push
jnp
jne
jl
repnz
imul
xchg
inc
inc
cld
mov
cmp
pushf
cs
adc
mov
stc
mov
pop
mov
and
jge
pusha
subb
sub
ret
loop
inc
cmp
sbb
lods
mov
pusha
lds
stos
sub
jge
xchg
ljmp
gs
adc
xchg
cmp
add
mov
hlt
adc
cltd
pop
xchg
mov
jo
mov
adcb
mov
mov
mov
mov
sbb
stos
jnp
jne
idiv
jb
adc
jnp
arpl
jnp
movb
sbb
sbbb
scas
shlb
push
ficompl
dec
pop
sarl
xor
lods
rol
repz
and
and
jg
fwait
sbb
fnsave
ret
xchg
xchg
inc
imul
sti
dec
sbbb
jmp
enter
addb
add
cmpb
mov
lret
adc
cmp
jne
jnp
into
inc
xorb
mov
xchg
push
fucomi
test
ret
fiaddl
rclb
xorb
lock
popa
dec
iret
mov
and
ret
test
add
xchg
cmpb
pop
out
add
mov
cltd
push
in
shrb
es
fsubr
add
test
fsubl
cmpsb
fwait
adcb
adc
jae
sarl
and
subb
mov
subb
mov
test
out
cwtl
push
xchg
sub
sbb
inc
cmp
cld
mov
mov
mov
adcb
and
lcall
cmp
cwtl
pop
or
sbb
repz
mov
sar
xchg
pop
popa
leave
testb
lret
cmp
out
fildl
sahf
in
movhps
or
hlt
mov
add
js
in
roll
shlb
xor
cmp
xorb
aam
xor
arpl
dec
push
loopne
mov
jg
in
pop
pop
fimuls
mull
sarb
and
nop
ret
cmp
test
jecxz
mov
xor
pop
js
arpl
fistpll
xchg
add
andb
outsb
jns
push
xchg
popf
jmp
lods
cmc
xorb
push
pop
jno
divb
push
cli
jnp
push
mov
xor
data16
lea
shl
sub
sub
xorb
call
adcb
aas
test
push
inc
sub
xor
pop
inc
inc
push
cmp
dec
adc
andb
rcpps
cltd
add
int
xor
adc
scas
cld
out
sar
aam
jg
jl
mov
addr16
cltd
xlat
or
subb
popf
div
push
incb
push
loopne
das
adcb
stos
inc
sbbb
loop
sub
movsl
adc
and
jmp
lods
sub
cmc
es
negb
pop
movsb
fldt
mov
rol
push
test
pop
outsl
jnp
loop
stc
daa
push
nop
lock
cltd
scas
outsb
jg
test
jo
mov
dec
and
xchg
lds
pop
sub
lcall
sub
pop
and
cs
push
test
cmp
xor
lea
outsb
fistpl
outsl
mov
or
push
jb
or
push
bound
mov
sub
inc
dec
push
mov
jbe
push
aad
jbe
push
push
std
pusha
popf
fimull
sub
sub
es
imul
insb
outsb
lock
lcall
mov
mov
ljmp
add
sahf
jg
inc
js
adcl
aas
subb
add
lret
les
pop
cwtl
popf
jge
je
aad
adc
test
je
lcall
loopne
pop
pop
mov
add
jp
cmpsb
int3
aad
aas
push
loop
mov
es
add
ja
lret
shlb
cs
imul
mov
and
jmp
add
and
cmpsl
jns
loope
sub
push
inc
jmp
dec
cmc
aam
mov
ret
addr16
or
sub
cli
ds
lods
fiaddl
add
pop
mov
cmc
xchg
adc
imul
jle
jmp
rolb
inc
mov
or
xchg
jns
ret
or
jle
dec
or
mov
jle
std
shrb
fnsave
jbe
mov
je
xchg
and
sbb
jbe
mov
cmc
out
or
pusha
imul
imul
mov
leave
enter
sbb
cld
in
pop
mov
dec
loop
adc
push
cmp
out
mov
pop
imul
dec
jge
std
pop
jge
or
lahf
or
jae
stos
jne
jecxz
loope
cmpb
xchg
and
sti
mov
loopne
test
inc
and
or
xchg
jae
out
dec
jle
and
mov
pushf
inc
in
mov
sbb
ljmp
jle
cmpsb
enter
push
sub
add
stos
daa
and
pop
add
loopne
sti
pop
jns
loopne
sbb
mov
imul
lods
fsts
cmp
inc
mov
mov
jb
lods
dec
inc
jno
stc
mov
in
and
popa
movsl
sbb
pop
push
jo
pop
push
xchg
and
int3
xor
ret
xor
rcr
adcb
sub
mov
pop
jo
mov
fstpt
mov
call
fiadds
mov
ss
mov
dec
out
fs
shll
push
shll
mov
clc
fmull
dec
sbb
mov
int
outsb
sarl
push
inc
sbb
mov
sub
ja
or
xchg
shlb
cmp
ja
jg
dec
lcall
mov
mov
sbb
jno
hlt
cli
and
push
ret
sbb
xlat
mov
or
shl
sarl
sub
adc
arpl
jns
sub
jp
fcomi
pop
fmul
dec
add
loop
lret
lahf
ret
or
add
adc
xor
fnstsw
jo
in
jg
sbb
fdivs
xorb
cmp
cltd
cmp
cs
or
outsb
idivl
cmp
fisubl
ss
mov
pusha
or
pop
dec
cmp
xchg
jge
enter
xor
inc
sub
scas
bound
mov
dec
lock
mov
jns
pop
mov
xchg
bound
jae
js
fiadds
bound
mov
add
xor
popf
xchg
enter
sar
mov
jl
sahf
je
inc
xor
xorb
test
pusha
jnp
xchg
pop
mov
lcall
pop
aas
xlat
cli
loop
and
js
leave
adcb
xor
aad
jp
and
jo
cmc
outsb
mov
jmp
push
ja
fdivr
cmp
inc
sbb
mov
js
testb
sub
sbb
push
cmp
pop
stos
jg
loope
jbe
fcmovnu
scas
cs
andl
int3
fldt
jno
mov
out
ljmp
ja
mov
mov
leave
xor
mov
pop
fdivrl
fcomps
sbb
jnp
sub
mov
add
push
shll
sbb
fmuls
ja
sbb
inc
jns
fstp
test
push
sbb
jmp
pop
lcall
push
sbb
icebp
mov
leave
bound
mov
std
arpl
xor
outsb
xor
ja
xchg
xchg
cmc
cmp
adc
jmp
push
jns
cmpsl
mov
and
mov
jle
and
lock
sti
mov
xor
mov
and
mov
xchg
xor
repnz
dec
push
jo
sub
lock
pusha
push
and
and
out
lcall
push
popl
pop
es
add
stos
sbb
cmp
xor
js
in
mov
lds
cmp
xor
inc
out
push
flds
lcall
push
ds
icebp
cltd
push
inc
jl
add
lret
lods
cmp
sub
add
pop
add
orl
nop
loop
xor
loopne
xchg
xor
add
dec
jge
ss
enter
inc
aam
es
lsl
adc
and
mov
sbbl
jb
mov
mov
xchg
dec
mov
movsb
jns
push
mov
lahf
lcall
daa
ret
jo
jecxz
mov
cmpsb
xor
xor
inc
lods
dec
sub
sub
sbb
out
cmp
inc
jnp
mov
dec
hlt
mov
mov
scas
gs
mov
add
mov
push
sbb
je
pusha
push
jge
and
int
xchg
jg
inc
sarb
ret
in
mov
push
jecxz
xchg
cmp
cmp
xchg
mov
in
test
into
dec
scas
jecxz
jge
add
movsb
add
add
andb
lcall
pop
xchg
jge
sbb
pop
lds
aad
push
jae
xchg
into
bound
pushf
jp
gs
xlat
adc
and
cmp
mov
lahf
inc
fmul
outsl
xchg
leave
mov
and
mov
imul
cmpsl
jp
jmp
xchg
outsl
sub
pop
mov
push
sti
scas
out
lds
shr
mov
lods
xor
pop
push
xchg
adc
jne,pt
push
cwtl
cmp
subl
push
scas
jbe
xor
sub
gs
mov
pop
mov
ret
mov
idivb
push
sbb
push
dec
imull
adc
xor
cltd
in
push
clc
loope
mov
sbb
mov
push
inc
jo
push
bound
addb
mov
lock
mov
jmp
stos
pop
sbb
lcall
pusha
out
cmp
leave
movsb
dec
inc
call
aad
es
mov
js
pop
inc
out
insl
xchg
add
push
or
pushf
inc
jmp
xor
jmp
cld
rcrl
ss
push
xchg
cwtl
and
in
mov
fistps
push
incl
idivl
sub
xor
or
cmp
fiaddl
enter
pop
and
stos
ror
xchg
inc
adc
je
cmp
push
mov
push
inc
adc
in
icebp
fcmovu
lret
sbbb
fs
xchg
sahf
jge
jns
or
mov
movsl
mov
ja
sub
test
orl
cltd
mov
ss
inc
jp
and
xor
xor
ficomps
cltd
add
adc
cmp
jns
sbb
not
add
aaa
push
fadd
xor
jns
jns
add
xchg
les
insb
loope
pop
loop
cltd
ret
setnp
xchg
cmp
out
je
in
add
int3
ret
int
jg
in
pop
ds
jp
sbb
sub
shlb
pop
out
sub
push
sub
lds
cltd
dec
push
and
xchg
push
je
lods
ret
scas
roll
sub
cltd
and
sahf
mul
scas
icebp
enter
out
jne
lds
and
out
jae
sbb
aad
xchg
cmp
rcrl
int3
xor
xorl
aad
test
lcall
js
ljmp
je
test
mov
jle
std
js
add
and
mov
rol
add
test
jle
cs
sbb
fcomps
mov
jl
add
jecxz
dec
cld
int
fwait
insb
cltd
loopne
xor
jmp
adc
ss
filds
js
cmp
jae
fcompl
xor
push
sbb
dec
pop
and
sub
mov
outsb
lea
pop
fcmove
jns
pop
xorl
inc
jle
imul
hlt
scas
aam
pop
fs
cmp
test
enter
add
jg
jbe
xor
imul
cwtl
andb
cmp
pop
data16
sub
ja
xor
mov
pop
out
jnp
cmc
int
mov
xor
inc
adc
and
je
bound
mov
add
fs
mov
clc
push
add
cltd
mov
cld
add
hlt
push
outsb
cs
repz
fbstp
test
and
bound
mov
sbb
rcrb
and
ret
pop
add
nop
xor
test
out
push
mov
mov
jecxz
mov
mov
in
gs
scas
push
xchg
mov
imul
dec
stos
sahf
push
dec
and
nop
popa
mov
cwtl
adc
rcrb
hlt
dec
daa
imul
bnd
mov
ds
xor
mov
imul
popa
aad
xor
rcpps
adc
mov
push
add
or
pop
stc
es
fstpl
fisubrs
mov
out
mov
jo
cld
sub
shrl
out
lds
sub
mov
pop
loop
add
add
and
imul
adc
cmp
js
lcall
notb
dec
cmp
in
mov
cltd
pop
inc
dec
sbb
fdivr
xor
fsubs
sti
cmp
sbb
lods
lret
mov
mov
inc
ljmp
jns
rcrl
divl
mov
les
stos
jns,pt
call
xchg
push
dec
repnz
inc
sub
cwtl
push
push
cltd
jg
mov
test
loop
sarb
sub
sub
imul
fisubl
pop
lock
andb
fildll
jge
aaa
ret
andb
cmp
mov
mov
dec
sub
rep
rclb
add
je
adc
movsl
jbe
pop
sub
ss
fnsave
sbbb
jle
out
jno
cmpb
add
cmp
cmpb
daa
aad
lock
orb
repz
xlat
scas
sbbb
xor
mov
pop
loope
fisttps
xlat
add
inc
arpl
in
sub
adc
add
jb
std
stos
popa
mov
cmp
fs
cmpsl
out
add
jbe
lahf
sti
and
add
bound
xchg
insb
or
sahf
push
and
add
cmp
jg
stc
mov
dec
mov
ss
xchg
jg
sub
and
sbb
xchg
add
data16
jge
xor
adc
mov
stos
lea
sbb
push
and
pop
jle
add
lods
lock
sbb
jg
adc
and
inc
push
stos
addb
leave
sub
sbb
je
xlat
aad
gs
mov
pusha
xchg
into
dec
inc
mov
or
orb
mov
addb
movb
mov
movsb
push
sub
imul
mov
dec
mull
int3
sbbb
cmc
rolb
data16
dec
cmp
daa
lret
arpl
nop
xor
xorb
inc
or
movsb
mov
sub
fwait
mov
pop
add
sbb
or
cmp
xchg
imulb
lock
push
call
sub
inc
les
sbb
fadds
filds
mov
jl
popa
test
subb
call
subb
push
ret
xorl
adc
xchg
mov
xor
dec
loope
add
or
popf
add
mov
iret
adcb
inc
movsb
call
shll
subl
lret
ja
jp
inc
movl
jno
push
mov
sub
fcoml
mov
jnp
roll
cmp
cmc
insb
into
or
pop
outsb
arpl
jg
cwtl
inc
movsl
inc
setp
mov
and
or
aas
xchg
call
out
cmp
repz
adcb
add
adc
mov
subb
and
dec
sub
push
loope
inc
insb
xorb
jge
pusha
push
sbb
xchg
in
es
or
jbe
mov
pop
incl
inc
leave
mov
orb
test
inc
imul
cmp
in
in
lret
adcb
sub
jp
insb
and
adc
mov
fmull
xorb
jg
inc
jns
fadds
dec
andb
cmp
imul
sbb
shrl
fld
add
mov
cmp
orb
ss
and
lret
add
xor
xchg
punpckhdq
aam
mull
mov
inc
inc
mov
jns
jg
and
bound
addb
add
adcl
jb
cld
sub
push
add
inc
leave
dec
je
push
je
inc
mov
inc
mov
sub
xchg
jle
or
cltd
xorl
mov
loop
flds
popf
aaa
test
jae
xlat
std
jae
pop
leave
sbb
mulb
cmp
test
sub
and
cmp
jg
lret
sub
dec
add
xor
push
into
cmp
pop
dec
xchg
jmp
imul
in
push
test
cmp
fidivl
jmp
or
or
cmc
mov
xlat
jecxz
mov
jno
mov
pop
pop
das
int3
aaa
xchg
push
pushf
cs
push
sahf
sbb
push
jecxz
sbb
xchg
enter
mov
pop
out
jp
jp
sahf
push
mov
pop
lds
insb
add
not
aam
adc
cmc
pop
and
push
outsl
jns
fstpl
scas
jae
stc
stc
xchg
frstor
flds
fbstp
xor
fsts
pop
sti
lods
mov
scas
cld
push
sub
pushl
repnz
or
xor
in
add
out
ja
inc
ljmp
js
dec
jle
mov
cmp
or
in
jmp
mov
into
mov
push
mov
xchg
dec
and
xchg
test
addb
lcall
xor
jecxz
std
sbb
jns
xor
push
repnz
ljmp
jne
mov
dec
sbb
add
pop
int3
pop
ret
cmc
call
mov
jo
enter
sbb
xchg
lods
rol
divl
pop
ja
lods
sub
add
jp
push
push
call
mov
js
xor
es
pop
xor
std
stos
adcb
cltd
jmp
js
js
jbe
jo
or
dec
mov
cltd
mov
jl
or
or
pop
or
int
inc
pop
push
popf
push
pop
sub
lock
and
das
sbb
lcall
jp
divb
mov
jecxz
jmp
ret
es
insb
lock
in
push
enter
mov
mov
mov
test
sub
arpl
inc
test
jl
ss
or
and
bound
jae
push
add
lods
rol
movsl
sbb
pusha
shll
push
aam
daa
repnz
orb
push
inc
ljmp
xchg
xchg
dec
pop
jmp
xchg
mov
leave
fs
mov
add
loopne
push
adc
mov
test
mov
arpl
jp
rol
inc
cltd
lahf
pop
orl
xor
scas
std
dec
out
clc
mov
or
dec
out
sbb
loop
cmp
jge
push
mov
jle
dec
mov
sbb
faddl
loopne
outsl
dec
push
pop
frstpm(287
mov
cwtl
jnp
dec
popa
cltd
fs
lds
sbb
lock
and
cli
sbb
dec
cs
add
rcll
jge
movsl
jo
jle
movsl
inc
fs
test
sarb
jo
mov
inc
pop
push
lcall
xchg
mov
jecxz
ficomps
push
cmp
cld
mov
sub
xor
push
adc
sub
lods
jo
sub
jle
pop
jle
ret
lods
arpl
iret
jmp
and
inc
lret
jnp
sahf
fsubl
push
outsb
mov
ja
cld
jbe
sub
sbb
mov
mov
mov
jo
and
inc
jle
repnz
ret
dec
das
dec
mov
lcall
xor
jecxz
in
pop
or
cltd
pop
fdivr
push
nop
and
cltd
rcll
lods
icebp
mov
mov
es
push
lods
lahf
add
cli
mov
xor
adc
lcall
jle
mov
scas
loopne
or
xchg
out
nop
add
or
adc
mov
push
lcall
push
ss
out
test
push
xor
and
stos
push
outsl
pop
mov
and
xor
push
daa
ss
div
mov
lcall
leave
add
std
xchg
pop
sbb
test
adc
jns
pop
mov
xor
cmpsb
les
add
inc
and
cli
gs
jle
repz
outsl
add
clc
shrl
pushf
aad
jne
das
sbb
pop
ja
cltd
aad
pop
cmp
mov
movsb
dec
lcall
data16
inc
repnz
mov
sub
in
add
inc
mov
popf
xchg
inc
pop
jb
add
sbb
push
pop
enter
popa
fstp
adc
mov
in
ss
xor
into
fs
add
add
int3
inc
idivb
mov
jno
test
popf
jmp
cmc
fstps
rcl
jns
inc
sbbl
xor
inc
dec
xchg
jnp,pn
addr16
aad
cmp
jmp
mov
popa
dec
dec
in
jb
loop
lcall
stos
stos
lcall
jbe
js
push
jae
jecxz
das
lcall
xchg
jno
test
cmc
cmpsl
test
add
inc
jle
sarl
mov
mov
push
cld
add
ljmp
cmc
inc
dec
lcall
out
notb
push
adc
lcall
lods
aas
loop
or
pop
and
cltd
dec
js
lret
sub
adc
cmc
push
test
dec
sub
fadds
ret
fdivrl
push
push
loop
sbb
push
dec
adc
cmp
dec
push
push
pop
out
cli
in
es
sbb
push
sub
out
incl
nop
sbb
sub
sbbb
mov
fnsave
pop
mov
cltd
jbe
sub
inc
cs
out
test
jle
pop
xor
dec
movb
cmp
movsb
dec
pop
sub
cltd
repnz
lret
cmpl
out
pusha
gs
fnstcw
sub
lds
fnsave
das
pop
cli
dec
ds
fisubrs
hlt
or
repz
fidivrl
dec
inc
jae
bound
xlat
jge
jo
jnp
sarb
and
jo
jb
jge
fistpll
in
lock
das
xchg
push
stc
xor
or
sbb
pop
sbb
cli
les
push
mov
cmp
push
bound
mov
insb
xchg
add
pop
aad
jp
out
jb
mov
sbb
sti
aaa
and
xchg
dec
xchg
imul
add
sbb
test
jns
imul
inc
pop
cmpsw
add
out
push
mov
fs
xor
stc
mov
or
test
idivb
sbb
jp
popf
xor
cli
nop
pop
imul
push
push
mov
hlt
lcall
lcall
jns
jbe
push
jmp
push
and
ret
lret
and
ja
stc
pop
xchg
sub
test
popf
out
xor
push
out
sbb
mov
pop
icebp
loope
sub
outsl
pop
test
scas
or
in
outsl
xor
xor
dec
stos
jno
cmp
icebp
push
or
cmc
out
int
sbb
std
bnd
shlb
les
in
pop
les
and
push
add
mov
xorb
cltd
sbb
lds
test
add
xchg
int3
mov
inc
jecxz
shrl
xchg
adc
push
mov
dec
cmp
clc
xchg
jbe
dec
icebp
lcall
ljmp
mov
mov
pop
popa
je
sub
push
fldt
ja
adc
cltd
pop
cmp
sbb
es
jns
jp
or
lock
sti
in
xor
sub
ret
rcrl
jae
jo
loopne
lahf
orb
dec
mov
push
or
loop
adc
dec
sub
sbb
add
sub
and
pop
or
xchg
push
add
stos
jle
es
cltd
addr16
aad
add
pop
daa
jnp
in
roll
and
jnp
jmp
fldcw
push
and
enter
mov
mov
sbb
pusha
fiaddl
and
xchg
dec
addr16
pushf
mov
dec
adc
sub
push
fld
sub
stos
insb
jbe
out
fwait
sbb
jp
aaa
jecxz
jns
lret
xor
pop
or
pop
push
dec
push
push
jp
jo
hlt
bnd
xchg
stc
pop
cmp
int
lret
xor
dec
insl
daa
mov
fsubrl
pop
and
insb
sub
outsl
les
dec
not
inc
cltd
sub
xchg
cmpsb
imul
mov
inc
int
lea
cs
adc
pop
pushf
jnp
adcb
add
cltd
xor
mov
cmp
stc
subl
add
shll
push
add
lcall
aad
or
pop
jecxz
xor
ret
fwait
mov
gs
adc
cltd
add
sub
leave
mov
cltd
pop
mov
jo
fsubs
cmc
adc
mov
jno
inc
cld
rcrb
aam
adc
jle
xchg
xor
aas
cmp
inc
in
inc
out
xor
mov
ja
cwtl
and
fs
imul
inc
xchg
jo
xchg
jmp
js
push
cld
inc
dec
mov
push
sub
loope
pop
adc
ja
pop
loop
aaa
add
mov
imul
adcb
ds
cltd
mov
sub
scas
and
mov
aad
adc
xor
adc
sub
inc
cld
pop
faddl
jae
cltd
fisttpll
cli
popa
ljmp
pop
cli
cmp
jns
mov
in
sbb
repz
add
sti
lahf
repz
outsb
rcll
aaa
stc
movsl
pushf
xchg
div
sub
mov
jge
mov
cwtl
lcall
clc
cmp
add
icebp
int
sbb
jne
dec
inc
nop
imul
or
cs
rcll
movsb
mov
out
xor
pushf
pop
jmp
pop
add
add
test
sbb
outsb
mov
sub
cs
repz
pusha
rolb
or
std
inc
push
sbb
test
jb
fldl
shlb
and
jle
xor
ss
cltd
inc
clc
cmp
mov
push
jl
jb
lret
addl
das
loop
lock
jo
ss
leave
pushf
pop
push
sbbl
inc
bound
popf
xor
fbld
rcrb
cmp
scas
addb
sbb
clc
jle
js
ss
mov
jmp
cmpsb
and
sub
jle
mov
lahf
enter
jp
enter
insb
sub
ja
fildl
sub
adc
in
sbbb
inc
jmp
push
ds
loopne
jle
xchg
mov
rcrb
pop
je
lcall
jl
pop
movsb
scas
adc
jle
and
inc
sbb
push
loope
in
mov
xchg
inc
mov
inc
lcall
mov
ds
les
mov
cmp
cmp
jne
add
xchg
ljmp
mov
mov
sbb
adc
mov
jno
push
popa
push
nop
jns
adc
jle
pop
leave
pop
scas
jne
int3
mov
dec
popf
out
fmull
and
fcom
jecxz
icebp
add
xchg
or
cld
in
es
mov
out
cmp
les
mov
pop
add
lea
repnz
lret
mov
and
jnp
and
or
and
lret
movsb
movsb
xor
les
aas
push
dec
inc
test
loop
mov
je
push
fsubr
idivl
jns
lret
cmc
pop
mov
mul
jno
jbe
pop
xor
push
ds
fldl
pop
and
xor
dec
dec
js
repnz
pop
and
loop
ds
mov
jecxz
lret
into
push
in
repnz
sbb
scas
lods
ret
mov
outsb
out
lds
cltd
inc
arpl
adc
lea
out
mov
mov
cmpsl
or
leave
mov
mov
mov
cld
xchg
pop
cmpsl
mov
inc
mov
mov
shr
pop
mul
push
sbb
jo
fildll
scas
xchg
or
insb
pusha
lahf
add
sahf
pop
in
cmc
sti
adc
mov
inc
cmc
add
fwait
add
cmp
insl
lahf
push
xchg
es
fstpl
test
scas
ss
idivl
mov
cltd
sbb
test
insl
jo
cmp
test
inc
stc
arpl
cld
jl
jmp
dec
xchg
add
popa
mov
insb
out
out
sub
cltd
mov
rcr
add
inc
fidivrs
outsb
and
jne
sub
jns
mov
inc
imulb
clc
jmp
and
xor
jge
pop
and
sub
mov
repnz
fwait
adcl
cld
cmp
pusha
test
cmp
out
rcl
daa
ds
shl
mov
add
fistl
mov
lods
add
mov
in
add
push
das
xor
clc
into
inc
shlb
inc
add
lcall
seto
mov
ljmp
push
scas
aaa
and
sbb
lods
jae
cld
jns
sbb
fnstenv
outsb
add
mov
pushf
ja
mov
test
add
and
iret
scas
jle
add
pusha
mov
frstor
movsb
pop
add
pop
imul
xor
roll
pop
cld
add
xor
into
repz
repnz
rcrl
lock
jb
out
cmpl
cs
sbb
or
xor
xor
sub
nop
cmp
sub
jecxz
roll
test
cmpsb
jnp
pop
pop
movsb
in
add
push
sbb
and
push
in
ljmp
inc
and
rcll
inc
je
lock
cwtl
sahf
xchg
out
push
pop
cmp
jecxz
outsl
shll
or
sbb
out
popf
add
adc
jle
mov
cli
jns
ret
rorl
cltd
ror
mov
inc
pop
jmp
ljmp
push
sti
adc
scas
lcall
or
adc
nop
test
jle
gs
mov
test
pushf
xlat
cwtl
xlat
out
imulb
lods
push
cmp
pop
add
mov
rclb
dec
stos
sub
cltd
imul
or
cwtl
das
sbb
sub
xor
xchg
jnp
mov
int
cltd
inc
push
pop
outsl
cmp
jns
test
repz
out
mov
les
inc
in
popf
sbb
xor
pop
ds
pop
push
imul
lahf
outsl
jns
daa
popf
sbb
in
xchg
pop
stc
int3
xchg
andb
enter
and
repnz
div
jno
xor
out
xor
xor
xor
sbb
outsl
loopne
mov
aaa
push
sarl
and
and
ret
dec
xor
sub
sub
daa
bnd
fidivs
loope
add
or
out
mov
jne
ror
or
pop
rep
movsl
push
imull
imull
je
in
outsl
ds
shr
push
addr16
fisubl
sub
push
sti
pop
mov
aaa
jae
ds
push
sbb
add
xchg
dec
icebp
cltd
daa
ret
ret
std
push
push
add
sub
out
lds
stc
or
xchg
add
lcall
xor
mov
xchg
and
inc
sub
ret
jb
push
jg
out
pop
xchg
push
inc
jl
in
jbe
jle
aam
lcall
lods
insl
ds
mov
mov
mov
cmp
push
mov
loop
adc
and
aad
mov
push
in
pop
push
sbb
mov
cli
fs
jo
adc
lcall
sbb
xchg
cmp
nop
les
add
cmp
imul
lret
rcrl
movsl
mov
cmp
and
and
dec
ret
cwtl
xor
lds
cli
jg
jne
dec
js
push
cmp
push
fisttpl
adc
sti
test
push
cmp
adcl
mov
push
sbb
jecxz
pop
xor
push
mov
aas
pop
fcmovbe
sarl
pusha
mov
xor
pop
sbbb
and
ljmp
push
pop
test
push
testb
sahf
das
jle
lcall
pop
loope
xchg
sti
aaa
aas
imul
adc
jl
cmp
stc
cltd
xchg
add
aad
popa
push
jo
or
vmread
lcall
dec
jle
stos
xor
aaa
xor
pop
or
pop
add
in
jo
mov
dec
push
push
movsb
ret
push
rolb
xor
mov
and
jmp
xchg
mov
jo
fcom
mov
addr16
roll
insl
jle
push
add
repnz
pop
mov
ds
stos
dec
bnd
adc
inc
insl
loope
push
mov
xchg
fistps
dec
dec
repnz
sbb
add
imul
movsl
ret
stos
jg
loop
scas
lcall
adc
add
pop
inc
stos
xchg
addr16
push
pop
pop
sub
test
jbe
dec
dec
jl
cltd
xor
dec
lods
popf
aam
dec
jmp
jle
push
rorb
cmp
wrmsr
adc
pop
add
inc
popa
inc
jbe
mov
push
xchg
test
cmp
sbb
cltd
push
cmp
lods
lcall
mov
mov
inc
push
es
jmp
insb
mov
pop
mov
xchg
lcall
in
mov
in
mov
push
jg
jle
out
repnz
adc
inc
rolb
push
push
sub
jecxz
aaa
sarb
out
inc
and
imul
and
call
xor
dec
scas
sarl
jecxz
nop
mov
call
sbb
cmpsb
add
or
pop
pop
hlt
cmpsl
stos
sbb
data16
jo
cltd
notb
test
popf
fmul
and
lcall
stc
lret
lods
ljmp
push
ror
stos
jle
lcall
nop
push
rcr
xor
out
xor
mov
add
imul
pop
inc
jno
and
add
sub
cli
inc
sub
int
pop
pusha
clc
xchg
mov
sbbl
ret
outsl
add
jbe
lcall
and
stos
pop
cltd
push
mov
xor
add
cli
push
mov
mov
shll
in
divl
jecxz
sbb
cltd
cmp
scas
decl
in
into
int
in
addl
ja
sti
mov
subl
and
cli
push
fsubrs
mov
in
mov
fdiv
lret
add
inc
lds
sub
fisubrl
popa
pop
push
pop
inc
rcrb
repnz
les
push
shrb
pop
xchg
jae
loopne
add
push
mov
clc
imulb
xor
mov
cld
lcall
jp
sbbl
dec
les
enter
inc
inc
xchg
in
scas
arpl
ljmp
add
jge
and
cmp
mov
and
faddp
mov
fstpl
insb
cli
cmp
test
pop
scas
xchg
fwait
out
mov
mov
jns
add
jbe
mov
sar
sub
fcomps
std
or
out
push
sahf
and
xor
sbb
fisttpll
mov
mov
push
mov
ret
adcb
fbstp
inc
subb
std
xor
test
add
xchg
pop
adc
stos
inc
pusha
pop
lods
jle
subb
fisubs
aas
inc
push
xchg
jp
adcb
sbb
out
xor
add
and
ljmp
mov
lcall
mov
jmp
pusha
mov
out
in
test
repnz
push
addb
or
lods
xchg
in
cmpb
lcall
flds
and
sbb
dec
mull
xor
jecxz
cwtl
add
adcb
cltd
or
jle
mov
das
test
or
shll
adc
subb
inc
call
push
mov
adc
fwait
hlt
add
stos
mov
lds
cmp
jg
sub
int3
push
movsb
repnz
sbb
subb
add
jns
flds
add
inc
pop
scas
pop
fisubrs
repnz
bnd
cltd
jecxz
idivb
out
and
cltd
push
inc
aam
addr16
lea
push
pop
ja
lcall
int3
flds
inc
jecxz
push
mov
add
lret
xchg
stos
sbb
lcall
add
loopne
arpl
pop
jmp
xor
inc
cmp
lahf
or
sbb
dec
dec
jb
pusha
test
fs
mov
popa
std
pop
push
and
xchg
pop
pop
ret
out
fadds
jae
mov
lods
testb
leave
insb
pop
add
ljmp
sarb
push
jge
mov
jg
cmp
sti
ja
add
jns
out
mov
ret
loope
ret
xchg
jge
add
push
push
ja
push
sbb
adc
xchg
push
mov
je
lret
std
inc
aas
mov
mov
into
ljmp
mov
stc
lds
dec
jne
mov
xchg
and
mov
insb
dec
imul
fsubs
cltd
sahf
xor
imul
ljmp
pop
or
fstpt
xor
push
xor
imul
jns
nop
lds
aaa
lea
scas
mov
rcrl
cmpsb
jbe
mov
push
mov
jmp
daa
cmp
ds
int3
xchg
cli
cmc
jns
mov
add
add
scas
sbb
mov
popf
lods
mov
xchg
sub
das
rcll
lcall
jecxz
adc
jo
add
lcall
out
bound
push
mov
and
adc
jle
lcall
sbbl
arpl
jb
dec
push
xchg
ja
mov
mov
cmpsb
lcall
jae
push
sbb
lcall
pop
repnz
popf
push
pop
sub
ds
push
insb
mov
loop
sub
fsubl
mov
cli
stos
loop
sub
sbb
pop
push
add
push
adc
jge
and
in
jge
sub
push
aaa
and
cltd
aad
adc
adc
sub
xor
cmp
adc
push
ja
fidivrl
sbb
xchg
xchg
jecxz
mov
mov
lahf
push
scas
add
imul
inc
dec
enter
jne
out
inc
std
cltd
sbb
leave
aas
push
or
data16
xlat
lret
dec
or
subb
std
jae
mov
push
mov
xlat
push
xor
mov
cltd
push
fidivs
sub
dec
mov
icebp
xchg
and
add
sarb
pop
sub
enter
subb
sbb
dec
adc
mov
or
xlat
jns
bound
add
loopne
rol
loope,pt
mov
jle
xor
add
jp
test
inc
inc
lret
xor
adc
js
push
in
lret
leave
sti
sbb
stc
xchg
inc
sub
rcrl
jo
std
inc
push
or
subb
dec
outsb
sbb
cmp
sti
enter
call
mov
inc
lock
pop
push
fidivrs
jmp
xchg
cs
mov
sub
xchg
ficoms
pop
jge
sbb
jnp
sub
lock
xchg
sub
test
sar
mov
je
hlt
ja
cltd
xchg
rol
jmp
bound
jge
cltd
ja
lds
movsl
mov
cmp
lcall
loope
cmp
sbb
fbld
xchg
sbb
xor
in
mov
test
lret
add
sbb
sub
iret
push
sbb
dec
jmp
and
push
std
cmp
push
ret
insl
ss
push
and
jp
and
clc
pop
jbe
ret
or
jecxz
inc
and
les
negb
fwait
lods
mov
mov
jg
notl
sbb
pop
add
mov
jle
sub
es
enter
fisttpl
addl
nop
icebp
jle
and
jae
das
and
ljmp
sub
lds
icebp
xor
imul
ljmp
loop
mov
fisubrl
repnz
imul
clc
jno
mov
jnp
mov
dec
pop
cmc
jns
xchg
movsb
add
fistpll
in
push
mov
jbe
dec
dec
xchg
stc
loop
mov
addb
jne
mov
jb
out
push
fmuls
jp
shrb
xchg
mov
jo
push
out
xor
cmp
fmuls
or
inc
lret
cmp
cmpsl
or
cmpl
fadd
pusha
cmp
insl
jns
sub
rcrl
push
jb
jp
in
ja
cmpsl
adc
ja
add
mov
jle
insb
in
sbb
and
sbb
mov
mov
jnp
jne
jnp
popa
fstpl
mov
jae
in
sub
jo
js
imull
popa
inc
out
sbb
inc
fnsave
cmp
adc
movsl
cmp
mov
sub
rorl
lods
lea
sub
and
stos
or
sbb
movsl
dec
movsb
stos
xor
inc
fisttps
and
pop
stc
in
pop
cmp
lcall
adc
divb
scas
and
dec
dec
mov
pushf
push
mov
cmpsb
xor
cltd
ficomps
mov
int3
jp
sbb
inc
ds
loope
push
lahf
cmp
pop
inc
jne
cmp
push
xor
jns
add
ja
pop
jp
add
idiv
imul
cmpsb
pop
push
xor
mov
pop
or
negb
jp
addr16
jp
jns
inc
stos
inc
sbb
jle
pusha
jmp
lock
jg
sbb
or
imul
jbe
sub
mov
lret
adc
sub
mov
sub
jge
pop
sub
mov
jbe
and
push
add
imul
subb
idivl
out
sahf
dec
lods
loop
fidivs
and
cli
ret
inc
sub
mov
xor
outsl
enter
rcrb
jnp
lock
sbb
cwtl
xor
fisttpl
sbbb
pop
pop
orl
shl
fwait
and
push
scas
mov
scas
mov
sbb
fidivrl
xor
push
repnz
push
and
mov
xor
cmp
imul
mov
add
and
dec
lods
jmp
xchg
andb
lcall
fnstcw
test
jle
add
outsl
mov
push
stc
xchg
mov
mov
repnz
sbb
les
into
xorl
in
cs
push
inc
add
jns
cmpsl
mov
mov
and
push
mov
cmc
std
orl
mov
and
aad
scas
mov
cltd
nop
sahf
int
mov
and
push
ss
mov
ljmp
sub
fistps
fcoms
popa
in
inc
push
push
push
stos
xor
out
xchg
gs
lcall
cmc
xchg
mov
call
sahf
cmp
push
sbb
and
jbe
lods
pop
sub
mov
mov
out
push
mov
jg
leave
and
sub
jle
stc
mov
pop
jge
nop
lock
push
add
imul
cmpb
mov
mov
mov
xchg
adc
adc
fcmovnbe
sub
pop
jecxz
push
add
xor
add
lcall
enter
jnp
loopne
jl
loop
ljmp
ret
and
sahf
andb
ret
jl
jg
cmp
int3
ror
std
xchg
sti
jecxz
xorb
jp
or
loope
or
inc
orb
mov
xor
jp
and
mov
orb
add
pop
icebp
cmp
and
call
mov
inc
movsb
fidivl
flds
or
mov
aaa
jecxz
dec
subb
mov
adc
or
icebp
or
cmpsl
inc
xor
xorb
push
xor
and
inc
sti
fsubrl
mov
and
daa
roll
lahf
popa
inc
subb
push
out
roll
or
push
adc
push
iret
inc
inc
lcall
les
dec
add
andl
inc
adcb
dec
lahf
push
jle
sti
lret
or
negb
inc
push
subb
xchg
xor
xor
rcll
mov
and
test
sti
push
lahf
inc
fwait
or
or
js
rol
add
nop
stos
jae
mov
and
push
jbe
pop
push
jg
lcall
cmpsb
jno
cmp
or
addb
pop
jg
rorl
lds
push
cmp
ds
jle
xchg
xor
mov
sbb
subb
xor
stc
outsl
adc
ja
rcll
and
pop
addr16
mov
dec
mov
ret
jnp
inc
or
test
jae
add
push
jge
pusha
sub
bound
jns
andb
mov
int
lea
insb
stos
xchg
adc
jl
cmp
jg
cld
divl
jmp
dec
test
jnp
adc
stc
push
mov
es
dec
and
mov
or
cmpsb
icebp
lcall
test
outsb
subb
test
in
inc
sub
nop
movsl
loopne
jecxz
xchg
mov
cmpsl
or
nop
xor
je
mov
adc
inc
pushf
stos
not
subb
shll
pop
dec
jne
lock
mov
into
shl
jnp
je
fidivl
push
push
pop
movsl
mov
cmp
adc
or
lods
xlat
inc
scas
add
out
and
test
push
ja
sbbb
ljmp
mov
jg
mov
mov
dec
mov
inc
jl
movsb
add
jp
cs
ret
sbb
xor
out
cmp
add
jne
dec
xorl
jmp
cltd
push
imul
push
sarl
xchg
ja
lcall
sahf
rclb
sbb
add
push
aaa
jae
aam
cs
jg
cs
fsubs
jg
inc
lds
lock
in
loopne
mov
jge
jb
aaa
jecxz
mov
jp
ds
add
repnz
jae
fidivs
cmp
mov
test
nop
cltd
imul
dec
lds
mov
mov
jge
sbb
int
cltd
mov
push
sti
xchg
mov
in
in
ret
aam
std
mov
adc
leave
insb
ds
jp
xor
stc
in
ror
lods
jns
fidivrl
hlt
cmp
jno
rcrb
jbe
cltd
push
ss
in
addr16
lds
ret
std
outsl
add
jecxz
popa
xchg
test
enter
push
jae
bound
dec
inc
push
repnz
sbb
cltd
xchg
jns
xchg
sbb
push
daa
js
jg
das
xor
adc
not
xchg
jo
subw
test
xchg
ret
lret
and
inc
insl
xchg
xor
fimuls
and
jno
dec
outsb
scas
or
push
pop
fldl
inc
lahf
ljmp
loopne
sbb
mov
xchg
jns
push
and
mov
cmp
xor
pushf
pop
lret
inc
shlb
loopne
cmc
ret
sub
jle
pop
test
aaa
adc
push
or
jb
mov
cmp
fstl
lret
loop
lcall
jns
mov
hlt
and
and
xor
movl
ficoml
lahf
push
nop
lods
addb
pop
jg
mov
push
cmc
lea
test
in
jae
mov
test
sub
sub
fdivrp
cmp
leave
addb
shl
movsl
jbe
mov
in
rclb
shlb
js
jle
push
jl
ljmp
cltd
movsl
xchg
push
cmp
or
push
data16
xor
ret
and
mov
imul
push
cltd
inc
test
roll
int3
mov
xor
data16
test
repz
or
and
add
push
ud0
jle
hlt
lahf
add
repnz
jle
jne
jg
ret
add
test
xchg
adc
into
dec
shrb
sub
and
in
popf
rorl
leave
pop
cmp
sbb
bound
in
fdivl
mov
inc
sti
push
scas
sbbb
xchg
sub
add
cld
cmp
js
das
and
jecxz
lret
lods
and
cltd
xor
jns
es
idivl
in
outsl
mov
cltd
lods
jge
pop
scas
mov
outsl
or
je
jp
xchg
mov
push
xchg
push
out
push
adc
out
sti
inc
adc
cltd
repz
inc
xchg
or
imul
mov
fbld
cwtl
addr16
cmp
and
jp
mov
incb
mov
pop
jle
jmp
es
push
in
sbb
sbb
rcrb
mov
pop
leave
xor
and
outsl
jns
sahf
and
mov
test
testb
xchg
dec
loop
aaa
outsb
xcrypt-ecb
cmpsl
dec
roll
and
xchg
mov
xchg
rcll
dec
ja
fstps
mov
das
adc
outsb
xor
xorl
sarl
adc
addb
sbb
cli
nop
lcall
aad
sub
inc
mov
jno
jns
daa
cmp
pop
add
lock
lfs
cs
sarb
cmp
js
and
push
inc
mov
xor
mov
lcall
loopne
imul
subb
out
sarb
scas
and
aas
cmp
mov
add
jae
shll
ret
inc
cmp
xchg
ret
jg
xor
pop
test
push
mov
in
aad
std
aad
clc
ja
xchg
push
xor
scas
push
jle
dec
cmp
adc
shrb
cltd
pop
add
push
lcall
xchg
add
pusha
mov
sub
int3
add
in
mov
outsl
negl
jb
and
lret
popf
pop
scas
mov
dec
or
add
sub
xor
lcall
adc
sbb
out
es
xchg
sub
jge
mov
and
shll
gs
aas
sbb
cmp
into
and
aaa
stos
mov
scas
fisttps
lea
mov
pop
cmp
or
or
cmp
cmp
mov
movsl
add
lock
mov
outsl
out
daa
sbb
and
add
push
cld
scas
lods
jmp
jecxz
fildll
fnstsw
push
sbbb
mov
les
add
loopne
pop
xchg
jle
inc
outsl
aam
sub
add
lahf
repnz
pop
js
scas
iret
sbb
aas
push
push
adc
jb
pop
mov
jbe
inc
incl
pop
xor
cltd
pusha
xor
push
sbb
fwait
stos
outsb
jnp
loop
push
lret
adc
aad
mov
imul
push
mov
pushf
sbbb
or
push
lcall
push
shlb
mov
leave
mov
aad
mull
lea
inc
mov
adc
mov
mov
inc
enter
addb
sub
mov
xchg
jns
ret
cwtl
push
and
dec
adc
add
jle
inc
xor
sub
push
sub
cmp
ja
sub
es
jb
and
jo
cwtl
popa
ja
sub
cmp
xor
std
cs
xchg
pop
jbe
pop
inc
cltd
and
sbb
test
jge
lahf
movsl
jo
sahf
jo
cltd
jmp
pushf
in
repnz
push
mov
add
cmpsb
cmp
and
jae
in
inc
lods
inc
mov
cltd
or
addl
mov
add
rorl
cmc
lret
or
mov
cmp
lcall
add
dec
jp
xchg
jb
imul
cmp
outsb
lcall
in
and
ret
lret
enter
testl
or
imul
cmp
lcall
cmp
fiadds
pop
loopne
inc
fcoms
and
jbe
pushl
pop
pop
imul
cmp
and
shll
in
repnz
mov
cltd
pop
mov
push
xor
nop
lcall
and
loop
and
mov
fprem1
mov
cmp
sarb
call
mov
dec
jne
pop
mov
pop
sub
mov
xlat
sub
push
jge
mov
ficompl
enter
mov
sub
mov
mov
mov
out
js
flds
ror
push
in
mov
loope
and
punpckldq
adc
or
icebp
scas
daa
out
mov
jo
fsubrs
mov
test
xchg
xchg
add
dec
and
out
inc
inc
mov
jae
dec
mulb
je
rcrb
lock
inc
or
aaa
dec
fstpt
sbb
cmpb
lods
adc
mov
push
add
xor
push
mov
jg
mov
jns
adc
lcall
popl
sahf
in
xchg
iret
inc
push
jne
and
imull
xchg
aaa
sub
fmuls
orb
or
adcb
mov
aas
testb
jns
rcrb
fs
dec
jnp
js
je
test
arpl
out
mov
sarb
out
mov
loopne
fildl
and
arpl
jecxz
and
xchg
mov
addb
mov
xorb
jle
cmp
repnz
lret
or
mov
adc
xor
sbbb
in
mov
cwtl
inc
dec
repz
sub
scas
addb
outsl
in
cmc
addr16
imul
in
addb
and
adc
gs
icebp
xlat
subb
aas
pop
mov
mov
pop
in
loopne
and
dec
jp
adc
pusha
fsincos
js
jnp
pop
xchg
jbe
inc
jnp
pop
fdivrs
mov
shrl
xchg
scas
dec
cmp
dec
lret
and
mov
xchg
shrl
jnp
mov
add
lock
mov
subb
mov
shrl
out
xchg
adc
addb
in
add
orl
mov
push
inc
pop
add
pop
aad
insb
in
imul
or
mov
xor
loope
push
dec
arpl
push
jg
inc
orb
adc
cs
jmp
mov
lods
orb
xlat
cmp
enter
out
pop
stos
jnp
xor
subb
ret
push
gs
jns
sub
popa
sarl
fs
sti
in
ret
movsb
filds
hlt
je
inc
int3
mov
mov
or
dec
aad
add
pop
ret
and
int3
sub
dec
stos
out
xchg
or
push
fs
ds
jge
imul
add
pop
jg
push
xlat
push
adc
test
cld
mov
and
insl
out
push
push
jnp
mov
inc
cmp
dec
sub
sti
jl
cmp
mov
test
icebp
outsl
sbb
out
outsb
xor
push
jb
adc
pop
leave
push
fsubr
nop
push
cmp
xor
push
call
cwtl
pop
jge
and
cmp
bound
pcmpgtd
imul
push
mov
adc
sbb
stos
inc
xchg
data16
cli
cmp
addb
js
andb
inc
rorl
leave
mov
inc
lcall
xor
adc
cwtl
push
in
or
xchg
and
sbb
jge
addb
ret
es
mov
pop
cmp
scas
aaa
pop
adc
push
enter
in
fbstp
orb
jbe
or
xor
adc
jp
mov
jae
sub
add
shl
or
nop
frstor
repnz
fsubrl
jo
aaa
mov
fistpl
mov
inc
push
clc
incl
ja
aas
adc
pop
outsb
mov
dec
ret
mov
flds
leave
hlt
adc
mov
or
xchg
inc
ss
add
dec
aad
test
adcb
mov
testl
xchg
add
mov
cmp
enter
cmpb
push
popf
adc
xor
aad
popl
push
jnp
roll
push
sar
subl
adc
mov
jnp
test
ja
and
xchg
xchg
or
jge
adc
leave
push
push
das
mov
movsl
inc
or
lods
mov
aaa
xor
loopne
shr
dec
xchg
add
mov
jg
movsl
leave
in
ljmp
pop
xchg
lods
lock
stos
mov
pop
add
subb
dec
or
jle
data16
stos
dec
inc
pushf
sti
dec
inc
xor
mov
or
sbbb
fcomps
jl
iret
ret
pop
mov
test
insl
mov
ret
repnz
mov
je
ret
bound
fs
orb
rclb
mov
test
add
fdivp
orb
dec
mov
outsb
scas
xlat
mov
mov
imul
adc
decb
sbb
add
inc
mov
andb
mov
cmp
jge
jns
add
jmp
mov
xor
imul
add
arpl
out
mov
inc
lret
lds
inc
pop
dec
jae
test
and
xchg
inc
xchg
adcb
add
mov
subb
cmc
bound
addb
pop
push
sub
imul
pop
ss
sbbb
loop
fwait
clc
inc
movb
leave
mov
cmp
pop
fcoml
mov
jnp
mov
jb
jb
call
push
lcall
lods
or
mov
xorl
nop
mov
ret
mov
mov
or
push
mov
xchg
jg
pop
dec
sbb
lret
sub
xor
xor
arpl
add
pop
mov
popf
andb
xchg
and
pop
popa
imul
pop
outsb
xchg
jmp
jle
outsl
jnp
ds
mov
push
xchg
xorb
inc
popa
fildl
mov
jmp
add
je
in
int
mov
inc
jnp
push
mov
and
stos
sbb
es
xchg
jnp
shlb
jg
xor
adc
jl
xchg
and
subb
ficoms
das
push
adcb
in
int
stos
xor
sbb
mov
sub
pop
out
outsl
shl
adcb
pop
xor
orl
mov
lcall
inc
imul
addl
ja
xorb
lret
xchg
mov
xchg
and
mov
xor
sub
cmp
sbb
pop
pop
cmp
lret
mov
push
mov
into
cmp
cmpsl
aas
xchg
mov
fs
sbbb
lret
fstps
jg
jg
loope
mov
or
adcb
sahf
testb
add
xorb
pop
or
clc
mov
xorb
push
jnp
iret
lds
mov
and
insb
dec
mov
jnp
adc
je
mov
or
jo
repnz
test
mov
sbbb
mov
rcrl
addl
inc
lods
repz
popl
xorb
shr
rorb
sbbb
fdivrl
add
jno
lds
fs
lret
repz
sub
andb
addb
push
and
call
push
xchg
pop
mov
add
cwtl
sub
xorb
jo
mov
xchg
or
xchg
movsb
repnz
js
pop
xchg
andb
pop
dec
stos
mov
pop
push
xchg
push
lods
push
stos
jbe
stos
cs
clc
and
cltd
dec
mov
inc
jnp
faddp
js
cmp
jmp
stc
push
mov
jae
adc
ret
inc
outsl
jg
subb
test
xor
dec
in
inc
add
inc
subl
nop
jg
icebp
shr
bound
mov
in
jnp
cmc
jbe
in
aad
jge
aam
or
jnp
xor
aas
push
int
jl
and
out
push
add
and
insl
aam
pop
inc
inc
jne
mov
stos
cmp
rclb
inc
aad
push
std
aad
sbb
sbbb
inc
aam
lcall
pop
mov
push
lds
lcall
mov
pop
aad
popa
aad
or
xor
sub
xor
outsl
sbb
les
adcl
je
add
xorb
pop
xlat
lcall
ja
leave
in
jb
xor
cmp
jns
push
sbb
es
jbe
mov
jae
adc
and
icebp
popf
xor
pop
or
xlat
lock
mov
cmc
or
mov
lret
fcmove
lock
testl
popa
fistps
sti
xchg
push
adc
adc
dec
sbb
addr16
add
idivl
in
mov
test
test
jecxz
ljmp
imul
das
lret
mov
jno
cld
clc
add
ret
push
ret
lret
pusha
lea
sub
push
sub
aad
xchg
add
jp
inc
mov
xchg
loop
hlt
mov
mov
nop
pop
gs
out
mov
test
aam
not
dec
jl
and
sub
lret
cld
out
outsb
push
popa
lret
popf
push
pop
fistl
outsl
into
fcompl
lock
jnp
pushf
loopne
mov
push
inc
lods
call
fwait
mov
push
inc
add
add
sar
scas
push
cld
adcl
dec
clc
cmpsb
xor
add
adcb
iret
xor
enter
stos
sbb
lahf
aaa
je
or
scas
adc
out
sbb
std
mov
shrl
lahf
mov
addb
in
xchg
addb
sbbb
int3
xor
fnstcw
add
pop
repz
mov
xchg
mov
adcl
shll
jge
popl
js
xor
fadds
push
cmpb
outsl
sbb
int
mov
pop
push
or
imul
or
lds
jae
cmp
lahf
mov
xchg
mov
dec
cmpb
mov
add
outsb
testl
jp
lds
addr16
je
dec
fs
xorb
pop
xchg
movsb
aad
or
and
add
nop
lret
call
jne
js
mov
pop
cwtl
jae
xor
dec
outsl
mov
xor
clc
sbb
xlat
pop
fs
or
cli
push
popa
addb
mov
sti
jb
mov
xor
cmp
and
jae
add
sahf
fcomp
icebp
adc
fs
inc
sti
in
mov
ja
cmp
pushf
loop
pusha
mov
roll
inc
cltd
in
iret
pop
mov
lcall
lret
or
out
lds
jnp
push
dec
pop
in
jle
movsb
mov
adc
paddusb
sbb
jo
xchg
lods
xchg
hlt
mov
xor
test
mov
je
and
or
subl
imul
rorl
enter
jmp
mov
repnz
pop
mov
fidivl
xchg
cwtl
das
lret
mul
repnz
rcll
sub
shl
aam
jnp
jns
lea
lcall
pop
mov
sbb
add
sub
push
lds
stos
stc
add
faddl
icebp
jns
mov
add
daa
pop
lcall
aad
and
lcall
jo
repnz
jp
lds
cmp
imul
shrl
orb
mov
lcall
repz
js
pop
sbb
dec
jns
daa
and
mov
inc
int
cwtl
arpl
loopne
push
repnz
xchg
add
rolb
jg
lds
jl
jle
pop
cwtl
adc
adc
fbld
arpl
and
xor
scas
sub
xchg
xchg
aas
jg
les
push
bound
js
push
fcom
jg
add
jb
aad
xor
lcall
mov
xlat
sbb
push
or
data16
push
bound
frstor
dec
sbbb
das
in
sbb
sub
sahf
cmp
xor
fisubs
adc
jle
cmpl
ja
out
rolb
xchg
sub
fistps
test
pop
adc
pop
repnz
mov
lds
add
cltd
out
inc
jns
out
out
push
out
inc
pop
icebp
fldl
inc
xchg
mov
or
sub
push
pop
aaa
cs
and
xor
mov
mov
dec
nop
adc
xchg
inc
cltd
and
push
or
stos
inc
leave
sti
test
cmp
dec
xor
pop
loop
ss
mov
pop
aaa
xlat
xchg
sub
das
cltd
dec
xchg
ret
bound
sbb
insb
fisubl
es
xchg
jge
mul
push
xchg
mov
mov
pop
cmp
jns
adc
jne
call
jns
sbb
sbb
pop
and
mov
adc
aas
stc
sub
out
xor
sub
dec
xchg
push
mov
stc
inc
inc
es
and
lods
inc
jl
lock
int3
loop
sti
pop
in
cli
arpl
cmp
cmp
cmc
into
repnz
add
inc
xchg
jbe
sbb
lcall
lock
hlt
aad
das
enter
sbb
loopne
rcl
mov
sbb
arpl
jns
mov
jle
xlat
lcall
ret
dec
out
xor
addr16
adcb
daa
xor
cli
fnstcw
jg
cmc
in
mov
pop
aaa
aad
cmp
inc
cs
in
and
mov
bound
or
outsl
cltd
jg
cmp
enter
xlat
adc
rsm
inc
mov
sbb
nop
xchg
loop
out
daa
lds
rcr
test
sbb
fistl
pop
in
xchg
test
mov
fistpl
pop
fsts
sbb
loop
sbb
push
int
inc
sub
cld
cmp
lcall
into
es
bound
int
sub
inc
mov
lods
ds
push
push
test
add
xor
sbb
cmc
jle
scas
insl
xchg
or
adc
call
arpl
nop
or
fwait
pop
sub
out
lods
sub
cltd
xlat
clc
loopne
and
cli
pop
in
clc
out
cmp
add
testl
lock
mov
push
xchg
insb
lcall
xor
sub
lds
aaa
xchg
sti
jmp
push
dec
iret
jns
test
clc
mov
pop
ss
sub
xorb
js
adc
xor
push
repnz
jbe
push
xchg
inc
sub
jp
out
sarl
rcrb
or
or
jg
hlt
cmp
xchg
lds
add
fiadds
pop
jo
pop
adc
inc
stc
fcompl
xor
popf
lock
add
dec
outsl
cltd
insb
pushf
mov
mov
push
sub
and
iret
and
mov
repnz
mov
outsl
scas
add
pop
inc
xchg
hlt
aaa
mov
xchg
inc
rcll
addr16
cltd
cmp
cwtd
das
and
lds
lods
outsl
inc
es
jo
mov
or
in
sub
jmp
fdivr
outsb
and
push
lcall
add
ljmp
aad
adc
jl
into
popa
pop
pop
mov
and
mov
push
es
js
sbb
lahf
clc
cmp
mov
and
adc
ficompl
cld
cmp
outsb
movsb
cwtl
ljmp
sub
xchg
mov
lods
movsl
outsb
lods
push
nop
xor
decl
inc
les
mov
scas
cs
sub
xor
sti
push
scas
fcmovb
adc
cltd
int3
aaa
jnp
xor
shlb
cwtl
add
pushf
cli
xchg
out
inc
sbb
sbb
mov
cmp
mov
lock
sub
les
sti
mov
pop
inc
rcr
mov
stc
out
jo
enter
scas
xchg
imul
addl
in
jmp
lods
jg
add
cmove
and
lods
dec
lcall
bound
sbb
xchg
inc
push
sbb
daa
sbb
std
pop
jo
sti
and
and
inc
stc
push
mov
sti
jecxz
mov
jns
pop
and
xor
push
add
sti
dec
jge
cli
ss
jle
imul
lods
das
xchg
das
sub
stc
imul
or
cs
subb
fdivrl
iret
jnp
in
jb
mov
adc
sbb
push
mov
addb
xchg
add
outsl
dec
repz
mov
adcb
and
mov
data16
loope
add
sbb
rcrl
and
les
jo
cltd
and
stos
cmp
icebp
sbb
pop
aas
cmpsl
andb
jp
int
jnp
andb
xchg
dec
andl
cmp
xchg
lsl
test
mov
stos
xchg
pusha
cmp
push
iret
loopne
jmp
push
xor
mov
mov
movsl
xorl
insl
imul
jo
cmc
adcb
sahf
nop
mov
inc
xchg
lods
push
push
push
arpl
cmp
xor
xor
into
cmpsb
inc
and
orb
orb
dec
rorl
mov
adcb
aaa
sub
mov
movl
addl
fisubs
hlt
mov
push
jo
xchg
add
xchg
popa
pop
jg
jl
aas
sbbb
and
sbb
cmpsb
js
int3
adcb
jae
jnp
lock
mov
mov
push
clc
push
cmpsl
sbbb
cmp
or
outsl
int
xor
jb
gs
nop
xchg
cmpsl
mov
add
repz
adc
in
mov
insb
subb
imul
es
cmp
and
xor
or
xchg
sub
stos
mov
jnp
sbb
pushf
es
ljmp
sahf
aaa
push
bound
sub
inc
add
iret
mov
leave
sbb
inc
dec
add
fcom
subb
add
cmp
enter
out
mov
ret
mov
gs
enter
call
ss
jnp
cmp
fiaddl
jae
jns
daa
aam
adc
ss
xorb
andb
enter
sbbb
and
adc
sbb
and
lret
lock
or
andb
out
insb
jge
pop
test
xor
or
sti
inc
lcall
inc
jo
add
xchg
adcb
inc
mov
or
movsb
sbb
mov
les
adc
mov
in
int3
sti
int
stos
cmp
ja
push
fwait
sub
push
aad
loop
sbbb
and
lods
cmp
xchg
cmpb
cwtl
cmp
insl
subb
js
and
call
jg
jno
scas
ljmp
mov
push
jl
mov
jecxz
push
mov
sub
sbb
divb
das
addr16
push
ljmp
out
pop
int3
cmpb
andb
rolb
sahf
adcb
divl
clc
mov
lea
popa
cli
stos
xorl
pop
je
xchg
mov
sbb
inc
and
pop
loopne
add
mov
mov
stc
movsl
dec
vpshufd
movsb
insb
out
xchg
sti
stos
scas
xor
push
jecxz
repnz
lcall
push
inc
addr16
or
movsl
jl
je
ds
fcmovbe
and
in
mov
addr16
lods
pushf
inc
outsl
repnz
movsl
shrl
jbe
cmpsb
jmp
pop
jmp
loope
loop
insb
sti
insb
jns
xchg
sbb
cmpsl
jl
jns
xlat
adc
xchg
mov
or
cmp
push
dec
lret
out
pusha
or
scas
or
out
ret
mov
push
inc
hlt
mov
pop
and
push
and
mov
pop
fmull
mov
test
mov
repnz
sahf
ror
ret
sub
sahf
cmpb
mov
pop
ljmp
sub
pop
cmp
les
loopne
movsb
adc
aaa
fcompl
test
enter
cmpsl
leave
aas
sub
dec
stc
bound
adc
out
in
xor
mov
xor
push
inc
push
fdivr
fsubrs
push
pop
repnz
call
lret
data16
imul
je
inc
push
pushf
xorl
aaa
stos
ficomps
fs
pop
sarl
xchg
or
pop
lcall
stc
xlat
cmp
flds
out
fidivs
pop
xor
iret
fdivl
xchg
sbb
lret
repnz
divb
pop
mov
ss
stc
mov
loop
mov
icebp
mov
jb
aad
in
popf
lods
push
movzbl
cmp
cmp
int3
cwtl
int
mov
jb
ds
xchg
pop
jnp
ja
jl
dec
scas
roll
jne
popf
mov
mov
jp
roll
push
sbb
mov
loopne
inc
data16
push
and
fwait
jge
repnz
nop
cmp
xor
jmp
fcoml
mov
ret
xchg
jp
push
cli
push
inc
js
pop
inc
divb
fucomp
pop
scas
int3
and
sahf
mov
sbb
jb
cvtps2pd
pop
push
inc
pop
mov
js
push
add
sub
sbb
lods
inc
cli
cmpsl
in
xor
and
lahf
adc
sub
cmp
movsb
sarl
mov
inc
mov
adc
arpl
sbb
add
das
mov
out
ret
jmp
xor
push
aaa
out
cmp
inc
cmp
jbe
xor
xchg
shrb
ficoms
pop
push
lcall
aaa
mov
imul
add
push
push
lret
int
cltd
dec
dec
xor
add
lds
inc
lcall
shlb
xor
jmp
mov
out
cmp
mov
pop
orl
push
out
xlat
inc
cltd
fisubrl
add
div
lds
and
xchg
jle
xchg
lret
test
aaa
adc
mov
sbb
addr16
xchg
mov
pop
adc
cld
hlt
ret
imul
xor
push
jl
sbb
add
and
mov
and
movsb
loope
idivl
fidivl
repnz
mov
nop
aas
pop
mov
push
pop
pop
xor
jge
lea
out
out
cmp
mov
cltd
pop
cld
adc
mov
addr16
sub
sbb
push
aaa
jg
add
xor
enter
inc
sub
and
pop
cld
cli
movsl
std
pop
push
loopne
fstps
out
mov
jns
and
and
xlat
and
mov
push
dec
ror
cmp
leave
cmp
insb
jns
jo
sub
sbb
xchg
ljmp
xchg
roll
vmovntpd
push
lcall
loop
les
sbb
mov
into
pushf
sub
dec
dec
je
int
call
sub
ja
pop
jmp
shll
jge
sub
xor
cwtl
sbb
cmp
cli
sub
fidivs
ja
lret
xor
push
xor
inc
sub
cmp
faddl
lcall
in
mov
stc
pop
mov
and
scas
imul
add
xchg
add
push
outsl
inc
cld
iret
mov
jae
lcall
icebp
jl
and
lcall
pop
mov
jp,pn
mov
jns
xchg
or
pop
adc
dec
xor
fs
add
enter
push
mov
lahf
lcall
ljmp
cltd
ret
and
mul
movsl
jo
and
mov
sti
andl
out
aad
add
xor
or
mov
lcall
aad
add
adc
xchg
pop
pop
flds
imul
and
fnstenv
jnp
bnd
mov
mov
sub
es
scas
test
popf
add
notl
xor
pop
mov
mov
cmp
pop
pop
xor
ds
xchg
jns
sbb
or
jp
pop
dec
pop
mov
int
ret
mov
add
lcall
pop
icebp
add
jns
addb
sub
fwait
inc
mov
mov
lcall
xor
and
mov
fidivs
push
jns
add
outsb
jnp
cmc
adc
lods
and
mov
lahf
xchg
lods
cwtl
loop
jmp
stos
in
lea
push
pop
xchg
repnz
pushf
stc
dec
xor
pop
pop
cmpb
push
in
scas
pop
xor
add
mov
pop
sbb
iret
jp
sbb
mov
hlt
lock
ss
outsb
das
ret
pusha
or
pusha
loope
add
out
cmp
orl
aas
xchg
sub
arpl
mov
inc
cltd
popa
or
sbb
in
jmp
std
cmp
add
jo
fistpl
outsl
outsl
fnstcw
out
fstp
jp
push
fadd
sub
xor
pushf
lock
fs
xchg
test
outsl
lcall
mov
xor
mov
out
push
mov
lahf
cmp
cmp
cltd
loope
pop
aam
sbb
adc
mov
test
cmp
xchg
jae
or
inc
and
dec
add
std
mov
pop
out
cli
mov
stos
call
jns
xchg
mov
jmp
mov
lds
in
fs
movsb
imul
cs
int3
outsb
mul
mov
dec
int
subl
aaa
ret
ret
cmp
xchg
pusha
jo
and
xor
out
incl
push
call
xchg
ss
imul
sbb
xor
std
aad
les
ds
imul
in
int3
sub
push
xchg
mov
inc
adc
cmp
jo
aaa
mov
push
mov
mov
add
sbb
fisttps
sub
and
add
lcall
pushl
test
out
cs
shrl
push
movb
jae
dec
jbe
dec
pop
aam
call
xor
outsl
xchg
xor
xchg
push
jb
mov
cmc
data16
gs
test
call
cmpsb
icebp
push
cwtl
or
cltd
cs
bound
pop
and
stc
outsl
rorb
and
adc
ret
and
scas
enter
lods
lock
fistl
inc
sub
xor
insl
push
xchg
stc
mov
mov
sbb
sbb
jb
andb
push
cmp
cltd
aaa
xor
mov
fistps
lock
lds
ret
dec
push
dec
test
cwtl
sbb
mov
sbbl
mov
adc
xlat
mov
sarb
jge
lds
mov
push
enter
nop
add
rcrl
jecxz
and
lret
mov
movsl
sbb
enter
orl
sbb
jno
mov
test
mov
mov
test
out
sub
add
or
jle
test
dec
push
lcall
xchg
ljmp
in
clc
jns
leave
sub
xchg
xlat
push
imul
int
and
daa
jecxz
jmp
ljmp
ret
stc
hlt
lods
daa
jg
repnz
jmp
and
das
in
adc
dec
sti
lcall
mov
je
lss
jp
out
mov
xlat
cs
jo
adc
fisttpll
call
dec
dec
xchg
das
fsubrl
fcmovb
fisubrs
xorl
popa
adcl
jp
daa
jns
dec
mov
mov
mov
sub
imul
out
in
les
pop
jp
imul
ljmp
pop
aaa
leave
rcrb
out
js
inc
testb
pop
test
mov
cmp
bound
pop
repnz
mov
inc
lea
negl
mov
insb
adc
mov
add
add
cltd
push
inc
sbb
push
mov
mov
dec
fisubs
push
data16
sub
scas
sub
add
dec
cmpsl
xchg
rorl
jo
stc
mov
sub
pusha
sbb
sbb
lret
cmp
and
and
adc
sbb
and
dec
inc
and
xchg
xor
xchg
xor
and
cmp
test
out
fdivl
daa
mov
fsubs
sar
dec
dec
cmp
sub
sbb
jge
cmc
shrl
dec
inc
aaa
mov
popa
add
and
push
std
jle
jecxz
add
not
sbb
loopne
stc
xchg
sub
imul
pop
jecxz
subb
int
jo
jns
mov
cs
repnz
rorb
inc
daa
cld
mov
insl
xor
lcall
test
cmc
out
mov
mov
outsl
mov
es
xor
mov
popa
lcall
loope
and
enter
lcall
es
and
inc
pop
mov
ljmp
sub
mov
push
aas
or
jp
inc
leave
jne
nop
lods
ja
or
push
dec
sub
mov
clc
xor
xchg
dec
outsl
lcall
inc
sbb
pusha
jmp
ret
sub
cmp
dec
cmp
jbe
fisubrl
ja
hlt
xor
in
xor
and
jo
sub
xorl
sub
push
sub
es
movsl
jno
pop
jbe
fwait
xor
pop
test
add
inc
lea
pop
lahf
inc
das
jns
jns
ss
int
inc
lcall
and
idivb
pop
sbb
jecxz
xchg
mov
inc
push
sbb
adc
jle
push
into
dec
int
int3
push
ret
push
sub
push
dec
add
xchg
adc
xor
lds
enter
sbb
pop
not
jle
movsl
sbb
rcll
dec
pop
jo
and
in
mov
xor
push
jnp
xchg
in
in
or
repnz
enter
dec
dec
push
ljmp
xchg
popa
fwait
movsl
sub
sbb
mov
div
xor
insb
ds
subb
mov
cltd
stos
ret
bound
or
cmp
cmp
mov
insl
cltd
and
jnp
or
rcl
decb
cli
jecxz
push
sarl
pop
loopne
pop
cs
ud1
aaa
das
scas
adc
mov
fldcw
mov
inc
int3
pop
cltd
xchg
ja
lahf
add
xchg
mov
in
cs
xor
cmpsb
in
shl
aas
pop
repnz
test
cmp
daa
push
jnp
cmp
xchg
push
bound
or
push
mov
cld
and
sub
add
add
sub
mov
jl
add
ror
xchg
jo
inc
mov
pop
inc
sbb
lcall
ljmp
rorl
jl
sub
out
inc
push
fadd
pusha
shrb
sbbb
push
insl
shr
push
insb
insb
adc
xorl
add
mov
pop
ja
pop
lcall
shll
and
ja
sbb
sub
dec
clc
movsl
push
sbb
mov
mov
mov
in
fdivs
test
sub
jge
or
mov
jb
pop
fsts
pop
sbb
mov
dec
enter
mov
and
sub
lea
mov
sbb
sbb
shl
sbb
mov
xchg
pop
ja
lret
mov
sbb
jne
repz
ret
dec
mov
std
pop
fiadds
mov
cli
clc
xor
jmp
mov
insb
fsubs
inc
mov
je
mov
pop
jnp
repz
and
call
sbb
negb
loopne
adc
xor
jne
pop
test
fldl
cmp
mov
imul
mov
push
outsl
jle
out
cmp
aad
sarb
or
jge
out
pop
push
add
lcall
sarb
pop
jns
sub
sub
ja
adc
daa
aaa
stos
mov
push
fists
push
jns
push
xchg
sub
xchg
inc
jl
test
jo
push
jo
cmpl
pop
decb
jae
jns
movsl
cmp
jne
push
and
xchg
shrl
push
test
pushf
sbb
xchg
data16
lcall
scas
sahf
and
adc
or
mov
pop
dec
push
pop
cs
and
add
ficomps
dec
cmc
add
out
push
fsubrl
jp
iret
out
outsb
ret
cmpsb
or
mov
shll
cmp
and
sub
je
and
scas
jl
cmpsl
popf
inc
subb
loop
jmp
scas
or
fs
xchg
jle
cs
sti
orb
dec
jae
lds
lret
push
dec
sar
and
xchg
js
jmp
jns
jg
and
pusha
mov
cmp
lea
adc
jle
das
cltd
rolb
cmp
rcrb
ret
jl
cs
out
pop
mov
addb
out
or
out
ret
in
cwtl
inc
cmp
cmp
fimull
insb
popa
loopne
scas
inc
bound
enter
jge
sub
mov
test
push
js
stc
sbb
lods
in
daa
cltd
fdivl
or
cmp
xchg
xor
jns
xor
lock
cmpsl
sbb
mov
fadd
lcall
lock
jmp
fmull
jns
xchg
pop
ret
jge
stc
jo
adc
popf
in
or
ss
ja
loopne
dec
xchg
push
pop
xor
mov
lds
sub
jbe
xchg
repnz
pop
jmp
sarb
add
sub
jle
test
fxch
inc
ficompl
mov
std
xor
imul
loop
popa
sub
inc
jecxz
push
sub
cltd
or
insl
mov
sbb
mov
mov
iret
sub
jge
push
inc
xchg
mov
mov
hlt
cmp
add
jl
push
sti
or
pop
jne
das
push
test
cltd
rcll
jns
ret
push
jle
jge,pt
pop
mov
pusha
popa
mov
jle
xchg
rclb
inc
cmp
pop
add
sub
xor
xor
pop
xor
fists
fisubrl
push
mov
icebp
dec
les
cltd
sbb
jae
push
test
push
xor
push
add
pop
xlat
std
xor
cmp
in
sti
shrb
and
and
aam
mov
rcll
sbb
sbb
jmp
ret
jno
mov
and
arpl
fcmovu
jns
imul
lcall
adc
sub
jmp
fsubrl
jns
jle
lcall
outsb
cmpl
sub
faddl
xor
pop
pop
jnp
jns
push
sahf
out
rcrb
pop
mov
les
test
xchg
mov
insl
cltd
cltd
jns
jbe
repz
out
xchg
jp
pop
jnp
call
stc
loopne
push
cltd
push
cmp
in
lret
lret
add
add
cmpsl
or
sti
rcll
inc
inc
out
movsb
inc
push
xor
aas
sub
xor
pop
hlt
or
das
sub
daa
call
xor
dec
cwtl
jo
adc
cmpsl
std
mov
sub
push
push
out
ror
lcall
jecxz
push
push
add
add
fdivrs
sub
cmp
iret
pop
pop
push
sub
pop
mov
cmp
adc
mov
leave
repnz
sub
ret
sbb
xor
out
xchg
loopne
jns
and
and
int3
push
pop
jns
cmp
scas
pop
jg
dec
aas
int
mov
cmp
insb
or
negl
xchg
xchg
push
enter
cmc
std
ret
mov
repnz
add
mov
mov
xchg
jnp
jmp
push
and
mov
add
aas
orl
or
int3
in
fsub
xchg
and
les
popa
outsl
jge
adc
lock
outsb
or
lcall
and
imul
inc
adc
lds
mov
ljmp
out
test
push
mov
hlt
push
push
inc
mov
push
pusha
repnz
adcl
inc
sbb
push
mov
or
jb
stc
es
fcmovnb
lcall
jecxz
inc
fucomip
ja
cmp
je
mov
mov
xor
int3
add
add
lcall
xlat
jo
or
sbb
push
fcmovb
jae
jmp
dec
xor
insl
inc
xchg
and
mov
mov
inc
mov
cltd
dec
xor
add
ja
lcall
test
into
movsl
cwtl
pop
and
sbb
in
cs
dec
enter
jb
cltd
xchg
push
or
inc
jno
test
out
je
sub
and
jne
cltd
inc
data16
movsb
cmc
fchs
out
jmp
lret
jmp
outsl
jg
mov
inc
lock
sbbb
ja
int
std
repnz
jnp
adc
outsb
add
sbb
cwtl
jns
shl
stc
mov
hlt
das
stos
ficoms
aad
es
sub
mov
ret
out
ret
pop
imul
sbb
xchg
cmp
popf
cmp
out
inc
pop
insl
aaa
push
pushf
pop
xor
outsb
pop
xor
adc
aad
xchg
insb
inc
fst
movsb
pop
aas
mov
into
push
popa
pop
fisttpll
inc
ja
and
jno
and
add
call
in
cmpsb
adc
ja
mov
adc
repnz
add
fs
test
jmp
fisubs
pop
xor
xchg
add
jo
rcrb
jp
sahf
jmp
call
or
aas
aas
cmp
sbb
push
pop
cmc
sub
inc
repnz
loop
and
out
xchg
nop
add
lret
lcall
mov
dec
sub
xchg
sbb
xchg
sbb
mov
ds
les
imul
ja
outsb
mov
push
add
loop
insl
add
faddl
adc
dec
js
cltd
aaa
lea
adc
sbbb
dec
push
into
push
popf
loop
adc
sub
fidivrl
mov
pop
jle
and
stos
movl
jmp
push
mov
and
pop
data16
into
xor
cltd
cmp
add
sbb
and
vpsrlvw
dec
and
shll
frstor
test
jle
lret
out
repz
push
xchg
int
aad
stos
pop
jb
and
inc
add
movsb
sar
lcall
popf
or
rorl
lcall
leave
pusha
jp
test
lret
ret
stos
loope
sub
jns
repnz
ds
cmp
aad
imul
into
xor
push
cli
cwtl
mov
or
xchg
and
mov
push
loop
push
push
xorb
imul
cltd
jbe
mov
cli
mov
or
outsb
xor
push
xor
fcomps
adc
lock
es
cmp
jbe
mov
mov
push
mov
mov
bound
pop
pop
je
push
movl
lcall
cltd
mov
sub
dec
shl
call
ljmp
ja
fs
mov
pop
les
popf
sahf
outsl
jbe
push
shr
call
sbb
and
lds
cmpb
mov
pusha
les
rcrl
sbb
push
mov
add
jmp
out
jg
icebp
push
pusha
in
mov
cmp
ljmp
cli
dec
jbe
sub
cs
pusha
add
pop
faddl
cld
sti
pushf
repnz
roll
fisttps
dec
sub
hlt
cltd
out
cmp
nop
loop
cmpsb
add
cmp
lahf
icebp
jp
pushl
inc
fistps
mull
jp
xchg
ficoms
jbe
lea
jp
xor
push
int
xor
cltd
mov
mov
inc
lds
daa
imul
fdivs
cmp
fistps
das
mov
ror
push
push
loop
sbb
fnstsw
enter
pop
shll
sub
bound
subl
and
imul
inc
inc
pop
inc
push
xor
push
sti
dec
mov
pop
movsb
mov
stc
dec
push
js
or
cli
jb
xorb
les
pusha
scas
sbb
xor
lret
ja
stc
xchg
loop
and
push
andl
clc
lock
es
lahf
sarl
fdivrs
das
int
pop
ret
insb
jg
sub
std
fstpl
imull
sub
mov
xchg
and
dec
add
adc
ret
scas
arpl
sub
and
sbb
pop
sbb
mov
mov
push
scas
sub
bound
repnz
shll
xchg
mov
test
jnp
mov
push
lcall
pop
push
bound
imul
mov
mov
jne
aaa
mov
mov
cmp
fwait
sbb
mov
mov
lcall
pop
xor
subl
dec
fwait
add
push
mov
daa
mov
inc
jecxz
cmove
add
pop
add
jmp
jg
leave
cmp
jmp
ljmp
xchg
mov
outsl
xchg
fisubrs
jns
scas
call
nop
out
sub
inc
scas
adcb
add
and
push
loop
mov
cwtl
push
push
test
push
orl
mov
push
int3
mov
ffree
mov
mov
lock
pop
repz
mov
pop
into
outsl
mov
cwtl
pop
xchg
and
cli
repnz
das
add
push
jle
popa
sub
jno
mov
mov
jns
push
cli
pushf
aad
or
dec
mov
sub
push
xor
lock
js
and
je
jg
insb
ja
lods
and
lock
fs
mov
push
mov
dec
or
jg
xchg
lret
jo
out
jbe
pop
cmp
mov
pop
inc
arpl
jnp,pn
scas
push
bound
jl
cs
xor
into
lods
in
orb
sbb
sub
inc
mov
out
leave
sub
lea
out
pop
push
ljmp
outsl
push
sub
adc
pop
xor
mov
orb
lods
push
shr
ret
in
pop
xchg
in
addr16
aam
lret
or
mov
fmul
rcrb
rclb
dec
rdtsc
inc
add
mov
ret
mov
vmovdqu
in
add
add
mov
inc
mov
jno
dec
loop
ret
lcall
mov
or
mov
fistl
daa
in
incb
push
xchg
inc
cmp
sar
dec
clc
sub
mov
push
xor
pop
jae
out
cltd
imul
jbe
dec
jmp
sbb
sbb
call
sbb
sub
shll
jae,pt
push
and
xor
add
inc
aad
mov
loopne
orl
lock
xor
pop
ret
in
daa
aad
fisubrs
or
xchg
clc
add
jl
push
and
movsl
mov
in
push
fiaddl
mov
add
mov
in
xor
nop
sub
sbb
call
sti
mov
sbb
call
cmp
pxor
cs
inc
outsl
and
loopne
js
add
cmp
idivb
shll
inc
sub
stc
lcall
xor
daa
adc
and
lcall
add
pop
lock
daa
ret
sub
mov
addb
into
movsl
ret
daa
jg
inc
inc
stos
add
sbb
fidivs
std
jg
pop
jae
or
fildl
je
xchg
or
jecxz
sahf
cli
pop
adcb
and
or
sarl
insl
subb
push
in
mov
push
adcl
leave
push
mov
cmp
add
mov
add
and
out
js
xchg
mov
rorl
dec
mov
ds
popf
divb
mov
jno
xchg
pop
and
loopne
ror
clc
inc
jo
repnz
and
mov
mov
cmp
xor
or
xorb
stc
pop
dec
out
add
mov
jg
dec
leave
shll
pop
and
sub
out
imul
pop
mov
sbbb
add
roll
pop
aas
jge
and
test
mov
fwait
jb
rcrl
ret
or
sbb
gs
fmuls
ja
aas
adcb
out
daa
adcb
outsb
mov
jg
or
ss
negb
and
sbb
dec
adc
je
jle
aas
xchg
ja
add
jnp
inc
lea
mov
outsb
and
xchg
bnd
jno
push
pop
xor
mov
je
shrl
out
push
and
lods
cmp
sbb
xchg
xchg
add
mov
mov
testb
push
jnp
adc
in
push
adc
mov
or
out
jns
clc
jp
loope
insl
pop
dec
jmp
aam
jae
and
sub
cs
or
push
lods
fcom
or
jae
pop
push
pop
inc
xor
jns
inc
jnp
cwtl
decb
mov
lods
movsb
fiadds
push
add
cmpb
jae
add
or
stos
sub
gs
dec
rol
mov
and
cltd
dec
mov
sbb
cmc
xor
adc
adc
jae
ss
sti
loope
ficoms
dec
and
test
cmp
adc
repnz
push
xchg
mov
push
daa
dec
jg
mov
ret
faddl
cmp
xchg
gs
int3
subl
xor
sub
dec
outsb
sub
sbb
fldl
pop
xor
clc
xchg
adcl
lock
pusha
fildl
or
lcall
mov
lahf
aaa
jmp
pushf
clc
sub
cltd
sbbb
pop
xchg
adc
sub
cwtl
gs
pop
adcb
mov
shll
andb
push
sti
and
mov
adc
dec
add
inc
lret
push
ret
ja
test
sub
pop
sub
js
sbb
adc
jns
pop
or
inc
dec
in
andb
les
dec
fstp
mov
clc
jo
popf
adcb
mov
mov
pop
inc
or
and
cmpb
mov
push
jae
cmp
testb
mov
jae
or
cmp
and
sub
subb
inc
repnz
or
or
push
or
std
jae
lods
inc
rorl
insb
out
fs
cltd
dec
mov
daa
cmp
sub
xchg
push
data16
and
and
cmpsl
je
orl
cmp
adc
incb
pop
inc
sti
jne
lcall
cmp
aaa
inc
gs
xchg
add
cmpb
pop
int3
inc
jnp
cmp
sub
out
jae
repz
or
loop
adc
dec
dec
movsb
xchg
test
push
and
fidivrs
lods
or
mov
push
subb
shlb
sub
mov
mov
lods
cmp
imul
ljmp
or
sar
andb
jl
out
xor
pop
call
jmp
xlat
fimull
sahf
insl
repz
sub
adc
repnz
sti
mov
lahf
jns
jo
pushf
ret
neg
repz
int3
cmp
jae
add
push
mov
push
pop
pop
into
rolb
jnp
cmpsb
andb
pusha
sbbb
test
mov
fs
jnp
fwait
mov
cwtl
or
test
or
jo
inc
test
xor
xchg
sbbl
xchg
mov
lock
ds
lret
xorb
mov
xor
ret
fsubl
push
adc
inc
enter
cmp
cmp
shl
push
jl
es
movsb
mov
cmp
jne
mov
mov
sub
enter
add
sbb
push
lds
lret
ret
out
mov
pop
fsts
mov
push
popf
push
mov
lcall
ss
stos
rcrb
push
addb
xchg
aam
test
cmpb
xor
push
cmc
jno
sbb
je
adc
arpl
xchg
repz
lret
xor
xor
dec
add
jns
xchg
mov
push
in
xorb
mov
test
sub
pop
movsl
pop
xchg
or
and
outsl
out
pop
sub
push
push
adc
out
pop
je
adc
insl
push
cmpsb
jle
je
cmp
ret
aad
int
push
nop
jo
cmp
ljmp
cs
pop
and
cmp
or
pop
jnp
pop
sbb
test
jae,pn
aad
pop
mov
pop
jg
lret
movsl
push
mov
orb
leave
cmp
movsl
mov
mov
xchg
mov
jns
mov
inc
add
popf
shr
addb
ret
ret
iret
pop
cmp
shll
outsl
or
add
mov
dec
nop
cmpb
into
cld
outsl
jns,pn
xlat
cmpb
add
test
imul
xor
sbb
xchg
sub
stc
adc
pop
mov
and
lea
xor
push
in
rorl
mov
xor
rorb
testb
adc
sub
lea
pop
testl
add
out
pop
ret
xorb
add
insb
mov
or
subb
and
lods
cli
pop
push
addb
and
fdivr
ret
icebp
lahf
add
add
andb
hlt
jmp
inc
int3
xor
cmp
mov
repnz
xor
cmpsb
or
pop
je
daa
aam
nop
les
fs
bound
lret
sub
test
jg
insl
xchg
mov
pop
inc
addb
call
push
ss
pop
jnp
push
scas
push
adcb
pop
cld
ds
mov
clc
mov
adcb
fidivrl
xchg
dec
fs
iret
xorb
push
mov
push
lds
xchg
and
sbb
divb
pusha
mov
push
rorb
mov
jnp
out
sub
lcall
cmp
inc
je
mov
add
sbb
and
fs
in
cmp
pop
jmp
sahf
xchg
sbbl
sti
ss
push
ss
pop
add
sub
jmp
mov
xor
add
lds
push
xchg
insl
ja
pop
push
pop
outsb
mov
cltd
and
mov
sub
push
jb
jle
mov
sbb
push
lods
push
idivl
jecxz
push
movsb
divl
std
pop
pop
lock
push
xor
in
sbb
aad
dec
inc
ss
clc
out
adc
xchg
movl
jmp
jmp
dec
jae
xchg
aaa
adc
mov
insl
dec
mov
lcall
sbbb
fidivrl
addr16
loopne
stos
lcall
xor
mov
sub
push
fwait
mov
cltd
xchg
data16
jns
in
sti
in
push
adc
dec
jecxz
jns
xchg
add
mov
add
mov
push
or
cmp
sub
movsl
sbb
fdivr
sbb
inc
push
std
jno
inc
xchg
iret
je
mov
es
mov
jge
fiaddl
or
data16
and
lds
addb
sbb
mov
outsb
cs
add
mov
inc
lds
xor
xor
js
lret
sbb
andb
lock
jmp
jno
fistpll
xchg
mov
jnp
lret
or
stos
push
lods
lret
cwtl
nop
adc
push
mov
pop
mov
cmp
sub
xchg
adc
fs
loop
jle
aaa
rcrl
adc
adc
jecxz
jp
hlt
sub
fldenv
mov
loopne
pop
add
adc
lret
fidivrl
sbb
jae
mov
lods
sub
lock
leave
mov
push
jae
jge
xchg
outsb
jo
add
mov
xchg
lcall
loop
lret
dec
subb
mov
leave
andb
pop
add
fildl
movsb
mov
pop
bound
sbbb
jmp
push
add
aaa
gs
pop
repz
cwtl
incb
mov
test
orb
fsubl
pusha
or
rolb
mov
lea
jb
cmpb
dec
fwait
cmpsb
es
je
xorb
fistpl
pop
jbe
rolb
adc
and
dec
add
cmpsl
lcall
dec
xchg
push
test
ret
mov
fnstsw
orb
add
je
dec
adcl
mov
lcall
jl
jle
jl,pt
cmpsl
lods
mov
leave
jnp
cmp
int
dec
mov
loopne
cli
arpl
pop
pusha
cmpb
mov
adcb
loop
subb
xchg
mov
mov
mov
mov
divl
lods
jae
out
aam
orb
push
mov
shrl
mov
gs
dec
aam
outsl
or
andb
mov
sub
insl
push
or
lods
jno
loope
mov
xchg
imul
sbb
mov
enter
repz
push
mov
sti
push
scas
add
scas
or
test
cmpl
popa
orb
and
ret
lcall
je
xor
test
lcall
xchg
jb
push
stos
repnz
mov
xor
sub
ja
iret
pop
hlt
sbb
adcb
jl
icebp
dec
gs
ljmp
cmovs
jns
xor
mov
out
add
sbb
subb
lea
sub
xchg
fcos
push
mov
ss
mov
inc
jg
jl
push
and
ret
mov
andl
scas
inc
sbb
add
lahf
notl
add
jb
out
stos
sbb
cld
adc
popa
popf
int
xor
adc
push
sbb
push
frstor
sbbb
cmp
andb
mov
nop
cli
add
push
jle
ret
cmp
pop
fisttpl
nop
rolb
das
out
pop
imul
xchg
addl
add
adc
insl
pushf
int3
adc
adc
jmp
pop
dec
ret
in
add
nop
pop
subb
lds
mov
subb
sbb
cmpb
pop
mov
add
push
cmp
cmp
scas
jge
jb
adc
ret
clc
ror
repz
stos
inc
xorb
je
mov
dec
mov
cltd
and
cmpsl
inc
out
push
addb
adc
adc
testb
lcall
insb
je
mov
cmp
call
cmp
inc
addr16
dec
mov
jg
repnz
add
andb
mov
jns
adc
jl
ljmp
sub
xchg
jecxz
xorl
sbb
ljmp
repnz
mov
pushf
stc
adcb
cli
orl
cmp
cmp
mov
add
andl
loopne
scas
dec
or
sbbb
stc
xchg
fisubl
fsts
push
xchg
cmp
addb
add
popa
cmpsb
or
adc
mov
lds
xor
cld
dec
and
test
push
sub
xorb
bnd
xchg
adc
cmpb
or
subb
pshufw
xchg
andb
pop
out
and
mov
orb
cmp
fldt
and
orb
notb
mov
ss
cmp
mov
mov
ljmp
popf
test
subb
cmp
je
fdivrs
inc
adc
iret
pop
mov
lock
imul
xor
pop
orb
test
stos
in
popl
pop
xchg
leave
push
mov
andb
in
outsb
mov
mov
inc
jne
leave
jg
mov
addr16
fadd
inc
add
stc
and
sahf
pop
sub
and
xlat
andl
fisttps
mov
xor
inc
out
loope
push
pop
shrb
lcall
orb
push
jbe
mov
sbbl
and
xchg
loopne
inc
xchg
test
scas
rcll
xor
andb
xchg
fiadds
sbb
mov
adcb
lahf
mov
es
sub
pusha
mov
icebp
mov
push
or
scas
aad
cmp
je
cmp
pop
add
jb
dec
cmpsl
or
xchg
insl
aam
mov
or
cmp
addb
lods
ds
xchg
shrl
sub
xchg
adc
add
icebp
cmc
adc
jbe
mov
add
xor
sub
or
inc
jge
cltd
xlat
mov
movl
loop
data16
mov
cmpb
lods
sar
das
xorb
inc
cmp
orl
std
in
adc
jle
push
xchg
sub
das
in
adc
sub
stc
fwait
leave
sbbb
fs
aam
or
xor
jne
ljmp
data16
xchg
mov
outsb
and
pop
sbb
jle
int
lcall
dec
and
inc
test
sub
ss
jns
aaa
cmp
ret
cli
scas
jmp
mov
into
mov
das
mov
lret
jnp
jb
stos
ret
out
lods
divl
mov
or
je
mov
jle
cltd
call
cld
stos
imul
xchg
lods
insb
mov
scas
in
loope
lcall
sub
push
imul
jge
mov
ja
popa
stc
mov
enter
and
psubq
jb
std
cmp
out
sbb
outsb
scas
arpl
add
jo
mov
int
mov
jae
push
movsb
les
push
mov
add
lea
out
and
mov
mov
mov
mov
xor
jmp
fs
cltd
adc
xchg
cltd
push
jne
pop
fcmovb
xchg
push
push
incb
push
aas
fwait
pop
xor
cmp
aas
dec
cltd
push
mov
int3
xchg
lcall
stos
jp
or
aad
inc
in
fidivl
imul
mov
sbb
sbb
jns
mov
mov
fimuls
lahf
insb
and
xchg
test
loopne
sbb
jg
loopne
sbb
push
push
lods
adc
stc
lods
xor
das
jbe
push
lock
jge
loopne
push
jne
out
arpl
call
popa
mov
ret
xor
dec
int3
mov
lds
test
lea
sub
jge
mov
sbb
aam
dec
fcmove
jbe
in
cmp
and
das
mov
dec
orl
xchg
out
leave
or
movsl
add
lods
push
insb
xchg
sbb
pop
xchg
sahf
jg,pt
and
fcomps
out
mov
xchg
icebp
rcll
cmp
sbbb
lret
cltd
push
mov
cmp
movsb
ja
movsl
mov
lock
sbb
sub
in
frstor
cltd
push
repnz
xchg
inc
mov
cmp
mov
xchg
addr16
movsb
das
mov
test
stc
push
jns
hlt
jle
fmuls
sub
sbb
dec
ja
and
cmpsb
inc
push
or
inc
outsb
pop
roll
pop
movsl
repnz
insb
aad
orb
sub
xorl
fwait
push
sbb
jg
test
cltd
jl
cmpsb
cmpb
mov
jge
jae
mov
shlb
xor
sbb
inc
dec
lods
add
cltd
shlb
scas
adc
daa
shrb
and
cld
lcall
add
fldcw
leave
push
pop
push
inc
sahf
aad
add
lods
sub
jg
pop
sub
test
leave
inc
xor
pusha
lcall
adc
inc
leave
adc
hlt
cmp
loop
iret
aas
sbbl
inc
push
push
mov
mov
lret
jge
cli
dec
test
mov
test
popa
and
loope
mov
outsl
adc
push
cs
icebp
add
inc
sbb
dec
cmpl
repnz
sub
sahf
or
xor
imul
push
jne
sub
cmp
jnp
add
adc
jp
sbb
rol
inc
sbb
adc
imull
cli
aam
dec
dec
mov
pop
int
negl
shrl
out
jecxz
imul
sbb
iret
pop
rolb
cli
adc
xchg
sbb
mov
ret
call
lcall
stc
loop
dec
bound
data16
adc
outsb
mov
xchg
mov
xor
inc
in
ss
das
mov
jnp
lea
cli
hlt
aaa
push
popf
inc
mov
pusha
leave
or
mov
dec
inc
fwait
inc
insb
adc
pop
aam
pop
xchg
add
les
icebp
andl
out
decl
popl
addr16
sub
and
sub
mov
sbb
jmp
shlb
test
std
inc
dec
jae
dec
aaa
gs
sub
das
lock
test
fs
dec
into
mov
push
ret
stos
rorl
hlt
pushf
inc
push
fadds
into
jno
jecxz
sti
addb
insl
icebp
ja
sbb
jns
cmpsb
aaa
addb
mov
add
jne
jle
adc
and
mov
ret
stos
pop
and
pop
sub
mov
shll
xchg
sub
loopne
cmp
icebp
addr16
enter
xor
cltd
xchg
fisubrl
divl
imul
push
dec
lret
sub
pop
stos
jg
dec
cld
imul
sbb
fmul
imul
outsb
hlt
pop
inc
pop
std
orb
mov
enter
addr16
leave
jnp
lcall
and
movsb
jb
into
addb
rorl
push
cld
rcrl
pop
shlb
and
inc
or
inc
or
aad
push
hlt
add
cmp
mov
test
shlb
inc
push
subb
nop
add
xlat
mov
nop
pop
push
out
call
mov
push
add
fcmovne
mov
dec
enter
add
sub
inc
or
dec
adc
lret
sub
jno
loop
push
cmc
xor
and
xlat
push
and
mov
sub
cmp
inc
scas
push
mov
pop
sbb
pop
pop
or
enter
lods
mov
rorb
mov
bound
pop
pop
incb
lock
xchg
or
xchg
push
mov
xchg
sub
push
xchg
rcrb
mov
test
xor
ja
mov
adc
jmp
les
mov
push
ljmp
lods
push
mov
cltd
mov
jnp
test
ds
jae
cmp
push
adc
and
inc
imul
inc
xchg
pop
fs
into
mov
mov
rorb
lcall
out
adc
cmp
mov
bound
jae
fs
cmpsb
bound
rolb
mov
adc
mov
pop
pop
fidivrs
outsl
push
cwtl
mov
data16
cmpsl
into
arpl
andl
pusha
dec
pop
add
jae
mov
fldenv
rclb
fs
pop
aad
hlt
sub
and
stos
repnz
cwtl
jle
push
ja
lea
mov
sbbb
mov
cmp
leave
jbe
push
pop
movsb
xor
or
inc
xor
mov
jl
cmp
clc
sub
inc
push
mov
xor
orl
data16
bnd
dec
cwtl
jns
ret
fstp
push
lock
mov
dec
lcall
js
xchg
dec
pop
sbb
punpcklwd
xorb
arpl
mov
cmp
imul
mov
cwtl
ret
adc
je
jne
imul
xor
lods
js
mov
cmp
fstpt
sub
lret
mov
push
mov
dec
lock
dec
sub
pop
or
add
divb
dec
mov
mov
sub
cltd
pop
sbb
jnp
dec
add
lea
imul
jp
cltd
or
sti
jns
js
ret
sti
jg
cwtl
dec
adc
in
mov
and
cld
mov
add
leave
call
xorl
vpmadd52huq
les
lods
enter
push
add
movsb
aaa
idivb
push
jnp
sub
sahf
ret
dec
les
mov
std
shl
insb
inc
add
cmp
jecxz
dec
sbb
daa
je
sbb
lcall
add
dec
mov
lods
aaa
dec
jge
cmp
std
stos
fwait
lock
jns
cmp
adcl
ficoml
fidivrs
iret
int3
lcall
lret
xchg
or
aaa
pop
outsl
mov
popa
mov
rorl
xor
push
cmp
orb
sub
shll
repnz
jbe
repnz
jmp
push
jecxz
mov
lock
test
aaa
pushf
inc
hlt
popf
cmpsb
lret
xor
sub
sti
rolb
popa
sub
mov
add
aad
push
in
sub
aaa
rcrb
jns
or
test
jmp
adc
mov
sub
jle
cld
jns
mov
and
jp
insl
sub
loope
lods
mov
sahf
cmp
test
jmp
bound
jle
sbb
leave
cltd
add
repnz
or
or
sbb
into
xchg
push
jmp
imul
js
pop
mov
xchg
cli
insl
mov
subl
pop
add
push
jae
push
repz
les
int3
push
cmp
add
les
jnp
jle
out
stos
xchg
add
sti
push
cmp
shll
in
inc
mov
scas
roll
loop
pop
repz
fldl
inc
out
jge
mov
xor
adc
pop
jo
jns
sbb
ja
or
and
jo
xchg
stc
popa
dec
rcr
aaa
enter
ret
loope
and
mov
imul
sbb
mov
in
dec
mov
aam
adc
stos
jmp
push
cmp
push
ss
cmp
push
xchg
lock
lock
add
mov
mov
jle
and
sbb
pop
dec
cltd
push
pop
push
arpl
lcall
dec
sub
cmpsb
xchg
and
shlb
insb
bound
push
push
xchg
jle
cltd
xor
mov
clc
inc
mov
andl
roll
sbb
xlat
pop
xchg
lcall
push
fidivrl
mov
sarl
cmp
ret
fucomi
ret
adc
es
rcll
pop
icebp
addr16
push
cwtl
dec
xchg
jmp
cs
pushl
mov
pop
xor
loop
popa
adc
sarl
adc
add
add
rcl
inc
fnstenv
jns
movsb
je
ljmp
cmp
sub
mov
sti
mov
add
xor
or
bound
xchg
push
mov
jle
pop
popf
ljmp
rolb
cmp
lea
xor
out
and
jae
subb
xchg
and
cli
xchg
sub
adc
imul
jb
ljmp
out
sbb
enter
adc
pop
insb
test
testl
or
mov
daa
jp
addb
in
push
aad
subl
int3
mov
decl
jbe
sbb
loope
cmp
inc
mov
push
adc
mov
mov
sub
inc
lcall
add
rcl
sub
xchg
es
cld
lock
jns
test
push
sub
lret
and
ja
sbb
and
cwtl
pop
test
adc
sub
adc
jge
adcb
add
or
xchg
outsb
jns
mov
jae
cmc
popa
nop
push
push
push
repnz
jecxz
cmp
jmp
sub
dec
jbe
pusha
lcall
adc
test
adc
aad
shrb
in
push
mov
mov
push
cmp
pop
xor
sahf
jp
pop
or
inc
insb
jne
lcall
and
stos
xor
pop
lods
dec
add
jns
lret
fisttpll
xchg
add
lahf
or
leave
or
sahf
jns
mov
fwait
pop
stos
xor
push
jle
sti
add
das
imul
insl
test
mov
subl
xor
add
push
shll
insl
inc
xlat
ds
ret
cmp
inc
nop
adc
xlat
rolb
xchg
xchg
add
ds
mov
shll
std
stc
ficoms
addb
xor
ret
dec
xor
or
pop
test
push
or
stc
xor
clc
iret
stc
ja
dec
mov
movsl
jg
data16
and
out
addl
dec
mov
add
ret
lret
pop
rclb
ja
push
pushf
lcall
mov
sbb
shll
daa
int
pop
out
nop
sub
int
sti
jl
dec
xor
popf
cmp
iret
enter
add
fstpt
xchg
sbb
xor
push
shll
sbb
mov
test
lcall
jg
dec
add
shll
sti
sbb
shll
icebp
je
std
dec
jb
and
test
fimuls
cmc
shr
call
pop
les
ljmp
loopne
jns
inc
push
cltd
loop
movsb
fiaddl
ret
iret
mov
ss
mov
cltd
cmp
mov
rclb
mov
int3
jge
mov
les
xchg
in
pop
jbe
pushf
into
lret
xor
shr
push
xchg
cmp
popf
ret
sub
clc
ja
fdivrs
pop
iret
ss
rclb
xor
cltd
and
jo
js
push
jl
jle
jl
lcall
les
ret
xchg
outsl
pusha
cs
jb
lock
fwait
and
les
mov
sbb
arpl
inc
and
ret
sbb
jl
cmp
repnz
adc
xor
xchg
push
cs
sbbl
cwtl
push
adc
nop
or
adcl
arpl
sub
jae
ljmp
inc
mov
xor
cmp
and
sbb
imul
mov
lret
jb
push
pop
testb
inc
jo
xchg
scas
push
iret
mov
mov
lds
lock
dec
sbbb
call
repnz
mov
repz
div
insb
dec
jo
enter
xchg
pushf
imul
cmp
inc
jo
and
jecxz
push
sbb
pusha
adc
xchg
les
xchg
inc
mov
ret
mov
call
push
ret
test
xor
cmp
imul
push
jns
push
adc
mov
and
mov
xor
mov
xor
sbbl
add
sub
fists
jmp
push
xchg
in
movsb
pushf
addb
mov
cltd
mov
cli
arpl
adc
or
push
sbb
and
jmp
test
cltd
nop
mov
jmp
out
mov
xchg
cmc
es
adc
sbb
push
test
aad
andl
cli
push
in
test
and
test
mov
mov
mov
push
movsb
std
mov
rcrb
faddp
iret
and
cmp
pop
mov
and
addr16
lret
mov
sbb
mov
cli
lods
cmp
mov
out
stc
xor
popf
inc
add
and
xchg
bound
xchg
shl
jae
add
mov
push
push
hlt
inc
outsl
jp
mov
pop
cltd
ret
sub
cltd
cmp
push
and
and
adcl
test
adcl
cwtl
cmp
jns
mov
outsl
incb
adc
lahf
lcall
ds
xorl
repnz
jl
rorl
jecxz
fs
inc
arpl
push
loope
mov
and
xchg
decl
jmp
or
dec
cmp
lock
add
mov
cwtl
push
arpl
xchg
xchg
mov
jmp
adcb
loopne
sbb
inc
cmpsl
and
lcall
jecxz
push
in
ret
dec
adc
ret
pop
sub
xchg
cld
jle
add
stc
jecxz
repnz
pop
sbb
and
push
pop
or
xor
daa
lret
adc
jle
jo
iret
pop
outsl
aad
out
and
call
stos
jnp
and
and
ljmp
sbb
out
push
mov
cs
insb
adcb
arpl
jo
xlat
cmp
push
fidivl
test
push
mov
jo
ret
bound
xor
cli
shrb
jb
jle
mov
xchg
jmp
lea
ret
mov
dec
incb
fs
cmp
ss
sbb
jae
int
mov
jae
frstor
ds
xlat
xchg
pop
bound
insb
lcall
adc
xchg
fstl
xor
daa
cmc
mov
adcl
pop
stc
xor
push
sub
andb
sub
ffree
mov
sti
mov
jp
mov
mulb
clc
hlt
mov
jo
das
sbb
cli
test
test
sbb
lock
inc
add
pop
insb
fs
push
jmp
js
adc
pop
push
ss
test
and
cmp
std
out
mov
pop
dec
das
dec
aaa
ret
iret
sbb
cmp
cmp
es
mov
in
jno
outsb
das
add
or
push
mov
sbb
movsl
stc
inc
inc
adc
push
mov
hlt
out
jae
mov
ja
popf
xchg
imul
xchg
xchg
jbe
pop
pop
lea
lcall
push
aad
pop
int
add
pop
clc
jne
mov
push
or
shr
aad
adc
inc
jns
sub
addr16
in
loope
push
sub
mov
adc
das
lcall
xor
dec
fwait
jge
ret
push
mov
lcall
repz
stos
and
push
insb
repnz
cmp
rorl
addl
jge
cltd
sahf
cmp
or
cs
sbbl
ss
lcall
subl
xor
iret
jl
mov
cmc
aad
lods
ds
repz
enter
xor
in
enter
push
shrl
dec
inc
inc
js
imul
ss
lret
stc
push
jecxz
out
das
pop
out
stos
loopne
xlat
test
enter
sub
adc
sti
negb
jp
dec
lods
rcrb
movsl
enter
cltd
movsb
push
dec
sub
sbb
xchg
dec
and
ror
gs
sahf
push
pop
out
xor
stos
stc
cli
push
add
pop
add
test
clc
push
jecxz
mov
jecxz
movsb
lret
cltd
fcmovne
mov
or
cwtl
outsb
xchg
or
pop
xor
addr16
push
jl
xchg
in
out
sub
jns
call
mov
mov
lcall
or
jae
adc
xor
loope
addb
mov
and
jnp
gs
int3
cmpsl
or
push
xor
sahf
jge
gs
roll
lahf
rcrl
fnsave
add
pop
sarl
aam
jns
fwait
add
insl
into
cmp
lock
fisubs
push
push
mov
dec
fadd
fs
push
push
jge
test
js
inc
and
mov
inc
mulb
iret
jb
sub
jp
outsb
rcr
cmp
flds
sbb
insl
mull
sub
cmp
testb
pop
add
popa
xchg
fbld
mov
pop
pop
xchg
movsl
pop
mov
inc
pushf
mov
xchg
addb
jno
loop
cld
orb
cmc
sbb
adc
stos
orl
push
scas
sahf
jns
data16
push
inc
fnstsw
mov
pop
imul
or
nop
adc
lret
pop
bound
sub
movsl
lret
inc
popa
and
scas
cwtl
or
ljmp
add
adc
mov
adcb
lock
int3
pop
mov
in
fisubl
ret
gs
xor
sbb
or
imul
cwtl
orb
push
xchg
cmp
xor
jmp
sub
subb
stos
mov
or
maxps
sbb
jmp
push
iret
sub
nop
mov
in
mov
inc
cmp
aaa
arpl
jno
sub
jecxz
push
jg
sbb
out
cmp
add
add
sbb
in
xor
mov
sbb
push
adc
adcb
rcrb
and
pop
cltd
cs
dec
lds
add
fdivl
in
dec
pop
mov
sbb
xlat
add
mov
adc
mull
push
pusha
rcll
or
mov
mov
repnz
jge
test
push
outsb
out
repnz
stc
sub
mov
scas
orb
sbb
sahf
adc
cltd
adc
xor
sbb
cmp
sbb
mov
enter
sbb
ret
loop
scas
push
rorb
push
ljmp
fsts
gs
adc
jl
pusha
loope
sbbl
pop
push
mov
daa
and
lcall
repnz
sahf
lcall
scas
addl
sub
add
mov
or
lds
mov
xlat
ds
aad
push
sub
hlt
mov
mov
int
in
test
cmp
dec
outsl
lret
out
push
xchg
xchg
cmpsb
pusha
in
jns
cltd
push
push
in
cmp
lret
mov
xchg
dec
in
pop
inc
mov
inc
jp
xor
popf
xchg
dec
mov
ss
ret
jge
subb
xchg
enter
mov
lret
ds
push
or
cltd
inc
movsb
lret
hlt
pop
mov
in
outsb
aam
jge
xor
in
jno
jmp
aad
cltd
and
xchg
cmp
sahf
xor
ja
lcall
mov
push
dec
cltd
add
jns
js
pop
mov
pop
arpl
aad
sbb
sbb
out
dec
std
rcl
es
ljmp
es
test
inc
mov
mov
fists
loopne
dec
pop
mov
jp
fldenv
scas
mov
ljmp
and
in
pop
iret
je
ja
stos
cltd
imulb
into
jmp
jno
sbb
dec
jg
in
int
out
aas
push
mov
push
mov
ljmp
movl
sahf
adc
ret
call
jae
idiv
addr16
jp
leave
lea
pop
cmpl
outsl
into
into
ret
mov
xor
jle
mov
add
sub
lret
jecxz
sub
std
mov
loop
nop
pop
ds
add
push
and
ret
pop
clc
mov
dec
sub
mov
faddp
jecxz
push
xchg
mov
cli
xchg
sub
cmp
inc
jge
mov
pop
mov
push
mov
xorb
jle
jo
mov
mov
daa
sbbb
std
rolb
adc
bound
rep
push
cvtpi2ps
mov
adc
pop
pop
mov
addb
xchg
push
in
loop
test
push
xlat
js
pop
sub
xchg
int
fmuls
xchg
add
dec
xchg
addl
or
lret
jg
nop
xchg
cmp
mov
sub
or
mov
adc
mov
or
inc
push
subb
daa
mov
push
mov
cmp
dec
jae
popf
pop
ja
outsb
mov
cmp
add
jmp
adcb
push
movsl
or
sahf
adc
arpl
push
dec
push
popf
stos
std
cmp
lahf
or
inc
jl
adcb
popf
in
adcb
mov
or
push
fsub
incl
dec
notl
lahf
rcll
xor
pop
imul
nop
mov
stos
outsl
lret
das
imul
dec
xchg
jnp
lock
lods
cmpl
lds
lea
imul
push
repz
push
fs
mov
mov
dec
rcll
bound
loopne
push
je
imul
js
jge
int3
movsl
or
out
jb
xchg
ljmp
out
jmp
jns
jmp
dec
test
xchg
jge
sbb
jo
dec
ds
out
das
add
push
hlt
or
xchg
jo
fimuls
in
cli
mov
aam
les
std
and
outsl
ret
dec
sti
fwait
sub
shl
push
mov
cmp
je
jns
cwtl
push
enter
xor
mov
pop
jle
aas
cmp
orb
dec
in
dec
int3
xor
in
addb
cli
nop
add
fistpll
add
add
cs
lret
sub
fdivl
adc
xorb
xchg
mov
imul
sub
sub
mov
or
mov
pop
cmp
inc
push
adc
mov
aam
xchg
loop
popf
test
push
jle
dec
sub
jge
and
dec
add
ja
or
mov
lret
adc
dec
jle
aad
in
fs
cltd
iret
xchg
add
jno
add
orb
mov
cmpsb
ret
mov
out
mov
push
mov
cmp
push
fdivrl
push
jmp
orb
pop
stos
enter
xchg
jns
add
clc
test
ret
orb
aaa
sub
or
cmp
sub
pop
mov
add
or
repz
into
je
add
push
inc
pop
push
and
sahf
jge
inc
or
arpl
addb
push
xchg
mov
adcb
dec
inc
jg
mov
aam
mov
and
xchg
cmp
ljmp
jne
mov
gs
ljmp
jno
xchg
call
xchg
jb
fstpt
cltd
loopne,pt
hlt
xorb
testl
add
pop
lods
xchg
push
push
movsb
addb
iret
xor
scas
lds
push
fistps
xor
test
and
mov
xorb
loop
xchg
out
add
sub
mov
dec
sbb
lods
and
cmpsl
cmp
arpl
mov
jg
sub
lods
push
orb
adc
pop
test
outsb
cmpb
rcrl
cltd
pushf
jg
dec
outsl
call
mov
cli
add
add
roll
mov
dec
lahf
xor
mov
bound
or
xlat
popf
lret
xchg
test
sbb
mov
adcb
push
xor
scas
outsb
int3
lds
or
dec
lea
mov
cmpsl
mov
inc
gs
subb
lret
xchg
mov
jae
aas
push
in
add
imul
push
leave
test
in
addl
xor
rolb
mov
sti
push
subb
push
or
repnz
or
fdivrs
aad
imul
fwait
mov
cmpb
data16
fistps
push
into
js
sbb
push
cwtl
xchg
cmp
or
stos
hlt
aad
cmovae
sbb
in
mov
sbb
sub
je
orb
mov
addl
xorb
adc
xchg
pop
in
loope
jecxz
cmp
pop
fcompl
mov
prefetcht0
sub
insb
ficoms
xor
add
add
or
and
jg
lods
roll
push
rcrb
out
ja
ret
int
and
outsb
push
jnp
inc
push
rcr
scas
sub
in
pusha
scas
lret
int3
data16
mov
xorl
pop
push
cltd
and
lods
pop
insb
push
jnp
hlt
mov
jno
fildl
icebp
xor
lock
adc
jne
adc
mov
xor
and
cmp
cld
nop
or
inc
inc
fildl
jbe
roll
gs
movsl
push
cmp
outsb
pop
fs
mov
add
xor
dec
loop
hlt
pop
sti
jp
pop
xorb
push
flds
in
or
dec
mov
fadd
inc
stos
repz
and
pop
pop
push
pop
aam
test
nop
imul
and
andl
stos
in
cmp
negb
sub
mov
je
mov
test
and
sub
notb
aam
adcb
aaa
rcll
mov
adc
repnz
enter
jbe
mov
mov
xchg
sub
mov
hlt
stos
jnp
jbe
js
addb
xorl
movsb
jg
adcl
or
data16
testb
subb
lock
divl
adc
jae
jnp
pop
ret
and
subl
ljmp
add
sbb
ret
lahf
aad
lods
mov
clc
dec
jg
xor
popf
jb
cltd
ja
lahf
or
test
cs
xorb
dec
fnstsw
test
sbbb
clc
bound
movsl
repz
ret
adc
inc
xchg
mov
sub
roll
jl
adc
je
mov
jnp
ds
ret
dec
lcall
jnp
sti
lret
loope
inc
in
mov
xor
pop
shl
dec
sub
cmp
fadds
xorl
jb
sbb
lcall
xchg
pusha
push
xor
add
pop
test
popf
adc
sub
jb
sbb
roll
das
xchg
cmp
es
jno
push
scas
fiaddl
dec
cmpsb
testl
pop
push
jp
dec
outsl
push
xchg
sub
popa
incl
imul
jmp
cltd
add
sub
jo
push
xor
sti
data16
jne
dec
ss
fs
ja
cs
mov
sbb
repnz
in
lods
jg
subb
inc
xorb
enter
dec
fwait
cmp
adc
fcmovne
adcb
mov
pushf
aam
loop
ret
jmp
out
aad
lret
jns
xchg
add
cmp
add
mov
imul
dec
jbe
dec
jns
in
mov
inc
jmp
stos
mov
shrl
lret
sub
adc
mov
ret
mov
mov
in
mov
andb
sbb
sbb
or
xor
fwait
adc
jge
cmp
mov
shl
or
xorb
rcll
dec
test
pop
loopne
inc
and
faddp
mov
ds
pop
xlat
adc
movl
adcb
xchg
adc
ljmp
inc
cli
enter
stos
inc
push
xchg
in
ja
int3
sti
sub
mov
xor
test
jmp
test
mov
mov
je
in
pop
sbb
xchg
or
cmp
mov
jg
mov
xorb
sti
adcb
inc
gs
out
sub
leave
mov
add
mov
inc
fs
pop
ret
push
xchg
dec
pushf
mov
notb
jg
jne
mov
mov
xor
loope
xor
addb
xchg
jecxz
out
adcb
mov
inc
dec
out
xchg
adc
subb
outsb
rol
mov
int
rclb
push
xor
lock
int3
adc
jg
outsb
nop
jmp
inc
stos
jbe
sbb
fidivrs
subb
cwtl
orb
imul
inc
fmull
outsl
jne
inc
mov
cmp
mov
call
ljmp
jae
outsb
aam
sbbb
mov
js
or
sarb
jmp
adc
repnz
jb
andb
xlat
imul
iret
jae
sbb
push
inc
jno
cmp
arpl
push
cmp
andl
sub
push
and
add
stc
cmpsb
cmp
jne
or
in
ret
mov
cmpsl
adc
cmpb
xlat
iret
popl
test
es
cmpsl
jmp
and
insb
cltd
pop
mov
sub
add
insl
sbb
adcb
out
adcb
inc
lods
sub
sub
data16
mov
or
rcl
xchg
aaa
andl
stc
ret
subb
cwtl
cli
and
insl
ljmp
dec
mov
aad
xchg
sub
dec
cmpb
hlt
sbb
and
xchg
lods
andb
jo
addb
mov
adcb
mov
jne
pop
repnz
iret
add
pop
aad
jae
imul
xor
cmp
fldenv
adc
inc
shr
mov
add
mov
jl
adc
pop
adc
fcomps
js
icebp
test
shr
repnz
ret
fdivrl
cld
xchg
dec
sbb
mov
xchg
lds
cmpsl
stc
adc
icebp
cmpb
jno
cli
ljmp
xor
cld
ret
or
mov
jae
hlt
or
xor
pop
inc
cmp
dec
fistpl
popa
jl
in
fwait
cmp
sub
jbe
es
out
pop
subb
cmp
push
fdivs
nop
jnp
pop
fsubl
outsl
les
adcl
scas
lock
sub
in
sbb
rcrb
xor
or
push
orl
push
inc
cltd
ret
mov
sbb
data16
xchg
dec
mov
xchg
mov
clc
xchg
lea
leave
scas
or
inc
dec
jae
scas
xorl
inc
xor
cmpsb
sti
inc
std
ret
xor
repnz
js
fidivrs
cs
push
push
mov
jecxz
xchg
and
or
or
addb
push
test
push
pop
mov
pop
adc
jno
pop
out
mov
in
stos
pop
mov
enter
call
jecxz
fsubrl
cmc
in
ret
out
sub
ret
sar
jle
mov
sbb
xchg
dec
sbb
sbb
test
pop
adc
mov
int
aas
divl
xchg
cmpsb
pop
add
stc
add
mov
lcall
insl
aam
mov
cmc
add
mov
jbe
jns
adc
je
and
jo
dec
shlb
lcall
adc
mov
adc
fnstenv
xchg
dec
pop
lcall
or
cmpsb
or
out
repz
fstl
sahf
outsb
daa
ret
jno
or
mov
jne
js
in
test
mov
lods
jp
mov
ja
sub
dec
xlat
adcb
add
ret
add
lods
sub
dec
daa
pusha
rorl
out
jnp
sbb
mov
shll
xchg
mov
jmp
insb
outsl
pop
add
repnz
sahf
pop
xchg
xor
cmp
mov
mov
mov
mov
repnz
lcall
add
and
pusha
cwtl
mov
lahf
mov
not
data16
scas
mov
js
je
sbb
fiadds
out
lock
nop
push
xor
ret
xor
mov
jns
pop
jecxz
jns
add
sbb
iret
cmp
loope
adc
pop
push
sahf
inc
add
mov
inc
jbe
in
mov
mov
jecxz
mov
int
xchg
or
xor
js
aam
mov
and
xchg
divb
pop
xchg
xorb
mov
jecxz
xchg
cmp
andl
sti
clc
jg
mov
jne
hlt
sbb
inc
rclb
movsl
scas
daa
outsl
fdivs
mov
sub
popf
scas
popa
push
shl
rcrb
or
fsubr
inc
fsub
inc
lret
or
sbb
les
iret
mov
dec
xor
mov
testb
jp
sbb
jo
cmpl
add
inc
imul
aad
arpl
and
sbb
adc
jge
lret
lcall
inc
subl
cmp
aas
sbb
jo
lret
int3
sub
rcrl
leave
js
lcall
sub
pop
mov
gs
fs
lcall
fwait
ds
lret
jb
push
pop
push
mov
and
lock
add
ljmp
mov
popf
pop
xor
inc
xchg
stc
enter
or
add
xchg
jg
mov
push
addr16
into
ja
pop
aad
cmp
cltd
xor
pop
dec
adc
out
and
xchg
repnz
lcall
fdivrs
bound
or
and
negl
ret
or
sub
fs
push
push
popf
adcb
ret
mov
xchg
enter
filds
jns
inc
fiadds
das
rcrb
outsl
sub
clc
adcb
push
mov
aaa
and
insb
jno
lds
cmpl
lret
stc
inc
xchg
inc
cmpsb
cmp
xchg
cmpsl
into
sub
inc
jmp
cmp
pop
xor
pop
pop
ret
test
cmpsb
int3
add
pushf
ret
in
outsw
fcomp
xchg
loope
sub
es
loopne
div
sub
mov
jbe
sbb
iret
insl
mov
mov
dec
xorb
and
mov
cmpl
inc
jle
xor
sbbb
repnz
repz
pop
sub
mov
jno
xor
ljmp
out
sub
dec
xchg
dec
mov
jns
loope
loopne
rorl
jg
jbe
test
stos
sahf
pop
xchg
push
mov
mov
les
hlt
sbb
lcall
and
lods
mov
repnz
ja
pop
xor
pushf
cmp
pop
sub
jge
nop
inc
jp
cli
xor
das
lds
pop
sbb
mov
cltd
mov
ljmp
test
and
arpl
or
nop
inc
lret
fbld
sti
ja
hlt
inc
and
push
jb
xchg
and
pop
sbb
sbb
mov
mov
sbb
pop
or
mov
cmp
jg
jp
and
shll
jle
sbb
inc
movb
out
jo
out
cli
outsl
lcall
ds
push
lock
add
mov
sub
cmpsl
scas
mov
xchg
mov
mov
repnz
jae
push
in
aam
loope
and
lock
ret
popa
cltd
pop
sbb
arpl
add
sbb
sbbb
mov
jle
cmpsl
jb
sbb
aaa
faddp
push
sub
bound
arpl
mov
out
push
inc
fs
and
hlt
stc
loopne
mov
or
xchg
aaa
pop
push
inc
testb
bound
jle
pop
or
fsubrs
das
xlat
ds
shrl
dec
test
mov
sub
jecxz
mov
bound
lea
cs
lcall
jle
cmp
fwait
divl
push
sbb
sbb
mov
pop
clc
xchg
fidivrs
int
inc
sub
mov
mov
out
sbb
and
jp
ljmp
inc
lcall
loop
out
adc
pop
xor
outsb
and
and
pushf
les
push
loope
push
hlt
repz
mov
cmp
sahf
pop
pop
jns
push
jge
xchg
jmp
inc
push
sub
xlat
xchg
pop
mov
cltd
mov
jo
aad
sbb
fbstp
jp
lods
addr16
mov
ficoms
popf
das
ja
jmp
inc
inc
ret
or
jae
stc
pushl
arpl
pop
sub
push
stc
inc
lcall
xor
rclb
mov
add
xor
pusha
adc
mov
and
and
jge
mov
lcall
or
adcl
ds
xor
and
test
enter
movsb
add
mov
outsb
sub
movsb
aad
jo
sbbb
mov
mov
dec
pushf
add
mov
mov
stc
jns
push
sbb
std
call
jo
mov
sbb
push
int
pop
adcb
add
lahf
aas
stc
enter
inc
clc
call
inc
jnp
and
mov
xchg
push
pop
push
dec
add
ret
sbb
sahf
inc
icebp
xor
mov
cmp
and
imul
inc
pop
stc
and
and
out
arpl
mov
inc
sbb
fs
ljmp
lock
clc
push
arpl
sahf
stos
sub
lret
fisubs
cmpb
xor
subb
cmp
push
in
movsl
sbb
inc
push
lods
mov
subb
adc
sbb
adc
sbbb
jns
andb
xchg
and
in
xor
mov
xorb
cs
pop
into
addb
test
add
jge
and
push
jnp
lret
pop
fistps
or
or
pop
test
mov
mov
xlat
inc
into
clc
fdiv
lods
pop
ds
andb
jle
mov
sub
subl
jno
stos
daa
and
aam
jp
orb
mov
xor
fildll
inc
sub
adc
jno
pop
and
gs
into
or
fnstcw
out
orb
imul
xorb
add
repz
in
orb
clc
and
test
mov
out
push
push
mov
mov
or
fcompl
and
dec
cld
jnp,pn
js
ljmp
jmp
mov
jl
orb
mov
roll
mov
xchg
lret
jnp
cmp
adc
xchg
shlb
andb
aas
rolb
cmp
shrl
mov
in
cmp
fbld
xchg
pop
addb
aad
cmpsb
jmp
adc
add
add
lret
sti
aas
xchg
fcmovu
cmp
and
pop
pop
cltd
xchg
andb
inc
mov
out
andb
jecxz
add
cmp
mov
inc
aas
cmpsb
add
xorb
add
or
or
sbbl
addb
lahf
pop
test
or
fnstcw
loopne
popa
cs
cmc
jg
aas
xorb
add
out
mov
dec
cmp
mov
sub
inc
pop
fdivrl
mov
fisttpl
xor
mov
cmp
mov
and
pop
lds
stos
and
into
dec
adc
adcb
xor
jns
lret
and
jge
jne
aas
es
inc
adc
lds
lcall
xchg
cmpb
mov
sbbb
ret
dec
inc
mov
dec
ret
js
mov
xlat
xchg
outsb
clc
cmp
adcb
jge
mov
iret
adc
les
lods
xor
leave
push
sahf
imul
testb
mov
test
es
je
inc
pop
clc
addb
dec
scas
push
mov
mov
iret
pop
cwtl
and
cld
clc
repz
aaa
or
dec
mov
idivl
movsb
cli
mov
ljmp
das
mov
lods
out
pop
inc
push
ret
cmpb
adc
sub
xor
sub
push
addr16
pusha
mov
iret
jg
lock
or
pop
mov
jbe
dec
push
scas
imul
js
fmul
push
push
jg
loop
add
sahf
sbb
js
or
jnp
mov
mov
loop
xchg
je
out
push
mov
movsb
xchg
inc
adc
inc
jno
adc
andb
sub
dec
bound
push
rcrb
orb
jl
popf
dec
fs
out
xchg
lea
or
andb
repnz
jbe
hlt
outsb
xchg
pop
xorb
sub
adc
jb
das
pop
movb
mov
push
pop
fsub
mov
cmpb
fnsave
mov
xor
cmp
jae
gs
sbbb
shll
fimull
ret
mov
and
mov
adc
adc
sub
cmp
aaa
mov
data16
mov
int
pop
test
or
jns
ret
pop
fs
pushf
xlat
add
sbb
mov
gs
adc
adc
je
cmp
lock
adc
and
addr16
push
es
push
orb
mov
add
mov
js
adc
loope
into
sbb
in
jp
fsts
cmp
add
inc
jp
cmpb
and
mov
loop
sub
jle
lret
xchg
int3
add
push
scas
orb
addl
and
pop
add
add
flds
sbb
jle
jecxz
adcl
xchg
mov
std
orb
or
cmpb
xor
add
cmp
ficoml
and
or
pusha
xchg
cwtl
incl
fidivl
mov
or
movsl
cld
fcompl
in
inc
aad
sahf
mov
aam
and
sub
loop
in
inc
cmpsb
and
daa
sbbb
push
jno
lahf
xor
jl
mov
call
inc
pop
push
es
add
push
adc
xchg
pop
test
iret
jg
andb
rorl
into
push
jnp
mov
out
inc
xorb
pushf
repnz
shll
or
lds
gs
lods
add
push
push
jb
inc
jae
mov
sbb
adc
jg
mov
sbb
stos
sub
mov
pusha
lea
outsb
outsb
inc
or
adc
cmp
or
subb
aam
std
dec
outsl
and
sub
pop
add
leave
pop
push
or
call
or
mov
and
dec
cmc
adc
orb
aas
das
addb
push
sub
imul
cmc
mov
inc
inc
xchg
cmpb
mov
xorb
jns
gs
arpl
shr
stos
adcb
jae
adc
push
nop
repz
daa
adcb
xor
mov
jle,pn
jns
mov
and
decb
cmp
addb
cmpsb
notb
jbe
pushf
fisubs
enter
xchg
ja
add
shlb
cltd
mov
shll
dec
js
loop
in
mov
xchg
lods
cmp
jg
push
sarl
push
ja
enter
or
lock
test
lds
pop
push
bound
adc
cli
fstps
cs
and
and
jbe
addr16
push
push
mov
xchg
and
cmp
cwtl
pushf
xchg
bound
cltd
sub
pusha
sub
out
imulb
cmp
jmp
repnz
jecxz
cmp
les
jge
sub
sub
push
sbbb
ds
adc
dec
testl
xor
cmp
xor
scas
push
sub
inc
jecxz
cltd
mov
je
ss
scas
imull
mov
dec
arpl
push
mov
hlt
mov
cwtl
cmp
mov
mov
popa
stos
loop
jae
sbb
jbe
jp
adc
ret
or
mov
xor
mov
pop
ljmp
ljmp
iret
adcb
mov
xchg
push
rcrb
push
cmp
sub
ret
adc
popw
lds
stos
mov
xor
cltd
leave
jo
out
cli
and
jg
adc
test
mov
adc
jbe
sub
jne
mov
cwtl
lds
iret
or
lds
ja
pop
lock
cmpsl
xchg
mov
dec
shlb
inc
test
das
test
ffree
push
push
or
cmp
lcall
es
fimull
jl
cmpsb
push
cld
mov
orb
shrb
xchg
je
adc
insl
leave
pop
inc
add
cmp
imul
pusha
and
cmp
mov
out
cld
add
mov
stc
sbbb
adc
jnp
or
or
movsb
pop
jge
mov
adc
insl
lret
addl
adc
xchg
push
adcl
mov
mov
lret
push
mov
subb
aaa
and
sti
adc
push
mov
xor
out
sub
cmp
fdivs
fcomi
imul
loop
adc
hlt
mov
outsl
pop
xor
pop
xchg
sarb
rcrl
jp
mov
dec
dec
out
imulb
push
push
cmp
in
cmp
sub
ljmp
push
xor
dec
sbb
outsb
sub
cld
rol
lret
sbbb
test
pop
cmpsl
add
inc
adc
sub
xor
sbb
jg
xor
dec
add
les
mov
or
push
out
addb
clc
push
mov
lods
loop
addb
js
je
out
jle
mov
cld
xchg
add
orb
lret
cwtl
and
mov
mov
ss
int
orb
adc
roll
mov
std
pop
add
andb
mov
dec
and
push
sbb
cmc
and
loopne
sub
int
jg
ds
mov
lret
addl
icebp
sbb
orb
mov
cmpl
insb
mov
enter
adcb
add
xchg
jg
mov
ficoml
test
sbb
insb
and
jae
inc
jns
rcrl
lea
arpl
cltd
in
xor
dec
mov
adc
push
cs
pushf
movsl
cmpb
fdivrl
les
xchg
xorb
mov
orb
and
jnp
sub
lds
loop
addb
jg
pop
ret
aam
xor
fmuls
call
mov
sbbb
jno
pushf
jb
add
adcb
arpl
addb
xchg
dec
and
test
dec
imul
mov
out
lds
clc
mov
inc
flds
mov
lcall
aaa
sub
or
jecxz
addr16
addl
inc
loopne
je
jo
es
xchg
and
subb
cmpsb
cli
pop
push
lret
cmpsl
loop
sub
call
dec
addr16
pop
jle
sbbb
aad
xchg
mov
gs
fcmovnu
and
ss
in
cmpb
push
jl
inc
arpl
add
mov
xchg
mov
jge
jl
in
jnp
mov
arpl
popa
pop
ss
pushf
subb
sub
xchg
sub
fdivs
call
pop
loopne
push
icebp
mov
lcall
add
fxch
and
adcb
icebp
dec
gs
push
adcb
fldl
nop
orl
cwtl
vmulps
xor
les
clc
or
in
lahf
je
sub
mov
leave
jmp
out
push
insb
xor
je
pop
movl
jg
in
add
push
sbb
movsb
movsl
mov
inc
adc
data16
movl
mov
jge
sbbb
push
xor
push
aam
test
push
push
xchg
subb
pop
pop
adcb
outsb
pusha
je
leave
ja
pop
and
inc
mov
and
mov
test
dec
fiaddl
sbbb
ljmp
imul
insb
fwait
addb
mov
out
mov
cld
inc
mov
adc
sarb
jae
sub
jmp
ja
fsubl
repnz
jmp
push
cmpl
add
xorb
cmpsb
scas
mov
cmp
movsl
shlb
andb
sti
adc
xchg
jo
push
insb
xlat
inc
dec
jle
out
cmpl
cs
cmp
and
enter
sbb
cltd
rep
ja
lock
icebp
popa
mov
adc
push
pop
inc
clc
or
inc
dec
inc
mov
jo
lods
call
mov
mov
mov
xchg
jmp
mov
cmc
roll
clc
rorl
add
xchg
addps
loope
lret
pop
fiadds
xlat
andb
outsl
cmc
cmp
mov
fdivrl
test
mov
pushl
jno
or
mov
xchg
adcb
clc
jle
xor
pushf
sub
pop
cmpb
cmpb
ja
or
aaa
add
pop
loop
sbbb
mov
jae
aas
das
mov
pusha
mov
pop
andb
rorl
mov
and
push
inc
in
push
dec
rorl
cmp
cmp
xor
inc
add
pop
mov
add
fdivr
addr16
adc
ret
push
imul
adcb
into
movsb
xchg
adc
in
fwait
or
push
adcb
or
sbb
cmp
orl
dec
data16
jmp
mov
ret
fildl
rolb
mov
and
pop
inc
or
add
mov
xchg
xor
ja
cmp
mov
subb
xchg
cmp
sarl
dec
sbb
stc
jo
rcrl
cmp
loopne
ret
in
pop
mov
aas
pusha
fidivrs
aad
adc
ss
orb
and
xchg
xor
xorl
dec
fs
add
and
adc
dec
mov
adc
cmp
inc
ret
adc
pop
daa
nop
movl
aaa
adc
push
cmp
mov
loop
cmpl
or
jge
mov
push
mov
inc
scas
xor
je
push
mov
sub
cmp
adc
jne
add
ret
pop
pop
loope
add
mov
cmpb
lock
push
subl
sbbl
pop
pop
incl
popa
sub
xor
fwait
int
movsb
jnp
or
in
push
aaa
subb
cmp
xchg
mov
pop
adc
xchg
push
mov
xchg
testl
xor
imul
jb
rclb
sbb
push
push
lcall
mov
addb
stos
adc
data16
and
arpl
cltd
push
mov
pusha
rolb
ret
leave
xchg
cltd
sub
mov
adc
dec
and
jp
clc
testl
test
lcall
orb
fidivrl
scas
sti
mov
es
or
mov
mov
mov
mov
push
hlt
loopne
push
cltd
sahf
inc
outsb
push
xlat
pop
mov
xor
push
pop
jle
int3
fiaddl
out
sarb
push
fldenv
repnz
jg
shlb
mov
mov
outsb
cs
push
ds
daa
pop
aad
jae
xchg
dec
sub
popa
popf
stc
ss
mov
les
push
cmc
out
scas
sbb
out
imulb
test
pushf
into
cmc
negl
xor
ljmp
hlt
test
sub
and
adc
inc
sarb
in
daa
jno
push
fstp
outsl
or
inc
xchg
bound
xor
in
jb
stc
pavgw
push
jbe
ljmp
iret
push
and
sti
mov
mov
xchg
mov
lcall
sub
mov
mov
test
insb
and
ficoms
sub
shrb
xchg
sbbl
mov
out
xchg
pop
xor
inc
push
xor
adc
fcoms
pop
jecxz
mov
ret
mov
jge
ds
lods
icebp
xor
xor
xchg
mov
push
test
push
mov
das
arpl
outsl
mov
leave
xchg
dec
cltd
mov
cli
ss
jl
sub
ret
pop
clc
and
pop
repnz
mov
xor
aad
in
pop
fisttpl
fidivl
gs
jmp
pop
movsl
pusha
cmp
mov
scas
out
jg
arpl
jne
pop
clc
dec
mov
in
xor
sbb
cmp
push
pop
jae
arpl
jecxz
xchg
xor
mov
and
cli
stos
out
push
ret
cld
jo
ret
push
sarb
sbb
push
lcall
push
adc
stos
cld
addr16
and
xlat
xchg
cmp
mov
imul
cmc
jmp
or
mov
jp
jle
and
addl
lret
or
repnz
shll
mov
mov
sub
jns
or
jl,pt
stos
in
xor
jg
inc
stos
movsb
jae
jecxz
out
lock
movsb
and
push
mov
cli
xchg
mov
jbe
mov
mov
mov
ss
sbb
jae
xor
push
ret
sbb
cli
dec
std
pop
jp
push
aad
add
lcall
and
xor
mov
pop
add
jno
idivl
lods
dec
stc
test
mov
sub
test
fstl
insw
imul
aad
pop
or
mov
jp
out
jne
or
or
xchg
std
xchg
out
push
sbb
xchg
xchg
push
in
inc
in
fdiv
daa
jp
pop
js
push
cmp
addr16
xor
nop
xorl
fcmovu
xchg
cltd
dec
cmp
ja
push
cmovg
movsl
roll
orl
mov
repz
lock
mov
push
pop
mov
lret
cltd
adc
neg
add
sub
and
mov
shl
pop
hlt
push
mov
jo
jb
iret
mov
mov
mov
pop
daa
repz
cwtl
stc
fidivl
sub
inc
mov
inc
mov
imul
iret
jge
out
sub
push
imul
fmuls
aaa
mov
andl
jns
and
psubq
out
cmp
fildl
sbb
test
cmp
pop
lds
add
sub
inc
hlt
xor
sbb
mov
fists
insb
add
fcmovbe
push
ss
add
pop
ljmp
mov
inc
pushf
mov
jb
bound
lcall
push
fwait
jnp
jne
ljmp
lods
adc
int3
dec
les
xchg
sbb
je
and
scas
sbb
inc
stos
and
ja
lock
in
sub
sub
insb
icebp
and
jle
lds
push
and
push
adc
dec
js
lret
mov
jle
or
es
and
ret
pop
aas
jbe
add
fadds
cltd
in
addr16
mov
dec
sbb
gs
add
push
xor
push
daa
jl
lahf
and
add
ljmp
in
adc
mov
lds
lret
pop
test
xchg
lcall
pop
aad
jbe
stc
mov
or
lods
and
push
xchg
jp
decl
sub
push
out
dec
adc
jle
movsl
loopne
push
ret
push
mov
ja
stc
repz
ljmp
seta
cltd
pop
sub
std
push
into
sbb
adcb
sbb
pusha
sarb
insb
shrl
sub
adc
cmp
mov
xorb
sbb
mov
cs
xor
jl
or
stc
mov
jle
or
rcrl
in
xor
mov
div
xchg
pop
mov
mov
cmpsl
lret
add
cmp
lods
add
adc
imul
mov
out
push
outsb
push
sub
cmpsl
in
lcall
sbb
adc
es
imul
fwait
mov
lret
adc
test
fcmovb
int
lock
jns
mov
stos
addl
lds
rcll
repz
mov
pop
mov
ja
xchg
rorl
and
or
incl
or
xor
in
mov
jmp
xlat
and
inc
mov
inc
jmp
inc
inc
aad
mov
lret
mov
fsubrs
jle
or
sbb
es
add
ja,pt
in
push
add
add
nop
cmc
cltd
adc
jns
sub
lods
sub
cmp
mov
aam
cltd
inc
pop
addb
outsl
xchg
push
popa
jge
fnstenv
aam
xchg
xor
pop
xchg
xchg
sbb
outsl
popa
xchg
cld
jle
arpl
popa
pop
bound
adc
out
add
adc
rolb
mov
ds
ret
insl
insb
out
aam
lock
pop
cld
mov
lock
lahf
aas
mov
xchg
sub
dec
dec
and
sub
pusha
mov
inc
mov
jl
popa
addb
cmpsb
in
sub
push
mov
leave
pop
stos
fldln2
jnp
lods
repz
push
and
shrl
lcall
jo
jge
arpl
scas
ret
adc
add
jb
dec
mov
sti
fidivrl
dec
ret
jb
sub
dec
xchg
xorb
mov
jp
jg
and
fcmovb
mov
cmpb
outsb
int
cmp
adc
arpl
mov
push
push
mov
fistpll
mov
jg
or
sub
cli
mov
bound
mov
in
ds
test
test
xor
sub
daa
andb
mov
ss
test
arpl
xchg
mov
scas
mov
aad
push
movsl
sub
std
add
xchg
mov
test
mov
push
mov
cwtl
pop
xor
cld
mov
push
das
mov
orb
adc
pop
push
mov
add
fwait
add
xchg
ljmp
out
int
imul
sti
daa
fwait
push
mov
ret
addb
cmc
jg
sahf
clc
adcb
sbb
popa
adc
out
or
out
push
add
test
cmp
inc
inc
fdivl
adc
out
dec
jg
mov
lahf
push
push
insb
adc
or
movsl
adcb
call
and
mov
or
and
and
cld
push
add
push
into
cmp
lret
sub
test
stos
adc
and
jle
out
xchg
mov
dec
sub
arpl
adc
pop
or
gs
in
inc
mov
xor
and
bound
cmpb
dec
shll
or
sbbb
outsl
jg
or
adcb
mov
test
push
sbb
jb
add
or
aaa
xor
and
orl
dec
iret
cmp
mov
adc
dec
jo
cmp
lock
pop
leave
loop
cmp
orb
mov
sahf
xchg
jmp
inc
mov
imul
stos
sub
into
fs
fiaddl
or
add
mov
cmpsb
xchg
mov
mov
mov
out
test
jg
cmpsb
inc
add
cmp
cmp
xchg
popa
jmp
push
sub
enter
ret
inc
inc
not
sbbb
pop
mov
mov
popf
xor
aad
mov
jnp
adc
dec
adc
lret
mov
fadds
into
enter
subb
xlat
jns
pusha
xchg
xorb
jl
adc
out
ss
cmp
dec
test
ja
xor
mulb
fisubrl
inc
adc
bound
orb
xor
dec
jl
andb
xchg
dec
dec
jns
sbbb
loop
js
jl
push
cmp
addl
push
add
roll
cmp
sbb
cld
push
adcl
mov
xchg
fstps
aad
insb
or
addr16
and
xchg
or
out
aam
mov
cmpb
sbb
movsb
or
roll
mov
or
sbbb
in
leave
cmpsl
nop
mov
adc
jle
and
sub
add
addl
cmpb
push
xchg
inc
mov
fadds
xor
sbb
sbb
mov
in
xchg
push
mov
clc
bound
mov
sub
cmp
jmp
mull
mov
cmpb
in
push
inc
xchg
sub
jnp
jmp
xchg
xor
int3
test
faddl
aam
sbb
ror
mov
sub
sbbb
jnp
test
ret
xor
jae
sub
sub
arpl
xchg
push
movb
aam
test
test
dec
jbe
and
loopne
mov
jecxz
xchg
jl
sbb
adcb
imul
inc
fninit
and
push
sbbb
xchg
jg
in
lret
cltd
cmp
and
stos
subb
adc
push
repz
out
push
jb
push
orl
add
outsl
sbb
jge
inc
aaa
mov
dec
pusha
aad
adc
in
cmp
decl
aam
ljmp
and
dec
or
xorb
popf
jmp
les
mov
gs
xor
bound
js
pop
sbbb
ss
xor
push
jns
adcl
adc
xchg
test
inc
add
dec
sbb
push
cmp
orb
in
ja
inc
or
scas
mov
mov
sarl
push
cli
mov
repz
rorb
je
nop
std
mov
push
xchg
inc
mov
iret
add
jno
mov
scas
ljmp
sbbb
mov
mov
jge
out
imul
dec
je
addl
xchg
mov
icebp
loope
imul
or
jo
add
push
xor
xor
icebp
rolb
arpl
arpl
and
push
movsb
inc
pop
push
jp
push
fdivs
int3
sahf
and
dec
inc
hlt
pop
xorl
cmpl
mov
adcb
in
mov
pop
xor
data16
sbb
fimuls
mov
mov
cld
push
jne
dec
mov
incb
repz
cltd
movb
xchg
mov
fnstsw
pop
outsl
testb
popf
jp
je
push
pusha
xchg
mov
in
add
sub
and
dec
adc
jno
add
push
mov
mov
and
mov
fmull
adc
adc
and
jne
in
adcb
mov
cmp
mov
andb
lahf
cmc
xchg
fiaddl
in
mov
push
cmpb
adc
jnp
scas
add
jge
andb
insl
mov
lods
lock
lods
orb
bound
adcl
lret
push
insb
sbbb
push
add
pop
inc
fs
bound
mov
iret
xchg
call
mov
dec
sahf
out
adc
je
pop
jne
arpl
fnstcw
popa
xor
movsl
push
xchg
lret
cmpsb
mov
sbbb
arpl
inc
fsubrs
xadd
repnz
in
orb
aam
push
enter
inc
ret
mov
adc
pop
in
sbb
pop
sti
sub
push
mov
repnz
push
dec
xorb
in
cmp
ljmp
jecxz
cmp
fistl
ret
incl
scas
inc
cmp
and
stos
push
lret
movsl
cmp
into
and
pop
ljmp
idiv
popf
xorb
cmp
push
mov
or
test
test
dec
rcrl
mov
jns
test
xchg
addb
icebp
loopne
mov
cmp
fstpt
pop
mov
dec
xorb
addb
mov
leave
outsl
mov
aas
pop
in
sub
mov
and
adc
aaa
imul
and
push
cmpsb
ds
jae
cmpsb
mov
outsl
sbb
push
push
mov
add
lcall
jnp
in
aas
add
mov
sbb
push
orb
mov
andb
mov
jnp
mov
dec
lahf
mov
pushf
loop
cmpb
and
pop
aad
push
shll
adc
and
add
idivl
mov
fxch
test
andb
pop
movsl
jecxz
bnd
fmull
sahf
jns
addb
jae
sub
pop
imul
push
xchg
push
repz
mov
and
pop
sbb
sub
adc
push
or
pop
or
loope
add
mov
andb
mov
repnz
xchg
adc
movsl
cmp
jns
mov
mov
jg
mov
mov
inc
aad
imul
sub
subb
mov
call
push
jg
cmp
jb
repnz
jmp
or
ret
push
xorb
orb
or
pop
addb
stos
pop
fildll
mov
mov
cs
jo
cmp
sahf
shll
mov
jo
test
inc
lahf
fstpt
dec
jle
stos
adc
mov
xchg
lret
sub
or
repz
jno
or
cmp
cwtl
xor
cmc
shlb
add
mov
xchg
xchg
data16
subb
aad
daa
notl
and
rorl
mov
xchg
cmpb
jmp
mov
das
inc
dec
push
addb
mov
loopne
jp
addr16
mov
mov
out
ret
mov
or
push
insb
mov
or
in
lcall
add
mov
pop
je
cli
jp
cmc
sbb
xchg
push
daa
sbb
push
xlat
inc
dec
cltd
int
fstps
mov
xor
cltd
push
push
cltd
cmpsb
aam
mov
push
inc
or
push
push
inc
bound
sarb
test
mov
add
jo
filds
push
in
mov
fstpt
insb
cs
scas
ja
aaa
jl
cltd
les
push
mov
movsw
ljmp
jns
call
or
lcall
insl
popf
jmp
and
hlt
mov
sbb
adc
and
sub
ds
jle
sub
xchg
sub
pop
mov
rorl
and
jl
cli
mov
sub
test
test
or
fidivrl
xor
ja
lret
jo
dec
jp
push
jne
push
mov
mov
sub
out
cltd
push
fs
sub
xor
aam
xchg
pop
fimull
jl
imul
add
pop
cmp
dec
cltd
pop
jmp
add
enter
in
cld
pop
jb
mov
sbb
and
divl
sbb
aas
aaa
and
inc
fmul
jb
repz
ss
stc
ljmp
pop
cs
jle
cmpsb
js
mov
outsl
icebp
rcll
sar
or
dec
cld
cmp
int
jnp
inc
in
fsubrs
add
loopne
sub
std
mov
subb
stos
jecxz
sub
and
out
xchg
loop
mov
sub
mov
mov
fnstsw
jl
xor
flds
and
icebp
xchg
jp
dec
in
fistpl
mov
cmp
sbb
mov
and
roll
xchg
jno
test
aam
lods
std
mov
jmp
xor
notl
dec
mov
imul
cmp
or
inc
push
cli
insl
push
xor
jge
into
dec
adc
jl
pop
or
stc
add
jl
nop
ss
jns
cmp
xchg
sbb
or
stc
nop
jns
cmp
lret
cmp
cltd
xorb
aaa
add
scas
mov
pusha
pop
nop
xor
mov
jnp
dec
int3
push
sub
sbbl
outsl
cmp
iret
cli
xchg
xchg
testb
jns
into
insb
mov
dec
call
mov
loopne
movsbl
fdivrs
mov
jns
mov
ss
stc
je
xchg
and
mov
repz
push
stc
ja
pop
pop
cmpb
inc
and
testl
xor
jmp
mov
fucomi
inc
add
clc
push
cmp
mov
jg
jbe
inc
lcall
jecxz
test
or
jo
mov
gs
andb
add
push
add
jne
adc
lock
ja
lcall
cwtl
mov
rcrb
jecxz
jne
adc
pop
sub
mov
cltd
je
jns
inc
in
push
aaa
sub
push
jne
lcall
movsl
dec
arpl
imul
or
outsl
lcall
test
xchg
adc
addr16
jg
bts
fisubl
mov
in
or
insb
push
mov
mov
movb
sub
jb
dec
inc
and
movsb
jl
aaa
mov
cmp
pop
jle
inc
or
shll
mov
imul
push
add
ret
dec
stos
push
int
ljmp
mov
mov
push
lcall
jge
fnstenv
outsb
aaa
adc
mov
jle
xchg
mov
adc
add
aad
mov
sbb
mov
sar
stc
in
sbb
xchg
jl
outsb
push
cli
add
jle
sbb
fmuls
outsl
lds
pop
adc
sbb
lcall
daa
jg
imul
xchg
rcrl
cmp
sub
jb
aas
lahf
inc
repnz
sbb
idivb
insb
jp
mov
aaa
jecxz
xlat
ss
pop
minps
sub
ss
cmp
sub
negl
out
push
mov
stc
subb
lock
int3
dec
fidivrl
inc
sub
mov
andl
jle
lret
inc
loopne
inc
jle
cmp
enter
clc
cmp
xchg
cmpsb
cmp
mov
cmp
push
sarb
cli
push
push
xor
xchg
sbb
outsb
ds
xchg
mov
dec
lret
scas
stc
xchg
sub
rclb
dec
int3
cmp
add
sub
subb
sub
sbb
int3
inc
cmp
and
jecxz
mov
pop
pop
ss
dec
push
jo
mov
lods
push
cltd
bound
push
in
das
cltd
or
push
inc
sub
mov
ja
mov
leave
push
xchg
adc
gs
jns
mov
cmp
jmp
xor
mov
sbb
cmpsb
mov
stc
outsl
xor
xchg
gs
xchg
pushl
mov
test
xchg
push
ret
jnp
inc
fldcw
jl
cmp
lahf
jae
xor
mov
inc
cmp
imull
loopne
repz
mov
jae
cs
cmp
xor
pop
pop
push
add
dec
pop
aad
mov
imul
insb
xor
mov
negl
mov
stc
xchg
out
stos
sahf
scas
rol
fldt
sbbl
adc
xor
xor
jbe
in
push
pop
adc
out
je
ljmp
das
xor
jg
push
test
fists
xor
cmp
pop
js
mov
add
sbb
sub
inc
push
sbb
es
int
arpl
jb
lcall
div
inc
imul
xchg
icebp
aam
and
or
mov
push
sub
jo
imul
sbb
fs
cli
jnp
mov
repnz
adc
les
fists
cli
clc
push
out
enter
mov
xor
mov
and
outsb
in
in
adc
cmp
xlat
xchg
loop
jns
cmp
movsb
jae
mov
cwtl
and
jnp
jecxz
std
mov
mull
adc
shrl
repz
imul
movsl
xchg
mov
inc
das
cmp
jbe
arpl
out
mov
insl
scas
xor
mov
and
mov
jae
fwait
stos
lods
sbb
jo
jnp
scas
mov
sbb
push
movsb
pop
cld
ss
add
gs
rorl
dec
jae
push
rclb
inc
jp
add
enter
pop
scas
sbb
pop
rcrl
add
add
es
mov
lcall
jp
dec
push
cmp
jne
cltd
fucomip
repnz
pop
inc
fisttpll
lret
pop
insb
mov
xchg
mov
push
xlat
loopne
sub
js
jb
xor
fsin
dec
lds
mov
xor
leave
lods
cmp
cmc
sub
jle
cmp
pop
jp
xchg
and
xchg
add
sub
adc
dec
jbe
sbbb
dec
xchg
loope
xor
inc
leave
cltd
add
mov
ja
insb
fidivl
push
clc
imul
popa
lret
push
sbbb
mov
ret
mov
pop
adc
or
testb
orl
pop
cmpsl
cwtl
jg
shlb
mov
push
or
cmp
and
inc
ja
mov
add
jns
jae
lods
jno
mull
mov
mov
loope
sti
xchg
cmp
sub
fwait
cmpsl
lods
sub
scas
test
cmp
add
pop
push
lcall
sub
in
xchg
push
movsl
xchg
data16
mov
or
pop
shlb
jl
ja
xor
or
or
and
adc
push
fsubs
cld
mov
hlt
mov
aam
decb
sahf
add
jno
mov
pop
pop
lds
adc
das
shll
dec
stos
push
cmpl
and
sub
add
jb
movsl
stos
jns
sub
pop
shlb
mov
shll
jp
mov
pushf
jns
imul
and
dec
adc
sbbb
addr16
or
in
jns
ret
lds
dec
icebp
pop
adcb
adc
orb
and
lods
adc
enter
adc
pop
pusha
test
inc
inc
mov
sbb
xlat
mov
int
cmp
adc
je
fwait
inc
add
mov
aam
and
subb
mov
jae
cmp
leave
clc
mov
lcall
dec
sbb
sub
and
xor
jmp
mov
outsl
sub
pop
fs
and
into
inc
lret
pop
jg
outsb
jb
add
xorb
out
pop
fiadds
stos
push
pop
insb
add
mov
cs
pop
into
and
and
or
rcll
push
dec
xchg
or
js
bound
shlb
cmpb
jo
cmp
orb
inc
mov
mov
adcb
mov
andb
xor
sbb
orb
in
cmp
addl
sub
stos
mov
imul
pop
sub
test
filds
mov
lods
ljmp
les
inc
inc
add
andb
scas
dec
mov
repz
cmpsb
aas
pop
sar
jnp
insl
icebp
leave
jnp
je
fidivs
adc
or
aas
sbb
xorb
test
jmp
test
fisubl
out
jnp
and
or
inc
xchg
lret
popf
mov
iret
out
test
fbld
mov
and
sbb
jbe
pushf
mov
lock
cmp
and
cltd
out
aam
jnp
jle
in
arpl
aaa
pusha
mov
and
or
and
int3
out
dec
dec
xchg
pop
loopne
or
inc
xorb
sub
cwtl
stos
loop
sbbb
cmp
roll
sub
jle
sarb
jmp
dec
inc
pop
repz
pop
ret
jnp
dec
xorb
or
or
ds
enter
xorb
mov
jmp
inc
mov
cmpb
inc
andb
je
sub
jmp
fistps
jbe
in
aaa
int
loopne
daa
pop
andb
repz
cmp
dec
pop
xchg
jl
add
mov
mov
pop
mov
andb
lock
and
in
mov
mov
xchg
pop
jp
loopne
push
mov
xor
jecxz
mov
es
test
icebp
jb
jns
out
repz
cmp
sub
push
addb
subl
xor
cmpb
add
lock
inc
jg
out
shl
mov
lcall
ret
sbb
or
jle
jns
adc
jl
lret
call
andb
mov
or
gs
push
xchg
into
cwtl
pop
fwait
cmp
xchg
and
inc
jo
js
pop
addb
fwait
lds
icebp
mov
sub
int3
mov
xorl
push
je
cmp
add
sbbb
pop
lret
je
and
lcall
mov
test
jmp
and
ficompl
xlat
leave
fistpll
loope
bound
fisubl
int
push
nop
jecxz
adc
mov
aas
adc
imul
ret
fwait
sar
stos
sti
loope
popa
mull
popf
jmp
dec
fists
dec
xorb
jno
call
sbb
sbb
jne
dec
mov
test
icebp
gs
add
inc
mov
fists
ret
pop
scas
addl
ljmp
add
movd
cmp
mov
sbb
sbbb
addr16
push
push
cmpb
out
test
xor
dec
push
lss
stos
sbbb
inc
add
rcll
int
lds
adc
imul
subb
jg
xor
fiadds
or
adc
or
xor
jb
stc
inc
sbb
cmp
inc
adc
pushf
js
add
pop
cltd
mov
and
stc
push
mov
or
pop
test
xchg
sub
cmp
cld
into
fs
negb
ret
adc
lea
or
jnp
in
cmpb
xor
dec
mov
sti
repnz
mov
dec
sarb
lahf
ret
call
xor
lcall
out
into
sbb
es
push
inc
addl
jo
add
xlat
xchg
or
jmp
jae
fcomip
mov
lea
adc
mov
push
ret
aas
xorb
sub
xchg
lods
gs
sbb
jne
mov
mov
ds
shrb
ss
xchg
mov
fdivrp
xlat
out
mov
movsl
enter
add
ret
xchg
sti
js
inc
push
jae
fldln2
cmp
call
les
fstl
lds
add
xchg
and
addl
and
dec
cli
jnp
ret
xor
cmp
andb
sub
cmpb
out
push
imul
inc
mov
addl
test
addr16
cltd
jnp
ljmp
movsb
loop
pop
mov
pop
into
inc
mov
pmulhuw
dec
lret
icebp
dec
dec
out
ljmp
xorl
add
repnz
cmpl
enter
fldenv
cmp
dec
mov
fdivs
cmpsb
and
inc
xchg
mov
loop
outsl
mov
adc
mov
subb
dec
ret
cmp
xor
popf
gs
xchg
das
lds
adc
jo
test
scas
pop
add
mov
cmp
mov
sahf
sub
push
inc
sbb
jg
cmp
add
fsubrl
dec
clc
add
addb
xor
cmpsb
test
mov
loop
rol
aas
sti
subb
push
loopne
jne
and
add
or
mov
dec
sbb
test
adc
sub
out
adc
cltd
lock
adc
pop
mov
push
jg
push
xor
adc
fldenv
stc
jl
mov
push
pop
mov
daa
mov
inc
gs
xchg
test
fs
sbb
cmp
inc
test
subb
std
jns
sub
outsl
add
dec
into
inc
mov
xchg
lret
lods
cs
jbe
repz
addb
dec
jecxz
sub
jmp
mov
and
and
add
sbb
adc
or
pop
jg
mov
std
ret
fisubl
add
test
out
rolb
mov
scas
andb
push
mov
subb
dec
test
js
dec
je
leave
and
dec
fnstsw
imull
data16
repnz
lock
cmpb
lahf
loopne
mov
cld
mov
or
jp
mov
movsl
mov
mov
push
and
or
addr16
ja
orb
mov
pop
mov
pop
mov
daa
jle
adc
movsb
std
add
cmc
adc
mov
sahf
lahf
sub
inc
add
ss
dec
fwait
add
or
jnp
sub
mov
xor
xor
mov
sub
subb
cltd
cmc
sub
rorl
inc
dec
fisttpll
std
icebp
jge
jb
loop
mul
cwtl
cmp
mov
push
sub
push
cli
sbb
xor
dec
mov
int3
add
jb
inc
xor
push
xchg
jmp
loopne
and
jmp
sub
sub
lcall
sub
sub
push
bound
adc
ds
mov
mov
pop
repnz
xchg
mov
addl
jl
adc
mov
push
xchg
in
dec
jmp
jl
pop
inc
subb
mov
dec
cmp
int
mov
push
and
dec
out
pusha
mov
loope
loopne
stos
daa
xchg
cmp
cmp
or
cwtl
nop
push
add
add
or
jae
test
and
add
mov
fldl
mov
lcall
fucom
or
inc
lcall
pop
sbb
adc
jnp
mov
jl
gs
out
fstpl
jo
out
aaa
aas
stos
xor
mov
in
push
and
inc
cmp
test
push
repz
in
mov
xlat
ret
cmp
cwtl
xlat
stos
lods
pop
inc
push
add
dec
pop
push
pop
sub
xchg
mov
dec
jecxz
pop
in
sub
roll
out
repnz
jb
sahf
sub
sub
jp
xchg
lcall
sub
cmp
add
in
push
or
mov
mov
mov
leave
push
jno
add
lcall
mov
aaa
iret
and
lcall
ret
cmp
inc
adc
scas
lcall
lea
mov
aas
add
int
dec
addr16
or
mov
xor
andnps
icebp
nop
sti
lods
or
adc
sbb
jge
cmpsb
ret
xchg
es
std
lret
aam
in
dec
jmp
add
jmp
push
mov
inc
testb
jg
stc
xor
les
xchg
mov
insl
jge
out
andb
jecxz
lret
das
cs
adcb
daa
xchg
and
push
mov
jnp
xchg
lcall
mov
rorl
jl
out
mov
and
idivl
int
mov
xchg
adc
insb
push
dec
pop
aaa
outsb
ret
pop
aam
or
lret
cltd
js
mov
shrl
vunpckhps
mov
sbb
test
das
cltd
lods
sub
xor
xchg
inc
fdivrs
cmp
inc
add
jle
sahf
cltd
add
nop
insb
flds
dec
in
xchg
xlat
inc
dec
add
lea
je
and
dec
or
mov
loopne
inc
sbb
andl
dec
sbb
sbb
push
push
jecxz
xlat
nop
push
xlat
inc
and
out
pop
cltd
mov
mov
mov
addl
sub
leave
push
sbb
add
inc
xchg
sub
pop
adc
add
lds
ljmp
test
fisubl
add
jo
push
rcl
pop
movsb
sbb
aad
mov
les
cmp
push
or
xchg
call
rorl
pop
jnp
outsl
cltd
add
mul
mov
push
ret
ljmp
sbb
out
pop
data16
lret
cltd
push
mov
cmc
stc
inc
pop
mov
pop
jecxz
cli
push
lcall
ficomps
mov
cld
orl
pusha
and
in
sub
cmp
xor
imul
out
and
pop
xor
es
xor
mov
ss
shlb
sti
sbb
xor
fs
sbbl
sbb
jle
call
jge
sub
mov
stc
jnp
add
push
out
aaa
stos
jns
cmp
xor
in
scas
sbb
or
jb
rolb
xor
cltd
xchg
dec
sbb
jmp
mov
add
shll
insl
mov
inc
cmp
mov
rol
stc
sarl
sbb
call
push
jle
xchg
jbe
stc
js
push
test
shl
lds
jp
pop
xlat
mov
sbb
inc
push
cmp
sbb
add
xor
fsubrp
ljmp
outsl
out
cwtl
mov
ljmp
lcall
cli
lret
loop
mov
jno
cmp
cmp
les
lret
lahf
jecxz
cltd
and
jecxz
and
icebp
xchg
call
out
daa
add
pop
inc
je
add
mov
lock
repnz
adc
ss
aam
sbbb
imul
cli
xor
int
jge
cli
popf
pushf
and
nop
imul
loopne
orl
inc
int3
mov
sub
add
test
xlat
mov
jo
inc
scas
addr16
sbb
std
lcall
idivb
add
mov
inc
pop
pop
aad
aaa
bound
cmp
inc
test
imul
shrl
cmpl
dec
arpl
lcall
add
stc
mov
in
xchg
add
mov
lods
and
faddl
outsl
adc
sti
add
or
dec
fcmovb
aam
aaa
push
sarl
jns
aam
int
daa
or
mov
pop
pop
push
xchg
xchg
lcall
lock
out
ljmp
ja
pushf
cltd
or
cs
add
out
cmp
and
ret
pop
sahf
xchg
pop
push
lds
nop
cmp
xor
fisubrl
sub
int3
imul
push
inc
stc
rorb
das
movsb
fsub
mov
ss
ds
and
jb
cmp
insl
lret
outsl
xor
sarl
push
aaa
test
and
sub
inc
and
and
jl
fldl
mov
inc
cltd
mov
addb
pop
push
ja
inc
cld
popa
or
ret
ficoms
sub
mov
jns
push
or
pop
lret
loopne
and
jbe
stos
sub
cs
sub
imul
cwtl
nop
jne
outsb
jge,pn
cmc
call
push
inc
movsb
and
insb
dec
enter
and
in
mov
xorl
repnz
je
ret
sub
xchg
pushf
ja
ljmp
pop
bnd
aad
push
mov
mov
rcll
cmp
jbe
mov
pop
jae
mov
lcall
dec
out
push
lcall
ffree
out
dec
cmp
repnz
sarb
lcall
pusha
push
xor
xchg
xor
ficompl
mov
cltd
cmp
addb
insb
inc
in
pop
adc
dec
pop
pop
xchg
xchg
stos
sbb
inc
jp
cmp
mov
and
lea
icebp
filds
ret
popa
fcompl
push
mov
mov
nop
mov
lods
leave
pop
cli
adc
push
xchg
jle
out
inc
imul
lcall
push
sbb
call
lock
adcb
lret
mulb
faddp
sub
adc
icebp
adc
shl
jb
inc
mov
jne
ss
dec
and
sub
aaa
jle
mov
inc
je
outsb
insl
pushf
shl
decb
out
filds
xor
popf
sub
test
inc
mov
cmp
push
xchg
add
jns
jmp
out
push
push
mull
aam
adc
jg
mov
js
push
sub
pop
fstps
lods
enter
ffreep
cmp
daa
aaa
dec
cli
ljmp
sub
in
shlb
mov
ljmp
loope
cltd
clc
jbe
sub
mov
imul
jmp
xor
dec
imul
shll
nop
and
mov
jmp
inc
rcl
xchg
mov
sbb
lret
push
ret
je
sbb
clc
imul
pop
xor
fwait
lds
lds
push
xchg
in
ret
aad
cmpsl
adc
negb
push
dec
pop
orb
ficoml
sub
imul
cltd
dec
in
or
xchg
int
jae
dec
jle
pop
mov
xlat
in
rcll
testb
shlb
lret
imul
jle
xchg
mov
les
adcb
aad
loop
inc
lret
jnp
cmpsl
sbb
iret
lcall
xchg
ja
repnz
es
mov
xchg
fidivl
or
cmp
push
or
clc
scas
outsl
xchg
mov
les
mov
movsl
mov
repz
sbbb
loop
mov
mov
mov
in
pop
adcb
daa
cmp
movb
adcb
adc
dec
test
das
xlat
sbb
pop
inc
jae
mov
je
mov
mov
xorb
mov
addb
sarb
cmc
into
cmpsb
addb
ljmp
push
xchg
push
mov
mov
pop
jg
add
lock
sbb
test
add
les
mov
aas
push
xor
stos
ja
ret
ja
add
lds
and
dec
daa
mov
cmpb
lea
addb
xor
push
hlt
jb
repnz
sub
in
sub
push
cmp
jle
nop
xor
jae
mov
aas
xchg
adc
icebp
xchg
std
subb
int3
add
cmp
imul
lret
inc
sub
jo
push
jne
push
push
gs
add
lods
jecxz
fdiv
sub
dec
and
xor
dec
insb
pushf
xor
enter
xor
cltd
aaa
stos
imul
jmp
inc
jb
cmpsb
movsl
sbb
sar
push
sbb
mov
mov
orb
cwtl
mov
add
pop
and
cmp
xchg
inc
fdivrs
cli
cmpsb
jb
xchg
pop
jmp
subb
sarl
sub
ret
mov
add
mov
cmp
subl
push
or
inc
lcall
mov
jge
data16
and
jmp
cltd
lods
or
aaa
outsl
into
mov
push
test
loop
leave
push
pop
dec
jp
ja
xchg
or
jl
repz
movsb
insl
adc
lcall
dec
cwtl
ret
insl
inc
shlb
fisubrl
imul
shrb
mov
inc
xor
mov
add
pop
popf
cmpsl
add
sbb
sub
lock
or
fldcw
inc
cmp
dec
xchg
and
stos
mov
out
mov
jecxz
mov
jecxz
mov
daa
ficompl
in
les
xlat
pop
jg
push
xchg
or
adc
or
jns
inc
jecxz
dec
xchg
aam
lcall
sub
stc
mov
das
mov
jge
stos
popa
or
mov
mov
pop
int3
mov
mov
jns
enter
jecxz
icebp
lock
cmpsl
aam
xor
movsb
shrl
dec
insb
xchg
inc
xor
jge
lcall
stos
cmc
xor
pop
cli
test
and
mov
inc
cmc
sbb
in
add
out
sub
cltd
xchg
dec
cld
add
imul
xchg
les
ljmp
loop
out
int3
pusha
push
cs
and
ja
mov
out
mov
mov
xchg
add
lock
add
xchg
adcb
icebp
clflush
imul
dec
add
divl
fs
inc
push
mov
inc
aas
in
and
mov
inc
out
shll
es
js
adc
pop
ret
mov
xchg
and
add
and
test
pop
ds
jo
xor
inc
push
xchg
cmp
das
add
enter
ret
pop
pop
add
bound
rorl
movsl
or
imul
mov
lock
and
sub
push
lcall
dec
mov
inc
lds
ja
fnsave
add
jae
cwtl
xchg
or
insb
xor
scas
inc
mov
add
push
mov
adc
xor
fmul
hlt
push
mov
cltd
xchg
stos
mov
nop
mov
dec
test
fcoml
xchg
jle
jns
mov
sub
cmp
sub
pop
paddsb
lcall
test
jp
mov
leave
jg
out
dec
jmp
inc
les
pop
enter
out
jp
xlat
adcl
dec
lcall
repnz
jle
andl
pop
fiaddl
jge
pop
sub
fadds
cltd
inc
cmp
fldenv
sahf
arpl
lcall
add
rcr
xor
icebp
jg
into
pop
jge
outsb
xchg
popf
aad
in
cld
push
aam
iret
or
divl
sbb
movswl
add
adc
icebp
cmp
movsb
sahf
out
mov
cs
xchg
repnz
cltd
dec
in
add
mov
ss
inc
iret
pop
mov
cmp
stc
scas
jae
sub
shll
in
push
and
repnz
or
insb
notl
and
enter
test
rcrb
push
fwait
sahf
mov
cmp
pop
xchg
sbb
int3
fsubs
and
leave
dec
cmpsb
add
lcall
xlat
cmp
or
add
into
es
pop
jns
enter
xchg
mov
mov
dec
clc
mov
adc
jnp
mov
jae
push
mov
adc
cmp
push
lahf
adc
cmp
xor
mov
push
xchg
mov
push
es
dec
sub
lcall
mov
fiaddl
add
add
cli
add
push
andb
sbb
lcall
xor
addr16
push
adc
add
cltd
fmul
enter
lods
subb
repnz
push
movsb
hlt
mov
adc
in
sub
cmp
aad
pop
inc
nop
jge
mov
mov
push
push
add
or
stos
xlat
out
inc
jbe
dec
rcll
lds
jo
rolb
inc
add
loope
jg
push
icebp
int
shll
mull
je
repnz
scas
clc
jns
cltd
insb
sahf
cmpl
jmp
jmp
loope
jno
and
sub
xlat
add
shld
jb
or
int3
mov
xchg
imul
sub
pop
xchg
test
xchg
cmpb
lcall
jo
mov
push
cltd
leave
jge
jl
and
jp
fwait
jb
mov
insl
ret
or
push
sub
in
mov
xchg
sub
popa
push
jmp
xlat
cmp
clc
stos
push
popf
cmp
repnz
push
push
in
push
xor
dec
xchg
add
jns
fidivrs
cmp
inc
xchg
push
and
xchg
add
out
sub
cmc
jge
lret
sarb
xor
mov
xchg
aaa
es
mov
lock
mov
jle
jnp
insb
sub
repnz
outsb
lcall
icebp
flds
add
xor
sbb
repnz
mov
insb
inc
jg
lock
or
mov
mov
push
mov
pop
ljmp
popl
inc
lcall
pop
sub
in
mov
xchg
xor
sbb
mov
enter
jns
lcall
add
cmp
fcomi
ret
stos
rcrb
mov
ret
sbb
pop
aas
loop
inc
fbstp
outsl
int3
xchg
xlat
cli
ret
out
mov
add
data16
pop
pop
andl
dec
push
ret
rorb
std
out
xchg
xchg
pushl
push
jle
mov
lods
je
pop
dec
stos
add
or
cmp
pop
lock
mov
cli
aaa
cs
ja
adc
cmp
jge
xlat
cmc
out
mov
ljmp
pop
test
cltd
and
js
lea
fiaddl
leave
nop
das
pusha
notl
push
fmull
lcall
cmc
inc
sub
out
lret
push
in
adc
or
jo
push
cltd
in
pop
cmp
and
aas
out
sub
jns
fnsave
jae
inc
sbb
pusha
lock
test
cmpsb
imul
lds
mov
fisubl
xor
outsl
jle
cmc
imul
seto
add
jmp
outsl
nop
dec
xchg
and
out
jecxz
sub
pop
fcomps
lret
cmp
or
lods
jge
movsl
xlat
xlat
fidivrs
xchg
xorl
inc
add
jmp
test
cmp
pop
ret
and
sub
ficompl
outsl
mov
scas
xchg
pop
arpl
and
lcall
fs
out
add
dec
and
add
imul
cmc
leave
cmp
test
lcall
xor
pop
mov
lcall
mov
cli
push
lcall
cltd
test
aaa
cmp
lret
mov
inc
loop
xchg
xor
jae
sbb
mov
sbbl
bound
xor
scas
mov
in
sar
sbbb
lea
insl
cs
gs
mov
inc
sub
das
jno
mov
test
jns
ret
ret
or
ret
dec
mov
aas
pop
or
jns
lcall
popa
jmp
sbb
cmp
or
aaa
cmc
out
dec
cmpsb
insb
repnz
stos
jle
xchg
xchg
sbb
sbb
cmp
imul
jge
notl
stc
mov
adc
das
sub
leave
stc
mov
dec
lret
adc
jmp
fnstenv
testl
and
jns
cltd
mov
sarl
rcll
ds
ret
loopne
lock
jge
imul
jb
cmpb
popf
xchg
enter
cltd
mov
mov
lcall
jo
stc
nop
movsl
jmp
gs
adc
sbb
mov
pop
push
int
mov
xchg
mov
les
int3
ja
callw
in
cmc
jle
jns
add
sbb
push
pop
out
lahf
push
sbb
push
jp
rcll
lods
push
sbb
pushf
shrb
inc
xor
repnz
sbb
mov
leave
int3
int
mov
adcb
and
and
lds
xor
sub
add
jecxz
sbb
stos
loope
shr
jo
add
sbb
jmp
lock
and
xor
dec
inc
in
xchg
mov
mov
push
test
lods
push
cltd
mov
pop
mov
mov
sbb
jmp
ja
lea
cmc
cmp
push
aam
xorb
inc
fisubl
in
int
inc
jns,pn
sub
clc
aad
or
push
aad
jp
pop
jge
pop
inc
lcall
test
test
jmp
jns
int
push
sbb
mov
rolb
ss
inc
mov
push
mov
dec
xor
xchg
movb
addb
push
cmp
movsl
sbb
rorb
dec
fisttps
shll
outsb
or
orl
arpl
stos
add
test
push
ret
lret
mov
lcall
push
jge
cmpsl
cli
add
xor
sub
push
dec
imul
outsl
hlt
aam
lret
aaa
xchg
das
xchg
xchg
fucomi
mov
pop
arpl
into
movsb
int3
enter
lret
sub
outsb
fcompl
mov
pop
enter
cwtl
mov
imul
les
neg
mov
dec
jns
xor
cld
xor
mov
fwait
add
mov
pop
stc
lods
ds
cmp
pop
xchg
in
aaa
jecxz
cld
daa
addr16
outsb
sbb
insb
in
mov
ret
mov
out
push
insl
xor
cmpsb
ja
ss
scas
cmpsb
add
imul
mov
andb
enter
sbb
cmp
insl
sub
and
push
or
js
sub
insb
movsl
xor
in
fisttpll
adc
cld
enter
ret
popa
add
xor
mov
ret
or
mov
xor
out
push
cli
jmp
int
xor
aad
stos
pop
jecxz
inc
cmc
scas
cmp
jne
lods
mov
sarl
ffreep
xor
rcl
push
inc
lahf
cltd
jns
jg
stos
xchg
cmc
push
jl
jae
out
ror
lcall
pop
or
cltd
cli
and
rorb
xchg
inc
mov
outsl
cmp
xor
or
pop
mov
add
imul
test
mov
push
xor
sti
imul
inc
testb
push
cmp
xchg
mov
test
pop
stc
sub
xchg
in
mov
fisttpl
cs
dec
push
enter
sub
and
add
loopne
js
cmp
loop
xor
mov
orb
lahf
push
cmp
insl
push
mov
clc
insb
sub
insl
inc
pop
pop
ret
popa
ret
xlat
int
pushf
cmc
jns
sub
adc
lcall
mov
aaa
or
xchg
ret
sbb
push
sbb
and
add
push
jge
pop
movsb
fisubrs
orl
add
pop
lock
imul
rclb
fiaddl
lret
xchg
adc
iret
test
xchg
iret
sbb
cltd
dec
rolb
mov
cmpsl
xchg
stos
dec
arpl
mov
xor
pop
adc
sbb
lock
inc
push
sbb
jae
adc
push
mov
sbb
jno
bound
ret
fcomps
push
mov
cmp
sahf
stos
data16
dec
and
mov
pop
xor
fildll
lock
repnz
movsl
sub
xchg
xorb
sbb
xor
sbb
jns
out
adc
jno
push
dec
xchg
dec
stc
mull
roll
push
divb
inc
mov
pop
xchg
add
push
das
ljmp
lcall
pop
dec
inc
cmpsl
or
movsl
cmp
lahf
ficompl
repz
ret
in
popf
cmp
adcl
xlat
and
out
cltd
pop
xor
jbe
pop
ja
sbbb
jecxz
out
lahf
hlt
enter
or
pusha
das
lock
rol
cltd
or
lds
xor
je
jecxz
push
add
add
pop
fs
ret
movsl
lcall
pmulhuw
lock
cmp
scas
sarl
scas
dec
fisttpll
bound
sbb
mov
push
adc
add
or
add
mov
inc
nop
adc
in
popl
in
ds
jb
mov
aam
sub
mov
inc
loopne
mov
in
mov
add
jp
int3
stc
mov
aam
mov
push
cwtl
sub
sbbl
jle
stos
loope
scas
dec
cmp
les
cmpsb
lcall
sub
outsb
jno
ss
jo
mov
sub
add
ret
loop
mov
fdivr
adc
ja
outsb
and
cwtl
add
xor
sub
sub
dec
shrl
dec
push
fcmovb
xchg
icebp
lock
rcl
pop
inc
jg
mov
inc
cltd
add
sbb
cs
and
push
and
stc
adc
mov
cmpsl
add
das
lcall
stos
sbb
lret
push
adc
push
imul
jo
aas
add
stc
sub
cmp
or
jmp
fsub
and
cltd
and
addl
mov
or
xchg
and
test
imul
frstor
in
cmpl
daa
xchg
cli
and
call
cltd
add
push
jg
dec
movsl
bound
cli
gs
xor
lcall
add
testl
aaa
mov
nop
add
and
dec
xor
xchg
test
add
adc
dec
imul
imul
addb
or
jecxz
out
and
pop
adc
cltd
and
les
lock
cld
das
sub
cli
scas
sarl
jns
or
loopne
and
xchg
movl
and
inc
and
mov
scas
mov
xor
mov
xor
cmpsb
dec
inc
ja
xchg
mov
mov
out
and
sbb
imul
lods
pushl
ret
mov
xor
je
cmp
xchg
push
add
leave
sti
in
mov
inc
and
mov
sub
ds
addr16
shrb
xor
jle
fistl
xor
sub
ds
pop
fs
xlat
jae
dec
outsl
fldcw
ja
ret
imul
sarl
testb
shl
jl
mov
sbb
xor
cmc
jle
cli
imul
movsl
in
test
pop
cs
fidivrs
in
imul
rclb
and
add
daa
push
sub
in
jns
push
pop
dec
enter
push
dec
jge
dec
lea
ret
mov
mov
xchg
mov
mov
scas
fwait
mov
icebp
mov
dec
jmp
ljmp
or
mov
sbb
xchg
push
xchg
int3
enter
mov
cmp
cmp
push
shl
adc
mov
add
hlt
mov
pop
ret
ss
test
cmp
sub
cmp
aam
stc
aad
adc
and
cmp
push
das
aad
lock
dec
add
in
mov
mov
inc
andl
and
xor
jge
cmp
cltd
or
nop
xchg
adc
dec
push
sbb
nop
je
loopne
push
loopne
ret
pop
jp
fmulp
push
push
stos
adcb
sub
loop
cmp
leave
and
inc
ficompl
jge
fsubs
pop
mov
jmp
xlat
mov
das
push
aaa
mov
shlb
mov
xor
push
lods
call
ss
notb
xor
jmp
les
data16
sub
lcall
jle
pop
sar
jb
lcall
mov
mov
ds
iret
or
dec
dec
jp
lcall
or
ds
mov
stc
inc
les
push
jle
jae
mov
pop
insl
bound
ret
dec
ja
mov
fcmove
imul
mov
push
bnd
push
pop
imul
push
add
divl
ljmp
pop
lcall
jne
test
stos
push
outsb
xchg
add
xchg
rcr
aam
jge
mov
jne
jp
std
stc
cmp
testl
jge
add
adc
cmp
ret
jge
xor
stc
lret
inc
or
mov
notb
js
adc
cmp
lcall
jb
aad
ds
pop
cmpsl
push
xor
jns
add
in
add
push
xor
jae
stc
jp
sahf
testl
pop
cmp
inc
adc
movsb
cmc
mov
mov
lea
push
inc
pusha
popf
sbb
adc
jae
mov
rol
and
adc
sbb
repnz
pop
sbb
adc
xchg
pop
mov
add
fucomp
icebp
jo
and
gs
push
and
mov
pop
push
out
iret
ds
insl
and
cli
and
jg
xlat
cmp
push
xchg
rolb
push
lock
in
jo
aam
fsubs
dec
pop
push
shrl
push
mov
aaa
mov
mov
ret
mov
sbb
xchg
push
cmp
push
inc
sbb
nop
jp
sbbb
mov
mov
mov
mov
aad
mov
setp
mov
add
arpl
sbb
imul
divb
mov
add
roll
test
clc
lret
sbb
lods
ds
xchg
mov
mov
xor
mov
jno
paddb
ror
cmpsb
and
push
xor
sub
mov
sbb
mov
outsl
inc
inc
sbb
xor
in
cmp
das
out
mov
insb
and
popf
popf
adc
sbb
pop
jo
mov
out
fimull
jo
xchg
push
sbb
lahf
rclb
cmp
leave
idiv
addr16
fwait
pop
mov
jecxz
std
xchg
fmull
or
jns
mov
roll
test
stc
int3
xchg
sub
imul
mov
inc
or
xchg
or
lcall
in
xchg
idiv
xor
cltd
mov
push
jnp
lcall
jns
fmul
lret
jo
ret
mov
daa
lds
and
jae
mov
cmpb
xor
xor
sbb
or
test
jns
adc
cltd
xchg
fcmovbe
jecxz
fisttpl
xor
xor
inc
fildll
dec
dec
pop
cli
mov
leave
mov
pop
mov
das
adc
std
xchg
and
inc
call
jecxz
pop
aaa
push
push
stc
pushw
movsb
out
les
dec
lock
or
inc
sbb
lret
mov
pop
jg
or
fs
mov
jns
sub
push
xlat
insb
or
in
fldcw
bound
aad
outsb
lds
sbb
and
repnz
xchg
out
adc
mov
ljmp
xor
repz
je
pop
mov
in
imul
mov
sbb
loop
es
sub
dec
test
push
add
test
jl
fcomps
ror
or
push
das
leave
int
sbb
stos
push
mov
sarl
fisttps
into
sub
orb
or
push
pop
jge
jle
xchg
ljmp
lcall
push
test
faddl
pop
jl
int
mov
cltd
lret
sub
xchg
pop
jo
aam
pop
pop
stc
movsl
loopne
cmp
adc
call
test
inc
outsb
rcrl
push
sbb
dec
mov
mov
jbe
mov
repnz
test
and
fdiv
out
ss
pop
lock
and
bound
push
jecxz
pop
lds
xchg
inc
mov
into
ljmp
inc
call
dec
xor
fs
and
or
dec
pop
xchg
and
scas
rcrl
test
xchg
int
adc
add
push
lcall
ja
xchg
mov
cmp
gs
and
jmp
rcll
cmp
xchg
pop
outsl
mov
cmp
stc
sub
add
test
inc
repnz
cmp
sbb
push
sbb
cmpsb
push
cmp
and
and
not
sub
stc
test
push
sub
mov
mov
fcoms
jns
inc
fbstp
clc
mov
push
inc
cmpl
and
pusha
or
lret
cmp
push
mov
add
mov
out
jns
cltd
negl
daa
aam
push
xor
idivb
xlat
jo
mov
xor
jp
inc
test
pop
outsl
inc
call
lods
sahf
mov
sbb
aam
push
out
adc
pop
jle
mov
and
loopne
outsb
lcall
sbb
ss
push
cltd
shrb
out
mov
aad
lock
movsb
add
push
and
mov
ret
sub
xor
jp
inc
imul
repz
jbe
pop
cmp
lea
add
xorl
push
data16
cltd
cmpsl
or
mov
ss
cmp
out
dec
mov
or
lcall
sar
mov
and
out
les
les
lods
ret
mov
int
cmp
pushf
imul
lret
jge
movl
std
mov
stc
and
sbb
imul
jmp
mov
cli
int3
push
lret
pop
rorb
fistpll
xchg
movsb
add
pop
jnp
jge
xchg
jecxz
push
inc
lea
jle
loope
push
mov
orb
sub
adc
mull
sbb
sub
ja
rorb
icebp
ret
jns
aam
shll
add
ror
out
xorb
inc
stc
outsl
jecxz
jae
in
lock
int
inc
mov
inc
aam
in
mov
enter
jp
dec
inc
pop
cmc
sti
mov
sub
sub
jle
xchg
jg
icebp
add
cmp
lcall
xor
push
mov
jle
sbb
ljmp
test
divl
loopne
inc
lds
mov
jae
dec
mov
push
js
jle
mov
mov
stc
adc
sub
cs
aad
popa
cmpsb
sub
inc
mull
notb
cmp
insl
dec
dec
fs
aad
lock
and
std
and
mov
mov
xchg
add
gs
scas
aaa
mov
ret
push
ja
popa
in
pop
sub
or
pop
rolb
inc
xchg
inc
jl
cmp
mov
stos
out
into
addb
fstpt
pusha
lahf
fisttpll
sbb
mov
into
and
ret
sti
xchg
neg
subb
stos
loopne
dec
pusha
es
cmp
mov
test
mov
jnp
push
aaa
jne
popa
es
cmpsb
dec
adc
insl
mov
adc
cmc
pop
inc
adc
xchg
adc
inc
jns
stos
test
xchg
loop
jae
push
mov
repz
pushf
scas
jp
push
movsb
jmp
das
mov
je
push
ds
lock
add
repz
addb
pop
add
mov
and
addb
xor
mov
xor
adc
jo
dec
and
jae
insl
scas
int3
push
pop
mov
aam
popa
jecxz
xchg
or
xor
call
mov
or
test
dec
inc
cmpb
sub
pusha
mov
movsb
sbb
dec
pop
push
std
iret
cmpb
xchg
fisubrl
mov
out
pushf
inc
xchg
jne
xchg
jae
and
mov
pop
icebp
imul
push
mov
pop
cmpb
push
mov
or
jp
push
jl
repz
mov
testl
xchg
ret
pop
mov
mov
jo
sbb
ds
and
fwait
ret
jg
movsl
push
test
insl
cmp
jne
mov
or
leave
jnp
repnz
jle
xor
shl
cmp
adcb
lahf
icebp
sbbb
xchg
cltd
fs
jns
mov
pushf
or
push
roll
xor
cmp
jae
jne
xor
lret
fcmovb
sbb
test
das
test
adcb
inc
ds
cwtl
xchg
jae
xor
and
pop
jge
mov
jb
dec
jnp
lods
inc
jno
jno
addr16
aaa
and
into
cmp
sub
mov
sti
xor
adc
bound
sarl
mov
scas
inc
and
and
push
jnp
pop
fcmovnu
cmc
xchg
sub
cmp
push
add
xor
subb
jmp
sub
mov
sbb
sahf
xlat
call
in
orb
cmpl
mov
cmp
jnp
negb
push
inc
pop
xchg
pop
xchg
jge
push
mov
pop
mov
std
push
push
xchg
sub
jle
push
rolb
mov
cmp
aad
arpl
lock
mov
inc
ret
push
xor
sbb
out
pop
jg
mov
ljmp
and
sub
xlat
lret
ror
dec
enter
repz
cmp
xor
mov
cmp
andb
clc
and
movl
loop
mov
or
movsl
and
frstor
shl
andb
pop
stc
mov
push
idivl
es
fsubrp
cmpb
fnsave
addb
in
les
inc
mov
and
sbb
or
xor
sbb
icebp
adcb
int3
jns
and
adc
cmpb
xchg
in
sbb
inc
pop
test
jnp
or
sbb
and
pop
aaa
test
pop
inc
clc
and
jnp
add
outsl
mov
cmpb
insl
cmc
je
mov
cmp
jge
mull
lahf
rolb
mov
mov
jo
add
push
subl
repnz
pop
lcall
adcl
ljmp
cmp
bound
sub
xchg
cmp
or
dec
ja
pop
add
add
into
adc
and
nop
subb
repz
jne
pop
xchg
mov
and
mov
test
cld
xchg
addb
test
mov
pushf
add
lea
insb
pop
ljmp
pop
ds
cmp
rclb
add
lods
jp
jmp
adcb
fdivr
push
adc
int
inc
or
jne
inc
jbe
call
andl
sub
clc
push
jg
call
rol
adc
lea
cmp
sbb
add
icebp
pop
out
cs
push
ss
sbbb
xchg
or
add
xor
xor
sbb
jnp
shll
arpl
push
mov
pop
xorb
imul
cmp
out
dec
repnz
add
fildl
sbb
push
or
and
xorb
dec
aam
popa
sbb
movsb
aad
sbb
out
adc
xor
shll
mov
pusha
add
push
adc
shll
int3
add
ficoml
sub
fstps
lret
jmp
pop
mov
sbb
push
insb
jae
cmp
test
test
sub
es
loope
mov
imul
gs
push
jae
xor
sub
jmp
lret
dec
mov
jne
cli
sti
jae
inc
insb
movsb
ret
ja
out
in
out
mov
shl
and
sbb
sbbb
leave
test
cli
xchg
mov
scas
sbbb
mov
and
lcall
adc
mov
push
xorb
mov
xchg
add
push
cmc
cmpb
xor
jge
data16
xchg
jecxz
and
or
push
jo
mov
cmc
pop
or
inc
add
ds
inc
stos
xor
rorb
lods
roll
pop
fistpll
iret
pop
rcll
sub
test
sbbb
lock
adc
out
adcb
imul
jo
xor
sbb
mov
lea
cmpsb
ret
mov
aaa
ja
in
sahf
jg
andb
inc
mov
into
dec
jnp
mov
sbb
popf
jecxz
mov
scas
jge
cmp
inc
lahf
xchg
flds
xchg
ljmp
adcb
js
dec
xchg
add
pop
enter
data16
xchg
sub
push
push
fidivrl
sbbb
jae
stos
std
mov
adcb
daa
mov
xchg
arpl
jg
cmpsl
or
xorb
or
addb
dec
or
mov
mov
pop
add
addr16
testb
or
cmpb
testl
mov
aam
adcb
int
xchg
xor
add
xor
repz
xchg
adc
loopne
mov
aaa
mov
fsubrs
xor
lds
ds
adc
int3
mov
and
or
jno
popf
adc
pop
add
mov
and
cmp
mov
addb
jns
add
add
mov
pop
xchg
push
repnz
cwtl
adc
sbbb
and
addb
popf
xor
and
pop
sbb
dec
iret
cmp
sub
fadds
cwtl
push
scas
xchg
sub
shl
pushf
jl
orb
xor
jge
push
add
mov
lcall
sbb
jl
adcb
cmp
pop
movsb
xorl
push
push
clc
in
xor
mov
imul
inc
xchg
test
push
fninit
je
iret
add
and
cld
sbbl
lock
call
aaa
outsl
in
add
cmpsl
sarb
mov
or
orb
xchg
add
sti
cli
addr16
cmpsb
out
rcrb
cltd
shrl
fisubs
xchg
push
in
aas
scas
xor
jge
gs
or
push
xchg
ret
addb
inc
mov
out
mov
push
jle
popl
cs
inc
loop
sbb
outsb
in
mov
mov
mov
mov
mov
ror
push
mov
xor
outsl
mov
lcall
dec
adcb
out
jge
cmpsl
stc
push
adcb
aad
or
es
cld
mov
and
lods
mov
push
inc
insl
ret
adc
mov
inc
push
or
cwtl
andb
ret
xor
dec
pop
jge
sbbb
pop
push
adcb
dec
js
sbb
inc
xchg
lahf
add
cmp
xchg
sub
push
xchg
jmp
mov
xchg
aam
je
fs
dec
mov
xor
fsts
shlb
je
mul
addb
push
mov
xchg
adc
sbb
mov
fs
mov
int3
fadds
ret
lahf
hlt
and
push
push
jns
pop
xorb
or
imul
movsb
es
aad
insb
mov
mov
xchg
loop
add
adc
push
and
in
push
add
in
sbb
sub
jmp
das
mov
lock
jle
jns
ljmp
cmp
ret
adc
add
add
jnp
lds
hlt
lcall
sarl
std
ss
sub
shll
cmp
xorl
andl
ret
push
out
jnp
cmp
and
adc
cltd
movl
and
enter
outsb
xchg
sub
pop
rorl
xor
push
js
mov
pusha
cltd
fld1
in
pop
and
pop
rcrb
xchg
cli
lods
dec
jns
sub
and
adc
jns
sti
push
std
nop
test
xchg
loop
push
out
flds
daa
in
stc
mov
roll
inc
lret
fdivs
or
pop
cmp
das
mov
aaa
cmp
mov
dec
fs
cs
cmpsb
in
shrb
or
lahf
cltd
loopne
cmpsl
shll
adc
fdivrs
mov
enter
test
mov
or
push
jae
repnz
into
dec
mov
stos
sub
mov
mov
mov
ret
pop
push
lock
adc
push
pushf
mov
frstor
out
jbe
dec
push
jae
mov
sub
arpl
pop
xor
or
rcr
cwtl
cmp
push
cli
in
rorl
sarl
ret
fsubrs
mov
mov
test
inc
std
mov
or
repnz
mov
jae
iret
xor
les
inc
xlat
jle
repnz
test
adc
push
rcrl
stos
or
jae
push
pusha
adc
mov
pop
js
and
xchg
cwtl
jg
std
je
push
cmp
pop
pop
stos
xor
fcomip
cmp
push
cltd
imul
nop
inc
nop
mov
fmulp
imul
orb
fdivl
sub
sarl
mov
and
mov
stc
push
and
sbb
repz
cli
scas
sub
out
rcl
call
mov
inc
sbb
arpl
imul
adc
or
and
movsb
sub
mov
stc
mov
sub
jno
jle
add
or
adc
xor
test
nop
adc
xor
dec
stc
cmpl
cmpsl
jnp
cs
sub
inc
adc
push
es
push
lods
jle
pushf
pop
mov
ret
pop
inc
aaa
mov
dec
out
pop
sbb
outsl
aas
cltd
mov
mov
push
cltd
scas
pop
fdivrl
xor
mov
popf
push
inc
xchg
lods
xor
int
arpl
jne
xchg
ljmp
add
push
mov
inc
inc
jns
lds
andb
shll
sub
sbb
aas
ret
mov
push
pop
xor
das
jecxz
stc
push
jne
les
sub
cwtl
orb
mull
push
outsb
sbb
mov
popa
jp
cld
mov
stc
arpl
cltd
and
mov
jmp
push
fidivrs
mov
out
jp
lea
pop
xchg
imul
lcall
xorb
lods
in
sbb
arpl
mov
sub
mov
int
push
or
out
push
pop
dec
or
mov
jmp
sbb
inc
adc
mov
adc
pop
sub
ret
movsl
fsubrs
out
add
out
lea
push
shrl
inc
push
scas
push
jb
mov
sbb
jae
enter
nop
push
cmp
add
cltd
cmc
lret
push
idivl
xchg
inc
popf
inc
add
sub
add
lds
push
jo
jle
out
xchg
rcrb
ja
xlat
mov
xchg
pushf
icebp
enter
jg
aad
data16
xchg
stos
outsb
xchg
jmp
ret
push
push
mov
cs
movsl
bound
pop
aad
in
aas
push
insl
in
mov
lcall
pop
out
repz
mov
or
and
test
pop
xorb
in
xchg
xchg
mov
jle
scas
jge
call
cmc
aam
inc
sub
dec
sbb
das
add
outsb
and
lcall
cs
jp
mov
sub
xor
or
aad
sbb
push
dec
pop
inc
fdiv
lock
js
cmp
addb
sub
frstor
aaa
sbbl
das
mov
scas
sbb
icebp
cmp
enter
cltd
add
jnp
bound
jle
ds
das
dec
lds
sti
sub
push
jns
notb
sub
mov
nop
dec
mov
insb
ljmp
mov
int
adc
in
sub
pop
mov
sub
cmc
push
add
mov
repnz
mov
inc
cmp
jne
out
enter
dec
jp
pop
roll
jbe
cmp
mov
xor
inc
and
or
mov
jne
mov
sub
in
xor
dec
mov
xlat
repz
je
ja
mov
ljmp
inc
adc
cmp
loope
ljmp
add
adc
test
xor
mov
ja
int
cmp
add
add
addb
ds
iret
and
or
loopne
gs
sub
repz
gs
jl
sub
rolb
cmp
outsb
nop
insl
arpl
mov
lahf
rol
sub
enter
adc
repnz
loop
hlt
neg
dec
ljmp
mov
mov
int
addr16
add
test
adc
shrb
call
sub
mov
in
enter
testl
and
jnp
or
mov
pushf
sub
test
sbb
xlat
jg
jge
ret
pop
cmpb
addr16
aad
pop
fisubrl
cmp
mov
insl
cltd
lock
push
xchg
fisubs
adc
add
inc
mov
add
call
jae
dec
jp
add
pop
pushf
mov
loop
sti
lds
sahf
ss
or
repnz
sub
mov
ret
iret
adc
sbbb
jmp
movsl
aas
pop
addb
dec
lret
sti
xchg
cmp
nop
repnz
and
jmp
adc
ffreep
adc
and
xchg
in
mov
data16
out
xor
notb
addl
pusha
ja
cmc
aam
imulb
jmp
lret
adc
cli
adc
orb
pop
repz
shlb
arpl
fisttpl
outsl
ss
sbbb
cli
es
sbbb
lea
vpcomud
test
and
mov
sahf
sbbb
add
lods
pop
jns
pop
shl
sbbb
xchg
andb
aam
xor
adc
inc
pop
push
push
push
or
repnz
or
sbb
ficomps
mov
dec
mov
cmp
cwtl
aam
lret
pop
pop
out
jl
outsb
mov
jb
xchg
sub
lods
sub
arpl
xor
mov
and
mov
or
sarb
iret
lea
std
addr16
in
pop
test
arpl
mov
jecxz
add
out
jnp
pusha
jmp
lods
inc
xor
test
test
xchg
add
inc
sti
jecxz
mov
filds
repz
sub
adcb
loop
cmpsb
shrd
aam
lahf
gs
or
mov
iret
je
mov
mov
lcall
inc
jae
pop
fs
inc
inc
adc
dec
lcall
out
fwait
cmp
in
ja
dec
and
mov
lret
out
mov
imul
sbb
in
stos
stos
insl
inc
cli
orb
sub
jo
jg
pop
dec
mov
mov
orb
mov
jecxz
add
xor
mov
mov
sbb
mov
push
int3
xor
jge
leave
pop
push
mov
xchg
push
imul
mov
stos
and
xorb
shrb
les
inc
push
jne
orb
and
adcb
xchg
mov
mov
pop
jecxz
call
mov
adc
push
sbb
ss
mov
adc
add
stos
mov
sahf
stos
subb
or
mov
scas
int3
in
lods
arpl
inc
loopne
and
push
out
pop
adc
pop
incl
xchg
enter
into
jg
jge
lcall
fcoml
sbb
das
lods
and
sarb
mov
sbbb
push
inc
dec
fcmovnu
adcb
pop
and
in
insb
xor
subb
addb
jl
popa
mov
faddl
sbb
lds
in
sub
stc
fstps
sub
ja
jo
stos
add
lcall
sub
js
jnp
out
mov
mov
sbbl
jg
xchg
mov
test
mov
mov
or
xor
shlb
sbb
pop
test
push
andb
mov
jne
cmc
sub
mov
add
inc
dec
cmp
mov
stos
add
mov
ja
shrb
jns
jb
aad
in
inc
cwtl
jle
inc
sbb
cmp
jp
int
into
ret
xor
mov
sub
xchg
rcll
adc
xorb
pop
add
aam
cmpb
inc
popa
mov
mov
cmpb
adc
dec
popf
loope
push
in
bound
sarb
sarl
addr16
bound
xorb
cwtl
xchg
mov
out
dec
push
subb
notl
cmp
inc
jle
sbbb
mov
sbbb
loop
adc
imul
movsl
js
sbbb
pop
repz
mov
dec
adcb
mov
sbb
add
push
push
js
dec
sbb
dec
pop
inc
jbe
jp
insl
xchg
add
orb
push
jno
inc
ljmp
test
xchg
pop
cmp
hlt
js
push
fldl
dec
lods
mov
orb
into
cmp
imul
push
xor
ficompl
sbb
jbe
sahf
sbb
test
xor
lahf
jae
sbb
ret
xlat
mov
adc
data16
ret
cmpb
adcb
mov
aad
dec
push
subl
cmc
arpl
or
subb
scas
in
mov
and
icebp
ret
popf
inc
stos
out
orl
jae
cmc
ret
std
arpl
daa
push
lret
mov
mov
xchg
shll
test
mov
insl
cmpb
shl
adcb
cmpsb
ss
addl
push
xchg
or
ljmp
inc
jo
dec
jne
or
push
cmpb
test
xchg
fs
xorb
pop
ss
lret
arpl
cs
add
mov
push
mov
mov
push
dec
pop
mov
inc
subb
push
xlat
sbbb
test
orb
jns
xor
fldcw
scas
sbb
in
fmull
ja
sbb
cmpb
push
leave
insb
movsl
pop
inc
mov
push
arpl
sahf
jbe
pop
mov
cmpb
dec
lds
mov
sub
out
push
leave
and
xchg
scas
lds
insl
movsb
out
jo
mov
pushf
mov
ljmp
xlat
xor
adc
adcb
sub
lret
adcb
mov
and
push
mov
sub
outsb
mov
dec
dec
or
dec
sbb
push
cmpb
sbb
stos
sub
pop
push
stos
repz
aam
xchg
jnp
jb
cmpl
pop
shl
push
mov
cmc
push
pop
int
jnp
sbb
jae
je
mov
mov
mov
push
roll
cmp
and
movsl
jb
test
xor
loop
sbb
sbb
add
push
sbb
outsb
pop
imul
or
add
testb
cmpsl
adc
push
push
cmp
xlat
push
mov
ja,pt
jae
mov
xchg
jp
jo
clc
push
mov
or
loope
loop
mov
jnp
push
push
out
das
inc
idiv
imul
cmp
inc
push
clc
mov
adc
pop
jae
scas
or
roll
popw
arpl
and
jb
loopne
xor
int3
dec
movb
fs
test
xchg
cmc
int
push
or
inc
pop
cmpsl
xor
xorb
inc
dec
orb
and
sub
adcb
jae
in
jb
xchg
push
adc
sub
inc
call
mov
xchg
mov
mov
mov
xchg
mov
cmp
and
cwtl
dec
and
and
outsb
adc
js
sbb
xchg
bound
pop
lea
ret
sti
ja
outsl
lock
out
cmp
cmpsb
mov
js
jl
xlat
sbb
push
adc
and
jbe
mov
inc
xor
shlb
cmp
jnp
jno
jecxz
inc
mov
jmp
enter
ret
mov
pop
out
mov
lock
inc
add
inc
imul
cltd
xor
dec
mov
jge
and
mov
adc
in
in
add
out
pop
mov
push
mov
and
pop
js
jb
push
and
imull
dec
insb
add
lret
jecxz
push
dec
jo
add
sahf
fsub
push
lea
out
call
cwtl
sub
cmp
scas
cli
xor
les
push
fidivrl
inc
mov
and
testb
xor
pop
and
je
and
loopne
pop
leave
clc
sbb
andl
fs
addr16
jg
js
sahf
rcr
inc
dec
push
sbb
add
mov
pop
and
adc
jns
lcall
lret
inc
jg
jns
dec
addl
pop
cwtl
xchg
pcmpeqb
pop
inc
add
mul
setne
lock
jns
rol
push
jno
out
pop
xor
xchg
dec
adc
mov
mov
and
push
movsb
dec
fnstenv
call
sub
mov
dec
and
pusha
sbb
inc
add
or
shl
sbb
sahf
sub
dec
nop
ljmp
int3
xor
adc
mov
jp
inc
push
les
pop
jle
cld
jmp
repnz
stos
jmp
repnz
movsl
or
loopne
push
loopne
loope
push
xchg
dec
jmp
test
and
rclb
lds
adc
lea
inc
shll
mov
nop
repnz
push
mov
lods
cltd
pop
sub
xor
add
jns
rorb
jne
xlat
inc
xchg
and
das
mov
or
lods
shll
jbe
sub
cmc
fcmove
mov
iret
cltd
jns
jo
jno
sbb
push
sbb
cltd
scas
hlt
shll
stc
inc
ss
in
mov
mov
into
and
scas
push
adc
pop
repnz
adc
jo
xorl
mov
ds
push
push
and
aas
xchg
mov
cs
cmc
cmc
inc
leave
lea
lock
sarl
jmp
inc
xor
xor
mov
in
and
adcl
and
in
lea
xor
stos
fnstcw
cmc
add
gs
shrb
push
xchg
ret
mov
xor
ss
testb
lds
pop
inc
out
lods
fisubs
pop
cmp
insb
dec
and
aad
fsubs
xor
pop
mov
xchg
scas
inc
repnz
nop
fs
int
add
jge
push
std
add
jo
add
in
addl
or
xchg
arpl
push
fs
cmpsb
out
push
cmp
sbb
shr
mov
int
addb
xor
or
call
mov
scas
cmpsl
add
pop
push
fildll
mov
aad
xor
push
ja
mov
jmp
or
cmpb
xor
pop
ja
inc
mov
addb
adc
ret
neg
xlat
and
push
lret
rcrl
xchg
in
xchg
ja
aas
xor
lret
pop
in
mov
cmpsb
sarb
jle
sub
ss
jmp
dec
test
subb
adc
mov
cmp
sahf
xchg
movsl
mov
ljmp
mov
sub
andb
ret
push
jb
jg
jnp
stos
or
push
loop
jnp
jl
rcll
mov
cmp
sahf
mov
imul
sub
push
fisubrs
sub
cld
clc
aam
mov
xor
add
cs
push
addb
js
addb
push
mov
int
out
sbbb
insb
scas
popa
push
xorb
lock
andl
sbbb
cmp
inc
addl
cmp
cmp
adcb
cld
and
inc
outsl
gs
mov
push
bound
mov
in
mov
hlt
inc
addr16
mov
push
popf
repnz
jnp
push
jns
xchg
jnp
inc
sarl
add
and
jl
mov
movl
jnp
fmull
xor
fld
lahf
mov
pusha
or
xchg
pop
adc
dec
xor
mov
sub
xchg
loopne
jb
orb
dec
or
jmp
outsl
data16
loop
mov
sti
cli
fs
adc
enter
not
movsb
cwtl
scas
jmp
add
pop
mov
jne
cli
pop
inc
or
sahf
cmp
xor
push
and
mov
inc
cs
les
je
cld
cvtdq2ps
adc
les
push
and
push
cmpb
or
mov
sub
shr
adcb
lcall
call
cmpl
xchg
add
hlt
out
loop
sbb
scas
mov
fcom
add
pop
ret
imul
fnstsw
push
orb
aaa
in
jmp
add
addr16
adcl
xor
je
jmp
pop
orb
jno
sarb
pushf
ret
sub
or
jne
fisubrs
xchg
pop
xlat
das
jle
fidivrl
add
dec
dec
mov
shll
sbb
jge
or
jnp
sbb
popa
data16
jnp
lahf
and
addb
cmpsl
fiadds
mov
pushf
pop
add
andl
mov
inc
add
testl
adc
jno
sub
aam
inc
xor
ret
pop
movsl
rcrb
rolb
mov
sbb
mov
inc
icebp
push
xorb
mov
lcall
mov
repnz
adc
add
nop
test
sbb
inc
mov
fwait
hlt
sub
cltd
ret
sub
mov
cmc
sbb
mov
cmp
daa
dec
arpl
sbb
out
dec
ds
add
iret
or
rclb
stc
fcomi
inc
sbb
xchg
xor
adcb
mov
out
je
xor
xchg
pop
in
mov
out
cmp
cmc
cmp
pop
enter
add
xchg
frstor
pop
cmpsb
aam
movb
dec
sbb
mov
leave
xchg
fisubl
cltd
adc
or
gs
sub
repnz
mov
addb
inc
arpl
imull
add
mov
pop
adc
mov
leave
jnp
cmp
cmp
add
push
popa
lret
mov
inc
testb
inc
sti
mov
roll
dec
repz
call
inc
mov
subb
pop
loop
and
andb
lea
and
call
xor
lds
add
addb
mov
cwtl
sub
inc
adcb
cmpsl
notl
test
inc
add
xchg
mov
pop
les
jmp
pop
cmpsb
xor
ret
fadds
int3
fstps
das
sahf
jmp
je
pop
xchg
jnp
sbb
cmp
inc
pop
or
lret
dec
add
add
lea
xor
sbb
clc
sbb
and
adc
repnz
cltd
scas
ret
mov
cmp
sbb
mov
orl
lds
lcall
into
mov
mov
sub
ret
and
mov
cmp
adc
jg
lcall
mov
addr16
mov
cltd
outsb
pop
mov
cli
add
inc
add
mov
adc
or
sbb
hlt
sub
sub
lcall
adc
fnstsw
add
clc
push
icebp
daa
jb
hlt
mov
mov
aaa
out
repnz
mov
into
jnp
xchg
cld
sbb
xor
inc
adc
in
dec
cmp
sub
cmp
push
out
pop
mov
ret
sub
cld
lcall
mov
adc
mull
adcb
aam
outsb
rclb
xor
stos
sbb
xor
xlat
test
lcall
and
push
out
nop
mov
divl
out
xchg
cmp
mov
imul
movsl
lock
outsl
jle
mov
stc
mov
dec
mov
xchg
out
out
adc
in
mov
lcall
outsl
or
sbb
cmc
ret
cmpsb
call
inc
orb
pusha
jecxz
mov
or
repz
cli
push
mov
inc
sbb
fs
mov
add
sbb
insb
add
mov
push
sub
rcrb
out
enter
iret
jnp
fiaddl
add
clc
jp
ret
dec
lret
xchg
cmp
jle
mov
or
jl
arpl
ss
bound
xchg
lock
xor
lods
xor
mov
pop
sahf
or
sbb
push
cltd
popa
scas
insl
lcall
frstor
or
clc
xchg
sub
xlat
pop
pop
jle
xlat
cmp
test
and
or
cltd
insb
mov
mov
rorb
call
mov
push
ja
mov
xorps
std
fstpt
sub
out
or
test
lcall
negl
and
xchg
and
add
mov
xor
and
inc
jne
sub
cmp
add
aas
dec
aaa
sub
and
dec
scas
inc
inc
out
ljmp
or
je
bound
icebp
sbb
jo
mov
xchg
nop
dec
js
nop
aad
in
repnz
jbe
pop
cmp
roll
lock
jge
adc
int
jecxz
shrb
movsl
push
mov
mov
rol
jae
sub
cmp
ss
xchg
cwtl
dec
xor
mov
outsl
inc
xlat
adc
mul
push
lahf
pop
decl
inc
xor
mov
cwtl
pop
xor
mov
add
ret
add
fs
and
dec
mov
into
cli
mov
movsl
xlat
popf
sub
sahf
sbb
shlb
jg
cmp
cltd
rcll
aaa
test
mov
jle
add
shrl
sub
fcoms
in
les
pop
xor
outsb
jo
adc
fbstp
and
cs
stos
and
sub
mov
jg
cmp
fisttpll
adc
sbb
stc
std
adc
cmpsb
cltd
push
inc
or
xchg
popf
or
lret
jmp
sbb
fidivrs
mov
test
sbb
mov
lds
sbb
jmp
outsl
pop
push
cltd
int3
pop
fisubrs
and
popf
int
pusha
inc
hlt
imull
and
aad
cltd
and
sub
jo
cs
int
pop
sti
insl
inc
ljmp
rcl
cmp
sub
movsl
dec
out
sub
pop
pop
pop
lcall
cmp
pop
xchg
xchg
psubb
adc
lcall
enter
pop
cmc
lock
and
aaa
mov
or
push
ficoml
xchg
jo
and
push
mov
sbb
lds
flds
ds
rol
push
cltd
push
jns
or
stos
xchg
jns
in
jp
mov
adc
sub
and
lods
xor
in
lods
iret
pop
pop
sti
or
and
or
fistpl
subl
jno
pushf
pop
mov
push
imul
popa
mov
into
stos
out
mov
mov
stos
jle
jno
xchg
xchg
loop
inc
jecxz
push
je
mov
enter
or
lcall
jae
mov
fdivrl
adc
cmp
mov
leave
and
cmp
mov
cmp
xchg
aas
pop
pop
add
jg
pop
je
pop
shlb
and
inc
or
sarl
mov
xlat
pop
sub
jg
les
cmc
cltd
pop
fcoms
shlb
cltd
stos
jmp
loopne
cmpb
or
jge
mov
cmp
repnz
hlt
mov
lock
mov
sbb
xorb
scas
ret
xorb
movsl
jmp
jae
xchg
xorb
leave
in
add
adc
dec
popf
in
sbb
jae
jne
data16
jl
adc
push
iret
hlt
pop
mov
add
jge
and
and
dec
add
icebp
sbb
fdivs
scas
scas
bound
sub
cmc
inc
add
ja
mov
cld
bound
mov
sub
repz
frstor
orb
int
movsl
or
pop
jg
and
loope
pop
mov
fiadds
xor
jg
popf
sbb
sti
loop
bound
sub
mov
scas
xchg
push
adcb
mov
pop
js
cmpb
add
sbb
and
mov
and
insb
imulb
push
andb
xor
xorb
out
ret
out
int
subb
cmp
jae
fs
pop
xor
sarb
pop
je
dec
lea
inc
lcall
sahf
jae
xchg
int3
dec
pusha
adcb
outsb
pop
jg
xor
jnp
xor
adc
xor
je
xorb
push
jp
pop
xchg
dec
test
lahf
or
imul
push
std
lods
push
outsl
fst
addl
subb
cmp
sbb
nop
xor
sub
hlt
xchg
outsb
jo
call
fisubrl
and
das
rolb
cmovs
aad
lcall
mov
mov
jg
test
mov
imul
hlt
inc
xchg
jecxz
dec
enter
popa
fcoml
loope
xor
cmc
jns
pop
addb
lahf
andb
test
add
lock
inc
mov
mov
pop
jecxz
inc
addb
pop
mull
lds
mov
adc
addl
aam
mov
lcall
push
or
cltd
pushf
jne
test
sbb
xlat
jmp
pop
mov
cmp
sbb
pusha
incb
cmp
xchg
jp
mov
sbb
sub
pop
les
cmp
cmpb
pop
mov
add
sub
or
push
dec
xorb
mov
ss
jae
add
loop
or
jns
fnstsw
cmpb
sbb
insb
and
mov
cmp
loopnew
xchg
add
movsb
push
add
fcomps
cmp
test
rorb
adc
fists
jmp
cmp
add
dec
jg
je
push
subb
and
out
add
jo
pop
nop
cmp
cmpb
fwait
or
xor
mov
out
orl
ret
pusha
loopne
mov
jb
add
inc
inc
rclb
xor
fistl
sub
clc
dec
push
shlb
cmpsl
or
lods
test
ds
rorb
sbb
cmpsb
xchg
xchg
cmp
pop
xor
sub
mov
repnz
dec
jae
xchg
push
lahf
add
pushf
testb
push
arpl
rcrb
jno
ret
jb
sbb
shl
repz
out
jae
ljmp
js
push
in
adcb
subb
push
loopne
xchg
xor
nop
sub
idivb
jl
inc
lret
cs
repz
lea
jmp
add
xor
mov
jno
jp
xor
or
dec
mov
sahf
testl
push
mov
cmpb
js
popf
lds
or
int
cmp
and
mov
sub
shr
cmp
ja
cmc
mov
xor
pop
sbb
insl
inc
mov
hlt
andb
scas
jmp
adc
and
ret
mov
faddl
mov
inc
or
ret
fdivrl
push
jnp
arpl
sub
or
subb
scas
or
subb
jo
dec
in
or
outsl
subl
imul
lods
es
mov
add
test
mov
lret
jp
adc
dec
lock
sub
fiadds
mov
jno
jmp
lods
andb
jge
sub
in
int
out
or
repz
aaa
push
arpl
pop
es
adc
outsl
xor
fcmovnbe
mov
mov
cmpsl
add
mov
sub
loopne
or
mov
mov
pop
subb
xor
adc
pop
xorb
dec
sub
out
les
add
sbbb
or
jbe
push
adc
or
out
shrl
jnp
loope
outsl
pop
mov
addb
pusha
sbb
push
or
xor
mov
hlt
push
bound
repnz
xchg
xlat
mov
jg
stc
pop
rcrl
loope
subb
lods
xorb
icebp
cmp
push
cltd
mov
mov
adcb
xchg
or
jg
in
roll
push
mov
gs
xlat
roll
sbb
add
popa
gs
jle
std
inc
xorb
or
insb
push
ja
jge
popf
adc
adc
cmp
orb
hlt
movsb
sub
sbb
push
inc
dec
repz
or
push
pop
test
je
into
push
pop
inc
adcb
test
dec
and
mov
shlb
jbe
add
orb
cmpb
inc
pop
ljmp
push
repnz
lret
dec
inc
mov
jl
int3
add
xor
rolb
outsb
cwtl
xorb
adc
jo
popa
fldl
dec
adc
push
or
imul
push
dec
bound
test
dec
jns
push
sub
cmp
rcrb
cs
sbb
lahf
dec
loope
or
and
jl
addb
or
pop
jne
pop
add
and
aaa
sub
adc
scas
sbb
and
xorb
jmp
arpl
repz
stc
push
fwait
jg
adc
pop
shl
cmpsb
loop
pop
icebp
orb
rolb
jnp
jns
mov
pusha
cmp
loopne
sarl
clc
pop
arpl
iret
push
sub
shl
pop
jmp
mov
andb
adcb
les
jp
pushf
imul
call
cmp
bnd
jle
adcl
pop
add
ljmp
cmp
insl
push
addb
lea
sahf
mov
mov
jns
dec
fisubl
andb
popf
sub
push
outsb
bnd
jae
add
jnp
das
decb
sub
ret
dec
js
xorl
cmpsb
data16
into
add
mov
int3
adc
jns
out
push
and
addb
lret
jecxz
pop
mov
xorb
or
push
popf
mov
cmpb
push
out
sbbl
cld
ret
cmpb
dec
cwtl
js
shl
rolb
dec
aas
movsl
jnp
and
sub
mov
cld
jle
jns
insb
rol
fdivrs
fwait
sub
sbbb
insl
dec
bound
pop
repz
mov
in
xchg
mov
jb
mov
out
fiaddl
push
pop
add
dec
ret
pop
into
sub
call
push
jae
inc
mov
popl
adc
mov
sbb
sbb
lcall
loop
sub
cltd
lret
jno
mov
dec
inc
push
add
lcall
jbe
sbbb
lret
or
test
inc
imul
xlat
jl
cmp
xor
stc
sqrtps
andb
add
in
pop
pop
mov
lds
les
negl
subl
or
jp
fdivs
or
mov
lock
xor
add
sub
push
sbb
stc
xchg
daa
clc
jmp
je
jbe
das
lcall
push
cltd
icebp
and
jne
sbb
jp
sbb
xchg
scas
popa
mov
xlat
lods
mov
jns
xchg
outsb
sub
push
pop
and
mov
mov
arpl
jl
cmpsb
ja
lcall
xchg
loopne
out
xchg
add
leave
out
mov
lcall
add
mov
dec
xor
inc
and
mov
imul
cmp
xchg
adc
sub
iret
in
cwtl
xchg
xlat
popa
mov
loope
push
mov
xor
jns
test
movsb
lods
jbe
jns
jecxz
stos
mov
push
mov
adc
and
or
lcall
xor
out
xor
cltd
inc
push
das
mov
push
jge
inc
push
fnstcw
scas
mov
dec
jge
mov
sub
jo
pusha
mov
sbb
mov
jg
sbb
sub
test
rcrb
es
adc
inc
push
mov
scas
xchg
sub
xchg
test
xchg
jbe
mov
or
fnsave
fisttpl
xor
jp
dec
xlat
repnz
loopne
jp
out
ret
cmp
sbb
insl
jle
ret
clc
mov
lods
mov
stc
iret
jmp
xlat
adc
stos
mov
xor
push
fstpt
aaa
mov
or
leave
xor
enter
loopne
add
pop
inc
add
bound
mov
sub
ljmp
pusha
ja
ljmp
pop
jmp
aam
or
frstor
test
adc
outsl
push
jnp
fnstsw
test
sub
or
lds
movsb
in
insb
ss
insl
xorl
sub
roll
sbb
mov
lret
sub
aad
inc
fisttpl
jo
or
movsb
inc
in
xor
lods
fwait
xlat
pop
cmc
sub
sbb
mov
jmp
push
sbb
push
ficoms
lods
dec
lock
ljmp
das
jo
mov
ret
sub
and
sbb
dec
lock
jnp
movsl
mov
fdiv
dec
cwtl
sub
xchg
pop
lds
cltd
mov
push
bound
pop
gs
cmp
pop
dec
loop
ficoms
scas
cmp
in
fdivr
mov
mov
sub
arpl
jns
sub
push
push
aaa
ret
sbb
jne
rcl
es
int
mov
xchg
cmp
cli
add
pop
fsubrs
or
fdivrs
leave
jo
lcall
mov
mov
jae
ja
inc
add
ja
dec
insl
jge
rorb
push
je
clc
push
jne,pt
scas
ret
leave
outsb
je
gs
ret
push
mov
cmp
xchg
enter
fnstenv
mov
xchg
sbb
out
aaa
clc
lds
add
das
ljmp
shll
stos
adcl
jecxz
ljmp
imul
les
add
aad
fiaddl
aas
dec
rcrb
add
lret
sahf
repnz
call
sbb
xchg
ficoms
leave
push
rcr
push
pop
and
mov
jmp
ljmp
mov
xchg
inc
jecxz
call
lcall
aaa
outsb
mov
add
mov
or
push
sbb
test
jle
stos
mov
xor
adc
pop
sbb
imul
lret
xchg
xlat
mov
sub
les
ret
xchg
in
daa
aas
xor
jno
mov
out
jge
jb
scas
pop
aaa
ja
mov
add
push
shll
arpl
fwait
imull
xchg
xor
jecxz
push
daa
and
pop
int
mov
mov
mull
xchg
in
sub
test
xor
nop
fnstcw
add
lahf
lea
insb
stc
xor
ss
mov
jecxz
es
in
repnz
xlat
out
ljmp
jns
push
loopne
scas
addr16
mov
idivb
pop
push
lcall
ja
lock
mov
mov
lcall
cltd
repz
mov
or
cmp
and
out
push
add
imul
or
addb
lods
xor
aaa
xor
mov
subb
pop
es
jae
mov
dec
shll
pop
cmovo
pop
push
cwtl
lahf
ret
dec
js
lock
jecxz
mov
xor
pop
fidivl
test
addr16
inc
adc
jo
adc
sbb
pop
jnp
cwtl
mov
jb
jno
loop
rolb
inc
mov
sbbl
or
dec
fsubs
cmp
test
addb
in
xor
testl
subb
jp
arpl
xor
cmpsb
ja
sbb
outsb
xchg
cltd
orb
stc
lea
arpl
xor
push
aad
sbb
xchg
ljmp
notb
xlat
enter
nop
sub
fistpll
ret
xor
mov
test
bound
in
adc
jns
sbb
cmp
jg
mov
cld
xchg
cli
scas
or
sbbl
push
fcoms
cwtl
mov
ljmp
aaa
xchg
lret
mov
bound
xorb
popa
loope
sarl
mov
inc
iret
mov
arpl
and
xchg
mov
cmp
push
cli
movsl
movsb
adc
cltd
push
sbb
push
xor
mov
xchg
sub
pop
sub
cwtl
ss
test
call
jecxz
imul
lahf
add
sahf
js
test
ja
repnz
jbe
fistl
movsl
test
jns
sub
mov
pop
idivl
or
or
cltd
inc
jbe
xchg
icebp
scas
xchg
outsl
push
jle
mov
xchg
les
stc
add
jg
cmp
and
arpl
pop
pop
fisttpl
mov
mov
ss
lods
mov
sbb
out
ja
out
test
jne
mov
xor
xor
arpl
pop
das
repnz
push
shrl
add
sahf
in
mov
es
stos
enter
sbb
les
dec
pop
dec
shlb
hlt
ss
out
inc
and
nop
push
repz
inc
or
out
mov
pop
cltd
xchg
aas
dec
or
bound
adc
jg
pop
push
xchg
fisubl
sarb
push
adc
repz
add
sahf
cltd
mov
inc
cwtl
sbb
lds
mov
cltd
sbb
mov
adc
lcall
or
pop
pop
mov
xor
leave
mov
mov
sub
xchg
out
lds
mov
daa
and
out
mov
pop
or
aam
dec
mov
ljmp
sti
out
push
outsl
sub
xchg
lahf
jl
xchg
fidivl
mov
add
jle
addb
mov
pop
or
in
lods
mov
and
std
jbe
sbb
push
ja
lcall
sahf
hlt
or
int3
mov
jge
pop
sub
xchg
out
int
stc
or
inc
ret
cmp
and
fsubs
rcrl
mov
int3
ja
lret
mov
aaa
adc
js
pop
mov
test
das
in
cli
in
fcmovb
js
mov
jle
ljmp
cmp
imul
je
sub
sub
jb
and
mov
mov
das
sarl
mov
int
add
jle
xchg
sub
mov
jno
in
arpl
lcall
jle
mov
dec
mov
lea
outsl
add
sbb
lret
daa
jg
add
lret
and
test
jns
xor
movl
add
cltd
mov
insb
cli
stos
adc
ja
lcall
push
dec
cmp
cmpsb
cmpb
stc
sub
js
inc
mov
sub
jmp
out
sbb
cltd
into
ret
lcall
insl
pusha
rolb
and
jnp
rclb
in
into
xchg
pop
ljmp
andb
add
or
sub
jmp
inc
jmp
out
and
push
push
sbb
bound
xor
push
int3
ss
push
or
mov
jg
ficoml
bound
xor
xchg
mov
xchg
leave
sahf
data16
bound
gs
mov
adc
push
lock
add
dec
add
out
lds
pusha
lcall
ljmp
out
aaa
cli
cs
popa
sbb
push
iret
sti
xor
hlt
cmpsb
dec
jbe
nop
insl
daa
xor
sub
repnz
sub
sub
into
cltd
pop
and
arpl
leave
cmp
mov
das
scas
jp
mov
repnz
push
or
popl
aam
jl
call
mov
push
dec
push
sbb
mov
mov
pop
enter
jno
or
les
jb
lods
lcall
inc
cmpb
xchg
les
xchg
add
bound
and
jl
ja
stos
dec
sub
inc
sub
repnz
or
lds
shrb
out
cmp
mov
xor
and
xor
imul
dec
mov
jl
jecxz
and
jae
pop
add
inc
stos
and
jmp
sub
mov
jecxz
jmp
jnp
sarl
xchg
sub
and
add
cmp
out
es
push
sbb
xor
sahf
mov
ds
mov
xorb
adc
repz
imul
inc
cltd
pop
push
lea
and
mov
cld
fdivl
rcr
sbbl
add
cltd
jg
not
xor
mov
movsb
xchg
push
bound
iret
loopne
movsl
popa
fisubrs
pop
dec
cli
push
xchg
mov
int
clc
push
icebp
adc
xchg
popf
movsb
les
mov
lcall
lcall
cmovs
xchg
inc
hlt
inc
ljmp
jns
dec
dec
push
mov
outsb
test
lds
sub
and
outsb
fsts
andl
insl
sarb
cmp
pop
loopne
gs
pop
insb
aaa
pop
mov
and
pop
dec
dec
push
jns
lds
jae
or
jg
lock
mov
pop
pop
xrelease
jo
push
xchg
cmp
stc
add
sbb
setb
add
shlb
cmc
lds
cltd
out
rcrb
add
mov
lret
ret
pop
adc
adc
test
aad
call
sub
add
lret
sub
inc
repz
jge
pusha
out
jns
fcom
xlat
fbstp
inc
idivl
cs
jne
sub
cmpsb
loopne
inc
cmp
sub
inc
xor
neg
aam
mov
sarl
cltd
daa
in
sarb
and
cmp
out
push
and
xor
aam
mov
mov
in
sub
mov
ror
cmpsb
pop
test
cld
inc
cmp
xchg
stc
push
xor
shrb
mov
push
fsubrs
and
enter
stos
sub
scas
xchg
lcall
fsts
adc
scas
clc
or
jecxz
dec
clc
ret
ja
bound
cld
jecxz
push
testl
aaa
sbb
xchg
push
rcrl
push
loop
mov
cmp
inc
jns
in
mov
cltd
or
icebp
enter
xchg
xchg
xor
push
mov
in
inc
cwtl
pop
fisubrs
push
lcall
cmpl
jg
inc
ss
addb
pusha
repnz
add
xor
mov
rolb
lcall
fcoml
add
xor
test
push
lods
lock
cld
mov
add
aas
shll
loopne
into
and
ror
mov
std
push
add
push
testl
dec
adc
push
or
mov
mov
mov
xchg
testb
mov
mov
cmp
push
stos
and
sbb
icebp
hlt
push
adc
jns
in
add
repnz
lgs
enter
jbe
jo
mov
sub
bnd
jo
out
out
mov
clc
icebp
push
shr
adc
xor
insb
cmp
cmpsb
add
mov
hlt
inc
mov
aaa
lds
sub
enter
jle
xlat
mov
test
mov
xlat
imul
xchg
jge
mov
push
sbb
xchg
inc
faddp
enter
jo
shrb
gs
in
mov
lcall
inc
into
pusha
ja
sub
xchg
out
mov
out
outsl
mov
jmp
jle
les
push
mov
pusha
push
pinsrw
xchg
loopne
sbb
add
add
pop
push
or
repnz
outsl
add
aaa
hlt
adc
idivb
or
jns
enter
xor
add
lock
ss
xchg
andb
jo
mov
sbb
scas
in
add
imul
jae
rorl
lcall
add
pop
sti
push
add
fnstsw
loopne
out
bound
movsl
cmp
dec
out
out
addr16
jns
mov
and
inc
ss
addr16
jecxz
icebp
loop
jle
mov
in
cmc
mov
cltd
je
dec
jecxz
mov
mov
inc
outsb
sbb
aad
inc
or
incl
jle
adc
sub
cmp
daa
test
xor
sbb
inc
and
pop
jae
aaa
sahf
jle
inc
or
dec
faddp
inc
inc
int
and
jg
cmovle
adc
ret
lcall
pop
pop
adc
push
dec
cld
lcallw
push
repnz
inc
cmpsb
stos
aaa
pusha
sub
mov
add
cli
lock
sub
cmp
xorl
sbb
popf
dec
sbb
hlt
mov
ds
adc
out
orl
xor
sahf
pop
cwtl
or
xorb
mov
inc
mov
out
imul
fadds
dec
std
mov
adc
sub
jmp
loopne
jae
and
in
shlb
sbb
and
sub
xor
mov
jnp
stos
jne
mov
stos
repnz
cmp
inc
call
std
lds
out
out
mov
jae
xorb
negl
lret
outsb
xor
sbbb
mov
jl
jecxz
fwait
insl
mov
jne
xchg
jge
pusha
cltd
sub
ret
push
fbld
xor
xor
mov
repnz
mov
lods
sbb
xor
inc
fsubl
inc
cmpb
imul
mov
xor
loop
jl
xchg
roll
repnz
data16
lcall
sub
pushl
adc
mov
jg
push
imul
mov
lods
jmp
scas
sti
add
jge
adc
inc
jnp
sub
pushf
jp
int3
push
addb
push
adc
incb
popf
and
jnp
stos
and
insb
cwtl
sbbb
subl
dec
mov
cmc
pusha
jbe
push
push
sub
jge
call
push
or
jo
shlb
cmpsb
jmp
sbbb
std
push
outsl
sub
andb
aaa
or
andb
ret
dec
addb
fmull
dec
jnp
addr16
inc
sbb
xchg
dec
je
push
xor
inc
inc
pushf
adc
mov
sbb
orl
and
pop
adc
sbb
xlat
add
stos
sub
push
gs
dec
cmp
pop
inc
or
lea
out
sbb
cmpb
xor
xchg
mov
and
add
dec
adc
xchg
sbb
bnd
mov
sbb
test
xorb
xchg
popa
ds
iret
jae
add
mov
mov
cmpb
jo
ds
faddl
sbb
mov
andb
std
or
insl
frstors
popa
popl
cmp
pop
sbb
cmp
cmp
push
cmp
mov
mov
lahf
push
mov
insb
jmp
mov
orb
push
and
xor
ljmp
fbstp
scas
adc
xorb
pop
sub
mov
jge
popa
jmp
pop
or
test
or
dec
push
out
outsb
mulb
xorl
std
ja
gs
add
out
pop
adc
in
rcrb
adc
ss
stc
leave
nop
pop
xchg
jge
lcall
cmp
add
imul
ljmp
adcb
rclb
sahf
aaa
fsubr
mov
or
mov
sbb
jmp
mov
shl
andb
rcrl
and
fwait
mov
sub
icebp
iret
cmp
sbb
xlat
and
fs
cmpsb
fcomps
orb
ret
mov
dec
cmp
mov
les
push
out
jl
mov
cmp
mov
push
cmp
jle
insb
dec
mov
add
cmp
adc
pusha
daa
push
andb
ja
inc
xchg
cltd
rol
adc
inc
sub
mov
dec
sbb
out
movsl
lret
cmp
mov
cmpsl
mov
push
and
int
sub
sub
repz
adcl
mov
cs
mov
add
lds
ljmp
inc
cld
add
add
repz
mov
stos
mov
push
sbbb
and
subb
xchg
mov
out
jbe
shl
stos
lret
pushl
loop
mov
push
mov
mov
dec
bound
lock
xchg
fs
xlat
stc
fistpll
icebp
pop
pushf
mov
call
shll
aaa
scas
mov
aas
xchg
push
jnp
clc
push
popf
push
xor
cmp
cmpb
mov
push
inc
imul
addb
in
pusha
pop
mov
mov
sahf
daa
test
out
pop
es
pop
dec
pop
mov
xor
lret
mov
inc
popf
stos
enter
sbb
sub
adc
cmpb
jb
dec
iret
push
shl
test
dec
mov
mov
adcb
mov
sarl
or
les
mov
es
mov
add
mov
lock
cli
add
sbb
inc
loopne
cmpb
pusha
leave
cmpb
push
outsb
in
mov
cmp
fs
and
orb
add
stos
xor
mov
outsl
cmp
add
push
xor
jg
bound
cmpb
mov
jle
sarl
xchg
loop
and
fmul
jne
or
dec
jmp
pop
cmpsb
dec
xchg
subb
pop
rolb
sub
test
jne
pushf
cmp
cli
mov
dec
pop
mov
sbb
fwait
ljmp
mov
ficoml
stos
and
cli
fisttpll
adc
adc
fmuls
orb
pop
mov
add
jg
jmp
jo
and
insb
inc
sar
jno
or
addb
mov
cmpb
mov
nop
clc
ja
mov
lret
adcl
xor
mov
cmpsb
add
xorb
push
xorb
cmp
fsubrl
or
cmpb
jno
ret
cmpb
mov
or
xlat
push
lcall
fsubs
pusha
pushw
jle
pop
popa
jmp
pop
out
cltd
sahf
sbb
pop
mov
mov
cmc
jo
ret
jge
push
mov
or
mov
jbe
dec
xchg
and
mov
and
fnsave
inc
inc
xlat
sti
dec
push
and
icebp
pop
push
xchg
xchg
adc
andb
inc
sub
add
fwait
enter
test
adc
sub
dec
lds
out
pmaxsw
or
sub
push
rolb
jecxz
outsb
xorb
jle
divl
loop
push
cmpsl
push
add
mov
or
lods
ret
or
add
pop
bound
aaa
mov
xor
call
sbb
pop
pushf
jmp
push
and
push
mov
pop
out
add
mov
pop
dec
rolb
andb
stos
dec
cmp
pop
push
mov
push
jle
sbb
loop
lods
jle
ds
ljmp
cltd
xor
popf
push
aam
sub
mov
andl
sub
xorb
fdivrs
pushf
xchg
adc
adcb
fcoml
pop
mov
rolb
ret
mov
orb
mov
sbbb
inc
loope
icebp
pop
jecxz
adc
in
ret
cld
push
push
nop
dec
cmp
aas
mov
fdivrl
push
or
retw
inc
adc
cmp
xchg
je
and
ret
inc
push
push
jle
mov
loopne
mov
int
sbb
andb
jl
jge
mov
add
mov
push
push
orb
lock
pop
arpl
push
mov
mov
sbb
mov
in
cmp
push
aas
mov
pop
out
subb
xor
sub
push
cmpsb
adc
stos
bound
out
ss
scas
xchg
or
jae
xor
cltd
stos
addb
subb
or
inc
mov
les
jne
pop
xor
cld
mov
mov
adcb
xor
icebp
xchg
and
daa
mov
shrl
dec
outsl
out
mov
jp
xorl
les
imul
int
subb
mov
mov
stos
out
ds
cmp
jg
mov
jl
aad
adc
mov
nop
je
jae
rcll
leave
pop
aaa
lahf
push
mov
xchg
cld
lcall
sub
cwtl
or
jne
sub
ficoml
inc
outsl
cltd
xchg
push
lret
sub
mov
cltd
push
popf
and
fbld
jbe
xchg
and
add
in
push
dec
bound
ja
ljmp
int3
daa
lock
pushf
sub
mov
nop
test
or
lcall
int3
and
jae
jbe
sti
out
ret
push
scas
int
stos
ja
and
insb
shr
xchg
jns
lcall
repnz
inc
cld
xor
jns
xor
jbe
fistps
mov
inc
sub
nop
lcall
cmp
in
bound
test
imul
fistpll
sbb
mov
xor
test
lock
in
into
lods
add
sbb
add
je
test
xor
cmc
dec
int
dec
imul
mov
mov
pop
pushf
ja
lcall
pop
fs
sbbb
cmp
jecxz
xchg
mov
js
xor
sub
lds
dec
push
add
inc
jns
xlat
mov
mov
pop
and
cltd
setno
jmp
in
lcall
mov
mov
insb
add
push
std
movsl
xor
mov
cld
mov
and
in
adc
or
inc
pop
pop
and
lds
clc
lds
mov
inc
xor
xchg
aam
mov
ret
lods
je
pop
sub
lcall
fsubrs
sbb
inc
jg
clc
cmp
sbb
sbb
lahf
inc
jns
or
mull
jne
int
sub
pop
fisubrl
jmp
xchg
pusha
and
ss
dec
leave
inc
shll
xorb
inc
add
push
ja
sub
xchg
and
xchg
cmp
xor
mov
fisubrs
add
lock
xor
inc
movsl
sbb
sub
and
xchg
bound
mov
xchg
lock
lea
gs
movsb
into
ret
adc
cwtl
cwtl
jle
cmp
jecxz
movsl
std
mov
jnp
rclb
lahf
inc
paddsw
ret
fldenv
jns
clc
lods
or
mov
fistpl
les
mov
pop
jbe
mov
cli
add
mov
adcb
repnz
xor
call
pop
add
mov
fcmovnb
cmp
cmc
jle
inc
xchg
pop
mov
enter
jg
or
cmp
xor
xor
test
fsts
cwtl
xor
jns
mov
dec
and
aaa
movsb
jmp
push
loop
lds
mov
jg
mov
jo
cmpsb
mov
pop
arpl
leave
pop
xchg
add
dec
mov
and
cmp
ret
lret
mov
insl
and
mov
cmc
mov
dec
mov
outsb
jns
sbb
pop
mov
cmp
lcall
mov
jg
sub
sub
cmp
mov
jecxz
mov
jmp
mov
cmp
mov
out
scas
inc
xor
jb
jge
imul
mov
sbb
xchg
pop
and
push
sbb
sbb
xlat
fdivs
push
fldl
jno
push
sub
cmp
cmp
sarb
or
mov
add
jno
out
and
cmp
orl
adc
mov
xor
inc
xchg
rolb
and
imul
push
cmpl
enter
shr
and
pop
dec
subl
inc
pop
int3
dec
lods
sub
rolb
test
push
hlt
jns
sbbb
dec
into
lock
in
andb
ret
sbbb
gs
inc
in
call
into
inc
add
pop
stos
ret
xor
movaps
dec
loopne
jp
xchg
jnp
add
jecxz
ret
lret
add
sbb
addb
or
ret
loop
call
aam
mov
xor
mov
mov
xor
mov
cwtl
cmpb
insl
cmpsb
adc
xor
imul
int3
testb
inc
ret
sbb
arpl
xor
xor
movsb
loopne
jnp
adc
mov
adcb
dec
dec
xchg
mov
sbb
jne
adc
sub
das
mov
addl
hlt
mov
int3
jnp
add
in
sbb
data16
push
sbb
movsb
xorb
push
loope
sub
cmpb
push
push
out
sub
negl
push
dec
fsubr
push
mov
dec
in
popa
mov
lds
xor
iret
addb
push
aam
push
jl
xchg
push
dec
iret
xchg
bound
nop
mov
jns
or
into
jns
inc
mov
dec
sub
sub
xor
je
mov
movsl
iret
adcb
out
stos
inc
or
fisubl
xor
pop
and
adc
insb
dec
xorb
cmp
mov
adc
addb
ljmp
adc
mov
jmp
callw
push
adc
fldl
xcrypt-cbc
cmpsl
rorl
repnz
sti
in
and
pmulhuw
call
sbb
dec
icebp
pop
xor
cmpsb
or
xchg
orb
sub
sub
and
outsl
addr16
stos
testb
cmp
dec
and
mov
mov
add
dec
flds
mov
data16
popa
in
cmpsb
addb
sbb
add
ds
in
xorb
outsb
filds
sarl
andb
sub
addb
push
aaa
test
nop
scas
cmp
mov
mov
inc
inc
mov
adc
stc
jne
push
xchg
mov
sub
jo
andb
mov
sbbb
shlb
and
xchg
xchg
cwtl
stos
xor
mov
inc
clc
pop
gs
div
insl
sub
xlat
adc
jge
inc
cwtl
inc
pop
add
stos
cmp
xor
pusha
pop
data16
add
nop
lret
jp
sub
cmpsl
xor
inc
push
mov
jnp
gs
add
mov
pop
js
dec
and
adc
jae
pop
je
xchg
pushf
cmc
inc
insl
mov
mov
inc
shrl
add
mull
repz
lret
xchg
inc
orl
lcall
mov
std
ret
rolb
pop
xchg
shlb
in
pop
aas
andb
sbb
jnp
mov
pushf
push
sbbl
dec
add
jae
inc
sarb
out
adcb
outsl
gs
mov
mov
pop
mov
orb
jns
adcb
inc
dec
jnp
xchg
mov
imul
cmc
cmpl
fsts
cmp
nop
push
js
xlat
cmp
xor
lahf
cmp
xor
in
testl
xorb
add
fistl
out
cld
xor
addb
bound
fidivrs
adc
sbb
fstpl
call
sbb
aas
xchg
mov
jnp
xchg
mov
inc
sub
jge
rolb
or
ficoml
push
cmpb
sbb
imul
sbb
pop
or
pop
leave
mov
lcall
cld
adc
enter
xchg
testl
call
mov
gs
or
inc
ljmp
repz
xchg
adcl
adc
faddp
popf
add
sbb
xchg
cmpsb
add
enter
leave
adcb
lds
dec
cmp
and
loope
cmp
mov
dec
out
cltd
out
incl
scas
and
xlat
ret
jle
mov
add
ja
jmp
lret
mov
mov
dec
or
out
hlt
scas
movl
idivb
jne
loop
insb
sarb
je
xor
fcompl
pushf
jb
sti
adc
dec
mov
or
imul
hlt
mov
popa
scas
pop
cmpb
movsb
ss
lods
sti
push
insl
add
jno
subb
sub
push
pop
sbbb
fmuls
jle
jle
les
inc
lock
lahf
ss
jno
mov
xchg
mov
daa
pushf
xor
sarl
inc
add
scas
aaa
mov
push
stos
test
mov
into
decb
add
inc
pop
shrl
out
into
addr16
pop
out
push
adcb
fisttpl
setnp
push
add
xorb
dec
adc
dec
jnp
push
aas
pop
xor
xor
xchg
sub
addb
pushf
adcb
in
push
xchg
xchg
je
orb
fdivrl
mov
mov
std
pop
loopne
mov
or
in
iret
mov
xchg
fucomip
scas
out
mov
int3
subl
loop
lahf
adc
inc
rcr
addl
scas
les
mov
iret
arpl
ljmp
xchg
cmp
add
ss
jnp
scas
jmp
xchg
pop
out
insb
mov
cmc
shl
push
cmpsl
iret
je
and
cmpsb
cwtl
mov
in
jg
adc
fdivrl
jnp
mov
mov
sub
scas
in
sbbb
jae
add
lret
adc
sbbl
push
push
adcl
clc
sbbb
test
hlt
inc
dec
or
add
inc
dec
cmpsw
xor
add
lds
or
lahf
dec
loop
lods
shll
ds
int3
and
repnz
push
or
daa
cmp
jne
add
mov
dec
pushfw
orb
pop
push
mov
sbb
add
inc
rorl
jl
outsb
inc
addb
ret
sbbb
movsb
xor
outsb
jg
sub
inc
jg
ret
push
xchg
mov
add
sbbb
add
jnp
and
add
js
rol
andb
mov
mov
mov
shlb
sbb
aaa
push
testb
cmp
push
lret
stc
jge
enter
movsl
les
jnp
add
xor
mov
dec
ret
insb
popf
and
inc
or
std
imul
jae
jecxz
andb
and
xchg
test
pop
lret
jae
push
imul
dec
data16
mov
push
outsl
lcall
mov
mov
arpl
cmp
mov
dec
mov
push
xchg
sub
push
pop
jp
and
shrl
lods
loopne
cltd
inc
cmpsb
mov
lcall
cmp
pop
push
dec
dec
push
aam
ret
shrl
int
inc
adc
xorps
scas
pop
sub
jg
aas
push
es
add
and
in
orl
test
lds
or
and
lea
sbbb
fdivrl
ss
mov
jns
mov
subb
pop
push
sub
inc
daa
aas
sti
cltd
sbb
aam
test
nop
or
pusha
into
xchg
nop
or
loop
aam
rolb
test
inc
test
mov
les
mov
and
xchg
rcr
arpl
in
dec
scas
jne
cli
lock
sti
test
movsl
mov
xor
push
xchg
jmp
fsubrs
push
fildll
ret
jl
mov
cmpsb
iret
mov
cmp
sar
inc
outsl
imul
mov
ja
aad
stos
imul
cs
sub
test
int
xor
std
cmp
dec
mov
test
lds
mov
sub
rolb
push
lcall
and
in
mov
pop
cmp
mov
call
insb
jnp
cmc
outsb
sub
sub
push
cmp
mov
ret
sbb
gs
dec
xor
xchg
negb
mull
test
push
mov
cwtd
cs
shrl
not
sub
mov
mov
popa
push
cmp
out
das
cmpsl
jle
pop
icebp
add
loopne
repnz
dec
sub
push
imul
mov
cmp
xlat
cmp
sub
pushl
fsub
xor
push
mov
jle
push
clc
cmp
in
mov
push
imul
loopne
ss
fs
jbe
das
icebp
push
add
push
push
bsr
push
sbb
lcall
inc
xor
loopne
or
lcall
xchg
cmc
dec
mov
ret
dec
pop
mov
not
mov
lcall
cld
pop
and
cmp
xchg
jb
mov
jns
fs
mov
icebp
sub
xchg
or
jg
push
mov
add
mov
stc
cltd
sbbb
xchg
push
cmpsb
fdivrl
jbe
push
mov
pop
and
cmp
mov
adc
in
mov
inc
incl
outsb
scas
icebp
push
jno
loopne
pop
xchg
shr
mov
ret
jp
xchg
sub
cltd
mov
mov
mov
inc
add
push
imul
aas
mov
repnz
and
addr16
scas
xlat
rcrb
push
xchg
lds
outsb
shrl
jae
xor
jo
sub
push
mov
sbb
lods
push
push
dec
or
pop
cs
aam
les
inc
push
mov
fcomps
maxps
cli
fisubl
pop
inc
push
ret
ret
add
push
and
imul
fistpll
mov
or
jns
xchg
andl
mov
std
fwait
cmp
ret
lea
xchg
mov
dec
pop
sbb
mov
aam
add
lea
ret
inc
repz
negl
sub
je
push
mov
and
jns
lcall
push
xor
bound
dec
shr
jecxz
cli
das
vrsqrtss
lds
int3
jns
push
xchg
xchg
xchg
mov
sbb
test
in
xchg
mov
and
mov
neg
jnp
jb
xchg
scas
sbb
pop
idiv
sarl
jmp
stos
adc
enter
mov
insb
mov
scas
je
xor
sub
scas
std
mov
pop
ficompl
pop
adc
test
fsubp
mov
fstpt
mov
inc
nop
pop
daa
fimull
aaa
xchg
sti
pop
mov
rcrb
pop
and
jb
mov
jno
cltd
dec
inc
pop
push
cs
cmp
add
mov
dec
and
leave
je
int3
sti
movsb
sbbb
sbb
pop
inc
inc
enter
fldl
sub
jmp
out
stos
mov
loopne
and
lods
add
negl
sub
test
mov
pop
out
shlb
jo
das
add
jp
cli
or
jns
or
inc
adc
adc
sbb
testl
sub
orl
or
scas
outsl
inc
sbb
xor
mov
cmp
cli
xchg
add
jnp
dec
cli
lcall
repnz
xorl
mov
pushf
add
mov
out
dec
insb
insb
pop
lods
in
aad
cltd
insl
cmp
subl
js
mov
adc
outsb
lock
leave
jg
sub
je,pt
jle
xor
or
xor
add
push
xchg
add
inc
sbb
lret
insb
xchg
test
push
push
push
adcl
add
rorl
dec
jae
jno
nop
data16
div
xchg
cwtl
jo
outsl
mov
add
sbb
jle
jl
sbb
ds
jo
ljmp
sbbb
mov
mov
cwtl
aam
xchg
mov
testb
lcall
sahf
fiadds
jmp
push
enter
mov
divb
push
inc
cmc
ljmp
outsb
ljmp
pop
xchg
ja
push
cmp
lcall
and
cld
pop
imul
jge
push
pop
jns
sub
push
add
ds
lds
in
stc
dec
out
loopne
leave
fidivrl
xlat
inc
insb
inc
lahf
fsts
mov
cltd
xor
sub
adc
lahf
sub
jecxz
pandn
sbb
cwtl
push
lock
lahf
mov
ret
stc
mov
mov
jp
imul
inc
cmp
xchg
hlt
ret
scas
lock
xor
cmc
push
stos
mov
mov
or
cld
push
mov
jge
bound
addb
inc
dec
divl
push
lock
add
lret
subb
mov
xor
mov
rcrl
push
out
inc
fcoms
sarb
sub
outsb
lret
cmpsb
insb
xor
out
enter
cld
gs
in
or
mov
scas
test
and
sahf
mov
cmp
insb
cmp
jnp
and
fst
sbb
mov
jle
jbe
loop
cltd
lea
shr
cmp
and
ljmp
mov
adc
movsb
repz
in
jl
dec
gs
pop
popf
adc
rcrl
inc
dec
sub
adc
out
add
out
sub
pushf
data16
pushf
pusha
cmp
jbe
adc
cmpsl
imul
mov
pop
add
pusha
mov
addr16
test
jp
scas
pusha
frstor
sub
out
xlat
inc
jb
xor
inc
andb
imul
and
mov
outsl
stos
sarl
fmuls
jle
push
and
mov
mov
clc
jmp
pusha
mov
push
sahf
aas
cmp
aam
sub
adc
push
out
push
cwtl
test
cmc
dec
pop
jae
dec
out
aas
outsb
cltd
dec
or
repnz
mov
push
xor
iret
add
lret
dec
xor
pop
out
popf
mov
jg
xchg
pusha
lcall
test
inc
cltd
pushf
scas
test
ljmp
pusha
cltd
repnz
or
add
push
je
and
stc
je
mov
ja
notl
adc
cmp
mov
jae
iret
rolb
sbb
lcall
int3
lcall
aaa
lods
lea
sbb
movsb
loopne
or
jno
out
adc
aad
cltd
push
stc
jb
dec
lods
les
xor
mov
jno
mov
and
mov
addr16
sub
loopne
and
test
out
out
mov
push
xchg
scas
lods
daa
jle
pop
mov
hlt
xor
cmp
xchg
scas
pop
mov
mulb
int3
and
mov
lock
shlb
mov
lods
sub
outsb
and
lcall
mov
pop
xor
xorl
inc
fsincos
mov
push
and
push
pop
sub
shr
push
ret
dec
ret
flds
mov
sub
xchg
xlat
out
dec
ja
jne
out
test
sub
std
xlat
pop
xor
xorb
push
or
les
div
jb
jmp
test
enter
imul
cwtl
mov
xor
push
mov
adc
lock
mov
mov
add
lock
sbb
mov
push
pushf
in
mov
mov
push
fisubl
inc
test
lods
neg
or
sbb
jns
movsb
inc
fcoml
and
push
cltd
push
xchg
loopne
cld
inc
scas
clc
jbe
fldcw
inc
xorb
dec
pop
add
sbb
mov
add
fistpl
mov
sbb
sub
xchg
scas
xor
inc
jb
mov
andl
or
mov
jnp
inc
mov
or
add
icebp
je
orb
pop
mov
mov
adcb
mov
xor
jo
mov
adcb
addb
stc
je
movsb
repnz
or
xchg
cmp
mov
inc
fnstenv
aam
int3
xor
jg
incb
clc
daa
leave
adc
aas
adc
adc
jg
ja
divl
xor
data16
sahf
insb
push
in
addb
imul
pop
sbb
mov
ja
bound
xchg
sub
lret
xchg
or
ficomps
mov
jae,pt
ret
sbbb
and
sbb
push
es
int
lea
sub
jne
bound
lock
orb
hlt
leave
adcl
inc
lret
fwait
imul
sub
xorb
xchg
add
rcl
ljmp
sub
lahf
inc
and
mov
es
incl
std
cmp
not
cli
add
sbbb
or
jno
mov
push
cmp
sbb
add
adc
fadds
testl
and
inc
jo
mov
sbbb
pusha
mov
xor
sub
and
dec
mov
movsl
xlat
es
push
jo
lcall
mov
pop
inc
cmpsl
fldl
dec
jp
inc
adcb
xor
adc
sub
clc
in
rclb
and
mov
cmpl
pop
test
es
into
add
jecxz
ss
jne
inc
fisttpll
push
mov
out
addl
and
sbb
ror
adc
cmpl
sbbl
jp
cmpsb
cld
or
mov
sbb
popf
jg
and
mov
ja
mov
std
sti
jno
adc
call
push
mov
shr
fistps
fwait
mov
mov
popf
mov
push
ret
cld
sub
sahf
into
sbb
or
fs
mov
insb
pop
divl
jle
xchg
in
mov
sbbb
adc
and
pop
popa
adc
jecxz
and
add
jb,pn
push
sub
lea
call
push
sahf
lods
pop
adc
sbbb
daa
mov
jno
mov
sbbb
dec
mov
xchg
repnz
add
sti
cld
rclb
xorb
fcomi
subb
mov
fldl
adc
add
push
shll
jg
mov
loop
and
icebp
push
sbb
pop
ss
subb
push
xchg
js
and
xchg
or
flds
and
data16
pop
out
sub
andb
jmp
popl
mov
adc
je
mov
popf
test
outsb
fsub
xchg
mov
xor
ss
adc
xor
cmpb
int3
cmpsb
jns
cmpsl
pop
aam
and
xorb
lea
roll
sti
mov
sbb
mov
daa
popa
rorb
sbb
jns
push
mov
xchg
mov
mov
ja
subb
clc
repnz
gs
xor
scas
and
push
out
sub
jo
pop
cmp
push
push
xchg
mov
xchg
jnp
insb
inc
rorb
jge
jbe
or
pop
mov
orb
mov
mov
sti
iret
in
adc
test
movsb
mov
mov
adc
xchg
bound
jg
addr16
out
mov
sbb
inc
mov
adcb
int3
arpl
lcall
in
outsl
mov
testl
push
jge
or
cld
dec
xorb
sbb
add
imul
cwtl
mov
xchg
fwait
sti
xorb
nop
add
incl
push
pushf
fstps
scas
dec
out
pop
repnz
ret
adc
cmp
inc
stos
push
pop
pop
cs
jg
adc
popl
loopne
ret
push
jge
mov
jbe
jb
sbbb
adc
jno
mov
loopne
and
mov
jle
aaa
cmc
enter
xchg
xchg
loop
sub
out
mov
xorb
cwtl
pop
add
adc
ds
and
xchg
addb
jle
ljmp
das
iret
cmp
adcl
sub
mov
incl
mov
dec
js
cld
ja
cmp
mov
jo
add
sarl
subb
inc
or
and
mov
cmp
sbbl
inc
cld
movsl
add
sti
adc
cmpb
pshufw
cmp
and
lcall
iret
push
int3
out
es
adcb
cwtl
out
rcll
jp
addb
add
xorb
xor
dec
cmpb
ret
test
jle
sti
inc
hlt
push
add
cmp
sbb
ret
gs
dec
mov
cli
mov
dec
adcb
add
inc
sub
fistpl
test
leave
dec
lcall
adcb
lcall
sub
test
xchg
mov
mulb
adc
pop
lret
lds
fiaddl
jg
cmpsl
jg
ljmp
test
rorb
xlat
bound
push
inc
lds
insl
cmp
cltd
inc
pusha
fildl
les
xor
adc
mov
mov
pop
les
jg
jo
or
xchg
sbb
gs
cmpb
test
sub
mov
data16
repz
xor
push
out
inc
negb
cmp
push
jge
inc
stos
adc
jne
hlt
subb
clc
and
in
sbbb
pushl
and
jg
pop
jnp
js
andb
adc
cmpsl
int
addb
push
std
xor
out
inc
sbbb
inc
and
or
or
orb
mov
sub
test
jg
shll
std
pop
icebp
or
leave
xchg
stc
ret
inc
ret
xchg
js
mov
clc
sub
out
les
jnp
adcb
adc
sub
ljmp
pusha
cmp
addb
in
loope
mov
mov
mov
push
push
stc
ljmp
jg
mov
fwait
outsl
lds
sbbb
sbb
orb
ja
test
in
xor
lret
orb
push
mov
ret
sub
lods
sbb
sub
mov
and
sub
push
jae
aad
jno
xchg
addr16
data16
int3
bound
adc
out
idivb
xchg
sbbb
incl
add
subb
or
mov
cltd
je
sub
insb
scas
and
sbb
repnz
sub
fcom
pop
lea
xlat
insl
mov
bound
clc
rcrb
push
dec
orb
repnz
sub
scas
nop
rcrb
pop
into
and
jnp
dec
in
or
subb
xchg
icebp
jecxz
xor
pop
mov
cmp
mov
test
sub
xor
daa
or
mov
ret
movsb
pop
sbb
add
rol
cld
mov
call
lods
ficompl
movsl
daa
hlt
inc
arpl
data16
mov
add
outsl
pop
dec
add
inc
xchg
sahf
aam
or
push
push
clc
outsb
mov
add
mov
or
test
mov
xchg
sbb
jnp
mov
js
mov
out
or
xor
xor
adc
mov
pop
inc
je
or
bound
orb
pop
jo
lcall
cltd
jae
jno
xor
lahf
fcomip
inc
xor
subb
mov
cmp
sub
cwtl
xchg
and
xor
addr16
sbb
stos
stc
add
xlat
lcall
imul
mov
jns
loopne
sub
push
movsb
adc
outsb
addr16
ret
inc
xor
loope
jne
push
inc
mov
mov
cmp
mov
inc
movsb
stc
mov
loop
fstl
xor
fsubrs
cmpb
fdivrl
cwtl
lods
ss
lds
fwait
mov
das
in
or
jp
sbb
cmpsb
lcall
or
jb
testl
lods
jge
jno
inc
fld
adc
xchg
test
xorb
cltd
mov
out
js
mov
scas
cmpb
or
addb
out
addr16
fists
cmp
insl
or
loopne
pop
xlat
aad
xor
add
xchg
push
mov
insb
bound
aad
ljmp
xorb
mov
arpl
sbb
add
fwait
push
jl
jg
stc
dec
fisttps
fcmovb
pop
xlat
lods
mov
cmp
pop
push
es
cmp
ljmp
jns
sarb
out
mov
jnp
sbb
pop
fadds
and
sbb
mov
outsl
stc
imul
out
shrb
sub
inc
rcll
sub
scas
pop
insb
repz
pop
sub
lds
iret
cltd
int3
or
or
sbbb
mov
insb
or
aaa
pop
adc
fldl
bswap
dec
add
in
bnd
and
cmp
xlat
jnp
mov
lret
loop
cmp
cmp
aaa
add
roll
xchg
push
js
dec
scas
xchg
add
and
xor
dec
mov
orb
push
xor
mov
mov
jecxz
inc
sbb
js
sbb
fistps
pop
mov
call
cmpsl
adcb
adc
std
dec
jle
adc
inc
xor
sbbl
inc
pop
pop
addb
mov
stos
fwait
notl
add
mov
or
imul
xchg
scas
test
dec
pushl
loopne
sub
add
inc
je
jl
pop
mov
pop
adc
call
fiadds
lret
mov
int3
andb
pop
add
stos
cmpsb
icebp
es
mov
pop
add
and
mov
add
int
cmpsb
mov
pop
into
fstl
ret
mov
cmp
push
sub
and
adcb
cmp
jae
enter
adc
iret
pop
lret
sub
mov
cltd
pop
dec
fiadds
test
mov
push
ret
orl
add
dec
lea
into
xchg
cmpb
push
inc
push
pop
adcb
mov
stc
int3
fbstp
add
call
xorb
jnp
hlt
mov
and
ret
in
scas
inc
xorb
push
repnz
pop
arpl
pushl
addb
jnp
push
push
mov
sarb
lock
cltd
xor
mov
aas
inc
sahf
popa
dec
outsl
xorb
jbe
add
addr16
xchg
hlt
orl
ljmp
outsb
push
sub
addb
cmp
mov
arpl
lods
ret
pop
mov
inc
arpl
out
imulb
add
repnz
std
addl
pop
sbb
dec
jg
gs
push
movsl
je
decb
out
xchg
mov
xchg
cmp
add
rcrb
insl
data16
cmp
push
add
mov
adc
adcb
xor
arpl
sub
and
adc
mov
fcom
adc
push
movsl
add
adc
cmc
dec
add
jbe
sbb
jns
cmp
inc
pop
jo
js
jae
scas
jle
xchg
inc
rcll
sub
cmp
adc
mov
fsubs
aaa
mov
data16
push
addb
xor
imul
push
pusha
xorb
xchg
xchg
pop
dec
mov
sub
insb
jge
pop
je
jnp
roll
sub
rorb
outsb
ljmp
inc
loopne
enter
cltd
jnp
out
jmpw
aas
pop
mov
int
lret
mov
jo
lods
pushf
je
leave
andb
mov
inc
xchg
xchg
add
movsl
xchg
dec
push
xor
pusha
or
jnp
sbb
mov
subb
sbb
inc
movsl
popa
mov
out
jmp
adc
scas
je
das
sbbb
lahf
test
jp
mov
push
lcall
daa
in
les
inc
xor
inc
mov
jge
push
into
push
iret
mov
subb
xorb
and
dec
gs
adc
shrl
ds
aad
xchg
es
mov
xchg
jnp
inc
or
cld
adc
inc
int3
mov
pop
orl
dec
sar
inc
fidivl
repnz
jg
xchg
or
arpl
xchg
adc
mov
sbbl
add
xor
je
std
add
pop
data16
adc
insb
jmp
push
jb
int
mov
push
sbb
loop
shlb
das
addb
jne
repz
push
mov
xchg
notl
out
nop
mov
jnp
pop
repz
jp
loop
rol
inc
inc
lock
mov
pop
pusha
int
outsl
cmpsl
jbe
jnp
pop
sub
adc
xor
and
add
mov
movsb
xorb
mov
outsl
orb
out
test
adcb
cmp
inc
sub
data16
aas
out
js
int
loop
popf
sbbb
mov
cwtl
andb
mov
or
neg
dec
adc
clc
mov
jne
xchg
fldl
and
cmp
jmp
push
sbbb
and
sbb
std
ror
mov
mov
adc
fisubrl
dec
in
push
mov
xor
andb
and
inc
mov
cmp
mov
jl
adc
ja
lea
mov
mov
xor
aad
mov
adcb
cmp
and
out
sbb
mov
jp
adc
dec
sbb
fcmovnu
cmp
sbb
je
xorb
in
mov
mov
sub
inc
jp
les
insb
stos
mov
xorb
loope
mov
mov
pop
addb
xchg
out
ficomps
xchg
pop
xorb
ret
cmp
dec
sahf
lahf
pop
imul
int
icebp
test
lea
mov
dec
icebp
add
ljmp
inc
scas
rorb
ss
je
imull
jb
movsl
and
cmp
jg
xorb
inc
ret
xor
test
mov
mov
outsb
inc
addb
rorl
sub
xchg
xchg
pop
test
jp
adcb
xor
cwtl
int
test
adc
movl
mov
andl
push
cmp
cmc
dec
lret
jae
es
jge
xor
push
loope
sbb
nop
aas
and
ret
inc
int
and
mov
andl
sub
push
lcall
aam
push
jg
sub
shlb
add
xor
jecxz
add
jbe
pop
popa
ljmp
ja
imul
sub
mov
aaa
lcall
aad
lahf
lods
insl
lea
adc
cltd
scas
es
aas
mov
aam
add
jns
je
icebp
fidivrl
pop
imul
scas
sub
add
push
stc
mov
dec
push
andb
imul
loopne
outsl
mov
loop
mov
jmp
pop
mov
adc
push
pop
or
mov
mov
xorb
stc
test
and
ret
divb
pop
sub
loope
movsb
shl
cmpsl
mov
sahf
add
mov
mov
addr16
mov
nop
fnstcw
jle
fdivl
inc
mov
cltd
push
loop
rorb
jp
repnz
lcall
and
call
in
shl
mov
sbb
adc
add
out
lcall
mov
jle
mov
ja
lock
and
sbb
mov
clc
jae
mov
jns
test
and
adc
mov
or
sarb
jmp
mov
push
out
popf
mov
and
mov
rorb
and
xchg
mov
xchg
ret
in
in
push
ret
fcompl
loopne
jp
lock
test
mov
movsb
cmp
sbb
arpl
lret
add
scas
movsb
lret
testb
stos
push
icebp
shr
mov
mov
and
mov
out
shll
dec
jbe
add
in
adc
shll
xor
cld
pop
aad
lock
cmp
jno
pop
fld
push
xor
jle
mov
lret
int3
cltd
out
js
xchg
lcall
add
jno
lea
addr16
ficoms
movsl
icebp
movsl
sub
mov
xchg
mov
repnz
mov
test
jecxz
sub
jae
test
pop
pusha
in
or
fcom
filds
xchg
jb
ljmp
leave
adc
gs
xchg
sti
fdivs
stc
mov
popf
fimull
cmp
jo
sub
adc
xorl
and
pop
sti
shl
mov
add
xchg
mov
mov
mov
xchg
repz
mov
jl
shrl
xchg
nop
sub
mov
sub
lods
adc
repnz
push
cmpsl
sbb
andl
mov
dec
repz
aad
cs
xchg
stc
cwtl
pop
js
push
addb
fstl
sbb
or
push
or
adcb
add
pop
or
and
jle
out
jns,pn
aam
pop
out
push
jnp
cwtl
ja
xorb
mov
ljmp
jle
scas
push
push
data16
jo
ret
lahf
push
jl
lahf
pop
cli
mov
idiv
cltd
shl
ds
mov
add
je
int3
pusha
xchg
loopne
cmp
mov
xchg
xor
jbe
xlat
in
push
lods
mov
xor
jnp
insl
mov
push
lcall
sub
mov
repz
push
mov
lcall
pop
in
movsb
sub
jae
inc
add
dec
inc
fsubr
jae
or
adc
xchg
jge
xor
xlat
dec
jae
lock
inc
push
jmp
out
mov
pop
stos
inc
add
lods
mov
ret
add
pop
popa
lcall
mov
add
pop
add
dec
and
rcll
ja
shrl
out
adc
les
pop
jle
insl
jp
cmp
mov
sbb
arpl
jle
xor
call
lcall
inc
jge
les
push
xchg
leave
leave
xchg
jo
xor
xchg
add
sbb
or
xchg
cltd
jns
jnp
aaa
sub
dec
repnz
vcvtdq2pd
je
sbb
xor
out
fimull
mov
sbb
sbb
sbb
cmp
shrb
ljmp
cmpsl
and
outsb
mov
dec
adc
sahf
dec
jo
orb
sahf
xchg
mov
je
cltd
incb
bound
cli
jle
xchg
mov
sub
mov
jl
xchg
sbb
mov
lret
sub
lret
popa
push
aad
pop
adc
int3
mov
ret
mov
ljmp
jge
pop
sbb
jle
std
popf
loop
ret
data16
in
pop
mov
imul
clc
js
push
lcall
es
push
cmpsb
stc
xor
cwtl
add
adc
std
lods
ret
add
lcall
lahf
dec
repnz
jl
cmp
add
sbb
mov
pop
stos
cmpsl
daa
push
mov
mov
xchg
inc
adc
add
sbb
outsl
jno
adc
mov
cltd
gs
shlb
or
fs
push
xor
jp
in
cltd
and
xor
xchg
lahf
cli
mov
je
insb
sbb
jbe
jb
xchg
adc
or
dec
and
jmp
pop
ja
adc
xlat
mov
push
pop
mul
aad
pop
in
xchg
jl
insb
jle
repnz
add
or
pop
jae
pop
insl
lock
lds
jns
in
jne
ljmp
xor
ja
or
pop
test
cmp
jns
jecxz
lods
inc
inc
xor
mov
cltd
xchg
mov
out
inc
or
dec
adc
sbb
repnz
gs
les
inc
or
cltd
rol
out
cmp
jp
je
and
jle
rcll
scas
mov
in
and
adc
int
stos
pop
sub
mov
mov
jne
mov
arpl
cltd
xor
jnp
mov
fldenv
jle
out
ss
adc
sbb
xchg
in
xor
inc
fistl
sub
push
and
imul
sbb
mov
and
mov
add
cltd
dec
lcall
and
popa
mov
addr16
sbb
test
lock
push
cli
dec
aaa
sub
mov
in
rclb
or
cmp
iret
lcall
dec
mov
sub
mov
sbb
orb
lcall
outsl
dec
sub
imul
push
mov
mov
xchg
test
xor
xchg
stos
call
lea
cltd
ret
shrb
outsb
lds
fmuls
in
nop
movsl
mov
inc
divl
imul
mov
lea
add
bnd
jg
jmp
lods
lock
int3
inc
cltd
cmp
fucomi
push
sub
inc
test
mov
sub
and
mov
std
outsl
jge
pushf
jbe
cltd
pop
cld
jg
sbb
mov
push
sbb
addr16
les
jle
mov
cmp
xor
fstl
sub
aam
daa
push
and
lret
iret
cld
adc
adc
cli
mov
outsb
and
dec
movsl
outsb
cmp
out
stos
mov
pop
mov
pop
rcrl
pop
jle
and
inc
sub
orb
mov
or
mov
aam
adc
jg
or
push
int
jb
aad
imul
shrl
push
stc
mull
sarb
sub
push
mov
adcb
repz
cmp
mul
push
jg
test
jl
cld
repnz
stos
or
aad
mov
cmpsl
fnstcw
addr16
mov
mov
inc
fiadds
cli
mov
pop
and
sahf
pop
sbb
push
cmp
iret
xor
cmp
xchg
testb
xor
pop
xchg
adcl
fildl
xchg
aas
aad
lcall
mov
repnz
jl
ss
fistpll
sub
mov
jns
cmp
inc
shrb
pop
pop
sti
das
test
out
pop
mov
mov
lret
enter
pop
call
mov
jo
adc
jle
lret
shll
jle
repnz
stc
xor
lock
out
jo
repz
push
int3
xor
bound
fwait
inc
add
sub
lret
push
sub
xor
rcrl
jo
xor
cmpsl
ret
xchg
cwtl
scas
das
xchg
mov
lcall
adc
inc
lcall
sbb
cld
ja
mov
shl
ret
mov
outsb
aad
and
and
insb
xor
jbe
mov
bound
push
lods
adc
lret
inc
aad
dec
je
pusha
mov
cwtl
adc
and
mov
jbe
pop
sub
or
pop
xchg
outsb
inc
mov
subl
pop
jb
push
cmp
enter
icebp
jmp
out
pop
cmp
push
inc
andb
sbb
cltd
push
inc
add
int
and
nop
testl
shll
mov
and
rcrl
or
bound
adc
fwait
sub
cmp
aaa
out
int
and
cli
stc
jge
inc
add
push
push
cmp
shrb
data16
ret
ljmp
out
js
jne
mov
pop
leave
inc
in
and
dec
aam
add
inc
into
lret
sbb
gs
insb
lcall
loope
lret
xchg
cmc
lret
or
xchg
mov
xchg
mov
aaa
push
fdivrs
sti
addb
mov
add
clc
mov
mov
test
xchg
xlat
inc
enter
jb
add
push
lcall
and
sub
les
es
jnp
das
mov
jbe
sub
cmp
and
sub
xor
ret
cmpsb
test
pushf
push
sbb
jp
mov
test
and
mov
mov
das
repz
cmp
xlat
lock
pop
push
sub
sub
clc
ljmp
push
cmpsb
and
mov
leave
push
inc
test
or
adc
dec
icebp
lret
fistpl
push
aas
mov
stos
push
test
int
lahf
imul
negb
addr16
mov
sub
popa
sbb
mov
int3
fwait
and
inc
xchg
call
ret
movsl
stos
add
icebp
mov
xchg
cmp
push
lock
negl
test
cmp
sbb
cmp
pop
pusha
outsb
add
jecxz
add
fwait
adc
dec
ja
push
xchg
cmc
or
stc
mov
fnsave
mov
ret
sub
mov
loope
cltd
aas
ss
repnz
movsb
repnz
fwait
int
xor
pop
rcrl
mov
lock
out
imul
cs
and
cmp
lcall
les
call
aas
mov
xchg
dec
mov
leave
push
mov
cli
sbb
sarb
gs
jmp
dec
cmpsb
fiaddl
idiv
jae
addr16
in
cs
fildl
imul
jge
fdivrl
test
push
push
xchg
adc
cltd
rorl
test
cs
inc
sub
mov
fmull
pop
data16
sub
ror
repnz
sub
xchg
mov
jg
clc
cld
fisubl
lret
sbb
cmp
daa
fstpl
movsb
ret
mov
jecxz
ret
mov
andl
pop
inc
sahf
movsl
jle
mov
aam
fisubrl
add
xchg
xor
outsl
pop
xchg
icebp
outsb
out
or
inc
mov
pop
mov
std
pop
mov
insb
dec
test
push
test
repnz
movsb
xor
loope
or
mov
mov
shl
rcr
es
pop
es
push
push
rcrb
inc
ret
jno
jge
arpl
popl
lcall
add
mov
jg
rcrb
ret
enter
test
mov
bound
jb
outsb
xor
std
dec
dec
mov
push
cmpsl
pop
movsl
call
lcall
push
jecxz
jb
dec
repnz
out
subl
xchg
dec
mov
rorb
xor
outsb
es
mov
push
ljmp
sub
mov
repnz
sbb
in
xor
cmp
repnz
sub
fmull
insb
fstps
mov
sub
scas
sub
lahf
outsl
lcall
mov
scas
pop
cmp
es
aaa
stos
cs
adc
adc
es
cmp
push
jns
and
cltd
mov
and
sbb
mov
aam
jo
or
xor
out
loope
inc
push
jne
std
aaa
cmp
cmp
inc
das
sub
sub
cmp
loop
fdivs
fsub
inc
dec
pusha
sub
jp
pop
arpl
sbb
xchg
imul
cmp
outsl
clc
loope
insl
orl
mov
push
jbe
and
ret
fdivr
jo
les
sti
sbb
enter
pop
jns
xor
and
outsb
adc
out
bnd
cmp
xor
inc
adc
out
xor
in
pop
ret
xchg
rorb
adc
xchg
mov
lcall
add
es
lcall
sub
xlat
sub
push
jp
clc
and
loopne
and
aad
aaa
jnp
cmp
inc
pop
rcrb
data16
adc
pop
repnz
jbe
lcall
and
pop
ret
data16
and
fwait
ret
imul
inc
pop
cmp
and
ret
sbb
iret
orb
lea
insl
fwait
and
jo
xchg
sbbb
mov
je
or
sub
xchg
jnp
jns
xchg
add
cmp
test
ret
xchg
mov
das
cmpsl
lret
xchg
cmp
sti
add
mov
and
lods
jns
push
adc
add
sbb
in
jg
leave
test
cmp
stos
jb
push
adc
int
push
out
xor
pop
iret
sbb
data16
sub
mov
xchg
sti
mov
mov
sahf
pop
mov
es
stos
sbbb
into
gs
aaa
sub
mov
cmpb
mov
xorb
pop
mov
push
pop
les
xorb
fcomps
push
stos
and
and
pop
es
fwait
xor
pusha
shrb
outsl
sbb
cmp
lfs
mov
mov
xor
jo
andb
repnz
data16
adc
push
fldl2e
test
sbb
lods
dec
ja
stc
outsb
pop
or
das
ret
xorb
jmp
call
push
xorl
push
mov
sti
cltd
sbb
mov
and
mov
sbbb
clc
xlat
fsts
cltd
mov
outsl
cmp
scas
mov
dec
daa
arpl
aad
les
xor
sub
into
leave
cmp
sbb
inc
jbe
movl
sub
orb
pop
adcb
dec
shrl
pushf
addb
std
jo
in
jp
mov
push
cltd
xorb
mov
inc
xorb
mov
hlt
sbbb
jno
mov
or
jnp
pop
mov
stos
stc
std
dec
jle
subb
lea
jno
mov
shrl
sbbb
push
mov
cmpb
push
add
cli
out
sbb
stos
aaa
lea
add
push
jge
push
mov
fisubrs
cmc
xchg
flds
sbb
test
or
pop
push
mov
dec
cmpb
lea
in
cwtl
shrl
aaa
loope
inc
and
mov
lods
pop
cltd
xor
sahf
shl
jle
xor
test
push
xchg
addl
mov
cmpb
scas
inc
cld
mov
or
test
mov
out
sub
cmp
shrl
xor
push
push
push
arpl
mov
add
gs
xor
push
out
push
enter
xchg
xorb
pop
addb
or
add
add
xchg
push
cmpsb
push
fisubs
pop
ret
sbb
jp
jnp
push
xchg
fstpt
data16
mov
adcb
mov
cmpb
pop
clc
xorb
pop
sub
aam
pop
xor
adc
jge
fnstsw
push
sub
leave
push
movsb
ja
in
mov
xor
pushf
xor
or
dec
addb
test
sub
or
xor
add
jg
lret
daa
dec
push
fisttpl
pop
arpl
inc
fists
jnp
nop
popf
inc
ljmp
inc
or
loope
fs
xlat
cmp
xor
roll
cwtl
adc
sbb
push
fnstenv
xchg
roll
stos
sbb
shrl
loopne
and
icebp
lods
and
shrb
jae
lret
xchg
pusha
sub
ret
push
andb
xchg
clc
call
push
push
add
leave
dec
rolb
lds
fdiv
inc
cmpb
xor
iret
add
fs
dec
jecxz
mov
sahf
into
adcb
mov
sbbb
leave
push
inc
cmpsb
mov
jg
aad
pushf
aas
rolb
pop
xorl
xor
lret
test
dec
inc
sbbb
orb
jle
pop
movsl
stos
jnp
shl
mov
mov
loop
add
adc
out
aam
add
cmp
fisttpll
adc
scas
aad
jg
xor
cmpl
repnz
fsubrp
lret
repnz
push
inc
insb
je
xchg
outsl
xchg
lds
push
mov
or
je
movl
hlt
push
push
adc
in
xchg
jae,pt
jne
daa
inc
sbbb
inc
lret
mov
jmp
xor
stos
fldcw
js
inc
xor
jae
xor
les
cmp
jmp
xor
dec
lds
add
cmp
add
gs
jmp
mov
pop
filds
or
mov
inc
sub
push
subb
sub
pop
subb
inc
xlat
or
cld
cmpsl
mov
and
mov
and
insb
loopne
loop
test
jnp
mov
cmp
js
sahf
xchg
push
mov
push
cwtl
mov
cmp
call
repz
mov
xchg
sarl
cmp
sbb
outsb
mov
mov
add
cld
es
mov
add
sub
adc
cmpsl
push
lods
inc
xor
in
subb
and
inc
mov
add
sahf
popa
pushf
jp
add
fs
pop
ret
lock
mov
int3
leave
add
mov
fwait
in
enter
adc
jnp
mov
add
mov
or
enter
pop
testl
sbbb
jae
addb
stos
add
xor
test
fnstenv
xorb
outsl
leave
pop
cs
xchg
sbbb
sub
mov
mov
inc
and
and
lret
xor
iret
sub
mov
mov
or
mov
adc
je
xorb
loop
jmp
add
xchg
inc
xchg
insl
ja
lock
xchg
mov
adc
fildll
xor
jnp
jp
ja
movsb
dec
cmpsb
stc
adc
ja
mov
ret
orb
popf
mov
test
dec
add
add
mov
aaa
jnp
lods
push
roll
jo
in
dec
sub
or
adc
sub
arpl
out
stc
jae
or
or
lahf
and
or
adcb
pop
fwait
sbb
es
xchg
hlt
inc
je
rclb
xchg
scas
push
fstps
loopne
add
xor
leave
lods
in
pop
cmc
addb
and
mov
xorb
sbb
cmpsl
jnp
sbb
sti
repz
inc
stos
aad
cs
mov
xorb
lcall
sbbb
or
pop
roll
pushf
fs
lods
and
mov
outsl
jne
divl
jge
das
jae
es
xchg
jns
jmpw
arpl
sbbb
andb
sahf
nop
jmp
push
aas
pop
inc
adc
jbe
jae
dec
out
loopne
dec
mov
aas
or
fcmovnu
xchg
addr16
jge
lods
addb
adcb
pop
ret
nop
out
xor
xchg
sub
jo
mov
cmc
ret
jae
push
jns
cmp
insb
ss
jle
push
fiadds
test
jp
cld
mov
sbb
sahf
aam
xor
subl
outsl
pop
cltd
cmp
test
mov
pop
imul
fcmovbe
add
mov
or
stc
outsl
dec
scas
jne
sub
cmc
lds
cmp
push
lcall
fneni(8087
lds
xor
push
lcall
dec
test
xchg
push
or
imul
fisubrl
sbb
imul
push
jle
mov
mov
sub
push
ret
and
mov
ds
pop
mov
mov
lods
adc
sub
cmc
ficompl
jae
lods
sbb
aaa
add
lods
sbb
and
test
and
lcall
pop
ss
lret
aad
sar
into
jge
insb
les
adc
cltd
imul
repz
in
in
mov
and
fsubr
or
and
xchg
pop
inc
cmp
and
pop
sahf
push
dec
cmp
cs
aaa
xchg
shrb
jo
cmp
sbb
mov
pusha
lret
sbb
loopne
inc
sbb
inc
jg
leave
repnz
sbb
test
xor
inc
push
mov
popf
rolb
add
not
dec
fildll
sub
add
push
clc
jo
mov
add
in
pop
iret
int
ljmp
std
xchg
xchg
jl
pusha
adc
mov
inc
shl
xchg
test
fs
cld
lcall
push
cwtl
cmpsb
bswap
and
cltd
cmp
add
jle
pop
outsb
in
bound
xor
xor
ret
repnz
cmpsl
daa
jo
test
bound
and
mov
add
shlb
inc
popa
mov
sbb
cli
cmp
jp
out
mov
repnz
cmpsl
test
sti
jmp
outsb
add
aam
add
fstpl
jmp
shll
mov
stos
ja
xor
push
pop
insb
mov
int3
insb
jb
int
jae
testl
sbb
mov
fs
jns
mov
sahf
dec
lock
cmp
mov
mov
testb
repnz
ss
mov
dec
dec
push
jb
dec
xor
xor
mov
or
shr
subb
addr16
jmp
lcall
lcall
cwtl
loopne
xchg
outsb
jnp
jmp
ss
lea
push
lcall
imul
das
xchg
dec
jno
pop
push
inc
repnz
xchg
jp
dec
jle
push
jae
rcll
xor
mov
push
cwtl
ja
jge
push
lcall
andb
clc
iret
adc
imul
and
das
cltd
jns
test
xchg
dec
ret
sahf
dec
push
and
rol
aaa
ds
stos
outsb
mov
add
xorb
push
sbb
insl
subl
sub
orl
cli
mov
pop
je
sahf
cmp
jl
insb
pop
popa
xchg
dec
jge
das
lds
xchg
mov
ljmp
inc
je
or
mov
rorb
aas
pop
dec
sub
bound
pop
xor
sub
push
pop
out
lods
sbb
or
sti
lods
inc
test
pop
xchg
inc
rclb
and
addl
mov
stos
loope
mov
fs
cmp
sti
dec
cmp
aad
aad
ret
out
arpl
pop
pop
icebp
rclb
cmpl
in
imul
jecxz
mov
push
and
not
fwait
lock
sub
fidivrs
mov
addb
jl
push
bound
mov
sbb
or
lret
test
hlt
daa
sub
xor
vmovaps
jmp
dec
sbb
and
pop
or
sub
pop
sub
xor
push
pushf
jl
cltd
jo
push
jl
sbb
push
dec
sbb
jbe
xchg
rol
and
sub
insb
jo
inc
inc
repnz
mov
cmp
xor
jae
aaa
adc
and
ret
data16
ja
xor
bound
mov
xor
jbe
rorl
jge
sti
lds
cmpsb
movsl
xor
inc
xchg
imul
test
push
cmp
jae
push
je
fsubrs
xor
pusha
stc
pop
ja
sbb
adc
or
sub
push
pop
fcompl
repnz
mov
sbb
or
and
daa
ds
push
push
or
push
xchg
pop
test
xor
insl
cmc
les
dec
jg
push
sbb
fldenv
lret
outsb
lcall
push
sub
push
dec
xchg
inc
loopne
push
nop
ret
push
ss
and
jnp
imul
dec
ret
aas
jae
xor
or
orb
push
lea
sbb
lahf
inc
cmp
dec
xchg
mov
or
sub
lds
or
cmpsb
stos
iret
push
jnp
xchg
sub
fbld
jmp
mov
out
jo
imul
dec
clc
outsl
andb
scas
sub
and
out
addb
push
pop
xor
sub
js
testl
ret
adc
sub
push
pusha
mov
jle
inc
cli
inc
mov
iret
add
outsl
ljmp
cmpsb
fiaddl
pop
fwait
sub
je
push
aaa
sarl
jbe
test
movsl
out
mov
cmp
inc
jmp
xchg
or
ss
push
andb
jmp
addb
mov
jge
mov
dec
les
jno
add
bnd
pop
outsb
adc
insb
xorb
cmpsl
mov
pop
cmpb
ljmp
push
xchg
popf
repnz
mov
adc
add
inc
aaa
addb
gs
outsb
push
popl
cmp
cmp
test
push
fstps
xor
cli
idivb
sub
xchg
out
stos
and
stos
notl
roll
pop
lea
xor
and
lahf
ds
mov
icebp
mov
addb
push
add
mov
or
xchg
jnp
imul
mov
in
pop
bnd
jle
les
out
cmp
mov
dec
fwait
inc
ret
xor
mov
mov
sub
dec
out
mov
cli
roll
or
stos
push
and
dec
rolb
in
loopne
fcoms
and
loope
add
or
cmpb
cs
or
or
sbb
xor
jne
mov
mov
call
sub
lods
loopne
subb
imul
and
enter
inc
mov
dec
xor
sti
sub
cmp
test
or
aam
or
mov
fs
bound
sbb
add
jecxz
outsb
push
xor
loopne
mov
sbb
aas
iret
adc
ljmp
mov
pop
movsb
mov
sbb
dec
roll
or
xor
jnp
shll
mov
xlat
std
xor
xorb
xor
stos
inc
leave
rorl
pusha
adc
mov
jmp
pushl
dec
sbbb
mov
aas
dec
xor
roll
xor
mov
je
lods
push
addb
xor
lock
jbe
inc
pop
out
pop
andb
lods
or
add
push
jp
inc
mov
movsb
xor
lods
jecxz
sbb
xor
std
popa
out
mov
sbbb
or
mov
add
imul
outsl
ss
cmc
fdivl
or
cld
scas
sub
pop
add
ss
push
bound
stos
xchg
jmp
or
push
mov
sahf
ja
push
dec
ret
mov
add
js
aas
push
ljmp
mov
cmp
jnp
add
loop
insb
stc
iret
push
enter
jnp
mov
inc
inc
xchg
jbe
test
clc
push
addr16
data16
sti
cli
jmp
cmp
cmp
push
sahf
in
add
xor
cmpb
inc
cmpb
xor
es
xchg
dec
rolb
push
ret
jp
out
adcb
into
cmpb
shll
outsb
cmp
push
sbb
sti
xchg
inc
fstpl
in
lods
and
nop
mov
jg
mov
cld
pop
mov
cmp
stc
andb
dec
stos
aas
push
rolb
pushw
xchg
into
cmpb
sbb
leave
mov
inc
test
add
nop
ja
xorb
push
lret
lock
scas
jge
cltd
repnz
add
xchg
sub
adc
jbe
orb
mov
sbb
mov
leave
and
inc
jg
rcrb
lahf
push
fdivs
sub
loope
shl
mov
mov
pop
sbb
xchg
inc
aad
sbbb
movl
and
mov
jl
test
push
fs
add
inc
inc
pusha
nop
bnd
divl
xchg
adc
push
inc
add
push
aad
testb
inc
or
subb
std
mov
adc
or
fdecstp
mov
adc
shrb
pop
aad
jmp
lods
into
xlat
je
lods
je
pop
out
add
and
cmp
cltd
jne
dec
sbb
ljmp
filds
test
lret
xor
xchg
push
stos
jb
jp
aam
add
cmp
aaa
mov
add
arpl
push
stc
cltd
lds
mov
cmp
jne
jg
push
push
orb
cmp
call
dec
jecxz
adc
jmp
or
stos
mov
sbb
call
lds
imull
push
outsl
insb
fcoms
movsl
cmp
ljmp
fisubl
aaa
jb
add
xorb
mov
test
inc
subl
jle
pop
das
mov
add
or
jb
addr16
arpl
mov
jge
std
ja
and
repz
in
mov
jo
adc
xchg
jg
dec
lds
fistpll
scas
iret
popf
arpl
xorb
ror
popa
sub
adc
loop
push
call
pop
mov
cli
js
dec
pop
jnp
bound
in
adc
or
xor
inc
push
or
inc
sbbl
mov
mov
xor
or
mov
addb
jnp
mov
movq
shll
insl
pop
jmp
xor
pop
push
roll
out
cmp
fidivs
push
mov
adc
popa
jl
dec
rcrl
xor
mov
ljmp
rcll
xor
sbb
in
orb
sbb
ss
pop
dec
aad
mov
xor
push
movsl
scas
sub
adc
adc
ficompl
push
loopne
subb
and
lods
testl
loop
cmpsb
in
cmpb
mov
add
stos
push
xor
lods
sbbb
xor
ljmp
inc
imul
mov
sub
cmpsl
jmp
loopne
lods
je
pop
mov
push
mov
push
cmpsb
xchg
inc
sbbb
sbb
push
js
mov
and
push
fdivl
and
mul
inc
out
sti
outsl
je
cltd
push
mov
stos
mov
imull
inc
xlat
sbb
or
adc
pusha
sub
sbb
hlt
subb
sbb
add
in
test
dec
adc
arpl
cli
mov
cmpsl
orb
ja
je
hlt
sbbb
mov
add
mov
sub
mov
icebp
adc
sub
xor
pop
mov
andb
jle
lock
fldcw
add
sbb
mov
jno
hlt
jae
mov
inc
insl
rcr
cmpb
inc
bound
adc
xor
cmpsb
pop
stos
xor
push
jae
sbb
scas
sub
mov
mov
flds
adc
insl
inc
subb
mov
mov
xchg
push
or
push
mov
push
orb
jecxz
jnp
xchg
inc
jg
stc
inc
int3
or
subb
in
xorb
jg
popa
xlat
jge
jle
and
ret
repnz
mov
sbb
pop
roll
sbb
scas
push
cwtl
push
mov
mov
je
ret
pop
dec
pushf
jb
or
dec
jl
push
lods
sbb
mov
daa
lcall
rcl
cmpsl
orb
push
jle
rolb
aam
xor
pop
add
and
inc
subl
test
jbe
push
add
xchg
aas
popf
clc
sti
mov
es
rcll
cmp
out
pop
mov
cmpb
outsb
lock
push
push
mov
cmp
scas
jns
loope
sti
mov
inc
imul
dec
aam
jbe
mov
pop
mov
imul
hlt
xor
into
addb
xor
adc
test
mov
in
pop
mov
push
scas
fdivl
test
cltd
mov
sbb
data16
mov
aas
adc
orl
imul
scas
mov
adc
pop
xor
pushf
lock
lret
inc
idivl
xor
mov
or
icebp
scas
subb
movsl
push
cmp
xchg
mov
mov
outsl
cltd
mov
pop
ret
test
imul
jle
mov
add
dec
mov
inc
sub
add
cltd
test
and
push
pop
add
inc
hlt
in
lcall
add
sahf
mov
jle
push
push
shlb
bound
or
js
lcall
aad
insb
xchg
push
out
repz
in
inc
les
and
lahf
push
push
dec
inc
jmp
push
pushf
push
loop
ds
loop
in
jecxz
ljmp
xchg
enter
stos
out
ror
mov
fldenv
push
inc
jge
ljmp
sub
shlb
add
push
arpl
das
arpl
mov
xchg
xor
shlb
ret
insb
cmp
int3
sbb
jns
cmpsb
shrl
lcall
vmread
jge
cltd
mov
stc
sbb
cmp
or
lock
cld
rol
ret
cs
rcrl
fs
vmovss
adc
mov
lds
jp
ds
xlat
jbe
ljmp
ja
mov
adc
add
xchg
fs
imul
imulb
je
or
xor
xor
sub
rorl
mov
push
incl
div
stc
sub
xor
scas
lock
lcall
push
and
insb
sub
adc
adc
fwait
jg
fsts
lcall
pop
imul
jle
mov
push
in
in
int3
daa
insb
std
andb
add
jo
sbb
add
mov
stc
je
xor
mov
mov
jle
ud2
sahf
cs
jno
pop
jae
lcall
ss
mov
aad
mov
xor
mov
es
jl
lcall
pop
fs
lods
fildl
mov
aaa
sub
jg
psrad
in
call
jl
test
and
call
add
mov
jns
xchg
mov
movsl
subl
jb
ljmp
loop
js
pop
in
dec
seta
lds
lea
negl
enter
add
sub
into
jbe
lcall
call
outsl
ret
push
dec
cwtl
mov
aad
xchg
mov
aad
fistps
div
mov
movsb
sti
jns
daa
xor
xor
stc
sbbl
je
pop
sbb
pop
inc
out
divb
fdivs
in
mov
push
jne
lods
push
cwtl
insb
jo
andl
lretw
pop
sbb
sar
test
mov
repnz
push
mov
cmp
stc
xor
in
sub
inc
ljmp
scas
and
add
test
bnd
and
lock
int3
push
imul
incl
sbb
add
sbb
insb
cs
sub
xor
mov
jbe
ret
outsb
mov
mov
icebp
and
adc
pop
mov
shr
dec
out
inc
and
mov
stos
add
cmpsb
add
inc
out
or
jb
cwtl
push
sub
and
loope
and
cmp
and
mov
or
lock
movl
jecxz
stos
sbb
loop
dec
mov
pop
jle
add
jg
or
jle
xchg
sbb
ds
ja
cmp
pop
divb
xchg
addl
push
ds
das
mov
cmp
cli
jae
ret
cmp
lock
jbe
mov
push
lcall
scas
popl
jge
enter
inc
inc
sbb
push
xchg
fidivrs
outsl
adcb
sarb
jmp
or
mov
mov
dec
in
mov
or
je
jg
cld
push
testb
enter
xchg
cmp
roll
mov
push
inc
add
fwait
testb
data16
es
jg
or
test
insl
adc
push
andb
jp
scas
ss
je
xchg
aas
push
jae
std
mov
movsl
xchg
sbbb
in
cmp
push
aam
imul
mov
or
mov
adc
mov
scas
adc
mov
sbb
arpl
ss
mov
mov
mov
push
xor
jmp
ljmp
mov
jle
xlat
movsl
in
jp
push
mov
mov
mov
aam
stc
xor
aas
mov
addl
subb
cmpsb
into
push
sar
andb
aas
mov
xor
ja
xchg
aaa
or
sub
sbb
gs
jne
cmp
je
aam
repz
pop
cmp
push
jge
cmp
iret
xchg
cmp
adc
xchg
stc
popf
jb
jns
ja
jge
mov
jmp
mov
cltd
cmpsl
stos
aam
and
orb
lock
inc
rcrb
adcb
mov
sub
cmp
or
adcb
bound
sub
es
and
cld
inc
lahf
repnz
das
aas
imul
adc
xor
jnp
insb
out
pop
xor
enter
sbb
subb
pushf
pop
subb
xor
popf
nop
std
cmp
jmp
and
subb
dec
add
adcl
shrl
andb
sub
adc
mov
sub
push
jnp
cmpsl
hlt
orb
jp
rclb
jnp
dec
push
mov
inc
and
dec
pop
fistps
add
incl
popa
decb
ss
addb
sub
orl
fs
xor
orb
xor
fsubs
xor
aas
jge
imul
mov
add
jo
call
xlat
adc
loop
cli
inc
or
mov
push
insl
pop
addb
jmp
add
dec
and
jl
fcos
leave
fiaddl
jg
sbb
xorl
jge
sbb
cmpb
pushf
xlat
scas
cld
aaa
pop
jg
jbe
pop
add
mov
cmp
fadd
addb
pop
xchg
pushl
pop
dec
lcall
push
mov
out
ret
inc
adcl
push
xor
or
add
outsl
notb
mov
scas
fwait
stc
mov
cld
aaa
jge
loopne
mov
push
cmpsb
fs
adc
add
inc
mov
xchg
repnz
jnp
mov
incl
nop
cld
mov
bound
add
and
xchg
filds
icebp
sub
outsl
push
test
subb
mov
cwtl
pop
outsb
xchg
xor
push
sbb
or
xor
mov
and
push
sub
cld
cmp
inc
dec
sti
nop
repnz
or
cmp
jne
call
dec
outsb
rclb
pusha
jge
aaa
js
cwtl
subb
stos
cli
jp
les
flds
pushf
inc
leave
rol
sub
push
jg
ss
cmpb
cltd
fnsave
or
or
test
pop
dec
pop
fsubrl
mov
jbe
jl
sbb
mov
fcmovb
outsb
cmp
jmp
ds
cli
out
sbb
test
orl
cmp
mov
xchg
iret
andb
rclb
icebp
push
test
and
jae
gs
movsb
fnstcw
scas
in
add
xorb
cs
dec
sub
ret
adcl
xchg
andb
jo
push
addb
pop
lea
hlt
lods
clc
sub
incl
push
arpl
xchg
push
inc
lods
jp
mov
xor
das
cs
rcrl
loop
js
stos
mov
orl
jae
cmp
mov
cmpb
xchg
hlt
or
ljmp
push
out
cmp
push
orb
jp
loopne
gs
jl
mov
mov
stos
cmp
jg
sub
int3
jbe
roll
inc
push
jg
push
test
pop
sbb
xor
dec
mov
out
out
je
xchg
add
aad
xchg
adc
shrb
xlat
xchg
jg
sbb
imul
lret
push
addb
cmp
test
add
sarb
add
stos
jns
addr16
fcmovu
lcall
mov
jae
xchg
pop
fidivs
cli
or
mov
mov
subb
mov
jl
cmp
int
sti
scas
orb
lock
dec
and
dec
adc
or
pop
xor
imul
jle
outsb
insl
and
sub
adc
stc
gs
cmp
loop
add
ret
lret
insb
aaa
sbbb
loopne
fisttpl
adc
mov
adc
arpl
push
pop
sub
mov
push
inc
jmp
andb
divl
inc
in
int3
cmpb
push
subb
jb
loop
loopne
inc
mov
pop
lods
pop
mov
xchg
pusha
out
aad
inc
subb
mov
inc
adcb
jge
mov
fsub
cmp
xlat
dec
in
int
shll
jnp
lcall
leave
andb
ss
and
jnp
mov
scas
movsl
mov
ret
or
repz
cmp
mov
idivb
or
inc
pushf
into
leave
sbb
cld
lahf
jg
cmp
sub
jl
imul
aas
jo
jnp
in
fisubrs
loop
stos
ds
jbe
dec
das
test
or
lahf
jb
jmp
xor
pushf
lods
addl
in
pop
inc
sahf
aas
push
pop
mov
loopne
shlb
xor
ss
mov
je
cltd
rolb
xchg
cmp
out
fimuls
data16
xor
into
pop
adcb
mov
jg
dec
fistpl
sbb
test
stc
pop
addb
arpl
sbb
orb
jmp
sub
xchg
mov
pop
cmp
mov
mov
mov
mov
xlat
subb
pop
fiadds
sti
roll
dec
jns
mov
les
int3
jno
push
rcrl
cmp
mov
leave
pushf
imull
cmp
inc
cmp
cmpsb
push
mov
int3
pop
shl
test
lret
mov
or
xor
xchg
dec
arpl
stos
fsubs
push
and
test
subb
cmpsl
outsb
pop
jl
nop
test
sub
out
pop
das
mov
sbbb
int3
lahf
fstps
jbe
cmp
cmp
mov
sub
fwait
add
add
pop
movsb
and
inc
add
lods
fiadds
outsl
push
jge
sahf
jno
dec
pop
aas
sub
stos
sbb
jle
std
in
cmc
ret
xlat
mov
stc
dec
dec
mov
outsb
pop
adc
sub
push
jp
push
pop
add
push
mov
xchg
stos
jbe
fstpt
sub
xor
push
cltd
inc
and
push
sbbb
icebp
fisubrl
stos
arpl
andb
sahf
dec
pop
and
cmc
ret
dec
xchg
or
sub
outsl
insb
data16
subb
sbbb
dec
js
push
jle
mov
int
test
out
inc
cmp
and
jg
mov
leave
je
icebp
xchg
rorl
jbe
lea
mov
stc
nop
mov
arpl
inc
inc
repz
sar
and
xor
imul
sarb
mov
imul
push
mov
and
mov
xchg
pop
mov
sbb
test
lock
movsb
into
dec
mov
dec
mov
add
out
mov
and
pop
andb
xchg
or
fnstenv
pusha
jns
scas
dec
adcb
or
or
pop
mov
add
ljmp
jge
loopne
aam
iret
xor
xchg
test
pop
shlb
pop
sbbb
subb
jmp
ret
adc
or
jle
add
dec
sti
pusha
out
data16
lods
inc
dec
adcb
cli
lock
mov
icebp
and
cwtl
inc
mov
add
rol
xchg
mov
imulb
imul
xor
mov
xchg
mov
ret
lret
xchg
sub
jnp
out
fldl
lret
dec
push
mov
nop
push
lds
mov
add
pop
mov
inc
xorb
cwtl
data16
fs
xor
movsl
int
ret
inc
mov
jnp
mov
xor
pop
adc
dec
cmpb
ficompl
lods
adc
push
mov
aaa
jae
iret
mov
sahf
fdivrl
imul
addr16
cmpb
loopne
cmpb
dec
out
or
inc
jnp
add
mov
loopne
shr
subl
lods
xchg
mov
jnp
sub
sbb
ret
ja
jg
xchg
mov
push
pop
mov
adc
rolb
mov
mov
cli
xchg
xchg
subb
call
loop
inc
add
sbb
les
stos
jecxz
and
lret
xlat
xchg
ja
or
or
dec
add
popa
jg
mov
cli
pop
lds
fisubrl
sub
sarl
popf
inc
push
andb
cmp
adc
test
stos
iret
data16
imul
je
fildl
aad
mov
sub
and
lds
dec
adc
mov
out
movsl
jmp
mov
sub
or
mov
movsb
andb
push
out
ljmp
mov
scas
pop
dec
jecxz
push
or
pop
xor
cli
ret
xchg
xor
movb
shll
std
pop
mov
in
cmp
mov
test
inc
inc
pop
orb
out
mov
daa
imul
cmp
pusha
sbb
xor
mov
sbb
ja
mov
dec
cmpb
xchg
xchg
push
xor
rol
sbb
subb
insl
add
mov
jno
or
fstpt
jg
pop
jge
addb
inc
std
dec
sti
jmp
or
nop
push
subb
fnsave
popa
jl
sbb
mov
xor
xchg
mov
inc
sbb
cmpsl
mov
ss
pushf
jnp
cmp
adc
inc
dec
inc
arpl
subb
fildll
mov
xorb
cltd
dec
inc
ss
movsb
mov
addb
jae
xchg
or
lods
popf
jle
push
inc
cmp
add
sub
sub
ficoml
mov
xchg
xchg
mov
or
or
mov
adc
inc
je
addb
scas
imul
or
jg
pop
and
or
xchg
aad
add
push
jmp
cmpb
pop
lock
insl
xorb
sub
and
aad
fnsave
mov
pop
dec
inc
push
push
aaa
and
mov
bound
and
fst
mov
addl
xlat
repz
jno
test
and
mov
sub
add
in
dec
std
jnp
imul
repnz
inc
adcb
mov
iret
cld
imul
in
and
and
sahf
push
das
or
xorb
mov
addb
fsubrp
mov
orb
mov
ss
mov
sub
and
aaa
lods
mov
push
clc
enter
andb
push
outsb
mov
xchg
pop
inc
mov
cmp
jnp
es
int
and
fstpl
jne
idiv
mov
jl
data16
enter
lods
orb
mov
loope
mov
pop
fbld
sbbb
jns
andb
xchg
sub
ss
mov
xor
cmc
ret
jo
je
xchg
or
scas
pushf
test
ret
test
sbbb
jle
popf
cli
xchg
cmpb
cmp
pop
std
js
lret
lea
int3
sub
lds
lea
pop
jns
das
inc
cli
lret
int3
xorb
sbb
jae
add
pop
nop
pop
adc
mov
cmc
pusha
orb
inc
xchg
mov
cmp
dec
iret
test
push
sbbb
pusha
sub
sbb
mov
add
cmp
jae
xor
test
stos
das
pop
sahf
mov
mov
xchg
mov
cmp
dec
add
inc
rolb
add
enterw
xchg
cmp
or
sti
loopne
and
mov
fiaddl
aaa
cmpb
mulb
fwait
or
imul
int
loope
iret
aas
ja
bound
mov
jecxz
in
mov
ss
es
jg
mov
cli
cmp
push
cmpb
adc
shlb
mov
inc
in
into
daa
fs
push
push
jp
insb
or
es
pop
xchg
or
jae
cmp
shr
mov
push
xor
mov
cmc
ljmp
jge
lcall
push
subb
fiaddl
sbb
push
mov
pop
cmp
lods
stos
lcall
push
in
out
je
fcomps
enter
xchg
subb
sub
js
lods
jecxz
jg
and
dec
ret
jp
fld1
cmpsb
out
jb
pop
dec
shlb
int
sbb
push
mov
orb
pop
xor
gs
mov
in
mull
fnstenv
int3
fdivl
jbe
js
xchg
xor
pop
mov
jecxz
pop
test
mov
outsb
in
adc
fiadds
jae
leave
inc
cld
add
dec
push
cmpb
out
arpl
jmp
inc
pushf
inc
or
ss
repz
rolb
cltd
adc
push
sub
push
mov
int
pusha
xchg
bnd
lea
rclb
rolb
ja
xor
cmp
shll
clc
or
jo
je
jl
jbe
push
iret
xor
xor
movsb
jnp
dec
xchg
call
das
mov
adc
jo
dec
adc
add
dec
clc
in
jl
into
jbe
movsl
inc
pop
push
mov
mov
jbe
lcall
xchg
jnp
cmc
cmp
shl
insb
iret
cmpsb
jl
cli
cmp
push
cmc
lock
out
dec
leave
rcrl
aad
movsl
fdivl
jns
repnz
cs
std
lcall
or
cs
mov
jb
add
or
push
stc
cmc
ret
mov
and
push
sbb
leave
insb
pop
call
stc
stos
adc
push
das
push
xchg
push
add
or
int
and
bound
cmc
iret
addl
shl
mov
insb
mov
mov
xchg
lods
and
cwtl
je
lcall
jecxz
mov
fsubl
cltd
add
adc
ret
xor
fwait
rcrb
mov
lcall
or
and
push
std
mov
and
cmp
mov
or
cmp
bound
xor
aam
js
add
cli
jle
mov
and
or
sub
mov
xchg
jne
xor
fisttpll
insb
cmp
cs
pop
je
inc
in
add
mov
xchg
lods
push
and
imul
daa
outsb
xor
xchg
adc
outsl
in
imul
lcall
pop
mov
test
in
test
adc
scas
xor
pop
cmp
jecxz
in
jns
cltd
push
mov
loop
mov
aas
or
sbb
cmc
int
cmp
idiv
div
xor
les
xor
pop
xchg
sbb
jo
mov
sub
xchg
sbb
insb
sub
xor
mov
inc
testb
arpl
xor
xchg
mov
sbb
nop
and
or
and
xchg
adc
notl
lea
sbb
add
int3
push
push
jae
push
loope
and
test
pop
cli
adc
sbbb
mov
mov
stc
cmp
icebp
or
jnp
cltd
lcall
push
lret
int
aam
mov
xchg
push
and
imul
aas
mov
mov
inc
nop
out
ret
inc
iret
jmp
adc
adc
xchg
jo
pusha
rclb
lock
cmp
ss
imul
sub
pop
pop
imul
insl
mov
rorl
ja
cmp
cmp
std
push
adc
int
lcall
and
aad
sub
sub
push
adc
cmc
shlb
xchg
xchg
push
leave
aaa
loopne
xchg
loope
xor
mov
sbb
inc
std
cmp
jp
add
divb
mov
mov
pop
ret
dec
aas
daa
rorb
loop
jb
inc
sbb
push
cmp
mov
adc
jle
pop
or
idivb
leave
jle
shll
add
lret
adc
aam
inc
pop
out
or
push
adc
cmpsb
adc
jp
popa
pop
ret
test
jnp
xor
loope
xor
lds
push
jb
addb
or
pop
jle
lret
clc
jg
shll
mov
push
movsb
inc
jl
mov
aas
lcallw
fisubrs
incb
and
outsl
pop
sub
call
inc
sub
xchg
inc
andl
rorb
pop
add
add
subb
std
jmp
mov
cmp
adcb
fistl
inc
fisttpll
cmp
xchg
push
or
scas
out
mov
ficomps
jae
xor
adc
dec
int
jg
lock
sbb
call
ljmp
pusha
adc
testl
add
cmp
icebp
push
in
xor
mov
clc
lret
mov
jbe
inc
xchg
jg
cmc
xor
mov
scas
into
push
sbb
arpl
in
bound
loop
mov
sub
loopne
out
mov
hlt
mov
scas
jl
adcl
stc
in
mov
imul
jp
pop
ret
pop
inc
mov
mov
cmpb
scas
push
aaa
je
andb
sar
mov
movsl
and
sarb
in
aam
pushf
popa
mov
or
test
fisubs
cld
cmp
notb
inc
out
mov
jl
gs
in
xorb
inc
sub
dec
in
jmp
in
pop
sbb
add
mov
subb
mov
sbbb
mov
add
insl
jnp
in
mov
out
adc
cmp
ds
and
arpl
jnp
jbe
fwait
mov
pop
push
testl
arpl
jle
inc
or
xchg
test
mov
xchg
adc
pushf
insb
xchg
jl
mov
add
ss
lea
xchg
iret
ret
inc
fbstp
sbb
js
enter
daa
das
push
ret
or
je
cmc
and
xor
jmp
adc
or
mov
leave
inc
xchg
mov
addr16
addb
stos
sbb
jl
jg
mov
stos
imull
mov
ljmp
jmp
xchg
repnz
or
xchg
popf
sbb
dec
jne
inc
push
sbb
movsb
adc
push
nop
add
andb
and
adc
cmp
dec
cmpb
lahf
in
mov
popf
test
dec
push
mov
pop
and
or
lret
mov
push
andb
test
jp
imul
jns
cmpsl
leave
dec
add
jle
je
jns
jb
add
iret
mov
xor
orl
and
and
mov
cmpb
and
shl
andb
insb
int3
pop
xchg
dec
xorb
mov
xlat
clc
lock
ret
stos
imul
pop
push
xorl
mov
xor
subb
cmp
cld
pop
fistps
adc
adc
pop
dec
lea
push
addb
sub
sub
push
dec
jb
mov
mov
out
stos
in
cmpsl
loop
jge
mov
in
cwtl
jo
lcall
jno
sbb
jge
xchg
xchg
clc
push
mov
mov
add
xchg
sbb
inc
pushf
mov
xchg
arpl
addb
pop
subb
cmp
sbbb
push
mov
outsl
ljmp
imull
shlb
jbe
jnp,pn
xchg
int3
dec
stos
adc
push
rcrb
mov
xchg
xorb
aad
loopne
mov
add
js
and
mov
out
andb
iret
cmp
mov
pop
cltd
shrl
aaa
and
add
mov
or
jg
push
and
cmp
fdivs
sbb
and
xchg
pop
sbbb
roll
lods
push
sbbb
andb
sbb
stos
add
cld
add
bound
add
adc
pop
xor
mov
sbb
xrelease
bound
adc
push
orb
fimuls
cmp
lods
ss
jbe
addr16
cmc
call
pop
add
push
or
jns
sbb
dec
subl
mov
daa
subb
cmc
jg
mov
or
inc
pusha
ficoms
jnp
test
repnz
dec
adc
xorl
mov
ja
cld
ja
rolb
dec
cmc
out
addb
inc
flds
sub
cmpsl
out
movb
std
and
sub
fnstcw
shrb
ss
add
cmpb
push
dec
lcall
out
rolb
push
push
adcb
cmp
jae
pop
into
lods
and
lock
jno
gs
inc
ret
jmp
cmpl
ret
mov
mov
xchg
clc
mov
jle
push
out
and
lds
shll
inc
clc
inc
add
xor
xchg
cmpb
sub
or
lret
inc
call
mov
hlt
shll
inc
std
lret
mov
push
decl
test
cmp
mov
addb
jg
jo
filds
ljmp
gs
xor
dec
push
es
mov
dec
rcll
fcompl
test
adc
mov
addl
mov
iret
sub
rcl
push
movsb
sub
sarb
sar
push
adcb
out
lret
sbb
xchg
in
and
test
out
arpl
xor
lahf
cmpl
sbb
cmp
js
pop
stc
test
pop
mov
or
fisttpl
jns
ret
mov
or
mov
rcrb
or
mov
jb
mov
dec
scas
xor
ret
mov
dec
fs
loope
xor
bound
xchg
mov
sti
test
rcll
mov
and
jl
or
hlt
orb
xor
sub
pop
xchg
jmp
cmpb
aas
cmp
xchg
inc
mov
xlat
sub
pop
cld
adc
subb
inc
push
adcb
mov
jnp
mov
stos
mov
and
add
xchg
outsl
cmc
orb
mov
pop
lret
and
es
add
outsl
je
adc
cwtl
push
jg
push
dec
and
xorb
add
xchg
push
pop
data16
xchg
out
add
addb
test
icebp
adc
mov
xorb
bound
stos
mov
test
jg
dec
push
lcall
andb
mov
fs
pop
inc
cltd
leave
sbb
mov
mov
andl
inc
addr16
sbb
inc
xchg
and
mov
fiaddl
push
or
add
das
mov
adc
shlb
rcll
sub
add
jp
add
jns
daa
subl
sti
lods
sbb
aam
repnz
push
cmp
mov
xor
mov
icebp
sub
jns
push
stos
push
push
add
outsl
mov
daa
roll
mov
sub
jo
xchg
shl
xor
out
cmp
xor
call
mov
lock
rep
or
aad
jo
lcall
mov
jne
sub
jbe
scas
enter
cmp
push
inc
movsl
jo
fdivrl
shlb
mov
sbb
ds
jg
mov
add
repz
lea
lret
fisttpl
pop
and
jp
inc
pusha
adc
imul
ljmp
dec
cmp
cwtl
iret
and
xchg
popa
adc
test
push
and
pushf
cmpsb
sbb
jp
ja
xor
ss
and
subb
loop
mov
push
testl
mov
jp
mov
idivl
jno
pop
cmp
sbb
sbb
mov
cltd
xchg
pop
cwtl
sub
notb
xchg
lret
lds
pop
pop
lcall
bound
divl
jecxz
xchg
pop
outsl
outsb
les
repnz
not
push
sub
mov
std
into
mov
or
pop
xor
or
inc
mov
add
cmp
pop
mov
dec
in
pop
bound
cld
cli
in
loope
sbb
out
adc
lcall
loope
cmp
jecxz
jbe
add
scas
pop
pop
outsl
into
addr16
jl
mov
mov
add
ss
pop
xor
ret
sbb
xchg
adc
sbb
jl
lcall
xchg
xor
add
push
insl
cltd
movsl
and
ret
sub
lcall
pushaw
ljmp
sbb
jbe
out
jbe
push
dec
test
inc
lods
stc
cmp
cmp
addb
test
mov
push
iret
roll
outsb
stos
adc
sbb
jnp
repnz
fistpll
js
jno
inc
idiv
scas
lcall
inc
xor
pop
flds
xchg
cmc
mov
ret
push
jp
dec
aas
cmp
mov
in
test
mov
and
test
je
mov
lea
xor
lea
cmc
roll
dec
icebp
addl
push
or
or
ja
and
pop
xchg
fstpt
fnstenv
dec
shl
jp
sbb
sub
ljmp
mov
orl
mov
push
or
jp
and
cmp
or
popf
lret
inc
mov
jnp
xor
aam
sub
shll
lds
cltd
lret
jo
xchg
js
sub
jle
lret
jl
pop
mov
xchg
fs
xchg
pop
hlt
and
mov
pop
cmp
jle
iret
jbe
std
dec
jae
fbstp
inc
inc
lret
cmp
jns
sbb
jle
lcall
add
ja
lcall
xor
pusha
fcmovne
xor
cwtl
pcmpeqw
and
mov
and
clc
sbb
or
imul
mov
int3
xchg
push
jle
sti
add
daa
pop
ret
sub
enter
je
aam
mov
mov
mov
and
inc
jbe
bound
mov
jge
popa
inc
cmp
mov
jmp
shll
mov
and
push
ljmp
mov
mov
aas
and
scas
cli
cmp
pop
push
xchg
sub
repnz
sub
mov
and
xor
in
in
inc
ss
cwtl
cmp
neg
outsl
test
lret
sub
dec
cld
push
rcll
ret
mov
out
inc
roll
push
add
cs
add
jge
outsb
lcall
mov
pusha
int3
push
push
push
jmp
outsb
jmp
int
test
sub
leave
aas
xor
push
sbbb
out
cmc
push
jg
daa
call
xchg
test
cltd
xor
shrl
insb
outsl
adc
outsl
lcall
xchg
popa
or
mov
dec
and
outsl
mov
adcl
jp
ffree
sbb
push
negb
xor
lahf
xorb
sub
cmp
inc
ja
dec
mov
dec
xlat
jae
dec
loope
ror
imul
loopne
inc
stos
mov
inc
fstps
shr
pop
fnstsw
mov
mov
sbbb
xchg
jg
insb
jbe
inc
imul
movl
xorb
xor
outsb
cmp
jge
mov
hlt
ss
and
or
pop
addb
mov
stos
adc
imul
xor
int3
sbb
iret
push
cmpb
xor
cmpb
xchg
xor
js
mov
cmpb
xchg
popa
pop
push
jb
dec
mov
pop
and
jbe
in
pushf
mov
lahf
pop
scas
xchg
jp
cmp
mov
push
je
xor
mov
mov
xchg
inc
and
dec
stc
xchg
add
mov
int3
lock
jb
cmp
idiv
repz
jmp
bound
dec
orb
sbb
mov
mov
aas
fnstenv
push
push
lret
sub
mov
ret
in
mov
filds
push
into
cwtl
test
mov
jl
jecxz
sbb
lret
hlt
xorb
das
push
mov
stos
sbbb
mov
xor
sub
adcb
mov
mov
sahf
je
ficomps
bound
in
xlat
push
out
int3
ret
sub
fisttps
insl
xchg
loop
ret
push
xor
sbb
pushf
mov
rol
mov
xchg
dec
dec
adc
pop
mov
add
aam
inc
or
push
ss
sbb
add
lock
test
subb
fstl
cltd
adc
jo
lods
dec
xchg
xorb
xchg
xor
or
xchg
imull
jnp
or
leave
or
call
mov
int3
sbb
orb
sahf
jne
fistl
xor
mov
cmp
mov
int3
mov
mov
mov
adcb
mov
clc
mov
test
xor
lods
add
rorl
js
fldl
cld
push
xchg
mov
jp
xor
mov
les
nop
subb
ja
and
cmp
mov
push
out
ret
rorb
insb
sbb
fmull
fiaddl
push
xchg
aad
cmp
adc
and
stos
adc
sbb
inc
movsb
cmp
outsl
lds
mov
loope
cmp
shrb
cmpsl
cmpb
mov
data16
out
xchg
mov
andb
imul
orb
scas
rolb
jmp
fadds
cwtl
push
xor
push
test
add
psubw
nop
push
test
inc
dec
cmp
leave
lcall
imul
cmp
mov
rcl
andb
cmp
mov
mov
mov
aam
jne
and
pop
sbbb
pop
adc
xorb
fsts
sbb
xorb
fisubrl
add
cmp
mov
cltd
mov
fdivrl
addr16
mov
inc
or
bound
inc
or
addb
pop
inc
sub
adc
js
mov
add
mov
add
lcall
jl
imul
into
mov
repz
push
lret
sub
cmpsl
ds
and
aas
cltd
inc
and
xor
arpl
push
mov
subb
dec
addr16
repz
jnp
push
loopne
xchg
inc
jbe
dec
ret
or
adc
inc
insl
out
add
sub
xor
pop
mov
sub
sub
pop
mov
mov
ficomps
cmp
adc
int3
mov
cmp
addb
insb
sbbb
orb
pushf
lods
mov
or
jno
sbb
ja
dec
nop
xor
rcll
lods
adcb
xlat
ds
fs
add
or
and
cmpsl
cwtl
ret
in
inc
cld
enter
fwait
ja
je
leave
xchg
cmp
or
int
push
mov
xorl
js
std
jae
loop
mov
cmc
insb
push
imul
dec
mov
jnp
ss
orb
add
out
fisubrl
add
adcb
xchg
out
or
std
test
xor
mov
adcb
jo
mov
cmpsl
stos
lea
mov
inc
aad
dec
sub
fstl
mov
push
in
adc
or
out
xor
mov
shl
imul
aaa
sub
jge
loopne
jmp
add
or
inc
mov
jae
nop
and
addr16
dec
pop
cmp
push
daa
stc
jnp
mov
xor
jb
sub
subb
enter
aaa
and
jp
xchg
and
adc
out
into
cmc
and
out
inc
push
jmp
repnz
push
lret
cmpb
xchg
bound
xor
or
and
mov
jns
pop
xchg
in
nop
sbbb
fmulp
push
sbb
je
ss
inc
jbe
adc
ficompl
scas
sbb
int
pushf
arpl
jo
fwait
xchg
inc
sbb
dec
add
data16
dec
add
inc
movsb
rolb
scas
or
orl
add
jno
or
je
enter
jne
sbbb
mov
jnp
cmpsl
outsl
outsb
lcall
mov
fs
ret
gs
outsb
ret
negl
mov
adc
xchg
adcl
inc
stos
cltd
dec
imul
arpl
stc
jns
pop
fists
orl
loop
xlat
das
mov
adc
in
add
jge
add
fbstp
sti
lea
jg
std
pushf
jns
xchg
and
push
orb
insb
fwait
add
push
pop
test
xorl
mov
aaa
inc
mov
lock
mov
repnz
shlb
push
js
js
popa
ljmp
fdivs
shlb
jmp
jge
sbb
xorb
cmpb
sbb
add
insl
mov
addb
in
xor
cmpsl
jns
loop
add
aam
xor
outsb
jg
or
subb
pop
divb
test
cs
scas
mov
addl
jns
nop
jmp
sbb
jle
push
add
adc
mov
lods
shlb
test
ret
test
in
jp
bound
xorb
negb
add
mov
and
pushf
or
imul
cmpsb
push
stos
or
jl
ret
aad
scas
andb
dec
xchg
mov
pop
xchg
sbb
push
mov
fidivrl
sbb
inc
int3
enter
popa
or
jnp
in
je
dec
fs
cmp
into
std
xlat
scas
jmp
or
jecxz
mov
cltd
pusha
adcb
add
in
test
mov
push
lods
adc
mov
addb
add
add
mov
dec
gs
mov
pop
cltd
pop
and
cmp
loope
mov
push
xor
fidivs
sub
adc
sub
sbb
pop
in
jo
mov
push
push
lea
iret
and
push
jns
mov
into
ret
fldl
add
cmpsl
aad
add
cli
mov
pop
jg
hlt
push
mov
sbb
rcrb
mov
cs
jbe
ds
sub
adc
push
lcall
aad
mov
adc
cli
jns
out
icebp
sbb
inc
sbbb
push
pinsrw
push
mov
nop
or
mov
lea
jmp
add
shrl
int3
push
fdivrs
add
lods
imul
insl
jl
mov
cmpsl
inc
stc
jbe
xchg
dec
cwtl
ret
push
cli
mov
lds
pop
and
sub
xchg
pop
mov
test
test
leave
inc
jns
lods
xchg
xor
out
mov
add
inc
and
add
aas
lods
and
add
inc
inc
xchg
mov
jbe
cmpsb
lds
cltd
cmpsb
and
jae
mov
testl
les
add
adc
inc
js,pt
into
jp
pop
mov
fnstsw
mov
jb
and
ret
popa
ret
leave
cmpb
andl
mov
orb
mov
insb
lock
mov
arpl
stc
shlb
cltd
mov
fdivrp
pop
jns
std
dec
mov
stc
stos
cli
pop
jbe
or
outsl
not
rcl
pop
push
sub
out
mov
enter
pop
into
movl
add
cmc
aad
push
jo
mov
lcall
lods
pop
stc
shlb
sbbb
sub
mov
pop
aam
inc
xor
and
or
and
imul
lret
aaa
mov
rcrl
and
ss
jle
ret
paddsw
sub
ljmp
pop
loopne
jmp
pop
mov
inc
dec
insb
decb
xchg
lds
or
ljmp
sbb
rcll
xchg
jmp
mov
sbb
imul
int3
jns
testl
cltd
out
in
jnp
cmpsb
insb
inc
cmp
data16
add
inc
out
add
dec
out
mov
lret
sbb
fistl
adc
orb
push
test
jb
cmp
aam
pushf
jle
mov
fs
xchg
inc
sub
jns
daa
sti
lea
scas
test
mov
pop
insb
xchg
mov
jg
mov
stc
jnp
in
popa
dec
dec
ret
adc
ret
inc
xor
sbb
mov
add
push
mov
sub
cmc
fldl2t
push
scas
xchg
shlb
pop
pop
sbb
data16
mov
adc
push
lcall
lods
jbe
or
into
dec
xchg
adc
add
popa
out
sbb
push
mov
stc
loop
sub
sub
pop
adc
sbbb
int3
pop
xchg
ds
in
add
in
fdivl
fcmovu
jns
cli
mov
fbld
sarb
test
mov
inc
cltd
push
mov
cmp
aaa
lods
add
shrl
adc
mov
cli
pop
rcl
add
sub
jns
inc
xlat
sub
loop
xchg
push
dec
imul
stos
jne
xor
push
aaa
pop
xchg
std
adc
scas
mov
ja
mov
pop
inc
push
jl
xor
es
jno
fsubrp
sbb
test
loopne
sti
lods
pop
jle
test
pop
push
ja
scas
lds
aam
push
pop
xchg
fs
outsl
lea
dec
les
bound
rcrl
inc
mov
mov
or
andb
push
mov
ficomps
mov
cli
test
fisubrl
andb
daa
leave
fldl
mov
je
jge
jns
dec
pop
fsts
add
rorl
mov
call
subb
add
mov
jae
xchg
pusha
or
test
jne
filds
dec
loop
cli
add
and
sbbb
hlt
mov
lcall
js,pt
inc
add
cmpsl
and
test
sub
fiaddl
mov
dec
xchg
incb
inc
clc
pop
jb
rcll
repnz
repz
mov
sarl
addb
in
arpl
repz
pusha
stc
mov
sti
mov
adcb
add
sar
add
and
sub
test
jns
pusha
int3
js
cmp
pop
and
lock
je
and
ficoml
subb
or
mov
clc
push
fisubrs
shll
cmp
add
dec
cld
xchg
jns
fidivl
xorb
test
fisttpll
cmp
ret
dec
pop
xchg
les
xorl
xor
jb
jg
mov
cli
and
addb
xor
jnp
fisubs
jb
mov
orl
aam
sub
popa
stos
mov
jmp
push
out
js
pusha
mov
addb
nop
testb
sbbl
fnstenv
lcall
divl
jno
push
dec
mov
pop
je
inc
sub
stc
xchg
cmc
cwtl
pop
ja
mov
loop
lock
mov
rorl
ret
mov
cmpsl
mov
sbb
outsl
mov
cmpsl
xor
mov
gs
xchg
es
pop
xchg
leave
icebp
mov
mov
pop
mov
scas
daa
pop
xorb
mov
clc
sbb
scas
out
push
leave
mov
int3
mov
mov
jno
sbbb
sbb
mov
stc
pushf
cmp
sbbb
pop
je
daa
arpl
in
or
bnd
sbb
lret
mov
movsb
mov
icebp
dec
cmp
rcll
test
xor
rcl
sbb
bnd
lret
mov
jnp
out
and
mov
xor
add
inc
sub
orb
popf
addb
sbb
xor
pop
ja
xchg
add
aam
outsl
lcall
sub
repnz
cmp
adc
mov
andb
ss
lds
lret
sbbl
adcb
push
rcrb
dec
je
mov
push
adc
push
jp
mov
inc
andb
mov
lret
hlt
dec
leave
xor
out
das
imul
lahf
sub
push
nop
sahf
sbb
xchg
loop
xchg
cmpsl
adc
and
mov
jecxz
jae
push
js
loop
sti
shlb
jnp
push
or
cmc
mov
cwtl
push
xor
shl
xor
add
mov
push
or
fistl
jae
andb
aas
jle
loopne
pop
subb
mov
std
andb
sar
cmpsl
fmuls
leave
repz
add
addb
push
loope
cwtl
iret
and
pushf
and
xorb
push
fs
mov
add
jae
xor
xchg
aam
aaa
mov
hlt
jbe
bound
add
sbbb
mov
test
mov
je
adcb
mov
out
inc
push
jnp
idivb
cmp
jecxz
cmp
and
inc
pop
loopne
adc
push
sbbb
lds
cmp
dec
add
inc
or
inc
in
or
andl
hlt
add
xchg
push
sub
dec
or
push
dec
incb
xor
sbb
xorb
test
subb
push
fisttpl
add
adc
inc
testb
pop
or
repz
jns
testl
addb
adc
pop
pop
add
xor
push
ljmp
push
std
andb
clc
push
inc
test
add
es
arpl
orl
mov
outsl
mov
je
ret
loopne
sbb
loop
or
xchg
lcall
adcl
loopne
ljmp
dec
pop
fiaddl
add
or
jns
lea
xchg
xchg
dec
int3
cltd
cmpb
and
cmp
out
or
insl
sbb
decb
rcr
inc
xor
daa
sahf
into
push
cmc
sbb
pop
ret
andb
je
push
jecxz
daa
ror
shrl
xchg
addb
mov
push
test
ljmp
jp
imul
pop
jecxz
pop
int
pop
nop
fisttpl
sbb
aad
and
aaa
imul
push
lds
push
pop
ret
lods
fildl
xchg
inc
sbb
push
inc
or
ds
jns
and
mov
leave
insb
fistps
cmp
jge
push
adc
or
les
mov
fisubrs
jae
sbb
inc
or
loope
rolb
aad
add
or
or
icebp
sbbl
cmp
push
adc
call
cmc
into
mov
pop
arpl
cmp
xor
mov
xchg
cmp
cmpb
enter
ret
xchg
or
nop
movlps
dec
in
inc
lds
subb
or
sbb
push
bound
adc
test
insb
xor
add
std
negl
orb
mov
or
push
lret
ja
insb
in
js
gs
shll
popf
hlt
popa
mov
inc
push
fnsave
idivl
xchg
adcb
jbe
push
sbbb
js
jnp
add
jo
fistpll
inc
inc
cld
jb
mov
adc
out
sbbb
push
cmp
inc
mov
jge
push
scas
das
lret
xorb
sbbb
xchg
xchg
popa
fiaddl
stc
jnp
adc
in
jle
out
jns
add
pop
lret
push
iret
jg
enter
cs
es
orb
inc
xchg
add
cli
stc
lods
in
cltd
mov
clc
nop
subb
lcall
int
mov
lods
or
mov
fmulp
add
aad
jns
ret
sti
inc
fsubs
int
pop
adc
sbb
repnz
test
add
dec
mov
mov
fs
dec
jmp
mov
sub
push
test
jb
push
inc
xchg
dec
fidivrl
push
add
xchg
clc
popf
ret
xadd
jae
dec
sti
cmpb
pop
mov
lret
dec
js
mov
lock
xchg
pop
jno
hlt
outsl
jle
sub
ljmp
jge
mov
outsb
jmp
jo
mov
je
mov
aaa
cli
mov
incl
outsb
sahf
add
adc
xchg
or
bound
jne
enter
jnp
sub
fadds
invd
call
loop
rorl
adc
fs
cmpsl
aaa
in
xchg
cli
clc
lds
inc
xchg
lods
stc
jmp
rorb
fs
fldenv
fdivr
dec
jg
cmp
sub
lcall
pop
xchg
aam
and
cmp
mov
lret
xchg
into
fidivrs
psraw
popf
and
cmp
dec
ja
roll
dec
jb
lret
leave
cltd
cmpb
call
insb
mov
mov
mov
dec
popa
xor
and
nop
loop
jge
std
aas
out
fsincos
or
dec
mov
ret
and
lds
ljmp
mov
testl
xor
inc
dec
hlt
inc
inc
mov
mov
xor
leave
push
notl
decb
sbb
pushf
test
or
in
leave
jge
cmpb
fs
mov
cmpsl
adc
cs
mov
lcall
xorb
loope
shl
insl
orb
scas
push
sbbl
mov
lods
push
push
add
jae
mov
jns
or
call
add
in
and
mov
inc
cmp
fcoml
mov
mov
mov
fimuls
mov
outsl
out
or
popa
and
shrb
cmp
test
ljmp
and
nop
adcb
push
xor
testl
jle
or
mov
or
push
push
lods
andb
push
fmuls
leave
sbb
sbb
cmp
subb
mov
test
mov
sub
mov
jl
adc
aam
mov
fldl
or
mov
inc
xchg
sub
stc
jle
ss
orl
mov
xchg
aam
sub
lock
out
cwtl
sahf
dec
push
xorl
sbb
ret
push
push
mov
subl
ror
cmp
jmp
adcb
jns
push
pop
int3
inc
inc
insl
fiadds
mov
inc
mov
loope
fwait
dec
mov
ret
cmp
in
xor
ss
xchg
adc
mov
rcrb
mov
or
dec
ficoms
test
outsb
js
subl
mull
inc
orb
out
mov
dec
cmp
jno
mov
xorb
repz
ss
scas
cld
cli
xchg
imull
push
and
and
push
sub
dec
aaa
dec
pop
mov
jo
ret
lods
sub
pop
fstpt
loop
sbb
mov
inc
sbb
inc
or
lods
repz
pop
les
mov
nop
push
cmc
dec
ror
xchg
pop
add
dec
jnp
test
sti
shufps
xchg
ljmp
es
imul
push
loopne
cltd
daa
orl
and
xchg
jmp
dec
fildl
mov
jns
rolb
adc
push
xchg
out
fcomi
insb
adc
ja
lods
pop
mov
jp
stos
rol
push
cmp
jo
cmp
sub
out
sub
jle
int3
into
inc
ja
daa
sti
xchg
out
rol
add
mov
fucom
popf
inc
adcb
sub
push
lcall
mov
mov
add
push
jns
cltd
enter
loopne
dec
mov
ljmp
cmp
add
lcall
push
stc
int
jbe
ss
add
js
inc
fsubl
repz
mov
xchg
sarb
outsb
pushf
call
add
mov
jno
test
cmc
iret
jg
fmulp
clc
insl
jbe
bound
add
and
and
mov
outsl
lods
mov
movsb
sbb
sub
xor
les
inc
bnd
pop
lcall
jl
sbb
lea
or
rclb
scas
daa
sar
mov
jmp
lods
adc
fbld
adc
pushl
xchg
repnz
sub
test
and
arpl
mov
cmp
mov
sub
cltd
add
or
mov
pop
les
popf
std
pop
sub
cmp
sub
ja
outsb
xor
add
xlat
repnz
imul
push
outsb
enter
inc
cld
pop
cmp
shlb
cmp
sti
dec
sbb
shrl
stc
inc
test
jno
ficomps
or
popf
add
addr16
inc
loop
cltd
fbld
push
mov
cs
mov
xchg
cli
ror
inc
jbe
aad
adc
repz
test
or
jnp
xor
dec
xor
test
aam
addl
xchg
or
cmpsb
mov
sbb
sbb
sbb
aaa
lock
mov
mulb
jae
mov
jl
cwtl
inc
repnz
lods
sbb
pop
stos
mov
jg
lret
fs
bound
sub
scas
jmp
aaa
push
mov
repnz
xchg
inc
loop
cmp
out
les
mov
in
sarl
sbb
xchg
mov
inc
daa
fcmovu
in
shrl
dec
cmp
ror
pop
loop
imul
leave
ret
mov
add
fldt
pop
jne
hlt
push
cld
mov
xor
ljmp
dec
out
rcrl
test
cmp
and
mov
mov
rcrb
jns
lods
sbb
or
fdiv
out
faddl
xor
pop
cmp
ret
dec
loopne
dec
and
fstps
jnp
aas
add
inc
daa
in
fsubs
add
pop
js
mov
dec
pop
jp
mov
enter
xorb
lcall
xor
xor
testb
out
lods
sbb
ret
mov
mov
ja
das
and
sub
in
mov
and
mov
xlat
pop
js
in
pop
repz
adc
in
adc
aam
sbb
outsl
int
sub
or
pop
push
jmp
ret
test
shl
test
repz
idivb
int
lock
inc
dec
lea
pop
outsl
rcll
xchg
icebp
out
idivl
or
repnz
mov
mov
mov
mov
insb
pop
inc
xchg
stos
cli
inc
xor
or
cmp
ds
push
iret
jbe
pop
mov
rcrl
jns
out
adc
pop
daa
cwtl
fcomps
push
pop
push
aam
fnstcw
cltd
pop
or
sbb
mov
jg
outsl
in
sub
sbb
and
mov
icebp
mov
lret
out
adc
push
push
aad
sti
lock
imul
fsts
cltd
outsl
mov
int3
mov
lock
in
cmp
add
mov
nop
and
rolb
xorl
push
lret
or
jno
dec
outsl
mov
mov
lcall
mov
ret
sbb
mov
ficoms
cmp
pop
lret
xor
and
jns
cmp
lret
xchg
push
pop
mov
inc
xchg
test
ss
or
jge
sbb
jae
xorb
rorl
adc
outsb
nop
adc
mov
mov
push
leave
inc
int
sbb
adc
aam
lcall
inc
ret
xor
mov
cld
xor
repnz
cli
xor
xorl
out
sbb
lea
cmp
mov
cs
repz
jae
leave
mov
mov
xor
insb
pop
shl
adc
sbb
insb
xchg
jno
fsubr
and
cmc
outsl
mov
push
cmp
and
inc
xchg
adc
pop
jns
mov
inc
call
mov
sbb
repnz
mov
lret
lods
test
jbe
pop
jg
jae
and
lcall
cmc
sub
push
cmp
stos
stc
add
pop
xor
fidivs
mov
mov
shr
cltd
jle
mov
cmp
aas
aam
push
dec
mov
jo
fbld
sbb
adc
and
in
add
data16
sbb
out
jns
test
insl
mov
rcrb
int3
jl
cld
ret
or
scas
push
daa
ljmp
jo
das
sub
out
xchg
lds
xchg
flds
pop
xor
lahf
sub
mov
pop
cmpb
adc
test
insl
cld
lea
insb
insb
sbb
jl
mov
mov
jnp
stos
cwtl
addb
jno
jecxz
stos
cmp
movsl
sub
outsl
xlat
or
out
xchg
sub
fisttps
sub
sub
sub
sub
outsb
bnd
sbb
call
aas
gs
leave
aad
jecxz
mov
sbb
gs
ss
in
lods
jns
xchg
insb
push
orl
cmp
xchg
jmp
insb
mov
mov
jmp
loopne
lock
and
or
sti
cmp
out
test
out
pop
data16
clc
cmp
mov
mov
mov
xchg
jl
mov
sub
lcall
push
test
dec
xchg
xor
mov
lock
incb
cmpsb
xchg
imul
mov
call
jnp
arpl
lods
movsb
mov
aaa
cmp
push
out
call
sub
ret
jb
inc
ss
andb
inc
hlt
in
jae
inc
xchg
and
fsubr
mov
sti
ss
jle
test
lret
mov
mov
and
stos
dec
shll
inc
fcoms
push
lods
loop
in
lea
lds
paddsb
popf
in
inc
inc
aad
insb
ss
repz
sbb
add
outsl
xor
out
ficomps
add
bound
ljmp
mov
imul
pop
lret
fldcw
pop
jl
testb
dec
cli
test
aaa
daa
ret
stc
sub
adc
icebp
dec
sbb
push
test
cs
mov
popa
aas
xchg
jecxz
lods
mov
cwtl
sbb
jg
pop
cmp
xor
call
sbb
pushf
imul
xor
ja
mov
jge
movsl
and
sub
imul
xchg
cmc
xlat
popa
xchg
and
lds
popf
divb
dec
fistps
sub
mov
ja
out
xchg
cmpl
cld
cltd
and
pop
jae
jge
hlt
cwtl
insb
mov
add
cmp
xor
pop
fldt
cmp
daa
mov
cmp
out
mov
daa
dec
add
mov
push
dec
imul
add
call
loop
inc
mov
imul
sub
sbb
movsb
xchg
shlb
iret
cmpsl
cmp
out
dec
jne
add
sarl
push
loop
mov
mov
outsb
fisttpl
push
mov
sub
mov
push
cltd
out
cmp
imul
icebp
cmp
xchg
aaa
pop
es
sub
push
in
arpl
push
sub
inc
adc
inc
pop
lcallw
jle
jae
mov
or
or
imul
xchg
ret
cltd
lcall
pop
stc
test
cmp
clc
mov
mov
loopne
out
imul
push
lock
mov
sbb
mov
cmp
lea
les
xor
jno
bound
xchg
cmp
sub
mov
xor
nop
jge
inc
enter
mov
jo
aas
stc
cmc
mov
pop
outsl
jmp
mov
imull
jl
push
out
mov
push
push
cmp
push
clc
rolb
cwtl
dec
mov
adc
dec
mov
push
mov
xchg
out
testl
mov
xor
dec
jge
and
sbb
sub
gs
shrb
pop
add
or
sarl
push
test
sub
add
aaa
daa
pop
mov
sti
jo
sbb
inc
in
js
push
dec
ja
push
pop
push
and
rol
pop
push
or
mov
mov
or
xchg
fisttps
sub
shll
add
xor
cmp
push
jg
xchg
mov
iret
dec
jae
sub
sbbl
and
sub
push
mov
rcrb
lcall
icebp
xlat
xchg
jae
jns
sub
mov
add
lea
nop
pop
ss
and
jmp
push
insl
xor
adc
pop
mov
test
sbb
pop
or
mov
idivb
sti
and
jb
sub
lds
and
in
xor
add
push
out
sbb
stos
add
mov
lret
imul
add
sar
stos
pop
fs
test
enter
shlb
lcall
lahf
jns
lret
xor
mov
jmp
repnz
pop
stc
in
icebp
mov
cmp
cmc
jge
cmp
lret
jmp
mov
adc
test
orl
lea
cmp
push
or
cmp
jg
inc
negl
outsl
sub
dec
jo
sub
imul
ret
fucomp
dec
jmp
jae
adc
hlt
subl
pop
push
in
or
and
inc
pusha
lock
outsl
push
int3
cmp
ljmp
sub
bound
add
pop
std
shlb
cltd
popf
xchg
push
and
xor
push
aaa
add
insb
sbb
fistpl
out
and
inc
dec
sbb
push
mov
or
testl
xchg
mov
scas
out
fsubs
or
stc
in
add
call
cli
scas
jge
ret
dec
shlb
push
jbe
int3
stc
sbb
lretw
dec
add
lods
dec
test
inc
or
or
ss
scas
xchg
lcall
inc
mov
jbe
sbb
outsl
sub
rcr
jnp
cmp
insb
mov
cmp
mov
loopne
add
push
es
and
lret
pop
pop
cs
inc
dec
cltd
and
jno
push
and
shr
mov
jge
or
mov
inc
test
sbbl
or
pop
inc
scas
xor
inc
lods
xchg
or
jae
or
and
mov
movsb
ret
addr16
pusha
mov
or
insl
test
mov
lret
dec
cli
insb
out
mov
xor
pop
pop
and
xor
dec
cmp
xlat
push
out
in
inc
in
push
lret
mov
cwtl
inc
lds
mov
ds
and
xchg
pop
mov
inc
pop
cmpsl
jo
xor
frstor
and
pop
push
cmp
shrb
out
and
ljmp
jb
fdivrs
lcall
mov
mov
dec
and
sub
cwtl
jmp
icebp
hlt
cs
xchg
push
cmc
cmpsl
pop
shll
push
pop
jp
mov
adc
jge
mov
mov
push
pop
std
add
jl
int
add
shrb
cli
add
jp
loop
in
or
fstp
push
cli
mov
sbb
mov
cmpsl
mov
stos
jns
lahf
loop
and
call
std
adc
pop
rcrb
pop
dec
dec
sub
push
ss
xor
call
jbe
or
push
icebp
out
loope
or
out
pop
sub
pop
lcall
sub
and
pop
add
iret
push
leave
jb
ret
mov
cmp
mov
cwtl
inc
sub
out
mov
inc
push
pop
push
stos
xchg
sbb
es
addb
shlb
sub
mov
jg
add
daa
sub
xor
push
jp
push
adc
push
adc
rcrl
inc
cltd
imulb
jmp
sub
mov
pushf
jl
shr
pop
push
mov
jl
jae
jne
sbb
push
mov
xor
jle
mov
dec
popf
js
dec
lahf
cmp
fistps
test
jns
cmp
push
mov
in
outsb
and
cltd
cs
ss
pop
fmull
sbb
imul
push
int3
mov
or
pop
sbb
arpl
repz
repnz
inc
outsb
sbb
xchg
and
fsubs
jbe
sbb
lcall
ljmp
push
dec
inc
arpl
push
inc
rcrb
sbb
ss
and
push
js
std
jns
das
pop
fdivrs
sub
add
lds
push
cltd
cmp
jo
push
dec
dec
or
aaa
out
lds
sub
out
iret
add
lcall
out
adcb
add
lret
loope
inc
popf
push
inc
jae
inc
and
in
pushf
add
clc
add
stc
fildll
pop
sub
mov
xchg
sahf
sbb
lds
imul
cli
or
pop
sbb
add
mov
repnz
insb
aad
imul
daa
mov
out
out
idiv
inc
push
movsl
ret
stc
ja
lods
xorb
stc
cmp
mov
ljmp
pop
fneni(8087
clc
mov
adc
xchg
lods
pop
ja
enter
sub
std
or
int
add
or
add
xor
gs
in
fisubrs
xor
scas
lea
jmp
cmp
jo
cwtl
nop
jne
jnp
stc
mul
dec
xor
xor
pop
aam
lret
pop
mov
sub
pop
bound
jno
movsb
pop
stc
xor
daa
mov
ljmp
call
aaa
sub
jl
arpl
lret
ja
cltd
and
stc
xchg
jecxz
ja,pn
mov
neg
insb
ret
mov
jl
repnz
int3
repnz
outsb
test
ja
xlat
lock
mov
jecxz
bound
ret
mov
pop
or
std
xor
iret
jbe
movsl
cmp
pusha
orl
sbb
pop
and
test
adc
loop
lret
add
insb
scas
sub
xchg
jb
sub
push
inc
lcall
rolb
or
fs
insb
fsts
icebp
mov
loop
add
mov
std
out
rcrb
mov
jecxz
cmpsl
jge
push
lcall
pop
hlt
inc
ja
cwtl
in
mov
dec
inc
js
pop
sub
mov
in
les
pop
cmc
popa
sub
addb
and
xor
lods
xor
mov
adcb
test
popf
mov
orb
or
adcb
daa
mov
xlat
xor
xchg
push
pop
mov
cmp
test
in
js
xchg
addr16
aas
iret
cld
add
sub
xchg
ret
xor
sbb
cmp
jnp
jns
sbb
lret
pop
jge
sub
call
and
shl
xorb
sub
into
push
inc
lock
push
das
cmp
nop
std
shl
popf
jns
testl
mov
stos
xor
sbb
dec
fstpt
subb
cltd
or
out
loop
xchg
mov
or
js
cmp
cmp
and
rcrl
insl
fsubrs
lods
push
mov
mov
jo
int
fistpll
adc
pop
sub
popa
imul
flds
adc
fisttpl
inc
int3
or
pop
cmp
dec
bound
and
sub
cmpsb
push
push
das
or
adc
aas
pop
xorb
in
ljmp
push
ss
sbb
or
sbb
mov
dec
xchg
xchg
dec
or
pop
imul
xchg
int3
lods
scas
add
mov
jge
or
ret
add
jne
test
xchg
inc
scas
mov
out
xchg
in
stos
shlb
jae
aas
fdivr
ret
dec
fsts
and
xchg
adcb
mov
xor
addb
rcrl
xchg
or
lahf
adc
addb
es
mov
dec
add
fdivl
mov
sbb
xchg
sub
mov
outsb
jo
addb
repnz
sub
xchg
adcb
mov
and
xor
movsb
test
mov
outsb
or
xor
cmpb
push
inc
ret
cmp
jmp
lock
jle
nop
insl
subb
add
loop
fstps
les
xchg
adcb
mov
add
js
cmpb
sub
dec
fmuls
push
int
mov
and
dec
ret
inc
xchg
fistpll
push
jmp
lret
and
push
inc
push
cmpb
xor
cwtl
inc
add
sbb
jnp
out
jnp
jo
out
add
rolb
push
cmpb
es
mov
xchg
jne
jp
mov
daa
lods
xchg
jns
sub
adcl
push
scas
mov
xchg
add
mov
mov
push
sub
mov
mov
dec
pop
and
mov
xor
cmp
xchg
lret
pop
subb
dec
cmc
cwtl
enter
stc
mov
sahf
nop
aad
fidivrl
das
mov
stos
jecxz
shrb
dec
out
mov
add
mov
mov
popa
cli
loop
out
jmp
mov
mov
sarl
movsb
jg
mov
jbe
adc
cwtl
test
mov
leave
aam
cmpl
mov
mov
ss
xor
cwtl
les
sub
icebp
pop
ljmp
xor
xchg
cltd
dec
insl
andb
lock
rcr
nop
cmpb
jns
jle
mov
inc
stc
pop
int3
jno
dec
add
push
test
ljmp
inc
repz
subb
sahf
sub
stos
adc
sbb
xor
cmp
inc
xchg
in
adcb
mov
insb
cmp
ja
sub
xchg
mov
xor
mov
dec
loop
mov
xor
push
dec
xchg
xchg
adc
ret
push
movsl
push
jmp
sbb
loopne
lods
xchg
sub
imul
push
ret
orb
sbb
lret
lds
push
and
jo
or
push
jge
scas
mov
repz
sub
add
xlat
push
subb
push
cmp
mov
dec
jmp
pop
testb
push
lea
or
sub
mov
popa
sub
hlt
pop
inc
dec
and
pop
mov
ds
xor
jb
push
add
sub
adc
addb
push
push
mov
roll
sub
jge
popa
pushf
pop
inc
xchg
adc
sahf
cmp
lock
and
aam
xor
cmpsb
test
inc
aaa
dec
rclb
xchg
sbbl
mov
push
cld
xor
lds
arpl
mov
inc
je
mov
sub
mov
out
int3
sbbb
add
mov
jecxz
lret
ret
adc
iret
or
scas
and
ja
rorl
jb
subb
xor
sub
aas
xor
std
lsl
shl
dec
xor
out
and
sbb
cmpsb
mov
xorb
inc
icebp
pop
push
inc
subb
xor
sbbb
mov
or
jnp
push
ds
lret
mov
loopne
add
sahf
cmp
subb
pop
sbb
mov
lea
and
and
inc
imul
push
cmp
clc
andb
test
xchg
xor
popa
bound
test
push
pop
adc
xchg
dec
sbb
mov
or
xchg
adc
stc
xchg
andb
adcl
inc
insb
adc
adc
icebp
xor
mov
aam
mov
jl
std
push
ret
andb
int
pop
push
xchg
push
mov
add
subb
cli
arpl
xor
fistps
cmp
lahf
out
fnsave
jge
shrb
mov
subb
jnp
mov
sub
push
mov
das
sub
lods
sti
loopne
add
pop
or
clc
xor
data16
and
inc
pop
aam
inc
out
mov
mov
movsl
scas
imul
and
rcr
xchg
mov
jo
and
subb
out
and
in
out
jl
mov
push
mov
aam
push
subb
push
dec
jp
mov
dec
jno
jle
insb
or
xchg
addr16
pop
or
or
add
fwait
ret
popf
nop
rorb
add
leave
ja
push
pop
out
scas
popf
je
fwait
and
xorl
mov
test
in
lods
je
and
movsl
xor
clc
dec
jno
push
loop
gs
loop
imul
and
mov
jae
inc
outsb
mov
mov
xor
or
adc
or
mov
push
xor
adc
push
mov
in
in
sbb
push
ja
cltd
negl
loopne
mov
fistpll
outsl
addb
pop
icebp
in
dec
sbb
shlb
subb
xor
mov
into
jg
stos
lock
sub
repz
and
leave
sarb
cwtl
jo
inc
jge
xchg
test
push
xor
or
cmc
jns
ljmp
stos
add
and
inc
decb
and
push
orb
inc
lock
out
jne
xchg
pop
orb
stc
hlt
out
add
adc
lret
imul
repnz
pushf
stos
adc
push
mov
lahf
leave
pop
aaa
mov
pop
xchg
xor
mov
ja
sbbb
les
out
outsb
movsb
jb
imul
ret
mov
call
mov
aad
or
cmpsb
sbb
sub
mov
jae
adc
popf
shl
and
inc
bound
or
lods
loopne
ret
jnp
mov
arpl
fisttps
test
out
xchg
pop
cmp
sub
jne
movsl
or
lcall
mov
int
pop
sub
push
jns
adc
stos
cmp
and
xchg
dec
and
ret
lcall
add
dec
fcoms
sbbb
add
dec
loope
push
jl
test
mov
and
in
sub
dec
ljmp
les
push
jp
mov
pop
sub
insl
div
pop
jle
jle
out
lea
outsb
xor
pop
les
repnz
sar
inc
jecxz
cltd
mov
pushl
rcr
cld
cmpsl
add
mov
pop
mov
jnp
ffreep
stc
pop
xchg
ds
cmpsl
aam
or
xchg
ss
pop
jmp
or
inc
int3
shr
stos
bound
pushf
jns
cltd
int
xchg
dec
jl
jae
pop
jge
scas
enter
addr16
add
cli
pusha
xor
push
in
mov
xorb
jle
popa
insb
in
xchg
repnz
push
jae
mov
inc
imul
cmp
fs
jne
lds
mov
cmp
loopne
test
sti
jns
and
xor
mov
sbb
mov
rclb
mov
sti
push
and
push
les
sbbb
add
call
leave
cmp
lods
cmpb
pop
and
mov
mov
adc
pop
mov
xchg
aaa
sub
repz
and
pop
sbbb
jg
push
mov
jns
les
andb
movsl
cli
mov
sub
loope
xor
rclb
jb
lahf
add
int3
sub
pop
in
ret
push
je
adc
sub
arpl
cmp
cmpsb
add
clc
mov
in
mov
sbb
pop
shr
mov
fcoms
xchg
icebp
cmpb
adc
jbe
add
pop
or
sbbb
insb
push
dec
gs
push
cmp
lret
push
cwtl
aad
cmpb
popa
sbbb
orb
lahf
adc
shlb
or
mov
in
sub
mov
cmp
iret
pop
jg
mov
lret
dec
jge
insb
mov
data16
leave
add
inc
push
dec
add
flds
imul
dec
inc
mov
sbb
mov
lock
lods
in
sti
add
repz
sub
jge
flds
cs
repz
scas
inc
pop
pop
add
fidivs
in
and
and
cmc
xchg
loopne
lcall
push
mov
adcb
xchg
xor
andb
test
cmp
jo
push
dec
cmp
xchg
mov
sbb
pushf
inc
xor
mov
leave
dec
push
add
insb
xchg
aad
xchg
cmpb
and
sub
ljmp
cwtl
inc
fwait
mov
dec
repz
or
jg
fmull
add
cli
and
icebp
orb
daa
pushl
rcrb
daa
adcl
rcll
adc
sbb
mov
inc
inc
sbb
cmp
add
insb
lret
pop
jnp
inc
mov
sbb
and
xor
aas
inc
jnp
insb
into
adc
adc
xchg
jg
sbbb
push
les
cmp
out
push
xorb
insb
or
dec
mov
clc
and
shll
sbb
data16
call
jb
push
jae
lock
xor
ret
mov
adc
cmpl
aam
hlt
xchg
inc
fisubl
push
mov
push
jns
or
loopne
enter
sub
ret
dec
nop
jae
push
in
testb
xchg
movsb
jnp
push
pop
adc
ds
mov
sahf
cmp
xchg
gs
cmc
push
mov
cli
xchg
fldl
sbb
mov
mov
cwtl
sub
push
cmp
les
add
inc
mov
sbb
aad
jo
xchg
lods
dec
arpl
fdivr
xchg
mov
pop
jns
push
sub
sbb
or
xor
iret
imul
sbb
push
je
negl
dec
inc
je
popa
xor
sti
in
xor
lods
repnz
testb
mov
inc
bound
inc
dec
pop
and
mov
les
pop
stos
mov
and
sub
sti
xchg
jecxz
mov
jae
rcll
and
out
enter
inc
push
subb
addr16
repnz
lds
mov
clc
js
test
pop
orb
pop
mov
push
cwtl
and
mov
sahf
test
mov
inc
inc
mov
add
outsl
xchg
pop
or
push
sub
or
shr
inc
sbb
add
inc
jl
ret
ja
or
xchg
cmp
cmp
aam
inc
mov
xor
andb
outsl
push
jo
fbld
or
mov
cmpsl
cs
sub
loopne
mov
add
dec
xchg
and
push
pop
sub
in
xchg
orb
jmp
jecxz
mov
pushf
or
inc
test
rcrb
daa
dec
xorb
imul
shrb
mov
adc
icebp
cmp
cmp
dec
and
data16
inc
push
jmp
fiadds
aaa
test
insl
cmpb
xchg
data16
incl
sub
xorl
dec
nop
add
bound
les
aas
dec
mov
orb
pusha
adc
jmp
mov
sbb
xor
mov
adc
pavgw
sub
push
cmpb
in
subl
xor
addl
jnp
lods
jge
adc
out
dec
subb
ret
insl
jbe
pop
in
and
xchg
xorb
sarb
test
je
push
cmc
and
outsl
inc
ljmp
push
push
push
xorb
push
addr16
enter
movq
jae
or
lret
or
cmpsb
adc
rolb
cmp
stos
andb
mov
loop
jl
sub
fwait
aam
xor
cld
cmp
jae
arpl
xorb
ja
mov
leave
lods
out
sti
or
popf
lcall
dec
stos
add
pop
sbb
jnp
push
sbb
sub
rolb
ret
or
lods
mov
sub
fs
push
cmp
jns
or
push
test
adc
pushf
andb
out
sbbb
push
js
inc
lret
setge
adc
sbb
xor
shl
rcrb
into
int
and
sub
lahf
xchg
pop
jecxz
cmp
sbb
add
mov
arpl
pop
dec
or
into
cli
sub
and
loopne
jb
adc
jl
pop
pop
inc
xlat
cmp
cmp
pop
int3
adc
sub
sahf
dec
pop
addb
leave
ja
out
add
arpl
inc
mov
ds
jl
inc
scas
add
adc
cmp
adc
inc
es
sahf
imul
mov
add
je
jnp
dec
fs
sub
stos
outsb
pop
subb
jo
jnp
cmpsl
lock
cwtl
test
movsb
sbb
cmp
push
dec
xchg
das
aas
stos
sahf
mov
pushf
xor
push
ret
jecxz
mov
cltd
inc
sbb
rcrb
push
cmp
xor
pushf
leave
sbb
test
and
inc
add
push
stos
add
movsl
mov
inc
push
mov
sahf
lds
int3
mov
ljmp
mov
xchg
push
push
and
movb
jl
inc
push
xchg
iret
test
adc
mov
sbbb
mov
jnp
popa
pop
enter
push
mov
clc
dec
idivl
jns
or
add
aaa
jg
pop
fisttpl
lds
jae
popa
dec
push
cmp
sbb
dec
xorb
test
cmp
je
xlat
addb
sbbb
cmp
mov
popf
ret
dec
test
sbbb
fwait
lcall
mov
sub
cmpsb
es
mov
stos
cmp
add
jbe
popa
mov
sbb
aad
mov
xcrypt-ecb
cmpsl
dec
aaa
jb
push
xchg
outsb
or
fcoml
pop
ret
xchg
je
cs
add
dec
fdivrl
mov
lods
or
add
mov
and
cmp
and
xor
adcb
push
pop
inc
cmc
inc
sbbb
jo
popf
jnp
adc
popa
jae
sub
stos
paddsb
adc
and
fisubrl
js
daa
cwtl
arpl
push
or
orl
ss
popl
jmp
movb
and
fwait
jecxz
cmc
ljmp
clc
push
div
jg
lods
cmp
popa
cmpb
in
adc
mov
xorb
sti
inc
in
pop
add
movsl
push
mov
and
into
jo
loop
data16
mov
cmp
loop
ret
cmpb
dec
xchg
mov
adcb
pop
pop
jnp
add
xor
mov
pop
mov
sbb
xor
inc
push
cli
imul
adc
and
cmc
sbbb
leave
xor
xchg
andb
xchg
stos
sbb
jno
int3
ret
cmc
mov
fdivs
mov
sbb
outsb
movl
pop
cmpsl
jne
xorb
test
cltd
test
add
negb
jb
mov
jp
pop
mov
or
fs
xchg
stos
faddl
jbe
sbbb
pop
or
add
xchg
in
mov
bound
pop
clts
mov
and
push
in
xor
adcb
out
cmp
inc
subb
inc
je
incb
cmp
push
les
xorl
andb
sub
subb
mov
cmp
gs
dec
jmp
std
inc
dec
push
aam
andb
xor
jge
xlat
and
pop
lods
adcb
arpl
adcb
int
je
sub
add
add
jle
sbb
incb
xlat
xchg
sub
stc
add
or
xor
addb
test
sbb
stos
cmpsb
call
pusha
insb
xchg
rcrl
mov
out
in
inc
xor
xchg
jle
dec
adc
out
fsubrl
adcb
dec
lret
sbb
adc
adcb
fdivp
xorb
es
mov
fs
jo
sbbb
and
jno
popa
addb
pop
fistl
add
rcr
call
sub
jb
mov
pop
xor
rep
sbbb
cmp
call
cwtl
lcall
cvtps2pd
xchg
out
fs
faddl
cmpsb
and
dec
pop
addb
std
stos
insl
je
hlt
and
dec
xchg
sub
jnp
shll
sbb
or
inc
add
or
jecxz
fisttpll
iret
imul
cmpb
rcrb
test
adc
push
mov
mov
fstpt
mov
pop
ds
pop
jmp
xlat
in
subb
xorl
insb
sbb
lods
outsl
jae
push
popa
int3
push
push
adc
cmp
adcb
ret
push
mov
out
jle
lds
push
lea
iret
addl
ficoms
dec
cmpb
je
out
addb
xchg
cmp
bound
pop
cmp
xchg
pop
inc
xor
adc
aam
lahf
push
outsl
mov
cli
cmp
or
jp
jle
cmc
fiaddl
ljmp
sub
cmovne
jg
and
int3
loope
xor
lcall
js
jge
pop
test
sbb
push
sub
mov
stos
enter
and
bnd
inc
ljmp
sbb
in
xor
jle
out
fidivrs
ja
repz
mov
daa
sbb
or
ja
jle
adc
push
testb
hlt
push
loopne
push
pop
mov
mov
loope
lcall
push
sub
adc
cld
mov
push
lret
jbe
jecxz
in
push
push
or
adc
inc
popl
scas
cwtl
pop
dec
mov
and
rcrl
or
mov
push
addb
rcl
aaa
pop
mov
bound
xchg
nop
mov
sub
sarl
inc
mov
cmpsb
jb
or
jo
xchg
jbe
and
add
push
mull
pop
push
retw
stc
nop
sbb
mov
xor
cltd
outsb
cli
jns
jno
jnp
adc
ljmp
and
std
sbb
out
aad
pop
lret
adc
out
stos
mov
cltd
push
pop
lock
je
dec
cmpsb
mov
pop
cltd
lods
push
jne
mov
pop
arpl
imul
dec
mov
push
pop
enter
jge
movsl
cmpsl
add
sbb
mov
and
cltd
push
xorl
xlat
test
jmp
add
lcall
xchg
repz
xor
ret
mov
pop
mov
mov
dec
icebp
cmpsl
imul
outsw
lcall
orb
outsb
enter
sti
pop
daa
add
lcall
inc
jl
shr
sub
out
xor
mov
out
jmp
enter
jb
and
ja
adc
xchg
outsl
lret
les
pop
or
ja
or
xor
inc
add
movb
sar
lcall
int3
insb
ljmp
inc
insl
mov
dec
push
jns
lock
jmp
popl
sbb
add
std
mov
jno
mov
aad
repz
idivl
sbb
push
mov
add
loop
iret
inc
cwtl
test
loopne
les
adc
das
test
mov
jae
jp
xchg
in
ss
mov
dec
or
pop
add
and
cltd
xor
xchg
and
inc
sub
pop
lcall
fidivrl
fcomps
mov
sbb
mov
js
flds
adc
fbstp
out
gs
insb
dec
adcb
in
rol
icebp
jmp
js
mov
in
outsl
pop
add
insb
add
mov
and
push
es
insl
popa
bound
iret
pop
pop
test
dec
out
cli
bound
jb
or
sarb
and
fldl2e
and
mov
ss
lock
and
repnz
xor
cmp
jo
xchg
xchg
inc
cmp
cmp
cli
cwtl
jl
data16
cmpsl
inc
sbb
cli
in
ss
pop
out
cli
push
inc
out
es
mov
jbe
pop
pop
fsub
jle
pop
jg
push
scas
adc
lods
fisubl
in
cmp
dec
push
mov
into
arpl
adc
xor
pop
sub
leave
and
add
rcll
das
mov
addps
jecxz
les
sbb
push
subb
sub
dec
mov
sub
cli
jne
es
stc
ds
in
jo
addr16
jno
ja
xchg
std
jl
mov
pop
jbe
push
pop
mov
es
jle
orl
and
sar
sub
pop
cmp
jo
mov
cmp
imul
mov
cmp
pop
cmpb
gs
push
dec
push
and
inc
and
xorl
loopne
das
out
mov
add
movsl
sbbl
inc
sub
hlt
push
dec
frstor
pop
je
inc
sub
jnp
add
ljmp
and
repnz
pop
iret
sub
cmc
mov
jns
out
dec
add
outsb
lds
lcall
inc
stc
int3
and
adc
and
add
fdivrl
jge
cmp
stc
outsb
xchg
push
add
jl
test
decb
xchg
cltd
xchg
in
pop
xor
ja
int3
cld
lcall
xchg
mov
in
sub
lock
pop
popa
shrb
push
push
push
inc
pop
imul
mov
cmc
lcall
test
jp
loopne
bnd
pop
dec
lock
cltd
and
xchg
pop
stc
push
push
jle
xor
test
mov
or
jle
mov
dec
outsb
popl
or
sti
in
jb
insl
mov
sub
orl
je
outsb
imul
pop
jns
out
in
lahf
in
das
int3
add
enter
incl
xlat
cltd
lcall
mov
int
cmp
mov
ljmp
fdivs
ja
pop
fsubrp
cli
pop
cmp
repnz
xor
mov
fimull
js
mov
or
inc
cmp
adc
jne
mov
ret
adc
js
inc
test
cmc
jns
mov
mov
mov
and
pop
mov
jo
xchg
hlt
jne
jnp
mov
pop
pop
and
lcall
jb
mov
sbb
jbe
xchg
sub
pushf
test
iret
bound
jle
push
push
fisubrl
and
sub
push
sbb
xchg
lock
stos
dec
fnstcw
mov
push
jne
lods
jmp
and
dec
mov
xchg
adc
lock
stc
push
adc
mov
nop
jae
inc
jp
mov
fimull
jns
push
mov
cmp
lahf
jne
mov
in
fldl2t
in
test
push
push
inc
subl
sub
notb
insb
leave
clc
add
in
test
cltd
fstpt
loop
jb
inc
jno
cmp
lcall
shr
in
imul
insl
lds
mov
dec
loopne
push
hlt
je
xor
ds
outsb
cltd
xchg
ds
mov
repnz
mov
nop
xor
movsb
jecxz
jbe
icebp
std
rorl
sbbb
sub
or
repnz
ja
leave
mov
lret
loopne
addb
xchg
repz
pushf
pop
in
mov
aas
sub
shrl
mov
push
jge
sbb
xchg
ljmp
hlt
rclb
outsl
jns
test
data16
xchg
mov
cltd
pusha
mov
push
sbb
les
mov
add
adcb
pop
mov
jle
sub
ror
js
bound
les
lock
cmpsl
adc
push
in
mov
inc
jmp
sub
mov
inc
mov
sub
add
xor
loope
dec
push
cltd
xor
in
fiaddl
leave
pop
js
jo
icebp
mulb
es
push
test
pop
in
das
jo
push
xchg
cltd
movsl
js
jne
xchg
inc
mov
mul
sub
jmp
lret
lret
xor
jbe
xchg
pop
lcall
inc
mov
pop
inc
sub
pop
mov
in
and
mov
cli
ret
adc
mov
dec
xchg
sub
push
cmc
icebp
aas
push
xor
ret
mov
mov
xlat
movsl
mov
shll
in
lock
xchg
and
movsl
repnz
dec
lcall
jp
mov
cmp
sar
out
pop
add
pop
dec
cmpsl
jae
pusha
cmpsb
fwait
jno
mov
outsl
repz
mov
scas
adc
int3
lcall
xchg
int3
mov
and
push
push
adc
xchg
test
sbb
push
mov
mov
jp
sbb
out
ds
daa
xor
cmc
dec
in
xchg
repz
stc
dec
out
inc
sbb
hlt
inc
outsl
and
jo
push
xchg
jle
sub
pushl
inc
int3
mov
aas
cmp
enter
cmp
in
iret
pop
scas
jo
jp
sti
outsb
sahf
sub
pop
add
sbb
or
bswap
jnp
jns
add
xorb
inc
fnstenv
mov
jno
hlt
in
jl
and
pop
addb
add
int3
scas
xor
rcr
inc
fimull
ret
stc
cmp
ficompl
std
inc
sbbb
xor
or
ss
arpl
jmp
inc
xchg
and
mov
or
cmpb
cld
aas
cmpb
cmp
pushw
sub
les
adc
orb
sti
xchg
stos
aad
jb
inc
cwtl
lcall
lds
dec
orb
out
xchg
js
add
outsb
cmpb
mov
in
xorb
sub
orb
ja
addb
sbb
iret
loopne
xchg
mov
pop
je
ret
mov
fisttpl
out
ds
leave
cmp
xlat
adc
xor
sub
cwtl
je
push
lcall
xchg
xchg
push
adc
orb
loope
or
adc
jmp
les
adc
outsb
js
leave
or
push
popf
jb
adcb
mov
ja
push
cli
arpl
test
jne
push
sbb
out
loope
je
xchg
mov
push
cmp
movsl
popf
sub
insb
cmpsb
je
cmpb
add
adc
cwtl
push
addl
mov
or
lods
fsubrl
es
loop
icebp
jae
pop
cmp
call
cmp
scas
test
andb
mov
push
push
adc
add
mov
jcxz
add
adc
jne
ja
nop
sahf
jnp
scas
aas
push
jmp
jmp
pop
bound
roll
aam
lods
lds
jle
adc
int3
cmpsl
cmp
das
iret
jnp
lret
fs
sbb
int
adc
cmc
ljmp
das
shll
adcl
xor
imul
aaa
fs
sub
push
dec
sbbb
add
sbb
jno
frstor
mov
jp
mov
xorb
dec
xchg
orb
cld
cmp
pusha
int
orb
movsb
gs
or
rorb
stos
mov
add
mov
mov
dec
jg
int3
mov
adc
xchg
and
add
inc
aas
dec
mov
jo
dec
shl
data16
push
fcmovu
mov
push
sub
cmpb
jl
dec
rclb
ror
lock
sub
adc
stc
subb
shll
lds
and
loope
xchg
cmp
inc
xor
sub
xchg
mov
pop
or
xor
fpatan
mov
mov
cmp
mov
sub
stos
ret
out
in
jg
fs
xor
dec
loope
sbb
push
pop
subb
inc
cli
repz
int
aad
mov
loop
jle
dec
ret
test
add
mov
xor
fisttps
add
xor
outsl
jl
pop
ds
fsts
dec
xorb
adc
cmpsb
push
out
clc
xchg
or
xchg
cs
sub
pop
xor
sbbb
adc
ljmp
inc
push
pop
testl
icebp
mov
outsl
push
xchg
enter
mov
pop
loop
jne
xor
xor
sub
xor
mov
jns
fs
orb
xchg
and
popa
mov
pop
aaa
imul
aad
mov
aam
scas
adc
add
jecxz
jnp
sbb
scas
into
mov
jge
inc
fdivrs
and
and
jno
mov
sti
aad
adc
and
adcl
jmp
jnp
mov
mov
inc
addb
repz
sub
aaa
out
addr16
sub
daa
inc
adc
mov
push
add
daa
in
jmp
lea
mov
stc
aas
mov
repnz
xchg
sub
test
mov
lret
pop
mov
pop
divb
add
xchg
inc
and
cmp
fwait
lret
pop
andb
cli
xlat
jne
jecxz
sbb
lock
and
pop
cmpb
mov
aas
inc
cmp
xchg
lods
ljmp
jg
jbe
xorb
repnz
test
movb
jae
or
push
sbb
xchg
pop
jp
dec
inc
cwtl
push
stc
mov
xlat
fiaddl
loop
adc
ja
inc
stos
cwtl
push
add
sub
je
pop
icebp
add
call
repnz
stos
inc
adc
hlt
mov
je
jmp
jb
negb
jp
or
xor
mov
or
xorb
fsubr
cmp
ja
mov
jle
sbb
dec
ret
and
adc
sahf
sbb
pop
pop
xchg
jnp
ja
add
fildll
xor
mov
in
inc
leave
xor
ss
dec
mov
mov
add
cmc
int3
test
rcll
jle
outsb
mov
mov
test
addr16
test
sub
lret
mov
dec
fdivrs
mov
out
nop
pop
xchg
xorb
inc
popf
push
push
hlt
dec
loopne
movsl
jo
jbe
mov
repz
xor
in
arpl
stos
mov
xlat
inc
faddl
ret
popa
je
xor
mov
mov
pop
loope
sub
fwait
lds
xchg
xor
fs
jb
cmp
push
xchg
sbbl
xor
sbbl
jge
mov
out
jnp
repnz
sub
loopne
movsb
jge
add
stos
data16
es
push
jnp
add
inc
lds
adc
roll
call
stos
int
pop
xor
int3
popa
push
mov
add
aam
fisubs
add
push
popf
adc
hlt
stc
mov
cmp
dec
dec
clc
stos
add
mov
inc
add
cmpsb
sub
je
xchg
sub
call
inc
xchg
bound
data16
sahf
subb
test
fwait
push
subb
dec
in
push
roll
cmpl
repz
notl
adc
mov
adc
leave
xchg
mov
mov
cmpl
mov
pop
pop
test
outsl
pushf
jae
rolb
addr16
int3
adc
sbb
mov
shll
pop
jmp
cmc
xor
into
jle
xchg
mov
jne
sbb
subb
cmp
inc
aam
cmpsb
ja
loopne
lahf
sahf
jle
ljmp
cmc
popf
or
add
les
movsl
fidivl
xchg
cli
adcb
mov
push
imul
jns
or
cmp
and
pop
push
in
hlt
test
orb
pushf
int
icebp
stos
enter
pop
fldt
inc
push
lret
repz
inc
sub
ljmpw
push
add
shrl
fdivl
jg
mov
ret
rcrb
mov
shlb
cmp
enter
lds
adc
pusha
loop
addr16
divb
push
cmp
sub
sahf
testl
js
and
or
ret
testb
ljmp
jg
orl
xlat
push
test
repnz
fisttps
xor
push
push
fisubs
pop
cld
test
inc
orl
cli
mov
ret
cmpb
sbb
pop
add
and
sbb
loop
sbb
ret
movsl
mov
cmp
and
push
mov
mov
jbe
mov
in
mov
cltd
pop
mov
cmp
and
add
pop
test
cwtl
jecxz
enter
repz
pop
cltd
daa
cld
jle
cmc
aad
xchg
sbb
das
add
xchg
cmp
aam
mov
jecxz
sti
lahf
fistps
pop
out
in
mov
imull
test
std
notb
dec
lret
scas
lea
in
jo
xchg
imul
push
pop
xor
cmp
jno
and
dec
cmp
or
fwait
mov
sub
data16
stos
outsb
ret
in
inc
push
test
pushf
jae
and
sbb
mov
or
shl
cli
cs
test
sbb
sub
mov
sbb
add
jmp
and
mov
or
add
notb
inc
inc
fnstsw
dec
lcall
lods
push
rolb
xor
in
shrb
dec
loope
cli
jmp
mov
xchg
xchg
insl
mov
cmp
xor
cld
adc
insb
rclb
out
fiaddl
or
dec
xor
call
sbb
pop
inc
pop
jle
scas
fwait
adcb
shll
inc
insb
lcall
repnz
sbb
push
movsl
testb
mov
daa
or
cwtl
fs
test
and
jns
inc
xchg
push
cmp
xlat
cli
pop
xor
cwtl
nop
push
push
out
sub
fisubs
aam
shrb
and
mov
mov
out
test
test
test
pop
mov
leave
cmp
cld
pop
inc
sbb
xor
jb
cs
scas
mov
sbb
push
or
add
and
sub
xchg
sub
in
ja
sti
or
jae
popf
in
shrl
ret
jb
clc
cs
and
fcoms
add
sub
mov
jo
or
xlat
cmp
call
sub
pop
add
and
fdivs
push
mull
cmc
pop
jle
sub
xchg
repnz
cmp
cwtl
or
orl
xor
and
fisubrl
scas
fstl
xchg
cltd
rorl
add
mov
dec
insb
cmc
xchg
mov
gs
fildll
jp
and
dec
jae
shl
fsubrs
lcall
sbbb
lods
xchg
ds
xor
jmp
jmp
xor
sub
xchg
adc
out
lret
dec
xchg
or
ret
aaa
cmp
xor
xor
xchg
stos
sbb
inc
xlat
addb
mov
jmp
call
cmpsb
cli
xchg
adc
fisttpll
or
xchg
dec
insl
mov
cmp
insb
xchg
jns
test
lcall
xchg
lret
sub
cwtl
and
lcall
push
and
push
or
add
or
xor
cmp
mov
cmp
jp
test
or
push
lock
iret
and
mov
jae
or
and
pop
hlt
dec
adc
out
jns
lcall
or
call
jo
jecxz
cmpb
pop
xorb
or
sub
lods
fsubrl
rorl
mov
ja
sbbb
orb
test
subb
les
inc
leave
dec
in
dec
jne
dec
into
data16
out
mov
rcll
sub
mov
jnp
insb
push
scas
push
jb
cli
faddl
xchg
cmp
lods
fld
je
or
jnp
test
mov
mov
bound
daa
neg
stc
cli
imul
sub
ljmp
cltd
and
cmp
out
inc
and
outsl
jge
pop
and
push
jl
ja
fwait
mov
movsb
lcall
mov
adc
push
push
add
pushf
jge
int
sti
push
shr
bound
or
orb
testb
imul
aas
int3
inc
insl
in
pushf
push
cmpb
push
orb
jge
pop
mov
jecxz
sub
or
jae
fbld
or
adc
mull
xchg
jns
jne
addr16
orb
jp
ljmp
sub
jle
add
add
ret
adc
enter
fwait
out
insb
lret
test
scas
jnp
das
mov
fists
nop
push
adcl
leave
mov
xor
xor
cli
test
xchg
stc
xchg
mov
dec
inc
adcb
push
sbb
nop
sbb
jae
testl
pop
and
push
je
test
imul
cs
add
orb
xchg
iret
addr16
sub
push
xor
arpl
and
fwait
ret
xchg
dec
add
or
in
cmp
out
push
cmp
dec
cmp
inc
jns
sbb
out
iret
dec
into
dec
inc
xchg
incl
ljmp
mov
mov
xor
jl
lods
pop
sub
add
call
jbe
cmpsb
jecxz
andl
push
adc
mov
cli
orb
test
mov
xchg
mov
punpckldq
gs
jle
lods
shlb
iret
xor
je
jb
leave
xchg
mov
add
shr
pop
sub
cmpsb
subb
ds
sub
inc
pop
jle
inc
sahf
cmpsb
mov
jbe
mov
ja
out
mov
cmp
adc
data16
mov
jmp
into
popf
and
cltd
inc
lcall
lea
es
cmp
lock
stos
jo
mov
cmp
pop
jg
add
aas
dec
sub
insb
notb
test
ja
add
mov
ds
test
sbb
xor
aaa
dec
ss
insb
popa
in
xlat
pop
in
les
lret
rcll
subl
adc
pop
mov
jp
jno
movsb
test
incb
jae
lds
out
jmp
ds
mov
xor
or
js
push
cmp
daa
push
add
mov
icebp
xchg
cmp
or
lcall
enter
or
decb
scas
shlb
cltd
xchg
or
cmpsl
inc
pop
testb
push
jb
iret
jl
imul
cmp
push
sbb
sbb
xor
push
jle
mov
imul
repz
sbb
data16
and
jns
std
addl
inc
push
mov
sbb
aas
sti
and
dec
push
pop
fstl
pusha
ret
out
jecxz
hlt
fmulp
or
ss
xchg
adc
movsb
popf
xor
mov
dec
aas
lds
leave
xor
out
into
jno
iret
cs
bound
xor
pop
imul
lock
pop
and
xor
xchg
adc
xchg
mov
cmp
and
sbb
scas
pop
jnp
add
ret
imul
sub
movsb
add
not
mov
xor
and
insb
inc
push
loop
mov
push
and
loop
dec
aaa
pop
dec
inc
cli
data16
insb
mov
sbb
dec
inc
fldl2e
dec
sub
cmp
xchg
mov
pop
add
and
imul
jb
mov
lcall
fidivs
icebp
cli
mulb
pop
inc
addr16
push
dec
mov
repz
movsl
mov
lcall
out
rol
and
popf
xchg
aas
mov
push
inc
outsl
xor
mov
and
sub
dec
stos
pop
mov
and
or
push
ds
pop
test
andb
xchg
int3
push
push
add
lods
hlt
pop
xchg
out
pop
adc
jle
and
pushf
lret
lods
loop
daa
sti
icebp
push
mov
jle
xor
in
add
cmc
ds
fnsave
stos
sub
jle
sbb
sti
mov
inc
sbbl
mov
insl
es
test
fistps
pop
or
sub
jns
xor
mov
ficompl
lcall
cmp
lock
stos
inc
xchg
pop
in
mov
test
repz
sub
add
and
test
arpl
sahf
adc
lret
push
outsl
lods
cli
out
sbb
inc
cltd
xchg
xor
mov
lods
cmp
inc
mov
daa
push
mov
inc
sahf
add
xchg
and
inc
lcall
sbb
and
stos
scas
pop
shl
mov
mov
repz
loopne
add
add
enter
js
mov
inc
lcall
dec
adc
xor
jns
fwait
dec
mov
mov
inc
xor
in
lcall
insl
push
repz
add
and
dec
outsb
aaa
adc
jg
in
jo
inc
sub
dec
imul
dec
mov
jbe
cmp
out
xor
in
sub
mov
nop
push
jmp
pop
cs
pop
jg
cltd
or
fs
je
mov
mov
push
adc
push
nop
mov
inc
ficoms
outsl
and
popa
test
adc
or
adc
and
sub
movsb
pop
subb
cmp
cli
xlat
adc
add
or
sbb
jmp
mov
test
jbe
mov
mov
jb
ljmp
push
test
push
in
push
out
aam
lcall
mov
push
rcrl
lods
je
insb
jmp
nop
add
mov
orl
mul
sub
imul
adc
addl
pop
sti
xchg
mov
loop
adc
ficompl
or
cmp
add
mov
inc
ret
icebp
out
jge
and
mov
xchg
jns
mov
sbb
adc
negl
jl
and
add
jo
ret
push
or
pop
lahf
sub
jo
jmp
sub
lods
cs
sti
add
lcall
adc
icebp
das
or
jmp
jns
inc
add
js
lods
repnz
cltd
mov
out
sub
and
fildll
gs
fmulp
inc
add
das
dec
and
mov
addl
adc
xor
xor
movsl
adc
mov
subb
push
jae
xor
fisubl
sub
fmull
add
orb
sbb
stc
mov
inc
addl
jg
imul
sbb
add
jecxz
subb
pop
and
inc
clc
xchg
add
sbb
pop
jmp
inc
mul
adc
or
mov
mov
and
std
loopne
imul
inc
pop
xor
in
add
xor
add
dec
xor
cmp
xor
insb
jb
jne
mov
nop
mov
cmp
pop
push
push
cmp
outsb
push
xorl
jp
jae
cmp
xchg
subb
orb
sbb
lahf
push
ja
orb
sub
outsb
jne
dec
xchg
addb
shlb
sub
in
and
jle
jg
les
jp
add
or
sbbb
scas
shlb
cmp
movsl
mov
dec
out
xor
ss
adc
mov
dec
hlt
je
clc
mov
and
xor
mov
push
mov
andb
xchg
dec
add
sbbb
sbb
in
push
dec
sub
adcb
pusha
xor
xchg
xchg
mov
cmp
mov
adcb
sbb
pop
xchg
add
out
xor
sbb
cmpb
adc
xchg
push
xchg
cmpsl
cmp
test
inc
into
mov
lods
imul
fstp
repz
mov
movsb
xlat
fwait
pop
enter
xorb
pop
xchg
or
mov
inc
pop
outsb
jnp
dec
mov
mov
push
xor
pop
into
shrl
jno
rolb
cmp
leave
ljmp
push
xchg
mov
xchg
cltd
adc
xlat
fcomps
cli
cwtl
enter
mov
adc
cs
pop
jae
jmp
enter
inc
pop
in
or
mov
jecxz
out
and
jge
ret
xchg
in
mov
shr
ret
ds
xorl
pop
mov
and
andb
adc
test
sbb
xlat
cmpsb
mov
xor
and
mov
inc
fsubrl
sub
iret
mov
jmp
mov
mov
jecxz
cmp
ljmp
xorb
sahf
push
incb
push
les
sti
jp
cmpb
add
mov
mov
sbb
jg
sbb
push
fs
mov
orb
shlb
add
inc
ret
insb
and
cmc
fisttpl
cmp
sub
mov
dec
repz
mov
push
loopne
jns
jns
sbb
push
das
jle
stc
scas
into
cltd
pushaw
rolb
cmpl
mov
es
xor
mov
loop
xchg
and
scas
filds
mov
mov
cmpsl
pop
test
imul
es
jge
sub
je
outsb
xor
stc
stos
pop
and
stos
jb
lods
push
mov
idiv
sub
jb
idiv
push
push
es
loopne
dec
filds
cmc
xchg
in
mov
push
jns
mov
cmpsl
sbb
xor
int3
mov
dec
or
movsb
jns
lcall
mov
jle
ret
jne
inc
sub
gs
inc
pop
aam
lods
sbb
ja
loopne
div
inc
jp
je
pop
icebp
jb
mov
enter
ret
mov
out
pop
lret
imul
in
cmc
jbe
arpl
cmpsb
push
xchg
in
pusha
rorb
cmpsl
shrb
cld
mov
xor
and
add
mov
cmpl
repnz
in
ja
jmp
xor
sub
in
test
xor
pop
dec
in
and
ret
xchg
adc
test
pop
pop
dec
dec
jl
sub
dec
add
in
repnz
ja
ret
sbb
lock
dec
sub
movsb
adc
mov
imul
inc
jp
cmc
or
xchg
jg
sub
push
adc
enter
aas
dec
inc
loopne
or
int3
lds
ss
sub
xchg
cli
pop
and
aad
push
or
dec
rol
and
xchg
dec
xchg
xchg
xchg
lods
cwtl
pushl
lcall
mov
test
sahf
fwait
daa
xor
lcall
orb
hlt
in
aad
lock
stc
stc
test
push
test
inc
cltd
sti
dec
int
push
in
stc
xlat
and
lcall
bound
addr16
cmpsb
das
loop
outsl
cltd
jo
aad
repz
outsb
cmp
cltd
sub
int3
dec
in
push
dec
jp
popa
in
or
mov
mov
adc
stos
pop
lret
repnz
cmp
aad
js
mov
mov
stos
pop
inc
and
fdivrs
sar
push
mov
and
sti
mov
xor
jle
sub
xchg
xchg
test
addr16
mov
xorb
int
pop
test
jo
and
loop
pop
pop
filds
xchg
cmp
outsl
lcall
push
cli
psllw
dec
cwtl
jno
cwtl
cmp
xor
cmp
mov
pop
inc
add
dec
idivl
aaa
mov
mov
jg
sbb
mov
imulb
jmp
push
and
and
fsubs
cmp
movsl
push
jecxz
push
lods
sub
lret
mov
enter
sbb
jl
cmp
mov
movb
je
and
sahf
push
inc
into
mov
push
lcall
add
mov
stc
fldenv
cmpsl
out
les
dec
in
mov
lcall
inc
iret
push
add
and
in
mov
jl
lret
jp
cmp
mov
insl
aam
push
jmp
lret
addr16
imul
pop
scas
ds
insb
nop
imul
mov
and
mov
int
xchg
pop
mov
inc
sub
out
test
mov
out
mov
add
int
in
pushf
in
adc
ljmp
jle
xchg
sbb
outsl
cli
enter
fisttpll
xchg
in
inc
push
out
les
in
jns
mov
or
lcall
cld
sbb
cmp
ljmp
and
popf
das
ja
push
xor
std
ret
or
add
outsb
adc
jae
out
mov
add
jecxz
xor
clc
es
fs
mov
and
pop
lea
lcall
insb
cs
cmp
cwtl
jo
push
imul
add
sbb
das
mov
movsb
jl
inc
cmp
sbb
scas
arpl
rcll
flds
jae
mov
test
sbb
add
jne
cwtl
push
adc
jbe
cltd
mov
lcall
push
outsb
push
bound
xchg
imul
addr16
jnp
jbe
mov
int
stos
inc
sbbb
inc
icebp
sbb
push
sub
cs
leave
popf
xor
in
pop
int3
push
push
mov
stos
sub
movsb
sbb
add
in
in
push
push
sbb
jbe
loope
mov
jbe
stc
cltd
push
rolb
and
out
mov
loopne
jne
xchg
cmp
popa
pop
jg
repnz
cmp
jb
addb
shrb
das
sbb
xor
je
lock
lock
int3
pushf
pop
or
into
int3
cmovo
inc
je
mov
lcall
pop
pop
popl
lock
cltd
popf
sahf
mov
repz
mov
aaa
cwtl
clc
cmp
dec
inc
scas
cmp
loopne
sub
push
inc
and
sbb
bound
sbb
icebp
mov
xor
adc
jecxz
lods
inc
add
dec
pop
data16
iret
jmp
in
aad
push
dec
push
repnz
xchg
lcall
and
aad
push
pop
fwait
inc
orl
subl
jno
inc
bnd
js
stc
outsb
push
in
outsl
mov
mov
jge
mov
ja
mov
cltd
faddp
and
insl
dec
lcall
sub
sub
mov
and
ja
lret
xor
lods
xchg
mov
cmp
xchg
cmp
mov
push
dec
daa
mov
pop
sub
xlat
imulb
in
psllq
cltd
xchg
jmp
iret
ret
lahf
xchg
jle
sarb
ja
aam
mov
fwait
insl
jecxz
or
sub
sub
testb
rclb
sub
and
cmp
lea
push
mov
sub
push
push
nop
aaa
xor
xor
inc
les
rcrl
jnp
adc
sbb
pop
jns
mov
mov
jb
push
into
outsb
mov
out
stc
movl
ficoml
ret
scas
insl
push
xorb
pop
add
lock
out
les
subl
lretw
pop
scas
cmc
and
daa
mov
sub
orb
push
cmp
push
push
mov
and
aam
cmp
push
jns
outsb
xor
push
popf
fadd
xor
lcall
sbb
out
or
das
jns
movsl
sbb
jge
push
xchg
enter
lods
imul
mov
xchg
aaa
sub
fnstsw
jl
and
inc
js
add
ds
cltd
cmpsl
xchg
xchg
push
and
movsl
xchg
mov
pushw
xor
rolb
lret
cmpsb
dec
xor
out
cltd
push
and
rolb
mov
mov
ljmp
sub
lret
or
pop
and
idivb
cmp
ret
mov
ret
mov
xor
pop
pop
add
aas
inc
outsb
sbb
dec
push
clc
mov
scas
mov
in
lret
mov
jns
cltd
and
subb
mov
pop
pop
mov
cmpsl
imull
aad
ds
outsl
pop
jns
xor
jbe
inc
pusha
xchg
pop
mov
ds
pop
lods
inc
and
inc
fstpt
jle
cli
rcll
sbb
xchg
cmp
daa
notl
cwtl
sbb
stc
xor
ret
jb
cmp
jle
sarb
pushf
leave
data16
js
es
jp
cmovo
mov
xorb
lds
aas
lods
std
mul
repnz
xchg
testl
inc
jo
enter
in
dec
adc
cmpl
mov
fldl
adc
lcall
inc
add
jo
mov
jecxz
loope
or
jg
out
mov
int3
test
ret
and
push
test
scas
sbbb
fisttpll
sub
clc
out
jno
cmpsb
push
cmp
punpckhwd
xchg
sub
scas
loop
lret
adc
inc
les
or
insl
cmp
iret
mov
jge
jae
cmp
dec
add
pusha
test
sub
xchg
aad
in
pop
rclb
or
addb
mov
jp
aad
dec
and
lds
dec
cmpsb
mov
mov
test
add
ja
addb
jns
call
scas
ds
incb
aas
dec
inc
push
rclb
inc
xorb
pusha
mov
jno
jnp
or
sbb
jg
bound
push
out
mov
data16
push
and
xchg
adc
rclb
testl
pop
ljmp
jl
sbbl
sbbb
inc
dec
dec
testb
es
or
and
arpl
ret
jnp
ret
mov
xlat
jnp
ficomps
aad
int
jo
subb
insl
add
mov
push
cmpsb
and
sub
popf
cmpb
sub
std
les
and
lea
ret
inc
lahf
sub
jae
fs
dec
dec
sub
xor
call
stos
adc
push
arpl
ret
loope
fidivrl
setns
dec
mov
push
scas
add
outsb
mov
jle
dec
dec
mov
jge
adc
ret
xchg
xor
outsl
cmpsl
outsb
xlat
ret
or
inc
cmc
add
addb
cs
in
push
jg
negl
push
in
ret
hlt
adcb
les
imul
rolb
sti
insl
jae
call
xchg
adc
in
xlat
adc
add
fadd
mov
out
cmpb
adc
xchg
cmp
xlat
mov
mov
je
mov
xorb
push
adcb
lret
push
ret
dec
repz
ds
mov
addl
pop
xchg
mov
adcb
mov
xchg
idivb
inc
sahf
arpl
push
ret
sahf
adc
or
sub
lock
push
mov
adcb
fiaddl
mov
outsl
aam
xchg
sub
scas
mov
mov
orb
fs
dec
cmc
cwtl
add
pop
cmp
xchg
xorb
pop
test
mov
pop
flds
insb
jp
lock
fcomi
in
pop
in
adc
xor
cltd
out
loopne
sbb
jbe
xlat
dec
sbb
bound
shll
jmp
sub
test
push
push
mov
or
and
xchg
je
cmpsl
or
sub
inc
int
into
cld
outsb
mov
int3
decb
add
mov
loope
push
xchg
cmp
call
aaa
jnp
pop
mov
iret
ret
push
arpl
sub
shlb
out
inc
aas
cmp
mov
fstl
ds
add
std
mov
mov
xchg
addb
adc
data16
lsl
movsl
add
test
int3
aaa
ret
stc
ss
inc
mov
push
sbbl
adcl
mov
cld
imul
int
pusha
add
ss
mov
sub
jecxz
or
loopne
and
ss
in
bound
sbb
xor
mov
mov
aam
or
insb
or
mov
repz
push
xorb
mov
mov
inc
loopne
cmpsb
div
into
pushf
dec
add
ljmp
sbb
push
xchg
jns
sub
jns
cs
mov
pop
push
shl
xchg
push
push
cmpsb
sub
jmp
inc
aas
dec
lcall
sbb
xor
add
xchg
sbbb
fdivl
cltd
jne
inc
inc
lcall
and
bound
push
repnz
and
jbe
cltd
stc
dec
cwtl
lcall
test
xchg
jnp
outsb
shrb
sub
cwtl
stos
jecxz
mov
push
stc
mov
mov
pop
out
xchg
sti
mov
inc
std
adc
sbb
stos
or
push
jns
out
xchg
js
dec
pop
xchg
cmpsl
pushf
mov
sahf
scas
out
inc
arpl
jp
and
jge
pop
or
test
sbb
xor
pop
ljmp
lahf
xor
push
cmp
daa
ljmp
push
dec
pop
sub
out
enter
mulb
and
mov
sbb
and
jno
mov
and
lock
movsb
push
shlb
loope
repz
cmpsb
push
mov
jecxz
mov
pop
ret
imul
xor
stos
jb
pop
sbb
int
mov
and
cltd
or
sub
jp
sub
ror
and
inc
js
cltd
adc
gs
lods
cmp
xchg
dec
push
sarl
loope
add
xor
jecxz
imul
cli
movsw
leave
inc
repnz
sti
cmp
xor
push
mov
jb
aam
jae
dec
sbb
js
rcll
xchg
cmpsb
std
test
enter
jb
push
js
out
mov
push
call
sub
test
sub
adc
sub
enter
in
dec
sbb
xor
cmp
inc
xchg
mov
mul
test
icebp
jae
sbb
inc
add
jmp
xchg
xchg
xchg
or
push
jle
jbe
mov
outsb
mov
insl
aas
adc
fidivrs
aam
cmp
push
jne,pn
xchg
cmp
mov
lret
loopne
lods
icebp
orl
lods
out
mov
subb
inc
xlat
xor
cmp
dec
sub
jle
orl
ret
andb
addr16
lods
rorb
sbb
js
push
add
adc
dec
mov
fcompl
lods
rcrl
xchg
fildl
push
cltd
sahf
js
inc
aaa
xorb
jmp
mov
and
pop
push
orl
adc
push
bnd
xor
inc
mov
sbb
push
xchg
add
frstor
or
std
cltd
lcall
inc
int
sbbl
outsl
and
repnz
and
mov
ror
fdivs
adc
push
pcmpeqb
cmc
test
xchg
pop
stc
push
adc
jecxz
data16
insb
pop
ret
inc
xor
mov
es
mov
jo
jae
mov
lahf
out
flds
ret
in
inc
aas
mov
jns
inc
jle
lcall
loop
mov
push
push
mov
xchg
xchg
imul
pop
lea
add
add
and
leave
movsl
cmp
scas
test
mov
inc
testl
testl
pop
movsb
jge
and
sbb
inc
fimull
mov
pop
pmullw
int
dec
inc
mov
leave
cmp
xchg
cmc
ret
push
iret
inc
inc
push
xor
cld
sub
xchg
mov
js
inc
pop
push
pop
aaa
inc
push
or
cmp
mov
jle
mov
addr16
push
pop
jbe
inc
and
inc
popa
lds
jmp
fsts
jns
sub
or
cltd
cmp
cmp
inc
lcall
pop
ljmp
cltd
xchg
repz
or
add
outsb
adc
inc
fstpl
push
xchg
bound
pop
ja
xchg
xlat
sti
pop
push
mov
iret
xor
lret
hlt
mov
aad
out
push
cwtl
insl
fsubl
cli
jnp
in
xchg
cld
cmp
sub
xor
arpl
mov
sub
push
ds
cmp
sub
inc
and
lods
and
pop
cmp
stc
inc
and
inc
push
ret
sub
and
je
and
loop
and
pop
mov
dec
ljmp
cltd
adc
lret
leave
jo
arpl
cmpb
ret
mov
sub
jnp
add
inc
jne
ss
ds
jne
fisubl
lock
mov
test
pop
xchg
dec
xorb
xchg
jecxz
lods
int
mov
js
dec
jbe
sub
mov
xchg
rcrl
xchg
movsl
and
je
jp
aad
inc
bound
mov
dec
fcomp
cmpsb
inc
lcall
das
push
test
insl
mov
aaa
cwtl
lcall
lds
jnp
add
cwtl
pop
jge
rcl
lods
add
neg
int
jo
sub
ret
aam
pusha
out
repnz
and
adcl
lds
mov
ret
call
sbbl
inc
mov
mov
scas
cmp
xchg
fdivrl
xchg
out
mov
xchg
mov
andl
clc
jae
mov
cmp
xorb
dec
hlt
ljmp
push
aas
pop
jo
cwtl
lods
fisubrl
stc
mov
jo
pop
cmp
xor
xchg
lds
adc
stc
and
mov
scas
pusha
adc
daa
dec
inc
std
mov
imul
adcl
push
in
stos
mov
stos
push
mov
xor
jb
repnz
inc
lcall
rcll
cli
adc
jge
mov
scas
loopne
xor
jbe
loop
lds
cmp
fadd
js
push
je
pop
add
xor
mov
cltd
push
push
loope
sub
add
sahf
fbld
dec
adc
std
add
add
pop
enter
push
es
in
insb
jp
adc
mov
ja
out
dec
adcb
lcall
out
mov
xchg
sub
lcall
xor
xlat
das
addl
shlb
out
insb
pusha
inc
jb
or
add
ds
dec
or
pop
mov
xchg
ret
fadds
ljmp
into
adc
sbb
jo
sarl
jmp
enter
pop
xchg
sub
fcompl
ds
ds
les
push
cmp
jo
sahf
fcoml
sub
sbb
adc
push
mov
fcmovnb
sbb
inc
jo
adc
cmc
add
gs
imul
cmp
xor
addr16
inc
test
fbstp
js
lcall
cld
in
jecxz
xchg
sahf
push
ljmp
dec
push
rcr
popl
xchg
sbbb
js
into
out
lcall
sbbb
jnp
nop
aaa
jge
rol
add
lcall
jmp
adc
ljmp
jb
dec
ljmp
insb
lcall
mov
decb
in
insb
out
push
les
inc
pop
lds
adc
push
cmp
test
jle
in
aas
mov
xor
shlb
pop
test
inc
pop
aas
mov
or
popa
jno
or
sbb
testl
test
jmp
push
dec
fs
adc
dec
sbb
xchg
cmp
lahf
lock
je
push
jno
dec
add
arpl
mov
ret
sub
add
mov
stos
and
push
push
and
cmp
cmpsb
repnz
mov
dec
daa
or
lcall
xor
dec
add
add
mov
in
cltd
fcmovne
adc
popa
les
sbb
or
je
pop
stc
mov
sub
outsb
outsl
dec
sahf
out
rorl
movsb
cltd
fmuls
push
out
call
sub
or
mov
fcompl
fidivl
xchg
push
hlt
div
sarb
pop
and
lds
aad
push
insl
jecxz
fiaddl
mov
sbb
push
movsl
fldt
cli
test
pop
in
mov
sbbl
inc
mov
sub
push
jbe
aam
mov
repz
xor
cmp
xchg
imulb
add
add
adc
jne
rcrb
mov
test
mov
sub
adc
stos
cs
or
imul
lret
test
fwait
xchg
out
bound
imul
push
sbb
add
jle
ret
pop
test
jle
sub
scas
les
stos
test
cld
xor
test
cmp
stos
shrl
lcall
push
and
loopne,pn
jecxz
xchg
pop
xchg
dec
sahf
fdivs
mov
mov
cmpsb
add
pop
inc
sbb
les
js
jmp
sub
adc
xchg
fadds
mov
push
jle
cmp
mov
pop
jge,pt
hlt
ljmp
jb
mov
sub
and
mov
dec
pushl
outsb
lcall
sahf
dec
out
xor
in
xor
movsl
or
mov
mov
cmc
outsb
xor
sub
inc
jae
fcmovne
adc
push
rorb
in
ret
fsubp
imul
jo
mov
inc
jnp
outsl
in
mov
dec
pop
fildll
stos
mov
inc
lret
pop
fs
sbb
sub
and
mov
xchg
add
test
jbe
xchg
jnp
arpl
jno
xor
dec
sbb
pop
imul
mov
into
inc
push
scas
stos
ja
mov
ss
adcb
cmpsb
jae
pop
inc
pop
push
cltd
jns
push
adc
xchg
imull
mov
in
jmp
push
cmp
subb
fldenv
imul
cmp
add
bswap
ret
mov
mov
aas
add
jnp
cmp
cltd
and
mov
ret
fld
rorl
inc
scas
mov
mov
loop
in
mov
mov
mov
daa
add
adc
jbe
pop
arpl
addl
lcall
sbbb
jnp
cltd
inc
push
andl
lcall
inc
xchg
sarl
shrb
sub
jns
and
lock
rolb
ja
movsb
lods
cmp
pushf
cmpsl
push
pop
inc
xchg
inc
imul
in
insb
jl
sub
gs
in
test
jns
outsl
ret
mov
add
jns
dec
clc
xchg
cltd
sbb
or
mov
clc
ljmp
inc
lods
cmp
cld
mov
shlb
and
jb
fisubrs
outsl
ret
lcall
std
insl
dec
add
jp
mov
jo
xchg
stc
stc
mov
in
test
movsb
and
out
jl
and
cmpsl
xor
popa
cli
sahf
jecxz
lock
push
cmc
or
loop
cwtl
inc
inc
stos
movsb
shl
pop
iret
or
jge
je
pop
jb
xchg
andb
out
insl
cld
inc
jl
dec
dec
les
mov
les
fidivrl
xor
ret
sbb
cwtd
jge
push
fsts
sbbl
fildl
or
xor
xor
imul
subl
fmuls
sbb
imul
jnp
scas
jo
iret
mov
inc
outsb
loope
sub
in
and
or
and
cmp
jae
insb
and
or
divb
icebp
ljmp
sub
dec
xor
cs
lods
mov
shr
call
xor
mov
repnz
int3
xchg
imul
xlat
orb
mov
stos
ret
imul
mov
das
mov
clc
inc
mov
mov
inc
push
movsl
aaa
xor
lods
pop
pop
aaa
pop
inc
fidivrs
lods
and
xchg
add
jg
jae
aaa
add
dec
sbb
push
sub
in
inc
ret
popa
jg
pushf
sbb
insb
mov
cli
lahf
flds
lods
ds
iret
mov
xor
mov
adc
ljmp
cmp
cmp
or
jl
sbb
pop
test
outsb
mov
ja
add
loope
push
subl
lret
icebp
fisubs
mov
xchg
sub
imul
jns
into
out
repz
insb
leave
imul
nop
jecxz
shrb
outsl
cmpsl
push
rcrb
add
out
push
mov
jecxz
and
xor
repnz
loopne
push
movsb
lcall
enter
pop
and
adc
pushf
sub
jmp
jae
mov
push
test
sub
dec
push
or
push
dec
jbe
and
aam
and
add
std
pop
mov
imul
ja
lcall
stc
pop
cmp
gs
xor
dec
jecxz
dec
leave
cmpsl
ds
mov
and
mov
insb
in
mov
cmc
add
cltd
mov
out
push
lods
imul
into
sub
push
popf
xchg
push
shl
pop
pop
cmp
ficoms
push
mov
xor
pop
sahf
mov
mov
push
cltd
pop
pop
out
hlt
push
mov
jnp
jbe
mov
ja
sahf
mov
js
and
and
pushw
pop
mov
shll
out
es
movsl
adc
outsl
cltd
mov
and
cmpsb
adc
and
mov
cwtl
subl
pushf
mov
pop
outsb
sarl
cwtl
stc
cli
push
cmpsb
cmp
pop
in
ss
data16
jns
ret
aad
add
mov
sub
pop
jp
ret
je
repnz
out
out
inc
fisubl
adc
jle
push
cltd
mov
xlat
into
mov
jecxz
or
mov
enter
jo
dec
aad
mov
aas
push
jle
cmp
enter
dec
test
dec
sbb
xor
push
aaa
add
addl
mov
sub
fdivrs
inc
js
jl
int3
lret
xchg
imul
pop
jns
xchg
push
inc
test
jnp
mov
mov
xchg
xor
mov
adc
cs
mov
jnp
jl
pop
lcall
data16
ror
adc
add
lret
test
pop
jb
std
xchg
and
scas
lcall
and
mov
aam
daa
xor
mov
cmp
mov
xchg
sbbb
imul
and
jnp
dec
daa
frstor
subb
addr16
sub
pop
xor
repnz
lret
sub
cmp
call
rcl
ja
scas
movsb
lret
lock
dec
repnz
xchg
lcall
inc
shll
adc
xor
pop
mov
xor
inc
sbb
int3
jo
xor
pop
push
xchg
add
inc
cmc
jmp
jo
outsb
xorb
insb
movsl
xchg
rolb
jo
ja
into
jno
ss
sub
dec
or
js
dec
and
repnz
push
sub
cmp
cs
jle
dec
mov
shl
mov
adc
mov
add
mov
mov
mov
movsl
call
mov
mov
ljmp
gs
mul
jbe
mov
pusha
xor
stc
iret
insb
fs
es
pop
push
add
fwait
push
aad
in
inc
cld
in
push
xchg
dec
inc
cmp
sub
xorb
aaa
shrl
push
push
clc
int
sub
or
mov
and
jmp
ja
orb
ljmp
xabort
std
inc
cmpl
mov
push
mov
xor
loope
movsb
inc
mov
and
add
adc
jnp
cltd
dec
xchg
int3
mov
xchg
adc
jns
xchg
bound
vmread
mov
lret
and
xor
jns
and
xor
in
inc
mov
imul
cmp
leave
mov
jbe
sbb
xchg
or
mov
shll
mov
mov
movsb
test
clc
mov
jbe
lds
mov
cmp
lret
pmuludq
cmp
adc
add
repnz
shl
movsb
adc
in
in
lock
test
cwtl
pop
and
jle
shlb
xor
stc
mov
nop
test
std
mov
cld
pop
push
push
das
or
push
lcall
sub
inc
outsl
cli
ljmp
push
mov
in
push
push
jle,pt
divb
pop
cltd
pop
inc
cs
lea
xacquire
shrb
rorb
xchg
ret
lock
lea
mov
dec
jmp
arpl
ret
add
adc
mov
aas
sub
mov
ret
pop
jae
jmp
lret
xchg
jns
and
or
jae
cmpl
jb
sbb
xchg
jecxz
mov
sub
movsb
dec
out
inc
or
dec
aad
je
adc
add
inc
out
xor
ret
mov
cli
sub
stc
out
lods
jne
lds
lcall
adc
mov
push
mov
jl
xchg
xorb
lahf
rol
cli
mov
or
leave
aam
dec
stos
mov
ljmp
inc
enter
add
inc
fs
imul
dec
daa
enter
xor
pop
pminsw
or
jne
mov
jns
test
xor
shrl
lcall
clc
les
or
das
cltd
cmp
xchg
shrl
pop
pop
push
adc
mov
cmp
xor
addr16
insb
ret
lret
lcall
cli
divb
mov
pop
cs
cs
lock
cli
leave
fucomip
out
add
fbld
std
rcrb
aaa
push
cmp
mov
lea
gs
mov
cltd
sbb
ds
push
mov
gs
sbb
pop
cltd
test
jmp
out
fcmovbe
fidivs
ficompl
jge
mov
dec
in
into
out
cmc
jle
enter
cli
xchg
arpl
fsubs
daa
xlat
xchg
and
pop
sub
xor
int3
inc
ret
sbb
test
inc
std
scas
jns
inc
stc
mov
stos
movsl
jmp
out
pusha
mov
insl
push
rcl
rorl
lods
std
sub
stc
fistps
lcall
xchg
cmp
hlt
loope,pn
cmp
mov
lcall
sub
outsb
sbb
mov
movsl
xchg
out
inc
bound
and
sbb
sarb
jae
ret
sbb
xchg
in
clc
ja
pushf
lock
dec
jb
jbe
mov
ljmp
into
jecxz
insb
and
add
sbb
sub
jns
sub
pop
call
pop
mov
test
mov
in
mov
sbb
pop
sub
adc
pop
pop
insb
sahf
outsl
leave
leave
adc
loop
scas
xchg
fldcw
daa
into
jmp
push
data16
lock
add
test
adc
jns
jle
lcall
test
jle
sbb
mov
clc
xor
and
sub
inc
cmp
out
aaa
mov
adcb
sbb
shl
xchg
mov
sbb
xlat
lahf
pop
movb
sahf
xor
adcb
shlb
movsb
or
push
mov
xor
add
cmp
icebp
push
aas
imul
pusha
xorb
les
push
jo
sahf
movl
sbbb
jb,pn
jp
js
andb
rcrl
cmp
jae
cld
push
mov
cmp
xchg
mov
andb
dec
insl
push
daa
pop
cltd
jmp
stos
inc
ret
cmp
clc
push
cmp
pop
and
sti
xchg
adc
inc
fstps
js
xchg
jge
lods
cmpsl
cltd
push
add
cs
jnp
jle
fwait
xchg
and
cmp
push
push
lock
pop
sarb
dec
dec
xorb
or
sbb
repz
in
fnstenv
xor
dec
or
addl
sub
jb
and
push
xorb
cmp
orb
mov
add
sbb
sbbb
pop
jle
stos
xorb
out
push
addb
outsb
jg
and
pop
cmpb
push
mov
jge
insl
fmulp
daa
jmp
es
out
imul
add
ret
mov
in
adc
mov
inc
xchg
outsb
xchg
sbb
xchg
xchg
adcb
arpl
jl
in
andb
pushf
push
xlat
and
jnp
or
movsl
mov
es
and
mov
or
notb
sub
nop
add
cwtl
dec
subb
and
gs
pop
out
cltd
xor
pop
lods
mov
push
sbbb
xchg
pusha
inc
pop
xchg
add
psubd
jo
data16
mov
push
shrb
and
shlb
out
addb
xchg
rorl
pop
scas
cmpb
xor
jmp
jl
in
outsb
leave
jae
mov
dec
cmp
fldcw
mov
in
lcall
jmp
ljmp
js
push
rolb
shll
nop
jno
fildl
rorb
xor
es
cmpsl
stc
cmpb
repnz
add
add
add
pop
arpl
sbb
mov
pop
push
mov
subb
cmp
inc
leave
add
and
test
jbe
add
add
inc
dec
cwtl
sahf
add
add
mov
add
ja
jae
arpl
mov
and
mov
fsubrl
mov
scas
xor
icebp
pop
ja
jo
add
loop
add
mov
cltd
arpl
push
jae
andb
jmp
add
rorl
addb
xor
icebp
jp
orb
fldl
adc
jmp
jb
sbb
mov
pop
aam
subb
mov
xchg
or
cli
je
jb
test
mov
push
pop
scas
push
in
push
push
movsb
ljmp
push
into
add
adc
mov
ja
sti
lods
add
xchg
out
data16
add
adcb
pop
and
xlat
cltd
andb
and
dec
lds
mov
or
sub
test
ja
push
mov
jl
cld
dec
or
ljmp
inc
xchg
dec
lds
fdivs
xor
sub
std
cmp
stos
testb
dec
lcall
in
add
fists
es
inc
cld
cmp
sbb
sub
mov
add
jns
sti
lock
cli
mov
push
subb
adc
mov
mov
push
jge
imul
es
movl
test
adc
or
pop
andb
repnz
addb
mov
out
sbb
roll
jbe
mov
xchg
add
out
dec
inc
lea
mov
fildl
repz
push
inc
mov
lods
loopne
mov
subb
pusha
orb
or
xor
in
jnp
push
mov
in
or
mov
scas
fiadds
inc
mov
test
shl
ja
mov
outsb
cmc
fwait
shr
or
sbb
fbstp
mov
xchg
pop
mov
sbb
pop
or
mov
bound
jge
jge
lods
add
notl
jnp
or
scas
xchg
aas
sbb
cmpsl
in
insl
sti
dec
lea
lahf
sub
outsw
xchg
xor
add
cmp
jne
test
adc
out
push
leave
mov
xchg
push
les
call
pop
sub
mov
loopne
sub
outsb
aad
adcb
lea
sbbb
jno
subl
inc
cmp
orb
pop
out
sbb
pop
addb
mov
xorb
cmp
mov
pop
push
sbb
cmp
fidivl
pop
leave
jo,pt
stos
addb
jmp
jnp
sub
cld
mov
aas
jnp
pop
pop
andb
push
popf
loop
mov
fwait
jno
addr16
dec
add
mov
rcrl
push
or
pop
mov
leave
imul
cmpsb
aas
lret
and
cmp
stos
test
addl
cmpb
add
orb
imul
mov
andl
jp
or
sahf
xchg
mov
pop
arpl
mov
lret
pop
jg
lds
mov
mov
lods
rclb
mov
and
push
and
push
adc
movsb
pop
add
xchg
mov
or
jno
movsb
aad
or
addb
fldt
adc
mov
dec
sub
lock
xchg
add
ja
cmp
ror
add
hlt
loope
jno
xchg
fdivp
fildl
jbe
xchg
mov
cld
in
cmpsl
adc
jnp
test
daa
movb
xchg
pop
loop
cmpsl
andb
lahf
push
cmp
add
xor
jecxz
or
ret
sarl
inc
stos
xor
mov
addb
ja
sbb
mov
cmp
scas
fsubs
push
orb
into
out
jg
jae
dec
adc
mov
adc
call
cmpsb
or
add
ja
dec
jno
mov
dec
adcl
and
sbbb
sub
popf
pop
pop
mov
or
shll
push
movsb
and
inc
mov
lcall
dec
cmp
sbb
adc
test
aaa
or
orb
orb
int3
push
or
inc
or
mov
pushf
std
sub
and
add
pop
pop
mov
xorb
jb
pusha
loope
andb
mov
and
and
pop
pop
enter
pop
sub
movsb
inc
popf
ds
push
xchg
mov
insb
mov
std
push
pop
addb
jge
xor
in
push
cmpb
adc
pop
mov
test
mov
rol
sub
ja
xchg
sti
loop
cmp
jp
and
xchg
jge
jl
and
cmp
cmpb
xorl
xor
pop
lcall
dec
and
cmpb
or
popa
add
xor
jmp
stc
insb
loop
dec
add
aad
cwtl
fldl
jp
loope
ja
xchg
dec
cli
loope
imul
lods
inc
cld
movsl
mov
add
fsubs
add
or
shll
js
jg
adc
movsl
jnp
insb
dec
and
jnp
sub
test
or
insb
setnp
adcb
sbb
jne
push
adc
es
cli
mov
jg
lods
adc
scas
aaa
adc
or
mull
orl
mov
add
mulb
adc
fstpt
aas
xor
into
ret
je
cmp
pop
lock
and
sbbb
jmp
inc
xorb
push
pop
loope
xorb
push
nop
data16
adc
and
push
lret
dec
dec
jnp
inc
pop
xchg
in
sbb
mov
fsubl
ds
lret
insl
add
fstl
inc
hlt
inc
add
mov
cmpb
aad
pop
sbb
jl
arpl
shll
and
cli
jbe
hlt
and
mov
xlat
jns
xchg
stc
inc
mov
mov
sahf
cmpsb
pop
and
mov
leave
inc
push
jle
or
mov
fnstenv
mov
and
stos
das
xorl
sbb
bound
dec
xorb
and
andb
test
rcrb
rol
push
cmpsl
cmpb
add
cld
and
jbe
pop
jns
push
sti
jns
pop
jl
mov
mov
inc
ss
imul
add
xorb
rcll
mov
push
movsl
mov
cmp
or
xchg
subb
int
aaa
subb
or
cmpb
js
jge
xor
cmp
adc
xchg
and
and
lcall
daa
aas
mov
inc
ljmp
push
scas
pop
lret
aam
loopne
jmp
sub
xor
jl
pop
inc
test
add
sub
popa
mov
pop
push
test
xorb
mov
sbb
mov
push
push
bound
sub
mov
xchg
pop
ret
mov
sbb
addl
mov
dec
xor
aad
jp
dec
jb
push
popa
xor
push
enter
scas
pop
movsb
or
lcall
jb
jnp
and
cld
insb
repnz
cmp
push
popl
aam
rolb
sbb
int
mov
jo
sarb
pop
popa
add
add
xchg
sbb
or
pop
mov
pop
cmp
jns
xor
incl
pop
jle
sti
jl
cmpsb
sti
cltd
ja
push
cmp
ret
lret
sbb
shll
mov
ret
subb
hlt
js
into
cmp
lcall
insb
xor
sub
aaa
lods
mov
jecxz
xchg
cmc
ret
jmp
popa
lahf
push
mov
lret
push
mov
test
loopne
mov
push
pop
les
stc
jg
sbb
sahf
cld
jns
cltd
mov
adc
sub
jb
pop
inc
push
insl
xor
jg
push
push
jge
test
mov
sarb
pushf
iret
pop
jp
aad
and
push
arpl
movsl
pushf
add
jp
int
movsl
mov
mov
orl
mov
sub
bound
in
xor
cmp
enter
sub
js
insb
pop
cmp
lcall
cltd
gs
ret
mov
movsl
ret
push
and
jae
inc
mov
and
pop
ficompl
ret
je
xchg
imul
sbb
cmpsb
push
subb
ret
scas
cmp
shrb
mov
cmp
jle
notl
push
add
add
mov
roll
cmpsb
fadds
cmpb
fwait
insl
and
mov
inc
cmp
cld
loopne
pop
xchg
mov
mov
add
ss
push
repnz
and
lods
not
xor
jg
push
pop
cwtl
out
add
mov
inc
stos
in
jmp
sbb
jae
xchg
xor
sbb
insb
adc
fcompl
xchg
push
and
test
xchg
adc
cwtl
dec
cs
ljmp
xchg
or
lret
cmc
sbbb
push
sub
in
lods
add
or
jb
loopne
push
fadds
test
or
sahf
mov
push
addb
mov
scas
jmp
divb
mov
cmp
cmp
adc
xlat
cli
hlt
andb
lock
pop
cmpb
mov
xorl
sub
subb
sbb
inc
mov
movsb
xchg
popa
inc
push
inc
cld
dec
pusha
fidivl
ret
xor
or
andb
or
outsl
data16
je
popf
adc
movsl
addb
imulb
rdmsr
jnp
enter
xchg
cmpsl
mov
fidivl
sarl
aam
lods
fs
call
js
mov
mov
add
adc
or
mov
sub
shl
js
rorb
iret
orb
lock
push
or
inc
fwait
les
clc
outsb
lods
mov
jecxz
dec
adcb
stos
jb
enter
addb
jg
or
and
add
test
and
icebp
sub
add
xor
sahf
pop
js
incl
mov
push
out
or
sbb
shlb
mov
xchg
jns
lcall
pop
sub
popf
fstpl
inc
in
mov
in
daa
cmpsl
fcompl
push
fs
bnd
and
and
jp
sbb
adc
cmc
xor
out
push
jns
or
and
ss
clc
cmp
add
push
test
push
fbld
pop
stc
add
shl
push
pop
mov
repnz
dec
fdivrl
xchg
sbbl
sbb
jno
or
cmp
jbe
out
push
ret
sub
mov
xor
mov
clc
sub
rcrl
adc
clc
or
inc
js
jb
testb
or
sbb
fwait
out
mov
jns
lods
pop
pop
sub
pop
incb
sbb
xchg
out
jge
data16
cltd
cmp
hlt
jno
lahf
insb
les
xlat
ljmp
fidivrl
ja
fdivrs
lods
je
inc
xchg
or
addl
pop
sub
and
nop
sub
mov
push
mov
stc
data16
xchg
sbb
out
out
orl
das
fldenv
pop
rcll
lea
pop
lcall
push
mov
mov
and
movl
pop
repnz
cmp
imul
inc
call
js
mov
sti
fsubs
add
xor
mov
sbb
push
int
inc
lahf
xlat
pop
and
lcall
cmpsb
cmp
or
mov
mov
fldenv
pop
aas
sub
add
loopne
mov
cmp
pop
fldcw
ret
cs
and
loop
xor
sbb
cmp
aas
sub
das
scas
jbe
lcall
lods
mov
jo
jnp
mov
jns
cltd
xchg
lret
xlat
dec
stos
xor
in
pushf
jle
mov
pop
inc
mov
jnp
and
outsl
shll
pop
add
stos
arpl
or
test
loope
xor
jbe
cmp
cmc
popfw
push
jne
and
mov
into
sbb
pop
and
jg
rcr
outsb
pop
cmp
lea
bound
ret
mov
adc
lcall
xchg
sub
jle
dec
int3
ror
or
push
jmp
lods
test
xor
test
sub
add
jmp
pop
push
add
fnstcw
fs
cltd
ljmp
orl
hlt
jns
insl
movsl
inc
enter
push
sub
stos
aas
cwtl
out
scas
jne
pop
sub
and
cmpl
cmc
mov
test
jns
leave
cmpsb
jo
push
jns
mov
adcb
mov
sub
outsl
cltd
jb
push
sub
sub
xor
adc
xchg
mov
sub
repnz
mov
fisttps
adc
lret
out
xlat
fisubs
jb
mov
data16
jle
loope
stos
shlb
inc
jmp
sub
aam
sub
and
mov
in
outsb
lcall
xacquire
fdivrl
pop
push
jne
and
and
inc
xchg
bound
cmp
pop
jg
into
movsb
call
mov
dec
jge
mov
ret
lahf
sub
and
pop
pop
insb
pusha
shl
aaa
addl
sbb
xchg
jns
mov
bound
imul
pusha
or
ficoms
push
leave
int3
push
mov
cmc
push
fucom
inc
jns
add
mov
jge
jbe
jnp
imul
lahf
jo
xchg
jmp
ret
sahf
jae
out
lcall
in
mov
sub
out
adc
out
imul
push
arpl
fsubrp
cmp
push
loopne
fcomps
mov
and
lock
sbb
lods
inc
mov
fldt
repnz
lea
sbb
mov
mov
stos
add
pop
dec
xor
loop
adc
mov
addb
rcll
js
clc
jns
ljmp
nop
cmp
pop
fldt
mov
sbb
push
mov
addl
loopne
pop
andb
test
cld
push
arpl
sbbb
cmp
cwtl
pop
jg
or
and
sarl
push
mov
mov
and
ret
mov
and
pop
fwait
repnz
test
inc
js
cmp
inc
mov
cmpb
je
pop
xor
in
mov
out
dec
addr16
jl
loope
pop
sub
ja
cmpsb
lods
sub
sub
repnz
aas
lea
in
pop
xor
pushf
lcall
xor
je
andb
or
in
ljmp
dec
mov
repnz
or
shl
in
push
dec
mov
vfrczss
test
cwtl
xchg
popa
dec
and
outsl
push
test
orb
cmp
roll
jge
out
js
enter
fcompl
addb
cmp
xorb
flds
loop
push
popl
mov
stos
xchg
jge
fistpll
jecxz
mov
cmp
ftst
push
or
cli
xlat
push
out
pusha
jg
adcb
fldt
les
fists
in
dec
arpl
andb
push
push
pop
sub
int
cmpb
jns
add
cmpsb
std
cmp
rolb
push
push
cmpsl
adc
divb
push
dec
adc
and
xchg
xor
int
adc
add
insl
into
dec
mov
adc
lds
cmp
lods
loope
inc
dec
out
subb
arpl
mov
adcb
clc
dec
ss
aam
adc
cmpl
and
jg
add
shlb
cmp
jno
ds
test
inc
sub
add
add
push
out
mov
aad
fistpl
das
jge
push
cmpsb
lret
mov
into
sbb
push
cmp
stos
fdivrs
jae
pop
sub
cltd
lret
pop
xor
sbbb
imul
jns
fwait
or
sbb
in
inc
pusha
movb
xchg
adc
sti
dec
sbbb
stos
fs
int3
jnp
cmc
sub
or
jo
lcall
loope
adc
scas
inc
add
pop
xchg
inc
xchg
insb
dec
pop
js
fwait
hlt
fsubl
lock
movsl
jmp
cld
jns
pop
fisubrs
xchg
jae
jg
lret
or
subb
shrl
fstps
cltd
orb
lea
arpl
lds
lret
jo
pusha
xor
test
jno
aam
sub
adc
mov
fstps
cmp
xor
roll
inc
lods
pop
cmp
andb
test
jae
shlb
cmp
and
incl
and
sbbb
dec
jnp
cld
insl
imul
pop
xlat
subb
scas
cmp
add
mov
das
xorb
push
jnp
mov
ja
in
data16
scas
rol
pop
rcl
aam
adc
add
lret
das
lods
xor
xchg
mov
ds
jle
mov
or
dec
fs
ret
ja
mov
pop
adcb
outsb
push
lods
jae
xchg
movsl
in
fidivrs
daa
roll
pushf
mov
mov
jge
push
lea
pop
ret
pop
ljmp
mov
jne
nop
call
jmp
inc
mov
sbbb
and
pop
imul
mov
jns
int3
push
inc
push
movsl
add
inc
xchg
xor
fsubs
aad
jle
mov
add
fnstsw
xlat
hlt
ljmp
cmp
sub
pop
ja
aad
xorb
pop
dec
jecxz
movsb
sbbb
inc
or
enter
cmpb
sub
out
push
mov
and
adc
jp
test
push
dec
je
decb
filds
inc
push
inc
subb
mov
mov
sbb
mov
jns
rolb
xor
incl
cmp
inc
push
sarb
push
cmp
in
adc
push
mov
adc
mov
mov
pop
lret
cmp
lods
push
stos
stos
inc
subb
add
shl
test
sbb
imul
cmp
sbb
and
xchg
adc
je
inc
mov
test
push
jg
roll
andb
cs
mov
sbb
mov
inc
lret
popf
jb
inc
adc
sbb
lcall
arpl
hlt
xor
xor
flds
loop
mov
mov
push
xor
ljmp
pop
rclb
mov
lcall
lcall
mov
addb
data16
sbbb
out
jo
loop
and
mov
mov
stos
cs
push
push
jnp
mov
inc
pop
iret
fnstsw
int3
test
subb
sub
iret
bound
subb
cli
add
mov
push
xchg
push
pushf
xor
sbb
push
jbe
ljmp
mov
jg
sub
pop
mov
sbb
cmpb
jp
incb
cmc
xor
addr16
jl
cmpsb
mov
fdiv
subb
or
push
orb
stos
jp
loopne,pn
fidivrs
pop
cmp
nop
stos
lret
mov
cmpsb
ljmp
aam
lcall
xor
ficoms
add
les
in
icebp
addb
xorb
cld
data16
fs
push
jae
ljmp
pop
subb
push
jno
mov
jg
test
fcmovu
in
mov
icebp
jns
cmc
mov
aad
add
ds
sub
adc
sbb
rolb
sbb
adcb
mov
daa
jae
lods
add
dec
and
pop
add
subb
inc
cmp
xchg
mov
push
jae
jg
lock
aad
push
cmp
roll
jno
mov
inc
sti
dec
out
pop
mov
icebp
add
mov
mov
or
push
add
sbb
add
and
cld
xchg
lods
push
sbbb
dec
mov
push
cltd
out
je
lcall
sub
or
jne
sub
push
test
test
dec
dec
fstpl
cltd
pop
leave
inc
jg
cs
aam
xchg
sub
mov
and
orl
or
or
pushf
fwait
inc
sbb
and
jge
ja
cmc
out
and
mov
mov
cmp
loopne
cwtl
jle
mov
adc
xchg
or
pop
lahf
mov
push
js
js
jg
bound
xorl
xchg
inc
xchg
mov
insb
mov
cltd
adc
hlt
ret
outsl
push
mov
add
in
jecxz
lret
f2xm1
jns
es
mov
inc
xchg
pushl
push
inc
orl
sbb
xchg
addl
test
sub
mov
ficompl
gs
add
fistps
or
push
xchg
add
jl
mov
shll
xchg
add
lcall
sbb
insb
cltd
jno
ret
mov
int
lahf
insb
movl
inc
inc
cmc
sti
mov
and
cltd
sub
test
jmp
fstpl
xchg
inc
stc
jle
or
jg
jo
jb
jp
movsb
gs
and
push
fdiv
dec
mov
pop
jle
lock
fistpll
push
insb
lcall
testb
stos
daa
mov
dec
test
dec
in
inc
loope
adc
ds
xorl
iret
adc
mov
fnstcw
and
pop
mov
je
fisubrl
into
mov
or
lock
stc
mov
xor
outsl
push
and
and
push
cmpsl
mov
xor
repnz
les
cli
mov
outsl
sbbb
jp
jp
fcmovnbe
adc
insb
cs
xlat
stos
jp
sub
xorb
lods
incb
negb
xor
leave
sub
aam
out
mov
mov
cmp
xor
and
pop
cmpsl
lcall
bound
outsb
pop
stos
enter
repnz
push
lret
add
loope
pushf
cld
cltd
je
dec
fdivrl
pop
jl
mov
insl
popa
jo
xor
lahf
and
int3
test
adc
sar
outsl
jg
push
jecxz
lcall
sub
cs
stos
jno
jbe
mov
lds
or
inc
fldl
cmpl
cli
sbb
ss
sahf
lcall
add
adc
push
mov
les
out
sub
and
pop
mov
push
arpl
loopne
sub
add
jnp
shlb
or
jmp
out
push
mov
pop
or
mov
sbb
mov
aad
jo
loopw
or
cmc
stc
adc
test
mov
sub
mov
mov
fistps
push
xor
in
scas
adc
imul
fcmovne
lret
clc
and
out
jo
mov
mov
shl
outsb
in
mov
push
xchg
jle
and
out
pushf
sbb
lock
jl
nop
push
add
and
sub
mov
lcall
inc
clc
push
add
in
std
lcall
nop
addb
std
mov
fsubs
ficompl
out
ret
mov
inc
jne
sbb
jno
xor
push
cmpb
sub
mov
fs
xor
sub
sbb
cmp
xor
and
stos
cmp
fucomi
xchg
sbb
aad
sbb
out
cmp
push
cmc
ljmp
lods
clc
insb
xor
push
xchg
aad
push
jns
loop
or
scas
aad
pop
ja
xchg
xchg
aam
mov
fadd
shrl
add
and
stc
push
loopne
pop
rcl
ss
imul
jae
es
repz
pop
push
push
jns
jecxz
ljmp
mov
popa
jge
push
in
xlat
inc
sub
out
lods
clc
add
adc
push
lcall
hlt
sbb
icebp
inc
dec
lcall
cmp
sub
jb
insb
mov
pop
repnz
in
int3
xchg
adc
cvttps2pi
xchg
pop
cmpsb
cs
push
jmp
add
xchg
aaa
enter
inc
add
dec
psubw
adc
inc
sbb
sbb
mov
mov
test
add
or
cmp
pop
xchg
push
lea
subl
lcall
sar
dec
dec
cmp
cmp
sub
or
lahf
pop
in
pop
cwtl
bound
clc
hlt
cli
cmp
sbb
fstps
jns
vpunpckhwd
dec
pop
clc
fmul
lea
jo
in
mov
jp
lcall
shlb
leave
inc
or
gs
mov
sub
jns
repz
cs
outsl
xchg
push
dec
jb
aaa
mov
daa
mov
jg
loopne
push
stos
adc
jl
adc
add
cmp
ficomps
out
cmp
jne
mov
mov
adc
lea
and
push
and
jo
imulb
jns
jbe
pop
movsl
add
push
pop
add
jecxz
mov
sub
lcall
jle
test
cltd
ror
rolb
xor
xor
xor
xchg
jne
rcrb
mov
push
aad
sbbb
shl
adc
enter
out
cmpsb
jo
mov
xchg
cmp
ss
xor
add
scas
inc
mov
cld
jne
mov
lcall
and
xchg
scas
add
inc
sbbl
add
mov
mov
jl
cltd
push
push
jnp
fistl
add
pop
nop
sub
sti
iret
xchg
je
mov
jle
mov
dec
adc
es
in
aad
xchg
push
pop
out
xchg
aaa
xchg
lods
xlat
push
sbb
or
rcrl
sarl
and
lcall
sbbl
dec
das
adc
test
scas
mov
adc
faddl
jmp
mov
cmc
lret
dec
lea
cmpsb
cld
jns
or
xchg
cmc
in
mov
daa
nop
stos
in
pop
orl
or
xor
xchg
lds
cmp
jle
dec
cltd
jge
sub
add
ss
stc
in
adc
cmp
adc
sub
and
add
lret
pop
xchg
sub
ds
and
mov
movsb
bound
lock
jmp
pop
adc
les
pop
mov
fstpl
loopne
pop
ret
mov
pop
and
and
rorb
mov
and
mov
add
lret
push
loop
inc
out
pop
ljmp
jbe
addb
mov
mov
loop
fs
xor
mov
inc
jnp
data16
xchg
out
in
sti
lds
push
rorb
subl
mov
leave
and
loope
sbb
cmp
push
aaa
int
jb
test
mov
outsl
inc
imul
icebp
jle
loope
jae
aad
push
push
xor
mov
lds
and
ljmp
and
jge
lcall
xor
cli
mov
adc
inc
xlat
das
adc
bound
sub
xor
jo
add
dec
sbb
xchg
addr16
cmpsb
lret
mov
jo
bound
imul
test
mov
ljmp
pop
jnp
rcrb
xor
inc
imul
jle
add
sti
push
add
lret
popf
lock
jb
popa
arpl
cmpb
test
in
lret
shrl
popa
jnp
xor
adc
nop
pop
mov
cltd
push
dec
mov
in
sbb
mov
or
xor
xchg
scas
push
mov
mov
sarb
sbb
insl
xchg
clc
sbb
mov
xor
sub
xchg
stc
dec
or
fstpl
test
roll
add
jnp
sub
adc
xchg
in
xor
pushf
and
mov
in
inc
mov
and
lods
insl
or
outsb
mov
aad
sbb
pop
mov
and
xchg
sub
dec
daa
fadd
dec
xchg
mov
pop
test
sbb
dec
jp
mov
int3
cltd
test
xchg
jb,pn
clc
and
stc
pop
stc
jge
lea
ret
mov
lock
shr
ja
dec
or
dec
shl
mov
xchg
adc
nop
test
imul
and
pop
subb
scas
adc
sbbb
shlb
add
inc
jae
mov
in
and
arpl
adc
orb
lods
mov
xchg
sub
and
jg
cmp
subb
idivb
sub
orb
pop
xchg
and
rorb
push
orb
lcall
data16
push
out
in
mov
subb
push
lock
andb
xchg
sub
cmp
mov
or
adcb
rcrl
dec
xchg
mov
and
mov
sub
sbb
lcall
sahf
add
mov
jb
mov
adcb
sarl
or
jmp
incb
ljmp
lahf
cmp
sbb
dec
daa
sbb
jnp
hlt
or
test
sarl
pushf
movsb
aas
fimuls
mov
adcb
adcb
push
pop
mov
add
or
jns
mov
je
mov
xchg
fwait
cld
xorb
out
cwtl
and
sub
pop
loop
in
inc
or
xchg
adc
jno
inc
imul
add
xchg
in
orb
add
jnp
scas
cli
push
bound
lock
mov
rolb
pop
out
ficomps
mov
pop
hlt
cmovp
sub
adc
subb
sub
mov
inc
pop
addb
xchg
stos
cmp
sbb
int3
mov
popf
das
jae
or
mov
xor
or
mov
in
pop
sbb
inc
mov
cltd
arpl
cs
push
cwtl
insl
jns
inc
jne
sbbb
adc
jecxz
and
daa
andb
cli
and
inc
addl
jge
mov
mov
call
andb
push
sub
test
enter
mov
pusha
out
xor
cmpsl
or
mov
outsb
iret
xchg
addb
adc
push
sbb
imul
mov
push
sbb
mov
push
lahf
and
jns
cmp
stc
sbb
or
inc
adc
bound
ret
jg
arpl
fs
adc
sbb
xchg
popf
xchg
stos
rolb
xorb
sub
xchg
bound
add
call
xchg
xor
xorb
sub
subb
pop
int3
push
shr
xorb
jge
loope
inc
mov
or
ret
scas
cmpsl
xorb
cmp
outsb
add
nop
adc
lea
add
add
push
jp
cmpsl
loop
xchg
jno
or
std
popa
stos
mov
movsb
arpl
in
jg
lods
clc
push
cmpsb
dec
hlt
fwait
mov
xlat
inc
addb
xchg
aam
shll
pop
jae
test
sti
cmpsl
cwtl
push
addb
xlat
dec
lds
jnp
lret
sbb
pop
lcall
rcr
sti
inc
iret
pop
and
mov
mov
lods
clc
add
data16
sbbb
rolb
sub
subb
les
push
sub
jns
sub
mov
loope
arpl
push
mov
fidivrl
test
clc
and
sbbl
out
pop
xor
sbb
sub
dec
adc
lock
xor
and
mov
add
push
sbb
or
bound
mov
sbb
addr16
rcll
cmc
jne
push
fld
mov
rcrl
das
pusha
mov
out
add
lea
mov
adc
add
scas
jmp
jnp
push
shlb
jns
or
insb
loope
test
adc
mov
mov
sbb
or
lahf
addb
sub
lahf
jb
inc
imul
cmpb
aaa
cmp
add
dec
es
out
jg
add
sahf
pushl
and
adc
data16
out
or
jge
mov
test
sub
test
cmp
inc
sub
das
pop
out
fxch
xor
xor
inc
inc
bound
dec
sbbb
sahf
inc
in
sarb
xchg
xor
push
inc
xlat
pop
and
xchg
pop
adcl
ljmp
xor
and
es
xchg
dec
sbb
add
dec
mov
ja
int
addr16
mov
pop
stos
jb
mov
adc
andb
cmpsl
or
or
in
andb
loopne
jne
inc
sub
repnz
fisubl
mov
or
or
jns
inc
mov
scas
add
pop
inc
scas
shl
cmp
mov
fdivl
pop
cmpb
imul
es
in
xor
ljmp
xchg
and
sbb
pusha
rcrl
out
mov
sbb
add
mov
insb
ret
xchg
sbb
inc
inc
add
pop
cmpsl
sbb
push
jge
das
lret
cmc
adcb
jg
and
subb
inc
xchg
add
ja
stos
nop
inc
test
xor
mov
rol
lock
xlat
fucomip
mov
fiadds
mov
mov
xor
int3
and
mov
dec
inc
fnsave
lret
mov
popf
ljmp
insb
adc
dec
addb
adc
xchg
add
pusha
xor
dec
xchg
jae
or
addl
sahf
fsub
sahf
movsl
xorb
sub
xor
in
in
inc
and
adcb
and
dec
repnz
and
mov
fisubl
mov
add
outsl
cmp
cld
roll
es
sub
fldl
mov
imul
and
mov
jo
xor
lock
add
leave
dec
push
jne
inc
jmp
add
mov
imul
or
cmpb
lahf
pop
jecxz
test
push
mov
inc
filds
ret
pop
out
imul
add
stos
movl
pop
pushf
data16
enter
sarl
ss
sbbb
or
cmpsb
shrl
aam
and
mov
cmpsl
dec
mov
sbb
inc
ljmp
cwtl
loopne
stc
xor
cmc
dec
nop
xchg
push
inc
push
sti
xor
add
or
ret
adcb
cmp
push
je
adc
out
fcmovnbe
cmp
mov
jl
mov
cli
pop
mov
lea
mov
xor
bound
into
add
sub
dec
test
sub
repz
scas
adc
pop
movsl
out
mov
ret
outsb
inc
mov
or
in
xchg
iret
jae
mov
sub
push
mov
insb
jno
jbe
nop
jp
ficoms
test
scas
pop
inc
jecxz
add
test
int3
pop
mov
or
test
orl
cltd
dec
mov
sub
addb
stos
roll
cltd
and
aas
cmc
dec
cs
adc
add
call
cmpl
xchg
les
jno
icebp
add
addl
sub
xchg
push
adc
loopne,pn
or
lock
jns
and
pop
inc
daa
testl
arpl
outsb
sbb
fistpl
mov
cmp
lret
add
lcall
repnz
or
and
stc
xchg
ss
sub
les
xchg
es
inc
jp
mov
nop
or
adc
ret
and
sbb
sbb
pop
cmp
lea
sub
dec
test
cltd
mov
push
in
in
repnz
cmp
inc
dec
jbe
jbe
lcall
test
pop
sbb
or
mov
push
cwtl
jge
es
sub
add
jae
cmpsl
rcrl
addb
fiadds
or
mov
sahf
aam
notb
and
cmpl
cmp
push
bound
aaa
add
jle
pop
xchg
ret
or
jl
cmp
xorb
loopne
push
cmp
push
lahf
cld
xchg
addb
inc
arpl
cmp
xor
test
xchg
ret
ljmp
sub
roll
roll
sbbb
dec
aas
repnz
popf
jle
jo
push
jbe
inc
aam
jge
imul
jl
add
or
xorb
jnp
jmp
push
fs
test
mov
push
out
and
jecxz
add
iret
adc
sbb
adc
imul
mov
mov
scas
out
sbb
repz
jl
faddl
sbb
nopl
inc
loope
sub
pushl
inc
cmc
sbb
mov
shrl
xor
subb
sahf
pushf
ljmp
imul
movsb
stos
sbb
aas
dec
dec
pop
icebp
js
loop
incb
add
andb
addl
jne
inc
jnp
inc
lahf
mov
ja
sbbb
sub
dec
adc
shrl
jae
cmc
and
out
leave
daa
lret
xchg
ficomps
popa
mov
arpl
outsl
inc
fbstp
cltd
mov
mov
push
adc
test
push
push
pop
sub
inc
sbb
pop
stos
orl
bound
sub
ror
cltd
pop
adc
in
fstp
cmp
and
mov
lahf
add
out
outsl
sub
jl
mov
in
cwtl
mov
mov
push
lcall
jmp
sub
sbb
or
mov
pop
movsb
stc
dec
and
leave
popa
adc
in
movsl
dec
xchg
cwtl
fwait
mov
lock
cmc
dec
add
stos
fbld
cmpsl
jb
imul
scas
pop
mov
push
mov
dec
push
ljmp
pop
mov
scas
cmp
jle
in
fdiv
push
test
out
sub
clc
xor
lea
dec
sub
ret
pop
mov
test
sbb
jge
xor
sub
cli
xorb
insb
sbb
das
addr16
icebp
cltd
and
cltd
sbb
into
fwait
lcall
jae
jmp
hlt
in
repz
pop
and
and
push
xlat
pusha
mov
lret
and
or
in
and
cmp
sbb
jbe
mov
rcrb
outsb
int3
mov
push
inc
nop
cmpsb
jno
push
sbb
into
out
inc
jmp
pop
loop
mov
aam
lcall
dec
ljmp
lcall
pop
ds
ret
jecxz,pn
and
ret
sub
fidivrs
stc
lods
jg
xchg
aaa
pushf
jo
lcall
lahf
cmp
xor
in
fmull
mov
lcall
push
insl
pop
out
sub
jg
lds
sbb
inc
std
lcall
dec
add
pop
jbe
ret
daa
pop
in
jmp
xor
je,pn
cmp
and
mov
xor
push
lret
xchg
mov
orb
fnstenv
cwtl
fcmovu
dec
pop
jnp
fucomi
xchg
arpl
testl
inc
dec
pushf
dec
je
and
adc
pop
pop
mov
mov
jecxz
outsb
xchg
and
mov
rcrl
and
jnp
sbb
cltd
addb
sbb
lds
jno
adcb
fwait
adc
cmp
adc
sbb
fwait
xor
push
cmpsl
adc
divl
xchg
mov
or
inc
loop
lret
and
inc
mov
push
das
mov
iret
test
clc
push
jne
loopne
mov
data16
sub
xorb
clc
shlb
mov
or
rolb
mov
sbb
push
sti
adcb
mov
in
aas
xor
sahf
scas
sub
movsl
inc
mov
lock
hlt
pop
jnp
jecxz
and
and
xor
andb
dec
outsl
xchg
pop
push
jb
adc
add
fs
push
push
mov
mulb
sub
mov
sbb
inc
jb
dec
pop
sub
loope
mov
testb
outsl
jmp
push
shll
ds
mov
pop
cmpl
inc
ret
pop
hlt
fs
cmc
inc
sub
addl
sub
dec
push
aas
lods
out
xor
lret
loope
scas
imul
movsl
or
sub
add
stc
jl
inc
jne
ja
cs
and
in
pmuludq
and
sub
les
mov
push
dec
jle
ljmp
jo
js
mov
ja
leave
in
mov
xor
add
cld
jl
ja
sti
je
lods
mov
xchg
int3
aad
xchg
or
test
cmp
cs
cmp
pop
adc
jbe
add
fdivr
jae
neg
sbb
dec
loop
subl
mov
stos
out
jns
jecxz
sbb
and
dec
movsl
sbb
divb
icebp
and
dec
sahf
sarb
lcall
push
jnp
or
cmp
or
mov
out
adc
call
sbbb
push
jae
test
fstpl
pop
inc
add
pop
pushf
xacquire
pop
out
outsl
pop
rcll
xor
leave
call
dec
iret
sbb
movsb
inc
pop
xchg
ds
insb
fstl
jbe
and
call
mov
jnp
inc
ret
adc
jno
test
push
adc
xor
inc
icebp
push
es
jae
mov
xchg
pop
mov
mov
push
ss
cmp
pushf
xorb
sub
push
xchg
mov
addb
push
and
clc
mov
lahf
lods
or
xor
mov
push
fcompl
dec
arpl
outsb
es
inc
cmp
dec
jmp
je
pop
fwait
in
cmp
imul
push
push
ret
mov
inc
or
cli
pusha
sbb
shll
dec
insb
jne
fnsave
ret
pusha
sbbb
pop
clc
mov
push
rcrl
push
out
add
mov
or
dec
mov
je
jle
in
pop
sti
pop
in
inc
loopne
xor
fdivrl
lcall
mov
lahf
push
xchg
jmp
adc
pop
fidivs
cmc
shl
inc
pop
and
add
in
imul
loopne
movsl
subb
pop
mov
getsec
gs
loopne
idiv
and
xor
sbb
arpl
mov
jne
dec
xor
lds
adc
mov
loop
push
pop
in
jbe
out
sub
test
adc
stos
adcb
mov
pop
xchg
jmp
into
cmp
fwait
and
mov
jle
sbb
push
push
mov
aas
adc
mov
pop
outsb
cld
jns
int3
and
lods
outsl
mov
lds
pop
dec
sbb
lock
jecxz
jle
nop
insb
sahf
jnp
push
cwtl
xor
dec
dec
add
inc
and
clc
pop
jnp
jnp
call
mov
cmp
mov
in
arpl
or
jmp
inc
pop
sti
and
ljmp
sbb
test
arpl
gs
scas
lea
lahf
push
icebp
imul
dec
testb
or
andb
or
sub
and
pop
mov
pop
mov
mov
push
iret
ss
push
add
pop
movsb
xchg
stos
inc
fsubl
add
mov
jge
mov
nop
shr
cmp
stos
inc
jp
mov
dec
cld
repz
lahf
lahf
imul
or
push
xor
andb
arpl
insb
or
cmp
iret
mov
filds
pusha
mov
dec
add
lahf
sub
out
popf
nopl
ss
sub
xor
and
mov
bound
push
fwait
ljmp
into
lcall
lock
orb
mov
jp
mov
inc
andb
xchg
add
je
je
aam
mov
inc
or
cmp
insb
bsr
cmp
adc
subb
jp
pop
add
addb
aas
pushf
mov
dec
popa
adc
push
xor
lret
aaa
push
mov
in
adc
adc
and
cmpb
mov
sbb
out
daa
lods
adc
scas
popf
jnp
cmpsl
push
rcr
aad
lods
add
ret
ds
cmp
jg
int3
mov
sbb
fs
adc
or
pusha
hlt
scas
lods
sub
outsb
orb
ret
jnp
inc
mov
jo
fidivrs
test
or
mov
imul
mov
push
pop
mov
scas
ja
cld
jo
addb
cmp
dec
pushl
sub
mov
enter
or
xor
ja
cltd
subb
test
in
xchg
pushf
mov
mov
jo
jns
or
loope
jl
or
xorb
mov
test
sar
xchg
adc
cmp
fnstsw
pop
repnz
push
stos
lods
andl
lds
daa
jno
jns
push
orl
inc
sahf
lods
mov
shrb
adc
mov
cs
mov
sbbb
adc
mov
mov
jns
in
cmpsb
add
jae
sub
pop
pop
ss
xchg
rclb
je
mov
popa
sbb
cmp
push
fiadds
scas
push
inc
scas
and
in
mov
subb
andb
mov
push
test
cmp
test
mov
mov
cmpl
frstor
fs
push
notb
push
nop
jnp
add
hlt
ja
fadds
jmp
jb
add
arpl
sub
mov
sub
jns
jle
push
ljmp
movsl
mov
mov
cmc
test
test
and
xor
aas
lds
or
push
mov
into
mov
xor
flds
cltd
mov
addb
sub
fs
imul
jnp
into
scas
or
stc
sbbl
push
fstl
jecxz
xor
fs
cs
push
imul
shr
adc
inc
mov
add
mov
cmp
scas
cli
ret
fildl
xorb
mov
insb
pop
mov
inc
jo
jnp
pusha
xorl
repnz
mov
xor
add
xorb
push
decb
or
mov
cli
fs
mov
lcall
xchg
cmp
sbb
mov
mov
scas
mov
add
ret
mov
inc
add
lods
test
mov
pushl
inc
add
and
jno
lret
inc
mov
mov
repnz
xchg
jge
jmp
stos
fildl
push
popa
mov
and
popf
mov
mov
fstps
jge
or
sahf
ret
or
mov
or
jg
push
jmp
and
adc
lret
pop
cmp
pop
mov
add
push
pop
ret
jg
andb
lret
stc
sbb
inc
mov
mov
push
sbbb
insb
test
lods
in
sbb
pop
arpl
mov
xchg
xchg
jle
sbb
mov
jecxz
push
ja
js
ss
and
adc
jo
dec
popa
adcb
jne
mull
cmc
cld
sbbb
or
pusha
lcall
imul
pushf
mov
aas
sub
dec
and
imul
and
addl
cltd
data16
jo
cmp
xlat
loopne
data16
cmpsl
cmp
sub
lds
mov
fs
clc
pusha
jb
ret
mov
push
int
lcall
repnz
add
push
cltd
and
jo
xchg
lods
push
nop
jp
cmpsl
mov
inc
sbb
xor
fs
das
add
push
movsl
sbb
inc
sahf
lods
mov
mul
test
jnp
mov
cmp
nop
lcall
add
int
xchg
xor
xchg
adc
xchg
mov
add
sbb
sar
mov
outsl
test
bnd
testl
test
pop
mov
cltd
xor
cwtl
mov
imul
push
mov
stc
sub
out
in
test
push
xor
mov
push
xchg
xchg
and
out
pop
adc
ja
add
sar
lret
cmc
mov
test
dec
or
lods
repnz
xchg
inc
shrl
stos
into
idivb
pop
mov
sub
das
jb
out
dec
pop
call
leave
add
mov
push
subb
jne
inc
jle
xor
jo
js
popa
cmp
mov
inc
jmp
jle
mov
lahf
jne
enter
fsubr
lods
fnstcw
aad
mov
push
test
rclb
xor
mov
xor
and
jg
or
xchg
mov
movsb
cltd
fisttpl
in
mov
lret
or
sbb
adc
or
sar
jo
jp
pop
dec
out
xchg
sbb
sbbb
stc
jecxz
addr16
in
xchg
cmc
mov
xorl
js
jmp
pop
in
sbb
xor
repz
out
popa
movb
sbb
loop
ror
sbbb
or
push
jbe
or
cltd
push
ficoml
into
dec
into
push
fwait
sbb
cmpsl
mov
outsb
mov
dec
push
enter
mov
loopne
mov
mov
lea
xor
test
stc
scas
pop
dec
jbe
insl
into
xor
xchg
push
inc
jae
push
and
dec
bound
lock
adc
xchg
sub
into
xchg
adc
cs
mov
in
cwtl
cmc
rclb
arpl
stc
repz
or
xchg
adc
icebp
mov
test
aaa
mov
sahf
andb
jge
das
ja
mov
hlt
pop
lds
sbb
cmp
fidivl
les
lret
push
mov
fnstsw
mov
or
sub
aas
fdivl
pushf
sub
dec
pop
and
jnp
cmove
es
scas
nop
or
push
roll
dec
inc
push
mov
or
and
xchg
add
xor
jb
push
ret
adc
pop
shlb
mov
jg
jno
push
ss
pushf
lods
and
popa
and
je
mov
scas
adcb
repz
les
adc
movsb
sbb
sub
inc
in
scas
jnp
or
stc
adcl
push
jl
inc
push
clc
adc
sbb
pop
jg
loopne
inc
mov
push
fwait
sub
lock
out
addb
lods
sbbb
dec
outsl
les
xorb
cmpl
pop
mov
or
push
mov
leave
xlat
dec
imul
jae
xchg
xchg
pop
jnp
addb
in
mov
xchg
fisubs
xorb
imul
pop
rorb
add
into
add
or
adcl
and
icebp
insl
and
or
cmpsw
xor
neg
mov
cmp
imul
ret
inc
lods
jge
push
in
mov
mulb
outsl
inc
mov
pop
movsb
push
push
insl
and
mov
sbb
shll
pop
leave
pop
cmc
cmp
adc
add
iret
xchg
jnp
aam
stos
xor
cmc
jnp
dec
and
mov
xchg
arpl
inc
push
xorb
outsl
iret
or
jge
push
ja
inc
jns
mov
sbb
in
imul
sub
xor
decb
adc
sbbb
addb
add
sub
xchg
orb
sahf
xchg
outsb
lock
js
xchg
fnstenv
pop
jnp
int3
jae
push
jae
fstpt
cmp
push
sbb
out
pmovmskb
push
iret
pop
inc
mov
addb
movsl
push
into
or
popa
out
or
pop
xchg
das
add
in
out
sbb
pop
dec
bound
testl
faddl
mov
mov
loope
fadds
ret
mov
cmp
adc
mov
nop
inc
xorb
mov
orl
pop
xchg
jnp
adc
imul
xchg
lock
adc
adc
add
outsb
xlat
push
das
nop
sbbb
push
repnz
ja
in
test
insb
es
loop
faddl
stc
ljmp
add
loope
andb
dec
mov
inc
dec
add
je
bound
mov
add
pushf
test
orb
je
cld
iret
dec
add
add
cmpb
mov
jmp
mov
addl
add
mov
testl
or
out
jb
mov
sbbb
jae
pop
adcb
pop
clc
dec
xchg
push
push
adc
fneni(8087
pop
jne
inc
sbbb
sbb
pop
cmp
mov
sub
sar
push
jecxz
mov
jae
and
mov
cwtl
cmp
xchg
int3
lods
xor
cmp
add
ret
dec
in
jb
adc
insl
mov
andl
pop
into
jg
daa
jnp
nop
inc
jbe
adc
subl
bound
ja
mov
imul
cld
cmpl
jmp
mov
jo
lret
mov
dec
in
movsb
cmp
mov
call
or
stos
jecxz
test
push
inc
in
mov
and
mov
icebp
xchg
cmpb
pop
faddl
lret
mov
push
daa
ss
into
mov
mov
adcl
and
mov
cmp
push
xorb
mov
cli
pop
popa
adc
pop
adc
jae
cmc
mov
inc
push
sub
jp
je
pop
aad
and
mov
adc
jnp
test
mov
iret
mov
jmp
jae
sti
mov
jg
dec
scas
rolb
jnp
repnz
jle
add
in
mov
int3
jae
repz
cs
scas
or
lret
sti
mov
push
mov
shrl
mov
jno
scas
dec
andb
bound
cwtl
xchg
xorb
rcrl
xor
inc
icebp
jnp
dec
popf
mov
nop
mov
cmp
xchg
pop
gs
or
orb
dec
cmpsb
adc
adc
add
in
arpl
push
inc
dec
aam
jmp
lds
jns
mov
add
adc
mov
addl
sbbb
sbb
rolb
sub
adc
je
idiv
jg
inc
xchg
sub
mov
stc
addb
test
stos
testb
sbb
sbbb
jecxz
push
out
rcrl
orb
pusha
outsb
cmp
mov
cmpsb
inc
xor
sub
mov
mov
adc
cmp
test
adc
pusha
addb
inc
cmc
mov
fildll
lcall
mov
or
in
bound
mov
ja
leave
push
out
cmp
xchg
jnp
dec
ficoml
jmp
push
inc
jge
fcmovnb
add
lahf
out
faddl
mov
lret
sar
fnstenv
xlat
in
cmpb
dec
jmp
call
cmp
jge
out
push
mov
add
push
add
jae
dec
add
ds
adcl
pop
adcb
out
push
push
push
or
adc
adc
idivl
iretw
adcb
xor
fnstcw
cmpsl
pop
sub
dec
pop
aam
lret
nop
lea
jg
xor
sub
inc
xor
pushf
insb
sbb
adc
jns
push
inc
add
adc
push
add
iret
push
push
sub
xorb
and
mov
daa
or
inc
cmp
fdivs
and
out
jns
xchg
lahf
sahf
cmpb
ds
sub
cmpb
mov
adc
data16
add
or
flds
imul
and
lret
mov
mov
pop
mov
mov
xchg
and
jp,pt
jb
dec
xor
pop
pop
andb
sbb
inc
addb
cmc
push
mov
int3
sbb
pop
adc
pop
dec
add
into
rcrb
lahf
mov
out
or
insb
rcll
push
inc
andb
outsb
test
fdivrl
adc
dec
mov
jecxz
mov
xchg
cmp
ljmp
add
fcomps
loopne
lret
dec
iret
movsl
pop
push
pop
xchg
pop
pusha
jle
mov
or
push
fidivl
push
jnp
jns
adc
enter
add
dec
adc
cmp
pop
or
add
or
xchg
sbb
add
loope
inc
sbb
movsb
movb
es
fwait
mov
incb
inc
insl
imul
sbb
int
and
xchg
leave
cmp
sub
jo
test
loope
jbe
mov
xorb
icebp
loopne
pop
dec
divl
jl
fs
mov
adc
sub
test
clc
pop
or
mov
push
inc
test
popf
fidivrl
cmp
cmpl
inc
inc
xchg
push
dec
mov
jae
cld
pop
mov
and
cli
sbbb
sub
xor
gs
shlb
push
cmpsb
cmpb
movsl
adc
xchg
xor
jmp
mov
mov
aam
ja
fdivrp
movsl
adcb
addr16
or
ret
cwtl
dec
pop
dec
add
jge
xor
cmp
and
pop
jbe
int
fdivrs
or
jns
lods
sub
push
popa
and
cmp
or
jne
cmovnp
sbb
loopne
push
stos
jnp
lret
nop
cmpsb
jns
ja
je
call
insb
lcall
adc
add
test
pop
cltd
faddl
mov
mov
cmpsl
mov
sub
call
xchg
xchg
push
flds
enterw
mov
ror
rcr
sub
sahf
push
sbb
lcall
dec
movsb
test
hlt
xchg
mov
test
inc
pop
cmp
add
pop
lods
or
sub
xchg
and
dec
or
fs
aam
xchg
push
fwait
xor
sbb
inc
mov
aas
jns
insb
ja
lods
int3
movsb
inc
jnp
pop
cmc
jmp
jo
pop
jl
xchg
icebp
jl
and
pop
sub
or
dec
flds
int
loopne
pop
jp
sbb
and
fldpi
add
repz
dec
push
mov
cltd
out
cmp
frstor
out
cld
cmc
stc
test
jnp
fs
nop
xor
mov
outsl
and
hlt
add
lret
sub
cltd
inc
cmp
call
mov
lret
push
arpl
push
pop
lcall
test
cmp
stc
rol
imul
sub
push
repnz
pop
add
cltd
pushf
inc
sbb
cli
pop
xor
pop
fucomi
mov
cmp
mov
sub
jne,pn
jbe
dec
push
cs
or
xor
lods
push
push
lcall
bound
dec
jmp
fwait
add
sub
xchg
stos
pop
dec
and
imul
xchg
loope
jae
cmc
inc
movsl
fbstp
gs
ds
das
out
xchg
loopne
jge
shll
jmp
or
hlt
jns
lret
addl
jg
push
test
in
cmpb
xchg
sub
xor
inc
xor
sub
sub
sbb
fisubl
pop
in
jb
sub
not
dec
cmp
sbb
mov
xchg
xorl
mov
out
sub
jl
aaa
xchg
and
stos
mov
xor
add
leave
mov
ficoml
mov
shl
sub
push
push
mov
dec
stos
mov
lcall
out
lods
jb
add
shlb
ficoms
mov
push
xchg
adc
out
cwtl
fcompl
sub
ret
addb
lcall
or
cli
lods
xchg
cwtl
push
popl
xchg
fs
jg
jae
adc
add
lcall
fadd
enter
mov
aad
xchg
out
jb
mov
mov
dec
out
dec
and
add
lods
cltd
aas
popf
jge
cmc
sub
enter
sub
cmp
lcall
push
inc
add
adc
add
cmp
lock
adc
mov
or
lds
pop
pop
xorl
rolb
xchg
push
jg
mov
out
daa
cmpsl
push
cmpsl
jnp
xchg
lcall
mov
and
xchg
es
sahf
ret
fsubrs
mov
cs
sub
pop
cmpsl
es
ljmp
push
add
inc
and
mov
jo
pop
jge
add
inc
loop
aaa
mov
mov
mov
push
popf
jecxz
cmpsl
subb
ret
aas
and
mov
sbb
int
and
clc
mov
stos
jo
xlat
loop
std
xchg
mov
adc
push
sti
repz
call
add
fs
jns
push
daa
stc
lock
pop
jl
sub
outsb
cmc
int3
int
ljmp
std
mov
int
loope
cltd
rcll
xchg
mov
adc
or
and
test
stos
arpl
in
mov
add
scas
div
add
enter
loopne
jmp
xor
incb
cmp
mov
unpcklps
test
pop
outsb
xchg
fsubrl
fs
xor
addl
leave
inc
xor
out
dec
dec
mov
lret
test
outsl
lcall
jbe
jo
push
sbb
test
pop
ret
fwait
lahf
ss
pop
jae
jns
and
cld
xchg
adc
inc
jne
lcall
jp
rorb
inc
inc
xchg
and
test
mov
sub
sbb
movsb
icebp
test
out
int3
add
push
mov
xor
sub
mov
xchg
test
xchg
aaa
xorb
xor
stc
xor
push
fcomp
jno
mov
insb
add
or
jns
pop
fdivs
or
lock
fisubs
push
ret
testb
push
orl
shlb
stc
jge
cmp
mov
repz
lea
scas
das
xchg
shll
sbb
in
lcall
mov
dec
and
fisubl
out
add
stos
mov
cli
add
bound
imul
xor
mov
inc
rcrl
jle
fwait
jp
xchg
jp
cmp
push
ret
int3
dec
sbb
jo
nop
inc
inc
jo
xlat
sub
clc
pusha
jp
test
lcall
pop
mov
mov
cwtd
stc
push
mov
fldt
cmp
jnp
das
notl
arpl
mov
adc
jns
gs
jmp
out
xchg
sarb
cltd
mov
sub
lcall
xchg
nop
out
jmp
inc
cli
add
sub
nop
mov
aaa
ret
pop
inc
into
lret
call
mov
mov
loopne
sub
gs
cmc
cmp
dec
mov
iret
jp
push
inc
fidivs
jge
lret
jnp
flds
xlat
test
xor
test
fdivl
sub
push
jl
ret
inc
movsb
in
xlat
inc
es
push
fimuls
rcll
sub
push
mov
and
xor
adc
cmc
shrl
cmpsl
cmp
insb
lds
jl,pt
aam
loopne
pop
push
pop
adc
stc
sub
aam
lret
jmp
mov
cltd
jo
mov
ds
mov
sub
in
push
sub
stos
mov
jmp
jb
stc
push
out
jo
add
lcall
jae
ljmp
data16
out
out
aaa
jge
mov
push
ds
jp
pop
addps
mov
and
pop
jle
imul
inc
aaa
into
push
aam
cltd
sbb
out
lcall
inc
in
sbb
and
ljmp
es
sarb
pushf
jbe
popa
mov
mulb
lods
sbb
insl
lds
push
loope,pt
das
mov
iret
lcallw
out
cli
ret
in
jmp
add
mov
lds
sub
or
popa
stc
and
sahf
aad
mov
add
push
mov
mov
cmpsb
outsl
cltd
jnp
rcrb
xor
roll
lock
lods
and
imul
mov
sub
jecxz
sbb
test
test
lock
enter
movnti
push
addb
pop
jle
jge
jmp
rol
fcoml
jns
outsl
inc
gs
xchg
pop
xor
pop
daa
sbbb
pop
mov
movsl
iret
lock
mov
cmp
adc
out
sahf
dec
sbb
cmp
xchg
dec
xchg
sahf
jg
aam
pusha
mov
inc
lret
dec
and
pop
test
lret
das
inc
insb
xor
pop
arpl
mov
lock
nop
pusha
ret
jo
mov
mov
xchg
aad
in
xchg
nop
dec
jns
lcall
push
cmp
test
jno
mov
mov
insb
repz
jp
movsbl
jns
fbld
mov
lcall
cwtl
jne
sub
dec
and
test
cwtl
xor
rcrl
fisubl
mov
ret
in
repnz
push
cmp
in
stc
add
inc
rolb
sbb
addb
dec
adc
insb
cltd
add
dec
jle,pt
sbb
std
inc
icebp
in
jle
mov
jge
jmp
pop
insl
cltd
stos
outsb
sti
push
data16
leave
and
jmp
cmp
xor
out
or
cltd
ss
xchg
inc
cwtl
pusha
xor
fdivrl
lcall
jmp
lea
xor
sub
nop
xchg
xchg
or
add
out
lock
push
inc
or
mov
int
xor
cli
mov
mov
sub
push
add
lcall
push
mov
movsb
adc
dec
cli
lcall
sub
aas
mull
lods
pop
jo
cmc
iret
jge
dec
not
das
push
mov
inc
das
cmpsb
push
repz
xor
pop
shl
insl
das
inc
pop
std
pop
mov
addr16
repnz
mov
int3
jo
js
rcrl
es
sbb
repnz
lret
jb
fucomi
orl
incb
sub
lock
movsl
xor
add
mov
mov
loop
pop
hlt
cmpsb
push
push
fcompl
sub
pop
cli
fcmovnb
inc
shrb
jbe
popa
cltd
bound
pop
mov
mov
dec
js
jae
lock
std
sbbb
mov
andb
paddw
lods
sti
inc
sbbb
test
mov
ds
sbbb
lds
jle
and
push
addb
and
push
push
jl
xor
ss
ljmp
xor
and
mov
mov
aam
mov
pop
dec
inc
lods
cmpb
mov
pop
into
push
pop
jno
jne
pushl
mov
adc
push
mov
bound
cmpb
xchg
or
inc
test
dec
xor
mov
mov
mov
mov
shl
bnd
and
mov
movsb
outsl
lods
add
adc
inc
sub
mov
clc
adc
in
sbb
addb
inc
jnp
mov
dec
je
mov
sbb
push
andb
lcall
jns
ret
gs
addb
push
xchg
adc
mov
ret
xorb
mov
pop
lock
orb
xchg
or
push
andb
mov
call
cmp
ret
movsl
sub
and
addb
mov
jo
roll
xor
out
inc
dec
scas
sub
addb
popa
or
repnz
xor
inc
adc
push
cmpb
jnp
pushf
int
xor
xchg
or
pop
sbbb
fisubs
mov
adc
aam
adc
mov
dec
enter
inc
jg
push
or
jno
add
xor
jl
sub
cmp
adc
pop
cmp
adc
psrld
add
enter
add
push
dec
jne
mov
jmp
outsl
xchg
popf
lds
jnp
ss
cmp
mov
pop
jae
cli
fcoms
outsb
cld
jg
or
mov
out
in
cmpsl
push
lahf
cmc
cmpb
pusha
inc
cmpsb
aam
mov
fiaddl
pop
aad
inc
andb
jmp
inc
sbb
dec
fldt
je
mov
jp
stos
iret
sbb
jg
outsb
or
insl
sbbb
inc
push
push
add
roll
test
mov
xorb
add
inc
xor
inc
cmc
sahf
hlt
fistps
pop
mov
mov
movsb
int3
insb
push
popa
fwait
inc
sahf
popf
icebp
in
lds
inc
dec
mov
lods
test
mov
addb
mov
je
jmp
push
pop
ds
pop
add
xor
jg
jle
jno
jmp
pusha
and
andb
sub
loopne
and
inc
cmpsb
orb
addr16
mov
lock
insl
and
mov
sbbb
and
out
xor
das
xchg
cmp
pop
jae
push
dec
add
insl
or
sbb
addb
add
or
mov
mov
inc
adc
jae
mov
sbbl
sahf
xor
xorb
mov
add
inc
mov
enter
and
aaa
xor
sar
movsl
add
mov
jmp
subb
jno
jnp
mov
mov
pop
ret
inc
jnp
mov
jmp
and
aad
outsb
xor
popf
pop
movsl
inc
xchg
fcomi
mov
mov
orb
and
xchg
xor
adc
push
rolb
pop
adc
ss
out
sahf
sbb
cmpb
jp
mov
and
test
add
cltd
sub
lock
dec
mov
pop
fwait
or
sbb
pop
xor
xor
mov
cmpsb
jle
pushf
fisubl
popf
add
lcall
fstpt
adc
jne
dec
add
and
aas
cmpsb
sub
xchg
dec
mov
test
jp
pop
add
jae
push
das
mov
or
ret
cmpb
push
inc
sbb
inc
xorb
scas
and
stos
movsl
mov
cltd
adc
psubw
pop
dec
inc
lcall
orb
mull
into
inc
adc
mov
iret
xchg
dec
adc
pop
arpl
incl
ret
or
push
jnp
pusha
and
adc
jns
mov
ljmp
sbb
movsl
mov
imul
mov
popa
sti
push
scas
mov
and
rorb
aaa
mov
sbb
sbb
daa
mov
adc
popa
test
subb
sbb
cmc
pop
ja
or
cmp
jge
aas
aaa
mov
mov
xchg
or
push
fwait
lods
xor
pop
int
mov
ret
mov
or
nop
mov
mov
andl
pop
push
mov
jge
fs
jg
loopne
pop
mov
ror
or
imul
or
in
leave
cmpb
addb
loope
mov
dec
add
popf
inc
loop
iret
repz
arpl
push
cmp
dec
hlt
push
dec
pop
loop
leave
jbe
or
dec
cmpb
sub
mov
sbb
sbb
lods
sub
inc
mov
jae
add
popa
insb
or
orb
mov
andb
mov
fs
outsb
enter
add
mov
cli
arpl
frstor
cmp
imul
xlat
aam
dec
mov
adc
add
aaa
xor
lcall
scas
add
mov
dec
xchg
push
imul
add
xchg
cmp
ror
cmpb
sar
in
push
jg
mov
cmp
int3
sbbb
pop
loope
lret
and
push
adc
jno
mov
outsl
push
ljmp
ja
mov
clc
nop
mov
fwait
cltd
jmp
jle
mov
ret
cmp
in
jg
xor
or
mov
sbb
rolb
sub
lcall
mov
lahf
inc
aad
andb
cltd
push
fisttpl
andb
push
and
inc
lods
aaa
add
mov
sbb
cmp
adcb
mov
testb
mov
jo
enter
bound
sub
js
insb
xor
arpl
xor
vmovupd
jecxz
out
xchg
pusha
stos
xchg
push
push
je
je
lret
fbld
push
rcll
xchg
xorb
mov
sarb
dec
lret
cltd
push
sbbb
enter
inc
fisubl
das
and
iret
cmp
dec
pop
test
push
push
jl
jecxz
ss
out
aad
arpl
lret
in
sbb
mov
sti
fs
add
pop
cmc
cmp
inc
or
andb
das
popf
incb
in
movsl
ret
or
add
scas
adc
push
jne
repz
dec
or
inc
pop
xchg
jae
sub
sbb
jnp
xor
loopne
jp
out
pop
jbe
int3
add
imul
and
push
adc
sbbb
enter
or
xor
mov
lea
adc
inc
pop
movsb
inc
cmc
mov
cmp
and
jnp
ret
inc
test
and
pop
sub
orb
cmp
rcl
mov
fstl
sbb
pop
xchg
je
pop
inc
adc
sbb
test
jg
xor
mov
jg
nop
ja
out
xor
jnp
push
xchg
cwtl
out
in
sbb
ljmp
adc
mov
pop
cs
rcl
mov
push
jl
xchg
push
cmp
sbb
repnz
insb
mov
int
and
cli
sub
repnz
shrb
shl
out
enter
jge
call
nop
xor
leave
ret
popa
scas
popf
lcall
jo
adc
cmp
mov
xchg
mov
mov
enter
pop
push
int
and
stc
or
add
jle
cmp
shl
sub
bound
xchg
and
das
or
sbb
xor
dec
sti
jecxz
push
cmp
stos
sub
mov
mov
adc
out
or
jecxz
mov
push
xchg
jo
int3
push
lea
mov
jae
and
jmp
pop
into
xchg
cmp
inc
mov
mov
and
nop
daa
mov
jo
add
push
ja
cwtl
and
push
lock
inc
jae
sbb
or
movsl
pop
sbb
scas
or
sub
xor
das
jb
inc
xchg
jmp
mov
jb
xchg
jns
jmp
fdivrs
xchg
xchg
push
mov
mov
arpl
cmp
mov
stc
notb
mov
sbb
sbb
mov
data16
xchg
jns
imul
bound
daa
ret
xchg
pop
ret
loope
stc
sub
cli
pop
lcall
mov
mov
jno
inc
mov
xchg
add
or
bts
loopne
jo
mov
les
adc
fwait
push
sahf
xor
std
push
je
imul
or
outsb
fs
inc
daa
add
scas
dec
or
push
sbb
imul
push
mov
sub
xchg
mov
out
cmpsl
cmpsl
xchg
addl
leave
insb
push
rclb
sub
jb
cli
adc
das
sub
inc
aaa
lock
mov
pop
psrad
jle
test
or
mov
shll
mov
push
push
jbe
jnp
sub
stc
sbb
pop
jmp
jbe
mov
and
mov
sbbb
lcall
repnz
enter
jl
cmp
xor
enter
and
jbe
sbb
lcall
add
jae
lea
xchg
lods
jge
xor
dec
push
and
stc
icebp
add
std
xor
daa
mov
ljmp
mov
jns
sub
add
mov
sub
shr
add
stc
push
push
mov
cwtl
xor
add
sub
sbb
out
xchg
lods
icebp
mov
add
jl
scas
xchg
sbbb
mov
ja
int
xchg
cmp
lcall
and
pop
cmc
je
adc
push
or
mov
lcall
int3
pop
scas
and
mov
lods
rcr
jb
stos
add
jecxz
icebp
ret
shlb
mov
mov
std
inc
xchg
mov
in
test
xor
sub
adc
cmp
xchg
push
cmc
dec
sbb
add
jb
lcall
inc
fcmovbe
add
cmp
stos
imul
popf
lret
xchg
cmc
sarb
aad
mov
les
push
jae
mov
xchg
imul
aas
jbe
mov
leave
loopne
cmp
jnp
stc
clc
mov
out
mov
lret
lods
and
jnp
jl
bnd
ret
sub
pop
jle
xor
fdivs
sub
lcall
iret
enter
in
xor
out
xor
shlb
call
pusha
dec
sbb
lods
and
bound
lcall
cltd
cs
outsl
push
enter
filds
ret
add
roll
and
sub
mov
test
push
scas
ds
jmp
imul
sub
lahf
ja
dec
lods
sub
push
cmp
call
ficomps
nop
fidivs
int3
mov
or
dec
imul
scas
jl
and
bswap
rcrb
int
out
mov
stos
fnsave
jno
loop
add
sbb
inc
and
sbb
fcoml
gs
movsl
leave
in
inc
cli
push
xor
jl
shl
jle
pop
jae
sub
mov
inc
lcall
mov
dec
dec
fsubrl
add
jno
and
and
int
push
fldenv
xchg
inc
add
and
sbb
push
cmp
mov
jo
pop
aad
mov
cltd
out
cmpsb
cmp
int3
es
not
outsb
cld
mov
jno
repnz
dec
xor
push
lret
push
add
andl
in
dec
rolb
cmp
repnz
dec
cmpsl
lret
sahf
dec
loop
adc
push
fmull
xor
cli
test
bound
loope
push
cwtl
pop
cs
pop
ss
lods
shll
movsl
push
out
push
arpl
out
jnp
xor
mov
jns
stos
jb
xor
loop
jmp
sub
into
pop
dec
dec
ficoms
scas
ret
push
outsl
in
hlt
aad
add
xchg
fstpl
adc
out
leave
sbb
dec
pop
pop
es
and
pop
or
mov
bound
jl
xchg
push
sahf
mov
add
cmc
roll
mov
frstor
push
pop
inc
in
cmpl
pushf
inc
mov
daa
xchg
mov
mov
push
dec
ret
cld
xchg
in
push
adc
lea
dec
or
xchg
sub
and
jae
lea
call
stc
xor
jns
call
sti
test
in
xor
fs
lock
cmp
mov
cmp
cmpl
add
and
push
xor
sub
lret
sbb
js
mov
inc
sti
jns
int
out
jp
stos
and
push
shrb
in
mov
push
cltd
cld
pop
cmp
jns
jmp
pop
mov
jb
test
mov
das
mov
xor
bound
outsl
jbe
test
mov
mov
push
bound
scas
into
or
lcall
inc
loope
insl
gs
pop
adc
repnz
add
adc
lods
xor
fisttpll
repnz
mov
xchg
outsl
mov
inc
in
inc
fisubrs
pop
cwtl
mov
ret
sbb
mov
sub
xchg
push
test
inc
int3
nop
negl
sbbb
mov
lret
push
in
mul
jle
add
loop
sbb
and
sbb
inc
aad
mov
loopne
js
inc
cld
adcl
cmc
repnz
lods
ds
jg
jmp
jae
sbb
sub
stos
cltd
adc
inc
das
sub
loopne
adc
mov
stc
mov
outsl
mov
ret
leave
inc
jle
jge
lcall
mov
loopne
jne
mov
dec
xor
sbb
inc
xor
adc
dec
pop
jbe
xor
lret
inc
lods
xor
les
test
testb
cli
push
int
insb
in
daa
lock
mov
fwait
leave
push
in
test
sti
cltd
pop
sbb
xchg
sub
xor
stc
push
xchg
xlat
outsb
cltd
vmovshdup
pusha
jb
sbb
fcmovnu
movsl
bound
add
and
ja
push
push
mov
lcall
ret
sti
cltd
sbb
mov
rcrb
imul
sahf
jbe
jge
dec
jo
ret
leave
repz
xor
out
cmp
or
jbe
out
sub
mov
jne
cltd
and
lods
jns
jg
push
in
test
hlt
push
daa
and
xlat
es
lds
dec
loopne
or
xor
cltd
pusha
jae
test
inc
sbb
ror
aaa
mov
andl
push
jno
mov
mov
sbb
mov
xor
mov
int3
add
lcall
fistps
mov
andb
mov
xorl
mov
mov
daa
ret
ljmp
mov
mov
or
push
test
or
push
sbb
imul
jl
add
ss
push
test
fdivrs
movsb
mov
jl
shrl
je
lcall
dec
lock
cwtl
mov
xchg
sbb
test
jae
mov
icebp
push
sbb
dec
xor
clc
hlt
push
xchg
lret
jle
stos
dec
mov
mov
inc
lods
nop
ret
mov
sbb
mov
fnstsw
outsl
and
mov
cmp
xchg
pop
mov
sbb
cwtl
push
sub
xchg
inc
popa
in
pushl
out
scas
jge
jns
add
rcrl
push
sbb
test
cltd
cmp
inc
ffreep
in
adc
out
push
jp
mov
push
cmpsb
shrl
mov
push
push
or
roll
mov
cltd
add
add
call
xchg
dec
adc
cltd
cwtl
cmp
push
jo
add
push
dec
test
data16
xor
and
dec
jmp
inc
add
sbb
mov
insb
jecxz
cwtl
push
push
or
mov
fadds
subb
jl
mov
jne
sahf
jecxz
dec
jo
cmp
jge
xchg
inc
mov
sbb
or
das
fcmovbe
mov
test
and
pop
sbb
test
and
sub
dec
mov
add
mov
fisubl
sub
leave
fstps
scas
mov
addb
std
shlb
lret
gs
out
je
lods
fistl
inc
adc
add
insb
jns
mov
pop
xor
cld
dec
jae
nop
lcall
addl
sub
cmpsb
sbb
enter
mov
pop
sbb
adc
mov
sbb
mov
in
test
subb
jge
mov
stc
out
push
fbstp
hlt
and
pop
and
sub
arpl
cli
add
fimuls
outsb
ret
jb
push
jbe
cmp
frstor
xchg
push
sub
push
dec
inc
popa
xor
mov
orl
xor
inc
mov
push
andb
mov
adc
cmpb
lds
mov
out
mov
int
lahf
jmp
add
stos
sub
jg
push
ja
ret
adc
dec
pmullw
sub
or
inc
loope
xchg
addb
fnstsw
adcb
push
xchg
out
ja
xchg
jecxz
cli
jns
mov
mov
lret
ss
orb
js
mov
push
repnz
xor
and
sub
jg
sbb
repz
fidivl
aam
jg
jmp
jo
shl
bound
mov
xchg
jmp
sbb
or
mov
andb
add
dec
in
in
adcb
or
jns
push
aaa
movsl
orb
lock
in
loopne
rol
adc
je
dec
adc
and
jae
cmp
pop
pop
cmpsb
mov
movl
subb
add
adc
adc
mov
subl
mov
loopne
xor
lret
add
jb
adcb
and
std
push
test
add
sub
sahf
mov
mov
and
adc
lret
cmpb
arpl
adc
fisttps
mov
cmpb
ljmp
jnp
fiadds
adc
lcall
ret
filds
xchg
xor
test
lods
mov
pop
and
pusha
int3
stos
ret
shll
mov
mov
dec
xchg
es
inc
rclb
push
mov
mov
cmp
test
cmpsl
jae
shlb
mov
push
mov
pop
iret
cwtl
pop
je
das
jg
jmp
loop
clc
jl
mov
fisubrl
sahf
test
add
ret
repnz
movsb
loope
xor
bound
mov
sbbb
ficoml
xorb
jl
testl
orb
out
rolb
test
lret
test
push
cmp
mov
aam
fldl
jae
addb
xor
mov
inc
sbb
jl
jb
cmc
bnd
inc
push
add
mov
and
cmp
pop
lods
subb
idivl
xor
dec
pop
xor
orb
in
subb
mov
add
ja
movsb
and
cs
mov
data16
sub
jecxz
xchg
push
pop
imul
adcb
xchg
pop
repz
loop
fbstp
clc
sbb
fcomps
push
and
jns
adc
xchg
hlt
mov
bound
ret
lret
sbbb
push
addr16
rorb
xor
dec
stos
icebp
testl
push
out
stos
inc
xchg
popa
imul
mov
iret
subb
ret
mov
inc
nop
sub
cli
imul
mov
jg
sub
cmpsb
fwait
divl
mov
push
das
mov
inc
inc
les
addl
andb
inc
dec
aad
xchg
pop
jne
add
mov
int3
fcomps
daa
pushf
ljmp
enter
mov
jecxz
xorb
out
and
loope
ds
imul
lds
fildll
mov
pop
stc
dec
dec
stos
clc
addb
sub
lcall
inc
data16
rcrb
les
test
dec
add
shrb
dec
call
and
sbb
xor
shrl
inc
ret
mov
jae
adc
push
bound
cmpb
push
add
jns
dec
jle
sarb
add
xor
imul
xchg
sbbb
push
jecxz
subl
adc
scas
or
insb
mov
inc
and
or
pushl
leave
repz
fisubl
and
outsl
cltd
or
push
sahf
and
cmp
jo
cmpsb
sbbl
test
xchg
or
sub
mov
ret
add
sub
mov
shrl
cmpl
sub
scas
push
jnp
fcmove
adc
mov
ret
andb
and
mov
sub
inc
mov
mov
push
pop
sbbb
ret
dec
mov
test
andb
aad
inc
rolb
xchg
sbb
jae
xchg
or
loope
aam
sub
xor
movsb
inc
cs
repnz
subb
or
xchg
mov
xor
adc
jns
sub
test
js
orb
lods
andl
repnz
cmp
nop
out
and
and
sbbl
andb
ljmp
push
inc
inc
jle
test
call
test
std
adcb
sbb
inc
jl
sbbb
popa
dec
and
mov
adc
sbbb
mov
out
push
push
or
ss
xchg
cmpb
mov
jl
je
sub
dec
out
sbb
mov
scas
imul
insb
in
adcb
mov
or
lret
shlb
fcmovnbe
lods
xor
mov
jmp
xor
xchg
inc
clc
rcrb
shl
or
test
insb
sub
jle
xchg
jo
lds
mov
mov
add
test
mov
rcrb
sbbb
xchg
inc
cld
cmpb
mulb
out
test
fbld
cmpsb
adcl
and
and
cmp
test
or
xchg
and
or
xchg
and
dec
sub
sub
mov
pop
jne
cmp
sub
add
ret
push
mov
inc
movsb
sbb
inc
ret
jg
fistpl
lds
je
inc
fsubrs
out
cmp
mov
lds
dec
addb
nop
mov
subb
sub
and
jmp
lcall
mov
inc
cmpb
xchg
inc
or
push
sub
fbld
cld
cmp
jns
cli
lds
lea
jl
aad
cmp
mov
ret
fidivrs
mov
jno
xlat
mov
pusha
arpl
sbb
adc
push
jecxz
enter
fsubl
xchg
scas
jmp
loopne
rcrb
shrl
adcb
leave
and
fs
mov
imul
xchg
mov
jg
sbb
loope
mov
enter
roll
mov
lcall
lods
cmp
adcb
push
das
stc
jns
lcall
cmp
pop
cltd
mov
out
and
orb
sbb
sub
data16
inc
xor
cwtl
mov
fwait
inc
in
lock
push
shr
ljmpw
insb
decb
sub
xchg
cltd
sbbb
xchg
mov
push
lods
into
shlb
orb
out
push
repnz
lea
fimull
rolb
push
je
movsl
add
adcl
xchg
call
sahf
shlb
inc
cltd
scas
insb
rolb
ret
in
je
insl
mov
out
inc
addr16
mov
imul
popa
xchg
std
or
and
or
fwait
lods
nop
test
idiv
inc
xor
inc
iret
mov
push
jae
mov
jl
xchg
mov
xor
bound
int3
mov
pop
inc
or
and
insb
lods
or
test
mov
stos
das
jns
lcall
xorb
int
xor
shll
and
ret
or
inc
loope
ljmp
sbb
add
sub
sbb
ss
call
mov
mov
mov
fadds
divl
jbe
out
or
cmpl
push
jb
mov
cmc
xorl
insl
sub
pushf
jnp
jae
mov
jnp
adc
add
lcall
ds
hlt
in
cmp
or
cmp
cli
inc
cmp
mov
sub
mov
pop
lods
sub
pop
mov
xor
inc
mov
dec
xor
les
pop
push
sbb
mov
andl
sbb
dec
fwait
cli
or
pop
or
push
mov
jge
cli
xchg
mov
xchg
nop
inc
inc
lcall
int
add
jae
orb
cmpsl
dec
daa
out
inc
test
pop
fisttpll
add
lock
dec
adc
push
pop
mov
or
inc
data16
add
cmp
lea
jp
push
pop
daa
fsubrl
xchg
inc
and
cmp
testb
sbb
ljmp
xor
cmp
xor
arpl
adc
popa
lds
jno
std
mov
or
popa
jne
xlat
bound
cwtl
and
popa
add
out
sahf
cs
stos
arpl
jae
sub
sub
ss
cmc
add
aas
inc
jl
outsb
cmp
push
sub
lcall
push
mov
cmp
add
loopne
scas
jbe
cs
out
cmp
sub
stos
sbb
nop
jnp
in
add
sbb
mov
out
outsb
fcomps
jbe
in
jne
sbb
loope
in
dec
pop
add
cltd
push
mov
mov
push
mov
insl
dec
adc
inc
ror
xchg
je
push
lcall
mov
mov
out
inc
call
pop
xchg
aad
cmp
stos
lahf
mov
cmp
cltd
ljmp
xor
fsubp
xor
mov
jmp
dec
stc
cwtl
cltd
nop
stos
out
lods
ss
stc
sbb
cmpl
repnz
pop
ret
movsl
repnz
sbb
adc
fistps
inc
xor
mov
mov
movsb
mull
add
je
mov
stc
jno
add
jecxz
or
inc
lcall
test
aad
in
lea
out
push
and
jns
cmp
jae
sbb
cmp
insb
insb
pop
pop
outsb
push
pop
dec
jae
mov
mov
imul
pop
lea
subl
rolb
sbbl
or
or
lahf
addr16
mov
jns
or
test
mov
inc
rolb
insb
push
outsb
aam
mov
fimuls
add
imul
xchg
xchg
das
mov
ret
sub
or
or
xchg
bound
call
loopne
imul
push
push
jae
sahf
lret
aas
mov
jg
xor
popf
push
bound
inc
pop
jl
lcall
sbb
cmp
outsl
or
scas
js
jbe
lcall
in
jb
mov
loopne
jl
xchg
fnstsw
xor
repnz
shrb
sub
cmp
ficompl
mov
mov
sbb
divl
ds
cli
mov
and
rolb
or
test
call
ss
xchg
aam
aaa
aad
sbbb
fs
adc
pushf
push
lods
idivb
cltd
mov
or
push
inc
mov
pop
inc
mov
imul
cmpsb
jp
inc
cltd
push
insb
xchg
insb
nop
out
ret
shll
test
in
dec
xchg
andb
or
adc
ds
gs
push
out
xor
push
pop
and
and
and
and
fdivl
js
js
aaa
jne
addr16
sete
clc
mov
scas
lcall
adc
fnstcw
or
repz
dec
push
in
push
cs
scas
fildl
cmp
jge
test
xor
cld
fsubl
pop
jle
xchg
inc
xchg
rcrl
adc
xor
and
mov
jl
cmp
xchg
fwait
inc
mov
adc
cmp
out
sub
out
lock
add
je
inc
loop
cltd
push
stos
repnz
vhsubpd
scas
mov
outsb
test
cltd
fcomp
cmp
js
push
push
arpl
out
imul
add
out
mov
push
and
in
jae
ret
add
stos
xchg
pop
xor
pop
test
add
cli
dec
push
jbe
push
push
and
shrl
arpl
lcall
xor
and
subl
mov
not
sub
in
movsb
push
fdiv
ret
lods
push
xor
mov
mov
jle
enter
add
sub
cli
dec
out
ja
add
add
xor
mov
sub
inc
cli
in
pop
add
addb
lock
jbe
cmpsb
js
shrl
insb
sti
iret
jno
movsl
sbb
leave
sub
jae
ret
and
inc
xchg
loope
mov
fnstsw
pushf
adc
xchg
pushf
jae
ja
inc
xor
push
or
cmc
repnz
std
mov
jo
lods
lret
sub
ficoml
repz
add
or
ja
ret
lahf
ret
or
pop
pushl
lcall
cmp
cmp
lahf
xor
nop
adc
dec
xchg
cmp
leave
test
lea
stos
pop
sub
mov
dec
lgs
dec
add
call
stos
fbld
push
xor
mov
stos
sbb
arpl
sub
jle
pop
add
flds
xor
inc
ret
pop
pop
fdivrs
cmc
sbb
xor
fists
lret
les
cs
aam
dec
cs
push
dec
fwait
cwtl
lret
jns
mov
sub
in
cmp
mov
fsubrl
jnp
xor
mov
mov
jp
pop
mov
mov
add
or
daa
dec
fsubs
cli
sub
sbb
push
mov
into
pop
scas
lret
jae
sbb
pop
insb
mov
jb
xchg
push
xor
das
subl
lds
lcall
das
std
cltd
push
pop
mov
pop
adc
outsb
scas
push
cmpsb
data16
bound
xchg
outsl
movsb
subb
ja
repnz
cltd
dec
dec
or
scas
xor
ds
ss
shlb
sbb
mov
not
xor
shl
xor
mov
aad
lahf
pop
sub
inc
sahf
xor
push
cwtl
and
in
outsl
or
mov
inc
sbb
sub
xchg
xor
sub
das
orb
adc
and
test
inc
jnp
cltd
fstp
rcrb
int
cmp
sahf
and
sarl
mov
and
sbb
repnz
je
dec
faddl
push
aad
push
xor
cmp
inc
and
hlt
dec
push
xor
dec
sub
jbe
aas
jge
das
jle
sub
adc
jg
cltd
or
lcall
in
mov
or
lods
xchg
pop
xchg
test
repnz
test
dec
in
sbb
and
push
xchg
lds
sbb
xor
dec
jnp
pushf
xor
bound
loopne
and
out
mov
test
lcall
jge
movsb
les
cmp
jmp
roll
scas
jp
sub
sub
mov
popa
ud2
nop
adc
jmp
mov
xchg
dec
xorl
push
cld
dec
jnp
sbb
test
jl
pop
mov
jno
sub
add
mov
ss
add
shl
pop
movsl
popf
cltd
test
jne
jns
push
pusha
jo
imul
cltd
sub
aas
mov
jb
ret
push
jge
std
aam
repnz
mov
aad
pop
insl
push
aad
jmp
sbb
push
lahf
pushf
and
test
xchg
adc
cli
ljmp
pop
dec
mov
mov
mov
sbb
leave
adc
out
icebp
pop
outsb
pushf
add
inc
inc
jecxz
lret
in
mov
fucomi
mov
push
pop
repnz
data16
aam
stos
rorl
and
xchg
jae
pop
rcrb
test
dec
mov
pop
pop
and
mov
inc
cli
sbb
pop
jp
imul
test
jno
imull
sbb
mov
jo
pop
stos
jns
enter
adc
pop
or
or
sub
test
loop
dec
cltd
adc
jp
cmpsl
cmc
mov
sbb
sbb
jbe
hlt
inc
test
out
mov
xor
repnz
or
xlat
enter
ja
ja
inc
data16
mov
pop
lahf
xchg
sbb
jns
cmp
arpl
int3
pusha
sbb
lcall
ljmp
lahf
cmpb
sub
adc
jg
sbb
insl
jle
and
test
mov
in
sub
ret
adc
and
and
xor
rcr
aas
int
pop
loope
pop
stos
repnz
push
mov
dec
leave
repnz
jbe
ljmp
lahf
push
insb
pandn
add
inc
iret
ds
and
cmp
cli
xlat
inc
ret
scas
in
lcall
add
xor
addr16
mov
loope
push
popf
or
jg
ljmp
xor
xchg
push
pop
xor
test
outsl
cltd
stc
jb
cli
mov
and
lcall
sub
xor
jnp
fwait
pushf
push
mov
push
add
leave
aam
mov
xor
or
mov
mov
mov
mov
addr16
test
mov
scas
loopne
ss
divb
cmp
jg
jne
lds
aas
in
sbbb
jecxz
andl
movsb
test
iret
in
xchg
or
xor
push
mov
addl
jmp
cltd
dec
outsl
sbbl
mov
adc
shll
or
insb
cmp
push
in
stos
cmp
daa
cs
mov
in
sub
cmpsl
ss
ret
test
mov
jmp
lcall
adcb
xchg
xchg
aaa
in
fildll
js
push
jg
lods
dec
jecxz
stc
push
mov
test
xor
in
inc
out
rolb
les
cltd
push
adc
repz
out
cltd
lock
not
repz
insb
mov
add
lock
movsb
dec
pop
cli
and
jle
dec
dec
adc
test
or
outsb
cli
dec
fisubrl
subl
or
fwait
sub
jo
cmc
push
dec
xchg
mov
nop
cld
add
cltd
xor
jo
xchg
fsincos
pop
sub
cmc
add
or
das
sbb
mov
leave
adc
add
aas
mov
fimuls
pop
and
xchg
sub
fcom
idivl
fcomip
idivl
in
loop
cltd
mov
inc
xchg
mov
jl
mov
int
push
cmp
les
popl
mov
scas
xchg
cmp
and
and
xor
out
out
pop
push
push
jmp
mov
dec
pop
xor
lock
xor
ja
jge
mov
fcomps
cwtl
popf
xchg
les
dec
lcall
xor
popf
sbb
pop
sbb
mov
sub
push
sbbb
push
push
hlt
lcall
inc
cmp
insb
push
leave
pop
and
leave
orb
inc
sbb
in
fnstcw
or
movsb
outsl
push
andb
out
add
jae
or
mov
aad
push
stos
call
jecxz
xor
jbe
mov
call
inc
daa
mov
out
xchg
push
jns
pushf
sub
add
push
aas
outsl
push
xor
inc
mov
cmc
jnp
repnz
jp
shlb
ret
lcall
js
fstpt
daa
in
mov
push
and
push
cltd
sbb
add
std
not
xchg
sbbl
add
mov
add
pop
into
orl
lcall
fisttps
jecxz
mov
dec
jl
ljmp
js
int
movsl
pop
or
cld
push
and
sub
andl
push
sti
cmc
and
rorl
lret
cwtl
addb
or
mov
inc
sbb
out
aaa
add
or
mov
cmp
pop
xchg
dec
cltd
lock
and
cmp
pop
dec
outsb
jns
lds
cmp
int3
mov
std
xorb
in
mov
jl
cld
cmp
stc
outsl
repnz
dec
inc
in
fldt
test
and
test
or
cmp
test
cmp
shlb
cli
pop
test
jle
ret
str
shl
push
dec
loop
data16
xor
mov
add
lock
push
fwait
cmpb
rcrb
hlt
push
and
mov
sub
xorl
out
jge
add
xor
rclb
insb
xor
leave
pop
outsb
in
sub
adcl
test
ret
repnz
icebp
sub
fiadds
inc
push
cs
rcrl
jl
cltd
fneni(8087
outsb
enter
xorb
jns
cmp
push
outsl
int
mov
test
fldcw
int
xchg
ljmp
out
adc
call
sbbb
fadd
roll
jmp
mov
jne
mov
mov
push
lret
cmp
in
aas
mov
shll
add
dec
jge
mov
addr16
test
bound
adc
leave
mov
imul
fidivs
dec
adc
in
sbb
cltd
ja
jnp
insb
shlb
cmp
jb
pop
sub
xchg
test
lds
mov
push
pop
adc
ljmp
dec
xor
stos
mov
xchg
sbb
jns
mov
cmc
shll
add
decb
jg
add
int3
xor
and
add
repnz
jecxz
xchg
pusha
inc
xor
push
and
sub
xlat
mov
stos
jne
jge
sbb
cltd
sbb
cmp
lcall
ret
jle
inc
aad
mov
lea
lahf
sti
pop
add
out
test
ret
loope
mov
mov
repnz
adc
in
movsb
dec
inc
hlt
sbb
lahf
aas
add
sbb
or
sbbl
out
and
sahf
cmpsb
ret
shl
jb
adcb
or
orl
fiaddl
je
incl
adcb
jg
push
jae
and
pusha
hlt
xchg
int3
mov
add
xor
aad
subb
mov
push
arpl
fcompl
mov
xchg
pop
jae
jmp
cmp
inc
addb
out
orb
adc
xorb
imul
out
sahf
jae
xor
scas
ja
adc
or
adc
shrl
arpl
cwtl
cmp
insl
out
lock
mov
jb
xor
sarb
iret
int
out
in
out
aas
sahf
ljmp
or
dec
sub
add
mov
adc
jbe
insl
repz
adcb
sub
push
cmp
xor
pop
or
pop
cmpb
xchg
mov
pop
jg
out
adc
loope
adc
push
push
jnp
nop
inc
push
arpl
adc
xorb
cmp
pop
subb
jl
andb
sar
dec
mov
jno
repz
fsubl
adc
movsl
and
repnz
xor
jne
and
in
mov
mov
stc
roll
sub
jmp
adc
aaa
sti
pop
push
xchg
jecxz
fstpt
stos
js
stc
int
push
flds
data16
sbb
repnz
stos
test
ljmp
loop
or
divb
es
xchg
sub
decb
sub
repz
nop
jns
dec
icebp
test
or
fucomip
jae
aas
jecxz
arpl
lods
out
xchg
inc
repnz
inc
adc
orb
ret
dec
cwtl
arpl
push
xor
cmpsl
inc
jg
mov
repnz
cmpsb
arpl
xchg
jl
lret
cmp
push
sub
lcall
pop
push
loop
dec
push
pop
loope
iret
add
cmpl
cmpsl
jbe
push
ret
add
arpl
xchg
rcrl
adc
push
stos
decb
andb
inc
lret
lods
addb
jge
loop
cmc
mov
xchg
imul
xchg
adc
sahf
repnz
adc
push
pop
dec
fidivs
test
into
hlt
sbb
movl
orb
in
mov
imul
mov
mov
loope
into
adc
mov
cmp
cmp
or
dec
orb
xor
pusha
stos
filds
and
das
push
or
andb
popf
popl
ffree
dec
xor
andb
jg
rcrl
xchg
les
mov
aam
loop
add
test
jb
mov
mov
aas
or
les
inc
mov
test
lcall
cld
inc
mov
or
out
push
push
subb
in
popa
popf
xlat
addb
je
cmp
push
adc
xor
pusha
or
cwtl
sub
outsl
jno
int
test
stos
push
popa
mov
dec
sbbb
stos
adc
pop
imul
or
loop
sub
movsb
sub
push
add
dec
cld
lret
sbb
xor
mov
mov
mov
fcoml
sbb
cld
cmp
xor
adc
sbb
adcb
inc
cmc
jae
xchg
pop
push
loop
xchg
and
pop
xorb
mov
dec
lcall
sti
xchg
mov
jno
mov
rcll
adcb
xor
leave
dec
ret
call
jmp
add
sbbb
filds
outsl
stos
dec
ret
cltd
out
push
ret
testl
inc
cmpb
pop
mov
sub
adc
push
mov
repnz
call
je
je
xor
mov
push
subb
clc
insb
xchg
call
andb
rcr
mov
sub
add
cmp
jb
in
jne
addb
int3
add
cmp
xchg
and
mov
add
lock
insl
aas
loope
stos
lret
jo
or
pop
and
mov
mov
ret
mov
xor
mov
sahf
and
sbb
jnp
cmpb
add
xor
arpl
loopne
cltd
icebp
push
jg
xor
mov
je
insb
or
jle
pop
scas
ret
xchg
cmp
lods
add
bound
dec
int
fcmovbe
xchg
push
cld
daa
xchg
cltd
data16
dec
andb
or
ss
ret
jne
and
xchg
mov
jle
jae
mov
pushf
jnp
je
out
cmc
add
movsl
into
fwait
sbb
popa
adc
mov
outsb
shl
stc
cltd
and
push
or
pop
adc
gs
clc
add
fnstenv
push
sbb
aas
add
mov
jg
dec
cmp
clc
lods
in
orb
xchg
stos
add
sub
addr16
data16
push
ret
jnp
jae
jnp
add
jns
jbe,pn
dec
adcb
jl
ljmp
fs
fbstp
in
lcall
test
sbb
orb
hlt
ret
inc
jle
andb
lods
adcb
or
jo
in
mov
xchg
or
jge
jmp
mov
push
ljmp
or
loope
dec
mov
add
lcall
andl
hlt
or
add
mov
add
aam
fildl
stc
test
xchg
dec
ja
fdivrs
xorb
sub
push
xor
mov
int3
push
xchg
mov
into
xor
cmpsb
push
sbb
sub
mov
ljmp
in
or
sub
xor
into
popa
mov
xor
jno
aaa
shrl
test
or
adcb
addr16
fxch
testb
push
out
movsb
xor
je
les
insl
in
sti
ficompl
sbb
in
out
notb
stos
and
subb
add
ja
andb
repz
adc
and
aas
or
clc
out
setl
insb
lods
or
popa
bound
push
cmp
pop
xchg
stc
or
cmpb
ljmp
in
xchg
xorb
lahf
and
push
ret
fcompl
in
arpl
call
repnz
or
push
jns
cmp
je
fdivrs
movsb
jns,pn
test
rclb
pop
bnd
in
mov
fcom
cmpb
ljmp
push
xor
adcl
or
dec
leave
xor
incl
scas
fstps
repnz
add
mov
ja
lahf
add
adc
or
and
xchg
scas
jecxz
xchg
cltd
orb
ret
in
push
lock
cli
mov
dec
cmpb
out
lods
es
xchg
jg
jmp
or
cwtl
dec
mov
je
sahf
mov
mov
xor
add
jno
push
add
pop
sahf
ret
xor
and
int
test
dec
jl
wbinvd
popa
subb
sub
xchg
cli
gs
pop
mov
cmpb
or
push
push
jp
pop
mov
push
aad
rcrl
cmc
mov
jge
dec
add
adcb
jbe
dec
iret
ljmp
adc
dec
fsubl
and
out
sbb
jle
scas
and
out
xlat
gs
andb
in
pop
dec
lret
ljmp
pop
adc
push
in
dec
inc
lret
cmp
addl
das
xchg
dec
sbb
inc
lods
std
xchg
and
sti
jbe
scas
ret
les
mov
add
mov
pop
adc
dec
xchg
filds
xor
loope
shlb
outsb
mov
push
rorb
aas
jnp
out
mov
xchg
push
inc
adc
sbb
mov
xchg
pop
and
fchs
sbb
mov
sub
lcall
sbb
scas
jno
addb
jns
jae
lret
mov
inc
xorb
sbb
ljmp
mov
nop
bound
pop
popf
sar
dec
jnp
iret
inc
xor
in
adcb
dec
shrl
out
subb
push
push
movsl
add
shr
les
andb
lcall
loopne
cmp
and
xorb
xlat
addb
cmp
lret
dec
xbegin
adcb
repnz
dec
mov
scas
or
xchg
sbb
push
arpl
mov
jne
out
xchg
dec
inc
je
xchg
jg
jbe
or
in
leave
sbbb
fnsave
cmc
push
cmp
ss
int
addr16
or
push
push
adcb
adc
mov
test
dec
filds
push
loop
ja
xchg
jle
cmp
or
and
dec
sbb
hlt
adc
rorb
call
inc
xchg
mov
add
xorb
ljmp
adc
sbb
mov
subb
add
cmp
and
sahf
or
cli
jnp
pop
inc
mov
call
ret
mov
add
add
clc
popa
or
aam
and
jae
xlat
push
adcl
mov
cmp
push
push
fsubrs
add
lret
in
adc
mov
jp
inc
or
test
cmpsl
xlat
testl
mov
popf
scas
push
dec
imul
or
xor
inc
xorb
pop
lahf
jnp
nop
adc
pop
addb
iret
push
and
mov
cmp
add
cli
xchg
mov
adcb
mov
bnd
andb
pop
das
add
mov
rcl
xchg
dec
mov
mov
mov
data16
inc
rcrb
rcrl
xor
lcall
faddl
cmp
sbb
aas
ret
or
rolb
jns
push
outsb
and
fldenv
push
cltd
add
dec
fdivs
sub
cs
xchg
push
cld
xorb
push
subb
out
shll
cwtl
sub
mov
dec
sub
sbbb
adc
orl
jmp
je
adcb
mov
dec
mov
add
push
repnz
dec
dec
or
jl
push
je
clc
adcb
pop
or
rcr
jnp
bnd
imul
shlb
mov
fs
dec
sahf
add
push
mov
adc
mov
inc
jns
cmpsl
out
xor
cmpb
lcall
outsl
mov
ljmp
flds
loop
push
cmp
lret
dec
xchg
and
test
cmp
out
cmpsl
loop
inc
rolb
fwait
sub
add
flds
push
popf
adc
stc
dec
shr
jns
jo
cmp
pop
call
adcb
sbb
pusha
imul
aam
mov
sbb
loopne
insb
orl
inc
orb
popa
xor
lds
mov
pop
call
push
push
addb
lods
pusha
sbbb
inc
mov
add
cmpb
das
lahf
rcll
jg
push
pop
pushw
ja
sbb
add
inc
lahf
loopne
cmc
xchg
xchg
sub
data16
in
xchg
scas
cmpb
mov
js
filds
in
adc
sbbb
out
sbb
jns
scas
fnstcw
loopne
into
pop
lods
xchg
movsl
or
or
cld
fbld
out
ret
clc
xlat
dec
ljmp
jno
inc
addr16
jae
mov
lods
adc
xchg
shlb
jle
cmpb
cmp
cmp
cs
jb
and
incb
ljmp
jnp
fs
sub
xchg
pop
adc
addb
add
pop
into
mov
cmpb
adc
cmpsl
jmp
push
sahf
pop
subb
fiadds
jne
mov
or
xchg
inc
nop
push
add
mov
fadd
fs
icebp
loope
xor
xor
sub
jge
xchg
arpl
adc
out
jge
add
push
je
pop
xchg
inc
adcb
sub
out
mov
ljmp
dec
jecxz
or
adcb
pushf
mov
cmp
lret
addl
cwtl
jg
rcll
mov
lcall
pop
cmp
and
jge
outsl
mov
jae
xor
lahf
xor
arpl
orb
sub
and
or
loop
insb
cltd
mov
int
lea
adc
adcb
pop
mov
out
in
mov
jbe
arpl
xor
jno
and
sub
cmp
pop
outsb
rcrl
std
addb
mov
mul
or
sub
fs
lahf
xchg
bsr
push
dec
frstor
xor
loopne
lahf
out
stos
xor
fsubrl
and
fistl
jae
nop
jae
xchg
ja
and
cmp
add
or
adc
and
sbb
xchg
cmpb
pop
xchg
fwait
insl
loopne
mov
mov
jmp
dec
push
pushf
sub
lods
out
arpl
ret
jecxz
cld
movsl
ja
and
addl
cmp
ss
and
andb
adc
xor
ss
das
inc
add
out
out
dec
sbb
fs
rolb
dec
lods
pushf
mov
fwait
lret
pop
popf
out
add
xchg
dec
stos
testb
iret
push
nop
pop
movsl
sti
fcompl
mov
andl
subb
mov
xchg
push
cmpb
nop
mov
dec
fwait
orb
mov
pop
movl
andb
jmp
mov
gs
inc
pop
and
cmpsb
call
in
dec
fcomps
pop
cmp
mov
imul
loope
sub
push
and
addb
jo
fistpl
pop
subb
stc
mov
xor
mov
push
lock
cmpl
lret
pushf
iret
orb
pop
lods
cs
adc
fimull
push
jae
hlt
bound
orb
fsubrl
cmpb
dec
stc
loop
sub
and
stos
sahf
cmp
in
cmp
mov
sbb
adcb
push
dec
int3
push
push
adc
jg
sub
xchg
dec
test
xor
xchg
in
dec
mov
fldcw
jmp
jb
sbb
mov
shlb
xchg
pop
in
lret
push
mov
subb
sahf
sti
adc
das
xor
test
jae
ret
mov
icebp
outsb
pop
sub
leave
subb
xchg
lea
scas
sbbb
fdivl
mov
out
sbb
push
xlat
subb
data16
cmpb
dec
push
and
xor
int3
dec
jns
std
roll
call
mov
push
lds
je
inc
dec
cmpsl
out
add
adc
push
iret
ss
sub
push
mov
lcall
mov
sbb
out
add
cmp
js
fisubl
xchg
lock
cwtl
fsubrl
cmpsb
pop
in
sahf
pop
add
or
sbb
bound
mov
add
xchg
xchg
into
clc
and
lods
cmpsb
push
dec
rcll
jae
orb
lcall
lret
ret
mov
les
out
stos
aaa
sti
lcall
pop
in
rcrl
ja
ja
and
mov
push
adc
ss
and
or
pusha
xor
iret
js
xchg
sbbb
inc
xlat
xor
xor
addr16
je
inc
ret
cmp
push
mov
mov
data16
in
das
dec
fisubrl
xor
mov
leave
add
mov
stos
lret
addl
inc
pop
mov
bound
or
add
stos
inc
add
pusha
dec
mov
adcb
scas
ja
out
std
add
mov
addb
inc
insl
mov
mov
jp
lods
or
out
jno
ss
leave
rcrb
aad
sub
pop
mov
inc
andb
test
cltd
cmpb
dec
jmp
mov
jnp
jge
push
or
dec
and
movsb
pop
push
cmp
mov
lea
inc
mov
imul
mov
in
andb
inc
mov
push
add
ja
or
adc
fimull
and
cli
data16
jno
cmc
xorb
cmpb
push
sub
addb
stos
movsl
pop
jae
sub
inc
xor
mov
inc
lea
pop
orl
jb
aaa
mov
jge
jmp
xlat
orl
cli
imul
test
arpl
fpatan
or
jnp
cwtl
pop
and
add
aaa
out
or
test
jae
and
jmp
xor
inc
cmpl
das
add
lret
pop
cwtl
dec
xor
mov
add
mov
xchg
xorb
dec
inc
inc
pop
pop
adc
pop
or
pop
orb
test
sub
pop
ja
push
push
lahf
icebp
cltd
xchg
aas
or
enter
xlat
jnp
cmpsb
cmp
jb
sub
orb
jge
jnp
mov
pop
divb
push
sub
sub
ss
aaa
or
jae
ret
aam
pusha
adc
inc
dec
push
scas
adcb
int
xchg
dec
orl
cmp
shll
or
clc
pop
push
bound
dec
lock
sub
xor
inc
ret
add
cli
mov
ret
and
es
mov
std
bound
enter
cmpb
jmp
xchg
addl
sbbb
cltd
rcpps
jnp
fnsave
sti
dec
lcall
cltd
roll
xor
shrl
jb
cmpb
push
push
bnd
inc
mov
cwtl
dec
mov
lds
testb
sahf
cltd
jo
fmul
test
and
mov
dec
aaa
dec
xor
fwait
push
pop
jns
enter
cwtl
xchg
ret
pop
test
mov
push
push
ljmp
das
push
mov
sub
scas
mov
pop
inc
inc
aas
int3
mov
xchg
loop
pop
and
das
outsl
sar
push
test
jmp
sub
mov
lcall
scas
loopne
test
pop
das
out
pop
sbb
scas
pop
inc
jp
inc
aas
scas
push
movl
cs
and
pop
lret
rol
xlat
xor
negl
lahf
ret
cmp
sub
ljmp
mov
test
or
xchg
scas
cld
lcall
bound
filds
popa
lret
mov
and
jecxz
insb
test
mov
push
imul
mov
jnp
ret
int
xorb
iret
pop
stos
xchg
or
imul
shll
xchg
loope
dec
adc
push
popf
cmc
jo
xlat
stos
sbb
jno
dec
push
loop
sbb
push
pop
ret
jbe
aaa
jno
fdivl
aam
mov
ret
stc
fisttpl
loopne
or
sahf
xlat
sbb
test
out
cltd
push
jno
ds
lds
lcall
fwait
aad
pop
push
jno
das
xor
jae
int3
xchg
jb
or
sbb
mov
pop
mov
pop
ljmp
push
cltd
inc
sbbb
xor
pshufw
stc
sarl
sub
fs
insl
js
inc
add
addr16
leave
xchg
and
xchg
pop
and
mov
stc
mov
orb
out
xchg
repnz
add
jmp
test
pop
in
xchg
loop
pop
pop
jb
xor
loope
push
lds
out
cltd
pop
movsl
loop
hlt
or
icebp
xor
int
push
add
es
adcb
in
jl
out
xlat
and
mov
inc
pop
outsl
lcall
jnp
xchg
inc
push
lcall
and
xlat
cltd
in
mov
xchg
loope
inc
pop
imul
rclb
nop
add
mov
dec
ja
mov
enter
repnz
or
vmwrite
xor
mov
mov
call
les
mulb
fsubrs
outsb
enter
inc
lds
xorl
or
sbb
ds
fisttps
in
dec
fdivp
jle
cli
adc
adc
int
ss
xor
int
fists
mov
xchg
jns
stos
outsb
jb
sbb
pushl
movsl
lcall
pop
pushl
out
idivl
xor
stc
pop
cs
in
leave
out
sub
mov
mov
jle
pop
clc
add
aam
dec
jp
push
pop
out
outsl
push
or
bound
cltd
bound
mov
push
into
mov
imul
mov
mov
xor
or
cmp
ret
mov
rolb
pop
mov
adc
or
fwait
loop
sbb
insl
inc
sub
add
lcall
imul
outsl
leave
lods
loop
mov
test
add
cs
ficompl
imul
ds
cmp
pop
insl
dec
test
push
adcl
xchg
sbb
xchg
push
inc
xorb
mov
pop
pop
aaa
js
cltd
out
pusha
out
dec
out
lahf
inc
subl
push
fistl
addb
sub
test
faddl
in
rolb
jns
push
add
mov
mov
or
subl
add
cmp
and
mov
lcall
cmp
add
popf
repz
mov
je
adc
stos
add
adc
jo
pop
leave
xchg
xchg
jp
sub
add
jb
and
dec
das
or
sbb
adc
subb
popa
xlat
and
mov
sub
lock
sub
subl
loope
jbe
out
subb
pop
cwtl
testb
xor
adc
andl
sub
xchg
or
mov
imul
inc
cli
sarl
dec
and
push
iret
out
repz
dec
xchg
add
mov
je
or
enter
xor
sub
lods
cli
data16
and
shll
dec
addb
pusha
jnp
gs
mov
inc
sub
pop
in
divl
idivl
add
cltd
and
jo
lock
test
insl
jns
ret
inc
sbb
mov
test
mov
sub
xchg
enter
popa
dec
inc
push
pop
add
push
cmp
xor
and
xor
push
ja
or
out
mov
cmp
jge
testb
xchg
add
loope
push
or
pop
or
out
mov
idiv
inc
cmp
sub
or
lcall
aaa
xorl
push
repnz
sub
add
adc
imul
dec
int
cmp
jle
pop
ficoms
lcall
sub
ret
cmp
cli
jns
and
repnz
sub
add
in
hlt
pop
push
push
adc
push
data16
dec
xchg
maskmovq
mull
fcomps
js
xor
fistpll
cmpsl
std
cltd
data16
scas
outsl
shll
das
push
xchg
jae
outsl
clc
les
and
scas
test
jb
sti
es
dec
jle
push
xor
ret
mov
cmp
cltd
test
roll
push
js
cmpsb
cmp
pop
aas
mov
and
mov
cmpsb
sbb
fstpl
js
adc
je
imull
flds
jecxz
lcall
hlt
ffreep
jecxz
pop
push
add
nop
sub
mov
scas
xor
lret
inc
out
push
inc
jp
push
into
push
push
sbb
test
movl
jae
adc
stc
in
mov
or
jo
mov
jl
aaa
lods
jle
sbb
into
sub
addr16
mov
fnstenv
and
dec
cli
cmc
dec
sub
pop
popf
les
jmp
enter
hlt
repz
lret
push
and
lcall
scas
mov
stc
shlb
es
stc
adc
jo
int
lcall
cli
dec
mov
iret
std
jo
sub
pop
xor
insl
xchg
inc
or
mov
stos
nop
outsl
out
ljmp
jmp
mov
icebp
ret
mov
pop
enter
xchg
or
xor
in
mov
push
mov
push
enter
fdivl
into
jl
add
push
jmp
loopne
xor
dec
mov
sbb
andb
pop
adc
pop
outsl
jmp
cltd
mov
and
jl
lcall
andl
sbb
addr16
hlt
out
sub
subb
xchg
cltd
jns
xlat
popa
orl
cltd
sbb
outsl
pop
ja
out
es
mov
nop
mov
aaa
ja
jo
ljmp
stc
adc
mov
lods
jne
push
mov
or
clc
fstpt
or
ds
in
stos
outsl
imul
push
fistpl
incl
inc
les
lock
sahf
outsb
cli
jb
adcb
test
jne
lret
jg
sbb
outsb
cwtl
repz
xor
ljmp
subb
xlat
fwait
sbbb
gs
mov
cld
loopne
fmuls
xorb
jp
subb
xchg
enter
inc
orb
vsubss
adc
jle
nop
popa
xor
test
dec
mov
iret
cmp
imull
xchg
addl
lret
mov
or
ficoms
and
out
popf
orb
mov
ret
lcall
mov
daa
jecxz
lods
jae
movsb
in
jnp
icebp
xor
xor
stc
outsl
test
popa
fwait
das
andb
dec
mov
movsb
ror
cmp
popf
inc
mov
out
jo
cmpsb
and
in
outsb
test
sahf
adc
in
fld
push
rolb
fidivl
call
lcall
jb
popa
or
lods
rclb
fcmovnu
data16
jmp
pop
lret
cmp
sbb
inc
sub
inc
out
xor
lock
jl
stc
dec
sbb
push
adc
add
mov
jnp
in
call
pop
inc
sbb
sbb
ss
xchg
jns
aam
or
xchg
fisubs
popf
or
int3
mov
lea
sub
and
or
out
dec
jg
inc
push
decb
ljmp
xchg
orb
stos
stos
mov
xor
int3
les
xor
out
pushf
sbb
mov
mov
stc
outsb
xchg
mov
add
dec
jle
add
test
repnz
jns
or
or
inc
movb
xchg
mov
xor
add
xlat
mov
xchg
adc
repz
adc
pushf
xor
int3
cmp
mov
xor
cwtl
add
add
and
ja
sbb
es
rcrl
loop
pop
cltd
push
inc
in
int3
mov
mov
ds
addr16
dec
adcl
shlb
iret
jg
xor
pop
into
xchg
andb
cmc
push
test
into
lea
lds
jle
iret
cs
imul
insl
fnstenv
xor
mov
pop
dec
movsb
es
lcall
xor
push
outsb
xchg
loop
mov
lret
test
sub
mov
jno
enter
and
dec
dec
loopne
in
add
adc
mov
mov
xor
add
mov
ljmp
out
cwtl
rolb
cli
push
cwtl
pushf
jg
clc
add
aam
sub
in
push
lods
aaa
pusha
add
pop
sbb
cmc
push
pushw
arpl
outsl
jno
lods
test
xchg
sbb
dec
pushf
jae
adc
mov
arpl
into
push
cmp
mov
call
and
pusha
imul
xchg
xchg
inc
imul
movsb
sahf
push
int
scas
push
testl
test
and
das
mov
and
jo
lods
and
xor
std
enter
ds
xorb
mov
fstpl
aaa
into
mov
shrb
pop
loopne
and
fidivrs
push
push
aam
and
mov
or
lods
sub
mov
scas
xchg
sbb
out
rolb
rol
sbb
sub
xor
pop
cld
lock
mov
in
scas
pop
push
mov
mov
pop
mov
fldl
jl
outsb
cmc
in
mov
jbe
cli
mov
test
cmp
sbb
mov
cmp
push
push
mov
sub
xchg
lea
and
out
dec
mov
aam
sbb
jg
jnp
into
lcall
loop
jle
nopl
jbe
mov
jae
inc
jecxz
xchg
inc
cli
push
cmp
aad
shlb
and
xchg
sub
enter
mov
int
and
js
subl
bound
outsl
pusha
fnstenv
jmp
xor
push
pop
cmp
push
and
sbb
lret
inc
inc
push
cmc
addb
or
fiadds
fildll
lret
std
mov
stc
mov
mov
out
add
jecxz
and
and
lcall
dec
and
out
into
add
jg
cmp
sub
popf
mov
pop
aad
icebp
iret
sbb
aas
mov
cmp
cld
in
push
out
jp
outsl
xchg
push
cmpsl
into
mov
inc
out
imul
push
cli
insb
pop
adc
outsl
jbe
adc
cltd
sbb
jmp
fiadds
movsl
mov
cmp
je
ror
mov
cmpsb
sbb
mov
mov
mov
subb
movsl
push
das
lcall
dec
mov
std
xor
loope
stc
das
dec
mov
subl
arpl
jp
add
xchg
jae
js
mov
pop
fs
pop
outsb
mov
lds
xchg
sub
push
and
lock
and
ret
adc
xor
iret
sbb
pop
add
dec
ret
add
cmp
hlt
or
jo,pt
divl
xor
loop
mov
push
and
out
pop
cmpl
dec
sub
and
push
jno
stos
int3
dec
stos
cld
bound
add
lcall
out
xor
pushf
cli
dec
push
push
enter
and
addb
pop
mov
loop
gs
jge
fstpl
jne
jle
xchg
mov
jmp
scas
push
rorl
pop
cltd
sub
sbb
sub
push
mov
pop
loopne
js
push
std
pushf
fidivs
sub
mov
daa
jle
loopne
inc
out
lret
jnp
xor
jne
bound
sub
jo
mov
andb
jns
js
cltd
xlat
enter
pusha
aad
inc
fnstcw
dec
add
xor
loope
push
push
mov
push
pop
xor
or
push
mov
std
pushf
fadd
mov
sbb
test
cltd
xor
repnz
jae
lds
dec
mov
mov
outsb
cwtl
ret
and
mov
aaa
ficoml
push
bound
loope
jo
out
movsl
mov
idivl
comiss
not
sub
dec
stc
ret
repz
js
lcall
pop
and
xchg
fnstsw
xlat
and
cmp
aam
dec
push
and
and
push
push
sbb
dec
xchg
mov
inc
jb
xchg
xlat
xor
pop
xchg
std
lods
js
mov
jo
push
xorb
pop
dec
addl
cltd
popf
xor
mov
push
push
jo
fnstenv
mov
negb
jbe
into
inc
cmp
add
lds
pushf
jmp
cmp
push
jle
lods
sub
das
out
out
leave
sbb
and
into
ljmp
imul
push
pandn
imul
in
mov
stos
xchg
mov
xchg
jle
pop
jmp
adc
adc
xchg
pop
pop
lret
stc
push
pop
outsb
push
out
dec
sub
outsl
and
mov
std
sub
sbb
jecxz
pop
inc
repnz
int3
cmpsl
mov
xchg
into
movsl
mov
repz
mov
insb
adc
push
mov
fisttpll
xchg
mov
cmp
repnz
ds
outsb
loope
ss
jb
push
push
pop
test
dec
fsubl
add
adcl
mov
xor
bound
inc
data16
stc
sub
mov
movsl
jae
mov
push
ja
mov
lcall
push
pop
dec
or
inc
pop
icebp
testl
cltd
xor
insl
sti
lock
cwtl
dec
dec
out
mov
add
xchg
lds
push
jnp
cmc
lret
push
shrb
lds
roll
inc
lcall
ds
insb
inc
mov
jp
mov
xchg
inc
add
inc
jl
loopne
fdivrl
xor
out
in
ja
xorl
mov
pop
lds
xchg
pop
sbb
cltd
aas
pop
fildl
icebp
mov
fwait
stos
add
xchg
sbb
insb
pop
cli
jbe
stos
jae
ret
cld
jecxz
sub
mov
mov
bound
cli
xor
sbb
push
and
lcall
repnz
repnz
scas
dec
xchg
cmp
bndldx
repnz
std
push
orb
out
movsl
cld
lret
push
mov
cltd
cwtl
out
jecxz
aam
jecxz
out
cmp
sbb
jns
int
das
in
mov
pop
punpcklbw
test
pop
out
jno
mov
shrb
jp
imulb
sub
inc
mov
jnp
sti
sub
cmp
out
ds
pushf
ret
dec
or
pop
xchg
cltd
sub
mov
push
or
sbb
pop
mov
xchg
subl
inc
repnz
pusha
inc
lods
cmp
sbb
test
lds
mov
mov
jp
sub
je
ret
sbb
icebp
icebp
xor
mov
fwait
and
push
sahf
inc
int
xor
jo
test
ljmp
jae
sbb
sub
and
cmp
int
inc
pop
lret
inc
sbb
xor
xchg
or
jecxz
push
add
loopne
call
fcomps
add
ret
mov
mov
test
xlat
popa
and
inc
gs
pop
sarb
and
sbb
pop
mov
pusha
movsl
xchg
fstpl
pop
ror
orl
cmp
and
nop
data16
lret
xorl
test
jns
lret
push
shr
jns
add
and
xor
repz
lcall
add
add
pop
add
lds
and
lds
mov
sub
aas
xor
jno
cli
pop
xor
sti
jns
int3
cwtl
rcll
cmp
aas
sti
notl
jp
inc
les
loop
lcall
inc
sub
mov
push
out
jl
test
test
cmc
outsb
movsl
mov
jl
std
lcall
xor
icebp
scas
lret
stos
pop
push
mov
add
jae
sbb
mov
sub
and
enter
xor
fildll
push
sub
push
pop
aad
pop
scas
scas
and
and
imul
jmp
sbb
mov
cmp
dec
jbe
mov
aad
inc
cli
add
js
loopne
push
outsl
shll
stc
sbb
jge
insl
aad
pop
cs
sbb
sub
and
sbb
hlt
jge
jb
lods
lcall
pop
push
idivb
lret
jb
fidivrs
lret
adc
int3
cltd
bound
pop
scas
jmp
push
mov
out
lret
mov
pushf
dec
jecxz
test
mov
cmpsb
std
call
jecxz
mov
cmc
dec
adc
or
loop
sbb
orl
xor
outsl
push
xchg
popa
xchg
fcmove
inc
cmc
int3
inc
mov
bound
lods
popf
mov
int3
shl
sub
inc
imul
and
cltd
sbb
xor
inc
jp
xlat
mov
xor
fimuls
ret
and
ficoms
leave
or
jp
icebp
xor
add
mov
std
push
test
out
filds
pusha
aaa
cmc
cwtl
scas
loop
mov
scas
jo
adc
nop
cmp
jo
sbb
jo
cmpsb
inc
jle
es
addr16
dec
addr16
and
xchg
jns
cmc
dec
mov
sub
jb
std
mov
mov
iret
jmp
pop
and
outsl
xor
negb
mov
sahf
test
ljmp
sysenter
js
xchg
rol
xchg
jnp
ds
arpl
xor
adc
popa
pop
dec
lock
jns
lcall
xorl
ret
inc
push
iret
and
pop
cwtl
pop
add
dec
jl
sub
call
les
adc
lcall
pop
repnz
dec
scas
fisttps
pop
fcmove
push
or
ljmp
sbb
adc
jg
into
xchg
mov
mov
loope
push
ret
adc
in
repnz
enter
inc
cmc
into
popa
adc
popa
dec
sub
cmpsb
shll
mov
aaa
repnz
mov
orb
cmp
test
rcll
pushf
add
pop
pusha
ret
inc
enter
insb
cwtl
pop
mov
aam
lods
xor
cmp
cwtl
push
cld
les
jnp
sbb
or
jmp
jge
pop
stos
lds
sub
mov
sbb
sbb
xor
leave
lods
xor
mov
ret
aas
inc
add
ds
ret
les
inc
inc
rcrl
addb
mov
movsb
add
mov
scas
pop
bound
jle
scas
lcall
xor
fstps
sbb
pop
ja
mov
sahf
cwtl
xor
scas
cmc
std
lods
sub
cmp
lcall
mov
jp
aad
cmp
mov
out
adc
xchg
mov
insb
into
loopne
push
test
loop
push
ficomps
add
or
repnz
and
fwait
out
fs
cltd
inc
sbb
xchg
dec
sbb
dec
cmp
xchg
push
fdivs
sub
aam
add
dec
orb
in
push
mov
shll
rcll
and
xchg
sbb
jns
ror
xchg
mov
add
lcall
addb
pmulhw
sti
and
int3
or
insb
jbe
or
and
lcall
ret
pushf
pusha
in
fucomi
push
xchg
pushf
stos
pop
vmread
pop
loop
pop
push
cwtl
subl
insb
mov
jbe
xor
rcrb
incl
sub
loopne
push
scas
cltd
dec
int3
pop
lcall
pop
jo
fstps
imul
sub
xor
dec
cltd
ljmp
setle
lcall
test
insb
imul
pop
pop
call
and
loope
mov
sub
jp
jl
sbb
pop
adcl
and
in
out
stc
xchg
add
stos
scas
cmc
andb
aas
pop
shll
push
mov
pop
lcall
rcr
jecxz
push
add
jbe
sti
add
mov
movb
adc
rolb
mov
jp
lret
mov
fistps
pop
andb
icebp
sbb
cmp
inc
aaa
fidivrl
add
and
pop
xor
lcall
loope
test
data16
mov
jbe
fcmovnb
xchg
popl
xor
ds
dec
enter
cmpsl
cltd
mov
sub
in
mov
sbb
jns
add
int
mov
mov
mov
add
idiv
push
scas
pop
sbb
pop
inc
stos
mov
pop
bound
and
fdivrp
dec
shlb
icebp
adc
int3
cmp
pop
jne
movsl
cmp
push
pop
cmp
xchg
loop
gs
add
cltd
cmp
mov
cmpsl
cmp
nopl
ret
xchg
push
scas
aaa
addr16
mov
jnp
rcll
pop
or
repnz
and
ret
push
mov
dec
je
negb
add
xor
jne
sti
dec
xchg
jge
popf
inc
dec
cmp
jp
sub
test
jnp
mov
icebp
push
fmuls
push
adc
inc
sarl
xlat
xchg
lock
adc
jno
bound
pop
bound
cltd
loopne
in
mov
lods
mov
jmp
ljmp
mov
or
fimuls
ret
jmp
inc
xor
lcall
adc
cli
dec
or
lods
pop
cmp
lret
clc
shrb
out
adc
push
pop
lcall
pop
lock
js
mov
lcall
mov
push
inc
andl
xor
jb
in
cmp
into
imul
jp
inc
fnstenv
jns
les
test
inc
and
dec
push
mov
addr16
cmp
mov
mov
xchg
daa
loop
jge
outsl
mov
jb
jle
push
ss
mov
xchg
lods
inc
add
fildl
sub
add
je
mov
lea
test
loope
frstor
jae
mov
sbb
xchg
lea
pop
and
inc
inc
sub
lret
insb
push
aam
jmp
push
jne
xchg
mov
jp
lock
repnz
shlb
inc
into
mov
lds
pop
mov
lods
sbb
sbb
dec
ja
int
sbb
mov
call
lock
add
pop
mov
popa
or
pop
jle
adc
lds
out
jp
mov
mov
lods
loop
aas
fdivs
dec
jle
faddl
or
sub
add
pop
out
sub
mov
repz
sub
in
nop
ficomps
and
sbb
mov
outsb
int3
lret
jns
mov
inc
push
xchg
sbb
fisttpll
cmpsb
inc
add
sbb
or
inc
jnp
test
adc
in
frstor
pop
xor
imul
mov
lret
jge
sub
push
jg
xor
nop
pop
pop
ret
mov
xchg
push
aaa
gs
and
pop
ret
adc
mov
cld
mov
das
int
pop
push
adc
lock
mov
stc
xor
jns
jnp
push
jecxz
push
xor
ja
movl
sub
fwait
movsl
popf
and
out
lods
int
sub
js
and
push
out
mov
sbb
aam
inc
shlb
add
pop
rclb
jo
pop
mov
sbb
xchg
rorl
ja
jge,pt
lock
insb
and
ja
cltd
mov
testb
xchg
sub
pop
add
nop
stos
sti
cmp
movsb
mov
sbb
pop
sarb
mov
lcall
mov
or
add
sub
lret
sbb
push
lahf
pop
and
cli
lods
dec
inc
sbb
arpl
sbb
sbb
out
mov
inc
cs
lds
lcall
and
test
push
movsb
rcl
cli
cs
test
xchg
fcoms
xchg
inc
test
cmp
je
mov
shl
add
test
lcall
cltd
cmp
adc
ja
xchg
xor
sub
inc
cli
xor
sbb
jne
out
je
push
push
jns
push
push
cmp
hlt
dec
mov
jae
adc
lods
in
nop
dec
cmp
fwait
inc
and
cmp
push
ja
insb
jg
push
rolb
dec
xor
pop
test
in
fwait
jg
call
jmp
ja
les
or
xchg
lods
add
sub
jo
and
stc
mov
stos
xchg
or
mov
jecxz
xchg
lcall
push
sbb
in
mov
mov
jg
jae
xchg
jl
cltd
sub
aaa
sub
add
cltd
iret
and
pop
and
nop
lods
jge
int3
fiaddl
cs
push
shrb
jecxz
dec
es
adc
pop
pop
sahf
mov
ljmp
fnstsw
mov
dec
add
in
inc
sub
jbe
std
aad
pusha
enter
cltd
test
addl
sbb
jl
in
sub
frstor
inc
aad
jp
in
cmpsl
push
es
stc
repnz
add
push
sti
add
push
jbe
data16
jo
jb
and
cmpsl
mov
pop
mov
movsl
mov
fsubrl
mov
daa
test
lock
cmp
clc
jnp
mov
pop
pop
mov
ret
out
mull
jmp
jl
mov
push
sahf
jmp
jge
xor
sahf
jmp
xor
mov
in
mov
push
sub
lret
shll
and
xlat
jb
je
xor
sahf
fcoms
push
xchg
ficompl
ret
dec
xchg
add
sbb
xchg
outsl
mov
cltd
cmp
pop
pop
pop
pop
inc
lds
lea
jl
movsb
jecxz
pop
jge
ds
cmp
add
fsubrl
ss
fisubrs
and
add
sbb
bound
pop
iret
out
inc
xor
outsl
lock
and
dec
bound
fst
xchg
icebp
sub
cmp
sbbl
add
dec
xor
loop
jns
fadds
outsl
pop
loopne
dec
cli
shl
stos
sub
push
pushf
and
or
out
cmp
push
aaa
stc
mov
inc
test
insb
xchg
outsb
xchg
xchg
mov
sbb
xchg
jmp
and
adc
lods
cmp
xchg
sbb
xorl
jae
push
cmpb
sahf
jae
lcall
dec
dec
add
adc
mov
adc
popf
test
and
daa
lcall
ja
cmp
mov
lcall
mul
mov
push
push
bound
mov
mov
rolb
mov
and
les
sbb
mov
mov
lds
cmp
sti
sub
sbbb
loope
inc
stos
mov
lcall
stos
mov
inc
divb
sbb
mov
bound
cli
pushf
shll
stos
jbe
dec
mov
xor
sbb
int
stos
add
sbb
add
add
cwtl
les
shlb
sub
push
mov
adc
fdiv
in
bnd
cmpsl
xchg
in
mov
inc
mov
or
mov
sub
ret
jnp
andb
js
sub
repnz
nop
mov
cmp
addb
sbb
fs
test
xchg
bound
cmc
in
out
insl
pop
lcall
gs
stos
lea
dec
fadds
sub
jmp
lods
add
sahf
cmp
lcall
mov
test
mov
shl
addr16
stc
and
adc
test
out
lcall
add
ja
inc
outsb
cmp
cwtd
shlb
xor
test
ja
mov
test
roll
fs
sbb
mov
outsl
ret
lds
fisubrl
dec
push
push
cli
jmp
push
xchg
mov
jb
les
in
aad
ljmp
aam
int3
in
test
mov
cwtl
lds
jp
inc
test
xor
cli
cmp
mov
push
sbbb
cmc
pop
test
ret
xor
inc
mov
jmp
je
decb
outsb
std
mov
sub
les
add
scas
dec
cmp
int
inc
aam
jge
stos
pop
mov
testl
call
daa
lock
in
inc
xchg
xor
ret
outsl
test
jl
insl
jp
mov
sbb
inc
cmp
jbe
lcall
movq
stos
insb
cltd
into
call
pop
in
aaa
ja
sub
mov
ja
dec
es
xchg
inc
in
dec
sbb
cmpsb
movb
pop
stc
es
sub
std
cltd
push
jg
neg
outsb
lds
repz
movb
jmp
pop
mov
xor
jo
je
xor
repnz
test
jno
pushw
adc
sub
inc
xor
sbb
outsl
dec
ficompl
dec
add
clc
loopne
pop
add
fnstcw
cs
mov
lds
dec
ds
repz
popf
cltd
sbb
and
sbb
enter
mov
in
adc
cmpsl
inc
mov
xchg
cltd
push
ficompl
sbb
push
repnz
jle
cs
sahf
andb
clc
cmp
sub
adc
xchg
dec
loope
sbb
and
stc
push
jbe
lea
cmpsb
ljmp
or
or
dec
xor
shlb
jns
cmp
ja
ficoms
jl
dec
data16
std
xchg
inc
stc
mov
arpl
xor
pop
xchg
ret
loopne
mov
sbb
xchg
pop
mov
pusha
push
push
lods
xor
dec
inc
mov
push
pop
jb
outsl
ret
and
aaa
push
mov
fisubs
addr16
inc
int3
stos
shrb
fstpt
jns
push
dec
rcrb
and
jb
jmp
test
in
jo
sti
lods
ror
sbbb
ret
popa
add
loop
cmp
adcl
sti
inc
cltd
adc
add
test
adc
testl
jp
aad
subl
cmpl
jmp
inc
std
sarl
shrb
jmp
pop
and
aas
and
lcallw
mov
pop
sub
fidivrl
pop
les
mov
es
out
adc
stc
jbe
scas
pop
xchg
std
mov
out
inc
outsl
data16
insb
ljmp
mov
push
and
inc
push
cmp
out
imul
sub
pushf
push
gs
adc
xor
mov
repnz
dec
sbb
repnz
outsb
sbbl
or
inc
lock
sub
fisttpl
cli
fisttpl
mov
cmpsb
cltd
sbb
cltd
jp
mov
ds
jbe
adc
lock
or
lcall
das
popf
pop
mov
sub
std
lcall
icebp
mov
jmp
fs
jo
ret
jp
push
push
inc
inc
sbb
push
jne
xchg
or
dec
push
imul
daa
cmp
dec
ljmp
mov
les
testl
mov
rcrl
add
cld
mov
jo
sti
push
shlb
cs
sahf
shlb
call
shl
fldt
jno
mov
push
push
mov
cmp
sub
ret
outsl
xlat
into
aaa
pop
imul
popf
xchg
inc
insb
lcall
sarb
mov
insl
add
cmp
daa
repnz
sbb
pop
mov
jne
lcall
stc
call
cltd
pop
push
xor
lcall
push
jnp
pop
jp
inc
jb
outsl
fdivs
and
pusha
iret
ja
fidivrs
mov
xchg
add
movl
inc
jge
mov
pop
add
push
xor
test
add
cltd
pop
enter
pop
jb
scas
and
movsb
outsb
fbstp
out
mov
pusha
mov
jns
scas
scas
xor
mov
mov
ds
lret
cltd
push
std
dec
pop
lcall
and
in
inc
sub
mov
dec
pop
and
xor
inc
lods
push
lcall
sbb
push
sbb
lods
cltd
xchg
fadd
cli
jl
ret
jb
nop
jnp
ficompl
pusha
xchg
adc
sbb
cwtl
push
movsl
jbe
jb
scas
test
icebp
clc
push
push
and
ljmp
push
outsb
cwtl
pusha
cwtl
add
aad
cmpsb
jno
loop
popf
push
jmp
sub
jns
push
jg
pop
ds
pop
shlb
out
dec
jne
mov
and
xor
mov
pop
fsubrl
fmuls
sbbb
imul
xorl
push
mov
cmc
aad
xchg
jnp
inc
ljmp
dec
test
ds
jbe
add
jnp
loope
icebp
push
lods
jb
sbb
sti
in
cli
xchg
push
popf
add
movsb
sbb
lock
add
mov
loopne
mov
ret
inc
xchg
push
lock
sub
inc
lcall
mov
mov
mov
fmul
cld
fnsave
cmp
dec
lcall
and
and
xor
inc
out
mov
imull
fwait
lods
imul
pusha
ds
push
mov
pop
fdivrl
enter
fadd
adcl
js
xor
repnz
cltd
jne
les
mov
mov
lods
div
pop
test
fmulp
shrb
jle
cmp
jle
mul
and
bound
adc
jecxz
xor
int3
nop
out
loop
cwtl
jp
and
imull
stos
pop
jae
mov
lock
outsl
add
sarb
lods
push
ror
push
jg
push
sub
jge
push
lcall
mov
rorl
sub
dec
test
mov
cs
and
nop
out
jo
jp
fisttps
outsl
xor
fidivrs
sub
leave
or
add
jo
in
mov
pop
jle
aam
xchg
cmp
sbb
stos
dec
inc
cltd
push
sbb
pop
bnd
lret
and
cltd
inc
mov
mov
xor
div
loop
rcrl
imul
sti
inc
enter
stos
add
or
mov
mov
adc
and
sub
outsl
popa
pop
xor
add
int3
or
push
cmp
inc
aas
or
js
fs
mov
lidtl
daa
xor
sbb
nop
push
mov
enter
data16
mov
imul
repnz
add
roll
jmp
loopne
cmc
xor
xor
imul
loope
cmpsb
inc
rorb
push
jno
jbe
stc
jb
mov
push
and
orl
cmc
and
addl
mov
cmc
outsl
out
sub
and
movsl
sub
push
testl
and
or
mov
jp
mov
stc
insl
jp
adcb
daa
mov
mov
cli
lcall
pop
repnz
and
cmp
jb
insb
pop
push
adc
add
adc
imul
push
adc
in
cmp
adc
and
mov
add
inc
sub
jnp
xchg
dec
pop
push
sub
aas
push
sbb
ret
rclb
lods
sarl
imul
lret
orb
lods
repnz
nop
jl
ljmp
test
lcall
add
pop
popa
push
int3
ss
ja
xor
ficomps
iret
lret
sti
jle
negb
outsb
ljmp
pop
push
into
xor
pop
pop
dec
cmp
das
sbb
jl
and
lret
outsb
in
stos
rcrb
popl
incb
add
lea
dec
xor
lcall
xchg
xor
lret
stos
into
test
push
or
rcrl
push
lret
out
incl
xchg
repnz
fnstenv
sbb
sub
mov
das
lcall
mov
ret
leave
dec
jnp
jb
out
outsl
outsl
adc
loop
add
adc
dec
mov
pop
add
sub
imul
lret
movsb
rcrl
sarb
mov
sahf
lea
mov
into
subb
mov
mov
sbb
ss
or
test
xchg
xor
jb
sub
xchg
enter
push
fists
mov
push
aaa
add
dec
outsb
xlat
fmulp
sbb
shlb
cltd
inc
lcall
cli
cs
insb
pop
jp
outsb
ja
sub
inc
mov
jl
cltd
and
pop
in
push
or
and
aaa
lret
cmp
cmp
dec
push
mov
pop
aas
push
ret
add
jmp
sahf
sbb
adcb
test
jmp
nop
pop
push
pop
xor
in
or
xor
jmp
pop
int
pop
xchg
push
and
lock
xchg
mov
adc
pop
pop
lret
cmp
scas
shrb
xor
inc
in
sbb
orl
in
fstpt
out
xorb
divl
lds
jge
push
mov
fisttps
js
into
pop
pop
or
cli
sbb
enter
dec
jp
or
and
loope
es
loopne
int
je
jo
push
outsl
outsl
imul
add
push
inc
movsb
dec
aaa
sub
fcoms
xchg
jns
xchg
and
cmp
std
mov
enter
stos
inc
xchg
aad
jle
cltd
pop
jl
bound
repnz
jne
aad
sti
sti
dec
pop
jp
out
pop
iret
in
hlt
mov
fstps
ds
or
loope
es
out
jecxz
mov
xchg
cli
scas
int3
push
test
stos
xchg
and
hlt
xchg
lret
jo
cltd
incb
int
adc
dec
xchg
sahf
fistl
movswl
sbb
enter
jno
push
mov
outsl
test
lea
fadds
adc
daa
cli
mov
xchg
and
mov
dec
aad
shlb
mov
scas
lret
lret
and
enter
lock
cmpsb
push
jge
into
jp
scas
cltd
in
outsl
lds
pushf
push
insb
mov
lds
and
inc
addb
push
push
inc
lret
shr
test
fsts
clc
jg
dec
sbb
and
xor
movsl
push
pop
jmp
loope
push
popa
popf
xor
incl
les
lret
add
dec
jecxz
add
lea
xlat
cmp
inc
mov
jecxz
int
pop
jae
fsubrs
std
xchg
movsb
shrb
lods
lods
aaa
pop
or
mov
add
cmp
pop
push
jmp
mov
enter
push
sbb
lahf
cmc
inc
jp
pop
inc
xlat
pop
lret
jecxz
leave
sbb
dec
stos
incb
mov
pop
push
pop
xchg
fcomp
xchg
loopne
inc
lret
jl
scas
ret
test
inc
cltd
imul
stc
lock
testb
inc
daa
xchg
orb
push
xchg
pushf
sbbl
adc
rolb
pop
adc
add
jge
sbb
ret
cmp
dec
jnp
out
mov
and
mov
loop
jnp
push
inc
add
sbb
in
jnp
sti
jae
push
scas
ljmp
insb
imul
mov
data16
cmp
pop
orb
push
or
pop
cli
adcb
push
cmpb
pop
sbb
addb
out
addb
stc
and
adc
outsb
cmc
push
pop
or
fiaddl
int3
add
jecxz
pop
xor
addb
or
subb
rcl
dec
dec
lahf
addb
insb
movsb
mov
add
mov
int
jg
mov
mov
cmp
push
sarl
sbb
call
ja
cmpb
lods
push
jle
mov
in
in
and
addb
mov
and
mov
je
lds
mov
in
loope
lea
dec
repz
cmp
andb
pop
mov
call
and
int
xchg
sub
das
nop
xchg
jo
ljmp
inc
jg
cmpsl
push
sub
repnz
outsl
subb
mov
lds
or
adc
ljmp
dec
scas
in
push
mov
loopne
call
pop
movsb
stos
jmp
inc
add
aam
jle
or
pop
lods
inc
mov
fs
mov
testl
hlt
jb
cmp
lret
sahf
loop
or
stc
in
nop
int3
insl
ret
fsubrs
jnp
add
aam
adc
js
int3
sti
dec
out
cmp
pop
xor
xor
jae
mov
stos
or
addr16
or
lret
inc
scas
sub
mov
add
push
mov
loop
fadd
cltd
out
lods
testb
mov
mov
into
dec
sub
sar
and
popa
out
aam
sahf
and
ss
ja
mov
scas
mov
loopne
outsl
inc
insb
rorl
push
repnz
mov
insb
flds
xchg
inc
sbb
pminsw
aad
mulb
repnz
sti
test
push
into
lea
dec
jo
pop
loopne
xor
or
add
jl
sbb
xchg
push
mov
pop
call
cmp
and
xchg
idivl
fwait
xchg
mov
push
ret
test
outsb
mov
pop
ret
rcrl
stc
lock
mov
xor
mov
jp
lea
sbb
test
cmc
lods
sahf
add
jbe
or
sub
jge
lret
jl
stc
add
add
dec
dec
mov
and
sub
outsb
lcall
add
sti
mov
jnp
divl
aad
in
adc
nop
lcall
lea
fistps
cmp
jle
jb
xlat
add
sbb
mov
ja
cltd
seta
mov
repnz
adc
sbb
pop
cmp
pop
xchg
push
or
in
popf
ficompl
inc
or
push
sahf
dec
outsl
ds
out
mov
xor
inc
xor
sti
es
dec
lret
lcall
negl
cmp
stos
dec
inc
pop
in
dec
repz
enter
data16
mov
scas
cltd
test
pop
gs
or
aaa
int
mov
add
aam
adcl
dec
xor
inc
jbe
lret
lods
lahf
bound
addr16
dec
inc
mov
sbb
inc
mov
dec
jns
loop
mov
jbe
mov
faddp
mov
jns
sub
xchg
ret
imull
lretw
jns
cltd
sbb
sub
push
call
in
lcall
cli
cmp
xlat
aam
push
pop
repnz
loop
test
out
aaa
fcoms
add
es
jle
test
fcmovne
popa
cltd
adc
jge
xchg
nop
cli
outsb
data16
repnz
or
sub
and
in
out
cli
fistl
inc
xorl
insb
stc
clc
xchg
std
add
das
enter
test
and
lret
inc
enter
lea
pop
xchg
cli
mov
je
sbb
xor
sub
push
in
xchg
add
pop
push
mov
js
mov
sar
jmp
mov
dec
addr16
pop
int
inc
test
imul
and
scas
aam
pop
cmp
imul
jg
nop
adc
fdivr
sub
xor
xchg
in
outsb
negb
xchg
shlb
into
mov
lods
push
ret
outsl
gs
xchg
push
pusha
pop
out
fidivrs
adc
fldt
clc
fwait
xchg
xorb
lods
xchg
stc
sbb
mov
in
sub
insl
arpl
ljmp
fnstcw
dec
pop
roll
loopne
mov
sub
movsl
xchg
cmpsl
sub
xchg
adc
push
nop
lea
jge
orb
xor
jmp
add
rcll
mov
push
repnz
xorb
arpl
fnstcw
or
sbb
xchg
push
lock
or
jnp
xchg
imul
xlat
adc
ret
dec
filds
pop
test
push
push
mov
insb
push
fcomi
mov
jno
ljmp
mov
fbld
aad
or
fstpt
imulb
cltd
push
sub
in
popf
mov
cwtl
mov
fadds
stos
ds
hlt
dec
add
sti
xchg
mov
lret
out
shrl
popf
or
data16
xchg
push
xorb
mov
mov
mov
or
lahf
aam
fadds
das
pusha
ret
jecxz
movsl
mov
cmp
xchg
add
testl
gs
dec
push
xor
mov
aad
fldl
push
pusha
andb
sub
push
mov
push
dec
enter
js
xchg
sbbb
outsb
ficompl
mov
je
fadd
loop
out
ret
addb
arpl
lahf
int3
jns
add
xchg
xchg
push
addb
aam
in
popa
insb
orb
test
adc
fwait
insl
pop
test
insb
xlat
dec
sbb
ret
das
jge
jnp
lods
mov
jge
dec
lea
in
in
push
xor
loope
fwait
xchg
lods
andb
aas
dec
fs
test
ud1
iret
mov
or
sub
xlat
push
mov
push
inc
sub
lods
xor
adcb
dec
jbe
and
fsts
add
mov
scas
dec
orb
inc
aaa
push
mov
mov
daa
mov
cmpb
xor
inc
cmpb
sarb
arpl
dec
ja
sub
adcb
outsb
fwait
loop
leave
sbbb
jmp
and
pusha
es
dec
pop
add
scas
lds
lea
pop
and
push
in
add
in
adc
sub
arpl
movsl
xchg
and
mov
xorb
mov
adcb
xor
ds
push
or
pop
cmp
lret
add
xchg
lods
cmp
sub
jecxz
stos
in
adc
jo,pt
out
subb
mov
or
adc
add
ret
ret
hlt
mov
add
and
andb
cmp
or
mov
pop
sti
scas
dec
and
pop
popa
out
sti
mov
inc
test
movl
lahf
mov
arpl
jb
dec
aad
pop
ret
mov
ja
test
xor
out
lcall
ret
adc
imul
jo
add
bound
insb
mov
loop
fdivrs
loopnew
push
nop
mov
sbb
and
lods
dec
xor
ja
add
xor
xchg
jns
test
sbb
repnz
loopne
imul
bound
lcall
imul
mov
aad
jl
lcall
mov
or
push
outsl
mov
aam
lock
pushf
add
or
ret
lret
fsubp
sbb
aad
loope
repz
popf
jmp
fstps
xchg
jmp
imul
int
mov
cmp
and
std
dec
cltd
jnp
int
in
fbld
xchg
shrl
and
mov
sbb
rorb
test
xor
and
push
push
jecxz
or
aad
mov
pop
std
daa
sbbl
push
mov
cmp
sahf
push
cmp
movsl
mov
je
jb
nop
jl
add
std
xchg
pop
xchg
adcb
mov
add
sbbb
lret
xchg
pop
push
inc
jae,pn
jle
or
sbbl
inc
inc
shl
out
negl
pushfw
insb
push
pop
cmc
scas
jae
out
sbb
std
dec
bound
lock
xor
jmp
leave
push
movsl
test
cmp
lahf
cmp
jns
jns
cs
ficoms
sub
js
mov
adc
bound
ss
push
add
dec
jo
stos
lods
jg
jo
je
mov
pusha
dec
cmp
fs
lds
mov
movsl
xor
test
push
cmp
push
repnz
sbb
and
iret
ljmp
inc
imulb
xchg
enter
in
mov
lcall
dec
setns
lods
pusha
ja
cli
mov
jo
addl
pop
stos
outsb
fwait
out
mov
std
and
xor
sti
test
cmpsb
das
push
and
decl
sub
and
and
mov
jp
add
pop
mov
outsl
pusha
sbb
and
lds
test
cmpsb
lea
push
popf
inc
push
adc
daa
adc
les
mov
ficoml
xchg
mov
sbb
sub
in
rclb
and
fsubs
mov
test
sbbb
inc
mov
xor
cltd
pop
mov
mov
repnz
lahf
lea
sub
jl
aam
in
push
imulb
mov
cmpsl
test
mov
test
cmp
lea
xchg
je
or
adc
xchg
push
jnp
insl
xlat
ljmp
sbbl
jae
in
arpl
xlat
test
push
lret
mov
sbb
cmpsl
sub
adc
adc
push
mov
ret
js
jns
xor
pop
xchg
or
divl
xor
lahf
mov
movsb
mov
xchg
jge
and
sti
add
std
les
movsl
xorb
fistl
add
xchg
sbb
addl
xor
or
adc
addb
sbb
xchg
test
lahf
mov
xorb
push
sub
push
or
inc
sbb
out
test
and
idivl
aas
popf
fucomip
jecxz
jle
dec
les
jg
mov
xor
pop
xor
push
inc
movsb
subb
mov
addb
fistps
stos
jae
push
jne
orb
mov
enter
orb
dec
and
push
ret
push
dec
dec
mov
jg
jg
xchg
mov
add
cld
adc
push
popa
add
or
cmpb
xor
adc
leave
sub
and
or
jle
mov
mov
dec
scas
hlt
pop
ss
mov
daa
jae
imul
aas
int
push
decb
fs
inc
cmp
cmpsb
sbb
jnp
xchg
sub
loop
mov
inc
jmp
sbb
pop
iret
cmpb
dec
test
out
pop
dec
lods
jge
shll
mov
test
or
nop
es
pushf
or
add
sub
adc
outsb
sbbb
sbb
xchg
pusha
loop
mov
mov
sti
loope
sarb
dec
ss
push
movsl
adc
add
pop
mov
sbb
xor
shl
leave
orb
sbb
in
icebp
movsl
arpl
jo
lcall
or
and
lds
nop
fs
lret
stc
rorb
jge
cmpsl
cmp
add
leave
lds
aad
ja
scas
mov
push
dec
xchg
movsl
push
cli
mov
xor
jmp
mov
into
nop
aad
xlat
sub
ret
lods
shll
aaa
jbe
and
cmpsb
mov
pop
push
mov
cmpxchg
cmp
xchg
cmp
imul
insb
jae
popf
inc
pop
orb
mov
add
bound
ret
ja
jl
mov
jbe
cmp
xchg
push
add
aad
popa
bound
and
mov
std
and
push
xchg
mov
cltd
inc
inc
movsl
pop
ss
push
enter
sbb
jo
dec
imul
push
lret
xchg
popf
pop
or
sbb
fsts
movl
add
stc
bound
rolb
cltd
sbb
imul
sub
add
dec
xlat
mov
stc
add
jb
stos
int
mov
repnz
fdivrl
jl
lcall
je
in
repnz
outsl
mov
push
push
out
mov
subl
into
lcall
sub
push
pushf
cwtl
push
mov
push
push
outsb
cmp
arpl
cld
mov
int3
mov
mov
das
sbb
pop
ja
cltd
pop
std
aad
movsb
inc
popa
push
pop
cmc
aad
inc
stos
daa
loope
sub
cmc
jge
lds
out
inc
not
data16
addr16
loop
ret
int
xchg
ret
mov
pop
mov
jp
rorb
loopne
stos
sbb
mov
sbb
dec
push
pop
mov
lret
mov
cltd
mov
xchg
pusha
dec
sub
inc
xor
dec
iret
jns
cwtl
xchg
xchg
repz
cs
and
into
xor
ds
mov
fdivr
out
inc
sbbb
sub
movsb
inc
xor
push
adc
mov
movsl
jo
std
cmp
sahf
repnz
testl
clc
inc
test
sbb
pop
out
push
xchg
mov
cmc
test
mov
jle
jb
test
sbb
imul
enter
sbb
rorb
insb
and
test
sub
cmp
js
xchg
repnz
push
fistps
mov
std
and
and
push
out
mov
sbb
movsb
pop
loope
out
cmc
int3
repz
in
fnsave
jbe
dec
mov
ja
push
mov
sbb
dec
mov
xchg
jae
xor
jecxz
or
xchg
sub
jge
imul
inc
mov
mov
es
arpl
add
xor
cmp
pusha
mov
cltd
push
lock
sbb
clc
xor
rclb
jno
out
ret
pop
fwait
std
sub
and
fdivrl
gs
sbbb
testb
sub
inc
sub
pusha
sub
cmp
sar
pop
mov
cli
push
cmp
cltd
cmpsb
adc
arpl
xorl
call
jne
nop
movl
cwtl
out
push
add
imul
jge
enter
clc
stos
sub
mov
push
sbb
mov
and
lock
xor
mov
push
das
inc
push
lcall
ret
movsl
lcall
jo
insb
test
push
jle,pn
addb
in
lds
lods
outsl
in
sbb
call
sbb
jmp
mov
int
add
lcall
lret
dec
jl
stos
mov
in
test
gs
jle
lods
push
mov
mov
inc
sub
sbb
jg
xor
push
mov
leave
call
mov
sbb
lcall
cmc
jae
dec
add
roll
les
adcb
jne
inc
jge
or
in
xchg
jne
mov
cld
scas
xchg
scas
lret
cmp
and
iret
movsb
push
nop
cmp
add
call
cmp
sub
cmp
xchg
enter
stos
adc
inc
test
lret
xor
and
ja
cmp
sarb
dec
rcrl
sarb
jl
or
notl
mov
inc
mov
cmp
jne
jns
inc
adcl
xchg
push
repz
sbb
mov
insb
outsb
ret
in
pop
jmp
dec
bound
test
sub
in
pop
outsl
xor
lock
test
push
in
add
push
pop
xor
jp
div
sub
mov
jno
dec
cmp
mov
lret
subl
xor
pushf
dec
insb
sbb
lds
hlt
cmpsb
pop
dec
jle,pt
mov
cltd
sub
test
and
add
xchg
ror
std
lret
lods
popf
jg
mov
jo
jecxz
imul
jbe
mov
imul
aad
pusha
jb
mov
das
insl
ret
loop
flds
mov
insb
sahf
jo
and
jbe
mov
jbe
jmp
sbb
hlt
jmp
iret
fs
adc
adc
jmp
and
cmp
repnz
inc
fisttpl
adc
sbb
movsl
sti
adc
mov
xchg
ret
loopne
push
loope
ficompl
push
pop
std
or
aad
jmp
lret
mov
jb
add
je
rol
aas
jl
lcall
jae
mov
or
enter
rol
mov
cmp
rol
scas
cmc
outsb
xor
sbb
cwtl
jo
ret
rorb
scas
gs
xchg
xor
xlat
xor
adcl
xchg
mov
pop
sbb
cmp
push
das
cmp
xchg
stc
pop
inc
loop
ljmp
stc
clc
hlt
dec
dec
bound
ljmp
rolb
push
push
jne
daa
cmpsb
mov
xchg
cmc
outsl
mov
add
jmp
out
icebp
cld
movsl
in
pop
lret
add
lock
jge
dec
sbb
ljmp
lcall
xor
jo
xchg
xchg
inc
mov
out
xor
or
pop
sbb
sub
xchg
adc
icebp
and
aad
cmp
push
and
cltd
pop
pop
sub
in
out
lock
shll
popf
add
lock
adc
or
xchg
testl
sti
sbb
or
xor
imul
fs
xchg
rorl
add
sbb
imul
orb
fadds
push
faddl
pushf
mov
stos
jnp
jle
in
and
sbb
addb
or
xor
inc
jge
loop
sbb
cmp
into
jbe
and
sbbb
jae
fdivl
sub
pop
ret
clc
and
or
outsb
jle
fiadds
mov
and
addb
jae
lea
fimuls
test
inc
icebp
lret
lea
pop
cmp
lret
into
sbb
aas
mov
subb
test
sbb
imul
dec
jno
aad
push
xchg
lock
mov
sbb
xchg
stc
push
xor
adc
mov
scas
mov
mov
dec
add
dec
cmp
pop
adc
idivl
sub
xchg
push
and
ds
xorb
jmp
sub
push
cmp
lret
test
addb
push
ret
std
sbbb
sub
jae
aad
repnz
call
push
ret
cmovl
hlt
xor
push
add
std
sub
push
pushf
and
roll
cld
adc
jnp
mov
jg
incl
clc
xchg
mov
and
gs
pop
jnp
aas
loope
and
push
mov
jns
pop
and
push
notl
pop
ds
int3
cwtl
test
test
pop
jle
lcall
mov
pop
rcrb
sub
push
loope
sub
shll
xorl
loope
das
pop
inc
cld
cltd
jecxz
jge
pop
icebp
lret
jb
lcall
or
repz
xlat
mov
ljmp
lds
sub
aaa
inc
cmpsb
les
mov
push
add
and
in
push
repnz
xor
pop
shrl
adc
ja
test
sti
fistpl
cwtl
adc
or
jns
xchg
inc
out
fisttps
sahf
cwtl
pusha
ja
lret
sbb
xlat
lds
mov
je
out
insb
pusha
mov
stos
adc
cltd
fcoml
aam
shlb
ja
adc
push
mov
push
loopne
add
push
pop
je
fdivrl
cmp
pop
cmpsl
and
inc
cmc
out
fcomip
cmp
and
add
jecxz
icebp
xchg
add
orb
and
fisubl
sbb
push
xor
mov
dec
and
negb
cli
mov
jge
aas
or
lods
test
test
cld
jo
xchg
and
test
int3
insl
arpl
into
push
cmpsb
dec
add
mov
jecxz
sub
jne
mov
inc
ds
in
lahf
pushf
lcall
jae
and
add
int
lcall
out
mov
mov
push
lret
test
push
push
add
movsb
rcrb
stos
jge
adc
aad
sti
in
add
shlb
popf
jo
xchg
negl
cmp
cltd
inc
mov
push
ds
aaa
sti
pusha
add
and
pop
jb
push
arpl
outsb
shll
add
fnstsw
testb
sbb
std
xor
into
pop
lcall
aad
fsubp
sbb
aas
and
or
pop
xchg
push
outsl
push
cmc
incb
ljmp
jg
cmovs
cmp
outsl
sub
shl
dec
les
cld
mov
int
inc
repnz
fildl
push
lock
xchg
jo
ret
addl
add
out
and
fs
outsb
lods
mov
pusha
xor
ret
cs
into
add
lcall
fbld
and
mov
jle
jle
mov
adc
push
pop
movsl
loope
stc
aam
les
mov
mov
jmp
push
adc
cmp
sbb
dec
mov
aaa
roll
cltd
in
hlt
sbb
ljmp
mov
aad
es
or
sub
repz
or
jo
repnz
popa
cmp
inc
aas
clc
mov
aas
push
pop
les
dec
outsb
add
xlat
movsl
addr16
push
lahf
mov
cli
pop
mov
xchg
outsb
jns
gs
jle
or
ficoml
pusha
mov
fisubs
or
push
mov
push
dec
and
jns
xchg
mov
jo
pop
int
ret
mov
adc
lcall
lds
jbe
and
push
sub
dec
pop
insl
stos
outsl
les
dec
sahf
aad
test
roll
mov
push
cmp
cmp
cli
pop
mov
mov
cmpb
or
aaa
pop
fidivs
call
loope
xor
jp
or
cmp
test
push
test
mov
dec
xor
repnz
scas
enter
insb
pop
daa
jmp
insb
mov
stos
popf
subb
clc
sbb
stos
sbb
icebp
sub
xor
loopne
mov
xchg
inc
andb
and
mov
test
sbb
sbb
cli
pop
jbe
movsb
addb
inc
in
xchg
jnp
inc
sbb
lret
es
mov
sbb
xor
shl
inc
les
mov
xorb
pop
repz
outsl
pusha
subb
mov
aaa
cmp
inc
mov
paddw
cmpsl
lods
lcall
push
adc
jg
xor
push
and
addr16
cmp
push
subl
fdivs
gs
fwait
add
pusha
jp
stos
lahf
cwtl
andb
daa
aaa
or
inc
xorb
cmp
out
addr16
mov
xchg
in
sub
adcb
lret
mov
adcb
mov
je
stos
adc
sbb
int3
add
andb
mov
orb
inc
dec
add
lds
jl
lahf
or
cwtl
add
sbb
and
xor
mov
mov
and
sub
orb
jge
push
les
sbb
adc
das
mov
andb
call
imul
addb
enter
adc
andb
push
icebp
popaw
fiadds
cmpsb
ret
cmp
push
jnp
ljmp
dec
add
jnp
jmp
popf
sti
scas
sbb
cs
pop
mov
xchg
jne
jle
and
sbb
fs
lret
call
jo
mov
fcomps
stos
pop
pop
out
inc
orb
lods
cmp
jnp
cmp
or
jnp
add
nop
xchg
je
mov
aam
lret
mov
jo
inc
cmpb
popa
jg
mov
ret
fnstenv
dec
dec
scas
js
add
sti
push
fnstsw
data16
xchg
cmp
mov
add
xchg
or
cwtl
sbb
jnp
subb
sub
add
sti
dec
pushf
hlt
add
xchg
dec
fs
adcb
adc
sub
push
jo
dec
std
and
sahf
inc
inc
dec
data16
into
inc
cwtl
xchg
push
lods
andb
jb
add
pop
mov
sub
sahf
lret
iret
push
mov
andb
loope
int3
sbb
sub
sbb
ret
jbe
or
cli
ljmp
adc
push
push
addb
cld
or
out
mov
xchg
sbb
cld
jg
insb
inc
add
addl
mov
stos
lcall
add
xor
push
lods
pop
cmc
bound
je
mov
push
bound
sbb
movsl
jnp
lods
dec
subb
orl
mov
sti
mov
sbb
pop
adc
mov
jno
pop
ljmp
or
in
addb
pop
push
jb
loop
outsb
movsb
aaa
fs
dec
data16
btr
mov
mov
dec
mov
push
and
fdivp
ss
ljmp
pop
negb
mov
push
push
int
cltd
stc
ds
adc
fsubl
ret
cmc
loope
and
cltd
and
out
mov
lds
jns
subb
cs
fnstenv
or
mov
xchg
or
mov
stc
inc
adc
addl
xchg
popf
cmp
xchg
or
mov
test
repnz
jmp
and
push
call
add
xor
in
push
jb
cltd
adc
fmull
lcall
push
inc
jnp
movsl
daa
popa
adc
inc
decl
stc
testb
incb
cltd
rorl
rorl
sbb
and
mov
movsb
inc
or
repnz
push
ficoml
imul
lods
adc
fsts
xchg
sbb
in
mov
pop
nop
fdivs
repnz
sbb
adc
and
in
xchg
jbe
fiadds
int3
aaa
mov
cmc
iret
and
push
popf
icebp
popf
jge
lcall
xorl
scas
sub
adc
mov
clc
imul
jnp
pushf
lcall
xchg
mov
cltd
pop
jbe
out
popf
fimull
outsl
addr16
mov
test
push
jbe
sbb
mov
mov
sti
insl
pop
leave
aas
rcl
push
pop
incb
sar
xchg
lcall
jge
and
iret
mov
jnp
out
vpsraw
imul
fisttpl
mov
cltd
cmp
cmc
lock
push
sub
push
mov
adc
jns
int3
sub
xchg
rolb
push
sbb
popf
xor
and
in
mov
push
divl
mov
lock
repnz
jo
ljmp
scas
xchg
jg
pop
lock
xor
loop
sbb
mov
xor
sahf
out
mov
mov
iret
aam
jecxz
cmp
sti
push
mov
mov
iret
out
jecxz
cs
jmp
add
jno
les
ret
cmpsl
loope
stos
xor
aaa
adcl
push
int3
sbbb
mov
outsb
cltd
cmp
movsl
dec
das
daa
mov
and
dec
sbb
mov
mov
or
push
cltd
shrb
jb
lcall
pop
sub
xor
and
pop
icebp
out
jecxz,pn
loop
cltd
or
into
div
imul
cmp
movsb
cmp
out
mov
lea
sbb
shll
add
mov
mov
push
in
sub
pop
loopne
loopne
xor
loop
jae
insl
sub
add
fisttpll
daa
loop
lds
call
lock
sbbb
cmp
in
jns
cwtl
mov
mov
ret
pop
add
pop
xchg
mov
push
insb
stos
push
sbb
rcll
cltd
push
test
xor
shll
filds
loop
dec
aaa
cli
jmp
into
iret
lock
fdivr
nop
inc
mov
gs
xchg
jae
lcall
fdiv
mov
loopne
mov
cwtl
outsl
mov
cmpsb
xor
adc
in
scas
mov
loopne
idivl
fisubrs
xor
idivb
push
xor
mov
fnstenv
xchg
lret
jmp
inc
mov
aad
inc
lret
xchg
enter
xor
jb
sbb
jo
cmp
or
pop
cmp
inc
jge
push
push
sbb
jmp
cmpsb
inc
aad
ljmp
ret
sub
ss
mov
cmpsb
and
ds
pushf
int3
push
xor
stos
out
and
mov
bnd
test
xlat
sahf
cmpsb
xor
lret
add
jns
scas
mov
frstor
jp
jecxz
inc
add
xchg
sbb
addl
into
bound
push
xorl
popa
in
and
jns
jecxz
pop
jmp
mov
stc
mov
push
mov
jecxz
jge
lods
cmc
cltd
test
mov
daa
jns
mov
mov
add
test
push
xchg
mov
test
js
xor
aaa
or
es
and
and
mov
out
outsl
rorl
jno
xor
out
addr16
repz
cmp
pushf
in
inc
xchg
dec
add
mov
cmp
jo
popf
push
shrb
stos
xor
jno
push
notb
faddl
mov
add
sub
or
andb
xchg
jns
lcall
jnp
cmpsl
mov
adc
sbb
lcall
repnz
push
into
addb
ret
or
std
sub
outsb
cmc
cmp
jg
jmp
ljmp
or
add
adc
jnp
aaa
arpl
mov
sbb
addl
fcmovu
push
fdiv
add
or
mov
and
jmp
cmp
incb
ds
nop
inc
xor
rcrb
fs
ret
push
ja
shll
call
daa
cmp
repnz
andb
mov
jnp
xorb
add
inc
mov
adcb
mov
rcrl
cmp
adc
jmp
push
xchg
ret
mov
insb
outsl
push
jb
push
es
lahf
mov
or
fnstenv
jg
mov
loop
pop
test
sub
repnz
mov
andb
mov
leave
andb
lret
insl
pop
cmpb
stos
divl
std
xchg
sbb
sarl
xchg
jns
cmpb
jmp
je
and
dec
jle
lret
and
cmp
and
jp,pn
pop
jnp
dec
xchg
jb
add
xchg
das
mov
jnp
jle
ret
adcl
sti
inc
and
cmpsl
scas
push
push
lret
xchg
mov
cmpsb
imul
subl
repz
out
ret
mov
lock
push
mov
jbe
sbb
or
mov
mov
rorb
xchg
jbe
je
dec
mov
fsubs
mov
cmp
dec
pusha
inc
addl
out
insl
lret
scas
fwait
lret
add
push
je
stc
adcb
sti
and
hlt
jns
adc
cmp
shll
in
cmp
cmp
lods
xchg
int3
or
lods
ljmp
test
ret
mov
adc
mov
cmp
xchg
jle
cld
mov
bound
sbb
nop
dec
cmp
xchg
ds
rclb
adc
xor
xchg
pop
mov
data16
pop
fimuls
add
lret
data16
sub
mov
jae
ds
fldl
insb
call
divl
rcl
add
or
xchg
mov
dec
mov
xlat
xchg
push
test
cmp
fldl
inc
or
daa
xchg
sbb
dec
test
xchg
popa
pop
flds
rclb
add
je
xchg
push
int3
movsb
addb
jne
and
fnstsw
dec
xor
pop
mov
out
mov
iret
in
push
orb
mov
push
sub
subb
call
xchg
adcb
adc
inc
and
cmp
add
jl
test
or
adc
dec
adcb
loopne
inc
xchg
sarb
test
rcrb
jns
adc
push
movl
loope
and
jnp
jmp
ds
sbbb
jle
mov
xor
adc
mov
push
test
addb
mov
sub
mov
ret
mov
testl
insb
cmpsb
dec
dec
jae
cmc
add
pop
cmp
addr16
and
faddl
sub
out
sbb
test
xorb
push
xor
inc
push
pusha
mov
scas
sbbb
mov
hlt
xchg
add
and
inc
xchg
adc
push
mov
movsb
pop
cmp
mov
push
repnz
fldl
mov
addr16
outsl
adc
fs
dec
xor
and
loope
mul
outsb
add
inc
pop
jbe
pop
cmp
push
jp
popa
subb
outsl
cwtl
adc
rcrl
aas
ss
into
push
cmp
testb
icebp
cmc
sbb
in
mov
mov
jbe
lcall
js
push
pop
lret
int
push
cwtl
in
aaa
imul
in
je
adc
dec
ret
inc
pop
pop
xor
fimuls
int3
std
sti
sbb
xchg
xor
mov
je
jle
bound
loopne
push
xorb
mov
xchg
or
inc
fimull
orl
jns
mov
adc
repz
dec
jbe
push
loopne
cmpsl
lods
outsl
push
lds
jns
adc
scas
push
arpl
popf
add
pop
inc
inc
test
popa
sti
fs
push
imul
ret
sbb
shll
lock
sub
sbb
lods
mov
xchg
and
pop
pop
hlt
add
addb
bound
sub
add
and
les
mov
ljmp
in
repz
adc
sub
cltd
mov
sbb
in
adc
fdiv
add
push
rolb
clc
fwait
push
mov
insb
jl
outsb
adc
aam
clc
rcl
addl
mov
xchg
dec
mov
xorb
cmpsb
das
inc
sahf
push
mov
stos
aaa
ret
ret
inc
lea
pushw
fwait
mov
ffreep
or
xchg
loopne
movsb
inc
subb
rcrb
sbb
jmp
popa
call
xchg
push
xorb
xor
mov
adc
cltd
mov
lea
popf
inc
in
int3
push
les
cmpl
gs
pop
imul
inc
add
daa
sbbb
sar
cmpsb
test
scas
andb
push
lock
scas
and
xor
inc
inc
sbbl
lret
jg
mov
adc
cli
jl
das
ljmp
out
inc
or
addb
sbb
popa
cmpsl
movl
jg
mov
lcall
lret
pop
pop
movsl
adcb
out
stc
or
push
popa
outsl
adc
mov
sbb
jns
inc
outsb
xchg
addb
ja
sbbb
push
orb
repz
cmc
les
mov
insl
inc
adc
cmp
call
lret
jge
addb
mov
lahf
lea
or
out
mov
loop
in
add
andl
and
and
add
pop
adc
nop
mov
sub
lods
dec
lahf
ret
ljmp
add
inc
pushf
or
je
aas
push
stos
enter
xchg
adc
and
pushf
pop
xor
push
loope
mov
sbb
xchg
cmpl
adc
or
xlat
adc
jg
mov
inc
shll
jae
add
inc
lea
or
mov
xorb
sbbb
adc
jp
out
push
dec
movsb
enter
call
lock
insb
loop
test
orb
pop
jnp
repz
lods
or
icebp
sbbb
incl
insl
das
xor
jo
enter
inc
lret
in
mov
sbb
pop
add
xlat
sbb
loopne
int3
sub
lods
push
bnd
and
jecxz
std
cmpsb
xor
lret
lcall
cltd
inc
enter
stc
stc
test
adc
inc
xchg
pop
mov
stos
outsb
push
jbe
popf
sbb
push
and
ds
rolb
ret
mov
popf
outsl
cltd
pushf
test
loopne
and
push
sarb
lret
dec
and
mov
cwtl
sbb
fistpl
cmc
lock
int3
sbb
imul
inc
pop
cltd
xchg
dec
pusha
jnp
mov
daa
popf
jmp
out
dec
out
insl
jns
stc
mov
jle
xor
dec
xchg
enter
inc
test
mov
idivl
xor
xor
cltd
push
sub
lods
xor
ret
idiv
xor
jnp
call
in
xchg
xchg
cmp
or
lcall
fimull
sbb
cwtl
xchg
ja
jb
jb
lcall
daa
data16
push
ss
or
lcall
leave
xor
les
andb
lcall
inc
inc
imul
addw
jns
mov
xchg
mov
fsubs
jmp
pop
jo
lcall
out
sub
lods
xor
out
cwtl
stc
iret
inc
xchg
or
ret
sub
cli
es
mov
mov
push
pop
sub
daa
imul
and
jle
jbe
fimull
mov
negl
pop
cli
int
cltd
fisttpl
add
fistps
lahf
jns
test
adc
int3
test
jge
cltd
movsb
pop
ffree
repnz
push
inc
xchg
inc
pushf
pusha
aaa
dec
std
daa
jg
clc
jle
ljmp
stc
lret
stos
popf
push
push
mov
lods
cwtl
add
jno,pn
mov
icebp
hlt
out
cwtl
insb
mov
mov
jno
and
clc
sbb
cmp
adc
or
testl
jae
adc
aam
add
sub
sarl
aad
scas
jg
mov
popf
xchg
sahf
ret
in
subb
pop
outsl
and
push
insl
push
jp
leave
push
jge
inc
jb
aad
out
test
jnp
mov
dec
sarl
xor
das
mov
mov
or
push
out
into
jae
push
xor
das
daa
jo
lret
nop
les
mov
mov
jnp
scas
and
stos
fdivr
jne
in
out
nop
dec
loopne
mov
pop
pop
xlat
xchg
cmp
push
cmp
mov
stc
sbb
jecxz
mov
jns
mov
jne
das
inc
add
lods
outsl
sbb
mov
repnz
xor
cmpsb
mov
out
lods
xchg
insl
outsl
push
push
push
cltd
xor
rcrl
adcb
sub
adc
lock
mov
jbe
cltd
jmp
imul
jg
loop
test
adc
adc
out
lcall
xor
push
inc
std
xchg
mov
fisubl
movsl
js
jmp
add
aad
sbb
mov
jb
pop
inc
in
ja
cmp
add
into
push
ljmp
fcompp
pop
and
push
popf
jle
sub
lret
ja
push
sbb
scas
ss
push
les
int3
mov
lcall
lods
inc
rcrb
xor
call
sarl
mov
jo
jp
add
lea
push
jno
loope
push
leave
bnd
repnz
out
in
cmc
shl
out
and
inc
rcrb
out
jo
cwtl
loopne
hlt
add
jnp
add
xor
inc
lds
mov
jo
scas
xchg
pop
or
dec
jae
inc
ljmp
lods
cltd
pop
btc
cld
pop
js
or
push
lcall
outsl
push
aaa
sbbl
and
mov
add
jecxz
lret
or
adcl
or
insl
inc
pop
lock
orl
lcall
jg
sbb
xchg
pusha
mov
sbb
js
dec
movsl
xor
leave
sbb
aam
dec
dec
jo
negl
push
inc
mov
cmp
scas
mov
in
idivl
mov
xchg
jo
ret
rcl
bound
in
mov
push
push
jb
push
shlb
negl
data16
imul
out
fidivs
xor
idivb
sub
push
vfmsub132ps
inc
les
in
test
mov
int
mov
jns
push
push
and
inc
adc
cltd
pop
fstpl
mov
pusha
lock
push
jecxz
inc
add
aaa
xchg
dec
push
sub
push
aad
lds
cmp
rcrb
jns
sub
mov
or
adc
in
lcall
in
repz
xchg
xor
sbb
jg
mov
lcall
int
push
inc
lock
cmp
ds
inc
addr16
cli
imul
rorl
dec
xchg
push
stc
mov
sub
ds
test
aam
push
repnz
xlat
pop
hlt
out
push
adc
mov
sbb
jne
lcall
jg
lds
in
sbb
cltd
adc
push
sbb
addr16
mov
add
add
mov
dec
les
jg
pop
mov
cmp
ror
mov
je
mov
test
je
add
pop
dec
cli
inc
dec
lcall
inc
sbb
jb
ss
pop
and
fdivl
sub
xor
mov
mov
lock
xlat
outsb
aaa
cs
enter
or
jae
outsl
jnp
rcrl
ja
add
mov
push
inc
pop
cmp
mov
lea
xlat
ret
pop
ret
cmp
dec
push
cmp
adc
or
idivb
jp
and
dec
cli
imul
sbb
add
dec
cmp
outsb
in
dec
test
jg
mov
out
data16
mov
inc
aam
inc
lock
fcmovne
mov
jp
imul
sbb
lcall
sahf
mov
jge
or
aaa
xorb
cmp
pop
in
hlt
cwtl
mov
sub
dec
xlat
lcall
lods
dec
test
repnz
in
adc
shlb
lds
add
lret
jle
cmp
sub
xor
fwait
adc
fstpt
push
lcall
mov
or
inc
popa
fstpl
cmp
add
inc
lcall
xchg
adc
jmp
mov
dec
sub
jns
adc
ret
cmp
jp
sbb
push
cmpsl
negl
lcall
or
mov
pop
pop
cli
push
repz
ret
cmp
lret
xor
jecxz
sub
testb
shlb
aaa
in
mov
rcrb
sub
lcall
xchg
fsubrs
and
les
xchg
and
scas
xchg
test
orb
inc
insb
cli
jge
jns
cmp
mov
jge
sub
mov
fisttpll
add
sbb
add
jl
cltd
cld
test
addr16
aaa
data16
jns
sbb
xor
in
lahf
fs
lcall
aaa
mov
ret
adc
mov
inc
jge,pn
fwait
mov
dec
xchg
push
push
mov
lods
les
sub
push
add
mov
lods
in
push
add
inc
aaa
mov
inc
push
dec
add
adc
in
xor
xchg
mov
lcall
shrb
and
daa
jle
adc
lcall
inc
les
xlat
jp
lcall
icebp
xor
inc
push
mov
push
into
jg
or
push
cmp
pop
addr16
je
pop
int
lock
and
and
push
sahf
into
lock
jge
lcall
fildl
mov
inc
out
imul
ret
cmp
mov
and
enter
xchg
icebp
fldl
add
dec
iret
and
and
bound
mov
cmpb
inc
in
xorl
repnz
shrl
int
cmp
and
sub
mov
rorl
lcall
outsl
int3
mov
push
pusha
sub
jle
std
int
push
scas
fisttps
repz
adc
and
es
mov
lock
jle
andb
lret
insb
les
outsl
movsl
inc
or
popf
movsb
inc
je
repnz
jb
inc
pop
arpl
outsb
cmp
or
jbe
and
lea
sbb
push
or
dec
pushf
cltd
mov
f2xm1
add
mov
nop
add
xor
dec
fdiv
pop
stos
or
cltd
sub
lea
mov
pop
mov
cs
out
je
pushl
jns
xor
sarb
shll
add
out
jle
mov
lock
sub
ret
mov
call
jge
jns
ficompl
mov
sbb
data16
popa
sbb
and
cmc
test
rolb
lcall
push
push
pop
add
mov
pop
loopne
ss
mov
mov
mov
repnz
sbb
inc
aas
add
les
mov
mov
rorb
ljmp
mov
and
dec
adc
cwtl
add
out
sahf
sbb
les
adc
cmpl
mov
daa
mov
bnd
sub
or
xor
push
fdivs
xor
cli
xchg
mov
and
fldcw
and
adc
push
ret
stc
lods
lcall
and
int
bound
add
cmp
dec
jp
inc
jne
lcall
notb
cmc
or
sbb
jp
lahf
lcall
pop
jbe
jle
ret
adc
cli
push
dec
out
pop
and
push
mov
and
sbb
insb
dec
enter
jle
outsl
dec
sub
idivl
push
iret
jae
aas
xchg
mov
pop
lcall
daa
sub
clc
mov
scas
sub
lock
xchg
and
stc
mov
mov
jecxz
xchg
and
outsl
imul
and
lahf
lcall
jns
sbb
mov
mov
lods
out
pusha
push
sub
xor
cwtl
jo
push
push
jo
mov
cmp
out
je
pop
js
fwait
pop
mov
popa
mov
nop
sbb
out
jl
xor
dec
xor
push
and
hlt
and
test
cmp
mov
out
pop
ret
and
ret
jb
pop
sub
jne
sbb
push
mov
sub
fldl
data16
rorl
pop
mov
test
gs
ljmp
ljmp
and
insb
jb
xchg
sbb
fsubs
cltd
dec
add
pop
push
clc
lods
outsl
hlt
addr16
lcall
ja
dec
add
clc
xor
push
pop
cmp
push
xor
mov
lcall
inc
mov
das
notl
mov
mov
aad
push
in
subl
xchg
xor
out
outsl
cltd
xor
pop
adc
in
mov
sbb
xchg
mov
and
pop
jle
pop
shll
in
push
pusha
inc
xchg
jns
cltd
lahf
jne
nop
les
push
loop
sub
mov
adc
or
nop
jle
cmp
pop
dec
pop
mov
inc
xor
pop
aaa
ret
cltd
out
push
pop
or
movsb
xchg
and
retw
stos
jnp
or
and
data16
push
or
les
int
cltd
leave
and
fbld
mov
lods
jl
setge
addr16
sti
repz
jge
dec
ficompl
push
lods
in
mov
xor
cmc
inc
mov
ret
out
fildll
rolb
ss
and
xchg
dec
jle
enter
sbb
cmpsb
stc
push
pop
leave
imulb
mov
fs
subl
and
push
sub
cmp
mov
outsl
repnz
insb
shrb
adc
lds
cmp
jl
jecxz
lcall
adc
aam
out
pop
repnz
sub
shl
mov
ret
subb
add
and
in
jl
aas
pop
aam
movsl
and
xor
mov
cli
jae
aaa
cli
aam
ret
push
cmpsb
sbb
fdiv
je
stos
scas
push
mov
sbb
data16
aas
inc
pop
test
cwtl
out
mov
loop
jae
mov
fucomi
sbb
jno
push
insl
lcall
jle
pop
data16
scas
imul
dec
sbbb
adcb
mov
xchg
pop
pop
jl
push
adcl
in
jle
repz
jns
pop
ret
add
lahf
imul
mov
mov
adc
mov
jns
jl
mov
mov
fsubrp
mov
push
cmp
shll
pop
in
or
lcall
outsb
mov
add
aas
inc
push
in
or
inc
cli
xchg
out
pop
or
imul
out
pop
insl
or
dec
rcr
xor
mov
movsb
jl
das
call
stos
sub
aaa
mov
jns
jbe
xor
adcl
pop
in
add
loope
mov
pop
cmpsl
inc
fisubs
es
mov
ret
cmp
stos
movsl
pop
fwait
out
in
mov
scas
rol
cmp
pusha
stos
dec
icebp
iret
jmp
fldenv
fildll
loop
int3
pusha
cs
rolb
dec
sub
aas
mulps
lds
jnp
cmp
jle
lcall
sub
sbb
sbb
or
mov
sbb
outsl
xchg
setns
push
loopne
dec
sbb
in
stc
adc
push
dec
les
jp
pop
adc
xchg
xchg
jmp
xchg
fmuls
xor
scas
insl
push
data16
bound
cmc
movsb
loopne
dec
push
xlat
mov
fimuls
rcll
mov
and
sub
imul
mov
sub
rcrb
push
jo
daa
push
xchg
subb
push
movl
inc
adc
inc
mov
push
in
outsb
xor
dec
test
pop
int
test
xor
pusha
add
neg
loopne
xor
jns
cltd
adc
sub
mov
clc
notl
int
pop
cmp
add
push
pop
xor
enter
xorl
fidivrs
fcmove
addb
das
into
hlt
std
lcall
jnp
neg
movsl
loope
cmp
imul
ds
loop
mov
loopne
pusha
and
test
scas
stos
sbb
testl
push
leave
jbe
lcall
jnp
sbb
cltd
dec
loope
in
int3
and
cs
subb
adc
rcrb
cli
pop
sbb
dec
inc
sbb
push
jl
cmp
cltd
and
or
xor
push
stc
or
sbb
js
cltd
call
pop
movsl
or
or
leave
and
test
call
mov
sbb
inc
incl
test
rolb
add
lods
mov
xor
icebp
scas
loopne
dec
call
push
aas
loope
inc
cli
lret
mov
iret
outsl
cltd
push
inc
frstor
adc
xor
mov
int
or
jle
xor
dec
incb
aad
mov
loop
mov
lret
in
inc
std
subl
jno
jns
stos
push
push
pop
pop
in
mov
and
or
test
sub
add
ret
scas
jo
das
push
mov
lcall
sbb
mov
xchg
inc
ja
sub
xchg
jbe
xchg
test
and
hlt
mov
add
rcrb
int3
ror
ljmp
lcall
icebp
mov
add
sbb
mov
jl
adc
inc
mov
in
out
mov
jle
pop
xchg
out
ljmp
adc
ret
push
and
lea
movsb
loope
sub
loop
ret
push
adc
add
orl
mov
xchg
mov
fsts
push
pop
mov
aaa
in
cltd
test
push
mov
shlb
popa
pop
int3
mov
sbb
push
cs
testl
add
push
mov
in
adc
lcall
insb
cltd
movsl
loopne
arpl
pop
push
mov
sbb
repnz
jo
nop
nop
arpl
fsubrp
xor
cltd
push
cmp
pop
mov
sahf
and
xchg
inc
int3
mov
das
cltd
or
testl
jne
filds
or
dec
out
and
and
pop
add
mov
cld
sbb
pop
je
cmp
push
shrl
inc
addl
fs
pop
lock
push
aaa
or
xchg
call
cltd
test
out
mov
sub
mov
sub
lds
mov
insb
js
mov
incb
lret
jnp
loop
cmp
inc
jo
lods
mov
jns
jge
add
dec
and
test
popa
lea
pop
stos
cmp
mov
xchg
jno
lcall
test
pop
test
aad
sub
sub
xchg
les
lcall
popf
cltd
inc
inc
dec
daa
mov
mov
lcall
mov
shl
popf
jle
je
test
pop
mov
and
sbb
xor
xchg
je
sub
in
sti
add
repz
lods
jle
pop
xchg
aaa
xchg
jae
xchg
je
rolb
mov
xchg
cs
jmp
pop
js
loopne
sbb
jo
jbe
xlat
nop
in
movsb
mov
adc
mov
ja
add
sbb
loop
les
lcall
sbb
add
add
xchg
nop
xor
xor
mov
cmpsl
ja
pop
xlat
xor
arpl
test
and
and
fnstsw
push
test
jle
push
add
scas
lahf
jl
out
jbe
push
mov
test
mov
sbb
dec
mov
out
pop
cli
xor
cmpsb
ja
outsl
lret
add
push
jns
and
outsb
add
in
sub
sbb
sub
aaa
cmpsb
jg
inc
pop
mov
xchg
ficoms
cs
xchg
popa
outsb
xchg
add
push
xchg
aas
int
gs
fidivrs
mov
ret
xor
xor
ss
cmp
or
adc
hlt
ror
xchg
ja
pushf
cmp
jle
ret
fs
imul
xchg
fwait
inc
mov
std
push
xchg
mov
cmpl
inc
lcall
or
lcall
xchg
stos
bound
dec
int3
push
je
sbb
sti
push
les
es
out
fwait
stc
sub
imul
rorl
cmpsb
insb
pop
push
lret
jl
icebp
lea
sbb
lock
lds
cltd
imul
sub
out
add
push
jmp
cmp
and
aas
mov
aad
mov
jns
sub
xchg
lea
cmc
inc
pop
push
pop
clc
cmp
pop
ret
in
and
stc
xor
test
xchg
or
push
fcmove
or
pmuludq
ret
stos
pop
test
add
mov
push
mov
sti
in
mov
cltd
push
sub
pop
sub
sti
leave
xor
add
lcall
loope
lods
inc
or
inc
mov
sar
data16
mov
ret
xchg
mov
sub
repnz
mov
jnp
jge
in
cmp
mov
sub
shl
inc
js
push
outsb
or
jbe
popf
les
add
mov
mov
outsl
mov
mov
in
cltd
mov
xor
jp
adc
pop
push
cli
out
jb
inc
jno
fidivrs
jne
je
int3
addr16
or
or
les
sar
push
out
mov
xor
jmp
xchg
mov
or
pusha
iret
push
aad
or
xchg
xchg
jl
push
and
ljmp
xor
in
push
or
lret
jno
gs
sbb
int3
jb
jge
adc
in
mov
in
es
js
fwait
test
pop
js
ret
add
dec
xor
lcall
rol
jg
push
dec
mov
or
loopne
lods
ret
in
aad
push
jns
out
adc
test
stc
test
call
in
out
fnstcw
pop
mov
jo
xlat
ret
mov
mov
inc
cmp
mov
cld
cltd
sub
clc
imul
push
cltd
pop
sub
push
lahf
dec
lcall
aam
sub
jle
out
lcall
sbb
bound
or
ret
mov
jle
xor
jo
out
pop
lahf
andb
xchg
inc
xor
push
inc
adc
loope
pop
sbb
adcb
mov
jle
jae
mov
mov
cld
ds
cmp
dec
ja
enter
ret
inc
jmp
mov
mov
pop
jne
pop
nop
jg
fsts
out
icebp
ret
fcmovnb
add
idivl
mul
orb
cld
insl
and
sbb
inc
jnp
dec
test
push
mov
or
xor
je
in
push
fstps
pop
outsb
jns
stc
add
xchg
int
js
test
outsl
loop
jo
bound
cltd
or
test
fs
xchg
mov
int3
jp
lcall
dec
xchg
testb
stc
push
push
xor
pop
fdivl
movsb
xor
mov
cltd
stos
sub
inc
lret
ret
pop
add
in
bound
cmp
inc
mov
jg
loope
and
ds
das
jle
add
lcall
push
adc
test
push
stos
bound
sahf
leave
les
movsl
stc
mov
mov
jo
movsl
push
in
in
outsl
add
lcall
lcall
sti
dec
in
jns
sbb
ret
sbb
cltd
mov
add
mov
fistpl
mov
out
mov
shll
das
fisubl
xchg
jg
pop
xchg
flds
pop
outsb
xchg
xchg
push
andl
mov
inc
cmp
jg
mov
movsl
in
pop
inc
dec
xorl
loop
jae
cmc
push
sbb
sbb
mov
clc
xor
test
repnz
cltd
enter
lcall
ds
mov
addb
xchg
cmp
mov
scas
sarl
lds
inc
lret
mov
jecxz
sub
lock
jge,pt
lret
sub
mov
mov
stos
xchg
xchg
and
mov
push
ss
push
mov
nop
push
push
test
adc
pushf
jno
call
scas
bound
mov
ds
or
lea
jb
sbb
lret
sbb
and
pushf
repz
mov
rcrl
push
dec
in
sbb
je
dec
jecxz
js
int
mov
in
sahf
mov
testb
lds
test
aam
inc
mov
leave
jl
je
mov
pop
mov
jge
cmpsb
push
jmp
xor
fwait
int
push
mov
xor
xor
cmp
cmp
mov
pop
cwtl
xor
jo
cmp
xchg
test
inc
aam
xchg
pop
sub
lcall
inc
adc
jnp
jae
and
sub
sub
imull
out
xor
push
jmp
in
or
push
pop
sbb
test
dec
or
adcl
mov
lods
testl
mov
jle
popa
and
jp
insb
je
dec
lcall
adc
adc
out
test
mov
mov
cmp
push
and
jns
mov
hlt
sub
cmp
dec
lret
test
or
mov
pop
or
or
rolb
outsl
xor
in
sbb
jae
push
xor
sbb
lods
notl
stc
inc
xchg
cmp
ja
mov
aas
mov
inc
jge
push
push
bound
cmp
lea
or
sub
dec
lcall
ficoml
mov
lcall
ds
daa
imul
sub
xchg
inc
in
stos
xchg
gs
mov
sub
mov
aaa
outsl
mov
or
sub
pop
js
jb
xor
mov
jge
cmp
int
pop
jmp
stos
jns
push
sub
push
cltd
lock
xor
int3
dec
mov
les
lock
cmp
test
jp
or
mov
les
in
jae
ror
sub
jl
arpl
stos
cmp
out
in
xor
pop
jbe
das
xchg
xchg
sbb
loopne
stc
jle
ss
cli
push
test
cltd
add
in
lods
add
and
add
jl
jo
neg
xchg
ljmp
xchg
push
bound
testl
add
shrb
sub
pop
xchg
inc
adc
lods
mov
and
add
push
jge
push
mov
add
lahf
mov
sbb
faddl
sub
out
cmp
scas
rolb
inc
push
push
lcall
clc
sub
frstor
test
add
pop
insl
jg
lods
js
inc
test
sub
outsb
ficompl
jbe
in
inc
pop
stos
adc
cmp
jb
cltd
xor
hlt
cmpsl
fistl
pop
jns
cwtl
adc
mov
push
out
pop
dec
sbb
jle
nop
sub
fimuls
jae
ffreep
xchg
cltd
mov
jae
inc
sub
mov
fidivl
ja
lcall
incb
xor
aam
ja
stos
xchg
dec
and
test
add
inc
nop
ret
mov
inc
les
push
cltd
in
stos
adc
jae
mov
add
sub
shl
fwait
loop
mov
fchs
xchg
jle
cmp
dec
outsl
sbb
jle
push
loopne
jl
xchg
aad
push
stos
stos
jns
lds
lea
xchg
fidivl
popf
inc
push
enter
or
nop
mov
int3
out
xchg
fcoml
pop
fisubl
loope
sbbb
push
cltd
mov
in
std
jp
dec
pop
and
jne
icebp
arpl
adcb
cli
cs
xchg
jae
and
cltd
xor
divb
shlb
cmpsb
xchg
out
jns
aam
subb
enter
movsl
mov
sbb
aaa
xchg
xorb
dec
and
add
cmpb
mov
fs
mov
ficompl
lret
add
arpl
outsb
jno
push
add
inc
mov
jnp
cli
incl
ja
movsl
testl
or
ror
add
fidivl
push
jecxz
pop
sbb
xchg
fsubs
movsl
sti
pop
or
jp
add
push
andb
jl
adcb
les
cld
xchg
in
push
ja
cmp
inc
jmp
mov
loop
mov
and
gs
add
and
lock
adcl
in
push
cmpl
mov
push
lock
xor
fidivrl
je
push
frstor
cmp
sbb
call
push
mov
adcb
inc
lahf
daa
mov
adcb
orb
ja
mov
lcall
or
test
jge
shrb
push
dec
sub
or
or
sub
xor
cmp
test
push
cmpsl
adc
mov
in
jno
imul
dec
lahf
ss
add
cmpb
sbb
sbbb
xchg
cs
xlat
jno
inc
out
shrl
inc
adc
stos
aad
cmpb
pop
pop
enter
fisubrl
jge
mov
movsb
cs
leave
push
fadds
into
fsubrp
xor
je
xchg
dec
addb
pop
test
ja
xchg
in
sbb
addb
mov
cmp
inc
sbb
cwtl
cmp
and
xor
mov
iret
subb
roll
inc
scas
or
addb
test
pop
sbb
xchg
jae
sub
xor
add
into
jb
push
xchg
in
mov
fsubrl
and
fists
jnp
rcll
aaa
pop
cmp
andb
push
sub
mov
push
mov
sbbb
push
mov
sbb
clc
sahf
pop
jbe
daa
pop
mov
mov
pop
inc
xor
xchg
or
xlat
pop
push
popf
adcb
negb
jmp
adc
lea
scas
gs
and
or
test
push
inc
lods
sub
and
mov
ljmp
stc
mov
out
stos
mov
add
loope
cld
mov
cmp
leave
or
xchg
add
in
gs
scas
xor
gs
cmp
xchg
fisttpl
mov
mov
sbb
add
cmp
jnp
xor
sbb
mov
loope
inc
orl
mov
xchg
js
ja
and
xchg
adc
push
fcompl
cmpb
movsl
fwait
lret
add
scas
or
sub
andb
cmp
push
jb
jnp
or
jl
in
mov
push
sbb
add
in
mull
sub
mov
scas
and
push
imul
outsl
inc
fsubl
adc
push
mov
clc
jp
rcl
mov
xchg
stos
cs
cmpsl
out
jg
test
cmp
movsb
addb
push
dec
or
cmp
push
jae
adc
cli
out
mov
scas
xor
sub
push
cmpl
movsb
dec
mov
and
xor
dec
xorb
call
sarb
adc
xchg
xor
lret
frstor
pop
push
outsl
pop
xchg
jecxz
xorb
cmp
cmc
fwait
addl
push
subb
mov
mov
add
bound
mov
adc
push
push
into
xchg
insb
or
cmp
lcall
cmpb
mov
cmp
lock
jno
xorb
es
aaa
jb
inc
jg
enter
popa
ret
pop
andl
push
and
inc
dec
test
fisubl
pop
or
std
cmp
pop
dec
mov
jmp
or
sub
fs
push
shr
pop
mov
push
cmpsb
inc
fildll
jmp
jnp
subl
jg
pop
imul
clc
shrb
dec
sahf
jno
fwait
jnp
sbb
mov
inc
std
sti
and
and
xor
loop
lods
sbbb
jmp
mov
daa
aad
into
jge
add
add
popf
jle
inc
jb
and
pop
push
cmpb
in
jnp
test
jle
and
xchg
mov
hlt
sbb
and
mov
orb
mov
subb
out
out
cmp
gs
pop
mov
ret
adcl
cmp
xorb
push
add
xchg
add
aas
sub
jecxz
mov
stos
addr16
mov
add
adc
and
mov
lods
xor
cmpb
sub
lcall
adc
je
adcb
pop
push
pop
mov
rorl
inc
add
mov
in
xorb
adc
dec
xchg
repnz
push
popf
ds
push
jns
enter
ds
and
inc
ret
lret
js
adc
jp
or
outsl
ljmp
clc
pop
cld
mov
xor
lahf
sub
testl
adc
into
cmp
loop
inc
js
and
mov
fbld
ljmp
dec
sub
je
add
adc
add
dec
cmp
sbb
cmp
dec
dec
rolb
adc
cmp
mov
adc
cld
jg
lods
loope
jns
inc
mov
xchg
cmp
mov
mov
xor
dec
shl
pop
fisubs
inc
adcb
call
xchg
sub
inc
or
fildll
mov
ficomps
or
cmpl
nop
dec
and
and
sbb
mov
mov
adc
jbe
outsl
xchg
lret
xlat
cmp
and
in
popa
xor
mov
or
dec
pop
rolb
scas
lret
andb
inc
push
or
lea
pushf
es
aad
and
andl
test
xchg
addb
jbe
dec
fisubrl
bound
jo
jl
aas
xchg
andb
test
stos
xor
dec
sbb
out
push
mov
xchg
mov
mov
sbb
jnp
mov
gs
in
xchg
jg
lcall
inc
cmpsl
subb
bound
icebp
mov
mov
enter
jmp
shlb
sub
mov
sbb
mov
out
jne
bnd
adcb
cmp
and
mov
cwtl
adc
arpl
push
repz
fistpl
sbbb
jne
cmpb
aaa
add
addb
mov
push
fs
xor
add
sbbb
je
orb
in
push
jl
or
jecxz
outsb
cld
push
inc
aad
inc
mov
push
push
sub
mov
sbb
mov
or
addb
clc
sbb
scas
push
leave
dec
xchg
xchg
mov
cmp
xorb
inc
js
xchg
insb
xchg
push
jg
mov
jnp
jecxz
insl
movsl
mov
jae
push
orb
in
adc
sbbl
jbe
test
rcll
imul
or
adc
sti
adc
into
mov
mov
test
les
mov
xor
cmp
sub
cltd
jnp
lea
sbb
aad
add
dec
les
pop
xlat
sub
cltd
lcall
dec
pop
cmpsb
das
and
jecxz
jno
mov
pop
jbe
jl
sahf
mov
adc
cmc
ljmp
gs
cs
xor
and
push
cmp
dec
mov
lret
pop
jae
xorb
mov
xchg
shr
orb
test
and
aas
leave
jns
adcb
ret
fwait
sub
vpavgb
or
je
sub
std
ret
pop
mov
jnp
pop
ljmp
sbb
std
or
addl
sub
sti
sbb
mov
jns
test
mov
dec
inc
mov
sbbb
xchg
fwait
xchg
ret
xchg
and
subb
push
inc
subb
das
cmpsb
inc
pop
mov
and
mov
out
xchg
xor
inc
or
xchg
scas
jae
jecxz
scas
addb
subl
sbb
mov
inc
orb
push
add
sbb
rcrl
adc
lods
jnp
imul
mov
mov
jb
adcb
fldt
test
push
push
pusha
je
add
je
jg
out
sbb
push
push
mov
pop
icebp
dec
push
mov
shl
cltd
sbbb
dec
xchg
add
xor
mull
mov
cltd
dec
jg
cmp
test
sahf
mov
inc
lods
sub
cwtl
in
mov
std
xorb
mov
dec
jns
add
push
arpl
jg
or
inc
arpl
pop
lahf
inc
sbbb
mov
mov
jl
shlb
mov
or
outsl
shll
xchg
mov
rcrl
sub
xchg
lcall
iret
lds
test
test
gs
sbb
xchg
popa
adc
mov
andb
xlat
movsl
enter
test
and
ljmp
ret
inc
dec
dec
sahf
dec
xor
cmpsb
js
inc
dec
lea
dec
cmp
mov
pushf
out
dec
and
ljmp
enter
cltd
mov
xchg
push
inc
pop
xor
jmp
pop
mov
jmp
aam
xchg
fldcw
push
inc
cwtd
adc
lcall
imul
fistpll
mov
dec
daa
sti
ret
jne
mov
sub
mov
push
int
xorl
sti
xchg
adc
jmp
xchg
in
jns
lret
lods
xchg
mov
push
cmp
cmc
mov
push
movsl
fstps
in
mov
insl
sbb
or
push
mov
icebp
jne
icebp
dec
pop
xorl
xlat
das
enter
shll
out
repz
dec
jl
lcall
minps
xlat
fsts
bnd
xor
cmp
ss
jo
mov
insl
jge
push
shll
outsb
cmovno
mov
pop
aad
lods
jns
js
push
fs
inc
lret
cmc
cmpsb
outsl
xor
pushf
jl
pop
lret
mov
mov
dec
pushf
sub
xchg
in
xchg
pop
shl
mov
jmp
addr16
inc
pop
loope
mov
inc
lcall
and
and
inc
aaa
test
repz
roll
jle
sbb
fsub
add
add
stc
ja
fidivl
sub
add
nop
mov
ljmp
cmc
lock
test
push
jecxz
in
and
clc
ficoml
jmp
push
dec
jp
or
movsl
std
sahf
ret
xor
push
aas
scas
sbb
mov
out
and
sbb
and
frstor
mov
pop
lcall
loop
jns
fildll
jae
popf
mov
stc
sub
pop
inc
add
imulb
xchg
shll
lds
jb
scas
popf
ds
ja
lret
stos
or
arpl
and
adc
sbb
mov
je
mov
aam
jmp
fistpll
imul
adc
lcall
cmpl
push
or
xchg
xchg
mov
push
sub
dec
mov
jns
cltd
je
fsts
sub
lret
push
icebp
or
out
dec
add
or
xchg
mov
xor
push
inc
add
daa
cmp
xor
add
adc
or
sub
xor
ret
jbe
movb
add
sbbb
xor
jecxz
inc
roll
mov
jne
cs
cmp
repnz
pop
lcall
subb
arpl
test
adcb
lret
mov
sbb
decb
mov
mov
mov
xchg
mov
and
not
incb
xchg
adcb
mov
pop
orb
pop
jb
sbbb
jmp
xorb
dec
mov
lret
fwait
sbbb
cld
ror
push
pusha
andb
or
scas
sbb
loope
repnz
stos
pushf
subb
dec
xchg
rcrl
andl
sbb
loopne
cmpb
js
xchg
jge
test
pop
and
repnz
dec
sbb
lret
mov
fistps
push
fistl
aaa
orb
add
pop
or
xor
rorl
jg
push
adc
out
lcall
je
or
xchg
movsl
dec
mov
inc
stos
mov
gs
add
lcall
push
jl
je
sti
cmpsb
paddd
xor
andb
dec
mov
stos
subb
add
push
sub
jae
push
adc
pop
rcrl
adcb
mov
loope
dec
aam
xor
je
sub
push
fsub
cmpb
cmc
scas
xchg
jp
xchg
and
mov
inc
or
rcll
orb
xorb
insl
add
insb
pop
dec
dec
sti
das
andb
sbb
cmpl
mov
adcb
or
dec
mov
cmp
inc
mov
sti
add
aas
cmc
cmp
adc
hlt
adc
loope
sbb
lea
sub
sub
mov
push
pop
xchg
pop
lret
jnp
movb
and
in
push
add
xchg
inc
ficomps
xchg
adcb
addb
incb
pop
or
inc
stc
xchg
bound
andb
rorl
flds
push
iret
loop
sbbl
add
mov
inc
cmp
or
add
lea
adcb
jge
stos
sub
cwtl
add
dec
ret
out
cmpb
movsb
pop
rcrb
addr16
xchg
xorl
mov
scas
jle
adc
movsl
mov
sbb
add
xchg
les
loopne
adc
out
dec
cmc
dec
ss
orb
jae
int
push
xor
lea
add
fildl
lods
xor
add
push
add
push
icebp
xchg
pop
xlat
orb
xorl
xchg
mov
outsb
adcb
cmp
lcall
loope
jecxz
pop
lds
add
push
je
and
pop
loop
push
stos
mov
test
lods
xor
jb
rorb
loop
xorl
dec
loopne
sbb
shlb
mov
mov
inc
add
bound
sahf
pop
in
and
push
cmc
lods
xchg
popa
xor
inc
mov
mov
mov
sub
cmp
insl
jnp
or
pusha
aam
inc
add
push
lods
iret
dec
notb
add
imul
cmp
mov
push
mov
xchg
and
jbe
jge
test
aaa
repnz
lock
repnz
aaa
popa
pop
das
imul
ja
icebp
lods
push
push
ret
pop
out
jnp
push
lcall
pop
dec
sub
pop
jmp
scas
je
lcall
pop
pop
sub
jecxz
xchg
insb
lcall
mov
movsl
add
cltd
adc
mov
repnz
lds
aas
pusha
pop
out
xor
shlb
xchg
repnz
pop
lcall
fsub
mov
lcall
ds
into
loopne
jbe
and
jne
push
lods
mov
push
jb
rorb
popa
and
setbe
mov
xchg
xor
pop
in
ret
xlat
push
xor
dec
adc
mov
aaa
inc
sub
xchg
cld
mov
repnz
and
add
das
push
and
dec
in
clc
cmpsl
and
ror
sub
inc
jle
jp
or
cmp
inc
int
loop
mov
xchg
push
mov
mov
cmp
adc
mov
add
test
cltd
pop
mov
inc
or
pop
fwait
js
mov
dec
int3
jns
es
and
jg
inc
jle
mov
mov
mov
stc
cmp
ret
jo
stos
pop
jae
mov
lods
movsb
jl
jb
cmpsl
jns
cltd
mov
push
jb
pop
and
lcall
mov
sti
mov
lret
sahf
pop
shrb
sub
pop
mov
ret
ret
test
xor
xor
mov
sbb
mov
shll
aad
pop
jno
add
bound
mov
cmpsb
add
jns
ret
mov
icebp
iret
sub
jge
orb
rcr
clc
fisubl
ljmp
inc
in
and
inc
and
enter
dec
test
and
orl
mov
out
push
xchg
add
push
ljmp
sub
and
add
xor
push
lock
or
out
cmp
adc
in
lock
scas
xor
pop
pop
hlt
push
xor
mov
hlt
pop
popa
jns
jno
lea
sub
dec
or
jne
fs
cld
repnz
lds
divl
out
dec
stos
sub
jmp
mov
sub
cmp
test
sbb
lcall
repz
and
inc
sahf
xchg
push
mov
adc
jg
and
adc
cltd
ret
mov
nopl
aad
insb
mov
pop
pop
push
cmp
in
lods
rol
pop
xor
sbb
xchg
mov
sub
loop
dec
jo
and
pop
andl
inc
fnstenv
cmp
push
xor
cltd
inc
mov
mov
jnp
dec
std
test
bound
inc
cmpsb
or
lock
rorb
jns
ret
jns
push
push
mov
cwtl
repz
lret
inc
inc
sub
cli
int3
nop
jnp
xchg
mov
repz
cltd
dec
push
ds
mov
icebp
jecxz
push
inc
mov
pop
jae
mov
pop
or
xchg
notl
inc
insb
cwtd
les
andb
jbe
mov
lock
lds
ret
add
mov
sub
in
leave
push
add
jae
jp
mov
aad
dec
dec
fnstcw
je
rolb
sub
int
sbb
icebp
and
sarl
cmpb
pop
pop
scas
add
andb
in
or
test
dec
cmc
mov
andb
es
pop
adc
jp
push
inc
orb
lods
lahf
fcomps
ret
mov
push
outsb
les
dec
aad
xlat
mov
or
cmp
dec
sbb
push
xchg
repnz
psubw
mov
mov
mov
pusha
sbb
cltd
inc
cmc
sbb
adc
mov
in
jl
mov
sbb
inc
push
insl
mov
jge
xchg
rolb
in
je
fwait
lcall
sub
lret
aas
mov
add
out
mov
xchg
mov
addl
sahf
call
clc
mov
insb
push
fs
into
testb
addl
jge
jne
xor
roll
push
clc
jae
cmpb
mov
adcb
adc
xor
nop
scas
xchg
xorb
jl
xorb
mov
jno
fiaddl
push
icebp
adc
adc
push
loopne
lcall
or
loope
mov
jb
dec
aad
mov
mov
movsl
popl
mov
in
mov
sbb
mov
jnp
mov
loop
adc
shlb
jne
dec
lret
add
imul
jo
outsl
cmp
fdivs
dec
pop
decb
repnz
icebp
and
and
push
dec
in
xchg
mov
es
pop
sub
sbb
leave
fdivrp
movlps
popf
sub
movsb
stc
mov
mov
das
sub
xchg
sbb
imul
push
dec
mov
ret
bound
loop
sbb
iret
jno
lods
cmpsl
add
push
lahf
out
sbb
mov
mov
add
cmp
repnz
push
jmp
sub
xchg
dec
sahf
push
cltd
dec
lds
jbe
mov
xchg
pop
ret
pop
fisttps
xor
js
sub
jno
jno
mov
jns
pop
movsl
enter
dec
ljmp
stc
lock
xchg
fwait
dec
imul
les
xchg
aaa
cli
push
pusha
mov
sbb
int
cmpsl
sarb
pop
add
adc
in
push
xor
jns
mov
inc
out
dec
stos
lds
pop
mov
sub
insb
out
cmpl
cwtl
lcall
pop
sub
rolb
push
cmp
and
jbe
mov
cmc
js
div
inc
fs
bound
or
pop
sub
idivl
dec
inc
cli
xor
int3
sub
clc
imul
shlb
push
out
push
int3
ds
fstl
ret
outsl
push
test
sub
aas
and
je
lahf
test
incl
sub
aaa
mov
repz
jmp
ret
pop
pop
mov
std
mov
mov
loopne
sub
inc
ss
fnstsw
jl
jae
lcall
add
and
cmp
push
sub
cld
lcall
ja
insl
push
in
mov
sub
ret
push
pop
repz
push
outsl
and
push
push
cmp
push
mov
stc
aaa
adc
ret
ss
mov
pop
data16
push
or
mov
lock
ficomps
das
pop
lock
fdiv
cmp
xchg
fucomip
push
and
dec
pop
test
in
scas
daa
adc
lcall
stc
add
xorl
pop
jge
jbe
les
int
movsl
xor
mov
cld
push
cmp
xchg
arpl
arpl
repz
mov
cs
push
stc
xorl
lods
ds
add
pop
in
shrl
lret
addr16
fld
fistl
insb
jnp
push
cmp
sub
jns
cmp
adc
ljmp
sbb
das
lret
cmp
and
repnz
xchg
repnz
enter
scas
sub
int
cwtl
sbb
stc
jle
push
fnclex
icebp
sbb
mov
pusha
out
bound
shr
mov
and
push
cmp
cltd
fstpl
inc
pop
ror
add
lcall
stos
adc
testb
in
ja
fwait
rcrb
lds
add
xor
test
cmp
mov
shrl
xlat
insl
jl
mov
in
leave
jmp
ss
andl
cli
mov
pop
enter
xchg
jbe
scas
ror
ja
cltd
add
xchg
ficoms
sub
loopne
shl
cmc
ljmp
push
jmp
mov
jp
es
cmp
jns
cltd
int3
or
stos
sahf
faddl
cs
adc
xchg
jl
sub
add
into
cmpsb
cmp
repnz
mov
inc
es
mov
jle
ljmp
inc
repz
lret
in
into
popa
pop
lcall
mov
fwait
insl
insb
insl
loope
icebp
jbe
jle
in
mov
and
lock
pop
js
jno
jbe
repnz
in
push
jl
lcall
mov
insb
pop
pop
dec
addr16
sbbl
adc
popl
xchg
adc
in
xor
inc
push
insl
orl
or
addr16
jno
mov
pushf
sarl
add
mov
pop
insl
shlb
es
lcall
inc
dec
icebp
les
mov
dec
stc
iret
call
pop
mov
arpl
xchg
adc
fstps
fcoml
clc
ja
loope
jl
xor
push
cmp
lret
mov
sbb
cltd
adcl
cwtl
into
push
test
add
test
pop
mov
lcall
push
loop
mov
nop
loop
jae
out
lea
add
push
out
and
subb
sbbl
aam
inc
mov
add
lahf
sbb
imul
int
add
adc
stos
aad
in
outsl
les
lret
imull
cmc
subb
dec
ficoml
fisubs
pop
ret
movsl
lods
repnz
subb
shll
mov
test
and
aaa
or
and
movb
cwtl
inc
cltd
hlt
orb
push
sbb
add
subb
imul
repnz
and
inc
sub
int3
jo
push
xchg
ret
xlat
and
sbb
mov
mov
jnp
jecxz
lret
aaa
lcall
jnp
cmp
js
into
push
divl
and
lret
cli
adcb
inc
rcll
inc
xor
add
or
subb
mov
add
sbb
or
out
mov
data16
xchg
inc
xor
cmc
addb
and
fwait
jg,pt
jmp
xchg
mov
scas
out
cmp
mov
lods
sbb
mov
jg
daa
scas
xchg
call
mov
roll
mov
sbb
jno
jbe
sub
push
test
sbbb
jle
jo
mov
xor
rcl
fsubr
mov
mov
popf
aaa
orb
sbb
adc
or
mov
lock
jns
sub
cs
insb
cltd
sbb
push
add
sub
push
les
cmc
sarl
jbe
pop
jle
pop
cltd
push
mov
lcall
fdivr
cltd
mov
nop
jl
pop
inc
outsb
test
and
xlat
push
cmp
in
bnd
ja
adc
jmp
jmp
out
stc
cmp
lods
lds
mov
daa
jo
mov
repnz
fistpl
sub
sbbb
out
push
and
es
test
jp
jb
clc
push
mov
mov
fistpl
iret
pop
or
lds
cld
movsb
sbb
icebp
int
and
mov
pop
cmp
push
jns
jnp
and
fcoms
ret
xchg
lret
ret
int
outsb
inc
jl
push
dec
enter
lret
or
add
xchg
sbb
mov
not
xchg
push
ljmp
loope
int3
or
pop
cltd
mov
jo
sti
test
test
scas
and
add
pop
loopne
add
push
stos
xor
hlt
cs
in
cbtw
pop
imul
lcall
sbb
add
mov
les
hlt
push
xor
push
push
loop
scas
push
xor
stc
pop
bound
inc
int
in
mov
test
fwait
jmp
jb
sahf
pop
test
pop
add
mov
add
mov
and
loopne
inc
push
out
sbb
sahf
and
mov
jp
jae
xchg
loop
mov
mov
cltd
outsb
ljmp
pop
jle
mov
faddl
out
pop
jge
jae
int3
out
mov
or
sub
pop
cmp
pushf
stos
repnz
lds
mov
add
xchg
pop
aad
lock
push
sbb
jno
test
mov
mov
cmp
cmp
scas
inc
int3
jg
xlat
nop
mov
lods
push
mov
stos
and
and
call
fbstp
out
or
cltd
xlat
popa
daa
xchg
cs
or
rcrl
sub
imul
ds
cli
adc
ljmp
lcall
mov
test
or
test
adc
push
dec
push
or
insb
xchg
int
lds
cmp
cwtl
cli
in
sbb
in
fisttps
popf
push
daa
or
push
daa
cmp
mov
cwtl
push
stc
loop
lret
jnp
jne
jle
cli
push
inc
jo
icebp
outsl
lock
loop
dec
and
lcall
test
push
pushf
mov
mov
pop
fstpt
es
gs
stc
pop
mov
dec
push
pop
push
cwtl
sbb
mov
xor
lds
fsubr
lock
stc
in
lcall
jb
cmc
pusha
mov
loop
sbb
ja
lcall
pop
mov
das
mov
pushf
ds
shr
cmc
cld
shl
popf
xchg
stos
std
cltd
jne
icebp
shl
stos
inc
mulb
sub
fists
pop
xchg
adc
sub
or
sbb
sub
movb
ljmp
lcall
stc
jb
sub
jmp
inc
aaa
mov
loopne
pop
aaa
jmp
into
sbbb
je
mov
stos
sub
filds
cmp
pushf
and
jg
data16
call
xchg
mov
cmpsb
dec
sub
test
loop
and
pop
add
lret
enter
xchg
inc
push
div
es
inc
sar
pop
incl
jo
scas
mov
mov
xorb
adc
or
dec
out
mov
cli
mov
aam
add
aaa
xchg
pop
or
sarb
cltd
jmp
push
mov
fimuls
sub
jp
push
xor
repnz
mov
mov
dec
push
shll
inc
in
std
push
mov
outsb
lcall
cli
sbb
lock
inc
sti
scas
es
or
push
dec
pcmpgtw
test
cmp
movsb
inc
rcrb
outsl
cmp
ja
dec
adc
ss
and
dec
mov
inc
int
xor
cltd
fiaddl
pop
inc
jo
inc
mov
imul
add
jb
push
xchg
js
stc
mov
hlt
pop
das
push
jns
or
dec
enter
sti
notb
or
xor
push
mov
in
add
mov
jae
mov
ds
dec
mov
jns
in
xor
bt
mov
inc
xchg
sub
subb
stc
je
jo,pn
test
mov
ffreep
adc
xor
sbb
dec
pop
icebp
mov
das
jns
lcall
icebp
and
or
sbb
xorl
sbb
out
repnz
jle
inc
or
repnz
outsl
xor
pop
pushf
fists
call
jl
out
cmp
pushf
aam
sub
jl
xchg
pop
std
roll
cli
icebp
lret
dec
jge
cs
cmp
test
lret
and
lea
jbe
std
dec
hlt
nopl
cltd
xchg
cmc
frstor
mov
stos
lcall
insb
xchg
scas
add
ficoml
and
jl
mov
bound
push
xchg
cmc
repz
lcall
int3
and
jno
jp
nop
xchg
into
or
inc
mov
or
ljmp
sbbb
call
stos
dec
aam
mov
jo
dec
je
mov
pop
clc
jmp
in
movsb
sbbb
xchg
push
mov
ljmp
adc
mov
ret
inc
lcall
or
sub
fbstp
inc
mov
xchg
dec
lret
and
adc
loop
lea
gs
push
in
stc
inc
mov
sub
cmp
aam
rorb
out
test
loopne
sub
or
lods
push
cld
dec
int3
fldt
adc
sbb
cli
mov
pop
ficomps
mov
icebp
and
loope
xor
int3
dec
push
pop
scas
push
pop
xchg
lock
add
cli
xor
mov
cltd
sar
push
and
aam
push
daa
jo
fcmovb
mov
inc
cltd
mov
xor
dec
ret
and
sub
jl
add
insb
xor
jae
adc
lahf
adc
jmp
out
loopne
or
mov
cmp
sbb
xchg
popf
aaa
cs
cmp
and
mov
push
cmp
imul
sub
or
in
mov
jns
ja
lds
scas
push
pop
ja
lret
nop
enter
or
inc
jge
je
les
jge
enter
xor
nop
cmpsb
xor
and
mov
dec
sbb
faddp
push
sub
lret
mov
cltd
pop
cli
mov
mov
lret
push
mov
fisubrs
aam
negl
push
ret
lret
pop
sbb
ljmp
ret
mov
sub
sub
mov
add
imul
pusha
fwait
out
add
xor
adcl
pop
pusha
cmpsb
cltd
movsb
fiaddl
inc
sub
jno
cmp
mov
and
stc
hlt
push
repnz
mov
cmpsl
test
lods
dec
fdivs
in
ror
psubq
loop
popf
in
jo
test
xor
scas
xchg
lahf
jge
cmp
fcomip
lcall
aas
inc
inc
and
mov
jle
inc
ja
cmp
dec
icebp
lods
pop
adc
andl
or
jns
sub
xchg
clc
pop
jbe
jmp
lock
adc
jp
and
xchg
push
adc
outsb
jmp
dec
xchg
jae
iret
fwait
xchg
sti
inc
sub
sbb
xchg
adcl
decl
arpl
add
push
pop
sbb
xor
push
sub
xchg
stos
insb
sub
test
out
es
aam
sub
stos
xchg
mov
subl
xlat
fs
mov
ja
sahf
fisttpll
jae
ret
mov
mov
mov
sub
mov
mov
jae
xchg
adc
lds
out
push
std
mov
jp
mov
mov
jge
sub
movsb
mov
mov
sti
fdivrl
and
xchg
pushf
cmp
xor
jp
fstps
fcomps
xchg
cmp
call
xor
outsb
or
test
sbb
pop
mov
mov
jb
flds
repz
add
dec
rcpps
dec
and
ds
sub
jl
sub
inc
into
cs
sar
incl
cmp
mov
dec
in
pop
sub
xor
jg
sub
cmp
mov
shl
pop
xchg
jns
bnd
fdivl
das
or
mov
sub
sub
jecxz
faddl
ds
aaa
fsub
sbb
outsl
js
sub
cmp
push
lods
psubq
test
xlat
sbb
test
lcall
push
enter
push
jo
fs
and
mov
sbb
outsl
sbb
inc
int
fdivl
std
jl
aam
ja
cld
ror
bound
lret
stos
out
and
xchg
int
push
sub
jne
lret
push
aam
fnstenv
arpl
out
fsts
daa
mov
rorl
fcoms
mov
iret
lea
xchg
cmp
pop
add
dec
cltd
inc
cmp
pusha
mov
bound
sbb
sbb
testb
pop
sbb
pop
rcr
push
dec
aam
mov
mov
shrb
loope
mov
adc
push
and
aaa
adc
data16
inc
jnp
mov
imul
pushf
pop
jo
and
cmp
lcall
mov
ret
adc
push
push
xor
ret
popa
fldcw
sbb
jae
cltd
or
cltd
rorl
int
xor
out
fnstenv
xor
inc
lods
push
add
pop
ja
fs
bound
repz
lahf
cmp
jns
bound
je
and
sbb
and
subl
fbstp
pop
lcall
sub
scas
das
pop
repnz
adc
dec
sbb
sbb
cltd
in
cs
mov
jne
pop
outsb
sub
orl
dec
mov
je
dec
mov
lret
jg
in
xor
lret
jae
fdivrs
outsl
jge
dec
push
cmp
jp
stc
mov
sbb
iret
test
add
xor
stos
inc
loopne
cmp
cwtl
testl
mov
sbb
sbb
insl
das
push
dec
fwait
or
mov
bound
jle
xlat
adc
lcall
inc
icebp
testl
clc
jmp
or
insb
out
ficomps
bound
inc
jae
sub
addr16
xor
sub
movb
cmp
push
jb
or
ja
or
sbb
and
movl
pop
lods
negl
scas
cmp
inc
pusha
and
lock
mov
int
in
push
lods
in
xor
push
mov
mov
mov
adcl
or
sbb
lcall
push
bound
popf
jno
xchg
cli
pextrw
outsl
add
lcall
aad
pop
mov
out
push
lods
insl
loopne
daa
xor
repz
cwtl
repz
mov
call
insb
jb
jge
jne
loope
lahf
testb
cmp
pop
sub
popa
mov
add
jmp
punpckldq
mov
outsl
cmp
inc
cs
aaa
in
decl
xor
xchg
push
movsl
xchg
scas
sahf
jns
lret
loopne
sbb
push
addr16
mov
shlb
sub
stc
xchg
pop
cmp
sub
pop
cmpsb
jns
cmp
imul
xor
jbe
cli
dec
xchg
pop
sub
inc
jns
mov
stc
ds
jle
inc
or
mov
les
hlt
ret
or
jge
in
and
cli
test
push
and
lret
jb
xor
pop
aaa
jmp
push
cmpsl
fs
sub
cmp
jnp
enter
pop
mov
jp
daa
sub
add
adc
out
jmp
test
xchg
lcall
sbb
cwtl
cmp
xchg
sbb
fadds
mov
jge
les
and
xchg
and
repnz
cmp
ret
lcall
loope
aad
fdivl
enter
push
sub
sbb
xor
dec
sub
loopne
add
or
jne
addl
dec
insl
mov
push
inc
ret
xchg
pop
and
stc
adc
popf
sbb
xchg
jb
jle
scas
sbb
leave
xchg
fldl
dec
cmp
pop
push
stos
adc
push
adc
imul
mov
pshufw
js
sbb
sub
ja
stos
xor
cmp
jo
push
shlb
inc
add
push
add
jns
add
mov
jo
lock
jb
push
imul
sbb
in
xor
cmc
ret
push
jno
test
cmp
push
jo
lock
lods
xor
pushw
sub
aaa
jecxz
cmc
sarl
mov
in
flds
jns
mov
insb
loope
insl
stc
lods
and
push
sbb
inc
xor
sub
sbb
fbstp
jg
ljmp
mov
cmp
pop
jge
lods
xchg
cmp
fxch
push
addl
daa
dec
fidivl
dec
pop
sbbl
cmp
cwtl
sbbb
jbe
repnz
sub
adcl
mov
rcrb
mov
lret
mov
add
or
cmp
dec
aad
bound
inc
jo
xor
call
xchg
mov
pop
and
mov
pop
sub
xor
xchg
adc
and
pop
mov
jae
sbb
insb
out
adc
cmp
and
sbb
lcall
push
test
and
popa
aaa
mov
xor
inc
repnz
leave
aaa
mov
scas
inc
mov
jl
ret
push
shlb
outsl
ss
outsb
xchg
call
mov
loope
inc
test
mov
mov
outsl
jge
xorb
leave
sbb
pop
daa
cltd
clc
jmp
ljmp
inc
fdivrs
enter
dec
into
jns
sub
mov
repnz
mov
ss
in
in
jp
std
test
loopne
call
sbb
mov
xchg
inc
pop
cltd
jecxz
cwtl
ret
fdiv
imul
outsl
int3
push
inc
repz
jp
out
push
push
mov
movb
jmp
fcomp
mov
int3
out
cmp
mov
sbb
pop
aaa
insb
mov
clc
pop
inc
insl
aaa
scas
test
cmp
add
cmp
and
add
cmpb
out
pop
xor
fs
stos
cmp
fistps
jo
jmp
xchg
sbb
leave
pop
xor
xchg
idivb
jge
mov
push
shl
jae
sbb
sbb
xchg
sub
cmp
je
stos
je
out
jnp
sub
imul
push
and
cmp
xor
stos
xor
jge
pop
mov
xchg
sub
add
test
stc
icebp
jnp
add
stos
cmp
xchg
fs
jb
mov
xor
leave
and
xchg
mov
jns
cltd
arpl
mov
jle
loopne
sub
jbe
sbb
push
mov
cwtl
cwtl
pop
xchg
out
mov
jecxz
or
add
sbb
adc
aaa
jns
and
fwait
jns
les
adc
xchg
and
fstpl
aaa
mov
or
lcall
cld
cmp
mov
push
jbe
sbb
cltd
sub
mov
jns
clc
sub
stos
stc
dec
idivl
jo
xchg
daa
push
mov
std
cltd
adc
cmc
jbe,pn
xchg
loope
pop
xlat
mov
rcrb
outsl
cmp
pop
add
je
cld
inc
push
insb
stc
mulb
ret
popa
test
inc
hlt
sub
int
jo
adc
cmc
clc
sub
and
lds
push
pop
out
sbb
outsl
in
std
xchg
nop
sub
ljmp
dec
movsl
pop
aad
jmp
xchg
jle,pn
dec
or
repz
xor
lock
stos
dec
pop
lret
sbbl
in
test
movsb
xchg
ljmp
sbb
lcall
fs
out
js
scas
mov
lret
cmp
stos
jle
aas
mov
ljmp
and
cmpsb
mov
mov
push
outsl
bound
add
jnp
mov
push
lcall
test
push
adc
adc
mov
fidivrs
aaa
cli
xor
dec
jecxz
in
jl
mov
hlt
xor
push
nop
mov
fwait
cmc
xchg
add
ss
ds
sbb
imul
jno
into
adc
idiv
daa
cltd
shrl
jno
cs
push
in
push
cmpsl
iret
rcrb
push
push
dec
mov
addr16
mov
cmp
loopne
loop
fdivs
data16
cmp
test
and
fisubl
push
xchg
push
shr
outsb
add
andb
pop
arpl
jns
cli
push
outsl
push
pop
sti
xchg
pop
loope
cltd
frstor
xchg
adc
push
mov
daa
cmp
push
sbb
pop
pop
xchg
jne
jg
aad
enter
mov
mov
xor
inc
adc
icebp
and
out
push
aam
scas
ljmp
mov
insb
lcall
mov
push
push
add
sbb
push
jns
cltd
gs
stos
xchg
cmp
xchg
add
push
add
lcall
xor
add
push
jmp
fwait
cltd
adc
adcb
dec
bound
cltd
ret
aam
mov
in
mov
and
ret
out
jae
cmc
push
cmpsl
cmp
loop
sub
and
pop
add
decb
xor
ret
mov
jge
sbb
jge
cmp
enter
loope
push
xor
sahf
scas
xor
out
push
std
inc
cmp
enter
push
mov
aam
dec
jns
daa
pop
rol
aam
jbe,pn
fistl
imull
jno
rclb
stos
mov
adc
sbb
ljmp
jg
jle
lret
dec
jle
dec
xchg
ljmp
inc
test
push
cmp
inc
mov
daa
imull
outsl
push
mov
push
cmp
loop
pop
push
das
lock
sbbl
mov
mov
ljmp
jp
imul
cwtl
fildll
mov
cmp
addr16
jbe
mov
cmp
pop
out
xchg
jle
int3
xchg
xchg
bound
iret
add
ret
xor
pop
dec
daa
dec
jmp
cs
jo
mov
imul
jmp
sub
push
cmc
push
sbbb
call
fisubrs
aad
test
rorl
add
push
add
lcall
dec
cs
add
and
ret
inc
xor
push
test
bound
xchg
cltd
xor
sub
mov
pop
icebp
and
fnstenv
xchg
inc
clc
rorb
rol
es
cmpsl
fwait
pop
mov
cltd
cmp
pop
fisubrs
ret
outsl
add
push
loop
shll
jbe
xor
pop
push
mov
lock
loope
iret
lcall
ja
mov
cltd
loopne
jg
scas
in
xchg
xchg
ds
mov
and
inc
lock
lret
aad
mov
shlb
mov
sbb
mov
cli
xor
rcl
jnp
out
fst
or
xor
push
mov
fld
lea
aas
xor
iret
decb
stc
test
fwait
xor
cmp
adc
inc
mov
cwtl
outsl
lea
add
inc
fnsave
sbb
push
inc
add
and
cs
nop
fidivrs
xor
lcall
mov
insb
cltd
jbe
ja
out
sub
jp
jbe
scas
mov
cwtl
in
hlt
xor
jb
xor
enter
js
je
and
jge
pop
mov
shrb
stc
jle
cmp
mov
je
jno
enter
sub
nop
lock
out
sbb
pop
cs
rclb
push
stos
lods
fmul
je
inc
ja
lea
xor
mov
leave
jbe
ss
jbe
je
sub
adc
cli
and
xor
imul
cmp
dec
into
cmp
sarl
out
push
lcall
iret
int
jo
fimull
enter
xor
sbb
out
cmp
sub
pop
and
jge
xor
mov
jno
notb
nop
mov
or
mov
mov
jo
sahf
pop
outsl
dec
les
out
sub
popa
push
scas
jle
testb
in
push
jae
sub
fwait
adc
mov
in
aad
push
outsb
rcr
std
fsts
aad
xor
imul
divb
push
cmp
mov
and
push
es
push
push
adc
xor
add
fwait
push
add
push
into
outsb
cs
ljmp
sti
pop
xor
pop
cwtl
xchg
insl
add
sbb
sahf
jbe
divl
subb
adc
leave
inc
int3
arpl
pop
les
sub
andb
mov
repz
loope
imul
subb
ds
orl
popl
lcall
dec
out
imul
push
and
xor
and
push
xchg
in
cmp
movsb
fwait
popfw
mov
stos
cmpsl
addb
add
sbbb
cltd
or
cs
add
mov
pusha
xchg
addb
sbb
or
or
mov
add
enter
popl
fcomps
ljmp
cmp
fwait
inc
add
xchg
out
addb
sbb
xor
cli
shlb
sbbb
mov
outsb
mov
dec
sub
lea
push
or
pop
jg
mov
int3
sbb
orb
jmp
and
fsubrl
inc
subb
pop
scas
dec
mov
mov
mov
loopne
ret
sub
sub
mov
push
mov
mov
lods
sahf
pop
pushf
lret
shl
test
adc
or
or
xor
mov
lock
lret
jb
mov
mov
data16
dec
sti
sub
jbe
jb
sub
outsb
lcall
in
bound
fisubs
xchg
aam
cwtd
loope
sar
sub
push
lcall
out
xor
pop
inc
inc
leave
dec
inc
cltd
das
xorl
inc
lcall
outsl
outsl
dec
lds
mov
jno
out
xorl
mov
jmp
std
dec
cs
mov
call
jecxz
lcall
fwait
sbb
bound
div
lret
add
or
jo
mov
adc
adc
js
into
xor
mov
xor
loop
int3
subb
xchg
add
pop
dec
cltd
loopne
inc
pop
xor
les
test
inc
dec
pop
outsl
test
scas
xchg
mov
xchg
push
imul
mov
dec
xor
stc
and
inc
jle
cmp
in
xor
fcmove
mov
ja
cltd
fstps
sbb
jae
popf
cli
dec
stos
loope
sarl
loop
sbb
out
gs
ss
or
cmp
dec
fucomip
inc
jns
mov
sub
idiv
test
sbb
or
fnsave
mov
jp
xchg
aaa
jl
push
loop
and
and
push
cltd
pop
xor
lcall
data16
cmp
cs
xchg
push
out
mov
adc
loope
mov
jno
fs
xchg
adc
dec
cltd
xor
push
test
out
aam
sub
cs
dec
pop
and
repnz
cmpsb
adc
xor
test
inc
pop
bound
bound
stc
iret
enter
pop
subl
pop
pop
test
arpl
cmpsl
aam
popa
jle
pushf
nop
loop
ds
aad
insb
out
xchg
mul
inc
loopne
test
cwtl
and
xor
outsl
out
lret
jb
and
ljmp
mov
shlb
popa
or
aad
dec
sub
outsb
mov
add
mov
movsb
sub
pushf
lock
ret
leave
lds
sahf
ljmp
aad
cmp
jne
lods
ret
shll
xchg
jo
xchg
aam
cltd
cmpsl
int3
push
cs
jl
jno
jae
adc
loopne
pop
xor
sub
xchg
inc
lcall
sbb
out
and
test
mov
jecxz
popa
filds
jo
cltd
and
mov
arpl
jae
jne
iret
arpl
inc
stc
jae
repnz
pop
jecxz
xchg
icebp
out
in
ss
mov
mov
loopne
add
dec
and
mov
daa
adc
pop
cmp
inc
xlat
ret
xlat
jmp
lods
push
adc
sub
jae
lock
or
enter
jmp
jge
sbb
xchg
xchg
lcall
shlb
or
lds
outsb
jno
dec
cmovp
rcrb
pop
sub
js
jns
in
aad
mov
or
cltd
and
rorl
push
add
jns
mov
loopne
loop
sti
inc
pop
jne
addl
add
sub
jecxz
addr16
es
sub
repnz
js
popa
insl
mov
outsl
aad
out
ljmp
fdivl
xchg
jge
and
dec
add
lcall
imul
fisttpl
lcall
push
stos
mov
imul
or
in
cmp
hlt
pop
xorb
and
adc
push
stos
xor
push
call
sub
out
dec
icebp
push
mov
idiv
pop
hlt
aam
push
mov
cmp
call
and
cmp
ss
mov
ja
insl
xchg
lock
and
sbb
pop
shl
inc
and
inc
outsl
test
sbb
jmp
cmp
not
orl
insb
fcmovnb
inc
push
das
inc
andl
jge
sbb
mov
test
repnz
mov
fnstenv
pop
push
add
inc
jle
shll
cli
sahf
shll
lret
xlat
push
jl
push
stc
les
xchg
aam
and
cltd
xchg
jl
cwtl
mov
dec
test
and
aas
mov
pushf
test
dec
test
iret
inc
insb
add
inc
lret
sbb
xchg
xchg
add
jbe
inc
lcall
out
push
mov
stc
pop
cltd
ss
push
fucom
lret
jo
test
inc
cwtl
xchg
pusha
and
mov
sbb
in
cmp
rclb
jp
sbb
jno
pop
dec
xor
pop
add
jecxz
dec
pop
cli
jbe
adc
imul
jb
or
das
cmpl
mov
dec
mov
jns
dec
sub
or
sub
push
jge
mov
lcall
int3
or
jle
pop
add
mov
es
and
scas
mov
inc
push
sbb
mov
jo
shr
mov
in
and
bswap
outsb
sbb
pop
pop
imul
shll
lcall
pop
ja
int3
mov
test
loope
jns
adc
ljmp
std
nop
outsl
mov
cmp
mov
sub
jl
sub
out
xor
fimull
xor
add
push
and
pop
ss
or
mov
sbb
xchg
adc
arpl
cwtl
in
mov
and
insl
xchg
aaa
cltd
mov
loopne
mov
in
xchg
stos
or
lds
hlt
stos
mov
ss
gs
lods
cltd
sbb
lret
pop
xchg
into
in
das
loope
and
into
fs
pop
fidivrs
out
mov
xor
insb
or
push
and
xchg
data16
sbb
xchg
loopne
jbe
lcall
mov
and
or
daa
clc
xchg
fs
test
scas
sbb
in
subb
jo
xchg
lds
inc
sbbb
sbb
lock
cli
cs
jbe
repnz
cmc
xor
gs
pop
lods
sub
jl
sub
mov
test
xchg
das
pminub
jbe
popf
shrb
pop
xchg
into
jg
pop
int
jbe
adc
cmp
adc
pop
sbb
or
shlb
cltd
cmpb
ret
or
mov
xchg
in
xchg
cmp
inc
outsb
mov
dec
push
mov
or
inc
repnz
orl
sub
adc
inc
mov
and
add
sbb
scas
and
push
xchg
cmc
roll
das
lcall
inc
sub
cmc
mov
jno
mov
lcall
lret
cmpsb
adc
jge
filds
loopne
push
fnstcw
movsl
sub
lcall
repnz
cmp
cmp
pop
inc
push
sarb
shlb
pop
jecxz
pop
out
adc
mov
mov
popf
int
xchg
ret
inc
jg
test
aad
inc
jno
sub
test
mov
insl
bound
push
mov
loop
cmpb
mov
fcoml
and
cltd
sbb
int
jns
dec
pop
cltd
out
cmp
dec
fidivs
ds
pop
dec
xchg
loopne
push
in
outsl
and
rcrb
lret
test
xchg
addl
mov
and
sub
mov
xor
xchg
and
ret
sub
rorb
xor
push
pop
add
pop
xchg
xchg
repnz
mov
rol
jns
xor
cmpsl
dec
dec
or
mov
push
lcall
push
sub
shlb
add
sub
sti
fisubrs
sbb
jo
cmp
leave
push
ja
sti
jae
out
jle
out
mov
pop
js
ret
nop
mov
rolb
mov
fwait
or
loopne
mov
mov
vandnps
adc
and
xchg
ja
adc
loop
adc
xor
rcl
in
and
dec
cltd
cltd
enter
sbb
lcall
loop
pop
sub
push
gs
add
test
or
pop
stos
or
jle
pextrw
sbb
jmp
pop
push
outsl
and
imul
push
push
movsl
test
insb
lds
shlb
out
lock
xchg
push
push
cmpsl
jo
mov
mov
popf
ficoms
cs
jle
aad
sbb
mov
push
inc
mov
mul
and
imul
xchg
shlb
lcall
cs
dec
aad
add
mov
aam
sbb
lret
cwtl
mov
add
inc
cltd
movsl
aam
jl
cmpl
jl
fwait
dec
push
jp
lret
inc
ss
nop
test
test
jo
xor
mov
adc
in
fwait
mov
mov
je
lea
lds
ss
clc
in
fcoms
sbb
jge
in
loope
insb
lds
inc
push
sti
or
or
mov
jae
pop
repnz
xchg
and
mov
sti
add
push
nop
popa
cmp
cs
lock
int3
stos
xchg
cmc
je
out
jg
mov
jmp
inc
mov
jle
mov
arpl
out
bound
xorb
mov
stc
xchg
test
ja
jnp
loope
arpl
mov
cmc
daa
mov
xor
out
push
mov
ss
pop
push
int
daa
ljmp
repnz
sahf
jp
nop
sbbb
movsb
add
push
pop
pop
jmp
stos
xchg
mov
testl
inc
or
or
bnd
out
cltd
in
or
shll
stos
pop
dec
outsb
add
in
test
cld
and
or
xor
jnp
add
push
mov
jae
lahf
xor
inc
loop
test
repz
mov
jle
mov
mov
int
lods
popf
cld
outsl
xor
mov
insb
mov
insl
inc
adc
fistps
mov
test
aad
in
push
pop
pop
shl
out
fisubrl
andb
dec
out
jnp
mov
xor
push
lcall
out
or
push
push
loop
jne
aad
scas
jl
adcb
ss
jmp
adcl
xlat
push
cmpl
inc
add
inc
aas
lcall
push
jp
lods
loopne
inc
icebp
incl
pop
push
scas
or
mov
movq
jge
pop
loop
cmpb
push
sbb
cld
mov
test
aad
add
mov
out
xorb
sub
mov
andb
pop
add
imul
int3
jnp
xchg
jae
sbb
pop
sub
push
mov
lds
imull
sbb
leave
sbb
xor
int
lods
push
add
ds
cli
mov
jo
clc
mov
jbe
js
mov
cltd
lret
pop
jecxz
nop
xchg
jbe
lods
sub
fadd
cmpsl
shlb
adc
fwait
cmp
icebp
push
out
inc
mov
jg
scas
xchg
addr16
mov
adc
mov
cmp
jnp
pop
mov
mov
divl
xchg
mov
xchg
lret
pop
aad
test
cmp
jne
outsl
xchg
or
or
jecxz
mov
lds
jbe
mov
jo
test
ja
fdivrs
rcrl
xorb
andl
enter
push
sub
flds
in
shlb
imul
inc
bound
iret
aaa
jns
mov
fwait
test
xchg
fcoml
aaa
aad
sbbb
mov
flds
add
sub
das
out
daa
jbe
repnz
jb
add
ljmp
jecxz
stc
hlt
filds
scas
pop
outsl
and
in
mov
mov
jle
ret
mov
ss
mov
cmc
test
rorb
mov
aaa
dec
xchg
mov
pop
cmp
mov
nop
push
or
mov
jle
jecxz
daa
roll
mov
je
js
cmc
popa
test
jle
fucom
jp
mov
in
sbb
lcall
mov
jbe
mov
mov
cmpsb
das
mov
in
inc
stos
adc
cld
jmp
lidtl
sub
sbb
test
cmp
jns
or
xchg
adc
jb
jp
or
pop
mov
imul
jnp
xor
pop
mov
sbb
ja
inc
cli
jle
in
cs
lcall
outsl
sbb
push
push
mov
pusha
xor
xchg
mov
xchg
push
mov
mov
ret
adc
mov
das
jno
idivl
mov
test
mov
dec
sbb
sbb
mov
adc
adc
sbb
jbe,pn
arpl
or
out
sbb
dec
std
aam
push
xchg
add
jnp
xorb
clc
fmulp
outsb
and
out
xor
mov
or
andb
adc
popa
stc
pop
repnz
xorb
or
mov
dec
dec
xchg
loope
je
xlat
mov
nop
add
sbbb
jo
sti
or
test
sbb
jg
int3
or
hlt
mov
or
mov
lods
mov
lods
mov
or
adc
insb
in
jg
and
lret
sub
jl
movsb
add
test
lods
cwtl
and
addb
lret
sbb
push
jb
test
sbbb
nop
mov
push
test
clc
addb
dec
addl
inc
gs
inc
mov
rorl
push
pushf
pusha
mov
loope
jmp
adc
push
movb
mov
push
jge
mov
fbld
jle
jns
and
ret
lret
mov
ss
push
pop
insb
aam
sub
adc
add
adcb
ljmp
fnstcw
std
fisubl
mov
mov
nop
divb
out
and
dec
fs
je
xor
dec
and
mov
mov
lcall
test
lea
sbb
pop
jne
pushf
push
lahf
pop
shrb
inc
adc
cmp
sahf
cmpb
in
jle
cmp
aas
and
ret
push
mov
fidivrs
sub
repz
adc
add
xor
fwait
out
es
cmpb
pop
inc
orb
push
mov
lret
push
andb
lret
mov
lock
mov
sub
cmp
push
in
je
lahf
inc
lock
jae,pn
jp
dec
subb
add
bound
lock
pop
mov
lods
or
lods
cmp
mov
adc
mov
push
and
cmpb
outsl
rorb
addr16
lahf
mov
mov
andb
data16
pop
xchg
popf
into
stos
mov
jbe
add
mov
jnp
and
push
aam
mov
cmp
addr16
popa
cltd
inc
insl
push
enter
pop
pusha
imul
sub
out
cmpsl
mov
lret
out
push
push
fs
int3
inc
rorb
ret
int
data16
jg
mov
lcall
sahf
idivb
xor
ljmp
mov
aaa
jg
ljmp
jne
aad
outsb
cmpsb
add
inc
xor
push
cld
push
sbb
add
sbb
incl
push
rcll
inc
xchg
push
mov
inc
or
pop
loope
dec
andb
or
adcb
sub
shlb
in
ffreep
xchg
push
mov
mulb
jns
push
insb
xchg
jnp
test
xor
push
xlat
jg
mov
mov
mov
andb
pop
push
mov
push
pop
add
lea
dec
adc
cltd
push
add
scas
mov
fiaddl
fsubrp
rcrl
jnp
dec
enter
imul
ljmp
cmp
andb
jmp
sti
popf
push
andb
mov
scas
popa
push
or
dec
pop
sub
loopne,pt
mov
outsl
xor
xchg
mov
movsl
mov
xchg
jb
cmp
mov
and
cli
addb
push
cmp
subb
pop
xor
jb
roll
bound
xlat
pop
loope
stos
dec
xchg
jg
sub
daa
loop
pop
mov
mov
xchg
sbb
aaa
or
outsb
out
insl
pushf
pop
inc
jae
fs
int
mov
xchg
ljmp
push
mov
loop
sub
imul
sub
sbb
fmul
pop
out
fsubs
pop
lcall
imul
shlb
mov
lahf
cmp
dec
filds
cmp
sbbb
dec
icebp
xor
test
add
push
and
mov
push
js
gs
subb
push
aad
aam
flds
lea
xchg
mov
stos
mov
jo
std
ja
repnz
ficomps
and
mov
mov
popl
sbb
int3
nop
cmp
mov
jbe
sub
out
and
daa
sbb
inc
addb
cmp
addb
sbb
js
cli
jg
mov
sbbb
jb
adcb
sahf
test
cmp
add
imul
insb
mov
mov
jae
shrl
rorl
call
jnp
out
aas
loopne
jb
jp
cmpb
fldcw
cs
sbb
pop
or
or
mov
int3
adcb
in
fadds
lcall
xor
jbe
adcl
or
sub
push
andb
mov
xchg
xchg
adcl
sti
xchg
into
repz
sub
in
ljmp
and
callw
xrelease
pop
mov
inc
jnp
cmc
pop
repnz
mov
xor
js
lea
push
subb
push
ljmp
pop
jle
sbb
pop
mov
hlt
and
js
mov
and
sti
fcoms
iret
jecxz
and
jg
jp
and
movsb
inc
cld
dec
push
xor
cmpb
pop
add
and
aas
sub
sub
mov
ret
ljmp
push
inc
les
out
cltd
int3
cmp
pop
cmpb
jecxz
fmuls
adc
scas
mov
push
or
pop
sbb
in
xlat
mov
js
mov
lret
jbe
jo
sub
mov
fldl
mov
lcall
icebp
test
mov
out
sbb
cmpsb
cmpb
xchg
sbb
mov
int3
mov
xor
aam
dec
lcall
ret
xor
mov
mov
mov
addl
sbbb
adc
lahf
lods
and
repnz
scas
bound
cmc
jae
push
inc
sbb
mov
aaa
inc
subb
sub
push
loope
sbbb
add
fnstcw
clc
mov
inc
and
mov
aaa
mov
hlt
cmpb
in
xor
loope
sarl
adc
push
push
xchg
adc
jb
jecxz
push
jg
mov
mov
lret
cs
aaa
fbstp
xchg
adc
shll
fisubrl
dec
into
lods
jg
lea
push
repnz
orb
push
fisttpll
sbb
aad
stos
repz
mov
testb
clc
push
ret
orb
out
jo
xchg
bound
addb
shl
add
jg
andb
loopne
xorb
pop
push
sbbb
xor
sub
jae
dec
enter
imul
ret
jmp
test
ljmp
or
pop
xlat
jbe
inc
gs
mov
pop
subb
jnp
rcr
cmpsl
popf
dec
cmpsb
xchg
xor
lea
xchg
add
out
sub
xchg
scas
inc
insb
xor
mov
jae
sub
cmp
xchg
xor
je
push
pop
lahf
das
adc
inc
jns
or
mov
jbe
subb
int3
test
rcll
rclb
lcall
stos
fcompl
stc
mov
jae
or
ss
jle
rol
pop
and
mov
jmp
mov
push
mov
mov
stos
jge
adc
subb
push
ja
push
sub
jle
mov
sbb
xor
cmpsl
jns
push
aas
mov
ret
push
call
int
les
cld
cmp
lret
aad
xchg
insl
je
sub
cmpsl
xor
call
adc
enter
loopne
bound
subb
xor
xor
sbb
dec
les
icebp
pop
dec
scas
sbb
bound
insb
clc
ror
loop
mov
push
adc
push
loop
fmul
testb
mov
cmp
daa
dec
loopne
imul
in
sbb
into
cld
jge
adc
outsb
jne
out
mull
or
mov
or
xchg
outsl
aad
bound
sbb
push
pop
lods
xchg
xlat
es
add
popa
fs
iret
and
dec
mov
add
inc
jle
mov
jmp
orb
orb
imul
push
push
out
jg
jp,pt
aaa
notl
cltd
ljmp
push
lret
push
fwait
fs
or
add
les
push
lret
cmpb
or
mov
lahf
cmp
lret
out
jge
jns
push
fiadds
sbb
sbb
nop
fadd
movsl
shlb
movsb
xchg
or
jno
test
cmpb
xorb
xlat
adc
mov
mov
cwtl
cmpsl
push
call
arpl
pushf
jle
adc
mov
movb
push
add
out
stc
orb
outsl
stos
aad
sub
popa
idivb
popf
clc
mov
add
shl
scas
jg
push
mov
lods
jecxz
adc
jno
sub
pop
add
mov
lret
dec
jb
bound
adc
je
mov
addb
fcmovu
pop
xchg
rol
pop
aam
fisttps
jbe
or
sbbb
add
ljmp
mov
orb
or
jle
testb
orl
or
stc
orb
xchg
jo
scas
lods
xlat
xor
mov
fisubrl
cmp
and
pop
mov
outsb
inc
cltd
sub
xor
xor
imul
push
arpl
sbbl
sub
xchg
xchg
jae
xchg
adc
sub
lahf
cmp
sub
aas
es
pushf
dec
jnp
mov
xor
ja
jae
mov
pop
push
insl
roll
and
movb
in
and
xor
inc
mov
orb
jge
repz
repnz
jns
cmp
and
shl
push
sti
and
out
call
stc
xchg
into
movsb
jg
and
in
push
pop
loopne
adc
mov
pop
and
mov
xlat
fstp
inc
loop
test
adc
sub
xor
ss
inc
popa
mov
and
rclb
shr
lahf
outsl
scas
dec
push
xchg
inc
xor
mov
daa
jecxz
outsl
out
jle
jbe
sti
ss
aad
push
fists
and
sub
mov
or
pusha
jg
sbb
loope
leave
push
out
rcll
sub
inc
push
mov
sbb
test
lret
sbb
outsl
lcall
pop
dec
adc
jle
lret
xchg
aaa
pop
cmp
xor
xor
in
xchg
test
jmp
cmpsb
les
xor
jae
xchg
ljmp
xchg
mov
push
stos
je
iret
mov
lcall
sub
jbe
dec
xor
movsb
xchg
mov
xchg
mov
jbe
stc
add
jp
shll
in
or
push
movsl
xchg
inc
mov
adc
outsl
enter
cmp
jl
jae
mov
cld
sub
mov
and
vmovaps
jp
in
cmp
andb
xor
enter
mov
pop
ja
adc
dec
in
add
repnz
cwtl
sub
mov
lret
lds
scas
mov
xchg
in
xorb
enter
push
push
and
bound
cmp
je
insl
aaa
cld
xchg
cs
mov
pop
and
into
nop
mov
xchg
fmull
rolb
std
mov
xchg
add
and
and
cmp
add
mov
sub
xchg
aam
dec
ljmp
inc
add
add
push
lea
int
inc
loopne
add
int3
or
imul
in
addl
cwtl
aam
imul
sbb
sub
fs
xchg
mov
mov
add
shlb
pop
jl
jl
testb
or
add
xchg
cmp
dec
jle
pop
lcall
lcall
lods
sbb
xchg
xor
cmc
and
dec
pushf
into
adc
pop
xor
lahf
xor
aaa
mov
sar
push
out
mov
sbb
sbb
xor
mov
enter
pop
push
sub
cli
pop
ja
xchg
insb
repnz
lods
stos
sahf
xlat
mov
lea
or
push
sbb
xchg
push
cmp
test
jp
mov
inc
mov
xchg
les
xor
push
mov
iret
push
in
xchg
mov
sbb
roll
jae
mov
push
addr16
enter
sti
movsb
pushf
je
stos
jg
les
pop
cltd
test
xchg
imull
sub
icebp
add
lods
mov
or
shrb
mov
mov
lock
mov
mov
daa
inc
divl
subb
mov
add
inc
mov
jecxz
inc
jae
sti
xchg
stos
cmpsb
daa
mov
mov
out
test
int
popf
fistpll
add
pop
test
fistl
add
jnp
xchg
add
idivb
fisttpll
sbb
push
inc
dec
xchg
orb
inc
clc
jp
and
cmp
sbb
insb
mov
sti
repnz
cmc
add
xor
cs
dec
out
cld
inc
icebp
cmp
jno
sahf
les
inc
fildl
cmp
dec
orb
std
shlb
arpl
inc
xor
and
jg
imul
xor
incb
lret
xor
add
mov
dec
and
pop
mov
jnp
sahf
pop
sub
sarb
jo
lods
sbb
ret
movsl
ret
mov
pusha
cld
flds
imul
mov
xor
scas
jg
xor
cmp
jo
inc
mov
add
test
cli
loopne
bound
mov
gs
mov
adc
xor
push
fs
xrelease
mov
jae
negl
int
push
jae
fisubrl
mov
dec
rcrb
and
outsl
xchg
xlat
jnp
adc
mov
inc
xchg
shlb
movb
mov
adc
rorl
xor
popa
mov
mov
pop
addb
jg
ss
sbbb
mov
adc
insb
add
and
pop
jg
inc
pushf
scas
sbb
cmp
rcr
rorb
mov
incl
add
dec
lea
or
loopne
popa
sbb
inc
cmpsl
ja
stc
dec
fidivrl
subb
lcall
ret
mov
xor
push
push
xor
std
mov
loope
arpl
out
lea
pushf
adcl
fcomps
sub
bound
fildll
xchg
leave
xorl
scas
ret
test
add
shl
cmp
les
dec
lcall
fnsave
xor
fbstp
jae
jo
roll
dec
xor
mov
call
das
enter
lret
push
in
sbb
andl
mov
cld
push
or
inc
cmpb
lock
cltd
cmp
mov
pop
jg
sub
sarl
cmpsb
push
int3
add
xchg
stos
add
out
jnp
and
loopne
mov
movsb
jns
dec
imul
pop
fstpt
sbbb
out
sbb
test
incb
fs
or
inc
xor
or
fs
std
adcb
add
cmpsl
and
sbbb
inc
dec
filds
jge
sti
jno
jo
sub
pop
mov
xchg
mov
push
pop
adcl
aas
test
dec
add
mov
mov
aad
or
inc
or
xor
rolb
pcmpeqb
andb
mov
dec
leave
loopne
jnp
cli
push
popa
mov
movsl
icebp
pop
rcrb
daa
cmpb
loope
mov
int3
in
aaa
fucomi
orb
loop
outsb
mov
cwtl
std
ja
cmp
or
hlt
cmpsb
testb
or
and
les
xchg
adc
shll
sahf
je
or
jmp
sub
adc
rcrb
lods
inc
out
add
inc
roll
inc
andb
movsl
mov
jmp
jne
clc
sub
pop
popa
sbbb
adc
xor
jg
or
scas
fcos
fidivrl
mov
lret
imul
push
arpl
insl
in
jae
inc
loop
mov
jecxz
sub
ret
outsl
lods
shll
add
cmpl
xlat
add
pop
aaa
mov
jle
stc
jge
jne
or
ret
jno
push
mov
or
and
xor
sbb
mov
orb
jno
shlb
in
sbb
adc
rorb
lahf
mov
inc
cli
lds
sub
stos
pop
push
sbb
xchg
and
sbb
mov
sahf
rolb
call
push
jns
pushf
jne
push
addl
addb
leave
lahf
sub
cmp
outsl
cltd
pushf
cmpb
sbb
inc
jno
test
jnp
movsb
fnstcw
mov
subb
add
xchg
lret
pushf
xor
test
pop
arpl
lahf
and
fadd
popl
adc
lock
adc
subl
pop
mov
and
das
fwait
jns
fisttpl
push
add
inc
add
jo
inc
pop
inc
testl
pushf
scas
push
adc
mov
mov
jnp
adc
fstl
xor
mov
xchg
mov
cmpsl
test
pop
rcll
cmpb
and
out
sahf
in
jo,pt
or
mov
sbb
sub
bnd
sahf
dec
lahf
pushf
ret
xchg
loop
and
adc
repnz
je
andb
sahf
jo
repz
movsb
outsb
arpl
scas
jnp
repnz
push
fsubrp
adc
sub
push
imul
mov
cmp
shlb
lods
mov
mov
adc
icebp
pop
fmulp
push
dec
sbbb
inc
jge
faddl
pop
gs
add
or
jae
sahf
xor
add
jb
and
mov
inc
adcl
mov
pop
adc
lock
lea
pop
subb
inc
ret
ret
xchg
or
mov
aad
mov
orb
adcb
push
cmc
add
inc
xor
sbb
lock
stos
adc
cmc
jp
or
addb
pop
into
add
jbe
data16
push
ret
jg
adc
mov
das
cmp
pop
push
loope
push
xor
inc
ljmp
flds
ud1
xchg
orb
lds
mov
les
jae
subb
fisubl
push
es
mov
xorb
or
inc
flds
sbb
xchg
adc
mov
aad
push
cmpsl
subb
pop
movsl
sbb
push
das
movsb
cli
mov
mov
stc
dec
mov
icebp
mov
push
jno
fbld
testb
xor
xorb
inc
mov
std
and
call
test
inc
popa
stos
mov
mov
movsl
mov
ret
rclb
sub
sub
es
out
mov
ds
add
pushf
adc
mov
jg
push
adc
jbe
hlt
test
fmull
in
insb
cmp
jnp
shll
cmpb
pop
inc
imul
hlt
ja
cmp
insl
push
xor
mov
fadds
xchg
sarb
add
rorl
popw
stos
push
mov
dec
addr16
in
jg
lret
decl
repz
inc
cmp
jns
sarl
add
xchg
frstor
andb
repnz
gs
inc
data16
lret
cmpl
jbe
ret
and
ja
andb
ror
mov
or
jb
gs
jnp
inc
das
inc
flds
sub
and
sbb
add
pop
pop
mov
jo
inc
ds
addl
mov
pusha
cmp
or
xorb
mov
and
test
xor
fwait
cmc
dec
or
sub
call
fstpl
mov
lret
add
scas
aam
pop
loope
movsb
adc
leave
or
test
rcrb
xchg
jmp
addb
dec
pop
xchg
xor
out
sbb
outsl
lret
add
test
push
lods
xchg
pop
add
outsb
sub
stos
add
ja
lret
mov
ret
add
jmp
stos
call
push
mov
aaa
push
push
mov
insb
xor
sub
fldt
ja
sub
movsl
pop
xchg
and
adc
daa
imul
jo
pop
gs
adc
rcrl
cmp
testl
iret
jno
mov
cmc
cmp
mov
mov
pop
testl
xlat
adc
or
in
adc
lcall
es
sbb
and
mov
adc
test
pop
xchg
popf
add
mov
lods
push
scas
mov
jbe
lret
ret
cmp
addr16
add
push
xor
mov
enterw
fwait
and
jns
lods
orl
and
push
mov
jecxz
dec
dec
rol
test
dec
test
fdivrs
shll
push
rcrb
insl
test
vandps
add
mov
cmpl
dec
cmp
mov
in
jge
stc
std
adc
lcall
jbe
ljmp
divb
xor
dec
inc
mov
or
rcl
add
sbb
ja
dec
jb
subb
push
adc
js
in
outsl
lock
pusha
imul
push
push
call
bound
xchg
lret
test
pop
adc
adc
push
orl
push
hlt
jecxz
cmp
push
mov
jb
testl
mov
and
nop
push
insb
cltd
lcall
pop
roll
aas
call
leave
ljmp
loop
jle
xchg
mov
not
cltd
dec
stos
rolb
add
test
xchg
sbb
dec
mov
jl
in
and
sbb
leave
in
and
jmp
lea
xchg
push
ja
jno
xlat
mov
jne
mov
fisttpll
mov
push
xchg
inc
loop
add
loope
ss
xor
test
test
pushl
int3
adc
cli
sbb
mov
adc
add
push
adc
cmpsb
dec
add
sahf
jle
and
icebp
mov
mov
pop
jne
cmpsl
push
out
js
mov
mov
jecxz
mov
mov
jg
add
pop
pop
xor
dec
in
or
push
nop
fs
jae
cmc
ds
xor
test
fnstcw
shrb
and
cmc
adc
xor
iret
inc
mov
jne
mov
jnp
out
or
mov
mov
lock
ret
je
ljmp
das
jge
push
sub
or
push
lods
inc
mov
push
jl
jae
mov
cmp
xchg
pop
mov
lds
and
lds
cltd
fstpl
mov
in
xchg
shr
and
sbb
stos
in
decl
push
repnz
in
cmp
aad
adc
push
je
ljmp
adc
push
push
aad
xchg
in
repnz
in
test
lock
mov
data16
sti
sub
ret
adc
repz
mov
mov
dec
ljmp
pop
fildl
jmp
jl
jns
bound
cmpb
mov
sbbb
push
lahf
lock
inc
mov
cmp
sub
das
push
stc
out
and
adcb
sti
iret
cmpsl
add
aad
arpl
cmpsb
push
mov
sbb
mov
sbb
data16
sbb
andb
scas
dec
mov
mov
mov
into
ret
jnp
and
sti
adc
xchg
adcb
xor
mov
cmc
mov
adcb
vminsd
add
lcall
mov
mov
cmpsb
add
subb
ret
xchg
jl
mov
and
push
inc
mov
add
add
add
inc
lea
adc
data16
stos
jae
hlt
pop
xor
testb
movaps
insl
movsl
lahf
cld
dec
and
sub
dec
pop
jg
loope
sahf
inc
pop
mov
cli
pushf
adc
xorb
jnp
push
test
jg
dec
xchg
dec
add
sbb
shr
cmpl
and
xchg
jns
push
ret
ret
jp
aaa
inc
sbb
xlat
sub
push
subb
ja
jb
dec
xchg
cmpb
push
std
aas
cltd
mov
cmpb
and
icebp
rcr
andb
sbb
xorb
insb
adc
fs
repz
dec
jg
daa
js
je
mov
lock
popf
inc
or
add
loop
mov
dec
imul
lahf
push
aad
mov
test
sbb
xchg
pop
inc
dec
pop
loope
xor
mulb
frstor
jae
cmpsb
bound
xchg
cmp
add
jg
cmp
or
fwait
cmc
xorb
pushf
pop
xchg
cmp
loope
cmp
and
cmp
lock
dec
xchg
je
mov
xlat
and
loopne
sub
ret
mov
andb
mov
xchg
and
jo
cmp
pusha
cmpb
xor
stos
sarb
fiaddl
lcall
mov
pop
ja
adc
jo
adc
mov
notl
jmp
jg
data16
fisttpl
pop
add
orb
dec
sbb
int
adc
cmpb
dec
jmp
and
lahf
repz
pop
test
jno
in
daa
jb
mov
adc
orb
fiadds
dec
fs
add
je
mov
imul
inc
cwtl
jae
das
pushf
sbb
rorb
test
nop
and
pop
out
pop
test
dec
mov
pusha
ljmp
jno
into
aas
dec
dec
sbbl
jmp
mov
pop
ret
aam
les
push
inc
cmp
subb
in
sbb
iret
orb
fwait
out
ret
pop
ss
sbbb
icebp
xchg
lods
movsl
stos
push
inc
mov
add
sbb
rcll
imul
jae
loop
push
popa
xchg
orb
inc
fsts
in
out
xchg
leave
stc
jg
xchg
xchg
ss
mov
xchg
dec
int
enter
sub
push
imul
lea
push
jno
imul
push
das
arpl
dec
lahf
nop
sar
xorb
pop
mov
rorl
push
roll
mov
sub
hlt
jp
inc
loopne
mov
adc
ss
pop
andb
push
test
push
inc
pop
out
ret
insl
inc
out
fs
push
xchg
in
add
mov
mov
or
les
popa
xlat
xorb
mov
push
addl
sahf
sub
cs
push
std
in
call
sbb
decb
mov
flds
jecxz
test
xor
repz
dec
jle
mov
adcb
pop
lods
cmpb
mov
popa
orb
add
out
inc
int
std
cmpl
rorl
xchg
fdivs
insb
xor
mov
out
ja
xchg
and
mov
pop
lock
inc
mov
andl
pop
mov
jnp
lock
sbb
scas
push
add
adc
lcall
subl
push
push
mov
fcomps
jo
xchg
addl
jle
hlt
xor
fwait
cmpsb
insb
dec
jecxz
outsb
and
mov
cmc
mov
cmpb
int3
out
int
and
cltd
jne
inc
or
mov
cmp
lret
push
mov
sahf
and
add
pop
data16
xchg
aas
mov
icebp
push
xchg
jg
xor
leave
insb
cmp
gs
cld
in
aam
mov
mov
pop
adcb
inc
enter
stos
scas
and
mov
jg
pop
leave
dec
pop
loop
into
dec
add
add
popl
cltd
jnp
cmp
addr16
xor
mov
pop
mov
lret
sub
adc
inc
xchg
dec
xchg
fdivrs
lock
mov
fcmovb
sti
pop
into
fistpl
in
mov
fsubrl
stos
jp
lods
enter
jno
mov
mov
lds
mov
mov
push
adc
xchg
push
mov
jns
fs
mov
mov
test
pop
imull
rcrl
pop
push
jbe
inc
push
cmp
fadds
addb
or
ja
ss
mov
hlt
jae
es
push
add
popf
jmp
mov
lahf
je
imul
push
testb
int
movsb
andb
xchg
adc
aam
mov
or
pop
popa
sarb
jg
cltd
aas
ret
xor
cli
jae
cmp
addb
mov
out
sub
dec
mov
xor
inc
sbb
xor
xchg
or
daa
fisttpl
inc
xorb
inc
arpl
jne
clc
push
jnp
pop
mov
mov
out
and
out
inc
pop
movsl
add
jne
xchg
popl
iret
repnz
add
or
push
push
sbb
mov
xor
in
les
addb
push
out
dec
cmp
subb
push
sub
data16
push
mov
lods
inc
mov
subb
cwtl
mov
sbb
cltd
fcmovne
outsl
bound
jge
push
push
aas
ret
aad
orb
divl
ja
sbb
lret
dec
shll
sbb
ficomps
icebp
mov
sbbl
mov
cmpsb
addb
aaa
mov
pop
push
sar
mov
lods
test
int
cmp
jg
mov
cli
inc
fldenv
hlt
add
sub
cmpb
ss
dec
or
adc
dec
xchg
inc
in
fldl
xchg
out
inc
mov
sub
fbld
cs
sub
pushf
fldl
repnz
insb
mov
lcall
mov
adcb
pop
mov
adc
shlb
incl
pop
push
testb
add
push
cltd
dec
or
jno
icebp
cmp
daa
inc
inc
push
add
mov
jnp
add
outsl
bnd
ret
jae
stos
xchg
iret
push
inc
nop
inc
lret
roll
loopne
jne
or
aaa
lds
outsl
adcl
test
scas
pushf
push
inc
nop
faddl
xor
or
xchg
push
jle
pushf
movsb
andb
cmpsb
rcr
push
stos
out
xorb
stc
dec
pop
les
sahf
jg
call
add
xchg
xchg
mov
in
andl
fcomps
pop
and
lods
xorb
pop
inc
xor
cmp
fwait
stos
add
fs
addl
mov
int
je
adc
mov
pop
adc
mov
jb
idivl
ret
push
pop
inc
movmskps
xchg
adcb
mulb
fildll
xchg
pop
mov
add
xchg
andl
or
pop
addl
push
daa
jbe
push
mov
out
adcb
bound
pop
mov
push
lret
addl
jae
inc
cmpb
insb
or
pop
cmp
subb
push
cmc
aaa
jge
jge
out
push
test
or
adc
push
jno
jne
popa
mov
cltd
or
jge
pop
xchg
rclb
mov
sbb
cmp
loop
roll
imull
orl
jle
fbstp
add
push
push
data16
inc
xor
ret
aaa
cmp
fistl
inc
mov
mov
cli
lahf
sub
mov
cmp
repnz
adc
addb
sbb
insl
repz
shll
mov
and
add
das
outsl
push
movsl
mov
xlat
ret
push
out
xor
enter
and
xchg
xor
das
sub
inc
push
scas
inc
sub
je
ja
push
test
xor
inc
cmc
out
mov
rcr
mov
in
lods
hlt
cli
fisttpll
ja
rclb
ds
mov
popa
les
lds
inc
mov
daa
rclb
jae
ret
cld
push
xlat
jmp
cmpsl
dec
jle
shlb
cwtl
inc
arpl
mov
jmp
jp
jb
arpl
jle
xor
test
lret
cmp
stc
fwait
test
imul
lcall
out
or
mov
cmpxchg
loopne
inc
das
pushf
add
adc
stc
push
lock
push
lcall
sbb
adc
jno
in
mov
ret
cltd
jo
std
jle
popf
mov
add
js
add
jle
xor
test
add
mov
xchg
pop
dec
and
push
sub
loop
or
shlb
adc
lcall
jp
jge
leave
lods
aaa
andb
inc
inc
dec
enter
mov
shll
adc
ja
call
pusha
sbb
ljmp
lock
cwtl
dec
fists
lds
es
mov
adc
xor
idivl
xlat
outsb
je
xchg
jmp
pop
lcall
cs
dec
fwait
sub
pop
fidivs
cltd
pop
add
ljmp
insb
sub
push
adc
clc
xlat
xchg
mov
mov
cltd
push
sbb
sub
push
scas
leave
sub
shlb
dec
insl
xorl
enter
mov
cmp
sbb
sub
and
cli
dec
push
jne
mov
or
cmp
insb
mov
and
mov
ret
sub
mov
inc
das
jmp
cmpsl
stc
das
push
repnz
jo
add
mov
sub
pop
loop
or
subl
inc
push
cli
outsb
hlt
loopne
xchg
lods
pop
adc
rcr
out
repnz
ds
js
out
mov
movsb
les
push
enter
icebp
mov
stos
inc
mov
xlat
pusha
mov
cmpb
les
and
add
add
inc
push
sbb
ret
jge
pop
and
mov
sbb
lret
hlt
imul
jecxz
mov
adc
leavew
je
push
pop
xor
push
test
cltd
fcompp
mov
xor
hlt
and
cli
xchg
xor
push
mov
ficoml
mov
xor
jns
jecxz
mov
test
filds
dec
sbb
lcall
jl
leave
mov
push
sub
nop
aaa
stc
adc
ds
ljmp
xchg
loope
inc
dec
stos
fninit
cs
dec
das
sbb
push
mov
and
jae
sarl
shrl
insl
jmp
subb
push
jge
pusha
adc
pop
and
loop
lcall
repz
sub
popa
inc
shll
sbb
lahf
ja
cmp
xor
shlb
and
js
cltd
and
sbb
xchg
dec
scas
es
inc
xor
pushf
clc
push
add
mov
and
movsb
jne
hlt
sti
scas
icebp
cli
testl
lcall
mov
inc
mov
jbe
mov
ss
sub
test
in
and
mov
sub
push
and
jp
mov
fimull
push
pop
fxch
add
pop
mov
nop
dec
lock
sbbb
es
subb
call
mov
sti
rorl
xorb
jnp
jecxz
mov
fisttps
mov
ljmp
insl
mov
or
jbe
sub
movsb
ret
loopne
adc
push
xchg
frstor
fldl
jge
lods
rcll
lods
sahf
loope
fiaddl
sub
stos
dec
push
in
add
sbb
or
out
loop
push
lds
xor
lods
int3
xchg
imul
and
repnz
jge
cltd
pusha
sbb
xchg
jge
adc
pop
xchg
std
out
pop
jge
les
out
adcb
jbe
int
pop
out
xchg
pop
lret
bound
adc
mov
push
sub
cmp
lcall
cltd
sbb
and
mov
lret
xlat
mov
mov
cwtl
stc
mov
subl
mov
sbb
notl
inc
fistpll
cmp
rcr
mov
jbe
push
xchg
push
xchg
push
push
js
cmpsb
clc
leave
push
pop
pop
or
cld
inc
mov
ljmp
jns
std
cmp
xchg
cld
sbbl
ret
fidivs
data16
jl
bound
sbb
aad
mov
dec
lcall
clc
icebp
aas
lods
pop
and
pop
jnp
jge
push
mov
in
mov
mov
pop
inc
ret
repnz
enter
ds
aam
scas
lds
cltd
cld
sti
shrb
cs
cli
inc
xchg
and
repnz
mov
scas
jbe
inc
push
or
iret
sbb
clc
mov
xorl
sub
jnp
scas
jmp
lcall
test
shrb
xlat
dec
push
xor
jnp
xor
push
lcall
add
adc
int3
aam
pushw
dec
mov
push
adc
rorl
out
xchg
mov
xchg
shlb
xor
enter
push
lods
fidivs
lcall
mov
jnp
or
mov
jnp
ret
dec
pusha
je
lock
pop
mov
int3
negl
jo
sbb
outsl
fnsave
adc
lcall
imul
cli
dec
jb
dec
mov
jbe
mov
pop
cli
lea
in
je
pusha
lcall
cmp
shll
add
inc
arpl
pop
inc
fsubrs
aam
or
les
jge
jmp
dec
outsl
outsb
mov
sub
cmp
lock
sub
sbb
fsts
jecxz
roll
stos
push
mov
outsl
cmp
orb
or
pushf
nop
or
pop
mov
xor
enter
push
in
jg
ds
adcb
in
dec
fstps
and
or
lcall
imull
add
mov
xchg
lods
aaa
testb
call
rclb
pushl
mov
mov
incb
bound
ret
mov
mov
xorb
dec
pop
mov
fldenv
mov
sbb
cmp
subb
adc
out
cmp
das
cmp
inc
stos
pop
loop
add
xor
or
shll
insb
fbstp
sbbb
xchg
cli
push
and
jmp
mov
std
inc
xorb
loope,pn
in
lahf
orb
xchg
pushf
xorb
int
sbbb
es
add
mov
repz
cmp
fwait
hlt
xchg
xor
insl
cmpb
push
fiaddl
inc
mov
or
std
dec
jge
repnz
pop
inc
and
pushf
movswl
pop
outsl
inc
out
and
imul
jge
test
test
inc
dec
sub
inc
or
inc
dec
fiadds
jge
in
cmpsl
or
pop
mov
sub
je
repnz
lahf
lcall
mov
arpl
lret
pop
les
lock
fistpll
push
mov
add
test
divb
cmp
jmp
mov
test
ret
sbb
add
and
xchg
call
addr16
addb
rolb
cwtl
xor
hlt
xlat
push
call
push
imull
cmc
int
cmp
mov
pop
xchg
sub
jae
daa
lods
insl
mov
movsb
sbbb
sbb
or
xchg
addr16
push
jg
push
out
jnp
movl
data16
stos
ret
inc
test
jg
call
mov
rolb
into
cmpsl
dec
jge
iret
xchg
xor
xor
rolb
scas
call
dec
mov
pop
sahf
subb
add
cltd
les
nop
iret
jnp
mov
xor
mov
xor
jns
roll
mov
movsb
sbb
mov
dec
imul
imulb
scas
arpl
test
mov
push
push
lds
popa
cmc
mov
or
lahf
sahf
push
bound
sub
xor
push
gs
testl
xlat
pop
in
jecxz
add
and
sub
push
sbbb
pop
jnp
lret
insb
jno
es
fidivrl
add
jl
inc
sub
mov
sahf
sub
pop
xor
dec
adc
add
cltd
and
adcb
adc
imul
shlb
push
shrl
push
mov
push
int
ds
cmp
rep
loop
inc
scas
cmpsb
jne
cld
cmp
in
out
and
add
dec
jnp
jnp
push
scas
out
and
outsl
mov
cmp
aad
xor
fiaddl
add
lar
dec
faddp
subb
imul
jmp
add
stos
xorb
dec
movsb
cltd
mov
icebp
sahf
inc
sbb
and
shrb
mov
xchg
stc
addb
mov
fsub
add
sub
movsb
and
dec
mov
mov
popf
dec
xchg
xor
xor
insl
sbb
pop
fildll
mov
cmp
or
pop
inc
cmp
repz
add
icebp
andb
fdivrs
mov
pop
xchg
aam
mov
add
ret
daa
jbe
data16
push
mov
add
pop
shrl
cmp
ret
in
fs
sbbb
sti
rolb
or
xchg
push
je
jecxz
or
sti
icebp
mov
jmp
push
add
sub
pop
xor
cmpb
call
pop
ja
sub
movsl
xor
or
stc
sub
out
pop
popf
mov
jnp
dec
test
movsl
loop
jle
xchg
jae
leave
dec
xchg
and
cli
cmp
sbbb
movsb
stc
scas
into
mov
jmp
jae
in
mov
sahf
jge
and
pop
sbbl
leave
jg
mov
cmp
pop
ret
sbbb
mov
jge
pusha
push
ret
aaa
rolb
ja
icebp
ja
dec
dec
sbb
je
push
lods
cmp
orb
inc
mov
mov
lahf
lcall
pop
cld
push
mov
mov
cmp
sub
sbbb
vmread
cmp
jbe
ja
dec
push
daa
sahf
js
sub
in
jae
aad
push
mov
dec
ss
fs
repnz
sar
sub
addl
addl
xor
je
in
push
pop
ss
mov
sahf
inc
push
aad
popf
fisttpll
insl
fistpl
fstps
mov
jg
insb
adcb
int
out
addb
xchg
xor
insl
inc
mov
adc
xorb
cmp
lds
subb
stos
ret
xchg
pusha
shl
mov
daa
jne
jae
mov
mov
mov
stos
mov
popf
jg
sarl
popa
aas
jb
inc
or
mov
jmp
aam
xchg
testb
test
add
mov
jle
cwtl
pop
sbbl
xchg
xor
enter
push
pop
fadds
ret
pop
dec
aam
aaa
out
mov
dec
cmpb
pusha
hlt
push
xor
or
pushw
ret
sbb
pop
mov
xor
bound
adc
mov
cmp
out
jg
fcmovnu
mov
nop
in
ud0
std
testb
cli
xchg
cs
loop
sbb
xchg
and
push
lds
mov
addb
cmp
push
cmp
push
xchg
ljmp
jns
xor
loope
adc
adc
and
and
inc
xor
or
cmp
orb
jle
lret
pop
std
cmp
dec
ds
sti
sti
fstpl
rolb
ret
cmp
stos
cmp
mov
shll
sbbb
mov
ja
jbe
jne
fwait
jo
pushf
lods
adc
dec
sarl
cmp
bound
xchg
adcb
aas
imul
pushf
rcrl
inc
popf
dec
adc
mov
pop
and
jno
iret
dec
cli
sbb
js
scas
mov
rcrb
int3
sarl
mov
cltd
testb
outsl
push
incl
shr
test
mov
repnz
lret
ret
es
stc
sbbb
jns
jb
inc
cwtl
cli
adcl
inc
push
sbb
or
fs
sub
push
inc
mov
push
aaa
jae
rolb
xor
xchg
subl
lret
out
inc
addb
dec
mov
roll
aaa
leave
repnz
je,pn
sbb
push
iret
cmpb
lods
into
jno
sti
inc
test
push
add
outsl
fmull
and
fisubs
mov
stc
cmpsl
xorb
inc
xor
repz
data16
add
scas
push
ds
pop
subps
addr16
xor
pop
jecxz
sub
sub
sub
mov
roll
lahf
incb
jle
fmull
lea
pop
mov
outsb
out
xorb
cmpsb
and
or
lcall
jge
loop
or
movsl
sbb
and
orb
iret
sub
jmp
and
sbb
adc
lods
xchg
in
sbb
sub
adc
xor
in
cmpsl
push
cltd
sub
adcl
into
push
pusha
add
add
stc
lock
and
cli
push
xchg
notl
test
cltd
or
in
test
pop
je
cmc
movsb
or
frstor
jle
std
xchg
aam
enter
insl
xor
movsl
lcall
jle
in
rorl
rcr
out
xchg
shlb
sub
repnz
movsl
sti
sbb
movd
lcall
icebp
fidivrl
inc
sbb
add
repnz
int
lds
pop
sub
ret
or
jne
push
add
movsb
jnp
sahf
les
shr
test
out
fstps
push
inc
mov
pop
push
cmp
push
inc
sahf
jo
push
pop
push
sub
ja
lea
lcall
insb
sbb
inc
dec
rcr
inc
andl
inc
lcall
lcall
cltd
pop
insl
cmp
insl
insb
loope
adc
xchg
jne
mov
test
lcall
mov
test
cwtl
mov
inc
cmp
jle
ret
jo
sahf
aam
xlat
or
daa
jmp
lcall
xchg
and
jp
mov
xorb
xchg
shrb
lcall
es
outsl
sub
inc
aad
xor
pop
mov
sub
das
add
or
fisubrs
jae
jecxz
jmp
daa
mov
mov
cltd
aaa
push
clc
aad
pop
push
aam
and
sbb
adc
pop
jae
cmp
add
leave
push
push
lods
sahf
dec
mov
jne
lds
scas
cmc
inc
jecxz
loop
lock
jo
outsl
xor
pusha
mov
stc
loop
and
shrb
cmp
jae
xchg
sub
mov
cltd
add
jb
lcall
stc
cmp
sbb
ret
cltd
ljmp
lcall
arpl
aad
xchg
xlat
cli
xor
sub
pop
xchg
hlt
stc
in
fisubrl
xor
cltd
in
cli
jl
and
jno
adcl
mov
pop
jbe
mov
pusha
sbb
lret
jbe
lcall
sub
jg
cli
stos
lcall
out
aam
pop
scas
add
jb
pushf
pushf
push
add
cmp
repnz
lods
test
pop
jecxz
imul
clc
mov
int
pushf
cmp
jns
sub
lcall
mov
stos
sbbl
ret
out
dec
xchg
mov
mov
add
cli
pop
lea
mov
and
and
jo
mov
add
push
lods
pushf
dec
pop
cld
adc
lock
dec
lds
loope
cltd
sub
loop
sti
adc
in
and
popa
mov
icebp
addr16
inc
fnstcw
and
in
cmp
cmp
mov
gs
out
repnz
sub
fildll
es
ret
push
pusha
shlb
jno
repnz
shlb
sub
clc
mov
out
mov
lcall
cli
pusha
push
out
jle
scas
jae
mov
ja
enter
cs
sub
cmp
movb
mov
aaa
push
sarl
addr16
pop
jb
rorl
fisubl
jecxz
sub
fbld
inc
xlat
sub
mov
cltd
push
std
lods
push
or
mov
push
sub
pop
mov
sub
mov
ss
inc
adc
push
out
loop
mov
not
aad
xor
adc
pop
mov
icebp
xchg
imul
inc
jns
mov
test
shr
sbb
les
dec
mov
pop
hlt
aaa
sbb
xchg
addr16
push
mov
dec
cmp
nop
mov
aam
adc
push
pop
jnp,pt
jae
jecxz
outsb
and
pop
fmul
cmp
cmc
xor
ret
add
aad
mov
cmp
xchg
add
orb
iret
outsl
add
add
lea
aas
hlt
es
mov
mov
xchg
xchg
dec
push
xchg
clc
fwait
cmpsl
ret
sbb
pop
lods
or
into
lcall
pop
xor
clc
jb
scas
popf
in
outsb
enter
sahf
aaa
int
add
ret
cmc
jb
or
sub
push
ds
lar
xor
cltd
movsb
jo
sbb
add
and
mov
hlt
push
sub
repnz
inc
scas
mov
nopl
jg
repnz
test
cmp
or
pop
and
cmp
cltd
dec
fnstcw
mov
lods
jns
and
xchg
outsl
repnz
sbb
ret
lods
dec
jno
push
cmp
shll
sahf
xchg
das
icebp
xchg
insb
out
xchg
movsl
push
fiaddl
add
jns
cs
imul
rcr
lds
pop
and
mov
out
xchg
jl
cmpsl
fldenv
cltd
sub
stos
add
nop
data16
jbe
mov
sbb
sbb
loopne
jle
jge
mov
pop
cltd
mov
daa
cmc
cmp
jge
lock
xchg
jle
popf
fwait
sbb
push
and
pop
add
mov
add
or
mov
mov
xchg
jns
imul
lods
testb
ficompl
mov
sbb
inc
push
ret
dec
sbb
test
jo
hlt
dec
pop
enter
cltd
jae
mov
sbb
imul
outsl
fcmovnbe
das
out
std
into
aad
adc
cmp
and
mov
ret
jae
inc
jns
mov
mov
aad
jecxz
sub
and
shl
cmp
mov
mov
mov
and
xchg
dec
jge
xchg
push
aaa
out
push
ffree
cmp
dec
fs
sbb
nop
dec
clc
jp
xor
scas
test
insl
push
js
dec
cltd
ja
sbb
pop
push
add
lods
lret
ret
outsb
lock
movsl
push
adc
xchg
push
imul
pop
push
inc
cmp
xchg
dec
out
gs
mov
sub
js
inc
faddl
pushf
sub
xor
ret
or
mov
cmc
or
shl
cli
iret
sub
and
aaa
fstpl
mov
dec
cmpsb
out
inc
add
or
into
pop
addb
push
sub
test
into
hlt
adcb
jmp
cwtl
sub
mov
mov
gs
nop
sub
xor
enter
pop
cmpb
cmp
addl
and
lret
orb
add
je
inc
jg
add
cli
dec
sbb
cmpb
ret
or
push
pop
mov
sarb
and
insl
xor
icebp
sbb
inc
jecxz
repz
or
sub
movsl
std
adc
cwtl
jmp
xor
lds
mov
xchg
pushf
dec
outsb
xchg
mov
jne
pop
lea
inc
inc
add
std
test
push
fisttpl
into
loope
addb
jp
aam
pop
cmpb
iret
pop
mov
mov
fmuls
sub
fs
xor
mov
push
orb
xchg
inc
mov
andb
std
loopnew
cmp
mov
xor
daa
push
andb
insb
inc
sbb
shrb
jecxz
dec
jg
fiadds
loopne
dec
jge
adcb
outsl
cmpl
movsb
arpl
xchg
and
cmpsb
dec
subb
xchg
imul
sbbb
addl
lret
pusha
jbe
das
sbb
shll
pop
mov
pop
sbb
inc
jg
fldenv
movsb
jb
ret
ljmp
incb
and
sub
jnp
rorb
loop
stos
ret
lods
inc
dec
leave
addb
adcb
xorb
outsl
repnz
sbbb
iret
ret
mov
loop
mov
fidivs
add
xor
jae
outsb
fwait
stos
and
dec
sbbb
ljmp
xor
sbbb
pop
lea
add
push
in
xorb
xor
adcb
out
jno
adcb
adc
pop
test
cmpb
or
xchg
int3
sub
aaa
ds
data16
in
add
mov
pop
mov
lahf
jbe
stc
cwtl
adc
mov
push
adcb
jg
insl
cmpsl
aam
inc
fwait
add
icebp
cli
int
ret
outsb
sbb
enter
push
pop
movsb
andl
jbe
mov
bound
xchg
shrb
mov
mov
pop
ljmp
stos
adcb
outsb
push
xchg
mov
mov
inc
cmp
add
xor
stc
data16
insl
add
jp
mov
and
adc
and
xor
frstor
mov
fwait
push
shll
or
pop
mov
imulb
movsl
cmpsb
repz
and
subb
in
push
push
adc
mov
fnsave
idivl
push
mov
stos
shlb
cmp
pusha
jo
je
bound
cmpsl
mov
je
incb
adc
inc
out
adc
dec
pop
scas
out
subb
adc
lret
or
mov
fisubrs
movb
leave
pushf
cwtl
sbbb
je
mov
push
pushf
mov
imul
ret
xor
or
xchg
inc
rolb
push
int3
dec
jl
sbb
pop
mov
imul
or
aas
arpl
lret
jnp
lret
mov
xchg
dec
ljmp
icebp
cmpsb
int3
mov
inc
xchg
ficompl
fists
pop
movsb
movsb
cmp
cwtl
mov
orb
pop
mov
outsb
cmp
lcall
and
mov
mov
pushf
iret
mov
push
xchg
cmpsl
sub
repnz
cmp
addr16
les
mov
cltd
dec
fisttpll
jo
mov
pop
xchg
cmp
repnz
jg
lahf
fdivs
sub
lcall
xlat
add
mov
pop
cmp
dec
push
push
jnp
testb
popa
and
jg
and
fdivrp
mov
mov
out
cmp
stos
mov
pop
push
jmp
xchg
insl
mov
inc
xor
pop
pusha
mov
push
sbb
mov
cmp
stos
cmp
inc
xchg
mov
push
sbb
imul
sbb
cmp
or
pop
mov
je
pusha
insb
pop
lcall
das
mov
imul
jne
dec
fs
in
cmovs
in
fbld
add
fdivrs
test
inc
jg
mov
xor
sbb
jne
xchg
das
push
leave
arpl
mov
push
in
mov
push
and
lods
cld
cltd
pop
insb
je
daa
sbb
jp
dec
sub
jmp
int3
and
pushf
push
mov
clc
mov
xchg
rcrl
inc
inc
mov
xor
clc
xor
push
aaa
sub
fcomp
lods
sbb
mov
das
enter
rcrl
lods
sar
mov
lcall
sahf
xchg
mov
lds
ds
add
test
jns
aas
movsl
repnz
push
jae
out
cs
mov
jmp
xchg
in
cmpb
outsb
fidivs
and
sbb
rclb
test
mov
mov
test
cltd
shlb
mov
mov
sarb
cli
lods
xor
pusha
add
clc
mov
imul
imulb
and
cmc
movsw
ficoml
jge
mov
call
cmp
fisubrl
hlt
cwtl
enter
arpl
xchg
adc
or
sbb
je
in
js
mov
inc
mov
cs
into
outsl
js
cmpsb
add
cmc
stc
inc
nop
insb
xorb
movsb
outsb
pop
lcall
jbe
sbb
inc
xor
jne
and
xchg
xor
mov
push
ret
ss
jo
pop
rcl
add
repnz
testl
add
xor
mov
ss
aas
fistps
sbb
notb
mov
cltd
inc
int3
dec
int3
outsl
stc
add
mov
cmp
add
cld
push
cli
sub
add
pop
ret
sahf
stc
out
cmp
pmaddwd
test
in
push
aaa
int3
int
or
imul
push
and
pop
inc
out
add
add
fldt
sbbb
sbb
jmp
sbb
fs
and
lods
add
add
lods
adc
pop
cmpb
ret
and
cmp
lock
jb
outsl
pop
mov
rcll
inc
add
xchg
dec
test
cmp
mov
pop
add
xchg
rol
or
repz
aas
insb
out
mov
sbb
addb
fst
dec
jno
orl
adc
sub
cmpb
pop
ja
out
fs
sbbb
xchg
or
push
adc
cmpsl
sub
rolb
mov
cmc
xchg
add
pop
lret
cmp
pushl
dec
mov
rclb
cmp
or
mov
pusha
jg
fdivrl
mov
decb
jns
sub
sub
inc
subb
adc
or
test
add
xchg
xchg
sbbb
pop
out
in
push
scas
arpl
pop
cltd
add
fidivrl
movsb
rolb
scas
sub
int
mov
lcall
push
cmpl
push
mov
mov
call
sbb
cmp
or
pop
or
lods
outsl
fisubl
das
lret
add
mov
mov
ss
inc
add
cmp
hlt
js
popa
mov
cmp
outsl
imul
je
inc
pop
jg
add
rcrb
cmpsb
imul
mov
sub
dec
test
mov
add
sbb
addl
push
push
pop
xchg
adc
jae
fnsave
add
stc
pop
lods
mov
popl
test
fadd
push
test
adc
adc
lods
rolb
subb
clc
dec
cmpsb
je
popf
jbe
mov
roll
lock
call
jae
mov
mov
test
jo
mov
jmp
gs
nop
sub
mov
mov
cmpsl
popa
xorb
aam
adc
xorb
test
or
dec
rcll
dec
andb
std
cwtl
rolb
add
loope
andb
scas
call
push
mov
fwait
or
mov
fistpl
xchg
stc
xor
subb
mov
jbe
or
sub
scas
and
add
fistps
fs
sub
sahf
sub
cltd
mov
mov
mov
mov
das
mov
andl
cmp
mov
push
nop
jae
popf
je
xor
aad
mov
pop
fwait
jnp
lea
pushf
out
bound
ret
push
sahf
cmpb
jno
cmpsb
inc
or
xchg
add
mov
sbb
or
inc
std
ja
xor
adcb
pop
mov
lods
or
dec
fs
add
sbb
imul
je
lret
scas
xor
arpl
popf
add
fwait
xchg
mov
jno
push
sbb
push
cmc
bound
push
or
or
jbe
jae
sbb
jne
subb
pop
outsb
int
fs
sbb
mov
repz
xchg
push
sub
mov
cmp
fisubs
jo
xlat
and
adc
movb
test
mov
mov
movb
ror
add
sub
cmpl
lret
xorb
push
jae
aas
loope
je
mov
in
out
stc
add
sub
nop
mov
loop
sbb
cmpsb
cmp
out
out
xchg
std
cltd
es
mov
mov
and
xchg
cmc
add
test
rclb
push
jns
icebp
add
loope
adc
test
cmp
test
lock
sbb
shrl
jle
mov
add
mov
cmpsb
stos
mov
push
inc
sbb
push
jo
pop
je
pusha
fists
rorl
jg
cltd
pop
cmp
and
out
lock
icebp
lret
push
lret
inc
pop
es
mov
aad
mov
das
xor
shrl
cld
fnstenv
sub
ret
dec
mov
cltd
fnsave
push
sbb
pop
test
mov
xor
in
data16
outsb
cwtl
xlat
cli
pop
decb
inc
push
xor
or
push
sarb
add
repnz
adc
lahf
imul
dec
xchg
push
mov
es
xor
cmpsl
pop
mov
mov
idiv
out
add
and
std
jg
ret
mov
movsl
lds
test
andb
pop
pop
xor
sub
and
addr16
sbbl
cs
stos
inc
mov
and
movl
mov
sbb
jle
push
xlat
cmpb
fistps
cmpb
cmp
sbb
mov
jmp
ficompl
adc
sub
movsl
sub
sbb
mov
inc
push
sarl
sub
iret
adc
icebp
mov
mov
xchg
mov
inc
stos
xchg
ljmp
sbb
cmp
lea
jns
repnz
xor
fwait
cmp
mov
movsl
imul
xorl
mov
or
push
call
jbe
es
mov
jbe
mov
cltd
cs
xchg
push
repnz
cmp
icebp
mov
jle
clc
mov
ret
add
sub
pop
mov
outsb
lock
xchg
mov
xorb
push
fnsave
jle
mov
in
dec
mov
and
test
mov
cmp
lret
jbe
lea
jl
out
ljmp
inc
roll
stos
inc
jge
xchg
rol
or
pop
push
shrb
gs
fxch
jmp
in
ljmp
cld
js
outsb
cmp
push
add
and
stos
mov
data16
leave
jno
xchg
and
inc
std
call
int
cmp
xor
xchg
xor
mov
jb
ret
pop
mov
ficomps
stos
arpl
std
pushf
sub
cltd
incl
jno
cli
out
popa
push
ds
or
adc
nop
mov
fisttps
mov
fs
fisttps
ja
mov
loope
loop
int
imul
adc
mov
test
cmp
pop
xor
lds
lahf
out
adc
nop
cltd
test
cmp
int3
add
sahf
add
dec
nop
ja
dec
lds
not
pop
jns
adc
cmc
add
cmp
push
xor
jbe
sbb
rclb
jb
push
notl
push
xor
call
test
in
div
lea
jno
xchg
das
mov
icebp
sbb
xor
nop
xchg
mov
dec
mov
xorl
lods
jl
test
in
lea
push
fnstenv
push
inc
sub
lds
xor
aaa
lods
fdivr
mov
cmc
cmp
popf
pushf
fcmove
aam
mov
lock
in
jno
int
sar
lcall
sub
enter
dec
rorb
adc
fildll
lret
test
ja
cmpsb
aam
push
out
or
cmc
jle
xor
repnz
mov
xchg
sbb
int3
mov
repnz
mov
sub
ret
pop
mov
in
sub
leave
mov
popa
lods
mov
das
jg
mov
add
cmp
and
push
adc
bound
pop
shl
pusha
jnp
jbe
push
xchg
icebp
xchg
shrl
push
sub
outsl
sti
sbb
jb
mov
shrl
add
xchg
jbe
add
mov
in
cmp
ret
or
mov
sti
xor
lcall
inc
mov
sbb
and
aam
or
repz
jge
xor
jae
popa
or
out
inc
lods
cltd
test
adc
jg
inc
in
sti
rcrl
ljmp
adc
lret
aaa
sbb
xor
push
add
push
and
jb
cltd
pusha
sbb
jle
scas
push
fmul
xchg
xor
and
ret
mov
incl
lahf
mov
lock
add
push
xchg
dec
jl
inc
pushf
mov
subb
mov
enter
fdivrl
xor
inc
sbbb
cltd
jbe
and
push
xchg
add
mov
stos
sbb
mov
sbb
xchg
mov
xor
push
pop
xor
das
jns
pop
sub
jb
xor
inc
outsb
loop
cmp
or
mov
popf
mov
movsb
or
cmc
lret
rolb
aas
jae
lcall
dec
xchg
jnp
dec
shll
cs
and
sub
jb
lods
fidivrs
std
mov
movsb
fiaddl
scas
cmp
jp
mov
or
mov
repnz
ja
add
cmp
bound
and
loop
mov
mov
arpl
mov
cmpb
inc
cmp
pop
and
push
pop
lock
ja
mov
add
push
add
inc
imul
stos
hlt
rorb
subb
test
jnp
cmc
jnp
insb
loop
push
jb
daa
fwait
push
adcb
pop
insb
sub
je
and
xchg
lods
stos
aad
dec
xor
push
adc
or
das
dec
adc
lea
or
subb
mov
jnp
add
or
in
andb
andb
mov
ret
shll
push
xor
lds
scas
push
das
iret
push
xchg
inc
xorb
into
ljmp
fisttpl
sbb
or
pop
add
in
outsb
sbb
mov
cltd
arpl
inc
cmpl
scas
xchg
sub
add
cmpsl
jecxz
or
and
in
daa
cmpb
mov
xchg
xchg
test
mov
push
cs
scas
std
xorb
add
jnp
cmpsb
xor
or
insb
lahf
push
mov
add
bound
gs
lea
jb
jns
out
mov
in
cltd
mov
push
pusha
lahf
sbbb
mov
andb
out
clc
rcrb
addl
pop
sbb
mov
aaa
orb
test
out
sbb
pop
adc
out
mov
add
enter
addb
fwait
or
ljmp
inc
push
in
lds
or
xor
xorb
add
stc
mov
testl
orb
xchg
sub
in
sbb
dec
lahf
subb
push
mov
mov
xorb
jg
jge
pop
push
imul
outsb
in
or
mov
addb
jl
push
outsl
stos
cmc
adc
fstpl
loop
pop
xorb
jno
flds
add
xor
or
cltd
push
mov
repnz
jp
orb
xchg
cmp
mov
popf
jae
jg
and
or
mov
fistl
mov
call
fcmovbe
ficoml
je
jle
rcr
push
fwait
xor
jo
mov
cmpl
adcb
bound
push
dec
add
rcrl
jg
push
xor
xchg
cmpb
sbb
sbbb
mov
adcb
inc
aad
pop
xchg
lahf
fistps
jecxz
test
cmpb
mov
bound
imul
enter
sbbb
add
repnz
jmp
outsl
mov
mov
or
and
pop
cli
add
dec
pop
das
mov
rol
cmp
and
fwait
icebp
frstor
push
xor
or
pop
test
es
outsb
call
movsl
xchg
insb
fs
repnz
je
cmp
pop
cmp
movl
je
adc
mov
gs
add
jmp
ja
and
in
mov
std
gs
js
adc
or
or
jnp
push
add
mov
jne
jl
icebp
xchg
or
push
subl
mov
jns
shl
aam
pop
ss
bound
mov
sbbl
adc
movl
xchg
sub
mov
pop
lods
xor
fcmovnu
out
subb
mov
arpl
pop
jae
and
cmpl
xchg
comiss
mov
sub
add
push
xor
jne
jp
mov
and
xchg
pusha
loopne
and
incb
cmpsl
push
pop
push
jnp
inc
mov
inc
sub
jns
or
mov
jecxz
xchg
insl
enter
outsl
pop
mov
data16
push
arpl
repz
adc
mov
or
andb
hlt
xor
lds
aas
mov
sub
pop
into
rclb
sbb
pop
movsl
jg
cmp
xchg
bnd
mov
jp
rolb
sub
sub
inc
movsb
arpl
mov
sub
xor
and
scas
or
jg
adc
outsl
jno
add
lds
or
addl
jecxz
push
push
push
pop
nop
cmpb
dec
movsb
lret
pop
pop
xchg
outsl
mov
mov
jnp
pusha
shl
cmp
ss
rolb
cmp
add
mov
adc
push
inc
dec
cltd
scas
fldenv
nop
movsl
loopne
cmp
out
andb
mov
rol
jno
orl
pop
data16
fadds
in
inc
dec
push
cmp
mov
je
mov
mov
add
imul
add
jmp
jae
gs
adc
jmp
ss
add
add
out
adcb
lods
js
and
xchg
push
aaa
xor
gs
pop
jle
lret
ret
inc
push
jno
cwtl
adc
sbb
or
add
mov
xorb
in
adcb
push
movsb
add
sbb
add
stc
or
outsb
insb
cld
lods
int3
mov
sbbb
testl
push
jmp
stos
orl
je
dec
loope
scas
loope
adcb
adc
lahf
and
test
dec
xor
mov
cmp
cmpb
aam
arpl
shll
andb
clc
sbb
jmp
mov
lods
xor
sbbb
out
outsl
xchg
pop
data16
fnstcw
test
es
fwait
leave
fcoml
cmpb
ds
ret
sbbb
aas
sahf
leave
mov
or
or
into
in
aam
mov
sub
aas
cwtl
jg
fldl
mov
add
pop
mov
je
popa
jmp
mov
or
outsb
and
ljmp
data16
pop
xchg
loope
lods
addb
jno
and
or
xchg
cld
and
movb
jo
stos
mov
xlat
jg
andl
sbb
aas
nop
data16
ret
int3
cmp
push
dec
mov
out
out
outsl
dec
adc
out
loopne
lds
or
shl
push
jnp
mov
mov
in
enter
cli
mov
xor
mov
fsubrl
push
pop
inc
xchg
mov
dec
subb
or
aam
dec
xorb
je
mov
jnp
fnsave
and
aam
inc
icebp
addr16
mov
je
lea
push
pop
scas
pop
inc
aam
or
xor
fisttpl
lcall
sti
xor
jnp
fs
jns
cs
push
and
andl
pop
cmp
lcall
addr16
mov
lods
sbb
xchg
lcall
aas
pop
cmp
into
xchg
lcall
addb
aas
scas
add
lds
jno
push
ja
rorb
inc
insb
es
inc
jg
adc
push
rclb
xchg
negl
jge
leave
lock
dec
xchg
scas
in
xor
inc
add
sub
sti
bswap
or
push
pusha
add
mov
bound
xchg
lds
lret
pop
ret
adc
jae
add
insb
out
dec
push
sub
icebp
pop
cli
push
pushf
adc
fsts
push
jb
lds
jge
nop
push
push
into
sub
out
lcall
ja
adc
lods
mov
sbb
jo
jae
cmc
push
aam
xchg
int3
push
mov
pop
and
jb
push
call
mov
push
jae
lcall
dec
mov
mov
adc
and
aas
mov
js
faddp
into
push
mov
fs
rolb
or
ja
inc
scas
insb
or
inc
cmpl
mov
idivb
sbb
fs
andb
sbb
pop
fadds
pop
sbbb
call
imul
andb
adc
insl
mov
mov
pop
cltd
pushf
mov
add
pop
adc
sub
ret
das
dec
fisttpll
pop
sub
andb
ret
enter
xorb
add
mov
dec
les
pop
xchg
jg
mov
xor
outsl
rcl
dec
jg
pop
aas
pop
or
or
dec
loope
int3
and
mov
mov
das
cmp
xor
insb
jae
sti
add
sub
mov
out
inc
dec
mov
mov
pop
addr16
ret
pushf
jmp
mov
jnp
je
int3
xor
bound
jg
stc
cmp
aad
inc
mov
xlat
nop
andl
fs
cmp
add
and
fsubs
xor
jmp
add
xorb
sbb
adcb
in
mov
std
and
cmpsb
ret
cmp
sbbb
ficoms
mov
call
fwait
icebp
sub
rorl
in
xchg
jne
das
xchg
repnz
mov
stc
std
sahf
fbld
cmp
repnz
lret
subb
dec
pop
jl
adcl
subl
ss
or
lods
sub
xorb
mov
mov
push
or
cmp
rorl
mov
orb
push
inc
adcb
push
xchg
les
out
ja
ficoms
loop
cmp
test
movsl
popf
xchg
mov
sbb
addb
outsb
jle
pop
fidivl
cmpsl
mov
add
xorb
loopne
mov
cmpb
test
sbbb
sub
xorl
and
inc
lret
push
rolb
insb
dec
jae
cmp
xor
jl
jbe
adc
icebp
je
jg
daa
sahf
mov
call
and
cli
dec
sahf
int3
mov
jge
inc
cmp
cmpsb
adc
push
push
dec
adc
pop
addb
add
pop
inc
into
push
sbb
mov
sbb
xchg
adc
aaa
xchg
inc
sbbb
call
ja
jp,pt
and
xlat
in
lds
mov
pop
mov
sbb
lcall
push
jns
mulb
filds
bound
add
lcall
mov
stos
or
mov
jp
mov
pop
les
push
jecxz
xchg
cmpsb
test
int
cltd
sub
dec
int
push
cltd
xor
and
dec
and
divl
xchg
cltd
add
shr
mov
dec
outsb
cmp
clc
cltd
gs
xchg
cmpl
testl
ljmp
jle
ljmp
test
and
test
movsb
adc
pusha
jbe
leave
jl
add
push
push
push
cli
push
add
aas
rclb
mov
sbb
arpl
sbb
sbbl
pop
jbe
sarb
xchg
decb
push
cmpsl
arpl
xchg
add
xor
inc
jae
xchg
ja
mov
stos
mov
xor
js
xor
adc
jp
jl
out
ja
lcall
aam
pop
pop
adc
mov
xor
sbb
push
mov
ret
testb
dec
shrl
ljmp
cmc
movl
jnp
xlat
ret
bound
jp
loop
mov
adc
push
jo
fcomps
fcompl
testl
sbbb
xchg
enter
pop
adc
pop
movsb
push
adc
inc
mov
ljmp
or
stc
mov
and
clc
xor
inc
mov
mov
xor
enter
fdivp
in
mov
insl
xchg
repnz
pop
cwtl
adc
xor
cwtl
mov
pop
adc
and
mov
adc
repz
mov
xor
mov
sti
fwait
adc
add
cmc
aad
cmp
sarb
popa
je
jae
lock
int
loope
lods
jne
pop
aam
fxch
jns
daa
and
cltd
pop
fs
and
sbb
loopne
jle
or
push
or
imul
and
sbb
subb
ss
bound
lret
rcrl
mov
pop
lods
imul
addl
imul
cmp
cli
stc
cltd
insb
mov
mov
outsb
lcall
push
mov
outsb
jae
mov
push
push
lds
and
add
mov
out
cmp
dec
fcomi
popf
in
loopne
cli
outsb
push
scas
std
xchg
stos
push
xchg
mov
push
pop
fstpt
lcall
mov
xor
xlat
repz
stc
call
imul
sub
push
inc
cmp
sbb
dec
add
adc
mov
lds
xor
inc
adc
xchg
mov
jmp
out
ja
cltd
insl
cmp
lcall
inc
ret
jmp
incl
cltd
pop
les
mov
cmp
xchg
xor
in
fcomp
cli
fildl
or
or
or
mov
in
pop
and
mov
mov
in
sbb
jmp
xor
sar
jns
test
push
xchg
sti
aad
jle
xor
xchg
aam
jno
out
cmp
xor
jmp
and
xchg
test
dec
outsb
cltd
jl
mov
xor
lock
out
xor
mov
mov
xor
sbb
xor
cmpsl
pusha
sub
add
out
mov
mov
ret
ret
loope
jle
in
addr16
pop
lahf
in
test
sbb
leave
inc
jge
xchg
pop
test
lret
add
lahf
addr16
ret
inc
lahf
adc
out
jns
data16
mov
dec
mov
popa
cltd
std
ss
lcall
stos
dec
jp
adc
cmp
out
jns
int
std
pop
and
push
sub
int3
nopl
xchg
and
jp
xor
ljmp
xchg
daa
pop
frstor
inc
shrl
nop
dec
cltd
mov
mov
mov
sub
mov
pop
pop
pop
xchg
jbe
cltd
push
fdivrs
pop
aam
enter
pusha
and
mov
test
sbbl
repnz
frstor
out
ficoms
jmp
push
cmp
roll
mov
mov
pop
jb
mov
push
nop
lret
sbb
fsubrs
xchg
push
lea
and
fstps
and
popa
add
fwait
inc
shll
or
data16
push
sti
cmp
loop
xchg
cmp
mov
adc
xchg
sbb
ret
cmc
jle
mov
xchg
popf
js
shrb
add
jp
mov
lcall
lea
add
jle
daa
test
lcall
mov
xchg
out
and
popa
mov
push
clc
jo
shlb
stc
pusha
mov
es
je
push
fcoms
add
push
ja
mov
mov
or
cmp
cmc
add
jge
sbb
negl
or
xchg
dec
std
rolb
cmc
push
cld
mov
mov
cltd
mov
cwtl
pop
nop
jmp
aaa
lods
fnstsw
test
xor
sbb
stos
adc
pop
or
sbb
lcall
sub
mov
sbb
xlat
lea
adcb
mov
sub
js
or
cmp
pop
push
mov
sbb
adc
and
pop
int
es
rorb
mov
jno
xor
mov
sbb
sub
push
ja
cmp
pop
fsubl
cwtl
mov
mov
in
dec
ja
lret
shll
outsb
insl
jle
mov
iret
mov
cmp
ja
xor
popf
or
sbb
cmp
jbe
daa
lds
and
pop
mov
pop
sbb
and
cltd
push
test
cli
push
xor
in
outsl
jmp
call
cmc
les
sbb
ja
fistps
adc
mov
sbb
imul
jge
mov
outsb
pop
sbbl
push
add
es
dec
lock
jbe
addl
andb
cltd
mov
sahf
inc
jle
mov
cmc
xchg
and
sub
sub
push
lea
lds
fidivrl
or
addps
mov
cwtl
push
movsb
jl
sub
dec
jle
lcall
push
sarb
mov
sub
push
jg
cmp
lret
jbe
jb
stos
outsl
aas
pop
movsb
rorb
fcomi
ret
mov
lcall
adc
mov
push
xorb
adc
inc
out
cmp
aaa
ja
lcall
inc
orb
das
rorl
add
mov
dec
sub
mov
cmp
cmpb
hlt
push
out
repnz
pop
xor
xchg
add
cltd
stos
popf
mov
push
and
jns
loope
arpl
lds
push
notl
aam
insb
push
fucom
jns
cld
fisubs
adc
lds
cltd
imul
outsl
xor
xlat
shlb
inc
and
repnz
pushl
cmpsl
lcall
push
add
cli
sub
in
jp
xchg
pop
mov
outsl
cltd
imul
cld
idivb
icebp
call
mov
jne
and
push
jo
or
hlt
aaa
push
cmp
jp
adc
pop
inc
xchg
and
mov
hlt
cmc
and
int
sub
iret
jecxz
dec
xchg
es
fidivrl
add
ds
mov
push
cli
add
stos
divl
imul
and
fistl
outsb
dec
addb
scas
sbb
add
pop
sbb
std
cltd
xchg
and
or
inc
rolb
ret
mov
test
and
daa
in
sarl
cli
jmp
adc
imul
repz
insb
pop
data16
cmp
popf
mov
lcall
stc
test
xor
and
mov
cmp
cmp
arpl
cli
sbb
lcall
lods
cltd
jae
sbb
sub
jo
xlat
inc
sahf
lcall
mov
dec
xor
jnp
add
jne
sbb
push
xchg
mov
pop
popf
test
pop
lret
enter
xor
incb
xchg
js
sub
mov
out
in
and
testb
mov
mov
push
cli
adc
xchg
push
adc
cs
icebp
xchg
xchg
sbb
fnstsw
push
iret
cmp
xorl
push
int
lock
xchg
nop
fcoml
out
popa
push
ja
sbbl
or
imul
sub
fcmovne
push
sub
pop
movsl
leave
pop
arpl
mul
mov
shrb
js
lcall
jmp
xor
bound
movsb
mov
sub
sti
repnz
and
cli
mov
add
shll
mull
mov
in
nop
mov
or
movsb
or
repz
out
jo,pt
dec
addr16
pop
pop
pop
lcall
pop
sub
lea
rolb
sbb
pop
nop
xchg
test
lcall
loopne
push
push
bound
cmp
rcrl
add
inc
xor
mov
es
add
and
fwait
xchg
mov
test
insl
add
insl
cltd
cmp
stos
sub
leave
sbb
hlt
mov
sarb
jae
daa
xchg
rol
xchg
mov
fimuls
imul
mov
mov
mov
mov
fisubrl
pop
jecxz
fidivl
jbe
add
cmp
and
lahf
lds
in
dec
inc
leave
addb
movl
adc
mov
lret
data16
inc
mov
rcrl
fldl
out
mov
sbb
pop
jecxz
cmpsb
orb
icebp
inc
xor
jae
and
and
sub
pop
cmpb
lahf
adc
and
jnp
cltd
int3
mov
andb
ret
xor
subb
es
or
cmp
adc
jg
cs
jle
shrl
lcall
cmovns
jg
xor
pop
pop
xchg
add
mov
sub
pop
pop
cmpxchg
inc
pop
jnp
push
aaa
inc
loope
subb
xorb
lods
out
mov
pop
lds
fisttps
pusha
hlt
xchg
and
ret
sarl
mov
push
add
inc
mov
aaa
movlps
into
pop
xchg
jg
push
xor
mulb
ret
ds
das
cmp
cmp
cmpsb
lods
jmp
xchg
sub
sbb
mov
movsl
add
jle
shrb
push
jp
push
ret
inc
imul
fisttpl
pop
std
orb
dec
or
dec
mov
mov
jl
leave
xorb
shrl
dec
sbb
lods
mov
jbe
jmp
mov
xchg
mov
jp
sahf
bound
loop
imul
and
pop
cmpb
dec
jnp
adc
xor
addb
data16
popa
mov
adc
sub
adc
in
subl
xacquire
mov
std
lds
repz
fsubr
cmpsl
iret
mov
lret
dec
jmp
gs
subl
xchg
jl
andb
fistl
lahf
xor
and
fcmovbe
dec
sub
push
andb
push
in
ds
and
pop
inc
cmpb
fmul
push
sbb
add
mov
adc
mov
fldenv
adcb
test
insb
and
inc
out
cld
xchg
cmpb
imul
mov
jo
jge
xchg
gs
test
popf
cmpsl
idivb
sbb
clc
dec
pop
mov
sub
pushf
and
fxch
add
push
inc
cmpb
cmp
imul
subb
pop
movsl
std
push
dec
dec
orb
xor
imul
add
sbb
push
sbbb
pop
push
sbb
push
dec
lods
mov
pop
addb
jge
iret
addl
ja
insb
xchg
shrb
mov
rorb
fs
or
push
cmpl
push
pop
mov
mov
cmp
arpl
jle
xor
jp
jae
dec
cmp
mov
mov
orb
roll
mov
pop
shll
nop
mov
out
jp
int
jb
ljmp
fwait
inc
inc
jnp
sbb
iret
pop
pop
push
adc
mov
in
in
sub
mov
ret
movb
rorb
mov
mov
faddp
lock
xchg
lods
jnp
int
push
std
jb
loopne,pt
cmp
jmp
fwait
sub
repz
mov
dec
js
pusha
sbb
inc
mov
adc
ret
outsb
out
or
cmpb
test
pushf
or
sub
push
xchg
pop
mov
hlt
sbb
fsubl
pop
xchg
xchg
movsl
out
ret
mov
sbb
jl
out
cmpsl
adc
clc
xchg
std
cmp
adc
shrb
arpl
int3
popa
rorb
or
or
dec
jl
and
add
adcb
roll
sbb
outsl
mov
mov
scas
imul
fs
push
cmp
lock
xchg
dec
cld
mov
sbb
repnz
or
xchg
jo
or
jae
stc
repnz
call
rcl
xchg
neg
mov
insb
leave
mov
xor
mov
cmpb
jae
mov
adc
filds
add
imull
cli
mov
xlat
sbb
daa
dec
cmpb
push
arpl
inc
nop
xchg
inc
sbbb
xlat
push
mov
andb
mov
subb
mov
sbb
addr16
dec
mov
addb
lds
scas
push
inc
data16
mov
push
test
jmp
or
jnp
divl
and
repz
je
xchg
addr16
mov
sub
pop
inc
cmc
sbb
sbb
je
mov
into
pop
and
fldl
rcl
inc
pusha
mov
and
orb
pushf
sbb
pop
mul
mov
out
lret
xlat
lcall
sbbb
cmp
cmp
push
xchg
out
mov
addb
outsb
cmpsl
sbb
jne
les
mov
test
mov
cmc
or
lods
dec
sbbb
fsubs
jg
rcr
mov
sub
sbb
xlat
popa
loopne
mov
push
nop
xchg
sahf
rolb
sub
mov
stos
sub
jnp
inc
js
lret
push
xchg
sbb
clc
addb
stos
ja
out
andb
js
fs
jne
ret
popa
mov
call
push
adcb
cmpsl
lret
inc
fbstp
push
xlat
inc
add
popf
out
cmp
mov
push
mov
rcll
push
push
add
sub
jno
adc
jnp
jne
push
dec
xor
mov
mov
jmp
ljmp
mov
mov
in
jp
popa
subb
jge
sbb
je
add
lahf
fstps
aas
xor
nop
xlat
push
andb
lds
imul
and
roll
xlat
push
dec
mov
int3
bound
sub
andb
pop
lods
insb
mov
mov
xor
push
jp
jnp
inc
jmp
sub
jno
stc
sti
jo
addb
push
lcall
ljmp
jo
mov
idivl
cmp
das
insb
ret
in
dec
rdmsr
es
and
out
daa
push
mov
addl
sub
mov
sbbb
or
xor
inc
pop
jge
imul
fldl
inc
test
push
jnp
push
mov
jns
jmp
int
orb
cltd
adc
fisttps
jle
lret
pop
mov
sbb
mov
addb
lods
push
aaa
leave
add
sub
mov
fistpl
daa
mov
je
loop
data16
andb
push
ljmp
pop
lods
leave
mov
add
push
shrl
dec
addb
mov
mov
xchg
pusha
jl
xorb
mov
jg
pushf
out
push
mov
adc
ljmp
adc
orl
push
lea
andb
add
lcall
lds
lahf
cmpsb
hlt
push
or
jae
addr16
mov
mov
cmpb
xor
orl
test
dec
pop
addb
int
cltd
js
and
test
cmp
adcb
andb
enter
jle
adc
mov
mov
jecxz
stos
lcall
hlt
mov
xor
lcall
push
in
push
movsb
jb
pop
das
inc
xchg
sub
and
xlat
xchg
movsl
ds
or
mov
insl
pop
repnz
int3
cld
sarb
and
repz
insb
outsl
cltd
enter
nop
or
ret
daa
popa
or
bnd
push
leave
add
add
scas
fsubs
push
adc
rolb
and
push
inc
and
test
lret
mov
mov
repnz
inc
dec
sub
mov
aad
jl
lcall
adc
sub
dec
adc
fidivs
add
das
repnz
push
pop
pop
ds
insb
push
add
sbbb
dec
fsts
aaa
gs
movb
cmp
sub
iret
subb
insb
add
or
aam
or
fidivrl
das
inc
in
or
sbb
clc
adcl
cltd
adc
mov
push
iret
inc
subl
jmp
incl
stos
movb
xchg
daa
das
cwtl
cmc
rorl
test
cmp
inc
inc
pop
xor
test
ljmp
sahf
jecxz
aaa
pop
addr16
add
cwtl
scas
push
inc
andl
push
sub
shrl
mov
mov
sub
jp
outsl
subb
in
lret
addb
into
cmovno
mov
xchg
leave
hlt
mov
mov
in
adc
jge
lcall
mov
sub
adc
popa
iret
jle
mov
mov
imul
xorb
xor
loope
ja
pop
or
push
icebp
fwait
popf
inc
in
xchg
add
test
lret
fs
gs
int3
and
jp
mov
lds
dec
jmp
add
pop
popf
push
out
pop
cmp
ljmp
mov
mov
mov
pop
enter
iret
xor
fldl
dec
pop
and
orb
aam
xchg
insb
orb
aas
sub
mov
jnp,pn
into
xchg
sbb
and
fbstp
add
sarb
inc
inc
mov
xchg
inc
test
xchg
adc
xlat
xchg
jae
xchg
mov
sbb
jbe
iret
std
or
cmp
adc
xor
stos
adc
inc
sahf
int3
dec
insb
pushl
xchg
lods
in
imull
filds
sti
mov
push
lcall
pop
jg
and
std
loopne
sub
pop
andb
sub
pop
lret
push
subb
das
pop
jg
adc
and
mov
adc
inc
ret
xlat
xchg
xorb
mov
arpl
ret
icebp
jg
popa
or
pop
add
jp
xchg
mov
mov
inc
cli
cmp
sti
adc
inc
mov
jge
mov
data16
jbe
xchg
dec
stos
and
inc
mov
pop
imul
xchg
mov
cmpsl
cmp
mov
pop
jnp
sbb
jae
cli
subb
mov
xchg
dec
mov
lahf
cs
andb
cltd
xor
pushf
jge
mov
lret
jae
sbbb
mov
in
andb
mov
add
pop
xchg
sub
push
test
push
addb
mov
jo
subb
je
mov
sub
enter
sub
mov
movl
add
insb
in
and
movsl
pop
inc
cmc
sti
cmp
ret
out
jb
cmp
lock
dec
cmpb
stc
test
mov
shrb
out
jae
loopne
sub
das
sar
pop
ss
mov
pmulhuw
dec
dec
loope
inc
mov
sahf
lods
sbb
sub
mov
mov
add
ljmp
lcall
add
dec
leave
xor
xchg
aaa
sub
clc
arpl
nop
sub
addl
ret
inc
outsb
daa
test
jnp
sub
bound
cmpb
push
das
xchg
cld
addr16
xchg
mov
subb
xchg
mov
jns
insb
pop
movsb
xor
aad
cmp
cld
xchg
andl
mov
or
stos
or
stos
insl
clc
cmpb
lea
jb
lea
mov
xchg
ret
adc
pushf
cmpb
jg
cltd
add
cmp
icebp
cwtl
inc
mov
roll
arpl
or
in
pop
std
in
popa
mov
jbe
fadds
daa
inc
jp
sbbb
pop
scas
hlt
popa
out
pop
inc
sbb
push
ljmp
push
cmp
xlat
mov
mov
add
mov
and
push
pushf
cmpb
movsb
cmp
xor
outsb
mov
stos
sbb
push
insb
fidivl
loope
mul
ss
inc
imul
std
jnp
in
icebp
push
adc
mov
hlt
sti
int3
pop
or
pop
push
xchg
push
sar
pop
imul
test
cmp
mov
iret
push
mov
sbb
movsb
je
addb
lea
xorl
incb
jmp
push
adc
add
jge
cmpb
add
mov
aam
lcall
cmpsb
mov
pushf
mov
in
add
sub
sub
icebp
and
xchg
add
les
vpsubusw
jge
jp
shl
lds
cmpb
clc
movd
pop
cli
sbb
or
test
andb
in
movsb
push
stos
xor
and
das
movsl
dec
fildl
or
adc
mov
mov
cmpsb
adc
push
add
dec
and
xchg
add
push
cmp
sbbb
popf
push
pop
dec
in
cmpb
xchg
jb
shll
dec
sbb
push
sub
sbb
push
adc
fcompl
test
sub
sti
jg
scas
xchg
lret
icebp
inc
pushl
inc
cmpsl
inc
out
pop
dec
push
xchg
jo
cld
jmp
cltd
or
mov
mov
bound
mov
mov
lret
jg
pushl
popa
or
xchg
test
sub
adc
inc
xor
mov
jne
bound
addb
rclb
mov
sbbb
mov
jae
mov
jle
and
jl
cmp
jne
add
mov
ja
in
mov
clc
add
cld
adc
add
lcall
jnp
xchg
mov
outsl
push
inc
arpl
sbbb
xchg
fcomps
test
xor
outsl
adcb
cmpsl
outsb
xchg
mov
and
mov
outsl
and
push
xchg
dec
inc
sub
push
shll
imul
leave
orl
push
or
int3
mov
test
decl
mov
stc
mov
imul
or
lret
scas
or
aam
out
xor
inc
pop
fld1
inc
nop
fsub
je
push
sub
loope
je
mov
dec
in
push
lock
hlt
ret
pop
loop
jnp
and
clc
cmpl
mov
and
movsb
mov
outsl
mov
in
dec
pop
mov
mov
scas
mov
push
cmp
mov
insl
andb
gs
inc
mov
ljmp
and
out
inc
jns
inc
or
subb
in
imul
pop
andb
les
mov
xor
xchg
cmp
and
out
js
xchg
jbe
int3
lret
cmc
dec
ljmp
push
adcb
test
loopne
push
hlt
jecxz
mov
pusha
mov
testl
jne
inc
xlat
mov
sbbl
cs
inc
sub
mov
aam
pop
mov
mov
addb
outsl
add
jle
fimull
inc
mov
or
mov
sbb
push
cmpsl
and
out
or
push
mov
lds
out
fsubr
add
lods
jl
sbb
dec
push
mov
cmp
shll
xor
leave
andb
roll
loop
arpl
jno
subb
sub
pop
sub
inc
outsl
fsub
je
mov
sbb
imul
lds
fnstenv
das
subb
add
and
cmpb
sub
xorb
and
add
lea
and
xchg
sbbl
xor
push
or
std
xchg
cpuid
cmp
sbb
inc
push
into
mov
test
test
out
xor
xchg
push
mov
push
ret
aad
lret
sbb
sbb
mov
inc
dec
push
js
mov
xor
ret
stos
clc
and
in
mov
fwait
push
mov
xchg
adc
mov
pop
mov
leave
sub
stc
outsl
push
cmp
jmp
jge
fdivp
movsb
outsl
push
loopne
xchg
iret
add
add
and
ja
push
adc
push
sbb
lcall
xchg
mov
insl
ret
loopne
sbb
jns
mov
das
jle
inc
push
imul
cli
inc
je
orb
arpl
scas
daa
mov
out
movsb
xor
jo
mov
sub
xor
cmp
ds
xchg
inc
cmpsb
xor
cli
dec
mov
mov
repnz
sbb
stc
pop
inc
lds
ret
jg
push
subb
sub
and
js
add
fcomi
in
shr
push
jne
and
cmc
enter
fs
cmp
xorb
pusha
jle
add
xchg
clc
in
insb
faddl
ds
js
mov
jmp
lcall
pop
popa
cltd
dec
mov
ja
sub
xchg
mov
les
jns
mov
movsl
stos
cmpl
imul
xchg
scas
ja
jle
sub
ret
inc
xchg
jl
cltd
adc
loop
sarl
inc
movsb
add
inc
popa
and
cltd
push
mov
stos
dec
filds
mov
cli
mov
jb
lret
cmp
jb
shrl
inc
in
push
pop
inc
sub
sub
imul
loopne
jns
sub
cmp
fdivp
popa
test
inc
shlb
sub
lcall
xchg
jne
les
in
mov
loop
adcl
mov
xchg
pop
xchg
or
sbb
popa
cmp
or
cs
scas
jne
sahf
cmp
lods
les
push
and
scas
iret
pop
push
push
leave
push
push
data16
xor
icebp
imul
pop
jbe
aad
jnp
lcall
cmpb
lcall
outsl
xor
lcall
aam
popf
ss
and
push
pop
popa
mov
sbb
xor
xchg
cmp
or
jbe
xchg
shrb
inc
frstor
pop
out
cwtl
sub
adc
loope
inc
stc
mov
mov
add
mov
mov
stc
dec
mov
inc
insl
sbb
leave
jg
ret
fs
mov
fsubrs
mov
lds
loope
mov
jmp
outsl
jmp
cli
ja
stc
jp
jecxz
lea
cmp
push
mov
lcall
mov
cmp
cmpsb
push
and
mov
jle
mov
mov
ficoml
mov
sub
lcall
xchg
in
add
in
negl
mov
sbb
fistpl
repz
jge
lcall
push
leave
stos
jmp
out
std
cwtl
dec
leave
jp
jb
xchg
aad
pop
out
push
dec
fcomps
movsb
jge
rorl
dec
pop
and
les
cmp
adc
aam
pop
mov
add
pop
pop
sbb
rcrb
adc
mov
or
xlat
mov
sar
outsl
inc
xchg
pop
push
push
popa
push
sub
outsl
repz
adc
and
mov
je
repz
icebp
pop
mov
stos
or
sti
ja
sahf
xlat
jne
lret
ret
aas
fistps
push
in
ds
repz
andb
imulb
aam
mov
call
rolb
mov
push
mov
add
arpl
sub
xlat
and
mov
outsl
andb
pop
push
out
subb
cmp
int3
xchg
ret
xorb
repz
int
mov
jg
dec
pop
xchg
rclb
inc
or
mov
adc
cld
je
in
sti
subb
das
pushf
cwtl
addl
repz
jns
jb
jae
mov
loope
in
scas
adcb
push
pop
mov
movswl
xchg
rcpps
subl
or
subl
inc
cmpsl
mov
movsl
xorb
jle
iret
cmp
in
mov
pop
repz
int
repnz
xor
xor
lea
addr16
test
dec
mov
jl
and
cltd
pop
jb
popf
pcmpeqb
fbld
repz
andl
cmc
xchg
pop
stos
sbbb
in
mov
adc
mov
mov
stos
jnp
xchg
jg
ret
popf
fisubs
push
adc
mov
mov
insb
test
stos
sub
scas
inc
std
loopne
dec
xorb
aam
jg
testb
fsub
loop
inc
lods
dec
out
mov
popf
xor
iret
jg
sbb
rcrb
cwtl
in
push
dec
arpl
mov
inc
in
cmpsb
xlat
cwtl
inc
cmpb
pop
test
xor
ss
adc
mov
bound
fstpt
or
sti
lods
and
fmuls
fs
and
pushf
mov
xchg
inc
movsb
or
pop
addb
imul
and
xchg
mov
jns
clc
xor
pop
sub
adc
cmp
mov
sub
xchg
push
or
idivb
insb
inc
data16
push
xchg
or
and
cmp
mov
pop
fwait
mov
out
ficompl
and
arpl
loop
inc
insl
test
pop
mov
mov
adc
and
addl
mov
or
dec
jns
adcb
add
mov
icebp
mov
stc
sub
cmp
cmpb
test
inc
insb
xor
loop
je
stc
xorb
dec
loope
icebp
mov
scas
inc
rolb
mov
lcall
pop
xorb
dec
les
scas
or
jp
pop
pop
mov
lods
mov
cmpb
dec
arpl
out
pop
xor
mov
into
sbb
or
subb
movsl
push
cmpb
mov
andb
arpl
rcll
inc
test
cmp
mov
xchg
popa
xchg
loop
adc
aad
xorb
add
pop
loopne
jns,pt
xchg
int3
adc
aad
jp
loope
ret
lret
dec
cmp
mov
idiv
sbb
cs
xor
pop
fs
outsb
mov
and
jge
cmpb
insb
sahf
test
dec
nop
sbbb
stos
outsl
lret
mov
add
fcompl
dec
popa
inc
push
mov
xorb
push
jb
inc
jnp
sub
popf
and
push
mov
fdivrl
or
dec
mov
lods
or
repnz
push
js
fbld
xlat
mov
cwtl
fmulp
leave
xorb
lcall
push
mov
and
cmp
popf
xor
jl
mov
fmuls
cmp
dec
and
sbb
popa
adc
ret
test
cld
stos
xchg
mov
dec
ja
xlat
push
push
dec
and
pop
mov
mov
jl
xchg
out
mov
jb
and
or
scas
dec
fwait
xor
imul
xchg
cmpb
xor
addr16
or
xchg
cmp
dec
jg
jge
jmp
ret
pop
popf
or
lock
sbbb
mov
jo
stos
in
push
mov
push
sbb
jge
insl
or
mov
mov
mov
andl
incl
push
loop
sub
mov
ret
mov
adc
in
or
daa
mov
int
mov
popw
movsb
ja
loop
cmpb
scas
gs
xchg
repz
shlb
xchg
inc
testb
add
subb
xchg
les
rolb
test
icebp
outsl
cmpb
pop
push
fidivl
mov
mov
sbb
inc
ds
loopne
andl
and
cli
inc
fsts
inc
call
shll
sarl
mov
loop
repnz
inc
idivl
add
lea
xor
lds
mov
sub
leave
adc
xchg
sbbb
mov
cmc
arpl
mov
rolb
xchg
lret
addb
test
cmp
js
loope
daa
pop
fisubl
addb
aaa
enter
xor
mull
scas
test
push
imul
mov
mov
notb
jne
outsb
fldenv
ljmp
cmp
fcompl
xorb
leave
insl
daa
out
lods
lock
push
and
movb
cmp
fisubrl
insl
xorl
stc
or
cmp
jnp
xchg
adc
jl
cmpb
pushf
mov
aas
push
lret
in
sbbb
adcl
xchg
or
das
test
pop
jecxz
daa
int
scas
sbbb
clc
outsb
pop
lahf
and
cmp
pop
stos
repnz
xor
jno
mov
nop
andb
adc
xchg
push
push
mov
xor
out
mov
fcoms
cli
and
cwtl
ja
cmpsb
jae
mov
jmp
repnz
repz
xlat
dec
rorb
out
lcall
cld
pop
pop
rolb
sub
jo
loopne
adc
pushf
ss
or
subb
push
push
sahf
cmp
dec
cli
xor
lea
andb
fisubrs
fadds
mov
jo
mov
repnz
dec
jnp
mov
les
test
aaa
imul
andb
out
addb
mov
loop
out
mov
xchg
and
and
cmp
stos
pop
xchg
icebp
cmp
sbbl
andl
xchg
adcl
mov
popf
fs
jb
sahf
pop
push
ds
andb
mov
lock
out
sub
bound
adc
xchg
in
mov
inc
test
mov
adc
push
rorl
test
mov
aam
aad
pushf
inc
enter
sbbl
insb
add
or
clc
sub
test
add
out
pop
pop
dec
roll
leave
jb
cpuid
cwtl
faddl
ret
out
xchg
cltd
mov
cmpsb
xchg
test
cmpb
push
xchg
mov
sbbb
push
ficomps
jne
call
cs
and
int
push
outsl
loope
pop
sti
sbb
sub
inc
div
jo
inc
shll
out
lcall
lcall
push
xchg
cli
outsb
jmp
shlb
leave
fidivs
xor
leave
gs
sub
adc
cmp
lcall
subb
nop
sbb
mov
lret
jbe
lcall
mov
daa
cwtl
aaa
out
xchg
pop
inc
sahf
ret
add
adc
mov
aad
mov
and
sbb
rcr
addb
outsl
les
insb
repz
sar
cltd
dec
push
jno
cs
pop
jecxz,pt
xlat
jo
int
lcall
in
pinsrw
mov
or
lret
xchg
mov
lds
sbb
mov
push
push
and
das
inc
pop
repnz
insl
dec
fldenv
mov
jle
cmpsb
enter
lcall
mov
push
cmp
lea
movsb
sbb
add
and
nop
mov
in
leave
ss
test
out
mov
stc
cmp
add
ljmp
cmpsb
sub
and
je
mov
aam
and
cmpl
scas
or
jbe
shr
xor
mov
jmp
ret
and
xor
mov
mov
cmp
jmp
jmp
test
xchg
lea
mov
cs
popf
and
test
out
xor
les
lock
std
lcall
fisubl
js
lret
hlt
popa
cli
jle
nop
jno
dec
mov
xor
cmp
std
aam
pusha
jmp
inc
dec
rolb
aad
outsl
mov
pop
ljmp
sbb
inc
ret
ret
scas
inc
mov
dec
and
iret
inc
scas
mov
daa
jge
cld
clc
xor
stos
movsl
and
xchg
add
cltd
cmp
push
ret
push
test
loopne
or
push
lret
in
lcall
rclb
test
cmpsl
jns
sub
dec
pop
addl
addr16
or
cltd
mov
push
xchg
pop
stc
cmpsl
jns
mov
lahf
movsl
xor
mov
out
cltd
jp
mov
jle
sub
ljmp
je
jns
movsl
inc
xchg
xor
mov
lret
daa
or
subl
test
stos
push
push
add
cs
stc
jl
shlb
sbb
cmp
fistl
add
mov
movsl
cs
push
cli
adcb
add
out
xorb
enter
add
jns
loope
nop
andl
mov
xchg
or
add
jle
lcall
mov
pop
and
and
stc
pop
outsl
lcall
in
push
mov
jmp
push
mov
ror
add
mov
dec
repnz
sub
fidivs
xor
mov
jle
adc
leave
inc
add
xor
in
sbb
test
push
loopne
mov
subb
outsb
mov
in
stc
add
mov
divl
add
adc
push
jmp
fs
jbe
push
movb
lcall
pop
sub
mov
aaa
loope
push
mov
jns
andb
mov
push
and
xchg
outsb
out
ret
sbb
jb
fnsave
mov
sbb
jb
hlt
push
iret
popa
mov
testb
xor
shr
std
push
scas
dec
outsl
ret
cltd
jnp
lret
rep
loope
jo
repnz
ret
aas
mov
inc
mulb
fwait
ret
xchg
lret
jo
add
mov
cmp
add
lcall
fidivrs
jnp
outsb
das
sbb
fidivrs
es
jno
bound
or
hlt
js
mov
fildll
mov
icebp
mov
adc
es
xchg
lcall
call
jge
fdivrl
stos
iret
lahf
shrb
or
jle
cli
in
mov
jnp
jne
mov
ficoms
cmpsl
jae
or
rcrb
add
xor
push
cltd
repnz
scas
inc
or
mov
iret
shlb
sbb
push
pop
into
outsb
sub
dec
mov
and
mov
pop
xchg
push
mov
mov
adc
sub
jle
outsl
cltd
mov
loopne
jnp
lcall
add
push
mov
in
cmp
aad
mov
aas
push
pop
jns
adc
shlb
jb
sub
fimuls
in
mov
sbbb
sbb
cmp
shll
mov
enter
push
fisubl
fwait
loopne
xlat
jnp
mov
imul
repz
mov
insb
ja
data16
fs
xchg
or
popa
outsl
rcrb
mov
ret
hlt
insb
and
addw
cmpsl
xor
ss
jecxz
insb
cmc
dec
outsl
int
jno
out
inc
cltd
sub
movsb
repnz
dec
jle
pop
lea
cwtl
inc
jb
in
xlat
adc
jp
push
cltd
sub
jle
xchg
xchg
in
pop
inc
jp
xchg
ljmp
sub
push
pop
lea
in
mov
mov
jo
sub
push
cli
or
clc
mov
leave
or
push
and
pop
in
inc
decb
leave
and
rolb
lods
repnz
xor
mov
rcr
xor
jle
jae
dec
jg
ret
out
lods
add
cltd
shlb
mov
mov
rclb
mov
sub
mov
jle
jecxz
jns
cli
xchg
push
xchg
lret
and
mov
fidivs
in
cmp
inc
lock
cltd
pop
jno
or
and
ljmp
sti
adc
add
mov
lcall
divb
sub
or
mov
xor
xchg
std
xor
popa
pushf
repz
sbbl
lcall
and
cmpsl
xor
jb
mov
dec
andl
add
jg
jb
test
cmp
mov
cwtl
sbb
subb
mov
stc
les
dec
jne
jmp
ret
xchg
inc
cmp
dec
add
lcall
fildl
stc
pop
xor
insb
bound
lods
sub
pop
pusha
jo
inc
cli
rolb
xchg
xor
mov
xchg
das
and
loopne
sub
jmp
adcl
cli
mov
mov
dec
jl
js
xchg
lahf
jle
xchg
ret
mov
je
inc
lcall
stos
stos
in
or
addr16
outsb
imul
cli
movsb
lods
pop
sub
push
or
mov
jle
cmp
push
shlb
pop
push
add
in
rolb
mov
imull
nop
fs
sbb
push
in
repnz
push
mull
cltd
jns
or
push
movsl
cld
sbb
inc
fcomps
jl
test
in
outsb
in
out
push
scas
and
xchg
jae
push
leave
sbb
cmp
xchg
sub
into
push
pop
bnd
fnstcw
mov
mov
dec
and
xchg
fs
inc
sti
test
jnp
stos
cmp
cmc
leave
sub
int3
roll
popa
jbe
dec
lock
loop
in
jo
orb
in
sub
orb
inc
lods
adc
pop
mov
mov
inc
rcrb
push
notl
xor
push
inc
sub
or
shll
mov
bnd
loope
mov
xor
lahf
stc
jo
test
roll
clc
ficoms
jns
inc
stc
or
in
icebp
rorb
mov
inc
stos
test
cmp
adc
popf
sbb
mov
jl
mov
loop
pop
lcall
sbb
imul
push
and
pop
lods
xchg
inc
sti
stc
out
mov
cmp
push
stc
mov
fsubs
stos
aaa
push
cli
lcall
xor
pop
stos
cmp
arpl
xor
xchg
int3
sbb
lock
lds
cld
and
adc
cltd
stc
mov
aad
mov
ret
je
in
mov
cmp
pop
lret
pop
cmp
adc
push
aaa
dec
xchg
stc
popf
xchg
pop
mov
das
pop
mov
mov
xlat
add
xchg
cs
mov
imul
lcall
cltd
cmp
ss
inc
rclb
sbb
mov
lret
shrb
icebp
in
rclb
cmp
push
mov
call
ja
mov
push
xchg
fcmovnb
inc
cmp
outsb
test
sbb
ret
mov
mov
dec
out
cmp
fsubs
push
or
call
ret
lods
addb
scas
lret
scas
test
adc
or
out
pop
push
stc
push
xor
jb
out
jns
lcall
mov
sti
pop
mov
shr
lcall
xchg
lcall
fdivrs
out
pop
or
fldl
sbb
fnstcw
lret
dec
and
or
lock
fidivrl
popa
mov
rcrb
jns
mov
pop
push
rorb
pop
out
flds
cld
pop
cltd
outsb
mov
sbb
adcb
loop
hlt
ret
int
scas
mov
cltd
inc
jo
jge
jno
dec
std
push
les
cmc
sub
outsb
gs
outsl
orb
pop
aam
cltd
mov
insl
add
mov
xor
sub
inc
in
jb
xor
mov
ljmp
sub
les
addb
sbb
lcall
mov
jecxz
nop
push
hlt
out
cli
aad
sub
mov
lcall
xor
cld
mov
sub
cmp
push
bound
xor
loope
or
je
xchg
adc
scas
mov
outsb
sbb
mov
leave
fs
mov
inc
lcall
ds
inc
scas
xchg
xchg
call
lcall
or
orb
mov
xor
sub
mov
adc
push
push
mov
xchg
into
pop
adc
loopne
sbb
cmp
mov
push
xchg
xor
inc
mov
fidivrl
pushf
andb
dec
mov
ds
rolb
mov
adc
jg
mov
dec
stc
xor
push
sub
mov
nop
out
and
adc
xor
js
addr16
mov
out
jge
sub
xchg
cmp
imul
stos
int3
xor
mov
or
xchg
test
jae
pop
shll
and
mov
or
movb
add
sub
jbe
pop
cmpb
dec
outsb
subb
xor
iret
adc
addb
leave
ja
add
sti
outsl
adc
inc
adc
push
nop
or
pop
jbe
sub
mov
adc
lret
inc
cltd
sub
push
hlt
sti
jbe
loopne,pn
leave
sub
mov
cmp
test
mov
jbe
mov
ds
stc
ljmp
negl
fwait
jns
call
push
mov
int3
and
sub
es
sub
add
jb
push
mov
sbb
inc
inc
mov
push
cmc
out
sub
cli
xor
adc
pop
adc
xchg
movsb
add
test
lock
add
loop
idivl
xor
jo
xor
xor
xchg
call
adc
xor
mov
call
xor
scas
or
jbe
fldl
and
incb
or
cmc
repnz
fiaddl
pop
aam
shrl
dec
outsl
cmpl
dec
sbb
outsl
mov
xlat
pusha
and
mov
and
adc
cmc
jge
cltd
int3
fs
clc
gs
ja
out
test
mov
dec
enter
sub
adcl
pop
inc
cld
xor
mov
pop
addl
daa
lcall
add
inc
fldt
je
ds
fmuls
mov
and
je
jns
push
lods
and
lock
repnz
xor
add
mov
testl
mov
imul
subb
loop
mov
pop
and
testl
mov
and
movsl
daa
loop
pop
inc
xor
out
jmp
fimull
ret
xchg
mov
fimuls
pop
call
cltd
xchg
decb
pop
lcall
imul
scas
lret
sub
xor
fwait
cltd
insb
push
mov
dec
fmuls
pop
ret
mov
outsb
xchg
lcall
add
cmc
dec
std
xor
xor
or
jecxz
lods
mov
stc
push
aaa
mov
adcl
stos
imul
xlat
imul
push
pushf
adc
jl
adc
xor
jo
xchg
iret
pop
jo
jl
mov
cmp
sub
xorb
dec
sub
or
lcall
test
pop
pop
rcll
sub
sub
imul
mov
or
insl
out
repnz
ja
inc
sub
mov
mov
mov
jno
pusha
repnz
mov
daa
sub
aaa
mov
daa
jl
in
fdivrs
mov
mov
push
arpl
xor
test
out
test
mov
lock
pop
or
sub
dec
lods
mov
test
stos
sub
add
mov
fcomps
das
insb
std
insl
xchg
or
pop
pop
inc
jbe
dec
lods
xor
cmp
out
adc
inc
xchg
divl
adcl
outsl
xchg
xchg
mov
insb
loop
mov
jbe
push
or
leave
add
in
test
cs
or
aaa
rol
mov
movsb
inc
sbb
jae
add
outsb
cmp
out
adc
push
repnz
fsubs
or
or
mov
add
ud1
xlat
repnz
int3
sar
sahf
cmc
cld
xor
add
push
push
and
pop
push
cmp
or
data16
adcb
jo,pt
mov
push
js
sub
mov
xchg
xchg
pop
cli
inc
clc
outsl
lods
shrb
add
cmc
jge
cltd
shl
xchg
in
pop
sti
rdtsc
outsl
out
rclb
dec
repnz
mov
cmc
flds
sbb
imul
mov
lahf
cli
pop
mov
jge
sbb
xchg
sbb
xor
cli
call
test
sbb
pushf
in
xor
push
push
cmpsl
xor
mov
nop
ret
mov
pop
fisttps
xor
fcompl
test
aam
sub
inc
cmp
jb
mov
jnp
sub
push
ja
mov
outsl
cmp
lods
sub
sahf
scas
test
addr16
test
jle
mov
jno
lcall
sub
es
loope
jo
popa
xchg
mov
sar
or
stos
out
xlat
mov
jbe
pop
enter
jmp
push
js
insl
sbb
xchg
jge
leave
cld
aam
push
xchg
ret
out
sbbl
and
rcpps
pop
fcomps
push
subb
lock
lret
dec
aas
push
add
repz
sub
add
pop
pushf
dec
add
sbb
movsl
mov
mov
inc
mov
jo
dec
lods
roll
pop
pop
cmpl
out
rclb
fdivrl
insb
dec
lods
sub
add
push
jns
and
mov
ror
stc
addr16
mov
daa
lods
pop
adcb
mov
jge
xor
insb
arpl
mov
ret
adc
pushf
or
cwtl
stc
xchg
mov
hlt
andb
lods
mov
subb
out
nop
out
stc
adc
lds
add
cmp
shr
icebp
xchg
sbb
mov
dec
int3
push
push
adcb
sbb
xorb
cmpb
xor
jnp
adc
std
inc
cmp
mov
dec
data16
jo
jnp
push
cmp
loopne
imul
mov
cltd
cmpl
jg
shll
enterw
das
insl
popf
or
ret
fisubl
icebp
iret
mov
int
imul
paddw
loop
push
jg
xor
and
cmpsl
adcb
xlat
push
adcb
inc
push
enter
jae
pop
or
push
daa
jnp
sti
pop
ret
jnp
pop
fadds
insb
rol
addb
call
xorb
cmp
mov
xchg
sbb
and
sbb
popa
pop
and
add
mov
fs
inc
mov
mov
jg
sahf
les
sbb
ret
mov
xchg
sbb
jae
aas
inc
sarl
lret
mov
subb
das
lods
imul
add
cwtl
bt
ret
cld
jle
and
jo
shl
and
xor
arpl
jnp
mov
push
dec
shl
jae
xor
test
out
push
xchg
daa
mov
std
and
insl
add
pop
aad
je
or
int3
and
in
fidivl
test
stc
mov
cmpb
mov
push
jne
jnp
ror
in
xor
push
sar
addb
enter
and
imull
or
sub
scas
fimull
push
arpl
push
lret
mov
andb
and
mov
cld
add
popa
mov
jno
hlt
mov
cmp
orl
pop
sbb
sbb
push
and
sbb
adcb
sub
ljmp
gs
pop
jge,pn
test
gs
jbe
ret
push
mov
ret
xorb
xchg
out
xchg
xor
adc
mov
rorl
cmpb
pop
mov
ret
scas
mov
bound
addb
mov
movsl
ret
dec
push
fsubrs
aaa
jo
je
mov
sbb
shlb
ja
inc
push
add
daa
pop
cs
jnp
xchg
inc
lret
dec
push
out
or
imul
sub
outsl
xor
fdivl
popa
lds
lcall
jecxz
mov
inc
xor
sbb
adc
jae
push
nop
incb
xchg
mov
ljmp
icebp
cmp
pop
ss
jnp
or
leave
xorl
sbbb
inc
push
mov
dec
and
sub
test
xchg
out
mov
mov
push
movsl
subb
mov
sbb
cmp
repz
test
cmpsb
xchg
and
pop
fistpl
repnz
ljmp
in
and
mov
ds
pop
inc
sarb
pop
dec
mov
ljmpw
or
std
cmpb
cmp
jecxz
imul
mov
inc
mov
inc
add
mov
mov
push
cmp
aad
add
ja
lods
adcb
stos
hlt
cmc
dec
inc
ljmp
mov
jbe
inc
jb
fsubrl
subb
jge
sub
ja
je
mov
std
loope
and
mov
out
push
add
ljmp
ficomps
cmp
adcb
adc
xor
incb
or
pop
loope
movl
jbe
lcall
gs
mov
jnp
cwtl
test
iret
add
clc
cli
lds
ret
sub
outsl
fcoml
es
test
imul
addb
sbbb
daa
adc
loopne
xor
hlt
loope
outsl
fnsave
sub
shl
sub
push
cmpsl
test
out
orb
ret
lock
mulb
mov
in
ja
hlt
bound
xchg
clc
imul
or
xorb
insl
cli
mov
mov
dec
test
push
insb
jg
add
pop
pop
leave
cmpsl
bound
hlt
and
fistpll
push
push
cmc
movsl
push
repnz
outsb
adc
pop
ret
xchg
lods
jl
fs
enter
aam
shlb
repz
xchg
je
pop
adcb
sbb
sbbb
ja
pop
out
xlat
in
and
shll
leave
add
push
xchg
scas
sbb
lods
cmp
repnz
subb
sub
or
lods
mov
gs
lcall
in
xorb
gs
in
cmpb
iret
mov
fwait
sub
gs
mov
stos
cmpb
sbb
ret
xor
jle
shl
bound
mov
mov
xor
pushf
inc
cmp
repnz
leave
mov
orl
xchg
addb
iret
push
dec
js
mov
popf
jg
sbb
into
inc
jg
adc
jmp
mov
mov
mov
mov
adc
jno
lret
les
call
pop
rcll
cwtl
mov
testl
subb
loope
or
movsb
sub
pop
rcrl
out
std
andl
inc
and
sbbb
cld
push
mov
out
adc
sti
xor
mov
xor
mov
dec
lds
inc
orb
sbb
sbbb
leave
pop
pop
movb
jbe
cmpsb
add
subb
repnz
add
orb
std
into
cld
jb
sbbb
daa
popf
fisttpl
adcb
test
jnp
mov
or
mov
imul
jle
imul
mov
fmuls
sbb
aam
xor
push
push
jnp
adc
fidivrs
cli
fmul
cmc
sub
cwtl
inc
mov
ds
pushf
and
sti
fldcw
hlt
into
dec
xor
fistpll
xor
insl
outsb
jo
ficompl
push
ss
lods
dec
cmp
cli
push
popa
shlb
int
gs
cmpb
adc
push
hlt
cs
mov
cmp
test
jnp
mov
rcrb
fcmovnbe
cmp
stos
adcb
sti
inc
insb
out
xorb
popa
in
lcall
pop
xlat
mov
add
cmc
mov
pop
mov
push
inc
hlt
jo
adc
ret
sbb
jb
sub
subb
jns
cwtl
push
imul
pop
xorb
xor
mov
leave
les
push
int3
dec
sub
adcb
test
stos
mov
jecxz
pop
hlt
fwait
addb
sbb
or
sub
loop
xchg
jnp
jne
adc
add
lock
bound
addb
scas
xchg
mov
out
adc
cld
es
cmp
rclb
sub
push
jb
xorb
pusha
call
mov
xchg
int3
cmp
add
es
jnp
arpl
mov
loop
jmp
jl
or
es
sbbb
xchg
jle
neg
or
xor
pushl
or
orb
sarl
cmp
out
fildll
lods
xorb
add
push
scas
sub
popa
inc
xor
imul
cmpb
ret
xchg
bound
mov
in
aam
fptan
push
jae
imul
xorb
popa
movsb
adc
cmpb
test
inc
cmpb
pop
andb
inc
movsl
lea
sub
loop
fistpl
andb
lret
cmpsl
ljmp
cmp
movsl
add
in
ficoms
ss
cmpb
xlat
dec
lock
ss
sahf
push
subb
or
mov
lds
xor
push
mov
es
cmp
jae
and
inc
aad
andb
das
icebp
lods
adc
cmpb
cmp
ljmp
arpl
sub
jmp
or
sbb
stos
mov
xchg
pop
in
fistpl
mov
mov
mov
mov
inc
loopne
add
cmp
negb
sub
shlb
jmp
xor
orb
pop
adc
jae
pop
sub
mov
jno
lods
jle
sbb
dec
iret
repz
xchg
push
or
loop,pt
cltd
stos
pushf
jnp
out
inc
sub
dec
inc
aas
push
adc
in
dec
mov
repnz
stos
cmp
or
inc
notw
jns
addl
repnz
inc
mov
mov
pop
rclb
push
jns
cmc
add
mov
leave
sbb
nop
and
stos
inc
vcmpss
sbb
jo
cltd
sub
mov
insl
adc
sarb
or
js
inc
push
loopne
xchg
fsubrl
lods
cltd
in
shl
xchg
xchg
adc
mov
pop
repnz
sbbb
pusha
sub
in
adc
sub
sub
adc
pusha
fidivrs
jo
pop
lods
cmp
or
mov
aad
mov
or
nop
addl
jecxz
int3
pop
lods
enter
pop
adcb
inc
mov
nop
repnz
lret
loop
sub
popf
test
jbe
mov
je
test
jle
xchg
xchg
out
push
dec
arpl
repnz
lea
mov
xchg
push
inc
inc
test
mov
push
mov
mov
das
test
add
out
inc
testl
stc
sbb
ss
aaa
mov
mov
mov
jle
stc
std
dec
lcall
mov
repnz
or
add
and
inc
popa
sbb
pop
nop
add
pop
mov
leave
mov
outsb
stc
lahf
cwtl
out
or
jge
fs
xor
adc
mov
add
call
xchg
idivb
mov
stc
enter
cli
pop
dec
loope,pn
pop
ret
jnp,pn
std
lret
insb
mov
jns
push
cli
xor
push
dec
xchg
sbb
push
add
pushf
mov
dec
mov
insb
das
test
mov
and
mov
cmp
sub
sub
jb,pt
mov
mov
popf
xchg
je
adc
imul
cltd
mov
push
pop
dec
adc
mov
xorb
lret
stc
in
pop
cmp
mov
setle
or
adc
bnd
sbb
mov
jp
xor
push
pop
fsincos
mov
fldt
daa
adc
fstpl
dec
sbb
lock
sbb
ret
cs
je
jae
mov
adc
scas
adc
add
imul
sub
aaa
enter
jns
nop
add
jle
sub
inc
cltd
lods
imul
xor
sti
pop
int3
sub
sub
push
pop
push
cmpsl
inc
inc
dec
inc
daa
in
test
lods
inc
dec
adc
stos
xchg
aad
jo
fnstsw
mov
mov
add
mov
and
dec
out
gs
nop
test
inc
inc
mov
test
mov
inc
insb
push
adc
mov
sub
push
psubsw
mov
imul
jp
push
mov
sbb
or
lret
jns
cs
test
mov
mov
dec
loopne
in
lcall
sub
jo
adc
and
push
sub
xchg
jnp
test
ds
fists
sbb
jle
pusha
inc
sbbb
jp
jne
cmp
sbb
xor
int
jge
mov
pop
cmc
aad
ret
repnz
lock
call
and
jns
rcrl
iret
sbb
lock
xchg
lcall
push
cmpsl
fwait
jl
jle
pop
pop
das
and
mull
stc
shl
cmc
repz
mov
ret
loopne
loope
xchg
subb
fldt
cltd
test
lock
xor
cmp
insb
lcall
cmp
jmp
enter
pop
mov
pop
mov
adcl
mov
stc
sub
jg
rolb
fisttpll
xchg
xchg
pop
add
mov
sub
test
xor
push
mov
jno
lcall
jge
xchg
stos
pop
cltd
or
outsb
decl
jae
inc
sub
popf
lret
push
lret
sbb
sahf
cmpsl
push
cs
jle
fsts
jne
jae
mov
outsl
std
nop
pop
ds
adc
insl
jg
xchg
cmp
fwait
inc
xor
sahf
inc
hlt
insl
lahf
mov
mulb
aaa
sub
test
int
xchg
out
and
pop
scas
cmp
and
pop
testl
xor
lret
outsl
dec
sbb
push
pop
cmp
pop
sbb
mov
test
add
call
bound
lret
or
mov
fbstp
out
mov
lcallw
pop
jo
jg
int3
sub
sbb
ja
pop
xchg
push
sahf
lret
push
xchg
inc
rcrl
sub
dec
sub
in
adc
ja
lods
icebp
in
adc
push
bound
in
in
ja
out
popa
addl
fcoml
sub
nop
push
push
lea
xor
addr16
out
out
dec
les
jnp
ss
aaa
in
pushf
rcrl
mov
push
test
scas
in
cli
inc
sub
adc
out
mov
pop
xchg
out
or
arpl
mov
call
stc
xchg
lcall
repnz
xor
add
je
cmpl
add
repnz
and
stc
mov
inc
push
jae
stc
insl
sub
adcl
sahf
cmp
or
adc
arpl
rol
sahf
loop
dec
jae
push
in
enter
mov
shlb
es
mov
pop
push
or
cld
in
mov
jge
cltd
stos
xchg
mov
fldcw
flds
lcall
repnz
sbb
je
dec
jno
fmuls
push
fnstcw
lds
pop
sahf
add
cmc
jmp
sbb
cmp
fsub
and
in
cmp
xlat
orb
ja
lret
mov
bound
in
cmpsl
ja
cli
jns
les
out
mov
sub
daa
mov
cmp
cmpsl
sub
mov
add
in
sub
jns
lods
push
out
sbb
jns
jmp
scas
push
xlat
lcall
dec
jns
outsb
cmp
and
cmp
sbb
xchg
shlb
mov
fadds
imul
inc
lds
and
ds
imul
xor
jle
lods
cmp
testl
shl
hlt
ja
das
fimuls
or
out
xor
push
sbb
sub
cli
pop
jnp
and
aam
push
pop
and
mov
outsb
sbb
pop
pop
cli
push
mov
in
std
lcall
jecxz
fnstsw
inc
inc
pop
stos
mov
mov
and
mov
cmp
cmpsb
push
add
jb
mov
adc
ret
test
cli
add
aad
lcall
sub
inc
pop
fisttpll
fsubp
repnz
push
std
dec
lods
and
into
ljmp
aad
inc
xor
cmpsl
mov
pusha
dec
push
movsl
in
jo
xor
inc
pop
inc
imul
dec
je
lcall
jbe
repnz
lea
adc
and
aas
jmp
xlat
xchg
lds
xor
xor
ja
pop
xor
sti
mov
jle
mov
pop
mov
ret
loop
je
out
jno
pop
pop
jns
notl
mov
add
push
js
mov
sub
repz
mov
idiv
sub
jecxz
cmpsb
jb
test
scas
shlb
pop
adc
sbb
test
xchg
and
ss
xchg
sbb
in
mov
xchg
repnz
sub
adc
push
mov
ret
cmp
or
or
xor
xor
loope
cmc
add
add
fcompl
mov
mov
mov
aaa
lock
and
or
jae
das
and
push
fstpt
sbb
insl
fisubl
inc
lock
int
popa
popa
push
into
mov
ja
fs
test
xchg
outsl
jne
movb
test
out
push
shrb
and
mov
sbb
bound
jg
xor
imul
mov
ljmp
xchg
xlat
out
cltd
and
jae
cmp
aam
lock
push
mov
push
std
jns
jg
and
out
aad
mov
pop
ret
aaa
cmp
aam
mov
lods
lods
mov
push
sub
jg
arpl
fsubl
pop
pop
in
stc
adc
mov
push
loopne
sbb
dec
rcr
and
push
push
inc
mov
aaa
mov
xchg
sub
sub
in
jbe
mov
lcall
add
jns
loope
ljmp
hlt
mov
aaa
cmp
pop
ds
push
xchg
icebp
rcll
mov
mov
adc
push
fsubs
pushf
cltd
xchg
lret
push
sbb
or
jb
loope
scas
pusha
test
dec
cli
in
test
push
push
jne
add
mov
flds
add
sbb
jle
pop
sub
cmp
into
in
push
sbb
insl
lcall
xchg
fdiv
and
jo
outsl
into
aad
mov
cs
push
sub
xchg
xor
loopne,pt
pop
int
int3
jae
and
into
and
notb
insl
xor
cmp
dec
lock
scas
inc
sub
push
and
or
jle
repnz
pop
jmp
pushf
icebp
add
es
add
lods
insb
mov
xor
dec
les
add
mov
nop
sub
test
jo
fidivrl
sbb
cltd
mov
xchg
adc
shl
dec
jns
xchg
stc
sub
fmulp
push
ja
ret
xor
cli
jno
sbb
scas
loop
sbb
loopne
sub
mov
inc
repnz
fs
adc
or
sbb
mov
mov
lcall
add
adc
outsl
jne
loope
stos
negl
cli
lods
push
mov
sbb
jg
lcall
xor
les
pop
push
pop
or
sbb
inc
mov
cmp
cmp
scas
jg
lret
jmp
push
shlb
sbb
cli
jg
jge
repnz
jbe
lds
add
jbe
insl
mov
dec
mov
mov
cli
jecxz
jmp
pop
cmp
out
inc
xchg
xchg
and
test
icebp
int3
and
inc
jle
aaa
repnz
pop
xor
scas
shll
lcall
add
cmp
jnp
arpl
adc
addr16
cmp
sbb
and
add
lret
mov
cld
cmpb
fcoms
loop
adcb
xchg
mov
or
inc
fdiv
mov
ret
and
jne
or
mov
je
jo
add
into
mov
mov
scas
cmp
lret
adcb
inc
mov
ljmp
sbb
subb
jge
je
xchg
cwtl
mov
push
push
mov
mov
lcall
push
cmpb
ret
aam
xor
dec
mov
adc
xor
lahf
flds
xchg
mov
sahf
push
xchg
or
xor
xchg
inc
mov
lahf
loope
insl
lcall
adc
jb
dec
out
cmp
jb
cmp
in
orb
fdivp
pop
mov
ja
push
mov
xor
subb
mov
push
mov
fadd
je
add
andb
mov
xor
cli
dec
cmp
lcall
mov
inc
jl
jae
popf
xor
pop
test
rcl
mov
mov
repnz
fmuls
sbb
or
test
lock
addb
fbld
dec
fsubs
inc
out
push
mov
cmp
sar
incl
adc
xor
cmovo
jle
inc
ret
xchg
loopne
adc
and
decl
adc
fisubs
cltd
or
dec
inc
idivb
andb
mov
cmpb
push
hlt
orb
fistpll
testb
int3
inc
lds
test
in
push
inc
dec
mov
lret
fidivrl
ss
pop
xchg
jae
js
addr16
or
outsl
cmpsl
or
adcb
cltd
pop
ror
arpl
sbb
sub
adc
fbld
out
dec
in
sub
leave
mov
or
mov
or
js
mov
pop
pushf
andl
bound
cmpb
push
mov
gs
addb
dec
lret
pop
call
pop
fildl
pop
loop
and
mov
cmc
insw
xchg
sbb
mov
sub
loop
xchg
imul
arpl
ja
pop
cmp
add
les
stos
sbbb
insl
ja
pop
aas
stos
inc
push
xorb
push
mov
sub
or
punpckldq
and
fldcw
cmpb
jecxz
pusha
add
cld
mov
add
jg
and
mov
into
jo
sub
fistps
and
pop
lea
inc
cli
in
lret
loop
fiaddl
ret
jb
loope
jnp
push
or
mov
mov
dec
movb
adc
or
cmp
inc
sub
pop
clc
jne
and
andb
jp
inc
push
addb
shlb
lods
lds
xor
and
jnp
popa
scas
lea
pop
loop
lods
jg
cmpsl
inc
out
inc
dec
repnz
jmp
enter
data16
scas
push
jnp
jno
mov
jg
push
dec
inc
xor
mov
iret
push
fwait
mov
mov
mov
xor
xor
loop
stos
fstps
mov
mov
push
ja
movsb
add
sub
inc
data16
xchg
xlat
ja
ss
int
xorb
sbb
cmpl
nop
inc
mov
jg
jnp
push
push
sub
jmp
jo
xor
iret
dec
xor
add
test
and
xor
add
popf
lea
clc
pop
mov
arpl
push
into
sbb
adc
cmp
imul
pop
lret
inc
js
xor
jl
jmp
sub
outsl
lods
mov
jae
subl
je
add
movsb
jg
shrl
loop
repz
xlat
adc
not
mov
jecxz
jo
push
stc
dec
xorb
jle
jae
cmpsl
ja
pop
lds
out
daa
pop
inc
fldln2
andb
jmp
fisubs
mov
dec
push
or
push
push
push
mov
xor
cltd
sbb
lret
jl
lods
leave
pop
nop
xor
push
pop
adcb
shlb
enter
es
pop
je
arpl
scas
xor
push
mov
scas
push
and
inc
popa
incl
mov
outsb
ss
or
pop
test
je
and
andb
jp
dec
mov
xchg
outsl
adc
subb
inc
js
push
inc
out
add
jg
orl
xor
mov
add
or
fiaddl
add
imul
sub
subb
test
inc
cmp
rclb
inc
mov
xchg
jg
mov
fisttpl
mov
push
aad
xor
clc
xchg
push
shlb
in
jo
gs
inc
shr
sub
jae
pop
cld
repz
cmp
add
imul
lods
inc
addr16
cmc
out
xchg
rclb
pop
pop
adc
xchg
push
ret
sub
adcb
mov
sbb
ret
mov
and
mov
cmpb
mov
adcb
mov
and
out
pop
mov
inc
mov
adc
jg
jecxz
jo
mov
outsb
jp
popa
addb
repz
push
loope
add
jmp
cmpb
cmpsl
outsb
cli
pop
adc
and
inc
les
lock
lret
jmp
sbb
cmp
mov
add
orb
sub
pop
sbbl
sbbl
imul
flds
push
into
dec
jle
sar
push
rol
or
mov
sbb
das
movsl
out
xchg
push
jg
scas
add
add
push
mov
xchg
movl
lret
xor
bound
adcb
lds
jle
adc
stc
xor
mov
addb
sub
popa
or
or
dec
cmp
subb
js
or
cld
test
sub
and
ljmp
xor
loop
in
subb
or
mov
stos
or
push
pop
xchg
xor
xor
sub
xchg
cmpb
aad
jns
insb
inc
incl
sbb
dec
je
jns
adc
adc
out
xchg
push
or
xor
xchg
jle
ret
pop
ret
mov
rcrl
cmp
add
imul
mov
and
int
or
cmpb
imul
inc
xor
add
mov
sbbb
mov
lcall
nop
movl
mov
sub
rolb
jecxz
adc
mov
orb
xor
adcb
pop
and
mov
xor
scas
or
xchg
icebp
seto
sbb
iret
mov
sbb
insb
jnp
je
mov
pop
xchg
sbb
jp
outsl
stos
sub
cmpsb
shlb
inc
adcl
outsb
sub
addb
jmp
jae
loope
je
pop
int
test
je
popa
fistl
ret
jecxz
or
add
stos
loope
lret
mov
mov
cli
xchg
ror
jb
adc
add
movsb
repnz
es
cmpb
xlat
sbb
sti
loop
push
jl
mov
das
insl
push
sbbb
inc
or
sub
gs
sbb
cmpb
pop
cmpsl
repnz
sub
mov
jl
out
mov
and
rol
dec
or
ja
or
out
repz
je
push
sahf
movsl
mov
and
push
jg,pn
jle
cmpb
jae
lds
xor
incb
sahf
testl
adcb
into
cmp
xchg
test
or
adc
push
call
push
dec
jno
popf
sbb
stc
sbbb
inc
cmc
jae
inc
mov
neg
arpl
stos
fsubl
ss
cltd
pop
je
enter
test
and
and
lcall
out
loop
std
push
mov
jg
and
not
jae
jo
lock
lcall
les
sbb
imul
out
and
sub
xchg
int
out
ja
dec
sahf
lahf
and
mov
adc
add
cli
inc
cmp
out
jns
test
lcall
outsb
cmc
and
out
push
mov
push
push
addr16
cmp
jle
clc
cli
push
es
cmc
andb
push
out
inc
push
das
jne
push
and
test
xor
push
jle
jb
cmp
jl
xchg
xor
adc
sti
dec
and
and
cltd
pop
mov
xchg
mov
lds
je
lods
add
stc
mov
ljmp
insb
pop
sub
mov
fdivr
push
push
jne
sbb
inc
xchg
pop
inc
sbb
insl
sbb
sub
and
movhps
mov
sbb
out
lea
ds
lahf
xchg
ret
pop
arpl
mov
insb
xlat
ret
sbb
imull
or
sbb
popf
inc
or
jmp
cmp
add
lret
mov
popa
or
fcmovb
sbb
sti
mov
lea
mov
push
dec
add
arpl
mov
and
mov
divl
adc
outsl
cltd
cmp
cwtl
dec
dec
sub
mov
or
push
test
cmp
ret
in
cltd
ds
sub
mov
lcall
std
xchg
aam
mov
xchg
filds
rcrl
pop
sub
xor
or
hlt
out
pop
bound
and
pop
pop
mov
outsb
mov
mov
and
mov
int
rorb
push
ja
or
stc
dec
es
outsl
pop
hlt
imul
data16
push
or
insl
adc
sub
stc
sub
mov
movsl
cmpsl
psrlq
push
std
out
rcrb
mov
sahf
push
xor
ret
xor
fisubs
sbb
ds
add
test
push
inc
mov
aas
or
jecxz
test
jb
mov
popf
js
int3
push
pop
xorl
cli
out
pop
aam
push
popf
leave
imul
test
sub
pop
jp
lods
inc
test
cmpsl
push
sub
jp
sbb
ficomps
lret
jecxz
cmc
scas
mov
imul
popf
fst
bound
gs
adc
jmp
lret
cmp
pusha
adc
xchg
cmp
scas
pop
shlb
lea
sbb
in
sub
js
mov
pop
mov
mov
and
addl
icebp
push
ret
pop
enter
pop
cs
mov
insb
adc
lods
or
test
arpl
fisttpl
lods
jo
in
cwtl
add
xchg
xchg
jg
mov
dec
pop
shl
jle
aaa
cmp
push
test
sub
call
ja
ret
enter
sahf
xor
andl
add
rcrl
sub
faddl
add
pusha
mov
jbe
cld
inc
hlt
xchg
test
test
aad
cli
inc
dec
sbb
mov
add
xchg
enter
and
xor
int
call
aam
adc
inc
fmul
push
xor
in
arpl
jle
fimuls
pusha
pop
cltd
sbbb
fsubs
les
and
push
fsubp
inc
insl
andl
inc
bts
call
ss
pop
ds
mov
arpl
mov
adc
loopne
adc
mov
cmp
aaa
inc
xlat
and
cltd
pop
inc
lahf
or
cmp
cmp
lock
mov
int3
jg
flds
popa
cmp
or
add
test
bound
outsb
inc
enter
outsl
or
xor
fistpl
ja
push
cmpsb
jg
clc
arpl
mov
jg
pop
sbbb
ror
push
daa
mov
cltd
addr16
pop
lret
xchg
mov
push
pop
repnz
sub
cmp
rorl
js
mov
adc
cs
daa
or
imul
insl
test
lcall
stos
cwtl
fbstp
pop
inc
lcall
xor
and
xorb
jae,pn
iret
lcall
xchg
push
inc
call
pop
mov
cs
and
xor
lret
mov
negl
pusha
and
mov
add
imul
test
incb
mov
add
pop
adc
jo
std
mov
stos
aad
pop
lret
mov
sbb
rcrb
add
fsubs
mov
xchg
aam
push
fldcw
jo
jp
loope
mov
imul
test
and
scas
or
insb
mov
push
lcall
jbe
repnz
push
movsb
jle
out
sub
xchg
xchg
lret
loop
pop
test
hlt
test
insb
cltd
bound
cli
in
aaa
ds
push
dec
sti
jo
add
xor
sub
loope
or
sub
dec
jns
int
dec
repnz
pop
fnsave
xor
filds
std
xchg
js
ja
stos
notl
mov
jp
lea
fs
add
mov
mov
roll
cmc
in
push
daa
out
pushf
push
test
mov
adc
sub
cld
mov
lods
push
ja
leave
mov
or
xor
into
hlt
ja
sbb
enter
in
mov
push
push
movsl
iret
jbe
addr16
pop
push
push
jb
dec
out
mov
imul
pop
jbe
adc
aad
mov
sbb
ds
jo
sub
jns
mov
mov
jns
hlt
aas
jp
jo
jle
rcl
lock
ja
push
nop
xchg
in
fstl
cltd
ret
or
cld
je
push
ja
lret
mov
insb
add
adcl
inc
dec
sbb
outsl
lcall
into
sub
mov
jl
lcall
lods
ljmp
mov
testb
push
mov
ret
mov
movsl
movsb
push
fdivrs
push
in
scas
add
cmp
ds
cmp
push
cld
ljmp
leave
sub
hlt
setge
xchg
and
cltd
dec
and
loope
repnz
mov
jge
pop
mov
shlb
stos
push
enter
insl
orb
insb
mov
push
sub
jae
lock
mov
les
inc
pop
es
push
and
sub
ss
push
jge
mov
out
mov
xchg
repz
pop
xchg
or
push
or
lret
jmp
inc
outsl
lcall
in
sub
shll
sub
sub
add
std
mov
and
jbe
add
cld
ljmp
jp
dec
mov
inc
mov
xor
scas
xor
xorb
lcall
repnz
insb
lret
xor
rcrl
test
or
mov
mov
sahf
xor
jmp
cmp
lret
mov
pop
push
mov
xor
test
ja
mov
and
test
jge
iret
fldt
adc
lret
ja
repnz
fldcw
ficoml
sti
jecxz
cmp
add
andl
dec
inc
mov
cmp
ja
scas
sub
jl
xchg
sub
fisubrl
test
je
stc
sar
push
adc
push
mov
adc
mov
jp
pop
jmp
pop
sub
loopne
jmp
xchg
lea
xchg
fmul
jnp
pop
cmpsl
jg
cmpsb
xchg
mov
loop
sbb
out
int3
imul
xchg
mov
push
push
mov
mov
push
test
xor
leave
scas
push
push
xchg
lcall
idivb
mov
mov
jo
repnz
imul
mov
in
cltd
pop
push
movsl
addl
inc
mov
icebp
sahf
push
jo
aas
jae
dec
rcrl
ss
pop
mov
fbstp
andb
ljmp
jecxz
mov
cmp
sarb
clc
adc
mov
cltd
pop
das
imul
pop
jp
mov
stos
jbe
fs
repz
les
dec
leave
or
xchg
daa
jge
jge
jo
jl
cmc
add
arpl
enter
lods
jg
sti
push
outsl
js
push
xchg
stc
inc
int
popa
adc
enter
xor
loopne
stc
imul
or
sbb
arpl
in
mov
or
push
fidivl
adc
scas
mov
movsb
push
adc
rolb
ret
out
nop
xor
shll
inc
outsb
insb
push
push
sarl
mov
sbbb
test
aaa
ljmp
cmp
fst
mov
inc
sbb
roll
ret
push
push
mov
je
sbbb
inc
mov
add
and
pusha
push
fidivrs
fsub
push
adcl
es
hlt
push
pushf
push
mov
ret
inc
out
push
pop
jo
pop
out
dec
add
lea
in
test
jae
dec
cmp
nop
cmp
insb
add
mov
cltd
push
fs
call
sub
pop
push
cli
daa
sbb
ss
or
and
add
repnz
mov
dec
jns
mov
mov
sub
adc
mov
mov
xlat
dec
movsb
adc
mov
jb
hlt
xlat
ss
insb
insb
dec
shll
lcall
jne
pop
pop
jns
cltd
cld
add
and
outsb
push
sti
outsb
sbb
cwtl
in
inc
std
aas
xchg
bound
xchg
pushf
xor
lock
jnp
int3
pop
fisubs
mov
sub
movsb
sbb
xor
mov
nop
jl
dec
bound
dec
outsb
enter
stos
jo
cltd
jo
cmpl
xor
les
pusha
arpl
int3
push
add
xchg
orl
test
testl
mov
les
xor
inc
push
push
jecxz
stos
push
shrb
in
arpl
or
or
enter
test
mov
lcall
xchg
push
jbe
sar
jmp
repnz
mov
popa
pop
bound
mov
ja
cwtl
roll
dec
cli
ss
mov
jo
mov
or
addr16
inc
xor
fcmovnbe
push
inc
xchg
xchg
les
mov
mov
push
sub
adc
movsl
ds
outsl
adc
bound
sub
xor
lahf
cmp
imul
push
inc
add
push
ja
aas
pop
and
jmp
adcl
push
lcall
clc
adc
out
cmp
sbb
ja
sbb
cmp
mov
lcall
xchg
sbb
ss
sbb
or
leave
cs
lahf
repz
rcr
in
leave
push
dec
push
sub
daa
shll
je
jns
enter
mov
stos
jno
jae
repnz
mov
xchg
test
dec
add
sbb
push
test
cltd
xchg
sahf
test
mov
andl
jb
inc
in
jns
pop
or
xor
jmp
xchg
sub
leave
lcall
imul
pop
cmpsl
push
outsl
fdivl
dec
xchg
sub
adc
jo
and
lds
lds
push
mov
test
add
add
ret
xchg
mov
test
add
mov
lds
cmpsl
inc
cmpsb
ret
movsl
xor
dec
aad
jle
xchg
cltd
mov
mov
sbb
mov
push
test
jle
imul
jae
mov
mov
clc
pop
push
mov
jo
es
sub
sub
cltd
in
sysenter
jbe
mov
mov
into
jns
cltd
mov
adc
mov
aaa
pop
jo
xlat
push
mov
lcall
jb
test
nop
push
data16
add
pop
inc
sbb
mov
std
je
lock
mov
jno
jnp
out
sbb
call
shrb
and
xchg
xor
inc
mov
or
js
pop
jae
lcall
sub
push
jbe
repnz
mov
bound
push
stos
jp
inc
pusha
xor
push
int3
call
and
sbb
mov
mov
clc
cs
in
rcrl
xchg
mov
jbe
in
mov
push
sbb
mov
inc
or
jge
jmp
lock
cmc
enter
and
mov
fildll
pop
outsl
and
push
sub
and
fsubrs
mov
add
loope
sub
fld
xchg
adc
inc
dec
out
addr16
inc
pop
aam
rclb
aas
and
ss
or
pusha
jo
xchg
inc
loop
lds
js
lock
ljmp
cmp
dec
jns
jnp
das
js
bound
in
bound
dec
outsl
mov
arpl
cmp
jle
xchg
loop
rol
lods
aas
arpl
and
cmp
cmpb
dec
jl
adc
pop
lahf
xor
mov
ror
push
dec
daa
out
andb
xor
mov
stos
dec
jnp
jbe
push
test
jo
sub
mov
sbb
pop
ret
or
imulb
subl
inc
stos
and
popf
roll
shlb
mov
xorb
mov
ds
stos
mov
push
loop
adc
sbb
mov
aam
pop
ret
in
jg
cld
lods
jae
lret
pop
movsb
sbbb
iret
sub
lahf
lds
mov
aad
subb
call
cmp
out
je
aas
repz
ret
pop
scas
adc
cltd
subb
xorl
repz
test
nop
jl
leave
idiv
pop
or
cli
jns
and
cmp
popl
andb
stos
inc
jge
inc
clc
sbb
mov
push
enter
cwtl
mov
jns
dec
jp
adcb
pop
xor
pop
push
sti
mov
jnp
bnd
xchg
push
jle
jge
add
sub
cmpsl
addb
xchg
sti
lret
adc
mov
pop
dec
outsl
add
cmp
stc
mov
mov
lods
in
test
mov
add
movl
or
cmp
ret
sub
dec
into
andb
iret
divb
mov
popf
xor
dec
xchg
pop
add
test
imul
int3
andb
jmp
lcall
push
orb
cmp
notb
inc
data16
orb
push
subb
push
outsb
or
lock
sbb
dec
gs
cmpsl
push
out
sbb
cmp
or
cmp
mov
push
push
ljmp
xor
sub
loopne
int
jae
fistl
stc
push
test
es
mov
sti
movsl
add
insb
adc
andb
les
out
add
out
pusha
mov
sbb
js
orb
das
ret
jg
in
sub
adc
sti
cltd
xlat
ds
pushf
push
cmp
mov
imul
leave
dec
pushf
cmc
roll
ficoml
pop
test
jge
mov
insb
dec
adc
shl
xor
mov
shrb
sbb
add
out
orb
xor
shll
xor
pop
fs
add
adc
mov
add
adc
repz
push
out
mov
xor
sbb
mov
orb
test
int
jmp
test
pop
sub
jmp
xorb
cmpsb
fbstp
xchg
pop
jb
fldl
mov
pop
cwtl
fs
cmp
inc
outsb
ret
jp
cmp
cmovle
shll
push
sbb
ss
outsl
cmp
sub
pop
dec
add
int3
cmp
outsl
pop
xchg
mov
pop
xor
jmp
popa
loope
adc
cmp
push
addl
add
inc
mov
in
out
dec
in
js
pop
jb
movl
mov
mov
inc
jo
cmp
out
or
negb
sub
rcrb
cmp
lcall
jnp
aaa
gs
shrb
lret
adc
inc
inc
fs
rcr
dec
sbb
inc
pop
pop
cmpb
mov
sahf
js
orb
int
or
loope
xchg
mov
sahf
into
sti
je
dec
xor
out
push
subb
mov
loopne
push
cld
pusha
inc
dec
push
rcll
test
jno
call
xorl
jmp
scas
fs
push
cli
sahf
in
mov
jge
es
pop
std
xchg
ljmp
lret
or
rcrl
mov
push
lock
dec
mov
lret
sti
jno
lahf
in
jnp
mov
mov
out
adcb
jnp
dec
sub
stos
fcomip
daa
dec
jmp
push
or
cmpsl
lcall
jno
mov
adc
cmp
sbb
sbb
dec
push
ljmpw
jmp
adc
xor
adc
cmpb
sahf
adc
inc
mov
subb
or
fisttpl
fiadds
sti
aam
inc
adcb
aad
mov
add
sub
ret
movsb
or
jmp
inc
mov
es
out
out
xor
jg
pop
arpl
je
in
xor
dec
iret
mov
or
cli
sbb
sbb
jo
jle
mov
inc
aaa
mov
add
push
cltd
js
mov
lahf
mov
jmp
mov
jge
push
movsb
fcoml
xor
xchg
nop
loopne
fadds
testl
xlat
xorb
faddl
cltd
xor
arpl
pop
pop
in
pop
clc
add
sub
sub
andb
adc
cmpsl
clc
in
cmpb
push
xorb
mov
addb
ret
movl
jnp
ja
scas
shlb
adcb
fbstp
push
or
mov
adcl
cmc
mov
dec
negl
xlat
jecxz
notb
adc
inc
aad
pop
shl
jl
dec
sub
dec
rcrb
cli
xor
ret
fs
push
xchg
clc
mov
sbb
je
mov
sti
mov
aad
sbbl
jnp
jno
scas
pop
inc
clc
sub
les
imul
call
cmp
sbb
add
push
and
nop
movsb
into
jl
jg
out
loopne
stos
mov
xchg
push
and
mov
push
jbe
hlt
xchg
and
push
mov
das
push
pop
push
xorb
or
andb
bound
cmp
testb
cmpb
adc
push
fdivrl
cmp
mov
inc
xor
addl
push
xor
dec
mov
ret
cmpsb
ljmp
inc
sbb
xorb
insb
xchg
or
jg
int3
add
inc
dec
stos
dec
cmpsl
xchg
cmpb
sbb
dec
add
xorb
nop
enter
pusha
pop
imul
adc
jp
sbb
addb
push
add
pusha
fisttps
nop
ds
dec
fsubs
mov
bnd
sub
mov
and
ds
sarb
sub
mov
lret
push
imul
enter
das
and
mov
pop
fs
ror
out
test
jg
inc
das
xchg
leave
rcl
sub
adc
xorl
xchg
and
aam
loope
and
jg
pop
pop
adc
loop
and
and
push
adc
ljmp
rcl
sub
push
les
or
movsb
push
ds
mov
or
lods
ret
out
adcb
xchg
xchg
lcall
or
aas
add
fwait
push
mov
hlt
mov
fisubl
inc
cmpl
gs
adc
sub
push
cvtps2pi
inc
jb
push
popa
popf
mov
xchg
mov
in
xor
pop
dec
aam
mov
pushf
cmp
adcb
inc
push
cmpsb
xchg
sub
xorb
incl
sahf
push
test
stc
jae
or
xchg
dec
jle
mov
sbb
xchg
sub
jle
push
in
or
popf
sbb
scas
pop
jecxz
cmp
or
mov
loop
jecxz
fisttpll
incb
subl
xchg
sbb
gs
push
lret
lcall
mov
and
and
in
addl
out
xchg
in
pop
ss
imul
and
jns
test
insb
out
insb
sub
push
sbb
test
cli
lds
ret
and
jg
into
xchg
push
ja
inc
rcll
xor
les
test
int3
sbb
mov
out
pop
adc
inc
and
xor
fimull
lcall
fisttpll
xchg
sti
mov
es
lods
xchg
out
xor
fnstcw
xchg
pop
cmpsl
sbb
pop
mov
mov
jbe
cltd
adc
xchg
jo
cmpsl
sahf
jae
addb
loop
and
dec
fdivr
incb
fwait
add
or
mov
mov
jnp
rcrb
ret
test
insl
ljmp
xchg
sub
pop
out
movsl
mov
jecxz
jmp
mov
mov
sbb
mov
inc
mov
add
lcall
xchg
lea
sub
and
and
popf
std
repnz
jns
sub
xchg
jnp
push
pop
ret
jg
fidivs
xchg
andb
mov
loope
or
mov
sbb
add
imul
iret
jbe
jno
mov
or
shl
or
js
incl
xor
mov
jnp
das
mov
call
inc
mov
jl
inc
pop
push
push
bound
into
xor
mov
sbb
sti
add
gs
popa
sbb
pop
inc
push
sub
pop
xchg
idivb
sub
das
xor
shl
sbb
push
and
pusha
xor
ret
popa
xchg
add
rcll
pusha
dec
jb
cwtl
and
out
mov
lcall
jo
xchg
filds
stos
push
pop
adc
sbb
push
jne
sbb
testb
jnp
stc
imul
notb
sti
add
fs
insb
jecxz
push
enter
pusha
jo
push
adc
pop
push
cli
cmp
inc
in
sub
xor
repnz
xor
xchg
inc
out
je
in
jmp
std
js
xchg
fimull
stos
fldl
ret
xchg
adc
push
lcall
cltd
fiadds
int3
push
or
and
popa
cwtl
jp
incl
aaa
jle
cmp
dec
dec
push
add
jne
sbb
lret
add
fs
mov
cs
sahf
repnz
sbb
cld
sub
dec
lods
sub
cmp
je
loope
enter
push
cmp
inc
push
push
popa
dec
cwtd
je
shll
fimuls
sbb
cltd
push
scas
and
xchg
jmp
int
loop
xchg
outsl
adc
xchg
stc
movsb
stc
mov
adc
push
mov
jg
aaa
aas
sbb
push
pop
xchg
xor
xchg
pop
xlat
add
mov
lcall
mov
sbb
push
cltd
sbbb
or
test
dec
xchg
lcall
push
dec
xchg
mov
cli
jle
xchg
pop
xor
push
sysexit
and
mov
stc
sub
sub
fisubl
add
jae
adc
repnz
popf
push
jle
fcom
pop
sahf
mov
jge
mov
pop
adc
sbb
adc
add
scas
loop
mov
xor
ret
xchg
pop
xchg
movsb
and
out
xchg
and
call
mov
push
xchg
iret
data16
fistpl
sti
stc
adc
popa
fld
stc
push
pop
lcall
jne
mov
sbb
ss
jecxz
imul
mov
pop
cwtl
add
stc
jo
test
add
mov
sbb
roll
lods
add
mov
addl
jne
imul
cmpb
roll
xchg
xchg
sub
mov
test
mov
outsl
xor
and
ljmp
sub
mov
xchg
js
es
lret
jle
test
push
in
dec
test
dec
sbb
fs
xorl
stos
ret
push
jge
jb
adc
in
loop
mov
repnz
scas
int3
or
lcall
pop
push
xchg
mov
dec
pop
mov
or
cmpsb
xorl
icebp
push
ret
sbbb
fldl
jo
fs
adc
sti
idivl
outsl
sbb
movsb
enter
arpl
jp
xchg
nop
add
mov
rcll
jo
das
fcompp
push
xlat
add
out
jnp
sub
xchg
jbe
jl
jle
inc
js
pcmpeqd
pop
and
xor
inc
mov
lret
sbb
test
repnz
xlat
push
nop
lret
lock
xchg
sbb
sbb
mov
jg
das
enter
in
fnstcw
and
xor
sbb
or
xor
jmp
ret
int
add
sbb
mov
clc
aaa
adc
pusha
jg
lret
sub
dec
jmp
mov
add
shrl
xor
fcomps
jne
sahf
out
xor
icebp
lret
in
mov
in
sub
lcall
test
outsl
sbb
mov
jnp
jns
gs
inc
aas
fprem1
xchg
cltd
adc
jae
fisubrl
cwtl
fildl
push
fsubrl
sbb
pop
sbb
ret
or
ds
in
push
mov
and
pop
and
lret
aam
out
cmp
test
add
adcb
icebp
dec
call
cltd
dec
xorb
inc
mov
vpminub
xchg
fldl
mov
dec
xchg
imul
xchg
stc
xchg
cmpb
cmp
sub
xchg
out
std
inc
xorb
mov
add
fstpt
adc
xorb
rep
outsb
pop
fisttps
xor
sub
int
or
mov
stos
outsb
xchg
push
jmp
sub
lods
in
addb
movsl
stc
jne
dec
insl
xchg
mov
xchg
or
dec
or
test
outsb
outsl
cmp
mov
mov
sti
insb
cmp
mov
inc
and
loop
sub
xchg
cs
repz
popl
fsubs
fldl
mov
push
andb
push
dec
sbb
push
mov
or
stos
dec
mov
arpl
adc
mov
mov
in
and
out
push
mov
out
popf
add
out
cmp
add
rol
dec
clc
push
xchg
orb
nop
loop
ret
jno
pushf
sub
add
dec
dec
xchg
add
imul
pop
leave
clc
add
xchg
mov
dec
mov
lock
xlat
scas
data16
pop
push
cmpsb
push
pop
jae
mov
dec
inc
cmp
sbbb
shlb
stc
mov
jne
pushf
stos
or
mov
cmp
sbbb
mov
stos
outsb
cmp
sbb
adc
inc
movsl
dec
aam
roll
into
dec
andb
mov
push
jae
outsl
xchg
and
xchg
addb
xchg
fmuls
sub
loop
push
lret
popa
addb
xchg
and
sti
in
mov
cwtl
pop
adcb
rorb
xorl
mov
hlt
movsb
mov
addl
pop
int
jge
or
inc
out
add
lock
addr16
sub
cmp
xor
or
fwait
pusha
and
mov
or
push
test
out
xchg
shll
lcall
jle
mov
dec
cmp
pop
mov
adcb
dec
sahf
cmp
sub
pop
lock
adc
jns
jecxz
hlt
jae
fiaddl
lahf
bound
orb
fstpl
jp
orb
movsb
push
hlt
jl
lods
sbb
pop
mov
mov
cwtl
fimull
sub
ljmp
and
xorb
pushf
out
clc
repnz
inc
cltd
mov
addb
mov
or
dec
rclb
addb
popa
cmp
je
and
cmpb
or
jl
ret
push
sub
aam
div
ja
sub
icebp
cmp
jb
sub
arpl
mov
cmpsb
push
out
sub
jg
jmp
or
cmp
dec
inc
loop
cli
sbb
jne
jb
rcrl
pop
inc
loope
js
and
fs
imul
push
rolb
pop
int
fidivrl
cmp
mov
inc
sbbb
inc
mov
lock
sub
andb
out
cmp
inc
icebp
sub
jle
adcb
sub
and
fnstcw
popa
test
and
jle
sbb
push
mov
daa
jb
xchg
subb
movsb
in
dec
imul
sbbl
mov
ret
pop
jp
adcb
pop
leave
adc
incl
loope
iret
mov
hlt
sub
jl
sbb
jecxz
pop
fcoms
mov
pushw
push
ds
adc
mov
pusha
das
mov
js
dec
imul
lods
sbb
sbb
and
cmpsb
sub
stos
int3
arpl
sbbb
xchg
sbbb
dec
int3
ret
loopne
cwtl
daa
popf
push
xor
and
or
pop
mov
push
add
jmp
xor
cmp
gs
mov
addl
setb
jno
movsl
jmp
dec
adc
repnz
ljmp
flds
jge
daa
adcb
push
loopne
dec
outsl
stc
ret
mov
add
or
or
push
lea
in
enter
ljmp
or
ds
mov
jo
or
pop
fsubl
repnz
daa
mov
jge
mov
xorb
mov
push
lret
and
push
out
sub
mov
pop
or
pop
cmp
stos
shl
jle
leave
xchg
ficompl
orb
inc
lahf
loopne
and
xor
pop
addb
jno
std
and
xorb
cwtl
push
sub
outsb
fcoms
xchg
ljmp
jge
pop
and
subb
lahf
push
pop
std
or
outsb
jp
and
xorb
in
jbe
xorl
xor
pushf
push
inc
in
dec
leave
sahf
in
sbbb
pusha
out
test
xor
ds
cmp
insb
inc
lds
dec
subl
sahf
jle
stos
mov
jnp
xchg
xorb
std
push
andb
dec
ret
sbb
adc
xchg
out
andb
fidivrl
mov
lret
cmpb
insl
test
fs
jg
mov
stos
inc
call
sbb
inc
push
jns
push
les
lahf
lds
addb
xchg
iret
sub
xorb
pop
jnp
outsl
push
pop
cmp
adc
subl
orb
xchg
adc
lds
cmp
cmp
int
int3
bound
addb
or
test
aam
push
mov
jns
mov
add
adc
and
jo
imul
jle
sub
jmp
inc
orb
adc
pop
inc
loopne
mov
mov
call
pop
fsts
adcb
aad
adc
andb
mov
jl
jg
mov
pushw
or
ds
lret
push
sub
cwtl
xor
pop
mov
push
je
dec
push
faddl
xchg
or
push
inc
sub
nop
test
sub
testb
scas
pop
xor
fnstenv
and
cld
jae
inc
test
lahf
and
push
andb
mov
xorb
and
hlt
pop
roll
in
jnp
add
dec
mov
and
cltd
add
push
adcb
pop
sbb
filds
js
int3
mov
push
and
jae
sahf
hlt
mov
addb
pop
mov
sbbb
test
cmp
mov
fs
test
or
mov
shr
and
xchg
mov
mov
roll
or
dec
mov
fildl
adc
into
adc
sub
mov
test
int3
pop
pop
rorb
push
jle
jmp
add
faddl
jns
adc
lock
or
xchg
inc
dec
mov
xchg
add
sub
call
and
enter
test
mov
test
and
sbb
sub
outsl
insb
lods
jecxz
adc
movsl
std
mov
test
imul
or
and
or
mov
enter
sbb
dec
jb
outsb
rolb
push
inc
mov
subb
mov
test
sbb
pop
or
sbb
cmp
lods
addl
sti
lahf
ljmp
jl
add
jg
mov
ret
aad
or
inc
into
mov
push
jge
je
xorb
lock
push
stc
int
xchg
inc
gs
repnz
pop
cmpsb
aas
mov
imul
add
andb
jnp
lret
cmp
int3
or
sub
mov
xchg
das
mov
mov
push
xchg
sbb
cs
fildl
mov
fwait
ss
and
test
aaa
mov
mov
subb
les
int
sub
adc
sbbb
fadds
pop
imul
xchg
vmaxpd
lea
aaa
jg
mov
sub
mov
cmpsb
addb
xor
inc
mov
add
mull
cmc
or
ja
pop
inc
insb
stc
mov
rorb
jae
jo
add
andb
cltd
subb
pop
lea
leave
adcb
loope
js
lcall
das
test
sub
push
lret
add
es
pop
shll
and
lret
out
xlat
jg
push
cltd
out
hlt
jo
cmc
aad
mov
ret
dec
mov
xor
cmp
mov
gs
cmp
mov
cmc
sbb
mov
sbb
inc
nop
stos
xor
add
push
sbb
mov
jae
cwtl
and
cmp
inc
mov
mov
outsb
add
inc
pop
mov
imul
cmp
enter
jae
xchg
loopne
sub
andb
cltd
aaa
testb
sub
ret
pop
bound
shrl
jge
and
adcb
mov
push
scas
and
scas
cmp
jb
fisubrs
aam
xchg
mov
rorl
xchg
fists
popf
push
xchg
aad
sti
popf
int
into
ljmp
stos
mov
adc
stc
xchg
and
or
sbb
jo
jae
arpl
je
std
push
mov
sub
mov
push
and
mov
cmp
mov
test
add
inc
adc
jo
cmpsb
rolb
in
mov
aam
sub
cmp
sbb
mov
xrelease
xlat
stc
inc
sbb
dec
idivl
fists
jnp
stos
cwtl
test
roll
pop
jb
jecxz
and
fadd
inc
jae
sub
pop
cs
pop
and
lcall
mov
jae
das
rol
repz
cli
shlb
mov
sub
mov
jae
into
mov
dec
push
cmc
jae
in
jns
rcrl
xchg
adc
jp
std
jo
adc
mov
lret
cmc
and
fadds
push
mov
xor
popf
dec
cli
lods
out
lret
jle
and
bound
inc
cmp
push
dec
push
jbe
je
or
and
sbb
out
or
push
test
fwait
xchg
mov
repnz
outsl
lcall
les
and
subb
sub
aaa
ficoml
insl
and
lcall
dec
test
or
cltd
dec
and
daa
or
in
test
mov
sub
imul
push
jecxz
call
lcall
fwait
ret
mov
mov
sub
fwait
push
dec
out
cld
mov
or
inc
pop
push
out
xor
cwtl
inc
subl
lea
jns
inc
mov
fldcw
out
iret
fcoml
jns
ds
pop
daa
out
outsl
sub
xchg
jle
xor
enter
mov
pop
xchg
cmpsb
cld
testb
and
cltd
inc
mov
std
sub
push
jmp
jmp
jp
mov
sahf
cli
cmp
xlat
adc
lcall
call
and
test
adc
outsb
aam
push
sbb
cmp
pop
loop
fiadds
cmpsl
jne
add
jge
jnp
mov
cltd
sbb
lock
cmp
and
popa
dec
cli
mov
lcall
mov
movsl
sbb
loope
sbb
and
sub
es
push
in
test
or
fsts
adc
push
push
scas
jmp
cmp
sub
bound
outsl
fcmove
jo
out
mov
mov
pop
or
fidivrl
and
out
xor
pop
loopne
sub
add
mov
mov
pop
insl
sub
subl
inc
mov
andb
push
sahf
subb
cs
dec
sarl
mov
pusha
popl
add
cwtl
jnp
inc
insb
stc
jnp
pop
mov
lahf
cli
mov
and
add
mov
pusha
dec
push
add
cmpb
mov
and
lcall
lret
es
lcall
loop
test
dec
and
dec
imul
mov
ficompl
push
or
sub
sbbb
mov
or
inc
fsts
inc
test
in
enter
stc
or
ja
nop
psllq
out
test
out
jecxz
sub
out
addb
testb
inc
and
cmp
jae
push
push
sbb
sbb
or
ret
and
addb
pop
andb
ja
dec
xor
sbb
shrb
mov
arpl
push
lea
and
and
cmpb
mov
and
sahf
aad
lods
jnp
lea
fsts
daa
xor
pop
sub
and
repz
cltd
lret
sarl
xor
idivb
outsl
sbb
ja
xchg
xchg
aaa
sub
pushw
adc
out
scas
inc
cld
mov
fs
push
data16
clc
ljmp
jp
xchg
imul
jmp
inc
data16
es
hlt
cmp
pop
rcrl
jnp
mov
or
loop
pop
in
pop
xchg
jmp
mov
pop
test
or
xchg
cli
pop
inc
cmpsl
mov
dec
scas
push
sbbb
jg
sub
adc
imul
fists
or
pop
insl
mov
in
pop
mov
jmp
ds
cmp
xor
lret
stos
sbbb
out
enter
addb
iret
das
out
xlat
add
and
push
orb
inc
mov
fwait
nop
jle
aam
add
sub
jae
sahf
out
jg
test
add
add
pushf
pop
cs
jae
xchg
ret
mov
pop
jg
ja
xlat
lret
dec
mov
mov
and
imulb
aas
rol
push
xor
jmp
or
sbbb
sub
xor
popa
andl
lds
inc
pop
or
mov
xorb
jmp
adcb
inc
or
stc
sub
lcall
and
outsl
pop
nop
mov
data16
addr16
ret
ret
incb
clc
inc
dec
inc
jnp
imull
adc
lods
incl
pop
lret
sbbb
cmc
dec
out
mov
cmpb
sub
cmp
icebp
jae
xchg
mov
or
add
xchg
lcall
jmp
jns
jmp
addb
icebp
dec
dec
mov
out
xchg
loope
call
jns
xchg
test
daa
mov
fs
and
push
sbb
mov
lea
dec
sub
mov
scas
xchg
fwait
mov
inc
sbb
push
cmp
sub
jno
insl
repnz
lcall
aad
cmp
fwait
jle
movsb
jg
xchg
lock
ficoml
add
mov
icebp
inc
sbb
notb
out
jbe
and
ljmp
cld
int3
cltd
outsl
cmp
outsb
pushf
data16
mov
xor
xchg
cli
mov
mov
push
repnz
cmp
xor
mov
pop
mov
loopne
adcb
movsl
mov
mov
fcmovu
lds
insb
aad
jns
or
inc
stos
es
in
mov
and
mov
push
cli
push
dec
mov
div
stos
pop
aad
mov
inc
pop
or
ret
ret
mov
add
cmc
int3
and
inc
jae
mov
insb
jp
and
aam
jbe
mov
jge
xchg
enter
mov
inc
int
add
out
fwait
push
cltd
loope
mov
ret
sub
jo
mov
xchg
lahf
add
push
pop
test
scas
mov
jb
loop
lods
cmpsb
cld
repnz
pop
jmp
cmpsb
xchg
adc
das
jo
insl
and
inc
test
push
dec
and
out
fbstp
les
and
adc
mov
gs
divb
jbe
es
pop
pop
iret
pop
mov
jg
adc
rcrl
lahf
dec
mov
pushf
mov
insl
cwtl
add
mov
push
out
xchg
jo
cmc
ja
sub
pop
lret
mov
loope
fiaddl
xchg
xchg
ljmp
in
cltd
sbb
pop
xor
pop
mov
inc
mov
pop
dec
mov
mov
in
push
dec
adc
std
loop
gs
xor
and
fs
xorb
push
fnstcw
xor
aaa
jecxz
xorb
mov
test
inc
ljmp
ret
mov
and
fnsave
ja
push
mov
jecxz
xor
out
cltd
sbb
and
ss
test
arpl
loope
mov
mov
cltd
push
adc
mov
lcall
dec
in
iret
jle
cmp
ret
add
and
pop
bound
and
add
mov
xorb
mov
dec
pushf
xorb
inc
dec
cmpl
jle
jle
xor
pop
mov
push
cs
dec
int3
xor
lcall
enter
enter
jg
lcall
cmp
mov
icebp
mov
or
gs
xchg
mov
sub
adc
mov
mov
std
pop
pusha
jp
out
mov
sarl
imul
cltd
int
and
xorl
add
sub
popf
cmp
xchg
mov
int3
add
shll
dec
jg
cltd
testl
push
mov
cmp
dec
insb
xchg
mov
sbb
cltd
ja
pop
sub
jo
inc
dec
lcall
daa
ds
test
push
mov
std
lcall
or
dec
lret
cli
cmp
ljmp
nop
and
dec
mull
bswap
xchg
sub
and
mov
and
es
pop
push
mov
and
mov
jnp
movb
jp
add
xor
stos
lcall
pop
cmp
fdivrl
jge
sub
pop
cld
cwtl
pop
mov
pop
mov
outsl
cmp
sti
in
push
push
xchg
pop
in
cs
add
sbb
sbb
fstps
lret
mov
push
adc
in
jns
cmp
fadds
add
lds
popf
jmp
cmp
pop
ret
fildl
inc
xor
mov
bound
inc
scas
mov
pop
xchg
lcall
les
jae
cli
lcall
jns
or
mov
sub
movsl
jns
add
sbb
mov
mov
xor
shll
inc
imul
shrb
bound
aam
mov
repnz
jle
mov
negl
cld
pop
das
out
pusha
push
xor
testb
mov
rcrb
clc
loopne
loop
out
mov
jbe,pt
icebp
push
mov
nop
ffreep
stc
insl
das
ljmp
mov
jo
icebp
xchg
ret
lahf
jae
repz
arpl
add
lahf
xor
fnstcw
xor
addr16
inc
test
mov
push
inc
imul
in
cmp
jle
add
bound
jg
mov
adc
sbb
out
inc
lahf
push
mov
xor
movsl
hlt
scas
mov
stc
push
je
mov
std
adc
and
push
add
push
jbe,pn
repnz
mov
sbbl
loop
orl
ja
in
enter
adc
sub
out
into
or
add
fs
hlt
fimuls
pop
jno
sahf
mov
jb
lds
out
add
dec
xor
cmp
sbb
cmp
mov
mov
cltd
mov
mov
mov
sahf
inc
mov
loop
mov
jae
enter
and
xchg
mov
adcl
ret
xor
adcb
lock
xor
mov
add
subb
pop
test
aad
jp
xor
xor
sbb
cs
mov
pop
dec
xchg
insb
cwtl
pop
adc
gs
adc
fisubrl
xor
mov
ds
cmp
mov
testl
and
lods
add
mov
daa
xchg
xchg
xchg
loope,pn
inc
jl
or
mov
loopne
movsl
mov
dec
or
ret
cmp
xchg
xor
or
mov
jmp
and
ljmp
xorl
shlb
repz
in
mov
adc
fimuls
lret
cmp
push
sbb
int
and
subb
adc
popa
jne
outsb
cmp
mov
popa
ficompl
lcall
mov
ljmp
sub
movb
scas
mov
xchg
jne
mov
jae
call
push
sti
jle
rcr
and
cmp
jge
cltd
mov
sbb
push
stc
dec
mov
fadd
shl
cli
jbe
fidivrl
inc
jecxz
pop
and
fstl
inc
cmp
lock
add
js
push
jle
dec
fadd
icebp
xor
mov
leave
pop
lods
jecxz
adc
xor
inc
je
pop
fwait
and
jmp
addr16
adcb
into
popf
aad
cmp
mov
adc
addb
sbb
loopne
pop
loop
aaa
dec
inc
mov
or
sbb
adc
js
out
scas
das
imul
stc
and
subb
dec
daa
cmp
xchg
aaa
jnp
les
in
mov
mov
mov
icebp
inc
or
aaa
rolb
movsb
mov
sub
or
rolb
sbb
pop
mov
jb
push
sub
push
and
ret
inc
les
mov
repnz
sbb
push
or
and
popa
adcb
pop
push
je
pop
loope
mov
leave
add
mov
sub
xchg
add
sbb
xor
mov
or
xor
push
sbb
sbb
je
call
dec
lcall
in
add
sbb
mov
adc
jp
jmp
sbb
ficompl
insb
out
adc
or
jge
in
jae
addb
push
es
push
sub
sarl
xor
push
or
dec
mov
cli
xor
mov
xchg
push
sbb
and
dec
jp
lea
cmp
jns
jl
fwait
mov
imul
and
xchg
cmpsb
push
sub
lret
push
adc
and
int3
pop
mov
jmp
cmp
push
mov
fidivs
push
in
add
xchg
or
arpl
push
push
xor
push
addl
addb
mov
loop
outsl
popa
mov
jo
jp
inc
push
orb
outsl
std
rorl
xchg
orb
popa
xor
inc
mov
les
or
pusha
mov
push
in
fs
addr16
gs
subb
jecxz
add
fiadds
mov
cmpsb
cmp
out
sarw
scas
pop
insl
xchg
lret
ret
gs
ja
add
roll
out
mov
shl
das
push
repnz
dec
je
loope
and
sbb
orb
dec
mov
inc
lret
in
cmc
mov
push
cmp
add
cmp
sti
mov
fadds
mov
dec
addb
xchg
add
mov
dec
and
sub
and
push
lods
fs
data16
and
adcb
xchg
pop
inc
sti
stos
hlt
ret
pop
xchg
add
sarb
jge
test
push
cmc
inc
mov
iret
push
xorl
dec
aam
adc
cwtd
push
stos
outsb
addl
mov
subb
jo
rolb
movsb
fmuls
out
adc
or
pop
sti
xchg
xchg
push
adc
sub
dec
mov
pop
inc
fdivrs
int
int3
loop
shrb
xchg
scas
cmpsb
pop
mov
jnp
xor
imul
out
push
jl
jnp
add
std
aas
ret
andb
sbb
lods
jl
and
or
out
fs
jle
xchg
add
outsb
adc
fisubrl
jnp
push
faddl
dec
outsb
int
orl
jmp
mov
ljmp
mov
or
shlb
adc
and
mov
or
lret
cmc
pop
xchg
popf
cmp
xor
loop
add
pop
dec
jns
pop
incb
dec
mov
out
mov
lea
jg
mov
xchg
pop
xor
cmp
orb
or
mov
stos
push
add
faddl
cmp
xor
testl
cmpb
mov
movsl
cmp
add
test
and
xchg
push
pushf
cmp
daa
stos
jmp
mov
pmuludq
inc
lcall
adcb
and
les
cmp
jecxz
sbb
mov
mov
xorb
dec
mov
jo
pop
dec
ret
or
push
scas
sub
pop
push
or
mov
jmp
jg
mov
fidivrs
inc
mov
iret
gs
push
xchg
mov
jnp
or
arpl
std
push
mov
repz
xor
je
push
jae
lahf
cld
incl
sti
push
popa
sbb
and
imul
bound
addb
push
sbb
dec
clc
jmp
fcompl
rolb
shl
and
mov
jne
sahf
inc
pop
or
jg
fsubrs
and
test
fdivrl
out
mov
out
lds
xchg
jg
sub
xchg
inc
jmp
shll
sub
dec
cli
sub
xchg
outsb
lahf
xor
aad
fists
stc
pop
test
jecxz
test
bound
jb
xchg
ret
jnp
fldl
ja
into
popa
or
pushf
int
xor
andb
nop
cwtl
jnp
jo
jns
mov
adc
lods
xorb
xor
add
push
icebp
sub
mov
scas
cld
jo
int
pop
or
js
jge
add
enter
mov
outsl
xchg
mulb
push
jae
inc
cs
loop
mov
fcoms
je
sub
dec
cmp
fdiv
inc
sbbb
dec
and
and
jae
cs
xorb
mov
mov
xor
xchg
pop
cmp
lock
sahf
addb
sub
adc
add
sub
inc
arpl
mov
rolb
mov
cmp
adc
lret
and
fs
inc
pushf
hlt
mov
ret
stos
or
cmpb
mov
ret
mov
js
shl
dec
push
cvttps2pi
hlt
adc
push
andl
cmp
adc
inc
jecxz
aam
push
jns
adcb
inc
mov
xchg
cmp
pop
cmp
nop
sbb
repnz
jae
sub
je
dec
loope
mov
cwtl
mov
int
add
xlat
inc
mov
inc
cmpsb
push
mov
cmp
shlb
pop
les
mov
dec
jmp
insl
popf
data16
cmp
or
les
sbb
xor
int
mov
xor
xchg
or
lods
gs
je
add
push
mov
sldt
repnz
mov
int3
ds
lcall
add
pop
aad
sbbb
in
scas
call
clc
pop
lret
cmp
xchg
fdivrl
jae
addr16
xor
inc
push
jbe
bound
subb
pusha
cmpsb
xchg
lcall
icebp
inc
call
sbb
fcompl
ret
inc
jle
xor
pop
lret
ss
jne
xchg
cmc
sbb
xor
jg
jle
and
push
ljmp
ja
repz
jne
push
xor
das
xor
xor
inc
push
mov
push
mov
imul
fmuls
icebp
stos
dec
cmpl
and
cmp
mov
ss
pop
lods
sahf
xor
push
jb
lcall
push
lret
and
leave
movsl
sbbb
fcoml
sahf
pushf
jnp
mov
into
dec
xor
xor
mov
loopne
bswap
and
ljmp
sub
jmp
int
lock
insl
les
fcoml
stc
sub
pop
jg
jmp
cmpl
dec
push
int
mov
hlt
loope
push
lret
inc
enter
rolb
jb
sub
add
repnz
inc
stos
insb
xor
andl
daa
or
fs
inc
xchg
pop
cltd
lods
inc
ja
clc
sbb
int
xchg
add
in
push
and
xchg
pop
aas
lcall
jmp
inc
outsb
lcall
sbb
cltd
xchg
or
decl
dec
rorl
insb
pop
sarb
mov
fnstsw
or
mov
lds
bnd
iret
adc
ja
xor
inc
cli
mov
xor
xor
mov
xchg
inc
call
push
sub
cmpsl
popf
jg
clc
xor
daa
xchg
loope
add
lock
inc
mov
adc
andb
addr16
mov
stos
push
jl
and
push
ja
hlt
xor
repnz
inc
push
in
pavgb
and
and
aam
jge
test
sub
cmc
push
mov
lds
mov
jg
jecxz
lcall
jmp
addb
addb
xor
mov
dec
lret
loop
test
add
mov
repz
lcall
adc
or
or
jnp
sub
insl
mov
fwait
and
enter
pop
mov
inc
aam
je
sbb
xchg
sbb
add
or
je
fisubl
les
jp
add
sub
sbbb
jmp
pop
cmpl
dec
mov
out
xchg
inc
rcrl
nop
loopne
sbb
stc
xor
lahf
scas
jb
lods
subl
jns
push
pop
repnz
jns
pop
adc
jb
cli
test
mov
and
movsl
ljmp
adc
punpcklwd
addb
insb
jge
fwait
cwtl
mov
push
adc
leave
aas
jo
jp
push
aam
cltd
cmp
inc
sbb
inc
addr16
icebp
ss
mov
test
dec
jp
nop
cs
daa
and
push
add
js
push
lcall
xor
enter
jmp
sbb
sub
inc
loop
and
rcrl
sahf
ss
mov
ja
cltd
nop
fcompl
jp
mov
sub
jbe
arpl
lcall
cli
cs
mov
jo
test
xchg
les
arpl
roll
addl
pop
ljmp
movsl
insl
mov
mov
xchg
cmpl
sub
push
jnp
push
bound
cmpsl
test
xchg
mov
icebp
fimuls
outsl
negl
shll
xchg
xor
mov
mov
sub
xor
inc
xchg
out
ret
idivb
push
addl
call
add
mov
add
jle
stos
add
jmp
sbb
adc
lock
cltd
pop
jbe
sub
in
push
fisttps
pop
lea
cwtl
mov
mov
push
push
add
stc
mov
push
imul
hlt
orl
loopne
je
cmpl
pop
cwtl
pop
xor
cs
orb
test
and
sub
cs
ret
int
int
aaa
add
cmpsl
imul
jmp
jecxz
add
test
jbe
and
outsb
test
inc
test
cmp
fdivs
cmp
mov
aad
jle
loop
cld
mov
fs
lods
iret
test
aad
aam
notl
mov
lcall
jmp
xor
outsb
fsts
add
xor
jae
jl
mov
les
hlt
imul
jmp
enter
jmp
push
push
pushfw
ds
out
ss
sbb
imul
push
push
push
addr16
xchg
fdivl
bound
push
ret
push
sub
sub
cs
movsl
lahf
inc
mov
xchg
xchg
pop
jb
or
test
and
xor
mov
out
cltd
or
jl
fdivs
repnz
mov
pop
cmp
add
iret
adc
sub
scas
cmp
xchg
enter
or
mov
push
lret
sahf
es
jbe
iret
mov
sub
test
sti
and
mov
adc
jge
imul
notb
or
push
cmp
mov
mov
sarl
pushl
inc
lcall
ljmp
cltd
popa
or
jg
jle
sub
add
int3
fdivr
and
rcr
cmp
xorl
pop
in
ss
cltd
jg
mov
sbbl
inc
jno
pop
in
ds
pop
dec
out
adc
aam
lret
imul
mov
repz
test
call
cmp
or
sub
shll
je
mov
cmp
outsb
daa
sbb
xchg
lock
test
jecxz
pop
cltd
pop
insl
int
xor
pop
sbb
cmp
dec
pop
test
inc
fsubl
jle
ljmp
clc
pop
cmp
in
aad
std
rclb
out
xor
in
mov
or
enter
ror
pop
lock
mov
dec
cmc
push
cmp
push
cmpsb
jp
es
pusha
cld
lret
or
add
xchg
in
and
and
mov
add
jb
add
rcrb
addr16
repnz
out
push
dec
mov
sub
mov
adc
xor
cltd
repnz
pusha
ljmp
sub
mov
push
int
mov
rcl
lcall
rcrb
mov
xor
push
test
stos
jle
enter
xchg
aaa
sub
cmp
jg
pusha
or
enter
aaa
sub
sti
lcall
xchg
xchg
loop
adc
pop
jbe
jg
mov
jo
sbb
les
sarl
fdivs
repz
fistpll
mov
rcll
outsl
mov
jo
test
arpl
dec
jge
aad
jp
xchg
out
test
out
ss
and
shl
inc
xor
cltd
bound
mov
fcoms
jo
and
lcall
loope
in
xor
xor
rol
insb
lahf
mov
mov
inc
sub
push
leave
sbb
xchg
cltd
cli
cmp
mov
fdivrs
mov
fstl
jns
mov
jne
jns
mov
lock
mov
xor
mov
xor
inc
fadd
sbbb
or
mov
push
xor
lret
xchg
dec
ljmp
test
stos
xchg
cmp
cmpsb
mov
pop
mov
sbbl
lret
and
movsl
jp
lret
jmp
mov
into
jo
xchg
popa
arpl
std
lea
mov
jo
out
pop
lea
jne
jmp
stos
pop
insb
xor
push
bound
jecxz
xor
sbb
aas
stos
stc
lock
lret
jl
in
and
int3
xor
xchg
sbb
adc
fdivr
popf
push
push
jb
mov
repz
shr
out
inc
mov
repnz
push
lock
sub
xlat
sub
cwtl
dec
cld
adc
mov
dec
sub
mov
lods
cmp
out
xor
mov
xchg
mov
lcall
lret
and
nop
jmp
inc
cmp
stos
lret
push
je
xlat
mov
stc
test
xor
jne
cld
cltd
clc
int3
xchg
jle
mov
in
cltd
jmp
jo
pop
pop
xchg
xchg
mov
add
mov
mov
or
ja
sbb
adc
loope
jae
sbb
mov
clc
mov
out
pop
mov
bound
jle
mov
sub
dec
inc
push
push
filds
ficomps
add
jmp
scas
mov
and
adc
xorb
mov
dec
jle
xchg
add
outsb
pop
mov
adcb
dec
xor
cmpsl
mov
in
in
push
adc
addb
in
inc
adc
jg
pop
jb
ja
mov
aam
pop
mov
cmp
movsl
pop
pop
in
adc
add
sbb
fs
sub
xor
xor
sbb
ljmp
aas
inc
out
mov
pop
in
cld
xlat
mov
jge
push
sbb
addb
mov
or
sbbb
fistpl
cmp
jmp
jle
lods
jns
cltd
fwait
or
cmp
mov
pop
sti
test
mov
fnstsw
pop
hlt
inc
cmp
fidivl
lret
mov
inc
inc
in
add
cmpsl
jg
das
mov
orb
cmp
sub
lods
ss
mov
xchg
cmp
cltd
das
loope
hlt
cmp
sub
int3
scas
dec
cmp
adcb
mov
jle
icebp
and
and
in
lods
jg
mov
adc
dec
mov
ljmp
es
add
inc
rcrb
hlt
aam
jnp
sahf
enter
xchg
out
mov
xchg
idivl
sub
jno
xchg
or
jnp
dec
mov
add
sub
in
jnp
jecxz
lcall
orb
add
subb
jne
and
cs
fnstenv
leave
ds
sub
pop
aas
inc
imul
subl
mov
cmpb
mov
nop
andl
mov
pop
sti
in
jae
mov
add
xchg
jge
mov
aas
outsl
das
inc
and
xchg
dec
out
sub
cmp
push
mov
ret
out
adc
and
insb
bound
dec
pop
pop
nop
ret
mov
aaa
clts
or
out
sar
mov
mov
insl
and
adc
sbbb
cmp
sbbb
je
pop
mov
movsl
dec
les
mov
inc
int3
mov
ds
arpl
cmp
and
cmc
or
and
sub
xchg
stos
movsl
mov
or
jae
repnz
test
xor
rcll
int
push
xchg
pop
arpl
imull
bndstx
clc
dec
aad
imul
rcrl
and
test
cld
orb
dec
sbb
aad
arpl
cmp
ret
adc
outsl
xor
rorb
into
fcompl
outsl
ret
sub
shlb
gs
jo
movsb
enter
in
xorb
dec
add
jge
push
ss
or
addb
xor
add
mov
inc
test
aad
pusha
sbbb
mov
jnp
inc
ficoms
push
xchg
pushf
out
lds
into
jg
cmc
jb
stc
imul
addr16
xchg
mov
adcb
sbb
add
jnp
test
xor
ljmp
pop
cli
pop
in
mov
orb
lock
sbb
inc
push
xchg
sbb
repnz
dec
cmp
push
adc
jmp
imul
and
add
repz
add
jg
inc
and
push
ljmp
imul
mov
mov
lock
mov
int3
ret
and
jl
adc
mov
dec
sbbl
js
stos
rep
enter
in
bound
or
repnz
int3
push
push
cmpb
cmc
ljmp
push
cmp
sbbb
enter
lds
and
cmp
push
scas
sub
mov
mov
lock
insl
mov
call
jge
sub
pop
sub
arpl
xlat
and
push
jg
xchg
sbbb
sbb
xor
data16
push
fwait
cwtl
movsb
mov
ja
lock
push
sti
fs
push
cmp
inc
je
mov
add
cli
orb
xchg
and
mov
fwait
jnp
testb
pop
dec
out
sbb
sbb
pop
mov
push
das
and
subl
shlb
push
jp
dec
sbb
adcb
loop
push
lods
adc
movsb
xor
mov
jl
das
pushf
mov
xchg
int
cmpb
out
xchg
or
dec
addb
inc
scas
add
sbbb
sub
and
mov
addb
dec
rcl
leave
mov
inc
cwtl
movntq
or
fildl
fadd
popf
jl
push
lcall
mov
mov
mov
mov
push
cmc
cmp
addl
mov
div
bound
rcll
rcrb
dec
inc
jae
imul
mov
lods
or
inc
ret
or
or
testb
mov
push
bound
subb
dec
and
jnp
mov
shlb
dec
push
mov
pushf
jecxz
fsubs
cmp
cs
enter
nop
add
adc
pop
movsl
and
push
jnp
xchg
mov
jb
cmp
push
jnp
push
xchg
mov
and
pusha
push
mov
daa
outsl
xchg
xchg
jg
rolb
stos
daa
ror
xchg
inc
jg
fs
popa
fisttps
nop
addl
loopne
jge
mov
inc
bound
roll
lret
loopne
dec
adc
stc
add
jnp
cmp
jo
sbb
popa
dec
into
push
imul
adc
or
xor
and
cli
js
orb
insl
fwait
and
jnp
das
mov
cmp
into
sbb
adc
cli
leave
scas
lahf
dec
or
sbb
xchg
inc
fcmovnb
fidivl
push
aas
stos
imull
mov
dec
out
add
xor
shrb
xchg
sub
jae
xchg
xorl
cmp
adc
iret
addb
cld
je
out
mov
mov
leave
jg
or
jge
cmp
int
pusha
repz
lahf
les
xorb
ss
xlat
pop
cmpsl
dec
xchg
jg
repnz
movsl
and
add
ja
jo
add
ds
add
bound
mov
lods
out
nop
mov
xchg
addb
in
dec
in
push
sbb
sub
mov
test
ljmp
adc
push
enter
mov
popf
outsl
fimuls
xor
jb
cmp
xchg
fcmovu
pop
sbbb
cld
cmpsl
int
xlat
mov
and
lcall
cmp
rorl
and
mov
mov
roll
cmp
adcb
lret
repz
rolb
xchg
fiadds
stos
lock
fdivs
ja
adc
out
mov
jg
cmpsb
ds
js
orb
ret
inc
pop
inc
xchg
lret
xorb
inc
stos
xor
mov
in
mov
hlt
mov
rorl
mov
push
cmc
add
mov
ss
rcrl
popf
fidivrl
mov
iret
subb
sahf
std
pushf
push
sbbb
xchg
cmp
jo
cltd
arpl
notb
jae
js
lea
pushf
cwtl
mov
or
test
ret
cmpsl
xorb
xchg
idiv
push
adc
cmp
push
fs
aad
lret
cmp
insl
push
jnp
pop
or
sbb
incl
lret
mov
rcrb
inc
mov
cmpsl
scas
pop
jb
orb
adc
adcb
mov
fmulp
stc
add
loope
int3
adc
insb
test
push
bound
pop
fmull
int3
addb
shlb
sarl
fists
xorb
xor
je
xor
sbb
xorb
aam
ja
mov
ljmp
jle
orb
ud1
or
mov
jbe
dec
xchg
adcb
ret
mulb
dec
pop
call
repz
mov
pop
test
sbb
imul
in
dec
mov
popa
mov
cmpl
lahf
adc
fisubl
sbb
hlt
pop
and
pusha
out
shll
adc
orb
fwait
jbe
sbb
addr16
adcb
jno
and
stos
in
sar
jns
fcomi
add
popa
repz
lods
xlat
in
std
and
jg
and
jnp
xor
sti
dec
pop
pop
sbb
lds
push
cmpsl
ret
adcl
outsl
sbbb
sbb
fdivp
lcall
andb
jbe
cmpb
push
addl
sub
inc
dec
push
movsl
inc
jbe
dec
rclb
loope
jnp
xchg
loopne
push
jb
mov
or
jl
outsb
jo
mov
add
cmpb
bound
push
aam
and
push
cmpl
negb
lret
add
mov
data16
mov
mov
movsb
or
inc
push
mov
xchg
xor
xchg
sbb
sub
sub
sbb
push
rorl
dec
sub
into
mov
dec
fbstp
jae
fldl
jg
andl
sub
addb
cmp
cmp
int3
outsl
aaa
mov
pop
into
pushf
stc
shl
dec
out
push
test
test
pop
add
jbe
ret
nop
fcmovb
div
inc
pop
outsb
mov
ret
xor
repnz
mov
sarb
nop
mov
jmp
cli
aam
jp
sti
lock
sahf
out
cmpl
dec
mov
cmp
test
daa
adc
es
js
outsl
mov
into
ja
bound
adcb
das
test
mov
lcall
sub
jae
cltd
or
adc
imul
xchg
fdivrl
ds
mov
lcall
inc
jge
clc
cs
aad
mov
shrb
pop
xor
xchg
adc
or
lcall
cli
scas
mov
test
out
sub
lahf
and
fistpl
mov
imul
inc
push
out
sbb
stos
dec
and
sbb
xchg
ret
mov
jle
in
test
icebp
and
dec
sbb
dec
jo
xchg
inc
jo
mov
outsb
ss
jnp
pop
mov
and
add
add
int3
push
or
insl
or
icebp
out
adc
xchg
jbe
add
xchg
pusha
sub
lcallw
stc
or
adcb
mov
xchg
fsub
out
and
dec
sub
cmpsl
mov
repnz
bound
fcoml
push
mulb
lret
and
sub
imul
mov
movl
mov
sub
and
std
push
pop
mov
mov
cmp
jg
cltd
xor
and
insb
out
lcall
stc
int3
cmpsl
movsl
fsts
test
xchg
sbb
dec
and
and
aad
jns
test
push
or
and
jno
sbb
andb
mov
xorb
pop
enter
icebp
pop
jge
adc
jno
fcmovb
ret
mov
popf
insl
lcall
push
das
push
shr
ds
or
aas
xor
or
ja
dec
cmp
fidivs
inc
cwtl
lcall
inc
push
mov
notb
lahf
cmp
jge
mov
xor
jns
mov
xchg
and
out
rcrl
jle
push
sub
xlat
xchg
mov
jp
subl
outsb
std
mov
xor
mov
or
pop
pushf
cmp
mov
mov
cmp
dec
cwtl
ljmp
jp
ret
mov
add
movsb
movsb
sub
pop
cltd
pop
jbe
push
cltd
aas
pop
repnz
ja
xlat
ja
pop
xor
push
bound
or
jle
push
inc
ret
cmpsl
test
add
rclb
sbbb
fucomp
xor
ja
add
push
xor
and
push
data16
lods
pop
jmp
es
ljmp
mov
mov
xor
shl
ds
pusha
fisttpll
push
xor
outsl
adcb
and
out
jns
cmp
repz
scas
inc
push
mov
setnp
mov
mov
inc
xchg
data16
cwtl
adc
mov
lret
lret
inc
mov
pop
out
popa
mov
sbb
sub
jmp
pop
mov
jbe
lcall
mov
jbe
jge
mov
cld
fmull
sub
pusha
jp
mov
inc
xlat
mov
outsl
add
nop
xor
pop
mov
mov
and
out
repz
xchg
xchg
pop
stc
cmp
stos
rcr
push
jo
and
xchg
add
add
insb
mov
into
cmc
out
stos
ret
jg
shll
pop
repnz
jle
mov
pop
add
test
xor
jmp
mov
scas
pop
push
lcall
out
push
ss
std
cmp
jg
testb
add
movsl
xor
and
cltd
loopne
mov
roll
pop
sbb
xor
sar
lea
xor
and
lds
cmpsb
lcall
cltd
pop
call
push
xchg
lcall
xor
jns
jecxz
mov
mov
enter
mov
push
lret
add
ja
andb
pop
cltd
fmuls
xchg
scas
sbb
mov
std
lcall
jg
dec
les
aad
mov
push
jo
cmpsl
fildl
cltd
in
push
and
lret
rolb
cmpsb
xchg
inc
ss
mull
inc
fisubrl
xor
xchg
loopne
push
cmpsb
jg
and
inc
stos
sub
subl
xchg
or
jnp
mov
xchg
jno
inc
out
ljmp
jg
ja
ss
test
add
add
sbb
fistl
stos
jle
fmuls
fdivrs
pushf
jg
rcrb
jns
pop
ja
mov
and
sub
xchg
imul
xchg
or
roll
test
push
and
push
lcall
lret
jb
and
in
lcall
out
data16
pop
adcb
xchg
jmp
jns
mov
pop
orb
pop
xchg
jmp
lods
or
rclb
ret
subb
mov
orb
jp
in
scas
nop
les
sub
das
subb
adc
pop
pop
es
pop
jns
push
push
mov
repz
aam
push
into
cmp
int3
mov
sar
xchg
xor
subb
xchg
push
ret
inc
arpl
loop
sub
scas
sbb
jbe
dec
mov
add
mov
add
add
adc
xchg
subb
or
or
dec
insl
out
cld
mov
fsubrs
pop
and
xorl
jb,pn
or
stos
ret
int
jns
loop
push
mov
insl
sbb
cli
dec
pop
popf
sbbb
in
inc
mov
test
or
inc
mov
lock
pop
and
inc
xchg
aam
or
and
imul
aaa
rcll
adc
das
sub
data16
fcmovnb
aas
xchg
and
pop
jno
mov
inc
fwait
adc
ficoml
pop
adcl
pop
fcoml
nop
rcr
jmp
jp
and
sti
xorb
fldenv
mov
pusha
push
add
notb
clc
subb
jg
mov
dec
fmulp
pop
adc
inc
mov
lds
arpl
jnp
mov
sub
xor
sti
dec
jns
in
mov
pop
mov
mov
dec
cmpb
cld
jmp
pop
and
xchg
pop
ljmp
movsl
adc
jg
push
add
xor
mov
or
push
xchg
pop
in
je
xor
sub
xchg
add
add
orb
xor
stos
and
or
adc
pop
pop
push
popa
mov
mov
cmpb
push
cli
jl
pop
addb
sbb
es
lds
stc
gs
fs
scas
rsm
sub
cmpsb
mov
je
lcall
add
and
idivl
adc
or
sub
mov
push
addb
push
rol
bound
fbld
cmp
mov
leave
xor
xchg
rep
mov
mov
faddl
mov
or
subb
int3
push
orl
inc
outsl
sbb
xor
xorb
xchg
mov
je
jne
xlat
loop
adc
push
aam
movsb
lock
jo
je
scas
or
inc
pop
adc
jne
fwait
mov
and
int3
in
jle
push
rcrb
xchg
lret
xchg
xchg
data16
popl
popf
mov
push
mov
orb
inc
fs
mov
gs
pop
js
mov
cmp
cmp
inc
mov
rcrb
outsl
xchg
fidivrs
jecxz
jne
push
aaa
add
mov
xchg
icebp
mov
subl
xchg
jp
dec
pop
je
xor
pop
cmp
rolb
in
mov
xor
test
lahf
sub
mov
xorb
sub
mov
mov
iret
mov
and
test
sbb
xchg
xor
dec
mov
stos
movsl
out
push
sub
lret
dec
mov
sbb
jnp
js
cmp
mov
addb
push
cmpl
leave
lods
inc
bound
addb
orl
popf
shl
push
js
fidivs
mov
xor
mov
out
push
rolb
in
cltd
mov
fidivrl
jmp
test
mov
jnp
inc
xor
xlat
bound
xorb
aaa
popf
xor
add
adc
loope
je
mov
push
outsl
mov
push
aas
sar
cld
pop
add
add
shll
jnp
aas
pop
sbb
sahf
fdivs
xchg
mov
aam
scas
clc
jmp
inc
mov
aad
bswap
jmp
lcall
pop
dec
into
adc
mov
sti
mov
cltd
xorb
pop
add
and
orb
lock
lcall
jnp
notb
in
mov
ja
sub
repnz
xor
das
bound
stc
cmpsl
test
push
shll
mov
gs
outsb
arpl
movsl
jecxz
inc
ret
dec
bound
and
xor
inc
fsubl
subl
mov
xchg
sbb
andl
mov
push
arpl
mov
sbb
xorb
aaa
adc
add
test
insb
gs
mov
jns
jb
shll
ret
add
mov
push
push
mov
cmp
addb
and
add
jo
pusha
fbstp
push
test
adc
ljmp
scas
andb
mov
mov
loop
in
sub
clc
push
cmpb
filds
xor
add
xor
push
sti
dec
test
cmp
into
or
mov
adcb
aam
jns
push
push
cmp
xchg
decl
or
pop
cmpsb
mov
aam
jge
dec
cltd
xchg
movsb
add
dec
cmp
add
les
mov
pop
scas
and
sti
call
rcr
data16
adc
fisubrl
sub
aaa
loope
jns
nop
mov
cmpb
shr
sub
cmpb
cmpsb
cmpsl
addr16
cmpb
hlt
dec
pop
sbb
sbb
and
push
sub
and
dec
adcb
imul
faddl
mov
fnstcw
sbbb
ss
push
add
test
adc
pop
jge
addb
scas
cwtl
and
and
das
out
mov
xchg
sbb
push
and
cltd
add
pushf
inc
push
adc
mov
xorb
scas
int
mull
inc
ljmp
js
mulb
jbe
xchg
sbbb
rcll
fsubrs
sub
push
js
cmp
leave
fists
vmaxss
push
icebp
ret
cmpb
imul
mov
outsl
add
testl
jl
xor
jecxz
mov
mov
insb
test
call
xor
fists
sbb
insl
test
jnp
xor
dec
fnstcw
add
jmp
add
leave
lea
fs
ja
mov
loope
and
imul
xchg
stos
fistl
cmp
lret
add
lods
cmp
pop
int3
bound
xchg
jno
mov
xchg
mov
insb
xchg
out
xor
adc
orb
sti
sub
callw
and
add
stc
js
dec
dec
xorb
add
push
into
xor
faddl
jl
addr16
jne
popf
int3
add
push
pop
icebp
xor
cld
out
repz
inc
xchg
mov
stc
mov
add
push
out
bound
mov
negl
or
enter
add
lcall
mov
stc
imull
mov
jo
cld
or
push
mov
dec
inc
in
outsl
mov
andb
sub
rorb
push
sbb
adc
lcall
pop
mov
hlt
push
incl
in
loopne
cli
or
add
and
adc
pop
das
xchg
sub
movsl
jge
int
xchg
into
loope
push
rol
mov
test
xor
xchg
test
ret
jnp
mov
jns
cld
jge
jo
xchg
push
lcall
xor
xor
mov
jns
shr
lods
cwtl
add
sub
add
or
add
inc
push
jge
inc
cltd
xchg
or
leave
sarb
push
xchg
adc
sbb
inc
sbb
insb
or
jp
mov
out
ret
idiv
push
mov
mov
cmp
mov
mov
pushf
ds
jg
inc
fadds
fimull
das
or
rcr
das
inc
notl
scas
pushf
shlb
out
xchg
mov
add
pop
fldt
or
sti
in
sbb
xchg
movsb
cmp
fidivrl
mov
pusha
lret
fidivs
mov
lea
pop
in
insl
test
sbb
out
or
insb
mov
gs
push
rcl
pusha
repz
int
sub
cmc
sti
js
icebp
mov
xor
mov
cs
push
mov
lcall
jae
aad
cmpsl
add
ds
test
sub
jp
int
inc
call
mov
and
repz
cmp
icebp
mov
jmp
sub
stos
sub
arpl
pop
sahf
loop
stc
mov
pusha
mov
imul
mov
sti
mov
in
or
leave
popa
adc
mov
ss
jo
mov
shll
rolb
push
jo
repnz
movsl
cmpb
mov
stos
nop
or
pop
mov
push
pop
fimuls
enter
out
jb
clc
incb
movsl
jge
les
ljmp
loope
int3
mov
sub
pop
jge
outsb
out
addr16
in
js
into
xchg
outsb
lods
imul
out
dec
fnsave
pop
push
sub
jmp
xchg
and
mov
stc
mov
push
add
sbb
add
clc
cmp
mov
xchg
and
lcall
stc
mov
lret
shl
mov
inc
jmp
cld
and
and
adc
mov
ss
not
lret
mov
cmc
lret
mov
insb
ret
jg
xor
xchg
and
add
lock
out
repnz
mov
mov
adc
cmp
repnz
iret
pop
jp
dec
pop
idivl
das
pop
and
les
movsl
lock
outsb
cmp
cmpsb
jns
cs
mov
mov
ds
cmp
aaa
outsl
fsubl
aaa
mov
or
cmp
jb
mov
add
push
or
sahf
imul
jns
fmuls
jl
mov
xchg
jo
into
mov
out
mov
jns
pop
scas
mov
mov
mov
push
bound
cs
xor
sub
dec
xlat
mov
dec
or
dec
inc
lock
xor
test
cli
adc
std
xor
cli
ja
outsl
push
bound
xchg
shlb
adc
pop
stc
xor
paddq
fisubrl
lock
xor
cld
sahf
sbb
or
in
call
cmp
pop
mov
rcrl
mov
add
shll
cmpb
push
pop
xorl
mov
sub
mov
stos
mov
insl
push
add
or
jp
inc
faddl
je
xchg
cmp
aam
imul
leave
adc
icebp
xor
dec
in
adc
fdivs
pop
mov
dec
jnp
repnz
and
aad
lods
dec
andb
pushf
or
ljmp
mov
ficoml
subb
notl
data16
sbbb
icebp
sbb
test
cwtl
aad
aam
out
nop
inc
out
and
mov
jmp
sbbb
push
sub
js
cld
jbe
inc
scas
mov
out
mov
pop
cmpb
mov
adc
psubb
jmp
insl
enter
outsl
mov
cltd
dec
stos
rclb
pop
mov
mov
mov
aas
jbe
roll
in
sub
outsb
mov
lods
mov
sbb
mov
cltd
movsl
pop
mov
mov
mov
sbb
mov
push
mov
jae
test
or
in
test
test
and
fldt
and
push
fcomip
je
dec
movsb
scas
dec
add
mov
xor
gs
jo
sahf
mov
sub
inc
mov
xchg
and
add
jmp
cmpl
fisubrs
and
bound
insl
inc
loopne
inc
les
xchg
push
ljmp
cmp
push
insl
lods
mov
mov
scas
jg
je
aad
jge
lcall
lret
push
add
or
push
push
movsl
arpl
sub
and
pop
loope
divb
push
and
imul
imul
js
stos
imul
xor
xchg
push
lret
sub
and
mov
sbb
out
xor
push
push
outsb
scas
dec
jle
mov
fdivl
cltd
imul
sub
movsl
cmp
inc
dec
cltd
cs
psubsb
pop
xorb
ret
orb
setle
mov
adcb
outsb
mov
nop
jle
xchg
rclb
aas
ret
jecxz
orb
testl
icebp
xlat
xchg
test
push
push
pop
int3
add
push
out
jecxz
xorb
sahf
inc
mov
cmpb
push
cmpb
js
xorb
das
roll
fstl
inc
push
fidivs
or
inc
jle
addb
xchg
push
pushf
ret
lods
sub
call
push
pop
xorl
out
roll
pop
ret
addb
jno
imul
sub
in
sub
fidivs
sub
fwait
call
or
xchg
xorb
sub
inc
int
test
xor
adc
push
inc
sbbb
mov
cmpl
xchg
cmpb
data16
push
xchg
mov
adc
pop
pop
xorb
rorl
in
cmpb
jp
mov
test
insl
shlb
xor
xorl
andb
mov
or
jnp
dec
orb
enter
mov
adc
jbe
add
bound
xor
or
test
mov
int
out
imul
addl
movsb
fs
addb
addb
mov
orb
arpl
inc
jp
lahf
and
mov
outsb
adcb
je
xlat
mov
push
idiv
or
push
popa
out
pop
stos
adc
icebp
arpl
sarb
add
roll
sbb
ds
in
insl
out
movsb
xor
cmpb
repz
push
ret
cmpsb
and
add
movsb
adc
mov
adc
scas
jecxz
hlt
addr16
mov
sbb
jae
movl
mov
jg
jb
je
jg
mov
nop
sbb
ret
arpl
addl
mov
adc
fcoms
sbbb
mov
push
int3
dec
mov
dec
orl
and
or
mov
jl
lods
mov
push
outsl
or
pop
nop
test
rep
clc
sub
cwtl
lret
addl
jne
mov
cli
aad
cmp
dec
imul
adc
sub
pop
leave
push
aas
iret
and
in
mov
insl
fldenv
jno
test
mov
test
out
ret
in
adc
xchg
jns
inc
xchg
std
adcl
pop
inc
outsl
jle
jg
out
fimuls
mov
stc
xor
imul
jecxz
xchg
dec
addb
pop
jg
data16
faddl
jae
pop
jge
out
cmpl
dec
inc
cmp
add
dec
jne
xchg
mov
pop
int3
sbbb
and
pop
jg
and
push
filds
das
adc
iret
js
sub
sbb
dec
push
inc
lahf
cmp
repnz
cmpb
push
pop
andb
shrl
xor
xchg
loop
xlat
adc
cmpsb
and
push
add
ds
fadds
popf
add
or
push
lods
jle
subb
inc
cmp
fidivs
jne
add
push
lods
lds
bound
adc
das
adcl
mov
pop
hlt
and
repnz
inc
test
inc
ja
dec
push
ss
clc
add
pop
pop
aas
stos
dec
xchg
cmpl
mov
mov
fiaddl
dec
sti
pop
movsl
inc
rcl
testl
sahf
ret
mov
in
cmp
lea
add
cmp
iret
xorb
mov
or
dec
adcb
shlb
test
addb
subl
sbb
mov
je
imul
loop
pushl
pop
push
cmp
xchg
mov
jl
xchg
test
aas
pop
dec
stos
adc
and
mov
rcrb
insl
sti
or
inc
decb
jl
cmp
mull
lock
addb
outsl
lods
push
jbe
jg
movsb
pop
and
cmpsb
cli
enter
pop
test
xchg
sbb
addb
cmpb
and
std
out
andl
fstl
test
arpl
faddl
faddp
loopne
jnp
sub
jg
cltd
inc
push
imul
ret
fldl
arpl
sub
push
je
idiv
rcrl
xchg
push
movsb
pop
jecxz
call
mov
add
stos
cli
mov
jg
es
insb
mov
mov
out
push
aaa
mov
call
imul
adc
add
sbb
arpl
xchg
xor
lds
test
mov
cmp
sbb
add
add
push
scas
jg
ja
lea
test
andb
mov
pop
iret
push
jecxz
inc
xorb
mov
and
lock
sti
adcb
add
test
adcb
cmp
dec
pop
sbb
add
inc
inc
and
or
jnp
sub
jb
cmpb
sub
dec
add
test
insl
mov
push
mov
repz
and
ds
sbb
inc
cltd
test
imul
shrb
loop
lods
inc
xor
cmp
xchg
aaa
mov
call
jo
jmp
inc
lods
and
cmpsb
pushf
les
jnp
push
jmp
dec
push
lret
jp
arpl
dec
mov
inc
mov
jns
scas
pop
addr16
out
dec
cmpsl
push
sub
pop
movsb
pushl
jb
adc
mov
andb
xor
fstpl
lea
mov
lahf
ljmp
push
dec
pop
icebp
inc
jns
adc
enter
jae
scas
hlt
jmp
andb
or
subb
into
dec
ret
dec
cmp
mov
sub
fs
adc
fucomp
xorb
push
push
in
hlt
cmp
or
ss
or
push
jne
add
sbb
adcb
fnstenv
daa
rclb
or
adcb
jbe
sub
clc
andb
sti
xchg
lock
dec
jae
xchg
xchg
add
xchg
loope
cld
inc
mov
bound
and
lret
or
stos
push
add
dec
bound
sahf
lock
sub
in
add
sub
add
mov
addb
ds
dec
mov
fwait
or
sbb
push
adc
repz
test
mov
add
lahf
notb
and
inc
cmp
call
aam
jnp
lea
rorb
sub
dec
sub
add
cld
add
andb
mov
aaa
mov
xor
or
add
fmul
fiaddl
aaa
bound
dec
subl
dec
cmpsb
jge
jg
pushf
inc
lods
lcall
lret
lock
std
test
int
in
push
loop
outsl
fucomip
add
cld
cmpsb
cmp
jne
data16
inc
cltd
ljmp
jg
inc
mov
adc
fwait
test
cli
imul
sti
lahf
lcall
fisubl
outsb
push
dec
push
jns
pop
and
push
add
cmp
push
jb
pop
ds
xor
sbb
push
inc
jbe
push
insb
adcl
jge
stos
pop
pushf
arpl
jl
and
mov
outsb
cmpsl
dec
jae
sbb
and
rcl
bound
imul
jmp
push
xchg
rcr
jb
pop
imul
dec
jbe
mov
jg
int3
out
nop
xorb
es
push
stc
scas
xor
xchg
fsts
out
stc
pusha
bound
outsb
adc
shl
loop
stc
fwait
push
mov
ret
sub
or
jno
popw
jnp
stos
jmp
and
das
and
rclb
jae
jmp
dec
incl
jnp
push
fcmovbe
clc
or
mov
notl
and
js
into
add
add
xor
fistpll
push
notb
outsb
subb
out
add
push
jb
mov
add
inc
xor
jno
inc
movd
lahf
sub
jp
add
aam
jg
icebp
add
jb
stos
cmp
push
pop
loope
add
pop
or
bnd
cmp
jp
inc
add
mov
loopne
pop
mov
outsb
repnz
sti
mov
add
insl
xor
push
ds
inc
jns
jmp
cmpl
fwait
js
or
fidivrl
pushl
jnp
movsb
clc
ret
es
adc
insl
jne
and
loope
jbe
jnp
mov
cli
jg
outsb
mov
push
lock
push
das
push
pushf
jp
push
roll
pop
add
fiadds
jle
mov
mov
push
xor
adc
loop
pop
or
xor
cmc
pop
lods
cwtl
inc
insl
sbb
sahf
movsb
scas
pop
ret
mov
outsb
sbb
xchg
std
addr16
arpl
stos
cmpsb
cmp
test
stc
das
jp
outsb
pusha
cmpsb
push
pop
cmp
inc
fbstp
inc
push
mov
push
dec
cli
jno
adc
cmpl
loop
movsl
cmovl
pop
jge
sti
mov
jb
ret
repz
xor
inc
test
mov
push
and
push
js
shlb
into
sti
call
ss
shrl
jb
rolb
add
pop
and
or
push
sahf
cmpsb
xchg
sub
push
jb
ret
in
sbb
sub
bound
inc
push
and
sbb
repz
dec
test
mov
jae
repnz
ds
sub
pop
jno
andl
inc
bound
pop
mov
jae
jae
lock
repnz
les
pop
pusha
jns
ljmp
or
ret
mov
lcall
jle
inc
inc
or
imul
movsb
hlt
imul
xchg
bound
and
js
repnz
jnp
out
cmp
jecxz
das
out
ss
ja
ret
into
sub
ret
addr16
adc
pop
ljmp
xor
xor
outsb
jg
mov
mov
jp
lret
cmp
addl
cs
jb,pt
jmp
add
adc
xchg
mov
and
push
bound
ds
roll
jns
push
incb
inc
sbb
inc
arpl
cmp
cmpsb
cmp
push
imulb
inc
insb
dec
test
add
and
adc
jbe
lcall
sub
sub
adc
repnz
loope
inc
add
outsb
push
inc
xchg
pusha
data16
es
inc
add
fnstenv
shll
adc
dec
rcrb
or
mov
scas
xchg
mov
push
cld
jge
inc
push
es
repz
jno
pop
sub
pop
mul
or
xor
arpl
add
mov
test
push
jae
cwtl
cmp
popa
fiaddl
cmp
add
jns
inc
cmp
inc
bound
imul
shlb
inc
jae
in
cmp
out
pop
data16
dec
dec
inc
call
ret
push
sub
mov
jo
jnp
mov
mov
inc
pop
pushf
pop
movsl
mov
dec
pop
jle
dec
adc
loopne
dec
aam
mov
pop
shrb
sbb
in
pop
jbe
cs
int
fisubs
das
pop
mov
inc
adc
and
xchg
arpl
and
outsb
bound
daa
es
shlb
and
adc
inc
rolb
jns
dec
mov
sub
mov
jns
ret
out
or
rcl
and
jle
shl
ret
mov
dec
repnz
ds
mov
and
add
mov
outsb
push
rorb
imul
pusha
loopne
jae
ja
adc
or
lds
cmpb
cmp
arpl
rcr
inc
addr16
add
sbb
jb
lds
jo
cmpsl
das
js
movb
pop
sub
adc
dec
cltd
inc
mov
mov
push
jp
ja
rorl
stc
fisubrs
pop
push
push
jle
loop
fs
rolb
std
xor
int
sbb
xchg
pop
push
ret
add
inc
xchg
add
mov
out
sbb
push
or
mov
int3
mov
mov
xchg
test
hlt
xor
call
mul
daa
mov
sbb
inc
bnd
jbe
sbb
or
cli
mov
pop
jge
inc
cmpsb
inc
xor
cld
fidivrs
sbb
loop
repnz
aaa
push
dec
pop
mov
mov
mov
sbb
mov
iret
dec
pop
jmp
dec
imul
cs
or
push
inc
fistpll
inc
mov
adc
jmp
divps
sbb
xorl
cli
fdivs
pop
adc
xor
stos
xchg
cmpsl
jle
push
pop
rol
jb
jge
enter
gs
xorb
shrl
inc
mov
push
loop
sbb
xchg
jb
or
mov
xchg
andb
pop
jp
ljmp
mov
testl
mov
push
fisubrs
pop
mov
packsswb
sbb
jecxz
mov
bound
popl
ret
pop
outsb
out
mov
cmp
mov
push
push
push
jge
ss
sbb
outsb
ficoml
jns
cmp
pop
lcall
imul
adc
xchg
dec
dec
adc
pop
push
push
xor
add
stos
js
bound
scas
inc
jl
mov
push
inc
repz
cmpsb
notl
imul
jbe
outsb
aam
sbbb
xchg
sbb
xchg
inc
adc
pop
int3
jbe
ljmp
xchg
or
pop
icebp
adcl
and
out
xor
xor
lret
stc
xor
mov
loop
out
faddl
inc
and
std
fs
ret
sbb
imul
mov
pop
push
jo
stos
pop
sahf
bound
sub
gs
pop
into
adcl
mov
testb
cmpb
in
push
mov
ds
ljmp
scas
in
stos
inc
mov
inc
data16
dec
pop
inc
lods
inc
jo
sbb
jp
jp
cmp
shlb
xchg
inc
pusha
js
push
pop
fidivrl
sub
stos
xchg
out
mov
pmaxub
jno
js
insb
shll
xor
pop
sbb
lret
lock
inc
add
pushf
andps
inc
adc
icebp
pop
fidivrs
push
loope
inc
inc
mov
push
adc
mov
push
fdivs
in
add
daa
inc
and
push
ret
jmp
mov
cld
fstl
or
push
jle
ret
inc
outsb
out
cmp
mov
outsl
mov
pop
jp
shlb
popf
inc
and
rclb
es
mov
mov
ja
dec
repnz
aas
jae
insl
ss
xor
out
sub
sahf
ljmp
outsb
ds
push
and
or
js
push
jbe
jecxz
outsl
inc
mov
loop
sbb
dec
ss
fidivs
push
imul
arpl
inc
les
xchg
jnp
aaa
addl
add
ds
mov
sub
dec
iret
sbb
adc
mov
push
xor
xorb
cld
xchg
cli
imul
inc
aas
out
jecxz
repnz
inc
jmp
and
add
xor
les
or
ficoms
pop
cs
sub
dec
sahf
mov
inc
push
int3
push
add
jmp
mov
fdivr
pushf
push
pop
cli
adc
out
sub
out
and
mov
push
popa
cmp
adc
xor
xchg
jno
ljmp
cmpsl
push
cli
test
mov
jp
xchg
add
sti
and
push
mov
jle
sub
push
push
jl
jne
adc
inc
push
repnz
pop
dec
mov
sbb
cmp
es
icebp
loope
cs
xchg
es
xor
dec
ds
pop
je
fdivrs
arpl
shll
inc
je
push
push
dec
mov
or
dec
and
pop
cli
pop
in
jg
rorl
shlb
stos
adc
mov
addr16
pop
xor
cmp
jle
rcrl
add
cmpsb
cmpsb
and
xchg
ss
ss
imul
andl
imul
loop
push
lods
sub
insb
mov
mov
nop
or
mov
and
jl
out
push
pop
push
xadd
pop
arpl
dec
pop
inc
loop
add
xlat
imul
pop
loop
mov
mov
mov
icebp
int
jge
lods
insb
mov
pop
sub
test
mov
dec
push
push
sbbb
jp
rclb
sbb
lret
sbbb
and
addb
xchg
push
jno
push
pop
mov
loope
das
push
ljmp
push
into
test
xor
and
dec
mov
mov
pop
inc
pop
jb
cmpsb
ja
inc
inc
pop
andnps
jb
add
sub
or
dec
sahf
rcll
xchg
fnstcw
jle
fiaddl
lods
sbb
inc
inc
sbb
orb
mov
inc
and
push
push
fists
das
cmpsl
pop
inc
cmp
int
xor
jns
xlat
out
mov
js
inc
jl
or
sub
pusha
push
adcb
jae
adc
outsb
out
mov
add
in
xchg
sbb
or
out
dec
jns
cmpsb
ss
test
jnp
or
and
pop
shlb
ljmp
cmpl
xchg
lret
xor
push
nop
es
insb
mov
push
popa
jns
push
jne
jle
outsb
inc
std
xor
and
jns
pusha
data16
xchg
lcall
xchg
jns
sub
or
outsb
and
in
jae
int
andl
xorps
das
pop
or
aam
fidivrl
out
adc
jo
repnz
xor
bound
addr16
push
xchg
addb
jae
ss
xchg
fwait
and
mov
jp
ja
cld
inc
fdivrl
ss
jb
test
sysret
add
dec
jge
dec
mov
push
fbstp
or
std
xor
testb
dec
int3
scas
cmovo
pop
jns
push
or
sbb
add
fisubs
jno
or
cs
push
loope
jbe
gs
push
fistl
dec
ret
orl
xchg
jbe
test
adc
push
push
jnp
das
roll
inc
cmpsb
cmpl
loop
inc
ja
ja
fnstcw
out
xchg
cmp
xchg
scas
pop
mov
mov
in
inc
es
and
or
gs
dec
aas
jl
sbbl
leave
adc
and
push
cmp
cltd
push
pop
jl
cmp
leave
sub
mov
cmp
inc
mov
popf
outsl
xor
mov
cmp
pop
shl
lods
ja
out
xor
adc
fiadds
jp
jge
inc
iret
dec
outsl
jle
push
xor
aam
jno
test
inc
jle
inc
std
dec
cmp
xchg
add
dec
frstor
bound
rorb
out
daa
pop
loop
pop
or
repnz
test
push
sub
repnz
push
push
ds
gs
or
jp
add
cmpsl
sub
and
jo
jae
jo
bnd
std
pop
sbb
jp
ljmp
adc
jmp
pop
rolb
out
jnp
das
push
push
sub
shl
cs
pusha
push
xchg
pop
pop
imul
sub
loope
push
insb
push
pop
xchg
xor
xchg
jnp
sbb
mov
sbb
xchg
pusha
scas
jle
imul
add
adc
repnz
push
push
mov
sbb
cmp
push
add
cld
xor
and
and
add
out
mov
pop
jb
push
cmp
stos
jns
fs
push
ljmp
cmp
out
add
inc
xor
outsb
and
fcmove
jl
add
mov
inc
mov
in
dec
data16
fcoms
lss
jb
sbb
or
pop
out
fcmovnbe
ja
mov
es
into
mov
inc
mov
test
loopne
lods
ret
jge
loope
orb
ret
inc
dec
pop
push
pop
imul
dec
sub
pop
ds
adc
test
test
push
and
xor
aam
xor
mov
push
cmp
push
jle
mov
pop
sahf
bound
dec
jbe
out
jnp
out
push
lcall
mov
ljmp
out
dec
lods
ljmp
xor
and
mov
ja
jo
imul
pop
adcb
mov
stos
cli
sarb
fwait
xor
jp
push
add
mov
push
imul
mov
popf
sbb
popa
pop
scas
out
fisubrs
fisttps
pop
and
jbe
and
mov
sbb
sbb
xor
inc
scas
aaa
jp
lock
fcom
push
test
jns
mov
cmp
add
add
cmp
xor
jbe
and
add
in
sub
sbb
or
adc
mov
push
andl
jle
pop
shrb
pop
pop
push
xchg
mov
es
or
cmp
mov
cmpsb
aas
or
jns
pop
data16
mov
or
or
cmp
jnp
pmulhuw
loope
inc
cwtl
test
sbb
jle
or
lret
push
loopne
cmp
mov
jbe
sub
out
inc
roll
push
repz
ret
sbb
gs
and
xchg
inc
sub
mov
aaa
sub
daa
push
cmpsb
inc
add
rolb
cmpsb
leave
adc
adc
push
ja
pop
sub
push
pop
outsb
cli
mov
pushf
ret
cltd
push
cmp
xchg
jle
jno
into
dec
aas
add
nop
sub
or
outsb
or
jmp
out
adcl
insl
or
cmp
adc
and
cli
xlat
fsubrl
mov
fsub
jns
test
jge
adc
mov
and
cmc
cmp
lcall
adcl
pop
push
shll
cmp
loope
mov
mov
inc
and
or
jle
shlb
inc
lods
in
pop
sub
sub
dec
cmp
dec
mov
sarl
pusha
and
push
bound
xorb
sahf
cmpb
iret
inc
sarb
jb
mov
mov
or
popf
push
fwait
inc
das
xor
lock
mov
cmp
dec
jb
bound
xchg
pop
outsb
dec
pushf
push
and
mov
push
cmpsl
inc
clc
push
pop
ret
sub
add
push
out
insl
dec
xchg
push
pop
jnp
mov
outsb
push
mov
loop
pop
inc
mov
mov
mov
fldenv
add
inc
jg
mov
out
ljmp
das
outsb
push
inc
sbb
push
repnz
push
out
ja
push
jno
add
loop
adc
addr16
push
into
xchg
js
adc
pop
inc
jnp
jle
sahf
fsubl
addr16
add
test
repnz
mov
call
adc
sahf
insl
pop
lahf
add
daa
std
dec
pop
dec
mov
add
ret
jb
lret
adc
aas
jle
or
xchg
sbb
add
sbbl
pop
outsb
add
cmp
and
shlb
sbbb
pop
popa
dec
add
ret
adc
add
adc
dec
rolb
fistpll
push
fwait
xchg
aam
xchg
insb
sbb
add
cmc
pop
imul
mov
push
mov
pop
and
sub
jno
js
pop
ret
lock
sub
ret
jb
push
aaa
xor
shlb
addb
inc
and
mov
mov
mov
mov
jle
add
loop
xchg
mov
push
xor
mov
cmp
icebp
mov
insb
pop
dec
and
inc
and
pop
and
cli
pop
and
pop
sub
adc
push
mov
cld
dec
jns
lods
jns
scas
xchg
pop
push
lret
mov
or
and
adcb
cltd
sub
inc
notb
xchg
ds
nop
jmp
mov
mov
mov
adc
add
xor
cmp
xchg
loope
dec
push
lea
push
xor
cs
filds
mov
clc
adc
jp
and
push
loope
nop
pop
ror
xchg
orl
push
data16
mov
xor
stc
js
fwait
int3
inc
fnstcw
push
or
or
cs
jp
pop
data16
adc
mov
call
and
mov
or
rclb
shll
pop
lret
inc
add
dec
cs
and
ljmp
pop
and
arpl
push
and
loope
ret
adc
mov
and
jb
mov
pop
out
inc
xor
cld
ja
xor
jno
push
subb
inc
bound
xchg
push
sub
cld
mov
or
and
repnz
jb
andb
jmp
jns
xor
and
xchg
pop
push
adc
aas
push
mov
es
int3
daa
xor
dec
cmp
decb
xorb
bnd
pop
inc
pop
mov
sbbb
xchg
jb
test
cltd
icebp
jle
sbb
imul
movsb
bound
jns
mov
adc
rolb
ja
icebp
and
sub
ds
dec
mov
mov
mov
pop
jge
call
and
dec
inc
add
mull
xchg
lds
aad
out
jecxz
btc
or
mov
int
jae
ret
jp
push
cmp
div
insb
push
push
into
add
push
or
fcomps
les
jle
aad
mov
mov
fisubs
lret
cmp
pop
push
jb
jnp
std
push
dec
or
ror
bound
xor
jmp
sahf
sub
jg
decb
stos
dec
xchg
adc
push
dec
or
ljmp
jmp
jae
in
xchg
mov
pop
fdivl
or
mov
sbb
mov
out
jne
test
inc
mov
dec
inc
arpl
imul
imul
mov
sub
push
dec
jg
loop
adc
lock
xchg
cld
popf
cmp
push
aaa
cmpsb
mov
xor
notb
jns
pushf
js
push
or
jge
adc
inc
lcall
pop
outsb
xchg
mov
push
shlb
jl
and
mov
fsub
andl
pop
add
cmp
inc
cli
and
xor
push
mov
or
mov
push
adcb
push
xchg
push
jno
in
fidivrs
or
loopne
cmpb
adc
bound
cld
orb
das
arpl
or
inc
or
mov
add
sub
mov
insl
imul
mov
test
sbb
push
cld
jle
add
ror
jno
or
pop
lds
cmp
or
subb
push
and
mov
and
into
xchg
add
adc
mov
inc
incb
cwtl
push
mov
mov
cmp
or
sbbl
push
ss
cli
jnp
loopne
pop
rcr
push
and
mov
inc
outsb
jp
fnstsw
fsubs
jb
inc
in
inc
jle
les
and
push
add
xchg
pop
scas
add
pop
inc
into
pop
aas
test
jno
scas
jp
loope
ficoms
jns
and
cli
mov
xor
inc
mov
pop
xchg
jns
or
push
scas
jg
cmp
xchg
inc
or
jb
ljmp
and
jp
push
add
push
into
fwait
int
ljmp
stos
jne
ljmp
mov
xchg
cmpb
shrb
jbe
ja
jl
jns
ds
xor
sbb
xor
out
je
out
mov
shlb
ss
cmp
sti
stc
sub
popl
xorb
dec
mov
adc
mov
inc
mov
lahf
pop
outsb
shlb
jge
push
or
hlt
pusha
cltd
test
rol
pop
aas
test
inc
mov
xchg
loop
lock
inc
push
shlb
sub
add
outsb
iret
mov
mov
sahf
inc
cmp
mov
outsb
sub
repnz
bound
mov
inc
notl
inc
cmp
xor
dec
pusha
fisubl
outsl
sbb
xor
stos
jo
pop
inc
les
je
lret
outsl
push
stos
or
inc
mov
jns
aaa
decb
pop
push
testl
mov
pop
push
inc
mov
daa
movb
lcall
mov
in
popa
js
push
pop
mov
or
fcompl
scas
in
out
arpl
push
mov
popf
mov
inc
inc
jge
jle
jo
cmp
rorl
adcl
mov
mov
hlt
ja
mov
mov
add
jo
xchg
dec
rolb
cmp
bound
ret
clc
sub
popf
stos
sbb
inc
mov
push
fldt
outsl
mov
push
divb
xor
xchg
jmp
sub
roll
add
icebp
nop
clc
dec
adc
mov
insl
sub
ja
adc
ljmp
adc
fadd
xchg
fisubl
loope
or
xor
gs
pop
or
ficomps
cmpsb
shrb
add
dec
bound
dec
ret
adc
jno
repnz
outsb
sub
loope
sarl
xchg
xlat
mov
fsub
xor
mov
rcrl
ds
addb
adc
adc
push
cmp
and
cltd
scas
jns
and
pop
or
subb
adc
leave
shrb
cmp
dec
pop
cmovp
add
pop
repz
imul
cli
mov
jl
jmp
mov
pop
push
adcb
lret
loopne
je
dec
pop
ja
aad
orb
sub
pop
punpckhdq
or
jae
inc
push
enter
stos
idivb
imul
pop
imul
jle
daa
inc
jns
mov
shr
loop
int3
out
aas
or
jb
sbb
push
sbb
pop
fbstp
dec
xor
jl
pusha
aas
stos
out
add
aam
outsl
ds
push
xorb
inc
inc
testl
ljmp
mov
inc
and
jbe
pop
mov
jne
or
adc
adc
push
xchg
and
enter
out
pop
bound
loope
pushf
ss
xor
es
add
adc
xor
mov
cmp
xor
mov
mov
add
test
adc
xor
jo
pop
inc
pusha
sub
push
ret
pop
cmp
es
xchg
insb
cmpsl
and
ss
aaa
and
cmp
or
inc
inc
aam
repnz
or
mov
scas
adc
mov
push
cmp
dec
push
stos
and
iret
or
push
jns
sahf
fwait
cwtl
fcom
add
mov
and
loop
imul
std
cmp
jp
ss
cli
das
xor
mov
enter
jg
xchg
aas
aaa
insb
cmp
adc
in
push
pop
sbb
push
xor
push
pop
bound
and
cmp
mov
outsb
mov
subl
dec
cmpb
pop
and
inc
cld
icebp
cmpb
mov
xchg
popf
xor
mov
adc
push
inc
push
loop
repnz
sbbl
push
and
outsl
sub
pop
cli
inc
aam
jo
and
bound
test
xchg
cmp
jae
mov
pop
daa
cmp
popa
lret
and
outsb
fidivrl
cmp
aaa
decb
push
outsb
mov
pushf
xchg
push
stc
mov
jle
pop
bound
imul
pusha
lcall
dec
push
cmp
in
mov
cmp
inc
xchg
sub
dec
push
andb
js
and
into
pop
dec
xorl
inc
jle
data16
jns
mov
jecxz
mov
mov
xchg
cli
push
bswap
cvtpi2ps
repnz
sahf
stc
cmpsb
cmp
push
push
fisubrl
mov
push
lahf
lret
insb
sbb
or
cmp
push
mov
mov
push
mov
cld
ss
mov
ret
and
outsw
ljmp
fisttpll
shr
adc
outsb
fildl
pusha
call
push
jp
ljmp
dec
mov
mov
xor
push
rorl
mov
jns
cmp
sub
popa
push
adc
outsb
cmpb
mov
rolb
sbb
repnz
or
push
repz
pusha
dec
jg
scas
std
mov
sti
jne
ret
stc
jmp
jp
cmp
or
add
jnp
sub
in
jbe
movsb
cli
add
and
push
sbb
mov
cmp
out
jmp
testb
pop
jl
idivb
sbb
lcall
push
lds
push
push
xchg
lcall
inc
ficoms
cltd
or
adcb
mov
push
xchg
stos
jbe
fadds
pop
stos
push
cli
xorl
mov
fdivr
insb
xor
adc
add
fidivrs
adc
adc
cltd
xchg
outsl
push
dec
mov
cli
sahf
cmpsb
jle
xchg
pop
dec
push
cwtl
push
mov
cs
sub
ss
push
inc
pop
xchg
pop
inc
incb
ds
jns
or
js
ficompl
enter
ret
jge
rclb
cmpb
sbb
ss
xor
push
push
shrb
xchg
pop
ja
das
xor
mov
push
sbb
jnp
dec
push
clc
lcall
xor
and
xchg
outsl
lea
jp
cmp
cmc
jae
cmp
dec
dec
bound
call
ret
jl
shll
push
jmp
jp
inc
pop
mov
sub
inc
and
cli
jae
add
or
xor
sahf
xchg
mov
pop
inc
pop
add
ds
outsl
mov
jo
repnz
mov
adc
lret
pop
cmc
lds
dec
out
inc
inc
sbb
roll
sub
pop
lods
xor
js
push
xchg
sarl
or
ljmp
ja
outsl
jnp
push
and
imul
bound
push
push
xchg
inc
sbb
pusha
dec
cli
dec
insl
xchg
js
je
xor
rcl
pop
mov
sub
pop
call
call
mov
mov
push
rclb
xor
loopne
stos
mov
jge
cli
mov
pop
fmuls
mov
and
mov
mov
or
addr16
add
sahf
clc
jle
sub
inc
cmp
and
jl
pop
pop
imul
in
shlb
or
jb
jge
mov
stos
add
dec
mov
cmp
into
notb
xor
ss
add
and
stc
inc
jns
jle
push
push
sub
inc
pop
inc
outsl
movsl
add
scas
nop
andb
aas
mov
sbb
inc
out
inc
test
adc
cmpsl
cli
outsb
imulb
ficompl
loop
imul
push
xorb
jnp
or
int3
push
push
jg
jp
cmp
xchg
sub
in
dec
loop
aad
mov
js
push
push
push
sahf
mov
les
adc
mov
ret
lods
push
push
mov
pop
jp
lret
into
aam
nop
sub
dec
mov
fimull
and
ficomps
jae
sub
xor
sbb
mov
leave
cli
mov
adcb
bound
push
pop
sti
jnp
clc
push
icebp
pop
in
add
and
outsb
rcrl
pop
rcrb
ret
mov
pop
push
cmp
out
mov
pop
push
js
stos
dec
repnz
sbb
pop
ljmp
sub
outsl
sbb
jle
orl
pushf
xorl
sub
dec
sbb
adc
movsb
in
mov
es
pop
push
jge
fidivrs
out
xor
mov
jb
movsl
in
xor
jnp
cmp
add
repz
call
cmpsb
roll
mov
imul
mov
repnz
fidivrl
push
shll
and
add
jp
mov
jg
popa
pop
jle
cmp
movsb
lods
sub
pop
mov
mov
out
nop
and
inc
or
sbbb
pushl
bound
xchg
mov
loop
test
add
dec
sbbl
pop
pop
es
pop
fwait
dec
aas
fwait
into
rolb
inc
push
test
adc
inc
ret
aas
daa
add
inc
aad
pop
cmp
push
jo
xchg
outsl
das
push
jp
out
add
push
cmp
push
mov
out
sub
push
xchg
mov
mov
jo
inc
or
dec
fcoml
fs
pop
jb
pop
mov
and
xlat
push
push
repnz
and
jb
ret
repnz
pop
dec
inc
jns
push
dec
sarb
fistpll
inc
repnz
xor
je
xchg
mov
cmpsb
mov
insb
imul
roll
mov
sbb
push
popa
outsb
pop
push
cmp
jle
or
rcr
jg
ss
test
pushf
daa
adc
das
adc
dec
sbb
stos
shll
cmp
shl
imul
add
jge
inc
cli
or
fidivl
movsl
pop
sahf
dec
loopne
mov
or
test
push
inc
stos
or
xchg
xchg
mov
movb
and
cwtl
cld
rol
add
ret
add
xchg
xor
pop
fwait
push
sbb
xchg
jp
pop
adc
sub
jns
fidivrs
and
inc
pop
xchg
xchg
inc
es
das
pop
into
hlt
push
jmp
push
lfs
xor
sbbb
mov
jo
mov
lahf
mov
ja
pusha
mov
or
pop
sbb
out
mov
cmp
movsl
sbb
ja
xor
mov
std
shlb
sub
fs
or
mov
sub
mov
leave
je
scas
and
loopne
inc
sahf
das
pop
cmpsb
adc
pop
ljmp
pusha
orb
jne
xor
cmp
outsb
xorb
push
ja
rcrb
xchg
and
pop
mov
jns
out
int3
inc
xchg
jb
add
jo
push
jo
push
sub
add
lock
imul
jnp
mov
outsb
adc
test
push
mov
xor
jp
jle
shrl
xor
and
jno
lcall
mov
mov
aam
dec
push
notl
ljmp
sub
xor
testl
fucompp
jle
out
jbe
cwtl
push
scas
mov
sub
ss
aad
cmpb
divb
push
push
push
es
subb
mov
xchg
push
inc
pop
inc
aaa
bound
rorl
outsl
into
repnz
call
mov
push
jge
neg
sub
adc
xor
dec
cmp
push
push
and
pop
mov
sub
adc
cwtl
je
es
into
push
inc
jge
xchg
lds
push
xchg
lret
ud2
jb
or
inc
adc
push
fs
push
mov
fbld
bound
pop
insb
sbb
rcl
cmpb
push
pop
and
jp
ss
inc
scas
adc
mov
add
inc
mov
and
imul
fs
ret
lods
adc
or
mov
mov
sbbb
mov
jns
outsb
adc
hlt
fimull
imul
push
sub
scas
or
dec
ljmp
pop
inc
outsl
inc
fmulp
cmpsl
jnp
mov
sub
aas
sub
and
orb
sub
jp
decb
jp
es
clc
mov
mov
inc
xchg
sbb
and
adc
rcll
sbb
ffreep
mov
dec
push
and
or
push
and
test
jno
add
scas
ret
jne
xor
outsb
les
rolb
push
xchg
dec
cmp
pop
dec
jb
push
xor
sub
adcb
jnp
inc
in
xchg
push
popa
push
rcl
inc
negb
jb
push
and
cmp
imul
push
xor
inc
jp
or
mov
mov
dec
mov
imul
jne
push
std
push
inc
enter
xor
negb
aad
inc
rorb
add
lret
xorl
cwtl
push
adc
mov
mov
push
push
push
cmp
aaa
ljmp
ja
mov
inc
sub
add
mov
jb
push
in
test
mov
and
push
sbb
icebp
inc
push
inc
jmp
cmpsb
xor
out
mov
daa
jns
out
ret
sti
xor
xor
jbe
push
jp
dec
jae
into
cmp
pusha
repz
outsl
mov
cli
data16
dec
movhps
lret
ret
ret
cmp
fadds
cmpb
shrb
pusha
rorb
jge
hlt
mov
mov
outsl
push
mov
mov
cmp
pop
imul
inc
dec
jns
xor
jg
aad
jge
ret
sub
add
jge
das
outsb
addl
mov
cli
xchg
xor
mov
arpl
pop
push
lcall
aad
ret
xchg
ds
test
push
and
mov
inc
fisubl
xor
push
pusha
xor
rclb
xchg
jbe,pn
inc
mov
aas
cmc
jno
add
dec
add
std
orl
lret
ja
pushf
sub
mov
push
call
push
jnp
imul
pop
mov
inc
jp
push
pushl
cmpsb
fisubrl
mov
enter
jb
faddl
pop
cmp
or
ret
rorb
jns
cmp
xorb
pop
out
jge
les
inc
es
add
lret
xor
cmp
fs
jg
jge
ror
pop
mov
inc
loope
ds
sar
std
sub
xchg
mov
pop
sbbb
jg
cmp
push
jle
popf
scas
inc
add
cmpsl
sbb
xchg
ss
cli
add
or
iret
dec
sti
xchg
sub
ffree
jg
adc
pusha
push
jle
and
es
sub
cmp
mov
and
sub
mov
ljmp
dec
idivl
push
outsb
sahf
jns
pushf
xor
jle
arpl
sbb
inc
push
pop
push
cli
pop
ds
fstpt
xchg
jbe
adc
mov
add
and
xchg
cli
cmp
iret
testl
mov
ds
jns
movsl
test
inc
mov
xchg
inc
and
pop
mov
push
push
std
and
aas
xor
mov
imul
push
mov
bound
jge
adcb
push
bound
adc
xor
bound
inc
data16
into
idivb
les
dec
sbb
pop
or
xchg
and
jns
pop
ljmp
cmp
jno
push
or
pop
cmp
ficomps
rorb
and
cmp
movb
add
xor
or
sbb
repnz
sub
jno
jae
mov
lahf
ljmp
mov
rcrb
dec
mov
aas
xor
sbb
ret
sub
jns
sahf
sbb
adc
lret
cs
and
cmp
push
ja
stos
fwait
subb
bound
ror
sub
pop
loopne
xor
inc
out
and
pop
adc
and
push
xchg
push
repnz
push
bound
pusha
dec
rolb
push
outsl
rclb
outsl
jae
lret
enter
adc
or
into
and
lds
punpckldq
outsl
jno
push
push
rcrb
or
mov
inc
jb
jle
cwtl
std
fwait
inc
fidivl
repnz
pop
dec
dec
dec
pop
ljmp
jnp
ficoms
xor
pop
inc
pop
pop
test
inc
jbe
pop
push
jb
ja
enter
mov
or
mov
jnp
sub
inc
sbb
cli
pop
fistps
ljmp
into
pop
bound
mov
inc
push
and
outsb
xchg
adc
daa
pop
cs
adc
sub
aas
test
sbb
inc
push
imul
fcompl
inc
into
sti
outsl
sbb
push
out
mov
push
jb
xlat
pusha
jo
aaa
outsl
outsb
xor
hlt
sbb
ret
or
jp
andl
add
nop
imul
orl
cmc
ret
in
out
or
adcb
loopne
add
and
fisttps
add
and
or
pop
xor
xchg
xor
cmp
adc
movaps
cmp
data16
pop
push
loopne
xor
clc
fwait
dec
sub
push
xchg
rclb
push
nop
cld
adc
sbb
lods
insb
cmp
jno
rolb
adcl
cmp
and
xchg
sub
inc
inc
movl
adc
push
outsl
push
repnz
jno
jp
inc
or
notb
adc
push
outsw
mov
repnz
insb
scas
rcl
dec
cmp
jl
cwtl
jp
test
push
push
sbb
jbe
mov
repnz
aaa
shlb
inc
repz
outsl
mov
jb
xor
adc
pop
dec
rcrb
loopne
push
outsb
insl
imul
jle
or
and
ljmp
or
fmull
sbb
divb
ja
cmc
std
push
insb
mov
jbe
outsb
addl
pusha
pop
jnp
pop
fs
mov
lsl
call
fildl
popa
mov
and
sahf
lds
pop
ret
xchg
addb
mov
insb
cmpsb
jl
testb
imul
fnstcw
add
lcall
pop
andl
bound
bnd
jbe
rorl
mov
adc
add
dec
inc
push
xchg
in
out
push
xchg
push
shlb
push
adc
add
rol
decl
mov
sbb
lret
cmp
inc
pop
bound
lret
lods
jne
stos
mov
jle
pop
adc
shlb
inc
je
icebp
cmp
jns
out
or
dec
add
cmp
xorb
inc
fs
and
jnp
dec
mov
orl
stos
push
mov
imul
push
xchg
je
dec
jle
ljmp
das
rolb
inc
fwait
jae
fisttpll
aaa
stos
data16
jno
and
push
data16
sub
inc
inc
loopne
scas
imul
cmpsl
inc
jge
cmp
sub
push
scas
xor
lret
pop
outsb
pop
cmp
bound
popa
mov
adc
pop
and
xchg
outsb
cmp
jnp,pt
push
in
cs
aam
lea
xchg
fisubrl
sub
xor
and
and
scas
imul
popa
jp
jns
es
mov
pop
pop
sub
out
push
or
mov
cld
inc
lret
or
pop
cmpsb
mov
mov
stc
add
ljmp
ja
rclb
movsl
add
fisttps
sbb
dec
sar
bound
jnp
fldcw
push
jle
loopne
ret
rcl
add
jle
mov
vmwrite
inc
xorb
pop
insl
adc
ljmp
or
inc
repnz
cltd
mov
sahf
jge
rorb
lret
push
pop
jge
sbb
leave
jns
out
hlt
xlat
outsl
dec
out
aas
xor
push
fiadds
pop
mov
xor
outsl
movsb
push
cmp
outsb
pop
ja
insb
into
bound
pop
xor
pop
dec
pop
sub
lret
imul
dec
and
adc
jbe
ds
sub
pop
shlb
inc
jg
or
jns
push
sbb
cmp
pop
jbe
fcmovb
jb
ss
jns
mov
ja
adc
add
pop
push
sbb
cmp
out
repnz
inc
push
mov
push
xchg
jb
fistps
push
ret
icebp
andb
pop
ror
push
imul
insb
mov
sub
mov
push
pop
cmpsb
add
cli
pop
xchg
jge
in
pop
shlb
cmpb
sbb
bound
mov
rcrb
inc
sahf
mov
jg
push
test
shl
push
setp
dec
push
jbe
push
inc
fwait
xor
cs
mov
mov
ret
fimull
cmpsb
ret
sub
bound
pop
jo
sbb
jae
cmp
mov
sub
xor
add
cmp
mulb
sbb
and
push
lcall
cmp
outsb
sbb
sub
popa
add
aad
imul
lahf
xchg
rcrl
ss
ss
add
mov
mov
imul
push
sbb
jg
sub
adc
sbb
push
or
sub
or
aaa
and
data16
jnp
lock
lret
sub
push
and
jo
jecxz
jle
add
inc
mov
adc
dec
sahf
jbe
into
cmp
mov
shlb
inc
mov
ret
rcrl
xchg
cmp
shrb
pop
sbb
adc
xchg
decb
sarb
mov
bound
std
pop
mov
inc
sbb
push
daa
mov
pop
jno
data16
push
ja
jp
sahf
add
cmp
sub
mov
dec
sub
notl
xor
jbe
dec
add
push
cmp
cmp
inc
fiaddl
bound
sub
pop
inc
push
fiaddl
outsl
xchg
in
dec
pop
sbb
cmp
dec
mov
inc
and
inc
test
jns
push
and
cmp
mov
scas
add
jo
pop
inc
rorl
jecxz
or
ljmp
pop
int
mov
xor
rorl
pop
aaa
dec
jo
leave
add
inc
mov
jp
out
sti
hlt
mov
inc
fiadds
gs
pop
push
xor
lret
data16
pop
pop
dec
sbb
dec
sub
ljmp
mov
movzbl
inc
sub
mov
jle
fsts
enter
mov
xchg
pop
ljmp
dec
jge
das
add
cmp
jl
mov
xchg
or
stos
add
into
fwait
jo
or
int
dec
and
xchg
jo
sbb
jp
out
int3
enter
cmpb
add
lods
mov
inc
and
cmp
sbb
sub
hlt
aaa
testb
jns
add
mov
mov
xchg
bound
mov
or
fsts
or
sarb
bound
jp
add
jb
sub
cmp
cmp
aad
dec
lea
int3
xchg
inc
sbb
or
ja
ljmp
xchg
aas
sbb
xlat
adc
rclb
or
test
stos
jno
jae
xor
sbb
lcall
popa
pop
xorb
inc
lret
jge
dec
sbb
add
inc
bound
fisttpll
jo
inc
push
xor
arpl
mov
mov
cmp
and
add
ljmp
cmp
dec
mov
dec
xor
cmc
scas
daa
js
xchg
rorb
xchg
ret
faddl
jbe
cltd
pop
cmp
inc
inc
into
ret
push
sbb
jecxz
cmpsb
pusha
xor
sahf
push
mov
inc
xchg
push
cltd
or
push
enter
and
and
outsb
out
std
mov
jge
jle
fiaddl
call
jge
cli
sbb
jns
pop
mov
mov
jp
gs
jg
insb
aaa
xchg
out
ret
inc
pushf
insl
int
sahf
jge
sub
jae
rorl
jb
in
jb
and
mov
mov
arpl
adc
adc
pop
dec
pop
dec
in
bound
addr16
inc
mov
mov
jnp
in
xchg
cmp
mov
lods
addr16
mov
mov
jnp
shrb
inc
repz
insb
stc
pop
sbb
lcall
mov
rcrl
xor
ljmp
jge
scas
int
push
and
pop
ret
mov
and
outsl
incb
mov
inc
out
nop
int
sub
jge
mov
cwtl
jns
dec
inc
inc
jb
mov
es
inc
das
and
and
mov
test
ficoml
and
jo
loopne
add
dec
add
outsb
outsl
lahf
ss
jbe
dec
ror
push
rcl
ret
jb
or
inc
ds
pop
ja
ret
into
jp
sbb
bound
adc
sbb
out
cmp
pusha
jp
jae,pt
push
dec
and
jne
and
je
and
jle
push
pushf
and
pop
cltd
ss
push
adcl
outsl
pop
mov
or
jbe
daa
cmp
bound
cmpsl
xor
mov
push
stc
jecxz
fsubrl
jg
jno
data16
fwait
and
mov
add
inc
push
inc
jle
jns
push
push
dec
repnz
pop
mov
and
movsl
data16
add
and
stos
jb,pn
jmp
pop
xor
ss
jb
mov
sub
inc
ret
sahf
add
xchg
and
nop
and
mov
sub
jl
ljmp
mov
clc
push
notb
and
adc
xchg
imul
mov
out
scas
hlt
push
out
sub
mov
push
push
rcll
inc
push
pop
add
pop
subb
jp
inc
ret
mov
jns
in
xlat
fs
pop
out
bound
inc
push
adc
push
jns
and
fs
mov
ret
jecxz
push
cli
sub
outsl
fwait
sbbl
mov
mov
cmp
mov
push
out
sbb
repnz
ljmp
int
repnz
and
push
int
pop
cmpb
jae
mov
fimull
xchg
xchg
or
add
add
xchg
aas
pop
fisubl
gs
sub
out
sub
adc
add
dec
mov
rclb
dec
inc
push
adc
stc
xor
add
jmp
cwtl
xor
mov
adc
pop
xor
jp
inc
les
mov
sub
mulb
or
mov
push
addl
rcll
push
enter
fistpl
sub
rcll
jp
xor
and
jne
sub
nop
stos
xchg
push
xchg
mov
insb
outsb
sub
out
push
jge
and
pop
sidtl
aam
push
inc
push
int3
xchg
sub
mov
cmp
inc
add
push
out
xor
push
push
dec
outsl
or
jbe
jbe
fs
sti
imul
scas
add
les
movb
ret
mov
jbe
popf
inc
clc
aaa
push
and
push
dec
clc
cmp
jge
xor
filds
mov
add
imul
out
add
push
clc
dec
sbbb
pushf
loop
mov
dec
outsb
and
cltd
outsb
ret
push
cs
ret
call
cmpb
stos
out
ficoml
and
stos
js
jb
das
mul
bound
mov
outsl
adc
push
bound
jnp
in
push
xor
mov
mov
inc
adc
cwtl
adc
subb
pop
add
mov
incb
push
aaa
xor
mov
cs
sub
cmp
fwait
outsl
push
data16
cmp
xor
pop
and
pusha
and
popa
jno
jbe
repnz
ret
push
push
ja
dec
jp
cmp
inc
mov
pop
lcall
and
pcmpgtd
sub
dec
movsl
dec
mov
mov
xor
lret
cmp
sbb
ds
stos
ret
stc
xor
inc
xchg
inc
jle
pop
pop
pop
enter
jl
pop
mov
mov
inc
jbe
jge
aam
pop
push
dec
mov
aaa
and
inc
fisubrs
add
jne
in
or
add
pusha
pop
push
je
cmp
jl
inc
adc
sbb
fiaddl
jns
in
inc
sub
ret
mov
repnz
in
cmpsl
js,pn
or
inc
jnp
ret
test
fs
bnd
inc
arpl
rep
and
aad
push
and
and
sub
and
dec
sbb
jp
push
xchg
es
leavew
xadd
and
loop
stos
outsb
xchg
mov
and
mov
add
and
or
lcall
loopne
jae
xor
pop
push
xchg
cmp
push
popf
xor
mov
xor
pop
jnp
mov
jp
push
inc
sub
push
and
pop
ret
add
xor
aaa
pop
jp
or
rorb
xchg
adc
out
xchg
into
loopne
and
mov
jb
cmpl
pop
xchg
mov
jns
cs
add
dec
xchg
jns
jno
sbb
push
das
cmpsb
cmp
push
sbb
pop
data16
and
xchg
jb
xchg
stc
jo
cmp
pop
sub
push
add
adc
std
or
and
sub
pop
js
stos
out
push
insb
arpl
xor
mov
jge
push
les
and
adc
repz
or
jb
stc
push
jo
es
mov
pop
bound
xchg
adc
mov
das
jbe
lock
mov
push
pop
adc
je
in
adc
pusha
pop
sahf
push
into
push
rclb
push
dec
fimuls
es
xor
add
sbb
popa
outsl
push
cmp
push
fistpll
addl
add
pop
and
pop
arpl
inc
mov
inc
out
mov
jnp
bound
mov
and
cld
cli
sbb
inc
xor
sub
sbb
rorb
jnp
pop
movsl
leave
popf
es
and
xchg
int
cmpsl
sub
shlb
add
xor
push
rcrb
add
jb
in
xchg
ja
jnp
mov
ds
mov
push
stc
test
push
and
ja
int
aas
cld
idiv
push
jge
or
xchg
push
ficompl
mov
mov
and
add
shlb
sbb
jle
dec
enter
inc
pop
cmp
mov
cmp
daa
lahf
sub
daa
xlat
add
bound
sarl
sbb
xlat
insl
pop
gs
lret
popf
fidivs
xor
loop
jb
ja
cmp
pop
sarl
jle
xlat
clc
ficomps
cld
loop
imul
mov
sub
inc
jb
pop
xchg
outsl
xchg
inc
pop
xchg
out
out
adc
xchg
or
inc
xor
arpl
cld
jbe
push
ret
out
inc
fcompl
orl
adc
dec
xchg
sarb
push
mov
and
add
push
add
push
sti
nop
test
subb
xchg
cmp
jg
sbb
ljmp
pusha
sub
pusha
or
and
ds
jbe
cli
xor
cmc
cmp
mov
fcompp
dec
shll
xchg
or
mov
outsb
push
mov
ss
scas
sbb
dec
push
mov
mov
rorl
push
and
xchg
int
cli
filds
inc
enter
or
ret
adc
ss
out
pusha
rolb
js
mov
cmp
inc
aaa
sub
pop
sbbb
inc
push
mov
and
sub
ds
xchg
mov
mov
fistpll
push
repnz
test
mov
ljmp
testb
sub
add
sbb
mov
fwait
loope
rorl
xchg
cmp
adc
mov
xor
inc
lret
xchg
pop
push
pop
sub
icebp
push
lea
sbb
xor
mov
mov
jo
pop
pop
jle
and
mov
pop
pop
fdivr
test
jl
mov
bound
repnz
cmp
adc
inc
rcrl
mov
mov
clc
cmp
ret
cmpb
inc
xchg
fs
mov
adc
addb
les
inc
jnp
out
mov
ds
jmpw
add
adc
pop
cmp
mov
adc
push
imul
pop
push
push
pop
or
frstor
inc
ds
xchg
js
inc
ss
imul
mov
dec
push
inc
push
dec
mov
cmp
mov
adc
mov
ds
out
bound
mov
ja
jg
inc
jg
popa
xchg
subl
dec
push
jb
test
jo
jmp
inc
sbb
push
inc
lret
jns
dec
cmp
imul
mov
mov
xor
mov
push
push
sbb
cmp
or
jbe
popf
sub
pop
cmp
inc
bound
fst
ficoms
pop
adc
add
sub
dec
push
insb
dec
pop
adc
mov
mov
shl
nop
cmp
nop
add
or
push
jge
test
lea
add
xchg
push
mov
jo
lahf
out
and
sub
push
adcl
stos
jp
push
rol
pop
cmp
inc
and
lods
xor
and
dec
push
push
jp
inc
loopne
add
push
les
es
shll
std
cmp
out
push
jne
add
or
test
cli
lcall
jbe
push
push
ret
test
pop
ss
lret
dec
pop
fiadds
push
mov
leave
sbb
adc
out
jnp
xorl
push
andl
dec
bound
mov
popa
movsl
es
adc
dec
or
cmp
sbb
cs
ret
add
xor
sbb
fiaddl
or
test
imul
aaa
test
jae
fwait
xor
lds
and
dec
adc
dec
or
mov
ss
out
xor
bound
inc
mov
aas
sbb
pop
hlt
ficompl
jnp
iret
pop
push
rorb
loop
aad
inc
jbe
adc
ja
mov
mov
inc
inc
aas
jae
xchg
test
push
jl
xchg
sub
aaa
and
iret
push
dec
push
js
push
aam
out
inc
xor
and
iret
stos
jg
iret
cltd
mov
leave
dec
jae
cmp
ret
pop
sarb
sub
adc
push
ds
in
jbe
pop
mov
or
push
stos
out
jle
xchg
adc
lcall
mov
js
loopne
outsl
ficoml
mov
pushf
sbb
incb
xor
ret
jo
stos
pusha
push
jge
lcall
push
flds
xor
or
ficompl
ret
data16
jne
outsb
leave
mov
ss
pop
aas
pop
sahf
ret
shl
push
std
xor
ret
push
shlb
ret
jbe
dec
js
pop
dec
notl
push
lahf
or
or
jp
jmp
bsf
mov
sti
ret
sbb
push
jle
repz
inc
adc
pusha
and
outsl
inc
shlb
and
mov
dec
popa
sub
daa
push
push
dec
push
adc
call
sbbb
hlt
pop
or
mov
sbb
bound
stos
dec
scas
icebp
cmp
xor
js
imulb
jge
mov
push
cmp
jge
cwtl
sbb
push
xchg
jle
sahf
jle
ja
jecxz
arpl
push
icebp
stos
icebp
inc
add
pop
popf
cli
stc
insl
sbb
and
stos
mov
mov
sub
insb
orb
and
scas
mov
cmp
pushf
in
ret
adc
int3
out
daa
mov
add
jne
mov
sub
push
dec
in
imul
push
ss
lcall
ss
mov
add
sbb
sub
dec
adc
aaa
int
xchg
je
xor
or
imul
rcll
or
mov
dec
or
loop
mov
or
pusha
dec
mov
movsl
push
cmp
sbb
add
push
inc
and
xchg
pop
sbb
push
mov
and
sbb
inc
or
jo
add
fisubl
cmp
cmc
jnp
shrl
mov
adc
stos
popf
decb
jbe
pusha
jo
mov
inc
push
adc
dec
xor
jb
subl
adc
pop
hlt
shlb
andb
sbbl
add
repnz
icebp
push
add
cmc
mov
adc
mov
push
mov
adc
in
repz
movsl
pusha
rolb
aaa
jns
add
lods
push
xchg
loopne
movsb
or
push
movsl
push
loop
outsl
pop
adc
cmp
sub
pop
ljmp
xchg
push
pop
enter
push
sarl
addb
jp
xlat
push
lods
jno
addl
inc
push
mov
jae
adc
dec
ret
lds
pop
popf
pusha
mov
ss
ja
sbb
pop
jmp
aas
push
or
aas
mov
cmp
pop
mov
inc
push
mov
imul
jo
mov
addl
shrl
xchg
sbbb
sbb
pop
and
adc
clc
add
std
xchg
inc
mov
arpl
cmp
repnz
incb
inc
adc
mov
jb
imul
jl
sbb
push
mov
imul
add
mov
daa
movzwl
sub
repnz
sbb
or
popa
cmpsb
push
insl
cmp
add
jp
dec
sub
mov
cmp
push
or
dec
dec
inc
pushf
out
jae
add
pop
lea
jp
push
add
out
and
out
sub
push
aam
js
dec
or
stos
pop
mov
orb
mov
jmp
movsl
pop
das
xor
rolb
and
fstl
jp
pop
add
mov
and
jnp
cmp
sub
inc
cmp
jb
repnz
in
aad
xor
mov
adc
mov
lcall
pusha
stos
ret
add
or
xor
dec
cs
jp
mov
mov
push
and
rol
and
iret
bound
pop
dec
inc
cmp
push
stc
in
add
jnp
dec
adc
ja
pop
mov
repz
test
or
mov
aas
mov
repnz
fidivrs
stos
mov
sbb
lods
lock
push
cwtl
push
ficomps
xor
dec
jp
and
scas
test
push
or
outsl
ds
adc
adc
arpl
push
pop
adc
xchg
inc
and
out
jge
lds
icebp
ljmp
inc
push
pop
cmp
insb
jle
shrb
jno
andb
jecxz
cmp
adc
sub
pop
pusha
pusha
ss
scas
shrb
or
push
data16
inc
sub
ljmp
add
sbb
jb
and
and
dec
jle
lret
jle
pop
inc
sar
in
packuswb
ss
sarb
aaa
fcmovbe
shrb
scas
adc
int
into
mov
jg
int
xor
ja
inc
add
push
pop
sbb
fisubrl
sahf
es
ret
or
shlb
repnz
mov
outsl
jo
dec
call
popl
insb
scas
jne
mov
pusha
inc
pop
jge
and
push
fcomps
nop
mov
and
and
xorb
push
inc
testl
mov
jo
mov
xor
xorb
lcall
sub
push
ljmp
cmc
sbb
push
xor
push
xchg
adc
jo
cmp
test
shrb
push
shlb
cwtl
imulb
pop
cmp
enter
inc
push
mov
test
xor
pop
cmp
ret
fdivrl
inc
and
push
xchg
aas
mov
xor
dec
inc
cmp
xor
aam
cli
in
jns
cli
jo
sub
outsb
imul
and
jle
push
mov
xor
push
mov
lods
inc
sub
ljmp
cmp
iret
xchg
into
sbb
mov
push
pop
pop
enter
ja
jbe
push
repz
push
out
lods
insb
bnd
das
rol
inc
sbb
mov
mov
cmp
arpl
hlt
mov
and
ror
xchg
or
je
push
jg
mov
ljmp
pop
fwait
and
or
jne
into
mov
cmp
dec
adc
sahf
dec
imulb
or
pop
ja
mov
push
push
inc
lds
in
mov
push
and
cmp
inc
mov
cmove
ss
jp
and
mov
scas
stc
bound
andb
sti
repnz
sbb
add
mov
or
push
lret
push
xchg
mov
add
xor
je
push
add
cmp
sub
jae
int3
lret
xor
ret
add
pop
aam
jle
pop
mov
mov
scas
adcb
adc
insb
ds
and
pop
stc
mov
ja
inc
pop
and
jle
ret
sbb
push
pop
out
sahf
into
inc
and
mov
cwtl
mov
jge
xor
xor
ds
xchg
pop
adc
pop
shrl
arpl
add
xorb
imul
pop
addr16
mov
and
mov
mov
push
mov
ds
outsb
sbb
sub
or
mov
fdivrs
ljmp
or
not
ds
xor
ret
inc
bound
popa
in
incw
pushw
in
cmpsb
pop
dec
jg
mov
subb
cmc
push
sub
push
add
xchg
div
loop
in
hlt
jns
adc
ljmp
pop
shrl
mov
and
sub
mov
add
and
daa
sbb
cli
add
sbb
enter
imul
rolb
jg
and
icebp
loop
cmp
rcrb
repnz
xor
mov
xor
aaa
dec
iret
mov
dec
jo
cmp
inc
fsubl
push
sub
jge
call
mov
xchg
cmp
imul
push
iret
push
addl
stc
jnp
and
jns
jmp
or
cmp
ja
add
ds
sub
mov
mov
xor
lret
cmp
mov
insl
lods
xchg
xor
sbb
vorps
out
cmp
push
es
into
jns
adc
das
pusha
push
es
xchg
or
mov
mov
testb
and
ret
test
push
imul
adc
push
in
sahf
outsl
gs
xlat
and
mull
add
clc
cs
push
lahf
cmpw
sbb
xchg
shll
add
pop
ret
jb
cmc
dec
das
push
stos
imull
into
cmp
popa
mov
push
push
push
add
fidivs
daa
pop
push
push
inc
stos
inc
push
jle
cmpsb
add
iret
or
sar
ds
xchg
in
jl
xchg
out
cmpb
add
ja
inc
mov
in
xchg
pop
test
rcll
pop
cmp
loopne
mov
loope
int
fsubp
xor
jne
loop
imul
pop
imul
aas
jnp
jb
xchg
cmc
xchg
dec
add
cmp
sbbl
jo
es
mov
es
ss
inc
xchg
movd
insl
movsl
dec
pop
xlat
test
jle
in
fs
rol
jl
cmp
sub
add
push
loop
push
int3
dec
xchg
xor
cs
mov
cli
hlt
add
repnz
and
pop
outsb
ret
cmp
je
sbb
sub
pop
pop
adc
sbb
and
xor
push
xchg
idivb
lcall
movsb
mov
xor
cmp
jns
push
shlb
inc
push
gs
repnz
js
sub
push
push
sbb
xchg
xchg
dec
push
push
bound
pop
ljmp
push
push
pop
cmp
popaw
inc
repz
cmp
adc
scas
add
mov
repnz
aaa
mov
jo
jp
xchg
into
jns
mov
push
xor
jnp
out
in
lock
subb
in
push
and
aam
sahf
inc
jo
outsl
mov
push
aad
repz
jge
adc
cli
xchg
subb
jb
rorl
lcall
adc
inc
push
and
xor
scas
mov
std
movb
and
bound
inc
mov
jp
jne
pop
push
mov
and
mov
cmpl
jle
inc
xor
enter
push
dec
rorl
inc
mov
shl
push
jo
or
add
xor
xchg
sbb
ds
inc
and
mov
jmp
cmp
push
dec
inc
mov
leave
data16
mov
addr16
push
data16
outsl
mov
adc
insl
cli
adc
mov
out
sbb
push
fistpll
addl
pop
push
filds
or
mov
cmpps
gs
mov
dec
popf
lcall
addl
repz
sbb
dec
xor
mov
mov
shll
xorb
rcl
test
jns
mov
bound
out
pop
sub
xorb
adc
sbb
adc
les
inc
mov
mov
jp
outsb
flds
rcl
jne
inc
test
adc
jge
inc
enter
js
in
dec
jl
jno
andl
cmp
push
ss
ret
mov
jecxz
xchg
jle
push
mov
sub
or
mov
push
mov
push
pop
outsl
sub
mov
lods
inc
scas
push
pop
jb
jp
adc
push
dec
data16
mov
cmp
xchg
and
xor
ret
into
jl
push
jp
push
jg
inc
mov
repnz
jg
out
cmp
xchg
sti
adc
inc
shrl
xchg
clc
pop
xchg
push
inc
jo
xchg
cmp
pop
mov
xor
dec
cmpsb
mov
pop
add
jne,pn
pop
inc
loop
add
inc
pop
enter
jbe
jge
fs
adc
dec
jb
or
push
mov
icebp
jns
sbb
shll
roll
fidivrs
sahf
inc
aas
insl
les
jno
fisubl
lahf
ds
mov
outsb
push
and
pusha
adc
outsl
lret
out
pop
jge
cs
lds
inc
mov
fwait
push
jae
les
outsl
clc
cmp
int
jbe
cmp
or
inc
jp
add
xchg
out
push
pop
adc
sub
les
pop
int
mov
into
cli
mov
inc
cld
stos
mov
inc
out
out
sti
pop
das
mov
jecxz
mov
ljmp
cli
fs
and
adc
mov
jge
fcmovb
pop
addl
push
cmpsb
inc
cli
fisttpll
push
sbb
pop
cmp
mov
stos
xor
jg
jne
push
mov
repnz
cmp
adcl
sbb
insb
cmpsl
iret
push
inc
sub
loop
xchg
insb
insb
enter
pop
pop
jo
push
adc
adc
jge
sbb
pop
mov
pop
dec
pop
shlb
cld
in
sbb
loop,pt
and
push
fwait
inc
sub
xchg
adc
mov
push
idivl
or
ljmp
pop
rol
lret
data16
imul
addr16
test
push
push
stc
pop
stos
and
arpl
xor
loopne
cmp
pop
insb
hlt
fisubrl
std
fcmove
mov
dec
data16
sbb
testb
test
add
out
adc
push
rcrb
mov
das
inc
faddp
push
pop
inc
cmp
dec
orb
pop
xorb
sahf
lcall
cmp
adc
sub
jp
cmp
rolb
adc
inc
jb
subb
sahf
jl
pop
sarb
bnd
mov
lret
and
mov
jl
into
add
mov
and
sub
pop
rorb
clc
lea
iret
inc
mov
inc
pop
xchg
adc
bound
inc
ds
jle
xor
jb
push
into
mov
jmp
test
jb
out
xchg
dec
aaa
cmp
stos
mov
lahf
mov
mov
or
cld
ljmp
cmp
es
mov
add
lods
and
loop
out
add
cmp
push
push
scas
fidivrs
push
mov
xor
lcall
adc
mov
ja
out
xlat
pop
and
mov
jge
dec
outsl
ret
xor
shlb
jns
push
push
sub
inc
ret
scas
and
repnz
rcl
enter
dec
bound
inc
loopne
pop
int3
pusha
jmp
pop
cli
dec
push
jb
jmp
mov
cwtl
pop
jne
aam
cmp
cmp
inc
subb
outsl
pop
pop
adc
pusha
pop
lcall
dec
out
push
jnp
dec
sahf
pop
adc
sub
mov
dec
rolb
subb
inc
jg
test
fimuls
push
out
js
arpl
adc
mov
cmp
rolb
out
test
push
and
xchg
into
push
jo
pop
sub
lcall
je
cmp
and
xor
pop
lock
fstps
jb
and
push
cmp
cmp
add
ja
cs
dec
sub
add
es
xrelease
ret
fistpl
nop
add
sub
out
sbb
mov
and
cmp
lea
dec
sbb
xchg
imul
xchg
sbb
cmpsl
imul
jne
stos
ret
or
and
sub
add
mov
mov
push
jb
jo
jns
ds
pusha
push
jno
lret
ljmp
jb
inc
adc
mov
ja
xor
inc
xchg
inc
aas
xlat
je
cmp
arpl
inc
and
or
xchg
stos
cmp
dec
mov
outsb
add
pop
pop
jns
shlb
aam
pop
rol
inc
xchg
sbb
fsubs
sub
dec
lsl
cmp
mov
pop
movaps
and
testl
xchg
mov
push
jl
cmp
cmp
rclb
ja
dec
das
mov
nop
ss
es
mov
xor
cmp
lret
addr16
jae
and
clc
sub
mov
inc
pop
jg
xchg
aam
sahf
and
repnz
push
int
jg,pt
loop
outsl
cmpl
pop
push
push
sub
sbbb
push
stos
push
and
push
bound
pop
inc
pop
inc
push
ret
sti
xor
out
jnp
insl
call
orb
outsb
popf
mov
repnz
decb
pop
jmp
dec
pusha
sub
pop
fisubl
bound
sahf
ficoms
fwait
mov
inc
push
clc
cmp
adc
dec
and
pop
adc
inc
mov
pop
sub
jl
jb
adcb
mov
and
jp
ds
xchg
jp
xchg
sub
inc
or
push
ja
push
jecxz
data16
adc
pop
push
jae
jae
xchg
xor
pop
push
push
mov
fisubl
pop
dec
cmp
mov
jmp
add
cmp
sub
jmp
xchg
jnp
and
lds
add
lret
cmp
dec
cli
lret
int
mov
shlb
pop
je
adc
cmp
xchg
mov
mov
cmp
shll
mov
pop
fistps
sbbb
push
bound
push
jle
stc
xchg
cmovo
and
add
push
rcrb
push
add
mov
inc
and
pop
sahf
ja
arpl
add
xchg
movsb
mov
into
cli
cmp
jae
int
push
repnz
imul
cltd
out
or
sub
es
out
mov
mov
jle
mov
jno
push
push
adc
mov
adc
xor
scas
and
daa
jne
dec
adc
int3
lock
adc
cmp
jne
inc
sbb
sahf
cli
push
dec
imul
and
pop
movsb
xchg
adc
ret
inc
stos
pop
and
inc
fimuls
cli
xor
fildl
adc
push
and
test
pop
repnz
into
mov
jg
les
xchg
loopne
in
sub
cmp
rcrl
mov
dec
fidivl
pusha
iret
pop
addb
sahf
dec
inc
fnstcw
pop
mov
add
lds
sbb
mov
testb
fsubrl
xor
xchg
add
shlb
xchg
cmp
pop
dec
push
ja
jno
dec
pop
add
pop
push
jp
divl
in
lret
and
decb
pop
aad
mov
push
dec
scas
jne
mov
mull
pop
push
lret
mov
mov
outsl
ljmp
cmpsb
outsb
movsb
adc
xor
pop
add
mov
sbb
push
jg
ss
mov
jno
push
pop
fs
cmc
loopne
mov
push
jb
add
inc
mov
push
mov
lret
inc
lret
popf
jb
ss
aad
mov
xor
inc
jbe
xchg
xor
xchg
cltd
and
aaa
scas
cmp
or
ds
add
and
mov
push
pop
mov
push
push
mov
jae
cld
or
and
adc
jo
push
cwtl
arpl
outsb
xchg
loop
flds
fldlg2
out
xor
loope
cli
andb
mov
push
xchg
stc
and
in
jbe
adc
inc
movl
rolb
pop
iret
jns
or
fcmovu
mov
std
mov
data16
idivb
sub
dec
jg
loop
lds
xchg
cmp
xchg
push
xchg
or
insb
jnp
dec
bound
cmc
xchg
push
cmp
inc
xor
dec
xchg
push
dec
jle
mov
xor
inc
stos
out
jle
sub
fisubrl
cmp
adcb
push
hlt
out
push
int
xor
inc
sarb
ds
xor
ds
das
dec
sarb
mov
imul
ja
mov
subl
cmpsb
inc
jge
dec
repz
rorl
push
mov
add
mov
popa
adcb
int3
arpl
out
pop
mov
xor
jnp
outsl
push
leave
imul
and
sbb
orl
mov
out
mov
and
repnz
or
je
push
xchg
loopne
sub
outsb
mov
push
mov
xor
popw
imul
pop
lds
jno
jle
pop
dec
push
pop
andl
xchg
add
cmp
sbb
pop
push
cs
push
bound
pop
punpckhdq
imul
mov
push
xchg
bound
gs
sbb
xacquire
fwait
jo
pop
push
mov
mov
jg
ds
shlb
push
jp
mov
ljmp
idivl
aam
inc
out
mov
xor
fdivrl
add
or
imul
pop
inc
pop
xor
pop
pop
mov
ds
push
jns
dec
es
das
rolb
fs
sub
push
mov
add
mov
imul
jnp
mov
fwait
dec
jge
call
subl
stos
cmp
pop
and
dec
adc
dec
mov
mov
pop
xor
jge
sub
imul
push
ret
test
xchg
xor
arpl
mov
pop
mov
sahf
pop
add
fisttps
jle
in
push
imul
insb
sub
jl
mov
push
pushfw
push
in
imul
dec
shrb
adc
inc
pop
push
mov
pop
pop
push
pushf
pop
xor
and
js
pop
cld
push
pop
xchg
xlat
mov
mov
das
mov
pop
xor
adc
test
in
cs
sub
adc
pop
xor
sbb
lds
ret
xor
cmp
push
lods
pusha
and
and
xor
push
sub
hlt
es
push
jnp
xchg
repnz
add
mov
jp
sbb
and
cmp
push
stos
mov
mov
or
insb
xorb
pop
cmp
sub
jge
push
pop
sub
mov
pop
xor
outsb
jo
xchg
jb
jge
or
lds
cli
aas
jno
fucomp
psadbw
dec
sbb
rorl
mov
jne
pusha
mov
mov
mov
addl
mov
mov
mov
jp
andl
add
into
adc
dec
popa
scas
push
es
mov
lret
out
ret
stc
xchg
or
fs
and
xchg
xchg
addl
pop
ficompl
ss
loope
nop
inc
mov
push
cmp
rolb
pop
jge
es
fidivl
mov
adc
jp
and
mov
rclb
mov
ss
sahf
inc
outsl
pop
dec
push
push
out
and
xchg
jg
ret
inc
test
insl
jns
dec
sbb
outsl
push
xchg
fisubl
loopne
xor
and
pop
insb
push
push
xor
add
scas
cmp
lret
bound
mov
pushl
jle
orl
xchg
dec
sahf
shrl
jns
adc
push
cli
mov
push
sbb
fisubs
sarl
scas
cli
ret
flds
ret
push
inc
rcrb
xor
shlb
leave
lret
push
xchg
dec
pop
pop
xor
test
sbb
jl
jp
ljmp
or
push
rcrb
sbb
dec
push
inc
jae
push
and
or
sub
mov
loope
mov
push
add
cmp
inc
and
std
pop
stos
cli
cmp
rcrl
jno
mov
xor
push
rcrb
sbb
out
mov
jp
mov
dec
shll
notb
xchg
xor
sbbb
movsl
cmp
subb
dec
pop
inc
jbe
inc
in
mov
ret
push
sub
or
mov
cmp
pmaxub
lds
xor
pop
sub
ss
fcmovb
mov
xchg
scas
vbroadcasti32x2
dec
arpl
rol
std
in
or
loopne
mov
pop
sub
inc
lahf
fidivrl
in
inc
inc
sbb
jl
ja
inc
push
js
and
cmp
mov
xchg
jo
lret
stos
push
dec
inc
fiaddl
push
pop
push
lcall
push
dec
stc
into
and
pop
roll
loopne
sahf
shlb
rorl
mov
add
aad
inc
test
arpl
rclb
stos
sbb
cmp
repnz
cmp
xor
aam
bound
aaa
sbb
cs
sub
pop
jo
sbb
push
imul
or
mov
test
push
cmp
xor
mov
and
lret
sub
cmp
test
pop
inc
sbb
arpl
inc
out
cld
outsl
xchg
sbb
jnp
cwtl
rorb
pop
and
mov
xor
mov
push
jp
xchg
jne
pop
jno
adc
outsl
in
sbb
add
fstpl
movb
outsb
aas
add
inc
lcall
pop
daa
fidivrs
dec
insl
loopne
scas
push
bound
std
aaa
aas
sarl
inc
mov
lea
jp
insl
xor
sahf
or
clc
mov
mov
sbb
mov
lds
jb
sti
jae
mov
add
pop
shlb
es
ss
out
sahf
je,pt
push
out
jae
push
cmpsb
cmpb
lds
jbe
popa
push
stc
mov
out
jbe
or
and
push
push
ret
lds
push
xor
push
cmp
xchg
les
inc
pusha
xor
gs
mov
xor
mov
push
dec
je
sahf
add
or
xor
ss
inc
inc
cmpsb
fidivs
dec
pusha
lea
repnz
and
xor
sbb
aas
pop
les
push
orl
imul
push
mov
int
or
xor
cmp
jne
pop
xchg
pusha
sub
xor
mov
pop
mov
mov
sbb
fstpl
into
shrb
in
push
les
push
sub
push
mov
les
xchg
pop
pop
cs
cmp
add
fwait
and
push
jbe
ret
jo
jne
ljmp
sbb
and
shl
bound
fisttps
and
repnz
lds
pop
and
pop
mov
mov
mov
sahf
rorl
pop
jns
jg
dec
inc
imul
or
stos
jbe
pop
adc
mov
ja
loop
data16
inc
sub
mov
ret
jns
or
sti
ret
jo
inc
mov
xor
and
and
hlt
jo
aaa
jb
cli
mov
out
dec
sub
sbb
out
add
int
repnz
push
repnz
std
stc
loopne
das
lcall
or
xchg
mov
paddsb
xor
fdivl
sbb
rcrb
stc
jb
inc
jnp
out
dec
imul
setae
sti
mov
imul
jp,pn
lcall
jl
lods
xor
inc
out
jns
pop
cli
sbb
dec
mov
ljmp
rcll
aas
push
mov
cmp
xchg
fnstcw
mov
mov
or
xchg
or
cmpsb
pop
sbb
and
mov
shlb
shl
sarl
pusha
cmp
cmpsl
jae,pn
mov
adc
add
mov
ja
test
push
fisubrl
mov
aas
and
cmp
and
ret
jge
jle
adc
lret
daa
pop
pop
ds
sub
je
pop
jae
aaa
add
sub
adc
stos
inc
or
mov
sub
shlb
cmpsb
dec
cmp
ljmp
loope
xor
dec
or
outsl
aam
lods
ljmp
sub
xchg
jno
push
jge
mov
inc
lea
sar
test
add
jo
aam
and
inc
fisubl
shrb
cmp
repnz
je
adc
arpl
xchg
ret
cmc
jnp
mov
sbb
addl
mov
push
pop
mov
ds
sbb
xor
push
inc
add
testb
adc
int
xchg
dec
dec
mov
data16
push
enter
xor
sub
mov
ret
mov
data16
adc
mov
add
test
push
jnp
lret
fstl
mov
inc
inc
jnp
ljmp
sub
push
lahf
push
adc
add
adc
or
add
push
in
aas
ss
mov
cmpb
mov
jbe
daa
jp
cs
les
xchg
shll
cmc
test
lret
cltd
push
dec
or
fistpll
sbbb
enter
loopne
sahf
push
and
cmp
and
pop
or
dec
pop
lret
push
jb
add
jns
jl
sbb
lea
pop
mov
and
loop
add
lds
jo
mov
ds
jns
pop
stc
push
sub
test
pop
xchg
pusha
or
sar
cmc
sub
mov
sub
push
loop
adc
xchg
std
sahf
jns
cmc
jle
outsb
and
andb
idivb
icebp
inc
jns
fnstenv
outsb
bound
sbb
cmp
ja
mov
adc
sub
push
push
lahf
lcall
shlb
sbb
pusha
lds
pop
into
sti
aam
add
xchg
or
into
and
or
sub
mov
push
insl
inc
jg
or
xor
or
cs
pop
cmp
es
adc
stos
mov
mov
adc
cli
sbbb
mov
jge
or
inc
pop
inc
imul
nop
inc
ret
push
push
adcb
test
es
decb
subb
lds
out
testb
sar
mov
sub
dec
add
xchg
sti
add
shlb
daa
pop
cmp
insl
inc
pusha
xchg
icebp
ljmp
inc
mov
loop
cmpsl
mov
push
mov
jecxz
mov
cmp
or
dec
cmp
mov
fdiv
pop
xorl
fwait
push
stc
adc
inc
cli
jl
push
jg
inc
cmp
inc
mov
and
xchg
mov
push
adc
in
fwait
sbb
loopne
repz
xchg
add
inc
and
fsubrl
aam
push
jb
dec
or
xor
mov
jg
nop
stc
lret
dec
loop
repnz
xchg
into
mov
rol
xor
outsb
and
ja
dec
jne
adc
cmpsl
cmc
jo
cmp
repnz
bound
jb
inc
jo
push
adc
sets
imul
sbb
mov
mov
jb
push
ds
jle
inc
mov
jnp
repz
sbb
jbe
adc
jno
inc
xchg
fwait
test
inc
mov
and
inc
lret
leave
addl
mov
xchg
dec
xor
xchg
ljmp
sub
pmullw
cmp
lods
in
dec
or
outsb
mov
adc
js
sub
inc
mov
jp
out
adcl
loop
inc
mov
std
les
mov
cmpsb
cmp
sub
ljmp
jae
icebp
mov
and
and
jle
mov
gs
lret
or
ljmp
pop
xor
xchg
jns
cmpsb
jb
xor
pop
inc
test
fwait
sti
dec
sub
rcrb
inc
push
in
mov
mov
xlat
cmc
lahf
push
jnp
popf
ljmp
ds
popf
cltd
and
imul
outsb
adcl
and
ss
mov
xlat
les
ss
mov
push
jbe
mov
mov
push
xchg
outsl
mov
daa
cld
je
popa
pop
mov
fiadds
jg
stos
mov
mov
ja
test
stos
push
push
cmp
inc
loope
daa
lahf
cmp
and
pop
jle
mov
inc
inc
in
rorb
ljmp
pop
mov
in
xchg
in
testb
fstl
and
inc
or
xchg
das
pop
push
adc
ror
inc
jg
add
push
cli
subb
les
inc
cmp
sub
lea
adc
mov
add
punpckldq
cmp
pop
loop
adc
les
sbb
dec
push
das
or
push
mov
outsb
inc
adcl
sahf
enter
lcall
and
cli
stc
divb
dec
sbb
push
pop
jp
js
dec
icebp
aad
mov
and
mov
ss
jp
mov
clc
sbb
add
outsb
inc
xchg
add
fsubl
int
sbb
sbbl
insb
or
and
inc
xor
mov
sahf
jb
out
inc
pop
cmp
imul
ret
mov
pop
mov
inc
enter
mov
xchg
mov
cli
sub
or
push
movsb
mov
ds
sub
sub
in
mov
jl
outsl
rcl
daa
and
mov
sbb
ja
lahf
cmp
dec
dec
ret
jp
add
testb
out
dec
push
imul
insl
loopne
add
add
sbbb
in
pushf
mov
cltd
mov
adc
js
ja
lods
jl
or
dec
sarl
dec
push
in
adcb
in
cmp
dec
fldcw
ss
cmp
xor
les
and
pop
adcl
push
push
sbb
ljmp
in
stos
inc
sub
popf
inc
pop
mov
in
cmpsb
jnp
fwait
subb
inc
cli
mov
jo
cmp
shlb
cmpb
test
sub
por
push
xchg
push
imul
mov
cmc
xchg
lcall
jg
inc
es
test
adcb
fucomp
or
mov
fiadds
sub
inc
es
decl
ljmp
adcb
push
lods
xor
lret
mov
xchg
or
ficoms
jnp
adc
jne
sahf
out
jb
push
cmp
outsl
jl
mov
lret
insl
jp
push
xor
cs
mov
cwtl
adc
add
dec
or
mov
pushf
xchg
sub
aad
insb
dec
push
je
push
ret
inc
pop
xrelease
shl
mov
dec
and
sbb
les
cmp
pop
fisubl
jb
push
push
lret
add
sbb
dec
lahf
les
lret
push
xor
repnz
sub
outsb
bound
and
daa
jmp
bound
dec
jecxz
jne
and
push
mov
push
jo
cmp
add
dec
jle
inc
or
std
outsb
bound
push
iret
sti
outsl
sbb
xchg
rcll
cmp
sbb
sub
cmpsb
sti
mov
xchg
mov
sahf
lret
sub
outsb
sahf
pop
push
aad
bound
inc
rcrb
enter
mov
jl
mov
or
and
icebp
test
aas
cmp
or
and
cmpsb
pop
and
jbe
push
adc
sub
inc
pop
pop
xor
sbb
inc
dec
ja
inc
iret
addb
and
jbe
jg
or
xlat
cmp
stc
movsb
xchg
outsb
add
shlb
cmpl
mov
cmp
cli
pop
aas
push
sub
inc
jl
jl
and
sbb
cmp
ljmp
inc
shlb
add
push
rorb
add
jae
lahf
addl
das
in
jns
sub
inc
in
loop
and
cmpsl
addb
pusha
sbbb
sub
hlt
sub
jmp
dec
push
inc
xor
rclb
mov
outsl
push
push
xchg
shlb
scas
inc
push
repnz
dec
lods
jo
adc
cmpsb
loop
andb
and
imul
es
mov
mov
xchg
or
fildll
aam
imul
add
dec
dec
lcall
add
imul
cmp
ficoml
jle
pop
cmpsb
push
mov
jns
pop
sbb
testb
push
loopne
shrb
scas
pop
data16
pop
jns
xchg
xor
loope
adc
xor
iret
jbe
and
or
jae
add
adc
mov
out
jb
pop
inc
into
dec
inc
mov
ja
push
aad
loop
push
sti
leave
pop
sub
data16
mov
and
lcall
or
cmp
sub
jp
lcall
aaa
adc
jbe
fwait
jge
xor
push
data16
outsb
mov
adc
pop
push
in
jb,pn
pop
inc
es
add
xor
xchg
lods
jg
xor
in
mov
cld
ja
stos
out
incb
sub
pop
in
popf
stc
pop
push
test
sahf
in
insl
jge
push
inc
loope
inc
repnz
jb,pt
jns
inc
jle
add
adc
mov
pop
inc
mov
pop
fwait
sub
inc
cmp
add
push
outsb
icebp
arpl
cmp
xor
jle
cmp
add
daa
dec
gs
scas
and
cmp
lds
push
outsl
push
fimuls
cli
pop
jae
mov
incb
push
ss
into
sar
mov
push
scas
sub
or
mov
jmp
jo
inc
dec
mov
ljmp
adcl
into
ret
shlb
sarb
pop
adc
cmp
xchg
les
mov
outsb
and
sub
outsb
subb
ss
and
ljmp
es
jge
push
outsb
jns
fists
sbb
sbb
push
repz
and
outsl
jmp
push
bound
and
sbbl
imul
xchg
jb
add
adc
aas
testb
imul
addl
aaa
cmp
sbb
aad
insb
sub
inc
ret
and
mov
mov
test
or
stc
xchg
sbb
push
sbb
mov
mov
cmp
cmp
inc
leave
imul
popa
bound
push
add
xchg
xchg
inc
lret
lds
add
jmp
adc
shlb
xorl
xchg
jne
push
push
into
push
or
ljmp
loop
cmp
and
les
inc
andb
inc
das
sar
sbb
sub
jb
dec
bound
pop
cmp
test
and
das
bound
mov
dec
shl
and
adc
or
pop
dec
and
in
xor
add
iret
jl
negl
gs
enter
xchg
hlt
add
mov
add
jnp
adc
adc
sub
sbb
das
cmp
mov
adc
xor
inc
push
data16
mov
dec
push
pop
mov
into
and
xor
leave
inc
sarb
subb
push
add
sahf
jl
outsb
shlb
dec
cmpsb
inc
jns
push
dec
bnd
leave
jle
arpl
pop
rclb
and
in
xor
cmp
in
pop
js
or
ficoml
lret
adc
jno
and
xchg
push
inc
cli
lahf
jle
hlt
mov
xchg
cmp
gs
adcb
xchg
push
mov
adc
in
and
adc
push
inc
inc
add
sub
inc
loopne
add
ds
in
es
sub
repnz
fnstcw
jle
je
pop
push
xchg
mulb
or
sbbl
add
lock
dec
mov
ljmp
mov
jno
pop
add
stos
add
and
mov
dec
add
call
push
cmpsl
jns
pop
mov
fiaddl
mov
cmpb
pop
fdiv
dec
pop
inc
outsb
sub
ret
rclb
cwtl
jns
and
sub
movsb
lcall
pop
jecxz
inc
inc
jo
sti
jnp
add
sub
outsb
stc
popa
dec
stc
mov
add
or
xor
mov
xor
arpl
xor
clc
std
jle
bound
mov
sahf
push
and
push
mov
or
inc
adc
push
test
mov
lahf
jb
cmp
pop
jp
jnp
cmpsl
or
add
flds
out
outsl
pop
sub
mov
insb
jae
das
pop
add
push
or
pop
mov
mov
mov
sub
mov
imul
inc
and
and
pop
pop
pop
aad
pop
and
add
pop
insb
ret
outsl
test
jge
pop
bound
cmp
cmp
inc
cmp
push
xor
mov
mov
bound
out
rorl
pusha
fisubrl
cmp
sub
arpl
frstor
out
push
les
cmp
dec
mov
jp
ret
je
sbb
cs
or
shlb
jl
and
sub
cmpsl
jle
sbb
push
jb
sub
jg
xchg
jmp
mov
fldenv
lds
cmp
inc
sub
sbb
pop
lods
mov
scas
and
xchg
mov
arpl
cmp
cltd
cs
cmovae
push
pusha
out
jge
dec
and
cmpsb
sub
data16
out
out
repnz
and
jp
jne
nop
pop
push
and
in
cmp
cli
int
jns
fwait
or
inc
insb
and
daa
xchg
or
jmp
xor
into
ret
cmpl
adc
pop
mov
push
mov
dec
cmpsb
into
add
push
xor
inc
dec
imul
cmpb
cmpsl
in
xor
cmp
mov
mov
popa
mov
ffreep
cmp
shll
lahf
insb
cwtl
sub
filds
add
xor
scas
push
pop
lret
je
inc
and
dec
stos
xchg
inc
or
xor
cli
mov
jp
jno
and
fs
cmp
push
das
pop
cli
xor
inc
jnp
rcrb
sub
pop
into
popa
cli
iret
and
add
lret
mov
pop
add
cltd
xor
idivb
or
add
mov
mov
cmpl
sub
mov
mov
jmp
outsb
add
pop
mov
ds
cmp
dec
pop
add
mov
rorb
div
and
popf
imul
dec
add
ret
xor
cmp
push
mov
dec
into
cwtl
cmpsl
rolb
mov
or
push
inc
inc
into
pop
mov
xor
daa
sbb
cmp
add
pop
fimull
sahf
xchg
dec
inc
scas
or
out
popa
pop
jecxz
jns
xor
or
jne
xor
fpatan
push
xchg
jnp
scas
jbe
mov
cltd
aam
or
mov
mov
ss
mov
or
aad
loop
gs
data16
xor
cmp
bound
fwait
aad
lret
ret
loop
scas
mov
mov
rcrl
lock
scas
xor
mov
ljmp
fidivl
sbb
dec
ja
or
mov
push
jae
dec
xchg
or
cltd
outsl
fs
adcb
shlb
bound
addl
mov
aaa
and
push
pop
ret
mov
imul
mov
cmpsb
sub
push
dec
sahf
jge
inc
pusha
inc
adc
sub
inc
gs
and
or
adc
or
ret
in
push
ret
cs
ficoml
cld
ja
add
sub
lds
cli
adc
xor
lcall
push
xchg
inc
ret
jae
inc
test
xchg
ja
loop
and
dec
xchg
cmp
es
iret
sbb
jle
jbe
inc
xchg
hlt
cs
outsb
lretw
inc
xor
xor
out
or
pop
dec
stc
push
stos
push
into
and
jge
mov
jbe
cmp
jb
inc
sbb
lock
mov
repnz
jge
xor
inc
aad
jbe
mov
xchg
nop
and
push
mov
jbe
mov
pop
push
push
das
push
and
sbb
bound
and
add
jo
push
push
not
jge
add
push
jle
jecxz
cmpsb
ds
inc
je
sbb
mov
jo
sahf
das
scas
jbe
lret
jge
add
cwtl
push
push
roll
xchg
fs
rcl
jg
sub
movb
adc
cs
push
cs
das
push
dec
mov
aaa
testl
mov
dec
sbb
adc
daa
mov
outsb
mov
shrb
jp
fcmovb
push
adc
in
jo
mov
pop
pusha
mov
mov
imul
add
jno
mov
sbb
inc
idiv
arpl
outsb
loopne
xorl
stos
rolb
cmp
push
push
inc
and
push
rol
cmp
popf
push
push
std
xchg
inc
into
sbb
inc
inc
cwtl
movsl
lcall
and
imul
inc
xchg
aaa
adc
dec
fs
mov
sbb
cmpsb
or
stc
mov
lret
outsl
ror
sarl
mov
lret
ror
scas
sbb
pop
adc
xor
push
negl
sbb
inc
idivb
leave
ds
xchg
arpl
xchg
or
mov
es
cltd
pusha
jno
push
iret
sub
inc
add
stc
inc
jnp
push
mov
iret
mov
mov
mov
outsl
ss
jb
outsb
mov
pop
and
sahf
jb
gs
xchg
dec
mov
out
es
xchg
xchg
xchg
fstps
insb
push
xor
andb
cmp
jmp
mov
fldl2e
inc
inc
hlt
arpl
sub
imul
pushf
pop
jnp
push
jl
fldcw
mov
jg
ja
inc
mov
fimull
adc
bound
jb,pt
ja
mov
pop
into
cmp
filds
add
inc
ret
cltd
ds
inc
cmpsb
jnp
dec
pop
cmp
sarl
adc
cli
cli
iret
mov
arpl
add
jo
add
arpl
fisubrl
and
sahf
push
xchg
push
push
bound
imul
push
cwtl
sahf
sbb
sub
or
xor
jno
in
or
push
into
fs
sub
mov
pop
aam
scas
cs
out
mov
es
pusha
repnz
sub
lret
data16
jbe
ret
les
and
popl
push
push
mov
mov
mov
add
mov
mov
aad
outsl
inc
sar
cmc
jo
mov
out
sarb
mov
xchg
jle
out
arpl
xchg
jbe
push
std
push
push
stos
xor
jge
cld
les
and
outsb
int3
arpl
pusha
insb
push
pop
and
outsb
sahf
pusha
xor
adc
cmp
jge
fiaddl
jne
inc
ficomps
jo
inc
pop
imul
sub
inc
ja
jp
movsb
dec
sub
loope
sahf
loop
bound
mov
imul
les
cli
push
jge
jl
jg
loopne
mov
or
ret
push
mov
loope
inc
pop
pop
sub
test
cmpsl
lcall
arpl
insb
add
jne
and
sbb
push
pop
cmp
and
add
xlat
sbb
pop
adc
inc
or
mov
pop
popa
jbe
out
cvtdq2ps
pop
sbb
cld
test
add
mov
mov
or
xchg
jns
mov
dec
les
push
adc
jb
dec
rorb
push
js
sbb
jae
aas
std
into
jbe
ret
shll
jns
sub
fwait
leave
and
out
sarb
dec
faddl
outsb
popa
jnp
add
lcall
cmp
or
inc
xchg
jb
lds
jmp
or
push
out
imul
gs
jnp
cmp
cs
sub
aas
adc
push
mov
fnstenv
mov
pop
adc
jno
jg
loope
cmp
lret
orb
lea
inc
data16
movsb
mov
shlb
ja
jle
out
aas
xor
inc
orw
jg
lahf
scas
stc
adc
leave
loop
in
or
lcall
sub
lret
into
or
dec
stos
loop
cli
cmpsl
mov
xor
push
adc
fimull
pop
pushf
jl
imul
jns
adc
cmpb
rcrb
daa
ja
mov
lcall
jb
mov
cmp
jbe
xor
ret
sbb
ss
pop
test
lods
mov
mov
jb
and
movsl
jb
ret
add
mov
nop
test
push
adc
pusha
jle,pt
mov
jp
push
add
adc
mov
in
packssdw
fwait
pusha
mov
cmp
push
jp
jnp
adc
sbb
adc
sub
adc
rcrb
add
add
jne
push
ljmp
add
mov
shrb
lock
mov
cs
stos
push
scas
push
add
pop
jo
pmullw
das
data16
mulb
jbe
in
push
dec
js
jno
push
xor
push
ja
push
outsb
cs
imul
ret
mov
pop
bound
and
add
sbb
cs
leave
outsb
mov
jmp
jb
aaa
xchg
fimull
add
push
cmp
ja
pusha
push
add
psrlq
cmpsl
test
imul
daa
jle
in
push
push
loopne
mov
dec
imul
push
test
pop
aad
jb
mov
jle,pt
jnp,pn
xchg
lret
pushf
and
push
push
sub
mov
fwait
mov
arpl
insb
jo
repnz
push
repnz
pop
loop
xchg
orl
stos
cmp
cmp
aam
or
sub
push
mov
pop
cli
icebp
jns
push
data16
cmpsb
mov
pop
into
out
adc
mov
add
or
mov
ja
fwait
push
add
push
lcall
inc
push
push
jno
addl
pop
rorw
push
pop
bound
add
push
outsb
adc
mov
xchg
outsl
dec
int
mov
pop
pop
jne
sbb
mov
aad
js
lar
inc
loope
and
in
pop
xchg
xchg
imul
paddd
ds
call
dec
stos
mov
mov
mov
dec
inc
mov
sub
pop
cltd
push
sbb
inc
push
not
dec
jg
xor
idivl
das
and
mov
sti
fsubs
pushl
mov
mov
and
push
mov
jp
dec
jl
lret
and
repnz
icebp
jne
call
outsb
mov
add
repnz
mov
cltd
daa
sarl
jb
outsb
call
aad
shll
sub
pop
xorl
rcrb
jl,pt
pop
jmp
out
inc
jl
pop
out
fnstcw
cmp
pop
fcmovu
mov
ss
mov
adc
cmpsw
movb
bound
jge
jmp
add
bound
mov
js
push
shlb
or
fistpll
insb
push
push
xchg
incb
sub
mov
out
insb
push
loope
inc
and
aaa
pop
nop
xchg
mov
dec
pop
jge
push
add
mov
xor
mov
out
or
xchg
add
pop
jbe
or
add
inc
inc
movsb
pop
pop
push
push
push
ljmp
jp
adc
dec
adc
in
xchg
ret
ret
mov
ficoml
incb
jbe
int
mov
push
sub
jp
lds
orb
pop
shlb
jecxz
jle
pop
cmp
push
jl
mov
cmc
xor
orb
fwait
out
insb
fisttpl
idiv
outsl
or
adc
push
adc
add
and
ds
pop
jnp
test
add
xchg
and
stos
sahf
pop
sbb
sub
ret
dec
or
sub
bswap
jmp
xor
jp
fadds
push
popf
out
push
add
and
jnp
mov
fisubrl
mov
jp
jp
push
add
aas
mov
jnp
sahf
mov
dec
je
das
jge
mov
arpl
bound
idiv
gs
inc
sbb
xchg
das
dec
les
xchg
dec
rolb
loope
cs
data16
outsl
sub
pop
jmp
or
xor
pop
add
mov
push
dec
lcall
jae
scas
outsb
sbb
push
jbe
stos
subb
lea
or
fs
xor
les
js
xchg
inc
es
lods
fwait
pop
into
outsb
rcll
jae
mov
and
fdecstp
xchg
pop
imul
fs
or
out
cmp
and
cmp
xor
imul
jo
repnz
les
es
insb
and
loopne
add
push
call
punpckhdq
or
lea
xchg
add
arpl
imul
add
jmp
and
lcall
mov
ljmp
push
inc
inc
sub
cmpsl
or
jp
and
in
frstor
jge
adc
pop
outsb
bound
xor
insb
jbe
fsts
enter
nop
add
pop
ds
test
cs
pop
sbb
mov
xchg
adc
loop
fidivl
xchg
cmp
imul
and
int
jge
xor
jg
add
jp
jbe
mov
repz
std
or
add
insl
ret
and
icebp
shll
and
out
cld
jo
das
es
xchg
outsl
cmp
les
test
inc
movsl
pop
outsl
adc
add
sar
sarb
movaps
lahf
stos
notl
jle
push
inc
mov
or
fildll
fwait
or
lahf
sahf
xorl
xor
jmp
push
scas
repnz
pop
cmp
add
add
jmp
add
nop
sub
call
add
movsb
mov
jne
jle
add
inc
int3
sub
mov
add
push
rcrb
jbe
inc
sub
lret
idivb
xor
mov
jp
daa
iret
je
jb
mov
test
pop
jle
into
jl
jo
ljmp
jp
insb
sbb
test
mov
xor
out
icebp
lahf
imul
sub
mov
stc
push
sub
ss
lret
push
jns
adc
jge,pt
xchg
sbb
je
std
jl
arpl
pop
or
cmpl
push
xor
inc
and
xchg
repz
sbb
pop
fidivl
cmp
adc
add
xor
sbb
push
lock
xchg
int
push
mov
xor
sub
and
jb
stos
mov
jp
cmp
aad
popa
push
ljmp
gs
mov
imull
outsb
push
ror
add
or
or
out
sbb
inc
lret
push
ret
sti
mov
stos
pusha
push
arpl
sub
push
lcall
jnp
test
adc
int
xchg
insb
sub
enter
ds
push
loop
cmp
inc
out
ret
add
into
xchg
sub
shl
mov
or
fiadds
jge
in
xor
loopne
pop
jbe
aas
push
or
lret
insb
inc
data16
push
lret
and
xor
add
mov
iret
push
stos
cmp
stos
bound
xchg
mov
mov
loop
jns
xchg
inc
ds
call
inc
paddb
and
ds
sub
dec
cmp
mov
fs
loopne
ds
sbb
data16
pop
xor
daa
insb
pop
pushf
inc
jle
flds
inc
pusha
mov
xor
dec
inc
roll
add
push
adc
ret
sub
mov
lahf
movsb
push
fwait
aaa
push
ds
insl
test
test
sub
mov
jae
sub
fsts
push
cmp
pop
xorl
inc
push
sbb
popf
cmp
pusha
daa
aad
cli
movsb
push
fstl
cli
aas
and
mov
or
push
cli
mov
push
js
stos
jnp
in
incb
ja
enter
dec
lods
shlb
add
outsb
bound
add
int3
cmp
inc
lods
sbb
mov
push
insb
loop
loop
loope
push
fadds
fiaddl
jnp
or
int
xor
dec
jns
sbb
scas
ss
fwait
pop
and
jp
lret
xor
xor
push
push
jb
ret
lds
jge
jp
dec
add
add
jne
popf
jae
cs
fcomps
sbb
push
ss
jb
pop
cmpl
pop
shlb
push
mov
adc
jno
inc
mov
inc
popf
mov
or
scas
adc
inc
or
int
pavgw
xchg
mov
inc
jbe
aaa
mov
mov
lret
add
repnz
stc
pop
pop
and
and
xchg
les
in
add
aas
xor
ds
cld
mov
in
loop,pt
jle
clc
loope
inc
mov
test
imul
ss
cli
dec
cmp
adc
dec
mov
xor
pop
mull
and
add
pop
inc
insb
sbb
sbb
es
jns
inc
repnz
movsb
jo
mov
orb
jnp
xchg
push
shr
mov
cmp
pop
mov
cmp
adc
into
xchg
inc
out
das
push
sub
fcomps
pop
pop
and
repnz
add
add
pusha
dec
pop
and
aaa
jl
arpl
mov
pushf
scas
jg
orl
pop
fwait
mov
test
xor
mov
pushf
cwtl
ficoml
imul
daa
inc
sarb
cmp
inc
jmp
xorb
or
add
nop
push
and
or
pop
les
ds
sbb
pop
push
mov
push
pop
mov
sub
pop
sti
push
add
sub
repnz
stos
lods
jge
popa
add
iret
push
xor
jo
sub
adc
cmpsb
ds
adc
dec
je
rcrb
mov
push
cmp
sub
jmp
cli
sbb
ds
mov
jbe
rorb
cli
mov
ja
add
test
mov
jns
jp
cli
scas
dec
insb
popf
pop
fs
dec
add
xchg
mov
cmp
or
aaa
fimuls
cmp
ljmp
mov
jle
cli
or
pop
ljmp
je
inc
sbbl
add
repz
sti
jge
imull
push
sbb
push
jbe
pop
rcrl
push
xor
pusha
ret
outsl
dec
pop
push
xor
fistpll
mov
mov
mov
mov
and
adc
add
jmp
testl
adc
mov
es
jb
add
dec
pop
mov
xor
outsb
jmp
xchg
shlb
jle
cmp
jne
jo
mov
shrb
mov
in
mov
incb
inc
cld
xchg
pop
jns
aam
adcb
and
out
cli
cmp
jns
pop
or
push
mov
and
mov
mov
daa
ljmp
push
and
sub
adc
cmpsb
cmpsb
in
dec
imull
arpl
outsl
xor
sbb
ss
repnz
and
outsl
dec
ds
push
xchg
rcl
mov
mov
les
fldcw
jg
mov
mov
and
aam
jle
xorb
sub
pop
in
cs
fidivrl
pop
pusha
jmp
ror
add
sub
jns
and
aad
test
daa
inc
cli
push
mov
or
aad
pop
adcb
test
das
push
add
sub
lods
xor
cmp
pop
xor
into
inc
repnz
test
fcoms
or
mov
mov
int3
bound
sub
in
ljmp
jae
add
ljmp
mov
lret
lret
pop
das
mov
lcall
jb
sub
imul
jle
pop
push
inc
xchg
mov
jnp
push
popa
jns
aam
insl
mov
outsb
loop
fwait
loopnew
mov
lahf
lds
fwait
scas
insb
dec
xchg
dec
ds
xor
mov
sub
pop
jp
inc
push
push
andl
jns
fwait
jbe
and
push
inc
jge
mov
jge
inc
popa
or
lret
xchg
ja
mov
xchg
inc
add
cmpsl
roll
out
adc
ret
clc
ja
inc
or
stos
push
jbe
divps
inc
dec
in
push
push
jg
xchg
and
sahf
pop
ja
ljmp
bound
stos
adc
push
sub
imull
pop
sbb
dec
aas
cmp
xchg
add
outsb
mov
les
mov
jb
mov
inc
aam
out
cmpsb
push
or
mov
cs
xchg
push
sub
outsl
cmpsl
pop
sub
mov
inc
jge
jge
sbb
jp
inc
add
sahf
sub
and
jae
sahf
pusha
aad
sbbb
insl
das
cmp
mov
jo
push
or
cwtl
xor
adc
bound
xchg
pop
xchg
test
dec
xchg
fldl
sub
outsb
jp
sbb
sub
sub
sbb
shl
xchg
add
mov
xchg
popa
push
mov
jbe
in
and
jecxz
outsb
stc
adc
xor
mov
addl
push
iret
mov
pushf
daa
inc
cmp
bound
cmp
cs
outsl
outsb
adc
pop
ret
loop
push
test
add
shr
xor
in
push
repnz
ds
lret
push
pop
mov
imul
jb
mov
xor
psubw
push
adc
bound
push
jo
imul
lret
imul
shrb
pop
push
xchg
add
fstps
xor
test
cli
xor
out
inc
insl
inc
stos
andb
js
push
pop
in
adc
xor
into
bnd
adc
xor
iret
ss
xor
insl
stos
lcall
jg
jge
shl
lret
pop
fidivrs
subb
xchg
or
push
jp
daa
clc
adc
popa
push
pop
mov
xchg
mov
loopne
dec
xor
mov
xor
fs
jnp
and
adc
lahf
pop
std
es
mov
outsb
bound
adcb
lahf
dec
jae
fsubrp
jl
and
ds
rolb
ret
outsl
pop
mov
dec
sub
pop
int3
push
aaa
xor
stos
xchg
loope
cmp
dec
push
pop
jl
bound
push
mov
jae
cmpsb
das
and
and
sub
jecxz
rcrl
pop
or
xor
and
imul
cmp
sub
mov
pop
ss
pusha
cmpsb
jg
jle
je
pop
popf
adc
dec
adc
jb
leave
cmp
add
ljmp
add
cmpsl
jnp
dec
push
inc
xchg
pop
jp
cmp
outsb
push
ds
adc
xor
push
mov
popf
aaa
xor
sub
jb
out
fstpt
mov
ret
sbb
in
add
jno
adcl
cmpl
push
pop
pop
adc
icebp
loop
outsl
imull
push
jmp
stc
dec
nop
jo
imul
push
js
push
faddl
push
xor
test
dec
scas
pop
loop
sbb
xor
psrad
pop
push
lods
cmp
ret
jo
mov
mov
ja
data16
in
mov
add
xchg
aam
jb
and
add
pop
xor
xchg
adcb
fnstcw
and
jp
sub
push
adc
xorb
ljmp
clc
sub
sub
inc
lret
push
dec
or
jmp
data16
or
fisubrs
data16
add
das
sbb
pop
clc
repnz
stos
jb
mov
pop
pop
xor
inc
repnz
sub
push
out
add
jge
jbe
rcr
inc
xchg
data16
xor
inc
aad
adcl
push
pop
mov
mov
ljmp
push
in
jle
das
shlb
mov
out
daa
jp
mov
push
cmp
imul
loop
jbe
cmp
popf
add
sbb
inc
mov
sarb
aam
cli
ss
or
and
ds
jle
outsl
js
add
lcall
jb,pn
outsb
mov
add
stos
sub
dec
mov
and
jns
into
and
lea
xor
mov
mov
mov
jne
sub
sub
inc
push
dec
notb
xchg
mov
sub
int
xchg
lahf
imul
add
outsb
std
aas
xor
popa
into
jmp
adc
jle
mov
imul
or
in
fsubs
add
mov
out
mov
adcl
sbb
add
mov
test
or
aas
inc
push
bound
icebp
push
add
out
add
mov
jns
sub
lret
jp
push
insb
fwait
xorb
xor
in
or
or
sbbl
das
inc
lods
push
imul
xchg
mov
enter
adcb
rcr
add
or
int
into
jmp
aad
std
outsl
or
inc
or
lock
leave
xchg
xor
jnp
add
sub
cmp
and
mov
or
add
adc
jg
sub
rclb
sahf
xor
mov
pop
inc
mov
nop
pop
insb
cmpsb
ljmp
lret
mov
dec
or
out
popa
inc
jbe
xchg
loopne
push
test
push
sub
cmp
add
lds
lret
push
add
fwait
add
bound
inc
push
or
aaa
outsb
rorb
sbb
inc
into
push
jl
mov
xor
dec
pop
push
inc
dec
or
push
push
add
shlb
out
popf
daa
mov
lcall
leave
bound
mov
gs
lahf
push
cmpl
adc
fstl
fs
aad
and
fmuls
inc
aaa
mov
push
and
jb
cmp
xorb
cmp
push
dec
mov
inc
jnp
and
shlb
jno
inc
pop
cmp
xchg
mov
and
sub
fsubs
mov
adc
sub
push
mov
and
add
sub
loopne
movsl
pop
sub
or
insl
push
xor
mov
add
out
js
jle
jbe
add
inc
add
and
sahf
push
arpl
ja
fistps
jp
into
fisubrl
mov
ror
lcall
push
stos
push
xor
push
push
je
fwait
adc
jp
adc
int3
fistpl
ljmp
xchg
cwtl
dec
ljmp
mov
dec
pop
xchg
notb
bound
pop
repnz
daa
ja
sub
outsl
pop
mov
push
jmp
xor
cli
fmulp
jne
cmp
ret
mov
lcall
or
push
data16
jg
xchg
push
gs
push
sbb
jle
repz
fwait
cmp
dec
jecxz
incb
mov
je
lea
fiadds
inc
inc
jb
movb
sub
mov
dec
sbbl
fwait
sahf
mov
punpckldq
nop
aas
dec
daa
sub
bound
mov
fdivrs
add
pop
sub
mov
insb
sub
leave
lcall
and
fxam
jmp
jae
pop
inc
inc
inc
mov
push
je
pop
sahf
jnp
dec
jmp
and
inc
cmp
js
popa
cmp
mov
scas
xor
jecxz
adc
repz
ss
add
adcb
mov
pop
xchg
inc
rorb
jge
stc
data16
xchg
cli
mov
bound
cmp
pop
aam
sbb
push
rclb
cvtpi2ps
or
xchg
jge
pop
shlb
ds
push
mov
bound
out
outsl
in
js
ret
clc
sahf
inc
sbb
and
insb
stc
ljmp
jmp
jle
lahf
sahf
xorb
jbe
mov
push
push
repnz
iret
cmp
jno
sbb
mov
rol
push
push
add
push
push
leave
and
rorb
loop
popf
mov
mov
scas
sbb
dec
jnp
push
sub
fs
fisubrl
imul
inc
xchg
dec
bound
push
push
mov
repz
enter
xor
iret
cli
std
pop
fistpll
bound
push
cmp
sbb
ljmp
aas
aam
idivb
dec
inc
inc
repnz
fsubl
ja
test
rclb
cmp
push
into
mov
sarb
add
repnz
roll
insl
popl
push
push
jb
push
int3
jns
xor
inc
sub
inc
imul
pop
mov
jno
push
adc
ljmp
popf
jnp
xchg
mov
cwtl
mov
adcl
stos
cmp
jbe
mulb
pop
xor
mov
mov
insl
add
adc
cmpb
pop
fcmovne
stc
ret
sub
inc
mov
xchg
pop
imul
inc
push
cld
jnp
outsb
push
pop
and
jp
jbe
lret
jl
rorb
jge
cmp
lods
daa
jns
popa
stos
out
pop
push
nop
mov
mov
push
icebp
adc
out
cmp
ret
leave
cwtl
mov
jnp
aam
loopne
out
insb
mov
outsb
mov
and
mov
rcl
add
ljmp
std
pusha
popa
incb
and
or
shlb
sbbb
dec
comiss
or
cmp
gs
sarb
repnz
pop
ret
subb
cmp
pop
mov
mov
data16
jno
imul
icebp
es
shl
and
xor
push
mov
pop
int
push
rclb
sub
cmp
inc
scas
in
data16
inc
iret
mov
gs
mulb
pusha
jle
lcall
adc
mov
repnz
pop
rorb
xchg
ret
ljmp
inc
jg
cmpsb
aad
xor
and
cs
bound
aam
sub
scas
push
inc
and
jb
data16
cmp
inc
ds
xorl
sbb
ja
stos
lcall
or
shlb
outsb
jl
aad
aam
dec
aaa
test
push
add
adc
pop
int
ret
adc
and
movsb
pop
imul
add
fidivrl
fwait
aaa
xor
xchg
rcrl
adc
dec
fs
cwtl
sub
and
cpuid
jno
cli
addb
in
fildl
cmp
addl
insb
jbe
outsb
daa
mov
pop
mov
sahf
cwtl
insb
pushf
xor
cmpsb
ljmp
and
xchg
arpl
lcall
jns
movl
inc
imul
sub
test
shlb
adc
rcrb
bound
jbe
insl
mov
jp
rcrw
push
adcb
sbb
mov
and
popf
and
push
mov
shll
fimull
fiaddl
icebp
push
daa
loope
fs
aas
dec
adcl
sub
pop
inc
xor
push
add
ds
push
jg
push
xchg
pop
into
cmp
bound
es
inc
push
in
dec
sbb
aaa
push
out
dec
sbb
sahf
fnstenv
xorl
add
outsb
dec
xchg
sti
outsl
mov
pop
mov
lret
call
push
ficoml
mov
popf
mov
mov
std
insb
lods
setb
out
fdivr
or
add
rcrb
mov
push
bound
pop
jno
adcl
push
loopne
add
adc
sub
push
lock
mov
pushl
push
mov
ds
jge
fs
gs
xchg
mov
imul
jo
sub
arpl
add
pop
pop
xor
mov
mov
hlt
cs
mov
inc
xchg
push
repnz
mov
outsl
xor
cmp
clc
push
ret
adc
sbb
cli
fcmovbe
add
jns
adc
sahf
and
push
push
lret
outsb
rolb
push
sub
test
sarl
mov
cmp
ja
or
lret
push
jp
cmp
rcll
jb
mov
testl
jp
push
aas
cmp
bound
imulb
and
lret
call
sbb
fisubs
sahf
add
popf
nop
and
bound
mov
mov
pusha
xorb
sub
lds
test
lret
pop
imul
nop
and
inc
or
and
mov
sub
cmp
dec
test
dec
jp
add
and
sub
and
push
or
incb
shlb
pop
mov
into
ficomps
jge
in
sub
ret
adc
nop
dec
pop
xchg
xor
xor
lods
scas
insl
leave
add
and
rcrl
sahf
stos
push
ja
fistl
inc
imull
outsb
sbb
pop
aad
ret
pushf
aas
mov
mov
ljmp
data16
cmp
inc
dec
push
and
icebp
inc
jmp
popa
jmp
xor
adc
mov
pop
xchg
imul
lcall
out
sbb
lods
imull
push
out
cmp
sbb
das
sahf
stc
or
stc
sub
mov
pushf
adc
mov
sbb
jb
push
and
rolb
mov
push
and
push
ja
shlb
push
das
test
es
lock
push
dec
add
out
ja
push
mov
ja
inc
add
sub
pusha
push
jge
sub
cmpsl
jo
mov
mov
iret
push
adc
sahf
sbbl
dec
add
adc
pop
cmp
pushf
mov
sub
push
inc
inc
and
test
sub
je
shlb
subb
jecxz
pusha
es
imull
inc
push
add
pop
xlat
repnz
ficomps
out
out
pop
jns
push
and
inc
and
mov
jp
add
jmp
lahf
pop
jbe
or
pop
ror
xchg
inc
outsb
in
cs
and
dec
mov
jnp
jg
push
add
ret
add
inc
inc
fimull
ret
nop
outsb
xor
retw
sub
push
xchg
add
inc
cmp
cmp
mov
int
push
addr16
in
cli
and
jo
jne
xlat
inc
data16
jge
xchg
arpl
std
pop
bound
lcall
fwait
pop
cmp
cmp
inc
stos
inc
test
fldl
cmp
pop
fiaddl
rcll
push
sub
and
mov
test
xor
xor
xor
xchg
sub
jle
and
or
pop
dec
jnp
mov
fwait
push
pop
jbe
pop
cmp
imul
rcrl
dec
subl
push
dec
fmuls
pop
adc
push
add
pop
mov
mov
mov
orb
push
sub
into
jp
add
push
and
pop
sub
dec
sub
add
inc
adc
mov
cmpsb
imulb
jle
data16
adc
imulb
inc
adc
jge
aaa
push
jl
aam
xchg
pop
add
mov
fidivrs
ret
lret
repnz
mov
inc
jno
addb
mov
sub
pop
xchg
pop
cmpb
inc
testl
pop
jge
cli
ljmp
adc
scas
andl
mov
jle
dec
dec
stos
jnp
sub
adc
leave
imul
rcrl
pusha
ret
mov
add
pushf
pop
cmp
and
iret
mov
loope
aam
push
mov
outsb
es
cmovns
mov
pop
adc
out
mov
rorb
mov
push
inc
popa
cmp
pop
inc
jns
in
push
mov
fistps
and
push
inc
mov
jp
push
scas
imul
mov
add
or
shll
das
dec
push
jle
int3
add
dec
gs
cs
test
dec
jns
mov
add
or
mov
jne
testb
jl
push
stos
xchg
pop
aaa
shlb
push
or
or
dec
mov
xor
scas
cmp
pop
pop
push
jge
shll
mov
shrl
dec
popa
mov
cmp
ror
loop
jecxz
jmp
pop
outsl
pop
xchg
xor
pop
adc
ret
rolb
inc
or
stos
jb
scas
into
insb
jb
clc
out
imul
push
mov
push
push
push
imul
insb
ljmp
ret
in
sbb
push
sbb
or
daa
jbe
out
jle
rclb
mov
roll
mov
movsb
imul
ds
das
or
pop
pop
mov
sbb
and
stc
sub
pop
mov
out
and
rcrb
inc
jnp
sub
and
and
gs
into
mov
mov
xchg
jle
pop
cmp
enter
in
push
or
push
mov
fidivrl
test
cli
repnz
push
add
xchg
mov
sub
fldcw
jg
pusha
loop
test
cmp
and
sbb
pop
rclb
addb
jbe
jmp
fiadds
xchg
arpl
es
mov
ja
pop
outsb
add
xchg
cli
lahf
pop
movsb
add
push
ja
loop
cmpsb
lock
cmp
xor
pusha
xor
cmp
xor
xchg
in
lahf
hlt
imul
jno
andl
push
fisttps
fstpl
hlt
mov
ds
cmpl
test
dec
push
dec
stos
jb
sti
add
add
outsl
int
add
jle
fmuls
pop
xchg
fildl
ljmp
jns
mov
push
out
loop
adc
lea
xchg
cs
ds
mov
xchg
jp
adc
adc
push
ret
bound
add
bound
push
rclb
movsb
cmp
pop
lret
loopne
popa
xor
push
pop
sub
jb
adc
sub
jp
jbe
insb
mov
notl
imul
shll
rclb
sbb
popa
popa
add
lcall
dec
mov
mov
add
pop
jge
cmp
stos
push
jo
jle
inc
push
or
lahf
mov
cmp
mov
cld
pop
sahf
imul
xchg
lods
mov
test
push
pusha
ror
ljmp
aas
lahf
rclb
test
out
jl
clc
push
aad
jle
mov
loop
adc
inc
jmp
fldt
in
mov
int3
lcall
and
call
mov
rorl
push
outsb
mov
dec
jo
repnz
push
pop
push
int3
jle
jp
jno
or
pop
out
adc
dec
outsb
pusha
repnz
pop
ret
shll
push
movsl
mov
dec
add
sub
push
imul
add
pop
subb
inc
mov
jns
xor
stc
scas
test
xchg
adc
outsb
cs
leave
xor
or
pop
sub
or
push
or
lods
outsb
sub
or
cli
ds
xchg
das
out
inc
xor
popa
add
jle
mov
rorb
ret
in
jbe
add
rolb
je
sub
fucomip
xor
nop
mov
mov
repnz
into
movb
fcomps
jle
jno
inc
add
orb
dec
ds
rolb
in
addb
jb
outsl
dec
outsl
imul
lcall
sub
or
cs
cmpsb
imull
into
repnz
inc
cmp
ret
bound
add
jge
fildll
arpl
push
cmp
xor
jne
pop
inc
sbb
cmp
out
push
inc
cmp
push
xor
inc
pop
orb
pop
jb
sbb
push
cmp
mov
pop
rcrb
push
xchg
rorl
insb
jo
push
jae
adc
push
addl
je
cmp
insb
outsl
adc
mov
arpl
sbb
pop
cmp
test
jbe
adc
popa
push
orb
adc
bound
push
lcall
dec
cmpsl
jno
push
inc
iret
data16
and
or
imul
adc
lcall
pop
cmp
dec
jb
cmp
push
addb
add
ds
mov
cmp
stos
cmp
loop
subb
arpl
pop
sbb
iret
es
in
and
xor
inc
je
fmulp
in
jne
mov
repnz
addb
cmovle
std
into
ret
icebp
rclb
push
lock
imul
jb
push
inc
outsl
pop
into
stos
jne
insl
sti
xchg
bound
inc
adc
push
shlb
fxch
inc
dec
lahf
xchg
inc
sub
das
ret
or
pushf
fimuls
pop
push
stos
push
ljmp
int
repnz
mov
ret
pop
mov
cmp
and
push
pop
lret
sub
xchg
pop
incb
sub
es
xor
fwait
xchg
jo
orl
and
add
aad
jge
pop
shlb
sub
lea
data16
jnp
stos
stos
into
cli
inc
lods
sbb
cmp
jp
and
or
xchg
lds
mov
xchg
out
ljmp
pusha
dec
sub
sahf
into
mov
push
cmp
sbb
dec
ljmp
xchg
xchg
sbb
add
mov
xchg
jmp
ret
pop
pop
ss
push
jno
andb
mov
sub
incb
ret
jp
test
out
or
scas
daa
push
pop
or
pop
andnps
xor
jns
or
les
push
add
jmp
mulb
adc
in
jb
jno
inc
pop
push
ret
jge
imul
lea
cmpsl
lock
mov
js
mov
adcl
jge
fbstp
xor
es
jnp
stos
mov
jle
pop
push
adc
pop
lcall
add
sahf
ja
adc
adc
shlb
adc
insb
sub
push
adc
int3
push
jo
test
rclb
inc
outsb
or
mov
pop
popa
ficoms
jecxz
ljmp
leave
push
dec
jle
mov
push
clc
stos
jo
bound
insb
sbb
dec
iret
jp
push
enter
pop
popa
xchg
and
inc
or
sbb
mov
js
and
sbbl
inc
popl
orl
push
push
loopne
mov
cmpsb
call
out
sbb
sarb
dec
pop
jmp
test
jl
out
arpl
cmp
pop
or
sahf
push
nop
push
ja
adcl
xchg
movsb
mov
and
jge
add
ja
shlb
sbb
adc
dec
mov
or
mov
pop
je
fcmove
push
jb
test
pop
bound
mov
mov
ficompl
aaa
push
sub
push
sahf
shll
xchg
jo
push
dec
jb
incb
push
lods
xchg
jb
sub
cmp
out
sub
fildll
push
add
scas
xlat
xor
adc
jbe
bound
fs
pop
jmp
sub
sub
bound
pop
gs
jge
cmp
push
daa
ret
cli
cmpsb
insl
jbe
lods
push
sbb
pop
nop
and
push
pop
xor
cwtl
insb
aas
cmpsb
jl
cmp
sub
xchg
mov
sbb
aas
lahf
mov
sbb
mov
jle
lock
outsl
scas
es
in
mov
pop
test
pusha
bound
ljmp
jbe
mov
cmp
inc
cmp
pop
or
jb
cmp
jecxz
xchg
sub
jecxz
cli
lods
insl
popf
and
push
add
in
mov
add
pop
loope
mov
mov
push
and
addr16
outsl
xor
insb
push
paddb
jae
dec
inc
out
dec
xor
iret
fs
mull
add
inc
test
addb
jl
movsl
and
scas
jb
jne
pop
adc
xorb
jle
add
add
sbb
imul
test
adc
jle
lea
sub
sti
dec
pop
push
sub
fs
dec
roll
es
dec
ljmp
pslld
mov
fstl
sub
sbbb
sub
ja
mov
adc
popf
sbb
jbe
cmp
je
mov
repnz
shlb
cmpsb
push
inc
sub
or
popf
dec
test
cmp
add
fadds
dec
js
inc
ds
test
or
das
ror
in
imul
and
mov
pusha
imul
pop
mov
mov
mov
push
cltd
push
or
xor
pop
mov
sbb
mov
lret
scas
rolb
into
sub
jmp
adc
shll
es
push
fstpt
pop
add
sub
mulb
out
jge
pop
mov
mov
rcr
leave
dec
testl
mov
push
push
jb
pop
repnz
insl
pusha
push
mov
aaa
sub
aaa
lcall
fsubrp
jno
dec
cs
ljmp
lret
inc
imul
xchg
rcrl
adc
dec
ss
xchg
adc
lock
push
fs
test
repnz
fcomps
lcall
sbb
jl
sub
int
add
cmp
inc
dec
pop
imul
movsb
in
sub
ret
fwait
sbb
inc
push
es
mov
push
lods
pusha
xchg
cmpsb
inc
or
ret
inc
fidivrl
cmp
aas
push
or
push
pop
clc
es
lret
xor
pop
push
insb
xchg
pop
inc
ficompl
js
sub
imul
xchg
or
mov
scas
jb
push
jge
das
cmp
jmp
dec
dec
cmp
popf
scas
push
push
jb
stos
cmp
bound
lds
cmpl
inc
insb
cs
mov
and
jl
sub
push
pop
inc
push
inc
xor
cmp
imul
addr16
inc
inc
adc
ljmp
dec
repnz
into
mov
sahf
xchg
jb
lods
pop
lock
movsb
sbb
or
nop
es
jno
adc
je
aam
mov
mov
outsb
movsb
jbe
ret
jle
mov
iret
jnp
push
stc
lret
or
rcrb
jle
lds
push
cmp
and
scas
ret
and
pop
mov
lea
pop
push
and
out
mov
rclb
stos
mov
pop
pop
cld
adc
inc
push
popa
sahf
add
mov
mov
cmp
cld
js
mov
add
jg
pop
xor
sar
ror
fnstcw
rcrl
mov
imul
rclb
daa
jb
xchg
sub
inc
lods
repnz
dec
jns
cmp
mov
and
fcompl
popa
cmpb
cmp
sub
ret
inc
xlat
movsb
addr16
sub
into
push
pop
fisubl
outsb
lret
xor
testb
push
fnsave
andl
xchg
dec
push
xchg
or
dec
sbb
inc
xchg
and
int
mov
ret
and
iret
xchg
adcb
push
push
add
idivb
iret
xor
pop
pusha
push
nop
out
jns
jno
or
push
rcrl
daa
mov
cmpsb
or
subl
rcl
xor
lret
xlat
adc
sarl
ds
dec
mov
pop
inc
icebp
jbe
je
xchg
pop
adc
xor
ja
inc
jle
adc
ret
mov
bound
insb
in
xchg
inc
mov
jo
test
adc
push
dec
fidivrs
testb
icebp
mov
ret
ds
adc
mov
lcall
push
jp
loop
lea
fbstp
adc
sbb
pop
sahf
jp
jnp
jns
stos
mov
push
and
clc
ret
out
xchg
cmp
xor
subb
aas
xchg
pop
sbb
out
xchg
cmpl
loope
sahf
sbbb
repnz
ljmp
repnz
sti
imul
cmp
test
out
arpl
in
mulb
sbb
negb
push
shlb
dec
mov
xorl
cli
cmp
and
adc
or
lret
in
push
inc
and
jno
adcb
push
and
xchg
jno
dec
mov
ds
lahf
xor
jno
add
insb
cmp
lds
cmp
xor
rclb
cs
push
sarb
mov
mov
cmpsb
imul
adc
ret
scas
cmp
jbe
imul
push
dec
aaa
push
rorl
imul
inc
and
and
and
inc
xchg
sbb
push
push
and
rdmsr
bound
xor
pushf
mov
push
push
jg
lods
lahf
sub
mov
mov
add
loop
inc
roll
adc
test
mov
pop
push
pop
or
sbbb
inc
sarl
movsl
dec
xor
scas
cmpsb
inc
pop
addr16
adc
xchg
xchg
pop
bound
mov
lds
icebp
mov
xchg
pusha
jp
mov
fidivrl
loop
stc
jge
flds
je
repnz
jne
pminsw
int3
mov
mov
arpl
js
pop
mov
fldcw
or
xchg
xor
xchg
cmpsb
mov
sub
stos
inc
mov
add
and
mov
jl
adc
andb
inc
dec
push
and
cmpsb
aaa
xlat
cmpsb
jbe
jns
jl
ja
sbb
mov
or
push
sub
in
jno
push
adc
test
sub
xlat
or
add
add
movb
aaa
mov
and
in
and
lds
xorb
pushf
push
add
or
and
adc
in
push
jle
sahf
jbe
xlat
lahf
dec
cmp
jp
jge
rcrb
jo
cli
sahf
lds
pop
hlt
ja
les
sbb
mov
push
stc
dec
cmp
inc
jns
jno
sub
adc
add
cli
into
sub
push
adc
sbb
sub
jnp
jle
loopne
adcl
lcall
inc
jae
inc
dec
or
jb
int
or
imul
xor
and
gs
jb
mov
cmp
pop
sub
mov
icebp
aad
xchg
and
push
xchg
adc
xor
xchg
aam
cli
mov
into
jno
mov
inc
pop
mov
jl
or
iret
daa
push
popf
pop
jo
pminub
ljmp
fidivs
adcb
mov
out
inc
mov
sub
sbb
bound
popa
rcrb
push
test
sbb
inc
aam
xor
cmp
cmp
pop
pop
ljmp
insl
lcall
je
xor
lret
xchg
movsb
aas
in
cmpsl
std
cmpsl
loopne
xchg
dec
or
and
andb
xchg
adc
stos
inc
push
das
mov
push
pop
push
imul
dec
mov
cs
jecxz
pop
and
subl
sbb
ja
cmp
xchg
cmp
fmuls
xor
scas
or
nop
jbe
popa
movsb
mov
cmp
cmp
sub
stos
bound
pop
xor
jle
jo
add
mov
adc
mov
add
comiss
es
adc
insl
inc
ficompl
scas
and
clc
pop
jbe
cmpsb
cwtl
push
push
into
push
xor
cmpsb
cwtl
pop
lret
add
xchg
addr16
mov
stos
jb
fstps
add
xorl
push
cmp
bound
mov
inc
xor
daa
mov
rcrb
mov
push
jbe
frstor
idivl
mov
mov
sub
pop
subb
xor
les
mov
loopne
push
outsl
jge
inc
jge
ljmp
push
ret
dec
mov
xor
cli
pop
outsb
rol
in
and
data16
adc
inc
ss
adc
fmulp
ds
jle
sub
push
jns
bound
rolb
scas
lock
pop
repnz
bnd
fsts
dec
sub
bound
xchg
adc
push
icebp
cmp
jle
lock
pop
into
jbe
jns
mov
das
mov
pushf
and
jecxz
inc
and
jbe
push
jno
mov
pop
and
imul
bound
shl
xor
js
ljmp
popa
adc
push
pop
sbb
repnz
cmp
pop
les
scas
pop
push
jp
xchg
pop
sub
pop
jg
jp
sar
aad
cmp
inc
arpl
sbb
mov
popa
mov
push
pushf
sahf
jg
lahf
or
adc
xchg
mov
jg
popf
cmpsb
repz
js
bound
add
cmp
inc
cmp
xchg
subl
mov
cmp
shl
mov
push
and
rol
or
stos
sub
add
adc
andb
xor
xor
xchg
movb
test
ds
mov
sbb
daa
xchg
pop
ljmp
sub
loop
inc
and
push
push
xchg
es
bound
lea
push
inc
sub
sbb
and
mov
push
push
lods
adc
jb
dec
jae
ljmp
or
mov
cmp
mov
lds
mov
cmpsb
sub
jo
sub
jb
arpl
fadds
sarb
cmp
mov
mov
bound
or
iret
addl
pop
xchg
adc
add
mov
sahf
loopne
cmpl
xchg
add
mov
sbb
testb
icebp
scas
jl
out
ja
pop
lds
lds
bound
xchg
pop
push
popa
or
pusha
ss
or
xchg
insl
fiaddl
push
cmp
dec
inc
pop
mov
or
and
jnp
sub
ja
add
push
pusha
mov
mov
mov
rorb
mov
cli
jmp
adc
cmpsb
jl
aaa
xchg
mov
clc
xor
sbb
add
sub
dec
popa
pop
int
repnz
sbb
jne
pop
cmp
push
xchg
xor
xchg
idivb
leave
inc
xor
and
scas
data16
push
push
outsl
jp
outsb
add
pusha
ficompl
or
cmp
daa
loop
push
dec
je
pusha
inc
divb
pop
inc
xchg
jae
mov
out
adc
sub
callw
jno
ud2
xorb
jbe,pn
aam
and
fisubl
push
add
lret
out
or
mov
inc
cmpsb
mov
jnp
ja
adc
lcall
dec
adc
mov
fwait
sub
pusha
filds
mov
addr16
cmpsb
cli
movb
lret
add
or
scas
pop
jp
pop
sub
repnz
repnz
dec
inc
jg
adc
inc
ljmp
es
jb
sar
adc
stc
inc
push
pushf
jle
dec
shlb
cli
sahf
aaa
js
add
pop
adc
ret
push
daa
inc
sub
cmc
dec
inc
lds
shlb
lea
ljmp
inc
dec
std
push
ret
dec
cli
adc
cmp
pop
repnz
fstps
scas
mov
adcb
mov
subb
lea
dec
ss
jle
les
adc
rcrb
arpl
mov
in
sub
jecxz
scas
xor
jno
das
xchg
cmp
lods
sbb
cltd
cmpl
dec
and
cmp
pop
adc
pusha
push
and
js
sub
lret
bound
rclb
dec
fwait
sahf
insb
pop
stos
bound
mov
jp
rolb
lock
jge
sub
or
jne
insb
pop
pop
lea
cmpl
adc
push
cli
fwait
push
jns
ss
mov
dec
ret
mov
mov
sub
inc
sahf
pop
jns
mov
ficomps
bound
inc
pop
jmp
pusha
cmp
sahf
fisttpll
hlt
pop
pop
sbb
and
mov
push
ret
adc
or
loopne
inc
add
ror
sbb
and
or
into
jle
scas
mov
and
loop
jmp
std
push
inc
inc
pop
jb
xchg
test
and
jge
xor
pop
and
aaa
pop
sbb
rol
loopne
xchg
insb
add
push
iret
mov
cmpsb
jns
fwait
js
cmpb
jl
adc
out
push
int
movb
nop
mov
cli
loope
aaa
data16
push
push
mov
xchg
popa
push
stc
out
or
push
imul
xchg
das
clc
sbb
dec
scas
fisubrl
pop
pusha
and
xor
imul
adc
push
dec
or
fidivl
xorb
push
loop
lret
insb
mov
rcll
and
push
fcoml
arpl
inc
and
lcall
sahf
pop
mov
xchg
test
out
xor
adcl
daa
mov
pop
cmp
add
mov
bound
mov
lret
push
add
data16
loopne
pop
dec
movsl
outsb
adcb
xor
push
pop
adc
or
subl
jl
and
pop
cmpsb
arpl
hlt
insb
sbb
les
jo
xor
stos
hlt
inc
arpl
inc
push
pop
and
pop
arpl
fwait
jne
inc
and
mov
inc
sub
inc
xchg
jb
int
pop
sbb
scas
movlps
in
popf
mov
adc
fbld
cwtl
out
pop
and
pop
and
mov
ds
inc
xor
add
fisttps
push
inc
mov
mov
arpl
das
or
in
cmpsb
es
jno
add
test
xor
repnz
cmpsb
ret
ret
cmp
push
adc
outsl
jecxz
cmp
jae
stc
ss
adc
js
lods
repnz
lds
cs
cld
je
pop
fiaddl
push
mov
scas
cli
adc
xchg
fwait
or
mov
and
test
inc
xor
or
stos
push
jle
cld
cmp
mov
pusha
xchg
adc
push
pop
fisttpl
push
push
pop
inc
jne
xchg
ret
and
repz
xlat
mov
mov
into
mov
in
dec
mov
in
sub
sub
xchg
ror
pop
mov
out
sbb
js
testl
loop
cmpsl
or
sbb
adcb
inc
pusha
dec
sub
aam
repz
xchg
arpl
mov
mov
xchg
ds
cwtl
jge
aam
dec
or
xor
pop
mov
jmp
les
imul
push
push
fbstp
addb
mov
loop
cmpl
ja
std
pop
notb
into
out
add
xchg
les
adc
sub
xorl
lods
pop
imul
scas
and
arpl
and
cmp
hlt
imul
mov
fcoms
cmp
rcrl
pop
mov
xor
bound
push
negb
inc
jns
adc
leave
sahf
sbbb
or
sbb
cmpsb
add
inc
cs
jb
ljmp
data16
xchg
push
je
out
or
jns
mov
leave
pop
mov
shll
and
ljmp
push
andb
jns
push
add
fists
jle
jg
mov
add
shll
push
int
pop
mov
inc
fdivrp
jb
fs
loop
jle
cmp
add
push
outsb
add
sahf
jl
imul
sti
int
mov
jnp
fisubl
into
in
cmpsb
pusha
roll
jbe
pop
xchg
and
mov
pop
push
jbe
mov
ss
push
andl
xchg
ljmp
inc
fs
pop
sbb
or
xchg
cmpsb
jle
sub
movsb
subb
lahf
push
addl
add
cmp
sub
dec
idivb
xor
pop
xchg
in
mov
enter
ja
push
xor
loope
ret
aaa
cmp
pop
mov
cmp
pop
jb
pop
addr16
ret
bnd
or
mov
mov
mov
insb
cmp
sbb
ret
dec
repnz
dec
pminsw
movsbl
and
iret
inc
stc
pop
es
jp
jnp
mov
cmpsl
sub
fbld
scas
repnz
cli
pushf
pop
dec
enter
sub
rcl
add
xor
pushf
outsb
inc
in
mov
push
and
and
das
xchg
int
ret
dec
mov
sub
xlat
push
imul
jbe
add
loop
insb
push
push
dec
mov
ja
test
push
mov
jl
enter
mov
push
imul
inc
sub
mov
cli
daa
sbbb
sbb
rclb
and
xchg
enter
and
xchg
adc
sub
and
and
in
inc
in
fs
movsl
mov
sbb
jnp
popa
xchg
icebp
push
dec
adc
stos
jb
faddl
xor
push
andl
iret
shl
push
not
scas
ds
inc
jns
xchg
cmpsb
jo
xchg
push
imul
in
mov
fs
sbb
dec
pmulhuw
ds
jae
roll
addr16
adc
jp
mov
decb
loop
loope
and
clc
js
or
jno
push
jb
mov
popf
jge
fdivrs
pop
jae
out
leave
scas
pop
pushf
inc
pusha
push
xor
addr16
and
jge
clc
cmpsl
xchg
jbe
mov
arpl
jp
repnz
xlat
adc
sub
cmp
mov
xor
enter
aad
mov
stc
mov
ljmp
push
in
aas
ret
mov
mov
xor
ja
pop
adc
cs
ds
or
sahf
sub
lods
adc
clc
mov
push
outsb
ret
inc
pop
xchg
push
outsl
sahf
jno
jg
xchg
out
mov
xchg
rcrl
dec
adc
sub
adc
ficoml
cmpb
mov
cmp
sbbb
cs
add
jnp
bound
inc
or
inc
data16
cli
add
cmp
xchg
mov
add
les
add
mov
inc
mov
push
push
out
pop
jns
ljmp
xchg
ret
sub
stc
andb
sbb
and
jo
rol
addb
stos
incl
inc
jmp
dec
and
sahf
dec
jmp
or
mov
rolb
imul
jle
adcl
mov
inc
dec
les
inc
sbb
icebp
ret
in
cmp
ljmp
and
pop
shlb
jge
xchg
subb
in
popa
sbbb
pop
xchg
andb
pop
push
dec
adc
icebp
repnz
jo
fisubrs
ficompl
xor
or
push
lret
dec
inc
mov
xor
xchg
push
xchg
push
ret
pop
xor
or
lret
jne
popf
pop
repnz
and
push
imul
je
fs
jnp
out
or
push
jo
mov
xlat
and
and
push
js
insb
and
pop
jo
aaa
mov
inc
sbb
adc
sar
mov
sahf
sbb
or
xchg
sub
loopne
inc
push
ss
enter
rorb
sahf
xorb
test
in
ds
xor
pop
pusha
push
jne
xor
and
pop
jle
or
loopne
rolb
mov
scas
into
push
xchg
stc
mov
aam
inc
rcrb
ss
pop
bound
sub
aam
ja
popf
and
ss
les
push
or
sub
mov
daa
pop
filds
testl
cmc
dec
imul
repnz
mov
fimuls
xor
add
or
sarb
mov
push
add
or
push
jle
sub
fidivrl
inc
sbb
jbe
add
fcmovnbe
jns
inc
push
jle
in
xchg
jmp
adc
int
xor
lahf
dec
std
mov
pop
mov
ljmp
inc
pop
jge
sbb
and
mov
push
sbb
pop
pop
adc
adc
ret
in
test
loop
pop
scas
cli
adc
jns
jle
dec
mov
rcl
sbb
sbbb
dec
imul
jge
xchg
cmp
out
sub
addl
sbb
lods
mov
and
sarb
rcr
push
aaa
mov
push
jnp
mov
jp
stc
sub
xor
add
add
inc
mov
push
jp
mov
and
cs
inc
jp
push
and
int3
sbb
rcll
imul
xor
mov
adc
inc
iret
sub
lsl
outsb
lret
stos
pop
mov
insb
ret
sub
ret
xchg
fists
sbb
jns
sbb
dec
inc
test
repz
dec
push
pop
add
aaa
ret
xchg
pop
scas
pop
jle
fldl2e
inc
sub
jb
jp
push
sub
jp
pop
add
cmp
cld
and
and
pop
inc
outsl
add
stc
adc
orb
jb
sub
push
cmp
repnz
fcomps
stos
adc
pop
pop
xchg
ficompl
push
sbb
testl
jb
inc
pop
ja
inc
imul
inc
jmp
bound
out
sub
daa
rcrb
sbbl
ds
mul
push
adc
mov
jl
insb
mov
ja
fidivrl
adc
xorb
pop
or
mov
pop
invd
xor
fwait
sbb
add
loopne
jno
and
out
subl
jbe
or
jecxz
fdivrl
inc
mov
adc
dec
cmp
dec
cmpsb
mov
daa
rclb
lret
and
hlt
sub
fwait
nop
push
lret
xchg
push
and
cmp
into
lods
xchg
or
les
xorb
mov
push
repz
outsl
jo
loopne
add
shlb
inc
mov
jp
inc
fnstcw
inc
sub
lods
test
dec
cmp
or
out
push
cmp
sbb
rol
pop
sbb
jecxz
dec
jp
inc
mov
and
inc
mov
xchg
adc
adc
push
imul
ret
or
imul
cmp
push
and
xchg
inc
sub
mov
lret
mov
lcall
test
push
into
inc
andb
divb
adc
ljmp
je
into
loopne
gs
ja,pn
fnstcw
out
push
outsl
leave
cs
and
cmpl
mov
outsb
pop
jmp
ds
mov
inc
bound
xchg
test
mov
pop
sarl
pop
cltd
inc
mov
fisubs
xor
or
mov
les
das
push
dec
rorb
xchg
mov
push
xchg
xor
cs
dec
hlt
stc
data16
dec
cmpsb
out
xor
or
and
add
jmp
or
lret
ljmp
imul
ljmp
jle
and
lahf
std
out
test
stos
jae
inc
sbb
dec
mov
sbbb
inc
sbb
add
nop
mov
jecxz
add
push
iret
push
out
outsl
cs
repnz
dec
sub
mov
in
repnz
cmp
dec
ret
mov
enter
inc
mov
jb
sti
leave
addr16
inc
jecxz
push
data16
scas
xchg
sbb
mov
push
iret
pop
ret
add
pop
jnp
sbb
imul
jo
addb
int
ss
cmpsl
rcrb
push
cmp
repz
insb
inc
icebp
pop
aam
cmpsb
add
repnz
mov
sub
jb
popa
outsl
xlat
ret
imul
dec
push
xor
or
iret
pop
xor
arpl
daa
xor
ss
push
fbld
rclb
mov
sub
int
bound
bound
or
xchg
sub
push
and
jnp
sbb
in
mov
adc
cmpsb
loope
adc
pmaxub
je
push
mov
jp
out
mov
ret
rclb
bound
inc
xor
jg
arpl
jg
pop
mov
jmp
jmp
mov
jnp
xor
mov
shll
ret
mov
insl
in
ds
addr16
dec
adc
sbbb
xchg
and
in
negb
inc
mov
out
jb
sub
sahf
sbb
dec
ss
scas
fstpt
xchg
cmpsb
mov
add
pop
add
test
and
cmp
xor
inc
mov
aaa
mov
and
jne
cwtl
negb
xchg
lods
insl
mov
and
pusha
cmp
lret
push
dec
int3
pop
pop
movsl
bnd
xlat
imul
push
mov
push
js
mov
mov
cmpsb
sbbl
sbbl
and
data16
jp
push
adc
fldcw
jl
sub
adc
xor
xchg
push
xchg
icebp
subb
mov
and
xor
sub
xchg
push
ljmp
scas
pusha
mov
or
push
cs
push
mov
pop
adc
dec
jge
icebp
adc
inc
ret
pop
xchg
xor
inc
and
sbb
in
xchg
pop
adc
jle
das
pop
xchg
test
jge
orl
pushf
cmpsb
add
or
inc
xsha1
cmpsb
dec
jle
outsl
cli
xor
pop
and
add
mov
jbe
push
push
adc
imul
and
jbe
jge
ds
ret
dec
cmpsl
pop
xchg
inc
es
ljmp
cmp
mov
insb
pop
notl
shrb
aaa
lods
fsubs
mov
insb
stc
inc
pop
repz
mov
ja
pop
pop
or
sbb
jns
xor
mov
cmp
push
jg
mov
mov
decb
cmpsb
mov
mov
push
jo
xor
push
cld
sahf
hlt
push
jecxz
jb
dec
mov
sbb
pop
ds
inc
sti
std
xor
add
jo
push
in
mov
lret
dec
ss
psllw
inc
std
jae
push
filds
cmp
xor
pop
pusha
aam
es
in
jns
sub
adc
add
mov
cli
inc
out
add
pop
push
add
dec
add
mov
imul
mov
ljmp
push
imul
push
ret
orb
mov
and
insb
subb
sahf
push
jle
and
jbe
test
lret
test
inc
mov
outsl
cmp
dec
orl
lret
pop
ret
scas
sub
pop
out
cmpsb
mov
jmp
cli
add
ljmp
imul
push
insb
pop
and
sbbb
adc
mov
ss
pusha
push
xor
inc
test
shll
push
loop
lahf
mov
daa
push
scas
sbb
pop
mov
xlat
mov
mov
dec
push
xchg
mov
aam
add
bound
es
pop
and
arpl
shlb
lods
out
ret
ss
or
stc
dec
fs
cltd
add
out
int
inc
inc
mov
lock
xchg
mov
mov
sub
mov
outsl
xchg
sbb
lods
push
inc
out
inc
sbb
mov
jp
lret
ret
push
decb
push
subl
adc
mov
jp
lcall
jae
dec
push
mov
jg
hlt
pop
pop
push
dec
mov
lods
xor
shl
dec
push
dec
stos
in
dec
pop
adc
mov
es
fdivs
adc
repnz
xchg
out
jge
test
adc
into
fiaddl
ja
stc
loopne
lods
jle
jb
add
push
pop
aas
lds
dec
fwait
jb
jmp
arpl
push
adc
adc
fs
imul
adc
jnp
js
jo
outsb
ret
lcall
es
idivl
outsl
or
jp
xchg
sbb
insl
jnp
fiadds
inc
fimuls
cs
and
jmp
lret
mov
fistpl
mov
inc
cmp
add
js
std
mov
push
pop
fdivrp
sub
add
ljmp
pop
imull
stc
fsts
testb
mov
push
pop
out
push
gs
fimull
xorb
mov
mov
out
pop
popa
and
mov
and
pop
sub
mov
xchg
outsl
mov
inc
cli
bound
stc
mov
xlat
push
mov
mov
and
sbb
imul
add
jp
push
jns
out
pop
and
adc
shl
inc
cmp
dec
xor
adc
push
out
adc
dec
push
addr16
or
shlb
jg
sbb
push
imul
dec
mov
in
add
add
aaa
nop
stos
lret
or
push
sub
pop
cmp
push
sub
notl
mov
inc
jnp
ja
fisubrs
fadds
fsub
mov
inc
bound
push
fstpl
daa
push
adcb
adc
jbe
push
enter
test
xchg
push
mov
cmp
ds
loope
or
shrb
mov
scas
ret
int
pop
les
pop
bound
ds
in
aaa
pop
mov
and
mov
inc
cltd
bound
test
adc
in
push
and
cli
push
mov
ljmp
fildll
stc
sbb
ljmp
cmp
cmpsb
adc
xor
jmp
orb
fmulp
aaa
jle
in
jg
add
fisubl
and
pop
sbb
push
fdivl
popa
mov
or
or
dec
fnstenv
sar
pop
push
mov
jle
and
testb
aaa
mov
out
push
ja
movsl
outsl
lcall
sub
xor
push
faddp
jns
dec
test
sub
adcb
jbe
pop
adcb
pusha
rclb
pushl
test
add
jb
pusha
xor
pop
scas
inc
mov
mov
jp
and
pop
and
sbb
inc
cs
jmp
add
cmp
cs
lret
adc
enter
adc
repnz
shlb
cmp
jmp
ret
loope
xchg
xchg
sahf
xor
add
push
pusha
sarb
out
jo
cmpl
rol
cvttps2pi
pop
movsl
sbb
jns
lds
jns
ss
push
xor
mov
mov
cmp
jle
jp
xlat
insb
pop
mov
std
dec
aaa
testl
adc
dec
lods
shl
ljmp
shlw
add
into
aas
jbe
mov
inc
mov
pop
stc
jnp
push
mov
or
sbb
dec
xor
mov
hlt
pop
loope
cmpb
mov
xorb
inc
loopne
popa
mov
out
ret
ljmp
and
dec
shlb
adc
jl
pushf
push
icebp
out
xorl
cmp
or
das
push
mov
adc
enter
jle
xchg
test
sti
and
push
adc
ss
push
in
shrb
mov
inc
data16
sbb
jmp
push
sti
mov
xchg
lahf
sahf
ja
pop
cmp
daa
dec
repz
dec
std
int
je
scas
mov
fsub
jb
dec
dec
pop
mov
stc
repnz
pop
xor
mov
push
mov
pop
lea
sub
push
and
sub
mov
imul
cmpsl
rcrl
push
pop
cmp
push
imul
outsl
fldenv
and
sub
insb
cmp
dec
push
mov
aas
sub
inc
xor
add
push
lds
sahf
sub
sub
push
scas
dec
adc
push
push
lea
emms
xor
xchg
mov
es
push
inc
ds
inc
in
pop
push
negb
dec
neg
push
adc
jp
out
idivb
shll
icebp
mov
ss
pop
or
mov
cmp
int3
jl
ret
shlb
icebp
jnp
cld
fdivrl
stc
mov
icebp
movsl
dec
cmp
pop
sub
adc
add
cld
ss
jo
push
jbe
inc
icebp
mov
ss
xchg
jecxz
xchg
pop
andb
mov
imul
ds
bound
insb
ss
push
mov
aad
sbb
nop
out
into
pop
in
mov
add
adc
dec
xor
push
cmp
dec
mov
or
sbb
rolb
add
mov
inc
mov
push
jns
jb
ss
mov
inc
and
arpl
add
out
jnp
and
cmp
repnz
arpl
int
mov
inc
xor
xor
stos
jbe
xchg
xchg
enter
inc
and
insl
lcall
rolb
push
xchg
and
jbe,pt
inc
mov
test
push
pusha
cmp
jo
add
out
add
lods
pop
pop
repnz
cmp
popa
cltd
movsl
xchg
push
lret
daa
sahf
stc
xor
sahf
and
lock
or
jp
dec
lcallw
ret
into
loop
mov
pop
or
movb
and
ret
push
cmp
outsl
jne
xor
inc
inc
push
inc
pop
push
jb
xchg
mov
pop
outsb
inc
sub
mov
cmp
ljmp
insl
into
push
cmp
out
mov
aaa
jecxz
xchg
jae
mov
or
jae
push
dec
jl
cmpsb
scas
push
xchg
pop
rorb
std
rcll
xlat
mov
jns
adc
cmpsb
xor
sub
push
adc
lahf
dec
jnp
imul
push
bound
inc
jbe
jno
sub
push
dec
inc
repnz
and
xchg
sbb
push
cmp
mov
pop
sbb
push
test
push
xor
jle
sbb
data16
adc
sub
xchg
cli
jle
fs
in
lods
es
pop
int3
cmp
dec
dec
add
sub
inc
fnsave
inc
mov
cmpl
loop
sbb
ficompl
enter
pop
sub
push
push
jbe
xchg
call
xchg
sub
cli
mov
xor
inc
inc
mov
jp
adc
jno
addl
aaa
add
clc
arpl
push
out
sar
pop
ja
sub
std
scas
jns
decb
ja
cli
mov
xchg
scas
pop
sub
sbb
add
push
cli
add
push
and
push
xchg
rcrl
std
scas
ds
push
ja
jbe
pop
ljmp
shlb
push
shlb
adc
push
ljmp
push
bound
push
imul
jg
jle
push
outsb
addl
jle
dec
mov
dec
cmpsb
push
outsl
loop
iret
aaa
cmp
lret
faddl
stos
dec
lea
pop
pop
cmp
ret
inc
xor
cwtl
push
pop
sub
mov
and
popf
or
inc
orb
inc
push
add
jb
popf
imulb
sbb
push
test
test
out
mov
cmp
adc
inc
dec
outsb
sti
icebp
ljmp
sahf
sub
cmp
in
jb
pop
iret
mov
pop
sub
loopne
std
jl
jp
out
add
and
outsb
xorb
dec
adc
scas
aas
and
arpl
ss
jb
pop
sub
cli
xor
arpl
cmp
xchg
sub
pop
repz
fs
push
outsl
dec
aam
ficomps
cli
and
jns
in
xor
ss
pop
loopne
out
ret
pop
mov
out
jno
mov
or
scas
push
fs
loope
ret
lret
insb
sub
ss
repnz
daa
adc
and
push
aas
and
je
clc
fisubrl
dec
push
shl
ret
jmp
lcall
and
shrb
push
add
push
sbb
mov
fs
jo
sahf
mov
ja
sbb
decb
loop
ja
sub
pop
mov
xchg
movsb
sub
rol
mov
inc
mov
mov
jo
push
xchg
and
pop
outsl
pop
inc
push
les
or
adc
dec
xchg
ret
ljmp
leave
cmp
repz
lret
add
imul
add
inc
sub
dec
or
les
inc
inc
xor
pop
outsl
and
ficoml
jne
xor
lcall
fs
jle
sub
mov
imul
and
sti
xchg
and
aaa
mov
pop
inc
mov
inc
push
stos
arpl
push
sbb
pop
mov
mov
bnd
adc
jg
mov
xor
jne
aaa
push
rorb
cmpsl
sbb
adc
cmp
jno
adc
dec
and
sti
and
bound
xchg
jns
mov
sbb
jl
sub
jge
cmpsl
mov
mov
jle
xchg
loop
push
add
popa
gs
sbb
ja
orl
push
je
ds
jns
mov
dec
and
int
lret
lret
into
sti
cmpb
dec
movzwl
mov
cmp
je
jmp
xorl
add
xor
push
jp
out
push
pop
inc
in
mov
ja
xchg
jbe
add
fs
movsb
lcall
xchg
in
in
jb
inc
pop
addr16
imulb
xor
pop
popf
aam
cs
pop
subb
cmp
sub
jno
orb
and
or
je
testl
out
xchg
ljmp
jp
and
jge
es
dec
clc
push
jle
adc
sub
push
or
xor
outsb
sti
mov
out
bound
push
mov
xchg
adcl
push
lahf
cmpsb
divl
xchg
adc
mov
das
pop
add
mov
mov
or
data16
xor
cmp
inc
test
movb
mov
lea
push
mov
cmp
sub
sub
xchg
mov
mov
scas
and
inc
loope
add
lea
iret
fdivrp
aas
xchg
nop
cs
and
fisubrl
pop
lods
xchg
addb
push
sub
aaa
inc
mov
add
xor
ds
in
mov
push
mov
pop
ja
ss
pop
adc
rcrb
dec
cmpsb
inc
xchg
into
test
sarl
jb
jno
into
pusha
mov
xchg
or
ljmp
mov
jecxz
jb
stos
cld
arpl
add
sarl
mov
push
mov
mov
cmp
shlb
jne
cmp
or
sub
inc
ret
dec
test
out
arpl
lcall
dec
push
outsb
pop
or
bound
std
repz
jae
ror
add
insl
cmpsl
or
or
mov
sbb
add
vmwrite
in
inc
jo
add
push
add
leave
push
jno
and
and
cmovg
repz
rolb
cli
push
pop
mov
aad
push
negb
pop
ror
decb
jne
inc
push
movl
or
sub
jno
or
sbb
inc
or
andb
inc
cmp
or
and
imul
dec
pop
add
jl
dec
ljmpw
lds
xorl
pop
adc
es
orl
push
fwait
mov
push
jmp
shlb
mov
xor
inc
jle
xorb
movb
pop
pop
mov
dec
or
in
repnz
pxor
repnz
daa
pop
xchg
pop
ds
fwait
into
xorb
cmpsb
jge
aam
imul
cmp
xor
cmpsl
dec
popa
add
subb
and
sub
inc
outsl
cmp
inc
mov
bound
shrb
push
xor
and
ret
jbe
mov
pop
add
mov
fwait
pop
push
sub
and
mov
es
das
xor
push
jg
in
std
bound
fstl
jns
push
mov
and
outsb
pop
jno
dec
push
mov
lcall
push
push
pop
jp
add
repnz
jnp
mov
stos
outsb
andnps
repnz
mov
fistpl
movq
cld
cmp
mov
add
pop
jno
push
or
es
mov
adcb
movsb
and
jp
insb
scas
inc
push
sub
inc
fidivs
loopne
mov
es
mov
fisubl
stc
js
outsl
imull
jo
ficomps
dec
mov
andb
or
pop
jnp
cs
or
je
hlt
jne
push
fldcw
jb
xor
jo
inc
subb
in
lcall
push
jp
dec
js
mov
or
roll
wbinvd
pop
push
jp
lds
or
rcr
adc
add
sarb
xor
inc
dec
dec
cmp
es
jbe
dec
adc
pusha
int
or
insb
jbe
mov
jo
mov
xchg
adc
movlps
cwtl
adc
loope
sub
add
outsb
xchg
dec
adc
jnp
js
clts
ds
push
and
mov
pop
jle
sbb
jo
ficoms
mov
jge
sbb
jns
aam
adc
push
jle
scas
hlt
gs
bound
shrb
cmp
add
push
dec
cmpsb
and
aaa
push
les
ja
mov
shlb
dec
push
push
mov
into
and
dec
mov
dec
lock
adc
ja
mov
mov
jle
loop
dec
stos
xchg
push
jp
popl
pop
scas
cmp
ja
inc
addr16
or
data16
dec
testb
xchg
sbb
sahf
jl
mov
lds
add
dec
inc
stos
or
push
fildl
pand
ljmp
cltd
push
cmp
cmp
bound
xchg
imul
push
hlt
xorl
add
mov
shlb
adc
inc
xchg
cmp
sub
ret
stos
shrl
xor
ds
mov
clc
jg
insb
shlb
and
jl,pn
push
lret
mov
mov
rcrl
fwait
fst
es
and
mov
sub
or
outsb
stc
push
data16
sahf
ret
fildl
mov
lcall
cmpl
mov
dec
and
cmp
sbb
inc
hlt
into
jo
ss
rolb
dec
push
mov
cmp
ljmp
xor
or
and
stos
or
pop
or
movsl
mov
jle
ja
inc
sti
mov
andb
pop
and
mov
adc
mov
push
cmp
pusha
pop
outsl
sbb
dec
xor
push
inc
ds
mov
jmp
addr16
add
int
pop
ja
and
push
jb
clc
inc
sbb
pop
inc
cmpsb
mov
jmp
push
jns
pop
ss
jns
cmp
or
cmp
add
dec
je
fyl2x
xor
add
test
push
iret
mov
pop
in
and
pusha
adc
or
xlat
stos
cli
lcall
and
into
imul
stos
sbbb
add
inc
mov
add
cmp
push
outsb
inc
push
movb
sub
bound
push
sbb
mov
add
in
sbb
sbb
inc
sbb
jmp
xor
pop
pop
lcall
inc
pop
or
inc
jnp
ja
shr
push
mov
movzbl
xchg
or
ss
repz
mov
jp
add
xchg
add
xorl
push
dec
inc
push
inc
clc
cmp
sbb
repnz
adc
mov
ret
mov
add
dec
push
daa
pop
push
negb
inc
jmp
jle
sub
std
in
mov
out
sbb
mov
dec
add
xchg
rcll
imul
jno
pusha
daa
cmp
sbb
jo
xor
add
insb
xorl
repnz
ficoml
xor
dec
data16
mov
push
add
dec
push
jne
mov
dec
js
ror
stos
lcall
push
inc
in
bound
mov
stos
xor
inc
in
pop
rolb
mov
adc
jge
scas
ljmp
or
ds
xchg
push
ficoms
xor
and
xchg
fwait
pop
and
sub
ja
xor
push
stc
ss
sub
xchg
pop
lods
rorb
push
dec
mov
and
imul
pop
jge
arpl
xor
das
push
mov
outsb
sub
fwait
icebp
inc
dec
test
jnp
ja
stos
jg
sti
ficoms
hlt
pop
jp
scas
push
sub
ljmp
push
mov
and
sub
push
or
fisubrl
rorl
test
out
cld
sub
inc
fidivl
or
or
clc
sub
or
bound
adc
ljmp
rorb
pop
inc
xor
scas
shlb
and
lds
mov
fs
add
xor
mull
test
pusha
mov
filds
xor
mov
insb
adc
mov
jno
add
jge
out
clc
pop
dec
repz
ja
push
rorb
repnz
push
inc
popf
add
stos
adc
mov
jecxz
pop
fnstsw
cmpsl
add
dec
mov
idivl
jle
jb
inc
inc
cli
mov
lret
inc
inc
hlt
add
or
and
sub
inc
jbe,pt
in
ret
lretw
add
add
pop
imul
int
push
jp
or
mov
pop
pop
push
xchg
pop
push
mov
inc
add
adc
jp
sub
in
or
aas
jl
xlat
xchg
mov
or
mov
data16
dec
dec
in
push
xor
les
dec
lea
pop
inc
loop
cmp
sbb
pop
pop
pop
daa
fcomip
jle
bound
stos
pusha
testb
pop
je
xorb
test
shlb
inc
mov
es
movsb
in
je
repnz
mov
cmpsb
rclb
push
mov
jae
pop
sub
dec
and
sub
pop
out
jp
or
xchg
orl
add
add
pop
test
push
jns
push
in
sub
leave
sub
mov
ficoml
cmpb
in
fidivs
cmp
addb
daa
mov
sub
jge
fdiv
cs
xchg
push
add
lcall
shlb
push
cmp
inc
sar
rorb
jns
das
mov
jg
aad
cmp
xorl
subb
lret
test
and
mov
bound
sbb
jle
dec
jns
xchg
adc
lea
aas
xchg
pop
jb
insb
cli
pop
dec
lods
push
jp
test
icebp
rcll
stos
in
pop
ljmp
outsl
insb
mov
xor
sarb
xchg
and
inc
push
test
jns
ss
dec
jns
sub
aaa
cmpsb
add
push
pop
cmp
divl
out
jle
ja
cmpsl
popa
sarl
es
push
sub
pop
into
bound
ja
cmc
stos
daa
xor
push
cwtl
aas
mov
mov
pushf
ja
popa
and
pop
sarl
out
xchg
test
inc
dec
inc
pop
cli
addr16
insb
mov
push
add
dec
scas
dec
mov
jle
pushf
adc
mov
push
mov
add
lds
jp
inc
pop
bound
mov
push
adc
jp
ljmp
addr16
jb
mov
adcb
inc
into
ss
add
rolb
mov
scas
push
and
ljmp
jae
mov
pop
jge
mov
das
dec
jo
cmp
mov
data16
mov
faddp
jns
xchg
rolb
or
out
xchg
sub
dec
cmp
out
cmp
scas
adcb
jns
arpl
adc
add
jle
ret
cmp
push
xchg
cmpsb
inc
mov
out
inc
in
add
jg
int
movswl
lahf
das
fisubs
ja
and
jecxz
sbb
jp
push
xor
ja
pushf
dec
pop
cmp
push
push
mov
cmp
or
jo
mov
icebp
dec
mov
mov
jg
mov
test
mov
inc
jg
jge
outsl
dec
mov
test
jp
repnz
idiv
filds
out
mov
xchg
sbb
sub
inc
lds
lret
push
lret
out
jle
inc
adc
fiaddl
minps
sti
adc
pop
xchg
sub
inc
add
shll
cs
xchg
or
xor
jnp
pslld
xor
push
and
push
xchg
cmc
jns
fwait
mov
mov
ss
pop
lahf
and
cmp
push
movb
repnz
inc
sub
cmp
sarb
roll
je
test
xor
lods
or
scas
jno
int3
outsb
xchg
jle
xchg
cmp
inc
out
pop
and
and
mov
xorb
mov
ja
jp,pn
xor
lcall
negb
xchg
mov
xchg
mov
jns
in
sub
push
mov
int3
out
add
jno
jl
inc
xchg
jg
dec
sub
push
mov
enter
inc
sbb
std
inc
jo
jno
sahf
sbbl
or
pop
mov
or
stos
xor
jo
sbb
fcoms
xchg
push
cmp
mov
xchg
jb
lock
out
xor
add
add
sub
loopne
adc
enter
push
jnp
cltd
test
iret
ds
push
pop
xchg
mov
sbb
addb
lea
es
sub
int3
mov
jbe
pusha
xor
addb
loop
mov
outsl
push
mov
mov
cmp
and
repnz
stos
mov
ljmp
and
ret
xchg
ret
pop
mov
xor
add
in
mov
push
shlb
daa
push
xchg
int3
inc
in
sbb
into
xor
ficoml
loopne
adc
push
insb
mov
dec
jle
jb
xchg
and
mov
aaa
fs
inc
rcrl
and
jno
fiadds
dec
es
ss
jg
mov
repnz
insb
push
or
jbe
xchg
imul
inc
mov
jnp
dec
out
aaa
jp
shlb
pop
jo
and
inc
enter
cltd
add
and
xchg
adc
scas
xchg
push
cmp
ja
loopne
stc
sbb
dec
addb
mov
inc
and
push
ljmp
arpl
in
es
in
or
jp
sub
fisubl
jp
jle
and
cmpsb
out
je
xchg
push
pushf
jns
jbe
inc
dec
fisubrl
ja
jae
dec
sbb
xor
jno
mov
or
xlat
shlb
jl
cmp
mov
mov
push
mov
sub
push
andl
inc
inc
xor
inc
ret
aad
sbbl
xor
push
jno
icebp
rolb
insl
push
bound
inc
jnp
dec
pop
loopne
or
push
xchg
mov
add
mov
push
cmp
xorb
mov
pop
inc
inc
mov
inc
pop
testb
inc
pop
adc
jmp
ret
int3
into
push
int3
and
movb
sub
dec
sbb
adc
cmp
jg
rcrl
pop
hlt
mov
sub
jl
mov
jo
das
mov
and
cmpsb
jo
push
mov
adc
dec
push
je
and
ficoml
xor
jb
dec
hlt
repnz
stos
shlb
cmpl
arpl
aad
repnz
and
pushf
dec
xorb
inc
outsb
mov
scas
ds
adc
cmpsb
xchg
movsb
outsl
js
dec
and
dec
mov
nop
pop
push
fsub
testl
fidivl
jge
mov
js
adc
repz
sbb
xchg
fcmovne
sub
xchg
xorb
jge
push
in
mov
push
stos
inc
pop
ds
jns
fidivl
dec
jmp
loope
add
sub
push
adc
fimull
test
ljmp
xor
push
push
bound
cld
cltd
push
dec
sbb
push
inc
ret
fcmovb
or
outsl
jbe
aam
cmp
fcoml
movsl
ret
bound
pop
adc
into
out
add
and
repnz
sub
push
jl,pn
push
adc
cmp
imul
test
sbb
sbb
or
push
dec
or
mov
iret
push
adc
fidivl
mov
mov
jbe
jnp
jns
dec
je
push
xchg
repnz
jl
mov
mov
mov
mov
sub
imul
pop
nop
and
into
push
push
or
dec
jns
push
pop
ds
repz
scas
inc
jbe
mov
mov
push
push
xor
divb
push
pop
mov
andb
push
sub
jg
inc
jl
rcrb
jecxz
jge
push
repnz
dec
insb
jnp
push
pop
mov
stos
inc
pop
pusha
jno
lcall
cmp
int
addl
jp
ror
repz
es
pop
popw
xor
xchg
pop
pop
mov
bound
jno
xchg
sub
dec
pop
mov
sub
jmp
mov
jo
mov
in
fldenv
dec
sahf
lcall
cmp
jp
jl
jb
push
push
in
xor
jl
out
subb
xor
mov
xchg
insl
cmp
pop
xchg
data16
push
adc
jb
repnz
cmp
sbb
loopne
mov
jo
inc
xchg
add
or
mov
pop
inc
push
test
and
push
jb
mov
jp
sub
adc
lret
cmp
jge
out
fwait
sarl
jmp
sbb
mov
or
push
pop
aaa
fldcw
push
std
insb
xchg
imul
rol
jmp
mov
lret
jb
fs
lock
es
in
fbstp
push
cwtl
mov
fidivl
mov
jne
ljmp
and
push
insl
xor
stos
aad
pop
and
testb
ret
inc
dec
mov
jo
movsl
enter
arpl
outsl
jbe
sbb
jae
pop
imul
cld
add
fsubs
inc
mov
jle
mov
xchg
ret
out
jnp
mov
jns
insl
xor
jle
inc
inc
mov
pop
push
sub
ss
pop
sbb
sub
pop
dec
sub
mov
push
or
jg
jp
xor
adc
sti
or
and
out
xchg
inc
or
leave
cmp
jp
stos
and
in
push
or
inc
dec
loopne
xchg
mov
add
outsb
ret
aad
fnstsw
pop
cmp
mov
in
add
cmpsl
mov
dec
add
pop
adc
xchg
push
dec
cli
call
gs
stc
xor
ja
das
lsl
jbe
jecxz
xor
pop
or
push
add
mov
mov
dec
mov
ds
fdivrl
andl
jbe
sub
inc
jp
jno
xor
xchg
psubd
bnd
imul
imul
sahf
ret
pusha
filds
shrb
xchg
inc
lock
lahf
xchg
bound
mov
outsl
stos
and
shll
into
sbb
ljmp
insb
inc
jp
rolb
cs
jnp
pushf
and
es
scas
fidivrl
cli
jae
pop
inc
push
subl
js
lahf
sarb
and
lods
jle
enter
xchg
pushf
insl
test
int
bound
fldl
shl
adc
outsb
mov
push
push
lahf
into
cmp
shrb
mov
mov
mov
sub
cmp
push
and
pop
adc
jle
push
into
adc
add
fldenv
in
mov
push
aad
xchg
movsb
or
sub
jb
outsl
bound
xchg
inc
sub
jle
inc
pop
add
fcmovu
bound
lods
push
fdivrl
xchg
jb
mov
push
push
imul
and
dec
lret
rcr
sar
inc
push
shll
fisubs
sbbb
pop
fwait
pop
jmp
mov
call
xor
cwtl
sbb
inc
je
outsb
inc
inc
inc
addl
sub
mov
and
mov
lret
sub
cmp
cmp
xchg
pusha
sbb
add
inc
mov
pop
into
push
arpl
sub
inc
push
inc
bound
adcb
push
add
jbe
push
imul
adc
rcrb
test
fidivs
out
enter
push
add
jno
jo
xor
push
xchg
aas
lea
nop
fdivrl
stos
subl
adc
imulb
sub
push
cmpsl
imul
ret
dec
mov
fsubs
xlat
xor
ret
clc
rclb
sub
adc
mov
and
movsb
pop
jl
xor
fiaddl
add
cs
ficoml
cmpb
cmp
loope
bound
jle
mov
mov
cmpb
mov
push
fiaddl
sub
repnz
jno
jns
mov
push
and
inc
lods
xlat
ficoms
sahf
mov
add
push
add
outsb
adc
adc
ss
adc
cmp
xchg
mov
sbb
mull
jp
js
push
pop
outsb
push
mov
jns
jo
push
dec
fidivs
sarb
push
and
loope
push
nop
or
ss
shrl
mov
cmp
xlat
inc
mov
adc
mov
mov
sub
mov
push
pop
aaa
das
xor
mov
test
mov
cmp
xchg
movsl
ljmp
pop
dec
or
jecxz
push
sub
sub
inc
dec
and
loope
pop
push
sbb
jne
testb
adc
bound
push
xor
and
mov
adcl
add
in
xchg
mov
lret
pop
pop
xchg
outsb
test
lods
shrl
jmp
outsb
mov
icebp
scas
ret
rcr
pop
mov
les
sbb
outsb
xor
inc
jno
push
pop
pop
pop
inc
jmp
mov
adc
push
inc
das
test
daa
pminub
pop
incb
ss
or
push
jge
jle
push
sbb
lahf
jl
lret
jbe
pop
push
je
insb
push
ret
xor
and
mov
or
add
outsb
arpl
inc
js
jb
add
adc
push
mov
inc
add
rorl
cmp
nop
rolb
jnp
and
je
pusha
or
inc
mov
ret
cld
stos
pop
xor
fisubs
cmp
test
dec
mov
es
into
inc
jb
sub
push
shlb
push
into
jnp
mov
xor
mov
outsb
mov
inc
push
push
mov
push
push
movsl
outsb
sahf
mov
int
sarw
or
mov
dec
adc
push
push
popa
jl
push
imul
jle
pop
icebp
movswl
mov
mov
imul
pop
push
lods
and
pop
mull
and
les
insb
xor
fidivrl
or
xchg
xor
xchg
les
mov
and
pop
es
cli
xchg
loope
shlb
pop
fcompl
inc
dec
dec
pusha
bound
scas
and
mov
push
dec
mov
mov
pop
rclb
dec
push
lret
mov
jb
push
andl
imul
pop
adc
shll
jl
out
add
movsb
sub
push
jbe
inc
stos
or
cli
scas
sub
lea
daa
pushf
lret
push
sbb
cmp
pop
daa
ret
jb
sub
jmp
mov
aam
pop
repnz
outsl
pop
mov
cltd
stos
or
add
ret
xorl
cli
xchg
sub
inc
dec
adc
jbe
bound
int3
xchg
stc
mov
mov
fidivl
mov
push
inc
push
mov
cmpb
adc
loopne
jp
inc
aaa
addl
pop
stos
push
jle
ret
pusha
or
popa
mov
xchg
push
jle
lahf
xor
mov
xor
mov
or
adc
ja
inc
rorb
sub
push
pop
in
xchg
push
cmp
cs
and
iret
in
mov
adc
xchg
push
out
sbb
les
sub
imul
testb
push
xor
xchg
mov
arpl
jp
cs
jle
test
mov
add
rolb
xchg
mov
fcmove
imull
push
dec
lea
mov
js
fcmovnb
lcall
push
pop
mov
inc
dec
xchg
testb
imul
stos
and
xchg
je
repnz
bound
jmp
pushf
clc
push
and
push
or
or
sub
jno
mov
or
jg
rol
inc
or
and
mov
loopne
ret
jp
jnp
mov
push
mov
jge
fnstenv
dec
stos
jae
notb
cmp
mov
and
pop
lcall
jns
push
ds
sbb
fisubl
fsubrp
in
stos
notl
lods
xor
dec
mov
add
xchg
add
jae
xchg
inc
bound
jnp
lahf
fiadds
dec
jb
push
arpl
in
je
cmp
and
orl
push
jp
mov
mov
jle
fcoml
std
xor
inc
push
or
mov
repnz
xchg
out
push
inc
push
cltd
push
dec
fists
push
fwait
mov
inc
sti
inc
cli
les
inc
mov
adc
popa
pop
jnp
push
xor
xchg
pushf
jo
daa
xlat
int3
push
jbe
or
loope
test
push
pop
push
dec
shrb
rorl
mov
popf
push
cmp
out
push
aas
mov
cmp
jl
jb
mov
ret
or
lret
fstl
sub
imul
xor
ret
test
mov
ljmp
popl
mov
mov
xchg
mov
sub
push
xor
push
imul
lret
mov
lret
xor
xor
mov
sti
push
sarl
addr16
or
adc
mov
pop
adc
insb
es
out
shrb
mov
or
std
lret
and
ret
ds
add
dec
sub
rclb
cmpl
add
scas
push
jp
rol
add
outsb
idivb
or
push
add
shlb
call
es
add
cmp
pusha
stos
je
jge
mov
xchg
inc
in
getsec
jecxz
pop
and
push
xchg
add
lea
push
inc
and
ljmp
idiv
in
incl
cmp
mov
sub
lods
shlb
jecxz
cmpsb
inc
icebp
mov
sbb
mov
ja
call
cmp
adc
in
into
pop
sbb
push
divl
mov
xchg
inc
xor
popa
xchg
pop
push
pusha
push
mov
mov
add
cmpl
je
fs
lock
sahf
rorl
jl
push
pop
ds
dec
dec
not
push
and
push
mov
aam
inc
push
push
andb
inc
leave
bound
push
stos
scas
test
adc
push
rclb
ja
imul
xor
xorb
mov
jne
xchg
ret
mov
roll
jb
orb
mov
cmp
jbe
push
inc
push
sub
dec
int
sub
add
sbb
ljmp
outsb
faddl
push
mov
or
cmp
out
xor
out
pop
cmp
add
sbb
push
inc
inc
scas
inc
pop
movsb
xor
outsl
xchg
sub
movsl
out
and
jbe
jl
dec
push
jle
or
nop
push
mov
add
push
jg
fwait
ljmp
pop
es
mov
imul
xlat
adc
mov
cmp
mov
mov
jp
dec
pop
mov
les
or
out
scas
dec
ficoml
ret
loop
and
xchg
push
dec
imul
stos
or
mov
pop
lea
or
call
inc
cmp
js
add
ret
add
push
mov
xor
fdivr
adc
dec
rcl
fnstcw
xor
cli
push
and
fisubl
or
int
ds
and
ljmp
ds
clc
decb
ret
or
jge
gs
jge
enter
inc
lahf
insb
fistpl
in
cmpsb
daa
push
lahf
pop
jno
mov
loope
daa
cmp
aam
fdivrs
xor
mov
addr16
jne
rcl
jb
inc
stos
insb
mov
jp
pop
mov
push
sub
mov
push
or
stc
cmp
inc
push
hlt
mov
push
push
fstl
xchg
jecxz
push
fisubrl
jns
and
push
push
jecxz,pn
cmp
sbb
and
push
repnz
and
cmp
fcmovb
dec
xor
add
neg
outsl
insl
inc
xchg
out
sbbl
xor
or
pop
pop
jp
jnp
pop
scas
push
sbb
or
jb
jg
lret
push
in
mov
les
inc
test
into
mov
stc
sbb
aaa
push
out
fimull
push
mov
cmp
mov
inc
outsb
or
xchg
xchg
xlat
mov
arpl
jae
push
lret
adc
arpl
inc
add
dec
rol
mov
mov
sbb
mov
or
and
sbb
sub
into
mov
sub
push
mov
xor
push
rolb
mov
pop
mov
outsb
mov
gs
push
and
imul
sub
in
test
outsb
add
mov
pop
es
mov
mov
mov
rcr
adc
ret
mov
pusha
aad
rol
ja
cltd
cs
inc
push
imul
data16
ret
pop
pop
mov
bound
ds
in
xchg
dec
dec
jmp
mov
add
push
in
push
inc
ja
jno
cli
adcl
adc
cmpb
mov
arpl
bound
jp
repnz
push
fists
push
fimull
jbe
cli
dec
jmp
test
xor
push
cs
push
jge
jo
inc
aas
std
sbbb
ljmp
dec
aad
xor
inc
inc
out
icebp
pop
jae
cmpsl
sub
pop
mov
jns
addr16
pop
orb
notb
mov
xor
add
adc
fimull
cmc
jo
shll
lods
mov
mov
lret
jns
notl
imul
jge
mov
add
imul
jp
int
push
fs
sbb
fldt
ss
jno
es
or
ss
pusha
cs
vpmovm2w
jp
xor
cmpsl
add
sbb
inc
leave
aas
cmp
ds
insb
ja
push
andb
outsl
pusha
cmp
mov
icebp
jg
popf
ret
lret
inc
gs
inc
xchg
not
inc
push
mov
xchg
jns
or
ljmp
and
xchg
mov
pop
pop
and
es
push
inc
imul
push
ljmp
scas
push
inc
sbb
or
pop
and
xlat
xor
sub
inc
cmp
jle
mov
lret
pop
lods
rcrb
mov
sub
push
dec
jge
jb
arpl
lcall
mov
outsb
clc
adc
and
mov
xor
out
punpckhbw
adc
sub
jnp,pt
mov
arpl
les
fcom
lea
bound
shll
pushl
arpl
es
jmp
ret
inc
nop
adc
add
bound
aaa
xchg
mov
xchg
cmp
mov
jg
push
ret
xchg
mov
push
push
fcmovnbe
jge
add
ja
bound
fstpt
xchg
repnz
dec
jns
andl
scas
xor
inc
fistpll
inc
mov
je
mov
mov
mov
xor
mov
xor
xor
outsb
jg
outsb
in
fs
xchg
aam
and
js
inc
and
jp
fiadds
jno
inc
or
adc
ss
sub
inc
mov
adc
addr16
fldcw
pop
jmp
xchg
daa
ds
sub
jno
out
out
std
ret
jp
cltd
dec
rcrl
xchg
andb
or
fiaddl
out
cli
bound
test
insb
push
bound
jne
push
sub
add
addr16
mov
mov
dec
xchg
adc
lods
inc
jns
ficomps
mov
cmp
pop
or
adc
sbb
ljmp
aaa
lahf
xchg
mov
ret
shl
in
adcb
popa
jecxz
adc
xor
stos
xor
roll
pop
adcl
pop
divb
or
fisubl
or
cmc
push
pop
dec
or
out
and
jp
dec
jmp
xchg
fidivl
mov
rcl
xorl
jp
cli
add
sub
mov
test
mov
inc
cwtl
pop
sub
push
data16
cmpsb
and
dec
cmp
mov
mov
pop
testl
out
out
daa
test
sub
in
jb
jae
outsl
add
scas
push
inc
push
stos
fidivrl
dec
push
pop
pop
xchg
pop
mov
pop
je
or
shl
pop
sub
inc
loop
or
test
imul
repnz
ret
xchg
pop
or
jnp
ret
adcl
pop
and
jns
push
into
push
and
lea
loop
loop
cmpsb
add
lds
adc
je
or
into
mov
stos
inc
xor
jb
pop
mov
push
xor
mov
xor
adc
orl
clc
add
sahf
add
push
dec
cmp
into
push
sub
mov
mov
sbb
cmp
dec
lods
incl
push
data16
or
mov
or
push
sarl
clc
inc
in
repnz
pop
mov
inc
pop
pusha
movb
jg
pop
insb
ss
add
imul
push
fistpll
fwait
xor
xadd
mov
pop
dec
testl
push
xchg
dec
pop
cmp
arpl
sahf
jmp
inc
dec
push
dec
cmp
pusha
and
push
inc
lds
add
pop
pushf
daa
dec
pushf
adcb
mov
ss
jns
mov
or
pushf
pop
orb
mov
push
sub
ret
sub
pop
cmpl
cli
xchg
loope
pop
mov
shrl
sub
call
popl
mov
sbb
cmp
fsub
adcb
pop
fnstsw
dec
shlb
out
pop
leave
sbb
add
inc
fidivrl
dec
ljmp
notb
orb
cmp
inc
add
add
fists
sahf
fdivr
fs
int3
mov
xor
cmp
out
inc
and
pop
mov
xor
dec
roll
mov
stos
test
xchg
test
sub
ret
aaa
lea
jnp
or
lds
lods
adc
push
fldcw
je
sti
jnp
aaa
data16
outsb
push
mov
je
mov
sub
rcrb
jnp
sbb
jbe
and
sub
ja
mov
inc
pop
xchg
mov
or
lcall
rcl
add
xor
fldcw
bound
imul
dec
jae
fstps
inc
add
pop
ss
lret
scas
inc
mov
adc
push
add
jne
cmp
sub
sub
add
mov
adc
je
ja
lods
jge
push
cmp
push
data16
in
ret
adc
jp
cmova
mov
dec
hlt
ds
sub
jbe
push
cmp
jge
es
aam
dec
sub
mov
adc
mov
mov
and
xchg
lea
push
sub
mov
dec
jge
mov
push
scas
addr16
outsb
ss
push
push
mov
inc
out
insb
xchg
imul
xor
nop
shrb
push
sbb
shll
jae
mov
arpl
jp
push
add
add
jecxz
mov
pop
icebp
hlt
xchg
or
sub
imul
push
loop
insl
pop
pop
push
outsb
pop
push
inc
call
cli
ret
push
outsb
in
and
scas
push
push
sbb
in
out
insl
jge
inc
or
sub
dec
ss
sysexit
in
stos
bound
jp
xchg
test
cwtl
mov
sbb
bound
jbe
pop
pop
cmp
shr
incb
pop
jbe
adc
jle
add
aas
jmp
test
xor
dec
sbb
enter
and
int3
push
stos
out
xor
roll
jb
fdivrs
movb
sub
add
ja
jge
fwait
jl
push
push
jge
lcall
ljmp
jp
fiaddl
inc
mov
leave
sub
outsb
add
test
fldt
loopne
jle
repz
lods
outsl
fsubr
andl
and
outsb
sub
ds
cmp
adc
sbb
and
cltd
stos
sbb
lcall
mov
inc
ss
ret
shlb
push
and
jae
ljmp
mov
mov
loopne
pop
sbb
ja
jl
cmp
xor
fmuls
push
test
enter
aaa
fisubrl
aad
inc
ficomps
loop
mov
sarb
ret
mov
push
mov
leave
add
jp
stos
ret
add
jno
cmpl
pop
dec
dec
cmp
vmovq
mov
fs
aas
les
push
sbb
mov
in
imul
js
jb
fdivp
ja
ds
inc
jle
sbb
inc
jmp
imul
das
in
or
cwtl
js
in
ljmp
sbb
add
imul
xchg
loope
cmp
scas
jo
test
pop
pop
dec
insb
sub
ret
jnp
es
mov
pop
or
pop
mov
int3
ss
out
sub
clc
sub
nop
xchg
dec
cmp
adc
jae
mov
insb
add
inc
jle
push
dec
inc
movaps
cltd
dec
daa
loopne
push
bound
jp
ds
in
popf
cmc
je
ret
cmpsl
pop
mov
sub
and
jle
inc
js
jno
cmp
cs
mov
pop
scas
ret
adc
and
mov
push
rcr
data16
pop
and
xchg
jb
dec
push
addr16
cmp
mov
ja
xor
popf
into
in
push
or
cli
cwtl
xchg
jns
cmp
jge
push
loope
jns
imull
js
testb
imul
imul
rolb
mov
xchg
icebp
dec
es
add
add
and
stos
outsb
repz
jae
sub
sub
xor
push
sbb
dec
das
push
sti
push
jge
inc
xor
loop
pop
aad
ret
or
in
or
mov
mov
add
and
or
mov
push
jns
mov
sbb
and
shlb
sub
adc
es
inc
add
shl
ret
jae
cvtpi2ps
fwait
add
inc
fisubl
clc
into
jns
sbb
js
xchg
xor
popa
repnz
ds
xchg
push
cmp
lock
ja
sub
ljmp
xor
mov
orb
jb
lret
js
cmp
shlb
mov
push
arpl
jo
outsl
rclb
jmp
sbb
pop
repnz
mov
cmp
and
aaa
push
fcoms
cmp
outsb
jae
or
ret
dec
out
enter
add
repz
dec
push
dec
cs
rorb
cmp
les
inc
sub
rcl
add
adc
pop
mov
por
inc
inc
push
repnz
mov
adc
mov
sub
and
loope
inc
jo
sbb
xchg
mov
cmp
jp
and
adc
pushl
out
subl
xor
mov
outsb
push
cmpl
push
jnp
lds
rclb
dec
mov
lds
add
cmp
stos
scas
mov
mov
pop
movhps
jge
scas
push
push
xchg
sbb
and
push
xor
push
jns
inc
or
in
scas
jge
dec
pop
cmpsb
daa
jmp
ss
sbb
fsub
and
jbe
outsl
outsb
xor
inc
sbb
jbe
aaa
sub
adc
sahf
jno
data16
jae
xchg
dec
movsl
cmp
inc
pop
jnp
mov
jecxz
mov
add
adc
or
mov
insb
jl
mov
xchg
scas
jge
push
mov
outsb
sub
push
pop
mov
aaa
jg
mov
scas
inc
dec
mov
sub
mov
xchg
push
out
es
mov
mov
jmp
xor
xor
daa
or
mov
cmp
lcall
dec
inc
pop
and
ds
call
push
imul
dec
ret
pop
cmc
jae
nop
or
in
mov
rcll
popa
and
xchg
fiaddl
or
cmp
push
add
sub
inc
inc
es
pop
sub
add
fiaddl
xchg
jbe
cmpsb
imul
push
bound
pop
hlt
fidivs
stos
push
into
jg
jb
or
sub
sub
pop
jecxz
cmp
mov
mov
push
add
divl
cmp
stos
add
jns
sbb
xor
mov
ss
jns
sahf
push
add
fsubr
arpl
jne
push
loop
shrb
pop
jns
pop
mov
jle
xchg
insb
cmp
xlat
xchg
aaa
dec
sbb
ret
sub
push
test
insl
jmp
push
outsb
imul
cmpsb
cli
and
xrelease
pop
and
jb
iret
jo
add
mov
loop
jge
push
es
ljmp
cmp
xor
outsb
inc
les
mov
adc
push
inc
mov
push
shrl
jns
inc
xchg
jb
mov
lret
and
mov
popf
out
push
gs
andl
push
push
jle
xor
mov
dec
jle
out
enter
loopne
std
jge
lahf
sbb
dec
pop
int
sub
fldt
mov
jno
sbb
out
pop
and
pop
int
and
jns
and
shll
mov
int
pushf
in
push
lds
shlb
jge
lcall
mov
sbb
lret
and
adc
pop
orb
sahf
popa
pop
shlb
inc
or
push
jnp
andb
xchg
subl
pop
mov
pop
or
lret
xor
ljmp
xorl
mov
pop
orl
ljmp
pop
sahf
inc
cmp
aad
cmp
adcl
mov
shll
push
insb
xor
sahf
xchg
add
lret
sub
shrb
dec
inc
add
rolb
subl
imul
xor
jbe
push
xchg
cld
mov
xor
jb
cmp
cs
out
bound
sub
cmp
push
imul
jb
xor
mov
jg
jbe
pop
jb
fwait
into
inc
inc
push
ljmp
push
xor
and
outsb
inc
add
insl
nop
push
aaa
inc
loopne
xorl
or
jg
adc
cld
pushf
sub
out
jbe
pop
xchg
dec
aas
cmpsb
push
xchg
xorb
pop
inc
dec
mov
pop
xchg
call
fsts
fsqrt
cmpl
and
push
or
jbe
or
jb
je
mov
pop
lock
nop
jle
and
and
fsts
push
and
sbb
adc
push
shll
push
or
icebp
jp
jle
dec
cmp
pmullw
mov
mov
cld
filds
adc
imul
xor
xchg
pop
aas
adc
lea
dec
aas
or
cs
mov
mov
mov
jmp
add
push
cmpps
sahf
in
and
or
xor
sub
jns
push
jo
testl
jns
idiv
inc
dec
rorb
jle
test
push
jnp,pt
sub
lcall
orl
push
lret
out
jb
pushf
popf
push
add
adc
dec
adc
lret
push
pop
cpuid
in
nop
cs
pop
and
sub
push
jg
ret
push
and
cmp
ljmp
pop
push
jno
pop
movb
lds
aaa
inc
enter
cmp
loope
inc
xchg
pop
mov
sbb
ror
add
xor
add
bound
es
out
xchg
outsl
aaa
and
repnz
jbe
arpl
loope
mov
cmp
inc
inc
push
mov
mov
cltd
lds
lcall
jno
rcll
subb
adc
aam
inc
jbe
add
push
jnp
push
push
mov
jns
mov
and
push
xchg
ss
jp
test
sub
mov
jp
scas
add
inc
mov
jp
in
mov
dec
mov
cmp
inc
jno
imul
lret
bound
inc
into
mov
addl
sbbb
dec
add
and
data16
rcrb
or
push
and
jbe
insb
cmp
mov
jns
icebp
xchg
mov
cli
test
ja
lcall
push
stos
sbb
dec
cmp
rol
fidivrl
adc
xchg
pop
sbb
push
ds
and
test
ds
mov
inc
push
cs
das
push
sbb
and
addr16
jg
push
out
ret
xchg
xchg
mov
push
cmp
jb
in
insb
fildll
stos
jp
outsl
sti
fwait
xor
loopne
mov
syscall
je
js
movsl
jns
push
xchg
inc
lcall
jb
adc
ja
push
mov
pop
movsl
push
sub
xor
sbb
clc
shrl
imul
imul
jb
or
clc
mov
xor
push
xor
mov
and
jbe
push
pop
mov
fstpl
cmp
dec
jmp
bound
xor
sbb
cmp
pusha
sbb
rcll
push
push
push
or
mov
mov
sub
push
into
adc
push
jbe
inc
bound
ret
pop
pop
sub
imul
sub
mov
ficoms
pop
inc
dec
imul
push
mov
sbb
outsb
fs
orl
sbb
into
mov
and
lds
into
bound
pop
pop
jl
add
push
cmp
loopne
mov
inc
jnp
push
ficompl
imulb
adc
or
xor
mov
cmp
enter
cwtl
ja
inc
pop
idivb
scas
dec
adcl
pop
fimull
xor
ss
mov
aaa
lds
inc
leave
dec
adcb
andb
mov
pop
inc
mov
push
inc
add
jp
popf
or
push
xchg
or
push
gs
test
sub
jg
in
ficoms
lcall
jp,pn
mulb
sbb
dec
xor
lcall
jbe
fstpt
ja
sbb
mov
into
adc
jnp
pop
stos
pop
xor
push
mov
aaa
pop
cli
inc
cs
cli
xchg
inc
into
add
stos
jnp
push
insb
and
inc
ret
pop
cmp
outsb
pop
adc
bnd
mov
pop
rcrb
push
xchg
lret
add
jp
loop
xlat
xor
mov
cli
jl
enter
pop
inc
mov
lahf
jno
or
push
cmc
aas
dec
xchg
push
cmp
inc
add
push
xchg
push
push
cli
lds
inc
mov
jp
or
popa
adc
xor
test
inc
and
imul
mov
das
dec
fldcw
push
fiaddl
pop
rcll
sbb
push
sbb
aas
inc
jae
xchg
enter
inc
pusha
lahf
cmp
sub
xchg
jle
pop
mov
pop
notb
adc
addr16
arpl
and
jle
pop
fs
jae
in
mov
inc
xlat
dec
loop
xor
xchg
sub
jmp
jp
xchg
int
sbb
movsl
popa
xchg
mov
or
sbb
out
subl
push
jg
and
fistpll
cmp
jle
pop
jp
les
and
fsubs
jno
dec
jo
pop
negb
jge
add
adc
push
xchg
ret
movsl
mov
mov
aaa
add
pop
out
lret
adcl
popa
rcrb
xorl
xchg
inc
or
andb
sbb
dec
ret
ficompl
xor
inc
mov
and
mov
push
and
hlt
and
jg
or
repnz
fiaddl
imul
ja
add
sahf
add
jnp
test
dec
mov
xchg
ret
out
xchg
adcb
lret
es
jns
test
cmpsb
ret
push
jno
je
outsb
dec
shl
cmp
inc
and
ljmp
or
lcall
mov
or
mov
inc
pop
mov
mov
stos
xor
jle
xchg
ja
mov
jno
ljmp
xchg
js
mov
lock
dec
subb
ret
out
in
fimull
hlt
pop
dec
xor
scas
shrl
sti
es
mov
inc
sbb
ret
cmp
pop
addr16
cs
data16
and
mov
jno
rcrb
pop
jle
xchg
add
aam
mov
xor
bound
jnp
xlat
mov
cmp
sub
and
add
mov
and
push
cmp
cmp
andb
fadds
rolb
out
cmp
or
jne
mov
and
ljmp
inc
pop
dec
cli
push
pop
gs
adc
mov
mov
lret
dec
ss
shll
xchg
fsts
cli
mov
jbe
data16
stc
mov
es
xor
jo
sarb
push
xchg
sbb
sbb
lcall
or
push
dec
mov
mov
push
mov
or
imul
jge
jno
xor
out
aas
push
sub
data16
mov
jg
int3
shrb
jnp
int
out
xchg
sub
rcrl
adc
aas
rcl
repz
mov
sbbb
mov
or
imul
xor
idivl
and
mov
xor
mov
pop
push
inc
mov
fsubrp
pop
push
inc
or
xchg
addr16
xlat
adc
popf
imul
data16
stos
xchg
inc
movsb
data16
xchg
sbbl
sbb
subb
lods
jbe
push
cmp
and
icebp
jnp
inc
ss
or
dec
loop
jge
ret
sbb
sysenter
loop
add
adc
fs
lcall
dec
subl
loope
pop
add
and
loopne
repnz
fstpl
or
or
or
loop
rorb
push
bound
data16
imul
mov
add
shrb
aas
pop
adc
xchg
lret
mov
xor
jecxz
mov
xor
ja
cmp
stc
mov
dec
or
dec
dec
cmp
mov
nop
cmp
loope
mov
jbe
cmp
incb
and
lcall
addl
or
mov
sbb
cli
jle
mov
or
dec
jmp
mov
and
sub
xchg
push
js
and
pusha
xor
cmp
mov
or
jle
dec
add
cmp
out
push
pop
inc
dec
pop
inc
jge
jns
xor
adc
pop
addl
inc
jle
add
inc
jno
cmp
add
daa
pushf
mov
gs
dec
clc
dec
pusha
les
or
inc
popa
bound
sub
ljmp
cs
ret
shlb
push
pop
xorl
call
sub
adc
je
xchg
or
cmpl
adc
push
ficompl
xchg
and
aaa
or
mov
or
xor
pop
aaa
or
mov
push
lret
sbb
push
jne
movsl
repnz
ja
xor
xor
dec
mov
xchg
inc
jns
rorb
ds
mov
std
push
jo
or
sarl
jle
int
jg
aas
push
cld
pop
imul
imulb
cmp
pushf
xchg
lahf
ja
mov
jp
inc
sbb
mov
xchg
dec
outsb
inc
inc
addr16
pop
jle
cwtl
dec
push
xchg
dec
jb
test
xchg
fwait
inc
jo
jle
lds
inc
ret
mov
es
mov
testb
dec
inc
mov
and
xchg
dec
je,pt
push
adc
xor
inc
xor
add
or
bound
mov
push
scas
jnp
sbb
mov
pop
int
xor
cwtl
mov
add
mov
in
or
pusha
lcall
jo
mov
bound
adc
pop
mov
and
adc
push
scas
adc
lcall
pop
repnz
es
xchg
add
sbb
insb
push
in
xor
dec
sbbb
mov
jno
ja
nop
ljmp
rdtsc
out
and
dec
push
cmp
xorb
and
sub
sbb
stos
mov
mov
cld
jmp
lds
jb
scas
mov
sbbb
mov
into
loope
andb
cli
shll
sahf
push
js
and
pop
mov
sbb
in
xor
inc
stc
pusha
aam
mov
push
les
inc
jo
xchg
jnp
sub
mov
arpl
dec
pusha
fstl
leave
pop
add
in
mov
sbb
ret
mov
mov
es
xchg
adcl
push
nop
cmp
jle
aad
cmp
dec
jb
loope
or
mov
rcrb
insb
dec
repnz
insb
adc
or
push
data16
jecxz
push
mov
repnz
lret
or
cmp
xchg
sub
and
in
push
inc
aaa
insb
and
scas
sub
mov
pop
and
addr16
sbb
mov
or
add
mov
cmp
jg
jbe
fildl
add
pop
inc
inc
adc
xorb
andl
push
repnz
ss
idiv
imul
xchg
push
int3
push
pop
movl
mov
or
mov
out
rol
pop
mov
jl
push
xchg
scas
push
pop
jae
pop
addb
push
rcrl
xor
and
pusha
loop
mov
mov
ja
lahf
pop
and
sahf
dec
movsl
adc
mov
mov
jl
inc
mov
push
mov
jnp
roll
cmp
mov
bnd
jno
inc
push
push
decb
mov
ds
add
xor
mov
mov
mov
jb
lahf
and
dec
jge
dec
or
xor
mov
or
ljmp
mov
daa
divb
sahf
inc
out
inc
and
jae
cli
outsb
add
ret
mov
cmp
cmpl
das
sbb
add
andl
enter
xor
shl
in
sbb
loopne
and
dec
daa
clc
jb
pop
movb
dec
xchg
xchg
add
rcrb
ret
roll
mov
rorl
sbb
add
mov
outsl
sub
jns
inc
pop
jg
inc
and
sbb
cmp
mov
sbb
push
popa
test
rcr
dec
pop
sbb
sbb
or
pop
mov
jmp
lret
movsb
add
insl
call
mov
mov
jle
jecxz
add
imul
popa
incb
inc
inc
adc
mov
leave
push
mov
sahf
arpl
pop
jnp
pusha
pushw
jecxz
push
js
sbb
lret
cmp
pusha
adc
add
xor
mov
or
shlb
jl
rcll
cmc
sbb
add
subb
es
cmp
in
sbb
inc
xor
inc
mov
fs
setb
xorb
push
add
xor
xchg
jle
mov
daa
xlat
stos
data16
adc
les
inc
cmpsl
sub
inc
push
ds
aaa
imul
cltd
or
xchg
or
ljmp
pop
pop
inc
sub
loope
cld
add
mov
xchg
pop
sbb
push
push
mov
push
xchg
jle
push
push
jbe
andl
fisttps
mov
in
jle
jne
ret
fstpl
leave
and
repz
lcall
popf
cwtl
jbe
dec
cmp
jns
std
xlat
push
xchg
faddp
pop
sub
repnz
sti
and
clc
iret
shlb
push
sbb
ljmp
xor
call
pop
pop
mov
imul
lcall
cli
cli
test
rcrb
dec
ljmp
test
inc
jbe
mov
and
cs
imul
cmp
fdivr
dec
bound
out
sub
mov
rorl
jp
out
cmp
cmp
jae
xchg
dec
sbb
sub
inc
sbb
mov
lods
test
pop
cmp
ret
loop
cmp
xor
cmp
mov
or
ret
sarb
cli
cli
mov
inc
inc
mov
lret
aad
fisttpl
bound
push
fwait
pop
imul
jle
fdivrl
dec
dec
hlt
xchg
xchg
xorb
or
xor
xlat
stos
jb
jnp
dec
or
inc
add
or
aas
xchg
adcb
andl
push
mov
pop
test
loope
pop
pop
inc
std
pop
xchg
repnz
mov
out
jno
pushf
jbe
imul
jnp
xlat
loopne
incb
jns
inc
adcb
pusha
dec
inc
addr16
sti
push
jecxz
inc
and
in
mov
jle
inc
fs
inc
cmp
and
jb
imul
mov
mov
inc
in
sti
push
sub
pop
push
repnz
enter
pop
sbb
push
jbe
jnp
dec
cmpb
and
xchg
imul
xor
dec
shlb
jg
es
and
jnp
sbb
sbb
bound
lds
test
shlb
adcb
stos
xor
mov
inc
and
and
push
add
jecxz
ljmp
jg
cmp
and
cmp
xchg
and
push
push
fcompp
enter
inc
pop
or
mov
inc
jge
mov
pop
ret
dec
dec
mov
or
jns
push
jg
jp
cltd
sub
pop
dec
pop
adc
pop
push
mov
and
pop
jbe
ds
test
outsb
dec
mov
sbb
stos
sbb
fisttps
mov
clc
mov
jae
pop
mov
push
adc
divb
popa
jnp
daa
rcrb
push
mov
mov
mov
movsl
test
ret
cmp
push
jecxz
dec
add
mov
mov
sti
jmp
and
or
dec
mov
push
jb
and
cmp
clc
sahf
jge
aas
inc
into
mov
ja
scas
sub
ret
inc
cmc
xchg
daa
sbb
das
dec
xor
pusha
push
cmpb
inc
int
dec
xchg
pop
scas
or
or
xor
out
bound
andnps
sub
test
addr16
rcl
inc
addb
mov
jno,pn
cmpl
push
sub
andb
jle
add
jbe
je
dec
pop
jp
neg
add
cmp
pop
pop
testl
push
arpl
test
jo
rolb
xchg
jge
in
push
dec
pop
rorl
dec
mov
jbe
jg
push
daa
gs
cmp
and
leave
add
leave
sbb
aaa
push
out
adc
dec
retw
ror
stc
lock
jmp
inc
pop
add
pusha
ret
popa
jns
mov
mov
adc
jle
cmpsb
mov
add
add
insb
jns
mov
bound
data16
lock
mov
outsb
stos
push
push
ds
and
dec
out
push
daa
jo
es
ja
inc
outsb
subl
stc
push
cld
adcb
mov
pop
jbe
jp
rcl
add
mov
mov
push
ja
idivl
aad
pop
and
and
mov
fistl
xchg
lcall
and
push
sub
insl
outsb
jp
inc
add
pop
mov
sarb
outsl
pop
js
shl
mov
mov
inc
mov
pop
fildll
jmp
mov
gs
or
jl,pt
rcl
adc
mov
stos
or
pusha
scas
dec
jle
or
and
js
sbbl
add
or
inc
int3
outsb
jmp
imul
xchg
push
lods
dec
scas
and
in
loopne
mov
ret
cmp
cmp
cmpsb
or
bound
sbb
out
cmpsl
jno
push
dec
inc
jno
out
mov
cmc
or
adc
fimuls
jne
insl
mov
jbe
dec
dec
mov
xchg
or
out
shlb
inc
or
fisttps
mov
inc
imul
cmpsb
or
dec
push
sahf
lods
sahf
or
sub
repnz
shlb
fiadds
ret
push
mov
scas
ja
call
loop
add
xchg
jle
xchg
xchg
mov
orl
orl
int3
int
cmp
add
rclb
cmpw
lea
push
mov
lcall
scas
dec
push
movd
adc
push
test
mov
sbb
xor
sub
sub
jb
outsl
pop
imul
dec
mov
adc
jmp
dec
lcall
push
ror
xchg
inc
aad
pop
push
lods
push
pop
adcb
stos
cmp
jle
push
sbb
enter
xor
aam
outsl
aas
int3
xchg
push
push
popa
xor
push
xor
mov
sub
xchg
stos
shrb
jecxz
out
jo
mov
ret
rcr
pop
sti
jge
pusha
pop
outsl
mov
sub
fcmove
pop
scas
or
push
cli
xchg
fldcw
stc
repnz
dec
cmp
push
ds
rolb
mov
pop
pop
lods
mov
push
das
test
push
bound
xor
inc
nop
into
mov
xor
dec
loopne
mov
fwait
outsb
fs
fldl
in
jb
testb
inc
push
sbb
push
jae
out
xchg
test
inc
or
jle
push
mov
mov
incl
leave
cs
outsb
ljmp
aam
aad
cmp
fisubrl
jbe
push
ficoml
mov
push
xorl
sub
push
add
ljmp
adc
dec
mov
adcl
fiaddl
sbb
or
jo
adc
mov
mov
fsts
mov
sub
hlt
mov
xor
dec
shll
shll
inc
cmp
pop
js
jnp
bound
outsl
adc
and
inc
push
jle
or
pop
add
ret
jnp
mov
add
mov
mov
adc
dec
cltd
or
loope
sti
fldcw
push
or
inc
dec
xor
mov
sbb
cli
ljmp
push
xor
mov
sbb
cmp
cmp
push
ret
jge
loopne
sub
xor
sbb
pop
bound
bound
fisubrs
cmp
cmp
in
jne
movsb
sbb
shll
mov
dec
lods
pop
add
jge
cs
jbe
fdivs
inc
aas
xlat
ficoml
pop
ficoml
insb
sbb
cmp
sbb
inc
loop
jae
fdivs
sbb
ds
sbb
jnp
sti
gs
imul
je
andb
cmp
std
jp
shlb
xor
sbb
lock
pop
sub
icebp
aaa
push
mov
xchg
and
insb
fnsave
or
outsl
jge
in
das
push
push
push
mov
ss
shl
dec
jmp
fimull
cmp
out
andl
xor
scas
rcr
repnz
sub
mov
mov
je
mov
rolb
push
jb
or
in
push
push
sub
sbb
std
out
ret
push
lods
ljmp
or
hlt
inc
cmp
repnz
push
cmp
and
outsb
test
cmpsb
xor
fidivrs
pop
int3
sbb
cld
lretw
push
jnp
int3
js
adc
and
imul
xchg
roll
push
push
or
es
cmp
jns
cs
lea
lock
inc
int
addb
nop
and
dec
ljmp
dec
cltd
fcompl
xchg
in
loop,pn
sub
mov
lds
cltd
jne
mov
fildll
cli
xor
cmp
cmovb
jge
ja
sub
testb
call
loopne
mov
mov
dec
test
and
shrl
mov
add
xchg
fcmovu
shll
and
ja
inc
xor
orb
cmpl
adc
sbb
rclb
mov
fiadds
cmp
xchg
mov
ret
ja
adc
pop
fists
inc
jp
cmpsl
inc
fimull
cmp
ja
aaa
dec
in
jl
imul
pop
jp
push
and
cmc
jle
pop
pop
shlb
mov
jp
inc
cmp
jno
adcb
adc
cmpb
push
pop
adc
or
and
push
pop
mov
and
xchg
cmpb
jns
xchg
inc
sbbl
dec
scas
mov
and
mov
and
fcom
inc
sti
cmp
mov
jle
aaa
popa
add
mov
movb
insl
pop
and
or
addr16
push
jle
cmc
popf
push
adc
adc
shrl
jmp
push
xor
mov
aam
cmpl
rorb
pop
in
inc
insl
push
sub
stos
push
jo
push
sub
add
inc
in
xchg
bound
cltd
fidivl
fsubl
adc
lcall
push
outsb
lods
jp
cmpsb
push
addr16
movsl
adc
cli
rcr
lods
add
xchg
xor
inc
mov
add
shlb
jge
por
mov
addb
dec
in
js
rolb
push
cli
push
pop
sub
cmpsl
sahf
jge
daa
xchg
aad
sarb
inc
incb
sahf
push
repz
dec
push
pop
cmp
xchg
xor
or
dec
inc
ljmp
pop
xchg
push
inc
imul
mulb
enter
jb
jo
bound
scas
in
inc
inc
das
mov
sarl
outsb
ret
iret
sti
xor
roll
sahf
xor
mov
jns
insl
and
jns
jp
mov
xlat
push
mov
into
adc
xor
dec
das
imul
mov
aam
aaa
outsb
ds
rol
loop
iret
testb
xchg
and
inc
cld
pop
scas
lret
imul
scas
xchg
jnp
jae
pop
leave
mov
addb
test
mov
std
jo
xor
flds
jae
fldl
add
cmp
adc
subl
out
dec
pop
and
pop
push
add
xor
inc
adc
inc
ret
pop
pop
push
xor
sbb
subl
repnz
or
testl
add
jbe
aad
or
loope
push
lcall
outsl
stos
mov
pushw
fwait
inc
fiaddl
jb
jns
dec
xor
ljmp
xchg
shll
inc
push
xlat
bound
sbb
mov
popf
mov
jecxz
jle
mov
iret
and
jb
push
xchg
insb
pop
addr16
jp
stos
lret
dec
je
and
aad
ret
cwtl
mov
add
inc
outsl
into
lret
dec
mov
jp
cli
mov
sbb
adc
and
loope,pt
xor
outsl
mov
addl
push
sbb
call
cmpsb
in
pop
outsl
xor
and
add
notb
xor
pop
fidivrl
mov
cmp
ret
repz
jle
les
mov
scas
test
decb
or
mov
lds
add
jnp
mov
add
add
loop
ficoms
and
add
movsl
adc
push
clc
jbe
sbb
stos
push
cli
and
inc
push
in
lcall
subb
jnp
or
pop
mov
js
rorb
sbb
mov
lahf
push
cmp
push
inc
stos
bound
testb
adc
push
xorl
add
dec
pop
lcall
dec
and
incl
jb
outsl
cs
cs
jb
jle
clc
lods
aaa
and
sub
mov
push
shlb
and
and
jb
jbe
test
jns
sub
fidivrl
inc
jno
dec
test
jns
sti
and
jbe
xor
pop
imul
inc
imul
nop
inc
xchg
adc
cs
loopne
std
je
rol
loop
mov
lods
mov
push
jnp
data16
adcb
or
jp
bound
jp
dec
ljmp
adc
scas
fmulp
outsl
jns
jne
push
xor
sub
decb
bnd
push
shrl
push
lret
sub
jl
data16
pop
jg
sbb
and
int3
fstps
xor
add
faddp
jns
jns
lock
ljmp
lcall
push
int
sub
jns
xchg
dec
push
dec
loopne
cli
stc
push
ljmp
push
pop
bound
cmp
or
cmp
sub
and
inc
add
and
jo
ja
inc
mov
fs
arpl
push
lods
lods
adc
cmpsb
push
add
push
and
lret
sbb
inc
mov
outsl
punpckldq
xchg
or
jp
stos
add
push
sub
or
in
mov
pusha
push
adcb
or
mov
xchg
mov
dec
sbb
jp
mov
pop
sub
mulps
cmp
mov
ja
shll
and
es
leave
xor
dec
push
add
jb
add
push
xor
scas
repz
and
ret
mull
pop
js
mov
cld
mov
test
imul
lock
arpl
adc
out
int
xchg
and
mov
loop
inc
mov
movsl
cmp
sub
lcall
dec
jo
and
cmpsb
xor
cmp
daa
fimuls
pop
pop
outsb
mov
outsl
push
xchg
sbb
orb
fidivrs
mov
into
std
xorb
into
ret
add
inc
scas
mov
push
aam
mov
rol
fidivrs
pop
orl
popl
out
incb
xor
iret
jge
dec
movsl
and
xchg
mov
jmp
test
dec
add
repnz
mov
out
push
inc
dec
xor
inc
push
lds
lret
movsb
jns
outsb
lea
cmpsb
push
mov
aam
sbb
jo
sahf
ficoms
jns
fsub
pushw
mov
pop
fdivrs
xor
or
pop
ds
dec
jle
pop
shrl
xor
mov
out
lock
push
shr
add
bound
xchg
out
add
fidivs
inc
imul
jp
rcll
stc
mov
mov
add
sahf
mov
push
bound
outsl
aas
dec
push
outsb
and
xorl
incb
out
jb
dec
daa
dec
push
pusha
jle
mov
inc
or
sub
dec
outsb
or
mov
or
xchg
inc
int
lret
and
inc
push
sbb
ret
leave
lea
sub
fwait
inc
mov
pusha
lcall
mov
pop
pop
push
imul
scas
xchg
mov
iret
adc
xor
add
lret
insl
inc
out
and
sahf
jge
dec
inc
dec
sub
xchg
ret
jo
push
xor
aam
and
rep
lds
dec
test
gs
addr16
es
and
cs
shlb
movsl
cmp
jge
inc
push
mov
test
fwait
push
repnz
into
jg
jecxz
xorb
mov
push
inc
in
add
mov
sub
in
insb
mov
pusha
push
pop
insb
add
inc
lret
pushf
sbb
push
xchg
pop
std
add
mov
outsb
ja
mov
adc
add
ficoml
xchg
mov
mov
xor
fdivp
xor
mov
ja
pop
daa
xor
std
pop
pop
in
adcb
mov
rorl
scas
bnd
js
and
jp
inc
ficoml
mov
inc
cmpsb
push
mov
push
aas
push
add
jno
je
addr16
adc
dec
imull
mov
rorb
out
addr16
aam
jg
rcr
cmpb
sub
adc
pop
lds
push
xchg
flds
adc
add
sbb
jo
mov
sub
and
and
lret
cmpb
inc
lds
adc
and
or
push
or
jnp
inc
das
stos
jnp
mov
outsb
ret
push
scas
sub
pop
scas
or
push
aam
mov
shlb
inc
scas
fidivs
push
ljmp
mov
mov
outsl
adc
xchg
ret
flds
pushf
add
inc
pop
xchg
mov
sbb
jmp
push
inc
xor
in
jns
add
push
daa
cs
es
js
fdiv
dec
push
jle
arpl
sub
hlt
mov
mov
ja
sbb
jmp
jb
add
xor
sahf
pop
jae
daa
inc
pop
stc
shrl
aaa
and
push
jbe
jecxz
jle
add
push
mov
mov
sub
or
jp
jl
jg
cmp
lcall
push
adc
push
imul
pusha
inc
add
push
push
movsb
push
notb
inc
orb
in
jb
cmp
jns
pop
mov
int3
pop
sbb
cli
repz
dec
lcall
pop
cs
ret
andb
push
pop
and
or
or
in
testl
repnz
dec
jle
addl
push
adc
xchg
ret
push
outsb
sub
stc
jns
data16
pop
or
xchg
addb
jno
and
bound
out
push
rclb
loopne
jnp
fs
adcb
int3
das
and
inc
inc
fisubl
jp
sbb
popa
aaa
add
fwait
cli
jae
jae
mov
cmp
cmp
push
push
xor
and
iret
cmpb
sub
xchg
add
pusha
test
sub
and
dec
xchg
clc
sub
ja
push
stos
xor
jae
and
andb
xor
jae
rclb
jge
rcrb
mov
and
adc
inc
jbe
data16
imul
jb
or
mov
out
inc
mov
adc
pop
outsb
bsf
xor
pop
sub
insb
scas
pop
adc
and
stos
mov
cmpb
inc
outsb
inc
pop
pop
es
pusha
testb
aas
push
mov
cld
xor
icebp
jle
inc
ljmp
es
je
insb
push
dec
push
lret
loopne
out
inc
xor
popf
mov
pop
test
rorl
and
hlt
std
shlb
rcrb
cmp
aaa
aaa
loopne
mov
bound
sti
sub
adc
popa
repnz
sub
pop
es
dec
aad
rol
xor
sbb
mov
xor
pop
cmpl
push
sbb
or
mov
leave
fstpl
repnz
xorb
and
repnz
add
lods
fstpt
jns
in
sbb
idivl
sbb
mov
decb
jae
inc
pusha
pop
fidivl
fucomp
cmpsb
dec
adcb
dec
push
xor
push
push
lret
mov
popf
jp
lret
cmp
sub
or
xchg
pop
or
ss
pop
sahf
adc
lahf
lret
insb
cmp
rorl
xchg
arpl
and
pop
test
push
inc
bound
test
sysenter
xor
cli
ljmp
sahf
jp
or
cmp
stos
mov
xchg
push
fldt
push
sbb
jle
add
mov
ret
jge
fisttpl
loop
adcb
mov
cmp
dec
xor
mov
jo
xchg
push
cli
inc
mov
sub
negl
and
mov
cmp
scas
outsb
inc
and
push
pop
jge
push
arpl
adcb
jno
shll
lods
mov
jmp
sub
xchg
push
inc
in
sub
je
ja
add
jge
inc
dec
movsl
push
insb
stos
pop
add
inc
jno
mov
add
push
andl
pop
and
ljmp
or
ds
ret
mov
shrb
jmp
add
sbb
lcall
imul
dec
loopne
faddl
pusha
mov
inc
adc
or
mov
lcall
gs
mov
mov
pop
mov
jle
ss
cs
movsl
aad
push
daa
mov
nop
mov
shlb
and
pop
push
inc
ss
sub
outsb
xor
fadds
push
xchg
bound
ficoms
jl
or
incb
lret
test
mov
addb
cmp
dec
wrmsr
sub
bound
mov
xor
jmp
ljmp
scas
mov
mov
and
sti
inc
lods
ret
jae
push
or
pop
fwait
inc
mov
xchg
jle
repnz
dec
jo
xchg
xchg
mov
add
ret
punpckldq
push
es
inc
cmp
push
jns
outsl
push
push
imul
imul
lock
testb
pop
in
pop
movsl
int
push
and
jp
push
rcrb
and
push
scas
dec
jns
out
and
dec
notb
lret
or
jp
nop
ja
xchg
push
inc
out
pop
popa
sbb
sahf
fiaddl
inc
dec
or
ds
jns
cmpsb
sbb
or
fdivp
jge
popf
jbe
and
inc
jg
adc
adc
dec
xchg
ja
ret
test
push
mov
repnz
push
mov
xor
push
pusha
sub
mov
lds
daa
mov
es
push
or
and
out
notb
xor
les
imul
pusha
in
jbe
mov
adc
mov
cmp
out
outsb
dec
push
stos
subb
addb
jns
mov
ja
sbb
jo
data16
and
ret
adc
adc
xor
mov
call
sub
out
and
mov
push
ss
mov
mov
xlat
xor
push
push
ucomiss
or
jo
adc
xchg
int
mov
jno
or
push
jns
push
xchg
dec
xchg
arpl
les
cs
jecxz
adc
andb
sahf
cmp
and
cltd
add
sbb
jns
sbb
mov
pop
inc
jg
testl
scas
push
test
sbb
jmp
sub
orb
adc
and
push
int3
pop
js
xchg
and
xchg
loop
push
pop
adc
repnz
dec
jae
or
testl
in
int3
adc
jnp,pt
mov
push
out
rcll
cmp
fdecstp
jecxz
mov
lret
imul
jecxz
adc
arpl
xchg
addps
shrb
aas
and
lds
jnp
cltd
mov
dec
lock
insb
fidivrs
adc
rcr
xchg
into
jbe
jns
stc
jp
ret
push
cmp
sub
pop
movsl
dec
push
adc
cmp
push
repnz
jnp
jbe
clc
inc
inc
lods
mov
xor
aam
pop
push
pop
jge
xchg
xchg
mov
and
jmp
imul
and
or
incb
add
ret
inc
daa
sub
dec
push
pop
into
jmp
outsb
bound
and
aas
inc
clc
outsb
testb
push
pop
cmp
mov
inc
pop
jmp
sbb
and
jmp
int3
mov
push
sub
insb
cld
ja
ret
adc
leave
mov
jbe
out
mov
and
xor
push
jno
fiadds
jle
nop
outsb
jne
cwtl
xchg
loope
imul
jge
aaa
fisubl
adc
jp
jle
pop
push
ret
sbb
and
push
leave
cmp
sbb
sub
inc
sub
sbb
std
les
loopne
orl
jae
addb
rcrl
fimull
jle
and
movb
cmovae
dec
in
cli
and
test
push
subb
nop
repnz
pop
stos
out
cmp
adc
add
in
xchg
imul
jle
mov
dec
mov
dec
sub
insb
xacquire
repz
popl
push
xchg
adc
jbe
repnz
aaa
cmp
inc
push
mov
scas
add
jns
int
jle
ja,pt
sub
push
lods
push
and
outsl
mov
mov
fnstenv
mov
lds
out
sub
dec
sub
pop
cmp
enter
fs
push
jno
out
and
imul
push
xor
cld
arpl
inc
lret
and
test
and
fiaddl
bound
mov
shll
lcall
jns
ja
outsl
mov
orb
std
adc
jp
scas
shl
jns
inc
mov
push
repnz
ja
rcrb
add
cmp
jnp
mov
xor
outsb
mov
daa
jp
movsl
lret
jecxz
gs
lds
imul
psadbw
sub
pusha
pop
jge
xor
add
in
daa
dec
or
pop
and
icebp
and
add
insb
push
cs
pushf
sahf
addl
push
or
ss
xchg
push
out
or
data16
add
inc
ret
sub
rclb
pop
push
das
lret
cwtl
and
cli
add
inc
fistl
mov
shrb
or
pop
cltd
scas
add
inc
iret
sbb
ror
and
xchg
fdivs
jb
pop
mov
aad
sbb
mov
xchg
mov
or
jge
pop
inc
int
and
cmpsl
cmpw
jle
dec
cmp
pusha
xchg
cmp
or
push
pop
popa
adcl
sahf
ret
clc
mov
cli
push
es
push
ficoml
pop
minps
scas
cmp
scas
mov
aaa
roll
xor
push
sbb
pop
inc
push
subl
push
dec
push
push
dec
xor
out
fidivrs
bound
and
pop
lcall
cmp
ds
or
movsl
push
jbe
and
rsqrtps
mov
sbb
push
cmpl
stc
cmp
cmp
jle
inc
ss
repnz
incb
push
jo
je
xchg
push
sub
ss
mov
dec
adcb
ret
sbb
mov
and
and
jo
or
lods
jae
ret
add
scas
xor
push
sub
jo
or
data16
loopne
sbb
mov
pop
lahf
loop
lods
or
add
stc
sbb
mov
ja
sbb
and
mov
pop
inc
insb
cmp
out
adcl
push
push
repnz
cmpb
mov
fcoms
sbb
fiadds
inc
cltd
and
or
push
test
out
add
cmp
das
daa
ret
mov
inc
jb
cmpsb
dec
dec
cli
rcrb
mov
out
sbb
pusha
jns
divl
shlb
mov
sbb
push
cs
shrb
and
pop
orb
cmp
scas
pushl
mov
out
inc
lea
cmpl
push
mov
cmpb
fbstp
add
pop
repnz
xor
xchg
cmp
sub
xchg
shrl
jmp
shlb
movsb
dec
stos
adc
jne
push
adc
mov
mov
jp
inc
add
push
pushf
pop
imul
add
adc
and
cmp
test
jp
mov
out
cmpb
imul
insb
or
inc
pushf
outsb
fs
add
inc
icebp
jge
jg
mov
bound
xorl
cmp
repnz
or
ret
cmpsb
repz
inc
outsl
cs
jge
push
sbb
std
stos
aad
jbe
cmp
adcb
fidivrl
jo
ja
cwtl
mov
das
adc
loope
jns
stos
bound
stc
sbb
or
scas
ret
pusha
out
inc
cmp
push
mov
mulb
test
jg
sbb
xchg
and
or
jmp
out
ds
dec
daa
xlat
jmp
jbe,pn
push
inc
jnp
sub
pop
ss
bound
out
lcall
jns
mov
adc
push
dec
xchg
or
sub
js
jbe
cwtl
imul
loopne
mov
sti
mov
std
hlt
inc
fimuls
lods
mov
daa
push
xor
aas
dec
pop
out
jge
ss
cli
pop
test
aad
add
mov
mov
add
jbe
add
bound
xor
pop
inc
mov
jle
mov
fiaddl
mov
mov
jmp
mov
cmp
mov
jae
push
rcrb
xchg
insb
orl
xchg
imul
push
mov
clc
inc
pcmpgtb
pop
push
cli
dec
sbb
xchg
sub
mov
dec
inc
ret
repz
jns
daa
testb
jle
scas
jno
and
das
lods
lret
and
jg
push
mov
pop
mov
jbe
cs
loop
jno
outsb
popf
and
add
jb
scas
out
std
push
aas
test
rcr
cli
adc
out
mov
jb
sub
adc
cmp
ds
popa
dec
cmp
or
mov
inc
adc
pop
or
push
insb
ds
jns
add
outsb
pop
outsb
ja
inc
jno
sub
sub
and
or
add
int3
lret
movsl
pop
or
mov
pop
rcl
out
mov
adc
lahf
xchg
adcl
mov
das
push
imull
inc
inc
jge
aaa
mov
push
cmp
adc
pop
sar
mov
outsb
inc
push
scas
lcall
ljmp
lret
xchg
add
push
jb
pop
bound
jbe
dec
shlb
rol
add
sbb
rcr
jle
inc
sti
imul
mov
dec
notl
and
push
lods
repnz
out
ljmp
sarb
mov
shl
jae
adc
inc
orl
or
pop
shl
mov
xor
shlb
xchg
scas
sar
jo
popa
push
jbe
jb
dec
jns
mov
push
or
mov
dec
jo
enter
aad
adc
in
lods
sub
and
cmp
dec
mov
sbbl
and
divb
loopne
add
ss
sbb
push
sahf
or
or
jae
push
testb
jle
xor
imul
gs
xchg
ds
insb
adc
inc
jne
pop
adc
cmp
bound
mov
aas
pop
xchg
cmpsb
mov
ljmp
inc
xor
aad
shlb
les
bound
jg
push
pop
sbb
push
cmp
mov
pop
loopne
lock
xchg
mov
inc
or
mov
add
rclb
dec
sbb
push
push
sbb
subb
mov
pop
xchg
dec
and
pop
push
cwtl
push
icebp
ss
imul
movsl
sarb
sub
sti
popa
xchg
mov
mov
nop
pushf
push
lods
out
push
push
or
iret
and
stos
pop
bound
je
mov
andb
outsl
push
push
aas
mov
icebp
jbe
or
and
pop
and
inc
test
adc
andb
sub
jg
fildll
into
popf
mov
cmp
inc
mov
push
add
xchg
cmp
shll
shlb
xchg
mov
push
cmp
or
mov
pop
sub
stos
leave
xorl
loope
pop
add
sub
bound
andl
loop
sbb
pop
test
in
mov
cmp
jg
aaa
inc
movsl
xchg
jnp
jb
shrb
into
sub
pop
xchg
xor
xor
xchg
mov
imul
add
add
add
jbe
jo
adc
fidivs
cmpb
jae
fnstcw
xlat
out
in
ret
sahf
adc
or
cmp
sub
xchg
inc
or
std
das
or
pop
cmc
mov
xchg
or
ret
pop
or
stos
and
fyl2x
sub
mov
data16
inc
faddl
sub
xor
adc
fmuls
pop
or
mov
pop
inc
pusha
push
add
shlb
jp
xchg
test
ljmp
sahf
mov
orb
sahf
mov
inc
pop
lahf
hlt
arpl
outsb
scas
and
insl
jno
mov
xchg
ja
test
push
sub
sub
or
es
push
cmp
mov
push
inc
gs
ja
arpl
dec
fidivrs
inc
jge
adc
into
dec
adc
xor
stos
roll
dec
xchg
inc
ljmp
sub
in
lcall
ds
in
xchg
std
and
dec
and
scas
push
sub
lods
fisubrs
sbb
mov
xchg
orl
and
inc
ret
push
in
jo
push
pop
mov
mov
or
mov
imul
js
push
ret
pop
xchg
push
test
inc
es
adc
inc
mov
in
mov
cmp
xorb
sub
sub
dec
pusha
lcall
jo
cwtl
repnz
jns
ret
mov
push
pop
mov
inc
xor
das
sahf
pop
loope
stos
add
jp
jge
mov
pop
jmp
cs
xor
outsl
into
add
or
cmp
dec
aaa
jae
dec
sub
pop
ss
pop
xchg
mov
push
ret
sbb
jns
add
xchg
hlt
fmull
in
and
into
daa
xor
outsb
loope
push
push
xor
es
push
fs
sub
jno
fidivl
pushf
sbb
test
insb
test
jns
xchg
inc
sbb
lds
ljmp
cmp
bound
daa
pop
mov
loop
sahf
or
mov
cltd
jbe
xchg
sbb
fs
and
dec
ljmp
aaa
fisubrl
cwtl
xchg
and
and
jmp
int
repnz
pushf
or
enter
es
jp
fistl
and
scas
andb
in
pusha
jecxz
lcall
jnp
adc
jnp
rcl
bound
pop
cmp
popa
bound
or
pusha
inc
scas
xchg
xor
stos
repz
clc
pop
inc
jg
add
inc
stos
push
orb
emms
insb
or
dec
icebp
fisubrl
stos
push
sbb
repnz
cmp
jb
cmp
xchg
dec
data16
sub
dec
xchg
pop
leave
jb
out
cwtl
bound
sbb
sbb
lcall
data16
add
dec
nop
rcll
jp
cli
jns
jb
sub
aaa
mov
das
inc
and
mov
sbb
insl
inc
incb
pop
push
push
shl
mov
std
xor
inc
out
movl
pop
mov
jo
pop
daa
pop
cld
dec
and
stc
jp
sbb
xchg
cmp
adc
mov
ja
push
testl
jo
xor
adc
xlat
outsl
mov
sbbl
pop
aad
mov
rcr
js
shll
xor
sbbl
decb
pop
fdivs
nop
push
sub
repnz
xchg
orb
ret
jns
add
fiaddl
adc
ret
cmp
jge
in
test
mov
mov
pusha
subl
inc
push
mov
xchg
mov
sbb
popa
outsl
out
pop
adc
fwait
cmp
jmp
ja
loop
xor
jnp
xchg
jns
add
mov
mov
jp
push
jae
pop
mov
lock
outsb
push
movsb
and
push
push
push
jp
and
inc
and
rorb
lret
in
daa
rcrb
cli
cmp
push
ret
push
or
dec
lods
pop
insl
mov
cmp
arpl
and
jp
lret
inc
test
xchg
and
mov
jae
fcompl
pop
cli
arpl
insl
loopne
xchg
ja
hlt
ds
and
cli
adc
cli
int
xchg
inc
xlat
leave
enter
jg
repnz
add
lods
sbb
mov
in
mov
das
pop
inc
cs
jl
push
fidivrl
sbb
je
cmp
dec
jge
and
inc
add
outsb
push
outsb
in
fwait
pop
pop
pusha
popf
xchg
sbb
sarl
add
ss
mov
or
inc
shlb
outsb
lahf
xchg
lds
pop
andl
mov
push
xchg
lea
cmp
adc
xor
add
sub
mov
shrl
adc
add
movsl
bound
cmpsl
jge
xor
fisubrl
int
or
fs
inc
popl
xorl
jbe
pop
iret
ss
pop
push
dec
lahf
ds
inc
out
push
and
arpl
inc
lods
lret
dec
in
test
xor
push
rorb
xchg
enter
mov
xor
mov
dec
rorb
sub
push
adc
jb
pop
ljmp
add
sbb
and
dec
jp
sub
lcall
mov
jnp
pop
cwtl
and
out
pop
mov
lret
sbb
jnp
xchg
movb
out
or
push
shl
inc
mov
sub
xchg
xchg
subl
push
xlat
loopne
stc
inc
test
sub
lahf
cltd
outsl
popw
ficoml
stc
push
call
scas
inc
ja
insb
xor
and
shrl
pusha
bound
repz
mov
js
incb
mov
push
jg
xchg
jbe
dec
cmpb
push
sbb
jmp
cmp
jg
jecxz
repnz
mov
movsl
and
ds
fldcw
xchg
hlt
insb
cwtl
push
cmpsb
inc
aaa
sbb
ljmp
and
and
cmp
xchg
nopl
lcall
pop
jg
imul
xor
adc
cmpsb
jb
stos
jp
push
jnp
cmpsl
dec
push
imul
cs
jnp
mov
test
mov
fidivl
pop
jge
dec
push
lahf
fs
mov
insb
or
push
cwtl
jbe
mov
jo
jmp
outsl
dec
push
sbb
and
ja
mov
gs
push
xor
in
adc
daa
or
xor
jle
cmp
fiadds
fdivrs
shll
mov
loop
ret
mov
jbe
cs
mov
aad
in
push
jne
jb
jnp
ja
stc
sub
dec
out
jns
nop
and
mov
sbbb
jno
push
jg
or
or
fstpt
mov
orb
and
and
mov
xchg
repnz
mov
pop
stc
rorb
or
jle
jae
lret
xor
xchg
mov
jl
sbb
mov
pop
lcall
lret
test
push
sub
jnp
cltd
lret
movsl
jns
push
popf
mov
fs
fcomps
push
dec
adcl
xor
insb
into
mov
mov
push
inc
into
adcl
and
outsb
push
scas
pop
addr16
pusha
ds
int3
adc
jmp
fcmovu
insb
pop
jns
aas
pop
adc
push
outsb
jge
push
les
jns
fcmovb
xor
js
in
push
leave
jno
dec
sbb
xchg
lea
or
inc
stos
imul
aam
in
pop
push
inc
push
rcl
jae
lods
arpl
lds
jnp
aas
cmc
and
dec
cmp
outsb
xchg
ds
cmp
pop
push
jno
push
std
lock
push
ds
ss
ss
adc
mov
jo
sub
ret
pop
inc
aaa
push
aas
icebp
shrl
pop
mov
arpl
mov
add
add
ret
adc
pop
push
mov
pop
cmp
pop
cmp
sahf
adc
jge
push
sub
or
bound
adc
sub
and
mov
ds
insl
gs
adc
xchg
es
dec
xchg
adc
mov
pop
dec
cmp
and
add
sahf
cmp
testb
push
mov
cli
inc
das
xchg
push
dec
sub
mov
pop
repnz
mov
mov
mov
jg
and
and
dec
mov
jp
dec
dec
cmp
pusha
xchg
orb
mov
jg
into
inc
insb
hlt
cltd
and
xor
es
sbb
mov
push
add
ds
xchg
stc
sahf
xchg
adc
xchg
jmp
sarb
idivb
xor
int3
into
subb
push
mov
cmp
outsl
dec
xchg
or
daa
push
and
test
xchg
xchg
sbb
push
cmovb
bound
insb
test
rolb
and
inc
add
xor
cli
js
pop
jp
jo
aaa
roll
repz
out
push
mov
fistpll
adc
xchg
inc
aad
orb
in
push
rol
lret
shrl
scas
jle
adc
outsl
in
aaa
xchg
cmpsb
subb
xchg
pusha
pop
jge
mov
das
ja
stos
dec
sub
decl
test
popf
fidivl
pusha
jne
pop
mov
daa
das
imul
xchg
mov
aad
xor
and
movsl
or
jo
pop
mov
inc
loop
je
sahf
jb
cmp
push
movsl
adc
push
jnp
es
lahf
inc
ss
or
aam
lcall
daa
mov
mov
inc
out
icebp
xchg
xchg
mov
into
push
pop
dec
sub
repnz
popa
inc
int
subl
add
outsl
pusha
pop
pop
jg
jno
leave
imul
inc
push
add
xrelease
cmp
add
xchg
mov
and
or
jae
adc
adcb
stos
outsb
inc
testb
or
push
fsubs
sahf
inc
dec
dec
and
jo
test
mov
dec
or
and
push
ds
and
sub
add
aam
out
or
ret
add
pop
lds
jg
mov
outsl
inc
and
inc
out
lcall
add
and
ret
fwait
jp
fcompl
adc
mov
int
scas
bound
jne
xchg
loopne
jnp
ds
lea
loopne
jge
aam
push
mov
mov
or
mov
rolb
lret
mov
rcll
pop
mov
mov
outsb
pop
inc
ret
pop
orl
fnsave
fcoms
adc
adc
sbb
arpl
jo
or
sbb
sbb
dec
cli
rcpps
or
mov
pop
push
mov
push
lret
sbbl
push
popf
mov
jb
sbb
xchg
adc
push
xor
bndldx
pop
call
adc
jp
out
adc
outsb
jge
aad
xorl
push
data16
jae
js
sub
push
xor
pop
out
jle
xor
xchg
push
add
push
out
mov
fisubl
sub
int
shr
sub
jns
xor
inc
pop
cs
inc
cli
rclb
mov
xchg
mov
incb
inc
and
push
imul
push
in
inc
xor
mov
jnp
cmp
inc
xor
jnp
push
mov
cmp
test
ret
xchg
fisttpl
lods
and
adc
jbe
adc
out
push
and
pop
jmp
inc
cli
mov
es
fwait
rol
mov
pusha
inc
mov
popf
repz
cld
gs
push
and
sbb
rclb
jae
lret
shr
and
push
push
out
mov
fs
push
adc
push
xor
push
sub
sub
cmpsl
push
repz
imul
rcl
jb
cmp
dec
cmp
xchg
mov
mov
or
daa
pop
subl
xchg
lds
cli
and
jo
loope
fistpll
sub
rcrb
negb
sti
imul
scas
inc
xchg
xchg
ret
pop
test
ja
jge
dec
gs
xchg
xor
push
lret
ss
rcrb
jno
or
shrb
fmulp
sub
pusha
mov
inc
sarb
or
lret
mov
adc
ljmp
mov
jb
ljmp
jo
sub
loopne
sbbb
bound
inc
aas
sub
adc
push
mov
jle
push
inc
inc
adc
nop
xor
sub
daa
loop
or
push
mov
jmp
pop
popa
nop
mov
sbb
mov
dec
jle
fistps
or
jg
test
sub
dec
sbb
or
mov
int
jae,pn
inc
lcall
fsts
push
xchg
repnz
sbbl
push
cwtl
bound
jle
pop
xor
mov
inc
lock
dec
or
mov
js
bound
sub
and
xor
and
pop
bound
pop
mov
mov
adcl
mov
mov
sbb
mov
push
adc
xchg
fisttpll
push
and
and
and
pop
test
inc
adc
inc
rol
std
pop
xor
insl
les
adc
lcall
inc
sub
push
and
mov
mov
ljmp
enter
sbb
lods
gs
dec
push
jg
push
cmp
and
push
adcl
adc
call
bound
ficoms
and
outsl
shl
add
adc
and
push
sub
movsl
fcoms
dec
and
inc
inc
arpl
and
test
pop
jb
lods
jo
fimuls
dec
mov
dec
lcall
pop
and
jb
movsl
jmp
icebp
add
adc
imul
test
mov
push
mov
data16
inc
and
aad
pop
dec
pusha
shl
sbbb
and
orb
shlb
icebp
jnp
sub
lds
xor
outsl
mov
sub
rcpps
xchg
out
inc
fwait
pop
push
shlb
jle
je
ret
dec
xor
or
xor
jge
pop
push
sub
push
addb
pushf
cmp
cmpsb
rcll
push
out
and
bound
pop
out
movb
cmp
add
aaa
outsb
loopne
and
mov
or
ret
or
popa
mov
inc
xor
mov
mov
arpl
push
and
sbb
adc
das
ja
mov
push
or
mov
xor
sarl
lods
xlat
loopne
xor
aam
mov
lock
push
jb
jns
cld
bound
in
xchg
ss
ret
or
inc
out
nop
pusha
int
andb
mov
js
sub
in
push
jp
inc
jmp
andb
ss
orl
and
mov
mov
outsb
add
mul
xchg
and
es
test
sbb
mov
dec
push
lahf
jl
sbb
imul
push
fcomip
orl
cmpsl
dec
xchg
jp
insb
fwait
lahf
pop
or
or
mov
addb
inc
ret
data16
test
outsl
lret
cwtl
dec
test
insl
pop
incb
add
and
in
fwait
lret
cmp
xor
cld
ficoml
mov
sub
sub
lds
add
ljmp
rdmsr
inc
repz
dec
ret
ja
sbb
mov
dec
sbb
and
cs
lret
sub
inc
jns
aam
std
and
mov
sbb
rclb
adc
test
push
aaa
pop
mov
pop
inc
inc
jp
jb
pushf
test
pop
push
and
aad
dec
imul
pop
jb
out
or
adcb
and
aam
inc
push
call
cmp
cwtl
push
push
xchg
adc
add
daa
call
dec
jb
mov
push
and
cmc
inc
or
push
sub
shlb
ds
xor
adc
ljmp
cmp
add
and
mov
data16
data16
loop
pop
cmpsl
aas
adc
ret
add
mov
jmp
sbbb
test
shrl
sub
outsl
bound
cs
into
icebp
jge
fistl
add
xor
mov
imul
ss
dec
mov
faddp
ds
jle
xchg
cmpsl
xor
les
jl
gs
rcll
sbb
adc
add
push
popa
ds
mulb
sbb
dec
or
pop
xlat
leave
cmpb
adc
repnz
jmp
clc
xlat
and
sub
loope
out
jb
or
imul
pop
bound
or
sbb
ljmp
fildl
repnz
mov
cmp
ja
sub
clc
jae
add
cmpsb
and
sbbb
outsb
pop
or
pusha
sub
das
pop
loopne
mov
or
sub
and
sbb
rcll
push
pop
jmp
xor
mov
or
and
dec
inc
int
push
pop
sub
push
jbe
test
inc
jbe
adc
rcll
inc
and
mov
adc
pop
adc
sahf
mov
push
pushf
pop
push
insl
movsb
xchg
dec
xchg
inc
jge
jo
sbb
imull
sub
inc
xor
jp
ret
pcmpeqd
rcl
cmp
cmpsl
imul
rorw
or
sub
mull
mov
mov
jbe
or
pop
xchg
pop
mov
and
subb
cld
ficompl
andb
sbb
sub
push
adcb
push
mov
ret
sbb
push
adc
push
jp
into
inc
inc
mov
push
inc
movb
pop
dec
or
shlb
movsb
sbb
jae
push
adc
xchg
hlt
pop
xchg
ds
and
cmp
pop
scas
xor
into
dec
outsb
aaa
fs
mov
pop
lods
lcall
pop
es
mov
inc
test
fmull
jns
sbb
movsl
popf
or
jne
cwtd
jle
or
pop
sub
faddl
out
out
outsl
inc
xor
in
sahf
and
bound
je
pop
adc
rclb
sub
popf
pop
push
dec
lods
out
mov
fcmovbe
jnp
pop
shlb
test
repz
mov
mov
inc
and
hlt
mov
push
dec
orb
pop
jo
pop
push
jb
aas
inc
jns
or
arpl
inc
xchg
bnd
scas
aam
lret
xchg
pop
mov
inc
sahf
and
mov
aas
inc
loopne
mov
xor
ss
ljmp
jmp
jb
xor
stos
bound
xchg
insb
fstpl
jns
inc
sbb
push
push
arpl
ja
push
and
lret
adc
and
jbe
bound
jge
imul
mov
pop
or
sahf
xchg
cli
dec
pop
subl
lods
push
adc
pop
ret
push
mov
ss
ja
mov
ret
rcrb
inc
fisubrl
notl
outsb
cmp
jp
mov
sti
out
ret
sbb
mov
ds
and
push
pop
les
fistps
aam
xor
cmpb
pop
xchg
mov
mov
jp
bound
jle
and
ljmp
pop
clc
cmp
sahf
js
and
dec
ficoml
and
adc
or
mov
and
jns
xor
or
mov
insb
xor
push
imul
mov
and
push
popa
or
jne
xor
push
or
mov
imul
in
out
pop
add
push
psubb
lahf
cmp
shl
lret
adc
outsl
divps
inc
ret
jle
pop
cmp
shr
test
lods
dec
add
es
dec
adc
adc
mov
aaa
push
shll
mov
ror
inc
mov
cli
adc
jae
sbb
fmuls
inc
add
lret
fnstcw
jle
and
es
dec
or
out
loope
sub
push
into
sbb
jp
mov
cs
push
dec
mov
sbbl
imul
orb
cmovle
lods
mull
or
int
mov
and
add
sbb
sub
cmp
pusha
loop
push
cmp
bound
push
cli
or
sbb
push
imul
and
sahf
in
gs
xor
push
jg
ret
daa
sub
sahf
jno
push
mov
push
mov
jp
inc
dec
xchg
add
testl
das
and
jp
jmp
dec
outsb
add
pop
cmp
ljmp
ljmp
cmp
aam
pop
fs
xchg
xor
aam
or
sti
outsb
or
mov
inc
jp
and
push
fwait
push
or
stc
and
adc
or
into
loope
add
in
and
cld
stos
and
sub
xor
adc
in
xchg
insl
pushf
cmc
jg
and
inc
pop
push
adcb
pop
inc
xor
pavgw
mov
jno
jns
jp
rclb
cmp
mov
out
pop
aaa
push
sub
bound
xor
xor
sbb
jb
loop
ds
inc
gs
idivl
push
clc
ficomps
cmp
cltd
das
popa
test
jo
outsb
jbe
shlw
adc
ret
xchg
inc
inc
inc
mov
fisubrl
sub
push
mov
icebp
outsl
mov
repnz
jecxz
inc
or
or
scas
pop
ds
stc
and
cmp
add
pop
in
sti
sub
mov
dec
xchg
pop
jle
fildll
xor
xor
jnp
pop
pusha
jns
mov
test
adc
or
in
mov
cmp
dec
mov
shlb
xlat
imul
inc
ds
push
cmp
mov
das
test
jb
inc
or
xor
mov
sahf
rcrl
shlb
inc
bound
mov
ret
pop
ret
push
adc
pop
xor
lea
cmp
cmp
xchg
push
popa
xor
inc
ds
sub
or
jbe
mov
imul
or
sbb
xchg
stc
adc
xorb
repnz
test
cli
cmpl
mov
mov
xor
jns
push
mov
scas
or
repnz
insb
dec
lods
mov
lcall
jno
mov
subb
ljmp
mov
fcmovb
jle
movsw
jmp
push
inc
push
fiadds
js
mov
push
add
stos
sub
ljmp
or
dec
fcomps
cmpl
cwtl
push
fstps
cmp
push
jge
xor
mov
xor
repnz
fisubrs
movb
mov
xor
ret
adc
test
adc
cmp
jl
mov
test
hlt
shl
or
and
nop
pop
orl
arpl
fstpt
pop
xorb
and
icebp
daa
shlb
cs
stc
test
jg
je
mov
shrb
mov
inc
mov
jle
sbb
or
jp
fidivs
pop
pusha
xor
fiaddl
xchg
jb
xor
pop
lock
fstl
pop
ljmp
faddl
mov
inc
fs
shr
into
mov
push
push
push
cli
filds
jae
or
inc
cli
ljmp
xchg
jno
das
and
aas
mov
sar
pop
std
lcall
push
into
push
push
cmp
test
inc
jns
pop
mov
jle
lret
sbb
dec
xchg
loop
outsb
dec
ret
pminsw
sub
sub
fcmovnb
ja
xchg
hlt
ja
mov
jbe
imul
jo
push
xchg
arpl
pusha
push
pop
pop
and
pop
repnz
fmulp
xor
jmp
push
sbb
push
mov
jecxz
stos
xchg
jl
cli
pop
push
andb
in
and
mov
mov
mov
xchg
cmp
cltd
or
jle
fnstcw
pop
or
pop
ror
add
mov
es
mov
sub
mov
in
inc
cmc
bound
ret
dec
pop
std
outsl
cmp
mov
insb
loope
push
pop
inc
loopne
test
inc
sbb
xchg
push
mov
outsb
jo
xchg
dec
xor
cs
pop
dec
sub
mov
and
ret
mov
jb
jo
xchg
jle
pop
xorl
add
xchg
cmp
mov
jo
and
push
adc
mov
cmpb
dec
ss
lock
push
inc
mov
xor
out
mulb
in
in
jns
stos
stos
out
repnz
loop
mov
jp
inc
push
mov
and
fdivs
js
inc
jle
jg
cli
inc
xor
jbe
inc
mov
xchg
hlt
jbe
dec
ret
scas
and
mov
notl
xorb
popa
out
sub
mov
hlt
sahf
push
xor
in
minps
insb
mov
fidivrl
jl
mov
xchg
push
or
sbb
movsb
pop
lret
gs
cli
das
push
push
ret
loopne
pop
pop
mov
arpl
stc
cmp
repnz
sahf
hlt
sbb
or
dec
cmpsb
sub
xor
push
lret
sub
ret
cmp
notl
pop
js
push
repnz
les
sahf
add
out
outsl
lret
pop
outsb
lods
cmp
add
shll
ja
scas
ror
pop
hlt
mov
push
jg
pop
jno
bound
mov
fidivl
inc
push
adcl
popf
add
dec
pop
es
adc
push
mov
dec
and
enter
sbb
dec
pop
inc
jbe
enter
inc
xchg
add
out
leave
cmp
xchg
pop
add
push
xor
inc
xlat
out
test
inc
insb
xor
xor
and
mov
mov
out
inc
sub
mov
xorl
mov
pop
mov
jns
cmc
arpl
push
jns
loopne
jae
cmp
ficompl
push
das
outsl
es
push
icebp
es
and
mov
repnz
pop
cs
inc
fcmove
and
dec
adc
push
pop
jb
add
ja
popf
xor
add
mov
fstpt
pop
cmp
pop
mov
dec
mov
out
adcb
fs
in
or
int3
mov
inc
xchg
push
dec
dec
lahf
scas
fs
ja
dec
sub
jns
xchg
sbb
mov
pop
and
mov
xchg
dec
lret
cs
in
lret
sbb
jle
mov
and
xchg
push
mul
out
loop
push
mov
dec
add
inc
add
fidivl
mov
jo
daa
insb
faddp
push
subl
fsts
imul
pop
push
dec
jno
adcl
jge
in
push
and
add
jb
cmp
dec
fisubs
push
clc
mov
fdiv
orb
jns
ds
pop
aaa
inc
inc
and
pop
xor
pop
push
scas
jp
mov
xchg
lds
mov
je
jecxz
je
xor
imul
pop
pop
vcvtsi2sdl
xchg
mov
adc
inc
adc
outsb
xor
cmp
inc
jle
inc
notl
stc
subl
push
sar
mov
cmp
lcall
mov
js
and
jp
adc
cmp
scas
es
pop
fs
xor
mov
ds
xor
push
xlat
nop
lret
and
bound
imul
lods
and
fidivrs
inc
addr16
and
addb
ffree
push
pop
and
push
sub
ret
push
mov
xchg
or
cmp
inc
sub
bnd
jl
xchg
loop
in
push
add
insb
jo
mov
dec
mov
pop
fmuls
in
and
bound
mov
push
mov
lods
icebp
out
sbb
add
sub
sub
xchg
imul
repnz
stos
jg
add
mov
out
xchg
pop
es
div
jp
fs
mov
push
lcall
jg
mov
orl
xchg
fsts
not
in
sahf
ds
in
stos
sub
lret
and
and
add
mov
inc
cmp
mov
addb
in
rcrb
ret
xchg
xchg
in
sahf
into
xor
stos
sarb
mov
jle
cwtl
pushf
jge
ljmp
inc
sbb
adc
xchg
sub
int3
inc
cmp
push
dec
push
or
cmp
negl
ret
inc
das
and
imul
add
imul
cs
or
je
sti
lret
scas
fidivrl
ja
popa
call
repnz
xor
cs
fidivs
scas
insb
neg
sbb
cltd
push
imul
cmp
and
ret
dec
loop
repnz
out
adc
shll
mov
and
dec
cmp
insb
adc
bound
insb
jp
push
adc
mov
test
mov
bound
mov
lds
and
jne
jno
jp
jp
cmpsb
es
jns
or
cmpsb
push
mov
mov
mov
xchg
cmp
xor
cmc
es
fcom
imul
cmp
cli
out
or
ljmp
test
cmpsb
outsl
ljmp
sub
nop
loopne
cmpsb
and
mov
cmpl
insl
mov
add
or
add
push
add
inc
ds
in
hlt
xchg
push
mov
inc
cli
pop
clc
ja
sub
or
adc
dec
cmp
insb
das
sub
ret
sbb
xchg
xchg
nop
push
es
imul
adc
bnd
mov
pop
mov
jbe
jge
xchg
lahf
sbb
xchg
repnz
mov
cli
in
pop
outsb
rcl
es
inc
mov
fs
pop
push
mov
lahf
jne
pop
mov
inc
lcall
push
push
repnz
jl
dec
sub
push
jns
or
aas
jle
pop
add
rol
mov
in
jle
sub
xlat
loopne
mov
inc
aaa
dec
xchg
clc
outsl
push
pop
aam
dec
jbe
jp
ret
jg
mov
sub
ret
adc
fs
das
inc
popf
mov
outsl
jg
cmp
in
push
bnd
stos
inc
jo
sbb
insb
pop
ljmp
or
jno
subl
pop
mov
sbb
repnz
mov
xor
jg
add
mov
test
cwtl
push
push
pop
lret
dec
push
cmp
jne
and
pop
mov
dec
popf
pop
jb
mov
xchg
or
mov
int
add
mov
fdivrl
inc
stos
mov
jnp
rorb
js
or
add
ds
mov
insb
stc
sbb
dec
or
jp
rclb
jge
repnz
inc
sbb
sub
rcrb
dec
fbstp
push
imul
pop
and
repnz
das
outsb
lods
or
loop
adcb
lea
add
js
outsb
movsl
adc
adc
cmp
lds
loop
iret
cmp
push
stos
jnp
pop
push
leave
mov
sub
add
sbb
inc
inc
rolb
pop
xor
daa
mov
inc
add
xchg
xor
xchg
mov
add
mov
aas
bound
mov
or
iret
dec
imul
mov
mov
cli
stc
dec
xorb
pop
bound
das
push
dec
pushf
jmp
and
jns
and
out
cmpl
cmp
aam
dec
push
jo
push
testw
xchg
adc
mov
lret
inc
dec
xor
ljmp
movb
ss
jnp
imul
sahf
pop
es
push
cmpl
mov
jp
insb
mov
push
icebp
sbbl
xor
push
pop
push
fisttps
iret
xor
xchg
push
xchg
and
addr16
push
fisubrl
mov
scas
and
rcrb
lret
dec
adc
jmp
stos
add
inc
mov
push
inc
push
ds
je
ficoml
inc
inc
test
adc
add
aaa
or
mov
adcb
js
push
fcmovne
sbb
scas
inc
orl
xorl
jb
cmpsb
bound
imul
inc
add
pop
in
mov
mov
jb
leave
mov
inc
inc
mov
mov
push
imul
push
cmp
push
js
mov
scas
dec
aam
adc
push
lcall
stos
add
add
sbb
in
cmpsb
stos
pop
xor
outsl
jle
lds
add
arpl
and
push
in
and
xchg
call
jmp
fiaddl
lods
jns
push
dec
mov
push
mov
wrmsr
jae
std
inc
mov
pushf
std
popf
or
mov
push
imul
pushw
pop
inc
jmp
ret
jo
mov
ret
imul
js
imul
push
orb
xchg
adc
rol
cli
xor
ss
adc
flds
bound
test
fdivp
push
dec
pop
in
jno
repz
imulb
imul
inc
lret
inc
insb
imul
cmp
sub
mov
cmp
xchg
add
das
push
dec
add
movsb
dec
lahf
push
out
mov
les
sarb
shlb
xor
rol
adcb
xor
inc
mov
push
aad
cmp
inc
ret
jl
push
add
pop
xchg
mov
and
xchg
rcrb
jmp
loope
fisubrs
mov
or
jl
lods
adc
and
xor
jbe
jb
imul
aam
push
jg
daa
inc
ret
subl
idivb
or
jb
jbe
jle
movlps
push
cli
into
sarb
mov
push
mov
pop
push
rcrb
repnz
pop
push
hlt
push
repnz
push
jb
pop
gs
jo
mov
mov
mov
mulb
cmpsb
imul
lret
mov
jbe
or
cmp
jae
cmp
jge
jnp
lret
xchg
and
mov
lods
fiaddl
ss
idivl
inc
scas
push
dec
inc
inc
mov
cltd
and
into
push
aaa
imul
rcl
loop
fldz
pop
dec
pop
gs
and
mov
pop
je
shl
or
dec
shl
test
mov
cmp
fs
cmc
dec
inc
xlat
out
aad
fwait
sub
push
pop
push
movsl
shrb
mov
outsl
lcall
aaa
sbb
sbb
das
loop
scas
jl
pop
aas
fidivrl
push
jl
stos
mov
cmp
inc
fidivs
and
sbbw
or
push
js
out
out
inc
std
pop
lea
sub
aas
adcb
push
out
jle
out
out
add
or
cwtl
mov
push
jae
xchg
xchg
add
iret
xor
push
add
xchg
pop
mov
pop
in
inc
ror
xor
or
in
lods
stos
cmp
repz
incl
push
add
ret
pop
fidivl
addr16
jno
sub
jge
push
data16
stos
pop
xchg
cmp
inc
mov
fidivrl
std
ret
dec
shll
dec
and
mov
icebp
ss
das
std
or
in
sub
inc
mov
inc
jb
sti
notb
es
or
adc
repnz
ret
pop
add
jno
jp
push
in
or
out
scas
mov
mov
xorl
filds
or
pop
inc
push
or
xor
and
imul
sub
xor
inc
push
rcll
das
int
push
sub
repnz
ljmp
lahf
jmp
xor
or
adc
test
sub
pushf
rcr
into
xor
enter
mov
pushl
insb
pusha
push
fs
out
push
out
push
and
pushf
stos
jo
push
ljmp
pop
push
xor
add
loop
clc
jns
inc
rorb
enter
sbb
sahf
adc
sub
faddp
mov
je
push
mov
imul
push
stc
femms
sub
xchg
sub
fistpll
jle
cmpsb
adcl
jecxz
mov
pop
dec
sub
out
jno
mov
mov
jecxz
sub
pop
cmc
inc
int
and
jo
in
adc
ds
add
pop
jno
add
push
sahf
mov
mov
cmp
andl
icebp
ret
loope
addl
jnp
call
test
inc
push
enter
psrlq
cmp
inc
sbb
xchg
cli
mov
data16
jae
lcall
daa
cmp
lahf
ud2
dec
in
xchg
daa
xchg
push
pop
cmp
push
jns
sub
aas
test
icebp
push
and
xchg
in
fwait
jnp
outsb
xor
sbbl
and
arpl
mov
push
push
cmp
insb
pusha
sti
sahf
xchg
xlat
or
dec
ret
test
push
aad
inc
xchg
outsl
lds
mov
mov
cmp
je
inc
popa
lret
cmp
fdivl
add
sbb
jns
mov
imul
xor
push
cli
outsl
xchg
jns
ficoms
lea
aas
movsb
mov
inc
inc
mov
inc
decb
addb
jnp
push
addr16
pop
ds
mov
inc
pop
fsub
lret
outsb
jno
sbb
insl
xchg
loopne
cli
or
or
push
xchg
and
inc
ds
mov
pop
dec
enter
pop
sub
repnz
mov
jne
cld
sub
test
jb
mov
jnp
adc
push
add
ret
and
push
and
and
into
in
cld
aas
and
lahf
mov
dec
ret
inc
into
cli
push
cmp
push
jns
es
inc
cmpsl
scas
lock
adc
and
out
sub
ret
orl
fdivp
lret
nop
lods
mov
mov
ret
xchg
jnp
push
fs
movsl
jns
xchg
cs
push
arpl
bound
sub
sub
push
mov
lods
nop
imul
dec
movb
push
push
adc
pop
pop
xchg
inc
movsl
xchg
pop
jns
fwait
ds
jns
or
or
mov
mov
mov
jo
repnz
xchg
jns
shrl
mov
data16
pop
push
jecxz
mov
cmp
pop
lods
jo
insl
pop
xlat
out
jg
inc
and
inc
mov
jp
outsb
push
jle
dec
xor
mov
add
and
xchg
dec
fs
sub
testl
xor
xchg
lcall
icebp
mov
adc
cli
mov
cmp
mov
cmp
push
into
xchg
icebp
ffreep
sbb
sub
dec
jmp
pop
sub
dec
pop
lret
mov
mov
lcall
mov
and
inc
inc
and
push
cs
cmp
js
dec
and
inc
adc
daa
fs
mov
sbb
shlb
inc
lret
push
mov
jg
push
or
adc
int
or
xor
and
mov
add
std
arpl
jge
inc
je
pop
add
lret
mov
jg
test
sbb
sub
mov
cmp
xchg
insl
add
orl
pop
aad
loop
pushf
inc
sbb
lods
sub
jge
dec
push
insb
sbb
cmp
rol
data16
mov
push
mov
and
movsl
in
out
pop
push
sub
outsb
ficoms
aas
into
sub
iret
in
cmp
inc
pusha
dec
add
inc
mov
cs
and
rcr
add
cmp
xchg
ljmp
in
in
lods
into
sub
in
lods
xacquire
fldl
jne
mov
icebp
es
jecxz
js
or
jle
mov
lcall
add
xchg
push
pop
es
jp
mov
jmp
jb
add
ret
add
adc
popf
bound
aaa
xor
aam
mov
jp
cmp
insb
mov
mov
mov
mov
insb
dec
jp
into
add
push
popf
sbb
rol
sarb
mov
jbe
dec
or
mov
mov
xor
cltd
bound
outsb
inc
jecxz
pop
jne
mov
fcomip
sbb
xchg
call
xlat
push
sub
cmpsb
imul
cs
imul
inc
sub
cltd
enter
pusha
dec
mov
in
insl
jns
sub
cli
jb
xor
pop
pusha
xor
push
or
dec
xor
lods
js
and
cli
scas
add
daa
ret
lods
ret
adc
cmp
jb
mov
and
popa
stc
repnz
cmpsb
shll
sub
shll
dec
sub
sahf
mov
jns
xor
adc
or
add
mov
jg
out
fcoms
inc
push
clc
jo
cmp
xchg
sbb
inc
andl
ja
dec
push
rcr
sbb
fsubp
pop
cmp
outsl
psrad
jge
into
lods
adc
scas
mov
lock
jb
sub
jg
push
pusha
dec
mov
stos
push
xchg
repnz
inc
aam
xor
bound
es
adc
ds
jb
daa
push
pop
sbb
xchg
adc
dec
cmp
aas
add
mov
jno
sub
add
pop
push
cmp
mov
or
shrl
xchg
loopne
push
in
fisubl
jne
push
daa
addb
adc
aaa
sbb
dec
aad
stos
and
outsb
add
loop
mov
inc
push
xor
lss
dec
jge
mov
add
imul
das
addr16
mov
or
in
mov
push
or
lea
stos
push
jle
or
pusha
add
push
pop
mov
fdivrp
pusha
or
sub
mov
jmp
loop
push
jle
mov
dec
sub
sbb
mov
movsb
stos
xor
fs
pusha
cmp
inc
arpl
movsb
mov
test
dec
cmp
push
or
xchg
xchg
jge
inc
dec
mov
push
ret
push
push
js
pop
imul
adc
jmp
fcmovb
adc
andb
pop
cli
xlat
xchg
jae
es
sbb
dec
push
ret
popw
add
mov
push
dec
sub
out
adcb
sub
ds
mov
nop
pop
sub
push
dec
inc
outsb
divl
jg,pn
push
push
push
rorl
insb
push
and
faddl
pop
push
xchg
push
jbe
and
or
xor
enter
ret
pusha
cmp
pop
pop
jl
jbe
mov
ljmp
sbb
cmp
inc
in
dec
jmp
psraw
insb
clc
xchg
push
loop
pop
ret
or
mov
mov
or
mov
push
pushf
xor
inc
mov
xlat
rolb
lds
sub
sbb
push
add
push
outsb
cli
dec
mov
and
bound
xchg
push
push
in
pop
lds
sahf
push
add
push
jo
ret
call
and
bound
fwait
lds
mov
movzbl
dec
cwtl
adc
insb
lock
push
mov
xchg
and
mov
mov
xlat
pop
jo
test
add
jno
fidivl
fidivrs
sarl
js
dec
ss
sbb
cmpl
cmpb
ljmp
sbb
jne
ret
mov
ljmp
scas
jns
push
pop
cmp
loop
xor
rolb
adc
push
pop
cmp
imul
and
icebp
xchg
push
jmp
fidivrs
adc
into
mov
xor
mov
xchg
cld
push
add
xor
mov
lret
sub
stos
jo
pop
into
les
xchg
sub
push
cmp
aad
imul
jecxz
or
pop
in
dec
adc
into
mull
out
push
das
push
ljmp
and
fiaddl
orl
aam
pop
sbb
inc
sub
adc
mov
dec
push
int3
cs
into
inc
ds
pushf
xorl
inc
inc
push
lcall
push
bound
ret
dec
push
add
out
mov
jle
mov
sti
sub
test
cli
aam
aas
cmc
sbb
mov
pop
inc
xor
xchg
adc
cmp
xor
and
int
into
test
cmp
adc
add
cs
xchg
mov
mov
popf
xorb
bound
xchg
decb
jp
sub
arpl
pop
shl
xor
sub
and
sarl
inc
sub
ljmp
jnp
decb
xor
dec
mov
pop
ds
push
push
divps
mov
fs
shrl
inc
xchg
testb
jle
cmp
push
mov
or
and
sbb
repnz
jge
pop
dec
ror
repnz
leave
jnp
fs
push
mov
pusha
sub
push
andb
xor
bnd
pop
fwait
ss
mov
push
sub
bound
pop
sub
and
dec
in
bound
popa
sbb
cwtl
and
pop
add
adc
sbb
jno
stos
andb
inc
pusha
inc
push
jl
and
jmp
xchg
xor
cltd
dec
add
jo
imul
and
fcmovb
ret
sbb
dec
fdivr
sbb
fwait
mov
xor
xchg
xor
pop
fnstsw
cwtl
or
popa
adc
mov
bound
add
or
outsl
mov
push
lcall
aas
push
stos
ljmp
arpl
pusha
data16
fwait
inc
int3
es
pop
or
cmp
pop
xchg
or
pop
pop
push
out
jbe
add
push
inc
push
ja
xor
adc
mov
mov
add
cmp
aad
push
int3
mov
sub
and
pop
sub
mov
cmp
ret
push
inc
cmp
cmpsl
mov
test
push
and
imul
or
or
mov
add
inc
pusha
loope
addb
and
adc
ljmp
xor
jb
jbe
push
iret
ret
mov
jp
and
lret
mov
pop
sbb
mov
js
xchg
in
jb
sub
or
stos
add
mov
push
cmp
iret
xchg
mull
sub
adc
ja
movsl
mov
jnp
jle
incl
daa
cmp
mov
pop
inc
pop
aas
add
mov
inc
cli
scas
or
pop
inc
lcall
jle
xchg
loop
nop
pop
sub
ss
xchg
sub
jb
rorb
pop
addr16
lds
ljmp
or
mov
movsl
xor
sbbl
cmp
xchg
call
push
cli
sbb
jnp
inc
loope
pusha
data16
push
mov
aaa
rcr
cmpb
push
aaa
cmp
into
into
sub
xor
xchg
stos
mov
or
das
and
dec
ret
xor
dec
xchg
sub
loope
mov
add
jmp
mov
popf
jge
test
fistpl
scas
inc
and
pop
mov
mov
mov
addl
xor
inc
cli
cmp
out
mov
ljmp
jb
popl
rolb
jge
or
cltd
ja
push
cmp
das
jae
pop
pop
lea
outsl
dec
adc
sub
add
jnp
hlt
lods
xchg
pop
add
test
es
push
bound
in
or
out
xchg
inc
hlt
pop
data16
fcomps
add
xor
cli
xor
xchg
pop
push
clc
inc
push
pop
mov
je
insl
jp
loop
fildll
push
bound
xchg
mov
lret
scas
jge
aas
insl
dec
xor
jge
add
xorb
pop
jp
lret
stos
add
fistpl
jle
mov
icebp
jp
xchg
add
mov
jmp
inc
leave
push
test
jb
inc
mov
test
xlat
dec
xor
mov
clc
pop
fsts
inc
jecxz
cmpsb
mov
xchg
out
xorb
hlt
popf
adc
push
xchg
xchg
sbb
xor
inc
cmp
stos
jg
lock
test
jge
push
adc
xor
outsl
fisubl
fisubrl
add
cmp
xchg
or
dec
jae
lret
jae
ret
jp
testb
fstl
or
lods
stos
pushf
aas
dec
or
jg
lret
sub
or
daa
jbe
add
mov
outsb
lret
inc
jbe
sbb
loop
scas
pop
mov
mov
inc
rclb
pop
inc
adc
cli
aaa
sahf
ja
mov
pop
out
sub
lcall
imull
inc
sbb
or
pusha
push
lock
jo
xor
repnz
faddl
pop
and
adc
pop
lret
push
xor
repnz
adc
ds
mov
push
mov
addb
jnp
js
ljmp
dec
jge
push
mov
and
mov
subb
shlb
dec
sbb
cmp
lret
mov
pop
xor
cmpsl
adc
sub
xor
add
call
scas
push
jb
jmp
push
mov
mov
pop
lds
repnz
int
andb
stc
or
sub
ret
loopne
push
sub
push
inc
lret
lret
test
sbb
cmp
fdivrs
setle
cmp
int
testb
sbb
ret
pop
sub
dec
push
pop
popa
add
xchg
jnp
cmp
shlb
adc
es
mov
or
xchg
xchg
shrl
adcb
and
push
inc
ja
fs
stos
out
lcall
push
repnz
orb
incb
aaa
xchg
or
aaa
cwtl
shrb
pop
jbe
fs
ficomps
repnz
repz
dec
movb
pop
hlt
out
adc
xlat
lcall
lds
es
add
push
or
lea
pop
add
mov
xchg
inc
inc
or
and
mov
jg
mov
jb
stos
pusha
ret
insl
pop
or
inc
bound
repnz
jge
pop
push
mov
xchg
movsl
outsb
out
scas
ds
enter
xor
inc
xor
js
ds
mov
mov
xorb
sbb
and
jnp
xor
dec
ret
sub
outsb
iret
repnz
mov
inc
adc
loop
push
xor
shrb
push
into
sbb
and
cltd
sahf
add
xor
adcb
mov
xchg
push
inc
and
icebp
mov
ja
lds
lcall
or
push
jnp
fdivr
andl
pop
cmp
inc
mov
add
xor
mov
adc
rcl
or
cmpsb
pusha
sarb
aad
sub
and
mov
cmp
push
fidivs
mov
insb
fs
and
adc
dec
xor
icebp
notb
mov
adc
loope
pop
fwait
push
lret
icebp
inc
addb
pop
cmp
aaa
inc
mov
dec
pop
dec
test
pop
cmpsb
pop
mov
daa
jo
shlb
push
add
dec
sbb
and
aam
es
pop
pop
insb
imul
call
scas
jp
xor
adc
xor
mov
vmovddup
mov
jg
push
rcrb
jbe
mov
sbb
mov
stos
push
xchg
shlb
in
sbb
bnd
xorb
sbb
fs
inc
mov
clc
movsl
fimuls
inc
lcall
and
dec
bnd
mov
jbe
loop
push
cmp
mov
andl
push
push
lcall
sbb
xchg
push
inc
shlb
sbbb
xor
stos
sbb
jg
jbe
in
dec
mov
xchg
ja
dec
mov
add
jle
loop
xor
xchg
inc
ss
and
sub
push
and
pop
inc
das
repnz
cs
out
je
addr16
dec
cmpb
clc
ljmp
xor
hlt
cli
imul
xchg
and
bound
and
pop
mov
inc
jl
jno
add
jg
fstps
popf
push
adc
vcvtsd2ss
adc
xchg
rorb
push
sbb
insb
rcr
dec
push
lret
sub
sbb
pop
mov
xor
mov
loopne
or
sahf
inc
fdivs
push
out
xchg
fidivrl
dec
inc
push
in
ds
jns
pop
mov
mov
sbb
inc
inc
mov
iret
mov
aad
mov
ds
repnz
dec
loop
and
mov
push
idivb
in
jnp
sub
jge
mov
lods
xchg
pop
xchg
cmp
lret
cs
dec
aam
into
cwtl
xlat
push
pop
and
stos
dec
into
push
repz
ret
dec
clc
test
sbb
arpl
fistpll
xchg
incb
in
testb
lret
and
push
jns
jecxz
xor
ret
mov
in
xchg
sbb
add
fidivrs
add
cld
bound
sbbb
mov
cmp
jge
xchg
jo
add
push
and
and
cmp
mov
mov
xchg
push
xchg
aas
dec
jbe
rolb
or
arpl
loopne
cli
lock
jo
imulb
xchg
testb
or
inc
push
inc
jnp
sbb
in
jns
cmp
stc
inc
mov
inc
sub
pop
aas
enter
nop
add
ljmp
jns
mov
jbe
jae
and
loop
inc
test
or
fwait
mov
add
sahf
inc
xchg
mov
popf
cmpsb
out
dec
xlat
loopne
mov
stc
sub
jle
xchg
jo
add
sahf
aas
jo
shlb
jb
sub
inc
pusha
pop
jb
add
dec
pushf
add
jb
xor
bnd
dec
sbb
pop
sbbl
sbb
in
cmp
jle
cmp
jle
mov
repnz
xlat
pop
in
mov
rolb
or
dec
add
mov
dec
call
sub
inc
lret
mov
outsb
xlat
mov
jo
jo
mov
inc
xchg
sub
aam
and
mov
sub
repz
pop
cmpsb
and
mov
loop
shlb
add
xchg
inc
ds
aad
subb
sbb
push
xor
ficoms
jge
push
jbe
and
sti
or
and
or
mov
mov
bound
inc
xor
xchg
movsl
and
or
xchg
push
sbb
sub
jns
adc
jae
cmpsb
or
sar
lods
lret
cmpb
mov
in
or
mov
and
mov
and
jns
jmp
and
dec
jno
cmp
inc
cmp
mov
push
cmp
pop
outsb
mov
in
shlb
inc
push
shlb
iret
pop
ja
push
into
imul
inc
jno
aam
push
ret
lods
lods
jle
pop
mov
cs
cmpsb
dec
xchg
out
ret
mov
pusha
fiaddl
mov
pop
jmp
and
mov
jl
pop
inc
aad
icebp
jle
scas
sbb
outsl
ret
and
hlt
cmpsb
and
mov
xchg
les
ror
int
inc
mov
add
xchg
push
sub
outsl
cmp
and
push
pop
or
or
icebp
mov
les
and
jge
push
jo
loop
pop
test
imul
push
sbbl
or
inc
imul
cmp
jg
sahf
jg
xorps
cwtl
pop
pop
or
sbbl
pop
sbb
bound
add
push
ljmp
or
cli
mov
and
sub
sbb
insl
add
shrb
lahf
adc
stc
jne
inc
jno
push
repnz
cmp
arpl
dec
jbe
ljmp
and
cmpsb
enter
movb
and
test
cmp
ss
push
mov
adc
xchg
push
dec
lds
sub
fiaddl
xor
bound
jp
ss
ds
not
ja,pn
cmc
sub
or
outsl
xchg
dec
mov
xchg
imul
es
mov
cs
in
dec
push
inc
and
inc
call
add
sbb
fidivl
shll
cmc
imul
mov
ljmp
int3
ljmp
in
pop
adc
xchg
testb
xchg
inc
jne
call
mov
cmp
cmp
jno
jb
xor
shr
jle
xlat
fisubrs
xchg
lcall
pop
mov
mov
xchg
addb
dec
xor
inc
mov
sub
loopne
dec
or
sbbl
push
sub
push
sub
adc
es
fisubrs
sub
push
pop
sbb
shll
push
fldt
aad
outsl
dec
cmpl
sub
xchg
negb
cmp
rol
mov
sbb
mov
jae
es
cld
ret
shrb
pushf
hlt
cli
movsb
push
add
int
jns
sub
xchg
fbstp
jb
cmpsb
insb
jg
lcall
cmp
cli
and
push
xor
inc
movzbl
dec
mov
rol
sti
sarb
mov
sbb
pop
out
stc
xchg
mov
sahf
jge
sbb
hlt
bound
mov
inc
jp
testb
sub
jge
cmpsb
inc
adc
push
dec
push
mov
cmp
sahf
inc
pusha
jnp,pt
test
es
mov
loope
cld
pop
mov
arpl
imul
outsl
add
cld
and
sub
fbstp
adc
stos
cmpsl
pop
sub
out
mov
loop
xchg
es
xorb
and
push
ret
decl
iret
mov
jle
add
dec
xchg
jl
loope
es
icebp
out
cltd
inc
push
inc
mov
rcr
cmp
xchg
xlat
cmpb
psubsw
bnd
xor
inc
mov
sub
bound
and
and
pop
fisubs
jne
popa
push
pop
or
adc
jns
mov
imul
jle
xor
dec
add
pusha
outsb
xchg
and
xor
ds
push
ret
popa
ljmp
pop
cli
adcb
dec
push
sar
xchg
rdseed
pop
adc
dec
lret
cltd
leave
out
jb
inc
push
repz
cs
inc
dec
rcrb
adc
rcll
adc
aam
mov
xchg
lret
mov
or
inc
iret
mov
push
out
js
push
sub
ds
add
jns
lods
sbb
xor
pop
lock
inc
sub
add
pop
cmp
inc
test
add
ret
mov
mov
fstps
xor
cmp
into
rolb
imul
repnz
pop
push
loop
mov
xchg
push
sub
add
xchg
jns
sub
je
push
fildl
cli
shll
jl
fnstcw
inc
fcompl
arpl
inc
mov
jns
push
sub
add
aas
repnz
or
cmp
add
lcall
leave
bound
cmp
movb
jge,pt
stc
pop
adc
add
bnd
xchg
push
push
xor
inc
cmp
adc
and
mov
adc
mov
or
push
cs
xor
sub
jb
loopne
and
and
ljmp
fldcw
push
repnz
imul
fldcw
sub
jb
push
mov
or
and
cmp
fwait
lods
outsl
mov
jle
xor
dec
or
stos
mov
xchg
and
repnz
sbb
shrl
cli
shrl
bnd
dec
fs
std
jge
cwtl
mov
aam
aaa
pop
add
sahf
or
push
jb
pushf
arpl
daa
push
jb
add
ljmp
loop
fiadds
shl
das
data16
sbb
and
adc
jge
mov
pusha
js
divb
mov
shlb
rcrb
sbb
stos
jl
mov
negb
enter
adc
inc
ror
add
jge
mov
outsl
inc
xchg
nop
cmp
imul
insl
jle
mov
pop
add
ds
mov
mov
fldenv
push
cli
mov
add
cmp
cmp
and
mov
ds
push
testb
data16
xchg
mov
add
jns
dec
cmp
mov
bound
and
nop
arpl
outsb
insb
lret
rol
imul
fs
movswl
rcrb
add
and
jbe
dec
jne
dec
pop
cli
es
punpcklwd
decb
ss
sbb
leave
jle
divb
pop
xchg
rcrb
and
push
dec
pop
cmp
sub
cmp
test
xchg
popa
and
xchg
pop
mov
push
push
push
add
push
cmp
mov
stos
out
lret
insb
and
jmp
js
or
push
shlb
add
sbb
sbb
sbb
xchg
jne
inc
data16
inc
adc
add
mov
lcall
mov
pop
bound
push
cmp
push
xchg
add
sahf
popf
dec
popa
negb
jg
ror
inc
popa
cmpl
addr16
push
sub
dec
enter
repnz
jnp
jg
jb
jge
sub
add
sub
jb
clc
outsl
into
ds
lds
mov
add
lods
repnz
jo
daa
pop
xorl
lcall
xor
dec
mov
pop
ret
out
enter
mov
imul
ret
cmp
shll
sbb
pop
ja
adc
jne
sbb
fiaddl
orb
or
or
inc
or
jb
lds
add
dec
push
mov
inc
xor
or
das
jecxz
outsb
pop
je
pop
dec
maskmovq
add
and
inc
xchg
pop
push
or
mov
xor
nop
inc
addl
pop
divb
test
loopne
pop
cmpl
and
sahf
sub
in
or
mov
mov
roll
inc
idivb
and
testw
and
xchg
clc
and
or
jp
push
add
fistl
xorl
cltd
pop
cld
or
push
jne
cmp
mov
mov
push
mov
push
push
loop
sbb
jns
inc
cmp
jno
outsb
andl
cmp
add
pop
push
cmpsb
mov
shlb
ljmp
ds
cmp
pop
dec
loop
stos
std
out
filds
mov
and
imul
xor
push
shrl
push
nop
jle
dec
jae
cmp
sbb
pop
lret
sub
jo
pop
add
pop
out
xor
das
fs
fldenv
bound
fistl
pop
and
inc
rolb
inc
das
lea
cli
jno
xorb
ror
mov
push
outsl
push
jns
pusha
or
jns
pop
adc
bound
jg
into
push
or
mov
pop
inc
pusha
sahf
in
loop
shll
ss
inc
lahf
mov
xor
arpl
pop
sub
ja
and
sti
rorl
ret
lret
je
loope
dec
jmp
sbb
cmpl
jle
dec
repnz
dec
sub
sbb
into
andl
lahf
xchg
in
outsl
mov
push
stc
cmpsb
dec
jp
add
pop
add
jae
sahf
jmp
out
mov
push
pop
xor
pop
aaa
sbb
adc
hlt
or
jb
or
fisubrl
lds
cs
lret
or
push
mov
cmp
push
jnp
pop
ss
push
lods
subb
mov
ja
mov
and
push
xchg
out
stos
mov
ret
cmp
test
push
les
pop
push
mov
stc
dec
out
repnz
std
or
cmpb
pusha
mov
mov
sbb
lahf
imul
sarb
push
cmp
ret
je
shll
rcl
fiadds
ds
mov
dec
mov
stos
das
cmp
les
dec
lods
out
sub
cmp
subb
inc
cmp
and
shrd
pop
addb
fwait
cmp
repz
inc
sbb
ret
xchg
inc
ds
in
inc
xlat
pop
pop
dec
sub
push
xor
dec
inc
push
enter
and
or
xor
outsl
cld
xor
cltd
lcall
cwtl
jns
fstpt
sub
cmp
mov
test
rcr
js
repnz
cmp
arpl
repnz
jle
adc
mov
rclb
out
shll
cmp
addb
outsl
dec
mov
imul
out
stc
lahf
sbb
rorb
xor
sub
dec
and
imul
push
cmp
frstor
and
lcall
outsl
pop
adc
jae
imul
aam
inc
inc
aas
lods
push
pop
sbb
ret
add
add
mov
daa
gs
mov
xor
xchg
add
or
xchg
pop
ds
and
cs
fbstp
inc
inc
cwtl
dec
bound
jae
xchg
inc
addl
sbb
repnz
add
sub
ja
in
int
rcrb
xor
push
lcall
into
and
push
bound
mov
sbb
rorb
sti
mov
ljmp
and
ret
or
sbbb
cmp
sub
mov
aam
outsb
cmp
jne
jb
sbbb
mov
adc
in
cmp
loop
cmc
cmp
inc
int
dec
repz
lods
aad
sbb
jle
cwtl
pushf
jg
stos
xchg
shl
rorl
jbe
cmp
mov
push
pop
shll
rorb
and
mov
and
push
rclb
jp
jb
lea
xlat
push
push
jb
pop
dec
xor
icebp
lahf
insb
or
push
out
add
rcl
mov
mov
fs
pop
xchg
add
gs
pop
mov
aaa
js
jl
push
addb
rcrb
add
jbe
pop
cmp
cs
mov
mov
pop
add
lcall
es
fdivrp
jle
push
sub
pop
jno
xorb
lcall
cmpb
bound
or
lahf
mov
mov
fisttps
xor
fdivr
pushw
jge
std
mov
dec
dec
mov
sub
out
repnz
sbb
es
push
aaa
push
push
pusha
xchg
fdivp
rolb
cmc
pusha
das
mov
aas
pushf
mov
andb
push
dec
pop
imul
ljmp
jnp
sub
adc
add
aas
testl
pop
out
flds
jmp
es
inc
jp
jno
xchg
add
insl
fcmovnu
cmp
ror
mov
push
add
jp
sub
ret
cmpsl
inc
stc
jae
movsl
test
cmp
push
ret
je
xor
mov
cmpsl
popa
xchg
mov
jbe
repnz
jg
inc
xor
rorl
dec
jno
cmpb
out
test
stos
xchg
andl
inc
mov
push
lods
sbb
cmp
mov
stos
roll
add
dec
out
loope
pop
inc
lcall
stc
mov
shrb
mov
or
sub
inc
jns
mov
and
lcall
push
sub
inc
ret
pop
pop
and
push
and
dec
inc
cmp
inc
inc
mov
dec
and
lcall
mov
ret
ds
ret
xchg
imul
stos
pop
and
das
add
rcl
orl
xchg
dec
add
rclb
imul
add
negl
add
mov
sub
xor
dec
add
push
sbb
jne
inc
push
jb
mov
pop
ficomps
stos
mov
pop
popa
push
push
cmpb
pop
scas
xor
mov
mov
or
lretw
jl,pn
mov
jb
scas
adc
mov
ds
jl
out
jns
cmp
mov
jle
mov
dec
bound
push
and
and
jb
inc
xchg
cwtl
xchg
push
lea
xchg
inc
push
call
pop
jg
jbe
add
ja
int3
xchg
pop
outsl
fiaddl
sbb
sub
repnz
jns
push
mov
add
lret
jnp
aaa
es
ja
cmp
pop
lods
popf
lret
bts
mov
ja
test
jge
fiadds
and
inc
sbb
mov
mov
pop
xor
imul
sbb
xchg
inc
stos
cmp
adc
cmp
xchg
adcb
outsl
mov
outsb
pop
imul
lahf
stos
std
sub
ljmp
pop
scas
bound
movsl
rorl
pop
jnp
sbb
stc
xor
in
push
testl
mov
jge
lcall
daa
cmp
pop
sti
arpl
popa
repnz
push
sbb
add
out
movsb
mov
cmp
lea
adc
push
into
jmp
cwtl
mov
imul
dec
in
or
movsb
lcall
jbe
jnp
xchg
or
push
dec
mov
cmp
fcmovu
add
sub
xchg
ret
movsb
xor
mov
lcall
fwait
inc
inc
adc
loop
mov
adc
sahf
out
jge
in
xchg
pop
lock
push
rolb
push
inc
fldt
sub
pop
mov
or
mov
gs
sub
and
mov
mov
lcall
imul
mov
push
mov
insl
arpl
inc
adc
ss
ja
cmc
jo
mov
loop
lods
sbb
pop
inc
inc
popf
mov
cmp
sub
add
jne
sbb
repnz
pop
dec
mov
ja
mov
pop
or
pop
mov
ret
arpl
loop
or
cltd
mov
in
add
ljmp
inc
shll
jnp
nop
clc
adc
aad
bound
sbb
push
jno
les
dec
xor
dec
repnz
sbb
pop
ret
into
xchg
pop
out
fnstenv
pop
jp
dec
sarl
push
inc
testl
push
pop
dec
and
push
xadd
sub
outsl
and
sub
pusha
cmp
subl
mov
andb
mov
xchg
push
push
rol
pop
dec
lret
sbb
lods
sahf
inc
mov
sub
push
jmp
push
jno
cvtps2pi
sub
outsb
jle
insb
sub
dec
subl
adc
dec
add
ss
subb
pop
jle
push
mov
dec
rcl
pop
inc
lret
ja
in
dec
daa
add
ljmp
inc
sbb
mov
lret
cmp
mov
xchg
loop
push
sbb
or
jle
js
sbb
sub
jb
or
insb
les
jp
add
leave
mov
lahf
divl
orb
xorl
xor
xor
mov
cwtl
adcl
push
data16
push
bound
insl
ss
adc
out
addr16
fwait
lret
decl
mov
popa
daa
mov
pop
inc
mov
inc
in
xchg
js
inc
ds
xor
jp
imull
rcll
stos
adc
pop
sbb
jle
adc
or
dec
cli
lods
popf
jns
inc
or
pushf
repnz
cmp
ja
and
lret
sbb
mull
mov
inc
inc
imul
leave
and
xchg
scas
jge
fs
lret
imul
mov
ffreep
ficompl
repnz
adc
mov
rcrb
sub
add
and
pop
xchg
mov
fs
loop
sbb
shr
jo
sub
aam
inc
jnp
dec
loopne
rclb
mov
xchg
fistl
loop
or
mov
mov
push
pushf
xor
fimull
into
fiaddl
sub
ret
xor
xor
sbb
mov
cmp
outsb
fst
jg
loopne
movsb
xor
adc
pop
xor
fsubrs
fwait
jle
repnz
jge
push
std
xor
sbb
jle
imul
xchg
das
pop
or
jle
daa
fidivrl
into
add
lahf
xor
push
jnp
hlt
aam
sar
int
test
imul
jo
cmp
lret
jge
int3
push
add
into
outsb
jb
dec
adc
or
jno
cmp
cmp
test
mov
sti
mov
and
bound
outsb
push
les
ljmp
popa
mov
out
add
sbb
jo
inc
loopne
jp
ds
push
xor
inc
jg
pop
adc
cmp
popa
or
jp
cmp
inc
inc
pop
or
push
cmp
pop
stc
dec
dec
mov
rcr
or
and
push
int3
jns
movsl
dec
push
or
push
aam
adc
add
sti
pop
cmpsb
jo
loop
inc
dec
push
pop
xor
out
mov
and
std
test
sub
mov
add
mov
aaa
and
int3
stos
xor
xor
ret
jge
das
jmp
and
rolb
stos
push
fisubrl
mov
popa
add
fucomip
or
lods
inc
push
xor
inc
mov
cli
fwait
push
jnp
pop
xor
cmpsb
jge
sbb
mov
pop
outsl
or
xchg
fistps
mov
xchg
push
push
jae
adc
insl
jno
rcrl
pop
rcrl
popw
push
sub
add
push
lcall
inc
inc
or
rolb
add
sbb
dec
mov
sub
push
jge
mov
fdivrl
jg
mov
xlat
sahf
ret
pushl
mov
ss
and
mov
inc
pop
in
imul
daa
cmpsb
insb
pop
hlt
jbe
cltd
xor
arpl
jp
dec
add
js
adc
jno
pop
mov
sbbb
mov
mov
push
mov
outsb
rcrb
aas
in
xchg
dec
adc
pop
mov
cmp
das
ret
or
outsb
cmp
dec
pop
in
outsb
xor
je
pop
push
jl
jge
push
dec
add
imul
and
mov
pop
or
dec
inc
push
xchg
adc
or
mov
ja
adc
push
xor
cmp
xchg
and
cmp
stos
pop
pusha
pop
xor
mov
inc
dec
xor
mov
inc
or
lcall
jbe
and
jge
jp
jae
les
mov
pop
xchg
arpl
pusha
into
adc
jns
fidivs
add
ljmp
pop
leave
sahf
roll
adc
cli
inc
out
jmp
sub
inc
mov
add
dec
xchg
out
inc
incb
fcmovbe
nop
mov
dec
rcrl
mov
into
sbb
push
adc
imul
sub
or
sub
push
cli
loopne
cs
inc
add
incb
shlb
out
cmp
fwait
ljmp
cmpsb
push
push
jp
test
push
movsb
mov
mov
and
jb
sti
inc
jb
inc
fisttpl
xor
leave
sbbl
jge
adcb
and
jae
pop
dec
sub
leave
test
ja
pop
bound
out
cmpsb
add
lcall
pop
movb
pusha
lahf
jns
sub
ds
insl
mov
inc
adc
inc
push
adc
jae
ss
scas
sub
mov
xchg
sub
mov
sub
mov
push
inc
test
pop
inc
inc
xor
insb
ret
and
and
addr16
inc
lret
out
repnz
push
cs
jb
loop
pop
nop
jne
sbb
pop
inc
dec
mov
adc
ds
or
dec
insl
xchg
aam
xchg
jnp
or
inc
mov
mov
mov
movsb
pop
lods
dec
jb
add
imul
jnp
repz
push
xor
xchg
cmp
lahf
and
push
lods
cwtl
dec
cmp
jp
mov
lahf
pop
inc
ljmp
mov
and
mov
fidivrs
lods
and
xor
mov
adc
inc
adc
push
divl
jae
pop
add
arpl
insb
ds
insb
or
xchg
mov
subl
jb
frstor
call
testb
mov
jns
bound
or
fs
sub
push
ret
dec
loop
filds
mulb
xor
addr16
cld
jp
jnp
cmpsl
inc
xor
ja
add
pop
xor
subl
fimuls
cmp
push
outsb
ret
repnz
push
sub
iret
rolb
inc
inc
sbb
pop
cli
jbe
inc
sahf
dec
push
stc
or
add
dec
or
mov
packssdw
jb
enter
pop
dec
rclb
add
bound
stc
mov
dec
jecxz
mov
mov
loop
or
add
xchg
repnz
ja
pop
scas
fiaddl
imul
cmpsb
stc
inc
mov
sub
xor
stos
inc
mov
leave
gs
aas
fs
mov
int3
cmpsb
or
sub
sub
mov
and
and
cmp
pop
xor
int
stos
and
shl
push
subb
mov
push
mov
inc
inc
xor
ficoml
push
mov
jb
in
movsb
jp
dec
sub
add
loop
aam
fstl
cmp
mov
in
outsb
jb
out
outsl
lahf
pop
stos
aam
sub
insb
pop
rclb
push
loope
in
aaa
pop
rcr
mov
push
les
dec
xchg
pop
jae
out
sub
bound
and
or
cmpb
sarl
and
push
ret
lahf
and
cmp
push
fs
jl
imul
lds
inc
lods
popf
enter
jb
jp
jns
outsl
push
mov
cmp
jno
repnz
pop
aad
cld
cmp
adc
add
pusha
shlb
xchg
or
pop
sub
add
mov
inc
data16
int3
jo
add
loopne
mov
push
je,pn
lret
addr16
js
outsb
fiaddl
sub
xbegin
or
cmpl
mov
lret
mov
sbb
push
ret
sub
jnp
es
leave
add
jne
mov
ret
cmpsb
mov
dec
push
into
jge
xchg
xchg
imul
jbe
test
pop
loope
push
or
mov
push
mov
jl
idivl
jl
fucompp
adcb
and
cli
mov
adc
test
push
pop
adc
mov
daa
push
jae
fidivrs
add
pop
mov
call
sub
push
lds
add
in
sub
adc
in
stos
sbb
jno
outsb
divb
push
jns
sub
pop
cmp
repnz
bound
test
ja
out
adc
pop
shr
push
ret
mov
xchg
jl
stos
mov
cmp
inc
pop
fwait
pop
shlb
push
jl
xor
js
push
push
push
add
int3
cmc
mov
xor
lret
jnp
jge
push
pop
xor
mov
cld
cmp
out
add
dec
loop
cmpsb
ret
jecxz
mov
jle
loop
sahf
outsb
bound
ret
test
pop
xorl
sub
rcl
inc
leave
push
stos
pop
sbb
xor
jp
lcall
and
jns
xchg
add
and
jb
add
sub
es
push
xchg
ljmp
adc
and
adc
pop
or
out
pop
xor
outsl
mov
inc
xchg
loopne
jge
popf
pop
mov
jle
fidivl
sbb
xchg
mov
mov
mov
jge
js
rorb
bound
inc
sub
stos
cld
arpl
and
xor
int
sbb
je
sub
pop
gs
push
ds
jne
mov
and
stos
push
jnp
pop
mov
into
inc
or
aad
mov
enter
push
push
sub
add
xor
jg
aaa
sbb
out
rol
enter
inc
shlb
ret
mov
aaa
sub
xor
or
and
adc
adc
hlt
insb
and
cmp
cmc
test
mov
lcall
or
pop
jns
adc
cmovb
daa
out
es
jns
inc
cmp
jb
rolb
pop
je
xchg
xchg
cli
cmp
stos
pop
dec
repnz
testb
mov
out
add
jns,pt
fmuls
shr
sub
in
fcmovbe
addb
add
fstl
jo
rorl
jns
inc
mov
inc
pop
popa
push
pushl
pusha
lods
stc
cmp
aaa
push
push
push
jle
xor
push
push
sbb
ja
push
daa
sub
insb
loop
ror
mov
repz
rcl
imul
int
and
sub
jle
inc
mov
in
pop
jb
flds
mov
dec
push
sub
jne
jns
push
cmp
mov
pop
insb
nop
psrad
xor
bnd
adc
inc
sbb
inc
inc
xchg
push
lods
push
jo
dec
cmp
mov
arpl
pshufw
add
adc
sub
aam
xchg
outsl
cs
mov
xchg
popa
outsb
mov
jle
jmp
mulb
out
jbe
adcl
jno
jo
xor
rsm
cmp
xchg
xchg
mov
sub
mov
and
jl
ljmp
ds
inc
inc
testb
jnp
test
fwait
jle
daa
movsb
mov
es
adc
insl
inc
hlt
pshufw
lcall
add
out
fs
es
ds
sarl
ss
fidivl
adcb
adc
and
repnz
dec
xchg
xor
sub
ret
test
div
pop
or
lcall
es
jno
pop
ljmp
push
mov
adc
aam
es
pop
push
jle
cmp
dec
mov
adc
cwtl
dec
adc
loopne
sub
push
cmp
sbb
inc
jbe
adc
pop
lret
or
jo
mov
and
mov
push
push
jns
and
jns
gs
insb
sbb
mov
xor
ss
lret
in
repnz
xchg
sahf
into
sti
repnz
inc
or
test
xorb
sbb
adc
ljmp
push
sarl
mov
into
jb
cmp
jo
inc
push
dec
xor
xchg
inc
lret
iret
jae
inc
push
pop
stc
ret
sub
test
dec
sbb
bound
xchg
icebp
xor
adc
ret
sbb
jecxz
mov
sahf
add
jb,pt
cmp
xchg
pusha
cmp
ja
out
push
repnz
out
cmpsb
vmovapd
jp
rcrb
hlt
imul
inc
sbb
cmp
pushf
mov
jnp
jp
xchg
or
jo
cltd
jnp
sub
sbb
cmp
sbb
mov
stos
push
imul
xchg
xchg
pop
mov
push
shlb
lcall
dec
into
xor
idiv
lods
pop
cmp
fbstp
enter
push
arpl
test
sbb
inc
iret
inc
stc
adc
or
pushw
bound
push
and
outsb
jle
inc
xor
inc
pop
std
loop
inc
and
negb
mov
xor
cmpb
repnz
std
xor
mov
mov
loope
push
add
push
pop
dec
cvtps2pi
xor
ror
fiadds
cmp
repnz
xchg
push
xchg
push
out
sub
jecxz
pop
sti
cli
sub
pop
xor
lahf
jg
or
push
in
add
outsb
jmp
bound
sbb
insb
xor
pshufw
inc
xor
dec
jbe
sub
pop
pop
mov
fisubl
outsb
test
rcll
ss
ret
pushf
orl
and
jno
addb
stos
sti
adc
lret
jnp
and
ret
and
aad
jp
addb
adc
movl
loop
repnz
sub
inc
movb
aam
adc
cmp
dec
es
cs
dec
mov
sbb
adc
fimuls
add
jne
stos
mov
pop
or
and
rolb
call
xchg
xor
xchg
rol
repnz
mov
xor
sbb
jge
push
jg
push
xchg
cmpsb
sbbl
pop
xlat
pop
mov
dec
and
sub
inc
mov
cwtl
mov
dec
adc
xor
les
cmp
or
pop
push
mov
bound
imul
mov
push
inc
mov
jno,pt
xor
ds
mov
inc
jnp
aad
sub
rclb
into
icebp
fsubrs
mov
ljmp
fisubrl
insl
mov
stos
mulb
xor
addb
xor
aam
sahf
inc
js
sbbl
movsl
sub
in
sub
in
push
and
push
jp
shrl
repnz
push
psubusw
mov
and
inc
xchg
cli
ds
cltd
inc
and
outsb
rcrl
dec
and
add
std
pop
andl
outsb
jb
and
push
push
imul
sub
add
pop
cmp
lods
pcmpeqw
push
imul
xor
sub
pusha
jge
xchg
movb
mov
aam
xchg
ljmp
loope
daa
shlb
xchg
inc
mov
push
push
movsb
and
or
cmovne
movsl
repnz
jecxz
jns
shll
sbb
jb
or
outsl
shrl
ret
mov
mov
dec
into
fidivl
addb
inc
jmp
xor
mov
rol
insb
or
or
cmpsl
or
push
sub
push
inc
jbe
bnd
pop
cmp
out
scas
jo
or
adc
xchg
jb
push
gs
push
stos
fbstp
arpl
add
mov
fcomps
data16
push
push
cmpsb
rcl
mov
push
adcl
dec
aad
cltd
add
fwait
repnz
jge
cmp
ret
jp
xchg
add
mov
jae
in
sbb
jl
mov
pusha
mov
jge
and
fidivs
nop
dec
stos
mov
pop
pop
push
cmpb
xchg
subb
loope
ss
xchg
arpl
insb
xor
xchg
sub
out
dec
sbb
fimull
xor
lds
add
in
fldt
sub
mov
mov
and
dec
mov
aaa
jge
push
add
push
xchg
fnstsw
xchg
ljmp
or
inc
push
inc
rclb
adc
jl
subl
outsl
xchg
pop
mov
mov
and
stos
fldcw
and
clc
add
pop
ret
enter
es
in
pushf
lea
inc
inc
fisubrs
jle
scas
sbb
clc
xchg
fiadds
pop
and
sbb
cld
dec
and
ret
ds
push
ja
pop
fs
sub
and
inc
sub
in
add
mov
jno
and
cli
lock
jae
adc
lock
sub
inc
xchg
negl
pusha
pop
inc
andb
movsb
dec
dec
push
cli
and
push
outsl
leave
add
sbbl
ss
mov
push
adcb
sub
into
xor
inc
sahf
xchg
lret
ss
stos
popf
ds
aas
push
dec
into
inc
or
dec
mov
sbb
pop
jno
fs
cmpsl
je
pop
push
cwtl
nop
into
jnp
pusha
jns
and
test
xor
add
inc
cmp
cmpsb
repz
divl
adc
ljmp
sbb
and
jo
ds
or
test
ss
nop
dec
arpl
jnp
inc
sbb
push
jnp
cmc
sbb
test
lcall
sbb
jbe
push
aas
rolb
dec
lea
sub
clc
pusha
and
jl
push
mov
mov
lock
dec
adc
pop
and
shl
pop
cmp
sbbl
in
xor
ret
push
ss
mov
xor
and
outsl
jp
inc
into
or
push
mov
test
call
adc
jbe
lock
sbb
mov
arpl
mov
lret
imul
push
jp
rorb
jg
fimuls
inc
int
fisubl
pop
loop
mov
jp
jo
cltd
xor
jbe
mov
shll
mov
adc
stos
jo
arpl
lcall
movsb
jge
addr16
outsl
lock
jbe
lret
push
push
cmp
xor
out
pusha
xchg
or
adc
dec
ds
ja
jb
cmp
bound
add
sahf
mov
mov
add
jp
jnp
sti
jle
cmp
xor
add
sbb
arpl
lret
popf
outsb
stc
and
scas
scas
mov
fcmove
iret
adcb
adc
pop
or
cmp
es
rcrb
add
in
pop
sbb
ret
mov
xchg
pop
jns
and
and
fildl
jmp
aam
ljmp
sub
mov
movsl
push
jge
push
insl
rcr
fisubl
ds
push
push
adc
adc
fidivl
mov
jo
push
or
mov
repz
dec
push
push
inc
mov
cmp
ja
sub
push
or
loop
ds
in
xchg
cmp
mov
jo
insb
dec
push
jp
scas
or
jl
or
push
shlb
outsb
add
sub
add
cmp
jnp
or
mov
push
jge
lahf
outsb
cmp
sub
stos
sbb
loope
and
pop
xchg
cmp
test
and
data16
out
sbb
leave
pop
aam
cmp
or
stos
add
mov
jbe
mov
jmp
sub
cli
and
jnp
jle
popa
incb
sub
jp
push
xorl
pop
out
incb
movw
sbb
repnz
jnp
push
pusha
pop
fiaddl
outsl
adc
enter
or
rcr
bound
add
mov
mov
shll
add
sahf
jb
add
push
sbb
inc
sub
mov
mov
mov
or
popa
fisubrs
and
mov
fstps
dec
jne
jbe
jle
adc
sbb
aam
dec
ds
push
out
outsl
insb
sti
jp
sub
push
mov
or
rol
sbb
mov
jle
arpl
jle
sahf
inc
insl
repnz
into
in
add
fmull
adc
mov
push
enter
push
es
and
daa
mov
mov
xchg
xor
pop
decb
addr16
push
xchg
sub
lcall
fwait
push
jbe
jg
loop
shll
mov
ss
adc
std
and
insb
repnz
popa
gs
jb
push
xorb
add
sub
jb
outsb
pusha
lds
shr
fdivs
insb
and
or
inc
inc
int
cli
xor
jns
sbb
cmp
fiaddl
jb
mov
pop
enter
push
sub
sub
or
cmp
ljmp
xor
mov
xor
pop
pop
cmp
sbb
ret
addb
or
shlb
jmp
daa
or
pushf
mov
mov
hlt
mov
pop
sub
fisubrl
and
nop
popf
fdivrp
pop
je
jb
adcl
rclb
pop
int
push
cmp
aas
dec
push
sbb
xorb
pop
mov
inc
sahf
ja
dec
and
cld
jnp
adc
push
aad
mov
rclb
ljmp
fcmovu
rcll
inc
push
push
dec
in
data16
aaa
jae
mov
es
lahf
jp
lods
mov
xchg
xor
dec
mov
loop
jp
add
or
repnz
cmp
jo
sub
lcall
ja
pop
movsb
inc
das
ds
adc
jp
out
lahf
andb
jae
and
inc
rcll
in
mov
psubusw
xchg
and
xchg
or
mov
sub
push
out
jae
call
adc
enter
jbe
add
pop
aaa
inc
in
sub
cmp
xor
jp
in
addr16
push
sub
jnp
or
movsl
sub
mov
sub
inc
rcll
xor
mov
imul
add
in
fs
ja
pop
repnz
push
inc
imulb
push
in
sti
xchg
mov
mov
mov
sbb
les
push
sub
jo
gs
jno
repnz
push
push
adc
ret
xor
sub
jle
dec
into
fidivrl
dec
pop
adcb
mov
jb
jae
adc
inc
mov
mov
or
xchg
sub
add
mov
xchg
nop
outsb
mov
xchg
xor
lcall
add
arpl
out
in
xchg
xchg
ret
add
pop
push
cs
dec
or
mov
daa
fistl
inc
loop
test
xor
cmp
sbb
fisubl
jl
sbb
push
dec
mov
cmovle
lcall
sbb
or
js
stos
aas
cmp
jno
adcl
cli
sub
xorl
dec
xlat
mov
or
lds
push
in
rcrb
ss
jb
es
inc
movsl
out
jle
cmp
xor
push
setns
push
jne
add
les
sub
pop
sbb
in
imul
fdivp
jnp
xor
pop
mov
jmp
idiv
sub
int
adc
ficoms
push
shlb
push
mov
xchg
mov
rcrb
jl
mov
cs
xor
jmp
rcrb
data16
add
cmp
call
sbb
loopne
mov
or
jno
sbb
inc
mov
jb
add
mov
dec
push
pop
jecxz
adc
inc
into
mov
sbb
push
lea
push
inc
shll
cmpsb
pop
lods
sub
adc
xor
nop
sub
fisubs
lcall
dec
sub
jns,pt
rcll
pop
lret
bound
outsb
xor
sahf
cmp
hlt
xchg
push
sbb
out
mov
jp
aaa
and
pop
adc
bnd
je
mov
insl
scas
mov
mov
in
xor
adc
cmpsl
jp
cwtl
pushf
pop
add
adc
xor
gs
mov
mov
ficoml
jne
repz
mov
and
sbb
fldcw
cmpsl
decb
je
dec
out
cltd
cld
xchg
push
or
pop
rolb
test
add
cmp
push
xchg
xchg
pushl
xchg
jg
dec
mov
sbb
jp
inc
and
jbe
xchg
inc
stos
inc
cs
push
in
clts
jbe
cmp
pop
testb
outsl
xor
push
insb
or
mov
ss
test
or
daa
mov
loope
cmp
add
dec
pop
xor
push
jns
sbb
push
cmp
or
cmp
out
push
pop
mov
mov
fldl
jo
daa
adc
push
ss
sbb
es
ja
push
jae
push
xchg
ret
and
dec
push
jge
scas
lcall
pop
jae
pusha
sahf
pop
jns
int
or
popa
adcb
mov
loopne
jecxz
cli
mov
pop
aas
outsb
xor
jnp
sbbb
sub
inc
mov
add
add
scas
mov
add
push
mov
repnz
out
xchg
das
sbb
push
sahf
inc
dec
lahf
sub
insb
ss
ret
imul
cmpsb
sub
dec
xchg
or
mov
pop
push
jle
daa
sbb
push
imul
cs
pop
mov
mov
out
and
inc
pop
outsb
cli
mov
imul
push
inc
jno
jl
inc
pop
push
pusha
jle
push
sub
sbb
jl
stos
mov
or
sti
out
mov
mov
sbb
test
push
jle
jp
rcrb
cmp
in
xor
cs
pop
inc
add
or
lret
jl
lret
pusha
mov
addb
fwait
sub
and
clc
xchg
test
pop
std
sub
mov
into
xor
imul
add
mov
andb
movb
inc
mov
mov
ja
insb
push
inc
dec
shr
cmpsb
in
addb
push
lret
cmp
xorb
push
cmp
add
test
push
sub
xor
add
mulb
pop
inc
push
pop
ds
in
ret
int
mov
arpl
jne
xchg
nop
sbb
cs
mov
push
or
cmp
inc
aam
inc
dec
out
leave
adcl
and
cli
mov
or
sahf
fidivrs
push
pop
add
int3
stos
jl
js
shl
mov
fiaddl
mov
mov
xchg
loop
cmp
jp
dec
mov
rclb
add
push
sbb
jae
ret
xor
pop
push
jle
sahf
inc
dec
inc
std
leave
incb
xor
stos
inc
pmaxub
sti
jnp
js
aad
xorb
int
xchg
bound
push
aad
shll
pop
nop
or
inc
push
inc
popf
sar
dec
sub
sub
sub
dec
shll
add
dec
pop
popa
fists
mov
push
in
xchg
mov
pop
xorl
imul
push
inc
sti
ds
mov
insl
inc
pusha
fdivrp
repz
loope
divb
sahf
fimuls
mov
mov
mov
sbb
data16
cs
mov
std
or
dec
ds
add
jmp
sub
or
xor
inc
fistl
in
xchg
push
add
pop
mov
push
push
call
jl
cmp
ja
and
mov
rcll
or
push
cmp
paddw
lea
xor
jo
adc
xlat
push
jle
lea
jp
jb
mov
mov
ds
push
xchg
pop
push
sub
adc
ljmp
sub
in
jo
dec
in
xchg
ret
add
push
pop
push
mov
cli
pop
xor
pop
ds
mov
cmc
sub
inc
or
xchg
sub
xchg
jo
bound
cmp
nop
stos
sti
es
mov
jle
pop
sbb
aam
es
mov
rcrb
das
insl
les
insb
sbb
hlt
insb
mov
mov
adcl
daa
imul
jbe
insb
data16
pop
fsubs
inc
fwait
in
jo
pop
pop
bound
sub
xchg
dec
pop
add
pop
push
inc
jno
jbe
mov
jle
shlb
outsb
adc
jp
pop
add
push
xlat
pop
lret
jnp
inc
sub
bound
movsb
outsb
cwtl
pop
movzbl
imul
ja
ds
sub
sub
or
push
xlat
mov
shll
adc
scas
cli
outsl
cmovb
imul
xor
mov
push
adc
int
and
out
scas
popa
dec
js
cmpsb
cmp
int
xchg
inc
mov
dec
pop
push
out
inc
push
and
repnz
mov
or
push
ds
and
movsb
push
pop
xor
push
push
imul
cmp
stos
ljmp
ja
shlb
inc
push
ljmp
test
push
dec
movsb
xchg
ret
xor
in
bound
xchg
shl
cli
test
lea
fisubrl
das
ss
xor
insl
sub
and
xchg
fucomi
mov
add
movsl
ror
repnz
mov
in
out
pop
pushf
sahf
lret
das
cmp
or
cmp
outsl
push
data16
sbb
add
movsb
and
xchg
cmpsl
fsubrs
enter
data16
popf
push
mov
sahf
mov
lds
mov
imul
stos
or
xchg
ss
cmp
bound
mov
rclb
loop
cld
fidivrl
push
dec
add
or
mov
hlt
pop
arpl
pop
jp
push
hlt
aaa
lock
dec
movq
lret
rcll
jb
xchg
leave
pop
jl
test
jno
jg
insl
bound
movsl
xchg
rolb
sub
jmp
adc
cmp
mov
mov
movb
inc
pop
sbb
lds
and
push
je
out
or
sbb
rorb
cmp
pop
outsl
xchg
sub
imul
inc
outsb
movsb
aam
sbb
movsl
inc
ret
dec
and
out
jle
jge
sub
rorl
in
jo
dec
inc
mov
arpl
lock
das
inc
or
in
xchg
and
sub
push
ljmp
imul
insl
xchg
mov
inc
lcall
pop
xchg
push
pusha
pop
arpl
cwtl
fidivrl
mov
sahf
enter
insb
ljmp
out
andb
lds
sbb
jnp
mov
sub
adc
pop
out
and
lcall
xor
movl
pop
pop
push
xchg
loope,pn
xor
shll
xor
mov
push
sbb
push
decb
jns
and
lcall
test
es
ret
add
sub
push
pop
push
in
pop
insb
mov
mov
pop
sti
mov
jp
pop
jl
pop
push
push
cs
ljmp
mov
loop
ret
sub
imull
push
pop
shrb
fidivrl
lcall
xor
jecxz
xor
and
xchg
pop
shll
xchg
stc
pop
push
and
jge
aam
dec
inc
lahf
push
addb
repz
and
jns
jbe
cmp
aam
ret
sbb
jmp
and
leave
xchg
roll
push
out
lcall
adc
dec
cmp
xor
inc
xor
pop
test
inc
outsl
and
int3
mov
dec
stc
and
dec
push
daa
mov
sbb
pusha
int
push
ret
ja
jl
imul
push
jb
add
push
xchg
and
adc
push
lcall
push
test
xor
fidivrl
adc
inc
cs
adc
gs
xor
ds
jle
cmpsb
dec
xor
mov
add
ss
bound
jae
cmp
push
sbb
push
fcmovb
fsincos
in
daa
and
push
fildll
sbb
lods
xor
jnp
in
out
jmp
jb
pop
xchg
sbbb
dec
outsb
xchg
mov
sub
lods
sti
stos
pop
inc
sub
pop
mov
icebp
push
jns
and
movsl
popa
mov
scas
ds
imul
jp
mov
lea
add
or
je
xor
cmp
mov
push
pop
adc
dec
push
push
push
jle
flds
inc
fsubrl
cs
jae
add
and
sub
arpl
adc
inc
mov
mov
inc
mov
inc
or
mov
add
xor
jbe
scas
fs
daa
adc
xadd
jp
fiaddl
xlat
dec
and
inc
mov
mov
out
push
aaa
shlb
mov
jbe
daa
cwtl
dec
lret
dec
sub
mov
xchg
xchg
push
movsb
push
jo
mov
sub
dec
movsl
push
push
sub
xchg
jp
xchg
icebp
pop
mov
fisttpl
or
ficompl
andl
dec
push
gs
mov
andl
mov
xchg
pop
imul
ret
das
adc
dec
xchg
xchg
mov
ja
adc
jnp
jno
cmpl
mov
stos
jns
nop
sbb
sub
int
ds
mov
repnz
xchg
pop
push
out
mov
fisubrs
ja
add
jns
loopne
xor
inc
leave
jle
pop
jo
xchg
cmp
cli
jnp
imul
mov
cmp
mov
and
add
sarb
out
dec
jecxz
ds
rorl
and
cmp
bound
push
test
xor
loop
mov
inc
cmp
push
pop
mov
mov
xor
loop
sbb
pop
cs
inc
cmp
stos
jmp
mov
ja
jb
jns
mov
out
movsb
sarb
notl
imul
push
loop
or
add
arpl
and
fiadds
out
jne
aam
in
mov
mov
inc
cmpb
jae
jb
jno
ret
ret
sub
add
out
pop
push
push
cmp
rcll
cmp
das
sbb
mov
or
int3
sub
idivb
outsb
dec
jle
jge,pt
ja
xchg
mov
imul
and
pop
xchg
and
js
movhps
ds
or
xor
mov
popf
repnz
int
push
xchg
mov
addr16
sbb
insb
adc
push
adc
inc
fs
xchg
sbb
testl
jbe
xor
sub
sbb
jno
and
out
xor
or
push
add
jae
or
dec
test
or
xchg
ljmp
mov
adc
shr
xchg
push
and
xchg
xchg
mov
xchg
nop
stos
rcr
adc
pusha
loopne
jg
xor
mov
lahf
mov
mov
shll
inc
in
cmp
insb
and
mov
mov
inc
or
adc
cli
pop
ja
sar
adc
shlb
js
sub
mov
mov
mov
jbe
jb
jne
cmp
ss
pusha
lret
jp
jl
xchg
rclb
add
xchg
mov
or
lock
cli
add
popa
jne
sahf
jnp
sub
adc
cmp
negl
push
pop
cli
pop
call
pusha
pop
add
or
ja
mov
pop
mov
clc
insb
in
mov
sub
mov
push
pop
jbe
mov
cmpsb
dec
cltd
daa
inc
lahf
incb
add
call
and
mov
and
cmp
cmp
jb
pop
ja
dec
and
rcrl
inc
popf
test
pop
add
ret
cli
jge
paddusb
lcall
popf
test
and
ret
loopne
mov
test
jp
dec
lcall
push
pop
pop
sub
mov
add
arpl
jge
xor
adc
les
outsb
add
mov
mov
jle
sbb
inc
addr16
loopne
andl
pop
pop
xor
push
mov
pop
push
sahf
icebp
loop
enter
xorb
mov
pop
inc
sub
and
jb
adc
jnp
aaa
pop
rorb
sbb
sarb
inc
sahf
jb
js
pop
loopne
das
shl
xlat
outsl
sbb
sbb
aas
mov
pop
pop
pop
cli
adc
orl
adc
mov
sbb
dec
xor
subb
mov
dec
loop
pop
and
jg
roll
sbb
lods
insb
stos
pop
jp
pop
arpl
je
pop
dec
add
push
xchg
pop
es
xchg
xor
inc
adc
repnz
mov
mov
aaa
mov
clc
pop
sarb
bnd
shrb
stos
add
sarl
jo
cmp
sub
int3
push
push
dec
cmp
mov
inc
push
imul
sbb
adc
push
cld
inc
jbe
inc
push
or
mov
sub
jbe
xor
iret
idivw
data16
sub
loopne
jle
bswap
jne
lcall
loop
nop
inc
insl
cmp
out
push
in
and
xchg
adc
xchg
push
cmovae
bound
sbb
ja
add
dec
lcall
push
movsl
rcl
in
dec
sub
les
inc
std
out
cmpsb
add
loop
adc
adc
cmpl
inc
inc
repnz
lods
shrl
pop
or
push
push
call
add
outsb
mov
mov
add
dec
mov
stc
inc
push
jle
mov
not
jo
repnz
aad
into
gs
adc
stos
sahf
xchg
in
pop
jo
cmpb
mov
into
jle
gs
sahf
mov
arpl
pop
les
popa
mov
xchg
jge
dec
pop
xchg
push
add
pop
bound
movl
dec
cmp
push
sbb
mov
pop
pusha
jge
inc
loop
mov
xor
out
jge
das
mov
imul
orl
out
ja
adc
pop
jl
cli
jbe
aaa
adc
mov
sub
insb
push
inc
and
pop
adc
mulb
fstl
mov
adc
jo
xchg
sub
or
and
jns
ja
pop
and
push
or
inc
iret
sarl
js
xchg
jae
icebp
sbbb
inc
rorb
shlb
andb
lods
popf
mov
and
and
xchg
xor
stc
into
cmp
mov
cmp
scas
lcall
sub
mov
cs
push
pusha
dec
add
or
insb
mov
mov
outsb
jo
adc
xor
jo
or
insb
dec
bound
xchg
pop
inc
push
mov
out
push
and
or
jo
jg
mov
cmp
sub
push
imul
and
fiaddl
icebp
je
ljmp
and
hlt
push
cmp
jp
cmp
jae
cmp
and
fwait
cmp
mov
jns
jge
jnp
jle
ljmp
and
leave
mov
addb
jp
rolb
sbb
into
and
bound
pop
push
dec
pop
arpl
push
insb
enter
xchg
pop
jle
pop
mov
orl
push
xchg
add
or
sbb
xor
push
push
inc
dec
cmpsb
ret
push
push
sub
inc
and
sub
add
mov
and
add
cltd
inc
xor
inc
mov
iret
and
adc
xorl
mov
aam
mov
push
call
fnstenv
pop
pop
pop
sub
out
add
cmp
int
imul
adc
enter
ficoml
in
cs
mov
sbb
pop
int
mov
jne
jmp
out
inc
xchg
jp
adc
in
mov
xchg
out
push
fiaddl
inc
cmp
fbld
xchg
pop
mov
add
xor
push
mov
jns
push
inc
inc
sub
push
bound
negl
xchg
add
js
in
cmp
and
pop
cs
sub
sub
daa
ljmp
mov
mov
rorb
sbb
outsl
jo
inc
fsubs
sti
popf
xchg
jnp
xorb
fsubrs
pop
ds
mov
arpl
bound
clc
push
cltd
inc
sbb
add
jle
sahf
xchg
add
mov
idivl
push
pop
xor
mov
mov
lret
add
lret
sub
dec
lods
jno
xor
nop
sbb
hlt
js
jb
shlb
dec
orl
or
cmp
adc
imul
sbb
scas
push
adc
insb
ficoms
push
test
mov
jb
cmp
push
add
inc
fisubl
or
push
xor
fwait
stos
je
pop
and
clc
push
out
outsl
lcall
popf
es
or
xchg
jmp
mov
xchg
jns
inc
add
inc
adc
outsl
lcall
xlat
and
sbb
daa
loopne
sub
add
arpl
mov
lret
mov
fcoms
adc
xor
dec
incl
shl
es
sub
shrb
pop
xor
xor
sub
popf
adc
adc
mov
adc
lret
stos
pop
xor
dec
ds
into
jecxz
xor
mov
sbb
in
push
inc
push
dec
dec
lds
pop
add
mov
inc
in
ficomps
pop
movlps
jl
pop
rdmsr
je
jmp
bound
push
cmp
add
push
pop
push
inc
into
ret
cmc
dec
ficompl
jbe
repnz
mov
and
push
test
push
push
popf
mov
jp
ljmp
testl
jg
xchg
jns
repnz
mov
jg
out
jl
xchg
mov
xlat
and
hlt
sahf
xor
mov
inc
mov
and
and
sbb
mov
add
xchg
jg
insb
adc
data16
mov
iret
cmp
out
jo
dec
test
dec
cmp
sub
jle
shll
out
inc
pop
ficoms
xor
or
sub
scas
mov
or
push
bound
cmp
push
loop
repnz
es
push
fldenvs
lret
jne
lods
sbb
push
inc
cli
rcr
add
rclb
sbb
les
lds
pop
pop
incb
pop
fwait
xchg
ds
cld
jp
inc
scas
sub
sbb
ret
outsl
incb
sub
call
cmp
clc
xchg
adc
rol
and
in
or
mov
stos
ja
sbb
and
daa
es
mov
mov
sbb
xor
imul
dec
xchg
addb
test
jg
and
or
jb
je
insb
loope
arpl
mov
add
sbb
push
ret
push
jbe
jecxz
push
jb,pn
xchg
je
push
es
pop
xchg
add
scas
sub
repnz
lret
repz
lret
dec
ss
adc
outsl
enter
jl
mov
outsb
aas
cmp
cmp
cmc
in
jge
mov
jns
add
jl
hlt
mov
mov
nop
xor
arpl
loope
and
out
cli
push
fstpt
or
mov
inc
and
and
push
ret
adc
ja
inc
inc
ret
repnz
pop
outsl
adc
pop
loope
stos
cwtl
test
mov
xorb
push
or
jae
sbb
imul
jb
in
imul
imul
add
cmp
dec
or
data16
dec
jae
inc
andl
scas
mov
aad
add
xchg
mov
pop
dec
jb
std
inc
push
dec
cmp
pop
sub
mov
out
je
rolb
cwtl
and
loop
add
xor
pop
js
and
mov
jbe
and
push
jl
outsb
ret
shlb
push
cmp
stos
test
lret
xchg
cmp
cmc
dec
insb
icebp
jne
fcomps
add
push
inc
or
fldl2e
push
sbb
jae
sub
jmp
ja
jnp
pushw
mov
and
ja
mov
push
in
shll
push
inc
sub
xor
fisubrs
pop
jp
ret
sti
arpl
cmp
push
mov
inc
jbe
xor
cmp
emms
scas
lcall
ret
mov
arpl
sahf
and
sbb
aas
out
sbb
stos
sub
sbb
pop
push
xor
inc
sbb
xor
ss
les
and
lock
outsb
insl
imul
mov
addb
add
mov
lcall
adc
fcmove
mov
jbe
cmp
inc
lds
cld
adc
and
lret
and
xchg
or
aaa
dec
outsl
enter
test
xchg
fcomps
and
push
imul
stos
push
mov
or
cli
lret
movsl
jns
es
jmp
jbe
lea
imul
call
stc
and
lret
push
pop
dec
fnstsw
lds
mov
mov
mov
jp
leave
cmpsl
in
jl
enter
jle
lea
bound
or
jle
push
sub
push
and
pop
dec
gs
aas
sahf
sbb
inc
fmuls
xchg
das
jb
testl
mov
int
jnp
add
mov
add
push
jle
imul
lcall
inc
sub
fisttps
jnp
cmpl
and
and
call
cmpl
cmp
loop
xchg
jb
mov
sti
mov
jecxz
lcall
adc
add
jg
aam
inc
and
and
in
jo
mov
cwtl
divl
push
pop
push
pop
cmp
jnp
int3
mov
cmp
push
dec
mov
xchg
or
int
adc
pop
jb
outsl
aaa
cmpb
pop
rcl
fcomps
pop
inc
inc
movntq
idivb
movsl
xor
add
rcl
pop
adc
mov
push
or
sub
add
in
mov
mov
bound
lcall
pop
push
roll
ja
jecxz
jns
imul
pop
dec
sub
call
leave
rcrl
dec
jmp
mov
push
shlb
adc
pusha
dec
cmp
or
mov
push
jl
inc
rcrb
jge
in
sahf
ret
cmp
idivb
adcb
pop
xchg
repz
xor
mov
adc
data16
pusha
dec
cmpb
fwait
movsb
call
or
pop
stc
pop
xchg
mov
xchg
arpl
push
vbroadcastf64x2
loop
sbb
sbbb
jns
xor
inc
jae
popf
inc
iret
test
adc
fsubr
pop
jmp
sbb
jno
movsl
ret
sub
xorb
aad
sub
fs
adc
aad
xorl
mov
lret
xchg
inc
pop
dec
xlat
cmpsb
add
mov
addb
push
stos
xchg
daa
inc
fisubrl
add
xor
mov
pop
movsl
stos
dec
or
cmpb
mov
lret
mov
or
mov
mov
je
hlt
out
loop
jbe
stos
addl
mov
subl
ret
fisubrl
es
adc
roll
add
out
repz
outsl
sahf
sbbb
or
add
mov
bound
daa
rcrb
cmpb
inc
ljmp
testl
pop
aaa
jne
enter
sbb
test
adcb
mov
hlt
jo
push
incl
xor
push
push
pop
lock
push
jg
and
call
or
or
or
dec
aaa
dec
popa
das
addb
fcomps
mov
nop
sub
lret
mov
jg
popa
xor
add
loop
sub
add
push
mov
pop
mov
inc
sub
popf
and
pop
lret
mov
cmp
icebp
sbb
cmp
inc
sub
test
pop
in
cmp
in
mov
enter
outsb
mov
nop
xchg
loopne
ret
mov
sarb
jecxz
loop
shr
scas
movsb
cmp
sub
add
and
dec
add
movl
cmpb
das
incl
js
dec
or
dec
pusha
add
rorl
or
adc
out
je
push
stc
out
jmp
pop
sbbb
js
sbb
lods
pop
rolb
mov
xchg
mov
call
pop
aas
cwtl
ret
clc
outsl
data16
dec
xor
cmpsl
ret
cli
addb
frstor
mov
ret
lsl
jg
sahf
or
imul
xchg
and
and
lods
xchg
sub
dec
in
cmp
enter
dec
ret
adc
jmp
mov
mov
insl
lcall
jecxz
scas
scas
in
loop
ret
xor
lods
loop
jnp
push
cmp
ds
mov
data16
imul
mov
cmp
shlb
arpl
orb
add
std
je
xor
in
hlt
bound
cmp
testb
je
mov
mov
repnz
dec
insl
andb
jl
dec
mov
lret
pushf
pop
push
lahf
sti
inc
mov
add
adc
lock
arpl
mov
inc
xorl
sub
fwait
repz
or
add
mov
sahf
jg
xchg
sbbb
loopne
jg
jo
sub
and
push
pop
out
sbb
cmp
dec
xchg
ljmp
movsb
mov
andb
mov
push
add
fwait
cld
lcall
and
pop
enter
mull
push
repnz
sub
jg
push
jmp
iret
xchg
xchg
cwtl
pop
out
jecxz
jb
jo
pop
sub
imul
sub
clc
cmc
insb
cmp
mov
lahf
fwait
lret
cmpsl
sysret
imul
adc
inc
pop
rcrb
mov
cmp
pop
jmp
sti
adcb
orb
sbb
sbb
imul
hlt
ljmp
adc
scas
sbbb
pop
pop
call
lods
xor
jge
inc
push
inc
pop
dec
call
fisubrl
mov
push
inc
rolb
xchg
sahf
jge
enter
mov
shll
inc
jecxz
orb
fwait
push
mov
scas
cli
rorb
pop
jnp
fiaddl
pop
add
arpl
insl
andb
or
stc
cwtl
les
ss
loop
js
fld
sbb
sarb
cwtl
gs
fucomp
shll
andl
les
arpl
inc
mov
jmp
add
pop
jae
jbe
xchg
xor
jecxz
in
gs
ret
xor
addb
es
clc
mov
incb
xchg
sti
sub
add
xchg
fcomip
test
cmp
jbe
sbbb
push
ja
sub
fidivrl
push
mov
jp
out
mov
popa
inc
push
nop
ret
pop
andb
adc
sub
dec
sbb
add
cltd
out
andb
or
xorb
mov
data16
ret
jp
inc
push
xor
xor
xlat
or
lock
pop
fnstenv
jg
iret
or
xchg
xchg
jp
cmpsb
sbb
cmp
push
and
push
adc
add
in
adc
mov
aas
sbbl
popf
add
jns
in
jg
or
sbbl
sbbb
dec
fsubr
add
sub
loop
inc
sub
push
in
arpl
mov
add
xor
add
lret
gs
ret
jg
sub
pop
aas
pop
adc
aam
push
push
add
cmpl
test
mov
sbb
jl,pn
jne
xchg
xchg
mov
sbbb
adc
les
mov
inc
lcall
ret
pop
cs
mov
mov
imul
js
jno
aas
dec
bound
add
fs
and
xor
mov
cmp
pop
add
popa
andb
and
subb
adc
dec
subb
je
and
aaa
ss
push
addb
cwtl
xchg
adc
test
stos
pop
shrl
lods
mov
xorb
aas
or
adcb
flds
lock
movsb
jecxz
sbb
in
imul
inc
jge
or
jle
mov
test
lea
imul
add
lods
into
inc
ja
push
cmpb
jle
loop
imul
inc
add
xorb
sbb
adcb
xchg
push
mov
add
fbstp
add
stos
sub
fwait
sbb
mov
je
outsl
pop
out
jmp
leave
adc
into
adc
repnz
addb
incb
popa
test
cmp
cmp
js
addr16
punpckldq
mov
inc
rorl
aam
adc
dec
xchg
subb
cmp
data16
outsl
jl
xor
push
mov
dec
mov
mov
xorb
mov
subb
inc
inc
subb
mov
adc
and
mov
lret
sbbb
jg,pn
sub
sbb
or
shll
mov
mov
sbb
aad
inc
xchg
sbb
dec
pop
cs
mov
sub
dec
subps
mov
lret
cmpb
test
inc
adc
pop
xor
sahf
repnz
lods
cld
sbb
push
xchg
fs
mov
jno
hlt
aam
sub
std
pop
push
lcall
aam
xlat
jnp
rcrl
and
xchg
sbb
fisubs
mov
inc
mov
andb
mov
andb
js
insb
or
cld
adc
aas
inc
incb
mov
mov
cs
ror
pop
leave
stc
ljmp
push
jnp
sbb
int
jo
xor
mov
push
addb
cli
xchg
add
and
dec
cmp
psadbw
scas
jg
test
das
xchg
jnp
or
fbstp
lret
addl
in
mov
ffreep
outsb
fsubrl
andb
xor
cwtl
repnz
retw
add
sub
jle
iret
aaa
rol
dec
cmp
sub
push
inc
sub
out
xorl
xor
lds
subb
sub
mov
call
iret
sti
lods
push
repnz
push
data16
xor
mov
pop
fildll
pop
xchg
sub
rclb
adc
ja
pusha
xor
jge
jnp
adc
and
mov
xor
inc
mov
popa
orb
and
mov
shlb
orl
int3
mov
out
push
orb
or
sar
and
adcb
mov
mov
gs
xor
inc
decb
bound
push
push
jp
ljmp
pushf
out
mov
cmpsl
adc
pop
sbb
orb
repnz
mov
call
jnp
mov
or
insb
push
jae
lods
andb
enter
hlt
subb
push
jle
icebp
jecxz
and
jns
insb
loope
add
sbb
adc
int3
cmp
rorb
jns
jb
loopne
sub
add
xlat
mov
mov
dec
icebp
outsb
addb
cmp
and
sbb
andb
push
sbb
pop
add
jnp
xor
or
jmp
add
push
or
rorb
andb
sub
jle
jl
xor
js
and
dec
ret
push
out
xchg
addb
fisttpl
das
popa
add
cmpsb
dec
popf
adc
ja
xchg
dec
in
adcb
int3
cwtl
dec
imul
push
ret
stos
jl
inc
adcb
fucomi
pop
dec
jne
movsl
leave
pop
aam
sub
xchg
mov
in
mov
pusha
cs
inc
or
nop
orb
xor
subb
fstpl
pop
cld
les
subl
fsubl
sbb
sbb
or
mov
loopne
dec
inc
roll
mov
enter
fiaddl
out
pop
jae
call
dec
test
es
inc
or
addb
cmpsb
pop
shrb
xorb
jnp
addb
mov
cmp
jl
dec
ficomps
jnp
pop
into
enter
mov
fs
mov
add
sbb
jnp
inc
outsb
into
std
scas
jecxz
imul
daa
or
lahf
pop
dec
mul
xchg
ljmp
and
es
roll
inc
das
sbb
xorb
and
mov
nop
nop
andb
adc
jmp
aad
push
adc
data16
subb
mov
mov
enter
and
sbb
jecxz
or
call
mov
outsb
idivb
sbb
xor
add
pop
std
and
mov
sbb
mov
test
scas
jae
xchg
mov
mov
gs
stos
jae
aam
rol
sub
in
cli
push
and
mov
mov
andl
repnz
daa
lods
mov
outsl
push
andb
repz
lea
in
ret
sub
insl
push
lcall
xchg
imul
aad
sbbb
lret
push
sub
xchg
subb
lahf
jb
mov
fisubs
mov
pop
add
xorb
test
in
and
js
xchg
cmpsb
cmp
cs
mov
inc
pop
call
loopne
data16
push
add
or
into
cmpsl
hlt
xor
subl
mov
mov
lock
stc
or
inc
and
cmpl
leave
sub
stos
mov
fs
pop
adc
sti
mov
adcb
loop
je
into
pop
adc
push
sbb
add
roll
cwtl
jg
sbb
mov
clc
mov
or
ja
test
inc
test
sub
cmp
addb
mov
imul
inc
xchg
insl
cmpl
ret
xorl
sub
mov
int
mov
cld
mov
push
jbe
dec
mov
int
out
push
sarl
pop
add
sbb
mov
or
fwait
adc
jbe
mov
jnp
and
sahf
xor
mov
jge
fdivl
or
inc
dec
out
pop
mov
dec
or
xchg
jle
lds
cmp
repnz
xor
inc
ret
jae
xor
push
ffreep
rcrl
das
dec
dec
sbb
repz
loope
push
outsl
popf
xchg
out
testb
xchg
xchg
faddl
lock
pushf
and
mov
add
test
add
lcall
inc
popa
ljmp
lods
sub
jae
push
lret
xchg
in
cmpsl
sahf
insb
sbb
incb
xchg
daa
push
mov
sub
ret
roll
add
inc
sub
aam
sbb
pop
std
jne
jnp
aaa
adc
repnz
test
subb
lods
sarb
nop
jne
dec
cmpsl
cmp
addb
mov
jg
and
nop
add
in
inc
add
add
xchg
ret
leave
mov
movsb
push
jle
daa
pushf
sahf
jne
adcb
bound
mov
add
inc
push
fildl
out
or
das
adc
xor
pusha
lea
adc
xchg
sahf
pop
dec
mov
aas
sahf
aaa
xorb
pop
sbb
cs
inc
ret
aad
jg
mov
ljmp
lret
xchg
pop
fstps
dec
fninit
popf
aas
inc
stos
xchg
subb
xchg
fdivr
inc
mov
mov
dec
push
int
mov
lds
js
inc
mov
imul
jle
or
mov
push
inc
out
dec
cmpb
jle
ljmp
shrl
add
dec
cmp
insl
pop
inc
rclb
movsl
lret
loope
dec
cmpsb
lods
ljmp
call
in
into
adcb
jns
pop
mov
data16
jl
push
and
test
into
cmpb
stc
adc
adcb
stos
cmp
sub
std
dec
and
in
rcrb
idivb
ficompl
subb
push
mov
shrb
inc
mov
dec
cmpsl
push
xor
fsubp
cli
push
and
inc
mov
adc
fistps
lea
sub
cmpb
mov
out
fcompl
subb
sbb
xor
popf
cli
and
jge
jg
push
sbb
es
xlat
outsb
sub
dec
sbb
add
and
adc
sbb
popl
add
xchg
push
subb
loope
mov
lods
stos
stos
xor
jg
cwtl
lcall
in
aaa
movsl
outsl
sub
push
jnp
test
inc
out
pop
sbb
adc
xor
addr16
lods
outsb
dec
jno
push
ret
xchg
xchg
mov
loop
mov
sub
out
push
sub
jnp
jmp
jbe
shll
sbbb
pop
xor
adc
into
addb
jnp
test
in
pop
and
xlat
xchg
andb
xor
addb
inc
in
clc
xchg
inc
mov
ljmp
cld
in
mov
jecxz
scas
imul
mov
and
push
lcall
mov
cmp
dec
add
mov
xchg
inc
xchg
sbb
sti
fildl
andl
xchg
pop
test
xchg
mov
scas
cltd
test
sbbb
sbb
orb
add
mov
sbb
mov
fcmovbe
add
or
orb
mov
movsl
loop
xchg
sub
out
in
cltd
je
incb
or
leave
jo
jae
cmpsl
add
xorb
in
jl
add
ljmp
mov
mov
scas
mov
mov
xchg
cld
mov
mov
or
mov
jns
push
subb
and
ret
xor
test
cmpb
inc
or
cmpsl
inc
mov
push
cmp
aam
insl
sub
imul
xor
leave
repnz
mov
adc
cmp
sbbb
sarl
shlb
movl
cmpb
ret
rolb
sbb
addb
mov
cmp
out
je
or
je
and
adcb
mov
cli
popf
insl
dec
xorb
jmp
inc
fstl
add
jecxz
shll
or
fildll
xchg
cmpsb
xor
cmpb
in
icebp
cmc
insb
jge
inc
outsb
add
ret
incb
mov
mov
mov
jb
xor
fadd
aam
xchg
daa
data16
cmp
sarb
pop
cmp
negl
sbb
orl
jl
rcrl
out
or
mov
dec
xchg
and
sbb
sub
ja
cmpb
mov
or
insl
test
test
subb
or
cwtl
and
dec
inc
popf
jbe
imul
push
subb
jp
aad
nop
das
add
fidivs
lods
dec
nop
rolb
ror
popf
or
dec
in
aaa
or
adc
pop
inc
mov
insb
push
je
dec
add
add
mov
lods
adcb
roll
cs
orb
ja
test
cmpb
jmp
push
orb
mov
sbb
dec
push
bound
mov
sbb
orl
popa
or
rolb
dec
mov
jnp
jle
jo
and
popa
movl
repz
pop
mov
lcall
adc
add
add
cmpsb
addb
push
xor
xlat
jnp
gs
mov
pop
decb
and
scas
lock
xor
cmp
fwait
in
push
shlb
rcrb
add
gs
ret
in
mov
addb
test
inc
roll
fdivr
mov
mov
add
fs
test
jae
loopne
mov
inc
imul
push
test
rol
mov
sti
dec
xorb
repz
les
mov
jecxz
je
testl
sbbb
jg
fs
adc
sub
sbb
adcb
and
es
mov
sbb
insb
je
mov
xchg
jle
loope
popa
lret
pop
aad
lcall
pop
fisubrl
cwtl
in
je
testl
test
inc
fldt
xor
xor
adc
daa
adcl
xchg
mov
aaa
push
movsl
jno
mov
movaps
mov
and
mov
lahf
pop
loop
rorb
cmp
inc
inc
adc
into
pop
inc
dec
push
mov
jnp
xorb
pop
adc
cmpsl
fcom
ss
sub
add
adc
or
cmpsl
sahf
ljmp
xlat
ret
adc
sbb
aad
pop
xor
leave
aam
int3
loopne
cmp
sbb
mov
xchg
mov
int
pop
inc
xor
nop
xchg
mov
sub
jnp
pop
mov
xchg
enter
xlat
adcl
and
pop
and
in
subb
jp
ss
je
arpl
xchg
loop
or
jnp
or
lret
les
dec
lret
sub
test
cwtl
cltd
jae
orb
mov
subb
hlt
iret
lret
cmp
repz
aad
lds
jae
stos
adc
mov
lret
xchg
cmpsl
adc
jge
sti
gs
ret
mov
push
mov
push
adc
ret
inc
dec
cld
lods
xor
fistpll
fs
fidivrs
sbb
xchg
xlat
adc
dec
cmpb
leave
fs
or
out
outsl
cltd
jbe
xchg
mov
mov
ret
or
adc
sub
inc
mov
fldcw
mov
scas
mov
add
insb
cmpb
rclb
lods
decb
fs
xchg
xor
jnp
cmp
xchg
sbb
scas
add
in
enter
leave
lcall
jp
ds
sbbb
inc
sub
xor
cltd
or
xor
jb
mov
mov
imul
cmpsl
filds
cmp
rcrb
xor
fsubs
dec
push
hlt
lds
pop
sub
test
or
add
xchg
and
add
ds
test
sub
orb
push
inc
arpl
jb
rcl
add
inc
pop
pop
int
data16
push
mov
cli
mov
scas
fwait
js
and
jmp
xor
pop
xlat
jg
jo
lcall
adcb
movsl
loop
ret
sub
movsb
add
push
mov
mov
mov
movsl
adcb
dec
test
shrl
je
fwait
push
test
adc
das
je
mov
jmp
cmpsb
orb
mov
addr16
out
mov
dec
fisttpl
fidivl
mov
cltd
or
inc
pop
add
pop
dec
inc
fsubl
add
or
jnp
xchg
or
xchg
fs
mov
add
je
cs
push
pop
xor
pop
push
bound
test
inc
jnp
ficoms
push
neg
or
xchg
adc
sbb
pushf
imul
pop
cmpsl
and
lods
ret
dec
loop
xchg
jle
xchg
mov
repnz
lret
sub
mov
mov
push
dec
adc
mov
bound
jmp
xor
js,pn
jnp
xlat
adc
sbbl
mov
xchg
or
adc
mov
and
js
and
add
repnz
add
fs
std
cmp
in
push
dec
mov
testb
ds
mov
js
loope
adc
cmp
dec
and
outsl
addb
push
call
imul
adc
sub
jmp
mov
sahf
imul
mov
ret
mov
add
push
aad
and
sbb
inc
cmpb
icebp
cmpsl
outsb
xchg
bound
jae
imul
mov
sbb
dec
test
addb
jg
sub
scas
sbb
rcr
mov
lret
and
xor
in
mov
mov
out
orb
inc
enter
or
jg
lods
loopne
inc
adcb
xchg
test
mov
out
and
mov
adcb
lock
out
lcall
push
cmp
jae
sti
ret
std
cmp
jmp
outsb
inc
stos
ret
dec
addb
mov
inc
in
cmp
push
cltd
addb
cwtl
push
clc
lods
sub
jnp
cmpsb
fsts
ljmp
iret
jnp
jno
and
int
in
pop
movsl
push
xchg
leave
sbb
sahf
shrl
mov
adc
scas
xchg
imul
mov
cli
ljmp
and
enter
hlt
fcmovnu
movsb
out
cmp
adc
mov
mov
pop
mov
scas
add
push
pop
subb
out
cmp
mov
loop
cs
pop
jg
push
add
pusha
ret
mov
pop
in
push
and
or
mov
xchg
out
inc
sub
pusha
jg
iret
sti
pop
lahf
cmp
sbb
mov
fwait
test
andb
inc
nop
ss
adc
mov
mov
push
mov
jnp
fiaddl
jno
das
cmc
cli
cld
subb
lcall
push
fcomps
and
and
jcxz
fnstsw
jb
fs
xor
je
jbe
inc
addb
loope
or
and
loopne
sub
out
mov
jns
je
out
stos
add
and
or
cwtl
sbb
sar
inc
or
popf
sbbb
das
leave
xchg
xorb
test
rcll
xchg
xor
sbb
sub
jp
xor
adcb
loop
jo
inc
orb
xor
xchg
cltd
adc
adc
andl
pop
mov
outsl
insl
or
xorb
fsubrs
inc
jmp
push
lock
sbb
insb
iret
nop
mov
daa
xorb
sub
jecxz
mov
movsb
mov
jb
call
sbb
aam
dec
addb
ss
fyl2x
adc
ret
out
cmp
in
outsl
jne
mov
inc
cmp
or
sbbb
sub
jmp
ret
fsubrl
adc
mov
add
mov
lcall
shl
pop
sbbl
push
cli
dec
movb
bound
sub
push
fnsave
mov
orb
pusha
xor
and
rcll
adc
dec
xchg
movsb
fdivl
sub
jbe
sbbb
fisttpll
test
fistl
in
xchg
and
xor
ds
cs
add
and
shrl
movsl
jecxz
mov
jns
mov
sbb
into
sub
inc
subl
push
jnp
xchg
jbe
imul
or
xorb
dec
adc
and
loop
imul
lcall
xorb
and
adc
ljmp
pop
push
and
pop
or
mov
jl
jb
movsb
das
xchg
sahf
pushf
xor
pusha
xchg
stos
imul
idiv
mov
ss
ja
sbb
jae
psadbw
lods
lock
xor
mov
out
faddl
mov
xlat
in
icebp
les
mov
dec
mov
nop
testl
cmpsl
push
into
dec
mov
fdivs
mov
lock
test
sti
xlat
fwait
dec
stc
repnz
push
imul
sbb
sub
jg
shll
sbb
dec
add
aam
fdivs
sbb
pop
lcall
arpl
push
jnp
sbb
pop
sub
out
stos
ljmp
add
out
fwait
cli
pop
cmpsl
adcb
in
inc
test
inc
mov
mov
hlt
lds
xchg
lods
cltd
sub
push
jnp
mov
loope
outsl
xor
jg
sub
clc
icebp
lcall
dec
mov
lahf
addb
pop
mov
sub
xlat
adc
mov
or
fistl
sti
and
ljmp
fsubl
sub
mov
xchg
cwtl
mov
test
loop
mov
scas
jle
ds
sbb
sbb
xchg
jp
or
jnp
push
and
mov
int
call
pop
sbb
xchg
xchg
push
xor
fildl
xchg
mov
adc
pop
pop
mov
mov
scas
cmp
sbbb
and
push
loop
inc
outsl
mov
les
stos
mov
xchg
and
jl
mov
fs
pop
je
mov
aas
inc
movsl
insl
inc
jmp
loop
loop
push
incb
scas
push
inc
jle
jo
adcb
addb
cmpsl
push
test
out
es
mov
jae
push
aas
sti
je
mov
inc
cmc
cmp
andb
cwtl
dec
xorb
jns
ss
push
jg
jmp
addl
orb
fs
popa
add
jno
movsl
jbe
and
leave
stos
and
fdivl
addb
inc
xor
imul
sahf
cwtl
out
or
sub
and
inc
sbb
xchg
dec
subb
into
movsl
push
adc
xor
mov
imul
adc
sarl
insb
cmp
jns
pop
out
sbb
lock
xchg
cmp
rol
loope
pop
add
dec
mov
out
gs
cltd
sbb
lock
jns
mov
inc
xchg
fstpl
add
jg
jecxz
push
pop
mov
popa
mov
fdivs
push
jne
xlat
lds
lret
push
xorl
orb
adc
jg
xchg
loopne
mov
xchg
or
inc
add
sub
aam
adc
scas
mov
icebp
mov
push
pop
xor
mov
mov
fwait
jne
incb
inc
cmpsb
add
mov
add
adcb
mov
ret
cmpb
lret
mov
movsb
enter
inc
loopne
add
ret
sbb
js
inc
and
imul
cmpb
pop
push
ss
xchg
or
xchg
std
sub
aad
mov
push
pusha
inc
out
mov
adc
test
je
mov
js
mov
outsb
jnp
adc
jbe
ret
pop
fldenv
mov
ret
inc
fcompl
or
scas
aad
cs
jb
jmp
decb
dec
jecxz
pop
add
sbb
cmpb
push
subb
mov
sbb
repz
and
lods
inc
lods
cmp
xor
add
jle
or
lret
fwait
lods
add
addb
xor
std
insl
add
call
scas
test
push
and
add
xor
jnp
call
add
shlb
jae
mov
cmp
pop
ret
into
adcb
stc
and
fadds
mov
jl
in
clc
andl
or
jle
xchg
mov
push
inc
add
sub
inc
addb
call
mov
jae
std
pusha
jne
xor
adc
mov
adcb
orl
inc
addb
push
push
sar
aas
ja
dec
xchg
jg
pop
arpl
ss
sbb
cwtl
loope
jg
insl
sbb
sbb
xchg
lcall
mov
push
cmpl
xchg
cmpsl
arpl
loope
leave
sub
fiaddl
stos
cmp
addl
sub
pop
adc
icebp
xlat
sbb
test
adc
xor
mov
add
jge
lret
xlat
out
cmp
jno
mov
mov
mov
jg
sub
cmc
fwait
mov
mov
lahf
xor
mov
cmp
daa
movsb
inc
inc
fs
imul
sbb
popa
cmp
and
or
and
jo
xor
pop
popa
mov
inc
adcb
fstp
xorb
arpl
mov
das
cmp
pop
xlat
leave
mov
pop
andb
jge
adc
and
ss
ret
scas
mov
dec
rolb
mov
sbb
cmp
bound
inc
mov
adc
scas
insl
loop
pop
inc
js
lahf
mov
data16
inc
mov
mov
add
not
sti
iret
jmp
in
and
and
pusha
jae
inc
jno
fisttpl
push
jb
mov
inc
mov
sub
cmp
iret
pop
mov
testb
fadds
fldl
pop
inc
in
pusha
andb
xlat
cs
adc
mov
mul
push
sti
mov
inc
stos
push
cmp
xchg
cld
movsb
add
mov
nop
imul
xor
andl
out
jge
aad
andb
out
dec
lret
xchg
sub
inc
xor
cli
and
fdivs
jg
dec
cwtl
push
lds
push
cmpsl
sub
dec
cs
push
sti
mov
or
jmp
and
adcb
inc
and
add
adc
add
jnp
cs
rcrl
or
sbb
decl
push
in
push
xor
and
jnp
lcall
lock
jb
sub
and
popa
sbbb
sub
int
add
addb
fadd
inc
mov
cwtl
sbbb
in
xorb
insb
dec
btr
mov
or
les
adcb
rcrb
orb
xor
adcb
cs
pop
aam
scas
and
push
adc
data16
andb
jno
test
fiaddl
dec
sbb
jae
mov
cmp
int3
jae
pop
stos
sbb
mov
adc
pop
ret
sahf
ljmp
mov
and
mov
in
mov
cmc
jns
subl
push
fs
bnd
xchg
andb
xchg
inc
fimuls
inc
dec
push
icebp
jnp
pusha
scas
adc
push
or
or
movsb
dec
mov
rclb
sub
cmp
sarl
dec
xchg
mov
in
mov
xchg
push
into
orb
fcmovnbe
dec
aas
ret
addb
dec
xor
mov
jecxz
xlat
lret
xorb
sbbl
and
popa
push
mov
addb
pop
mov
push
mov
and
push
and
jns
subb
repz
aas
adcb
je
push
bound
sbb
inc
insl
fs
inc
push
ss
fs
cmpsb
push
inc
dec
xor
adc
xchg
adc
out
mov
add
xchg
stc
cmpb
ret
inc
ja
add
sbb
jg
test
testb
jnp
or
mov
jns
jnp
jno
push
inc
jb
xchg
dec
pop
cmpb
outsl
push
mov
push
inc
or
or
cli
sbbb
lea
cmpsl
aaa
mov
mov
ja
jnp
lds
ficoml
sti
mov
jo
pop
iret
fwait
addb
cmp
lods
adc
lcall
sbb
sbb
repnz
mov
and
jns
jnp
dec
add
addb
dec
adcb
stc
mov
or
imulb
jno
adc
xor
push
add
mov
arpl
inc
inc
cmpsl
out
xor
mov
xor
mov
lods
or
jecxz
push
rol
adcl
orb
sub
sarl
lcall
ss
ret
lahf
and
or
add
fldcw
into
andb
cmp
and
xor
xchg
sbb
rclb
add
std
cmp
aas
lret
imul
test
cmp
sbbb
xor
clc
mov
pop
adcl
jns
mov
hlt
fists
mov
jnp
cmpsb
xchg
jbe
jnp
stos
test
in
pop
imul
or
pop
cltd
jno
mov
adc
xorb
mov
jg
xor
out
jmp
fcmovb
divl
dec
and
xorl
cwtl
int
outsb
jmp
enter
subl
pop
inc
mov
sub
out
iret
mov
jmp
sub
subb
jae
mov
xor
ss
sbbb
fcoml
movsb
sub
cmp
dec
mov
aam
push
sti
xor
mov
cld
mov
jg
add
bnd
jne
mov
outsb
jnp
orl
scas
adcb
sub
loop
sti
fs
ja
out
outsb
bound
stos
orb
fwait
xchg
mov
data16
stc
add
xchg
mov
pop
mov
out
inc
sub
pop
sahf
sub
jnp
push
imul
cmpsl
jge
mov
lahf
aam
dec
adcb
xchg
sti
add
add
pusha
rcll
std
lds
jnp
and
jp
xchg
fs
push
addb
pushf
pop
add
cmp
cltd
sub
subb
andb
jns
popf
dec
cmp
add
and
adcb
inc
dec
popa
pusha
mov
jge
sub
mov
lret
in
pop
in
insb
xchg
cmc
add
enter
dec
jle
jns
pop
adc
clc
adc
jb
ret
out
bound
pop
arpl
andb
jno
push
lds
cmpb
add
push
jae
sub
adcb
jle
sbbb
or
outsb
mov
testl
pop
ret
xor
movsb
jnp
fldenv
subb
mov
sahf
ja
adcl
xchg
subb
mov
call
xchg
subb
fidivrs
pushf
in
pusha
lcall
out
adc
insl
xchg
in
jge
lods
aaa
add
sbb
cmp
dec
adc
xor
lahf
jne
inc
xchg
insb
std
add
pop
cmp
imul
loope
fxch
outsb
jg
xor
jge
cli
push
jnp
and
inc
arpl
pop
sub
mov
subb
cmp
addb
in
andb
mov
addb
cmpsb
js
jle
and
imul
add
dec
add
cmc
xchg
insl
jne
xorb
icebp
sub
adc
lahf
xor
bound
mov
xchg
adcb
jl
andb
pop
ja
int
mov
dec
mov
xor
add
mov
sub
pop
jns
in
shlb
divb
push
and
push
adcb
jge
xchg
mov
mov
push
sahf
xorb
dec
adc
jae
sbbl
ret
mov
adc
scas
hlt
push
mov
gs
enter
mov
ja
fwait
inc
inc
in
xchg
mov
and
out
fs
subb
movsb
out
cli
inc
pop
cmp
sbbb
mov
jae
imul
dec
jo
jnp
and
mov
dec
sbb
mov
sub
xchg
sarl
inc
loope
fs
aam
inc
ja
stos
mov
ss
mov
cmpb
push
imul
ret
xorb
inc
jl
mov
xor
and
ljmp
int3
push
jo
push
in
addb
loopne
mov
subb
inc
add
dec
lcall
or
or
pop
and
enter
mov
inc
das
fimuls
andb
and
subb
jmp
xchg
sbb
mov
loopne
xchg
ljmp
les
subb
orps
inc
pop
ret
push
ret
jae
jp
mov
sbb
mov
nop
dec
push
xchg
rorl
ja
mov
loop
mov
and
loope
mov
adc
cmpsb
pop
push
cwtl
shll
arpl
stos
push
loop
add
pop
in
add
pop
ret
popf
stos
and
push
icebp
jg
das
cmp
inc
jmp
mov
mov
repnz
and
xchg
loopne
adcb
ret
adcb
ss
jnp
xor
testl
mov
outsl
mov
mov
push
sti
mov
rcr
jg
cmp
xchg
loopne
cld
sahf
addb
dec
xchg
cmp
lret
push
hlt
bound
push
stos
adc
pop
test
cmpsl
icebp
orb
rol
dec
inc
add
data16
pop
stc
ja
fdivs
mov
orb
int3
je
mov
sbb
sbb
xorb
pop
xchg
lods
or
nop
ljmp
ja
lret
subb
fcomps
jae
mov
ds
pop
jp
cmp
push
push
push
addb
rcll
pop
stos
orb
stc
inc
cltd
ss
mov
mov
and
mov
add
or
pushf
popa
orb
fcomp
add
sub
sbb
clc
push
insb
ret
mov
data16
inc
mov
cmp
jb
jl
shrb
cmpb
dec
data16
daa
test
cmp
cmpsl
cmp
les
arpl
lods
add
mov
sbbb
inc
jb
dec
aaa
jle
nop
pop
pop
fdivrp
test
push
ret
jg
mov
repnz
lret
popf
mov
mov
in
js
dec
lret
xchg
cmp
or
rolb
inc
bound
pop
das
jmp
xor
jecxz
in
into
pusha
mov
mov
adcb
dec
subb
in
or
pop
mov
in
aas
jge
and
jmp
mov
xchg
test
xchg
aad
adcb
cmp
icebp
int3
orb
pop
adc
test
scas
jecxz
dec
xorl
or
inc
fwait
sub
out
mov
adcb
and
pop
sbb
push
or
dec
stos
movl
lods
repz
jg
dec
xlat
in
pop
jle
scas
mov
xchg
dec
mov
arpl
data16
mov
addb
stos
cmpsb
jbe
fnsetpm(287
xor
je
scas
jnp
inc
je
dec
pop
sbb
jg
mov
jl
repnz
add
pop
push
das
test
xor
jecxz
add
subb
std
cwtl
cmp
in
rcrb
daa
adcb
sarl
jno
mov
mov
inc
ret
dec
rolb
outsb
push
xor
mov
test
adc
fcoml
jae
dec
lea
xlat
push
emms
orb
inc
ret
push
dec
outsl
xor
mov
push
fwait
std
andb
subb
jle
or
sbb
sbb
xor
jo
dec
call
mov
sbb
lcall
je
data16
ret
xchg
pop
and
ss
sti
adc
gs
add
loop
mov
mov
shl
inc
imul
fidivrs
lods
jge
sub
add
and
mov
jno
jg
subb
clc
mov
sbbb
lea
mov
push
setl
jge
loop
cmp
jp
adc
cmpsb
inc
addb
addb
cmpsl
cmpb
lods
mov
and
xor
jno
clc
add
xor
test
fildl
scas
inc
aaa
dec
sbbb
cmc
leave
mov
loopne
mov
push
movsb
insl
xchg
arpl
int3
add
sbb
adc
pop
cmp
je
inc
mov
cld
fsts
adc
fmul
scas
or
and
leave
arpl
cld
ret
sbb
mov
aaa
out
jno
sbb
stos
lcall
and
adc
dec
and
inc
aas
movsl
sarl
out
iret
lock
loop
aad
adcl
addb
add
cmp
js
mov
push
xchg
push
movl
sub
dec
leave
push
xor
pop
or
subl
test
popa
popf
jae
dec
dec
nop
inc
jns
and
push
jge
and
or
jg
loopne
dec
fcmovbe
jl
andb
out
inc
je
aad
push
xchg
inc
insl
in
in
cmp
fwait
andb
sub
jno
xor
pop
sbbb
push
push
andb
fs
inc
shlb
add
and
sti
aam
lods
adc
shl
push
sub
xchg
andb
jp
jg
add
scas
pushf
cli
push
sub
cmp
flds
cmp
scas
cltd
aas
pop
mov
ret
adc
and
clc
sbbb
lcall
push
mov
and
lods
fsubrs
jecxz
fisttpl
sub
out
ljmp
out
add
out
ds
lret
sub
frstor
shl
ret
leave
mov
and
mov
jle
std
aam
enter
jbe
mov
subb
mov
andb
pushf
mov
pusha
out
pcmpeqw
xchg
cmpb
mov
mov
mov
nop
push
add
ret
rorl
ret
inc
fstpt
jnp
jno
daa
and
inc
mov
mov
xor
and
or
mov
insl
mov
iret
or
xchg
cld
sbbb
faddl
push
shll
mov
jmp
push
repnz
jmp
sub
ret
adc
fisttpl
sbb
and
sub
subl
movsl
xorb
loop
cs
xchg
xor
movsl
ss
bound
pop
aaa
in
pop
push
cmp
dec
sbb
jne
js
push
jnp
sbb
sub
test
lods
xor
insl
dec
or
gs
imul
xchg
and
adcb
lods
insl
and
and
and
push
subb
cmpsb
push
xor
pop
mov
jnp
xchg
push
pop
andb
fnstcw
outsl
rcrb
mov
pop
ds
leave
jecxz
nop
scas
clc
add
popf
adc
push
and
stos
in
addr16
inc
orb
sub
shll
sbbb
cmp
push
lret
stos
sbb
push
dec
orl
roll
inc
mov
add
add
or
adc
xlat
lods
addb
ret
mov
pop
inc
xchg
sbbl
jbe
inc
mov
xor
cli
dec
jp
lret
aad
jmp
sbb
lret
jg
aaa
out
rcll
jae
jo
iret
ret
dec
pop
mov
sbb
jnp
inc
popl
sti
movsl
subb
mov
jg
stos
cmp
decb
jo
loopne
aaa
adcb
iret
jae
mov
and
lods
rcll
inc
push
cs
xor
repz
xor
pop
lods
ss
xchg
and
out
ret
mov
clc
sub
notb
fstpl
cmc
jmp
mov
lahf
not
mov
xor
in
pushf
inc
ss
aas
jae
inc
icebp
inc
and
push
mov
and
cli
stos
cmpsl
orb
xor
jae
xor
mov
mov
pop
sbb
jnp
cltd
and
arpl
mov
loopne
push
push
dec
jnp
je
xchg
adc
fcmovne
push
mov
sbb
xchg
and
mov
cmp
stos
cld
sbbb
mov
mov
sub
mov
data16
arpl
xchg
pop
adc
push
les
aas
sbb
jg
outsb
stos
and
push
lahf
cwtl
stos
shll
mov
push
loop
subl
pop
mov
sub
mov
xorb
sbbb
popa
dec
ja
popf
call
mov
xchg
repnz
subl
es
lret
jle
mov
sti
xorl
jge
push
enter
ffreep
nop
popf
dec
call
xchg
push
out
jnp
subl
push
orb
jmp
shlb
out
add
cmp
arpl
mov
or
outsb
fldt
push
bound
loop
out
xchg
mov
aas
mov
or
addr16
xchg
out
test
xor
repz
adcl
adc
adc
adc
fs
jae
jle
mov
int3
imul
scas
sbbb
incb
cltd
dec
movsb
jbe
lock
test
and
jno
popf
xor
gs
or
and
inc
popa
sbb
out
fdiv
repnz
pushf
adcb
adc
rolb
xor
dec
andl
lds
int
mov
je
sub
stc
xchg
shlb
xchg
fs
ret
jle
or
mov
mov
sub
sbbb
aaa
fcoml
push
mov
or
nop
mov
xor
dec
ret
xchg
mov
movsb
cltd
inc
ljmp
push
add
adc
add
dec
dec
stos
subb
push
push
repz
xor
dec
push
pop
inc
ficomps
add
dec
ja
stos
pusha
bound
ss
adc
js
dec
mov
cmp
aaa
nop
jbe
pop
xchg
xor
adc
in
ja
dec
ficomps
loope
mov
xchg
mov
dec
fmul
lods
les
cs
cmpsb
inc
sbb
inc
lock
dec
push
and
adc
adc
inc
cld
cmp
addr16
enter
test
pop
jnp
cmp
jge
xor
fs
xchg
aaa
adc
dec
cmp
iret
ret
imul
xor
mov
mov
or
pop
nop
cmpsb
stos
sbb
xor
lcall
jbe
iret
pop
sbbb
xchg
subb
dec
adc
into
fiaddl
pop
push
sarb
jg
mov
cmp
fmulp
in
pop
and
divb
jnp
mov
mov
jge
xchg
dec
stos
test
lock
outsb
popf
aam
xchg
pop
lea
sbbb
icebp
mov
mov
push
adc
ret
push
subb
adc
mov
sub
ja
xchg
sbb
ret
push
sbbb
sbbb
dec
sub
aad
lods
sbb
cmc
sarb
subb
repnz
inc
inc
jo
sbb
and
cmc
mov
sbb
ljmp
xchg
in
jecxz
loope
push
mov
subb
adc
ljmp
inc
pop
out
mov
test
inc
inc
sahf
daa
xor
pop
fisubs
out
ret
inc
cmpb
out
addb
sub
ret
push
fistpl
cwtl
xchg
xlat
cmpb
je
setle
cmp
movsb
adc
inc
xchg
xor
fs
push
andb
xorb
push
int3
inc
clc
or
sarl
or
test
mov
es
scas
movsb
jecxz
pop
fmuls
fiadds
loopne
aaa
adcb
popa
xchg
mov
jg
int
add
hlt
mov
dec
mov
aaa
ss
sbb
xchg
mov
inc
enter
fcmovnu
subb
cmp
adcb
pop
push
and
add
subb
or
xorb
or
sbbb
rol
imul
add
mov
aad
pop
or
cwtl
add
int
bound
mov
sbbl
mov
mov
sbb
cli
mov
mov
ret
in
std
add
xchg
gs
subl
xorb
fs
cmp
cmp
xorb
cltd
ljmp
mov
jl
daa
xchg
push
xchg
jg
jg
mov
jo
stos
scas
adc
fs
adcb
jbe
repnz
xorb
or
inc
loop
add
popf
jns
int3
stos
or
out
lock
jp
or
adcb
add
enter
push
hlt
xor
dec
lcall
push
dec
je
roll
mov
sbb
mov
push
imul
jle
lcall
dec
dec
out
mov
lea
loope
lods
xlat
in
push
and
inc
scas
popf
cs
sub
inc
adc
or
mov
push
fisubl
push
popa
xorb
sub
pop
mov
in
xorb
jp
and
jle
pusha
push
ds
in
ret
sub
mov
sarb
xchg
jb
push
pop
sub
aam
insb
adc
cmpsl
orb
icebp
mov
lods
push
test
loop
cmp
push
into
jne
pop
jb
cmp
mov
dec
mov
adc
ljmp
ret
addl
dec
mov
movsb
mulb
push
daa
jae
jne
gs
cmpl
push
pop
fisttpl
sbb
sub
dec
ljmp
das
cld
arpl
ficoms
rolb
iret
xchg
jg
divl
cmp
or
cmp
je
mov
xchg
and
lahf
addb
mov
adc
fiaddl
idivb
xchg
shlb
fmull
or
push
rcrl
mov
xor
addr16
bound
dec
inc
fisttpll
inc
fstps
lret
lahf
shrb
filds
xor
imul
add
stos
sbbl
jle
popa
imul
rcrl
add
insl
pop
call
inc
push
mov
insb
xor
xchg
jae
jnp
pop
aad
stos
cmp
int
cmpb
cmp
mov
inc
addb
jb
jnp
sbb
aaa
jg
in
jge
pop
addr16
shl
add
mov
lret
inc
add
scas
jnp
or
enter
loope
push
fidivs
mov
mov
loopne
push
adc
lea
addr16
ja
xorb
and
push
mov
add
fwait
add
stos
jg
mulb
lcall
addb
push
andb
xor
sahf
mov
sub
out
test
jg
xchg
mov
enter
cmp
jnp
mov
sbb
ret
enter
inc
pop
add
xchg
mov
pop
xor
add
xor
mov
bnd
stos
lods
test
nop
push
in
push
xchg
xor
mov
jno
addb
sub
jmp
pop
lcallw
xor
cmpb
icebp
ljmp
out
ret
adc
mov
jnp
jbe
sti
mov
and
push
mov
cltd
outsl
ret
outsb
addb
adc
cmp
scas
sub
dec
push
jnp
je
jns
loop
pop
ds
scas
push
jnp
daa
pop
dec
shlb
leave
gs
and
sub
push
or
adcb
adc
hlt
jo
xlat
mov
out
or
xchg
mov
fmulp
stos
mov
ret
cmp
faddl
pop
mov
cmpb
outsb
testl
andb
fwait
loop
xchg
add
les
adc
xor
push
filds
cwtl
mov
pop
por
hlt
mov
movsl
inc
mov
sub
add
jnp
xorl
jmp
orb
jae
jne
add
and
adc
andb
pushf
add
push
mov
outsb
dec
nop
xor
cld
xchg
fs
fbstp
imul
jns
pop
push
push
inc
jg
sub
in
push
lahf
add
aas
sahf
adc
mov
inc
jbe
add
in
cmp
into
mov
pop
rol
subb
test
jg
push
mov
cwtl
lcall
jns
adcb
dec
and
gs
sbb
mov
dec
flds
popa
or
je
jne
addb
add
push
lcall
incl
imul
fadds
sarb
jb
and
movsb
orb
popf
daa
push
add
or
xchg
dec
popa
in
je
fcoms
sub
push
testl
jg
mov
test
scas
ret
xchg
addb
shlb
in
jb
sub
subb
dec
arpl
mov
inc
psllw
dec
cmp
cmp
sub
jge
jae
cmp
sub
pop
push
xorl
xor
in
bound
mov
imul
andl
jp
sbb
js
std
fisttps
jnp
out
push
fiaddl
orb
xor
fimuls
dec
orb
jge
cmp
mov
rcrl
xor
adc
add
xor
aaa
cmc
xorb
inc
push
adcl
dec
inc
fwait
sbb
ret
mov
jno
jmp
leave
pusha
sbb
jg
lds
mov
xor
inc
pusha
mov
dec
jo
fucomp
xchg
or
addb
fwait
push
xor
sbb
dec
insb
loop
cli
in
imul
or
das
push
subb
in
cmpb
cmpsl
imul
sub
mov
push
insl
adc
incl
cmpsb
push
or
pop
call
js
stc
je
xor
mov
jg
adc
jae
sub
loopne
into
inc
ljmp
rclb
xlat
imul
orb
jl
pop
in
arpl
add
repnz
pop
int
mov
mov
pop
adcb
mov
pop
xor
dec
xchg
fwait
outsl
jns
sbb
push
push
daa
loope
cld
sub
mov
rolb
jno
ret
xorb
jbe
push
xorb
inc
int
cmp
add
loop
add
out
mov
subb
mov
xorb
cmp
loopne
mov
or
cmpxchg
xchg
mov
bound
pop
push
enter
jg
mov
fidivs
in
outsl
orl
sub
cmp
repnz
popa
lock
push
addl
or
jno
scas
mov
push
roll
cmpb
lcall
mov
mov
jae
xchg
cpuid
cltd
int
aaa
int3
addb
mov
and
mov
cmp
and
sub
je
test
addl
gs
sub
jbe
shr
test
push
jecxz
scas
addb
adc
outsl
jnp
subb
inc
push
inc
sub
xchg
add
mov
hlt
orb
test
subb
enter
xchg
fildl
or
and
andb
pushl
fisubrs
pop
xorb
sbb
inc
outsl
loop
add
in
les
xor
mov
push
addb
mov
mov
mov
xor
js
iret
mov
sub
cmpb
scas
pop
movb
inc
call
call
outsl
addr16
xchg
or
sub
jle
cmp
push
cmp
loope
repz
ret
pop
cld
test
rcrl
push
jns
rclb
in
sbb
orl
xorb
cmpl
xlat
xorb
sub
inc
adc
add
inc
movsl
or
aas
adcb
and
xchg
int3
xchg
mov
out
push
sahf
push
bound
mov
dec
and
add
adcb
xor
push
sahf
lods
dec
xor
fcoms
sub
es
jno
roll
lret
out
mov
andl
ret
fwait
push
cmpb
inc
add
cmp
adcb
push
mov
cltd
arpl
push
inc
jb
mov
or
loope
add
or
cltd
push
mov
arpl
fcomps
fbstp
repnz
in
push
or
add
add
or
cmp
jae
rclb
leave
jb
out
mov
aam
mov
pop
ret
xor
subl
mov
mov
adc
addb
inc
or
int
cld
fimuls
nop
jl
ret
inc
add
cli
mov
mov
cwtl
daa
jg
js
mov
fincstp
subl
add
inc
push
roll
pusha
das
pop
mov
jg,pt
push
sbb
fldt
adc
dec
xor
je
dec
subb
push
dec
or
lock
lahf
dec
and
fcomps
loope
and
add
sbbb
inc
or
aas
aaa
mov
push
cs
js
flds
pop
andb
sub
orb
aad
fnstsw
or
push
pop
cmp
int3
mov
ja
add
or
and
cmp
int3
cmp
rorb
jge
add
dec
fdiv
adcb
pop
insl
or
inc
adc
in
or
lods
mov
sub
mov
xor
push
jnp
stc
adc
pop
mov
push
mov
sbb
fwait
push
into
data16
and
jle
add
inc
cmp
mov
std
aaa
mov
out
or
xor
mul
cmpsl
or
fs
aaa
inc
mov
add
ljmp
sub
lfs
dec
mul
pop
outsl
add
mov
gs
adc
filds
xchg
addb
ret
add
xor
jmp
fistl
pusha
sbbb
mov
add
call
aad
lret
or
push
mov
inc
outsb
cmpsl
fldl
sbb
ret
scas
and
movsb
aad
sbb
addb
in
jp
add
cmpb
andl
dec
pop
adc
and
dec
stos
inc
mov
fs
gs
imul
adc
enter
push
bound
inc
or
push
repnz
sbbb
push
and
fimuls
add
arpl
sbb
popa
lcall
shrl
lods
pop
inc
lahf
mov
pop
popa
lds
rolb
leave
inc
jne
nop
inc
inc
push
movsb
cmp
and
and
cmpsl
rcll
dec
incb
inc
repz
cmpb
xor
ljmp
jl
mov
adcb
mov
push
aaa
cmpl
cmpsl
adcb
push
xchg
movsl
add
or
or
hlt
stos
cmp
mov
inc
xchg
lret
enter
fnclex
repnz
dec
cmp
imul
pop
push
scas
lcall
inc
mov
daa
arpl
cmc
rcrl
les
cmpsb
je
addb
fwait
and
test
out
jmp
adc
adc
or
cli
inc
iret
in
cmp
sahf
mov
inc
popl
jecxz
add
xor
in
sub
sub
and
mov
in
sbb
push
push
sbb
mov
pop
xor
cld
mov
jo
dec
rcll
jns
movsb
mov
push
lcall
mov
jge
shll
add
out
xchg
push
jbe
subb
push
jg
mov
mov
lds
mov
out
add
jne
jbe
mov
subb
and
bound
shrb
pop
push
adc
push
xor
xor
or
adc
add
xorb
scas
fimull
cwtl
jg
inc
sbb
xchg
jp
loopne
adcb
cmp
lods
mov
inc
push
aaa
cltd
subb
push
xor
jl
sbb
sbb
f2xm1
pop
or
cltd
xchg
repz
mov
sub
ret
jl
mov
add
and
imull
gs
adc
cmpsb
jnp,pt
and
or
push
rolb
stc
jb
sbbb
aam
cmpb
pop
fidivl
mov
pop
xor
cmp
call
std
jne
incl
jnp
lods
inc
pop
xor
sbbb
inc
push
imul
ret
xchg
mov
movsb
xor
sbb
cmp
mov
into
mov
js
pop
inc
dec
adcb
push
aas
filds
adcb
or
jnp
add
dec
fwait
xchg
je
pusha
push
into
loop
pop
and
xchg
adcb
xorl
getsec
aam
xor
jmp
jns
adc
add
lds
sbb
pop
xchg
je
ret
ret
mov
ret
addb
test
dec
cs
or
outsb
cli
xor
or
cmpsl
stos
orl
inc
subb
fwait
mov
sbb
mov
mov
and
lods
popa
add
dec
inc
std
sbb
add
mov
add
mov
cmp
insl
test
loop
xor
sub
out
cmpsl
popf
xor
jge
dec
jnp
jp
addb
clc
subb
lods
orb
push
adc
or
jae
shl
fsubp
add
xchg
push
add
outsb
jmp
in
add
cmpsb
hlt
testb
lcall
mov
cltd
add
jg
mov
mov
out
adc
andl
add
mov
jb
loopne
js
repnz
or
rorb
add
sbb
andb
aad
dec
data16
push
xor
fs
lds
lret
jo
lea
and
mov
sbb
test
ss
jle
lahf
cld
xchg
in
movsb
repnz
push
pop
xorb
stos
add
int3
and
out
in
dec
push
scas
orb
pop
inc
cmpsl
test
notl
xor
mov
repnz
sar
orb
jge
xchg
arpl
sub
xor
jo
add
xchg
mov
lcall
add
lahf
stos
scas
jb
inc
cmp
lret
adc
add
repnz
fiadds
lods
and
ss
cmpsl
mov
pop
and
lock
push
lret
jno
stos
ljmp
test
mov
push
lods
mov
leave
inc
ret
dec
aam
push
subb
xchg
dec
sti
int
and
jg
push
lds
xchg
rcll
enter
fninit
xlat
sbbb
xchg
add
pop
adc
mov
inc
dec
lds
mov
adc
mov
pop
mov
pop
mov
fbstp
or
and
xor
faddp
jns
stos
stc
fwait
subb
inc
iret
push
orb
inc
andb
jae
adc
jo
subb
xchg
add
jl
xlat
jb
sub
imul
mov
cmp
xorb
and
fisttps
adcb
mov
ror
push
inc
pop
jle
add
ret
sub
jae
cmp
jp
xor
hlt
jbe
inc
movb
xchg
fnstsw
pop
mov
mov
sub
mov
ds
sahf
sub
fmull
mov
jg
and
push
fmull
adc
cwtl
int3
mull
and
mov
fwait
rcr
xor
gs
jae
sbb
xchg
push
inc
int
sbbb
ja
out
ja
sub
leave
das
lock
push
and
aam
popf
adc
or
mov
cmpb
or
push
cs
adcb
cmpl
cli
inc
pushf
sub
dec
lret
pop
in
movsl
sti
insb
subb
add
or
ja
inc
pop
sub
repnz
out
jb
cmp
sub
or
pop
sub
fsubs
dec
repnz
jnp
push
arpl
mov
jle
fidivl
outsb
adcb
and
cmpb
das
sahf
mov
nop
adc
orb
sbb
mov
movsb
push
aam
or
addb
out
jnp
pop
jb
push
addb
inc
push
in
adc
or
das
rolb
fisubs
xorb
data16
orl
mov
pushf
loope
jge
mov
adc
and
movsl
mov
shlb
cmp
movb
mov
xchg
xor
add
inc
pop
and
sbb
cs
xorb
sarb
jecxz
xchg
sti
fldl
pop
mov
mov
cld
xchg
add
rcl
mov
sbb
sbb
add
push
pop
movsb
and
inc
sahf
in
dec
cs
jle
popa
addb
pop
testb
hlt
jg
repz
stc
sbb
insl
cmpl
into
subb
jp
es
sti
mov
xor
addb
dec
into
outsb
arpl
rcrb
mov
ret
mov
out
ds
sbb
cmp
testb
rcrl
iret
mov
stos
fidivrs
jae
data16
in
std
loop
outsl
mov
mov
adc
roll
and
pop
lds
sub
mov
jecxz
ja
icebp
addb
pop
push
insb
adc
inc
mov
fwait
add
sahf
pusha
adc
jecxz
sbb
std
jmp
jg
out
bound
inc
scas
sbb
pop
jle
stos
xchg
and
pop
scas
dec
sbb
test
cmpb
jns
xor
sbb
and
push
dec
pop
mov
imul
js
int
imul
test
in
ret
fisttps
or
adc
jmp
mov
je
jg
mov
shrb
std
push
inc
mov
lcall
outsl
mov
lahf
pushf
insl
pshufw
jno
jmp
aaa
or
inc
or
mov
int3
repnz
jae
push
ss
adcb
clc
dec
data16
popl
addl
mov
xchg
pop
and
leave
mov
lods
loopne
cli
jne
push
cmp
movsb
int
xorb
in
loop
scas
cmp
xchg
int3
je
push
subb
in
cmp
cmp
lcall
adc
pop
jle
and
scas
adc
pop
fwait
jns
cmp
fcmovnbe
push
loop
inc
jecxz
add
testl
imul
inc
addb
subb
movsl
rolb
push
iret
inc
andb
mov
and
movb
daa
pusha
rolb
lcall
xor
andl
je
mov
sub
dec
jnp
cmc
pop
fidivrl
push
xor
cld
xchg
pop
loop
scas
xor
cmpb
push
hlt
jg
adc
and
adcb
insb
inc
out
jns
loope
push
xor
testb
add
int
int3
pop
imul
sahf
lahf
movb
and
adc
sbb
mov
adcb
mov
div
pop
cs
xor
roll
xchg
or
adc
jp
mov
push
out
sti
sbbl
je
push
cltd
jle
in
ret
jge
hlt
pushl
popf
or
lret
lcall
push
ret
xor
popa
adcb
iret
sub
or
jge
ja
movsl
insb
stos
push
xlat
add
sbbb
addl
pop
inc
loop
pop
les
cmp
ret
jae
sub
cmpsl
push
inc
pop
jnp
in
data16
mov
bound
jbe
cmp
orb
data16
loope
or
pop
adc
mov
sbb
shr
scas
push
std
insb
fstpt
jae
cmp
daa
inc
dec
fidivs
inc
jg
js
xorb
sar
cmp
adcb
or
rorl
das
jno
xor
ds
sub
sbbb
rcrl
xchg
repnz
or
add
jge
dec
inc
ret
in
push
cmpb
mov
aas
mov
xorb
stos
xor
sbb
bound
jle
sub
rolb
andb
mov
sbb
in
inc
or
jg
and
fildl
dec
pop
pop
fdivrl
rolb
filds
mov
daa
repz
add
mov
loop
insl
testb
adc
add
inc
cmpsb
test
sub
dec
add
pop
adcb
jl
and
jg
xlat
mov
add
pop
lock
cmp
inc
adc
dec
test
mov
cmp
sbb
andb
adc
repz
add
xlat
je
repnz
stos
and
xchg
dec
inc
mov
adc
outsl
cmp
fldcw
jo
lods
dec
pop
adc
movsb
push
mov
cmp
mov
dec
lds
je
hlt
inc
push
add
xor
out
push
loop
cli
insl
xor
aad
imul
jg
sahf
sub
sti
push
adc
cmpb
jo
cltd
and
jae
imul
pop
push
sub
mov
and
sbb
pop
mov
sbb
stos
bound
and
imul
lret
or
pusha
in
test
inc
sar
je
sbbb
xor
orb
jae
push
cmc
movsb
jnp
xchg
test
push
frstor
jno
push
jnp
sub
mov
lcall
mov
mov
orb
adc
sbbb
adc
sbb
addb
xorb
cmpsl
inc
inc
add
jns
repz
orb
push
jne
outsl
lret
insl
jae
aam
roll
out
push
and
lret
pop
xchg
mov
orb
jmp
push
lods
ss
xchg
xchg
adc
hlt
add
subl
add
adc
enter
fildl
into
aam
test
cmp
repnz
or
fbstp
dec
mov
push
mov
in
xchg
insl
add
sbb
push
imul
pusha
inc
xchg
cwtl
dec
test
add
xor
fildll
or
iret
js
mov
jge
xchg
subb
xor
mov
jae
pop
xchg
cmp
cmp
rolb
mov
push
sti
add
fimull
mov
adc
pop
fucomip
add
dec
bnd
mov
push
mov
dec
and
or
add
out
arpl
in
jbe
repnz
js
aad
mov
inc
loop
lds
int3
sbb
out
sub
sahf
adc
cld
orb
fstpt
bound
jo
xchg
aad
dec
rcrb
xor
push
sbbb
xor
mov
outsb
push
int3
push
shrl
xorb
stc
sbb
out
cli
imul
cmp
jae
loope
int3
cltd
xchg
lods
mov
and
xchg
stos
neg
push
pop
addb
jp
fcom
adc
jecxz
lret
jbe
in
xchg
lods
addb
sub
ds
jb
sub
bound
roll
outsb
or
and
aam
jne
pop
push
jbe
andb
loop
cmpsl
dec
sti
push
test
mov
cmp
addb
cmp
addb
mov
and
cmp
ret
inc
sub
and
sbb
mov
mov
subl
cmpb
push
lcall
bound
in
jns
and
enter
ss
xor
pop
jo
sarl
out
loopne
xor
repnz
aaa
xchg
addb
rcrl
orb
add
jb
add
and
cmp
aas
sti
outsb
cs
insl
fldcw
rcrb
jnp
lods
sub
xorb
and
subb
sbb
outsl
rorb
sbb
lock
or
pop
bound
je
push
dec
nop
loop
jle
jmp
cmpb
mov
jo
xchg
scas
pop
pop
adcb
jae
icebp
aam
jnp
std
xor
arpl
jnp
push
lods
sbbb
divl
jl
xchg
loope
sub
stc
mov
clc
mov
add
nop
test
insb
std
flds
jge
sbbb
testb
inc
add
mov
xchg
orb
rcl
jnp
sbb
dec
push
xchg
pusha
outsl
out
orl
mov
and
adc
fstl
test
mov
ja
add
push
mov
out
push
cli
jb
xor
mov
outsb
test
mov
or
jg
pop
ja
mov
push
jo
cmpb
inc
cmp
mov
sbb
pop
pop
mov
xchg
scas
xchg
mov
out
rorb
sbb
jle
dec
call
addb
in
or
pop
cmp
push
sub
test
inc
inc
decb
repnz
lcall
xchg
xchg
mov
jno
sti
ss
loop
lock
lcall
adcb
shlb
stos
pminub
add
in
jnp
adc
push
stc
sub
inc
adc
sbb
xchg
push
pop
and
out
mov
ss
orb
sbb
clc
andb
lret
xor
adc
sbbb
mov
dec
dec
jle
jnp
cmp
leave
sbb
loopne
subb
xchg
cmp
cltd
xchg
mov
push
add
mov
lock
aad
dec
xchg
test
jns
iret
outsb
je
cmp
adc
hlt
pop
js
xchg
test
jmp
addb
mov
pop
xchg
mov
pop
sahf
insb
cltd
rol
jnp
push
imul
call
sbbl
lahf
jmp
les
push
movsl
jb
subb
cmpsb
iret
test
lret
jmp
cltd
aas
filds
xor
inc
ret
adcb
fiaddl
sti
jnp
daa
xorb
push
mov
inc
xchg
add
mov
cwtl
das
dec
cmpsl
fnstcw
out
inc
or
call
xchg
or
push
xchg
fs
inc
adc
imul
adc
push
pop
bound
test
mov
mov
mov
cli
ds
adc
and
sub
xchg
or
ret
mulb
adcl
push
mov
lds
xor
sub
lea
or
mov
addb
sbb
loop
pushl
icebp
out
push
adc
adcb
loopne
xorb
xor
add
sti
test
xchg
popa
arpl
xchg
pop
mov
mov
lret
cltd
inc
in
outsl
xorb
and
or
les
out
mov
int3
xor
mov
orb
push
inc
and
fsubl
lret
icebp
push
adc
mov
dec
sbb
out
aaa
jne
flds
ljmp
adc
mov
nop
sbb
cli
ret
sub
mov
movsb
sbbl
pop
out
and
mov
repz
dec
push
icebp
aas
push
cltd
and
mov
xchg
orb
outsl
inc
sbb
sbb
dec
mov
lret
addl
adc
imul
mov
sti
pop
aas
mov
cwtl
dec
filds
or
mov
xchg
jg
cmp
mov
cltd
test
insb
loop
cs
in
sbb
push
push
inc
mov
jp
bound
xor
add
addl
mov
xchg
ljmp
imul
jb
pop
inc
and
test
dec
sarl
jle
das
subb
pushf
nop
and
repz
mov
subb
test
pop
xor
mov
cmpsb
push
inc
hlt
mov
lcall
jnp
fsubrl
jnp
dec
lock
xor
jl
fists
pop
sub
add
subb
stc
sub
rol
pop
or
sub
pusha
test
std
push
mov
movsb
andb
int
sbb
roll
jae
test
jge
jno
dec
pop
dec
xor
mov
repnz
sbbb
clc
rorb
mov
inc
pop
test
mov
fsubs
pop
xor
sub
push
into
int3
adcb
data16
or
pusha
cli
ja
mov
aad
pop
sbbl
sub
insl
outsb
mov
cmp
sub
xor
in
es
mov
stc
adcb
movsb
cmpb
cmp
loope
jnp
pop
pop
movsl
sub
stos
push
fs
addl
stos
in
inc
adc
outsb
sbb
arpl
rcll
ret
into
mov
lock
pop
dec
xchg
cmpsl
cmpb
xchg
in
xor
and
icebp
iret
sbbb
shrl
cmpb
add
jg
fisubrl
addl
insb
inc
mov
sbbb
cmpsl
out
adc
add
loop
outsl
inc
cmpb
jne
mov
pop
insb
andb
call
loope
scas
sub
add
addb
xchg
loopne
add
ficoml
add
push
int
mov
jae
mov
inc
bound
adc
jb
inc
in
fildl
fadd
pop
adc
pop
cmc
inc
test
scas
push
mov
pop
sahf
mov
sbbb
ds
adc
xchg
add
push
pop
xorb
sbb
pop
jge
ja
and
rolb
jmp
aad
xchg
mov
dec
addb
repz
repnz
adc
gs
subb
xchg
dec
jae
mov
cld
ljmp
in
xchg
stos
add
xlat
or
or
cmpsl
mov
xor
push
aas
into
xor
adc
fwait
xor
jge
addr16
daa
mov
out
cmpb
mov
je
xchg
loop
adc
test
into
cmpsb
inc
xor
cmp
push
movb
cmp
cmp
xor
sub
leave
aaa
lds
mov
fwait
out
js
cltd
sbbb
push
andb
in
xchg
pop
or
shlb
clc
mov
incb
and
jge
aad
jl
add
cltd
movl
jg
xor
or
xor
jno
sub
jb
adc
dec
jnp
push
mov
and
divb
add
or
push
jnp
ljmp
and
or
push
sub
popa
xchg
xor
bound
sub
inc
adc
mov
pop
ret
mov
gs
xor
aam
fsub
pop
ret
xor
sbb
test
adc
cmp
les
xchg
orl
jnp
mov
sbb
sbbb
js
orb
mov
adcb
sbb
jle
lods
shll
fiadds
aaa
inc
mov
sub
addl
icebp
orb
jb
add
cmp
das
test
adc
inc
shll
jo
pushl
adc
loop
dec
mov
dec
add
pop
adc
popf
mov
dec
lods
cmpb
out
sarl
cwtl
outsl
cmp
xor
add
pop
cs
inc
fnstcw
ss
xorl
outsl
ret
cmp
mov
inc
inc
and
push
push
jae
sbb
sbb
xor
or
cmpsb
andb
lods
push
orb
adc
and
jbe
jge
testb
std
jae
jae
and
push
push
adc
fnsave
inc
cmpb
incl
and
sarb
add
cmc
test
aaa
jnp
psubw
push
addb
dec
add
dec
insb
std
lret
repz
mov
and
pop
jns
cmp
and
mov
movb
ljmp
icebp
xor
push
jnp
adc
cmp
rorb
mov
cmpsl
loop
push
jns
jne
lea
mov
sub
adc
iret
inc
jmp
roll
fwait
or
push
aad
fs
repz
jg
sbb
scas
sbb
pop
lcall
lret
sbb
test
push
adc
int
jg
loope
pushf
pop
bound
sbb
orb
push
sub
cmp
lahf
xchg
sbb
test
inc
cwtl
push
xor
cs
add
jo
movb
mov
or
jno
mov
sub
jnp
mov
les
adc
cmp
fidivrl
pusha
fstl
cmp
popf
or
inc
cmpb
lods
cmp
and
repnz
cmpsl
mov
lds
pop
add
add
jl
lock
or
ljmp
and
mov
mov
scas
sbb
int
cmc
xchg
lret
lods
jmp
loopne
xchg
push
outsl
add
fiaddl
aas
xchg
lret
pop
inc
scas
mov
shl
xchg
sti
cmp
adcb
lock
xchg
mov
je
movsb
mov
ljmp
push
mov
mov
mov
lds
arpl
jle
push
hlt
or
nop
and
subb
jns
and
pop
lea
push
mov
jmp
lret
arpl
dec
sub
andl
or
xchg
pop
pop
and
subl
adc
stos
scas
jnp
addb
cld
in
jle
aaa
xchg
adcb
xlat
sbb
cmp
adc
xorb
and
fdivrp
rolb
fiaddl
mov
jp
aam
mov
mov
sbb
xor
pop
shll
lret
add
imul
jbe
lds
mov
lahf
mov
stos
sub
ja
sbb
dec
push
nop
out
sub
xchg
add
pop
or
sbb
push
xchg
cmp
xorb
push
mov
sub
decl
divl
inc
mov
arpl
pop
xchg
add
pop
andb
or
jg
push
dec
mov
pushf
jmp
call
xorb
arpl
mov
jbe
int
js
xor
int3
inc
adc
add
xor
pop
mov
and
jns
rclb
lret
mov
cmpb
sbb
arpl
xorb
cmpsb
cmp
sub
push
cmpsl
add
inc
adc
sbb
sub
lret
pop
addb
data16
icebp
andb
lea
addb
sbb
fs
inc
cmp
dec
ficompl
fdiv
subb
mov
je
push
ret
in
mov
pusha
xor
cmp
test
jecxz
je
insl
pop
js
movsl
xlat
dec
aam
fldt
mov
push
andl
or
xorb
in
dec
adcb
pusha
movsb
aas
ret
lea
adc
or
aaa
cmp
lds
dec
ja
test
js
loopne
jg
xchg
mov
lret
or
fiadds
cs
cmp
flds
dec
xchg
adcb
bound
sub
sahf
sub
mov
mov
inc
mov
clc
addb
out
lods
and
or
dec
dec
and
mov
jge
push
sub
jl
movsl
mov
subb
loop
orb
and
inc
cmpsb
cld
mov
mov
call
jnp
pop
pop
jb
jge
mov
mov
js
xchg
pop
xorb
stc
cmpb
mov
andb
std
addb
xor
addr16
cmpsb
testb
roll
mov
mov
aaa
jno
inc
push
dec
in
push
push
cld
push
lods
repz
fisubl
adc
mov
lea
addl
addb
mov
orb
mov
cmp
push
jne
xlat
mov
sbb
mov
jg
mov
mov
andl
shlb
ljmp
sbb
mul
or
xchg
bound
mov
mov
movsb
inc
dec
aaa
orb
mov
ror
mov
xor
push
test
inc
test
int
add
xor
insl
push
imul
std
popa
jno
jmp
sub
xorl
leave
mov
sbbl
cmpsl
xorb
dec
data16
inc
sbb
push
bound
add
fisubl
jo
cmpsl
mov
cmpb
aaa
or
pop
and
ds
idivl
orl
mov
mov
subb
leave
divb
jmp
sbb
mov
iret
int
js
in
hlt
jne
or
xchg
xchg
andb
enter
fildl
loop
pop
adc
pop
out
inc
ljmp
mov
repz
mov
sub
inc
orb
dec
pop
mov
aas
les
cmc
test
mov
cmpsl
jmp
dec
cwtl
addb
fisttpl
movsl
std
xchg
cmpsb
sub
flds
test
xor
test
xchg
jae
dec
sub
mov
cltd
xchg
mov
int
mov
or
push
inc
lret
cmpb
in
xor
cld
ja
fildll
or
repnz
inc
adc
sbbb
andb
out
ds
jbe
shll
inc
pop
xor
cmp
lods
adc
cmpsl
adc
adcb
push
js
out
subb
call
inc
xorb
sarl
rolb
push
inc
cmp
test
test
dec
and
xorb
int
mov
cmpl
arpl
pop
pushf
inc
das
testl
fistpl
mov
xor
fistps
add
out
sub
mov
or
out
push
lret
test
adcb
jbe
fdivrl
add
cs
sub
cld
shl
mov
jnp
jb
pop
aas
jne
push
mov
aam
mov
push
pop
repnz
push
or
and
shr
sbb
or
jne
pop
or
push
cmpsb
push
pop
leave
sub
fnstcw
nop
and
ret
dec
and
gs
movsb
cwtl
jle
daa
lock
lcall
push
js
icebp
add
pop
decl
movb
int3
out
imul
out
add
and
loopne
adc
adc
dec
roll
add
scas
dec
ret
je
xchg
aaa
lret
fwait
mov
adc
inc
and
pop
sub
push
mov
or
jge
cs
imul
mov
loop
xor
stc
xor
into
sbb
bound
in
fldl
jnp
sti
inc
and
sub
adc
push
sahf
sbb
imul
xchg
lods
or
mov
add
or
xor
sbb
inc
lds
adc
jg
rclb
pop
cmpsb
fs
cmp
add
movsb
addb
pop
and
jle
addb
jl
xor
andb
aas
stc
add
lcall
addb
std
mov
paddusw
movsb
negb
rcl
adcb
dec
inc
jnp
stos
jl
inc
adc
jo
dec
imul
mov
push
and
les
int
xorb
ret
hlt
add
addb
ljmp
xchg
popf
in
lods
shrl
orb
or
aad
lock
nop
loopne
jg
jnp
xchg
outsb
dec
sahf
sbb
mov
leave
push
shlb
jnp
scas
mov
shll
xchg
testl
fcoml
dec
std
pushf
dec
cmp
mov
in
jle
scas
jecxz
add
inc
mov
test
jb
inc
xor
lock
or
push
pop
fmul
ret
mov
xchg
xor
jp
mov
ffreep
dec
xor
out
inc
mov
lahf
inc
dec
test
or
or
adc
pop
inc
jge
inc
sub
push
orb
and
dec
xlat
cmpsl
pop
sarb
inc
jbe
add
xchg
mov
lret
cmp
fildll
sub
out
mov
aas
xchg
int3
pop
fistpll
call
and
xchg
push
xchg
int
lock
mov
hlt
repnz
fnsave
xchg
mov
xchg
xchg
call
aaa
fucomi
stos
ja
cmp
push
xchg
adc
pop
insb
xchg
cmpsl
mov
scas
mov
mov
mov
sbb
pop
ret
add
push
pop
or
je
cmp
out
in
pop
pop
sbbb
mov
sti
movsl
lds
iret
insl
pop
or
inc
sub
jmp
dec
jnp
mov
in
in
xor
xchg
xchg
lock
dec
lahf
fwait
xlat
orb
jnp
xchg
push
ret
mov
jg
pop
cld
je
mov
sahf
cmp
orb
popa
jns
and
inc
push
add
bound
orl
lods
or
mov
cmpsb
fnstenv
xorb
movb
push
popa
or
fnstenv
insl
lds
outsl
xchg
int3
lret
and
mov
pop
je
mov
and
loop
xchg
push
xchg
adc
lahf
pop
xorl
movsl
xor
jle
insl
rcrl
xorl
movsl
adcb
lret
insb
cwtl
cmp
or
out
ljmp
sub
shlb
add
and
jnp
int3
add
aas
lret
push
inc
cmp
inc
fcoms
jnp
sbb
shl
in
scas
faddl
add
and
icebp
sub
movsb
xchg
add
insb
fdivs
jb
dec
xor
push
je
popa
pop
bound
icebp
hlt
int3
adcb
fisubs
lds
xlat
jne
mov
mov
mov
int
sti
nop
or
out
scas
mov
popa
mov
xor
push
roll
pop
dec
cmpsb
mov
mov
mov
push
iret
mov
push
pop
dec
or
das
xchg
sahf
adc
arpl
ss
jle
orb
bound
mov
mull
mov
ret
xchg
cltd
adcb
adc
jg
pop
ljmp
xchg
and
loop
stos
scas
pop
aas
xorb
aaa
xlat
xor
incb
sti
xchg
pop
jecxz
test
iret
subb
sbbb
inc
xor
hlt
push
addb
mov
adc
cmpsb
imul
test
xorb
and
orb
dec
test
jle
sar
imul
ds
mov
push
xorb
cmp
adc
nop
jg
push
inc
jge
cmpsb
cli
add
in
in
pushf
jnp
into
sub
xchg
cmc
jl
mov
and
into
push
jge
sbb
rcrb
in
data16
add
hlt
fdivrp
ss
orb
xchg
fnstsw
divb
movsl
add
sub
mov
lea
inc
aad
sub
sub
or
arpl
pop
push
push
jle
mov
inc
inc
mov
or
int
jle
sbb
lea
insl
ja
xchg
xor
push
push
mov
sub
cli
ret
aad
mov
sbbb
adc
sub
pop
cmp
mov
enter
stos
int3
lds
sbb
mov
xchg
xchg
cmp
insb
jns
xchg
add
rcrl
je
mov
dec
roll
mov
xorl
test
inc
pop
push
loop
inc
lret
repnz
adcb
xchg
jmp
xor
fstpt
mov
sub
cmp
je
fs
xor
xor
mov
lahf
xor
test
xchg
inc
push
adc
cmp
lcall
cmpb
cmpsl
sub
jg
push
and
add
sbb
jo
lret
jns
xchg
inc
ret
fnstsw
orb
mov
test
loopne
push
cwtl
push
jb
cmp
xchg
je
mov
ljmp
inc
mov
in
xchg
leave
dec
xchg
jbe
mov
jp
ret
xchg
jnp
outsl
stos
cmp
cmp
pop
jmp
lock
repnz
subb
fcmovu
leave
mov
aaa
jg
arpl
inc
pop
loop
das
rcrb
jnp
cmp
sti
adcl
rcr
adc
loop
imul
mov
xchg
aad
inc
xor
sbbb
push
jmp
cmpsb
lds
cld
xor
push
in
test
jmp
out
xlat
dec
cmpb
rclb
jle
push
inc
mov
lea
xor
jno
xor
fisttps
sbb
jns
cs
scas
jg
roll
data16
cmpb
sub
push
and
scas
dec
jbe
and
ret
jmp
fs
sbb
outsb
lds
sub
out
cmp
test
or
fwait
out
lock
cld
xchg
mov
sbb
fadds
jns
notl
add
sahf
jge
and
and
mov
int
inc
fcomps
addb
jbe
push
adcb
hlt
incl
pop
sbb
cltd
adc
and
mov
popf
fimull
add
or
pop
in
xor
sub
and
sub
or
shl
lds
jae
xchg
stc
add
fadds
sub
or
rcl
jo
xchg
and
jb
dec
addr16
jns
das
mov
andb
aas
icebp
popf
loopne
subb
sbb
sbbl
adc
mov
sbbb
enter
lods
test
push
addb
sbbl
jmp
dec
movsb
push
out
daa
jmp
mov
rorb
fldl
cltd
lret
push
repz
push
mov
or
dec
jg
fiadds
cmpb
pusha
jmp
cmp
jge
dec
adc
inc
sbb
jae
add
pushf
aaa
in
and
adc
orb
es
jmp
ret
out
push
jb
add
fsubrl
adc
aas
mov
je
dec
fstps
lods
xor
lret
jecxz
arpl
mov
addb
inc
test
nop
fwait
xorb
mov
arpl
pop
dec
or
adcl
xchg
jle
mov
in
add
imul
pop
out
inc
mov
or
insl
push
movsb
fcoms
data16
fistl
xchg
or
xorl
xor
shll
sti
inc
add
jl
shlb
pusha
orb
stc
fcoms
xchg
subb
pop
push
add
and
std
scas
icebp
dec
in
subb
push
fdiv
xchg
ds
orb
fistpl
inc
cs
das
subb
out
or
pop
or
mov
adc
nop
arpl
xor
aas
mov
loope
xorb
xor
pop
mov
js
or
xchg
sahf
inc
aad
adcb
pop
addb
outsb
mov
push
addl
ret
mov
sbb
lea
movb
mov
and
mov
push
subb
lahf
lock
cmpb
in
jne
int3
arpl
add
shlb
sub
and
xchg
repnz
or
inc
cmpsl
cld
shlb
dec
out
cs
adc
gs
mov
jmp
pop
mov
lahf
and
imul
cmp
adc
adc
or
inc
xor
jge
insl
adc
jnp
pushf
cmpsl
loop
jmp
aam
pop
in
clc
xchg
jns
or
push
ljmp
sbb
xor
mov
xchg
inc
pushf
roll
aad
push
xchg
xorl
int
jne
jnp
int3
cmp
shll
xchg
lahf
ret
inc
jns
sbb
mov
cmp
ja
adcb
fsubs
mov
daa
adc
dec
pop
jecxz
jg
cmp
arpl
stc
pop
loop
add
pop
je
xor
movsb
cmpb
lods
aas
adc
data16
and
adcl
dec
mov
leave
sub
mov
dec
clc
add
xor
push
cmp
addb
inc
mov
mov
jne
adc
popa
es
xorb
mov
ss
cmpsl
cmpb
add
or
cld
outsb
mov
addb
scas
jns
adcb
cmpl
add
jmp
push
shl
ret
jbe
inc
or
sbb
cmp
jge
or
ffree
subb
xchg
add
xor
int3
inc
ja
sub
cmp
sahf
inc
popa
sbb
and
bnd
mov
hlt
xor
adc
dec
xorb
pop
idivl
jb
sub
add
lcall
inc
sbbb
scas
sub
pushf
andb
inc
out
adcb
pop
cmpsl
lock
sub
andb
add
shll
and
jnp
daa
or
ret
cmp
imul
leave
fsubrs
xchg
lretw
xor
cld
insb
adcb
dec
orb
pop
sub
xchg
cmp
movsl
jb
xor
subb
mov
push
jecxz
fidivrl
xor
iret
addr16
aaa
sbb
inc
call
mov
inc
mov
movl
add
fbld
xorl
ret
adc
subb
out
mov
jbe
int
mov
imul
fiaddl
push
rcrl
js
das
stc
sbb
add
jne
mov
and
inc
shll
jg
dec
mov
bound
push
pop
cmp
popf
dec
subb
jae
xor
imul
aas
adc
subb
fisttps
xor
mov
xchg
bound
icebp
or
inc
adc
les
mov
mov
sbb
add
jp
sub
cli
add
and
lods
ret
imulb
out
or
stos
out
cmpsb
imul
ficompl
xchg
insl
cmpb
fstl
push
adc
xor
jg
mov
sbb
cmpsl
jns
lock
xchg
pop
xchg
subb
rcrb
add
mov
andl
mov
inc
mov
ss
in
mov
addr16
mov
test
pop
icebp
push
orb
stos
dec
xor
xchg
hlt
outsl
lds
or
cmp
sbbb
out
mov
dec
pop
sub
mov
mov
insb
mov
mov
xorb
fnsave
test
push
inc
cli
jae
xor
popa
sbb
mov
ljmp
fldl
iret
jo
loop
cwtl
and
mov
incl
test
mov
mov
pop
xchg
cmpsb
adc
dec
dec
mov
repz
pop
stos
mov
push
dec
shlb
test
mov
xchg
xor
mov
mov
cmp
imul
std
pop
andb
lods
push
mov
and
xchg
jg
or
test
lods
jno
cmpl
mov
outsb
adc
lret
or
mov
adc
int
lods
cmp
inc
rcr
andb
xchg
cmpb
xor
scas
cmpb
jnp
ret
mov
xchg
add
ss
lret
jnp
jns
push
shrb
ds
sbb
daa
clc
push
mov
pushl
int
xorb
jmp
jg
adc
mov
jg
pushf
adc
jnp
fucomi
mov
add
jecxz
jg
mov
mov
in
xor
add
lock
lods
jbe
loop
dec
mov
sub
add
push
adc
subl
add
cwtl
mov
mov
jmp
rcrl
jnp
popa
push
adc
stos
iret
add
sub
sbb
roll
jae
lock
in
sbb
icebp
xlat
jno
popf
inc
es
pop
mov
dec
out
push
sti
inc
xchg
rcr
das
out
xorb
jbe
sbb
in
int3
dec
lcall
push
or
dec
xor
jnp
fs
pop
push
aam
inc
push
and
arpl
inc
sub
cmpb
outsl
inc
or
sbb
subl
xor
add
add
add
cmpb
and
fldl
scas
rolb
dec
xor
adcb
mov
scas
shll
mov
andb
sbb
pop
stos
in
push
rcrb
andb
inc
incl
mov
cltd
iret
or
xorps
mov
lds
std
sbb
or
andb
ret
sub
cmp
sub
test
or
je,pn
in
ret
adc
rcr
pop
add
subb
sbb
rorb
cmp
xor
cmp
jb
or
pusha
ret
andb
pop
xchg
ja
data16
loope
out
fwait
push
test
pop
push
int
leave
orb
addb
cmp
xchg
insl
mov
add
jl
nop
aad
pop
ret
adc
mov
mov
movsb
or
xor
inc
mov
scas
jo
imull
js,pn
adc
cmpb
sahf
xchg
ljmp
shlb
das
stos
ja
popf
fdivrp
sbb
dec
mov
vcvtps2pd
loop
mov
fimull
lea
aaa
add
and
adc
scas
fwait
dec
cmpl
mov
xchg
cs
fsubl
mov
lcall
je
add
xor
and
mov
dec
jnp
inc
out
mov
sub
lds
fwait
mov
sbb
lret
imul
adcb
repz
lods
add
dec
repnz
sbbl
add
lods
mov
jp
pop
insl
ja
jge
lcall
cmpsb
movsl
xchg
das
xor
push
mov
sub
mov
mov
sahf
loop
add
ror
xchg
mov
pusha
push
arpl
std
mov
repz
or
test
xchg
mov
sarl
dec
inc
sbb
inc
loopne
repnz
sub
jbe
push
inc
imulb
test
mov
insl
and
push
push
push
orl
adc
aam
out
les
jge
out
mov
xor
cli
lcall
hlt
sbb
adc
fiadds
out
sbb
arpl
jo
and
mov
sbb
addb
xchg
cmp
xchg
orb
loope
iret
insb
pop
addb
inc
dec
adcb
mov
aad
in
sub
and
mov
test
es
xor
test
fsubrl
push
jp
repz
dec
push
xchg
out
sub
jno
rclb
cli
mov
stos
or
out
mov
je
icebp
push
and
add
xchg
pop
jb
cmp
mov
and
mov
in
fidivs
adcb
hlt
clc
jg
outsl
pop
lret
cmp
add
inc
loopne
faddl
scas
push
add
add
push
pop
mov
movsb
leave
cmp
and
inc
rclb
subb
xchg
cmova
int
add
xor
loopne
loope
xor
popa
cmp
dec
aaa
adc
andb
mov
adcb
ja
jle
jmp
pusha
loop
mov
and
push
ja
dec
mov
xchg
jecxz
sbbb
jp
orb
test
subb
pop
iret
xor
fdivrl
scas
andb
add
cmpsb
addb
lcall
xchg
ret
xlat
ret
andb
das
stos
mov
jl
subb
cwtl
sti
mov
xor
out
push
bound
push
loop
jle,pn
push
mov
enter
cli
incl
adc
fucomp
inc
xor
out
pushf
sub
push
jnp
inc
test
in
mov
rcl
sub
andb
mov
bswap
sbbb
push
outsl
andb
pop
pop
xchg
inc
incl
push
xorl
cmpsl
negl
sub
rcrl
xorb
mov
lock
jg
pushf
push
loopne
in
mov
clc
dec
adc
mov
fcoms
lock
das
pop
mov
sub
shlb
xorb
cmpsb
push
adcb
fsubs
sub
add
xchg
adcb
insb
push
dec
pop
add
notl
addr16
rolb
or
jp
adcb
mov
leave
scas
rcll
cmpsb
and
sbb
jae
inc
pushf
test
shrb
inc
sti
orb
add
pushf
push
pop
jle
ja
mov
mov
stc
icebp
xor
xor
outsb
xor
lods
xorb
sbb
sbb
push
inc
xchg
mov
mov
sbb
inc
rcr
orb
xor
or
iret
addb
mov
push
fisubrs
ret
dec
orb
adc
xor
sarl
push
movsb
dec
xor
cmp
adc
aam
mov
out
mov
ret
in
inc
ret
pop
mov
xchg
add
das
aas
hlt
repz
jle
jp
jnp
scas
xchg
jg
push
xor
arpl
lcall
ja
stos
push
pop
mov
add
sbb
push
je
fs
sbb
inc
and
lods
cmp
or
jle
popl
mov
clc
lcall
mov
mov
insl
xor
sbb
mov
inc
cmpsb
cli
iret
xorb
sbb
push
jnp
subl
cmp
pop
mov
cmpb
sub
push
stc
jae
addb
lcall
add
xchg
cmp
andb
fstps
fdiv
inc
lds
rcrl
test
je
orb
adc
xchg
andb
add
pop
mov
nop
xor
mov
adc
arpl
rorb
ret
fs
lret
add
ret
mov
cmpb
add
out
lahf
subb
sbb
jae
std
jg
mov
rolb
jo
sub
xchg
lea
sarl
test
or
imul
jg
add
and
mov
xor
stos
add
xchg
jge
call
in
sub
addl
mov
sbbb
cmpsl
inc
adc
mov
arpl
jno
test
mov
adc
cmp
xchg
das
push
lret
out
jmp
add
sub
js
xchg
out
cmc
mov
test
xor
lods
cmp
dec
loop
bound
nop
add
popa
mov
fsubrs
pop
mov
ss
inc
repz
pop
gs
cmc
dec
ljmp
cmp
push
inc
subb
movsl
push
or
lea
imul
fisubl
jecxz
and
mov
adcb
push
fadds
sbb
arpl
fucomi
sbbb
add
adc
pop
fstpl
mov
xchg
js
dec
pop
sti
fnstenv
xchg
adc
pop
sbbl
mov
andb
cmpsb
cwtl
adc
cmp
fstpl
out
cmp
adc
call
mov
incb
and
sbb
out
mov
jae
cmp
loop
addr16
orb
mov
adc
push
cmp
das
mov
push
sti
inc
loopne
cmp
sbbb
gs
add
sti
jns
xchg
sbbl
mov
jge
mov
ret
jbe
mov
inc
or
imul
subb
sbb
and
cwtl
int3
jnp
leave
out
addb
imul
push
mov
mov
push
iret
pushf
cmp
mov
or
jno
cmpsl
mov
pop
sahf
or
fnsave
sbb
adc
push
mov
out
ljmpw
call
mov
lock
pop
mov
adc
std
dec
popf
mov
scas
add
or
jp
push
subb
inc
popa
xchg
jb
fcoms
push
andb
mov
sub
jae
add
mov
adc
mov
mov
addl
sbbb
mov
or
sbb
jno
inc
mov
cmp
aas
sbb
cmpb
add
add
xlat
or
inc
mov
das
lea
jl
aam
imul
mov
loop
mov
push
addl
sbbb
loopne
jnp
pusha
ds
loop
popa
fsubp
sub
dec
push
add
scas
xchg
roll
or
jae
push
and
mov
add
arpl
add
movsb
dec
adc
add
pop
out
and
mov
pusha
xorb
sbb
lahf
aas
orb
loopne,pn
rcr
addl
in
ja
jns
enter
xchg
cmpsl
pop
ss
lods
arpl
cmpb
out
mov
xor
imul
xchg
scas
and
lods
jp
xchg
dec
mov
into
xchg
mov
lret
in
cmp
jecxz
push
mov
fsubrl
insl
jmp
sbb
add
cmpsb
dec
jo
dec
xor
addr16
or
sbbb
inc
mov
pop
rorl
sbbb
filds
fldl
mov
dec
fsubrs
insl
adcb
inc
sub
js
neg
pop
add
test
sarl
into
scas
inc
je
sbb
rcll
jg,pn
fmul
xor
mov
add
inc
scas
test
mov
mov
mov
cmc
sahf
sbbb
xchg
repnz
push
pop
bound
aaa
fwait
adc
mov
aad
movsl
subb
stos
orb
lea
loope
in
andb
add
orb
pusha
or
test
sub
or
jne
shl
imul
ja
stos
jg
testl
loope
fsubr
imul
sarb
test
add
jle
xor
cmp
hlt
inc
std
lods
xchg
mov
xor
out
fcoms
xchg
sti
adcb
or
xorb
sbb
xor
mov
in
xchg
negb
push
aas
mov
stos
xchg
lcall
and
sbb
aas
adcb
ss
pop
lcall
mov
subb
mov
subb
scas
lods
bound
sbbb
cmc
pop
movsb
loopne
and
push
pop
dec
clc
xchg
stos
sbbb
hlt
inc
sub
mov
mov
lret
inc
xchg
dec
enter
sbb
mov
adcb
test
mov
sti
and
adc
jmp
arpl
and
pop
pop
mov
jg
sbb
mov
mov
arpl
or
jmp
inc
pushf
mov
inc
jp
sbb
add
incb
jbe
jl
fstpt
test
jae
fdivs
aaa
call
and
xlat
movsb
adcb
jns
enter
in
push
loop
mov
mov
andb
filds
dec
cmpb
movsb
push
adcl
dec
push
ret
aaa
mov
fs
inc
out
data16
jbe
test
ljmp
mov
sub
add
aas
sbb
lcall
iret
or
xchg
and
jae
jl
inc
cmp
je
movl
xor
movsl
xor
jl
or
shr
loopne
or
xchg
mov
nop
jns
movsb
jp
andb
pushf
lcall
out
sub
add
lock
fldenv
hlt
jle
sbbb
test
xlat
push
add
popa
jge
pop
sbb
lret
xor
jo
add
cwtl
sbb
and
mov
loope
pop
sub
icebp
loop
xorb
mov
lahf
cli
jb
pusha
or
aad
jns
jmp
mov
fyl2x
ljmp
cmp
aas
mov
je
cmp
insb
bound
pusha
xor
mov
adc
mov
cltd
ret
jae
cmp
ret
sarl
movsb
and
add
test
mov
lret
xorb
cmpl
and
fidivrs
subb
mov
das
mov
xor
cltd
enter
push
adc
std
xor
mov
aaa
ret
addb
xor
adc
rolb
pop
lock
bound
xchg
jns
pop
fcompl
leave
cmpsb
adcb
iret
ret
mov
pop
sahf
push
andb
xchg
fst
imul
jnp
test
sbb
sbbb
pslld
and
lods
mov
or
dec
iret
jle
fsubp
imul
test
mov
insl
mov
add
push
lods
cmp
movsb
cmpb
xor
imul
mov
mov
and
jnp
push
push
ficomps
adcb
xchg
push
out
stc
test
in
shlb
jmp
lods
std
or
dec
in
sbbb
imul
cmp
fistpll
mov
sbb
hlt
addb
and
add
push
push
mov
out
mov
adc
gs
inc
lea
xorb
xchg
mov
ja
mov
insb
push
addl
jg
xor
test
stos
icebp
jnp
pop
jne
jg
sub
outsb
ret
insb
sbb
call
faddl
mov
sbb
ficomps
test
ds
or
jg
repnz
shlb
stos
je
movsb
dec
pop
orb
nop
xchg
cmpsb
jns
mov
fcoml
and
in
shll
repnz
icebp
jl
push
push
jg
xchg
sbbb
outsl
jno
dec
sbb
loop
mov
and
lcall
lea
and
pop
mov
cmp
adcb
inc
and
int
inc
stos
pop
jne
lret
mov
shlb
xchg
ss
mov
add
xor
icebp
sbb
or
adc
ljmp
jg
mov
sbb
inc
leave
ds
inc
lret
push
cmp
xchg
push
inc
test
hlt
pop
jne
mov
subb
cld
call
sti
bswap
dec
jp
fcomi
cmpb
cmp
mov
inc
repz
xlat
sbb
mov
scas
xor
pop
adc
aaa
cmp
dec
dec
jecxz
mov
push
les
cmc
inc
movsl
movl
fldl
and
cwtl
push
jmp
mov
pop
orb
ret
cmp
js
les
cmpb
push
imul
jnp
ret
mov
jae
jb
arpl
pop
icebp
lahf
in
jmp
andb
test
xor
or
xchg
push
orb
fiaddl
mov
andb
mov
pop
mov
mov
xor
outsb
bound
adcb
mov
mov
jge
stc
inc
fs
jns
out
movsb
jbe
cmpl
jne
cmp
or
sub
cwtl
jl
int3
cmc
xchg
sub
sub
sahf
nop
pop
dec
orb
dec
sbb
adcl
cs
xor
sbb
testl
pop
pop
rcll
je
dec
or
enter
sub
xlat
push
inc
js
pushf
pop
sub
decl
leave
out
pop
xorb
lock
gs
mov
pop
sub
popf
mov
mov
or
sub
push
sbbb
fsubrs
mov
lret
cmpsl
push
in
adc
test
lock
movsbl
xchg
inc
stc
shlb
mov
mov
pop
subb
cltd
bnd
fsts
insl
icebp
xchg
andb
dec
cmp
cmpb
sbb
dec
dec
jne
addb
cmp
sub
push
addb
cld
ret
push
mov
nop
mov
lock
or
or
xor
std
sbbl
stc
cs
pop
leave
inc
push
mov
les
mov
jp
xchg
sbb
outsb
xor
cmpb
loop
jne
jns
inc
cltd
shl
lahf
enter
gs
jnp
je
mov
roll
andb
adc
scas
nop
cli
pop
icebp
jle
mov
xchg
es
push
and
nop
cs
dec
ret
fnstcw
mov
fwait
sub
inc
pop
bound
into
in
arpl
iret
inc
lret
add
mov
adcb
movsl
imul
jg
or
mov
fisubrl
fsubrl
push
jle
mov
imul
inc
and
ret
pop
fiadds
push
mov
stc
aaa
shlb
or
call
jnp
pushf
scas
push
xchg
xorb
pop
lret
sub
dec
repnz
dec
cmp
adc
movb
and
aaa
icebp
pop
std
test
cwtl
mov
dec
cli
popa
testb
lods
arpl
mov
xchg
stos
andb
dec
jg
push
mov
cmp
and
sahf
mov
adc
mov
xor
out
push
jmp
aaa
lea
xchg
cmpsb
loop
adcb
jl
cmp
aaa
push
je
and
sbbb
iret
cli
scas
mov
mov
incl
lret
pusha
dec
ret
ja
jo
push
mov
sarl
and
inc
lods
movl
mov
lahf
jge
loope
ja
ret
leave
jae
push
cmp
mulb
pop
sub
jecxz
push
vfrczss
mov
jbe
xorb
ficoml
xor
sbb
mov
shlb
push
cli
out
xor
jno
jb
push
sub
stos
outsb
mov
lcall
je
mov
lret
jb
push
out
sbbb
inc
test
rcr
and
icebp
adcb
add
jmp
rcrb
addb
push
and
test
subb
pop
xchg
and
lcall
int
pop
mov
fldl
jmp
nop
stos
hlt
and
mov
push
xorb
xchg
inc
xor
adc
bound
xchg
sahf
push
pop
pop
push
int
mov
scas
jnp
ret
pop
sbb
mov
stos
cmpsb
arpl
out
subb
inc
test
pop
dec
jo
pusha
rolb
xchg
in
cmpb
js
orb
cmc
push
inc
movsl
sahf
dec
push
sub
jle
stos
iret
add
mov
out
push
xlat
jmp
lods
cmp
jae
or
mov
xorb
mov
adc
pop
xlat
cmp
and
mov
repz
jmp
sti
lret
pop
fcmove
cmpsl
cs
cld
pop
addb
ret
repnz
andb
jns
pushf
adc
faddl
test
rcrl
out
xor
scas
repz
jg
sbb
cmp
imul
lock
inc
vmovlpd
clc
out
adc
push
pop
sahf
jne
mov
stc
stos
push
and
xchg
fistl
mov
rcll
and
push
mov
es
mov
jl
add
push
adc
pop
push
inc
test
loope
xchg
shlb
dec
xor
xchg
cli
mov
pop
lock
jl
mov
test
jle
or
dec
orb
dec
add
loop
sti
cltd
and
mov
sbbb
mov
addl
cmpsl
lret
mov
ljmp
mov
into
dec
jb
add
dec
aam
push
in
pop
ljmp
xor
jns
test
popa
fs
cmp
jb
dec
add
cmp
insb
push
pop
inc
sbb
jl
adc
ss
ret
mov
push
add
dec
xor
movsb
fnsave
mov
jnp
add
lock
dec
pusha
adcb
mull
aaa
push
out
and
or
pop
cmp
fiadds
pop
dec
sub
test
out
adc
push
movsl
adc
popa
es
adc
je
inc
aaa
in
fs
cmp
xor
adc
mov
sbbb
cs
xchg
stos
leave
cltd
loop
sbb
aas
mov
jg
fstps
arpl
fsubrl
notl
ffree
jnp
fs
inc
enter
mov
adc
push
daa
imul
adc
cwtl
jae
push
and
xor
bound
jle
ficoms
cmp
lods
add
push
add
mov
fiaddl
insl
adc
cmc
pushf
add
into
push
and
mov
call
jnp
repz
mov
dec
ljmp
mov
into
cmp
stc
xchg
or
rol
pop
fiaddl
add
loope
std
mov
jl
addr16
push
rorb
mov
mov
outsb
jle
jmp
or
dec
adc
repnz
push
aas
sub
mov
mov
shll
push
nop
xchg
mov
test
gs
xor
test
addl
jp
push
rorl
mov
jmp
es
mov
and
rcl
add
jg
pusha
lods
subb
xor
add
xorb
aam
mov
test
sbb
cwtl
pop
and
xchg
dec
xchg
xor
in
loope
addb
inc
cld
push
stos
adc
lock
jmp
inc
cmpsb
paddsb
or
iret
xlat
dec
test
mov
xor
std
xor
mov
lods
arpl
leave
adcb
xchg
jae
or
jno
js
subb
ljmp
lcall
jne
jp
inc
enter
loope
or
jo
cmp
out
adc
jae
sbb
bound
mov
mov
cmpsl
mov
dec
pop
incb
clc
orl
fcompl
test
jg
scas
js
sub
ja
leave
adc
imul
lret
sbb
jp
cmpsb
xchg
lcall
mov
mov
sub
ret
mov
loop
sub
repz
mov
pop
jle
enter
data16
sbbb
iret
mov
cli
pop
ja
or
loope
stc
mov
subb
fidivs
jns
rorb
jg
insl
xchg
cwtl
push
inc
mov
aad
sti
adc
jnp
sub
dec
into
push
es
jbe
and
mov
sarl
addb
pushf
jno
push
cmpsb
enter
mov
jecxz
mov
js
or
push
dec
int3
addb
pop
xor
pushf
pop
addb
fadds
jg
jns
mov
andl
movsl
orb
cmp
add
test
pop
subb
add
sbb
sbb
sub
mov
in
int3
je
cltd
out
mov
sahf
dec
or
pop
loope
xchg
inc
mov
minps
mov
ds
cwtl
divl
adcb
push
xor
aam
jp
mov
xchg
push
pop
hlt
mov
inc
ljmp
bound
push
cmp
lock
and
mov
push
test
xchg
push
jle
cmpsl
popa
xchg
inc
mov
orb
mov
sub
jecxz
insb
cmpl
and
cmpsb
rclb
xor
and
mov
mov
mov
loopne
push
jb
pop
or
mov
pop
sti
add
push
icebp
in
xchg
test
inc
xorb
into
in
sub
cwtl
orb
clc
les
xorb
ljmp
sahf
xor
nop
jecxz
xchg
ret
adcb
xchg
ret
popf
mov
movsb
cmp
pushf
daa
sbb
jae
mov
pusha
and
adcb
xchg
dec
mov
cmp
push
push
inc
popf
lcall
sar
push
fiadds
push
pusha
lret
roll
in
fldt
dec
jnp
and
je
ret
jne
or
out
adc
and
xor
repz
int
notb
adc
mov
cs
rcr
andb
mov
add
rclb
leave
inc
sbb
dec
orb
fwait
enter
cmpb
lret
inc
out
shll
or
mov
leave
mov
sub
ds
jle
loopne
and
sbb
repz
inc
push
insl
int
in
andb
into
cmpsb
andb
jle
sbbb
xchg
add
mov
cmp
pop
mov
cmp
stc
and
push
rolb
xchg
add
push
cwtl
add
mov
sub
in
mov
in
push
sub
sub
nop
inc
mov
adcb
test
inc
testb
outsl
pushf
and
push
mov
popa
scas
mov
push
mov
adc
sbbl
lea
repnz
inc
in
xchg
ljmp
adc
and
cli
mov
or
iret
add
jg
adc
dec
adc
or
adc
mov
sahf
movsl
outsl
bound
loope
xchg
gs
je
add
jl
mov
dec
scas
mov
les
dec
cmp
rorl
adc
test
inc
mov
shll
sub
sbb
bound
lods
xchg
mov
push
es
adcb
inc
sahf
jno
cmp
ret
inc
mov
jg
sbb
mov
subb
cmp
mov
inc
pop
hlt
inc
pop
inc
mov
and
call
aas
dec
adcb
jg
mov
sbb
lret
ret
ljmp
inc
sbb
ja
push
loopne
add
jnp
leave
sbb
dec
mov
mov
push
sbbb
movsl
int
jmp
push
inc
mov
xorb
dec
arpl
xchg
out
insb
enter
fcomi
sub
stos
adc
pop
dec
aam
mov
sahf
out
cmpb
sub
cmp
arpl
and
pusha
pop
cmp
adc
mov
movl
orb
mov
jmp
mov
insl
sbb
orb
push
incb
lcall
aas
jae
sub
out
in
mov
test
or
int
jnp
mov
lods
xchg
repnz
or
fcmovbe
call
push
cmp
pop
in
or
lret
out
roll
int3
addl
sbb
sarb
leave
int3
jbe
xchg
mov
in
adc
jecxz
mov
sub
int
jne
and
sahf
cmp
pop
or
sbbb
xchg
les
jae
rorb
jns
push
mov
shlb
jg
rcll
jno
sbb
adc
jp
push
loop
jbe
adcb
push
daa
lcall
cld
inc
xor
imul
fisubl
mov
mov
or
adc
lods
popa
andb
loope
adc
xor
sbb
xchg
cld
ss
data16
insb
jnp
and
ds
add
in
push
and
subb
push
mov
in
xor
scas
sub
xorl
test
mov
jns
cmp
mov
jne
xchg
sbbb
pushf
inc
pop
and
add
sbb
scas
mov
nop
add
mov
mov
adcb
into
mov
push
insl
test
pop
stos
js
ret
jae
ror
push
mov
push
cltd
xor
or
mov
sub
stc
dec
mov
shlb
shrl
or
xchg
fidivl
jnp
aaa
pop
sbb
push
in
outsl
adc
adc
hlt
daa
jbe
sbb
xor
dec
mov
add
js
fs
dec
adc
mov
fmull
add
repnz
sbb
mov
jnp
pop
adc
xchg
mov
sbb
mov
xorb
andb
test
orb
sub
subb
sbb
xchg
cld
repz
mov
je
insl
mov
sub
lock
cmpsb
clc
ret
shll
fmuls
call
jnp
and
pop
xchg
cmp
mov
jl
sub
add
shlb
and
xor
jnp
out
mov
loop
pop
in
adc
addr16
or
add
jle
mov
mov
scas
sbb
inc
dec
fs
mov
add
push
sub
mov
xchg
ret
adc
push
fisubl
testb
mov
lret
mov
and
andb
xor
cli
mov
add
loop
dec
notl
outsb
xchg
mov
addb
sub
and
xchg
mov
cmp
push
loop
xrelease
pop
xor
pop
pop
addb
xchg
shr
dec
xorb
shrb
in
jg
adc
mov
lret
rorl
inc
mov
nop
repz
xacquire
lods
adc
mov
xchg
adcb
fnstenv
loop
movaps
dec
mov
fildl
cwtl
cmc
mov
je
mov
movq
mov
jmp
ljmp
test
cld
inc
aas
push
in
scas
push
and
hlt
inc
jecxz
add
sub
sub
test
and
add
jne
and
cmp
push
lcall
and
sbb
loopne
testl
je
int
push
ret
sbb
orb
xchg
bound
enter
mov
sbbb
adc
or
mov
addb
and
arpl
mov
loop
je
bound
sbb
les
imul
mov
lock
jmp
outsb
orb
test
andl
iret
mov
incb
arpl
sub
jae
mov
xor
dec
scas
in
jecxz
daa
xchg
push
xchg
push
and
cmpb
lods
loope
push
sti
add
ficoml
add
out
cld
push
pop
das
filds
inc
inc
sub
in
xorb
sub
and
adc
push
clc
test
mov
mov
xor
inc
inc
ss
cmp
pop
or
insb
subl
xchg
int3
jmp
es
ficomps
or
lock
xor
mov
lods
rorb
cmp
lret
xchg
jle
in
movsl
mov
imul
andb
jp
jo
mov
mov
pushf
or
cmc
incl
addb
pop
je
lock
add
sub
lods
sbbb
dec
roll
test
or
popa
jle
ja
mov
jbe
jg
push
lcall
mov
sub
ret
mov
sbb
xorl
mov
imul
iret
sbb
sbb
sahf
subb
clc
cmpb
fdivrs
sub
sti
mov
pop
adcb
push
mov
nop
cmp
fsincos
repz
jae
add
dec
movsb
mov
cmp
mov
cmpsb
lea
js
popf
int3
dec
and
lahf
push
andb
or
xor
adc
mov
inc
add
adc
adcl
pop
data16
xchg
add
mov
adc
dec
loop
jbe
cmc
inc
add
add
neg
xchg
notb
or
xchg
orb
or
fisubrs
push
andb
fnstcw
subb
bound
adcb
inc
xlat
jo
push
inc
adcb
insl
sub
jnp
in
jae
inc
add
inc
cmpb
sbb
fisubrl
jae
sub
bound
jmp
cmp
mov
and
insl
aas
andb
addl
aam
push
push
insl
sbb
jnp
cmpsb
mov
cld
mov
stc
loope
lcall
pop
into
sbb
outsb
enter
adcb
lret
rcrl
and
and
and
sub
mov
pop
sbb
sar
inc
cmpb
mov
or
sahf
xchg
outsl
decb
aam
mov
sub
mov
adc
mov
xorb
mov
subb
pop
int
inc
xchg
cmp
push
dec
repz
mov
dec
jg
push
pushf
sub
ret
aad
dec
insl
in
leave
mov
jg
mov
subl
dec
lcall
push
push
cmc
mov
sbb
das
xchg
xchg
dec
aaa
xchg
rcrl
loope
ficoms
fldcw
cmp
gs
movsb
dec
in
xlat
dec
roll
popl
fimull
lcall
xor
cli
xchg
lods
insb
aas
lods
ret
push
bound
mov
stos
cmp
jno
xorb
mov
sbb
sub
adcb
mov
jae
subl
adc
or
in
inc
and
mov
inc
mov
cmp
ss
enter
repnz
lret
inc
fimull
ljmp
out
orb
fiadds
leave
stos
lret
bound
push
ret
aas
int
pop
iret
and
out
loope
mov
loopne
mov
jae
in
sub
pop
out
xor
in
cmp
add
jo
jns
or
mov
mov
jge
cmp
sub
lods
inc
fiadds
pop
cmp
outsl
xlat
adc
or
sub
and
stos
jl
lods
jns
dec
jmp
adc
dec
pusha
cmpsb
andb
push
or
sbb
inc
push
push
jmp
imul
fadds
in
pushf
shlb
jb
or
mov
ja
pop
dec
mov
icebp
or
addb
sti
into
jb
fcmovu
jae
es
push
xor
sbb
cmpsl
pusha
dec
mull
jns
jp
mov
inc
dec
jge
das
test
out
out
sti
jbe
orb
inc
scas
dec
dec
cmp
repz
add
aam
lds
add
sub
jae
sahf
fstps
orb
mov
dec
adcb
adc
and
xchg
adc
mov
jp
aam
jecxz
push
fimull
pushf
daa
in
xchg
xchg
cld
test
fstl
cmpl
loopne
data16
cltd
and
jno
mov
push
loop
popf
lea
add
or
scas
xchg
cmp
andb
fsubrs
je
mov
pop
lods
lret
daa
in
jnp
mov
lret
add
lret
cltd
ds
sbbb
rolb
push
adc
ds
pop
mov
mov
adc
addb
data16
icebp
loopne
jo
test
ret
dec
andb
jne
cmpb
out
cld
mov
pop
jg
xor
sarb
jmp
sub
ret
cmp
inc
ret
cmpb
cmpl
cmpsb
mov
fisubl
bound
fidivrs
fs
test
cld
push
push
sahf
mov
orb
stos
in
ficoms
andb
dec
repnz
pusha
lcall
push
or
daa
cmp
dec
or
sub
pop
pop
mov
arpl
cmp
negb
cmpb
mov
jno
aas
jl
push
xchg
push
cmp
fld
ja
xor
mov
sub
sbb
roll
mov
push
jnp
lcall
loop
ja
into
orb
inc
insl
ret
or
and
inc
mov
inc
jle
xchg
subb
mov
pusha
adc
add
mov
mov
push
push
adc
cmpsl
or
adc
stos
xorl
subb
clc
loopne
test
dec
sbbb
push
mov
add
iret
jae
loop
cmc
or
push
lahf
stc
mov
adc
add
andl
mov
pop
cmp
jno
in
xor
into
mov
pop
shll
mov
xchg
inc
dec
std
add
dec
add
scas
sbb
add
mov
add
in
inc
bnd
fs
mov
mov
out
inc
roll
popa
mov
adc
cmp
insl
mov
sbbb
nop
jg
lcall
sbb
roll
bound
inc
sbb
or
adcb
and
push
leave
pop
jne
popa
nop
adc
std
mov
test
call
rcrb
lcall
addb
mov
sar
icebp
pop
repnz
subb
xorb
mov
ljmp
xor
mov
add
mov
or
int3
lahf
push
jnp
orl
std
fmuls
mov
push
repz
or
xchg
cmp
frstor
mov
or
adc
cmp
je
lret
test
inc
je
scas
mov
mov
push
andb
cmp
jl
rorb
or
loopne
sub
adcb
insl
xchg
cmpsl
jb
int
out
hlt
or
sub
xchg
aaa
stos
subb
loope
fcomi
jae
cmp
jae
std
adc
lds
cmpb
xchg
je
pop
xchg
fs
mov
or
mov
mov
cs
daa
lock
les
ja
sub
and
int
jmp
ret
cwtl
cmp
push
addb
cld
flds
fildl
ja
ret
std
cmc
iret
ljmp
mov
adcb
inc
jae
mov
xchg
xchg
inc
arpl
xlat
sbb
adc
push
dec
insb
imulb
xor
cld
dec
nop
int3
xorb
sbb
push
lret
dec
sub
push
cmc
jge
sbb
fs
add
dec
inc
or
add
adc
inc
pop
aas
and
imul
fcmovnb
scas
jns
xchg
int3
arpl
push
out
mov
lods
mov
ljmpw
or
xchg
daa
or
gs
inc
inc
push
test
int
mov
mov
dec
outsl
ja
rorl
repz
sbb
sub
cltd
pushf
push
sbb
jge
push
push
lock
adc
or
mov
scas
popf
xchg
in
add
pop
mov
or
mov
cmp
jne
loop
and
test
insb
xorb
iret
add
and
and
sub
hlt
shl
xorb
push
inc
jge
inc
test
dec
mov
or
sbb
icebp
mov
sbb
test
or
out
ljmp
aaa
repz
or
mov
xchg
xchg
or
andl
dec
push
mov
movsb
scas
aas
xor
pop
je
mov
pushf
addb
aaa
push
orb
add
or
xchg
sbbb
cmp
dec
cs
or
imul
andb
dec
xor
sbb
xorb
std
adc
cmpb
dec
jl
pop
imull
xchg
sub
ret
sub
fisttpll
in
andb
xchg
dec
fxch
adcb
xor
jecxz
xchg
mov
mov
movsb
mov
sbb
push
xchg
subb
mov
je
jnp
cwtl
imul
push
or
adc
lods
bound
orb
clc
jle
mov
sub
add
mov
repz
jp
add
insl
lcall
pop
push
and
adc
xor
inc
cs
bound
sbbb
cmp
dec
xorb
movsb
pop
into
xchg
loope
and
mov
add
subb
movsl
jns
xor
scas
testb
mov
jmp
mov
stos
inc
cmpb
pop
and
dec
sarl
outsl
pusha
cmp
cli
orb
fadds
push
leave
adc
jg
mov
fwait
adc
adc
inc
cmp
push
mov
push
repz
fwait
sbb
push
adc
ret
xlat
lcall
sub
sbb
pop
shlb
insl
int3
and
stos
jg
mov
add
add
iret
xchg
mov
mov
xchg
pop
add
lcall
add
adc
outsl
nop
in
adcb
scas
stc
pop
mov
test
push
jae
mov
lods
jnp
xchg
push
pushf
movsb
ret
or
out
sub
mov
js
sub
adc
ds
mov
clc
imul
lahf
xorb
sete
sti
adcb
je
inc
lret
xchg
jnp
inc
out
popa
cmp
and
arpl
mov
addr16
xchg
addb
clc
dec
push
xchg
lret
add
push
test
adc
loop
inc
sbbb
leave
cmp
lahf
bound
xorl
roll
add
xor
mov
scas
enter
cmp
clc
test
cmp
xor
push
pop
inc
xorb
es
scas
mov
dec
dec
insl
mov
fs
arpl
push
and
mov
inc
ffree
add
add
packuswb
bound
andb
je
cwtl
sbb
mov
jge
mov
jno
sbbb
add
cmpb
jmp
inc
sbbl
xor
cmpb
xchg
in
adc
cmpb
and
test
cmpsl
xchg
rcl
sti
rolb
jp
xor
cld
dec
jnp
addb
dec
popa
lods
ljmp
js
inc
addl
and
jge
and
andl
xchg
jbe
push
inc
adc
push
adc
jae
call
or
test
sub
cmp
or
cwtl
int3
and
movsb
sahf
ret
jmp
fimuls
scas
jb
xchg
jns
pop
xchg
orl
push
and
add
iret
int
testl
mov
shll
ss
fdivrs
dec
jb
push
fidivrl
in
andb
out
rol
jle
xorb
lock
jne
mov
and
adc
add
lods
inc
lret
push
andb
popa
lds
fadds
mov
lcall
insb
outsl
testl
hlt
sub
filds
cld
loop
mov
outsl
sub
aam
mov
adcb
mov
shll
mov
adc
push
jbe
sbb
jb
aad
andb
mov
pop
and
mov
dec
mov
add
xlat
pop
ret
subb
push
movsb
or
andb
cmpsb
mov
cmpl
cmp
out
shrb
icebp
subb
out
push
orb
leave
jl
add
stos
pop
pusha
je
addb
xor
cmp
pop
dec
imul
or
dec
push
iret
pop
cmp
orb
dec
jmp
sarb
inc
pop
cmpb
arpl
cs
adc
pushf
jecxz
xor
es
popf
imul
jnp
push
sub
mov
mov
lds
in
and
lahf
mov
out
jle
jle
imul
scas
icebp
repz
mov
jb
iret
insl
push
rclb
andl
xor
std
mov
jnp
addb
insl
addb
dec
movsl
dec
pop
les
push
inc
cmpb
stc
int
jb
add
mov
xor
jp
push
std
jae
add
enter
xchg
xchg
adcb
add
mov
incl
xchg
out
lods
dec
jle
subb
std
mov
mov
mov
in
adc
mov
ret
push
outsb
and
fisubrl
xor
add
inc
lcall
pop
mov
sbb
cli
rcll
in
aad
lret
xor
inc
jg
lahf
fwait
subb
sbb
jo
je
pop
xchg
and
out
push
mov
jnp
push
test
ret
push
xor
jnp
loopne
loope
add
pop
outsb
xchg
dec
xchg
xorb
repz
mov
mov
and
pushf
mov
test
push
mov
xor
stc
xor
jb
lods
mov
cmp
flds
loop
jno
andb
mov
lcall
inc
jo
push
adcb
dec
ret
add
jns
adc
xchg
xchg
inc
sub
jge
inc
rolb
cmp
and
neg
cmpsl
sets
add
pop
repnz
or
leave
ljmp
push
mov
sahf
out
pop
mov
xchg
mov
ret
dec
hlt
xchg
js
jae
int
out
inc
inc
jle
mov
cmp
imul
adc
das
mov
or
dec
cltd
sub
add
xchg
cmc
std
scas
fmuls
jae
mov
sub
arpl
cmp
orb
sbb
gs
fstl
subb
rclb
clc
cwtl
push
sub
addr16
mov
loopne
sub
cmp
mov
into
jmp
xor
xorb
mov
xor
popa
dec
xchg
xorl
andb
pop
or
ljmp
cs
sti
shlb
subl
mov
xchg
fistpll
push
aam
jns
outsl
cmpsl
sti
push
subb
mov
jge
push
das
xor
jb
inc
add
jbe
movsb
xchg
inc
jmp
jl
mov
mov
push
sub
pusha
ds
fldl
outsl
mov
sbb
clc
push
push
and
subb
imul
sub
idivb
xor
cmpb
not
and
stc
adc
rcrl
jmp
sbbb
cwtl
bnd
push
add
pushf
fildll
adcb
out
push
ret
bound
lock
insb
mov
and
sbb
add
incb
out
popa
scas
add
fcom
dec
out
testl
adc
subb
add
icebp
cmpb
xor
int
ror
adc
jb
ret
subb
shrb
pop
popa
addb
iret
popf
icebp
fildl
jmp
xchg
jne
mov
cmpb
and
fldenv
orb
fistl
nop
icebp
int3
insb
ret
pop
sbb
xor
shr
cmpb
arpl
andb
adc
mov
inc
pop
addb
add
push
push
push
popf
test
lods
fsubrl
sbb
mov
sub
pusha
loope
inc
rcll
jge
lret
xchg
dec
movsb
test
je
cmp
aaa
fistl
pop
jb
mov
dec
push
cmp
pop
stc
inc
xchg
mov
xchg
pop
jecxz
fdivrl
inc
ja
repnz
xor
inc
ss
bound
xchg
cmpsl
add
out
fisttps
and
sbbb
pop
imul
or
jns
test
test
dec
cmpsl
pushf
cmpb
jae
jmp
mov
psllq
ja
push
insl
and
mov
xlat
cmpsb
push
xor
out
call
adc
into
push
mov
int3
sahf
jnp
inc
ljmp
or
sbb
jl
sti
add
or
xor
in
and
addr16
sub
lods
mov
rcrl
rcr
mov
leave
int3
cmp
inc
or
cmpb
ret
push
jb
leave
dec
mov
cmp
adc
dec
inc
and
and
cmpb
ja
dec
push
inc
and
aad
repnz
fwait
sbbb
xor
imul
sbb
sub
jg
mov
sbb
mov
and
xchg
sbb
test
testl
jg
pop
sbb
gs
rol
jnp
dec
jge
mov
add
cmp
std
je
movsl
sbb
inc
movsb
dec
mov
ja
lret
dec
lods
jb
subb
sub
xchg
xchg
adc
fwait
std
jg
mov
mov
mov
mov
lahf
push
push
stos
jle
cwtl
push
cli
adc
lea
mov
sarb
push
xchg
mov
lea
xchg
enter
or
sub
dec
xchg
cmpb
jecxz
test
mov
pop
pop
jnp
inc
sbb
iret
xor
popa
jecxz
cltd
xchg
sbb
shl
hlt
push
bound
mov
mov
adcb
xchg
stos
sbb
sbb
adcb
or
cmpb
dec
sbbb
mov
andb
loop
mov
sar
mov
jnp
cmp
mov
and
aaa
sbbl
pop
adcb
data16
sub
je
xor
xchg
dec
pop
sub
pop
mov
xorb
shlb
test
pushw
dec
xchg
mov
and
lret
addb
mov
int3
xchg
push
sti
shrb
lock
xor
inc
loope
fists
mov
pop
jns
add
shlb
out
push
adc
test
test
fs
imulb
mov
subl
mov
mov
clc
cmp
cmc
lds
lcall
sbbl
and
mov
adc
push
call
fs
mov
imull
cmp
roll
andb
sbb
sbbb
pushf
jl
adc
incl
out
cmp
cltd
cmp
lock
dec
in
jle
out
das
sbbb
inc
ljmp
add
les
sub
das
or
in
scas
cli
lcall
pushf
sbb
push
mov
sub
pop
jmp
jb
mov
aaa
sub
and
add
test
jno
inc
jecxz
cmp
sbb
pop
jne
movsl
inc
in
cmp
dec
adc
lret
mov
mov
sahf
fwait
cmpb
stos
xor
shll
mov
adcl
insb
mov
cli
subb
sub
scas
incl
sbb
cmpsl
flds
add
mov
pusha
jg
mov
shll
loop
outsl
arpl
fldl
and
loope
jg
stc
xchg
pop
jecxz
jnp
icebp
lahf
and
andb
cli
lea
mov
jae
sbb
xchg
inc
insb
mov
inc
pop
nop
xor
cmpl
bound
popl
push
mov
push
sbbb
mov
cmpsb
insb
lea
imul
ja
and
add
xchg
mov
cmpb
cmp
lret
sbb
mov
jae
xchg
insl
fcoml
lods
mov
push
jnp
sbb
into
lcall
call
xchg
pop
bound
inc
arpl
dec
inc
pop
jl
stos
jno
pop
cmpsb
adc
into
inc
mov
stc
fists
push
add
mov
add
std
pushl
mov
movsl
dec
test
test
or
adc
jmp
stos
cmpb
inc
ficoml
dec
clc
add
or
push
out
rorl
or
inc
adcb
loop
push
mov
dec
dec
mov
mov
cmc
and
mov
mov
ret
fildl
in
ret
sbb
andb
outsb
aam
mov
sub
mov
dec
jnp
mov
mov
sbb
test
mul
xchg
fdivrl
dec
loope
mov
pop
test
sbb
jmp
adc
sbb
jae
in
orb
inc
popl
cs
test
dec
sbb
adcb
repnz
add
jo
sti
sahf
outsl
out
push
andb
xchg
fisubrl
call
xchg
cwtl
inc
lcall
sub
mov
addb
btr
inc
cmp
je
call
sbb
popf
movsb
push
cmp
and
ds
cmpsl
cmp
fbstp
cmpsb
repz
test
jae
fs
mov
and
fmull
xchg
scas
add
pop
push
leave
bound
push
stos
add
xchg
add
es
push
outsl
hlt
dec
jg
repz
add
xchg
sbb
pop
pop
and
dec
rcrb
cmp
notl
pop
mov
inc
mov
pop
push
insb
mov
bound
fsub
shlb
subb
xchg
fbstp
insb
enter
inc
jmp
jno
insl
sub
mov
sub
movsl
aas
add
adc
scas
add
jmp
orb
mov
mov
jae
push
ret
mov
pop
lret
dec
and
sub
push
sti
faddl
inc
xor
cld
inc
test
fistps
andb
dec
push
jg
andl
jne
mov
dec
cmp
xor
ljmp
pop
jbe
in
inc
mov
xchg
dec
xor
cmp
lcall
int3
in
mov
dec
sbb
sahf
and
cltd
andl
xchg
imul
push
push
jae
add
stc
inc
loopne
mov
mov
or
popf
pop
lods
sbbb
fs
jp
push
mov
pushf
stc
aam
cmp
outsl
mov
bnd
lock
push
sub
in
popf
lcall
inc
or
xorb
andb
fdiv
subb
jns
pop
lret
das
inc
in
sub
mov
push
push
imul
shlb
fstpl
jb
outsb
lods
subl
adcl
aad
cmpb
sub
sub
mov
testb
jne
mov
cmp
jle
pop
mov
test
xchg
mov
dec
xor
ds
mov
movsb
and
adcl
xchg
cmpb
dec
test
mov
or
das
add
ficomps
mov
mov
nop
sbb
adcb
mov
aam
jge
xchg
aaa
std
sbb
roll
push
adcb
sti
push
aam
aas
xchg
ret
movsl
and
clc
inc
push
add
xchg
das
jecxz
clc
insl
pusha
cwtl
add
sub
bound
mul
inc
push
pop
aaa
inc
xchg
andb
push
jmp
adc
sbb
pop
sub
mov
and
lods
push
fcos
dec
movb
jae
jge
jle
add
pop
pop
rep
fmuls
insl
xchg
xchg
fsts
addl
mov
adc
nop
xorb
dec
pushf
call
jnp
leave
mov
aaa
arpl
adc
sbbb
aad
pop
push
jecxz
stc
push
movsb
lret
addb
sbb
cmp
push
cmp
not
push
inc
add
and
mov
mov
shrb
push
das
mov
inc
mov
mov
addb
jns
mov
push
mov
adc
jb
push
pop
fcmovnu
lea
xchg
orb
je
mov
movsb
push
cli
loopne
push
aad
gs
add
sub
movsl
sbb
lahf
xorb
xlat
and
adc
sbb
pop
orb
xchg
jno
xor
pop
sub
inc
add
lret
repz
cwtl
jae
xor
test
inc
sbb
mov
testl
sbbb
push
adc
cltd
xchg
or
adcb
addl
ret
cmp
inc
mov
xor
insl
punpckhbw
cmpb
sbb
or
dec
mov
cmpb
std
cmp
and
cmc
cmp
ss
cmpb
clc
subb
lret
std
add
int3
je
xor
push
sti
adc
pop
sbb
mov
rclb
hlt
lret
jge
int
jns
mov
inc
jae
mov
xchg
das
cmp
or
ss
je
inc
addr16
cwtl
or
pop
xchg
mov
xor
pushf
pop
jae
mov
arpl
inc
add
addb
and
cmpb
dec
and
cli
sbb
test
call
or
sub
iret
fbld
adc
loop
or
xor
push
jae
add
or
repnz
mov
jo
stc
xorb
mov
popa
mov
subb
adc
fiaddl
mov
sbb
outsl
ds
pop
jg
test
dec
lcall
sahf
imull
repz
addb
jnp
mov
out
pop
iret
js
pusha
repnz
andb
cmp
jp
xchg
js
or
add
out
cmp
pop
sahf
xchg
cltd
dec
or
sub
int3
stc
adc
incb
mov
inc
int
testl
fstps
jns
or
cmpb
bound
push
ds
rcl
jbe
or
andb
sti
out
movsb
rolb
lock
loop
mov
and
arpl
or
push
icebp
dec
cmpb
popa
mov
mov
jg
je
sub
clc
ret
ret
subb
insb
arpl
add
pop
pop
xchg
sub
xor
mov
dec
lret
jb
push
out
sub
maxps
data16
or
fdivrl
sbbb
lcall
cmp
push
or
xorb
cmpb
pushf
xor
jne
dec
mov
movsb
jg
clc
daa
jae
lds
movb
sbbl
xchg
cmc
dec
ljmp
adcb
pop
or
das
or
xlat
ud0
push
mov
pushf
shll
sahf
dec
dec
dec
andb
mov
cli
stos
adc
pop
sbb
andl
inc
adcb
hlt
cmp
jne
fsts
aas
and
test
xchg
lcall
xor
andb
jmp
orb
inc
loop
pop
inc
in
cmp
adcb
mov
shlb
imul
andb
pop
stos
mov
adcb
cli
imul
add
pushl
test
insl
dec
ret
xchg
adc
pop
sti
push
js
cld
mov
mov
jnp
xor
jnp
clc
bound
mov
popl
cmpl
cmpsb
into
adc
inc
dec
rolb
cmp
add
sub
std
mov
push
jge
mov
adcb
dec
loop
orb
sub
mov
adc
add
pop
aaa
xchg
dec
rclb
in
push
rcll
xorb
in
adcl
imul
add
sbb
fcomps
andb
push
insl
ss
mov
nop
loopne
mov
xor
jl
sbb
cmp
subb
mov
dec
jo
xorb
jl
inc
mov
sbb
cmp
lods
sub
loope
stos
mov
ret
jnp
popf
stos
fwait
scas
cmp
adc
gs
orl
sbb
dec
inc
xor
jg
push
lods
popf
inc
js
je
sbb
jl
jnp
sub
inc
sub
xorb
cmc
xchg
iret
rcrb
nopl
cmp
orb
into
cld
xor
dec
inc
shrl
jg
lods
and
mov
rcr
lea
add
in
ret
lret
or
hlt
sub
loop
test
ret
scas
bound
pop
pop
mov
or
movsl
add
pop
popf
or
xchg
or
in
aaa
cmc
hlt
mov
xlat
mov
inc
jg
pop
icebp
mov
in
lock
sbbb
adc
xorb
mov
pop
jl
mov
jecxz
aam
adc
pushf
ja
pop
pop
std
jg
les
adc
jb
insb
mov
cmp
testb
pop
movsl
jmp
jge
push
lods
jg
repnz
push
mov
xorb
popa
iret
adc
adc
out
jmp
in
sbbl
in
subb
xchg
xlat
addb
xor
push
push
cmp
outsb
adc
cld
jnp
inc
dec
filds
daa
sbb
xor
xlat
je
sub
pop
addb
xorb
xor
xorb
jne
rolb
mov
mov
adc
test
shrl
cmp
scas
mov
sahf
or
sbb
jmp
lcall
rcl
mov
push
fiaddl
imul
dec
mov
roll
sub
mov
aaa
cld
push
mov
addr16
inc
push
push
mov
dec
cmp
push
xchg
sbbl
in
orb
and
orb
xor
and
push
push
lods
pop
popa
push
lock
fmuls
jp
sti
inc
or
lret
mul
or
pop
addb
scas
stos
ds
imul
inc
rolb
mov
jb
and
sub
aam
jl
pop
movsl
js
data16
gs
xorb
cmpb
int3
lcall
add
xorb
adc
sbbb
xchg
xchg
mov
ljmp
movsl
iret
bnd
loope
imulb
pop
pop
jno
xor
cmp
and
addl
sub
fs
xorb
or
das
fs
add
dec
in
andb
vgetmantsd
aad
daa
adcl
mov
add
xor
in
pop
andb
adc
dec
jnp
aad
pop
std
xor
dec
jg
adcb
aad
xchg
xchg
push
pop
cs
or
cmp
push
mov
adc
bound
rcr
mov
push
inc
mov
mov
aaa
push
adc
fadds
mov
inc
sub
add
and
lods
shlb
jb
add
call
addb
jo
arpl
mov
cmc
mov
int3
lcall
pop
jle
push
mov
inc
cmpsb
inc
dec
add
leave
jae
call
jnp
mov
jae
mov
pop
ret
into
jg
gs
cli
add
mov
stc
jp
hlt
rolb
cltd
push
add
xor
adc
adc
sbb
pushf
inc
idivb
insb
xor
inc
pop
mov
sbbb
loopne
repz
xorb
dec
das
imul
addb
mov
addb
mov
cmpb
push
cmpsl
dec
lock
out
aas
sbb
jecxz
mov
sbb
jg
mov
ret
mov
cli
arpl
sti
adc
in
pop
sbb
pop
add
dec
test
outsb
jae
sbbb
cmp
pop
push
sti
mov
sbb
pop
popf
cmpb
fwait
cwtl
lret
out
pop
pop
push
lret
adc
decl
enter
jae
shr
mov
aad
clc
mov
outsb
loop
inc
fldenv
inc
cmp
jg
lods
push
or
push
jnp
rcll
sub
mov
push
sub
inc
xchg
lcall
pushl
mov
adc
fidivrl
scas
push
sub
addb
cmpsl
inc
dec
xor
add
xchg
jae
in
aam
mov
and
lret
dec
adc
ljmp
xchg
pusha
mov
jo
scas
adc
xchg
pop
add
mov
lcall
push
in
daa
adcb
xchg
and
lret
sti
push
jnp
scas
adc
enter
cli
push
jb
dec
mov
fistpll
xor
mov
mov
ret
pop
test
into
xorb
sub
pop
pop
testb
les
stos
inc
pop
sahf
mov
add
inc
jno
cwtl
adc
add
mov
repz
lret
and
outsl
iret
inc
test
xor
je
mov
jae
loopne
les
je
sub
xor
test
push
sti
ret
add
in
cwtl
cld
cmp
fbstp
scas
decl
stos
repnz
ja
adcb
ljmp
adcb
insl
lcall
out
sub
inc
inc
testb
cmp
xorb
sub
out
add
sbb
mov
das
out
pop
jbe
mov
andb
and
ret
or
jae
sarb
orb
test
xor
jge
cld
imull
or
sub
or
sahf
cmp
push
je
jno
pushf
add
decl
shlb
out
jbe
inc
lock
loopne
cmpsb
mov
jp
jnp
adcb
add
adcb
in
popa
cmpb
lcall
mov
and
in
lcall
add
mov
hlt
sub
dec
and
mov
mov
adc
mov
cltd
enter
mov
cmp
sub
sarl
jnp
push
int3
sbb
mov
sbbb
movsl
cmc
mov
in
sbb
sbbl
and
aas
inc
addb
dec
mov
adc
dec
mov
mov
insb
outsl
xor
push
adc
popf
add
fiadds
xchg
insb
fldenv
add
cmp
and
and
rcrl
in
jg
aaa
mov
adc
fldcw
cmpl
mov
ret
sub
outsl
pop
andb
sti
int
xchg
jg
jnp
jecxz
ljmp
fldl
pushf
mov
inc
addb
jbe
jnp
rcll
or
aam
mov
sahf
incb
jmp
ret
rolb
adc
mov
push
insl
rcrb
adc
int3
mov
sub
dec
test
jb
nop
call
jnp
leave
add
mov
ss
push
mov
mov
add
jp
xchg
stc
add
add
fstl
push
jle
fadds
std
dec
stos
dec
add
xor
pushf
testb
mov
pop
dec
inc
popf
add
and
hlt
cmp
xchg
std
outsl
aaa
mov
push
mov
mov
xlat
adc
and
lea
jecxz
mov
sub
push
inc
mov
mov
dec
in
sbbb
sub
jl
sbb
add
dec
ret
push
mov
xorb
out
xor
lcall
hlt
ss
xchg
xchg
adcb
setb
stos
sbb
and
stos
and
popl
call
test
inc
jecxz
mov
xor
arpl
add
adcb
xchg
aas
repz
and
push
jno
ret
hlt
ret
jns
xchg
movb
cmc
mov
jg
insl
lahf
or
xchg
ja
in
mov
sub
bound
cwtl
xchg
inc
jg
stos
cmp
out
cmpb
mov
addb
stc
pop
clc
lcall
fwait
ljmp
je
mov
push
pop
xor
leave
mov
and
push
pop
fwait
sbb
int
xchg
xor
cmp
andb
mov
lods
mov
push
mov
adc
xchg
xchg
push
mov
scas
push
mov
adc
xchg
xchg
andb
push
pop
out
mov
pop
scas
mov
insb
jge
jne
add
cwtl
js
mov
lret
mov
movsl
mov
stos
lahf
sub
out
pop
inc
jl
cmp
mov
inc
pop
xor
bound
jecxz
das
mov
rcl
es
xorb
xor
mov
fimull
jle
hlt
cld
loop
mov
arpl
jle
dec
push
fsubs
push
xor
sub
jge
andb
fs
adc
les
jne
inc
pop
add
cmp
test
xchg
addb
lds
roll
out
adc
fldl
or
je
push
das
mov
rcrb
and
push
dec
test
lcall
lret
xor
mov
xchg
or
mov
lahf
int3
loopne
jp
outsb
lods
push
mov
sub
jns
inc
or
cltd
pop
mov
addb
inc
and
dec
roll
or
aas
stos
push
dec
jp
jmp
xor
jge
orb
or
lock
icebp
or
sbb
jp
mov
cmp
ret
sub
pop
and
mov
jnp
jb
xchg
sbbb
ss
subb
nop
out
sub
mov
adc
cmp
push
sbb
pop
outsl
jne
mov
adcb
xchg
mov
orb
and
lcall
dec
enter
sbb
movsb
xchg
repnz
out
jnp
mov
push
pusha
fwait
pop
jb
js
orb
jae
lods
push
xchg
add
insb
aad
push
or
sbb
sbbb
loopne
andb
push
cmc
rcll
sbb
xchg
dec
cli
sbb
fwait
mov
lods
pop
or
jecxz
jnp
in
and
xor
mov
xchg
lock
mov
sub
xor
out
cmpsb
lods
ss
addb
repz
jns
gs
sbb
push
aas
push
sub
sbb
test
int
cmpb
adc
and
lods
dec
and
jle
or
lret
insb
addb
repz
jne
or
xchg
lret
std
daa
mov
cmpsb
sbbb
enter
pop
pop
jnp
imul
je
popf
lret
dec
mov
xor
pop
pop
jnp
into
das
adc
xchg
rorb
pop
ds
add
orb
sub
xchg
imulb
cmpb
rcll
mov
mov
mov
stos
push
repnz
fwait
dec
test
call
mov
jle
cmpsl
mov
mov
icebp
data16
lea
pop
xorb
addl
movsl
lcall
and
lret
cmove
cmp
xchg
sub
sbbb
push
adc
xlat
pop
adc
sbbb
adc
sbb
test
fstpt
xchg
scas
out
loope
or
pop
push
sti
subb
jbe
or
in
cmp
sbb
mov
addb
inc
rcrb
xor
repnz
lds
add
push
mov
std
xchg
jno
cmc
mov
imul
jle
dec
inc
lret
push
aad
mov
lahf
clc
int3
pushf
xor
cmpb
call
adc
stos
xor
inc
push
fcomp
cmpb
inc
cmp
add
mov
mov
jb
into
mov
lods
inc
test
or
subb
and
leave
test
lcall
xchg
sti
hlt
dec
int
xchg
sbb
mov
cltd
lahf
xchg
add
roll
or
push
fcmovu
add
cmp
popf
adc
pop
sub
fidivrl
dec
adc
pop
xchg
stos
mov
arpl
mov
pop
pop
call
outsb
inc
movl
sub
and
sti
cmc
cwtl
cs
rorb
jl
das
aas
call
push
movl
addb
mov
sbb
pop
movsb
xchg
int3
sbbb
xlat
mov
xchg
es
addb
lock
push
sti
fsubrs
fimull
jg
sbb
pop
mov
push
xchg
jp
dec
or
push
push
loopne
pop
test
das
outsl
into
cmpb
addr16
mov
or
es
adc
subb
in
push
ret
or
push
sbbb
pushf
xor
loope
push
fs
add
push
addb
dec
divl
outsb
push
movb
sarl
subb
sahf
andl
mov
jbe
in
push
mov
push
cltd
ljmp
xchg
inc
jp
mov
leave
mov
inc
hlt
subb
mov
xor
push
imul
mov
push
sub
xchg
lret
inc
scas
in
rcrl
insb
push
adc
pop
push
cmpb
sahf
mov
add
inc
sti
mov
pop
leave
xorb
sub
movsb
movl
add
shl
jp
test
cmp
push
sbbb
sbb
cmpb
cli
pop
jo
popa
orb
mov
das
sbb
add
test
mov
loop
jmp
mov
movsl
mov
add
mov
xchg
flds
push
lds
notl
int
outsb
sbb
sbb
andb
arpl
cmp
in
sbbb
jge
je
and
aaa
rolb
pop
loope
adc
out
les
aad
pop
add
mov
sbb
add
aas
out
inc
ja
gs
test
jne
jb
scas
es
push
jge
mov
gs
fildl
inc
sub
ljmp
call
int3
subb
xchg
orl
push
adc
dec
mov
sbbb
imul
mov
xchg
rclb
lcall
gs
mov
cmpsb
hlt
xorb
mov
dec
cmpb
enter
repz
mov
sbbb
fst
pop
dec
arpl
sbb
stc
adc
aaa
pop
lods
add
and
jnp
pushf
stc
jmp
sbb
or
idivb
loopne
roll
jb
xchg
loope
stos
subb
jp
andb
outsl
cltd
jo
push
jg
push
adc
cwtl
test
xchg
loopne
inc
loop
xlat
pop
lea
inc
jae
ja
fs
xorb
out
addb
insb
cli
data16
aad
add
in
add
std
andb
adc
outsb
adc
clc
lret
cmp
mov
mov
inc
mov
addb
mov
leave
loope
inc
or
cli
mov
lahf
cmpb
incb
or
imul
cmp
mov
inc
push
inc
adc
subb
jns
adcb
aad
pop
jno
jecxz
sub
add
lcall
jg
mov
jmp
shl
cmp
es
xor
outsl
ret
mov
and
cmp
sub
bound
jnp
clc
ror
pop
add
lret
jae
dec
test
cwtl
lds
sbb
pop
and
mov
into
subb
loopne
push
dec
adcb
int
nop
add
je
sbb
out
adcb
and
add
push
jecxz
pop
cmpsl
aam
mov
scas
add
pop
mov
jo
sbb
pop
push
je
xor
sbb
loope
add
push
je
cltd
lahf
ret
fmull
loopne
cwtl
mov
or
orb
xchg
jle
aam
add
mov
fcomps
sbbb
cld
dec
xor
pop
std
xchg
imul
push
mov
popa
mov
test
std
ficoml
mov
sub
das
sbbb
inc
outsl
push
dec
mov
pop
inc
and
rcl
je
insl
repz
fadds
outsl
cs
xorb
leave
lds
imul
call
xchg
rorl
out
sub
test
inc
dec
out
jb
sbbb
or
jbe
and
xor
jno
xchg
push
mov
sbbb
push
dec
jne
cmpsb
and
or
inc
or
jg
sbb
add
mov
out
xchg
lcall
jns
out
lods
aad
cltd
and
pop
jl
xchg
and
dec
addb
xchg
cmc
adcb
xor
popa
mul
data16
add
xlat
or
hlt
mov
imul
jg
xchg
jmp
add
out
ret
jnp
pop
sub
or
xor
mov
jb
xor
and
das
outsb
adc
repnz
jmp
shll
icebp
and
lock
rclb
and
ss
ret
jg
into
es
pop
popa
mov
jle,pt
sbb
loope
pop
adcb
ret
addb
pop
mov
jae
mov
subl
or
dec
sbbb
add
push
push
push
jg
jne
xchg
loop
mov
and
mov
pusha
scas
mov
pop
adc
orb
and
xorb
sarb
mov
cmp
adc
addr16
add
arpl
xchg
and
cmp
aas
push
sbbb
cs
jnp
pop
loop
jecxz
lods
fbld
mov
out
jg
xor
fwait
push
imul
andb
dec
and
mov
inc
mov
aad
add
test
andb
jle
mov
xor
sub
repz
mov
cmpb
push
int
lcall
insl
adcb
jnp
andb
push
inc
push
mov
xorb
pop
cmp
cltd
push
adc
sahf
andb
in
movsb
add
sahf
or
std
adc
scas
sahf
fnstsw
notb
shl
stos
jg
imul
pusha
repnz
aam
addr16
and
call
cmc
mov
push
repnz
adcb
jg
push
cmp
push
orb
inc
flds
inc
mov
mov
inc
mov
outsb
fwait
and
dec
fcmovbe
dec
inc
into
sub
jg
add
sbb
icebp
imul
andb
idiv
addb
adcb
xchg
sbbl
mov
pop
je
roll
in
mov
aas
dec
cltd
cmpb
and
test
inc
jmp
push
adc
push
cmp
nop
and
jb
jns
out
flds
mov
push
add
addb
movsl
andb
addl
dec
pop
subb
fidivrl
sbb
cmp
jae
adc
outsl
push
inc
xchg
addl
cs
cmp
ja
aaa
xchg
cmpsl
add
ss
push
mov
mov
fmul
adcb
ljmp
daa
mov
jae
mov
mov
enter
jbe
fnstsw
sub
push
imul
adc
hlt
dec
fidivrs
xchg
das
orb
jae
enter
add
xchg
pop
jns
push
adc
and
lret
nop
mov
mov
je
inc
test
sub
mov
adcb
les
mov
lret
orl
cwtl
dec
mov
jnp
xchg
fsubl
sub
add
sar
jge,pt
and
es
addb
cltd
insb
sub
cld
jle
pop
mov
xlat
or
nop
inc
add
mov
sub
xor
sub
mov
xor
push
js
cwtl
iret
push
cmpl
push
pop
ret
sahf
jge
push
jo
fs
add
pop
jbe
scas
insl
inc
sbbb
lret
add
jecxz
push
fwait
add
adcl
enter
jmp
push
inc
andb
jg
and
xchg
cli
mov
and
jg
cs
ss
lock
fldenv
push
dec
or
pop
aas
sbb
adcb
aam
mov
or
lock
loop
mov
mov
insl
pop
mov
and
cmp
popf
cmp
adc
or
push
insb
pop
push
addb
filds
pop
fmul
adc
sub
add
lret
cmovb
inc
ljmp
add
jge
sbb
bound
xchg
pop
shlb
inc
xorb
arpl
aam
arpl
pop
xor
data16
je
stos
lcall
sbb
xor
cmc
pop
push
sbb
push
mov
addb
adc
mov
ret
pop
mov
movsb
lods
pop
orb
jl
mov
xor
aas
js
roll
push
or
mov
push
pop
dec
stc
das
add
ficoms
mov
cld
xchg
shll
out
adc
pushf
in
movsl
stos
js
sbbb
aaa
hlt
xchg
mov
push
adc
sub
pop
addb
xchg
mov
cmpb
fsubl
mov
or
sbb
fstps
xor
std
and
notb
adcl
cli
xchg
lret
mov
and
mov
inc
sarb
adc
add
call
in
orb
jle
or
sahf
adc
xor
add
div
jge
mov
in
sbbb
movsb
es
adc
jg
in
fimuls
mov
xor
sbb
lcall
mov
push
or
jl
mov
mov
into
dec
es
adc
aam
add
filds
xchg
std
mov
popf
in
jbe
addr16
imul
xorb
cmp
jmp
sub
loopne
adc
sbb
inc
mov
xorb
adc
repz
and
mov
adc
arpl
mov
pusha
jnp
push
ja
mov
and
bound
ja
popa
int3
lock
jg,pt
enter
jl
or
nop
xrelease
andb
xlat
or
xchg
sbbl
subb
movsb
sti
andb
sub
lock
arpl
mov
test
xchg
adc
xor
jmp
lea
adc
push
pop
insb
jo
xchg
xorb
pop
jno
sarl
push
adcb
mov
pop
cmc
sbb
inc
outsl
mov
lret
push
lds
imul
out
mulb
pop
inc
add
lea
and
inc
shlb
ss
jnp
add
lcall
lret
xchg
push
mov
mov
movsb
shll
subb
and
loopne
ret
push
mov
sub
inc
cmpb
addr16
mov
mov
mulb
xchg
dec
adcb
mov
aaa
push
cmp
adc
pop
mov
xor
scas
ljmp
mov
arpl
adcb
loop
mov
sbb
hlt
xorb
and
aad
fucomip
and
pusha
jnp
dec
xor
movsl
mov
arpl
jg
xor
psllw
add
cmpsb
mov
cmp
add
mov
jnp
adcl
and
es
mov
push
push
sti
pop
hlt
pop
ficompl
ret
push
cld
sub
lods
sbb
icebp
or
dec
xor
push
out
test
lods
test
cmp
add
out
and
xorb
adc
add
mov
xlat
or
rcll
pop
xchg
jne
outsb
int3
aas
cmc
scas
jnp
aam
scas
sahf
int
ret
cli
stos
andb
or
mov
push
mov
xor
push
xor
sbb
xor
adc
inc
sar
flds
mov
je
xchg
push
in
and
pushf
loope
roll
pop
xchg
xor
cltd
xchg
stos
js
xor
and
and
xchg
add
sub
jg
popa
enter
fcomps
in
sub
sbb
mov
sbb
xorb
bound
fbstp
rorb
mov
xorb
inc
sub
aam
testb
or
aaa
andb
out
jne
mov
movsb
cmp
cmp
movsl
mov
push
mov
pushw
mov
sbbb
mov
lret
pusha
xorb
or
pop
add
inc
divl
cmp
les
orb
ds
pop
adc
rclb
mov
das
loopne
clc
jle
cmpb
add
and
std
rcrl
ret
fiadds
fdivs
sbb
test
lock
bound
orb
addr16
dec
xchg
push
sub
ss
cmp
add
addb
popa
xor
or
push
bound
lods
sbbb
push
xchg
cmpsb
inc
in
cwtl
shl
sbbb
push
xchg
gs
mov
subb
fwait
outsb
pop
imul
cmpb
repz
aaa
lods
ds
dec
dec
xchg
and
lods
pusha
out
imul
add
arpl
ja
scas
mov
or
mov
or
mov
cmpsb
repz
cmpb
adc
sbb
push
pop
pop
xchg
push
mov
scas
jnp
jl
fsubs
pop
or
pop
stc
mov
mov
fs
fistpll
mov
orb
push
add
addr16
xchg
idivb
imul
ret
sbb
stos
jle
sub
out
je
dec
popf
lcall
add
idivl
xorl
lea
popf
adc
ja
dec
popa
dec
inc
xor
mov
dec
fwait
adc
cli
orb
clc
aad
out
sbb
lahf
lea
jg
cmp
outsb
xorb
sub
mov
mov
sbb
inc
out
mov
xchg
sbb
loopew
cmp
aad
stos
push
loop
lret
arpl
add
mov
in
subb
xor
test
addb
repnz
popf
push
cmp
sub
xchg
xor
out
sub
jno
fwait
add
popf
pushf
lea
lcall
jg
mov
ficoml
setbe
mov
xor
pop
push
push
inc
stos
lret
lds
sbb
mov
pop
jge
arpl
data16
data16
call
rcr
mov
das
dec
sbb
test
lcall
cmp
popa
das
leave
test
pop
addr16
stos
sub
xchg
sub
dec
hlt
test
scas
incb
ja
adc
enter
fildl
imul
or
mov
scas
pop
mov
outsl
xorb
outsb
xlat
inc
loop
add
mov
xchg
inc
sbbb
and
add
jmp
xchg
inc
movsl
loopne
fsubrs
subb
sub
daa
fldl
jae
hlt
xchg
xor
add
in
mov
adcb
xlat
clc
pop
sbb
sbb
ds
leave
push
xchg
lds
fisubl
mov
xor
sub
daa
cli
fistps
int3
mov
xchg
jns
dec
or
push
adcl
fadds
inc
sbbl
out
repz
testl
or
movsl
xchg
xorl
add
cmpsb
pop
roll
out
test
ret
jg
aas
xor
or
mov
adcb
orl
xor
lea
movb
stos
dec
or
movsb
hlt
sarb
mov
sub
mov
adcb
dec
icebp
add
sahf
loopne
lock
sti
sbb
adc
std
and
xor
popf
subb
adc
or
arpl
outsb
popa
jge
fidivrl
fsub
sarl
lret
pop
xor
test
add
push
mov
addb
ret
push
cmpsl
jae
jb
xchg
add
sbb
data16
rol
psllw
mov
test
or
cmp
sbb
mov
fdiv
pop
xor
cwtl
mov
mov
push
nop
andb
ret
mov
mov
inc
mov
xchg
sti
inc
cli
mov
sahf
adc
inc
out
adc
loope
rcrl
push
sub
or
das
xchg
ss
fiadds
dec
sbb
adcb
adc
loope
popl
je
insl
xor
lret
pop
xorb
or
imul
insb
jl
xchg
insl
pop
and
sbbb
aas
stos
outsl
dec
jg,pn
jl
flds
xchg
xor
in
cmp
bound
jl
fldl
lret
inc
subb
push
sub
and
sbb
jle
dec
or
lods
and
lods
jnp
pop
dec
jg
cmpb
mov
push
test
adcb
repz
ret
mov
cs
hlt
insl
push
rol
adc
mov
xchg
add
push
mov
bound
fdivl
incl
adc
jl
cltd
orb
mov
cmp
mov
jmp
and
test
pop
std
addb
gs
out
testb
and
mov
mov
jb
stos
add
xor
fisttps
sbb
sbbb
outsl
pop
mov
fistpl
inc
aas
lret
flds
mov
ret
lea
lods
ja
fisubrl
pop
inc
or
insl
push
xorb
dec
fwait
aaa
and
xor
js
sbb
jg
jg
insb
loope
out
negb
mov
js
jb
test
lods
mov
inc
in
sbb
and
popa
mov
xchg
scas
imul
pop
sub
xlat
mov
push
andl
stc
fiadds
mov
test
jno
mov
xor
test
mov
push
xchg
cwtl
fcoms
jge
out
jae
jb
ja
ljmp
insl
lcall
cmp
pslld
xor
cmp
dec
adc
add
addb
filds
sbb
cmp
adc
fs
ss
addb
stos
push
clc
cmc
adc
lret
adc
shr
je
les
push
jge
mov
cmpb
leave
repnz
fstps
xchg
xchg
xor
mov
mov
sbb
mov
orl
outsb
xchg
mov
jne
enter
fildl
leave
jae
mov
xor
es
scas
push
inc
int3
pop
les
fcmovne
arpl
arpl
or
adcb
pop
xchg
cmp
out
ret
jmp
and
jp
jae
push
mov
mov
sbb
iret
cwtl
jle
cmp
lds
jmp
dec
andb
xor
fisttps
in
cmpb
fnsave
pop
fs
lock
jnp
gs
pop
adc
ret
call
cs
or
orb
repz
mov
adcb
bound
test
push
xchg
test
mov
lds
sbb
mov
inc
add
ret
adc
filds
repnz
out
ss
sahf
mov
jb
fs
test
adc
lcall
xor
or
xchg
add
cmpsl
cmp
dec
cmp
sbbb
jo
jp
mov
add
fldt
or
orb
cmp
jno
lock
jne
mov
and
je
addb
sbb
scas
popa
lcall
sub
fildl
in
loopne
subb
add
xor
ds
adc
sub
icebp
pop
shr
loopne
mov
jno
jb
jnp
subb
sub
or
cmpb
daa
jecxz
icebp
movl
sbbb
jne
adcb
ret
pop
and
and
add
push
adc
ret
jmp
arpl
aas
movsb
lret
adc
andb
cwtl
call
ljmp
bound
push
dec
mov
or
inc
mov
pop
and
pusha
cmp
jb
sbb
jmp
lret
push
addb
scas
out
mov
push
pop
or
sub
dec
mov
xchg
pop
push
xchg
dec
jns
jno
inc
add
lock
andb
sbb
sbb
xchg
and
mov
int
call
sbb
push
cmp
or
push
mov
jne
mov
subb
or
pop
sarb
mov
mov
adc
xchg
call
lock
cmpsl
je
mov
push
jne
insl
iret
adc
adc
inc
jo
adc
lret
ret
call
jnp
dec
pop
add
insl
mov
ja
pop
jl
je
loope
xor
call
aaa
rcrb
sbbb
sbb
std
stc
orb
mov
jg
shl
mov
rolb
fs
jl
inc
cmp
inc
dec
pop
mov
test
adc
mov
cmpb
push
iret
lea
xlat
adc
ja
ss
inc
ffreep
add
mov
orb
sbb
cmp
pop
call
mov
imul
inc
sbb
push
fsubl
gs
shlb
and
cwtl
jg
in
xchg
cld
xchg
inc
adc
and
std
loop
mov
fs
dec
mov
inc
and
cmpsl
mov
daa
adc
test
pop
cmp
xorb
push
adc
cld
outsb
divl
push
xor
xor
pop
shlb
sub
sub
sbb
ret
and
imul
cmc
out
movsb
mov
aam
lahf
sahf
mov
mov
in
jecxz
dec
inc
sbb
jmp
xor
cmpsl
xor
andb
clc
add
fmulp
push
dec
add
mov
scas
jge
mov
fists
stos
stos
mov
cmp
push
sub
add
jmp
hlt
mov
lock
pandn
sbb
fildl
pop
dec
cmpb
cmc
sbb
sbbb
mov
scas
mov
mov
arpl
mov
fdivrs
les
fxch
out
cmp
mov
jp
cwtl
jl
dec
jmp
pushf
in
jg
lcall
sub
mov
in
enter
cmp
jmp
cmp
sti
and
mov
imul
sub
dec
xchg
jp
jns
xlat
sbb
and
mov
push
xchg
sahf
sub
and
cld
and
filds
cli
mov
dec
inc
out
lcall
out
lock
jecxz
jge
pop
sub
pop
and
lock
add
adc
and
add
or
in
mov
cli
out
out
sbb
or
outsl
cmc
inc
xchg
push
stos
lds
mov
fldenv
mov
sub
scas
shrl
ret
loop
insb
adcb
jp
adcb
push
cmp
pushf
pop
xorb
call
mov
pop
repnz
fwait
test
mov
xorb
in
mov
sbb
cmc
popa
andl
sbb
add
sub
mov
mov
in
push
subb
add
mov
ds
sub
sub
mov
lret
xchg
aaa
lcall
je
call
addl
mov
jo
xorb
pop
call
sbb
xor
mov
mov
leave
push
pop
nop
add
orb
stos
jae
mov
and
lcall
cwtl
jg
cmp
mov
xchg
push
leave
dec
inc
addb
loopne
push
sbb
stos
das
mov
fisubs
fisttpll
mov
and
xor
inc
dec
mov
jnp
aaa
cmp
pop
addr16
lea
xchg
jae
pop
loope
mov
jbe
cmp
push
or
cmpb
cmpsb
dec
mov
push
xchg
cmp
out
negl
scas
xchg
andb
fcmovu
cmp
push
fs
and
inc
push
push
cmp
pop
clc
call
or
or
mov
mov
and
dec
orl
push
xor
inc
mov
repz
cmpsl
mov
subb
nop
adc
icebp
lock
adc
cmpsb
repnz
jg
mov
push
sub
insl
ficomps
inc
movsb
mov
pop
lea
pop
repnz
gs
and
add
dec
jbe
rolb
push
sbb
sub
ljmp
sub
sbb
leave
jno
loop
mov
repz
xchg
lods
fcmovnb
orb
outsl
cli
daa
inc
loop
dec
fs
add
es
mov
pop
hlt
push
mov
pushf
cmpb
je
mov
cmc
mov
and
inc
nop
filds
aaa
mov
sbbb
pop
in
xor
sbb
or
push
outsb
push
repnz
adc
rorb
and
aad
stos
sbb
test
lods
imul
loope
std
adc
inc
pop
add
orb
gs
sub
and
or
jnp
cli
les
dec
mov
aas
repnz
lods
xlat
je
push
iret
out
addb
mov
inc
xchg
popa
and
test
mov
xor
ret
cmc
add
test
or
movsb
aas
adc
das
xchg
ljmp
nop
iret
mov
jp
jne
jle
cmpsb
cmp
mov
sbb
mov
insl
les
add
inc
push
ljmp
cwtl
lods
mov
cmpsb
scas
orb
and
jge
jnp
inc
xor
mov
and
inc
xchg
jle
jp
sub
cld
mov
jne
call
xchg
bnd
enter
xchg
fisttpl
mov
push
adc
pop
xchg
mov
mov
ss
jl
mov
dec
xorb
sahf
pop
lret
sbb
ret
xchg
orb
cmp
sub
sbb
push
outsl
push
ret
cs
js
out
mov
andb
inc
arpl
cli
jge
decb
insb
out
xor
add
subb
shll
mov
mov
inc
in
sub
orb
xlat
sub
xchg
sbbb
mov
mov
xorl
test
xor
add
lds
dec
add
jns
xchg
or
xchg
jb
gs
inc
lods
fs
stos
fsub
mov
insb
jbe
aad
inc
cmpsl
mov
add
jnp
or
cmp
scas
outsl
mov
push
ds
pop
int3
xor
cmpsb
jnp
cwtl
sarl
and
pop
andb
xor
aaa
or
mov
push
adc
je
jnp
test
lahf
fldl
les
cmp
addb
fdivrl
cltd
filds
inc
pushf
aad
inc
sbb
stos
ss
sub
sti
cltd
mov
jmp
and
data16
popf
push
inc
pop
add
insb
and
jae
and
inc
fmuls
ficoms
lret
xchg
in
addl
or
ds
cs
icebp
xorb
clc
dec
imul
jo
aam
mov
orb
shlw
sbb
cmp
xor
pop
jne
int3
clc
or
pop
orb
iret
mov
push
pop
adcb
stos
or
dec
frstor
jnp
push
icebp
movsb
jle
or
xchg
mov
setbe
js
enter
dec
subb
mov
adc
ds
movsb
push
or
jg
sub
pusha
shlb
xor
inc
pop
xchg
cld
adc
hlt
pop
clc
subb
je
adc
aaa
leave
jns
push
pop
mov
rcll
int3
sbb
xchg
sbbb
and
xchg
mov
mov
pop
and
fsub
add
xor
xor
shl
push
lahf
andb
lock
and
icebp
inc
pusha
mov
push
out
inc
mov
iret
ljmp
or
out
push
jne
dec
lods
xor
cwtl
jle
pop
faddl
add
sti
call
dec
insl
inc
lods
push
ja
sahf
hlt
insb
add
cmpsb
inc
and
pop
call
pop
out
js
jae
xor
adc
sbb
xor
push
leave
into
xlat
data16
bnd
popf
add
icebp
pop
add
outsl
data16
jmp
push
in
addr16
inc
lret
ljmp
mov
out
jge
stos
xchg
iret
push
cwtl
sub
dec
xchg
test
sub
push
fmul
push
orb
pop
rolb
push
sbb
fsubr
mov
cmp
or
cld
dec
inc
jmp
into
push
xor
pop
mov
pop
arpl
addb
je
fisubs
mov
mov
test
scas
in
jo
inc
and
orb
mov
adc
mov
xchg
insl
jmp
loope
fldl2t
sbbb
out
stos
out
or
dec
adc
adc
mov
fists
add
inc
cmp
orb
pop
aad
nop
push
jg
push
insb
lods
daa
xchg
xorl
out
popl
jbe
rol
add
and
or
sbb
jno
cmp
cmp
pmulhuw
adc
jg
add
adc
jmp
jo
ds
mov
and
sub
adc
xorb
gs
jae
decb
ljmp
iret
adc
jbe
mov
leave
int
andb
das
cmpl
and
mov
hlt
cmp
sub
sbbb
cmp
xorb
ret
jge
ss
jae
push
mov
and
add
fisttps
cmp
dec
jg
jg
repz
or
mov
adc
cmp
cli
jmp
mov
mov
movsl
push
inc
jns
sub
mov
js
pushl
insl
jmp
adcb
mov
lret
or
subb
inc
xchg
xorb
xorb
mov
adc
adc
fimull
inc
xor
sbb
xorb
or
cmp
adcb
jge
jns
andb
push
jbe
pop
jae
adc
add
aas
and
cmc
sub
stos
xor
lock
jg
outsl
sahf
adc
xlat
and
pop
push
shr
data16
push
dec
mov
ja
add
je
sub
or
stc
gs
sbb
sub
pushf
push
pop
lock
pushl
aas
out
and
jne
push
test
andb
das
incb
add
or
cmp
fldenv
sbb
and
sub
xorb
pop
jae
stos
insb
aas
ret
push
jle
arpl
fldenv
sub
addb
mov
mov
jb
jg
in
insb
sbb
stos
mov
pusha
push
or
imul
out
mov
cmp
lcall
gs
cmp
int3
xor
clc
lock
mov
sub
filds
adc
or
orb
dec
mov
movsb
daa
cmpb
xchg
or
cmpb
inc
jae
idivb
push
push
mov
jg
or
stos
test
mov
cmp
jbe
inc
icebp
lds
jne
adcb
outsl
xor
aaa
gs
and
ret
jno
das
out
icebp
dec
sbb
push
test
xchg
shll
inc
faddl
outsb
int3
mov
jne
fs
xor
jo
je
andb
gs
or
addb
jl
addb
pop
sarb
xchg
xchg
testl
lods
outsl
add
or
jbe
or
iret
clc
add
pushf
and
jg
insl
cli
js
adc
jb
push
addb
pushf
xor
jmp
xor
mov
into
mov
subb
pop
or
mov
icebp
rcrb
les
and
fs
enter
cmp
adc
orb
mov
fmuls
xlat
lcall
dec
dec
dec
jge
cmp
test
or
addb
aam
call
mov
ljmp
sub
inc
sbbb
push
pop
pop
jmp
sub
clc
fwait
sub
js
andb
rcl
testl
shll
sub
adc
sbb
xorl
sub
orb
test
xchg
dec
ret
pop
loope
xchg
xor
pop
xchg
cmpsl
sbb
andb
test
frstor
in
pop
push
sahf
popl
aam
mov
inc
add
and
push
repnz
push
or
out
sub
ljmp
push
pusha
mov
push
mov
lcall
mov
addb
fidivs
inc
cmpb
cmp
mov
lcall
jl
cmpsl
test
stos
cwtl
int3
sbbb
aas
dec
addr16
sub
mov
mov
mov
scas
cmpb
or
imul
jnp
in
jg
push
fimuls
cwtl
subb
mov
shrl
xchg
push
cmpsl
push
enter
cmpb
pop
cmp
out
fisttpll
push
pop
popf
cmpb
jg
inc
pop
call
in
testl
sbbb
daa
les
fidivrl
dec
and
jno
enter
jmp
pop
adc
movsl
sbb
dec
or
pop
mov
adc
or
insb
addb
aam
push
xchg
xchg
push
lcall
es
mov
mov
pcmpeqd
sti
popa
sbb
xor
pop
ret
je
mov
data16
imul
sti
jnp
xorl
cmpb
jge
mov
lret
cmp
das
jbe
in
inc
jg
ds
cmp
or
pop
cmp
vmovhlps
int3
jnp
xor
out
cli
jno
sahf
mov
andb
jns
andb
xchg
jge
mul
lods
orb
ret
out
adc
mov
rcrl
outsb
sbb
mov
sub
popa
jmp
fldl
add
xchg
cltd
lret
dec
inc
lock
push
jg
jns
repnz
mov
sub
ljmp
adcb
fsubs
cltd
adcb
mov
scas
sub
jl
add
into
test
sub
cmp
pushf
push
call
repnz
icebp
sub
sbbb
pop
jno
addr16
adc
icebp
and
test
cs
loope
mov
cmp
jnp
jne
or
adc
jmp
je
mov
rcll
subb
ret
pop
mov
movsb
cmp
daa
adcb
sbb
xorb
js
adc
dec
xorb
sahf
push
xor
push
jnp
mov
or
pop
outsb
andb
popa
aam
mov
mov
mov
adc
xor
mov
and
in
jmp
imul
push
jae
adc
ret
fistpl
pop
orb
push
mov
sub
ds
inc
dec
aas
sbb
shrb
inc
mov
jg
lret
sub
outsb
jae
jecxz
and
loope
or
in
inc
sbbb
filds
mov
adcb
sbb
sbb
mov
imul
and
lods
bound
xor
imul
imul
jecxz
das
repz
push
orb
adc
pop
inc
ret
push
push
xchg
mov
xor
lea
jnp
push
sub
adc
adc
inc
xorb
stc
out
mov
mov
add
js
das
cmp
xor
cld
test
mov
push
sbb
mov
cmp
jge
or
ljmp
pop
xchg
inc
ret
mov
insl
push
mov
or
insb
push
arpl
lea
sbbb
inc
xor
repnz
inc
cmpb
lods
fcomps
cli
sub
lock
jo
jg
andl
sbb
adcb
mov
sbb
jae
std
xchg
mov
and
add
dec
pushf
sub
gs
inc
dec
add
orb
test
inc
adc
xor
dec
push
repnz
dec
subb
or
cli
jo
out
sub
mov
sub
cmp
lcall
fiadds
lahf
bound
inc
jg
sub
imul
inc
popf
fnstenv
or
cmp
adc
pop
cmpsl
jns
divb
and
incb
test
add
nop
xchg
xor
int
sub
sbbb
scas
pop
dec
test
jae
dec
or
gs
call
jno
adc
jecxz
xchg
hlt
xor
pop
xor
xchg
insl
mov
enter
push
cmp
notb
pop
or
adcb
pop
jl
pop
icebp
cmp
addb
data16
faddl
pop
mov
adcb
sub
cmp
faddl
cmp
cwtl
mov
mov
scas
xorb
dec
add
iret
lea
fwait
out
pop
add
cmpb
in
mov
jae
jg
mov
stc
jb
stos
adc
xchg
inc
xchg
out
cmpb
sbb
mov
push
sti
loop
xchg
inc
adc
adc
mov
push
dec
sbb
push
gs
adc
push
mov
or
dec
test
fs
subb
int
scas
jbe
xorb
inc
loop
xchg
pop
sbb
or
mov
xor
ret
andb
out
stos
xor
jnp
mov
and
sbbb
shlb
fildll
xor
idivl
ret
add
ret
pop
lock
sbb
test
push
push
pushf
sti
dec
pushf
dec
cmpb
out
mov
daa
cltd
aam
xor
std
inc
mov
ss
clc
popf
add
rclb
dec
push
loope
shlb
add
inc
xor
cmpb
jg
add
or
sub
add
push
and
xor
push
mov
and
adc
sub
lret
test
adcb
rolb
mov
insl
test
call
jne
sbb
pop
dec
test
xorb
fimuls
mov
outsb
in
pop
ret
into
or
sbb
pop
in
movsb
xchg
sbbb
loope
pusha
mov
or
pop
js
sub
dec
add
push
jns
push
cmpb
and
xorb
ja
addb
pusha
push
inc
xlat
shll
add
cld
dec
insl
ret
aaa
je
inc
daa
lea
xor
adc
mov
iret
pop
orb
cmp
addb
fmull
dec
aas
adcb
ja,pn
adc
cmp
fwait
pop
subb
fstpl
add
push
clc
addb
and
pop
sbb
dec
sbb
orb
adc
lahf
lods
jmp
fadds
adc
mov
jp
in
inc
repz
jne
insl
insb
jae
iret
adc
and
push
data16
cmpsb
inc
inc
sbb
call
jnp
pop
pop
pop
addb
stos
mov
shlb
arpl
fwait
inc
jecxz
inc
es
negb
clc
shl
xchg
incl
xor
dec
std
push
mov
icebp
in
popa
into
addr16
ret
in
rcll
mov
push
lea
cmc
pushf
fdivrs
enter
bound
pop
push
aaa
je
jmp
mulb
or
adc
add
push
mov
ja
and
inc
or
push
lods
ret
mov
in
fwait
sub
mov
movsb
sbb
stos
jmp
call
sbb
cmp
sbb
cmp
imul
test
push
inc
out
xchg
faddl
xchg
sub
mov
jnp
xchg
negl
and
stos
sub
jle
popa
pop
push
gs
sbbb
fsub
fs
push
lods
dec
cmpl
cmp
jecxz
data16
jb
xorb
into
push
gs
sub
jmp
dec
jno
iret
xor
inc
mov
and
pmaddwd
xor
lahf
inc
push
push
push
je
fnstenv
adc
inc
cmp
fldl
sar
cmp
and
inc
push
cmpsl
dec
cmpsb
cmpl
sahf
xbegin
lret
cltd
icebp
lock
das
enter
adcb
adc
adc
and
sub
push
cmp
mov
push
adc
int
or
pushl
xchg
dec
xor
sbb
jg
cmp
stos
pop
mov
dec
push
mov
xchg
sbbl
fsubrl
xor
movsl
loop
cmp
pop
fwait
dec
add
addr16
push
jl
cmpb
jno
out
and
jecxz
push
cwtl
cmp
dec
xorb
adc
sub
mov
adc
fstpt
jmp
jg
jecxz
jae
stos
mov
in
inc
leave
hlt
adcl
jo
jmp
xor
jle
stos
pop
xor
arpl
cmp
lds
clc
pop
cld
adc
sub
scas
pop
in
shlb
sbb
push
dec
jns
xorl
add
adcb
dec
out
sahf
dec
scas
jbe
cmpsb
add
orb
cmp
mov
dec
sbb
orl
cltd
int3
daa
mov
inc
sahf
add
jo
sbb
ja
and
insl
or
cmp
clc
insb
jmp
loop
or
test
sub
inc
test
orb
dec
int3
sbb
lods
aaa
mov
sbbb
inc
jg
mov
loop
lock
orb
mov
fwait
inc
pushf
inc
add
stos
loop
andl
movsb
inc
in
cli
sbb
push
imul
inc
mov
mov
repz
orb
mov
lods
jb
adcb
aam
and
pop
xchg
shll
and
mov
pmaxsw
sbb
imul
adcb
xor
lret
mov
dec
mov
sbb
push
inc
ret
sbb
mov
repnz
sub
subb
or
data16
mov
mov
mov
push
push
cwtl
into
and
testb
clc
fisubrs
dec
icebp
add
jae
xchg
shll
rclb
dec
cmpsb
fadds
lock
xorb
adc
pop
or
sub
dec
adc
subb
bound
sbb
mov
fmul
add
rorl
loope
jg
inc
out
enter
jecxz
lcall
sbb
xlat
push
inc
movsb
sbb
push
cmp
dec
mov
sbb
jb
fnstenv
or
orb
mov
cmpb
shll
xchg
imul
dec
fldenv
jg
add
and
pop
punpcklwd
subb
fmulp
xor
adc
call
and
jae
xchg
bound
jl
xor
cmpsl
repnz
stos
jnp
cmp
clc
mov
cmpsb
addb
loop
jns
push
rolb
loopne
in
xchg
add
subb
add
mov
mov
adc
stos
cmpsb
test
dec
and
dec
test
outsl
xor
add
push
lods
and
mov
xor
mov
dec
adcb
xchg
lea
test
push
and
aam
rolb
fwait
sub
inc
jnp
xor
mov
sbb
jnp
addr16
dec
ret
int
sbbb
and
mov
bound
mov
sbb
sub
pop
fsubrs
shrl
addb
sbb
andb
je
in
adc
adcl
inc
test
in
add
mov
fiaddl
jg
je
adcb
inc
xchg
inc
sbb
add
sarb
jno
push
sub
push
scas
out
mov
lcall
subb
imul
mov
and
sbb
add
or
jge
jecxz
and
mov
ljmp
cmpb
clc
push
pop
mov
sbb
shr
shlb
adc
push
stos
pop
imul
jo
mov
outsl
sub
and
insb
mov
xchg
mov
enter
nop
ja
loop
dec
adc
pop
pop
enter
mov
jnp
pop
add
in
mov
pop
push
imul
xchg
loop
push
je
pop
xchg
int3
inc
les
movl
sbb
movsl
addr16
jge
mov
aaa
mov
sub
inc
loope
out
hlt
testl
addb
flds
in
arpl
xlat
orb
pop
lds
mov
int3
aad
clc
sub
and
inc
fimull
adc
cld
imul
mov
test
xchg
adcl
add
or
subb
outsl
faddl
or
cmpsb
or
or
mov
sub
sti
mov
andb
rcrb
sahf
out
inc
and
cmpb
std
push
sub
cltd
rolb
xor
adc
sbbb
hlt
roll
cmp
jnp
fs
jp
and
push
into
out
andb
dec
mov
outsb
out
hlt
and
out
adcb
sbb
jg
and
in
into
popf
cmpb
add
add
int
orb
popa
stc
cltd
jbe
fmuls
jle
dec
aam
push
lret
and
icebp
sbb
xor
das
inc
lods
sub
sub
addr16
shlb
lret
mov
test
insb
outsb
clc
pop
sub
das
lea
movsb
je
data16
mov
test
addb
fs
rcrl
lret
adcb
jne
jp
cmp
inc
jl
sti
mov
jns
add
icebp
dec
nop
enter
ret
inc
sti
outsb
ret
insl
cmpb
sbb
inc
mov
aaa
jge
subl
adc
int3
dec
addl
mov
cmp
sbbb
cltd
fisubs
xchg
dec
adcb
ret
sarl
ds
adc
fdivrs
outsl
je
lds
aaa
sahf
bound
pop
jg
xlat
add
dec
dec
mov
loop
xchg
movsl
subb
xor
xor
inc
loope,pn
adcb
cmp
xor
nop
subb
cmp
jg
fstl
or
inc
rclb
inc
xor
in
push
rcrb
loope
nop
pop
pop
imul
or
jl
and
lods
arpl
call
shrb
add
and
movsl
mov
push
dec
fwait
insl
lods
adc
testb
push
mov
pop
cmpsb
xor
xor
call
add
ss
xchg
pop
inc
fnstcw
lret
pop
cwtl
js
into
andb
stc
sbbl
add
add
inc
or
andb
adcb
idivb
sub
shll
push
cmpb
aam
lock
jmp
inc
inc
cmpsl
fldl
iret
outsl
in
add
and
mov
mov
sbb
push
mov
dec
and
mov
add
cmp
mov
fwait
sub
xor
mov
jg
jg
pusha
push
outsb
mov
jl
or
andb
mov
sbb
sbb
orb
push
xchg
push
push
std
subb
pop
xchg
insl
sub
jmp
dec
sub
sub
fwait
cwtl
mov
jp
mov
jb
insl
inc
flds
sub
jmp
shrb
adc
xchg
mov
and
scas
sahf
subb
cmpsb
or
lcall
xchg
jg
lahf
xor
test
cmp
aam
adc
rclb
jo
jg
pop
dec
jmp
cmpsl
in
subb
and
add
push
mov
inc
pop
xchg
ss
adc
sub
cmpsl
dec
test
mov
inc
mov
or
dec
leave
cmp
loopne
adcb
aam
loope
pop
xchg
sahf
int
cmp
hlt
mov
add
xchg
call
mov
in
fisttpl
int
dec
cmp
pop
mov
lret
popa
and
cld
cmpb
xor
mov
xchg
mov
and
push
jnp
lea
clc
out
push
jo
jae
fwait
push
aad
enter
push
andb
mov
sbbb
movsl
andl
xchg
lds
jge
xorb
divb
push
cmp
sbb
xchg
out
sbb
jnp
test
sti
gs
fcmove
testl
cmp
xchg
mov
mov
push
test
dec
pop
add
xchg
fs
xchg
aaa
out
adcb
lds
sbb
sbb
xor
stc
sub
jnp
addb
mov
mov
sub
orb
pop
and
mov
shlb
sbbb
imull
subb
popf
sahf
add
xchg
mov
jnp
or
jge
mov
imul
ret
and
jmp
orb
lock
movsl
repz
in
mov
clc
add
or
fiadds
popa
loop
mov
fcomp
aas
aaa
sub
mov
into
push
addr16
fwait
mov
jnp
dec
mov
bound
dec
rclb
mov
subb
jb
dec
cli
sub
aam
nop
pop
mov
mov
pop
add
add
and
jle
in
rcrb
push
nop
mov
fdivrs
xchg
pop
lods
jbe
enter
mov
jne
test
adc
stos
imul
sahf
inc
je
movsb
lods
and
xorb
sbb
and
lods
or
mov
nop
jo
mov
das
lret
ficomps
inc
push
pusha
mov
jnp
in
mov
mov
pop
aam
inc
andb
addb
pop
push
adc
push
lods
inc
dec
sbb
adc
push
fcmove
mov
xchg
dec
lock
fadd
in
loope
aas
mov
sbb
les
and
add
bound
or
inc
ffreep
inc
inc
sub
mov
sbb
into
roll
insl
dec
mov
cmp
das
jle
pop
out
imul
jnp
cmp
xchg
incl
adc
or
push
cltd
das
jb
cmpsb
inc
inc
inc
xor
xchg
call
jnp
sub
mov
mov
test
mov
into
adc
or
nop
rolb
xchg
cmp
add
scas
cmp
mov
gs
adc
repz
setnp
shlb
adcl
imul
cmc
aas
dec
add
outsl
xchg
push
adc
mov
sbb
adcb
jmp
inc
xchg
xchg
loope
ja
arpl
jge
subl
mov
adc
fwait
cs
sbb
cmp
je
in
andl
cmpsb
cli
sbbb
add
fadds
mov
sbb
out
popa
addb
xchg
enter
or
inc
subb
inc
fldenv
jg
cmp
lret
sub
in
sahf
cmpb
mov
addb
pop
xor
fiaddl
lods
out
clc
dec
push
sbb
mov
stos
jp
ret
xorb
loop
lahf
jmp
cmpb
cmp
gs
scas
adc
mov
es
jb
fidivs
movb
fadds
cmp
pop
or
cmpsl
mov
or
add
clc
push
push
cs
pop
mov
ljmp
sbb
push
scas
jns
rcl
andb
popa
loopne
mov
shl
push
xchg
addb
test
andb
sahf
xchg
adc
inc
or
xadd
jge
adc
pop
add
add
scas
xor
ret
ljmp
arpl
and
adcb
pop
xchg
or
outsl
mov
mov
push
in
and
out
and
cmpb
mov
imul
sub
les
iret
adcb
mov
add
inc
shll
sub
xor
hlt
jmp
push
xlat
andb
repnz
cs
push
and
jle
push
lds
fs
or
fbld
dec
dec
out
jecxz
enter
push
push
std
popl
mov
inc
aaa
jge
xor
shrl
out
mov
dec
jbe
adc
enter
mov
cmp
push
and
lds
pop
push
out
outsl
arpl
orb
sti
and
sub
scas
ror
loop
sub
mov
pop
je
idivl
cmp
js
cwtl
or
mov
mov
inc
adcb
jbe
inc
push
inc
cmp
pop
imul
cltd
clc
mov
lock
bound
fidivrs
xchg
lret
add
aad
dec
or
data16
addr16
sub
int3
push
sub
test
insb
subb
push
ds
xchg
xor
adcb
shlb
aam
jb
lea
xchg
cmp
cmpsl
nop
data16
jae
icebp
mov
leave
les
mov
jp
jne
movsl
cmpb
sbb
pop
sahf
cmp
mov
loop
adc
in
nop
inc
and
add
push
flds
adc
cwtl
movsb
or
xorb
inc
adc
xchg
fimull
ret
mov
adc
push
push
mov
xchg
andb
add
fimuls
fwait
cmpb
mov
pusha
rorb
je
adc
inc
push
dec
push
mov
xchg
pop
aaa
shlb
pop
jg
or
adc
es
pop
psrlw
mov
addr16
xacquire
xor
ret
cs
pusha
fs
fstps
hlt
mov
and
sar
fstpl
insb
je
inc
xchg
int3
and
cli
lds
inc
cmc
sbbb
lock
mov
orb
sbb
inc
pushl
jg
fucom
ja
imul
aad
add
bound
subb
or
push
cmpsl
adcl
cmp
add
enter
adc
sbbb
pop
mov
rcrb
pop
jp
inc
pop
into
lret
stc
xchg
jecxz
shrb
or
repz
add
std
cmp
jbe
addr16
repnz
daa
sarl
inc
mov
lods
jg
js
jne
std
rcrb
pop
orb
outsl
inc
sbbb
xor
sbb
ret
mov
adc
int3
mov
shlb
xorb
dec
inc
pop
in
mov
rcl
mov
repz
aas
lods
lret
loop
ds
sbb
orb
outsb
clc
adcb
cmp
test
dec
iret
andb
loope
aas
test
and
jg
dec
xor
rorl
lods
sub
stos
sub
jne
jecxz
fmull
cli
arpl
int3
xchg
push
mov
mov
test
mov
mov
ljmp
call
adcb
xchg
dec
xchg
mov
inc
jno
incb
in
jae
mov
sbb
xor
inc
xor
sbbb
loopne
cmpb
inc
jl
clc
movsb
fcoml
inc
jo
xchg
inc
jnp
mov
mov
data16
scas
or
ss
push
mov
clc
ja
ror
pop
es
shlb
mov
jnp
enter
ss
int3
je
loopne
sbb
adcb
mov
nop
or
incl
enter
rcr
add
mov
inc
jnp
int3
dec
mov
add
push
cmp
mov
in
xchg
jae
lock
loop
pop
jg
mov
mov
lds
lcall
jmp
div
mov
xor
ret
loop
repnz
and
scas
popa
sub
andb
jae
dec
dec
inc
mov
in
lods
inc
or
mov
arpl
sti
mov
push
sti
addr16
fcmovu
addb
xor
push
orb
dec
movsb
andb
xlat
insl
pop
push
add
xchg
loope
mov
dec
and
fs
in
jae
loop
in
out
ss
inc
mov
xchg
push
cmp
dec
pop
sub
pop
scas
adc
sbb
pusha
jnp
and
sahf
push
loopne
or
inc
leave
repnz
xchg
aas
lea
shrb
lahf
push
fdivrl
lcall
dec
mov
insb
shl
andb
or
sub
jp
dec
cld
push
sbb
xchg
cmp
inc
pop
out
xchg
jge
cmp
push
add
in
add
imul
mov
mov
or
mov
sbb
arpl
mov
sub
jg
in
cs
dec
add
pop
les
pop
adcb
mov
xorb
fstpt
in
aam
stc
movsb
pop
xlat
adcb
data16
daa
icebp
popa
cmp
test
add
mov
jne
jnp
jae
movsb
xor
push
ret
orb
fwait
repz
iret
mov
adc
je
in
mov
push
mov
not
jno
mov
xlat
sub
add
orb
add
enter
push
cld
orb
ljmp
fiadds
or
andb
and
daa
push
mov
adc
jno
dec
mov
xorb
aaa
push
bnd
adc
cs
dec
mov
fcomps
inc
or
xchg
sbbb
push
test
cs
cmp
fldenv
fadds
jecxz
push
inc
bound
test
popa
inc
dec
push
roll
jmp
in
mov
sbb
lods
subb
inc
or
jg
pop
and
sbb
jae
dec
lcall
imul
add
sbbb
lds
adc
int
push
push
mov
out
pop
clc
mov
xchg
loope
call
daa
ljmp
mov
cltd
les
lahf
sbbb
xchg
jg
push
cmp
pop
push
imul
gs
sbbb
mov
mov
addr16
idivb
pop
xchg
roll
stos
orb
mov
jp
dec
jns
popf
outsl
clc
sahf
adc
mov
pushf
andb
insl
popf
adcb
mov
lfs
jo
inc
xor
out
mov
xor
popa
push
aad
xchg
push
scas
je
addb
outsb
sub
push
push
pop
jo
test
mov
mov
sbb
jbe
mov
popf
and
loope
sub
je
out
cmp
iret
dec
add
sbb
in
or
bound
inc
adc
mov
inc
mov
inc
push
repnz
addl
push
mov
pusha
sbb
out
and
xorb
pop
sub
push
push
push
mov
popf
jecxz
cmc
loope
add
lahf
or
nop
sbb
loop
movsl
adc
xchg
clc
inc
data16
sarb
and
or
push
ret
pushf
insb
add
inc
adc
lret
fisubrs
mov
test
jp
mov
inc
add
pop
cmp
es
and
push
mov
in
push
movsl
int
sbb
mov
mov
jb
push
xchg
roll
sbb
insb
adc
movsl
inc
mov
add
jp
mov
fwait
mov
sbbb
test
arpl
in
sbbb
fadd
mov
adc
fs
pop
pop
icebp
jle
orl
cwtl
add
cmp
mov
dec
dec
in
or
mov
subb
jmp
cmpb
jae
subb
dec
jns
data16
xchg
pushf
addl
sbb
mov
inc
aaa
subb
jb
call
andb
cld
add
push
pushf
dec
pop
cmpb
push
mov
stc
sbbl
cmpl
mov
mov
pop
and
orb
mov
cmp
mov
sub
mov
jmp
int3
fcoms
out
shl
mov
and
andl
pusha
lret
stos
mov
push
adc
adc
add
ror
rorl
andb
sbb
jecxz
push
xor
lcall
loop
sub
fcoml
cltd
or
lock
test
and
bound
or
test
pop
sub
jge
popf
sbb
add
subb
jne
jne
sbb
addb
daa
inc
pop
add
mov
sub
jg
rclb
sub
add
xchg
sub
aam
sbb
xor
orb
test
mov
scas
dec
sbb
xchg
adc
cmp
in
adc
mov
mov
mov
jl
imul
pop
lcall
movsb
addb
push
mov
cmp
lret
data16
push
mov
or
frstor
sbb
add
dec
mov
lods
add
adc
ret
popa
xorl
add
pop
xor
mov
dec
xor
xor
mov
cmp
aas
mov
mov
sub
xorb
mov
jecxz
cli
incb
push
les
adcl
adc
mov
dec
or
mov
ss
dec
lret
mov
jle
sbbb
cli
push
jo
jb
cmp
movsb
jp
mov
jg
pop
insl
ret
shrb
loope
int3
sbbb
xor
movl
and
lgs
jl
dec
pop
sbbb
aad
xor
incl
rorb
push
cmp
add
dec
cmpb
sarl
addr16
push
clc
jg
pop
cmpsb
rorl
mov
cs
mov
movsl
cmpsl
stos
decl
and
inc
or
in
dec
or
subb
out
push
cmc
in
lods
orb
out
aam
adc
test
mov
lea
sub
mov
push
mov
ja
push
sbb
jns
mov
inc
dec
fwait
xor
and
aad
inc
mov
jae
mov
shrl
je
xchg
jb
int
and
sbbb
sbb
test
rolb
xchg
stos
mov
loope
inc
fwait
pop
movl
sbbb
mov
inc
andb
mov
xchg
pop
lds
lea
xor
ss
push
sbb
adc
addb
jno
pop
out
mov
subb
test
and
mov
jp
addb
imul
cmp
xorb
push
inc
inc
stc
addb
dec
mov
imul
jno
sub
jae
and
clc
xchg
jl
xchg
lret
pop
xorb
cmp
test
xchg
stos
pop
je
inc
iret
leave
loop
jp
jecxz
orl
bound
std
cltd
lea
xchg
xorb
adc
sbb
adc
pop
ja
pop
mov
adc
cs
xor
mov
inc
dec
leave
arpl
mov
stc
pop
jno
add
or
in
out
mov
and
fadds
cwtl
mov
jp
movsl
in
xchg
sub
cmc
ret
add
in
push
cltd
pop
jae
jmp
push
je
das
xor
imul
sbbb
sbb
aad
dec
outsb
jmp
bound
int
sti
subb
mov
idivl
adcb
dec
clts
and
jg
jl
push
pop
sub
cmpl
inc
dec
fs
jecxz
call
aas
lcall
roll
and
sub
sub
sbbl
mov
cmpl
sbb
shlb
xchg
adcl
dec
addb
movsb
sahf
fincstp
outsl
data16
mov
call
ss
lea
divl
xchg
mov
jp
jecxz
push
sbbl
sar
pop
imul
std
clc
add
jnp
dec
jne
xorl
lods
popf
rolb
add
pushf
push
cmp
hlt
int
popa
xchg
arpl
cmpps
add
xor
jl
sti
mov
insb
arpl
mov
adc
jbe,pt
inc
sub
add
jge
xorb
ret
sub
aam
dec
loopne
stc
cltd
adc
and
sbb
sub
push
sbb
mov
mov
es
pop
jno
sbb
pushf
mov
fdivrs
nop
sub
inc
jne
outsb
cmpb
mov
mov
mov
lods
or
mov
sbb
shrl
inc
orb
mov
or
das
mov
fisubrs
xorb
sbb
fcmovbe
imul
sbb
jg
aaa
jae
popw
cli
and
dec
dec
mov
movsb
mov
xchg
mov
inc
faddl
addr16
jae,pn
repnz
fldenv
push
and
pop
fwait
mov
movsl
fucomp
inc
xchg
inc
add
cmpb
mov
popa
je
sbb
pushf
imul
or
sub
sarl
xorb
adc
jle
xchg
pop
leave
pop
or
pop
lcall
mov
xchg
sbb
xchg
sbb
or
cmpb
std
and
lods
jnp
mov
pop
andb
outsl
jl
std
sub
into
sub
or
jns,pn
rolb
insl
arpl
outsb
sbb
movsl
mov
add
insb
push
push
roll
mov
mov
inc
mov
outsb
sub
mov
pop
push
jne
push
add
cmc
mov
addb
mov
lea
xor
fnsave
aaa
in
inc
fistpl
push
or
and
fwait
xorb
adc
dec
or
aad
fcom
cmp
mov
or
addr16
sbb
jo
mov
int
sub
addb
movsb
mov
loopne
aas
outsl
loope
sti
mov
sbbb
lods
stos
jo
push
orb
jns
addr16
xor
je
jno
push
xchg
xchg
loop
inc
jp
pop
xorb
js
repnz
lret
sti
mov
cmpsb
out
cmpb
or
sub
xor
mov
cmpsl
cmpb
cmc
adc
mov
lahf
ljmp
cmpb
mov
dec
addb
jmp
xor
jecxz
into
jge
imul
inc
push
lret
fiadds
lret
pusha
lds
push
test
std
mov
mov
pop
scas
out
mov
pop
daa
iret
add
jg
push
pop
jnp
jns
mov
int
xchg
ds
sbb
push
into
xchg
cmpsb
aad
enter
fildl
ljmp
pop
hlt
mov
and
scas
push
xchg
rolb
mov
scas
aaa
andb
ljmp
push
mov
mov
mov
test
and
fiaddl
jmp
int
orb
addr16
subb
and
jge
mov
cli
jmp
push
xchg
cwtl
jae
adc
dec
mov
sbb
xchg
xchg
call
cmpb
pop
mov
lods
addb
xchg
sub
ljmp
sub
flds
fcomp
inc
loope
orb
lahf
jns
in
push
or
sbb
daa
mov
jge
dec
lret
jg
jbe
push
cmp
fisubrl
mov
ss
push
sbb
shrl
xor
iretw
sub
adc
and
andb
mov
xchg
mov
pop
movsb
enter
scas
xor
cmpl
cmp
mov
pop
mov
or
rorb
mov
xor
sbbb
pop
test
dec
cltd
sbb
adc
fsubs
xchg
and
pop
xor
ret
add
or
push
or
mov
add
sub
pop
jmp
subl
mov
inc
orb
add
outsl
shl
mov
jb
lds
and
fisttpll
cmpb
adc
pop
sbbb
push
cmp
andl
pop
orb
fwait
in
and
bound
pop
pop
adcb
mov
nop
or
ret
inc
addr16
add
and
shll
stc
dec
mov
loop
add
movsb
xchg
or
cmp
push
in
subb
or
and
aas
mov
fsubp
adc
popa
sbb
xchg
or
mov
orb
sub
iretw
aaa
add
sbbb
dec
sbb
and
test
mov
lret
insb
mov
scas
aas
fcomps
and
jne
addb
bound
out
in
adc
orb
fldt
adcb
fisubrs
sub
push
and
lods
sarl
sbbb
or
imul
cmpsl
jge
mov
sbb
out
sarl
movsb
je
push
out
mov
xor
fisubrl
cmpsl
call
jnp
andl
outsl
sub
lods
xor
adc
cli
xchg
insb
pop
pop
loop,pt
sahf
adcb
stc
mov
loopne
popa
orb
mov
cmpb
push
adc
je
dec
lds
in
add
mov
fisttps
repz
mov
mov
adc
dec
mov
pop
outsl
or
dec
add
ds
nop
andb
adc
lcallw
xorb
push
nop
mov
fistpl
mov
sub
cli
push
lods
pop
aad
orb
jg
subb
outsb
int3
push
mov
and
andl
ja
and
push
mull
sbb
cmp
out
xchg
push
mov
loope
add
loop
xor
arpl
adc
in
rolb
push
mov
test
xorb
outsb
or
repnz
sbb
ljmp
and
jno
sub
sub
mov
mov
lcall
xor
sbb
or
stos
andb
adc
mov
inc
adc
fsubl
inc
xchg
cmpsl
rclb
ss
adc
sub
stos
push
or
mov
test
add
sbbb
pushf
pop
xchg
leave
lock
loopne
mov
xchg
push
cmpb
movsb
int
mov
roll
dec
test
jg
inc
and
xchg
fisubrs
sarl
adc
cmp
sub
adc
pop
jno
jo
adc
lahf
gs
inc
sbb
mov
fsubrp
arpl
andl
mov
movl
or
movsl
xlat
js
jmp
bound
fwait
dec
imul
sarl
iret
inc
andb
orl
jmp
addb
jae
mov
xorb
lods
mov
xchg
mov
push
xchg
subb
mull
dec
int3
mov
test
push
sti
imul
in
and
inc
stc
inc
lods
fbstp
shrb
js
je
sti
cli
mov
jg
cmp
loope,pn
cmpb
ret
xor
and
jo
jbe
xchg
addb
je
into
fstl
or
idivl
lds
iret
or
out
in
cmpsb
sahf
sbb
mov
notb
add
mov
in
fisubs
sbb
fwait
rorl
aad
pop
shll
add
pushf
mov
int
decl
jnp
addr16
jae
and
shrl
and
testl
addb
xchg
mov
push
push
cwtl
out
popa
pop
mov
in
sub
xchg
aad
fidivs
sub
sub
or
mov
aam
data16
mov
je
jp
lds
sbb
adc
int
mov
test
mov
push
je
outsb
pop
mov
test
pop
push
andb
mov
nop
add
ret
aaa
addb
or
mov
sbb
daa
cmp
stos
add
mov
js
push
sbb
jl
subb
ja
pusha
mov
jg
fsubp
mov
lock
lret
cmpsb
jnp
xchg
je
pusha
les
scas
adc
add
je
jmp
xchg
push
pop
mov
sti
insb
adc
lret
call
cwtl
sbb
mov
add
mov
into
jnp
dec
and
cs
add
andb
jb
add
sbb
popf
mov
loopne
push
inc
mov
xorl
bnd
imul
or
jae
pop
and
bswap
mov
dec
data16
std
fistps
or
rolb
mov
mov
insl
in
mov
mov
and
sbb
jle
jnp
lock
sbbb
jae
push
push
testl
in
andl
insb
push
inc
pop
add
scas
xchg
and
mov
jnp
inc
sbb
push
xorb
add
xchg
cmpsb
xorl
addr16
shrb
insl
cmpsb
lcall
les
pop
jl
jl
cltd
rorl
push
pop
ds
sbb
push
xchg
xchg
push
sbb
mov
sbbb
es
sbb
packsswb
xor
mov
aad
cmpl
jge
loopne
mov
std
cli
les
ret
xor
xor
push
jle
inc
add
repnz
cmp
push
test
stc
les
subl
mov
inc
out
cltd
in
xor
repnz
sub
mov
rorb
js
out
insb
jne
insb
sbb
data16
dec
pop
out
js
dec
je
ret
nop
imul
mov
add
gs
sti
js,pn
out
stc
jbe
jl
repnz
push
icebp
sarl
jp
or
cmp
mov
fdivr
orl
out
icebp
sar
or
or
mov
inc
imul
rcrl
sub
push
cmc
out
fs
ja
mov
jle
add
sbb
cli
cmp
mov
jg
push
test
scas
enter
test
pop
hlt
ds
fimull
jae
push
into
icebp
mov
cltd
adc
xchg
idiv
mov
incb
adc
inc
pop
repz
fstl
inc
sti
jbe
sbb
sbb
sbbb
nop
and
jge
cmp
sub
xchg
ss
in
adc
mov
out
in
lcall
lds
mov
dec
jb
inc
jae
ljmp
push
xchg
out
push
inc
mov
push
xchg
fcoms
movl
loopne
cmp
in
mov
repnz
lahf
adc
jae
lock
shlb
movsb
jp
and
push
xorb
lcall
iret
popa
cmp
lds
push
mov
jbe
xchg
pusha
lock
cmp
and
movsl
cmp
call
add
sub
aad
loopne
lahf
jbe
adc
std
jp
aaa
rcl
pushl
out
inc
mov
add
jne
xlat
sbb
cmp
dec
xor
iret
out
xchg
out
sub
push
push
pop
cmpl
xor
xor
push
ja
mov
fbld
inc
mov
test
pop
nop
xor
stos
int
jle
psrlw
push
jp
jge,pn
iret
inc
jo
divb
fwait
jae
bnd
inc
scas
jo
and
add
push
lcall
jmp
push
cmpsb
sti
add
into
mov
les
jp
jb
lods
mov
in
not
pop
inc
jle
jne
cli
cli
push
pop
inc
jo
jns
pop
adc
outsl
ja
jne
cmp
adc
cmp
ss
lock
and
lods
mov
inc
xor
pop
inc
int3
and
pop
shrb
mov
int
jnp
in
jns
cmp
addl
dec
insb
clc
lcall
and
les
push
and
or
push
dec
dec
outsb
xor
mov
adcl
movsl
fs
add
int3
outsb
lcall
pusha
insl
mov
pop
pop
cmp
jl
adc
xor
popf
rorb
xor
sbb
pushf
cli
or
and
cmp
outsb
iret
nop
cwtl
mov
sub
xchg
mov
lods
out
add
cmp
aas
mov
testl
jge
cmp
aad
cli
shrb
sub
shl
imul
bnd
pop
ljmp
divb
xor
mov
xchg
scas
fcmovb
push
sbb
insl
sahf
inc
cli
cli
test
jmp
add
ret
sub
xchg
add
mov
jg
cli
sbb
mov
push
xchg
gs
cmp
aas
rorb
inc
sarb
jo
jle
pushf
sbb
nop
push
enter
mov
inc
add
sub
rcr
mov
sub
sub
sbb
out
mov
push
test
jmp
xor
sub
rcll
dec
cmovno
inc
push
in
mov
cltd
fstpl
jns
outsl
cs
jns
mov
outsb
dec
sub
icebp
pusha
call
or
mov
lock
test
cmp
add
xchg
clc
sbb
push
push
mov
roll
sbb
fists
sub
sbb
jp
push
out
jl
jl
jae
and
add
stos
fcomp
outsl
add
outsl
push
mov
dec
fwait
stc
loop
inc
iret
and
and
pop
mov
sub
data16
dec
rcrb
add
add
sub
mov
sub
loope
or
subb
pop
clc
mov
adc
pop
aaa
inc
xor
sbbb
pushf
sbb
dec
mov
and
loopne
push
sub
test
cmp
repz
andb
xchg
cld
mov
loop
jbe
stos
xorb
adc
sbbb
fidivs
push
jl
stos
cmp
scas
cli
fs
iret
addb
fdiv
in
fbld
leave
ss
scas
andl
xlat
scas
hlt
test
lds
call
push
adcl
jmp
add
les
leave
les
jnp
out
fwait
mov
jg
pop
je
hlt
xor
sub
jmp
xchg
stos
fildl
movb
cwtl
jbe
insb
imull
test
mov
xchg
mov
inc
sbb
mov
jne
or
sbb
inc
movsb
adc
inc
std
jnp
loop
sub
lods
pcmpgtw
adc
or
cmpb
inc
jl
or
sbb
jg
sub
fildll
mov
lock
ds
adc
jge
popf
mov
lods
cmc
subb
mov
push
mov
int
call
xchg
ficompl
mov
sbb
lret
lds
in
orb
mov
pop
xor
insb
jp
sbb
or
cmp
adc
enter
movsb
jo
cmp
mov
and
sti
jb
lea
push
aaa
das
je
add
les
outsl
lcall
pusha
xorl
inc
jne
in
jb
pop
and
lods
add
adc
dec
loop
out
pop
in
jbe
xor
and
push
xor
lock
jge
sbb
push
data16
or
fwait
neg
ret
pusha
jp
mov
fadd
rclb
outsl
inc
orl
and
test
insb
xchg
shr
cmp
jp
sbb
cwtl
stc
jbe
mov
outsl
jb
outsb
add
and
fwait
pop
pop
sbbl
lret
rcrb
ljmp
or
mov
cli
mov
add
dec
shlb
dec
add
xchg
cmp
outsb
jg
sbb
enter
data16
dec
aaa
and
andb
jp
xchg
push
jmp
pusha
out
mov
cli
std
and
pop
jp
cwtl
outsl
lcall
sbbb
sbb
inc
or
adc
stos
cltd
outsl
scas
icebp
loop
dec
movsb
pop
pop
outsl
jb
hlt
mov
xchg
or
cltd
pusha
sub
or
int3
add
movsb
dec
jno
inc
sub
pop
lea
cli
push
pop
pop
or
cwtl
jne
pusha
jns
sub
jno
sti
pusha
mov
cld
dec
xor
mov
aaa
cli
mov
dec
sub
incb
fdivp
stc
fbstp
pop
jo
push
arpl
push
sub
push
loopne
mov
mov
sbb
add
mov
inc
rcll
jb
pop
in
sbb
jle
fnstenv
int
jns
jp
jb
sbb
ret
sbb
psubw
xchg
mov
mov
cmpsb
std
divb
cmpsl
jne
cltd
lods
or
mov
jbe
xor
out
insl
xorb
xor
cltd
insl
pop
cmpsl
add
mul
inc
mov
xor
shlb
pop
push
jbe
mov
push
mov
loop
jae
pop
push
dec
out
and
mov
jle
jno
xchg
ljmp
lcall
inc
mov
sbb
add
mov
xchg
add
aad
sbb
xchg
notl
and
xor
adc
test
xor
out
xor
pop
cmpsb
arpl
push
and
cmp
insl
jns
ret
lcall
gs
cltd
jge
pop
insb
and
fisttps
jns
insl
mov
scas
lods
icebp
int
inc
sub
shrb
jg
mov
leave
fiaddl
adc
into
push
lock
dec
inc
add
js
jle
push
mov
cmp
xchg
cli
xchg
jnp
xor
push
inc
arpl
jne
push
push
loop
jae
ja
sti
sub
xlat
dec
jb
adc
mov
push
bound
popa
test
adc
cli
lcall
dec
pop
jae
divl
xchg
cmp
es
cmc
andb
rcrl
repnz
pop
cmp
movsb
stc
push
pop
xchg
test
xchg
lcall
ja
jbe
jmp
push
imul
xchg
inc
dec
out
sbb
outsl
pop
add
adc
out
push
xchg
repz
icebp
or
ret
fidivl
data16
mov
shll
adc
outsb
std
jnp
xlat
jns
aaa
sbb
xorl
jns
cs
pop
lock
add
sbb
or
out
push
mulb
stc
xchg
inc
lock
sub
lea
jae
rorb
jl
cltd
push
sbb
stos
sbb
inc
pop
cmp
das
pop
outsl
add
push
cld
lret
repnz
jle
mov
cltd
sub
sbb
jp
lods
xchg
pop
push
js
sub
jns
push
data16
mov
leave
push
lret
jle
mov
xchg
mov
inc
cmp
adc
cmp
fsts
leave
jmp
jbe
push
and
push
shlb
add
mov
lcall
or
fsubrl
inc
icebp
inc
maxps
push
mov
sub
outsb
cli
es
dec
xchg
mov
mov
mov
mov
loope
push
dec
xor
lock
push
mov
push
cmp
push
repnz
push
test
ret
rcr
sahf
sbbl
jge
cmp
cli
xor
dec
ljmp
cltd
imul
xchg
or
lcall
and
cltd
ret
dec
enter
mov
jno
mov
leave
outsl
jnp
jg
int
fstl
cmc
cmp
ret
add
push
mov
cmp
sub
adc
cli
inc
xchg
jg
mov
imul
out
lds
aas
ds
cwtl
clc
jo
add
push
jecxz
or
inc
pop
mov
mov
pop
in
gs
insb
pop
jno
mov
out
inc
ljmp
xlat
adc
lods
xchg
and
sub
bound
lock
xchg
cmc
dec
movsl
mov
bnd
das
sbb
sbb
shr
std
inc
psllw
mov
xchg
ror
pop
aad
loop
filds
xor
bnd
shll
imul
adc
aad
loop
jp
je
pop
fs
or
int
mov
add
in
jns
mov
out
call
lock
adc
test
push
gs
aaa
push
in
xchg
add
out
sub
adc
sub
cmpsb
das
stos
ds
into
add
push
fs
mov
add
dec
sbb
insb
add
jns
enter
fmuls
push
inc
cmp
js
mov
mov
jno
test
loop
cltd
xor
sbb
test
repnz
mov
or
dec
pop
xchg
sarl
popa
outsl
dec
push
jp
std
push
jne
and
or
xor
movsl
xchg
jp
stc
jge
ret
cmp
xchg
mov
xchg
cwtd
mov
sbb
ret
loop
cli
sub
cmp
aad
out
xor
aam
add
push
sub
outsl
cli
push
pop
cli
sahf
jae
out
fidivrs
rcrb
ss
cwtl
mov
mov
jbe
push
sbb
dec
sbb
mov
mov
xorb
mov
and
dec
loopne
rolb
mov
mov
sbb
fsubl
mov
es
cmp
insl
idivl
fisubrl
je
cwtl
and
pushf
mov
sbb
outsb
and
pop
jl
push
aam
repnz
addr16
add
xchg
pop
dec
int3
imul
pop
mov
jle
loopne
pop
scas
imul
pop
daa
nop
lahf
rorb
jae
mov
pop
into
sbb
lret
mov
loopne
jbe
lods
add
shlb
jle
push
cmp
incb
or
orl
and
sbb
jo
out
add
xor
inc
inc
xchg
xchg
arpl
mov
arpl
xchg
popa
ret
test
std
mov
dec
jge
lcall
imul
lret
cmp
pop
xchg
cmpsl
shlb
sar
xor
dec
jle
jae
add
mov
fs
sub
ficomps
mov
mov
mov
add
jg
add
add
ficomps
cltd
adc
adc
jo
and
dec
andb
sub
sbb
sahf
orl
testb
sbb
stos
stos
jo
cmpb
adc
daa
mov
outsb
mov
xor
xor
or
gs
mov
push
popf
jo
addl
test
cltd
sbb
mov
fiaddl
cmp
into
pmuludq
out
clc
xchg
scas
mov
pop
pop
out
mov
out
addb
dec
mov
sub
push
sub
insb
jbe
aam
mov
sbb
push
adc
into
imulb
lock
dec
loope
movsl
mov
test
arpl
fadds
add
add
xchg
lds
sub
dec
in
xor
jne
jo
adc
int3
arpl
mov
and
inc
movsl
dec
jb
fisttpll
xorb
loopne
fisubl
orb
cmp
sbb
mov
mov
pop
hlt
sbb
les
dec
out
dec
xor
inc
push
gs
fldl
adc
xchg
addl
orb
bound
int
mov
ljmp
ret
or
adcb
cmp
pushf
sub
push
pop
cli
fisubrl
lds
or
and
ja
ss
adcb
decb
mov
sahf
cmp
sbb
xchg
adc
ja
push
sbb
jbe
mov
jecxz
jnp
decb
mov
xor
subb
inc
dec
test
sbb
lods
cli
subb
gs
push
bound
lret
negl
das
xor
inc
pop
xchg
test
gs
xchg
ret
add
push
cwtl
pop
ss
andb
lods
btc
fcmovnu
js
cmp
mov
xor
fimull
cmp
scas
and
cmpb
xchg
jl
cmpsb
xor
repnz
jecxz
sub
mov
in
insl
xor
and
cmp
ss
insb
nop
dec
pop
push
dec
test
jp
insb
cltd
test
lcall
cmc
lea
pop
mov
jmp
outsb
push
mov
push
mov
xchg
notb
or
insb
ret
cmp
cmpsb
or
aaa
add
repnz
mov
test
xchg
jbe
jecxz
or
dec
enter
inc
rcl
into
mov
jno
out
sti
push
shr
movsl
mov
push
lds
xchg
cli
insb
repnz
popf
jae
mov
cmp
jp
insl
cmpb
jno
add
out
arpl
jno
dec
outsl
lock
loopne
push
les
lea
xor
pusha
aaa
repnz
cmpsb
insb
into
dec
call
pop
orb
dec
push
xchg
test
inc
push
add
xor
mov
lods
xchg
lret
and
stc
mov
mov
ret
cltd
pop
shrb
repnz
addr16
ret
ja
int
rcrb
adc
dec
push
xor
repz
and
nop
mov
and
adc
xor
cltd
xchg
add
pusha
int3
imul
ret
stos
mov
addl
lock
xchg
sahf
add
out
incb
xchg
enter
pop
and
xchg
rcrb
aaa
jb
xchg
cmpsl
push
je
incl
outsb
cltd
pop
leave
add
cli
xchg
jmp
add
data16
das
jle
lret
loope
mov
pop
addb
push
pop
daa
adc
aam
mov
sbb
xchg
movl
mov
and
or
mov
jg
jg
imul
or
lahf
aam
pop
and
dec
push
outsb
cltd
lea
xchg
daa
mov
stos
jnp
out
pop
dec
rcl
dec
mov
jbe
jae
popf
pop
nop
jbe
sahf
pop
in
enter
pop
or
pop
sbb
into
cmp
in
out
lret
in
cmpb
mov
test
adc
outsl
cmp
cli
nop
inc
andb
fistpl
jno
out
mov
jo
clc
xor
insl
push
inc
jbe
data16
incl
pusha
sbb
and
pop
lcall
adcb
xchg
ret
and
sub
push
ret
sbb
inc
pop
sbb
add
iret
ja
cltd
dec
pop
cmp
stos
add
cwtl
jb
mov
jmp
jge
insb
adc
insl
dec
sub
popf
sbb
jo
in
jbe
rcll
lds
fwait
mov
fldl
imulb
mov
sub
dec
stos
xor
fisttps
fwait
xchg
cmp
loope
cmp
add
and
sub
daa
inc
call
push
in
xlat
sbb
std
lea
xor
aam
add
cltd
nop
movsl
adc
fstl
insl
mov
mov
pop
in
aas
inc
daa
bound
pop
imul
jns
rorl
xchg
movb
clc
loope
subl
jb
lcall
int
cs
pop
cli
orl
mull
mov
cld
insb
cmp
leave
iret
int
in
push
push
jle
mov
mov
out
cs
jne
add
cmpb
mov
into
dec
ds
mov
aaa
out
or
fnstsw
cli
cmp
outsb
jno
jne
js
mov
fs
jae
mov
and
ss
test
incl
ss
daa
add
lds
lret
ss
mov
push
imul
cmp
and
dec
loop
rcrb
ret
enter
ret
insb
cmp
out
mov
cmc
jle
push
sbb
jno
test
mov
out
sbb
aad
dec
add
xchg
rorb
sub
sub
in
lea
mov
push
rcl
cmp
mov
gs
add
ss
dec
lea
sub
cmp
push
aad
aaa
lock
pop
push
xor
or
push
mov
jo
sbb
mov
outsb
leave
imul
imul
mov
inc
push
lahf
hlt
not
mov
jno
pop
xor
push
aam
in
jge
in
sbb
test
fmulp
sub
sbb
cmp
mov
cmp
add
pop
mov
ret
and
and
nop
cltd
add
pop
pop
inc
loope
and
pop
push
mov
lcall
mov
push
lahf
push
push
push
jecxz
mov
adc
dec
cltd
dec
fidivrl
cmp
sbb
xchg
jle
outsb
mov
pop
mov
aas
insb
mov
sar
pushf
xchg
imul
mov
pop
xor
sti
aam
movsl
nop
inc
sbb
lock
mov
fwait
pushf
mov
pushf
inc
xchg
push
pop
xor
nop
test
repz
loope
fadd
test
pop
leave
jae
rcrb
mov
stc
push
sbb
pop
divb
pop
fsubrs
cmp
nop
dec
push
stc
scas
mov
inc
cmp
push
push
jp
pop
jle
xchg
addr16
add
adc
les
test
es
bndstx
aas
jge
inc
rcrl
jge
out
jns
popa
ds
sahf
lret
mov
mov
out
int3
les
fdiv
insb
adc
dec
or
sarl
mov
jo
outsb
lret
stos
inc
adc
pusha
ret
and
cli
add
ds
mov
cld
stos
enter
pop
jo
fldl
mov
lcall
ret
dec
lock
sub
inc
sbb
and
ret
repnz
cwtl
push
sub
cmp
jo
sahf
mov
cltd
js
bnd
fs
js
imul
stos
out
stos
in
loopne
sub
out
sahf
ja
mov
add
movsl
lods
dec
out
cmp
test
orb
cmp
pop
xlat
ret
mov
ja
loope
jb
mov
or
and
movsl
mov
jmp
mov
les
out
cmpb
push
test
aaa
sub
fwait
dec
bound
mov
xchg
jne
push
xchg
lcall
jbe
in
and
shll
shll
lret
add
enter
icebp
addb
mov
je
sbb
stc
std
jae
xor
dec
pop
mov
repz
cmc
ret
mov
stos
jae
test
leave
push
push
add
cmp
sub
mov
outsl
sbb
jecxz
addr16
cli
jns
inc
jnp
std
sub
sbb
mov
or
repnz
shrb
pop
xor
jp
mov
push
jmp
call
dec
xor
fiaddl
mov
in
orl
icebp
movsb
xor
pop
push
mov
mov
addr16
mov
mov
lods
inc
xchg
scas
enter
pop
scas
cltd
mov
jo
imul
push
test
ljmp
js
mov
subb
in
cmp
push
adc
adc
repz
mov
les
dec
jns
pop
add
push
pop
outsl
aam
cmp
lret
cmp
stos
lds
int
adc
inc
mov
mov
outsl
adc
sbb
lahf
xchg
mov
jl
scas
loope
cwtl
push
outsb
xchg
cmp
out
in
cmp
movsb
inc
cmp
pop
dec
repnz
sbb
jns
dec
mov
repz
and
das
dec
dec
jg,pn
jle
ret
mov
sbb
aaa
lock
scas
cmp
xor
lret
cmp
mov
outsb
rorb
jl
pop
and
or
bound
int
andl
jle
jae
shl
lods
jo
lods
in
cmpsb
and
mov
je
mov
aas
pop
stc
jns
mov
lcall
insl
mul
dec
push
mov
dec
stc
sbb
jle
lds
jge
mov
nop
inc
ss
roll
and
stos
sbb
lahf
subb
push
jae
mov
mov
lds
lods
add
ret
cmovp
fiadds
push
xor
pop
daa
xor
xor
filds
xchg
pop
andl
or
xchg
inc
jg
sbb
sti
jnp
call
xlat
inc
lea
rcr
es
pop
das
inc
ds
mov
nop
sahf
bnd
aas
lahf
out
add
xchg
cmc
pop
xorb
aad
pop
jb
push
adcb
repz
jns
mov
lea
cmp
inc
outsb
add
lahf
icebp
and
cmp
lret
cmp
loopne
sbb
lret
push
xor
mov
jae
sti
pop
adc
inc
loopne
push
jae
sub
mov
push
andb
sub
dec
adc
pop
aam
xor
outsl
mov
test
sbbb
and
insl
sbb
addl
and
subb
pushf
fdivrs
mov
mov
hlt
and
popl
sub
andl
xor
movb
jmp
jne
jno
in
loope
xorb
lock
adc
inc
leave
cmpb
cs
push
mov
xchg
mov
jmp
pop
data16
add
fadds
into
or
inc
cmpb
sbb
iret
insl
xorb
fwait
out
dec
pop
jns
push
jg
xchg
or
popa
sub
sahf
xor
mov
imul
adc
fsubr
and
jl
pop
cmpb
mov
jle
pop
mov
xchg
test
push
mov
jne
and
addb
addr16
sbb
aaa
mov
bound
sbb
xor
mov
rolb
js
xor
inc
enter
ja
pop
jecxz
dec
ret
xchg
push
fdivl
mov
icebp
jae
cwtl
push
sub
sbb
scas
jp
mov
push
jg
cmc
les
shll
and
lods
rclb
inc
leave
mov
mov
call
popa
jae
cmp
mov
adc
pop
ret
aas
es
xchg
inc
aaa
and
sbb
push
mov
ror
cmp
out
testl
mov
cmp
mov
lea
arpl
jo
div
mov
shlb
mov
cwtl
rcrb
lds
lcall
gs
outsb
out
and
hlt
sarl
sbb
jne
pop
mov
outsl
aas
inc
je
cmp
push
push
test
das
jecxz
push
lock
ret
jbe
cmpl
add
and
fcomi
xor
cmpb
lcall
sti
lahf
movsl
dec
arpl
add
push
or
std
jbe
xchg
mov
cli
inc
push
outsb
adc
adc
sub
dec
mov
mov
xorl
inc
jbe
dec
push
jb
sub
dec
test
dec
cmp
cltd
repz
imul
adc
jle
scas
dec
sbb
cltd
test
leave
mov
pop
push
lock
cmpsb
bound
pop
and
dec
jecxz
add
ret
shrl
jae
sub
xor
fidivrs
sub
lret
notl
jp
nop
or
mov
loop
sbbb
scas
mov
xchg
inc
ss
sub
mov
xlat
fidivl
cltd
push
mov
dec
jecxz
inc
sub
jne
cmpsl
cltd
or
je
mov
mov
dec
iret
xchg
adc
inc
jb
pop
push
cltd
add
lcall
push
adc
adc
sbb
push
or
xchg
lahf
mov
jecxz
test
adc
jae
add
inc
inc
repnz
adc
fdivr
jo
in
push
insl
loope
sub
adc
test
mov
or
andb
test
and
mov
adc
sbb
arpl
loope
cli
pusha
xchg
jo
sub
inc
dec
cltd
jl
pushf
xor
mov
cld
and
xchg
sti
dec
movsb
repnz
imul
xchg
jl
adc
jns
fstps
sbb
jbe
lds
imul
mov
jge
or
xor
mov
xor
sbb
sbb
cltd
adc
jge
lcall
loop
aaa
imul
in
insl
pop
out
in
repnz
xor
in
pop
into
ret
jbe
sahf
inc
adcl
std
testl
sbb
sub
jecxz
cmp
addr16
insb
cltd
and
pushf
cmp
in
pop
sbb
xchg
xor
fnsave
adcl
ljmp
lret
ficomps
mov
outsb
cmp
mov
les
cs
mov
mov
push
scas
lea
pop
mov
pop
bound
ficoms
mov
dec
add
enter
adc
lock
dec
outsl
stos
jg
or
stos
cmpsb
lcall
cmp
pushf
xor
pop
cmc
hlt
inc
sub
add
jp
push
sub
sbb
dec
push
ja
xchg
jb
fnstcw
repz
loop
adc
and
std
rclb
stc
or
jge
jg
cmp
mov
push
inc
cmp
mov
push
push
lcall
aas
les
sbb
or
test
shlb
lds
add
pop
adc
mov
add
push
or
lret
xor
dec
push
push
fstps
jns
mov
shl
mov
lock
mov
jle
iret
insl
in
push
pop
jb
or
sub
add
adc
cmp
inc
in
jno
mov
mov
icebp
cmp
std
dec
rolb
push
xor
ret
mov
and
add
out
ss
lret
ljmp
xor
adc
sbb
lods
push
jb
cwtl
jb
mov
out
dec
out
and
or
cltd
fsubrs
mov
sub
ljmp
jle
sub
out
pop
or
sarb
lea
push
sbb
stos
or
int3
xchg
xor
mov
push
pop
xor
loope
pop
add
jno
xchg
jb
cmp
shll
int
jo
dec
pop
jmp
or
je
xchg
mov
pop
sub
adc
sti
lahf
mov
mov
loope
divl
lods
nop
imulb
ret
mov
jl
sub
out
cs
clc
pop
cmp
std
add
push
mov
add
stos
xor
jo
es
mov
jbe
dec
push
push
leave
mov
jp
int
popa
mov
inc
add
cmp
lret
addb
dec
mov
inc
fs
push
sti
add
fucomip
subb
xor
addb
adc
mov
mov
rorb
addl
scas
orb
lahf
inc
add
add
les
or
in
xchg
aaa
lods
addl
or
xlat
nop
jle
pusha
adc
xchg
je
mov
jge
cltd
push
cld
popl
jns
dec
nop
add
lods
jle
mov
negl
xchg
jg
test
popa
pushf
loop
fbstp
xorb
test
or
popf
adc
lds
ss
andb
xchg
and
push
jg
stc
das
out
ret
stos
mov
cmpb
lcall
fcomps
jns
jecxz
fs
sbb
mov
ds
fldt
scas
push
ljmp
xchg
mov
jnp
dec
cmc
fidivrl
and
andl
lock
popa
aam
ficompl
cmp
repnz
mov
mull
pop
push
cltd
insb
cltd
add
mov
and
push
notl
enter
cli
sbb
dec
pop
xor
bound
cmp
in
sbb
pop
int3
and
mov
mov
or
xor
fs
ret
push
jmp
pusha
jecxz
add
jns
xchg
repz
jp
shlb
out
lcall
mov
dec
scas
dec
add
ja
cmp
subb
push
insl
lcall
stc
insl
xchg
test
pop
stos
xchg
mov
jge
cltd
mov
or
ret
pusha
cmc
dec
and
xchg
xchg
cmpb
cs
jl
jb
addr16
idivl
cld
and
int3
outsl
das
scas
ja
push
or
cvtdq2ps
cmc
or
addr16
enter
ficoms
or
add
aad
int3
movsl
imul
push
js
inc
jo
sbb
enter
ret
jmp
imul
mov
cmc
jg
sub
push
rorl
jle
add
imul
sbb
movsb
int3
jle
retw
test
aaa
mov
adcb
les
subl
push
ds
movsb
in
xorb
imul
mov
mov
mov
xchg
push
adc
adc
cmp
or
jb
aad
jle
stc
movsb
aaa
jne
pusha
fwait
jp
pop
mov
inc
aas
jg
arpl
mov
fldenv
jge
movsb
aas
xor
aas
aam
loopne
inc
das
scas
lret
lret
enter
push
sahf
lret
fcmovnu
lds
pop
mov
mov
mov
xchg
mov
stos
xor
mov
cli
jbe
adc
js
mov
enter
scas
leave
int
and
daa
xchg
mov
fcomp
js
lret
test
scas
dec
in
cmp
ret
or
das
repnz
adc
les
push
pop
jl
rclb
and
push
add
inc
cltd
adc
and
loope
lret
push
mov
loop
push
out
pushw
std
sub
adc
es
push
cmp
xchg
jge
xor
leave
pop
jne
jmp
add
enter
and
jae
push
mov
add
lahf
sub
lret
ja
in
sub
dec
push
jle
and
sbb
xor
pop
fnstcw
das
push
vhaddpd
mov
jne
and
in
sub
cmc
cld
dec
adc
inc
pop
or
cltd
in
enter
push
or
sbb
insb
sub
cmp
pop
js
push
sbbl
nop
sub
xchg
xchg
push
mov
out
mov
push
lock
xchg
xchg
cli
dec
stos
cltd
xorb
fcoml
dec
out
add
leave
xor
ret
das
dec
in
xchg
add
xchg
out
andl
sti
pop
out
lods
pop
adc
mov
cmp
cmp
out
lock
cmp
jp
mov
add
loopne
mov
fidivl
jns
xchg
or
ss
mov
ret
jle
in
sbb
data16
scas
dec
loop
in
xchg
or
sub
mov
cwtl
add
ss
sbb
leave
xchg
mov
jp
jnp
rcrb
cwtl
push
lcall
std
jecxz
cltd
and
pop
add
cltd
fistps
and
dec
cli
fiadds
pop
xor
xchg
cmp
test
xor
cmpsb
int
pop
cltd
jl
repnz
inc
sbb
push
inc
add
add
push
lods
call
jo
sbb
pop
call
mov
gs
add
mov
les
inc
imul
dec
subl
ret
lcall
xor
cmp
ss
sbb
das
inc
xorl
inc
sub
lock
jl
insl
lcall
in
daa
test
ret
sub
rcll
cld
arpl
xchg
cmpb
out
adc
mov
pop
jno
xorb
xor
shlb
andb
xchg
into
dec
sub
add
sbb
addb
push
aad
fistpll
adc
dec
add
div
mov
push
cmpb
fs
pop
sbbl
mov
push
xor
lret
xlat
or
je
push
dec
mov
cmpsb
and
pop
mov
mov
adcb
sbb
aas
xorb
leave
movsl
adcl
mov
xor
ljmp
or
loopne
repz
dec
subb
xor
addb
test
xor
aad
xchg
js
daa
and
dec
nop
in
gs
addb
jno
sahf
mov
push
sub
andb
movsb
negb
push
addb
outsl
ret
icebp
cmpb
mov
data16
xorb
push
mov
cmpsb
int3
addb
xor
subb
fdiv
pop
hlt
push
or
icebp
out
or
inc
in
jle
adcb
mov
jnp
push
fisubrl
ret
sbb
or
jno
subb
cmp
filds
pop
std
das
pop
and
lea
jno
cmp
aam
filds
mov
popf
sti
or
jae
push
scas
std
mov
inc
add
test
hlt
in
loop
int3
xor
push
xor
ja
out
stos
lcall
cs
cmpsb
jbe
dec
dec
lds
movsl
jl
ret
sbb
xchg
rcrl
or
jecxz
fisttps
push
adc
jmp
bound
mov
fs
addr16
cmp
lahf
mov
mov
sub
stc
repz
dec
out
pop
jns
jns
outsl
addb
fsubs
adc
cmp
movsb
xor
popf
cmpl
in
inc
xchg
add
mov
addl
mov
stc
orl
arpl
add
mov
test
rcll
add
scas
out
pop
inc
cmp
inc
jmp
hlt
sub
mov
addb
aaa
inc
adc
orb
xchg
cmp
loopne
push
insb
mov
xorb
je
mov
daa
push
dec
aam
icebp
lret
cmpb
ds
negl
insl
mov
adc
pop
ja
lcall
js
into
pop
mov
leave
cmp
out
cld
cwtl
cmpsl
popa
adc
pop
int
pushf
mov
shlb
xchg
addr16
cs
cmp
pop
inc
icebp
out
push
sbb
dec
movsl
inc
imul
stos
sbb
and
std
jg
and
test
add
subb
xor
out
mov
xchg
sahf
push
movsb
add
js
stos
loope
mov
pop
sbbb
fimuls
orb
ret
hlt
adc
xor
and
or
xchg
aam
cmpsl
adcb
pusha
scas
mov
xor
sbb
mov
orb
sub
popf
repz
xchg
js
sub
push
xor
test
cmp
std
pop
add
insb
mov
xor
adc
mov
ds
add
arpl
inc
add
arpl
xor
faddl
ficompl
mov
sbb
mov
add
int
andl
clc
sbb
fdiv
lcall
inc
push
repz
jg
mov
lret
sbb
repnz
lds
loope
push
or
fiadds
notb
jae
inc
dec
in
inc
out
and
push
sub
adc
fbstp
mov
dec
sbbb
fwait
inc
xchg
mov
or
hlt
dec
insl
xchg
mov
lea
jmp
ljmp
or
inc
cld
xor
addl
cmp
subb
xchg
int
xchg
loope
jae
call
enter
out
jecxz
ljmp
lret
push
or
add
and
ja
imul
inc
fiadds
imul
mov
mov
js
adc
pop
lret
cmp
pop
xchg
dec
inc
subl
xchg
xor
xor
jmp
sub
push
inc
jnp
loopne
ds
rorb
jmp
scas
cmp
jle
lcall
xor
pop
cmp
mov
gs
test
insb
stos
add
fs
mov
subb
jo
or
fstpl
scas
flds
sbb
dec
pop
popf
lret
or
pop
leave
ja
add
pop
ja
dec
arpl
add
sub
in
std
sbb
xchg
sbb
sub
mov
add
dec
jno
lcall
add
mov
xchg
scas
and
or
mov
andb
push
inc
or
lock
jg
dec
jb
ret
mov
xorb
loop
jge
cwtl
addl
fwait
add
fcompl
das
adcb
mov
cs
int
repnz
sub
mov
sub
arpl
sbbb
mov
xorb
sub
lcall
add
mov
add
fwait
addr16
out
dec
jnp
xchg
xchg
std
out
sbb
cld
mov
inc
lret
push
jne
andb
mov
xchg
subb
push
movsb
mov
mov
enter
or
aam
out
pop
addb
cld
dec
mov
loop
jmp
add
sbb
adcl
mov
fisttpl
lods
inc
adcb
jp
xchg
sub
in
and
jnp
shlb
or
xlat
push
jl
outsb
sub
pop
test
insb
bound
jb
sub
dec
add
enter
lahf
stos
pop
jo
jg
fsubs
add
dec
add
inc
orb
lret
lahf
mov
sbb
jns
mov
addr16
xchg
enter
in
add
jne
cmpsl
mov
jnp
out
push
loop
xchg
loope
xchg
mov
jae
rorl
lods
or
dec
call
and
adcb
jnp
lods
sbb
stc
adcb
mov
add
out
pop
mov
leave
addb
sbb
arpl
xor
jne
aam
xorb
push
and
fisubrs
insl
inc
lea
dec
sub
add
sahf
in
shrb
ret
ljmp
pop
movsl
testb
xor
popf
mov
scas
subb
push
repz
mov
xorb
cmc
push
clc
daa
outsb
and
scas
sbb
jb
sar
icebp
and
pop
sub
fildl
jne
push
in
sbbb
jecxz
cmp
jmp
sbbb
iret
push
adcl
lds
cwtl
push
jnp
xchg
repz
std
xchg
push
pop
addb
in
push
andl
lcall
cwtl
cmp
repnz
imul
xchg
mov
mov
and
cmpsb
jb
and
int
stos
mov
sub
mov
dec
test
mov
pop
push
test
push
ficoml
mov
subb
arpl
mov
sbb
dec
iret
mov
lret
mov
and
dec
enter
popa
outsl
into
xor
and
fstps
sbbb
in
imul
xor
loope
mov
pop
or
fsubs
mov
shrl
addb
fucomi
addb
jb
sub
sub
cmp
outsb
jl
xorb
pop
xor
sbb
cmp
aad
ret
out
stos
and
cmp
shrl
addb
xchg
cmp
sbbb
push
xlat
dec
ss
arpl
and
xchg
push
sbbl
int
cmpsl
rcrl
outsl
mov
test
xorl
fisubrl
lods
xor
aam
loopne
push
daa
jg
into
adc
jmp
pushaw
gs
xchg
rclb
dec
in
cmpb
mov
xor
sub
arpl
ret
cmp
data16
xor
push
andb
int
sbb
xor
push
insb
mov
inc
sub
mov
push
cltd
add
cmp
cmp
inc
js
outsb
xchg
lret
loop
icebp
xchg
dec
ja
mov
push
push
andb
imul
mov
xchg
and
push
xchg
lcall
lods
ret
and
sub
bound
inc
mov
jno
jae
dec
outsl
xchg
jae
out
dec
mov
xor
inc
mov
sbb
mov
ja
in
in
movsl
inc
cmc
jle
sub
fstpl
push
xorl
jne
pop
sti
dec
ret
dec
mov
repnz
orb
mov
xchg
pop
push
out
scas
lret
dec
daa
pop
iret
iret
jns
lcall
aas
mov
lock
add
stc
pusha
shll
cli
or
addr16
add
mov
or
int
lahf
out
cli
jmp
xor
lods
jle
cmp
push
stc
jmp
sbb
xor
out
and
cli
andl
mov
mov
cmp
inc
loope
lcall
sub
fsubrl
and
mov
out
jmp
pop
mov
inc
jge
pop
mov
aas
lds
repnz
lcall
jno
bound
mov
out
daa
sub
dec
push
cltd
das
and
fadd
test
fs
sub
cmp
cmpb
pop
sbb
lret
or
ret
sbb
xchg
mov
mov
inc
sub
iret
out
xor
mov
loop
cmpsb
imul
jp
lret
pop
jge
lcall
mov
mov
xor
jg
push
lret
jl
dec
pop
scas
lahf
adc
add
pop
xor
dec
fnsave
jb
ret
lcall
sbb
sbb
icebp
xor
outsb
loop
mov
mov
gs
ret
inc
icebp
daa
xor
mov
int
and
push
outsl
sbb
xrelease
aam
xor
sbbl
mov
negl
adc
pusha
pop
or
es
or
test
lea
inc
mov
outsb
insl
cmp
lds
sub
in
jnp
sbb
and
pop
aas
and
jo
xchg
das
add
cmp
pop
rolb
clc
out
sub
div
mov
inc
or
xchg
push
sbb
pop
jp
mov
mov
aaa
mov
movsb
aas
arpl
cltd
leave
mov
or
mov
sbb
lcall
mov
push
push
arpl
inc
out
sub
pop
jae
test
inc
repnz
push
xorb
sahf
sbb
push
les
orb
jb
imul
ret
jns
fistpll
cld
testb
ljmp
enter
jp
roll
xchg
icebp
mov
fimull
dec
cmp
or
sbb
pusha
int3
test
int
or
or
cmp
leave
nop
jns
mov
out
arpl
xor
xor
mov
add
sub
ret
jp
jno
mov
lock
sahf
data16
daa
push
jp
lock
mov
fidivs
xor
scas
ja
ja
shlb
jg
mov
adc
pushf
cmp
stos
sbb
dec
jnp
mov
mov
pop
dec
mov
and
jp
subb
loope
loop
jge
jmp
xor
outsw
sbb
decl
xorb
insb
adc
sub
cmpsb
push
test
jg
andb
in
iret
push
inc
nop
andb
mov
pop
or
decl
and
xchg
sub
sbb
adc
and
cmpsl
pop
xorb
adc
xchg
or
dec
mov
jnp
les
andb
jl
jp
fldl
sbb
mov
mov
xchg
rorb
fdivs
aad
dec
add
adc
pop
cli
imul
lock
iret
lea
or
pop
shll
stos
leave
mov
xor
mov
mov
into
repz
cltd
hlt
mov
sbb
stos
jp
push
inc
pop
addb
dec
cmp
sbbb
inc
fidivrl
add
adcb
in
movsl
fsts
out
cmp
dec
sahf
pusha
add
addr16
test
jecxz
repnz
cld
or
sbb
add
add
cmp
add
mov
jg
inc
nop
hlt
inc
cmpb
imul
clc
cli
push
cmp
call
outsl
sbb
fnsave
xor
popl
subb
adc
je
cmovg
adc
inc
es
dec
outsl
fisttpl
push
push
xor
subb
cwtl
lcall
inc
jmp
jge
cmp
sahf
pop
scas
scas
lea
add
xchg
push
jnp
fwait
pop
jne
repnz
lret
and
xchg
jns
scas
jecxz
adc
xchg
adc
inc
sbbb
ss
ljmp
lods
shlb
pop
data16
jnp
imul
orb
dec
lods
and
add
pop
bnd
rcrb
xor
sti
pop
add
clc
add
xor
mulb
jg
rorb
sbb
imul
sub
pushf
mov
inc
sub
lock
stc
daa
xchg
pushf
and
inc
jo
xor
push
cmc
arpl
sub
cmpb
adc
inc
xor
sub
stc
sbbb
cwtl
es
xchg
loopne
ret
jo
sarl
fisttpl
repz
add
xor
cmp
shll
and
add
jg
cmpb
pushf
call
add
loope
int
add
sbb
push
inc
ret
stos
loope
dec
sbb
cmp
inc
sbb
pop
adc
fwait
pop
jge
mov
popf
stc
orb
jg
mov
pushf
and
adc
aas
or
adc
inc
dec
nop
mov
orb
cwtl
mov
xchg
pusha
loop
xchg
sbb
pop
jns
adc
jp
or
shll
mov
shll
sti
add
mov
rcll
icebp
push
cmpl
aad
add
lea
out
xor
fwait
or
fcomip
add
lcall
fisttpl
cmpsb
mov
sub
data16
add
setno
fists
sub
scas
mov
cmpb
pusha
mov
roll
inc
push
shll
loop
mov
sbb
jnp
jo
mov
add
xchg
addb
mov
mov
cmc
inc
lea
das
mov
jle
sbb
or
call
int3
pop
mov
adc
pop
scas
pop
sbb
popa
mov
sub
xorb
add
sti
movb
dec
and
loopne
stos
dec
or
aad
adc
push
fldl
pop
sti
dec
loop
push
sub
add
jecxz
into
jmp
leave
cmp
fisttpll
lods
add
addr16
lock
push
mov
dec
outsl
dec
and
adcb
adcb
and
enter
mov
xchg
push
aas
pushf
inc
call
push
leave
mov
cvtpi2ps
stc
dec
mov
sub
rol
data16
stos
inc
push
repz
fwait
xor
inc
sbb
mov
fdivs
adc
add
mov
lds
aam
movsb
sub
cmp
inc
subb
lretw
testb
dec
push
flds
adc
sahf
orb
cmp
dec
test
push
add
lret
pop
sbbb
leave
inc
jle
mov
test
sbb
adcb
stos
in
xchg
or
mov
cmc
pop
sbb
pushf
add
outsl
les
lahf
int
xorb
jl
call
aad
iret
inc
mov
daa
push
mov
xor
pop
xchg
jnp
xchg
in
cmp
inc
inc
ret
jle
mov
cmpsb
push
cli
jne
sahf
stos
mov
sub
and
das
loop
icebp
imul
xchg
jnp
mov
sbb
das
adc
insb
xchg
loopne
cmp
xor
pop
mov
xorb
insb
hlt
jge
fwait
in
stos
fdivrl
scas
push
aad
fsts
pop
repz
dec
sbbb
inc
xchg
addl
pop
or
push
fldenv
dec
push
or
test
subb
subl
sub
aas
dec
gs
cmp
je
lds
sbb
sbb
jp
xorl
movb
pop
add
jbe
push
inc
lds
sub
hlt
lahf
cmpsb
mov
adc
inc
loop
inc
insl
mov
xor
jns
jmp
loop
test
aaa
adc
and
dec
xor
sbbb
rcr
popa
mov
xor
xchg
and
jnp
test
scas
inc
push
sbb
roll
call
pusha
les
outsl
loope
pop
daa
jne
int
sahf
mov
repz
loope
mov
popf
inc
mov
jnp
xor
cmp
lcall
subb
mov
gs
rcll
out
adc
cmp
shrb
int3
xorb
in
xlat
inc
inc
mov
jg
cs
adc
xorb
popf
push
jmp
data16
jnp
and
loope
jb
enter
test
mov
cmpl
pop
aam
popa
sub
mov
and
xchg
jmp
fwait
xor
or
xor
mulb
mov
add
ja
mov
call
and
mov
cs
mov
xchg
mov
repnz
add
mov
mov
xor
cmpsb
fcoml
fdivp
xorb
cmp
jg
mov
popf
not
cli
dec
xchg
mov
out
fucompp
out
and
pop
push
aaa
cmp
lret
pop
mov
je
imul
lods
pop
jecxz
or
aaa
out
inc
stos
test
jge
or
sub
xchg
addr16
jnp
roll
add
pop
mov
jb
out
cltd
loopne
push
jns
xor
sbb
enter
mov
sub
nop
mov
dec
nop
add
ret
mov
xor
jne
aas
arpl
sub
cli
shlb
imull
iret
or
jp
push
inc
xchg
push
cltd
push
mov
or
mov
cmp
jle
dec
loopne
out
and
ret
adc
scas
stos
xor
mov
cmp
xor
mov
popa
cmpsl
cld
adc
movsl
jo
cmp
sub
add
pop
and
cmp
and
jl
ret
mov
int3
cmp
jp
add
sbb
lock
jbe
shrl
and
repnz
stos
mov
mov
int3
mov
mov
push
jecxz
iret
jle
inc
insl
xchg
xor
mov
loopne
stos
dec
dec
sub
jge
enter
in
push
xchg
push
fcompl
test
mov
and
popa
mov
mov
or
mov
sub
mov
mov
pop
dec
in
xchg
cltd
stos
clc
xor
xor
adc
add
mov
imul
lcall
popf
mov
sbb
daa
lcall
cltd
xchg
mov
or
fs
clc
mov
or
and
xchg
stos
mov
mov
lahf
pop
es
popa
lcall
xchg
andb
loope
cmp
jle
cltd
sub
lcall
dec
rorl
orb
adc
movsl
mov
sar
xchg
cli
ret
pop
fidivrl
daa
cmpsl
div
addb
test
xchg
jns
xlat
aas
and
push
cltd
fisubs
int3
jg
out
lcall
push
mov
ds
sbb
push
mov
shll
jge
mov
pop
stc
xor
out
imul
lcall
mov
push
dec
dec
mov
lods
mov
test
xchg
aad
or
xchg
shrb
inc
rol
fwait
adc
stc
xorb
cmp
sub
lahf
push
xchg
test
cltd
xor
sbb
popa
jae
out
test
and
mov
jbe
and
lea
dec
cmc
outsb
xor
cmp
movlps
jle
je
mov
mov
lock
jle
daa
or
xchg
add
bound
adc
cltd
mov
pop
xchg
icebp
mov
sbb
mov
jb
mov
hlt
mov
mov
push
test
fnsave
or
and
xorb
sbb
pop
cmp
mov
jae
pop
jge
ret
add
pushf
ret
ss
pop
adc
in
cltd
xchg
repz
fs
mov
aad
stc
test
scas
pop
push
xchg
insl
bound
dec
outsb
fs
cwtl
adc
pop
mov
outsb
cltd
and
jp
dec
xchg
clc
push
lahf
xor
popa
jb
fdiv
cmp
cmc
jnp
leave
call
xchg
push
sbb
aad
jp
loopne
mov
testb
scas
add
fs
stos
mov
xchg
xor
jge
xchg
mov
and
pop
jbe
ret
push
and
xchg
outsb
sub
and
mov
jge
shll
les
pop
loope
stc
xchg
xchg
ljmp
jbe
sub
mov
shlb
rolb
cltd
jo
mov
sbbl
sub
add
incb
in
push
inc
push
stc
sbb
ret
scas
in
jo
lcall
pop
mov
pop
sbb
jecxz
mov
and
hlt
cmp
stc
inc
jnp
ret
jge
inc
cltd
xchg
jge
cli
inc
mov
arpl
add
jle
cmp
xchg
cmpsb
mov
clc
add
adc
xchg
loope
movl
jae
sub
lods
pop
test
loope
adc
mov
orb
int3
fldl
dec
les
mov
mov
andb
cmc
out
and
jmp
sarl
mov
or
or
dec
sbb
cmc
data16
add
bound
push
cli
leave
pop
or
sarb
imul
dec
dec
int
and
andb
mov
push
test
push
lods
scas
lret
movsb
sbb
mov
xchg
fisubs
adc
outsb
in
sub
cmp
pop
fcomps
ret
xorb
cmp
imul
pop
inc
das
jle
mov
in
and
push
fstpt
inc
testb
into
adc
dec
pop
inc
jne
rcrb
xor
jmp
push
filds
outsl
lahf
das
stos
gs
aaa
xchg
inc
jg
popa
scas
stc
scas
leave
sub
cmpsl
push
cmp
mov
testl
adcb
jp
dec
sub
addb
cmp
jecxz
push
sub
mov
cmp
jb
mov
cmp
adc
jne
and
mov
stos
pop
jnp
shll
jb
pop
jmp
subl
pop
cmp
cmp
sbbb
adc
loop
rcrl
pop
jecxz
adc
inc
add
lahf
fwait
imulb
pop
adc
adc
or
mov
scas
sbb
adc
xchg
pop
mov
sahf
mov
xchg
and
subb
mov
ljmp
or
sub
jle
add
xorl
int3
mov
sbb
arpl
xchg
out
scas
and
mov
shrb
xor
aad
cmp
lods
inc
jmp
push
or
subb
enter
inc
xlat
xor
xor
jb
arpl
pop
insb
inc
push
push
cld
clc
cmp
inc
dec
sub
xorb
and
xor
addb
les
xchg
fistps
std
fs
adc
inc
add
dec
neg
add
inc
pop
fs
pop
jg
sub
out
dec
stos
sub
adc
inc
xor
lods
ljmp
shl
dec
and
jbe
push
mov
nop
xchg
lods
imul
push
xchg
xor
or
jae
mov
cmp
addb
idivl
jnp
pop
mov
out
cmp
rcr
orb
repnz
xor
cmpsl
outsl
xchg
in
dec
subb
push
push
cmpb
ljmp
mov
cwtl
sbb
fsubl
andb
pushf
and
inc
mov
aam
lods
lock
sbb
mov
aad
mov
jno
mov
xor
add
mov
inc
jmp
add
dec
sub
cmp
jbe
les
sahf
mov
or
roll
push
orl
sbb
outsl
jg
pop
sub
add
shlb
adc
inc
aas
push
ret
and
xchg
mov
add
push
std
jns
cwtl
cmp
xchg
andb
push
clc
aaa
push
pushf
jnp
mov
mov
mov
jge
stos
lods
lret
sub
incb
daa
roll
out
mov
orb
scas
cmp
roll
jne
add
pop
add
addl
mov
mov
cmp
pop
cmp
lret
cmpsb
jb
subl
xchg
add
lds
ret
adc
dec
sbbl
sbb
inc
mov
jg
add
daa
lock
icebp
jl
and
add
inc
daa
cs
cmovbe
push
insb
xor
jae
cmp
mov
sub
stos
jno
out
dec
xor
aaa
inc
loop
pop
mov
iret
enter
mov
dec
mov
ljmp
aas
dec
mov
jle
popa
jg
push
ret
and
mov
repz
out
xchg
ret
cmp
ret
mov
mov
addl
lcall
mov
pop
aaa
aaa
push
scas
sbbl
xchg
and
sub
xor
jg
mov
jno
add
jbe
push
inc
xchg
in
add
rclb
mov
movsl
in
jge
outsb
jb
lcall
mov
add
stc
flds
push
cltd
pop
lods
dec
push
inc
cmc
xchg
rcrl
xor
mov
inc
inc
mov
stos
aad
push
or
sbb
aaa
mov
into
mov
mov
jns
test
fadd
bound
mov
std
xor
aad
jbe
sub
movsb
sub
jae
inc
icebp
xchg
mov
sbbl
loopne
jns
lcall
int3
in
jb
push
lcall
push
mov
cld
jb
pop
cmp
lock
aas
xchg
cltd
sti
mov
mov
xchg
out
jo
mov
mov
or
sbb
dec
cmpsb
sbb
je
divl
inc
das
pop
cltd
movsb
stos
xor
jmp
test
or
cltd
mov
pop
int
sbb
clc
mov
jle
sub
xchg
sbb
bound
scas
stc
mov
sahf
lcall
addb
mov
push
lea
push
mov
pop
cwtl
popa
ljmp
icebp
and
nop
cmp
pop
mov
mov
jge
jb
sbb
jge
lock
in
insb
orb
cltd
pop
flds
cmp
mov
xor
outsb
in
cmpb
and
aam
or
mov
and
and
std
ret
xchg
push
les
mov
mov
popa
fimull
sub
aad
roll
fstpl
mov
add
cmp
jecxz
ret
and
pushf
jle
cmc
cld
ret
fsubr
jl
and
mov
jnp
loopne
jl
jae
rcl
dec
jecxz
inc
insb
lcall
les
mov
lahf
sbb
pop
and
das
sbb
outsb
pop
inc
cmpsb
mov
aam
cmpl
dec
cld
lcall
sub
lret
insb
sbb
out
dec
jbe
pop
cmp
movsl
cli
fwait
push
mov
jp
sahf
cltd
mov
push
shlb
into
jle
ja
cmpsl
fdiv
pop
imul
fiaddl
mov
sbb
cmp
in
mov
cmp
push
mov
dec
mov
jnp
fidivrl
inc
or
lret
bound
lret
addl
inc
sbb
cltd
idivb
stos
and
add
lock
jno
adc
cs
int
and
out
data16
and
insb
mov
jle
in
mov
cltd
dec
lahf
sbb
add
cmpsb
cld
test
mov
lret
fiaddl
xchg
jne
mov
jp
shll
cli
mov
push
aaa
mov
jnp
leave
iret
scas
mov
xor
js
inc
push
inc
add
gs
lock
sahf
test
mov
lret
outsl
ret
lcall
xchg
sub
mov
pop
jno
sub
ja
outsb
f2xm1
jns
in
aaa
lds
mov
jmp
inc
sahf
out
out
pushf
cli
in
and
xor
or
ja
and
add
mov
sbb
push
xchg
neg
ss
mov
test
imul
fldcw
out
adc
test
daa
sbb
add
adc
mov
imull
repnz
int
inc
out
inc
inc
cs
mov
and
andb
xlat
inc
lock
sbb
sbb
cmp
bound
xchg
and
and
jne
pop
inc
test
jg
bound
sbb
out
and
int
add
cltd
gs
roll
lcall
dec
repnz
mov
scas
mov
jb
test
lds
aaa
fstps
popa
jg
outsb
addr16
sahf
ret
xor
fbstp
lcall
pop
jo,pn
lock
pop
cld
pop
test
and
std
lock
jno
or
out
sub
repnz
shr
out
xor
and
and
mov
lcall
cli
mov
push
adc
repnz
push
mov
push
in
bound
jbe
clc
jns
lret
xchg
add
ret
inc
pop
mov
into
xor
ja
xchg
dec
fwait
por
cmp
mov
mov
adc
and
sti
imul
in
mov
adc
inc
rorb
rsqrtps
pop
sbb
push
pop
aam
jo
es
xor
cltd
mov
jge
push
cld
cmpsb
lods
je
ret
aam
loop
lret
inc
jg
sbb
adc
pusha
dec
nop
dec
cs
push
imul
fldl
mov
inc
dec
mov
clc
testl
loop
in
jle
and
cli
pusha
mov
and
cmp
lahf
mov
mov
xchg
jns
inc
dec
stos
lock
int3
dec
jo
dec
cs
xchg
test
xor
sar
fbstp
ficoml
xchg
sti
jbe
adc
testb
or
decb
add
jnp
idiv
xchg
mov
fidivl
or
cli
lcall
lods
stos
lock
in
xchg
sub
xor
sub
es
into
movsl
aam
ret
xor
cs
jae
or
add
outsb
je
jg
cmp
fisubrl
xchg
sub
mov
mov
les
sub
lds
mov
and
loope
clc
and
aad
repnz
movsl
test
dec
add
out
fisttpl
filds
mov
ret
rcr
les
addr16
insl
shlb
and
les
inc
lea
push
dec
mov
add
jnp
filds
or
mov
sub
cltd
stos
in
adc
mov
sbb
add
mov
jns
jae
out
fidivs
repz
sub
and
mov
xchg
iret
fwait
pop
cmp
subb
stc
jbe
outsb
mov
int
cmpb
mov
mov
sub
xor
or
in
push
push
and
push
mov
mov
push
and
push
lahf
mov
sub
xchg
mov
lods
outsb
lcall
orl
and
jg
ja
cltd
push
jmp
addr16
and
mov
adc
sbb
daa
adc
dec
hlt
stc
cltd
adcb
mov
ds
jnp
add
or
pop
push
lea
push
lret
mov
in
push
call
pop
and
cltd
aam
lret
paddsb
mov
mov
sbb
jnp
imul
and
dec
cltd
mov
sbb
cmp
jns
xorb
mov
fstpl
ja
movsb
test
les
sbb
lods
push
lcall
dec
stc
fcmovnu
fbld
aam
pop
push
dec
fidivs
and
mov
rcrl
or
push
xchg
jns
sub
cmpsb
push
xor
xchg
jae
pushf
or
movsb
jg
pop
mov
sub
mov
insl
jl
add
and
mov
int
xchg
ljmp
jbe
enter
mov
js
lods
inc
mov
xor
mov
inc
push
xchg
aas
movsl
mov
imul
cmp
push
in
call
in
rep
bound
jle
leave
js
inc
jge
fbld
add
lret
dec
mov
je
adc
xor
xor
cmc
nop
leave
mov
mov
cltd
pushf
mov
mov
mov
lret
out
int
loop
xchg
dec
sarb
push
jecxz
mov
cli
test
outsl
stc
out
loopne
xor
lcall
push
test
jle,pn
loope
pop
inc
rcrb
push
sub
fisttpll
test
and
lcall
std
jo
fisubl
push
out
ss
insb
pop
mov
popa
mov
or
sub
je
xor
pop
push
cltd
rcr
into
mov
push
frstor
and
fsubrl
jp
aad
ja
jo
xchg
in
and
push
lds
and
cltd
add
jg
es
ret
xor
sahf
pop
xor
mov
insb
inc
nop
jo
or
aaa
dec
xchg
cmp
cmp
test
pop
popa
xor
jg
mov
fwait
adc
mov
outsl
clc
sahf
pop
jl
add
cmp
lcall
ficomps
cltd
pop
jecxz
mov
push
test
fadds
flds
pop
ficomps
ja
repnz
lds
jns
enter
pop
es
push
pop
dec
inc
scas
das
push
or
xlat
in
mov
pop
test
mov
jb
push
jne
imul
dec
fs
movsb
aaa
jnp
adcl
pop
inc
mov
mov
lcall
je
inc
push
pop
rorl
lcall
leave
sub
or
test
mov
cmp
add
sbb
jae
add
test
push
movsl
insb
or
dec
imul
xor
or
jl
ds
jecxz
or
rcr
adc
mov
scas
sbb
pusha
inc
lock
inc
dec
jecxz
out
lret
push
stos
adc
les
imul
mov
push
shll
int3
and
mov
inc
and
pop
test
addr16
sbb
xchg
negl
repnz
mov
add
mov
cmp
cmp
xchg
mov
cltd
pop
jg
dec
add
cli
jo
sarl
fldl
jae
mov
es
stc
mov
loope
imul
or
jae
mov
outsl
pop
outsb
push
mov
mov
cmpsl
in
or
test
xor
out
ret
adc
and
lcall
jl
lds
decb
out
or
js
add
lahf
mov
jp
addr16
mov
cmp
xchg
fwait
int3
je
sbb
data16
cs
jns
xchg
shll
addr16
cmpsl
adc
cmp
lea
mov
test
push
push
jecxz
test
out
imul
mov
inc
push
jge
dec
push
cmp
jmp
sub
mov
cwtl
ds
sbb
or
sub
or
ja
mov
inc
jbe
or
xchg
dec
nop
loop
lcall
filds
jae
mov
les
and
lret
cli
add
les
arpl
fidivrs
add
adc
shll
lods
repnz
test
cltd
loope
add
mov
insb
jle
push
push
sti
mov
or
xchg
in
ss
outsl
lcall
imul
cmpsl
ljmp
sub
int3
jp
cmpsb
dec
lods
out
sbbl
add
in
dec
sbb
mov
inc
dec
lea
movsl
scas
ja
mov
mov
out
daa
fnclex
jmp
scas
jne
mov
xchg
push
push
xor
add
lcall
jmp
jne
cmp
andb
cmpb
cmp
sbb
mov
in
leave
adc
push
add
add
cmp
mov
adc
test
mov
fs
sub
xchg
popf
in
testb
test
and
add
push
or
in
js
pop
dec
arpl
or
mov
and
mov
push
mov
dec
fsubl
insb
subb
mov
pusha
stc
add
mov
add
cmp
incl
addr16
jg
xorb
add
pop
adc
jb
stc
jae
push
insl
inc
xorb
mov
and
jns
mov
mov
jb
add
rcl
iret
ja
lea
mov
lret
int
leave
in
add
andb
mov
add
sbb
push
rep
test
out
scas
sub
or
int
out
mov
xchg
or
xor
orb
push
loopne
mov
mov
stos
stos
popf
in
or
dec
sbb
gs
xchg
cmp
popa
push
fistl
test
mov
fsubrs
add
imul
mov
sbb
pop
inc
mov
icebp
mov
in
dec
fcomip
jle
cmp
call
jmp
or
mov
dec
cmpsl
xorb
mov
fcmovbe
add
ss
sbb
xchg
enter
lock
repnz
in
orb
clc
das
push
es
push
adcb
or
inc
xchg
mov
jg
in
loop
inc
add
daa
arpl
popa
pop
jp
jae
cltd
hlt
push
and
cmpb
repz
out
test
xorb
mov
add
mov
xchg
sbb
aaa
inc
adc
insl
adcb
mov
mov
inc
xchg
xorb
dec
inc
and
mov
mov
ja
pop
xchg
lahf
adcb
cltd
jae
push
push
cld
loope
stos
sub
cs
dec
in
cmp
xchg
ja
mov
mov
mov
lcall
out
movsl
mov
adcb
cmp
cmp
clc
ja
xor
in
sub
mov
jle
add
repnz
subb
pop
lock
mov
adcb
xor
aam
ret
xor
mov
sub
xchg
push
andl
repz
pop
in
xor
xchg
insl
sub
cmp
call
test
add
gs
pop
andb
push
dec
mov
cmp
xchg
mov
gs
xchg
popa
sub
dec
lock
addb
cwtl
push
sbb
popf
std
aam
int3
jno
call
test
dec
adcl
or
pusha
xor
jl
rclb
push
jbe
pop
cltd
mov
out
cmpb
and
shll
test
mov
and
jl
pop
subb
mov
movb
std
sbb
testl
mov
mov
jp
les
popf
lds
in
callw
orb
mov
andb
sub
adc
fiadds
js
shll
sub
cltd
adc
lods
add
add
mov
xorl
sbb
adc
push
inc
jno
lods
clc
xorb
xchg
mov
subb
pop
and
push
jnp
push
push
lcall
dec
adcb
jge
sub
fwait
les
data16
orl
adc
xlat
or
in
mov
orb
ret
test
mov
cmp
je
push
or
add
or
mov
sbb
test
or
and
les
loop
push
scas
subb
mov
outsl
adc
push
mov
mov
rolb
out
mov
data16
mov
imul
sbbb
incb
xchg
cli
gs
in
add
jg
movsl
xorb
xchg
stos
pop
adc
mov
sub
push
popf
mov
cs
int
sub
xor
push
lcall
cli
int
mov
add
in
mov
scas
orb
mov
add
mov
add
mov
int3
in
stc
adcb
sbb
fcompl
jae
nop
pop
insl
bound
mov
push
into
inc
mov
xchg
push
ljmp
fnsave
leave
add
jmp
inc
cwtl
jnp
iret
in
test
mov
mov
nop
push
orb
std
lcall
pop
in
sub
data16
xchg
dec
jne
push
lods
push
sbb
addb
cwtl
cmp
mov
mov
mov
sbbb
mov
shrb
andl
test
ja
imul
ret
sub
add
adc
mov
lea
subb
jnp
mov
jl
cmp
gs
incb
shl
aaa
jg
push
fwait
xor
push
into
fisttpll
shrb
scas
aaa
nop
rolb
popf
or
imul
das
addb
aaa
jae
insb
cmpsl
push
ret
xorb
jns
sarl
cmc
mov
std
or
jp
mov
andb
bound
sbb
xorb
pop
roll
push
mov
adc
into
inc
aaa
insb
bound
dec
aad
test
dec
and
insl
js
scas
add
pop
loope
repz
lcall
lret
or
ljmp
fs
push
push
jns
and
add
xor
lock
cmpb
sbb
jle
push
addb
outsb
inc
inc
sub
testb
jbe
stos
cmc
lods
xorb
out
or
mov
sbb
jg
iret
ja
dec
mov
rclb
dec
add
cmc
push
cmp
xlat
jge
loopne
xchg
sbb
cmpsl
mov
data16
jae
xchg
out
push
out
cmpb
int3
xchg
push
dec
inc
adcb
jecxz
cmpsb
or
jg
imul
dec
sbb
mov
dec
jp
and
orb
add
movzbl
cmp
inc
xorl
movl
mov
mov
icebp
xor
and
and
mov
rolb
ljmp
cs
inc
add
lahf
cmpsl
xchg
push
xchg
sub
sub
in
inc
sub
pop
scas
sti
dec
mov
test
xchg
mov
int3
aad
mov
test
orb
out
jnp
fstpl
int3
add
and
call
xchg
andb
cmp
lahf
mov
cmpsb
arpl
pop
scas
push
xor
mov
cmp
xchg
fldl
leave
das
je
adc
jae
pop
and
jo
loope
xchg
push
in
mov
test
jl
fisttpll
pop
or
mov
iret
addb
adc
jbe
cmp
xchg
sbbb
add
es
jg
sbb
lcall
andl
ss
popa
jae
lock
cwtl
jmp
into
xchg
jmp
mov
jge
rorb
fmuls
cmpsb
lahf
gs
andb
int
adcb
mov
out
dec
push
cmp
cmc
js
out
cmp
fidivl
shrl
testl
pop
and
clc
xor
ret
lret
xchg
ja
cltd
mov
mov
or
inc
sahf
test
scas
add
scas
testl
mov
mov
jo
pop
loopne
test
pop
and
int3
ja
iret
mov
jns
popf
lea
out
jge
xchg
lcall
rorl
push
cli
xchg
call
adcl
test
fidivrl
dec
sub
sbb
push
loop
jmp
int
sub
hlt
pop
movsl
cli
xlat
aam
and
mov
pop
divl
xor
push
mov
xor
xlat
fwait
cltd
mov
mov
push
jo
dec
add
imul
enter
xchg
xchg
stc
push
sbb
in
xor
inc
add
cmc
xchg
jg
ss
and
xchg
jns
lcall
outsl
inc
nop
jo
pop
jno
daa
jae
out
mov
lret
xor
mov
pop
in
in
cltd
imul
jne
mov
mov
jl
ja,pt
push
or
inc
lds
repnz
hlt
or
out
or
int3
inc
add
cld
jo
scas
fwait
xchg
inc
and
jbe
lret
sub
std
pusha
mov
mov
call
pop
sub
pop
and
mov
leave
jle
repz
pop
and
and
rorl
cmc
outsl
in
adc
int
jne
ja
dec
test
add
mov
jle
dec
lcall
jle
sbb
mov
add
sub
out
xchg
mov
sbb
lcall
fbstp
sahf
xor
cwtl
inc
dec
dec
jo
lcall
xabort
fcomip
jnp
adc
mov
outsl
mov
cli
test
cmp
jle
out
mov
aaa
test
xor
cs
mov
mov
and
jge
stc
inc
cmc
int3
and
inc
stc
negl
mov
pop
cli
popf
imul
mov
dec
notb
jle
dec
sbbl
xchg
push
push
aad
xor
mov
cmp
mov
pop
out
mov
dec
xor
and
sbbl
mov
repnz
inc
cli
cmp
push
mov
xor
mov
ficoml
mov
sub
punpcklbw
dec
dec
xor
stos
loop
das
lcall
mov
scas
lret
push
sti
insb
inc
mov
pop
pop
xchg
lods
jecxz
adc
into
xchg
cmp
mov
mov
fs
lret
filds
and
cmp
repz
mov
scas
jno
and
sarb
stos
loope
push
cs
sbb
cmp
mov
mov
fiaddl
cld
and
xlat
lea
cmp
inc
cli
shrl
stos
insl
int3
mov
pop
dec
incl
rorb
cmc
int
fnstenv
adc
xchg
cltd
ret
adc
fcomps
xchg
pusha
xchg
xchg
addr16
fists
sbb
xchg
jl
cmp
dec
sub
ja
cmp
ja
cwtl
jle
js
fcompl
add
cld
push
ficoml
imul
aam
push
push
imul
inc
jle
dec
cmpsl
outsl
mov
cltd
pop
jne
ret
sub
imul
push
lock
in
mov
fmulp
mov
mov
hlt
in
sub
inc
cltd
leave
inc
push
sub
cmpl
jg
cltd
test
pusha
mov
ss
add
loopne
mov
in
es
mov
jb
cwtl
adc
das
rcrb
jbe
rcrb
cmp
jg
jne
jp
add
and
test
xor
pop
sbb
ret
aad
in
sbb
push
jb
fcomps
xor
roll
shl
inc
imul
pop
cmp
jo
inc
in
push
mov
ret
aas
lcall
cli
addr16
jae
jo
ds
mov
arpl
out
sbb
pop
lds
movsl
pop
gs
push
mov
push
or
fcomps
xchg
out
enter
cmc
xor
xchg
stos
jo
add
leave
mov
or
daa
push
mov
add
out
pop
adc
pop
cmpsl
mov
adc
outsl
cltd
push
call
mov
fidivl
popa
leave
jno
pop
adcb
inc
ret
ds
loopne
inc
sbb
loopne
les
clc
mov
gs
jle
adc
mov
lcall
lods
leave
adc
cmp
std
andl
js
pop
jp
xor
jnp
xor
or
jbe
xor
push
or
shl
push
xchg
and
add
pop
data16
sbb
mov
inc
dec
inc
jmp
imul
sbb
add
mov
popf
push
ljmp
js
call
dec
cltd
push
sbb
dec
add
movsb
pop
out
jns
xorl
jle
mov
inc
adc
je
sub
mov
call
loop
ljmp
movsb
mov
lods
pusha
fnstcw
sbb
inc
movb
test
push
inc
inc
sub
aam
and
mov
or
and
mov
scas
xchg
jl
mov
clc
jo
and
inc
mov
or
xchg
rolb
in
mov
ljmp
and
mov
push
stc
sub
add
outsl
dec
lcall
scas
rcrb
ds
cs
sbb
xor
insl
stc
push
scas
dec
cltd
or
lods
cli
insl
cmp
dec
cltd
mov
mov
cmc
lcall
adc
adc
jne
or
xchg
mov
pop
push
loope
cli
jbe
out
ret
ficompl
mov
lcall
movsb
stos
outsl
jecxz
mov
mov
mov
stos
mov
je
push
arpl
xchg
out
push
insl
jo
cmp
sbb
xor
sub
das
xor
jl
div
leave
cs
jns
stc
fs
jmp
cmp
aaa
adc
into
pop
pop
cli
sub
mov
pop
cltd
xchg
imul
push
mov
mov
cmpb
cltd
ja
xchg
dec
cmp
leave
mov
cld
dec
sbbl
stos
incb
pop
out
dec
xor
jae
mov
outsl
mov
jnp
imul
xor
pop
sub
outsl
arpl
data16
addb
lcall
popf
cmp
mov
imulb
lods
enter
imul
push
sub
push
lods
jbe
and
mov
je
jge
lds
and
inc
xchg
push
std
add
aaa
outsl
aad
loope
jle
popl
mov
dec
mov
shl
or
movsl
xchg
cmp
ret
inc
sbb
push
js
push
jl
icebp
xchg
bound
lock
dec
mov
leave
cmpsb
dec
pop
daa
ljmp
add
arpl
add
pop
aad
xchg
mov
mov
cmp
cmpl
inc
cmp
addr16
icebp
jbe
fldenv
push
mov
jno
jg
loop
mov
in
loope
sub
addr16
pop
add
scas
jg
test
ret
pop
daa
repnz
stos
mov
sahf
add
inc
data16
cmpl
cwtl
scas
sbb
jg
jl
cmp
pop
cmp
mov
sub
fs
xchg
in
mov
out
ljmp
lcall
sbbb
scas
sahf
mov
and
pushf
rcrb
in
ds
jb
mov
lret
lahf
mov
in
push
mov
rorb
ja
in
or
insb
lcall
movsl
mov
in
xor
outsl
in
xchg
mov
in
test
push
cmc
cmpsb
xorb
flds
loop
pop
cltd
popa
adc
sti
pop
adc
popa
inc
outsb
jle
cld
or
aas
mov
dec
mov
pop
cltd
cmpsl
and
or
inc
gs
pop
pop
jbe
popa
fs
cmp
add
sbb
mov
add
or
je
lret
lcall
fdivs
cmp
pop
stos
mov
push
xor
jbe
loope
stc
jecxz
ss
jecxz
ds
xchg
js
fidivrs
test
jnp
icebp
or
jns
mov
jbe
lcall
dec
jbe
int
mov
mov
imul
lock
je
lds
push
pop
inc
scas
pop
insl
sub
lcall
aad
outsb
pop
jmp
dec
out
push
add
cltd
js
lock
dec
push
jecxz
push
fcmove
xchg
sarb
push
and
lret
bound
inc
cld
cltd
rclb
xor
addr16
push
pop
sub
nop
negl
xor
out
mov
jb
ds
mov
adc
test
sarl
sbb
cli
mov
xchg
addr16
stc
cs
push
jb
cmp
inc
push
sub
jecxz
ror
sahf
jle
rcrb
jae
add
jbe
out
loope
movsb
stos
jmp
dec
push
cli
arpl
jne
xchg
push
repnz
push
and
mov
into
sub
push
add
mov
rcrl
out
xlat
adcb
movsb
dec
sarl
insl
mov
das
frstor
xchg
loopne
mov
push
fistl
addr16
cmp
inc
push
mov
repnz
fisttps
andl
sub
sbb
xchg
pop
fstpl
frstor
jp
bnd
push
mov
das
pop
xchg
jns
and
adc
iret
xor
and
jne
shrb
pop
in
push
bound
jmp
sbb
test
movsb
pop
pushf
test
or
add
stc
mov
fnstcw
mov
lods
mov
mov
insl
push
push
out
xor
orl
or
fisubl
imul
push
fpatan
xor
sub
cmp
jno
je
sub
outsb
inc
xor
add
mov
sub
mov
rcll
outsl
ja
subb
jmp
or
mov
out
addb
scas
ret
stc
insl
orb
aas
cwtl
jnp
dec
movsb
insb
rclb
addb
xchg
add
xchg
cld
jo
mov
addb
or
lcall
jne
dec
xchg
push
movsb
add
inc
stos
inc
cmp
stos
subl
add
imul
outsl
xchg
fs
mov
adc
push
orl
xor
jmp
mov
jle
xor
and
je
gs
xchg
cwtl
mov
repnz
les
cmp
sbb
dec
out
dec
push
add
scas
dec
ret
mov
in
mov
inc
or
dec
pop
mov
dec
rcrb
inc
subb
cmp
dec
jg
push
push
jg
repz
xor
sbb
sahf
push
xchg
push
xor
loop
call
addb
sahf
movsl
sub
test
daa
imul
sub
and
pop
iret
jb
mov
cmpb
mov
and
xchg
fiaddl
add
fiadds
js
arpl
xchg
xchg
mov
dec
test
mov
mov
mov
loope
or
jb
push
adc
lock
flds
addb
out
mov
std
push
xchg
je
xor
ds
sarb
sbb
push
int3
xor
ficomps
insb
sbb
addb
popf
adcb
dec
imul
ljmp
inc
mov
mov
and
mov
dec
jecxz
imul
jo
orb
shlb
add
jo
insl
sahf
jnp
pop
cmpsb
inc
andl
cmpsb
push
popf
addb
xchg
andb
rorb
daa
gs
xor
xchg
imul
lea
xchg
je
mov
cmp
adc
in
bound
and
cli
cmp
adcb
roll
mov
or
adc
pushl
mov
mov
mov
loopne
orl
addr16
or
subb
sbb
imul
icebp
push
inc
push
repz
xchg
stos
dec
xchg
sub
sbbb
sbb
sub
mov
xor
xchg
sub
sbb
and
jmp
sbb
call
cmp
orb
pop
addr16
sbb
movsb
or
andb
pop
fsts
adc
mov
xor
out
imul
dec
mov
sub
sbb
in
dec
jnp
int3
push
ret
pop
cwtl
fadds
jbe
movsl
or
gs
mov
pop
jg
push
mov
push
pop
fcmovbe
fwait
loopne
pop
clc
inc
or
mov
imul
call
xchg
insl
cwtl
test
mov
cmp
jns
fmulp
dec
sbbb
mov
fwait
out
cs
adc
stc
cmp
gs
shrb
inc
adc
rclb
addb
mov
adcb
jge
orb
xlat
pop
andb
sbb
leave
or
xchg
in
push
ret
mov
mov
dec
jae
xchg
jns
jb
sub
lods
add
testb
mov
scas
jmp
loopne
or
nop
loop
adc
sbb
lock
mov
bound
mov
dec
inc
pushf
pop
cmpb
mov
outsl
add
imul
push
dec
ficompl
orb
add
ret
sbbb
or
adcb
mov
add
andb
lcall
cmc
inc
xchg
jmp
lcall
and
sub
rcrl
sub
test
ret
sub
push
test
daa
dec
lods
divl
sbbb
jg
cmpb
faddl
movsb
push
cmc
inc
scas
xchg
or
and
gs
roll
ss
js
out
dec
sbb
addb
cmp
push
dec
rcrb
xchg
sbb
js
pop
int
outsl
fnsave
insl
cmp
out
lahf
aad
add
push
aam
scas
inc
mov
jae
lret
jns
xchg
xor
xchg
sbb
ret
les
fistl
out
enter
sbbb
ret
add
sbb
sahf
cmpb
jb
orb
mov
cmp
dec
inc
lret
rcr
inc
mov
add
int
mov
add
mov
jo
cli
xchg
cwtl
aad
icebp
cld
popw
xchg
adc
ss
dec
push
fstpt
insb
dec
test
add
outsb
notl
jb
das
sbb
orb
cmp
popa
sbb
push
mov
filds
add
repnz
sbb
fimull
push
adc
mov
mov
daa
inc
add
lahf
adc
je
jne
inc
mov
mov
data16
fld
mov
call
arpl
cmp
dec
jg
inc
cmp
pop
xor
data16
cmp
cmp
adcb
rcrl
sub
mov
sub
sub
xchg
dec
daa
adc
je
inc
sub
jnp
stos
andb
sub
mov
std
adc
xor
adc
dec
repnz
ja
daa
push
jne
or
pop
arpl
sub
lret
in
cmpb
sbb
xorb
dec
repnz
adc
subb
adc
xchg
and
jmp
addb
xchg
add
out
jl
aad
jle
dec
xchg
in
xor
cmpl
stos
in
daa
add
adc
add
inc
ficompl
inc
call
dec
loope
add
adc
enter
leave
sbb
inc
sub
subb
out
sub
and
pop
push
cmc
daa
mov
test
test
jnp
adcb
stos
add
dec
outsb
xor
mov
divl
and
leave
push
fisttpll
or
adcb
inc
jge
push
roll
mov
cmp
sub
popl
into
add
fwait
scas
sbbb
or
dec
cmpsb
dec
jbe
xchg
mov
int
add
dec
call
subb
push
sub
pop
xor
jnp
mov
push
es
mov
sti
andb
ret
rol
adcb
subb
xchg
cmpsl
xor
mov
xor
jb
xchg
mov
mov
xorb
xor
adc
rcll
add
repnz
dec
adcb
in
mov
jb
out
jmp
and
jg
sub
insl
xor
sbbb
xor
pop
sbbb
or
and
cwtl
iret
sub
sbbb
adc
add
ds
pop
test
call
ljmp
jo
adcb
xor
stc
lods
jo
pop
xor
mov
mov
test
or
inc
inc
bound
movb
cmpsb
push
fcomip
adc
fwait
add
dec
lret
jecxz
lods
adc
jb
dec
lret
inc
add
dec
jbe
or
fwait
mov
out
push
jo
into
adc
sub
dec
std
je
mov
ret
test
in
jg
push
andb
and
or
fs
jnp
push
xchg
cli
mov
mov
mov
sub
shrl
test
pop
jb
jp
adcb
adc
subb
push
mov
mov
subb
pop
mov
sahf
flds
adc
jno
mov
arpl
mov
push
iret
xchg
jp
jae
push
shr
andb
add
xchg
mov
rcrl
aaa
mov
ja
andps
clc
add
repnz
insb
mov
ret
js
loop
jne
test
adc
bound
stos
inc
outsl
lcall
lock
lods
subb
daa
add
push
pop
divl
add
or
push
or
adc
faddp
add
dec
mov
jp
and
sbb
shll
and
mov
adc
sti
push
cltd
and
mov
out
push
add
cmpsl
int
sbb
or
addr16
pop
mov
fsincos
icebp
jnp
gs
into
sub
mov
fildl
pop
nop
jno
jae
lcall
mov
mov
adc
cmc
lret
dec
push
xor
pop
sbb
lcall
add
ja
sub
ds
cmpsl
lds
std
in
imul
stc
scas
cmpl
mov
xchg
stos
outsb
pop
lcall
mov
jns
repnz
in
add
and
pcmpeqd
enter
dec
mov
lcall
int3
pop
clc
and
in
cmp
dec
cli
xor
orb
xor
push
mov
mov
aas
dec
cli
fstpl
cmp
and
lods
and
xchg
movsb
cwtl
ljmp
xchg
push
in
push
sub
lret
cltd
leave
mov
pusha
xor
push
ljmp
pop
cltd
stos
lahf
sub
addr16
aaa
jbe
mov
mov
in
cwtl
es
aas
fs
sarl
sbb
jge
xor
bswap
mov
stc
icebp
in
aad
lods
inc
subb
xor
int3
shl
dec
push
cmc
jecxz
push
stos
pop
xchg
sbb
pop
loopne
mov
lret
xor
out
mov
les
mulb
cmp
shrl
in
jmp
outsl
rcrb
mov
jae
xchg
adc
jl
mov
dec
add
inc
mov
gs
mov
out
jo
mov
add
scas
and
sub
mov
pop
xchg
popa
jle
je
inc
push
inc
andl
in
shll
jmp
mov
shl
sub
mov
push
xorb
data16
lods
rorb
jle
sub
and
inc
mov
fldl
sub
out
icebp
addb
std
or
and
adc
mov
into
jg
inc
roll
and
jp
inc
jge
jnp
test
test
out
pop
mov
lds
rorb
mov
andl
and
subb
push
dec
or
or
push
adc
or
push
jp
rclb
rcr
pop
pushf
sti
cld
and
loopne
cmp
call
ror
andb
frstor
lret
dec
cli
aaa
xchg
pushf
cmpb
inc
mov
stos
mov
add
repnz
bound
inc
push
dec
xor
gs
add
jecxz
leave
pop
mov
std
push
xchg
mov
pop
and
cmpb
incb
out
cmp
ret
rorl
xchg
call
push
sub
pop
fs
jg
add
inc
outsb
xor
jo
pop
xchg
leave
lea
std
jp
faddl
dec
and
inc
add
jg
xchg
push
push
cmpb
add
and
std
xor
insl
mov
xlat
into
lea
or
jmp
or
fwait
sub
daa
outsl
mov
jae
mov
lret
cs
addb
inc
int
loop
push
jae
popa
repnz
out
in
cltd
sub
sar
sbb
push
push
xchg
or
popf
adc
adc
xor
or
loop
xchg
push
sbbb
in
daa
nop
pop
dec
andb
jl
subb
jo
aas
jle
mov
and
pop
les
xchg
mov
movsb
xorb
xor
addb
adc
int3
mov
jp
jae
enter
cmpsb
xor
adcl
jge
ret
xorb
clc
cltd
xchg
fiadds
fistl
ss
xor
inc
mov
jle
jg
mov
nop
loop
xchg
jne
cld
addb
rolb
jnp
stos
mov
add
pop
inc
mov
xchg
adc
test
fsubrs
ficompl
ret
sbb
orl
ret
add
jle
jne
mov
dec
dec
jb
pop
add
dec
sbb
jge
xchg
add
repnz
sarl
jne
sbb
jle
or
mov
shrb
inc
xchg
iret
mov
or
jb
cmp
fs
addb
mov
cmp
sub
or
ret
cmc
andb
jmp
in
sbbl
and
ljmp
mov
stc
enter
repz
inc
cld
shrl
data16
sub
ss
push
cmp
xor
pop
mov
bound
std
loopne
xor
ja
gs
mov
push
jmp
negl
sub
lods
and
xor
in
ljmp
outsl
lock
jl
xlat
arpl
cmp
shll
pop
fnsave
mov
mov
pop
dec
sbb
jae
xor
pop
inc
into
addr16
cmp
mov
cmc
repz
subb
cltd
mov
ret
in
stc
dec
pop
pop
out
push
dec
int
push
and
jmp
clc
stc
jp
js
outsb
jl
lods
adc
out
or
xlat
out
cmp
jnp
cwtl
cli
lret
xlat
lret
mov
arpl
sbb
sbbb
sub
xor
in
xchg
ret
pop
inc
in
lsl
inc
out
sbbb
in
lahf
icebp
push
lock
fwait
dec
fiaddl
ljmp
loopne
push
or
inc
nop
inc
imul
cmpb
push
pushf
and
icebp
arpl
ja
sub
pop
adc
into
push
inc
push
fsubl
les
aaa
inc
mov
jl
jns
lret
mov
shll
jno
pop
sbbb
out
mov
inc
loope
subb
or
aam
orb
decb
pop
andb
add
xchg
mov
jmp
lods
fdivl
mov
add
in
inc
in
push
sub
xlat
ss
cwtl
jg
mov
cmp
mov
jnp
dec
inc
push
xor
jge
lods
mov
fidivrl
inc
xchg
rcr
jo
mov
push
lret
sbbb
mov
adc
adc
shlb
andb
dec
repnz
iret
inc
adcl
out
dec
movsb
dec
jb
orb
lea
and
jle
hlt
and
aad
mov
andb
or
pusha
or
adcb
xchg
rcll
ss
out
rolb
or
or
cmp
xorb
inc
dec
fwait
int3
and
cmpsb
lods
and
in
sub
pop
gs
ret
or
aam
jg
and
roll
xor
fwait
mov
rclb
inc
popf
lret
xchg
outsl
nop
cmp
inc
stos
inc
mov
or
shl
sbb
lcall
addl
jne
push
in
fs
daa
dec
adcb
sbbb
lds
xorb
sbb
orb
lock
out
ss
or
or
ror
outsb
cwtl
addb
push
jg
ret
mov
mov
addb
adc
mov
xchg
and
add
mov
xchg
cmp
and
mov
sub
fs
cld
ret
inc
inc
xchg
leave
xrelease
inc
mov
int
mov
jb
stos
xor
lods
loop
mov
mov
add
dec
jle
imul
sub
jnp
cs
fistps
dec
daa
orb
clc
inc
and
popa
sar
sub
aam
cmpb
ja
out
xor
sub
inc
subb
fildl
cmp
sti
insb
xchg
lcall
rolb
adc
jg
aad
sub
sbb
inc
push
stc
hlt
mov
ret
orb
int
cmpb
push
lea
or
shll
andb
cmpsb
mov
aam
inc
enter
mov
push
adc
subb
call
orb
repz
mov
clc
mov
subb
arpl
or
sub
adc
sbb
testb
daa
xor
cmp
mov
inc
in
fildl
cmp
pop
ret
or
add
mov
fistps
push
pop
clc
dec
addb
dec
cmpsl
mov
mov
sahf
in
hlt
and
push
sub
cmp
mov
decl
mov
frstor
sbbb
lcall
mov
pushf
add
repnz
push
mov
in
push
dec
mov
push
add
pusha
sbbb
fdivrs
mov
adcb
jae
adc
sbb
call
in
out
ficompl
decl
adc
rorl
subl
add
add
movsb
cmp
inc
rolb
inc
add
adc
fldenv
pop
je
dec
subb
or
push
addr16
sub
jge
push
sbb
mov
scas
mull
cltd
loop
ret
subb
sbb
ds
orl
jge
sahf
xor
in
imulb
and
aad
mov
xchg
popf
repnz
addb
sbb
cmp
mov
adcb
movsl
push
cs
test
fiaddl
sbb
subb
testl
mov
fstpl
adc
subb
pcmpeqd
mov
mov
loop
clc
push
je
mov
and
push
pop
faddl
test
mov
pusha
filds
inc
ds
push
mov
cwtl
xor
lock
jb
xchg
adc
outsl
in
push
sbb
add
xchg
scas
jb
sbb
outsb
inc
jnp
subb
mov
dec
movsb
or
inc
loop
repnz
add
sbb
stc
xchg
js
ljmp
stos
push
xchg
sbb
inc
std
dec
sbb
in
daa
nop
subl
orb
or
sbb
inc
push
sbb
mov
mov
inc
xor
xlat
sbb
add
mov
fnstsw
jae
fdivr
loopne
add
sti
sbb
cmp
mov
orb
or
inc
ja
out
es
xchg
cmpb
repnz
push
outsb
test
xchg
xor
jmp
inc
out
sub
andb
test
cmp
inc
jno
enter
xlat
cmc
dec
jne
pop
sub
jnp
or
push
popl
sub
jb,pt
repnz
pop
and
cmp
cwtl
adcb
out
mov
mov
cmpsb
sbb
pop
mov
fiadds
pop
sbb
or
repz
movb
and
pop
subb
add
hlt
enter
cltd
out
adc
jae
jnp
pop
rolb
sbbb
in
mov
cmp
jae
movsl
dec
cltd
mov
subb
jb
shl
sbb
and
jno
or
push
and
pop
jl
jge
cmp
dec
lret
ret
out
xor
jmp
xor
push
dec
jo
sub
or
pop
ljmp
cmp
add
test
enter
mov
pop
sub
or
movsb
andb
add
mov
inc
sbb
add
stos
xor
andb
fidivs
xorb
mov
push
inc
js
je
imul
andb
fcoms
jb
or
jge
xchg
xchg
add
iret
push
addb
inc
mov
mov
aas
test
dec
dec
mov
sbb
push
fistpll
sub
insb
mov
mov
add
sub
shrb
maskmovq
testl
jo
out
xorb
jecxz
inc
xchg
repnz
bound
subb
aaa
inc
addb
adc
repz
mov
mov
sbb
sahf
sbb
loop
and
fcomps
sub
mov
popa
dec
push
add
nop
cli
pop
push
inc
scas
sub
and
inc
jnp
loopne
pop
in
inc
dec
rcl
jle
inc
push
push
jno
or
add
adc
inc
push
shl
cld
xchg
cmpb
shlb
inc
mov
aad
add
test
and
dec
sbb
add
jg
cmc
inc
bound
mov
xorl
push
fildll
mov
js
dec
add
mov
sub
movsb
rcr
mov
testb
xchg
rcll
jp
adc
jge
lcall
test
push
mov
mov
shlb
adc
mov
sbb
imul
mov
aaa
in
mov
dec
sub
xchg
inc
or
jp
call
sub
shll
jo
mov
sarl
xchg
fistpl
arpl
fldcw
data16
and
sub
jnp
xor
adc
add
mov
and
adc
adc
mov
fists
aaa
sar
cmc
data16
cmpl
pop
pop
and
mov
test
xor
push
nop
mov
imul
insl
out
pushf
ret
sub
xor
jmp
fdivrl
loope
popa
fistl
cmc
add
sbb
mov
fnsave
addl
sti
test
imulb
hlt
and
movsb
jecxz
mov
xlat
and
push
and
cmp
adc
xchg
andb
inc
mov
mov
loope
sahf
lcall
or
fxch
mov
orb
cmp
test
or
dec
aaa
xchg
sbb
dec
xor
dec
sbb
call
in
push
out
jno
and
fsubl
jl
insl
aam
push
aas
in
and
out
and
or
out
dec
mov
std
mov
fwait
sub
int3
fcoms
cmpb
and
popl
add
mov
cwtl
push
addb
or
add
addb
test
fildll
in
push
xchg
mov
cmp
xchg
shll
add
pusha
pop
cmpb
aas
addb
popf
pop
sub
mov
jo
cmovns
div
cltd
shrb
into
push
jl
fsts
jle
lret
jg
fmull
loopne
cmp
sti
movsl
xchg
dec
inc
lea
add
popf
mov
in
mov
mov
sbb
shr
add
arpl
inc
sub
mov
arpl
sarb
jae
mov
jo
or
lcall
ljmp
movsb
movsl
or
insl
nop
orb
stc
rcr
adcb
out
cmp
ljmp
js
and
repnz
fcompl
rcrl
and
repz
mov
les
mov
ret
je
xchg
jns
fstpl
lock
fdivs
cs
adc
out
inc
jp
dec
xor
and
jmp
mov
and
mov
mov
fstl
cmp
div
push
loop
jg
icebp
or
ljmp
mov
pop
andb
xorl
cmp
iret
add
xchg
mov
scas
and
notl
out
xor
enter
fcomi
jmp
imul
mov
jne
or
sbb
push
cmc
jmp
adc
lock
je
mov
xchg
inc
dec
push
je
lds
ret
cmp
or
rclb
cmc
lock
arpl
lds
inc
jl
into
jb
test
fbstp
fdivl
mov
and
adc
inc
jo
bswap
lods
sbb
clc
push
ja
adc
negl
jne
cltd
insb
adc
cltd
pop
stc
adc
cmc
xchg
fs
aad
fstl
adc
out
fs
and
push
jle
mov
pop
mov
into
sbb
adc
xorb
out
repnz
pop
in
mov
es
test
adc
je
cltd
cmp
mov
or
inc
adc
clc
jne
jno
mov
shlb
cmp
jg
cmc
lret
leave
orb
mov
mov
adc
pop
fidivs
frstor
aam
cmp
inc
sub
push
pop
and
cld
mov
sub
outsl
or
cmp
cltd
sbb
pop
movl
outsl
adc
enter
stos
jbe
inc
cmp
jnp
or
and
jmp
in
mov
xor
rcrl
xor
sub
and
fiaddl
mov
and
mov
or
sub
xlat
jbe
pushf
pusha
cli
divb
inc
lcall
imul
cli
sahf
sub
fsubp
stc
shrb
xor
pushf
bound
jb
je
and
or
push
ret
ljmp
stc
out
enter
inc
in
mov
cltd
jp
nop
add
cli
inc
jmp
jnp
xlat
sbb
cmp
mov
mov
xchg
xchg
dec
ja
lock
mov
push
repz
sbbb
mov
jo
xchg
or
je
push
ljmp
ret
jge
out
mov
icebp
aas
adc
stos
xchg
divb
jbe
cmpsb
scas
std
lock
sub
stos
mov
jo
iret
repnz
outsl
cwtl
mov
cs
iret
bound
ret
pop
pop
mov
xchg
movsl
or
pop
out
ss
and
int3
jbe
stos
mov
shll
jl
xor
aas
push
jne
mov
inc
jb
sahf
push
jb
fiaddl
sub
pop
imul
pop
ret
mov
pop
and
pop
jae
pop
cmp
xchg
jecxz
jle
and
jns
sub
das
outsb
sti
jae
mov
xchg
repnz
push
enter
jmp
cwtl
sub
jmp
loop
repnz
jo
mov
outsb
mov
mov
xor
lods
iret
or
jbe
inc
pop
fs
xchg
pop
test
fnstenv
lds
lock
xor
mov
pop
outsl
jo
stc
pop
es
sbb
xchg
sub
int3
popa
imul
sbb
lds
mov
jo
xchg
jbe
sub
jp
leave
jmp
jnp
enter
jb
and
inc
adc
fmulp
jle
mov
or
lret
push
insl
clc
into
daa
dec
mov
sub
mov
imul
xor
imul
xchg
jne
cli
or
inc
testb
test
in
pop
test
add
lcall
mov
pop
jl
jle
cmp
pop
inc
mov
cld
cmp
out
es
sbbb
mov
sub
or
shrl
hlt
jo
std
bound
sbb
subl
mov
movsb
jg
jae
rcrl
xlat
mov
outsl
sub
jb
push
sub
jmp
dec
out
sbbb
push
sahf
cli
mov
push
pop
ss
pop
stos
ret
cltd
in
and
fmulp
sbb
fcomip
jle
and
out
data16
out
scas
sbbb
mov
dec
mov
cld
xor
jae
imul
sti
push
lock
insl
lcall
and
jns
adc
adc
bound
lcall
cmpsl
mov
fldt
push
push
or
and
jp
add
sub
mov
mov
xor
dec
ret
add
cmp
sti
jns
and
push
mov
out
inc
cmp
jo
dec
jl
or
shl
rcll
xchg
add
xchg
out
xor
and
je
test
rcrb
cmp
add
jb
ja
xchg
mov
sub
rorb
jo
ljmp
ljmp
inc
movsb
push
cmp
sbb
fcmovne
xchg
fstps
ret
pmulhw
mov
repz
xchg
nop
and
xchg
das
stos
fldl
hlt
data16
out
aas
add
mov
jo
push
mov
into
push
fwait
mov
sbb
push
cmp
xchg
mov
loop
push
lock
imul
nop
sub
or
sahf
and
arpl
dec
adc
or
cmp
cltd
je
aaa
mov
testl
movsb
out
jg
xchg
lcall
or
xchg
es
std
xchg
xchg
in
jo
test
jb
cmp
shlb
sub
subl
test
fs
lcall
in
pop
aas
inc
fistpl
sub
pop
mov
stc
ljmp
mov
arpl
jg
jb
xor
or
imull
pop
cli
loope
leave
fwait
dec
fiadds
jle
insb
stc
std
cmpsl
push
cmp
xor
jmp
daa
je
mov
mov
mov
lds
sbb
sbb
icebp
inc
cltd
test
push
gs
les
loopne
les
cmp
inc
sbb
movsl
xchg
lock
cltd
push
xor
aas
dec
push
sub
jae
jecxz
cmpsl
mov
mov
mov
ret
ljmp
pop
pop
and
data16
push
cmp
and
jns
adc
sbb
imul
inc
aaa
in
and
xor
loope
add
inc
cld
mov
std
insl
mov
sbb
insb
jne
sbb
call
sbb
xchg
aaa
ljmp
cmp
add
jne
loop
jecxz
loop
mov
rcr
xor
add
addl
push
pop
xchg
jle
adc
add
gs
rclb
jo
aas
js
clc
testl
imul
push
inc
pop
lcall
sbb
in
xor
xor
popa
inc
mov
sbb
scas
sub
xlat
push
ja
mov
out
inc
repnz
out
ret
push
das
and
lcall
pop
mov
xorl
sub
cmp
sub
out
xor
mov
imul
insb
divl
sbb
bswap
xchg
or
or
addb
and
repnz
jmp
in
call
mov
imul
add
add
adc
xchg
out
add
pop
jbe
mov
add
shlb
enter
mov
and
sti
push
or
mov
das
imul
fdivs
daa
loop
xor
sbb
inc
or
js
adcl
pop
stos
jne
stc
xor
fldt
es
imul
into
cli
arpl
aaa
mov
jb
jle
and
shl
push
pushf
jle
mov
xchg
inc
enter
add
sbb
fildll
add
ret
adc
and
std
xor
xor
insb
lcall
sub
out
mov
cltd
cmpsl
and
sbb
out
cmpsb
inc
hlt
daa
cs
hlt
lock
stos
aaa
mov
push
fists
xchg
test
iret
aad
pop
shl
xchg
mov
inc
ja
dec
lcall
out
test
cmp
bound
js,pt
jmp
inc
out
pop
or
fwait
mov
mov
cmc
mov
test
and
inc
sti
sbb
adc
mov
pusha
pop
fwait
inc
jp
ja
sti
subb
mov
cmp
mov
call
and
out
lcall
bound
adc
add
insb
sbb
movsl
lret
repnz
or
icebp
out
sub
pop
jb
dec
sbb
mov
enter
push
rorb
scas
xchg
ret
ss
fidivl
dec
push
mov
push
pushf
aaa
sub
andb
lahf
cltd
cmp
sub
xor
scas
pusha
inc
push
xchg
and
jb
sti
sub
and
mov
mov
cltd
sti
mov
mov
pusha
sub
andl
shll
mov
push
push
lret
negb
out
xchg
xchg
adc
jle
xor
jge
mov
ret
dec
ljmp
rolb
pop
cmp
inc
mov
test
pop
push
jge
push
mov
push
push
xor
sbb
push
mov
and
gs
cltd
mov
enter
jmp
filds
bound
insl
push
mov
ss
insb
sub
mov
outsl
addb
xlat
adc
sub
cmp
mov
mov
sbb
sahf
xor
xlat
jmp
pop
mov
mov
outsb
lcall
push
sarb
ss
mov
enter
lret
divl
jp
mov
inc
adc
popa
mov
pop
lcall
lea
jp
and
mov
sbb
ret
push
dec
add
scas
loop
rorl
into
sub
lcall
xor
jo
sbb
dec
mov
xchg
imul
pop
out
mov
outsl
mov
mov
dec
xor
lcall
mov
cltd
fimuls
cli
pop
lds
loop
test
xchg
clc
xchg
sbb
mov
loope
mov
push
mov
sbb
cmpsl
pop
fmuls
xor
jp
dec
jl
pop
sbb
jmp
leave
mov
mov
inc
sub
scas
test
ljmp
clc
push
aad
push
mov
xor
push
and
cltd
or
int
sahf
cmpsb
mov
in
xor
mul
push
cmp
push
mov
sub
and
mov
inc
jecxz
mov
mov
fs
mov
mov
repnz
mov
mov
push
sbb
scas
cs
sbb
cltd
sub
mov
sub
fimuls
das
ljmp
rcrb
xchg
add
sub
aas
sti
imul
and
mov
es
xor
outsl
addr16
clc
pop
sbb
shl
rolb
jge
js
mov
loopne
dec
mov
jmp
jnp
push
dec
dec
xchg
add
imul
test
jbe
and
mov
add
lcall
decl
mov
mov
mov
pop
or
or
inc
jecxz
sub
shll
orb
inc
les
add
sub
sbbb
push
std
mov
inc
in
cmp
cmpb
and
jg
xorl
push
addb
daa
mov
test
mov
pop
roll
mov
sbbb
dec
outsb
stos
idivl
sbbb
popf
sub
push
fdivrs
cld
repz
insl
ret
dec
lods
jnp
mov
pop
jae
sub
ja
mov
imul
mov
xchg
or
or
add
xchg
push
push
lret
xor
pop
sub
subb
push
jg
lahf
stos
push
andb
and
add
and
xor
das
dec
popf
int3
dec
fstps
and
dec
sbbb
mov
push
sbb
orb
lahf
idiv
sub
test
cmp
inc
sbb
xor
adc
adc
pop
push
fsubrl
fucompp
adc
clc
enter
add
jecxz
icebp
imul
mov
mov
or
into
pusha
dec
adcb
jb
pop
loopne
push
xorl
push
int3
mov
adc
inc
add
xchg
cmpl
xor
add
outsl
inc
mov
mov
jg
popa
xor
mov
incl
outsb
dec
loop
clc
cmpsl
jbe
loopne
inc
loope
and
ja
scas
dec
sar
jle
sti
pop
cmp
jns
rcrl
hlt
fcmovnb
lea
fistpll
add
cltd
jg
call
add
das
mov
mov
int
mov
mov
int3
loope
in
xchg
jecxz
pop
rclb
mov
push
or
inc
mov
icebp
add
xorb
js
sbb
insb
mov
sbbb
jnp
int
xor
cmc
mov
inc
add
lret
es
adc
jno
xor
pop
lret
cmc
mov
ss
leave
inc
dec
mov
xor
sbb
or
pop
popa
sub
incb
lea
jl
rcrb
lds
mov
bound
js
push
sbbb
scas
push
stos
push
xchg
mov
pop
pop
jnp
inc
hlt
fisubrs
xchg
jae
arpl
mov
dec
pop
push
inc
or
bound
jp
inc
jae
sahf
dec
adc
int
xor
orb
xchg
imul
lcall
dec
lea
lods
and
cmp
std
fadds
leave
cltd
imul
add
and
mov
scas
xor
andl
jecxz
mov
ret
das
mov
or
mov
nop
inc
mov
ja
mov
fildl
loopne
rorl
xor
mov
jb
lret
xorb
ss
pop
and
and
mov
test
cmpb
push
mov
sbb
in
loop
mov
mov
pop
ss
lea
pop
cmp
dec
add
inc
add
arpl
adc
mov
nop
inc
cmc
add
mov
add
jns
mov
push
or
and
enter
jbe
clc
mov
std
scas
push
mov
orb
lcall
pop
xlat
int
nop
inc
test
xor
in
negb
jl
sub
add
stos
mov
pop
scas
xor
in
jb
push
pop
outsl
addb
insb
push
in
gs
icebp
jg
nop
popaw
mov
stc
jecxz
ret
adc
gs
inc
ret
int3
insl
dec
clc
or
sbb
and
lea
cmp
jnp
into
repnz
jb
mov
pop
lret
sbb
cmpb
mov
mov
cwtl
inc
js
cli
lret
dec
lods
adc
dec
mov
inc
lods
xor
sbbb
sbb
sbb
pop
jb
loop
inc
adcb
inc
stos
and
scas
pusha
mov
xor
outsb
imul
fstl
sbb
lret
dec
inc
es
sub
fucomip
stos
push
jns
adc
adc
orb
inc
das
pop
mov
hlt
inc
icebp
mov
mov
int3
add
add
and
lods
adcb
sub
push
jge
addr16
inc
xchg
ret
mov
add
shrl
clc
xor
adc
pushf
push
inc
mov
jge
vcvtps2dq
leave
subb
sahf
xorb
mov
add
adc
add
les
scas
dec
test
fst
fldenv
ret
out
es
xor
adc
mov
add
push
xchg
dec
daa
outsl
or
jno
mov
out
lahf
sarl
repz
jmp
adcb
mov
add
sbbb
imul
mov
das
sbb
push
andb
lret
cwtl
sbbl
arpl
jne
adc
sbb
xchg
or
jb
adc
push
outsl
mov
adcb
nop
fnstsw
shrl
bound
sahf
fiaddl
gs
lret
and
cld
arpl
mov
sbb
enter
repz
es
cmpb
aaa
mov
lock
pop
subb
push
dec
cmp
inc
dec
out
lcall
or
push
mov
pop
mov
lods
xor
inc
js
and
fiadds
xor
jo
arpl
mov
out
bound
mov
shrl
int3
pusha
dec
inc
orb
jnp
rcr
sbb
inc
movsb
bound
loop
dec
clc
push
add
inc
mov
addr16
in
xor
fwait
or
add
adcb
repnz
mov
adc
mov
inc
out
scas
scas
push
jno
pop
mull
ret
movsb
movsl
in
cmp
adc
enter
ds
pop
das
jae
push
pop
lret
xlat
pop
aad
mov
and
mov
xor
adc
daa
adcb
jge
fadds
sbbb
xor
sub
sub
xor
sub
xchg
pop
or
movsb
addl
pop
mov
fildl
or
andb
rclb
cmp
inc
dec
add
loopne
or
call
and
test
orb
fadds
push
test
dec
adcb
adc
scas
fnstenv
sub
out
loop
and
pop
ss
xor
xor
ja
cmpsb
adc
dec
jmp
jg
ficoml
loopne
rorl
aam
mov
jg
cmpb
mov
movb
push
hlt
lret
nop
imul
aas
out
pusha
lahf
daa
lods
in
add
rol
cmp
insl
jns
push
jnp
jg
lret
sub
sub
icebp
and
cs
mov
mov
js
xchg
andl
jbe
sbb
adcb
aam
fcoml
mov
out
loopne
and
jg
push
sub
popa
pop
icebp
test
rcr
orb
xor
add
out
pusha
subb
xlat
dec
push
aad
jmp
xchg
adc
mov
sbb
movsb
roll
xchg
sahf
add
mov
lret
xchg
or
loope
int3
cld
inc
popf
jg
lods
cmpsl
in
ret
jb
scas
fwait
jns
xor
repnz
sbbb
xchg
dec
sub
imul
data16
ret
insl
mov
ljmp
scas
dec
mov
fisubrl
popa
adc
scas
call
ss
outsl
lcall
cmp
ficoml
jnp
xor
loope
jo
sub
je
out
gs
adc
push
sub
adc
and
jo
into
cs
hlt
insb
inc
jb
scas
ret
subb
dec
arpl
mov
xchg
xor
test
ljmp
mov
subb
xchg
lods
jge
jp
outsb
mov
pop
andb
mov
orb
fstps
inc
cmp
pop
add
ss
mov
cmpsl
push
stos
push
addl
addb
mov
fdivrl
pop
insl
cltd
inc
call
or
and
adc
jne
push
cmc
in
pushf
lds
lahf
sti
out
sbbb
adc
jo
push
leave
gs
orb
test
cvtpi2ps
mov
test
andb
cmpsl
inc
ljmp
sbb
icebp
enter
scas
lods
in
jg
insb
push
je
pop
inc
mov
adc
dec
sub
in
js
popa
cwtl
in
loop
fildl
pop
mov
aam
sbbb
push
mov
and
cmc
addl
cmp
ret
xor
or
shll
loop
sbb
addl
cs
ret
orb
jle
pop
out
stos
daa
loop
aad
cmp
and
addb
sub
cmp
jno
sbb
and
shll
and
popa
mov
cmp
push
push
lea
jnp
lret
fidivs
cmp
adc
or
add
mov
adcb
bnd
cmp
dec
cltd
add
mov
loope
xor
imul
mov
lods
testb
jns
or
cmp
mov
sub
iret
mov
loop
sbb
sbb
cli
insb
mov
gs
cltd
es
out
jno
dec
pop
jnp
xor
leave
add
mov
cmpb
fisubl
in
dec
adc
mov
mov
add
loope
or
mov
addb
jle
mov
arpl
sub
cmpb
dec
jnp
sub
pop
adc
inc
sbb
xor
scas
out
mov
cmpsb
xor
orb
mov
imul
jecxz
sbb
loope
mov
lock
or
sbbb
aam
xor
imul
shll
movsb
jae
test
mov
cmp
push
cli
ja
adc
mov
fsubrl
andb
clc
xchg
les
test
or
sub
rolb
mov
xor
movsb
fs
inc
xchg
sarb
adc
cltd
mov
out
mov
adcb
sub
imul
or
jmp
incl
cli
in
and
cs
andb
and
and
arpl
push
mov
out
xor
jle
out
push
jno
aas
imul
flds
push
cli
lcall
lahf
fs
and
or
cmp
imul
xor
adc
mov
mov
push
jge
and
sub
xchg
add
pop
sub
ss
jecxz
adcb
test
insb
sti
subb
sbb
inc
rolb
stos
sbb
jnp
jae
into
pop
inc
out
movsb
add
adcb
mov
sub
scas
sbb
mov
sbbl
lea
lret
push
cmpb
rorl
scas
call
fdivs
add
fisttpl
ja
sbb
mov
loopne
sub
push
mov
xorb
insl
dec
mov
frstor
lods
inc
mov
jno
test
roll
and
les
stos
mov
dec
add
inc
adc
pop
push
sub
mov
adc
inc
bsf
call
push
outsl
out
mov
icebp
out
pop
and
pop
sbb
aas
jne
rcll
or
adc
fbld
insl
pop
subb
mov
dec
mov
loopne
cmpsl
scas
sti
in
mov
mov
pop
cwtl
enter
jl
movsb
int3
mov
lahf
aam
sbb
sbb
add
dec
dec
jle
ret
adc
mov
push
mov
and
adcb
repz
outsb
popf
test
xchg
je
stos
xor
sbb
imul
sub
cmpsb
roll
rcll
push
jg
inc
lds
aam
mov
scas
jg
adc
addb
jmp
neg
pop
mov
addl
xor
in
orb
int
xor
cwtl
adc
cmp
adcb
leave
mov
outsl
sub
xchg
inc
jo
jno
pop
scas
cwtl
lahf
adc
push
gs
gs
rolb
shlb
pop
dec
cmp
lods
out
mov
pop
jge
cmp
xchg
bound
inc
push
add
int
mov
movsl
cmpb
xor
xchg
cli
inc
or
dec
je
mov
jae
mov
mov
lds
adc
mov
imul
mov
push
mulb
mov
jge
fs
aas
or
scas
adc
cld
or
hlt
das
lcall
mov
jle
dec
into
test
sub
insl
jo
enter
cmp
cltd
out
div
mov
or
mov
sbb
push
mov
sub
out
and
mov
les
mov
and
negb
and
push
inc
mov
fcomps
sub
mov
popa
int
dec
stc
ljmp
stos
sub
shll
scas
fidivs
aam
pop
dec
nop
lods
mov
mov
lcall
ret
fists
mov
inc
test
sub
lahf
lds
inc
jp
insb
testl
lock
aas
cltd
int
lock
xorl
jp
jle
repnz
and
xchg
pop
add
lahf
mov
rorl
rolb
mov
sub
push
pushf
sub
jne
int
jno
jmp
negl
je
lods
lods
pop
push
xor
cmpsb
mov
je
gs
imul
mov
pop
mull
jmp
push
sbb
push
call
imul
inc
sub
jo
scas
popf
pop
leave
es
gs
pop
mov
push
add
lret
lcall
arpl
jbe
cmovne
jo
sub
mov
xor
sbb
ret
ds
das
sbb
insb
divb
jbe
jno
jns
lret
sub
jne
and
scas
mov
incl
aad
sbb
push
dec
xchg
and
inc
sub
xchg
negb
dec
inc
xor
push
xor
and
jo
data16
popf
in
lods
out
cld
mov
mov
xchg
jns
jl
mov
pop
jbe
pop
out
add
mov
sbb
jae
ljmp
pop
movsb
imul
pop
lcall
cmpsl
mov
mov
rcll
out
enter
int
subb
xchg
inc
push
fadd
andb
xor
je
adc
cmpsl
adcl
dec
movsb
jnp
pop
push
sbb
jg
cli
inc
or
jne
mov
or
jle
mov
test
movsl
shlb
lea
jmp
add
lret
jnp
inc
or
mov
adc
pop
dec
call
inc
sbbl
mov
add
inc
push
dec
adc
pop
pause
push
or
in
ds
out
andb
push
leave
xchg
add
mov
xchg
repnz
andb
xlat
in
adcl
dec
sub
test
lret
and
mov
mov
pop
outsl
jb
jg
xchg
imul
orl
imul
push
jg
aad
add
es
scas
or
xor
sbb
movsb
jnp
jne
les
dec
daa
popa
subb
cmp
and
adcb
stos
pop
lods
pop
pop
xorb
or
sub
rclb
xorb
push
sub
pop
sysexit
mov
cmpb
data16
addb
cmp
lret
loop
ficompl
inc
jmp
nop
and
arpl
push
add
shlb
cld
xorb
cmc
ret
mov
pop
or
xorl
sub
xor
subb
imul
xchg
jae
and
and
pushf
orb
pop
sbb
lret
push
push
bound
xorl
mov
dec
dec
test
in
adcb
pop
xor
lret
mov
nop
inc
or
xor
loope
mov
hlt
popa
push
jg
in
pop
arpl
iret
mov
hlt
es
cmc
xchg
jg
nop
retw
mov
dec
lahf
dec
pop
incb
loopne
or
push
sbbb
adc
and
jno
je
insb
dec
rolb
or
hlt
jp
adc
adc
dec
mov
jg
pop
cs
ret
inc
mov
loop
and
imul
mov
and
lcall
mov
les
in
ret
xorl
fwait
mov
sub
fs
cwtl
movsl
inc
push
mov
mov
daa
push
fadds
or
cmc
jecxz
es
mov
add
stos
add
rcll
jecxz
push
sub
mov
int
cmpsb
subb
orl
test
mov
or
popa
mov
cli
and
xchg
jae
push
dec
mov
test
dec
icebp
filds
sub
cmp
mov
jns
stos
add
std
mov
sub
push
push
push
mov
xchg
xchg
lock
xchg
push
jle
inc
cwtl
pop
push
dec
jae
xorb
mov
sbbb
adc
imull
pop
mov
fidivrl
movsb
xchg
sti
add
imul
scas
or
cmp
sahf
notl
sub
cwtl
je
incb
pop
mov
dec
icebp
aas
sti
cmp
jl
xlat
jae
sub
jnp
jge
cmp
jg
adcb
dec
push
push
jp
jg
and
pusha
cmpsb
add
pushf
leave
cmpb
inc
cmp
enter
push
sbbb
pop
scas
scas
idivl
or
inc
jle
dec
mov
cs
aam
adc
dec
insb
adcb
jl
mov
push
aas
pop
or
adc
add
or
mov
push
jmp
inc
icebp
lret
mov
insl
subb
shrb
lock
cld
arpl
out
leave
lret
add
pop
mov
je
int
dec
jb
test
stos
cmp
xchg
insl
orl
mov
sti
in
inc
xchg
push
xor
inc
insl
fdiv
movl
or
sbb
cmp
fildll
out
pop
fs
or
addr16
out
in
popf
xchg
add
jbe
add
jl
cmp
cmpb
pop
rorl
insl
sbbb
jo
cltd
xor
pop
loop
sub
lods
inc
and
hlt
push
in
jo
jae
inc
push
push
ret
mov
jnp
negb
loope
jle
addb
sbb
sub
and
je
inc
call
popf
sbb
push
add
push
xor
das
in
arpl
ficoml
dec
or
mov
testb
jne
aas
jns
mov
push
ret
xor
jp
push
test
mov
int3
das
ljmp
add
inc
jle
cmp
push
leave
sbb
pushf
cmpsl
add
adcb
push
xchg
andb
dec
or
repnz
clc
inc
add
movsb
test
mov
fnstsw
adc
adc
xor
add
add
pop
aaa
movb
movl
flds
cmc
imul
pop
sbb
xor
cwtl
cmp
cmp
enter
pushf
mov
jg
xor
mov
add
fs
sub
push
and
mov
mov
cltd
daa
dec
andb
scas
orb
add
int3
jo
movw
in
inc
mov
xor
sub
call
sub
jl
or
dec
fadds
and
sbb
imul
sti
and
mov
lds
ret
js
outsl
xchg
mov
incl
inc
sub
jnp
and
mov
test
ret
cmp
xor
add
mov
fidivrs
adcb
mov
cmpb
mov
and
das
in
cli
addl
out
int
in
or
xlat
mov
sub
inc
jne
sarb
shll
rclb
xor
pop
jae
arpl
icebp
outsb
sbb
cld
and
pop
fistpll
push
jmp
inc
add
subb
inc
dec
xchg
shl
test
jae
insl
push
cld
adc
lret
ret
or
adcb
aas
test
dec
dec
push
stos
out
mov
jo
arpl
sbbb
ja
not
cmp
pop
inc
sbb
fiaddl
lret
aam
das
andb
push
and
sub
popa
imull
sub
daa
fs
jle
cmp
dec
cs
enter
xchg
adc
mov
daa
adc
mov
mov
sub
leave
mov
cmp
stos
clc
loopne
andl
pop
and
cmp
inc
das
cmc
aad
jns
leave
dec
xchg
mov
rorl
push
sbb
ds
sbb
scas
pop
loopne
sub
or
orb
add
in
fcmove
xchg
in
mull
arpl
ret
add
or
adc
push
sub
xchg
int
pop
movsl
or
dec
jns
or
adc
push
adc
mov
xchg
xor
cs
rclb
pop
fistl
seto
jbe
jp
xchg
lds
dec
mov
cli
call
in
leave
push
mov
fdivr
inc
dec
pop
insb
call
xor
sbbb
filds
gs
mov
dec
ljmp
rolb
sbbb
loopw
mov
dec
add
mov
or
insb
imul
les
ficomps
es
outsl
mov
add
push
sbb
rolb
gs
and
add
popa
adc
push
jl
lds
cmc
xlat
add
push
push
lcall
fisubrs
test
mov
pop
icebp
cwtl
aaa
lret
outsb
mov
jmp
loope
mov
imul
mov
inc
or
xor
es
mov
bound
sub
insb
cmc
push
into
cmpsl
jns
out
mov
inc
roll
or
gs
sbb
jle
das
in
fidivrs
jp
mov
add
stc
out
neg
and
jo
pop
dec
xor
inc
adc
out
sar
cltd
mov
or
ret
rcrl
fisubs
jne
sbb
jo
les
cld
mov
xchg
test
mov
lock
and
xor
add
test
loope
cltd
faddl
nop
pop
pop
sub
dec
push
sub
popa
ja
into
jg
pop
testb
repnz
outsb
ds
bound
jp
mov
xchg
xchg
ja
das
nop
imul
jl
ss
stos
inc
pushf
cltd
cmp
stos
adc
and
xor
mov
push
or
lret
outsb
jle
mov
in
push
sub
fwait
push
lods
push
sbb
dec
or
mov
mov
imul
inc
xor
sahf
add
push
mov
mov
or
inc
sub
movsl
and
add
and
int3
jl
lcall
push
test
pop
repnz
scas
daa
lcall
out
out
es
leave
pop
mov
cmc
lcall
incl
push
and
bound
mov
pop
aaa
or
cmc
test
flds
stos
cmp
mov
mov
xchg
and
dec
pop
jnp
push
cltd
pushf
lea
cmp
scas
and
add
adcl
add
mov
mov
xchg
mov
mov
inc
arpl
and
lret
pop
xor
xor
and
mov
add
sub
mov
imul
movsl
les
or
mov
and
jge
adc
repnz
lods
lcall
cwtl
add
bound
jmp
dec
lds
movsb
lret
jb
or
cli
imul
adc
ss
jo
mov
jp
add
and
pop
in
jle
or
lds
aam
les
test
jle
cmp
jl
and
int
or
fdivrl
add
jbe
arpl
jns
mov
jbe
push
jae
adc
lcall
adc
fstps
enter
and
push
mov
and
iret
pop
lcall
pop
xchg
cmp
popf
mov
pop
addr16
or
test
xchg
sub
cmp
push
or
push
aaa
sub
adc
out
imul
mov
mov
cs
xor
jbe
adcl
push
lods
movsb
sarb
test
cmp
xchg
sub
cmc
jmp
clc
sbb
rcrb
push
add
fimull
jb
das
add
cltd
jmp
jne
xor
loopne
and
push
sub
mov
cwtl
bnd
push
xor
and
leave
and
dec
xor
or
xchg
inc
test
inc
fistpl
movsl
push
xlat
xorb
in
les
mov
shll
mov
push
aas
xchg
xor
and
push
xor
add
or
icebp
mov
js
push
lods
outsb
xor
lods
xorb
mov
int
ror
jb
lods
and
push
or
fistps
fcomps
out
xorl
fdivs
stc
sti
lea
or
push
scas
fs
pop
sbb
xor
fstps
cmp
test
cmpsb
inc
sahf
pushf
mov
mov
icebp
jbe,pt
int3
push
xor
into
stc
ja
sub
jl
or
mov
mov
push
jl
loopne
or
mov
lret
sub
outsb
leave
xlat
jae
cld
mov
jecxz
mov
push
call
xor
adc
movsb
add
repz
mov
imulw
push
loopne
sbb
add
cltd
xchg
cld
mov
mov
std
cmp
insb
mov
sub
bound
xchg
cmp
mov
cmp
inc
add
cld
mov
dec
mov
jg
sti
adc
stos
js
jp
add
xor
mov
mul
ja
fisubrs
lcall
pop
pusha
pop
or
adc
sbb
imulb
mov
stc
jbe
icebp
imul
lds
sub
test
cmp
cwtl
and
in
mov
pop
push
jbe
jge
cmp
inc
enter
sub
pushf
cmp
jge
hlt
dec
std
jle
cs
sarl
push
sub
mov
sbb
adc
rclb
xor
popa
nop
ffree
sub
outsb
pop
pop
sbb
pop
dec
lcall
xchg
and
cmpsl
sbbl
ret
daa
mov
out
push
aad
sub
inc
fistps
and
xchg
fdivp
rcll
aad
pop
mov
and
ss
mov
xor
in
sub
leave
pop
jo
push
jno
sub
or
push
add
mov
cmp
and
jno
xor
insl
jle
cltd
push
or
push
jle
aaa
and
imul
xor
outsl
cltd
xchg
adc
pop
test
push
ds
mov
jb
test
in
idivl
clc
fsts
insl
push
cltd
mov
jle
lock
lock
mov
fidivrl
lcall
idiv
cmp
das
sbb
jns
xchg
sub
push
adc
jae
mov
lcall
fiadds
out
mov
outsb
cmp
testl
repnz
push
and
mov
fnsave
and
outsb
outsl
into
scas
inc
shr
mov
fmull
lock
and
sbb
lret
mov
xor
lret
outsl
imul
push
aaa
insl
jle
add
test
add
or
sahf
xor
xchg
in
add
lcall
nop
addr16
xchg
pop
jle
rolb
popf
pushf
nop
scas
mov
sub
inc
pop
das
mov
add
lcall
lahf
icebp
push
jns
cltd
xchg
jb
cmp
mov
cmp
sti
rol
mov
sub
jl
xor
lahf
push
cmp
pop
scas
dec
repz
sub
out
push
stc
mov
test
jg
lret
adc
pop
jb
inc
xchg
fisttps
jne
push
jmp
cmp
lcall
fcompl
in
lea
enter
insl
mov
lret
ja
inc
cmp
cmpsb
enter
cli
or
lods
ss
push
jle
test
aam
jl
xchg
sub
jp
loope
push
cld
loop
push
jecxz
es
push
jns
repnz
in
icebp
sub
repz
ror
push
xor
cli
jl
test
push
fidivs
pusha
mov
es
pusha
data16
ljmp
test
xchg
jne
mov
subl
xor
or
and
pop
jp
shrb
lret
inc
sbb
xchg
pop
xchg
sub
pop
stc
sub
fisttpl
ds
push
push
mov
sahf
adc
das
fstpt
loope
in
or
fdivl
icebp
push
xor
jmp
sti
sub
les
mov
addb
int3
mov
jle
xchg
xorl
inc
pop
ret
or
lcall
movsl
or
lcall
and
and
mov
mov
rorb
or
cmc
in
mov
stc
enter
test
xor
shlb
mov
ds
mov
jle
and
add
js
pop
arpl
jb
jbe
lock
sub
cs
mov
daa
and
shr
xchg
pop
hlt
mov
cmc
jmp
lcall
push
stos
ficoml
iret
cmp
pop
cs
inc
loope
lea
out
sub
lcall
jno
lret
fnstsw
xchg
xchg
xor
bnd
ds
jbe
mov
jecxz
sbb
loop
fstpt
pop
lret
fisubs
add
adc
dec
sarl
ds
jns
jae
popf
mov
mov
lret
std
pop
andb
leave
scas
outsb
xor
stc
or
dec
mov
not
xchg
dec
dec
add
and
in
jmp
add
dec
lcall
dec
cli
xor
mov
movsl
fwait
jno
mov
add
cli
and
lcall
int
lods
jp
jg
and
mov
rcll
inc
adc
aam
jle
push
cltd
pop
sarb
mov
jge
and
sub
mov
cli
mov
sub
inc
xor
lcall
outsb
and
sbb
xchg
or
xchg
nop
mov
lcall
jmp
mov
pushf
xor
insb
mov
xor
sub
inc
xor
cs
cltd
pop
xor
gs
mov
popf
sti
test
cmp
inc
add
lods
out
mov
push
cs
sbb
inc
lret
sub
xchg
add
sub
imul
cwtl
popa
flds
xor
add
and
push
sub
cltd
std
cmp
cld
aam
rcrb
lock
xor
sub
jl
push
pop
xor
ret
ror
daa
sub
movsb
pop
mov
andl
test
ret
mov
andl
xchg
mov
inc
push
mov
in
jmp
sbbl
in
aaa
cmp
loope
push
adc
pop
add
xor
add
lcall
in
inc
dec
xchg
dec
outsl
mov
shl
cs
dec
out
inc
add
mov
shlb
int
repz
int
ljmp
inc
jno
sub
jge
in
lds
cld
mov
stos
mov
jbe
cmp
push
frstor
jae
or
jp
and
sub
int3
insb
fidivl
jns
daa
cmp
or
xchg
loopne
ret
mov
test
notl
outsl
cmpsb
ja
cltd
inc
sbb
cli
dec
push
pop
pop
ja
or
pop
mov
mov
pop
dec
aad
lds
sub
jge
pop
pusha
cld
cltd
push
adcl
divl
sbb
outsl
xor
xchg
and
cwtl
ljmp
outsb
sbb
xor
xor
lea
out
xchg
xor
mov
sbb
rolb
int
mov
pop
push
push
jp
ret
lea
inc
jg
les
std
incl
cs
int3
int3
test
stc
adc
sbb
sbb
jbe
pop
jmp
lods
jnp
cmp
add
out
les
fwait
sub
adc
lcall
pop
push
sbb
adc
mov
out
insb
jge
push
jo
test
add
enter
mov
icebp
in
cmpsb
call
sbbb
mov
ret
mov
push
and
push
pusha
lahf
jle
cmp
xor
and
fsubs
clc
xchg
scas
add
sub
inc
and
cmp
ja
push
mov
int3
out
fnstcw
xor
neg
push
xor
stos
jns
movsb
inc
call
je
sub
cmp
adc
call
inc
dec
scas
pop
adc
sbb
sub
in
push
xchg
icebp
jbe
pushf
push
xor
add
insb
dec
xchg
and
subl
mov
in
push
sbb
and
insb
xchg
in
and
lahf
cmp
and
cwtl
and
sbb
lret
sub
sub
pop
xchg
sti
test
insb
adc
add
and
jmp
dec
adc
pop
test
subl
sub
inc
or
jns
inc
fisubrl
cmp
insb
cltd
jg
inc
lock
push
imul
in
fimull
mov
mov
cli
shlb
das
cltd
mov
or
sub
fiaddl
mov
push
mov
cmp
insb
dec
mov
jae
cwtl
sub
out
lcall
clc
xchg
push
sbb
pop
ja
add
rcr
repz
cli
sub
inc
insb
xchg
push
add
cmp
insl
push
lcall
pop
idivb
adc
cmc
les
jp
xchg
cmp
roll
ret
sbb
pop
jns
andl
jb
sbb
lds
mov
dec
dec
subl
pusha
shl
arpl
sahf
mov
shl
xchg
inc
inc
jge
call
push
imull
stc
pusha
data16
nop
sub
loop
call
inc
cmp
or
xchg
into
jp
mov
mov
cltd
cmp
xlat
popf
pushf
and
mov
push
adc
test
in
push
out
out
stos
enter
and
fidivrl
jecxz
fcmovbe
mov
out
push
out
popa
jae
popf
addb
xor
jne
cltd
mov
pop
pop
lock
xor
insl
jp
mov
insb
xchg
mov
int
jp
leave
add
cmpsl
popf
push
test
push
push
cmp
jae
arpl
cmp
fsubrs
dec
cltd
pop
ds
lods
push
outsl
lea
rorl
xor
or
mov
daa
cmp
push
mov
test
cltd
cli
cmpsl
add
ret
xor
and
dec
out
out
push
push
sbb
fldenv
jns
inc
pop
cld
ud2
imul
cmpsl
leave
subb
ss
jg,pt
xor
xchg
dec
xorl
scas
bound
add
setl
or
add
mov
or
mov
sub
add
dec
in
cmc
push
test
and
rcll
imul
out
pop
aaa
scas
cmpsb
xor
mov
inc
add
stos
add
push
mov
orl
mov
lods
and
mov
movsl
cmp
call
add
lea
addb
fdivl
rcrb
cmc
cmp
pop
into
or
stos
fmull
jge
sbb
icebp
inc
pop
fwait
daa
pop
pop
fdivs
xorb
js
pop
inc
repz
adc
and
into
test
cli
and
in
loopne
cmp
jns
hlt
push
or
roll
push
inc
push
movsl
cmpb
loopne
cmpb
scas
mov
cmpb
and
and
mov
jg
je
mov
push
jg
xor
mov
cmpsl
ds
inc
mov
sub
xor
pop
pop
call
scas
pop
cmc
sbb
imul
test
sub
jg
iret
out
mov
fs
movsl
ror
orb
lea
xor
pop
rolb
xchg
pop
mov
hlt
rep
test
inc
bound
sbbb
push
cmpb
jnp
xchg
fdivl
add
pushf
cmp
xchg
or
insl
inc
mulb
bound
loop
mov
adc
mov
xchg
mov
mov
sbbb
mov
and
cmp
pop
push
cmp
sbb
sub
pop
sub
mov
adcb
jnp
test
data16
jge
dec
andb
in
mov
in
test
sbb
aas
xor
nop
push
push
cmc
out
stc
cmpsl
idivb
pusha
inc
in
push
push
sub
or
out
add
fiaddl
loope
or
fstpt
mov
mov
ret
push
jge
push
adcb
cs
inc
xchg
inc
pop
addr16
fisttps
cmpsb
jnp
mov
sbbb
enter
loop
repz
mov
icebp
sbb
xchg
sbbb
in
jl
int3
add
out
repz
push
xchg
sahf
addb
pop
hlt
dec
fstpl
ljmp
mov
mov
cltd
inc
movsb
jbe
jae
ljmp
inc
inc
je
pop
loopne
mov
sahf
pop
incl
xlat
mov
pusha
ja
push
ret
cli
xchg
sbbb
hlt
mov
out
incl
fistl
lcall
fldcw
rcrb
xchg
or
aad
and
cmp
fdivrp
push
outsl
loop
mov
sub
mov
negb
push
cmp
ja
andb
loope
in
test
pop
lea
aas
iret
dec
sbb
std
and
mov
and
add
addb
fsubr
addb
cmpsl
lfs
andb
int3
gs
aaa
sahf
mov
orb
or
dec
js
sti
inc
pop
loope
movsb
cmpsb
jae
orl
xchg
mov
cmpsl
fs
add
add
xorb
xor
in
jns,pn
sbbb
sti
in
jnp
popa
adc
and
sub
adcl
cmp
leave
pop
push
decb
and
push
aaa
sub
movsb
jl
inc
jg
ja
inc
repnz
rcrb
test
lret
inc
adcl
into
adcl
mov
xlat
dec
sub
jb
jo
xchg
fidivl
xchg
add
test
roll
adc
outsl
xorb
jl
lret
addl
push
ret
mov
pop
adc
adc
inc
andb
addb
xor
cmp
roll
push
arpl
push
movsb
ret
popf
xor
sub
dec
jg
cmpsl
jbe
xchg
sub
push
mov
rcrb
out
dec
loop
into
nop
sub
stc
hlt
adc
pop
cmp
fildl
jge
push
push
inc
jl
sarb
cwtl
andb
lahf
mov
mov
sbb
inc
cmp
daa
sub
mov
ds
xor
mov
mov
adcb
idivl
mov
loope
fbstp
loope
or
add
out
push
mov
arpl
xchg
xchg
leave
push
dec
xor
pop
xorb
xorb
into
xor
mov
mov
stos
mov
push
cltd
pop
jmp
pop
rcrl
stos
aam
in
clc
and
mov
out
xchg
add
cmp
mov
inc
mov
ret
subb
jae
xlat
and
xchg
lock
xorb
aaa
mov
notl
sbb
mov
iret
add
sub
xor
mov
inc
or
adc
pop
in
arpl
cmp
rorb
insb
fwait
and
jns
mov
ret
aam
add
shll
nop
test
jb
sbb
andb
xchg
subb
int
loope
jnp
jnp
add
cli
pop
lret
ss
sbb
jnp
outsl
shll
cmpb
imul
push
lret
or
mov
xchg
lcall
or
iret
cmp
or
jb
mov
sbb
and
ja
push
pushf
add
and
pop
xchg
shrb
jecxz
sbbb
inc
mov
xor
lea
sbb
stos
decl
jnp
mov
test
addr16
mov
or
inc
movsl
and
repnz
out
and
dec
imull
aas
mov
add
test
das
fwait
insl
decb
dec
ret
ret
pop
inc
ljmp
insb
cltd
in
imul
sbbb
cmc
push
cmp
pop
or
xchg
cmpb
push
hlt
das
and
andl
adc
add
inc
dec
xor
adc
jecxz
mov
xchg
mov
jo
ret
add
add
pop
xor
mov
inc
and
mov
xor
shll
cs
lahf
outsb
jle
jo
insb
xchg
mov
ret
orb
iret
into
or
jg
ret
push
dec
mov
repz
loope
fs
mov
adc
mov
push
rcr
adc
test
cmpb
xlat
cmc
sub
sbb
adc
les
xor
mov
sbb
aad
es
jnp
mov
adc
or
mov
out
fidivrs
test
lods
packsswb
nop
inc
mov
mov
loop
xchg
mov
xor
roll
andb
cltd
push
adc
pop
jle
jge
sbb
enter
ret
or
negl
cmpl
gs
cltd
sbb
xor
mov
daa
mov
iret
xchg
and
sbbb
xchg
mov
imul
jge
and
in
sub
imul
xor
sub
add
in
addr16
sub
cmp
mov
test
rcrb
repz
in
jmp
js
repnz
ljmp
les
stos
shrl
mov
xor
repz
int
jae
movsb
push
inc
nop
sub
pop
jg
sbb
jae
mov
add
divl
inc
fstpt
pop
fdivs
jl
addl
mov
js
stos
movsb
js
stc
loope
sub
ret
jns
xchg
adc
mov
hlt
idivl
imul
stos
mov
sbb
jecxz
adcl
ret
lock
stc
js
es
sahf
push
and
adcb
sbb
mov
xor
adc
clc
and
jp
inc
sbb
cmc
xor
hlt
loope
mov
cwtl
add
popf
push
pop
and
mov
add
mov
mov
jb
xchg
sbb
andb
mov
addl
mov
jp
js
cs
jge
stc
sbb
mov
push
in
in
sub
inc
fistpl
lahf
movsl
jl
xchg
jmp
mull
jge
out
insl
je
mov
in
insb
add
in
repz
push
out
movsl
mov
add
cld
cltd
cmp
lcall
and
cltd
stc
mov
jg
inc
arpl
enter
mov
and
adc
dec
gs
cmp
xchg
mov
pop
jle
push
mov
xor
mov
push
repnz
addr16
lcall
in
dec
mov
repnz
xchg
mov
fs
mov
int3
jbe
mov
lret
push
repz
in
xor
les
daa
sub
ljmp
push
and
out
notl
cmp
sahf
dec
mov
outsb
push
push
loopne
imul
lcall
cmp
inc
mov
push
repnz
out
xor
js
jae
push
fcomps
mov
jle
xchg
out
and
sti
fistl
rclb
jle
pop
adc
add
dec
xchg
add
jle
std
xchg
pop
sbb
and
shrl
iret
outsl
jmp
fldcw
pop
std
rorl
sti
xchg
push
mov
xchg
push
sarb
sbb
enter
mov
xchg
dec
sbb
ficoms
and
xor
pusha
mov
lcall
jl
lcall
jb
push
jle
repnz
push
xor
popf
add
in
out
int3
cmp
cmp
pop
push
mov
xchg
imulb
int
sti
rcrl
imul
mov
js
jbe
adc
xor
or
test
and
popa
out
cld
add
fildll
jo
imul
inc
sub
jg
ljmp
iret
push
lahf
add
mov
das
pop
sar
push
add
pop
jmp
pushf
fsubrs
leave
jecxz
int
push
add
stc
loopne
mov
cmp
dec
xchg
push
cmc
aad
sub
mov
shrl
loopne
jle
push
inc
mov
mov
enter
jb
lock
outsl
cltd
push
incl
xchg
lret
cmpsl
call
jb
and
orl
mov
fsincos
mov
out
rorl
inc
adc
xorb
cmc
enter
in
xor
arpl
and
out
mov
pop
sbb
inc
sarl
pop
push
adcl
xor
ret
and
mov
or
adc
xor
pop
xor
pop
mov
adc
out
stc
ljmp
sub
sub
ljmp
sub
add
sub
pop
test
stos
test
daa
jl
cltd
jne
jbe
testl
pop
enter
cmp
cmpsb
jl
sub
dec
push
ret
in
adcb
sbb
sub
add
push
pop
mov
mov
rclb
push
pop
aaa
jbe
int3
xor
movsl
cmp
jle
xor
add
cltd
pop
pop
mov
ljmp
pop
in
lcall
cmp
sbb
pushf
jl
clc
lds
fdivl
dec
outsl
jl
outsl
mov
inc
fnstenv
scas
mov
insb
repnz
xchg
pop
aas
and
outsb
test
test
xor
pop
pop
and
mov
mov
add
push
jp
push
lcall
cmc
gs
test
inc
loop
push
cmp
vmovq
lods
sti
loop
stos
mov
jb
loop
sbb
mov
xor
enter
and
bound
aam
xor
jg
fwait
dec
mov
hlt
add
mov
in
popa
neg
mov
dec
push
xchg
xorl
pop
mov
int
repnz
aam
add
mov
pop
rolb
stc
inc
sbb
jecxz
dec
adc
sub
out
aas
jae
or
insl
and
sbb
lds
cltd
fwait
push
mov
movsl
ret
push
stc
out
push
aam
nop
popa
cltd
dec
add
mov
lret
cmc
aad
or
test
xor
jbe
cmp
mov
mov
jmp
aam
jg
xor
jle
xchg
mov
inc
jb
xchg
mov
push
jns
cmc
jecxz
cmp
and
sub
idiv
and
jns
add
sarl
xchg
sbbb
push
xchg
lcall
cmpsb
lcall
ret
pop
cmc
lcall
leave
lcall
in
xor
sub
pop
sbb
aad
inc
add
notb
mov
add
cwtl
jge
lds
addr16
sub
and
cs
push
lcall
push
push
out
lret
negb
xchg
pop
lea
inc
aam
push
lods
mov
test
lret
lock
sahf
fwait
sbb
mul
xchg
mov
add
sub
clts
xchg
dec
and
ret
bound
mov
sbb
rorl
xor
xor
mov
jge
scas
or
push
mov
jns,pt
cmp
push
xor
sbb
mov
add
add
les
movsl
or
psraw
sub
jns
daa
gs
xchg
into
lret
in
ret
aam
inc
jg
add
and
sub
adc
push
cmp
outsl
nop
int
mov
adc
fsubs
jp
pop
cmp
pop
gs
xorl
add
lcall
cmp
push
mov
mov
or
lcall
or
mov
jle
aaa
jb
bound
pop
loope
pop
sub
loopne
inc
mov
test
test
cmp
out
jmp
xor
bound
jb
mov
sbb
pop
add
stos
push
adc
incl
rcrl
repnz
push
cs
add
dec
mov
jge
and
lcall
test
sub
push
push
xchg
sbb
outsl
in
mov
ljmp
xor
sar
inc
test
sub
jg
dec
mov
cltd
sti
popa
andb
mov
inc
and
mov
sub
and
orb
sbbb
mov
outsl
mov
enter
sahf
imul
clc
out
pop
jg
mov
cli
push
es
cmpb
adc
xchg
mov
adcb
fistpl
aam
int
adcl
mov
aas
loope
repnz
negl
dec
out
cmp
insl
push
das
mov
adcb
movsl
ret
stos
jg
mov
test
cmp
in
aas
roll
sbb
adc
push
inc
pop
dec
add
repnz
inc
or
pop
cmp
mov
mov
push
sbb
xlat
outsb
subb
or
int3
and
mov
pop
adc
adc
mov
out
cltd
out
xorb
outsb
pop
shlb
fsubrl
sub
cli
add
cmp
data16
jb
adcb
mov
and
fstps
or
roll
pop
out
jmp
mov
lock
imul
subb
call
mov
out
cmpb
test
mov
subl
mov
dec
lret
mov
cmc
push
cmp
adc
xorb
loop
inc
repnz
sbbb
or
scas
jg
mov
lds
adc
dec
pushf
push
add
imul
xlat
push
ret
dec
jle
mov
dec
pop
sub
test
ret
mov
ds
sub
mov
nop
test
hlt
inc
pop
xlat
jns
cltd
inc
or
xor
cwtl
inc
dec
loop
andb
std
movb
insl
lahf
cltd
push
xchg
addb
push
pop
icebp
jnp
filds
push
loope
bound
xchg
dec
leave
adcl
jae
ja
cmpsl
loopne
jbe
mulb
mov
stos
lods
cli
cmpsb
das
leave
sbbb
push
in
test
sbbb
cmovo
aas
xlat
stc
or
add
out
mov
dec
pop
lcall
enter
add
popf
imul
cmc
in
test
mov
test
negb
or
adc
jb
cmp
in
adcb
cmpsl
rolb
mov
lret
fiadds
notb
lret
push
jne
sbb
inc
in
add
addb
xchg
jnp
xchg
in
test
adc
or
jae
fwait
mov
pop
dec
inc
fildll
and
test
pop
mov
or
out
and
lds
xor
iret
inc
fcmovne
hlt
add
sbb
push
fbstp
cmpsb
mov
xor
adc
xchg
das
push
aas
arpl
dec
shll
ret
cmpsb
sub
das
scas
or
aam
adc
in
insb
dec
outsl
subl
cmpl
nop
ljmp
jg
ja
cmp
mov
fisttps
mov
mov
inc
je
adcl
cld
push
lcall
cmp
test
mov
mov
je
sbb
fistl
jnp
jnp
push
ss
stos
ret
adc
jnp
fldln2
inc
sti
arpl
inc
mov
loopne
imul
dec
or
cmpb
je
inc
mov
mov
mov
lcall
or
subb
inc
shlb
int
je
in
dec
xchg
pusha
scas
mov
or
jnp
jae
shll
cmpsb
lock
inc
sbb
lret
lods
out
dec
adc
outsb
lcall
sbb
frstor
push
je
adc
mov
push
push
je
xchg
pop
or
jnp
and
cmp
decl
cld
and
sub
int3
and
pop
mov
push
sub
push
cli
mov
ljmp
negl
aam
mov
out
adc
cli
pop
cwtl
dec
cs
dec
lock
sarl
ja
sbb
in
ds
mov
cltd
push
xchg
jne
in
cld
mov
mov
mov
out
hlt
pop
fdivrl
xchg
add
ljmp
in
sub
xchg
adc
push
mov
lret
mov
mov
lods
push
sub
jge
test
out
mov
movsl
shll
cwtl
stc
sub
push
sbb
fisttps
inc
sub
xor
or
iret
jbe
movsb
push
ret
and
and
repnz
cltd
jmp
pop
adc
popa
repnz
aad
inc
shll
sarb
lock
int
ja
xchg
fsub
and
jp
cli
aad
stos
out
lock
fs
adc
mov
inc
pop
movsb
adc
mov
or
push
outsb
fdivrs
js
jb
pop
lret
fildll
push
sub
pop
and
in
cmpsb
lcall
jno
jb
inc
lret
push
outsb
push
movsl
mov
jb
inc
cltd
outsl
lds
mov
lock
or
cmp
pusha
mov
xchg
inc
jo
jl
nop
int
imul
push
mov
xchg
jle
out
insl
pextrw
jbe,pt
ljmp
outsb
fst
jg
or
mov
dec
push
mov
or
imul
jle
ret
pop
push
jb
call
or
inc
push
popf
pop
push
mov
pop
jle
ja
mov
add
mov
ja
xorl
lock
dec
and
xorb
test
sbb
popa
and
push
sub
push
sub
lock
xchg
fsubp
sub
subl
repnz
push
enter
mov
inc
dec
ffreep
cli
mov
inc
jp
adcl
xor
jge
sbb
dec
or
xchg
leave
xor
mov
pop
adc
mov
cli
xchg
mov
subl
pop
push
add
mov
xchg
gs
stc
dec
pushf
xorb
dec
mov
or
cmp
mov
cmp
add
xchg
inc
clc
std
imul
push
das
inc
push
sbb
dec
sti
jp
mov
rcll
arpl
mov
sub
mov
stc
data16
mov
mov
dec
mov
iret
sub
popf
dec
fld1
lcall
enter
sbb
mov
sub
push
xlat
pop
das
xchg
adc
or
ss
dec
adc
push
cli
sahf
dec
xchg
andb
jge
loopne
jne
cmpsl
dec
testb
outsb
das
mov
pop
orb
push
lods
xor
adc
movsl
sbb
sti
sbb
test
fwait
notl
fucomi
jp
jae
int
sbb
xor
dec
jae
xchg
jmp
push
adc
jns
inc
scas
pop
sub
popf
xchg
add
cmc
push
arpl
pop
out
shll
xchg
shll
xor
add
mov
pop
pop
and
mov
test
sub
mov
push
xchg
bound
aad
data16
pop
dec
mov
repnz
into
jecxz
fsubl
cmp
data16
and
je
mov
xchg
mov
pusha
dec
lahf
ret
mov
xchg
sbbb
or
add
ljmp
insl
dec
ud1
pop
lret
lahf
orb
inc
cmp
aaa
call
cld
jle
push
lret
addb
mov
bound
jne
pushf
sbb
jb
add
xchg
les
data16
jbe
addb
cli
cmpsl
and
fidivrl
int
lret
mov
arpl
fwait
mov
aas
sub
gs
jmp
sarb
test
cmp
add
das
push
fdiv
imul
jae
std
adc
inc
jge
push
dec
test
adc
adc
mov
jno
pop
test
pop
in
icebp
adc
xchg
cmp
aam
in
or
jne
imul
sbbb
and
fists
and
push
incl
mov
pinsrw
or
jge
mov
shll
push
or
xorb
sub
in
xor
add
inc
mov
inc
call
add
int3
repz
mov
mov
popf
es
mov
dec
rcl
arpl
je
pop
add
loop
mov
das
jg
xchg
out
xchg
stc
pop
mov
dec
mov
dec
popa
test
xchg
subb
xlat
mov
pop
xor
inc
lcall
imul
jae
mov
jae
sahf
daa
add
movsl
pop
push
mov
push
adc
test
test
xchg
test
ret
add
icebp
int
cmp
pushf
and
and
andb
test
mov
sub
pop
sub
outsb
ficoms
pop
out
je
in
stos
jnp
fisubrl
inc
ljmp
push
cwtl
addb
dec
mov
adc
cmp
pop
das
sub
cmp
add
in
ret
shlb
mov
jbe
dec
cmp
adcb
outsl
fildll
andb
fistl
test
lahf
mov
push
push
mov
sahf
in
pop
mov
loop
arpl
jecxz
cmp
push
sti
cmpb
mov
add
jmp
ds
xlat
lahf
sbb
out
ficoml
notb
rorl
jl
push
mov
sbb
addl
out
and
add
cmp
sub
addr16
sbb
iret
lea
adcl
cmp
mov
xchg
mov
ljmp
daa
in
jle
pop
outsl
leave
out
inc
xor
cmc
inc
mov
insl
orb
adc
fninit
inc
nop/reserved
aaa
sbb
sub
and
enter
jecxz
or
lahf
cs
mov
dec
fstl
lea
adc
test
add
cmp
mov
cmpl
add
pop
fsubs
mov
pop
and
mov
pop
mov
lcall
sub
stos
clc
push
and
xchg
subb
lcall
mov
and
sub
and
sbb
dec
cli
add
int
cmpsb
jnp
xchg
mov
jne
pop
lahf
jl
ror
jge
bound
insl
xchg
and
mov
xchg
push
pop
add
jo
jecxz
jnp
sub
jb
dec
pop
je
sub
lock
pop
dec
inc
das
xchg
int
outsl
clc
orb
adc
subb
scas
cld
outsb
aas
test
out
cmpsl
inc
inc
add
iret
jle
lahf
ficomps
mov
sub
ftst
dec
pop
cmpb
pop
dec
aad
mov
ja
pushf
or
jno
xchg
add
push
lock
leave
andb
movb
jnp
test
push
stos
mov
outsb
inc
out
leave
lock
inc
lahf
xchg
mov
lods
mov
add
sbb
mov
lahf
adc
ljmp
sbb
add
cmp
popf
loopne
stos
dec
negb
push
test
iret
div
popl
cs
cmpsl
push
adc
xchg
daa
jl
scas
ss
xor
xchg
xchg
lret
outsb
into
sahf
add
jl
xchg
inc
icebp
bound
mov
cmp
xor
jp
jmp
ror
lahf
out
dec
pusha
clc
and
pop
adc
cmp
shlb
mov
pop
les
jmp
jle
and
mov
jge
mov
push
jecxz
push
das
mov
or
sbb
xchg
add
sbb
dec
shrb
pop
jmp
sub
andb
xchg
jmp
sub
and
add
ret
popf
pop
jns
sbbb
stos
movb
cmp
out
pushf
xor
and
push
dec
lahf
mov
dec
sti
stos
notl
jge
and
dec
xor
jno
xchg
or
addb
mov
push
shr
or
dec
icebp
das
inc
dec
xor
push
push
frstor
sub
sarb
ljmp
sahf
aad
repnz
add
xor
mov
inc
aaa
std
cmpl
jp
push
in
or
loop
xor
cmp
cltd
aaa
inc
lahf
sub
xchg
mov
test
clc
dec
dec
inc
push
inc
xor
adcb
and
ja
or
xor
add
cltd
jb
cmp
inc
ljmp
xor
sub
push
inc
mov
repnz
das
sub
lahf
aas
push
or
jae
test
outsl
cmp
dec
xchg
call
bound
mov
inc
inc
jbe
adc
push
popl
pop
out
scas
add
push
imul
or
mov
add
mov
jns
adc
idiv
push
mov
subl
test
fistl
orb
std
jno
cmp
inc
inc
push
std
mov
and
mov
fs
out
cmp
inc
and
test
dec
loopne
push
add
clc
dec
fidivrs
add
mov
jp
outsl
fiadds
and
or
idivl
adc
or
andb
pusha
pop
pop
int3
mov
cli
je
movsb
dec
adc
call
mov
xorb
pop
ljmp
test
ret
mov
aam
rcll
jns
jno
adc
or
sub
insl
pop
push
jo
sbb
scas
pop
sub
imul
cmp
jno
cmpsb
sub
sub
push
bound
jns
push
incb
xchg
sbb
add
andb
hlt
jl
xchg
loop
push
into
sbbb
aas
jns
mov
inc
ss
andb
xchg
out
ds
push
js
imul
std
mov
sub
lcall
push
add
jae
lret
dec
loopne
jle
add
mov
xchg
andb
aad
into
ja
pop
ret
add
scas
lods
gs
inc
dec
jbe
jmp
sarb
xorb
mov
fidivs
call
out
lahf
in
sub
push
xchg
add
shll
daa
mov
ss
lock
pop
push
rol
inc
popa
and
push
pusha
xchg
sbb
inc
pop
add
xchg
adc
xchg
xor
unpckhps
xor
adc
idiv
insb
jbe
mov
clc
out
mov
mov
sub
fsubr
sub
and
test
inc
test
lock
pop
aam
adc
cltd
xor
les
sbb
addr16
mov
leave
sbb
xor
add
outsl
mov
xchg
xor
inc
repz
mov
mov
lcall
mov
pop
jno
sahf
iret
and
les
outsb
or
sub
sbb
roll
dec
mov
imul
xlat
pop
scas
lret
das
test
mov
add
add
pop
and
pop
data16
arpl
bound
dec
int3
lcall
out
flds
cltd
or
cltd
adc
mov
repnz
xor
push
ja
in
mov
icebp
sbbb
lahf
xor
cltd
dec
push
cld
pop
sub
mov
adc
out
inc
xchg
add
inc
aam
jle
jp
xor
adc
xchg
lcall
sbb
cltd
xor
dec
repnz
jecxz
push
mov
adc
es
xchg
popf
sbb
hlt
popa
xor
mov
push
push
dec
popw
aam
ss
xchg
sub
lret
mov
cmp
shl
jbe
ret
shlb
inc
inc
jecxz
idivl
and
repnz
lds
in
fsubl
sub
mov
adc
jbe
cmp
outsl
fisttpl
ret
aam
sbbb
scas
daa
out
repnz
ss
cli
jecxz
cmpsl
cmp
xor
movsl
mov
jmp
stc
xchg
loop
xchg
ret
cwtd
dec
push
and
cli
and
dec
pop
pop
pop
mov
mov
pop
dec
jecxz
jge
rclb
loope
test
arpl
divb
lock
dec
fcmovb
orb
cs
int
cmpsb
inc
jp
sbb
sub
mov
lcall
scas
jp
push
push
mov
mov
cmpsb
mov
repnz
push
aam
mov
daa
out
testb
stos
jo
jecxz,pt
mov
mov
jns
fstpl
cmc
clc
push
xchg
js
mov
outsb
pop
lret
push
leave
iret
pop
out
push
jbe
std
repz
cmpb
cmp
pop
jle
movsl
sbb
cltd
xor
or
sub
lret
add
dec
pop
xor
xchg
js
adc
lods
fwait
xor
popf
pop
andl
push
cltd
jnp
inc
mov
out
adcb
test
mov
mov
xchg
push
xlat
jg
xchg
clc
std
adc
and
sub
cli
cs
jl
mov
cmp
lds
test
inc
inc
pop
mov
add
enter
cmp
iret
xor
xchg
ret
imul
cmp
insb
cmpl
sub
inc
xlat
adc
stos
rorl
fstps
push
inc
mov
mov
and
clc
jp
popf
cmp
push
xchg
push
imul
xor
inc
lcall
shrb
sbb
and
or
lods
jno
xor
ja
jae
rcrb
adc
mov
cltd
and
xchg
xchg
jg
dec
jecxz
dec
ss
mov
jns
mul
out
scas
mov
xor
stos
add
jo
lea
cld
js
adc
add
pop
in
push
ret
es
dec
mov
stos
loopne
sub
push
inc
push
push
mov
and
fisttpl
pop
ret
xor
or
cltd
shll
adcb
popa
xor
aam
pop
ja
stc
add
mov
sbb
mov
and
xchg
and
loop
cld
lret
rcrl
add
data16
inc
out
in
push
xchg
test
pop
jmp
stos
xchg
mov
ja
sbb
loope
mov
jae
xchg
add
call
sbb
xor
lds
and
test
cs
rorl
pusha
outsb
loopnew
pop
pop
pop
xor
das
lcall
insb
mov
xchg
insb
aad
push
jge
in
fidivs
and
mov
lods
outsb
cmc
jl
lcall
and
jae
mov
mov
push
xor
ficoml
pop
pop
add
cltd
xor
pop
mull
out
pop
test
sbb
adc
adc
mov
negb
cmp
je
xor
push
dec
xor
mov
out
daa
mov
fs
mov
xorl
cmpl
ja
inc
subb
cltd
icebp
adc
inc
mov
bound
outsb
sub
xor
movsb
cmp
rol
insl
pop
jg
insb
cltd
xchg
pop
ljmp
pop
shlb
cltd
sti
js
lahf
jb
and
fs
scas
outsl
push
lcall
add
mov
cmp
fadd
lahf
stos
insb
or
out
dec
test
mov
pop
push
mov
jbe
pop
mov
aas
testl
movsl
in
sbb
push
sub
mov
adc
and
mov
loopne
and
mov
jb
test
push
xchg
mov
add
and
lret
mov
ret
and
cmp
jb
aas
add
in
mov
or
mov
add
test
jp
dec
inc
ficoms
bound
pop
nop
orb
and
mov
cltd
mov
and
push
pop
ja
or
sbb
out
sbb
xlat
ret
sti
sub
adc
je
add
mov
repnz
push
test
outsb
xchg
lcall
call
cli
xchg
lret
push
xor
in
inc
and
jge
pop
je
mov
jbe
loop
es
cmpsb
jns
or
mul
in
jbe
add
dec
sbb
cs
daa
jns
xchg
mov
in
sub
clc
push
ret
cmp
inc
sti
movb
sbb
in
std
jp
aaa
xchg
sub
sbbb
mov
add
add
inc
fldl
and
mov
inc
mov
stc
dec
mov
xchg
sbb
cli
mov
push
xchg
cmc
push
push
push
mov
pushf
pop
int
rcr
sub
in
mov
mov
cmp
das
int3
jge
mov
and
or
pop
jp
out
xor
nop
push
shlb
in
aad
roll
mov
cmp
add
aad
and
stos
pop
imul
ss
cs
push
in
adc
in
scas
in
aaa
xchg
mov
add
sub
les
xor
add
xor
jo
mov
pop
ja
adc
fs
mov
jl
cli
xchg
jbe
jge
das
repnz
mov
sbb
sbb
dec
mov
les
pop
fdivrs
test
sahf
loop
lcall
sbb
out
lock
imul
push
cmovb
mov
lods
push
repz
popf
out
enter
imul
leave
jae
repz
mov
outsl
das
ret
cli
jge
pop
out
push
dec
orl
xor
add
and
sub
dec
jmp
fwait
andb
imul
jle
jp
dec
inc
mov
outsl
sbb
jae
int3
xor
data16
stos
ror
inc
cwtl
leave
sub
es
mov
push
pop
mov
insl
xor
sub
ds
mov
repnz
jecxz
repz
lcall
add
lds
inc
cmc
jg
lret
repnz
mov
shlb
sbbb
sahf
jp
lcall
aaa
xor
popf
mov
test
lcall
fidivrs
js
je
push
lds
lcall
out
outsb
stos
sahf
mov
add
imul
repnz
and
push
shrb
xchg
adc
je
scas
cmpsb
icebp
stc
jl
ds
jns
lret
and
jbe
push
pop
sub
addb
xor
pop
sbb
jbe
add
mov
lret
xor
push
xor
scas
jae
out
sbb
push
clc
les
and
jb
jp
sbbb
jle
mov
xorl
mov
cmpsb
lcall
data16
aad
or
or
dec
and
outsl
sub
sbb
sub
and
inc
pop
xor
jb
shrb
scas
push
inc
mov
or
fldl
xchg
sbb
jne
rcrl
or
enter
sti
or
fidivrs
lcall
movsb
adc
add
popa
movsl
dec
in
xorb
jg
push
cmp
lock
push
enter
xor
sbb
xchg
jne
gs
sbb
xchg
js
stc
js
nop
pop
bound
subb
leave
jns
test
clc
adc
dec
andl
call
jle
fldl
cmp
cli
mov
mov
popf
insl
mov
fnstenv
imul
addb
xchg
adc
sarb
in
fdiv
adcb
xchg
sbbb
into
push
sbbb
lcall
pusha
push
scas
aam
movsb
push
addb
hlt
pop
inc
lret
adc
cmp
popa
lock
popf
loope
xor
sbb
pop
enter
and
pop
push
sbbl
lcall
loop
cmp
jae
adcb
fwait
and
gs
push
jl
leave
roll
mov
sub
xchg
jo
subb
push
inc
jg
push
lahf
sub
stos
loopne
and
xchg
dec
push
pop
sub
dec
adc
test
cmpb
dec
fs
inc
imul
jg
push
jne
pop
ret
xchg
xchg
sbb
mov
xor
lret
mov
pop
inc
and
or
bound
jnp
jbe
imul
mov
add
add
movsl
ljmp
xor
mov
xorb
in
sbb
ret
xlat
pop
mov
out
xchg
push
orb
inc
sbbb
pushf
inc
fldcw
cmpb
sub
fwait
or
addb
inc
das
adc
fs
outsb
in
mov
push
cmp
add
fldcw
cmpb
xlat
aam
in
adc
inc
push
adc
femms
jmp
sub
pop
loopne
mov
pusha
xchg
ljmp
and
and
sbb
mov
addb
loop
mov
aad
push
sahf
enter
mov
cmp
mov
jnp
sub
mov
aam
stos
mov
jns
inc
xor
rolb
scas
loopne
orb
inc
test
add
mov
xchg
stc
inc
int
xor
loopne
xor
rcrb
dec
jecxz
nop
js
pop
orb
pop
fists
mov
orb
xchg
adc
dec
movsb
jle
je
jnp
lds
lock
mov
and
ret
int
pop
jmp
jecxz
cmp
add
jae
mov
movsl
idivl
repnz
mov
cmp
imul
loope
dec
lcall
pop
push
jns
push
jbe
aas
xor
rclb
add
out
loopne
testl
push
dec
mov
in
outsl
int
outsb
jb
jge
cltd
aas
jo
mov
mov
out
scas
pop
pop
xorb
jo
rorl
arpl
cmc
xchg
or
sbbb
push
ret
pop
mov
lods
adc
into
pushl
or
adc
push
jg
mov
loopne
les
mov
add
insb
movsl
test
pop
addb
inc
mov
movsb
sub
arpl
adc
clc
inc
push
or
xchg
mov
enter
fiaddl
popa
decl
sahf
jg
mov
push
sbb
stos
cmp
cmp
jns
cmp
fs
fsub
lock
xchg
sbb
das
dec
cld
nop
sbbb
into
inc
cmc
out
add
sub
jno
int3
adc
xchg
popa
ret
jg
insb
mulb
out
stos
xchg
loopne
lds
repz
dec
mov
mov
sub
decb
imul
add
and
iret
mov
pop
xlat
mov
push
push
addb
dec
shrb
imul
loop
repnz
vmovdqa
loopne
mov
add
les
inc
jb
jle
sbb
mov
test
repz
mov
out
push
inc
repnz
add
filds
movsb
iretw
sub
add
or
jns
dec
popa
cmpb
pop
mov
mov
cmp
adcb
inc
inc
and
add
sti
stos
push
ret
jae
push
ret
nop
sbb
pop
jno
shrl
mov
mov
jae
mov
jmp
mov
mov
push
pop
cmpb
addr16
cwtl
sbb
aam
adc
bound
ds
rclb
xchg
jl
std
adc
push
sti
data16
xlat
ror
or
sbbl
add
shlb
imul
lods
jnp
inc
les
rcrb
xor
or
lds
and
addl
jmp
cwtl
lock
addb
imul
mov
mov
adcb
cmp
push
push
subb
out
cmpb
adc
je
filds
inc
js
xchg
mov
pushf
shlb
lods
or
addb
mov
jge
gs
push
sbb
in
add
add
fnstenv
dec
jns
dec
andb
idivl
inc
in
aas
fldt
ret
gs
rolb
jmp
jg
adcb
es
cmc
subl
mov
and
inc
cmp
mov
leave
cli
and
mov
fdivs
mov
bound
push
xchg
in
gs
ror
xchg
pop
in
loope
and
outsl
mov
mov
lahf
adcb
xchg
lret
push
pop
andb
jo
in
jmp
xor
aaa
inc
push
cwtl
andl
out
mov
or
xchg
pop
std
out
sbb
sbbb
push
in
adc
mov
inc
mov
jb
sbbb
iret
outsb
sbbb
mov
cmpsb
movl
and
jge
cmp
arpl
lods
jmp
das
inc
push
std
jmp
jl
push
sbb
outsb
jle
jno
je
ret
add
add
mov
mov
push
mov
mov
add
lds
out
arpl
sub
outsl
aad
imul
or
lret
scas
push
addb
xchg
lea
push
sub
int
jns
or
ret
jbe
mov
adc
adc
dec
mov
mov
sub
cmp
jg
mov
test
adc
fiadds
cmp
ret
imul
pop
add
scas
aam
mov
jg,pn
mov
cli
pop
mov
addb
pop
jo
inc
xor
scas
and
add
ja
ss
add
orb
repz
xor
xorb
and
pushf
jo
adc
lahf
or
repz
pop
dec
xor
adc
sahf
out
ss
jbe
outsl
sbbl
jae
movsb
sub
jmp
and
jl
and
pop
push
adc
and
andb
adc
pop
jl
test
mov
cmp
leave
xorl
shll
jae
mov
subl
lahf
push
pusha
mov
adc
xor
subb
dec
jne
sbb
aaa
addb
stc
xor
gs
pop
xchg
cmc
xchg
int
sub
pop
and
faddl
aad
lret
sahf
add
gs
icebp
pop
xorl
mov
fadds
stc
lea
fidivl
sbb
shll
and
xchg
mov
xor
or
adcb
add
scas
lret
mov
je
mov
in
or
adc
push
and
push
mov
sbb
flds
sarl
fists
stc
adc
rcr
adc
xorb
sti
insb
mov
mov
addr16
push
pop
fadds
push
xchg
jp
jge
inc
and
sarl
ja
push
movsl
rcrl
and
ror
xchg
pop
sub
mov
push
pop
push
or
push
push
popf
mov
dec
mov
mov
adc
jne
adc
jno
roll
gs
shlb
jmp
movb
xorl
lea
push
imul
mov
sub
sahf
add
cmpsl
cmp
sub
je
std
fst
adc
pop
fldl
das
pushl
dec
imull
cmp
imul
sbb
push
adc
mov
leave
cs
ret
push
lods
out
jge
outsb
jecxz
dec
int3
dec
mul
inc
mov
pop
jg
std
pop
and
out
and
cltd
adc
sub
xor
cli
lret
int
dec
sub
subb
mov
mov
sbb
arpl
ja
cltd
push
xchg
test
cmp
ljmp
or
push
aaa
addb
and
dec
rcrl
mov
inc
xchg
subl
and
test
push
mov
in
addb
outsl
jbe
adc
arpl
cmp
loope
or
sbb
test
ljmp
rcrb
out
fnsave
cmpsl
in
les
cmpsl
xor
or
dec
jae
mov
outsb
sar
push
cmp
cmpb
daa
cmpsb
xor
sbb
popf
xchg
in
mov
sub
or
stc
das
mov
mov
aam
cmpb
orl
dec
stos
shll
int
gs
popf
adcb
ret
mov
ror
dec
subb
idivl
and
mov
sbbb
iret
movsl
sbbb
in
lea
adc
fucomp
pop
fiaddl
fistl
mov
ret
aad
inc
jl
lcall
jge
pusha
mov
ret
cmpsl
sbb
aam
dec
lcall
xchg
ret
rcrl
pop
push
fnstcw
add
xchg
pop
dec
into
push
les
jmp
pop
and
jmp
xchg
xchg
sahf
test
push
jae
ljmp
xor
shlb
dec
scas
and
loop
jecxz
jo
cmpsb
insl
out
pop
cs
sub
lods
lea
jae
andb
cmp
stos
cmpb
loopne
cmp
pop
popf
jo
cld
popa
pop
filds
pop
loope
dec
rcl
add
fnsave
outsl
inc
jnp
out
sub
push
adc
push
aam
ljmp
adcl
test
jg
or
subb
mov
or
inc
adc
mov
ret
dec
mov
sbbb
jns
xorb
in
mov
lock
dec
add
cli
sbbl
popw
xlat
ss
push
out
pop
rolb
xchg
adcb
push
leave
adcb
js
pop
xchg
incl
inc
ljmp
imul
cs
mov
adc
mov
fistl
iret
pop
add
ja
adc
pop
push
fadds
es
pusha
ret
lret
test
pop
mov
xchg
orl
jl
add
jmp
icebp
adcl
loop
scas
or
or
cmpb
enter
sbb
adc
rorl
and
add
lahf
push
ret
sub
jge
mov
cmp
scas
testb
imul
movsl
loop
pop
or
jo
push
pop
orb
jecxz
inc
cmp
test
out
dec
add
mov
imul
mov
int
xchg
push
arpl
adc
js
jmp
out
xlat
sub
aas
adc
cmpsb
popa
int
jmp
cld
enter
shll
cmpsb
repnz
push
mov
xchg
addb
mov
shr
add
pop
scas
andb
push
add
fistps
jecxz
lcall
orb
dec
pushf
sbb
jns
push
movsl
subl
push
ret
mov
lods
push
scas
and
ret
pop
jne
push
xor
rclb
add
gs
inc
sbb
cmpb
jle
inc
push
cwtl
cmp
fdivp
rorl
or
dec
outsl
push
mov
xchg
das
in
subl
rcrl
sbb
mov
rcll
dec
mov
arpl
shll
pop
inc
mov
push
inc
and
repz
sbb
lcall
aam
xchg
outsl
adcb
push
jmp
xchg
mov
test
je
scas
dec
aam
sbb
xor
sbbb
add
lods
imul
icebp
sbb
xorb
repnz
mov
aas
cwtl
and
mov
xchg
sahf
sbbb
jnp
sbb
inc
into
sbb
pop
sets
push
ret
imul
cltd
xchg
repnz
push
and
in
orb
or
xchg
sub
mov
std
subb
and
mov
in
push
xor
loop
mov
hlt
inc
push
sub
xchg
sbb
sbb
jg
inc
cmc
push
subb
das
cmp
aas
xor
mov
nopl
mov
sbb
xlat
jp
out
outsl
inc
jmp
adc
or
xchg
popf
movlps
or
mov
and
jl
lods
push
test
in
pop
testb
mov
loop
adc
xchg
jg
or
sub
stos
fstpl
inc
je
cwtl
lret
jns
cmp
jmp
addb
inc
push
mov
mov
adc
out
cmp
ret
xor
gs
test
mov
aam
iret
adcb
dec
outsl
stos
jae
pusha
test
xor
mov
cli
mov
xchg
sbb
aaa
pop
xorb
mov
rcrb
jae
and
xor
nop
sbb
jge
cs
movsb
fadd
dec
push
rolb
in
mov
pop
cmpb
sbb
aaa
inc
imul
mov
dec
mov
insl
and
inc
leave
pop
orb
cmpsb
jb
jl
jae
lret
xchg
and
fimull
mov
aad
es
jns
inc
mov
sub
leave
jae
in
stc
subb
push
mov
push
incb
cmp
xorb
push
sti
or
dec
add
or
pop
mov
addb
cli
and
xchg
fidivrs
xorl
jnp
lea
push
es
enter
rclb
xchg
dec
orb
popa
js
into
cwtl
cmpsl
mov
or
fmull
imul
aam
cmp
jnp
loope
xchg
cmpsl
inc
push
sub
jp
add
push
call
nop
jae
jbe
mulb
clc
jl
mov
mov
test
push
mov
in
xor
push
in
mov
push
bnd
pop
xor
and
xchg
testb
stos
arpl
ss
mov
fsubr
lret
lret
dec
movb
xchg
adc
iret
pop
jae
inc
xlat
cmpb
movb
sub
rol
fimuls
int
cmpsl
adc
out
dec
lds
insl
mov
adc
and
dec
pop
xor
orb
subb
mov
rolb
pop
dec
mov
jnp
leave
mov
pop
loope
adc
push
push
push
arpl
add
xor
repnz
outsl
cmc
add
add
test
pop
mov
dec
jge
stos
sub
lret
and
test
jae
repnz
push
jmp
and
inc
in
dec
dec
shl
sbb
out
mov
in
jbe
cwtl
sbbb
adc
sbb
lock
pushf
je
scas
push
jo
mov
ljmp
xchg
cmc
cld
je
jae
aas
shlb
mov
jle
mov
pop
stos
inc
sarl
cltd
mov
test
and
jae
cmp
ljmp
inc
pop
call
add
add
out
test
cli
dec
jg
enter
adc
cmpl
xchg
pop
sub
aad
push
int3
sti
addb
imul
std
and
mov
inc
subb
xchg
add
negb
add
ljmp
mov
xorl
ss
cltd
dec
or
jno
arpl
jmp
sub
xor
stos
clc
sahf
pop
or
xor
mov
xchg
jo
jae
sbb
push
jp
adc
push
sbb
push
pushf
push
cmp
popf
lret
icebp
cli
inc
inc
aad
movsb
jle
dec
jg
fnstenv
not
ja
stos
ds
bound
lds
lret
add
or
sub
adc
lock
jg
push
xchg
push
inc
mov
test
or
add
cwtl
xor
pusha
add
adc
sub
dec
mov
cmp
add
jge
sub
or
jnp
push
dec
add
lods
dec
pusha
jg
int3
mov
repz
testl
jnp
in
cmpsb
jne
std
adcl
and
jmp
xchg
and
gs
add
pushf
mov
popl
mov
jbe
rorl
sub
fidivl
scas
mov
xchg
jae
push
outsl
adc
faddl
rorb
and
iret
pop
pop
imul
pop
cld
fwait
jmp
imul
and
mov
push
adc
mov
jb
jge
xchg
cmp
cmpb
xor
popa
sub
addb
loope
daa
dec
mov
fs
mov
push
jno
fiadds
adc
imull
out
adc
sbb
inc
je
fs
add
jg
fildl
jle
sahf
or
inc
addl
fs
xchg
pop
sbbb
roll
jl
lcall
adcb
test
push
negb
dec
or
les
sarl
loope
mov
mov
sub
nop
sub
inc
jmp
adc
pop
adcb
decl
pop
mov
adc
inc
ds
repnz
xor
les
push
xorb
addr16
sbb
jle
pop
lods
push
or
data16
cmpsl
mov
lock
add
fbld
fs
xchg
cmpb
lret
and
lds
adc
adc
mov
jp
rorb
mov
test
dec
lock
cmpb
dec
jge
add
lret
loop
inc
imul
int
jg
aas
lret
xor
mov
cmpb
and
ds
jp
popa
pushf
sbb
cmpsb
cmovno
sahf
jno,pn
sbbb
scas
and
inc
cmp
lods
push
sub
inc
mov
roll
fptan
addb
adc
xchg
lock
fidivrl
jae
push
sub
insb
sbbb
subb
mov
imul
xor
subb
test
xorb
into
inc
fbstp
and
ror
sub
mov
push
mov
hlt
dec
inc
xor
sub
pop
sbbb
xor
ss
jle
sbbb
js
xorb
xchg
into
pop
xchg
repz
andb
push
inc
addb
stos
sub
mov
mov
push
mov
inc
sbb
orb
xor
ja
adcb
out
call
xchg
mov
std
mov
dec
cmpb
dec
inc
sahf
mov
jecxz
inc
or
push
xchg
test
ret
ret
addb
sbb
inc
fildl
sbb
add
or
addb
cmpsb
lods
lret
je
aas
lea
xor
frstor
lcall
popa
movsb
andl
pop
adc
add
pop
push
inc
xchg
rolb
decb
inc
lea
lcall
popf
mov
lods
jle
rcl
mov
xorb
jge
cmp
sbb
test
shlb
loop
xlat
js
add
mov
in
cmpsb
add
push
pop
mov
xchg
dec
int3
pusha
jge
orb
adc
dec
jnp
push
or
fmull
loopne
mov
xchg
pop
xchg
movsb
iret
jnp
jle
add
jb
loop
nop
movl
mov
aad
popf
scas
data16
push
cmp
loopne
sub
sub
mov
clc
or
sub
cli
pop
cmp
andb
add
insb
out
fadds
jo
cmpb
dec
adc
mov
mov
imul
push
out
insb
lds
sub
movsl
inc
lret
call
mov
xorb
lretw
xor
test
dec
out
js
rol
add
scas
inc
jg
lahf
fisubl
sbb
dec
push
fbstp
imul
addb
call
loopne
or
popa
in
cmp
push
movsb
andb
jnp
mov
push
imul
loope
std
jbe
mov
lods
sub
dec
jb
or
test
mov
fidivrs
je
add
clc
dec
xchg
jnp
dec
mulb
into
hlt
and
jb
call
jne
pop
popa
jl
or
sub
mov
in
sub
ret
dec
aam
leave
sbb
fildl
jnp
mov
mov
mov
addr16
addb
pop
inc
pop
std
lods
pop
sub
lcall
push
enter
adc
cs
into
sarb
mov
mov
push
hlt
lcall
dec
into
dec
inc
or
lret
and
push
and
sti
inc
inc
cwtl
mulb
add
mov
sub
js
dec
sbbb
cmp
inc
and
mov
cmpb
pop
add
je
add
rorb
jg
xchg
fcoml
andl
bound
jae
jbe
inc
adc
arpl
movsl
mov
sub
sti
sar
and
add
gs
call
into
add
xorb
stc
outsl
dec
mov
orb
popf
or
jecxz
in
imul
pop
push
cmpl
cmp
add
std
push
dec
xchg
repz
mov
loopne
scas
xor
movq
xor
popa
jle
cmpb
push
fistl
dec
xchg
adc
xor
orb
imul
jle
mov
dec
mov
sbb
jbe
pop
dec
add
cmpsb
add
dec
icebp
xor
mov
bound
jae
ss
add
adc
jne
sbb
add
ss
lret
lcall
push
push
leave
jecxz
loop
lret
push
push
fs
scas
bound
inc
push
push
dec
orb
and
jno
loope
test
push
mov
xchg
mov
dec
mov
addb
jmp
sysret
add
inc
gs
push
rolb
test
daa
inc
xchg
cvttps2pi
sbb
adcb
outsb
mov
mov
mov
cmp
push
mov
dec
jbe
jg
adc
sahf
out
sbbb
pop
inc
jl
lea
sub
or
adc
mov
sbb
das
testl
sbb
pop
repz
outsb
data16
sbb
jp
mov
addr16
repnz
jbe
push
ja
aas
fldl
mov
shlb
test
and
rcrb
xchg
cmp
dec
fs
add
sbb
ret
xor
dec
out
scas
dec
mov
sub
movsb
out
jle
ret
cmp
sbb
push
jae
lock
jb
cli
xchg
pop
lea
ljmp
notl
popa
call
popa
enter
xor
sub
inc
cmp
mov
lret
pop
mov
lods
ret
icebp
hlt
dec
test
jb
fstps
les
sbb
sub
jae
adc
cmpl
inc
fbstp
add
sub
xlat
cmpl
sub
cs
xor
idiv
add
imul
cwtl
outsl
lcall
pop
pop
loope
push
jecxz
data16
in
pushf
cmpsl
lea
aad
loop
xchg
aad
jae
mov
sbb
push
mov
das
cmp
jge
imul
stc
adc
rorb
imul
andb
lods
mov
or
inc
jne
adc
xor
decl
in
mov
imul
mov
call
cmp
pushf
and
cli
inc
xor
aad
or
sbb
mov
adc
subb
add
lock
mov
push
cmp
cmpsb
sbb
insl
cwtl
mov
add
ja
push
xchg
sbbb
addps
mov
int3
adc
loope
fistl
and
sub
fdivs
frndint
outsb
mov
jo
orb
fcompl
stc
fisubl
loop
ret
xor
push
dec
sub
xor
orb
test
sbb
shlb
xor
jnp
inc
fists
and
dec
addr16
inc
mov
xchg
and
std
insl
sbb
filds
ss
data16
out
inc
adc
inc
mov
xorb
jae
cmpb
mov
add
cwtl
loop
pop
and
dec
cwtl
dec
sub
aaa
pop
cmp
aam
mov
lea
sub
jnp
subb
nop
xorb
xchg
addb
int
out
ret
inc
inc
mov
subb
xchg
loop
jl
je
sti
cmp
jns
sub
xchg
xor
mov
orb
pop
fdivrl
pop
jle
arpl
pop
repz
cmpsl
sbb
or
jecxz
stos
xorl
je
adc
fisubs
shl
pop
sbb
jno
sub
scas
in
jecxz
mov
jmp
or
orb
push
out
inc
inc
xorb
adc
mov
andb
addb
adc
lock
fldt
aas
arpl
test
imul
mov
pushl
cli
cmpb
test
pop
xor
gs
das
inc
imul
xorb
test
lahf
lcall
insb
ds
retw
aaa
cmpsl
mov
and
jns
mov
pushf
sub
and
nop
mov
bound
jecxz
cld
xorb
pop
sbb
loope
inc
jecxz
daa
adc
pop
in
sbb
jg
jle
js
mov
cmc
stc
jno
inc
loopne
cs
mov
sbb
shl
je
xchg
std
jg
xchg
sbb
jecxz
push
or
cld
cmp
mov
cli
pop
cltd
roll
add
adc
sbb
push
outsl
add
imull
sub
push
mov
addb
pop
scas
sub
jge
mov
jnp
xchg
mov
outsb
adc
jg
push
call
sbb
cld
lods
ljmp
xchg
dec
movl
xorb
out
sub
sbb
inc
repz
pushf
mov
mov
inc
cmp
cmp
fwait
ss
lahf
arpl
mov
add
mov
rolb
lret
dec
adc
addb
pop
add
inc
fmuls
mov
jle
mulb
cltd
adc
jnp
sbbl
mov
adc
repz
adc
subb
pop
cs
testl
cmp
mov
repz
jecxz
lods
mov
insb
mov
xlat
mov
imulb
mov
sub
out
pusha
push
adcb
xchg
fisubrl
aam
es
lret
xorb
jbe
aas
pop
mov
mov
pop
stc
inc
addl
subb
cmc
shll
and
xor
cli
mov
adc
stos
inc
add
test
enter
subb
xchg
ficoml
cmp
cs
sbb
add
push
sbb
sti
repz
outsl
outsb
es
insl
pop
jne
fbld
subb
pop
pop
jae
rolb
insb
nop
jp
jg
addl
xchg
mov
into
bound
popf
data16
test
fsubs
push
ja
and
sahf
sub
inc
cmpb
ret
mov
imul
adc
leave
stos
cli
xorb
testl
push
outsl
mov
mov
imul
cmpsl
sbbb
inc
mov
or
mov
dec
inc
fbld
cs
add
sbbl
xorb
push
fs
and
sub
xor
call
lods
orb
rclb
orl
mov
movsl
adcb
sub
lods
lret
xlat
xorb
mov
sbb
push
mov
cmpb
stos
aam
mov
pop
rcll
lods
mov
pop
push
test
cmp
adc
subb
cmp
inc
pop
dec
add
add
add
xor
adc
fwait
popa
mov
andb
jmp
jno
xchg
mov
push
popa
cmpb
and
xor
mov
mov
data16
cli
xchg
imul
lea
cmp
xchg
ret
stos
mov
nop
lock
andb
mov
xchg
andb
xchg
mov
mov
mov
or
adc
jo
fisttpll
pop
xchg
outsl
cmp
fs
xor
sti
pop
dec
je
loop
xor
push
addr16
sbb
test
call
and
insb
adcb
mov
xor
jle
hlt
pop
fs
das
subb
jecxz,pn
out
ret
dec
loopne
cmpb
mov
mov
cmpsb
or
pop
decl
mov
stos
mov
fwait
mov
sbb
shlb
std
mov
jecxz
shlb
adcb
xchg
jo
xor
dec
das
inc
mov
or
rcrl
add
jno
cmp
divl
dec
sbb
mov
out
sub
add
mov
mov
cmc
sbb
clc
cmpb
jg
and
add
addb
aam
mov
cmpb
and
xor
in
mov
mov
addb
leave
sahf
and
mov
dec
mov
bound
dec
fstpt
push
aam
out
mov
jge
jae
jmp
lret
add
add
and
cwtl
insl
cmpsb
stos
sub
arpl
inc
push
inc
mov
cwtl
push
cs
xor
orb
fidivl
dec
ret
pop
jae
adc
les
sarl
ret
lret
and
mov
xor
lods
imul
mov
cmc
push
jge
sbb
ret
sti
jns
call
adc
repz
into
adc
mov
addb
xchg
xor
sbb
cmp
dec
jb
mov
and
cwtl
lcall
xor
test
jg
adc
pop
mov
in
das
lds
rcll
and
movsb
lods
std
icebp
je
subb
jge,pn
out
jae
lock
or
jle
loope
sar
add
pushf
sub
dec
inc
orb
mov
insl
in
xchg
fimuls
test
sub
pop
jnp
subb
ja
out
jne
add
nop
sbb
fstpl
pop
cmp
arpl
fs
mov
fldenv
push
rcll
incl
call
push
lret
dec
add
push
adcb
clc
sbb
jmp
popf
mov
sbb
push
inc
mov
enter
push
pop
arpl
push
inc
in
dec
xchg
and
cmp
sub
jmp
or
leave
pop
cmp
scas
pushf
mov
aam
ret
jnp
inc
cmp
push
nop
jg
dec
enter
mov
jle
adc
cs
and
xorb
lret
adc
mov
pop
std
lock
jle
cli
push
mov
loopne
jecxz
ds
out
cmp
clc
scas
add
addl
mov
sahf
iret
mov
push
cltd
mov
sbbl
lea
fisubrs
add
xchg
loopne
insb
aaa
outsl
fiaddl
inc
es
or
sar
add
adc
pop
xchg
jo
inc
pop
xor
fs
mov
stc
les
sbb
out
data16
into
add
jae
push
sahf
push
xor
jb
ds
out
sub
adc
fnstsw
scas
aam
sbb
rcrb
subl
mov
add
inc
call
es
ret
out
sub
push
popf
mov
xchg
jp
jo
or
mov
xchg
aas
push
push
aaa
loope
xor
push
setnp
faddl
push
push
jg
xchg
sbb
outsb
pop
xchg
bound
inc
and
sbb
mov
aaa
sub
insb
rorb
nop
aas
gs
shlb
test
or
pop
out
xchg
xchg
jo
lods
adc
test
lds
ljmp
movsl
xor
data16
ljmp
or
dec
adc
in
cmp
cli
push
push
outsb
adc
sub
push
mov
notb
add
inc
pop
sti
sub
inc
pop
lcall
adc
mov
push
mov
int3
js
add
or
cmp
lea
cmpsl
add
mov
aaa
repnz
cwtl
pop
jns
into
jbe
adc
xchg
cmp
jb
sub
loop
add
mov
and
mov
sbb
sahf
sbb
mov
add
xorl
or
and
mov
in
mov
lcall
cltd
ror
sbb
repnz
jle
xor
inc
cltd
bound
test
aam
popf
rcl
mov
mov
pop
pop
stos
call
push
jbe
pop
outsl
xor
insl
shrb
xchg
enter
mov
ret
stos
xchg
pop
sub
add
scas
ret
add
push
pusha
jns
ret
jae
xchg
adc
push
jnp
mov
testb
in
lret
insl
jg
and
jge
ret
mov
sbb
addr16
cmp
fdiv
and
imul
or
sbb
int3
mov
stos
scas
arpl
cmpsl
jl
mov
jnp
cltd
xorl
jne
or
arpl
notb
aaa
adc
xorb
mov
icebp
test
sub
xor
orb
sti
lods
inc
and
popa
xlat
sbb
inc
mov
lahf
cmp
test
cmpsl
sbb
add
pop
xchg
sbb
inc
iret
ret
popa
loop,pn
jl
mov
mov
pop
xchg
sbbb
into
xor
arpl
mov
push
call
aad
inc
cmp
test
imul
sarl
clc
loop
push
pushf
addb
cmp
sbb
sub
or
rolb
pop
cmpsl
andb
adc
lcall
test
orb
sub
test
jo
arpl
scas
push
in
sub
push
xchg
mov
jbe
ret
xor
insl
mov
outsl
jg
and
rorl
xchg
jb
jbe
scas
mov
scas
mov
pop
jge
call
nop
cwtl
or
leave
inc
cmp
dec
lea
in
decb
pop
mov
out
inc
pop
sar
pop
xchg
dec
outsb
lods
aaa
sbbb
imul
adcb
inc
mov
sbb
sahf
movl
ljmp
sbbb
test
lock
fisttps
sub
inc
enter
and
cmpsb
mov
or
mov
adc
xchg
movl
jae
xlat
fldcw
inc
or
or
and
sbb
test
cmpb
jl
je
roll
sbb
pop
test
add
sbb
sub
dec
push
dec
insb
andb
ss
ja
xorb
jle
push
outsb
pop
arpl
pop
jge
hlt
inc
dec
jmp
push
les
push
loope
adc
nop
adc
fnsave
test
mov
mov
aad
jl
aaa
jg
sbb
xlat
mov
dec
push
sbb
sub
in
pop
mov
insb
lods
orb
inc
fisubs
fstl
cmp
jae
add
pop
mov
jbe
aaa
sahf
xor
or
je
aad
xor
imul
sbb
jnp
mov
call
ja
push
repz
loop
and
subl
mov
or
lds
add
or
pop
in
inc
gs
and
jnp
jmp
pusha
lea
stc
sti
xor
test
adc
or
or
aad
fisubrl
ftst
mov
call
mov
ret
mov
jle
test
mov
dec
outsw
inc
mov
add
add
out
pop
cld
sti
xor
mov
rcr
lret
dec
inc
insl
pop
test
mov
pusha
xor
sti
cmpsl
add
out
lret
popl
ljmp
addb
mov
aas
mov
jle
mov
je
push
inc
test
mov
cmpsl
adcb
clc
rcr
js
pop
adcb
dec
stos
inc
adcl
je
jb
bound
sbb
sahf
cmp
and
jae
mov
mov
and
jnp
inc
jmp
xchg
jb
cmovno
push
push
mov
jge
outsl
es
popf
subb
mov
pusha
add
and
aaa
in
xchg
ljmp
fnstsw
sub
addb
mov
mov
stos
aaa
add
loopne
xchg
and
and
jmp
pop
aad
out
loopne
adcb
mov
push
cmp
jg
ja
loop
sbb
inc
andb
jl
jne
inc
orb
test
sbb
or
orb
das
imul
inc
ret
gs
es
fstpt
subb
rcll
mov
lcall
fs
add
inc
adc
mov
inc
movsb
jmp
mov
movsb
dec
add
int
push
lock
sbb
mov
addb
push
sub
jb
pop
or
scas
and
cmp
jae
lods
push
int3
ret
xchg
out
arpl
pop
aas
pop
adc
xchg
sti
ret
jo
jg
inc
ja
ds
rcrb
jl
lds
call
sbb
stos
mov
outsl
movsl
orb
lret
imul
push
pop
or
pop
cmp
insb
or
lea
orl
inc
ret
orb
cmpsl
mov
lods
push
stos
popa
sub
mov
imul
cmp
push
mov
sbb
test
cmp
or
in
inc
mov
subb
rolb
sub
jmp
xor
inc
and
xchg
dec
sbb
pop
add
lds
lds
jo
and
adcb
add
mov
inc
loope
addl
mov
xchg
mov
je
icebp
mov
in
iret
insl
je
mov
sub
or
mov
xor
arpl
xchg
xor
xchg
sti
push
sbb
push
or
mov
dec
mov
add
nop
aam
fldt
mov
jae
decl
lcall
mov
xchg
and
or
sub
andb
test
adc
sbbl
lods
rcrl
test
mov
cmpsb
aam
popf
dec
outsb
or
xor
mov
nop
xor
mull
movsl
or
xchg
imul
xor
das
pop
in
jg
xor
test
cmpb
shr
scas
mov
push
lods
xor
sub
addb
ds
lods
or
sub
sub
es
dec
lods
push
fbld
arpl
int3
push
jbe
or
testl
inc
mov
mov
jmp
adc
fidivs
out
adcb
aas
mov
out
sub
inc
addb
cltd
outsl
cmp
bound
xchg
scas
and
or
dec
cmpb
dec
dec
out
add
inc
and
imul
test
stos
xchg
je
jecxz
adc
jo,pn
testl
push
inc
mov
std
lahf
pop
out
xorl
and
andb
lcall
lret
xor
pop
stos
std
sbbb
dec
mov
push
cld
xor
and
sub
or
and
push
push
stc
mov
cmp
inc
jnp
xor
cwtl
sbb
jae
add
icebp
add
jns
jle
or
or
fsts
and
sub
mov
fcomip
in
mov
lcall
xor
out
pop
mov
lret
xchg
out
in
or
hlt
gs
loope
mov
mov
lcall
push
lret
sbb
cld
cmp
push
test
stc
or
stc
cli
ss
inc
push
andnps
xchg
pusha
inc
mov
lahf
xchg
mov
addl
sub
mov
mov
jecxz
lret
cltd
add
hlt
jecxz
mov
movsb
fldl
mov
sub
outsl
push
dec
dec
daa
fsubrs
dec
pushf
add
push
lods
flds
xchg
cltd
sbb
cmp
inc
insl
and
pop
and
std
jle
cmp
lcall
add
cmp
mov
out
ret
adc
scas
dec
sub
ret
in
data16
stos
outsb
lcall
hlt
sub
lahf
gs
push
sbb
xchg
xor
pop
mov
xchg
bound
or
fmuls
cld
sub
mov
addb
lcall
xor
add
dec
ja
mov
pop
push
push
add
fs
cltd
shl
lods
aam
enter
idivl
dec
enter
loopne
hlt
sbb
jnp
das
roll
imul
bound
add
stos
mov
cmp
pop
cs
mov
sub
cmp
or
aaa
push
mov
in
and
dec
mov
jb
nop
rorb
lcall
lret
sub
dec
push
jge
adc
xor
sarb
jo
stos
ds
inc
sbb
and
lcall
xchg
ret
popa
in
pop
nop
mov
scas
pusha
adc
sbb
lahf
inc
xchg
sub
xor
jne
sub
xor
cmpb
dec
mov
lock
gs
jae
cmp
mov
xchg
cmc
fisubs
adc
lods
inc
inc
movsl
scas
sub
sub
lcall
inc
jae
mov
aas
movsb
stos
push
push
dec
dec
sbb
and
sub
lcall
shl
in
lea
ds
rcrl
mov
or
push
bound
mov
nop
movsl
jl
mov
jbe
leave
outsl
push
adc
xchg
mov
pop
rep
cmc
loop
aam
cs
jge
pop
jg
sahf
std
cltd
leave
dec
sar
das
jp
sub
and
ror
push
or
mov
cmc
inc
or
enter
add
lods
cmc
out
jg
adc
clc
and
xchg
mov
push
inc
push
sub
jecxz
std
clc
mov
dec
jbe
out
enter
jp
cli
push
and
push
mov
cwtl
sbb
mov
ljmp
fstl
mov
jle
insl
mov
inc
or
pop
push
idivl
movsl
imul
les
pushf
imul
add
ja
mov
lds
rcll
inc
cld
sbb
xchg
inc
outsb
movsb
scas
mov
dec
mov
cltd
cmp
mov
jns
lcall
sub
adc
xor
dec
jecxz
ret
mov
jae
pop
hlt
stc
add
and
mov
mov
mov
lods
add
sub
out
stc
dec
imul
mov
pop
jecxz
movsl
negl
ds
lcall
jl
loope
loop
enter
rolb
jns
sti
daa
fwait
dec
jns
std
dec
insb
aas
push
jecxz
jmp
std
outsl
xchg
dec
xor
insb
in
sub
in
cmpsb
in
sub
popl
hlt
ret
xchg
mov
xorb
mov
enter
xor
add
fldl
sahf
stos
sahf
aam
out
roll
pop
cld
mov
and
dec
jae
xor
pop
xchg
test
les
shld
inc
push
clc
sub
ret
mov
jg
outsl
shll
in
sbb
xor
jle
dec
pop
ret
mov
adcl
sbb
leave
inc
in
jp
and
jle
ja
loopne
cli
cmpsl
mov
pop
cmpsb
add
dec
insb
sub
ss
outsb
mov
imul
mov
push
ja
add
adcl
lcall
mov
mov
pop
mov
mov
xor
push
and
push
lret
push
dec
mov
mov
push
mov
rorl
sub
ret
and
sub
or
xor
or
adc
outsb
out
lods
loop
stos
cmp
jae
dec
mov
lahf
test
subb
clc
cmp
ss
mov
je
mov
pop
imulb
icebp
dec
jbe
mov
insb
cltd
adc
loop
loop
out
mov
nop
sbb
psubb
and
les
std
cmp
test
pop
in
movsl
sbb
cltd
sub
jae
cmp
mov
imul
adc
ljmp
mov
push
je
and
js
add
inc
xor
ja
adc
mov
jp
xlat
ds
jo
lods
test
add
xchg
xor
lret
sti
stos
add
int
dec
pop
push
aas
lock
dec
inc
add
shrb
repz
mov
pusha
jecxz
bnd
ret
mov
pop
call
popa
jo
inc
outsb
out
adc
in
enter
jle
dec
xchg
pop
add
stos
imul
ret
shll
sti
sub
out
call
lret
cmc
inc
sub
mov
in
add
adc
mov
cmc
or
rol
xchg
push
mov
mov
pop
pop
jle
out
pop
shrl
fisubrl
cmpsb
rcrb
int3
jmp
filds
push
add
rorl
mov
bound
out
push
sub
mov
lea
add
fdiv
into
aaa
out
mov
sahf
mov
cmp
xor
lea
cmp
fwait
add
ss
lcall
insb
js
ja
cltd
or
mov
int3
scas
repnz
sbb
jle
and
cltd
imul
in
fsubrp
and
out
cli
movsl
popf
into
pop
cltd
jb
loop
add
xchg
int
dec
in
push
test
ja
cltd
outsb
jl
xor
orb
aaa
lret
mov
nop
std
cmp
xchg
jge
and
pushf
mov
push
or
dec
add
in
dec
stc
fnstsw
pop
ret
imul
pop
loopne
sarl
stc
and
inc
addr16
out
pop
push
mov
ja
fldcw
push
imul
jnp
cmc
jle
icebp
or
mov
sub
lret
fdivp
sbb
popa
mov
ret
xchg
ds
loopne
and
mov
subb
mov
jecxz
les
and
xchg
mov
lds
dec
mov
lock
cmp
in
or
jg
push
xchg
shll
std
cmpl
fisttpll
mov
dec
movsw
lock
push
daa
lret
cmpsl
push
xchg
jae
daa
mov
mov
repnz
inc
aas
outsl
and
mov
mov
cltd
jne
xchg
mov
mov
and
shrb
ja
cltd
xor
loopne
daa
push
es
mov
test
out
pop
shrb
or
xor
call
leave
repnz
inc
or
pushf
jp
icebp
dec
or
movsl
mov
cltd
and
popf
sbb
mov
add
push
pop
sti
repz
js
sub
sbb
mov
daa
in
jge
insb
lret
xchg
sub
mov
inc
scas
enter
dec
sbbb
fcmovne
cmp
sti
mov
jecxz
push
mov
jae
in
adc
cmp
xchg
add
out
pop
pop
stc
sub
std
inc
or
mov
pop
daa
test
jge
or
std
jl
push
mov
jg
inc
xchg
iret
popa
fimull
sbbl
xchg
add
dec
and
sub
fdivl
jno
cli
cs
lock
inc
in
inc
cmpsl
inc
or
arpl
pusha
pop
push
mov
sar
jnp
leave
fists
cmp
cltd
repz
lods
mov
nop
cwtl
ret
mov
js
ret
das
xor
mov
outsb
add
fsubrl
jmp
mov
and
mov
adc
xor
add
stos
mov
test
and
repnz
mov
pop
repz
cmp
sub
cmp
and
cmp
jb
push
mov
cmp
or
sti
jmp
cmp
mov
xchg
and
add
les
int
dec
stos
lcallw
or
loopne
lods
jns
stos
pop
xor
cmp
push
stc
mov
out
bound
pusha
push
ds
ljmp
mov
dec
in
xorb
xor
mov
out
test
mov
lods
jmp
cmp
clc
sub
add
or
je
cltd
xor
jg
ljmp
aaa
rcr
jae
fsts
lea
add
or
and
xchg
pop
fstpt
das
ret
mov
and
outsl
test
mov
aaa
sar
rol
mov
pusha
ja
mov
mov
xchg
movsl
and
test
push
mov
call
mov
jbe
call
or
mov
cmpsb
dec
adcl
sub
outsl
aaa
mov
and
jae
add
mov
xchg
imul
repnz
fildll
or
and
popf
xchg
out
ljmp
mov
cltd
push
xor
pop
bound
lds
pop
cmpsb
lods
jle,pn
jbe
rcrl
jne
bnd
dec
cli
or
call
sbb
bound
ret
jg
fistl
push
push
repz
insl
rorl
inc
sarl
imul
movsb
adc
lock
adc
mov
stc
ret
xor
int3
sub
xor
inc
sti
ss
repz
xlat
mov
out
lcall
enter
fcompl
stos
dec
jecxz
mov
sbb
bound
cli
xor
xchg
je
idivl
sub
enter
mov
dec
mov
xchg
insb
inc
sahf
mov
push
cmpsl
fucom
mov
and
sahf
jb
jo
xchg
cwtl
stc
push
mov
test
xor
mov
jmp
adc
daa
jge
nop
or
es
inc
cmc
lock
cmp
testb
push
scas
out
xor
mov
enter
in
sub
lcall
fdivrs
or
imul
dec
dec
sarb
ja
add
lret
and
aaa
push
fcmovu
pop
out
xlat
jle
iret
lock
lods
je
cltd
not
push
cmp
dec
shll
lcall
cs
and
or
cltd
mov
add
test
out
and
fnstcw
mov
dec
das
jecxz
pop
xor
shll
ja
or
add
bound
dec
cmp
cltd
sub
mov
pop
sub
mul
jo
cs
sbb
inc
insb
out
pop
outsl
lahf
decl
stc
scas
sbb
dec
xchg
test
jbe
mov
adc
test
in
dec
pop
sbb
ja
call
dec
pop
lahf
int3
lcall
xor
int3
push
mov
mov
add
sub
scas
push
lret
dec
fsubp
jge
bound
es
add
inc
dec
lds
mov
push
sub
mov
movsl
mov
jns
mov
ja
lahf
and
adc
adc
or
pusha
daa
ljmp
mov
xchg
cs
inc
or
adc
repnz
pop
out
and
sbb
mov
push
les
dec
icebp
push
ds
pop
inc
pop
mov
cmp
arpl
mov
xor
cltd
jo
fs
add
repnz
int3
sub
je
or
inc
jmp
push
xor
cmpsl
xchg
mov
int
dec
insb
data16
xor
mul
es
je
xlat
inc
ror
enter
xor
xchg
pop
loopne
je
lds
ja
or
xor
lods
xchg
cmp
sub
les
sub
sar
cwtl
jl
imul
push
popf
ficoml
nop
jo
cmpsb
ds
jae
into
mov
cld
pop
sbb
ret
ss
jmp
lcall
push
movsb
xor
sti
cmp
cmc
sbb
arpl
fildll
jge
fnstcw
clc
pop
ja
xchg
pop
xchg
adc
ja,pn
cwtl
and
imul
mov
push
imul
enter
mov
leave
pop
pop
shrb
mov
mov
and
sbb
jp
pop
out
and
mov
mov
mov
movsb
call
push
imul
negl
mov
insb
pusha
xor
push
jb
xchg
cmc
imul
movsl
cmp
jp
sahf
test
jae
mov
adc
in
cli
in
ret
ret
or
cmpb
or
aaa
loop
xchg
push
xor
lods
insb
add
mov
add
imul
or
pop
cmp
stc
jle
xor
mov
imul
dec
pop
shlb
faddl
sub
add
lock
and
insl
jo
mov
add
jl
dec
ja
lret
mov
fnstenv
sbb
addl
jb
ficomps
ja
dec
push
fs
sbbl
cli
push
sbb
int3
or
push
lods
mov
mov
and
xchg
mov
outsb
jbe
jno
pushf
mov
lret
ljmp
pop
shlb
pusha
xor
outsb
xor
scas
ret
dec
push
jno
mov
cltd
dec
icebp
into
int
imul
add
scas
call
cltd
test
dec
sbb
dec
mov
or
daa
mov
jmp
aas
cltd
pop
dec
inc
mov
ja
xchg
dec
jo
lcall
mov
xorb
sbb
mov
lcall
xor
xchg
pop
ss
stc
mov
fcmovnbe
xor
push
out
dec
cmp
sub
out
or
out
pop
inc
std
pop
jne
repz
in
fsub
pop
add
lahf
scas
dec
push
push
mov
jae
jb
xchg
pop
addr16
rorb
cmp
rclb
jle
repnz
add
or
mov
js
imul
lods
sub
push
jb
insb
stc
out
push
inc
fidivl
sbb
pop
icebp
jp
out
movsl
jns
aam
shrb
mov
aad
sub
mov
jecxz
cmpsl
fists
sti
inc
mov
inc
inc
jnp
roll
test
push
jg
sub
and
subb
enter
jno
jne
push
dec
add
lret
pop
inc
sub
cmpsb
adc
ret
jae
insb
jbe
mov
hlt
inc
add
and
mov
add
lods
rolb
out
push
iret
orb
hlt
cmp
cmpb
push
xor
fs
sub
adc
sbbb
jmp
ja
cmpsb
ja
repnz
test
mov
mov
mov
mov
pop
mov
push
enter
mov
mov
add
dec
scas
subl
inc
int
push
mov
mov
in
and
or
inc
jnp
fucomp
cmpb
into
sub
mov
adcb
sti
dec
andb
push
jle
cmpsl
add
sub
cmpsb
mov
arpl
mov
jl
pop
bound
imul
pop
rorl
inc
mov
push
push
scas
cmp
in
fs
aas
je
ret
jo
mov
xorb
out
sar
in
add
cld
xchg
btr
adc
imull
pop
fs
xchg
incl
aas
out
cmp
in
fistpl
in
jnp
sub
or
sub
out
mov
lea
test
stos
lods
daa
xchg
cmp
in
mov
mov
mov
push
orb
xchg
out
stos
aad
push
fs
and
fucomp
cmpb
ret
sbb
push
add
xchg
fildll
aaa
mov
mov
inc
or
push
push
cmp
sbb
adc
mov
outsb
push
mov
push
xchg
not
pusha
addb
inc
hlt
and
leave
dec
inc
mov
xchg
mov
fsubs
cmpsb
lods
dec
jg
lea
jp
pop
push
and
pop
arpl
sub
test
jnp
pop
cmpsl
test
lret
and
loop
mov
mov
push
pushf
mov
out
lea
shlb
enter
call
stc
lock
mov
or
mov
aam
mov
xchg
jge
ret
nop
add
ret
jp
sub
pop
test
scas
cmc
push
pushf
out
fs
inc
lret
fnstenv
and
mov
mov
in
inc
push
jmp
mov
mov
sbb
aaa
mov
or
lea
adcb
filds
int3
pop
das
popf
outsl
insb
mov
ja
and
and
mov
aam
xor
dec
or
xchg
jnp
inc
icebp
cmpb
shrb
mov
add
xor
xor
cmp
leavew
ret
cli
adc
adcb
pop
adc
jne
sub
xchg
or
pop
jl
and
fdivrs
sbbb
or
pop
je
adcb
inc
mov
test
pop
lock
add
arpl
jg
rclb
xor
insb
add
push
mov
lcall
stc
es
andb
or
fs
outsl
push
add
mov
enter
outsb
ffreep
jae
adc
xchg
xorb
jns
ja
fs
mov
cmp
lret
dec
sbb
fcmovbe
dec
add
pop
pop
jnp
es
lret
xchg
loop
and
dec
push
hlt
sbb
adc
sub
lret
dec
addb
movsl
inc
andb
filds
loope
sti
imul
insl
inc
lock
orb
sub
das
fldcw
outsl
in
push
cmp
jae
push
lods
pop
movsl
add
aam
lahf
subb
mov
adcb
cmp
xchg
daa
subb
add
sti
stos
xor
mov
pop
and
icebp
clc
cmp
xor
sarb
stos
inc
sbbb
and
sub
push
adc
cmc
sbbb
fbld
sub
fdiv
push
je
inc
into
mov
mov
add
loop
mov
sub
inc
cmpsl
popf
cld
daa
pop
andb
inc
xchg
xor
jmp
dec
mov
push
loop
jae
mov
xchg
mov
or
addl
inc
xor
sbb
rcr
xlat
je
sub
loop
push
mov
mov
mov
ret
push
fiaddl
xor
test
push
xorl
into
bound
adc
call
ret
cmp
rcrb
xor
xchg
sbbb
scas
sbbb
popf
ljmp
jmp
lcall
inc
gs
add
cmp
movb
ds
xchg
inc
pop
jecxz
in
std
or
movsb
and
and
js
sahf
jmp
cld
sub
and
ret
dec
imul
dec
es
mov
rcrl
adcb
push
dec
mov
out
fmull
testl
pop
addl
lcall
jg
cli
outsl
addl
fwait
jmp
lret
movsl
mov
jl
js
and
add
pop
repz
or
lret
lret
jnp
faddl
pop
and
test
addb
ret
dec
aad
lea
out
pop
fldl2t
xchg
mov
loop
sub
bnd
xchg
fdivl
sub
cmp
sbbl
cli
scas
out
andb
or
adc
xor
xor
fstps
adc
addb
dec
mov
test
gs
sti
inc
and
xchg
mov
sbbb
and
mov
or
stc
push
fildll
inc
adc
sarl
cli
test
repnz
and
xor
pop
lods
ja
cmc
and
ja
or
negl
sbbb
dec
flds
pusha
lret
jge
push
mov
sbb
xchg
jecxz
mov
adc
add
sub
xchg
mov
xchg
rcr
fstps
shlb
mov
cld
cmc
mov
aad
imul
addr16
lods
nop
addb
pop
xor
loop
pop
sub
test
in
je
adc
mul
cmp
push
call
pop
cmp
adcl
xor
cmp
adc
jmp
insl
or
test
mov
mov
pushf
andb
xchg
mov
stc
cmp
rorb
mov
mov
adc
shll
lret
adc
push
lcall
jae
add
mov
aas
sbb
ret
or
jne
data16
xor
sub
rorb
mul
mov
jo
imul
or
or
xor
cmp
mov
aam
and
and
add
mov
mov
mov
jg
gs
cmp
lret
mov
mov
fisubs
andb
cmp
imul
cltd
test
cli
out
pop
jo
adc
jge
insl
loop
repz
lahf
push
adcb
js
testb
adcb
jne
inc
icebp
sub
loopne
lcall
pop
push
arpl
subb
call
cmp
repz
mov
xor
fbstp
pop
jle
sub
je
imul
pop
sbbl
subl
xor
mov
enter
int3
ljmp
lcall
ja
push
sub
xchg
mov
sbb
loopne
test
adc
les
jl
fisubs
insb
pop
ret
jecxz
pusha
loop
xchg
cwtl
cmp
pop
leave
cmpb
js
dec
push
addb
cmp
or
int3
out
mov
or
jp
into
or
xor
inc
mov
xorb
aam
sub
adc
es
xor
ret
jae
sarl
push
lret
pop
je
jae
enter
add
xor
rorl
insl
cli
inc
mov
pop
test
cmpsl
fiadds
fwait
inc
inc
xchg
andb
mov
sbbb
fmul
xchg
xor
lret
pop
mov
outsb
call
mov
xchg
movb
push
push
outsl
cmpb
mov
flds
test
in
jp
and
adc
das
xchg
scas
dec
adcb
aad
lock
pusha
inc
into
xor
sbbb
xor
pop
cmpsl
mov
push
pop
inc
xchg
or
pop
or
fiadds
addb
and
mov
xor
xor
adc
cmpb
inc
shrb
or
stos
loopne
jno
add
mov
orb
pusha
iret
cmp
inc
call
orb
mov
pusha
xorb
imul
orb
fadds
xchg
dec
pushf
adcb
mov
sub
xor
testb
xchg
pop
pop
outsl
lods
sub
mov
and
cmp
addl
inc
jae
ljmp
pusha
test
or
jno
jo
shrl
daa
and
jbe
fs
adc
jo
mov
andb
cmp
push
add
adc
lea
inc
hlt
jecxz
inc
lret
mov
mov
ficompl
xorb
mull
imul
stos
loop
mov
sbb
imul
shlb
mov
js
imul
xchg
test
xlat
sub
roll
jae
xchg
add
push
fdiv
push
fiaddl
ficompl
sbb
imul
rorb
xchg
push
jns
aad
xor
xor
jp
and
adc
sbb
xchg
and
scas
sub
dec
push
xchg
jb
xor
jae
mov
imull
inc
mov
lcall
loopne
daa
jnp
insb
jp
loopne
mov
mov
mov
xchg
enter
xor
xchg
not
xor
hlt
dec
mov
loope
xor
frstor
adc
push
push
pusha
subl
xor
sub
jecxz
mov
add
or
les
xchg
push
sub
sub
cmp
enter
cwtl
pop
outsl
test
or
aad
mov
stos
push
mov
outsb
cmc
incb
pop
loop
ja
sub
std
lea
push
jns
lcall
xor
shl
jge
add
jnp
int
or
jo
push
daa
jp
nop
sbb
sar
scas
cmc
aas
lods
les
das
lret
mov
jbe
cltd
rorl
xor
dec
fnstenv
lcall
xacquire
out
adcb
jmp
sbb
sub
pop
pop
scas
sub
jg
jg
xorb
cltd
jmp
loopne
adc
lods
in
pop
push
cmc
addb
das
dec
pop
es
or
mov
insl
sti
jp
sbb
out
roll
je
xor
insb
xchg
sbb
bound
cmp
and
nop
sbb
andl
sub
imul
fcmovnb
inc
repnz
pop
cmp
inc
insb
jle
orb
cli
mov
int
jl
test
cmpb
inc
push
cwtl
dec
pusha
int3
adc
shr
fistpll
jecxz
or
inc
add
arpl
dec
enter
xor
lods
xchg
stos
xchg
mov
enter
mov
sub
jg
xor
inc
ja
stc
shrd
cwtl
es
dec
ds
clc
pop
in
negl
bound
xchg
adc
lock
add
in
mov
jl
sub
add
rolb
xchg
sbb
or
imul
push
sub
repnz
jb
jne
enter
cltd
xor
and
test
movl
test
test
leave
sbb
sti
sbb
insb
addr16
js
inc
bound
out
cmp
push
sti
xor
fcomp
lcall
jmp
cli
jns
add
in
data16
pop
push
xor
lcall
cli
jae
cmp
mov
pop
pop
filds
push
push
dec
arpl
lcall
jne
test
cltd
pop
mov
mov
jns
jmp
outsb
sbb
out
pop
inc
jb
adc
push
fwait
pop
fs
xchg
ficomps
imul
test
sahf
jbe
mov
mov
inc
push
dec
lcall
cmpsb
scas
sub
bound
and
js
in
xor
jo
fcmovb
xchg
mov
inc
aas
pop
xchg
push
mov
cmp
out
clc
jecxz
in
inc
sub
xor
cli
sbb
mov
shr
scas
dec
jle
ljmp
cmpsb
pop
push
pop
mov
fisubs
inc
mov
xor
adc
in
bsr
outsb
cltd
fstps
mov
ret
push
pop
mov
imul
dec
jo
adc
stos
or
sub
jno
push
add
outsb
push
cltd
imul
incl
sbb
and
pop
push
jmp
cld
ja
mov
int
arpl
jp
cltd
dec
divb
stc
fadd
mov
push
std
sbb
inc
jle
pop
das
sub
sbb
cli
sbb
or
cltd
call
xor
stc
inc
out
clc
out
loop
std
pop
lea
cmp
cltd
xlat
mov
jmp
mov
mov
mov
mov
test
cli
jg
sbb
stc
jno
sbb
into
leave
add
fstpl
jmp
ret
add
movsb
and
xor
mov
mov
test
stc
mov
or
sub
sub
cmp
rcrl
cmp
pusha
dec
testl
mov
inc
orb
cmpsb
cmp
les
xlat
cmp
jl
lcall
jmp
or
pop
inc
jae
push
xchg
cmp
out
fcoms
mov
daa
mov
sbb
stc
aas
adcl
insb
repnz
lock
push
lds
cmp
mov
mov
pop
pop
mov
sub
jle
push
pop
cltd
lret
adc
jp
jbe
jns
std
push
xor
rorl
ljmp
jp
mov
das
shlb
sbb
push
sti
fsubs
mov
fdivrl
lods
lcall
cmp
roll
inc
fiadds
bound
bound
insb
mov
xchg
and
mov
jne
pop
xchg
jns
jbe
scas
sub
pop
mov
mov
jnp
mov
out
adc
and
adc
pop
aam
sub
push
xor
ret
add
stos
cltd
mov
xorb
jecxz
lcall
ret
out
shlb
push
or
mov
cltd
add
nop
lret
outsb
out
inc
leave
gs
xchg
sub
add
cltd
sbb
jae
inc
adc
stc
repnz
ljmp
pop
stc
jmp
notb
lods
push
pop
lret
adc
popa
add
hlt
jmp
in
or
inc
pop
mov
jo
fidivs
sti
xor
lcall
pop
test
push
in
int
push
lcall
aaa
lea
stc
repnz
mov
jp
in
aas
mov
mov
test
xchg
push
lcall
lcall
and
popf
xchg
test
loope
pop
cmp
into
mov
ret
jns
mov
ret
loope
pop
fsubp
mov
daa
add
bound
and
les
mov
lea
lock
add
push
into
pop
outsb
push
ss
test
dec
dec
incl
addr16
or
jmp
lret
sti
push
cmpsb
clc
roll
push
outsb
addb
mov
sbb
adc
cmpl
jno
add
test
sbbb
and
push
cmp
lods
or
shll
dec
or
lahf
push
xor
dec
sahf
sub
rol
arpl
arpl
jb
xchg
int3
bound
pop
inc
iret
in
mov
sub
and
or
rol
push
mov
lds
pop
push
xchg
and
push
cwtl
ret
addps
adc
cmp
adc
mov
out
insl
xchg
add
xorl
aaa
xchg
fwait
cmp
insl
adcb
mov
dec
mov
adc
aad
sbbl
dec
jns
sub
pop
lahf
aad
xchg
addb
cs
or
hlt
sbbb
jle
adc
in
into
cmpsb
lock
push
xchg
pop
dec
cmp
adc
scas
mov
adc
push
cmpb
lds
psrad
scas
jecxz
repz
xorb
out
pop
push
dec
mov
and
cmp
add
pop
dec
jbe
aad
addb
xchg
jp
jge
andb
cmp
test
pmaddwd
xorl
roll
movsl
fldcw
jecxz
test
xor
out
or
sbb
icebp
dec
jg
jge
push
push
pop
roll
shl
pop
adcb
mov
or
loop
mov
jns
adcb
cwtl
in
mov
mov
dec
test
outsl
out
pop
fmull
js
gs
loope
push
in
arpl
xlat
and
outsb
adc
mov
daa
out
xchg
orb
ret
sahf
mov
lahf
sub
in
loopne
dec
sbb
add
clc
xorb
mov
pop
icebp
jae
sub
cvtdq2ps
pop
xor
push
add
mov
or
lods
subb
mov
jbe
mov
sbb
pop
movsb
rolb
les
jnp
in
std
enter
inc
shlb
jne
push
sub
and
ret
ljmp
and
xor
cmp
cli
xchg
sbb
cmpb
insl
lods
push
dec
cmpb
inc
enter
andb
pop
lods
cmp
outsl
stc
sub
jo
inc
inc
leave
and
std
ljmp
loopne
cmpsl
test
andb
push
fildl
inc
lods
inc
pushw
xorb
subb
cld
mov
es
test
or
add
sub
add
and
mov
movl
subb
dec
push
or
sub
mov
jbe
aad
repnz
jne
or
pop
orb
mov
adc
loop
adc
cmpb
pop
jle
imul
xchg
in
mov
in
xchg
dec
pop
out
or
roll
xchg
mov
loopne
loope
ss
out
nop
addb
movsl
sub
jle
icebp
pop
cmp
xchg
push
insb
aam
sub
or
or
push
faddl
adc
hlt
inc
or
scas
inc
faddl
push
jp
push
xor
push
jnp
push
mov
mov
or
xchg
cmpb
push
sbb
test
mov
ficoml
pop
fidivs
mov
jo
xor
cmp
into
push
aaa
das
jns
mov
or
and
adc
or
test
push
xor
mov
lahf
cmpb
jecxz
dec
gs
add
out
sub
rorl
push
mov
mov
sbb
loop
hlt
push
inc
shl
sbb
psubq
push
ja
or
pop
shlb
bound
test
fwait
ja
dec
iret
cmc
cmp
adc
xor
pop
ret
loop
mov
mov
in
fwait
and
jnp
data16
ret
xor
push
add
stos
adc
adc
jbe
ljmp
inc
push
push
inc
mov
xor
test
addb
push
jg
ds
inc
pop
es
adcb
nop
mov
jb
cmp
insl
out
int
lea
je
test
sub
repnz
orb
inc
aad
test
push
push
outsb
shl
mov
enter
cmpb
and
cltd
mov
sbbb
cmp
cs
inc
sbb
add
push
pop
pop
xchg
jge
lock
jg
add
mov
sub
or
mov
jo
mov
pop
jge
je
data16
jge
or
lock
cmp
or
inc
aam
mov
imul
into
stos
sbb
lcall
xor
movsb
adc
jae
popf
dec
and
add
jg
dec
fcomps
jle
jns
pop
bound
jbe
inc
xor
fdivrl
addb
sub
ja
inc
xlat
and
sub
mov
andb
xchg
das
xor
add
iret
mov
cmp
push
cmp
mov
mov
jo
into
ds
and
call
jb
fisttpl
pop
inc
add
dec
jp
lret
push
pop
jg
add
rolb
mov
and
les
cmp
inc
jecxz
faddl
adc
fdivs
jle
jl
and
push
xchg
aam
mov
jns
mov
cmc
cmp
lret
in
jbe
andb
adc
pop
pushw
add
loope
inc
mov
adc
aaa
sub
fwait
sahf
enter
cld
xchg
mov
mov
mov
pop
loope
mov
bound
inc
pop
ja
jl
push
jle
xchg
and
call
mov
mov
inc
into
sub
je
loop
lret
mov
jle
in
mov
mov
or
add
daa
clc
add
sbb
icebp
jg
cmp
jmp
fisubs
and
das
adcb
sti
and
test
dec
push
pop
pop
jns
push
push
js
subb
call
into
outsb
sahf
inc
pop
les
jae
mov
xorb
imul
sbb
push
sbbb
mov
mov
sarl
mov
jp
test
xchg
adc
andb
mov
adcl
bound
xor
push
push
jnp
sbb
xor
andb
call
jp
xchg
pop
outsb
xchg
mov
loopne
and
mov
sub
mov
aad
faddl
popf
lock
pop
arpl
vpunpckldq
adc
cwtl
std
cmc
insl
push
loope
inc
jnp
addr16
or
jg
vmread
popf
add
incl
mov
mov
je
mov
rep
out
sti
sbb
sbb
ja
cli
pop
fwait
leave
dec
ja
outsl
add
xchg
lret
sbb
mov
mov
or
add
pushf
mov
addb
xor
or
jg
mov
shlb
xor
inc
lock
je
jns
lahf
adc
add
pop
adcb
and
push
fdiv
mov
adc
subb
shlb
xor
xchg
cmc
and
je
dec
pop
inc
loop
or
adc
repnz
aam
or
push
or
icebp
jns
mov
push
das
stos
jg
adcl
ss
insl
cmc
fidivrl
mov
int
xor
mov
lds
pop
sbbb
mov
andb
jp
cmpsb
jmp
dec
push
sbbb
mov
lret
sti
adcb
mov
clc
mov
les
jmp
lds
int3
pop
je
push
jno
je
ret
sbb
push
mov
cmpsl
sbb
or
cld
sbb
adc
into
cmp
jg
ret
sbb
lcall
mov
daa
cmp
adc
jnp
and
aad
pop
push
test
mov
cmpb
roll
lods
and
mov
nop
out
lret
xor
sbb
cmp
xor
repz
adc
push
push
into
and
mov
xchg
je
adc
or
cli
stos
movsb
pop
push
adc
std
pop
adc
mov
mov
and
xchg
dec
std
push
stos
or
xchg
push
scas
imul
pushf
test
adc
loop
out
cmp
imul
adc
orb
jno
jnp
shl
jg
and
add
xchg
or
movsl
xchg
call
imul
jnp
inc
or
sub
test
sbb
mov
fnstcw
push
xorl
scas
mov
add
mov
lret
and
dec
xchg
es
cmp
pop
subb
addr16
subb
sub
mov
or
jns
lahf
mov
inc
hlt
jle
call
mov
icebp
jb
int3
or
adc
idivl
inc
and
sbb
and
xor
cmp
jge
cmc
push
dec
jmp
je
adc
cmp
jg
or
mov
ret
mov
je
jno
dec
outsl
inc
add
mov
adcb
xchg
popf
aas
in
nop
jge
sti
cmpsb
cmp
jnp
jnp
jl
mov
decl
test
jne
ficoml
xchg
inc
scas
subb
pusha
push
mov
sarl
fwait
call
and
mov
ljmp
xlat
divl
push
dec
jg
add
mov
or
mov
divl
and
cmpsl
pop
sbb
add
or
mov
ja
mov
xchg
push
mov
and
cltd
subb
cmp
outsl
xor
pop
pop
push
ret
in
jbe
xchg
flds
lahf
jae
sub
or
out
cmp
fs
dec
ret
movsb
ja
pop
or
pop
jbe
xor
inc
cs
sarb
in
sbb
sub
jns
data16
pop
sub
or
shl
xorb
arpl
into
sub
ret
orb
xor
andb
jb
movsl
ja
push
andb
or
dec
add
andb
fistpll
sub
notb
mov
sahf
inc
push
in
scas
into
orb
shll
inc
jle
cli
je
fidivrs
jp
add
dec
ret
xchg
cmp
dec
call
inc
inc
and
xlat
mov
jnp
imul
stos
push
arpl
bound
ljmp
in
push
std
sbb
jbe
faddl
subb
cmp
jg
scas
movsb
xchg
mov
inc
dec
xchg
add
mov
lock
loop
xchg
sti
jo
in
mov
lea
mov
sub
cltd
std
xchg
mov
rolb
sub
inc
jae
outsb
in
pop
add
in
mov
and
cli
xor
stos
cltd
mov
mov
add
sub
and
hlt
mov
sbb
lcall
add
cltd
xchg
lock
jl
xchg
mov
stc
xchg
xor
loop
shrb
jbe
repnz
add
stc
jge
iret
add
sbb
sub
repnz
cmpsb
les
fidivl
push
into
pop
cld
add
mov
fwait
cli
imul
les
sub
jmp
inc
mov
test
in
stos
mov
cltd
push
adc
lock
sti
jo
mov
mov
lret
xor
mov
mov
inc
adc
popf
insb
cmpl
inc
jmp
std
cmpsb
pop
je
add
jge
pushf
cwtl
jns
xchg
cltd
or
imul
and
push
lret
test
cmc
inc
sbb
inc
mov
pop
enter
movsl
cmp
ss
cmp
and
loop
jae
mull
dec
mov
movsl
sbb
mov
jns
sub
test
jge
rcrb
sub
push
aaa
xchg
popa
or
jne
aas
add
mov
fdivrs
jno
les
cmpsl
jns
cltd
adc
test
sub
pop
hlt
mov
pop
xor
out
idiv
mov
out
and
and
dec
cmp
xchg
loop
in
jae
into
jl
insl
in
and
sbb
push
sub
sub
mov
cmp
pushw
lcall
push
and
roll
into
sub
leave
inc
adc
ret
pop
mov
or
and
aam
aaa
cmc
inc
inc
mov
mov
leave
pop
add
ret
push
fcmovu
push
add
inc
nop
mov
jl
ja
push
sbb
xchg
dec
jae
push
dec
leave
sti
pop
iret
jo
mov
mov
mov
inc
roll
mov
rcll
test
lcall
orb
pop
sti
loop
in
lods
xor
push
pop
iret
or
add
aad
jns
add
push
push
outsl
sub
pop
cld
add
sahf
mov
lret
stos
jge
sub
jbe
mov
xor
int3
sbb
lods
jge
fisttps
fwait
cli
or
fmuls
fisubrs
push
loope
lock
rcr
adc
dec
cltd
add
sti
cmpsl
mov
mov
jns
mov
mov
pusha
dec
fcmovbe
cmc
in
sub
std
or
es
mov
cltd
push
ror
dec
es
jmp
pushf
ds
insb
sbb
rolb
inc
subl
xchg
inc
shrl
imul
mov
repz
subl
jb
dec
mov
or
cli
outsl
add
pop
mov
dec
int
fstl
push
out
mov
pushf
aaa
sub
sbb
pop
aam
push
loop
mov
leave
xchg
inc
fldt
cli
ret
repnz
cmpl
das
mov
lcall
mov
jo
lahf
jp
shrb
sbb
fdivs
jb
push
pop
bound
add
imul
push
out
cmp
pushfw
test
inc
test
cmp
stc
es
movsl
push
adc
sbb
push
cmp
addb
and
sar
cmpsb
xchg
mov
hlt
popl
dec
loopne
cmp
outsl
inc
call
cmpsl
jge
dec
jnp
aad
in
jg
xchg
hlt
js
clc
mov
scas
jnp
cltd
in
imul
sub
cmp
and
into
and
ja
adc
adc
bound
ja
fcomip
dec
cmc
jge
mov
mov
jno
clc
mov
xchg
and
lds
setnp
mov
jns
ret
push
dec
xchg
pop
test
cmp
sbb
loope
int3
push
test
insb
push
test
pop
jne
xchg
cwtl
dec
loopne
test
dec
sbb
daa
and
insb
int
jle
push
sbb
and
xchg
mov
jge
dec
add
enter
loop
mov
cmp
imul
pop
inc
sub
ss
jl
push
mov
fcomps
das
cmc
push
dec
sbb
and
add
cltd
lods
dec
loope
pop
mov
outsl
stc
mov
jns
roll
sbb
mov
or
jbe
mov
aaa
das
cli
mov
in
xchg
add
cmc
inc
cmp
push
cmpl
imul
inc
jmp
sub
jb
call
and
or
xor
pop
mov
inc
js
enter
push
stos
cmp
ret
sub
sti
jle
popl
jb
out
dec
mov
ret
shrl
fidivrs
dec
ljmp
repnz
sbb
mov
lcall
cmpsb
out
push
jge
dec
fdivr
pop
in
xchg
adc
mov
adc
mov
jns
std
mov
icebp
adc
sahf
les
lret
je
adc
xchg
jb
xchg
push
daa
das
cmpsb
sarl
pop
and
xchg
je
ja
cld
inc
cltd
push
cld
int
and
inc
cmp
cmp
scas
jle
xchg
cmpsl
int
push
les
pop
sbb
mov
jle
in
xor
popf
pop
cltd
adc
and
out
mov
std
cltd
and
xor
add
push
repnz
push
test
xor
cmp
mov
xchg
inc
lods
imul
stos
cld
bnd
aas
push
ljmp
negl
push
mov
xorl
and
xchg
jge
push
inc
fimull
jbe
jg
rolb
sbb
push
leave
and
fwait
mov
repnz
and
stc
std
sbb
std
jne
pop
test
ret
rclb
mov
stc
xchg
push
cltd
push
cld
mov
into
jmp
cltd
test
sbbb
in
rolb
add
cmp
cltd
push
mov
jge
mov
aad
stc
fists
cmp
test
add
nop
sub
lods
sub
orb
cmpb
mov
fs
dec
inc
leave
cmp
loop
adc
xchg
bound
and
andl
fcmovb
push
jns
mov
inc
mov
jl
and
scas
sbb
sub
lret
in
add
lods
or
push
mov
repnz
sbb
mov
sub
gs
and
xorl
in
jnp
ret
mov
ljmp
pusha
xlat
cmp
pop
add
pushf
inc
notb
inc
pop
pop
adcb
je
inc
popa
movsb
cmpb
scas
or
cmp
mov
ret
fnstcw
popl
ds
repz
lcall
jns
pop
mov
or
dec
cmc
cmp
mov
and
mov
mulb
adc
mov
cmp
andb
or
adc
jg
or
or
sub
popf
or
pop
cmpb
mov
cmpb
and
xchg
push
fwait
or
push
lahf
leave
test
jge
inc
sbb
call
aas
loop
push
das
lret
dec
mov
lods
and
shl
mov
inc
xor
adcb
lods
sbb
orl
js
sub
in
fs
push
dec
subb
movsl
sbb
mov
lret
rorb
or
xchg
ljmp
push
and
mov
es
ljmp
pop
cmp
stos
dec
jge
add
jg
sbb
das
jg
mov
stos
push
andl
xchg
ja
mov
mov
push
ss
subb
jmp
mov
jle
xor
jnp
mov
stc
popa
cli
rclb
int3
fsubr
push
repz
cmp
xchg
xchg
addr16
mov
pop
fwait
nop
test
pop
mov
sbbb
icebp
fstp
dec
call
out
cmp
lods
jl
add
or
popf
aad
push
les
addb
popl
dec
ljmp
lahf
or
roll
andl
sbbb
lods
jmp
test
addb
xor
xchg
andb
leave
xlat
dec
arpl
loop
push
add
in
pop
xchg
addb
ds
sbb
inc
orb
iret
cmp
cmp
jae
fstpt
sub
add
lods
adcb
arpl
subb
jbe
mov
cmp
push
or
clc
dec
jl
sub
mov
add
fildl
jns
mov
je
push
test
int
jp
cltd
pop
loopne
xor
fisubrl
pop
std
aam
shrb
aas
mull
lret
inc
jp
sti
mov
test
repnz
mov
sub
xchg
jmp
stos
push
in
mov
mov
dec
and
fs
mov
test
pop
mov
push
dec
mov
cwtl
push
push
sub
test
mov
les
ret
jp
enter
insb
add
mov
test
mov
bound
fs
jmp
pop
mov
ret
subb
mov
xchg
fs
orb
sahf
jle
sbb
add
ret
xor
dec
scas
andb
scas
sub
and
lds
fidivrl
lea
xchg
cwtl
daa
xchg
or
sahf
adc
inc
test
cmp
mov
andb
jle
sbb
out
mov
sbbl
cld
mov
test
pop
push
cmpsl
jae
inc
stc
sbb
jl
andb
xor
lods
rol
mov
dec
movsl
js
lret
decl
pop
andb
add
addb
ljmp
push
cs
popa
xchg
adc
jge
shll
mov
lahf
add
pop
outsb
imul
decb
cmp
daa
mov
fs
mov
andb
adc
pop
push
pop
addl
xchg
jnp
stos
fisttpl
cmpl
jns
lds
xor
in
and
sub
xchg
testl
repz
jl
jb
aad
fisubrl
add
scas
pop
dec
jne
xchg
in
push
mov
and
pop
dec
mov
lods
cmp
add
sbb
jae
ss
ds
int
or
sub
inc
aas
aaa
nop
pop
pop
mov
filds
ret
cmp
xchg
cmpsb
sarb
aaa
testb
mov
or
cmovns
or
or
adc
scas
xor
js
cmpsl
inc
cmpl
aaa
cli
ret
and
outsl
pop
push
cmpb
loope
xchg
sbb
out
test
and
out
mov
icebp
cmpb
or
dec
add
addb
pop
div
xor
xorb
adc
mov
movl
or
stc
xchg
je
dec
dec
jecxz
rcrb
cmpb
xor
pop
orl
dec
jl
gs
mov
ret
in
jp
xor
shll
popa
loop
pop
or
incl
ja
out
mov
mov
and
mov
sub
shl
xor
and
push
mov
push
cwtl
outsl
in
pop
dec
xchg
data16
lcall
iret
stos
sarb
inc
sub
push
adc
sub
pop
sub
cli
xor
shlb
orl
cmpb
and
mov
adc
stc
xor
xor
push
inc
fisttpl
sub
ds
jmp
xchg
gs
loop
mov
stos
xor
outsl
xchg
lea
sub
ja
cli
pcmpgtw
jae
mov
push
push
andl
and
fldt
add
outsb
cmpsl
in
rcll
sarb
fiadds
adc
std
dec
fsubrl
mov
mov
cmp
inc
mov
lret
push
mov
mov
addb
mov
into
stc
push
fwait
inc
pusha
addl
lods
hlt
jnp
jne
pop
fisttps
mov
and
repnz
and
stc
inc
ja
adc
dec
xchg
dec
cwtl
xchg
je
rcrl
push
cmc
notb
pop
andb
jmp
nop
dec
je
aam
cs
sub
shrl
lock
xchg
pop
add
divb
fists
jns
mov
bound
xor
lret
subb
add
subb
in
push
adc
dec
les
mov
xchg
lods
ja
leave
push
sbb
sbb
add
lcall
stos
push
pop
iret
pop
dec
arpl
ret
jnp
sbb
mov
arpl
stos
mov
adc
sub
daa
movsl
pop
je
faddl
jb
mov
subb
scas
jne
jl
inc
jae
movb
mov
mov
testl
sbbl
lcall
out
add
sub
push
add
mov
movb
int
subb
lods
cmpsl
nop
sbb
sbb
xchg
xchg
and
sahf
daa
popa
xlat
stos
andb
mov
pop
and
mov
andb
nop
ss
stc
jecxz
dec
sub
add
insb
lret
pop
loop
subb
sarb
ret
cli
xchg
arpl
int3
addb
sarl
jmp
pusha
jg
or
mov
sarl
cld
fimull
movsb
addb
jae
fs
add
notl
lods
add
mov
popa
sarl
loop
in
add
dec
jb
js
fwait
jg
mov
add
imul
mov
lods
insb
or
mov
xor
xchg
jbe
in
test
call
cmp
das
inc
dec
repz
pusha
push
mov
int
outsb
mov
nop
cli
je
mov
popf
repz
jp
mov
lahf
adcb
out
sbb
test
movl
sbbb
into
cld
dec
bound
pop
jp
pop
xorl
push
inc
ret
dec
push
outsb
adcb
idivl
xor
push
lea
jne
sbbb
dec
lods
inc
mov
andb
push
mov
repz
xor
pushf
adc
ljmp
mov
gs
push
repnz
inc
push
dec
ret
sub
add
fnstcw
pop
or
xchg
pop
xor
subb
push
shll
mov
cmp
push
cmp
addb
dec
js
cmc
push
subb
data16
incb
ds
xchg
mov
or
push
sub
sub
xchg
ret
jo
sbbb
inc
outsb
cld
xchg
lret
orb
orb
enter
cmp
xchg
out
mov
and
popa
adc
filds
cmp
lret
and
sti
mov
pop
outsl
cwtl
or
push
jle
xor
lahf
popa
mov
adc
int3
xor
sti
cmp
pusha
pop
xchg
mov
and
cltd
adcl
cmp
incl
in
icebp
or
jg
xlat
cmovno
pop
sbbb
in
hlt
testb
mov
fucomi
jg
sbb
aas
orl
sahf
xchg
loopne
and
rclb
int
mov
xor
roll
push
sbb
add
pop
xor
xorb
xorb
xor
adc
lcall
xchg
jecxz
pop
sub
mov
test
mov
test
xchg
lcall
add
add
inc
das
push
sbb
cli
pop
sbb
xor
jmp
cltd
shrl
mov
les
xacquire
cmp
and
stos
rolb
jl
and
rolb
imul
bound
es
sti
fdivl
stc
pop
test
sub
push
adc
push
repnz
sbb
xchg
stos
lods
divl
je
addr16
das
ja
cltd
and
mov
mov
mov
fs
lcall
inc
mov
out
mov
push
iret
mov
push
scas
outsl
sbb
test
mov
mov
in
mov
jecxz
cs
fwait
rcr
mov
and
fnstcw
adc
insb
lcall
inc
xor
mov
sahf
data16
test
stc
movl
in
cmp
dec
cmp
ret
test
push
mov
jg
das
xchg
mov
in
shlb
add
pop
sub
pop
dec
rol
adc
test
dec
sbb
sub
out
pop
or
or
add
xor
pusha
inc
ds
outsb
scas
xchg
jg
cmc
flds
es
xchg
aaa
lcall
fcompl
jb
mov
push
xchg
sbb
out
imul
sbb
add
xchg
xlat
fsts
outsl
cltd
lods
xchg
nop
pop
adcl
push
shr
je
mov
pop
jbe
mov
cld
push
fwait
jns
mov
xchg
and
xlat
bnd
mov
cmc
shrb
es
add
inc
jecxz
sbb
rolb
inc
jp
fnstcw
pop
cmp
cmpsb
inc
mov
mov
xor
push
cltd
push
adc
xor
and
sbb
cmp
aas
repnz
pop
bound
or
ja
out
add
jle
push
mov
sbb
xchg
lea
mov
pop
and
ja
pusha
xor
pusha
and
ret
rorb
mov
iret
test
call
negl
in
test
lods
mov
stos
jns
movsb
adc
daa
das
jnp
fcmovbe
mov
sarl
mov
sbb
xor
sbb
cmc
mov
rorl
mov
rcll
inc
pop
add
loop
xorl
loopne
sbb
fstpl
lcall
mov
loop
aaa
and
mov
sbb
xor
pushf
add
sbb
lahf
stc
push
stos
stos
cmc
jo
stos
in
pop
xor
cmp
loop
loop
pop
sbb
adc
and
cbtw
mov
xchg
ret
lcall
push
jo
xchg
iret
clc
cmp
mov
in
xor
jo
std
je
inc
or
push
add
cmp
cli
outsb
and
mov
fs
jmp
ds
bound
sbb
mov
inc
scas
xchg
divb
xor
push
stos
jle
subb
arpl
shl
out
sbb
jno
mov
popf
es
cwtl
inc
jo
dec
call
pop
js
mov
outsl
outsb
lea
inc
outsl
lcall
fistpl
outsl
cmp
repz
insb
lcall
jmp
ret
jno
outsb
ds
push
xchg
cs
pop
pop
xchg
lds
dec
pushfw
mov
repnz
jmp
jge
sti
mov
out
fidivrl
ret
mov
jbe
aas
fisubrl
call
push
out
jne
test
fs
push
sub
cmp
jle
mov
cmp
repnz
xchg
js
lock
outsl
xor
pop
cmc
orb
mov
ds
in
jg
mov
pop
adc
jae
mov
in
or
inc
mov
leave
add
adc
pop
push
push
cmp
xchg
pusha
pop
out
inc
je
inc
push
add
and
mov
or
hlt
xor
push
adcb
movsb
ja
mov
jg
ret
dec
mov
jl
mov
pop
sub
popa
mov
mov
push
mov
gs
adc
popa
push
das
out
add
mov
pcmpgtb
lds
sub
xchg
pop
sub
push
push
ret
cwtl
mov
push
cwtl
mov
and
stos
jle
not
push
mov
jno,pt
push
outsl
enter
push
inc
insl
push
out
aam
dec
jne
lds
loopne
lea
pop
jo
or
xchg
sbb
fsubrs
out
mov
mov
pop
cltd
rcrl
movsl
sub
add
es
mov
mov
jnp
mov
lods
shrb
cmpsb
rolb
fnstcw
mov
pushf
cltd
scas
push
fldenv
xor
mov
orb
cmp
jle
xor
jl,pt
lcall
cpuid
and
push
adc
adcb
xor
test
jecxz
imul
loop
shrb
stc
lds
sahf
fnsave
mov
cmp
xor
mov
lahf
fwait
movsl
out
jle
lcall
xchg
jo
jnp
sub
inc
sbb
es
loop
fcmovnb
es
out
lcall
mov
mov
lds
cmp
shlb
mov
push
test
and
stos
ret
push
arpl
pushf
pop
sub
mov
andb
sarb
jmp
sbb
fnstcw
imul
mov
fnstcw
mov
mov
in
pusha
inc
scas
xor
xor
mov
fiadds
loop
idivl
xchg
lret
mov
mov
dec
cmp
push
adc
jbe
pop
sbbb
notl
repnz
mov
sbb
pop
addr16
mov
lret
xchg
stc
stc
lods
lods
outsl
call
ja
lcall
stos
test
cmpsl
xchg
cmpsb
push
test
lcall
mov
in
push
sbb
stos
jle
sub
mov
test
adc
jnp
sbb
fsts
inc
in
lods
or
test
ljmp
jno
xchg
lock
inc
cmpb
in
xchg
aad
sub
cld
in
mov
outsb
in
cmp
xorb
adcb
movb
add
sbb
pushl
and
jae
sbb
ret
mov
mov
fdivs
pop
or
xor
outsb
xchg
mov
int
add
lret
cmp
outsb
hlt
loope
dec
cmp
cmpsl
loop
int
add
outsl
and
adc
jno
ret
add
lods
add
out
repz
leave
jl
jle
fs
jnp
aaa
loope
cmpsb
inc
in
dec
popa
xchg
jge
decl
cmp
inc
in
addb
ffree
fstpt
inc
xorb
jg
ljmp
fstpl
adcb
lret
or
rcll
xchg
icebp
addb
mov
inc
mov
outsl
orb
fsubl
addl
clc
jns
push
mov
les
repz
xchg
test
jge
add
pop
jns
xor
sub
bound
popa
clc
pop
jg
jl
scas
into
jns
push
nop
aad
insb
in
cmp
addb
sahf
mov
das
xchg
sub
xchg
js
fildll
sbbl
arpl
in
jnp
pop
jge
lret
stos
decl
js
jbe
push
dec
orb
ret
adc
dec
sub
xor
dec
mov
andb
push
cwtl
comiss
inc
js
stos
lret
jb
sbbb
subb
scas
test
pop
mov
jnp
jp
xchg
fimull
add
xchg
mov
adcl
cmp
mov
dec
test
pop
mov
add
cmp
and
int
xchg
adc
jg
cltd
repnz
in
test
cmp
add
jle
inc
ss
leave
ret
or
sub
pop
rcrl
out
outsb
inc
jno
notb
aad
push
or
icebp
andb
fists
pop
out
lahf
xchg
pop
pop
jp
push
ret
mov
xchg
dec
add
jg
xlat
mov
dec
test
int
mov
jle
andb
xorb
fmul
xchg
out
or
imul
divl
jl
add
or
jnp
adc
pop
out
cmpb
add
mov
adc
out
into
cmpsb
xor
cmpb
aaa
xorb
lret
clc
add
andb
insb
in
arpl
adcb
enter
sbb
jnp
jmp
add
icebp
je
outsb
or
pop
aam
sbb
dec
loopne
add
mov
xorb
hlt
pop
xchg
icebp
adcb
stos
sahf
mov
jg
add
adc
mov
into
test
insl
pushf
sub
mov
cwtl
sti
je
mov
xchg
jnp
sub
stc
sarb
xchg
xchg
mov
aaa
sub
inc
cld
fcoml
cmpb
push
inc
dec
addb
mov
cmpb
sti
add
sbb
cmp
push
dec
pop
xchg
cmp
fwait
or
lret
fisttpll
jbe
pop
mov
jg
jnp
or
jmp
ret
mov
mov
mov
hlt
add
call
jo
mov
xchg
dec
cmpsb
shrl
lret
arpl
add
pop
xlat
sbb
mov
stos
int
dec
int3
inc
mov
adc
jb
cwtl
pop
lods
jo
test
inc
lcall
pop
stc
jecxz
sub
add
inc
jno
jle
or
jmp
jg
and
jl
mov
das
in
push
popf
mov
xorb
mov
xor
pop
cltd
cmc
sbb
mov
mov
mov
lcall
adc
push
ret
daa
xchg
xchg
popf
sub
cltd
sbb
rorl
inc
sbbb
ja
aaa
mov
jns
std
mov
gs
lea
or
enter
cmp
orb
xchg
sub
pop
cwtl
adc
sbb
repnz
inc
lcall
stos
stc
jp
lock
call
imul
jge
lret
ret
mov
jns
jbe
push
sbbb
cli
arpl
fiadds
lret
testb
add
push
sti
nop
fucomp
orb
sbb
xchg
orb
mov
jge
mov
aaa
and
xchg
adc
lds
rep
rorb
sbbb
inc
in
sbb
sub
leave
dec
lods
xorl
faddl
pop
scas
mov
testl
sbbl
sbb
jge
fdivrl
pop
mov
and
mov
xor
lea
mov
adc
movsb
mov
xchg
repnz
dec
in
jno
jae
add
loop
jge
sbb
cmp
outsl
gs
sti
rorl
cltd
xor
enter
incl
jb
jne
mov
and
mov
movl
inc
sarb
and
std
mov
mov
mov
push
lret
cltd
mov
mov
xor
sub
filds
data16
iret
cmp
loop
mov
ljmp
loope
insb
adcb
fstl
testb
dec
cmpsb
stos
add
cmp
jo
and
gs
lcall
inc
in
cs
cli
cmpb
push
ljmp
push
insb
adc
jp
faddl
jbe
andl
and
and
mov
ficompl
dec
ss
and
cmpb
push
mov
push
inc
js
jg
adc
shll
das
mov
mov
cmc
orb
cli
lods
dec
out
stc
popf
clc
les
lcall
mov
rclb
jns
into
push
or
cld
cli
jge
xchg
or
mov
add
push
ret
outsb
xchg
adc
fidivrl
xchg
andb
sub
orb
outsl
jecxz
add
mov
mov
mov
adc
subb
push
push
xchg
icebp
loopne
xor
loope
jns
jle
adc
push
fildll
xchg
dec
insl
insb
addr16
xchg
push
subb
mov
jae
xor
lods
inc
data16
mov
lock
jecxz
mov
sub
jge
sbbb
aaa
mov
mov
adcb
inc
popf
les
inc
fiaddl
jge
or
xchg
sbb
pop
mov
add
in
jge
jnp
jne
and
roll
ss
arpl
stos
mov
add
adc
mov
roll
sbb
pushf
or
mov
insb
addb
out
push
add
jns
stc
ljmp
flds
sub
inc
sbb
push
icebp
sub
clc
dec
cmpsb
sbb
lea
xor
sub
lods
js
xor
and
pushf
sbb
lcall
subb
mov
ret
push
mov
call
dec
jns
xchg
loop
and
mov
std
mov
mov
cmp
and
aam
movl
push
jno
arpl
repnz
mov
xor
mov
inc
test
fcomi
scas
leave
andl
sbb
aaa
or
push
hlt
icebp
pop
adcb
mov
addb
xchg
push
sub
insl
inc
dec
add
sub
shll
dec
add
mov
icebp
aam
cmp
cmpl
sub
inc
xchg
arpl
xor
adc
aas
jg
add
cli
clc
push
nop
sbbb
out
xor
pop
cmp
imul
mov
sahf
fildl
ds
roll
jge,pn
out
dec
xor
iret
cmp
add
xchg
mov
and
out
sub
sti
std
subb
lds
in
mov
add
test
sti
and
test
aad
cmpb
stc
xchg
mov
adc
in
ja
push
jbe
jno
adcl
lea
jns
pop
inc
outsl
addl
jle
dec
imul
daa
jle
jecxz
cmpb
inc
inc
sub
sbb
inc
pop
shlb
adcb
das
cwtl
xor
fwait
cmpsl
mov
insb
nop
andb
loop
push
rcll
test
pop
in
adc
cmp
dec
filds
mov
ljmp
xor
mov
add
xchg
mov
push
push
adcb
xlat
jae
pusha
xorb
cmp
jmp
lcall
je
push
or
scas
dec
and
insb
sbb
ret
gs
sub
jg
es
outsl
jl
lcall
add
gs
pop
jmp
lods
cwtl
add
push
data16
out
test
xchg
jno
adc
jle
dec
jmp
cmc
shll
icebp
xorl
push
jb
sbb
sbb
jmp
test
cmpb
xchg
sub
inc
fs
fildl
mov
cmpsl
jg
aad
lret
fdivrl
je
jno
push
mov
test
cmc
insl
sbb
subb
and
pop
jb
sbb
addb
or
add
call
mov
xchg
pop
sahf
cli
ljmp
and
addb
sbb
xchg
mov
pop
cmpsl
aad
rolb
scas
sbb
addb
fbstp
jnp
jg,pt
add
cld
pop
xchg
gs
jnp
jge
jne
jb
inc
jno
mov
add
js
mov
adc
or
stos
stos
xchg
ss
jbe
push
jnp
xor
mov
sub
loope
add
movsl
outsb
loopne
sub
addb
or
xchg
or
addr16
jnp
inc
ret
xchg
jno
xorb
pop
and
repz
push
mov
in
adcl
mov
arpl
adc
adcb
mov
jnp
inc
fwait
lahf
pop
jae
mov
sbbb
pushf
es
dec
xchg
addb
loopne
bound
add
stc
dec
ret
and
sahf
mov
orl
adc
outsl
xchg
stos
inc
pusha
cmc
das
and
cmp
incb
loope
lcall
push
mov
ja
scas
dec
lret
jecxz
pop
xlat
addr16
adc
in
push
test
dec
jmp
push
lea
inc
in
cmp
xchg
in
loop
scas
push
pop
jg
outsb
incb
sbb
or
shlb
mov
sbb
inc
divb
subb
adcl
pop
jns
subl
stos
sbbl
cli
jmp
jle
dec
jns
sub
enter
cmp
nop
subl
push
adcb
jae
jb
fisubrs
lods
mov
inc
jmp
lcall
lret
lcall
jp
lods
xchg
cmc
hlt
addb
in
inc
nop
cmpsb
adc
sahf
ljmp
insl
in
out
shll
js
sbb
mov
mov
rcll
mov
ljmp
in
aaa
bound
testb
sti
sub
sbbb
pushf
cmp
sub
ja
movsl
repz
std
mov
push
jo
xlat
insl
insb
or
repnz
jmp
imul
subb
into
ret
aaa
adc
iret
subb
in
inc
jnp
push
adc
jb
mov
out
push
push
xorb
addl
loope
mov
push
add
mov
pop
mov
mov
sbb
std
das
mov
push
pop
xorb
movsl
cmp
cli
scas
xchg
or
mov
rclb
push
pop
das
arpl
push
mov
testb
xor
leave
jnp
jp
stos
xor
or
xchg
or
roll
xorl
push
xor
movsl
adc
cmp
out
add
dec
addb
or
sbb
ret
mov
mov
imul
push
or
and
in
jo
stos
adc
outsl
mov
inc
loopne
dec
int3
jno
push
or
mov
out
sbb
outsb
add
and
push
mov
sbbb
add
lods
out
mov
mov
popa
test
in
push
xchg
pop
push
cmp
cli
add
xor
addr16
xorb
sub
sbb
xorb
dec
xchg
inc
les
push
jmp
lea
cmpl
jle
not
outsl
jae
dec
push
xchg
inc
add
cmpb
adc
daa
cltd
rcr
pop
bound
sbb
fmul
and
lret
dec
xor
sub
pop
shll
or
pop
jl
cmpl
ds
divb
add
adcb
movsl
adcb
and
cli
mov
cs
movsb
scas
mov
in
pop
repnz
mov
ss
inc
push
rcrl
adc
mov
xchg
adc
mov
lods
arpl
xorl
mov
addl
out
xchg
orb
loope
data16
pop
add
aad
push
pop
orb
and
sbbb
pop
nop
jns
pop
add
mov
or
fcoms
dec
andb
imul
loope
cmpb
out
inc
js
mov
jb
adc
in
shlb
adcb
or
data16
mov
pushl
in
cmp
mov
mov
pop
addb
pop
mov
adc
ljmp
aas
mov
xorb
data16
xchg
inc
inc
fcomps
pop
enter
xchg
xorb
mov
jp
popa
sti
cmp
subb
nop
push
cwtl
arpl
and
mov
fimuls
arpl
cmp
push
orb
lahf
adc
inc
std
xlat
in
pop
cld
int
movl
jg
mov
inc
mov
inc
daa
lds
and
or
fucomi
inc
adc
loop
jne
sbbb
mov
int3
push
dec
xchg
lea
daa
jns
aas
mov
int
in
dec
and
pop
ret
push
cwtl
js
lahf
xor
mov
jbe
subb
lods
dec
sub
add
mov
dec
in
and
orb
outsl
ljmp
scas
lea
bnd
daa
orb
testl
orl
repz
mov
push
or
mov
lahf
es
pmulhuw
pop
notl
inc
jmp
or
fisubrl
fwait
adc
push
std
imul
sbb
sub
adc
jne
and
lea
sbb
inc
dec
out
stos
out
adcb
ret
mov
call
jne
test
pop
add
addb
sub
rolb
in
sarl
orb
out
fnsave
into
fiaddl
adc
popf
jnp
ret
mov
shlb
orb
cmp
mov
repnz
dec
push
repz
and
adcb
push
stos
jg
ja
and
jp
subb
cmpsl
stc
cmp
rolb
xor
mov
jg
je
je
bound
jl
sti
out
stos
addb
inc
movl
dec
fldt
mov
mov
xor
repnz
pop
leave
mov
mov
jmp
and
in
lods
mov
ja
pop
ja
push
mov
xor
xor
pushf
orb
mov
pop
clc
xchg
int3
push
xorl
mov
aam
subb
mov
adc
lret
call
ljmp
addr16
insl
lea
cmp
and
addb
pop
push
repnz
shrb
and
mov
sbb
sub
loope
or
or
push
test
shlb
popf
cld
push
add
add
xor
lcall
arpl
cmp
sbb
insb
mov
ret
add
fildll
or
mov
or
rcr
rcrb
adc
adc
clc
jg
xchg
gs
mov
mov
in
call
dec
adcb
lods
push
cmpb
adc
xlat
andb
push
mov
je
clc
cld
push
andb
js
scas
sub
push
push
faddp
fcomp
ljmp
movsl
jle
add
mov
ja
adc
jge
sub
jp
fs
gs
add
imul
pop
push
roll
stos
in
addb
fsub
insl
lds
adc
hlt
fisubl
mov
pop
orb
addr16
adc
jae
xchg
pop
movsb
scas
iret
fs
inc
int3
testb
push
pushf
add
pop
dec
adc
rcll
sub
addb
in
das
lods
clc
cmpsl
fnstcw
cli
push
scas
adc
call
xchg
add
out
pop
rol
sbb
or
mov
roll
xchg
shrb
cwtl
mov
lods
sbbb
push
in
mov
ret
or
sub
mov
cmp
add
xchg
test
inc
cld
jno
lcall
xorb
sbb
inc
rcll
js
notl
incb
lods
mov
arpl
sub
cmp
icebp
sbbl
mov
out
je
jno
xor
adc
icebp
std
js
imul
adc
test
divl
gs
ret
scas
mov
xorb
jb
mov
popf
xor
mov
or
dec
pop
mov
and
scas
and
sbbb
lret
jecxz
and
jle
sbbb
adc
out
xchg
rolb
pop
fsubs
gs
xchg
fmull
aam
lret
push
sbbl
inc
andb
nop
add
or
sub
sahf
test
xor
push
jbe
pop
jmp
ret
lcall
outsl
out
fidivs
pop
cltd
inc
dec
adc
jo
push
mov
mov
roll
xchg
jns
in
adcb
sbb
adc
or
ds
adc
addl
xchg
mov
push
cmpsb
scas
inc
mov
andb
jae
cmpsl
and
popa
xchg
arpl
int3
out
cmp
fdivrl
jne
mov
bound
mov
mov
add
lods
pop
clc
cld
adc
jnp
cmc
adc
bound
mov
insb
mov
sub
pop
andb
push
ret
repnz
sbb
rorb
mov
hlt
int3
jb
subb
stos
pop
jns
sbbl
imul
ljmp
in
stos
data16
add
jns
dec
sti
mov
xor
push
jp,pn
and
sahf
mov
jg
cmp
dec
pop
mov
lea
insb
jae
out
xchg
imul
mov
loopne
inc
jae
orl
jmp
rcll
pop
mov
add
mov
push
loope
clc
push
mov
cmc
fs
push
lods
loop
out
rcrb
and
lods
mov
and
sti
adc
lea
shrl
fcos
in
inc
sti
outsb
testb
sub
leave
sub
lds
std
adc
cs
repnz
sti
xchg
test
and
cld
and
lock
pop
js
lcall
stc
and
push
xorl
jb
jb
les
cltd
jo
add
sub
mov
sub
push
imul
ja
repnz
inc
jmp
into
adc
and
push
aaa
jnp
inc
mov
mov
out
push
jno
sbb
cmc
lock
and
pop
mov
lcall
mov
jp
ret
insb
jb
cwtl
in
in
add
cltd
xchg
ljmp
in
xlat
adc
dec
xor
lret
movsb
aam
les
or
je
addb
add
popa
mov
jbe
xlat
mov
adc
addl
mov
imul
lret
subb
sub
test
test
subb
lret
stc
push
nop
icebp
add
adc
inc
js
adc
idivb
jmp
cli
add
push
cltd
lret
test
fdiv
xchg
stos
mov
jecxz
or
orb
clc
jb
sbb
jo
and
xchg
inc
sbb
jge
xor
pusha
addb
jp
adc
fmull
jecxz
aaa
sbb
mov
add
adc
lock
rdmsr
jnp
enter
sbb
sbbb
outsb
mov
addl
mov
mov
mov
xor
sahf
daa
test
cmpb
add
xchg
int
jns
mov
mov
dec
repz
mov
testl
xor
fdivrs
xchg
xor
ljmp
mov
out
sahf
inc
addb
xchg
pop
adcb
mov
sbbb
addr16
divl
subl
xchg
xor
mov
fmuls
js
adc
mov
lret
sub
xchg
cmc
mov
add
and
and
adc
sbb
add
jmp
psubsb
pop
sbbb
push
dec
fldl
aaa
xorb
icebp
jmp
fbld
inc
ljmp
xchg
adc
mov
hlt
and
mov
imull
popa
ljmp
ret
loope
jne
scas
enter
ret
stos
and
fiaddl
or
fs
stc
into
sub
inc
aad
nop
lds
jb
add
pop
loop
andb
test
sub
fcoms
mov
aad
xchg
rcll
repnz
pop
addb
mov
sbbb
add
leave
mul
shlb
sahf
stos
add
pop
test
in
ret
test
jg
lret
pushf
sbbb
cmp
adcb
cli
push
jge
pushf
imul
sbb
faddl
cmp
bound
int3
cmpsb
aam
push
pop
sub
add
jb
insl
pop
shlb
xchg
daa
cmp
lods
xchg
adc
push
pop
sbb
orb
gs
xor
nop
and
inc
cmpl
mov
add
push
xchg
jecxz
aas
lods
cmpl
bound
out
popf
out
inc
andb
adc
cmpb
mov
sbb
dec
xchg
push
adc
xchg
mov
pop
ss
add
insb
repnz
inc
add
cmp
outsb
xchg
cmpsb
in
dec
mov
pop
hlt
add
loope
js
cmc
fildl
les
push
hlt
sub
mov
pop
dec
fcmovnb
mov
fists
cmp
cltd
mov
dec
and
repz
lret
push
into
cmp
mov
jnp
inc
push
bound
mov
cs
scas
setle
or
movsb
loop
inc
lret
imul
in
ficoms
test
mov
arpl
insl
cmp
jbe
loope
inc
ja
jle
sbb
addb
push
andb
into
je
fmull
subb
insl
pop
popa
sahf
aaa
push
addb
lret
sub
fsubl
dec
inc
rcrb
xchg
loop
mov
arpl
inc
das
cmc
cwtl
inc
xorb
jb
inc
test
mov
pop
xor
ja
movl
and
popa
sbb
jl
vpunpcklbw
or
lcall
lahf
cmc
out
mov
je
jo
pop
movsl
inc
ficompl
orl
cld
jg
int3
out
push
jns
dec
call
pop
insb
stos
sbb
adcb
inc
jae
adc
or
sub
pop
xorb
sti
ja
cs
outsl
loopne
leave
adc
sbb
repnz
add
pop
xor
adc
adcl
ret
mov
fadds
pop
std
or
ja
jg
and
mov
mov
fstpl
dec
mov
sahf
int
subb
jne
mov
hlt
aas
adc
push
pusha
stos
jae
ret
dec
xchg
orb
gs
rcr
ret
cmovs
xor
add
add
and
add
repz
fiaddl
push
arpl
dec
adc
jnp
icebp
cmp
sub
add
fisttpll
movb
cmpb
mul
cmp
inc
addr16
out
inc
mov
inc
fists
or
popa
dec
mov
pop
adc
push
xor
mov
dec
mov
jg
push
movsl
pushf
repz
add
adc
flds
jno
loop
xorb
pop
sub
test
enter
xor
add
or
imul
pop
jno
outsb
fnsave
insl
cmp
cmp
mov
stos
and
push
inc
add
and
loop
sbbb
pop
fcoml
add
inc
mov
inc
add
and
adc
cmpsl
or
dec
dec
push
xchg
lds
mov
mov
pop
mov
cmc
outsb
pushf
jmp
mov
je
jle
or
sub
push
inc
adcb
add
push
in
les
ret
xor
arpl
sbb
inc
movsl
push
stos
inc
cmp
jns
orl
fstpl
adcb
movsb
lock
ljmp
xor
xchg
subb
iret
lahf
mov
addb
daa
sub
enter
cmpsl
fsts
mov
pop
and
enter
pop
xlat
cmpl
mov
mov
sbbb
or
jmp
dec
push
jl
outsl
mov
sbb
nop
clc
dec
jnp
subb
repnz
xorb
push
jnp
sub
data16
rcrb
enter
les
pop
mov
movsl
imul
out
imul
mov
outsb
adc
imulb
cmpb
enter
xchg
orb
jmp
mov
addb
test
mov
stos
sahf
ret
mov
aas
lcall
inc
arpl
or
subb
mov
jp
out
mov
leave
add
adc
cmc
mov
jae
jecxz
inc
inc
fsubrs
lods
xchg
adcb
jl
push
mov
dec
and
movsb
sub
dec
pop
jo
jns
xorb
and
arpl
in
add
addr16
popf
insl
xchg
and
jnp
iret
repz
pop
cltd
hlt
pop
adc
fcompl
jbe
sbbb
icebp
xor
jae
jg
cmp
mov
das
jbe
push
ja
push
add
xor
mov
jns
mov
andb
repnz
or
push
sbb
mov
and
in
repz
fisttps
shl
push
cmp
pop
and
dec
cmp
sub
arpl
divb
add
ljmp
push
cmc
test
aam
mov
scas
xor
jae
inc
test
mov
sbbb
nop
mov
ret
mov
jmp
jne
das
sbb
xchg
repnz
arpl
std
and
cmp
sub
outsl
xorl
sti
stos
mov
sub
xchg
jno
cwtl
pusha
dec
aaa
shll
mov
xor
jb
test
std
lret
cs
aad
dec
xor
dec
jmp
jno
push
into
xor
mov
in
mov
les
out
cwtl
icebp
movsl
jb
and
mov
mov
fs
leave
shrb
les
or
fwait
jnp
scas
adc
and
rclb
cmp
push
mov
out
nop
cld
sub
xor
addb
xchg
push
dec
ja
pop
add
mov
mov
leave
cmp
lcall
ret
lret
jle
data16
add
rolb
push
xchg
negl
add
inc
loop
jnp
sahf
addr16
std
testl
in
or
push
repnz
jp
into
outsl
bound
mov
std
andl
or
pop
push
stc
test
mov
xchg
and
mov
pop
or
jl
push
ljmp
aam
movsl
loope
cmc
out
inc
std
pop
jo
lcall
sub
lock
sbb
in
pop
ds
cmp
add
mov
lret
mov
jne
adc
out
jmp
cmc
xor
fldt
out
bsf
subl
and
adc
fcmove
cltd
push
aaa
rcrb
testb
lret
movsb
sbb
movsb
out
inc
jae
inc
mov
test
mov
loop
lret
xchg
sub
nop
sti
inc
adc
inc
ja
repz
pop
pushf
inc
pushf
inc
idiv
and
ret
jne
jp
sbb
call
sti
int
ja
in
inc
jns
mov
inc
mov
inc
pop
and
testb
dec
and
fmull
dec
rcrb
aam
dec
push
sub
outsl
les
xchg
mov
lcall
jle
mov
add
xchg
stc
dec
cs
jo
imul
ljmp
lcall
pop
xlat
cmpb
dec
pop
jb
sub
out
cmp
or
hlt
cmp
jb
pop
mov
arpl
push
mov
cmp
sbb
sbb
int3
or
push
dec
sbb
mov
sbb
test
shlb
add
sub
inc
imul
shlb
inc
orb
stc
cmpsb
cld
data16
push
or
inc
test
jg
cmp
lret
pop
xchg
add
push
pusha
and
mov
lea
pop
inc
mov
jg
push
or
hlt
stos
mov
xorb
sub
movsb
xorb
mov
cmp
cmp
cmpsl
mov
scas
cmc
dec
test
cmp
sub
jo
fcoms
and
popf
xor
mov
inc
adc
out
test
xchg
les
inc
push
test
mov
dec
inc
jno
dec
into
and
es
sarl
adc
gs
test
stos
lods
subb
or
jno
sbb
addb
cmpsb
sarb
cmpsl
sub
hlt
pop
adc
xchg
and
lahf
xor
mov
repnz
add
test
loopne
popa
fbld
rcll
mov
es
sub
mov
mov
aad
push
jae
jge
adc
lods
int3
xchg
xchg
stc
pop
jg
lcall
or
loope
or
adc
add
mov
mov
or
movsb
rorl
stos
adc
repnz
xorb
js
out
mov
push
orl
bnd
xorb
addr16
ret
jb
or
test
cmpsl
sbb
outsb
sub
mov
inc
cmpb
add
js
divb
adc
mov
xorb
mov
and
test
rclb
push
jbe,pt
ret
or
adc
pop
lods
dec
dec
stos
jp
mov
hlt
test
cmp
mov
add
sbbb
inc
sbb
cmc
data16
push
andb
xchg
pop
iret
dec
data16
cwtl
aad
insl
sub
fucomi
jge
stos
scas
mov
sub
adc
fsubrs
jg
out
pop
mov
stos
add
mov
hlt
cld
gs
movsl
pop
loop
andb
movsb
insl
push
addr16
push
sbbb
sub
in
xchg
jg
out
xor
cmpsl
shlb
addb
mov
test
mov
arpl
into
jbe
sub
cmpb
push
inc
or
pop
xchg
dec
inc
pop
outsl
xchg
jnp
cli
fildll
adcl
cwtl
jne
mov
pop
adc
mov
mov
shrl
adc
jo
cmp
aas
jp
popl
loopne
lcall
pop
sbb
icebp
arpl
xorb
je
sbbb
push
lods
mov
pop
cmc
jne
scas
xchg
pop
popl
faddl
pop
mov
mov
ja
mov
cmp
repz
shlb
js
out
subb
std
ja
cmp
sbbb
mov
sbb
es
iret
xchg
pop
gs
cwtl
insl
fwait
add
outsl
lock
test
andb
stc
dec
aam
pushf
subb
incb
out
gs
inc
rcll
pop
loope
xchg
int
subb
jae
dec
ret
xchg
cmp
das
gs
shlb
inc
xlat
mov
subb
imul
fs
or
fidivs
aaa
pop
jae
fs
add
loope
add
cmpb
in
addb
xchg
inc
mov
xor
sbb
inc
jae
enter
and
adcb
add
js
xorb
sti
icebp
cwtl
rclb
sub
arpl
sbb
adc
xchg
pop
push
pop
add
xchg
mov
xorb
inc
push
adcb
sub
xlat
xchg
jns
in
insb
outsb
loop
mov
jae
mov
xchg
je
push
dec
mov
sub
mov
inc
add
xchg
cmp
aas
push
or
pushf
jmp
orb
mov
mov
or
addb
jl
xchg
jbe
fnstcw
cmpb
xor
jge
repnz
data16
mov
lds
out
mov
or
mov
lahf
xor
orb
add
movsl
jb
fadds
testl
test
and
pop
mov
adc
sbb
dec
xchg
stos
sti
inc
jb
out
and
je
sub
sub
test
insl
jg
add
xor
notl
jno
cmp
cmp
inc
repz
mov
adc
mov
xor
js
imul
xor
int3
inc
aam
xchg
mov
add
xor
sub
and
dec
outsl
adcb
repnz
dec
push
scas
add
xchg
and
enter
jle
jg
jge
mov
aam
es
movsl
sbb
mov
sub
test
mov
dec
je
add
sbb
xchg
xor
fs
add
test
imul
cmp
fwait
sbb
das
sahf
add
push
xchg
or
cltd
pop
enter
out
push
mov
pop
mov
and
pusha
or
mov
mov
lret
pop
adc
int3
pop
andl
jg
and
jmp
xorl
filds
out
xchg
xchg
andb
test
sbbl
cwtl
add
cli
ja
cmp
lahf
lds
lock
mov
inc
scas
sub
fsubr
adc
outsb
cwtd
in
add
lret
sub
mov
rolb
sbb
xchg
or
add
ja
jns
adc
subb
nop
mov
clc
cmp
lahf
xchg
aaa
sub
xchg
and
rcrl
sbbb
inc
xor
push
ja
mov
pop
fidivs
adc
sub
cmpsl
in
add
pop
mov
ret
imul
fildl
ret
cmc
mov
sub
jo
push
hlt
mov
jnp
adc
pusha
dec
insl
jae
pop
inc
sarl
cmpsl
add
xchg
stc
sbb
ja
xchg
xchg
nop
xor
xchg
or
outsl
icebp
aas
popl
pusha
insb
jbe
int
jmp
leave
orb
jo
or
xorb
jg
ss
inc
int3
mov
or
sbb
pusha
mov
pop
loopne
cmpb
ja
addb
add
or
mov
jne
loopne
loop
ret
add
inc
adc
sub
shll
cmpb
jecxz
cmpb
or
and
sbb
and
inc
bound
jns
fstpl
jle
ret
mov
adcl
fwait
pushf
xchg
sub
aam
pop
iret
cmp
stos
cmc
xorb
mov
add
mov
cmpb
pop
push
ret
or
or
sarb
mov
gs
cmpsl
stc
adcb
test
es
xchg
sub
xor
and
xchg
xchg
outsb
push
je
mov
push
add
mov
push
fs
push
inc
cltd
sbb
and
incb
dec
ljmp
call
ds
andb
adc
mov
inc
shll
imul
imul
insb
scas
or
rclb
stos
out
sub
lods
sahf
inc
movb
and
and
add
es
andb
pop
jl
stos
nop
inc
or
xorb
imul
push
inc
pop
push
cmp
sbb
bound
lret
sub
loop
test
popa
lds
fnstcw
fidivrs
je
mov
insl
je
stc
or
xorl
test
mov
xchg
clc
xor
outsl
fucomip
add
movsb
xchg
push
dec
jbe
cltd
invd
cltd
icebp
xor
fldcw
inc
ret
mov
ja
aas
and
ror
mov
out
pop
jns
and
lret
pmulhw
jge
cmp
mov
xorb
scas
sahf
fidivrs
xchg
sub
pop
push
xchg
addb
mov
xor
jmp
adc
lret
fstp
stos
rorl
lcall
scas
pop
add
lds
xor
sbb
mov
fmull
adc
jo
xchg
repnz
inc
sbb
xchg
stc
in
sub
ja
push
fstps
andb
nop
fisttps
jmp
jo
stos
daa
mov
je
and
xlat
xchg
loopne
push
mov
f2xm1
or
sub
lds
push
enter
hlt
imul
jp
sbb
cli
mov
xor
sub
dec
roll
and
adc
jmp
add
fs
cmc
push
inc
std
mov
push
adc
in
sbb
data16
xor
inc
jle
lcall
sbb
pushf
xor
outsl
jl
adc
mov
cltd
stos
mov
lret
cwtl
repnz
jge
dec
jbe
lcall
in
adc
imul
xchg
inc
lret
inc
jecxz
insl
mov
xchg
lcall
cmc
sbb
cli
xchg
inc
push
cmp
or
push
lcall
add
popa
sub
fsubl
dec
xorb
jecxz
sbb
and
test
inc
mov
add
psubsw
scas
icebp
dec
adc
js
or
getsec
stc
cmpl
dec
cmpsl
dec
loop
insb
lcall
and
pop
les
lret
jns
xor
pushf
enter
xor
mov
or
mov
jmp
gs
jne
cltd
mov
lcall
mov
imul
fsubrs
and
sbb
popf
mov
hlt
lods
cs
and
loop
fwait
mov
sbb
test
jbe
mov
imul
lock
stos
call
mov
cwtl
push
mov
sub
xor
xor
bound
add
ja
fstl
icebp
mov
jle
mov
xor
adc
inc
mov
ss
iret
adc
cltd
bt
mov
ja
rclb
inc
adc
cmp
cmc
or
fs
xor
pop
push
out
dec
mov
pop
mov
or
lock
test
push
cmpb
es
mov
enter
lcall
pop
ja
int
add
adc
mov
add
outsb
mov
push
jle
test
in
xchg
push
inc
or
and
insb
lret
xchg
cmp
outsl
lea
jecxz
sub
or
pop
les
aam
add
orb
sbb
sbb
jge
out
arpl
jge
xor
xchg
int
daa
cld
addr16
xor
xor
pop
xor
inc
ljmp
sbb
fs
mov
and
and
shrl
xchg
in
enter
xchg
pop
outsl
and
push
push
or
xchg
jbe
jb
sub
sbb
cmp
push
call
xlat
int3
lods
roll
add
mov
and
enter
inc
push
imul
bound
in
xor
jo
iret
cmp
lfs
sbb
repnz
imul
and
scas
imul
mov
add
fsubrs
jo
jge
aad
mov
test
mov
or
je
mov
fldenv
ret
jle
dec
iret
icebp
ljmp
aaa
js
icebp
insl
dec
shrb
arpl
mov
int3
or
xchg
nop
movsl
jle
or
add
lods
xor
repnz
movsl
outsb
lcall
jne
jecxz
mov
lahf
aaa
leave
std
ficoms
js
jge
sbb
mov
scas
imul
jno
pop
push
mov
orb
add
push
stc
cmc
and
out
stos
or
mov
fdivl
push
adc
cltd
jne
xor
aaa
jge
jo
mov
sbb
push
int
inc
loopne
cmpsb
movsl
xor
imul
scas
mov
into
mov
lret
xchg
loope
jl
mov
lret
orb
dec
lcall
ret
push
loope
and
mov
lcall
inc
movb
jp
xchg
or
cs
lock
enter
outsl
cmp
lock
pop
or
ret
ror
addr16
pop
fcmove
dec
cmp
imul
xor
aas
jo
xchg
push
call
inc
and
jp
mov
lock
loope
aaa
lcall
jno
aaa
fstpl
jp
mov
jp
sbb
xor
test
lods
jae
push
das
jns
lea
loope
pop
push
lahf
mov
push
adcb
add
inc
jno
fidivs
add
add
or
xor
xchg
fwait
jns
aad
stos
push
sbb
sarb
hlt
mov
aaa
je
aas
and
ret
es
lock
loope
dec
fnstcw
cli
and
mov
jo
inc
shlb
add
lds
jp
repnz
ret
cmp
mov
sub
popa
dec
lcall
add
pop
pop
lret
cmpsb
lcall
cltd
in
cmp
insb
sbb
push
sub
inc
hlt
push
jle
cltd
mov
or
xor
sti
repnz
sbb
cmp
lcall
idivl
and
mov
fdivrs
aad
repnz
pop
popa
mov
mov
test
adc
rcr
imul
lock
and
scas
dec
inc
pop
rcrb
adc
stc
lea
xor
mov
fiadds
pop
stc
lods
jge
dec
and
popa
out
in
out
std
mov
lahf
push
outsl
inc
nop
xchg
lods
into
out
cmc
and
push
out
fstpl
pop
dec
cs
xor
xor
rorl
inc
popf
jne
add
addr16
sub
clc
sub
rclb
imul
pop
mov
add
add
ja
add
mov
sbb
inc
lods
jle
push
repz
mov
in
cwtl
ljmp
into
inc
mov
jp
cli
push
outsb
cmc
mov
out
sbb
mul
shlb
mov
mov
inc
adc
es
aaa
xchg
outsb
xchg
adc
jg
rol
fwait
jle
lret
push
outsb
push
shlb
pop
sub
movsb
cmp
xorb
dec
cltd
push
xlat
jnp
repnz
and
lods
cli
sub
push
outsl
mov
cwtl
jg
mov
rclb
cmp
push
mov
sbb
rolb
add
in
sbbb
jb
bound
dec
pop
mov
addb
cwtl
repnz
orb
jns
in
sbb
pop
xchg
mov
and
sahf
mov
icebp
loopne
add
mov
mov
jo
xchg
pop
fsubl
sub
daa
subb
mov
jg
and
fcoms
add
aas
loope
jae
dec
xchg
lods
xor
cmp
ret
add
jg
stos
les
pop
loop
enter
xor
cmp
sub
push
sbb
sub
mov
mov
ret
popf
movl
adcb
fistpl
andb
cs
or
sub
dec
gs
stos
ret
jl
repnz
xlat
neg
jecxz
xor
jge
je
xor
mov
addb
cmc
xor
mov
cmp
push
movsb
cmp
jnp
nop
jbe
pop
loop
dec
sub
fldl
dec
adc
jno
loopne
ja
xor
mov
aaa
or
orl
or
inc
cmp
add
jne
das
sti
mov
pop
sbb
jb
jnp
xchg
stos
dec
jnp
nop
or
xchg
cmovae
loop
sbb
fcomi
push
mov
sbbb
push
xor
cmc
adc
jmp
xchg
hlt
addb
pushf
stos
cmp
adc
addr16
mov
ljmp
cmp
xchg
xor
push
popf
lea
stc
or
jg
lret
shll
icebp
and
xorb
test
dec
jg
xor
adc
mov
outsb
mov
cltd
in
adc
inc
imul
pop
imul
std
insb
test
sub
push
test
rorb
dec
out
stc
xchg
mov
pop
es
ret
push
mov
in
add
mov
mov
in
ds
imul
cs
bnd
push
inc
icebp
push
mov
adc
lcall
mov
cltd
and
movsb
in
je
repz
mov
push
xor
mov
jbe
rcll
xchg
retw
cmp
add
dec
cmpsl
mov
lcall
adc
jno
push
dec
int3
adc
xchg
into
jo
hlt
inc
mov
bound
mov
out
ss
push
mov
push
lods
mov
xor
and
cmpsl
sub
ret
sub
mov
mov
rcll
lcall
in
out
out
jo
call
imull
mov
cmpsb
sbbb
rorb
inc
aaa
scas
loop
jmp
fcmovnb
jge
lea
loopne
xor
dec
sub
mov
loopne
test
fbstp
cmpl
popf
mov
pop
push
inc
popa
jle
testl
ds
and
sahf
mov
lea
sti
and
jl
jno
jle
adcl
push
add
inc
sub
jnp
gs
cmpsb
jb
or
pop
aam
orb
xorb
cltd
lret
mov
ss
jno
stc
sub
movl
jg
push
xlat
mov
mov
adc
push
cmpb
jo
inc
test
mov
loop
std
xlat
cmp
mov
sub
daa
xor
fisubs
mov
push
lock
outsb
xor
outsl
ja
pushf
jo
xor
subl
sbb
xor
aam
cmp
jnp
pop
sbb
add
cmp
inc
sbb
aas
lcall
test
fstpl
adc
cmp
push
sahf
inc
xlat
nop
dec
mov
sti
adc
aam
xor
xchg
arpl
out
int3
add
loopne
and
and
and
cli
je
jo
xor
add
rcl
aas
lock
popa
icebp
shlb
mov
std
xor
sbb
pop
cmpsl
test
xor
js
loope
or
insb
ret
dec
sbb
xorb
mov
mov
in
pushf
xlat
dec
loopne
inc
rorl
xchg
and
pop
sahf
jle
mov
daa
inc
mov
jnp
inc
add
mov
lret
inc
es
les
fsubr
loopne
and
cld
lret
sahf
cmp
dec
ljmp
stos
cltd
es
pop
lds
cmpsl
es
data16
dec
dec
sub
lock
loope
in
and
xorb
xchg
pop
cmp
cmp
outsb
jmp
out
mov
and
lods
test
ja
cltd
sbb
cwtl
fimuls
or
jb
stos
ja
clc
test
adc
popa
push
jns
out
push
pop
mov
insb
adc
jmp
js
mov
sbb
sbb
aad
fnstenv
inc
sub
inc
shl
scas
lret
ret
lods
pop
loop
loop
add
call
jo
lcall
jns
ret
outsb
loope
data16
out
cs
jbe
sub
dec
fcompl
daa
mov
inc
cltd
push
sub
aam
inc
push
in
push
rcl
jnp
xchg
fcom
es
lods
add
cs
add
mov
imul
mov
andb
out
xor
lret
test
jb
lcall
loopne
stc
and
jge
das
lds
sahf
loop
cmc
xor
or
mov
sahf
imul
cmpb
mov
push
rolb
pop
mov
int
inc
cmp
cltd
fdiv
sub
mov
je
test
jecxz
inc
jle
mov
shrl
or
aas
cld
pop
pop
sbb
sbb
mov
sub
push
lcall
rol
in
inc
lea
clc
lcall
push
test
rcrl
mov
pop
dec
mov
out
das
ja
push
sarb
mov
nop
push
fs
and
stos
rcrl
cld
jle
stc
sbb
je
cs
mov
aaa
xlat
mov
data16
inc
sbb
mov
and
cltd
fidivl
test
lret
cmc
jmp
jae
xchg
cwtl
push
arpl
push
pusha
sarl
dec
and
fcmovbe
sti
inc
jecxz
add
sub
ret
pop
repnz
pop
jle
lcall
mov
jbe
sarb
pop
movsb
loop
test
pusha
xlat
cltd
lock
cmp
rcll
sbb
aad
ret
sbb
jle
jb
lock
pop
repz
sbb
add
sbb
insb
pop
dec
test
bound
sbb
fwait
push
push
outsl
ret
push
and
negl
xchg
idivl
pushf
scas
xor
xchg
xor
jnp
popf
cmpsb
xchg
jl
ds
aad
mov
dec
fs
jne
ds
movsb
lret
movsb
mov
cld
ret
inc
xor
jle
mov
rcl
lods
popf
clc
and
mov
jmp
sarl
jle
sbb
lret
push
jb
sub
jne
adc
mov
repz
xor
dec
pop
pop
mov
sub
xchg
cs
inc
add
icebp
jno
loope
lret
cld
je
movsb
mov
push
inc
xchg
sub
cmp
fisttpll
mov
pop
push
movlps
or
jno
movsb
addr16
ja
cli
push
outsb
pop
fdivr
test
in
lods
outsl
data16
sbb
call
test
js
add
xchg
and
inc
push
lret
out
enter
jae
sub
mov
cs
add
push
test
and
mov
sub
fdivl
fdiv
iret
cmp
out
add
or
out
cmp
jbe
fisubrl
fisubrs
pop
sub
imul
sub
sti
push
movsb
sbbl
rcrl
xchg
aaa
in
xchg
cmpsl
cmp
and
das
ret
fbstp
cs
jno
out
in
jns
xchg
dec
pushf
test
aam
leave
fwait
test
jl
mov
test
cltd
div
mov
jp
cmp
push
pop
lcall
and
add
sbb
faddl
mov
shlb
mov
and
je,pt
in
stos
lock
push
sbb
xor
dec
xor
and
lahf
nop
movsb
data16
pop
pop
jl
lock
repnz
sub
mov
scas
inc
ja
jle
sub
call
arpl
loopne
data16
je
loop
subl
outsb
lock
push
ds
dec
jp
lea
mov
mov
cmpsb
jle
push
stos
mov
and
push
pop
ja
ret
out
jle
pop
daa
mov
sbb
push
inc
pop
mov
or
int
repz
sti
enter
aad
repnz
xor
cltd
rolb
cmp
sbb
cmp
mov
imul
ss
jp
mov
int3
xchg
add
push
and
jno
xorb
lret
mov
pop
adc
jle
add
mov
mov
lahf
mov
lcall
sub
cmc
std
dec
imul
inc
lahf
mov
pop
in
jns
repz
or
fwait
adc
cmp
jns
sbbl
add
and
sbbb
jb
push
add
push
out
push
imul
call
cwtl
sub
xor
fistl
ds
lods
mov
minps
jae
jbe
mov
mov
and
jno
int3
or
in
push
sub
cld
lds
mov
xor
mov
cmpsb
in
stos
ret
or
mov
cmp
lret
add
add
clc
cli
pop
mov
jg
mov
test
movsb
sti
cmp
orb
and
xor
cmp
lahf
jns
sbbl
sub
mov
xor
mov
xor
test
jmp
fcomps
outsl
jecxz
shrl
or
pusha
dec
and
push
lods
jns
adc
mov
mov
push
adc
xchg
sbb
and
mov
sub
sbb
addr16
push
enter
data16
test
fsubs
pop
dec
push
inc
fdivrl
push
sti
sbb
outsb
imul
jle
fcoms
outsl
cmc
ret
shrl
jmp
enter
mov
pop
or
push
pop
sbb
loopne
add
fld1
cmp
add
cs
outsb
in
inc
mov
xor
imul
lea
jecxz
pop
idivb
mov
lcall
dec
rorb
mov
fdivrl
push
movsb
add
mov
and
xor
rclb
test
push
fisttps
out
pop
mov
nop
imul
mov
daa
gs
gs
mov
int
mov
outsl
lcall
ja
fbstp
adc
xlat
je
add
or
dec
stc
add
lock
mov
mov
inc
sahf
mov
in
pop
sar
add
mov
ja
cmp
inc
dec
and
add
and
jns
repz
dec
xor
outsb
in
psubusw
and
repz
pop
push
into
push
fstl
and
lcall
xchg
ja
ret
loope
cltd
scas
cmp
dec
clc
aam
mov
pusha
push
ja
leave
popa
in
int
adcl
cmp
leave
mov
mov
xor
lcall
sbb
cli
ds
cmpb
jle
cltd
aad
mov
divl
push
adc
repz
dec
outsb
mov
int3
mov
sub
pusha
pop
jbe
dec
mov
inc
push
mov
scas
lea
pop
jbe
xchg
push
xchg
outsl
aaa
sub
jne
rcl
push
sbb
adc
jns
push
mov
enter
add
lds
cs
cltd
mov
pop
and
fwait
inc
in
pop
jg
int3
mov
repnz
sub
sbb
imulb
lds
sub
jno
cmp
addr16
push
mov
xchg
lcall
adc
pop
pushf
cmp
out
jmp
test
in
aam
call
push
or
popa
stos
push
add
pmulhrw
leave
iret
imul
mov
jnp
stc
arpl
mov
mov
pop
sub
ljmp
ret
mov
aas
mov
popf
push
mov
cmc
sbb
mov
xor
jle
pop
xlat
dec
jns
pusha
and
mov
jae
dec
mov
jle
insl
fdivrl
in
scas
inc
cmc
aad
ja
rcrl
inc
push
sub
xor
shlb
cmp
push
leave
repnz
stc
es
mov
push
xor
mov
out
std
outsb
sbb
lcall
xlat
scas
jmp
into
cld
inc
pop
lcall
push
in
lahf
fildll
test
push
enter
clc
pop
push
movsl
dec
sub
cld
insl
icebp
and
es
and
inc
fmul
cmp
jnp
sar
xor
cltd
push
jns
lock
xor
ret
mov
cmp
movsb
lods
jns
loope
lcall
fsubp
aad
inc
and
cmp
sub
icebp
ds
lcall
lret
mov
xor
xchg
xchg
lods
adc
mov
xor
scas
loop
pop
push
cmp
cli
stos
pop
repnz
sub
test
nop
popf
stc
mov
jmp
pop
test
push
sbb
adc
adc
sbb
or
or
cwtl
push
gs
sub
test
icebp
jmp
popf
cmpsl
push
cltd
insb
jmp
dec
pushf
jns
sahf
leave
inc
scas
loope
ficoms
inc
or
sbb
inc
out
inc
cmp
sarl
pop
cs
scas
shrl
cmpsb
xor
icebp
insl
inc
cmpsb
inc
rol
outsl
jl
xor
aaa
xchg
notb
sahf
push
stos
sub
and
mov
orb
out
lcall
das
idivl
jo
jae
imul
jg
sub
nop
inc
mov
sub
sbb
jecxz
jle
cmp
lcall
cmp
lea
cmpsb
aaa
xorl
mov
sbb
aad
js
lds
xchg
lds
dec
bound
out
jl
ret
sbb
sti
inc
sbb
inc
xchg
imul
popa
das
cli
adc
push
jo
and
xchg
push
fisttps
mov
sbb
inc
push
repnz
add
stc
adc
sti
lret
xchg
and
and
arpl
mov
nop
sub
int3
xchg
mov
loope
push
xor
popa
adc
ljmp
adc
jmp
mov
dec
pushf
mov
mov
inc
pusha
cmpb
mull
in
outsb
leave
rolb
pop
sahf
inc
pop
push
imul
lock
xchg
pop
sub
mov
stc
sahf
dec
movsb
pop
xor
popf
andl
and
or
imul
and
jnp
cwtl
imul
movsl
arpl
mov
scas
add
xchg
imull
subl
pop
mov
rcll
out
sbb
leave
jg
cltd
and
mov
jns
sbb
inc
mov
push
sub
dec
insb
add
cs
cmc
mov
xor
jae
int3
aad
push
out
xor
cmp
jbe
inc
in
cmp
mov
push
jns
movsl
jb
mov
fisubl
addl
lea
aaa
xchg
push
incb
mov
cli
lock
sub
pop
mov
inc
aad
jle
dec
and
out
mov
jne
test
pusha
cltd
inc
lds
out
dec
ljmp
imul
mov
lcall
jo
xchg
loop
cltd
pop
and
cmc
outsb
movsl
call
hlt
enter
cli
mov
jle
dec
cmp
dec
cwtl
mov
jne
stos
cmpsb
push
cmp
and
imul
jle
push
iret
repnz
lret
jmp
aas
sub
xor
jae
sbb
test
std
pop
mov
fnstsw
shll
cmp
xchg
call
xor
icebp
cmpsb
sbbb
out
pop
or
xchg
push
ficomps
xlat
orb
mov
jecxz
jle
inc
lods
jnp
repnz
addr16
sbb
jnp
std
sub
ss
arpl
push
daa
aaa
mov
xchg
pop
jp
pushl
sub
pop
jmp
jbe
pop
and
pusha
gs
jge
bound
cltd
aam
das
sbb
test
mov
fstpl
push
push
cmp
into
mov
xchg
cmp
movsl
xchg
dec
sbb
inc
in
lds
push
stc
and
dec
ret
lahf
lea
div
mov
xchg
xchg
das
mov
and
stos
sbb
andb
rcrb
jp
pop
cs
pop
es
popa
xor
mov
jge
add
test
add
int
lcall
jb
pop
sbb
lods
lods
push
add
aaa
push
sbbl
sub
loopne
in
call
out
sbb
cmp
xor
andb
mov
cmp
adc
addr16
cmp
movsl
push
add
cltd
dec
testb
in
xor
sub
cs
jp
adc
pop
lods
insl
mov
pop
inc
mov
sbb
dec
pop
add
loope
xchg
jne
in
dec
mov
mov
cmp
pop
xor
loope
pop
mov
ljmp
roll
sbb
imul
xorl
mov
mov
push
xor
and
mov
cmpsb
fcoms
ret
fs
ds
add
cmc
mov
cli
pushf
stc
and
mov
movsb
data16
lods
and
in
inc
int
cltd
test
or
clc
pop
ret
jmp
ret
mov
leave
idivl
shr
push
daa
lret
loopne
jl
xor
sbb
dec
sahf
mov
insb
dec
cmp
xchg
xchg
push
mov
ret
xor
push
std
cmp
and
hlt
push
es
mov
dec
mov
add
shll
lock
add
cmpsb
xor
rorb
int
ja
jmp
loopne
lock
mov
cmp
xor
int
sbb
data16
and
cld
adc
cmpsb
and
daa
pop
mov
mov
mov
das
js
mov
push
lahf
lock
jg
lds
push
mov
xchg
inc
in
cmp
add
insb
aad
mov
insb
pop
aas
and
push
pop
cmp
xchg
lret
cltd
loopne
sub
and
sbb
xchg
add
test
in
sub
add
clc
add
sahf
aad
push
xor
lret
lods
add
mov
cmp
jb
dec
flds
jnp
iret
mov
adc
xor
xchg
mov
mov
movsb
mov
out
into
je
push
mov
jae
cmp
sbb
loope
cmp
arpl
sti
inc
or
popf
lock
sbb
mov
ret
xor
in
cmp
mov
xchg
fadds
inc
jmp
enter
dec
fistl
negb
add
shlb
sub
adcb
lods
in
inc
inc
mov
es
movsl
mov
adc
push
or
jnp
sahf
jbe
int3
xor
bound
test
add
stos
sub
pop
fldcw
dec
adc
ljmp
stos
lods
cmp
xor
cwtl
mov
cmp
aaa
inc
fnstenv
ficoml
xchg
push
mov
xorb
xchg
pusha
cmpsb
ja
pushf
cmp
pop
cmp
fwait
jo
data16
mov
xchg
and
pushf
add
stc
cmpb
xlat
sbb
push
fisttps
xchg
test
cwtl
xorb
pop
mov
push
arpl
sub
mov
inc
aad
add
loopne
sahf
inc
adc
xchg
push
test
ja
push
shlb
add
je
adc
sbb
leave
xchg
fstps
mov
cld
add
xchg
inc
mov
push
ja
lret
cmp
or
push
sti
imul
aas
sbbb
cmp
test
outsb
sub
scas
jae
lret
inc
add
cmpb
mov
test
xor
inc
aaa
lcall
pop
int
andb
jb
jae
daa
data16
xor
gs
push
insb
cmp
dec
and
pop
in
stc
xor
aaa
jns
stos
pop
sbb
pusha
jl
jp
scas
movhps
pop
or
jnp
pop
ret
add
jae
mov
gs
frstor
mov
andb
and
dec
sub
adc
andb
xlat
cld
sti
call
jns
pop
pop
lcall
clc
push
js
outsb
fists
jmp
test
fnstcw
popa
push
xchg
mov
pop
mov
out
jle
mov
idiv
aaa
sbbb
into
clc
sub
movb
lds
fwait
bnd
sbb
push
pop
in
bound
adc
movl
push
jp
inc
mov
sbbb
push
mov
imul
adc
adc
andb
pushf
jmp
cbtw
sub
fs
mov
and
iret
loopne
sub
mov
daa
scas
mov
dec
lds
mov
jnp
rcrl
xchg
les
pop
in
and
sbb
ret
push
jae
or
adc
sti
push
addr16
cli
xchg
xchg
pusha
subb
daa
lock
subb
daa
mov
in
je
mov
ja
xchg
cmpsb
cmp
mov
lock
pop
lret
push
insb
lret
orb
arpl
sahf
ss
fists
fistpl
add
shlb
cmc
mov
sub
fisubl
adcl
cmpsb
dec
xchg
mov
shll
mov
xor
sub
test
cmp
icebp
and
xchg
testl
leave
stos
adc
rcrb
addb
shrb
nop
inc
mov
push
maxps
jae
xor
inc
mull
push
xchg
ljmp
lds
std
xorl
sub
cmpsl
add
rolb
aas
dec
xor
fmull
jno
subps
hlt
adcb
pop
cld
sub
loope
sub
cmp
xchg
aam
rorb
pop
lods
push
mov
push
or
xchg
jo
call
jp
sbbb
push
xchg
cwtl
dec
sub
popa
sbb
imull
adc
aas
mov
jecxz
pop
xchg
mov
mov
fucomi
loop
dec
push
test
jo
sbb
xor
mov
jne
mov
and
mov
pushf
mov
divl
inc
adc
sti
adc
subb
sub
imul
mov
data16
bound
fiadds
stos
or
cli
andb
dec
dec
jns
insb
xor
mov
dec
subb
leave
pop
int3
dec
shl
add
int
inc
push
test
lret
inc
push
pushf
add
call
loope
ud1
xor
xchg
movl
dec
mov
rcrb
push
lds
inc
xorb
pop
sti
xor
cltd
ret
xchg
test
push
je
push
dec
hlt
loop
mov
mov
pushf
je
fisubl
inc
sbb
daa
mov
inc
push
mov
xorb
jl
adcb
loopne
insl
add
int
adc
scas
das
orb
mov
xlat
jle
loope
jg
dec
scas
ficoms
cmp
arpl
adc
test
mov
xor
mov
cmp
adc
jg
das
adc
xlat
push
lcall
repz
mov
xor
loope
add
dec
movsl
adc
jns
sub
jg
sbb
ja
call
test
sti
mov
jg
lods
and
test
sub
subb
loope
adcl
stos
cmp
add
inc
movsb
sub
and
mov
cs
andl
push
mov
inc
cmp
inc
ret
cmp
cmpb
flds
ds
add
mov
loopne
scas
dec
cmp
cmp
sub
sbb
inc
xchg
adc
daa
popa
xchg
xorb
orb
mov
addb
mov
cmpsl
cmp
sti
add
inc
add
cld
sbbb
mov
jmp
push
je
in
push
mov
inc
in
sahf
mov
aaa
data16
imul
mov
jne
mov
adc
icebp
xchg
adcb
push
pop
scas
inc
loopne
dec
hlt
jno
addl
sub
adc
fidivrs
push
pushf
addb
out
outsb
orb
sarl
add
movsl
subl
dec
adc
insl
inc
sti
push
push
shlb
fsubrl
imul
fidivs
cmp
jns
movsb
add
add
mov
or
sub
in
pusha
lret
pop
cwtl
clc
adcb
cltd
dec
cmpb
add
andb
ret
fisubrl
lods
jg
mov
add
popa
out
xor
dec
cld
fisubrl
dec
icebp
in
xor
dec
inc
cmc
adcb
lock
fisubrs
andb
loope
or
cmp
into
sub
add
add
jae
pop
pop
lahf
adc
dec
push
lcall
push
in
jecxz
sub
or
dec
pop
movsb
jns
pop
xor
cmpsl
add
stos
push
push
add
sbb
or
int
jmp
xor
jle
mov
jecxz
subb
loope
iret
test
push
cld
rorl
xor
int3
es
push
jl
out
mov
sbb
add
jg
fs
pop
add
sub
pop
sbb
push
sbb
rorb
push
repnz
notl
add
jbe
mov
cs
pop
pop
pop
xchg
popa
jo
jmp
js
cwtl
jge
jb
push
pop
jge
cltd
inc
icebp
outsb
lock
jb
movsl
jb
out
daa
ljmp
cli
daa
push
in
aam
shlb
lret
add
aad
dec
pop
jnp
mov
sbb
lcall
or
popl
and
rol
dec
push
or
jo
push
loopne
jo
out
mov
pop
data16
jge,pn
mov
or
jge
rcl
mov
jl
dec
cltd
adc
int3
jae
mov
les
sbb
dec
in
xor
pushf
out
dec
clc
outsb
xor
inc
add
push
les
pop
xor
xor
xor
mov
xchg
push
add
mov
and
mov
sbb
data16
push
decl
fiadds
out
mov
add
mov
xor
dec
add
test
or
popf
lret
mov
lea
lea
notb
mov
pop
jg
sub
and
lahf
cmpsb
mov
sub
adc
test
aaa
mov
add
adc
sbb
ss
rcll
hlt
xor
jl
jo
jge
fsubrp
and
and
sbb
mov
jp
inc
push
popa
mov
xchg
inc
sbb
push
add
xchg
add
sbb
xchg
es
jns
cltd
sub
imul
cmpsb
and
push
bound
push
add
in
in
xorl
jecxz
dec
out
pop
push
shlb
lods
xchg
adc
and
or
vmovq
and
dec
flds
sub
leave
pop
mov
jnp
jno
scas
jmp
jl
or
inc
enter
movsb
jle
mov
jo
test
scas
cltd
sarb
scas
js
and
jnp
xor
cmpsl
inc
mov
lods
enter
loopne
add
inc
inc
pop
mov
fs
cli
loopne
jb
addb
lret
add
sbb
pop
jns
or
xchg
add
mov
add
lcall
mov
add
xchg
scas
ficoms
lea
xor
stos
stc
movsl
nop
inc
sub
push
fwait
out
mov
rcl
jns
adc
sbb
jmp
jno
sub
cmp
test
sub
inc
fnsave
xchg
xor
pusha
mov
loopne
sub
in
mov
les
jnp
lods
xchg
out
jae
or
repnz
ret
pop
daa
pop
sti
iret
xor
mov
xchg
das
inc
pop
cltd
adc
push
inc
mov
inc
popa
sbb
ficoml
xor
cmp
or
fwait
push
inc
arpl
inc
ret
movsl
add
lods
arpl
adc
js
ljmp
inc
enter
cs
nop
pushf
int
add
sub
divl
scas
mov
orl
stc
push
mov
les
xor
jg
jae
dec
mov
dec
and
push
les
jo
push
sub
jae
insb
add
into
xor
cltd
xor
mov
adc
mov
jo
paddusb
rcrl
pop
xchg
aam
jp
cmp
and
sahf
xchg
xor
shrl
xlat
jp
lcall
inc
mov
insb
fiaddl
cli
jo
dec
xchg
shlb
add
sbb
mov
pop
jl
nop
roll
in
push
xchg
cmp
jbe
aam
shll
mov
stc
mov
test
cmpsb
jge
or
in
es
cltd
outsl
cli
pop
mov
dec
imul
jp
and
subb
sarl
shlb
shrb
stc
jge
jae
mov
sbb
outsb
xchg
lds
or
push
mov
imul
jl
push
fisubs
jae
or
cmc
xchg
xchg
push
in
jno
adc
or
in
lock
ljmp
cs
dec
mov
and
jne
mov
add
fcoms
roll
push
pop
push
jns
pop
cltd
sbb
lcall
jp
jo
fimull
xchg
adcl
in
in
cmp
sbb
dec
repz
xchg
inc
mov
ret
and
sub
in
in
xor
and
mov
adc
mov
fnstsw
stc
test
popa
or
out
inc
sti
jo
test
scas
and
mov
sti
cmp
sub
cmp
mov
lahf
or
inc
cltd
mov
mov
movsl
cmp
test
and
sub
jp
stos
fsub
and
outsl
loope
mov
cmp
aam
movsl
jne
sar
mov
shr
or
inc
inc
lcall
adc
sub
jge
stc
mov
sahf
xchg
sub
mov
or
mov
pop
cmp
enter
fwait
cs
jecxz
xchg
sub
mov
pop
fadds
add
xchg
rclb
ljmp
push
jno
cli
cs
push
int3
xchg
jl
jbe
scas
sahf
in
cltd
mov
sub
push
push
mov
mov
call
sbb
inc
icebp
xor
ffree
cmp
jbe
push
in
or
in
push
lahf
orl
inc
out
cmp
subl
subb
jne
cltd
pop
cmp
sbb
mov
jg
xor
fidivrl
push
mov
xchg
xchg
ret
lods
aaa
arpl
sub
pop
adc
lcall
lret
ficompl
push
leave
cli
cltd
imul
shl
mov
loope
testl
popf
add
pop
pop
popa
std
clc
push
pop
xor
fiadds
sbb
sbb
aaa
int
jne
leave
add
ljmp
ja
cli
xchg
aam
lret
divb
mov
and
jnp
insb
mov
xor
xchg
sub
sbb
mov
xchg
outsl
test
repnz
shlb
in
popf
add
xchg
mov
pushf
dec
jnp
sbb
inc
je
ja
mov
mulb
and
pop
adc
xchg
negl
ds
pop
xor
push
push
lret
in
xor
push
call
pushf
adc
jle
insl
fists
jle
jecxz
dec
lea
test
int
push
sub
sarl
and
cltd
jl
aam
sahf
jmp
insb
rclb
jmp
sbb
lcall
and
push
dec
stos
sbbl
orb
push
inc
sbb
xchg
jle
fcomps
lods
outsl
cmp
stc
sub
lds
add
cltd
dec
movsb
mov
adc
out
cmpsb
push
in
mov
adc
lock
cmp
push
mov
jge
cmp
jo
enter
and
in
aaa
and
fs
bound
add
lcall
jg
inc
push
jbe
sbb
cwtl
or
cmp
sar
scas
jns
and
fildl
aaa
aaa
stc
into
push
leave
jo
and
shl
scas
jle
mov
lods
and
push
jg
xchg
bswap
sahf
adc
sahf
shrb
scas
les
sbb
jecxz
mov
ds
mov
xchg
or
xlat
sarb
pushf
add
fnstsw
dec
test
mov
rep
xor
insb
push
repnz
or
sbb
sbb
mov
lcall
jecxz
mov
sbb
sbb
dec
push
rclb
in
push
inc
xor
je
jne
int3
cmp
push
jb
jmp
fistpl
push
stos
adc
adc
icebp
jmp
jno
mov
dec
shrb
cmp
xchg
mov
add
ret
xchg
sub
sbb
or
insl
mov
dec
rol
icebp
xchg
mov
adc
xchg
mov
adc
jecxz
fistl
popf
mov
sbb
xlat
sti
insl
subb
mov
test
jns
arpl
inc
insb
adc
pushf
or
std
dec
fdivs
loopne
jo
lock
lea
cli
xchg
subb
and
jbe
fisttpl
xor
pop
out
cmovbe
js
or
out
inc
movl
push
popa
mov
in
inc
jge
aas
in
inc
mov
jle
into
xor
ret
adc
or
ret
lret
inc
adc
mov
cmp
loopne
das
divb
insl
sub
add
lret
scas
inc
cmpb
cmp
aad
and
stos
lret
jl
lahf
xchg
fcmovb
test
loope
mov
clc
fs
into
add
inc
sub
mov
pop
mov
and
int3
andb
sub
jp
xchg
lahf
mov
stos
stos
inc
test
dec
adc
cmp
cmc
in
idivl
cmp
or
mov
loopne
jge
inc
xchg
aas
jns
ret
roll
in
int3
mov
inc
mov
pop
or
jg
mov
sahf
aam
out
ja
inc
stos
cmp
jns
jnp
int3
xorb
nop
int
xchg
pop
and
push
data16
mov
aad
add
pop
jge
and
orl
mov
sub
cmp
retw
mov
xchg
dec
adcb
dec
out
pop
inc
push
aad
into
mov
int3
filds
push
mov
cmp
lods
subb
mov
sub
inc
mov
mov
and
in
les
cmp
rcl
mov
and
push
or
cmpb
nop
mov
orb
aad
addb
outsl
xorb
cmpsb
orb
jne
adcb
arpl
rcrb
stos
daa
lahf
sbb
out
mov
pushf
xchg
add
es
bound
call
xor
fcoml
aas
fucom
sub
popa
xchg
arpl
int
das
insl
and
sbb
and
inc
lcall
mov
inc
jp
cmp
pop
popa
mov
pusha
loop
stc
push
mov
out
and
or
push
cwtl
in
push
or
dec
gs
es
sub
out
xchg
and
mov
xor
sbb
mov
and
mov
xlat
enter
mov
mov
mov
ja
call
pop
mov
sbb
jle
add
jp
xor
addb
jo
movsb
pop
sbb
or
xlat
and
in
test
lds
mov
jae
std
sub
arpl
mov
in
pop
push
dec
xchg
push
inc
mov
push
jne
mov
pushf
push
aaa
test
mov
add
fnstenv
jmp
add
and
xlat
ja
pop
in
mov
pop
scas
push
stos
push
mov
push
into
das
adc
enter
add
fdivs
stos
xchg
out
ljmp
jecxz
inc
adc
orl
mov
loop
mov
pop
jb
imul
xor
pop
out
sarl
jnp
insb
sub
nop
xchg
movsb
in
testl
mov
and
call
or
neg
jle
sbb
or
lock
add
loop
fadds
cltd
movsl
or
inc
insl
outsb
xchg
sub
pop
mov
dec
and
push
dec
inc
hlt
nop
lcall
xor
sarl
in
outsb
mov
push
push
mov
in
loope
das
mov
sbb
and
pop
lret
lcall
xlat
mov
cmc
lret
jl
mov
cwtl
loopne
pop
ret
out
mov
int3
int
insb
outsl
loope
jl
daa
outsb
andb
jb
or
or
loope
cld
cltd
ret
jmp
nop
xor
ret
sub
aad
push
xor
nop
cmp
call
roll
mov
lods
inc
mov
movsl
ret
cmp
cmp
arpl
xlat
pop
pop
cltd
xor
jns
scas
jbe
jo
inc
lds
enter
out
jecxz
mov
mov
fwait
test
test
mov
fisubs
stc
imul
cmp
insb
cwtd
xor
sbb
in
inc
std
mov
popa
or
xorb
shl
icebp
repz
test
movl
sub
subb
adc
std
xchg
jmp
cmp
stos
mov
jg
mov
in
add
pop
push
inc
push
add
cltd
mov
insl
es
cwtl
addb
sub
std
lret
xchg
addb
sbb
push
adcb
cmp
jle,pn
loopne
mov
xchg
mov
xchg
mov
mov
jo
dec
mov
dec
pop
and
push
movsb
into
fisubrl
in
dec
cld
leave
pop
xor
cwtl
repnz
jae
ja
jg
or
nop
in
add
mov
adc
cli
sbb
jno
sub
subb
mov
testb
ficoml
pop
pop
sbb
insl
stos
fsubl
sbb
inc
ss
imul
imul
sbb
adc
pushf
xor
inc
sbbb
aas
adc
mov
mov
imul
add
and
scas
push
ss
sbb
jg
int
jnp
sbb
xor
in
leave
addb
inc
adcl
cmpb
mov
je
dec
stos
mov
dec
xorb
sub
push
mov
dec
add
outsl
lcall
mov
cmp
mov
popa
sub
add
into
hlt
pop
mov
out
push
outsl
mov
pusha
jne
xorb
dec
mov
int3
adc
mov
add
adc
jo
aaa
xchg
ret
jae
gs
sub
xchg
fildl
push
cmp
mov
sahf
xorb
mov
ret
dec
andb
scas
mov
orb
dec
xchg
pop
mov
lock
cli
add
sbb
movq
ss
inc
push
add
loope
dec
mov
lock
mov
pop
js
ficoml
movsl
out
xorb
stos
lock
xor
sbbb
in
sbb
addb
push
daa
inc
idivb
andb
mov
adc
xorb
jmp
and
ret
xorb
mov
lea
stc
jns
mov
test
and
pusha
push
xor
and
popf
pop
stc
mov
mov
jae
shl
and
jg
xor
imul
mov
outsb
sbb
and
push
add
je
icebp
cltd
mov
push
jns
ficoms
leave
ret
popf
imul
add
inc
mov
enter
inc
shl
outsb
add
fs
jp
add
movl
push
loope
cmpb
pop
sbb
lds
inc
mov
xchg
or
cmc
sub
xorb
das
andb
lret
adcb
inc
xchg
addr16
xor
add
mov
sbbb
xor
addb
std
fistl
call
jmp
in
and
popf
loopne
jno
push
or
adc
sub
jo
rcrl
lds
jnp
jae
pop
mov
outsl
add
popf
and
push
xchg
cmpb
jl
rorb
mov
popa
mulb
add
ja
movsb
sbb
loopne
mov
roll
lods
test
imul
ljmp
jmp
addb
xchg
ret
jle
arpl
hlt
add
cmpsl
cmpb
fbstp
adcb
repz
cmp
dec
std
or
jne
jg
mov
jo
je
clc
mov
movl
xchg
cmpsl
push
test
sbb
mov
imul
fs
pop
push
test
jecxz
or
adc
icebp
xorl
pop
stos
lahf
push
jae
mov
add
adc
jp
popl
add
insl
add
adc
or
fwait
les
add
jno
ret
mov
add
cmp
adcb
dec
outsl
push
test
mov
and
fiaddl
arpl
dec
adc
mov
les
in
mov
ficoml
ja
sub
out
mov
cmp
jmp
inc
dec
xchg
mov
push
mov
outsb
jno
into
push
test
push
jmp
sub
sahf
movsb
mov
out
and
xchg
pop
jnp
movsl
mov
xchg
push
jmp
jle
push
stos
test
adc
pop
mov
inc
cld
fidivl
ljmp
insb
movsb
leave
lcall
push
cmp
jns
ret
mov
xchg
cli
jnp
push
dec
mov
sahf
pop
lock
sbbb
mov
push
inc
clc
pop
add
in
mov
mov
inc
jmp
jae
mov
jecxz
jne
dec
sbb
mov
test
bound
jg
lret
pop
mov
pop
inc
jb
and
sub
push
movl
cmp
push
movsl
xorb
and
xchg
mov
adcb
lods
pop
jae
sbb
sub
loopne
jns
test
out
sbb
jg
pop
mov
pop
jbe
xchg
lret
jnp
and
in
andb
sbb
lods
jecxz,pn
repnz
subb
enterw
xlat
orb
dec
inc
xchg
daa
xchg
jnp
pop
pop
movsl
mov
adc
jb
mov
cmp
loopne
push
mov
insl
add
ja
in
lea
jnp
inc
pop
subb
lods
inc
sub
mov
sbb
push
sbb
sub
in
out
outsl
xor
lods
mov
pop
es
mov
push
imul
orb
cmpsb
addl
fs
jp
scas
roll
mov
and
sub
das
cmp
mov
aad
jae
in
sbb
adc
andb
and
aaa
jnp
cwtl
jmp
scas
add
xchg
inc
imul
fimull
lods
fisubs
mov
dec
xor
jnp
clc
dec
aas
imul
cmp
test
adcb
or
push
xor
movsb
movl
jnp
clc
jl
in
sub
pop
jo
pop
outsb
orb
xchg
mov
push
adc
int
cmpsl
sub
inc
lods
jmp
cmp
sarb
shl
xor
nop
test
jns
in
addb
dec
jle
mov
xor
sbbb
mov
sbb
adc
and
cmp
ss
ss
push
lock
int
xchg
punpckhdq
mov
adc
arpl
shlb
jae
bswap
pop
xchg
mov
mov
orb
testl
pop
mov
cmpb
cs
cmc
fdivrs
mov
andb
sbb
out
dec
movsb
call
rcrb
ss
rcrl
orb
add
fidivl
in
mov
hlt
jge
std
inc
fcomps
ret
jbe
xor
dec
movsl
cmp
sbb
arpl
das
lret
and
xchg
jle
es
cmc
andb
inc
xchg
mov
sbbb
stos
push
inc
sbb
fisttpl
sbb
test
shll
adc
ss
push
in
cs
test
pushf
loop
popf
or
cmpb
xchg
cmpsb
jns
filds
push
mov
scas
dec
xchg
adc
inc
andb
subb
popa
enter
jg
aas
orl
cld
sbb
jg
inc
jbe
sbb
add
add
sbb
je
in
jns
into
sti
in
jb
sub
ljmp
jnp
jle
sub
leave
or
orb
cs
inc
xchg
aas
test
mov
and
stos
add
pop
add
mov
scas
clc
inc
sbbb
xor
inc
cmp
repnz
mov
dec
scas
mov
xchg
xchg
loope
jnp
test
xchg
mov
inc
dec
mov
stos
adc
and
lahf
xchg
cs
psubsb
cmp
int
mov
and
lock
or
pop
sub
ss
fldcw
mov
stc
leave
sub
fwait
xor
xchg
les
lds
mov
cmp
and
pop
pop
push
pushf
jle
jae
int
mov
cwtl
sub
mov
fildl
int
mov
sahf
mov
mov
cmpsb
push
les
inc
je
scas
lret
subb
cmc
xchg
loopne
in
cltd
movsl
xor
pop
or
push
jbe
dec
aam
fbld
ret
mov
shll
bound
mov
jbe
mov
lret
push
cltd
inc
cltd
daa
std
ljmp
sub
jnp
jb
lock
push
vcvtdq2ps
jb
xor
daa
inc
loope
and
mov
and
scas
leave
mov
test
sbb
xor
scas
or
mov
sub
pop
lock
lea
xor
insb
and
int3
dec
sbb
mov
mov
imul
adc
gs
aam
test
fisubs
in
adc
sti
push
and
fimull
xchg
or
pop
out
pop
push
fdivl
or
sbb
test
mov
add
clc
subl
lock
cmpsl
cli
jl
test
pop
out
stc
push
icebp
fwait
push
popa
lret
sub
inc
cltd
sbb
xor
xor
icebp
insl
std
andl
mov
add
cmc
jle
or
dec
fiadds
pop
mov
mov
int
push
cli
mov
add
in
mov
push
ds
add
ds
mov
adc
data16
or
lcall
into
jo
jp
icebp
pushf
mov
pop
inc
in
inc
ret
pop
mov
and
cmp
push
add
movsb
sbb
sbb
xor
jo
dec
lret
and
out
das
ret
ret
mov
push
in
jg
jp
mov
push
inc
mov
cmp
int
movsl
je
lret
jns
push
aaa
mov
push
jle
in
xor
popa
mov
ret
dec
stos
in
mov
push
push
clc
add
out
and
mov
mov
nop
inc
and
mov
bound
lcall
arpl
fidivrl
pop
stos
ss
or
movsl
xlat
push
icebp
cli
fisttpll
cmc
loop
mov
jbe
scas
fsubs
lret
pop
out
pop
aam
cmp
inc
das
adc
add
fs
scas
xor
sti
fisttps
cli
inc
stos
pop
test
sub
mov
ja
add
std
je
jae
sbb
xor
sbb
lcall
dec
mov
mov
pop
and
mov
dec
inc
and
xchg
pop
fisubrs
xorb
pop
lods
repz
pusha
cmpsl
fs
xor
xlat
dec
xchg
push
test
or
subl
insb
sub
sub
loopne
addr16
jae
cmp
movsl
loopne
push
mov
add
or
inc
int
push
js
xor
data16
mov
loopne
xor
sbb
daa
loop
xor
sub
fsub
addb
cmp
push
add
jmp
mov
sti
and
frstor
and
adcb
ss
mov
je
lret
and
inc
jl
aaa
xor
and
test
out
stc
movsb
cmp
cmpsl
sbb
adc
jo
lds
mov
or
int
hlt
push
ja
pusha
aaa
lods
mov
pop
sbbb
fs
lds
nop
jb
pop
jns
jne
sub
pop
add
xchg
add
ds
int
sbbb
jge
cltd
addr16
enter
jns
lahf
out
push
push
jg
jno
scas
pop
mov
ds
mov
jge
sub
cmp
nop
ljmp
cmp
fucom
stos
jle
bound
jg
mov
insl
jge
cltd
jecxz
mov
adc
ja
leave
adc
sub
pop
push
andl
popf
push
mov
mov
lods
add
lods
jnp
xor
xor
jecxz
movsb
push
leave
mov
mov
jl
lcall
popa
cmc
xor
dec
out
imul
cmp
adc
lret
dec
jne
push
in
sbb
add
pop
or
bound
mov
add
jmp
aaa
sub
bound
mov
xor
mov
mov
jo
bound
mov
repnz
mov
jns
pop
sub
inc
stc
lods
mov
scas
dec
das
xchg
repnz
mov
fisttpl
mov
fildl
ljmp
movsb
aam
test
push
mov
repz
inc
outsl
adc
xor
sbb
pop
fildll
xchg
clc
mov
ss
or
repnz
pop
aaa
adc
dec
stc
jae
mov
into
jbe
dec
jnp
ja
lcall
nop
test
mov
les
mov
sbb
mov
stc
cmp
adc
jge
andb
out
dec
shll
or
jp
inc
push
jne
mov
pop
addr16
leave
jecxz
sar
bound
out
andl
lock
sbb
mov
imul
mov
rcl
ret
ljmp
inc
nop
fists
ljmp
xor
imul
popa
stos
cmc
and
mov
outsb
mov
repnz
fs
loope
xor
jo
out
xchg
sub
pushf
ret
sbb
pop
and
popf
leave
or
mov
imul
stos
in
pusha
adc
xor
hlt
mov
push
roll
cld
and
ret
xchg
push
outsl
imull
mov
cltd
dec
pop
jle
lcall
idivl
mov
jnp,pn
rolb
popa
jmp
shr
add
mov
mov
push
mov
inc
lret
inc
cwtl
out
mov
jmp
push
cmpsb
cltd
call
ret
test
sbb
hlt
xchg
push
lcall
test
lea
fxch
jb
xor
sub
pop
mov
jns
int3
adc
sub
cltd
out
aas
jb
les
test
xchg
ds
pop
cli
int3
imul
insb
add
inc
rolb
in
test
and
es
push
mov
fildl
jns
mov
lds
xorl
mov
cwtl
mov
ja
leave
jbe
sahf
push
or
mov
push
jecxz
xlat
or
sbbb
or
inc
jbe
das
scas
pop
cmc
les
or
test
cli
jns
xor
dec
pop
in
xor
rclb
shlb
push
leave
lahf
les
and
das
add
jl
decb
into
fs
mov
xchg
movsl
ljmp
lcall
sub
mov
loop
gs
add
lods
lock
cltd
and
pop
in
jb
jmp
mov
jo
mov
cli
dec
mov
clc
cld
cmpsl
ds
emms
xchg
cli
and
pop
and
adc
imul
mov
pop
ss
sub
cli
cmp
repnz
addl
data16
lcall
push
mov
sub
jne
add
mov
aas
jbe
jle
mov
jb
imul
sub
popa
mov
ljmp
xchg
lret
lds
test
inc
test
cmp
add
in
cltd
mov
pusha
inc
xchg
sub
inc
test
lock
xor
sub
cmc
aaa
ret
lcall
out
fidivl
nop
loope
cmp
jg
pop
lret
int
pop
add
inc
aaa
cltd
mov
les
jle
xchg
xor
test
adc
lcall
jle
cmc
mov
cmpsl
mov
mov
push
sub
sub
mov
jb
mov
fs
cwtl
cltd
sbb
gs
pop
stos
subb
mov
jnp
call
add
ds
or
pop
xchg
lcall
jo
aaa
leave
arpl
notl
mov
cld
out
bound
xor
jae
dec
jecxz
push
mov
cmpsl
das
jo
popa
jg
jae
jnp
mov
andb
inc
push
enter
sbb
add
adc
push
cld
imul
movsb
cmp
fisubrl
fadds
mov
mov
sbbb
rolb
daa
pop
cmpb
adc
inc
push
push
lret
stos
dec
xchg
stos
testl
shll
adc
dec
xor
mov
orb
push
loop
pop
scas
xchg
frstor
lods
mov
jnp
cmp
inc
test
add
xor
pusha
inc
or
pop
filds
test
popl
inc
lret
loop
je
cmpb
pop
std
jg
addr16
subb
lret
out
jg
mov
mov
add
inc
data16
xchg
pusha
in
jae
mov
enter
add
jg
aad
push
xchg
mov
subb
jns
jg
sahf
or
lret
cmp
scas
addb
sub
arpl
lea
test
ljmp
enter
mov
push
mov
and
xlat
jb
mov
icebp
sbb
jne
mov
lods
mov
mov
outsl
stos
pop
dec
ficomps
ljmp
sarl
xor
aaa
cli
xorb
jbe
outsl
mov
or
xor
stc
orl
lds
add
xchg
inc
in
mov
pop
inc
cmp
xlat
fwait
rcll
mov
dec
inc
scas
sbbb
lods
aam
fildl
xchg
jle
iret
mov
add
pop
fs
mov
xchg
sbbb
nop
js
adc
and
xchg
push
lahf
fldenv
int3
cmpsb
adcb
daa
mov
bound
dec
into
fmull
xor
jge,pn
shl
or
mov
mov
popw
sub
jno
cwtl
jne
push
in
rclb
mov
in
jle
xor
dec
jbe
cmp
push
xchg
orl
mov
push
mov
mov
ret
add
mov
test
cmp
fs
loopne
mov
mov
jb
jnp
idivb
lahf
mov
in
pop
or
mov
jl
push
lahf
leave
add
ret
arpl
push
lods
push
daa
orb
cmp
movsb
les
jnp
es
jno
xchg
adc
add
gs
movsl
sbbb
jle
ja
push
xor
inc
jnp
push
cwtl
pop
arpl
mov
sti
jmp
imul
out
movl
lret
jle
inc
aas
ret
and
xor
fs
call
lret
es
ret
stos
pop
xorl
inc
push
mov
cmpsb
in
mov
sbb
gs
js
testl
andb
adc
jnp
pushf
and
mov
jns
insl
mov
cmpb
loope
cmpb
repnz
pop
xor
xor
add
mov
ret
aad
mov
je
sbb
push
rolb
icebp
mov
andb
lcall
xor
mov
xchg
and
xchg
outsl
push
jnp
dec
inc
mov
outsl
mov
mov
or
jbe
mov
add
sbb
andb
mov
push
xchg
push
sub
or
inc
add
pop
addb
enter
pusha
stos
xorb
ds
sub
and
pop
and
or
rolb
add
lods
xor
mov
xorb
sarb
mov
cmp
arpl
mov
dec
inc
ror
inc
cmp
cmp
add
hlt
call
xor
mov
sbbb
rorb
aad
subb
pop
adc
jnp
xor
pop
jno
xor
mov
aad
or
sub
enter
jmp
cwtl
clc
loop
sub
inc
mov
lret
and
add
adcb
jecxz
jnp
enter
mov
jge
pop
outsb
mov
ret
lock
clc
iret
pop
xorl
fidivrs
jge
jnp
mov
pop
cs
xchg
sarb
test
ret
ds
cmp
push
mov
out
cld
lea
daa
xchg
sbbb
xor
add
orb
in
mov
dec
xor
inc
es
jg
jp
repz
pop
inc
aad
xor
mov
inc
pop
adc
ret
je
shll
cli
fldenv
test
or
pushf
adc
roll
and
incl
pop
add
loopne,pt
cmpb
jb
lahf
sub
dec
int
mov
enter
or
mov
shrl
pop
jb
adcb
lods
lahf
and
dec
push
dec
jbe
mov
add
lret
xchg
ds
les
sbb
adcl
fcoml
mov
push
int3
andb
rolb
outsb
jecxz
or
lsl
sti
in
push
mov
or
mov
movsb
add
je
jge
add
iret
mov
mov
fs
dec
rol
aas
push
popa
mov
das
in
jno
test
lcall
inc
mov
andb
loop
xor
stos
sbb
push
mov
kandnw
or
jg
scas
lret
movsl
xchg
adc
jle
adc
dec
jg
mov
mov
fidivrl
subb
pop
xchg
ret
imul
inc
pop
adc
jb,pt
and
loop
rcrb
insb
dec
imul
push
mov
dec
rorl
push
imul
xlat
xor
pop
insl
mov
sub
mov
mov
aas
xchg
jl
xchg
in
sbb
pop
addb
or
adc
fisubl
xorb
add
inc
sbb
sbbl
mov
cmpsl
mov
rol
nop
push
jne
ja
decl
push
gs
in
dec
cmpsb
addb
aam
or
cmp
adc
pop
arpl
dec
mov
mov
jnp
inc
or
mov
push
fsubr
add
push
movsl
or
and
or
mov
pusha
rorb
push
push
ja
sbb
mov
sub
pop
mov
add
js
and
shrb
cmp
in
mov
push
out
mov
out
repnz
pop
cmpsl
or
ljmp
or
push
ds
xchg
sbb
cli
mov
pop
mov
mov
mov
lcall
push
stc
sub
push
aad
add
sbb
pop
adc
pop
int3
rcrb
decb
jg
sbb
lcall
fcoms
push
lock
imul
jge
cmp
cmp
pop
sub
mov
in
adc
testl
filds
mov
cmc
inc
dec
mov
lcall
push
push
jae
rorl
mov
imulb
xchg
test
fmul
inc
daa
xchg
test
stc
and
out
add
fildl
aad
xor
cmp
sbb
fs
push
in
jo
jne
cmpsb
mov
enter
inc
lret
cltd
xor
mov
sbb
in
and
sub
pop
push
fmul
stos
adc
jb
outsl
stos
ret
jnp
insl
jbe
add
inc
int3
ret
dec
xchg
or
imul
jo
push
pop
and
mov
sti
inc
pop
xor
mov
dec
mul
or
pop
xchg
adc
lods
jg
movsl
int
xchg
sbb
subb
shll
cltd
jecxz
pop
jno
stc
fiadds
mov
jle
subb
hlt
jb
loopne
lahf
mov
add
add
adc
sbb
aaa
rolb
jle
ficompl
out
test
movsb
subb
add
sbb
pop
mov
outsl
in
mov
subl
addl
in
std
pop
mov
mov
dec
out
ds
andb
loopne
or
push
daa
repnz
xorb
push
lock
jnp
jmp
mov
out
pop
inc
mov
out
mov
adc
test
stos
sahf
ja
mov
ss
rcrl
pop
cmpsb
cmp
fs
xchg
subb
inc
dec
lahf
sub
lock
hlt
in
mov
inc
mov
mov
xchg
cmp
orl
mov
xor
cmc
subl
test
stos
sti
sub
aas
mov
popa
pop
mov
jmp
inc
mov
pop
mov
leave
outsl
repnz
xchg
mov
cmpb
jle
pop
clc
and
mov
fiadds
jp
loope
jl
andl
adc
cmp
xchg
cli
add
pop
lods
mov
insb
lcall
stos
xchg
xchg
lret
and
add
insl
out
add
cltd
push
lea
mov
dec
jle
mov
xchg
lock
and
rol
mov
test
and
loop
xor
adc
xchg
xchg
mov
jecxz
ljmp
push
xchg
xor
addr16
enter
pop
movsb
adcb
stc
test
je
mov
sbb
leave
cmc
stc
jecxz
jl
mov
push
lahf
mov
fimuls
cmpl
pop
adc
jle
adc
sbbb
lea
divl
cmpsb
add
enter
push
fstl
and
push
mov
ja
stos
push
xlat
sub
out
fstps
stc
push
add
loopne
mulb
sub
inc
mov
movsb
mov
mov
imul
push
int3
dec
nop
jl
xor
fisttpll
inc
cmp
push
out
repnz
movsl
mov
mul
ret
ds
pop
adc
push
mov
subl
add
ja
push
mov
sub
pop
outsl
jecxz
insb
orl
enter
pop
and
lcall
and
into
loopne
mov
addr16
stc
lods
aaa
out
jo
add
push
mov
adc
or
mov
pop
jecxz
int
or
jnp
inc
sbb
push
jns
js
clc
or
enter
std
mov
xor
cmp
jno
xor
mov
xor
lea
iret
sbb
fidivrl
add
xlat
cli
stc
jecxz
mov
fdivp
mov
nop
jno
ja
stc
push
dec
pusha
mov
xchg
jae
rcrl
mov
js
sub
sub
fwait
sub
mov
push
stos
pop
jo
mov
testb
mov
loop
mov
mov
stos
and
xchg
lods
pop
ret
mov
jecxz
sub
mov
in
xchg
test
stos
inc
test
in
pop
xlat
pusha
pop
inc
sbb
mov
xor
fbld
jecxz
inc
xchg
outsl
rolb
enter
fsubrl
adc
cmp
pop
dec
fs
cwtl
adcb
lods
lods
outsw
and
cmp
movsl
sub
loope
cwtl
xchg
ret
std
ss
mov
out
mov
mov
mov
dec
rorb
pop
sub
jb
aaa
nop
ja
push
add
push
dec
add
aam
pop
sbb
adc
jge
scas
bound
mov
xchg
cmc
les
mov
test
repnz
hlt
mov
jle
lcall
mov
jmp
in
cmp
mov
rcl
push
cltd
cwtl
dec
cwtl
jp
xchg
push
and
test
jg
jmp
jb
lods
cmp
stos
test
mov
roll
iret
xor
lret
sbb
pop
push
insb
lret
das
int3
lds
push
cmp
repnz
inc
push
lret
mov
or
jge
in
pop
mov
mov
scas
cmpsl
add
insl
dec
ds
xlat
stos
mov
mov
fstpl
or
pop
int
lret
fiaddl
fs
test
lea
and
xchg
sub
push
lock
mov
inc
mov
es
cmc
ret
and
sub
or
add
out
lahf
dec
jno
pop
insb
bound
mov
ret
add
push
test
mov
outsl
cmp
clc
std
cltd
xchg
out
dec
inc
xchg
jnp
xor
bound
and
jns
pop
in
pop
mov
xchg
scas
rorb
inc
arpl
stos
out
cld
cltd
push
jae
dec
cmp
mov
mov
ret
add
sbb
fistl
push
sub
jecxz
sti
test
lret
lds
jo
ss
aas
stc
jle
rcrl
sub
push
xchg
aad
add
daa
in
rolb
push
push
add
add
movsl
or
fwait
ret
pop
lret
pop
ss
icebp
jo
cltd
dec
test
cmpsl
cmp
shll
insl
mov
clc
jl
into
xchg
cld
add
pop
mov
icebp
jo
add
xlat
or
ja
push
sahf
fmuls
ds
cmp
dec
push
repnz
stc
popf
dec
xchg
mov
movsl
imul
add
daa
insb
xlat
cmpl
xor
iret
dec
lcall
push
pop
movsl
je
movsl
xlat
call
xchg
aaa
orb
lea
leave
loopne
add
aam
or
lcall
mov
xor
cmc
clc
das
sub
sub
fsub
and
rclb
mov
sbbl
inc
lahf
mov
cmp
aad
insb
lret
das
xor
lods
daa
lock
cvtdq2ps
push
movsb
in
inc
int3
xchg
pop
bound
jle
sbbl
pushl
jge
or
xor
add
sbb
xchg
inc
jge
cltd
sti
lahf
enter
outsb
inc
sbb
popf
add
enter
divl
mov
push
mov
out
ja
pop
cmp
or
scas
dec
sub
jns
lret
lcall
std
nop
into
std
xor
push
add
rcl
mov
push
sbb
jge
mov
push
pop
call
bound
lahf
roll
repz
cmp
sub
jno
or
nop
lcall
and
jmp
rclb
push
mov
or
and
add
bnd
mov
mov
mov
ds
int
push
popf
xchg
nop
aam
mov
mov
lcall
jo
sbb
inc
sarl
add
data16
jmp
push
mov
clc
sahf
leavew
pop
nop
scas
fs
mov
inc
insb
mov
mov
pusha
cs
sub
pop
lea
cli
dec
fwait
pop
bound
data16
or
pop
aad
js
daa
pop
in
mov
mov
mov
ljmp
push
jns
and
adc
xchg
xor
add
js
jo
std
pop
and
xchg
mov
out
rorb
ret
mov
nop
sub
je
add
scas
inc
xor
pop
in
cs
lods
sbb
hlt
cmp
bound
push
sahf
dec
jns
lds
inc
gs
mov
mov
fld
jb
cltd
push
xor
mov
xor
pop
mov
jge
arpl
xchg
outsb
hlt
push
or
mov
in
mov
cli
lret
imul
mov
aaa
outsb
lds
insb
cmp
push
clc
sbb
push
push
and
data16
add
inc
or
jae
mov
pushf
imul
idiv
nop
mov
shlw
inc
inc
pushf
imul
add
xor
sti
push
mov
mov
jmp
rcll
lcall
cltd
adc
dec
lret
sub
leave
xor
xor
cltd
dec
ds
mov
js
dec
cmp
bound
imull
sub
push
psadbw
pusha
pop
lret
ja
shlb
mov
pop
lock
jne
cltd
jo
repnz
xchg
shll
lea
insb
lods
xchg
cmpsb
int3
sbb
les
inc
xchg
inc
shlb
pushl
sub
fwait
cwtl
sub
pusha
cld
pop
sub
xor
xor
jge
add
lds
lods
jno
push
lock
inc
xor
add
imul
jecxz
rorb
xlat
loopne
insb
call
and
cmc
imul
pop
lds
adc
and
xchg
lcall
shl
cli
sbb
scas
sub
in
jmp
sti
stc
sbb
js
jo
mov
neg
cmp
sahf
lods
push
dec
out
xchg
out
adc
loope
xchg
lret
jo
xor
mov
lret
repnz
iret
lret
rolb
sbb
sub
inc
mov
les
cltd
xchg
adc
nop
in
xchg
push
sarl
incb
mov
test
sbb
pop
and
insb
out
pop
cwtl
inc
dec
xor
pop
xchg
add
cmpsb
decb
movsl
xchg
ret
shl
and
roll
jb
nop
jnp
je
lds
ficomps
enter
fmul
jge
mov
ja
sbb
fdivrl
cmp
sub
add
or
push
xchg
push
andl
jbe
pop
fdivp
sub
fcmovnb
insb
addb
add
inc
adc
or
adc
pop
insb
call
sbb
rep
and
js
pop
mov
inc
or
shrl
mov
pop
inc
xlat
and
pop
cltd
lcall
insl
push
repz
or
clc
shll
ret
push
sub
push
fs
mov
push
pop
sub
aas
adcl
or
sahf
loop
jne
cltd
add
inc
inc
add
movsb
ret
das
lods
mov
inc
mov
jb
adc
mov
outsl
adc
pusha
popa
cmc
cltd
mov
leave
std
lock
ljmp
scas
cmc
outsb
test
mov
ror
iret
imul
je
jbe
xor
scas
int3
in
xchg
ljmp
lcall
imul
fsubr
cwtl
xchg
icebp
add
ret
and
ds
add
jae
mulb
sub
jg
outsb
fcomp
and
jg
sbb
es
mov
mov
imul
cmpb
lcall
rcll
nop
pusha
lock
push
adc
xchg
dec
aad
test
xor
pop
sub
movsl
popf
mov
jl
jl
fs
lret
fcmovnbe
stc
cmp
dec
test
push
mov
jecxz
lahf
xor
js
sbb
pop
std
loope
fildll
rol
test
xchg
lcall
mov
js
cmpsb
leave
leave
outsb
xchg
out
inc
mov
sbb
ret
xchg
out
dec
mov
jl
pop
leave
push
cmpsl
add
xor
fs
stos
aam
jne
dec
inc
mov
call
stos
sbb
dec
stc
movsb
and
test
mov
xchg
add
ds
pop
ret
jmp
xchg
or
sbb
nop
cs
sub
insb
jb
adc
mov
cwtl
jae
add
cltd
and
add
and
sub
ret
cwtl
lahf
in
jb
push
rcrb
sbb
sub
es
or
push
cltd
push
mov
jae
and
hlt
movsl
pop
fisubrs
adc
sbb
iret
add
cltd
inc
pop
scas
mov
cmc
out
sarb
cmpsl
icebp
mov
push
mov
pop
push
adc
and
je
ja
push
loope
lds
add
mov
loopne
orl
test
push
aam
cwtl
test
test
fmull
test
sbb
call
xchg
or
lcall
jecxz
stc
ret
movsb
mov
sub
outsb
lcall
inc
popa
sbb
cmp
fisttpll
or
insb
aam
add
loopne
shl
xor
shrb
push
add
sbb
xchg
mov
bound
in
jno
jg
int3
xchg
out
mov
outsb
fwait
push
xchg
testb
push
mov
cmpb
out
mov
jl
sbb
xchg
sbb
jge
cmp
stc
sub
or
xchg
mov
sub
cltd
pop
rorb
mov
int
prefetch
push
arpl
pop
sub
mov
jo
test
sub
mov
ret
jbe
cmp
sub
xchg
lods
mov
pop
jo
fmuls
cltd
outsl
push
mov
cmp
cwtl
add
cmpsl
pop
push
hlt
shll
dec
dec
xchg
xlat
and
outsl
cld
mov
jns
lret
adc
jl
dec
cltd
sbb
enter
fisttpll
jbe
inc
call
test
sbb
push
outsb
insl
pop
sub
dec
cmp
adc
ss
dec
test
stc
or
je
push
xor
lea
jg
into
lea
scas
mull
stos
cwtl
xchg
fisttps
jns
xchg
cmp
roll
and
sbb
outsb
xchg
inc
stos
js
mov
xchg
mov
lret
or
fwait
xchg
push
inc
mov
repz
push
mov
add
fs
fimuls
lea
fcoml
xchg
and
shlb
mov
or
cltd
neg
repnz
mov
fcomp
imul
sub
jbe
mov
mov
imul
ret
and
jns
add
aas
dec
adc
lods
cmp
push
add
mov
push
aas
pop
or
cwtl
lret
enter
ljmp
stc
out
aad
orl
gs
adcl
shl
sbb
xlat
ret
mov
rcrb
add
stc
mov
and
mov
jecxz
fdivrl
js
insb
jge
je
jbe
lcall
cltd
add
xor
mov
enter
bound
cltd
mov
aam
cli
jns
pop
enter
cs
in
aam
mov
jae
fsubs
pop
nop
popf
jp
xor
popa
jmp
push
daa
loopne
outsb
ljmp
adc
jne
cltd
jecxz
fsts
xchg
xchg
xor
out
cltd
mov
sbb
clc
in
add
xor
fwait
into
mov
cmp
add
hlt
aad
mov
into
xor
mov
movb
aad
cmp
mov
ret
mov
mov
mov
testl
jbe
stos
mov
sahf
cld
jns
sub
movsb
in
xor
bound
or
xchg
sbb
ja
and
in
test
call
pop
pop
aad
in
cmp
cltd
rcll
sbb
test
xor
lds
xor
add
lds
push
nop
out
lock
add
sub
pushf
cmp
sbb
cmp
sbb
xchg
sub
ret
mov
pop
sub
inc
push
imul
cwtl
jmp
loop
fcompl
ss
sar
stc
jo
enter
roll
lcall
lahf
ljmp
cltd
mov
xor
inc
out
jae
fs
cwtl
push
jp
push
aad
inc
scas
lcall
dec
inc
push
in
gs
cli
pop
movsl
xlat
je
mov
loop
inc
ret
fs
out
and
inc
xchg
jp
dec
jae
lods
or
subb
mull
add
jg
cltd
hlt
stos
push
mov
fistpl
push
lcall
or
int
fwait
adc
mov
mov
xor
pusha
iret
push
insl
sbb
inc
mov
xchg
icebp
mov
jmp
and
out
addr16
inc
mov
jge
notb
pop
and
pop
cmp
add
lret
adc
adc
inc
aam
mov
jne
rclb
or
xchg
adc
cltd
pop
aaa
fs
mov
push
pushf
shrl
popa
mov
bound
sub
fucomp
lret
push
xor
sub
mov
pop
fadds
cmp
in
lds
jl
aad
xchg
hlt
jmp
imul
cmp
divps
fistpl
test
dec
in
push
inc
std
inc
shrl
pop
adc
pop
sbbl
dec
push
and
in
mov
stos
pop
inc
push
sahf
loopne
xchg
add
icebp
fs
and
leave
mov
sbb
push
je
lret
add
inc
lcall
xchg
sti
cmp
and
xchg
call
jbe
into
insb
add
sub
inc
xchg
adc
and
lcall
push
pop
popa
add
mov
repz
push
jge
jge
mov
and
jp
idiv
sti
addl
out
mov
and
mov
sub
sbb
mov
mov
or
fadd
jb
and
test
icebp
pop
stos
jb
sbb
insb
addr16
mov
addl
test
insl
les
popa
inc
jg
xor
add
mov
sbb
and
lcall
in
cmpsb
into
mov
aaa
mov
sbb
rcrl
fadds
and
cmc
mov
lds
jge
push
outsl
ficompl
stc
and
iret
xchg
rol
inc
notb
bound
pop
bound
xchg
mov
lea
div
iret
push
icebp
mov
out
jb
push
enter
popf
gs
repnz
movsl
push
inc
in
daa
jb
lcall
test
inc
push
fsts
sbb
out
mov
movsl
pop
mov
pop
call
mov
cmovae
lret
sub
xor
and
add
or
add
fs
lcall
lret
jmp
out
mov
xor
cmpsl
test
out
push
fdivl
nop
cli
outsb
jle
out
pop
inc
or
cmpsl
jne
jmp
addb
adc
and
dec
xchg
mov
xor
and
sbb
cs
iret
pushf
or
xor
nop
test
aam
cmp
cmp
inc
aad
add
out
mov
jne
push
shl
pop
pop
push
mov
je
in
pop
cwtl
mov
and
and
imull
adc
inc
ljmp
inc
cltd
test
fdiv
mov
mov
xchg
xor
jb
and
xor
orl
add
pop
xchg
add
cmp
mov
dec
ds
out
mov
jp
aaa
lcall
add
mov
repnz
lcall
xor
jecxz
mov
jno
lock
cmp
and
jle
rorb
loop
push
xchg
mov
jbe
xor
jnp
jle
scas
jmp
dec
movsb
imul
sub
fmuls
dec
or
inc
and
pop
cltd
js
enter
scas
push
sub
pop
ficompl
mov
lcall
cltd
popf
mov
lea
cli
lret
add
sub
test
jae
sub
lahf
pop
lret
sahf
xor
mov
nop
test
stc
fstpl
push
ss
sub
int3
mov
mov
and
ds
inc
out
nop
inc
in
adc
aad
lds
fwait
out
dec
data16
setno
pop
div
inc
dec
pop
outsb
adc
xchg
push
jbe
cmp
lds
inc
sub
cmp
mov
sti
push
test
xor
mov
lods
push
pop
push
or
clc
bound
cli
sub
sub
movsb
and
shl
call
shll
lcall
fisttps
sahf
adc
sbb
bnd
lahf
insb
xchg
stos
sti
enter
push
es
and
out
es
popf
repnz
iret
adc
inc
xchg
imul
mov
xchg
xor
mov
lahf
lcall
pop
lret
lret
ret
fwait
xorb
mov
jb
jg
les
outsl
in
aam
fiadds
ja
mov
stc
cmpsb
movsl
pusha
xchg
sub
add
fidivrs
jne
sti
lock
jne
lahf
rol
xorb
outsl
and
xor
push
stos
adc
jmp
imul
jns
stos
jge
xchg
add
roll
clc
in
outsl
repz
push
insb
ret
adc
fistl
inc
cmp
cmpl
xor
leave
and
xor
lcall
sbb
dec
ret
jbe
mov
and
nop
scas
test
pop
ds
pop
fidivs
lock
sahf
jecxz
sbb
push
lcall
roll
mov
add
push
and
bound
cli
xor
call
jg
jp
lcall
cwtl
lea
inc
inc
jns
mov
mov
mov
fisttps
mov
mov
pop
jl
fsubrp
enter
sbb
ljmp
mov
lds
mov
test
mov
aas
je
orb
fildll
jecxz
mov
sbb
pushf
cmp
push
sbb
adc
lret
jg
xchg
cmpl
mov
sub
mov
add
test
push
xchg
xchg
into
in
aaa
cli
bound
stos
cltd
add
jno
sahf
outsb
lcall
inc
inc
subl
dec
aad
loopne
push
sarl
test
fwait
sbb
and
ret
fsub
or
push
and
xchg
cwtl
dec
stos
enter
pop
outsl
adc
js
addl
mov
call
jns
xchg
xor
test
adc
sub
jp
adc
popa
lcall
in
call
std
pop
cltd
loope
rcrl
out
lods
mov
jo
enter
dec
out
test
not
test
adc
iret
lcall
sbb
movsb
pop
gs
mov
test
dec
push
dec
mov
std
add
stc
fistpl
and
cltd
mov
push
or
push
mov
fidivrl
pushf
pushl
jns
iret
subb
xor
pop
jae
dec
fldt
or
lods
scas
add
push
jo
sub
movsb
cltd
pop
jecxz
mov
push
mov
daa
xor
insb
and
push
lahf
rclb
cltd
jl
test
cs
cmc
cld
rcrb
mov
and
outsl
lock
xchg
add
mov
inc
inc
mov
lea
std
xor
mov
xor
adc
stc
cmp
test
sbb
cmp
pop
jecxz
dec
jbe
jne
mov
cmp
and
in
jmp
in
inc
pop
pop
lea
cs
xorb
xlat
sub
pop
fisubs
insl
cld
dec
adc
aaa
gs
popa
inc
cltd
lretw
faddl
adc
lahf
push
jns
pop
mov
fwait
bound
test
cmpsb
mov
cli
fidivl
stc
inc
test
jbe
repz
repnz
inc
xchg
out
ja
mov
jg
sbb
dec
cmp
jl
cld
lods
pusha
push
jl
inc
cli
cld
adc
adc
int
fsts
inc
cmpsl
imulb
mov
and
and
cmp
cmpsb
sbbb
incb
in
repnz
jns
ret
pop
mov
mov
out
mov
xor
int
lahf
jo
stos
jle
orb
std
or
or
ficoml
mov
xchg
sbb
test
test
das
xchg
shl
pop
lods
test
fsin
or
test
xchg
adc
insl
mov
outsl
cltd
fwait
mov
sub
jl
nop
pushf
jns
repnz
sbb
sub
mov
sub
and
mov
jge
xchg
es
cmp
sub
sbb
jnp
xlat
cmp
xor
sub
subb
jge
rclb
std
jo
call
xorb
in
sbb
xchg
fiadds
mov
ficompl
aas
cltd
aad
inc
jmp
jns
into
and
xor
and
jo
repz
int
pop
test
es
repnz
movsb
push
mov
mov
insl
xlat
or
lret
hlt
aaa
fiadds
cmp
test
sub
ljmp
in
ss
out
inc
cmp
jbe
cltd
add
out
test
fsubrp
fstpl
mov
fdivrs
or
les
dec
mov
sub
mov
mov
insb
and
sbb
mov
pop
insl
bound
cltd
fmull
test
cmp
repz
pusha
cmc
push
pop
cmpsl
fcomps
sarb
add
cwtl
loope
test
mov
and
push
sub
fs
popa
cmp
add
cmp
push
das
aas
loop
repnz
icebp
ds
add
mov
mov
cltd
pop
out
fistps
lcall
xchg
push
cltd
ljmp
jmp
in
mov
jmp
pushf
pop
out
pop
jle
push
and
xor
sbbb
jbe
movsb
xchg
xadd
call
inc
xchg
shlb
mov
mov
cwtl
dec
adcb
sub
inc
lds
mov
jns
inc
xchg
mov
jno
xor
push
push
cmpsb
adcb
es
add
je
lret
sub
mov
cmp
test
inc
into
xor
cld
or
leave
pushf
inc
stos
outsb
cmp
mov
fs
int
dec
xchg
notb
or
jnp
loop
push
dec
or
xchg
and
test
lds
inc
insl
xor
cwtl
cltd
push
xor
out
lcall
aaa
lods
add
jne
mov
mov
insl
jge
popa
dec
lods
xchg
inc
lock
sbb
int
fs
inc
push
xchg
push
add
and
push
out
and
clc
mov
add
loop
shll
out
dec
xchg
sub
sub
hlt
push
inc
add
leave
inc
pop
mov
pop
stos
ja
jae
hlt
mov
xchg
stos
in
jae
dec
sub
inc
cmc
mov
push
lcallw
add
aam
cmpsl
jns
sahf
add
mov
fcomps
pusha
cmp
push
cld
cmp
and
xor
lret
imul
lods
dec
mov
ljmp
push
scas
mov
faddl
jecxz,pt
push
daa
xor
popa
push
mov
in
dec
ret
adc
push
mov
inc
mov
sbb
out
iret
jmp
cwtl
pop
orb
and
jo
sub
dec
adcb
xor
jbe
push
imulb
ja
or
flds
mov
cli
or
test
test
movl
dec
add
sti
lds
jmp
mov
subb
dec
pop
addr16
out
cmpb
stc
mov
incl
mov
lret
std
imul
jp
cmp
pop
and
mov
and
xor
push
loope
sbb
adc
or
sbb
jb
nop
mov
lods
ret
mov
subb
jnp
or
sbbl
lcall
lea
mov
cmpb
dec
mov
lret
sarb
jns
inc
andb
push
pop
mov
fs
push
xor
or
add
dec
cltd
cmp
add
or
dec
repnz
ret
lret
cmp
xchg
dec
cmpb
in
sbb
ljmp
push
mov
out
sub
rcrl
adc
mov
mov
adc
pop
cmc
movl
test
je
imul
mov
cmp
adc
jmp
movsb
mov
jns
rolb
cmpsb
lret
addb
jecxz
insb
push
icebp
mov
sub
xchg
lds
add
mov
xorb
push
and
adc
into
dec
sbbl
and
cmpb
fwait
shr
and
outsl
test
icebp
subb
and
mov
mov
ds
mov
cli
pop
in
and
mov
xor
andb
lea
ficoml
push
cmp
fldenv
and
aad
frstor
push
jp
mov
jno
mov
sub
roll
hlt
inc
and
adc
adc
mov
or
mov
and
mov
setb
jbe
shl
data16
dec
mov
mov
push
sbbb
test
insb
cmp
jbe
das
sbbb
pop
cmpsb
cmpsl
push
xchg
and
add
inc
xchg
int
fs
pop
in
popf
push
movsb
xorb
fmul
orb
push
xor
fwait
mov
sub
dec
and
ret
fadd
xor
push
call
mov
add
mov
xchg
sub
jnp
xor
test
mov
ljmp
jecxz
sbb
les
sub
xchg
shl
adcb
test
jge
push
lcall
and
mov
loopne
add
push
dec
shl
popa
xorb
mov
pop
mulb
mov
jg
and
add
mov
jp
lahf
subb
cmpsb
jle
sti
orl
inc
fstps
bound
push
dec
pop
jnp
dec
in
push
inc
loop
mov
sbbb
es
data16
fcompl
arpl
inc
hlt
inc
lcall
fs
subb
sub
sub
ret
sbbb
subl
mov
aam
mov
sbb
xchg
lods
pop
rcrl
cmc
xor
loopne
in
pop
imul
push
xchg
fiadds
inc
push
cltd
sub
add
xchg
add
sub
mov
add
mov
movsb
out
jp,pt
enter
mov
sub
add
les
cltd
jno
cmc
idivl
push
jns
test
bound
cmc
ret
add
fcoml
xor
loopne
pop
push
cmp
sar
add
xchg
and
repnz
addr16
mov
ja
lret
fisubrl
out
jmp
mov
jecxz
jbe
cwtl
loopne
sub
insl
adc
test
push
jecxz
and
push
jge
ret
push
cli
jg
add
push
push
push
mov
xor
sub
jae
mov
sti
inc
cmc
rolb
pop
adc
out
stc
mov
mull
sbb
fldcw
jecxz
dec
pop
subl
dec
stc
shll
mov
add
loope
loopne
xchg
pop
nop
jbe
cwtl
gs
mov
adc
dec
add
int3
push
call
repnz
movsl
mov
pop
scas
fists
sarb
xlat
mov
xchg
outsl
pop
mov
mov
lret
cmpl
shrb
jge
jae
outsl
clc
xchg
add
jmp
ret
dec
cmp
mov
lcall
inc
shl
fldenv
sar
mov
and
ds
sub
and
popf
shrl
int3
outsb
insb
inc
jl
je
adc
dec
and
subl
push
push
jg
or
jns
out
das
pop
inc
sub
arpl
jle
sbb
gs
sub
cltd
dec
stc
sti
fbld
mov
pop
mov
inc
outsb
hlt
in
sti
sbb
rol
lds
stc
cltd
movsb
and
bound
es
fidivs
xor
xlat
fnsave
addb
stc
mov
ret
sub
inc
cmp
movsb
xor
lcall
pop
dec
pop
sub
mov
inc
and
sahf
stc
mov
add
sbbb
sub
inc
std
jecxz
pop
imul
bswap
pop
xchg
push
jl
test
mov
cs
out
pop
inc
mov
je
lret
sub
push
sub
fcoms
addl
or
and
and
insl
repz
mov
adc
jge
nop
imul
setae
das
movsl
mov
jb
jbe
push
xor
enter
xchg
add
nop
pop
ljmp
adc
ss
negb
inc
leave
ud1
ja
sub
popa
add
dec
mov
jnp
mov
imul
mov
sub
xor
jle
enter
mov
stc
in
idivb
pop
jge
mov
lret
imul
sbb
jle
xor
inc
jnp
mov
mov
imul
sbbl
lods
jb
xchg
jnp
push
std
jne
out
mov
add
in
push
test
scas
and
adc
fmull
shlb
mov
push
inc
subb
sub
mov
into
sub
ds
inc
rcl
sub
es
push
jl
or
xchg
sub
mov
in
add
jns
xor
mov
pop
popa
arpl
sbb
add
cwtl
adc
dec
out
cltd
stos
push
or
fisubl
lods
repz
cs
adc
stos
mov
movsb
mov
ljmp
push
lcall
lahf
aaa
je
shl
ret
or
mov
iret
enter
adcl
subb
inc
les
mul
ret
lcall
xchg
jp
push
dec
fdivrl
inc
cmp
and
cltd
mov
jp
mov
and
add
xchg
pop
bound
add
lock
pop
popf
lea
adc
sbb
jp
sbb
psadbw
and
into
pop
repz
inc
jb
ret
mov
dec
outsl
je
ja
daa
jb
popf
mov
das
pusha
and
out
xor
xchg
mov
dec
dec
cltd
les
add
mov
lret
je
mov
lds
mov
sub
mov
sub
outsl
and
ds
xor
ss
mov
and
aaa
insl
sbb
pusha
inc
xor
in
sbb
jns
fwait
gs
xor
faddl
inc
popa
or
jmp
data16
mov
and
mov
mov
mov
stos
test
andb
mov
enter
les
fsubs
push
jg
sbb
shrl
cmp
mov
mov
push
cwtl
xor
mov
adc
imul
xor
sub
jb
js
xor
nop
push
jge
dec
sahf
jp
mov
xchg
sbb
xor
nop
movsb
mov
pusha
mov
sub
outsl
movl
or
test
std
inc
pop
inc
test
jbe,pt
pop
xor
or
jbe
or
mov
cmp
pusha
js
das
jb
repnz
xchg
sub
sbb
adc
and
jnp
jl
lcall
pop
mov
out
cmp
mov
lcall
mov
out
pop
mov
pop
jnp
xor
mov
sbb
orb
aas
stc
filds
pop
pop
xor
add
jmp
dec
gs
mov
xor
jae
xor
xor
mov
xor
pop
insl
mov
daa
loop
jmp
shl
movsb
adc
jnp
or
fs
into
cmpb
stos
cmpsb
add
jp
movb
mov
xor
adc
cmp
outsl
rolb
push
mov
popa
pop
inc
addb
imul
jnp
xor
cmc
push
or
sbbb
ret
sub
xor
cmpsb
pushf
mov
in
sti
dec
jns
cmpsb
inc
icebp
gs
jg
xchg
push
cmp
lret
lods
loop
popf
and
sarl
push
daa
bound
jbe
jle
lock
xchg
bound
cmp
imul
imul
jb
repnz
es
addb
xor
aas
pop
cltd
scas
jb
sub
insl
cmp
int3
mov
gs
inc
test
cmpb
arpl
xor
mov
cmp
jg
inc
into
shlb
xlat
mov
adc
cmp
mov
bound
cmpsb
sub
adc
xchg
scas
sub
sub
push
insl
or
or
movsl
out
xorl
pushf
pusha
pop
jnp
fcmovne
sbb
cmc
mov
sub
inc
jbe
subb
rclb
adc
imul
xor
jbe
or
push
jb
push
inc
outsl
adc
push
or
lcall
xor
mov
jg
ljmp
movsl
in
adc
adc
jg
outsb
jb
jl
pop
cli
dec
loopne
mov
add
or
inc
cltd
rolb
outsl
mov
imul
sub
cmp
arpl
and
jge
fwait
imul
adc
dec
jecxz
cmpsb
and
popf
adc
rcrl
inc
cmp
cli
mov
push
cld
cmpsb
je
and
in
pop
xchg
jle
cmp
popl
and
dec
mov
mov
movl
out
add
iret
rcrb
jge
mov
lds
inc
sarl
cmp
add
add
stc
ficoml
pop
jle
scas
das
and
mov
xorb
jecxz
push
test
jg
push
mov
xchg
movsb
push
mov
push
rcll
mov
repnz
imul
jg
loop
jg
jae
or
popa
mov
push
sbb
jle
sbb
jg
mov
mov
cltd
popf
sarl
aaa
scas
daa
sub
sbbb
out
cmpsb
cmp
adc
sbbl
jno
outsb
fbld
loopne
frstor
rcll
jl
stos
loop
and
scas
xor
xchg
test
xorb
mov
fs
or
adcb
jae
sbb
mov
mov
jae
mov
adcb
je
aam
push
cltd
gs
inc
and
mov
or
sub
jg
faddl
mov
push
and
es
lods
xor
mov
subb
sub
xor
pop
cmpsl
pop
arpl
and
add
imul
xor
in
xchg
test
cmp
lods
daa
push
cmp
cmc
pop
andb
fwait
sbb
pop
inc
repz
dec
fdivl
jnp
adcb
insb
xor
push
das
stos
sbbb
mov
mov
xor
cli
dec
xchg
arpl
mov
lret
cmp
stos
sbbb
jne
rolb
ret
xchg
adcl
mov
push
xchg
cmpb
in
mov
insb
sub
cmpb
imul
arpl
cltd
and
ja
movsb
sub
cwtl
jo,pt
scas
cmp
test
cmpb
inc
cmpb
in
sbb
lahf
push
mov
xor
psllw
int3
mov
mov
push
out
or
fs
cmp
and
jp
or
jo
lret
jo
js
mov
orb
jmp
orb
push
test
in
mov
push
xchg
pop
aam
sub
sbb
push
add
pop
insl
or
orb
aaa
xlat
out
add
sbb
roll
adc
pop
mov
and
movsb
cmc
testl
jne
lahf
mov
mov
popf
xor
das
sahf
sub
xchg
jg
stos
mov
add
jl
mov
inc
xchg
cli
and
add
rolb
aas
mov
hlt
inc
add
cmp
in
pop
xor
dec
outsl
sbb
pop
ja
shl
mov
jb
cmpl
lahf
cmp
repnz
add
pop
cltd
das
pop
aad
orl
cmpb
pop
clc
je
jnp
sahf
bound
add
les
mov
mov
pop
andl
addb
lahf
xchg
inc
pop
cmc
adc
andb
pusha
push
xorb
add
cmpsb
cli
dec
add
pop
and
push
in
jg
pop
fidivrs
and
push
cmpsl
popa
mov
pop
mov
pop
add
jae
sti
insw
inc
lret
adc
push
xchg
stc
dec
andb
mov
cmp
addb
add
mov
lods
mov
lcall
push
loopne
pop
lret
ds
jb
push
xchg
bound
lock
cmp
add
int3
or
xor
xchg
inc
and
repz
and
ds
mov
divl
pop
xor
repz
and
stos
das
fwait
cmp
xchg
inc
pop
sarl
sub
out
sbbb
cmp
mov
inc
cltd
sub
or
lahf
push
mov
outsl
jle
pop
mov
push
jnp
aas
outsl
mov
ljmp
add
adc
mov
subb
mov
jnp
dec
push
and
or
and
je
vmwrite
out
leave
lods
bound
mov
xorb
mov
mov
and
dec
cmpsl
push
jb
test
call
insl
fwait
add
test
fld
sbbb
pop
in
mov
sub
in
aas
jo
clc
sbb
in
addb
andb
clc
mulb
push
jp
inc
push
icebp
jle
das
lods
inc
sbb
add
mov
ds
sbb
orb
jae
testb
dec
mov
sbb
lret
xor
lahf
cmpb
fisttps
xchg
pop
jge
and
subb
ljmp
jnp
push
and
sar
cltd
and
jo
ljmp
add
aam
jae
mov
incb
inc
stos
mov
sbb
jg
sbb
std
jnp
mov
pop
nop
or
ss
sbb
gs
outsl
mov
jno
sbb
cs
jle
fcoms
adc
bound
test
incb
iret
into
mov
es
fsubrp
jecxz
dec
std
cmpsl
jge
sti
pop
testb
jb
insl
mov
jp
ficompl
subb
out
mov
sub
int
inc
and
cli
icebp
sahf
mov
jg
add
xor
dec
pushf
sbb
imul
xorl
xchg
and
sahf
xchg
or
stos
repnz
push
sub
out
test
adc
ja
inc
filds
sub
cli
sub
xor
jb
leave
in
lcall
xchg
pusha
ja
mov
aas
jno
jae
mov
jge
iret
mov
xor
cmp
jp
cmpb
pop
dec
addb
sub
jo
stos
cld
sbb
iret
add
imul
mov
add
adc
sarb
ret
pushf
subb
sbb
add
or
push
jbe
sbb
ret
lods
bound
add
jo
add
pop
or
sub
mov
in
sbbb
add
pop
and
fwait
imul
cmp
repnz
jmp
inc
and
loop
push
add
movsb
add
xor
scas
mov
decl
cltd
orb
loop
cmp
popa
stos
adcl
pop
das
cmpsb
inc
sbbb
cmp
cmp
cmp
clc
pop
push
xchg
dec
inc
stc
push
sarb
jle
test
and
lcall
pop
xor
and
rorb
aas
popaw
mov
sub
jmp
jl
jb
movsb
js
in
jg
inc
sti
pop
mov
inc
pop
ja
sub
addr16
dec
or
xchg
jp
cmpb
lahf
call
inc
push
dec
xorb
dec
arpl
pop
loop
push
mov
mov
mov
xorb
mov
sahf
outsl
cltd
adcb
jle
insb
pop
filds
or
bound
cli
cli
daa
int
jecxz
jno
cltd
inc
rclb
cmp
and
out
lret
adcb
sahf
iret
jp
into
jnp
ret
fldt
jnp
jo
cmp
ss
pop
jg
push
pop
icebp
mov
inc
lods
xor
adc
movsb
sti
xor
mov
fwait
lahf
test
sub
call
fstps
bound
bound
or
cmp
xchg
mov
mov
dec
cmp
lods
out
sub
cmp
cmpb
bound
cmp
push
adc
or
sub
jo
and
xchg
xor
fidivs
out
subb
cmp
jno
and
pop
movsb
or
sarl
jle
jg
or
add
push
sha1rnds4
mov
ja
sub
das
pop
aas
add
outsl
adc
jge
add
jns
inc
sbb
or
fldenv
or
xchg
xorb
pop
jp
out
lret
repz
popa
xchg
out
cmpsl
arpl
popf
cmpsb
bound
cs
mov
inc
jo
sub
jo
aaa
int
jo
mov
sub
adc
movsb
xchg
dec
dec
sbb
ret
and
das
sub
inc
jo
xchg
fs
mov
je
xchg
sub
fucom
jl
mov
bound
jo
das
xorb
add
lcall
sub
js
add
notb
or
sbbb
dec
add
cmp
mov
popa
xor
out
cmp
xchg
mov
pop
pop
or
jge
incb
jge,pt
push
pop
sbb
cltd
sub
out
mov
shl
sub
jb
and
xor
push
out
jbe
popaw
scas
dec
xchg
mov
adc
data16
sub
lret
dec
cmp
repnz
in
jnp
dec
jecxz
into
cmp
mov
adc
jbe
in
jnp
inc
or
inc
pop
mov
rolb
data16
push
in
cmpsb
lret
lret
rcrl
push
repz
xor
xchg
lret
mov
sahf
or
add
xchg
mov
ret
inc
test
mov
leave
dec
mov
je
dec
sub
hlt
adc
mov
repnz
dec
cmp
out
push
dec
loope
inc
mov
stos
jg
inc
sbb
out
mov
sahf
bound
inc
lahf
push
rcrl
dec
sub
into
dec
cmp
dec
mulb
or
inc
xor
cmp
aas
jnp
cmp
xchg
mov
jge
dec
mov
cmp
xor
out
enter
mov
push
dec
xor
sub
xchg
mov
dec
pop
dec
adc
inc
lods
inc
je
dec
xor
pop
pop
lods
loope
dec
loop
stos
mov
dec
adc
mov
adc
push
xchg
fnstcw
daa
fnstsw
rol
icebp
repnz
sbb
cmp
sbb
sti
xlat
mov
test
lock
test
adc
push
or
js
inc
in
gs
jecxz
jnp
dec
xor
jmp
jle
out
sub
mov
mov
cltd
mov
movsb
ffreep
inc
mov
dec
xor
fsub
mov
xchg
jnp
dec
bound
cmp
sbb
pop
adc
negl
cmpsl
fisttpl
mov
fisubs
inc
jp
pop
pop
cmp
adc
add
cmc
fucomi
mov
push
jns
adc
or
cmpsb
jo
push
sbb
cmc
mov
jae
aas
pop
push
inc
out
aaa
fistps
iret
movswl
scas
into
lahf
ret
xchg
mov
lcall
repnz
rcrl
insb
imulb
subb
xchg
ljmp
data16
inc
in
jo
xor
xor
out
mov
sahf
and
xchg
ret
mov
ds
sbb
inc
mov
inc
push
aas
hlt
inc
xchg
loop
inc
scas
sahf
movsb
lcall
inc
lock
in
aad
add
stc
inc
in
pop
mov
loope
adc
mov
push
mov
xchg
movsl
lock
xor
fwait
mov
pop
dec
adc
add
notl
dec
and
xchg
xchg
mov
ret
mov
stos
xchg
nop
sbbl
imul
mov
jmp
cwtl
mov
adc
or
cmpsb
pop
lahf
add
pop
in
gs
or
out
arpl
jecxz
inc
je
dec
jo
data16
in
sti
xlat
fcmovnb
mov
jnp
insb
pop
bound
pop
sbb
mov
mov
inc
mov
lea
mov
adc
jbe
cmp
pop
pop
lods
pop
xchg
mov
jno
je
push
and
hlt
mov
or
mov
cmpsb
ret
das
sahf
outsl
pop
dec
fs
sbb
pop
inc
cmp
sbb
dec
pusha
cmp
push
dec
jbe
lea
xor
mov
nop
jle
dec
inc
dec
or
cmp
inc
add
dec
in
inc
loope
inc
pushl
inc
adc
cmc
fucomip
int3
mov
jae
push
adc
decl
aad
shlb
andb
adc
mov
and
arpl
dec
xor
fs
inc
dec
je
inc
bound
dec
add
push
cmp
push
jo
fistps
push
or
add
mov
pop
out
movd
jg
dec
imul
orl
pop
dec
ret
inc
out
dec
inc
adc
rclb
pop
je
js
ds
pusha
dec
push
out
rcl
mov
cmpsl
jns
repnz
mov
pop
inc
dec
mov
outsb
ret
jl
insb
dec
xor
sti
mov
add
sbb
inc
inc
adc
cs
dec
outsb
dec
inc
mov
mov
mov
inc
inc
outsb
dec
enter
dec
rolb
mov
pop
mov
cwtl
js
mov
add
push
lcall
lds
dec
adc
sti
jmp
inc
jnp
inc
push
inc
stc
pop
ret
sbb
sub
pop
or
and
cmpb
jne
xor
pop
sti
dec
jecxz
fdivrs
movsl
sbb
mov
dec
or
pop
xchg
stos
sti
ss
sbb
gs
in
jnp
dec
mov
mov
out
mov
inc
sub
lcall
push
je
pop
push
aaa
xor
hlt
ret
ja
push
dec
and
jnp
dec
call
cs
iret
jecxz
and
ljmp
call
leave
je
inc
divl
jecxz
inc
out
loope
jp
insb
mov
stos
add
imul
into
sub
lea
ds
aad
lret
lock
aam
repnz
sub
imul
loop
dec
popa
jo
arpl
and
je
inc
push
aas
cmp
xchg
fcmovnu
inc
or
ljmp
sbbl
push
adc
prefetchw
mov
fs
test
add
dec
sub
dec
inc
inc
mov
lret
or
or
pop
movsb
add
jo
inc
gs
in
fs
sarl
fs
pop
out
cmp
xor
push
mov
jns
adc
sahf
int3
stos
cmp
push
or
cmp
in
gs
fsubrl
test
inc
and
inc
cli
inc
je
inc
dec
xor
hlt
btr
repz
mov
loop
pop
aaa
mov
ja
push
pop
dec
push
push
cmp
inc
leave
inc
mov
stos
je
dec
icebp
xor
mull
push
dec
adc
xor
ret
mov
xor
fmuls
repnz
sahf
int3
lcall
aam
cmp
push
add
cmp
mov
xchg
rsqrtps
mov
inc
icebp
in
gs
adc
sbb
roll
mov
inc
insl
inc
bound
lods
pop
jae
shll
enter
xchg
jb
push
add
nop
mov
repz
xchg
xrelease
mov
test
adc
sub
and
cmp
loopne
mov
popfw
mov
cmp
lret
mov
dec
adc
lcall
dec
arpl
mov
dec
jg
inc
xor
repz
iret
xchg
shll
out
repnz
cmp
mov
inc
add
add
jnp
sti
xlat
push
mov
nop
dec
pushf
dec
data16
dec
mov
out
out
sarb
gs
sti
adc
xchg
pop
xchg
jnp
push
pop
cmp
sub
and
cpuid
inc
sti
xchg
out
push
gs
ds
aam
leave
aaa
jnp
cmp
test
mov
orl
repnz
dec
add
dec
and
pop
xor
in
jg
jg
js
pop
sbb
mov
sbb
inc
xchg
pop
mov
jae
shlb
lcall
fwait
mov
sub
sbb
or
cmovae
in
gs
dec
dec
jp
adc
xor
push
push
sub
mov
movups
mov
jb
outsb
out
push
data16
inc
outsl
inc
sbb
test
dec
mov
scas
inc
stos
je
inc
in
ss
add
aas
int3
lods
dec
movsl
repnz
dec
jmp
insl
inc
ss
loopne
mov
jo
out
sahf
in
cmp
hlt
outsl
outsl
inc
push
xor
sub
fildll
bnd
jns
push
loope
jno
adc
inc
or
ds
or
inc
sub
inc
and
inc
sbb
inc
adc
inc
or
sub
pop
jnp
negb
ljmp
dec
add
inc
sbb
rolb
inc
adc
and
loop
push
jo
ret
stc
sahf
cmc
pop
push
mov
sbb
ja
dec
push
cli
fsub
pop
out
mov
cmp
fdivs
inc
imul
dec
sbb
mov
pop
int3
data16
jne
imul
les
jmp
cs
je
inc
xchg
and
rol
or
or
es
add
ret
push
int3
sahf
fnstenv
push
iret
sub
jbe
cmp
dec
das
dec
cmp
icebp
xor
pop
jb
jmp
xor
pop
hlt
fistpll
jbe
pop
sahf
add
shlb
and
sub
loope
icebp
cli
es
push
mov
push
incl
dec
jns
add
dec
xor
out
hlt
sub
push
repz
in
dec
inc
test
fs
mov
ss
dec
outsb
sbb
cmp
pop
xor
inc
sbb
dec
mov
in
and
add
pop
lcall
jg
cmp
movsl
xor
inc
sarb
push
dec
fdiv
lahf
dec
jne
inc
push
dec
sbb
divb
incl
loopne
sbb
mov
dec
jb
push
arpl
into
addl
call
pop
mov
pusha
dec
push
mov
dec
jnp
push
popa
aas
inc
sub
ljmp
dec
sub
dec
mov
sbb
mov
pushl
xchg
dec
outsl
sub
xchg
jmp
lret
das
stos
sub
aas
pusha
nop
cli
mov
mov
mov
mov
mov
mov
mov
mov
inc
cwtl
pop
xchg
jnp
mov
lcall
pop
add
add
add
daa
add
adc
and
inc
out
inc
in
filds
pop
aad
fisubrl
add
cltd
outsb
into
inc
lahf
sahf
pop
jb
bound
subl
push
mov
or
ljmp
pushf
dec
inc
out
imulb
fnstsw
scas
setg
popl
testb
iret
mov
lods
mov
mov
orl
jae
insb
jae
popa
xor
mov
test
push
rclb
sbb
lea
shlb
xchg
std
xchg
xchg
in
mov
jecxz
lock
lock
mov
add
cmpsb
stos
mov
mov
mov
ja
sti
push
mov
push
pop
outsb
cmp
pusha
pop
loop
dec
xchg
xchg
das
xchg
xchg
into
mov
sbb
sbb
or
add
jmp
jbe
inc
mov
enter
mov
lods
fwait
cmpsb
fwait
mov
fwait
nop
fwait
mov
jnp
je
outsb
test
pop
xchg
pop
mov
dec
mov
inc
mov
xor
inc
jle
and
push
adc
adc
fwait
add
out
fwait
jmp
ficompl
xchg
xchg
test
je
roll
xor
lock
ljmp
sti
lret
pop
dec
dec
mov
sub
dec
pop
lock
mov
scas
mov
or
push
sbb
andb
dec
das
cmp
imul
prefetcht0
subl
das
inc
imul
sti
cmp
xchg
je
jbe
adc
cli
jno
ljmp
mov
into
mov
push
push
sbb
cs
sbb
test
loopne
aam
mov
adc
adc
aaa
mov
mov
ret
fbstp
adc
xor
mov
dec
pop
in
gs
in
vmovhps
jmp
stos
mov
out
test
aaa
in
insb
or
lock
popf
jecxz
sti
jbe
pop
pop
pushf
inc
stc
dec
mov
mov
jge
inc
lret
xor
jno
ss
push
or
dec
adc
ds
xor
sub
push
mov
mov
mov
mov
push
mov
xchg
xchg
in
jnp
out
sahf
ljmp
in
shlb
sbb
mov
shll
mov
inc
scas
push
stos
jnp
mov
pop
pop
xchg
std
or
dec
jle
jp
lock
jb
outsb
scas
repz
ror
sbb
inc
imul
ja
inc
cmp
adc
scas
add
sbbb
add
adc
mov
jmp
jg
movsl
xor
pushf
inc
mov
adc
cmp
mov
pusha
lret
dec
and
sti
sub
ficompl
stos
inc
out
cmp
aaa
iret
sbb
sahf
fnstenv
inc
xchg
stos
push
inc
mov
mov
inc
adc
sub
ss
adc
jnp
push
cmp
pop
cmp
dec
js
cs
jae
sahf
addb
xchg
inc
or
mov
sbb
movsb
arpl
jo
notl
push
dec
cld
lahf
pop
inc
and
test
inc
pop
xor
cmpsb
add
push
or
out
mov
dec
cmp
inc
mov
adc
push
dec
inc
sbb
popf
push
adc
or
stos
push
dec
ljmp
or
mov
scas
lahf
cli
notb
ljmp
add
test
test
stc
cltd
out
sbb
sahf
lcall
mov
ret
sahf
pop
lcall
pop
adc
subl
pop
pop
and
push
cltd
dec
xchg
dec
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
push
jns
sbb
adc
fwait
negb
ljmp
mov
psubw
push
mov
mov
adc
fmull
sti
es
sbb
ds
sbb
pop
dec
stos
jge
outsb
in
or
sti
jp
sbb
test
jnp
jle
xor
out
xchg
outsb
mov
daa
hlt
icebp
add
push
shll
or
and
mov
push
repz
mov
imul
jb
outsb
out
and
data16
mov
scas
repnz
data16
push
mov
pop
sar
xchg
jmp
in
inc
mov
xchg
mov
jbe
jb
outsb
scas
push
data16
bound
or
dec
incl
ds
cmp
jl
cmp
inc
sbb
dec
cmc
rclb
lcall
dec
mov
ds
xor
push
and
push
push
cld
in
outsb
rcrl
pop
dec
push
inc
push
loop
jg
jns
sub
dec
fildll
cltd
mov
scas
test
push
bound
enter
je
dec
aaa
dec
and
add
sub
pop
jnp
jns,pt
push
pop
filds
mov
scas
jns
push
inc
insl
pop
cmp
repz
dec
xor
lods
jo
dec
sub
dec
xchg
jns
dec
and
mov
sub
fs
and
push
je
sbb
push
xor
divb
mov
cmp
outsl
push
sbb
add
dec
add
cmp
stos
in
shl
jbe
dec
jbe
adc
mov
gs
movsb
mov
ds
mov
push
jo
dec
sarb
loope
in
and
insb
dec
subb
mov
loop
xchg
mov
lret
jle
jp
ljmp
mov
das
lock
push
out
ljmp
push
js
mov
dec
stos
pop
push
mov
fidivrs
xchg
push
cmp
inc
jmp
fidivl
sti
orb
fistpll
fadd
les
dec
sbb
es
incb
xor
stc
mov
cmp
incl
push
mov
sbb
nop
out
cmp
mov
sub
lahf
mov
cmp
and
mov
inc
mov
aaa
add
pop
dec
sub
iret
mov
sahf
sub
jp
outsb
dec
xor
enter
cmp
push
gs
push
mov
sub
insb
lock
add
dec
in
jns
shll
outsb
mov
jb
cmp
dec
push
sbb
iret
push
sbb
push
lock
loop
dec
mov
js
pushl
pop
lock
adc
invlpg
jp
or
fdivp
imul
sub
popa
cvttps2pi
and
punpckldq
imul
inc
or
je
jnp
dec
xor
hlt
cs
jns
mov
add
push
sub
jae
or
enter
mov
out
nop/reserved
jecxz
jecxz
jecxz
jecxz
jecxz
out
into
shl
mov
arpl
mov
scas
nop
stos
or
or
mov
jle
sbb
push
jns
dec
inc
repnz
mov
test
sbb
ucomiss
pushl
out
jns
jg
fidivl
xor
sub
push
or
dec
dec
adc
dec
inc
pop
adc
or
mov
fnstenv
ja
arpl
popf
adc
xor
jle
jbe
mov
inc
cmp
inc
gs
hlt
cli
mov
ja
inc
shrb
inc
inc
mov
data16
mov
stos
jns
push
add
pop
cmp
loope
aam
mov
pop
add
cmp
subl
inc
mov
scas
popf
xchg
mov
or
pop
dec
xor
jnp
inc
mov
inc
std
mov
mov
imul
iret
ljmp
popl
sbb
jle
adc
push
fnstcw
call
dec
cmp
data16
popa
push
inc
daa
bound
repnz
ds
or
out
dec
mov
mov
dec
cmp
dec
add
mul
jbe
mov
xchg
adc
add
jb
hlt
push
sbb
hlt
mov
data16
and
inc
push
dec
hlt
mov
out
jbe
dec
xor
call
push
adc
psubsw
fadds
jo
or
dec
lea
arpl
pop
andb
jecxz
dec
add
inc
sbb
xchg
inc
outsl
xchg
mov
not
and
push
icebp
dec
push
faddl
das
dec
mov
cltd
xchg
xlat
sub
insb
stos
add
and
cmp
loope
popa
inc
jl
inc
dec
inc
lret
ret
das
push
dec
push
dec
adc
leave
xor
mov
dec
pop
push
dec
nop
ficoms
cmp
mov
xor
jg
add
out
sarb
dec
sbb
mov
movsb
jmp
jns
cmc
mov
scas
ja
jle
loope
fs
enter
inc
inc
inc
in
lock
dec
sub
mov
dec
jg
sahf
inc
jns
test
pop
je
test
dec
out
loopne
mov
notl
bound
xchg
hlt
dec
pop
dec
insb
pop
dec
add
inc
aas
mov
insl
jle
arpl
dec
daa
dec
fmull
out
insl
adc
add
add
divl
jb
ljmp
xor
rolb
in
gs
in
or
and
shlb
lret
pop
xchg
or
addb
dec
cmp
dec
pop
dec
mov
cmp
rcrb
sahf
cmp
lods
lahf
stos
pusha
sub
aaa
push
dec
mov
pusha
scas
es
push
push
xchg
push
pop
add
mov
fs
xor
bound
pop
push
xchg
pop
or
mov
arpl
pop
iret
pop
cmpsb
scas
mov
dec
inc
mov
xor
pushf
pop
adc
subb
ficompl
dec
je
dec
xchg
sub
lahf
mov
adc
int3
subb
inc
jl
inc
in
dec
inc
xor
faddl
sub
sub
adc
mov
mov
dec
jp
mov
mov
pop
in
shrl
jp
cltd
insb
enter
test
xchg
jmp
xchg
out
mov
scas
scas
and
push
inc
ret
dec
add
je
mov
inc
dec
adc
jns
jg
leave
mov
pop
xor
stc
pop
cmpb
lods
inc
cwtl
pop
dec
lods
and
cmp
or
stos
push
cmpsb
fimull
ja
inc
pop
xor
sub
mov
jecxz
sahf
mov
inc
dec
xchg
mov
out
xchg
add
sahf
imul
loop
stos
insb
andl
dec
bound
dec
mov
mov
add
cmp
sbb
push
out
jecxz
jecxz
in
cmp
sarb
xor
and
adc
inc
ss
cmp
jb
pusha
dec
ja
push
js
cmp
fimuls
lret
and
push
orb
pop
sahf
xor
dec
pop
pop
push
inc
insb
adc
jle
in
pop
xchg
cmp
push
out
inc
and
jo
imul
jae
mov
mov
repnz
test
adcl
sub
adc
xchg
pop
and
jae
std
xor
inc
pop
mov
sub
cmpsb
sub
hlt
add
call
sbb
dec
push
jno
lcall
push
inc
loop
lods
imul
ja
pop
rol
adc
mov
scas
ror
or
nop
xor
sub
test
mov
jns
pop
repnz
inc
mov
or
rcrb
nop
cmp
jp
push
mov
or
repz
inc
mov
mov
out
ret
imul
insl
or
gs
ret
dec
cmpl
sub
and
jl
jo
loopne
sub
dec
cli
dec
negb
clc
push
imul
imul
dec
mov
push
popa
sahf
dec
in
jnp
sbb
add
mov
dec
inc
sahf
popa
out
gs
call
dec
push
jg,pn
dec
imul
cmpsb
and
pop
ds
mov
jbe
push
push
shll
int
adc
setge
ja
adc
repz
mov
out
lret
push
mov
stos
hlt
push
cmp
jns
xlat
inc
cli
stos
lcall
mov
scas
add
testb
jns
jo
jbe
xor
mov
inc
inc
xor
and
or
ret
inc
fstpl
sti
sub
fwait
mov
test
xchg
in
cmp
in
jns
adc
or
pop
cli
rol
mov
mov
mov
mov
push
jns
fidivl
into
pushl
mov
popf
push
je
int
xor
xchg
rcll
push
call
dec
int3
mov
cld
mov
mov
mov
jg
dec
or
dec
mov
fsubs
icebp
xor
mov
incb
jge
addr16
fmulp
mov
leave
dec
push
mov
movsb
and
lahf
mov
sub
rcl
mov
insb
dec
loop
int
movsb
lret
cmpl
adc
jle,pn
add
clc
inc
add
mov
jo
cli
and
stos
xchg
xchg
mov
pop
sbb
lcall
dec
lret
jge
sarl
push
pusha
mov
adcb
dec
aas
dec
sub
jle
fdivr
lock
push
or
inc
cmp
stc
outsb
call
loopne
je
push
sarb
adc
xchg
movsb
mov
leave
fs
xchg
inc
mov
scas
inc
sahf
je
dec
adc
inc
push
and
imul
cmp
lcall
push
icebp
loop
jns
push
mov
xchg
stos
js
adc
pop
cmp
cld
mov
mov
aaa
stos
mov
lcall
mov
movsb
jns
jle
dec
hlt
jbe
lea
add
cmp
xor
sbb
mov
scas
cmpsl
out
mov
mov
shrb
sarb
add
mov
leave
add
lret
lret
sub
popf
stos
inc
pop
sbb
sbb
inc
push
out
loopne
je
push
cmp
xor
mov
mov
add
inc
sub
inc
hlt
mov
shlb
push
je
dec
pop
cmp
jns
sub
scas
jo
xor
add
xchg
je
outsl
xor
testl
and
je
ds
rol
adc
push
sub
adc
dec
inc
and
outsb
cmpsl
scas
subb
aam
lcall
outsb
push
inc
dec
xor
add
inc
ja
ljmp
xchg
inc
jno
inc
push
inc
pop
aas
sahf
xchg
idivb
in
lds
mov
rcl
mov
in
pop
cs
daa
loop
xlat
int3
lcall
jge
mov
fndisi(8087
mov
adc
xor
jnp
push
xor
mov
ja
push
call
mov
push
pop
sti
repnz
ror
push
xchg
and
pop
inc
test
mov
adc
lods
insb
push
ljmp
mov
adc
loopne
rorb
mov
popl
addb
cltd
push
xlat
inc
ja
fisttpll
scas
insb
mov
jnp
dec
ds
cmp
ss
mov
dec
mov
insb
daa
or
icebp
sub
rcr
mov
xchg
jge
inc
pop
add
in
pop
push
push
push
jge
in
rorb
sbb
adc
dec
mov
out
in
adc
nop
outsl
or
xor
jo
rclb
inc
push
cmp
inc
sub
inc
sbb
xchg
adc
aas
push
cli
pop
or
decl
rorb
inc
test
sub
jbe
test
inc
jo
iret
jl
sub
and
test
lcall
scas
and
bound
push
pop
jae
dec
mov
mov
scas
mov
xchg
jno
dec
pop
dec
fs
jecxz
arpl
lock
das
push
scas
rcll
mov
pop
ret
dec
insb
ret
jnp
push
push
dec
xchg
xchg
push
pushf
and
add
adc
fsubs
xor
icebp
mov
pop
dec
pop
es
adc
je
idivl
add
out
call
lock
and
or
ds
mov
insb
iret
cmp
inc
ja
outsl
shll
xchg
std
inc
pop
lcall
lcall
incl
xchg
ss
jl
xor
lret
adc
cmp
arpl
out
in
loopne
xor
xchg
sysenter
xor
add
test
xorb
ja
adc
ljmp
jb
stc
loopne
add
ds
cli
lcall
int3
out
data16
xor
je
dec
add
std
mov
cmp
mov
dec
test
fs
inc
inc
jecxz
sar
xchg
xchg
stos
in
enter
test
push
je
sti
mov
jae
xor
stc
fldcw
rolb
mov
mov
cmp
or
test
jb
insb
shlb
push
jmp
xchg
inc
jle
sbb
clc
aad
pusha
mov
jns,pt
cwtl
add
lock
gs
lock
xchg
loopne
or
push
or
dec
dec
les
cmpsb
push
sub
push
cs
ja
shrl
shlb
mov
pusha
and
dec
adc
jae
into
aaa
enter
test
inc
sub
pop
bound
dec
push
xor
add
filds
mov
lcall
push
add
pop
addb
push
inc
dec
inc
xor
inc
mov
stc
cmp
adc
popa
gs
push
push
inc
lock
sub
shl
pop
loopne
pop
in
imul
mov
mov
sub
mov
scas
and
jl
or
push
pop
push
push
dec
inc
and
cli
insb
pop
dec
scas
inc
inc
dec
sub
pop
pop
lret
push
shrl
xor
mov
mov
outsb
push
out
stos
adc
inc
loopne
sbb
test
ja
inc
inc
dec
ret
push
outsb
pop
sub
push
sbb
std
push
inc
mov
xor
dec
push
clc
pop
mov
mov
push
adc
adc
stc
lret
sti
cwtl
nop
pop
inc
mov
movsb
xchg
mov
mov
data16
inc
in
dec
daa
mov
iret
xchg
mov
pop
push
add
sub
push
mov
sahf
sahf
notb
in
les
fsubrs
hlt
sti
fcom
sbb
pop
or
bound
pop
in
insb
push
loop
jno
nop
gs
mov
inc
outsl
int
cmpsb
cmp
inc
and
popf
ror
and
bnd
xor
push
add
push
cwtl
das
sbb
notb
roll
loop
lret
arpl
dec
mov
sahf
mov
or
inc
and
xchg
inc
adc
std
lods
out
mov
rolb
jp
jg
jnp
ja
jae
outsl
xor
xor
dec
mov
push
dec
adc
sbb
je
mov
mov
pop
xor
enter
inc
and
mov
and
arpl
ret
cmpb
sbb
jle
outsl
mov
xor
movsb
sub
jae
adc
repz
mov
mov
dec
xchg
push
push
or
in
lcall
dec
sti
jge
cmpsl
mov
push
mov
out
in
sub
cmp
jge
jae
call
cmp
or
jae
mov
jo
movsb
xor
lock
jo
lods
add
inc
sub
inc
mov
mov
roll
push
inc
jns
sub
mov
scas
ljmp
sti
adc
mov
add
inc
xchg
js
cmp
ss
sub
sub
arpl
jmp
xchg
cmovb
adc
scas
pop
stos
xchg
add
stos
and
jecxz
dec
insb
insb
dec
loopne
mov
jnp
aad
xor
cs
je
xlat
mov
ja
mov
aaa
push
add
mov
sti
push
test
pop
inc
inc
push
xor
pop
insl
into
lods
je
inc
outsb
aaa
rcrl
adc
mov
stos
fiaddl
fs
push
jne
fldenv
les
scas
cmp
add
sub
rorb
pop
pop
les
ja
dec
sbb
or
stos
imul
or
push
js
mov
mov
fstpt
dec
insl
pop
inc
inc
mov
inc
push
inc
pop
and
imul
rcll
shlb
jle
mov
inc
loop
ficomps
testb
addb
cltd
call
incb
inc
fildl
push
rorb
mov
mov
outsl
call
lock
push
into
lock
push
lcall
out
push
idivl
out
fcom
xchg
xchg
data16
push
fcmovnb
prefetch
adc
mov
sub
add
cmp
sbb
movsb
jnp,pt
dec
inc
pop
xor
xchg
lcall
or
add
stos
xor
je
outsl
rol
push
vpsrld
lcall
fwait
sahf
jge
adc
cltd
sahf
pushf
mov
insb
lock
push
fs
cmp
inc
dec
or
test
rcrb
and
mov
loop
daa
jnp
mov
inc
in
outsl
and
xor
in
mov
jmp
xor
pop
leave
ds
mov
dec
push
insl
pop
xor
dec
or
dec
outsl
or
xchg
into
mov
mov
sub
and
sti
cli
fsubrp
xchg
test
std
and
jp
mov
pop
inc
inc
pop
cmp
and
inc
call
mov
addr16
jo
sarb
hlt
xchg
cmpb
sub
add
mov
fsubrs
mov
je
lret
cmp
cs
pop
jle
push
lock
jns
jnp
adc
pop
jle
ret
sahf
inc
and
imul
ss
add
add
push
je
bound
hlt
or
inc
dec
aaa
lock
lods
push
out
jmp
add
and
mov
incb
or
xchg
dec
jne
cmp
inc
jnp
and
sbb
out
ficompl
mov
dec
sub
dec
push
daa
out
out
insl
or
sarl
in
cmpsb
lods
inc
jo
jns
push
hlt
push
stc
and
sub
lret
nopl
aam
into
popa
fldl
loop
out
xchg
mov
mov
push
or
enter
jns
lods
inc
mov
mov
lock
sahf
call
sarl
sbb
dec
stc
mov
inc
lods
cmpsb
jmp
add
sub
fcoms
outsb
cmp
sub
mov
jbe
sbb
jmp
sub
inc
xor
cld
pop
lcall
rorb
add
out
fistpl
pop
fs
aaa
pop
je
inc
mov
jae
inc
lods
dec
imul
add
mov
repnz
mov
push
jne
imul
push
or
cld
stc
fnstenv
jae
lret
mov
or
js
push
sub
push
push
out
jbe
add
cwtl
pop
cmc
add
je
mov
and
xorb
int
pushf
test
fucomi
jg
cvtdq2ps
sbb
out
cli
sbb
xchg
xorl
pop
push
cmp
je
mov
cmp
in
cmp
stos
pavgb
mov
or
pop
in
flds
adc
jo
cmp
pop
mov
cmp
jb
ss
pop
adc
sbb
decb
jecxz
or
loop
xchg
pop
inc
mov
and
or
jnp
inc
arpl
cmp
push
xor
movups
mov
scas
adc
dec
ret
sti
xchg
ficoms
push
rolb
dec
push
dec
inc
mov
ja,pt
mov
stos
and
lret
sub
xchg
stc
sarl
jae
adc
inc
inc
cmp
out
xchg
mov
sahf
cmp
ljmp
mov
test
add
mov
daa
sub
adc
jge
repz
lret
mov
std
enter
push
sbb
mov
lock
lds
push
call
test
int
hlt
scas
pop
adc
jno
movq
cmp
lcall
and
jle
sbbl
add
cmp
add
jl
xor
xorb
jae
xor
adc
add
add
jne
aam
in
inc
xor
pop
add
cmp
jmp
xor
test
mov
inc
jo
ja
push
mov
inc
adc
ss
mov
xchg
enter
rcll
mov
and
incl
add
ret
dec
dec
sahf
inc
in
std
push
sub
push
enter
cmp
fdivrl
into
fmul
call
cmpsb
stos
mov
arpl
shlb
lcall
popf
int3
cli
jo
pushl
loopne
adc
sub
call
nop
test
xchg
xor
inc
imul
loope
rcl
mov
jge
movsb
mov
push
pop
xchg
jnp
or
push
cmp
movsb
inc
dec
jp
aaa
gs
inc
xchg
fs
and
ss
gs
dec
mov
aaa
stos
ja
jae
data16
add
roll
jp
and
push
test
ja
ud2
xchg
pop
add
adc
mov
fcompl
into
inc
lds
sub
sub
push
add
faddl
lock
add
ret
pop
cwtl
xor
divb
adc
scas
repnz
sub
or
xor
pop
add
dec
sbb
or
or
pop
fldl
xchg
mov
or
adc
pop
lcall
fadds
pop
adc
lock
in
lret
ret
jo
xchg
adcb
xor
pusha
push
sti
into
faddp
sarl
pop
inc
cmp
cmp
cltd
dec
push
ret
inc
sub
sbb
fidivrl
pushf
scas
xchg
addl
add
scas
cmp
ficoml
pop
test
lock
cld
add
dec
sbb
scas
adc
sbb
shrb
dec
xchg
jle
push
fisubl
cmp
sub
shlb
fld
hlt
mov
cmpsb
pusha
cwtl
je
sbb
jmp
in
pop
daa
xchg
int3
cmp
hlt
xchg
jo
ret
inc
inc
in
pop
sarb
aaa
ficoms
adc
inc
xchg
cmovs
inc
push
popf
rol
fidivl
aas
jae
pop
lock
adc
aaa
test
ret
xchg
add
jnp
or
dec
jge
outsb
inc
shl
xor
add
popa
je
jp
stos
out
inc
push
inc
mov
jb
push
mov
pop
popa
pop
push
xor
push
add
xchg
jecxz
dec
jo
fs
ds
and
mov
arpl
out
mov
mov
and
and
cmc
lahf
lds
les
add
push
dec
enter
inc
je
ret
jns
xchg
xor
sub
push
inc
fidivrs
ret
jmp
ds
mov
cwtl
cld
dec
inc
push
mov
ret
dec
push
cs
pop
test
je
add
out
mov
ja
aas
loopne
ds
adc
loop
dec
in
jecxz
loop
dec
xor
mov
jecxz
imul
cmp
insb
loop
cmp
sahf
or
jbe
jmp
les
push
ja
lcall
and
jo
lcall
pusha
rolb
mov
mov
icebp
pop
in
lahf
ret
sbb
je
inc
stc
ljmp
inc
scas
ja
dec
inc
xlat
mov
pop
out
push
or
test
sub
mov
repz
xchg
xchg
lods
adc
pop
aaa
push
cwtl
push
push
cld
arpl
mov
lock
and
pop
push
pusha
fwait
pop
popf
pop
arpl
dec
nop
inc
or
sub
cmp
sub
sub
std
test
aam
push
adc
and
clc
jecxz
jecxz
jmp
xchg
in
in
in
adc
in
nop
fcoml
rcl
sbb
enter
rcl
scas
repnz
int
mov
cmp
sbb
loopne
stos
xor
dec
cmp
loop
xor
aaa
inc
rorb
dec
into
mov
mov
sub
add
cmp
inc
and
repnz
ja
imul
push
dec
pop
mov
loope
pop
cmp
adc
sub
rcl
mov
lock
mov
mov
pop
inc
add
mov
mov
test
ljmp
xor
bound
dec
out
je
fidivrl
and
sbb
shlb
jge
aaa
lock
cmp
mov
lret
je
mov
sar
jl
cli
cmp
pop
ja
sbb
pop
unpcklps
cmp
lret
hlt
push
lock
jl
pop
dec
inc
loopne
fsubrl
int3
mov
add
mov
adc
mov
pop
push
jp
pop
ljmp
dec
rcrl
sti
or
push
push
dec
sti
test
dec
inc
dec
xor
cwtl
add
hlt
mov
repnz
xchg
stc
pop
inc
jp
into
imul
xchg
ja
sti
and
lock
subl
orl
jns
mov
imul
pusha
fnsave
inc
ljmp
inc
inc
scas
mov
pop
cld
mov
lcall
jmp
adc
add
lods
loopne
pop
jns
push
mov
aaa
dec
faddl
fdivrl
cld
cli
jg
cmp
lods
push
in
or
out
rcrb
jecxz
pop
mov
mov
sub
xchg
inc
js
pushw
inc
call
xor
cmpb
cwtl
mov
popa
in
xchg
ret
dec
cmp
loopne
cmpl
fsts
or
std
and
mov
or
jecxz
mov
loopne
pop
lcall
jp
ss
insl
out
fmulp
cmp
sarb
out
pop
loopne
movsb
shlb
xor
aam
mov
arpl
addb
dec
xchg
in
imul
mov
jnp
mov
fsubl
int
lcall
mov
inc
jno
clc
xor
jo
push
arpl
xor
or
std
stos
jo
lds
test
jp
mov
outsb
push
arpl
cmp
mov
mov
xchg
in
sub
repnz
jecxz
jecxz
out
mov
mov
or
lock
das
xchg
test
inc
mov
mov
fimuls
mov
pusha
ja
pop
cld
sbb
psubusb
cmpsb
add
inc
xchg
lcall
lcall
rclb
xor
pop
add
fstl
je
mov
add
je
inc
insb
inc
jns
push
xchg
call
mov
shrb
mov
xor
jecxz
mulb
dec
pop
adc
inc
sub
pushl
aam
test
sarb
int
xchg
cltd
xchg
pop
jo
dec
xchg
ds
je
or
sti
fisubs
mov
out
repnz
adcl
mov
in
sbb
loop
jle
mov
outsb
pop
sahf
sti
jb
sahf
test
lcall
cwtl
mov
pop
pop
or
sti
mov
mov
jp
test
sti
test
add
mov
in
jns
jnp
lods
sahf
cmpsb
scas
adc
dec
pop
sahf
and
adc
add
fisubrs
imul
les
lret
sti
push
aam
sti
mov
test
mov
xchg
dec
insb
outsl
mov
jge
xor
push
stos
into
xor
jae
sarb
push
lret
inc
xor
das
jle
push
nop
nop
inc
rcrl
sti
and
lret
jbe
outsb
mov
add
adc
es
leave
and
mov
xchg
xchg
mov
jae
inc
aaa
pop
mov
push
xor
sti
inc
sbb
lret
jo
inc
ljmp
or
insb
sbb
cmpsb
push
push
mov
sahf
in
jb
pushf
data16
push
jecxz
mov
mov
mov
clc
ficomps
jecxz
xchg
adc
jo
negl
std
mov
jecxz
outsb
scas
sub
fs
testl
xor
rclb
je
div
test
fs
stc
pop
loopne
sbb
xchg
daa
test
mov
sahf
jns
adc
mov
xchg
repnz
dec
pop
inc
out
add
inc
xor
pop
sub
enter
sbb
push
xor
movsb
stc
xchg
jae
icebp
mov
mov
es
arpl
jecxz
in
sarb
adc
getsec
or
pop
daa
and
pop
in
sti
mov
sahf
inc
pushf
jns
push
std
test
fnstsw
in
scas
out
loope
frstor
int
fadd
mov
js
daa
mov
or
ret
dec
push
out
push
xor
and
jmp
xchg
mov
and
arpl
dec
jle
jp
jbe
jb
outsb
inc
push
push
bound
adc
xor
sbb
adc
sub
mov
stc
and
stos
cwtl
mov
arpl
mov
in
xchg
loop
mov
into
arpl
dec
iret
inc
ja
pop
and
push
jmp
jo
loop
shl
bnd
out
or
push
cmpsb
mov
push
add
call
shrb
fsubs
jge
outsb
mov
sbb
and
mov
cmp
rolb
rorl
jno
pop
mov
jae
fnstenv
mov
inc
in
sub
push
jns
dec
pop
mov
cmp
jle
stos
rorb
sub
sbb
cwtl
pop
lock
inc
mov
sub
xor
inc
pop
dec
sub
inc
dec
push
repnz
jb
pusha
fidivrs
push
js
dec
xchg
insb
xchg
rorb
xchg
stc
mov
push
insb
cmp
mov
sub
leave
hlt
cltd
xchg
bound
dec
and
mov
and
jo
loop
xor
inc
xlat
inc
mov
inc
rol
dec
jmp
pop
push
clc
and
arpl
inc
dec
cmp
or
or
ret
mov
jns
xchg
push
xor
dec
lock
packssdw
or
mov
fsts
stos
lcall
push
jns
mov
mov
sbb
cmpsb
mov
out
in
std
jl
push
ror
xchg
lret
xlat
pop
fidivl
xchg
addb
jo
dec
and
push
jmp
mov
add
pop
mov
jns
dec
or
loope
addl
or
mov
pop
dec
inc
dec
pop
sub
fstps
loope
push
xor
cli
loop
lds
xor
ds
stc
push
leave
push
fcoml
pop
cmp
pushf
inc
into
pop
mov
sbb
cmp
lret
js
cs
lock
add
mov
jbe
adc
jae
cltd
jns
insb
xchg
cmp
and
pusha
xor
cs
mov
pushf
insl
cs
je
dec
push
xor
stc
icebp
xchg
loopne
cwtl
pop
imul
psrlq
mov
jbe
pop
push
dec
sub
mov
lds
or
jne
mov
rorl
leave
int3
arpl
jne
mov
sub
cs
mov
movsl
in
add
dec
or
push
pop
shl
or
std
or
leave
cmp
test
push
add
jle
shl
cltd
jecxz
sub
inc
je
and
outsl
jmp
mov
sub
mov
or
push
in
cld
mov
jns
xchg
fstpl
pop
jle
movsl
fcmovu
stc
xor
or
mov
orw
repnz
xor
inc
mov
or
mov
xchg
pop
stos
je
jo
lcall
adc
adc
ret
inc
pusha
insl
dec
popa
xor
or
adc
mov
xchg
lret
insl
lock
cmp
adc
pop
and
ja
stos
and
sarb
sub
loop
sbb
cmp
test
decb
mov
jge
fidivl
and
nop
or
jb
jo
sub
stos
shll
xchg
jns
xor
mov
je
jle
xchg
add
push
xchg
dec
ret
pushw
loop
sub
mov
or
rorl
mov
shl
mulb
jmp
add
es
ss
sub
jo
loop
sbb
jle
adc
in
or
sarl
jae
idivb
ficompl
rclb
mov
add
movsbl
dec
pop
xor
sub
jb
mov
sub
sub
inc
pop
sbb
jns
ss
hlt
insb
cs
pavgw
jecxz
lock
xchg
or
ljmp
fcmove
roll
mov
mov
pop
jae
ret
bound
jb
pop
jle
push
scas
pop
rorb
push
and
add
mov
xchg
mov
je
and
loop
xchg
xchg
shrl
jns
loop
jbe
lcall
push
pop
dec
push
inc
int3
mov
scas
lfs
cwtl
lcall
nop
out
xlat
pop
mov
push
push
xor
in
hlt
cli
dec
sub
push
push
jns
mov
jns
mov
mov
sub
or
ds
or
sub
mov
dec
jo
sub
push
sahf
jle
xchg
mov
inc
mov
pushf
inc
push
inc
rcr
sub
jle
jp
jbe
jb
outsb
cltd
push
jae
bound
xchg
dec
and
mov
ja
cmp
cmp
inc
jns
sub
push
mov
jg
xor
decb
ljmp
fidivrl
into
xchg
ljmp
pop
out
sub
fidivrs
out
outsb
hlt
mov
lea
test
jns
mov
or
push
jae
cmp
pop
stos
mov
ja
xchg
inc
pushf
mov
ja
push
inc
xchg
out
or
mov
mov
es
sub
fcmovb
mov
mov
jbe
sub
xor
out
lcall
cwtl
mov
stc
ss
popf
into
loop
sahf
in
jle
dec
push
mov
fsubrp
pop
mov
pusha
xchg
ss
cmp
sbb
xchg
rorb
scas
aaa
nop
jle
movsb
dec
idivb
fidivs
in
pop
clc
jle
or
push
cmp
out
pusha
mov
xor
stos
sbb
int
inc
retw
pusha
ljmp
loop
jp
mov
push
shlb
js
es
movsb
push
fdivrp
mov
loop
xchg
ds
fstpt
fidivrs
cmpsb
or
imul
ficoml
mull
movsb
lock
arpl
jecxz
out
scas
loop
jle
inc
data16
lock
cmp
add
sti
and
bound
add
pop
or
sub
inc
jae
es
cmp
and
ds
repz
fisubrs
decb
mov
test
and
inc
cmp
lds
or
into
pop
jns
sahf
or
stos
loopne
pop
push
jnp
ljmp
shlb
mov
push
pop
mov
stos
popf
cmpsb
loope
inc
repnz
push
jnp
decb
div
rclb
cmpsb
orb
and
sub
lret
jle
imul
lret
in
subb
out
pop
mov
sbb
sahf
xchg
add
adc
mov
out
out
out
mov
xchg
cmp
mov
fwait
scas
sahf
xchg
lcall
stos
into
mov
xchg
rcrl
and
jp
cmp
fiaddl
xchg
xchg
out
cmp
ljmp
or
sahf
dec
jmp
or
push
sub
iretw
xchg
mov
ds
push
setl
and
imul
iret
loop
mov
rcrl
sbb
lret
jge
xchg
out
push
mov
jle
jp
inc
outsl
jb
push
push
data16
push
fcoml
cmp
or
push
popf
sbb
or
add
xchg
cli
fcomps
mov
into
outsl
mov
cmpb
push
push
mov
addb
sar
mov
test
cwtl
jmp
jb
imul
stc
mov
outsb
adc
mov
push
mov
pop
jle
js
repz
mov
pop
pop
pop
lods
sub
mov
adc
cmp
push
sub
mov
sub
mov
les
clc
and
and
nop
cmp
into
mov
sahf
shr
sub
push
ds
psubsw
dec
inc
cwtl
xor
negb
mov
jns
mov
out
mov
subb
pop
popf
pop
lock
cs
into
ret
xchg
xor
cmpsb
xchg
sub
jle
mov
push
and
mov
mov
js
mov
mov
mov
mov
mov
mov
sbb
inc
mov
mov
push
stos
lds
loop
mov
imul
inc
ffree
push
mov
push
or
add
or
subl
ljmp
push
mov
fdivr
test
fdivrp
mov
dec
jp
ret
outsl
mov
jo
nop
cmpsb
mov
sbb
outsb
fidivrl
sub
sub
mov
pop
sub
outsb
push
out
in
aaa
jbe
pop
jp
lock
mov
push
xchg
adc
push
jl
call
pop
sahf
cwtl
xor
inc
jb
movb
and
out
or
xchg
shrb
in
cmp
inc
rorb
aaa
idivb
into
and
enter
xor
clc
out
pop
cmp
fiadds
mov
mov
or
push
xchg
rcrb
loopne
scas
pop
aam
xchg
mov
fidivs
sub
cmp
ljmp
pop
lcall
xor
cmp
jns
cli
fiadds
shl
and
call
pop
call
pop
or
loop
into
cmp
pop
jle
insb
push
sbb
mov
lock
daa
fidivs
mov
mov
jns
cmpl
stos
add
push
cmp
pushf
pop
fisubrl
mov
lock
cmp
pop
not
lock
cmp
es
sahf
ss
setns
jp
stos
mov
rorl
push
or
mov
mov
std
cli
inc
shlb
xchg
std
cli
mov
jb
push
ja
sub
jb
push
ja
fcmovu
mov
jbe
mov
stos
jmp
aaa
mov
sahf
lcall
inc
cli
mov
mov
xchg
sbb
or
and
decb
xchg
pop
loop
and
mov
insb
push
push
inc
out
outsl
sbb
mov
dec
ficoml
jmp
aaa
ss
fldl
mov
add
push
mov
inc
xor
ja
frstor
jns
adc
cmp
punpckldq
int3
push
jb
pusha
push
mov
std
push
lret
out
sar
push
sarl
divps
out
outsl
or
push
cltd
pop
mov
jle
js
push
mov
cwtl
fsubl
lret
mov
lret
fisubrl
shr
sub
cli
push
fidivrl
mov
sahf
cwtl
push
dec
loop
fisubs
jbe
dec
dec
mov
push
cli
in
aaa
or
jb
xor
inc
and
inc
cli
rclb
fs
stos
je
xor
inc
shll
adc
idivb
cmpsb
cmp
movsb
daa
push
jae
ja,pn
and
push
out
lret
mov
in
mov
shrb
xchg
rolb
add
int3
push
jo
lret
popf
inc
adc
push
call
add
call
push
call
and
or
shrb
sub
xor
ss
outsb
sarb
sub
push
rclb
mov
lret
add
sbb
repnz
ror
jl
mov
lock
in
jp
sub
adc
mov
aaa
fidivl
mov
sahf
xor
jo
add
jns
ljmp
lcall
dec
inc
shlb
add
cli
or
stos
mov
push
pop
inc
mov
or
loop
into
mov
or
push
mov
pop
xchg
enter
jo
mov
cmp
out
inc
testb
out
mov
inc
fcompl
jle
mov
jo
add
xor
ljmp
lcall
add
push
pop
dec
and
xor
pusha
cmp
subb
inc
in
imul
mov
mov
cmpsb
cltd
sarb
loop
ljmp
add
lret
inc
outsl
jp
pop
pop
push
std
inc
sub
adcb
mov
xchg
inc
mov
mov
mov
cs
in
imul
add
inc
sub
add
sub
lcall
inc
lock
cli
outsl
loop
inc
inc
dec
adc
push
xor
cmp
pop
shlb
xchg
dec
and
pop
jo
cmp
loop
push
mov
jecxz
jecxz
lret
mov
shlb
cmp
ret
jnp
ljmp
pop
adc
xchg
loop
dec
pop
mov
scas
xchg
dec
push
mov
sbb
fcoml
pop
pinsrw
mov
pop
jae
mov
jmp
pop
lret
ret
mov
loopne
popf
orl
out
aad
pop
jb
lock
pusha
fiaddl
or
and
addb
repnz
mov
stos
in
push
and
jp
push
pop
jno
xor
stc
shrb
cli
lcall
and
bnd
push
loop
hlt
xor
pushf
out
lret
lret
or
fstl
out
jle
out
clc
movsb
iret
jp
push
mov
adc
fldt
out
dec
xchg
fisubl
test
rorl
xor
jmp
mov
jecxz
adc
arpl
out
ret
mov
ds
loop
mov
sub
dec
ror
push
sub
adc
imul
sbb
cmp
outsl
mov
add
je
hlt
dec
sub
repz
jb
enter
xchg
jmp
mov
xor
popf
call
test
lcall
in
out
icebp
mov
in
cmpsl
cmp
int3
int3
xor
insb
add
out
and
ficompl
mov
inc
xor
mov
cmp
xor
mov
add
ret
mov
pop
jle
rorl
movsl
imul
cmp
xor
push
stc
xor
fdivrl
cli
mov
enter
cmp
dec
jb
outsb
scas
and
ds
xchg
outsb
cwtl
inc
loop
mov
mov
add
ud2
stos
add
pop
out
mov
push
jmp
pusha
mov
cmp
insb
pop
lahf
test
lock
mov
aaa
push
push
inc
dec
dec
and
xchg
int
je
pop
stos
fstpl
sub
lea
testb
and
mov
pop
cmp
jp
jp
adc
loop
stos
ret
bound
jmp
aaa
fidivrs
fucomp
sbb
ljmp
stos
sbb
jmp
aaa
sub
ss
mov
into
in
inc
dec
sahf
push
outsl
lcall
mov
into
pop
add
ficompl
mov
and
lock
lcall
xor
fwait
andb
es
sbb
in
insb
dec
nop
sub
std
and
lock
mov
xchg
mov
push
lret
xor
or
add
jp
jmp
push
shlb
mov
sbb
in
mov
dec
fcmovu
pop
out
mov
add
mov
stos
lret
int
scas
lret
dec
mov
push
jl
xchg
mov
sbb
pop
fdivp
cmpsb
rorb
mov
icebp
push
mov
jle
stos
xchg
xchg
mov
mov
test
xor
inc
jle
scas
pop
sub
sahf
mov
inc
push
loop
mov
sub
dec
sub
leave
sbb
sahf
lahf
or
test
xchg
dec
sbb
repnz
or
loopne
fimull
mov
stos
mov
inc
push
ss
mov
mov
mov
inc
xchg
mov
cli
xchg
psrlw
xchg
push
outsb
cld
lock
xor
andb
imul
jns
shlb
les
in
aam
loop,pt
and
ret
cli
pop
rclb
sahf
pop
xor
pop
dec
cmp
loopne
pop
xor
pop
data16
loop
jb
scas
pop
push
fbstp
pop
jno
inc
push
ljmp
popf
fisubl
cli
add
and
mov
pmulhw
push
dec
push
into
loopne
pop
mov
fdivrl
out
pushf
xor
pusha
lods
or
mov
pusha
mov
adc
mov
movsbl
aam
add
sub
sub
loopne
pushf
add
sbb
nop
or
pop
sub
cli
jp,pt
pop
loopne
cs
ds
and
out
or
std
and
sub
xor
ss
sbb
push
jmp
push
pusha
lret
es
jp
jp
xchg
adc
stos
sbb
rol
in
jle
bound
lock
cs
ficoms
sub
jb
inc
ds
mov
imul
sahf
out
cli
std
ljmp
adc
mov
and
cmp
outsb
leave
xchg
pop
push
mov
sbb
cmp
les
mov
les
fidivrs
cmpsb
mov
or
xor
pusha
es
or
outsl
mov
and
pop
push
pop
ss
insb
negl
imul
or
adc
sbb
icebp
insb
mov
scas
lock
xchg
ds
mov
popf
ret
stc
jle
les
mov
aaa
push
in
push
lock
push
fs
cmp
jb
mov
pop
xor
xor
xchg
and
xchg
sbb
and
pusha
out
sbb
into
and
pusha
or
add
outsl
sahf
stc
fsubs
pop
push
outsb
clc
xor
pusha
or
adc
stc
and
es
mov
inc
adc
and
or
pop
push
push
xor
jmp
inc
inc
dec
stc
dec
or
add
adc
aam
aam
jb
jbe
sbb
inc
rclb
mov
in
sbb
cmpsb
or
jle
fcoms
push
stc
xor
hlt
ss
fidivl
sbb
fstp
sub
pop
pushf
dec
push
es
or
mov
add
push
shlb
pop
push
sub
ljmp
lcall
rolb
xor
aaa
lret
xchg
push
fmuls
js
adc
lock
sub
out
xor
push
sahf
shr
test
bound
outsb
fsubl
sub
add
ret
jle
xor
sarb
pop
cs
dec
adc
ret
lcall
dec
add
dec
out
cld
enter
pusha
cmp
mulb
inc
ja
and
repnz
sub
mov
cmpsb
sbb
jle
inc
pop
push
cli
lock
dec
daa
fidivrs
mov
add
xchg
gs
jo
les
push
sbb
add
ss
xchg
adc
outsb
add
stos
pop
or
ds
pop
int3
pusha
arpl
icebp
out
pop
ficoms
jecxz
out
stos
es
jge
pop
loop
ss
xchg
adc
ljmp
sahf
jmp
xchg
push
xchg
pusha
add
mov
add
or
and
jle
lock
push
push
dec
and
ds
xchg
sbb
ficomps
out
stos
cmp
xchg
jbe
outsb
dec
xor
cmp
xor
dec
nopl
decb
out
out
xorb
jle
nop
ret
sahf
sbb
nop
pop
dec
xchg
es
mov
xor
out
fimull
mov
fsubl
ljmp
cmp
add
pop
cs
jo
loop
out
mov
xor
mov
cmpsb
xor
and
jle
jbe
sub
ds
out
dec
cmp
xor
and
pop
es
cmp
scas
out
sahf
loop
mov
jle
jle
cli
pop
outsb
and
pop
mov
sbb
ss
je
es
push
xchg
lock
call
pop
out
cld
xchg
add
in
outsl
mov
adc
inc
push
add
jle
mov
outsb
lods
subb
mov
jecxz
dec
add
xor
sbb
jle
push
outsb
sub
jo
add
jle
and
add
xor
lret
mov
ja
push
jmp
jp
xor
xor
outsb
in
jle
push
mov
inc
adc
cmp
pusha
jle
or
xor
pusha
fidivrs
lret
cmpsb
sbb
mov
push
pop
jle
inc
pop
adc
es
sbb
shrb
int3
mov
add
outsb
mov
xor
int3
outsl
ds
and
jns
out
inc
jp
dec
lret
stc
cmpsb
inc
js
pop
jp
pop
dec
data16
push
dec
jns
es
push
sahf
or
sbb
mov
rolb
xor
pop
loop
jns
mov
cmpsb
test
hlt
add
jmp
mov
sub
scas
push
add
push
mov
mov
cmp
pop
sahf
cmpsb
cli
enter
loopne
push
xchg
pop
loop
ss
outsb
push
jecxz
out
out
out
pop
push
repnz
cmp
fcomi
repnz
je
scas
shl
stos
ss
mov
cs
hlt
mov
mov
inc
xchg
test
jb
mov
fisubrl
or
pusha
es
mov
mov
jb
sbb
out
sub
and
rclb
mov
mov
jb
adcb
sub
ret
ds
push
mov
dec
cs
fcmovb
in
bswap
mov
mov
push
cltd
into
mov
jmp
lret
stos
xor
mov
fsubl
xchg
dec
push
cwtl
pop
cmp
push
mov
out
cltd
push
lock
xor
test
test
out
sub
jecxz
out
mov
and
pop
outsb
mov
imulb
ficoms
shlb
mov
cmp
lcall
jle
ret
lcall
enter
xor
fstl
sub
inc
add
sbb
mov
xchg
jle
mov
sbb
push
outsl
xchg
xchg
daa
sub
pop
jns
imul
or
mov
or
mov
lock
cs
and
fwait
out
sahf
loop
mov
jo
mov
ja
dec
jbe
lock
dec
clc
or
xchg
sub
cs
or
pop
sarb
scas
xor
push
dec
or
xchg
pop
outsb
or
dec
jp
cmp
adc
or
fimuls
ja
xchg
in
cmp
es
cli
jnp
out
fisubs
cwtl
push
bound
xchg
repnz
lods
sbb
sbb
inc
add
jp
adc
lea
jecxz
out
notb
rolb
out
pop
std
mov
pop
call
inc
stos
pop
ss
sub
mov
jbe
or
cmp
incb
pusha
shlb
stos
add
dec
push
adc
dec
sbb
mov
sub
enter
inc
negb
pop
icebp
inc
outsl
bound
inc
adc
fisubs
iret
lcall
fdivs
mov
mov
mov
adc
outsb
add
mov
sub
add
adc
mov
adc
into
cli
sub
cs
inc
push
xor
ret
fsubrl
or
orb
enter
mov
stc
repnz
cs
lret
cmpsb
out
sahf
dec
inc
jns
inc
insb
into
in
inc
lock
xchg
mov
les
imul
outsl
inc
inc
push
out
mov
pop
mov
call
ljmp
data16
cli
shlb
into
aaa
cmpsb
add
xchg
pop
sub
cli
dec
inc
stc
lret
mov
add
inc
cmp
sahf
divb
enter
ja
outsb
inc
add
add
mul
or
pop
stos
inc
jl
andb
outsl
stc
jp
lock
sub
dec
loop
pushf
enter
mov
pop
push
dec
sub
push
shl
sbb
sbb
inc
ficompl
popf
xchg
cltd
push
jo
adc
notb
fisubs
out
cmp
cltd
mov
mov
repnz
enter
and
push
or
sub
mov
fneni(8087
inc
cmp
mov
jp
ss
imulb
dec
and
mov
fmulp
hlt
fdivl
ret
lcall
and
push
cli
cli
lock
test
jns
xor
mov
adc
stos
mov
sbb
inc
add
push
out
mov
lcall
in
xor
push
jns
shr
push
mov
jp
mov
push
mov
sbb
stos
push
sahf
push
jb
adc
inc
jo
sub
jp
sbb
dec
pop
sub
std
jbe
cmpsl
and
push
jp
inc
dec
sbb
and
cli
mov
lret
sub
adcl
or
ds
repnz
pop
cmp
xchg
mov
sub
int
xor
xor
or
jl
jmp
jbe
or
and
mov
mov
xchg
add
pop
cmp
int3
adc
xor
mov
stos
inc
sarb
or
jns
lret
es
inc
mov
xor
or
iret
nop
mov
in
add
loopne
or
add
sbb
movsb
aaa
adc
pop
mov
mov
sbb
xchg
ds
mov
mov
ss
dec
stos
ljmp
and
adc
mov
outsb
je
mov
inc
adc
nop
ljmp
nop
bound
cs
ja
sbb
pop
xor
out
pop
sti
ss
mov
loope
imulb
mov
pop
nop
repnz
push
mov
mov
jo
loop
lcall
aaa
adc
ljmp
pop
rolb
jns
cli
fwait
loop
mov
test
bound
xchg
xor
dec
cli
add
rolb
xchg
insb
push
mov
pop
fsub
popf
mov
lret
and
sbb
mov
fdivrl
mov
inc
pop
lcall
es
cmp
pop
and
jle
jp
cmpsb
xorb
xor
xchg
xor
and
cmp
idivb
imul
les
cmp
scas
add
cmp
loop
scas
mov
lret
sbb
mov
idivb
jg
psubusb
mov
in
push
aad
loopne
mov
ret
stc
mov
aam
fdivrp
xchg
nop
xchg
daa
lods
cwtl
sahf
daa
test
nop
pushf
daa
mov
adc
mov
push
mov
or
fildl
test
rcl
lret
pushf
mov
call
or
rcrl
mov
add
sub
insb
out
popf
mov
scas
pop
lcall
sahf
mov
sbb
int
jp
sbb
int
sub
pop
or
mov
sbb
test
movsb
test
rclb
lock
movsb
rclb
lret
call
adc
or
test
mov
mov
xabort
xchg
adc
or
mov
ljmp
ss
psadbw
jmp
cmp
push
fistpl
mov
push
mov
or
sub
sbb
daa
mov
adc
xchg
mov
loopne
xor
lea
outsl
pop
mov
mov
xchg
insb
adc
xchg
mov
push
stos
mov
inc
ficoml
lahf
stos
and
xchg
movb
loop
cmp
mov
scas
cmp
push
aaa
inc
das
ss
pushf
js
call
adc
cmp
movsb
xor
rclb
ror
sub
movsb
lret
lahf
lods
daa
cmc
mov
insb
shlb
mov
call
fidivrs
das
lock
add
shrl
nop
lock
aam
loopne
daa
loope
adc
push
push
adc
loope
add
lods
xchg
sahf
lcall
push
push
lods
mov
in
lcall
daa
mov
mov
rolb
test
inc
xchg
xor
es
mov
fiaddl
xchg
mov
jne
push
in
test
pop
adc
test
xor
out
lret
scas
enter
ret
lock
mov
hlt
xadd
or
sbb
sbb
ret
call
add
test
push
mov
mov
fisubl
loopne
xor
enter
test
sub
xchg
das
push
fcmovu
scas
mov
push
pop
fcomps
lret
add
sbb
pop
lidtl
sahf
enter
and
cmpsl
stos
in
ror
sub
into
and
xchg
cs
xor
cmp
jmp
cld
jecxz
nop
mov
lock
test
xor
not
sub
fidivl
scas
xchg
test
cmp
cmc
inc
dec
testb
dec
xor
int3
push
xor
push
xor
pop
daa
mov
inc
and
xchg
push
add
pop
xchg
mov
ss
push
mov
inc
ret
in
lcall
in
dec
mov
insb
pushf
movsb
and
rolb
push
lcall
mov
into
rorl
sub
mov
push
fisubl
std
loop
call
nop
clc
aaa
push
mov
mov
stos
lahf
in
and
lock
stos
lahf
cld
and
add
scas
aaa
into
mov
outsb
in
sbb
and
sub
pop
stc
cs
xor
cmp
sbb
in
inc
sbb
inc
sub
fxch
push
push
lret
cmp
outsb
inc
ljmp
cs
push
enter
jo
hlt
lock
cli
mov
sub
call
mov
dec
enter
mov
test
lea
push
mov
mov
mov
xor
pop
xor
fs
jl
add
pop
or
add
mov
mov
and
pop
or
pop
or
in
pop
ds
cmp
xor
xchg
ds
mov
rclb
pop
rcrb
cmpsb
inc
push
adc
rorl
movsb
add
repnz
ljmp
fisubrl
mov
sub
lret
ljmp
es
lea
xchg
inc
push
xor
fisttpll
inc
hlt
mov
jecxz,pt
push
push
jo
and
push
xchg
sbb
mov
lock
cmp
dec
adc
mov
sub
adc
cmp
rcrl
shll
push
in
xchg
loopne
test
mov
outsb
push
test
mov
push
jo
test
cmp
xlat
bswap
xlat
dec
rcl
dec
aam
xlat
dec
fcmovbe
dec
fadd
dec
out
les
mov
mov
bound
rcl
pusha
xchg
rcl
sub
sub
data16
cli
xor
or
fidivl
push
sbb
mov
xchg
fmulp
mov
fiaddl
scas
pop
lcall
cli
pop
sbb
adc
ljmp
rclb
pop
cmp
pusha
pop
pusha
cli
inc
fnsetpm(287
mov
inc
pushf
mov
or
sbb
sbb
cltd
or
sbb
stc
mov
cmp
pop
jecxz
mov
cmpsb
sbb
cmp
lods
push
les
mov
pop
in
mov
pusha
lret
nop
aam
ror
inc
pushf
fidivl
sti
jmp
repnz
decb
or
and
sub
lods
sub
aaa
testb
inc
jecxz
decb
xchg
pop
stc
cwtl
sahf
pushf
in
pop
in
cmp
or
ss
ja
ds
popf
movsb
dec
cmpsb
xor
test
in
mov
lds
lds
lds
lds
cmpsl
sub
mov
sub
mov
stos
clc
inc
stc
jb
test
ds
or
pusha
dec
cmc
in
out
xor
inc
int
ljmp
ljmp
and
mov
jle
ja
mov
lods
lahf
incb
daa
push
clc
popf
cltd
xchg
mov
xchg
outsl
mov
fdivs
je
bound
sub
outsl
sbb
mov
repnz
mov
lret
mov
push
ss
adc
adc
int
or
es
ljmp
bound
ljmp
or
mov
lock
sbb
push
mov
mov
add
out
sar
cmp
outsl
sub
inc
ljmp
mov
insb
and
inc
cli
dec
sub
inc
inc
ljmp
sub
leave
push
inc
jle
cli
adc
cmp
lods
pop
aaa
push
adc
fisubrl
cmp
pop
jb
fnstsw
xor
sar
or
mov
enter
sub
loop
sbb
sahf
and
bound
and
xchg
test
sub
fiaddl
mov
cli
jae
in
mov
xor
jns
rorb
inc
inc
test
nop
mov
pop
ret
lret
mov
add
jbe
inc
mov
cmp
adc
nop
je
dec
push
and
jecxz
jecxz
jecxz
jecxz
jecxz
mov
js
je
jo
insb
fldt
fs
pusha
fwait
pop
fwait
pop
fwait
push
fwait
push
fwait
dec
fwait
dec
fwait
inc
fwait
inc
fwait
cmp
cmp
sub
sub
sbb
sbb
or
fwait
add
hlt
lock
fwait
in
fwait
call
fcompl
rcrb
les
mov
fwait
lods
fwait
test
movsb
fwait
mov
fimull
mov
int
mov
outsb
ja
lock
push
lods
je
jge
je
mov
sub
dec
aas
dec
add
cmp
mov
dec
jb
cmp
lock
cli
pop
outsb
jae
cmp
inc
cmpsb
xchg
icebp
or
xor
dec
or
fs
insb
push
in
sbb
push
pop
lods
out
les
xor
push
insl
dec
dec
sbb
call
mov
pop
mov
push
xchg
pop
addr16
pcmpgtd
xor
testb
cli
and
pushf
push
dec
xor
loop
mov
mov
jns
push
xor
dec
mov
ficoms
push
call
and
mov
mov
lcall
xchg
mov
jle
jb
repnz
push
hlt
rcrb
jns
add
mov
out
ds
pop
data16
hlt
data16
std
in
dec
sbb
ljmp
aad
dec
jnp
jb
sub
lcall
outsl
add
pop
pop
xchg
stos
mov
and
jb
jnp
and
dec
or
test
jo
xchg
push
andb
inc
xlat
movsl
rcrl
negb
ljmp
dec
data16
mov
clc
loop
mov
cmpsl
push
lahf
and
dec
daa
push
repnz
mulb
je
test
lret
js
jb
cmp
stc
mov
inc
fs
pusha
xor
in
fisubs
jns
push
dec
ret
or
aaa
jne
cld
fs
into
pop
mov
ret
dec
sbb
sub
push
repz
fnstenv
lock
pop
rep
rol
scas
mov
icebp
adc
dec
inc
in
dec
inc
dec
sbb
jle
cmp
lods
jbe
adc
sub
adc
dec
mov
test
pop
bnd
imul
int3
sarb
mov
out
adc
and
inc
imul
or
ficoms
hlt
std
xor
mov
int3
sahf
xchg
push
inc
xchg
push
icebp
sbb
adc
xor
inc
stos
ja
or
adc
imul
cld
dec
outsb
xor
push
out
je
inc
dec
out
mov
inc
or
dec
pop
dec
aas
rcrl
insb
es
sub
jp
jno
cmpsb
xor
xchg
enter
pusha
dec
or
xor
jg
fiadds
jo
and
jb
push
xchg
push
mov
movsl
es
jno
mov
inc
dec
sbb
xchg
jge
push
out
repnz
rclb
push
jae
aam
mov
pop
roll
mov
sbb
mov
ds
push
sahf
bswap
or
aas
mov
jle
outsb
xchg
ret
dec
rcl
xchg
int
push
dec
test
dec
mov
jo
stc
jbe
cmp
xchg
rclb
std
loop,pt
mov
es
faddl
or
jne
enter
aaa
dec
ret
aaa
jecxz
add
cmp
add
push
sub
arpl
imul
push
dec
dec
lret
pop
xchg
inc
jns
push
mov
sbbl
push
pop
mov
mov
icebp
and
adc
or
outsl
mov
push
or
loopne
movsb
xchg
js
xor
add
dec
xchg
dec
inc
dec
xchg
mov
adc
and
fwait
push
sbb
shlb
aam
sbb
or
movsb
xchg
lcall
and
dec
sub
ja
inc
sbb
jl
loop
push
lds
jo
stos
lcall
mov
push
test
sub
aaa
xor
inc
xchg
loopne
lcall
pop
into
xchg
sahf
int
push
adc
cmp
sti
mov
pop
bound
mov
lds
lock
push
dec
fistpl
xchg
rolb
in
or
or
cmp
lret
or
push
adc
aam
inc
in
mov
xor
ret
push
paddd
cmp
dec
xchg
ja
jle
pop
add
dec
das
mov
loope
mov
pop
mov
test
and
gs
inc
mov
idivb
jo
ss
in
mov
mov
cmpsl
iret
xchg
rcll
cmpsl
icebp
adc
sub
push
jnp
ret
ds
xchg
add
xor
or
push
inc
mov
bound
dec
xchg
les
filds
ret
inc
test
out
dec
movsl
jne
inc
mov
add
dec
push
mov
stc
hlt
xor
xchg
dec
lods
lds
pop
iret
jne
inc
leave
and
insb
or
push
sub
xchg
push
ljmp
or
cmp
cmp
push
and
adc
pushf
pop
dec
pop
dec
dec
add
ja
dec
and
les
enter
in
incl
and
xchg
push
into
inc
cli
outsb
pushf
xchg
cli
xor
pop
fbld
dec
nop
mov
aaa
pop
jg
insl
dec
pop
cmp
cmpb
dec
cmp
in
jo
mov
ret
push
cli
jne
mov
add
inc
sbb
adc
aaa
cmc
and
mov
push
add
mov
jg
push
pop
add
aaa
aad
add
dec
sbb
jnp
cmp
add
sbb
je
sbb
add
stc
xchg
fdivrl
sbb
hlt
push
arpl
add
inc
mov
jae
push
mov
inc
dec
fs
adc
in
dec
xor
repnz
repnz
stc
mov
dec
adc
test
data16
leave
jnp
inc
xor
mov
inc
rcrl
inc
aas
inc
push
jno
jns
push
pop
jns
xor
ja
dec
dec
dec
js
ret
xor
xorb
jno
dec
sahf
stos
out
pusha
jo
fs
and
mov
mov
popa
push
outsl
je
orb
loope
dec
xchg
out
or
jae
mov
jl
scas
pusha
ljmp
out
push
inc
add
mov
jecxz
push
adc
orb
shlb
fs
insl
inc
notb
cmp
stc
pop
or
hlt
xchg
mov
and
popf
movsb
and
jo
jnp
dec
sbb
out
mov
es
mov
test
sahf
cld
in
fcoml
lcall
sub
cmp
push
push
jg
dec
push
ficoms
sub
out
shll
cmp
loop
cmpsb
call
test
ret
or
les
notl
into
jmp
inc
xchg
out
sbb
push
das
mov
test
stc
lcall
cmp
xchg
adc
test
mov
mov
dec
adc
lret
push
imul
mov
sub
mov
push
push
loopne
or
sub
adc
sub
inc
lds
push
fwait
xchg
imul
xchg
ficoms
sbb
add
aad
mov
jp
ss
mov
rorb
mov
pop
sub
xor
nop
xor
mov
push
push
cmp
mov
xchg
sti
adc
pop
int3
lret
sahf
cli
adc
inc
rcll
inc
xchg
mov
xchg
sbb
xor
cmp
xchg
jl
jl
cmp
sub
repnz
sbb
cmpsb
pop
push
outsb
cmpsb
xchg
dec
cmpl
dec
test
pop
dec
lods
dec
xchg
pop
and
ja
je
lret
stc
insb
addl
fidivrs
cmp
jns
cmpl
cmp
stos
mov
mov
into
ret
outsl
shl
dec
jnp
jnp
ret
lret
mov
push
dec
mov
jns
fildl
inc
orb
pop
adc
inc
cmp
adc
je
sti
mov
daa
inc
xchg
mov
add
dec
rorl
sbb
and
inc
sub
mov
into
or
xor
loop
jp
lcall
sbb
hlt
push
stc
lods
shll
fdivrl
and
bound
mov
push
jae
dec
dec
mov
add
push
ja
rorl
xchg
dec
pop
pop
inc
mov
sahf
insb
sub
rcll
fwait
jge
dec
pop
dec
sti
mov
push
stos
xor
in
dec
dec
sahf
xor
jge
or
jge
mov
inc
cmpsl
push
jns
sub
addl
xorl
cmp
mov
mov
xchg
jmp
jge
dec
pop
inc
adc
scas
xor
add
ds
outsb
ja
inc
pop
insb
int3
add
dec
repz
add
mov
dec
xor
xchg
mov
inc
popa
dec
movsb
movsl
and
jg
outsl
inc
das
jmp
or
push
pop
lock
hlt
ss
mov
jb
adc
sbb
leave
lcall
inc
les
jge
adc
add
inc
inc
and
ljmp
js
test
movsl
add
mov
jns
pusha
bound
js
adc
inc
jle
pop
push
or
cmp
lods
pop
xchg
inc
mov
push
inc
and
jns
filds
add
sub
adcl
rclb
xchg
push
and
out
fimuls
out
imul
ja
fnsave
mov
shll
inc
repnz
mov
dec
iret
inc
icebp
add
je
push
and
push
adc
aaa
push
add
mov
scas
dec
jnp
sub
lds
adc
add
je
enter
xchg
jo
dec
fs
fstps
je
test
xchg
cli
xor
pusha
push
scas
notb
jl
dec
imul
jecxz
mov
or
xchg
cwtl
mov
jbe
dec
das
adc
scas
xchg
adc
dec
iretw
inc
mov
dec
xchg
je
in
jmp
and
enter
pusha
ss
shlb
push
insb
sub
roll
mov
inc
sti
inc
fcoml
es
mov
bound
outsl
imul
les
and
xor
inc
lea
inc
insb
push
loop
mov
ffree
imulb
adc
push
cmp
add
xchg
xor
dec
gs
shlb
xor
in
sub
orb
inc
fildll
imulb
test
push
mov
mov
push
adcb
pop
inc
sub
or
push
test
divb
and
pop
cmpsb
lea
fistpl
loop
mov
add
xor
cmp
inc
xor
fisubrs
negl
adc
fisubs
dec
ret
pop
inc
je
dec
mov
aas
dec
aam
arpl
and
repnz
in
rcll
xor
xchg
xor
lcall
repnz
cli
pop
cmp
jge
jecxz
pop
imul
pop
mov
sbb
mov
add
dec
addr16
lret
insl
ficomps
adc
shrb
out
lock
scas
cmp
push
lock
sub
rorb
push
jb
inc
cmp
pop
push
push
push
sbb
xchg
cmpsl
lret
adc
cmp
out
jo
dec
lahf
inc
test
mov
loop
mov
mov
nop
and
bound
or
insb
add
hlt
leave
rolb
xchg
add
lret
pop
dec
and
fwait
rolb
orb
data16
lock
std
mov
or
pop
cmp
mov
lds
or
inc
add
mov
mov
in
enter
jle
shll
lcall
jge
mov
jmp
shr
mov
mov
pop
insl
push
pushf
mov
push
xor
in
sub
pop
inc
add
xchg
out
sub
cmp
push
daa
js
push
mov
in
jle
dec
iret
shl
sahf
nop
lcall
mov
xchg
push
inc
add
and
es
pop
loop
lcall
pop
cmpsb
xor
fildll
test
arpl
es
out
inc
and
mov
inc
lcall
cwtl
cs
insb
rclb
lds
mov
dec
fisttpl
sti
pushf
icebp
pop
loopne
ljmp
inc
inc
mov
into
ds
mov
outsb
lret
mov
setg
push
adcl
fcoml
pinsrw
push
push
aaa
dec
sbb
cmp
and
scas
outsl
jl
pop
rclb
int
jl
xchg
pop
xor
inc
pop
xchg
shrb
mov
sbb
add
jle
int3
stc
hlt
out
std
lock
fcom
lea
dec
je
push
xor
add
cld
pop
dec
jo
rclb
push
jne
aam
incl
cmc
loop
inc
mov
add
movsb
push
and
lcall
inc
pop
adc
pop
dec
sub
movsb
push
cmp
popl
inc
pop
inc
inc
and
mov
push
mov
pusha
out
pop
inc
pop
sti
out
mov
dec
dec
jmp
push
dec
mov
sub
cmp
clc
dec
adc
ret
inc
cmp
fiaddl
inc
nop
out
jle
mov
test
icebp
movsl
scas
rclb
rcrb
add
out
pcmpgtw
fidivrl
negl
scas
fs
sti
adc
or
sahf
aad
cmpsl
repnz
dec
dec
or
dec
hlt
inc
sub
inc
adc
xor
fisubrl
mov
pop
jecxz
or
ret
jmp
insb
fcoms
jle
push
dec
adc
add
xorb
jns
inc
aas
or
xchg
insl
in
ja
sbbb
and
mov
adc
pop
or
adc
insb
cmp
or
pop
inc
orb
push
mulb
push
push
cli
push
dec
mov
adc
push
data16
push
in
in
dec
sbb
inc
xchg
mov
rcrl
xor
bound
xchg
pop
dec
jbe
pop
pop
pop
sub
inc
sbb
sahf
and
mov
insb
add
dec
orb
xchg
inc
ds
dec
jle
mov
inc
pop
rclb
xchg
jge
push
inc
cmp
lea
mov
insb
outsb
and
push
ljmp
insl
inc
into
cmpxchg
dec
ja
dec
jne
movsb
xor
stc
jmp
push
lahf
dec
xor
sahf
outsb
in
outsl
mov
cli
jo
jb
or
enter
mov
je
push
insb
jp
stc
test
dec
fnsave
push
cmp
lock
cmp
inc
aam
xchg
out
pop
inc
lahf
jnp
stos
pop
sub
add
popf
data16
push
dec
loope
cmp
mov
xchg
cmp
hlt
fwait
dec
fisttps
or
dec
out
inc
and
sub
pop
push
mov
sbb
mov
push
lcall
adc
and
jle
pop
lcall
pop
adc
scas
push
test
jle
sub
fucom
mov
xchg
dec
sub
xchg
cmp
and
out
add
dec
inc
push
jno
dec
jge
shlb
lcall
cmp
ds
mov
fsubs
adc
mov
and
lods
in
roll
push
xchg
mov
dec
mov
cmp
dec
ljmp
ss
push
add
sbb
lds
into
and
dec
roll
pop
jnp
jae
add
or
dec
inc
adc
idiv
mov
add
das
dec
jecxz
test
mov
adc
adc
xchg
adc
and
xchg
sub
lret
mov
adc
les
lock
mov
imul
inc
lea
jge
xchg
jbe
int
mov
jo
imul
push
ret
xor
inc
int
push
pop
sub
scas
mov
xor
mov
jo
inc
inc
mov
adc
insb
sbb
rcl
pop
movsb
add
testb
imul
pop
push
sub
sbb
push
adc
orb
dec
ret
sub
and
inc
add
pop
jmp
jnp
mov
mov
out
stc
loopne
scas
ss
cmp
push
insb
bound
es
push
cld
stos
aam
dec
lods
out
add
pop
scas
cmpsb
jo
add
push
and
pop
scas
pop
dec
stc
loop
imul
push
and
push
dec
mov
fdivrs
dec
mov
scas
es
add
and
xor
call
pop
rcrb
outsl
fcoms
pop
dec
loope
mov
dec
jge
dec
dec
sti
bound
pop
int
repz
inc
xchg
xor
mov
or
lock
xchg
lods
mov
dec
in
ja
push
ja
in
or
and
repnz
dec
lds
into
mov
jno
or
mov
fld
and
cltd
mov
adc
test
push
jns
aad
out
scas
push
ficomps
xor
aaa
push
and
adc
pop
dec
push
loope
push
dec
dec
mov
cwtl
jmp
cmp
or
cld
push
sub
lods
pop
arpl
dec
dec
and
lret
push
cli
dec
je
dec
ss
fldl
lcall
add
inc
sti
sub
mov
push
dec
ds
scas
mulb
fldl
pop
cmpsb
data16
in
cbtw
jne
mov
pop
loop
add
xchg
data16
jle
mov
fwait
cmp
push
jg
adc
lds
adc
xchg
and
xchg
inc
push
inc
out
aas
push
push
idiv
and
int3
jmp
push
inc
xorb
iret
loop
rcrb
shlb
int
fimuls
loop
jbe
int
mov
movsb
stos
pop
xchg
je
loop
lods
mov
arpl
sahf
movsl
jmp
or
xchg
xor
xchg
push
testb
outsl
iret
shlb
shl
jo
push
cli
add
shrb
push
int3
mov
loop
jmp
jg
inc
mov
xchg
insb
imul
push
xor
pop
xchg
sub
push
cmp
inc
xor
rorb
cmpsb
dec
imul
cmpsb
or
add
inc
fidivl
outsb
inc
fsubr
outsl
cwtl
push
pop
adc
mov
cwtl
call
filds
inc
daa
ds
xor
lcall
inc
shlb
por
pop
repnz
js
adc
jmp
popf
cld
jo
addr16
cmpsb
and
xchg
sti
mov
das
lret
in
outsb
loop
jb,pt
dec
dec
mov
pop
dec
mov
es
dec
add
sub
or
addl
inc
ficoms
ss
arpl
out
sbb
cmp
mov
jle
mov
push
jmp
mov
pop
lret
or
jo
dec
jmp
pop
mov
mov
bnd
push
sti
xor
bsf
dec
jnp
pop
add
dec
inc
dec
sahf
subb
pop
add
call
push
add
push
mov
pop
notb
sub
jns
ja
out
popf
jnp
inc
cltd
pop
sub
jge
rcrb
mov
push
sub
push
xchg
add
pop
pusha
pop
dec
cmp
and
daa
dec
dec
mov
jnp
xchg
cmp
movsl
and
jae
xor
pop
sti
cs
sub
cld
or
xor
pop
push
mov
mov
dec
ds
jge
dec
adc
and
sbb
and
outsb
jg
inc
sub
div
loopne
jb
jns
ds
push
pop
inc
pop
es
pop
sub
imull
and
ljmp
dec
push
dec
fisttps
dec
fsub
cmpsb
stos
rcr
add
or
loop
lock
sub
ss
dec
sbb
and
dec
and
outsl
xor
mov
inc
xor
add
cmpsb
mov
inc
je
mov
mov
lcall
ret
xor
adc
stos
inc
lds
inc
cmp
je
dec
add
dec
movsl
or
enter
mov
pop
jle
push
pop
pop
stc
lock
data16
cmp
dec
sub
les
inc
test
ja
aad
add
cwtl
push
insb
add
fldl
xchg
cmp
cld
mov
ds
gs
data16
and
lds
dec
cmp
loope
pop
cmp
cmp
sbb
mov
inc
pop
inc
and
jmp
xchg
sbbb
frstor
cli
cmp
push
ret
push
mov
xchg
in
push
dec
add
ja
data16
pop
and
jns
pop
pop
enter
add
dec
jae
and
jns
jle
data16
lea
dec
add
pop
cmp
push
ret
dec
cs
add
fsubs
mov
push
mov
add
pop
rcr
push
stc
push
bsr
push
bts
xadd
push
pusha
shld
mov
sbb
mov
inc
pusha
rcl
mov
ror
xor
lea
xchg
lods
rcl
push
bt
rcr
ror
not
not
inc
call
movl
mov
lea
jmp
pushf
mov
lea
call
pusha
mov
pushf
pushf
pusha
lea
jmp
cmpsb
addr16
mov
xchg
xor
sub
inc
jmp
kmovd
jge
dec
push
mov
mov
jae
sti
xlat
mov
mov
enter
jne
cmpsl
inc
mov
jecxz
psubsw
ffree
inc
sti
mov
das
xchg
push
inc
bound
push
int3
data16
icebp
or
adc
mov
and
cmp
inc
repz
lahf
das
dec
or
xor
ja
call
xlat
paddusw
imul
stos
push
test
les
add
mov
pushf
pop
and
ja
out
loop
dec
add
fs
mov
xchg
ret
dec
out
and
mov
mov
sbb
sub
test
mov
push
cmc
or
push
imul
inc
sti
xchg
lret
hlt
sub
xlat
scas
inc
sub
les
in
mov
pminub
aam
xor
pop
inc
jp
sbb
int3
popa
or
cltd
fwait
pusha
pop
pop
cmpsb
xchg
dec
fdivs
adc
lea
adc
push
lcall
cmp
sub
ret
push
in
stos
jo
cmpl
jecxz
popf
fistps
xor
inc
adc
sub
nop
je
fsubp
stos
cmpb
mov
int3
ds
jp
mov
loop
pop
addb
dec
iret
sbbl
pusha
movw
lea
jmp
outsl
insb
xor
cs
insb
add
xchg
inc
mov
jmp
ja
mov
lret
addr16
imul
stos
shrb
and
sbb
sbb
jns
inc
mov
adc
rcll
or
jo
out
dec
push
mov
jnp
mov
or
cmp
pop
enter
popa
and
pop
cwtl
or
fldenv
movsl
jmp
hlt
es
fs
mov
cmpl
pop
push
cmc
or
add
inc
and
data16
adc
negb
jae
jmp
push
movb
lds
pop
mov
xchg
js
xchg
adc
pop
dec
cmpsb
jp
mov
adc
ljmp
in
cmp
cmp
dec
fstpl
mov
push
and
pusha
pop
lds
lcall
and
fbld
push
xor
xchg
dec
add
test
sarb
add
mov
pop
and
stos
jo
jbe
xchg
addl
pop
pop
shll
roll
popa
pop
mov
aam
cmp
push
cmp
cmp
add
pusha
push
lea
je
stc
cmc
jmp
movw
jmp
call
xchg
xchg
dec
xchg
xchg
adc
enter
fadd
jb
mov
mov
filds
lcall
and
mov
pusha
adc
scas
shr
mov
adc
pop
cmp
clc
cwtl
xchg
outsb
orl
das
sub
adc
inc
jmp
pop
sbb
inc
mov
and
jno
rcrb
clc
icebp
mov
xchg
jg
lahf
sub
divl
add
movsb
mov
in
add
xor
cs
fisubs
int3
pop
mov
jg
and
stos
aad
inc
arpl
xchg
push
mov
adc
pushf
jmp
pop
lcall
test
mov
xchg
dec
push
pop
lea
or
lcall
sbb
push
ficomps
pop
daa
adc
fbld
cmp
xchg
sbb
fistl
fildll
sbb
lahf
dec
cli
mov
lret
dec
out
dec
lds
jmp
xchg
push
xchg
mov
cmp
sti
adc
mov
pop
pusha
fistpll
icebp
stos
enter
sub
inc
or
push
dec
lods
call
fcmove
data16
cmp
aaa
push
std
adc
ficoml
fsubs
fisubl
loop
ss
in
mov
mov
stc
lods
push
out
fdivs
and
xchg
hlt
rolb
push
into
jge
cmpsb
cmpl
mov
dec
loopne
out
xchg
pop
fwait
adc
push
pop
jb
adc
inc
jns
test
ds
dec
arpl
stc
stc
test
add
jmp
jb
les
sbb
shlb
or
dec
mov
and
jnp
or
test
popf
mov
mov
pushf
mov
movb
pushf
push
pushl
ret
or
mov
add
xor
cmc
sbb
jecxz
mov
xchg
sarb
call
lret
cmpsb
jnp
xchg
cli
sbb
xorb
jmp
mov
lds
fs
lret
mov
pop
mov
xchg
pop
and
outsl
scas
sub
loope
sbb
int
dec
mov
push
mov
mov
call
add
sbb
jl
pop
sbb
mov
mov
mov
jmp
test
mov
dec
xor
subb
mov
push
cli
mov
icebp
push
int3
subb
lret
adc
leave
dec
insb
lods
fs
pushf
pop
outsl
inc
js
scas
loop
ja
int
aad
sub
sbb
cltd
adc
jbe
sbb
xchg
rcrb
popa
iret
mov
mov
insl
popf
jmp
lret
fistpl
call
sub
popf
xor
mov
out
popa
inc
lea
fwait
dec
sub
or
cmpsl
cmp
add
pushf
pushf
movb
lea
jmp
jmp
aad
out
mov
xchg
adcl
adc
sbb
test
xor
fcmovb
pop
dec
repz
aam
xor
inc
cld
js
xchg
aad
pop
ret
pushf
negl
in
xor
sbb
mov
andl
xchg
cmp
sub
add
jae
imul
out
cltd
aaa
mov
xchg
sarl
scas
sbb
movl
push
pushl
movl
pusha
lea
jmp
pushl
mov
movw
xchg
pushf
pushf
call
mov
leave
scas
dec
xchg
or
pop
scas
pop
mov
fs
mov
xor
sub
xor
or
imul
inc
rcrl
lret
dec
mov
nop
jle
add
pop
xor
test
fs
cmp
inc
add
sub
mov
xchg
jns
arpl
out
sbbb
adc
les
int
sahf
add
sub
stos
lods
mov
movsl
dec
dec
mov
lcall
outsb
add
pop
push
mov
ret
inc
fcmove
rcrl
and
pushl
popl
mov
mov
pushl
ret
cmp
xchg
lods
or
push
js
int3
jp
dec
cmp
xor
and
xor
and
xor
loopne
shr
push
adc
in
xor
loope
lret
ret
push
jle,pt
sbb
fbld
jle
cli
pop
cmovno
sub
pop
subb
xchg
dec
jne
xchg
dec
cmp
in
stc
jmp
stos
push
aaa
mov
xor
cmp
add
cs
shlb
xchg
push
sub
xchg
iret
rorl
dec
xchg
into
push
loopne
cld
cwtl
pusha
or
pop
mov
je
lcall
push
jg
ret
xor
xor
cs
fisubs
js
mov
xchg
in
cmp
mov
mov
movsb
in
lahf
js
sbb
dec
insb
idivb
rcll
mov
dec
in
and
add
push
out
pop
loope
pop
out
xchg
pop
sbb
lret
cli
pop
fistps
scas
lods
dec
xchg
cmpsb
addb
loopne
clc
fldenv
js
push
test
and
rorb
push
into
push
adc
push
cli
scas
fdivs
add
sbb
imul
ret
movsl
inc
popl
repnz
mov
push
push
fisubs
les
mov
mov
mov
jle
xchg
mov
ljmp
test
xor
mov
bound
or
shl
vpcmpgtw
lds
stos
ja
jecxz
dec
dec
enter
outsb
inc
in
aas
inc
and
add
sbb
scas
xor
jno
flds
shlb
clc
outsb
hlt
jecxz
pop
jno
adc
jecxz
dec
xchg
jb
ljmp
mov
add
xorb
pop
stos
mov
sub
out
add
mov
cmc
clc
xor
or
in
outsl
in
dec
inc
pop
ret
adc
aaa
pop
jmp
repnz
xchg
mov
pushf
jg
icebp
mov
sub
test
push
cmp
data16
jb
dec
add
lret
xchg
imul
lea
mov
xrelease
jne
scas
jle
subb
jno
inc
lods
dec
xchg
xchg
sbb
inc
cltd
gs
xchg
and
stos
jecxz
nop
push
aas
mov
leave
xor
mov
push
xchg
mov
xor
sbb
clc
mov
insl
fistl
or
sub
es
fildl
pop
shl
pop
push
clc
sti
xor
insl
nop
xchg
gs
mov
jecxz
jo
mov
cmp
or
pop
sar
and
mov
push
sti
rolb
adc
pop
mov
mov
mull
adc
mov
add
ret
dec
std
mov
lods
dec
xchg
pop
and
pop
add
cmp
sbb
mov
adc
inc
lods
sbb
je
iret
pop
cwtl
loopne
xchg
jo
mov
sub
pop
scas
and
cmpsb
or
jecxz
sti
mov
outsb
addr16
into
shll
sub
add
jb
adc
xorl
repnz
stos
dec
xchg
sub
mov
pushf
xor
adcb
inc
movsl
or
shl
into
jmp
or
sub
lret
jg
lahf
arpl
std
jmp
test
mov
fsubrl
sti
addr16
bnd
cmp
sub
arpl
test
pop
inc
nop
xchg
loope
movsb
push
adcb
rolb
enter
subb
xchg
test
fcompl
or
test
jge
fsubr
stos
dec
xchg
mov
in
icebp
cltd
push
or
aam
data16
into
aam
cmp
outsl
mov
add
les
es
stos
psrlq
leave
test
mov
out
imul
enter
xor
inc
mov
test
xor
sub
dec
add
dec
dec
out
jbe
mov
inc
in
pop
out
xor
mov
mov
arpl
inc
sarb
mov
xchg
jno
lods
dec
or
scas
cmp
pop
dec
adc
shlb
movsb
in
or
ror
mov
cmc
sub
push
jmp
call
jmp
xor
shrl
movsl
gs
gs
jg
jne
ret
xor
inc
jmp
insl
bound
push
push
mov
comiss
nop
fnsave
leave
mov
jle
mov
faddl
or
push
fimuls
push
cmp
wrmsr
mov
mov
jp
sub
push
outsb
in
sub
out
sahf
adc
xor
popw
test
dec
xchg
call
cmpsb
bound
push
push
sub
dec
add
mov
lcall
sub
movsl
xchg
pop
out
mov
sub
cmp
mov
add
pop
adc
push
fildl
cmp
inc
dec
and
movsb
mov
jp
adc
sbb
test
insb
in
dec
xchg
mov
bound
mov
sub
ret
mov
fcoml
fldl
lcall
xchg
rcll
out
add
push
adc
push
cmp
add
aam
jb
jle
rolb
mov
fucomp
scas
sub
je
scas
add
inc
out
cvttps2pi
xchg
rolb
out
lds
jge
cli
stc
push
sub
jno
stos
into
push
je
testl
insb
icebp
add
gs
mov
out
in
bound
ret
mov
push
loope
int
mov
jb
lret
jo
je
dec
xchg
bound
pop
cld
jo
lock
mov
enter
jne
inc
sti
lcall
mov
scas
push
std
fbstp
cli
mov
or
xchg
push
pop
and
cmp
imul
inc
sar
into
loope
push
jb
or
jp
test
add
mov
leave
cmp
movsl
adc
outsl
mov
inc
jecxz
xor
nop
adc
aam
test
xchg
popf
or
inc
stos
imul
inc
mov
mov
aam
jge
or
movsb
ret
xorl
test
lods
jp
out
ret
enter
call
cmpsl
outsb
push
xchg
addl
out
mov
pop
add
gs
cld
movsl
test
adc
jmp
rcrb
insb
stos
pusha
xchg
jbe
cmp
in
lods
divb
xor
sub
jo
fcomp
es
lock
or
push
call
cli
cwtl
inc
hlt
jle
jb
lock
jmp
sahf
or
xchg
jl
cmpsl
dec
xchg
data16
push
loop
out
sub
outsb
cmp
jle
fcoml
leave
roll
je
mov
nop
and
in
mov
into
ja
sub
adc
or
lods
fxam
incb
fildl
pop
push
inc
repz
mov
cmpb
jmp
pop
daa
in
xor
push
xlat
dec
jmp
mov
ficomps
mov
roll
inc
push
inc
push
dec
xor
cs
insb
add
add
cmpsl
dec
xchg
mov
out
push
cli
dec
and
mov
add
shlb
sbb
in
or
cmp
int3
inc
xor
add
jmp
sti
lret
inc
mov
inc
scas
sub
dec
pop
jb
dec
pusha
mov
out
mov
scas
stos
and
mov
lods
push
loop
lods
or
fwait
jnp
lods
cmpsl
or
push
lock
loopne
insb
out
push
call
xchg
xor
cmpsb
or
mov
stos
addb
inc
or
insb
ljmp
stos
inc
ret
xor
sarl
ljmp
lcall
push
xor
and
sahf
dec
add
sbb
lods
gs
cltd
and
pop
dec
cs
adc
sbb
pop
fmull
iret
ret
jg
mov
xor
sub
stos
xorb
popf
mov
and
push
stos
xchg
inc
insb
and
mov
das
adc
daa
movsl
inc
stc
scas
insb
int3
or
gs
dec
adc
and
mov
dec
xchg
xchg
cmp
mov
mov
shlb
mov
inc
rol
insl
push
jecxz
pushf
push
mov
rcrl
loope
mov
jle
cmpb
lea
stos
mov
mov
push
mov
out
sub
je
mov
loop
out
mov
ret
popa
nop
push
dec
pop
fmul
lahf
pop
pusha
loopne
sub
jecxz
aas
mov
es
leave
sahf
push
mov
jl
std
mov
jns
or
ret
mov
mov
mov
into
inc
lret
cld
xchg
repz
fnsave
ja
add
pushf
call
pushf
lea
jne
push
inc
call
pushf
mov
mov
lea
jae
cmc
cmc
pushf
xor
movb
push
pushf
lea
jb
call
jmp
bt
test
shrd
mov
jmp
inc
adc
test
lds
lock
and
lea
cmpsb
add
clc
nop
push
inc
add
imul
push
xchg
hlt
cld
xchg
aad
imul
test
jnp
jmp
fldcw
jb
clc
mov
int
packuswb
ror
add
and
adc
adc
pop
jg
sbb
mov
divl
in
sarl
subl
mov
sub
dec
icebp
mov
aas
adc
or
pop
pop
sbb
add
pop
fadds
jl
rep
das
test
hlt
and
clc
adcl
repnz
sarl
mov
aaa
push
sbb
add
mov
mov
mov
dec
mov
dec
ja
dec
jo
imul
cltd
mov
push
cld
xor
add
test
xchg
mov
jns
popf
ja
cmpsl
sub
out
into
les
adc
inc
andl
add
std
mov
les
out
arpl
dec
test
mov
jno
icebp
cmp
cmp
fstl
add
mov
in
movntq
inc
insl
xchg
pop
mov
inc
xchg
dec
jl
pop
push
nop
push
lret
inc
sbb
pop
jg
das
icebp
jmp
das
cld
push
or
je
cwtl
dec
mov
inc
jge
imul
cltd
stos
push
loopne
mov
lea
call
pusha
stc
test
call
push
dec
dec
dec
dec
cs
insb
add
xchg
nop
repnz
outsb
sub
push
mov
scas
and
divl
add
mov
fistpll
int3
lods
xchg
mov
imul
sub
or
mov
mov
jp
push
inc
adc
imul
jmp
sbb
movsl
jo
xchg
add
mov
out
push
mov
pop
sub
insb
repnz
roll
test
xchg
mov
xor
in
hlt
push
pop
add
cmp
test
cmc
int3
ljmp
push
es
popf
jg
mov
repnz
sub
repnz
xchg
outsb
sysenter
add
jmp
mov
add
insb
jb
inc
jb
mov
leave
test
xchg
push
and
lock
mov
outsl
lret
add
popa
repnz
fstpt
into
push
scas
mov
notl
ja
xlat
pop
or
iret
and
int3
cwtl
not
call
adc
xchg
rcrl
jae
jmp
pop
xchg
or
cmp
inc
push
lods
testb
sti
scas
sbb
popl
loop
jge
imul
lea
jmp
cmp
test
jne
out
sbb
xchg
xlat
push
pushf
mov
dec
outsl
test
test
sbb
xor
xchg
clc
sub
and
mov
dec
daa
jmp
dec
mov
pop
or
xlat
mov
fstpl
je
lock
push
rorb
bound
xchg
or
subb
mov
shlb
inc
and
test
pushl
pushf
inc
pushf
stc
jmp
ror
lea
je
not
pusha
inc
lea
js
pusha
ror
clc
add
pusha
cld
push
pushw
popfw
call
pushf
cmp
push
call
mov
pop
mov
push
not
mov
call
xor
pushf
mov
dec
aam
clc
mov
cld
mov
mov
outsb
jmp
cmpb
rcll
mov
repz
pusha
in
xor
pushf
outsb
arpl
mov
xchg
mov
xor
out
gs
movsl
enter
shlb
imul
pop
add
jg
xchg
pop
mov
mov
push
inc
xchg
pusha
sbb
jbe
icebp
inc
pop
mov
pop
inc
stc
clc
ror
movb
pushl
pushl
add
call
mov
cmc
jmp
xor
clc
mov
mov
fisubs
fidivrl
ud1
jecxz
cmp
cmp
aam
pop
jp
aam
mov
icebp
sahf
adc
or
xor
ja
xchg
fcomip
mov
xor
andb
iret
repnz
xchg
xchg
mov
dec
inc
sub
pop
popa
push
addr16
mov
stc
jo
js
in
popf
mov
mov
add
dec
nop
rcl
popa
call
nop
push
cld
mov
fsubrs
stos
cltd
xor
cmpsl
fstps
dec
arpl
dec
xchg
jo
xchg
es
xchg
cmpsb
data16
mov
lock
je
adc
mov
cmp
cmp
test
sahf
mov
lea
adcb
or
xchg
popa
ret
mov
xor
out
int3
adc
xor
mov
sub
xchg
add
push
cmc
cli
jne
push
movsl
sbb
jge
loopne
xchg
dec
aas
data16
idivl
sbb
adc
gs
stc
jnp
xchg
inc
pop
add
jbe
pop
jmp
out
lahf
dec
xchg
jmp
sbb
repz
pop
lods
mov
mov
mov
icebp
test
mov
loop
in
pop
pushf
popf
div
insl
jmp
sbb
pop
pop
mov
fnsave
stos
hlt
cmp
std
test
enter
rorl
mov
sub
notb
sub
scas
lea
pusha
mov
ds
orl
mov
aas
pop
add
andb
pop
fcompl
cmpsl
addr16
loopne
sub
mov
enter
sub
push
lds
xchg
outsl
int
push
mov
fld
popf
in
dec
adc
fwait
mov
push
pushf
sub
push
popa
mov
and
idivl
in
aam
js
jne
or
sti
jno
inc
ss
je
mov
jmp
jnp
pop
lods
notb
xchg
push
call
cmpsl
adc
mov
jae
jge
sbb
add
mov
repnz
divl
cltd
pop
adc
ret
xchg
adc
inc
mov
popa
int3
xchg
add
nop
movsl
xor
push
sbb
dec
div
jns
add
mov
adc
jns
aad
fisubs
dec
icebp
imul
mov
mov
ja
arpl
add
inc
jp
or
sbbl
push
ret
mov
mov
xor
push
mov
into
jmp
xchg
insl
cmc
mov
dec
or
addr16
xlat
mov
not
sub
sub
lret
push
or
loop
dec
sbb
mov
jnp
dec
mov
call
inc
outsb
cld
mov
jo
ljmp
mov
push
push
cmpsb
test
mov
push
mov
cmc
jge
rcr
shl
sbb
ficoms
rcll
insl
lret
pusha
sub
popw
test
icebp
punpckldq
mov
push
dec
icebp
cmpsl
pop
cmp
arpl
testb
inc
lret
jne
xchg
pop
or
movsb
xchg
ficomps
jge
andl
dec
xchg
xor
outsb
rorb
cmpsb
push
pop
mov
aaa
mov
push
outsb
add
mov
push
xchg
xor
lcall
sub
mov
inc
mov
daa
dec
xor
adc
inc
xor
and
mov
inc
add
rolb
mov
addb
push
fsubrs
mov
or
lea
sub
sub
mov
and
dec
rolb
inc
or
mov
mov
push
mov
in
sub
loop
inc
push
or
mov
sahf
shlb
lcall
mov
adc
aaa
ja
lahf
icebp
fadds
or
andl
sti
fwait
and
repnz
inc
sbb
mov
ss
stc
mov
test
loope
pop
add
and
cli
cmp
jecxz
sub
jb
mov
dec
xchg
and
push
fidivrs
fidivs
mov
cmp
out
cltd
jno
adc
xor
adc
jecxz
sub
xor
xor
out
mov
mov
mov
and
mov
pop
mov
jne
pop
mov
sub
mov
fistpll
mov
jmp
arpl
sub
cld
outsl
ss
bswap
pop
movzwl
mov
lea
lea
movsbw
pop
not
pop
mov
push
call
pop
add
fwait
dec
xchg
mov
adc
push
mov
andb
xor
mov
cmp
int
pop
xchg
xlat
jae
jb
mov
mov
cmp
add
adc
cmp
shr
jbe
push
add
test
cmp
sub
imul
push
ret
xor
push
push
cli
movsb
xor
jo
lret
out
testl
icebp
push
in
and
cmp
sub
push
mov
insb
lcall
test
cmp
insb
inc
std
in
mov
add
cli
rorl
cmp
mov
enter
push
lds
sbb
pop
dec
cmp
daa
xchg
pushl
pop
cmp
xor
pop
data16
ljmp
daa
sbb
mov
pop
dec
stc
mov
jno
xchg
xorb
mov
pop
int3
push
in
sub
enter
and
xchg
push
das
cltd
cmc
and
xchg
std
pop
inc
mov
out
mov
xchg
mov
int3
pushf
sbb
es
enter
jg
mov
ret
and
fdivl
or
aad
fwait
xchg
in
imul
inc
lock
cwtl
and
or
xchg
xchg
inc
pop
js
inc
pop
fcmovb
aas
out
fwait
sahf
popf
cmp
notb
fisttps
and
pop
jb
jge
gs
cmp
cmc
push
je
lds
das
pop
jb
push
orl
fwait
nop
jbe
push
test
or
insl
and
mov
mov
cmc
mov
fcompl
jb
xchg
mov
and
das
add
push
mov
xlat
jge
cmp
pusha
jo
adc
cmp
push
call
subl
repnz
jp
fldt
pop
mov
mov
jmp
mov
repz
ficoms
cmp
dec
and
stos
inc
ret
xchg
and
lock
pop
lcall
test
mov
jecxz
or
add
xchg
or
leave
xchg
xor
mov
mov
aaa
jae
fs
lock
adc
inc
roll
subps
adc
imul
fwait
sub
jmp
mov
pusha
popa
movsb
dec
das
or
sbbl
pop
sbb
sbb
xchg
push
jb
xchg
or
pop
fldcw
mov
in
sub
insb
ret
imul
cmp
loope
lcall
xchg
inc
inc
sub
sbb
mov
lods
dec
ret
adc
xchg
fcmovne
mov
int3
movsl
mov
xor
mov
sbb
mov
add
imul
arpl
pusha
sarl
repz
jne
sbb
or
subb
mov
or
in
mov
mov
je
aaa
push
sahf
inc
add
pop
movsl
sahf
inc
clc
test
mov
or
push
fcoms
shlb
or
roll
mov
in
inc
and
icebp
dec
push
sub
and
adc
sbb
push
out
push
jae
mov
test
insb
add
outsl
fwait
clc
jmp
ss
inc
add
mov
std
loopne
add
and
sub
pop
iret
pop
icebp
adc
or
imul
jmp
and
mov
xchg
cmp
aam
lods
sub
inc
fstps
pop
incb
xchg
jns
stc
lret
ret
cltd
pop
jmp
shrl
mov
hlt
stos
mov
stc
mov
stos
arpl
out
repnz
pop
cld
mov
aad
insb
pop
js
dec
adc
andl
mov
xchg
push
insb
data16
adc
mov
mov
or
lock
xor
xchg
fcmovb
insl
xor
dec
lock
dec
ficompl
movsl
popf
push
out
vpavgw
push
xor
dec
repnz
mov
mov
das
mov
fmull
hlt
mov
jno
cmc
or
std
mov
inc
call
shrl
xor
lods
arpl
pop
stos
mov
push
mov
pop
pop
flds
xor
sbb
aad
insl
mull
xor
xor
ret
jp
jle
rclb
mov
es
repz
pop
and
out
pop
xor
lock
nop
test
add
pop
inc
sar
inc
aam
cltd
sub
std
inc
xchg
sbb
test
mov
dec
mov
xchg
repz
notl
sub
cmpsl
or
mov
add
clc
push
xlat
inc
out
mov
cmp
int
sbb
bound
hlt
lahf
in
mov
aam
and
stos
mov
dec
in
scas
je
jbe
xor
shlb
shl
repnz
loop
loope
outsl
push
and
decl
adc
lahf
popa
inc
icebp
fidivrl
scas
xor
js
jl
roll
sbb
pop
dec
pop
add
fucomp
daa
nop
pop
and
repz
mov
in
ja
cld
out
inc
xchg
cmpsb
or
test
cmp
fs
rcrl
cmp
movsb
pushw
test
or
outsb
sub
add
pop
jae,pt
int
pop
jne
mov
int
xchg
xchg
mov
add
cmp
jecxz
dec
sbb
test
pop
cwtl
jp
mov
cmp
push
es
push
ret
lods
mov
pop
mov
inc
adc
pusha
fdivrp
xchg
xor
bound
mov
adc
push
mov
inc
dec
mov
in
jbe
push
sahf
imul
out
xchg
aas
xor
adc
js
xor
push
and
lret
mov
repnz
mov
out
xor
jmp
daa
pop
sbb
ds
and
and
inc
roll
mulb
sub
mov
fdivl
loopne
lods
pop
mov
pushl
clc
jmp
cwtl
add
sub
loopne
and
jbe
fdivrs
inc
divl
outsb
adc
push
dec
or
lods
push
mov
ret
lods
lods
int
push
adc
outsb
xchg
into
mov
fdivrp
jae
cmp
inc
push
mov
in
fidivs
outsb
out
and
jno
adc
jge
cmpsl
cmc
jge
cmpsl
push
add
bound
pop
mov
nop
loopne
xor
ja
daa
pop
xor
jle
lock
fld
dec
xchg
mov
negb
mov
xchg
aas
xor
in
jle
mov
mov
daa
lods
js
and
imul
leave
addr16
jbe
mov
mov
jo
arpl
lods
mov
pop
add
jmp
imulb
xchg
inc
dec
aam
pop
iret
addr16
rcrl
inc
jae
stos
mov
pop
fsubl
xor
mov
outsl
and
ss
jo
cmp
stc
mov
pop
in
mov
mov
push
push
out
mov
adc
cs
cmpb
and
fildll
loop
push
insb
mov
shrl
adc
pop
cmp
in
push
enter
sbb
addl
cmp
pop
hlt
sub
inc
adc
inc
loopne
gs
mov
jno
repz
sbb
sbbb
arpl
in
sub
push
fldl
push
ss
test
nop
loope
push
push
out
daa
mov
out
repz
cmp
es
cmp
bound
pusha
inc
inc
mov
repnz
cmpsl
xchg
out
mov
xor
add
ljmp
out
gs
out
outsb
push
test
lret
add
lock
pushf
push
xchg
sub
xchg
inc
push
filds
dec
inc
xor
mov
mov
fs
arpl
and
pop
add
fldcw
fwait
jmp
sbb
test
cmc
ret
pushf
jbe,pt
xor
mov
fadds
dec
cli
fsubl
mov
test
cmp
xor
add
out
out
je
shrl
fdivr
mov
inc
stos
dec
or
add
mov
call
outsb
loope
inc
roll
jecxz
mov
or
out
sbb
insl
aam
push
and
pop
daa
mov
push
int
pop
and
pop
sub
jbe
stos
jns
repnz
dec
or
pop
mov
lret
data16
jne
data16
test
sbb
jle
icebp
xor
test
gs
fnstsw
pushf
jno
xchg
jb
inc
adc
ja
stos
sub
lret
lods
data16
or
dec
ret
stc
mov
stos
sub
arpl
or
add
mov
jb
lret
xchg
inc
ret
and
lret
movsb
cmpsl
icebp
adc
mov
mov
sahf
inc
push
add
loope
dec
lock
dec
sub
pop
loop
test
sub
ret
add
or
pop
scas
inc
xlat
push
ss
pop
std
sbb
je
aad
test
popa
in
cmp
cs
mov
ror
xchg
sbb
popf
push
pushf
test
loop
mov
movl
in
enter
mov
std
jge
push
lods
xorb
lock
sub
js
in
add
inc
clc
shll
pusha
push
fiadds
mov
sub
jmp
aas
ds
data16
push
ds
aam
pushf
mov
push
push
dec
xchg
sbb
movsb
dec
je
js
cwtl
add
fs
test
test
test
mov
pop
daa
or
push
mov
jecxz
out
dec
dec
ja
jl
loopne
bnd
pop
add
push
int
dec
stos
data16
aaa
incl
add
iret
mov
mov
add
fsubrs
cmp
cmp
adc
dec
es
add
popa
dec
jne
xlat
insl
or
xor
jmp
sub
mov
or
xchg
inc
sub
pop
aad
mov
movsl
aaa
cmc
mov
mov
pop
fwait
xor
jns
or
push
daa
idivb
inc
jl
dec
xor
dec
mov
mov
aam
sub
inc
fdiv
outsb
xor
int
mov
lds
jb
out
ljmp
add
xor
mov
shrb
popf
xchg
adc
xchg
jns
shr
sahf
cmp
and
fstl
test
inc
out
pop
test
out
cwtl
pop
call
in
lcall
cmp
js
test
xchg
mov
dec
jl,pn
cmp
in
jae
and
les
or
dec
aam
push
cld
push
sub
push
cmp
mov
std
cwtl
pusha
movsb
repnz
movsl
jge
cld
jae
xchg
cs
cmpsb
xor
insb
popa
divb
out
test
mov
or
ljmp
xchg
imull
lahf
sub
gs
ljmp
xchg
nop
test
and
shll
out
fimull
inc
lods
cwtl
jb
ret
and
cmp
mov
pushl
pop
fcmovbe
dec
or
pop
push
addb
mov
cmpb
xor
mov
add
je
insl
das
cmc
jg
add
shll
cwtl
sub
mov
clc
or
mov
dec
dec
sbb
xor
xchg
sbb
xchg
push
dec
enter
fcomip
add
and
dec
lcall
aam
out
pop
cmp
icebp
xchg
xchg
test
cltd
sbb
jns
adc
add
mov
mov
out
cmp
fdivrs
lea
inc
icebp
xchg
jo
inc
cwtl
lcall
sarb
push
outsl
cmp
in
adc
sbbb
and
mov
pushf
es
dec
push
lret
movsb
mov
sti
cld
js
scas
or
js
cmpsb
pop
pop
xor
in
cmp
test
mov
ds
movsb
dec
outsb
cmp
clc
mov
jle
movsb
push
pop
and
push
mov
xlat
cld
lock
mov
repz
rorl
or
mov
arpl
xor
push
notl
int3
bswap
in
cltd
add
push
insl
xchg
push
je
xor
jmp
cmp
lcall
add
inc
or
mov
inc
jge
lds
into
shrl
mov
cmp
inc
sbb
adc
arpl
nop
enter
ljmp
push
in
fbstp
jns
cmp
or
push
push
movb
popa
daa
lret
popa
sub
lret
xor
xchg
dec
jo
mov
mov
cltd
pop
lods
cmp
ds
cmpsl
adc
and
data16
xlat
outsl
adc
push
dec
push
in
movsb
jo
movsb
push
push
fildl
pop
xorb
fisubl
movl
aam
push
sahf
insb
in
xchg
fsubl
mov
xchg
pmullw
dec
dec
cld
mov
test
sub
ds
test
cmp
int
adc
call
pop
and
les
add
lea
fisttpl
pop
and
lods
test
flds
inc
cmpsb
jle
cwtl
or
lea
test
lret
lods
xchg
adc
ss
out
pusha
cltd
pop
loope
sbb
push
sbb
bnd
sahf
pop
adc
aam
out
jbe
inc
out
imul
mov
jmp
cmp
test
fdivl
popf
nop
out
dec
push
sbb
aaa
rorb
fstpl
fsubrp
in
fnstcw
icebp
clc
pop
cmp
jae
lret
adc
push
cmp
ja
add
cmpsb
test
and
daa
out
adc
lea
fcoms
mov
jno
push
cmc
push
push
add
fadds
sbb
push
int3
movsl
xchg
sbb
lcall
sbb
insb
xor
shll
pop
xorl
pop
or
and
les
mov
mov
jne
or
xor
xchg
push
and
xor
sbb
adc
and
leave
cmc
pop
pop
rcrl
imul
int3
dec
jmp
addb
cmp
hlt
lds
inc
int
xor
add
std
scas
lcall
sahf
adc
jecxz
xor
lldt
mov
incb
add
sbbb
pusha
adc
sub
dec
mov
repz
pushf
fnstsw
jmp
shll
push
push
shrb
mov
es
fwait
cmp
jb
leave
pop
lcall
xchg
jb
lret
adc
dec
and
adc
lods
push
fisttps
hlt
sarl
movsl
sbb
fildll
xor
inc
pop
cltd
sbb
jnp
fisubs
rcl
and
lret
bnd
addr16
pushf
repnz
xchg
lds
leave
lahf
xor
mov
popf
dec
and
addb
shl
mov
jnp
xor
lds
jp
inc
mov
ja
xor
movsb
mov
les
or
or
and
imul
cmpsl
insb
lock
pop
jne
pop
cmp
mov
outsb
push
fbld
mov
xchg
loop
xchg
mov
pusha
stos
les
xchg
jg
mov
inc
and
inc
je
sub
or
into
test
pop
xor
in
mov
xor
adc
test
xchg
and
or
es
aam
movsl
fwait
dec
int3
dec
push
hlt
push
xor
out
mov
frstor
add
fnstcw
jecxz
dec
and
jae
lods
ret
fdivr
shr
mov
mov
lret
mov
xchg
test
into
adcb
jo
aam
add
jne
subl
sub
cli
pop
cli
cmpsl
enter
pop
and
jae
sbb
popa
movsl
sub
xchg
cmpsl
and
jge
push
int
stc
mov
add
jo
push
pop
and
push
out
ss
cld
dec
lds
pop
sbb
call
adc
insl
inc
mov
pop
loop
repz
adc
jle
arpl
out
lret
mov
jns
push
inc
repnz
sbb
data16
mov
push
add
and
xchg
aad
pop
aad
push
and
sbb
lea
rcrb
pop
cmp
repz
in
ret
cmp
fldcw
dec
mov
repnz
mov
jns
in
ret
movsl
arpl
mov
repnz
jp
dec
in
adc
arpl
xchg
stos
popf
addb
cmp
cmpsb
loopne
jl
pop
jp
xchg
push
inc
in
andb
xchg
jl
and
xchg
xor
out
sbb
xchg
xchg
mov
push
and
ds
std
xchg
pop
mov
idiv
and
sub
cli
icebp
leave
xchg
cmpb
out
mov
add
sub
mov
mov
sbb
leave
inc
in
or
adc
cltd
rcrl
pop
and
stc
clc
daa
jge
sahf
mov
ljmp
jmp
out
or
mov
jp
repz
lcall
mov
les
xchg
push
nop
push
sbb
data16
xor
xchg
xchg
and
inc
fdivrl
dec
int
push
xchg
push
adc
insl
std
call
sub
push
adc
push
fldenv
adc
out
out
pop
test
sahf
jle
jecxz
sbb
pop
mov
pop
sub
daa
xlat
mov
jno
subb
jp
mov
push
loop
mov
xor
jle
test
pop
cli
test
lret
mov
adc
jae
mov
movsb
inc
and
dec
or
or
not
lret
js
cld
ret
sub
shrb
xor
adc
out
and
xor
dec
iret
imulb
cmp
rcrb
mov
in
pusha
arpl
iret
lcall
push
clc
aad
sbb
jl
imull
inc
jecxz
jp
adc
inc
adc
jp
stos
das
mov
cltd
and
rclb
fdivrp
push
lods
push
mov
repnz
scas
jge
jns,pt
mov
bswap
popa
test
js
jmp
dec
push
sarb
cmc
inc
iret
mov
js
fildll
xchg
pop
stos
imul
hlt
outsb
leave
pop
out
jbe
rclb
dec
mov
fistpll
add
dec
idivl
sub
xchg
push
push
mov
push
mov
iret
fnstenv
lcall
pop
loop
bound
sub
fsubrs
cmp
adc
cmp
je
dec
dec
or
xchg
orb
daa
adc
jecxz
mov
orl
out
lods
insl
jbe
hlt
jge
jnp
dec
and
icebp
sbb
out
lahf
inc
call
jb
call
lea
adc
loopne
mov
xchg
jbe
inc
add
push
js
ja
leave
xchg
pop
rcrl
push
pushf
dec
dec
loopne
jne
fimuls
jg
add
mov
das
in
push
ljmp
cld
test
mov
scas
sub
stc
ja
jmp
push
sub
lcall
sub
xchg
loope
popa
daa
cs
add
subb
dec
xor
dec
cld
jne
add
and
push
cli
or
popa
test
movsbl
cmpsl
arpl
cmp
jecxz
imul
mov
hlt
ret
dec
fisttps
hlt
pop
push
shlb
dec
jb
mov
std
insb
stc
adc
sbb
dec
fbld
mov
inc
fmull
or
or
mov
and
out
enter
pop
xlat
mov
arpl
dec
dec
aad
and
push
imul
or
or
jge
push
jne
push
popf
cmp
xchg
push
push
sbb
fdivl
js
sub
pop
sub
scas
int
mov
xchg
jg
xchg
inc
das
clc
xlat
xor
mov
inc
fnstenv
lcall
push
insb
data16
lret
not
dec
sbb
xchg
arpl
lea
ficomps
mov
lea
mov
pusha
inc
out
fisttps
stos
dec
idivb
jecxz
pop
and
xchg
and
xchg
aaa
shrl
std
jle
repnz
mov
ja
xchg
pop
or
mov
out
insl
jge
iret
in
shrb
bound
nop
orb
mov
ljmp
fs
mov
pop
aaa
jne
roll
pop
or
jbe
lea
pop
or
test
rcr
clc
mov
mov
fnstenv
cltd
cmp
cltd
dec
cmp
loop
push
lea
shr
xchg
sti
enter
mov
cmp
xor
xor
adcl
sub
adc
daa
mov
js
scas
mov
orl
lret
mov
cmp
out
test
mov
mov
cmovl
pop
or
loopne
push
or
adc
daa
in
or
xchg
jmp
dec
inc
shll
push
mov
sbb
xchg
jnp
mov
sub
or
adc
xor
adcb
movsb
cmpsb
out
lret
jnp
sub
enter
jp
add
pop
in
test
cmp
sub
push
and
ficomps
mov
ret
es
les
sub
xchg
push
and
outsb
push
fnstenv
addr16
mov
shll
insb
sbb
sub
push
nop
cmp
cli
imul
xor
fsubrs
fsubr
dec
nop
out
dec
push
sub
xor
sub
inc
arpl
xchg
mov
push
jg
rcrl
push
xchg
in
mov
push
notl
movsb
test
adc
mov
jl
jae
test
in
stos
pusha
xchg
rol
pop
cmp
and
je
mov
inc
enter
sub
das
push
loop
mov
add
clc
fldl
not
jo
sub
sub
push
sub
leave
test
jle
mov
stos
imul
cmp
pop
jl
stc
stos
subl
data16
int3
lret
mov
addr16
int3
int3
sbbb
adc
jge
push
pop
scas
ds
sbb
mov
sarl
mov
call
inc
ds
pop
ficoml
pusha
popa
xlat
movsl
xchg
ljmp
aad
clc
insb
sub
mov
scas
sbb
sbb
push
adc
lret
outsb
pop
dec
and
test
les
sbb
mov
cmp
icebp
mov
test
sub
sbb
mov
std
add
push
call
lcall
iret
xchg
lea
les
enter
pop
add
pushf
and
aas
mov
in
dec
add
lret
outsb
lock
pop
xor
cwtl
dec
cs
xlat
in
inc
xchg
mov
loop
fstpt
pop
sbb
negl
add
testl
inc
dec
orl
scas
and
mov
sub
mov
mov
sub
xchg
arpl
insl
xchg
jl
int
jns
loope
inc
sbb
mov
into
jmp
jmp
icebp
pop
inc
addl
insl
mov
scas
push
jmp
enter
cs
ret
out
pop
cmc
int
dec
leave
push
in
insl
ljmp
and
cmp
xchg
mov
mov
inc
push
cmpsb
ss
orb
divb
xchg
jle
mov
test
sahf
push
scas
inc
repnz
cwtl
mov
add
sbb
pop
cmp
push
cmp
fwait
test
sbb
pop
cmp
mov
pop
mov
adc
les
idivb
and
adc
inc
adc
sbb
sahf
add
dec
repnz
push
call
mov
mov
lahf
js
add
adc
add
inc
and
xor
pop
aam
sbb
mov
repz
pushf
int3
sbb
fwait
mov
xlat
or
mov
sbb
inc
dec
rolb
mov
pop
faddl
and
xchg
adc
mov
mov
daa
out
mov
popa
jo
mov
addr16
shl
xor
sub
push
cld
mov
jnp
pop
outsb
push
and
mov
dec
outsl
jae
inc
out
mov
push
ljmp
inc
ret
nop
xchg
lods
icebp
or
ret
mov
mov
pop
xor
push
dec
adc
dec
xor
sbb
cmp
sti
rorl
mov
stos
inc
fcmove
push
les
negl
jo
xor
pushl
shl
pushf
call
push
pushf
pushl
popl
pushl
pushl
pushf
pushl
ret
pusha
movl
push
pushf
push
mov
lea
jmp
xor
jp
dec
xchg
leave
jno
movsl
or
mov
mov
and
fdivl
inc
adc
cmp
sti
std
jecxz
dec
leave
push
pop
loop
adc
add
push
insl
adc
sub
iret
movsb
dec
arpl
lods
lret
cmpsb
bound
out
jno
and
push
sub
xor
xchg
sbbl
adc
test
xchg
xor
jb
out
adc
xchg
mov
scas
mov
xchg
insl
and
popa
fldcw
lods
xchg
rcrb
dec
sti
mov
int
rorl
ja
jne
jl
or
add
out
out
add
or
cwtl
popf
jecxz
push
mov
ret
loope
popf
cwtl
mov
aad
ljmp
es
and
pop
sahf
jl
outsl
fdivs
sub
mov
outsb
cld
pop
cld
push
inc
imul
cmp
xchg
ret
shrb
mov
sub
mov
cmp
fistpll
rcll
xchg
pop
pop
pushl
add
jae
aad
push
mov
sub
jle
rolb
inc
cmp
mov
and
jge
sub
mov
xchg
mov
imul
mov
pop
jge
inc
or
xchg
das
scas
imul
xchg
inc
int
jle
lret
pop
mov
mov
filds
xchg
sub
das
out
and
ja
add
mov
call
bswap
jge
xchg
xlat
pop
leave
lods
sub
jno
ret
push
jno
push
or
into
lock
ja
sahf
pop
xlat
imul
dec
arpl
pop
xlat
lahf
push
fsts
pop
stc
fwait
dec
add
pop
rcrb
stos
pop
adc
ljmp
xor
fcmovb
fdivs
dec
and
popl
add
aam
push
or
push
sbb
or
jns
mov
fbld
gs
xchg
or
pop
fisttps
sbbl
push
pop
or
icebp
lahf
jmp
xor
shl
add
dec
clc
push
jg
aam
sarb
in
add
fwait
rclb
les
aad
cmpb
push
sbb
clc
xor
nop
addr16
sbbb
mov
ds
int3
add
xor
icebp
xchg
inc
sub
cmpsl
pop
and
mov
daa
lea
ljmp
rcr
xchg
inc
out
icebp
ret
movsb
data16
mov
mov
test
sbb
js
jns
mov
clc
lods
lock
imul
aas
add
fadds
es
mov
adc
and
xchg
adc
jb
or
movsb
sbb
lea
inc
outsl
push
cmp
in
add
cmpsb
jb
xchg
mov
cwtl
dec
fists
mov
pop
shrb
imul
push
fisubrl
int3
mov
dec
sbb
push
jge
inc
test
dec
in
imul
dec
aad
fcmovb
insl
inc
jo
idivl
inc
sar
in
pop
std
or
sub
icebp
out
xor
jge
loopne
cmp
fists
out
imul
mov
loopne
push
cmp
push
cmp
inc
repz
cld
mov
nop
pop
inc
fcomps
scas
mov
mov
xorps
pushf
adc
xchg
add
or
inc
jnp
ds
dec
cmp
iret
and
pop
arpl
rcr
jge
jmp
dec
xchg
mov
xlat
pop
fisttpl
pop
iret
xor
dec
dec
scas
loopne
add
mov
or
arpl
mov
cltd
pop
jge
bound
imul
jp
jno
fistl
rorb
pop
sub
repz
pop
cli
add
loop
cltd
frstor
imul
fnstenv
hlt
pop
adc
add
mov
into
mov
mov
mov
and
xor
xchg
pusha
testb
push
cs
sbb
pop
cmp
mul
xor
ljmp
popa
aaa
ret
push
mov
sbb
adc
dec
and
repz
repz
loopne
jg
mov
push
push
int3
xchg
push
popf
jno
in
or
inc
icebp
imul
hlt
shrl
bound
nop
jecxz
cmpsl
pop
adc
jne
cmp
fadds
dec
inc
stos
pop
ljmp
push
mov
pusha
xor
xchg
std
sarl
mov
insl
add
data16
lcall
jo
push
out
mov
out
test
dec
adc
movsl
int
push
in
pop
xor
rcll
les
clc
subb
in
push
and
test
lods
adc
xorb
jno
repz
popa
xchg
mov
push
test
add
cmp
mov
push
test
insl
ljmp
lds
xor
mov
and
js
add
mov
push
nop
out
mov
jns
xchg
out
sbb
std
jne
jge
cmc
inc
mov
dec
add
or
jno
int3
loope
bound
add
mov
insl
dec
mov
cli
jbe
mov
in
idivb
mov
mov
mov
cmp
mov
jo
popa
adc
or
gs
mov
mov
jmp
fcompl
cmpsb
dec
stos
sub
sbb
movsb
push
mov
sbb
pop
mov
mov
outsb
test
pushf
jmp
mov
xchg
js
xchg
cld
loop
sbbb
push
mov
push
mov
mov
adc
pop
mov
ljmp
mov
mov
dec
das
popa
xchg
loopne
inc
inc
cmp
jp
movsb
iret
cli
loope
into
mov
pop
movsl
icebp
lds
jns
lea
lea
cmp
popf
dec
xor
fisubs
or
add
je
push
push
fimull
mov
jns
xchg
orb
pop
or
mov
inc
out
pusha
aaa
mov
or
sahf
or
movsb
inc
repnz
ret
pop
in
mov
xchg
out
dec
and
clc
icebp
sbb
outsb
or
cmpsb
sbbb
jge
push
sub
iret
in
addl
lahf
sbb
frstor
cmpsb
cmp
aaa
aas
repnz
lds
jmp
out
sti
mov
push
loopne
and
pop
outsb
ja
xchg
add
jb
push
pop
inc
mov
cli
xchg
push
mov
push
loopne
or
and
pop
mov
add
xlat
push
cmp
jge
stos
mov
inc
dec
add
xor
lahf
movsl
dec
je
cmp
pop
loop
ds
fucomp
call
mov
ret
and
rolb
call
js
stc
nop
fisttpll
adc
cmp
std
insl
fnsave
push
fsub
jns
fidivl
nop
xchg
lret
stos
pop
stos
add
jbe
mov
pushl
ret
sbb
xor
aad
ljmp
inc
call
fdiv
mov
out
ljmp
mov
aaa
fnstenv
test
mov
mov
mov
addr16
inc
jbe
xchg
inc
fnstcw
pop
movsl
push
sub
inc
std
mov
hlt
loop
fisttpl
or
jnp
cmp
sbb
xchg
std
fbstp
lret
sbb
leave
out
xor
mov
cmpsl
pop
and
insb
push
ret
cmpsl
mov
jp
outsb
cmp
bound
aad
stos
dec
sbb
roll
mov
lods
sub
fldl
mov
push
sbb
repz
test
call
xchg
outsl
call
xlat
addr16
sub
loope
xor
sbb
mov
movb
repz
or
cld
xchg
inc
lret
pop
cld
xchg
sarb
popf
mov
jb
dec
repz
cltd
aas
hlt
hlt
sub
lock
adc
sbb
movsl
rclb
imul
fadd
and
and
rclb
xlat
aad
test
repz
push
add
dec
cmc
mov
push
es
or
popa
daa
cmp
dec
xchg
cmp
movsl
xor
xchg
imul
jmp
pushf
in
int
fisttpl
jle
mov
test
cmc
stos
inc
enter
lds
add
inc
fucomp
out
cmp
imul
clc
mov
xlat
aam
cmp
imul
mov
and
add
xchg
cmc
mov
fimull
call
mov
adc
inc
bt
call
sbb
adc
call
adc
mov
jae
dec
sub
push
insb
fs
mov
out
inc
pop
mov
in
jmp
or
sub
xlat
sbb
data16
inc
stos
mov
jecxz
add
jg
nop
push
fwait
pop
push
add
sahf
cmp
dec
mov
and
push
orl
or
sarb
inc
in
es
xor
sbb
jge
jecxz
ljmp
repnz
push
or
jbe
or
pop
cltd
jae
cmc
inc
xor
mov
xlat
fdiv
pop
dec
jb
lret
dec
push
lea
out
jne
and
mov
shrl
leave
pop
frstor
sub
adc
mov
add
sbb
mov
jl
fs
call
call
or
jae
xchg
mov
movb
data16
outsb
es
jl
stc
enter
and
push
repz
out
ja
lods
ds
arpl
jge
shr
fwait
inc
repnz
xchg
scas
shll
xchg
xchg
aad
fists
inc
cmp
leave
mov
movsb
pop
xor
push
dec
jp
inc
sub
inc
sub
inc
cmc
xchg
sbb
push
roll
dec
sub
mov
sbb
inc
or
push
test
add
add
mov
and
std
mov
mov
pushf
pushf
call
mov
xchg
ljmp
stos
xchg
push
cmpsb
js
inc
push
in
rorl
je
pop
test
lea
sarb
dec
push
mov
test
jae
jo
call
movsb
icebp
pop
lahf
out
fs
add
xor
shr
aaa
fldl
mov
lea
and
mov
mov
adc
push
jle
cmpsb
fs
jo
or
rolb
scas
push
jle
dec
xchg
pop
out
inc
push
mov
mov
lcall
call
mov
jb
mov
push
ljmp
pusha
cmp
add
pop
jge
jmp
and
sarb
das
arpl
mov
inc
iret
daa
mov
sbb
cmp
and
jne
push
and
xchg
pop
inc
sti
pop
sti
xor
jb
adc
scas
or
inc
mov
xorb
jl
or
jecxz
fbstp
xchg
pop
dec
push
xlat
rolb
dec
xchg
imul
adc
jno
cltd
or
in
sbb
dec
pop
jmp
cmp
lret
add
loopne
mov
pop
movsl
and
loop
push
sub
and
push
ljmp
shll
inc
out
cs
push
aad
dec
xor
xlat
xchg
in
cltd
xchg
jle
jb
enter
mov
clc
cltd
push
mov
in
sub
jb
add
mov
fcoml
js
lods
callw
fiaddl
les
addr16
sub
fs
jb
cmc
clc
cmp
push
push
lea
ja
push
pushl
add
sub
jmp
mov
xchg
mov
jo
mov
cli
out
pop
lock
call
pop
test
mov
daa
xchg
xchg
xor
inc
xor
jnp
xchg
jns
jle
inc
jg
hlt
xchg
int3
inc
test
mull
sub
cmp
fsubrl
push
popf
or
es
lret
xor
imulb
adc
push
mov
adc
cltd
cld
mov
stc
loope
sbb
arpl
mov
xchg
scas
mov
imul
mov
jp
and
xchg
loope
dec
or
fists
mov
test
repnz
mov
fwait
inc
out
ds
les
jb
fisttps
pop
fisttpl
cmc
ja
mov
add
pop
xlat
mov
mov
mov
mov
cld
leave
jg
sbb
movsl
lcall
aam
pusha
and
enter
pop
sub
cmp
push
ljmp
stos
inc
xchg
cmp
mov
rcl
mov
clc
call
in
jmp
add
dec
jo
outsb
push
jb
outsb
je
jb
add
mov
inc
push
dec
inc
dec
xor
cs
insb
add
jecxz
jo
xchg
mov
push
lcall
repnz
sahf
push
out
int3
out
and
mov
jge
fidivrs
pushf
mov
movsl
fists
repz
idiv
inc
xor
inc
mov
dec
cmp
mov
mov
mov
dec
sbb
and
mov
pop
shrb
rorb
pop
adc
mov
jnp
into
or
movl
cli
test
stc
mov
cmp
push
pusha
push
test
call
call
pusha
pushf
pushl
not
movb
inc
call
pushf
jmp
jae
pushf
dec
mov
dec
dec
call
mov
sub
xchg
data16
fsubl
movsb
or
cmp
jo
pushf
xor
hlt
jmp
xchg
movsb
dec
add
repz
andb
scas
and
sbb
jns
sahf
insb
cmp
or
or
jo
outsl
lods
lock
aaa
push
mov
adc
jns
pop
incb
lods
test
pop
icebp
jg
dec
mov
rcrb
stos
stos
fabs
test
loope
pop
gs
fnsave
mov
lock
xchg
jle
adc
imul
in
add
add
popf
outsb
dec
xchg
cmp
iret
xlat
inc
mov
pop
jae
xor
ljmp
into
lock
xchg
out
bound
dec
adc
jne
cwtl
ds
mov
jns
inc
sahf
outsb
pop
mov
or
das
and
dec
pop
sarl
lods
loop
pop
and
cltd
xor
arpl
xlat
xchg
adc
loopne
xchg
aaa
aad
clc
cld
jg
ret
leave
test
icebp
sti
int
lods
sub
lcall
scas
mov
xchg
mov
divl
icebp
mov
outsl
adc
jnp
mov
inc
call
sub
fldl
or
inc
and
movl
ret
mov
movsbw
mov
call
pop
gs
dec
xchg
add
push
add
stos
mov
pushf
lret
push
pop
pop
cmp
mov
pop
sbb
fs
js
mov
lret
adc
mov
nop
adc
jge
fmull
xchg
sbb
sar
int3
mov
rcrl
mov
xchg
icebp
jg
test
pop
es
add
ficompl
and
pusha
inc
jmp
je
dec
xlat
icebp
ficoml
dec
push
sbb
jns
pop
cltd
mov
mov
pop
push
ljmp
lret
icebp
or
fsubl
pushf
mov
pop
mov
orb
clc
mov
pop
adc
push
lret
cmpsb
pusha
cmp
add
repnz
bound
xor
dec
daa
data16
mov
mov
mov
mov
mov
pop
sub
insb
add
lahf
jmp
dec
leave
push
mov
sti
iret
mov
jecxz
lods
adc
movsb
adc
stos
test
addl
adc
dec
cmp
lret
mov
adc
push
add
adc
lcall
lret
add
rclb
scas
mov
cltd
dec
xchg
arpl
dec
lret
sub
bnd
xor
test
cld
mov
adc
aad
push
sub
xchg
mov
dec
int
add
aaa
or
pop
movsb
cmc
or
push
loop
mov
shr
not
bsf
mov
rcl
mov
cmc
stc
stc
or
pusha
jmp
mov
sub
xchg
lods
sub
or
testl
xchg
inc
iret
mov
cmp
jle
aaa
lock
subl
lock
std
jne
movsl
ret
cmc
xchg
add
add
mov
or
test
mov
mov
shll
insl
insl
sub
stos
mov
sub
test
sbb
ret
cmpsb
insb
movsb
ss
pop
hlt
mov
adc
int
mov
xor
insb
push
stos
imul
lcall
mov
jecxz
jecxz
ljmp
shr
dec
sbb
mov
mov
je
add
mov
not
daa
testb
outsb
mov
sub
lcall
push
xor
mov
int3
call
mov
pop
pop
and
sbb
cmc
inc
mov
shll
ds
iret
cmc
subl
jl
add
sbb
les
jb
lcall
inc
sbb
inc
insb
dec
xchg
sub
aaa
test
fldt
out
out
cmp
sbb
ljmp
out
inc
enter
jl
jl
inc
dec
xlat
bound
sub
lods
ret
lahf
leave
xchg
decb
mov
push
cmp
fwait
sbb
cmc
leave
test
adc
aad
inc
lret
sarb
sub
or
pop
sarb
xchg
push
xchg
inc
ficompl
outsb
pop
lret
mov
mov
xor
lock
and
pop
pop
fcoms
out
sarl
xchg
jnp
call
push
cltd
push
add
psllq
cld
jp
push
scas
arpl
clc
test
and
mov
mov
dec
shlb
sub
jecxz
inc
fisttpl
mov
xchg
cmpsl
cmp
fst
stc
pop
jb
dec
xchg
fs
scas
push
rol
push
stos
sahf
mulb
inc
mul
lcall
mov
in
ds
add
pop
mov
adc
dec
and
fildll
mov
push
jne
add
cmp
xchg
pushf
shrl
std
scas
mov
cmp
pop
testb
ret
fidivrs
dec
sub
out
add
or
jb
imul
ja
sbb
push
cmp
out
jo
fldlg2
lcall
cwtl
push
aas
add
je
ficomps
pop
mov
fwait
ja
les
pop
inc
and
sub
inc
in
dec
pop
out
pop
xchg
cmp
adc
test
cli
pop
icebp
xchg
mov
sbb
lods
jg
xchg
mov
jb
cwtl
rolb
xor
pushf
sbb
in
inc
outsb
leave
mov
stc
mov
push
test
jmp
add
sbb
movsb
push
lods
push
sub
jle
pop
fldenv
dec
lahf
lea
movl
call
movl
lea
jg
pusha
mov
pusha
pushl
popl
movl
mov
pushl
pushl
ret
pop
push
ja
dec
xchg
sti
fstps
jns
mov
jne
lret
inc
clc
xchg
repz
mov
clc
xchg
repz
pop
xchg
xor
les
test
mov
mov
fwait
push
mov
adc
inc
gs
sahf
sahf
aad
int3
repnz
shlb
cmpsb
push
xchg
stc
int
pop
push
inc
dec
int3
pop
rclb
iret
mov
lds
cltd
stos
push
daa
sbb
call
xchg
je
out
mov
lret
xchg
repnz
pslld
jns
idivl
mov
push
dec
ja,pn
out
sbb
xor
cli
mov
cld
movsl
xchg
sub
fldenv
push
ret
or
fstps
es
lods
call
scas
push
insl
mov
mov
and
leave
fistpl
int3
scas
lret
movsb
xchg
jecxz
lret
gs
mov
mov
mov
aas
mov
jmp
fwait
test
cmp
fistpl
xchg
dec
aad
adc
dec
xchg
in
test
addr16
xchg
mov
sub
sub
pop
repz
stos
je
fldl
xor
int
add
das
adc
arpl
aad
mov
adc
bound
cmpsb
sub
fs
cmc
adc
add
lret
int3
repnz
loop
or
je
jge
or
lahf
xor
mov
aad
in
sub
jge
movsl
cmp
imul
pusha
nop
mov
inc
popf
arpl
push
pushf
call
pop
adc
inc
push
loop
cli
push
rclb
inc
into
shr
mov
outsl
add
sbbl
in
add
cwtl
xor
add
add
cld
sarb
cwtl
pop
jnp
lret
fadds
jno
aad
lahf
outsl
cmpsb
jbe
and
rcll
xor
cltd
fiaddl
mov
stos
rorb
js
jl
sub
neg
push
add
jae
jp
jbe
sub
cmp
mov
rolb
inc
pop
push
hlt
mov
mov
mov
fisubrs
dec
sbb
iret
ficompl
pop
or
movl
call
cmp
xchg
mov
jnp
inc
clc
sbb
mov
ds
ljmp
and
int3
dec
cld
pop
or
pop
hlt
loopne
mov
scas
loop
pop
addr16
add
dec
pop
je
add
cmp
pop
sbb
mov
push
lods
adc
adc
and
pop
mov
add
xchg
je
sahf
jp
fiaddl
fwait
lods
cmp
pop
sub
xchg
pop
mov
or
xor
arpl
xchg
jae
test
fnstsw
fbld
pop
sub
rolb
into
pop
repnz
mov
call
adc
and
lods
cmp
cmp
shll
inc
sub
nop
lock
jl
clc
call
jmp
inc
imul
jb
xchg
pop
push
mov
sbb
xor
adc
cmp
xor
pop
cmp
xchg
sub
gs
xchg
adc
rolb
jne
cmp
adc
or
shrb
mov
cmp
inc
jmp
and
cmc
push
fldenv
dec
and
pushf
push
lcall
mov
mov
mov
test
aas
stos
push
mov
pop
rorl
inc
lds
test
push
and
sub
and
out
lret
inc
test
cmp
xchg
rolb
lret
dec
xchg
stos
jne
lds
mov
popf
jne
aaa
imul
and
fsubrs
push
mov
scas
push
es
scas
out
or
and
dec
and
mov
pop
jb
inc
or
popa
idivb
sub
or
gs
cmpsl
dec
add
xor
testl
mov
xor
mov
pop
mov
jnp
arpl
sub
jnp
xor
xchg
xor
fstpt
jnp
mov
call
aad
push
movl
pusha
pusha
movl
lea
jmp
cmp
call
pushf
lea
je
cmp
sub
push
pushf
clc
cmp
pushf
lea
ja
cmc
stc
imul
jmp
call
cwtl
push
ja
dec
xchg
fimuls
into
dec
loop
bound
or
or
xor
push
sbb
fimull
add
inc
repnz
adc
mov
iret
popf
add
or
xchg
adc
test
xchg
addr16
es
iret
imul
imul
test
lock
loope
nop
data16
mov
les
xchg
xchg
movsl
xor
and
js
pop
mov
add
lahf
ret
mov
lea
call
sub
cmp
cmp
pusha
pushf
jmp
movb
lea
jb
stc
cmp
pusha
call
call
push
dec
dec
dec
dec
inc
push
cs
insb
add
mov
hlt
lcall
fs
je
call
bound
mov
xchg
out
cmp
cmp
test
les
pushf
fwait
mov
rclb
xor
sub
sti
push
xlat
pusha
or
cmp
cmp
lahf
mov
cmp
fimuls
dec
hlt
mov
cld
cmc
pop
jmp
call
lahf
in
and
out
insl
dec
shll
dec
mov
sbb
xchg
clc
fsubrs
xor
movl
je
cmp
cmp
loop
cmc
bound
cli
mov
stos
inc
mov
repnz
inc
notl
lahf
stos
inc
lahf
hlt
std
or
popaw
push
add
leave
pop
mov
imul
ret
cmp
cwtl
push
or
out
cmpsb
mov
ss
mov
adc
out
inc
bound
lods
mov
stc
andl
inc
pop
adc
int
add
and
xchg
cmpsl
xor
jle
fwait
shrl
out
rclb
xchg
pusha
adc
outsb
cwtl
cmp
inc
clc
ret
insb
popa
dec
xchg
push
insb
and
and
sub
pusha
inc
sub
push
mov
add
add
sti
movsl
jne
lds
lahf
sub
addb
imul
pusha
sbb
insl
hlt
mov
push
and
mov
dec
loope
lods
push
push
dec
cmpsl
push
das
mov
add
ds
imul
sti
cmp
cs
shlb
loop
andb
dec
sbb
ret
icebp
jns
cmc
mov
movsl
das
or
inc
and
mov
sub
xchg
in
imul
pop
roll
mov
repz
lret
faddp
testl
fsubl
outsl
and
rcrb
fists
lcall
lods
das
and
js
cltd
test
push
leave
in
mov
or
dec
out
pop
data16
pop
inc
xchg
mov
enter
pusha
xchg
push
dec
stos
jp
cmp
fstl
jmp
pop
fsts
fdivrl
adc
inc
pushf
lea
ja
dec
mov
push
inc
lea
inc
inc
sar
xchg
setge
bsr
sbb
mov
cmc
or
rol
mov
call
leave
ret
push
popa
dec
xchg
rorb
ficoms
or
mov
or
test
fstpl
flds
mov
and
hlt
cmpb
call
or
adc
xchg
cmpsb
xchg
jle
sahf
jle
cmp
hlt
fsubs
pop
dec
leave
repnz
ret
aas
cmpsl
call
push
out
add
pop
cmp
mov
push
pop
popf
inc
cmp
nop
pop
daa
sbb
mov
rorb
call
ljmp
cwtl
push
or
mov
ljmp
mov
mov
dec
xchg
jecxz
cmp
popa
add
xor
inc
in
in
adc
jno
push
fdivp
jmp
sub
hlt
cli
enter
lret
mov
dec
test
mov
pusha
icebp
ljmp
sbb
movsl
lods
arpl
mov
xchg
scas
in
xor
cli
push
loope
clc
jl
sub
pushf
js
mov
outsb
sub
sbb
mov
fidivl
popa
adc
sub
mov
add
xor
adc
push
xlat
lock
dec
xchg
xorb
mov
or
insb
sub
les
mov
mov
jae
pop
mov
mov
xor
jno
cmpsb
mov
adc
mov
inc
popa
in
mov
sub
xor
rorl
mov
add
xor
inc
icebp
jecxz
test
jbe
popf
shlb
cmp
enter
cmc
scas
movsl
fisttps
and
mov
sbb
stos
cld
stos
js
mov
clc
xchg
cmpsl
xchg
jl
out
jl
jl
lahf
sub
xchg
scas
xor
push
fs
mov
stc
fs
divl
mov
lahf
fs
push
clc
push
lahf
push
jg
call
imul
loope
mov
xor
or
shll
add
lahf
jge
dec
jl
fs
std
jecxz
xor
les
mov
test
dec
pop
sub
xor
test
lea
jg
mov
push
adc
mov
pop
mov
xor
in
and
inc
lock
lcall
lock
push
ds
in
call
push
push
jbe
dec
xchg
pusha
cmp
mov
adc
mov
scas
sahf
mov
mov
leave
jp
sbb
inc
dec
out
loope
cmp
add
mov
push
dec
sti
mov
jmp
insb
inc
xor
addr16
xchg
dec
mov
sub
inc
out
lret
pusha
jne
dec
and
bound
sbb
insb
cmp
les
dec
add
sub
inc
fnstsw
dec
data16
inc
sub
xchg
inc
aas
sbb
lds
jns
mov
fildl
xor
pushl
pushl
pushl
pushl
ret
pop
push
adc
sub
push
shl
mov
das
shl
sbb
push
mov
or
test
aaa
sub
movsbw
lea
call
pusha
pushf
lea
jne
call
inc
mov
lea
jmp
xchg
push
sbbl
fnsave
jns
cmp
xlat
inc
insb
sub
shl
push
sub
subb
pop
sbb
jnp
jnp
fildl
arpl
fcomps
cmpb
stos
outsl
push
idivl
sbb
inc
sub
adc
test
imul
push
das
in
dec
loop
lock
lret
xchg
jp
lock
loop
and
rolb
mov
pop
iret
out
repnz
jns
sbb
mov
rorb
int3
pop
xor
dec
lret
and
dec
dec
idivb
cmp
pop
dec
xchg
xor
add
add
sti
push
movntq
push
pushl
lods
loopew
ss
push
sub
sub
jb
or
pop
adc
lock
fistl
xchg
fcomp
and
mov
and
xlat
xchg
pop
lret
dec
push
mov
shl
jo
add
gs
jecxz
popl
lret
rolb
call
mov
push
aaa
stos
inc
not
addl
addb
std
push
in
adc
scas
or
into
lods
and
push
rcrb
cltd
add
sub
and
sub
xor
cmpl
sub
cmp
and
lea
lea
push
xchg
movzbw
not
movl
seto
lea
call
sbb
xchg
aam
loop
mov
fisubl
mov
inc
out
pusha
ja
std
jae
push
popf
pop
stos
les
cmp
xchg
sbb
subl
jne
arpl
push
xchg
mov
adc
ljmp
pop
and
nop
cli
lcall
push
mov
xchg
into
ja
jnp
into
scas
std
sub
mov
shlb
jmp
ljmp
adc
inc
mov
sahf
fs
and
add
jne
dec
pop
dec
xchg
mov
cmpsb
xor
dec
ficoms
mov
out
icebp
sbb
push
stos
xchg
inc
lds
test
mov
pop
cld
mov
push
mov
loop
nop
js
scas
push
orb
cltd
lcall
rcll
lods
cmp
lret
fs
mov
inc
and
mov
mov
mov
push
pushl
ret
xadd
pop
dec
xchg
imul
jge
xchg
xor
inc
mov
add
ud0
movsl
ss
fs
in
inc
repnz
push
adc
ret
jle
push
mov
in
and
or
jb
sahf
sub
xlat
cwtl
mov
sub
mov
push
mov
and
rcrb
repnz
sub
iret
insb
push
pop
rorl
sub
sti
popf
inc
notb
int
and
xchg
loop
cmp
call
pop
mov
mul
mov
std
addr16
jg
add
ja
mov
xchg
fmul
sbb
sub
or
jge
or
adc
fldl
cmp
int
sub
sbb
stos
fwait
les
sti
js
in
jmp
in
daa
sbb
adc
shlb
inc
fucomp
les
lahf
ficomps
hlt
cmp
sahf
sbb
cwtl
imulb
std
cmp
or
or
pop
dec
xchg
add
lcall
aam
push
repnz
and
mov
and
jns
and
jae
cmp
mov
scas
ja
cmpl
mov
outsb
jmp
mov
ficompl
aad
xor
dec
dec
dec
xor
iret
lret
stos
inc
test
cmp
xor
xor
pop
int
dec
xchg
movsl
pop
or
push
mov
sarl
aad
xor
adc
jmp
xor
lods
cltd
sub
cltd
jge
aad
adc
insb
and
mov
dec
or
push
push
std
jl
sub
popf
bound
push
repz
mov
sti
leave
jo
fdivl
inc
inc
clc
dec
in
cwtl
jb
push
scas
inc
cli
mov
sarl
sarl
xor
scas
mov
or
in
add
xchg
jno
pop
jnp
mov
testl
add
mov
popa
or
pop
into
push
in
addb
push
stos
fildl
mov
mov
pop
adc
fdivrs
lret
and
ficomps
fidivrl
test
insb
add
sbb
or
dec
mov
xlat
scas
sub
jns
sub
stos
and
or
mov
enter
pop
push
cmpsl
sbb
lcall
orb
push
fcomps
call
cs
sub
xchg
cmp
adc
lock
loopne
mov
jg
ret
pusha
jmp
lea
jbe
scas
lcall
stos
enter
sbb
mov
pop
sahf
mov
xchg
je
out
mov
scas
push
sbbl
push
iret
orl
cmp
inc
test
es
repz
push
dec
xchg
mov
faddl
or
mov
aam
stc
imul
mov
dec
outsb
les
lods
xchg
es
popa
sbb
test
add
jge
add
adc
fwait
divb
popa
out
scas
shl
sbb
lahf
dec
push
fwait
sbb
daa
pop
jg
inc
popa
or
mov
je
xor
pop
push
stc
mov
push
stc
sub
add
sub
les
pop
sub
loopne
repnz
cwtl
cwtl
out
mov
push
dec
xchg
les
or
mov
inc
fcomps
cld
jp
or
sar
inc
mov
in
outsb
addl
addb
rolb
pop
add
adc
in
adc
out
outsb
shl
push
dec
daa
incl
jb
add
cmp
xchg
ret
lret
mov
push
add
hlt
ja
icebp
lret
push
dec
mov
mov
out
enter
jae
jns
stmxcsr
jo
pusha
push
mov
mov
pushl
pushl
ret
sbb
sahf
push
dec
xchg
mov
notl
lahf
jnp
xchg
push
sarl
mov
mov
push
sub
xchg
inc
out
repz
xlat
fs
mov
xor
sub
hlt
enter
imul
push
sub
andb
stc
mov
lods
lcall
jo
es
xchg
adc
sub
cwtl
fmul
cmp
pop
dec
stc
jecxz
jecxz
xchg
push
mov
xor
xchg
movsl
cmp
out
sbb
xchg
mov
fwait
pop
add
idivl
js
stos
int3
pop
fildll
mov
xor
jo
sub
mov
aaa
in
fs
stos
fistpl
das
dec
xor
jns
mov
cmp
jl
ror
out
enter
std
pop
or
sbb
and
sahf
fwait
pop
mov
test
dec
scas
jl
pushf
pop
loopne
add
cmp
mov
mov
cmp
rcll
adc
and
mov
dec
rolb
add
and
shlb
in
ret
and
cmpsl
dec
xchg
and
fistpl
push
sbb
mov
pop
adc
jecxz
test
and
repz
cld
testl
rcl
or
sbb
fcoml
xchg
push
enter
jo
pushf
push
mov
pop
stos
cmp
adc
ja
out
cmp
jne
mov
outsl
xor
jg
inc
and
lahf
lahf
setle
pushf
mov
movsbw
lea
jmp
stc
pop
mov
call
bound
xchg
out
scas
push
mov
pop
clc
jb
cmp
bound
inc
data16
push
sub
je
data16
ss
dec
sbb
lock
frstor
lock
mov
and
negl
in
sbb
push
dec
pop
out
mov
imul
cli
push
dec
and
adc
or
adc
jns
push
decb
push
jbe
mov
mov
cmc
int
xchg
ret
pop
subl
dec
xchg
aam
fimull
cmpsb
js
xchg
push
add
loop
xor
repnz
inc
mov
aam
pushl
popl
mov
pusha
pushf
push
pushl
ret
pusha
mov
pushl
pushl
ret
les
push
dec
xchg
test
into
shlb
scas
jp
ret
ret
inc
pop
outsl
or
test
fwait
fs
cmp
bound
es
xchg
jecxz
cmp
enter
dec
dec
aaa
lods
cmp
out
lret
jo
inc
ror
dec
dec
mov
push
add
int3
dec
clc
jb
push
pusha
lret
push
xchg
add
cmpb
jmp
andb
push
dec
xchg
das
mov
stc
insl
adc
gs
push
std
lret
test
jge
movb
movsb
data16
inc
xchg
inc
out
pop
add
and
xchg
jge
sahf
pop
shrb
push
out
cmp
fs
sahf
push
dec
sbb
ret
div
mov
imul
mov
fisubl
cmp
xchg
push
or
pushf
and
jle
mov
lcall
jecxz
jle
cmp
xchg
sahf
adc
je
pushf
dec
sub
addr16
pusha
imul
push
rcrb
pop
sub
jmp
aaa
mov
std
mov
xor
sub
xchg
cmp
andb
lods
lds
test
fidivrs
xlat
and
push
repz
repz
loop
sarl
xorb
dec
es
les
andb
pop
sbb
xor
dec
or
cltd
jae
jnp
sub
hlt
inc
push
out
fcoms
xchg
lcall
sbb
mov
or
stos
cmpsb
xor
dec
jne
fmul
mov
adc
mov
test
push
dec
mull
add
andb
lods
enter
lock
cmp
jle
xchg
xor
insb
cs
daa
xor
pop
jbe
push
dec
xchg
test
stos
pop
ret
push
inc
lahf
cmp
arpl
int
es
xchg
enter
out
pusha
cmp
mov
jl
repnz
add
sbb
rcrb
lcall
pop
flds
cmpsl
mov
dec
xchg
xor
adcb
dec
es
add
lcall
mov
je
std
idiv
orl
outsl
inc
add
lds
rcll
stos
and
jns
in
push
jb
adc
popf
mov
xchg
lahf
movb
lea
jle
call
call
xor
push
dec
xchg
add
stos
ja
fwait
pop
jecxz
pop
test
ja
movsb
enter
or
iret
jns
mull
hlt
xchg
dec
xlat
pop
fsubrl
dec
add
jle
pop
mov
mov
sub
xchg
push
in
jbe
push
and
loop
movsb
mov
rol
xchg
and
and
rcrl
pop
inc
push
sbb
jp
stos
add
jns
test
add
mov
cld
xchg
xor
in
fimuls
mov
fs
call
push
pushf
lea
jne
bswap
pushf
call
bt
shld
dec
aaa
push
or
mov
add
btr
sub
pusha
shr
lahf
mov
ror
bsf
shl
sub
mov
daa
stc
call
jmp
xor
push
dec
xchg
xchg
nop
push
adc
inc
fsubrl
cld
push
cmp
push
movsb
inc
adc
cmp
jge
roll
inc
add
or
lahf
xchg
imul
pop
popf
dec
mov
xor
lods
lret
dec
int
hlt
daa
dec
mov
gs
fs
push
mov
insb
adc
mov
sub
clc
sub
mov
ljmp
imul
test
inc
sub
out
sbbl
mov
pop
add
jno
adc
ret
mov
dec
xchg
sub
mov
jmp
das
mov
add
pop
sbb
xor
pop
or
mov
inc
out
test
xchg
popf
scas
ret
sub
sbb
adc
push
or
fcomi
js
sub
nop
jns
sbb
mov
jmp
sub
add
xlat
pop
jl
adc
mov
int
shll
fists
out
dec
in
test
cmp
mov
clc
pushf
pushf
lea
je
bt
or
pusha
pusha
lea
je
bsf
bts
cwtl
xchg
sub
and
daa
test
mov
or
rol
sar
mov
and
shld
rcl
bsf
shr
rol
mov
call
pusha
pushf
jmp
call
mov
push
call
jg
dec
dec
xchg
mov
sbb
test
add
adc
inc
hlt
inc
dec
or
mov
nop
lahf
push
or
sub
scas
sbb
popa
aad
lods
push
mov
test
mov
or
loope
mov
movsl
inc
mov
orl
pop
stc
clc
ljmp
ds
adc
mov
add
mov
dec
lret
xchg
les
mov
mov
call
inc
or
repz
data16
lret
mov
rol
movzbw
adc
clc
mov
clc
push
jmp
outsb
cmp
fcoml
adc
mov
jmp
frstor
out
mov
adc
xchg
add
mov
outsl
pop
ja
cld
and
lock
pushf
sub
mov
sub
mov
ljmp
mov
and
and
jb
insb
mov
fadds
mov
ja
sub
sbb
cwtl
push
repnz
cmpsb
pusha
pop
pop
jge
popa
mov
daa
shlb
mov
aad
cmp
iret
xor
movsl
xor
ds
mov
leave
add
xchg
mov
lods
sub
enter
in
lods
inc
push
lcall
adc
fdivs
lea
in
mov
fimuls
in
mov
add
push
frstor
and
inc
sub
je
inc
jl
sbb
push
in
iret
iret
dec
fisubrs
mov
stos
dec
inc
lock
lods
das
xlat
lahf
inc
stc
xchg
or
lods
das
sbb
je
aad
loope
roll
lret
mov
add
xor
call
xchg
iret
ret
xchg
mov
push
scas
push
shlb
out
push
or
or
int3
add
iret
addr16
sbb
ja
aam
mov
andl
gs
jp
sub
data16
outsl
xchg
sub
and
clc
xor
daa
mov
lods
mov
add
bound
jne
pop
pop
scas
or
adc
in
mov
jnp
jns
and
push
inc
and
mov
mov
and
xchg
jbe
mov
pushf
sahf
xchg
inc
bound
pushf
movl
jmp
xor
cmpsl
dec
dec
xchg
scas
ss
push
ficoml
push
mov
adc
mov
push
mov
or
dec
xor
test
cmp
cli
sbb
jl
filds
pop
incb
add
in
or
fwait
dec
xor
jecxz
mov
iret
loopne
subb
lcall
push
decl
fstpl
pop
js
xchg
push
add
rcr
mov
dec
xchg
and
aad
std
add
pop
push
push
push
cmp
inc
adc
nop
nop
jge
repnz
inc
aad
int
jecxz
shr
mov
subb
sbb
xchg
push
outsb
dec
ret
cmp
dec
push
daa
cmp
mov
cmp
pop
out
jb
mov
add
cmp
scas
and
js
fdivs
ret
adcb
xchg
into
pop
or
pushf
pusha
cmp
fs
mov
mov
lds
jecxz,pt
in
push
bound
cmp
cmp
int
pop
movsb
lds
pop
add
in
addr16
cli
pop
push
add
add
popa
xchg
or
repnz
xor
mov
lret
xchg
xchg
dec
mov
fcoms
adc
push
aam
push
cmp
adc
aas
jmp
mov
sbb
roll
out
mov
sarb
dec
dec
xchg
es
mov
aam
add
xor
andb
lods
xor
rcrb
xchg
outsl
mov
xor
cmp
jno
int3
inc
sbb
adc
fsubrs
test
in
dec
or
fiaddl
leave
out
sub
add
add
jo
fbstp
or
fmuls
xchg
push
jecxz
add
sti
aas
out
or
push
mov
add
decl
inc
and
scas
xchg
cmp
jmp
xchg
mov
push
bswap
mov
pusha
mov
jmp
test
sub
jmp
pop
imul
andb
bound
push
jp
jmp
adc
out
pop
fists
xlat
inc
jb
ret
inc
ret
test
out
jo
fs
xor
imul
lods
jae
shrl
pop
or
and
fs
xor
arpl
test
cmpsl
inc
loope
test
daa
or
or
gs
arpl
pop
add
and
push
fwait
add
sub
loope
sub
pusha
mov
sub
cli
add
xor
jns
sub
out
sub
add
xor
subl
add
add
add
pop
sub
js
xor
mov
add
xor
andb
add
mov
xor
cltd
push
add
add
add
jo
sbb
add
add
add
add
add
jns
add
push
add
add
add
or
mov
sub
or
sub
test
xor
mov
add
add
add
add
cmp
xor
shrl
xor
add
push
add
add
add
jecxz
sub
shlb
add
insl
sub
enter
fldcw
add
mov
xor
loope
sub
dec
lahf
xor
fsubs
sub
pop
sub
loopne
xor
add
pop
push
jae
dec
xchg
arpl
imul
mov
pop
sbb
fildl
mov
imul
rcrb
mov
and
sbb
cmp
sbb
movsb
rorb
in
mov
jecxz
addr16
add
cltd
mov
js
inc
lret
movb
stos
lea
xchg
fs
lahf
sub
xchg
scas
adc
push
addr16
cmp
fistpl
aad
jmp
out
mov
pushw
mov
negb
jae
lods
aas
fstps
popa
inc
out
mov
aas
xlat
repz
adc
and
mov
fstl
mov
sbb
test
bound
mov
or
les
or
nop
fcompl
enter
and
pop
xor
pop
shlb
shrb
icebp
cld
mov
mov
int
push
jecxz
in
dec
mov
or
in
stc
mov
int
leave
arpl
ljmp
sub
shll
mov
sub
and
fs
lret
je
cmc
sub
add
js
cltd
outsl
or
call
aam
cmp
test
dec
les
mov
pop
dec
cmpsb
or
mov
sbb
scas
loop
lock
xchg
and
ljmp
cltd
push
pop
imul
xor
testb
sub
dec
or
push
int3
cmp
sub
fildl
xchg
xchg
shll
jmp
roll
das
dec
in
in
sbb
ret
push
rcrl
into
xor
sahf
movsb
int
sbb
pop
int3
inc
jb
icebp
dec
aaa
ljmp
and
adc
ss
mov
sub
dec
or
cmpsb
ret
fwait
and
sbb
or
xchg
inc
sub
xchg
aaa
sbb
int3
xchg
ret
shrl
push
cmp
shll
cwtl
jg
stos
inc
fsts
xchg
push
pop
jecxz
fistpll
xchg
dec
sti
jg
pop
scas
sub
adc
sub
mov
mov
cmp
in
jnp
xchg
adc
push
xor
jecxz
popf
add
loope
stos
xchg
push
mov
push
sbb
out
and
stc
mov
and
mov
fldcw
adc
test
or
aam
in
test
adc
mov
dec
xchg
mov
std
fnsave
jns
loope
sbb
sub
push
inc
iret
inc
mov
dec
jae
int3
cmp
lcall
xchg
dec
sub
push
push
fisttpl
gs
sbb
add
xchg
cmp
nop
cmp
shlb
out
dec
repz
rcll
add
cmp
mov
popf
pop
push
sub
popf
packssdw
mov
ja
pop
mov
ud1
lds
xor
push
xchg
mov
pusha
add
pusha
lea
jmp
rol
inc
dec
xchg
insb
ds
mov
xchg
push
push
jle
sahf
push
cmp
jne
stos
cmp
insb
ficompl
int3
xchg
xchg
fs
addl
push
add
sub
jmp
out
cmp
insb
lar
push
mov
outsl
nop
test
mov
jne
sbb
fdivs
mov
lcall
rcrb
mov
or
add
mov
fs
jmp
movw
lea
jne
pusha
call
clc
cmp
add
pushf
mov
mov
lea
jmp
pushf
setl
not
lods
clc
pushf
pusha
bt
ror
movb
movb
not
pushf
call
test
push
inc
dec
xchg
push
add
push
inc
mov
cmpsb
dec
out
mov
scas
sbb
loopne
dec
mov
shrd
shlb
je
sbb
and
push
mov
int3
jmp
int3
lahf
adcb
xchg
or
mov
out
in
cmp
out
shr
cld
push
mov
push
lods
lahf
xchg
sbb
out
mov
mov
pop
adc
cmpsl
stc
lahf
test
lea
fistps
push
mov
movsb
pusha
mov
mov
push
mov
bswap
movl
cwtl
lea
pushf
movl
pusha
pushf
movl
mov
pushl
popl
movw
movb
pushf
pushl
ret
lods
pop
imul
mov
jb
shrb
popf
je
popf
imul
xchg
add
or
xor
les
adc
das
sbb
xor
das
cmpb
xor
ss
enter
jle
addr16
ljmp
aas
mov
xor
adc
movsl
inc
loope
je
in
mov
lret
mov
mov
int
jns
in
lods
jp
int3
cmpsb
clc
fidivrl
mov
aam
push
rorb
loop
add
ds
inc
dec
xchg
test
inc
mov
or
adcb
loope,pn
ret
pop
sbb
sub
lock
jl
ficomps
cli
dec
in
ja
jp
outsb
jecxz
fwait
pop
mov
sub
out
dec
sbb
stos
inc
int
xor
mov
adc
cmp
cmc
roll
dec
cmp
enter
dec
adc
es
sbb
or
add
nop
das
inc
and
test
mov
xor
mov
loopne
xor
rclb
outsb
sub
pusha
arpl
xchg
inc
inc
add
inc
jb
xor
dec
xchg
jne
mov
rcll
scas
cmc
jp
sub
das
lds
pushw
mov
test
inc
arpl
cmp
iret
lea
jns
dec
outsb
pop
clc
adc
pop
sub
inc
roll
cmp
call
jg
jmp
push
dec
or
mov
rorb
push
sbb
movsb
jl
mov
mov
mov
dec
std
pop
sub
test
add
add
cmp
dec
add
add
mov
add
add
add
add
add
add
add
sub
insb
jbe
add
add
add
add
add
sub
xchg
fwait
sub
adc
insb
scas
and
insb
push
mov
jnp
sbb
sub
cmpl
jecxz
movsl
scas
imul
leave
rolb
stc
sbb
insb
lods
mov
popa
inc
repz
jnp
subb
push
xchg
test
inc
rcll
test
lret
push
xchg
jno
mov
outsb
imul
inc
and
mov
clc
js
es
jne
push
cmp
mov
scas
pop
push
decl
dec
js
jne
xchg
mov
add
jae
pop
fsubl
mov
iret
fiaddl
dec
push
scas
mov
lds
nop
pop
pop
adc
mov
movsb
jo
test
xchg
imul
int3
sub
xorl
inc
pushf
mov
fs
xor
insb
mov
mov
add
and
adc
je
in
stos
push
push
add
stos
andb
or
movsl
aaa
sbb
mov
push
popa
addb
call
push
adc
out
arpl
iret
or
es
das
push
lods
xor
jmp
xor
sar
mov
xor
push
daa
hlt
mov
popf
jnp
stc
inc
pop
movsb
lods
and
lahf
mov
mov
mov
mov
test
xchg
xchg
jbe
in
cmpsl
jns
jmp
or
es
jge
ja
inc
cmpsl
adc
cmp
pop
xchg
fmull
iret
mov
mov
fistpl
push
dec
repz
inc
or
xor
loope
push
aad
push
xor
or
pop
lds
loop
push
mov
pop
mov
pop
lahf
lock
pop
or
jle
pop
mov
dec
cmp
jp
fistl
test
aas
add
push
movsl
push
inc
jl
aad
sbb
lret
shlb
in
pusha
push
loope
push
pop
das
xchg
popa
mov
push
lock
mov
push
lret
scas
int3
insb
mov
cmpsb
fxch
cli
push
mov
iret
aam
mov
jno
mov
mov
mov
enter
loopne
sub
sub
and
movsl
mov
aaa
cltd
int
dec
icebp
xor
mov
popf
out
inc
and
adc
xorl
out
inc
enter
and
xlat
jb
sub
cmpsb
add
aaa
dec
jnp
mov
pop
xor
sbb
rolb
mov
cmpsb
lds
inc
repz
jbe
in
lds
dec
cmp
or
sbb
jmp
insl
pusha
mov
ljmp
sarb
push
inc
sub
aaa
filds
mov
push
cmc
arpl
cli
lahf
or
push
dec
pop
cmc
insb
mov
push
nop
aaa
push
cmpsl
stos
jb
mov
cmpsb
sub
mov
daa
cmpsb
jns
or
sar
and
jle
add
vpaddusw
adc
mov
fs
push
xor
and
or
fbld
mov
adc
popf
dec
or
xchg
lods
xchg
xchg
loope
inc
xor
xlat
adc
xchg
stos
sbb
sub
cmp
scas
sub
popa
mov
ffreep
push
lahf
sub
lds
daa
aas
sahf
dec
popf
dec
dec
push
add
push
push
test
mov
jo
sbb
jb
and
icebp
push
in
test
gs
or
add
cmc
cmp
sbb
repz
or
lret
cltd
stc
pushl
lret
sbb
cmp
push
leave
and
jns
push
xor
pop
inc
call
mov
and
sub
aaa
clc
nop
pushf
cmpsb
cmp
inc
insb
push
pusha
bound
in
mov
xchg
mov
mov
popa
cmp
xchg
mov
xchg
pop
add
push
jo
pushf
xor
ds
pusha
cmpsb
aad
xchg
js
stos
mov
pop
pop
and
inc
cmpsl
cmpsl
xlat
push
call
fmul
sbb
and
pushf
and
test
push
pop
test
in
pop
xchg
xchg
mov
scas
daa
mov
xchg
rcr
xchg
repnz
xor
clc
lods
repz
popa
xor
adc
xchg
imul
aas
into
adc
std
mov
in
push
pop
das
or
fdivp
inc
movsl
push
sbb
addr16
aas
or
fidivrl
add
imul
mov
cli
mov
fcomp
cltd
mov
insb
mov
lret
and
lret
pop
fnstenv
fisttps
xor
ljmp
hlt
jo
lea
arpl
dec
in
inc
sbb
stc
jno
mov
mov
mov
mov
mov
xor
cmpb
pop
out
inc
fiaddl
push
inc
fldenv
lods
pop
mov
mov
push
jmp
cmpsl
je
fisubrl
mov
mov
mov
cltd
idivb
mov
xchg
cmc
mov
jl
lret
sub
mov
mov
xchg
jae
ss
or
push
loopne
aaa
cmpsb
pop
jo
sbb
xchg
xchg
xcrypt-ecb
cmpsl
into
and
push
in
sbb
mov
call
clc
and
jns
mov
mov
ljmp
cli
loopne
out
in
lock
leave
pushf
push
in
movsb
mov
pusha
adc
lahf
sbb
dec
sub
pop
aaa
repnz
sub
punpcklwd
stos
pop
add
sub
lods
fistpll
cwtl
jno
lock
mov
sub
sarb
add
imul
addl
cmp
lods
cmp
enter
pop
iret
jle
sub
outsl
jb
xchg
and
outsl
inc
aas
pop
cmp
sub
mov
jnp
fiaddl
xlat
mov
cmpsl
iret
loope
push
dec
xor
sbb
negl
sbb
popa
pop
and
pusha
lds
mov
pop
xlat
xchg
or
jne
cmp
push
jg
add
pop
cmp
das
shl
movsb
push
rorl
sbb
lds
or
jbe
mov
out
int3
xchg
setge
dec
push
dec
faddp
and
push
jbe
mov
das
dec
scas
or
adc
sub
insb
jmp
sbb
jle
jp
mov
stc
sbb
rcr
mov
ja
aad
push
sbb
fsqrt
dec
aas
cmc
repnz
sub
pushf
sbb
cmp
lds
xor
lret
add
mov
repz
pop
jnp
pop
insl
adc
lret
or
ljmp
jb
jmp
aas
mov
dec
dec
dec
into
pop
loopne
int
pop
fistpl
push
jo
fs
les
cmpsl
push
push
aaa
mov
sub
xchg
mov
lds
xchg
pop
push
jecxz
mov
adc
sbb
dec
mov
jns
add
cmp
pop
or
pop
mov
cmp
ret
lcall
insb
dec
lcall
jle
xor
sbb
add
mull
add
sub
scas
lds
mov
and
movsb
mov
jle
sarl
test
movb
push
imull
call
sti
ja
adc
and
int
in
movsb
xchg
xchg
adc
mov
xchg
mov
sbb
clc
mov
mov
jmp
push
test
xchg
in
addr16
push
movsb
gs
test
scas
aaa
in
sbb
cmp
sbb
rcr
mov
xlat
cmp
xor
loope
lret
fistps
mov
pop
popa
mov
stos
dec
inc
pop
jnp
fnsave
hlt
les
sub
leave
add
cmp
mov
test
jp
shrb
iret
cmp
gs
outsb
shlb
or
mov
pop
push
out
jmp
stos
jne
mov
lds
subl
jl
push
cmc
sub
mov
lods
aaa
adc
or
mov
lods
stos
mov
loope
xor
cmp
adc
inc
and
fxam
movsl
add
loop
pop
out
lcall
fwait
bound
js
in
or
push
push
leave
ret
ds
lret
loope
add
xchg
lds
lret
xor
or
jne
stc
int3
cs
faddl
add
push
sbb
jbe
fildll
jle
jnp
aaa
fadd
lret
hlt
jae
cltd
test
out
or
and
xorl
mov
je
push
js
aaa
sbb
fisttpl
push
loopne
fdivl
cmpsl
mov
mov
jae
scas
push
int
and
repnz
js
and
jno
mov
xchg
push
or
out
fcompl
rclb
mov
inc
mov
jg
push
mov
movsl
lahf
inc
shlb
pop
mov
push
jl
test
loope
insb
xor
loop
repnz
inc
and
cmp
xchg
push
dec
popa
fucomp
pop
ficoms
xchg
add
sbb
in
test
mov
jno
jmp
mov
lret
mov
fs
sub
ret
mov
xchg
outsb
mov
jg
outsl
ret
inc
test
cmpsb
mov
fmuls
pop
mov
or
inc
xor
pop
dec
daa
and
mov
repnz
cmc
xor
test
sbbl
xor
push
jg
pop
push
adc
mov
pushf
add
lock
lods
sarb
aas
add
les
cmp
sub
sbb
push
outsl
jmp
clc
or
test
sbb
mov
mov
cli
in
jg
jb
movsl
pop
xor
test
ja
nop
mov
and
in
or
push
out
pushf
jg
adc
hlt
lock
sbb
push
inc
adcl
add
push
enter
and
into
mov
add
lahf
adc
into
cltd
shll
dec
jg
test
lock
roll
repz
mov
xchg
stc
aam
jmp
xchg
cmp
data16
aam
fwait
popa
inc
cli
adc
ja
jmp
xchg
in
xchg
sub
pusha
int
sbb
ds
int
fcmovnbe
in
andl
rclb
and
and
and
addr16
in
mov
movsl
cmp
outsl
dec
add
aas
jg
add
test
xor
sub
repz
pop
push
sbbl
add
in
or
jp
lock
cmp
dec
sarl
dec
or
add
negb
push
push
and
test
jmp
and
xchg
cmp
jns
rcrb
lods
sbb
jle
jns
popa
gs
inc
jge
or
testl
xor
sahf
xchg
leave
cmp
cli
lds
aam
popa
fs
jae
jae
jp
arpl
pop
pop
cs
insb
add
add
popf
sub
mov
jmp
out
shlb
movsl
xor
cmc
jns
adc
lods
inc
adc
inc
push
enter
ret
push
mov
outsl
ss
lcall
jp
pop
sahf
cs
mov
mov
insl
cmp
mov
mov
mov
ja
mov
inc
adc
mov
add
mov
mov
xlat
inc
or
xor
insb
hlt
fcomps
js
fdivl
hlt
mov
and
push
das
repnz
enter
loop,pt
addl
mov
je
add
jb
ret
push
jb
sub
xorl
add
xor
cmp
andb
mov
stos
aad
cs
jnp
add
xchg
and
pusha
push
dec
test
push
pop
jmp
jmp
inc
aad
sbb
sub
aaa
inc
jb
rorb
mov
xchg
call
rol
add
movb
mov
pushl
ret
or
pushl
dec
xchg
jae
fstpl
aad
add
leave
dec
lds
daa
hlt
pop
dec
sub
sub
sub
pop
nop
test
stc
jae
outsl
add
dec
inc
das
xlat
pushf
mov
mov
jecxz
xor
jge
jne
pop
rclb
pop
pop
push
cmp
or
call
pop
das
leave
mov
into
ret
xchg
pop
inc
mov
sti
jns
add
sti
insl
daa
cld
cmp
xchg
loop
leave
jnp
xor
xchg
fldl
imul
and
fildll
fildll
lea
addr16
or
pop
dec
in
jb
pushf
jae
xlat
fisttpll
addr16
shll
jl
push
lret
lods
leave
inc
arpl
sub
mov
mov
push
xlat
xor
test
popa
dec
bound
cmp
mov
cmpl
aam
and
mov
loopne
mov
shlb
mov
test
jns
int
aad
and
sub
inc
ljmp
xchg
outsl
test
aaa
andl
or
sub
lahf
or
push
add
xor
aaa
sti
mov
push
mov
push
add
imul
pop
fisubrl
xchg
es
enter
cwtl
jl
stos
jae
jae
pop
or
cmp
xchg
dec
cmp
pusha
cli
int3
push
dec
lret
nop
mov
jge
adc
inc
mov
xor
popf
jne
xchg
adc
xchg
xor
lds
xor
inc
and
mov
xor
jle
setne
shll
cmpsb
jp
or
adc
mov
inc
mov
inc
loope
fcmovnb
add
dec
xchg
outsl
dec
mov
in
lea
mov
movsl
mov
inc
jae
not
arpl
adc
jecxz
pop
les
push
sub
mov
ja
jle
scas
inc
mov
pop
sub
or
movsl
sbb
jle
daa
cmpl
adc
cld
cmc
mov
aad
dec
push
cmc
or
mov
jo
jl
addr16
lahf
sub
loope
pop
arpl
sub
jle
ss
sbb
jae
jp
mov
inc
js
testl
sbbl
std
add
in
sub
jecxz
inc
push
and
fadds
loopne
fs
push
inc
or
nop
xchg
jle
test
jno
inc
mov
mov
adc
sub
push
popf
mov
or
pop
inc
data16
scas
adc
add
cmp
out
push
fadd
subb
das
xor
push
xchg
mov
mov
das
icebp
push
add
movsl
xor
imul
mov
std
loop
inc
sub
jb
push
aam
dec
cmp
aad
jbe
sub
stos
cli
pop
or
push
adc
mov
shll
jecxz
dec
ljmp
cmp
mov
xor
fs
insb
add
jmp
dec
xchg
xchg
jge
mov
cmp
sub
lahf
sub
xor
sub
fiadds
add
sahf
test
icebp
xchg
int
add
pop
cmp
lods
nop
inc
mov
xor
cmp
ja
pop
ror
leave
pop
mov
rcrb
fdivr
pusha
cltd
pop
sbb
insb
lcall
push
fisubs
xorb
inc
sub
sub
mov
int
ret
imul
xor
xchg
aaa
push
jno
lea
or
push
pop
add
or
cld
das
dec
xchg
jbe
lock
adc
cmp
jp
pop
mov
cld
into
mov
or
cs
mov
ret
push
fdivrp
test
push
dec
add
push
pop
pop
inc
pop
pop
out
jl
or
jno
sahf
cwtl
cmpsb
ja
lea
push
or
loopne
popa
push
mov
mov
pop
test
fisttpll
mov
dec
cmp
mov
cmc
push
vpcmpgtd
dec
cli
call
sbbl
movl
call
xchg
sub
dec
xchg
adc
lcall
add
mov
cmp
mov
xor
movsb
push
sbb
jb
mov
sub
cmp
mov
sarl
or
add
xor
and
push
pop
pop
xor
loopne
and
cmp
cli
push
stos
out
test
mov
in
mov
xor
pop
jns
stc
xchg
mov
pop
lea
pop
or
aam
dec
xchg
add
sbb
dec
adc
push
sub
mov
xor
adc
imul
xchg
sub
fsubrs
mov
xchg
lahf
inc
push
loopne
loope
pop
bound
fnsave
jg
mov
push
xor
mov
or
add
addr16
std
jecxz
cwtl
xor
insl
popf
rep
cs
jnp
pop
push
jmp
je
xchg
mov
dec
add
xor
aas
push
sbb
movsb
subb
cs
jbe
or
int3
sahf
sbb
dec
aaa
lock
inc
lret
not
pop
sete
setae
call
not
lea
call
subb
mov
in
imul
mov
jmp
xor
and
ss
jg
repz
aam
jns
pop
sub
lahf
in
popa
insl
jg
xchg
je
mov
mov
movsl
xchg
mov
cmp
cmpsl
push
jne
ss
in
es
push
jae
mov
cmc
lahf
xchg
add
dec
shlb
frstor
sbb
and
rcrl
jae
and
into
cwtl
pop
ror
pop
das
shrl
pop
pop
in
jg
lret
test
mov
mov
sub
movsbw
mov
pop
pusha
push
mov
pushl
ret
addl
xchg
push
std
jns
mov
cmc
xchg
inc
std
test
lods
mov
das
pushf
cs
fnstenv
popa
and
cmp
mov
or
xchg
jmp
ja
xchg
mov
dec
sub
lret
inc
inc
push
pop
leave
inc
dec
rcrb
repz
or
push
lods
aaa
test
cmp
dec
and
scas
lds
mov
cmp
aaa
pop
arpl
jmp
popf
cmc
test
test
lds
or
je
cmp
inc
scas
or
xchg
insl
jns
mov
das
and
xchg
insl
jns
mov
pop
sub
add
jns
mov
fsubp
stc
notl
xchg
insl
jns
cli
add
and
mov
stc
and
out
dec
int
insl
jns
mov
pop
xor
movsb
xchg
insl
jns
mov
cmp
iret
xchg
insl
jns
mov
lods
mov
xchg
insl
jns
mov
push
jns
lahf
sub
int
insl
jns
roll
insb
jno
dec
int
insl
jns
mov
sub
outsl
dec
int
insl
jns
mov
out
and
test
insl
jns
aad
jg
loope
dec
int
insl
jns
mov
xor
ds
movsb
xchg
insl
jns
xchg
ja
scas
aas
testl
mov
movsb
xchg
insl
stc
and
mov
dec
int
insl
jns
mov
dec
int
insl
jns
mov
push
daa
pusha
jp
iret
xchg
insl
jns
fadds
stos
pusha
cltd
cmp
xchg
insl
stc
and
jl
dec
int
insl
jns
mov
push
int
insl
jns
mov
mov
int
insl
jns
mov
mov
jns
mov
mov
xchg
insl
jns
xchg
or
xchg
insl
jns
mov
inc
cmpsb
fwait
dec
int
insl
jns
mov
xchg
mov
outsb
int
insl
stc
movsl
xor
mov
xchg
insl
jns
xchg
push
mov
xchg
insl
jns
cli
addr16
add
jecxz
int
insl
jns
mov
dec
int
insl
jns
mov
int
insl
jns
cwtl
sti
inc
mov
xchg
insl
jns
mov
jmp
stc
sub
loop
into
xchg
insl
jns
mov
sahf
ljmp
jns
mov
pop
movsl
xor
insl
jns
jmp
push
add
xchg
dec
int
insl
jns
mov
or
xchg
in
std
mov
popf
stc
insl
aas
and
mov
add
dec
lods
rorb
xchg
insl
jns
stos
incl
iret
xchg
insl
jns
aad
mov
xchg
addr16
into
xchg
insl
stc
xchg
in
xor
out
out
int
insl
jns
sbbb
out
cmp
cwtl
ficomps
and
sbb
int
insl
jns
mov
aam
popa
orl
insl
jns
mov
and
xchg
insl
stc
daa
enter
mov
int
insl
jns
divl
adc
int
insl
jns
mov
sub
insl
stc
stos
mov
adc
int
insl
jns
mov
adc
adc
jns
rol
jnp
and
mov
xchg
lea
je
rol
rcr
setae
pushf
mov
sbb
add
rol
clc
add
mov
mov
pusha
test
pusha
lea
je
stc
movzbl
add
cmc
lea
pusha
pop
mov
call
inc
push
ret
sub
jge
adc
fstpl
movsl
xor
fldt
jns
cs
ret
mov
mov
cmpsb
sub
mov
or
add
stos
and
cwtl
push
movsl
add
xchg
xchg
insl
and
mov
andl
popa
jle
popa
pop
adc
stc
pop
pop
lea
jb
push
stc
cmp
call
mov
xchg
or
cmp
stc
shll
xor
dec
sub
sub
mov
daa
in
das
hlt
jnp
ret
push
xor
cs
or
ja
sub
mov
lret
pop
cltd
aaa
cmp
fs
pop
loope
jno
ds
insl
repz
xor
jo
cmp
or
scas
inc
shlb
pop
and
ret
mov
pop
insl
int
sbbb
js
test
fucompp
inc
add
add
jmp
dec
xchg
xchg
and
outsl
negl
loope
addr16
or
xor
cwtl
data16
icebp
sub
insb
fs
lods
sahf
push
pushf
adc
fs
or
repnz
std
xor
jae
fcoml
imul
and
add
xchg
sub
add
add
add
mov
btr
push
jbe
shld
not
mov
or
shld
sub
jmp
pusha
stos
call
pushf
lea
jne
pushf
pushf
call
movw
movl
call
pusha
cmp
pushf
mov
pushf
movb
pushl
ret
adc
fisubs
dec
xchg
clc
xchg
subb
ds
mov
fmull
rolb
mov
mov
in
jg
dec
adc
movsl
jge
repz
mov
jmp
or
jle
in
movsl
cmpsb
in
dec
mov
cmp
xor
adc
loopne
mov
pop
fnstcw
mul
arpl
stos
cmp
icebp
fwait
es
add
es
xchg
ja
insl
and
std
in
adc
data16
mov
and
and
push
xor
fisubrl
loopne,pn
mull
hlt
add
rcrb
xchg
adc
leave
stos
mov
sahf
dec
aaa
bound
leave
xchg
mov
repz
fnstcw
cmp
or
push
enter
je
xor
pop
fldt
enter
add
jb
jne
insb
inc
jb
add
adc
adc
clc
or
call
movl
pushf
lea
jmp
sbb
and
cli
mov
inc
push
sbbb
nop
es
and
sbb
inc
jge
mull
ret
popa
cmp
cmp
insb
xor
sub
icebp
pushf
paddq
mov
jae
xor
dec
dec
or
lret
stc
and
imul
test
jne
pop
shll
jne
shrl
test
mov
adc
inc
inc
movsb
std
add
in
xchg
das
mov
repz
adc
inc
fildl
outsl
pushl
stc
xchg
pop
add
out
dec
addr16
out
sahf
outsl
mov
ljmp
lahf
mov
and
fdivs
loopne
adc
sub
stc
cltd
outsl
or
cmp
cmp
out
out
xchg
or
in
mov
sub
mov
repnz
and
sub
bound
and
push
pushf
jle
ret
inc
add
lock
xchg
bswap
xor
das
cwtl
and
xchg
ds
lock
or
adcb
push
ss
lret
repnz
cmp
fwait
ss
mov
lcall
fildl
jmp
sub
jp
es
clc
dec
mov
cmp
ret
xor
and
xchg
mov
and
into
dec
daa
xlat
test
insl
pop
mov
push
out
das
adc
pop
mov
out
cmp
stc
jnp
gs
mov
daa
lds
or
sub
mov
or
mov
cmp
mov
and
lock
fmul
mov
dec
sub
cltd
jg
adc
push
adc
and
or
int3
mov
lcall
xorb
mov
fsubrp
and
xchg
jmp
adc
movsl
test
push
or
or
xor
notb
dec
shr
mov
xchg
je
jne
xlat
lds
cmp
mov
or
aas
inc
fistpll
data16
shlb
pop
out
push
cmp
negb
sub
lods
lds
add
xorb
push
inc
ss
pop
hlt
inc
jnp
clc
stc
repz
subl
loopne
jp
mov
pop
lcall
and
lock
pop
and
adcl
xor
sahf
sub
xchg
lods
pmovmskb
inc
jmp
inc
lret
arpl
arpl
mov
je
sub
nop
push
lds
das
inc
inc
add
repnz
dec
adc
bound
cmc
loope
pop
lea
addl
inc
fldt
mov
repnz
idivl
add
xchg
push
pop
xor
jecxz
iret
jg
mov
mov
sti
lcall
cmp
aaa
and
and
jbe
sbb
xorb
mov
ja
push
fs
xchg
iret
pop
jmp
ret
dec
lret
xor
add
sub
sbb
nop
sti
out
in
andl
les
fcomps
push
pop
cmp
insb
aas
jg
mov
jns
pop
xchg
popa
adc
cmp
jmp
ss
sbb
stos
insl
daa
sbb
dec
xchg
inc
ljmp
lret
data16
aaa
mov
inc
jae
testl
xlat
mov
hlt
xor
rcrb
pop
and
mov
jp
aaa
lcall
fsubl
xor
dec
aas
mov
mov
jns
adc
ja
push
ret
adc
bound
push
mov
loope
bound
sub
cmpsl
pop
inc
push
mov
lret
push
sysret
lret
imul
popf
das
add
mov
mov
sbb
jmp
lcall
pushf
cmp
rclb
sub
jo
mov
repnz
loopne
sbb
xor
mov
repnz
inc
call
xchg
push
les
adc
leave
iret
push
cmp
mov
cmpsb
pushf
mov
mov
nop
jmp
cmp
iret
ja
cvtdq2ps
loopne
mov
rcrl
cltd
dec
cmpsb
dec
ds
push
cltd
mov
not
jae
mov
and
je
aam
xor
cmp
ret
jne
inc
int
dec
loopne
xchg
test
int
ret
add
into
inc
push
bsr
shl
mov
pusha
pusha
stc
add
jmp
pop
and
push
insb
add
xchg
clc
shlb
pop
hlt
push
int
mov
push
or
inc
icebp
test
sub
fimull
inc
or
outsl
repnz
or
inc
ret
jge
lret
cld
rclb
add
lahf
rcrl
loopne
nop
adc
push
cld
stos
js
cwtl
sub
outsb
inc
cli
test
ja
in
call
fs
jne
btr
bt
bsr
ror
mov
bswap
shl
sub
jmp
push
lea
call
call
popf
xchg
aas
and
xlat
xchg
jecxz
stos
pop
lahf
push
mov
lret
icebp
stos
mov
pop
add
xor
fildll
push
cmpsb
es
push
xchg
push
aaa
sub
pop
xor
adc
adc
pop
insl
xor
fs
outsb
jb
sbb
xor
inc
mov
jae
cmp
or
adc
shlb
jmp
mov
push
adc
leave
jge
cmp
lds
jg
decl
push
sub
pop
pop
lea
jae
push
lea
jne
pusha
stos
mov
mov
lea
jmp
imul
xchg
push
int
stc
loope
or
xchg
mov
jns
pop
add
ja
mov
push
and
gs
jno
mov
cmp
jne
jg
hlt
xchg
sub
xchg
fcmovb
mov
fisubs
mov
or
cmpsl
pushf
jbe
mov
in
test
add
or
jp
loop
and
push
mov
mov
leave
xlat
call
call
aad
jmp
dec
sbb
outsl
adc
push
or
lea
add
mov
stos
lods
mov
mov
inc
rclb
pop
xor
cmpsl
insl
cmc
mull
push
fnstsw
mov
xor
cld
rcrb
dec
add
ret
test
lret
mov
lahf
or
mov
sub
xchg
adc
shl
cmp
sbb
jae
ret
xchg
pop
fisubrl
mov
adc
das
add
push
cwtl
push
je
loopne
or
outsl
leave
cli
jno
test
addr16
xchg
add
pop
xchg
inc
xor
es
sub
xor
hlt
mov
jl
mov
ficoms
call
rolb
mov
and
add
jb
lahf
inc
jle
xor
cmc
lock
inc
or
icebp
lahf
popa
dec
out
mov
lahf
lea
scas
dec
lahf
test
mov
sti
icebp
test
pusha
jmp
out
out
fcomps
dec
xchg
je
sarb
adc
mov
pop
in
fwait
pop
into
cwtl
cmpsl
int
xor
test
inc
push
cmp
push
outsb
adc
xchg
lcall
or
movsb
pop
xchg
or
mov
in
fdivs
pop
fs
cmp
repnz
mov
addl
sub
push
xlat
icebp
popa
sbb
test
mov
xchg
cmp
outsl
jle
mov
insl
movsb
jno
and
xor
rcrb
mov
mov
and
test
aad
repz
movsl
xor
shr
or
inc
sub
and
enter
sbb
imul
xchg
jb
lea
mov
pop
cmp
addb
repz
mov
xchg
loope
btc
mov
pop
lret
mov
bound
xor
js
mov
sub
lcall
mov
addr16
rcr
fimuls
loop
jo
cmc
call
and
mov
roll
in
push
out
leave
push
fcoml
in
or
test
mov
cmp
fdivp
xor
sbb
xchg
pop
mov
cmp
pusha
dec
fcompl
into
inc
icebp
mov
xor
loopne
jbe
add
mov
fdivs
insl
in
mov
cmp
pop
sbb
lret
scas
cmp
cmpsb
sbb
mov
sbb
jmp
inc
das
das
out
scas
stos
divb
cmp
stos
mov
mov
iret
jmp
push
and
jl
mov
in
les
dec
repz
xor
or
loope
cmc
push
sub
mov
add
xlat
test
mov
dec
lods
bound
jb
test
call
ljmp
pop
outsl
outsl
jae
lods
push
xchg
pop
sarb
imul
jp
mov
xor
xchg
pop
stos
xchg
roll
call
or
dec
mov
mov
mov
cmpsb
mov
es
test
and
sbb
sbb
adc
nop
inc
adc
push
mov
add
dec
adc
xchg
fiadds
mov
lods
push
sub
ret
pushf
dec
je
push
dec
sub
lea
js
and
cmp
je
aam
inc
icebp
cmp
cltd
lcall
mov
pusha
lea
jae
stc
push
jmp
pushl
adc
pusha
mov
pushf
pushl
ret
pushf
lea
je
call
inc
dec
inc
sbb
xchg
xchg
sbb
rcrb
add
jmp
xchg
test
add
dec
cmp
sub
cmc
xor
int3
jbe
xlat
fwait
push
les
xor
add
pushf
push
xor
stos
jp
mov
inc
or
inc
push
data16
mov
test
sbb
ficomps
es
jns
push
or
dec
jne
add
out
xor
cmp
dec
mov
push
inc
dec
jmp
push
insb
pop
sbb
lds
mov
lods
cmp
jno
shlb
push
mov
fisubl
cmc
xchg
lcall
movsb
repnz
or
sub
scas
sahf
add
adc
or
scas
cmp
pop
add
adc
adc
cmp
fcom
push
push
push
mov
cmpsl
aad
std
xor
jae
out
pcmpgtw
lcall
hlt
xchg
or
cltd
loop
inc
lcall
sti
sbb
bnd
jp
ficoml
into
dec
push
ljmp
xchg
inc
or
insb
cwtl
mov
stc
mov
jno
ret
lock
inc
repnz
lea
je
out
push
sub
dec
xor
cmpsb
popf
cmp
loop
nop
jle
aas
sub
shlb
std
jge
mov
push
jno
test
sahf
mov
out
mov
jmp
jmp
jecxz
inc
aad
adc
push
add
repnz
dec
test
sbb
popf
or
inc
int
sub
dec
inc
xchg
push
add
mov
lock
sbb
adc
xorl
cmp
pop
add
int3
mov
jmp
pop
or
daa
shrd
vsubsd
fwait
push
mov
inc
mov
add
and
adc
jbe
out
inc
xor
cwtl
and
aas
pop
popa
push
loopne
insb
ds
adc
aaa
test
jg
cmpsl
jno
mov
mov
clc
lret
cmp
fcompl
dec
xchg
addr16
mov
mov
sbb
aas
in
push
xor
cmp
dec
push
xor
ja
fisubs
lahf
ljmp
pop
jge
cmp
mov
scas
insb
es
xchg
popf
and
negl
xchg
hlt
sub
or
int3
addr16
je
aaa
cmp
xchg
push
in
rclb
or
or
jo
adc
pop
sbb
and
add
cwtl
dec
enter
mov
mov
dec
lret
xor
outsl
pushl
xchg
inc
enter
add
and
sub
mov
xor
inc
push
jl
popf
pop
jo
push
jb
sub
xor
mov
push
in
jnp
push
or
insl
mov
stos
mov
cltd
pop
push
sbb
addb
cmp
xchg
and
dec
adcl
and
test
push
imulb
sbb
ret
fcmove
cmpsb
pop
rcll
mov
mov
jg
scas
jno
xchg
jle
pop
fidivs
in
data16
nop
pop
dec
xchg
loop
dec
les
mov
hlt
pop
and
bound
ret
jne
adc
pop
sbbb
xchg
jns
in
call
cmp
mov
out
ds
inc
into
push
ljmp
call
scas
mov
sbb
add
mov
mov
xor
jb
sub
ss
addb
ficomps
aaa
ret
push
les
xor
jbe
xlat
pop
mov
xchg
mov
jbe
mov
cmc
pop
call
sbb
shlb
daa
xchg
xor
iret
iret
jns
repz
add
jg
mov
adc
mov
push
pop
mov
sub
xchg
sub
rcrb
and
mov
dec
xchg
dec
rclb
mov
xchg
dec
adc
out
xchg
inc
les
testb
inc
repnz
inc
fs
stos
adc
jo
and
int3
mov
cs
shll
imul
dec
arpl
jne
aam
scas
push
mov
and
in
sti
aad
in
cmc
lods
addr16
iret
popa
rcrl
std
ja
and
inc
aam
lods
dec
mov
adc
mov
bound
mov
mov
lock
call
out
pop
push
xchg
cmp
inc
xor
dec
or
add
and
adc
xlat
xchg
mov
clc
inc
jns
cmp
sarl
ret
pop
jmp
or
popf
ret
mov
xor
push
sbb
jo
mov
fmuls
adc
pop
in
dec
call
sbb
add
pushf
lea
jmp
bound
push
or
cmp
test
lret
and
xchg
cli
mov
loop
and
out
ret
into
imul
fidivl
or
aam
ja
les
add
into
ds
xor
mov
and
push
out
iret
fnstenv
leave
loope
inc
inc
xlat
inc
and
xchg
cmpsl
mov
mov
add
arpl
cmp
jecxz
mov
dec
aad
pop
mov
sub
jb
and
rcr
and
mov
clc
cmp
bt
clc
test
push
jmp
sbb
jmp
dec
xchg
xchg
jns
std
push
stc
jmp
inc
das
out
xchg
push
cwtl
jp
repz
out
lcall
mov
xor
rcll
xchg
lret
les
mov
rorb
les
arpl
xchg
imul
lret
pop
ret
mov
mov
push
or
xchg
gs
adcl
ret
add
pop
fnstcw
pushf
jmp
cwtl
pop
outsb
adc
xchg
push
sbbb
sbb
loop
ljmp
loop
xor
insb
cli
out
xchg
xor
and
inc
sub
data16
xchg
fs
mov
int
insl
cld
fldcw
mov
inc
sbb
fbld
lock
mov
int
xor
pusha
dec
push
mov
fs
mov
insb
and
sahf
andb
mov
xorl
addr16
mov
push
cs
fidivs
test
lea
je
stc
stc
call
cmc
xchg
add
btc
adc
lea
shld
sub
xor
bsf
sbb
btr
shr
dec
mov
shl
add
cmp
dec
movzbw
bts
add
neg
btc
bsf
mov
cmp
cmc
cmc
shr
pushf
cmp
mov
pushf
lea
je
cmc
cmp
jo
je
bt
pusha
cmp
movw
lea
je
pushf
lea
jmp
push
lea
jne
not
lahf
movsbw
mov
mov
pushf
pusha
pushl
mov
lea
jmp
popa
add
adc
cmpsl
pop
mov
xor
das
out
jne
cmp
inc
inc
mov
and
xor
inc
repnz
in
lds
aaa
aaa
or
sbbb
mov
jg
dec
xchg
or
bnd
fs
in
mov
xchg
cld
xchg
out
adc
loop
or
inc
cs
mov
inc
mov
xchg
push
int3
add
and
and
fildl
sbb
cmp
jo
xor
push
mov
cwtl
fnstenv
sti
cltd
jne
in
pop
test
mov
jne
mov
push
adc
jmp
and
insl
dec
fnstenv
cmp
inc
xchg
push
jno
mov
pop
arpl
ljmp
xchg
mov
out
cmp
sti
mov
xor
jge
dec
mul
aam
xor
lods
dec
ret
shl
xchg
div
sbb
mov
mov
aam
sar
insl
popa
mov
and
fidivs
sbb
push
and
mov
repz
cwtl
sbb
mov
je
movnti
sub
mov
cmc
insl
in
gs
std
xchg
pop
fisttpll
mov
sub
dec
enter
adc
and
mov
add
icebp
jnp
or
iret
jmp
push
sub
cmp
dec
sbb
nop
mov
mov
mov
mov
clc
mov
sahf
push
sub
testl
ret
jne
iret
mov
popa
adc
jecxz
xor
pop
ret
xchg
or
mov
lcall
in
iret
icebp
sbb
in
jne
cwtl
cmp
cwtl
jnp
fxtract
push
mov
daa
fnsetpm(287
xor
xchg
lcall
sbb
aas
repz
cmp
jae
sub
xchg
scas
push
xchg
sub
mov
daa
adc
pop
fcom
and
shr
mov
scas
in
jbe
loop
in
inc
ficompl
hlt
hlt
test
mov
inc
add
adc
push
inc
xchg
dec
push
push
pop
inc
sahf
cmp
push
mov
inc
adc
ja
cmp
out
dec
dec
xchg
push
in
pop
sti
enter
mov
repz
inc
cld
into
jns
adc
xor
clc
and
cmp
clc
loopne
and
lahf
or
add
enter
inc
ljmp
mov
int3
dec
adc
cmc
neg
jmp
lea
jne
shrd
test
setl
mov
stc
cmc
jmp
mov
arpl
dec
xchg
pmulhw
cltd
add
fnstenv
mov
test
xor
dec
sbb
adc
sub
stos
fcoml
add
dec
std
aaa
cmp
fnstsw
dec
pop
xor
mov
jo
test
fdivs
fsubl
push
sbb
jae
cmpsl
cmpsb
cwtl
jo
inc
sub
lret
dec
das
cmp
sub
call
dec
test
jg
jecxz
aam
pop
add
into
outsb
push
lret
enter
and
nop
jb
sub
cwtl
and
pusha
xchg
gs
push
dec
xchg
insb
repnz
cmp
push
mov
mov
push
shlb
rcrb
jb
cld
dec
or
push
fcoms
adc
jp
fwait
clc
cmpsb
sbb
mov
cmp
push
xchg
xlat
enter
stos
mov
insb
push
sbb
stos
sub
les
cmc
sbb
rol
sbb
rcrb
mov
testb
lods
lock
outsb
out
div
in
push
test
xchg
gs
popa
and
mov
or
in
cmovl
dec
fs
pop
dec
xor
adc
sub
lret
nop
aaa
dec
inc
repz
cmpsb
xchg
push
mov
jle
hlt
push
jg
cwtl
mov
jns
mov
aaa
sbb
je
mov
push
mov
push
stos
cli
in
les
lret
aas
or
mov
fimull
sub
out
arpl
xchg
daa
dec
cmp
push
xchg
sar
je
out
divb
jp
inc
js
mov
mov
dec
test
inc
call
sahf
pop
or
adc
inc
movsl
push
in
es
dec
divl
sahf
jb
jo
into
pusha
test
and
sub
test
frstor
cltd
cmp
test
out
or
mov
sahf
testl
rcr
mov
addr16
mov
bound
mov
movsl
xor
mov
enter
stc
cmc
mov
std
cltd
or
test
gs
int
lcall
mov
fldcw
or
out
rcrl
pop
imul
fisubrs
das
aam
xor
test
mov
loopne
das
push
push
or
outsb
cmp
enter
xchg
sahf
fs
mov
push
jno
shll
push
xchg
aas
sbb
lods
insl
and
xor
adc
xor
xor
pop
and
mov
push
push
jecxz
out
sub
pop
jmp
inc
add
leave
xchg
push
rolb
sub
mov
add
mov
sbb
mov
and
mov
push
fisubl
pop
sbb
cmp
pop
loopne
les
push
popf
and
jno
int
cli
push
sub
mov
cld
out
push
orb
movsl
fldt
xor
cmp
movsb
pop
movsbw
mov
call
insl
jae
push
dec
xchg
mov
scas
jbe
into
cs
adc
jl
insb
dec
dec
jno
sarb
mov
xchg
pusha
xor
rol
bound
inc
inc
icebp
jecxz
aaa
jno
pop
data16
loopne
add
mov
mov
mov
xor
push
cmp
push
and
jo
inc
cmp
sub
sub
sbb
sahf
icebp
cmpsb
lret
mov
cmpsb
addl
push
js
mov
cli
mov
sbb
jo
push
fistpl
mov
fldl
xchg
xchg
cmp
xchg
cmp
mov
pop
xchg
andl
fnstsw
fadd
cwtl
pop
xor
inc
iret
jg
jecxz
sti
repz
aas
xor
lock
mov
loop
into
shlb
dec
jp
dec
dec
mov
dec
lock
lods
xchg
test
jb
ror
aas
cmp
cmc
aas
jg
sub
dec
dec
arpl
movsb
sbb
mov
xchg
and
sahf
and
pop
rcrb
rol
leave
xchg
jb
jl
mov
sub
sbbb
sub
mov
xchg
subl
mov
je
outsl
fs
gs
popa
outsb
fs
gs
add
sahf
or
inc
stos
imul
ja
xlat
arpl
cmp
mov
push
dec
inc
ficomps
movsl
fs
push
jne
outsl
add
or
jmp
enter
xchg
adc
inc
lret
clc
mov
or
mov
xchg
push
push
and
data16
sub
test
roll
sub
and
js
ret
ja
xchg
test
sbb
outsb
in
shlb
add
ds
jnp
or
loopne
js
mov
pop
mov
sbb
int3
shll
mov
out
jmp
inc
and
mov
add
movsb
lock
jmp
push
push
cmp
test
enter
push
fdivrl
adc
sbb
cli
idiv
xlat
sub
inc
out
cvtps2pi
repnz
push
xchg
fs
ljmp
cmpl
int
imul
shrb
mov
clc
aam
mov
cmc
repz
xor
lret
les
ljmp
xor
sub
sbb
or
test
testl
dec
xor
sbb
stc
insl
xchg
arpl
push
loopne
loopne
xchg
daa
or
cltd
and
pop
pusha
xlat
mov
push
xorb
jge
add
les
lret
jnp
popa
jp
int3
pusha
push
sbb
mov
push
or
subb
out
nop
dec
mov
and
stos
cmp
mov
xchg
arpl
jo
mov
mov
jl
mov
dec
xchg
movsl
adc
test
mov
shll
in
jns
test
mov
mov
and
pop
cmp
out
pop
jns
in
pusha
xlat
fwait
dec
mov
pop
test
ljmp
pop
cmc
adc
xchg
test
pushf
cltd
inc
cltd
pop
pop
mov
push
sbb
xchg
mov
sub
mov
sbb
and
mov
data16
cwtl
data16
xchg
lahf
rolb
cli
xchg
bound
mov
jb
sahf
dec
mov
cmp
test
clc
adc
adc
dec
xchg
ret
inc
sarl
popf
cmp
lds
gs
mov
lods
xor
leave
subl
xchg
dec
inc
and
orl
lods
mov
xor
in
sub
mov
sbb
movsl
add
jnp
stos
xor
lea
jbe
dec
shl
bswap
mov
not
or
sub
setae
add
or
mov
clc
rcr
pushf
add
and
not
movl
seta
bsr
shr
sar
mov
jmp
fs
call
xor
push
ljmp
mov
cwtl
fisttpl
loop
cmp
in
mov
mov
and
xchg
push
cld
pop
mov
in
jge
loope
lock
mov
mov
cmp
std
bound
cmp
push
sar
les
cli
ffreep
fistpll
imul
pop
std
pop
bound
or
mov
or
mov
sub
push
loopne
push
mov
rorb
mov
or
and
cmp
xchg
sti
jg
lret
xchg
pop
iret
loopne
inc
shlb
xor
insb
shlb
ljmp
jp
xchg
mov
ds
fimuls
cmp
cmpsb
or
dec
ds
mov
aad
dec
adc
fsubl
rolb
mov
pusha
pushl
push
pushf
lea
je
pushf
mov
movsbl
movsbw
mov
pusha
bswap
not
lea
movb
lea
jne
push
movl
jmp
movb
pusha
pushl
ret
sahf
outsl
pop
pop
dec
xchg
jle
cwtl
sbb
movsb
sub
sub
push
push
leave
fcomip
popf
cmpsl
lret
dec
jne
cmp
jae
pop
fildll
and
js
aaa
insb
xchg
jl
sub
fwait
repz
imul
popa
rorl
lahf
jl
lret
in
inc
cmp
cmpsb
sbb
clc
imul
xchg
imul
cmp
pop
inc
mov
mov
pop
subl
aas
mov
ds
movsb
fcompp
in
xor
subb
mov
xchg
ror
jbe
inc
sub
xor
movsl
movsb
movsb
pop
jns
jb
aas
int
sub
sbb
xor
add
loope
mov
pop
push
jbe
pop
adc
sub
and
nop
out
scas
repnz
xchg
lret
jo
jp
inc
loop
cli
int3
push
in
or
hlt
push
fcmovbe
push
dec
jg
addr16
dec
xchg
or
push
adc
xor
test
aad
pop
push
in
jg
jle
mov
aad
xchg
xor
cwtl
pop
pop
and
mov
aad
mov
fsubp
mov
lock
mov
cltd
sub
sbb
fiadds
stos
jmp
or
xchg
aas
sbb
addb
lcall
push
dec
xchg
sti
insl
adc
pop
sub
imul
dec
or
mov
inc
jae
ss
mov
loopne
xor
je
insb
dec
pushf
add
into
test
cmp
or
sbb
call
adc
adc
mov
fidivl
gs
mov
cld
out
lea
mov
movsbw
not
bswap
movzwl
jmp
jne
xchg
add
dec
sbb
fimuls
mov
push
ljmp
out
cld
fldt
cmp
paddusw
sbb
in
pop
pop
adc
xor
mov
mov
icebp
popl
pop
mov
fcompl
and
or
pop
inc
add
sbb
fcoms
cld
adc
jae
xor
test
adc
mov
adc
or
xlat
shrl
pushf
movl
call
sbb
add
dec
xchg
aas
repz
sub
cmp
sti
stos
jno
cmp
jae
in
testl
shll
jge
xor
pop
fnstcw
jl
jns
clc
sti
push
sub
or
inc
lcall
dec
mov
or
adc
fwait
sub
xchg
sub
jecxz
cmp
and
push
sahf
jp
pop
mov
mov
sarb
rorb
dec
pop
frstor
xor
ljmp
xchg
xor
push
mov
add
fldl
push
sbb
push
mov
xor
jmp
iret
mov
sub
add
jp
pop
and
bnd
outsl
add
insb
cs
int
pop
dec
jp
insb
mov
cld
jp
push
sub
pop
movsl
and
rcr
xchg
fists
pop
pop
stc
outsl
aad
imul
scas
vpunpckhwd
push
fldcw
add
xchg
jnp
imul
repz
jmp
sbb
adc
mov
leave
pop
out
aas
xchg
call
stos
mov
ret
xor
jg
pop
rcrl
iret
mov
adc
loopne
sub
js
fwait
push
daa
inc
outsb
mov
es
pop
rcll
test
or
sub
clc
cwtl
out
xchg
xor
test
push
iret
lods
outsb
in
out
lea
int3
mov
sub
dec
adc
mov
add
adc
test
mull
sbb
inc
nop
cmp
xchg
push
icebp
jno
jge
cmc
xchg
and
inc
sbb
rclb
test
mov
fldt
mov
inc
icebp
cmp
xchg
pop
push
or
xchg
jmp
jl
jle
out
lods
cmp
dec
out
cmp
pop
inc
aad
in
js
scas
movsb
sub
loope
fists
loop
sbb
data16
push
mov
or
sbb
inc
dec
add
stos
add
add
cmpl
inc
xchg
or
sbb
outsl
or
adc
or
add
repz
push
xchg
push
jp
cmp
push
and
xchg
and
cmp
and
jl
pop
repnz
out
mov
insl
pop
aas
orb
dec
jge
push
ljmp
mov
mov
int3
pusha
sub
and
inc
out
into
idiv
jae
jnp
lods
pop
or
cmp
sub
cmpsl
popa
jg
dec
lcall
push
xor
jge
push
sahf
mov
xchg
sub
and
or
cmp
pop
and
xchg
dec
sub
push
scas
push
inc
cwtl
movsb
push
addr16
outsb
jno
push
and
pop
bound
imul
outsb
jae
popa
fs
imul
jae
arpl
push
fs
arpl
pusha
insb
push
insl
push
imul
pusha
jno
pop
and
decl
add
mov
sbb
push
fdivrs
test
cmpb
cmp
xor
lret
mov
fisubs
fldt
sub
mov
mov
pop
dec
fisubs
imul
mov
pop
rcl
jmp
stos
cmp
jae
jno
mov
jge
dec
filds
cmp
adc
stos
nop
xchg
fnclex
faddp
and
lods
movsb
popa
push
pop
push
push
add
ds
jne
push
daa
cmp
and
or
push
in
insl
lret
mov
les
data16
xor
adc
pushf
mov
pushf
pushf
pushl
ret
pushl
pushf
push
inc
pusha
pushf
pushl
lea
jmp
mov
bt
neg
stc
cmp
cmc
mov
clc
stc
add
bt
push
test
call
jmp
add
jmp
pop
mov
not
not
not
bswap
lea
push
mov
pushf
mov
pushl
popl
not
movzbw
lahf
push
cwtl
push
lea
lea
push
pusha
pushf
movl
pushf
pushl
popl
pushl
pushf
movb
pushl
ret
std
lahf
sub
dec
xchg
dec
es
lret
mov
out
cmpsb
adc
jbe
pop
lods
imul
pop
mov
pop
xor
cmc
outsb
and
ror
aam
sub
xor
shl
and
icebp
lret
mov
add
push
push
jne
jge
adc
xorb
sbb
inc
jecxz
in
push
clc
sbbl
pop
popa
repnz
inc
pop
sbb
xor
call
test
mov
mov
fcmovu
addr16
fildl
sti
fiaddl
rorb
jno
bound
jno
pop
fs
jae
js
outsl
outsb
push
bound
bound
imul
outsb
jae
popa
fs
imul
jae
arpl
push
fs
arpl
pusha
insb
push
insl
push
imul
pusha
jno
pop
and
decl
test
mov
jmp
fs
jmp
inc
mov
stc
clc
call
xchg
cmp
inc
hlt
mov
pushf
insb
add
bound
aas
rcrb
jb
icebp
xor
loop
lret
call
int
push
fsubl
sub
jb
cmc
dec
sbb
jp
loope
lea
push
popf
das
rcr
mov
push
test
loopne
je
das
sbb
sahf
jl
outsl
iret
das
test
and
xlat
shll
mov
jmp
add
push
pushf
pusha
lea
je
push
movsbl
mov
pushl
lea
call
inc
adc
and
push
sbb
dec
and
js
andb
insb
and
arpl
cmp
icebp
mov
jb
movsb
ret
pop
into
jo
jecxz
pushf
int3
dec
jmp
popa
imul
pop
in
lcall
int3
into
roll
fdivl
inc
pusha
test
pop
addl
shrl
add
pop
dec
push
and
and
aad
ds
repnz
jp
mov
ss
iret
fstl
scas
mov
out
cmp
mov
mov
xor
insb
negb
repnz
sub
inc
add
int
pop
decb
js
mov
shlb
jle
out
xor
cltd
sub
pop
push
repz
loope
push
xchg
sub
pop
insl
pusha
lret
mov
push
fwait
jne
fisubrs
lea
fwait
mov
jno
xlat
cmpl
pop
pop
mov
adc
jne
pop
stos
adc
xor
add
push
jbe
sbb
ja
push
out
ds
jb
cmpsb
push
inc
fadds
pop
cmp
dec
push
or
imul
std
dec
xchg
test
sub
jno
dec
pop
lds
int
jne
icebp
stos
xchg
sub
movsb
cmp
int3
movb
sbb
adc
ja
jge
dec
xor
cmp
push
cwtl
es
mov
lcall
adc
pop
cmpsl
mov
cmp
and
mov
adc
pusha
ljmp
pop
xor
popa
ja
mov
lcall
xchg
imul
fidivl
adc
or
pop
or
push
jecxz
dec
add
push
jmp
cmp
fwait
lcall
aas
ljmp
xchg
test
lea
outsl
add
jmp
push
pushf
lea
jae
clc
xor
push
jmp
xor
xchg
jmp
adc
xor
test
pusha
into
mov
pop
or
xlat
xor
dec
mov
clc
mov
sarb
mov
test
mov
sahf
push
jg
and
repnz
mov
fwait
sub
push
or
imul
testb
adc
das
in
es
inc
xchg
ja
lea
mov
test
sti
inc
or
in
jl
loop
xchg
pusha
sub
xchg
or
or
pop
nop
dec
jae
inc
cmc
movsb
adc
xchg
inc
lret
loop
push
cld
push
fisubs
pop
ficoml
leave
add
loop
xor
rcll
or
fimull
in
add
push
sub
ljmp
mov
and
loopne
xor
mov
mov
jmp
gs
cmpb
scas
push
into
mov
cmpsb
cmp
push
clc
adc
xchg
pop
mov
pop
aas
shll
mov
rolb
jns
dec
movsb
mov
push
dec
ficomps
jo
cmp
shlb
out
pop
ss
mov
cli
or
addb
in
in
lods
orb
push
inc
cli
fwait
push
outsl
shr
dec
cmp
fwait
push
shl
or
sbb
push
rcrb
sbb
nop
pop
lds
movl
int
and
xor
adc
sub
sub
fxam
cmp
out
or
cmp
push
mov
push
lods
push
inc
mov
repz
lds
fmull
arpl
icebp
iret
pop
ljmp
xchg
ds
mov
add
sbb
ret
inc
and
into
lea
jmp
adc
xchg
xor
dec
mov
das
xchg
push
fists
sbbb
cs
ja
and
and
dec
out
rol
test
push
outsl
icebp
pop
push
dec
aaa
or
push
mov
or
adc
jnp
cmp
mov
push
fisubrl
push
inc
pcmpeqd
dec
ret
push
ljmp
cli
mov
enter
xor
test
test
rolb
inc
sti
dec
xchg
das
in
movsl
sbb
stc
test
fnstsw
stc
arpl
push
fsubrs
fs
in
jae
fdivrl
aaa
cmp
sbb
or
sahf
cmpsl
lea
sbb
cmp
lds
push
and
test
inc
dec
mov
xor
loop
movsl
cmpsb
push
out
sbb
jbe
not
jb
bound
jo
lods
jbe
outsb
xor
std
int3
stos
repz
pushf
lea
je
not
pusha
pusha
mov
jmp
sub
stc
dec
xchg
xor
xor
test
mov
shrl
add
jg
addr16
cmc
insl
js
and
ljmp
push
adc
test
loope
in
mov
lret
or
pop
fs
push
xor
imul
data16
mov
lods
xchg
mov
sub
clc
into
pop
rcrb
mov
les
mov
js
cmp
insb
pop
inc
mov
aam
push
imulb
or
mov
push
add
xor
cmc
stc
dec
xchg
fwait
xor
xor
test
popf
test
lds
scas
pop
faddl
add
adc
shrl
pop
das
dec
loopne
pop
mov
iret
and
fists
jle
out
lret
adc
arpl
dec
mov
and
pop
cmpsb
xchg
or
ret
aam
jge
xor
jnp
jg
add
sub
dec
sbb
pop
inc
test
jp
push
sub
fcoms
sbb
lret
dec
loope
push
jae
out
iret
push
aad
push
mov
fstl
enter
jp
cmpsb
push
sub
pop
clc
dec
xchg
jns
cmpsl
push
pop
jnp
scas
aas
cmpsl
push
jecxz
inc
cmp
jecxz
loope
mov
fsubs
inc
out
xchg
mov
or
sub
push
lea
mov
aam
mov
faddl
lods
mov
mov
mov
adc
arpl
xchg
enter
add
jb
sbb
adc
push
shrb
jb
scas
sub
dec
sub
sub
outsb
imul
lock
dec
xchg
out
in
dec
adc
jo
mov
mov
bound
and
rcrl
jl
jo
xor
ret
pop
lret
inc
xchg
sbb
imul
inc
adc
cmp
inc
cs
adc
jp
lahf
aam
lods
dec
insb
push
xchg
sti
int
in
bound
ret
bswap
xchg
mov
mov
xchg
and
rorb
subl
and
and
sub
pop
xor
fucomip
adcb
add
xchg
adcb
mov
xchg
pop
out
inc
or
bound
mov
je
popf
push
xlat
xor
call
cli
or
shll
mov
adc
lcall
call
cmp
test
xor
xor
jecxz
mov
xchg
pushf
mov
mov
pusha
sbb
adc
xchg
fbstp
inc
xor
out
testb
push
in
dec
fs
fcompl
pop
adc
ficoms
sub
mov
xchg
cmp
cmc
inc
xchg
scas
lock
out
enter
mov
jmp
arpl
testb
pop
sub
inc
in
imul
push
filds
iret
push
pushl
lahf
or
mov
jno
sub
ds
xlat
sub
mov
psraw
je
std
imul
sub
iret
inc
pop
repz
ljmp
sub
jl
sub
mov
shll
mov
xor
jecxz
and
add
xor
add
out
inc
and
in
negl
mov
movl
lea
jmp
call
movb
pushl
popl
pushf
pushf
pushf
mov
pushl
ret
sbb
xchg
push
or
adc
cmp
xchg
mov
icebp
into
inc
fidivrl
sub
jno
mov
iret
inc
stc
push
xchg
fsubr
mov
hlt
mov
icebp
mov
add
mov
lds
xor
cmp
pop
icebp
shrl
push
adc
mov
sbb
fcoms
imul
shrl
bound
inc
mov
in
and
and
movl
pusha
movl
pushl
mov
pushf
lea
jmp
sbb
inc
std
insl
adc
mov
mov
mov
or
mov
push
and
push
inc
imul
fwait
js
test
mov
popf
push
es
cs
sahf
mov
pop
in
std
in
addl
push
adc
sbb
and
in
or
adc
lds
fidivrl
or
insb
jns
testb
xchg
cwtl
mov
pop
push
pop
jae
push
dec
hlt
mov
jmp
jns
mov
lahf
push
mov
out
movsl
jae
pop
daa
or
inc
xor
xchg
push
shlb
mov
cmc
pusha
inc
sbb
dec
xchg
pop
adc
js
xor
imul
xchg
gs
jno
xchg
or
xchg
sub
fwait
sbb
or
in
mov
mov
out
jbe
pop
sub
test
addr16
xchg
cltd
dec
add
add
cmp
repnz
jle
fisubl
gs
test
push
xorl
lret
das
pop
mov
xor
push
loopne
lcall
jmp
cmp
push
or
fdivs
pop
loop
or
xor
je
fwait
adc
ljmp
outsb
xchg
sbb
add
lret
leave
leave
add
fnstcw
adc
and
rcrb
ljmp
mov
movsb
cmp
push
jg
dec
xchg
adc
fistps
jg
pop
cmp
and
xchg
fsts
ja
inc
or
mov
cmp
jbe
adc
mov
sub
insb
test
pop
popa
mov
ja
cmp
imul
push
xchg
pop
out
dec
push
mov
outsl
add
cmp
loop
leave
sub
adc
and
lods
insb
inc
loopne
adc
dec
fidivl
inc
clc
sahf
mov
in
push
sbb
int
repz
xchg
jbe
in
push
test
and
sbb
insb
pop
fcoms
xor
test
cli
stc
pop
imul
and
mov
fnstenv
nop
call
jae
cltd
repz
jb
in
mov
add
inc
fstpl
xchg
or
inc
inc
into
mov
lods
push
loop
repnz
add
rcr
lahf
jbe
hlt
and
ja
xchg
jne
es
jmp
cmpsb
xchg
jp
ja
cmc
fwait
pop
and
cmp
inc
xor
repnz
mov
shrl
xor
repz
push
stc
jmp
xchg
movsl
repnz
xchg
jmp
std
rcrl
inc
and
sbb
addr16
jmp
xor
xor
pop
nop
sbb
test
pop
sbb
jmp
mov
lret
cmpsb
and
or
fsubrs
jno
push
pop
les
inc
in
mov
xchg
insl
mull
fndisi(8087
pop
stos
cs
rclb
xor
xor
fs
insb
add
hlt
shl
dec
xchg
lahf
dec
std
loope
popf
or
clc
mov
mov
pop
lahf
mov
pop
sub
cltd
or
add
jge
roll
jno
roll
fbstp
subl
mov
fmul
push
test
loop
aas
fsubrl
xor
pop
ret
xlat
call
and
orl
shll
sbb
or
xor
loop
inc
fistl
cmp
push
ljmp
xlat
cmc
daa
lcall
stos
mov
sbb
mov
fdivl
mov
cmp
pushf
jmp
fxch
icebp
dec
xchg
xchg
sub
push
sarb
add
cmp
cwtl
push
movsb
js
out
lods
mov
pop
outsl
pop
mov
mov
clc
mov
sbb
call
or
mov
into
sub
in
push
subl
mov
jmp
push
popf
sbb
mov
jno
xchg
mov
cmp
in
or
and
fsubs
jmp
adc
jne
mov
iret
orl
call
cld
lock
pop
lock
xchg
js
mov
ljmp
push
xchg
lret
outsl
push
lahf
jns
ret
and
inc
repnz
sub
jb
ret
and
adc
or
cmp
pusha
xchg
jo
jmp
imul
pop
ja
adc
out
dec
jbe
push
or
into
fiadds
push
mov
pop
sarl
adcl
sarl
jmp
adc
pop
push
div
dec
xchg
fildll
popf
sub
mov
jmp
popf
addr16
pop
or
adc
dec
pop
xchg
cld
sahf
xorl
push
js
xor
test
sbb
cmp
outsb
arpl
das
jnp
add
and
fldcw
call
and
mov
loopne
and
and
pop
call
sbb
cs
roll
push
and
out
mov
test
test
add
push
movl
call
jmp
test
ss
xchg
or
dec
jecxz
fmul
xchg
xor
inc
lahf
mov
hlt
add
daa
call
iret
add
imul
fstps
mov
adc
jecxz
cmp
stos
mov
adc
jle
jg
daa
in
mov
fwait
push
out
cmpsb
jle
mov
or
mov
cmp
cmpsb
bound
xlat
inc
scas
pusha
movl
pushf
pusha
pushf
movb
lea
jmp
call
inc
xor
mov
pop
arpl
jecxz
bt
jmp
loop
outsl
in
xchg
inc
push
push
sti
rcrl
je
push
cwtl
dec
xor
test
lret
cmc
pop
sbb
push
mov
mov
pop
decb
push
sub
mov
int
inc
add
popf
icebp
push
scas
mov
repz
jb
test
sub
call
inc
xor
mov
mov
loopne
cwtl
mov
aam
out
inc
lods
xchg
inc
sbb
xchg
dec
out
jmp
add
lea
jne
pushf
mov
mov
pushf
movb
lea
jmp
movzbw
jmp
stc
adc
stos
sub
ret
notb
cwtl
xchg
xor
nop
xor
adc
adcl
stc
pop
inc
loope
and
outsl
in
inc
mov
out
push
icebp
xchg
fsincos
js
jg
fldt
push
out
sti
pop
in
mov
xchg
cmpsl
xchg
test
neg
adc
loop
pop
andb
lea
add
mov
fisttpll
roll
mov
fwait
subl
jmp
test
cmc
add
add
bt
pusha
add
jmp
mov
xchg
sub
pop
pop
lahf
imul
addr16
das
scas
lahf
cmp
insl
adc
jp
stos
fsubrl
inc
mov
jg
xorl
push
pop
icebp
rcrl
fimuls
or
sbb
and
mov
lahf
sbb
dec
jae
jne
out
dec
cmp
fdivl
and
inc
sahf
pop
mov
sti
push
std
jg
nop
sub
dec
fidivrl
mov
mov
in
movsb
jae
jg
stc
cmp
dec
xchg
push
shrl
cmpsl
sub
xlat
jnp
add
insl
push
mov
jno
jae
mov
leave
xor
sbb
out
jge
iret
cmp
enter
mov
std
inc
jo
cmp
lods
jb
dec
and
adc
and
cmpsb
jecxz
int
scas
mov
jb
nop
mov
imul
nop
dec
inc
aaa
pop
ljmp
dec
mov
adc
jne
and
psraw
shll
sti
popf
testl
sbb
cmpl
add
dec
xchg
sarl
mov
mov
imul
cmc
lahf
jns
jnp
inc
xor
inc
movb
outsl
ret
fldl
insb
mov
outsl
jmp
nop
mov
jnp
pop
xor
movsb
pop
jnp
fs
xor
lods
lods
mov
mov
xchg
mov
jecxz
pop
dec
sub
jo
add
je
mov
or
and
mov
or
sbb
js
cwtl
sbb
jmp
call
jno
pop
jmp
xchg
out
push
mov
cli
mov
xchg
ds
insb
cmpsl
sbb
mov
sbb
mov
les
aas
xor
fdivrp
and
adc
repz
scas
lret
mov
sbb
jne
pop
mov
scas
fildl
cld
cltd
add
push
cmp
push
loope
mov
cwtl
loopne
xchg
adc
les
dec
mov
test
add
sbb
into
sti
jmp
xchg
ja
fstps
shll
cmpsb
xchg
mov
or
adc
push
imul
jle
cld
mov
or
ret
inc
jecxz
sbb
pop
jne
jle
xor
mov
faddl
fwait
popf
mov
cli
call
dec
xchg
into
pop
mov
mov
jmp
pop
jg
xor
nop
xor
mov
cmp
dec
cld
cwtl
clc
pushf
jb
jbe
adc
dec
dec
std
ja
mov
jbe
dec
xor
push
lods
aas
js
inc
bound
xor
stos
jle
xor
into
nop
cmpsb
add
les
es
pop
outsl
xchg
repz
adc
cmpsl
pop
sbb
xchg
scas
push
dec
or
pusha
xchg
sbb
jne
fldt
add
xchg
push
adc
popf
outsl
in
cmp
sahf
stos
jnp
cmpsl
push
jbe
fucomi
ljmp
test
jo
pushf
les
cwtl
sub
jnp
xor
mov
loopne
inc
sub
jbe
jns
into
add
arpl
cltd
inc
mov
xor
ret
jecxz
int
nop
es
sahf
mov
pusha
scas
cmp
inc
adc
jg
pop
hlt
mov
ljmp
push
mov
test
add
int3
sub
inc
xlat
fsubl
cmp
push
mov
cmp
sub
inc
sub
nopl
xor
fwait
adc
clc
mov
popa
popa
dec
shll
or
idivl
daa
adc
mov
mov
sub
dec
xchg
dec
add
sti
push
sub
dec
jo
sbb
je
mov
call
fsubr
loop
pop
push
mov
dec
and
inc
add
xor
adc
add
add
daa
dec
xchg
fsubrs
insb
xchg
and
shrl
testb
xchg
es
mov
aam
inc
sub
int
aaa
dec
push
inc
and
lea
jecxz
mull
leave
push
loope
or
sar
arpl
pusha
cs
ss
mov
dec
xchg
or
les
mov
and
mov
sbb
lret
sub
pop
cmpsl
movntq
mov
sbb
jae
dec
mov
sbb
mov
xchg
pop
adc
dec
sti
iret
pop
ficomps
loope
jne
jp
push
rorb
xor
hlt
stos
mov
aam
lcall
cs
enter
outsb
adc
pop
outsb
or
test
andb
mov
push
push
and
lods
mov
xchg
jl
dec
stc
fcmovnu
out
lock
lock
loopne
rol
xor
jo
pop
cld
aad
sbb
out
sbbb
icebp
out
xchg
add
lcall
push
test
adc
icebp
sbb
fidivrl
scas
aaa
xor
mov
cmpsb
dec
sub
pusha
sbb
jl
cmp
or
xchg
shlb
pop
sub
xchg
nop
aaa
sbb
stc
fcomps
cmpsl
xor
cmc
mov
daa
adc
sti
xchg
xchg
pop
int3
mov
sbb
roll
push
pushl
call
lea
je
push
push
mov
lea
jmp
pushl
lea
jne
shr
sub
cwtl
mov
rcr
neg
add
add
inc
rcr
ror
pusha
mov
push
cmp
cmc
test
push
mov
call
aam
jmp
dec
xchg
movsl
cmp
dec
jg
mov
adc
jno
pop
or
lds
addb
jbe
xchg
pop
mov
pop
adc
mov
ja
rorl
lods
loopne
pop
cmc
imul
xlat
or
xchg
mov
pop
or
mov
fbld
sbb
cmp
push
das
pushl
scas
inc
mul
jbe
xchg
hlt
into
je
jns
sub
sub
pushf
push
movb
push
movl
pushf
pushl
popl
pusha
mov
movb
pushf
pushl
ret
mov
xchg
push
loopne
cmp
inc
and
jo
mov
out
lods
jno
cmp
shl
adc
insl
inc
mov
add
es
sub
mov
mov
sti
cmc
inc
adc
shll
dec
mov
mov
cli
jg
jmp
repnz
scas
paddq
jno
pusha
movntq
jne
adc
dec
mov
popf
arpl
mov
aas
rcll
add
bound
shlb
pusha
push
and
movsb
imul
xor
dec
xchg
xor
or
inc
push
pop
mov
insb
imul
push
sahf
es
push
out
mov
mov
xlat
icebp
stos
cmp
das
and
sub
pop
push
mov
mov
insb
sub
push
leave
fisubrs
hlt
add
shlb
dec
mov
and
or
outsl
cmc
cmpsl
ret
jne
and
insb
jecxz
sub
hlt
aam
mov
in
sbb
rcrl
insl
jl
dec
or
and
rol
sub
dec
jmp
and
outsl
mov
sahf
int3
push
push
div
sbb
scas
out
or
mov
js
push
aad
sbb
jp
mov
mov
pusha
repz
adc
cmpsl
testl
les
stos
and
je
rolb
std
cmp
or
fs
int3
in
xchg
or
hlt
dec
adc
inc
hlt
nop
push
in
inc
mul
add
mov
mov
pusha
call
sbb
rcr
xchg
sub
scas
jle
xchg
mov
cmp
in
andl
add
pop
test
pop
jg
or
cmpl
movsb
sbb
orb
lods
jp
out
inc
push
inc
adc
sbb
or
jmp
sbb
loope
aad
sbb
fildll
mov
lea
jno
ja
test
add
pusha
movb
or
pushl
lea
je
push
bt
cmp
jmp
repnz
cld
in
xchg
fiaddl
nop
sbb
mov
cwtl
inc
insb
lods
lret
xchg
or
or
sub
div
sbb
push
xor
stos
sub
jge
xchg
xlat
imul
cmp
lods
pop
andb
cmp
xor
out
cmp
push
shrb
sti
loope
out
jns
cs
pop
or
push
daa
xchg
clc
xchg
mov
mov
test
cwtl
cs
fs
or
test
ljmp
push
xchg
js
jp
stos
ss
idivb
push
ret
jle
adcb
jecxz
jge
dec
les
jns
cmpsb
outsb
add
mov
fldt
dec
repnz
sbb
mov
xchg
inc
add
pop
mov
mov
insl
out
inc
das
lahf
loop
xchg
lods
ret
push
push
sti
mov
jno
jg
inc
enter
xor
mov
stos
ss
into
xchg
xor
mov
in
data16
addb
push
shrb
cmp
sub
dec
xchg
testl
sub
aad
push
lahf
test
jbe
ret
aaa
outsl
sbb
pop
das
gs
lods
rorb
mov
testl
mov
idivl
sbb
ss
ljmp
sbb
fistl
dec
push
push
idivb
or
rcll
shrl
mov
mov
jecxz
not
cmp
loop
add
movsbw
push
lea
pushf
push
movb
mov
movl
call
mov
push
jecxz
xchg
jp
mov
fdivrl
sarb
jbe
xchg
fwait
stos
cmp
jg
mov
mov
fucom
sti
pop
dec
aad
lea
test
jo
add
mov
inc
push
add
shlb
or
lods
pop
sub
lea
loope
adc
js
clc
and
jg
decb
push
out
xor
ds
cmpsl
and
repnz
lahf
xchg
aad
push
cmp
loopne
mov
xchg
rorb
mov
lret
movsl
mov
xor
lea
call
pusha
call
pop
pushf
call
mov
loope
xchg
pop
int3
in
rorb
cmp
js
aam
imul
add
and
mov
test
test
mov
imul
stos
jno
pop
adc
fistpll
lret
push
jb
in
mov
cwtl
dec
add
push
les
cmp
xor
dec
aas
pop
and
inc
shrb
or
flds
stc
ret
sbb
pop
ds
jbe
and
mov
adc
sub
xchg
js
test
dec
call
cmp
jl
int
inc
mov
sbb
cli
call
clc
cmc
ror
push
bt
pusha
add
bt
pushw
popfw
push
inc
movw
pushf
mov
adc
pushf
pushl
ret
cmp
jb
dec
xchg
fs
jp
mov
push
movb
xor
jp,pn
shrb
sti
mov
filds
and
fists
icebp
mov
cli
test
jae
lock
ret
mov
mov
mov
pop
cmp
dec
mov
sarb
or
stos
jno
fisttps
inc
lret
sub
xor
pop
lods
lods
mov
mov
sbbl
and
loop
mov
std
pop
jmp
sub
push
lds
in
cltd
orb
pop
test
in
fsub
dec
xchg
jns
test
mov
jmp
inc
fsts
sub
pop
leave
pushf
in
insb
mov
mov
cmp
aaa
sub
mov
popa
idivl
shlb
mov
cmc
iret
sbb
mov
aaa
cli
out
pop
pop
ljmp
adc
mov
inc
insb
aam
or
push
neg
inc
pop
xchg
pop
in
sbb
push
add
inc
jecxz
leave
pop
mov
mov
dec
xchg
inc
mov
sub
mov
repz
mov
inc
arpl
fcoms
loopne
cmp
push
xor
lock
cld
jg
leave
je
jne
popf
shl
fs
sbbl
mov
jp
add
or
cmc
in
push
cmp
mov
sbb
cmp
sti
dec
xchg
call
push
and
pop
cltd
or
or
cltd
pop
and
inc
mov
mov
cld
hlt
push
inc
ficoms
and
mov
iret
lret
push
sbbl
mov
ret
je
or
das
adc
add
xchg
call
fs
jb
pushf
test
jmp
dec
push
mov
dec
xchg
and
push
pop
mov
xchg
xchg
mov
test
add
loope
dec
mov
sahf
sarb
jmp
lock
jbe
in
jp
cwtl
inc
cs
and
shrl
xchg
add
jno
mov
jno
repz
pop
and
outsb
push
mov
push
sbb
sbb
int
xchg
push
ret
out
dec
icebp
sti
mov
adcl
imul
jmp
ret
enter
shlb
ffree
pandn
arpl
popa
aad
cmp
or
rolb
mov
movsb
adc
pop
or
in
mov
cmpl
stos
mov
dec
iret
push
roll
adc
into
fimuls
es
fidivs
rcrb
mov
scas
and
shrb
test
out
out
ljmp
mov
dec
xchg
mov
and
insl
push
dec
pop
popf
dec
js
pop
push
rcll
cli
push
aad
pop
push
mov
pop
cmp
aad
mov
cmpsb
in
mov
mov
enter
hlt
push
insb
mov
daa
subb
sub
js
mov
stos
int3
dec
mov
xchg
adc
lods
or
push
xor
imul
cwtl
push
subl
addb
fs
shll
jl
add
cmp
fldenv
cld
cmpsb
cmpb
sarl
adc
dec
sub
inc
sbb
lea
push
push
cmp
xor
addr16
mov
mov
sub
mov
enter
ds
jne
aaa
add
push
in
je
xor
mov
shll
in
mov
std
jmp
add
mov
and
adc
sbb
rol
dec
xor
mov
jne
add
in
pop
sub
stos
dec
mov
adc
and
js
dec
out
xchg
fdiv
jne
cmp
dec
xchg
cmp
fwait
arpl
dec
jmp
pop
mov
stc
addr16
lds
sbb
dec
inc
lods
pand
jg
inc
repnz
ljmp
xchg
scas
ror
and
add
mov
mov
fst
mov
call
pushf
scas
add
les
push
or
fdivrs
push
mov
push
push
in
xchg
sbb
inc
fmulp
insb
and
sti
fmull
fildl
mov
int
and
mov
sbb
push
cmp
cmp
test
in
push
xor
push
xorb
in
adc
cmp
sbb
fnstenv
add
cmp
shlb
add
rdtsc
nop
push
movl
pushf
push
call
mov
pusha
call
jbe
jno
dec
xchg
add
ffree
push
dec
repnz
int3
movsb
xor
cmc
jns
scas
pop
cmp
jp
loop
dec
repnz
add
imul
out
cmp
inc
or
jp
andl
fidivrl
inc
movsb
push
and
aam
jb
or
into
cmpsb
out
add
xchg
icebp
jo
mov
cmpl
mov
sub
insl
cmp
orl
or
pusha
pushl
movsl
ljmp
and
je
jmp
cli
add
fisttpl
adc
out
imul
dec
aaa
lahf
cmp
adc
stos
sbb
mov
loopne
stos
cmp
sub
mov
xchg
lock
or
outsl
adc
cmpsb
cltd
pop
push
lret
jbe
add
mov
cmp
fcmovb
xor
xor
push
lcall
pop
adc
xchg
popa
jle
sub
js
push
cmp
add
pushf
lea
je
jmp
jnp
inc
fisttpl
jmp
xchg
outsl
fisttps
xchg
arpl
sub
pop
fnstcw
into
pop
pop
std
or
repz
ret
dec
fwait
aam
rclb
sahf
inc
pop
sbb
dec
cmpsl
test
pavgb
stos
leave
sub
sbb
add
fdivrs
jge
mov
jns
mov
jo,pt
push
mov
cmp
mov
mov
lcall
js
and
fs
xchg
jmp
push
push
cmp
in
loope
jge
mov
aad
or
push
adcb
test
imul
cltd
xchg
mov
hlt
dec
push
fsubrl
fisttpl
insl
fimull
mov
xchg
repz
cli
pop
and
lret
mov
dec
lahf
cmp
ret
jle
add
ljmp
mov
rcll
inc
jne
xor
and
mov
ja
sarl
pop
sar
loopne
sbb
stos
cmp
int
movsl
outsl
add
sub
cmpl
or
lret
test
ret
movl
pusha
pushf
lea
jmp
test
fimull
push
ljmp
adc
rcl
addl
mov
xchg
push
mov
and
cmc
xchg
push
subb
mov
js
add
in
sbb
pop
pop
mov
mulb
mov
arpl
incl
repz
add
dec
jb
mov
mov
cmp
dec
adc
mov
dec
xchg
rcrl
jecxz
out
das
lods
push
xor
push
jmp
push
fmuls
cmc
imul
xchg
lahf
sub
add
ja
add
cmp
adc
int3
scas
jns
popf
fwait
iret
jge
push
xorl
or
dec
sub
jecxz
inc
enter
push
sbb
inc
sub
adc
stc
lcall
fbld
aas
pop
add
and
mov
pop
sub
jae
out
mov
jne
lahf
dec
inc
add
adc
ret
inc
lahf
xchg
int3
popf
push
pushf
lea
jp
push
pusha
pushl
movb
pushf
movl
mov
lea
jmp
call
xchg
and
cmc
imul
cmp
out
lret
adc
fdivr
xor
roll
add
mov
repnz
cs
xor
mov
and
cmp
sbb
mov
add
fcomps
and
mov
in
lahf
dec
mov
shll
subb
sbb
fsubs
incl
movl
jmp
stos
mov
movsl
cmp
ror
sub
xchg
orl
jg
cmp
or
es
mov
push
sbb
dec
adc
push
movsb
cmp
ja
pop
mov
or
es
xor
ja
xor
enter
repz
les
jns
dec
xchg
fcomps
jb
sub
cmp
fistpl
sbb
adcl
mov
popf
vpsllw
sbb
lods
sub
out
popf
sahf
je
fwait
gs
sub
ja
pusha
test
stc
clc
add
pusha
pushf
push
clc
or
jmp
jg
pushf
pushf
mov
push
xchg
bswap
pusha
movl
bswap
bswap
not
setge
lea
jmp
mov
call
movsl
cmp
dec
xchg
pushf
push
into
push
inc
jp
push
cli
into
ds
mov
hlt
jecxz
lds
stc
sbb
xor
sbb
frstor
arpl
insl
jb
cs
data16
out
and
xor
pop
inc
push
cmp
mov
loope
add
filds
dec
shrb
fwait
cld
aam
pop
and
jo
in
sub
jo
sbbb
lret
mov
lods
lret
inc
jecxz
xor
xchg
or
add
mov
stos
and
add
frstor
repz
add
aad
pop
xor
rorb
mov
je
dec
in
push
cmp
cltd
push
xrelease
ss
add
inc
enter
xchg
adc
jg
je
dec
cmp
ljmp
and
adc
lock
and
inc
movsb
and
inc
mov
loope
test
add
push
push
mov
movb
lea
jmp
jmp
pusha
pusha
movb
movl
push
jmp
lret
fsubr
aad
xchg
jmp
icebp
rorl
dec
jmp
leave
aas
test
out
xor
test
jnp
movsl
mov
jp
pop
popa
inc
ds
sbb
mov
je
insl
or
in
hlt
stos
adc
and
lret
cltd
dec
ficoms
inc
fdivs
jae
addr16
xchg
ljmp
cmpsb
pop
pop
sub
add
je
or
lcall
inc
dec
dec
nop
jle
and
cli
dec
out
in
enter
jo
les
xor
addr16
add
pop
or
jnp
dec
aam
xchg
daa
add
mov
icebp
test
ljmp
dec
adc
lea
inc
fidivrs
fwait
push
pop
add
add
mov
or
pop
aam
mov
aaa
fisttpll
and
push
sub
mov
and
xor
sahf
aad
pop
or
lds
jae
cmpsb
pop
jb
mov
sbb
movsl
out
leave
imul
cmc
pop
or
subl
cmp
aam
xchg
sub
and
xor
xchg
fwait
jb
push
or
push
fisubrs
imul
aad
imul
pusha
sysenter
adc
pop
mov
xchg
xor
mov
fisubl
adc
jae
loope
push
int3
rcrl
inc
and
lock
mov
leave
jecxz
xchg
jge
and
loope
adc
mov
std
jmp
andb
pusha
sbb
aam
or
rorl
in
mov
out
cmpsl
add
ja
push
aad
sbb
dec
and
cltd
add
out
inc
pop
mov
jle,pt
pop
popa
push
mov
push
push
cmp
push
add
cltd
das
inc
inc
cmp
adc
xchg
out
inc
add
lea
mov
inc
and
cmp
in
jp
movsb
fwait
out
or
ljmp
jecxz
imul
sbb
jg
mov
sub
fst
jge
sbb
mov
int3
mov
cmpsl
jne
fbld
cmp
insb
mov
movsl
repz
mov
repnz
xchg
fisttpl
jae
jl
and
and
sbb
mov
push
and
cmp
dec
scas
fwait
loopne
jmp
insb
movsb
dec
mov
rorl
test
scas
lds
into
cltd
xor
mov
test
sbbl
movsl
jmp
ret
cmp
bt
call
int3
mov
rorl
inc
lret
inc
jmp
jg
stos
push
fistl
lret
imul
mov
jns
or
repnz
inc
xchg
iret
jge
mov
out
dec
push
adc
addl
xchg
jmp
ret
mov
and
in
and
mov
xchg
jno
adc
test
jno
jae
and
pop
out
xchg
or
sub
mov
test
pop
xchg
cwtl
push
repnz
das
cwtl
rorl
clc
outsb
push
jp
imulb
jbe
ljmp
cmc
andl
in
mov
fdivr
jns
rcrl
testl
add
dec
and
iret
in
lock
inc
mov
cmp
es
mov
pop
push
je
lods
repz
and
or
addb
jp
test
push
pop
and
xor
dec
jg
mov
push
adc
sub
sbb
fnsave
push
and
in
imul
and
out
loope
cmpsb
sub
push
and
in
rorl
mov
xchg
pusha
in
cmp
je
jl
and
inc
bswap
xchg
rcrl
jecxz
pop
lods
push
nop
aaa
pop
and
jnp
aad
jle
adc
insl
test
sbb
es
jae
mov
test
enter
in
cmp
xchg
xchg
cmpsl
enter
jl
pop
roll
lret
cs
pop
loope
bts
and
add
xchg
inc
sbb
addr16
in
dec
enter
aas
xor
push
fucom
arpl
andl
out
sti
hlt
pop
adc
sub
cmc
mov
dec
and
je
ret
jne
fcmovbe
and
call
scas
sbb
dec
xchg
mov
mov
frstor
push
rcrl
fsts
pop
iret
xchg
jg
pop
mov
fildll
out
mov
push
mov
in
cmovbe
int3
outsl
in
jp
stos
xorl
repnz
jle
sub
xchg
mov
and
adcb
sub
cs
ljmp
hlt
rcrb
dec
sbb
xchg
sbb
push
fcomps
xchg
test
add
ja
out
test
hlt
int3
test
mov
jge
mov
adc
scas
xlat
test
popl
call
lea
je
cmc
jmp
jge
cmp
dec
xchg
pushf
and
sarb
mov
xor
es
xor
aad
inc
fmull
repz
incb
leave
cmpsl
lret
mov
inc
mov
insl
sbb
out
mov
stc
sbb
xchg
sub
cmc
push
mov
jo
ljmp
inc
xor
mov
daa
lds
jmp
sti
leave
dec
fsts
nop
dec
add
out
popf
cpuid
nop
push
mov
movb
movb
movl
pushf
push
push
movb
movl
pushf
pushl
pusha
lea
jmp
jmp
movb
call
pushf
dec
jmp
dec
push
js
dec
xchg
pop
hlt
pop
lock
ds
movsb
dec
mov
insl
dec
mov
or
es
jns
push
or
fiadds
jp
loop
cmp
jle
push
jbe
out
or
lret
test
loop
xchg
jb
cmp
fisttpl
pop
mov
sbb
mov
sbb
sbb
jmp
lcall
and
mov
stos
sub
mov
cld
out
push
ljmp
mov
inc
lret
fsubr
into
dec
xchg
orl
push
mov
add
jne
mov
add
fimull
adc
out
call
mov
frstor
js
mov
mov
dec
inc
adc
xorb
push
mov
inc
mov
jmp
push
shll
sbb
sub
shlb
jbe
mov
test
sahf
inc
or
pop
cld
sbb
in
pop
xchg
or
cmp
xor
pop
outsl
sahf
and
fs
jae
not
mov
dec
call
clc
push
or
pushf
push
jmp
mov
xchg
pop
lret
fisubrs
xchg
sub
mov
mov
and
mov
lea
insb
sub
insl
jmp
jl
push
scas
lret
sub
callw
clc
mov
add
cmpsl
jns
cwtl
pop
add
mov
xor
inc
mov
push
jne
inc
sub
cmpsl
stc
ja
out
iret
cltd
aas
stc
mov
into
dec
push
incl
into
add
das
iret
imul
ja
jae
cmpsl
iret
adc
andl
movsb
cld
push
shl
jbe
sub
or
fidivl
fwait
xlat
jl
mov
lret
je
sub
stc
arpl
sbb
mov
dec
and
sbb
cld
mov
arpl
jle
in
mov
pop
ret
jnp
jne
cmp
rorl
mov
rcll
xchg
pop
cmc
aaa
lret
test
clc
outsb
dec
lahf
cwtl
mov
ja
pop
bswap
push
push
lea
jnp
pop
push
pushf
movzbw
mov
pusha
call
mov
xchg
sub
mov
mov
lret
ret
xchg
dec
sbb
popf
xor
mov
and
rolb
and
cmc
xchg
shrb
adc
jge
adc
sub
in
test
incb
cmp
mov
sbb
lock
lcall
jp
sahf
push
pop
jae
enter
mov
lock
pop
int3
jp
mov
sahf
fs
sub
ret
and
xchg
cs
cmpsb
jb
jbe
mov
lret
cmp
mov
rcrb
lock
jle
xlat
or
jno
xor
fstps
nop
mov
xor
repz
xor
int
jl
or
pop
mov
fcomps
leave
ret
aaa
sub
nop
dec
sub
outsl
inc
inc
bound
cmpl
int3
scas
cmpsl
daa
shll
and
lods
pop
cli
jge
test
or
xchg
dec
out
push
ret
xorb
jl
jl
fs
pushf
mov
lea
je
push
sar
pushl
mov
movzbw
add
shl
pushf
ror
shld
mov
pushf
test
test
jmp
jmp
cmc
out
fcmove
dec
xchg
cld
sub
jp
stos
or
pop
push
xchg
bound
mov
out
leave
dec
jmp
ss
push
cltd
sarb
cmp
movsb
pop
jne
cmpsb
xchg
pusha
cmp
pop
inc
mov
adc
loop
sbb
clc
ljmp
lahf
mov
insb
push
rolb
arpl
inc
and
iret
cltd
inc
pop
loopne
cmp
cmpl
lret
data16
xchg
dec
clc
xchg
or
jo
xchg
in
fnstsw
in
ret
sbb
mov
leave
loop
and
and
aaa
pop
in
xchg
add
popa
aam
lea
push
cmp
rolb
xchg
int3
inc
daa
push
leave
mov
xor
or
adc
lds
cmp
cs
jp
pop
or
mov
loope
add
or
hlt
movb
adc
xchg
jp
add
push
mov
add
dec
xchg
mov
or
sub
test
outsb
pusha
cmp
pusha
mov
adc
das
push
cs
jbe
jbe
movsb
and
xor
add
xchg
cmp
mov
stos
jge
dec
jp
sub
subb
jb
popf
mov
cmp
sbb
divb
shlb
dec
lret
pop
clc
mov
shll
mov
dec
insl
outsb
iret
lret
jae
fcmovnbe
pop
adc
test
rcrb
jbe
orb
out
jo
cld
ljmp
adc
xchg
add
push
arpl
insb
gs
fdivr
je
add
enter
add
call
xchg
mov
loop
pop
repnz
xchg
sbb
lods
stc
mov
aam
jecxz
mov
in
mov
scas
push
jno
mov
push
cltd
daa
rcr
cmp
cmp
mov
push
add
cld
into
test
aas
shl
dec
inc
ret
cwtl
aas
arpl
or
push
sar
gs
nop
popa
xorl
test
ss
mov
jns
lahf
ja
or
stc
dec
rcrl
imul
xor
ja
ret
mov
shlb
cmpsl
pop
fisttps
test
enter
ret
xor
inc
stos
jnp
lahf
pop
sbb
jae
lock
xchg
or
add
dec
mov
sbb
or
lock
hlt
and
lahf
pop
aaa
cmp
push
pop
clc
pop
cmp
je
jmp
mov
fwait
insl
mov
sti
jnp
insb
ss
aas
push
rcrl
xor
and
add
xchg
data16
mov
lods
sti
jnp
mov
and
mov
rclb
nop
jb
mov
pusha
mov
arpl
lret
shrb
shll
rcrl
jb
test
push
xor
push
enter
aam
sub
mov
add
bound
mov
imul
xor
add
lods
jbe
xchg
mov
jecxz
add
and
and
jae
inc
and
or
rol
add
pop
fnstsw
lret
fldt
or
mov
pop
cmp
adc
js
inc
mov
xor
popf
int3
dec
dec
aad
insb
xchg
pusha
inc
rclb
rcl
sar
loopne
stc
jl
ret
loopne
mov
xor
pop
outsl
and
cmp
rol
out
popa
sbbb
xchg
jbe
sbb
sub
aas
sbbl
arpl
sti
mov
nop
aaa
dec
sub
out
mov
gs
out
and
pop
iret
lcall
movsb
lock
pop
jnp
inc
adc
adc
jmp
ficoms
sub
add
mov
cwtl
dec
mov
add
faddp
addr16
or
icebp
xor
lds
mov
push
lret
ret
jmp
inc
mov
call
sub
add
mov
into
aam
aad
sbb
icebp
test
sbbl
xor
or
das
xor
xchg
sbb
cmpl
push
xchg
ljmp
cmp
mov
add
inc
test
sub
in
lods
ret
cmp
lahf
std
jmp
das
pop
inc
sahf
dec
or
add
inc
das
mov
ja
arpl
test
mov
scas
js
andl
inc
repnz
push
pusha
rclb
ja
dec
stos
addr16
xchg
sbb
ja
outsl
idivl
inc
mov
xor
xor
ret
pop
jb
fcoms
adc
xadd
shlb
inc
loop
loope
inc
incl
xchg
push
push
clc
push
xchg
std
cmpsl
movsl
cltd
pusha
js
repnz
cmpsb
xchg
fisttpl
cmp
test
fsubl
out
out
adc
cltd
outsb
or
xlat
jle
int3
loope
and
lahf
jbe
test
sbb
test
pop
into
test
pop
inc
mov
push
adc
inc
and
loopne
cmc
icebp
push
lea
jmp
push
call
lea
lds
jne
daa
andl
adc
fstps
xchg
jno
or
dec
std
jnp
testb
orl
xchg
mov
hlt
jbe
inc
jp
pop
xor
stc
xchg
ds
push
push
outsl
rol
loopne
sub
or
loop
xchg
les
inc
adc
popf
test
adc
mov
leave
pop
int
adc
jmp
scas
adc
add
fcmovb
dec
xchg
cld
pop
inc
fimuls
xchg
xor
outsb
ss
mov
in
xchg
add
push
cmc
insb
cwtl
test
mov
mov
push
pop
or
xor
mov
jnp
push
aad
dec
adc
adc
pop
or
mov
add
push
push
xor
dec
icebp
lret
mov
add
imul
and
aad
dec
cmp
sahf
jb
jg
ror
mov
iret
out
cmpsl
jmp
mov
call
movsl
dec
insb
and
sub
int3
jl
in
jp
mov
add
je
mov
or
or
repz
pop
mov
dec
xchg
enter
js
mov
adc
ds
aad
or
test
push
into
int
icebp
inc
repnz
add
mov
or
or
inc
fwait
jge
xor
roll
jae
inc
std
pop
pop
clc
pop
pop
xchg
lods
inc
test
push
or
cltd
pop
push
pop
jb
xor
repz
cmc
xchg
daa
insl
push
sarl
jmp
xor
mov
outsb
mov
adc
lahf
add
dec
insb
gs
jae
jne
jb
outsb
je
insb
imul
add
fldl2t
jne
add
ds
xchg
dec
xchg
push
lret
mov
neg
data16
xlat
ljmp
pop
jno
mov
mov
or
mov
jmp
cmp
push
xchg
fldenv
xor
lret
xor
lret
jb
dec
add
loopne
outsl
out
cltd
cmp
cmc
pop
adc
mov
sbb
push
repz
cmc
rorb
ret
dec
xchg
rclb
ret
data16
inc
xor
and
jnp
daa
call
ss
ret
dec
out
jbe
mov
pop
ds
aaa
icebp
pop
mov
pop
dec
add
andb
test
sub
push
jbe
ljmp
adc
fcoml
lahf
aas
cwtl
hlt
mov
xor
inc
aas
pop
cs
call
add
pop
dec
movswl
inc
pop
call
mov
jg
stc
mov
jmp
or
fcmove
sub
jnp
add
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
xchg
jne
movsl
jge
imul
xlat
dec
cwtl
push
test
mov
cs
out
cmp
or
add
int3
jbe
xchg
aaa
push
movsb
cs
sbb
ret
ljmp
stc
inc
push
mov
fdivl
in
sub
mov
mov
jg
xchg
pop
mov
sub
repz
pop
cmpsl
mov
sbb
jge
add
lea
jae
cmc
push
cmp
mov
pushf
mov
lea
jae
push
pusha
bt
pusha
cmp
movb
push
call
and
xchg
cmp
inc
jmp
sti
pop
aaa
out
inc
pushl
movsl
sub
test
jecxz
sub
xor
fidivrs
mov
xor
xor
dec
inc
sub
sbb
cmp
xchg
xchg
lret
movsl
jmp
or
and
into
jge
sbb
xor
inc
repnz
xchg
cli
pushf
mov
lea
jne
jmp
push
pop
setnp
pop
movzbl
call
das
std
rorl
inc
mov
jecxz
pop
stos
daa
jmp
test
and
mov
jns
rorl
add
sub
ret
dec
xor
mov
cli
mov
mov
insb
push
pop
lods
incb
stos
lock
jae
sub
dec
xchg
mov
pop
xchg
sub
pop
ret
das
adc
and
cli
jo
xchg
cmp
movsl
cmp
fldl
stos
inc
repz
aad
sub
push
adc
rorb
jbe
lret
lret
mov
ljmp
dec
leave
xchg
inc
add
ljmp
jge
int
and
dec
imul
jmp
enter
sub
js
jns
mov
repnz
sub
outsl
mov
in
gs
adcb
cwtl
cwtl
inc
shlb
aaa
sbb
mov
cmp
shll
adc
xor
pusha
fisubrl
mov
rorb
dec
ss
sub
push
jae
dec
xchg
mov
lds
lds
aas
lcall
xchg
mov
repz
xchg
les
fimuls
in
pop
jl
adc
dec
sub
pop
inc
sub
out
lods
xor
mov
insl
insb
mov
jno,pn
add
push
push
sti
sbb
push
or
mov
adc
lods
outsl
jge
test
mov
add
xchg
adc
mov
pusha
jb
ret
orl
ret
xor
xchg
cli
mov
int3
dec
fisubl
mov
mov
xchg
cmp
xchg
add
pop
pop
popf
push
test
loope
or
mov
dec
icebp
aad
fisubs
hlt
adc
xor
cltd
and
sbb
jge
pop
xor
gs
xor
add
aas
stc
push
pop
clc
jns
inc
jge
mov
xchg
push
sub
cwtl
adc
xor
xor
mov
sahf
mulb
enter
mov
mov
lret
and
inc
sub
fs
jne
call
cmp
ljmp
mov
mov
orb
xchg
lcall
shl
lahf
push
mov
xor
insb
mov
hlt
cmpl
in
mov
lods
lods
inc
iret
jne
push
incb
mov
ljmp
mov
fiadds
ds
xchg
mov
rcll
sbb
pop
clc
aam
ljmp
sbb
pop
loop
inc
mov
xor
xchg
mov
dec
xchg
inc
sbb
sub
popa
stc
mov
leave
mov
xchg
jg
and
int3
test
xor
xchg
mulb
jb
mov
js
sbb
ja
or
push
mov
mov
dec
jnp
add
or
into
fidivl
inc
cld
fisubrs
pop
call
shlb
in
xor
mov
lea
call
pushf
pushf
adc
pusha
call
aaa
aad
dec
xchg
add
mov
jecxz
das
sarl
adc
mov
cmp
and
int3
jbe
xor
cmp
lea
hlt
out
pop
mov
sbb
repnz
divl
dec
test
inc
cld
in
xor
jnp
sub
jo
test
pop
inc
stc
mov
add
lods
test
push
add
ja
fwait
mov
cmpsl
push
pushf
pop
loope
sbb
mov
xchg
xchg
push
xchg
cmp
jp
in
cmp
bound
lret
xor
loope
fwait
out
aam
inc
das
mov
mov
ret
mov
addr16
out
les
push
das
add
gs
pop
jne
mull
roll
xorl
push
xchg
pop
and
xor
pusha
rcr
mov
clc
jmp
or
les
cmpsl
and
out
pop
jg
push
pushf
push
movsl
das
daa
aad
leave
mov
out
mov
pop
jmp
shll
dec
fnstcw
aaa
cmp
iret
xor
push
push
mov
pop
sbb
cvttps2pi
scas
cmp
scas
inc
pop
stos
ret
outsb
push
mov
adc
nop
mov
js
outsb
sbb
fisubs
icebp
fs
mov
sbb
mov
inc
pop
or
outsb
push
lret
mov
in
sbb
jo
jmp
or
ret
cs
or
shrd
shrd
lea
clc
mov
clc
cmp
cmp
pushf
add
stc
pushl
mov
clc
jmp
add
xchg
lds
fists
mov
pop
push
rcrb
idivb
xor
nop
jae
jg
xchg
jl
push
jb
fcoml
les
testb
xchg
pop
aad
push
cmp
cld
aas
pop
into
enter
pop
jne
adcb
in
add
push
outsl
test
push
or
inc
push
pusha
mov
sub
lock
pop
into
mov
leave
jae
in
or
cmp
imul
mov
pop
xor
mov
dec
lret
inc
xchg
inc
lods
push
fidivs
mov
mov
cs
dec
pushf
test
dec
xchg
xchg
push
xchg
fidivrl
lret
mov
lcall
in
aas
xor
movsb
divl
push
and
lds
and
addb
imul
xchg
call
xchg
cli
pushf
cmp
out
mov
sti
movsl
or
cmc
and
dec
rcrb
push
or
push
add
hlt
bound
call
outsl
cmc
scas
push
adc
rolb
fs
rclb
xchg
pusha
fmuls
pop
pop
es
aam
movb
fcoml
xchg
inc
iret
sti
inc
icebp
inc
sub
aam
cmpsl
jno
mov
daa
sbb
adc
insl
pop
xor
push
cmp
andl
push
inc
sbb
push
xor
push
sbbb
lock
xchg
pop
or
jnp
lahf
and
mov
push
loopew
dec
and
dec
mov
xchg
cld
lods
or
mov
in
ds
mov
in
lcall
sub
mov
clc
mov
dec
popa
imul
add
push
andb
es
xchg
cmpsb
mov
dec
or
push
cltd
cmp
or
pop
lea
jge
and
xor
lds
sbb
mov
ds
add
or
mov
mov
inc
jno
or
xchg
xor
xchg
sti
dec
psrlw
loopne
jmp
add
mov
icebp
test
loope
inc
mov
push
sahf
adcb
lea
jle
es
sub
std
xchg
pop
mov
hlt
or
mov
insb
sub
ljmp
jle
or
iret
mov
jnp
cmp
xchg
or
lahf
jo
push
sahf
xor
into
enter
or
ds
pushf
insb
out
enter
ja
adc
int3
gs
fists
mov
mov
mov
xchg
dec
jge
mov
addb
xchg
push
jb
fisubl
divb
xchg
into
and
jp
mov
jno
add
test
xchg
pop
rclb
sub
insb
adc
jns
movsl
jne
clc
jle
out
into
ja
lea
insb
jb
ljmp
xchg
ja
pop
push
int
dec
sub
in
iret
mov
fcomi
shll
and
div
pop
data16
mov
mov
movsb
into
cmpsb
pop
fisttps
scas
cmpsb
dec
mov
xor
aam
in
xlat
cwtl
int3
imul
iret
jns
loop
sbb
jecxz
cs
dec
mov
stos
mov
push
mov
and
and
inc
add
imul
hlt
mov
dec
mov
sbb
pop
sub
or
mov
enter
les
pop
and
xchg
mov
outsl
movl
int3
and
inc
push
mov
dec
and
mov
mov
cmp
mov
shrd
mov
bound
ret
push
call
lcall
jne
ljmp
pop
loop
push
enter
fs
roll
push
mov
cltd
mov
repnz
fisubrl
fimull
fisubrl
shlb
out
adc
sub
jae
fsubrs
js
mov
cmp
out
js
push
pushf
cmpsb
pop
lret
mov
sbbl
and
imul
adc
in
mov
testb
fiadds
dec
xor
mov
mov
xor
mov
data16
push
sub
std
and
pop
bound
pop
pop
fdivs
jo
inc
lret
mov
jno
int
push
sbb
in
lock
xchg
loop
aas
mov
xchg
xchg
insb
insb
cltd
mov
stos
mov
xchg
cltd
cmp
popa
std
mov
shrl
mov
add
mov
loopne
test
push
jl
xchg
sbb
dec
fsts
cmpsb
bound
addr16
inc
adc
in
mov
pop
imul
shrl
popf
or
xchg
add
mov
pop
add
pop
adc
sbb
jb
push
stc
gs
inc
mov
movsl
add
cmp
add
push
cmpsb
mov
mov
adc
inc
rolb
mov
xchg
jmp
sub
inc
flds
ds
mov
lret
adc
das
push
or
push
loopne
fs
ds
jmp
ja
adc
mov
pusha
bound
gs
adc
imul
outsl
stc
pop
mov
mov
aad
cmpsb
in
test
pop
and
cwtl
dec
hlt
inc
sbb
loopne
mov
aad
xlat
inc
cmpsb
xor
hlt
popf
mov
xchg
cmp
arpl
xchg
pop
out
jnp
mov
mov
dec
andl
inc
mov
mov
xchg
xor
out
inc
sbb
mov
sub
push
inc
fsubl
pop
pop
imul
pop
jne
mov
push
imul
into
fwait
ds
imul
cmp
xor
adcl
jle
xlat
mov
cmp
iret
fisttpll
mov
es
lock
xor
mov
push
jae
dec
xchg
arpl
andl
sub
adc
test
mov
faddl
sbb
repnz
jnp
lods
sbb
and
into
incb
add
or
repnz
sub
pop
adc
sub
and
dec
sti
pop
dec
int
add
repz
popf
gs
mull
mov
jl
or
ja
stc
neg
adc
mov
call
add
clc
mov
clc
xor
ror
mov
stc
movw
cmc
cmp
pushf
call
repz
aam
dec
xchg
add
cmc
jns
int
andb
stc
or
stc
fistpl
or
cmp
in
int
adc
mull
les
orl
outsl
arpl
testl
xchg
outsl
shll
das
or
inc
test
xor
jo
xchg
mov
xchg
lods
gs
jno
xchg
and
std
leave
mov
mov
aam
mov
cwtl
ret
pop
xor
sub
jp
adc
rolb
xchg
or
adc
cmpsb
cmc
fsts
mov
arpl
stos
outsb
sub
or
repnz
adc
pop
xor
mov
repz
jns
jp
ds
cmp
add
cmpsb
js
decl
mov
cwtl
pop
call
cli
enter
outsb
xchg
and
imull
cltd
jge
shl
mov
xchg
fists
rorl
push
lds
mov
push
movsb
xchg
sbb
add
ret
fs
xor
cmp
push
ret
pusha
cmp
dec
pop
loopne
es
push
insb
out
mov
xor
add
insb
cmp
pop
jg
fisttpl
mov
adc
jle
mov
push
jecxz
insb
inc
iret
ret
or
stc
and
sub
lods
in
mov
faddl
in
push
or
test
xor
mov
push
fisubl
and
pop
cmp
jle
outsl
pop
mov
xchg
jle
or
add
cmp
js
mov
rcrb
cmpsb
repnz
fisubl
adc
xor
fbstp
int
and
add
into
pop
cmpsb
push
aaa
insb
leave
and
xchg
fdecstp
jns
inc
movsl
mov
test
xchg
sub
nop
test
stos
xorl
into
scas
mov
repz
sbb
daa
lds
lret
test
call
xlat
mov
pusha
movb
movl
pusha
jmp
sub
mov
dec
adc
mov
mov
int3
cmpsb
int3
mov
iret
xchg
outsb
add
int3
popl
sbb
fs
mov
int3
inc
int3
xchg
dec
xchg
push
jp
fimuls
decb
mov
push
lods
xor
stos
push
imul
sub
in
in
mov
xor
cmpsb
add
int3
popa
test
xor
flds
call
fbld
fwait
push
mov
mov
into
xchg
pusha
loopne
mov
lret
jmp
cmp
xor
mov
outsl
in
cli
cli
outsl
jbe
sub
dec
mov
sub
repz
inc
sub
out
lods
jnp
xchg
sbb
push
mov
xchg
jmp
sbb
pop
and
gs
shlb
ss
cld
dec
movl
add
loope
jle
in
dec
out
lahf
outsl
cmp
fnstenv
sub
inc
fwait
xlat
cmp
fdivs
sbb
hlt
sub
pop
dec
repnz
mov
lods
ljmp
mov
loop
jo
call
idivb
movsb
inc
cld
roll
cmp
ret
pushl
inc
mov
xchg
adc
push
add
or
test
loop
or
addr16
cmp
push
ja
aam
jo
mov
mov
ret
adc
mov
xchg
push
shr
adc
in
cmp
jecxz
cmp
or
or
rcrb
pop
xlat
fwait
xchg
mov
in
outsl
push
mov
pop
or
call
mov
push
fs
dec
fistpll
or
jo
cwtl
pop
fadds
xchg
in
inc
adc
push
hlt
cld
cmp
imul
jecxz
repnz
sbbb
ljmp
sbb
aaa
cmp
nop
icebp
adc
cli
mov
xor
idivl
push
cli
test
and
mov
mov
inc
or
lods
xchg
pop
out
adc
xchg
arpl
jne
loope
xor
pop
xchg
xorb
mov
cmpsb
adc
in
jmp
xchg
mov
stos
xchg
or
fimull
push
test
dec
fwait
call
icebp
inc
std
add
push
popf
inc
inc
cmc
adc
sti
xor
cmpsb
icebp
mov
xor
out
or
fldcw
mov
test
mov
mov
or
ficoml
cmc
xor
pop
les
mov
js
xchg
repnz
stc
jp
jg
repz
xchg
dec
loopne
sub
jl
movsb
data16
leave
outsl
test
sbb
push
scas
dec
xchg
test
mov
shrl
test
adc
stos
cmp
mov
test
movsb
sub
icebp
mov
outsl
push
cltd
jg
sub
clc
scas
scas
imul
lea
add
mov
mov
rcll
std
mov
lcall
push
std
and
pop
and
pop
pop
inc
hlt
sahf
repz
pop
sti
call
sbbb
shrl
mov
movsl
jae
mov
or
jne
roll
add
fs
imul
add
loope
scas
dec
xchg
mov
repnz
inc
dec
mov
ljmp
test
dec
and
adc
xchg
test
xor
xchg
ja
add
nop
es
cmpsl
sub
stos
mov
mov
lods
adc
sub
jae
push
retw
daa
cmp
jl
dec
and
pusha
jecxz
leave
or
sub
or
or
mov
fmuls
adc
xor
repnz
hlt
mov
pusha
push
loopne
arpl
sbb
mov
lock
ja
scas
dec
xchg
jp
pushf
pusha
or
js
test
stos
mull
and
mov
out
pop
das
movsb
cmp
mul
sub
cld
jne
push
shl
arpl
mov
adc
sbb
lods
leave
mov
ret
test
ljmp
mov
popa
cmp
je
out
push
in
es
xchg
push
or
jmp
test
pop
std
xchg
imul
stc
test
rcrb
dec
xchg
push
scas
dec
sub
and
pushf
cmp
mov
mov
hlt
bound
adc
cld
out
test
test
es
fildl
add
in
rorb
ds
dec
imul
iret
sbb
int3
cld
inc
pop
pop
test
mov
dec
stc
imul
sbb
sarl
in
inc
inc
xor
ja
lods
dec
xchg
inc
shrb
stos
inc
ret
mov
jl
in
fs
idivl
aam
nop
imul
loope
out
or
sub
outsl
sbb
sahf
xchg
inc
lods
xchg
pop
or
sarb
mov
fwait
daa
or
jbe
lcall
adc
data16
cltd
das
cwtl
add
aad
or
je
pop
aaa
or
cltd
jns
inc
add
xor
cmpsl
mov
stos
shrl
fbld
mov
and
out
sbb
mov
pushf
mov
mov
out
lahf
or
loopne
cmpl
leave
jecxz
add
jbe
push
insl
sahf
mov
mov
mov
xchg
sbb
aas
cld
cmp
push
int
cltd
inc
sbb
enter
stc
or
push
movw
lea
je
pusha
pusha
movsbl
mov
mov
lea
movb
mov
bswap
call
stc
test
jmp
lahf
jno
lods
dec
xchg
sbb
push
test
jae
mov
adc
mov
pop
fwait
add
sbb
xchg
out
mov
fwait
outsl
adc
stos
inc
out
call
pop
in
ret
or
fs
add
mov
dec
aad
sub
or
bound
lods
out
lods
mov
jns
aad
lods
pushw
shr
icebp
jns
sahf
mov
out
je
js
add
loop
push
addb
xchg
xor
data16
jmp
sub
call
push
test
inc
out
jg
iret
sub
mov
ljmp
lods
xchg
adc
jb
mov
dec
lret
push
inc
pushf
mov
inc
in
jge
arpl
cltd
add
lcall
xchg
or
mov
dec
aam
mov
add
jne
push
push
xchg
pop
mov
mov
lahf
dec
adc
cmp
xor
std
aad
popa
mov
or
mov
fdivs
mov
movsb
xchg
xor
inc
sbb
lods
imul
scas
inc
fcomps
fsts
sub
cmp
in
xchg
xchg
outsb
scas
inc
out
or
xor
in
aam
cwtl
add
xchg
sbb
call
cmp
jnp
sub
jb
jle
xor
ljmp
divb
cmp
or
insb
cs
and
mov
in
mov
mov
stos
stos
dec
xchg
out
adc
and
or
dec
or
mov
je
push
pop
push
mov
das
push
inc
repz
lahf
sbb
push
inc
sahf
loope
aas
push
push
add
fcmovnb
aaa
dec
sub
dec
movsb
and
add
cmp
cmp
mov
dec
dec
lods
jns
cmp
dec
jl
enter
jge
sbb
scas
pusha
pop
cli
loopne
sub
lret
xchg
mov
jge
adc
add
jo
jo
sarb
jbe
ljmp
push
sub
fwait
movl
pushf
pusha
lea
jmp
aam
jmp
dec
xchg
jmp
loope
mov
jge
in
icebp
fstl
jae
mov
mov
orl
or
sub
xlat
inc
insb
imull
mov
mov
pop
pop
jne
jns
shll
fstps
cmpsb
jno
inc
cmc
cmc
lea
dec
or
pop
popf
and
into
insb
mov
inc
xor
movsl
sub
mov
sbb
out
outsl
out
cltd
adc
fwait
adc
imul
inc
gs
insl
ja
js
dec
xchg
pop
aam
lock
neg
xor
and
add
popf
push
push
movsl
sub
hlt
lea
mov
mov
adc
cmp
popa
es
xorb
mov
jo
mov
jl
lods
cltd
inc
movl
roll
test
in
pop
sbbl
fdiv
mov
outsl
cmp
dec
into
push
cmpsl
les
add
lret
xlat
xchg
dec
or
jne
in
add
xor
xchg
fs
cs
insb
add
test
fildl
add
ficoml
cmp
cmp
movw
call
cwtl
cwtl
movl
bswap
pushl
lea
lea
lea
jp
pushf
pushf
movl
pushf
pushf
call
jno
xchg
test
xchg
inc
stos
and
dec
pop
jg
out
xchg
sub
mov
lret
into
xchg
dec
mov
push
stc
inc
add
fdivrl
sbb
fiaddl
xchg
lea
sbb
dec
sti
xchg
jno
popf
xchg
inc
pop
mov
in
jmp
jae
pop
loopne
xor
lret
das
lea
xor
ret
jnp
aas
pop
iret
hlt
dec
add
mov
stc
or
jnp
sub
mov
call
mov
aam
int3
fistpll
lret
loopne
fisubrs
add
and
dec
sbb
add
aam
jp
adc
and
ror
or
pop
imul
fistps
test
dec
and
fstpl
and
cmp
es
fstps
aaa
push
jl
fs
fdivrs
gs
cmpsl
outsl
pusha
repz
cmp
test
adc
push
fs
lods
jb
ljmp
and
mov
lret
movsl
stos
insb
jge
cmpsl
dec
xchg
sub
scas
adc
jb
scas
dec
push
jbe
xchg
cmp
div
mov
mov
pusha
jge
inc
leave
arpl
inc
loop
mov
loopne
shrl
lahf
mov
add
test
inc
aad
stos
pushf
sub
lods
idivb
movb
cmp
push
xchg
add
enter
sbb
or
in
pop
adc
test
dec
xlat
dec
test
das
andl
nop
push
int
hlt
cs
cmp
xor
test
add
movsl
inc
notl
test
stos
sub
fcoml
cmp
adc
push
ja
dec
cwtl
int
ret
add
cltd
cmp
mov
stos
jp
cmpb
cmp
dec
mov
add
mov
dec
cmp
bound
ficoms
xor
jbe
dec
pusha
gs
cmpsl
incl
push
lcall
mov
ret
int3
lea
jp
pop
mov
push
ret
orb
mov
cmpb
cmp
or
mov
jg
ret
pop
js
push
mov
ficompl
cmpl
ljmp
mov
push
xor
iret
loop
mov
and
pop
adc
xorb
pusha
addb
fiaddl
and
addr16
and
xorb
jg
add
and
outsb
adc
data16
add
or
dec
cmp
arpl
jge
rolb
and
cmpb
lock
loope
aaa
mov
addb
cmp
mov
push
shlb
js
xchg
jae
jmp
in
pop
jecxz
addb
ror
cmc
add
add
mov
test
cli
or
sbb
int
sub
iret
cltd
xchg
dec
jnp
pop
jp
in
sbb
rcll
lock
out
addb
sbb
pusha
xorb
inc
loopne
add
inc
dec
adc
push
xchg
mov
out
lock
cmp
icebp
addr16
imul
pop
call
mov
lahf
pushf
subb
push
jle
cli
sub
cs
sahf
repnz
es
scas
mov
cli
pop
lea
push
jnp
xchg
test
pop
push
into
test
cmp
aad
clc
pop
push
xchg
orb
inc
fidivs
adcb
mov
xor
adc
pusha
lods
test
out
jg
lret
cmpb
aad
mov
jp
sti
es
adcb
rolb
in
push
sbbb
adc
out
std
ret
fnstcw
cld
inc
je
loope
sub
xor
ret
cmpsb
mov
fsubp
shrb
inc
mov
sti
fsubrs
out
jae
loope
sub
popa
cmpsb
mov
mov
mov
xor
sti
bound
adc
sbb
loop
loop
ror
pop
or
or
scas
inc
cld
mov
fsubrl
sbb
adc
xchg
xor
inc
popa
ss
in
bound
sbb
inc
mov
imul
cmp
pop
mov
pop
subb
and
mov
sbb
mov
pop
pop
subb
imul
fsubl
mov
cmp
pop
cld
icebp
bnd
popf
mov
mov
and
cmpb
xor
inc
xchg
cmpsl
out
cltd
cmpsl
sbb
test
enter
je
mov
sub
inc
jns
int
daa
addr16
sub
xchg
mov
outsl
ljmp
fmull
cmp
loop
ss
sub
or
jp
lods
call
fiadds
jle
lahf
subb
mov
add
pop
cld
mov
xchg
xchg
sub
outsb
jae
pop
inc
mov
cld
ret
jg
es
cmp
cli
add
and
sbb
mov
cmp
xchg
pop
orb
sub
ret
add
adc
jmp
and
inc
ljmp
xchg
repnz
ss
add
jl
add
repnz
cs
and
pop
cmp
dec
movsl
pusha
adcb
iret
std
pop
push
and
inc
popl
push
pop
stc
pop
cmc
subb
jae
add
xchg
adcb
call
je
popl
je
sbb
jns
addb
push
js
jne
xlat
mulb
cmpb
sbb
jbe
fnstenv
mov
jle
int
jo
add
and
lods
adcl
mov
ss
into
mov
pushf
cmp
stos
pop
and
dec
sbb
orb
outsb
lock
movq
inc
inc
arpl
leave
ljmp
loopne
syscall
xchg
jle
clc
int
mov
xchg
daa
rol
sbb
cmpl
ljmp
and
sbb
incl
call
adcb
ret
loop
ss
jg
pop
lcall
push
xchg
and
xchg
rol
jbe
sbb
adc
cmp
fistl
cmp
jne
repnz
int3
dec
adc
gs
aaa
mov
je,pt
sub
out
loopne
jecxz
adc
subb
and
out
push
scas
fldl
and
pop
xor
lods
inc
fs
jmp
pushw
push
sbbb
lea
loop
loop
or
dec
xchg
mov
and
sub
ror
mov
dec
push
rcll
and
fidivrl
mov
repz
jnp
pop
fsubrl
push
add
sub
cmpsb
hlt
aas
jnp
in
adc
test
shl
pushf
addl
cmpb
pop
sbb
pushf
movsl
in
cmpsl
fdivrs
xor
pop
jne
subl
inc
stc
push
xchg
push
jbe
test
jno
sbbl
xorb
outsl
mov
addr16
rcll
sub
ja
jg
mov
dec
push
test
rolb
andl
cmpb
pop
clc
addl
mov
gs
xchg
in
fptan
push
cwtl
scas
jno
out
ss
jbe
mov
incl
inc
pop
clc
pop
jg
pop
psubq
cmp
imul
rcr
arpl
xlat
or
imul
adcb
daa
cltd
subb
add
jns
cmp
cld
lds
out
iret
fisubrl
test
in
scas
jb
sbb
add
inc
inc
pop
inc
ljmp
push
stc
es
jns
aaa
xor
jg
dec
mov
outsl
ja
andb
sub
or
in
pop
mov
es
fistpl
dec
jnp
and
adc
xorb
sahf
sbb
sub
ret
push
outsl
xchg
scas
adc
pop
ret
pop
dec
pop
push
dec
xor
in
loopne
ljmp
imul
adc
cmp
ljmp
or
jge
inc
xor
and
lds
inc
fwait
test
sub
lret
mov
orb
add
inc
faddp
dec
popa
xlat
addb
push
and
je
xlat
dec
sbb
inc
stc
jns
dec
bound
movl
orb
mov
movsl
sub
scas
jbe
jno
loop
movsb
and
insb
aaa
in
xchg
mov
loop
and
orl
jb
xor
cltd
xor
push
xor
std
orb
inc
and
test
or
push
sub
xchg
lods
cmp
popl
fcmovne
testb
mov
or
orb
ret
dec
addb
es
daa
xchg
push
loopne
movsl
cmc
cmp
stos
xchg
cltd
adc
pop
push
dec
insb
andb
subb
rorb
loope
jecxz
insb
stos
shl
clc
xor
ds
data16
ret
mov
jns
jb
sahf
jge
jle
in
push
inc
jns
repnz
xchg
mov
jl
pop
sbb
push
jno
mov
imul
mov
pusha
lods
lods
mov
pop
sahf
cmp
ds
xchg
cmp
ds
xchg
stc
nop
jo
pop
mov
icebp
mov
mov
pop
xchg
test
test
mov
ja
outsb
cmp
pop
pusha
push
ds
inc
stc
inc
jo
pop
das
cmp
icebp
sub
sub
sub
pop
daa
cmp
icebp
and
and
and
pop
pop
cmp
icebp
sbb
sbb
sbb
pop
pop
cmp
icebp
adc
adc
adc
pop
add
psllw
pusha
or
or
pop
or
pop
icebp
std
pusha
in
ds
stc
mov
cmp
pusha
popa
ds
inc
stc
ss
pop
sbb
add
mulb
xlat
leave
stc
mov
stos
pop
sahf
cmp
gs
fs
inc
stc
xor
pop
sbb
or
cmc
pusha
out
stc
mov
mov
fs
icebp
addr16
push
cmp
stc
adc
or
cmp
icebp
fisubl
ds
jnp
subb
cmp
cmp
add
stc
out
jo
pop
int
mov
mov
push
push
jo
pop
xor
and
adc
push
ds
repz
jecxz
rcrb
cmp
bound
jp
pop
sbb
dec
push
push
push
push
xchg
cmc
pushw
add
cmpl
subl
xor
sub
push
cmp
sub
addl
sbb
jo
add
adc
aaa
in
das
jecxz
inc
adc
adc
jae
sbb
pop
push
adc
lret
push
push
jbe
sbb
dec
adc
sub
and
push
scas
sbb
xor
sbb
jo
sbb
in
jnp
das
adc
mov
add
pcmpeqb
adc
pop
aaa
repz
cmp
and
sbb
pushw
xor
data16
out
ds
pop
mov
int3
sbb
mov
sub
jecxz
and
js
push
cs
cli
jae
imul
sahf
scas
gs
dec
fsts
cmp
shlb
sbb
sarb
adc
lds
fmul
sub
adc
or
xor
ret
xchg
aas
out
or
adc
or
scas
in
ret
sub
fwait
enter
pop
adc
and
movsl
repnz
xchg
sub
fnsave
int3
icebp
pop
inc
popa
cmp
mov
sbb
xlat
pop
jl
xor
inc
inc
in
adc
dec
or
push
sbb
adc
cmp
sbb
xor
pusha
xchg
push
pop
pop
outsb
jne
ds
je
pop
lds
dec
cmp
pusha
pusha
rdmsr
xchg
and
gs
scas
jo
or
dec
pop
adc
inc
jo
pop
push
push
dec
jne
sbb
lcall
push
outsl
lods
mov
pop
imul
pop
rcrl
loopne
insl
push
fimull
add
xor
jae
mov
pop
sub
aaa
repnz
ss
sub
xor
pusha
or
fcoms
lcall
out
jmp
cmpsb
adc
das
adc
sub
iret
movsb
sbb
bnd
add
add
jno,pt
push
mov
adc
push
xor
sbb
movl
mov
es
push
pusha
cmp
dec
adc
sub
mov
cmp
nop
insl
outsl
fmull
fucomip
bswap
lret
cmpsl
ss
adc
push
jmp
adc
xor
test
das
cmp
sbb
add
out
hlt
insb
sbb
pop
lea
push
jg
rcrb
mov
jns
pusha
jp
cli
pop
pop
jp
pop
sbbl
mov
into
repnz
mov
ret
test
dec
jns
pop
cmp
jb
push
jp
mov
outsb
das
mov
inc
popa
bnd
pop
outsb
jg
into
jo
lea
pop
repnz
and
pop
push
cmp
cmp
outsb
mov
test
mov
popf
cltd
or
arpl
aas
mov
adc
dec
popf
jle
and
pop
daa
repnz
add
cmovle
mov
insl
xor
mov
mov
das
xacquire
fbld
outsl
and
mov
in
shlb
pop
cld
pop
rolb
ds
inc
dec
mov
mov
push
dec
je
push
dec
dec
mov
inc
jecxz
add
lahf
scas
xchg
pop
dec
inc
loop
dec
xorb
mov
mov
ret
mov
dec
mov
std
jno
addl
xor
arpl
adc
hlt
imul
and
popa
inc
repnz
bound
mov
shr
inc
jb
mov
xor
dec
mov
inc
jno
mov
sbb
sub
add
and
add
cmp
pop
idiv
loop
add
sub
cmc
mov
adc
pusha
jns
cs
inc
fstps
movsl
orl
in
inc
pop
or
or
orb
xchg
inc
sub
leave
fcoml
cmpsb
mov
loop
mov
cmp
inc
aas
push
inc
cmp
jle
or
add
dec
jl
fwait
dec
hlt
ds
fdiv
mov
and
jl
call
hlt
dec
push
mov
aas
stos
out
cmpsl
sbb
inc
inc
ret
xchg
fwait
cmp
aam
test
adc
mov
cmp
push
cmpsl
int3
fimull
ds
repnz
test
je
dec
movsb
and
or
fcomps
mov
and
sub
and
sbb
popf
popa
mov
push
dec
push
sbb
or
shrl
mov
mov
mov
cmp
mov
cmpb
ss
jb
adc
jns
mov
cmpsl
mov
jns
stos
cmp
mov
testl
pop
add
cs
ds
fstpt
mov
pusha
push
and
cmp
xchg
loop
rol
adc
je
cwtd
jg
mov
jb
xchg
std
mov
xor
xchg
inc
movb
mov
rolb
xor
mov
lret
xor
out
mov
mov
popl
cltd
dec
int3
scas
dec
mov
ja
adc
outsb
in
cmp
sbb
js
add
or
jle
popf
outsb
push
xor
or
cltd
and
xchg
sbbl
jns
or
ss
add
mov
jp
mov
outsl
repnz
popa
sarb
mov
jl
jno
mov
ds
cmp
sbb
push
dec
bound
dec
stos
push
push
mov
shlb
mov
inc
dec
call
lods
test
cltd
mov
mov
fwait
addr16
xchg
ret
and
mov
mov
ror
ror
bound
cmp
test
or
adcb
dec
dec
pop
lahf
ss
push
jae
sbb
mov
ret
cli
popa
outsb
loop
inc
add
mov
jno
rol
call
inc
nop
out
out
mov
adc
mov
sbb
mov
fbld
add
stos
mov
ror
scas
xchg
push
mov
inc
leave
ffree
mov
push
loopne
insb
jne
xchg
add
aas
push
push
mov
aas
push
ds
ja
push
ret
movsb
scas
push
arpl
sbb
jp
les
mov
loope
je
and
ret
or
mov
repnz
popa
std
jbe
dec
pop
out
data16
dec
cmp
js
cmp
mov
dec
dec
inc
dec
dec
add
cmp
cmp
xorb
xor
xor
xor
subl
sub
es
aas
inc
adc
adc
pop
pop
stc
inc
inc
or
cmp
mov
mov
mov
nop
rol
sub
cmp
cmpsb
data16
inc
mov
mov
std
cltd
orb
or
xor
adc
call
je
jecxz
dec
bt
and
dec
pop
jb
adc
push
jge
adc
imul
push
dec
dec
adc
dec
xor
dec
lahf
xchg
sbb
pop
adc
or
cmp
pop
mov
repz
sbb
test
or
adc
and
add
pop
pop
or
xchg
mov
inc
push
mov
pop
pop
movsb
hlt
add
pop
mov
mov
aas
aam
sahf
loope
jecxz
ds
jp
sbb
aas
ss
int
addb
xorb
ds
jp
cli
imul
aam
jp
hlt
jp
repz
pusha
mov
bound
lock
cli
jmp
jg
bound
bound
inc
in
inc
inc
sub
add
xchg
jb
mov
pusha
test
test
mov
add
stc
scas
andl
stos
cmpl
imul
mov
inc
pushf
add
je
cltd
leave
mov
fs
popa
add
add
inc
add
add
ljmp
and
ret
pushf
sarb
stos
mov
mov
jo
leave
jnp
add
pusha
rol
ret
cltd
mov
je
xchg
rcrb
enter
fidivl
jae
adc
es
push
sbb
ds
push
adc
pusha
ret
mov
sub
xchg
pop
sub
sbb
and
sbb
mov
outsl
adc
or
pop
cld
outsb
adc
aas
add
movsl
sbb
adc
mov
jl
inc
lods
push
jb
push
das
popf
jnp
pop
adc
and
mov
je
add
loope
insb
jns
xor
into
dec
loopne
push
push
es
dec
leave
das
mov
pushf
jno
pop
fcomps
jne
sbb
sub
mov
cs
lods
mov
cmpsb
add
scas
sarl
scas
mov
lret
mov
jp
int3
loopne
and
repnz
mov
mov
stos
jbe
fidivl
mov
mov
fs
mov
mov
js
nop
mov
jmp
cmpb
loope
lods
inc
mov
sti
and
dec
ret
cmpsl
or
or
mov
mov
mov
into
mov
jge
int
mov
js
mov
mov
movsb
sbb
loope
loop
int3
test
jo
mov
add
leave
aad
test
lods
mov
mov
add
leave
stos
rcrb
mov
lock
dec
mov
cmpb
cmp
addr16
lods
rorb
sti
mov
mov
bound
scas
std
add
push
int
inc
bound
add
icebp
jp
and
dec
and
bound
push
leave
cltd
cmp
pop
je
mov
or
int3
rol
push
xchg
repnz
repz
xor
ljmp
mov
outsl
inc
dec
js
leave
cltd
mov
leave
xchg
xorl
mov
andl
scas
mov
into
in
rolb
hlt
add
lret
and
rorl
clc
es
loop
js
inc
addr16
push
sti
stos
xlat
mov
dec
mov
rorl
push
or
stos
mov
xchg
scas
aad
dec
repnz
mov
fsubs
loopne
scas
loop
xor
xchg
loope
sbb
cwtl
mov
vpsrld
dec
jae
inc
ror
test
insb
lods
les
hlt
inc
dec
cmp
inc
cmpb
lds
scas
fdivs
aad
cltd
scas
adc
pop
lea
mov
je
bound
push
mov
mov
mov
cmpsb
lock
insb
jo
bound
pop
inc
loop
and
nopl
vpunpcklbw
sbb
and
adc
or
push
pop
mov
push
dec
bound
xor
enter
cmc
push
jno
mul
mov
adc
adc
push
xchg
or
out
pop
mov
mov
sub
les
dec
outsb
or
jo
sbb
xchg
and
sub
jg
push
inc
cmp
jno
cmp
cmp
inc
push
pop
pop
mov
es
or
push
cmpsl
jae
xchg
jg
outsb
mov
push
or
dec
xor
push
and
and
xor
test
std
loope
pop
outsl
xchg
pusha
fs
push
cmp
or
sub
test
sbb
insb
mov
cmp
jns
in
sbbb
mov
jne
aam
push
cmp
bound
pop
sbb
or
jb
mov
dec
push
mov
sbb
push
shrb
inc
push
fsubrs
sbbb
jmp
mov
mov
push
inc
cmp
push
test
jae
cs
ss
clc
sbb
push
insb
inc
ljmp
les
in
lock
mov
jo
pop
shll
and
sbb
in
jg
es
insl
pop
ret
cli
mov
jns
notl
jb
xor
std
mov
cmp
inc
lahf
jb
sub
lcall
add
dec
outsb
pop
std
ret
inc
int
movb
jg
or
and
or
mov
jns
stc
pusha
jo
xchg
push
mov
sbb
ja
and
sbb
call
cs
adcl
aaa
fnstcw
scas
leave
pop
loope
push
shll
pop
jno
jnp
into
ja
jp
or
jnp
jnp
jg
bound
pop
sub
push
aad
int
mov
mov
sub
dec
in
fisubrl
sbb
jae
mov
xlat
xchg
xor
xlat
xor
cmp
lahf
call
scas
test
out
mov
aad
movsb
xchg
xor
push
andb
jle
dec
pop
lret
push
mov
jp
jle
cmpsb
jge
loop
insb
loope
dec
push
jns
sbb
lds
push
fdivrl
loopne
aad
out
jle
leave
inc
cmpsb
or
and
and
pop
jl
loope
repnz
and
repz
fistl
push
pop
test
psubw
daa
lods
fimuls
push
fidivs
sbb
int3
je
fisttpll
pop
fndisi(8087
mov
data16
fs
hlt
add
jp
pusha
add
push
add
test
mov
out
push
adc
and
adc
addl
xchg
mov
stos
outsb
sbb
jns
lret
cli
jnp
lea
loop
cmp
hlt
dec
mov
add
jp
ret
iret
jae
sbb
bound
jns
gs
push
dec
out
cmpsl
pop
arpl
dec
dec
and
jno
rol
jns
imul
jns
rol
mov
push
sub
xor
xchg
push
test
mov
pop
jns
test
mov
and
bound
std
dec
rolb
orb
cmp
push
adc
jno
jb
ret
pop
jge
and
mov
jg
jae
xchg
jo
inc
inc
pop
enter
test
pusha
jbe
loop
pop
add
les
or
sarl
insl
jno
stos
cmp
mov
jb
lret
sahf
pop
pop
push
cmp
mov
jno
mov
int3
push
sub
movb
adc
pop
push
jb
int
adc
jb
out
lret
mov
xchg
xor
jp
test
jle
test
jno
test
cmp
jge
push
ljmp
popa
stc
push
jo
inc
bound
stc
push
ja
pusha
sub
lcall
mov
push
aas
insl
mov
mov
mov
xchg
push
mov
mov
inc
push
xchg
xor
adc
or
adc
cmp
add
fisubrl
pop
pop
add
sub
stos
leave
adcb
jp
sub
jno
imul
mov
jmp
mov
iret
lret
outsb
sahf
fs
mov
mov
subb
and
sub
dec
add
and
cmp
mov
mov
push
lret
sti
sahf
movsl
jecxz
in
stos
rorb
cli
repnz
xor
mov
fsubrl
mov
roll
movsb
jae
bound
imul
mov
mov
mov
add
xor
mov
jb
fisubrs
jle
repnz
push
jg
mov
mov
jnp
sub
lret
arpl
sub
mov
mov
repnz
pop
pop
xchg
lahf
push
popa
fisubrl
xchg
repnz
notb
icebp
jge
loop
pop
push
mov
arpl
cwtl
ljmp
daa
dec
dec
loope
xchg
jae
mov
mov
sbb
lret
addb
push
pop
bound
xor
add
xchg
xchg
push
rclb
outsl
orl
mov
das
mov
sahf
push
mov
std
bound
std
xor
ss
xchg
repz
loop
cmp
mov
xchg
mov
aas
mov
mov
jb
xchg
jb
jae
adc
arpl
fmulp
pop
gs
push
jp
insl
mov
mov
sbbb
iret
mov
push
push
bound
subb
sbbl
hlt
ret
test
test
fcomi
repnz
loop
inc
sub
jle
in
xor
inc
jb
orb
addb
mov
andb
repnz
rcr
addb
fwait
stos
roll
adcb
mov
out
push
jg
loop
js
mov
xor
cli
xchg
faddl
mov
mov
push
popa
sahf
jp
mov
orb
pop
pop
mov
sahf
ja
cmpb
inc
add
sbb
adc
xchg
popa
dec
loopne
push
pop
pop
pop
cmp
nop
ljmp
xchg
jo
arpl
add
or
clc
in
jp
pusha
jb
bound
adc
mov
adc
clc
dec
ljmp
pop
pop
xchg
pop
add
pop
add
add
xchg
jb
roll
jb
aas
adc
pop
xor
rcrb
add
dec
sbb
das
pop
xor
repnz
pop
dec
lahf
cli
fiadds
pop
dec
fcmovb
inc
cmpxchg
mov
mov
add
mov
adc
mov
and
inc
pop
cmp
pop
ja
stos
scas
mov
cmp
cli
xchg
mov
std
mov
push
jns
add
sub
popa
mov
mov
cmp
imul
mov
inc
pop
jle
jns
les
cmp
fwait
add
icebp
scas
push
mov
pop
ja
add
popa
outsb
push
jb
jns
addb
jnp
pop
push
jl
mov
popa
sub
push
outsb
test
jns
push
xor
jne
ficoms
pop
imul
movb
insl
rcll
arpl
inc
lcall
sbb
push
test
jb
jb
dec
push
push
jp
push
incl
dec
push
push
repnz
sbb
jno
jns
add
icebp
or
popf
push
xchg
insb
maxps
push
cmp
divb
fs
add
mov
sbb
inc
pop
rolb
movsl
mov
mov
popa
pop
mov
ds
repz
jno
inc
sbb
mov
jns
fs
notb
cmpb
adcb
mov
inc
loop
cmpb
add
adc
inc
inc
arpl
sahf
andl
pop
dec
mov
sbb
inc
jb
mov
imul
arpl
stos
insl
jl
shlb
ret
bound
jg
bound
nop
mov
jno
pop
cli
add
push
and
xchg
mov
ja
add
ret
push
cld
push
cmpb
out
jle
push
xchg
push
adc
push
rcll
icebp
bound
mov
mov
loope
scas
inc
movb
pop
sti
xor
ret
es
mov
mov
mov
bound
cmp
mov
lahf
jge
int
sahf
inc
push
movsl
sbb
mov
or
clc
mov
jle
in
adcb
insb
jg
ljmp
bound
icebp
lcall
cmpb
fistl
cmp
adcb
mov
fwait
ljmp
adc
dec
mov
pop
cmp
xchg
rcll
push
add
pop
sbb
adc
mov
in
js
push
sbb
stc
push
ret
adc
jno
add
dec
mov
push
ss
stc
and
push
jge
loop
aas
adc
sbb
fdivrl
jbe
sub
ljmp
push
jg
std
mov
push
jg
roll
push
pushf
insb
pop
xchg
mov
jbe
pop
sahf
jb
popf
imul
icebp
add
repnz
adc
mov
enter
or
inc
rcrb
adc
mov
sbb
jno
jns
loop
sub
jbe
mov
jge
in
call
cli
adcb
stos
adc
dec
push
jns
push
add
sub
dec
nop
sbb
push
loop
loop,pt
std
mov
es
repnz
repnz
jg
push
mov
imul
sbbb
repnz
bound
mov
jle
lret
outsb
jle
mov
cmp
push
leave
push
mov
addr16
ret
ja
loop
outsl
not
rclb
and
out
push
in
push
and
cmp
push
lret
jp
xor
in
andl
ficoml
int
mulb
aas
jp
adc
paddsw
idivl
or
mov
or
inc
or
and
clc
repnz
ret
ss
ljmp
push
ljmp
loope
jle
cmp
mov
push
hlt
dec
cld
adc
jbe
cltd
std
mov
adc
inc
dec
and
xor
jle
jb
jle
mov
pop
add
sub
sar
aad
mov
push
stc
fisttpll
nop
mov
xchg
fstpt
imul
or
ficompl
jle
pop
jno
lods
mov
push
imul
cmp
inc
pmuludq
lods
mov
sub
imul
xchg
push
push
neg
push
push
pusha
xor
enter
push
repnz
stc
sbb
jle
pop
inc
outsb
test
icebp
mov
cmp
ficoms
mov
dec
jb
sti
jno
pmuludq
inc
mov
adc
loop
sub
jb
mov
mov
inc
jb
xor
jle
jb
lods
jle
rclb
jle
and
jle
ret
std
clc
call
inc
mov
jnp
inc
sti
xlat
insb
repz
pop
lods
add
cmpsb
nop
imul
test
repz
add
xchg
mov
mov
adc
icebp
xchg
pop
inc
dec
inc
and
and
fstpt
sub
jl
push
ret
xchg
in
adcb
leave
mov
pop
mov
roll
xchg
or
aam
mov
dec
bound
add
xchg
jmp
jbe
repnz
cmp
es
data16
loop
xchg
jae
bound
and
xor
bound
jbe
xor
push
and
sahf
rolb
fdivrl
jbe
fldt
cmp
and
pop
in
mov
pop
loop
inc
pop
push
jb
gs
repnz
bound
mov
loop
ret
addl
fimull
xchg
push
sub
push
jge
mov
adcl
in
cmp
add
pop
adc
fists
inc
jp
in
lret
xchg
hlt
and
sub
mov
jns
add
ja
xchg
lcall
ret
sti
lods
pop
repnz
xchg
mov
inc
jno
pop
aaa
cli
addb
test
push
fwait
lcall
mov
jmp
pop
icebp
jg
pop
shlb
jno
imull
mov
or
push
pusha
push
inc
je,pt
clc
or
or
ja
jge
rcrb
jge
call
and
push
xor
fisubs
out
push
xchg
mov
adc
xor
and
or
jecxz
sbb
outsl
cld
mov
jb
stos
sub
mov
js
ljmp
icebp
jo
ja
pop
in
jb
cmp
ds
pop
stc
push
jo
pop
pusha
cmp
outsb
fmull
pop
jl
outsb
je,pt
jmp
jbe
fidivl
jns
stc
push
jo
pop
pop
int3
push
push
insb
jns
adc
push
fs
cmp
dec
pusha
dec
ds
dec
stc
push
push
pop
loop
pop
jns
push
mov
cmp
dec
pusha
push
ds
inc
stc
inc
js
cmp
subb
xor
inc
pop
add
jmp
jo
pop
mov
popa
xorl
xchg
stc
mov
jb
fcom
inc
mov
inc
aaa
jb
jl
fbld
jno
jg
or
jb
cmp
rorb
inc
adc
iret
add
push
jo
push
cs
add
jb
inc
enter
outsb
inc
mov
int3
adc
dec
ret
pop
dec
addr16
pop
test
jb,pn
retw
jo
jns
ds
cmpsl
adc
dec
mov
inc
xchg
and
jae
xor
cmpb
fwait
mov
and
inc
jg
fcmovnb
sbb
ret
mov
mov
movsb
sub
ret
jbe
inc
xchg
mov
xchg
addl
rolb
pop
aas
iret
addl
bound
xchg
data16
pop
lahf
outsl
scas
push
adcb
xor
adcb
fistps
out
das
roll
mov
mov
inc
ret
dec
orb
ds
orb
aaa
or
cmp
orb
push
pop
sahf
outsb
subb
fwait
imul
ficomps
out
subb
pop
out
fistpl
jmp
sub
mov
addb
inc
addb
xor
addb
xor
mov
andb
andb
adc
andb
icebp
xor
adc
mov
dec
orb
dec
orb
cmp
orb
cmp
cwtl
push
subb
insl
subb
sbb
subb
jmp
dec
sub
scas
xor
inc
push
inc
pop
inc
and
call
repnz
jno
cld
lret
mov
add
xor
clc
jge
adc
sbb
push
pmaxub
inc
subb
jb
ss
hlt
cmp
push
out
pop
push
mov
jmp
push
subl
jl
arpl
push
adc
cmp
xor
cli
pop
mov
xor
pop
cmpb
cli
mov
adc
jp
lcall
pusha
test
insl
sbbb
pop
popa
cmc
leave
pop
insb
inc
cmp
popa
cmovne
sbb
imul
add
xchg
loop
cmpl
jmp
sbb
xchg
inc
pop
push
outsb
mov
outsb
test
in
ds
push
out
cli
pop
mov
sub
dec
sahf
cs
movsl
popa
mov
test
or
push
addl
data16
cmp
xchg
sar
cmp
repnz
loop
jle
icebp
sbb
or
int
cltd
dec
pop
push
mov
ds
ds
push
jle
push
outsb
pop
mov
add
or
popa
sar
add
mov
lret
jne
notb
push
ds
dec
inc
aam
aas
cmp
sub
inc
pop
jmp
push
push
repnz
or
pop
repnz
mov
or
pusha
jmpw
pop
lret
or
pop
popa
push
inc
das
xor
or
es
sti
out
jle
mov
fdivl
aas
decb
mov
mov
mov
mov
push
outsb
and
jp
mov
repz
repnz
out
and
stos
pop
mov
mov
imulb
cld
cmpsb
mov
out
mov
pop
out
loope
pop
mov
outsb
xor
mov
xchg
push
jp
pop
icebp
push
mov
pop
aaa
pop
pop
inc
out
push
nop
mov
aaa
pop
pop
sub
into
cmpsb
add
loop
outsb
push
popa
mov
push
mov
pop
sub
jle
pop
jle
outsb
sti
xchg
repnz
mov
push
movsb
pop
xor
inc
adc
cmp
movsl
out
ficoms
adc
sub
sti
outsb
pop
xor
data16
mov
je
ret
shll
push
outsb
push
jno
fistpll
outsb
xor
pop
hlt
stc
xor
push
outsb
dec
aas
clc
into
inc
push
ljmp
outsb
shl
jmp
push
jp
outsb
aas
jp
out
das
into
dec
repnz
jb
mov
cli
mov
pop
je
cmp
psubq
pop
mov
jb
jnp
mov
push
cmc
jno
cli
jnp
mov
jnp
jno
cli
jnp
mov
jnp
jno
cli
jnp
ret
cmc
jno
cli
push
mov
push
cmc
jno
cli
push
mov
mov
outsb
cmp
repnz
xchg
mov
adc
icebp
add
add
icebp
adc
or
leave
mov
adc
cmp
popa
or
sbb
sahf
or
hlt
xor
inc
sahf
loopne
sub
add
add
add
or
mov
jb
loopne
data16
js
cli
mov
jb
loopne
dec
outsb
cmpsb
add
je
cmp
cmp
pop
cmc
outsb
jle,pt
hlt
sti
jb
loopne
cmp
das
dec
outsb
popa
mov
cs
in
pop
cmp
test
pop
adc
pop
xchg
bound
imulb
jbe
jns
or
sub
out
sub
jbe
xor
push
inc
mov
mov
outsb
repnz
dec
aam
add
push
imul
xchg
outsb
push
fiadds
sti
sarl
outsb
mov
sti
leave
jge
and
lock
jle
scas
pop
inc
jb
loopne
out
pop
cmp
popa
nop
sahf
rclb
nop
fs
ficoms
add
stos
dec
xor
adc
sub
pop
mov
add
pop
push
or
loop
mov
add
cltd
cmp
push
add
outsb
mov
push
pusha
adcl
negb
imulb
jnp
clc
aad
xor
mov
mov
dec
xchg
jae
mov
stos
mov
aam
inc
mov
mov
mov
inc
mov
mov
ds
mov
jle
push
pop
outsb
icebp
xchg
cli
jl
pushf
jbe
inc
jle
xor
xchg
mov
pop
xor
outsb
push
adc
jl
jp
icebp
mov
push
inc
std
outsb
adc
repnz
push
push
into
in
dec
inc
jbe
fsubrl
inc
mov
sbb
cmpb
imul
push
push
lods
in
pop
cmp
lods
lcall
fsubrl
push
mov
add
and
je
in
cmp
fiaddl
repnz
jl
ss
jae
jge
orb
mov
inc
pop
push
xchg
sarb
outsb
repnz
xor
dec
data16
cmp
test
pop
fnstenv
les
jne
fidivrl
outsb
jb
mov
pop
mov
jle
push
out
outsb
adc
jb
clc
mov
in
jp
hlt
sub
inc
add
outsb
inc
repnz
hlt
cmp
stos
push
outsb
mov
pop
pop
pop
mov
mov
mov
fiaddl
inc
mov
fmul
sub
outsb
popa
icebp
mov
jb
loopne
inc
ljmp
in
mov
jb
loopne
inc
sbb
ljmp
sub
hlt
inc
jp
std
jb
mov
inc
cli
dec
xor
cmp
pop
ds
data16
jb
fwait
or
dec
jle
fiadds
outsb
repnz
sarb
inc
push
mov
rcl
fistps
mov
fcompl
xlat
cli
jp
iret
je
jle
dec
shlb
mov
jp
xor
mov
inc
into
cmp
mov
sti
jb
loopne
data16
xchg
xor
aam
sbb
addr16
mov
mov
stos
std
jb
mov
add
out
mov
cli
inc
lds
push
mov
popa
ds
dec
sar
jb
mov
cli
out
xor
cmp
paddw
mov
cli
xor
je
cs
std
jb
mov
cli
pop
xor
xor
jle
jb
mov
cli
rclb
xchg
push
out
jecxz
and
fs
pop
mov
mov
stc
jp
repnz
outsb
pop
or
mov
outsb
jg
insl
mov
or
ret
jns
clc
lret
xchg
popa
imul
inc
outsb
popa
ficompl
insb
xchg
ljmp
repnz
pusha
outsb
inc
cli
mov
push
mov
push
push
push
pop
in
or
mov
cmovbe
sbb
repnz
shlb
imul
pop
dec
jle
jle
bound
lret
outsb
sahf
pop
cmp
dec
mov
dec
je
add
jbe
sub
xor
outsb
push
je
cmp
dec
dec
inc
std
jno
mov
or
xor
pop
dec
outsb
ds
pop
dec
fnsave
jb
jmp
mov
test
xchg
mov
mov
mov
xchg
adc
test
aas
mov
sahf
das
mov
push
cmpsb
outsb
aas
mov
scas
xor
mov
cli
xor
push
cld
jno
js
mov
std
ficomps
sti
jb
loopne
out
inc
inc
out
clc
mov
idivb
xchg
ds
pop
lcall
pavgb
xchg
adc
js
xchg
mov
jb
loopne
inc
ss
test
adc
js
mov
ds
adc
xor
dec
test
push
loopne
out
outsb
cmp
movsb
test
test
outsb
cli
mov
ret
test
cld
popa
jp
jb
loopne
pop
xchg
repnz
mov
stos
cli
xchg
popf
cmpsl
push
xor
icebp
cmpsb
mov
cmpsl
fs
mov
mov
mov
hlt
aas
mov
inc
loop
hlt
cmp
adc
mov
popa
lcall
cli
out
stos
notb
fstpl
outsb
jb
nop
or
pop
inc
mov
out
pop
imulb
movsb
mov
imul
mov
mov
lcall
xchg
adc
outsb
movsb
cmp
stos
loope
jb
loopne
inc
push
repnz
rcrb
test
loop
cmpsb
cmp
movsl
sahf
push
test
jb
pop
xor
into
bound
sbb
outsb
mov
test
aas
gs
jp
movsb
mov
fnsave
jb
fisttpl
bound
js
pop
mov
jb
loopne
pop
mov
repnz
mov
sti
jb
loopne
inc
adc
jp
xchg
js
jp
xchg
pop
test
inc
and
loope
outsb
shrb
cli
push
sub
push
mov
pop
outsb
jb
mov
cli
lcall
repnz
cmp
popa
test
xor
fstpt
adc
mov
enter
outsb
aas
push
popa
std
jno
mov
scas
inc
loopne
dec
test
out
push
inc
mov
data16
push
icebp
outsb
stc
mov
lret
cmpsl
jbe
cmc
cli
mov
jae
pop
shl
cmpsl
mov
outsb
mov
popa
cmpsl
sahf
ficompl
jno
xor
test
pop
sahf
movsl
push
inc
outsb
cmpsl
fsub
das
pusha
outsb
mov
movsw
sti
fildll
test
movsl
jae
outsb
pop
cmpsl
loop
pusha
outsb
nop
test
dec
loop
into
dec
xor
ljmp
repnz
push
adc
movsw
fstps
jbe
hlt
aas
movsl
inc
outsb
popa
or
push
sub
push
rcl
pop
pop
outsb
adc
pop
shrb
mov
and
outsb
mov
jae
phaddsw
outsb
mov
pusha
cmp
add
adc
jno
inc
xor
jno
hlt
outsb
das
pop
pop
bound
dec
clc
pop
outsb
push
dec
jp
xor
cmp
data16
push
jle
pop
test
jb
loopne
out
xor
clc
mov
xchg
hlt
aas
mov
mov
mov
xchg
outsb
cmp
sahf
ds
dec
cmpsb
std
outsb
lcall
cli
mov
cmpsb
je
mov
std
jb
mov
cli
xor
outsb
mov
outsb
rdmsr
loopne
outsb
aas
push
cli
divb
or
xor
je
pop
ds
sbb
loopne
outsb
xor
popf
cmp
es
dec
cs
outsb
xchg
mov
xchg
pop
cli
cmp
dec
jle
push
cmp
out
xor
pop
adc
outsb
out
xor
pop
add
outsb
out
xor
inc
bound
popa
pop
push
bound
std
outsb
mov
loopne
insb
xchg
ja
bound
mov
push
mov
xor
popa
jb
xor
fisubrl
mov
sbb
cmp
popa
sbb
out
inc
sub
outsb
pop
and
scas
pop
and
jb
loopne
out
sub
outsb
push
je
adc
sbb
into
adc
addr16
popa
pop
push
jp
loop
inc
mov
jo
cli
push
inc
out
cli
fwait
inc
fs
imulb
outsb
mov
loopne
inc
pop
cli
mov
pop
inc
psubb
popa
push
ds
mov
cmp
pop
movsb
push
ds
cwtl
sti
jb
loopne
out
pop
inc
ss
stos
inc
jg
outsb
inc
pop
sahf
fldl
dec
pop
jle
mov
bnd
bound
popa
outsb
adc
sarb
push
mov
adc
outsb
adc
xchg
decb
aam
fisubrs
xchg
sbb
pop
mov
std
lcall
test
sub
stos
push
fdivr
repnz
aam
inc
mov
mov
popa
lret
push
cwtl
insb
sub
xor
sbb
insb
inc
jne
jno
ljmp
popa
in
push
cli
push
jmp
repnz
into
leave
outsb
or
fcompl
push
push
repnz
int3
insb
inc
cs
xorb
xor
mov
popa
inc
push
hlt
push
dec
std
out
jbe
rclb
sub
pop
popa
pop
pop
das
xor
mov
das
pop
or
repnz
jae
jle
jb
mov
sti
out
mov
fimuls
xchg
jns
inc
frstor
sahf
popa
fstpl
inc
scas
clc
shrl
mov
pop
sar
out
mov
sub
fisttpll
jno
mov
pop
das
fisubrs
sarb
loop
pop
sbb
std
loopne
push
outsb
out
rcrl
je
cli
outsb
jb
mov
ja
adc
aad
push
std
jb
mov
mov
popa
inc
fmull
std
repnz
pop
outsb
aas
xor
je
jb
rcll
std
jb
mov
aas
fdivr
xchg
push
adc
pop
inc
or
sub
push
pop
popa
or
lock
scas
mov
pop
ficompl
sbb
xor
sbb
fs
ljmp
inc
adc
cli
popa
adc
push
xor
pop
bswap
inc
adc
adc
adc
push
xor
adc
outsb
aas
adc
dec
push
rorl
shlb
push
push
push
in
fwait
popaw
outsb
icebp
pop
mov
dec
lcall
lcall
mov
jp
in
ds
push
jbe
xchg
cwtl
or
loope
xchg
push
cmpsl
sbb
outsb
and
outsb
lcall
sbb
in
bound
push
cmpsb
fcompl
fnstenv
scas
out
outsb
cmp
jb
bound
mov
jp
push
pop
into
insb
jp
xchg
jno
int
outsl
orb
and
mov
mov
and
mov
ljmp
daa
lret
sbb
sbb
add
mov
fisubrl
dec
pop
mov
pop
inc
cmp
add
jo
dec
loop
cmp
shlb
pop
add
sahf
js
mov
mov
jnp
lret
test
jbe
cmp
imul
sbb
loope
jns
fiaddl
push
and
fs
out
sbb
pop
idiv
jbe
cmp
fisubl
pushf
sub
decb
repnz
repz
loop
repnz
xchg
inc
mov
mul
mov
lods
sbb
xchg
dec
dec
inc
out
rol
sub
fwait
cmpsb
cmp
xor
sub
stc
xor
jle
fdivrl
in
stc
cli
dec
sub
inc
jmp
outsl
scas
add
inc
das
jl
inc
pop
lahf
xor
cmp
xchg
mov
xchg
mov
xchg
pop
jbe
jns
lcall
inc
xchg
jnp
jns
mov
repnz
jle
push
sbb
lds
jg
mov
mov
std
testb
push
xchg
sbb
mov
push
jbe
and
pop
pop
lret
outsb
xorb
fstpt
xchg
jb
aas
jns
ret
mov
push
jge
push
push
jbe
sub
jb
jg
mov
fcmove
idivb
andb
cmp
into
enter
out
dec
gs
cmpl
pop
pop
push
cmp
jno
push
lret
cmp
imul
enter
sub
subl
xor
and
lcall
je
cmp
pop
xlat
loopne
sti
push
mov
call
sbbl
inc
pop
rclb
andb
jmp
lcall
mov
imul
push
inc
rorl
sbb
adc
ljmp
jnp
out
mov
cmpsb
jp
insl
les
lods
inc
out
mov
push
pop
out
in
loop
popa
pop
sahf
mov
push
out
adc
jle
mov
out
negl
ficoms
push
nop
testb
push
sbb
testb
mov
push
pop
jl
jnp
cmp
push
icebp
or
idivl
rol
cli
push
icebp
or
lds
repnz
push
sbb
add
dec
cmp
sbb
xchg
ret
out
ret
shlb
cmp
das
ljmp
psllq
sti
pop
roll
or
stc
cmp
pusha
vmread
inc
pop
jbe
push
add
jb
xor
bound
lcall
sbbl
mov
loope
movsb
out
mov
repnz
outsb
push
pop
and
mov
pop
pop
mov
xor
mov
push
loop
and
mov
mov
pop
pop
xchg
xor
adc
cmp
stc
test
into
dec
add
icebp
jns
pusha
mov
mov
inc
dec
sub
out
jno
inc
sbbl
cmp
sbb
inc
pusha
sub
rcrl
inc
rclb
jns
pop
sbb
hlt
icebp
mov
inc
push
stos
xchg
stc
ds
inc
adc
pusha
loopne
dec
xchg
or
pusha
sub
dec
xchg
mov
stos
xorl
ds
int
sbb
jno
cmc
cli
lret
add
push
fiaddl
jp
imul
and
leave
xor
xor
jl
push
jb
bound
es
cli
dec
mov
in
xor
xor
cli
outsb
and
add
jle
jbe
inc
out
mov
mov
notl
jg
mov
pop
icebp
xor
rcrb
pop
andl
push
std
mov
sub
xchg
push
cmp
inc
jp
pop
bound
xchg
mov
fdivrs
mov
mov
mov
xchg
jbe
xchg
nop
insb
js
sbb
xor
adc
add
nop
sbb
jb
lret
cmp
jp
pop
cmp
sub
jp
data16
sub
pop
cli
xor
popa
jno
scas
gs
ret
and
dec
icebp
lret
xor
dec
xchg
sahf
dec
inc
popa
push
mov
scas
xchg
push
or
fsubrp
push
push
test
loop
jne
jecxz
xchg
mov
and
repz
pusha
shr
sub
insl
xchg
repnz
push
cmp
jl
aaa
popa
push
push
mov
arpl
bound
jno
insl
xor
inc
push
iret
jecxz
push
addr16
arpl
adc
das
mov
enter
push
stc
data16
in
and
repnz
adc
and
push
xchg
add
push
bound
xchg
xchg
and
jb
jne
mov
push
push
call
outsb
dec
push
dec
outsb
cmpsl
pop
pop
push
jbe
dec
push
inc
and
xor
and
stc
jne
lods
cmpl
inc
dec
push
rcr
inc
cld
dec
ret
test
sbb
xchg
inc
inc
repz
adc
push
pop
and
push
xor
jns
mov
mov
shlb
mov
sti
jb
sub
icebp
les
pop
adc
das
cmp
xchg
xor
adc
push
and
inc
fcompl
ss
cld
fwait
pop
xchg
push
or
cwtl
lock
adc
ja
xchg
insl
push
ret
stos
ficomps
pop
dec
pop
jg
outsb
outsb
fstp
outsb
outsl
mov
jle
cmp
inc
aas
aaa
jb
stc
dec
out
cmp
xor
push
push
ds
cli
cmpb
les
jne
jp
data16
pop
loop
pop
cmp
mov
mov
and
xor
or
cli
mov
ficoms
add
inc
mov
and
pop
mov
and
or
and
das
pop
mov
or
sub
mov
pop
cli
loop
cmp
mov
mov
orl
in
jp
mov
or
push
mov
adc
ss
xor
push
cli
ret
sub
cmpsb
and
add
shlb
pop
adc
mov
add
add
mov
jp
cmp
and
and
push
cmp
add
push
repz
pushf
stc
loopne
mov
and
lcall
add
dec
inc
notb
jb
or
or
outsb
lahf
push
xchg
sbb
add
bnd
adcb
jnp
addl
out
mov
out
mov
rorl
lret
incl
xlat
jb
lret
xchg
add
jnp
and
shlb
bswap
maskmovq
and
and
sbb
mov
push
sub
std
sbb
mov
sti
push
cmpsb
adcb
adc
daa
add
imul
cmp
jp
mov
out
ret
ljmp
mov
mov
insb
lcall
inc
or
jp
push
mov
pop
ja
sbb
push
inc
outsb
arpl
mov
pop
jno
jb
ja
adc
and
mov
mov
jbe
sar
popa
hlt
jbe
jae
pusha
inc
icebp
pop
pop
repz
adc
inc
add
pop
repz
inc
in
pop
aas
dec
cs
inc
xchg
repnz
pop
loop
mov
mov
push
fbld
sub
popa
bound
pop
pusha
xor
dec
xor
ljmp
xor
sub
mov
ret
mov
mov
rcrb
sbb
cmp
nop
sarb
idivb
jb
ja
out
xchg
push
daa
pop
xchg
sbb
in
movb
popa
lret
pop
lock
loop
mov
lret
jns
xchg
fimull
and
sbb
or
add
test
push
aaa
out
loopne
push
jp
or
hlt
jo
sbb
ja
push
adc
push
add
add
or
imul
jno
add
push
pop
nop
push
fidivl
repnz
cli
adc
inc
or
or
orb
mov
fists
ja
loop
add
cs
andl
es
jmp
fbstp
xor
mov
cltd
scas
pop
sbb
scas
and
jo
jno
and
jbe
jns
stc
shl
cmp
inc
jp
push
and
or
push
adc
out
add
je
dec
pop
fwait
adc
pop
mov
pop
adc
pop
ljmp
mov
adc
inc
adc
xchg
lcall
push
jo
fidivrl
xchg
ljmp
out
mov
pop
aam
xor
aas
sub
mov
and
cli
insb
mov
jns
pop
addr16
jb
dec
ret
jb
mov
sbbb
pop
sbb
cmp
or
pop
cmp
adc
das
cs
adc
lret
mov
pop
mov
imul
imul
sbb
das
pop
push
xchg
sbb
sub
mov
in
push
popa
jle
xor
mov
mov
sahf
cmp
mov
outsb
sub
inc
lds
mov
push
xor
jo
and
aaa
test
mov
cmp
push
push
mov
pop
inc
lcall
inc
outsb
or
int
and
fwait
inc
insb
pop
int3
clc
xchg
shr
int
push
inc
xchg
cmp
push
adc
sbb
jmp
pushf
test
inc
dec
pop
in
mov
and
outsl
unpckhps
popf
imul
lods
cmp
cmc
and
push
fdecstp
jns
cmpsb
jns
xchg
inc
push
cmp
repnz
pusha
push
cmp
pop
in
or
jo
dec
aad
mov
jno
sbb
icebp
inc
adc
mov
stc
cli
pushw
cmc
sahf
mov
add
or
and
pop
pop
adc
loop
ffree
test
push
std
adc
cmp
pop
in
mov
xchg
jp
adc
mov
mov
mov
test
and
dec
cmp
jbe
aaa
jp
xor
sbbl
pusha
je
jb
mov
cmpsb
pop
filds
shlb
inc
jl
pop
mov
inc
ret
insb
cli
pop
jnp
jle
push
adc
insl
pop
jp
in
imul
dec
aam
clc
mov
mov
adc
sub
push
icebp
jns
pop
jge
jle
jp
jge
jp
jmp
ss
movsb
pop
jns
bound
pop
xor
and
pop
sbb
sbb
jle
lods
loope
adc
jle
inc
mov
leave
cld
jns
jae
stc
xor
enter
jl
cmp
in
push
push
ret
push
xor
out
shlb
dec
push
adc
sbb
push
adc
mov
adc
sub
xor
gs
stc
xor
jmp
push
cmp
xor
in
and
push
push
adc
icebp
xor
hlt
cmp
inc
subl
cmp
fildll
push
js
jg
es
int
mov
mov
adc
mov
xor
dec
loop
mov
push
or
pop
dec
mov
inc
adc
ror
xchg
sbb
pop
sbb
insb
jp
sbb
outsl
cs
or
das
in
hlt
inc
fists
loop
rcrl
push
addb
cmc
jno
mov
xor
jp
ret
pop
stos
mov
daa
sub
or
jmp
mov
mov
xor
sbb
inc
jecxz
adc
nop
das
sub
cmp
sbb
pop
sbb
cmp
sar
bound
test
lcall
and
aas
xor
ss
cmp
push
outsl
and
bound
cli
jae
sub
sub
data16
cmp
in
popa
mov
popa
cmp
xor
jp
mov
jbe
rol
add
jns
sahf
add
cmp
inc
rcrl
popa
mov
je
pop
inc
sub
inc
cmp
bound
das
sbb
imul
mov
jle
cmp
pop
jno
fsubrl
jp
ljmp
xor
jle
xor
aaa
jbe
mov
mov
jle
repnz
jecxz
sbbb
push
push
pop
ret
icebp
jns
pusha
sbb
jmp
out
shll
pop
push
outsb
in
sbb
in
shl
roll
minps
leave
xor
add
push
sbb
scas
lcall
icebp
outsb
mov
dec
pop
jno
xor
and
cmp
pop
std
cmp
sbb
pop
aam
cs
mov
push
ss
mov
adc
xchg
mov
cli
stc
pushf
or
nop
and
add
xchg
call
stos
repnz
sbb
or
andl
xchg
pushf
push
xor
dec
adc
fnstenv
sbb
add
data16
and
mov
dec
jp
out
push
mov
dec
pop
push
mov
push
push
cmp
repnz
pop
sub
into
pop
cmp
jb
stc
or
xchg
stos
pop
sub
push
insb
push
pushl
pop
jns
sub
mov
jno
pop
sub
mov
mov
jl
push
push
jle
xor
dec
and
xor
xor
jp
jp,pn
sub
ds
mov
cmpsl
jno
sub
mov
sub
icebp
pop
push
aas
inc
inc
ret
pop
sub
push
jns
jo
pop
sbb
sub
pop
pop
mov
sbb
imul
icebp
ss
pushl
imull
sub
add
rcr
int
xchg
addr16
xorb
xchg
and
jl
in
ja
imul
jns
dec
mov
mov
daa
jp
pop
xchg
ds
es
icebp
out
jb
and
scas
and
aas
inc
or
cmpsl
bnd
data16
out
xchg
mov
rcrb
mov
nop
cmp
sub
sub
jcxz
push
dec
xor
xchg
rcl
mov
pop
mov
jno
call
jb
xchg
iret
jb
inc
pusha
into
push
push
popa
or
and
sub
scas
jle,pt
mov
sbb
jno
pop
dec
cmp
ds
stc
inc
jo
pop
dec
cmp
lret
cwtl
add
ret
jb
shrb
ret
leave
mov
loop
popa
pusha
push
bnd
cmp
out
stos
inc
fidivl
sbb
mov
inc
jb
pop
push
adc
push
add
or
pop
test
xchg
cli
ds
mov
or
pusha
jp
ds
inc
inc
or
icebp
mov
ret
jb
pop
pusha
int3
ds
aas
inc
push
popf
cli
pusha
push
add
pop
mov
pop
shlb
pushl
std
push
add
roll
gs
dec
pop
aad
int
pop
aam
push
jns
stc
out
pusha
pop
sarl
out
jbe
push
inc
jae
popa
pop
xor
xor
inc
idivl
dec
adcb
mov
push
cli
push
add
sub
adc
popa
xchg
cli
inc
pop
add
jns
cmp
xor
nop
push
push
bound
mov
jns
stc
shrb
adc
jle
ljmp
adc
pop
push
out
aad
jns
ss
inc
xchg
je
cmp
jp
inc
mov
and
bound
in
orl
jno
jecxz
mov
and
fists
xchg
inc
fidivrs
mov
loop
xchg
push
jno
jns
pusha
jle
jle
cmp
sbb
sbb
inc
jae
cs
adc
sbb
iret
cmpsl
inc
andb
or
pop
and
shlb
push
sub
jp
xorl
and
stos
and
ds
sbb
xor
outsl
loope
mov
cmp
iret
jne
xorb
cmp
aas
inc
inc
push
in
or
pop
adc
sbb
sbb
dec
bound
daa
dec
mov
or
outsl
jns
subb
jnp
loope
fdivp
jns
dec
jg
jl
jns
sbb
popa
fdivrl
fstps
popa
out
in
fiaddl
fmull
nop
test
imul
jno
jns
pop
mov
push
fnstcw
lret
repnz
mov
inc
push
add
int
mov
push
and
out
mov
mov
scas
cmpsb
loopne
push
movsb
mov
mov
dec
pop
push
add
dec
stos
adc
es
ss
push
cmp
jo
repz
adc
imul
mov
adc
das
mov
out
sti
scas
mov
push
xor
pop
out
push
sub
dec
cmc
sbbb
jno
and
push
add
push
fisubrs
cld
loope
inc
addr16
cmc
cmpsb
shlb
push
adc
cmp
and
sub
or
lock
les
jle
xchg
dec
fs
mov
rolb
or
sub
sbb
inc
dec
dec
cmc
pop
rolb
mov
adc
loopne
call
xor
xchg
repnz
xor
mov
loopne
cmpsl
xlat
loop
loop
jo
cs
pop
pop
mov
adc
orb
dec
push
testl
jns
stc
pshufw
pop
pusha
jns
cmp
pop
les
lahf
pusha
jns
das
scas
dec
pusha
jp
ss
out
jo
pop
es
push
repnz
es
push
cmp
inc
icebp
pop
leave
je
push
repnz
mov
nop
ljmp
cmp
and
popl
push
lea
cli
jnp
push
jno
lods
pop
jl
mov
jbe
inc
test
aas
sbb
inc
fwait
pop
jo
adc
jg
bound
out
mov
adc
push
xor
or
nop
cmpsb
jae
xor
jp
pop
jnp
pop
pusha
adc
jge
adc
add
jns
das
sub
sbb
pop
aam
mov
jb
sbb
and
jno
and
rclb
cmp
and
out
jno
ja
mov
bound
add
jp
cmp
mov
inc
add
dec
cmp
mov
pushf
fdivrl
cmp
cli
js
sbb
sub
pop
cs
js
xor
cli
jno
push
fdivrl
cli
inc
inc
dec
jle
jb
pop
inc
and
fists
or
cmpl
cli
loop
adc
add
mov
inc
inc
inc
aaa
mov
and
jae
xor
and
mov
push
movsb
adc
adc
sub
pop
das
mov
das
jge,pt
xor
push
jae
push
xor
loop
dec
push
push
push
dec
jo
repnz
push
testb
mov
sbb
pop
popa
dec
jl
adc
pop
scas
js
inc
sbb
sbb
xchg
push
std
or
push
dec
push
pop
pop
dec
mov
ficoml
dec
jno
popa
ljmp
mov
push
xor
pop
pop
dec
and
or
push
inc
sarb
pushf
sahf
hlt
and
dec
mov
push
add
nop
in
push
cmp
adc
push
push
cmc
push
dec
repz
ds
fisubl
pop
rcll
push
addr16
jmp
rorb
add
adc
xor
mov
inc
inc
xchg
std
lods
push
fldt
inc
xor
pusha
inc
iret
sub
dec
jb
and
push
dec
lods
xchg
mov
clc
jle
add
and
and
mov
pop
scas
adc
inc
pop
mov
testb
xor
sub
sub
icebp
xlat
je
push
inc
scas
xor
in
iret
rolb
js
and
jae
in
pop
xor
xor
repnz
push
cmp
or
inc
xor
incl
jno
jl
cmp
adcb
mov
test
push
lret
aas
xchg
push
cmp
pop
add
add
dec
rcrb
loopne
test
mov
adcl
sbb
inc
and
push
or
push
push
sbb
cmpsb
fwait
adc
adc
sbb
adc
mov
stos
outsb
push
push
jmp
imul
insb
dec
stos
jge
scas
repnz
cmovl
adc
icebp
andb
push
push
jp
jb
inc
inc
ret
sbb
dec
push
sbb
into
push
sub
sbb
push
jp
loope
or
sbb
fiadds
push
imul
dec
sbb
or
cmp
sub
popf
stos
rcrl
ss
cmp
outsl
xor
dec
loopne
jmp
lcall
push
call
add
xor
or
push
dec
pop
xor
dec
jns
dec
jl
add
addb
cmp
dec
mov
mov
je
jnp
jns
cld
jg
or
loop
sbb
insb
or
lret
inc
test
mov
jnp
jnp
jns
and
cld
inc
jge
pop
cmc
out
mov
clc
mov
adc
adc
jbe
push
out
xor
imul
jns
inc
outsl
xor
popa
pop
jns
inc
push
xor
sbb
xor
out
jmp
fstpt
xor
out
mov
mov
jg
sub
adc
and
jmp
je
push
sub
pushf
lods
xor
dec
mov
lods
xchg
mov
bnd
in
gs
push
imul
inc
mov
inc
jb
sti
cmp
mov
push
dec
mov
add
xor
jo
aam
sbbb
mov
xorb
bound
mov
pusha
lret
sbb
add
stc
stos
cmp
adc
insb
jbe
rorl
cmp
push
mov
sub
js
cli
fsts
add
xchg
jb
xchg
push
iret
add
in
cmpsl
repnz
in
jbe
mov
addr16
jb
insb
mov
jge
shll
xor
sbb
leave
pop
mov
aad
loop
mov
aad
icebp
mov
jp
es
popf
jle
or
mov
jle
add
pop
dec
out
repz
pop
nop
testb
xor
cmp
out
sub
imul
int3
jb
repz
movsb
inc
xchg
xor
ret
cld
inc
subl
push
andl
dec
xor
shll
bound
xor
ret
fcompl
lahf
popa
aaa
or
loop
inc
mov
mov
bnd
jb
add
sbb
in
jno
pop
test
cmpl
cltd
jae
addb
bnd
jl
sahf
jnp
popa
jp
jns
mov
nop
jbe
bnd
je
sahf
jae
popa
jb
xchg
inc
popa
jo
outsl
jae
outsb
add
arpl
imul
popa
push
aaa
push
ss
cltd
ja
in
mov
aas
jle
jge
bnd
jnp
outsl
adc
ljmp
cli
xchg
je
pop
jg
bound
lods
in
jmp
mov
or
jg
mov
ljmp
xchg
mov
mov
sub
jp
js
bound
inc
ss
fsubrl
ret
and
xor
xor
mov
cli
outsb
push
stos
repz
sarb
fisubs
sub
xor
das
mov
into
push
xor
pop
push
mov
movsb
or
mov
or
outsb
pop
mov
loop
loop
xor
lret
ds
xor
xchg
dec
cli
jp
nop
jge
push
outsb
sub
xor
inc
jge
cmp
mov
pop
sbb
adc
pop
repnz
inc
pop
ret
outsb
mov
mov
mov
ds
fsubrl
sbb
icebp
adc
out
ret
add
jl
lret
xor
ds
fisubrl
stos
xor
pop
lcall
inc
or
push
decb
or
sbb
mov
mov
fisubrl
cli
mov
or
das
ret
cld
loop
lcall
push
mov
mov
mov
sub
dec
pusha
fidivrl
sbb
inc
pop
push
xchg
stos
das
dec
adc
or
ds
mov
or
pop
mov
jns
add
pop
xor
ret
pop
mov
mov
xor
ret
aad
loop
das
repnz
pop
sbb
test
clc
mov
test
mov
jb
jae
jb
pop
bound
outsb
dec
outsb
mov
and
or
loop
das
repnz
pop
shrb
test
inc
add
lcall
jb
insl
rcrb
add
inc
outsb
mov
addr16
into
js
repnz
and
mov
xchg
lcall
mov
xor
bound
js
push
outsb
sbb
imul
push
inc
jge
adc
sub
clc
or
jl
cli
adc
jmp
sbb
mov
dec
insl
lcall
sbb
bound
dec
cmp
ds
cmp
lret
adc
sahf
cli
push
cmpb
jmp
pop
aas
inc
fsubp
jg
stos
adc
ljmp
jb
xchg
sub
pop
je
add
dec
outsb
inc
push
and
xchg
fimull
aad
loop
das
cli
outsb
or
xor
rclb
pop
mov
outsb
mov
lock
inc
imul
jae
frstor
push
out
jmp
sub
aad
loop
sub
outsb
pop
add
pop
pop
mov
mov
xchg
outsb
jecxz
pop
push
dec
push
inc
fcmovbe
jb
push
jb
sar
inc
jmp
mov
in
add
into
js
repnz
sbb
mov
or
test
ficoms
out
cmp
andl
push
outsb
xor
lcall
xor
mov
jno
mov
stc
das
loop
pop
mov
mov
jmp
loopne
pop
jno
pop
jo
mov
popf
mov
clc
jo
cmpsb
sub
xor
out
cmp
xchg
lret
mov
cmpb
jmp
mov
bound
xor
repz
das
cmp
fisubl
addb
add
loop
outsb
mov
xor
xor
xor
outsb
xchg
outsb
mov
out
hlt
fidivrl
push
outsb
or
mov
pop
add
dec
stos
cmp
sti
mov
pop
push
mov
jns
pop
or
fidivrl
stos
and
inc
cs
outsb
pop
or
mov
popa
repnz
xchg
xor
dec
icebp
jns
ss
ficompl
aad
loop
das
or
mov
mov
mov
ds
outsb
scas
outsb
enter
xchg
cmp
push
add
dec
insb
xor
push
add
dec
xchg
pop
inc
xchg
or
leave
xor
loop
outsb
nop
add
mov
outsl
repz
clc
mov
xchg
push
outsb
push
in
cli
push
jb
xchg
imul
pop
inc
outsb
jecxz
pop
cmp
sub
dec
scas
outsb
clc
add
jge
cli
push
outsb
or
ljmp
xor
js
stos
outsb
sbb
mov
or
pop
dec
push
push
inc
jns
pop
ja
arpl
jp
push
jge
and
xchg
jecxz
stc
cli
push
sbb
ds
outsb
jp
loop
stos
aad
aam
in
lcall
imul
lcall
sbb
xor
iret
mov
ljmp
push
bnd
cmp
fiaddl
jmp
loop
ss
fsubrl
mov
mov
inc
ds
fsubrl
xchg
inc
fistpl
inc
push
jecxz
imul
xor
xor
ljmp
outsb
pop
sbb
stos
stos
push
xchg
xor
data16
addr16
loop
add
cmp
inc
add
adc
outsb
ret
cmp
rcl
xor
ds
outsb
mov
xor
lcall
repnz
outsb
pop
push
xor
pop
cmp
sbb
outsb
or
sbb
or
orb
jbe
clc
cmpb
ss
lcall
sti
mov
popa
xchg
inc
repz
das
xor
jp
sbb
repnz
or
ficompl
mov
or
jno
fs
js
bound
fiaddl
outsl
cmp
mov
stc
adc
stos
xor
loopne
int3
xor
ds
mov
jp
sti
sti
mov
arpl
fs
pop
push
mov
mov
xor
sbb
xor
or
outsb
pop
cli
int3
sbb
sti
sbb
lret
repnz
mov
inc
loop
jp
lret
outsb
loop
das
pop
outsb
outsb
push
cli
rorb
sbb
xor
shlb
ds
pop
xor
aad
aam
out
mov
add
jp
or
repnz
sub
inc
cmp
mov
pop
add
mov
jp
add
sub
or
outsb
mov
in
inc
dec
push
pusha
xor
bound
mov
mov
cli
outsb
test
inc
repnz
outsb
fdivs
pop
pop
stos
lcall
pop
xor
pop
dec
jno
cmp
test
push
sub
push
mov
addr16
mov
push
cmp
aad
insl
fidivl
rorl
js
mov
call
fildl
push
push
mov
mov
xchg
xchg
jno
fldcw
pop
or
mov
mov
ficoml
push
daa
add
sub
push
shlb
pop
mov
inc
pop
cmc
sahf
and
cmc
sahf
add
cmc
sahf
loop
nop
dec
icebp
ret
icebp
mov
repnz
hlt
or
sub
pop
loopne
pop
jp
dec
mov
sbb
and
inc
mov
cmp
movsb
cmp
jmp
stc
jg
jmp
hlt
das
lret
pop
pusha
sarb
mov
jp
stos
push
lahf
cmp
ficomps
adc
or
push
sub
pop
jns
and
inc
sub
cmp
cs
das
jno
pop
and
jg
sbb
push
pop
clc
jmp
pop
mov
pop
xchg
or
lret
fwait
jo
dec
clc
jb
fidivrl
bound
pop
pop
jg
push
fists
jno
xor
pop
icebp
rol
adc
jl,pt
cmc
popf
repnz
ljmp
push
jp
jmp
jg
pop
pop
out
push
inc
cli
es
mov
xchg
outsb
mov
pop
pop
jb
jp
jno
mov
fwait
jle
inc
push
stos
addr16
dec
jb
nop
pop
dec
repnz
nop
or
ret
dec
repnz
pop
mov
adc
fucomp
xchg
mov
jp
dec
inc
inc
es
mov
and
sbb
pop
sbb
pop
add
cli
inc
mov
repnz
and
jmp
shl
cmp
pop
ret
mov
icebp
mov
inc
pop
push
inc
movsb
sub
mov
sub
jp
xor
lret
dec
lods
cmp
pop
or
ret
repnz
xor
pop
xchg
or
jae
push
lret
cmp
jmp
dec
lret
inc
or
or
fs
pop
lcall
stc
jge
xor
jl
es
jnp
sbb
cmp
icebp
js
out
ja,pt
stc
jbe
rcrb
cmp
icebp
je
mov
jae
divl
pusha
mov
jo
inc
mov
negl
pusha
insl
ds
insb
stc
inc
jo
pop
cmp
push
sub
ds
stc
pshufw
cmp
repnz
gs
stc
jo
pop
enter
pop
push
or
aas
clc
ficoml
mov
pop
xchg
dec
icebp
bound
mov
dec
cli
mov
cli
mov
cli
mov
cli
mov
cli
mov
cli
mov
pop
movsb
pop
fs
pop
mov
pop
mov
insb
pop
fs
pop
fs
pop
fs
pop
fs
fs
sbb
or
cld
pop
fs
pop
fs
rcrb
les
mov
fs
mov
pop
mov
test
ljmp
mov
pop
xor
sbb
push
orb
jmp
cmp
in
add
inc
in
push
mov
push
add
mov
jp
jle
push
mov
inc
cmpsb
js
cli
sub
mov
out
xor
mov
adc
push
cmpsb
sub
xchg
pop
cli
jp
repnz
outsl
dec
ljmp
sbb
cmc
sahf
mov
stos
pop
outsb
mov
sub
cmpsb
outsb
scas
pop
loopne
dec
repnz
mov
push
adc
and
jg
cmp
andl
add
or
ljmp
movsb
cmp
pusha
imul
jb
dec
lret
or
pop
or
scas
or
inc
adc
or
add
jns
sub
subb
movsl
inc
and
pop
insl
mov
pop
pop
jno
repnz
or
or
testb
testb
and
jo
adc
dec
fs
adc
leave
sub
pop
mov
adc
scas
testb
out
andb
add
stos
mov
pop
lret
dec
addr16
xchg
cmp
xchg
jl
pop
sbbb
icebp
imul
inc
push
cmp
dec
cmp
inc
xor
cmpb
and
pop
lods
cmp
pop
fs
pop
outsb
in
mov
push
xor
mov
pop
mov
stos
mov
jg
cmpl
lods
pop
pop
insl
mov
pop
push
mov
cmp
inc
daa
push
add
cmp
mov
ss
hlt
cmp
cmp
loop
fisubl
das
iret
jp
icebp
mov
dec
push
cwtl
mov
cmpsb
mov
dec
xchg
mul
lcall
push
sub
dec
cmp
xchg
push
sbbb
in
pop
inc
adc
sub
add
lcall
dec
jb
nop
dec
dec
out
mov
pop
stc
jp
ss
cmp
pop
repnz
jmp
das
xor
pusha
sub
cs
ss
fsubrl
or
hlt
das
call
adc
rcrb
inc
adc
sahf
sbb
pop
xchg
icebp
sbbb
bound
dec
fcmovb
cmp
xchg
jp
ja
inc
push
push
cmp
pop
push
xor
or
shrb
scas
xchg
inc
cmp
pop
cmp
add
jnp
and
fstpl
lock
add
jns
pop
pop
jg
cli
jno
dec
inc
test
repnz
sahf
faddl
sarl
loop
mov
pop
xor
xchg
icebp
lcall
jbe
inc
sbbb
adc
cmpsb
cmp
add
cmp
adc
mov
insl
ljmp
cli
out
jbe
repnz
ret
jp
push
cmp
xchg
dec
jle
mov
fs
outsb
pop
jb
push
fistps
jp
inc
cmpsb
xor
pop
mov
mov
mov
pusha
jg
mov
stc
lcall
mov
sub
inc
in
sub
cmpsl
inc
jg
or
inc
mov
pop
inc
adc
cmpsb
lcall
push
idiv
cmp
push
pop
sub
push
hlt
mov
and
sub
clc
call
mov
inc
repnz
das
out
mov
rcrb
xor
pop
mov
mov
adc
mov
jp
movsl
idivb
je
imul
mov
push
movsl
es
xchg
inc
cmp
jg
and
ja
xor
cli
xor
mov
mov
repnz
pop
rcrb
and
mov
popa
repnz
push
inc
push
loop
lock
cmp
rcl
sbb
adc
fldt
rclb
pop
xchg
push
stc
mov
popa
or
jb
jmp
dec
ljmp
dec
aaa
hlt
cmp
stc
sbb
adc
repnz
das
ljmp
cmpb
bnd
pop
mov
mov
cli
pop
inc
cmpsb
mov
pop
lods
aas
bound
mov
mov
pusha
jle
xchg
xor
cmp
nop
mov
es
sarb
sub
or
dec
sbb
repnz
or
pusha
sbb
ret
mov
xchg
xchg
push
xchg
push
repnz
insb
mulb
imul
repz
jo
mov
aas
cmp
xor
div
sub
mov
or
repnz
fdivrl
mov
mov
pop
movsl
mov
mov
mov
jno
sbb
jno
pop
jno
push
jno
inc
jno
cmp
stc
das
jo
pop
and
pop
icebp
sbb
ds
add
pop
pop
clc
cmp
in
pusha
pop
loop,pt
stc
xlat
jo
pop
int3
cmp
shll
mov
stc
stos
jo
pop
mov
pusha
push
mov
jg
out
dec
mov
mov
pop
lret
pop
inc
mov
and
pop
or
in
mov
sarl
mov
pop
cmpsl
mov
mov
outsl
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
stos
jb
sbbb
add
testb
testb
testb
testb
ret
out
cmc
xor
cmc
sahf
xchg
pcmpgtd
jo
cmpsl
jp
sahf
xchg
jno
push
mov
inc
data16
xchg
push
sbbb
push
repnz
sahf
lret
loop
mov
cmp
cmpsb
aas
mov
popf
sti
jno
sti
icebp
add
inc
sti
icebp
fcmovb
and
ds
sahf
add
jbe
into
pushf
adc
popf
push
adc
in
testb
testb
iret
sub
rcrb
pop
fs
pop
fs
pop
fs
pop
mov
jle
mov
cli
mov
push
jp
pop
dec
fs
cmp
sub
sbb
or
cli
fs
push
ljmp
push
lret
push
mov
and
cmp
mov
testb
lret
dec
adc
mov
dec
ja
fwait
data16
cmp
push
pop
jbe
dec
pop
insb
cli
sub
push
shlb
dec
sub
mov
push
adc
cmc
sahf
add
cli
dec
js
lcall
push
sbb
adc
cmpsb
dec
push
jp
nop
push
inc
test
mov
jb
imulb
push
pusha
bound
push
insl
pop
or
aad
and
sub
sbb
in
push
cmp
nop
add
jae
cmp
mov
pop
xor
ret
hlt
fwait
jo
dec
icebp
mov
into
mov
mov
or
or
push
pop
xchg
inc
dec
subb
inc
pop
daa
shlb
jno
cmpsb
mov
leave
add
insl
mov
mov
mov
ret
mov
nop
mov
dec
lret
sub
repnz
push
loop
popa
pop
mov
mov
inc
in
pop
loop
and
dec
pop
adc
cli
adc
sahf
rclb
pop
rcl
sahf
stos
xor
xchg
xchg
icebp
sbbb
jp
xor
lcall
pop
or
jle
mov
mov
subb
andb
mov
add
jb
cli
nop
repnz
mov
mulb
mov
xor
xchg
icebp
bound
xor
xchg
add
sub
ljmp
jb
call
sbb
jb
xor
or
arpl
cmp
pushf
xor
pop
test
adc
or
xor
or
dec
push
xchg
outsb
ret
xor
sbb
xor
adc
imul
lcall
ret
add
rorb
jle
lret
add
cmpl
sub
xor
jb
mov
inc
xchg
mov
sub
inc
jb
hlt
in
mov
pop
ficoml
or
cmc
mov
loop
aas
xchg
mov
outsb
pop
cmp
nop
push
fs
push
adc
data16
addr16
or
mov
mov
popa
lret
adc
sahf
xchg
adc
out
mov
das
adc
jb
repz
fiaddl
push
icebp
dec
inc
into
pop
aas
jb
xor
cmp
or
or
in
adc
icebp
loop
fisubrl
cmpb
ret
xchg
cs
mov
aad
adc
xchg
add
push
pop
subb
push
pop
sub
addr16
mov
jno
lret
jle
ljmp
dec
rol
in
pop
cmp
nop
mov
pop
lret
push
mov
stos
jno
fimull
push
sbb
dec
inc
jp
hlt
cmp
push
and
lret
sub
out
out
xchg
sub
shlb
and
cmpb
or
rclb
insl
popf
sub
rcl
cmp
fidivrl
pop
stos
and
bnd
lret
lods
sbb
jb
sti
jno
jp
mov
sub
jb
mov
in
mov
shlb
ljmp
add
jb
or
mov
xchg
sub
sbb
adc
pop
pop
mov
imul
xor
adc
in
pop
fs
pop
or
sti
pop
fs
pop
sbb
or
testb
testb
testb
testb
testb
testb
leave
and
pop
sub
jb
mov
adc
icebp
push
mov
cmp
out
cmc
dec
sbb
cmc
popf
add
mov
fucompp
jp
aaa
dec
jno
sub
mov
lret
jp
pushf
xchg
push
dec
subb
insb
nop
or
stc
test
xor
mov
add
mov
mov
xor
pop
add
add
mov
cli
loop
ficoml
cmp
sahf
ret
fs
nop
mov
icebp
push
aad
cmp
pop
mov
bound
insb
loop
daa
cmc
mov
push
mov
popa
jp
and
ds
jle
or
xor
or
ljmpw
stc
aam
hlt
cmp
mov
jg
push
xchg
push
xchg
push
fdivl
dec
bound
lret
cmp
mov
icebp
es
mov
icebp
es
mov
icebp
es
mov
icebp
es
mov
or
sub
les
pop
bound
pop
ss
dec
jp
lea
popf
pop
push
pop
and
push
adc
pop
add
notl
loop
icebp
loop
or
adc
or
cs
pop
jle
dec
cmp
xor
incb
adc
push
mov
dec
jno
cmp
cli
cs
and
js
cli
cmp
cli
pop
sbb
aaa
pop
pop
lcall
fwait
jle
dec
dec
cmc
sahf
bound
cmc
sahf
inc
inc
cli
cmc
sahf
and
jg
sarb
and
adc
dec
insb
cli
push
ja
mov
mov
andb
mov
pop
lods
cmp
dec
mov
stos
hlt
das
mov
lods
repnz
push
mov
pop
mov
pop
dec
lret
push
adc
aas
jae
xchg
or
popw
hlt
cmp
and
mov
ja
repnz
or
mov
lcall
imul
in
pop
outsb
ret
mov
jns
jbe
fstl
lock
ss
mov
mov
mov
sbb
push
jno
mov
inc
cmp
andb
mov
jmp
dec
icebp
and
xor
inc
add
push
repz
jmp
repz
clc
aad
sbb
jmp
mov
cmp
fwait
sbb
or
mov
lcall
daa
pop
inc
xor
add
or
inc
mov
jp
data16
cmp
pop
cmp
xor
repz
outsl
cmp
movsb
pop
pop
xchg
mov
mov
jle
cmpsb
jmp
hlt
cmp
xchg
pop
jo
pop
dec
cmp
inc
mov
and
mov
cmc
mov
mov
int
icebp
ret
loope
fs
pop
outsb
movsb
adc
mov
lret
mov
xchg
cmp
cmp
mov
xchg
pop
mov
cmp
rolb
sub
nop
es
cs
push
pop
cli
or
add
icebp
lret
hlt
aas
mov
popa
xchg
mov
jle
mov
lret
sub
mov
push
add
sub
js
push
mov
int
jno
pop
fidivl
cmp
in
pop
cmpsb
xchg
mov
cli
cmp
nop
xchg
inc
mov
push
test
clc
add
cmp
sbb
icebp
push
push
fstpl
stos
or
in
pop
pop
xor
jae
pop
or
jae
xor
into
jae
or
mov
cmpsb
jae
mov
cmc
mov
push
adc
pop
inc
or
pop
sbb
inc
jae
repnz
jae
lret
outsb
jge
mov
jecxz
inc
sbb
mov
cmp
mov
sbbb
ss
mov
add
ljmp
xchg
cli
sbb
xor
jnp
subb
sbb
out
adc
int3
sub
cmpsb
std
aas
pushf
in
pop
repz
outsl
dec
pop
fcmovbe
icebp
pop
xchg
jnp
adc
addr16
mov
add
arpl
add
cmc
sahf
sahf
inc
popf
push
push
xchg
jae
dec
push
fs
mov
sbb
dec
gs
cmp
outsb
jae
int3
jmp
fisttps
inc
lods
mov
adc
push
sub
lea
xor
jae
push
sahf
pusha
sbb
repnz
sub
push
add
adc
fimull
jae
mov
ljmp
or
mov
nop
scas
fs
nop
lcall
xchg
jp
adc
jp
jbe
sbb
sub
pop
pop
mov
dec
data16
adc
cmp
mov
push
pop
sbb
or
pop
pop
add
repnz
mov
mov
push
push
xchg
add
cmp
clc
mov
cmc
andb
mov
sub
push
sbb
fs
cmp
aaa
add
lret
pop
mov
stos
scas
inc
dec
adcb
roll
je
pop
shlb
fs
nop
push
fs
nop
or
jo
dec
lock
adc
in
sub
nop
lret
pop
push
adc
mov
mov
repnz
fisttpl
pop
clc
jnp
push
stc
shlb
add
sarb
mov
adc
inc
or
cmp
push
sub
addr16
mov
mov
jp
lcall
push
outsl
pop
cmp
popa
cmpb
lods
aas
stos
mov
mov
sti
dec
pop
push
adc
pop
pop
or
pop
xor
inc
data16
addr16
xor
cmp
xchg
cli
cmp
mov
xchg
or
push
pushw
hlt
cmp
and
dec
jno
ficoms
pop
pop
fiaddl
cli
mov
addr16
sbbl
mov
and
jp
pop
cmp
mov
xor
jb
sub
pop
add
dec
push
sti
icebp
rol
push
hlt
aas
es
pop
cli
leave
mov
into
sahf
outsb
cmc
mov
pusha
jno
xor
lods
cmp
mov
push
outsb
outsb
jge
mov
jge
push
push
jp
pop
cmpb
icebp
jg
cmp
dec
subb
es
daa
rorb
jno
mov
outsl
cmp
pop
or
mov
or
out
cld
sub
rol
orb
push
jo
or
jb
inc
les
lret
les
movsb
in
or
icebp
fiadds
rcl
mov
jle
aad
push
mov
pop
repnz
mov
inc
mov
addr16
cmc
sahf
bound
cmc
sahf
dec
inc
mov
sahf
jg
pop
or
outsb
jp
sbb
add
popf
push
pop
sahf
ljmp
add
aaa
push
adc
pop
fdivrl
jmp
pop
insl
mov
rcll
mov
cli
repnz
nop
cli
dec
ljmp
xor
jl
in
push
dec
mov
pop
mov
addb
sarb
cmpb
inc
decb
push
divl
add
ret
das
fisubrl
popa
lret
mov
lea
notb
add
push
sarl
sub
orb
ficoml
popa
push
sahf
mov
pop
or
or
add
bound
add
lret
xor
add
ljmp
pop
jbe
into
push
rcr
pop
cmpl
mov
sahf
popa
xor
testl
pop
shlb
push
push
lods
cmp
jle
jb
jbe
mov
xchg
mov
sbb
cmp
insl
mov
jp
ficoml
add
int
ljmp
sub
sub
jmp
outsl
jp,pn
xor
sbb
shr
loop
pop
clc
jge
push
jp
in
and
nop
fsubrp
pop
mov
inc
cli
pop
aad
sbb
pop
outsb
mov
out
mov
cli
dec
cli
jbe
adc
addr16
mov
jo
jmp
pushl
and
sub
add
rorb
and
mov
mov
fidivrs
lret
into
popw
rcr
ud2
mov
loope
jb
xchg
or
mov
xchg
add
jp
jmp
js
or
or
repz
and
outsb
mov
lods
pop
or
shrl
fiaddl
or
sahf
pop
pop
pop
divb
mov
arpl
dec
std
sub
inc
pop
icebp
cli
mov
arpl
icebp
subl
icebp
pop
mov
adc
mov
mov
jbe
dec
mov
repnz
dec
push
mov
and
icebp
jp
xchg
jg,pt
cmp
cli
lret
push
sbb
jb
mov
test
stos
xor
sti
int
sub
pop
cmp
adc
sti
aaa
ret
bnd
outsb
sub
jb
adc
xchg
dec
cmp
sub
xchg
lcall
jo
push
in
xchg
push
out
lahf
jp
mov
subb
jb
dec
jb
xchg
jb
stos
pop
pop
mov
icebp
sarb
dec
out
fcomi
das
pop
cmp
jp
imul
shlb
icebp
jg
mov
adc
clc
jge
call
push
cmp
adc
inc
jb
jb
stc
lret
fdivrs
fidivs
rcl
pop
push
lret
cmc
popf
mov
mov
clc
imul
mov
sahf
push
sub
arpl
sahf
rclb
ret
stos
push
jb
fcompl
mov
aam
or
stos
loop
and
sub
jae
cli
inc
rcrb
push
adc
div
shlb
sub
pop
rclb
jg
jp
push
mov
popa
adc
xchg
sub
push
dec
imulb
stc
ja
test
and
imul
shll
or
cmp
aad
mov
and
pop
jnp
jno
and
out
andl
scas
or
fisubl
mov
andb
push
lret
test
lea
adcb
add
ja
cmp
mov
int3
mov
mov
push
jb
enter
pop
xor
inc
lcall
jg
jb
rolb
fiaddl
mov
push
mov
adc
fwait
sub
cltd
ja
xchg
nop
cmp
xchg
mov
sar
imul
jnp
je
mov
cmc
ret
ficoml
xorb
add
cwtl
push
xchg
dec
sbbb
dec
pop
sub
in
xchg
jne
mov
fwait
sbb
pop
outsl
adc
loop
push
adc
add
jne
dec
loope
adc
pop
mov
adc
mov
and
cmpsl
das
dec
loop
loope
or
out
jnp
xorb
add
xor
rorl
pushf
iret
adc
lock
pop
outsl
loopne
jg
mov
repnz
push
out
sahf
inc
mov
and
jp
xchg
pop
iret
in
pop
test
adc
fcomip
jg
xchg
jle
dec
dec
add
hlt
cmp
and
js
pusha
jns
loopne,pt
stc
push
jb
mov
jno
divb
fisubrl
jl
lods
sub
shlb
mov
shll
jno
stc
cs
jns
pusha
push
ds
fcompl
cmp
and
push
ds
xor
and
sbb
cmp
icebp
mov
sahf
fstpl
add
fdivrl
pop
mov
pusha
out
add
stc
sub
pop
dec
cmp
add
jmp
outsl
mov
jns
ds
stc
jo
pop
sbb
and
ss
dec
bound
jle
mov
sbbb
mov
idiv
or
pop
and
sub
ss
inc
ds
pop
stc
outsb
imul
jns
pusha
lods
ds
pop
pop
dec
imul
push
pop
pusha
jns
ds
aad
pshufw
xor
inc
icebp
push
pusha
je
test
or
movsb
mov
pop
hlt
cmp
icebp
es
inc
ds
insb
stc
jl
mov
sbbb
pusha
aam
in
stc
add
pop
sbb
sub
cmp
dec
ds
insb
stc
jp
mov
sbbb
mov
out
pop
add
adc
es
xor
inc
push
stc
bound
push
jno
xchg
fldenv
ds
out
pop
pop
cmp
cli
clc
jmp
ljmp
test
xchg
push
push
sub
jns
push
cmp
xor
pop
icebp
repnz
fidivl
pop
lods
cmp
je
ds
sar
loopne
repnz
icebp
xor
ds
push
call
pop
les
aam
out
pusha
cld
or
stc
sub
pop
dec
cmp
pusha
sbbb
cmpsb
jns
ret
fdivs
pop
hlt
cmp
xor
push
jb
dec
xchg
sub
jns
enter
loope
jno
jns
stc
jle
jnp
in
cmp
andb
ja
stc
push
jno
outsb
cmp
jns
js
leave
jbe
add
ss
adc
ret
testb
scas
push
ljmp
sub
or
loope
hlt
jns
pop
cwtl
cmp
icebp
mov
loopne
ljmp
xor
sbb
cld
icebp
in
pusha
fdivrs
lret
cld
jmp
icebp
jns
push
outsb
pop
or
sbb
jns
pop
mov
push
cmp
sub
push
adc
jno
roll
mov
jp
icebp
scas
pusha
mov
jo
pop
and
xor
inc
pusha
pop
outsb
cmp
roll
cmp
mov
lcall
cmpsb
pusha
mov
stc
loopne
ljmp
pusha
and
xor
pop
jo
pop
jl
xchg
jecxz
mov
ds
jo
pop
add
adc
es
ss
dec
stc
pop
jo
push
mov
xchg
pusha
cwtl
ds
stc
lret
pop
ljmp
ds
cmp
pop
push
cmp
insb
adc
xchg
in
sahf
jo
pop
mov
pusha
in
ds
or
sbb
pop
xor
inc
icebp
push
pusha
pusha
outsb
jl
mov
add
cmp
aad
mov
pusha
cmpsb
ds
jns
jo
pop
xor
and
or
ds
stc
mov
movsb
pop
xchg
cmp
fs
push
ds
cs
sbb
or
icebp
pusha
ds
test
inc
push
pop
jns
push
jno
xchg
fisubl
ds
stc
clc
jo
popa
shrb
cmpb
icebp
mov
sarb
loop
cld
jo
pop
and
cmp
dec
pusha
pop
outsb
cmp
in
add
insb
punpcklbw
outsb
pop
jns
cli
mov
inc
jge
jb
xor
jno
sbb
add
stc
jo
or
test
shl
jns
iret
xorb
adc
jnp
ret
jns
xchg
into
push
stc
jo,pt
pop
loopne
push
hlt
jns
cmp
ds
jle
push
insb
jns
or
insb
lret
ss
xchg
mov
data16
push
fwait
push
ss
pop
jne
std
xor
call
adcb
mov
inc
test
sub
cli
adcb
and
mov
and
sub
andl
fbstp
sbb
mov
subb
fsubl
mov
pcmpgtw
lock
sub
adc
in
inc
or
jbe
aaa
xchg
xchg
pop
mov
je
and
pop
arpl
cmp
lret
and
int
es
orb
mov
inc
popa
loop
aam
ja
sub
cmp
rcll
outsl
or
jnp
or
jg
test
aam
mov
mov
aaa
fisttps
out
loop
sti
xorl
ds
mov
push
jg
lds
sub
cmpsl
push
adc
jb
addb
rcl
xchg
inc
adc
fdivs
push
sub
scas
add
jl
inc
js
and
sbbb
subb
jb
int3
fisttpll
mov
dec
jg
sbb
movsl
stos
loope
lret
sub
jg
sub
push
or
add
jo
shlb
push
loopne
dec
dec
loop
je
and
sbbb
das
jecxz
int3
sbb
jb
jnp
add
or
ja
and
mov
notb
xchg
or
das
cmp
xor
sbb
mov
sahf
data16
xchg
les
stc
cmpsb
sti
out
test
mov
nop
data16
jno
stos
xorb
out
jo
sbb
ret
sub
andb
and
loopne
adc
or
loop
sahf
xor
subb
iret
das
andb
movsb
or
fwait
xchg
cmc
cwtl
xor
test
fiadds
pushl
aaa
ret
frndint
sub
jg
add
mov
addb
or
movsl
arpl
push
xchg
and
call
pop
in
orb
add
imul
xor
pop
incb
lods
push
xlat
jge
shll
icebp
fiaddl
adc
cmpl
scas
sbb
pushf
xchg
aaa
mov
out
out
push
jg
lgs
je
movsl
sbb
cmpb
jnp
inc
jnp
clc
mov
loope
int
pushf
inc
stos
ja
jg
xchg
mov
fildl
cli
mov
inc
fldl
add
dec
mov
mov
dec
adc
ss
mov
in
pop
ficomps
inc
jo
sub
jmp
movsl
mov
in
push
ret
adc
out
dec
test
adc
aas
data16
jle
cmp
and
fadds
out
adc
shr
andb
cli
add
pop
dec
shlb
aaa
out
cmpl
lods
xchg
gs
fdivr
cmpsb
les
xlat
pop
sahf
orb
push
es
jge
mov
in
ret
out
bound
xchg
jae
add
or
mov
enter
inc
cmpsl
adc
jmp
sbb
jg
int3
mov
movsb
add
popa
data16
pop
mov
inc
addb
jae
andl
cmpb
add
inc
or
xor
add
xorb
cmp
jge
inc
jle
rcr
rol
push
dec
iret
andb
insl
xor
std
bound
fisubs
subb
sbb
sbb
add
mov
repnz
std
ja
sbb
int
pop
sbb
or
dec
jns
sbbb
iret
sahf
cmpsb
xor
lods
push
pop
sbb
ss
popl
xor
incl
fists
pop
mov
pushf
sub
and
pop
jb
sti
mov
xchg
imul
dec
sbb
inc
xor
push
cmp
bound
xor
cld
mov
addb
fs
sub
imul
in
stos
sti
or
adc
rorb
xor
add
push
andb
repnz
jo
cmp
or
popa
test
arpl
sbb
inc
push
jmp
sti
ja
mov
mov
pop
jmp
adc
jb
cmpl
xor
movsl
sbb
lret
arpl
testl
out
jns
mov
mov
pop
inc
pop
fwait
ljmp
cmp
call
clc
incb
orb
xchg
jno
xor
mov
jns
scas
mov
or
xorb
ffree
je
ljmp
cld
adc
pop
mov
inc
add
roll
subb
dec
mov
in
out
and
stos
mov
mov
divl
mov
cmp
mov
and
push
inc
xchg
ror
pop
push
lahf
pop
mov
addb
lcall
mov
inc
ret
mov
and
stos
push
out
push
mov
movb
inc
ljmp
xchg
cmpb
adc
mov
pop
inc
mov
or
es
or
lcall
dec
add
rolb
xlat
pop
ss
cmpb
ret
add
mov
into
pop
lods
int3
andb
mov
dec
jl
xorb
inc
xchg
adc
ret
arpl
movsl
add
int
ljmp
mov
aad
or
add
mov
jbe
repnz
lcall
loopne
rcll
jle
xorb
nop
inc
pop
inc
sub
cmpb
cmp
lahf
jae
cmp
fidivl
bound
ret
pop
outsl
iret
cmp
jnp
jg
fdivs
sahf
iret
stos
mov
adc
lcall
mov
adc
add
push
mov
imul
add
movl
push
mov
aam
push
insl
sbb
ljmp
or
aad
pop
sub
xchg
add
mov
inc
and
js
push
xchg
pop
push
mov
adc
fwait
xor
es
lea
ds
ret
or
mov
dec
sub
jge
nop
inc
pop
rorl
xor
out
daa
test
lcall
jg
jae
mov
jb
mov
or
popa
idivb
xchg
icebp
repz
jns
lds
orb
adc
adcb
add
fsts
jl
fsubl
xchg
inc
inc
les
je
pop
jno
xor
pop
je
andb
pop
test
jns
lret
out
adcb
outsb
mov
dec
repnz
cltd
inc
jp
int3
jg
mov
add
add
sbb
cmp
je
mov
pop
leave
stc
dec
subb
inc
mov
dec
addb
clc
jae
adc
xchg
xorb
xchg
jbe
testl
rcr
inc
jne
add
jae
data16
mov
dec
ss
dec
and
subb
cmp
pusha
sbb
stos
jbe
cmpsb
ja
mov
cmp
lret
fidivrl
sahf
xchg
jbe
xor
mov
push
in
jge
or
cmpsl
jl
jns
push
loop
daa
stc
ret
inc
stos
xorb
sub
lds
cwtl
je
ljmp
dec
cmpsb
negb
jbe
cwtl
inc
subb
push
lret
insb
jno
int3
dec
popl
imul
xchg
shll
push
or
push
fisubl
in
sbbl
sub
xchg
xchg
dec
fpatan
je
cmp
and
fwait
stos
and
pop
jae
pop
cwtl
and
push
push
dec
cmp
cmpb
fiadds
or
lds
xchg
inc
cmp
sbbb
push
push
orb
aad
es
dec
xorb
call
pop
cmp
adc
inc
add
adcb
test
cmp
mov
xorl
dec
mov
xorb
adc
orb
jle
aaa
sub
in
jg
ret
cmpsl
inc
dec
push
sahf
mov
jecxz
add
into
sti
inc
push
xchg
cmp
bound
pop
fisubs
pop
cltd
out
inc
repz
push
les
aam
xor
cwtl
jg
xor
jmp
fdivs
jns
cmpsb
test
cmc
das
push
add
xchg
xchg
je
cmp
pop
xchg
lods
es
pop
cltd
sub
adcb
sbb
sbb
xchg
inc
scas
fwait
cwtl
jo
push
les
push
insl
jnp
lahf
std
aad
and
testl
inc
jecxz
sti
inc
data16
xor
mov
clc
ret
andb
addr16
sbb
nop
outsb
jae
shll
xchg
in
xor
pusha
ret
adc
sbb
mov
sbbb
push
lods
subb
mov
cmp
rorl
popf
and
jge
sbb
sti
leave
add
fs
lods
inc
cmpsb
clc
fstpt
repnz
jno
je
jp
imul
sti
xor
addb
cmp
pop
in
stos
out
cmpl
add
lods
push
addb
dec
fxch
fdivrs
stos
cmp
jle
ret
cmpsl
adc
mov
subl
xor
mov
cmpl
jae
mov
push
enter
inc
data16
jle
lret
adc
xchg
push
mov
in
clc
rcl
mov
cld
push
jmp
mov
dec
push
xorb
orb
enter
imul
mov
loop
dec
leave
adc
fs
negl
mov
push
adc
or
jne
cmp
subl
jg
ret
xchg
and
and
es
jnp
inc
jno
les
and
push
dec
pushf
xorb
mov
add
or
test
ss
add
xor
lcall
push
sti
pusha
adc
pop
jnp
mov
sub
xchg
lret
test
jae
cmp
and
ret
ret
aad
mov
aas
push
mull
ret
subb
pop
cwtl
aad
inc
add
aas
es
ret
call
inc
fs
jb,pn
js
scas
sbb
xchg
inc
pop
andb
add
movsb
mov
call
jnp
add
nop
stos
aam
ror
test
xorl
inc
add
and
add
cmp
jg
mov
pop
or
repnz
mov
jnp
popa
adc
mov
mov
sbb
and
repz
xor
subb
arpl
jns
inc
into
jle
sahf
mov
imul
or
xchg
xchg
ret
mov
aam
mov
test
sub
xor
in
rcrl
sub
shr
or
adcl
mov
jl
stos
stos
push
sub
sbb
shrb
mov
inc
mov
arpl
mov
stos
ss
aad
faddl
mov
imul
or
mov
dec
mov
jne
jp
xchg
lret
xor
aas
add
sub
add
popa
lock
and
in
dec
xchg
and
mov
out
addr16
mov
adc
and
xchg
lcall
in
icebp
js
mov
iret
mov
fdivl
jmp
adc
scas
push
sub
cwtl
je
stos
lea
insb
daa
orb
and
imul
test
imul
out
popf
add
jg
add
adc
test
jnp
add
imul
sub
aad
iret
xchg
test
cwtl
pop
jmp
mov
inc
sbb
jg
and
nop
mov
pop
enter
pop
fcmove
lods
roll
adcb
cld
add
pop
pop
outsl
jb
nop
gs
pushf
mov
test
popa
lret
fs
cmp
loop
fdiv
cmp
mov
adc
call
int3
xorl
pop
jo
insl
cmp
je
and
mov
mov
in
cwtl
and
xchg
flds
inc
pop
mov
popf
jae
mov
je
push
inc
aad
xorb
dec
push
in
imul
pop
orb
jge
inc
into
xchg
in
dec
jb
loop
repz
stc
test
test
cltd
mov
dec
lods
and
inc
pop
arpl
sqrtps
ficoml
shrl
stos
cli
imul
popa
mov
push
sbb
inc
push
cmp
adc
add
or
mov
data16
inc
test
imul
ffree
jns
rep
add
inc
sub
loop
dec
push
std
out
mov
insb
lods
enter
mov
rolb
cmp
test
insb
scas
mov
stc
cmpsl
icebp
add
jg
pop
add
sbb
ja
add
fsubrl
ret
je
adc
insb
and
and
bnd
addb
sbb
inc
test
js
mov
jnp
xor
scas
test
in
in
bound
fsubrs
arpl
sub
push
jbe
add
xlat
pop
xor
push
mov
cmp
jns
or
je
adc
mov
cmpsl
or
daa
xchg
addr16
pop
cwtl
and
jle,pt
jl
mov
sti
lock
loopne
jnp
sub
ret
orb
sbb
popa
xor
aaa
jo
andb
jb
data16
sbb
dec
mov
xor
mov
adc
mov
sub
add
addl
cld
jnp
jb
push
stc
and
and
mov
sarb
ret
jmp
xor
jae
push
sub
stos
xlat
lcall
pop
subb
data16
cmpsl
fs
imul
cmp
sub
movl
push
cld
mov
push
lahf
dec
jl
and
and
cs
or
test
adc
dec
ret
setp
addb
bound
orb
or
rolb
sub
xchg
jg
adc
repz
sbb
enter
jnp
filds
cld
dec
ret
ret
addb
inc
push
or
adc
fcomi
inc
or
cmpb
or
sti
dec
adc
mov
mov
repnz
es
test
and
mov
test
add
xchg
dec
xorb
ja
adc
xor
sub
imul
cwtl
inc
adcb
popf
aaa
inc
inc
mov
rcll
mov
xor
mov
int3
or
subb
dec
and
xchg
xchg
pushf
push
testb
in
out
rcll
xchg
mov
push
jno
pop
enter
cli
inc
dec
out
adc
test
and
pusha
add
mov
dec
xchg
mov
add
ret
out
ret
xor
and
xchg
xchg
in
outsl
bndldx
iret
and
adc
imul
lock
roll
and
sub
ret
sti
sahf
jecxz
mov
jg
lret
popf
mov
xchg
add
addb
adc
cmpb
xor
add
lock
and
mov
mov
arpl
jnp
mov
mov
jnp
mov
push
inc
cmc
and
iret
frstor
bound
jg
lods
adc
outsl
fldl
mov
inc
adc
adc
movsb
dec
inc
add
xor
mov
push
stos
jb
mov
lods
jnp
pop
inc
imul
adcb
mov
in
or
jae
jo
ljmp
lock
in
xchg
andl
lret
jae
xchg
cmp
lock
or
cmpb
mov
callw
adc
and
mov
lcall
sbbb
push
cs
sarb
je
rorl
xor
jp
sub
jmp
fldt
inc
in
shl
sbb
and
iret
stc
in
mov
and
dec
jmp
xor
add
xor
pop
in
jns
ret
push
lea
ret
sbbb
xchg
or
xchg
pusha
filds
push
xor
xchg
sbbl
jnp
push
push
and
cmp
decb
shlb
enter
push
ja
dec
les
mov
pop
nop
jmp
das
and
in
add
inc
xchg
inc
push
or
scas
in
mov
or
adc
or
dec
mov
icebp
in
mov
jne
add
insb
xor
cmp
jbe
pop
mov
stos
cmpb
jno
enter
fsubr
jp
jnp
outsl
mov
addb
push
jg
inc
scas
cltd
push
fwait
adc
jmp
call
dec
jge
adc
xchg
movb
add
inc
cltd
xchg
fs
ret
inc
mov
mov
enter
mov
movsb
sbb
adc
lea
cmp
lock
lods
fisttps
imul
orb
xchg
mov
and
fcoml
xchg
daa
scas
imul
push
or
push
xorb
push
or
xorb
mulb
push
nop
jo
ret
sbbb
cmp
gs
sbb
mov
out
add
sbbb
stc
xor
sbb
in
inc
add
adc
mov
sub
cmpb
scas
xor
ret
bound
bound
inc
inc
mov
sub
outsl
xor
aaa
ret
mov
testb
xorb
xchg
andb
sbb
pop
addb
push
mov
jg
cltd
xchg
scas
jno
outsb
lcall
outsl
mov
adc
sbb
mov
insl
dec
adc
jb
fldenv
mov
mov
dec
lret
subb
cld
or
and
sarb
ds
mov
popf
inc
xchg
inc
lahf
jg
push
cltd
push
mov
xchg
jbe
inc
push
mov
in
jg
inc
and
mov
test
fwait
pushl
jnp
add
sub
inc
adcb
subb
cld
movsb
sub
dec
add
test
adc
lds
gs
push
cmpb
or
pop
and
xchg
popf
mov
mov
push
gs
inc
andb
ja
arpl
dec
mov
jl
out
movb
inc
imul
out
int
cmpsb
xor
push
adc
mov
adcb
jnp
xchg
dec
subb
sti
adc
aad
test
insb
arpl
hlt
cmpps
or
xchg
xor
sub
cs
addr16
inc
add
andl
pop
mov
mulw
xchg
sbbb
mov
repz
stos
ret
insb
js
outsb
negl
fwait
addb
sbb
shlw
dec
xor
sbbb
fdivrs
adc
andb
sbb
jnp
jge
mov
cld
xor
dec
lods
push
push
bound
mov
clc
andl
xchg
dec
pop
fs
adc
fistpl
mov
lret
in
inc
xchg
rolb
ret
adc
adc
xorb
bound
mov
sbbl
jmp
jge
rcrb
sub
icebp
push
jmp
les
mov
call
addr16
sbb
jge
cmp
mov
cmp
orb
push
xchg
test
or
sbb
add
add
sub
jl
or
adc
repz
pushf
cmpb
or
push
je
push
pusha
and
js
jne
mov
ja
nop
push
sbb
sub
add
mov
xor
sbb
push
add
pop
aam
add
test
or
rclb
repz
jmp
lahf
xorb
lock
lret
mov
mov
sti
mov
adc
push
out
shlb
pusha
jnp
mov
mov
addb
dec
insb
mov
repnz
dec
add
daa
out
mov
cltd
andb
jne
adcl
mov
bound
jnp
mov
dec
mov
cmp
loop
and
inc
push
popa
dec
mov
inc
pop
out
jmp
cmpsb
mov
es
clc
cmc
popl
addb
xorl
or
fmuls
jg
jne
es
cwtl
jg
mov
add
cmpb
mov
sbb
ljmp
fisttpl
push
jp
xchg
add
push
std
and
ss
push
addl
sbb
pop
cmpsb
xor
cmp
push
adc
xorl
subb
jno
sarb
addl
scas
insb
stc
andb
mov
adc
lods
adcb
and
mov
in
cs
mov
push
jg
and
xchg
xor
xchg
shll
pop
out
mov
int3
xchg
in
out
pop
loope
shl
sbb
rorb
jmp
flds
push
jg
ljmp
addr16
movsl
sbbb
and
out
jae
inc
cmp
scas
fwait
inc
cmp
out
inc
insb
cmp
test
arpl
orb
or
inc
add
subb
cmc
jg
cmpsb
sbb
js
dec
movb
loope
dec
cmp
inc
add
or
hlt
jnp
loop
out
adcb
int
add
orl
ret
inc
sub
mov
dec
les
cmp
pop
push
loope
xchg
mov
test
push
pop
jecxz
orb
xchg
or
mov
pop
ljmp
push
fdivr
imul
inc
mov
add
jnp
in
in
jle
orl
pop
jo
aas
xor
loopne
or
cmp
adc
ficompl
lea
addb
data16
xchg
adc
jnp
pop
push
adc
dec
xor
outsb
and
pushf
orb
lock
mov
jne
out
dec
jg
inc
outsb
lods
mov
outsl
xchg
mov
adcl
iret
in
pushf
push
xchg
call
jl
scas
mov
push
lods
and
ljmp
push
cmp
das
ja
iret
sbb
adc
xchg
mov
cmp
or
mov
mov
inc
enter
jg
cmp
pop
or
sbb
sbb
or
jae
mov
gs
addl
mov
adc
lock
sub
xorb
and
jnp
shl
rol
or
stos
pop
pop
movsl
inc
adc
out
adcb
subb
push
sbbb
sub
inc
jns
fs
inc
jle
mov
outsb
mov
sub
mov
mov
das
dec
sbbb
jecxz
insl
js
pop
pop
sub
sbb
hlt
in
mov
sbb
dec
jns
adcl
push
sbbb
pop
push
mov
data16
adc
fidivrl
gs
push
fbstp
outsl
fdivs
hlt
out
rcrl
add
pop
repnz
lods
andl
jle
cmpb
jbe
adc
sub
jne
xor
sub
sub
mov
pop
sar
sbb
cltd
add
xchg
popa
rcrb
jecxz
jb
jge
les
lret
mov
sbb
enter
xor
cwtl
fistps
xchg
insl
mov
stc
add
sbb
in
jl
mov
add
or
jg
cmp
data16
mov
sub
popa
lock
test
add
sub
mov
mov
cmp
xor
ret
rolb
andl
xor
sti
jnp
inc
test
add
xor
call
js
shrb
inc
xor
add
xor
dec
sub
inc
popa
inc
aam
sub
xchg
negl
test
add
test
enter
fnstcw
jns
sti
pop
xor
cmpb
mov
jl
push
and
dec
jg
add
mov
mov
leave
hlt
or
movsl
orl
cmp
leave
mov
push
jae
add
loop
mov
push
sti
subb
nop
subb
jp
mov
scas
sbb
jnp
cmp
enter
sahf
push
mov
ret
ret
shl
or
sbb
xor
enter
mov
jnp
rclb
test
movsb
inc
inc
add
fidivrl
mov
mov
and
sti
dec
outsl
sbb
nop
cmp
fcompl
cmp
xchg
popf
lea
into
add
jb
orb
punpckhwd
shrb
xorb
in
aaa
mov
orb
lods
cs
fwait
push
outsl
adc
or
add
imul
ss
sbbb
ss
pop
rorb
fbstp
mov
mov
test
xchg
xchg
push
sti
outsb
inc
mov
mov
jnp
cmpsb
ljmp
js
cmovne
jg
xor
xchg
lea
adc
shr
insl
sbbb
rol
jae
add
stos
jo
subl
mov
jmp
les
pop
sbb
out
mov
aaa
mov
andl
imul
xor
sbb
mov
push
subb
clc
xchg
sbbb
pop
dec
orb
addr16
xor
adc
arpl
subb
pop
cwtl
xor
jle
int3
dec
jnp
inc
lock
repnz
inc
aaa
mov
or
and
lcall
add
mov
inc
inc
jns
add
scas
pop
adc
je
imul
jb
xor
sub
sub
sahf
add
out
jns
pop
mov
rorl
xor
in
sbb
mov
in
push
fidivrs
cmp
push
dec
sbb
outsl
jnp
testl
jo
cmp
stc
in
lret
mov
jb
into
das
roll
push
pop
imul
xor
mov
popa
ja
test
lock
ficomps
out
mov
bound
jo
pop
popl
testb
sbbb
xchg
gs
add
jecxz
and
addr16
jo
insl
add
sub
push
pop
mov
adc
jmp
jge
in
xchg
xchg
cld
mov
aad
jle
sbb
xor
ret
cltd
into
sub
mov
popa
movsb
mov
outsl
inc
xchg
xor
movsl
jnp
imul
xchg
jle
inc
adc
insl
mov
mov
subb
iret
clc
mov
shll
mov
sub
pop
xor
add
push
ret
and
push
sbb
fisubrs
or
rcl
lods
xor
jbe
ss
xlat
jge
pop
push
xchg
jg
cli
jae
idivl
cmp
test
sbb
xchg
dec
sbb
adc
and
mov
inc
cld
and
sub
subb
bound
cmp
fisubl
outsl
int
xor
mov
ret
xchg
mov
adc
push
sbb
push
and
pop
xchg
ljmp
test
shl
pop
add
stos
xor
inc
xor
dec
inc
imul
cwtl
push
xchg
jns
xchg
mov
pusha
jg
clc
jp
ds
adcl
into
jnp
fwait
jae
lods
loop
rcrb
cmp
add
push
pusha
mov
and
push
jecxz
push
nop
jno
cltd
jbe
stc
ljmp
imul
mov
repnz
dec
int3
andl
push
sbbb
loop
inc
cmp
cmp
aas
mov
pop
incl
out
ja
jae
lds
clc
dec
xlat
lock
mov
push
adc
nop
gs
inc
popa
sbb
sbbb
pusha
push
jns
in
lods
add
cmpsl
sub
dec
mov
orb
testb
loope
fiaddl
jl
cmpsb
sub
outsb
das
add
or
ja
xorb
fdiv
adc
xchg
nop
mov
inc
nop
dec
subb
and
cmp
pop
roll
filds
cmp
cmp
rcr
ret
cmpb
in
sub
push
mov
pop
jns
movsl
hlt
jnp
stc
add
mov
aad
cmp
cmpsb
imul
xor
in
mov
and
mov
jnp
push
pushf
sarl
fildl
adc
adcb
aas
sub
inc
xorl
add
aad
repnz
adc
inc
dec
mov
jmp
movb
ljmp
xchg
shl
push
scas
ret
not
mov
pusha
bswap
push
pop
mov
movl
lea
jl
push
lea
mov
pusha
mov
pushl
ret
sbbl
arpl
xchg
rcrb
inc
or
xchg
xchg
fdivrl
dec
or
insb
fadd
dec
rolb
mov
mov
inc
negl
bound
fstpl
xchg
lds
stos
pop
mov
aaa
loope
and
xchg
xor
adc
inc
adc
test
pusha
xor
add
lret
jns
scas
imul
lret
fidivrl
shlb
mov
int
cmp
or
into
aam
dec
div
into
pop
mov
cmp
mov
fisttpl
mov
push
push
lret
inc
lcall
outsb
vprotd
test
out
cmp
cmp
adc
add
fldt
xlat
inc
repz
mov
clc
in
mov
adc
push
lds
xchg
or
clc
mov
stos
lods
xchg
push
popf
stos
sti
xor
push
into
sub
lock
std
std
mov
xchg
gs
mov
ret
jp
in
leave
lret
sub
push
pushf
mov
pop
jecxz
xor
mov
test
dec
test
aam
pop
lret
add
loope
and
test
push
insl
cltd
adc
outsb
outsl
add
out
mov
cmpsb
in
ss
add
icebp
lock
rolb
int3
sti
adc
pop
repnz
mul
cs
lcall
cld
mov
dec
add
aam
cmc
jae
sbb
pop
pushf
pop
loope
sti
orl
xchg
ja
push
loopne
or
lea
aaa
or
mov
sub
cli
inc
adc
nop
push
fisubrs
sbb
lcall
cmp
pop
out
jno
push
ficoms
lock
cmp
mov
mov
cmpb
push
jno
rcrl
adc
fiadds
fidivrl
push
ljmp
rcrl
outsl
stos
addr16
lahf
cmp
nop
push
xor
add
jb
dec
lods
and
xchg
mov
or
int3
xor
lods
pop
test
pop
rcrl
cld
cltd
dec
rcrb
in
lcall
jle
lcall
or
insb
push
adc
adcb
sarl
cmc
mov
adc
lea
lahf
xlat
cmp
pop
dec
cmpsl
push
adc
iret
sub
cmp
lahf
mov
sbbl
outsb
add
cli
fcomp
xor
std
idiv
outsl
inc
pop
dec
push
cmc
pcmpgtb
call
adc
sbbl
shll
sti
fistpl
pusha
and
jmp
jmp
jecxz
push
std
addl
pusha
adc
nop
sub
mov
add
fs
push
dec
xchg
jmp
negl
sti
stos
daa
sarl
push
dec
lock
cltd
pop
in
leave
mov
inc
cmp
add
int3
xchg
ret
movsl
dec
push
fsubp
popf
fcmove
std
nop
jp
push
mov
mov
mov
stos
test
lock
xor
jmp
cltd
jge
adc
jb
sub
nop
ss
hlt
cmpsb
add
and
cltd
in
inc
iret
jno
xorl
mov
inc
leave
dec
in
fnstcw
fstps
dec
dec
data16
clc
mov
les
add
aaa
lds
pop
fidivs
and
lret
mov
cli
pushf
mov
push
scas
imul
iret
mov
iret
inc
decb
out
push
dec
push
das
sbb
roll
idivl
test
repnz
int
and
out
in
jb
ror
nop
xchg
mov
inc
outsb
stc
fldt
sbb
mov
and
jbe
push
movsb
and
sahf
pushf
sub
pop
int
lods
jmp
jns
dec
push
dec
xchg
and
sahf
sub
pop
loop
pop
ret
xchg
cmp
mov
pop
xor
inc
out
mov
jae
push
imul
imul
cli
push
stos
add
mov
outsl
ljmp
in
adc
pop
sbb
xchg
fldenv
adc
fildll
daa
in
leave
dec
cmp
popa
ret
mov
sbb
pushf
push
mov
adc
or
xchg
movb
pushl
lea
jne
setne
add
and
mov
cmp
cmp
call
inc
adc
jo
test
cld
jl
xchg
inc
js
push
add
xchg
je
xchg
inc
mov
jne
sbb
int3
stc
inc
shll
fcoms
repnz
loopne
cmc
lahf
lods
sub
xor
inc
pop
fnstsw
mov
imul
sub
cmp
push
mov
pusha
xchg
call
pop
or
push
call
in
xchg
add
pop
or
js
jmp
mov
dec
and
imul
stc
jnp
loop
mov
sbb
cwtl
fisubrs
and
daa
shlb
push
ja
jae
pop
inc
or
jnp
or
ja
ds
dec
inc
mov
adcb
leave
imulb
cmc
roll
jle
rclb
inc
inc
std
fnstsw
sub
xor
loop
dec
xchg
nop
pop
lret
cmpsb
bound
mov
sbb
jp
mov
fldenv
push
fcompl
cmp
pop
sub
xchg
xor
imul
pop
and
dec
adc
pminub
mov
or
rorl
cmp
aas
and
lahf
add
arpl
mov
mov
jmp
test
push
push
mov
pop
movsl
sbb
mov
sbb
scas
fwait
sti
mov
add
mov
insb
push
and
rcrl
jle
cwtl
sub
mov
xor
dec
dec
cmpsl
sub
jecxz
cmp
aad
idivb
hlt
cmp
xor
std
jg
imul
in
or
loop
lret
repnz
sbb
xchg
push
xor
lret
or
bound
loopne
popa
inc
mov
pop
xchg
div
pop
add
lret
cltd
push
jecxz
into
lahf
xchg
dec
test
sub
xor
xchg
mov
shlb
div
mov
push
push
leave
xor
pop
das
adc
lods
lahf
aas
sti
xlat
imul
pop
daa
xchg
das
shll
inc
xor
call
cmp
popa
mov
incl
add
je
imul
outsb
add
mov
or
pushf
jmp
cmc
xchg
xor
xchg
movsl
pop
iret
mov
push
les
icebp
pusha
loop
pop
sbb
test
ds
data16
xchg
inc
xor
or
mov
inc
cmp
out
aad
js
loopne
adc
add
or
jl
dec
cmc
xchg
xchg
inc
les
out
repnz
stos
ficomps
scas
loope
pop
sbb
les
jb
xlat
push
add
adc
cmp
lods
lods
repnz
fwait
adc
sbb
into
mov
clc
je
jecxz
dec
int
pop
xchg
jmp
or
arpl
lds
lahf
mov
rcrl
push
or
xlat
inc
mov
mov
pop
mov
shlb
repz
jl
cmp
loop
mov
sub
sbb
dec
jge
in
adc
mov
outsb
js
cmp
and
push
out
les
dec
jo
mov
dec
jno
fadds
xchg
xchg
jae
push
jnp
cvttps2pi
sbb
mov
or
int
cmc
mov
mov
adc
fdivrs
sti
fldcw
test
inc
push
cwtl
xor
lret
dec
pop
push
sub
fiaddl
mov
mov
movsb
sub
xchg
daa
cmp
outsb
lock
int3
inc
mov
outsl
shlb
dec
sbb
lea
jp
push
sbb
mov
adc
mull
xchg
mov
adc
mov
or
inc
push
jae
mov
push
outsb
int
cmc
iret
cmpb
test
mov
xchg
jbe
sti
push
insb
ss
and
cmp
xchg
pop
movl
adc
imul
push
push
mov
pop
xor
scas
mov
sub
loopne
mov
in
movsl
xchg
movsl
inc
push
push
pop
and
orb
lods
sub
mov
inc
dec
in
lods
mov
sub
jmp
sti
lcall
fstpl
fnstcw
cli
xor
imul
jg
add
and
andl
mov
lahf
fldl
repz
in
push
iret
jge
gs
in
in
fistpl
pop
int3
pop
mov
cwtl
pop
pushl
inc
pushl
push
lea
jmp
add
fmull
dec
xchg
cli
andb
inc
test
adc
mov
enter
jns
dec
loope
mov
ret
push
in
xchg
dec
aaa
in
and
hlt
mov
mov
shlb
adc
jge
enterw
in
dec
fiadds
xor
and
imul
and
mov
adc
pusha
pop
int3
cmp
jp
ss
mov
mov
movsb
and
add
je
outsl
fs
gs
imul
add
pushf
or
cmp
call
loopne
sbb
sbb
push
xchg
add
inc
mov
les
sbb
aaa
xor
cmc
ret
loope
rcl
fs
jno
and
cmc
in
idiv
jbe
fsubp
popf
and
pop
mov
or
pop
cmc
adc
enter
sbb
xlat
jle
xor
dec
adc
mov
rorb
scas
adc
out
movsl
sub
loope
cli
pop
adc
sub
adc
shlb
adc
cld
rclb
and
lcall
push
sbb
fdivr
xor
and
push
test
add
bound
push
cmc
nop
jl
pusha
push
jg
movsl
push
movsl
cmp
dec
fistpl
pop
out
les
inc
pop
jge
loope
pop
pop
insb
pop
dec
xchg
push
js
in
in
mov
in
mov
rcrb
adc
push
xchg
fiadds
scas
adc
addr16
das
cld
jae
mov
lods
sbb
mov
add
psubb
or
ficompl
dec
stos
pop
xor
jmp
imul
ret
push
xchg
cmc
jmp
out
sbb
dec
xchg
cmp
cmp
jne
shll
loope
scas
cmp
adc
adc
dec
out
adcb
push
cmpsb
inc
fisubl
lods
jb
cmp
add
cmp
and
mov
insb
mov
sbb
sub
imul
push
and
in
lret
mov
pushf
sub
lods
dec
inc
scas
pop
adc
push
xchg
imul
jbe
cmp
nop
jo
push
loopne
clc
lods
inc
ret
cli
push
aam
imul
xor
dec
notb
jae
ds
aam
jo
inc
test
lea
or
mov
popf
inc
sub
mov
jmp
add
jne
pushf
movb
pushf
cwtl
pop
mov
cwtl
lea
call
iret
mov
pop
dec
xchg
cmp
cwtl
test
sahf
dec
and
pop
stos
test
jo
push
sti
jo
aas
mov
and
rolb
xlat
andl
out
popf
add
fwait
sub
jmp
movsl
push
add
jle
xchg
push
lret
pop
outsl
jge
push
fisubs
xor
loopne
xchg
popa
mov
addr16
add
or
sub
jmp
pop
pop
add
stos
xchg
and
or
mov
add
insb
sub
mov
mov
push
fistps
popa
mov
push
mov
jecxz
rolb
in
cli
test
jecxz
jns
inc
mov
je
xchg
std
add
gs
xor
icebp
popf
pop
adc
les
dec
xchg
imul
popf
push
or
test
addl
sub
in
and
jns
jns
stc
stos
popf
pminub
ret
inc
enter
sub
dec
xchg
jo
jp
push
push
xchg
fidivrs
push
lcall
imul
aaa
mov
inc
jmp
pop
and
aad
jl
shll
outsl
push
xor
cmpl
jle
push
and
push
or
dec
inc
mov
mov
or
or
xchg
bound
mov
jle
lock
fwait
sbb
cmp
addr16
leave
outsl
inc
shll
cmpsl
xor
sub
pop
movsb
dec
sbb
cmp
add
popw
not
call
pushf
inc
lea
ja
bt
push
cmc
ror
stc
pusha
add
pusha
pushw
popfw
lea
jno
inc
call
jmp
adc
adc
aam
mov
pop
sbb
push
xchg
push
mov
sbb
dec
pop
nop
jne
js
push
pop
sbb
dec
push
and
cvtpi2ps
xor
das
xor
cmp
stc
cmp
add
sub
xor
out
ss
xor
aas
aaa
inc
lcall
sub
jge
sbb
popa
pop
pop
push
pop
pop
sbb
ss
pop
bound
lahf
mov
gs
cs
xor
std
aas
cmp
pop
daa
dec
dec
jg
sub
xor
push
gs
mov
sub
dec
push
out
pop
adc
and
add
cmp
mov
scas
pop
dec
pop
dec
dec
dec
xchg
push
popf
push
push
iret
push
mov
pop
enter
bound
mov
adc
adc
arpl
cmp
add
jmp
inc
pop
cmpl
xorl
jns
ss
jb
push
xor
out
addl
loope
push
bound
xor
imul
aas
jns
stc
or
ret
xor
pop
jns
stc
adc
enter
push
addb
andb
push
xchg
jp
popa
popa
push
inc
jg
rdmsr
pop
push
xchg
jp
and
adc
inc
scas
jle
jae
arpl
imul
mov
pusha
inc
sbb
or
subl
xchg
pusha
jle
imul
pop
cmp
dec
test
adc
jns
push
cs
jle
pop
dec
icebp
adcl
repnz
mov
pop
mov
add
cli
inc
pop
sbb
jg
cmp
xchg
cmp
dec
aam
dec
ss
popa
nop
mov
jns
inc
add
ds
repz
mov
fs
stc
push
jb
popa
cmpl
push
sbb
imul
mov
jg
inc
andl
repnz
jp
mov
pusha
mov
jbe
inc
mov
mov
mov
nop
adcl
push
out
jnp
jle
mov
inc
mov
inc
or
mov
jmp
push
push
jns
jl
pop
popa
inc
dec
std
mov
cli
pusha
repnz
jle
jmp
bound
or
sti
mov
idivl
shlb
mov
cmpb
jae
outsb
xchg
cli
inc
aaa
fdivs
mov
jle
mov
add
mov
outsb
jnp
sbbb
xorb
jg
test
lcall
jp
mov
stos
cs
addl
adc
jge
xchg
addl
lret
mov
lret
ret
sarl
stos
mov
jb
inc
sbb
push
adc
xchg
mov
test
jb
clc
repz
call
insl
inc
nop
repz
jno
jmp
test
idivl
add
inc
jp
and
rcrl
jb
or
push
lock
jp
add
jp
sti
les
sbb
pop
jp
jmp
andl
icebp
adcl
mov
mov
bnd
inc
ja
fbld
imul
fisubrl
push
adc
dec
or
pop
out
or
testl
loop
add
pop
dec
dec
or
insl
xchg
or
jno
outsb
lds
jle
or
addl
fidivs
outsb
mov
clc
outsb
jle
xor
jle
ds
inc
das
cmp
loopne,pt
movl
jp
or
dec
or
repnz
inc
push
js
inc
out
sub
cmpsb
inc
mov
test
insb
jbe
or
push
and
sub
cmpsb
inc
mov
push
cmp
sbb
jbe
mov
mov
imul
push
lcall
jp
jbe
ds
jbe
cmp
pop
sub
inc
shrb
and
sub
push
insb
shlb
pop
stc
xchg
sub
jbe
std
cmp
inc
fidivrl
jbe
sub
popa
incb
popa
pop
mov
pmaxsw
repz
je
push
aaa
cli
inc
adc
aaa
test
es
je
jnp
and
icebp
ss
push
jg
orl
cmpsb
add
xchg
push
shlb
jp
fmull
outsl
je
jae
ljmp
mov
mov
add
add
xchg
scas
aas
push
cmp
jo
aaa
add
roll
xchg
cmp
inc
add
pop
cmp
dec
cmp
mov
cmpsb
push
cmp
repz
mov
setl
add
jo
bound
mov
addl
push
jnp
xor
sub
je
jnp
loop
mov
jnp
xor
dec
add
bound
invlpg
lret
repz
jnp
jbe
mov
xlat
fnstenv
lret
or
dec
fimull
fs
cmp
pop
clc
lea
mov
scas
jae
hlt
dec
jae
jnp
test
out
pop
ret
dec
push
mov
jle
daa
stos
cmp
push
mov
add
pop
push
repnz
pop
dec
repnz
or
clc
or
jecxz
je
test
pop
jae
dec
xor
cld
fstpt
mov
jnp
xchg
je
jnp
jge
ret
jnp
ret
mov
jnp
jb
out
inc
jnp
adc
xor
or
cmp
mov
jae
iret
jno
gs
shlb
mov
jbe
sti
ljmp
mov
dec
jb
int
dec
cmp
sub
iret
inc
push
sub
je
repnz
sbb
repnz
shrb
push
je
cmp
repnz
stos
hlt
stc
into
adc
sahf
aaa
jnp
imul
insb
mov
mov
jo
adc
sti
add
xor
sbb
push
icebp
jle
push
into
pop
jp
dec
nop
pop
pop
jne
lret
lcall
and
xor
push
mov
subl
into
pop
test
jge
pop
test
outsb
inc
pop
mov
pop
roll
sahf
push
or
loop
adc
pushf
jbe
push
cli
sbbl
adc
call
xchg
adc
lret
or
cmc
pusha
scas
cmpsl
pop
out
dec
outsb
insb
test
or
pop
cs
pop
int
jae
adc
sub
outsb
cli
xchg
xor
sahf
inc
loop
mov
sbb
sbb
pop
jnp
jge
ret
sub
push
bound
push
xor
jmp
in
pcmpgtd
pushw
insb
push
xor
and
sbb
sbb
sub
ss
fidivrl
mov
adc
push
jl
xor
xor
pop
cs
icebp
popa
out
insl
pusha
cmp
out
imul
ljmp
ds
inc
inc
std
cli
popf
add
cmp
lret
push
call
out
cmp
sub
popa
int
jp
add
jp
push
adc
call
add
inc
pop
sbb
mov
jno
das
rcrl
sbb
sbb
sub
cs
and
mov
cmp
popa
insw
push
ss
setns
ficomps
outsb
loope
cli
jge
mov
js
insb
jno
pop
repnz
leave
inc
shlb
bound
or
js
xor
xor
jge
and
stos
das
ret
in
int3
adc
ds
xor
adc
inc
and
pop
xlat
cli
push
out
es
lock
adc
sbb
bnd
mov
dec
mov
push
iret
sub
shlb
mov
xor
mov
bound
fdivrl
out
add
mov
add
push
out
pop
xor
add
mov
xchg
mov
inc
imul
mov
inc
dec
xor
pop
adc
rcrb
jns
pop
dec
sbbl
sarb
insb
add
jle
sub
out
out
ficoml
cmp
inc
or
adc
push
pop
js
mov
pusha
out
jnp
es
xor
pop
push
cli
cs
cmp
mov
pop
mov
cmp
cmp
jg
xchg
sbb
icebp
and
xor
pusha
icebp
cmp
xor
sbb
insl
das
cs
cmpsb
jmp
jb
cli
adc
pop
jb
mov
mov
repz
dec
push
mov
push
dec
repnz
mov
pop
out
and
js
in
dec
outsl
push
jp
dec
ret
sub
jle
and
jle
adc
mov
ss
mov
pop
data16
xor
push
cmp
ret
out
jno
jle
or
cmp
push
fwait
jp
fisttpll
dec
andb
jp
jp
scas
bound
jle
xchg
sbb
rclb
outsb
mov
jbe
dec
popf
pop
addr16
push
mov
mov
loop
data16
inc
decl
outsl
in
call
dec
push
pop
xchg
testl
das
and
ljmp
daa
movsl
mov
cmp
pusha
xchg
into
jnp
dec
sbb
mov
popa
pop
push
mov
inc
xor
mov
inc
inc
dec
add
in
pop
jg
arpl
inc
pop
mov
pop
add
push
xor
sbb
ss
pop
xlat
out
sbb
push
lea
dec
push
jle,pt
nop
je
outsb
push
mov
je
js
mov
inc
lcall
hlt
jl
das
xor
pop
add
pop
jecxz
sbb
outsb
insl
xchg
js
imul
dec
lods
adc
dec
stos
nop
dec
call
dec
add
adc
cmp
jbe
push
jno
flds
adc
push
dec
jmp
sbb
sbb
push
pop
mov
mov
sbb
cmp
xchg
push
popa
daa
cli
cmp
adc
lods
aas
pop
mov
sbb
aaa
sbb
sbb
aas
test
cli
repz
aaa
sbb
jmp
jge
and
fmulp
add
dec
pop
add
and
and
add
std
and
inc
imul
push
lret
push
stc
and
jns
call
inc
daa
jle
jo
scas
pop
cmp
stos
pop
or
and
out
jb
mov
cmp
push
ljmp
mov
fidivl
or
pop
push
lret
sub
xor
std
sbb
hlt
cmp
xlat
cld
fs
frstor
outsw
jb
mov
in
jle
stos
int
sbb
cmp
jno
popa
xor
pop
pusha
xor
ss
sarb
shl
adc
jb
mov
pop
mov
cs
cmp
lods
inc
jns
xor
jmp
outsb
mov
mov
add
mov
and
sti
ds
das
gs
cs
adc
dec
cmp
es
fdivp
loop
out
cmp
xchg
fdivrp
scas
mov
aas
jmp
out
jb
mov
jmp
add
bound
dec
dec
xor
fisubrs
jb
iret
in
test
out
push
pop
sbb
pop
cli
leave
mov
mov
sbb
dec
call
jb
sahf
sbb
mov
jne
repnz
lock
sub
or
push
or
mov
jle
repnz
sbb
inc
pushf
ret
sub
mov
adc
pop
sbb
fidivs
jge
xor
xor
pop
xor
mov
insl
xchg
sahf
jns
mov
scas
jge
sub
pop
in
jge
ja
xchg
sub
xorl
test
test
jle
pop
das
jp
mov
cmc
push
repz
mov
mov
xor
mov
sar
pop
daa
mov
dec
pop
test
dec
mov
jo
mov
add
into
cs
jg
mov
pop
pop
sub
ljmp
or
in
cltd
fwait
push
jmp
adc
xor
and
xor
pop
jno
push
fidivs
mov
pop
ja
cs
fwait
adc
out
fcompl
dec
jne
popa
pop
dec
xor
insb
sub
sub
ljmp
add
lods
and
inc
dec
add
sbb
push
jp
add
sahf
cwtl
dec
jmp
fs
das
in
dec
add
insb
rcrb
out
xor
test
addr16
jge
push
jne
incb
push
or
sub
and
into
js
loope
sbb
push
out
ds
push
sub
inc
mov
repz
mov
mov
cmp
mov
xor
cmp
jp
sahf
mov
mov
test
mull
sbb
mov
push
cmpsb
xor
sub
jg
xor
jne
fisttpl
xchg
dec
dec
pop
jb
mov
inc
xchg
or
pop
inc
sti
stc
nop
and
mov
xor
ss
fidivs
mov
xor
rolb
shlb
fistpl
mov
cs
inc
pop
nop
data16
jbe
sti
in
sbbb
cld
pop
dec
xor
pop
push
aam
into
bound
pop
lock
loop
mov
ljmp
sbb
jb,pn
pop
xor
in
pop
mov
nop
nop
andl
xor
xor
mov
xchg
mov
pop
sbb
jl
xchg
mov
sbb
mov
popa
scas
loop
out
mov
ds
repnz
jne
push
or
orps
std
xor
cs
cmc
cmpsl
push
js
rolb
cld
loop
popf
or
clc
ficoml
jnp
cmp
mov
jle
popw
sbb
pop
cmc
cmp
jb
fisubl
add
insb
scas
lcall
andl
pop
pop
push
js
imull
arpl
pop
fadd
popa
fisubs
mov
jns
jbe
push
cs
cmp
jb
data16
jns
lcall
ja
repz
stc
jo
cmpsb
inc
sbb
or
cmp
call
ds
pop
pop
push
push
repnz
add
ss
push
in
or
xchg
int3
out
inc
sub
test
jp
cmpl
add
pop
ljmp
addr16
imul
xor
sub
inc
mov
and
rol
mov
push
cmp
or
and
pop
lock
stc
sub
pop
push
jno
movsb
mov
pop
jmp
je
inc
add
fisttpll
pusha
cmpsb
sub
xor
xchg
imul
sbb
xchg
cs
dec
push
and
xor
daa
shll
adc
fidivs
inc
aaa
andb
sbb
movsb
rolb
xor
jp
loopne
bound
cmp
inc
aam
int3
negb
jbe
mov
inc
out
dec
insl
bound
clc
sub
pop
jb
into
jg
push
pop
and
inc
inc
pop
or
lock
jns
cltd
and
xchg
pop
pop
aam
add
push
iret
rcl
dec
cmp
mov
shrl
addr16
popf
jmp
adc
and
mov
dec
jge
cmc
andl
es
and
push
inc
sbb
and
push
push
into
stc
pushf
sti
out
imul
shll
cs
cmc
push
repnz
adc
loopne
cltd
jo
cltd
stos
stos
adc
ljmp
adc
push
imul
mov
dec
push
xchg
pop
in
jl
daa
stc
cmp
xor
outsb
arpl
jmp
sub
cld
sbb
cwtl
das
xchg
sbb
pop
ja
out
push
mov
arpl
mov
nop
and
mov
pop
subl
or
pop
xor
mov
loop
pop
mov
repnz
inc
aaa
andb
jb
mov
ss
mov
and
or
jo
sub
push
pop
fs
jl
jns
jns
out
xor
aad
xor
je
sub
inc
push
cmp
fdivrs
das
push
cs
dec
pusha
push
test
pop
movsb
imul
push
push
into
and
sub
sbb
add
push
das
dec
mov
bound
add
sbb
mov
enter
add
repnz
stc
fs
xor
clc
push
sub
add
clc
leave
smsw
mov
shl
insl
popf
mov
shrb
repnz
fs
outsb
repnz
push
or
clc
cwtl
and
in
fisubrs
rcr
and
sub
scas
add
xor
xor
pop
repz
je
bound
in
fs
jne
jmp
jno
mov
or
or
test
cmp
cmp
fcoml
loop
jbe
cmpsl
push
dec
mov
push
lock
jmp
imull
fcompl
add
icebp
and
jns
jns
out
pop
mov
mov
stc
or
popa
sbb
pusha
mov
bound
in
dec
orl
jl
js
mov
jg
push
bound
je
mov
data16
cmp
sub
test
and
dec
xchg
push
fmuls
dec
inc
mov
hlt
mov
stc
push
mov
jmp
outsb
sub
lods
dec
add
outsb
adc
mov
cwtl
push
dec
aaa
or
bnd
aad
mov
lret
imul
pop
inc
bound
pop
cltd
inc
ror
int
xchg
ja
sub
xor
addr16
lcall
push
int
mov
shll
popf
jg
lret
xor
aaa
mov
jno
inc
adc
pusha
movb
mov
lea
jmp
pop
or
icebp
dec
xchg
mov
sbb
jl
enter
cmp
movsb
pop
lcall
call
lock
loopne
aam
inc
gs
inc
loopne
ret
repz
xchg
sbb
jae
repnz
gs
loopne
xchg
xchg
mov
sti
out
imul
sbbb
cmp
cltd
js
push
sbb
mov
addr16
lods
add
push
stos
xor
push
mov
add
out
pop
repz
outsl
adc
mov
inc
and
clc
movsb
jle
jmp
push
pushl
jmp
les
lods
ss
and
loopne
js
adc
loop
xor
mov
jns
xor
push
mov
scas
cltd
push
bound
mov
mov
dec
add
jp
xchg
popf
sub
jmp
or
mov
dec
repz
xchg
inc
jmp
xchg
imul
lea
repz
xor
jg
adc
int
out
cmp
cmpsb
cmp
xchg
cmp
imul
inc
out
pop
pop
in
mov
icebp
sbb
mov
and
mov
sbb
fcomi
xchg
sbb
fdivp
sbb
lds
fincstp
pop
cld
leave
pop
pop
sbb
add
sbbl
cmp
orl
fdiv
into
mov
dec
cmp
push
jle
repnz
mov
mov
shrb
mov
enter
xchg
movsb
pop
loop
xor
inc
inc
and
in
cltd
icebp
or
push
cwtl
dec
rorb
cmpsb
xor
stos
or
push
lea
xchg
inc
pop
add
inc
js
je
jb
arpl
jae
in
dec
xchg
cld
mov
mov
and
push
cmc
imul
jae
jbe
inc
ficompl
mov
add
mov
pop
pop
scas
fcoms
ficomps
mov
sahf
sar
fcmovb
dec
xchg
sbb
sbb
mov
aas
and
or
add
mov
cmp
loop
add
adc
mov
mov
aas
adc
lds
jmp
jae
xchg
jp
mov
xchg
push
xor
inc
loopne
dec
rolb
jle
scas
les
sbb
jge
xchg
xchg
sbb
lods
popa
sub
int
sub
insb
nop
out
icebp
int
cltd
pop
jb
cld
fcoml
fistpll
dec
and
popf
pushl
jle
jl
mov
jnp
cmpb
test
in
fadds
cmp
mov
jbe
aas
imul
shll
sub
and
das
and
xchg
sbb
insl
das
adc
int
mov
xchg
dec
and
dec
xchg
cld
pop
xor
out
mov
mov
test
sub
adc
inc
lahf
dec
dec
int3
nop
and
xchg
dec
clc
sahf
test
repz
mov
jp
imull
lret
popa
aaa
pop
inc
es
in
ja
or
add
jmp
mov
mov
out
mov
lods
jne
in
lods
inc
fistpll
and
and
lods
je
lret
test
mov
pop
mov
pop
fisttps
aam
adc
push
pusha
movl
movl
call
movw
movl
push
lea
jmp
ror
pusha
bt
bt
cmc
add
pushl
shr
push
call
push
call
movl
pusha
movl
pushf
pushl
push
lea
jmp
sbb
mov
dec
xchg
lea
test
jno
adcl
sub
sahf
insb
pop
aam
pop
xchg
lds
dec
rcrl
cmp
sbb
mov
lret
sub
pop
push
repnz
and
rcll
fcoml
pop
dec
fcmovnu
aaa
icebp
jl
push
fisttps
jp
lds
into
cmp
insl
sub
mov
sti
jne
scas
lods
xor
jns
aad
cmp
xchg
cmp
push
ficompl
xchg
pop
jle
bound
stos
jne
imul
shr
mov
out
int3
dec
leave
pop
int
lods
adcb
and
cmp
add
push
lods
mov
xor
ds
push
or
leave
dec
xchg
lret
loopne
pop
cmc
outsl
xor
jns
push
mov
loope
jno
cli
inc
jae
xchg
sub
jmp
imul
sbb
mov
dec
pop
jo
cmp
repnz
xchg
fs
mov
inc
inc
sub
les
fsubl
dec
xchg
push
fimull
scas
push
mov
jbe
fs
and
push
movsl
mov
sbb
dec
fidivrl
bound
cmpsl
daa
mov
adc
bound
and
cmp
adc
in
xchg
adc
loop
pop
fistps
lahf
sbb
nop
jg
jle
clc
sub
mov
cmp
inc
mov
inc
mov
cmp
pop
adc
add
and
test
rcrl
inc
jne
or
adc
and
pushf
inc
mov
nop
leave
add
popa
xlat
movsl
jmp
in
fsubr
dec
xchg
cli
je
mov
pop
movsb
pop
inc
int3
dec
loopne
sub
rep
test
sbb
or
in
inc
lret
jns
std
push
and
mov
rcll
push
adc
lods
aas
cmp
inc
push
lcall
rorl
dec
mov
inc
cltd
inc
into
push
inc
xchg
add
inc
in
xchg
fst
add
push
lcall
mov
sub
and
movsb
xorb
jnp
mov
pop
std
jg
stos
movsl
and
repz
pop
adc
lcall
xchg
or
fs
mov
int3
inc
sbb
jno
es
rcrb
loop
test
test
and
jp
push
ret
lods
mov
push
or
stos
aad
cmp
push
dec
lret
sti
out
ja
sbb
and
xchg
repnz
mov
mov
in
pop
dec
mov
adc
mov
shl
addl
or
jl
push
mull
shlb
sbb
xchg
fdivrs
sbb
les
jp
loopne
add
cmpb
pusha
push
call
xor
cmp
in
mov
pushf
cmp
je
lock
jo
mov
and
cmp
ja
sub
sbb
andl
lods
xchg
fimuls
mov
movsb
int3
shlb
js
cli
inc
insb
push
push
sub
stos
mov
stc
out
insb
add
in
xchg
mov
mov
cmp
daa
mov
es
jl
test
ret
scas
mov
dec
xchg
xchg
pop
aas
out
sbb
mov
lahf
arpl
stos
jne
adc
xchg
cli
xor
cmpsl
pusha
push
inc
out
cmpsl
jle
mov
and
inc
pusha
mov
dec
and
movsl
enter
orb
add
inc
gs
in
jmp
jge
xchg
aaa
push
sbb
xchg
loope
cmc
lret
sbb
aas
mov
ret
out
or
je
sub
sub
lcall
jo
mov
sub
lcall
add
stc
pushf
cmp
jmp
arpl
call
pop
sub
icebp
jmp
mov
ds
cmpsl
lret
arpl
lods
lds
rolb
or
mov
into
or
mov
xor
daa
call
mov
lods
in
mov
mov
stos
andl
mov
pop
fcomps
fmul
movsb
and
mov
hlt
xchg
and
mov
rorb
adcb
call
xor
dec
xchg
adc
imul
int
adc
rolb
ja
adcl
int
mov
sub
fisttps
xchg
lock
sahf
xchg
or
pop
inc
ret
es
pop
rclb
jb
mov
pop
imul
jmp
jo
repz
cmp
fwait
call
mov
dec
add
add
jns
popa
leave
push
adc
pop
cmp
add
aas
mov
std
jae
filds
test
inc
pminub
push
hlt
scas
fmull
xchg
or
cmp
cli
lcall
xchg
movsb
xor
loopne
movsl
repnz
push
sub
xchg
test
das
arpl
dec
jle
push
rol
lret
lods
stos
nop
fst
sti
lret
out
sahf
jo
dec
roll
imul
jb
adc
les
mov
adc
jb
outsb
cmp
xor
fstpt
xchg
pop
sbb
stc
pop
jecxz
das
jecxz
je
dec
add
mov
test
icebp
cmpsb
mov
loope
fsts
mov
stos
popf
inc
testl
adc
call
andl
mov
mov
or
push
into
pushfw
push
cli
cltd
das
mov
jecxz
aam
mov
cmovb
loop
cmp
add
repz
cmpsl
cmp
scas
push
xor
das
std
shlb
cmc
leave
xor
mov
mov
js
jle
pop
lea
add
stos
addl
lods
xchg
mov
and
es
test
or
pusha
push
lea
je
pushf
jmp
mov
sub
std
lea
loope
and
jmp
push
jb
mov
inc
out
mov
dec
lock
adc
mov
xlat
dec
scas
into
jge
cmp
mov
sbb
imul
repnz
mov
xlat
fldenv
mov
test
scas
int
in
mov
not
jno
pop
sbb
stos
insb
inc
adc
sbb
ljmp
mov
sub
les
fsubr
adc
lret
pop
ja
popl
cmp
mov
das
mov
btr
push
aas
incb
lahf
inc
testl
cmp
or
lock
pop
push
fstps
arpl
scas
lcall
in
or
stos
jne
imul
stc
fldl
sbb
adc
in
sbb
cmp
dec
gs
mov
push
push
cmc
clc
scas
mov
mov
jmp
mov
sub
test
dec
in
and
test
cmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
cmc
mov
out
xchg
inc
aam
add
int3
jl
les
mov
sub
pop
jecxz
insb
out
movsl
aaa
ret
mov
push
shrl
sti
sbb
xor
jno
push
jbe
sti
lock
inc
ss
fildl
sti
repnz
dec
imul
lds
sbb
hlt
lret
mov
pop
xor
jecxz
inc
test
sub
popa
stos
icebp
and
adc
add
add
ret
out
insb
cli
nop
xchg
hlt
aaa
arpl
mov
sbb
push
push
mov
test
mov
bound
adc
mov
stos
inc
scas
adcb
xchg
add
stos
lea
dec
rcrb
xor
addl
push
pop
and
aas
add
xchg
nop
repz
adc
imul
pop
imul
dec
test
das
cmpl
or
or
shlb
ror
lahf
dec
and
mov
dec
icebp
mov
xor
add
xchg
in
sbb
arpl
ja
lret
or
movsb
mov
sbb
pusha
add
push
mov
and
xchg
cmc
inc
add
movsb
adc
jmp
repz
cmpsb
lret
jno
mov
aaa
or
jns
jmp
mov
lcall
js
stos
test
dec
fldl
popf
lret
or
mov
lea
mov
addr16
xor
add
mov
xor
cld
mov
out
jo
pusha
addb
jmp
movsl
pop
fidivs
test
add
inc
gs
imul
inc
add
not
jmp
movsb
mov
in
xchg
pop
sub
push
int
sub
mov
jge
in
in
cmp
dec
adc
inc
stc
mov
loope
vmwrite
push
add
push
push
loop
dec
ljmp
fwait
adc
mov
or
insb
insl
mov
sub
cld
inc
pop
push
xlat
cmp
idivb
fs
popf
andl
movsb
dec
add
test
mov
leave
add
mov
cmp
ds
nop
xchg
jl
mov
out
inc
std
push
cmpsb
mov
ret
sarl
mov
shll
jns
mov
or
pop
ss
loop
xchg
loope
or
push
sub
jnp
xor
mov
xchg
push
in
out
adc
repnz
push
mov
jl
and
push
dec
mov
sub
mov
jns
sbb
arpl
or
pop
or
fwait
mov
idivb
mov
add
nop
ljmp
pop
add
cmp
cwtl
cli
adc
xchg
data16
pop
push
xchg
jo
call
jl
les
int3
mov
rcrb
xlat
loop
fs
xchg
enter
mov
mov
nop
or
jg
jne
pop
mov
mov
adc
les
in
stos
scas
mov
jno
out
pop
jg
sub
mov
dec
jg
add
je
fwait
jp
xor
js
clc
jbe
int3
xchg
shlb
pop
mov
dec
adc
mov
dec
jmp
jmp
pop
loope
lcall
shll
nop
loope
xchg
inc
mov
and
mov
add
rorb
adc
push
int3
push
push
test
mov
sbb
popa
ds
xchg
shlb
sub
pop
mov
jno
movsb
rorl
xchg
sub
shrl
movsb
sub
push
pop
xchg
loop
xchg
in
movsl
iret
lock
negb
xchg
sub
fsubrs
sbb
mov
std
inc
std
mov
push
in
cmp
sahf
cmp
and
pop
loope
xchg
jnp
sbbl
mov
in
push
adc
mov
xor
mov
imul
scas
dec
and
mov
push
sub
cmc
jnp
mov
xchg
ja
mov
mov
sub
in
pushf
push
orl
test
das
xchg
call
fs
dec
xchg
loopne
and
xchg
orb
ret
mov
dec
cmpsb
mov
sahf
movb
fidivs
pop
lods
cmc
lea
insl
mov
rcll
outsl
arpl
inc
jb
add
xchg
sub
aad
or
cmpsb
jge
das
fistpll
aad
sub
jecxz
das
rol
sub
pop
divl
xchg
jl
in
inc
scas
mov
test
mov
into
jbe
es
imull
jne
sarl
xchg
jmp
mov
and
or
or
xchg
xchg
movsl
out
iret
lock
xor
stc
mov
xchg
cs
jb
or
fisttps
xchg
loop
jb
jb
xor
or
fists
repnz
std
movsl
xchg
std
lea
push
xchg
call
xor
mov
sbb
inc
ror
lcall
sub
mov
push
in
pusha
dec
mov
mov
sti
jl
ffree
jecxz
add
adc
pop
test
or
mov
xchg
inc
add
faddl
sub
les
das
and
shll
dec
outsb
sub
inc
inc
inc
add
sbb
jp
mov
push
popf
jb
pop
shlb
dec
jo
dec
lods
mov
cmpsb
xchg
cmp
fs
dec
int
pop
push
jo
ror
or
into
aad
fcmovbe
push
push
mov
cs
pop
adc
or
xchg
dec
int3
inc
add
inc
sbb
or
test
loop
ss
fimuls
decl
leave
push
int
or
pushf
jbe
inc
dec
sbb
xor
add
ss
in
daa
leave
imul
sub
mov
repz
dec
loope
mov
pushf
xchg
mov
inc
jne
lahf
dec
sbb
andl
outsl
jp
jnp
jb
shr
pop
mov
jno
mov
mov
je
xor
lcall
lods
imul
sbb
les
and
push
cmpb
inc
sbb
fwait
lret
orl
fisttps
lahf
sbb
dec
aad
mov
popf
and
jb
jl
lock
aaa
mov
mov
cmpsl
dec
inc
faddl
inc
ret
mov
test
pop
dec
mov
dec
es
pop
mov
scas
mov
xor
aad
lods
les
fcmovu
loopne
ret
or
and
ljmp
sahf
dec
loopne
lds
xor
pop
add
pop
xor
mov
xchg
fcompl
addb
sub
add
cmp
xchg
cmp
lahf
pop
xchg
and
pop
cmp
cmp
insb
pop
movl
cmp
pop
lds
sbb
dec
popa
and
mov
xchg
jle
inc
sti
mov
lret
ja
or
push
and
xor
push
idivb
ljmp
rolb
pop
and
dec
stos
shrb
dec
or
lret
push
stc
add
pushl
cld
pushw
popfw
pushf
pushf
jmp
mov
xchg
jle
cld
pusha
inc
mov
ret
pop
xor
fwait
xor
sub
sti
cs
movsb
fs
mov
push
in
out
int3
inc
or
push
or
mov
lea
adc
sarl
das
add
xchg
xchg
push
sbb
or
mov
mov
xor
loopne
ja
repz
shlb
lret
jge
lret
and
out
les
bnd
jae
add
popa
jns
pop
xor
ja
lret
test
decl
fcoml
pop
imul
xchg
imul
xor
pop
fisubrs
or
xchg
lds
xchg
and
inc
rorb
cs
push
sahf
fs
data16
cmc
out
cmp
cld
and
cmpsl
xor
jecxz
in
test
inc
xchg
inc
repnz
mov
sbb
and
jnp
in
lahf
inc
scas
xchg
fistps
jmp
insb
inc
rcl
inc
jg
mulps
pushl
xchg
out
or
inc
add
ja
pop
pop
jb
push
test
and
out
mov
mov
pop
sub
dec
cli
int3
inc
enter
push
aas
out
adc
cmp
insb
and
fstps
test
sub
adc
bound
cltd
lcall
shll
cli
ljmp
jae
lods
xchg
and
sti
stc
sbb
cmp
shll
in
or
mov
cmp
xor
lret
pop
fsubl
inc
jb
movsl
nop
or
push
leave
jmp
inc
jecxz
xor
sbb
xorl
movsl
push
out
mov
mov
test
fs
jne
rcl
rcr
mov
mov
cmc
cmp
add
jmp
loop
add
push
lret
push
jecxz
outsl
aas
xchg
das
setne
adc
xchg
jae
into
orb
cld
cmp
mov
pushf
xchg
inc
pop
lods
jb
cmp
out
mov
cmp
ljmp
push
or
cmp
scas
shlb
lea
js
cmp
mov
cld
adc
mov
cwtl
push
scas
inc
loop
ficomps
jle
scas
pop
imul
or
inc
add
inc
iret
imul
aaa
iret
mov
jg
repz
fildll
pop
mov
cmp
clc
mov
add
les
pop
sbb
add
ljmp
inc
jnp
sbb
scas
or
dec
sar
mov
call
fwait
js
push
pop
aad
ret
jnp
setns
and
lods
imul
sub
mov
idivb
into
push
clc
push
adc
mov
xor
nop
hlt
mov
out
iret
lcall
jecxz
adc
in
push
push
rorl
or
cs
sub
inc
dec
xchg
xor
pop
add
pop
mov
orb
fistps
ljmp
xchg
daa
mov
dec
inc
jmp
mov
cmp
sbb
dec
sub
das
test
dec
mov
add
push
call
cmpsl
in
addr16
xor
fisubs
mov
je
and
sbb
shll
and
mov
add
out
inc
xchg
mov
cmc
stos
popa
ret
jbe
xchg
mov
jns
pop
js
lock
sbb
push
mov
imul
sub
push
lea
sti
sbb
pop
mov
pop
or
xor
xlat
nop
jnp
mov
add
push
in
leave
mov
push
rcrb
outsl
aad
cltd
push
mov
shlb
mov
push
lea
push
movl
mov
call
push
fmuls
mov
add
hlt
aam
ret
dec
subl
hlt
sub
repz
aaa
stos
xchg
rorl
xchg
andl
inc
dec
in
lock
pop
jle
jns
push
aas
or
adcb
cmc
psubusw
cs
add
out
into
and
dec
lock
jg
in
mov
jmp
sub
aam
push
cmp
adc
cmp
lock
dec
and
mov
mov
shll
mov
lds
out
dec
out
push
mov
cwtl
add
repnz
pop
fildl
stos
shlb
addb
test
adc
pop
sub
fwait
dec
push
dec
adc
out
adc
stc
lea
jecxz
orl
jbe
push
or
and
nop
cli
pushf
pop
sbb
mov
push
repz
and
fwait
mov
xchg
jmp
inc
sarl
mov
add
jge
jmp
scas
mov
sub
mov
mov
fwait
mov
xor
in
in
xchg
xchg
inc
mov
aas
mov
cmpsl
push
enter
fisubs
pushl
cmpsl
les
push
scas
shrl
push
push
dec
sub
ror
jp
jle
dec
sbb
call
xchg
and
lret
mov
pop
stc
addr16
sbb
jnp
fsubrs
clc
insl
divl
nop
ret
xlat
dec
xchg
xchg
adc
js
xchg
xor
jl
pushf
popf
je
xchg
pop
push
int
pop
mov
in
mov
ljmp
inc
dec
lret
mov
imulb
sub
in
and
sbb
and
lds
or
inc
gs
mov
adc
mov
loopne
dec
xor
dec
push
aas
push
and
arpl
adc
xor
repz
in
xchg
orl
sbb
pop
fisubrl
mov
mov
push
lret
jb
je
dec
xchg
iret
ja
lahf
pop
sti
xchg
aaa
roll
xor
jg
pop
mov
xchg
aaa
insl
push
icebp
aad
sbb
adc
insb
xor
jp
xchg
add
je
or
add
and
jb
xchg
outsb
inc
and
dec
and
add
push
sbb
das
cld
out
cmpsb
xor
xchg
jmp
sub
xchg
imul
mov
or
or
mov
mov
lea
lahf
push
cs
mov
icebp
test
and
sub
jbe
mov
fwait
cmc
adc
ficoml
lret
insb
jne
js
xchg
dec
sahf
push
jmp
xor
inc
dec
push
test
lods
stc
fstl
jle
inc
add
mov
mov
outsl
or
cwtl
jbe
cwtl
push
mov
dec
aaa
mov
cli
cwtl
sub
pop
lods
mov
mov
scas
mov
fadds
lock
roll
push
dec
inc
mov
in
movsl
pop
fnsave
cmpsb
jecxz
fdivl
cld
aas
or
js
ja
or
xchg
dec
lock
es
pop
adc
sbb
cltd
cmp
xchg
add
cmp
adcl
mov
lods
pushf
mov
lea
jp
inc
jmp
shll
dec
sti
stos
xchg
pop
scas
sbb
imul
imull
cmp
pushf
mov
jbe
jne
sarl
enter
out
scas
dec
lret
xchg
dec
pop
xchg
pusha
es
popf
xor
sub
cmp
sbb
imul
cmp
aaa
pop
and
mov
pushf
icebp
or
xor
andl
dec
cld
adc
stc
int
addl
arpl
dec
and
cmp
mov
sbb
test
call
arpl
dec
xchg
jae
mov
mov
fnsave
mov
cmp
ljmp
xchg
xchg
inc
mov
clc
fcoms
sub
fwait
scas
int
in
cmp
jg
cmp
mov
jle
push
cmp
pop
jns
pop
clc
mov
jge
cmpsb
mov
icebp
imul
mov
add
xchg
inc
in
je
or
push
imul
cwtl
push
xchg
mov
xlat
sbb
push
mov
ret
aam
adc
add
mov
lea
jne
rcl
pushf
pusha
rcl
mov
bt
bt
add
pushf
movzwl
add
shl
bswap
call
dec
sbb
jl
in
in
mov
xor
pop
adc
inc
subb
pop
daa
xchg
js
lcall
ljmp
and
or
push
lcall
mov
lods
mov
cwtl
inc
push
mov
push
shlb
dec
mov
push
and
or
pop
mov
push
bnd
test
mov
inc
cli
mov
scas
xchg
inc
push
fidivrs
add
add
sbb
cmp
push
cmp
test
cwtl
sbb
mov
dec
inc
pop
mov
movsbw
push
not
mov
lea
not
mov
mov
push
jmp
std
out
dec
xchg
std
incl
mov
sbb
xchg
outsl
shrl
cld
adc
dec
mov
addb
out
cmp
lods
les
cmp
stc
jnp
sub
push
insb
nop
lods
rclb
mov
pop
lea
icebp
idivb
in
out
cld
jecxz
jge
ffree
test
je
dec
scas
lods
add
scas
mov
inc
mov
scas
jns
movsl
inc
mov
sub
sbb
test
xchg
push
fsub
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
cwtl
das
rorl
cmpsl
or
cmp
dec
cmp
scas
xchg
ja
enter
test
dec
arpl
arpl
dec
int
push
in
pusha
pop
push
js
or
scas
cmpsl
enter
adc
pushf
inc
in
loopne
xor
mov
pop
push
mov
adc
xchg
lgs
mov
mov
push
shlb
dec
xchg
fcompl
or
xchg
outsb
add
mov
mov
xlat
and
lea
pop
mulb
ret
ss
lcall
out
leave
sub
out
jp
je
jmp
jle
and
mov
jle
mov
dec
sbb
in
cmp
pop
or
jle
and
and
lock
jns
push
les
sbb
ss
gs
out
mov
aas
sub
pop
out
cmp
scas
xor
pop
fisttpll
adc
sub
arpl
push
daa
mov
xchg
adc
in
lods
jge
mov
shr
nop
sbbb
fcoml
fsubl
mov
in
cs
data16
shl
xchg
movsb
stc
lock
xor
mov
jecxz
dec
add
mov
aam
add
pushf
adc
lret
rcrl
ret
insb
jmp
xchg
popa
or
mov
loopne
jge
mov
mov
inc
add
push
adc
xchg
je
push
loop
and
je
lods
push
int3
scas
inc
ret
ret
jne
movb
rorl
call
pushf
jmp
pop
xchg
cli
rorb
faddl
lret
jb
notb
pop
es
xor
out
adc
xor
jnp
data16
test
fs
push
subl
mov
fisttpll
push
sbb
sti
xchg
sub
cli
test
in
xchg
push
fst
cmp
or
adc
pushf
sbb
add
shlb
adc
mov
push
fsubrl
loopne
mov
shl
rorb
loope
or
lret
dec
pop
orl
mov
mov
pop
xor
scas
jno
stos
xor
scas
dec
lds
idivb
push
arpl
orl
shrl
orb
jecxz
cmp
in
cmc
call
lcall
js
xor
dec
lret
test
cli
sbb
cmp
shll
outsl
dec
idiv
bound
sub
cmpsl
xchg
inc
js
cmpl
adc
mov
add
pushf
push
push
adc
jno
mov
ror
call
adcl
rcrl
sbb
mov
push
xlat
adc
sbb
dec
lahf
lahf
xchg
imul
fistl
arpl
jne
aaa
shlb
xchg
mov
sbb
pop
aaa
sarb
sahf
mov
out
aad
jmp
aad
scas
or
sub
movsb
loop
push
cmp
jae
push
push
fstpt
cld
push
loope
dec
jns
push
loope
insl
adc
daa
in
je
test
pop
and
roll
pop
in
and
push
lret
insb
jns
imul
mov
rorb
popf
fisttps
icebp
data16
sub
mov
or
enter
adc
lcall
bound
loop
cltd
stc
fwait
adc
cmp
sbbl
add
xor
lods
pop
dec
dec
mov
dec
loopne
xchg
daa
notl
nop
mov
xchg
mov
xchg
js
lods
lahf
iret
adc
mov
rcl
mov
jg
sub
jo
jge
ljmp
rclb
push
jb
test
ds
jmp
inc
jnp
clc
negb
mov
pop
dec
icebp
sarl
mov
adc
or
mov
jmp
and
cmp
sub
pop
popf
lds
daa
jbe
std
mov
push
rorb
dec
add
mov
pop
out
test
push
xor
pop
mov
pusha
rolb
scas
pop
add
scas
push
sub
inc
mov
and
pop
sbb
and
ret
mov
and
imul
cmpsb
addb
jb
xchg
mov
stos
test
add
cmpsl
sub
aas
push
lds
mov
push
out
inc
sbb
aas
sub
inc
clc
push
imul
scas
iret
shlb
lds
add
ds
aam
adc
lods
test
xchg
pop
pop
clc
inc
shll
nop
jp
mov
inc
or
jmp
cmp
or
or
pushf
movw
pusha
lea
je
stc
test
jnp
cmp
cmp
push
movl
pushf
pushl
ret
add
into
dec
xchg
sahf
adc
pusha
inc
lods
aam
les
push
mov
cs
stos
lcall
addr16
mov
fcoms
stos
cmp
pushf
mov
mov
shrl
lret
mov
es
jmp
hlt
pop
mov
jns
push
xor
mov
ljmp
mov
jne
cltd
daa
mov
cli
adc
mov
adc
dec
mov
jae
xchg
inc
pop
lea
pop
sub
sti
cmpsl
and
test
and
loopne
cmp
add
loopne
out
stos
jp
stos
dec
mov
and
cmp
push
inc
sbb
loopne
shrb
insl
sti
test
lock
jns
mov
loope
rorb
jmp
cli
and
dec
xchg
add
or
out
out
scas
jnp
add
xor
jno
filds
mov
push
test
ret
paddw
mov
inc
iret
scas
push
xlat
fmulp
pop
popa
xor
scas
sbb
nop
repnz
dec
mov
mov
adc
adc
cmpsl
adc
lods
jne
int
lcall
jb
inc
frstpm(287
xor
out
loope
xor
ret
lods
dec
in
mov
jl
out
sub
push
lahf
popf
popa
cmp
and
ret
mov
mov
ds
push
int
insb
add
sub
jle
dec
lret
dec
xchg
sub
lahf
pop
fistps
addl
jecxz
jg
imul
xchg
mov
adc
test
add
je
rcrb
icebp
pop
add
arpl
icebp
mov
add
or
mov
std
mov
ljmp
mov
pop
in
dec
xchg
loop
cmp
mov
movsbw
lea
lea
lahf
pop
jmp
setge
shrd
xchg
dec
stc
jmp
call
clc
pushf
cmp
mov
lea
ja
pushf
bt
call
pushf
push
movb
movl
pusha
pushf
push
movl
movw
push
lea
jmp
pop
outsb
pop
lret
sbb
mov
xchg
daa
pop
jnp
ret
jae
cld
mov
mov
roll
notb
and
lahf
hlt
imul
andb
hlt
es
jmp
mov
outsl
push
push
loope
outsb
hlt
sahf
mov
cli
les
dec
ds
lea
or
add
nop
fs
lock
add
mov
in
lahf
ljmp
xchg
cmc
pushf
cmpb
lea
jne
push
lea
jne
clc
sbb
xor
xor
mov
bt
and
jmp
push
pop
mov
dec
xchg
es
mov
push
fsubl
insb
cmp
push
aad
mov
dec
or
and
xor
dec
insb
push
ret
xchg
fmuls
lret
sbb
outsb
add
scas
scas
in
push
and
in
js
in
fdivrs
sub
fs
fnstcw
test
push
lods
subb
push
xchg
jle
jp
pop
rorb
push
mov
cmp
lods
mov
in
std
outsl
adc
cmpsl
jmp
lea
inc
out
lcall
outsb
ss
and
mov
mov
in
pushl
aas
pushf
push
mov
fistl
xor
sbb
std
pop
xchg
fistps
or
add
jne
push
and
mov
inc
mov
ds
lahf
push
scas
jnp
sbb
mov
and
adc
pop
mov
cli
testl
sahf
hlt
mov
lret
xchg
divl
maxps
ret
jae
orb
cmp
dec
xchg
mov
mov
sub
lret
mov
rclb
rcrb
xchg
lock
gs
sbb
xor
icebp
sub
pushf
test
mov
loope,pn
push
sbb
aaa
mov
pop
lock
mov
mov
pushf
movsl
loope
mov
fidivl
push
sbb
sub
pusha
loop
or
dec
mov
sub
inc
leave
dec
xchg
sub
pop
pavgw
pop
rcll
mov
js
sbb
push
jo
sub
adc
push
adc
fsts
inc
sti
int
or
jne
jle
cli
rcrl
push
push
xor
jl
mov
xor
and
pop
xor
or
adc
orl
movsb
cmp
add
outsl
dec
push
mov
sbb
and
pusha
bound
cmpsl
adc
xchg
and
xchg
lods
out
and
insb
add
es
mov
jae
ret
stos
mov
sub
leave
popf
cwtl
push
jle
mov
and
adc
fs
push
aas
mov
pusha
lea
jbe
mov
shl
sub
shl
btr
mov
xchg
mov
shld
neg
add
btr
cmp
shr
rol
xor
mov
movzbw
stc
bsr
sbb
add
call
push
movb
movl
pushf
lea
jmp
pusha
movl
pushf
pushf
pushf
lea
jmp
std
mov
enter
stc
mov
add
push
mov
flds
gs
inc
sub
jae
das
fbld
inc
imul
mov
in
imul
inc
in
jne
mov
icebp
stos
and
sti
inc
and
adc
cmp
sub
pop
adc
jmp
xchg
xchg
mov
je
cltd
lds
and
ds
scas
push
sbb
dec
dec
pop
mov
sub
mov
vcvtps2pd
jmp
pop
mov
scas
jg
mov
in
adc
jge
dec
jle
mov
xchg
imul
cmpsl
sub
mov
fadd
lahf
xor
push
icebp
fwait
pop
iret
popa
or
fistpll
xchg
inc
hlt
sub
cli
dec
xchg
js
stos
mov
into
push
out
push
jb
or
lea
data16
ds
sbb
sarb
imul
sub
adc
jbe
lret
mov
cltd
scas
mov
notl
cltd
mov
xchg
and
cs
enter
in
cmpb
push
ss
xor
mov
test
jnp
fmull
sbbb
lds
adc
ja
mov
repz
pop
jne
xchg
aas
mov
out
stos
cltd
test
inc
and
adc
loopne
sub
addr16
pusha
movsb
xor
xor
xchg
add
inc
in
loop
cmp
and
outsb
sub
out
test
mov
mov
sbb
insl
pop
and
cmp
ss
jecxz
xchg
mov
out
or
sbb
inc
fildll
fidivrl
leave
mov
push
mov
adc
xchg
popa
aas
mov
mov
ja
movsb
mov
push
pusha
xlat
sar
lds
fisubrs
insb
push
les
pop
sbb
pop
cmpsb
xchg
pushl
mov
mov
push
and
lahf
lea
inc
mov
jne
aad
pop
in
lock
pop
cli
xor
sahf
sbb
js
mov
sub
sub
add
mov
jo
vcvttss2si
inc
cs
out
pushf
xchg
cwtl
jmp
pop
xchg
andb
push
and
jae
faddl
das
and
pop
shrb
push
cli
or
xchg
es
xchg
adc
mov
push
lock
ja
mov
loopne
cmp
call
pusha
lea
jae
push
bts
mov
shr
rcr
mov
btc
mov
call
mov
xchg
aaa
out
pop
sbb
lahf
sbb
outsl
out
inc
lods
mov
repnz
xor
icebp
pop
hlt
in
arpl
lock
ret
sub
pop
cmp
sbb
push
cmc
rcr
ss
inc
mov
arpl
pop
movzbl
inc
rclb
push
aas
mov
jae
sbb
adc
in
sbb
arpl
cmc
pop
scas
cmpl
out
jne
jp
aad
fldenv
in
fsubs
cmpsb
les
adc
loop
sbb
mov
not
out
pop
mov
push
adc
movsl
ret
insb
mov
push
jo
dec
push
or
or
mov
movsl
mov
and
xchg
and
stos
mov
inc
movsl
jle
hlt
sahf
jecxz
dec
fiadds
incb
mov
stc
lret
mov
lcall
loopne
xchg
lret
push
inc
and
je
test
push
loope
or
lds
xor
movsb
nop
subb
mov
mov
push
leave
cmpsb
push
addb
data16
cmpsl
outsl
pusha
repz
sub
fld
outsb
ds
add
push
add
fcompl
push
sahf
inc
push
sarb
jmp
xchg
sub
dec
dec
xor
cs
insb
add
sub
ret
cmp
push
icebp
jno
movsl
dec
cmp
sti
bnd
repz
rcrl
mov
xor
fnsave
hlt
jnp
inc
into
dec
and
jl
in
mov
jmp
mov
cltd
mov
mov
cwtl
jne
xor
fisubrs
cmc
daa
out
fiadds
aad
lahf
gs
jnp
jns
loopne
je
subl
xor
ret
xchg
dec
dec
sti
push
lret
push
mov
popa
repz
xchg
loope
data16
push
dec
in
push
mov
fstps
cmc
mov
push
cmp
pop
lret
test
decl
jge
in
dec
xchg
lods
sub
push
mov
ret
xchg
xor
xchg
dec
sub
iret
mov
xchg
je
out
out
or
lcall
in
xchg
sbb
sbb
inc
jl
cmp
adc
cli
sarl
adc
mov
inc
lcall
inc
les
popf
dec
push
dec
rcrl
push
pop
mov
fldpi
or
xchg
in
pop
adc
push
lret
mov
push
cmp
inc
jp
jno
mov
fisttpll
xchg
add
pop
aaa
add
push
mov
pop
les
mov
idivb
daa
dec
xor
lcall
adc
inc
in
loopne
push
fadd
pushf
lock
push
test
rcll
push
idivb
cwtl
jle
lahf
xchg
rcll
mov
xchg
cmp
ja
sub
jp
cmp
sbb
fcompl
mull
or
xor
cmp
insb
dec
shrb
je
je
adc
test
or
fs
push
cmc
faddp
dec
xchg
xchg
push
out
inc
mov
push
xchg
repnz
adcb
xor
out
lahf
jo
push
out
fsubs
insl
push
sbb
cmp
mov
scas
jae
pop
imul
imul
adc
cmp
push
sbb
pushf
xchg
mov
in
inc
sub
insb
or
cmpsb
and
pusha
pop
fmull
mov
popf
xor
fs
ja
push
push
pushf
pusha
mov
pushl
popl
push
movb
pushf
pushf
pushl
ret
scas
xchg
xor
dec
xchg
cmpsb
sub
pop
adc
add
jo
inc
mov
xchg
bound
mov
mov
in
inc
repnz
pop
or
ljmp
fwait
push
pop
aas
and
adc
call
mov
cmpsl
jae
lods
dec
xor
sub
shrb
or
or
jo
cmpsl
add
dec
xor
scas
push
nop
xchg
mov
adc
and
jp
outsb
pop
sbb
pusha
jmp
inc
xor
aas
pop
addl
addr16
das
add
ret
inc
cmp
fwait
sbb
mov
int3
push
mov
push
xchg
and
inc
cs
xchg
or
popa
and
dec
mov
jecxz
outsb
or
imulb
mov
cmp
pop
and
push
pop
in
fildl
scas
pusha
repz
mov
mov
jns
faddp
inc
sbb
mov
dec
les
rolb
mov
fwait
daa
movsl
cmp
leave
fnstcw
ss
subb
xchg
push
loop
or
xor
pop
in
stc
fldt
push
jg
or
jmp
xchg
lahf
cmp
add
cmp
pop
pop
xchg
xchg
subb
rclb
mov
roll
dec
sub
pmulhuw
xorl
mov
mov
mov
or
jb
out
adc
mov
into
pop
loop
es
pusha
gs
sub
sub
lea
call
call
push
ja
dec
xchg
pop
int
dec
test
test
pop
loope
mov
jb
push
mov
push
pop
mov
push
and
inc
out
loop
xor
push
cwtl
push
shl
and
mov
aad
daa
out
lret
sub
data16
mov
popf
test
rorb
les
inc
jle
dec
jle
cmpsb
mov
adc
clc
mov
add
mov
or
cld
fisubs
les
sbb
sub
stos
cmpsb
out
not
mov
sub
inc
fdivl
pushf
push
clc
andb
or
orl
shlb
sbb
inc
repnz
ljmp
mov
mov
xor
lret
push
push
cs
mov
pop
aam
push
into
je
xchg
ljmp
shl
and
pop
pop
sbb
jl
nop
shlb
push
enter
mov
dec
fildl
ja
xor
in
lahf
jg
push
jp
pusha
inc
pusha
push
jmp
cmpsb
pop
push
imul
inc
repz
add
cmp
emms
inc
mov
out
sti
jo
add
jp
jnp
xlat
mov
push
sub
sub
mov
sti
mov
jl
mov
ja
xchg
sbbb
adcb
cli
int3
add
popf
sbb
lock
jmp
inc
dec
push
out
ret
out
into
xchg
pop
push
or
and
jmp
xchg
sbb
ret
xchg
inc
lds
int
lcall
lods
or
cmpsl
mov
xor
or
mov
daa
xchg
imull
fwait
inc
adc
fcmove
sub
popa
cmp
out
cmp
inc
xchg
cmp
andb
push
jno
and
xlat
sbb
nop
pop
cs
jmp
cmpsb
mov
fs
shll
insl
add
aam
mov
mov
lods
pop
inc
fadd
nop
add
jle
fiadds
jno
mov
jne
jns
add
mov
les
push
xor
cmc
xor
jmp
popa
movl
ljmp
push
rcll
orb
inc
xor
lret
dec
pushf
mov
ljmp
mov
std
cmc
fstpl
js
div
ds
scas
xchg
sbb
aad
lret
int
lcall
xor
sub
push
call
jns
repz
sub
pop
push
scas
mov
dec
es
addr16
jecxz
xchg
test
mov
push
das
dec
sbb
leave
cmpsl
cmpsl
loopne
sar
sbb
ret
mov
int
mov
adc
mov
insl
sti
rorl
mov
into
fnstsw
inc
scas
push
sub
jmp
pop
filds
out
int3
sbb
sub
mov
sbb
push
xchg
push
ljmp
popf
push
pushl
mov
cmc
cltd
lods
jo
loope
jmp
cmp
stos
fcoml
adc
pop
pmaxub
sub
mov
leave
ret
xchg
lock
cmp
mov
push
movsl
fstl
outsb
inc
cld
aam
or
cli
mov
mov
mov
loope
mov
call
adc
pop
mov
mov
jl
mov
xor
jo
in
scas
pushf
jge
mov
in
dec
roll
repz
hlt
sub
inc
aam
subb
push
add
ljmp
jle
xor
jp
dec
jbe
rorl
inc
scas
jmp
mov
mov
repz
and
dec
pop
popf
mov
data16
scas
and
push
insl
pop
mov
mov
sub
mov
mov
out
adc
lods
adc
pop
xor
nop
hlt
pushf
or
or
push
es
outsb
nop
bound
xorb
shlb
mov
xchg
insb
push
add
aaa
pop
mov
ret
pop
fs
cmp
jg
cld
fldcw
cmp
aad
jno
or
cld
clc
insl
rcrb
arpl
push
fisubs
mov
inc
clc
mov
and
push
jp
dec
mov
lea
je
stc
jmp
and
aam
dec
xchg
add
call
or
mov
adc
pushf
movb
jo
jp
mov
loop
lret
sarl
test
into
data16
dec
rcrb
fwait
pop
and
xchg
push
sbb
mov
aad
adcl
or
cli
nop
out
jbe
inc
push
loope
test
inc
adc
and
dec
jge
dec
xchg
pop
mov
or
xlat
xchg
adc
daa
repz
mov
sub
aas
mov
sub
pop
scas
cmpsl
and
adc
pop
int3
pop
add
cmp
xor
push
jmp
jno
std
add
pop
jo
subl
mov
mov
lret
mov
inc
aaa
sub
push
xchg
gs
cmpsb
sarb
xlat
lods
dec
pop
xchg
dec
leave
cmpsl
and
add
mov
orl
lea
jb
stc
pusha
movw
mov
cmp
mov
jmp
pushl
inc
pushl
pusha
pushf
lea
jmp
push
lahf
repnz
out
stos
adcb
sub
dec
shlb
pop
dec
jbe
icebp
sub
ret
cs
lret
aaa
mov
and
leave
adc
mov
add
mov
gs
sbb
push
cmp
hlt
xor
in
xor
fiaddl
xchg
push
adc
ret
jle
hlt
pop
sbb
pop
push
sbb
lcall
imull
push
jnp
cmc
mov
jne
in
push
mov
movsb
in
push
clc
roll
dec
xchg
mov
pop
mov
and
cmp
cwtl
push
aam
sub
push
cmc
ja
test
xchg
das
test
insl
or
add
hlt
jnp
jg
pcmpeqw
arpl
sbb
xchg
push
jae
dec
inc
stc
sub
rclb
sub
sub
fisubrs
sbb
xchg
jge
in
cltd
cs
mov
test
cmp
sbb
test
leave
test
jmp
xor
sbbl
jbe
test
inc
shl
shll
cmp
jmp
mov
and
xchg
stos
cmp
push
lret
mov
push
lea
lret
jbe
cmpsl
mov
mov
pop
shll
icebp
ret
lods
les
repz
push
add
imul
popf
lods
sub
push
loopne
mov
add
dec
jne
cld
aas
dec
dec
jecxz
dec
sub
push
test
push
mov
add
adcb
pop
cmp
test
lret
xorl
pushf
rclb
ljmp
or
sbb
loopne
and
pop
in
cmp
mov
loop
mov
sbb
int3
inc
roll
pop
call
repz
mov
or
mov
popf
dec
in
cmpb
inc
cld
mov
dec
stos
cmp
pop
inc
idivl
pop
jno
mov
aam
sarl
add
cmp
or
jne
sbb
pop
add
jmp
mov
xchg
out
sub
mov
cmp
inc
fistpll
mov
inc
mov
xor
repz
out
lcall
aam
mov
sub
scas
fwait
aaa
add
add
xor
lock
push
fucomp
inc
inc
mov
fsubrl
iret
push
loopne
xchg
xchg
rorl
or
mov
add
divl
add
fwait
cmp
mov
icebp
arpl
decl
mov
jmp
and
shll
loope
or
dec
fistl
xor
aaa
fcoms
dec
mov
shrl
push
push
dec
mov
mov
addr16
jnp
inc
xchg
sbb
mov
or
in
mov
adc
dec
dec
out
cltd
push
dec
in
push
mov
or
mov
jecxz
je
nop
outsb
adc
mov
mov
ret
ja
or
ja
adc
mov
and
inc
or
aas
cltd
mov
mov
movb
test
pushf
cmp
call
aad
aaa
mov
xchg
lahf
adc
sarl
in
inc
jmp
add
int3
cmpsl
outsl
add
jle
inc
bnd
lods
gs
insl
lods
pushf
push
mov
orl
adc
sbb
push
and
call
leave
into
mov
cmp
andl
and
dec
fwait
icebp
or
lret
xchg
pop
or
sub
xchg
cmp
cli
fistpl
into
pop
out
cmpsb
pop
and
mov
stc
mov
stc
inc
std
mov
repz
mov
mov
xchg
lds
aam
icebp
inc
cmc
fwait
xchg
scas
arpl
and
in
outsb
insl
adc
std
sahf
shlb
dec
in
sbb
sub
sbb
ret
lods
lret
gs
jecxz
pusha
fs
out
stc
inc
mov
ds
out
dec
jle
add
nop
cmp
pop
and
adc
xchg
ss
je
dec
jp
mov
das
xor
pop
mov
xchg
ljmp
sbb
or
shlb
outsb
and
or
jns
mov
out
stos
sti
jecxz
add
nop
leave
or
and
scas
jbe
and
nop
test
xchg
pop
icebp
jecxz
enter
cmp
mov
sub
pushf
push
out
subb
fcoms
mov
mov
lss
sub
or
cmpsl
and
dec
sub
enter
mov
lret
dec
jl
dec
xchg
fldenv
movsl
sbb
movsl
gs
out
mov
add
out
xchg
xchg
out
insb
mov
pop
sti
jns
lret
xchg
fwait
inc
aas
dec
clc
xorb
gs
sbb
es
pop
dec
and
clc
int3
mov
bound
fistl
scas
and
or
dec
dec
insb
pop
ljmp
test
mov
sbb
jl
mov
int
jbe
pop
sub
dec
cmp
add
jno
jg
roll
push
sbb
mov
aad
push
std
ret
cltd
inc
in
out
fnstenv
pop
or
ret
inc
das
adc
pop
movsl
test
aam
push
negb
sub
sub
xor
lock
jno
mov
sub
or
jb
out
jg
movsb
ds
and
popa
mov
imul
out
inc
jns
pop
or
std
push
cmc
andl
cmpsb
dec
xor
mov
and
inc
notb
test
and
scas
jle
push
mov
call
les
fldcw
xchg
insl
shll
or
shll
fwait
popa
ss
ss
add
in
fistl
je
dec
add
add
mov
clc
adc
test
sti
xchg
cld
add
dec
cmp
mov
cmp
cmp
mov
es
sbb
sti
je
push
sbb
dec
add
push
out
adc
pop
imul
cmp
sarb
mov
push
fcomps
js
adc
repnz
lret
movsl
pop
cmp
movl
mov
lea
jno
push
movl
push
pushf
lea
jmp
pushf
call
cmp
mov
xchg
divb
rclb
adcb
loop
cmpsl
pop
or
pop
pop
lods
xor
xchg
cmp
popf
iret
adc
test
mulb
in
arpl
mov
shlb
mov
es
xchg
jbe
fidivrl
adc
adc
sbb
pop
jge
mov
adc
ljmp
lea
jne
cwtl
jmp
rol
pop
mov
xchg
imul
cmc
cltd
in
lods
or
cmpsl
ret
sub
leave
sbb
push
xchg
and
and
dec
adc
push
dec
repz
fistl
das
das
rolb
cmp
ret
into
shr
cmpsl
mov
pop
mov
push
mov
stc
push
cmp
xchg
pop
int
sub
jecxz
sldt
stc
push
jmp
ror
pushf
pushl
jmp
push
int
dec
xchg
jbe
scas
adc
shrb
movb
out
pop
int3
or
call
push
in
dec
xor
mov
jp
scas
inc
clc
dec
add
jle
mov
js
pop
pop
cmpsl
sbb
imul
cs
cli
push
dec
stos
shl
mov
loop
addr16
test
ss
and
dec
push
add
mov
pop
out
flds
gs
outsl
sub
or
loope
dec
pusha
mov
rolb
jecxz
sbb
scas
popa
mov
sbb
aas
sarl
das
repz
pushf
call
xor
int
dec
xchg
or
fdivl
sahf
bound
lds
fadds
pop
fistpll
ret
xchg
sub
xchg
dec
lret
scas
aas
mov
dec
sub
and
cmp
mov
lea
push
fsubs
jb
mov
xor
xchg
inc
sbb
jbe
dec
xchg
pusha
ficoml
mov
push
lcall
dec
mov
inc
push
nop
add
scas
mov
add
lock
sti
mov
mov
mov
pusha
lcall
insl
popf
leave
lea
push
and
xchg
pop
in
movsl
int3
or
aad
popf
lret
shll
aad
jbe
mov
les
push
xor
cmpsl
dec
aad
jns
mov
mov
xchg
std
cmpsl
es
dec
loopne
push
movl
push
mov
cld
nop
jp
jle
lds
icebp
add
int3
cs
mov
clc
ficoml
hlt
icebp
cmp
push
out
and
movsb
aad
sub
sub
mov
and
pushf
cmp
nop
pusha
mov
push
cmp
sbb
mov
mov
mov
ss
pop
and
and
inc
ja
push
adc
daa
es
cmc
mov
and
mov
dec
mov
or
mov
scas
mov
xlat
int3
fnstcw
pushf
loop
scas
dec
xchg
ret
sbbl
xchg
cmp
fistps
sub
jnp
mov
push
loopne
repnz
test
loopne
cmpsl
add
mov
sub
jb
sbb
inc
lea
or
jl
movsl
pop
movsl
mov
mov
sbb
adcl
mov
pop
or
push
hlt
fisubrl
cs
or
pop
scas
stos
lea
add
dec
xchg
adc
in
gs
push
cmp
jns
out
stos
sub
xchg
inc
mov
inc
repnz
stos
pop
ja
xchg
cli
and
pop
testb
enter
mov
jge
sbb
movsb
jp
imul
xor
push
and
xchg
sbbl
inc
add
pop
shlb
lret
stos
adc
dec
and
ss
cmp
pop
inc
mov
lret
sti
insl
js
sbb
dec
or
scas
dec
xchg
mov
mov
lcall
push
sub
mov
sbb
out
mov
mov
enter
sub
stos
sbb
mov
les
sub
in
push
ds
inc
fistpl
daa
cmpsb
addb
stc
xor
ds
hlt
hlt
jbe
mov
dec
sbb
test
adc
mov
sahf
add
inc
dec
jo
push
mov
ret
call
mov
xchg
js
pop
xlat
scas
inc
leave
cmpsl
std
mov
aas
roll
or
push
pusha
inc
mov
pusha
sub
stos
jb
mov
scas
jle
mov
shlb
cmp
mov
insb
pop
sub
pop
pushf
fnstenv
jbe
add
subl
adc
pop
cmp
inc
popa
pop
xor
jbe
lret
into
inc
mov
data16
xor
ret
mov
mov
adc
sar
sbb
pop
adc
xlat
leave
stc
fwait
mov
repz
sub
add
sti
popf
aaa
add
int
lock
jo
pushf
lea
ja
and
neg
ror
add
rcl
seta
neg
mov
call
pusha
call
and
shrl
fnstcw
dec
lods
push
rcrl
lods
sbb
mov
addr16
pusha
call
xor
ret
xor
fstpl
sub
jb
mov
pop
and
in
rolb
xchg
pop
rcr
cwtl
push
fisttps
mov
mov
lods
popa
cmpsb
int
imul
adc
mov
pop
push
sahf
orb
xchg
cmpsl
dec
das
mov
push
loopne
je
xchg
dec
xor
pop
dec
flds
jnp
out
adc
fwait
or
insl
imull
pushf
xor
push
sbb
pushf
mov
call
aam
sub
jno
pusha
xchg
sub
stc
mov
add
orb
call
mov
in
adc
mov
jle
shrb
push
aaa
adc
xchg
rclb
jb
adc
fwait
inc
xor
push
mov
es
and
push
aaa
xchg
mov
mov
sbb
mov
inc
int
icebp
outsl
push
sti
sub
movsl
cs
sbb
stos
dec
xchg
pop
fbstp
ret
cmp
mov
dec
fistl
scas
push
repz
addr16
adc
je
ret
aad
repnz
sbb
ja
push
and
add
push
xor
rcrl
or
dec
inc
pop
adc
stos
aam
es
push
fcomp
je
lahf
imul
xchg
aas
adc
mov
les
and
mov
or
scas
js
jl
mov
popa
xlat
gs
jmp
stos
sbb
sub
outsl
adc
jnp
outsl
sub
jae
ret
jno
or
pop
test
or
lret
cmc
push
in
jbe
loop
addb
js
pop
adc
jmp
mov
xlat
pop
dec
outsl
dec
mov
adc
in
data16
int3
addr16
scas
sbb
push
bound
or
dec
movsb
push
xchg
inc
cli
pop
cmp
data16
sbb
pop
int3
cmp
out
dec
xchg
out
leave
xor
push
adc
xchg
or
inc
nop
pop
je
jle
enter
mov
mov
lods
cmp
xorb
push
ret
sub
fdivrs
or
dec
lods
cmp
jmp
nop
xor
add
lahf
push
loope
adc
pop
pop
and
pop
cs
scas
out
mov
shlb
and
insl
mov
cmpsb
pop
sbb
mov
imul
das
fisttps
add
mov
out
push
or
popf
out
sbb
les
mov
movsb
xchg
or
adc
shlb
insl
pop
mov
cltd
lret
mov
fs
jne
int
test
movsb
imul
mov
pop
insl
mov
adc
sbb
xlat
stos
adc
pop
push
loope
pop
mov
cwtl
mov
movsl
inc
mul
jae
cmpsl
sub
inc
xor
test
test
test
sbb
or
nop
xor
cwtl
xor
popf
sbb
test
sarl
adc
popa
adc
mov
lds
shrb
stos
jo
shlb
sbbb
sbb
mov
lahf
mov
or
sti
scas
pop
push
xor
test
add
cld
mov
fs
or
fcoms
or
add
sarl
imul
push
mov
pushf
aas
add
xlat
lock
xchg
out
pop
mov
adc
cmp
inc
shrb
test
into
js
lods
mov
aam
lock
pop
insl
bound
mov
adc
pop
pop
and
nop
dec
fldl
leave
test
push
mov
mov
aaa
sub
sbb
push
scas
adc
xchg
sbb
push
push
mov
stos
imul
test
or
in
push
and
mov
cli
push
cmp
out
mov
push
push
loopne
and
xor
insl
cmpsl
dec
xchg
call
in
mov
aam
lods
jp
sub
scas
daa
push
rcrl
mov
sbb
lds
sbb
in
adc
data16
add
aaa
and
lds
sub
mov
mov
sub
iret
aas
mov
movsb
and
rcll
int
loope
xor
arpl
push
mov
in
sbb
add
test
cvttps2pi
insl
iret
mov
pop
pop
mov
sub
sub
sbb
cmp
cwtl
mov
loope
mov
mov
pop
pop
pop
stos
subl
pop
test
xor
push
call
incb
icebp
inc
das
adcb
and
clc
call
insl
cs
cmpsb
dec
xchg
cmp
push
out
inc
xlat
pop
mov
mov
ja
add
scas
aaa
sti
adc
xchg
push
mov
lcall
clc
rorb
nop
cmpl
fldenv
xchg
push
adc
pusha
xchg
mov
cmp
call
jecxz
adc
shll
fildll
sub
lcall
test
aad
pop
imul
lahf
jns
popf
adc
fists
call
jno,pn
add
pushf
lea
call
call
repnz
dec
xchg
sahf
pusha
in
lods
inc
and
js
jl
fmull
int3
mov
aad
bound
sbb
je
or
je
in
or
mov
inc
das
dec
repnz
mov
xchg
aaa
pop
test
pushf
pop
sub
push
scas
nop
lret
jecxz
cmp
sbb
xchg
aas
dec
aaa
jg
or
mov
mov
out
bound
in
in
xchg
adc
insb
into
mov
and
inc
cli
xor
fbld
cwtl
outsl
add
in
stos
pop
insb
movsl
dec
xchg
push
sarb
sbb
cmp
je
loopne
push
fdivr
sbb
clc
div
lods
pop
inc
xor
and
pop
adc
inc
sub
rolb
pop
cli
fldt
fs
xchg
ds
rolb
sub
pop
lcall
jns
xorb
cmc
test
psubusw
add
fneni(8087
jns
pop
movsl
pop
scas
mov
das
pop
sub
aas
repz
popl
sbb
mov
cmpsl
jge
out
movhlps
popf
psubusw
sbb
movsb
dec
xchg
cwtl
dec
les
push
and
inc
jo
xchg
pop
mov
sub
inc
leave
xchg
in
and
or
shll
inc
inc
lret
xor
pop
sub
jnp
loopne
ds
mov
and
lea
push
mov
sahf
lea
pusha
mov
mov
xchg
inc
les
cs
cs
jne
or
aaa
shrl
in
mov
jle
mov
cld
fisubl
fcomi
sub
sbb
mov
dec
xchg
cmp
jl
clc
je
test
clc
xchg
and
xchg
inc
mov
or
fwait
aas
or
rolb
cli
mov
xchg
dec
pushf
in
ja
cs
std
pop
adc
addr16
popf
pop
fucom
cmpsl
jmp
jle
add
add
lahf
dec
mov
ds
push
and
inc
icebp
jbe
sbb
dec
sti
sbb
js
pop
gs
imul
xor
adc
lds
adc
sub
jg
push
data16
leave
jae
push
push
aaa
nop
mov
push
and
pop
sbb
mov
stc
mov
mov
or
xor
mov
pop
adc
lahf
cmp
outsl
dec
and
xchg
push
pop
sbb
enter
outsl
aas
adc
ja
std
mov
arpl
cmc
pop
push
inc
jnp
add
divl
cli
cs
xor
mov
mov
shlb
push
aad
cwtl
pop
into
sbb
hlt
scas
fs
inc
rep
xchg
jo
dec
popf
mov
dec
mov
icebp
mov
xlat
mov
mov
jne
cmp
fs
call
call
clc
dec
inc
movsb
dec
xchg
adc
inc
cli
mov
sahf
and
movsb
dec
sbb
sbb
out
int3
stc
negl
or
xchg
sub
pop
fs
movsl
inc
call
add
loop
or
loope
cli
rcrb
addl
js
dec
mov
jo
lock
mov
cmpsb
nop
out
inc
sbb
mov
cs
data16
call
fwait
dec
jnp
dec
xchg
fidivrl
outsb
ficompl
mov
scas
jp
mov
push
mov
call
ror
stos
dec
and
into
imul
and
int
stos
dec
or
dec
fwait
mov
fadd
dec
mov
inc
fsubl
enter
fdivs
cli
in
int3
ficoms
xlat
jl
lods
mov
add
pop
or
pop
bound
roll
xor
aaa
jl
mov
mov
lds
iret
sbb
lea
lods
sbb
pop
pushf
pushf
not
lea
not
mov
call
call
push
lock
std
std
mov
popa
shll
popa
popf
and
jno
mov
pop
fdivl
xor
mov
jg
in
pop
dec
inc
fsubs
aam
pop
iret
add
loop
sub
test
mov
mov
adc
inc
cmpsb
lret
xchg
push
mov
sbb
mov
call
enter
fldl
int
std
jmp
xchg
ret
push
fistps
xchg
emms
cmpsl
setg
out
std
jbe
and
iret
mov
imul
xchg
sbb
pop
add
hlt
push
xor
jp
mov
mov
fdivrl
lcall
outsb
push
int
stc
jns
ficoms
ds
mov
jno
cmc
jle
ljmp
mov
pusha
in
leave
repnz
mov
int3
xchg
test
sub
mov
aam
push
pop
lock
ljmp
jo
in
pop
add
mov
sub
and
pushl
lea
jae
call
bt
mov
call
insb
dec
jp
dec
xchg
clc
sbb
mov
or
outsb
ret
sahf
dec
call
add
mov
pop
adc
rcll
add
iret
mov
or
in
mov
jp
sti
gs
xchg
jb
jge
or
or
fisttps
icebp
lret
mov
xchg
dec
xchg
jb
sbb
mov
pop
cmc
add
fsubrs
sbb
xor
hlt
ret
pop
sbb
popf
in
idiv
aas
adc
mov
sarl
mov
movzbw
movl
jmp
and
xchg
inc
enter
push
mov
mov
lods
mov
sub
arpl
add
js
xchg
mov
dec
xchg
stc
sub
and
cmc
add
jp
inc
and
lret
adc
mov
test
sbb
cmp
inc
cltd
ljmp
sbb
ret
pushf
dec
orl
rcr
push
and
xchg
les
adcb
fdivl
leave
cmp
xchg
pop
add
push
sar
call
lea
jae
pushf
movl
call
test
pushf
call
pusha
pusha
mov
pushf
lea
jne
bswap
or
sub
neg
xor
mov
dec
pushf
add
not
rol
mov
push
cmc
test
pushl
call
repnz
xor
mov
lods
pop
les
mov
sahf
lock
mov
push
mov
fdivs
xor
cwtl
stc
xchg
loope
add
test
pusha
subb
call
mov
adc
xchg
and
lea
push
adc
jle
imul
adc
aam
pop
inc
xchg
sub
adc
fmull
sahf
or
dec
sahf
dec
xchg
mov
mov
lret
es
push
mov
sahf
and
cmpb
pop
ret
jmp
notl
add
xor
cld
mov
ja
in
inc
movsb
in
in
jb
icebp
xor
insl
add
dec
sbb
ss
punpckhdq
lods
shll
mov
pop
movsb
xchg
dec
loop
pop
test
push
mov
loop
push
fcoms
lock
push
out
push
pop
push
and
add
iret
jg
decl
or
xchg
cmp
mov
adc
imul
lds
adc
push
mov
mov
cmpsl
mov
dec
stc
ficoms
dec
pop
sub
cmpsb
sahf
sub
cmp
call
fdivl
mov
leave
or
push
cld
lret
addb
stc
out
fsubrs
dec
push
pop
pop
gs
pop
sbb
loope
add
aaa
sub
adc
pop
xchg
dec
roll
and
les
sbbl
shrl
adc
shll
leave
jne
mov
or
movsl
scas
mov
cmp
stc
mov
cs
lds
iret
loopne
in
ds
and
or
jbe
out
in
fidivrs
pop
stos
sub
fwait
mov
sub
icebp
push
lret
pushf
xor
sbb
push
and
jl
outsb
fstpt
call
enter
sub
or
pop
imul
push
jno
sbb
mov
sbbl
inc
xchg
imul
dec
cmp
xor
lret
ds
jp
cmp
xchg
dec
mov
jae
out
fdivr
mov
xor
das
pop
add
nop
mov
mov
out
dec
jmp
mov
daa
cltd
sbb
fdiv
xor
mov
rcrl
adc
ss
xor
jp
shrb
xchg
jg
and
and
aam
repnz
xchg
push
xor
add
ljmp
or
xor
loopne
in
lret
pop
mov
cwtl
bound
dec
xchg
xlat
orl
and
notl
jecxz
dec
cmp
dec
out
xor
nop
push
clc
std
lcall
out
repnz
sub
dec
sbb
push
sbb
mov
imul
cmp
mov
and
xchg
add
divl
stos
sbbl
jne
mov
xchg
push
xor
sbb
add
sbb
mov
mov
adcl
call
and
sti
mov
xchg
fwait
dec
xchg
incl
cltd
adc
mov
cs
mov
xchg
sbb
dec
scas
cmc
push
xlat
stc
gs
popf
inc
sub
and
sbb
cmp
fldenv
push
or
pop
and
inc
lea
xchg
bound
ds
enter
lock
adc
jp
or
cmp
push
sub
inc
insb
cmpsb
mov
inc
loopne
adc
popf
and
stc
pop
std
cmpsl
mov
mov
sub
fistpl
mov
jne
xchg
decl
pushf
dec
xchg
cs
cwtl
cmp
jl
xchg
call
or
mov
dec
scas
vcmpps
orl
xor
bound
cmpb
or
cmp
cmp
dec
popf
mov
mov
xor
clc
lret
mov
xchg
in
or
sbb
not
mov
imul
scas
cmpsb
sahf
ja
jnp
push
outsl
or
fwait
cmp
into
or
filds
adcb
not
push
sub
push
leave
outsl
icebp
sbb
sbb
inc
faddp
call
mov
xchg
jl
mov
cli
jbe
mov
adc
mov
stos
dec
mov
inc
pop
aas
mov
dec
loop
and
sarl
testb
data16
sub
cmp
mov
adc
xor
dec
sti
or
push
outsb
add
imul
mov
mov
jl
jns
nop
sbb
jbe
cwtl
and
fdivrl
les
test
call
mov
xor
xchg
jmp
fisttpll
mov
adc
or
mov
fistpll
jno
sbb
insl
add
jecxz
test
scas
xor
mov
loopne
cmp
pop
fcoml
std
lods
push
lret
inc
jle
cmp
pushl
push
movl
pushf
push
pushf
lea
jmp
mov
cltd
dec
xchg
inc
mov
or
movsb
xor
daa
inc
in
call
xor
sti
out
test
mov
jp
mov
lds
aad
stos
aad
movsl
or
push
aam
insl
cmp
cmpsl
imul
inc
and
nop
cmp
jle
stos
orb
das
xchg
or
dec
repnz
cltd
dec
xchg
xchg
adc
dec
cld
push
push
mov
sbb
fimull
pop
hlt
cmpsl
cld
out
xchg
adcb
jno
orl
inc
jmp
cmpsb
int3
mov
scas
data16
sbb
xchg
jmp
imul
xor
pop
shrl
lret
pushf
push
jmp
inc
dec
jge
dec
xchg
cmc
lahf
addr16
ret
fbstp
jnp
daa
fwait
inc
in
cmpl
xor
insl
rol
inc
repnz
inc
enter
lods
fstpl
adc
movsb
movsl
and
xor
in
xchg
xlat
sahf
push
loopne
js
cmp
leave
cli
jmp
lds
repnz
in
mov
dec
rorb
dec
xor
mov
repz
xchg
push
das
leave
cmp
and
ljmp
xchg
inc
pusha
call
lahf
gs
out
scas
inc
adc
push
ja
xchg
fcmovbe
mov
cmp
push
add
in
fs
dec
and
test
pop
or
mov
or
scas
mov
in
rolb
iret
dec
lds
xorl
jae
push
lret
mov
jle
pop
divb
sbb
pusha
rorb
add
cmp
inc
pop
loopne
fcomi
mov
outsb
into
adc
pop
jl
inc
mov
add
push
iret
pop
push
sbb
push
mov
int3
js
and
cmpsl
pop
sub
jge
mov
xchg
pop
std
stos
jno
rorl
daa
popf
fnsave
mov
dec
push
push
inc
lea
jmp
mov
push
cwtl
dec
xchg
insb
push
xchg
cmpsb
cmp
out
loop
dec
sahf
inc
enter
fdivrp
rorl
nop
std
pop
or
mov
jp
outsl
mov
aaa
enter
mov
push
and
xor
jmp
cwtl
sar
mov
push
adc
rcrb
ja
into
cld
test
pop
inc
mov
ljmp
movsl
pop
sbb
or
and
mov
lea
jb
pusha
pushl
ret
pusha
mov
pushf
push
call
pusha
lea
je
bt
sub
cmp
pushf
cmp
push
pushf
mov
lea
ja
pushf
mov
push
imul
bt
clc
test
stc
add
pusha
push
lea
jmp
mov
outsb
hlt
test
enter
dec
add
xor
test
add
ret
inc
fisubl
cmp
dec
adc
dec
shll
fcmovb
push
ret
dec
ljmp
inc
les
faddp
test
push
cs
inc
int
cmp
push
out
imul
dec
mov
or
cmp
lods
mov
iret
push
adc
fldenv
jle
dec
fidivrs
decb
pusha
mov
inc
int
in
stos
or
movl
movb
movl
pushf
pushf
movw
pushl
lea
jmp
jnp
xchg
xchg
dec
xchg
fbld
mov
or
movsl
ret
cs
and
movsb
push
push
mov
and
out
fstps
nop
jle
mov
xchg
repz
stos
sbb
adc
movsl
pop
jae
jp
std
ret
jge
add
jae
mov
into
out
push
xchg
pop
adc
push
add
ds
lock
rcrb
xor
add
mov
pop
mov
loope
insl
mov
mov
or
sub
push
push
fucomp
xchg
dec
xchg
in
repnz
mov
adc
test
das
ret
mov
repnz
jmp
test
int3
push
mov
test
cs
leave
ret
addr16
aas
pop
popa
inc
sarb
lret
scas
clc
out
sub
pop
or
push
loope
out
scas
mov
std
xor
andb
daa
inc
xchg
inc
dec
jmp
mov
inc
fbstp
shrl
sbb
pop
adc
cltd
jns
outsl
and
cltd
jae
stos
push
bsr
int
movsb
out
out
rclb
xor
inc
mov
out
not
jae
jno
les
lods
rolb
inc
leave
test
jae
movsl
push
lods
fcmovb
adc
adc
outsb
fdivr
jbe
lret
xor
pushf
sbbb
arpl
cwtl
pop
cmp
data16
sub
pop
push
in
xchg
rclb
or
out
dec
xchg
lods
in
je
iret
shlb
out
xor
test
inc
das
orl
dec
mov
in
add
in
xchg
jnp
xorl
fidivrl
mov
mov
mov
mov
ret
mov
shr
sar
ljmp
sub
orb
sub
jle
mov
push
out
push
jbe
clc
lds
xchg
out
adc
jo
out
hlt
mov
pop
cli
imul
leave
inc
ja
fdivl
std
dec
std
in
xchg
add
aaa
test
xchg
inc
das
xchg
test
mov
pop
push
test
mov
cmp
pop
sbb
add
mov
int3
enter
push
sub
stos
xor
mov
add
add
xchg
push
sub
adc
ja
stos
jns
sarl
lods
adc
and
je
bt
cmp
cmp
bt
cmp
jmp
push
jmp
add
xchg
dec
xchg
fmuls
jle
mov
push
insl
push
test
pusha
jecxz
repz
pop
mov
bound
rcrb
std
out
scas
mov
sti
ret
push
jbe
cli
stc
xchg
jmp
dec
push
jp
xchg
xchg
inc
lret
pop
dec
add
xchg
jo
fisttpll
mov
cmp
in
in
mov
add
sub
mov
pushf
sub
mov
fcoml
js
movsb
adc
test
sbb
xchg
mov
out
inc
push
mov
es
repnz
mov
sub
arpl
and
faddp
test
testl
rcrl
push
add
jecxz
jmp
cli
mov
retw
sub
imul
and
xchg
xchg
sbb
test
int
pop
shl
mov
pop
icebp
imul
pop
lgs
mov
test
insl
xor
inc
push
push
xor
cs
insb
add
imul
adc
loopne
hlt
mov
fmuls
out
enter
jne
cmpsl
push
movsb
push
ror
cmp
outsl
cmc
adc
push
into
jge
pusha
cwtl
jl
shr
and
or
sbb
inc
pop
and
adc
lret
jge
aad
mov
jnp
push
outsb
inc
sub
ja
cmpsb
je
sub
scas
mulb
inc
hlt
dec
sub
inc
stos
dec
rclb
test
andb
mov
clc
mov
bsr
bts
bt
mov
pushf
cmp
pushf
jmp
lret
jne
xchg
dec
xchg
xor
lods
and
adc
mov
pop
fcomps
cwtl
inc
adc
xchg
insb
pop
xor
lret
aas
mov
sbb
pop
adc
scas
ret
xor
mull
or
hlt
sahf
mov
insl
and
mov
dec
les
mov
gs
lret
pop
or
popf
and
jmp
out
pop
out
mov
mov
popf
hlt
xchg
push
nop
out
xor
add
test
jnp
popa
fidivrl
and
setno
les
outsl
xchg
nop
and
pop
fidivrl
and
inc
adc
fcomi
les
dec
cmp
fwait
xchg
cmpl
je
ja
xor
mov
pop
xchg
mov
out
dec
add
test
cs
iret
mov
mov
orl
mov
js
or
str
pushf
pushl
movl
jmp
lret
lods
sbb
dec
xchg
mov
in
aaa
fsubrl
testl
pop
in
lods
test
lods
mov
pushf
and
push
sbb
repnz
ss
rcrb
dec
out
gs
xchg
jg
mov
and
nop
dec
xchg
test
xchg
and
xchg
out
scas
push
daa
outsl
aaa
lret
xchg
lods
pop
inc
sbb
out
jns
sti
lea
cmc
in
push
or
sbb
xchg
pop
stc
xor
dec
rcr
popf
mov
push
dec
cld
sarb
test
dec
and
inc
incb
ret
jg
pusha
fwait
leave
fmull
popf
push
push
shlb
enter
push
mov
inc
in
scas
sbb
dec
sbb
pop
leave
sub
mov
out
mov
sar
rolb
cmp
aaa
test
shlb
pop
rol
xchg
sub
add
nop
dec
xchg
das
in
xchg
dec
aad
xor
stc
mov
enter
sub
inc
int
pop
imul
xor
xchg
or
lret
mov
xor
out
outsb
loopne
mov
jne
mov
cmpsb
movb
jp
es
mov
xchg
mov
sbb
push
enter
test
xorb
lods
xchg
in
dec
push
pusha
sbb
mov
int
test
push
rclb
adc
cmp
in
add
push
mov
cmp
and
push
lds
sub
loope
xchg
lret
iret
cmp
adc
cmc
sti
clc
mov
push
lret
mov
sub
or
mov
fldl
sbb
add
movsl
ficoml
inc
cltd
mov
lock
cmp
bound
fildll
aad
lret
mov
xor
cmpsb
jge
jns
jb
xorl
aas
std
mov
leave
mov
push
mov
xchg
jle
not
jmp
out
mov
scas
sbb
mov
pushf
inc
lcall
outsb
push
mov
sub
fldt
test
adc
pop
rorb
add
mov
jge
lods
lret
jne
lds
out
test
xchg
dec
insl
lods
cmp
ds
jns
lods
jl
fidivrl
jg
sub
pop
sbb
loop
jns
aam
int3
mov
scas
sti
pop
and
jno
in
outsl
fnsave
in
jmp
add
fs
ja
jmp
add
add
jo
adc
sbb
adc
add
add
add
add
add
adc
add
add
lret
pushf
pushf
add
bt
push
pushw
popfw
jmp
loopne
mov
daa
add
ret
dec
pop
ja
imull
imul
and
adc
outsl
sbb
xchg
stos
addr16
iret
cmp
fwait
mov
aad
stos
inc
arpl
mov
inc
dec
ret
xor
add
add
push
lods
in
push
insb
sbb
sub
sub
int3
jmp
pop
fs
mov
xor
mov
rcr
jo
inc
lret
call
xlat
push
pop
xchg
add
stos
adc
pop
adc
and
outsl
or
rorl
push
push
jb
xchg
xor
sahf
push
jle
jbe
into
test
in
pop
or
pop
pop
xlat
mov
cmp
adc
insb
mov
mov
dec
outsl
or
jbe
sbb
insl
out
xlat
xchg
pop
push
add
out
adcb
mov
xchg
add
das
add
push
aas
cld
cmp
fwait
out
or
pop
lret
push
pushf
shl
not
push
seta
call
movb
lea
je
jmp
cli
fucomi
mov
ljmp
pop
fdivrs
hlt
dec
adc
push
lcall
je
push
adc
fwait
jp
cmp
gs
jg
ret
stc
dec
cmp
xchg
jae
test
fildl
xor
sti
movsl
inc
add
sub
idivl
jmp
scas
mulb
add
cmc
push
xor
or
rolb
pusha
xor
bound
dec
xchg
jno
lahf
mov
iret
out
scas
inc
ljmp
sbb
xchg
and
aam
xchg
and
push
add
add
mov
xlat
bound
je
fimull
inc
stos
xchg
push
lret
push
add
popf
xchg
mov
mov
mov
or
ret
mov
dec
movl
lods
cmp
out
jno
xor
ret
sbb
jnp
push
cmp
in
outsl
in
in
mov
or
das
sub
fistpll
idiv
mov
not
not
pop
push
pushl
ret
notl
mov
dec
xchg
pop
movsl
cmp
fnstsw
movsl
sub
or
push
cltd
scas
pop
pop
test
cli
adc
movb
int3
out
sub
push
and
imul
outsb
sbb
mov
mov
sub
or
scas
pusha
or
lods
iret
inc
cmp
ret
inc
mov
cmp
fstl
subb
push
sbb
jmp
xor
push
add
les
inc
loop
inc
scas
sub
mov
push
cmpsb
push
fcoml
xchg
ljmp
add
dec
mov
cmp
pop
cmp
cmc
test
lea
sbb
test
mov
sti
hlt
pop
call
xor
and
icebp
jns,pn
lods
bound
inc
fisubs
ljmp
xchg
mov
stos
mov
mov
or
push
pop
es
pop
pop
imul
jl
inc
sub
sbb
stc
sbb
shll
mov
pop
scas
jg
inc
loope
jecxz
and
cmp
stos
mov
xchg
push
int3
add
movsl
add
dec
inc
push
dec
xor
cs
insb
add
orl
pop
mov
jbe
loop
jle
jmp
pop
insl
mov
dec
cwtl
inc
in
sbb
mov
stos
into
ret
stos
in
mov
sbb
cmp
pop
xchg
xchg
pop
or
mov
xor
stc
sbb
test
stos
leave
pop
stc
movsl
dec
jmp
jmp
ret
cwtl
push
dec
out
inc
pop
dec
push
js
arpl
popa
aad
mov
xchg
std
mov
lahf
fbstp
sub
cmp
test
pusha
sub
insb
les
into
or
orl
pushf
shll
jecxz
push
stc
repnz
pop
test
mov
or
cwtl
jg
test
fs
hlt
call
inc
lahf
cmp
repnz
scas
lahf
jge
xor
jmp
or
aad
adc
mov
sub
pusha
out
repz
inc
sub
stc
xchg
jne
ds
hlt
rcrb
adc
mov
je
dec
xchg
mov
and
push
mov
add
dec
imulb
and
call
fs
jne
pushf
stos
pushf
lea
jmp
imul
cmc
call
lea
je
call
mov
pop
mov
xor
in
inc
inc
xorl
rorb
pop
xor
js
adc
in
pop
int
pushf
xor
nop
sub
sar
xchg
out
mov
std
xlat
pop
cmp
push
add
das
mov
mov
stos
mov
push
push
mov
xlat
jle
adc
xchg
mov
mov
dec
shlb
test
mov
hlt
stos
js
movsb
cltd
lahf
sbb
mov
int3
movl
pushf
pusha
call
cmp
int3
xchg
les
pop
push
sbb
xchg
je
rcr
popf
xor
lcall
sub
mov
push
les
inc
daa
stc
or
jp
mov
hlt
adc
or
ret
sub
pop
fdivrs
inc
sarb
inc
leave
dec
fsubrs
dec
cld
in
pop
dec
add
inc
add
in
dec
or
xor
pop
and
ret
xor
add
pushl
xchg
test
lret
pop
add
mov
or
shlb
inc
mov
dec
je
dec
sbb
cli
int3
ficoms
inc
pop
addr16
stos
aaa
xlat
push
aas
pop
mov
mov
ds
ret
jle
cmpsl
dec
std
fcompl
sub
in
enter
movsb
insl
loopne
mov
jmp
xor
add
or
xchg
push
jo
mov
xchg
and
mov
dec
add
jo
sub
dec
fwait
inc
bound
bound
ss
mov
adc
js
sub
je
sarb
aam
inc
add
in
pop
sub
pop
sub
out
sub
jl
testb
xchg
jg
loop
int3
in
sbb
stos
mov
test
and
adcl
data16
in
sub
pusha
adc
imul
add
dec
stos
rcrl
or
mov
jl
cli
jl
mov
addr16
add
cmc
iret
mov
scas
aam
addr16
xchg
aaa
test
insl
int
icebp
cltd
fnstsw
leave
pmaddwd
ret
sti
add
mov
into
add
stos
sbb
xchg
cltd
inc
push
lods
loope
shrl
popf
cld
mov
push
xor
cmp
mov
jl
les
in
or
push
pop
das
xchg
xor
pop
adc
test
rcll
push
fldt
mov
pop
push
cmp
test
out
aam
dec
clc
nop
sub
nop
nop
fbstp
push
inc
iret
aad
mov
jb
cld
lret
fwait
insb
rcrb
idivl
dec
in
xchg
cli
pop
and
xchg
jnp
mov
lock
jg
pop
fwait
xor
dec
aad
sahf
mov
inc
rcrb
lret
lods
xchg
and
out
jmp
popa
mov
cmc
mov
jmp
inc
idivb
loop
out
xchg
xchg
mov
mov
xchg
mov
fiaddl
mov
cld
fstpl
push
movzwl
pop
jbe
mov
xchg
dec
loop
inc
es
mov
das
lds
pop
jp
push
cld
inc
in
mov
mov
aam
pop
cli
lods
cwtl
pusha
into
adc
test
xchg
vmread
fstp
push
inc
and
mov
xor
ja
iret
popf
adc
lahf
push
fcmovne
xchg
mov
imul
lret
mov
fdivrl
dec
fistps
jae
push
push
xorb
movb
movl
pushf
movl
pushf
lea
jmp
cmpsb
push
jo
dec
xchg
rorl
jnp
fildl
mov
push
pop
add
lea
shr
pop
mov
jnp
or
hlt
mov
insb
in
jo
movsb
push
shll
jmp
dec
adc
inc
cmp
lret
cmpsl
jecxz
mov
imull
cld
stos
scas
pop
stos
inc
sub
adc
add
add
cli
bnd
adc
shll
inc
hlt
stc
and
cld
jl
push
sub
xchg
in
push
imull
fninit
mov
jmp
lds
orb
xor
shr
stos
lods
add
xchg
or
dec
push
ffreep
sub
sbbl
pop
sbb
loop
jecxz
jno
cltd
test
pusha
adc
pushl
movb
push
pushf
pushl
ret
clc
add
test
pusha
cmc
pushf
mov
bt
bt
cmp
test
jmp
dec
insl
push
push
outsb
insl
pop
fs
outsb
jno
and
sub
orl
mov
inc
mov
flds
call
movsl
jae
rcrb
popa
hlt
pop
add
or
leave
jno
test
stc
xorb
jae
in
jne
out
mov
jnp
pop
ret
int3
inc
sbb
jge
jecxz
cld
jecxz
jmp
popf
mov
mov
xchg
sub
leave
stos
push
inc
daa
out
js
pop
inc
rclb
sub
xchg
mov
iret
popf
addr16
sub
lahf
and
adc
insb
adc
pushf
mov
jmp
push
rol
push
not
cmc
inc
push
aad
pushf
lahf
xor
pusha
pushf
lea
jmp
movb
movl
pushl
pusha
movb
pushf
lea
jmp
jae
pop
orb
add
mov
cmp
je
add
movsb
mov
sahf
iret
cld
pop
xchg
mov
dec
xor
mov
fmul
ss
xchg
add
cs
nop
xchg
test
hlt
fisubrl
push
mov
xorl
and
out
cmp
mov
dec
mov
pop
into
rclb
jbe
mov
inc
call
divl
test
pop
sbb
xor
xchg
dec
sbb
mov
fnstsw
testl
jecxz
out
das
dec
mov
cmpsl
xchg
ret
pushf
pop
xchg
mov
out
add
int3
mov
fcmovb
cmp
out
xchg
je
or
call
subb
ret
dec
cmp
test
mov
frstor
hlt
inc
sub
int
jae
and
xchg
negb
cli
lret
jle
stos
bound
mov
cwtl
and
fisttps
icebp
in
pusha
dec
imul
shll
out
mov
jl
add
and
dec
cmc
out
or
sbb
out
aam
scas
lods
mov
xor
pop
fdivs
push
aaa
and
xchg
in
xchg
lea
mov
mov
dec
into
cltd
pop
sbb
xchg
or
xor
cmpsl
mov
lock
add
mov
jecxz
fidivrl
jp
sub
movsb
push
sbb
mov
xchg
jo
lods
push
sbb
bsr
add
pusha
cmc
clc
mov
bsr
bsr
bsf
add
rcr
bsr
movl
movsbw
mov
add
pusha
cmp
mov
movw
lea
jbe
clc
sub
and
adc
mov
and
mov
neg
inc
add
shld
adc
bt
clc
shr
rcr
clc
btr
mov
neg
add
pushf
push
mov
lea
push
movl
pushl
movl
mov
pushl
pushf
pusha
lods
cmp
cmp
jmp
aad
inc
orl
mov
mov
ret
subb
test
into
inc
cs
jno
loope
sub
or
sbb
pop
push
or
loope
cmpsl
sub
mov
jmp
movsl
aaa
push
cmp
aad
repnz
mov
ja
pop
iret
xchg
pop
push
mov
mov
pop
add
or
mov
xchg
cltd
jno
stc
mov
pop
fstpl
dec
jns
loopne
push
push
in
cmp
shr
ss
inc
daa
repz
and
xchg
mov
aam
push
cmp
xchg
stc
out
xchg
push
loop
xchg
push
pop
out
test
xchg
bound
mov
stos
and
and
pop
out
ret
imul
jmp
sub
call
or
sub
popf
mov
push
push
movsb
inc
or
pop
outsl
jae
push
movaps
cmpb
mov
ss
dec
mov
pushl
mov
test
inc
loop
jg
xchg
out
insl
and
icebp
jns
add
add
dec
dec
cli
adc
mov
out
cmp
xor
or
jbe
mov
das
test
dec
addb
bound
scas
mov
sub
or
adc
xchg
xchg
inc
paddsb
cltd
pop
xchg
outsl
scas
fisttpll
push
aam
int3
sahf
sub
and
jo
aaa
add
cli
sbb
or
inc
cmpb
push
out
cli
lret
mov
mov
push
mov
mov
cmp
jp
mov
lods
icebp
loop
rolb
jp
aam
decl
aad
test
jl
xor
push
cmp
std
lret
imul
sub
shr
inc
dec
cmp
jge
jle
xchg
mov
sahf
xchg
bnd
push
jbe
sahf
jb
mov
rcr
movsl
cmova
mov
aad
lret
not
push
lods
mov
push
fmull
repnz
imul
jb
mov
aaa
cld
pop
test
cmp
outsb
in
mov
mov
and
cmp
in
inc
rclb
and
xchg
test
sti
imul
mov
sub
fsts
xor
mov
xchg
jo
cmp
jp
mov
and
sub
imul
lds
or
subl
repz
scas
sbb
mov
cmc
mov
xor
hlt
jb
loope
dec
test
out
xor
xchg
inc
push
push
scas
enter
andl
ljmp
in
inc
xor
stc
inc
mov
mov
das
fnstsw
out
push
bswap
sarb
pop
mov
pop
xchg
lea
add
sti
cltd
test
pop
leave
xchg
mov
mov
cmp
dec
xchg
adcl
dec
popf
jge
popf
fst
andl
cmp
icebp
sahf
adc
cmpsb
lcall
ss
scas
cmp
test
sahf
mov
dec
and
fwait
sbb
add
mov
push
clc
stc
mov
xor
gs
sbb
push
cld
adc
in
and
fdivrs
stc
pop
call
mov
in
sbb
push
fisubrl
dec
aam
sub
outsl
sub
cmp
movsb
fisubl
lahf
adc
stos
dec
push
lret
lahf
pusha
xor
pop
inc
jp
outsb
add
push
xor
mov
cmp
pushf
movl
call
push
pushl
movl
pushf
push
jmp
stos
mov
lret
pop
mov
repz
insl
xor
mov
loope
lcall
mov
and
ds
or
and
outsl
inc
scas
movsl
dec
or
jmp
and
loopne
lcall
xchg
pop
fstl
xchg
mov
push
cmp
loop
dec
xchg
scas
sub
subb
dec
in
mov
rol
jmp
and
mov
cs
mov
decb
dec
retw
in
jmp
adc
ret
in
test
mov
xlat
pop
mov
lock
cmpsb
xchg
or
jnp
push
clc
mov
fsts
rolb
sahf
push
out
push
or
fdivl
enter
dec
cmp
dec
aas
pop
mov
push
pop
arpl
test
push
loop
xchg
jo
int3
push
mov
inc
rclb
fwait
call
add
and
jmp
and
or
int3
inc
shrb
mov
inc
out
jp
xor
cld
ret
cwtl
cs
sub
jae
cmpsl
aas
sbb
js
les
and
fnstcw
inc
aam
lods
sahf
bound
fidivs
imul
push
loopne
push
imul
push
jecxz
jl
jp
lea
cs
cwtl
fs
loope
scas
cltd
inc
xor
aam
ret
pop
sub
je
mov
jg
sbb
out
mov
loopne
cmp
mov
fidivl
jle
xor
and
cmpsl
sub
push
lret
inc
mov
sub
xlat
push
loop
pop
and
nop
je
pushf
push
cld
jle
call
jge
push
cmp
mov
das
pushf
push
dec
pop
pop
jne
dec
dec
add
xchg
mov
fsubl
mov
pushf
or
ss
pop
fcoml
lea
jne
push
mov
push
mov
lea
call
pushf
lea
jmp
push
not
jp
xchg
add
push
mov
fimuls
mov
jnp
sub
movsl
and
data16
mov
out
data16
out
clc
popa
in
xchg
sbb
aam
jb
push
call
or
iret
mov
or
inc
mov
mov
outsb
in
scas
loopne
mov
push
push
mov
add
imul
sbb
movsl
jl
mov
andb
or
cmpsb
add
jo
inc
mov
std
lahf
lea
jae
imul
imul
fldcw
int
and
or
fbstp
sub
cmp
loope
pop
mov
pop
adc
call
pop
cmp
std
mov
xor
dec
mov
loope
imul
shll
jmp
push
xchg
clc
loop
or
repz
les
or
adc
shll
aam
push
fstpl
cmp
call
adc
stos
mov
popa
loopne
sub
xor
mov
movb
mov
mov
pushl
ret
add
dec
outsb
je
jb
gs
popa
outsb
outsl
outsb
imul
push
jb
inc
add
nop
js
xchg
inc
int3
push
clc
mov
and
ss
mov
mov
out
lret
jnp
adc
test
pop
cltd
mov
scas
cmpsl
aaa
or
sahf
and
inc
xor
sbb
fwait
mov
ret
jo
sarb
hlt
mov
aaa
lock
add
cltd
ja
xor
and
xchg
push
in
lahf
js
xchg
rorl
mov
pop
and
lods
xchg
test
loope
aaa
inc
testb
or
out
jle
mov
adc
jno
push
hlt
je
movntps
ljmp
push
test
jp
aas
or
cld
scas
sub
mov
jp
inc
lcall
adc
imul
out
jae
xchg
add
out
pop
or
xchg
lds
hlt
rclb
addl
lds
mov
popf
jecxz
push
and
mov
xchg
es
iret
fstpt
in
push
push
xor
cmpb
dec
mov
pop
mov
int
pop
lret
mov
pop
shrb
mov
jne
mov
test
jge
lds
mov
repz
dec
in
icebp
xchg
jnp
movl
call
mov
pushl
popl
movw
pushl
ret
lds
imul
dec
fildll
mov
aad
or
mov
jmp
xchg
mov
mov
mov
pop
adc
inc
mov
cmp
mov
cmp
sbb
repz
mov
nop
cmpb
cmp
adc
jb
clc
xchg
in
test
in
cmp
cmp
stc
ret
lods
test
mov
vmwrite
mov
in
addr16
mulb
cmpsb
js
push
ret
add
xchg
cmp
jmp
jne
jae
jbe
xchg
sub
jp
scas
push
es
mov
daa
push
loop
mov
or
jae
mov
in
outsl
mov
push
leave
and
out
cmp
push
in
xadd
xchg
xchg
push
cltd
sub
xchg
xor
nop
fxam
test
add
push
mov
js
xchg
je
cld
jb
mov
cmp
add
xchg
add
or
xchg
lret
inc
int
add
popa
and
test
xchg
pusha
mov
cmpsl
pop
mov
xchg
js
mov
xchg
outsl
std
addr16
pop
adc
popf
push
sbb
insb
jb
jge
mov
adc
cmp
xchg
fistpll
mov
popf
shl
mov
lea
lret
inc
js
adc
dec
cmp
mov
mov
sbb
pop
daa
js
cli
mov
jp
into
je
jo
loopne
push
shrb
test
aam
and
xchg
gs
repz
adc
sti
mov
arpl
or
call
repnz
cmpsb
dec
dec
add
push
sti
mov
or
imul
shlb
jne
or
xchg
adc
jae
out
pushf
xchg
std
divb
nop
jo
cs
jmp
out
popa
adc
lcall
cwtl
es
mov
push
icebp
addr16
jecxz
xor
lea
dec
or
sbb
test
mov
iret
cld
shl
lea
mov
sub
test
pusha
pushl
popl
stc
pushf
cmp
pushf
pushf
push
lea
ja
rcr
test
sub
btc
rcl
add
bswap
adc
shld
adc
mov
call
movb
movb
setbe
jmp
pop
outsl
pop
je
xchg
jl
mov
dec
ljmp
cmp
pop
out
lcall
in
adc
ret
push
mov
sti
insl
gs
popa
xchg
loopne
and
aas
xchg
call
es
sahf
and
jo
divl
xor
mov
ror
jl
outsl
add
cmp
sub
aad
into
mov
inc
sbb
vcvtsi2sdl
leave
sahf
pop
inc
pop
stos
inc
repz
and
xchg
cmp
pusha
jge
fsub
xchg
stos
outsl
btr
bsr
or
pushf
mov
clc
push
and
test
add
movw
lea
jmp
dec
adc
jge
add
leave
jne
cmc
inc
pop
pop
shl
cmp
imull
in
cli
cmpsb
pusha
insl
inc
inc
js
cmp
shrb
mov
movsb
xchg
mov
adc
add
mov
fnstcw
fwait
adc
xor
stc
in
push
mov
dec
movsb
test
call
outsl
bound
lret
imul
inc
div
inc
rclb
test
xchg
mov
push
jle
pop
xlat
cmp
andb
fcompl
stos
inc
add
mov
sti
mov
fiadds
mov
xor
popf
xor
dec
lock
out
mov
out
roll
mov
lds
or
cs
adc
sti
stos
out
test
bswap
hlt
xchg
mov
xchg
je
push
dec
xlat
imul
iret
xor
cs
in
mov
aam
test
fmuls
out
dec
push
sahf
aad
ret
dec
ljmp
sbb
mov
shll
fbstp
test
add
lcall
inc
sub
dec
scas
push
outsb
cmp
lcall
out
fistpl
mov
mov
mov
push
lret
jbe
ret
pop
push
dec
rol
mov
jo
cmp
test
nop
addr16
cmp
rorb
mov
and
cmp
mov
xchg
bound
imul
mov
push
mov
aam
inc
mov
test
push
mov
jecxz
fsub
sub
shlb
cmpsb
cmc
movb
sub
pusha
rep
movsbw
pushf
movsbw
lea
mov
movw
lea
jmp
xor
mov
test
adc
and
mov
lods
pop
mov
dec
std
out
mov
add
lds
cmc
jmp
aad
pop
dec
mov
cmpsb
ret
pop
loopne
cli
daa
int3
call
andl
xchg
xor
xor
or
add
cmp
push
aas
cmp
js
add
aam
in
push
push
lock
inc
into
inc
sbb
or
or
cmp
stc
mov
cmpsb
xor
je
and
loopne
test
or
mov
arpl
movsl
mov
cmp
lcall
xchg
cld
jp
ret
out
jp
mov
in
push
repz
mov
lock
sahf
outsb
test
inc
in
aas
into
jg
or
divl
add
dec
xor
jae
mov
loope
cltd
dec
or
data16
iret
xchg
jecxz
xchg
imul
mov
mov
push
cmpsb
mov
nop
pop
add
xor
adc
pop
stc
push
sub
aad
cmp
inc
call
out
adc
shr
movsl
sti
std
lcall
cmc
test
add
jne
and
jmp
cltd
push
jne
dec
xchg
std
mov
iret
scas
dec
lret
shll
lret
xchg
fwait
adc
test
sub
mov
sub
movsb
xor
push
call
mov
idivl
pop
dec
push
and
adc
pop
xchg
jo
or
mov
out
xorb
lods
mov
fdivrs
dec
les
shlb
je
and
fcom
dec
cmpsb
mov
jns
in
icebp
jo
xchg
in
jmp
scas
popa
popa
std
fwait
pop
xor
shll
popf
outsl
enter
scas
dec
xor
cmpsb
dec
sub
outsl
in
jp
add
lret
push
jp
enter
adc
adc
pop
and
jae
pop
and
and
add
pop
cmc
mov
mov
push
mov
sbb
scas
mov
sti
daa
iret
pop
pop
sbb
dec
xchg
and
aaa
stos
jg
ja
pop
fildll
flds
xchg
pop
clc
pop
xor
xchg
inc
ret
icebp
dec
cmp
lds
add
aam
push
push
clc
sti
ja
scas
dec
xor
in
inc
dec
and
repnz
iret
ljmp
lret
jb
or
fisttps
lea
loopne
jae
popa
cmpsl
pop
aaa
rcll
lods
sub
xor
pop
fstl
pushl
lea
je
pusha
pushf
add
stc
cmp
pusha
pushl
jmp
xor
jmp
dec
xchg
jmp
adc
std
lea
imul
gs
data16
addr16
or
insl
adc
jmp
lock
dec
xor
mov
and
dec
cs
cmp
push
outsb
sbb
mov
lret
fdivrp
sbb
cld
popl
movsbw
pushf
lahf
not
mov
not
movl
lea
call
icebp
xchg
xor
or
jecxz
pop
mov
stc
in
xchg
mov
cmp
xchg
push
clc
aad
cld
popl
negb
ljmp
ljmp
pushf
test
clc
cmc
pop
fmulp
dec
mov
stc
call
push
mov
xor
mov
notl
mov
or
in
repz
dec
psraw
in
cmpsb
xchg
imul
addr16
out
mov
adc
rorb
ret
ror
cmp
add
not
pushf
call
call
dec
jle
outsb
dec
xchg
pop
cmp
inc
int
add
addr16
push
into
mov
xchg
sub
mov
iret
push
mov
jge
mov
pop
leave
sbb
pop
push
std
or
mov
jmp
mov
push
bound
xchg
mov
and
inc
iret
inc
adc
jnp
mov
push
ret
add
lret
jp
out
add
mov
xchg
shrl
nop
push
mov
mov
xlat
push
in
decb
cld
lret
insl
dec
xchg
ficompl
mov
cmp
sbbb
and
adc
aas
mov
jae
cmp
or
xor
xchg
sbb
pop
test
sarl
sar
ret
lods
cs
inc
pop
shlb
repz
push
xchg
ds
inc
fcomps
mov
push
xlat
hlt
jnp
push
arpl
fdiv
pop
push
push
outsl
sub
insl
cmp
xor
into
test
loope
push
inc
into
jb
jbe
push
nop
sub
cmpsb
dec
mov
fistpl
mov
movsb
adc
xchg
dec
fcomps
xchg
lods
cld
mov
add
add
out
ret
enter
mov
pop
lods
aas
jmp
subb
arpl
cmc
xchg
jl
movsb
cmp
xchg
or
pop
or
lahf
insb
int3
daa
jmp
mov
add
insl
imul
insl
dec
jne
add
xchg
inc
fstpt
repz
sbb
mov
jnp
out
jae
pop
test
xchg
psllq
or
adc
inc
mov
ret
lds
movsl
int3
sbb
lods
xor
shl
sub
mov
rolb
subl
mov
sbb
jno
cmpsb
imul
adc
jl
repz
pop
imul
and
mov
push
outsb
call
es
pop
aam
or
jns
pop
mul
jmp
inc
xchg
xchg
push
mov
rcrb
into
jp
sub
ja
adcb
sub
pop
popf
cmp
mov
add
pop
lahf
sub
ljmp
outsl
mov
clc
mov
push
mov
cmp
test
mov
xlat
ja
push
jl
xor
push
pop
xorb
ss
pop
scas
xor
xchg
insl
sti
jg
xchg
xor
popa
and
xchg
add
lea
cmp
and
mov
insb
dec
xchg
inc
cmpsb
jbe
ret
lcall
fs
and
dec
int
lock
shll
dec
sti
mov
xor
jno
sub
call
movsb
dec
sbb
sub
js
cwtl
cmp
stc
sub
inc
jns
adc
and
cmpsb
push
xchg
xor
imulb
fidivs
into
inc
mov
and
ja
dec
mov
inc
fisubrs
js
jne
jae
mov
jae
xor
shr
or
fimuls
sbb
and
xor
ret
test
pushf
inc
mov
inc
mov
insb
add
push
push
dec
outsl
je
data16
arpl
inc
add
addr16
pushl
xchg
adcb
loopne
loopne
sub
or
sahf
cwtl
aas
stos
mov
ja
and
sbb
add
imul
and
dec
into
ss
mov
push
repnz
cltd
cwtl
xchg
sbb
push
mov
jmp
add
popa
push
leave
jnp
add
push
or
pushf
mov
push
pusha
lea
jmp
cmc
push
pusha
bt
or
pushf
lea
jne
bts
sar
movsbw
mov
push
push
test
test
or
jmp
jmp
pusha
pushl
call
push
inc
test
xchg
push
lret
lret
cmp
repz
add
jmp
int
jg
cwtl
pop
pop
int3
mov
cli
and
std
pop
pop
xchg
sbb
rol
lea
inc
xlat
adc
mov
cmpl
mov
sub
call
out
and
xor
push
rcll
cmpsb
or
inc
fcmovnb
test
and
ds
lods
sub
lea
enter
pushf
push
test
loopne
cmp
stos
outsl
in
push
lcall
cld
imul
sub
fs
adc
scas
cmp
cmpsl
xor
not
mov
decl
mov
jmp
cli
lods
dec
and
pusha
cli
int3
pop
mov
xor
mov
or
pop
add
jne
fndisi(8087
in
mov
mov
mov
jle
jnp
dec
sub
mov
xchg
lds
incl
jae
fadds
stc
cmpsb
pop
lea
mov
insl
dec
jns
dec
xchg
pop
ret
fwait
das
stos
aaa
xlat
mov
out
mov
hlt
lock
js
xchg
in
pavgb
cmpsb
pop
xchg
inc
test
in
mov
add
xchg
dec
in
orl
adc
xchg
xor
push
jbe
xchg
push
shll
add
out
sti
ja
lods
ss
aas
stos
add
sub
jle
or
mov
push
push
add
outsl
in
ret
and
mov
movsl
or
daa
stc
jnp
lahf
popa
sbb
lock
mov
ret
xor
das
imul
leave
jne
fstpl
xchg
out
jno
icebp
jecxz
loopne
leave
ret
jae
aam
or
or
jb
mov
je
push
pop
xor
xor
push
bound
or
mov
mov
int
scas
loope
pop
pop
add
rcrl
repz
push
cmp
mov
mov
xlat
popf
sbb
or
ja
nop
pop
in
aaa
adc
pushf
arpl
add
add
add
add
inc
or
add
jecxz
sub
add
add
pop
les
add
add
add
add
add
add
add
sub
add
add
imul
add
add
adc
add
add
add
adc
add
or
add
push
push
sub
add
add
sub
add
add
add
xor
add
add
daa
les
add
ljmp
pusha
sub
int
sub
add
add
not
pushf
inc
mov
call
call
sub
cmpsb
dec
xchg
xor
push
jle
add
and
inc
fistpl
add
xchg
push
xor
rcl
jo
data16
xlat
cwtl
rclb
sbb
iret
or
out
cmp
pop
into
outsl
mov
xchg
xchg
pop
out
andl
and
scas
xchg
adc
or
test
in
mov
loopne
lock
sbb
mov
lret
xchg
mov
cmp
imul
sbb
pop
and
push
out
arpl
iret
lods
mov
jbe
adc
imul
mov
sub
and
cld
mov
add
xchg
and
daa
xchg
xor
repnz
and
xor
mov
repnz
or
jp
dec
add
hlt
sub
bound
test
outsl
jae
xor
sub
call
int3
push
les
add
inc
int3
xlat
loope
fildl
jge
add
addr16
scas
vbroadcasti32x4
lahf
setg
pushl
popl
push
pop
mov
call
pushf
pusha
lea
call
jmp
pusha
movl
mov
pushf
jmp
mov
xchg
cmp
imul
sbb
arpl
inc
rorl
mov
push
loop
mov
jmp
inc
ret
dec
cmp
and
mov
jo
rorl
fimuls
sti
lret
mov
mov
imul
push
jl
cmc
sbb
loopne
mov
lret
mov
stc
shll
inc
lods
into
dec
mov
das
sub
jle
loope
pushf
mov
loop
push
fcoms
lahf
jnp
pop
jecxz
cmp
outsl
inc
push
mov
push
loop
jbe
dec
sub
xchg
fs
xchg
inc
mov
push
sahf
cmp
push
jbe
mov
scas
call
mov
add
inc
sub
xchg
jae
xchg
mov
movsb
dec
sti
imul
push
scas
dec
inc
xor
lret
out
out
mov
xor
movsl
or
ja
loope
call
add
push
or
dec
jp
into
into
pop
cmc
mov
add
in
cs
shlb
push
mov
shrl
scas
jns
gs
add
sahf
std
inc
stc
pop
sbb
cld
fs
xchg
pop
xor
inc
in
jmp
inc
lds
push
mul
pop
div
cmp
mov
mov
cwtl
ficoml
mov
or
push
push
in
xchg
jb
mov
or
push
subb
stc
sarl
push
jle
lcall
pop
sbb
loope
push
sbb
arpl
jecxz
imul
add
cmp
jnp
int3
out
daa
dec
xchg
test
add
xchg
inc
in
outsl
gs
es
jge
aad
aaa
rolb
mov
push
mov
std
xchg
test
enter
imul
xchg
inc
ret
push
or
lods
pop
pop
adc
cmc
addr16
mov
iret
cwtl
jp
insb
sub
push
data16
test
aam
pop
cmc
roll
ljmp
and
pop
jecxz
daa
inc
pop
hlt
xchg
pop
inc
repz
push
psrad
subl
shll
rcll
cs
ja
push
push
jno
push
push
fwait
cmp
daa
out
inc
lret
pop
dec
jno
testl
pop
dec
xchg
lock
movsb
push
jne
push
rcll
xorl
cmp
pop
inc
ret
das
cmc
jno
mov
mov
or
inc
aam
adc
rolb
nop
and
and
cmp
sti
jne
mov
bound
push
shlb
mov
dec
sub
push
rclb
sub
in
add
pop
loopne
dec
xchg
inc
out
mov
mov
jns
div
imul
push
outsl
adc
mulb
ss
fwait
xor
push
dec
jp
call
dec
sub
bound
xchg
arpl
cmp
outsb
popf
std
stc
fnstsw
icebp
ret
xor
mov
ja
adc
jns
inc
je
jp
scas
push
inc
call
mull
xchg
pop
lcall
lcall
jle
cmp
xlat
mov
jae
imul
jecxz
pop
leave
inc
inc
subw
push
aam
cs
inc
or
xchg
xor
or
and
enter
dec
ret
mov
callw
mov
add
mov
jmp
pop
cmp
pop
sub
pop
es
xor
mov
jne
inc
inc
lods
cmpxchg8b
sbb
mov
adc
cli
ljmp
mov
stc
divb
or
xchg
cltd
pop
loope
sbb
dec
pushf
jnp
pop
or
es
sub
scas
cltd
popf
stc
push
mov
out
in
xor
ss
inc
xchg
and
movl
mov
dec
stos
add
daa
jecxz
dec
cld
push
cmp
xchg
test
int3
dec
cwtl
repnz
xor
inc
xor
leave
add
je
subl
jecxz
daa
xor
in
adc
cmpsl
enter
push
mov
mov
mov
mov
cmp
shrl
outsb
lret
sub
shrb
les
mov
push
fidivrl
lret
sub
loope
add
push
call
add
dec
add
fcomps
iret
imul
xor
dec
xchg
out
sub
inc
loop
lcall
mov
mov
inc
mov
subl
mov
mov
scas
mov
xchg
pop
mov
add
mov
push
jae
inc
ret
dec
shr
sub
fldcw
sbb
cs
movsb
cs
xchg
mov
add
inc
sub
xchg
test
stos
adc
pushf
es
jbe
stos
movsb
repnz
leave
and
out
fsubs
xchg
jo
int3
push
clc
insb
add
push
inc
movsb
jo
xchg
loopne
clc
jle
xchg
das
fstps
enter
cmpsl
jp
xor
jne
je
push
and
mov
add
xor
cmpsb
adc
shrb
mov
pop
or
scas
push
push
loopne
xor
movsb
sbb
sti
fimuls
aas
out
push
dec
pop
cmpsl
cmpsl
jl
xchg
test
mov
fisttps
cwtl
sbb
sub
and
mov
push
lods
stos
nop
inc
push
out
add
jno
call
clc
cltd
cs
dec
xchg
inc
repnz
ds
dec
cli
in
xchg
insl
jmp
scas
cld
imul
ljmp
xchg
xor
mov
sub
sbb
push
pop
mov
ljmp
das
adc
fisttpll
rcll
mov
adcb
fsubr
pop
dec
xchg
data16
xor
outsb
sbb
mov
mov
mov
bound
pusha
jl
push
mov
sub
xabort
in
test
dec
cmp
lods
dec
std
cmpsb
add
or
out
ficompl
lds
mov
xor
setb
scas
sbb
lods
xchg
out
addr16
stc
mov
scas
mov
adc
add
outsl
jmp
aas
test
mov
sti
or
xchg
inc
sub
aam
sub
cmc
mov
movl
repnz
call
mov
pushf
push
mov
lea
jmp
cwtl
xor
xchg
movsl
pop
stos
outsl
daa
iret
mov
mov
out
sbb
test
es
cmpsl
fdivrp
sbb
push
scas
cmp
jmp
adc
sbb
mov
adc
dec
or
test
dec
les
insl
aaa
cmp
out
ds
pop
xor
std
movsl
jl
clc
hlt
fstp
xchg
imul
iret
imul
lds
push
clc
adc
xchg
adc
shll
lahf
orl
and
inc
add
repz
out
pop
and
mov
mov
movw
mov
lea
mov
pop
pushf
pushf
pushl
ret
sahf
dec
sbbl
rorl
ret
aas
daa
imul
xor
and
sbb
push
mov
jbe
repnz
pop
imul
imul
arpl
mov
inc
mov
sbb
xor
or
pop
mulb
jae
mov
pop
lods
mov
sbb
movsl
loop
pop
and
jl
in
loope
adc
xor
inc
inc
mov
or
sbb
sub
sbb
sarb
xor
inc
lahf
inc
jmp
lea
ja
call
movl
pushl
pushf
movb
pushl
lea
jmp
cmp
sbbb
mov
cli
mov
sahf
outsb
ljmp
fisubrs
lret
movsl
cmp
rorb
add
pop
leave
pop
adc
ja
cld
cmpsb
sub
sbb
adc
repnz
add
adc
stc
mov
and
imulb
fisttpll
xchg
push
cli
mov
les
fcmovbe
adc
jb
jb
or
add
push
mov
pop
jmp
xor
stc
pop
dec
xchg
fnstsw
mov
fbld
mov
mov
push
mov
cltd
jns
inc
icebp
xchg
mov
mov
ficoms
popa
cltd
das
mov
xor
shlb
nop
nop
adc
fxch
xchg
test
iret
jge
mov
jecxz
pop
or
jnp
out
testl
insb
sub
and
gs
mov
adc
pop
dec
xchg
and
mov
add
lcall
and
inc
and
jae
mov
js
dec
adc
or
jl
mov
push
mov
mov
adc
ljmp
xchg
nop
cmp
popf
jmp
arpl
ja
rorl
jae
sub
jl
xor
stc
in
or
push
push
out
mov
sahf
xor
daa
test
mov
xorl
pop
jns
add
into
xchg
pop
das
and
mov
cltd
orb
jle
xorl
movsb
xor
sub
les
inc
fiadds
add
xchg
jae
jno
roll
xchg
push
sbb
jne
leave
sub
xchg
shl
pop
dec
das
jmp
add
test
movsb
push
mov
xchg
mov
lea
inc
fiaddl
mov
and
test
ret
mov
and
bound
ds
pop
insb
mull
jmp
sar
jecxz
andb
scas
xchg
shr
ret
rcl
sahf
pop
inc
sbb
xor
pop
loope
jns
pop
and
stos
stos
aas
movsl
aas
inc
mov
lea
bswap
lea
pop
mov
movsbw
xchg
mov
push
movsbw
movsbw
mov
jmp
ljmp
call
add
pushf
lock
call
cmp
insl
orl
rolb
iret
push
lods
arpl
mov
pop
imul
xchg
xchg
js
mov
sub
scas
out
adc
in
dec
in
mov
jns
adc
jmp
lret
or
fldenv
mov
jg
push
ljmp
push
idivb
mov
popf
jne
lcall
pop
jno
dec
xchg
add
imul
cmp
outsl
dec
mov
sbb
mov
out
or
xchg
sbb
pop
inc
lock
pop
outsl
test
sub
fcomps
mov
loop
push
dec
add
sarb
inc
hlt
pushf
mov
jmp
filds
xchg
push
dec
sub
repz
les
in
or
xchg
xchg
xchg
dec
in
dec
jge
jne
roll
cmp
je
inc
mov
icebp
aad
fwait
mov
mov
aas
and
xchg
mov
cld
hlt
das
jae
shlb
jae
adcl
fnstcw
gs
add
mov
mov
push
or
cltd
sbb
imul
loope
xorb
jbe
dec
sti
leave
dec
cmp
pop
dec
xchg
enter
lcall
ljmp
lods
ds
bound
lods
repz
shrb
fnstsw
sti
mov
scas
ljmp
int3
out
in
push
xor
adcb
sbb
out
push
popa
out
mov
insl
dec
aad
sbb
inc
jbe
adc
adcb
mov
sahf
fsts
push
ret
pop
xchg
and
fucom
push
cmp
pop
jo
mov
mov
push
outsb
sub
mov
out
gs
movsl
subl
mov
fwait
or
gs
int
pop
dec
xchg
mov
mov
add
dec
rclb
aam
xor
inc
popa
cltd
xlat
cmovo
ret
cwtl
ss
sub
roll
adc
fs
insb
incl
je
testl
in
mov
pop
mov
lds
xchg
and
sahf
jle
mov
rcrb
call
push
hlt
pop
fs
mov
jmp
stc
lea
jno
pusha
pushl
ror
pusha
add
stc
shr
jmp
out
aas
pop
dec
xchg
push
ret
outsl
dec
jmp
jmp
fistpl
add
cmp
sbb
or
jae
sbb
xchg
xchg
push
xor
mov
pop
jb
jo
jl
push
xor
loopne
in
pop
dec
adc
inc
shl
inc
dec
mov
mov
addr16
xor
imul
arpl
test
inc
loope
or
sbb
pop
xor
jp
and
adc
jb
insb
outsl
in
rep
jns
push
sub
addb
jae
lahf
mov
shr
dec
dec
aam
push
out
push
test
adc
call
push
cmpb
jg
aaa
imull
jge
in
pop
lret
inc
add
adc
filds
pushl
mov
mov
lea
jmp
adc
push
movw
pushf
lea
jmp
cwtl
into
ret
push
dec
xchg
xchg
and
mov
mov
into
ret
add
xor
aas
mulb
mov
sbb
push
and
ljmp
pop
or
pop
and
pop
push
mov
fimull
cmp
out
jno
ffreep
fiadds
mov
jp
cwtl
es
in
mov
call
sub
ss
jo
loopne
cmp
pushf
push
les
lret
adc
scas
jl
mov
inc
push
inc
push
dec
xor
cs
insb
add
xchg
lods
std
movsl
xchg
std
popf
sbb
jmp
xchg
pusha
add
mov
fwait
or
sbb
cwtl
mulb
mov
lahf
shlb
ret
fldl
inc
loope
pop
fs
mov
push
pop
jne
jge
cmp
adc
testb
rorb
fcomps
and
mov
jno
shlb
bound
xchg
cs
adcb
enter
dec
sub
das
movsl
sahf
sbbl
mov
dec
push
mov
ss
scas
inc
out
es
into
push
pop
mov
cmpsb
cli
movsb
xchg
adc
dec
adc
xchg
push
ficoml
add
sbb
iret
xchg
jae
cmc
fwait
add
lods
mov
das
xchg
add
out
out
in
dec
xchg
icebp
and
aas
out
fistps
and
movsl
sahf
sbbl
std
repnz
jecxz
lret
add
push
sub
popa
mov
add
pop
sub
push
test
and
inc
add
jae
jae
push
xor
sbb
xor
xchg
cmpl
pop
icebp
mov
add
subb
sarb
hlt
xchg
stos
push
mov
int3
cltd
push
mov
xchg
jb
push
jle
xchg
xchg
sbb
sub
pop
cs
push
sbb
inc
push
movb
call
mov
xchg
mov
xor
xchg
add
adcb
mov
cwtl
cmp
in
loop
jle
jmp
mov
sahf
jge
rolb
test
and
xchg
pop
mov
dec
push
dec
or
out
fincstp
mov
jle
or
data16
xchg
mov
xor
mov
rorl
aas
dec
xor
mov
and
and
dec
out
xchg
fimuls
iret
lea
sti
push
outsb
and
insl
sti
jg
ljmp
incl
mov
pop
jne
mov
mov
and
mov
stc
and
cmpsb
sub
push
roll
or
and
or
loopne
rcll
and
fwait
xchg
mov
iret
scas
scas
lods
xchg
adc
fisubrl
divb
inc
fcmove
imul
movsb
cmpb
mov
cld
pop
cmp
dec
dec
test
in
cwtl
add
inc
push
mov
jnp
icebp
pop
mov
test
dec
sub
cs
xor
xor
shlb
jo
pop
in
cltd
stos
add
daa
cltd
stos
dec
call
mov
test
sbb
roll
out
adc
add
sti
sub
loopne
fnstsw
enter
loopne
push
or
adc
fadds
mov
pusha
pushf
cmp
xor
mov
icebp
mov
sub
lds
lret
mov
jg
sub
sti
clc
sbb
stos
cmpl
inc
das
dec
xor
jbe
lret
mov
pop
leave
mov
mov
or
ret
mov
shlb
adc
das
cmp
fcmovb
push
les
sbb
xchg
mov
outsl
inc
jge
or
fsubrs
in
inc
add
pop
adc
push
mov
lds
call
jecxz
cmp
xchg
fwait
std
loope
jmp
gs
and
fnsave
ljmp
fwait
or
cmp
jmp
pop
int3
insl
jbe
aam
arpl
rdtsc
add
incw
add
pusha
and
mov
mov
cmp
lcall
call
mov
jbe
in
dec
shrb
inc
lret
insb
jo
daa
mov
mov
push
push
out
jb
orl
mov
push
xor
les
push
cmp
call
loope
cmc
mov
in
xor
adcl
push
rcll
shrl
imul
inc
or
adc
mov
inc
xchg
hlt
sarb
test
adcb
cmp
hlt
or
lea
adc
inc
subl
xor
dec
daa
lock
not
imul
jge
dec
adc
jg
scas
jns
loope
or
scas
pop
pop
adc
xchg
movsl
jecxz
jmp
jmp
clc
push
scas
inc
push
xchg
ds
inc
cmp
pop
enter
sub
arpl
in
ret
insl
dec
fldt
loopne
mov
pop
push
push
mov
in
dec
sub
push
xor
iret
jmp
imul
mov
decl
ret
sub
dec
jg
cmp
mov
insb
mov
add
jo
mov
xchg
push
dec
pop
mov
nop
sbb
push
and
clc
jb
fcompl
or
xchg
adcb
mov
cmc
or
jnp
cltd
scas
xorb
mov
jle
orl
jl
sbb
outsb
dec
jp
pop
dec
jp
inc
rcrl
xchg
push
lahf
lcall
scas
mov
test
stc
es
push
data16
addr16
add
jle
adc
dec
jbe
fwait
mov
mov
pusha
lea
notb
jae
xchg
cltd
in
jmp
pop
sbb
out
outsb
ret
ds
jbe
out
jbe
cs
repnz
or
cmpsb
in
int3
xchg
idivl
push
sti
test
orl
test
dec
lods
jl
loop
and
stc
cmp
sbbb
test
push
pop
dec
mov
cltd
fidivrl
mov
imul
fildll
jg
les
iret
add
inc
mov
xlat
xchg
sarl
scas
mov
pop
js
lcall
sarl
jns
inc
jp
jbe
negl
sbb
inc
add
mov
jbe
dec
pop
cltd
push
lock
pusha
inc
jo
xor
bound
and
repz
sbb
in
or
inc
cltd
nop
mov
popa
pop
stc
jb
mov
cli
loop
jp
movsb
push
mov
mov
add
and
adc
dec
stos
inc
jo
aas
addr16
cli
inc
inc
sub
add
popf
inc
xchg
ss
int3
mul
mov
lock
jbe,pt
jns
aas
call
and
ds
inc
mov
dec
mov
fbld
enter
adc
and
and
arpl
jl
sub
push
or
jne
jmp
lcall
in
jmp
mov
jo
push
jmp
cli
mov
cmp
lds
add
pusha
outsl
jle
cltd
out
sbbb
rcl
pop
mov
dec
mov
jecxz
daa
loop
rorb
or
clc
xor
xor
sub
lcall
cli
call
fs
sarl
ja
sub
outsb
xchg
je
push
pop
push
jbe
xchg
scas
adcl
xlat
add
mov
jne
dec
xchg
mov
dec
gs
cmp
pusha
lods
dec
addr16
inc
jo
sarb
push
dec
testl
mov
and
aas
rcrl
adcb
jg
inc
bound
rcrb
out
mov
subl
add
pop
xchg
popa
aad
into
fisubl
sub
ljmp
jmp
jle
sbb
inc
jns
mov
xor
pop
cmp
stos
dec
mov
add
in
dec
cmpb
add
cltd
js
jae
mov
inc
mov
iret
jg
cmp
jge
rcll
cmpsl
or
inc
dec
mov
jae
lods
mov
mov
cmp
pop
popf
xchg
push
pop
mov
pop
cmpsl
jmp
mov
cmp
sbb
std
shrl
icebp
pop
jle
sbb
stos
jmp
test
pop
jl
xlat
cltd
bound
in
sbb
mov
push
inc
jg
inc
xor
stc
ja
inc
mov
jno
pusha
icebp
and
xor
jne
jle
jno
add
daa
inc
roll
pop
popa
jno
add
mov
les
stc
and
mov
data16
xor
insl
cli
cmpsl
sub
mov
xchg
jb
or
mov
adc
arpl
inc
sahf
push
into
pusha
jnp
lret
xchg
sub
sarl
or
push
cmp
flds
jg
popa
data16
dec
cmp
jge
cmp
scas
inc
test
in
cmp
lds
scas
clc
idivb
mov
cli
aas
cs
cmpsl
and
mov
jge
sub
sahf
jnp
lcall
mov
sub
inc
sub
or
adc
inc
mov
xor
jno
mov
push
push
fbld
cli
or
dec
jl
lds
popl
xchg
jnp
shr
icebp
mov
jle
mov
fcomps
cmp
loop
lcall
push
sarb
movsb
mov
stc
mov
dec
push
rcr
sbb
inc
xor
xor
cmp
stc
inc
cmc
sti
xor
fistl
ret
iret
xlat
jp
jbe,pn
and
dec
fisubs
in
or
inc
inc
inc
jae
rorb
dec
dec
mov
mov
and
pop
lret
cltd
jg
in
fsubl
mov
dec
xor
xchg
add
xchg
jnp
mov
imul
jl
jno
sub
jg
cmc
divb
pop
das
pop
lcall
out
es
xchg
jp
jno
ja,pn
jo
jbe
jl
aad
jle
pop
aas
add
sub
pop
je
xchg
popa
xchg
push
adc
pop
add
pop
rclb
pop
mov
std
sbb
mov
cwtl
xchg
outsb
sahf
lcall
add
or
sbb
cmp
xchg
divb
mov
add
sbb
sub
cli
bound
test
std
enter
cwtl
xor
stos
xor
inc
repnz
cmpsl
xor
add
sahf
push
fwait
push
push
je
jb
mov
jecxz
push
enter
xor
mov
pop
sbbl
pop
sub
mov
sbb
es
sub
sbb
jmp
mov
pop
das
add
xor
xor
pop
outsb
arpl
jge
ja
das
jno
cmc
jecxz
jb
mov
movb
push
scas
or
cmc
xor
ss
push
adc
lcall
das
jb
gs
mov
hlt
sahf
jnp
jb
xor
les
xor
pop
jle
xor
inc
mov
ljmp
adc
arpl
cli
adc
pop
int
outsb
sbbl
cmpsl
xor
xchg
cs
jle
fwait
mov
cmp
lock
sahf
je
sbb
push
jae
out
cmp
add
pusha
jb
cmp
out
xchg
je
orb
jae
outsb
mov
jnp
or
inc
test
aas
xor
ret
sarb
xchg
cmpsl
loopne
rcll
mov
jo
add
mov
loop
or
ljmp
adc
xor
cmpsb
sbb
mov
jo
jle
mov
xor
push
daa
inc
loope
xor
mov
fnstsw
mov
xor
or
xor
insl
in
loope
sub
cli
aas
mov
jno
mov
cltd
nop
mov
inc
mov
js
mov
ss
pop
inc
xor
cmp
ss
shrl
or
cmc
jl
out
cmp
xchg
stos
jg
jb
xorb
xchg
js
and
pop
cld
cmpsb
xor
lret
lcall
push
or
popa
mov
ds
mov
sub
sub
xchg
daa
and
sti
add
dec
mov
and
jnp
je
mov
stos
inc
inc
xchg
pushf
xor
sarb
stos
aaa
pusha
inc
mov
or
dec
dec
popa
mov
jmp
xchg
cmp
incl
jb
ja
ret
dec
fs
cmpl
je
or
jge
outsb
inc
pop
movsl
xchg
subb
xchg
sbb
fisubrs
divb
in
addr16
cs
cmp
jns
insl
inc
in
div
pop
xor
nop
add
mov
les
adc
pop
cmp
xor
addr16
dec
bnd
out
xor
or
pop
cltd
fidivrs
rcl
adc
rolb
ljmp
mov
mov
or
jnp
cmpsb
jne
xor
dec
cltd
xchg
repnz
outsb
jnp
add
jns
xchg
push
std
cli
cli
cmp
lock
imull
fsubl
rcrb
push
js
out
mov
lret
push
ljmp
sahf
ds
inc
cld
inc
mov
bound
cmp
stos
cmp
jp
sub
je
rcl
xor
push
add
or
pop
addl
cmp
arpl
or
dec
cmc
inc
mov
mov
inc
lcall
frstor
cmp
push
xchg
sbb
idivl
jge
cmp
sub
push
pusha
push
cmp
inc
mov
inc
js
pop
xchg
inc
mov
fwait
data16
xchg
mov
inc
adc
inc
inc
or
cmp
in
mov
test
jnp
ret
jb
out
addps
dec
and
sbb
jg
lcall
xor
decb
jbe
xchg
dec
sbb
enter
adc
std
lcall
mov
pop
sub
xor
inc
das
cmp
adc
and
mov
xlat
ja
loope
xchg
insb
lcall
pusha
xor
popa
add
std
imull
xchg
mov
or
out
jns
orb
sub
mov
push
sub
cmpsl
mov
and
outsb
jl
bound
inc
xor
cmp
adc
cmp
mov
ljmp
test
shll
mov
jno
js
mov
push
xor
sub
jno
push
ds
repnz
add
pop
sbb
cwtl
or
jp
sub
sbb
xchg
jno
repnz
xorb
mov
leave
jge
ffree
pop
xorl
pop
push
jno
jns
inc
pop
test
repnz
jge
roll
dec
rol
inc
cmc
xor
sbb
rclb
push
inc
jp
jmp
lahf
lcall
sahf
aad
mov
cli
xor
sbb
pop
xor
fistps
test
xor
or
mov
rcrl
icebp
daa
std
cltd
fists
shlb
pop
ja
cli
xchg
xchg
xchg
cmp
sub
in
aad
sbb
cmp
dec
mov
shll
jae
je
inc
inc
cwtl
inc
jae
push
xchg
testl
call
adc
adc
jbe
xchg
pop
lcall
addl
jae
ret
mov
inc
test
mov
test
push
adc
aaa
shrl
pop
xor
pusha
orl
lcall
push
lret
cmp
cltd
sbb
jg
sub
pop
sub
sub
lea
or
fidivrs
jecxz
mov
ret
popl
push
xchg
aas
and
adc
std
jb
mov
xor
aaa
adc
lret
inc
frstor
mov
mov
pop
add
pop
lods
jg
xor
add
bound
jmp
xchg
notb
inc
jae
pusha
sbb
dec
push
jg
push
jl
pop
movb
inc
lcall
mov
popa
out
inc
sub
inc
in
in
stc
imul
xchg
cmp
hlt
aaa
mov
push
mov
and
out
popf
test
mov
pop
cmpsb
jns
inc
lea
stos
icebp
in
jle
mov
inc
sub
fildl
xor
push
mov
repnz
rolb
imul
mov
add
sub
jbe
adc
dec
cltd
jp
mov
sbb
test
xchg
add
int3
adc
push
fwait
and
and
cmpsb
jle
outsb
push
jb
inc
mov
inc
clc
jb
sahf
fstpt
mov
lods
pushf
sahf
cmp
push
adc
int3
in
bound
mov
jb
ficompl
jb
sbb
xlat
sub
xchg
js
les
xchg
xchg
pop
aas
orb
dec
jge
addr16
cmp
outsb
lock
add
dec
jo
push
jns
inc
lret
sub
in
ds
mov
pop
jb
inc
cld
cmp
lock
push
xor
movsb
insl
xor
popa
adc
aaa
or
icebp
jno
pop
loope
inc
outsl
xor
addr16
popf
je
sbb
cmp
in
xchg
pop
gs
sub
push
xor
pop
mov
pop
inc
jbe
fldl
icebp
ds
pop
or
int3
and
push
pop
and
mov
lcall
js
cld
pop
das
sbb
cmpl
jg
dec
test
inc
out
stc
xor
jl
ss
jns
jmp
jnp
push
out
xchg
sub
mov
les
mov
imul
dec
xchg
xor
fistpl
mov
jns
inc
push
jecxz
daa
xor
mov
fnsave
imul
out
enter
jne
adc
jle
jo
scas
jecxz
xchg
mov
test
lods
mov
jmp
sub
sub
add
pop
daa
pop
testl
adc
pushf
dec
mov
add
aaa
mov
test
inc
sub
xchg
xor
je
cs
call
add
dec
push
add
call
popa
jp
pop
das
push
ljmp
negb
hlt
inc
mov
insb
jo
inc
fistpl
jecxz
pop
add
jp
hlt
sbb
xor
cmpsl
add
xor
loopne
dec
int3
rcl
xor
pop
imul
mov
icebp
jmp
mov
cmpsb
adc
mov
lea
or
jns
dec
lcall
jle
inc
insb
xor
inc
sub
es
jb
jns
lcall
call
or
cli
or
push
outsl
and
jns
popf
dec
dec
add
repz
cmp
dec
sub
mov
mov
or
mov
mov
xor
mov
cmp
lcall
rcrl
jb
pop
xor
mov
loop
xor
dec
xchg
int
arpl
cmc
fs
ja
jae
pop
out
imul
push
mov
rorb
pop
cmpsl
dec
fwait
mov
xor
inc
std
pop
jmp
mov
fldcw
shlb
lock
lret
insl
push
dec
clc
xchg
mov
outsb
dec
sub
pop
std
insl
data16
jbe
in
push
jno
cli
push
popa
xchg
dec
mov
mov
dec
fsubrl
into
int3
out
aaa
pop
lahf
sbb
sbb
or
cmp
mov
mov
cltd
ds
mov
repnz
dec
inc
mov
iret
aas
adc
loopne
dec
mov
aas
xchg
testl
aaa
jno
dec
xorl
dec
outsb
sub
dec
push
xchg
push
cwtl
dec
pop
sbb
stos
xor
cmp
mov
stc
cmp
daa
add
mov
and
xchg
insb
jne
loopne
fidivs
push
xchg
dec
xor
pop
bound
and
rorb
insb
popa
data16
repnz
dec
iret
cmp
jo
dec
nop
push
sahf
xchg
or
insl
lcall
push
movsb
dec
negl
jge
push
clc
lret
jns
dec
xor
push
adc
push
arpl
jbe
sub
idiv
pop
pop
cmpb
push
roll
xchg
lock
jnp
jmp
adc
nop
push
sbb
xor
cmp
sbb
pop
jp
fdivrl
aaa
frstor
or
jae
fbld
xchg
push
in
push
xchg
in
sti
push
icebp
test
xchg
les
jae
cli
sbb
inc
inc
shlb
mov
sbb
push
pop
cmp
popa
je
push
push
test
arpl
jae
mov
lahf
test
icebp
jo
mov
cmp
jb
rcll
dec
clc
fdivl
or
in
xor
jmp
lret
iret
int
ja
lcall
lahf
or
push
scas
fnstenv
mov
outsb
inc
jo
insb
in
out
data16
cld
dec
adc
aas
xchg
outsl
xchg
push
hlt
icebp
mov
sbb
scas
pop
xor
xchg
ret
push
dec
mov
xchg
roll
mov
stos
mov
or
push
popa
sbb
dec
cli
call
push
arpl
ficomps
inc
jbe
lret
push
push
jno
push
mov
push
mov
mov
inc
sub
and
aaa
cli
inc
mov
jl
rcll
and
imul
in
subl
mov
mov
cmp
subl
dec
outsb
jl
cwtl
dec
jae
stc
mov
push
cmpsb
mov
adc
pop
jb
and
stc
dec
jno
push
repz
nop
jbe
movb
or
inc
loop
mov
data16
mov
jbe
cltd
jmp
jmp
sbb
adc
xlat
aas
dec
cli
outsb
xchg
xorl
pusha
inc
add
das
pop
cltd
cmp
add
or
insb
pop
xor
jns
sbb
enter
jbe
jbe
out
or
mull
mov
inc
and
cltd
sub
mov
es
popa
movsb
sbb
mov
call
stc
sub
stc
fsubl
xor
add
push
xor
push
jl
comiss
xor
fnsave
shrb
add
mov
cs
pusha
xlat
bound
push
call
xorl
movsb
stos
mov
rcrl
lcall
push
int3
xchg
int
jo
xlat
fwait
jno
cmpl
rorb
cltd
shrb
add
ret
push
mov
push
mov
mov
inc
sbb
pop
xor
jno
cltd
jmp
mov
pop
cmp
xor
insb
lret
push
bound
ds
mov
and
push
mov
loop
jne
cmpsl
adc
pop
inc
xchg
scas
jmp
ljmp
pop
add
iret
inc
adcl
dec
or
imul
adc
dec
jb
mov
adc
std
rolb
push
mov
mov
xchg
jb
dec
jbe
aam
push
mov
sub
push
test
std
adc
scas
pop
jge
push
or
push
clc
lcall
adc
nop
jmp
add
js
decl
lret
outsb
or
pop
aaa
insb
mov
sub
jno
aam
pop
push
sbb
mov
xor
aad
bound
adc
daa
jmp
cli
cmpsb
mov
adc
scas
outsb
nop
lret
push
mov
mov
mov
imul
fucomi
lret
mov
std
mov
pop
mov
in
or
or
adc
sbb
fs
dec
stos
aad
cmpsb
push
lcall
popa
mov
rcr
mov
push
mov
add
leave
loop
sub
lds
inc
mov
adc
mov
dec
stos
pop
fistpll
jbe
ret
hlt
mov
xchg
shlb
pop
mov
jne
sub
outsb
popl
sub
sub
outsl
mov
out
lcall
jno,pt
scas
outsb
sbb
push
imul
in
mov
aas
mov
leave
popa
jno
popa
sbb
loope
test
add
mov
jp
das
mov
mov
lcall
mov
ja
insl
aaa
out
push
les
test
jb
mov
ss
test
out
insb
sahf
shlb
out
aas
mov
adc
xor
sbb
outsl
mov
lcall
dec
xor
lods
inc
mov
daa
sub
inc
popf
sbb
pushf
pusha
jle
incl
scas
and
push
insb
imul
lcall
andb
mov
pop
pop
mov
jne
inc
inc
mov
sbb
cwtl
inc
sbb
mov
ljmp
fildl
pop
nop
push
push
cli
and
je
movaps
mov
cld
mov
out
lcall
add
push
xchg
push
mov
push
and
cltd
sub
popf
mov
cmp
js
js
fstl
cmp
mov
arpl
daa
cmp
adc
in
pop
sbb
push
pop
dec
imul
and
jb
push
incb
jp
out
pop
jnp
sbb
sbb
outsl
std
sub
push
jl
js
mov
mov
jl
inc
inc
push
jnp
das
sub
xchg
test
test
xchg
cs
scas
adc
add
lock
mov
and
cld
mov
jp
xor
clc
xchg
je
sahf
arpl
xchg
pop
push
inc
loop
sub
jb
xchg
stc
push
pop
mov
add
sub
les
xor
mov
xorb
stc
inc
mov
fs
xchg
jae
sar
push
cli
xor
jno
fbld
and
lret
loopne
pop
leave
daa
aas
ret
mov
sbb
fmulp
add
std
imul
mov
mov
inc
mov
mov
rorb
imul
lock
std
xor
lods
xor
xor
sbb
push
das
lcall
and
ds
inc
dec
dec
sub
jg
mov
popa
scas
jl
add
dec
lahf
jmp
fs
jne
insb
pop
arpl
xor
mov
inc
sbb
sbb
mov
ljmp
incl
insl
jbe
xor
loopne
inc
repnz
sbb
jp
jb
dec
mov
clc
dec
mov
outsb
xor
bound
add
ficomps
pop
das
pop
push
ds
xchg
xor
cmp
ret
cmp
aad
out
fldpi
adc
fstpl
mov
jne
test
imul
cmc
push
fs
fildl
inc
jno
push
or
and
cmp
lcall
sub
adc
inc
hlt
sbb
jo
cld
sub
jae
outsb
repnz
loopne
inc
cmp
dec
cmp
cmp
push
push
pop
dec
shll
pushw
inc
dec
std
lods
pop
js
mov
jns
sub
push
jp
pop
insl
jb
mov
stos
xorl
xor
and
mov
pusha
push
sbb
movsl
fidivs
jo
sbb
js
jmp
mov
cmpl
or
cmp
leave
cmp
dec
sbb
dec
xor
sub
cmp
jbe
arpl
ds
jne
rorl
dec
rsqrtps
inc
jle
push
and
sbb
inc
push
ret
rcll
testl
cmpl
cmpl
les
sbbl
ret
mov
sbb
insb
rcrl
insl
add
mov
jl
mov
add
pop
repz
mov
shll
dec
cmpsl
inc
mov
jge
fwait
inc
xchg
ja
cmp
shll
cmp
inc
xchg
jnp
fidivrs
pop
popa
xor
jb
dec
in
js
mov
xchg
pop
rolb
orl
loope
outsl
ds
addr16
pop
inc
pop
aas
imull
dec
ret
xor
mov
jle
ljmp
icebp
cmp
aas
add
popa
test
xor
jae
mov
inc
cmp
lods
sbb
adc
rclb
push
lods
rorl
jbe
mov
add
push
sub
jb
stos
pop
push
pop
insb
xor
xor
repnz
push
push
mov
insb
push
push
lcall
jl
in
pusha
outsb
nop
xorb
test
out
int3
xlat
in
imul
fs
adc
pop
jbe
popf
add
xor
pop
addr16
nop
fsts
jbe
inc
insb
lcall
insb
mov
lret
xchg
adc
dec
xchg
aam
sbbl
add
jno
data16
sub
inc
cld
push
xchg
hlt
pop
filds
dec
repnz
clc
aas
mov
pusha
data16
sub
mov
xchg
shlb
shlb
orl
outsb
dec
sub
jnp
fimull
or
lods
cmpsb
jbe
sti
insb
sbb
das
add
shrb
mov
dec
cmp
jge
in
and
push
sbb
mov
mov
mov
dec
negl
fistl
lret
adc
sarb
sti
ljmp
mov
inc
jp
adc
inc
pusha
mov
adc
inc
or
loop
push
repz
mov
jl
jns
inc
push
inc
stc
cld
lret
lret
ss
lcall
pop
adc
mov
xor
scas
inc
mov
mov
loope
nop
inc
imul
push
add
cmp
aam
pop
popa
xchg
mov
xchg
add
test
call
cltd
push
pushf
pop
inc
mov
dec
test
sarl
insl
jbe
jbe
or
pop
das
xchg
adc
movsb
lret
std
add
or
paddd
rclb
pusha
fwait
imul
push
ja
subl
sahf
popa
pshuflw
pop
pusha
je
mov
inc
out
sbb
repz
dec
call
jp
imul
sahf
xchg
adc
inc
cld
std
cltd
sub
or
mov
ret
mov
loopne
push
inc
or
jge
lds
hlt
add
xor
mov
mov
adc
shlb
cmpsl
xlat
test
pusha
fdivrs
rorb
mov
push
std
mov
mov
push
hlt
in
inc
xchg
xchg
iret
cld
add
pop
dec
sbb
ds
xor
push
test
in
jbe
add
cli
nop
insl
popf
stos
outsl
mov
insl
jne
outsl
fs
mov
stc
mov
xor
inc
push
lds
out
pop
in
insl
in
mov
inc
test
push
dec
mov
inc
mov
adc
mov
xor
pop
dec
sbb
lock
adc
adc
stos
adc
insl
dec
mov
dec
jge
pop
push
fnstsw
aas
mov
mov
dec
shl
leave
mov
outsb
int
sti
cwtl
gs
pop
outsb
sahf
sahf
arpl
out
faddp
xchg
push
sbb
inc
push
enter
pop
int3
mov
mov
push
lret
mov
stc
enter
mov
xchg
lods
xchg
mov
adc
mov
xor
cmp
mov
repnz
pop
xchg
mov
fwait
xor
mov
enter
scas
dec
add
out
jle
das
push
out
pop
push
mov
aam
dec
dec
out
popa
push
es
mov
sbb
mov
inc
insb
adc
push
pop
xchg
xor
cld
in
cmp
cmp
pop
jo
pushf
fldt
jecxz,pt
inc
cltd
add
loopne
and
lea
mov
test
dec
lcall
add
shll
inc
adc
or
mov
dec
xchg
jbe
js
mov
lods
rolb
popf
inc
jnp
cmc
add
jl
ret
pushf
mov
jp
fwait
je
mov
dec
call
je
push
gs
mov
jl
decb
jp
lds
add
test
stos
rcr
test
mov
mov
xchg
mov
dec
inc
imul
jb
push
mov
jae
cltd
mov
xor
fidivl
sub
lcall
and
jp
cwtl
nop
xchg
inc
pop
les
and
jae
fidivrl
xor
out
inc
and
repz
sti
xor
lcall
push
lahf
push
jl
sub
xor
outsb
enter
add
iret
jp
cltd
adc
cmp
mov
in
inc
and
mov
add
mov
lcall
sub
shlb
jne
mov
xchg
add
xchg
js
mov
cmpb
pcmpgtd
test
cmp
les
jae
pusha
mov
test
jg
jnp
mov
cmp
movsl
or
cltd
in
fadd
sti
jg
rcrb
mov
pop
jae
xor
mov
test
sbb
out
outsb
lea
jbe
leave
push
mov
xchg
or
lds
mov
cld
scas
cmp
mov
testl
mov
sub
fstpt
cltd
sub
jle
xor
cld
rcrb
sbb
ja
sub
adc
ret
jnp
js
js
in
mov
cmp
jl
jns
xchg
popa
push
scas
mov
mov
jns
jecxz
mov
jle
xchg
dec
cmpsl
out
jb
adc
cltd
fwait
adc
cmp
fs
mov
lods
and
pop
add
fsub
mov
mov
cs
int
cmp
pop
push
mov
xchg
and
ret
lods
sbb
mov
cs
iret
ret
loop
jns
test
pop
mov
cmp
mov
shr
sub
lret
mov
jp
jnp
in
out
stc
sbb
sub
push
mov
bound
ret
mov
sar
clc
cltd
push
lahf
test
mov
imul
dec
fmul
add
inc
xor
movsl
cwtl
push
fmull
imul
and
incb
xchg
cli
cltd
fs
dec
push
and
xor
roll
adc
fstpl
adc
xor
pushf
cmp
ja
xrelease
mov
xchg
int
pusha
ljmp
lret
lcall
pop
push
add
or
push
je
inc
data16
or
js
fs
mov
pop
jae
lcall
adc
pop
retw
jne
xchg
sbb
pop
mov
sbb
pop
push
inc
roll
sbb
popa
jmp
lahf
addb
push
jmp
mov
es
cmc
jbe
lods
ret
adc
dec
fwait
add
push
stos
adc
jl
mov
inc
adc
pop
xor
lds
cmp
sbb
ret
push
js
call
push
xor
xchg
jbe
mov
arpl
popf
mov
icebp
jbe
dec
mov
cmp
inc
ja
sbb
movl
inc
out
jp,pt
mov
push
ja
arpl
add
loopne
mov
ret
sbb
mov
idivb
scas
pop
jbe
push
mov
test
ds
cmp
pop
cmp
jl
stos
jno
js
mov
jge
xchg
ds
add
add
and
and
push
xchg
shll
cli
bound
jecxz
lret
sub
std
push
jle
xchg
push
loope
emms
das
adc
xor
fbstp
lcall
lock
cltd
jmp
xor
cltd
xchg
clc
aas
jns
stc
and
js
push
mov
outsb
cmp
popa
sub
sbb
jmp
imul
jns
cmp
repnz
sbb
fwait
xchg
jbe
loopne
or
sbb
push
fistpll
and
cmp
out
shll
sub
test
popf
movsb
dec
xor
jle
xchg
and
mov
ud2
inc
std
inc
aas
nop
bound
xchg
cli
adc
js
dec
mov
jno
mov
nop
out
inc
cmpsb
cli
or
or
stos
mov
js
scas
mov
popa
mov
push
or
jb
loopne
inc
pop
mov
loopne
inc
inc
lods
in
ds
ret
push
out
popa
jb
loopne
inc
inc
add
lret
sub
popa
popa
into
ds
or
jb
loopne
inc
popf
js
scas
push
jnp
jle
jp
jb
pop
ret
push
mov
jb
pop
stos
mov
mov
icebp
outsl
ret
in
or
pop
mov
push
lock
daa
mov
add
nop
jno
ljmp
fidivrl
inc
sbb
mov
testb
stos
mov
inc
pop
cli
mov
push
mov
inc
jp
mov
icebp
out
ds
outsb
cmp
popa
mov
xor
push
std
jno
cli
ljmp
loop
adc
mov
fsubp
loop
lcall
addr16
cmp
in
out
sub
jbe
aas
jle
jecxz
fidivrl
jg
arpl
jp
jg
pop
int3
jg
in
jg
xchg
cli
jg
pop
das
jg
push
jg
mov
filds
mov
cmc
subb
push
push
sbbb
shlb
insl
jno
mov
nop
jns
es
cmp
icebp
nop
mov
aas
lcall
ds
shlb
sbb
repz
xchg
pop
test
insl
repz
mov
rolb
repz
int
xchg
ffree
inc
adc
repz
adc
pushw
pop
mov
data16
pop
repnz
inc
ficompl
ficoms
adc
sub
data16
std
cli
dec
sbb
push
mov
rcll
out
lahf
dec
and
inc
std
pushf
fstps
jmp
push
popf
out
pop
ds
xchg
xor
inc
clc
and
outsb
les
rclb
dec
mov
test
dec
jb
adc
xchg
push
fisttpll
test
xchg
imul
out
push
lock
pop
addr16
mov
inc
cld
xchg
lcall
fldenv
push
loopne
mov
adc
cmp
lock
mov
pop
or
stos
addr16
adc
xor
stc
pop
movsl
in
adcb
std
sbb
xchg
mov
inc
sub
jae
popf
jp
loop
lret
loop
lcall
bound
scas
into
aas
mov
pop
into
stos
and
cmp
jbe
xchg
in
xchg
ss
xchg
add
ss
insb
shr
data16
pop
jno
adc
xchg
xor
imul
push
pop
fbld
jp
xchg
xchg
pop
cmp
adc
and
push
mov
xchg
inc
xchg
ds
rolb
sbb
and
xchg
ds
jmp
ja
mov
and
loope
add
xor
mov
jo
lcall
sahf
jl
xchg
push
mov
icebp
outsl
idivl
mov
mov
dec
sub
inc
fidivs
mov
std
push
or
dec
test
sahf
daa
lock
pop
jnp
xchg
xchg
nop
mov
push
mov
in
xor
icebp
push
movl
test
addb
dec
in
xchg
push
push
cltd
sub
jns
pop
bound
std
jge
out
data16
cld
pop
ljmp
push
in
dec
mov
xchg
mov
out
out
and
jge
aas
jae
lds
cmp
loop
sbb
mov
mov
xor
mov
orl
sahf
std
push
pop
popf
or
addr16
xor
outsb
cmp
lods
jo
popl
int
pop
pop
nop
mov
lock
pop
mov
icebp
popa
cmp
push
mov
push
jbe
cmp
adc
int3
and
jp
repnz
sub
adc
mov
popa
testb
sti
xor
pop
mov
mov
mov
xchg
lds
lcall
out
in
lods
jmp
cmpsb
lret
and
das
pushaw
out
aam
jb
cmp
ljmp
in
jb
rcl
test
jno
jbe
and
mov
mov
leave
add
push
xlat
outsl
js
mov
mov
jbe
pop
sub
aaa
xchg
jg
rcrb
jge
idivl
daa
push
mov
bound
int3
adc
shr
push
ret
in
mov
aam
mov
pop
lods
lea
mov
cmp
scas
lea
repnz
lods
mov
movsb
fidivl
aaa
cli
push
rcr
rcl
and
add
test
xchg
mov
imul
in
outsl
popa
ret
lcall
mov
and
xor
insl
fidivrs
mov
jmp
lcall
sub
fwait
sahf
jp
pop
adc
dec
inc
cs
clc
dec
faddp
adc
mov
adc
push
arpl
mov
clc
inc
imul
int3
pop
lret
jns
mov
in
xor
cltd
call
mov
in
js
ss
loope
inc
dec
mov
rolb
lods
pop
dec
shlb
dec
and
xlat
and
cmp
push
mov
push
nop
jge
cltd
jns
push
loop
inc
xlat
call
icebp
testl
cmp
outsb
sub
outsl
xor
orl
pusha
jl
sbb
pop
pop
pop
test
out
into
push
push
cmpsb
dec
cmpsl
pushf
push
jb
call
cltd
adc
sbb
jmp
test
les
imul
aas
push
cmp
pop
inc
jo
sbb
pop
push
inc
repnz
cli
lds
test
xchg
ret
adc
hlt
push
outsl
fsincos
popf
mov
push
nop
jbe
ljmp
pop
daa
rcrb
cmp
lret
jns
insl
nop
dec
jo
test
in
repnz
lods
subl
mov
mov
xlat
inc
mov
pusha
inc
sahf
mov
jne
icebp
ror
inc
pop
lock
pop
push
testb
xchg
int3
subb
mov
jo
cmp
cwtl
or
sahf
gs
jmp
inc
pop
mov
xchg
insl
or
sti
pusha
gs
xchg
xchg
push
pop
test
rorl
enter
fisttpll
cltd
pop
pop
incb
lret
arpl
into
and
xor
aam
idivl
aad
test
lock
or
push
jge
or
pop
push
xchg
icebp
cli
mov
pushf
test
mov
push
and
mov
loopne
aaa
fidivrl
pop
das
rcll
add
lods
push
popa
pop
cwtl
xor
out
push
dec
mov
idivl
imul
add
mov
dec
outsb
lahf
adc
mov
inc
push
jge
loop
out
pusha
mov
dec
fsts
cmp
or
imulb
loop
or
cmpsb
mov
lret
lcall
sbb
aad
jno
icebp
xor
jno
mov
inc
jb
push
std
ds
xchg
adc
add
cmp
clc
jb
jb
pop
into
pop
sub
sahf
aaa
jns
leave
imul
sub
clc
mov
lea
jno
mov
fidivrl
aad
jno
icebp
cltd
aad
cmp
test
out
and
mov
mov
pusha
sub
dec
mov
pop
rcr
sub
sub
ljmp
stos
add
xchg
cli
outsb
fcomps
mov
xor
cmp
sub
dec
fisubrs
scas
repnz
adc
andb
jne
inc
fisubs
sbb
dec
sbb
xchg
ja
lret
push
pop
lock
dec
jecxz
insb
and
and
push
fwait
jnp
inc
lods
or
ficomps
pop
push
popa
sub
mov
test
sahf
push
sub
and
lret
cwtl
test
ja
mov
ds
cwtl
add
lock
js
add
dec
and
gs
sub
cmc
jecxz
lahf
xchg
pop
sub
jo
dec
and
js
push
out
cmpsb
sti
bnd
loop
ds
cltd
aad
hlt
mov
xor
add
dec
rcrb
cltd
adc
pop
cmc
cltd
enter
outsl
adc
jmp
pushf
xchg
push
lods
push
int3
xchg
cmc
cmp
dec
adc
and
in
jb
clc
cltd
pop
pop
jbe
cli
outsl
scas
inc
cmp
cs
sub
push
push
and
push
int
push
flds
mov
mov
xor
push
mov
add
ja
cli
out
mov
add
mov
in
fldt
adc
std
out
dec
dec
sar
fistl
or
pop
insl
cmpsb
mov
inc
sub
std
gs
adc
mov
outsl
inc
ja
ret
aaa
cwtl
fisubrl
xchg
or
cmp
rcrb
shrl
ja
xor
push
push
inc
divb
mov
push
aam
addl
and
jbe
sbb
pop
incl
aaa
outsb
xchg
loope
jle
pop
shlb
outsb
fiaddl
rorb
push
in
ss
mov
mov
dec
lret
sbb
pushf
add
adc
cmp
add
push
in
sub
rorb
pop
mov
mov
jno
jmp
enter
pop
cmc
mov
pop
xchg
popf
push
test
jne
mov
in
or
and
popf
dec
xchg
orb
or
jge
rorl
lds
cmpsb
jno
lods
push
mov
imul
mov
dec
sahf
mov
and
sbb
call
sahf
into
pop
cmp
popa
and
sub
pop
xor
pop
sub
cmp
sbb
adc
push
push
mov
dec
mov
lahf
icebp
sbb
lea
outsl
iret
lahf
inc
add
lahf
cwtl
jno
lahf
iret
sub
aad
das
lahf
sahf
nop
imul
bound
dec
movsl
push
cwtl
inc
lret
outsb
add
jmp
idivb
xchg
pop
mov
dec
enter
jmp
ja
and
inc
jb
mov
adc
pop
sahf
xchg
push
inc
cmp
popf
test
pop
lret
pop
jne
dec
outsb
push
mov
mull
scas
inc
lds
push
call
ficoml
lret
lcall
ss
loopne
mov
jp
jge
cli
and
sarb
pop
lods
insb
popf
inc
jle
popa
mov
push
mov
jle
lcall
insb
dec
cli
andl
cs
int
pusha
scas
mov
adc
cli
test
xchg
mov
lret
pop
lods
mov
jmp
loopne
in
sub
pop
mov
popa
jbe
xor
sbb
jl
in
inc
adc
xchg
sub
sahf
loopne
sti
insl
mov
jb
mov
test
sti
std
inc
xchg
mov
mov
cmp
in
das
mov
loopne
cli
mov
sub
mov
aaa
hlt
mov
xchg
pop
cwtl
outsb
sub
and
mov
dec
add
rep
jbe
push
inc
je
jo
jge
jno
cli
sub
cmp
js
pushf
pop
mov
movsb
shrb
movsb
mov
daa
xchg
movsl
in
sub
pop
movsb
aad
loopne
jmp
test
movsl
daa
inc
inc
xor
sub
dec
mov
dec
mov
lods
sub
mov
push
loop
imul
clc
fmull
fld
out
jae
jp
push
lcall
cmpsl
out
pop
jbe
movaps
in
push
mov
xor
mov
cwtl
cmpsl
pop
pusha
dec
out
jns
shlb
xchg
test
inc
xchg
xor
jp
call
and
inc
push
jbe
xchg
mov
ret
es
pop
mov
xchg
push
sub
sub
aas
cmpsl
out
inc
add
push
mov
aaa
adc
inc
jo
orb
lcall
cmp
fcomps
cmpsl
cli
sahf
xor
test
testb
and
xor
loopne
jmp
jns
rolb
inc
cmpsb
push
dec
icebp
scas
stos
test
les
dec
cmp
jp
jmp
sbb
xchg
xchg
roll
cmp
rcrl
cs
ljmp
mov
test
cli
cmpsl
add
test
cli
ljmp
pop
inc
test
aas
add
xor
test
sub
ret
ja
insl
fnstsw
hlt
gs
sub
mov
mov
es
and
xor
mov
stos
std
cwtl
stos
mov
jno
stos
xlat
decb
stos
or
push
mov
gs
shlb
add
arpl
rcr
les
repz
mov
xchg
shr
push
js
and
in
jnp
pop
shlb
in
inc
sbb
mov
push
fstpt
or
jno
lods
mov
push
jbe
jp
lods
or
pop
lahf
scas
sbb
dec
pop
jl
repnz
push
add
mov
sbb
jnp
cmpl
arpl
cmpb
cmp
sbb
jbe
outsl
jno
mov
stos
subb
push
ret
cmp
xchg
pop
mov
jge
popa
stc
jl
pusha
xor
ljmp
rcrb
jae
mov
testl
and
or
fimuls
cli
xor
xchg
inc
scas
iret
mov
cmp
sub
lret
adc
mov
popf
inc
mov
or
push
cmc
in
xchg
or
cli
mov
push
fcmovnb
stc
cmc
xor
outsb
xchg
pop
mov
loopne
icebp
das
imul
pop
cltd
xchg
or
ret
xorl
mov
into
movsl
insl
lods
ja
std
cmp
test
les
clc
int3
loope
mov
mov
pushf
adc
jp
mov
aam
xchg
outsb
hlt
cltd
adc
mov
aam
xchg
sahf
sub
pop
mov
cmp
movsl
or
xor
jb
lods
jmp
ljmp
jp
xchg
mov
mov
push
cli
aam
cld
iret
dec
sahf
push
xchg
cmp
mov
lret
int3
pop
xor
jno
xor
shlb
xchg
pop
daa
mov
push
xor
add
and
das
imul
loop
not
push
out
dec
cli
xchg
jnp
xor
mov
push
pop
mov
fidivrl
arpl
mov
mov
cs
mov
pop
ja
cmp
outsl
cltd
jl
dec
bound
std
push
push
fwait
push
dec
push
add
loop
xor
push
sbb
jl
adc
jb
lods
adc
jge
mov
xchg
cs
mov
ficoms
int3
out
cmpsb
negl
sahf
xchg
jp
jb
loope
mov
stos
std
arpl
push
pushf
mov
fwait
cmp
jl
cmp
cmpsb
adc
inc
mov
shr
push
scas
je
adc
sbb
je
jge
pop
outsb
inc
inc
jmp
shlb
jle
jle
push
inc
mov
out
fiaddl
sub
xchg
fnstcw
gs
xorb
stos
je
bound
mov
add
fnstenv
pushf
jecxz
cwtl
test
inc
stos
push
ss
pop
ljmp
into
sbb
sbb
cmp
stos
xor
adc
gs
dec
movsb
mulb
fwait
lahf
xor
enter
cmp
or
out
maxps
scas
inc
stos
mov
movsl
test
rorb
mov
mov
mov
pusha
rclb
test
jno
decb
mov
cmp
dec
lods
cltd
cs
cmp
mov
popf
jmp
sub
jbe
jb
loopne
or
mov
fsubl
fstpl
lret
mov
dec
nop
mov
or
cmpsb
pop
xor
lret
cltd
sub
scas
jmp
push
dec
daa
pushf
sub
std
cmpsb
sub
stos
jbe
aas
mov
test
sub
shl
mov
sub
jl
cmp
ss
pop
jns
mul
es
cltd
dec
lret
xlat
mov
mov
mov
stos
data16
mov
sahf
data16
xor
scas
sbb
sub
and
out
int3
repnz
movsb
mov
mov
xor
mov
xor
inc
sahf
std
adc
in
je
cltd
inc
shrl
insl
aas
icebp
adc
pushf
xchg
test
mov
or
adc
jecxz
insl
rcrb
dec
cli
cmp
mov
jp
or
mov
cltd
mov
inc
mull
js
inc
push
fnstsw
data16
push
lret
std
and
or
cli
pop
ds
or
jne
xchg
jg
das
push
mov
mov
mov
xor
arpl
and
cmpsb
inc
jge
inc
mov
std
test
dec
mov
inc
cmp
jge
ret
mov
fdivr
jo
adc
rcll
mov
out
test
inc
lds
popf
or
dec
mov
pop
cmp
or
or
jb
ja
jmp
fdivrp
xchg
mov
je
dec
jae
xor
cmp
imul
cmp
sub
cld
cltd
mov
lahf
lret
mov
mov
jnp
push
fstpt
pop
popf
xor
xor
jb
xchg
adc
push
xchg
adc
addr16
rolb
stos
insb
mov
push
fwait
mov
mov
mov
mov
mov
lds
loop
jp
pusha
gs
arpl
cmp
mov
orl
dec
mov
stos
xor
ret
inc
adc
mov
sub
push
mov
in
movsl
mov
clc
jae
inc
jne
jp
int
adc
cltd
cmp
in
pop
xchg
in
dec
cmp
lcall
jno
push
and
or
cmpsb
call
xorb
or
mov
xor
int3
dec
dec
addr16
or
lods
sahf
in
sub
mov
sahf
cmpsb
in
mov
out
mov
imul
daa
mov
mov
sub
dec
cmpsl
aaa
jno
push
inc
test
js
loop
jge
lcall
rcrl
xlat
popf
sahf
and
inc
mov
sahf
daa
sarb
int
push
movsb
loop
dec
and
pop
mov
loope
mov
sbb
popa
sahf
add
cmpsb
jnp
movsb
aas
cmpsb
out
test
ret
das
sbb
cmpsb
adc
mov
xchg
inc
shr
pop
dec
rorb
xchg
outsb
sarb
bound
and
mov
lds
fwait
jle
out
and
test
xchg
sub
xor
mov
decb
pop
icebp
inc
sbb
daa
mov
push
pusha
in
popa
pop
mov
mov
out
in
cli
test
sub
dec
jo
mov
mov
sahf
fwait
jl
adcl
stos
jp
xor
or
inc
shl
shlb
out
stos
sbb
push
jns
and
mov
out
shlb
cmp
jb
js
test
push
inc
mov
shl
shll
rcll
fadds
ficoml
xchg
pop
adc
ret
xchg
aas
insb
bound
cmp
push
sbb
popa
mov
sub
ret
out
mov
adcb
insl
jb
lret
fiadds
pop
dec
test
mov
inc
in
cld
bnd
xor
iret
les
or
ja
loop
sbb
sub
pop
les
jb
call
test
cmpsl
outsl
jne
imul
push
insl
jp
lds
outsl
lds
pop
mov
insl
jp
sub
ffree
and
js
sbb
sub
push
mov
pop
popa
mov
sti
mov
mov
lods
jp
sub
popa
push
sub
inc
jnp
imul
cli
inc
and
xor
js
inc
enter
leave
fstpt
mov
mov
repnz
insl
aad
pop
in
aas
stos
xchg
aas
leave
data16
mov
scas
jp
sarl
jo
cmp
ret
jne
js
repnz
jge
addl
icebp
push
fwait
mov
or
jbe
cwtd
rcrb
lea
fnstenv
jp
cld
inc
jg
add
jbe
and
fildl
mov
iret
punpcklbw
push
add
movsb
pop
jle
ja
jge,pt
gs
pushf
das
cmp
adc
cld
loop
mov
repnz
lds
ret
and
pop
sbb
shrl
andb
outsl
inc
jbe
inc
out
popa
aaa
mov
dec
inc
pop
push
mov
insl
adc
popf
lret
cld
and
sbb
dec
ds
insb
and
push
sbb
xchg
popa
ret
js
ret
mov
dec
add
dec
jg
adc
push
dec
inc
movsb
add
pop
jge,pn
add
inc
jge
imul
popa
jns
cmpsb
dec
insl
xor
mov
aas
shl
jne
insb
js
mov
addr16
and
test
adc
repnz
std
jb
cli
movb
and
cli
ret
and
cmpsb
stos
and
shrb
jno
movsl
stc
sbb
enter
outsl
sub
not
loopne
imul
lret
mov
lret
int
lret
push
pshufw
pop
fisttps
rclb
inc
rorb
mov
inc
loopne
je
dec
into
sbb
fadds
jbe
lcall
scas
outsb
ret
cli
fldenv
mov
jmp
mov
jno
fidivrl
jge
lcall
lcall
mov
adc
or
cmp
rcrb
sub
arpl
jno
cmpsb
fs
sub
movups
cmp
jnp
popa
xchg
iret
fcomp
sti
pop
ds
mov
push
push
push
jb
sub
inc
iret
shr
iret
push
incb
inc
jb
iret
lret
sub
xchg
fcmovb
cmp
xchg
fst
js
jno
rcr
ljmp
xchg
mov
js
mov
push
jno
rol
jno
rcll
inc
sub
gs
jno
into
fwait
cld
fcmovb
cmp
xchg
mov
jmp
jecxz
cli
jecxz
shlb
insl
cli
repnz
adc
aam
popa
pop
sub
jecxz
jp
jp
ds
in
gs
fwait
jecxz
sub
or
pushf
cld
mov
inc
pop
in
xor
cld
rcll
fs
enter
push
jbe
or
jno
popf
xchg
jae
arpl
popf
xchg
pop
popf
ja
adc
lahf
cld
mov
cmc
xchg
mov
std
cmpsb
popa
sbb
or
es
inc
pop
xlat
insl
cli
outsl
xlat
stos
jp
fmuls
popa
lret
fmuls
ret
inc
or
fmuls
arpl
sub
cltd
add
fstps
fpatan
inc
cwtl
fldenv
popa
cmp
and
fidivrl
and
cmp
xchg
sbb
fiaddl
mov
sbb
cmp
ja
daa
xor
and
xor
dec
ja
enter
je
mov
mov
int3
cmp
nop
dec
mov
outsl
fcomps
gs
mov
out
in
cmpsb
int3
test
xchg
adc
faddp
mov
bound
popa
jg
daa
fldt
push
dec
and
dec
sti
nop
push
xchg
mov
lea
aam
mov
sbb
adc
jns
or
and
cmp
stc
cmp
push
fsubr
cmp
adc
sbb
mov
outsl
dec
sub
push
cli
inc
xchg
pop
std
mov
mov
int
push
sub
pop
into
push
cmp
cmp
mov
push
xchg
fcompl
cmp
push
mov
filds
data16
xor
loope
xchg
jb
jp
mov
dec
popa
lcall
fs
divl
xor
adc
clc
pop
mov
imul
test
fnstsw
cmp
and
and
xchg
sbb
dec
jno
fmulp
mov
xor
xorl
popf
pop
decb
mov
aaa
cli
in
mov
arpl
rcll
les
jbe
mov
xor
cld
inc
mov
aas
mov
test
xchg
dec
dec
push
data16
push
mov
cmpsl
jge
in
orb
je
cmpsb
sbb
fldl
scas
cs
xor
inc
mov
xorl
sub
mov
notb
scas
pop
rcll
insl
pop
fbld
dec
andl
jne
sub
inc
dec
push
pusha
sub
and
je
jp
inc
mov
and
mov
mov
sbb
data16
es
cmp
loopne
adc
push
xor
mov
or
sbb
popa
pop
cmp
push
xor
push
cmpl
adc
pop
daa
jae
push
xor
int
bnd
loop
ds
loope
dec
mov
repz
sbb
push
and
mov
dec
ja
loope
aas
add
hlt
in
daa
push
scas
int3
push
or
fidivl
insb
lcall
and
xchg
lds
inc
insl
lcall
inc
sahf
lcall
lock
mov
ds
sub
mov
xchg
mov
ficompl
das
dec
fnstenv
and
lcall
ds
jbe
jbe
cmp
mov
inc
dec
mov
pushf
dec
add
mov
js
mov
in
mov
cs
pop
mov
jne
and
test
mov
jbe
std
insb
jmp
add
jp
jne
xor
xchg
add
xchg
fimuls
das
into
or
inc
decb
divl
hlt
arpl
cli
cmp
in
cmp
lret
lcall
add
sub
mov
lret
pop
push
dec
cmp
pop
movsl
loop
outsb
pop
insb
and
ds
movsb
in
jle
fcmove
xor
lods
in
aas
out
ret
xchg
push
sbb
push
jbe
cmp
xchg
das
icebp
insb
xorb
push
inc
testb
pop
jb
rolb
xchg
dec
add
jge
scas
cmpsl
xchg
jnp
pop
test
jbe
sahf
cmpsb
xor
cmp
pusha
cli
lret
mov
xchg
out
cli
mov
sar
xchg
repnz
or
cli
mov
std
popf
xor
jmp
pop
insb
les
bound
ret
adc
inc
aam
mov
insl
dec
aad
test
addr16
fnsave
cmp
pop
jb
lret
mov
cmpsb
push
sbbl
add
mov
faddl
cmp
popf
shlb
mov
call
pop
push
add
stc
loopne
repnz
xchg
add
js
pop
sub
call
nop
popa
inc
aas
jbe
loope
inc
leave
cmp
out
addb
js
push
mov
pop
jbe
aaa
lret
mov
cmp
into
fiaddl
cmp
xchg
pop
jmp
aaa
mov
insb
movsb
fwait
cmc
decb
ljmp
out
and
adc
aad
inc
mov
cmpsb
fisttps
inc
jp
cmp
mov
xchg
ficompl
les
dec
ljmp
sub
pusha
shl
push
jmp
dec
je
sbb
aaa
push
and
sbb
adc
sarb
aad
aas
cltd
push
push
mov
pop
out
mov
pop
adc
mov
pop
pusha
lret
lcall
pop
stc
jg
or
jecxz
cli
sahf
xor
bnd
mov
popa
outsl
jb
mov
ss
xchg
push
fnsave
mov
cmp
inc
sub
inc
fidivl
pop
cld
lcall
push
int3
inc
js
in
adc
cmc
adc
push
pop
pushl
and
xchg
out
xor
ds
test
push
cmpsb
aad
test
mov
roll
addb
add
push
mov
sarb
sub
mov
std
mov
inc
push
insb
mull
pop
in
or
adc
int
lcall
inc
dec
daa
negl
push
push
inc
or
ret
in
jb
ret
and
popl
xchg
aas
std
call
xchg
icebp
mov
xor
add
in
sub
es
in
dec
xchg
jnp
icebp
inc
into
ljmp
cmp
je
data16
pop
inc
out
push
lret
stos
pusha
insb
rcrl
sub
ror
sub
out
cmp
mov
aad
xchg
out
js
cli
pop
sbb
hlt
jmp
mov
xchg
add
jb,pt
out
cmc
jecxz
popf
mov
and
pop
imul
sbb
mov
out
out
jne
inc
popf
fwait
daa
enter
lods
fistpl
mov
add
cmp
ljmp
adc
add
xchg
jae
repnz
mov
into
push
lahf
mov
sarl
xor
push
cmp
inc
int
xchg
insb
sub
ja
out
addr16
and
jg
std
sub
jl
movb
xchg
das
ds
cmp
jo
test
cmpsb
push
pop
out
push
and
jnp
pop
imul
dec
sbb
cmc
imul
in
int
scas
and
fiadds
sarl
push
lahf
inc
mov
rcr
repnz
cs
filds
and
test
dec
lock
fisttpl
lock
and
into
insl
cmpsb
jmp
xchg
push
pop
lcall
out
int3
xor
dec
mov
in
add
pop
fyl2x
sbb
mov
rclb
call
subl
xor
xchg
sarl
cmp
mov
lds
xchg
jo
icebp
lds
mov
sti
subl
jp
repnz
into
rclb
faddl
stc
cltd
in
jecxz
fisubs
repnz
mov
jnp
ds
add
fmull
mov
adc
dec
sti
cli
cli
imul
scas
rorb
mov
mov
cmpsl
jle
mov
mov
push
jno
repz
adc
loop
push
sti
fiadds
fistpl
lcall
cmp
scas
cmpsb
adc
xor
insb
loope
lods
dec
sub
inc
mov
imul
push
jno
hlt
mov
push
rcrb
push
pop
xchg
sub
sti
xor
push
push
lcall
sub
mov
jmp
orl
out
ds
mov
cmp
mov
imul
daa
pushf
div
push
mov
cmpl
pop
push
mov
in
out
mov
test
cs
dec
cmc
sub
cmc
pop
or
inc
mov
sbb
lret
add
push
mov
cltd
pop
cmc
xchg
sbb
enter
xchg
jmp
ja
test
add
repz
aaa
jo
pop
fadd
pushf
pushf
mov
jo
mov
out
fistl
push
jmp
repz
jl
ret
xchg
push
daa
imul
adc
dec
rcr
dec
in
mov
cmp
sbb
test
lcall
lods
xchg
std
arpl
sahf
fisttps
mov
stos
sub
add
cmp
cmpsl
scas
vpsubd
stc
jecxz
insb
in
cmp
xchg
gs
or
mov
ja
clc
dec
adc
repz
daa
mov
push
adc
fisubs
xorl
push
clc
push
dec
cmp
mov
xchg
mov
pusha
dec
shl
dec
loope
sub
pop
ja
or
xlat
outsl
psubw
push
mov
or
inc
aad
pop
cmpsb
inc
sub
mov
icebp
xor
push
mov
mov
cmp
mov
push
sub
std
cli
test
and
sub
push
jb
cli
cwtl
jno
push
lds
loopne
pop
mov
push
jne
pop
dec
pop
lds
or
negl
jmp
xor
jmp
push
das
dec
mov
push
unpcklps
mov
jp
push
pop
xchg
icebp
cmp
sti
mov
fists
mov
test
xchg
xor
cmp
sahf
pop
mov
mov
mov
cld
dec
add
sti
cli
add
popa
ss
sub
sti
xor
push
in
cltd
mov
outsb
shrb
bnd
cmp
std
cmc
jecxz
lahf
cmp
cld
pop
movsb
cwtl
cli
adc
jbe
cli
inc
push
in
test
add
stos
mov
insl
out
jp
sub
fdivr
in
test
icebp
push
push
push
jb
aaa
pop
pop
sbb
xor
bound
or
and
out
lret
xchg
repz
out
es
push
pop
ds
pop
imul
lock
xor
and
cltd
push
je
enter
mov
je
and
mov
pop
movhps
cmpsb
cmpsb
pop
insl
shlb
sbb
cwtl
pop
adc
loope
outsl
fsts
mov
and
xchg
push
xchg
test
sbb
pop
incb
sub
sahf
cmpsb
and
cmc
leave
mov
add
push
cmp
pop
ja
test
and
dec
cmp
mov
jge
mov
fisubs
aad
inc
in
cmpsl
shlb
lahf
add
pop
leave
push
lahf
mov
hlt
inc
bound
add
lret
xchg
outsb
les
xchg
repnz
push
pop
push
sbb
subb
inc
mov
mov
adcb
jmp
xchg
outsl
mov
cs
fs
lret
jo
and
loope
fisubl
mov
mov
adcl
cmp
fnstsw
jnp
ds
data16
pop
xor
icebp
push
cmp
adc
std
sbb
push
inc
sbb
aas
pusha
and
or
jae
mov
cmp
addr16
and
in
add
lods
jecxz
push
jne
push
into
stos
jnp
cmp
push
out
push
movsl
mov
lods
sbb
fstpl
fimuls
jl
pusha
outsb
pop
xchg
add
into
add
stos
outsb
shll
iret
lret
pop
stos
pop
aam
js
jns
push
dec
rcll
fcompl
nop
mov
sub
cli
fcomps
cmc
pop
xor
xor
add
cmp
lret
xor
sbb
push
outsb
adc
lret
adc
mov
out
lock
out
mov
xchg
mov
xchg
jo
stos
je
jo
xorb
push
pop
mov
jo
lret
dec
idivl
push
mov
sarl
shll
fidivl
push
xchg
cmpsw
outsb
ja
mull
mov
or
out
es
lcall
cmp
adc
out
aad
or
mov
sbb
aaa
das
loope
lret
dec
imull
popf
adc
lret
sub
adc
scas
mov
das
lods
jo
mov
and
shrl
fldl
inc
pop
pop
loopne
pop
enter
fs
push
cmp
nop
pop
imul
mov
addl
cmc
jecxz
xchg
mov
adc
sbb
out
adc
fiaddl
arpl
das
xchg
aam
aas
stc
js
insb
mov
aam
lods
bound
push
add
jg
sub
mov
mov
icebp
mov
push
and
and
cmpsb
mov
mov
push
scas
mov
push
pusha
or
cltd
xchg
push
pop
xor
jae
je
sub
nop
or
pop
jge
ljmp
stos
or
sbb
and
push
fucomp
xor
dec
xchg
inc
int3
mov
jo
xchg
inc
xchg
jne
jns
lock
or
clc
mov
out
sbb
jmp
xlat
jno
in
mov
inc
into
cli
rorb
lret
nop
push
ss
fidivrl
es
lcall
jae
bound
ljmp
repnz
mov
addl
movl
cmp
cmp
jg
std
inc
leave
xor
and
pop
push
push
mov
adc
ja
pop
into
mov
xor
pusha
lods
sub
in
push
mov
xchg
jns
or
push
loopne
data16
mov
sarb
or
icebp
inc
in
push
sahf
lods
push
sbb
xor
pop
xchg
xchg
sti
pop
cmp
sbb
in
xor
inc
jnp
mov
sbbl
jnp
scas
or
xor
cld
jno
or
cli
into
mov
incb
xchg
dec
repnz
pushf
push
pop
fmuls
in
cld
jno
mov
enter
lcall
lret
pop
inc
bound
outsb
push
cltd
scas
and
dec
arpl
popa
fisubs
or
adc
pmaxsw
sub
and
fmull
or
std
adc
lods
out
adc
sbb
lods
pop
lea
sbb
sti
cli
test
lods
pop
ret
movups
test
inc
xchg
imul
jne
cmpsb
lods
ds
movsb
xchg
jb
sete
in
incb
adc
adc
insb
inc
jb
seta
aas
add
in
ja
imul
and
inc
jb
add
jae
or
dec
mov
loopne
aad
aam
sub
push
ja
push
mov
enter
fisubl
adc
cmp
fimull
adc
cltd
rcrb
pop
scas
pop
push
mov
dec
pop
mov
jo
lock
rcrl
cvtps2pd
ret
adc
mov
xor
mov
pop
cmp
mov
andl
stos
pop
pop
cltd
outsb
shl
dec
add
std
setbe
repz
xchg
jae
cmc
xor
nop
fnstenv
out
das
cmp
pop
movsb
lods
xor
sub
push
jb
fbstp
xchg
push
outsl
dec
fwait
clc
cs
add
scas
das
xchg
and
jb
jo
and
pop
inc
cmp
mov
popa
call
mov
es
mov
pop
pop
pop
sbb
scas
adc
mov
enter
sbb
cwtl
cmpb
scas
cmp
daa
das
adcl
stos
aas
sbb
xchg
jb
jb
sbb
dec
or
movsb
rcl
sbb
addr16
shlb
gs
insl
lock
fmul
ret
xchg
sti
xor
sbb
and
insl
or
cmc
cli
sbb
mov
mov
and
jp
sbb
or
jp
jne
dec
pop
sbb
pop
xorl
fstl
jle
in
jno
sbb
popf
std
mov
lahf
mov
jno
pop
fdivr
inc
pop
inc
jb
pop
xlat
mov
xorl
inc
and
jae
and
cmp
ficompl
jp
es
lods
mov
and
data16
mov
push
cmp
xor
lret
dec
ds
daa
inc
cmp
jnp
cmpsl
cmp
mov
xchg
shll
and
dec
mov
ljmp
xor
cmp
addr16
daa
pop
cmp
jl
test
and
mov
and
ret
jge
jno
jge
jb
and
insb
push
jge
filds
nop
mov
jno
test
sbb
lea
lcall
dec
insb
les
lods
cmpsb
push
mov
fdivl
xor
cs
dec
and
lcall
mov
scas
data16
lds
outsb
rorl
adcl
cmpsb
je
test
pop
loope
imul
push
fwait
aaa
outsl
mov
out
add
es
stos
pop
push
xchg
cltd
in
inc
dec
fwait
inc
jo
fidivl
xchg
sahf
daa
mov
mov
lcall
xchg
je
pushf
cwtl
and
xchg
lret
andb
js
cmc
mov
push
sub
testl
outsl
sbb
lcall
mov
repnz
lret
scas
daa
push
inc
inc
cmp
mov
pop
lret
fsts
push
jge
test
cmpsb
imul
sub
aaa
sahf
lcall
pop
push
das
lret
push
lods
pop
repnz
fs
inc
mov
aaa
sti
jb
sbb
or
mov
lock
fisubrs
lcall
movsb
aas
mov
push
xchg
sub
lea
cmp
mov
lcall
cmp
lods
shl
int3
fwait
mov
lea
iret
int3
decb
cmpsl
call
inc
jmp
aas
sub
push
xchg
ljmp
test
xchg
ror
dec
sahf
pop
imul
scas
pusha
cmp
sarb
xchg
inc
sbb
addl
std
mov
mov
cmp
cli
mov
sub
addl
sub
out
fadds
out
inc
pop
cmp
pop
lea
sbb
test
sbb
fimuls
jb
sub
xor
cmc
shlb
mov
shll
sub
mov
mov
scas
push
cli
mov
xchg
dec
scas
ljmp
and
outsb
cmpsl
iret
jp
test
in
sub
jp
sub
repnz
test
xorl
lcall
test
mov
xchg
inc
sub
fstl
mov
insl
xchg
mov
cs
jno
xchg
jno
cs
xchg
aas
andl
mov
idivb
orb
das
push
mov
das
repz
lds
cmc
mov
arpl
sub
arpl
mov
add
sbb
xor
aas
mov
push
movl
test
xor
inc
xor
icebp
sub
push
push
pop
push
xor
jnp
nop
xchg
mov
push
or
insl
in
xchg
mov
sbb
pushf
mov
nop
xor
adc
mov
js
dec
inc
shrl
inc
cli
pop
jbe
movsl
jo
ja
scas
pop
mov
cmp
cmp
inc
pop
pop
mov
xlat
lea
mov
roll
movsl
out
mov
sbb
pop
pop
lret
mov
in
xchg
cmp
inc
cmp
lret
addr16
sub
pop
pop
xchg
xchg
out
cmp
jmp
outsb
fisttpll
cmp
pop
add
xchg
aam
sarl
adcl
ds
cmp
movsl
cltd
sti
nop
mov
xor
xor
incl
mov
cwtl
ss
lcall
inc
xor
xor
aaa
out
fidivrs
in
and
rcrl
pop
push
mov
jo
fwait
add
insw
cltd
ss
aaa
enter
rclb
data16
pop
push
mov
popa
sub
sub
push
sahf
hlt
sbbl
xor
mov
jmp
ds
cmp
xchg
loope
jb
cli
xor
sahf
pop
xchg
push
sub
pushl
lret
jns
xor
hlt
notl
mov
xchg
push
xchg
cmpsl
popf
pop
push
xor
popf
mov
inc
das
jo
ss
repz
jb
clc
addl
sbb
push
xor
push
add
popa
or
cli
pop
xchg
insl
gs
lret
jg
insl
jp
loope
aaa
jne
enter
test
mov
cmp
xlat
jno
aaa
scas
mov
xorb
in
xchg
jg
scas
add
dec
in
cmp
dec
shrl
sub
cltd
rorb
in
cmpsb
shlb
cmp
sahf
and
int
cld
jecxz
ss
cmp
aam
mov
out
xchg
loopne
loope
cmp
xchg
lods
dec
and
xchg
xchg
cmp
sub
pop
and
cmp
sub
test
pop
popa
pop
pushf
int
jmp
clc
sub
test
imul
cmp
mov
mov
dec
sbb
adc
pusha
arpl
outsl
mov
or
aaa
dec
xchg
cmp
imul
in
mov
push
mov
mov
push
xchg
test
push
fimull
in
jb
jns
lds
pop
pop
cmpl
cwtl
jecxz
inc
sbb
mov
xchg
jmp
xchg
test
pop
insb
clc
scas
cwtl
mov
hlt
pop
push
ror
dec
outsb
xchg
mov
insb
push
mov
test
insb
sub
js
jne
sbb
cmp
lahf
mov
pop
push
aad
lret
fcoml
sbb
push
popf
cmp
stos
sbb
leave
cmp
xor
pop
dec
cmc
pop
mov
stc
frstor
fdivs
cmp
push
pop
pop
pop
lret
push
lcall
cmp
and
inc
add
mov
mov
insb
rolb
shr
stos
xor
fcmovnbe
dec
lds
decb
cwtl
loopne
in
xchg
std
je
pop
jo
jnp
icebp
popa
xor
xor
aam
add
arpl
data16
add
sbb
push
fwait
jge
cmp
ds
pop
popf
lret
loop
data16
pop
cmpsl
jl
mov
mov
mov
xchg
inc
sub
jno
push
pushf
rorb
push
mov
fwait
jno
ds
or
jb
ja
xchg
push
arpl
mov
repnz
into
jg
xchg
cwtl
test
jb
in
outsl
enter
xchg
scas
cli
jb
leave
fisttpl
fdivl
lret
pop
xor
aas
out
adc
sub
pushf
push
and
xchg
icebp
cli
sub
jbe
add
js
cwtl
inc
push
jb
inc
int
pushf
adc
les
or
aad
data16
fcoms
xchg
wrmsr
xor
cmp
nop
push
mov
icebp
cmp
mov
mov
cmp
cli
icebp
xchg
sub
je
popa
test
pusha
dec
xchg
xchg
inc
js
test
mov
int
cmpsb
or
aas
inc
xor
pop
xlat
lods
repnz
sti
cli
push
inc
xchg
jmp
dec
test
sar
cmpsb
test
jbe
adc
add
into
inc
inc
std
jb
pop
shlb
sbb
mov
out
out
add
jnp
lcall
shl
inc
js
icebp
inc
filds
add
mov
ds
rcll
call
cmp
popa
dec
mov
mov
mov
xor
dec
mov
rclb
mov
outsb
fwait
fiaddl
mov
push
ds
inc
pop
fnsave
dec
or
sbb
or
xor
jmp
mov
and
pusha
bound
les
ja
mov
mov
shrl
inc
rolb
jg
jb
inc
mov
test
inc
inc
repz
inc
std
and
inc
inc
pop
loopne
and
inc
sub
mov
cmp
mov
inc
in
mov
lahf
cli
mov
movsb
popa
xchg
lahf
test
and
add
lahf
xchg
and
mov
push
in
ret
cmp
jbe
clc
clc
data16
pop
jb
bound
pop
mov
lcall
sti
push
push
xchg
inc
cs
je
adc
jb
pusha
cmp
sbb
or
pop
sub
sarb
xchg
lret
or
sub
rcrl
push
dec
in
push
jno
dec
mov
arpl
sahf
jnp
xor
and
lea
xchg
or
pop
arpl
iret
xchg
push
sbbb
sahf
stos
addr16
hlt
lds
xor
mov
mov
test
loopne
loope
dec
push
jb
xchg
cmp
sahf
sbb
adc
popa
stos
mov
xor
cmp
push
fst
xor
repnz
lods
dec
nop
jecxz
icebp
xor
mov
test
stos
fisttpl
shll
clc
dec
dec
scas
mov
loopne
mov
xchg
mov
popf
test
pop
push
scas
orl
adc
in
add
xchg
dec
cmp
scas
hlt
or
cmp
cmp
lock
cmp
test
dec
push
and
out
jns
movsb
cmp
out
test
dec
adc
adc
mov
dec
pop
mov
movsl
out
std
mov
repz
dec
push
call
adc
or
test
cmc
out
inc
pop
test
cmp
sub
imul
jp
std
and
cmpsb
pop
cmpsl
xchg
in
imul
dec
mul
xchg
lods
outsl
in
cs
mov
jmp
push
in
stos
test
mov
sbb
sbb
mov
mov
fimuls
aas
cmpsb
cwtl
fmul
mov
and
mov
rol
cmpsl
adc
pop
push
push
add
inc
repz
sub
adc
vmread
into
rcll
mov
arpl
mov
sbb
or
xor
mov
data16
or
mov
jg
push
jb
dec
dec
push
mov
mov
jae
icebp
orb
lods
dec
loop
push
push
inc
outsb
inc
push
push
test
jecxz
xchg
lods
mov
popf
mov
mull
cmp
lret
roll
add
push
pushf
push
popa
stos
test
push
shlb
dec
pushf
test
bound
stos
fwait
std
jns
push
xchg
mov
sbb
mov
sti
ds
push
lcall
aaa
jl
cmpl
push
push
sbb
jge
popf
stos
iret
mov
into
addr16
mov
fsts
jb
push
rclb
dec
paddw
and
arpl
cmp
pop
push
push
xchg
dec
push
cli
sub
or
outsb
mov
sub
cmpl
mov
ret
push
gs
enter
mov
outsb
inc
cmp
adc
sbb
and
popa
ss
loopne
dec
inc
stos
daa
fcoms
jbe
push
lods
test
ja
and
insl
lret
sarb
xor
cltd
pusha
and
cltd
push
mov
outsl
movsl
cmp
hlt
and
in
popa
cmp
sbb
test
push
cld
int
out
xorl
arpl
out
mov
cli
add
pop
dec
cmp
jo
hlt
rclb
pop
or
sub
jp
adc
jg
pop
mov
push
lea
scas
mov
pop
stc
jg
jnp
ss
mov
adc
jl
sar
mov
int3
repnz
push
outsb
inc
jbe
xchg
sarl
push
mov
je
adcl
jno
push
mov
sbbl
pop
lcall
or
je
push
jno
pop
fwait
xchg
pop
loopne
mov
insl
repnz
push
dec
sub
jmp
mov
out
pop
inc
inc
popa
sub
lret
and
push
inc
out
or
or
or
lea
inc
ds
pop
cmp
lret
push
outsl
sahf
cltd
xchg
mov
call
stc
push
sahf
mov
fimull
jo
inc
shlb
lock
jmp
mov
in
fisubl
aad
cmpsb
mov
mov
stos
cmpsl
push
jno
add
popf
pop
lods
xlat
mov
jbe
rolb
call
inc
repz
pop
xchg
jno
pop
mov
loope
mov
add
movsl
jmp
and
pop
add
ja
pop
imull
cli
xor
add
rcrl
adc
sbb
aas
jge
test
cli
pop
push
cmp
in
mov
ret
cmpsb
pop
add
pop
inc
cmpsb
add
lcall
cmc
sahf
into
dec
negl
insl
pop
xchg
add
cmpsb
pop
into
repnz
mov
dec
scas
jp
cld
mov
icebp
stos
incb
pop
pop
stos
int
pop
sbb
sahf
pop
xor
xor
push
js
mov
sbb
aaa
sbb
int
push
ljmp
xor
jb
mov
mov
pop
mov
aaa
jecxz
pop
stos
mov
and
fldt
push
add
jg
enter
xor
je
cs
sub
cmp
pop
dec
pop
rcll
pop
aad
scas
mov
adc
push
adc
cmpsb
repnz
fldl
in
daa
aad
lea
cli
ja
in
add
adc
outsb
pop
es
sub
pop
mov
adc
lahf
inc
in
jno
adc
inc
inc
js
jbe
or
imul
sub
cmpb
push
out
aas
lods
pop
adc
mov
jl
cltd
sbb
add
cli
sahf
dec
ret
lcall
mul
leave
pop
aad
inc
rclb
std
push
pop
nop
push
stos
nop
add
loope
push
cld
pusha
dec
pop
dec
xchg
sbb
cmc
dec
in
jl
and
mov
rcrl
or
pop
inc
xor
mov
mov
idiv
fnstsw
jp
outsb
and
pop
sub
pop
sub
pop
dec
fsubrs
push
xor
ret
sahf
push
push
aam
mov
rcll
adc
cltd
stos
dec
mov
data16
jb
in
or
push
pop
push
mov
push
jae
bound
pop
add
ljmp
push
insb
andl
xchg
scas
xchg
push
sahf
xchg
cld
in
or
fldt
mov
xchg
cmp
cld
hlt
jb
aam
ds
arpl
lahf
adc
push
xchg
notb
aaa
push
add
cmp
lock
roll
jno
pusha
iret
jns
or
mov
cli
into
popa
xchg
xor
int3
cmp
cmp
scas
ja
xchg
cltd
or
arpl
sub
mov
sahf
bound
std
adc
mov
sti
mov
jp
popa
mov
repz
mov
mov
sub
cmp
out
pop
es
bound
inc
mov
dec
sti
jno
jle
bound
xchg
es
test
es
or
xorb
arpl
adc
psubw
insl
inc
xorl
xlat
movnti
mov
jnp
push
ret
or
mov
or
inc
scas
es
mov
dec
incb
fistps
or
jbe,pt
or
popa
sahf
mov
bound
xchg
lods
inc
fdivl
lcall
xor
cli
mov
cs
push
int
cmp
repnz
add
xchg
outsb
jg
jp
stos
mov
daa
aaa
sub
xchg
push
pop
push
inc
mov
add
lcall
rorl
mov
out
sbb
in
push
mov
cmp
es
daa
adc
dec
fwait
decb
sub
add
adc
xchg
push
mov
mov
je
mov
dec
adc
pop
sahf
jb
mov
xchg
xlat
sbb
push
adc
lcall
xchg
mov
orl
lcall
and
rclb
or
test
addr16
scas
insl
push
lret
test
sbb
sahf
inc
jle
push
sahf
push
cmc
jp
xchg
push
mov
rorb
aad
pop
movsb
jne
js
inc
sub
inc
mov
repz
add
sbb
in
dec
jns
and
out
das
scas
pop
push
popa
in
push
icebp
dec
jns
jg
and
inc
xlat
mov
test
xorb
inc
in
lods
out
jmp
cmp
in
xchg
push
repnz
push
push
lret
jo
imul
icebp
sahf
roll
cmpl
sbb
sahf
sub
imul
icebp
jecxz
fadd
xor
dec
loopne
dec
cmc
lea
xorb
lret
into
pop
pushf
and
xorb
pop
test
jo
fldcw
dec
cli
fldcw
xchg
insl
stos
push
cmp
add
data16
popf
ret
cli
loop
mov
push
out
mov
ficoml
aas
scas
jno
push
push
inc
push
out
mov
adc
xchg
mov
xor
in
pop
jle
cmpsb
lcall
imul
jmp
jmp
dec
mov
gs
push
xchg
mov
or
fldl
imul
lcall
imul
mov
dec
lcall
mov
push
outsb
lea
xchg
jno
insb
mov
xor
mov
loopne
test
sbb
or
pmullw
sub
insb
jb
rcrl
mov
notb
lret
or
dec
or
push
in
xorl
sbb
xchg
in
jp
insl
cltd
jg
jge
cmp
dec
cmp
mov
push
push
xchg
iret
clc
cmpb
mov
sahf
sub
mov
sub
mov
shl
mov
or
out
out
xchg
inc
loope
jecxz
and
das
xchg
shlb
test
call
rcrl
ret
lret
je
jno
fwait
out
xchg
mov
mov
bound
mov
fdivs
test
outsb
std
gs
pop
mov
mov
jb
pusha
mov
cmp
les
mov
mov
lods
mov
out
dec
aas
std
pop
outsb
movsl
rorl
pop
popf
mov
shlb
lcall
and
xlat
push
out
inc
cmp
jle
enter
and
and
sbb
inc
sti
pusha
mov
out
add
push
jge
test
inc
pop
adc
pushf
cmp
push
lods
imul
jno
clc
fisttps
sub
dec
pusha
stos
int
int3
mov
sub
cmpb
bnd
xor
call
xor
arpl
outsl
pushf
mov
js
rolb
sub
in
scas
mov
imul
paddb
outsl
int3
imul
cmpsl
rorl
jbe
out
xor
sub
pop
jo
test
inc
sbb
jmp
sbb
sarb
add
cmp
fcoms
pop
test
fdiv
cmc
insb
test
cli
fmuls
outsb
jno
je
popa
jb
jle
pop
enter
sbb
lds
jno
jno
mov
test
and
mov
xor
push
jb
mov
mov
test
mov
cmpsb
enter
imul
mov
jb
xchg
mov
cmc
repnz
adc
insb
xchg
pop
lret
and
jb
test
daa
test
das
stos
enter
xor
cmpsl
jecxz
mov
push
das
mov
clc
in
xchg
jae
mov
cs
mov
sahf
mov
std
pop
stos
mov
out
jae
xchg
mov
adc
cmpsl
aaa
jae
jl
ret
mov
mov
enter
fdivs
jae
jbe
insl
pop
test
test
pusha
mov
mov
push
aam
hlt
je
outsb
adc
int
xor
fs
loopne
data16
popf
cmp
pop
insl
rolb
dec
pop
je
fcmove
fcomps
test
jbe
push
sti
jno
xlat
jno
jbe
dec
std
adc
js
dec
shr
dec
xor
xchg
inc
std
adc
cli
outsl
lods
cli
mov
lret
jb
mov
inc
inc
repnz
jno
js
adc
rol
js
cli
sub
jb
loopne
pop
add
shlb
insl
shlb
mov
fdivs
jns
sbb
adc
js
push
mov
mov
lret
jp
push
rcrb
mov
lret
jb
mov
or
mov
sarb
pop
je
stos
aam
jno
jnp
cli
sti
push
adc
pop
hlt
and
xor
mov
or
or
not
aad
loope
jl
cli
ljmp
cmp
fwait
cmp
loop
and
fcomps
test
mov
imul
cmp
sahf
fisubrl
fcomps
add
mov
sahf
xchg
inc
jno
jle
bound
mov
int
or
rclb
das
jmp
sub
aas
lcall
sub
mov
ret
inc
adc
xor
pop
inc
sti
jo
sbbl
mov
sahf
jg
jb
or
mov
or
mov
jb
xchg
xchg
sti
repnz
aad
sbbb
and
mov
jno
and
xchg
jbe
mov
icebp
call
fiadds
mov
mov
outsl
or
push
push
subl
je
xorl
loopne
dec
in
dec
mov
out
insb
sub
fbld
sbb
mov
cmovae
repnz
mov
mov
mov
fidivs
pop
or
inc
repz
mov
js
mov
mov
fdivrs
lret
xor
mov
add
jb
imul
xchg
and
jl
call
pop
push
bound
stc
inc
jp
subl
xchg
pop
lahf
mov
in
pop
mov
mov
lret
push
inc
imul
cmp
inc
jp
or
jge
ret
jg
jl
sti
in
pop
mov
pop
std
lcall
jnp
sarb
jns
mov
aam
pop
jl
mov
mov
ret
xchg
cmp
push
adc
jecxz
scas
add
cvtps2pd
or
fildll
dec
add
mov
cs
push
cmpb
mov
push
or
mov
push
adc
repnz
ss
jns
stc
or
jb
icebp
mov
jl
es
lods
xchg
push
mulb
jle
dec
andl
les
decl
pop
cmc
jg
popa
scas
subb
push
xor
rolb
mov
sub
jne
and
push
ljmp
ljmp
std
xchg
push
nop
and
sbb
sub
aad
pusha
lcall
mov
fistpll
cvtpi2ps
mov
out
pop
in
andb
mov
inc
or
xor
rcl
popa
jo
jl
ds
xchg
clc
test
push
ja
adc
cmovp
out
cmp
popa
popf
mov
jno
stc
outsl
nop
adc
push
xor
lret
xor
das
lcall
stc
inc
adc
dec
xor
fcoml
mov
jle
add
cvtdq2ps
sub
cli
cli
jne
pop
aam
jl
xchg
sbb
xorl
mov
fbstp
je
movsl
in
cmp
loopne
inc
jmp
push
pop
xchg
mov
cmp
sahf
mov
push
cmp
inc
jl
xor
lock
js
xchg
fs
cmc
jae
andl
cmp
mov
inc
jae
mov
js
jp
mov
movsl
sbb
cs
push
mov
jo
sub
push
outsb
insl
mov
push
cwtl
sub
fidivs
xor
psubsb
popf
cmp
inc
pop
adc
add
push
js
cld
xchg
jl
jp
sbbb
lahf
mulb
and
cmp
push
lds
ss
data16
xor
inc
ficompl
mov
inc
or
xor
cmp
jnp
inc
jo
mov
data16
out
repnz
sub
xor
out
xor
aam
mov
sbb
lods
pop
lcall
orps
je
sub
stc
mov
mov
sbb
push
ret
push
ficompl
into
add
mov
sbb
sbb
mov
xor
cmp
jle
and
leave
daa
scas
pop
dec
cli
pushf
scas
fsubrp
shlb
jbe
pushl
sub
mov
xchg
scas
jb
in
xlat
jle
test
enter
xlat
fiadds
scas
scas
loopne
daa
sub
sbb
mov
inc
xor
sub
pop
mov
push
pop
jp
jae
xchg
scas
inc
mov
cmp
adc
int
fs
jne
das
jb
mov
cmp
repz
pop
lcall
pop
jne
push
jg
ret
add
subl
stc
insl
push
lcall
in
stos
js
add
and
fstps
mov
stc
xor
and
and
push
pop
mov
loop
cltd
cmp
jbe
inc
jp
rol
pop
mov
and
cmp
push
nop
push
outsb
pusha
jnp
loope
add
jne
pushw
outsb
mov
pop
sbb
nop
mov
lahf
xchg
lret
mov
inc
pop
jne
push
and
push
jo
sub
ret
hlt
jge
dec
mov
dec
rclb
stc
mov
lods
inc
pop
pop
bound
xor
mov
ja
imul
subl
jo
test
fwait
mov
xor
outsb
outsl
outsb
mov
sbb
add
inc
les
inc
and
enter
lods
jg
lcall
and
mov
mov
decl
or
inc
shlb
push
sti
cmp
pop
inc
roll
loop
add
andb
jge
jg
ds
jmp
or
in
mov
inc
div
inc
xor
mov
jp
ficoml
push
jnp
jge
adc
data16
xor
test
in
or
bound
inc
ja
jbe
sti
jg
ss
icebp
jnp
push
mov
mov
dec
cmpsl
cmp
cmp
mov
push
xor
ljmp
push
pop
push
add
jl
stc
ret
push
xchg
jg
lcall
outsb
stc
jp
stos
test
dec
notl
mov
push
jo
out
and
pushw
bound
jae
hlt
loop
rolb
popa
jo
and
scas
jae
mov
adc
sub
out
xor
bnd
sub
pop
outsb
aad
jge
push
test
mov
xor
mov
mov
fmull
jno
popa
das
push
cli
and
inc
jns
imul
popa
movl
subl
jno
push
push
ror
sbb
inc
stc
clc
test
shlb
mov
xchg
fistps
jp
jmp
push
loope
repnz
mov
int
lret
push
push
sub
jne
mov
jns
mov
and
jg
jae
mov
shll
or
mov
push
xor
ficoms
in
and
ljmp
jbe
or
mov
jle
mov
sti
js
clc
cmp
add
inc
shll
xchg
adc
testb
sarb
in
inc
xor
cmp
cs
push
clc
bound
jb
jne
in
adc
push
cli
loope
jbe
es
inc
xchg
pop
jno
push
add
mov
dec
dec
jno
lock
inc
xorw
and
test
insb
mov
cmpl
jb
jns
fcmove
clc
in
loop
bound
pop
cmp
xlat
jns
sub
sub
jp
fwait
cmp
jno
xor
sar
inc
jl
inc
jno
pusha
prefetchnta
mov
outsb
jno
xchg
ds
pop
inc
je
mov
xor
sbb
pop
mov
add
xor
call
dec
cmp
bnd
push
fldl
sbb
cmpsb
pop
sbb
in
dec
in
test
daa
adc
push
inc
push
adc
ss
jl
jl
stc
cmpsl
and
fs
insb
cmp
fdivl
in
push
leave
mov
push
cli
push
mov
sub
popa
cs
sbb
mov
insl
sub
out
shrl
cs
xor
enter
mov
loop
outsb
stc
and
add
add
in
jo
sbb
div
pusha
pop
loop
es
adc
jecxz
jmp
es
divb
jle
loop
sbbb
outsb
out
sub
xor
cli
xor
insb
mov
jl
clc
lret
addr16
lods
addr16
stos
bound
insb
inc
jb
jo
sub
out
cmp
imul
and
cli
ret
jge
cmp
stc
loope
and
js
or
orl
and
pop
jle
out
and
xor
pop
inc
out
psubsb
xorl
lock
aas
stc
cmp
jl
ret
cmp
inc
adc
dec
mov
insb
jb,pn
cs
push
inc
loopne
cmp
dec
stc
jae
jae
call
sub
push
popf
shlb
imul
jns
sub
xor
dec
push
or
adc
jne
xchg
push
sbbb
adc
leave
cs
inc
mov
lcall
outsl
cmc
mov
add
xchg
inc
push
popa
inc
punpckldq
jns
loope
imul
adc
push
jp
mov
insl
outsb
xchg
mov
mov
pop
pop
inc
clc
jb
shlb
jmp
add
cwtl
or
inc
xchg
clc
xor
push
pushf
inc
add
pop
push
jne
sbb
clc
inc
push
lret
mov
push
cli
fdivrs
addl
inc
jno
and
sbb
mov
cmp
repz
lret
idivl
lea
sbb
mov
mov
jae
popa
cmp
jo
scas
je
mov
dec
mov
mov
ret
sbb
icebp
pop
cs
lock
mov
sub
out
adc
and
sbb
clc
clc
stos
cli
cmp
inc
jns
sub
imul
push
repnz
jl
sbb
pop
pop
jg
or
imul
add
push
jp
sub
mov
push
cmpl
gs
mov
and
lds
push
fsubp
jge
jno
inc
push
mov
xor
in
push
outsl
mov
bound
mov
fisubl
loop
std
mov
jae
fisubrl
dec
xchg
push
out
mov
jl
cltd
lds
inc
idivl
xchg
mov
scas
lods
cld
aad
jns
push
mov
ret
bound
mov
sbb
movsl
push
lods
bound
mov
out
aad
and
dec
mov
jno,pn
clc
aaa
mov
dec
aas
push
dec
push
jae
out
add
les
dec
movsl
test
negb
xchg
add
sub
cmp
mov
push
push
add
out
test
bnd
mov
adc
jp
or
mov
lea
daa
jo
test
shl
and
insb
jb
pop
cs
daa
out
cmpsb
sbb
and
add
add
mov
pop
adc
push
int3
inc
pcmpgtw
xchg
sub
ds
jle
sarl
stc
push
xchg
cmp
sub
push
orl
adc
sbb
test
int3
jecxz
rcll
cmc
jne
mov
notl
popa
pop
and
out
push
and
pop
inc
or
or
xchg
jmp
mov
cmpl
pop
bound
lcall
push
jge
pusha
jae
inc
mov
jae
push
bound
daa
lret
and
xor
lret
mov
cmp
pop
cmp
push
insb
adc
push
fsubl
cli
ja
outsl
mov
jb
dec
cmp
repz
sarb
add
add
mov
pop
movsl
test
fs
fs
ljmp
mov
insl
xchg
jge
xchg
pop
jle
add
clc
fidivs
mov
lret
xchg
icebp
rcrb
dec
aad
mov
push
xor
xor
rolb
pop
push
pop
lcall
ds
add
jbe
mov
and
and
mov
ljmp
add
cmc
lcall
in
jns
cmp
xchg
push
mov
bound
inc
jg
stc
cmpb
cmp
jge
and
jl
xchg
jo
jae
dec
cmpb
add
jg
jnp
mov
mov
test
xchg
in
jns
jle
inc
cmc
sub
mov
xor
and
cmp
insb
minps
arpl
hlt
mov
jnp
mov
xchg
sbb
cmpsl
sub
push
mov
inc
imul
push
js
das
orps
cmp
lock
mov
insb
jns
add
xchg
mov
adc
pop
stos
pop
insl
pop
push
icebp
jnp
xchg
subl
lods
mov
add
daa
sbb
lcall
ss
mov
push
adc
add
ss
cmc
dec
cmp
std
xchg
loopne
sub
in
movsl
cmp
jns
jle
or
cmpxchg
mov
jecxz
lods
xchg
jl
bound
outsl
out
popa
jne
jbe
clc
lods
or
jno
inc
ds
xchg
ljmp
cli
cmpb
mov
fwait
imul
fwait
push
dec
and
pop
cmc
adc
cmp
repz
sahf
pusha
cmc
mov
mov
ud1
mov
inc
mov
pusha
imul
push
or
pop
and
ss
pop
call
sub
imul
sub
and
push
add
pop
push
dec
pop
inc
bound
ret
mov
push
imul
jecxz
bound
shlb
rcrl
xchg
js
cmp
xchg
shr
insl
pushl
lret
lret
stos
add
jae
hlt
cli
leave
inc
xchg
lahf
outsl
xchg
pop
and
fsubrl
xor
jle
mov
sti
orl
jmp
nop
xchg
in
pop
shl
sub
xor
xchg
jno
cwtl
cmp
stc
daa
aas
cmp
add
push
fcos
test
jo
mov
stc
pop
and
pop
mov
pop
mov
xchg
sub
test
divb
xor
arpl
sub
cmp
mov
or
out
pop
sub
outsl
cmc
or
loopne
sub
stc
adc
inc
es
mov
mov
bound
jle
jns
mov
and
data16
pop
std
cld
push
sar
dec
cmp
mov
in
nop
xor
dec
pop
call
jg
jno
sbb
subl
xchg
pop
sahf
pop
cmpsl
mov
xor
std
inc
xor
jb
push
cli
data16
pop
enter
mov
movsb
xchg
mov
push
push
rclb
push
xchg
xor
dec
xchg
push
lcall
fdivr
js
jne
inc
cmpsb
imul
inc
out
jns
mov
pop
movsb
fmulp
lock
xor
cmpsl
pop
and
inc
jae
cltd
and
stos
inc
pop
das
sub
xchg
lret
mov
lret
aaa
pop
or
mov
cmp
std
pop
cmc
adc
lcall
push
sbb
not
jp
xchg
inc
mov
pop
push
jae
arpl
dec
push
repnz
cmp
pop
pusha
mov
inc
jg
pop
push
cmp
jae
aas
inc
nop
rolb
inc
add
mov
int3
push
scas
push
mov
pop
inc
pop
sarb
rcll
pop
cmp
call
inc
call
xor
cwtl
lahf
lcall
loop
data16
out
rcll
outsb
fidivl
idivb
add
mov
imul
sub
cmp
fstpl
das
mov
and
xor
ds
and
xchg
jbe
dec
fs
and
aaa
cmc
cmp
dec
dec
fisubrs
lods
push
jg
xor
loope
push
rorl
jle
inc
cmc
adc
stos
pop
std
jg
in
fdivrs
cli
aaa
add
push
sub
pop
das
fs
pop
sub
outsb
jnp
add
loope
dec
sub
add
or
mov
mov
jo
rclb
xchg
pop
mov
lret
inc
lcall
jne
dec
push
popa
cs
push
fldl2t
or
xchg
cmc
add
sti
mov
mov
jp
fdivp
push
push
ret
jmp
popf
dec
pop
cld
pop
insb
shlb
xor
ds
xchg
clc
test
push
jp
pop
adc
lret
je
out
nop
add
stc
sbb
push
in
xor
sub
sub
mov
jb
xchg
xor
pop
push
pop
rcll
xor
fs
subl
mov
add
stos
mov
jo
bound
sub
clc
and
jo
sub
icebp
sbb
gs
in
fisubl
cmp
sbb
pop
test
loopne
xor
rolb
or
mov
xor
adc
cmp
insl
pop
movsl
aad
icebp
aaa
push
stos
jb
out
mov
mov
out
jle
xchg
jns
testb
add
shll
insb
nop
roll
mov
mov
orb
out
mov
add
bound
add
jne
add
ret
adc
mov
std
lcall
sbb
sub
jno
fsts
inc
mov
popa
mov
cltd
or
push
sarl
xchg
and
clc
es
jbe
jp
jle
jb
insl
xchg
pop
xor
inc
cmp
jl
das
subl
push
dec
stos
out
loop
fmull
pusha
or
insb
mov
sbbl
jb
outsl
imull
dec
ret
cmp
stc
daa
popa
pop
das
js
stc
push
outsb
icebp
cmp
int3
cmp
outsb
lret
push
mov
push
dec
inc
popa
jmp
mov
mov
sbb
out
inc
popf
loop
sub
or
imulb
push
sub
and
push
pop
dec
addr16
sbb
push
cmc
subb
and
sub
lea
cmp
icebp
imul
mov
fistl
loope
jb
call
xchg
pop
call
in
push
das
sbb
inc
and
cs
stc
push
ds
insb
xor
push
mov
or
sub
fidivrl
imul
push
and
cmp
sub
mov
mov
sbb
hlt
lock
test
mov
or
stc
cmp
jno
sub
push
add
mov
jmp
xor
aaa
data16
pop
xor
clc
pop
cmp
xor
popf
out
cmp
xor
in
aam
xchg
push
sbb
loop,pn
stos
out
adc
jns
sbb
jmp
xchg
cmc
jp
imul
mov
jle
jno
pusha
es
push
call
jp
ret
jle
insl
popa
xlat
cli
mov
mov
shlb
jg
adc
sub
xor
cmpb
sbb
dec
aaa
int3
mov
sbbb
ss
inc
nop
call
outsb
int3
xchg
add
jl
pop
gs
dec
xor
cmc
or
mov
lcall
jb
mov
in
lcall
adc
mov
pop
sub
jne
xchg
out
jmp
daa
pop
movsl
std
jo
add
rcrl
bound
xor
push
stc
pop
add
sahf
dec
mov
xchg
gs
imul
xorb
sahf
mov
mov
xchg
sahf
adc
shrb
dec
shrl
ds
in
jb
cli
mov
outsl
cmp
xor
jnp
push
fwait
mov
pop
sysexit
xor
push
pop
inc
mov
jb
xchg
loope
or
iret
xor
popf
xor
je
je
js
mov
inc
xchg
push
jnp
mov
mov
and
pop
in
pusha
jbe
jp
call
mov
mov
popf
adc
jno
lock
bound
push
icebp
ds
cli
cmp
insb
pop
scas
mov
popa
mov
lcall
enter
inc
sbb
mov
das
add
lock
mov
aam
in
ds
fistps
in
xor
iret
inc
test
idiv
jb
xchg
cmp
popa
sbb
insb
mov
add
add
lcall
inc
sub
lret
xor
std
or
je
jae
inc
cmc
xor
mov
imul
mov
and
ret
sbb
fs
into
push
fmuls
mov
or
out
sub
loop
shl
mov
imul
fwait
roll
lahf
jns
mov
insb
push
jae
mov
ja
and
ljmp
xchg
push
aas
imul
push
aaa
and
fidivrs
add
cmp
arpl
fldenv
mov
pop
jp
and
arpl
gs
std
repnz
lret
sub
or
mov
lock
mov
jp
ja
dec
xorb
pop
mov
int3
cmp
pop
sbb
lods
shlb
xor
inc
pop
inc
pop
test
sbb
jle
addb
push
xchg
or
xchg
xchg
jbe
les
push
jge
subl
jbe
mov
fbstp
outsb
jp
cmp
mov
leave
mov
add
dec
mov
decl
test
mov
outsl
sbbl
ds
andl
push
jle
outsb
dec
jp
inc
jle
icebp
mov
push
jbe
add
jb
xchg
cmp
js
inc
jge
push
or
hlt
push
mov
xchg
lcall
jnp
push
pop
rorb
push
push
jbe
cmc
sbb
xchg
mov
push
xchg
mov
pop
les
ret
cs
mov
outsb
xor
lds
fisubrl
cmpsl
cltd
inc
xor
add
cwtl
imul
push
mov
outsl
add
add
xor
loope
cmp
and
mov
das
je
cmp
sbb
dec
sub
dec
mov
int
dec
rorb
cs
pop
jne
outsb
jns
mov
sbb
and
jne
inc
sbb
jo
iret
jne
pop
adc
js
lret
outsl
cmp
dec
in
aas
mov
inc
lcall
or
jp
or
inc
insb
lret
addr16
mov
jnp
push
lret
fisubs
jnp
jle
push
lret
xor
jo
xchg
sbb
stos
addr16
faddl
dec
fidivrl
pop
jle
insb
xor
add
or
mov
ds
test
pop
jb
in
jb
mov
pop
movsb
stos
fldcw
dec
mov
mov
loopne
stc
jp
sarb
insl
inc
outsl
js
cltd
rcll
addr16
push
call
sbb
loop
mov
xor
add
or
adc
lods
ds
negl
cmp
es
push
push
cmp
push
sub
pop
push
fdivrl
sbb
cwtl
or
ljmp
cltd
pusha
lds
sahf
and
int
xchg
xor
push
out
inc
adc
pop
xchg
movsb
inc
shl
mov
popl
jl
and
and
cmp
inc
mov
jnp
clc
sbb
imul
cwtl
ret
pop
cltd
lds
dec
int
mov
and
jl
in
mov
int
mov
cmovno
inc
add
jmp
imul
jge
xchg
and
sub
fs
dec
fimull
cmp
mov
sbb
je
iret
imul
jo
adc
dec
xor
sub
sub
enter
sub
sbb
cmp
mov
push
jbe
adc
jl
add
fnsave
mov
imul
pop
ret
cmp
jmp
xchg
sub
mov
mov
push
insl
insl
cld
mov
or
test
dec
jns
jg
push
idivl
leave
shlb
jbe
cmp
and
loop
cwtl
out
imul
dec
gs
inc
jbe
stos
and
lret
jp
xchg
xor
pop
jnp
sub
mov
jbe
push
xchg
mov
scas
adc
test
sub
popf
arpl
bound
loop
sahf
jo
add
out
mov
inc
xor
in
jb
in
ja
mov
inc
mov
mov
movsb
cmpl
mov
mov
mov
inc
test
ja
lcall
out
xchg
xor
jmp
adc
testb
jmp
mov
popa
pushf
imull
icebp
push
cmp
cmc
cmovl
arpl
push
push
fimuls
dec
jbe
lret
mov
outsb
xor
xchg
sbb
insb
les
push
pushl
fcoms
andb
fisubrl
fsubrs
sti
sub
cltd
inc
lcall
xchg
idivb
mov
lcall
mov
je
mov
shlb
shr
jo
jge
xor
popf
fs
xchg
adc
icebp
mov
insb
mov
addr16
mov
pop
jb
mov
cmp
ret
pop
sub
adc
pop
jb
add
sti
fwait
and
xchg
xchg
sbb
jle
push
jns
dec
and
sub
mov
scas
in
inc
cs
push
jbe
pop
outsl
ja
ljmp
pop
ret
jb
jp
pushf
call
jbe
jbe
jmp
lock
outsl
jp
mov
insl
divb
sub
cli
mov
ljmp
hlt
xchg
cmp
cltd
push
add
or
in
out
les
mov
scas
jp
mov
clc
inc
stos
or
addl
cmpsb
mov
out
dec
jl
scas
in
pop
outsb
and
mov
add
pop
pop
mov
das
movsb
in
jge
inc
stos
lods
jno
push
and
lcall
xchg
jb
cmp
mov
or
sub
icebp
loope
lcall
rcrl
inc
scas
pop
mov
rorb
imul
out
shll
test
clc
rorl
mov
ds
loop
sbbl
jo
jg
mov
dec
jl
in
jns
insl
std
xor
add
add
mov
loopne
mov
cmpsb
fisttpll
xor
stos
aas
out
cmp
xor
inc
jle
rorb
imul
insb
push
jno
mov
addb
cltd
das
adc
fwait
jge
cmp
adcl
push
dec
push
mov
je
lcall
mov
lret
mov
add
xchg
emms
imull
jno
jg
fisttpll
bound
int
dec
aas
xchg
pusha
stos
mov
icebp
mov
xor
jns
xchg
push
mov
pusha
out
lods
or
xchg
ret
adc
cltd
fdivl
subl
adc
mov
repz
add
mov
cmp
or
sub
imul
lret
push
fidivrs
sub
adcl
inc
xchg
pop
fisttps
xor
imul
addb
dec
cli
xor
sub
bound
xchg
sub
jno
dec
jb
add
jnp
pop
cltd
cmp
xor
in
mov
cmp
xor
or
cmovp
adcb
pop
sarl
xor
jbe
stc
sub
leave
fiadds
cmpb
test
xor
faddl
cltd
in
lock
lods
jecxz
pop
jno
inc
cmp
jge
sub
imul
mov
cmp
dec
icebp
insb
jb
xor
inc
inc
dec
imulb
mov
xor
add
std
jo
push
decl
pop
cmp
cld
daa
imul
fbstp
ljmp
imul
test
fiaddl
inc
das
mov
insb
outsb
jno
dec
cmc
pop
lcall
xchg
or
jns
ja
jae
stc
adc
dec
push
popa
push
dec
hlt
sub
cmp
xchg
lea
rorb
out
fs
inc
add
popa
adc
js
and
add
outsb
mov
loopne
jge
lret
xchg
popa
adc
jle
into
mov
ljmp
repz
push
jb
cld
inc
add
sbb
sbb
aas
repnz
xchg
push
jbe
inc
jne
inc
jbe
stc
adc
mov
pop
lock
scas
dec
popf
cmp
and
xchg
push
xchg
pop
jno
stc
fiadds
push
stc
repnz
imul
inc
js
dec
fmull
xchg
jbe
sbb
xor
arpl
and
xor
xchg
lahf
mov
lods
push
sub
pop
ss
ja
jno
xlat
cmc
pop
out
mov
rorb
shl
mov
jg
push
inc
imul
call
sub
push
xor
imull
jp
jne
jns
sbb
jp
push
pop
add
iret
cmp
jbe
mov
divps
ret
aam
or
fstps
fidivs
mov
das
cmp
cmp
pusha
fistpl
stc
imul
stc
pop
bound
pusha
stc
into
sub
push
call
mov
out
mov
in
cmp
mov
outsl
jp
jns,pt
cli
xchg
adc
inc
jb
lea
inc
jg
mov
popa
inc
jnp
bound
js
jb
add
jle
inc
xchg
jp
inc
jge
xchg
jns
fsubl
jae
loop
sar
xchg
repnz
into
mov
inc
pop
loopne
jg
adc
mov
xor
sub
xor
mov
add
cld
mov
mov
jns
lcall
outsl
les
std
jl
mov
dec
inc
cld
in
push
pop
xchg
pop
hlt
lahf
jp
mov
fiaddl
pop
xor
jecxz
rorb
sub
in
ja,pn
mov
jge
and
cmp
cs
lock
or
xchg
jne
add
jo
pop
jns
jge
push
jl
int3
adc
pop
test
fisttpll
sub
std
fwait
enter
iret
push
popf
shrb
adc
lcall
push
mov
add
mov
rol
adc
push
pop
lea
pop
mov
jl
and
mov
push
aaa
mov
enter
daa
decl
push
push
loope
mov
movsl
inc
mov
shlb
push
add
or
dec
ja
push
inc
sbb
add
sbb
push
cli
aas
sub
insl
insl
inc
int
das
sub
add
cli
jp
dec
jae
ds
inc
sbb
testb
inc
inc
in
lcall
fbstp
ss
cmc
das
aam
fidivrs
jg
jl
inc
mov
insb
sub
jl
sub
ret
in
orl
das
ret
inc
mov
std
xchg
movsl
test
test
and
rol
and
mov
mov
jnp
sbb
push
insl
cmp
or
push
inc
inc
adc
shll
jnp
cmpsb
jb
mov
jbe
mov
push
test
js
push
dec
add
mov
int
sub
int
sub
dec
and
mov
popa
xor
nop
std
icebp
or
idiv
jb
adc
cltd
or
or
hlt
aaa
iret
data16
jp
jecxz
sbb
testl
cmp
or
pop
iret
fs
mov
sub
and
jbe
sbb
mov
aas
stc
add
outsb
fsubs
mov
fadds
fistpl
inc
test
adc
cmp
mov
push
lcall
mov
lcall
jg
rorl
std
cmovno
cmpl
and
outsl
pop
mov
das
ljmp
orl
xorb
decl
outsb
jp
sbb
or
dec
sti
inc
sbb
dec
je
jecxz
xor
push
mov
das
clc
or
inc
pop
inc
daa
dec
push
cmpl
adc
jle
and
dec
xchg
cmc
xor
adc
bound
mov
fmulp
repz
jb
add
push
jp
inc
shrl
cmp
stos
rorl
mov
pushl
inc
push
fisubl
add
jle
mov
lcall
pop
stc
push
addr16
cmp
sub
jb
ss
ret
inc
loopne
out
inc
mov
pop
mov
xor
cmc
xor
mov
jne
sbb
cmp
loop
xor
cmp
dec
push
std
cmpsl
and
outsb
add
loop
in
out
push
add
loop
and
std
push
mov
fst
jae
push
rcl
lcall
pop
mov
test
les
jp
jl
das
and
iret
outsb
out
xor
loope
out
bound
jne
sub
mov
xchg
pusha
testl
js
call
xlat
popa
or
mov
xchg
jecxz
outsb
xor
dec
mov
sub
pop
rcr
outsb
inc
or
cmpl
push
mov
mov
aas
es
scas
fsubrs
sbb
nop
hlt
push
lcall
aas
xchg
jae
pop
lret
shlb
sahf
mov
pusha
xor
sti
or
jb
cmp
and
fidivs
mov
bound
imul
push
aad
stos
fisttps
sub
inc
cli
and
mov
sub
lcall
sbb
ret
addr16
outsl
push
jnp
jb
mov
xor
test
pop
and
mov
jl
add
cwtl
add
dec
add
mov
mov
cltd
cmp
mov
clc
pop
mov
inc
inc
fidivs
sub
add
pop
inc
mov
loop
outsb
push
jns
and
push
ss
xor
cwtl
mov
movsb
push
push
jno
ds
enter
mov
jg
pop
bound
jl
imulb
es
jg
push
jb
pop
lods
push
subb
ss
pop
push
cmp
insb
rorb
fisubrs
sbb
ss
lcall
jmp
jle
inc
gs
popa
fmuls
sub
jg
jg
mov
pop
hlt
outsb
sbb
pushf
inc
mov
pop
sbb
into
xor
sub
int3
in
faddp
lahf
cmp
sti
cmc
lret
jge
popa
lcall
sub
cltd
in
testl
or
add
jg
mov
jnp
ss
push
jp
push
ret
sub
cmp
mov
jle
fs
push
push
std
adc
rclb
cmc
pop
inc
cmc
out
push
dec
cmp
xchg
sbb
jle
jmp
mov
jg
jbe
icebp
sbb
lock
sbb
repnz
and
sbb
sbb
loopne
sub
xchg
mov
bound
pop
pushf
cltd
cwtl
pop
push
fldl
mov
add
insl
mov
push
xchg
cmp
jp
lcall
outsl
sysexit
les
inc
sbb
dec
push
and
mov
mov
insb
inc
add
imul
bound
test
push
jo
sahf
mov
ficompl
and
push
fimull
je
push
dec
xor
jb
push
mov
ret
cmp
into
inc
leave
xor
xor
jg
xchg
push
daa
nopl
jp
mov
add
rcrl
and
xor
pop
dec
sub
push
add
push
jnp
and
aaa
xchg
push
jbe
push
jp
insb
nop
shrl
jns
inc
jl
stc
push
or
cmpsl
inc
jbe
rolb
lods
cmp
and
or
ret
stos
mov
shrb
adc
fsubrs
dec
and
cmp
addl
push
mov
cli
jo
xorl
lods
cld
sbb
and
call
or
hlt
jne
mov
ss
lret
sub
clc
idivl
outsb
cmp
inc
aas
xor
mov
xor
mov
imul
mov
lahf
xchg
sbb
dec
or
jbe
idivb
cmpsb
mov
popa
pop
push
pop
add
cmc
add
imul
das
std
push
sub
cmpl
std
sbb
ret
dec
ds
fiadds
adcl
stc
sbb
push
push
into
pusha
inc
imul
test
pop
dec
adc
int
sahf
out
xchg
imul
ljmp
rolb
aas
push
pop
pop
add
ljmp
sub
cmp
repnz
stc
scas
push
push
mov
mov
push
cmp
das
and
pop
inc
cmp
test
inc
je
push
fldl
and
das
mov
mov
nop
daa
loop,pt
xchg
lret
std
add
cli
jne
shrb
push
inc
in
xchg
popa
jl
leave
jae
pop
cmc
pop
cs
xor
fnsave
mov
ja
mov
cmp
pop
jg
mov
repz
out
cmp
and
xchg
mov
inc
mov
shr
and
sbb
aaa
rcr
pop
sbb
ja
mov
sbb
call
xor
sarl
subl
xor
inc
es
jl
rcrl
in
or
dec
cli
cmpl
mov
pop
adc
insb
icebp
sub
jle
pop
cmp
push
icebp
popl
ss
cli
add
push
xor
jecxz
shll
daa
sti
fstps
out
lret
aas
mov
fisubl
outsb
pop
inc
cli
mov
inc
add
jns
dec
subl
cmp
jecxz
je
mov
push
mov
mov
pop
pop
stos
cmp
mov
sti
fnstcw
stos
inc
cmc
xor
test
inc
addl
xchg
ficoml
mov
ds
lret
and
fbstp
push
lcall
enter
stc
mov
outsb
stc
data16
cmp
popa
or
mov
add
int3
sub
cmp
inc
enter
add
jo
mov
sub
xor
cli
pop
and
mov
mov
dec
add
xor
stc
adc
scas
and
lods
add
cli
jmp
leave
mov
clc
sub
adc
clc
and
or
push
int
mov
jns
popa
and
jle
bound
jne
divl
push
data16
ds
pop
shlb
lock
inc
add
fwait
pusha
pusha
jmp
test
sbb
stc
jno
fimuls
fnsave
mov
jmp
mov
insb
jge
jb
jb
jnp
mov
pop
inc
cli
push
xor
sub
sbb
mov
rclb
mov
or
jb
mov
into
aaa
mov
jne
or
ja
je
repz
cmpsl
pop
popa
lcall
aaa
lahf
xor
clc
jnp
mov
sub
mov
push
pushf
cmp
lret
mov
outsl
out
out
shlb
jbe
insl
jb
outsb
outsl
xchg
jae
bound
jl
es
das
push
mov
sbb
test
xor
dec
jns
lods
cli
pop
sti
pop
xlat
jbe
sbb
gs
cli
and
data16
shll
sub
xor
adc
sbb
or
pushf
stos
push
and
cmpsl
jmp
or
inc
data16
rcl
jne
mov
bound
nop
pop
out
repz
cltd
xchg
popa
dec
push
mov
cmp
outsb
sahf
test
inc
sbb
pop
sub
adc
pusha
sbb
add
adcl
repz
push
lea
and
pushf
jg
out
js
push
pop
fstpt
loop
stos
in
mov
dec
data16
insl
loop
outsl
data16
xchg
cs
mov
into
andb
lret
pop
iret
addr16
xchg
mov
cmp
pop
int3
inc
aam
lcall
fs
dec
inc
mov
and
push
insb
in
sub
test
xor
and
pop
fisttpl
push
aaa
cmpsb
and
addr16
into
mov
pop
jnp
pop
jne
lods
and
and
ds
inc
sbb
jnp
mov
cld
fimull
jo
mov
and
push
js
ds
mov
clc
dec
cld
je
repnz
push
dec
push
ljmp
xchg
push
pop
ja
scas
sarl
xor
dec
ss
xchg
outsb
jb,pn
mov
pop
jne
mov
pop
jp
stc
aad
lahf
inc
pop
fildll
ss
aad
test
stos
cmp
imul
pop
jns
fistl
pop
sub
lahf
pop
and
inc
lcall
fldl
sbb
inc
mov
inc
mov
pop
clc
and
cmp
rolb
loop
sub
dec
cmc
xchg
push
xchg
mov
adc
js
inc
int3
insl
and
mov
or
cli
data16
cmc
int3
lret
imul
lret
push
fidivrs
sbb
je
adc
cmp
sbb
mov
pop
lcall
stos
xor
xor
icebp
add
dec
stc
subb
js
out
push
push
mov
pop
push
sbb
cmp
loope
notl
mov
test
xchg
xchg
fldl
mov
push
mov
jmp
shlb
push
stc
jo
mov
adc
and
pop
sub
sub
push
push
mov
hlt
cmp
daa
es
xor
and
jle
icebp
ljmp
lock
loope
stos
mov
mov
xor
stc
mov
jns
xor
cli
pop
and
mov
sbbb
jo
jge
mov
add
clc
popf
roll
call
andl
mov
pusha
aas
jge
out
fidivl
ds
mov
in
or
cmpsl
ret
xor
test
xor
adc
mov
ror
pop
inc
ret
cli
leave
iret
jp
jns
mov
cmp
mov
pop
mov
xchg
add
mov
in
add
repnz
inc
rdmsr
loopne
cmp
stos
loopne
insb
xor
xor
out
push
jp
imul
adc
icebp
ds
mov
inc
mov
push
dec
rclb
into
iret
inc
adc
cmc
jns
xor
pop
pop
mov
xor
lcall
jb
dec
add
les
mov
lret
adc
sbb
rcrl
dec
stc
lcall
sbb
sbb
pop
mov
xchg
xor
leave
mov
fidivs
xchg
add
mov
xchg
das
and
daa
lock
jg
or
push
icebp
aaa
fstpl
xchg
jbe
adc
inc
cmp
adc
std
dec
js
fcoms
jl
sahf
cmpb
jnp
mov
jns
arpl
push
jg
push
xchg
js
loop
pusha
push
adc
or
imul
sarl
jge
inc
mov
mov
or
jp
testl
lcall
ret
mov
and
ljmp
mov
fldcw
insb
jo
sub
mov
inc
cltd
xor
stos
push
inc
aaa
pop
js
js
jnp
cltd
lcall
stos
jmp
add
fldcw
jg
inc
inc
cld
aam
lret
xor
cwtl
xor
cmc
add
ja
imul
add
hlt
les
fs
mov
jnp
adcb
neg
jb
pusha
push
inc
repnz
jae
jnp,pt
out
xchg
xor
inc
jno
push
cmc
or
or
mov
sub
dec
adc
gs
rolb
out
push
dec
jl
in
loopne
lcall
imul
xchg
add
subb
mov
outsb
xor
pop
push
inc
inc
push
dec
cmpsb
jge
aaa
xor
push
aas
das
push
add
and
pop
lods
pop
ss
stc
inc
push
shlb
push
aaa
imul
pop
cli
inc
jns
mov
add
js
push
sbb
and
and
push
jle
mov
in
icebp
ss
cmp
outsb
punpckhwd
imul
fildl
and
mov
push
daa
jns
pop
cmp
jno
pusha
cmp
mov
dec
lock
lds
lahf
xchg
lcall
cmp
mov
sub
fldl
imul
sbb
icebp
xchg
pop
daa
jbe
adc
test
add
or
mov
jmp
mov
out
dec
imul
das
or
xor
popa
hlt
pop
mov
push
jns
jnp
lcall
dec
scas
addl
outsb
pushf
fildll
inc
shrl
sarb
jo
ljmp
outsb
pop
sub
nop
mov
call
add
hlt
jecxz
and
pop
addr16
loop
outsb
mov
cmp
mov
mov
lds
insb
inc
xor
popa
push
inc
sbb
inc
bound
cli
js
xchg
pusha
xchg
je
popf
and
aam
in
imul
cmp
inc
pop
mov
movsb
xor
arpl
push
pusha
shl
xchg
pop
adc
inc
sbb
push
inc
mov
mov
jbe
jnp,pt
adc
test
jg
ds
ss
mov
ficomps
repnz
push
nop
popa
adc
sub
stc
adc
xor
sub
aas
sub
lcall
pop
xor
add
dec
test
sbb
sbb
push
push
mov
push
pop
pop
outsb
test
mov
jmp
sbb
and
fs
lcall
movb
cld
add
pop
sbb
imul
jbe
cmp
bound
pop
data16
cmp
shlb
and
jno
push
outsb
imull
mov
cltd
xchg
adcl
leave
mov
add
bound
xor
add
enter
inc
ret
or
pop
jge
sbbl
dec
push
jae
and
add
mov
jl
dec
add
add
lods
jle
js
or
leave
shll
adc
fimuls
ja
pop
ss
mulb
das
lcall
sub
in
outsb
ss
push
data16
dec
jb
lcall
cwtl
push
cltd
mov
pop
push
xor
out
lea
jbe
mov
outsl
lds
dec
decb
sbb
inc
dec
arpl
pop
mov
cmp
pop
mov
mov
outsb
jo
test
in
push
xor
mov
ss
fcomi
mov
aam
sbb
incl
jle
sub
lds
imulb
lds
xor
outsl
dec
adc
mov
aaa
jb,pt
in
repnz
add
sbb
aaa
adc
adc
xor
aad
pop
lcall
sbb
pop
out
add
dec
pop
sbb
test
cmp
pop
dec
popa
hlt
inc
jo
inc
dec
outsb
stc
push
data16
cmp
inc
in
push
leave
pop
sub
pop
xchg
test
or
lcall
fucomi
mov
push
fbld
and
inc
mov
inc
pop
inc
popa
into
jmp
lcall
lock
pushaw
jle
in
mov
cmp
divl
sbbb
sbb
ret
mov
std
ret
cmp
clc
pop
rorb
mov
mov
std
xor
push
cld
repnz
mov
repnz
loop
sar
push
jp
ret
and
mov
pop
sar
lods
xchg
jno
pushf
add
cmp
loopne
in
pop
and
bound
les
std
push
push
xor
push
cmp
pop
bound
int
xor
jge
inc
mov
dec
stc
cmp
pop
inc
and
add
jg
sbb
push
push
jns
inc
out
mov
fwait
sbbb
and
aaa
pop
out
cmp
xor
data16
cwtl
ja
es
jmp
cli
je
cmpl
clc
or
jp
cli
ret
mov
add
sub
outsb
movsl
push
mov
fimull
inc
out
add
mov
jae
push
xchg
stc
jl
and
pushl
push
pop
adc
stos
xchg
mov
sbb
jno
data16
ret
in
or
cmpsb
bound
inc
ljmp
test
js
aas
cmpsb
dec
addr16
negl
movsl
mov
dec
pop
jmp
mov
mulb
xchg
addr16
sbb
mov
inc
decb
sbb
aaa
sub
out
in
fxch
repz
scas
push
pushf
jb
dec
mov
pop
iret
popw
jg
call
inc
sbb
or
insl
add
xlat
or
push
mov
mov
sbb
sbb
lcall
dec
std
jo
lock
cmp
test
xor
add
stos
aas
mov
stos
outsb
push
push
mov
pop
sub
jg
call
xchg
fnsaves
jnp
add
push
dec
xor
jmp
xor
test
icebp
bound
pop
popa
das
mov
add
lcall
push
insl
cmc
jle
data16
fidivrs
out
cmp
mov
or
ret
jg
mov
inc
xchg
push
jb
ficoms
mov
jne
cs
ds
rclb
popa
fldt
xor
mov
iret
ljmp
jle
in
jbe
cwtl
and
xor
sub
sub
and
jno
pop
sub
sbbl
insb
in
stc
dec
jns
push
es
xchg
mov
xchg
sub
add
repnz
xchg
sub
scas
push
add
lcall
xchg
ficoms
stos
es
pop
repnz
sub
jno
popa
test
jge
add
cmpsl
add
push
scas
aas
insb
xor
daa
mov
hlt
popf
shlb
dec
add
bound
and
data16
outsb
cmp
outsl
cli
jge
cmp
lock
outsb
push
stos
push
fstps
inc
stos
shlb
leave
pop
push
sbbl
add
xor
lret
sbb
pop
sub
add
push
sti
push
lcall
insb
cmc
jo
and
mov
ret
movsl
jae
dec
pop
mov
sar
pop
sbbl
out
jae
stos
lods
loope
dec
jp
mov
and
cli
in
jmp
push
push
clc
xor
sbb
and
push
jg
imul
sub
push
jle
mov
ret
push
xchg
or
adc
outsb
xor
and
add
push
mov
nopl
inc
cmp
jo
cmc
add
mov
jg
cmp
cli
pop
in
push
pop
stc
cld
cs
into
or
into
push
add
imul
push
in
sbb
mov
lock
pop
xchg
push
xchg
stos
ljmp
mov
xor
and
test
ffree
cltd
test
mov
pop
shrb
jae
mov
insb
cld
repnz
ljmp
sub
pop
jo
pusha
rcll
sub
jle
lcall
bound
aad
push
jge
push
inc
stos
loopne
outsb
xor
in
in
pop
dec
xchg
jmp
cmp
or
ljmp
jg,pt
das
lods
es
mov
adc
xor
ror
sbb
jo
xchg
jle
push
pop
jl
cld
prefetch
or
and
mov
jg
ss
lcall
sbb
hlt
jp
lcall
jno
call
jb
cmpsb
lcall
xor
and
jns
mov
fmuls
fstpl
inc
mov
std
ret
cmp
pop
mov
mul
mov
mov
cli
sbb
jno
push
push
in
cli
cld
loop
ret
roll
adc
pop
dec
arpl
insb
les
mov
gs
sub
popa
jb
xchg
jne
pop
outsb
push
pop
nop
js
shl
rcl
sub
jno
ds
addr16
test
mov
imulb
ljmp
xor
push
dec
filds
push
jbe
cmp
fstps
aaa
inc
xor
imul
jmp
pop
icebp
adc
jbe
xor
and
cmp
jge
cli
pop
bound
and
outsb
sbb
mov
and
imul
xor
or
fnsave
push
mov
mov
sub
xchg
mov
sub
paddb
insl
mov
pop
jnp
ficomps
mov
adc
inc
lea
outsb
fstpl
push
clc
out
dec
ss
ficoms
jb
mov
das
imull
jbe
jg
loop
test
iret
mov
out
cmovp
lds
jbe
inc
push
mov
jp
outsb
vmread
adc
jno
mov
dec
dec
jb
pinsrw
out
xlat
xor
pop
mov
mov
jecxz
mov
adc
loopne
mov
rcl
jp
adcb
outsb
and
jne
sub
or
xchg
es
push
andl
mov
xorl
push
inc
xorl
orl
inc
fidivl
iret
les
pop
pusha
rclb
mov
xchg
xlat
pop
pop
push
mov
repz
arpl
es
push
shr
xchg
inc
lea
inc
addr16
push
push
and
enter
pop
lock
int
cmc
mov
es
sbb
test
inc
pop
aam
insb
lcallw
adc
arpl
je
jecxz
mov
pop
movsb
add
pop
out
mov
sub
push
adc
jl
jns
pop
cmc
into
add
mov
cld
ds
fdivl
roll
pop
aaa
sar
imul
mov
int3
cmpsl
daa
jp
cmpl
fists
cwtl
mov
xchg
divb
and
mov
pop
cmp
sub
xor
cli
sub
ds
call
xor
jb
cmpsl
icebp
adc
xor
ret
hlt
or
xchg
and
rcl
pushf
into
mov
pop
jns
sub
jge
or
sub
push
subl
jo
cmp
pop
adc
jl
inc
idivl
ss
sub
jnp
jge
xchg
cmp
sbb
jecxz
andb
imul
jne
idivl
outsb
mov
xchg
dec
pop
and
out
push
mov
ljmp
mov
rcrl
data16
mov
add
loope
push
sbb
andl
cs
cmpb
mov
dec
xchg
stos
mov
jns
add
insl
pop
mov
ficompl
sub
not
jmp
jns
or
or
stos
fisubs
xor
dec
sbb
call
inc
push
push
pusha
lcall
js
add
jo
jp
jl
inc
and
inc
jns
lcall
iret
ss
push
loopne
leave
xor
jns
lcall
fidivs
ds
pop
setbe
shlb
popa
xchg
pop
sbb
push
xor
idivb
mov
jo
leave
inc
daa
pop
flds
mov
fiadds
dec
inc
test
push
ss
add
jae
ret
popf
pop
ret
push
mov
pop
add
jle
or
sub
pop
dec
in
mov
lcall
push
test
aaa
pop
adc
rcrl
or
add
jns
jg
sqrtps
inc
and
or
sbb
adc
dec
cmp
xchg
jno
fwait
and
sbb
outsl
fwait
pop
pop
sub
jae
addr16
mov
ss
cs
add
cs
addr16
nop
ds
cmpsl
xlat
jns
sbb
ja
cltd
mov
sub
notb
int3
jb
sbb
orb
rol
arpl
shll
mov
inc
add
in
jge
inc
jae
test
jno
das
xor
push
mov
cmp
jo
lcall
push
mov
push
lcall
push
and
jb
sub
mov
push
sub
jle
pop
mov
in
dec
xor
inc
pop
div
inc
das
test
pop
jae
pop
cmp
jge
cmpsb
and
dec
cmp
push
mov
int
inc
daa
movsb
pop
fdivp
movsl
mov
sbb
in
fstl
jl
loopne
cmp
adc
rol
jp
or
adc
out
pop
fwait
jp
lods
jp
jle
iret
mov
jle
sub
dec
bound
mov
push
ror
imul
and
jp
out
or
mov
and
xchg
rol
xchg
lods
dec
pop
cmp
xor
sub
stos
or
or
jp
aam
dec
pop
xchg
xor
fsubrp
jp
das
lcall
nop
or
mov
sub
cmp
shrl
enter
cmp
test
dec
inc
or
cmp
iret
dec
pop
mov
jne
mov
xlat
int
mov
or
push
data16
pop
add
rcr
stos
ds
xlat
sbb
outsl
mov
adc
or
xor
cmpl
sub
stc
mov
adc
mov
add
aam
outsl
mov
rcll
jnp
push
lret
in
cmpsl
adc
xor
hlt
fisttpll
mov
outsl
outsb
cmp
jg
adc
nop
out
into
adc
adc
add
mov
ficoms
lods
adc
push
cmp
addr16
cmpsl
stc
jnp
lcall
int3
sub
cli
es
test
xor
test
mov
pop
jns
pop
ds
cmp
je
push
jp
aad
cld
jmp
jns
lret
stc
mov
cmp
loop
aad
or
shlb
repnz
xchg
ljmp
andb
push
jno
negl
mov
aam
sub
in
shlb
outsb
and
fsubs
xor
jmp
push
rcll
cmp
sub
sbbl
ffree
jo
sub
stc
cmp
mov
sbb
adc
jns
ds
inc
push
lcall
out
addb
adc
shufps
lcall
ja
decl
xlat
xorb
sbb
push
pop
mov
cltd
adcl
les
xor
gs
imul
rorb
mov
fiaddl
mov
push
mov
out
pop
sbb
xor
sahf
aaa
dec
aas
clc
pusha
push
sub
std
out
aas
mov
mov
mov
dec
fsub
lock
stos
insl
fcmove
and
out
mov
pop
repz
pop
mov
std
mov
jno
or
and
cltd
pop
jp
or
out
jle
pop
mov
xor
popa
adc
pop
jbe
cltd
pop
outsb
scas
loop
repnz
ljmp
sbb
and
inc
sti
xor
loopne
mov
jge
sti
les
daa
lcall
jge
scas
push
jge
addl
push
or
insl
sub
jo
push
cmp
outsb
pop
sbb
xor
stc
or
out
sub
out
addr16
and
inc
lcall
inc
mov
cmp
xchg
cs
fldenv
jmp
ljmp
shll
lds
fs
dec
stos
stc
imul
xor
test
mov
imul
mov
cld
cmp
iret
mov
fst
pop
xor
push
xor
and
sarl
enter
ljmp
inc
aam
fcoms
shlb
aas
xchg
cwtl
jno
mov
adc
lret
jb
xlat
cmp
or
mov
leave
lcall
add
lods
aaa
mov
nop
and
jge
and
xchg
xor
in
push
inc
xor
pop
cmp
lcall
outsb
das
xor
clc
cs
fs
cmp
mov
addl
es
ret
movntq
out
or
imul
mov
popa
hlt
sub
cmpb
out
xor
adc
std
and
xchg
add
pop
mov
lcall
in
pop
lods
jle
repnz
icebp
inc
inc
cli
or
mov
jnp
sarb
mov
js
cmp
mov
cmpsl
cvtps2pi
push
jbe
mov
test
inc
push
or
ljmp
icebp
fs
pop
cli
in
push
jl
popf
xchg
xor
mov
inc
test
std
pop
insl
nop
jne
sbb
lret
bound
aad
ror
push
repnz
jecxz
pop
insb
rolb
mov
pop
xchg
xchg
movsb
test
sbb
in
je
fstpt
jg
ja
cs
jno
adc
cwtl
cmp
dec
testl
in
nop
dec
std
adcl
popa
pop
outsb
mov
mov
data16
adc
xor
std
pop
jb
in
ljmp
jmp
lods
pop
cli
pop
fwait
scas
arpl
popf
and
cs
mov
jb
scas
sarb
sbb
enter
sbb
js
inc
insb
pop
scas
jge
mov
push
sbbl
cli
cmpb
jmp
int
shll
mov
mov
add
cwtl
fcmovnu
loop
mov
frstor
xchg
cmp
push
mov
scas
pop
sbbb
outsb
sbb
arpl
adc
xor
jle
and
gs
dec
addr16
data16
pusha
je
pop
pusha
call
out
add
push
lds
xor
pusha
inc
push
incb
scas
cmpsl
xchg
cld
negl
xor
sub
pop
inc
bound
xor
scas
cmc
sarb
push
lcall
jecxz
cmp
lcall
lcall
sbb
ficoms
mov
inc
jge
or
push
ss
or
leave
in
xor
xor
sbb
pop
imulb
inc
cmp
out
mov
push
sub
aad
adc
dec
repnz
sub
mov
jno
test
aaa
sub
daa
std
adc
jecxz
ss
mov
mov
inc
mov
outsb
bound
and
test
mov
ret
mov
dec
cmc
ljmp
inc
xor
mov
jnp
cmp
orl
clc
sub
aam
imul
sub
push
inc
add
xor
out
jne
push
call
loop
pop
movsl
xchg
movb
jl
dec
fmuls
cwtl
push
loop
sub
outsb
jne
outsb
push
jns
insb
lcall
jle
lcall
jmp
fisubrs
insb
lods
and
mov
js
mov
test
into
repnz
inc
xchg
ja
in
lock
aas
pop
xor
aaa
test
push
shrb
mov
shlb
sti
mov
pop
fnsave
movsl
ljmp
lods
inc
mov
hlt
mov
rcrb
insb
lods
cwtl
sti
fdivs
icebp
sti
cmp
push
in
stos
sarl
sbb
jbe
jle
lahf
and
add
sub
mov
int
and
inc
mov
cmp
clc
push
xchg
addr16
ss
jb
jns
pusha
mov
jmp
xchg
push
in
call
push
cmp
cmp
lcall
jmp
lcall
sub
jp
lock
cmpsb
dec
cmpsl
pop
xchg
cmp
pop
fucomp
jo
jo
imul
pop
cs
nop
adc
stos
insb
lcall
xor
mov
cmc
mov
mov
popa
shr
or
sbb
cmp
push
es
cld
dec
in
push
je
mov
shll
inc
std
and
sbb
jge
mov
cmp
cld
push
and
loopne
mov
and
xor
enter
mov
mov
lcall
pushf
fcmovnb
xor
lds
ret
or
sarb
mov
cvtpi2ps
jg
xchg
add
daa
std
nop
jmp
dec
sbb
push
sbb
jb
fsubs
out
push
ret
cmpsl
ret
xchg
jbe
and
xor
lea
jnp
jo
aad
shr
inc
push
mov
cmc
int
fnstenv
jbe
sub
xor
jle
and
mov
divb
inc
out
ja
jo
jae
ret
rcrb
std
loope
xchg
push
outsb
or
rolb
xor
cmp
rcr
sbbb
scas
lock
mov
cmpsl
xor
dec
cmc
or
xor
outsl
cmp
dec
ret
xor
mov
idivl
cltd
cmp
into
sub
addr16
mov
mov
sub
lcall
jge
bound
sahf
rcrl
pop
mov
inc
shlb
mov
sahf
stc
cmp
loope
add
fldcw
into
aas
xor
mov
dec
push
push
or
in
in
rcrb
mov
jge
xchg
jle
sbb
dec
jne
ficoml
xor
cmp
rorl
dec
mov
js
loopne
pop
sbb
fmuls
sahf
adcb
das
fsubs
sbb
and
lret
mov
xchg
dec
jecxz
push
push
nop
or
std
jno
pop
and
outsb
lock
and
push
pop
push
adc
mov
sub
jg
jmp
ljmp
mov
ljmp
and
push
jns
lods
pop
mov
pop
pop
pop
in
cmpsl
sbb
or
repnz
shrb
lea
dec
stc
push
pop
cs
push
ret
pop
stc
loop
sbbl
pop
cmpsb
mov
pop
rorb
push
xor
xchg
and
mov
dec
sbb
jo
cli
xchg
cs
xchg
xchg
inc
jnp
pop
sbb
imul
push
cmc
push
movq
xor
testl
and
push
sub
dec
les
sub
lock
or
gs
sbb
sbbb
mov
jno
lcall
jg
in
push
push
mov
and
pop
inc
sub
loope
mov
push
js
dec
je
inc
push
in
pop
lock
push
sbb
jns
push
mov
insl
sbb
cmp
repz
std
loopne
rorl
dec
jno
add
mov
in
cltd
ss
jge
lcall
xchg
and
out
popa
and
ffreep
mov
xor
xchg
jb
fidivs
in
cmp
jle
jmp
sbb
lcall
mov
mov
pop
add
push
push
xchg
lcall
jns
sub
stc
xchg
add
jne
sbb
pop
jle
imul
enter
pop
outsb
mov
outsb
popa
pop
sub
enter
and
shll
mov
pop
push
sub
repz
stc
xor
inc
in
adc
pop
popa
jg
push
mov
sub
sub
or
insl
pop
add
sub
dec
sub
fisttpll
cmp
lret
mov
mov
lret
test
push
jl
push
jmp
dec
sub
pop
xorb
sbb
lcall
adc
push
mov
push
pushl
or
adc
adc
lret
daa
pand
jb
rorb
jl
test
lret
leave
in
icebp
xchg
ret
sbb
and
or
pop
je
jmp
insl
loopne
cmp
xchg
adc
mov
push
js
imul
pop
add
add
popa
xchg
xor
leave
mov
jp
or
cmp
cli
or
push
sub
pop
inc
std
mov
mov
pop
mov
push
push
or
dec
push
in
mov
jno
cmpsb
inc
or
mov
mov
aas
ja
incl
and
insb
jg
cmpsb
and
inc
dec
add
outsb
imul
loope
mov
shlb
hlt
jne
into
out
daa
jns
jbe
and
inc
pop
jne
hlt
inc
pop
stc
xorl
cmp
in
bound
int3
mov
xor
add
adc
push
mov
sbb
and
jl
cmp
mov
loopne
or
adc
inc
outsb
sbb
xor
sbb
notl
adc
sub
test
mov
insl
cmp
popa
dec
lret
adc
sub
xor
mov
push
jns
sbb
xchg
xor
dec
jb
push
cmp
loop
rcrb
out
insl
clc
imul
cmp
out
popa
in
jl
ret
sub
mov
xlat
je
jle
imul
and
mov
xchg
push
jb
imul
test
icebp
dec
out
insb
cmp
outsl
dec
sbbb
aad
jns
leave
mov
jle
cmpsb
mov
push
push
pop
bound
cmc
hlt
lea
add
and
mov
loop
sti
mov
xchg
mov
jb
mov
std
xor
push
cld
pop
or
repnz
loop
jbe
icebp
mov
dec
loop
aas
iret
mov
cmp
mov
repz
in
in
bnd
mov
cmpsb
daa
rcrb
mov
sbb
test
inc
xchg
mov
int3
enter
jge
fcoml
sub
stc
sbb
fwait
cld
insb
out
cli
push
in
cld
cmp
fnstsw
cmc
loope
cli
movsb
nop
and
mov
aaa
repz
mov
sub
push
ds
and
push
out
sbb
ret
bound
repnz
jo
std
xchg
xor
xcrypt-ctr
cmpsl
fwait
mov
popa
in
dec
lods
out
movd
pusha
pop
daa
push
xor
jp
mov
ss
or
out
lret
pop
xchg
xor
jp
shrb
xor
arpl
sahf
jb
sti
fcmovu
sti
jno
sub
pop
cli
fidivrs
data16
cld
popa
or
sub
clc
cmp
inc
jb
gs
dec
jb
mov
and
nop
jb
fisubl
repnz
ds
rclb
jns
orb
and
add
addr16
rclb
inc
xor
push
inc
andl
icebp
test
add
fidivl
ret
push
insb
xor
push
shr
jmp
std
inc
test
fucomp
loop
fcmovnb
movsbl
add
js
popl
add
popf
filds
cmp
mov
jg,pt
ss
pop
xchg
data16
dec
fs
sub
clc
call
inc
in
xor
pop
outsl
sub
sbb
incb
scas
adc
mov
es
inc
cmp
lods
inc
ret
jb
jecxz
aad
lret
add
inc
ljmp
lret
pop
inc
neg
mov
add
fdivrs
xchg
push
movsl
aaa
mov
mov
push
lret
lock
out
xor
jmp
and
lret
std
xor
push
mulb
aam
ret
add
sbb
cld
cmp
cli
fadds
insl
push
mov
loop
ret
insl
icebp
mov
adc
dec
stc
xor
popf
negb
add
sahf
das
outsl
push
scas
cltd
or
push
xor
pop
cld
orl
scas
lock
add
sti
jb
mov
push
shl
repnz
cmp
mov
loope
push
inc
repnz
mov
and
andb
inc
mov
out
inc
mov
subb
push
int3
sbb
repnz
mov
jecxz
jb
mov
jb
inc
xchg
push
xor
es
aas
or
das
xchg
adc
sub
pop
sbb
inc
aam
push
adc
lock
incl
int
cmpsl
add
repnz
daa
popf
cmpl
aaa
mov
sbb
incl
mov
sbb
dec
cltd
into
inc
sbb
inc
out
dec
cmpsl
push
jns
push
outsl
clc
mov
aas
inc
mov
jne
jp
cmp
push
xor
pop
mov
jns
js
mov
and
mov
inc
repnz
inc
in
push
pcmpeqw
xor
adc
pushf
cmp
jb
push
push
das
mov
and
mov
add
loop
cmp
out
and
jecxz
insb
adc
pop
pop
lods
sub
sub
shll
in
cmp
xchg
cltd
sbb
xor
movsl
or
ret
pop
cld
pushf
inc
jo
sbb
div
pop
jp
sbb
inc
stos
push
xadd
push
pop
imul
orl
and
xor
test
imul
cmp
pop
cwtl
jl
ret
out
push
push
int3
or
pop
sub
cmpsb
pop
or
ret
xor
inc
mov
push
cs
sub
es
xchg
movsb
push
and
and
pushf
cld
inc
lcall
mov
mov
pop
call
loopne
fsubs
jmp
inc
out
pop
rolb
xchg
xor
call
dec
shrb
jp
call
xchg
mov
sti
stos
push
std
jp
call
cli
dec
sbb
push
xchg
ds
arpl
dec
jmp
mov
pop
fsubr
mov
psrlq
add
jb
xchg
les
enter
sbb
cmp
xchg
pop
jae
stc
testl
cmp
and
adc
push
idivb
pusha
shlb
ret
mov
enter
ds
fbstp
ss
incb
pusha
sub
mov
xor
and
outsb
push
imul
mov
adc
mov
psubd
ds
and
add
imulb
push
pop
out
jno
mov
arpl
and
dec
sarb
aas
lret
jno
pusha
mov
popa
mov
mov
outsl
lods
sbbb
push
stos
cmp
mov
lcall
inc
xchg
clc
fists
mov
xchg
cld
mov
in
movsb
loop
xchg
addl
or
addb
mov
jmp
xor
mov
pop
pop
das
or
loope
aaa
push
mov
jle
sub
mov
sti
rcr
jbe
dec
ret
and
cmp
sar
das
push
pop
stc
pop
cltd
mov
lcall
add
jno
ret
pop
lret
ss
mov
mov
ljmp
hlt
out
into
add
loopne
and
popa
dec
sub
gs
or
loop
mov
mov
ljmp
stc
clc
jno
xor
push
push
mov
sub
pop
mov
pop
jo
aad
mov
cmp
dec
nop
jb
jbe
aas
jmp
shll
mov
and
mov
jo
jbe
sbbb
pop
xchg
adc
inc
mov
and
icebp
push
pop
fs
test
jg
jb
push
push
xor
es
fdivl
je
or
nop
xlat
dec
in
js
jle
iret
xchg
sti
xchg
das
cmp
jge
pop
jl
mov
jle
adc
mov
xchg
sbb
daa
jp
adc
xchg
stos
mov
adc
adc
loop
mov
iret
sub
and
nop
ds
lcall
jp
or
stc
xor
sbb
dec
arpl
pop
mov
out
hlt
jl
pop
push
xor
xor
xor
mov
sbb
hlt
jo
imul
cmc
les
popfw
jb
and
jo
jge
xchg
sarb
push
jl
movsl
xchg
or
pop
int
and
jecxz
pusha
fidivrs
loop
xchg
cli
sbbl
fisubrs
mov
pop
jl
adc
gs
cltd
insb
sub
cmp
sarl
daa
lcall
or
test
pop
fbld
jle
jbe
mov
lret
jmp
lcall
bound
sahf
stos
in
mov
jbe
pop
pop
push
mov
lahf
xor
mov
stos
ds
inc
cs
out
xchg
stc
adc
sub
jb
cli
out
mov
pop
cltd
lods
test
push
cmc
mov
les
aas
xor
mov
lahf
outsl
push
rdtsc
in
gs
push
xchg
mov
rcrl
jl
lcall
add
faddp
mov
popf
xchg
jo
imul
inc
and
xchg
sbb
add
push
inc
jns
cmp
fdivrp
sub
push
xor
lcall
insb
add
stc
fcomps
push
lret
push
in
add
pushf
push
cmp
xchg
add
lods
xor
cmpsl
nop
mov
popa
xchg
movl
jmp
pop
sub
loope
sti
add
test
jno
adc
jmp
repnz
rolb
sub
rorb
ficoml
mov
and
stos
mov
clc
sub
ja
imul
aam
ja
scas
jno
cmp
bnd
jns
jno
cmp
dec
mov
sbb
xchg
or
outsl
push
shlb
xor
xchg
jo
add
xor
sub
pop
imul
sbb
jne
xchg
adc
pop
inc
cmp
push
push
test
push
xor
test
jle
setns
dec
xlat
fnstsw
call
pop
dec
mov
je
enter
cmp
cli
adc
xor
cmp
add
xchg
cmp
jne
mov
add
outsb
insl
icebp
pop
ss
cmp
xchg
pop
and
sub
inc
cmp
jnp
addl
rolb
sub
rep
cli
mov
lret
xchg
jmp
sub
das
xor
shll
mov
push
dec
jo
and
sub
add
dec
lcall
sub
lds
daa
or
pop
pop
bound
jmp
cltd
lock
jl
and
icebp
cmp
repnz
loop
push
addl
push
pop
push
add
push
mov
inc
icebp
cmc
in
push
mov
ja
repz
das
mov
mov
inc
shlb
mov
mov
sbb
mov
loop
bound
pop
add
xor
jbe
jnp
in
jae
jno
outsb
movl
cmp
sub
mov
lcall
scas
mov
scas
jp
sub
inc
jmp
push
daa
ret
sbb
sahf
xor
dec
and
icebp
jno
mov
test
push
int3
mov
adc
lcall
insl
jge
pop
xchg
and
fdivrl
mov
mov
int
stc
cmp
mov
sub
inc
mov
sbb
pop
fistps
push
jnp
mov
mov
cmp
jp
pop
dec
cmp
jne
popa
adc
arpl
push
vmread
cmpsb
mov
dec
adc
jns
inc
and
subb
imull
into
lcall
push
ret
popa
in
cmp
insl
and
jp
cmp
lcall
stos
mov
movsl
rorl
rcrb
xor
and
mov
mov
or
insl
jecxz
pop
fildl
pop
shll
addr16
push
adcl
xor
into
lcall
sbbb
pop
xchg
push
cmpsb
out
sbb
xchg
mov
pusha
push
xor
push
xor
scas
aas
sahf
push
adc
push
push
adcl
iret
lcall
stos
mov
aad
push
pop
mov
adc
or
jae
cmpsb
sub
test
xchg
cld
ret
mov
fildll
mov
push
icebp
jnp
insl
mov
les
ljmp
ret
sahf
push
mov
pop
fbld
lcall
jnp
insl
nop
inc
into
mov
imul
insl
jl
push
jge
rcrb
jno
pop
xor
pop
fstps
imul
jno
dec
inc
jge
fnsave
pusha
gs
imul
ss
xor
jge
aaa
mov
sub
es
jge
cmp
pop
sbb
cli
sbb
push
pusha
adc
imul
pusha
pop
pop
pop
xchg
ds
add
jp
incb
xor
lock
out
jb
cli
out
pop
loop
mov
imul
shlb
cli
dec
lret
pusha
jnp
push
mov
fs
icebp
push
cli
cmp
sub
mov
jne
xor
neg
mov
sub
scas
jno
jp
imulb
mov
lcall
push
mov
outsl
add
jp
jnp
icebp
sbb
mov
push
pop
data16
pusha
pop
jno
jp
idivb
push
popa
dec
jb
cli
inc
ds
and
imul
xor
jb
mov
push
jno
push
out
jae
adc
popa
adc
cli
or
pop
and
push
add
incb
popa
divb
cli
out
mov
out
loop
cmp
pop
fidivl
mov
into
jno
jbe
cmp
popa
icebp
ret
xor
xchg
jns
inc
mov
pop
cmpsl
or
sub
mov
and
ds
jbe
cli
jae
sub
repnz
jo
jno
imul
mov
cli
faddl
fdivs
xlat
jb
jl
ss
pop
or
nop
cmovne
sbb
sbb
pop
mov
and
dec
xor
hlt
dec
jmp
cmp
jge
in
xor
imul
sub
pop
hlt
dec
sbb
data16
push
sbb
shl
mov
insb
in
or
sub
lret
rcrl
inc
rsm
push
lods
cs
and
push
cmp
mov
lock
add
xchg
mov
sub
pop
push
daa
push
in
or
mulb
ja
push
clc
push
cmp
jmp
sub
pop
push
repnz
jecxz
sbb
int3
jb
cmovno
std
in
in
dec
ret
dec
add
jo
mov
in
lods
rcrb
fs
je
adc
bound
movsl
mov
scas
cwtl
and
ja
es
mov
xor
inc
add
lret
xchg
fisubs
mov
push
sub
mov
les
imul
pop
divl
aam
out
pusha
mov
mov
mov
test
mov
inc
jo
dec
xchg
sub
inc
sbb
xor
pop
cli
sbb
push
idivl
fimuls
pop
dec
sbb
xor
cmp
addr16
mov
and
push
push
out
clc
pop
inc
adc
in
or
idiv
pop
mov
jecxz
testb
divl
mov
leave
ss
sub
jge
jb
aas
push
outsl
add
test
xor
sub
cltd
out
rcll
jo
jle
cmp
outsb
mov
inc
rorb
fildl
jge
xchg
adc
mov
paddd
pusha
mov
inc
in
bound
dec
jns
inc
aam
jecxz
inc
clc
inc
adc
outsl
js
push
iret
xor
xchg
sub
rorl
sti
inc
outsb
xchg
xchg
aas
call
and
dec
imul
pop
lods
cli
fnstenv
inc
pop
fildll
testl
pop
outsb
popa
jle
cmc
shr
xchg
test
jp
jo
repnz
jo
jle
xchg
cs
and
cmp
jbe
or
outsl
dec
pop
sub
out
pop
adc
pop
mov
fimuls
std
adc
icebp
push
out
outsb
ljmp
test
jg
sub
lods
mov
xor
and
lahf
add
mov
std
jecxz
add
or
mov
cmp
bound
dec
jno
pushf
mov
iret
repnz
mov
sbb
cmp
loopne
push
lods
sbb
xor
and
push
mov
aas
push
jp
mov
push
je
enter
sbb
std
ret
mov
inc
hlt
int3
pop
bound
and
sbb
jno
lods
inc
stos
mov
daa
mov
rcrb
add
push
cmp
or
adcl
cmp
outsb
cmp
push
fldl
lods
dec
cli
rorl
insb
push
inc
push
and
and
add
cmp
lret
sbb
mov
add
das
adcl
clc
and
cmp
outsb
mov
xchg
jo
popf
and
stos
out
in
cmp
mov
insw
cli
xchg
cmp
inc
xor
hlt
loopne
cmp
std
sbb
sub
and
sub
fldt
sub
out
jg
cmp
or
jno
xor
filds
mov
scas
sbb
xchg
push
mov
cmp
adc
in
and
adc
cltd
mov
jl
xlat
mov
mov
push
nopl
addr16
and
jno
jb
dec
jb
lock
enter
cli
imul
lahf
les
and
xor
lods
cmp
mov
rorl
mov
insb
nop
add
pop
mov
inc
mov
faddl
inc
sbb
dec
add
loopne
bound
push
add
xchg
lcall
or
scas
stc
push
sarl
lods
stos
or
cmp
daa
xchg
enter
mov
pop
jb
fistl
sub
shrb
dec
fildl
push
or
adc
lahf
data16
mov
pop
mov
xor
iret
push
pop
aas
es
jmp
mov
mov
mov
inc
lret
jg
lret
cs
jmp
mov
dec
adc
insb
and
mov
sub
mov
jge
sbb
imul
cld
jecxz
imul
mov
push
incb
xor
lcall
mov
data16
xchg
loopne
and
mov
sub
stos
push
lret
pop
fs
dec
shll
push
cmp
out
gs
loope
mov
outsb
cmpsb
popa
pop
add
js
push
sbb
cli
and
outsl
mull
data16
dec
sbbb
jle
push
ror
sub
std
mov
jg
jbe
rcrb
xor
test
es
jnp
lea
rorb
sub
pop
push
fistpll
mov
inc
repnz
sbb
int
aas
push
lcall
lea
das
repnz
pop
lret
stc
sub
jno
js
sub
outsl
mov
mov
test
mull
jb
mov
arpl
andl
mov
lods
ret
sbb
jp
cmp
rcl
bound
add
cltd
adc
sub
loop
mov
ljmp
sti
daa
fwait
jle
vmwrite
adc
jbe
cmp
cmp
lods
jno
sub
xchg
je
jp,pn
jle
jb
cli
sub
cmpsl
add
jnp
sub
inc
mov
neg
outsl
sbb
jnp
leave
sub
jbe
lcall
enter
sub
xorl
rorb
mov
outsl
pushf
mov
fildl
xchg
cmc
enter
aaa
pop
push
jo
pop
cltd
lock
insl
inc
sbb
mov
and
jbe
das
or
mov
rcrl
pcmpeqd
test
enter
mov
or
pop
sahf
inc
sub
mov
or
leave
popf
repz
jno
sbb
iret
add
mov
pusha
jns
call
sbb
xchg
dec
adc
notl
cmp
and
dec
mov
out
dec
cmp
jecxz
jb
jle
into
xchg
sub
jb
jae
adc
and
fbld
lock
popf
push
mov
push
outsb
push
push
mov
gs
lcall
gs
stos
jo
xchg
ret
and
xorl
ret
mov
xor
add
xor
divl
movsl
sarl
fldt
or
add
lret
jb
addr16
shll
add
imul
test
pop
mov
or
sub
push
rolb
outsb
ffreep
mov
setnp
mov
sarb
nop
inc
or
les
jno
shlb
fisubl
inc
push
jb
jp
sbb
fdivrs
jb
jns
sbb
ret
pop
xchg
outsb
jns
test
stc
outsl
jns
sub
cwtl
cmp
repnz
in
mov
mov
jg
inc
out
popa
inc
scas
sahf
dec
jnp
push
js
push
or
arpl
in
andb
sub
pop
adc
cld
pop
shrl
stc
popf
or
outsl
jg
jno
lea
sub
lret
je
push
aaa
xchg
mov
out
cmc
or
jp
pusha
mov
xchg
out
lods
jns
sub
data16
lret
lods
mov
stc
js
mov
fidivrl
cmp
push
outsb
insl
pop
repnz
sbb
aas
push
sub
inc
xlat
mov
ja
push
loop
out
outsl
or
mov
lods
ficoml
lods
jg
stos
jbe
jle
stc
pop
cmp
inc
inc
ja
dec
jb
in
and
fwait
jge
sub
orl
mov
icebp
pusha
cmp
jp
sub
sub
jns
mov
and
repnz
stc
addps
mov
add
call
xchg
cmp
sub
sub
leave
jg
inc
out
sub
mov
fsts
sbb
js
int
push
fs
int
xor
adc
cmp
cwtl
xor
xchg
adc
cli
cs
push
mov
aas
sub
jo
mov
adc
sbb
dec
xor
xor
movsb
stc
mov
push
mov
jmp
das
shrb
mov
sbb
enter
mov
mov
lahf
mov
inc
lock
lods
inc
incl
mov
push
push
stc
mov
or
jne
aad
xor
rcrl
loop
cwtl
std
push
pusha
mov
and
clc
xor
push
xchg
mov
test
push
mov
cli
outsb
inc
rorb
jbe
jb
or
mov
adc
imul
jo
ret
pop
and
jo
pop
or
sub
inc
sub
cmp
fisubl
aad
mov
ret
mov
out
pop
idiv
or
fdivl
test
fwait
sbbb
pop
mov
dec
lods
xor
xor
push
nop
xor
mov
sub
push
in
stos
jl
push
mov
mov
dec
bound
js
mov
mov
cmp
cwtl
mov
jp
inc
cwtl
loope
testl
cmp
je
inc
mov
lcall
fisubrl
mov
cwtl
outsb
inc
mov
jmp
jb
in
jne
ja
popa
push
loopne
cs
popf
test
xor
fmuls
inc
cli
xor
xor
stos
pop
imul
lahf
cmc
mov
lods
jo
loop
dec
lds
pop
outsb
das
and
adc
adc
call
jno
daa
adc
dec
mov
push
jbe
adc
arpl
lcall
add
in
cld
lret
xor
jno
gs
cld
xchg
or
inc
xor
jnp
inc
div
push
xor
xor
mov
rcrl
bound
sub
stc
addl
addl
ja
jecxz
dec
arpl
push
lock
mov
stc
jp
rol
inc
and
pushf
iret
cmp
push
fs
cmp
cmp
loopne
outsb
jnp
mov
jno
out
inc
icebp
sbb
das
insb
pop
xor
scas
sub
push
out
dec
xor
jle
jne
nop
cs
push
pop
data16
sbbb
xchg
mov
js
imul
cmp
cld
push
add
test
and
hlt
aas
fnstenv
bound
dec
mov
sub
cmpsb
leave
mov
or
lods
xchg
popf
cmp
cmp
mov
divl
lea
pushf
mov
lahf
push
or
je
add
and
xor
cwtl
jg
sbb
fcoms
orl
fldenv
loop
ss
fsubp
sub
adc
out
shrb
stos
loope
jl
imul
lea
or
cmpsl
adc
mov
bound
ret
xchg
lcall
mov
jg
pop
out
dec
mov
and
xlat
inc
mov
pop
orb
mov
ss
andb
sub
push
add
xchg
pop
push
fistpl
pop
insb
lock
jg
and
or
ljmp
dec
and
push
in
dec
nop
sbbb
js
cmp
leave
jge
test
inc
xor
sub
push
sbb
mul
xchg
ja
les
mov
js
xor
fwait
jno
int
xchg
jg
outsb
lock
clc
push
pop
jb
negb
movsb
or
xchg
or
xor
testb
mov
aaa
push
push
out
mov
rcl
mov
sarb
stos
sbb
xchg
and
jns
mov
push
popf
movsl
ljmp
push
jbe
xor
repz
lds
lcall
adc
iret
mov
add
mov
push
pop
sbb
loope
pop
es
sub
pop
and
and
lcall
adc
notl
inc
mov
cmp
mov
add
sub
in
push
jb
sub
inc
push
icebp
dec
les
jmp
dec
jo
mov
sbb
mov
aaa
sub
loop
xchg
lock
lods
jb
dec
cs
stos
aad
add
mov
mov
or
inc
shrb
cld
pop
mov
xor
jnp
repnz
incb
ss
inc
roll
stc
aam
sahf
ja
lret
inc
cmp
or
jb
test
icebp
adc
pop
adc
jle
push
xchg
cmc
jp
mov
push
mov
stos
xchg
rsm
insl
lods
movsl
clc
xor
xchg
xor
inc
lcall
cltd
cli
sub
sbb
xchg
sub
fildl
into
mov
adcb
mov
test
ret
leave
ret
popl
pop
mov
xchg
dec
les
jb
js
test
cmpsl
loope
jg
jb
push
insl
movd
mov
mov
xchg
jl
punpckldq
fbstp
sub
dec
sbb
daa
xchg
sub
lcall
jp
rep
dec
cmpsl
into
ja
in
lret
xor
pushf
mov
jo
es
jle
xchg
test
popl
mov
mov
outsl
movaps
xchg
stos
jmp
add
cmpsb
pop
mov
outsb
pcmpeqw
sbb
sarl
jno
inc
and
push
xchg
pushf
imul
stc
push
dec
aaa
testl
pop
jnp
push
mov
jle
mov
mov
stos
cltd
xor
out
dec
das
ds
or
iret
adc
movsl
jge
pop
lds
outsb
mov
cmp
sbb
push
mov
divl
sub
cltd
hlt
cmpl
adc
arpl
mov
js
sbb
adc
lds
mov
xor
nop
xor
in
lret
shlb
outsb
add
jmp
imul
mov
es
cltd
leave
sti
dec
mov
xor
dec
subb
sti
xchg
lcall
push
iret
xchg
push
add
test
mov
hlt
jnp
sub
pop
stc
cmovbe
sbb
xchg
sub
and
xchg
mov
add
adc
xchg
inc
pcmpgtd
movsl
sbb
imul
pop
mov
push
fwait
inc
insl
jb
bound
sub
clc
jne
jecxz
negl
fcoml
arpl
es
fnsetpm(287
aad
mov
outsl
sbb
or
or
idivl
cltd
sbb
fsts
mov
mov
mov
pop
cli
adc
out
fistl
xchg
aaa
mov
mov
fisubrs
xor
dec
lret
and
fdivrl
daa
adc
jbe
andb
sahf
cmp
mov
bound
jo
loopne
pop
xor
mov
stos
repnz
mov
pushf
bound
fcoms
inc
cs
jo
stc
and
fstpl
loopne
popa
cmp
mov
scas
cltd
xor
scas
push
jbe,pn
xchg
testb
jo
fidivs
out
nop
xor
or
mov
jo
mov
mov
pop
cwtl
push
mov
pop
cmp
sub
jmp
cmc
aaa
jp
add
icebp
test
fildl
test
xor
mov
scas
cmp
mov
shll
jmp
lock
in
std
xchg
jg
xchg
mov
icebp
lcall
push
aaa
fnstcw
test
dec
add
insb
addl
in
mov
or
out
xchg
pop
fadd
rcll
jmp
xchg
in
mov
call
xorl
xchg
jns
data16
subb
push
icebp
fildl
add
cmp
repnz
mov
lcall
xor
dec
pop
inc
dec
push
push
inc
push
ret
int
push
lea
test
xor
rolb
repz
cld
xor
inc
dec
mov
mov
mov
shlb
push
jb
pop
cmc
ds
pusha
xor
sub
sahf
sarl
xchg
sbb
iret
xchg
pusha
inc
add
mov
insb
outsb
mov
or
jne
xchg
daa
les
dec
inc
add
mov
das
test
bound
outsl
cmc
aas
cmpl
inc
jo
push
into
and
repnz
leave
inc
push
daa
inc
dec
popa
inc
pop
mov
gs
aam
jl
sbb
repnz
jmp
mov
data16
and
push
mov
add
outsb
jle
sbb
addb
stc
adc
pusha
jo
or
dec
cmpsl
inc
cmp
sbb
add
xchg
jp
sbb
popa
stos
lret
adc
mov
and
sbb
cld
sbb
mov
push
hlt
repnz
pop
sbb
sub
andb
and
daa
xchg
divl
jp
inc
mov
dec
mov
pop
pop
je
fnsave
popf
push
mov
pop
std
test
subl
xor
jg
push
add
xchg
jmp
jno
jbe
jnp
stos
and
cmc
les
imul
sbb
bound
mov
inc
mov
outsl
cmp
popa
fistpl
cmp
popa
add
cmp
popa
daa
sahf
ljmp
dec
shl
pop
mov
add
sarb
or
rorl
push
inc
and
in
adc
push
nop
bound
jae
dec
jb
mov
ror
pop
insb
sub
fcoml
jno
jbe
aas
repnz
sar
jecxz
imul
push
loop
es
add
push
outsb
in
jl
aas
pop
cli
jo
repnz
out
in
ljmp
mov
loope
shlb
jbe
outsb
add
adc
mov
mov
in
adc
mov
fildl
mov
sbb
jl
jo
stc
int3
pop
nop
cs
add
mov
jl
imul
sbb
jbe
inc
cli
mov
ljmp
cs
jl
fldcw
outsb
xor
data16
mov
mov
dec
inc
cs
fs
ret
lcall
cmp
icebp
cltd
dec
push
std
mov
mov
push
daa
mov
adc
lcall
jp
into
cmc
and
lret
je
mov
add
cld
mov
sbb
sbb
jno
and
dec
adc
cmc
jp
imulb
cmp
pusha
loop
in
dec
test
jbe
call
int3
xchg
lods
pop
cmp
inc
cmp
pop
rolb
loopne
into
adc
jge
mov
xlat
inc
shlb
neg
jns
mov
xchg
or
adc
sbb
mov
cmpsb
add
test
stc
ja
lahf
decb
lcall
ja
ret
lods
mov
adc
push
jbe
dec
mov
lahf
xor
jge
sbb
into
and
sub
call
fwait
loope
repnz
push
add
addr16
mov
test
les
and
pop
out
lret
push
insl
ss
sub
insb
pop
imul
movsb
lahf
icebp
insb
mov
insl
dec
js
dec
hlt
cmp
mov
adc
aas
mov
jno
sarb
lds
stos
ljmp
push
in
pop
pop
xor
jb
jne
mov
jbe
insb
sub
hlt
cmp
inc
icebp
adc
es
jns
outsb
cld
cmp
pop
jp
test
ds
adc
notb
dec
jl
mov
pusha
les
sub
es
std
divl
mov
dec
push
jp
outsl
pop
dec
lcall
dec
cli
aas
repz
sub
mov
or
sbb
pop
stos
add
scas
vpshrdw
test
mov
pop
lcall
out
ja
lods
dec
ljmp
loop
cmpsb
jb
sub
scas
push
sub
add
xchg
and
push
mov
xor
lcall
dec
mov
xor
mov
jns
lcall
lss
push
cmp
xor
cli
xchg
imul
sbb
pushw
iret
and
das
adc
and
xor
sbb
add
jle
dec
jg
mov
nop
mov
push
pop
mov
and
mov
inc
sub
jns
push
pop
test
xor
scas
fdivl
inc
push
jno
pop
cmp
jecxz
sub
sbb
or
push
bound
add
ds
push
dec
cs
lcall
xor
mov
mov
ja
xor
loope
std
out
popa
push
jmp
cmovns
mov
loope
les
aaa
pushf
mov
iret
jge
test
sub
stos
xchg
stc
and
lods
pop
testb
mov
bound
stc
push
cltd
sbb
lcall
mov
loope
pop
insb
inc
xor
xchg
inc
test
stos
insl
add
inc
lcall
dec
inc
mov
jns
enter
push
int
and
leave
fistps
insb
cltd
mov
dec
cs
out
scas
jbe
sbbl
mov
push
shlb
iret
lea
mov
fldl
jbe
cwtd
jecxz
jp
repnz
mov
repnz
cmp
dec
cmp
subb
pop
dec
xor
cltd
and
sub
outsl
jmp
xlat
pop
pushf
leave
imul
hlt
push
stc
pop
leave
jno
pop
push
cld
jp
sbb
push
push
outsl
das
and
jle
dec
jns
popf
xor
push
inc
mov
pop
sub
inc
cmp
mov
nopl
xchg
scas
pop
mov
inc
stc
mov
push
decb
lahf
sbb
cmp
test
jle
mov
mov
jle
push
add
lcall
jb
lds
mov
fisubrl
or
popa
cltd
aas
fdivrp
outsb
std
push
mov
mov
or
and
xor
inc
jo
xchg
fidivl
jl
mov
popa
dec
lds
sbb
bound
sbb
clc
ds
outsl
pop
mov
aaa
stos
mov
icebp
inc
das
cli
jae
xor
stos
hlt
inc
adcl
mov
push
cmpb
and
in
fdivrs
imul
insl
in
sub
repz
cltd
push
jp
xchg
test
shrl
sbb
push
std
inc
ds
pop
ds
mov
ja
jno
jns
scas
jb
lods
push
cmp
push
ja
call
stos
popa
jne
dec
push
aas
jle
faddl
sbb
test
push
dec
xor
pop
jne
inc
aad
aaa
lcall
cld
mov
loopne
lods
push
jno
jno
jmp
stc
jp
mov
lret
dec
mov
push
outsl
pop
shl
pop
call
gs
cld
nop
ficomps
cli
jo
xchg
or
jmp
rolb
push
pop
cmp
popa
jb
in
mov
sub
lahf
jno
fnsave
jnp
cmp
hlt
inc
js
mov
rcrl
and
mov
je
jae
and
jbe
adc
cltd
xor
int3
cmp
xchg
jle
mov
push
cwtl
and
dec
sbb
mov
popa
inc
sbb
ja
jl
mov
xchg
ds
push
js
cltd
jmp
in
sbb
aaa
test
je
jo
es
push
iret
xchg
cmp
xor
enter
daa
push
sar
cmp
ljmp
dec
clc
cmp
jp
jns
pop
pop
mov
xchg
popf
dec
jl,pt
or
inc
dec
cltd
jecxz
xchg
push
jae
mov
xor
adc
mov
cmp
cli
xor
pop
rcll
mov
mov
jge
or
sbb
fisubrs
je
dec
inc
cmpsl
xchg
sub
or
and
adc
push
pop
push
lock
and
out
mov
add
xor
jno
daa
je
push
sbb
xor
shrb
xchg
jb
inc
cmp
mov
or
push
mov
xchg
xor
mov
mov
cmc
sbb
push
add
sub
arpl
loope
jle
jl
jns
vmread
mov
les
pminsw
pop
jle
jmp
insl
mov
arpl
nop
cmp
sbb
jle
pop
clc
js
sub
outsb
sub
mov
xor
sarb
push
leave
pop
pop
dec
jo
sarl
shll
adc
add
sbb
sub
pop
add
fs
cmp
out
jns
push
mov
je
iret
cmp
jp
xor
xchg
adc
cltd
test
push
push
jo
and
sar
shll
jo,pn
rcll
dec
out
popa
sbb
cltd
out
iret
lcall
imul
cltd
cld
adc
ljmp
sbb
pusha
es
insb
inc
outsb
fidivrl
jle
jo
orb
inc
mov
outsb
inc
pop
outsb
cld
mov
push
add
jecxz
jmp
mov
sub
jl
cmp
pop
orb
add
cmpsb
addb
cmpl
mov
dec
loope
leave
lock
jne
jl
inc
cli
jno
negb
adc
aad
mov
or
pop
cltd
hlt
inc
jle
rcll
mov
jns
cs
sbb
mov
addb
pop
push
pop
add
mov
inc
stos
jae
cmc
cs
hlt
pop
jb
repz
jle
pusha
lret
inc
or
in
inc
dec
fildl
dec
xor
sbb
xorl
cltd
pop
cmpb
push
mov
push
out
jo
stos
clc
mov
sub
gs
xchg
add
jns
test
push
jge
pop
dec
clc
sahf
mov
popa
cltd
adc
mov
dec
or
xor
movsl
inc
test
stc
mov
outsb
add
fdivr
inc
xchg
fsubrs
notb
cmp
pop
psubusb
daa
dec
dec
jg
out
adc
lods
loope
sub
mov
movsb
push
and
and
shrb
in
jbe
inc
ds
in
sub
sub
std
jb
clc
add
push
roll
clc
addr16
sbb
mov
and
movb
sub
icebp
rclb
outsl
dec
mov
insb
lcall
and
idivb
mov
sub
mov
dec
lcall
ret
adc
loope
idivl
mov
ss
pop
xchg
add
out
fnstcw
xor
cmpsb
mov
pop
rclb
loopne
adc
loopne
mov
lahf
xchg
pop
dec
mov
dec
mov
les
es
incb
jb
and
jb
lahf
iret
mull
xchg
jl
cmp
xchg
inc
sub
jns
inc
aaa
cmp
pop
sti
cmp
and
repnz
xor
pop
jp
lds
clc
pop
out
mov
mull
xchg
xor
jo
pusha
jl
jle
ss
xor
or
jns
push
test
cmp
cli
jno
das
imul
subl
mov
xchg
inc
mov
and
mov
sub
fadds
test
into
pop
imulb
cld
outsl
push
scas
push
std
mov
inc
nop
inc
in
fcmovbe
rcrl
dec
pop
cmp
and
dec
leave
pop
push
adc
das
popa
dec
jns
lret
push
push
fs
sbb
add
push
sbb
cmp
stos
xlat
push
jbe,pn
xor
stc
sub
push
faddl
xor
sbb
sahf
sub
out
sbb
mov
ficoms
out
aad
out
xchg
idivl
data16
scas
cli
mov
lret
pop
pop
or
aaa
mov
pop
mov
lock
xlat
inc
shlb
xchg
popa
mov
pop
add
mov
mov
int
sbb
fbld
mov
and
jmp
xor
stos
popa
movsb
insl
clc
ret
cmp
arpl
push
push
iret
pop
cwtl
sbb
js
xchg
jo
js
insl
rclb
shlb
shrl
sar
sbb
sbb
push
repnz
and
xor
xor
pop
push
or
std
cmp
xchg
mov
lcall
sub
mov
adc
add
xor
lret
add
pop
add
ljmp
jl
ss
insl
add
lret
sub
arpl
pop
es
aaa
rclb
add
pop
jg
lods
add
shl
mov
xchg
jo
mov
aas
cmp
or
inc
xchg
inc
cltd
pop
mov
insb
shl
lcall
int
stos
sahf
aad
mov
mov
jbe
push
xchg
adc
ret
mov
sahf
loope
les
in
pop
xor
lret
les
sbb
inc
sbb
push
jmp
add
mov
xorl
push
sti
push
add
orb
sbb
jbe
dec
das
pop
bound
pop
sbb
lret
ret
pop
inc
out
clc
cmc
and
fwait
ss
rcll
xor
mov
hlt
mov
fidivrl
lcall
loope
add
orps
jecxz
movd
inc
adc
into
stos
lcall
mov
mov
xor
dec
mov
mov
push
outsb
xchg
dec
sti
adc
loop
addr16
jecxz
fsubrp
and
mov
pop
xor
xorb
cmc
inc
cs
outsb
pusha
xchg
pop
jmp
test
jnp
shlb
cmpsb
push
outsb
mov
lret
cmp
insl
fdivrp
ret
xchg
scas
add
xchg
sti
xor
xor
xchg
fisttpl
jmp
dec
nop
lcall
out
out
xchg
movsb
pop
pop
xchg
out
insb
sub
or
mov
pop
jp
jge
dec
into
pusha
stc
push
inc
sub
xor
mov
push
pop
jge
cld
into
mov
lcall
xchg
add
inc
jmp
and
stc
fimull
mov
push
sbb
sub
cwtl
in
inc
pop
add
cs
cwtl
dec
adc
bound
outsb
icebp
pusha
fsubrs
or
jae
mov
cli
test
and
aaa
xor
lea
cwtl
es
icebp
scas
ficoms
sub
push
cmc
hlt
into
pop
jns
xor
pop
loop
pop
jge
les
add
pusha
xor
adc
mov
out
cmp
pop
mov
push
jl,pn
cmp
pop
out
pop
add
pop
ds
xor
dec
jecxz
xor
testl
push
repnz
hlt
les
push
lock
enter
mov
cmpsl
fisttpll
or
mov
ljmp
mov
sbb
dec
lods
in
lcall
sub
ret
xor
push
push
adc
push
pop
fwait
inc
cmp
inc
dec
and
ss
xor
pop
insl
data16
ret
addl
sub
rcrb
ljmp
cwtl
jp
push
mov
jne
cmp
ficompl
push
out
aad
lock
call
jbe
testl
mov
add
cs
stos
cmp
jns
jb
stc
jbe
xor
and
sbb
mov
loop
cmc
aas
cmp
ds
dec
div
mov
dec
fcmovb
and
push
data16
addr16
divl
sub
inc
add
out
jp
mov
les
aaa
mov
icebp
or
pop
iret
sbb
leave
or
out
loopne
sub
js
mov
cli
fbld
cmp
xor
ficoml
js
jno
xor
outsl
and
icebp
mov
sub
xchg
es
pop
lcall
cmp
sub
push
jp
inc
mov
pop
cmp
mov
pop
sbb
sub
fyl2x
shlb
sbb
cmp
sbb
jecxz
ds
xor
pop
cmp
inc
inc
fdivrs
outsb
xor
jecxz
mov
xor
fldcw
popf
and
inc
push
add
cmpsb
or
sub
imul
pop
cmp
jns
pop
jge
inc
test
imul
adc
inc
add
pop
mov
mov
jecxz
mov
xor
mov
ficompl
push
loopne
mov
adcl
sbb
outsl
repz
pop
mov
loopne
and
test
int
jp
jns
scas
or
imul
pop
lret
jnp
jae
pop
xchg
movsl
insb
xor
pop
cmc
in
cmc
dec
mov
xchg
pop
pop
popa
std
ret
aam
jle
xchg
test
jge
inc
push
pop
xchg
push
lcall
and
xor
jne
test
addr16
push
adc
mov
cli
sub
cmp
fldt
sbb
xchg
xor
roll
cmp
sub
inc
adc
leave
mov
push
lcall
jecxz
or
outsb
adc
icebp
leave
in
dec
add
xchg
fwait
pop
jmp
xor
jl
lcall
adc
loopne
cmp
sub
jg
and
dec
cltd
inc
clc
pop
js
jne
add
xchg
pop
pop
pop
pop
adc
mov
loope
bound
lods
cltd
movsb
and
xor
sidtl
xor
add
xchg
fcomp
mov
push
mov
push
mov
out
jp
stos
mov
inc
repnz
mov
movsl
jbe
dec
jecxz
xchg
jg
mov
lods
cli
pop
push
jge
sub
stos
mov
testl
mov
push
hlt
dec
adc
push
inc
aaa
std
xchg
push
sbb
fdivs
fidivrs
negb
cmp
xor
and
mov
sbb
cmc
or
xchg
mov
int
out
jl
es
xor
ret
xchg
fisttps
mov
mov
cmp
pop
mov
cmc
sub
jo
inc
jo
mov
jge
test
pop
ja
out
and
divb
mov
push
cli
jle
lcall
pop
dec
cmp
outsl
add
loop
ficoml
jp
imul
xchg
mov
jbe
jb
push
aaa
or
cmc
add
test
xor
outsb
mov
and
inc
bound
cmp
ja
adc
sub
push
sub
cwtl
lahf
shlb
jl
in
xorb
mov
push
lock
inc
mov
arpl
clc
outsb
push
xchg
test
jmp
add
inc
int3
and
cmp
add
test
push
mov
add
sub
jae
xchg
pop
and
test
cmp
add
into
jmpw
push
push
js
movsb
dec
sbbb
jo
ljmp
ffree
outsl
arpl
jnp
push
idivb
out
push
leave
ds
loopne
mov
divb
sub
aas
pop
jg
mov
push
xor
xor
jle
mov
in
out
out
loopne
xor
ds
stc
lea
scas
sbb
leave
mov
out
xlat
jb
inc
sarb
mov
sbb
dec
add
push
xchg
les
mov
dec
cs
scas
and
push
push
call
stos
popa
out
ds
mov
cmp
sub
loope,pt
pop
mov
sti
add
out
cmc
out
test
jmp
mov
xlat
mov
inc
into
jge
sub
lds
pusha
popa
aaa
pop
cltd
cmp
rcll
jo
je
inc
out
push
pop
pop
lahf
sub
jge
jg
in
mov
mov
in
jp
cmpsb
pop
sbb
adc
jmp
or
scas
mov
sub
loop
inc
lea
imul
cs
jle
aaa
push
add
es
mov
inc
or
sti
jecxz
and
dec
in
sbb
ja
jle
ja
inc
fiaddl
xchg
push
pusha
jl
mov
xchg
ret
add
sub
bound
sbb
subb
movd
push
jmp
xchg
orb
mov
jb
mov
stc
fucomip
aad
pusha
mov
inc
fisubl
imul
fisubl
filds
and
cld
and
test
jno
das
clc
imull
jmp
sbb
stos
subb
repnz
mov
lock
scas
aaa
pop
jno
int
mov
xor
xor
ret
jmp
mov
mov
fidivrl
insb
cmp
cld
lcall
xchg
repnz
cmp
popa
imul
inc
xchg
pop
pop
in
cmp
lock
jb
push
xor
ds
cltd
dec
push
inc
paddq
repnz
cld
jle
jnp
xor
mov
lods
xchg
pop
lds
lock
inc
inc
pop
int3
mov
imul
shlb
mov
mov
insb
jp
ret
test
loop
mov
jmp
sbb
ret
ljmp
roll
jb
or
adc
jp
bnd
mov
push
push
ljmp
push
les
pop
das
or
push
fcoml
push
xchg
nop
test
pop
std
push
ret
stc
jle
jns
stos
hlt
inc
movaps
add
push
cmp
shrb
orb
sub
dec
mov
mov
inc
dec
insl
shlb
or
and
es
and
int
repnz
dec
ret
or
lret
sti
leave
add
imul
sub
loop
sub
cmpsl
pop
popa
lods
add
jp
jnp
les
adc
jg
sub
outsl
adc
data16
inc
cli
enter
sbb
or
sub
es
dec
int
inc
xlat
clc
repz
and
inc
ror
roll
je
jmp
mov
inc
pop
insl
jmp
cmp
sub
mov
xchg
pushf
aaa
pop
push
shll
inc
test
roll
in
or
jp
data16
dec
jecxz
outsb
mov
mov
xlat
mov
out
lcall
test
add
jo
cmp
es
into
inc
push
pop
push
push
rcl
or
sub
das
push
pop
dec
jbe
mov
test
jp
lret
mov
test
pushf
push
or
jle
inc
sub
jns
fsubrs
pop
fistpl
jmp
jp
arpl
pop
loop
mov
ret
sbb
xchg
repz
testl
sub
push
lds
shl
jmp
push
push
loopne
xchg
jmp
cwtl
adc
fisttpll
or
frstor
les
sub
push
or
xor
cmpsb
out
hlt
in
jns
dec
stos
and
push
cmp
mov
sub
inc
jmp
punpckhbw
push
mov
sti
mov
add
rclb
sub
xor
and
lock
daa
mov
pop
ficoms
inc
jle
das
rolb
ror
push
and
xchg
xor
cmp
jno
inc
js
addb
inc
jb,pn
push
stos
mov
fs
and
fdivl
orl
out
mov
icebp
and
mov
pop
and
arpl
notb
sbb
test
push
mov
mov
or
inc
popf
xlat
jge
pop
sub
std
idivb
popf
jb
in
jo
fidivs
and
mov
lods
hlt
lahf
outsl
rep
push
pop
lret
jnp
mov
add
leave
jns
imul
sub
imul
ja
mov
jns
stos
push
scas
inc
call
int3
cltd
dec
mov
sbb
imul
ss
and
ss
adc
sbb
mov
xor
cmp
icebp
aaa
or
cwtl
adc
aam
jo
push
dec
notl
or
push
add
popf
stc
push
lock
test
lds
inc
sbb
scas
xchg
pusha
push
jb
arpl
repz
dec
add
test
jae
xchg
xchg
dec
push
ss
xchg
or
jns
jp
shrb
sub
lds
daa
mov
test
aad
add
adc
push
in
stos
lea
aam
and
faddp
js
sahf
lret
aaa
xchg
push
xor
lret
iret
push
pop
xlat
jns
notl
jle
pop
nop
sti
shll
bound
jge
mov
out
ss
imul
mov
mov
or
xchg
lods
dec
adc
insb
add
test
popa
es
and
stos
xchg
mov
outsb
les
push
mov
mov
or
dec
ja
dec
es
aaa
lret
cmp
stc
cmc
xor
and
inc
push
xchg
push
sarl
in
jb
lds
shrb
push
mov
aaa
into
lea
gs
shl
jle
ds
je
sub
sub
lcall
fimuls
push
js
push
xor
dec
ficoms
fnsave
adc
sar
mov
or
nop
test
lea
jno
mov
adc
scas
pop
rorb
push
shrl
jge
xchg
adc
loop
movsb
xor
es
stc
sti
scas
mov
xor
shll
sti
push
jne
dec
push
mov
cli
add
push
outsl
cmc
sub
rcrl
sbb
xchg
addb
out
aas
movb
decb
or
inc
push
sbb
lcall
insl
jnp
xor
sar
jg
mov
lcall
imul
daa
es
stos
sarb
std
and
stc
xor
fildl
ljmp
jae
inc
stos
pop
sub
shl
xor
aas
sub
and
popa
jae
dec
pop
mov
sbb
outsl
inc
pop
sbb
jbe
sbb
adc
rclb
mov
cmc
sti
fistpll
and
adcl
iret
pop
pop
aam
sub
ds
ja
lcall
lahf
xchg
and
mov
cmp
inc
daa
aam
lcall
or
pushf
mov
xor
mov
or
int3
int
xor
pop
push
xor
shlb
data16
es
clc
jno
ds
fdivrl
pop
ljmp
mov
lods
mov
cmpsl
pop
xor
mov
jl
inc
test
sbb
fisubs
xchg
daa
lds
or
imul
mov
lcall
and
push
lcall
insb
and
cltd
subl
add
inc
ljmp
insb
push
pop
jo
cmpsb
mov
sbb
mov
cmp
idivl
mov
xchg
mov
ret
jecxz
push
das
ret
and
xor
sbb
cmp
cwtl
push
outsb
lock
mov
cwtl
mov
lcall
and
push
cmp
pop
push
imul
out
xor
jb
cmp
int
jbe
add
add
popa
adc
stos
xchg
cmpsb
mov
insl
xchg
cmc
xchg
push
popf
adc
xchg
rorl
lods
enter
jo
es
cmp
jle
negl
mov
dec
lds
and
push
inc
lods
hlt
mov
or
sarb
lret
and
inc
pop
das
sub
jmp
sbb
mov
cli
outsl
sbb
xor
and
daa
popf
test
jmp
inc
jge
les
cwtl
dec
mov
sbb
lcall
xor
push
imul
in
das
stc
mov
pop
sbb
mov
pop
icebp
push
mov
inc
xor
jle
mov
mov
push
mov
std
add
imul
fistpll
cmpsl
into
push
xor
xor
xor
or
jl
movsb
out
movsb
fiadds
jns
incl
xor
mov
stos
jb
jmp
dec
cmp
pop
rcll
jle
pop
rclb
push
cmp
adcb
push
insl
divl
sub
pop
jbe
xor
push
mov
sarb
push
mov
sbb
fidivrl
out
ret
sub
adc
jge
mov
jns
js
movsl
mov
mov
shrb
decl
jns
inc
sti
sub
cmpl
adc
ljmp
ljmp
popf
sbb
je
aad
push
mov
rolb
dec
xor
test
outsl
cwtl
shrb
test
sub
xchg
dec
mov
mov
sbb
add
dec
pop
mov
lcall
incl
push
mov
mov
in
push
jne
jns
xor
imul
incl
rcl
jle
mov
cmp
jmp
jo
jns
cltd
inc
popf
aam
loop
ss
mov
stos
inc
aas
imull
stos
iret
stc
inc
ja
dec
inc
ret
mov
jbe
add
jg
add
imul
stos
jecxz
pushf
in
push
or
loop
or
sahf
in
jmp
sub
loopne
dec
bound
cmpxchg
mov
sub
xor
stos
test
fdivrp
das
mov
jmp
clc
jns
mov
jnp
jb
or
or
addl
dec
out
mov
jae
mov
xchg
lds
aad
mov
mov
mov
cli
push
jp
and
sbb
xchg
lcall
or
scas
lahf
or
mov
shlb
pop
and
lds
or
push
arpl
push
xchg
aam
jae
outsb
ja
pop
jb
lock
je
jnp,pn
jp
or
mov
test
push
inc
rclb
pusha
fbld
enter
mov
jmp
adc
sahf
sub
loop
dec
out
negl
lcall
sahf
push
dec
sbb
jno
adc
mov
adc
add
sbbl
cwtl
das
mov
jae
rcll
jae
aad
push
jbe
ret
insb
cmpsb
jo
jbe
das
xorl
cli
push
orps
xor
pop
lcall
jecxz
sub
cmp
test
notb
cmp
and
mov
insl
xchg
push
repz
sahf
sbb
pusha
in
pop
and
inc
sbb
pusha
xchg
repnz
call
add
das
add
jno
jne
dec
daa
mov
mov
mov
jmp
cli
sub
xchg
inc
lock
js
xor
push
jmp
sarl
fimull
sub
dec
push
jg
in
popa
stos
repnz
jp
cltd
mov
push
add
bound
push
subl
sub
push
shll
xchg
sub
aaa
mov
sub
push
inc
leave
mov
mov
jae
push
out
push
xor
xchg
sub
es
sbb
nop
mov
or
mov
imull
adc
in
and
push
jp
mov
inc
xchg
repnz
push
or
cltd
dec
xchg
push
or
xor
sbb
rorb
push
xchg
je
je
fnstenv
push
sarl
adc
rcll
and
push
out
sbb
shrb
lea
outsl
je
cmp
idivb
add
stos
sbb
xchg
xor
aas
xor
das
ret
popa
push
std
dec
push
imul
and
into
and
push
stos
pop
jle
xor
sbb
scas
call
lds
and
aad
mov
jae
stc
js
jmp
push
and
adcl
add
xchg
dec
xor
sub
dec
das
lret
inc
imul
aaa
loopne
sub
sbb
mov
push
cmp
arpl
mov
lock
call
std
mov
xor
add
in
add
pop
out
mov
push
loop
int
and
orl
loopne
jp
fistps
bound
outsb
insl
jnp
and
ret
mov
in
pop
jns
add
in
jl
pop
into
cmp
lret
jb
hlt
inc
mov
mov
out
xor
push
push
or
in
in
movsl
and
mov
jb
imul
pop
cmp
aaa
in
jne
mov
fnstenv
lret
mov
adc
inc
fwait
xchg
push
es
mov
or
cmp
mov
cmpsl
lret
sub
sub
inc
inc
hlt
and
lcall
cs
or
nop
popa
jns
sbb
jle
dec
jno
or
dec
and
movsb
aas
xchg
sbb
cs
lds
push
pop
rolb
xor
out
enter
in
pop
cmpl
push
pop
cld
popa
xchg
jg
pop
dec
scas
arpl
stos
pop
hlt
adc
add
sub
sub
cmc
jle
add
aas
pop
lret
and
pop
insl
jp
addr16
leave
inc
mov
mov
push
jo
push
xchg
add
popf
std
shrl
dec
pop
mov
dec
call
bound
in
and
pop
sbb
cmc
aad
lea
jp
shlb
cmovp
es
and
data16
dec
idiv
dec
pop
std
scas
cmp
push
rcrb
or
pop
js
out
fisubs
shll
addl
sbb
imul
pop
jbe
cmp
xor
mov
pop
out
cmpsb
mov
xchg
cmp
sbb
popf
mov
jb
mov
iret
into
lock
jo
push
outsl
insb
and
adc
ss
lcall
mov
mov
fsts
decl
cmp
lock
mov
push
js
adc
xor
mov
sub
stos
icebp
movsb
loop
mov
fimull
in
aaa
inc
mov
xor
jmp
and
jmp
and
popa
lahf
movd
mov
outsl
lods
xor
push
adc
xchg
mov
xor
mov
ret
lods
push
cmpb
mov
sti
cmp
add
mov
xorb
pop
cmc
xchg
add
rol
mov
or
adc
cmp
pop
repnz
pop
sbb
mov
ja
and
lds
popa
aad
cmc
cmp
push
inc
adc
add
lret
ds
sub
aam
cmp
cmc
out
fistpll
dec
ds
add
push
xor
lock
outsb
mov
cmp
or
jnp
or
mov
sub
push
ret
jns
icebp
add
lds
cmp
jge
mov
jp
js
call
mov
insl
cmp
sub
inc
and
sub
adcl
or
out
lcallw
xchg
jns
sub
mov
xor
sbb
and
pop
insb
inc
xchg
fdivrl
sub
pusha
enter
int
push
loope
lea
insb
das
aad
loopne
rolb
xchg
hlt
xor
cli
push
call
aas
pusha
and
xchg
xor
push
aaa
lret
fs
xor
repnz
dec
in
dec
negl
shrl
lcall
mov
jnp
jl
jecxz
or
pop
mov
jnp
add
shll
test
sub
sub
lock
fs
sbb
lock
cwtl
sbb
pop
incl
push
sbb
in
in
pop
aaa
shrl
scas
enter
inc
decb
push
push
fildll
push
add
push
jecxz
ficoms
ds
mov
jbe
jle
fdivrl
sti
sbb
pop
pop
sbb
jno
push
bound
push
jg
pop
nop
pusha
pop
cmp
in
in
inc
ljmp
push
lcall
push
testb
pop
bound
pop
ficomps
or
push
out
insl
iret
pop
pop
stos
icebp
mov
jge
mov
and
inc
mov
leave
loope
jbe
dec
add
sub
sbb
insl
push
push
in
pop
shl
jb
mov
sub
and
push
out
sahf
das
pop
es
insl
das
stc
in
lods
imul
fisubrs
icebp
jp
ja
data16
adc
divb
fs
inc
sti
int3
or
or
push
je
idivl
cmpsl
jnp
lcall
push
in
push
outsl
inc
nop
insb
lss
imul
pshufw
and
inc
outsl
aas
jp
xor
jmp
bound
fcoml
push
mov
mov
imulb
sub
push
lds
push
lds
scas
and
imul
outsb
push
sbb
jmp
jno
movsb
push
inc
pop
gs
mov
add
stos
daa
and
loop
test
arpl
out
jb
jle
push
lret
jb
cld
pusha
sbb
lock
and
dec
mov
paddsw
fisubrs
xchg
out
mov
and
mov
pushf
data16
clc
jnp
mov
mov
xchg
jbe
int
sbb
jno
clc
jbe
aaa
or
ret
fimuls
aas
rorl
push
or
inc
pop
leave
push
push
sbb
xchg
out
lret
test
clc
lret
push
mov
push
push
pop
push
ljmp
jbe
sub
push
jg
das
jb
idivb
mov
cltd
jae
inc
idiv
jb
ss
mov
mov
or
jo
movsb
jno
jne
rcrl
repnz
mov
cmp
inc
das
imul
jne
in
dec
fiadds
aad
pop
lock
xor
lods
inc
xlat
stos
int
out
or
cmp
dec
sbb
add
push
dec
jo
jns
push
and
mov
cltd
int3
bound
mov
loopne
pop
mov
mov
push
adc
pextrw
dec
insb
sbb
xor
cmpl
orl
addb
stos
inc
sub
lods
mov
push
outsb
inc
mov
aaa
push
fstpl
insb
mov
bnd
lcall
std
punpckhwd
call
stos
out
aas
divb
mov
push
xchg
shr
mov
jg
lock
and
dec
cltd
testl
mov
jle
cltd
adc
out
test
insl
ffreep
mov
fiaddl
cmp
insl
or
rolb
je
mov
js
cltd
je
xor
pusha
divl
inc
xchg
std
mov
bound
dec
fiadds
jle
cmp
mov
xchg
fidivrl
adc
sub
sub
outsl
push
cltd
push
daa
xchg
xchg
pop
mov
mov
xor
addr16
inc
xchg
xchg
or
roll
pop
stc
lea
cld
xchg
jno
xchg
sbb
push
test
xchg
adc
icebp
push
outsl
aad
cmp
add
sahf
jo
add
insl
bound
jp
cmpb
test
pop
mov
rcll
dec
xor
sub
shrl
jle
push
bound
int
addr16
xchg
andb
xchg
mov
in
shrb
ljmp
xchg
cmp
jp
dec
mov
sahf
jg
jle
jge
jg
jnp
or
subl
cmp
imul
sub
push
shll
fistpl
inc
sub
cmp
push
sub
out
sub
jmp
int3
add
repz
mov
movsb
pop
xor
rcrb
int
sbb
pop
adc
andb
add
jae
add
ds
ss
scas
rcrl
lods
inc
mov
pop
bound
ja
xor
push
xor
jnp
mov
lcall
or
jae
sbb
mov
pop
cmpsl
adc
add
cmp
call
scas
cmp
sub
and
sahf
jp
fnstcw
add
call
lcall
ss
pop
and
inc
jnp
jle
sbb
xchg
add
aad
sahf
push
dec
mov
inc
test
add
sbbb
lcall
ds
into
inc
push
mov
xor
fcomps
mov
in
inc
clc
sub
pop
enter
xor
insb
pushf
mov
xchg
insl
testl
loop
xor
mov
mov
ljmp
hlt
xor
pop
stc
js
inc
cld
loope
std
pop
mov
outsb
or
xor
fidivs
out
cmp
in
aad
fstpl
rcrb
clc
xchg
push
loop
lea
jo
pushf
leave
pop
and
popa
push
xor
cmp
add
pop
xor
shlb
pop
or
jle
rcrl
out
pushf
outsb
movsb
pop
jle
add
mov
pop
dec
mov
in
dec
ljmp
jo
pop
fdivrl
mov
in
jo
add
jmp
repz
neg
push
push
and
hlt
ja
loopne,pn
push
jp
xor
mov
popf
int
pop
lds
ljmp
xchg
jp
pop
jo
push
lcall
aad
xor
adc
and
cwtl
dec
jnp
cmp
pop
add
inc
pop
mov
das
lods
pusha
xbegin
or
push
jle
add
or
pushf
jecxz
mov
inc
outsb
outsb
mov
in
xor
sub
inc
mov
jno
mov
jbe
mov
sub
pop
testl
pusha
into
ret
mov
mov
inc
push
adc
or
ret
mov
je
dec
push
jo
jp
inc
inc
mov
mov
adc
fiaddl
jp
jo
pop
out
xchg
mov
push
pop
jmp
mov
mov
mov
pop
sbb
pop
mov
sahf
mov
cmp
out
es
pop
scas
repz
nop
adc
movsl
and
dec
outsl
lods
mov
jb
push
inc
add
lcall
jp
mov
sub
int3
aam
clts
std
leave
sub
adc
in
adc
add
sbb
call
add
and
sub
jb
jb
jmp
pusha
outsb
push
mov
xchg
daa
mov
lock
sub
stc
cs
rcr
pop
outsb
and
leave
jae
lds
shlb
mov
cltd
aam
adc
fldpi
addr16
pop
test
push
ss
mov
mov
mov
popl
gs
imul
push
dec
bound
lock
fdivrp
imull
mov
push
out
ds
xor
imul
pop
shll
jae
stos
cmp
inc
jle
jge
sub
loop
jge
ret
sub
xchg
adc
dec
fmuls
sbb
sub
js
imul
pusha
repnz
xor
loopne
pop
sub
sarl
mov
aam
loopne
adc
out
and
mov
cmpsl
scas
mov
insb
jmp
pop
imul
mov
add
jbe
sbb
leave
jp
negl
ficomps
xor
mov
fdivl
jg
adcb
jns
js
ljmp
jl
xor
xor
mov
addr16
int
push
sub
out
cli
fs
test
jns
sti
outsl
ja
pop
cmpsb
ds
fprem1
stc
push
mov
outsb
push
jg
adcb
stos
imul
mov
mov
sahf
aaa
jns
lods
bound
push
enter
ftst
push
out
dec
jne
jne
adc
pushf
inc
lret
fiadds
jp
jge
mov
mov
mov
push
test
add
dec
jae
push
cmc
add
push
jbe
loop
xchg
jge
cmp
imul
lds
lret
dec
jns
mov
adc
stc
sub
or
std
pop
xor
int3
mov
adc
cli
inc
sub
xchg
std
mov
mov
jo
nop
shrl
or
dec
xlat
push
inc
jmp
dec
es
mov
xchg
push
stos
ljmp
xchg
jbe
stc
enter
xchg
jne
jnp
jle
test
mov
xchg
lea
pop
and
loopne
mov
add
cmpsl
push
jns
push
sub
xchg
pop
sub
popa
sbb
insl
stc
push
pop
adc
and
sub
lcall
jo
push
andl
push
add
sti
xor
in
daa
repnz
loope
dec
dec
jbe
inc
xor
push
jp
dec
cmp
push
add
enter
or
in
cmpb
out
pop
dec
jns
jg
pop
ljmp
xchg
mov
repz
popa
dec
push
in
sbbb
out
out
std
pop
cmpsl
add
sub
test
popa
outsb
dec
lcall
push
mov
push
aaa
pop
stos
push
mov
jb
dec
mov
xchg
outsb
add
ss
xchg
pushf
call
jo
cltd
dec
pop
mov
enter
sub
and
out
jg
xchg
popa
push
and
aam
addr16
jl
add
ja
call
jo
sub
fldt
xor
popa
mov
cmp
sarb
insb
lods
cmc
sub
popa
daa
aas
outsb
push
xchg
jo
test
xor
loope
or
test
aam
fisttpll
mov
push
outsb
outsl
push
push
stos
jb
push
sbb
push
pop
aas
sub
or
and
pop
or
xor
push
or
dec
xchg
in
dec
inc
add
and
insb
inc
scas
pop
pushf
ja
jle
push
and
push
xchg
sub
mov
pop
stos
dec
cltd
popa
xchg
in
dec
mov
jp
dec
hlt
jno
jno
xorl
sub
cld
push
xor
inc
add
popf
cltd
xchg
mov
fisubrs
lret
or
xchg
mov
cld
pop
aad
in
push
jo
and
mov
bound
jo
dec
pusha
xchg
push
jle
mov
inc
cli
insl
outsl
mov
jp
jo
mov
movsb
jo
lods
pop
or
sub
dec
mov
push
jl
fstpt
pop
sub
cmp
xchg
sub
int3
push
jecxz
lds
mov
testl
adc
mov
xor
insb
lcall
add
mov
movsl
and
xchg
adc
xchg
cwtl
xchg
and
push
jo
pushf
shrl
movsb
xlat
xchg
js
or
adc
inc
sub
mov
lahf
mov
int3
pop
lods
fdivs
dec
fistpl
ja
xor
sbb
shl
decl
push
lds
push
in
out
jo
jno
push
xor
xchg
xor
test
push
sub
sbb
adc
lds
outsb
sbb
aam
decl
jae
mov
in
mov
jle
clc
icebp
xor
popa
in
push
movsb
pop
ficompl
cltd
insl
inc
dec
jb
shlb
xchg
pop
imul
sbb
ds
push
pop
cltd
mov
leave
cmp
repnz
loope
ficoms
hlt
jo
xchg
mov
push
inc
jg
mov
dec
dec
lods
test
pop
sub
insb
je
test
adc
inc
shl
movsb
mov
pushf
mov
inc
pop
dec
sbb
ds
xor
cmpsb
in
inc
in
out
neg
xor
push
push
fsubrs
mov
lods
sub
jecxz
imul
fstpt
in
js
ss
jle
jno
sub
add
lock
or
inc
in
in
push
icebp
pop
mov
inc
sub
add
cltd
adc
jae
and
in
and
cmp
and
sub
ss
mov
inc
in
sbb
cmp
mov
mov
mov
je
in
jo,pn
arpl
loopne
insb
aas
and
jae
pop
jno
je
sbb
push
mov
pop
inc
pop
push
lock
fdiv
fs
xorl
add
cmp
pop
pop
xor
cmp
sub
dec
push
pop
dec
inc
xchg
bound
mov
cs
sbb
push
sbb
repnz
fcoms
inc
negb
sub
push
and
add
in
xchg
dec
jmp
mov
movsl
jge
push
sub
push
out
stc
imul
out
orb
repnz
ds
push
inc
jmp
add
jo
pop
cmp
out
js
jns
or
in
jns
ds
stc
mov
in
les
mov
push
xchg
pop
idivb
popa
jbe
syscall
inc
mov
outsb
jl
pop
clc
jnp
mov
mov
jne
jno
andb
lcall
movsl
cmp
pop
je
insl
test
mov
jb
jg
addps
stc
ret
sbbl
das
outsb
lcall
repnz
sub
lods
pop
add
lcall
xor
mov
es
jo
xchg
scas
pop
and
mov
icebp
test
add
jl
ja
stos
push
dec
jl
pusha
loop
add
and
insl
mov
adc
inc
mov
lods
hlt
inc
icebp
mov
loop
test
lods
sub
sbb
repnz
xorb
push
jge
pushf
mov
push
add
stc
and
jl
outsl
jns
lcall
cmpsb
pop
jmp
bnd
jne
lcall
push
inc
sbb
pop
lcall
dec
add
pop
pop
sub
bound
fnstcw
idiv
lcall
xor
xorb
lret
sub
lods
mov
push
aas
jne
sub
dec
pop
outsl
add
mov
mov
adc
jge
lcall
jl
xor
push
std
push
cmc
cmp
pop
out
sub
insb
xor
mov
das
xchg
divl
mov
in
cmp
sub
xor
stc
xor
jae,pt
mov
js
test
cmp
cmp
cmp
adc
dec
pusha
push
imul
popa
data16
jno
push
pusha
jl
adc
inc
sub
push
imul
jns
adcb
push
pop
inc
pop
sbb
xchg
cmpsb
pop
add
adc
in
cmp
pop
out
jp
int
dec
and
jmp
xlat
popa
pop
shl
xor
jge
sti
neg
dec
xor
outsb
push
jl
inc
subb
insl
fdivrs
or
mov
mov
jge
dec
outsb
mov
jmp
push
jbe
into
sub
sub
ja
dec
xchg
lock
cmp
inc
cmp
jmp
pop
inc
pop
add
mov
lret
daa
hlt
jle
fdivrl
push
stc
sub
pop
xor
push
dec
mov
leave
cmp
dec
ja
mov
in
repnz
lret
push
sbb
test
or
fidivs
es
mov
pop
imul
repz
or
test
or
gs
mov
xor
cmc
adc
dec
jmp
repnz
lcall
push
stc
sti
push
jb
push
mov
xor
push
outsl
and
mov
outsb
add
mov
xchg
jne
addr16
xchg
shlb
lcall
inc
sahf
mov
mov
mov
ss
insb
out
aad
cmp
mov
cltd
iret
inc
bound
lcall
ret
xchg
int3
mov
jle
or
mov
sub
cmc
test
fcomi
jmp
mov
icebp
mov
jmp
cmp
and
data16
arpl
adc
out
fidivl
divb
stc
das
mov
insl
cs
gs
cli
push
movsb
pop
scas
stc
gs
sub
inc
jge
addb
sbb
es
push
jno
aam
dec
sbb
mov
mov
mov
dec
outsl
mov
pop
add
shlb
cli
jmp
cmpsl
ds
and
sub
cmc
sbb
inc
sub
xchg
loop
jbe
push
insb
testl
push
inc
daa
icebp
daa
das
xor
cvtdq2ps
test
stc
push
push
cmc
push
pop
sbb
scas
adcl
pop
xor
jmp
sbb
and
adc
cmp
stos
popf
stc
jo
jno
mov
jge
test
das
outsl
pop
sbb
addr16
sub
jbe
hlt
gs
stc
in
fisubrl
clc
push
jbe
outsb
fdivp
mov
test
dec
mov
lahf
lcall
cmpb
scas
jle
fs
jge
les
jl
add
popf
and
adc
daa
fsubrp
push
and
xor
lcall
outsb
jae
jge
jp
push
pop
xor
call
push
test
mov
push
idivl
jge
adc
cmpsb
cmp
loop
inc
pop
scas
add
gs
add
mov
in
leave
pop
sbb
repnz
dec
imul
jl
inc
jecxz
add
lods
adc
ret
test
cltd
popa
jg
repz
pop
jle
xor
mov
push
mov
je
mov
jo
inc
shrb
cltd
rolb
sub
movsb
push
inc
adc
push
dec
jge
sub
push
and
inc
add
insb
ds
push
inc
mov
or
lods
add
inc
mov
js
jb
mov
dec
sbb
xor
adc
or
ret
aad
jno
jle
pop
sarb
mov
add
mov
stc
shlb
push
iret
sbb
lock
push
cmc
das
leave
xor
xor
into
cmp
imul
test
xchg
pop
inc
fnstcw
xchg
add
sub
dec
adc
bound
lcall
fadds
dec
jmp
pop
mov
push
push
and
xor
outsb
ja
jle
push
call
pop
inc
and
pop
fidivl
cmp
sbb
insl
jb
hlt
xchg
mov
push
incl
mov
sbb
jns
lret
cmp
push
jns
insl
stos
cld
in
mov
lret
pop
sbb
add
pop
pop
cmp
cmpsb
cld
in
xor
adc
jmp
xchg
dec
sub
ss
movups
xor
xchg
xchg
mov
test
dec
mov
mov
mov
lcall
stc
je
sub
xor
mov
lret
fisubs
adcb
mov
jno
js
xor
pusha
adc
scas
and
xchg
lea
sub
pop
insb
psllq
shl
xchg
jmp
cwtl
push
int
inc
add
push
jmp
imul
outsl
sub
ret
sbb
sbb
jge
xchg
rorb
mov
push
jmp
outsb
push
je
add
cmp
adc
and
negl
mov
lock
nop
pop
shlb
test
scas
pop
out
fadds
imul
pop
aad
int
add
rolb
fnstsw
push
xchg
out
lcall
pop
jo
cmp
and
ret
jnp
adc
jl
mov
test
imul
mov
pop
stc
aam
mov
jo
dec
imul
dec
dec
cwtl
jo
cli
loopne
rolb
jns
and
push
mov
push
bound
inc
jo
lcall
jno
iret
aaa
int
insl
out
lret
push
ret
inc
ret
fidivs
cmp
rolb
add
lock
daa
in
ss
xor
jne
add
loope
lret
jp
xchg
push
jle
jae
test
pop
push
pop
into
in
mov
fsubrs
jp
nop
xchg
mov
jne
mov
sbb
mov
mov
jae
ja
test
add
cmp
inc
mov
gs
ja
ss
sbb
lcall
fstl
aad
pop
push
push
adc
jp
repz
pop
mov
insb
repz
push
adc
repz
cld
jbe
aam
and
aam
cmp
jecxz
cltd
insl
jns
and
or
push
in
and
inc
cmp
ja
push
test
inc
and
cmc
hlt
imulb
lds
inc
mov
or
stc
filds
dec
cli
lea
add
repnz
stc
mov
dec
fdivl
pop
cli
bound
ret
jno
jno
and
test
or
or
push
stc
insl
test
pusha
in
out
orb
data16
jns
andl
adc
pop
add
imul
jg
pop
cmp
cld
bound
into
int
add
add
shr
sbb
pop
fildl
pop
aas
in
push
push
sub
pop
xor
insb
and
jb
int
dec
lcall
mov
subl
lock
xchg
mov
test
jmp
pop
adcl
outsl
dec
mov
mov
nop
movsl
push
sub
out
jecxz
in
mov
test
rolb
jmp
dec
lock
cmp
mov
or
ds
xchg
stos
nop
jmp
dec
orb
jno
inc
enter
push
sbb
outsl
adc
mov
mov
inc
pop
cwtl
lea
in
push
mov
frstor
xor
mov
and
daa
mov
jp
stc
pop
hlt
push
icebp
adc
push
pop
mov
icebp
jno
pop
mov
into
sti
sahf
lret
in
std
sbb
gs
outsl
addr16
sarl
bound
jae
pop
mov
pop
sbb
arpl
lods
scas
cmp
jo
aad
jge
sbb
jb
in
mov
add
movsl
mov
jge
scas
dec
aam
insl
aam
cmpsb
push
xchg
sbb
jecxz
adc
xchg
adc
jecxz
inc
mov
push
sub
push
add
mov
or
test
out
cmp
cld
test
jmp
sahf
aaa
aam
fadd
fcomip
sti
mov
outsb
lret
push
repz
xor
xchg
stc
fistps
mov
jp
mov
xor
pop
subb
jl
jns
jno
roll
xchg
cli
ja
jno
pusha
aas
bound
sarl
enter
jno
rolb
pop
icebp
or
mov
stc
inc
jmp
jo
pop
cmp
jmp
jns
icebp
cmp
jns
and
lock
leave
jns
xchg
push
lret
mov
cmp
and
mov
sub
jnp
sub
jno
cmp
push
xor
cmp
les
cli
or
sbb
lret
xor
pop
cmp
push
pop
cmp
sbb
cmpsb
mov
fbstp
test
cs
sub
imul
push
sub
sbb
ja
sub
push
gs
out
orb
movsb
add
mov
arpl
xchg
or
cli
mov
jb
fiaddl
idiv
fs
push
aas
pop
mov
js
js
pop
cld
rolb
into
je
loope
je
ret
mov
mov
les
in
icebp
push
out
fistpll
pop
mov
and
xor
or
pop
out
movsl
icebp
xchg
jb
int3
pusha
cmp
daa
adc
std
jo
pop
sarl
mov
bound
int
jb
scas
std
cmp
pop
aad
insl
mov
sub
mov
insl
cmc
mov
xor
jbe
lea
ljmp
orb
inc
jp
pop
cmp
jb
call
fldenv
cmp
incb
xorl
push
cmp
cli
lcall
and
push
enter
xor
out
mov
jmp
dec
xchg
adc
insl
pop
mov
jge
aad
dec
push
shrb
shlb
sub
mov
repnz
in
add
js
int
outsb
pusha
sub
push
sub
jg
leave
loop
scas
cs
fidivl
pop
push
addr16
mov
jae
sub
ret
lcall
push
lret
xchg
icebp
jae
jne
xchg
test
pop
jbe
lds
lcall
jmp
je
pop
mov
cmp
jo
dec
leave
jns
mov
in
mov
outsb
pop
insl
pop
mov
xor
outsl
jp
testl
inc
jp
negl
jnp
add
jl
inc
jne
jge
ficompl
adc
dec
push
lret
cmp
push
stos
scas
and
dec
aas
or
in
xchg
imul
lock
adcb
inc
loope
andl
dec
cmp
ret
mov
loope
ja
lods
imul
mov
sub
scas
adcl
test
test
and
cmp
jno
es
jb
fdiv
jmp
outsl
add
or
and
jecxz
popaw
daa
icebp
jg
divl
adc
outsb
lcall
cmp
sbb
mov
sub
xchg
cwtl
pop
jbe
sub
dec
xor
dec
push
sbb
outsl
fs
imulb
bound
inc
pushf
and
jb
push
dec
mov
sti
lcall
push
jno
test
data16
jle
jp
mov
ljmp
fldl
mov
sub
adc
aad
js
push
andb
add
testb
jns
scas
enter
andb
add
push
xor
pop
pop
shlb
and
jbe
jno
cwtl
sbb
clc
cs
sbb
and
cmp
lcall
inc
dec
xorl
mov
ss
lock
dec
lea
add
mov
push
das
fadds
pop
sub
sbb
push
push
push
aaa
je
sub
adc
xor
data16
mov
js
jge
gs
pop
sbb
stc
les
scas
jne
mov
fisttpll
mov
bnd
mov
xchg
imul
pop
fidivrl
pop
lcall
mov
mov
jb
fsubrl
ret
notl
popa
outsl
xor
lods
std
cltd
and
jo
lret
repnz
lcall
dec
cmpsl
pusha
movsl
bound
mov
sbb
mov
lcall
sub
dec
jb
cmp
push
inc
jo
and
std
push
rcrl
sub
pop
sti
or
out
xor
icebp
fidivrl
jne
cmc
repz
fisttpll
xchg
cmp
jo
std
cmp
adc
repz
fsubs
xchg
cmp
fsubrs
inc
cmp
inc
pop
imul
pop
fidivrl
xchg
mov
popf
pop
bound
jnp
dec
popf
loope
jl
pop
aas
popf
push
cli
pop
and
divl
mov
push
ds
lds
repz
mov
jmp
xchg
mov
jg
rcll
aas
xor
mov
pop
sub
scas
mov
cmc
cmp
and
jmp
das
lock
inc
mov
xchg
jp
cwtl
or
mov
shlb
test
repnz
mov
push
xchg
or
cs
xor
and
fsubr
push
movb
mov
jns
xor
cld
xor
xor
lock
and
cmp
test
leave
lods
sbb
fdivrp
jp
mov
jge
fwait
cmp
lret
lcall
ja
and
outsb
mov
outsb
sub
ja
jl
call
dec
lret
add
lahf
jmp
push
test
je
mov
jno
jge
cmp
or
xor
negb
fmul
aas
stc
pusha
ss
in
std
mov
ja
xor
adc
xor
push
push
jns
movsl
daa
mov
ret
ret
or
sub
insb
push
cmpsb
sbb
xlat
pop
dec
adc
push
cmp
ss
adc
rsm
sbb
aas
fisubs
adc
sub
adc
mov
cmp
stos
pop
jns
bound
icebp
inc
popa
cmc
jno
pop
xor
repz
imul
push
in
dec
jg
jb
loop
out
xchg
clc
sub
shl
punpcklwd
inc
lret
std
icebp
popa
bound
jne
push
push
cli
lods
push
popa
inc
push
movsb
mov
ret
push
pop
sbb
das
jecxz
xchg
adc
mov
pop
test
push
int
out
scas
ret
mov
inc
insb
mov
shrl
dec
pop
dec
test
enter
push
mov
jle
push
cmc
outsb
lods
lds
sub
decb
mov
loop
ret
fiadds
gs
add
pop
mov
int3
push
pcmpeqw
imul
fidivrs
add
sub
push
inc
lahf
jo
mov
gs
push
dec
mov
sub
imul
inc
loopne
xor
in
bound
sub
enter
cmp
mov
jle
sbb
stos
push
adc
pop
jp
dec
sub
sbb
push
xor
xor
loopne
or
subl
mov
jo
aas
dec
xchg
mov
jb
mov
int3
and
lock
hlt
aaa
js
addl
jmp
sarb
mov
bnd
mov
addb
dec
push
cltd
push
mov
push
add
jecxz
xor
rcll
fstps
jle
mov
movsl
mov
divb
and
sbb
out
mov
stos
cmp
push
xchg
cmp
mov
cmp
andb
fmulp
int
pusha
rcr
xchg
js
jbe
aam
je
mov
sub
mov
pop
mov
sbbb
push
sub
push
pop
daa
add
sbb
dec
popl
inc
xchg
sahf
xchg
imul
add
cltd
xor
xor
dec
inc
ss
pop
or
cmc
int
ret
sub
sahf
and
out
aad
jo
inc
imul
add
stc
xor
jno
lahf
inc
push
jmp
out
cmpsb
jecxz
icebp
xor
jle
push
push
mov
add
adc
add
push
xchg
out
lahf
sbb
mov
movsl
repnz
adc
xor
xchg
sbb
int3
add
xchg
xlat
and
jb
or
lret
push
ds
dec
or
fcoms
jno
sub
adc
inc
shlb
cmp
inc
in
int
in
jo,pn
xchg
jp
outsl
dec
mov
pop
and
lods
mov
js
loopne
sub
stos
xor
lock
imul
fwait
or
hlt
sarb
pop
pop
jno
out
pusha
jnp
lea
mov
jae
mov
xor
mov
loope
add
xor
xchg
and
es
lods
adcl
or
imul
ja
idivl
es
pop
and
test
mov
pop
cmc
cs
fdivr
js
idivl
sub
push
mov
pusha
dec
push
inc
repnz
sub
push
mov
pop
push
stos
shr
test
out
imul
pop
sbb
add
jae
mov
jg
mov
das
and
pop
mov
lock
xlat
jp
addb
mov
fcomp
sub
adc
ds
lock
xchg
xor
mov
xorb
xchg
jo
cmpsb
push
jno
pop
adc
into
popa
mov
and
das
out
push
jmp
xor
aad
add
sbbl
hlt
js
jno
fists
push
adc
add
adc
mov
xor
jbe
dec
xlat
stc
shrl
sub
fstpt
cmp
adc
stos
mov
jb
stc
push
xor
lds
mov
lret
jno
orb
jns
daa
leave
sahf
ds
aam
xor
data16
mov
cld
fld
xor
imulb
int
pop
ss
add
sub
and
inc
inc
xor
cltd
xor
test
outsl
mov
mov
mov
scas
lds
inc
cmp
mov
jno
fmul
sbb
xchg
and
push
add
cltd
insl
add
jns
data16
xchg
jne
movsl
mov
cmp
and
xchg
imul
cli
mov
dec
into
jb
mov
pop
pop
jo
xchg
ret
call
or
andb
jmp
xchg
cmpb
xchg
imul
je
aas
mov
rclb
jo
xchg
jge
pop
cmp
adcb
out
sbb
push
xor
out
add
jb
or
ljmp
loopne
sub
fcmovbe
sarl
sub
sahf
test
lret
popa
cmp
aas
adc
andl
pop
dec
outsl
sub
jmp
movsb
push
out
cmp
incb
inc
jne
lcall
les
pusha
lcall
sahf
loope
or
stc
inc
push
insb
pop
or
repnz
xchg
mov
inc
inc
mov
es
rolb
test
inc
mov
jne
daa
mov
mov
jae
mov
das
pop
dec
cmpsl
sub
or
jmp
xchg
inc
aas
das
jno
sbb
and
pop
fwait
inc
xchg
mov
adc
stos
fcoml
jo
int3
push
inc
popf
cmpsb
push
jmp
std
ret
jge
jg
enter
in
ficomps
add
daa
int3
fistpll
cmpb
andl
cmp
sub
xchg
xor
adc
pop
testl
xchg
mov
cmp
ds
popa
sbb
insl
iret
mov
nop
mov
xchg
mov
ret
ss
imul
stos
scas
sbb
and
dec
rolb
push
mov
scas
push
in
fiadds
in
push
pop
push
mov
push
jp
adc
sub
loop
negl
shrl
jmp
dec
stos
jmp
adc
popa
mov
cmp
test
mov
ja
jbe
xor
cli
mov
mov
stc
std
gs
xor
daa
mov
push
mov
sub
imul
xchg
mov
addr16
dec
cmp
lods
mov
stos
pusha
js
mov
ret
decb
je
movsb
jge
cmp
inc
fwait
arpl
ja
push
mov
adc
mov
sti
stc
aas
pop
push
or
iret
sti
cli
jb
and
pop
dec
mov
popa
adc
ja
jnp
inc
and
sub
out
or
addps
stos
push
popa
cld
jb
movsl
test
mov
mov
xchg
aad
adc
mulb
sub
bound
out
xchg
shrl
pushf
cmc
rcl
stos
pop
not
jle
inc
sahf
repz
pop
fcomps
mov
and
sbb
imul
xor
imul
lret
pop
in
daa
test
loop
inc
imul
adc
pop
lret
movsl
pop
push
push
sahf
xor
push
xchg
jb
sbb
ss
push
xor
mov
xor
inc
xor
lcall
ret
into
hlt
sub
dec
cmp
test
pop
adc
jecxz
cmp
push
sbb
outsl
aas
cmp
cmpsb
rcrb
mov
je
sub
shll
push
sub
jp
mov
insb
push
nop
and
or
jns,pn
lea
sbb
and
xor
cli
cld
test
pusha
aaa
add
movsl
pop
aam
dec
rcll
outsb
mov
sbb
jns
mov
jno
sbb
adc
js
rolb
or
add
rorb
sbb
pop
sbb
and
stos
xor
aas
pop
inc
jmp
cmpsl
or
sbb
fidivs
imul
mov
mov
leave
jno
andl
xlat
aaa
xchg
xchg
xchg
call
push
inc
orl
imul
int
mov
jne,pt
xor
jbe
inc
mov
scas
filds
ss
sbb
mov
sub
arpl
mov
sub
sub
pop
hlt
add
insl
jge
or
das
not
loopne
and
xor
in
das
into
shll
test
push
je
arpl
xor
and
das
jp
js
and
jl
xchg
insb
pop
cmpsl
xchg
fdivr
mov
mov
xchg
jecxz
dec
imul
jns
xor
dec
jle
xchg
pop
cld
fistpl
push
push
push
jecxz
scas
fimull
in
rclb
jle
imulb
xor
push
jno
pop
shll
xchg
dec
xor
xchg
adc
add
lcall
push
js
cmp
cli
mov
out
cli
cmpsl
aam
pop
iret
pop
push
mov
mov
call
mov
scas
xchg
rolb
and
dec
mov
adc
ljmp
xor
jle
ss
stos
outsl
jmp
and
jle
js
andl
and
sub
xor
mov
sub
xor
xchg
and
mov
lds
mov
cmc
loopne
test
scas
insb
cmp
pop
in
mov
add
xor
insb
inc
jle
jmp
jns
leave
aas
and
dec
and
adc
add
add
mov
sub
pop
lcall
daa
mov
js
lcall
insl
mov
adc
dec
in
jae
mov
sub
ljmp
xor
and
clc
aas
push
xor
push
cmp
stos
sbb
dec
jno
int
hlt
inc
xchg
fldl
lret
popf
push
icebp
out
push
das
bound
mov
sahf
inc
ja
andl
jb
data16
call
fcomip
pop
outsb
xchg
jp
cmp
daa
data16
mov
fs
jle
mov
sub
mov
les
xor
xor
pop
pop
into
outsb
outsl
adc
mov
dec
cli
cmp
enter
lret
out
pusha
out
pop
es
push
aad
enter
jo
or
rorl
jbe
add
add
jle
sub
es
mov
std
xor
dec
cld
cmp
clc
jmp
xchg
jle
jno
repnz
lcall
jo
jb
push
iretw
stos
push
addr16
cmp
jns
or
repz
rcll
arpl
adc
rcll
mov
test
dec
dec
test
fldl
pop
pop
cmp
enter
cmp
mov
cwtl
cltd
push
dec
cmc
push
or
mov
jle
inc
mov
pop
and
lcall
xchg
cltd
aam
out
xor
rorl
push
lods
mov
jb
xor
add
jo
xor
out
repz
jnp
dec
push
iret
das
jae
cmp
cmp
or
stc
pop
aad
or
and
rolb
and
or
push
add
push
das
iret
and
inc
inc
lcall
cmp
and
lret
dec
nop
in
jle
push
sbb
and
mov
test
js
lcall
in
lock
xor
mov
aad
jge
pop
jb
or
mov
mov
sub
pusha
mov
mov
ljmp
fdivr
jno
and
dec
mov
shlb
aas
sbb
xchg
dec
jb
inc
add
xchg
jp
insl
push
inc
shr
es
bound
sbb
push
pop
dec
mov
pop
es
dec
jns
inc
cs
cmpsb
inc
fsubrl
pusha
cld
loop
and
hlt
insl
cwtl
push
jno
sahf
dec
jle
lcall
scas
in
insl
xor
mov
shrb
mov
mov
xor
pop
cmpb
dec
testl
sbbl
mov
lahf
clc
jae
testl
cmp
jbe
iret
push
stc
sub
add
cld
xor
and
add
fldt
rcrl
mov
pop
jl
xchg
cmp
lock
shrl
jp
testl
inc
shll
dec
into
jp
mov
aaa
pop
lds
rorl
or
and
xlat
and
daa
xchg
jmp
dec
aad
xor
inc
ljmp
inc
inc
adc
ud2
jbe
xor
cmp
icebp
dec
stc
jp
push
push
cmpsl
pop
cmpxchg
push
jb
dec
stc
in
fimuls
lahf
out
aaa
fisubl
lcall
int3
andb
pop
xchg
fwait
and
push
stos
add
mov
stc
pop
les
cmpsb
in
out
inc
aam
es
and
out
shll
arpl
mov
jbe
cld
cmp
dec
dec
out
les
jp
repz
lret
lea
fldenv
js
inc
ds
pusha
push
stos
pop
out
mov
aad
outsb
incb
iret
adc
cmc
xor
sub
and
shrb
mov
cmp
push
out
test
mov
mov
insb
mov
rolb
dec
cmpsl
sbb
gs
in
les
stc
out
xor
or
mov
les
push
adc
lds
lea
jo
popa
gs
ljmp
and
mov
das
mulb
mov
insl
pop
xchg
test
jle
cvtps2pi
inc
lcall
mov
imul
push
mov
stos
enter
lret
and
jp,pt
or
add
stos
repnz
daa
adc
out
shl
xor
or
jmp
das
mov
jl
mov
std
push
and
inc
pop
mov
sahf
jbe
popf
fcompp
stc
xor
subl
outsb
push
push
leave
in
push
lcall
adc
mov
xor
pop
stos
bound
jl
lret
enter
fnsave
xchg
in
fldcw
seto
loopne
cmc
or
add
xor
rorb
lret
insl
sub
add
push
in
cmp
in
push
cmp
mov
data16
prefetchwt1
or
call
sbb
stos
jo
xorl
xor
cmp
outsl
shll
dec
stc
pop
push
scas
and
iret
in
scas
push
mov
pop
cwtl
iret
fwait
mov
jns
xlat
mov
jbe
roll
xor
stos
xchg
xchg
comiss
test
pop
jle
pusha
lcall
or
stos
fisttpl
xchg
cli
lods
and
adc
inc
mov
push
andb
xor
inc
fs
jne
iret
ljmp
icebp
push
add
std
cmpsb
or
sub
sbb
js
lret
and
cmc
scas
cmp
ja
std
mov
stos
insl
movsb
push
push
js
and
cmp
ja
notb
out
xchg
xor
fs
in
and
sub
cmp
cmp
jge
lcall
scas
aam
stc
push
in
pop
jb
push
and
dec
push
iret
adc
sub
jmp
ljmp
xor
loope
cmc
rclb
or
cwtl
pop
cli
mov
sbb
mov
or
scas
xlat
sbb
adc
mov
stos
enter
cs
cmp
fcmovu
ficomps
mov
push
jp
imul
das
imul
pop
add
clc
fiadds
imul
jae
sub
movl
mov
pop
inc
push
lea
pop
pop
adc
pop
lock
stc
jae
dec
mov
outsb
sbb
ljmp
add
jle
jecxz
fdivp
cltd
mov
push
insl
incb
incl
lock
std
movsl
cmp
outsl
dec
xor
repnz
push
into
inc
sub
cmp
mov
sbb
lcall
loopne
push
mov
or
stos
std
lea
lds
pop
movl
pop
push
sbb
lds
push
in
decl
jp
jns
pop
jb
mov
idivb
loop
jns
popa
push
out
js
lods
inc
test
inc
movsl
inc
xchg
push
bound
inc
fidivl
clc
sub
adcl
decb
cmp
dec
scas
dec
aaa
mov
dec
jnp
loopne
loopne
sbb
adc
push
mov
imul
pop
mov
cmp
in
imul
xchg
shl
jp
out
fdivrp
lds
imul
xor
pop
test
add
dec
sbb
jp
xor
movsl
js
add
fidivrs
movsb
add
mov
js
cli
inc
jge
mov
popf
ja
mov
in
hlt
push
jae
mov
pop
xchg
repnz
orb
repz
push
mov
roll
aaa
mov
and
outsb
hlt
fwait
pop
outsb
std
xlat
pop
mov
insl
xchg
pusha
xchg
pop
daa
jno
xchg
in
add
mov
imul
mov
add
or
jbe
jge
cmp
cmp
fs
ja
out
dec
mov
loope
adc
or
add
jp
sub
mov
rcrl
add
lret
and
cmpsb
adc
xchg
pop
jge
dec
add
jae
cltd
test
mov
push
sub
add
jmp
mov
xchg
cmp
mov
mov
xor
fldt
inc
push
cwtl
dec
loopne
loopne
shrb
mov
mov
or
and
mov
mov
imul
not
xchg
mov
mov
mov
adc
pop
push
cmp
shl
sub
push
btr
in
in
mov
pusha
loopne
in
xchg
repnz
repnz
jno
ss
mov
in
sbbl
shrb
pop
cld
cli
outsl
in
fisttpll
pop
mov
shrl
adc
push
sub
sub
xchg
inc
mov
push
push
and
mov
mov
imul
iret
daa
mov
mov
repnz
ret
pop
mov
xor
aas
enter
xor
stc
pop
inc
cmpb
sub
sub
adc
jne
or
ss
test
mov
jns
es
icebp
in
int
ja
cmp
test
cmp
sub
push
push
push
icebp
pusha
push
pop
adc
out
and
je
aas
lcall
jb
xor
imul
xchg
fidivl
dec
or
xor
lcall
lcall
cmp
call
dec
mov
data16
sbb
sub
cltd
mov
fiadds
sarb
stos
add
xchg
rcl
inc
mov
mov
das
cvtdq2ps
sbbl
out
cmc
xor
cmp
push
cwtl
idivb
mov
dec
xor
scas
jnp
mov
shll
xor
jle
daa
sbb
mov
jno
pop
pop
pop
sub
pop
dec
dec
jle
mov
jb
int
in
push
je
cli
jle
shr
ja
aas
pop
jmp
decl
cmp
in
call
out
sub
cmp
jmp
push
pop
adc
cmp
dec
cltd
mov
insb
pop
emms
outsl
inc
pusha
push
in
in
negl
lret
mov
dec
inc
jmp
enter
rcrb
push
iret
mov
aas
leave
adc
xchg
movsb
cwtl
push
sahf
lock
leave
jecxz
insb
jae
popf
adc
mov
xor
mov
pop
add
or
add
jg
stc
dec
lcall
sahf
mov
jge
pushf
arpl
jo
mov
and
cmpsb
mov
outsl
jns
pusha
add
jbe
roll
jp
lcall
orl
xor
js
jmp
xor
jnp
xor
mov
pop
inc
lea
std
lea
lcall
sbb
dec
cs
es
jnp
sbb
stc
cmp
xor
pushf
addl
jne
outsb
pop
inc
jg
cmpsb
push
outsl
mov
cwtl
jbe
ret
jno
stos
mov
gs
rcrl
push
xchg
cmp
push
cmpsl
jecxz
jbe
outsb
sbb
mov
popa
jle
mov
lcall
jmp
shlb
mov
or
sub
pop
insl
imul
dec
imul
pusha
add
jecxz
mov
add
jl
mov
fidivl
mov
cmovbe
shlb
add
xorl
push
ss
pop
fstpt
fmull
pop
jbe
das
outsl
loopne
push
jl
in
fdivrp
pop
das
push
push
pushf
and
cmpsl
mov
sub
lcall
cltd
jle
cwtl
jno
cli
or
add
add
pop
add
dec
jle
clc
es
popf
pusha
jo
or
pop
jo
mov
xor
push
jle
pop
xorl
pop
leave
adc
cmp
outsb
inc
mov
fbstp
outsl
cli
out
mov
mov
aas
cmc
mov
jo
nop
or
adc
mov
push
dec
sub
push
xchg
push
or
adc
ret
dec
pop
xchg
mov
mov
push
cmp
adc
data16
adc
xor
fwait
adc
pop
pop
imul
mov
cli
or
push
testl
ret
lds
or
pop
aad
stc
xorl
addr16
bnd
mov
int3
loopne
push
insb
clc
sar
adc
ljmp
jp
in
inc
push
jp
subb
ja
lret
int
mov
mov
mov
sub
xchg
test
cli
push
sbbl
jecxz
dec
stos
ds
push
mov
pop
pop
lock
stos
or
jb
in
inc
cmpsb
mov
mov
testb
repnz
cmp
xlat
and
cmp
pop
mov
fs
aaa
repz
xchg
fisubl
add
ds
xchg
icebp
lock
out
inc
lcall
add
and
push
js
jb
lcall
ss
xchg
aaa
or
fwait
xlat
jmp
push
jmp
pop
punpckhdq
add
xchg
andb
inc
xchg
and
mov
dec
adc
pop
push
mov
mov
xchg
mov
mov
xor
ret
mov
or
int
or
xor
lcall
xor
outsl
pop
and
push
fs
call
jmp
dec
and
mov
push
nop
lock
pop
repz
mov
mov
xchg
or
fcoml
cwtl
into
mov
dec
test
loop
jno
pop
xchg
pop
out
mov
lcall
mov
bound
clc
lods
mov
mov
cltd
dec
ret
and
and
enter
scas
inc
pusha
cs
xor
test
in
mov
jle
lahf
imul
xor
pop
dec
jp
lcall
push
testl
fs
icebp
popf
xor
sub
mov
pop
imul
push
ds
mov
ljmp
add
mov
adc
dec
pop
adc
xor
jae
jg
cltd
das
pop
cltd
inc
daa
shrb
and
in
mov
add
inc
es
fwait
sub
shrb
jo
sub
jns
xor
push
mov
repnz
inc
sti
xorl
pop
test
jbe
ljmp
lahf
add
sub
mov
and
lcall
cmc
cmp
bound
fisttpll
jg
pushf
movsl
outsl
sub
js
xchg
inc
pusha
into
lods
add
cld
inc
inc
sbb
adc
add
sub
xor
xchg
sub
loop
mov
ja
adc
jecxz
pop
test
roll
or
out
pushf
mov
mov
clc
xchg
pop
data16
lret
push
jae
test
and
sbb
jns
fs
imul
rclb
and
pop
ret
sarb
push
dec
jns
aas
dec
xor
sbb
sub
rcrl
xlat
xor
sub
bound
ret
inc
push
lcall
and
iret
add
jb
sbb
negl
aaa
and
pop
xorl
xor
lret
adc
push
dec
mov
mov
jnp
or
enter
in
xchg
nop
pop
pop
ljmp
call
xchg
pop
adcl
data16
add
add
sub
dec
jae
cmpsb
lret
inc
push
pop
add
and
pop
lcall
sbb
daa
popf
pop
ret
sub
ret
aaa
negb
lods
jp
ficomps
xchg
lret
inc
mov
test
push
pushf
xchg
mov
aaa
or
xchg
add
cmp
jb
insb
pop
xor
xchg
push
mov
iret
add
push
xor
jo
xor
outsl
sbb
dec
icebp
mov
add
xor
enter
xor
ja
xor
xor
or
xor
les
das
incl
inc
outsl
cli
enter
push
jl
lcall
push
xor
jne
push
mov
mov
ss
xchg
dec
orl
xchg
mov
inc
jmp
add
mov
mov
and
mov
mov
pop
lret
fs
shl
mov
aas
inc
mov
out
iret
popa
sahf
dec
mov
ja
or
shll
jb
fs
mov
sub
subl
mov
mov
sti
jmp
xor
or
nop
sbb
xor
sbb
dec
mov
and
cltd
xchg
pop
jb
pop
jl
jp
pop
inc
dec
push
mov
mov
pop
ljmp
pop
cmp
jp
inc
xor
push
jne
cltd
xorb
jp
jl
arpl
add
xchg
fdivl
mov
scas
mov
pushf
add
jp
inc
push
cmpsl
and
mov
add
pop
jl
inc
xor
loopne
stos
mov
outsb
bound
jl
xchg
lds
push
ret
jg
add
mov
sbb
mov
inc
pop
js
jl
adc
pop
movq
xchg
jl
call
addr16
push
out
aam
add
addb
or
shrb
mov
jl
sbb
sar
sarb
cmpsb
add
movsb
in
outsb
cmc
movsl
xchg
adc
das
ds
add
mov
call
mov
add
popf
rcrb
loopne
push
outsb
outsl
jb
imul
out
int3
and
jge
ljmp
sbb
mov
jno
cmp
dec
xor
sub
bound
cmp
xchg
lock
outsl
xor
shlb
in
imul
outsb
jp
jbe
fs
test
sahf
sbb
repnz
fidivl
push
mov
scas
loop
jp
jno
xchg
ja
or
mov
jo
adc
mov
daa
ja
and
inc
or
mov
jbe
bound
jp
cwtl
sub
sub
xchg
into
dec
or
loope
mov
cs
lock
push
mov
imul
inc
add
das
pop
pushf
std
mov
outsl
lock
pop
loope
pusha
xor
adc
add
mov
jb
popa
push
lret
loope
or
outsl
add
or
lahf
push
mov
pop
sbb
test
xchg
mov
mov
mov
pop
jecxz
jo
inc
push
scas
adc
leave
mov
arpl
ss
addl
adc
mov
cwtl
inc
inc
stos
pop
movsl
and
and
inc
popa
cli
lcall
enter
or
testb
add
and
mov
push
inc
mov
pop
cld
push
notb
das
ds
in
jle
pushf
jl
jb
das
test
push
les
adc
pop
movsb
mov
mov
cmp
insb
jp
test
mov
push
xorl
inc
ja
outsl
jl
iret
test
mov
lock
aas
inc
inc
in
add
pop
sbb
jns
xor
repnz
arpl
les
and
and
add
cmp
jp
scas
and
xchg
sbb
jbe
and
xor
jl
aaa
add
aas
xchg
into
stos
lds
jl
mov
bound
jb
sti
jb
mov
add
sub
sbb
adc
lds
mov
inc
adc
out
ret
insb
call
jl
nop
and
pop
rolb
jnp
js
pop
push
jge
and
idiv
and
stc
cld
pop
jno
adc
cmp
pop
jno
paddd
sub
pop
arpl
ficomps
sar
aaa
jnp
test
imul
rorl
clc
mov
arpl
inc
mov
fidivs
jecxz
ja
std
fiadds
and
dec
bound
in
rolb
or
mov
jb
das
jmp
mov
mov
jmp
leave
gs
outsb
jnp
mov
xor
fnstenv
add
stos
jle
jbe
inc
cli
mov
push
push
fisttps
cmpl
jnp
sarl
mov
pop
dec
cmp
fs
pop
inc
or
push
jns
mov
lahf
inc
outsl
jbe
cmp
or
xchg
movsl
jge
sub
andl
adc
rclb
mov
mov
add
add
les
cmpsl
mov
pop
xor
xor
rclb
bound
sarb
test
xor
mov
sar
insl
insb
push
xchg
cmp
push
cmp
outsb
xchg
xchg
pop
mov
je
xor
lcall
pusha
xchg
xchg
cmp
ftst
add
mov
sub
push
sbb
cli
data16
gs
adc
dec
dec
add
subb
mov
mov
cli
mov
shrb
repnz
mov
pop
ss
pop
lds
mov
movsl
data16
push
jnp
fsubrl
jo
pop
aam
call
sbb
lret
movsb
adc
ljmp
push
lods
jle
jmp
pusha
repnz
mov
xchg
clc
push
jbe
sbb
xor
xchg
loopne
lcall
xchg
xchg
nop
jns
jle
push
cmp
es
add
inc
loopne
mov
jle
jbe
dec
jb
and
push
dec
mov
dec
jg
mov
cmp
inc
mov
jbe
jb
outsb
stc
js
sbb
icebp
insb
fldl
adc
push
dec
aaa
ss
inc
cmp
lods
insb
ja
mov
add
jp
pop
jo
inc
mov
lds
push
idivl
ja
and
je
jne
sub
add
ja
stos
cld
sahf
imul
sub
in
ror
jg
push
sarb
lret
nop
push
in
mov
sub
fisttps
sbb
dec
xor
imul
sbb
shl
xacquire
push
inc
jle
add
pop
out
add
cmp
xor
test
inc
enter
out
cmp
stos
cmp
pusha
scas
lea
lds
mov
clc
jnp
xchg
pop
dec
mov
sub
pop
fcmove
data16
dec
jae
test
mov
push
add
push
inc
inc
subl
int3
pop
xchg
testb
negl
ja
pop
jmp
cli
mov
std
xchg
js
pop
ss
jmp
push
insb
fidivs
xchg
and
cmp
or
add
xchg
push
inc
repnz
add
push
jmp
add
out
sub
xor
orb
loope
mov
insl
ret
movsb
fcompl
pop
and
pop
xor
clc
dec
aas
jg
inc
jbe
push
push
aad
push
pusha
outsl
dec
cmpl
push
jb
cmpsl
jp
mov
pop
add
push
adc
js
xchg
shlb
inc
pop
add
inc
xchg
mov
mov
call
pop
dec
xor
iret
pusha
js
mov
jle
cld
stos
js
push
sbb
xchg
pusha
xor
mov
ret
clc
inc
and
jno
mull
pop
lahf
les
xor
pop
inc
inc
popa
arpl
cli
insl
adc
scas
pusha
push
jp
pusha
xchg
jns
jmp
dec
das
jb
push
dec
mov
adc
xor
pop
flds
popf
jp
cmp
out
adc
mov
aad
push
lea
je
jne
or
and
sarl
lock
pop
jb
clc
gs
dec
int3
aad
adc
push
dec
outsb
and
lods
lret
into
sbb
cmp
and
xor
enter
mov
aaa
es
call
pop
mov
in
out
cmpsb
pusha
push
xchg
sub
mov
mov
pop
mov
js
or
jecxz
mov
sbb
lods
in
jecxz
mov
fs
addr16
mov
xchg
std
xor
mov
or
ljmp
sbb
loope
pop
aaa
dec
fsubr
push
pop
mov
andl
push
repz
loopne
std
cmp
jl
addr16
out
xchg
dec
aad
push
adc
outsb
mov
xchg
inc
or
leave
inc
jge
testb
xor
xor
adc
stos
sbb
and
loop
lea
jbe
inc
outsb
test
mov
cmp
repnz
in
mov
push
jbe
pop
xor
xorl
and
mov
insl
dec
outsl
pop
lret
xor
cmp
sub
mov
dec
cli
or
clc
mov
xlat
jnp
rolb
bound
xchg
outsb
xchg
pop
xchg
inc
inc
filds
loop
jp
addl
jmp
ret
mov
data16
imul
sub
sub
mov
loop
add
int
inc
sub
addb
jne
jg
jl
stc
inc
xchg
nop
add
sub
inc
in
pop
sbb
pop
ret
inc
jbe
xchg
inc
scas
outsl
test
mov
int3
and
fisttpl
mov
pop
cmp
aas
push
fisubrs
clc
je,pt
subl
and
mov
mov
adc
fucomip
xchg
pop
jne
shr
rorb
fdivrl
sbb
cmc
sarl
loopne
hlt
mov
pushf
xlat
mov
mov
and
sbbl
test
push
jnp
jae
jge
pop
js
cmp
data16
jns
mov
dec
stos
mov
push
test
jle
mov
arpl
arpl
inc
xchg
push
dec
mov
sub
das
imul
es
ljmp
adc
pop
and
stc
add
fwait
jb
inc
pop
lods
inc
loope
jle
inc
in
pop
cld
jo
inc
mov
xchg
stos
clc
pop
std
clc
dec
mov
jmp
adc
cmp
cwtl
frstor
rolb
xchg
mov
push
out
ficompl
inc
sbb
cli
jne
dec
cld
push
test
and
jp
mov
adc
dec
push
mov
jno
decb
xchg
sbb
enter
call
stos
ds
test
xor
push
jge
mov
xchg
cli
dec
xchg
lock
jo
push
mov
pushf
cmpsl
push
gs
subb
fdivl
push
out
dec
das
out
inc
dec
js
cld
mov
aaa
ret
xchg
mov
cli
sub
lcall
cmpsb
or
inc
jbe
scas
fldl
dec
cwtl
test
mov
ds
push
xchg
and
push
icebp
inc
inc
jg
lcall
push
jno
cltd
imul
es
cmc
mov
sub
out
or
cld
dec
adc
bound
mov
push
xor
jge
xchg
out
jp
inc
jo
inc
idivl
push
xchg
out
push
cld
ret
and
jb
pusha
pop
mov
icebp
fdiv
ds
js
mov
lret
mov
mov
xlat
pop
adc
jae
imul
mov
ljmp
daa
inc
push
mov
cmp
sbb
pusha
scas
push
inc
mov
push
sub
push
push
js
inc
sti
jne
jae
ret
std
mov
bound
push
jge
pushaw
inc
insb
push
outsb
lcallw
dec
int
mov
inc
xchg
and
std
cmp
leave
adc
mov
mov
fdivrs
push
lea
sbb
subl
bound
arpl
imul
add
add
jl
ds
in
xorb
lret
xor
data16
add
push
sbbb
push
dec
xchg
xchg
sbb
mov
addl
jns
mov
sbb
sub
push
mov
jno
leave
xor
push
jge
inc
fcmovb
jle
rolb
aam
int
fwait
mov
cwtl
pop
sbb
or
nop
addb
xchg
jl
jbe
adc
outsl
dec
js
je
mov
xchg
in
and
rcll
push
inc
nop
sar
int
fs
inc
add
push
jb
or
xchg
data16
rorl
pop
mov
add
mov
fldt
inc
xorb
pusha
aaa
and
insb
fwait
js
jl
pop
and
xor
jmp
les
jge
sbb
inc
pusha
sbb
jne
mov
adcl
insb
in
adc
jl
aad
pop
xchg
push
jae
jge
jns
mov
xor
pop
jp
mov
xor
and
mov
sti
mov
add
cli
faddp
pop
mov
insl
cmp
lcall
jl
jp
mov
incl
xor
sub
divl
sbb
out
stos
and
inc
push
mov
and
cmp
loope
ljmp
ror
clc
movsl
or
pop
add
clc
jl
add
push
je
loope
pop
stc
mov
jmp
mov
jo
mov
or
insb
outsl
jbe
xchg
and
mov
fiaddl
or
cmp
inc
or
pusha
sbb
mov
lahf
push
sbb
sub
lods
xor
aas
sub
push
repnz
xor
clc
daa
int
rcll
clc
insb
fcmovnu
jge
jmp
ds
bound
and
subl
mov
pop
cs
xchg
mov
pop
mov
jbe
adc
lcall
mov
push
inc
loope
xchg
jg
add
sub
sub
xchg
jecxz
sub
xchg
jp
lahf
clc
sbb
stos
imul
or
inc
stos
dec
mov
out
orl
inc
dec
jbe
sbbl
in
in
pop
fucomi
pop
push
jge
pop
cmp
jo
push
popf
cmp
stos
adc
or
inc
dec
jp
dec
jne
cmpsl
pop
sbb
inc
lahf
idivl
push
sbb
test
cs
je
cmp
adcl
jbe
test
jbe
repnz
in
mov
xor
pop
mov
divb
jno
loop
insb
push
insl
inc
daa
push
jp
pop
imul
pop
outsl
loop
lret
and
outsb
mov
ja
js
push
repnz
mov
arpl
imul
iret
add
xor
insb
push
push
cmpl
rcll
push
mov
sub
and
jge
cli
sahf
lret
arpl
imul
aad
cltd
and
pusha
fdivl
lahf
out
sub
sbb
adc
inc
pop
or
jb
xlat
sbb
cmc
adc
jp
jb
test
test
cmp
xchg
aas
pusha
and
push
sbbb
dec
stos
push
js
push
mov
dec
std
cmpsl
jnp
cmovno
inc
je
inc
testl
paddq
ret
out
fcoml
pop
sub
imul
fstp
in
imul
insb
pusha
adc
sbb
outsb
lock
insl
and
test
mov
ja
sbb
or
sti
movhps
enter
rcrb
outsl
stos
fisttpl
das
divb
loopne
test
and
xor
stos
xchg
adcb
clc
xor
xchg
dec
das
nop
xchg
icebp
inc
push
popa
dec
sbb
jge
inc
cmpsl
popa
push
or
fisubrs
jnp
adc
mov
repnz
lret
shrl
dec
sbb
cmc
rcrb
dec
inc
mov
fwait
je
sbb
popf
das
pushf
fs
das
ret
cmp
popl
mov
in
call
popl
xor
loopne
and
cld
daa
imulb
loope
sti
jbe
jnp
inc
rorb
ljmp
inc
mov
mov
out
mov
xor
jmp
jb
in
adc
out
cmc
push
jbe
bound
sub
mov
pop
jns
fs
lret
mov
test
popf
jne
jg
aaa
mov
out
add
jp
mov
inc
decb
in
cmp
imul
add
cmp
data16
test
sbb
mov
and
xor
jb
aaa
xorl
mov
sti
hlt
pop
mov
cmp
arpl
sub
insb
cmp
test
push
cld
adc
cmp
xchg
int3
ds
lret
inc
cmp
adc
mov
sti
inc
lods
mov
je
adc
fstpl
pushf
clc
cli
adc
fst
cmpsl
testb
push
jp
jl
jbe
xchg
imul
jl
jnp
xchg
jl
fistl
cwtl
sub
add
adc
sbb
sub
mov
adc
outsl
rcrl
mov
cmp
push
cld
rcll
pop
add
mov
js
jb
push
lods
mov
jae
hlt
in
insl
xor
cmc
push
cmpsb
mov
adc
jne
jmp
jae
stos
subl
outsl
roll
leave
fdiv
jne
add
lret
loop
jmp
mov
pop
inc
std
xor
aaa
mov
addl
mov
push
call
sub
cli
add
push
mov
jae
push
xchg
add
inc
stos
jnp
imull
push
jo
jmp
jl
push
jbe
mov
shll
push
lret
dec
test
mov
cs
iret
popa
lret
sub
inc
push
mov
add
jge
out
ljmp
xor
push
cmp
pop
sub
cld
arpl
mov
dec
sub
lret
adc
pop
sub
xchg
insb
cmp
jbe
dec
scas
xchg
xor
or
ret
mov
pop
push
adc
or
inc
xor
sbb
in
rcll
sbb
movsl
gs
xchg
jl
into
popf
xchg
jmp
sub
fnstsw
jb
mov
mov
mov
mov
loope
ficompl
sub
inc
cs
jns
jl
outsb
inc
decl
dec
cmc
xor
clc
adc
pop
data16
push
inc
cmp
pop
xchg
int3
fs
mov
sub
or
xor
mov
subps
push
adc
or
outsb
jg
outsb
imul
push
xor
lods
bound
jle
fwait
add
xor
icebp
push
push
cld
jno
jl,pn
mov
stc
shll
notl
push
mov
inc
gs
push
loop
pop
jecxz
ficompl
or
shrl
popf
cs
jmp
add
bound
sub
out
aad
push
ljmp
push
aam
and
add
rdtsc
ja
cmp
pop
negb
xor
data16
push
inc
cmp
xor
pop
or
xchg
test
inc
adc
xor
xchg
addb
xchg
je
mov
inc
rorl
mov
lds
lds
sahf
cmc
pop
xor
fldl
jne
outsb
pushf
shrl
je
push
bound
outsl
mov
cmc
in
andb
push
and
xor
mov
int3
mov
test
stc
cmc
cmp
dec
int
push
mov
and
xor
jo
js
xchg
lret
mov
fcompl
addr16
pop
and
setg
shrb
shrb
sahf
pop
push
sbb
bound
xor
cmp
xchg
shll
ret
or
or
shl
push
pop
cli
jmp
cmpl
or
lret
xor
outsl
dec
lods
jle
repnz
cmpsl
jo
mov
and
add
adc
sub
rcr
adc
test
dec
cmpsl
in
test
mov
xchg
sbb
sti
outsb
cld
jl
mov
arpl
jp
ja
push
pusha
pop
bound
test
and
test
repz
xchg
mov
andl
enter
jno
stos
sahf
mov
test
mov
xor
xor
and
inc
jns
sahf
pop
mov
call
jg
add
mov
mov
pop
or
stc
ss
push
cmp
enter
mov
cmp
in
jno
inc
xchg
push
ss
mov
lds
cmp
arpl
insl
cwtl
mov
and
sub
cmp
adc
inc
mov
outsl
push
push
fisttpl
adc
xchg
testl
aaa
cmp
into
mov
and
lcall
ret
pusha
push
pushf
fcomp
push
inc
sbb
sti
and
loopne
pop
lods
movsl
imul
push
lcall
add
mov
jg
cwtl
and
inc
mov
inc
popa
loope
loope
lock
push
mov
jb
jo
inc
and
stc
loope
dec
and
jg
xchg
cmp
ja
sbb
fcoml
stc
insb
dec
dec
adcl
repnz
jbe
push
mov
push
iret
add
cmp
lock
sub
jb
lcall
jmp
pop
xor
sbb
ret
test
sarb
lock
imul
cmp
cmc
pop
je
cmp
imul
enter
fldln2
lcall
in
xor
jmp
test
cld
ds
adc
push
je
sbb
lcall
add
stos
pop
pusha
shlb
push
jle
rol
mov
push
stos
sub
mov
sahf
fwait
sbb
bound
adc
jmp
mov
sbb
cmp
punpckhdq
pop
sub
clc
and
mov
cmp
std
cmpsl
jle
data16
sarl
and
push
mov
jmp
cmp
push
jecxz
lret
int3
mov
inc
or
mov
sub
mov
pushf
push
js
mov
adc
aad
dec
pusha
pop
jg
pusha
sub
mov
and
js
repz
stc
push
xchg
lock
adc
sti
jo
cmp
push
idivb
lret
aas
push
jge
inc
scas
xchg
jns
cmp
imul
lret
push
jg
pop
rorb
mov
loopne
xor
sbb
hlt
mov
or
jecxz
add
push
xor
push
cmc
jecxz
inc
and
xor
push
test
sahf
lcall
outsb
cmp
push
cs
dec
jle
cmp
aam
push
or
or
cmp
aad
jns
cli
outsb
cltd
shll
sbb
and
aad
xor
repnz
repnz
pop
mov
jo
aaa
mov
push
add
lds
cmp
xor
lock
sbb
mov
call
inc
jnp
bound
das
cmp
inc
outsb
insb
fucomp
jno
add
mov
dec
inc
and
sbb
xor
stos
xor
divb
mov
adc
pop
sub
push
cmp
pop
data16
or
sub
mov
push
dec
xchg
imul
aad
loop
push
das
pop
xchg
or
test
sub
popa
movsl
cld
sbb
sbb
sbb
mov
xlat
xor
cmpb
sbb
std
stos
mov
cmp
orb
cmpsb
in
mov
stos
push
xchg
sbb
and
out
sar
mov
lcall
ss
and
xchg
push
sbb
pop
pop
xchg
leave
mov
xchg
data16
in
movsl
insl
or
jecxz
je
jae
js
jle
into
in
cli
and
imul
xchg
cmpl
movsl
test
stc
dec
mov
stc
ret
mulb
push
jb
or
cmc
sti
ss
hlt
loop
dec
jo
je
inc
push
sbb
cmp
lret
mov
add
clc
inc
adcl
daa
sbbb
ret
rcr
dec
cli
push
xor
lcall
aad
out
scas
out
inc
ljmp
dec
leave
ja
cmc
repz
xor
mov
mov
outsb
cltd
repz
pop
sahf
test
cmp
cmp
mov
push
mov
sbb
sbb
das
xor
jg
rolb
add
rcll
and
idivb
jg
int
add
fiaddl
sbb
imul
or
jns
dec
jmp
call
mov
lock
pop
test
fs
aaa
jle
cli
sub
data16
mov
mov
cmc
lahf
sarb
ret
add
js
push
adc
or
out
insb
push
fimull
test
pop
imul
adc
adc
jmp
insb
inc
popa
jo
xchg
dec
sub
sub
fucomp
inc
jns
shlb
in
ds
mov
imull
into
in
push
insb
js
inc
xchg
push
pop
ret
js
cltd
and
fs
imul
push
and
sahf
movsb
lret
aam
pusha
pusha
sbb
sbb
mov
shlb
fidivl
mov
ds
and
mov
fldt
mov
mov
xchg
scas
jno
dec
jle
stc
jmp
cmp
xor
out
shl
add
xor
mov
mov
mov
fstpl
adc
sbb
outsb
cmp
mov
repz
cs
cmc
outsl
out
repnz
pop
xor
lods
cli
cli
icebp
cwtl
pop
es
cmp
cs
jmp
push
ret
cmp
popa
inc
cmc
data16
mov
cmp
or
test
jmp
inc
aaa
add
mov
xor
bound
int
das
pop
add
xor
imull
mov
out
cltd
and
nop
xor
cmp
gs
bound
int
xor
sbb
outsl
inc
dec
xor
fsubr
or
testb
mov
mov
sub
fldcw
clc
mov
ret
xor
jnp
jl
pop
in
push
pop
imul
mov
cmpsb
mov
ss
push
lret
test
xor
jbe
loopne
mov
inc
and
inc
cmp
lock
xchg
das
int
dec
pop
push
clc
pop
jb
fs
mov
int
push
fisubrs
push
out
mov
add
sub
and
insb
cwtl
test
push
mov
ja
mov
loope
and
cmp
ljmp
add
lods
mov
mov
dec
std
adc
add
insl
int3
in
sahf
mov
lret
push
dec
in
psubusw
push
jg
sub
fs
js
jns
arpl
cmp
icebp
into
jb
bound
push
scas
sbb
popa
cmp
sub
shrb
add
jmp
idivb
add
jp
clc
sub
test
and
mov
fcmovb
in
test
inc
movl
mull
data16
cwtl
jns
adc
mov
push
js
lcall
outsb
lcall
rcl
mov
fiaddl
ja
fists
stos
test
stc
jmp
outsl
inc
lret
rcl
cld
xchg
es
jae
mov
pop
lcall
xor
pop
lret
jb
shll
sarl
insb
xchg
mov
notl
sbb
insb
inc
sub
pop
mov
inc
sarl
sti
xor
out
adc
ret
neg
sub
insb
ja
rorl
aam
outsl
nop
add
dec
mov
orb
mov
mov
dec
dec
xor
into
and
lock
subl
fnstsw
mov
push
lcall
outsl
add
mov
inc
mov
outsb
ljmp
inc
sub
mov
outsb
jmp
jge
popa
out
mov
outsb
mov
clc
pop
jmp
mov
push
lcall
jno
shll
enter
pop
ret
inc
push
ret
mov
and
aad
aad
xorl
hlt
mov
fidivs
fsubl
ljmp
xor
xlat
inc
jb
inc
pop
popa
es
xor
xlat
jle
adc
push
and
lret
test
jle
push
inc
jl
gs
icebp
cli
cltd
xchg
sbb
out
into
cmp
shlb
lret
loopne
stos
popf
imul
clc
daa
mov
stc
cmp
inc
iret
jp
push
sti
add
xchg
scas
push
stc
add
xor
mov
push
insb
pop
fbld
mov
rclb
push
mov
pop
cltd
add
xchg
loopne
cltd
mov
sbb
mov
js
cltd
in
es
fstl
add
xchg
or
scas
add
adc
add
jno
out
xchg
std
xchg
dec
pusha
and
sarb
pop
outsb
cmp
insb
or
push
outsb
xchg
jno
sbb
pop
stc
mov
out
push
lret
push
mov
in
outsl
cltd
fmull
sbb
rclb
push
jb
rcr
sti
jb
cwtl
mov
test
add
lcall
scas
cmp
xchg
and
mull
dec
cmpsb
stos
xor
test
in
xlat
mov
dec
jae
lcall
pop
movsl
pop
cmpsb
push
gs
das
scas
jle
push
imul
push
xor
sub
adc
add
push
stos
xor
jno
loopne
clc
push
into
or
adc
push
xor
xchg
push
pop
outsb
sub
ljmp
push
lods
pop
aad
pop
or
test
mov
push
cmc
sarl
sbb
pop
inc
mov
das
test
lret
xor
and
push
and
cld
popf
inc
dec
insl
xor
mov
pop
mov
pop
inc
pop
hlt
stc
shlb
push
jg
popf
pop
push
scas
xchg
adc
insb
orl
scas
cmp
out
pop
rol
inc
pop
mov
xchg
shr
inc
rolb
dec
rolb
daa
mov
imul
in
test
and
xor
jne
inc
es
les
fstenv
add
xor
data16
outsl
xchg
and
stos
sub
sbb
dec
xchg
inc
sub
cs
ljmp
lret
imul
and
pop
lcall
pop
pusha
dec
je
xor
cmp
xor
mov
inc
dec
push
loopne
pop
fs
or
fbstp
js
xor
aaa
sub
pusha
mov
xor
jbe
popa
insl
jge
sub
fcom
xor
rcrb
ficomps
insb
fs
pop
js
xchg
xchg
int
test
xor
cmc
add
lods
movd
fsub
insb
outsb
addb
clc
movb
mov
rol
xchg
jmp
data16
cmp
push
jle
xor
mov
adc
in
or
in
fwait
dec
pop
mov
mov
lcall
outsl
fistps
mov
or
jmp
cmpl
test
mov
cltd
fnstenv
jo
orl
adc
inc
lahf
rcl
das
sub
out
adc
rorl
jecxz
push
inc
std
xchg
add
push
adc
hlt
mov
lcall
cltd
and
insb
repnz
ret
cli
aaa
cmp
sbb
fadds
dec
loop
pop
dec
cmpsl
push
cmpl
xchg
push
movswl
sub
add
repnz
loopne
test
addb
js
mul
rclb
inc
mov
push
cli
lahf
jne
add
out
dec
sti
add
mov
dec
sbb
js
inc
repz
sub
outsl
loope
push
insb
hlt
pusha
icebp
push
testl
push
movsl
emms
sbb
pop
bound
mov
jnp
inc
stos
pop
int3
jecxz
mov
pop
sbb
bound
aas
xchg
je
stc
sbb
jp
aaa
pusha
cmp
gs
movsb
mov
cltd
lods
fnstsw
stos
mov
dec
cmp
fwait
in
pop
sbb
xchg
xchg
mov
xor
clc
sub
sub
fnstcw
cmpsb
sbbb
getsec
stos
into
pop
mov
and
sub
dec
test
ret
push
mov
iret
and
adc
mov
mov
js
mov
jo
rorl
aad
inc
cli
cmp
jb
xor
push
cs
and
daa
arpl
pop
adc
and
test
inc
ja
int3
jle
push
loop
mov
add
hlt
repz
pop
aas
cmc
std
pop
cmp
mov
js
dec
and
pop
jo
add
pop
jae
arpl
icebp
jae
push
jnp
std
subb
dec
and
push
dec
cmp
shll
call
mov
sub
pop
jg
cli
push
and
or
ss
xor
int3
pop
jne
jge
inc
mov
stos
insb
push
jl
mov
push
das
cmpsl
and
adcb
jae
cs
jecxz
mov
daa
shrb
inc
andnps
sub
sub
adc
sti
stc
cmp
pop
sub
outsb
loop
jbe
mov
xchg
xorb
les
sbb
out
adc
or
add
dec
das
lcall
xchg
jno
lods
lods
dec
cli
notb
mov
in
xor
push
push
cmc
movsb
lods
push
jp
jne
lock
sbb
pop
sahf
xor
sub
sahf
insb
add
in
add
xor
dec
ss
aas
inc
cmp
sub
aaa
mov
fdivr
out
fadds
test
push
pop
sbb
jno
adc
popf
or
popf
andb
negl
mov
jle
outsl
xchg
xchg
out
xlat
shr
stc
fcom
dec
mov
xchg
xor
fldl
insb
xor
scas
pop
cwtl
out
mov
push
mov
mov
xchg
cs
adcl
cmc
jbe
xlat
sub
out
pushf
jg
mov
loop
mov
inc
jge
notb
mov
stc
mov
ss
xor
jno
xorb
arpl
loop
dec
das
sahf
mov
adc
add
push
adc
mov
popf
push
pusha
adc
push
xor
xlat
pop
lea
mov
rcrb
jo
divb
xchg
sub
test
pusha
pop
in
adc
jnp
pop
lahf
mov
and
iret
push
sub
cmp
inc
fstl
lcall
pushl
adc
stc
or
pop
jo
ret
hlt
add
cmpsl
fiaddl
adc
sbb
in
push
jb
and
xchg
testl
aam
mov
ss
adcl
inc
pop
xchg
inc
imul
mov
push
push
mov
sub
loopne
jle
data16
cmp
mov
mov
add
stos
in
lea
lods
add
cmp
add
adc
or
addl
insl
cs
jb
sub
scas
pop
cmpsb
fwait
sub
cmp
mov
pop
adc
push
push
cmc
add
push
sbbl
mov
test
xchg
dec
leave
cmp
sarl
push
inc
jb
xchg
jo
jb
lret
jp
sub
ds
adc
test
push
jo
popa
daa
push
adc
sbb
mov
cmp
cs
sbb
and
inc
mull
das
bswap
movl
or
pop
mov
imul
xor
add
stc
push
outsl
loopne
out
dec
fwait
pop
mov
in
pop
movsl
ds
outsb
jb
lcall
js
xor
mov
xchg
out
jbe
xlat
out
sbb
cmp
decl
or
mov
inc
imul
sbb
and
lds
rorl
push
aam
mov
ja
nop
sbb
outsb
pop
subb
rcrb
xadd
mov
pop
push
das
mov
xchg
loopne
pop
int3
cmpxchg
dec
mov
data16
mov
stos
push
and
mov
cmpsl
pop
jbe
ss
cmp
and
xor
xchg
leave
cmp
clc
jl
cmp
shlb
imull
push
pop
jbe
fadds
inc
out
fmull
mov
mov
add
clc
lcall
nop
lods
adc
idivb
xchg
push
not
ja
idiv
outsb
lcall
mov
lea
and
lcall
pusha
pop
push
push
xor
pop
sbb
mov
movsl
mov
insl
lcall
std
jb
in
jge
popf
fwait
push
push
xor
cmp
lea
mov
push
testb
out
cmp
sub
dec
fsubrl
xchg
add
jns
jns
stc
add
mov
push
and
call
movsl
das
inc
jg
add
and
int
mov
xor
xor
cmp
imull
dec
inc
popa
clc
sbb
sub
dec
fistpll
inc
mov
out
mov
dec
xor
loop
ds
xchg
adc
in
dec
pusha
dec
jge
dec
lods
jb
fstpl
loopne
jb
push
xor
sub
fisttpll
xchg
movl
nop
push
mov
sar
mov
pop
xchg
cmc
or
sub
cmp
dec
push
and
outsl
push
mov
sub
add
xor
outsl
mov
lahf
notb
cmc
push
jle
movsb
movsl
cli
mov
shrl
movsl
xchg
add
xor
mov
xor
movsl
cmp
clc
outsb
jo
out
xor
add
mov
mov
xor
or
inc
decl
xchg
loope
cmp
push
push
mov
das
lcall
sahf
lock
sbb
push
mov
lahf
int3
loope
sbb
mov
mov
and
fwait
outsl
lods
fidivl
add
add
in
insb
es
mov
inc
and
std
sbb
push
ds
mov
push
mov
movsb
decl
jg
inc
mov
arpl
mov
mov
inc
mov
lock
loope
cmp
bound
and
in
inc
push
imul
and
jle
dec
cmp
pop
loop
inc
push
insl
ffree
inc
mov
jno
enter
test
lcall
jne
and
sub
ds
jmp
fcmovu
mov
mov
jmp
aad
lock
add
inc
add
ret
jbe
and
icebp
je
dec
xlat
popa
mov
dec
mov
adc
insl
jl
add
cld
add
jge
jnp
add
lock
cltd
nop
inc
add
jmp
sidtl
push
mov
outsb
push
jae
add
jno
lcall
jnp
pusha
push
jl
push
ds
xor
xchg
xor
sar
sub
pop
xor
pop
outsl
fdivs
cwtl
pop
adc
pop
jnp
inc
sub
ljmp
mov
pop
fsubrp
xchg
mov
fucomip
inc
stc
js
insb
sub
inc
sbb
cmc
push
add
vcmpsd
repnz
mov
xchg
jmp
arpl
icebp
add
adc
out
fiadds
cs
cli
push
or
pop
push
shlb
mov
sub
in
pop
int3
xchg
or
xor
lea
and
xchg
jl
cltd
pushf
mov
mov
iret
cmp
add
and
addr16
xor
cmpsb
xchg
push
loopne
cmp
nop
mov
stc
stc
pop
mov
xchg
jb
add
cltd
push
je
jp
xor
add
aam
jg
push
clc
ss
sbb
jp
dec
mov
popa
hlt
outsl
aad
cmp
pop
insl
xor
mov
in
add
fisubrs
pop
pop
add
testl
ja
stos
mov
insl
sbb
xor
xchg
inc
out
push
mov
arpl
push
xor
cmp
cwtl
bound
inc
subl
loope
jmp
popa
sub
adc
outsb
fcmovnb
mov
stos
xchg
shl
push
js
xor
das
sub
dec
subb
pop
pop
pop
cmc
stos
lahf
out
in
js
cmp
jae
cmpsl
cmp
mov
push
xor
mov
adc
pushf
add
inc
xor
adc
repnz
fs
outsl
addr16
out
mov
inc
popa
adc
mov
sub
rcll
or
cld
sub
mov
jo
add
hlt
pop
call
jg
cwtl
jo
mov
ljmp
push
js
jae
add
test
xchg
sbb
and
sbb
push
sub
test
lods
pop
into
and
inc
jl
xor
mov
cs
sub
es
push
jb
lcall
pop
scas
pop
imulb
lods
fisubrl
dec
subl
insb
inc
fidivrs
sbb
subb
mov
xchg
push
jno
mov
sub
sub
mov
sbb
js
inc
fiaddl
mov
aam
pop
frstor
rclb
pop
inc
push
or
cmp
inc
fs
loop
push
push
fnstenv
insl
jae
mov
in
arpl
mov
and
xor
roll
cld
cmc
outsb
clc
outsb
nop
mov
lret
je
imul
cmc
cmp
out
xor
shll
xchg
lcall
add
shll
shll
out
inc
repz
int
dec
fisubrl
push
lcall
je
xchg
push
jns
imul
adc
xor
pop
xchg
mov
fnstsw
cmp
fcompl
js
ljmp
sbb
inc
imul
sub
adc
jmp
aam
xchg
sbb
lock
add
mov
sbb
push
mov
push
test
clc
xor
aam
pop
add
pop
sbb
stos
inc
jo
jns
jl
test
js
mov
test
sbb
jbe
jns
jns
jnp
je
cltd
rclb
mov
push
mov
popa
and
sbb
popa
inc
jmp
push
mov
jecxz
add
inc
mov
fcoms
jp
push
mov
js
mov
cmpsb
mov
dec
shl
aad
cmp
push
ret
cmp
cltd
cs
lahf
pop
imul
cltd
mov
mov
dec
mov
push
movsl
push
adc
sahf
xchg
and
push
push
cmpsl
incl
lock
outsl
sbb
das
leave
xchg
pop
stos
outsl
xchg
loop
daa
pop
add
stos
push
decl
xor
dec
and
dec
hlt
inc
cltd
in
jb
frstor
ds
fnstcw
jb
adc
cmp
test
xor
pop
push
pop
jge
scas
sub
das
lret
mov
movsl
sbb
cmp
std
lock
ja
xor
or
rolb
and
jle
iret
sub
mov
jmp
pop
jge
sbb
cmc
mov
push
pusha
lods
fwait
or
ficoms
cld
ja
xchg
fdivp
cltd
pop
sbb
scas
xorb
or
loopne
jmp
movl
cmp
jo
pop
loop
push
roll
jae
jb
jg
ss
xor
loope
dec
mov
mov
sub
jo
lea
inc
fistpl
xor
jne
xchg
lcall
push
pop
rcl
sub
add
mov
pop
mov
mov
sub
les
popf
xor
dec
and
or
outsb
xor
dec
add
push
xchg
or
dec
pop
mov
ljmp
sub
cmc
movsl
or
pop
dec
mov
xchg
rcrb
je
pop
mov
stc
es
rcll
mov
sbb
jb
jb
lcall
aam
mov
sub
mov
icebp
ret
in
jp
xor
test
js
jecxz
adc
xchg
les
mov
sbb
add
xor
in
movsb
push
stos
cmp
shrl
ret
fstpt
xor
shr
pop
cwtl
or
int
and
stc
lock
scas
pop
ja
lcall
daa
lret
fstpt
loopne
mov
sbb
in
push
push
inc
mov
repz
push
pop
fmul
mov
in
outsb
add
out
mov
mov
nop
add
xchg
movups
pop
xchg
out
pop
mov
inc
repz
dec
cmp
scas
mov
insb
mov
imul
inc
jecxz
imul
inc
idivl
rcrl
cmp
mov
push
popa
jg
repnz
push
push
lret
jne
cli
pop
jns
cmpsb
adc
sub
and
or
in
mov
out
sbb
add
rcrl
add
add
jge
mov
adc
jb
jnp
jo
jne
jp
add
mov
stos
adc
test
out
and
mov
mov
outsb
clc
popa
std
lea
jne
xchg
shlb
push
jno
dec
jb
lret
jno
cs
push
push
sub
rorb
add
imul
sub
jns
mov
rorb
flds
inc
push
popa
aas
push
rcr
cmp
lods
push
and
or
idivb
fdivr
out
xchg
shll
mov
inc
adc
rorl
lds
dec
jg
movsl
cmp
adc
push
cmp
cmp
jb
setg
jge
adc
push
cli
mov
insb
mov
adc
out
cmp
xor
mov
pop
xor
pop
dec
stc
jno
sub
lods
lcall
sub
sbb
sbb
es
xor
ds
pop
aas
fisubs
mov
shrl
movl
in
dec
sub
and
mov
cmp
add
addl
sbb
jp
and
mov
loopne
pcmpeqb
int3
sub
mov
mov
addb
dec
fldln2
fisttpl
popf
inc
mov
stc
aaa
adc
pop
sbb
pop
test
out
push
sub
lock
mov
jo
push
jmp
dec
mov
pusha
mov
xchg
repnz
out
movl
adc
push
mov
ja
sub
das
test
pusha
add
xorb
mov
xchg
xor
cmp
and
adcl
mov
push
mov
dec
inc
lods
shlb
push
mov
bound
loope
sub
xchg
ret
dec
arpl
adc
pop
daa
mov
sub
sets
mov
lgs
push
test
test
bound
inc
in
rclb
insb
gs
push
pop
cmp
jo
stc
sarb
mov
add
add
xor
incl
push
fwait
inc
pop
cmp
je
dec
adc
jg
movsb
js
xor
call
xchg
push
jno
jle
adc
pop
xchg
dec
and
mov
xor
scas
cmp
js
jle
cmp
and
mov
jae
or
push
cmp
jns
jb
inc
sbb
stos
ficompl
fistps
in
loop
cld
neg
inc
or
pop
mov
jb
inc
stc
repnz
and
xor
ljmp
lods
mov
pop
mov
sub
aad
xor
repnz
sarb
aas
mov
fdivl
cld
dec
adc
sub
jg
jno
in
jmp
inc
in
jmp
and
and
popf
or
in
inc
push
mov
xchg
shl
test
nop
adc
cli
cmp
push
outsl
scas
jle
pop
incb
xor
pop
dec
int
daa
jg
jae
aaa
dec
fdiv
sub
lds
push
dec
aas
cmc
pop
sub
test
sub
and
outsl
xorl
xchg
rol
push
jnp
add
jae
xlat
clc
pop
mov
jg
inc
mov
pop
dec
ret
mov
repz
cli
inc
aad
testb
lea
adc
in
imul
mov
push
xlat
mov
dec
jmp
sbb
dec
xchg
mov
jmp
ljmp
mov
adc
cmp
movsl
bnd
sub
outsb
scas
dec
mov
and
stc
ja
stos
insb
cmp
nop
loopne
jge
jle
inc
cld
scas
insl
push
pop
int
sub
jp
jmp
pop
js
into
fwait
dec
or
inc
jg
or
iret
pop
jo
ret
aad
or
ja
adc
jle
mov
cmpsl
insl
cmpsb
ret
rorl
inc
pop
out
add
sub
and
push
xor
jno
test
fwait
sbb
shlb
arpl
inc
popa
xchg
out
icebp
dec
push
sub
lret
jle
dec
mov
xor
sub
pop
and
mov
jb
decl
jle
add
es
sub
outsl
test
cmp
and
push
jecxz
mov
lea
add
out
dec
jp
mov
sub
mov
pop
rcrl
sub
cmc
jno,pn
mov
push
xchg
mov
inc
int3
cmp
jge,pt
subl
inc
cltd
scas
shll
aas
imul
cmpsl
stos
mov
scas
add
push
dec
and
push
fsubrl
addl
jbe
std
icebp
inc
jo
hlt
sbb
push
pop
mov
inc
push
cmc
outsb
add
mov
scas
pop
inc
mov
ret
imul
jmp
pop
mov
mov
dec
xchg
gs
jns
addr16
idivl
inc
dec
addb
mov
or
not
addl
or
push
stc
ss
mov
and
xlat
lret
mov
xchg
add
push
sbb
call
dec
push
inc
lock
daa
xor
jmp
adc
xchg
in
inc
andl
mov
dec
xor
popa
ds
xor
lock
jmp
inc
and
ret
subl
test
fldenv
leave
rcrl
lcall
mov
pop
dec
mov
cmp
stc
std
ds
js
and
cmpl
mov
cmpsl
lcall
imull
sbb
push
outsl
jp
jge
cmp
das
rcrb
enter
stos
insl
fidivs
adc
jle
inc
movsl
mov
pushl
lods
sbb
mov
cmp
jle
mov
cld
repz
mov
mov
push
push
mov
mov
mov
out
inc
inc
data16
adc
add
jp
stos
cmpsl
js
push
mov
push
mov
rorl
stc
bnd
andl
add
movsb
jno
lods
add
xchg
movsb
adc
cmp
sbb
jle
and
scas
jl
xchg
int3
cmp
or
or
xor
pushw
ret
add
lcall
mov
pop
out
out
pop
aaa
ret
std
sbb
sbb
jl
inc
push
jl
jp
jmp
jbe
mov
sub
ja
xor
pop
adc
cld
mov
stos
cmc
vcomiss
cmp
test
mov
xchg
imul
and
jecxz
aaa
mov
cld
repz
dec
frstor
xor
jle
aas
ss
in
pop
cmp
add
pop
lahf
inc
orb
and
lods
mov
jb
lahf
jle
nop
push
imul
sub
xchg
cltd
in
in
cli
push
lcall
ljmp
mov
inc
cmp
and
inc
jg,pt
push
cmpsb
or
outsb
cmp
mov
jle
push
jae
mov
enter
ja
fildll
xchg
inc
pop
outsb
lcall
push
cmpsl
pop
jmp
sbb
mov
nop
or
bound
stos
dec
js
xor
and
rorl
and
notl
mov
push
push
mov
sub
outsl
pop
cmp
call
jae
mov
aaa
push
mov
push
retw
ficomps
stos
jb
or
xlat
pop
xor
add
fcoms
sbb
cs
push
cmp
push
and
dec
test
cmp
incl
add
repnz
ret
stos
outsb
jg
adc
inc
cmp
leave
inc
push
cmc
popw
lods
jae
das
xor
das
rol
fildll
cmpb
add
push
sub
aam
push
pusha
pop
jmp
xchg
daa
and
pop
xor
data16
sub
jns
lcall
mov
aad
stc
push
mov
stc
add
add
stc
outsl
sbb
hlt
mov
adc
inc
pop
lods
rorl
push
dec
and
ret
scas
or
dec
xor
sub
inc
or
and
punpckhdq
push
mov
js
jb
pop
xor
or
mov
sbb
xor
xorl
mov
adc
inc
out
cmp
mov
jg
jb
inc
scas
pop
inc
push
jne
lock
push
mov
cmp
jmp
sbb
sbb
mov
jns
movsl
mov
pop
not
sub
xorb
push
je
subl
sbb
pop
aad
pop
inc
jle
xchg
pop
push
cwtl
mov
fdiv
cmpsb
movsl
mov
mov
jmp
mov
mov
jle
jae
pusha
jp
xor
jbe
cmp
pop
aaa
pusha
pop
icebp
cmp
ffreep
add
ljmp
fnsave
sub
popf
and
cmp
andl
mov
ja
lods
cmc
lock
in
arpl
jae
dec
sbb
dec
cmc
xchg
mov
imul
bound
aaa
loopne
mov
std
mov
mov
jb
ds
xchg
mov
xor
stos
jo
lea
movsb
imul
orl
addl
mov
popf
repz
xor
test
lret
xchg
xor
jge
pusha
leave
jb
xor
mov
pop
jns
push
subl
push
cmp
loope
pop
and
pop
movsl
push
or
sub
cmp
pusha
mov
pop
add
bound
or
out
and
shlb
outsl
pop
test
orb
cmc
pop
cmc
xor
andl
jg
cmc
jle
inc
lcall
imul
and
xchg
jo
lret
loopne
aaa
xchg
jb
sub
ffree
sub
pop
in
sbb
push
lods
cltd
cmp
out
mov
push
into
cwtl
nop
and
sub
adc
sbb
sub
ret
or
push
test
lcall
pop
ss
andnps
pop
das
sub
and
sub
cmp
movsl
mov
xchg
pushf
sub
out
je
sub
xor
je
daa
data16
xlat
pop
push
push
cltd
sub
mov
daa
xchg
mov
jns
dec
dec
cmp
sbb
scas
mov
cs
sti
or
mov
push
cmp
or
sbb
jge
xor
push
testb
sub
mov
lods
lahf
sbb
rol
inc
mov
pop
xchg
lds
mov
jle
ljmp
shll
leave
test
cmp
outsb
ret
xorl
pop
add
push
cltd
fiadds
xor
mov
mov
addl
fsqrt
jae
or
jno
cmp
cmpsb
std
lcall
addr16
aas
mov
mov
je
jo
cli
jp
es
dec
popa
mov
icebp
inc
pusha
pop
cmp
fisttps
dec
stc
xor
inc
pop
cs
mov
mov
jmp
clc
scas
pop
fidivs
cmp
movsl
jns
add
push
shrb
jo
mov
cwtl
xchg
dec
pusha
outsl
xor
sarb
xor
adc
sub
sbb
xlat
mov
jo
movsl
adcl
xor
lcall
movsl
xor
xor
addl
negl
loop
stos
fwait
into
mov
lret
xchg
test
add
gs
add
jecxz
adc
mov
push
inc
lahf
push
inc
push
mov
inc
mov
mov
sub
mov
jg
pop
push
xchg
mov
loopne
and
into
or
xchg
mov
sub
js
push
stc
jbe
sbb
adc
jmp
aas
or
xchg
sar
aaa
and
ja
outsl
repnz
sbb
cld
pop
icebp
out
inc
jge
inc
mov
sahf
and
or
jns
movsb
sub
cltd
nop
sub
jge
mov
es
sarl
mov
sub
es
pminub
push
push
push
push
lea
mov
inc
and
xchg
inc
inc
mov
push
adc
jb
loope
dec
repnz
push
cltd
cmpb
add
sahf
pop
pop
push
jl
fdivrs
push
aas
or
arpl
rcll
xchg
iret
xorl
les
inc
sti
push
cmc
jbe
leave
sbb
movsl
dec
and
mov
out
nop
mov
xchg
ficompl
cmpxchg
lcall
lods
and
in
loop
in
loop
sub
sbb
sub
push
inc
mov
decb
cmp
mulb
jns
jns
jns
ss
jmp
sub
in
pop
push
jno
sbb
mov
pop
add
cmp
jns
mov
xchg
mov
mov
pop
mov
sti
imul
xorl
and
jbe
mov
add
jne
mov
test
xor
push
push
sub
insb
push
xor
jno
mov
jno
jb
js
lock
imul
rol
and
cwtl
pop
push
lret
js
testl
jo
dec
add
loop
icebp
and
mulb
push
cli
dec
push
mov
lock
leave
push
pusha
mov
or
movsl
sarl
stc
adc
bnd
bound
jp
test
jnp
cmp
sti
sbb
xor
in
sub
jbe
mov
and
mov
popa
div
add
sahf
jge
sti
pop
jle
xlat
push
in
jb
add
mov
cld
outsb
add
subl
bnd
jns
add
jne
jno
xlat
sub
jg
inc
shrl
lcall
rdtsc
dec
ret
push
sub
push
mov
jmp
and
jge
jb
jnp
gs
pop
outsb
cmpsl
jno
cld
inc
xor
push
scas
mov
lahf
mov
adc
pusha
or
outsb
repnz
scas
fadds
aaa
repnz
sbb
xorb
in
sub
xchg
cmp
push
xchg
cmc
add
push
lcall
push
xor
push
daa
mov
push
cli
jl
mov
repz
xor
add
repnz
push
mov
jmp
imul
xchg
cli
je
in
sub
inc
jp
xchg
out
pop
stc
mov
insb
and
stos
adc
push
push
sbb
addr16
add
dec
pusha
jns
aaa
inc
cwtl
sbb
jns
mov
iret
sbb
jo
xchg
push
insb
mov
into
dec
mov
cwtl
pop
and
mov
and
sbb
and
lcall
cmp
xchg
repz
adc
cmpsl
addr16
loopne
dec
xchg
pushf
cs
or
bound
imul
sub
lcall
in
inc
push
lea
or
fs
cwtl
xchg
aas
ret
mov
xchg
mov
push
nop
mov
jno
pop
cmp
jns
jns
cmp
add
fs
incb
pop
pop
stos
sahf
cmp
int
mov
cmp
xchg
int
data16
cli
lret
outsb
mov
sbbl
push
stos
push
xor
inc
clc
cmp
test
sahf
cltd
movsl
mov
ds
jne
lds
movsl
std
outsb
xor
lods
out
pop
push
fsubr
inc
pop
push
sub
inc
mov
rcrl
rcrb
push
mov
sub
or
jge
incl
inc
adc
jp
jbe
pcmpgtd
frstor
push
cli
add
sbb
jo
push
adc
in
cli
imul
inc
nop/reserved
jbe
xor
inc
mov
dec
sbb
cmp
mov
push
dec
push
dec
jns
xor
add
imul
jo
lods
cmp
das
push
dec
sbb
mov
push
push
jnp
adc
jns
xchg
and
arpl
pop
jo
mov
fldt
cmp
xchg
mov
push
lds
push
ss
clc
jbe,pt
fsubs
jp
pop
movsl
out
out
jnp
imul
out
xor
sub
sbb
imul
xor
pop
push
repnz
ljmp
mov
iret
adc
push
jp
xchg
pushf
mov
xor
sub
push
pop
fldl
xor
jns
test
xor
sbb
pop
movd
push
es
sbb
sbb
pop
fdivrs
jb
imul
inc
iret
push
push
mov
sub
mov
adc
in
ja
sub
ja
pop
in
inc
js
jb
outsb
jp
jo
mov
mov
jle,pt
mov
mov
dec
cmpsl
add
mov
inc
push
orl
fnstsw
out
push
xchg
pmulhw
and
lcall
push
adc
or
cmpb
push
in
ss
sub
jnp
insl
jge
je
shlb
push
jbe
dec
aaa
ds
dec
jecxz
in
xchg
in
mov
sub
push
repz
jmp
pop
cmp
add
dec
cmpsl
lcall
xor
jmp
dec
pop
sub
jae
std
jg
adc
js
adc
sub
mov
in
mov
popf
xchg
push
dec
dec
bound
push
movb
fisttpll
dec
sub
inc
or
sub
jae
hlt
outsb
or
lea
in
cmp
adc
lret
scas
sti
rolb
mov
clc
xor
fsubr
and
add
mov
shr
push
inc
mov
sub
loopne
pop
mov
jns
enter
cmp
mov
jo
fbld
push
frstor
push
xchg
mov
xchg
xchg
nop
outsb
ljmp
xchg
cmc
rclb
push
mov
cmp
add
dec
mov
mov
add
repz
cmp
push
push
or
xchg
imul
mov
push
inc
push
jp
shr
jo
xchg
mov
mov
bound
xchg
xorl
cmp
inc
jbe
add
lcall
and
pusha
pop
sbb
add
xchg
es
add
xchg
lea
dec
bound
popa
or
adc
lock
test
fs
pusha
adc
mov
cmp
loopne
xlat
ret
jns
xor
jno
cmp
jmp
xor
jge
jle
lock
bnd
shll
mov
mov
inc
xchg
pop
aam
rcpps
mov
fadds
pop
aad
mov
stc
fiaddl
jno
fstpl
jl
adc
jg
jae
dec
adc
add
jp
adc
mulb
popa
fcoml
cli
test
jne
adc
lcall
add
orl
movsb
loopne
sub
popa
aas
mov
cmp
mov
mov
lea
pop
outsl
cmp
scas
mov
jae
jb
jg
cmc
jbe
outsb
pop
lcall
inc
jp
fldl
and
es
outsb
add
push
xchg
add
jae
andl
or
cmpsl
in
xchg
clc
jb
mov
and
xchg
cmp
outsb
jns
in
daa
aas
pop
cmp
stos
lods
dec
and
jbe
mov
push
push
addr16
sub
jle
jg,pt
push
dec
insb
mov
fstl
xor
push
push
stc
cmp
cmp
pusha
jae
dec
cld
data16
cmp
pop
dec
adc
dec
js
dec
popa
jge
outsb
movsb
notb
jl
imul
lds
inc
jnp
test
xchg
mulb
jo
movsb
cmpsb
pusha
aad
dec
push
jp
sahf
mov
rcl
je
lret
insb
push
jmp
popf
push
cmc
cmp
xor
mov
or
pop
jns
sbb
push
bound
lret
adc
jb
sbb
push
jb
pop
xchg
jmp
mov
int
xor
fisttpll
cwtl
bound
pop
dec
cmpsl
outsb
jo
es
mov
sbb
pop
cmpsb
addr16
pop
xchg
xor
lock
mov
js
arpl
jne
pop
xchg
outsb
jae
mov
cld
sbb
les
pop
subl
dec
pop
addb
addl
dec
xor
jle
and
xor
lods
repnz
xor
mov
push
bound
push
mov
test
insb
clc
xor
bound
cmp
and
xor
repz
jle
and
stc
push
xchg
ret
mov
pop
insb
das
sub
mov
sub
and
inc
aad
sbb
and
int
and
pop
sub
xchg
jnp
inc
inc
pushl
jle
xchg
xor
loope
add
mov
mov
lods
dec
jg
cmpl
jl
cld
mov
test
jb
clc
jmp
bound
sub
xlat
dec
int
inc
inc
mov
jo
adc
cmp
xor
pop
adc
fildll
outsl
xchg
hlt
or
sub
jbe
or
jp
jl
sub
dec
insb
mov
jns
lcall
subb
lds
lea
pushf
popa
scas
and
adc
jb
cltd
nop
dec
inc
sbb
arpl
dec
sbb
mov
rolb
jp
cmp
in
lea
mov
mov
fisubrs
mov
outsl
jg
sub
jno
test
std
xchg
push
jne
outsl
sub
pusha
imul
push
dec
xor
pop
and
cmc
jmp
or
and
dec
mov
xor
push
popa
je
mov
and
jmp
dec
stos
movlps
mov
push
bound
fwait
jnp
inc
rcll
lock
popa
xchg
push
ds
sub
cmpsb
fidivrs
rcll
jl
cmp
xchg
push
inc
jle
fisttps
lcall
xchg
inc
pop
sahf
lret
movq
sbb
cmc
jle,pt
lret
ja
scas
add
ficoml
and
movsl
sbbl
cmp
add
mov
cld
sahf
and
jo
pop
mov
mov
cs
jo
dec
fsubs
push
inc
decl
jge
inc
push
mov
enter
clc
and
xlat
insl
orl
outsb
jp
jae
movsb
mov
jg
stc
fdivrp
data16
aam
adc
ss
inc
push
je
cmp
sub
insl
ss
dec
cld
mov
test
cli
and
in
or
xchg
jge
dec
xor
sarl
movsb
fiaddl
das
sub
cmpsl
fcomp
test
icebp
jmp
aaa
fsubr
std
jne
dec
lods
insb
jp
fdivs
fs
cltd
xchg
inc
push
int3
mov
mov
repnz
std
lret
loope
adc
and
scas
imul
sbb
lock
mov
test
add
mov
shl
xchg
ss
jb
gs
add
inc
add
push
jns
push
cmp
loop
xor
or
xor
mov
adc
xchg
mov
iret
orl
fs
arpl
xchg
adc
jl
mov
sbb
sbb
sub
cmp
mov
xchg
mov
lea
xlat
push
fildl
fiadds
jecxz
repnz
mov
in
xor
outsl
push
pop
pop
jns
jl
xor
jns
jle
mov
jo
jo
lea
push
bound
jne
inc
push
and
jo
ret
jmp
syscall
and
sbbl
mov
jae
push
stos
inc
mov
pop
outsb
jbe
lock
sbb
sbb
out
aaa
jbe
bound
imul
push
test
push
push
mov
sbb
dec
push
sub
fucomi
push
rcr
jle
fdiv
mov
lcall
mov
pop
mov
out
lea
jae
push
push
test
jne
aad
stos
in
int
and
mov
outsb
push
push
inc
int3
imul
push
adc
jb
lds
int
mov
push
adc
dec
or
mov
imul
cwtl
imull
das
jno
push
inc
lods
lcall
mov
ds
xchg
leave
mov
cmp
cmp
push
xchg
aaa
ja
adc
dec
inc
mov
dec
dec
cltd
pop
push
inc
mov
jle
std
inc
pop
mov
pop
cltd
fs
outsl
jne
sub
notb
cld
cmp
xor
lret
push
iret
scas
cmp
xlat
fldt
jne
pmullw
jo
arpl
outsb
and
add
outsb
icebp
ss
xchg
ds
ret
dec
cmp
xchg
popa
dec
mov
xchg
imul
out
addr16
jns
push
js
cltd
xchg
repnz
sbb
filds
pop
xor
mov
cltd
ret
insl
xchg
jbe
pop
inc
jns
sub
fadd
add
jp
aaa
or
sub
jns
mov
mov
push
into
add
push
and
xor
and
notb
rol
cmp
cli
imul
inc
push
sub
inc
addps
sti
sub
fisubl
push
out
shlb
mulb
dec
dec
js
dec
aaa
push
outsb
cmp
repnz
dec
ret
mov
jmp
lret
aad
xor
jp
add
add
shrl
cld
aam
insb
or
testb
iret
out
bound
add
jae
icebp
stos
inc
imul
cld
push
or
repz
js
repnz
cmpsb
es
fwait
outsb
dec
xchg
outsl
inc
inc
imull
jo
cwtl
rolb
or
cmp
mov
repnz
dec
inc
jb
pop
xchg
ret
cmp
and
leave
fsubr
fsubrl
mov
fisubl
adc
or
mov
popa
push
lcall
inc
lods
mov
and
sarl
cmc
jle
pop
sub
adc
mov
shll
lcall
punpckhwd
pop
mov
xchg
add
int
loop
add
out
cld
lcall
cmp
orl
lret
cs
ljmp
les
mov
jl
pusha
and
loop
sbb
cmp
ret
bound
imul
bound
data16
push
and
std
add
int
std
jmp
ret
in
jg
xor
faddp
lcall
or
and
push
div
cmp
lret
mov
pop
jae
into
jo
mov
inc
or
jae
cwtl
jae
cli
ss
ja
cmp
push
cmp
jecxz
pop
gs
xchg
sbb
jbe
lea
adc
fildll
scas
fadds
lock
insl
xchg
jae
mov
add
cli
outsb
push
cmp
jmp
in
outsl
notb
aam
xchg
or
bound
pop
push
mov
or
mov
mov
data16
cmp
and
sub
dec
pop
add
push
sbbb
mov
add
jb
cli
sub
in
data16
pop
xchg
dec
cmp
jbe
push
sahf
cmc
pop
jmp
les
mov
mov
fstl
and
adcl
shll
js
jp
jl
xchg
icebp
cwtl
cmp
cmpsl
cmp
mov
hlt
adc
or
sub
cmp
fsubr
adc
mov
pop
leave
fsts
popa
mov
cmp
je
mov
add
pushl
test
jle
cmc
xor
dec
mov
mov
sarl
jno
adcb
aas
jle
xor
aaa
cmp
out
cmp
stc
or
push
out
fidivl
repnz
shrb
mov
sbb
cmp
inc
ret
pop
xchg
ds
test
fwait
mov
dec
cltd
es
inc
mov
xor
outsl
pop
outsb
outsl
mov
xchg
cld
repnz
inc
dec
xchg
je
jnp
cli
cmp
push
mov
inc
mov
imul
pushf
call
cmp
out
cmpsb
add
in
fistl
hlt
loop
insb
jne
cli
stos
inc
cmp
decw
mov
sbb
dec
sub
mov
push
pusha
cld
xlat
jo
cmp
je
adc
js
dec
pop
jnp
ret
movsl
mov
add
lret
xor
pop
sbb
push
das
jg
sub
mov
aaa
ret
cli
rcll
fstpt
test
stc
inc
cmc
or
xor
sub
pop
stos
mov
xor
xor
sbbb
in
xor
xlat
fwait
xchg
or
fcoms
ficoml
pop
sub
movsb
adc
pop
pop
jg
repz
push
cli
cmp
leave
add
idiv
mov
test
cwtl
mov
clc
cs
xchg
and
ja
pop
lods
fwait
jns
mov
xorb
mov
xchg
mov
mov
add
test
shrl
imul
cltd
loop
jns
pop
std
fmuls
xchg
lret
lcall
xorl
lcall
mov
ret
stc
jns
mov
cmc
lcall
out
and
arpl
dec
scas
inc
jo
push
inc
and
daa
jno
xor
imul
and
dec
jae
test
test
lcall
mov
lds
imul
xor
jl
jb
bound
pop
pop
add
push
mov
int3
inc
rorb
inc
jae
bound
dec
lods
sbb
cmp
xor
lods
mov
and
mov
mov
punpckhwd
sbb
popa
ret
cmp
popa
rcrb
rcrb
sub
nopl
jae
stc
je
test
test
sub
pushw
pop
push
cmp
xor
loope
ficompl
adc
insl
std
repnz
sbb
stc
fidivrl
negb
repnz
out
addr16
push
out
orb
loop
stc
idiv
jp
jle
daa
pop
js
les
sub
jo
fwait
add
xor
into
push
aad
into
cmc
negl
cmpsl
jns
dec
and
sub
into
aad
or
mov
adc
aaa
pop
scas
inc
mov
mov
sbb
jb
mov
lret
pop
gs
outsb
cltd
jp
push
jl
cmovs
divl
lea
jp
ret
xorl
in
cmp
and
lods
or
scas
pop
xchg
clc
jmp
mov
cs
xchg
outsb
stc
xor
insl
pusha
mov
outsb
sbb
adc
negl
out
rolb
xor
xor
add
mov
push
jns
cltd
aad
mov
lcall
xor
jb
stos
pop
insb
ret
push
mov
outsl
pop
mov
scas
add
pop
dec
cmc
cs
sbb
xor
lcall
mov
jo
xchg
bound
add
stos
add
andb
outsb
daa
xor
jmp
push
cmp
and
add
icebp
adc
add
xor
lods
jo
add
aas
cld
cs
xchg
mov
xor
jp
bound
pop
sub
leave
pop
pop
aas
mov
push
aas
cmp
mov
jbe
adcl
nop
xchg
xor
mov
dec
loopne
jle
aas
mov
xor
push
xor
adc
in
pop
loop
xchg
xor
push
jne
mov
or
test
push
mov
data16
inc
inc
or
gs
or
fwait
xchg
push
xor
sarb
rorl
pop
jp
outsb
insl
or
enter
xchg
mov
push
ja
lds
adc
pop
or
inc
cmp
mov
pusha
mov
stos
and
addr16
je
xor
cmp
inc
ss
setp
xorl
idivb
push
jns
lods
sub
cmp
pop
mov
jmp
dec
subl
pusha
jo
inc
pop
mov
loopne
lret
xor
cmp
or
sub
das
push
cld
ret
mov
push
jge
add
sti
sbb
pop
repnz
xlat
scas
sti
push
mov
lcall
shr
rcrb
ja
or
xchg
popa
loope
fs
sbb
popf
jle
cwtl
sahf
fisttpl
dec
jg
sahf
xchg
xchg
adc
sub
jo
ja
mulb
xor
inc
ficoms
jo
inc
xchg
xchg
addb
jp
inc
rcrl
jb
or
popf
popf
add
in
and
dec
lcall
dec
cmp
das
xchg
aam
nop
roll
pop
pop
adc
je
pop
insl
fs
je
out
sub
cmp
or
jp
mov
xor
dec
pop
and
push
pop
mov
loope
cmpsb
or
pop
and
aad
scas
xchg
sub
outsb
pop
movsb
cwtl
jl
push
je
je
addr16
outsl
jle
xchg
sbb
and
and
nop
push
pop
outsb
jge
inc
aad
jmp
xchg
lcall
fidivrl
or
sub
add
sub
cvtps2pd
loop
pushf
cmp
adcb
jl
jl
pusha
inc
repnz
cld
gs
sbb
pop
push
fisubrl
push
addl
push
loop
jmp
fiaddl
call
enter
xchg
loopne
aaa
daa
clc
les
daa
inc
orb
ffree
insl
push
mov
mov
lock
movsl
addl
dec
xor
test
cmovge
out
jb
subl
jecxz,pt
ss
cmp
dec
and
xor
cs
js
sub
cmpsl
inc
mov
loopne
mov
xor
push
push
push
add
cmc
jle
adcl
and
call
hlt
inc
jg
roll
cwtl
in
sub
pusha
xor
mov
xchg
fsts
mov
loop
movsl
inc
les
adc
insb
xchg
cmp
dec
jge
inc
stos
fldt
xor
jge
stc
jg
push
pop
xor
jnp
mov
pop
dec
cltd
push
mov
xor
lret
fldenv
in
pop
add
cmp
addr16
testl
push
iret
and
pop
cltd
or
pop
loopne
pop
xchg
bound
jbe
jl
arpl
push
popa
clc
stc
or
fs
sarl
mov
scas
pop
inc
mov
out
sub
jns
inc
fiaddl
and
outsb
decb
fstl
cli
cmp
rcrl
jnp
jle
ret
jp
cmp
cmp
mov
sub
xchg
add
inc
mov
clc
jb
sub
inc
stc
inc
push
push
je
cltd
xor
push
add
unpckhps
jle
jb
mov
jb
leave
insb
sub
cltd
popf
je
inc
test
imul
int
mov
cmp
push
pop
sbb
int
push
cltd
inc
icebp
xchg
jg
or
xor
pop
or
mov
std
push
ret
popa
pop
jmp
push
cld
add
shrb
scas
lea
jecxz,pt
inc
cmp
fs
in
push
scas
ret
xlat
jns
ja
mov
adc
call
mov
sub
xor
inc
xor
jnp
adc
add
push
inc
push
add
insl
xchg
or
pusha
into
xor
outsl
dec
outsb
jb
xchg
pop
push
mov
jb
call
push
cmp
repnz
mov
sub
lcall
in
dec
cmp
test
stc
js
mov
into
jecxz
and
pop
and
rorb
jo
inc
or
negl
or
inc
xchg
add
mov
mov
pop
popf
clc
push
into
add
jmp
jnp
xchg
mov
add
mov
stc
push
push
and
adc
and
adc
cmp
and
mov
loop
pop
stc
cmp
xorb
push
mov
addr16
sub
stc
add
ljmp
lea
jg
mov
add
sub
arpl
js
sbb
jmp
in
dec
ret
movmskps
jno
xor
inc
cld
xchg
rol
shl
pop
add
mov
jne
popa
lret
cmp
imull
lcall
jl
add
push
sub
je
clc
add
jge
bound
into
mov
bound
shl
jmp
repnz
jp
mov
inc
jbe
cmp
sub
ret
andnps
cmp
aas
sub
pop
sub
std
aas
repnz
loopne
lods
addb
inc
in
popa
lds
dec
cli
jae
xor
outsl
cltd
pop
icebp
sub
jne
ret
shrb
mov
push
pop
dec
push
xchg
imul
jg
jge,pt
push
sbb
push
clc
stc
cmp
pop
xor
or
jg
lret
push
arpl
insl
loope
call
inc
lcall
mov
les
pop
lahf
sub
ret
insb
sbb
adcl
jno
jo
and
sbb
mov
mov
popf
icebp
jns
pusha
push
sbb
in
push
and
repnz
add
xchg
jne
loop
jg
inc
repnz
adc
jle
push
inc
push
jbe
push
pop
cmpb
jno
rcll
adc
addr16
aaa
insb
xor
mov
ds
dec
cs
orb
jge
dec
daa
jbe
pop
cmp
fiadds
scas
push
cltd
dec
pop
jp
push
popl
inc
adc
fwait
fwait
stc
loopne
ret
mov
lds
adc
pop
jge
rcrl
add
incb
sub
pusha
addr16
frstor
cwtl
mov
jle
mov
dec
cmpsl
push
sahf
lret
cmc
jbe
pop
mov
decl
test
push
dec
cmp
pop
pop
jbe
lret
clc
cmp
push
vmread
add
cs
push
repnz
sbb
jle
lcall
repnz
imul
std
test
mov
fnstcw
mov
mov
xor
rolb
sub
pop
sbb
sbb
jbe
add
cmp
mov
std
aam
add
lcall
movsb
pop
aad
or
inc
xchg
out
jbe
mov
testb
jns
inc
xchg
ljmp
in
mov
and
dec
out
movsb
jbe
pop
inc
xlat
enter
jg
loopne
lea
in
inc
mov
outsb
mov
jae
stos
sub
jno
daa
es
jle
dec
sub
inc
adc
pusha
push
mov
mov
xor
xchg
push
xorb
ds
xor
rcll
jge
cmp
lods
push
stc
jo
pop
push
jns
xorl
nop
push
aaa
das
cs
repnz
pop
push
add
pushf
mov
pop
push
addr16
cmp
inc
mov
ret
add
fstp
jno
bound
or
sbb
push
jg
inc
push
add
adc
push
stos
jb
pop
aam
stc
pop
addb
test
push
add
or
repnz
and
cmp
mov
cmp
mov
jns
mov
insl
xchg
pop
inc
mov
jns
repnz
hlt
stc
sarb
sub
cmc
or
cmp
jne
iret
int3
dec
popl
pop
pop
dec
mov
je
test
cli
inc
and
je
or
push
add
mov
xchg
lret
inc
shr
xchg
int3
push
and
mov
mov
pop
inc
divb
lcall
lcall
jp
sub
mov
gs
jg
arpl
std
jl
jbe
ror
sbb
inc
jecxz
out
cmp
mov
dec
dec
jae
rcll
ja
and
xor
jo
sbb
xlat
int
jge
push
aam
out
call
adc
loope
jbe
sbb
mov
inc
sub
jge
xchg
cmpl
sub
jmp
aaa
jbe
out
push
aam
jne
jbe
dec
push
jbe
lods
aad
inc
test
and
repz
dec
push
jg
mov
xor
or
aaa
lods
jbe
mov
outsb
cmp
inc
lods
ds
xchg
cmp
jmp
into
je
loop
xchg
seta
push
rclb
shll
cmp
jbe
push
mov
xor
push
push
lahf
push
or
mov
rolb
loopne
push
mov
pop
xor
testb
adc
inc
mov
outsl
push
sub
decl
sti
pop
and
popa
sub
orb
movsl
xor
jg
jmp
fistpl
xor
lret
jmp
sahf
jae
jmp
daa
fnsave
jecxz
xchg
popa
cwtl
lahf
std
xchg
hlt
fmull
mov
pop
insl
mov
aaa
push
popf
std
jp
sahf
add
daa
adc
inc
mov
push
push
in
paddusw
stos
sarb
mov
cmp
inc
xor
push
mov
rcrb
or
fldcw
aas
lods
xchg
xor
clc
mov
cmc
cs
push
movsb
add
dec
adc
push
test
xchg
mov
es
push
cmp
xlat
mov
mov
mov
rolb
push
minps
jge
mov
std
mov
test
dec
or
push
mov
inc
scas
mov
xlat
leave
cmpsb
xor
xchg
adc
lea
aas
idivl
inc
mov
nop
unpckhps
jbe
inc
inc
rorb
xchg
in
dec
out
xor
xor
jae
cld
add
jb
and
das
popf
jg
mov
popa
cmp
sub
mov
adc
and
mov
cwtl
andps
test
clc
push
push
jmp
sti
in
mov
and
adc
mov
sub
push
punpckhwd
cli
cmp
lods
call
lcall
push
or
dec
je
adc
push
add
adc
add
frstor
xor
pop
sub
dec
cmp
jb
adc
sbbl
ja
mov
mov
mov
sub
rcll
aaa
inc
sub
push
test
test
out
fsubrp
cs
or
out
pusha
or
push
mov
mov
sub
push
cmpsl
xchg
bound
inc
mov
cmp
mov
sub
cmp
push
push
and
int
pop
loope
jp
jb
push
adc
push
out
dec
and
aas
pop
push
mov
cwtl
repz
push
inc
fdivrl
push
inc
xchg
and
pop
jp
mov
mov
ljmp
in
xchg
sbb
mov
add
insl
icebp
aas
out
jbe
add
sub
mov
leave
insl
cmc
jno
mov
icebp
add
xor
ss
inc
idiv
sbbb
int3
in
sub
clc
mov
jl
jmp
mov
dec
loope
clc
sbb
into
clc
ds
faddl
movsb
scas
push
dec
add
mov
shlb
jb
sub
scas
and
mov
insl
adc
inc
or
ret
inc
sub
and
test
add
nop
imul
pop
testl
and
mov
mov
pop
jb
xor
addr16
lock
aad
or
or
testl
add
repnz
in
cmc
add
push
or
data16
pop
pop
int
rcrb
movsb
adc
pop
mov
sbb
xor
add
pop
fnsave
js
ja
jl
and
lahf
dec
ja
mov
add
test
sub
push
bound
and
stos
pop
lea
lret
add
stc
push
cmc
divl
ret
lds
data16
cmp
bnd
test
or
aam
lcall
fldl
frstor
push
loop
pop
lret
pop
push
push
inc
push
test
and
push
or
cld
inc
bound
sub
push
cmp
and
stc
cld
ds
ja
fisubrl
outsb
in
sahf
lds
ja
mov
addl
fisttpll
jbe
stc
jecxz
mov
fdivrl
xchg
enter
mov
call
mov
daa
mov
cs
cmp
and
mov
pop
jb
cltd
jp
lret
stc
call
shlb
sub
shl
lock
jbe
inc
cmp
jno
and
sahf
pop
inc
movsl
call
push
push
and
push
xlat
add
push
int3
xchg
mov
in
mov
push
jne
aaa
and
mov
jbe
push
insl
leave
aaa
outsb
mov
aad
notb
lods
js
mov
outsb
or
lcall
pop
inc
cmp
data16
sbb
pop
cs
out
and
mov
jo
outsl
imul
test
enter
push
in
mov
push
sbb
cmp
popl
mov
xor
lcall
adc
enter
sbb
xor
das
lret
fimuls
inc
popf
jne
add
dec
pusha
jle
and
daa
in
lcall
fsubrs
cmp
ds
pop
mov
mov
dec
jbe
inc
push
insl
add
jmp
push
sub
cmp
stos
lcall
xor
loop
xor
mov
test
xchg
pop
mov
push
cltd
cs
pop
data16
rcr
mov
loop
daa
jp
cmp
xlat
mov
insb
adc
push
lcall
cmp
push
jg
sbb
imul
cmp
out
push
jb
jno
xchg
inc
jns
enter
out
or
jno
pushf
icebp
pushf
lods
or
outsl
cmp
test
sbb
xchg
pop
inc
lcall
jb
inc
stos
push
iret
or
lcallw
push
lahf
inc
ss
push
push
jno
jnp
loopne
mov
and
pop
adc
sub
pop
jo
js
vdivss
sub
lea
sub
clc
mov
cltd
bnd
cmp
mov
adc
mov
and
jo
adc
mov
mulb
aad
setb
les
add
and
pop
add
jle
adc
out
and
mov
stc
xor
push
mov
cmp
pop
dec
gs
jo
jno
xor
das
in
adc
movsl
xor
lods
jle
sub
mov
or
jns
xor
jbe
cmp
inc
xchg
cmc
ljmp
jo
fs
ds
xor
adc
add
sahf
out
adc
pop
cmp
sbbl
push
sub
outsb
dec
pop
mov
stos
jne
jns
pushf
inc
xlat
cmc
add
test
std
scas
jae
imul
push
sub
xchg
into
leave
push
add
jo
push
sarb
mov
pop
in
jg
push
jns
mov
cli
cltd
mov
push
insl
aam
cmp
jmp
cmp
xchg
adc
sub
sbb
xor
jl
jp
sbb
pop
sbb
jnp
push
mov
outsb
cli
xor
push
xchg
and
xor
cmpb
cltd
mov
sbb
js
cli
cmp
and
add
scas
fdivp
add
xor
mov
mov
je
icebp
jp
pusha
and
adc
stc
leave
jo
pop
pop
cmp
sbbl
rcl
in
test
push
fisttpll
mov
mov
std
fisubrs
imul
push
add
outsb
push
jle
cmc
adc
fadd
stc
pop
stos
push
mov
xor
mov
lods
jl
and
out
jl
xor
shll
push
daa
dec
jbe
jg
cs
push
xchg
sbb
and
xor
pop
and
sub
inc
cltd
add
shlb
inc
fs
aas
data16
and
ljmp
jle
cwtl
test
xchg
jbe
inc
dec
std
add
pop
roll
divb
mov
jns
das
fcoms
jnp
imul
inc
push
add
sarl
pop
xchg
std
mov
lcall
popa
maskmovq
das
jb
xchg
cmp
jmp
sub
call
test
outsb
andps
movsb
lcall
cmp
repnz
add
push
push
aas
shll
add
divl
mov
lock
cmp
cwtl
ja
test
mov
mov
mov
lcall
insb
cwtl
ljmp
mov
repz
jbe
jo
punpckhbw
inc
and
inc
inc
xchg
push
jns
out
push
lods
test
inc
inc
push
shlb
push
mov
loop
xor
push
int
push
cmp
jb
dec
jb
test
push
add
sti
sub
jle
pop
dec
stos
aaa
daa
dec
sub
fdivs
jp
jae
test
pop
xchg
std
xor
and
stc
jl
inc
push
imul
int3
inc
cmc
xor
aam
sub
inc
mov
xchg
aam
sub
xchg
sti
cmpsb
xchg
jb
shll
jb
mov
push
cmpl
cmp
jle
es
enter
jge
and
insb
popl
inc
sub
xor
test
hlt
or
jno
mov
into
pop
push
xor
outsl
adc
clc
test
inc
jb
sbb
in
mov
push
jb
cmp
push
rcrb
cmc
sbb
scas
xor
orl
jo
jo
xchg
xchg
jns
mov
lcall
fbstp
xor
cmc
or
mov
sub
jne
pop
xlat
mov
data16
inc
enter
xchg
inc
pop
mov
add
push
addr16
inc
aas
pop
mov
cli
pop
mov
cli
andl
and
jb
pop
sbb
gs
fistpl
xchg
inc
icebp
faddp
fwait
jb
cmp
mov
push
dec
adc
aad
add
ret
mov
mov
dec
sub
push
xchg
negb
cmp
pop
pop
lods
mov
pop
ds
repnz
or
in
jnp
xor
dec
xor
inc
mov
xor
jns
aaa
or
fsubrp
jp
ficomps
push
cmp
popa
aad
add
mov
js
stos
stc
incb
test
pop
xchg
stos
orb
push
das
sbb
fiadds
mov
frstor
inc
fsubrs
push
outsb
mov
jbe
movsb
popa
mov
lds
ret
push
mov
lea
mov
sub
popf
or
pop
mov
dec
inc
dec
or
push
inc
dec
imul
or
pop
test
jae
ja
xchg
test
out
dec
mov
or
or
mov
aaa
pop
inc
xchg
ds
nop
cmp
outsl
sub
xor
mov
ds
mov
dec
nop
xchg
iret
jne
jge
sub
cwtl
test
out
iret
fmuls
mov
aas
sub
lods
sahf
add
outsl
bound
cmpsb
xchg
jp
xchg
icebp
jb
hlt
pusha
inc
push
stos
dec
outsb
add
rcr
sbb
pop
iret
inc
sbb
mov
push
in
cmpl
push
mov
std
push
jb
pop
add
push
add
push
aam
sbb
cmp
inc
xchg
cmpsb
or
xor
mov
cwtl
push
and
cmpl
jp
add
push
andnpd
inc
dec
and
sarb
mov
pop
push
bound
into
inc
call
mov
pop
pop
in
xchg
xor
outsb
aad
sub
inc
pop
jbe
sarb
test
data16
mov
jge
dec
jp
or
xchg
mov
xor
cwtl
push
fisttpll
inc
push
xor
mov
push
and
cmpsb
out
mov
inc
insb
xor
add
dec
jmp
push
cwtl
push
int
pop
sbb
subl
outsb
mov
in
rclb
out
mov
lcall
jo
adc
sub
imul
repnz
mov
or
sub
sub
mov
lods
xchg
sbb
inc
loope
sub
repnz
cli
out
ds
pop
adc
les
int3
in
cmp
mov
xor
or
inc
xor
stc
push
icebp
add
lea
xor
add
loopne
js
jge
sti
iret
outsb
xchg
adc
mov
shl
shr
fcoms
andb
jmp
mov
insl
adc
jle
out
push
fs
mov
in
flds
jmp
gs
push
xor
and
jae
and
es
xor
sub
xchg
test
xchg
ret
xchg
enter
shrb
inc
aas
movsl
cmp
xchg
stc
mov
fistpll
sbb
xor
mov
cmpb
jnp
and
jp
jbe
hlt
cmp
pop
test
mov
je
add
out
adc
aad
jno
sub
es
mov
lcall
cmp
jl
jg
jne
adc
xchg
sbb
dec
lock
sub
jne
adc
inc
inc
daa
pusha
sbb
imul
mov
pop
js
push
xor
outsb
add
pop
leave
xor
data16
insb
lcall
lcall
sbb
cli
pop
outsb
ds
mov
aas
bound
jno
dec
push
sahf
jg
jmp
js
lret
fisubl
ds
dec
je
lcall
daa
mulb
sbbb
out
pop
outsb
sbb
ja
cmp
popa
pop
sarl
sub
mov
outsb
outsb
jns
ja
in
mov
popa
jne
jnp
mov
fiadds
nop
insb
pushf
lcall
jge
cmp
cld
aas
outsb
add
test
jbe
mov
cwtl
mov
lcall
fcompl
js
int
enter
inc
and
push
sbbb
cmc
mov
xchg
and
xor
push
aaa
jbe
sub
dec
mov
std
inc
push
lcall
xchg
int3
std
inc
push
lcall
sub
std
inc
push
lcall
push
int
inc
push
lcall
fmul
insl
sbbb
int3
insl
outsb
pop
mov
jp
lcall
pop
int3
dec
jp,pn
lcall
or
pop
and
jmp
inc
lcall
popa
lcall
outsb
bound
ror
pop
dec
jle
lcall
insb
into
pop
jle
lcall
int3
iret
pop
jle
lcall
mov
pop
and
and
add
pop
add
imull
insl
and
pusha
ret
push
into
inc
inc
push
lahf
and
jl
jbe
rclb
jns
cmc
hlt
ret
lods
pop
jnp
adc
popa
hlt
rolb
mov
cli
hlt
cmp
jb
add
hlt
daa
outsb
shlb
shr
js
xchg
jb
out
lods
js
cmpsb
jb
sub
hlt
dec
jb
sbb
loopne
mov
xor
fsubrp
jb
and
jb
dec
shll
mov
cli
jb
xor
sub
movsl
jb
hlt
shlb
cs
or
shlb
lea
inc
fdivl
cmp
iret
mov
jnp
shlb
loopne
mov
popf
cmp
jb
jge
push
cmp
cltd
xor
xor
jb
dec
rorl
scas
sbb
jb
push
add
shrl
faddl
inc
ret
mov
cmp
mov
pop
mov
rcrb
aam
jns
jno
jg
sarb
es
and
mov
js
out
mov
daa
pop
icebp
imul
repnz
ja
gs
outsl
lret
cld
push
cmpb
repnz
cli
subl
jp
add
lcall
dec
and
sub
test
fstpt
or
dec
fdivrs
jno
pop
daa
xchg
push
lahf
stos
ss
push
pop
mov
bound
sbb
aas
jae
ds
push
jl
test
jne
inc
lahf
pusha
cmpsl
jmp
jae
adc
push
out
ljmp
ret
in
sub
mov
sbb
lahf
xor
xchg
jne
repnz
into
jl
mov
xchg
jp
jbe
or
adc
test
xlat
sbb
xchg
lcall
and
sub
jae
loop
sub
mov
call
jo
dec
rcl
cmp
push
lahf
adc
jp
repnz
out
enter
sbbl
add
jo
aas
xchg
popf
pop
movsb
mov
jle
inc
test
pusha
jnp
ss
mov
adc
popf
jge
lods
call
xchg
insb
xor
mov
daa
jp
sbb
inc
loop
lcall
imul
outsb
sub
xchg
fwait
cmp
cs
push
fisubrs
mov
push
mov
outsl
mov
xchg
sbb
dec
ljmp
lea
adc
insb
or
xor
aaa
mov
mov
xchg
ja
xchg
das
stos
and
or
sub
cmpl
sbb
mov
test
inc
push
cmp
dec
mov
push
xor
sub
mov
js
xor
das
scas
jns
xchg
sub
sbb
adc
push
loope
js
fcmovnbe
sbb
in
xchg
jle
sbb
bound
fstpl
outsb
cmpsb
movsl
xchg
pop
outsb
hlt
jmp
adc
lahf
sbb
ljmp
jp
in
in
aaa
mov
xor
addl
jo
mov
mov
xchg
sub
aas
pop
jg
add
in
and
inc
jnp
mov
mov
test
push
sbb
push
shll
in
add
leave
push
add
cmp
stos
outsb
test
jmp
mov
mov
icebp
sbb
jle
arpl
addb
adc
mov
push
ss
ja
jb
outsb
fcomps
push
dec
shl
ja
fdivl
mov
lret
test
adc
fcmovu
dec
xchg
sbb
pop
dec
shll
sub
xchg
xchg
sarb
repz
sbb
imul
sbb
das
cld
pop
mov
sub
int3
aaa
push
nop
sub
outsb
push
fs
push
xor
popf
cmpsl
add
loopne
cmpb
inc
loopne
add
cld
cmp
outsb
mov
dec
jbe
mov
pop
xchg
jle
cs
movb
js
add
leave
push
mov
bnd
xchg
bound
rcll
les
mov
mov
xchg
mov
in
mov
ret
pusha
iret
inc
mov
adc
jge
push
cmp
or
push
cmp
pop
leave
test
xor
add
jl
pop
jp
pop
es
stos
and
or
inc
xchg
mov
dec
outsl
sub
ficomps
leave
cltd
or
das
adc
mov
xchg
push
mov
lret
les
xchg
pop
sub
xchg
js
adc
dec
inc
cmp
orl
jg
dec
stos
enter
push
cmp
imul
test
jns
adc
adcb
cmpsl
push
sbb
adc
jae
ss
sbb
adc
mov
orl
lret
pushf
adc
mov
addr16
inc
js
and
xchg
sub
testl
add
sub
jns
mull
nop
stos
idivl
cmc
ds
imul
push
mov
std
jge
sub
or
les
xor
xchg
and
and
jns
dec
mov
outsb
jle
jle
mov
jb
mov
xor
add
dec
mov
mov
and
push
test
stos
xor
dec
pop
sahf
push
std
mov
push
inc
dec
ds
shlb
mov
or
jge
test
pushf
sub
mov
in
pushf
insl
lahf
xchg
xchg
icebp
push
imul
leave
scas
pop
in
shrb
call
push
in
mov
dec
push
add
movsb
sbb
jg
jle
mov
and
jle
xchg
adc
fwait
loop
cli
mov
into
jp
scas
lret
enter
leave
and
mov
jb
mov
mov
xor
je
aas
push
out
in
mov
addr16
aad
cmp
in
sbb
insl
pop
int3
xchg
or
data16
cmp
xchg
mov
aas
pop
mov
insb
lods
leave
adc
test
aas
jbe
mov
pop
push
xchg
pop
xorl
jl
sub
push
dec
push
cmp
cmp
lret
jbe
popa
add
inc
mov
xchg
pop
sbb
jns
cld
push
jmp
insb
sbb
movd
cmp
lahf
lcall
aaa
cltd
mov
lods
mov
push
call
sub
and
lret
ja
das
jle
xlat
pop
pop
push
std
andl
les
out
arpl
das
jl
dec
dec
xor
add
lret
popf
int
sbb
ret
fisttps
in
xchg
cmp
int
cmp
mov
inc
inc
inc
int3
lahf
and
push
xorl
pop
or
xchg
mov
shrb
mov
cmc
pop
movsb
test
mov
mov
xor
pop
ds
jne
jg
sub
pushf
cmp
jbe
sub
dec
mov
pop
add
lods
repz
push
and
push
jbe
andb
fldenv
lock
pop
xchg
fsubrp
push
add
jbe
lcall
jg
clc
sbb
cs
sub
sub
cmp
mov
inc
testl
pop
jo
and
cmpb
mov
pop
cmpsb
jmp
movsb
jle
xor
add
push
jge
cmp
mov
movsb
loop
mov
mov
loope
aaa
mov
jle
gs
mov
inc
mov
push
xor
sub
dec
sub
fwait
adc
mov
ss
jecxz
adc
popf
push
push
pop
jmp
jb
dec
sub
inc
dec
mov
dec
jp
dec
mov
sub
pop
xor
or
jno
jg
cmp
sbb
orb
test
jb
jl
cmp
in
andb
sbb
pop
push
adc
add
push
bound
fisttpll
jle
mov
mov
xchg
rorb
sub
cwtl
cmp
jbe
mov
jne
sbb
mov
dec
mov
es
mov
jns
push
jns
es
and
dec
jg
add
jbe
jnp
setnp
es
stos
sub
cmpsl
aas
jp
mov
and
dec
cmp
fdivrl
test
mov
rcll
rcrb
inc
outsl
sbbl
cmc
xor
push
test
and
push
ret
cmc
mov
xchg
je
sbb
inc
xorb
push
mov
in
xchg
bound
jecxz
insl
or
rorl
call
jge
jg
sbb
and
hlt
sub
loopne
lds
and
insb
and
push
jns
xor
add
rorb
push
pop
push
add
xchg
adcb
sub
inc
inc
jl
dec
push
popa
call
andb
std
cmc
fldenv
push
or
pop
add
inc
hlt
adc
andb
aaa
cld
mov
cs
mov
cmp
adc
js
jb
shl
mov
sub
mov
arpl
data16
jl
enter
xchg
pop
repnz
mov
lret
out
jo
xchg
shlb
aaa
inc
push
mov
mov
fidivrl
push
pop
jae
ljmp
add
outsl
xor
jb
jae
inc
imul
xor
test
adc
cltd
sbbl
ret
imul
stc
ja
call
push
mov
stc
aaa
pushf
int
jno
add
das
push
xor
pop
inc
loopne
jg
and
shl
ja
push
add
inc
pop
xorl
xchg
in
or
lret
pminsw
sub
out
sbb
pop
push
bound
repnz
xor
jge
in
stc
xchg
scas
test
add
mov
in
inc
lds
mov
sub
mov
jle
dec
pop
sub
dec
mov
popa
jo
and
cmp
andb
cmp
rcll
out
adc
adc
dec
ret
fldcw
mov
inc
sub
sti
cmp
clc
mov
xchg
inc
mov
mov
out
pop
add
xor
cmp
outsb
ljmp
dec
insl
or
or
dec
xlat
lahf
sub
pushf
out
mov
aas
dec
notl
fdivrl
cmp
dec
popf
test
pop
sahf
scas
orb
mov
cvtps2pi
push
mov
push
mov
cmp
arpl
ret
mov
inc
pop
or
xchg
jae
shlb
ficompl
jb
pop
mov
pop
pop
test
pop
in
test
pop
iret
hlt
xor
loop
icebp
xor
mov
outsb
push
or
outsb
sub
in
inc
ret
push
cmpsl
jb
pop
lea
imul
adc
ja
movsl
push
pop
pmaddwd
js
push
jg
mov
jbe
inc
lea
stos
pop
add
addb
jbe
addps
imul
pop
lahf
pop
iret
and
inc
popa
das
xor
loopne
push
or
mov
mov
pusha
inc
rcrl
fdivrl
insb
out
dec
inc
add
and
mov
outsl
test
sbb
test
ljmp
js
pop
xchg
out
js
shrl
pop
and
jp
mov
jo
and
cmp
das
lret
sbb
jb
jmp
sbb
les
inc
rolb
pop
pop
icebp
in
mov
cmp
out
sbb
xchg
cmp
movsb
in
or
pop
pop
mov
mov
subb
outsl
and
aaa
inc
fldcw
add
out
ds
and
bound
fidivl
pop
nop
sub
data16
sbb
outsb
inc
xchg
or
insb
push
fidivrl
andb
cmp
inc
inc
aaa
xchg
cmc
push
push
sub
dec
mov
aas
push
jp
adc
mov
jl
push
outsb
stos
insb
xor
das
xor
js
js
fldenv
sahf
lea
mov
pop
mov
push
and
jns
mov
in
pop
fmull
arpl
sarl
outsb
xchg
pop
xchg
xorl
add
pop
mov
sub
push
jp
inc
xchg
repnz
sbb
fdivrs
mov
or
mov
cltd
mov
jb
lret
push
jno
xor
xor
or
sub
movsl
cmc
dec
stos
pop
imul
cmp
cmpsl
ljmp
mov
lret
mov
push
inc
bound
mov
lret
xchg
xlat
jg
sbb
mov
jbe
ret
push
inc
adc
mov
cld
mov
mov
push
fistps
mov
sub
lcall
jge
popa
mov
push
ficomps
dec
movsb
stos
jp
cmp
fidivl
jp
data16
cs
xchg
hlt
out
adc
cmc
xor
xchg
shlb
sbb
adc
xor
nop
sub
sbb
inc
cmpsb
mov
dec
imul
jbe
pop
jle
push
loop
xor
aad
dec
stos
fistps
pop
adc
sbb
mov
test
mov
adc
xor
stc
add
mov
mov
sbb
push
mov
icebp
adc
mov
mov
cmp
push
lret
mov
jne
cltd
jmp
gs
cmc
lret
push
jle
sahf
cmp
incb
inc
jmp
insl
pop
out
pop
repz
ret
cmc
fistps
xchg
xor
movsl
cmp
sub
mov
pop
xchg
in
mov
out
cmc
ss
and
pop
insl
lcall
or
xor
bound
xor
aad
xchg
lcall
pop
cmp
repnz
imul
xchg
call
xlat
push
ja
outsb
xorl
xor
ja
push
clc
sbb
hlt
insl
bound
insb
adc
dec
pop
push
cld
push
clc
outsl
cld
fidivs
bound
outsb
lcall
in
sahf
jle
pop
jle
ret
sbb
mov
and
cmp
cli
mov
adc
popa
jbe
push
packssdw
jb
sbb
outsb
xor
push
ds
cmp
in
inc
mul
loopne
outsb
push
popf
fs
sbb
push
push
stos
das
sbb
mov
fldenv
add
jo
sbb
mov
sub
imul
add
test
push
fsubrl
xor
loop
rol
xor
xor
push
lcall
cmpb
les
aaa
cmp
mov
cwtl
jo
mov
jmp
outsb
pop
ret
cmpsb
cmp
xlat
add
jecxz
movsl
jo
syscall
push
mov
push
repz
jnp
test
pop
jb
das
lcall
pop
mov
ret
jb
clc
cmp
fcmove
inc
loope
jl
sbb
jecxz
push
addl
cmpb
mov
push
mov
xlat
fdivs
pushf
lds
out
push
jle
jecxz
push
ss
xor
mull
mov
roll
xlat
push
and
add
imul
stos
inc
shl
scas
push
dec
insb
xor
cmp
cmp
test
ljmp
xorl
dec
ret
mov
push
mov
int
lret
pop
sub
fidivl
mov
test
add
sub
repz
popa
or
out
mov
xchg
test
cmp
sub
pusha
pushl
ss
xor
and
pop
or
andb
mov
mov
pusha
lret
mov
fidivrs
mov
push
popa
sub
inc
rclb
pop
mov
imul
pop
sub
mov
pop
or
mov
or
pop
cmp
in
cmpsb
fisubrs
pop
lcall
rclb
and
fisubrs
dec
test
pop
dec
push
ss
add
sub
ret
cmp
jp
jbe
dec
pop
mov
mov
jnp
inc
sti
icebp
imul
mov
dec
jb
or
or
outsb
sbb
outsb
popf
repz
cmp
dec
movl
jb
jl
out
lods
adc
sbb
stc
pop
fs
jb
mov
insl
jge
xchg
push
lods
jae
test
jne
add
pop
add
shlb
xchg
xor
insb
stc
or
sbb
sub
and
mov
or
inc
pushf
aam
stc
mov
loop
jecxz
xchg
xor
jae
aaa
icebp
repnz
dec
aam
push
mov
into
sbb
jo
jno
cmpsb
jo
popf
sahf
icebp
scas
repnz
movsl
arpl
mov
xor
cli
jne
cmpl
xor
add
lea
pusha
popf
or
dec
jnp
out
pusha
into
imul
inc
mov
pop
mov
dec
mov
jge
ret
adcb
lock
shl
sub
xor
push
pop
ljmp
pushf
es
imulb
sbb
and
mov
cmpsb
xor
test
or
mov
pop
cmc
rorl
xchg
test
jnp
pop
push
mov
sub
push
clc
inc
or
ficoms
push
jg
icebp
rorl
stc
xor
jb
outsb
repz
jp
enter
inc
jle
xchg
mov
sbb
fstpt
out
cmp
mov
or
push
jle
lcall
add
data16
cwtl
mov
pop
jle
test
sti
xchg
jae
ljmp
ljmp
not
and
outsl
insb
jns
push
int
outsb
aam
dec
out
shll
hlt
ret
lcall
in
and
dec
and
mov
cli
pop
jle
pusha
loop
pop
lcall
insb
roll
loop
fsts
ds
sub
jo
clc
movsl
inc
daa
test
jmp
push
insb
ss
mov
cmp
cmp
pop
push
sub
inc
and
cmp
xchg
out
cmp
cmp
jge
out
and
ss
fwait
sbb
dec
push
xor
mov
aas
sub
xchg
ficoms
jo
jl
lds
or
mov
sbb
push
push
pandn
xor
pop
imul
push
inc
stc
dec
dec
push
sub
outsl
xor
int
push
shrb
pop
movsb
xor
push
lock
push
mov
in
xor
pushf
rcrl
repnz
test
scas
gs
ss
xor
jl
lcall
inc
or
cltd
out
shr
inc
dec
push
dec
cmpsb
lcall
xor
lods
jp
push
and
lock
adc
lds
or
fdivs
sub
adc
addr16
orb
jbe
js
lcall
jle
lcall
push
cmpl
clc
adc
pusha
jnp
push
add
data16
out
jo
dec
ret
je
lcall
dec
dec
sar
push
push
pop
mov
pop
incl
add
jmp
lcall
fs
jns
lcall
pxor
call
jmp
xorl
pop
jmp
jg
pop
lahf
jne
mov
fs
lcall
jno
lcall
jle
lcall
cmp
jnp
int3
sub
xchg
bound
or
in
cmp
aad
dec
mov
mov
xchg
outsl
xlat
icebp
imul
negb
movsl
sti
mov
leave
test
push
pop
popa
mov
mov
inc
jg
pushf
movsl
in
cmp
scas
test
cmp
dec
pop
jno
and
ficoms
imul
or
rcrl
sub
lret
outsl
pop
cmp
in
movsb
iret
cmp
cmp
fnsave
std
push
fldcw
cmp
test
repz
mov
icebp
xchg
jno
push
icebp
into
inc
mov
and
sbb
inc
pop
add
sahf
mov
mov
mov
sub
int
mov
jg
mov
pop
std
aad
pop
xchg
inc
lret
or
out
jae
sub
xchg
and
push
inc
inc
cmp
bound
cmp
popa
xchg
dec
js
jbe
inc
xor
push
js
lods
dec
jns
mov
pop
sub
lock
pusha
imul
inc
out
sub
mov
jle,pn
sub
aaa
dec
mov
xor
sbb
xor
mov
je
mov
mov
mov
mov
mov
adc
dec
nop
or
sub
push
mov
mov
rclb
push
xchg
sbb
pop
jae
rorb
insl
ds
sub
add
popa
aad
sbb
mov
ret
xor
push
mov
sahf
sbb
adcb
xor
adcl
xor
pop
std
sbbb
jo
inc
shll
sbb
cmc
xchg
jecxz
mov
sub
outsb
pop
aaa
mov
mov
nop
fldenv
in
mov
dec
cmpb
or
lcall
cwtl
ds
fisttps
js
xchg
cli
sbb
cmp
pusha
popf
std
sarb
lds
sub
jo
insb
cmp
dec
aad
push
inc
sub
cli
popf
inc
das
sub
imul
sbbb
push
daa
push
jo
push
rorl
dec
xchg
add
cmc
out
psubsw
mov
mov
sbb
stc
mov
inc
push
inc
lcall
cltd
aam
pop
inc
inc
pushl
lds
xchg
inc
dec
das
jle
mov
push
or
xorb
pop
cli
sub
sub
fnstenv
ds
push
adc
sub
clc
cmp
cld
pop
repnz
hlt
cmp
inc
xchg
pop
pop
jb
mull
push
mov
push
sub
pop
xchg
dec
push
push
inc
inc
sub
pop
test
push
fcmovbe
ljmp
das
mov
rolb
lods
sarb
imul
in
inc
ds
lods
jp
test
xor
jns
or
jo
xchg
lahf
dec
arpl
inc
push
sahf
sub
xchg
jae
and
cs
fsubrs
jae
mov
mov
inc
cmpsb
ja
push
repnz
jp
roll
lock
fwait
or
arpl
addb
jle
inc
lds
cli
push
scas
jmp
stos
insb
js
out
pop
rcl
insl
cltd
ljmp
outsl
add
pop
imul
in
dec
cmp
add
xchg
call
imul
xor
dec
cmc
pop
fcom
cmp
lds
jno
loope
xor
mov
lods
stc
cmp
dec
push
xor
and
popa
sub
dec
cwtl
fstps
inc
xor
scas
xor
xor
sub
xor
jns
sbb
test
xchg
pop
shll
mov
or
ss
in
push
pop
sub
or
lret
pop
push
cmc
negb
mov
mov
scas
out
lcall
test
push
jge
test
xor
cmp
sub
cld
cltd
push
and
and
add
enter
sbb
out
mov
pop
loopne
in
pop
push
fcmovne
xchg
add
dec
push
inc
cmpsb
adc
fisttpl
pop
fistpl
sti
lcall
stc
and
outsb
inc
jae
mov
shrb
aas
sbb
cmp
cvtdq2ps
xor
scas
push
mov
add
adc
stos
dec
in
mov
aad
or
sti
int
movsbl
jb
fmul
sub
pop
or
js
sbb
out
cmp
ret
pop
mov
loope
iret
jp
inc
add
inc
xor
push
sub
pusha
pop
pusha
pop
xor
xor
js
cmpsl
sbb
out
mov
lcall
testl
in
cmc
or
out
pop
sbb
cmp
adc
jp
jecxz
stc
ljmp
cmp
stc
push
dec
pop
jbe
leavew
push
push
sub
push
dec
in
iret
xchg
xor
mov
stc
sahf
lcall
lock
add
sti
mov
xor
xchg
jg
push
jno
sub
inc
cwtl
dec
push
outsl
push
xchg
mov
mov
mov
adc
adc
pop
fs
jnp
mov
mov
pop
test
in
push
int
bound
push
pop
loop
test
out
daa
jns
daa
mov
scas
movsb
mov
pop
xlat
ss
and
in
adc
lcall
jecxz
mov
test
aaa
subl
or
lcall
xor
mov
sbb
aad
lods
xor
into
inc
inc
pushf
pop
xchg
lods
outsl
mov
mov
fwait
and
xchg
imulb
sub
xor
push
shlb
cli
sub
jb
cli
out
pop
subl
pop
mov
jle
movsl
fsubr
push
mov
pusha
sub
in
lods
mov
iret
mov
xlat
sub
pop
into
sbb
push
notl
cs
xor
dec
push
orl
adc
fsubs
dec
mov
and
fisubrl
test
aaa
xor
adc
das
xor
add
push
in
pop
push
jns
repz
stc
push
cli
stos
cmc
enter
xor
xchg
mov
push
adc
add
orb
dec
lahf
mov
sbbl
xchg
jae
out
cmp
bound
pushl
push
int
pop
rcrb
jmp
jo
out
stos
inc
xor
jp
mov
insb
shl
repnz
jmp
xchg
test
bound
adc
lods
add
xor
cld
fs
pop
or
pop
push
cmp
push
and
xchg
push
xor
dec
push
outsl
add
sub
push
xchg
mov
aas
insl
je
imul
fdiv
xor
loop
fsts
movsl
mov
shlb
cmp
add
and
dec
push
sub
inc
mov
push
repz
push
int3
aaa
pop
xor
and
xor
push
sub
mov
pop
lahf
lds
mov
ds
pop
push
xor
inc
pop
je
ja
xchg
sbb
dec
push
cmp
maskmovq
notl
sub
daa
pop
push
dec
cmp
fsubs
sub
ret
sub
xchg
sbb
daa
inc
mov
addb
inc
adc
notl
daa
sar
lret
mov
outsb
fidivs
rcrl
stc
xor
inc
popa
out
icebp
cli
sub
adc
out
cltd
jno
gs
xor
sub
stos
jmp
lock
lret
aam
cli
pop
inc
and
xchg
lret
and
notb
lcall
xchg
je
outsb
lods
addr16
or
subb
xor
imul
mov
imul
push
mov
subb
in
push
adc
and
fidivrs
mov
addr16
ss
mov
push
imul
jns
mov
jle
inc
cmc
out
scas
pop
jo
xor
inc
repz
rol
rcrb
sti
xor
aas
dec
test
push
add
sub
test
loopne
lock
mov
xor
or
xchg
test
jb
mov
insb
jbe
lock
ds
ret
les
daa
jp
cmp
push
scas
sub
int3
fisttpll
hlt
aaa
popa
add
pop
xchg
mov
and
sbb
mov
std
cmpsl
add
sti
mov
cli
dec
cmp
pop
xor
mov
inc
xchg
aaa
mov
pop
push
push
bound
cmp
xor
push
cmp
vmovd
daa
cld
pop
cmp
aaa
mov
or
xor
in
mov
xchg
mov
push
jg
ss
mov
sti
in
mov
addr16
inc
rolb
jns
std
fildll
and
cmp
xor
dec
jno
cs
jp
in
cmpsb
cmpb
adc
ja
sarl
inc
jecxz
mov
inc
es
cmc
xor
xor
mov
outsl
mov
mov
aam
dec
inc
and
scas
jb
cmp
js
add
jae
imul
pop
test
and
rolb
jne
jno
or
push
jg
and
es
add
mov
cmp
fldcw
pop
testl
dec
lods
lds
scas
pop
jle
sbb
mov
sarl
cmp
cmp
lds
pop
cmp
and
scas
lods
cmp
addr16
inc
inc
ret
into
ret
fimuls
divl
dec
popf
dec
xor
clc
sub
xchg
jg
lcall
and
adc
jne
jnp
pop
adc
leave
push
push
pop
addr16
xor
leave
push
pop
test
das
lcall
jno
sub
ja
push
pop
jecxz
lods
mov
rcl
fldt
mov
mov
shr
cwtl
mov
stos
mov
push
xorl
sub
xor
add
jg
xor
push
push
xchg
and
lds
leave
jecxz
js
inc
xor
dec
fldt
sub
stc
ret
shr
enter
cmp
lods
pop
ljmp
shrb
fwait
mov
push
sub
xchg
jp
pop
lods
dec
sub
loop
jae
int3
dec
das
sub
pop
loopne
mov
imul
sub
fcoms
fmull
jmpw
pop
xchg
lahf
loope
lods
aaa
mov
xchg
and
and
fnstenv
mov
or
daa
adc
push
jns
shrb
cmpsl
mov
subb
stc
xchg
fisubrs
cmpsb
dec
sub
lret
cmp
mov
ss
lcall
test
sub
sub
inc
sub
mov
inc
inc
jmp
mov
push
push
mov
lods
xchg
push
lret
pushf
out
dec
cwtl
add
cmp
cmp
pushf
test
ret
dec
xchg
sbb
imul
sbb
subb
ror
insl
cmp
add
or
lods
rolb
cmp
jb
mov
xor
aaa
inc
xchg
jo
add
and
push
stos
outsl
or
and
sub
lea
outsl
sub
mov
cmc
sub
inc
pop
stc
addr16
pop
es
mov
int
call
sbb
and
or
jbe
add
in
sbb
sub
push
pusha
xlat
cmp
sbb
pusha
cmp
out
in
add
cltd
in
jne
inc
inc
rolb
daa
dec
mov
out
cmpsl
dec
add
pop
push
jle
jmp
in
mov
bound
enter
cmp
adc
sbb
dec
and
pop
rcr
aaa
xor
arpl
pop
fldt
clc
movsb
mov
and
push
roll
sub
xchg
int
mov
xor
jae
lock
adc
stos
jg
jo
lret
xchg
mov
lret
lds
outsl
mov
jb
xor
jmp
mov
in
push
sub
outsl
pop
push
dec
sub
jecxz
pop
fidivrs
dec
sub
cmpsl
mov
xor
clc
xchg
lret
test
sub
popf
mov
sbb
mov
or
sub
adc
or
mov
bound
filds
xchg
ret
popa
imul
pop
and
pop
pop
mov
push
jae
fimuls
push
inc
int3
xor
sub
shl
stc
outsb
repnz
scas
shr
xlat
icebp
jne
mov
xchg
jle
xlat
mov
or
mov
in
sub
xchg
dec
call
cmp
dec
push
cld
cmp
call
or
mov
mov
fnsave
ds
pusha
push
imul
sub
daa
ljmp
cmp
jb
gs
push
addr16
sti
insl
sub
sub
ja
cs
push
lea
pop
insl
jmp
adc
xlat
int
mov
sub
call
jnp
shll
call
lcall
mov
outsl
ja
xor
add
leave
cmp
pop
cmpsl
mov
jns
das
push
movsb
cmpsl
jmp
add
stc
jbe
mov
and
jo
hlt
bnd
and
leave
inc
mov
mov
lcall
jl
jg
fs
and
xchg
aam
cmp
pop
and
mov
lss
pop
mov
cli
pop
inc
dec
es
arpl
xchg
inc
es
pop
ds
enter
ljmp
xchg
cmp
jns
lcall
shll
sub
in
stc
cwtl
aad
pop
mov
pop
ds
lods
adc
add
scas
or
js
jle
subb
cmp
jl,pn
push
dec
xchg
ja
push
lcall
ficoms
shlb
scas
mov
jge
push
push
jle
pop
lods
cltd
adc
xchg
and
add
fs
test
imul
cmp
jns
dec
mov
push
sbb
pusha
imul
and
sub
xor
int
int3
and
sub
jo
inc
cwtl
aas
push
sbb
cmp
cmp
out
sub
and
adcl
or
add
push
cwtl
lea
mov
in
pop
lods
or
pushf
jo
or
pop
mov
jne
ja
dec
fisttps
movq
push
xor
pop
jmp
lods
adc
lods
pop
adc
gs
add
xor
adc
mov
out
and
sub
jb
jne
in
test
std
fldl
pop
fimull
in
into
push
pop
incb
in
push
repnz
jnp
mov
xor
mov
xor
bound
nop
sub
sub
ds
inc
lock
sub
js
jecxz
pop
gs
pop
jb
inc
les
sti
push
jns
stc
push
mov
or
pop
lods
inc
ds
mov
cwtl
sbb
imulb
pop
mov
push
sub
push
sbb
addl
lds
mov
mov
loop
dec
mov
and
test
leave
adc
sbb
mov
mov
stos
mov
jbe
outsl
lret
jb
aaa
rolb
cmpsl
lret
stc
ret
jle
aas
std
pop
jo
cmp
mov
pop
jmp
mov
lea
add
lds
mov
cltd
push
mov
pop
jp
inc
xlat
push
fsubs
and
push
lcall
pop
push
adc
jb
jns
or
pop
sbb
addb
sbb
cmp
in
cltd
ds
pusha
ljmp
inc
sti
lock
add
aad
clc
bound
xchg
pop
pop
ds
push
mov
mov
movsl
pop
mov
stos
cs
xor
sub
pop
subl
xchg
pop
adc
test
inc
movsl
push
out
test
test
jns
lcall
add
inc
loopne
or
adc
xchg
inc
pop
cmpsl
imul
dec
lret
cltd
fisubrl
jo
fldl
push
test
pop
bound
inc
push
jno
repnz
dec
mov
sub
jmp
cmc
add
ficompl
inc
loope
inc
stos
popf
pop
xor
rol
inc
mov
cmp
mov
insl
outsb
xor
inc
jg
sub
rol
push
and
cmp
cmp
add
mov
inc
sbbb
xchg
inc
pusha
add
ds
jne
scas
fcompl
dec
cmp
sahf
add
rcrl
adc
push
scas
mov
add
test
jmp
pop
pop
pop
cmpsb
mov
jmp
dec
cmp
roll
cltd
jg
inc
mov
inc
cltd
test
xchg
cmc
int
xchg
stc
lcall
aam
inc
inc
mov
mov
sarb
psubusw
jp
xchg
xor
mov
movups
mov
xchg
stc
insb
inc
add
mov
inc
push
loop
data16
ja
es
mov
pop
push
cmpl
or
mov
ja
jb
mov
cmp
cmp
jnp
mov
xor
call
out
testb
sub
cmp
adc
push
jb
jge
xchg
subl
cld
or
jne
or
in
push
cmp
jno
popf
inc
bound
aas
das
push
in
fdivl
sbbl
mov
xor
dec
cmc
data16
lcall
test
sbb
lcall
xor
shrb
iret
and
inc
jle
xchg
test
nopl
sarb
adc
add
outsl
cltd
aaa
sub
jecxz
imul
xchg
push
xchg
into
cwtl
xchg
jnp
mov
ds
and
jae
mov
xor
movsl
jo
je
gs
sbb
fprem
adc
push
mov
mov
lcall
lcall
xor
jb
xchg
imul
jo
mov
or
cmp
adc
jmp
jecxz
icebp
bound
and
sbb
outsb
mov
repnz
mov
xchg
sub
add
cmc
jle
mov
mov
xchg
stos
jle
lock
lods
icebp
nop
push
jecxz
dec
push
sub
ret
ja
jb
adc
rcrl
and
add
jnp
adc
stc
and
push
mov
push
or
adc
fidivrs
push
pop
jb
jb
xchg
push
push
push
add
sbb
jo
xor
sbbb
sub
lret
ljmp
mov
cs
mov
pushf
pushf
popf
in
dec
bound
sub
jno
dec
push
xchg
or
cmp
and
xlat
pop
xor
mov
jecxz
sahf
sti
fdivs
decb
cmp
jns
rcll
int
lcall
cltd
ja
or
dec
mov
popl
sub
xor
in
sarb
mov
stos
inc
sbb
xor
iret
mov
lcall
jmp
jns
mov
cwtl
decl
jle
inc
lcall
jg
xor
jle
dec
mov
sub
dec
bound
pop
jg
ss
outsb
add
or
xchg
movsl
inc
out
sbb
fcom
adc
xor
jl
pop
cmp
add
push
adc
fbstp
ss
pop
mov
call
dec
push
stc
dec
in
jg
sub
scas
test
push
pushf
mov
jo
or
mov
xchg
ljmp
jle
jl
shll
push
inc
mov
inc
mov
inc
inc
lods
jbe
lahf
roll
or
ficomps
int
adc
mov
insb
pop
int
mov
incl
mov
data16
addr16
mov
jnp
mov
jl
cmpsb
js
jne
jbe
addb
xor
pusha
es
imul
pop
jp
andl
push
sbb
in
mov
sbb
add
es
ss
and
cmp
and
sbb
stos
push
push
divl
and
mov
cld
inc
jb
outsb
mov
shlb
pop
repnz
mov
mov
inc
sbb
test
incb
es
test
pop
insb
out
mov
sub
popf
dec
sbb
imul
out
cmp
lcall
adc
lret
mov
cltd
cs
add
negl
les
add
sahf
cs
xchg
cmp
pusha
jo
jp
jecxz
in
das
lcall
adc
data16
xor
dec
lret
cli
sub
daa
rep
out
jle
stos
das
xor
xchg
cli
lcall
test
arpl
sub
mov
adc
aam
jnp
inc
inc
push
jns
rclb
jo
imul
es
int
movsb
nop
jmp
fsubrs
dec
ret
jns
push
sub
or
jo
push
sahf
xchg
outsb
xor
push
insl
inc
mov
cli
mov
dec
push
movsl
pop
mov
adc
movsl
push
dec
dec
loopne
add
cvtps2pi
cltd
popf
and
pop
pop
xor
jo
jecxz
iret
push
jbe
fcomps
ja
loope
orb
push
and
or
push
rclb
movsl
std
mov
xchg
outsl
fscale
and
push
push
rolb
add
cmp
lcall
pop
pop
adc
add
jg
xor
jb
cld
jmp
mov
sbb
cmp
iret
movd
es
mov
mull
movhps
es
test
test
jp
pop
cwtl
cmp
test
vpackssdw
test
outsb
sub
es
mov
adc
inc
add
jne
mov
pop
push
dec
unpckhps
sbb
in
cmp
xor
lds
dec
adc
xchg
negb
int3
popf
push
mov
push
add
imul
dec
pop
adc
icebp
cmpsb
jg
pop
scas
push
stos
lret
jge
pop
bnd
pop
insb
rclb
test
aad
cmp
jg
add
inc
jmp
sti
cmc
cmc
xlat
or
xlat
cmp
mov
xor
pusha
divb
aam
test
jg
jne
push
das
jbe
popf
cmc
je
mov
mov
pusha
popa
insl
outsl
shl
fs
push
test
push
inc
jle
lcall
fucomip
push
cmp
outsl
xor
xor
xchg
lcall
out
cmp
jne
lcall
scas
push
sarb
call
push
jne
push
lcall
loope
fiaddl
scas
sub
ss
orb
and
mul
pop
ljmp
xlat
cmp
push
jle
jbe
sub
inc
outsb
mov
jle
stc
imul
cmp
xor
enter
shll
gs
add
insb
loop
sub
outsb
mov
xor
jl
mov
push
xchg
pop
inc
scas
fwait
xor
dec
lcall
push
aam
sar
out
xor
mov
dec
dec
lods
in
and
jno
stc
xor
lcall
mov
pop
jae
mov
data16
lcall
test
mov
inc
jmp
int
xchg
sbb
add
xchg
adc
jecxz
test
mov
pusha
xor
push
mov
aaa
subl
cmp
jbe
int
repz
sahf
pop
mov
ficoml
sub
test
call
aaa
sbb
add
cmp
sub
jno
daa
add
jge
jp
bound
pop
mov
pusha
sub
and
push
and
decb
inc
jge
add
sub
and
xor
inc
push
inc
sti
push
out
test
push
push
lods
ds
push
inc
repnz
cli
bound
push
pop
fisubrl
sub
sub
inc
sub
in
cld
sub
scas
pop
push
loopne
pop
ret
insb
xchg
sbbb
idivb
lcall
push
imull
dec
inc
cmp
pop
sbb
ljmp
pop
nop
add
mov
mov
loope
jmp
jne
loopne
xchg
fidivrl
sysenter
cmp
stc
push
cmp
xor
rcll
imulb
push
cltd
push
sahf
and
rdpmc
out
pop
lock
sub
sub
push
pop
stc
int3
ja
jle
push
icebp
jbe
mov
popa
cmp
push
jge
sarb
jne
sbb
mov
and
push
scas
bound
xor
in
notb
inc
cmp
repnz
outsl
mov
scas
sbb
test
mov
mov
lds
or
push
test
xorl
jecxz
icebp
ret
aaa
popl
pusha
ss
xor
repnz
push
mov
jp
pop
xor
cs
xor
cmp
icebp
sbbl
fsubs
sub
imul
jge
test
xor
pop
dec
popa
mov
dec
mov
sub
call
push
clc
jle
mov
push
popf
incl
imull
jbe
sahf
sbb
adc
adc
jnp
pop
into
xchg
lods
jne
add
mov
mov
lods
pop
jbe
adc
inc
xlat
fwait
bound
iret
xchg
xor
or
add
mov
jle
xor
call
push
mov
sbb
clc
cmp
push
je
movsb
orl
sub
mov
mov
xor
fsubl
call
popf
pop
leave
cmp
stos
bnd
out
ljmp
sbbl
sub
fadd
cld
cmp
test
jp
in
test
ret
lcall
test
jns
jo
pop
inc
push
xchg
adc
and
movsl
cmp
push
int3
jge
in
lret
int
mov
mov
push
cmp
out
in
and
in
int3
mull
addb
movsl
jle
xchg
jg
sbb
ja
dec
xchg
pop
push
cld
cld
push
das
jg
pop
inc
push
test
mov
push
scas
xor
and
mov
sbb
dec
inc
ss
scas
rorl
test
les
icebp
shl
push
inc
cmpsb
or
data16
cmc
push
mov
mulb
cmp
data16
pop
inc
scas
pop
insl
pop
push
mov
mov
push
inc
pop
imul
insb
lds
mov
aaa
lahf
inc
jmp
dec
repz
and
push
mov
push
pop
inc
cltd
xchg
loopne
pop
and
mov
xchg
movsl
pop
stc
dec
mov
lret
sbb
xor
ljmp
popa
inc
mov
jne
xor
push
aam
xchg
cmc
lret
xchg
stc
push
lcall
bnd
add
push
fadds
movsb
out
dec
jg
sub
icebp
add
sub
mov
adc
fxch
sbb
xor
dec
cs
shl
ja
pop
mov
jo
sub
add
aaa
jg
mov
pop
mov
popa
lcall
aas
push
je
mov
add
cltd
pop
sub
cmp
add
std
lret
and
imul
pop
imul
jmp
lock
aaa
push
xor
lahf
xor
insl
xor
addb
jle
pop
inc
cs
cld
inc
jns
cmp
pop
pop
ss
cmp
xchg
jmp
lcall
add
aas
push
sti
xchg
sub
cmp
jae
sti
stos
mov
jo
cli
push
shrb
jmp
aaa
fs
popf
inc
es
xor
insb
push
xor
push
data16
sub
adc
pop
test
push
lea
cmpsl
inc
scas
jp
mov
imul
sub
and
stos
pop
xor
xor
mov
adc
cmp
pusha
cltd
push
fwait
std
inc
push
test
pusha
bound
sbb
mov
pusha
xchg
sbb
push
jp
push
jp
cmp
mov
push
xor
jp
fstl
pop
rolb
out
sbb
inc
push
daa
jle
lret
pushf
xchg
or
popa
icebp
inc
es
imul
sub
pop
stos
push
sbb
ror
inc
call
mov
push
pop
dec
pusha
lea
jne
jno
ss
orb
repz
dec
inc
mov
outsl
xor
jg
push
jno
stos
pop
cmp
ss
test
inc
pop
xor
jno
jp
push
cs
dec
shll
or
jae
jl,pt
adc
out
test
pop
or
xchg
imul
sub
push
cltd
dec
jge
hlt
xor
flds
pop
jnp
subl
inc
mov
push
popf
aaa
cwtl
lcall
inc
push
aaa
dec
or
inc
pop
push
jp
out
dec
lds
push
mov
adc
adc
and
fiaddl
mov
fsts
pusha
das
repz
data16
push
mov
mov
daa
sub
xchg
arpl
stos
adc
ret
ret
mov
xchg
lcall
movups
mov
xor
pushf
mov
inc
repz
insb
push
aaa
cmc
fistps
mov
mov
adc
pusha
leave
dec
sbbl
cld
mov
mov
dec
rcl
pop
cltd
xor
movsl
mov
dec
push
inc
or
adc
test
sub
inc
lcall
mov
shrl
mul
sbb
pop
bound
mov
int
push
lods
call
sbb
decb
pop
adc
popa
xchg
sub
adc
sbb
mov
cmp
jbe
dec
jne
imul
rcrl
je
fsubrl
lods
pop
sub
pop
ds
mov
cmpl
and
xchg
sub
push
push
xchg
add
add
and
xchg
inc
mov
push
cmc
xor
mov
or
jne
lods
pop
bound
dec
mov
clc
ljmp
pop
js
and
call
pusha
cmpsb
pusha
sub
mov
loopne
and
mov
mov
xor
mov
xor
cltd
je
mov
outsl
sar
pop
mov
xor
pop
push
xchg
and
jp
fidivrl
adc
bound
jp
outsl
add
decl
out
mov
jne
ret
and
insb
mov
push
push
cli
cmp
and
jo
mov
pop
lret
xlat
iret
mov
cmp
jecxz
push
imul
cli
inc
cmpsl
lock
and
aam
mov
lods
shrl
push
sub
in
cmp
add
aad
test
lods
aaa
fsubl
out
int3
cmp
mov
imul
movsb
outsb
mov
iret
xor
dec
hlt
insl
lcall
test
in
scas
loope
mov
in
in
cmp
push
mov
repnz
outsb
lret
cmp
mov
shlb
scas
andb
cmp
lcall
dec
imul
cmpb
orb
jno
mov
cmp
lcall
sbb
adc
dec
jmp
fistl
jg
pushf
push
push
mov
sbb
pop
sub
mov
nopl
jmp
add
cmp
push
dec
dec
jbe
mov
rcrb
add
sub
scas
bound
sti
mov
movb
pop
sbb
test
lds
and
inc
mov
sysret
daa
movsb
bound
push
jl
mov
std
lock
push
jmp
or
push
hlt
cmp
repnz
popa
adc
mov
inc
push
push
pop
in
push
add
and
or
cmc
inc
adcl
pop
mov
insb
lret
das
out
cmp
jno
push
test
jmp
into
mov
push
xor
xchg
in
and
into
into
sbb
mov
ret
insb
cmpsb
cmp
icebp
adc
dec
repnz
add
dec
mov
mov
mov
pop
gs
inc
movsb
or
add
shlb
xor
inc
push
mov
fistpll
dec
loop
insb
mov
jmp
dec
insb
cmpsl
xchg
stos
stos
testb
push
je
inc
lret
lcall
jge
jmp
or
lds
mov
and
imul
adc
iret
mov
sub
pop
and
rcrl
insb
hlt
idiv
outsb
out
mov
cmp
leave
or
loop
icebp
jecxz
mov
lea
or
jo
push
jo
cmpsb
lods
jbe
sbb
and
push
lret
mov
clc
sbb
add
xchg
mov
jmp
jb
jl
js
test
sub
lcall
je
and
inc
mov
out
xor
sahf
mov
mov
repz
mov
pop
into
inc
cmp
push
mov
push
lahf
decb
jecxz
cld
pop
aas
outsb
test
shll
xchg
cmp
jecxz
outsl
jecxz
push
shll
iret
mov
inc
out
jnp
mov
fs
movsl
fsubrs
mov
pusha
dec
add
xchg
lret
dec
push
sub
jge
sub
outsb
jo
cs
in
inc
mov
cmp
jbe
pushf
aad
lret
in
ds
push
pop
adc
pop
and
ret
jle
sub
sbb
sub
or
push
jge
inc
mov
icebp
mov
sti
sarl
jns
jns
push
mov
add
aaa
jle
push
or
mov
out
outsb
add
cltd
jno
fldl
incb
popa
es
shll
in
test
dec
pop
pop
pop
adc
dec
mov
jo
sub
lret
out
insb
psrlq
xchg
jbe
xchg
or
incl
push
cs
ret
sbb
pop
push
xor
data16
lahf
aad
pop
push
jno
in
inc
test
xchg
or
sbb
stc
inc
lret
aaa
or
cmp
push
dec
xchg
fs
jecxz
jb
addr16
or
fs
jns
insb
and
cltd
jmp
not
enter
sbb
mov
sarl
push
cmp
push
je
mov
cmp
xor
push
xchg
lea
push
movsb
daa
dec
sub
movsl
cmp
xor
inc
imul
insl
enter
push
mov
xchg
scas
test
jle
fidivs
scas
or
xor
outsl
or
cmpsb
int3
cmp
add
out
push
notb
out
sbbl
xor
xchg
into
shr
lods
loop
sahf
push
jo
test
cmp
dec
sub
fisttpl
jne
dec
cmp
push
xchg
ja
inc
jle
xchg
lret
fnstcw
sub
daa
inc
jb
mov
xor
pop
and
cltd
sbb
push
mov
lcall
inc
call
out
add
nop
sbb
hlt
int
xchg
mov
xor
jo
test
test
cltd
stc
sbb
dec
pushw
add
test
hlt
add
outsb
ds
ljmp
dec
push
jbe
outsb
dec
mov
push
xchg
popa
or
pop
xchg
xchg
cmp
mov
dec
pop
lret
cmp
mov
out
ret
insb
lcall
push
lock
mov
mov
mulb
js
xor
and
mov
or
lcall
inc
bswap
and
pusha
pop
dec
test
sbbl
xchg
enter
mov
or
sahf
push
lcall
pop
int3
dec
xor
add
mov
sbb
add
pop
sbb
pop
push
jnp
xchg
imul
xor
decb
imul
into
push
cltd
setns
arpl
mov
cwtl
xchg
aas
repnz
cwtl
jge
cmp
mov
rcrb
fadds
xor
or
push
jnp
ja
or
fsubrs
jae
jb
das
rcl
inc
fiadds
lret
cmc
xlat
inc
lock
hlt
xor
fcomi
jecxz
out
es
inc
sub
setp
in
push
into
lds
cltd
inc
fists
aaa
jp
mov
cmovle
incb
icebp
mov
sub
jnp
mov
insl
fnstenv
aad
jp
sub
stc
outsb
pop
test
mov
dec
pop
icebp
ret
subl
xchg
inc
mov
test
lea
jo
dec
sub
xchg
repnz
adc
dec
cli
lret
pop
fldl
adc
cmc
outsb
jnp
icebp
adc
enter
int
test
in
loop
push
enter
sub
insb
adc
mov
or
jle
dec
xlat
pusha
cmpsb
das
loopne
in
es
jb
cmp
add
xor
cmp
add
stc
jns
jg
out
fdivrl
jbe
int
mov
mov
dec
fs
shrb
mov
mov
cmp
pop
sub
push
fs
fildll
fisttpl
fdivl
xchg
lds
adc
mov
push
out
mov
pushw
fstps
outsb
jp
pop
cmp
dec
and
xchg
nop
shlb
sub
sbb
outsl
lcall
lods
xchg
cmp
jno
mov
lahf
mov
push
or
pop
pop
cmp
mov
or
jbe
or
cmp
fs
sub
cs
jle
std
and
in
lods
cltd
cmpsl
jge
lcall
fmuls
push
mov
pop
icebp
pusha
lods
in
cmp
adc
movsb
fnstcw
loop
ljmp
repnz
aam
fildll
pusha
ficoml
mov
mov
insl
sub
movsl
pop
test
xchg
sbb
bound
and
and
lahf
xor
aam
aas
sub
xchg
xchg
jae
add
cpuid
loope
jecxz
mov
stc
gs
and
shl
dec
dec
jbe
add
jge
sarl
stos
mov
stc
sbb
popf
rcrl
mov
push
cs
sbb
sbb
mov
jnp
rcrl
adc
les
lcall
xor
movsb
movsl
sbb
inc
movb
sub
and
add
lret
cli
inc
xorb
mov
pusha
cwtl
xorb
popa
cmp
sbb
adc
push
lcall
lahf
inc
das
popa
data16
lock
jno
add
cmp
shl
inc
cs
sbb
pop
sub
mov
pusha
xor
leave
data16
rcrb
or
mov
ret
mov
inc
sub
hlt
inc
sub
pop
lcall
loop
cltd
or
and
xchg
adc
dec
add
or
dec
xor
push
adc
cmp
mov
adc
add
xor
xchg
push
jns
or
inc
and
jno
push
inc
push
add
sub
and
pop
nop
mov
mov
jmp
int3
inc
ljmp
mov
xor
cmp
add
mov
je
sub
je
gs
fs
jae
inc
cltd
sbb
imull
jmp
js
pop
incb
aaa
jb
test
adc
xchg
or
jge
arpl
xchg
jecxz
jb
adc
xor
sub
test
xchg
ss
xor
imul
pop
add
jns
push
dec
lret
and
sub
fildl
out
mov
jbe
push
mov
xor
mov
mov
jne
imul
jle
mov
loop
inc
out
mov
rorb
cli
ret
call
iret
mov
jmp
jle
xor
pop
cmp
pop
mov
xor
inc
add
out
xchg
lahf
cwtl
pop
and
je
mov
ficomps
int3
fisttps
dec
stos
pop
pop
sti
mov
fnstsw
mov
in
rcrb
or
imul
adc
bnd
clc
xor
fsubrs
cmc
aaa
push
pop
push
pop
in
pop
lea
imul
push
cmp
mov
jl
fildl
pop
mov
hlt
and
sbb
mov
cmpsb
xlat
mov
sbbl
lret
jge
sub
out
adcl
sti
push
shr
pop
les
fstps
mov
popf
shrl
inc
push
xchg
xor
inc
mov
movsb
adc
mov
frstor
aaa
insb
push
ljmp
xchg
xor
aam
mov
fisubrs
test
popf
inc
outsl
pop
ja
inc
pop
int
dec
test
mov
cwtl
and
inc
xor
rcll
les
mov
mov
out
adc
notb
pop
pop
dec
int3
std
adc
and
out
movsl
xor
mov
leave
aaa
test
iret
gs
lcall
jne
jg
sub
andl
fwait
jg
dec
push
sub
xor
dec
lcall
das
es
repz
sub
sbb
sti
ja
outsb
xchg
and
mov
cmp
loop
arpl
stos
xchg
add
out
imul
xor
loop
mov
cmp
out
or
pop
call
mov
sub
dec
ficoms
nop
stc
sbb
jb
sub
ret
add
icebp
and
xor
pop
ffreep
xchg
pop
add
out
ret
mov
int
pop
ja
test
out
xlat
or
outsb
cs
mov
xchg
pusha
ret
repz
out
out
ds
daa
pushf
subb
jno
ljmp
inc
sarb
xchg
pop
and
push
xchg
dec
int
int3
in
ss
and
les
add
inc
jp
cmpl
int3
lret
pusha
insl
inc
pop
out
stc
stc
out
es
xor
jno
mov
mull
dec
add
pop
arpl
insb
xchg
lock
cmp
xor
int3
lock
aad
insb
je
rcr
test
cmovb
lods
inc
jg
mov
jnp
lea
cmovae
lea
cs
js
pop
jo
cmp
mov
and
mov
imul
cmp
jnp
negl
jbe
mov
pop
jle
aas
push
cltd
xchg
mov
sub
xchg
out
jns
push
lea
aad
add
mov
xchg
pop
dec
es
push
lea
jae
pop
add
mov
je
rorl
jb
loopne
lcall
xor
ds
pop
std
lcall
add
mov
jp
into
pop
pop
daa
mov
mov
loope
xchg
inc
and
popa
aaa
bound
xchg
jno
push
cmp
dec
daa
inc
popl
sbb
movsl
test
xor
dec
mov
pop
mov
movsl
fimuls
mov
pop
mov
cmc
outsb
pop
sbb
inc
mov
fistpl
lods
scas
xor
inc
scas
ror
adc
mov
cs
mov
enter
jg
cmp
xchg
cmp
push
sub
push
aas
ds
xor
mov
bound
or
cmpl
jmp
mov
push
ret
jmp
pop
xchg
inc
scas
lods
push
out
test
dec
dec
jmp
fld
cmp
mov
cmpl
or
in
negb
outsb
jg
stos
lds
das
scas
cmp
fmuls
jns
fucomi
cltd
repz
stc
dec
push
fptan
xchg
test
push
pop
out
flds
in
push
loopne
rclb
cld
adc
push
mov
jo
sub
iret
mov
inc
jb
call
insb
dec
xchg
cmp
mov
jle
lcall
aaa
clc
idivb
xor
pop
jp
into
aam
pop
js
and
icebp
cs
repnz
pop
mov
dec
pop
mov
ljmp
xor
xor
mov
mulb
adc
cwtl
imul
sahf
dec
leave
rorl
in
sbb
divl
pop
push
cmp
test
cli
xchg
stc
ret
push
sahf
mov
in
clc
mov
or
and
icebp
ja
shr
add
pop
and
pop
and
push
insl
out
popa
sub
jo
out
pop
stos
ja
mov
jnp
outsb
call
mov
lcall
jno
sbbl
imul
popa
xchg
pop
push
in
xor
cwtl
and
pop
jb
jecxz
jmp
jbe
jg
stos
cmp
rcrb
jg
push
lret
jne
dec
add
jno
ret
push
sbb
lret
je
mull
mov
dec
aaa
sub
call
push
int
mov
dec
outsl
xchg
cmp
test
xchg
jo
push
jge
mov
cmp
jno
pop
mov
pop
mov
pop
lea
pop
mov
pop
jno
popa
nop
stc
lcall
mov
xchg
test
push
xchg
cmc
add
sbbb
ja
jnp
push
adc
insb
jne
jle
shll
jp
int3
xor
out
in
jg
pop
loop
or
dec
sub
push
ja
jo
pop
incb
sbb
cmp
call
mov
les
and
lods
pop
nop
insl
out
cmp
jbe
adc
neg
jno
stc
xorl
jbe
xchg
cmc
xor
cmp
rorl
fists
repnz
loope
outsl
loope
test
jo
dec
addw
sub
pushf
clc
jne
insb
push
lret
or
in
lahf
fldl
ljmp
push
jns
lea
jb
in
jg
negl
data16
jmp
mov
push
jae
scas
cmp
ret
loope
loop
xor
and
mov
push
icebp
ret
out
or
dec
mov
jno
cwtl
loopne
or
cmp
sbb
jae
cmp
xor
or
xchg
outsb
inc
add
or
push
xchg
or
out
add
xchg
jg
stos
push
repnz
mov
ja
mov
mov
pop
decl
outsb
js
cmpb
mov
jge
cmp
hlt
mov
pop
mov
in
inc
mov
cmp
cltd
adc
das
cld
mov
pop
stc
jbe
faddl
lock
jmp
push
and
das
xor
out
outsb
jns
jbe
cmp
subb
sbb
addl
xchg
xor
ljmp
sahf
xor
das
loop
pop
lcall
sub
sbb
mov
xor
lcall
push
data16
pop
inc
pusha
cmp
ffree
sub
ds
xor
push
lods
cltd
addb
stc
pop
or
fwait
pop
push
cmp
test
and
add
rcll
pop
mov
shlb
test
insl
aaa
push
cltd
and
inc
stc
mov
dec
out
jle
div
add
add
aas
xor
lcall
mov
out
mov
icebp
push
mov
inc
movb
pop
adc
stos
xchg
push
mov
pop
adc
mov
lods
outsl
std
push
sahf
lds
lea
xchg
dec
test
scas
mov
push
mov
cli
stos
cwtl
es
loope
fs
jno
mov
mov
xor
mov
xor
orl
inc
cli
sub
test
int3
jp
shlb
add
ja
inc
xchg
pop
cli
jl
mov
inc
cmp
call
stos
dec
push
jge
sbb
inc
jg
repnz
mov
enter
mov
and
cmp
orps
push
mov
repz
divl
inc
sub
cmp
pop
cltd
xor
enter
je
jne
in
cwtl
mov
out
jp
fidivl
das
stc
mov
ret
pushl
mov
inc
outsb
xlat
lret
mov
mov
ret
pushf
es
repnz
imul
les
or
dec
fiadds
lea
push
sub
imul
push
push
cmc
sub
ret
pop
sbb
test
bound
inc
pop
movsl
mov
and
sub
test
sbb
sub
and
sbb
or
and
outsl
cmc
into
cwtl
lahf
arpl
ds
inc
sbb
xor
xchg
rolb
inc
cmp
mov
outsb
pop
mov
scas
clc
jb
push
pop
jo
and
mov
fcompl
arpl
xor
and
movsb
jno
and
xchg
lods
jbe
loop
in
mov
icebp
jae
jle
fmuls
roll
and
jp
lock
rcrl
mov
xchg
inc
mov
inc
ds
int
sub
xor
rcrb
jnp
and
fs
jnp
push
fs
dec
icebp
das
xchg
sbb
cmpsl
xorl
xchg
jmp
jle
out
cwtl
int
pop
cs
or
mov
and
xchg
lret
jle
pop
jns
xchg
sbb
xorl
xor
and
divb
stos
or
or
or
clc
and
loop
sti
outsb
stos
and
and
jl
cmc
push
into
mov
push
out
ljmp
je,pn
sbb
lret
push
lcall
jmp
jge
mov
addl
pop
cmp
mov
sbb
mov
jge
aas
aaa
jle
hlt
ficomps
adcl
jns
sub
lret
or
jbe
push
xchg
mov
push
push
or
mov
push
cld
pop
pop
add
scas
shrl
xor
stos
sbb
je
dec
cmc
cmpsb
stc
adc
cmp
outsl
jmp
lret
push
data16
jge
test
push
xlat
cmp
dec
jg
addb
lock
jge
pushf
jns
sub
lret
sub
add
jle
or
sbb
cli
outsb
sub
aas
add
lea
mov
add
push
sarb
jbe
add
mov
inc
scas
sub
in
repnz
pop
bound
idiv
negb
mov
pop
clc
xor
std
cli
es
mov
mov
adc
jnp
clc
and
inc
inc
mov
cmc
in
or
pop
mov
inc
pop
cmc
insl
loopne
or
inc
xlat
fidivl
jp
jae
push
ss
testl
lcall
out
pop
aam
mov
test
cmp
mov
pop
xor
jg
test
rol
jns
mov
mov
xchg
movsl
aaa
insl
fldcw
jo
mov
divb
jg
test
push
add
leave
add
mov
clc
mov
jo
js
jp
sarb
outsb
adc
xchg
mov
jo
mov
fstps
mov
es
or
out
xor
in
xchg
xchg
subb
jmp
or
ret
pop
or
cmp
jl
ss
xchg
pusha
aas
aaa
lahf
jo
mov
outsb
outsl
or
frstor
mov
lods
repnz
std
mov
sbb
push
imul
or
cs
push
jp
cmp
push
sub
dec
xchg
data16
mov
mov
test
shl
fisubrs
pop
ljmp
jp
aaa
iret
sub
pop
push
mov
jg
xor
xor
dec
mov
pop
lcall
in
jmp
mov
dec
aam
adc
xchg
mov
hlt
add
out
adc
in
sbb
iret
test
dec
mov
xor
mov
xor
xchg
out
out
mov
cmpsb
bound
inc
xor
into
mov
push
xchg
cmp
and
imul
inc
sub
cmovl
or
sbb
or
ja
in
out
inc
cmp
pushf
out
sub
dec
pop
push
stos
ret
test
cmc
cmp
mov
cmp
in
cltd
mov
stos
cwtl
sub
or
insl
inc
gs
cmp
ret
sub
ficomps
incl
rorb
cmp
ljmp
push
mov
repnz
xchg
sarb
mov
push
testb
inc
push
and
lcall
jb
inc
dec
jbe
negb
aas
shl
sub
pop
push
and
rolb
test
inc
pop
xchg
shlb
lahf
mov
xor
xchg
fstl
ret
jo
xor
mov
push
cmp
sub
xchg
int
test
push
bound
jbe
lcall
inc
jb
jl
test
pop
les
xor
aam
inc
and
mov
test
mov
std
cwtl
mov
pop
jp
jle
lods
mov
and
ret
jge
sub
jg
fistps
out
cwtl
fsubr
ja
adc
mov
mov
pop
xor
hlt
mov
sbb
popa
lret
push
mov
mov
push
hlt
jno
cmp
pop
outsl
xchg
rcr
lea
in
insl
jo
orb
decb
arpl
cwtl
loop
sub
popf
out
adc
xorb
jp
xor
pop
push
mov
and
pop
xor
pop
push
cmp
test
loopne
lcall
inc
cmp
dec
std
mov
push
sbb
jae
and
inc
arpl
in
fwait
pop
push
mov
inc
jp
mov
cmp
insl
and
cld
fidivrs
mov
xor
out
pop
sahf
inc
cmpsb
lcall
ss
bound
mov
repnz
jb
call
sub
pop
inc
popf
pop
mov
mov
and
cmp
xor
jne
jp
inc
pop
xchg
jg
in
cmp
out
nop
fmulp
mov
sub
out
sahf
lcall
mov
cs
cld
stos
ret
sub
sbb
cwtl
sbb
pop
fwait
mov
inc
inc
jp
add
cmpsl
pop
stc
lret
push
sub
mov
push
popf
cmp
jl
leave
les
clc
xor
adc
jno
jp
lcall
popa
jno
jp
xchg
inc
mov
and
ds
or
popf
iret
adc
or
add
sub
push
ret
inc
and
push
cmp
sub
pop
pop
jb
jp
jg
cs
movsb
lahf
sbb
data16
dec
adc
stc
out
pop
sbb
mov
adc
and
popa
fisubrs
jae
pop
jge
jne
idivl
xor
nop
bound
xor
in
shrb
stc
add
push
push
xor
ljmp
inc
cmpb
test
out
pop
inc
dec
jne
les
cmpsb
out
sbb
xor
push
insb
lods
and
sysenter
push
xor
test
pop
push
out
out
and
pop
jbe
and
outsl
sbb
cmp
js
inc
mov
cld
push
scas
movsb
jbe
cmp
cmc
pop
jnp
lcall
mov
sti
mov
das
mov
test
adcl
inc
mov
aaa
push
sarl
mov
aaa
scas
popf
cwtl
mov
xchg
sbb
mov
js
loop
cmp
sub
add
add
xchg
shll
mov
js
push
inc
repnz
xchg
imul
jp
sub
pop
pusha
mov
xor
std
xchg
test
imul
jmp
cmp
sub
pop
jle
shl
in
out
stos
jae
aas
loopne
xor
pop
xor
mov
dec
out
int3
push
loop
pop
and
in
bound
push
aaa
loopne
add
outsb
sub
xor
cmp
loope
mov
pop
dec
pop
mov
movsb
pop
pop
cmp
push
sub
popf
or
xor
fnstsw
sbbb
jo
sbb
mov
xor
lcall
hlt
xlat
jle
mov
addl
clc
inc
addr16
mov
cmpsl
daa
push
sarb
icebp
adc
mov
rcll
mov
jne
insb
das
xchg
outsl
cmp
rcrl
xor
jns
stos
lds
ljmp
jp
popa
push
add
mov
xor
ds
test
lds
dec
or
jo
jb
daa
out
nop
pop
mov
push
dec
mov
mov
out
mov
sub
setns
es
ds
ja
sub
adc
xorb
push
movsb
inc
pop
ljmp
xor
clc
sti
scas
mov
decb
xor
cltd
adc
movsl
fwait
test
fs
pop
sti
cmp
cli
bound
cltd
push
sub
orb
ja
pop
push
and
jb
andb
cmp
push
int
mov
jmp
jbe
wbinvd
in
stc
pop
cld
insl
pusha
jo
movsl
or
jmp
mov
jo
outsl
cmpsb
flds
pop
jbe,pn
stc
mov
cmpsb
fsubrl
cli
outsb
mov
push
adc
inc
lcall
out
insl
cmp
addl
in
jno
mov
andb
loopne
ds
lds
jle
jl
mov
insb
mov
pop
inc
loop
clc
fs
xor
add
inc
or
xchg
test
sbb
mov
mov
mov
pop
xchg
int
stc
stos
scas
cltd
pop
je
mov
xor
cmp
daa
std
es
push
ja
add
popf
cmp
xchg
dec
rcr
add
aaa
adc
jg
jns
adc
push
mov
cmp
pshufw
mov
fwait
out
das
orl
mov
pop
xchg
push
push
in
push
xchg
test
adc
jbe
repnz
mov
mov
adcl
xlat
push
push
mov
out
cmpsb
and
mov
lock
push
sub
test
fnsave
bswap
mov
dec
sbb
jb
lcall
jbe
sbb
jg
push
pop
fwait
sbb
cmp
ds
lret
shll
pusha
ret
fistpll
addb
orl
or
sub
data16
jnp
je
rcrl
add
shll
cltd
das
cld
jae
idivl
or
repz
mov
cltd
dec
and
inc
jle
xor
imul
cmp
fs
push
cli
pop
jp
scas
mov
negb
add
add
dec
cmpsb
arpl
cltd
movsl
jb
test
xchg
xchg
decb
data16
ljmp
pop
pop
mov
push
or
testl
add
inc
frstor
jb
jne
std
fiadds
xchg
sbb
clts
je
inc
in
jl
sbb
sbb
mov
jmp
popf
adc
dec
push
ja
pop
lcall
xchg
push
ljmp
in
xchg
imul
add
pop
inc
add
jg
lock
lods
or
inc
lcall
pop
jo
and
cmpsb
jmp
sub
jns
rcl
cmp
sub
rcrb
add
cmp
icebp
cltd
jb
sub
ds
out
cmp
xchg
pop
mov
sub
ljmp
push
jno
cmp
jg
leave
mov
sbb
outsl
xor
insb
dec
lcall
push
lods
cmp
outsl
outsl
inc
xchg
mov
in
pop
jecxz
mov
stc
xor
fldpi
mov
mov
jle
divl
xor
ds
push
les
mov
repnz
xor
clc
and
pop
jo
and
pusha
les
pop
mov
out
clc
cmpsb
inc
pusha
outsl
cmp
pusha
add
add
in
mov
sub
loope
pop
or
cmp
inc
jnp
push
add
or
clc
cmp
cli
jns
pop
std
dec
inc
imul
cmpb
mov
orb
push
inc
bound
out
xchg
ret
jne
sbb
jns
and
pop
icebp
inc
cwtl
je
and
js
or
jle
mov
incl
sbb
ds
mov
mov
sub
cli
mov
stc
mov
pop
pop
push
add
jns
pop
aaa
repz
sbb
test
or
rcrl
bound
sub
sarl
xor
mov
mov
cli
jl
dec
insb
ret
mov
xchg
push
add
outsb
daa
jo
ret
jb
jmp
pop
jecxz
jp
add
int
add
mov
clc
mov
dec
jp
push
shll
cmpsl
mov
add
sbb
fs
xor
mov
add
add
jb
jae
mov
add
repz
push
pop
mov
out
cmp
loope
lods
adc
out
icebp
cmp
lock
repnz
and
jns
sub
push
jb
xchg
jns
dec
or
adc
outsl
xchg
cmp
pop
lcall
jno
data16
jb
mov
jns
testb
jb
push
push
popl
mov
xchg
jp
and
arpl
mov
push
xchg
sub
jae
xor
js
cmp
sub
jmp
addl
subl
inc
shrb
sbb
aaa
push
fdivrs
fimull
add
mov
aas
inc
and
repz
mov
inc
jecxz
aas
stc
cmp
in
and
mov
insb
xchg
push
jo
push
and
push
arpl
bound
xchg
test
dec
sub
pop
xchg
mov
subl
mov
lods
inc
leave
xor
mov
lahf
jecxz
jb
jno
pop
xchg
pop
pop
sahf
scas
notb
push
fisttps
sub
cmp
push
aam
test
mov
stos
out
jmp
fstpt
stos
push
test
cmp
aas
jb
push
rorb
stc
out
dec
stos
repnz
push
fnstsw
jl
jns
mov
cltd
outsl
mov
aas
inc
pop
push
jp
add
js
mov
outsb
dec
mov
les
jp
xor
xor
fwait
cld
pop
adc
scas
pusha
lock
sbb
mov
ret
jb
sbb
int
push
or
cmp
enter
add
shrb
clc
test
loop
stos
xchg
in
xor
packsswb
lcall
cmp
and
sbb
add
push
push
ds
ss
push
test
imul
xor
jae
add
inc
mov
jmp
icebp
push
xor
aaa
push
mov
outsb
push
dec
cli
idivl
push
movsb
jb
in
sahf
jb
push
jbe
js
jnp
popa
sub
idivl
enter
das
mov
push
mov
shll
sub
punpcklbw
cmp
mov
mov
add
xchg
jge
push
nop
loope
push
in
cs
push
cmc
xor
nop
ret
jmp
ds
sahf
fdivrs
jns
cmp
push
sbb
inc
or
cmp
adc
cmpsl
aaa
push
dec
inc
out
ret
mov
js
outsl
sbb
aas
push
outsb
cmpl
int3
fstl
push
pop
jno
cmp
hlt
mov
inc
mov
jp
inc
cmpsl
test
inc
in
and
mov
push
dec
jno
adc
lds
jmp
jbe
pop
sbb
add
ss
push
jp
xor
or
aas
test
rcll
add
and
lcall
aam
mov
stc
js
jo
mov
movsl
jb
mov
pop
gs
xor
lret
and
push
push
fiaddl
mov
add
outsb
pop
sbb
orb
sub
rorb
hlt
ficomps
push
mov
rclb
clc
fisubl
dec
jo
les
outsb
cmp
pop
push
jno
icebp
xor
sub
sub
mov
int
sub
cs
cltd
jg
cmc
or
xor
inc
addb
mov
add
push
mov
outsb
cltd
xor
ss
push
xor
inc
inc
xchg
mov
stc
data16
out
div
mov
inc
outsb
or
jecxz
push
rolb
hlt
inc
repnz
cmp
mov
rorb
cmp
xchg
pop
mov
fstpl
or
imul
mov
fldl2t
add
push
xor
pop
mov
xchg
popa
push
xor
jle
out
std
and
push
je
mov
ret
sub
pop
push
mov
dec
in
xchg
outsl
mov
push
cmp
sub
aaa
push
fists
test
mov
push
mov
jge
jbe
xor
aam
sbb
repnz
repnz
push
sbb
push
lcall
mov
push
ret
xchg
pop
xor
iret
jmp
jmp
out
lcall
pop
pop
cli
or
adc
leave
xchg
stc
xor
subl
clc
pop
outsb
in
pop
mov
push
cmp
jnp
mov
and
jle
adc
shlb
dec
sub
add
push
and
push
or
in
cmp
push
mov
jo
stos
lahf
outsb
lds
icebp
and
push
xchg
setne
jecxz
push
stc
ds
sub
ret
cs
popf
mov
mov
ja
das
xor
lea
mov
stos
or
cmc
push
jle
ljmp
rclb
mov
pushf
mov
outsb
movsl
xchg
cmpsl
incb
mov
stc
cwtl
jb
fnstsw
cltd
pop
out
jnp,pn
repz
sub
push
pop
imul
cmp
lcall
test
push
orl
pop
jo
imul
dec
sub
lcall
xchg
push
loope
aad
sbbb
aad
inc
jbe
into
jnp
pop
and
xchg
js
adc
and
loope
daa
or
adc
fcom
inc
cld
rolb
xchg
lcall
data16
inc
int
mull
test
int3
xchg
popa
pop
outsb
outsb
out
pusha
dec
into
xchg
xchg
cmp
and
outsl
push
scas
push
lock
insb
push
aam
cmp
pop
cli
dec
xor
iret
xchg
xchg
mov
cltd
push
test
push
decl
iret
mov
cli
push
push
inc
and
fstl
jle
mov
or
mov
pop
inc
jb
lcall
stc
mov
mov
add
xor
xchg
addr16
dec
inc
xchg
idivl
cld
push
xchg
jne
clc
xchg
out
lcall
sub
inc
mov
push
fcompl
pop
insl
testb
mov
mov
inc
data16
cli
mov
jno
dec
lcall
out
add
arpl
mov
sub
ja
mov
adc
fldcw
pushf
into
pop
dec
cmp
scas
sub
rol
scas
push
xchg
popa
xlat
push
adc
sbb
mov
xor
gs
pop
lea
cmc
idivl
lcall
inc
mov
dec
jo
pusha
fs
iret
decl
sub
xor
iret
subb
jle
jae
jno
push
imul
in
mov
stos
xor
push
ss
arpl
xor
and
les
loope
jp
cltd
in
or
pop
das
mov
mov
loope
inc
scas
fadds
addr16
push
cmc
or
imull
mov
push
push
sub
das
sub
inc
popf
xor
test
les
mov
jge
and
dec
pop
and
sbb
inc
notb
cmp
shr
lock
cmp
stc
add
mov
je
cli
jb
xor
ljmp
testb
jno
inc
lahf
add
ljmp
mov
cmp
xchg
cmpsl
ja
cltd
jle
xchg
popa
aaa
jb
push
cmp
push
push
xchg
cltd
cltd
pop
sbb
mov
aaa
push
hlt
imull
je
xchg
push
lock
icebp
shlb
pop
pop
push
dec
xchg
sbb
jp
das
bound
sub
enter
pop
mov
cmp
stc
cmovp
jno
push
ror
xchg
das
pop
pop
jmp
sbb
or
jb
xchg
addr16
and
dec
xor
jp
push
mov
dec
aas
pop
inc
iret
cmp
mov
and
cld
inc
ja
lea
test
cs
stos
xor
adc
xor
rcll
cmc
sbb
or
jge
jno
xor
cwtl
sbb
outsl
push
shrb
sub
test
mov
lods
and
xorl
out
jecxz
fstpl
push
lds
in
xorl
das
lock
inc
pusha
xor
jmp
fbstp
pop
add
lcall
jo
jle
push
pusha
divb
in
xor
test
pop
int3
inc
testb
scas
xchg
pop
repnz
dec
mull
cli
cmp
repz
sti
pop
xor
int
push
lcall
mov
ret
adc
into
fildll
cmp
lret
push
dec
and
xchg
push
dec
cmp
mov
test
push
pop
in
bound
rclb
sti
enter
push
ds
stos
xchg
popa
push
mov
or
ds
jmp
dec
xor
cmp
cmc
or
fildll
outsb
popa
pop
push
fcos
jnp
jb
add
stc
ss
gs
in
jno
fidivrs
mov
adc
sub
ret
mov
mov
std
into
dec
fisubrs
cltd
in
cmp
push
xchg
shlb
icebp
push
xchg
repnz
push
inc
out
pop
cmp
jae
mov
sbb
xor
test
jb
leave
xor
fwait
jg
cwtl
mov
aaa
push
push
push
jnp
dec
mov
xor
aas
inc
cmp
lods
fnstcw
fcomip
push
lea
push
loope
jno
ss
xor
cmpsl
stc
xor
cmp
jp
hlt
incb
adc
xchg
shlb
cmp
std
cmpsl
mov
push
dec
mov
inc
pop
jb
arpl
push
call
sub
insb
xor
mov
inc
jb
scas
lock
inc
add
pop
and
jnp
mov
xchg
cmpsb
sbb
add
push
ds
scas
outsb
idivb
jno
lret
mov
dec
mov
jb
cli
clc
lret
push
out
clc
lcall
mov
sub
and
ror
cltd
jle
pop
mov
lcall
popf
movsl
mov
in
inc
rcll
mov
cmp
fmuls
fcomps
rorb
dec
push
popf
xor
cltd
add
pushf
xchg
cmpsl
and
es
pop
xor
inc
xchg
repz
mov
push
outsl
lock
push
in
sub
jb
jle
xor
lahf
iret
dec
push
insb
out
inc
push
fsubrl
xchg
push
cli
jbe
sub
cmp
sub
mov
mov
pop
dec
sbb
dec
mov
or
call
lcall
xchg
jle
int3
and
jns
aaa
sub
or
push
xchg
sbb
ss
cmp
xor
movsl
std
jns
jg
icebp
mov
loopne
jbe
mov
cmp
ret
dec
fsubrs
or
aad
push
and
xlat
push
into
dec
cmp
bound
cmpsl
cmc
fists
and
negl
dec
inc
jns
cmpb
test
cltd
cmp
and
bound
popa
das
jle
cmc
testb
push
mov
push
xor
cltd
add
push
pop
push
leave
lods
mov
sub
imul
lret
mov
mov
scas
rorb
dec
ficomps
incb
jae
sahf
cmp
clc
add
cmp
dec
pop
andw
sbb
xor
repnz
mov
push
push
mov
loope
jmp
movsb
sub
push
iret
jmp
pusha
pop
mov
sbbl
lea
adc
xor
cmp
mov
insb
ds
inc
inc
mov
mov
fisttpl
push
fisubs
mov
fdivl
cld
mov
aam
xchg
leave
test
mov
cmp
inc
push
sub
test
ljmp
out
in
push
pop
aaa
mov
das
push
pusha
xor
mov
outsl
leave
clc
jmp
mov
xor
push
or
sub
inc
jbe
mov
jo
es
ds
mov
bound
jb
out
mov
xor
sarb
fwait
xor
xor
cmp
add
ds
jmp
mov
inc
jg
enter
mov
jl
lcall
loopne
jbe
pop
roll
add
push
fwait
push
ljmp
mov
push
xor
xor
cli
loop
jecxz
arpl
stc
jno
cmp
ficompl
xchg
sbbb
mov
xor
pusha
jp
mov
aaa
add
inc
mov
add
jmp
aad
cmp
enter
fcmove
jp
sub
mov
and
scas
xor
jp
jno
mov
outsb
cltd
push
push
push
sub
out
jmp
mov
dec
lret
jbe
mov
cli
aam
shlb
subb
sub
push
lcall
pop
insb
inc
mov
nop
shrb
cmc
lret
jo
mov
jno
imul
sbb
cli
sub
mov
rcrl
mov
push
idivl
xchg
cs
add
adc
leave
stc
push
pop
pushf
push
and
sbb
pop
jp
jns
inc
push
mov
cmp
dec
push
push
jb
mov
popa
mov
jb
aaa
aad
push
push
popa
ret
cmp
bnd
imul
pop
sarb
push
dec
mov
xchg
cmpsb
pop
or
nop
mov
pop
push
std
popa
push
shlb
push
xchg
push
xchg
out
inc
jo
push
dec
cmc
ficoml
stc
dec
lods
sbb
bound
mov
popf
rorb
sub
xor
rclb
fdivl
cwtl
jmp
push
pop
out
jno
push
das
or
cmpsl
lcall
negl
ja
enter
mov
inc
sub
lret
xchg
test
loope
push
push
mov
cli
sub
pop
xchg
push
push
push
dec
push
push
sbb
sbb
pop
sub
mov
mov
jg
xor
sub
dec
lds
cwtl
jae
xchg
pop
loopne
imul
lods
push
or
push
sti
fwait
jbe
sub
jb
ds
ret
mov
xor
movsb
sub
and
push
jecxz
pop
mov
jnp
inc
insb
jle
jns
dec
popa
scas
pushf
loopne
mov
loop
push
pop
sbb
adc
push
pop
xor
ja
jne
xchg
jo
outsl
jbe
or
enter
jb
out
lods
mov
mov
jle
or
test
idivl
cmp
adc
push
pop
add
and
cmp
dec
shlb
push
xor
or
imul
testl
mov
inc
pop
fisttpll
stos
shlb
sub
jae
inc
cmc
lcall
jmp
add
xchg
fisubs
jbe
nop
jl
cmp
and
push
ss
popa
add
lcall
inc
subps
fcompl
mov
icebp
insb
jl
add
mov
and
xor
sbb
mov
mov
lock
or
jno
mov
mov
scas
sub
lret
xor
bound
xchg
ja
out
out
mov
pop
les
mov
inc
push
dec
cmpsl
inc
mov
sbb
add
jae
mov
lock
in
jbe
dec
push
xchg
inc
mov
sub
or
mov
inc
insb
dec
lods
aaa
jb
sub
in
jg
xchg
xor
lds
sbb
pop
repnz
ss
into
cli
sbbb
add
push
pop
jne
push
inc
and
pop
outsb
push
ret
adc
rcrb
sub
dec
cmp
das
clc
xor
mov
dec
inc
call
cmp
daa
xchg
dec
sbb
jl
push
jae
cmp
push
out
and
xchg
das
jmp
push
subl
adc
sub
push
xor
mov
repz
daa
and
add
push
in
jo
in
push
mov
cmp
adc
scas
xor
fs
sub
daa
aam
pop
mov
imul
jle
shr
es
pop
scas
adc
mov
testb
jg
push
inc
lcall
mov
sbb
cmp
jbe
mov
test
xchg
je
jo
mov
cmp
add
jecxz
stos
pop
push
rol
push
sbb
push
icebp
or
and
cmp
mov
adc
push
dec
cmp
push
packssdw
js
nop
sti
scas
xchg
push
repnz
aam
sbbb
pop
nop
cmp
hlt
js
rcrl
jle
rclb
mov
jne
add
js
jnp
jne
jmp
cli
lcall
loop
bound
and
or
jecxz
push
sub
jo
jbe
inc
jnp
add
out
js
and
pushf
xor
push
sbb
mov
es
nop
sbb
and
push
imul
add
in
or
mov
add
jmp
cmc
xor
inc
leave
cld
add
xor
in
xchg
outsl
jecxz
add
push
push
sarl
and
call
stos
sub
movsl
jge
mov
pop
fwait
fwait
bnd
jp
imull
aaa
jae
bound
or
sub
nop
push
popf
dec
aam
mov
sbb
les
scas
sbb
addr16
mov
mov
imul
out
xor
cmp
sbb
lods
repnz
add
sub
xchg
cmp
sbb
jmp
mov
push
outsb
cmp
fidivrl
cltd
push
xor
pop
mov
repz
adc
imul
imul
call
and
and
pop
insb
mov
or
mov
xor
add
mov
pusha
xor
xor
insl
lock
and
lcall
pushf
adc
cld
dec
inc
cwtl
js
aam
shlb
sarb
mov
imul
jns
xchg
pop
test
fsubrp
pop
xchg
shlb
xlat
lods
test
push
std
jg
das
or
add
data16
sub
xor
dec
cmp
popa
pusha
int3
jmp
xor
add
jns
movsl
mov
jmp
cmp
mov
adc
dec
xchg
lea
and
jp
jns
aaa
mov
sbb
mov
jo
xchg
mov
loope
into
pop
mov
mov
ret
fstpt
push
add
fimull
outsl
fcomps
out
inc
les
in
lahf
ret
pop
push
mov
push
loopne
cmp
mov
std
inc
inc
push
outsb
vmread
mov
xor
xchg
sbb
jb
inc
shl
adc
jns
xor
lea
cltd
inc
jmp
xor
pop
rcrl
jg
add
in
mov
ds
sbb
jg
sbbb
or
add
js
push
push
sbb
mov
aaa
pop
in
test
xlat
pop
push
es
sub
out
aas
push
or
push
sarb
fwait
pop
int
in
push
hlt
subl
inc
repnz
push
jge
mov
push
add
cmp
lock
jmp
sub
adc
into
xorl
add
mov
je
xor
xor
xchg
insb
xchg
push
shll
add
and
or
add
ds
xor
push
xchg
jbe
dec
sbb
mov
leave
sub
popa
test
xorl
nop
mov
xor
out
inc
pop
sub
addr16
xchg
scas
ljmp
jmp
push
scas
scas
jns
cmc
mov
ja
pop
mov
mov
fwait
push
es
and
pop
sub
aaa
jne
cmp
arpl
out
push
in
stc
sub
jno
mov
jb
pcmpgtb
xor
pop
cli
cmp
lock
repnz
jo
call
in
dec
jnp
lcall
test
cmpsb
pop
pop
fsts
dec
mov
ds
rorb
pop
ja
push
dec
enter
jg
pop
xor
add
or
movsb
pop
pop
or
and
and
cmp
lea
jecxz
xor
jg
mov
push
jge
or
xor
mov
out
and
rol
aas
push
cli
cmp
jb
sub
sbb
push
push
pop
inc
pop
call
lods
push
pop
mov
sbb
jae
inc
roll
getsec
stos
outsl
adc
mov
daa
xchg
xchg
sbb
jb
mov
mov
dec
mov
stc
cmp
sub
mov
mov
jg
cmp
cli
dec
lret
add
mov
jne
sbb
push
lods
xor
mov
mov
mov
imul
mov
sub
rcrl
bound
mov
jmp
pop
jle
insb
mov
imul
and
lret
add
xchg
mov
enter
lcall
inc
cmp
imul
add
dec
jns
sub
imul
loop
bound
add
push
pop
ja
jl
cltd
andb
jp
xor
mov
inc
aas
jmp
sahf
sbb
rcrl
sbb
arpl
cs
aam
int3
and
mov
cs
add
xor
pop
adc
xor
push
jp
lods
ja
fsubp
dec
cwtl
and
test
xchg
xor
stos
and
cltd
push
stc
mov
push
inc
push
mov
pop
sub
and
xor
sahf
push
mov
mov
cmpsl
xor
popf
mov
sbb
adc
hlt
cld
lcall
cmp
lcall
test
mov
xor
aad
loopne
add
push
sbb
mov
push
popa
clc
mov
bound
popa
js
cli
insl
add
flds
sbb
outsb
arpl
jne
sub
xchg
pop
push
insl
pop
imul
xchg
push
mov
inc
outsl
lcall
adc
movsl
lret
popf
iret
xchg
push
inc
mov
fwait
cmp
jo
sub
mov
mov
jno
inc
insb
in
sahf
lock
fdivrs
les
cltd
pop
daa
loopne
mov
pop
out
outsl
cmp
adc
mov
mov
pushf
mov
aaa
add
dec
add
xor
imul
push
sub
rcrl
ret
sbb
aam
cli
mov
cmp
bound
adc
jmp
ss
jbe
das
rcll
mov
mov
fwait
sbb
lcall
pusha
sahf
dec
lcall
rol
loope
cmp
sub
inc
repz
mov
xchg
lods
aas
cmp
push
insb
pop
pop
fidivl
jge
mov
popa
es
shlb
outsl
sahf
hlt
int3
fwait
sub
pop
mov
fcoms
sbb
jge
xchg
xor
push
repz
popa
pop
xor
push
cmp
add
mov
cld
inc
sub
and
es
add
test
fdivrp
aas
stos
popa
scas
repnz
pop
jo
jae
cli
insl
repnz
insb
int3
ds
fnstenv
xor
mov
lret
or
or
sbb
mov
cmp
push
lret
andl
mov
or
xlat
fmuls
or
xchg
push
lods
outsb
ror
push
xchg
les
sbb
cmp
dec
push
xchg
mov
push
outsl
pushf
push
push
jmp
scas
sub
in
push
outsb
les
imul
push
push
cwtl
pop
push
sub
cmp
jno
jo
push
data16
mov
cmp
popa
push
pop
and
movsb
dec
cld
push
jp
pop
jae
sbb
cmpsl
shlb
push
stos
xchg
mov
bound
movsl
push
push
ror
sub
mov
fidivs
jge
dec
cmp
dec
stc
leave
cmpsl
cld
cmp
pop
pusha
nop
dec
jecxz
rorl
xor
ficompl
add
pminub
push
mov
xchg
push
jg
stc
loope
dec
add
mov
in
aaa
mov
push
inc
pusha
fisubrs
jns
stc
mov
lcall
scas
out
js
mov
loope
imul
dec
aaa
push
cmp
sub
movsl
inc
mov
xor
jnp
aas
shll
and
push
cmp
or
jo
aam
mov
ret
adc
insb
mov
push
scas
pop
popa
mov
dec
les
push
push
push
ds
cmp
push
cmp
dec
adc
mov
jo
hlt
rolb
xor
push
rcrb
sub
jb
cmp
cmpxchg
cltd
aad
sub
dec
aam
dec
xor
adc
dec
in
push
dec
push
push
cmc
xor
jnp
fwait
imul
pop
jno
int3
jge
stc
test
loopne
xor
mov
js
outsb
push
mov
in
popa
or
add
xchg
push
jns
pop
inc
mov
add
push
test
out
jae
sbb
jno
xor
dec
xchg
mov
xor
add
mov
enter
or
mov
lods
mov
pop
cmp
pusha
or
mov
jle
adc
pushf
cmp
push
push
mov
cld
movsl
loopne
cmp
sub
push
outsb
push
outsb
push
adc
cmp
mov
dec
insb
leave
xchg
push
push
push
test
mov
pop
pop
dec
and
icebp
mov
xor
mov
cltd
lcall
test
int3
add
and
or
js
xor
sub
jge
or
adc
lar
pop
out
sbb
push
sbb
stos
lcall
jb
lcall
cmp
popa
fcmovnbe
sub
and
dec
cmp
fnstenv
lods
lret
sbb
jbe
repnz
idivb
xchg
sub
les
cmpl
out
rcrb
xchg
ds
leave
int
inc
ljmp
lods
loopne
gs
imulb
mov
pop
hlt
add
lods
mov
fdivrp
cmp
sbb
js
ljmp
out
scas
xlat
mov
xor
jle
or
mov
insl
stc
push
sbb
mov
aaa
into
outsl
pop
xchg
stc
mov
out
mov
and
sub
mov
add
jb
and
xchg
push
jecxz
mov
or
es
or
lods
test
stos
jge
sub
jmp
ds
jle
stos
out
lret
addb
cmp
pop
cld
cmp
int3
repnz
xor
or
push
ss
pusha
adc
fcmovnbe
xor
imull
inc
fldcw
push
mov
rorb
pop
incl
pop
outsb
dec
xor
jb
mul
and
pop
push
inc
std
lcall
sbb
jns
pop
inc
hlt
or
push
push
xor
mov
mov
into
jno
mov
fdiv
xlat
xchg
and
mov
mov
mov
jo
sub
push
lcall
cld
mov
cli
push
cld
cli
out
ja
and
lahf
lcall
xor
sub
je
lahf
push
mov
mov
daa
out
cmp
pop
or
aaa
cs
mov
and
dec
push
out
xchg
stos
mov
mov
mov
cli
shll
or
cld
lods
movl
idivl
das
cmpsb
shll
das
lret
cmp
jo
hlt
mov
xchg
je
clc
jae
push
mov
jo
mov
mov
pop
xor
fst
bnd
ja
dec
add
stc
shlb
pop
iret
pusha
sahf
sub
sbbl
adc
sub
sbb
jno
repnz
xchg
bt
mov
mov
popf
stos
imul
ja
das
jo
push
xlat
call
and
fsubs
nop
mov
sub
and
imul
xchg
popf
rcl
aaa
add
xlat
scas
mov
adc
popf
cld
fsubrs
or
lret
mov
js
and
dec
out
adc
jo
std
mov
ds
sub
imul
cmp
dec
push
dec
sub
dec
mov
pop
sbb
sti
or
sub
and
ja
jbe
mov
mov
pop
pusha
hlt
out
jbe
out
cmovb
out
push
in
out
xchg
sbbb
gs
jge
mov
jb
mov
jl
push
sar
push
push
push
mov
adc
pop
aaa
xchg
push
xor
mov
add
das
daa
xchg
out
adc
sbb
ret
mov
lcall
mov
jmp
sub
shll
enter
test
mov
pop
jnp
icebp
xchg
xchg
imul
testb
cmp
shll
stc
call
cs
jbe
test
popa
jbe
repnz
or
jae
aad
cmp
data16
add
outsb
cmp
cmpl
cmp
idiv
jg
jno
cmp
paddb
push
or
jns
dec
ret
lods
inc
cmp
ljmp
fs
jp
pop
stos
push
inc
sub
ret
add
roll
or
cmp
scas
mov
popa
push
xchg
dec
pop
ret
adc
stc
xchg
scas
int3
dec
cmp
xor
nop
add
icebp
inc
mov
jle
push
int3
pop
cwtl
subps
jne
dec
and
rorb
push
inc
jnp
xchg
jg
mov
outsb
inc
push
nop
scas
cmp
xorb
aas
setp
or
repz
cmp
scas
loope
xor
lcall
icebp
lods
push
or
push
retw
std
jae
mov
adc
push
xor
inc
out
mov
cmp
jb
data16
addr16
mov
cmp
inc
sbb
in
jecxz
jbe
out
enter
xor
cmp
out
fsubr
mov
test
mov
cmp
adc
ds
mov
lret
xchg
jb
popa
das
dec
cmpsl
sub
mov
loopne
xchg
sbb
xchg
repz
arpl
adc
roll
clc
jb
pop
testl
addl
call
sub
cmp
sub
xor
push
flds
das
mov
adc
pusha
push
jmp
ja
adcl
jbe
jb
repnz
sub
cmc
ret
imul
js
clc
ret
and
xchg
test
pop
push
pop
xorl
xorl
stc
fisubrs
mov
inc
addb
cli
inc
cs
ljmp
movsb
cltd
sbb
sbb
mov
push
clc
add
sub
inc
push
inc
inc
mov
icebp
jbe
pop
xchg
jo
sar
out
pusha
cmp
hlt
mov
sub
jne
divl
movsl
jmp
jp
imul
jae
jg
xorl
pusha
jmp
push
mov
xchg
addl
notl
cld
iret
push
aam
add
bound
cld
iret
inc
int3
arpl
xchg
es
mov
cmp
cmpsb
mov
popa
cmc
cmp
mov
cmp
xor
xorb
filds
pop
sqrtps
cli
sub
test
push
lcall
xchg
push
cmpsb
stos
das
cli
cmc
cmp
cli
mov
push
push
jg
sbb
xor
insb
jb
pop
sbb
sub
jl
pop
push
or
cwtl
in
push
pop
add
test
adc
ja
mov
jne
or
mov
dec
data16
jl
clc
xor
sarl
jp
ret
ret
in
clc
and
push
jo
stos
inc
push
cmp
clc
adc
lods
xor
in
pop
hlt
loop
aas
out
addl
xor
cld
aad
inc
in
xchg
js
cli
cmp
bound
jno
xor
test
jnp
clc
jns
xchg
cli
add
adc
and
push
imul
imul
insb
xlat
jbe
pop
ss
xor
outsb
adc
cwtl
in
loopne
loope
inc
scas
add
in
test
stc
jns,pt
mov
sub
cmp
xchg
shlb
cli
xor
cmp
fistpl
mov
push
sub
ds
mov
xor
pop
out
push
mov
outsb
cmp
xchg
enter
push
shlb
jle
fmuls
adcb
clc
sub
iret
xorl
mov
lcall
inc
mov
aaa
call
imul
cs
add
lcall
adc
cli
in
fidivl
in
mov
xor
cmc
xor
sbb
jg
pop
pop
xor
inc
xor
add
cmp
mov
outsl
inc
mov
jge
imul
pop
push
sbb
mov
mov
mov
mov
push
mov
aam
adc
pop
mov
scas
cli
and
outsl
push
nop
pushf
mov
mov
clc
mov
movsb
pop
jg
into
push
add
inc
push
shl
insb
jp
mov
mov
pop
cmp
pop
enter
loopne
adcb
popf
loop
jno
or
sbb
ljmp
jb
mov
cmp
mov
dec
pop
loop
insl
add
outsb
clc
bound
icebp
push
out
sbb
scas
xor
mov
add
xlat
jecxz
push
scas
cs
cmc
cmp
dec
mov
jmp
sar
pop
xchg
adc
adc
and
cmp
xchg
jno
or
jo
and
jo
adc
imul
data16
jmp
dec
and
xor
inc
xchg
inc
adc
stos
les
cs
std
sahf
dec
pop
push
cltd
adc
mov
imul
cmp
outsb
push
insl
pop
inc
xor
lds
inc
cmp
push
push
dec
and
mov
mov
cmpl
mov
jb
test
dec
inc
pop
js
movsb
imul
iret
mov
xor
in
mov
inc
ds
rolb
cmp
mov
sarl
jg
ljmp
inc
mov
stc
stos
and
sub
mov
cld
add
inc
movhps
or
movsl
cmc
lcall
mov
ret
mov
jp
cmp
jg
and
sbb
jb
outsl
or
popa
pop
push
sub
or
sarl
scas
fistpll
andl
and
mov
je
pop
dec
aas
jge
insb
gs
adcb
shr
lea
push
sahf
ja
lds
dec
popa
cmp
stc
cltd
shr
gs
ret
add
cmc
jnp
roll
outsb
mov
loopne
or
mov
push
outsb
cmp
ss
mov
jnp
stos
jae
xlat
test
cmp
push
cmp
push
push
test
je
push
mov
outsb
js
std
pusha
xchg
cmp
je
in
or
jb
mov
sub
cmpsl
cmp
cmpb
push
outsl
adc
push
shll
add
cmp
add
push
mov
jle
imul
jp
pop
xor
sbb
xlat
ss
lret
jno
jne
push
outsb
in
pusha
push
out
mov
inc
inc
idivb
jle
mov
je
push
out
bound
lock
pop
mov
fldln2
inc
pop
loopne
jo
xor
jo
xor
sub
stos
xchg
test
shll
add
pop
xchg
inc
outsb
jmp
movsl
mov
or
push
dec
mov
jne
mov
int3
mov
bnd
mov
push
jae
cld
inc
or
jp
jno
jg
add
maskmovq
divl
inc
subb
adc
xchg
jge
into
out
imul
pop
ficoms
push
pusha
aaa
cmp
mov
fs
ret
pop
dec
mov
cs
loope
mov
fwait
push
pop
insl
push
out
push
mov
data16
and
cmp
data16
inc
jle
jns
mov
addb
cli
aad
in
fcmovu
jns
nopl
insl
mov
into
sub
lock
mov
xchg
cld
test
inc
mov
mov
add
lcall
add
out
inc
pop
imul
movsb
fstps
mov
les
and
popa
pop
negl
ljmp
dec
adc
mov
xlat
xor
cmp
aas
jno
xor
pop
cmp
cli
js
mov
pop
call
into
out
mov
lods
mov
lcall
push
fcomps
lret
ret
repz
loop
inc
xchg
dec
push
cmp
insb
cld
mov
rolb
imul
adc
test
pop
js
call
enter
mov
or
push
mov
sub
add
dec
les
leave
cmp
jb
push
sub
xor
sub
ja
add
cld
xor
sub
insb
jbe
out
fmuls
mov
outsb
mov
mov
loopne
cmp
js
jo
cltd
adc
xchg
push
insb
jo
mov
push
scas
jbe
jne
sbb
call
and
and
push
or
mov
jb
mov
es
inc
push
leave
movntps
or
sbb
dec
sub
mov
cmpsl
das
fiaddl
jns
cmova
jle
cmp
push
or
mov
xor
fstpl
sub
xor
sbb
outsl
outsl
inc
imul
lcall
push
xchg
fnstenv
mov
xor
sbb
fsubrs
jge
sub
or
push
fmuls
pusha
jae
and
pop
pop
test
pop
loopne
inc
dec
jmp
int3
and
or
jle
cmp
test
dec
sbb
pop
insb
xor
adc
jge
mov
add
repnz
mov
dec
add
xchg
mov
incl
and
xchg
push
sub
mov
lock
xchg
out
outsl
mov
lcall
fisubl
push
push
pusha
cmpsl
sbb
aaa
scas
sub
scas
ja
sub
push
mov
lcall
ret
mov
data16
xchg
sbb
xchg
in
scas
inc
xchg
mov
push
insl
lcall
mov
data16
fldl
outsb
push
dec
push
xorl
outsl
mov
dec
mov
clc
pshufw
pop
xor
xor
mov
push
outsb
shrb
lret
lods
call
mov
int
cmp
mov
aas
mov
mov
int
cmpsl
enter
insb
fucomp
push
jno
andps
push
cmp
pusha
ja
xor
add
mov
fldt
test
into
and
das
jl
inc
je
push
cltd
xor
pop
enter
pusha
adc
add
xor
and
imul
popf
xor
pop
push
jl
mov
lret
pushl
jns
dec
ret
add
cmp
and
sbb
add
cwtl
mov
negb
sbb
dec
xor
pop
imul
shr
mov
xchg
cmc
or
and
mov
adc
push
je
jns
mov
and
dec
xchg
adc
aas
push
add
mov
mov
cmc
or
mov
mov
mov
pop
jnp
mov
jg
mov
cmovae
fcmovnb
adcb
lcall
cmp
mov
mov
ds
sub
aaa
loopne
inc
fisttpll
pushf
outsl
push
test
cwtl
lcall
out
shlb
and
int3
jmp
ljmp
mov
jmp
cli
jecxz
pop
imul
jns
sarl
xor
outsb
int
pop
and
ljmp
bound
pop
cmp
cli
and
cmp
insb
inc
jb
jmp
jle
xor
cmp
imul
xor
neg
or
subl
ds
ret
jle
jecxz
loopne,pn
sbb
rcl
lds
jae
fisubs
cmp
and
loope
pop
imull
pusha
fs
mov
xchg
rorl
cltd
push
mov
insl
ljmp
popa
aaa
pop
aaa
inc
mov
mov
push
pushf
rorl
leave
sub
mov
inc
add
inc
jle
inc
inc
test
movsl
movd
cmpsb
movsb
sbb
inc
mov
cmc
add
icebp
lcall
pop
mov
inc
sub
incb
cli
mov
mov
leave
fstpl
stc
mov
jp
cli
push
pusha
cmp
rcr
stc
push
fwait
lcall
mov
cltd
in
xchg
subb
insl
cmc
sub
dec
pop
xor
xchg
pop
sarl
in
nop
lcall
fdivs
cmp
lock
mov
jno
stc
xchg
jg
xchg
orb
xchg
cs
push
inc
xchg
test
push
mov
movsl
xchg
ret
push
sub
cmp
icebp
jp
je
mov
pop
subl
dec
pop
jno
mov
jg
out
std
ret
and
cmp
pop
fcmovb
sub
into
jne
insb
mov
push
and
pusha
mov
cmp
xorb
jne
and
outsb
and
jl
jae
je
andnps
xchg
scas
cmc
push
push
push
ret
mov
ljmp
ss
add
xorl
jb
stos
scas
xchg
das
sar
adc
and
jp
mov
add
xchg
add
xchg
sbb
push
pop
sbb
jnp
in
inc
and
aas
in
das
push
ds
aas
jle
fisubs
mov
jo
mov
insb
pushl
in
ljmp
xor
fsubs
test
xor
js
mov
insb
cmp
inc
jmp
or
push
aad
mov
imul
fmuls
es
mov
and
bound
cmc
loop
repz
mov
js
repnz
add
and
jecxz
scas
sbb
jge
in
js
aas
in
cmp
lock
stc
sarb
xchg
je
ss
mov
outsl
xor
sahf
jbe
movsb
repz
mov
push
xchg
pop
sbb
jo
mov
fs
stc
mov
pop
loopne
das
mov
lcall
xchg
lods
mov
rolb
dec
dec
push
add
jg
xchg
and
fiadds
mov
rclb
dec
jl
gs
incb
inc
cmp
dec
mov
pusha
push
inc
insl
leave
mov
imul
sub
jo
cmp
jns
inc
xor
cmovo
xor
push
xor
pop
push
cltd
sub
bound
fld
mov
sahf
aam
cld
shrb
movsl
sbb
cmc
add
test
sub
les
push
mov
cmp
ja
pop
and
push
ja
cmp
mov
jmp
outsb
push
xor
inc
jg
or
jp
mov
mov
xlat
push
xchg
push
cmpb
mov
pop
sub
imul
sbb
push
mov
stc
cmp
nop
cmpsl
in
outsl
cmp
xorl
mov
inc
cltd
sub
outsb
mov
mov
in
test
into
jo
rclb
sarl
xchg
std
xchg
idivl
lock
lds
xchg
div
dec
cmp
jp
dec
xor
cs
and
imull
rcl
shll
push
js
cmp
jo
iret
lahf
sub
js
lcall
push
cmc
jbe
add
xor
mov
imul
or
in
mov
dec
sbb
scas
mov
inc
jg
mov
inc
adc
lods
out
pop
mov
outsl
out
mov
push
mov
loop
jb
stc
inc
mov
es
aaa
rclb
xor
outsl
dec
xlat
cltd
mov
stos
stc
jp
lret
cmp
inc
mov
and
jb
mov
sub
rcrl
mov
aam
mov
imul
xchg
cmp
adc
cld
adc
xchg
push
push
cltd
add
push
push
xchg
loope
pop
xor
jae
jae
push
stc
push
sbb
cwtl
pushf
jg
ja
sbb
aam
mov
sbb
mov
pop
sub
repnz
ds
push
imul
push
inc
loop
sahf
jecxz
fdivs
lret
test
std
inc
add
enter
and
out
sub
ljmp
mov
jns
insb
pop
mov
imul
ds
shl
or
loopne
mov
arpl
jo
add
fnstsw
cmc
std
cmp
mov
xor
inc
cmc
mov
add
pop
push
test
iret
xor
or
bound
sbb
sub
lcall
xor
test
xor
mov
jb
jmp
insl
jge
cmp
jg
scas
fwait
mov
push
je
mov
or
or
inc
mov
stos
test
dec
lcall
xor
loop
enter
sbb
sbb
add
mov
sub
jo
pop
lods
aad
mov
ljmp
xchg
xchg
loope
imul
insl
gs
push
push
xchg
shrb
lret
cmp
adc
push
pop
je
pusha
dec
popa
add
addr16
popa
enter
add
sbb
pop
fsubrp
outsb
pop
mov
pusha
mov
jge
pop
mov
out
cwtl
jne
jl
push
jmp
inc
jge
pop
movsb
cmp
outsb
xchg
pop
rolb
imul
and
push
lods
sub
sub
rorl
and
loope
pop
jo
jle
xchg
in
or
sub
xchg
add
add
mov
cmp
xchg
pop
stos
movl
rorb
xor
hlt
bound
loope
pop
sbb
pop
xor
popa
push
dec
jno
jbe
inc
cmpsb
dec
jae
cld
sub
mov
cwtl
and
cmp
int
mov
xorb
jg
or
fidivs
imul
stos
sub
iret
jg
dec
cli
sbb
sub
ljmp
cli
nop
cmp
lcall
xor
and
idivl
in
add
fsubl
hlt
clc
ja
aas
sbb
sbb
mull
mov
adc
jge
mov
xor
cltd
jg
and
add
jle
bound
daa
insb
dec
sahf
notl
aas
dec
push
pusha
push
leave
push
cmc
or
das
icebp
mov
adc
xchg
jno
or
sbb
dec
adc
push
iret
cmp
lods
imul
sbb
jo
and
pop
sub
ja
and
fimuls
adc
jle
jl
jae
jp
adc
jle
jb
jo
push
inc
jbe
jp
lret
ljmp
sub
push
imul
jmp
out
pop
jle
idivb
nop
xchg
imul
std
arpl
insb
inc
icebp
cmc
ljmp
or
and
test
inc
push
lcall
push
pop
lods
pusha
xchg
cmp
mov
sti
call
pop
cwtl
movb
lret
aad
std
lds
or
fimuls
dec
jae
popa
jl
pop
sarb
or
jno
mov
les
lds
xchg
loop
xchg
es
loopne
mov
adc
cmc
push
push
xor
and
pusha
lcall
pop
sub
jo
ja
sub
push
inc
jecxz
adc
movsl
sub
scas
or
mov
mov
jb
mov
inc
jecxz
xlat
lret
ret
test
push
mov
jp
sbb
out
fcomps
test
insb
stc
xor
sbbl
pop
fnstsw
sub
call
sbb
fs
or
insb
ss
lods
pushf
jp
sbb
loop
cltd
pop
sub
cmp
lcall
xchg
mov
mov
rcr
jl
ja
push
pop
bound
loop
testb
test
jnp
push
jg
jb
pop
je
mov
mov
mov
shrl
sub
cmp
data16
mov
sti
ljmp
stos
ret
xor
aaa
pop
jg
jbe
cmc
out
cmpsl
adc
bound
fs
jno
push
cmp
mov
xchg
movsl
jno
jg
jl
arpl
inc
fwait
insb
jae
js
cmpb
icebp
ficoms
idivb
mov
mov
push
test
adcb
pop
lea
in
mov
mov
mov
dec
or
add
pop
mov
outsb
pop
jbe
aas
sbb
mov
bound
incb
jno
aas
pop
aas
mov
sub
mov
loopne
cli
and
mov
mov
in
inc
test
imul
cli
nop
in
fwait
or
nop
mov
ds
mov
add
mov
cmc
mov
bound
shlb
jno
nop
mov
mov
stos
es
mov
fs
stos
xchg
out
cmpsb
sbb
xor
mov
dec
xor
fdivl
test
nop
pusha
jno
inc
pop
bound
jnp
stc
test
shrl
ds
adc
test
outsb
jno
cs
mov
cwtl
gs
mov
aas
or
jno
xorb
xor
sbb
cmp
mov
jp
push
cmp
xchg
out
push
cwtl
mov
mov
jge
add
imul
jb
mov
ja
sbb
push
jg
stos
pop
nop
cmp
inc
iret
pop
ret
jle
fs
mov
mov
mov
jp
add
sub
jno
xorb
roll
xchg
lds
cmp
add
pop
fwait
jp
lcall
aas
jle
idivl
jb
lods
scas
mov
xchg
roll
shr
sub
mov
in
sbb
push
dec
das
outsb
ds
andb
jns
mov
cmp
or
jno
mov
add
bound
je
mov
push
insb
jnp
mov
stos
cmp
inc
mov
jb
test
xchg
and
popa
push
inc
xchg
mov
test
push
inc
sbb
dec
jb
leave
lods
jnp
dec
mov
pushl
cmp
bound
mov
scas
jo,pt
je
mov
pop
test
xchg
outsb
sub
mov
pop
ljmp
out
xor
fdivrl
jge
lahf
fnstcw
pop
stos
dec
cmp
fdivl
mov
pop
jb
and
popl
fdivrl
inc
pop
fsub
mov
test
imul
negb
jmp
cmp
je
ss
lods
mov
dec
pop
les
insb
int3
inc
mov
adc
fiadds
cmpl
jle
xor
popf
ds
mov
sti
repnz
loope
insl
out
pop
ja
jnp
dec
mov
mov
jno
sub
inc
imul
adc
jb
inc
xor
and
pop
dec
stos
sahf
das
push
pop
or
fnstenv
pop
dec
popf
int3
sbb
daa
stc
bound
adc
push
repnz
cwtl
les
ficoms
cli
outsw
jle
inc
rorb
jecxz
lcall
pop
inc
push
mov
sbbb
bound
insb
and
jp
mov
insl
shlb
xchg
cmpsl
out
jns
cmp
adc
icebp
fidivs
pusha
jns
cs
dec
dec
ja
add
cmp
inc
sub
cmpsl
out
int3
jl
mov
cwtl
call
popf
xchg
dec
cmp
stos
arpl
lods
pop
outsl
std
push
xchg
cmp
pop
test
mov
cmp
pop
js
gs
jle
bound
inc
xchg
mov
jae
xor
dec
mov
test
mov
aam
pop
jae
es
jnp
jmp
ds
jp
mov
incb
loopne
ljmp
pop
pop
lcall
dec
loop
xchg
sbb
insl
cmp
sbb
mov
daa
sarb
imul
mov
cltd
push
bound
mov
xor
add
sbbl
insb
cmpb
outsb
and
xor
mov
inc
out
fistpl
xlat
cmp
jno
jae
fdivr
jmp
pop
pop
cmp
pop
insb
mov
out
xor
testb
sbbb
sub
sbb
push
bound
adc
xchg
dec
loopne
push
xchg
test
lock
repz
sbb
cmpsb
xchg
mov
cwtl
xor
cs
xor
orl
push
jge
xchg
sbbl
shll
pop
cmc
push
daa
sub
mov
xor
sbb
and
push
inc
mov
stc
inc
and
add
jp
bound
mov
push
outsb
sbb
fidivs
xor
pop
push
push
jo
xchg
cmc
aas
jnp
and
sbb
xchg
nop
add
push
mov
jp
jno
xor
xor
les
xor
movsb
push
adc
xchg
inc
mov
dec
lret
decb
mov
dec
nop
dec
lds
push
popa
repnz
mov
jb
pop
and
mov
mov
pop
insb
out
jnp
xchg
push
jbe
negb
out
scas
cld
xchg
jle
push
and
pop
mov
das
ss
push
xor
push
sub
leave
pop
cltd
pusha
and
cmp
mov
bound
and
push
and
fldenv
sub
sbbl
test
ja
ret
push
add
jno
adc
pop
js
lahf
in
ror
orl
adc
lods
mov
and
push
jo
mov
test
ss
jle
or
jbe
stc
inc
cmp
stos
subl
mov
mov
xchg
jp,pn
cmpsb
enter
or
daa
and
jo
xlat
jl
or
pop
into
ret
mov
push
nop
clc
jno
outsl
arpl
xor
je
mov
pusha
xorl
mov
addb
scas
and
cltd
mov
xchg
lods
push
aad
into
jp
add
mov
and
xchg
mov
jmp
adc
leave
or
mov
mov
fisubl
daa
rcll
adc
imul
sub
push
mov
bound
push
ljmp
mov
clc
xchg
xchg
add
out
pop
inc
jae
xor
loopne
js
sbb
pusha
mov
lods
std
ljmp
fildl
int3
shlb
mov
mov
cmpsb
clc
inc
iret
push
xchg
iret
orb
pop
cmp
sub
mov
shl
mov
sub
lcall
add
or
mov
inc
fs
gs
inc
jbe
inc
mov
pop
adc
xor
pop
push
add
in
scas
mov
xchg
lea
test
rolb
inc
lea
push
mov
mov
je
mov
jecxz
cltd
aaa
stos
std
xchg
xorl
push
cmc
pop
imul
test
jbe
sbb
nop
sub
jnp
sbb
add
in
xor
in
mov
push
sbb
stos
pushf
arpl
jl
js
std
and
cltd
cmc
mov
inc
adc
sub
mov
push
mov
imul
lcall
repnz
sbb
sbb
lcall
push
push
xor
and
fs
add
jbe
mov
jae
xchg
loop
add
pop
jns
outsb
test
inc
pop
push
xor
push
sbb
xor
fwait
xor
mov
cmc
push
mov
stc
ja
filds
push
roll
xor
xor
ret
loope
xchg
cmp
pusha
inc
mov
sbb
dec
pop
cmp
and
fcmovu
data16
xor
push
outsl
sarb
fisubrs
push
ds
imul
mov
imul
lret
pop
loope
inc
add
out
pop
stos
sub
repz
cltd
nop
add
add
loope
dec
bound
inc
xlat
mov
loopne
mov
push
pop
add
das
int
divl
jno
clc
cmp
loope
xchg
fistpll
fidivrl
iret
cmp
jo
xor
mov
xor
dec
mov
xor
popa
xor
in
subl
in
dec
inc
cli
cmp
fwait
ficompl
xchg
sub
xor
xor
stc
inc
add
movsb
sub
cmp
je
and
mov
jmp
push
push
jae
std
sahf
mov
lcall
jb
jae
pop
sbb
loop
loop
xor
cmp
orl
push
lret
lret
push
pop
mov
dec
popa
test
xchg
mov
and
ret
jns
std
push
mov
pop
add
pop
imul
xor
cli
hlt
fdivr
or
and
push
xlat
ljmp
call
push
xor
sbb
nop
ljmp
icebp
sbb
lret
xchg
cmp
mov
mov
adc
cmc
aas
ret
arpl
xchg
xor
out
mov
jns
cli
jae
out
sahf
vpshad
mov
push
cld
mov
dec
fidivl
pop
push
inc
jle
ss
cltd
clc
cmc
add
xor
cmp
jb
dec
dec
pop
sub
stos
inc
inc
xor
sahf
and
pop
mov
mov
je
cltd
stc
xor
fidivl
inc
mov
rorl
push
dec
push
jns
jo
imul
mov
lock
addb
mov
push
xor
cmp
ficoml
sbb
dec
push
mov
cltd
jge,pn
rorl
imul
jmp
jb
imul
scas
push
pop
cmpsb
pop
push
stos
mov
jae
scas
test
mov
sbb
jmp
mov
push
lds
shrl
out
iret
clc
pop
push
ljmp
outsb
mov
sub
in
scas
pcmpgtd
cmc
pcmpeqb
push
mov
pop
pop
das
jle
push
xchg
outsl
mov
xchg
or
mov
pushf
push
add
enter
divb
jge
sub
stc
or
outsb
cli
xor
mov
fwait
mov
mov
add
mov
xor
or
ss
subl
mov
xchg
sub
ret
cld
shlb
push
mov
mov
js
push
lret
rorl
ja
xor
jns
subb
sbb
mov
pop
lods
js
dec
and
mov
jg
sub
pop
mov
jne
pop
pop
push
adc
ret
outsb
lea
push
xor
cmpsl
js
mov
dec
and
fidivrl
sub
in
lds
stc
jae
rcll
pop
push
xor
jne
cmp
pop
cmp
rorl
push
push
js
lcall
repz
nop
cmp
adc
mov
mov
js
jl
push
int
ficompl
xchg
sub
xchg
inc
push
lods
outsb
xor
movsl
je
rolb
lea
inc
clc
data16
sub
insb
je
push
pop
mov
pop
push
mov
sti
mov
lahf
stc
inc
jb
js
adcl
int
mov
leave
mov
mov
ret
cwtl
aaa
sub
cmp
cmp
xchg
lahf
mov
xor
fmul
lcall
sbb
adc
andl
pop
stos
cmp
jmp
push
pop
push
in
push
das
push
xor
mov
ljmp
incl
andl
std
cmp
fnstenv
sbb
mov
inc
outsl
and
int
insl
mov
sbb
xor
test
cmc
les
adcl
subb
popa
fidivrs
jg
inc
sahf
adc
pop
push
cmp
fsubrl
jge
push
mov
cmp
push
jp
mov
popa
mov
sahf
jp
mov
nop
pop
rolb
hlt
js,pt
sti
icebp
xchg
mov
iret
push
cmpsb
and
sbb
dec
jne
xor
pusha
je
dec
mov
bound
data16
mov
push
push
cli
xchg
imul
outsb
out
push
jo
stos
mov
cli
mov
outsl
cmp
push
jbe
negb
cmp
aas
repnz
pop
push
insb
popa
or
hlt
ret
lcall
sahf
lret
push
fcoms
jbe
jl
or
lret
mov
or
and
push
xor
subb
jb
cmc
cmp
pop
in
and
lcall
xor
mov
jo
test
pusha
scas
insl
xor
inc
pop
popa
mov
push
aas
inc
popa
int3
cli
cmpl
ds
push
lock
popa
xor
sbbb
es
or
cmp
repnz
mov
cmp
jbe
xchg
jp
mov
cld
xchg
sbb
fidivrs
in
jp
cld
cs
jo
incb
xor
jo
jp
cmp
mov
ds
fisubrl
jbe
cld
aas
in
jb
jge
xor
push
cmp
sub
adc
ss
and
jo
and
movsb
icebp
or
stos
lds
int
and
nop
jbe
dec
mov
out
sbb
addl
jp
cmp
or
xor
fistps
xor
cmpl
fisttpll
lcall
sub
jo
sbb
and
repnz
push
pop
adc
sbb
xor
mov
pop
das
sub
popf
dec
scas
aaa
movsb
inc
mov
mov
cmpsl
mov
subl
mov
pop
dec
adcl
cmp
shrb
add
xchg
data16
push
jo
subb
sarb
cld
idivl
aas
xchg
movsl
sub
in
outsb
adc
or
and
insb
push
insb
aas
xor
test
data16
imul
pop
lock
cmp
push
xchg
adc
ss
dec
sbb
and
insl
dec
pop
in
inc
repnz
xor
stos
mov
lcall
shll
xchg
in
dec
push
daa
test
and
lea
cltd
xor
popa
xor
add
out
jnp
scas
sarb
jl
sbb
aad
movsl
push
mov
sbb
es
and
lcall
push
mov
int
ds
imul
and
mov
jb
loop
adc
xchg
mov
jbe
aaa
lcall
test
or
xor
sub
xchg
mov
divl
xor
or
fs
popa
pop
lods
cmp
mov
repnz
dec
ret
pusha
bound
push
cs
or
add
cmp
jg
cmp
rol
mov
mov
sub
fwait
ds
std
mov
in
cmp
cmp
jge
push
ret
mov
or
sti
loope
mov
xlat
divb
ficomps
test
nop
dec
xor
into
pop
and
aas
cmpsl
out
into
add
ret
es
icebp
xor
xchg
hlt
mov
jg
push
jo
and
jbe
adc
insb
lcall
mov
mov
std
add
fidivs
sbb
mov
jb
aad
xchg
popa
push
jb
std
sub
popa
dec
sub
xchg
cmpb
pop
mov
std
xor
ds
fcmovbe
push
mov
or
cli
cmc
repnz
jb
jge
cwtl
aaa
scas
sbb
ss
push
popa
cmp
xchg
xor
xchg
cmp
pop
xchg
movsb
lock
addb
xor
jp
stos
outsl
push
mov
or
jno
sub
mov
test
pop
outsl
xor
pop
fmulp
aad
shrb
sbb
insb
mov
fcomps
sarl
loopne
dec
sahf
int
stos
aaa
fdivs
sbb
out
fs
and
pop
aaa
xchg
repz
data16
rorb
pop
insl
fistpll
fs
mov
mov
loopne
fisubrs
mov
cmc
adc
cli
and
test
mov
das
sub
push
xor
lods
pop
pop
decb
jle
xchg
push
aam
sti
inc
cmp
mov
xor
sbb
in
mov
xor
jp
in
movd
push
xor
cmpb
xor
subl
test
es
sbbl
jne
call
jmp
cs
inc
pop
sbb
inc
or
add
ret
sub
je
xor
lret
xor
test
inc
mov
cld
mov
rcrb
pop
call
xchg
jg
into
sbbb
mov
aas
mov
jp,pn
mov
xor
cld
ds
cmp
mov
xor
push
xchg
mov
pop
pop
or
jno
pop
pop
push
sbb
xor
xchg
push
mov
sahf
sbb
lods
mov
cld
cmpsb
das
rcll
mov
dec
push
sub
adc
jo
mov
xor
les
into
sti
pusha
mov
movsb
inc
outsb
or
xchg
jmp
cld
xchg
sub
dec
pop
sub
rolb
adc
pop
jge
xchg
bound
xchg
jae
sbb
jle
adc
sbb
mov
lcall
fimull
pusha
js
sub
test
sub
mov
and
push
addl
lret
std
pop
outsb
mov
jb
jg
sbb
xchg
xor
dec
mov
addl
test
mov
pop
adc
cmpsb
push
clc
insb
mov
insl
insb
nop
je
mov
xchg
jmp
out
xor
shll
cmp
sbb
jle,pt
xor
pop
dec
xlat
mov
xlat
cmp
dec
loope
pop
mov
outsb
and
xor
sub
inc
lcall
push
fxch
sub
loop
xchg
pop
mov
xchg
std
push
dec
cmp
adc
movsb
fmulp
push
fisubrs
ljmp
xor
aaa
jb
dec
mov
loopne
lret
and
xchg
bnd
jmp
bnd
insb
lock
lret
icebp
push
or
mov
sbb
icebp
adc
jmp
inc
cli
jge
pop
ss
idivb
add
lea
push
btc
lret
scas
sbbb
mov
inc
jne
js
pop
ds
loopne
je
jle
jle
inc
aam
jbe
adcl
mov
xor
in
fidivl
sahf
dec
and
push
and
cmp
std
jecxz
sub
push
insb
and
ds
icebp
cltd
add
jne
xor
es
gs
dec
outsl
or
xor
dec
outsl
idiv
add
sbb
pop
xchg
jp
inc
popa
leave
adcl
push
sti
std
les
pop
sub
sahf
push
hlt
lds
loopne
insb
cmp
es
add
sahf
repz
mov
add
mov
loopne
cmp
stos
sub
sbb
fldt
xor
xchg
leave
iret
lcall
lret
mov
cli
xchg
push
in
aas
clc
xchg
jne
mov
aas
scas
repz
popa
int
fistpl
dec
or
lock
popa
push
and
pop
push
push
adc
movsbl
stos
clc
mov
stos
dec
mov
jo
mov
cmpsb
cmp
pop
insl
push
push
sub
fmull
insb
gs
lcall
xor
push
xchg
jo
mov
jns
ds
xchg
push
imul
jbe
cld
test
jbe
pop
pop
cmp
pop
outsl
pop
xor
sti
mov
jne
fwait
mov
js
ds
aas
push
lcall
pushf
das
bnd
stc
push
negl
push
shrb
pop
loope
cltd
mov
icebp
adc
popf
aaa
cli
sbb
or
mov
pop
xchg
ja
inc
ljmp
cmpb
lods
jb
mov
and
and
xor
adc
addr16
test
push
push
jo
jo
push
outsb
ret
sbb
sbb
lret
nop
andl
xor
dec
pop
push
movsl
mov
and
mov
inc
frstor
pop
jp
xor
cmc
inc
repnz
mov
fidivrl
or
enter
loop
jge
or
mov
stos
inc
jo
sti
pop
xchg
mov
cmp
aas
add
pusha
outsb
cli
std
push
clc
movsl
stos
push
push
bound
sub
jne
aas
or
inc
test
cmp
jb
xor
xchg
jne
add
fimuls
idivb
popa
mov
sbb
xchg
mov
mov
jne
mov
into
mov
popa
sarb
fwait
sub
lret
jns
ss
adc
jno
jns
stc
pop
jo
jmp
pop
repnz
jle
pusha
sub
jns
popa
xchg
insb
jbe
inc
cmp
cmp
ss
jmp
ret
pop
loope
push
xchg
pop
lcall
sub
int3
xchg
pop
icebp
jmp
adc
jne
shr
cwtl
inc
jl
adc
outsb
sub
punpcklbw
push
inc
sbb
push
jbe
adc
loope
push
push
jmp
push
cmp
insl
das
jp
cli
dec
sahf
js
xor
jmp
test
dec
dec
sbb
jg
inc
cwtl
xor
out
in
push
jb
sbb
adc
lret
xchg
mov
or
dec
dec
call
pop
add
and
jmp
shlb
test
cmp
xorb
stc
jnp
pop
in
pop
inc
xchg
push
and
icebp
xchg
mov
icebp
mov
stc
xor
dec
sub
imul
jnp
andb
xor
pop
jmp
fwait
push
aaa
xchg
roll
xor
and
pop
outsb
lcall
imul
push
test
xor
and
stc
jno
push
dec
popf
les
mov
cmc
insb
popa
push
insb
iret
xor
mov
ja
mov
pop
sbb
mov
xor
xchg
dec
out
cmp
sbb
insb
mov
xchg
pop
out
cmp
lea
fwait
sub
xor
dec
jmp
js
push
ss
push
mov
sub
int3
xor
into
or
fidivrl
jg
jb
bound
add
push
sbb
add
incl
cmp
adc
xchg
pop
cmpl
jg
push
mov
push
xchg
jecxz
xchg
push
pop
mov
rcl
mov
mov
jg
or
fimuls
cmp
mov
xlat
sub
and
sbb
sub
popa
setle
xor
xor
dec
xchg
ret
repnz
test
das
push
jns
mov
push
xor
lcall
sbb
xor
das
sub
jmp
adc
and
dec
mov
cld
adc
cmp
shrl
push
pop
cmp
jle
mov
jg,pt
ja
add
pop
dec
xchg
mov
test
inc
lret
mov
dec
call
sub
in
shl
data16
jb,pn
xor
xor
imul
cmp
fwait
ja
ja
into
inc
mov
push
add
or
iret
fstpl
gs
dec
and
sbb
insl
aaa
or
mov
sahf
ljmp
daa
rcrl
outsb
into
push
cli
fadds
cmp
pusha
mov
bound
pop
sbb
jne
xchg
mov
cmp
inc
inc
pop
pop
mov
xchg
or
stos
insl
fdiv
loop
ja
push
jle
stc
pop
cmpsb
inc
lcall
sub
mov
pop
ret
ja
cli
popf
push
pop
sub
and
push
aaa
jg
jmp
lcall
add
inc
sub
mov
jb
ds
nop
xchg
sbb
and
push
push
mov
adc
add
loop
nop
cmp
mov
xchg
cmc
cmp
sub
mov
and
mov
adc
and
and
mov
mov
add
lcall
insb
aad
pop
inc
lcall
mov
mov
test
ja
je
faddl
cwtl
lds
lea
inc
lock
fdivrl
jbe
and
add
js
rcrl
cmc
adc
aam
xrelease
lods
fs
jnp
outsl
push
mov
mov
cmc
and
addb
jp
dec
xchg
ss
call
jne
imul
xchg
jl
andb
sub
popa
xor
mov
mov
sub
fs
ss
bound
mov
inc
xchg
loopne
pop
dec
adc
jecxz
jp
dec
jae
mov
sub
sti
gs
mov
mov
lea
xchg
cmpsl
pop
xchg
arpl
insb
cld
out
sub
ja
inc
sbbl
fldenv
jmp
and
pop
jb
std
sbb
push
push
cmc
and
lds
adc
jnp
xor
stos
icebp
mov
cltd
ret
rorl
andl
sbb
cmp
adc
fucomp
sti
or
xor
gs
lock
and
mov
cmpsb
adc
iret
jb
sbb
into
push
mov
mov
insb
lahf
xor
pop
divl
pushf
sbb
jp
mov
dec
stc
lcall
mov
addr16
or
je
push
lds
iret
jne
cmp
or
aad
or
jle
xor
hlt
movsl
jo
mov
mov
cmpb
icebp
add
cltd
lret
sub
add
push
add
stc
ds
lcall
xor
loop
jo
ficompl
in
add
mov
adc
jle
divb
xor
lock
in
add
mov
adc
or
sbb
aas
jge
sti
ja
xor
jge
lcall
pop
push
xchg
sub
jno
xor
outsl
jb
rclb
mov
jbe
pop
loopne
clc
outsb
gs
mov
sahf
les
je
mov
filds
inc
lret
mov
xor
jmp
stos
sbb
add
dec
ficoml
cld
and
cltd
lock
jge
outsl
jg
les
insb
jnp
or
sub
mov
sarb
xchg
jmp
jno
mov
xchg
aam
cmp
inc
adc
sahf
aas
nop
stc
mov
punpckhbw
fiaddl
push
sub
fucomi
push
imul
insl
xor
fcoms
mov
test
pop
pushf
adc
aas
ret
adc
cs
xorl
or
je
xchg
popa
mov
push
jmp
icebp
fdivrl
int3
mov
add
xchg
cmpsl
stc
sub
lahf
xchg
add
adcl
or
popf
xor
mov
int
mov
jle
push
xchg
iret
sub
mov
fcmove
add
or
sub
jns
jb
mov
jecxz
fnstcw
add
dec
inc
mov
mov
outsl
or
push
push
test
push
addr16
je
push
xchg
dec
insl
outsl
cld
mov
pusha
push
cwtl
dec
imul
xor
sbb
arpl
xchg
xor
cmp
and
outsb
lcall
lret
jle
xchg
pop
mov
xor
mov
mov
mov
js
mov
push
jb
cmp
in
xor
adc
sbb
xor
jae
cmp
pop
les
lods
and
dec
or
js
mov
ficomps
and
mov
push
test
add
es
bound
sub
push
pop
xlat
popa
call
sti
aas
arpl
sub
pusha
or
or
pop
or
ficomps
and
mov
and
aam
inc
and
cmc
sub
or
xchg
test
mov
add
negl
pop
mov
jbe
int3
bound
subl
cmp
fbld
sbb
xor
xor
loopne
arpl
insl
out
das
sbb
xor
pop
cld
scas
sub
and
xorb
dec
xor
fsts
jbe
mov
shr
bound
mov
repnz
outsb
or
push
ss
inc
sbb
jl
jg
inc
sub
sbb
jp
in
mov
aad
mov
push
lods
mov
xlat
mov
sub
mov
dec
lret
push
push
xor
push
jne
pushf
inc
sarl
lcall
aam
cmp
pusha
aaa
jecxz
out
aam
adc
mov
decl
sub
lock
inc
xlat
popf
ret
ret
bound
call
clc
pop
jbe
ja
inc
jb
aaa
ds
and
xchg
jo
cmp
xlat
ljmp
imulb
mov
mov
negl
push
cmc
add
push
xchg
scas
or
push
lcall
mov
jb
dec
stos
xchg
lods
inc
jbe
cmpsb
pop
nop
add
inc
loopne
mov
lret
add
lock
or
roll
popa
cmp
ljmp
xor
insb
mov
cwtl
push
data16
mov
stos
jge
inc
cmp
jp
add
and
loop
xchg
dec
sub
dec
dec
in
lods
int3
adc
dec
jns
lcall
movsb
pop
imul
sbb
add
push
daa
cmp
mov
scas
mov
jne
cmp
mov
and
outsl
cmp
jb
add
pop
ffreep
outsl
dec
mov
mov
pop
repz
pop
inc
xor
cmovl
in
stc
ja
lcall
int
ja
fisubl
dec
cmpsb
add
call
in
jo
lret
sub
adc
iret
mov
shll
sbb
mov
jns
sahf
jnp
aas
mov
push
ret
cmp
sub
arpl
cmp
sarl
push
mov
fwait
nop
ds
imull
fnstcw
and
cmp
xchg
cld
jg
add
xor
and
pop
nop
xchg
stc
push
pop
sub
subb
ljmp
sub
or
xchg
mov
xchg
sub
test
push
push
xor
sub
fimull
jp
pop
dec
fs
bnd
addl
pop
int
xlat
mov
jl
shll
in
push
cmp
in
mov
icebp
arpl
fwait
mov
xchg
orb
mov
ror
jp
test
ja
pop
scas
adc
imul
xchg
popf
or
icebp
lcall
and
adc
loope
sbb
mov
loope
and
movsb
push
jne
pushf
cmp
cmp
jl
push
pop
sbb
pop
lods
cmp
sbb
sbb
lahf
mov
mov
addb
and
pop
pop
and
data16
and
push
jnp
xchg
dec
xchg
pop
pop
andb
and
push
shll
nop
xchg
mov
es
and
js
lcall
adc
mov
jo
sbb
dec
xor
cmp
add
cmp
mov
push
sub
lds
mov
push
xchg
sbb
hlt
in
mov
int
push
jecxz
mov
and
addr16
lds
ret
testl
or
repz
mov
push
jle
mov
xchg
and
xor
cmp
mov
movsl
scas
adc
lds
std
jno
mov
pop
push
nop
mov
mov
icebp
outsb
clc
jo
add
xchg
mov
jb
pop
or
jns
inc
inc
rcrl
jb
xchg
scas
jbe
mov
pop
xor
jnp
jge
cmp
popl
mov
jbe
inc
mov
push
mov
shll
and
pop
ficoml
and
notl
insb
repnz
mov
mov
push
push
clc
jnp
inc
add
cmpl
xor
and
add
jns
inc
jnp
mov
dec
arpl
add
and
jge
test
shll
jmp
inc
lcall
movsl
repz
jle
mov
jmp
jae
scas
daa
les
dec
add
rorl
mov
test
inc
adc
loopne
movsl
jge
lods
adcb
lret
orb
in
or
push
sub
gs
gs
pop
push
mov
sbb
pop
loopne
rcll
lea
sahf
lret
jae
sbb
das
dec
sub
inc
or
ljmp
adc
xor
rol
sub
inc
cmp
sahf
mov
bound
str
jno
lds
insb
xchg
push
outsl
test
sub
lret
movsb
mov
push
loope
jno
jl
je
iret
jo
cmpb
or
ljmp
push
dec
cmp
cs
cs
loop
jp
int
push
mov
out
jp
icebp
js
mov
inc
fsubp
xor
outsl
fiaddl
xor
outsl
push
outsl
movsl
jo
and
sbb
pop
test
arpl
mov
mov
pop
pop
stc
push
push
pop
aaa
cli
push
and
js
data16
xchg
and
pusha
fwait
push
sub
jb
xor
xor
cmpsb
in
ds
push
jb
mov
and
das
cmp
cwtl
es
cmp
mov
movnti
jnp
xchg
add
push
push
mov
or
xor
test
and
cs
lcall
ds
add
xchg
dec
adc
cli
adc
mov
sbb
andb
stos
in
xor
inc
mov
movb
or
outsb
inc
add
jo
subl
add
push
mov
addl
sbb
jo
enter
lret
add
enter
add
dec
xchg
adc
jbe
inc
add
stc
pop
push
stc
cld
cmpsb
adc
jns
and
in
sub
jl
gs
stos
xor
and
cmpsl
xchg
into
xchg
jo
xchg
mov
push
rolb
pop
or
mov
mov
lcall
sub
daa
daa
insb
dec
xor
or
outsl
es
xchg
push
inc
sbb
sahf
mov
xchg
cwtl
sub
and
mov
xchg
or
cmc
imul
popa
push
ret
lcall
mov
lcall
xor
xchg
jo
lret
pop
mov
adc
lods
inc
out
int3
mov
lret
and
sbb
fidivrs
js
sub
and
ds
or
jae
push
xor
xor
cmp
mov
bnd
sbb
cmp
sbb
xor
incb
adc
and
mov
xchg
cs
inc
lds
jge
jmp
pop
out
xor
sub
inc
cmp
pop
enter
jno
je
clc
pop
and
cli
repnz
ss
imul
imul
mull
inc
test
lcall
bound
mov
rcr
sub
ret
mov
mov
out
jmp
sub
pop
push
xchg
jno
ficoms
jmp
xor
jns
lcall
push
push
jo
pop
je
sar
inc
nop
mov
dec
push
jmp
lcall
sbb
repnz
ljmp
mov
test
and
cmp
pop
push
dec
push
and
jp
mov
aaa
sbbl
mov
dec
mov
insl
aad
subl
lds
add
or
out
stos
mov
lock
sar
out
pop
sub
scas
cmp
and
shlb
pop
test
rorl
xchg
sub
or
test
aaa
data16
mov
lret
adc
jge
ret
mov
jae
mov
std
adc
hlt
stos
andb
stos
enter
neg
stos
dec
ret
inc
cltd
mov
dec
addb
adc
sub
popa
mov
sbb
pop
or
fsts
sbb
clc
scas
pop
outsl
out
test
fsubrs
xchg
jno
mov
push
jecxz
hlt
les
add
aaa
adc
mov
repnz
inc
xorb
push
cmp
std
aaa
insl
mov
mov
popl
sub
iret
sub
imul
das
push
jle
out
test
iret
push
fcmovnu
outsb
or
jno
xchg
inc
aad
lea
pop
cmovg
adcl
jb
sbb
mov
inc
cmp
popa
inc
xchg
scas
pop
sahf
insb
pop
cltd
sahf
inc
xchg
inc
inc
push
scas
inc
in
inc
inc
mov
lcall
jns
xchg
loop
jns
push
dec
jecxz
loop
push
push
shll
pop
push
imul
mov
cmp
mov
loop
packssdw
test
mov
jge
das
dec
lcall
into
and
push
sbb
xchg
fsubrs
xchg
out
inc
lock
jne
popf
rorl
out
jbe
mov
and
sub
sub
in
ret
in
mov
negb
push
clc
je
fstl
gs
iret
xor
adc
repnz
push
aam
iret
mov
addl
pop
aas
pop
inc
stc
insb
icebp
rcrb
insb
pop
sbb
dec
in
jno
mov
int
xchg
mov
pop
push
add
in
jg
dec
mov
inc
jg
pop
notb
jecxz
sbb
push
cmp
and
dec
jge
nop
xor
pop
mov
push
loope
mov
inc
jb
movl
in
push
mov
out
pop
mov
int3
sub
loopne
pop
xchg
inc
push
rcrb
xor
xor
and
test
inc
cmpsb
xchg
cmp
cmpsb
jecxz
pushf
mov
cmp
mov
jo
jp
enter
cltd
gs
mov
xchg
orl
jb
movsl
testl
inc
xchg
mov
xchg
xor
std
inc
lcall
inc
mov
aad
lret
movsb
sub
cmc
add
rolb
and
daa
mov
mov
sahf
jmp
mul
adc
insb
cmpsb
repnz
push
dec
rcrl
jbe
jge
jl
add
dec
lcall
mov
push
jbe
icebp
jb
adc
adc
jecxz
xor
mov
push
jge
pop
scas
in
leave
mov
mov
std
mov
inc
sarl
and
push
sarl
das
xor
test
xchg
lods
jmp
fisttpl
popl
xchg
int3
mov
bound
inc
jmp
dec
and
jl
jno
cmp
lcall
cs
xchg
xor
out
adc
mov
das
push
mov
es
decl
adc
push
jnp
inc
mov
add
leave
rolb
sbb
insl
into
clc
xorl
in
jnp
movb
sub
js
repnz
jns
dec
loope
add
gs
xchg
stos
pop
sub
add
pop
leave
mov
scas
pop
insb
jno
mov
jp
pop
jo
mov
sbb
push
loope
xor
mov
and
jno
xchg
pop
mov
xchg
in
aad
sarb
mov
bound
mov
nop
lods
mov
scas
negb
test
imul
in
pop
jl
hlt
addr16
jp
stos
rcrl
leave
pop
aaa
mov
lcall
jnp
lcall
mov
sub
into
push
stos
scas
popa
divl
or
dec
push
and
pop
loop
mov
inc
aad
pop
xchg
inc
pop
sbb
push
int
xchg
jp
jmp
lcall
adc
mov
syscall
add
lods
sbb
pop
repz
aad
jle
bndldx
aaa
lea
adc
sahf
push
mov
mov
mov
jbe
xchg
pop
xchg
iret
outsl
out
dec
ja
xor
fisubl
mov
cltd
jnp
jnp
loopne
push
das
jno
jl
arpl
jae
sbb
je
rcrb
mov
outsb
xchg
dec
adcl
les
jle
pop
push
xlat
shlb
dec
jo
cmc
enter
das
cmp
add
sub
mov
ds
or
lcallw
dec
xchg
imul
aaa
dec
lock
repnz
sub
mov
daa
leave
fyl2xp1
data16
ds
test
ret
xor
js
fsts
mov
sbb
test
xor
std
or
jmp
mov
inc
pop
pop
movl
lods
mov
inc
cmc
cmp
xchg
jbe
test
pop
loope
mov
sub
divb
pusha
sti
shlb
es
pop
adc
push
inc
lods
sub
mov
daa
cmpsl
addr16
mov
cmp
cltd
fdivp
loop
add
aaa
sbb
pop
xor
decb
fimull
pop
push
inc
or
add
sbb
xchg
loope
xchg
xor
stos
inc
cmp
mov
pop
nop
sbb
addb
std
ds
mov
and
mov
hlt
cmp
hlt
fdivl
repz
jae
fiadds
pop
outsl
dec
sub
xchg
xor
pop
insl
fwait
mov
cltd
cmp
xchg
cmp
sub
mov
and
xor
inc
leave
push
jns
xchg
sub
popa
jns
data16
cmp
xchg
clc
imul
stos
lods
and
andb
jbe
mov
cmpsl
ds
daa
shlb
addr16
mov
xchg
mov
gs
cmpsl
imul
js
bound
sbb
and
jb
scas
daa
lcall
inc
in
or
xor
bound
mov
and
sbb
jns
jns
inc
sub
sbb
push
push
sub
mov
push
xchg
jb
and
popa
test
mov
pop
push
ficoms
push
mov
sarl
jge
das
lcall
aad
adc
lcall
and
adc
xchg
mov
mov
jbe
or
jo
and
mov
ss
stos
fidivrl
outsl
mov
insb
and
test
xor
xlat
lret
cmp
xchg
inc
cmp
adc
aas
gs
test
divl
mov
xor
push
jg
xor
movhps
rorl
rolb
inc
decl
xor
xlat
icebp
push
addr16
cmp
sub
icebp
dec
mov
xchg
out
fwait
inc
test
les
xor
pop
inc
sbbl
and
mov
imul
rorl
inc
mov
les
mov
push
hlt
lret
mov
add
mov
jge
clc
outsb
xchg
pop
pop
inc
or
fs
int
out
inc
test
inc
sub
pop
data16
and
push
xor
push
sbb
inc
sti
xchg
adc
rol
lea
xchg
pop
xchg
add
lret
xchg
inc
mov
sbb
xchg
push
test
out
pop
call
loope
jbe
inc
cmpb
or
pop
xor
aad
into
push
xor
mov
inc
jns
test
ret
cs
add
mov
xor
xor
psubq
mov
xor
les
orb
fs
mov
mov
jo
movd
hlt
mov
mov
adc
imul
test
mov
add
or
popa
xor
xchg
outsb
loop
mov
mov
or
jle
mov
bound
rolb
or
ja
push
and
xchg
add
movsb
cli
cmp
pop
test
push
orl
add
imul
sub
sub
push
lds
mov
mov
mov
sub
je
sbb
jb
scas
push
jp
inc
mov
cmp
lods
inc
jb
add
out
mov
dec
add
lods
push
sub
ds
add
je
das
jl
dec
aas
rcll
orb
pop
jae
in
repnz
mov
push
cmp
lret
xchg
pusha
jg
rolb
adc
es
adc
pop
imul
mov
andl
mov
shll
pop
xor
jle
mov
inc
push
mov
aad
cli
pop
pop
mov
mov
push
mov
out
push
lock
inc
pop
xchg
sbb
repz
inc
lret
cmp
dec
mov
mov
rorl
in
pop
jnp
stc
add
cmp
jno
dec
xchg
add
cmp
fsub
ljmp
popf
insb
les
mov
leave
fdivs
xchg
mov
jb
and
lods
cmpsb
stc
imul
js
push
mov
in
jae
out
inc
test
js
mov
or
rcll
adc
xor
push
test
aam
shrb
push
jnp
sub
push
jb
sub
cmp
mov
or
add
lahf
sar
aam
xor
cltd
xor
in
jo
lahf
mov
and
jle
cmc
and
lds
pop
testb
sub
xchg
into
push
cmp
fldcw
adc
xchg
testb
dec
pop
add
mov
mov
fdivs
inc
leave
add
sbb
or
and
push
test
lds
mov
push
jnp
mov
sub
popa
je
rcr
mov
inc
stos
das
pop
add
loope
xchg
insb
mov
ljmp
lock
dec
and
jns
outsb
out
cmp
out
outsb
aam
push
jge
lcall
cmp
mov
pushf
inc
insb
das
xchg
iret
jo
loopne
xor
push
xchg
std
lcall
or
test
inc
subl
push
cmp
mov
mov
dec
into
mov
mov
outsl
sub
mov
pop
nop
sub
inc
mov
jge
mov
mov
jns
js
jge
jge
jo
xchg
nop
mov
push
ja
subl
pop
add
xor
shll
jge
xor
fxtract
inc
ja
in
loop
jmp
mulb
outsl
outsb
mov
cmp
push
fidivl
mov
call
bound
cltd
dec
in
je
addr16
ds
pop
negb
lds
xor
enter
xchg
mov
daa
out
hlt
add
sub
xor
sbbl
prefetchwt1
sbb
cld
jno
lahf
add
std
test
insl
repnz
into
add
sbb
sbb
and
out
rcl
test
lret
dec
loope
dec
popa
inc
loope
std
outsb
mov
jno
stc
scas
adc
cwtl
mov
imul
xor
imul
sub
add
and
in
data16
cmp
mov
add
mov
push
push
lea
mov
and
loopne
pushl
sbb
cmpsl
fs
add
add
and
jle
in
test
cmp
jp
insl
dec
pusha
mov
mov
rcrl
dec
bound
scas
in
xchg
and
pop
jecxz
or
jnp
sbb
lcall
loop
aaa
or
add
ja
cltd
ja
jae
fsubrl
adc
push
sub
dec
sbb
mov
adc
std
imul
cmp
lahf
stos
es
fidivs
idivl
out
jmp
jns
cs
insl
dec
repnz
insb
test
push
fdivrl
je
push
fsts
add
outsb
jp
sbb
sub
mov
xor
pop
cs
mov
clc
and
cmp
mov
and
outsl
cmc
in
lea
mov
and
push
fidivrl
add
ss
test
cld
sub
popa
sbb
pop
cltd
and
jo
movsl
outsl
cmp
ficompl
test
loop
and
xchg
jl
scas
and
and
int
aad
mov
fldpi
jle
jle
aas
cli
call
rolb
mov
int
out
in
sub
shrb
xor
pop
notb
rcrb
filds
push
cld
xchg
js
lods
push
test
push
or
mov
out
cltd
mov
lds
mov
test
ret
push
fists
dec
sarb
jns
mov
sub
add
dec
sbb
addr16
imul
xchg
popa
negb
sub
movsl
push
cmp
mov
icebp
fisttps
sbb
insb
pop
sbb
push
std
leave
arpl
cmp
fdivs
std
inc
cmp
sub
lock
add
jnp
imul
js
stos
lcall
cmc
cmp
std
mov
fdivrs
std
cmp
sub
in
xor
ret
loope
or
das
mov
fidivl
pop
sbb
psubb
lock
test
ljmp
and
stc
add
add
imul
jo
push
shl
lret
push
movsl
das
sti
xor
lds
jbe
jbe
test
fldl
inc
movsl
sub
jnp
or
jnp
xor
out
push
pop
sbbb
stc
jmp
jle
out
dec
fisttpll
cmpsb
outsl
mov
mov
xchg
pop
cmp
fdivrs
sbbb
shll
data16
mov
and
lret
cmp
jb
lock
or
dec
pushf
lcall
pop
popa
rcll
pop
jge
fidivrs
add
imul
inc
into
pop
fdivl
movsl
inc
ds
idivl
lcall
xorl
push
pop
enter
sbb
and
std
mov
pop
xor
jle
adc
sbb
mov
jns
jno
js
ljmp
pop
iret
in
lods
rcrl
push
jle
rcrb
jno
cmp
add
jns
jp
lret
out
fldl
xor
leave
adc
push
and
ficoml
inc
daa
popa
mov
scas
fmul
lds
in
cmp
adc
dec
jno
lcall
fistps
cmp
loop
push
mov
jecxz
popf
out
dec
pop
insl
jbe
aaa
sub
mov
out
lods
fsubs
cmpsl
decl
mov
jl
sub
es
aad
mov
mov
xor
xchg
adc
and
sub
mov
test
lds
dec
dec
mov
jp
jl
call
insb
push
fcmove
jle,pn
stc
and
je
push
inc
sub
cmp
hlt
ret
xor
cmp
ret
fsubs
in
or
ret
daa
mov
sub
jb
mov
xchg
jb
rcrb
mov
pop
into
pop
add
mov
sti
rcll
push
ss
xor
inc
mov
and
jbe
mov
add
or
pop
xchg
jp
jge
xchg
pop
pop
je
ret
loopne
pop
notl
je
jp
into
mov
cmp
xor
ss
jbe
push
mov
lea
cmp
aaa
mov
mov
repnz
test
pusha
mov
movsb
roll
pop
mov
repz
jae
mov
cmp
das
fwait
dec
ja
icebp
pop
jns
pop
cltd
mov
jle
add
xorps
mov
pop
adc
push
ja
add
mov
jle
nop
jno
stc
add
add
ja
jb
in
mov
cmp
cmp
ljmp
sub
sub
pop
xor
dec
and
ret
cmp
jg
xor
fadds
push
push
in
push
call
mov
xor
sub
pop
xchg
repz
cmp
inc
push
jb
addb
insb
bnd
out
jne
pop
push
jl
adc
or
push
pop
jl
push
loopne
xchg
inc
movsb
or
jl
mov
xchg
iret
sub
push
sub
push
iret
popa
cli
pop
hlt
outsb
push
sbb
or
inc
mov
jnp
mov
push
add
std
mov
and
inc
roll
dec
shr
adc
mov
cmp
inc
mov
dec
jns
jb
mov
rolb
imul
pop
mov
into
cltd
mov
push
xor
je
push
push
push
or
add
push
sub
inc
xor
cmpl
xlat
add
pop
gs
sbb
adc
dec
sub
sbb
lock
lcall
orb
push
test
xchg
fwait
sbb
push
cli
cmpsb
incb
pop
leave
add
pop
sub
outsb
jp
lock
cli
jo
in
mov
push
mov
into
or
enter
inc
adc
inc
push
dec
loopne
sub
jo
push
adc
mov
push
imul
cmc
les
jnp
fwait
sub
insl
inc
sub
lea
hlt
inc
les
ret
mov
das
pop
lea
push
xchg
xlat
dec
cmp
xor
mov
dec
shlb
jnp
jns
pop
inc
fwait
push
out
pop
into
cmp
jae
mov
mov
jl
sbb
mov
jae
hlt
mov
adc
xor
add
cmp
add
xor
ja
dec
lods
fldl
sbb
fnstenv
pop
scas
das
lods
fiadds
rcrb
cmp
pop
pop
jge
fdivs
push
nop
scas
or
mov
outsb
outsb
adc
push
cmp
cmpl
inc
jp
pop
push
mov
and
outsb
ret
dec
push
incl
mov
jl
int
fsts
enter
mov
loope
push
adc
mov
or
cmpsb
pop
pop
movsb
jnp
ljmp
cmp
gs
mov
subl
mov
cli
lock
xchg
in
mov
or
mov
inc
xchg
mov
lcall
mov
add
xlat
sbb
mov
push
mov
std
dec
mov
xor
in
addr16
jne
mov
dec
aas
ret
sbb
push
add
push
jns
or
cli
int
pop
aad
loope
pop
inc
rcrl
mov
gs
mov
lea
or
xor
popa
xchg
mov
add
push
mov
jb
fidivrs
add
ds
pop
mov
inc
jp
fsubl
testb
push
or
jno
add
xchg
cmpsb
xchg
pop
lock
dec
jp
ret
negl
sub
add
dec
push
add
sbbb
cli
push
mov
adc
cmp
mov
movsb
js
les
inc
xor
lahf
inc
pop
mov
cmpb
xor
insl
cmp
xor
dec
in
xchg
stos
cmp
jp
lcall
sbb
cwtl
lcall
mov
ret
data16
add
ss
out
push
push
lock
add
push
jb
push
scas
dec
in
popf
outsb
pusha
jnp
mov
pusha
xor
mov
rorl
call
inc
test
leave
xorl
push
shl
hlt
mov
rorl
and
mov
pushf
dec
push
sub
ds
out
xor
cmp
data16
sub
xor
js
es
or
and
bound
mov
jl
jb
xor
in
xor
stos
inc
xor
out
in
mov
cld
push
cltd
pusha
out
das
imull
fstps
add
mov
jns
jo
mov
and
dec
std
outsl
sub
decb
aam
pop
bound
lcall
add
pop
mov
ds
hlt
ror
movsl
cmp
ds
jns
lret
jecxz
cmp
mov
clc
sbb
inc
les
mov
push
iret
sub
lea
jb
aad
mov
and
test
scas
aaa
inc
xchg
sub
or
fisttps
out
ficomps
inc
jno
jp
push
mov
mov
enter
ret
push
je
jae
xor
insb
sbb
sarl
adc
push
mov
call
ret
sub
repnz
add
ret
or
dec
push
inc
movsb
or
mov
jle
pop
ja
dec
ficoms
xor
jo
add
push
sbb
pop
sbb
loopne
leave
popa
mull
and
stc
notb
dec
in
jb
push
out
and
test
xor
cmp
adc
popa
jmp
push
and
push
testb
clc
stos
dec
cmp
add
or
push
mov
adc
into
sbb
sbb
and
sarb
cli
mov
cmc
out
loop
in
sbb
clc
rcrl
and
inc
or
pop
mov
test
scas
sub
loope
mov
cmpsb
jmp
inc
dec
cmp
add
jge
push
dec
in
mov
adc
add
das
leave
iret
clc
dec
cmpsl
out
mov
sbb
subb
fs
out
mov
pop
das
or
loopne
jb
xchg
add
add
push
jns
test
sub
je
bound
cmp
pop
aad
xchg
mov
dec
icebp
jp
movsb
push
test
leave
sub
insl
inc
lcall
xor
bound
jbe
xchg
stc
jnp
xor
data16
xchg
ljmp
dec
inc
aad
scas
dec
xorb
push
jb
imul
out
repz
xchg
lock
jb
mov
ficomps
mov
push
insb
into
out
outsb
jp
pop
inc
andb
mov
cmpl
mov
fcomi
and
mov
inc
addl
or
sub
jmp
xchg
jecxz
push
cmpsl
insl
xor
sub
adc
cld
insb
cmp
pop
sub
out
cld
add
ret
mov
mov
pop
xor
stos
cli
add
jg
aaa
cmp
add
cmovl
cmp
bound
shlb
pop
push
popa
lods
mov
xchg
xchg
pop
and
inc
fadd
adcl
shrl
pop
push
push
xor
pop
stos
jl
push
cltd
jmp
pop
outsl
sub
lock
ja
loopne
push
xor
xchg
in
add
loopne
cmpsl
ret
or
pop
add
mov
mov
push
das
jbe
jl
out
xor
in
xor
jnp
pusha
inc
xorl
idiv
push
cmp
rorb
cmpsb
jp
inc
sbb
inc
rorb
and
push
mov
sub
loop
pop
mov
jno
and
push
pop
lea
ss
pop
roll
dec
movsl
inc
mov
cmp
les
cmp
ja
cmp
pandn
mov
outsb
data16
inc
jns
stc
fidivl
pop
cmp
or
js
cli
cmp
xor
jbe
adc
push
xchg
dec
popa
in
loop
inc
jp
cmp
jbe
aaa
dec
fdivs
push
push
mov
lahf
push
xchg
imul
les
jb
dec
mov
lcall
mov
dec
xor
outsb
fcompl
test
push
sahf
sub
das
mov
fdivrp
mov
push
stc
pop
cmp
xor
sti
pop
repnz
adc
jae
jg
cmp
cli
inc
out
je
ss
aaa
int
aad
push
call
str
jb
imul
mov
cmp
bound
clc
lock
jge
cltd
je
cmp
jmp
ret
mov
insl
sarb
mov
add
mov
mov
mov
imul
outsb
adc
xor
popa
jns
orl
xchg
ljmp
mov
push
and
or
fiaddl
sbb
int3
dec
or
gs
stos
dec
addr16
add
out
xor
and
int3
push
pop
adc
jg
jmp
push
pop
jecxz
xchg
jg
das
mov
leave
mov
jecxz
sub
fcoms
xor
insl
jo
popa
scas
inc
sbb
roll
packsswb
push
imulb
jo
in
jp
mov
stc
pop
pop
dec
xor
xor
jb
dec
ret
push
mov
hlt
in
movsl
jo
shrl
add
push
ljmp
dec
shl
movsb
pop
push
outsl
push
jmp
insl
xor
in
repnz
imul
cmpsl
xchg
addl
dec
xchg
addr16
cmc
adc
movhps
push
bnd
ss
repnz
pop
cmp
shll
mov
inc
inc
and
push
xor
insl
push
cmp
insb
adc
inc
arpl
icebp
inc
arpl
lock
aam
lcall
adc
adc
add
cli
scas
xchg
xor
xchg
push
clc
scas
push
jb
sbb
rcr
fadds
push
arpl
insl
jb
mov
sbb
push
cmp
outsb
sub
xchg
push
fidivs
std
xor
sub
and
nop
xor
pop
aas
enter
outsb
fs
jle
mov
ja
jg
cwtl
data16
sbb
pop
push
aas
xor
jnp
stc
fs
aaa
cmp
xor
jmp
sub
out
notl
les
pop
insb
push
push
pop
mov
xchg
jo
pop
arpl
frndint
rcr
push
sub
orl
jmp
orb
add
sti
inc
dec
lret
icebp
jb
jge
mov
dec
je
lcall
sub
jnp
mov
dec
inc
jg
xor
cmp
stc
ss
cltd
jmp
jp
xor
icebp
and
jp
icebp
xor
clc
inc
data16
adc
xchg
insb
aas
pop
jb
ja
mov
sub
sbb
xchg
test
daa
adc
out
add
xchg
mov
loop
cli
mov
sbb
loopne
jo
jns
xchg
popa
insb
icebp
lock
wrmsr
fsubrl
or
mov
mov
out
popf
pop
pop
push
movsl
loopne
xor
sbb
sbb
jp
stc
stc
jo
pop
push
cmp
icebp
out
xor
cmp
jns
scas
imul
push
icebp
jns
adc
andl
or
jae
add
jbe
jne
je
subl
pop
sbb
push
jle
mov
sub
leave
lea
mov
push
mov
jge
cli
sub
jg
inc
cmc
push
lds
mov
outsb
stc
in
jl
mov
jae
jecxz
pop
loop
sbb
cld
fs
not
outsl
bound
inc
pop
in
pop
mov
xor
lcall
mov
pop
outsb
sub
push
push
stc
call
std
mov
and
cld
xorb
add
dec
add
xchg
loop
add
pop
xorb
outsb
lret
jnp
jg
arpl
sahf
dec
push
and
repnz
mov
pusha
mov
aaa
data16
les
adc
popa
aaa
push
dec
into
push
cmp
clc
sbb
pop
or
pop
mov
movsl
lock
xor
lcall
out
into
cmpsl
das
pop
outsl
cs
jp
jg
cld
aas
fs
or
jnp
bound
dec
ja
jno
mov
outsb
dec
or
pop
inc
rorb
stos
pushf
jo
pop
ljmp
xor
push
shll
rcll
inc
push
pop
stc
mov
pop
push
xlat
xchg
push
mov
insl
xchg
jle
in
outsb
stos
jge
push
imul
sub
xor
cld
or
jae
mov
sar
jbe
sub
sub
or
loop
ss
fcompl
jno
sub
push
roll
and
xor
xor
mov
cmp
xor
sbb
lock
fdiv
or
mov
pop
add
mov
mov
adc
mov
or
loopne
sub
pop
xor
aas
inc
add
pop
pusha
xchg
lcall
jg
xor
inc
fwait
ja
cs
aas
in
test
push
jl
mov
push
shll
pop
push
push
mov
inc
stos
sbb
cli
stc
lcall
lret
test
jecxz
idivb
xor
cmc
repnz
shrl
inc
dec
mov
in
sub
aas
ret
sbb
jmp
mov
dec
imul
aas
inc
aad
jns
pop
xchg
mov
clc
dec
xchg
insl
lahf
mov
dec
lock
cmp
lret
mov
sahf
in
push
push
cmp
mov
dec
jmp
lret
divb
aad
icebp
repnz
sub
cmp
imull
add
hlt
out
sahf
cmp
iret
idiv
mov
pop
sahf
xor
aas
pop
xor
xchg
fcomi
out
push
outsb
mov
xchg
inc
cltd
and
xchg
fcmovne
aas
enter
insb
push
mov
jno
addl
cmp
push
cmp
xchg
cltd
push
push
pusha
test
xchg
pop
ja
jg
cmp
mov
push
hlt
les
ja
daa
repz
sbb
cmp
clc
xchg
jnp
or
cmp
loop
cmp
dec
push
sub
bound
jns
sub
jns
out
in
repz
bound
cli
out
push
sahf
aas
pop
push
dec
scas
je
lret
in
movsl
in
lock
push
insl
data16
cmp
outsl
stc
dec
mov
xor
stos
into
mov
mov
iret
into
pop
dec
push
insl
sub
xor
loopne
std
cmpsl
cmpsl
push
jno
orl
clc
sbb
and
or
js
hlt
xor
xor
jns
movsl
push
aas
xchg
jnp
cmpsl
inc
fbld
push
sti
pop
popa
xor
int
jecxz
dec
aaa
sub
adc
lret
mov
add
xor
xor
cmp
out
mov
sti
mov
inc
ss
jl
jg
cmp
subb
jb
mov
imul
and
enter
inc
inc
and
mov
jb
and
dec
fs
jbe
push
cmc
xor
ret
add
mov
adc
daa
outsb
clc
sub
jo
cmp
pop
mov
scas
cmp
fidivrl
or
pop
jo
bound
pop
cmc
add
in
subb
add
sti
push
lock
lahf
shrl
xlat
jl
stc
jno
or
push
in
sbbl
jbe
jb
shlb
leave
and
fnstsw
repz
into
mov
or
add
loope
shll
rcr
cmp
popf
sbb
bound
inc
push
sbbl
iret
orl
jl
clc
inc
cmp
cmp
js
pop
repnz
jb
ss
test
stc
es
and
cmp
es
push
xor
cmp
mov
test
pop
pop
xor
inc
lahf
jae
jp
jno
and
sub
push
jo
mov
mov
ljmp
xor
cmpsb
enter
xor
push
add
and
add
jb
sbb
cmp
jae
dec
mov
repnz
lods
jge
aam
push
mov
sub
pusha
mov
mov
popl
data16
and
lods
xchg
inc
cmp
sbb
data16
adc
stc
rorb
sbb
pop
call
and
xor
jns
push
xchg
mov
inc
std
jmp
fidivrl
jns
pop
sub
mov
xorl
loop
lea
mov
mov
mov
into
jp
fidivrl
xor
dec
aad
dec
mov
xchg
ja
jno
call
mov
push
ds
push
dec
or
push
ret
aas
xor
pusha
std
outsb
xchg
xor
fs
xchg
stos
pushf
mov
jb
mov
push
sub
jb
jb
fucomp
xchg
jle
xor
xchg
lock
add
pusha
push
mov
jno
sub
jmp
cld
pop
sub
add
xchg
mov
push
sbb
lods
add
movsl
out
in
arpl
ja
sub
cli
xor
jle
push
push
aaa
pop
jg
mov
test
jae
inc
mov
divl
xor
mov
push
test
mov
sahf
and
cli
out
mov
enter
addr16
mov
stc
jb
cmp
mov
in
cwtl
cmpsl
movsb
lcall
sbb
mov
cmc
icebp
imul
push
je
test
enter
movb
dec
cmpb
cmp
jnp
add
jp
popa
bound
inc
popa
mov
outsb
push
xor
popaw
bound
inc
jb
xor
pop
mov
jb
ret
add
push
cmc
mov
jmp
rcrl
mov
cmp
and
sbb
xchg
or
pop
xchg
push
xor
lock
jnp
xor
sbb
inc
xor
adc
or
loopne
add
inc
adc
push
pop
or
inc
xor
outsb
add
add
imul
dec
mov
cmp
in
cwtl
notb
sub
push
mov
leave
and
mov
push
push
psubusw
popa
test
jno
ss
dec
sbb
push
jbe
test
subb
jp
js
stc
insl
jb
xchg
mov
mov
sbb
dec
enter
jnp
inc
pop
lret
mov
inc
cltd
or
jbe
xor
add
pop
mov
outsb
scas
push
add
bound
scas
inc
xor
shld
xchg
movsl
push
rorb
jg
sahf
mov
nop
adc
mov
push
stos
mov
jns
jp
js
push
icebp
push
inc
xchg
sbb
mov
cmp
pop
xorl
sti
jp
stc
lahf
lret
inc
je
lock
push
lds
mov
jns
scas
mov
in
cs
mov
xor
jns
pop
jle
jmp
xorl
xchg
lods
push
loopne
mov
push
inc
jae
sarb
clc
cmp
cmp
sub
stc
jb
xlat
dec
xchg
jl
mov
sbb
bound
jb
jo
shll
test
imul
xchg
fidivl
push
jp
xor
bound
ret
mov
push
pusha
out
aad
aaa
or
add
dec
pushf
inc
popa
and
dec
or
sub
mov
mov
mov
adcl
or
lods
in
leave
jg
stc
je
inc
jle
mov
inc
test
sbb
repnz
xlat
pop
aas
and
cmp
mov
mov
bound
lds
test
orl
es
outsl
leave
mov
pop
stc
inc
jmp
push
fisubrl
or
jbe
rolb
outsb
fs
mov
cmp
push
out
out
pop
and
fucomi
xor
inc
xor
mov
repnz
aam
shrl
mov
jge
mov
pop
jb
jle
dec
insb
inc
push
ss
mov
jp
std
inc
insl
jnp
call
push
aam
mov
cmp
das
lcall
dec
jnp
fs
jmp
mov
add
unpckhps
inc
jae
stc
cmp
iret
jl
mov
mov
stc
mov
xchg
xor
sahf
repz
popf
xchg
stos
stos
cmc
xor
mov
es
lret
lcall
fbstp
push
jb
xor
in
pushf
ja
jb
outsl
divl
xor
cld
xchg
inc
pop
insb
testl
jp
repz
add
mov
cltd
stc
mov
sub
dec
push
xchg
cmp
divl
xchg
jl
add
jle
push
push
sub
aam
or
inc
loopne
test
mov
pop
sub
dec
dec
or
xchg
xchg
jge
je,pt
les
jnp
jg
xchg
fidivl
push
jecxz
nop
lods
addb
or
mov
push
movsb
fistps
je
mov
aam
pop
jno
inc
adc
or
lods
or
rcrl
adc
mov
add
add
insb
test
xor
dec
in
fisubl
stos
and
stc
and
iret
int3
or
jp
push
mov
adc
insb
mov
jle
jae
pop
jbe
cld
pop
cmp
xchg
ss
or
pop
insl
pop
push
arpl
test
insb
jo
push
lcall
pop
push
pusha
iret
and
and
cltd
nop
and
nop
insl
mov
xor
xchg
mov
aam
adc
dec
cli
insb
outsb
outsl
xchg
data16
jg
push
aaa
mov
mov
lea
ja
sbb
pushf
pop
aas
call
popf
jbe
insb
jo
pop
adc
lods
and
das
cmc
cmp
push
lods
outsb
cmp
sbbl
hlt
clc
xchg
xchg
nop
pop
mov
inc
test
fiaddl
cmc
push
jg
mov
js
stos
outsb
cmp
and
hlt
cmp
add
das
or
or
jp
cmp
scas
das
push
inc
js
test
es
cmpsl
ds
stos
incb
pop
es
dec
and
sub
mov
xlat
adc
cmp
or
mov
mov
xchg
stc
mul
bound
sub
sub
xor
jb
cmp
ss
inc
dec
jle
push
add
xor
pop
and
inc
sub
jl
add
dec
dec
push
pushf
inc
xorl
shrb
jno
arpl
mov
loop,pt
les
jg
jp
xorb
jmp
es
cli
lcall
cltd
jmp
popf
and
cmpsl
loopne
or
dec
les
cmp
pop
fcmovu
sti
aaa
gs
cwtl
lock
movsb
cmp
pop
test
jp
push
or
xlat
addr16
into
xchg
out
xorb
push
in
mov
push
ret
jle
xorl
lret
dec
jbe
rcll
push
or
and
inc
int3
and
mov
sub
add
fldl
or
jmp
add
push
arpl
sbb
push
and
mov
out
push
lds
cmc
outsb
mov
or
fsubr
sbb
mov
call
adc
pop
aam
loopne
add
push
mov
sbb
adc
repnz
fists
push
repnz
mov
pusha
insb
push
cwtl
out
xor
adc
jp
sub
xlat
cli
mov
xor
repz
xchg
and
mov
push
push
nop
les
mov
sub
lahf
inc
mov
dec
in
fsubrl
jl
test
popf
inc
xchg
add
jg
ret
test
ss
xor
jle
daa
aad
lret
sub
dec
cmpsl
shlb
jo
mov
jb
and
imul
and
fimull
pop
das
fldcw
xchg
aas
jge
lahf
cmp
loopne
mov
loopne
and
test
cmp
jge
or
jg
sub
jle
jl
jmp
inc
test
xor
and
push
jg
jo
cmp
pop
lcall
push
stc
xchg
push
cmp
popa
jns
cmc
cmp
sarl
aaa
pop
repnz
xchg
shlb
inc
in
cmp
xchg
add
jmp
pop
xor
add
call
bound
decl
pop
adcb
xor
or
inc
or
and
dec
dec
jecxz
test
push
push
dec
jbe
add
pop
inc
inc
and
pusha
pop
into
jb
idivl
lock
ret
dec
xor
cmp
inc
ret
and
jb
xchg
cmpl
inc
cli
je
aas
daa
ss
xlat
xor
xor
jb
jbe
loop
lcall
push
imul
or
ja
pop
jmp
rorb
adc
or
ret
jns
nopl
push
scas
pop
mov
dec
fwait
inc
shlb
lock
loopne
movsb
ss
cli
cmp
sbb
push
sbb
js
push
out
xor
push
cli
and
push
mov
outsb
mov
xor
data16
push
js
mul
insl
sub
arpl
sub
je
fildl
mov
xor
sbb
pop
cmp
inc
push
xchg
dec
xlat
jne
jo
push
pop
stos
out
sub
cmp
nop
mov
cmp
cmp
lcall
and
and
jb
mov
lea
cmpb
cmp
iret
rcll
push
lahf
sub
jg
lods
hlt
insb
xor
sub
pop
outsb
mov
das
inc
push
fisubrs
mov
or
push
add
inc
cmp
cmpsl
insb
hlt
inc
dec
push
mov
mov
or
jle
in
rcrl
mov
push
jp
jmp
add
daa
inc
adc
adc
mov
into
add
shrb
jg
push
cmc
enter
jae
cli
jle
sarb
add
pop
and
push
inc
insb
jb
mov
test
xchg
leave
bound
fldl
push
inc
mov
loop
stc
push
inc
std
xor
ds
lock
hlt
ja
jns
test
add
pop
int3
inc
stos
add
jbe
dec
pusha
es
imul
push
xlat
aaa
or
push
push
pop
ja
aaa
fcomip
dec
xchg
ret
insb
pop
push
cld
das
mov
stc
push
aam
shrl
push
call
xchg
pop
iret
icebp
and
mov
sub
outsb
sub
imulb
lcall
ret
pop
push
and
lret
sbb
xchg
xor
mov
push
inc
push
call
lret
mov
stc
pop
dec
arpl
push
inc
outsb
or
sbb
mov
mov
mov
in
rcrb
jmp
repnz
in
xor
jno
js
sub
lock
je
cltd
andl
jge
pop
inc
loop
cmc
arpl
push
xorl
fstl
scas
and
xor
sarb
into
fidivrl
cmp
add
repz
icebp
add
shlb
pop
cltd
push
jno
mov
lret
ja
aaa
fimuls
fcmovnb
pop
in
pop
mov
pop
pop
movsl
shl
xor
std
mov
adc
pop
xlat
lea
std
loop
xor
mov
ja
inc
xor
lsl
xor
sbb
fildl
pusha
ja
outsb
stc
in
movsb
ss
jb
dec
adc
ret
xchg
mulps
les
testl
dec
xchg
push
dec
dec
mov
ret
mov
js
xchg
add
mov
xchg
std
ret
add
cmc
or
mov
and
xor
jne
push
mov
in
les
jp
jb
mov
push
cmp
lcall
jp
scas
shrb
sbb
insb
mov
dec
add
mov
bound
push
push
cmp
sub
pop
cmpsl
push
jle
inc
in
jmp
and
fadds
and
cmp
cld
lahf
std
pop
in
stc
mov
stos
bound
scas
and
jecxz
jno
addr16
jecxz
or
outsb
loope
dec
repz
pusha
push
lret
jb
xor
lods
aad
in
mov
sub
fidivrs
punpckhbw
cltd
mov
test
xor
sbb
jl
jo
bnd
jp
punpcklbw
insb
bound
pop
lcall
bnd
bound
inc
push
dec
mov
jns
xor
lea
cmp
bound
arpl
push
jno
mov
cs
out
hlt
add
jle
fcomps
lcall
xor
inc
subb
stc
movsl
mov
sub
mov
jo
pop
addr16
and
dec
addl
push
rolb
cmpsb
dec
push
cltd
dec
test
sbb
icebp
mov
adc
xor
mov
sbb
out
mov
xlat
cmp
ds
mov
dec
shl
mov
ss
mov
fs
mov
gs
ss
divl
push
push
xchg
inc
pop
add
push
jo
lods
mov
push
xor
ret
stc
inc
insb
push
xchg
xchg
lock
and
bound
cltd
stc
push
pop
stc
outsb
popa
mov
dec
mov
and
push
fiadds
jmp
dec
and
test
imul
mov
sti
bound
pop
sub
cmp
cld
push
push
lock
xchg
jne
jmp
jecxz,pt
mov
dec
cmpsb
mov
xchg
push
dec
mov
dec
adc
push
jg
inc
mov
push
das
sub
xchg
jbe
jecxz
sub
push
rorb
jns
std
or
push
std
inc
xchg
push
ret
and
pop
ds
push
sub
push
pushf
jae
std
xchg
jo
test
ljmp
sub
ss
dec
pusha
loopne
jl
or
cmp
jge
jae
rorb
cmpsl
shrl
jae
jecxz
imul
repz
aas
cmp
push
lock
sbb
jns
sub
jmp
adc
mov
or
pop
jg
inc
decb
push
addr16
lods
stc
push
call
rolb
adc
movsl
pusha
clc
testl
push
jns
es
shrl
sarl
call
roll
imul
inc
or
push
and
ficompl
inc
rclb
aas
ret
inc
sub
push
data16
jbe
push
xchg
mov
pop
sti
add
jmp
lret
mov
sbb
leave
insb
push
or
pop
mov
cmpsl
inc
daa
les
imull
nopl
mov
cwtl
push
fdivs
insl
and
and
push
stos
arpl
sbbb
push
lret
push
aas
js
cmp
pop
push
int
push
push
xor
mov
cwtl
shlb
mov
popa
daa
and
xor
adc
insb
push
outsb
push
mov
jae
add
fmull
mov
fstpt
scas
sub
push
nop
add
imul
jo
cmc
cmp
cld
or
pusha
movsb
jb
hlt
gs
xchg
pop
xor
je
dec
jl
inc
std
sbb
add
repnz
xor
push
lea
ficompl
bound
out
xchg
cmp
sarb
jns
mov
popl
das
mov
sbb
mov
outsb
std
xor
dec
push
adc
push
mov
ja
stc
pop
adc
cmc
jp
bound
cmpsb
adc
add
and
pop
jnp
outsb
mov
cmp
adc
xor
mov
insb
sub
xchg
je
shl
or
outsb
mov
push
roll
push
test
xor
aaa
dec
fiaddl
fdivp
jno
mov
jg
mov
cltd
inc
out
jbe
sub
enter
int
fnstsw
lds
std
jb
inc
rol
xor
xor
daa
add
sub
ret
insb
enter
mov
pop
sti
nop
add
loopne
inc
std
jb
arpl
mov
imul
stc
mov
scas
xor
pop
test
inc
xor
mov
cld
jb,pt
jmp
sub
lcall
mov
fcmovb
cld
out
fldlg2
insl
rcrl
sbb
repnz
or
push
sub
fdivl
rol
cmp
fimull
jecxz
add
inc
das
jns,pt
dec
adc
in
or
leave
add
outsb
xor
inc
cmp
cmc
or
rcrl
mov
and
imul
lret
cmp
add
aad
mov
sub
cli
push
dec
outsl
fwait
dec
or
xor
out
cmp
iretw
cwtl
cmp
push
xor
add
xor
add
xor
inc
inc
pop
repz
xor
adc
sbb
jmp
or
xchg
in
add
jle
rol
pop
bound
push
add
or
pop
push
add
dec
xchg
icebp
imul
jg
sub
push
cmp
pop
cmp
inc
ljmp
es
jb
popa
xorl
xor
leave
inc
inc
inc
cmp
inc
push
inc
pop
inc
stc
push
mov
outsl
sub
lea
push
mov
push
in
pop
mov
jno
push
pop
movsl
xchg
aaa
enter
lret
std
insb
out
xchg
pop
dec
xor
adc
sahf
test
and
bound
cmc
cld
add
push
dec
cwtl
ret
cwtl
dec
push
cld
mov
gs
jle
fstps
jge
inc
stc
pop
outsb
mov
add
lcall
jg
fucomip
push
mov
in
in
xor
pop
jmp
jbe
mov
call
inc
xorl
and
push
mov
add
and
hlt
adc
fdivrs
incl
insb
inc
shrb
sub
repnz
and
mov
mov
aas
shlb
pop
stos
stc
inc
stos
sahf
ljmp
repnz
data16
pop
mov
hlt
mov
push
xchg
sub
mov
mov
mov
fwait
push
add
lahf
dec
pop
rorb
pop
divl
shr
call
ljmp
pop
sar
repnz
cld
insl
xchg
jg
rorb
dec
arpl
add
psubsw
jl
aas
push
mov
rcrb
mov
lret
fldl
mov
ret
or
jmp
hlt
push
rorl
pop
out
sub
add
lcall
bound
and
mov
lock
ss
add
xor
bound
popa
in
out
pop
mov
add
push
or
jns
in
pop
jb
pop
ss
rclb
cmp
pop
push
repnz
pop
sub
mov
pushl
repnz
ljmp
popa
pop
out
repnz
or
mov
out
sub
mov
jo
mov
testl
inc
push
push
mov
push
mov
in
pop
sbb
in
xchg
jae
jbe
lock
das
int
cmp
mov
push
xor
fs
or
jge
sub
cmp
lock
or
and
pop
jg
ret
pop
push
jbe
jnp
push
movsb
scas
dec
pop
add
test
lahf
adc
cld
dec
or
sub
dec
mov
mov
lds
xchg
out
mov
mov
dec
push
adc
xchg
outsb
mov
cmp
add
outsb
outsb
push
loope
sub
fs
pushf
sub
and
jne
mov
adcl
mov
pop
sti
andb
and
sub
cmpsb
mov
sub
movsb
repnz
pop
sti
jno
lret
dec
jnp
les
xchg
gs
dec
jecxz
jne
inc
mov
add
out
or
sub
in
xor
jecxz
inc
lods
sbb
xor
test
jbe
mov
lret
add
rorb
outsb
sbb
imul
js
xor
cld
hlt
jb
jae
bound
jle
sbb
repz
cmp
roll
shrl
leave
jge
imul
push
cmpb
cmp
sbb
orl
pop
or
sti
outsb
andl
fcoml
push
cmp
jmp
jae
xchg
insb
mov
mov
pop
push
imul
repz
mov
sti
repnz
test
test
lcall
xorl
cmpsl
push
inc
push
or
shl
jns
jecxz
repz
scas
add
jae
fidivrl
inc
imul
mov
inc
xor
and
add
fucomp
sub
stc
ret
sbb
in
fstpt
fisubs
add
lret
div
and
arpl
daa
lods
pop
jge
pusha
sbb
add
int3
mov
xor
out
lock
and
loop
ret
push
fildl
popa
jp
pop
movsl
arpl
stc
fwait
push
pop
shl
xorl
push
xor
adc
imull
mov
adc
enter
push
or
dec
cli
out
jge
xchg
bound
cmp
fisttpll
ror
sub
fiaddl
push
inc
scas
jns
les
cmp
push
arpl
bound
push
subb
jb
pop
push
bound
dec
jo
xchg
mov
outsl
jne
out
js
pop
add
hlt
pop
lods
inc
jae
push
or
fcmovnbe
and
pop
push
add
adc
cltd
sub
xor
or
inc
cmp
sarb
mov
xchg
xchg
jne
jno
xor
pop
mov
sarb
or
sub
dec
mov
dec
outsb
add
jl
dec
out
ljmp
jns
les
dec
aam
stc
sbb
mov
mov
push
lea
add
mov
popa
imul
pop
xsaveopt
dec
testb
fists
int3
idivl
stos
fnsave
mov
mull
cmpl
and
adc
push
daa
mov
or
jno
jg
jmp
test
pop
push
int3
cmc
inc
adcl
je
jg
mov
sub
lds
cmp
adc
ficoml
test
sub
fildl
and
ficompl
stc
pop
jp
cld
sbb
pop
xor
jo
icebp
add
lcall
sti
mov
pusha
jle
jb
shlb
sbb
push
leave
arpl
jbe
mov
cmp
inc
add
mov
movsb
cld
arpl
lcall
add
fcoms
mov
or
imul
mov
mov
pop
jg
dec
cli
xchg
adc
mov
shrb
out
imul
sub
push
fisttpl
incb
xchg
ret
movsb
les
and
push
dec
adc
push
lret
mov
mov
stos
mov
lahf
push
mov
push
testb
sub
jmp
pop
jnp
add
outsl
jae
aam
cmp
idiv
push
jmp
jmp
scas
jge
idivb
pop
imul
pop
adc
xchg
and
icebp
data16
push
jl
lahf
out
dec
sbb
fnstcw
adc
sti
mov
pushf
adc
jmp
out
mov
out
and
cmp
jge
sbbb
cmp
push
push
sbb
test
xor
into
clc
arpl
pop
sub
xor
jecxz
pop
shr
scas
mov
mov
mov
dec
cmc
mov
pop
xchg
popf
push
lock
xchg
xchg
jb
jbe
inc
sti
mov
movsb
in
scas
mov
mov
or
and
mov
mov
les
xorps
add
lods
push
imul
or
and
jle
bound
jecxz
ljmp
clc
inc
mov
cmp
es
lods
dec
mov
fdivp
jg
cmp
add
fadd
inc
out
into
inc
push
stc
adc
xor
mov
jg
pop
pop
jns
cltd
jle
cmpl
or
test
push
fcompl
mov
jnp
xchg
mov
push
scas
add
lds
mov
lahf
outsl
push
icebp
lahf
inc
jge
jno
sub
iret
mov
mov
in
jle
mov
bound
sbb
jae
js
clc
inc
xor
push
xchg
jmp
repnz
jb
loopne
pop
cmp
xor
scas
push
inc
pop
nop
mov
mov
cmp
jae
and
pushf
xchg
cwtl
jge
jmp
xchg
jb
xchg
test
mov
jle
push
cmc
iret
lock
mov
outsb
xlat
dec
jle
adc
mov
inc
subl
stc
adcb
push
and
inc
pop
push
mov
scas
mov
jbe
pop
stc
mov
push
mov
pop
push
cwtl
and
sbb
sub
test
xchg
lahf
xor
ficoms
mov
pop
mov
divb
mov
ds
adc
sub
in
dec
push
fidivrs
push
sarl
xorl
lcall
jmp
fcoml
mov
xchg
jle
fbld
cmp
inc
scas
test
mov
popf
lret
or
xchg
lcall
rclb
out
loope
sarb
cmp
xchg
cwtl
lods
add
lret
jg
xorl
fidivl
xchg
add
xor
popf
in
test
push
stos
daa
daa
out
jl
shlb
enter
cmp
add
cs
inc
mov
stos
push
dec
clc
ds
push
jno
clc
mov
cmp
orl
or
and
cmp
pop
pop
push
addr16
and
inc
inc
popa
sbb
arpl
jo
cld
rolb
aam
out
jg
inc
repnz
insl
inc
in
dec
daa
out
outsl
mov
in
insb
cmp
fcomps
push
jae
int
mov
xor
push
das
stos
cmp
int
adc
rorb
xchg
addl
faddp
cli
inc
les
jmp
bound
add
clc
notb
outsl
lds
add
pop
add
cs
sub
int3
lret
cmp
pop
mov
sbb
lock
les
jb
data16
and
mov
daa
push
push
jbe
jp
jb
outsb
and
sarb
xchg
mulb
loop,pn
outsb
pop
in
pushf
in
xor
fs
lods
fmull
xchg
or
mov
jmp
insl
aaa
jp
xor
jo
out
dec
pusha
inc
add
aas
jecxz
pop
cmp
xor
je
add
in
loop
jno
jae
test
push
aam
cmp
dec
push
call
and
sarl
es
mov
out
sub
lock
pushf
pop
push
icebp
add
xor
je
dec
rorb
lock
bound
lods
ja
dec
pushf
into
xor
lods
fsub
pop
push
jnp
and
imull
addl
scas
outsb
rclb
inc
clc
xchg
push
repnz
notl
jns
fsubl
ror
jb,pt
sbb
cltd
xchg
mov
cwtl
outsb
jecxz
pop
movsb
sbb
xor
and
bound
cs
mov
cli
xor
int3
aaa
pop
xor
mov
sysret
xchg
cli
xchg
cmp
inc
mov
push
dec
pushf
mov
xchg
sbbb
sahf
loopne
lock
jno
dec
addl
cmc
cmc
jp
inc
inc
pop
push
sbb
push
adc
push
clc
pushf
into
jbe
mov
imul
or
jb
loope
xchg
mov
sahf
imul
bndstx
pop
outsb
mov
test
outsb
add
mov
arpl
orb
xchg
jbe
jae
std
movsb
inc
popf
mov
inc
inc
repz
cwtl
cltd
mov
repz
iret
mov
inc
test
ret
mov
negl
push
sbb
xchg
jp
clc
push
jne
sub
and
iret
pop
aaa
das
and
test
add
hlt
out
cltd
xor
ljmp
nop
pop
bswap
sub
xor
jmp
sbb
jns
ss
and
push
repz
push
hlt
out
es
jmp
inc
inc
mov
das
pop
sbb
jo
jge
cmp
inc
aaa
data16
push
arpl
jno
ror
jbe
aaa
pop
leave
mov
jmp
xorl
sbb
popa
pop
movsb
xor
mov
mov
imul
outsb
rcrb
jb
ja
pop
xchg
iret
mov
stc
xor
repz
xor
bound
dec
jb
push
cli
loop
jle
ret
jle
adc
jle
xor
out
into
xchg
lret
xor
ds
je
sub
inc
xchg
xchg
stc
testl
shl
sub
cmp
inc
dec
xchg
mov
mulb
sub
test
inc
mov
pop
lret
or
dec
aam
adc
sub
js
addl
ficomps
ljmp
ljmp
mov
jle
mov
mov
pusha
ds
xchg
hlt
and
xor
aam
outsb
into
jl
xor
jmp
and
inc
mov
popa
aas
insb
sbb
in
push
stos
add
cmc
inc
jecxz
jnp
add
mov
cld
ljmp
fimuls
stos
pop
add
mov
pop
push
add
in
jb
pop
jl
out
push
cmp
vmwrite
outsb
out
and
add
push
insb
xor
jo
pusha
adc
jp
xchg
mov
movsb
sub
mov
data16
outsl
not
sbb
outsb
pop
push
push
jns
adc
pop
lret
push
push
ret
mov
xchg
inc
or
insl
ds
or
jp
lret
icebp
std
xor
jnp
jae
stc
xor
ss
flds
push
outsb
cli
aas
sub
adc
cmpsb
jns
shlb
push
das
jbe
push
test
xor
std
pusha
add
push
in
lret
outsl
mov
outsb
cmc
enter
pusha
mov
bnd
sub
imul
test
cmpl
ss
adc
inc
adc
xchg
sahf
cmp
mov
inc
into
push
ret
jno
sub
inc
jbe
xor
popa
mov
or
sub
push
es
sub
sub
sbb
xchg
pop
mov
aad
jns
bound
es
jg
div
jmp
psubb
repnz
lcall
inc
mov
mov
das
call
loopne
xor
das
adc
pop
sbb
cmp
ds
add
mov
fidivl
sub
push
scas
pushf
jmp
outsb
jmp
sub
cmp
and
sub
mov
jb
inc
jle
lret
outsb
sti
sub
stc
push
icebp
jbe
popf
adc
in
fistpl
repz
push
not
shll
xlat
out
xor
popfw
dec
out
jg
loop
push
push
xchg
xor
fmuls
bound
aad
add
in
cld
cmp
rcrl
push
mov
lcall
push
push
addl
jp
outsb
cli
xor
cld
loope
jg
or
sub
dec
mov
add
push
lods
sub
out
das
fs
lock
repnz
je
addr16
or
cmp
dec
add
repz
or
and
rcrl
dec
push
loop
or
dec
pop
in
mov
ds
outsb
aas
nop
lods
fsubs
push
psrlq
movsb
roll
jg
mov
rcrb
inc
xchg
mov
xor
jp
cmc
pop
shrb
data16
pop
rcr
sub
xchg
stos
incl
andl
addr16
inc
dec
mov
mov
les
mov
pop
xchg
adcb
push
push
pop
jno
push
imul
xor
loop
sarb
pop
lods
imul
outsl
jmp
mov
mov
sahf
pop
sbb
mov
repnz
cmp
repnz
outsl
bound
adc
pop
sub
scas
mov
push
cmp
mov
bound
xchg
loopne
pop
data16
rcrb
and
push
or
jmp
pop
jmp
pop
push
inc
sbb
lds
bound
push
xchg
data16
leave
jno
and
xor
cmp
sbb
sbb
xor
leave
insl
pop
dec
xor
icebp
and
shll
and
jns
sub
data16
cmc
outsl
mov
divb
outsb
xchg
pop
pop
jmp
mov
rolb
lds
and
pop
push
sbb
dec
pop
js
sarl
push
adc
pop
outsb
popa
inc
mov
pop
sti
inc
fwait
arpl
cmp
popa
clc
xchg
ja
ret
mov
cmp
enter
xor
js
add
push
icebp
cmovb
inc
aaa
xor
xchg
loopne
jo
divb
cwtl
test
add
aaa
vmwrite
repz
cmc
enter
inc
jge
xor
jno
jg
psrlw
test
imul
xor
je
scas
negl
pop
xchg
and
out
dec
rol
in
cwtl
jnp
lret
cmpsb
fcompl
sub
and
mov
jg
int
rcll
lds
jae
insl
mov
or
jne
idiv
push
sbb
xchg
add
popa
stc
in
ss
das
insb
aad
sti
aaa
sub
fs
imul
ja
cmc
jle
jo
add
imul
ds
and
push
mov
mov
sub
cld
cmp
pop
in
sbb
rolb
insb
pop
xchg
sub
jnp
out
les
fs
sub
jnp
jg
cmp
xchg
jo
push
cmp
pop
mov
fdiv
cmp
adc
into
aaa
mov
stc
cmc
popf
push
rclb
sahf
xchg
lret
mov
repnz
mov
inc
imul
push
cmpsl
pop
and
test
push
pop
ss
cltd
jl
ret
sbb
cmp
cmovne
xchg
push
bound
sub
jb
xchg
shlb
lods
lret
jno
xchg
mov
popf
push
pop
mov
es
mov
fisttps
shl
inc
pusha
pop
jbe
and
and
lcall
push
decb
xor
sti
data16
sub
sub
icebp
je
push
jle
xor
and
clc
dec
pusha
outsb
inc
jb
sub
pop
or
cmp
in
outsl
cmc
jae
sub
inc
popf
inc
push
jb
pop
push
mov
popa
jbe
xchg
ss
adc
loopne
scas
sbb
xor
jnp
mulb
rol
sub
cmp
sbb
lcall
adc
rcl
loop
je
fimuls
cwtl
push
clc
sbbl
push
cmp
xor
cmc
sbb
push
pushl
iret
mov
jno
xchg
insb
mov
insb
xlat
mov
nop
jae
mov
bound
mov
xlat
mov
mov
ftst
fimull
pop
inc
stos
mov
pusha
jns
jmp
lret
ds
push
adc
mov
andps
push
out
lret
jge
jnp
sti
leave
addr16
xchg
and
cmc
lock
outsb
adc
xchg
add
xchg
lods
sahf
pop
adc
cld
xchg
dec
imul
ja
inc
ret
add
cmp
repnz
pop
push
ljmp
out
push
incb
mov
sub
in
mov
push
imul
jbe
insb
mov
push
mov
sbb
jl
es
cltd
xchg
inc
repz
mov
push
and
mov
push
mov
add
pop
pop
fstl
or
inc
cmpsb
cwtl
mov
pop
cmpsl
mov
and
into
rcrl
outsl
push
xchg
or
lret
sub
pop
stc
push
fucomi
sbb
movsl
add
xchg
or
adc
inc
ror
movsl
pop
xchg
push
and
stc
sbb
scas
scas
cltd
and
mov
jp
inc
test
and
adc
imull
jns
inc
test
jp
jle
mov
sbb
push
sbb
jne
mov
popa
mov
adc
in
jno
xchg
pop
stc
sub
out
push
popa
sarb
or
pop
andnps
dec
pop
sub
shrb
enter
sbb
mov
sbb
cmp
ljmp
cld
fs
xor
xor
xchg
pop
lcall
ja
push
es
repz
cmp
es
cltd
and
dec
out
adc
outsb
ss
xor
lret
jb
jo
add
repz
inc
pop
cmp
pop
and
jg,pn
dec
push
sub
mov
jl
adc
data16
stc
jnp
push
add
cmp
sub
mov
jbe
js
lcall
add
sub
xor
push
ss
dec
jo
jb
mov
hlt
ds
shll
push
push
outsl
mov
xchg
push
pushf
mov
imul
dec
ret
sbb
rep
icebp
adc
sub
aam
ds
sbb
stc
mov
imul
pop
repnz
cld
pushw
and
mov
dec
sub
popf
push
sub
scas
xchg
fbld
pop
jmp
pop
sahf
das
push
pop
das
adc
pop
ja
stos
pop
es
adc
repz
push
rolb
jle
mov
pop
and
ds
ret
stos
incl
jl
mov
sub
enter
insb
lods
leave
repnz
cmp
add
into
aam
aas
rclb
bound
push
push
test
jae
xor
pop
sub
popf
rorb
mov
sub
jbe
lret
iret
in
clc
aam
add
das
pop
mov
std
aaa
fstpt
push
jb
inc
popa
push
aad
mov
movsl
mov
shrb
fisttpll
loop
jno
cmp
add
fdivrl
jg
lock
cmc
jle
jae
shlb
push
cli
inc
mov
fdivl
dec
add
cld
dec
int3
push
push
pop
add
add
pushf
xchg
inc
cmp
aam
js
int
xlat
jle
and
dec
test
push
cmp
outsb
les
xor
cmc
idivl
stos
insb
dec
mov
or
mov
aaa
jbe
pop
jge
push
ja
jmp
out
jle
fimull
scas
je
push
jae
mov
movsb
lds
push
and
lock
jle
or
aaa
icebp
maskmovq
negl
ja
cld
xchg
mov
jae
jns
stos
sbb
push
imul
in
test
incb
and
xor
push
rcr
sub
sbb
xor
push
stc
in
mov
pop
lods
jb
cli
and
xor
jle
jae
sub
lcall
jle
adc
insb
jb
aad
test
jo
stos
cli
and
es
sub
cmp
fucomi
cs
and
cli
pop
mov
sub
xchg
inc
and
sub
pop
jecxz
inc
repz
push
es
pop
sbb
lock
push
cmp
push
cmp
mov
loopne
jo
sub
jb
ss
mov
fistpl
sahf
mov
xor
mov
sbb
lret
pop
lret
add
das
ljmp
dec
jne
jb
push
lcall
pop
fidivl
mov
jl
and
es
cmp
outsb
jg
incb
and
es
lods
stos
mov
outsb
mov
fdivr
and
inc
stos
daa
pop
jl
std
insb
or
sub
jp
jb
mov
mov
daa
jnp
push
mov
ret
mov
dec
mov
clc
dec
repnz
xlat
cmp
testl
faddl
xchg
lret
pop
sub
push
mov
xchg
mov
loop
jg
inc
lea
aas
clc
addl
add
mov
mov
sub
movsb
mov
cmp
lock
pop
inc
push
into
mov
jle
mov
adc
xor
lds
cmc
xor
mov
lods
outsb
cmp
add
leave
jo
shl
sbb
dec
dec
jb
stos
xor
repnz
xor
iret
out
fadds
rclb
jb
mov
dec
pop
decl
add
add
dec
push
push
xchg
jp
cmc
push
ficoml
lock
cmp
push
outsb
sarl
adc
mov
bound
mov
lods
stos
jb
and
jbe
mov
sbb
popf
sti
sub
push
outsb
aaa
bound
or
jb
cmp
movb
dec
ja
lods
mov
loope
pop
loopne
xorb
add
jne
ljmp
xchg
fmul
xchg
pop
ficoms
jle
mov
add
xchg
mov
jne
mov
jne
jbe
lret
jle
mov
rcll
inc
sub
sbb
cmc
cs
test
xor
aad
cltd
andps
aaa
cmc
dec
xor
xor
insb
inc
or
mov
das
sahf
sub
fcoml
ja
mov
pop
jns
push
mov
clc
dec
stos
ror
xchg
sahf
insb
notb
xor
daa
and
adc
mov
sub
repnz
out
lret
jle
movsb
inc
hlt
popa
and
aaa
add
jmp
adc
push
stc
xchg
adc
push
lret
cmc
sub
jl
movsl
xchg
pop
jbe
ss
mov
fdivrs
cmp
rclb
outsb
sbbl
hlt
inc
and
std
push
fwait
ret
popa
push
cli
jno
bound
inc
add
insb
jnp
pop
mull
pop
xchg
gs
cmp
xor
mov
sub
jp
outsb
sub
or
out
or
dec
push
das
mov
pop
xchg
jp
pushl
inc
jb,pn
lock
std
jnp
dec
lret
mov
pusha
inc
sbbl
sub
cmp
inc
outsl
pop
outsb
jb
jb
nop
icebp
icebp
and
std
inc
sar
cltd
test
insb
and
jge
outsb
mov
sbb
ret
pop
mov
popa
cmpsb
cmp
jmp
je
addps
pusha
push
popa
jecxz
push
jle
insl
or
lods
ja
pusha
push
mov
sbb
cmp
mov
cmpsb
mov
mov
inc
xor
push
mov
or
out
ds
aam
sbb
dec
and
pop
push
pushf
repnz
push
jbe
dec
inc
lock
push
push
sub
inc
popa
jg
jb
jo
adc
cmp
mov
orb
inc
adc
ss
push
inc
xor
unpcklps
xlat
js
notb
out
push
inc
lret
roll
lock
push
jno
cld
mov
popa
pop
fwait
or
aad
mov
pusha
or
stc
sbb
and
jge
push
jle
dec
mov
adc
es
cmpsl
push
mov
ds
in
jle
cmp
jno
imul
cmp
jo
in
cmp
lret
push
mov
sub
push
js
daa
rol
shll
or
ja
sub
xor
cld
aad
in
test
xchg
pop
stos
insb
out
mov
sbb
push
jno
jb
add
sub
xchg
mov
int3
add
mov
mov
pop
scas
or
push
iret
popf
sti
pop
mov
xchg
push
add
icebp
inc
insl
push
jns
or
dec
xchg
into
jbe
xchg
nop
mov
stc
jno
add
aam
dec
pop
push
cli
cmpsl
arpl
and
dec
sub
add
sti
out
hlt
fisubl
rep
dec
mov
stc
loop
jbe
enter
jl
aaa
xchg
in
bound
adc
loope
lea
xchg
push
xchg
pop
lcall
fsubl
mov
dec
mov
sub
lret
rolb
in
xchg
jne
sub
jg
movsb
jge
outsl
cli
xor
enter
subl
in
push
inc
mov
push
inc
movl
out
orl
pop
dec
loopne
sub
pop
mov
xorl
bound
or
xchg
or
adc
repz
pop
adc
push
mov
sahf
xchg
mov
mov
cmp
cmp
jbe
pop
addr16
jg
std
orl
cli
push
fidivl
push
mov
nop
nop
scas
mov
xor
cmp
xor
pop
push
push
dec
adc
jle
fildll
repz
jb
loop
xor
pop
int
push
addb
out
push
jb
pop
call
sbb
jbe
cli
data16
fimuls
xchg
popa
addr16
cmp
out
pop
xchg
pop
lds
push
mov
repnz
push
popa
mov
daa
mov
test
inc
push
andl
xchg
push
inc
push
orl
mov
sub
into
addr16
push
pop
icebp
dec
jge
outsb
cmp
jle
or
push
outsb
xlat
mov
shlb
stc
bound
dec
pop
ss
js
push
xchg
inc
xchg
clc
in
pop
in
repnz
push
je
push
lds
movsb
mov
fadds
mov
pop
dec
addr16
xor
jno
jne
in
cmp
pop
inc
push
sbb
cmp
push
add
xchg
jb
sbb
sbb
ret
lret
out
jl
rcrl
or
cmp
loopne
pop
xchg
push
fldl
decl
shlb
ja
inc
xor
lds
lcall
mov
xor
subb
lcall
shl
ret
sahf
outsb
pop
push
mov
mov
xchg
bnd
xor
push
jp
ret
inc
dec
jg
cmp
push
repnz
xchg
fsubrp
pop
or
lock
push
dec
cmp
push
lock
push
sub
ss
aas
add
mov
rcrl
sbb
cs
xchg
push
and
push
mov
add
add
aas
pusha
inc
ror
imul
mov
push
push
xchg
ret
fadds
mov
or
mov
cwtl
out
and
cmpsl
inc
mov
xor
xor
std
out
pusha
jnp
jg
stc
sub
fists
lret
imulb
cmpl
test
fs
or
jbe
movsb
xor
pop
pop
out
ja
imul
dec
loop
xor
int
je
inc
stc
push
mov
dec
mov
push
andl
inc
ret
notb
mov
xor
inc
xchg
insl
mov
mov
inc
cld
out
adc
adc
and
dec
divl
add
pop
imul
jae
fistps
mov
push
pop
dec
mov
imul
loopne
push
outsl
outsl
in
jo
bound
in
iret
mov
inc
sbb
enter
dec
out
loopne
rolb
insb
outsb
fcoms
push
jg
insb
roll
sub
push
cwtl
imul
pop
push
cmp
pop
lea
test
ljmp
adc
xor
in
ss
sbb
mov
cmp
insb
faddl
cld
ljmp
xlat
cmc
sbb
addr16
out
aas
out
jo
js
mov
loop
xor
pop
cmp
mov
adc
ret
cwtl
and
push
cmp
and
or
xchg
xchg
insl
or
je
fs
int
repnz
cmc
push
mov
mov
in
in
icebp
xchg
mov
js
add
adc
adc
sbbl
std
pusha
mov
arpl
sub
outsl
cmp
push
mulb
add
pop
pop
jnp
jg
mov
fbld
outsl
addb
enter
call
mov
sti
add
aam
jg
xchg
cli
in
dec
jns
xchg
scas
loopne
ja
loope
arpl
test
test
cld
inc
and
repnz
ljmp
push
mov
js
out
sbb
sub
mov
cmp
lea
jae
mov
aaa
xchg
or
mov
imul
rorl
or
test
stc
fstps
insb
jmp
adc
outsl
stc
test
cs
adc
mov
sti
add
cwtl
dec
mov
bound
xor
ds
test
cmp
cmp
test
adc
push
mov
push
arpl
cli
adc
push
inc
sub
lret
loope
bound
push
sbb
and
ret
dec
das
mov
jo
jo
sub
jo
pop
xchg
insb
xor
xchg
pop
and
imul
imulb
xchg
and
and
xchg
xchg
insl
fsubrl
mov
adc
fistpll
pop
dec
icebp
jmp
and
jnp
les
add
mov
dec
sub
adc
in
icebp
dec
mov
push
lahf
std
add
lcall
xchg
cmp
rcrb
jnp
in
loop
jge
or
cmp
pop
jp
popf
lock
add
lods
lahf
mov
add
push
xchg
cmc
adc
or
imull
inc
dec
push
test
cltd
scas
scas
lahf
cmpl
add
xor
lds
jl
push
mov
nop
test
shl
dec
lcall
das
int
ljmp
cwtl
bound
push
mov
jbe
arpl
xor
fcoml
popa
bound
xlat
je
stc
cltd
imulb
sub
loopne
xor
xchg
sbb
mov
pop
xchg
popw
xlat
jmp
es
decb
jbe
lahf
sahf
push
fdivr
testl
test
mov
mov
rorl
and
ljmp
jb
dec
dec
jge
lcall
inc
aaa
push
cwtl
cs
enter
shrb
mov
arpl
xchg
faddl
outsb
sub
xchg
or
pop
ret
and
cwtl
jl
jge
lcall
outsl
idivl
dec
sbb
daa
sti
jae
test
mov
loope
xor
mov
sbb
rorb
ds
xor
sub
jns
mov
sbb
shll
hlt
out
lahf
dec
add
push
mov
or
sbb
mov
push
ret
jl
xor
idivl
sbb
xchg
inc
in
lcall
clc
insb
int3
repnz
inc
mov
fdivrp
add
ror
dec
push
enter
std
clc
jae
jae
mov
pop
xchg
pop
ss
pop
pop
scas
lahf
out
outsl
xor
stos
push
pop
push
add
xchg
incb
jae
or
daa
ljmp
lret
push
mov
jo
lcall
jl
imul
push
push
rcrl
test
test
xorb
mov
sub
push
daa
and
pop
xor
pop
ret
push
mov
and
mov
cmp
sbb
hlt
scas
pop
lahf
ret
outsb
rcrl
mov
fiadds
neg
or
fdiv
jle
cmc
push
pop
jo
into
sub
add
ret
jp
dec
mov
std
movsb
les
popa
xor
lods
mov
jle
xchg
add
jb
mov
xchg
jo
sub
sub
bound
out
dec
mov
out
cmp
call
ja
cmc
adc
icebp
add
ds
data16
push
insb
mov
xor
xchg
push
ss
cmc
vmwrite
push
jo
mov
test
or
js
sub
ss
sbb
outsb
xchg
ss
pusha
inc
jp
pop
push
mov
add
cmp
mov
push
dec
fbstp
jae
xor
sub
cmp
xor
fs
push
ret
mov
push
notl
mull
scas
xchg
mov
repnz
aaa
sub
jne
ja
test
mov
mov
xor
jg
add
sahf
mov
mov
add
jg
mov
and
mov
pop
pop
sbb
xlat
outsb
cmp
jnp
icebp
mov
xchg
inc
xchg
jge
push
add
xchg
cmc
inc
add
push
icebp
and
dec
add
insl
adcb
xor
sub
jmp
stc
movsl
cmpsl
mov
and
add
es
jns
pop
lea
int
xor
and
bound
inc
xchg
ret
jbe
inc
inc
loop
mov
cmp
xchg
adc
inc
subb
leave
cmp
or
clc
hlt
sti
ja
andb
push
movsb
jbe
ret
mov
popf
pusha
in
clc
outsb
jp
aad
push
cmpsb
lret
cmp
cmp
push
js
xchg
sub
repnz
clc
data16
inc
outsb
push
cmp
jp
popa
inc
fisubl
mov
popa
movsl
jl
jg
cmc
stos
je
cmc
push
push
or
jp
xlat
push
push
xor
push
xchg
bound
jge
push
push
push
push
sbb
and
pop
mov
pushf
lcall
vpshufd
xor
cli
outsl
or
jo
push
cltd
xchg
dec
clc
bound
or
cmp
cmp
movsb
cmp
add
adc
mov
cmp
dec
inc
lds
cmpsb
outsb
leave
pusha
xor
bound
xorb
sub
es
dec
add
cmp
outsb
pop
data16
mov
sub
gs
sub
cli
daa
mov
sbb
shlb
inc
cmpb
cmova
mov
sub
xchg
mov
sub
inc
mov
test
movaps
dec
lcall
test
cmp
imul
jae
testl
push
push
cmp
adc
pop
pop
in
sti
xor
jg
jbe
nop
push
outsl
scas
mov
push
testl
testl
sub
jae
cs
int
xor
imul
psubb
gs
push
mov
pop
lea
dec
adc
jo
repz
aam
sti
pop
jae
subl
mov
jne
xorb
repnz
mov
fsubs
mov
decb
clc
xor
inc
jge
and
cmp
add
add
jo
cs
stos
lods
cmc
dec
or
lock
or
xlat
lcall
push
mov
mov
inc
cmp
cmp
jnp
lods
test
es
nop
push
jno
and
jle
lea
loop
jg
sahf
lods
mov
lcall
inc
inc
sbbl
and
mov
jbe
cmp
addr16
outsb
add
mov
xor
jle
push
cwtl
mov
test
fistl
xchg
pop
jp
xor
sbb
je
cmp
dec
mov
inc
adc
imul
or
inc
fistpl
add
push
mov
inc
sbb
push
jne
push
cmpb
jle
pop
mov
imul
sub
test
and
cli
mov
inc
and
pop
xor
push
cs
jl
divl
add
or
imul
cmp
jnp
mov
outsb
or
xor
xor
sub
push
pusha
or
xchg
add
add
add
or
movsl
push
cld
mov
rcr
shrb
adc
subb
push
cmp
notl
push
popa
adc
rorl
sub
push
xor
mov
mov
pop
aaa
pop
int3
mov
ret
jae
outsl
mov
or
repz
jae
mov
repnz
inc
mov
inc
cli
in
mov
movsb
addb
neg
stos
mov
sub
dec
scas
pop
es
jle
inc
shr
xchg
out
fdivr
cmp
shrb
xor
int3
inc
push
outsb
sahf
mov
jp
push
in
pop
mov
push
ret
loop
xchg
fcomip
dec
scas
sbb
push
pop
cmpsb
repnz
mov
sub
cmc
in
pop
mov
addr16
sbb
pusha
jg
lods
cmc
xor
mov
and
push
cmp
cmp
push
cli
insb
std
sub
push
push
inc
cmp
cmp
ja
or
jg
push
mov
cmp
mov
int
mov
addr16
jge
pop
outsb
jg
icebp
jo
jb
cmc
adcl
cmp
js
add
icebp
mov
outsb
fsts
mov
cmp
jnp
test
mov
std
sarb
pop
roll
es
std
mov
adc
push
imul
jbe
loope
xchg
insl
jb
pop
insl
add
pop
pusha
ss
mov
pusha
repz
repnz
mov
cmpsb
sarl
daa
jg
nop
pop
add
lods
adc
push
pop
inc
js
inc
sti
repnz
bnd
jo
mov
fnstcw
frstor
cmp
push
sbb
leave
movsl
add
push
or
cmc
sbb
add
fistpll
xchg
push
stos
push
fistpll
pushf
cmp
es
stc
sub
dec
push
sbb
cld
mov
movsl
mov
icebp
add
xchg
lret
jae
movb
mov
jg
and
xor
dec
pop
cltd
jmp
decb
mov
add
adc
add
and
lock
sub
pop
add
call
sbb
cmp
cmp
int
push
aaa
xchg
add
mov
cmovb
popf
cmp
stos
mov
xor
xor
test
std
sbb
lss
lret
xchg
push
lods
and
mov
pop
xor
lcall
pop
out
data16
cmc
vmread
add
inc
mov
add
jnp
subb
pop
mov
or
mov
and
and
mov
jbe
insb
data16
int
loop
xchg
or
test
cmc
lds
sbb
jbe
lods
in
jp
test
jmp
inc
or
jo
inc
mov
out
ss
sarl
xor
push
xor
inc
inc
cli
jecxz
jo
jg
xchg
loopne
sbb
inc
imul
jmp
les
inc
clc
sbb
xchg
xor
icebp
cmpsb
xorb
lcall
cmp
push
bound
icebp
shll
dec
mov
and
dec
arpl
mov
lock
xor
outsl
scas
inc
xlat
jmp
movsl
out
mulb
cmpsl
js
inc
lods
add
and
mov
sub
and
cwtl
in
inc
inc
mov
hlt
mov
cltd
push
pop
dec
repz
cltd
ljmp
push
pop
mov
jne
sbb
test
dec
cmp
sbb
mov
inc
or
push
mov
inc
push
sub
popf
and
into
push
inc
xchg
xor
fmull
insb
adcb
int
loop
data16
lds
mov
frstor
mov
add
cmp
aas
xchg
xor
add
jg
xor
dec
cmovns
add
xchg
lea
out
pusha
arpl
cs
dec
push
mov
and
xor
rcll
das
mov
sbb
cli
ja
rorb
mov
int3
shll
mov
adc
add
or
cmpsl
popa
pop
pop
cltd
aaa
jl
mov
sub
ljmp
pop
xchg
pushf
push
push
add
sarl
outsb
xor
cli
inc
push
loopne
andl
test
cs
mov
inc
pop
dec
xlat
rclb
push
dec
mov
or
fmuls
mov
cmp
jl
xor
loop
jbe
mov
or
xchg
and
subl
jo
and
fnsave
mov
fwait
mov
dec
nop
loopne
test
cmc
adc
mov
roll
sub
aaa
pop
js
in
adc
ret
outsl
mov
xor
mov
xor
mov
mov
jne
mov
push
in
or
test
cwtl
add
xchg
dec
cmc
cmp
lock
inc
or
mov
mov
mov
cltd
inc
inc
mov
add
mov
fisubl
jne
rcl
cmpsb
rorl
mov
in
fstp
jo
lods
sahf
pop
xchg
js
das
or
inc
jno
aad
in
push
mov
pop
dec
mov
adc
adc
dec
test
inc
movsb
or
test
repnz
aas
fs
and
pushf
jns
aas
incl
cmc
pop
xor
test
mov
xchg
add
push
jne
mov
mov
sub
in
inc
roll
lret
mov
jo
popa
inc
cmp
pop
mov
ljmp
or
fwait
push
push
sar
mov
fdivrl
orl
movsb
add
lret
lcall
rorb
jb
stc
lea
enter
pop
aad
in
pop
mov
push
xor
ret
stos
xor
sbb
cmp
jge
rcrl
cmp
mov
mov
testl
xor
in
sub
scas
into
pushaw
push
jne
jbe
popa
fwait
aas
mov
jns
outsl
faddl
mov
sbb
test
pop
xor
cmp
cmp
dec
dec
outsb
addl
std
mov
cmc
aaa
push
pop
jmp
xchg
and
outsb
ds
sbb
insb
pushl
data16
add
sbbl
popa
aaa
sub
pop
sub
loopne
or
mov
imul
aas
je
xor
jb
push
add
clc
ds
lret
xchg
ret
cmp
xor
push
xchg
mov
adc
insb
cs
arpl
push
out
and
push
pushf
jno
out
stos
pop
mov
mov
loopne
jecxz
mov
test
and
inc
jg
mov
inc
mov
pushf
xor
add
leave
cmc
push
sbb
pop
pop
or
sub
cwtl
add
fstp
icebp
mov
cmp
rolb
aaa
push
lods
shll
movsl
fists
fcomps
outsb
mov
xchg
shrb
cmp
sub
sahf
push
sub
sub
dec
stos
sub
in
rol
cmp
cs
sub
lcall
repnz
outsl
xor
add
inc
xchg
loop
cli
cmp
clc
dec
stc
cltd
sub
cli
popf
add
ret
ret
sbb
data16
push
les
dec
adc
pop
lock
add
pusha
repnz
shrl
lds
mov
in
ds
mov
sub
es
orb
xchg
arpl
les
xor
js
pusha
add
test
std
and
popf
push
loop
fmuls
cmp
pop
xchg
pop
lods
in
lret
insb
repnz
int3
mov
xor
push
xchg
imul
xchg
mov
mov
testl
jae
sahf
lret
mov
popf
shlb
in
mov
push
andl
or
mov
xor
sub
dec
or
int3
outsb
pop
loopne
push
jp
pop
hlt
mov
adc
das
bnd
push
test
or
dec
outsl
lds
cmp
pop
ss
add
push
mov
mov
mov
mov
jp
inc
and
outsl
mov
push
or
xchg
xor
pop
stc
push
jmp
movsl
and
rclb
in
xor
add
push
or
and
xchg
adc
out
cltd
popa
in
xchg
mov
mov
mov
outsl
jae
push
es
testl
inc
das
dec
outsl
jp
cmp
outsb
inc
push
mov
lds
inc
ret
jno
jb
popa
imul
push
lods
enter
dec
pop
push
les
mov
inc
xor
ret
xor
lret
mov
pop
pop
cld
cmp
push
ret
mov
js
mov
lret
or
and
jns
out
and
test
mov
and
std
jnp
pushf
jl
cmp
inc
call
add
dec
lods
xchg
stc
inc
jl
imul
rcrb
dec
cmp
or
and
jb
lret
jp,pt
jg
mov
xchg
push
dec
cli
mov
mov
jae
add
cs
cltd
test
and
mov
inc
pop
sti
cmp
rdtsc
push
outsb
dec
aaa
mov
ss
cmp
in
and
mov
icebp
cmp
push
cmp
loope
sub
cmp
lret
inc
fstl
popf
jo
dec
mov
add
loop
popf
and
pop
movsl
imul
aam
mov
cmp
cmp
lret
dec
push
out
jne
frstor
rclb
inc
shll
mov
add
out
xchg
mov
mov
dec
or
xor
push
mov
sbb
int
dec
out
push
pop
mov
sub
mov
iretw
inc
in
imul
cmp
mov
cmp
stc
lahf
testb
rcr
sub
jae
je
jae
inc
test
push
repnz
cmp
xchg
dec
mov
ds
ljmp
fstp
sbb
dec
pop
cli
pop
inc
stc
push
jnp
adcl
push
mov
stc
scas
jno,pn
sub
enter
cmc
jle
cmpsb
pop
pop
pop
mov
mov
aas
ds
xor
or
xchg
jb
stos
adc
push
loope
cmp
mov
repz
jo
adc
xor
pop
push
movlps
xchg
jae
sbb
das
and
jno
dec
fsubrl
loop
add
mov
out
and
jae
add
sbb
test
or
ret
outsb
add
in
sbb
clc
cltd
dec
dec
inc
rcrl
js
pop
mov
jbe
ret
sub
cli
js
outsb
jmp
sti
lea
or
stos
fs
push
insb
in
push
pop
jp
add
cmp
inc
cmc
dec
add
dec
pop
dec
xchg
aad
stc
outsb
lock
pop
dec
test
jle
xchg
jae
test
cs
out
inc
popa
aas
cwtl
mov
mov
cli
cmp
stos
cmp
pop
and
addb
xchg
dec
mov
sub
lret
pusha
cmp
fidivl
sub
loope
ficoml
data16
sub
testl
jb
pop
xor
cwtl
pop
push
pusha
pop
pop
bound
aas
inc
cmp
test
dec
and
dec
push
inc
and
jae
call
lock
jns
jg
stos
orb
inc
testb
inc
add
push
mov
mov
push
mov
cmp
sbb
lcall
pusha
push
jne
cmc
jle
imul
push
sbb
jb
jl
shrb
fwait
push
mov
push
aad
test
push
xor
jg
notl
inc
and
jl
xchg
fdivrp
jl
enter
psubd
aad
out
push
mov
jne
leave
jecxz
inc
lods
out
mov
adc
enter
adc
inc
and
shl
enter
mov
dec
outsb
js
inc
sbb
and
mov
mov
movsl
das
push
call
sub
jb
jl
bound
mov
out
or
jb
add
pop
arpl
inc
sbb
dec
lahf
cmpl
rcrb
sub
jb
inc
mov
jp
movsl
pop
notl
ja
bound
ljmp
jmp
dec
add
ss
mov
add
sbb
hlt
jns
in
push
pop
pop
jge
pop
incl
in
mov
and
add
sbb
aad
push
and
movsl
lret
jl
stos
push
push
cmc
mov
mov
xor
icebp
push
push
outsb
ljmp
pop
xor
leave
or
jle
outsb
jge
ljmp
inc
lea
mov
loopne
push
dec
jno
out
add
sbb
xchg
pop
stc
sub
push
loop
xchg
mov
push
xor
roll
add
push
sbb
and
add
mov
sub
dec
inc
clc
shll
dec
jp
mov
insb
cmp
sti
je
jbe
jg
xchg
xor
pushf
nop
xchg
jle
cmp
and
outsb
ja
pop
xchg
and
and
cmp
jl
push
add
loop
insb
loopne
movsb
pshufw
adc
push
jnp
cli
sbbl
xchg
jb
jns
cltd
adc
jp
mov
mov
inc
adc
lret
xor
dec
rol
pop
cmpsl
xchg
sbb
mov
mov
cltd
out
fs
iret
add
mov
cmpsb
ds
nop
xchg
xor
xchg
add
loopne
faddp
lcall
mov
pop
fildll
loop
call
cmp
pop
sahf
cmpsl
sarl
in
push
out
repnz
inc
bound
iret
inc
sbb
dec
cmp
jbe
lcall
call
lcall
ds
lods
aaa
xchg
out
cmp
cli
jl
jo
outsb
outsb
add
jae
cmp
jo
push
ljmp
stos
jnp
jnp
out
dec
push
ljmp
mov
xchg
fwait
cs
enter
test
cmp
sbb
push
mov
jo
arpl
out
outsl
pop
sub
inc
cmpb
mov
mov
push
xor
lock
xchg
roll
roll
jb
in
mov
jle
push
iret
and
jno
add
das
mov
xor
call
nop
pop
and
lods
enter
xchg
pop
and
aad
jae
xor
jns
jo
jno
jo
outsl
scas
and
mov
jo
and
js
jl
push
scas
jne
xchg
jb
cmp
inc
jnp
dec
push
rorl
xor
or
mov
loop
popa
ret
xchg
movsb
sub
add
cltd
or
mov
adc
aad
bound
jmp
test
jo
jo
mov
add
push
stos
pop
gs
das
jne
int3
jl
mov
push
mov
jns
jle
mov
pusha
ds
pop
bound
add
aaa
lods
cmp
mov
dec
divl
and
imul
or
insb
test
repnz
filds
push
push
sub
cmc
outsb
inc
sti
lods
mov
bnd
push
mov
lea
push
js
cld
mov
addr16
test
jl
fldcw
notl
test
dec
mov
std
pop
lret
mov
xor
lcall
jp
jo
and
xor
dec
clc
ljmp
push
cmp
loop
dec
pop
ret
sbb
repnz
lret
jecxz
pop
sub
push
imul
jmp
rolb
cmp
scas
xchg
shlb
sbb
cmp
aad
add
bound
psraw
jp
sub
xor
outsb
aad
mov
mov
lock
jns
jae
cmc
mov
xchg
test
lds
xchg
fistpl
xor
push
pop
nop
jno
add
outsb
push
cli
sbb
push
add
cmpb
jb
bound
cltd
icebp
xchg
jns
xchg
jno
mov
outsb
mov
push
jbe
jl
jle
sti
push
mov
mov
or
cmp
mov
insl
pop
movsb
addr16
jno
test
sbb
lea
cs
push
or
subb
and
stc
jl
lods
push
mov
imull
stc
test
bound
xor
in
xor
addr16
mov
outsl
or
ljmp
daa
cmp
and
notl
sbbl
sbb
sbb
and
lret
and
xchg
jnp
pop
fwait
outsl
dec
xchg
mov
sub
cmp
cmp
aas
and
bound
xor
inc
xor
xchg
sbb
inc
adcb
mov
aas
mov
popf
jbe
pop
pop
push
xor
mov
push
cmp
sbb
jo
sub
mov
call
mov
iret
test
fiaddl
in
mov
rcl
push
idivb
popa
push
jmp
mov
sub
mov
dec
imul
bound
and
out
ss
jp
adc
fnstcw
popf
xchg
mov
push
xor
stos
jns
test
jl
jae
sbb
sub
loop
ret
aas
imul
shrb
push
sbb
inc
inc
fnsave
outsb
movsb
mov
test
inc
addr16
daa
rorb
int3
push
or
push
shlb
push
or
movsl
stos
popf
jmp
fisubl
jno
lods
push
imul
dec
lahf
call
lea
inc
fldcw
das
push
outsb
lahf
sarl
bound
mov
xor
clc
loop
shrb
push
cmp
jmp
in
loope
add
and
icebp
outsb
or
adc
sti
inc
jne
loope
icebp
cltd
sub
xlat
cltd
fcomps
int
push
push
aam
mov
cltd
js
cs
adc
lock
out
pop
gs
jne
sub
jb
cld
dec
mov
push
outsl
push
sub
nop
add
je
dec
mov
pop
dec
scas
rcll
gs
cmp
int3
dec
pop
inc
mov
or
mov
jmp
jns
push
icebp
idivl
outsl
jg
and
into
push
jae
jl
lret
dec
or
shl
ret
mov
fsub
xlat
fists
jbe
jle
jl
daa
inc
mov
bound
cs
shr
enter
pop
sub
cs
mov
adc
sub
adc
fstpl
lcall
jle,pn
outsl
pop
idiv
outsb
jl
cli
imul
inc
cmp
jnp
rol
nop
or
bound
jl
sbbl
sub
icebp
add
pop
lcall
stos
popa
sub
add
adc
cmp
mov
or
clc
xor
repnz
fistpl
loop
adc
cld
push
fidivl
leave
sbb
push
into
outsb
aam
movsl
xor
adc
cmpsb
and
enter
cmpsb
mov
ss
test
jle
rcl
or
jns
mov
or
push
dec
imul
sarb
outsb
cmc
addr16
or
ja
pusha
ss
adc
jbe
xor
in
cmpsl
push
push
shrl
ret
xor
mov
jl
inc
cltd
xor
stc
repz
mov
ss
inc
inc
inc
loop
cmp
jg
jl
divl
inc
inc
arpl
pop
cltd
shl
bnd
jl
lahf
cmc
push
insl
jle
jg
notl
add
je
sbb
push
ret
mov
mov
pop
sti
loop
lds
in
xor
push
bound
mov
push
arpl
or
push
jl
xchg
sti
cmp
mov
cltd
idivb
or
std
lea
jg
jl
add
pop
lea
push
push
push
push
fsubrp
pop
xchg
popa
push
mov
mov
ret
add
ret
push
and
or
push
ret
lea
lods
inc
dec
jle
in
cmp
rolb
xorb
xchg
adc
outsl
jns
ljmp
inc
mov
xchg
js
out
push
imul
test
mov
cmp
lock
rorl
push
leave
mov
xchg
cmp
fidivrs
mov
std
mov
repz
test
ds
dec
push
inc
int
push
ficoms
xor
movsl
mov
mov
sub
add
xor
mov
sarb
inc
push
pop
ja
push
and
pusha
les
insb
push
popa
scas
jb
inc
loopne
jnp
pop
xor
xchg
bound
in
sbb
push
lahf
sub
cmp
pop
push
mov
jl
in
mov
js
jae
mov
inc
xchg
cltd
pushf
jle
rol
outsb
push
pop
sahf
ret
lahf
addb
lahf
loopne
xchg
push
mov
dec
sbb
pop
nop
xor
dec
push
loope
in
ljmp
enter
fstp
jle
mull
push
movsl
dec
aad
or
in
stc
repnz
push
jle
mov
dec
movsl
out
shlb
test
xchg
pop
pop
and
jae
mov
fs
push
xchg
dec
add
cmp
jbe
sub
and
add
in
cmp
lock
cwtl
push
mov
ja
loop
out
cwtl
outsl
mov
pop
xor
cwtl
add
cs
lods
mov
lret
cmc
mov
sub
or
jl
rcrl
inc
jle
cld
inc
cmpb
sbb
incb
cmp
std
lea
sahf
out
xchg
dec
outsb
jnp
arpl
xchg
jo
pop
or
inc
subl
mov
jl
shrb
in
fdivrl
mov
mov
mov
arpl
sub
lods
inc
mov
dec
bound
lock
and
pop
lcall
out
and
enter
cwtl
bound
sub
sti
mov
sarl
jno
aam
into
cmpb
shlb
jne
js
stc
dec
loope
xchg
hlt
pushf
lods
pusha
addr16
jae
popa
xor
xchg
jecxz
jnp
cs
cmc
or
adc
cmp
pop
jmp
dec
sub
adc
cltd
test
lea
movsl
data16
sti
mov
enter
cmp
mov
in
xor
sub
sub
nop
fimuls
lock
fisubrs
test
data16
pop
test
pop
xor
mov
pop
jbe
inc
inc
jp
add
in
outsb
aad
mov
mov
inc
mov
inc
int
pop
cmp
repnz
mov
pop
push
sbbl
cmp
sub
sub
jns
icebp
rolb
inc
push
flds
ljmp
addl
jo
js
fidivs
xchg
pop
jle
sub
les
orl
rorl
push
inc
mov
fisttpll
adc
pop
inc
addl
unpcklps
jle
outsl
dec
mov
mov
cwtl
jg
outsl
adc
nop
jae
fnstsw
in
repnz
cmpl
jle
pop
cmp
stos
pop
daa
pop
jns
jge
dec
int3
pop
jo
jg
push
inc
jle
mov
outsl
jb
stc
add
jle
or
aad
loop
xor
mov
mov
sub
stos
leave
inc
pop
xor
notl
cs
cmp
jl
ja
pop
in
fists
sub
dec
xor
push
or
adc
cmp
ss
sbb
push
outsl
hlt
cld
sbbl
mov
daa
inc
hlt
sbb
jl
repz
xchg
addb
aad
jb
mov
cmp
jae
xor
jl
lahf
insl
sbb
lea
enter
aas
insl
push
pop
aad
testl
js
lock
xor
sar
jp
mov
outsb
insb
iret
movsl
mov
jecxz
gs
dec
jnp
es
jp
jecxz
push
sbbb
push
mov
outsb
jo
cltd
in
jnp
jo
xchg
or
or
mov
mov
push
outsl
push
pusha
ss
xchg
ljmp
sbb
in
rcpps
xchg
jnp
pusha
xor
or
test
sbb
xor
stos
ficoml
add
jae
test
jl
fwait
mov
fsubrl
pop
incl
mov
push
in
sbb
jle
jge
js
jb
repz
xor
xchg
outsb
add
jns
jbe
pop
pop
std
pop
in
pop
lods
outsb
repz
pusha
sub
cmp
test
test
je
dec
push
call
sub
and
inc
in
add
paddusw
lcall
sbb
test
mov
mov
jb
jbe
jp
dec
ret
enter
lcall
mov
pop
lods
cmp
cmp
je
lcall
mov
in
xor
out
lea
stc
imul
movsb
sub
fstpl
ret
fists
mov
cmp
int
and
in
jb
inc
add
push
fwait
test
and
je
cmc
aas
add
shr
xorl
ljmp
jle
push
and
mov
movsl
icebp
loop
mov
loop
cltd
pop
sub
jb
sbb
movsl
and
mov
bound
shl
int
dec
jno
jbe
outsl
dec
mov
inc
jl,pt
inc
jb
into
dec
xchg
mov
test
ss
dec
pusha
inc
in
adc
jl
inc
jno
pop
int3
mov
lods
imul
in
xchg
xor
imul
fistps
sub
fwait
push
subb
in
loop
push
mov
bound
dec
dec
push
sub
lcall
test
add
dec
das
jecxz
pop
imulb
dec
inc
or
push
dec
sub
pop
insl
lcall
leave
hlt
filds
inc
cmc
outsb
sub
adc
xor
mov
inc
jg
xchg
add
fidivl
pop
xchg
in
xor
lea
add
xchg
pop
andb
jp
jb
lahf
adc
ds
out
jmp
enter
jb
ljmp
outsl
outsb
imul
call
or
ret
dec
jno
xor
iret
cmp
js
loopne
inc
test
insl
cmpsb
pusha
dec
jno
je
cmp
jl
mov
adcl
decb
cld
clc
jne
out
xor
add
sub
xor
in
int
mov
mov
in
push
nop
dec
xchg
inc
insl
sub
jb
dec
scas
jecxz
push
mov
sahf
add
std
gs
call
cmp
pop
outsl
dec
repnz
mov
out
lcall
pop
dec
stos
in
jnp
movq
dec
js
sub
push
push
in
ljmp
xchg
mov
fcomps
and
subb
jbe
divl
jl
mov
in
stos
mov
adc
stc
pop
cmpb
frstor
cmp
fistps
mov
out
int
xor
cmp
scas
andb
iret
jbe
inc
repz
shrb
cmc
sub
std
and
mov
div
ficompl
negl
insb
inc
dec
xlat
mov
idiv
push
and
push
adc
testb
aas
xor
mov
jns
sahf
mov
ljmp
je
aaa
fsts
sub
js
pop
jae
outsb
inc
cmp
mov
jg
inc
fldz
clc
clc
js
mov
inc
sahf
mov
mov
lcall
mov
pop
pop
lock
sub
jb
rorb
rcll
jmp
rep
std
xchg
xchg
dec
mov
jae
andl
call
add
inc
jbe
sub
mulb
hlt
add
sub
dec
outsb
movl
sahf
dec
sbb
inc
adc
mov
lcall
incb
decb
add
insl
and
aad
sarb
movsb
or
and
in
push
ret
decl
add
inc
popf
jge
lret
push
xchg
push
adc
mov
data16
jge
jne
push
sarb
dec
push
dec
pop
xchg
ficomps
dec
lods
test
sub
fs
rcl
mov
test
pusha
jns
in
ret
insb
outsl
jb
sbb
xchg
sahf
xor
mov
sbb
mov
out
fnsave
sbb
insb
push
and
les
push
jle
loopne
scas
push
dec
test
int
xchg
bound
fisubrl
push
push
leave
or
daa
and
fdivs
shll
imulb
xchg
xor
js
insb
mov
inc
mov
add
cs
jecxz
repnz
ror
scas
cmp
mov
pop
adc
dec
pushf
xchg
in
xor
pop
pop
or
xor
loop
ret
pusha
and
icebp
out
hlt
cmp
popa
dec
xor
inc
sbb
dec
js
cmc
hlt
mov
lcall
jb
sub
push
sahf
inc
mov
hlt
mov
shll
lret
jecxz
shlb
loop
rclb
xchg
jb
inc
lret
dec
fisubs
bound
inc
rcr
pop
xor
mov
cmc
rorb
stos
xchg
xchg
pop
lahf
dec
and
movsl
add
hlt
ss
xchg
out
mov
out
jp
repz
sbb
rcpps
outsb
bound
and
xor
jns
cli
pop
cmc
in
xor
mull
xor
xchg
jnp
push
mov
idivb
mov
jmp
pop
jnp
lods
sbb
and
pop
es
aaa
rcrb
jle
xorl
add
lcall
mov
push
sub
sub
mov
stc
loope
add
cmc
push
jae
inc
inc
stos
xor
int3
mov
sahf
mov
fisttpl
mov
hlt
dec
lcall
jb
and
cld
fucomp
or
cmp
push
xor
push
jae
addps
dec
out
out
std
jp
mov
inc
das
popa
cld
mov
pcmpeqd
xor
dec
jmp
pop
jae
test
dec
jle
jns
mov
sbb
mov
mov
cmc
insl
sarl
out
jecxz
cltd
jno
lcall
imul
cmpsb
and
jb
popf
aas
jle
mov
jbe
icebp
push
adc
xor
pusha
das
clc
outsb
sbb
add
pop
outsb
lcall
push
outsb
mov
or
mov
cmp
iret
das
adc
adc
cmp
sarb
inc
push
jae
sbb
push
mov
jmp
je
mov
repnz
jbe
fstpl
sbb
imul
push
notb
mov
inc
inc
xor
nop
add
enter
out
gs
mov
data16
pop
stos
mov
pop
jbe
jae
movsb
dec
aaa
sarb
push
insl
cmp
adc
and
idiv
xchg
out
sub
in
sbb
dec
cltd
adc
inc
mov
mov
mov
sahf
sbb
jp
sub
sub
mov
loop
jle
xchg
xor
lcall
cmpsb
lcall
flds
sub
mov
dec
and
jne
cmp
and
or
and
lea
ja
sub
shr
in
dec
xchg
cld
js
fidivl
inc
nop
imul
scas
inc
jne
daa
insl
cmp
bound
in
sub
das
sbb
and
fstps
inc
sbb
inc
je
mov
jge
cmp
sahf
cltd
mulb
inc
sbb
pusha
out
xor
jp
scas
test
mov
push
cmpsb
cmp
xchg
xchg
sub
adc
insl
pop
in
out
cmp
imul
out
mov
stc
jno
fs
es
inc
mov
bound
inc
xchg
sahf
xchg
subl
mov
cs
sahf
pop
sub
je
loop
pop
jb
cmp
test
shlb
sub
lods
cmp
sbb
mov
in
push
or
test
jbe
cli
push
cmpb
rcrl
outsb
testl
xchg
xor
and
shl
adc
je
sub
lock
or
sbb
fidivrl
fdivl
jns,pt
mov
dec
lret
lcall
push
mov
bnd
sti
loopne
addl
ljmp
mov
xor
loope
xor
lcall
mov
mov
xchg
inc
lods
pop
neg
jb
ja
xchg
sbbb
sub
xor
lock
mull
xor
mov
jp
fdivs
xor
int
fisttpll
inc
jp
inc
inc
pop
dec
mov
lods
fnstenv
lcall
outsb
jecxz
bound
mov
sahf
xchg
mov
cli
adc
mov
push
popa
push
scas
in
lcall
rol
out
jge
xor
popa
jbe
pop
sbb
cmp
pop
rclb
mov
loopne
xor
dec
mov
mov
sub
pop
nop
jecxz
dec
push
icebp
or
lock
jp
push
sub
into
pop
jb
test
test
and
mov
cmp
test
cmpsl
or
out
mov
pop
push
mov
cmpsb
js
push
data16
ds
xchg
jbe
mov
jae
sahf
xchg
clc
jbe
popa
lret
mov
jb
sub
add
jbe
pop
xor
jb
punpcklwd
push
dec
xchg
adc
xor
stos
jp
mov
daa
mov
bound
xchg
push
sarb
movsl
push
out
test
mov
iret
les
lea
mov
sbb
push
in
lock
loop
cwtl
push
xor
xor
fstpt
je
add
aas
lock
xchg
jbe
icebp
rorb
out
add
cmp
mov
mov
inc
fdivrs
push
jge
sub
pop
enter
popa
sahf
ds
push
popa
cmp
jne
test
mov
push
mov
cmc
xchg
jge
inc
xchg
mov
adc
mov
push
ss
mov
dec
mov
cs
push
and
lcall
cmpsb
cmc
pusha
sub
std
mov
ss
pop
inc
mov
cmp
icebp
sub
cmp
and
xor
loopne
stos
xor
int
pop
ds
dec
xchg
sbbl
adc
lahf
jb
loope
movsb
data16
jg
mov
push
lods
mov
mov
cmp
mov
mov
push
insl
mov
pusha
cmp
cmpsb
push
sub
ficompl
mov
dec
popa
outsb
cli
xchg
inc
push
or
sbbl
jns
cmp
icebp
jmp
cli
xchg
inc
jecxz
jl
dec
pop
insl
repnz
or
lods
jns
xor
cmp
pop
xor
inc
and
xchg
pop
xor
push
pop
inc
popa
jno
or
js
push
xor
jno
xchg
ss
clc
clc
sbb
int
aam
es
jl
xlat
pop
add
jmp
rcrl
nop
sbb
jge
fldl
mov
imul
xor
insl
push
jmp
addr16
inc
mov
std
dec
aas
xlat
add
cmc
movsl
stos
add
jne
xchg
jle
inc
xchg
int
jl
subb
mov
or
insb
jae
add
lea
and
jg
imul
dec
mov
sub
outsb
xor
imul
xor
add
cld
or
lds
pop
aas
jg
inc
lret
push
popa
jbe
bound
clc
inc
pop
outsb
pop
cltd
scas
push
sbb
inc
sbb
or
xchg
xor
popa
loope
jbe
xor
mov
in
and
inc
shll
mov
stc
imul
inc
sub
std
jbe,pt
push
ficoms
push
stc
push
mov
push
popa
lcall
jb
pop
mov
pop
ret
or
jg
lcall
les
cmp
lret
jge
xchg
fisttps
inc
and
cmp
in
jno
mov
fsubrs
outsb
sub
data16
das
xchg
imul
pop
loope
dec
aas
ret
mov
mov
inc
cmp
push
jg
jae
scas
add
xlat
jbe
in
mov
into
and
push
popa
movsl
cltd
enter
jmp
cwtl
insl
sahf
imul
mov
dec
mov
shlb
mov
jg
aad
testl
and
lret
nop
addl
inc
loopne
sub
sub
sti
mov
in
mov
xor
ret
sub
push
lret
hlt
jecxz
mov
es
push
push
push
in
scas
gs
push
dec
push
fimuls
push
std
cltd
xchg
push
outsb
mov
ss
aas
xor
xchg
dec
js
push
lock
int
imul
call
adc
sub
pusha
push
lret
adc
fdivrl
sbb
cmp
add
std
push
fwait
test
ret
mov
pusha
push
mov
movsb
jmp
addr16
sub
pop
testl
js
stos
and
xor
mov
add
arpl
mull
xor
jae
pop
imul
sub
add
jp
lcall
in
xchg
subb
mov
pusha
loop
mov
add
pop
pop
dec
sub
add
jle
sub
jp
mov
and
lcall
std
ja
mov
xchg
mov
dec
frstor
xor
negb
cli
xchg
and
stc
subl
push
push
repnz
cmp
std
cmp
mov
xor
adcb
push
lret
aas
ss
scas
adcl
mov
ret
push
in
sbbb
pop
cmp
rorl
jns
sbb
mov
inc
dec
pop
aas
dec
lahf
aas
dec
clc
push
cs
repnz
mov
lcall
mov
jle
scas
adc
and
mov
jns
into
jl
xor
sahf
inc
sbbl
and
inc
pop
or
cmpb
inc
jle
test
jecxz
jno
je
jg
lea
xlat
push
in
push
push
fwait
test
pop
in
xlat
repnz
aam
das
sar
jle
or
movsb
and
mov
mov
or
dec
sub
xchg
jl
cltd
xchg
xor
lock
add
xor
inc
pusha
cmpb
cmp
fwait
jp
add
es
ss
jge
dec
add
pusha
jg
jb
jle
cwtl
xchg
std
xor
ficoms
in
adc
xor
js
xchg
pop
mov
inc
mov
aas
test
test
sub
sub
pop
mov
bound
ds
stc
jo
push
xor
mov
jno
jns,pn
cmp
icebp
mov
xchg
cmpl
jno
addb
push
pusha
pop
xor
stc
out
rcrl
jne
dec
mov
pusha
ds
stc
scas
outsb
aam
xor
daa
cli
inc
push
lcall
sbb
in
lods
test
adc
orl
ffreep
adc
push
movsl
mov
or
repnz
push
mov
add
xor
inc
bound
outsb
mov
sub
jge
outsb
mov
xchg
pop
mov
pop
enter
in
loope
mov
loope
fidivrl
jge,pn
jb
cmpsb
inc
shll
out
pop
shlb
push
xor
dec
leave
sahf
jmp
cmp
mov
das
int
nop
popf
rep
sub
aas
lcall
mov
ja
pop
ds
push
cmc
pop
lret
stc
xor
imul
add
gs
fcmovnbe
ds
mov
pop
mov
scas
pop
notl
mov
push
inc
popa
mov
data16
xor
fstps
imul
adcb
mov
cltd
ret
and
pmaddwd
icebp
xor
orb
jno
rolb
imul
xor
cltd
in
pop
adc
mov
adc
and
enter
inc
mov
sub
pop
add
outsb
stos
push
je
insl
in
sbb
sub
or
in
sub
jns
mov
xor
das
jp
out
fisubs
ficoms
cltd
insb
lahf
pop
mov
xor
aad
adc
xor
jge
in
mov
fchs
mov
in
and
pushl
cmp
inc
stos
and
jns
popa
sbb
fmul
cwtl
dec
loop
mov
ret
cmpsb
in
mov
lret
and
add
cmp
inc
clc
gs
loopne
cmpb
repz
pop
mov
pop
pop
sbb
in
ret
aad
jb
in
push
jno
mov
and
and
jmp
popf
push
xor
jo
loope
cmp
lock
add
jb
xor
stos
push
jmp
mov
fnstenv
push
add
dec
add
ds
pop
movsl
mov
mov
jmp
fsubp
js
cmpb
addb
mov
xchg
lock
ret
ret
lret
mov
mov
bound
cli
ss
mov
les
add
test
cwtl
cmp
pop
dec
decb
mov
stos
mov
repnz
lcall
cmc
pop
sbb
xor
pop
xor
aam
rorl
pop
push
das
pop
or
ret
sub
push
shll
imul
ss
clc
je
jns
mov
cmp
shr
iret
xorb
flds
cmp
addl
xor
test
mov
inc
jo
cli
cmc
xor
scas
jl
add
adc
xchg
mov
insb
imul
pusha
jge
dec
mov
sbb
cmp
xor
jl
jb
movsb
jbe
mov
mov
bound
xor
pop
mov
xor
stos
jl
xchg
fs
push
adc
pop
inc
mov
or
xor
insl
incb
scas
imul
inc
ds
add
addl
push
btc
imul
jg
dec
cld
jp,pt
mov
cmp
pop
scas
gs
sub
aaa
jp,pt
stos
push
lcall
mov
stc
aam
xor
sub
mov
jecxz
je
scas
cmp
popw
sti
arpl
popa
mov
nop
bound
out
cmp
ret
xor
lcall
aas
jnp
jmp
and
cs
jle
mov
lea
dec
outsb
sub
sbb
xchg
outsb
mov
sub
rcrb
jle
rolb
and
inc
mov
adc
js
test
arpl
fisubrs
insb
ret
mov
and
inc
jb
lcall
xor
dec
out
je
repz
incl
sti
cli
shll
jo
testb
in
sbb
push
xchg
inc
imul
add
jbe
xor
cmc
lods
stc
data16
lds
shl
add
push
or
jns
repz
stc
jo
jnp
je
xor
out
inc
negl
rclb
gs
rclb
push
fbstp
jl
cmovp
jp
mov
lods
mov
mov
nop
data16
imul
cmpsb
repnz
xchg
push
sub
loopne
adc
shlb
push
loope
mov
cmc
jbe
dec
mov
jl
addb
repnz
repnz
jp
mov
inc
mov
stc
aam
fyl2xp1
in
jbe
insb
sub
adc
cmp
popa
sub
jge
clc
xor
dec
inc
pop
sbb
imul
cmpsl
mov
push
mov
mov
sbb
bound
jb
loope
jo
aam
movsb
jnp
add
or
dec
and
inc
sbb
and
pop
jg
divl
pop
fwait
je
addl
cmp
push
add
push
cmc
ds
and
out
call
or
fistpll
cmc
jecxz
mov
shl
insb
mov
es
jbe
js
jb
loope
sbbl
xchg
sbb
std
or
insb
test
std
and
lret
mov
inc
shr
cmpl
jecxz
aaa
add
xor
inc
lcall
ret
add
enter
xorb
inc
mov
push
ret
js
push
lret
sub
sbb
addr16
lcall
sub
xor
mov
inc
insl
outsb
ficoms
adc
cltd
push
and
in
add
das
mov
rclb
jecxz
ret
test
fists
frstor
lcall
cmc
int
push
sub
mov
mov
xchg
stc
add
jbe
pop
and
test
xor
mov
inc
xor
adc
pushf
ud2
cmp
ja
cmp
mov
push
mov
rorb
push
mov
jmp
jg
add
jns
ds
inc
inc
and
jp
jge
xor
aaa
leave
jbe
enter
and
outsl
jge
out
mov
add
jle
add
cmp
lods
jno
jbe
rclb
outsb
xor
xor
push
inc
pop
pop
dec
shrl
push
leave
pop
mov
in
pop
dec
jne
and
clc
stos
cli
js
mov
js
sbb
pushf
stc
fildll
pop
pop
sbb
sti
xchg
clc
xor
lods
cmc
cmp
jp
push
cmovo
popa
push
fwait
xor
cmp
hlt
mov
sbb
add
sbb
in
cmp
xchg
mov
lea
cmpsb
repnz
mov
sub
ret
testb
jmp
jb
mov
and
pop
in
sub
aam
push
jl
inc
jl
push
sub
inc
enter
mov
clc
cmp
add
xchg
xor
lret
push
mov
push
mov
loop
lods
xchg
ljmp
pop
movsl
push
lock
enter
outsb
lret
addb
ja
orb
mov
add
pop
push
mov
shlb
cmp
sub
push
and
pop
ss
das
jg
movsl
std
inc
fnstsw
mov
je
paddw
or
pop
push
mov
jbe
pop
rcr
mov
out
lcall
inc
mov
inc
jbe
mov
jns
sbb
adc
imul
ljmp
movb
or
inc
and
or
pop
xor
stc
xchg
cmp
push
xchg
adc
sbb
aas
andl
aas
outsb
mov
jge
xchg
ss
es
xchg
cli
sub
pop
sub
rorl
xor
fsts
jmp
dec
fidivrs
ret
cs
je
not
enter
lret
pop
xchg
mov
cltd
jg
js
jl
fs
adc
icebp
mov
xchg
inc
stc
xchg
pop
or
testb
int
inc
mov
add
hlt
enter
outsb
mov
in
scas
arpl
cs
outsb
movsl
xchg
jb
xchg
mov
jne
pushw
psubd
mull
inc
ja
test
cmp
cld
push
cli
jle
mov
mov
or
pop
push
jle
dec
out
dec
push
cli
mov
stc
notb
int
push
fimull
pop
movsb
add
cmp
jno
sbb
movsb
addr16
sbb
xchg
in
sub
xlat
jae
cs
xor
out
push
shl
ja
lds
jg
and
push
imul
cmp
insl
or
pushl
mov
rorl
jg
fdiv
add
mov
xor
insb
sub
decb
xlat
pop
mov
loopne
mov
inc
sub
movsb
outsb
push
inc
mov
push
jns
inc
bound
insl
jmp
bound
insb
jecxz
pop
jo
sbb
shrd
dec
and
test
jnp
cltd
push
hlt
jae
xlat
pop
bound
add
add
push
dec
pusha
adcl
mov
inc
push
call
xchg
fiadds
push
dec
or
mov
add
sbb
aas
lock
inc
flds
add
cmc
pop
pop
fcmovnu
sub
jbe
and
out
push
lock
and
lea
xlat
jns
lods
imul
jp
adc
jle
and
adc
call
clc
jl
cmp
jmp
loope
sbbl
pop
out
jle
dec
popa
mov
push
insb
and
hlt
sub
repnz
pop
mov
and
daa
xchg
dec
mov
outsl
jl
sahf
cltd
sub
jae
mov
push
mov
lds
push
cmp
sub
add
mov
sub
xor
dec
outsb
sbb
in
popa
sub
push
push
bound
int
cmp
cwtl
xor
outsl
leave
lret
lret
jbe
jle
out
outsb
lcall
loopne
les
mov
ret
js
xchg
scas
scas
xchg
jne
cmp
aad
lods
push
stos
fsts
mov
xchg
mov
test
mov
and
cmp
sub
cmp
leave
xorl
xchg
test
xor
add
push
add
bound
push
bnd
push
pop
fs
jle
jp
jb
bound
cmp
xorb
ss
sub
adc
sbb
xchg
cli
lock
inc
pop
jo
mov
ret
in
stos
outsb
and
dec
cli
mov
jnp
dec
lcall
cmp
fcomps
js
inc
mov
bound
int3
xorl
cli
cmp
dec
lock
cmpsl
test
cmp
mov
movsb
insb
sbb
mov
fstps
clc
int
push
push
push
popa
js
mov
mov
mov
dec
inc
int3
cli
data16
ja
mov
or
outsb
xor
xor
jbe
mov
pushf
divl
cwtl
pop
ljmp
cld
inc
jbe
mov
mov
jmp
shll
cmp
cmp
mov
push
mov
jo
mov
mov
rcrl
int3
push
add
sti
mov
push
std
sbb
adc
jp
ss
testb
xor
mov
lcall
add
js
int3
mov
jne
jno
sbb
mov
push
cli
add
ds
push
ret
and
xchg
bnd
int3
ret
outsb
daa
aas
outsb
jb
int3
mov
cmp
mov
test
ret
add
mov
jno
test
adc
loop
xor
xchg
pop
into
popa
mov
jbe
lods
and
rcr
or
cmp
inc
stc
and
mov
mov
lock
jbe
aaa
push
mov
pop
jo
rorl
jle
inc
ss
test
popf
mov
pop
in
pop
mov
and
mov
in
mov
test
pushf
inc
pushf
jae
std
aam
mov
fstpt
popa
push
adc
cmp
jl
cld
mov
push
gs
jnp
xchg
sbb
add
jg
adc
and
push
data16
pusha
sbb
inc
dec
mov
cli
bound
mov
std
dec
jg
xchg
dec
test
cmp
jg
dec
pop
mov
pop
cmp
data16
dec
inc
test
jnp
or
push
sub
stc
mov
pop
jp
xchg
or
mov
into
fisttps
data16
mov
push
jecxz
test
jbe
testl
lock
sbb
bound
and
mov
xchg
inc
and
add
inc
mov
repz
lcall
inc
clc
in
jns
mov
push
or
rol
cli
xchg
or
mov
cmp
xor
cltd
push
mov
mov
xor
cmpsb
or
jb,pt
repnz
pop
dec
jp
jmp
mov
cmp
outsb
inc
sbb
dec
lcall
shlb
decb
mov
or
out
repnz
inc
mov
in
cli
dec
pop
sbb
inc
loop
cmp
xchg
jae
repnz
popa
iret
jl
ds
aaa
sub
fsub
dec
xor
xchg
test
add
push
cli
or
stc
lcall
insl
mov
pop
pop
repnz
call
dec
lret
dec
jmp
js
mov
lar
jb
ds
cmp
test
lock
insb
mov
add
dec
add
sbb
lret
sub
lcall
push
loop
sub
lret
clc
bound
scas
mov
bound
lcall
clc
imul
bound
jbe
mov
dec
das
pop
cwtl
sar
loope
inc
sub
iretw
jne
out
movsb
dec
cmp
sbb
inc
aam
lahf
fucomp
lea
cwtl
or
sbbb
or
int3
pop
mov
hlt
into
bound
ss
jecxz
xchg
ds
cli
nop
mov
jle
addr16
sahf
mov
and
xor
cmp
outsb
cmc
pusha
push
outsl
lcall
and
pop
and
push
pop
enter
dec
xor
jbe
sbb
aad
stc
jle
jno
lock
cmp
mov
pop
inc
rcrl
int
das
xor
clc
arpl
jl
and
jnp
jle
inc
xchg
pop
in
mov
aad
mull
sub
js
sub
xor
mov
pop
leave
push
mov
xor
out
lods
loopne
movsl
pusha
fs
aam
dec
ja
sub
fstpl
shl
out
push
scas
mov
outsb
mov
fildl
jno
push
adc
adc
cmp
int
and
push
pop
xchg
shl
call
pushl
add
jno
push
sar
call
mov
bnd
xchg
out
cmp
mov
mov
xchg
insl
cmp
mov
inc
pop
dec
jnp
jp
in
and
enter
pop
or
jg
adc
arpl
sbb
and
fldl
stc
call
jnp
iret
test
pop
leave
or
dec
aas
push
lcall
jbe
jle
push
jns
ret
lcall
stos
push
daa
mov
mov
call
sub
pop
jbe
xor
cld
xor
dec
sbb
jnp
sub
ret
sbb
dec
in
insl
addr16
mov
std
lock
xor
inc
arpl
jb
insb
xchg
jb
bound
mov
dec
cmpsl
cmp
cmc
xor
cmp
outsb
mov
xchg
out
repz
bound
adc
dec
int
xchg
mov
aas
test
stc
mov
adc
out
lcall
ds
or
push
andl
lds
mov
sbb
xchg
push
imul
mov
xchg
adcl
adcl
jbe
orb
jb
sub
and
mov
orl
and
mov
add
jg
mov
jnp
xchg
mov
sub
rcrl
repz
dec
jge
lcall
leave
or
sti
fistl
mov
sub
in
hlt
jmp
nop
mov
or
fdivs
jbe
jb
jne
cwtl
sub
loopne
sbb
fprem1
jns
jg
addb
xor
xchg
adc
add
push
insl
add
jae
pop
sti
and
cvtpi2ps
outsb
sbb
mov
push
aam
addr16
mov
call
pop
adc
xchg
cmp
sub
imul
inc
jno
jp
add
fiadds
rcl
fidivrs
sti
cli
ror
fs
iret
add
lock
xchg
pop
or
xor
pop
repnz
aaa
cmp
rorb
cli
mov
inc
stos
push
lods
or
push
hlt
loopne
arpl
out
cld
addb
andl
adc
insb
fisttps
dec
clc
cmp
xor
je
xchg
mov
test
insb
andl
push
mov
push
insl
xchg
aad
xor
test
stc
xchg
inc
clc
ss
pop
cmp
outsl
mov
test
or
arpl
jp
and
mov
pop
clc
cmp
pop
pop
loopne
pop
or
dec
fisubrl
cli
xor
xchg
pop
sbb
push
push
outsb
jae
add
mov
cli
fcmovb
mov
loope
xor
mov
cmpsl
jns
ret
jle
xchg
xchg
movsb
mov
dec
clc
cmp
pop
xlat
outsb
gs
adc
lgs
jb
jg
imul
fsubs
sbb
aaa
clc
outsl
fidivl
sbb
pop
loop
mov
loopne
mov
andl
jp
fdivrs
imul
add
push
sub
aad
mov
cmp
xor
je
ja
lods
pop
xlat
dec
xor
dec
push
sbb
inc
imul
out
outsl
icebp
inc
xchg
or
jae
jge
aam
sub
push
aaa
fsubrs
loopne
repnz
fldenv
ds
outsb
cli
fwait
daa
adc
lcall
sub
xchg
or
mov
negb
cmp
and
fwait
push
cltd
sub
sti
jbe
cmp
push
jle
inc
fcompl
sbb
das
push
sbbl
dec
data16
arpl
cwtl
iret
push
sbb
in
repnz
xor
jbe
movsl
outsl
and
sub
pop
inc
xor
push
pusha
and
dec
mov
call
adc
jb
mov
jo
fdivs
cltd
adcl
test
rcll
lret
aas
mov
lock
stos
mov
pop
js
or
aaa
rcr
es
shlb
jp
insb
loope
aaa
std
add
xchg
sub
js
pop
push
ds
jo
xchg
sub
cwtl
mov
stos
add
cmpsl
repz
pusha
ret
or
pop
push
cmp
cmc
or
fs
out
or
cli
jle
xor
ret
out
hlt
cltd
pop
frstpm(287
or
inc
push
rorb
fldl
xchg
jbe
xor
add
sub
stc
push
pop
pop
sbb
test
pop
or
add
pusha
fidivrl
mov
mov
inc
add
mov
dec
push
or
mov
sbb
lea
sbb
push
xlat
sbb
sbb
das
dec
in
lds
je
das
add
jns
mov
sarl
les
sub
push
jo
add
das
pop
ficoml
mov
pop
mov
and
retw
jns
xorl
xor
scas
fisubs
cmp
add
jno
fnstsw
pop
fs
arpl
push
jmp
icebp
mov
enter
cli
or
cmpl
nop
cmp
dec
cmc
inc
xor
adc
dec
lcall
js
mov
adc
out
lret
incb
sahf
add
push
lcall
push
in
dec
es
in
dec
mov
shl
cmp
in
fistps
cli
orb
and
imul
mov
cmp
mov
adc
push
aaa
mulb
cli
std
push
mov
mov
fwait
lcall
es
push
jns
xchg
ffreep
pop
lcall
loopne
xchg
fcoms
int
xor
stc
movq
or
inc
cltd
add
xlat
shrd
pop
test
test
loopne
scas
mov
mov
pop
and
xor
inc
lods
dec
xchg
push
sbb
stos
aas
push
mov
and
pop
add
jb
push
xchg
js
pop
out
mov
movsl
cmp
stos
popa
loop
test
push
hlt
popa
repz
data16
stc
mov
and
das
sub
sub
xchg
cmp
xchg
sarb
inc
jmp
or
rorb
enter
sti
dec
xor
jb
ja
dec
loop
out
adc
dec
sahf
jb
enter
xchg
fidivrs
add
pop
push
imul
sub
test
jbe
into
push
ljmp
jecxz
push
dec
fistps
xor
sub
adc
xor
jae
push
rolb
sarl
xchg
lcall
bts
in
xchg
movb
add
aam
cmpsl
jnp
out
repz
push
popf
shrb
sbb
outsb
xchg
inc
je
xorl
inc
jns
ja
push
xchg
test
es
cmp
sbb
cmc
xchg
das
mov
adc
dec
xor
or
lcall
sub
aas
scas
mov
cmc
xchg
push
outsb
jno
inc
data16
mov
sub
push
dec
movsl
sub
sub
xor
dec
call
pop
cmc
push
or
pusha
mov
push
loopne
ja
push
aaa
aaa
jae
push
outsb
inc
out
jnp
stos
jae
cmpl
addb
sub
mov
leave
addl
stos
pop
bound
inc
push
push
fmuls
xchg
ret
or
mov
fcmovu
je
jge
jb
insl
sahf
mov
xor
mov
ss
dec
lock
xor
xor
jg
xchg
outsb
cmpsb
sub
mov
mov
stc
jg
push
or
shl
lods
jmp
in
lcall
add
add
fsub
jbe
fistps
and
mov
push
loopew
jle
mov
jbe
jnp
and
cmp
add
mov
pusha
loopne
sar
out
js
jnp
xchg
out
sub
jb
ja
imul
push
ja
jg
fbstp
stc
mov
lret
inc
inc
inc
xor
sbb
adc
jno
mov
repnz
add
cltd
xchg
pop
sub
jb
stc
dec
bound
xlat
jmp
inc
xchg
pop
push
jbe
sbb
lods
jae
pop
mov
popa
lret
add
int
shl
jae
jno
jb
xorl
jnp
mov
lahf
lret
inc
mov
sbb
daa
mov
leave
repnz
shll
outsb
loope
jb
stc
mov
xchg
nop
sbb
sbb
lds
faddp
jp
mov
inc
push
cmc
and
inc
outsb
sub
push
imul
ret
addl
xor
xchg
bnd
push
jle
pop
test
loop
sub
or
xchg
cmc
call
pop
sbb
adc
jmp
mov
mov
jbe
or
mov
cld
jbe
cmpl
xchg
push
ret
fnstsw
cltd
mov
data16
adc
and
sahf
dec
cmpsl
jl
xchg
cmpsb
jne
cmp
mov
test
pop
jo
stos
shll
addb
ficoms
jb
and
cmpsb
gs
xor
mov
sub
pop
dec
add
std
jno
ss
mov
or
or
movsb
jb
dec
stos
cmpsb
cmp
ljmp
icebp
inc
xor
out
movsl
pop
add
mov
std
sub
sbb
cmpsb
adc
push
adc
lcall
xorb
ljmp
jns
ja
mov
xor
rolb
jae
add
xor
jae
cmc
cmp
pop
jb
dec
mov
jge
testl
std
and
outsb
mov
sbb
push
cmp
nop
mov
adc
push
mov
mov
xorb
cmp
jg
inc
test
mov
call
jle
xor
mov
jnp
test
sarl
je
gs
xchg
and
mov
pop
fiadds
mov
fisubrs
sti
popf
xchg
testb
xorl
dec
jge
lret
dec
std
push
dec
sub
dec
subl
jl
xchg
ja
icebp
pop
and
adc
mov
js
test
inc
jle
push
xchg
pusha
lcall
mov
and
mov
jp
ror
jnp
movsb
std
cmpsl
jbe
and
inc
inc
mov
or
outsl
mov
jp
ss
repz
imul
out
insb
sbbb
popa
in
cmpsb
insl
dec
dec
je
add
test
inc
lds
jbe
cmp
and
xor
shl
mov
xchg
pop
mov
jbe
stos
xchg
mov
ffreep
lods
imul
add
movsl
addl
jecxz
icebp
in
shrl
test
add
xchg
pop
loop
xchg
mov
cmp
je
imul
cmp
pop
js
cmpsb
jbe
and
shrl
jo
cmp
das
sahf
out
scas
push
out
or
call
jge
xchg
mov
js
pop
inc
sarl
movsb
lahf
mov
dec
ja
mov
cmpsb
fldenv
fimuls
mov
lcall
into
dec
cwtl
jl
sub
js
add
jge
cli
jbe
jb
inc
inc
outsb
ret
inc
stc
jge
jnp
insl
jp
mov
mov
push
out
rorb
test
fwait
push
add
mov
cmpsb
shlw
outsl
jge
mov
or
push
sbb
repz
and
push
outsb
sub
sub
out
jns
and
cmp
imul
je
xchg
xor
or
push
in
jo
push
push
push
int3
mov
sbb
lahf
or
xchg
pop
mov
sub
xor
pop
push
push
or
test
sub
andnps
dec
sub
out
mov
enter
xor
ficompl
stos
pop
hlt
repnz
fnsave
ss
insl
push
xchg
ficompl
cmc
mov
xchg
mov
movsb
mov
les
cmp
push
test
sub
xor
push
ss
js
or
mov
aam
dec
inc
add
sub
lods
jbe
outsl
jle
ret
xchg
sbb
rcrl
ret
pop
scas
jl
jo
xor
cld
xor
mov
push
mov
and
mov
fidivrl
push
sbb
add
sahf
push
sarb
xor
sub
mov
in
out
jbe
sbb
stc
jp
in
cld
out
out
or
jns
stc
inc
jp
lcall
cs
add
pop
testl
sbb
fwait
push
inc
jno
ret
aas
in
mov
aas
in
xchg
dec
jno
loopne
jo
sbb
ret
subb
shrl
add
imulb
jb
jle
sbb
xchg
sub
shlb
push
sahf
jle
shrl
and
pushaw
pop
pop
in
pop
int
subb
jae
ret
mov
cmc
jb
bound
inc
add
jno
sbb
jnp
shlb
push
lods
mov
stc
jg
xlat
std
and
xor
aaa
sub
shrb
mov
mov
nop
fcoms
addr16
mov
add
jbe
ds
dec
gs
je
rolb
push
aad
sbb
jb
sbb
inc
rclb
jbe
mov
inc
prefetch
push
sbb
inc
mov
es
into
aam
inc
mov
sbb
sub
repnz
xchg
sbb
std
cli
jle
sbb
jno
push
les
pop
stc
sbb
push
xchg
and
inc
mov
mov
xorl
insl
add
dec
mov
fisttpll
pop
aad
cmp
adc
and
bound
repnz
stos
imul
fnsave
jle
pop
jecxz
test
ret
mov
mov
lcall
test
pop
je
popf
insl
jmp
mov
push
lea
push
cli
jo
divb
add
ljmp
xlat
jl
xchg
jne
inc
xchg
aaa
enter
cmp
hlt
sub
dec
rorb
sahf
out
aad
loope
ja
adc
test
sbb
pop
mull
je
movaps
fistps
sub
pop
jns
lcall
jl
sub
add
cmpb
lcall
test
pop
inc
je
cmc
or
push
xchg
fstpl
adc
pop
xchg
and
pop
jb
pop
andb
jae
mov
test
lcall
sub
icebp
daa
sub
inc
push
fidivrs
sub
mov
mov
inc
cmp
xchg
lahf
scas
gs
in
outsl
pop
jae
mov
inc
jbe
jle
test
pop
pusha
or
pop
push
jle
mov
push
fnstcw
mov
mov
mov
icebp
sub
adc
xorb
jno
inc
cmp
popf
into
mov
jmp
aas
shll
out
test
mov
stos
mov
and
xchg
jo
push
and
mov
inc
mov
pushl
sbb
or
mov
xor
repz
jb
xchg
data16
mov
lods
js
lock
call
lret
push
testl
mov
subl
cmpsl
xor
inc
inc
cmc
push
xor
sbb
mov
aaa
adcb
jmp
push
cltd
jb
mov
and
ds
xor
adc
addr16
mov
xchg
iret
jae
xor
mov
xor
and
cmp
xor
in
sarl
ja
xchg
ja
test
push
idivb
adc
dec
sbb
int3
lock
sub
add
jl
call
test
in
cmpsb
jbe
or
and
mov
out
les
lods
jns
mov
ljmp
shll
add
and
jns
mov
in
xor
idivl
stos
add
fsubp
shrb
mov
jne
mov
xchg
mov
mov
jmp
and
test
sub
cmp
in
pop
xor
imul
pop
dec
cmpsl
sarl
js
sub
xchg
push
sub
or
xchg
mov
pop
in
shrl
divl
lcall
ror
lods
and
mov
sbb
inc
push
sub
push
insl
bound
sbb
mov
cltd
sub
cli
pop
out
jg
dec
fdivr
jo
xor
arpl
inc
cli
loop
xor
inc
bound
add
xor
and
cmp
icebp
or
fucomip
sbb
pop
movsl
jb
sahf
push
aas
popf
inc
repnz
mov
cmp
out
sub
faddl
icebp
adc
adc
add
or
cld
push
push
inc
mov
mov
cmp
mov
std
adc
xchg
xor
mov
imul
movsb
inc
sahf
mov
xchg
sti
sbb
xchg
inc
mov
fistpl
popf
ret
push
mov
cli
mov
andl
icebp
fwait
jp
fdivrs
ss
stc
testl
hlt
jg
pushf
insl
pop
stc
push
mov
sub
pushf
fcmovbe
pushf
sub
pop
xor
pop
push
jmp
push
data16
jmp
sbb
sbb
sbb
addr16
sbb
decl
ret
int3
push
jle
mov
jb
sbbb
outsl
jb
sbb
mov
aaa
ds
hlt
outsl
push
fisubrl
jg
jno
xor
push
jnp
xchg
xor
xor
dec
nop
idiv
cli
shlb
adc
mov
jl
jbe
clc
cwtl
aas
jno
or
adc
add
jnp
ficompl
xor
add
rcr
out
clc
mov
rcrb
nop
xor
mov
push
int3
inc
jp
sub
inc
and
push
xchg
sahf
imul
xor
mov
jo
mov
insb
push
add
adc
notb
jbe
push
xchg
bnd
jp
mov
repz
testb
sbb
sahf
pop
lret
mull
add
cli
xchg
adc
pop
xor
mov
jo
mov
jno
bound
test
movsb
adc
jnp
in
xor
test
sub
dec
clc
rolb
mov
cmp
stc
pop
andb
sbb
inc
xchg
outsb
lods
lret
clc
cwtl
lcall
out
lret
xorb
repnz
push
jg
cld
mov
bound
movsl
mov
imul
fsubrs
in
sbb
push
fdiv
lret
and
dec
xor
xchg
sbb
push
lcall
in
fldl
nop
jb
fcmovne
jo
xor
jl
lods
cmp
pop
repnz
sbb
pop
idiv
std
cmp
sbb
lcall
loopne
idivl
pop
aaa
into
cmpsl
inc
cltd
or
inc
adc
ds
hlt
cmp
pop
pop
icebp
ss
jb
dec
data16
cmp
dec
icebp
sub
sub
cli
ret
push
addr16
mov
sbbl
fidivs
cmp
pop
xor
jle
lds
cmp
aad
pop
and
push
push
mov
sub
clc
sub
and
mov
scas
sub
push
jl
adc
loopne
or
mov
pop
repnz
pop
in
jle
clc
xor
adc
dec
in
jb
shlb
xchg
bnd
aam
cmp
cmp
idiv
cld
clc
mov
sub
cmp
dec
jle
jl
popf
out
jle
add
movsl
lock
inc
dec
and
inc
jp
inc
ja
mov
jb
sub
sbb
pushaw
xchg
jl
mov
inc
mov
std
fwait
adc
xor
xchg
stos
add
int
test
nop
adc
push
stos
imul
ret
inc
out
mov
inc
and
dec
sub
rcll
out
jbe
decl
fildl
mov
sub
sub
das
and
xchg
xorb
add
cmp
sub
and
lret
dec
clc
sub
movsl
fwait
pop
jno
and
cld
out
daa
jbe
cmpsl
incl
orl
push
out
or
add
mov
jae
shrl
inc
xorb
inc
mov
jmp
push
jl
divb
das
repnz
scas
gs
jb
inc
and
loopne
xlat
movsl
stos
jge
ret
cld
fbstp
xchg
in
mov
in
push
cmpsl
sub
addr16
sti
jae
cmp
add
faddl
dec
scas
daa
lock
ja
mov
mov
bound
std
push
mov
loop
jp
push
pop
stos
cmp
dec
dec
or
ret
xchg
push
inc
ret
and
sarb
xchg
stc
bound
ljmp
ljmp
inc
jo
aam
jnp
pop
add
cmp
bound
lret
sbb
lea
push
mov
sub
adc
jge
pop
lret
pop
jecxz
dec
es
xor
jmp
mov
pop
movb
xor
sub
aaa
scas
in
adc
or
fsubl
push
hlt
idivb
jnp
cmp
mov
xchg
mov
pushf
xor
ret
push
pop
lcall
jb,pn
aaa
into
sbbl
jno
stos
fucomip
sbb
out
jl
cmp
lock
push
cmovae
in
mov
xor
push
jmp
jns
jb
jmp
loopne
push
jg
pop
mov
cmp
push
push
mov
movd
loop
fnstenv
test
jo
inc
jo
mov
ljmp
loope
aas
add
mov
aad
popa
shll
pop
inc
stc
lret
fwait
push
and
scas
inc
in
add
inc
jp
ds
jns
repnz
lcall
jle
xchg
fstenv
fildl
push
lret
or
mov
sub
sub
mov
jg
lcall
adcb
pop
push
jo
add
fadds
lret
adc
lcall
cmpl
sbb
lret
xchg
mov
pop
imul
lcall
jns
in
ds
mov
add
fsubrl
outsl
mov
in
pop
mov
andps
dec
push
fidivs
pop
int
pop
je
pop
sahf
bound
hlt
outsb
lret
adc
inc
sub
push
str
push
dec
jmp
jmp
push
bound
sahf
lcall
xor
ret
push
clc
sub
in
xchg
pop
mov
orl
push
in
rcll
add
cmp
stc
push
shl
push
pcmpeqw
jo
fsub
test
insl
hlt
imul
mov
repnz
sub
loopne
sub
adc
out
dec
jbe
jns
inc
dec
fcomp
or
mov
arpl
inc
pop
lock
mov
push
test
xlat
lret
stos
mov
popa
jge
in
outsb
in
mov
scas
push
sti
mov
imul
ret
stc
iret
inc
loop
mov
xor
pop
cli
in
cltd
sbb
dec
jo
rorb
cwtl
dec
push
aas
jl
dec
inc
out
push
je
jbe
lcall
pop
jns
or
dec
cltd
inc
aaa
out
mov
incl
inc
in
daa
andb
icebp
xchg
hlt
push
adc
inc
rcrl
pop
fsubrp
loop
cmpsb
iret
dec
sub
jg
mov
cld
sbb
dec
stc
je
cmpl
clc
jg
cmpl
jbe
inc
stc
adc
out
xchg
scas
imul
sbb
jae
rcr
inc
cmc
xchg
jp
daa
orl
sub
int3
pop
pusha
scas
add
xor
sarl
fisttpl
inc
xor
outsl
and
lahf
xchg
xor
fisttpll
std
push
dec
mov
lret
and
pop
xchg
dec
ljmp
rcll
out
or
into
or
dec
add
add
xor
insb
or
or
loopne
fdivrl
xor
bound
mov
sbb
fdiv
jno
pop
or
lret
mov
lods
out
pop
out
fnsave
and
cmpsb
mov
push
jge
sub
jle
and
sbb
sbb
push
popa
int
pop
ja
fldenv
stc
pop
inc
ret
ja
mov
push
addl
adc
add
out
cmp
cmp
cld
ror
dec
pop
aaa
xor
ljmp
loope
sbb
rcll
repnz
arpl
jmp
neg
inc
push
lret
cli
movsl
pop
fs
rep
mov
mov
pop
hlt
xorb
faddl
mov
add
xchg
sbbb
xchg
xchg
cmpsb
orl
or
xchg
stos
outsl
mov
shl
je
out
aaa
subb
into
sbb
leave
rorl
xor
push
cmp
fs
cli
add
inc
loope
test
nop
adcl
js
jle
mov
mov
jns
or
sub
repnz
bound
sbb
pop
cmpsb
and
or
xchg
mov
adc
sbb
push
out
loopne
pop
pop
inc
jo
rcll
mov
mov
mov
pop
cmp
xor
test
shlb
test
data16
ja
jmp
pushf
xchg
pop
pop
pop
xor
inc
pop
push
sarl
pop
cmp
push
insl
xor
popf
int
jl
nop
xchg
xchg
jno
push
jnp
sbb
push
xor
ret
mov
push
xchg
dec
inc
je
add
lea
mov
shll
dec
inc
test
cmp
xchg
popf
jge
jbe
mov
add
popf
or
lcall
pop
add
pushf
insl
xchg
cmp
mov
xor
jl
outsl
xchg
xor
sub
outsl
out
ret
mov
dec
cmpsb
rcrb
push
insl
in
lods
pop
push
stc
or
add
jecxz
mov
loopne
pop
imul
out
jecxz
cmpb
sub
cmp
sbb
pop
lret
dec
jnp
sub
xchg
clc
mov
push
movd
gs
in
jns
and
dec
repnz
sbb
cltd
xor
dec
and
mov
lcall
test
aam
mov
xchg
daa
sbb
lods
out
mov
mov
insl
cltd
mov
pop
inc
adcl
fisubs
pop
lahf
cmp
mov
scas
jae
dec
sub
cmpsb
xor
lods
add
adc
and
ja
mov
push
sub
arpl
pop
hlt
ljmp
sbb
lock
xor
popa
pop
dec
dec
push
gs
inc
pop
sbb
stos
push
int3
pop
xor
xor
test
xlat
lock
push
add
xor
pop
lcall
mov
ja
ret
jo
or
into
lcall
pop
fdivrl
lret
scas
jmp
shl
jno
bound
xchg
jae
xlat
push
fdivl
fbld
inc
test
mov
aas
xchg
cs
outsb
and
sbb
xchg
stc
jns
cs
das
mov
and
sub
jp
jb
adc
cli
adc
clc
xchg
rcl
adc
in
mov
push
mull
or
dec
push
ret
popf
inc
negl
xchg
ss
es
xor
inc
and
cwtl
lods
cmp
push
push
int3
xchg
adc
cmc
mov
push
mov
ja
jae
cmp
int
inc
into
or
add
lahf
ja
cmp
bound
cmp
dec
lds
test
cmpsl
stos
lahf
and
xor
push
and
xchg
add
test
push
pusha
xor
and
in
pop
into
pop
ja
sub
pop
push
cmc
add
push
xor
into
jmp
xor
xor
sbb
imul
push
leave
push
cmpl
lcall
xorb
inc
popl
mov
xor
jle
add
xchg
insb
xchg
sahf
pop
jo
loope
and
lret
loopne
pop
mov
dec
aam
sub
dec
into
add
mov
call
lret
je
dec
leave
mov
nop
jecxz
es
sub
sbb
iret
lcall
leave
mov
pop
mov
jmp
jno
adc
cmp
gs
push
mov
adc
xorl
inc
sbbl
mov
push
jo
ljmp
sbb
and
xor
insb
je
shll
jg
mov
pop
mov
jge
ja
jae
mov
mov
aad
sbbl
cmp
add
add
mov
or
sbb
cmp
cli
addr16
loope
cmpl
pop
push
aas
mov
stc
cmp
adc
in
arpl
pusha
stc
and
add
sbb
cs
ljmp
push
xor
dec
insl
pop
jp
xchg
xrelease
adc
dec
fs
adc
cmovp
jns
repz
lods
lods
mov
test
push
cmc
cmp
jg
js
mov
std
mov
push
push
sub
cmp
outsl
xor
sub
jmp
incb
xchg
xor
and
cwtl
jle
mov
or
dec
xchg
or
mov
mov
lds
clc
stos
popa
jb
and
xchg
jae
movsb
dec
mov
xchg
imul
cmc
cmp
in
push
mov
pop
ss
inc
outsl
add
xchg
cmp
push
inc
push
xor
xchg
outsl
dec
or
cmp
mov
jnp
adcl
xor
addr16
mov
or
or
js
outsb
cltd
fmul
icebp
cmp
sarb
test
std
repz
out
jno
stc
cmp
outsb
mov
bound
jns
out
shlb
das
jno
cmpsb
test
cld
js
mov
aas
clc
xor
bound
jnp
push
adcb
sub
mov
lcall
or
cmpsb
lret
in
pop
jle
add
mov
lahf
ficoml
cli
add
sub
mov
push
lcall
jbe
inc
jmp
xlat
sub
lds
scas
je
mov
les
aaa
jbe
push
outsb
sub
push
imul
subl
mov
jns
xor
data16
aam
call
das
cwtl
jmp
lret
insb
cld
and
dec
lock
sub
jl
sub
out
sub
xorb
push
out
mov
call
dec
mov
gs
mov
lock
sti
mov
pusha
dec
mov
jnp
js
imull
mov
jg
push
xchg
pcmpgtd
or
jb
bound
inc
js
mov
std
cld
xor
sub
inc
std
dec
cs
push
cmc
mov
roll
dec
leave
xor
dec
xchg
mov
xorb
xor
mov
add
scas
popa
jne
inc
inc
push
cmp
ja
xchg
xchg
insb
jb
jno
subl
jns
dec
repnz
arpl
jae
cmp
cmp
idivl
mov
inc
cmpsl
dec
or
out
push
push
sbb
outsl
punpckhwd
push
mov
jl
dec
sub
sub
js
int3
fsubl
adc
in
scas
pop
cmp
orb
inc
mov
sbb
shlb
loop
xor
cmc
daa
jp
fcmovnu
xchg
jle
bound
add
divb
add
mov
bound
ss
loop
divl
xchg
dec
aam
jle
lret
adcl
inc
ja
jp
cli
xor
xchg
rcrb
add
pop
add
xor
inc
inc
rcl
rcl
cld
xor
mov
cmp
imul
push
or
cmp
ds
add
mov
mov
push
ffree
sahf
push
movntps
push
cmp
mov
mov
jmp
add
pop
outsb
ds
sub
push
jo
lcall
jns
mov
jo
jle
loop
xchg
and
jb
pop
je
mov
jb
fadds
cmp
lcall
cmc
push
out
pop
jae
ret
sub
cmp
and
or
push
dec
mov
hlt
pusha
jmp
mov
shlb
mov
cmp
insl
add
bound
mov
popa
inc
fs
adc
arpl
sub
cmp
lods
sub
loopne
cs
pop
jns
jns
push
les
mov
outsb
cmpsb
pcmpeqd
or
repnz
jl
jbe
xor
push
add
fisubrl
and
adc
cmp
stos
ds
sti
push
popa
add
push
inc
push
jle
mov
pop
or
add
xor
push
add
mov
cmpl
ret
adc
repnz
in
xchg
and
jb
push
stos
jl
lcall
sub
inc
stos
sti
xor
or
pop
lock
roll
push
xor
lcall
lret
push
imul
xchg
push
mov
mov
jns
sbbw
dec
add
std
inc
popf
xchg
rcr
mov
andb
mov
outsb
pop
xchg
repnz
mov
ja
push
mov
cmpsb
cmc
mov
sti
pop
imul
push
inc
add
out
inc
lret
cmp
orl
ljmp
jle
decl
pop
pop
cli
outsb
hlt
pop
out
outsb
jo
ljmp
cmp
in
xor
mov
out
xchg
cmc
xchg
dec
daa
sahf
popa
ret
lods
out
js
adc
fldl
leave
jno
mov
cmpsb
sub
pop
adc
std
mov
inc
test
dec
in
push
shlb
bound
lea
hlt
lcall
xchg
jp
adc
mov
adc
and
pop
repnz
mov
mov
insb
inc
cmpsb
cli
jl
stc
cmp
insb
mov
mov
add
lcall
out
les
out
add
bound
das
dec
inc
adc
mov
imul
mov
jo
cltd
scas
push
sbb
cmpsl
shlb
repz
daa
pop
cmc
rol
iret
mov
push
adc
inc
mov
xchg
inc
test
xor
bound
mov
aad
fidivrs
imul
je
lcall
or
stc
jnp
add
add
ret
xor
aam
push
xor
jmp
push
cmc
je
ret
pop
cmpl
jmp
imul
repnz
data16
daa
fidivl
dec
divl
cmc
fstpl
mov
pcmpgtw
aas
aaa
add
imul
sub
out
mov
mov
leave
das
out
outsb
dec
insb
ds
or
les
jle
add
xor
mov
jmp
int3
ret
outsl
xor
stc
jmp
lods
mov
popa
jp
dec
xchg
add
sbb
nop
cmp
into
lret
fs
fcomi
push
jp
out
out
pusha
and
fs
and
jl
nop
jb
and
mov
js
pop
mov
xor
les
cmc
or
fucomp
push
adc
in
dec
imull
test
and
in
in
lret
pop
cmp
inc
dec
clc
xchg
daa
enter
cmp
and
in
sub
pop
in
incl
bound
jne
lcall
xlat
xor
adc
sub
subl
bnd
cld
cmp
cld
out
pop
loop
fidivrs
or
in
dec
js
ret
pusha
mov
mov
into
cld
ds
cli
cmc
in
ficompl
mov
push
sub
sub
das
sbb
lcall
idiv
inc
mov
daa
cmpsl
jne
call
jp
cmp
test
inc
das
nop
call
pop
jle
cmpb
and
adc
fimuls
mov
int
xor
bound
call
insb
sbb
xchg
fnstenv
jae
icebp
inc
push
pop
repnz
pop
xchg
imul
push
jo
xchg
arpl
push
and
imulb
dec
jns
mov
add
out
jbe
xor
jmp
inc
mov
stc
movsb
pop
stos
call
cwtl
insb
psraw
xor
rorl
jmp
outsl
pop
pop
repz
xor
lcall
aam
lret
pusha
push
shl
push
sub
sti
std
sbb
lds
rolb
andl
jns
mov
mov
rorb
test
aas
pop
stos
add
in
pop
mov
in
sbb
jnp
sub
mov
insl
pop
push
insl
ficoms
sbb
xor
mov
push
cwtl
in
sahf
mov
jo
and
inc
in
out
pusha
lods
xor
es
hlt
jg
lret
cli
inc
push
push
int
adc
and
bound
jl
mov
cwtl
sub
repnz
dec
shrb
push
sub
adc
jb
js
jge
loopne
cltd
cmp
xchg
std
rclb
frstor
jae
pop
test
repnz
mov
mov
cmpb
aas
out
jmp
and
mov
push
mov
push
inc
shrl
mov
cmpsb
mov
ja
rcrb
jae
jae
sarb
pop
lods
xor
outsb
fstl
push
jg
in
mov
stc
add
sub
mov
mov
mov
jg
test
popf
mov
mov
add
sbb
outsb
incl
ljmp
push
cmc
sub
repnz
xor
mov
in
xorl
mov
dec
lcall
push
pop
mov
fdivrp
mov
inc
mov
xor
jno
sbb
or
cwtl
imul
jae
in
sub
xchg
pop
xchg
test
pop
inc
jl
decl
sbb
test
sbb
cmp
pop
cs
jo
sti
call
pop
push
out
jae
add
inc
rolw
dec
push
in
cmp
inc
xchg
inc
xchg
adc
bound
jnp
arpl
push
aaa
fwait
dec
xor
and
lcall
pop
mov
insb
dec
loopne
cltd
jae
iret
loopne
mov
stos
jl
mov
stc
push
cmp
addr16
ss
push
mov
fs
jne
jg
fdiv
add
mov
pop
scas
cmpsl
jle
xor
scas
pop
mov
push
mov
or
adc
loop
incl
test
or
pusha
jmp
sbb
mov
pop
cmp
push
push
pushw
dec
cli
xor
bound
ja
lcall
sub
push
xchg
ds
lock
jp
dec
enter
xchg
push
dec
adc
std
lcall
push
imul
outsb
xor
inc
push
sub
test
sbb
xchg
adc
fcoml
push
adc
xchg
cs
mov
test
call
cltd
and
addl
sub
cli
fnstcw
popf
mov
mov
mov
push
and
into
jnp
lcall
xchg
or
jbe
repz
jnp
xor
ret
jo
jge
repnz
xchg
dec
lods
sahf
std
xchg
pusha
jg
jns
ljmp
xor
stos
popa
pop
sbb
out
jb
push
jmp
mov
mov
out
repnz
aas
lcall
ret
push
addr16
jno
aaa
dec
cli
sarb
cmp
ja
ret
je
jp
cltd
movsb
fdivp
dec
xchg
imul
sub
imul
jecxz
push
push
push
scas
jne
pop
push
cmpsb
jle
jecxz
and
dec
jmp
mul
fidivs
xchg
fnstsw
mov
jno
inc
ljmp
push
push
pop
fnstsw
test
jg
cli
sbb
lret
mov
lock
jle
ret
stc
mov
mov
ds
mov
xor
ss
daa
cli
nop
sub
cmp
orb
jo
add
jbe
das
dec
cli
testl
pop
xchg
push
outsb
jae
mov
add
jo
push
addr16
pop
aaa
mov
add
in
inc
mov
jbe
ljmp
push
mov
inc
and
sub
clc
jmp
fstps
repnz
sbb
and
sub
add
je
ds
push
insb
xchg
inc
das
les
lcall
mov
jg
sbbl
xor
mov
repnz
stos
gs
push
xchg
mov
mov
dec
movsl
and
jbe
in
mov
das
insb
lcall
jb
pop
adc
jb
out
xor
pusha
jo
cs
inc
test
jge
das
popa
test
xor
lahf
mov
pop
lea
aam
or
dec
inc
test
push
and
sub
lcall
jle
popa
mov
mov
insb
mov
not
lods
dec
push
dec
lret
lcall
xchg
js
enter
clc
push
out
sahf
push
movaps
push
jbe
cmp
lcall
aas
push
xchg
inc
mov
shl
call
pop
int3
jbe
xchg
aad
lcall
cltd
or
mov
inc
and
add
cs
jns
inc
repz
pop
jo
sar
pop
lahf
dec
xor
aaa
sbb
gs
bnd
data16
cmp
sbb
mov
jnp
cmp
push
jb
inc
pop
mov
jb
mov
stos
negl
xchg
divps
push
sbb
inc
xchg
inc
sub
lock
push
rolb
ret
add
lahf
into
rcll
sub
jno
addr16
aas
jecxz
popa
outsl
mov
sub
xchg
xchg
xchg
stc
out
pop
cmp
popa
add
leave
xor
mov
test
adc
sub
sub
rolb
mov
rclb
mov
mov
divl
mov
dec
stos
dec
imul
mov
and
daa
cmp
jns
mov
sub
aad
xor
adc
lcall
push
push
test
mov
test
cli
sbb
js
sbb
test
mov
es
jb
gs
ficompl
inc
stos
dec
sbb
lcall
inc
mov
repnz
pop
xor
or
movsl
clc
cmp
push
into
push
mov
xor
jns
popa
xchg
iret
mov
insl
aas
in
xchg
dec
mov
or
cld
sub
pop
js
xor
repnz
daa
jmp
xchg
jmp
cmovbe
jae
inc
aaa
push
xchg
stos
xchg
sub
mov
pusha
daa
bound
shrl
mov
xor
or
sar
push
clc
push
push
cmp
fmull
mov
loopne
cmp
add
jb
scas
ds
xchg
je
adc
lret
push
repz
cmc
push
or
mov
add
ss
stos
popf
cli
cmpsb
mov
add
dec
push
leave
cmpsl
xor
outsl
icebp
loope
adc
scas
lahf
test
add
cwtl
ret
pushl
and
pop
syscall
mov
add
lcall
sub
xchg
fimuls
shlb
xchg
divl
mov
adc
test
aad
and
sub
pushl
imul
and
sub
push
addl
add
mov
jnp
mov
jne
lcall
and
loope
mov
inc
sbb
sbbl
sahf
or
ss
adc
and
aas
jp
jb
cmp
sti
dec
repnz
jle
sub
adc
icebp
fwait
sbb
das
jge
cmp
test
jbe
dec
inc
cmp
and
xchg
lcallw
dec
inc
inc
rorb
push
sub
inc
sbb
sbb
inc
inc
and
lcall
clc
out
and
and
xor
in
imul
test
pop
sbb
or
cmp
out
push
test
arpl
mov
cmc
adc
push
pop
sub
icebp
fs
scas
sbb
mov
xchg
shll
mov
pop
loop
lods
inc
stc
popa
fst
adc
mov
pop
add
mov
jp
jns
shrb
je
push
add
inc
add
daa
jb
js
jns
idivb
jmp
sub
jmp
push
cli
cmp
mov
sbb
push
leave
pushf
sub
ror
adc
insl
jns
bound
xor
mov
in
xchg
sub
outsb
mov
pop
mov
xor
ja
mov
imul
rcrb
cmp
mov
es
pop
sbb
sbb
and
add
not
add
mov
or
dec
in
in
mov
dec
popa
ja
fisubl
cs
jl
add
aaa
push
rcrb
sbb
repnz
lcall
ret
add
mov
fnstenv
cmp
mov
rorl
sahf
mov
inc
out
add
stc
sub
jp
sbb
sbb
xor
sbb
push
orl
fwait
push
pop
mov
pushf
lock
mov
inc
test
xor
int3
or
test
cli
lcall
out
sahf
addr16
lret
loop
sbbb
mov
js
jb
sbbb
inc
or
sub
ds
mov
ja
js
stc
mov
mov
jp
stos
movsl
lock
jnp
divl
mov
push
sub
and
test
data16
mov
cli
dec
push
push
pusha
pop
jb
ljmp
inc
and
lds
das
cmp
mov
sub
adc
dec
mov
jo
pop
data16
popa
popa
sub
iret
sbb
aas
fs
and
rorb
mov
xor
pop
push
xchg
jns
in
or
add
xor
mov
sbb
mov
ja
and
and
sbb
pop
lret
mov
je
pop
add
cmp
aaa
mov
mov
pop
repnz
incb
outsl
lcall
or
push
or
lcall
lret
jp
push
mov
xor
adcb
lcall
inc
sti
inc
pop
mov
dec
test
cmc
sub
push
in
das
inc
jcxz
pcmpeqb
jb
sarb
es
test
in
mov
push
imul
add
jae
push
call
jp
xchg
cmp
into
outsb
pop
push
or
outsw
xchg
jns
xchg
xlat
pop
xchg
rcll
es
inc
and
mov
xor
iret
loopne
adcl
outsb
dec
dec
cs
roll
in
scas
jbe
or
xor
and
push
xorl
lret
xor
push
cmpsb
xchg
cmp
and
ja
lcall
outsl
rcll
jo
fnstcw
pop
and
es
jbe
jge
jb
stos
push
add
scas
jecxz
das
fsubs
adc
js
jnp
cmp
pop
jnp
adc
jae
mov
ret
outsb
outsb
push
js
add
add
pop
add
test
add
in
and
inc
loop
ja
scas
mov
sub
cli
pop
ss
repz
or
inc
insb
lds
lds
dec
lea
mov
xor
fbstp
fsubrs
inc
sbb
sbb
imul
sub
inc
jb
xchg
mov
imull
cld
outsb
lret
xor
ja
jno
xchg
lcall
adc
and
pusha
lods
enter
sub
movsb
out
xor
jno
xor
xor
fcoms
push
sbb
cmp
inc
lret
aaa
jo
mov
pop
and
outsb
inc
pusha
or
lods
mov
jne
in
pop
cmpsl
mov
out
sub
push
lods
mov
lock
sub
ja
push
nop
data16
divb
pop
lret
shrl
sub
sar
aaa
adc
fcmovnu
pushf
into
outsb
jae
ds
ljmp
fisubrl
int3
jns
jae
ja
hlt
adc
lods
imul
xor
aam
jbe
cmpsl
ds
xlat
add
lcall
test
mov
jno
push
leave
out
int3
notb
jo
push
push
jl
xchg
cmp
cmpsl
das
jbe
adc
push
jbe
and
mov
outsb
cmp
loop
jle
push
xchg
push
aaa
and
mov
xchg
aaa
pop
jp
inc
pop
jge
test
mov
inc
inc
mov
inc
dec
inc
mov
arpl
sub
push
push
cs
cmp
popa
jo
mov
sbb
sub
xor
jnp
test
xor
jb
push
stc
std
add
push
aaa
iret
aad
jge
in
dec
adc
and
fld
mov
pop
lcall
mov
inc
pusha
clc
push
dec
rcrl
jp
jbe
push
inc
sbb
mov
sbb
dec
xor
in
unpckhps
pop
inc
jge
icebp
or
push
popa
out
bound
pusha
push
adc
cmp
ret
icebp
adc
xchg
addl
cmp
aas
jns
add
es
jb
int
or
push
fstpl
lret
jge
sbb
mov
xor
xchg
inc
mov
inc
sub
addr16
mov
cmp
pop
stos
rcrl
dec
mov
daa
loopne
dec
or
ja
cs
mov
jmp
ficoml
clc
jbe
es
jg
mov
cmp
movsb
and
cmc
cmpl
and
sub
xor
int3
inc
pop
nop
jnp
je
jns
dec
mov
jp
loop
xor
sarb
in
sub
daa
out
sahf
pop
sub
aaa
xor
xor
pop
lcall
push
repz
popa
jge
or
dec
bound
cmp
xor
loope
je
push
outsb
sahf
jmp
push
sarb
loopne
and
jae
mov
shr
out
lret
clc
rcll
jle
jbe
ucomiss
push
mov
arpl
cmc
mov
aaa
cld
xor
stos
push
leave
push
mov
mov
jbe
mov
mov
xchg
in
add
bndstx
cmp
sub
pop
jl
wrmsr
testl
push
ds
int3
cmp
ficompl
popa
imul
mov
sub
inc
mov
cmp
ret
stc
jp
sbb
inc
dec
insl
call
fstps
sub
xor
mov
bound
jmp
mov
out
into
std
inc
push
sub
ja
ss
repnz
xlat
gs
ds
int3
push
pop
data16
mov
xchg
outsl
cmp
lock
adc
aad
pop
test
addb
add
push
sbb
pop
pop
adc
lods
fs
mov
jp
addb
ss
xor
mov
push
push
cmc
lret
dec
xor
aas
loope
std
xchg
push
jne
cli
xor
mov
and
pop
push
mov
stos
rolb
mov
jl
jb
bound
ds
hlt
inc
into
inc
mov
jecxz
fidivrs
fidivrs
popf
mov
sbb
repnz
ss
cmp
bound
data16
imul
inc
sbb
aaa
jmp
rcrb
sahf
cmp
push
inc
out
mull
mov
aas
inc
addl
sbb
js
jb
in
in
fadd
pop
jbe
js
sti
fsubp
jmp
jg
or
mov
pop
adc
push
dec
mov
pop
jne
push
lods
push
jle
cmpsb
sbbl
sbbl
jl
push
mov
dec
xchg
ja,pt
jle
add
sub
clc
mov
adc
cmp
push
rorl
dec
mov
cmp
insb
jge
cmc
cld
stc
mov
popa
push
sbb
stc
cmp
pop
push
scas
and
mov
mov
negb
lcall
pop
lahf
mov
pop
jb
les
bound
into
imul
daa
mov
push
add
jp
jbe
jb
outsb
lcall
dec
jl
addb
push
mov
add
jl
sub
add
sbb
xchg
out
stc
adc
daa
sub
mov
and
sub
fnsave
sub
sbb
or
int
jl
dec
loopne
movsb
fcompl
jb
xor
cs
pop
mul
out
mov
sub
pop
outsl
jae
data16
xchg
or
dec
orl
lods
lret
stc
ljmp
jmp
mov
inc
repnz
je
mov
mov
mov
add
xor
jo
inc
lcall
xchg
mov
gs
push
outsb
sbb
js
dec
cmc
add
mov
cld
push
daa
jae
push
cmp
inc
sub
notl
lcall
inc
mov
pop
das
mov
add
jl
cmp
pop
lret
mov
jl
lret
jne
dec
jmp
jnp
pop
add
adc
push
sbb
aaa
adcl
sbb
adc
rcrl
adc
insl
sbb
cmp
and
mov
or
mov
pop
lcall
jp
js
icebp
sbb
pop
clc
xchg
orb
pop
es
adc
xchg
fisubrl
pop
adc
cmp
das
xchg
dec
mov
mov
cmp
jle
xchg
mov
dec
lcall
sub
pop
fs
pop
scas
inc
mov
mul
sbb
and
push
mov
outsl
movsb
shll
loope
mov
jp
cmp
xor
jl
adc
clc
mov
cmpl
sbb
adc
mov
jae
andl
inc
and
adc
int
add
mov
or
icebp
lcall
jecxz
cmp
push
jle
scas
push
push
movsb
dec
test
cmp
in
or
xchg
data16
mov
mov
inc
mov
and
inc
daa
lock
cmp
jno
and
sbb
icebp
ds
or
fiaddl
stos
das
push
jo
sarb
mov
sub
pop
jmp
jbe
push
dec
icebp
sub
lock
shlb
loope
sbb
and
xchg
jno
and
dec
arpl
xor
das
jg
out
pop
dec
cmc
fisttpll
loop
jmp
pop
in
sbb
pop
sahf
pusha
not
jle
jl
lcall
jp
push
push
or
daa
icebp
imul
mov
sub
shrb
outsb
adc
cmp
inc
push
into
mov
out
ja
adc
loopne
shll
xor
cmp
inc
rorb
test
mov
in
xlat
mov
loopne
stc
jns
adc
lods
mov
mov
xor
jo
mov
inc
xor
push
mov
in
add
push
mov
xchg
jg
sbb
inc
jp
sbb
inc
cmp
dec
loope
ds
xor
loopne
aaa
daa
jge
scas
jae
pop
jo
cltd
aad
cmpb
lods
pop
mov
mov
or
sbb
std
bound
cmc
sub
orps
jle
add
stos
les
adc
pop
mov
push
cmpsl
push
xchg
jbe
inc
xor
or
mov
clc
push
in
jecxz
das
sar
iret
loope
rcrb
movq
jp
jbe
jl
pop
outsb
dec
stos
das
adc
sbbl
xor
movsb
arpl
in
scas
jne
sbb
mov
ds
mov
ret
pop
sbb
push
cmp
jge
int3
push
xor
xor
xorb
stc
mov
call
sub
lock
mov
aas
scas
xor
in
rorb
mov
pop
push
cmp
jl
push
adc
pop
or
pop
add
imul
pop
jbe
pop
add
push
dec
push
push
outsb
cli
xchg
std
xchg
lods
sbb
adcl
push
pop
dec
fisubs
pop
fiaddl
into
or
sub
sbb
inc
inc
mov
mov
loop
cmpsb
cmc
push
and
dec
dec
mov
addl
mov
dec
mov
test
push
cltd
mov
mov
fnsave
and
xor
scas
push
pop
lcall
dec
cmpsl
lock
movb
cmp
cli
in
inc
push
sbb
ja,pt
std
mov
loopne
mov
sub
or
shrl
jl
out
fdivs
add
insb
scas
cmp
shll
test
or
push
js
pop
loopne
test
lcall
xchg
aam
imul
push
js,pt
and
mov
mov
xor
mov
xor
and
pop
imul
add
movsl
stc
mov
rorb
mov
dec
sbb
pop
jg
mov
and
test
sbb
scas
cmc
das
pop
push
xor
mov
sbb
inc
jl
mov
out
fucomp
pop
loope
cmp
sub
cmp
push
jnp
addr16
cld
lock
test
cmp
mov
test
pop
gs
jns
pop
mov
pop
sub
cmp
fadds
mov
outsl
lds
faddl
dec
mov
adc
dec
pushf
sub
push
sub
test
cli
ja
popf
jo
dec
pop
popa
mov
jns
pusha
jg
cmp
andl
bound
and
pop
sub
jp
imul
das
das
jbe
cltd
xor
notl
adc
sbb
out
ret
cld
ds
std
dec
xlat
mov
push
push
lods
jle
jge
ret
adc
cltd
mov
jg
cmc
das
outsb
xor
lds
or
inc
mov
pop
push
push
mov
jle
aas
push
ficoml
mov
pop
ret
in
mov
rol
xchg
jns
xor
repnz
cmp
xlat
cmp
test
fcmovnb
fistpl
jnp
push
mov
popa
jg
fbstp
and
mov
add
sti
int
ja
ja
incl
hlt
jne
lea
xchg
sub
int3
inc
xchg
mov
lcall
jbe
lret
jns
scas
xchg
or
mov
mov
jle
push
push
pop
imul
and
push
inc
fcoml
or
outsb
scas
es
cmp
test
out
xor
cmc
sub
shll
xchg
stos
pop
jns
jle
xor
xor
cmp
mov
loopne
and
xchg
ja
and
adc
dec
mov
fsubrs
jo
jnp
ss
or
fsub
push
cltd
ja
idiv
inc
mov
mov
fnsave
jmp
dec
cmp
xchg
lds
mov
pop
jecxz
sub
dec
cwtl
insl
xor
jno
icebp
in
nop
and
inc
push
popa
cmp
popa
push
and
in
adc
lret
xchg
and
lahf
in
scas
jb
inc
push
cmc
lret
outsl
sarb
loope
arpl
in
daa
clc
dec
dec
cli
mov
xchg
mov
jp
in
push
push
rcrb
jno
xlat
jl
fsubs
cmpsb
dec
test
pop
nop
orl
repnz
xlat
divl
imul
pop
sbb
jmp
lds
je
adc
mov
lock
jge
jb
lret
add
orb
lcall
sub
nop
sub
data16
in
jns
mov
inc
cmp
addl
push
sbb
xor
push
popf
push
mov
cltd
dec
push
adc
mov
jb
jbe
je
adc
push
inc
mov
push
sub
lret
push
loop
mov
repnz
push
inc
add
cmp
jle
jbe
mov
aaa
push
add
ss
aas
lock
push
jge
jnp
xchg
inc
testl
push
xchg
push
jb
call
fisubrl
cmc
mov
outsl
cld
sub
call
push
test
or
aam
sub
in
pop
xchg
pop
xor
dec
and
push
or
test
jo
lea
lods
xchg
jmp
bound
mov
jp
and
and
and
inc
pop
jmp
les
push
lret
dec
outsb
or
cmpsl
adc
or
arpl
jecxz
mov
mov
jb
pop
jmp
pusha
in
sub
cmp
and
out
cwtl
stc
xor
lcall
ja
jge
pop
addb
les
test
les
ret
addb
mov
pop
and
cmp
inc
mov
ret
add
cmc
in
pop
fadds
pop
jnp
lods
daa
jo
mov
jle
xor
sub
push
pop
xchg
inc
aas
leave
lcall
jne
stc
das
mov
aaa
ljmp
sub
sti
push
or
cmp
xor
popf
in
mov
inc
test
mov
xchg
popa
dec
stc
dec
jo
idivl
mov
pop
dec
mov
ss
mov
push
sar
rolb
and
lret
fldl
je
jge
push
scas
dec
cmp
shrb
cmp
mov
je
xor
loopne
stc
jb
aaa
into
push
pop
fildll
out
sbb
and
inc
das
bts
dec
pop
imul
dec
xor
sti
jo
push
jb
inc
cmp
inc
sbb
adc
divl
jae
inc
mov
es
inc
pop
shr
lods
and
dec
cmp
pop
stc
dec
mov
mov
outsl
dec
js
inc
idivb
and
jae
xor
pop
mov
movsl
insb
sbbl
mov
lea
inc
aad
std
jg
mov
cmovb
outsb
int3
inc
imul
lcall
fwait
xor
leave
stc
addr16
push
jg
xchg
lcall
dec
data16
imul
bound
sub
or
in
addr16
pop
xor
or
dec
jbe
push
cmpsb
push
xchg
out
jae
mov
mov
andb
pop
scas
mov
xor
sub
mov
push
jb,pn
sub
test
in
mov
push
jne
and
dec
imul
sbb
cmp
sbb
sub
adc
lds
sub
xor
stc
movsl
pop
loopne
jns
cli
aaa
daa
int3
mov
fsubrs
dec
mov
xor
xchg
mov
jbe
lcall
push
push
and
cmp
inc
pop
out
sbb
std
xchg
sub
jecxz
jp
das
xor
mov
ficomps
jbe
aam
mov
jns
cmp
adc
sub
or
mov
and
and
imul
cs
imul
jnp
or
aaa
jg
mov
dec
mov
inc
or
jne
dec
xor
je
out
jno
nop
movsl
out
gs
popa
mov
pusha
pop
ret
cmp
mov
mov
push
mov
int3
andl
pusha
push
cmpb
push
mov
std
sbb
sub
fiaddl
mov
popa
rsqrtps
xor
adc
jp
insb
or
jno
sahf
cmp
out
cmc
cltd
and
inc
inc
movsl
and
xor
lock
fnstenv
adc
mov
test
data16
or
jno
insl
xchg
xorl
mov
stc
xor
lds
scas
es
lcall
sbb
mov
jp
lret
cmp
bt
ret
sub
std
jb
clc
push
and
clc
cmp
and
sub
lcall
pop
ret
pop
ja
js
cmpl
sub
outsb
mov
pop
jno
sahf
add
pop
js
lret
jp
jle
scas
mov
std
sbb
bound
lcall
ror
inc
jp
push
xor
addb
repz
xlat
std
js
push
jle
jb
sub
pop
adc
ficompl
mov
stc
jno
cli
mov
jp
lcall
cmp
ds
mov
popa
shr
subl
cmp
popf
pusha
jbe
push
jp
cli
jle
sub
push
sub
xor
flds
fdivrs
jp
mov
pop
pop
les
jne
jle
shr
adc
cltd
cmp
or
push
add
incb
jbe
int3
push
jno
xchg
jne
jecxz
std
hlt
pop
jecxz
std
mov
cli
push
subb
push
mov
xchg
sub
jl
cmp
mov
sub
push
ret
xor
xor
push
mov
jle
bound
outsb
js
std
ja
lods
push
popa
repnz
mov
xchg
out
jno
ds
ficoml
movsl
andl
in
movsl
and
loop
mov
ljmp
sbb
xor
lods
xchg
jmp
cmp
repnz
mov
xchg
push
subl
push
adc
push
mov
mov
out
xchg
jmp
cmp
ret
push
pop
stc
add
inc
dec
lcall
testb
adc
shrb
shll
out
in
pop
cltd
jno
or
popf
mov
mov
mov
fisubs
mov
rorb
cmpsb
jne
or
movsl
nop
xchg
jns
add
mov
xchg
mov
cmp
lahf
mov
lcall
cmp
fildl
sbb
ja
idivb
lcall
call
push
adc
das
sbb
out
sahf
scas
xchg
enter
push
cmc
cmp
mov
cmc
push
sub
outsb
hlt
movq
and
mov
mov
int
loop
jns
stc
adc
ret
les
xor
shll
push
ja
cmpsl
xor
call
cmpb
ds
cmp
push
sub
outsl
das
cmc
loope
cld
sub
cld
stc
add
adc
ror
push
cmp
mov
xor
out
lock
adc
mov
pop
mov
popa
bound
inc
lahf
icebp
add
inc
fsubl
push
add
mov
stos
orb
xor
mov
sbb
cmp
sbb
dec
push
les
cmp
nop
xchg
adc
cmpsb
mov
sub
jp
jl
push
push
cmc
cmp
cmp
add
xor
add
mov
roll
dec
jns
inc
arpl
dec
into
jle
test
int3
test
sarl
cmp
outsb
fdivl
xor
mov
test
cmp
mov
loopne
addr16
push
pop
movsl
arpl
xchg
mov
pop
sbb
mov
jmp
test
repnz
sub
shlb
lcall
icebp
dec
push
mov
inc
xor
daa
xchg
fdivs
mov
jns
or
cli
lock
dec
mov
divl
clc
sti
jnp
mov
dec
imulb
push
js
jp
pop
shl
test
and
out
clc
mov
jp
dec
leave
fidivs
cmc
icebp
fistpll
adc
lds
dec
dec
jb
mov
jecxz
cmc
pop
add
pusha
rolb
lcall
pushf
cs
cld
aas
es
push
repnz
divl
pop
xor
call
jb
jmp
jle
xchg
mov
ret
sbb
mov
jno
inc
sbb
lret
sub
pusha
in
jp
xor
aaa
popa
mov
inc
out
jbe
and
insb
xor
jno
inc
cmp
popa
aas
push
mov
xor
mov
fisubrs
shlb
leave
sti
cs
cwtl
jno
push
fcoms
rol
mov
and
mov
gs
sbb
mov
daa
pop
aad
fdivs
sbb
add
xor
shrb
nopl
outsb
std
aad
xor
sbb
sbb
cld
pop
cmpsl
xchg
imul
dec
fiaddl
movsl
cmp
cltd
sbb
cmp
insl
jb
lods
or
imul
jge
out
std
adc
repnz
les
and
pop
insl
repnz
mov
pop
js
mov
cs
cmp
nop
hlt
xor
data16
loope,pt
lcall
jg
in
mov
imul
jb
jg
outsl
cmp
hlt
pop
lea
fdivl
cltd
lods
cmpb
jg
cmp
iret
sbb
cmc
mov
pusha
jge
cli
xchg
mov
idiv
notb
dec
mov
mov
cli
mov
pop
cmc
mov
push
mov
cmp
movsb
xorl
dec
loope
outsb
fnsave
in
adc
out
xor
xor
gs
rcrl
ja
pop
push
jno
xchg
cli
not
mov
lods
test
adc
negb
xchg
sbb
dec
sub
and
stos
ret
lcall
or
pop
or
jno
jns
fisubrs
add
lahf
mov
ljmp
xor
mov
outsb
mov
fcmove
inc
inc
jae
cltd
pop
ljmp
aam
out
shl
in
sarb
loop
stc
loopne
int3
or
push
pop
loope
xor
fisubs
jmp
pmaxsw
hlt
push
ljmp
push
cli
mov
push
mov
jo
xchg
add
pop
jo
xchg
repz
fnsave
popa
stc
imul
dec
push
movsl
dec
inc
repz
push
pop
sub
push
cs
out
dec
fldl
xor
xor
add
cmp
cmp
xchg
loopne
cltd
push
mov
ljmp
jp
push
pop
cmp
ljmp
push
lcall
cld
adc
lcall
jmp
pop
cmc
rolb
inc
mov
add
mov
xor
pop
sbbb
pop
mov
xor
xor
mov
sahf
push
jbe
pop
ret
rcrl
ret
dec
data16
mov
stc
or
sahf
push
stos
lock
sub
push
push
imulb
pusha
jbe
dec
pusha
push
das
outsl
stc
add
popa
fisubl
cmp
lds
aam
jno
mov
js
adc
jb
arpl
gs
insl
xchg
insb
sub
dec
dec
adc
adc
ret
lcall
mov
test
andl
repnz
cli
cmp
jbe
jb
faddl
add
jno
lods
jecxz
not
psubsw
and
lea
or
push
rclb
cmp
jne
pusha
mov
cwtl
cmp
roll
syscall
push
aad
stos
test
pop
pop
jb
sub
shrd
pop
cmpb
stc
das
pop
hlt
cmp
push
cmp
out
inc
mov
test
flds
cmp
sahf
push
add
jns
js
test
jbe,pt
jno
and
xchg
movsl
pop
addr16
rcrl
imul
adc
cltd
mov
xchg
inc
mov
in
imul
push
add
inc
mov
xor
punpckldq
scas
es
push
or
lea
mov
dec
daa
xchg
mov
pushf
mov
arpl
mov
jno
mov
ja
in
cmp
push
push
ja
adc
movsl
and
ret
outsl
popf
aaa
push
inc
fildll
movsl
pop
decl
pop
orl
push
mov
push
inc
bswap
add
mov
in
cli
jbe
into
data16
mov
inc
lret
jge
push
stos
inc
xor
gs
mov
adc
mov
cmpb
mov
sub
xor
lods
outsb
lret
mov
dec
xor
xchg
and
les
mov
pop
outsb
xlat
rcl
or
xchg
bound
ror
leave
or
sarl
inc
lods
jno
push
dec
js
cmp
in
sbb
mov
and
cli
jo
loopne
mov
mov
pushf
jg
outsb
lods
lahf
pusha
mov
mov
orl
js
jnp
movsb
je
popf
ja
mov
add
cmovno
out
xchg
sbb
mov
adc
mov
pop
cmc
sub
pop
pop
xor
xor
mov
jp
pushf
inc
in
or
mov
stos
mov
add
xor
sbb
ljmp
leave
mov
mov
shl
outsb
je
xor
dec
std
cmp
aaa
insb
and
mov
mov
out
in
sub
test
jle
push
or
leave
fdivs
frndint
movsb
mov
imulb
push
gs
inc
rcrl
or
mov
in
xor
mov
push
jp
xor
jo
popa
scas
cltd
into
into
ds
jno
movsb
pop
bound
lcall
loope
cmp
repnz
adc
ja
xlat
idivb
add
dec
xlat
jge
sbb
mov
and
pop
aam
dec
xor
jbe
andps
cwtl
pop
add
rcrb
cld
mov
xchg
popa
sbb
js
ds
xor
lock
clc
sbb
xlat
movsl
sub
fldenv
jle
xor
sub
popa
jg
pop
and
popa
xchg
js
sbb
mov
bnd
mov
jge
nop
ret
clc
jb
mov
pop
or
cmovns
adc
mov
pop
mov
enter
adc
pop
insb
jae
js
outsb
imul
push
lcall
bswap
pop
repnz
pop
sbb
out
cli
pop
lcall
js
pop
mov
stos
outsb
xor
out
stc
pop
shl
dec
ret
aas
pop
pop
and
jle
cmc
leave
xchg
scas
insb
nopl
sub
into
testl
add
jl
scas
pop
std
mov
pop
je
stos
jne
inc
add
mov
loopne
inc
imul
inc
clc
js
inc
adc
stc
ffreep
fwait
pop
and
mov
jge
shll
mov
outsl
push
xchg
add
xchg
pop
int3
imul
mov
xlat
leave
mov
pusha
mov
fsubrl
xchg
cmpb
movl
lahf
jle
xchg
jns
jl
mov
enter
pop
fistpll
inc
fldcw
je
adc
push
push
rorb
je
addps
push
pusha
jl
add
push
inc
sub
loopne
inc
mov
pop
daa
xchg
insl
insl
adc
xchg
mov
mov
outsb
cmp
fs
and
push
cmpsb
lcall
jle
and
cli
lcall
daa
push
jno
ljmp
les
lods
insl
in
xor
cvtps2pd
jmp
cmp
fwait
popf
jns
pop
and
jne
fs
jge
in
insl
outsl
inc
jl
jbe
sub
insb
cmp
jg
shrb
push
push
jns
andb
imull
cmp
shlb
pushf
cmp
inc
test
cwtl
outsl
and
cmp
mov
sarb
nop
rcll
out
cli
push
movsl
test
jl
jle
jns
pushf
pop
std
mov
add
test
mov
jns
jae
lcall
lods
xchg
mov
push
stos
insb
add
pop
sbb
test
xor
add
sub
push
xchg
cmp
rcr
xchg
and
xor
jg
dec
lods
and
outsb
dec
lods
jb
insl
movsl
cmpsb
outsb
cwtl
pusha
pop
dec
orb
add
pop
stc
jb
lcall
mov
dec
lea
fisubrs
or
xchg
fldenv
pop
dec
inc
mov
dec
push
or
pushf
mov
daa
pextrw
adc
popa
inc
stc
inc
out
stos
sahf
xlat
jns
mov
xchg
cmp
jle
dec
mov
jl
pop
bound
cli
inc
cmp
jmp
push
mov
in
dec
jnp
das
lcall
inc
nop
lods
mov
mov
rorb
push
stc
push
inc
jle
pop
insl
cwtl
shrb
push
ja
sbb
jg
push
mov
lcall
jp
dec
push
or
shrb
push
jae
icebp
stos
hlt
push
pop
inc
sub
dec
roll
pop
cmp
repz
or
cmpsb
pop
xchg
cmp
dec
sub
iret
lods
xchg
jle
jl
imul
jecxz
cmp
fildll
sbb
outsb
xor
cmp
sbb
rcll
insb
addr16
mov
or
cmp
mov
push
mov
pop
cld
in
js
dec
test
stos
inc
movaps
mull
gs
stc
add
aad
rcl
push
jae
mov
sub
xor
xor
inc
xor
jbe
and
insb
jp,pt
pop
pop
jnp
jns
lock
das
push
cmp
jb
xchg
xor
leave
sub
ret
lret
or
jae
clc
mov
int
lcall
push
xchg
lahf
in
pop
sub
mov
js
ret
ret
pop
add
jns
xorb
into
test
xlat
mov
gs
cli
dec
js
cmp
mov
xorb
lret
cmp
mov
pop
mov
jo
sub
cmp
cwtl
std
xor
xor
ljmp
sti
arpl
mov
pop
sbb
inc
mov
mov
push
xor
ret
inc
sbb
xchg
jle
pop
or
inc
jl
mov
jo
xchg
int3
shlb
dec
daa
and
popa
fidivrs
arpl
jg
rcrb
pop
sbb
cmpl
sbb
lods
sahf
out
jo
or
pop
or
sbb
das
insb
push
mov
ret
lcall
inc
pop
stos
pop
jecxz
ret
inc
push
push
adc
cmp
pop
push
mull
movsb
leave
xchg
mov
xchg
xor
jne
jl
clc
lcall
ret
sub
mov
push
lds
push
stos
add
notl
cmp
sbb
sub
inc
and
jno
cli
xor
dec
inc
lea
or
arpl
mov
int
pop
sub
jne
sti
das
jmp
repnz
cld
divb
in
popf
les
cmp
call
jb
mov
xor
cmp
xor
sub
push
stos
movd
dec
sub
dec
adc
mov
push
flds
mov
aaa
das
push
repnz
mov
sbb
shll
jmp
and
and
nop
es
xchg
in
fnstenv
dec
push
jp
fcoms
test
mov
fmulp
mov
jp
jno
rorl
aas
inc
sub
add
xorl
inc
push
mov
test
push
push
into
and
push
and
dec
and
ret
xchg
ss
mov
pop
inc
pop
sub
ja
inc
adc
test
mov
sub
and
push
rorb
add
cmp
sar
jb
push
or
xor
clc
insl
xor
push
icebp
dec
vpunpcklwd
into
xchg
loop
cmp
pop
sahf
ss
aaa
fcomps
xchg
lea
ss
and
mov
in
push
movq
push
jne
cs
das
mov
cmp
bound
lcall
clc
stos
lods
sbb
and
insb
pop
mov
jo,pt
les
sub
outsl
pop
adc
xchg
jmp
jge
xchg
lret
cmp
pop
push
inc
push
in
leave
dec
xlat
cmpsb
adc
inc
mov
adc
xor
mov
lcall
imul
sbb
ds
aas
das
and
push
inc
or
push
das
aaa
mov
pop
xchg
mov
shl
ds
imul
inc
jnp
inc
mov
pop
aad
movsb
nop
mov
jbe
mov
leave
mov
icebp
bnd
xchg
stc
push
lea
popf
pop
xchg
stos
lcall
mov
dec
push
xchg
fbstp
cmp
push
je
sbbl
pop
jecxz
jmp
sub
mov
lock
jno
mov
sub
adc
cmpsl
aaa
js
pusha
cmpsl
popa
out
arpl
outsb
test
xchg
mov
inc
sub
mov
add
mov
sub
das
inc
stc
and
lock
and
mov
add
clc
shll
shll
cmp
lret
fsubrl
cli
sbb
outsb
cmp
movsb
jne
in
bound
mov
push
notb
outsb
jmp
ret
lods
cwtl
dec
pop
aaa
fimuls
mov
stc
popa
fidivl
lea
xchg
push
in
test
push
js
cmpsl
movsb
test
xchg
push
adc
cs
jmp
cmp
mov
cli
bound
pop
cwtl
and
js
mov
xor
mov
fiadds
pusha
push
and
popa
push
push
dec
cmp
jge
lods
mov
out
mov
pop
mov
fs
sub
fbstp
adc
mov
or
pop
jae
subl
test
jecxz
rdmsr
push
inc
outsb
cmp
mov
push
adc
mov
xlat
adc
test
cmp
jno
sbb
icebp
stc
scas
das
and
stc
or
cld
xorb
jmp
dec
jbe
dec
jae
lock
sbb
outsl
push
jns
xchg
xorl
cmp
imul
outsl
mov
push
ljmp
mov
push
lcall
pusha
dec
push
inc
pop
jno
add
pop
mov
subl
lods
and
pushf
div
cmp
xchg
cvtps2pd
mov
jle
lcall
mov
and
sbb
rorl
inc
xchg
jns
mov
enter
idivl
orl
cltd
dec
leave
cmpl
insl
jo
jl
cmp
or
push
repz
int3
adc
js
inc
jns
jns
loopne
push
jo
js
dec
cmp
ret
je
ja
sbb
shrl
adc
jb
push
xor
xchg
pop
jne
push
dec
sub
ja
xchg
add
popa
cmpsl
data16
push
scas
inc
mov
cmp
mov
cmpsb
fldenv
inc
data16
jb
in
xchg
mov
xlat
fiaddl
stc
inc
xorl
std
out
je
div
ret
data16
mov
lcall
cld
push
pop
mov
push
mov
int
add
xchg
aaa
pop
enter
jo
cmp
jecxz
jmp
push
mov
mov
or
pop
int3
add
adcb
dec
mov
das
fbstp
lret
decb
push
les
sub
or
xrelease
ficoms
ss
in
sub
addb
test
jb
lcall
dec
add
rolb
push
les
xchg
mov
mov
jge
cmpl
or
gs
clc
xor
pop
in
pop
call
push
cld
ss
arpl
push
add
mov
enter
stos
jo
les
jb
ss
insb
sub
pusha
cmp
mov
nop
jl
xchg
sahf
sub
lcall
mov
cli
pushf
test
repnz
fistps
push
pop
and
adc
scas
xchg
dec
outsb
inc
loope
xor
clc
push
jne
jno
cmp
rcll
push
lahf
pcmpeqw
movsb
add
fists
dec
jp
xor
repz
push
pop
call
and
cwtl
leave
mov
push
inc
aaa
sub
cmp
jp
xor
xchg
das
ja
jp
inc
inc
adcl
dec
xchg
inc
adc
idivb
dec
jne
jge
lds
insl
add
lcall
ja
xor
test
add
jnp
mov
scas
push
imul
je
mov
jae
pushf
jne
pop
cmp
jl
stos
mov
out
push
push
and
jle
adcb
mov
mov
add
out
mov
jbe
jle
filds
mov
sub
jle
and
lods
pop
cwtl
jmp
cmpsl
stos
out
jle
sbb
push
xor
cmp
out
arpl
push
sahf
pop
repnz
pop
loope
mov
or
jne
pop
lea
sbb
aaa
jle
jns
inc
sbb
sbb
ja
inc
cmc
mov
out
sub
inc
inc
inc
push
dec
insl
cmpsl
mov
arpl
mov
cmp
data16
fists
mov
lds
scas
test
pusha
stos
xor
pop
cmpsb
cli
mov
xchg
inc
push
test
sub
sub
mov
div
addr16
pop
and
xor
test
jp
pop
orb
and
test
cmp
push
and
popa
clc
ss
sahf
add
inc
subl
xchg
cmpb
sbb
mov
pop
cmc
jne
cmp
enter
cltd
push
xchg
adc
inc
jb
mov
pop
xor
int3
insb
inc
push
jg
xchg
dec
movsb
ror
sti
in
mov
mov
mov
cmp
push
jl
dec
repnz
inc
cmp
mov
pop
add
push
dec
jl
aas
push
lret
repnz
jns
divl
ds
jbe
or
mov
repz
test
jecxz
push
jecxz
add
clc
jbe
mov
pop
shlb
push
or
addr16
push
mov
fistl
cmpsl
pop
push
mov
xor
mov
mov
mov
rclb
out
test
out
mov
jnp
lcall
aam
fwait
rorl
mov
jle
inc
out
add
fnstsw
xor
icebp
xchg
mov
imul
xor
insb
movsb
xchg
das
outsb
orb
adc
cmpsb
fldcw
into
sbb
dec
les
xlat
xor
sub
dec
push
sbb
xchg
pop
add
je
js
pop
fildll
std
in
movsl
jge
xor
inc
xchg
sbb
pop
les
cmp
sbb
int
js
pusha
testb
dec
das
fisubs
sarl
xor
cltd
jecxz
cmp
outsb
mov
orl
adc
push
push
xchg
cmpsb
jge
cmp
and
dec
and
lcall
sub
iret
jb
mov
mov
mov
xchg
in
mov
stos
push
xchg
ficoml
lock
jno
data16
mov
adc
jle
enter
cltd
mov
pop
stc
xor
inc
das
jae
jle
xchg
jg
lcall
in
push
fs
and
lret
xor
xor
shll
mov
mov
test
clc
cmp
jnp
dec
cmp
or
dec
out
add
and
in
ds
sbb
bnd
sbb
dec
sub
sub
out
in
in
cmp
jl
pop
add
jb
cli
pop
sbb
ja
jge
icebp
pop
clc
xchg
adc
pop
and
test
cs
ja
ljmp
cmpsb
cmpsl
xor
xor
add
pusha
mov
bound
xchg
imul
and
scas
cmp
adc
push
je
add
add
adc
jbe
pop
add
mov
in
outsb
dec
dec
pop
push
pop
add
mov
daa
mov
leave
lea
add
mov
push
push
shlb
cmp
mov
int
xlat
subb
outsl
fcomps
shlb
clc
imul
mov
les
out
mov
int
xchg
sahf
xchg
pop
data16
pop
pop
icebp
cmp
rorl
sub
inc
dec
clc
ja
jecxz
sbbl
push
mov
push
sbb
add
sbb
pop
mov
lret
jb
sahf
int3
jae
sub
jbe
fisttpl
sarb
jo
lods
mov
shrl
mov
jp
adc
call
movsb
jnp
addr16
lods
mulb
sub
bound
cli
add
fisubs
adc
shll
add
test
xor
mov
or
dec
jl
push
jae
das
pop
push
loope
mov
or
cmp
ds
cmp
mov
ret
in
fstpl
mov
jg
fists
movsl
in
rcrl
xchg
adc
inc
sub
sti
jle
data16
and
lock
imul
mov
les
ds
jnp
test
inc
push
and
mov
mov
mov
sub
xchg
fucomi
lock
cltd
dec
loope
pop
cmp
sbb
fstps
dec
add
xor
test
inc
shrl
xchg
cmc
std
dec
ficompl
and
lret
lcall
dec
mov
rorl
outsl
and
inc
adc
call
imul
stos
mov
mov
sahf
insb
aas
jbe
data16
bound
lods
mov
stc
xchg
and
jmp
bound
mov
ss
mov
mov
lds
pop
cmc
jo
xor
lcall
out
dec
ljmp
insb
in
sub
xor
sub
out
and
icebp
out
jmp
mov
rolb
mov
cmp
adcb
subb
popa
push
or
pop
and
pop
shrl
pop
cmp
dec
mov
mov
push
rcrl
and
xor
or
and
call
xchg
dec
push
incl
xor
xor
jle
dec
ss
je
and
inc
cmp
test
roll
pop
cmp
mov
outsb
cmp
push
jbe
jno
jl
xchg
or
stc
xchg
std
leave
stos
dec
sub
or
mov
bound
mov
dec
mov
mov
ljmp
xchg
xlat
inc
push
or
mov
mov
int3
push
sbb
push
shrb
adc
dec
jns
sub
push
push
aas
jae
push
pop
enter
jbe
stc
ss
inc
incl
cltd
jle
pop
jo
sbb
xchg
subl
jo
mov
ds
fdivrl
mov
xor
cs
je
xor
mov
sbb
sbb
inc
lock
mov
xor
aaa
jl
mov
sub
movsb
pop
popf
push
push
sub
cmpsb
hlt
inc
addl
stc
bound
xchg
xchg
cmp
mov
mov
dec
clc
jle
ljmp
xchg
mov
arpl
push
pop
cmp
adc
add
outsb
in
shlb
test
mov
dec
std
ret
shl
jbe
dec
xchg
bound
notl
jle
insl
dec
cmpsl
ds
jbe
jle
arpl
xor
inc
bound
cltd
insl
xchg
je
out
es
add
mov
test
cld
mov
in
stos
push
bound
sub
cmp
jmp
std
inc
in
insl
cltd
lea
xchg
aad
repnz
inc
push
jmp
sub
nop
lcall
jg
outsl
xchg
pop
xchg
lret
in
iret
xchg
je
lods
aam
gs
mov
je
aam
xor
xchg
fs
xor
imull
xor
pop
add
ja
js
jbe
jns
jle
mov
jbe
stos
test
rcrb
js
mov
push
roll
push
sbb
sarb
pusha
add
adc
arpl
jle
mov
pop
call
pop
dec
pop
sarl
mov
mov
and
adcb
insb
clc
jnp
ret
insb
sbb
dec
mov
xchg
pop
bound
pop
jle
clc
jl
pop
ds
or
or
lret
mov
subb
lods
pop
shl
push
xchg
fildll
inc
jmp
sub
icebp
pop
pushf
pop
sub
mov
push
push
xor
cld
xor
pop
xchg
push
mov
in
jne
jmp
push
mov
add
inc
mov
je
sub
dec
insl
in
adcl
xchg
sarl
mov
mov
bound
adc
dec
lods
adc
jnp
repz
xchg
xchg
subl
pushl
ja
test
xchg
fmuls
xchg
gs
jge
clc
cli
jl
add
push
js
lret
leave
cwtl
testl
pop
mov
push
and
idivl
xchg
and
inc
mov
jle
jp
les
jbe
sti
inc
pushf
xchg
add
xchg
imul
repnz
cld
lock
inc
std
jno
adc
loope
test
jo
pop
mov
xchg
push
xor
adc
inc
shl
push
push
sub
call
loopne
sbb
inc
push
popa
mov
push
mov
pop
bound
stos
cmp
push
dec
mov
push
testw
outsb
inc
jo
dec
shll
jno
xchg
inc
push
push
mov
xor
hlt
cwtl
shrb
inc
xchg
lods
in
icebp
mov
mov
push
je
xor
mov
or
pop
mov
mov
xor
mov
outsb
das
sub
mov
jb
xchg
push
outsl
or
cli
push
mov
ss
aam
test
push
or
das
test
jbe
sarl
mov
mov
cli
jb
jbe,pt
or
lock
jno
sbb
leave
xor
and
and
xor
leave
pop
jb
dec
rcll
enter
jae
or
jns
mov
outsb
rcrl
mov
sbbl
mov
stc
outsb
mov
cltd
jle
les
ljmp
fildll
lret
bnd
jno
jmp
jecxz
pop
push
mov
cmp
sub
inc
jbe
cmpsl
shll
into
mov
std
hlt
cmc
cmp
mov
or
jb
shl
icebp
pop
cmp
cmp
inc
mov
jns
cmp
icebp
punpcklbw
ds
es
add
hlt
sahf
inc
cmc
repz
pusha
jno
cltd
jo
push
icebp
pusha
xchg
cltd
jo
push
icebp
pusha
mov
cmc
jle
mov
shrb
mov
js
outsb
xchg
test
mov
mov
or
repnz
jbe
mov
je
ja
push
jl
sqrtps
add
loope
xchg
xchg
inc
scas
inc
mov
fcoml
cli
push
inc
cmp
sub
imul
cmp
adc
xor
xor
sub
jae
jmp
xchg
lock
push
add
repnz
test
out
xor
cmp
sub
es
mov
ret
pushf
jns
arpl
jbe
outsb
cmp
pop
pusha
dec
xlat
sbb
push
icebp
pusha
outsb
cltd
jo
push
icebp
pusha
jbe
jo
push
icebp
pusha
jle
pop
ljmp
mov
xor
mov
cmp
jb
aas
outsb
in
lret
inc
push
xchg
sbb
pop
jbe
inc
emms
mov
cmpb
cmpsl
loop
push
mov
or
test
jns
xchg
jns
dec
jl
mov
push
cli
imul
cmpsb
popa
jnp
clc
imul
ljmp
adc
ret
js
out
dec
cmpsb
mov
push
flds
jmp
xchg
mov
sbb
ja
lcall
dec
cmp
jbe
add
pop
jge
add
xchg
in
ljmp
dec
mov
outsl
mov
mov
cmpsw
ljmp
mov
adc
ds
push
jb
outsb
leave
aaa
cmp
xchg
je
or
xorb
orl
sbbl
and
hlt
mov
cli
insb
xor
inc
add
ret
popf
adc
adc
jg
mov
insl
dec
js
add
mov
cwtl
mov
mov
lret
lcall
out
stos
rorl
shrl
jno
adcb
jne
push
mov
mov
fistpll
sti
inc
xchg
fwait
xor
inc
mov
repnz
outsb
outsb
add
pop
std
subl
idivl
mov
xchg
mov
dec
into
mov
push
cmp
sub
repnz
xorl
in
pop
outsl
pop
jl
mov
add
xchg
inc
sbb
jge
inc
outsl
in
xor
jns
cmp
push
lock
cmp
mov
mov
sub
sbb
data16
fidivrs
jns
or
mov
mov
xor
aaa
stos
xchg
xor
xchg
popa
out
mov
mov
add
pop
repnz
xchg
mov
fs
lcall
popa
inc
pop
push
aaa
stos
mov
push
mov
clc
inc
ss
sub
push
dec
mov
mov
pop
jp
stc
add
sbb
mov
cli
add
mov
xchg
fs
shlb
xchg
push
fldenv
shld
hlt
push
out
xorb
shlb
pop
shlb
mov
push
xchg
push
aad
aam
outsb
je
jne
push
mov
cs
dec
js
js
jnp
push
sub
cmp
sub
fisubrl
cwtl
jl
scas
dec
cs
into
fimull
outsb
std
loope
sbb
fstps
add
jns
outsl
inc
das
inc
test
iret
pop
or
imul
popl
jae
dec
mov
loopne
mov
mov
cltd
mov
sbb
mov
mov
push
sub
cmp
stc
mov
jae
mov
cmp
ja
cmpsb
bound
gs
out
cwtl
pop
inc
pop
add
data16
loope
ds
sub
dec
pusha
cmp
pop
out
popa
cli
incl
jle
or
fidivrl
pop
pop
icebp
or
testl
divl
rclb
pop
lret
jbe
mov
push
inc
dec
push
gs
out
inc
mul
clc
sbb
push
cli
xor
mov
in
dec
adc
jns
sbb
xor
fcomps
inc
cmc
adc
pushf
xchg
in
ret
and
stc
sub
or
sub
sbb
inc
mov
push
add
cld
in
and
jne
push
push
sub
or
sbb
cmp
out
fcos
lret
xchg
cmp
dec
fidivrs
in
iret
insl
jecxz
jbe
loop
dec
sbb
outsb
push
lods
imul
lret
jl
lods
or
mov
sbb
add
popa
pop
sub
dec
cmp
imul
push
mov
or
jle
jns
and
in
jg
pop
cwtl
inc
dec
enter
mov
int3
or
dec
int
in
cmc
jle
es
cld
andl
lds
js
jg
bound
mov
andb
mov
mov
test
inc
out
jge
xorb
jns
leave
pop
addl
in
or
push
aam
add
sbbb
sbb
insb
mov
adc
sub
shrb
ja
popa
push
sarl
lcall
and
aaa
aas
push
fbld
push
inc
adc
ja
mov
mov
jb
pop
xor
ja
leave
jne
fidivl
pop
push
nop
mov
xor
jb
xor
cmpsl
jp
lea
push
push
xchg
inc
data16
jge
mov
cmp
xchg
mov
jge
jbe
sbb
dec
cltd
pop
push
aaa
idivb
clc
add
cmp
lcall
cmp
jg
sbb
sub
aad
mov
jns
inc
ss
daa
js
xor
je
push
clc
daa
stos
jle
shll
leave
jl
outsl
clc
js
dec
test
mov
push
xchg
ja
mov
lahf
and
ret
mov
mov
mov
xorl
mov
mov
mov
pop
jp,pt
scas
jnp
pop
xor
pushf
inc
cmc
add
insb
daa
inc
fcomip
inc
xchg
pop
cmovl
xchg
sti
cmpsb
sti
pop
sti
sahf
mov
pop
insl
cmp
xchg
in
es
jnp
test
pop
pusha
mov
lcall
pop
and
xchg
cwtl
or
cs
bound
les
sbb
xor
push
mov
shl
jae
movsb
mov
out
pop
ficoml
stc
daa
sahf
rol
pop
or
pop
add
js
jb
addr16
adc
pop
incl
mov
cmp
adc
xchg
pop
rorb
aaa
jp
xchg
outsl
push
pop
loopne
ret
lcall
xor
lret
inc
rclb
cmp
and
mov
cmp
sbb
pushf
and
xor
sbb
lds
scas
jl
faddp
lock
sbb
out
dec
adc
jo
mov
cmp
mulb
add
jp
push
pushf
dec
ja
mov
aaa
inc
xor
das
sub
xor
xor
rcrb
mov
adcl
dec
outsb
lcall
mov
sbb
js
push
lea
and
jno
xchg
aas
xchg
cmc
add
pop
aad
stos
pusha
shll
popa
mov
sbb
outsb
rcrl
dec
xchg
shll
pop
ja
rcrb
scas
cmp
dec
mov
pop
int3
lret
jae
sbb
xor
testl
ss
insl
sub
jg
dec
andl
aad
jp
loopne
add
mov
fimull
cmpb
inc
iret
data16
dec
push
rcl
jno
sbb
lods
aaa
xor
in
dec
push
sbb
inc
jbe
test
shrl
jnp
dec
lock
and
xchg
rcll
and
pop
sub
fmul
and
adc
cmp
sbb
jl
mov
clc
xor
pop
cmp
orb
outsl
cmc
adc
jge
imul
cmc
mov
stos
adc
daa
mov
mov
ret
mov
jle
push
push
sub
mov
sub
sbb
and
into
push
jnp
push
mov
bound
insb
xor
mov
pop
mov
and
lahf
cmc
xor
push
cmp
popf
imull
pop
fidivl
add
sbbb
xor
scas
sbbb
dec
mov
popl
xchg
mov
test
in
imul
cmp
push
scas
mov
pusha
dec
add
mov
dec
stc
out
mov
inc
pop
xor
xor
mov
cmp
lods
adc
jo
push
add
push
cmp
xchg
mov
imul
jnp
adcb
sub
js
jge
cmp
mov
call
out
ja
push
not
stc
sbb
xchg
maxps
xchg
xor
mov
xor
sub
jne
fiaddl
mov
adc
and
inc
outsb
mov
push
aas
sub
adc
jmp
bnd
jns
pushw
jg
sub
std
ja
jb
xchg
out
mov
inc
outsl
xchg
sbb
pop
jb
insb
cmp
imul
or
or
movsl
ret
ret
loope
and
rolb
push
daa
inc
stc
cmovbe
lcallw
jle
test
push
cmc
aas
add
hlt
out
push
ja
sub
dec
pop
cltd
pop
rcrl
clc
insb
mov
xchg
push
push
scas
pop
dec
dec
lret
jne
fs
jbe
xchg
scas
lea
mov
inc
inc
push
test
dec
cmpsb
mov
cmpl
lods
jl
cmp
add
je
sub
adc
mov
insb
push
pop
jb
sub
jnp
mov
inc
into
jl
lods
cs
mov
dec
xchg
push
gs
es
push
xchg
scas
lds
adc
pop
pop
outsl
or
cltd
loope
shrb
ljmp
jp
cmp
movsb
adc
test
xor
sbb
sub
fdivr
loopne
movl
sahf
in
nop
or
add
ja
or
inc
shlb
fnstcw
into
xor
lcall
pop
mov
cli
sub
ret
adc
xor
ja
adc
es
fst
push
sub
sbb
sub
jmp
bound
inc
mov
hlt
pop
pop
sub
fbstp
jnp
sub
pop
pop
mov
in
jns
sbbb
sub
cmp
sub
adc
daa
xor
sbb
aam
aaa
mov
sbb
xor
cmp
push
je
dec
jb
mov
cltd
pushf
mov
mov
jp
pop
gs
outsl
cmp
jae
dec
sub
mov
adc
and
push
push
cmp
insb
pop
adc
inc
cmp
inc
iret
mov
outsl
xor
push
in
sbb
cmpsb
xchg
dec
push
sbb
sub
addps
jo
cmp
push
add
xor
in
mov
mov
int3
or
push
push
mov
aaa
xor
jl
cmp
sbb
mov
mov
push
cld
lcall
sub
sahf
clc
pop
mov
push
popa
outsb
icebp
sub
shrb
pop
sub
das
xor
call
imull
inc
jp
pusha
dec
inc
cs
loop
sbb
imul
test
sbb
xor
pop
std
sub
jmp
dec
inc
push
or
stos
or
jecxz
jbe
sub
xchg
sub
sahf
nop
scas
pop
mov
aam
mov
mov
addl
add
idivl
rcll
jl
mov
pop
call
ret
fdivrs
pop
sub
popa
mov
stos
call
mov
popa
rcrl
jge
push
ds
xor
fnstcw
rcrb
out
aad
adc
cmp
fstl
in
cmp
or
xchg
outsl
jp
inc
mov
push
pop
insl
push
daa
push
sbb
sub
and
das
stos
pop
adc
xor
imul
xor
pop
data16
in
shlb
xor
retw
fildll
jne
cld
push
push
mov
sub
sahf
xlat
sub
fucomp
iret
pop
shrl
shll
addr16
test
aaa
mov
push
sti
adc
sbb
inc
rolb
dec
push
sbb
add
cmp
inc
nop
push
inc
inc
push
mov
test
xor
mov
ret
xchg
ficoml
leave
mov
gs
push
add
xchg
xchg
insl
repnz
jne
ds
sub
jle
pusha
cmp
and
cld
dec
cmpsl
repnz
pop
bound
stos
pop
inc
insb
int
xchg
cwtl
sub
test
lahf
imul
xchg
ficomps
test
cmp
iret
and
add
scas
mov
add
and
inc
inc
jge
inc
jmp
pop
addr16
jo
jno
jo
pop
xor
pop
mov
loope
add
cmp
mov
jns
xchg
sub
aaa
addr16
or
ja
aaa
mov
in
add
push
pop
mov
jg
cmp
nop
jae
rorb
mov
jno
jp
cli
mov
loop
aaa
les
rolb
gs
push
sub
jmp
nop
xchg
cwtl
cmp
mov
mov
add
pop
cmp
xchg
aas
repnz
not
jnp
and
fisttpl
inc
in
sub
mov
push
subl
and
jl
or
xor
dec
adc
pop
jns
mov
mov
mull
ficompl
xor
pop
or
jbe
xorl
aas
xchg
loope
adc
repz
sbb
addl
mov
pop
adc
push
sub
xchg
inc
sbb
push
fwait
mov
icebp
lahf
mov
les
ljmp
mov
add
pop
es
in
inc
loop
int
mov
adc
lods
jbe
data16
jns
inc
jae
add
sub
mov
adc
insl
cmp
inc
filds
jo
test
fdivs
lar
and
mov
and
xor
xlat
cmp
dec
xor
jecxz
cmp
ret
add
jge
fisubrl
inc
sbbl
sub
jle
mov
sub
mov
jmp
pop
cmp
cmp
repz
cmc
mov
or
xlat
dec
mov
popa
roll
xor
ja
rorl
jae
mov
mov
jle
test
rolb
test
out
push
js
jp
xchg
fsubr
pushw
sbb
pop
aas
sbb
jo
and
bound
out
outsl
push
push
ja
jns
push
test
std
scas
rclb
xchg
jns
sahf
cmpsb
stc
scas
jo
pop
mov
and
xchg
imul
cmpsl
and
xor
loop
pop
lret
stos
jns
adc
gs
mov
jae
icebp
jns
pusha
push
ds
stc
jo
push
test
imul
mov
and
decl
cmc
inc
enter
cmp
push
mov
shll
xorl
xchg
mov
xchg
scas
nop
inc
dec
push
insb
cmc
jo
xor
inc
loope
xchg
jbe
jmp
or
mov
lret
icebp
mulb
cmpsl
and
out
push
or
xchg
movzwl
ja
dec
jnp
jbe
imul
cmp
mov
arpl
jns
sti
arpl
adc
mov
aaa
mov
mov
stc
mov
jle
xchg
fadds
mov
push
sbb
mov
and
icebp
jno
mov
in
mov
pop
mov
xlat
or
cmp
sub
push
jge
add
pop
les
mov
dec
pop
xchg
push
xor
dec
ljmp
les
xor
jb
outsb
sub
repz
mov
pop
push
clc
jno
add
push
ljmp
fwait
xchg
outsl
dec
or
out
xor
lea
jg
xchg
mov
push
push
insb
and
clc
jge,pt
cmp
fs
and
dec
addr16
sub
push
sub
pop
cmp
push
dec
mov
add
outsb
and
fsubs
scas
inc
jae
push
xchg
jge
jne
adcl
test
es
push
xchg
push
mov
pop
fchs
orl
jmp
or
sub
hlt
mov
test
xchg
imul
sti
icebp
std
sahf
jp
bound
cs
push
cmpsl
lds
enter
pop
xchg
dec
sub
mov
add
fidivl
insb
fstps
dec
xorb
cmp
cmp
int
insb
arpl
mov
cmp
sub
adc
adc
ret
into
cmp
push
fcmovnu
pop
nop
xor
mov
inc
xor
pop
movsl
push
mov
cwtl
push
subb
enter
dec
sbb
jg
dec
mov
push
xchg
shlb
mov
inc
pop
mov
mov
and
dec
sub
pop
inc
sub
sbb
je
pop
mov
loopne
cmp
sub
push
push
lods
outsb
and
dec
jb
dec
dec
push
fldt
frstor
dec
inc
adcl
insl
int
repz
dec
imulb
outsl
insl
lcall
or
out
int
add
test
popa
jmp
data16
imull
mov
idivb
sub
into
push
sub
xchg
hlt
cli
aas
inc
repz
xchg
dec
inc
pop
and
push
imul
jbe
fnstsw
push
ror
dec
js
jbe
mov
insb
jmp
jbe
dec
inc
push
push
or
mov
std
add
mov
cmp
ja
add
xor
lret
mov
sbb
incl
pop
jecxz
jae
test
and
stc
lahf
pop
xchg
das
pop
push
pusha
dec
shll
mov
insl
cltd
fcoms
pusha
insl
mov
ficompl
dec
adc
mov
mov
loop
jg
mov
sbb
jmp
jle
outsl
and
jns
rolb
pusha
sbb
mov
cmp
jne
repz
adc
std
cmp
sub
lahf
std
mov
mov
push
rol
sub
cmp
js
cmpl
les
popa
cmp
xchg
pmullw
jl
movl
xor
outsb
stc
push
jb
je
or
push
enter
jle
sub
dec
adc
push
mov
adc
or
scas
js
daa
sti
stos
adc
ja
mov
mov
test
jns
xchg
xchg
cmp
dec
sub
mov
xchg
jge
mov
decb
xchg
add
or
sahf
lea
insb
adc
pop
outsl
nop
fbld
jo
in
xchg
or
mov
push
cmp
inc
mov
hlt
je
xchg
push
lcall
aam
test
inc
pop
push
ja
xor
jl
dec
xchg
mov
push
dec
mov
or
dec
jbe
xor
aas
aad
cmp
mov
add
bound
sahf
push
add
mov
movsl
ds
mov
sub
repz
bound
pop
jg
mov
dec
fidivrl
lcall
stc
mov
lea
jb
jl
push
xchg
push
loope
in
mov
pop
test
movl
icebp
jo
sub
xor
push
fists
addr16
inc
cltd
rcr
gs
pop
xchg
adc
add
cltd
push
inc
jg
mov
jp
cltd
pop
int3
pop
fs
ret
mov
cli
push
jle
xor
shrl
push
enter
cmc
sbb
jb
nopl
mov
push
dec
lods
mov
sbb
repnz
and
test
inc
mov
add
push
ja
addb
adc
jmp
fidivl
pusha
inc
cltd
test
or
shrb
inc
lcall
jl
xchg
insl
lret
frstor
and
inc
mov
jecxz
repnz
jnp
and
sub
mov
jo
cmpl
cltd
or
push
cltd
int
inc
mov
jno
jbe
add
ds
jp
cmp
jg
data16
xor
adc
xor
sar
orb
xor
push
lock
outsb
jno
fs
cli
loop
lcall
outsl
xchg
push
jecxz
jnp
arpl
je
ficompl
pop
or
andl
push
cltd
pop
bound
adc
dec
imul
jp
aas
rdpmc
pop
jl
insl
out
mov
decb
sbb
bound
dec
mov
into
std
xor
cltd
loopne
and
lcall
jl
pop
imul
jecxz
jno
js
aas
addl
xchg
mov
jne
cltd
or
jo
outsb
or
sbb
push
jl
out
lcall
mov
insb
hlt
shl
imul
clc
insb
decb
push
imul
mov
xchg
sub
jge
lret
movq
inc
jp
xor
xor
outsb
addr16
inc
jae
dec
cmp
icebp
xor
pop
mov
js
imul
pop
pop
jg
push
cli
outsb
lea
idivb
push
ror
call
pop
and
je
stc
xlat
and
xchg
dec
pop
jae
jge
or
jo
pop
jno
ds
je
ds
mov
clc
push
jno
cli
imul
mov
jns
or
fdivl
popf
lea
stc
jne
scas
clc
jg
cli
cmp
cmpsb
lods
jl
sbb
popl
adc
dec
rorb
pop
xor
jle
push
arpl
in
loopne
pop
add
jmp
pop
dec
push
js
fadds
and
rorb
out
jl
pop
xchg
or
sahf
jae
insb
clc
test
jp
aas
loope
in
sub
pop
mov
out
rol
mulb
sbb
push
les
mov
pop
push
jne
and
cld
or
cltd
adc
jge
and
push
cltd
xchg
insl
sbb
in
jle
gs
enter
dec
mov
push
insb
popa
jnp
jl
jg
and
cltd
sub
ret
jg
repnz
addr16
inc
mov
xor
pop
pop
andnps
ret
lea
mov
jns
je
roll
movsl
gs
xor
ljmp
jl
jl
jb
push
cmpsb
es
inc
outsb
inc
cltd
test
inc
clc
dec
mov
ss
sbb
pusha
jns
jge
mov
pop
loopne
pop
insl
insl
std
repnz
fs
int
imulb
cltd
xchg
cmp
or
push
call
imul
add
cli
ret
ficompl
dec
and
decl
js
inc
ss
inc
cltd
xor
inc
int
sbb
xchg
cmp
jb
ret
pusha
ja
mov
cwtl
mov
mov
xchg
dec
gs
xchg
addr16
insl
outsl
cmp
jo
sub
pop
push
rcrl
cltd
das
inc
mov
pop
xchg
test
or
sub
jns
test
mov
xor
out
dec
mov
loope
ss
ja
ljmp
sarl
push
lcall
jae
mov
pop
and
outsl
xchg
insb
xor
jmp
shrb
and
pop
ficomps
arpl
insl
mov
jne
mov
mov
jg
stc
inc
loop
cmp
gs
jo
mov
icebp
sti
pop
pusha
xchg
test
sub
adc
sarl
jae
xchg
jle
dec
pop
addl
cmp
push
cmp
cmpb
ds
push
std
cmpsl
daa
inc
push
imul
fdiv
add
mov
sbb
bound
xor
or
push
pop
inc
stos
push
add
rorl
pusha
stos
lods
int3
jb
lea
mov
pop
in
inc
imul
fs
pushf
push
xor
xor
mov
mov
add
cli
out
and
in
push
fildl
in
mov
xor
ljmp
mov
movsl
push
sub
jns
pop
shll
jmp
and
xchg
in
ds
dec
std
in
cli
pop
push
shl
subb
aam
cmc
testl
inc
mov
stos
adcl
cld
cmc
neg
fst
scas
jmp
ss
dec
and
xchg
and
jp
lds
fcomps
cmp
fstl
cmp
pop
inc
std
dec
enter
mov
xor
mov
jns
push
mov
rcrb
sti
jo
jo
jle
push
push
pop
pop
lea
and
xchg
repnz
jle
sahf
push
clc
xorb
pop
jp
cmp
mov
and
popf
test
inc
or
aad
jbe
jle
sub
notb
pop
test
jl
arpl
or
pushf
and
iret
mov
shrl
fnstcw
out
mov
cmp
mov
xchg
adc
sbbb
fstpl
lea
jae
imul
cmpsl
xor
pop
add
pop
pusha
repz
sbb
push
xchg
and
push
vmwrite
add
jl
or
outsl
jp
arpl
or
imul
jo,pn
jle
movups
cmpl
mov
flds
fsubl
lahf
inc
dec
insb
dec
add
jp
les
mov
cltd
push
mov
ret
sub
fwait
lahf
sbb
imul
cmpb
and
jge
dec
inc
jle
add
mov
xchg
hlt
ret
adc
sbb
das
mov
mov
data16
xchg
cli
int3
xchg
jmp
clc
push
push
stos
jno
outsb
pop
inc
cld
and
inc
shll
push
pusha
add
aaa
fidivrl
cmp
addr16
pop
cmpb
push
push
repz
dec
xchg
ds
and
or
pop
mov
adcl
shld
push
rcrl
and
loopne
mov
jge
lea
fs
push
sahf
fwait
xchg
movsl
aam
filds
rorl
daa
pop
dec
pop
data16
cmp
data16
or
gs
mov
jle
mov
punpcklbw
ret
inc
cltd
icebp
repz
outsl
and
push
jle
jne
lcall
sbb
add
icebp
jb
push
or
inc
cs
jp
xchg
xor
push
and
jo
dec
scas
cwtl
test
pop
rcrl
or
xor
cmp
test
xor
push
cmp
mov
test
das
shlb
sbb
cmpsb
dec
xchg
mov
xchg
outsb
sub
shlb
outsl
inc
aas
sti
mov
sub
adc
in
out
leave
jo
cmp
inc
cmc
xor
inc
rorl
mov
out
pop
xor
jnp
jp
je
mov
ljmp
loop
cmc
push
clc
mov
pop
pop
insl
push
data16
pop
jb
add
pusha
cmp
rcl
rorb
stos
pop
jp
sbb
cmp
push
nop
shlb
sahf
andb
pop
mov
addr16
mov
fcom
out
pop
push
pop
scas
jnp
sti
lods
imul
out
or
std
int3
xchg
loopne
stos
repnz
inc
lcall
out
dec
and
pop
inc
outsb
push
add
jecxz
sbb
pusha
loope
aaa
pop
pusha
ljmp
sbb
cmp
insb
shlb
pop
mov
fstpl
mov
jg
repnz
lcall
inc
pop
xlat
popw
call
inc
ret
pop
push
push
mov
stc
cmp
sub
fidivrl
mov
ret
js
arpl
jnp
pop
out
mov
mov
mov
inc
mov
cmp
adc
add
addl
push
inc
jae
jl
rcrb
xorl
and
add
jmp
decb
and
jnp
ret
test
push
jge
ret
outsb
add
xor
xchg
add
jle
outsl
push
jl
inc
mov
cmp
sub
sbb
outsb
daa
sti
out
bound
aas
ljmp
sbb
arpl
inc
in
adc
push
dec
and
int3
xchg
xchg
and
or
pop
ret
clc
call
bound
inc
in
push
imulb
jp
dec
pop
pop
pop
mov
push
inc
sbb
std
andl
push
loopne
mov
push
lret
in
movlps
jp
xlat
cmp
sub
rorb
xor
jp
inc
jne
popa
sub
daa
out
fsubrs
adc
pop
lcall
std
jae
xchg
mov
jo
cmc
xor
push
mov
shll
jp
addl
mov
jle
xchg
xchg
out
into
aam
xor
repz
loop
mov
sub
add
divl
inc
repnz
pop
orb
ja
xchg
lock
loope
inc
sti
pop
or
push
lock
std
inc
outsl
sbb
adc
in
jns
es
pop
push
out
xor
cmp
lcall
or
xor
pop
mov
xor
outsl
decl
add
cmp
or
mov
inc
test
clc
jb
push
stc
dec
loope
xchg
adc
loopne
add
add
call
incl
mov
pop
lcall
cltd
aaa
divb
rorl
fs
mov
pop
push
push
sub
fstps
aam
mov
mov
lcall
push
jge
loope
sbb
jno
push
fimuls
nop
adc
lcall
ret
cmp
ljmp
jo
jl
jp
jno
cmp
data16
ret
dec
shl
aad
scas
dec
pushf
cmp
outsb
jge
mov
icebp
xor
jb
std
insb
testl
jge
fcomps
mov
cmp
je
jecxz
sbb
sub
pop
sub
jl
and
or
inc
push
mov
inc
lret
imull
inc
mov
sbb
mov
daa
sbb
lcall
sub
sub
je
inc
or
test
fs
arpl
dec
inc
lcall
mov
icebp
aaa
ja
mov
inc
add
jno
mov
orl
clc
out
xor
mov
and
xchg
mov
ud2
mov
xchg
lahf
add
gs
pop
inc
cmp
xchg
cmp
insb
in
add
mov
mov
cmp
and
outsl
js
or
iret
xor
cltd
in
xchg
mov
and
pop
cmpsl
push
cli
femms
jl
sbb
sub
subb
inc
mov
enter
inc
std
movsl
push
ret
mov
sarb
jg
mov
jle
je
decl
fsts
dec
nop
arpl
dec
cmp
jp
cmp
mov
cmpsl
cmpl
js
jl
pushl
cmpl
xchg
insb
fucomp
inc
sarl
lods
imul
es
jge
add
jne
rorl
mov
jne
add
adc
outsb
lcall
ret
filds
mov
xor
jge
ret
jns
mov
pop
sbb
je
jb
jne
sub
xor
fidivrl
mov
mov
cs
and
lods
push
xchg
ret
ret
popa
imul
inc
add
sub
pushf
sub
and
pop
sub
mov
das
push
mov
push
orb
ret
pop
das
push
jecxz
es
test
repnz
addl
sbb
or
pushf
inc
xor
cltd
jge
pop
sub
jge
ret
loop
loop
je
and
and
ja
test
jg
dec
add
mov
pop
fstpl
repnz
jl
nop
pop
xor
xlat
out
push
sub
mov
or
fs
mov
dec
mov
loope
sar
jle
loop
and
mov
and
mov
lahf
sub
cmpsl
dec
ljmp
push
aam
mov
lcall
pcmpgtw
pop
xchg
push
ds
mov
jecxz
in
fadds
dec
push
shl
lret
cmp
fimull
pop
mul
clc
lcall
outsb
add
pop
test
or
sti
cmc
adc
xchg
pop
popa
push
xchg
and
dec
test
inc
jns
cvtps2pd
daa
jnp
dec
push
repnz
xchg
dec
cmc
inc
mov
ja
imul
sbb
push
pop
sbb
or
push
scas
xchg
test
in
jmp
dec
pusha
pop
adc
mov
mov
mov
lret
xorps
push
dec
pusha
cmp
pop
push
mov
sbb
and
and
mov
push
lcall
cmp
dec
jl
inc
jecxz
jne
out
testb
cld
mov
outsb
push
jno
std
pop
xor
fisttpll
outsl
sub
pusha
inc
inc
ljmp
ret
call
insl
fxch
cwtl
pop
inc
cmp
fdivp
add
and
rclb
loop
mov
js
jo
ficompl
jne
loop
gs
jle
movhps
jnp
lret
mov
push
fldcw
idivb
pop
dec
jno
cli
inc
mov
adc
inc
cmp
je
dec
sbb
and
jno
shrb
sbb
sub
bnd
mov
sub
addr16
rcrl
push
mov
push
cld
loop
inc
xchg
inc
add
insb
pushl
ss
cmpb
in
fisubl
xchg
movsb
cmc
cmp
test
ret
dec
cwtl
daa
mov
inc
loopne
push
insb
mov
jmp
pop
inc
pop
lea
sarl
mov
mov
add
push
sub
ds
out
std
clc
mov
out
pop
outsb
cmc
cli
mov
and
mov
je
cmp
roll
mov
pop
pop
lret
sar
js
adc
mov
inc
sahf
lods
dec
insb
clc
jg
jns
push
xor
pop
ja
bound
jmp
ret
mov
mov
sub
xchg
adcl
mov
enter
aas
inc
mov
into
and
or
add
xor
and
add
mov
xchg
inc
out
mov
ja
lea
inc
sahf
out
mov
packssdw
packsswb
pop
ret
push
sbb
inc
mov
jl
xor
inc
jo
mov
js
imul
jne
aas
incl
leave
popa
mov
pop
fcomi
sbb
int3
shlb
out
dec
dec
das
rorb
xor
add
cmc
and
or
ja
jl
addr16
test
mov
orl
mov
mov
cld
pop
lret
enter
lret
lcall
nop
sub
iret
imul
dec
jg
jo
inc
loope
cmp
add
movsb
push
xchg
lds
mov
stc
and
pushf
aad
xor
inc
inc
push
add
sub
push
div
negb
sub
mov
push
scas
pusha
sub
in
push
std
dec
out
jg
jge
push
mov
lcall
gs
sarl
in
pop
sbb
daa
push
jmp
in
push
sub
cwtl
inc
outsl
loope
fiadds
push
dec
out
add
test
cltd
mov
das
dec
loop
xor
xchg
js
cli
lods
jb
scas
mov
inc
stos
imul
lcall
cmp
or
enter
dec
xchg
outsb
cmp
pop
outsb
jl
fisttps
jae
and
push
outsb
test
or
test
test
je
std
stc
dec
andl
pop
add
jg
ds
xor
mov
jmp
daa
imul
cmp
sub
cli
mov
lods
mov
outsb
pop
mov
filds
dec
xchg
aas
jo
jge
mov
inc
clc
test
push
push
dec
push
sbb
dec
jo
push
mov
std
jg
mov
add
lcall
int3
pusha
mov
jge
sbb
push
ffreep
inc
imull
mov
cld
stc
cmp
push
add
out
push
int
movsl
xchg
mov
adc
jne
or
cmc
sahf
dec
inc
ficoml
xor
movsb
jp
adc
repnz
jbe
xchg
jo
scas
aaa
rcll
outsb
jl
cmp
cmp
js
add
cmp
lret
xor
pusha
inc
cwtl
dec
in
inc
imul
bound
inc
dec
jg
jle
cltd
lds
bound
jns
lcall
stos
fdivrl
xchg
cmp
sbb
inc
das
sub
js
jo
into
dec
mov
lods
and
sbb
push
pop
xchg
pop
jne
lcall
inc
lret
data16
xor
repz
imul
out
jbe
jmp
dec
fs
xchg
inc
mov
mov
nop
push
mov
aaa
jne
mov
mov
and
jp
mov
subl
aad
dec
or
push
movsl
pop
pop
dec
pop
sub
xor
mov
pop
sbb
outsb
idivl
sub
lcall
xchg
das
adc
pop
faddl
cld
lcall
rclb
inc
and
mov
mov
jge
mov
test
mov
add
out
inc
insb
lods
xchg
shl
dec
mov
int3
and
scas
mov
xor
sbb
dec
xor
cmp
jge
jne
sar
push
push
addr16
cmp
repnz
lret
add
lcall
sub
jb
insl
mov
lcall
scas
jo
inc
out
xor
into
jno
push
cli
jge
jecxz
mov
push
scas
xchg
sbbb
jb
or
add
pusha
xor
cmp
data16
sbb
dec
in
ret
and
inc
and
jp
or
push
cli
mov
dec
imul
add
dec
cmpsb
cmp
jp
aas
xchg
cmp
push
mov
js
fsubrs
outsl
lret
sub
jge
xor
rcrb
aam
cmove
push
pop
cmp
push
add
mov
add
cli
imul
es
cli
fcomp
dec
pcmpgtw
fsubrs
subl
mov
push
jg
in
pop
adc
sbb
push
push
insb
and
cmp
cmp
cltd
pop
repz
test
testl
or
mov
iret
ds
gs
jae
inc
fimull
dec
loop
sub
jns
sub
sbb
sub
pop
mov
addr16
loope
gs
add
adc
jbe
inc
js,pt
xorl
sti
pop
jo
mov
ja
pop
or
lods
js
outsb
aas
inc
cmp
pop
mov
nop
pop
data16
xchg
pop
fsubrp
ja
ret
mov
inc
repz
dec
ja
aaa
jle
cmp
dec
lret
inc
mov
cmp
and
add
pop
sbb
push
loope
cmc
jmp
int3
pop
aaa
sub
test
fiadds
jge
lret
insb
inc
repnz
xchg
inc
orb
cmp
rcrl
shlb
sbb
lcall
sahf
add
fidivrs
es
inc
or
imul
outsl
push
cmc
pusha
into
outsl
sti
pop
lea
mov
pusha
stos
mov
outsb
inc
or
jae
pop
aam
je
jnp
sbb
leave
into
aaa
aas
in
sub
fisttpll
xchg
in
ss
push
jno
fisubrl
cmp
fs
ret
outsb
int3
inc
scas
aas
dec
push
pop
jno
sbb
fisubl
inc
adc
xchg
pop
xchg
xlat
fwait
sub
in
lods
dec
mov
jns
cltd
xchg
js
in
jo
movsl
push
sub
pop
stos
aad
ja
out
lcall
movsl
dec
jge
fistpl
jns
xchg
dec
cmp
iret
xor
adc
fs
gs
and
and
push
mov
jle
xchg
or
jb
fwait
aaa
adc
mov
cltd
sub
sub
and
rcrb
push
push
cmp
into
push
xlat
mov
imul
adc
xchg
repnz
scas
in
dec
sub
mov
shll
mov
jns
insl
xlat
fs
gs
mov
inc
inc
mov
jae
pop
imul
js
mov
cmp
dec
push
lret
mov
jnp
and
mov
mov
movsl
jecxz
movsb
cmp
dec
xor
sar
or
inc
lcall
bound
lret
test
fldenv
cwtl
lcall
mov
and
stos
sub
inc
xchg
insl
out
aad
adc
cmp
cmp
fdivr
insb
stos
jmp
cmp
les
and
sub
shlb
sarw
mov
fnstenv
mov
movsl
pop
lcall
and
and
dec
and
fidivs
repnz
add
pop
jg
jmp
ss
testl
xorl
sbbb
sbb
sbb
lock
or
xor
pop
sbb
xchg
cmp
cmp
cmp
inc
pop
and
xchg
or
cmpsl
mov
xchg
pop
jno
idivl
dec
outsb
cmc
je
test
push
js
fistps
cmc
push
outsb
mov
pop
stos
sti
dec
dec
mov
subl
shrl
push
mov
or
sub
aad
decb
push
insl
insl
mov
mov
adc
dec
pop
mov
jnp
xchg
pop
inc
incb
outsl
sub
leave
in
pop
sub
push
jge
xchg
cmp
aad
outsb
add
cmp
push
imull
and
jle
jle
insl
push
push
sbb
sbb
lock
jg
sub
imul
sbb
push
insb
ret
mov
cmp
xchg
sub
xlat
add
mov
xor
in
lods
insb
cs
jno
jo
ljmp
movaps
xlat
pop
pop
mov
stc
js
or
aad
mov
test
and
arpl
insl
lock
cmp
pusha
imul
shr
lret
jb
push
sbb
cld
push
push
jne
sbb
xchg
bnd
xor
lds
pop
insb
or
ja
jno
outsl
pop
subb
jb
sub
mov
xor
jl
jg
insb
pop
aas
rcrl
and
adc
mov
test
push
aaa
test
xchg
jne
mov
movsb
mov
dec
hlt
rorl
outsb
xor
pop
loope
xchg
jno
push
faddl
vmwrite
cltd
rcr
test
ret
hlt
es
mov
fiaddl
stc
and
dec
jb
lock
adc
test
out
xlat
jmp
or
inc
inc
push
mov
out
mov
cwtl
cmp
das
pop
and
pop
bound
addr16
cltd
xor
mov
cmp
push
je
xchg
aam
and
imul
xchg
pop
cltd
jl
popf
es
jne
orb
sub
pushl
jae,pn
fsubs
mov
fnstsw
rcl
outsb
jge
ret
insb
test
movsl
pop
test
in
inc
xchg
adc
clc
in
pop
push
mov
or
xchg
aas
xchg
stos
dec
mov
push
push
lods
cmp
call
mov
sub
sub
scas
cmpsl
pop
jl
ss
xchg
jecxz
sbb
jl
jb
and
inc
cltd
mov
add
jno
mul
sub
sbbb
jle
lods
outsl
mov
in
and
pop
aad
pop
es
jge
stc
in
int
shrb
jg
mov
popa
mov
mov
repnz
jae
ret
inc
fildl
mov
jg
mov
sbb
xor
sbb
inc
push
ss
aad
or
out
and
int3
sahf
jle
js
notb
lcall
push
shl
mov
lods
popa
inc
mov
jnp
adc
pop
aad
loope
sbb
xor
cmpsb
jge
out
icebp
xchg
outsb
mov
rcl
cld
push
ljmp
inc
in
aam
push
add
lds
add
mov
push
fistps
push
xchg
jbe
push
xchg
jns
test
lods
icebp
dec
outsb
push
aad
pop
xchg
rcrl
leave
push
rclb
mov
or
mov
gs
adc
jb
cmpsb
mov
sub
jae
movsl
iret
les
popa
adc
add
mov
data16
push
jp
mov
pop
int
dec
inc
mov
mov
lea
add
jge
mov
xorb
jbe
jne
cmpl
jmp
jae
fidivrs
popa
mov
jbe
cmpsl
push
push
test
sbb
mov
clc
jp
sub
push
sub
mov
gs
imul
or
jns,pt
push
lret
lcall
fmull
outsb
imull
repz
mov
wrmsr
inc
push
push
and
repnz
decb
popa
pop
push
mov
not
and
adc
jge
and
mov
pop
push
cli
pop
cmpsb
adc
popa
or
add
dec
insb
add
xchg
push
ret
xor
jg
or
in
pop
inc
xlat
mov
je
dec
mov
mov
add
jb
cltd
xor
rcll
ja
dec
cmp
xor
jb
sub
cmp
je
adc
dec
push
lahf
pop
fwait
sub
sbb
dec
xor
fs
inc
cmc
enter
shlb
add
adc
aaa
lea
xchg
or
adc
sbb
adc
push
xchg
imul
lret
cmp
das
sub
scas
outsb
jp
insl
mov
jle
sub
imul
sbb
cmp
loop
in
xor
pop
push
cmp
inc
pusha
jecxz
push
in
push
cmp
inc
insb
xchg
sbb
cmp
pop
addps
cmpsl
push
push
jle
pop
xorb
pop
popa
cmp
mov
sub
push
pop
mov
cmpsb
stos
sbb
nop
mov
sbbl
xchg
movsl
pop
out
daa
into
push
mov
bnd
mov
pop
rolw
pop
bound
cmc
nop
mov
jo
jg
mov
pusha
pop
mov
cwtl
push
arpl
xchg
mov
cmpsb
adc
and
push
xchg
cmp
jg
imul
jle
out
hlt
into
outsl
js
jle
sbb
or
pop
scas
dec
ljmp
adc
aaa
das
xchg
lods
xchg
outsb
jmp
add
mov
daa
je
or
jmp
and
sahf
mov
repz
jns
sub
jo
out
or
mov
jno
out
ficomps
testb
mov
pusha
hlt
lahf
inc
push
xor
mov
xchg
lret
jle
mov
jne
pop
out
lcall
dec
aas
push
imul
xchg
inc
mov
std
sbb
imul
insl
jl
stos
ficompl
jbe
fidivrl
ja
xchg
into
pop
jle
aas
xchg
jns
test
insl
cmp
push
loop
mov
dec
ret
mov
arpl
jbe
dec
pop
inc
cmp
cmc
jg
bound
int3
stos
mov
js
jbe
repz
bound
js
inc
push
pusha
bound
xchg
cmp
fwait
jecxz
jle
ja
movsb
and
mov
jae
mov
test
sarl
loopw
stc
or
cmpsl
dec
and
mov
gs
cmp
pop
cwtl
sub
jb
xor
xchg
jne
push
data16
jno
movsl
jnp
inc
lcall
push
das
and
xor
cmpsl
inc
mov
stos
xlat
lcall
outsl
xchg
pusha
xchg
pusha
mov
bound
mov
int3
mov
inc
mov
cmp
aam
addl
and
xchg
mov
adc
js
cmpl
insb
stos
push
mov
outsb
mov
xchg
ljmp
cmp
cmp
jnp
push
jg
movsl
inc
mov
xchg
pusha
in
das
sub
shl
into
daa
andps
inc
dec
add
lcall
mov
stos
insb
mov
adc
lcall
insl
je
jae
mov
call
scas
mov
loope
lret
cmp
rcrb
icebp
push
cli
jo
mov
sub
jb
push
inc
push
std
repnz
jbe
xorl
mov
xchg
mov
xchg
adc
leave
sub
outsb
push
icebp
pop
mov
pop
cmp
std
xor
imul
lret
test
and
pop
mov
sbb
in
sti
jo
js
cmp
xchg
cmp
divl
dec
daa
subb
jns
lock
push
jns
sbb
notb
cs
push
add
scas
loop
mov
clc
cmp
jg
sbb
jne
lret
and
push
arpl
sar
mov
add
mov
lods
ss
cmp
lahf
movsl
stos
dec
mov
mov
xchg
iret
sub
fcom
sahf
test
loopne
cmp
jno
scas
sar
sbb
shr
imul
jl
pop
and
and
xchg
jb
sub
lret
ficoms
pop
nop
xor
call
or
sbb
jne
test
bound
stc
int3
cmpsb
adc
pop
jbe
xchg
and
pop
bound
fcmovnu
xor
adc
cmp
lods
and
xchg
sub
aas
dec
bound
push
sub
je
add
imul
test
popa
jns
jle
adc
outsl
ja
inc
inc
cmc
pcmpeqb
jb
cmp
add
xchg
in
movsb
addr16
cmova
add
insb
call
xchg
mov
addr16
ljmp
int3
aad
dec
mov
fwait
shlb
fdivl
jge
pop
jmp
jle
jae
shrl
cltd
pop
ljmp
add
jbe
adc
xor
ss
iret
inc
fidivs
addl
shr
mov
fdivrs
pop
jbe
imul
mov
outsl
or
addr16
jge
sub
mov
xor
data16
adc
jbe
cmp
cmp
add
dec
sbb
je
lcall
xor
jmp
xchg
and
movsb
push
sbb
loope
jmp
jl
shrl
xchg
fwait
cmp
adc
pop
rcll
sahf
dec
outsl
lock
mov
cmp
sbb
in
push
jle
pop
add
jae
xchg
add
test
dec
fsubrs
stc
stos
aas
xor
out
push
test
outsb
cmpl
adc
loopne
fstpl
enter
ja
jg
test
mov
push
mov
jns
cmpsl
push
adc
and
mov
jo
lcall
pop
call
and
frstor
test
xor
xchg
ss
push
cli
inc
clc
pop
lods
push
scas
jbe
lcall
dec
inc
jg
in
mov
add
or
pop
xor
out
inc
filds
addr16
fnstsw
lcall
inc
pop
mov
and
loopne
or
cmp
xchg
fidivs
aaa
jbe
mov
sarb
xor
and
test
mov
sub
and
pushl
inc
xchg
cmp
test
mov
push
jg
stc
std
adc
cltd
out
sbb
mov
insl
inc
jbe
fsubl
inc
jns
or
cli
sub
jmp
rcrl
pop
xchg
les
jle
movsl
jge
mov
add
jne
mov
push
jg
mov
push
hlt
bound
jns
in
jge
aas
stc
loopne
pop
mov
aaa
and
push
xlat
lds
dec
pop
fucomp
add
jb
negb
pusha
push
jl
add
cmpsb
clc
xchg
shll
mov
sbb
das
xor
clc
aas
je
mov
and
out
clc
cltd
pop
dec
in
add
fs
adc
xchg
roll
xchg
stos
sub
mov
mov
mov
lea
jae
fisubrs
outsl
mov
das
dec
pop
lahf
cmpsl
ret
xchg
mov
jns
xor
jl
ret
cld
cltd
and
je
add
jg
mov
mov
lret
nop
push
add
sbb
rorb
sbb
jg
test
push
jb
inc
jg
dec
jo
pop
in
hlt
add
push
push
push
mov
imul
pop
jp
cmp
fimuls
cli
scas
inc
or
in
push
adc
cvttps2pi
push
push
pop
outsb
add
js
adc
adc
cltd
lahf
pusha
lods
ficompl
cmpsl
out
jle
sub
out
push
cltd
scas
xor
push
call
xchg
push
xchg
xor
mov
xor
movsb
jno
imul
mov
bound
fists
jbe
add
ljmp
lcall
sbb
pop
lcall
pop
pop
test
outsb
xor
icebp
mov
xchg
test
arpl
xchg
mov
loope
repnz
out
das
dec
push
push
clc
mov
mov
fdivp
mov
adc
mov
ficomps
pop
sbb
xor
mov
jb
mov
mov
inc
push
addr16
mov
mov
popa
add
fidivs
jno
sbb
or
push
cs
fildll
push
push
loopne
out
and
pusha
popa
mov
push
mov
push
mov
jg
arpl
shlb
inc
inc
loope
popa
or
idivb
into
push
ljmp
jp
xchg
mov
faddp
aas
push
and
mov
inc
dec
mov
ficomps
mov
or
outsl
test
das
sbb
das
mov
mov
xor
fidivs
arpl
mov
popa
out
sbb
xor
fimuls
or
sbb
das
cmc
push
xor
sub
pop
jae
cmp
sbb
test
pop
outsl
pop
xor
add
sbb
dec
insb
nop
jne
test
ss
sub
pop
sti
out
xchg
dec
and
lcall
mov
xchg
jbe
mov
movsl
popa
pop
movb
ds
in
dec
cmpsb
or
inc
inc
mov
push
cli
inc
mov
xor
out
jp
test
test
int
sahf
pop
push
mov
sbb
test
push
test
test
pop
pop
mov
and
pop
clc
orl
mov
dec
pop
fnstcw
jae
incl
loop
add
push
test
adc
xchg
stc
insb
pop
jnp
pop
js
pop
es
xor
xor
sub
dec
pusha
jbe
jno
imul
andb
lahf
add
stos
or
js
jae
adc
cli
pusha
push
dec
decl
mov
jle
lods
pop
in
cwtl
fsubs
cmp
jb
pop
enter
sbbl
rorb
loope
jp
mov
pop
xchg
ss
neg
dec
daa
xor
sbbl
add
dec
mov
pop
ficoml
stos
stc
cmp
outsb
test
stos
mov
shll
push
push
andb
mov
cmpsb
inc
lcall
inc
imul
push
sahf
insl
mov
add
mov
fs
loop
push
mov
jnp
sub
cmovbe
push
ret
mov
addr16
inc
lcall
add
mov
push
pushf
jle
add
jns
inc
orl
daa
mov
ljmp
or
mov
movsl
add
mov
and
jmp
ja
dec
mov
sub
stos
les
icebp
popa
testb
or
push
xorl
xor
bound
jb
jno
pusha
test
sub
inc
pop
mov
lret
mov
sahf
lea
ror
mov
test
fidivl
repz
jbe
mov
nop
sarl
cwtl
jg
decl
pop
dec
in
or
pop
adc
mov
sub
cs
or
push
add
pop
pusha
addr16
pusha
outsl
jp
inc
or
mov
inc
jmp
mov
sarb
daa
stos
out
mov
adc
and
stos
sbb
incl
adc
jp
push
inc
sub
jle
or
xor
xor
mov
jno
xchg
aaa
fidivl
js
fstpl
jae
stc
fistl
lock
out
ja
stos
inc
xchg
ret
ja
or
xor
pop
and
jo
inc
push
mov
rorl
push
sub
das
in
mov
jnp
xchg
add
sub
int
js
mov
testl
or
into
loope
js
xorl
hlt
or
ljmp
cmove
mov
sub
pusha
sub
lcall
ja
sub
lret
ljmp
mov
jp
mov
outsl
pop
aam
lret
rorb
dec
pop
and
loope
icebp
fstl
jae
mov
gs
mov
fildll
lret
scas
cli
shll
cs
vdivps
push
xlat
nop
pusha
dec
inc
scas
enter
mov
scas
xchg
js
in
lret
add
mov
push
outsl
mov
jmp
xchg
inc
pop
pop
test
sub
hlt
mov
xchg
sub
pop
aas
sar
mov
mov
lret
cmc
inc
ljmp
push
ja
jge
cmp
mov
insl
mov
dec
rorl
pushf
aas
fs
xchg
sahf
leave
sti
stc
jle
cld
push
pop
dec
push
or
aam
shld
int
sub
lret
jne
stc
jae
lock
test
lock
dec
lcall
lret
shll
rol
pop
cmp
jo
xor
inc
push
jge
pop
in
enter
sbb
jne
dec
xchg
mov
mov
xchg
jg
mov
pop
stos
popa
push
inc
mov
add
out
cmp
jmp
divb
dec
jno
push
and
lds
roll
add
jle
inc
inc
bound
dec
mov
push
stos
mov
jge
inc
rorl
jb
xchg
jmp
jns
and
mov
push
sub
jb
mov
fwait
popa
adc
add
in
or
sub
into
pop
and
in
mov
mov
cmp
imull
jg
sti
xchg
cltd
sub
fnstenv
pop
insb
xor
xchg
sbb
sarb
sub
inc
outsb
in
es
je
inc
or
fidivrs
test
jbe
and
clc
jno
mov
push
cli
imul
and
cmp
xlat
jno
jmp
mov
pop
jo
stos
mov
mov
cmp
jo
jp
andb
sub
bound
mov
mov
lcall
incl
outsb
push
data16
ljmp
mov
sub
inc
ret
add
add
or
lods
mov
cmp
imul
sub
mov
bound
pop
pop
addr16
lcall
jo
mov
mov
sbb
adc
pop
ret
inc
inc
inc
jle
fdivs
das
sub
push
pop
add
mov
outsb
sub
xchg
outsb
xlat
and
mov
or
or
cmp
arpl
adc
aad
sarb
lcall
push
mov
xor
ja
inc
cmp
pop
cmpsl
shrb
push
cmp
testl
enter
mov
fdivrp
call
pop
xchg
dec
jae
xor
add
mov
push
jle
or
aas
ret
and
jb
add
repz
or
pop
jo
mov
dec
dec
jb
inc
add
xor
dec
inc
add
inc
insb
mov
inc
lock
add
test
cmpb
fst
mov
jns
cltd
pop
adc
add
cltd
les
shlb
push
xchg
xor
push
stos
xchg
sub
sub
jle
lods
cltd
fdivrs
sub
pop
fnstsw
and
push
test
sub
mov
mov
and
cli
xchg
and
pop
or
ljmp
xor
in
lea
mov
xchg
js
pop
rclb
outsb
xchg
pop
repz
insl
xor
mov
jp
mov
les
mov
enter
cmp
or
cmc
rdmsr
nop
inc
jmp
loopne
xor
movsb
mov
add
xor
inc
lahf
jl
jbe
pusha
mov
andb
jnp
push
icebp
cpuid
fidivl
xorl
cmp
in
shll
imul
push
sbb
add
jb
add
cvtps2pi
mov
cmpsl
fs
dec
das
enter
outsb
cmp
xchg
fldl
jbe
jg
mov
lock
subl
jne
out
jl
fiadds
dec
dec
xchg
mov
mov
xchg
dec
adc
int
cmp
cltd
fcmovu
icebp
rol
add
sub
cmpb
lea
popa
loope
sub
push
dec
arpl
sub
lcall
dec
cs
adc
aaa
jge
sbb
xchg
inc
stc
gs
mov
jb
dec
outsl
inc
cmp
out
jb
add
adc
push
mov
adc
push
push
out
sub
sar
cmp
jnp
mov
insb
sahf
jno
ja
adc
mov
sub
fsubs
jecxz
arpl
adc
xor
or
popf
mov
sub
xor
add
cmp
dec
call
dec
ficoms
scas
pop
movsb
icebp
rorb
jo
xchg
rsm
stc
in
lcall
cs
inc
bound
incl
aaa
add
rcrb
or
outsl
fimull
je
adc
sub
pop
xchg
subl
dec
adc
sbb
cmp
cmp
dec
hlt
jbe
inc
mov
stc
mov
outsb
pop
testl
icebp
pusha
pop
jb
jae,pt
mov
xchg
push
divl
or
aaa
out
inc
pop
push
clc
add
call
pop
out
pop
loope
jnp
outsb
fadd
out
clc
jmp
push
pusha
cltd
xchg
outsl
mov
xor
ss
popa
fstpl
sahf
jp
rcll
test
xor
std
adc
jp
test
jae
les
jnp
pop
into
das
xorl
sub
push
dec
lcall
mov
add
mov
repnz
pop
xor
popa
std
outsb
cmp
inc
loopne
mov
cmp
xor
iret
mov
negb
push
or
xchg
sub
push
pop
shrl
sub
cltd
push
mov
mov
mul
mov
addr16
jle
jno
fsubrs
adcl
popl
bound
pop
cmp
sbb
or
mov
orl
cld
push
push
in
pusha
jbe
mov
xchg
xlat
xchg
xorb
scas
lock
subl
adc
jb
movlps
pop
mov
xchg
and
pop
leave
or
lcall
mov
negb
dec
add
push
rolb
dec
adc
packsswb
iret
push
push
stc
dec
xchg
ja
dec
sbb
cltd
fistpll
pop
inc
xor
mov
in
cwtl
mov
inc
mov
jnp
sub
cmp
call
add
out
xchg
xor
inc
pop
mov
insl
lea
xchg
popa
es
push
pop
mov
aas
jg
pop
inc
orb
testb
lret
movsb
je
jae
and
and
cld
and
dec
and
sub
daa
aam
bound
mov
inc
inc
imul
and
pop
sahf
shll
fiaddl
shrb
push
jno
into
push
je
adc
or
testl
inc
xchg
inc
aaa
stos
je
push
addb
inc
mov
ficompl
rolb
es
mov
in
adcb
rolb
inc
add
fnstcw
mov
daa
das
sbb
pop
pop
les
xchg
outsb
mov
mov
xchg
pusha
cmpsb
inc
and
insb
and
sub
jnp
push
outsb
add
in
and
fs
cmp
pop
aam
adc
outsl
subb
test
scas
das
cmp
and
or
ljmp
inc
ja
bound
stc
and
test
cmc
jle
or
dec
icebp
sti
mov
xchg
outsl
cmovs
xor
jo
adc
mov
nopl
cvtpi2ps
addr16
repz
fistpll
addb
push
mov
roll
pushw
mov
add
cmpsl
inc
dec
add
lcall
cwtl
mov
cmc
sbb
stos
stos
ret
out
cmp
into
xor
inc
jo
out
cmpsl
iret
stos
test
mov
out
iretw
jge
insl
rcl
pop
out
add
push
jle
jp
jl
cmc
xor
bound
mov
jle
jns
adc
push
jnp
xchg
jmp
loope
cmc
cmp
incb
push
mov
and
push
shlb
xor
in
es
xor
xlat
mov
sub
repnz
mov
xchg
pop
cmp
pop
xchg
sarb
sub
xlat
mov
pop
das
push
cld
adc
xor
jb
in
movaps
xor
adc
jbe
jp
mov
ja
push
lock
cmc
sub
push
mov
jbe
iret
jne
xchg
and
mov
mov
push
outsb
addr16
sub
pop
jbe
mov
fistps
jp
mov
jno
jne
pop
orb
jbe
std
outsb
cmp
and
jle
xor
cli
jns
addl
jb
fldenv
fiaddl
sbb
mov
rcll
mov
testb
fidivs
cld
pop
jo
xchg
dec
pushf
dec
xchg
outsb
push
cmc
data16
xchg
xchg
xchg
pop
rolb
push
add
cmp
jnp
or
enter
push
push
bound
pop
fs
loopne
add
mov
cmpb
popa
andl
push
pop
sub
iret
imul
out
mov
jb
jle
jbe
cmp
jp
or
lea
push
sub
outsl
xor
inc
in
push
mov
into
les
lahf
jmp
mov
push
out
out
push
xorl
xchg
adc
gs
and
je
or
dec
push
mov
jl
inc
lods
pop
cltd
stos
test
sbb
mov
outsb
adc
add
inc
incl
data16
les
lods
popa
pminub
ss
jle
pop
call
aaa
mov
into
sbb
inc
test
adc
jmp
jge
stc
xor
jbe
inc
shr
push
mov
and
xchg
cwtl
inc
mov
out
xor
jle
mov
inc
jne
and
int3
xor
adc
jns
push
and
pop
bound
add
xor
jnp
add
push
movb
icebp
and
xchg
jns
imul
push
pop
pop
lock
sbb
imul
fmul
rcrb
jl
ds
add
cmp
push
loope
add
loopne
icebp
mov
roll
push
xor
ret
push
xchg
js
xor
loope
std
jns
jp
jae
in
inc
cmp
fdivrp
test
sub
popa
test
aas
out
ja
lahf
add
movsl
sbb
jmp
jle
xlat
jo
or
outsl
sbb
int3
outsl
lret
outsb
inc
or
icebp
mov
negl
push
sti
pusha
pop
or
ljmp
cmp
add
sbb
xor
nop
mov
js
jge
jo
xorb
jp
mov
cmp
mov
fs
mov
outsb
push
scas
imul
loopne
xor
cmp
mov
mov
cmp
xchg
or
decb
in
test
scas
lcall
xor
jmp
loopne
imul
arpl
dec
adc
fwait
jno
or
test
stos
loope
insl
addr16
jge
xchg
pushf
dec
in
sub
push
add
push
push
or
sub
pop
cmp
pusha
xchg
insb
je
dec
pop
out
std
cmpsl
jae
movd
xchg
test
sub
aas
fnstcw
subl
stc
fcoml
mov
mov
repnz
xchg
pop
xchg
ds
arpl
outsl
imul
movsb
lods
push
arpl
ja
jg
imul
fldl
push
xor
insb
adc
dec
ja
setns
dec
addl
and
ss
push
jne
sbb
bound
dec
jge
mov
idivl
mov
arpl
test
xor
ja
add
sbb
cmc
idivl
sti
pusha
dec
jle
incl
subl
imul
xor
mov
pop
es
les
test
dec
adc
xor
sarb
add
cmp
sar
adc
jmp
dec
shlb
sarl
lahf
stc
or
xchg
out
jp
in
cmc
enter
sub
cmp
xor
call
ret
test
push
pop
rol
jmp
jae
pop
pop
mov
scas
xchg
jns
and
pop
jge
xchg
push
push
pop
jne
cmc
xor
popa
push
sub
das
aam
push
outsb
cld
push
jns
push
mov
js
xorl
push
xchg
or
outsl
push
cmp
ds
or
inc
stc
push
mov
loopne
jnp
dec
adc
inc
jle
jns
jg
jne
int
es
imul
stc
xor
cli
lock
pop
lret
xchg
cmpsb
and
es
pop
push
mov
cmp
out
mov
jge
mov
xor
lock
andb
cld
mov
cmp
addps
or
lds
mov
dec
push
or
sbb
push
push
xor
bound
pop
sbb
jmp
or
andnps
adc
add
pop
xor
dec
push
sbb
add
jns
push
call
jp
jl
inc
ret
arpl
xchg
imul
jns
or
mov
sub
fcomps
clc
fsts
mov
out
ds
adc
inc
adc
mov
jmp
mov
xchg
xor
xchg
xchg
sub
loop
cmp
mov
insl
jge
sub
push
add
mov
jo
jge
mov
dec
inc
sbb
cmp
sbb
imul
lods
ds
data16
cmp
scas
mov
mov
cli
xor
push
jg
jns
jle
push
call
popa
xor
sbb
fwait
int
jbe
xor
pop
inc
mov
subb
out
idiv
pushf
add
cwtl
jae
std
sbb
cmp
and
lret
mov
dec
hlt
and
out
std
xor
rcr
cmp
xchg
mov
jl
xor
mov
mov
push
insb
bound
arpl
mov
ss
push
pop
pop
jp
pusha
mov
repnz
xchg
xor
mov
add
sbb
mov
mov
mov
div
fdivs
sub
mov
jle
xor
push
push
xchg
dec
xchg
and
mov
sub
jbe
lret
push
mov
inc
fs
sub
mulb
subl
les
jmp
pushf
add
rcrb
xchg
sub
xor
cmp
push
enter
push
sub
push
mov
and
cmp
pop
jecxz
inc
pusha
jae
mov
or
cmc
dec
jne
mov
fidivs
adc
es
ffree
test
xor
or
fsubrl
sub
push
cwtl
das
jge
imul
push
sbb
bound
pop
or
sub
pop
jl
or
or
adc
jg
fwait
aas
jbe
lods
dec
xchg
or
aaa
jl
xchg
pop
adc
xchg
dec
aam
push
and
jo
dec
and
into
jns
or
xor
jle
stc
jg
ss
push
test
xchg
rorb
pusha
push
das
sub
les
sbb
xchg
daa
and
dec
lret
jbe
insb
jle
pop
inc
insb
dec
adc
pop
lods
dec
mov
aam
push
dec
xlat
pop
sub
jg
mov
icebp
rcrl
es
xchg
push
fs
jle
rcrb
jp
data16
jecxz
fidivrl
xchg
insl
stc
jl
insb
jns
rcrb
jns
inc
push
cmc
sti
hlt
sbb
outsb
jecxz
pop
xor
fnstsw
nop
mov
xchg
push
sti
or
xchg
jae
sarb
pop
mov
cmp
out
insb
add
lahf
std
ja
cli
mov
add
jecxz
xchg
jo
mov
add
aam
rorb
jnp
ss
add
xchg
aaa
cmpsb
lret
pop
scas
push
mov
pop
dec
mov
pusha
add
das
mov
mov
adc
lcall
dec
xchg
int3
sbb
mov
rcr
popa
aas
out
popa
out
push
icebp
stc
dec
jl
faddl
fsubs
cmp
popa
jne
push
enter
sub
jns
cmpl
pop
push
sbb
inc
into
dec
mov
imul
insb
mov
mov
pop
adc
jge
jae
mov
sbb
fwait
sbb
inc
push
inc
sti
repz
add
jge
add
sar
cmpsl
push
ror
pop
pop
xor
popa
pop
cmp
push
lds
cmc
inc
bound
mov
cli
xor
cmp
xchg
mov
aas
js
add
mov
enter
mov
or
adc
jns
add
dec
xchg
xchg
fidivl
push
push
sub
mov
push
inc
jo
adc
cmp
daa
mov
push
ror
shlb
ret
mov
loope
fstpl
sub
jbe
mov
jae
jno
jb
popa
mov
mov
add
imul
jle
xchg
shrl
test
or
sub
adc
popf
mov
push
outsl
mov
iret
mov
mov
aaa
mov
jae
mov
xorb
or
pop
leave
test
jns
mov
cmp
adc
xor
ficoml
push
mov
std
mov
add
add
outsb
das
sub
xor
add
xor
push
mov
mov
cmp
mov
lret
pshufw
cmp
stc
jne
pop
arpl
ja
pop
orl
imul
cs
push
sub
push
and
ljmp
mov
mov
or
addb
jno
adcb
addr16
cltd
jmp
scas
shrl
sub
leave
loop
aam
xor
inc
mov
jne
in
pop
ljmp
leave
mov
mov
add
fs
mov
sbb
fxch
jo
sbb
jno
cmp
sub
cltd
add
xchg
lods
pop
stc
inc
mov
jge
mov
mov
inc
xchg
nop
outsw
addr16
jl
jbe
sarl
jg
lahf
cli
cmpl
mov
dec
lcall
jl
cli
sub
imul
or
repnz
xchg
pop
js
push
add
lea
cld
out
lcall
bnd
dec
cmc
jmp
mov
sub
cmc
jle
cli
out
add
add
push
jno
hlt
xchg
jns
and
clc
mov
jg
add
les
cmc
dec
add
jge
cmpsl
push
push
out
inc
sub
and
inc
lret
add
aas
cmp
mov
ja
jns
aas
pusha
mov
lret
mov
sub
jmp
xor
jg,pn
push
mov
lds
jl
add
test
mov
std
inc
dec
frstor
sub
aas
rolb
pop
data16
sarb
loope
imul
jns
cli
jb
rclb
pop
pop
cmp
xchg
jbe
aam
ret
xchg
rcr
adc
jo
into
mov
cli
insb
ret
mov
mov
popa
loop
sub
cld
js
fxch
push
push
ret
inc
xor
mov
ret
mov
jae
cmp
xchg
and
sbb
mov
push
cs
or
rcrb
and
js
stc
les
xchg
inc
push
clc
cmp
testl
rclb
outsb
mov
stc
sbb
inc
add
popa
and
aas
cmp
push
sbb
lods
je
adc
inc
sbb
dec
lods
jle
mov
cvtdq2ps
jecxz
add
subb
add
mov
and
pop
fidivl
test
pop
bound
jnp
ret
cltd
inc
dec
enter
jne
push
loope
outsb
std
incl
xchg
shll
xchg
outsl
idivl
add
jle
mov
dec
mov
push
mov
xlat
shrb
mov
in
push
pop
mov
mov
push
inc
lahf
scas
cltd
mov
push
bound
inc
in
jg
push
push
jp
or
sbb
cld
sbb
inc
mov
in
jns
mov
divl
je
add
sbbb
xchg
pop
jmp
mov
sbb
stos
jae
and
inc
adc
gs
push
les
ja
mov
cltd
and
inc
push
fs
subb
arpl
add
cltd
insb
xlat
inc
mov
clc
inc
cltd
orl
sbb
js
cltd
jno
or
lds
mov
in
cs
jns
bound
fmull
dec
push
outsb
xor
cmp
aas
mov
cltd
int3
inc
pusha
sbb
and
pop
mov
push
mov
imul
out
mov
push
pop
adc
pop
push
cltd
adc
or
mov
in
mov
sbb
push
aas
dec
jo
inc
das
add
dec
jns
pusha
add
jle
sbb
repnz
push
loope
outsb
rcr
push
orl
js
and
jp
mov
sbb
clc
push
xor
xchg
ficomps
jb
mov
cmp
mov
decl
pushf
insl
inc
roll
add
fidivs
test
out
dec
jno
mov
push
xor
cmp
clc
arpl
dec
inc
jmp
sub
cli
xchg
jns
push
mov
lods
arpl
bswap
js
fnstcw
fnstenv
inc
jg
lcall
popa
sub
popa
cmp
mov
mov
testl
pop
push
filds
mov
mov
lcall
cwtl
sarl
ror
push
inc
push
arpl
mov
js
call
ds
xor
es
out
push
add
aas
mov
pop
pop
xor
and
rclb
pop
cmp
jae
mov
xchg
adc
in
frstor
out
push
inc
xor
ss
rolb
push
sbb
stos
xchg
in
inc
jmp
adc
repnz
push
sub
sub
inc
jbe
mov
jno
push
push
mov
cmp
cmpl
pushf
cli
mov
out
sbb
sub
mov
scas
in
cmp
mov
bound
shl
inc
pop
mov
shrb
pop
ds
mov
mov
imul
mov
sbb
outsl
mov
sahf
pop
outsl
lods
les
jbe
cltd
fcmovu
dec
mov
xor
rol
pop
jmp
cli
sbb
pop
mov
xor
cli
aam
pop
cmp
jp
dec
jns
xchg
sarb
jg,pn
xchg
mov
jge
je
jb
cltd
inc
xor
inc
mov
push
js
jbe
icebp
push
inc
jbe
popa
jne
jmp
lea
ret
pop
mov
in
nop
popa
sarb
jb
mov
dec
mov
push
add
cmp
mov
sti
mov
pop
jg
test
sbb
adc
pop
push
jle
lea
push
fs
in
mov
mov
pop
sbbl
ja
sahf
push
cmpsb
mov
iret
sub
jmp
enter
cmp
pop
inc
jb
jmp
sub
fwait
inc
fdivs
sbbb
push
add
pushf
jae
xchg
add
mov
cmpsb
hlt
mov
dec
rcll
jl
in
orb
sysret
sarl
dec
push
push
and
inc
cld
popa
mov
aam
rolb
mov
mov
mov
cld
push
xchg
outsb
ja
push
inc
jns
mov
bound
lret
loop
push
fwait
xchg
dec
jl
push
jbe
jo
enter
dec
pop
pop
test
jp
sub
pop
insb
sub
jle
rclb
mov
inc
mov
xchg
jle
inc
fnstsw
fistpll
aas
icebp
xor
xchg
push
push
cmpsb
inc
mov
loopne
push
lcall
xor
sbb
loope
mov
aad
cmp
clc
decb
mov
stos
lcall
sub
sub
cs
mov
xor
jmp
jb
sub
cmp
jns
mov
rcrb
jle
je
jno
into
lcall
xchg
ja
repnz
push
mov
jb
call
xor
cmp
push
add
cld
sahf
ja
jns
lcall
pop
data16
pop
add
mov
aaa
sbb
sbb
adc
sub
adc
dec
inc
test
fwait
popa
dec
incl
xchg
rcrb
pop
jle
repz
xchg
sbb
aaa
inc
lret
sti
pop
xchg
sarl
stc
jns
sahf
and
insb
cmpsl
inc
popl
cmpsl
xchg
sbb
jae
fimull
pushf
addb
sahf
inc
inc
and
or
push
and
scas
push
xor
push
aaa
cmp
outsl
dec
outsl
add
xchg
cmp
lret
test
daa
xchg
push
testl
push
mov
iret
pop
mov
adc
stos
movl
push
jne
jmp
ffree
sub
jae
cmpsl
inc
imul
in
lods
push
mov
push
inc
push
mov
stc
jb
mov
dec
and
adc
pop
lcall
or
push
insb
add
scas
mov
add
imul
fstps
xchg
lods
mov
inc
cmpl
pop
pop
call
jnp
lcall
iret
jl
fcompl
int
xor
pop
cmpsb
js
inc
es
pop
frstor
pop
lcall
mov
pushl
mov
outsb
ret
jp
ret
jbe
xor
dec
cltd
shll
sbbl
jns
lahf
aas
push
adc
stc
jl
pop
fmuls
jl
jb
pop
jne
decl
fildll
insb
mov
add
mov
pusha
or
rcll
imul
nop
or
mov
repz
ret
fldenv
idiv
xor
and
mov
or
mov
add
push
jns
outsb
add
repnz
push
js
mov
cmp
jb
divl
stos
push
addl
cli
and
subb
sub
shr
divl
lcall
sub
aaa
and
inc
iret
jo
int3
xlat
ret
js
lcall
gs
cmp
adc
or
mov
insl
stos
in
mov
stos
dec
mov
jno
add
ljmp
or
and
imul
and
ljmp
fildl
arpl
pop
mov
shll
xchg
pop
and
scas
dec
xchg
subb
lods
jl
or
fimull
enter
fldenv
es
pop
scas
lret
jmp
sti
sahf
jb
push
popf
push
jmp
ja
aas
push
cli
fs
push
mov
jle
sbb
bound
xorb
xchg
pop
andl
mov
push
or
stos
cmp
inc
js
mov
jb
jns
or
ljmp
cli
ret
or
ret
dec
jmp
push
sub
cmp
js
stc
pop
mov
cmp
mov
insb
pop
daa
aad
std
pcmpeqb
sbb
xchg
outsl
add
mov
jp
repnz
jns
ds
nop
stc
xchg
jo
cld
stos
xorl
in
stos
sar
mov
mov
clc
and
fld
loopne
subb
dec
jo,pt
cmp
xchg
push
xchg
sbb
es
negb
xchg
cmp
jecxz,pn
cmp
imul
jbe
dec
cmc
cmp
popf
pop
out
pop
mov
decb
xchg
fstl
nop
pusha
sub
rclb
js
dec
fs
jp
xchg
test
or
jl
xor
push
xchg
xchg
sub
inc
scas
adc
mov
sbb
clc
scas
cwtl
and
xchg
das
psubsb
aas
roll
jle
or
jge
dec
sti
adc
adc
add
cwtl
outsb
mov
adcl
xor
xor
dec
ja
dec
inc
pop
or
lea
nop
pop
add
mov
in
adc
and
jge
hlt
jo
xchg
jg
jle
push
hlt
sbb
sbb
packuswb
xor
aaa
cld
je
mov
ja
pop
push
and
xor
add
orl
inc
test
je
in
push
pusha
inc
xor
pop
push
add
aaa
outsl
sub
sub
cmp
xchg
xchg
jg
push
cltd
clc
and
jnp
mov
add
aam
test
jns
dec
cmp
or
mov
cmc
pop
jmp
sbb
mov
adc
dec
mov
pop
pop
es
mov
loop
cli
jl
pop
cmp
adc
mov
xchg
movsl
jns
mov
add
cmp
dec
rorl
mov
jne
push
push
pop
push
jge
cmp
clc
fs
mov
popa
call
in
mov
fcmovnbe
pusha
gs
jp
jns
out
loop
and
cmc
pop
loopne
add
mov
cmpsb
xor
mov
jns
jae
stc
mov
mov
cmp
pop
fidivs
decb
js
jne
jb
pop
arpl
int3
add
ret
push
lret
inc
push
testl
cld
test
in
jno
mov
ss
stos
add
mov
js
xchg
clc
mov
bound
cltd
and
mov
dec
cmp
ds
jo
dec
sbb
pusha
xchg
fsubl
ds
inc
mov
jno
mov
testb
jbe
xor
jmp
dec
inc
bndstx
sub
pop
mov
sbb
dec
sbb
outsb
and
insb
push
scas
inc
xor
scas
and
push
daa
cltd
test
sub
idiv
sbb
xchg
cmp
add
push
cmp
into
mov
adc
and
cmp
bound
jnp
mov
rorb
inc
xchg
jae
mov
bound
mov
jle
rcrl
jp
adc
jle
or
decl
cmpl
mov
iret
aaa
adcl
push
mov
clc
mov
rcl
jne
out
pop
jmp
std
jg
xor
mov
push
xchg
dec
sbb
inc
popf
pop
cmp
je
aas
dec
mov
pop
pop
push
sti
push
jg
idivl
sub
and
rorw
out
mov
mov
and
mov
push
xor
mov
jo
cmp
dec
mov
push
orb
xchg
out
xor
and
jp
sarb
pop
aad
mov
stc
outsb
jge
jg
push
outsl
sub
mov
es
xor
pusha
dec
cli
enter
pushf
mov
add
cld
clc
pushf
mov
cld
loop
scas
rorl
bound
shll
jo
jno
enter
xchg
mov
cmp
add
stc
push
sbb
enter
xchg
pop
cltd
lahf
stc
cmp
in
cmp
arpl
add
shl
bnd
pop
clc
imul
mov
cmpsb
cmpl
lret
rolb
popf
xor
das
push
xchg
dec
aas
add
and
insl
lret
push
das
push
xor
aam
fs
lret
js
lea
push
cs
and
jno
cmc
aas
mov
subl
xlat
xchg
fcomps
sahf
dec
es
cmp
adcb
xor
mov
xchg
test
mov
testb
js
fmuls
mov
or
push
rcrl
inc
ret
mov
test
loope
adc
addr16
push
xchg
lcall
test
cmc
pop
arpl
std
repnz
daa
cmpl
jns
cmp
mov
mov
mov
sub
push
pop
sbb
in
ja
xchg
shlb
scas
xchg
push
xor
mov
xchg
nop
dec
and
sbb
js
inc
sahf
sub
cmp
jmp
or
cmpb
mov
sub
mov
sub
out
xor
mov
mov
movsb
mov
fisttpll
mov
ds
xchg
lret
pop
push
sbb
shll
mov
mov
sub
cmc
push
gs
add
inc
pop
push
fnsave
mov
inc
out
dec
cmp
or
cwtl
or
cld
xor
add
dec
mov
jle
xchg
jnp
outsl
push
xchg
popa
cmpl
or
js
mov
mov
in
jno
pop
stc
dec
lods
add
jnp
push
pop
je
ret
add
outsl
jl
mov
xor
fwait
push
popf
int
inc
mov
add
loopne
lea
gs
bound
icebp
mov
mov
idiv
xlat
pop
mov
and
cs
mov
jns
push
insb
xor
pop
stos
push
jbe
jmp
loop
pcmpgtd
shrb
mov
pop
or
addr16
mov
cmp
mov
inc
and
arpl
adc
mov
cli
pushf
cmp
cwtl
lods
jae
hlt
xor
test
mov
mov
mov
data16
cld
jbe
xchg
xlat
cmp
lock
or
dec
jno
pop
and
jmp
or
hlt
outsl
jb
repnz
outsb
rorb
insb
or
pop
lods
ljmp
in
and
sub
jae
int3
lods
sarb
dec
jle
sub
outsl
clc
cmp
xor
jo
mov
je
jge
js
insb
add
jb
and
cmc
pop
das
xorl
jo
mov
wrmsr
pop
dec
push
das
jle
mov
outsb
pop
out
jae
jge
mov
arpl
mov
fldcw
mov
imul
cmpsb
idivl
adc
cmpsb
jo
sti
push
xor
int
fucomi
mov
xchg
mov
add
push
jle
enter
add
mov
push
inc
js
insb
jbe
sbbb
cmp
and
mov
outsb
jae
mov
mov
push
jne
emms
int
aas
sbbl
clc
arpl
dec
mov
inc
dec
add
cld
mov
adcb
not
add
push
scas
add
xor
xor
insl
cmp
inc
mov
xor
sbb
es
imul
jae
aas
cli
ds
jge
pop
inc
jecxz
pop
ja
xor
das
xchg
push
out
fdivl
loopne
enter
sbb
or
ds
jae
add
stos
dec
stc
pop
and
fiaddl
popf
cmp
push
sub
sbb
lcall
xchg
jb
hlt
lcall
push
dec
mov
xor
and
jno
pop
xchg
pop
push
fildll
std
outsl
sub
xlat
jbe
lea
xchg
mul
jle
pop
lcall
fcom
aas
jb
flds
aam
mov
out
mov
jb
daa
add
mov
xchg
bound
cld
jb
movsb
testl
inc
aaa
stos
sti
sbb
decb
inc
mov
sub
clc
push
jp
inc
pop
negb
dec
js
cmp
stos
cwtl
imul
subl
dec
cld
cmc
cmp
and
cmp
int3
xchg
add
lret
ja
xchg
dec
in
dec
outsb
xchg
mov
xchg
jge
in
daa
mov
jge
pcmpeqw
lock
loop
cli
cwtl
xchg
repnz
subl
std
mov
and
jl
lods
repz
pop
inc
or
lock
stc
daa
and
push
divb
aaa
sub
xchg
xchg
push
shrl
aad
lock
insb
jp
insl
xchg
jecxz
add
sbb
jmp
cmp
pushf
test
jg
jg
mov
or
inc
mov
jg
xchg
cmp
lret
shrl
fsubrl
or
jae
cwtl
sarb
xchg
iret
xor
icebp
call
sub
movsb
bound
mov
dec
adcb
push
mov
pop
mov
popa
inc
fs
push
mov
sahf
mov
lcall
movhps
pushf
jns
and
jl
pop
ja
mov
pop
adc
test
outsb
mov
ret
pop
sahf
mull
enter
int3
bound
lcall
jmp
sbbb
insl
inc
enter
insb
mov
xor
sub
mov
divl
fistpl
adcb
jnp
adc
mov
testl
pmaxsw
call
add
popa
data16
pop
xchg
or
pop
loope
enter
repnz
xchg
dec
neg
sub
xchg
repz
or
inc
dec
lds
leave
ja
mov
mov
subb
cmp
aas
lock
cmc
aaa
cltd
movsl
adc
pop
push
push
sub
ret
mov
cmp
xchg
pop
rclb
and
pop
inc
mov
jg
xor
jne
mov
xor
and
mov
sub
add
jge
push
jnp
sbb
sbb
rcrb
pop
loopne
sbb
jmp
lods
roll
stos
jl
outsb
cli
outsb
push
je
mov
jmp
mov
imul
outsl
mov
subl
inc
cmp
inc
jnp
and
aaa
sbb
enter
dec
das
and
xchg
jns
sbb
mov
sbb
mov
aam
add
and
ret
pop
popf
push
xchg
push
pusha
lds
sysret
js
xchg
gs
sub
movsl
ret
lcall
mov
subl
in
jge
loope
insb
scas
mov
sbb
sbb
out
popa
and
mov
bound
inc
cmp
nopl
xor
ljmp
and
fldenv
in
pop
ret
cmp
lds
lds
cltd
ret
add
pop
out
pop
mov
or
sbb
dec
xor
iret
and
pop
pusha
sub
sbb
add
bound
and
or
fprem
bound
push
fcompp
add
fisttpl
mov
rcrb
jbe
clc
pop
je
cli
jl
pop
cmp
and
rcr
lock
repnz
adc
jb
sbb
sbb
lcall
sub
test
ljmp
mov
ret
inc
jbe
or
mov
mov
jp
pop
gs
inc
popa
cmovle
es
mov
lcall
xor
mov
pop
jp
subb
jbe
jne
jne
jg
inc
sbb
movsb
xor
sub
fistpll
std
stc
insl
outsl
sub
mov
mov
push
in
push
loope
jo
rcr
sub
add
sarl
js
jbe
bound
jbe
jecxz
insl
and
cmp
repnz
jecxz
in
push
and
ficoms
jmp
and
and
adc
add
inc
in
inc
popa
ja
bound
imul
push
push
outsl
cmp
or
rclb
cltd
cs
mov
jp
dec
jecxz
xlat
shrb
xorb
mov
push
lcall
ret
aas
pop
add
xlat
push
and
fbld
xor
ficoml
push
leave
inc
sbb
mov
das
push
fdivr
mov
mov
sbb
cmp
and
mov
pop
sbb
and
add
mov
add
jg
cltd
adc
fmull
xor
cmp
jmp
push
push
pop
push
ds
and
dec
pop
pop
stos
loope
jp
test
mov
aaa
xchg
ret
xor
shll
call
xchg
jno
inc
imul
movsb
mov
icebp
lods
lret
mov
ja
out
push
les
pop
call
add
ss
sub
xor
daa
jge
outsb
inc
jge
jbe
jbe
mov
xor
push
in
lret
pop
jne
sbb
xor
push
xchg
insb
fs
inc
push
jno
adc
push
gs
outsl
pop
dec
addr16
lock
xchg
outsb
and
out
cmp
enter
cmpl
push
jmp
out
pop
lcall
push
pop
icebp
insl
mov
mov
mov
ret
and
sub
bound
movsl
push
nop
mov
xor
jo
gs
js
cli
or
sub
insl
lock
loope
ja
xor
inc
mov
push
fs
jae
ret
mov
repz
loop
mov
push
push
outsb
pop
mov
add
out
push
xchg
outsb
jle
fs
fwait
mov
rorl
jae
jae
jge
iret
mov
psraw
jp
mov
xchg
add
jb
cs
pop
jno
outsb
mov
outsb
cmp
cld
es
ljmp
xchg
scas
int3
es
mov
repnz
sub
and
jg
mov
dec
pop
pop
out
outsl
and
mov
sub
divl
push
sarb
adc
insl
mov
ficomps
dec
mov
and
and
out
addb
lcall
stc
adc
jns
jbe
add
jnp
bnd
xor
orl
ja
iret
adc
sbb
jbe
push
test
push
fistpll
mov
std
loop
jmp
mov
push
sahf
mov
or
add
pop
mov
jne,pn
or
jne
rolb
add
inc
fisubrl
lods
mov
das
mull
add
repnz
adc
sub
jae
xor
jo
xchg
scas
add
fstps
sub
pop
pusha
jns
jg
pushf
jae
jle
jmp
xchg
jne
sbb
xchg
ja
mov
sub
mov
xchg
and
sbbb
add
xchg
je
cmp
imul
sbb
or
aaa
fidivl
xor
stos
jbe
pop
or
mov
jnp
add
sbb
mov
fistpll
pop
mulps
jno
fimull
jp
fildll
push
push
loope
dec
xor
push
pop
mov
aaa
mov
jno
xor
jo
loopne
jle
pusha
insl
insb
xor
mov
aaa
shrb
pop
setl
dec
mov
jae
aam
add
lret
int
mov
mov
insb
mov
mov
aas
xor
mov
fisubrl
jg
jb
mov
jle
xorb
add
jb
ret
cmpl
jp
xchg
mov
notl
les
popa
fildll
arpl
in
push
outsb
jno
pop
shrb
xchg
das
mov
cmpb
sbbl
inc
mov
xchg
jge
push
adc
and
daa
sub
or
sub
or
cwtl
sti
insb
clc
hlt
ljmp
bound
inc
divl
aas
les
and
adc
repz
idivl
xlat
jne
addr16
jp
in
cld
jle
sub
jbe
xor
jl
call
xor
negl
aaa
jb
push
push
add
jmp
cmp
sbb
insb
mov
imul
mov
xorl
jg
push
jno
jle
imul
rcrl
nop
adc
xchg
mov
xor
and
test
outsb
xor
mov
push
dec
arpl
sub
jmp
jo
popl
or
dec
jbe
insl
inc
xor
xchg
jle
movb
sbb
adc
enter
lcall
jmp
fisttps
outsb
dec
and
lret
loopne
call
sub
mov
std
andb
movsl
or
je
out
xor
int3
cmpxchg
pushf
inc
push
sbb
popa
xor
roll
in
add
lret
sbb
mov
push
stc
dec
cmp
lea
xlat
andb
pop
jle
mov
inc
cli
mov
jbe
mov
sarb
lock
jmp
add
mov
mov
insl
jbe
cmp
pushf
push
test
lods
or
mov
cmpsl
pop
lcall
sbb
or
cmp
mov
cmpsb
jnp
mov
andb
mov
jp
lcall
rolb
jecxz
push
addr16
sbb
aaa
and
es
cmp
test
push
lret
adc
call
push
jb
sbb
xchg
xchg
xchg
inc
loopne
stos
aas
inc
ja
xchg
mov
pop
pop
sub
cmpsb
mov
adc
pop
pop
test
rorl
xor
cmp
idiv
or
pusha
icebp
arpl
xlat
popa
dec
cmpl
pushf
push
xor
aaa
push
xchg
jbe
fnstenv
xchg
inc
jle
stos
add
push
cs
jmp
sbb
cmp
scas
test
cld
jbe
icebp
pop
out
xor
ljmp
in
pop
imul
sub
adc
jb
cli
testl
xor
sbb
jg
lcall
shl
mov
out
xchg
cwtl
adc
imul
ja
shrl
into
jne
lock
mov
adc
bound
jge
push
icebp
push
stc
sbb
fucomip
add
jne
push
mov
pop
push
push
mov
lods
sti
and
loopne
jbe
push
or
mov
sub
and
xchg
and
add
push
std
cmpsl
xchg
add
clc
jno
xlat
jnp
jae
sub
push
sub
inc
xchg
push
mov
add
fdivs
pop
pop
mov
lea
addl
jo
lcall
add
stos
les
sub
jge
sub
in
jbe
outsb
stos
mov
push
adc
jno
insl
xchg
pusha
ja
lret
lock
jb
sti
gs
ret
cs
shlb
test
stc
add
lods
enter
or
inc
jl
cmpl
mov
add
or
ljmp
movsl
or
mov
outsl
rcrb
bound
mov
pop
ret
push
mov
fs
scas
mov
push
imul
sub
mov
cmpl
aam
insl
orb
mov
mov
mov
idivl
rcll
jbe
stc
add
mov
mov
mov
call
pop
sub
pop
jge
ss
add
icebp
jbe
fcoml
pop
push
sub
pop
push
int3
gs
fsubrl
jl
jle
insb
inc
jnp
push
adc
jb
xchg
mov
and
dec
mov
push
mov
lret
and
xchg
in
rcll
movb
adc
repnz
lods
ja
gs
sub
sub
fdivrp
stc
shll
lahf
mov
jg
stos
pop
cmc
xor
je
xor
mov
sub
and
out
inc
mov
lods
inc
jns
xchg
mov
jp
add
jmp
out
push
aas
xchg
out
jno
and
xor
jo
sub
mov
xor
lea
ljmp
sbb
dec
mov
xchg
adc
in
cmp
jge
dec
outsl
repnz
outsb
inc
sub
insb
push
pop
rcl
repnz
dec
and
push
lcall
loope
dec
adc
xor
pop
sub
add
rcll
jp
cltd
fildl
mov
add
mov
dec
ljmp
cmp
mov
sti
test
dec
inc
cmc
cmp
je
loop
jbe
scas
sarl
and
dec
jl
adcb
inc
mov
mov
push
scas
enter
xor
jp
jle
mov
xlat
ja
pushf
or
daa
frstor
push
rcll
mov
push
xor
cld
or
dec
cld
mov
pop
jb
sbb
xor
cmp
add
mov
sbb
pop
jg
cmp
pop
sahf
inc
lods
insb
xchg
insb
js
cmpsl
ss
jnp
test
add
sub
testl
xlat
sahf
cmp
jo
pusha
or
lods
sarl
lds
pop
stos
enter
cmpsl
push
test
xchg
push
and
ss
push
sub
jne
xchg
lcall
pop
xor
sbb
mov
xchg
sub
dec
out
sub
lret
adc
outsl
push
sbb
or
insb
xor
les
outsb
jmp
mov
mov
xor
fidivs
repz
cmp
xchg
movsl
icebp
cpuid
insb
jl
mov
add
jb
cmp
bound
ja
jns
js
mov
xorb
cmp
fwait
mov
stc
sub
or
xchg
mov
add
js
add
mov
les
add
cmp
push
push
pcmpgtb
je
jb
scas
adc
sarl
pop
mov
sub
popa
jo
mov
loopne
xchg
pop
jge
add
xlat
pop
arpl
clc
push
js
cwtl
push
add
xor
stc
subb
add
or
sahf
repz
fdivrp
xor
ds
fdivrl
fsubrs
sbb
out
push
cmp
rcr
and
dec
insl
cmpsb
stc
inc
add
add
in
pop
xchg
je
in
pop
pop
mov
imul
sahf
add
dec
jmp
pop
test
pop
ja
sbb
jns
rolb
int3
ret
jl
cmpsb
push
jne
sub
adc
mov
push
jno
into
negl
pop
scas
jb
mov
jo
cli
cltd
lods
mov
and
xchg
push
and
xchg
pop
or
cmc
xor
idivb
out
mov
in
lcall
shlb
decl
ficompl
stc
pop
cltd
outsl
xchg
js
pop
pop
je
add
rolb
jle
xor
push
outsl
ds
ror
popa
addps
mov
add
cmpsl
dec
outsb
ret
into
adc
les
mov
and
jp
jp
or
ljmp
cltd
adc
pop
mov
add
cmpsb
in
or
cmc
cmp
int3
jecxz
jg
test
outsb
pop
or
out
sub
imul
push
xor
push
push
xchg
add
sbbb
sub
fimull
jge
jg
xchg
into
cwtl
cli
xchg
mov
cltd
outsl
jb
jae
sbb
sub
dec
xor
nop
xchg
sub
sahf
stos
shl
mov
sarl
cmp
mov
inc
cmpsb
push
xchg
data16
insb
add
and
push
jl
or
and
lret
adc
inc
push
mov
xchg
xorb
inc
psrld
adc
bound
incb
push
lcall
lock
jg
xchg
lock
or
sub
js
out
jle
insl
and
imul
ja
jp
sbbb
sub
sbb
inc
js
xchg
and
jb
inc
jp
ljmp
cmp
mov
call
icebp
jo
pop
push
sbb
mov
cs
clc
vphaddbq
jmp
lcall
popf
es
xchg
adc
mov
inc
fisttps
sbb
fiaddl
cmpsl
xor
cmp
dec
fiadds
cmpsb
xor
aam
jmp
cmc
mov
dec
pop
sub
dec
cld
ljmp
mov
mov
xchg
and
xor
hlt
cltd
mov
sub
fcomp
and
cmpsl
lret
scas
fidivrl
jnp
jle
mov
fwait
sbb
lcall
jns
ret
test
push
or
push
push
jno
jle
mov
push
outsl
xor
sbb
lcall
leave
aaa
jne
popa
lahf
leave
outsl
pop
popa
jnp
jl
xchg
loopne
dec
push
mov
xchg
idivb
aas
jb
add
mov
dec
and
jo
add
out
or
fistps
mov
sub
cwtl
mov
andl
stc
xor
jo
and
mov
xchg
aam
jp
in
rorl
aad
lock
in
sub
add
sbb
mov
call
xor
movsb
pop
inc
jae
inc
in
insb
xchg
mov
ffree
scas
mov
lret
mov
inc
cmp
int3
mov
loope
in
jp
rorl
push
or
sbb
les
inc
cmp
mov
pop
jle
outsb
inc
stc
scas
xorl
push
dec
push
push
xor
out
mov
pop
test
mov
mov
mov
notl
add
les
inc
js
add
ljmp
enter
and
inc
jge
inc
repnz
dec
popa
mov
sarb
and
cltd
push
insb
jecxz
jo
jo
sub
jb
enter
gs
push
movsl
dec
pop
mov
cmpsl
pop
sub
xchg
scas
inc
das
lcall
roll
test
divps
lcall
and
test
iret
js
ja
jge
jle
jne
imull
pop
pop
xchg
jae
xor
ljmp
push
idiv
pop
mov
outsb
xor
and
shrl
sub
pop
cmp
je
adc
dec
add
xor
test
jg
addb
mov
fsubp
cld
add
xor
ja
sub
shlb
xchg
jo
push
ja
add
mov
add
jl
scas
imul
shr
xlat
pusha
sbb
repz
sub
insb
rolb
enter
mov
adc
mov
test
fnstenv
push
mov
lds
mov
pop
push
dec
push
inc
adc
or
mov
mov
xor
lcall
nop
fsubr
xor
dec
je
mov
leave
loop
imul
pop
xchg
xchg
test
lcall
jp
inc
enter
jecxz
mov
xchg
pop
sti
pop
mov
or
or
push
orb
cltd
arpl
xchg
and
sti
xchg
mov
inc
les
dec
aam
push
xor
or
cltd
ja
mov
gs
fwait
add
mov
inc
mov
sub
xchg
lods
insb
mov
inc
pop
shrb
xor
je
outsl
cmp
jle
ja
or
add
mov
scas
ret
sbb
jne
setb
pop
xorb
pop
movsb
adc
pop
jae
xchg
xchg
repnz
pop
mov
movsb
inc
insb
xor
and
dec
and
add
jle
nop
push
pop
stc
aas
fcmove
repz
xchg
and
mov
mov
and
test
scas
int3
cmp
std
dec
push
jb
in
mov
negl
mov
js
xor
data16
jmp
or
les
xor
call
sub
cmp
popf
icebp
pushf
pusha
fwait
ds
xchg
cmp
xchg
inc
scas
push
sahf
mov
adc
adcb
scas
jne
dec
jbe
ljmp
in
mov
lcall
imulb
jg
cmpl
sbb
jl
or
or
add
push
arpl
mov
jmp
inc
jle
sbb
cmp
ja
insl
add
bound
dec
pusha
push
or
sbb
pop
jns
sbb
pop
cmc
into
dec
xor
jge
popa
sti
cltd
adc
scas
sbb
jl
imul
mov
xor
jb
ss
jp
ja
xchg
or
xor
push
sub
xchg
push
push
mov
xor
roll
mov
iret
inc
lcall
add
mov
inc
xor
dec
pop
xchg
mov
mov
jno
pop
lock
add
cltd
xchg
inc
cmp
test
dec
pop
and
push
push
mov
xchg
mov
xchg
push
test
push
xchg
sbb
add
gs
inc
dec
xor
add
xor
rorb
push
xor
or
ss
xor
xchg
mov
std
xchg
xchg
jns
shl
or
insb
mov
clc
sahf
xchg
lods
mov
outsb
and
arpl
bound
int3
nop
lcall
mov
cmc
insb
pop
push
jle
adc
cs
jl
cmp
inc
sbb
jg
test
mov
jo,pn
xchg
push
rcrl
repnz
push
push
jg
mov
test
push
add
jge
sahf
jp
jmp
inc
pop
ds
repnz
aaa
js
pop
aaa
lock
fnsetpm(287
push
sahf
pop
cmp
and
enter
dec
mov
repnz
jbe
inc
pop
cmc
and
dec
jp
test
lret
std
add
insb
aad
mov
dec
mov
lahf
inc
jo
xchg
dec
mov
push
clc
addb
push
les
pop
rclb
lahf
and
ja
aam
sub
adc
daa
bound
arpl
jg
dec
aas
dec
dec
jno
jg
pop
or
outsl
jl
xchg
push
sarl
ljmp
idivl
ret
cmp
jp
push
xchg
xor
adc
loopne
jns
rol
mov
pop
xor
lret
mov
leave
mov
incb
loope
in
xorb
pushl
push
push
sub
out
mov
add
sbb
xchg
pop
add
add
js
jno
jp
jno
add
cmp
fsubrl
call
mov
dec
cmpl
out
inc
inc
fcoms
aaa
ljmp
mov
dec
pop
mov
sti
icebp
or
neg
inc
and
jl
inc
push
inc
add
ficoms
outsb
inc
cmpsl
cld
sub
pushf
cmp
sbb
sarb
xchg
je
dec
jb
mov
movsb
testl
pop
mov
mov
jl
xor
jbe
sahf
jl
fs
mov
jo
aad
inc
add
push
pop
lcall
add
dec
das
ja
ja
mov
xchg
nopl
out
mul
dec
sbb
rol
sub
jl
xorl
mov
jg
mov
pop
xor
inc
or
jmp
sub
in
pop
mov
push
outsl
mov
adc
test
in
mov
inc
ja
or
test
stc
cmc
add
inc
push
mov
inc
or
jl
cmp
push
dec
xlat
xchg
lret
pop
xchg
lcall
sbb
lcall
out
dec
inc
mov
cmp
add
into
add
xchg
and
fcompl
sub
xbegin
sbb
pop
lcall
push
push
insb
js
stos
sbb
dec
or
imul
jl
jbe
jl
enter
ja
mov
jae
xchg
xchg
dec
outsl
push
ret
dec
mov
andb
sbb
and
faddl
sbb
int3
je
outsb
jge
mov
adc
xlat
dec
hlt
addr16
sbb
mov
ds
cs
mov
push
pop
js
add
std
pusha
jns
cltd
jbe
sbb
inc
push
jl
pop
dec
pusha
jbe
push
push
popw
stos
cmc
scas
inc
in
hlt
cmc
push
lret
push
pop
and
popa
repnz
mov
inc
cmp
inc
dec
sub
xor
je
xchg
sbb
insl
into
cmp
adc
je
cmp
sbb
push
xchg
jp
cmpsl
cltd
out
ret
sbb
popa
and
mov
xchg
mov
push
dec
cmp
fidivl
sahf
test
inc
fucomip
mov
ret
mov
nop
mov
test
inc
xor
repnz
or
enter
stos
aad
subl
mov
pop
pop
mov
push
xor
dec
cmp
pushf
mov
xor
orb
addr16
xchg
lcall
cmpsb
jnp
mov
orb
addl
pop
xor
stos
dec
jl
stc
push
ficoms
mov
and
shl
aad
inc
xor
mov
push
add
leave
dec
xchg
and
flds
inc
rorl
xor
pop
test
cmp
loopne
inc
inc
outsb
cmp
inc
fisubrl
pop
sub
pusha
or
cli
add
push
fcmovnb
xchg
lods
jl
push
or
lods
xor
mov
jmp
push
mov
das
mov
lods
mov
cmpb
add
loop
jg
mov
fwait
add
cmp
shrl
and
mov
cltd
incb
cld
and
outsl
jbe
lcall
rcrl
cli
pop
mov
ret
insb
inc
inc
pop
aad
bound
jae
outsb
jbe
fildl
jb
inc
push
cvtdq2ps
dec
xchg
push
xchg
jle
bound
adc
cwtl
pop
mov
dec
pop
jge
punpckhwd
inc
test
ja
inc
sbb
and
mov
push
push
and
outsb
sub
out
popa
mov
pop
sub
outsb
inc
pop
in
lods
jmp
fs
enter
sub
or
mov
pop
shl
es
push
pop
push
ss
cld
cmp
rcll
jmp
mov
push
jle
imul
fidivrs
lock
ret
push
sbb
leave
pop
fstpl
and
shlb
and
fldenv
jb
push
movsb
dec
mov
inc
jp
hlt
ds
pop
mov
push
das
ljmp
inc
outsb
mov
andl
fisubrl
fidivs
xchg
dec
xlat
lcall
jo
incl
add
jge
dec
and
push
inc
cmpsb
jle
ds
out
lret
mov
cmp
imul
and
push
dec
bound
push
stc
imul
outsl
and
cmp
mov
add
popl
xor
fisubs
xchg
fnstsw
cmc
incl
inc
xchg
add
lahf
iret
jb
pop
and
jp
mov
mov
jl
je
sbb
jns
sbb
mov
pushl
pop
inc
loopne
outsb
xchg
push
push
les
jecxz
fs
adc
push
jmp
mov
jbe
jge
addr16
and
lret
and
stos
add
pop
and
mov
inc
xchg
sahf
inc
bound
int
inc
inc
xchg
or
outsb
xchg
insl
cmp
cltd
xchg
push
adc
lcall
lods
data16
dec
sti
mov
mov
and
xchg
push
push
cltd
cmpsl
sub
sub
std
mov
or
cmc
cmp
mov
pop
dec
int3
jne
lcall
ret
stc
adc
test
sub
mov
push
adc
lret
loop,pn
es
xchg
jle
mov
jecxz
inc
into
call
jl
mov
mov
loop
js
dec
cmp
imul
cmp
and
jns
bound
imul
imul
fld
pop
and
jecxz
lcall
rolb
sbb
das
sub
mov
adc
ds
fisubl
xchg
push
scas
inc
imul
adc
js
arpl
cld
ljmp
adcl
in
xorl
add
jle
pop
hlt
stc
dec
cld
push
mov
jns
gs
roll
push
mov
stc
xlat
push
ja
loope
jb
push
jo
test
stos
arpl
mov
mov
movsl
lret
jnp
inc
jae
sub
mov
lcall
inc
push
jle
xchg
inc
rcl
divl
je
jno
pop
pop
pop
sbb
jle
inc
ret
jne
cli
push
push
xchg
das
jle
rcrb
loope
dec
xchg
push
push
jp
cmp
subl
arpl
sub
or
xor
push
arpl
mov
pushl
in
js
xchg
ja
jns
stc
fnstcw
popf
fstpl
ja
and
push
inc
daa
out
jmp
mov
shlb
cs
std
stc
outsb
test
add
cmp
jo
cld
dec
addb
stc
js
push
jl
jp
inc
jnp
fidivrl
xor
lcall
dec
jae
pop
adc
loopne
cmp
lock
scas
and
dec
mov
in
je
daa
fsubs
and
subb
pushf
pop
lret
inc
lds
dec
repnz
das
mov
fdivr
jecxz
xlat
pop
or
insb
inc
test
enter
sbb
push
xor
xor
addr16
dec
icebp
in
cmc
dec
std
pop
stos
jp
pop
push
sub
push
jle
out
add
mov
lds
xchg
push
push
js
lcall
or
mov
mov
pop
decl
xchg
push
sbb
add
adc
xor
lret
inc
add
pop
or
cmp
dec
pusha
in
aas
xchg
bound
xchg
adc
out
jecxz
loopne
mov
adc
sub
pop
shlb
mov
dec
ret
sti
cmp
fdivr
cmpb
sbb
add
mov
in
inc
sahf
jbe
xchg
inc
std
lcall
int
cmp
inc
loope
leave
push
out
test
fidivs
pusha
fistps
sub
ret
repnz
pop
mov
fistpl
insb
push
or
pop
pop
sbb
mov
pusha
xor
outsb
jb
pusha
mov
jle
inc
add
mov
xchg
sbb
movsl
pop
sub
pusha
pop
or
pop
das
outsb
pop
sbb
insb
pusha
cmp
lcall
bound
lea
sub
aam
mov
shlb
jge
outsl
outsb
xchg
lds
cltd
jl
jb
mov
lcall
pop
aaa
jo
add
pusha
push
inc
int3
push
add
sub
or
ds
jle
inc
dec
lods
adcb
je
xor
lcall
divl
jb
incl
pushw
subl
jle
xor
jp
test
push
or
pop
dec
mov
insl
andl
test
fadd
movsb
dec
insb
push
dec
fidivrs
out
jp
mov
adc
mov
fisubrs
loop
sbb
jp
jb
stos
and
int3
lods
fidivl
cmc
dec
jo
fidivl
data16
mov
add
stc
outsb
jbe
cld
pop
jbe
jns
mov
sarl
mov
sbb
pop
xchg
pop
jl
in
jnp
data16
iret
ja
and
add
or
xor
roll
popa
jp
jl
inc
addb
cmc
mov
lgs
shr
jmp
shr
or
sub
pop
test
js
inc
cmp
jo
mov
mov
mov
cmp
out
jmp
ss
fucomip
ja
mov
mov
sub
xchg
add
ljmp
adc
into
int3
pop
push
out
dec
ss
js
frstor
add
or
mov
ds
dec
pop
xchg
mov
addl
or
imul
mov
out
jo
je
imul
fucomip
push
stc
xor
sub
inc
pop
inc
xchg
and
arpl
or
pushf
fisttpll
movsl
and
jae
mov
ss
ret
pusha
push
push
jp
testb
into
iret
mov
js
mov
or
add
inc
popa
insb
lret
mov
loop
mov
jecxz
add
jle
movb
dec
add
xor
push
mov
or
out
pop
ss
mov
sbb
jae
mov
xchg
push
or
pop
mov
mov
pusha
and
adc
fdiv
jb
xor
or
sar
rcrl
and
shll
stos
cmp
pop
cmp
jns
dec
jl
sbb
mov
mov
imul
ljmp
push
push
leave
sbb
cli
repnz
pop
push
xchg
shll
movsb
xlat
cmpl
xchg
push
in
push
push
and
fisttpll
cltd
xor
test
data16
sub
pop
outsl
inc
jle
xchg
imul
pushl
frstor
lret
data16
hlt
xor
push
or
pop
mov
mov
in
out
and
push
xchg
divl
orl
mov
add
adc
movsb
jmp
xchg
stc
jno
jb
mov
mov
stos
mov
jbe
fldl
sarl
cmp
jno
leave
movl
and
stos
popf
cmp
dec
dec
xchg
fisubl
mull
sbb
adc
xor
ss
enter
cmc
sbb
sub
jp
int3
jns
dec
mov
pop
mov
jb
repnz
sbb
push
sbb
mov
lcall
outsl
mov
lods
js
lea
sub
daa
mov
pop
mov
mov
jp
jo
stc
pop
out
lods
mov
add
jl
mov
dec
je
push
inc
outsl
pushf
mov
sub
lret
call
xorb
lret
mov
cld
jg
push
stc
loope
aad
lret
and
call
xchg
incl
adc
inc
das
sbb
xor
inc
jl
clc
outsl
sbb
mov
xchg
lods
adc
fimuls
xchg
mov
inc
adc
jmp
lret
stc
jl
pop
lcall
jmp
popf
cwtl
jbe
and
mov
xor
mov
std
loopne
sub
mov
hlt
shrb
and
into
jecxz
add
lock
pop
add
data16
cmp
in
push
pause
or
cmc
lcall
es
cli
mov
notl
aas
lds
shrl
and
repnz
dec
aad
sarb
push
insb
call
push
mov
js
sbb
ret
das
jno
xor
outsb
inc
stos
outsb
ret
rcrb
mov
sahf
pop
test
sub
jo
inc
test
mov
outsb
sub
xor
ja
xchg
mov
mov
jle
mov
push
dec
addl
push
sub
lahf
add
ret
popa
bswap
mov
fsubrs
pop
out
pop
das
jo
cwtl
dec
scas
cld
pusha
int
jecxz
das
jb
dec
fsts
add
sbb
add
mov
sub
push
jo
fnsave
jecxz
sub
dec
insb
adc
push
aam
push
add
leave
jecxz
lcall
sbb
pop
aaa
gs
dec
sbb
fs
scas
xor
jle
jnp
repnz
xor
add
cmp
jg
imul
mov
and
scas
fidivrs
inc
loop
jl
lcall
and
shr
sub
fldt
mov
cmc
dec
push
mov
add
lcall
adc
outsl
lret
mov
push
jae
sub
sub
jecxz
pop
add
mov
adc
inc
xor
and
cmp
and
push
push
lahf
cmp
cmc
mov
or
push
sub
and
js
lods
or
stc
and
popa
pop
outsb
pop
cs
sub
mov
rcrb
jbe
js
lea
gs
pop
push
cmp
ljmp
jno
mov
rcrb
xchg
outsl
mov
dec
enter
rolb
mov
movsl
ljmp
jno
push
adc
mov
scas
mov
xlat
sti
icebp
sbb
lock
outsl
push
incl
lret
jnp
push
or
and
sub
pop
inc
sub
xchg
loope
sub
sub
test
and
cmp
inc
shrb
rorl
xchg
push
xor
pop
cld
aad
cli
inc
aad
jo
jbe
jne
mov
inc
mov
push
mov
cmpsl
lock
adc
call
pop
jns
push
mov
sti
shlb
std
test
push
lcall
add
sub
iret
jp
jp
enter
mov
int3
jl
inc
jbe
xor
fbstp
jle
cmpl
push
pop
jle
mov
pop
sub
pop
inc
cwtl
xchg
cmp
and
pop
es
aaa
inc
ja
pop
inc
fldl
adc
and
repz
cmpl
mov
pop
ret
rol
andb
andl
cltd
into
lret
pop
adcl
adc
sbb
je
lahf
mov
inc
int
mov
cmp
inc
jg
shll
push
mov
mov
push
pop
stos
loop
je
pop
jo
outsl
xchg
mov
add
jp
pop
mov
out
xchg
xchg
outsl
pop
jmp
cld
dec
jb
mov
lcall
jle
xor
call
push
jmp
mov
mov
jo
adcb
pop
mov
lods
ficompl
or
pop
or
mov
jb
je
mov
push
fstl
push
bound
mov
pop
jle
out
jne
jp
jne
sbb
jmp
mov
adc
cmpl
jle
push
xchg
and
cmc
pop
mov
sub
mov
xchg
aam
leave
repnz
int
and
cmp
dec
lret
test
in
lret
cli
sub
mov
push
ds
sbb
sbb
add
pusha
pop
leave
stc
stos
mov
test
shl
pop
push
pop
push
mov
jo
adc
jbe
shlb
sub
inc
inc
bound
sbb
jno
pop
and
fcomps
or
xor
ja
cmc
cmp
xchg
sub
out
clc
cmp
jnp
jbe
mov
lock
movsb
pop
mov
mov
mov
jb
jg
push
adc
jl
lcall
sti
shlb
int3
jae
jg
out
ljmp
ja
mov
cmp
frstor
mov
push
jns
mov
jle
pop
out
mov
std
sbb
inc
ret
mov
mov
cmp
pop
imul
mov
popa
push
jb
roll
js
lods
insb
cmp
cmpsb
lods
cs
and
inc
stos
es
cmp
cmpsb
lods
je
dec
ja
pop
add
mov
mov
les
repnz
pop
xchg
or
jb
stc
inc
add
cld
xchg
inc
iret
jno
call
punpckhbw
rolb
jle
dec
lods
bnd
icebp
or
pop
outsb
xchg
shll
mov
gs
jb
outsl
cmp
mov
rcrb
icebp
dec
pop
sub
pop
xchg
or
pop
hlt
addl
inc
mov
sub
jb
jmp
in
popf
arpl
sarb
cmc
inc
bound
lahf
cmp
cli
shrl
pop
jae
inc
repnz
mov
cli
add
cmp
pop
mov
orl
inc
mov
mov
cmp
add
mov
pop
and
fisubl
pop
aaa
add
sbb
cltd
xchg
popa
pusha
dec
and
mov
pop
stc
inc
add
mov
jp
mov
ret
cmp
mov
inc
shrb
outsb
xlat
pushf
xchg
adc
dec
sbb
fidivrs
cmp
fdivrs
mov
sbb
stos
inc
fildll
jb
xor
jnp
outsb
cmp
mov
pop
jae
dec
imull
jle
cmp
lcall
jne
xor
jle
pop
ret
jae
cli
mov
and
frstor
push
cmpl
inc
pop
mov
fldl2t
lods
inc
ss
cmp
ret
cmpsb
sahf
mov
xchg
fsts
cmpl
mov
push
add
adc
and
pop
xchg
lahf
iret
and
xor
mov
dec
inc
xor
fisttpll
aaa
testl
pop
jp
int3
imul
outsb
push
adc
fdivs
or
jo
xchg
dec
mov
add
les
aam
cmp
xchg
sbb
inc
and
fnstcw
movsl
inc
jo
inc
jle
shlb
lds
lcall
sbb
cltd
js
add
jp
test
fcomp
or
adc
jl
mov
cmc
repnz
sub
xchg
das
shr
cli
aaa
pop
mov
ja
cmp
push
jg
shl
cli
bound
lods
adc
scas
ja
ss
push
imull
out
das
xor
mov
jge
loopne
push
mov
fisubrs
lea
xchg
pop
test
rclb
pop
iret
push
out
xor
rorl
or
roll
cmp
or
lods
call
inc
mov
sub
mov
sbb
inc
in
jno
ja
ret
int3
mov
sub
jg
bound
inc
adc
dec
out
jne
lods
pop
imul
dec
clc
pop
ds
pop
mov
jb
and
lcall
jle
lret
ret
pusha
repnz
mov
lret
dec
cmc
sbb
sbb
sbb
xchg
inc
movsb
mov
mov
adc
sub
sbb
sahf
sarl
int
int
xchg
adc
inc
mov
maxps
mov
dec
mov
inc
dec
push
or
lahf
jo
sub
jp
popf
adc
out
lds
sub
add
or
in
jo
mov
scas
xlat
mov
xor
pop
sub
sub
outsb
cmc
pop
and
shlb
mov
cmc
cs
or
dec
or
sub
adc
movl
jbe
call
push
xor
ds
rolb
adc
cmp
inc
mov
or
add
pop
cmpsl
das
loopne
jp
pop
jg
inc
inc
scas
add
sub
dec
inc
jp
inc
push
scas
jl
xlat
in
pop
lret
sbb
dec
sbb
xor
outsb
sub
pop
xlat
add
sbb
jb
adc
bound
dec
adc
cmpsb
into
aam
sahf
add
sub
inc
test
ds
pop
test
xchg
xchg
aas
inc
add
adc
lahf
addl
stos
and
inc
pop
jb
aad
jb
inc
aaa
inc
cmc
add
ss
std
jp
fwait
sahf
icebp
push
pop
sub
pop
push
sbb
pop
fldl
jmp
je
mov
xchg
addr16
lods
adc
dec
cltd
jnp
jmp
push
add
ja
incl
mov
cmp
fstpt
push
mov
mov
imul
cmp
mov
sub
xchg
cmpl
in
jo
mov
dec
repnz
sbb
and
shr
test
inc
dec
xchg
xor
cmp
in
into
xchg
out
push
enter
inc
cs
pusha
loopne
dec
subl
sub
pop
ds
into
cld
xor
dec
cmp
ret
or
pop
iret
stos
pop
aam
mov
fnstcw
xor
sub
outsl
in
sbb
xchg
loopne
stc
jl
ja
dec
test
xor
popa
int
out
mov
lock
pop
loope
xor
dec
push
mov
lods
or
jno
cmp
cli
int3
push
xor
mov
jb
jl
sub
andl
je
cmp
imull
jo
jae
and
push
xor
pop
push
fwait
jg
dec
in
sarb
sbb
inc
ja
leave
stos
ds
pop
out
or
mov
insb
pop
in
js
cli
imul
jbe
and
jae
sar
push
and
mov
push
push
sarb
std
inc
jb
pop
cli
pusha
push
imul
cli
popa
inc
sub
or
inc
add
testb
jae
pop
ss
test
fwait
jg
sbb
js
jae
mov
fisubrl
cmp
sub
jnp
fists
xorl
cmpb
roll
aas
adc
cmc
add
adc
hlt
push
addb
push
pop
les
mov
stos
mov
je
out
jo
loope
jp
cmp
sbb
xor
sbb
mov
pop
jae
sbb
sbb
mov
dec
test
add
mov
cwtl
mov
pop
sub
std
xchg
add
loop
cltd
lea
mov
cmp
jo
fmuls
or
data16
cmp
insl
push
jge
sahf
ret
sbb
fyl2x
icebp
add
mov
lcall
mov
fsts
jle
cwtl
decl
dec
cltd
mov
adc
cmp
inc
in
ffree
in
add
inc
stos
xchg
sub
lods
adc
push
lcall
push
mov
sub
stc
mov
cwtl
lds
jmp
push
lahf
std
shll
test
jp
push
cmpb
jg
jb
cltd
pushf
inc
sub
and
and
push
jae
dec
xchg
loope
cmpsl
add
dec
mov
jae
ja
lret
or
lock
xchg
dec
out
mov
outsb
vcomisd
roll
imul
push
mov
xor
jns
sar
cmp
or
insb
pop
pop
sub
pushf
bound
add
fnstcw
js
xchg
push
out
or
and
pop
sbbb
subl
sbb
pop
lahf
xlat
cmp
and
push
mov
pop
dec
mov
loop
inc
mov
or
movsl
pop
shl
push
icebp
or
ret
adc
aam
xor
mov
push
and
ficomps
fldl
pop
add
out
addb
lcall
movsl
or
cs
jb
fisubrs
popf
xor
jle
popf
pop
jg
sbb
nop
repnz
sar
cmc
jle
lock
lea
and
imull
das
gs
jg
out
pop
arpl
push
jecxz
dec
add
sbb
push
push
pop
ret
push
jl
sbb
xchg
xor
adc
and
push
test
sub
mov
rorl
jns
xor
lret
lret
sbb
imul
test
lods
cmp
jae
pop
push
mov
xor
insl
movsl
xor
mov
lahf
push
pop
jbe
jbe
loope
adc
push
mov
loope
imul
das
push
xchg
xlat
sti
cmc
sub
add
xchg
jg
outsb
dec
inc
xor
mov
lcall
mov
fs
lret
insb
inc
outsb
pop
mov
jmp
cmp
lock
js,pt
das
test
pop
out
fmuls
xor
movsb
std
sub
xchg
mov
add
aam
bound
sbb
jmp
hlt
mov
addb
test
cmp
nop
xchg
pop
dec
cmp
adc
fisttps
mov
push
sub
mov
and
xor
idivl
test
push
add
outsb
jg
jae
mov
ret
mov
push
je
das
fnstenv
outsl
stc
out
add
push
mov
cmp
sub
int3
jae
fisubrl
dec
les
inc
mov
pop
push
addl
fs
pop
cmp
cli
scas
push
aas
push
not
fists
mov
arpl
popa
cli
ss
bound
lcall
pop
and
mov
mov
mov
std
mov
adc
stos
scas
out
xchg
int
mov
test
adc
xchg
nop
pop
aaa
loop
xchg
cmc
loopne
mov
xor
pop
xchg
addr16
xchg
bound
xchg
sub
jbe
push
data16
fbld
xor
out
lret
add
push
xchg
pop
jo
jo
sub
jle
pusha
shrb
fs
sub
xchg
ja
jb
mov
dec
in
ret
std
jo
call
fidivrl
pop
jge
jbe
insb
scas
out
in
mov
test
push
orl
stos
dec
cmpl
dec
frstor
push
sub
mov
dec
insl
adc
adc
shlb
in
ret
sbb
lcall
xchg
lcall
and
push
mov
imul
mov
das
in
in
daa
xlat
jecxz
sbb
sbb
pushf
jl
jle
jne
inc
mov
xlat
jns
push
addr16
jns
daa
jnp
pop
push
pop
popf
je
cs
rolb
mov
les
aas
jp
fwait
or
jo
mov
jle
imul
and
add
mov
xchg
mov
in
out
cmp
mov
mov
mov
mov
divps
dec
clc
push
outsl
leave
mov
outsb
jbe
inc
inc
loope
push
cmp
jo
punpcklwd
repnz
push
push
nop
lods
pop
inc
push
cltd
fs
xchg
fisubrl
std
sbb
mov
pop
scas
fisubl
sub
xorl
aad
nop
xchg
mov
jg
xchg
outsl
icebp
xchg
xchg
ret
sub
xor
fisubrs
mov
fldenv
pop
and
mov
mov
and
aad
jns
nop
cs
shl
pop
and
push
cmp
mov
or
mov
mov
movsl
sub
mov
pop
mov
sbb
mov
je
and
sahf
mov
mov
dec
inc
cmp
js
outsl
std
imul
cli
dec
adc
push
sbb
andnps
mov
push
aaa
push
es
outsb
sti
xchg
mov
outsb
jge
fsubrs
xchg
out
std
push
xor
popf
xor
jecxz
and
xchg
out
jp
add
jbe
push
inc
imul
icebp
push
mov
push
and
pusha
xor
and
jne
call
in
cmp
ficomps
jl
rorb
or
pop
pop
push
mov
add
pop
cltd
dec
movzwl
imul
ja
test
sub
pop
repnz
xchg
adc
mov
es
or
inc
pop
bound
ds
mov
pop
mov
push
cmpb
cmc
sub
test
and
aad
jo
leave
xor
rcrb
das
ret
and
cs
pusha
stos
mov
adc
lea
cltd
jp
jno
dec
jno
aaa
jmp
stc
inc
or
adc
mov
cmp
jo
bound
push
or
mov
cmpsb
sbb
push
mov
sbb
push
xor
xchg
in
push
pop
stos
pop
sarl
jo
enter
and
clc
into
dec
dec
mull
cwtl
push
rorl
xor
sbb
and
icebp
and
pop
icebp
dec
scas
stc
xchg
stc
xor
movsl
cmp
bound
stos
xchg
aaa
sub
mov
inc
dec
in
sarb
jp
das
insb
sahf
pusha
jno
cmpsl
pusha
or
pop
fs
mov
clc
jae
rorl
pusha
add
cmpsb
mov
clc
cmp
fidivs
clc
jp
test
or
dec
xor
xchg
outsb
and
and
pop
sahf
andl
push
sub
push
cltd
dec
jg
sub
jo
mov
pushf
mov
inc
lcall
lods
add
cmp
aam
xor
rorb
mov
int3
or
in
jb
mov
je
rorb
inc
mov
js
imul
lea
loopne
push
push
es
aas
push
sbb
cmp
scas
insb
loop
mov
push
cmc
jnp
push
mov
xor
out
xchg
adc
sbb
cmc
stos
pop
divl
nop
or
adc
sbb
idivl
in
jo
shll
movsl
jg
xor
xchg
orl
bound
cmp
lcall
lcall
fucomi
mov
jb
outsl
jecxz
cmp
jg
in
in
imul
addb
cmp
jecxz
cld
or
and
mov
out
inc
push
fsubrl
cwtl
shll
add
mov
dec
add
cmp
mov
cld
outsl
loopne
fiaddl
jbe
lcallw
inc
push
out
xor
mov
int
imul
incb
mov
pop
rcrb
add
shrl
pop
push
cltd
cmp
fmuls
fimuls
lret
jge
movsb
ret
or
push
jecxz
fstps
out
repz
cmp
mov
sub
lret
pusha
add
pop
and
shr
insl
sub
xchg
mov
notl
ja
imul
pop
ds
ja
dec
out
xor
stc
push
push
sub
and
ret
in
dec
insl
mov
xor
repnz
lods
pop
inc
mov
das
fldl
sarl
setg
push
sahf
andb
push
dec
shlb
xor
xor
mov
lds
sbb
lock
mov
lcall
sbb
inc
outsl
sbb
mov
inc
pop
inc
in
ret
pop
outsl
pop
mov
cli
addb
aam
inc
jno
xchg
fsubp
test
mov
lret
mov
adcb
jp
sti
pushl
test
mov
lcall
push
push
xor
rcrl
mov
imul
xor
inc
testb
sahf
or
cli
inc
pop
xchg
jae
and
xchg
scas
mov
jecxz
mov
lcall
cmp
lret
and
mov
stos
les
cmp
addr16
xor
lcall
das
xchg
sub
lods
pop
js
push
icebp
fiadds
jo
mov
in
mov
and
cli
jo
push
jo
fiaddl
outsl
jg
nop
divl
add
enter
add
sub
add
add
mov
pop
movsl
ja
push
inc
stc
cmp
fldt
fs
inc
stc
mov
in
loope
xor
stos
repnz
mov
and
xor
pop
push
insb
sub
les
inc
cwtl
cld
movsl
xchg
das
mov
bnd
jecxz
cs
pop
jae
lcall
jge
dec
and
and
icebp
andl
popa
sahf
add
dec
inc
pop
in
inc
mov
jo
ds
cmp
inc
or
arpl
fs
data16
loopne
or
hlt
inc
sub
in
ret
mull
mov
insb
js
sub
push
shll
les
in
outsb
popf
mov
or
xchg
fstp
pusha
fcmove
insb
jge
aaa
jmp
into
lock
add
dec
aaa
pop
addr16
out
jb
push
mov
inc
mov
inc
jbe
sbb
daa
push
lcall
cmp
jecxz
das
cmp
push
jns
push
sbb
and
out
jg
inc
dec
xchg
cmp
inc
cmpsb
outsl
push
pusha
sub
cld
xchg
out
in
icebp
inc
loope
cmp
testl
push
ja
sarb
pushw
jns
cld
mov
das
mov
adc
mov
push
add
hlt
jp
lods
jnp,pt
retw
lahf
jbe
dec
dec
sbb
lcall
jmp
ret
xchg
jl
push
mov
mov
dec
lcall
aaa
shrl
inc
nop
sub
xchg
lret
subl
xchg
outsb
jno
aaa
fldl
sub
pop
sbb
pop
adc
test
bnd
xchg
inc
xor
repnz
daa
bound
sub
sub
add
sbb
mov
mov
sahf
inc
pushf
cmp
mov
mov
sub
aad
and
or
idivb
xor
int
mov
lcall
cmp
arpl
test
adc
mov
loop
in
pop
js
enter
push
cld
jne
repnz
lds
insb
mov
subb
pop
popa
pusha
push
xor
mov
outsb
mov
in
add
cmpsl
jbe
jmp
push
mov
jb
add
and
int3
add
jp
lds
mov
cwtl
pop
or
jns
ds
call
out
xchg
inc
or
les
inc
jp
js
fisubs
mov
ljmp
mov
cmovnp
add
je
stc
xor
xchg
scas
jo
jp
outsb
xchg
jp
cmp
roll
daa
lds
xor
je
in
fsubp
jle
lcall
mov
push
inc
movsl
imul
xchg
popf
cmp
es
fsubrl
imul
test
xor
rolb
ds
jnp
jge
pop
jmp
imul
inc
fists
stos
divl
sbb
in
and
mov
loop
rcrb
nop
test
rcr
jno
outsb
jno
pop
push
cltd
pusha
dec
xor
inc
icebp
push
adc
mov
inc
aas
icebp
mov
pop
cltd
dec
push
inc
andl
jb
mov
or
or
pop
cltd
mov
inc
add
imul
jp
call
js
jmp
lcall
scas
and
iret
mov
rcll
clc
in
inc
pusha
repz
jecxz
inc
pushf
stos
pop
int
push
add
and
inc
stc
xchg
jge
das
iret
pop
mov
in
mov
and
and
mov
insb
outsb
inc
rcll
xor
arpl
jne
cmp
jbe
imul
cmpl
icebp
movsb
jge
shrb
imul
call
popa
xchg
icebp
add
fldt
or
jnp
mov
and
adcl
pop
and
lcall
xor
and
xchg
jp
xor
std
xchg
lea
xor
pop
adc
sbbb
ja
inc
aaa
push
mov
clc
sbb
sbb
enter
aaa
and
and
xchg
mov
push
push
cmovb
outsl
aam
dec
stos
movsb
sub
imul
std
push
cmp
inc
jg
push
xchg
aam
test
jae
sbb
adc
or
test
pop
test
sbb
outsl
jnp
jns
jle
push
cmp
loop
inc
mov
je
adc
or
pop
xchg
pop
rolb
addl
fsts
or
arpl
outsl
pop
add
icebp
daa
pop
jg
inc
stc
sub
mov
jns
adc
mov
rcl
ret
daa
dec
sub
fstpl
lods
mov
ret
mov
or
dec
dec
add
jae
je
xor
pop
out
push
adc
loopne
add
jp
mov
mov
xor
in
ss
scas
pop
xlat
lcall
push
aas
out
pop
pop
pop
mov
sti
dec
dec
mov
lods
and
dec
xor
int
sbb
push
and
sub
into
lcall
xchg
dec
pop
inc
fidivrl
es
cmc
pop
or
pop
push
ret
mov
dec
mov
inc
in
inc
xor
adc
stc
cmp
push
mov
jae
mov
sbb
decl
adc
dec
icebp
ss
inc
push
imull
inc
jmp
dec
jp
loop
xor
mov
sub
xorl
xchg
pusha
mov
mov
xchg
daa
outsl
loopne
loope
sbb
mov
adc
pusha
ss
dec
aam
enter
mov
loopne
lcall
sti
sbb
push
dec
fsubrp
ja
push
cmp
jecxz
mov
lret
mov
dec
lcall
cs
pop
mov
data16
xor
push
jp
mov
ret
loopne
lock
mov
push
adc
inc
dec
pop
sbb
xchg
mov
jp
xlat
mov
and
sub
and
add
test
pusha
dec
pop
imul
out
gs
filds
xor
dec
jp
cwtl
leave
dec
inc
lret
sub
stos
adc
daa
push
xchg
inc
in
test
mov
push
andnps
mov
push
pop
cwtl
lret
daa
jae
aad
jno
push
add
movaps
cmpsb
push
scas
cs
fcmovne
push
jmp
lods
mov
loopne
or
les
push
sahf
xchg
into
ja
lcall
imul
cli
sub
mov
inc
stos
daa
sbb
icebp
stos
cmp
cmpl
push
xor
cs
inc
out
inc
dec
add
outsb
lret
ret
loop
and
push
jg
mov
lcall
mov
sub
popa
cmp
cmp
into
psubw
pop
sbb
aas
mov
adc
ss
mov
lret
ds
cmp
xlat
pop
imul
push
rcll
inc
je
into
xor
mov
dec
lcall
and
icebp
popa
sbb
pop
mov
decb
out
icebp
pop
xchg
mov
add
bound
dec
bound
dec
bound
dec
bound
dec
push
aaa
arpl
mov
dec
xchg
ja
imul
mov
cmp
in
out
push
pop
movsbl
jg
xor
or
rcrl
lcall
pop
lds
adc
dec
lcall
inc
test
dec
jo
cmp
mov
sub
push
inc
or
das
xor
dec
mov
aaa
loop,pt
cmp
mov
and
imul
leave
repz
test
sub
jnp
lret
pop
sbb
dec
outsb
jne
jno
jbe
lods
and
and
insb
ja
cli
mov
and
sbb
cltd
pop
pop
and
pop
jmp
xor
incl
ja
aaa
pop
sarb
jg
stc
sub
aad
int3
sub
scas
jno
ss
cwtl
xchg
xchg
xorb
push
stos
nop
das
and
repnz
gs
fstps
cmp
pop
jecxz
and
cwtl
mov
cmp
jae
bound
cwtl
jnp
sahf
jns
orl
test
jo
sbb
inc
cmp
adc
jne
aaa
push
jg
inc
outsb
xor
pop
out
lods
jne
pop
push
sahf
loopne
cmp
outsl
je
outsl
push
lods
lods
sarl
ljmp
inc
mov
leave
clc
jg
jnp
fidivrl
imul
sub
jne
pop
mov
fsubp
add
pop
mov
adc
sahf
pushf
loopne
xor
fisttpll
outsb
gs
adc
push
pusha
push
movsb
sub
xchg
xor
js
clc
lahf
cli
icebp
cld
jge
pop
outsl
popa
enter
xchg
push
adc
jecxz
sbb
aas
out
push
mov
je
or
sbb
call
in
dec
fptan
iret
fidivs
lds
push
aam
add
sar
sub
mov
test
or
pop
mov
ds
fdiv
out
lcall
sbb
push
movsb
jbe
jbe
lcall
sub
daa
outsl
xchg
xchg
xor
pushf
mov
pusha
ds
test
mov
mov
push
jl
jns
shll
movsl
jmp
xor
jmp
ds
jle
jae
xchg
push
cmp
add
push
mov
outsb
xor
mov
lea
mov
jbe
mov
aaa
xchg
shr
mov
mov
xor
sbb
ja
scas
dec
int3
push
jl
out
cmp
mov
or
or
gs
pusha
insl
jle
pusha
jne
xchg
and
outsl
or
lahf
testl
shl
and
pop
inc
loop
and
mov
popa
dec
cwtl
mov
sub
mov
xor
lds
dec
push
pop
or
test
or
orb
push
pop
lcall
outsb
scas
imul
std
leave
fsubrp
jl
or
sub
xchg
or
push
inc
mov
push
push
mov
xchg
test
cs
das
ljmp
jbe
push
hlt
mov
daa
mov
sub
inc
jb
imul
push
push
scas
cltd
cld
and
jle
or
aam
test
mov
push
movsl
jge
lock
and
push
mov
mov
out
inc
bound
into
stos
dec
and
fsubs
pop
sub
outsb
jge
das
fisubs
sbbl
or
jle
xchg
add
mov
ds
xchg
pusha
fbld
cmp
push
pop
test
mov
scas
lods
lods
sahf
hlt
cmp
lcall
xchg
jge
jl
scas
pop
stos
lods
hlt
aaa
test
in
cmpsb
xor
fstpl
inc
inc
pop
push
int
mov
mov
data16
repz
xchg
das
outsl
outsb
lock
pop
je
push
fadds
cmc
inc
pop
mov
add
jb
sbb
imul
mov
mov
mov
add
add
out
ds
stos
cmp
out
gs
imul
jle
fimull
sub
fs
cld
lret
ds
test
pop
mov
xor
lret
jg
jae
ret
mov
inc
pop
adc
idivl
data16
mov
add
test
push
add
mov
xor
stos
push
add
jmp
xchg
mov
icebp
ret
jo
push
pusha
and
jle
xorl
outsl
pop
mov
std
xchg
mov
or
daa
orl
enter
cmp
push
xor
and
lcall
jb
ljmp
push
jb
fcmovne
mov
xchg
mov
outsl
adcl
jns
jb
fdivrs
mov
and
cmpsb
cmp
lock
pop
jbe
pop
aaa
push
inc
mov
xchg
mov
jne
jo
or
jae
mov
imul
or
ja
cmp
add
adc
pop
nop
rcrl
push
inc
in
pop
inc
outsb
and
add
jb
dec
popa
pop
cmp
sub
shrb
xchg
das
add
stc
add
inc
dec
imul
cmpsl
js
xor
jge
subb
jp
lods
std
repz
daa
and
jecxz
xor
repnz
arpl
out
pop
addr16
jl
mov
xor
stc
lret
jno
lea
xor
in
push
stc
sbb
jl
dec
xchg
js
xor
dec
test
push
sbb
adc
lods
ficoms
dec
jecxz
mul
in
jno
mov
and
jbe
jo
fs
or
push
loopne
mov
mov
lcall
and
or
in
sub
mov
push
std
popa
ret
int3
stos
inc
mov
and
popa
sarb
insl
and
mov
sub
push
push
jns
pop
sbb
shrb
mov
mov
loopne
and
dec
xchg
inc
fxam
ja
loope
mov
icebp
clc
mov
mov
lea
adc
xchg
bound
test
or
fdivrs
das
in
insb
mov
mov
add
lcall
cmc
cli
push
push
rclb
jl
repnz
push
lret
push
andb
int
and
aam
jbe
jle
xchg
mov
loopne
mov
jno
mov
cmp
shlb
daa
sbb
cmp
aaa
out
ss
arpl
clc
pop
ret
jne
and
jns
sbbl
das
xchg
xchg
frstor
sub
andb
pop
jbe
pop
lods
loop
test
inc
cwtl
push
ja
fbstp
mulb
mov
imul
std
push
lcall
dec
pop
xlat
jb
out
enter
mov
in
push
call
icebp
add
or
nop
outsl
gs
enter
xor
cmpsb
jnp
jle
mov
outsb
jmp
or
gs
frstor
pushf
clc
aaa
xor
pusha
js
sbbl
ja
rcl
repnz
outsb
fisubrl
jl
cli
loop
out
dec
out
cmp
lret
push
shrb
nop
jnp
and
mov
add
in
push
push
inc
jnp
inc
xor
sahf
cmp
std
incl
jb
lods
dec
icebp
inc
pop
xor
xchg
xor
xor
mov
daa
push
dec
jle
pop
dec
clc
and
jl
add
pushf
xchg
sub
dec
xchg
test
mov
xor
out
pusha
pop
cld
add
jg
pop
popf
clc
add
in
jp
mov
stos
lret
pop
add
dec
test
cmpb
daa
inc
mov
and
pusha
jnp
popf
orl
lods
pop
lcall
movsl
adc
shr
jns
push
jp
imul
shll
dec
and
out
jl
pop
fcmovne
popa
jns
mov
das
adc
shrb
or
xchg
inc
sbb
ja
mov
insl
inc
imul
push
shr
cmp
sub
scas
pop
roll
xor
xor
sub
mov
jbe
fxtract
lcall
rorb
jmp
fsubs
xchg
inc
stc
out
lods
fidivrl
daa
ret
jp
mov
divb
push
or
addr16
scas
push
aaa
cmp
mov
sahf
lret
lcall
lret
fbld
and
adc
adc
bound
sub
push
cltd
mov
push
sub
popa
cmp
std
or
ja
dec
sub
xchg
sbbl
lret
pop
imul
idivl
sub
aaa
add
cmc
cmp
lcall
fisubl
lock
imul
add
shrb
pop
mov
shll
pop
xchg
push
or
xor
cmpsb
xor
clts
sbb
cld
inc
test
add
sbb
cmpsb
cltd
lods
cwtl
mov
repnz
lock
stc
xchg
jge
pop
push
jae
lret
lock
into
subl
or
dec
push
cmp
popa
mov
data16
pop
jns
cli
xor
jns
xor
push
push
push
cltd
test
inc
repz
sub
pop
jecxz
push
pusha
xchg
jno
add
jae
hlt
and
dec
mov
lds
clc
mov
pop
mov
pop
out
sub
cwtl
mov
popa
cmpsl
js
cs
pushl
loop
mov
inc
xor
std
pop
dec
sub
sbb
gs
sub
pop
push
mov
insl
pushf
popa
fs
cmp
push
shlb
sbbl
outsb
add
or
xchg
push
cs
adc
fisttps
ss
adc
xor
add
int3
lock
push
repnz
stc
xor
push
jo
and
mov
mov
sub
imul
jb
jns
stc
adc
sahf
pop
data16
xchg
push
je
outsb
push
inc
jno
sub
icebp
jns
push
sub
pop
decb
jp
lock
shlb
push
mov
icebp
mov
inc
imul
cmp
or
pop
jns
outsb
loop
sub
jle
incb
push
mov
lret
push
pop
add
xor
mov
bound
in
push
clc
nop
pop
aaa
cmpsb
jmp
jae
stc
scas
pop
mov
push
lds
or
cmp
cmovs
lahf
jo
loop
sbb
js
scas
das
aam
jmp
sbb
loope
xchg
inc
rorl
das
sbb
push
push
pushf
clc
xor
imul
xchg
xchg
fsubrl
jne
dec
ljmp
scas
mov
stos
add
in
mov
mov
fs
lret
test
xchg
jo
jae
ret
cmp
out
or
sar
mov
jp
sub
pop
pop
push
xor
jp
pop
add
jbe
mov
sahf
sarl
dec
out
mov
push
sub
mov
scas
aam
cld
xchg
cli
add
xor
cmc
push
adc
push
shrb
push
push
or
mov
mov
cwtl
push
in
jb
jb
push
inc
test
pop
add
xchg
pusha
sbb
push
enter
pop
vmwrite
sbb
in
scas
fcmovb
repnz
xchg
pop
or
mov
add
jge
mov
jbe
cmpsl
in
jnp
sub
mov
pop
mov
sub
outsl
push
sbb
mov
mov
add
add
int
mov
lahf
into
push
mov
shrb
test
cltd
jno
addr16
sbb
inc
jl
mov
xchg
dec
dec
pop
jp
add
stos
fsts
add
push
out
sub
mov
or
or
jge
inc
lcall
adc
or
inc
push
push
aas
in
and
sarb
jne
xor
push
std
mov
push
ja
xchg
scas
in
inc
aad
add
pop
ret
inc
xchg
push
aas
lods
imul
and
and
push
jne
cmp
mov
fisubs
negb
dec
scas
rcll
adc
fcoms
fwait
pushf
aad
nop
mov
push
sub
test
pop
push
out
out
cmpl
jmp
fstps
orl
adc
movsb
es
cwtl
mov
js
and
test
push
mov
pop
in
add
je
lcall
inc
outsb
pop
jb
xor
rorb
xor
ss
neg
das
imul
ja
sti
js
cltd
aas
andl
pop
sbb
bound
jecxz
pusha
movsb
sti
mov
notb
out
mov
add
adc
sub
sub
pushf
cmp
and
and
cmp
pop
or
jbe
push
or
repnz
xor
ss
xor
fdiv
jns
mov
and
pop
xchg
out
push
pop
mov
xchg
lea
cmpsb
fildl
mov
clc
sub
and
xchg
mov
cmc
cmp
mov
xor
push
sub
xor
lods
inc
jns
inc
ja
in
dec
loop
das
mov
outsb
inc
xor
gs
outsb
sbb
scas
nop
dec
sbb
lock
cmp
mov
jne
xor
outsb
push
pop
xor
jbe
lcall
mov
dec
dec
mov
or
xor
push
cmp
jl
push
add
push
pop
xor
jmp
lcall
add
add
mov
stc
outsb
jg
mov
fcomip
jb
dec
fists
stos
push
mov
pusha
and
jb
push
sub
and
inc
sbb
dec
and
cs
mov
push
std
sar
adc
fidivs
inc
out
rcr
lret
jno
loope
cmp
mov
and
sahf
add
push
into
rcll
pop
jle
fcoml
mov
adc
pop
aas
xor
insb
or
js
sub
jp
and
fs
mov
ret
mov
inc
pop
jo
xor
sub
mov
js
sub
adc
fstps
ja
inc
cwtl
in
jb
cmc
cld
int
lods
xor
inc
incb
test
and
jbe
dec
jo
test
and
aaa
jno
jecxz
ss
cmp
rcrb
andl
mov
add
mov
or
cld
jne
imul
in
imul
xlat
pop
fiadds
pop
or
scas
cmp
cmc
test
dec
jbe,pn
inc
cld
enter
jno
push
dec
mov
add
inc
mov
sub
sbb
xchg
inc
push
inc
mov
inc
pop
shrl
or
repnz
shrb
mov
stos
xor
cmp
dec
mov
pop
sbb
jge
push
outsb
jmp
outsl
mov
sbb
lret
mov
push
lcall
push
int
pusha
add
in
jle
cmp
ja
orb
fcoms
lcall
jno
mov
insl
push
mov
out
add
mov
shrl
aas
movsb
cmp
pop
jecxz
jnp
or
push
arpl
push
fdivl
je
fstl
push
les
pusha
in
cmp
pop
push
and
mov
inc
add
add
aas
inc
addb
sub
mov
and
mov
push
daa
test
test
rcrl
push
aaa
xor
add
sub
cmpsb
push
inc
outsl
scas
mov
mov
pop
pop
mov
xor
push
dec
jecxz
dec
or
rorl
icebp
jns
outsl
or
jbe
xor
aas
cs
pop
loop
adc
rorl
js
jle
jo,pt
xlat
pop
arpl
mov
push
test
inc
sub
scas
mov
push
popf
jno
jns
nop
jo
ret
stc
int3
cmpsb
jecxz
jmp
les
jp
aad
mov
pop
fdivrl
std
mov
sbb
dec
xchg
sbb
test
xchg
and
pop
addr16
mov
in
jb
jmp
ds
jmp
pop
mov
fiaddl
int3
in
and
mov
test
insb
adc
and
outsl
data16
xor
mov
or
aad
push
push
lock
iret
pop
pop
test
aaa
push
pop
inc
xor
pop
add
enter
mov
xchg
cmp
jg
jecxz
leave
jns
cmp
inc
dec
and
sahf
dec
push
pop
jbe
jns
mov
inc
mov
inc
jo
into
ss
aaa
jne
rolb
inc
sbb
sub
jo
sbb
sahf
xor
ss
mov
movsb
mov
mov
xlat
in
in
lea
je
cmp
call
in
cmp
outsl
adc
ret
and
sub
ds
mov
lods
jo
mov
outsl
scas
mov
int
sub
in
sbb
inc
push
xchg
shl
pusha
add
sti
repz
xor
jp
pop
out
mov
cli
rorl
fs
fisttpl
mov
sbb
inc
dec
in
aaa
into
nop
inc
int
scas
fs
mov
or
adc
sahf
daa
mov
xchg
dec
outsl
and
lcall
dec
out
hlt
xchg
dec
mov
rcrb
xchg
adc
aaa
mov
jns
sub
dec
cmp
rcrb
xor
cmpl
push
lods
imul
mov
add
subb
jnp
dec
bound
fcmovb
adc
loop
cli
push
dec
lret
push
test
fwait
push
jns
loop
jbe
sbb
push
push
pop
jbe
imull
cmp
jp
mov
lcall
scas
jecxz
loop
clc
movsl
push
dec
jno
cmp
cmp
xchg
push
push
lods
stc
pusha
decb
push
inc
call
add
push
in
and
push
neg
data16
mov
mov
stos
sti
and
in
cmpsb
dec
push
mov
scas
mov
pop
mov
cmp
jg
jno
mov
push
mov
mov
das
xchg
jno
inc
pop
jg
scas
out
jae
push
inc
lock
hlt
pop
mov
js
xchg
jb
movsb
jl
mov
push
cwtl
inc
mov
jle
xchg
test
es
enter
ss
add
push
sub
dec
pop
sbb
sub
inc
repnz
mov
pop
dec
adc
sub
fs
mov
jne
dec
sub
mov
push
lea
lods
sbb
jmp
sub
lcall
je
mov
adc
xchg
and
incb
jo
mov
orl
jg
jge
aas
pop
push
pushl
cmpsb
addl
enter
adc
xchg
outsl
inc
cmc
sbb
jl
stc
sub
imul
sbb
scas
in
stos
pop
add
jp
daa
inc
std
jae
and
outsl
sub
push
sbb
in
jmp
mov
js
pusha
mov
mov
adc
cmp
or
mov
jns
jae
jp
lcall
and
in
sub
addl
jle
mov
mov
or
mov
mov
aad
movsb
push
fmull
pushl
xor
add
mov
jns
mov
prefetch
mov
jl
sbb
dec
sbb
mov
cmpsb
aaa
jnp
dec
scas
cmc
xor
lods
cld
andl
data16
jne
mov
sbb
imul
test
mov
pop
sbb
or
jge
lcall
insb
xor
cmp
or
pop
outsb
gs
push
jnp
in
push
cli
cli
cs
jmp
inc
lcall
push
push
sbbl
loope
fsubrl
cmp
je
cmc
repnz
cltd
jae
shll
add
stc
sbb
fwait
and
pop
mov
fdivp
inc
inc
pop
mov
mov
gs
arpl
xchg
push
cmc
mov
adc
jbe
cltd
mov
orl
mov
xor
jle
je
sub
divl
out
dec
pop
je
sbb
pop
sub
addr16
adc
mov
jns
jb
xor
add
mov
lods
lret
jo
xchg
stos
stos
dec
mov
or
ljmp
outsb
ret
push
out
pop
mov
pop
pop
mov
cmpb
xchg
gs
or
mov
in
inc
outsb
add
pushf
fisttpl
inc
sbb
add
inc
jne
rorb
lcall
push
mov
xchg
jnp
mov
iret
into
inc
pop
jge
mov
mov
lret
lock
jb
mov
adc
es
mov
xchg
jns
loope
mov
cltd
outsl
outsl
imul
jb
and
negl
jg
and
or
add
mov
xor
popa
sub
hlt
jno
mov
inc
adc
inc
stc
push
xor
push
je
mov
push
sub
pop
pusha
orb
sub
bound
movsb
sub
xor
lcall
daa
sarb
pop
repnz
out
fdivrl
push
sub
xor
xor
andb
ja
inc
cmp
jp
inc
ret
movd
sbb
inc
rorb
imul
mov
mov
lret
and
ds
xor
fisttpl
subb
mov
test
sarl
shrl
loope
cmpl
jp
testb
inc
jb
test
jle
repz
adc
sub
fdivrs
mov
inc
imul
insl
lcall
cmp
jle
enter
push
adc
push
jl
pop
mov
inc
ljmp
dec
popa
call
pop
cmp
aam
push
js
cmp
inc
cmp
cmp
add
flds
jmp
xchg
scas
movl
lcall
fucompp
fsts
mov
push
stc
inc
mov
lret
cmp
scas
jns
and
xchg
xchg
into
push
mov
jg
sub
add
lcall
pop
imul
pop
cwtl
and
leave
mov
or
test
cmp
jnp
sbbl
lea
fidivs
ss
dec
out
imul
lcall
imul
ja
lds
ret
fistps
fdivrl
into
jne
pop
jno
test
aad
jno
es
rcl
movsb
sahf
outsl
lock
sub
jo
mov
add
test
mov
rcl
subl
mov
jno
pop
add
lcall
jb
fwait
imul
shrb
inc
pop
sbb
cmp
dec
cmp
std
lcall
push
fbld
adc
push
push
inc
adc
push
gs
hlt
imul
fists
pop
inc
imul
jmp
cld
cmovo
inc
push
pop
jae
sub
cmp
lock
fsubrs
inc
incb
iret
xchg
jo
pop
outsb
lock
push
or
sbb
and
sub
clc
mov
loopne
jmp
addr16
and
mov
cmp
pop
sahf
aas
add
push
orl
xchg
sbb
mov
sub
std
inc
xor
test
movsl
lret
enter
xlat
jnp
negb
xchg
addr16
ss
adc
lock
pop
xor
or
test
js
mov
xchg
mov
cmp
cli
jb
xor
cli
arpl
cmp
mov
push
mov
push
stos
pop
fsubs
loope
lret
fiadds
cmp
mov
sub
outsl
push
cwtl
mov
ret
sbb
jmp
xchg
clc
rcrl
ja
cmp
pop
lock
movl
sub
cwtl
out
call
bound
cmp
sub
cs
iret
jns
dec
mov
add
adc
xor
nop
lcall
lret
add
ret
pushf
pop
jecxz
xorb
xor
aaa
or
and
rolb
sub
dec
call
cmc
stos
push
adc
pushl
into
cwtl
sbb
inc
inc
lret
sahf
cmp
push
imul
nop
gs
dec
push
jbe
add
int3
dec
and
xchg
sub
cli
fidivl
xchg
dec
sbb
or
push
push
sbb
mov
jno
shlb
cmc
cmp
mov
mov
cmp
idivl
repnz
mov
cmpsb
push
jno
inc
sti
lcall
push
inc
inc
cld
jo
dec
icebp
xchg
push
jmp
fidivrs
in
or
testl
jb
mov
xorl
setae
cmp
jno
mov
or
fs
ljmp
jno
data16
jge
xor
addr16
pusha
jle
xor
in
xor
daa
xchg
je
lret
jnp
mov
outsl
jno
xchg
stos
rorl
dec
pop
sbb
sahf
outsl
fdivr
outsl
add
frstor
inc
stc
sti
jmp
push
setp
je
in
setl
jno
jns
and
inc
jle
jg
mov
xchg
je
sub
jge
push
ljmp
push
fisubrl
enter
cmpsb
lea
aas
adc
imul
push
push
fldt
xchg
js
xchg
jbe
cmp
add
mov
add
lret
mov
jmp
aas
fldt
pushf
orl
push
xor
xor
push
push
add
mov
daa
sbbl
movsl
jae
shlb
or
xor
mov
sub
jb
cmp
jno
lret
cmp
mov
jns
les
dec
fwait
jbe
lods
jb
jno
and
or
movsb
ljmp
in
inc
jl
xor
cmp
sbb
repz
sub
sub
inc
sub
pusha
adc
fst
jno
ljmp
das
pop
xor
xchg
idivl
rcrl
sub
movsl
pop
cmp
jbe
jb
outsb
outsl
cmpb
ljmp
push
mov
mov
hlt
jg
xchg
or
in
dec
daa
cmova
ljmp
inc
negb
adc
xchg
aaa
cmp
scas
cmpl
bound
cmp
jg
ss
sbb
mov
fnstcw
outsb
cltd
cmp
dec
outsl
sub
clc
bnd
clc
mov
pop
jb
add
jne
push
add
push
rol
rdpmc
cld
pop
inc
mov
outsl
pop
xor
aam
jmp
dec
dec
pop
enter
arpl
dec
and
mov
dec
xchg
arpl
push
sub
int
adc
cmpsb
aaa
fdivs
xchg
pop
test
mov
adc
push
xchg
push
inc
mov
push
out
xor
stos
mov
test
or
and
or
push
icebp
add
push
inc
pusha
jp
and
shlb
mov
in
inc
insb
jo
dec
loop
push
lds
jnp
mov
imul
fdivs
xor
mov
enter
daa
rcr
cmpsb
pop
cmpsb
aas
push
mov
cmp
pop
loop
pop
push
fidivl
pop
roll
sar
jmp
not
mov
lods
in
mov
mov
jae
push
xchg
pusha
adc
xlat
add
lea
mov
push
lret
out
maxps
lcall
or
lret
ljmp
popa
adcl
mov
popa
cmp
jecxz
jne
arpl
push
shrb
leave
in
push
adc
or
int
inc
mov
adc
xchg
sbb
cmpsb
sub
or
jmp
notb
jbe
pop
inc
mov
lods
push
lahf
test
mov
ja
mov
xor
pop
ret
adc
sbb
clc
fstl
xor
xchg
sub
adc
test
outsb
jle
outsl
orl
lcall
fcomi
jg
cmp
jo
scas
negb
ja
jns
mov
mov
mov
imul
in
mov
pop
icebp
ss
mov
rcll
or
sub
iret
mov
movsl
xor
outsl
dec
or
jbe
sub
fstpt
pop
dec
pop
add
jl
outsb
addb
add
jb
push
push
insb
inc
repnz
ss
jne
rolb
call
sti
push
and
add
enter
dec
jbe
loopne
inc
pop
ret
cmp
xor
in
jnp
popa
cmc
xorb
xchg
loope
cmp
dec
dec
and
cmp
int3
xor
and
sbb
shlb
movsb
xlat
mov
push
add
cmp
shlb
loopne
imul
mov
sbbl
push
sar
cmp
imul
emms
lods
dec
sti
lret
pop
push
sub
sbb
out
icebp
aaa
dec
cmp
cmp
or
fnsave
jle
test
int
ja
nop
push
push
push
dec
pushf
push
cs
sub
mov
pop
hlt
mov
mov
cmp
aam
int
pop
stc
les
jne
pop
adc
lret
sahf
add
push
shll
fmulp
pop
jle
sbbb
pop
stc
rolb
and
xor
adc
and
sub
stos
push
jl
cmc
adc
das
jg
sub
jo
sbb
insb
sbb
xor
pop
sbb
sub
stos
mov
ds
test
jae
push
mov
mov
cmp
add
pop
js
jge
xchg
in
push
sbb
xchg
push
cltd
imul
jno
inc
jae
jp
cli
mov
and
mov
or
js
or
mov
push
setnp
adc
dec
test
and
test
push
lahf
or
adcb
es
jae
mov
data16
pop
xchg
adc
fldenv
scas
mov
xchg
or
sahf
xchg
xchg
das
push
add
icebp
out
jae
insl
sub
movsb
push
jge
pop
hlt
jle
sti
jp
or
sbb
lea
adc
mov
enter
cli
insl
insl
hlt
jp
lcall
imul
gs
sbb
dec
adcb
mov
pop
lcall
inc
in
in
pop
push
stc
push
fbstp
push
or
mov
add
lcall
xchg
fdivs
push
cmp
out
pop
sub
jmp
lock
imul
dec
push
jecxz
pop
mov
mov
xlat
popa
ss
scas
loop
add
push
add
cmp
sahf
xchg
dec
push
cmp
dec
adc
adc
xchg
inc
out
mov
popa
loope
push
or
jns
sahf
addl
pop
leave
outsb
je
hlt
adc
das
mov
cmp
and
stc
push
mov
add
pushf
mov
push
leave
inc
and
lock
arpl
sahf
fsubl
cmpsl
xchg
mov
repnz
adc
inc
daa
pop
xchg
jp
sbb
adcl
aad
imul
or
push
icebp
and
push
pop
mov
addl
or
je
add
jmp
jnp
xchg
popa
push
mov
jb
pop
mov
adc
inc
out
hlt
lock
and
and
sub
or
or
repz
lcall
adc
push
mov
mov
pop
loopne
xchg
repnz
cli
imul
or
pop
jge
cs
xor
mov
cmp
xor
movsl
sahf
fs
mov
js
in
add
push
dec
xchg
sbb
pop
es
cli
mov
xor
mov
dec
and
lods
inc
push
or
sbb
in
das
sub
push
stos
ja
add
in
ret
and
andb
imul
mov
lcall
ret
idivb
repnz
xor
ss
jle
mov
or
sub
adc
cmp
mov
push
and
repnz
inc
pop
mov
mov
js
sub
orb
andb
xchg
fstpl
addr16
popa
mov
bound
inc
jns
jbe
cmp
scas
cwtl
push
sti
jbe
or
in
xor
mov
xor
push
cmc
add
testl
cmp
pop
add
test
push
push
je
mov
and
loopne
je
loope
cltd
mov
sub
mov
xlat
mov
daa
sbb
cmp
arpl
ja
jle
cmp
push
lcall
mov
adc
pop
mov
push
adc
adc
inc
lds
pusha
push
cmp
xor
subl
shr
aad
scas
cli
jns
imul
cmp
pop
insl
lret
shlb
mov
sub
ret
loop
adc
mov
fdivrs
stc
cltd
push
lldt
jno
cmp
sarl
stc
and
sbb
outsb
xchg
xchg
jne
and
js
add
inc
outsl
jg
in
cmpsb
lea
inc
xchg
ficoml
push
push
inc
arpl
dec
sub
je
sub
lods
dec
ja
xchg
push
fsubrs
fsub
test
loop
jge
jno
sbb
cmp
or
cli
lods
std
out
sub
inc
xor
loop
xor
cmp
sbb
loopne
mov
jns
orl
out
sbb
in
dec
lds
leave
aaa
ja
jg
push
cmpl
sbb
jp
out
push
imul
push
push
leave
aaa
fdivrs
sbb
outsb
or
les
outsl
enter
sbbb
ss
movsl
ja
mov
packsswb
lcall
mov
out
push
std
adc
sbb
xchg
add
cmp
cmpb
jnp
aad
pop
std
xor
je
and
ret
lock
inc
push
mov
cmp
jl
or
paddb
movsl
dec
jecxz
inc
imul
dec
cmpsb
scas
les
test
shlb
push
push
shlb
and
fsts
leave
in
in
cmpl
in
lret
bound
push
icebp
add
in
push
adc
bound
lcall
push
adc
xchg
sbb
jnp
and
cmp
pop
leave
int3
sub
icebp
imul
inc
jns
lea
jnp
push
push
push
js
push
and
cltd
xor
or
cmp
and
imul
lmsw
ds
or
jne
xchg
test
xchg
repz
pop
cltd
lret
lahf
xor
mov
mull
jnp
mov
jbe
ja
aad
push
ds
and
ljmp
jo
pop
dec
push
jle
xor
jb
push
jne
jp
dec
push
adc
xchg
dec
sub
inc
adc
pop
dec
dec
pop
push
subb
pop
test
addl
mov
pusha
insl
int3
nop
jns
test
call
cmp
xchg
mov
jecxz
fdivrs
mov
sub
xor
adc
fldl2e
lret
mov
inc
fwait
push
daa
mov
data16
dec
fisubrl
insl
repnz
and
dec
push
stc
mov
lea
xchg
xchg
stos
inc
mov
andl
lds
mov
mov
and
stc
bound
stc
dec
adc
sub
das
repz
dec
mov
inc
jae,pn
jle
orl
jns
bound
data16
dec
and
leave
jp
xchg
sar
shll
stc
or
idivl
daa
or
push
jae
add
xchg
add
and
outsb
aaa
inc
jns
mov
push
cmp
jle
es
aad
sub
fistl
sub
mov
sahf
pushl
jle
sete
mov
pusha
pop
pop
ficomps
mov
and
jae
mov
gs
cmp
push
adc
mov
pop
into
lods
rcpps
shrb
in
and
inc
popf
jno
call
lahf
add
ja
addl
lret
push
mov
rolb
ud1
lods
std
mov
or
lcall
push
push
jp
jne
aas
jg
inc
stc
inc
addb
orb
mov
shlb
dec
inc
dec
fnstsw
test
mull
add
sbb
stc
jp
mov
pop
ljmp
mov
ret
and
xchg
push
xor
xchg
lret
sub
add
and
push
xchg
add
jae
inc
int3
bound
pop
add
out
pop
jg
jmp
sub
xchg
add
sub
adc
loopne
jb
mov
add
and
cmp
loopne
std
sub
xchg
cli
inc
cwtl
pusha
aaa
mov
push
mov
push
in
ljmp
aad
jecxz
xchg
dec
das
testl
or
loope
stos
mov
add
insl
xchg
fimuls
cmpsl
sub
xchg
or
xor
sbb
into
cmp
sub
aaa
shlb
or
bound
bound
popf
movsl
push
or
js
stc
jl
lods
pop
mov
jbe
cmpsl
mov
xor
lods
sub
loope
pusha
jl
sarb
je
inc
xor
and
sahf
lock
jl
incb
dec
addr16
movsb
add
dec
bound
divl
iret
inc
cmp
dec
mov
add
jmp
je
ja
jmp
mov
testb
jmp
stc
scas
repnz
stos
xchg
push
push
add
jp
sub
mov
push
xchg
bound
je
pop
out
addr16
jae
shlb
mov
jbe
cld
mov
jae
push
mov
movsl
mov
ret
insb
aas
sub
ret
xor
clc
sub
repnz
add
roll
jo
sub
cmc
inc
cmp
test
fistpll
cmp
aam
lret
dec
jp
leave
or
lcall
lret
mov
scas
ror
xchg
loope
aam
outsb
pop
fs
js
fbstp
dec
inc
mov
jbe
jnp
movsl
cli
test
scas
push
jle
int
nop
and
sub
fldl
cmp
jl
inc
stos
call
cmp
stos
jne
sub
popa
nop
scas
stc
js
dec
mov
bound
xor
mov
mov
adc
mov
push
ds
fidivl
cli
jbe
loop
sub
test
ss
pop
mov
jg
test
xchg
push
push
xchg
aas
testb
xor
into
inc
lods
sbb
es
jnp
popf
jo
aas
jno
push
sahf
sub
jb
cmpsl
jnp
cmpb
dec
push
xchg
pop
mov
daa
jge
shlb
std
xor
enter
test
jle
cmp
xchg
add
sub
add
daa
pcmpeqb
data16
leave
jb
ss
enter
imul
test
and
ret
int
cmp
das
cld
xchg
jp
push
sbb
xor
mov
cli
adc
adcb
sub
fdivrs
call
sbb
mov
jg
jmp
decb
and
mov
repnz
addl
and
pop
std
push
and
push
or
dec
jno
mov
ret
scas
inc
ss
in
shl
js
jp
les
or
jno
outsl
repz
jge
push
cmpsb
lret
idivb
xchg
adc
decl
stc
jo
sub
inc
jb
jae
jle
loop
insl
in
jge
sbb
lcall
aad
mov
xchg
inc
and
mov
cmpsb
inc
cltd
repz
test
push
jne
xchg
sbb
jae
sub
pop
mov
bound
push
jl
dec
sbbl
dec
pusha
outsb
pop
jbe
bound
dec
aad
imul
divl
loop
jp
mov
mov
push
lcall
mov
andl
outsl
mov
sbb
dec
enter
leave
xor
jb
mov
jl
jbe
in
sub
xchg
inc
les
jle
jbe
or
data16
popa
insb
jmp
cmp
icebp
lret
in
pusha
push
js
xlat
ljmp
pusha
inc
xor
sahf
jle
push
ljmp
sbb
iret
pusha
pusha
aaa
and
cmc
mov
in
ja
jge
jl
nop
pop
lcall
test
in
xchg
adc
cs
es
roll
push
pop
ja
add
pusha
jge
test
push
push
ret
testb
pcmpeqd
in
push
lahf
cmpsb
das
pop
mov
mov
xchg
mov
and
clc
lea
testb
call
xchg
jb
pushf
add
cli
jne
pop
pop
cwtl
mov
filds
jle
push
xor
pusha
push
jg
pop
and
adc
sarb
lret
inc
or
imul
mov
add
subl
out
and
xchg
sbb
out
mov
jno
add
pop
cmp
addb
out
stc
jo
sub
ss
rcr
hlt
and
insb
shll
in
xor
sub
dec
jns
std
cmpsl
mov
sub
cmp
jae
ret
loopne
inc
sub
sahf
cmp
repnz
mov
sbb
and
popf
lock
loop
imul
cltd
or
push
repnz
dec
dec
cmp
sub
push
push
stos
cwtl
jge
xor
test
fistl
ljmp
add
pop
sbb
data16
aad
lahf
mov
sti
int
testl
rorl
les
jne
pushf
daa
lds
cmp
cld
fsubs
ss
js
xchg
lcall
ljmp
outsl
imul
cmp
loope
icebp
outsl
repnz
outsb
mov
jbe
xchg
lea
insl
mov
aaa
xchg
leave
push
mov
sbb
fcoms
push
pop
in
popa
pop
jbe
push
sub
inc
cmp
out
jb
fidivrs
jae
push
insb
pusha
inc
ret
jns
and
mov
lcall
in
lea
jmp
test
in
dec
cld
jb
testl
cmp
lcall
test
pushf
lea
dec
hlt
jno,pn
push
insl
or
pop
lahf
or
movsl
fst
int3
imul
in
daa
scas
leave
jns
js
je
outsb
lahf
lahf
add
cmc
and
das
jns
xor
mov
jnp
ja
jae
pop
dec
and
adc
jl
mov
mov
fistpll
xchg
add
outsl
rorl
shl
nop
sub
xchg
xor
and
fsub
mov
aam
pop
adc
loope
leave
xchg
adcb
pop
repz
jo
xor
xor
dec
inc
mov
mov
dec
in
ficoml
jl
push
pop
mov
cmp
js
fcomps
inc
in
fimull
sbb
xchg
gs
lret
outsb
inc
in
test
inc
inc
xor
pop
std
icebp
data16
cli
mov
es
lret
push
sub
mov
cmc
and
mov
dec
cli
cltd
xor
in
inc
test
mov
outsb
xchg
jle
in
inc
aaa
sub
repz
mov
lcall
in
ljmp
push
add
repnz
lret
popa
aad
std
fwait
lea
into
push
aas
ret
test
movsb
adc
add
decb
mov
int3
xorb
hlt
je
mov
aad
push
ret
hlt
pop
sub
hlt
into
pushf
mov
inc
jbe
pop
js
dec
sti
push
out
popa
cmc
xor
xor
xor
into
and
movsb
xchg
cmp
mov
jmp
push
gs
adc
fcmovne
icebp
fidivl
sarb
roll
add
mov
pop
popa
dec
addr16
imul
aas
testb
inc
pop
cmc
dec
setl
data16
lcall
lods
xchg
or
push
in
and
mov
lret
int
fsubrl
jge
sti
jns
push
cmp
test
imul
and
or
push
lahf
std
mov
and
push
xor
cwtl
repz
push
lcall
cmp
jno,pt
pop
jle
lret
sbb
pusha
stos
cmp
mov
test
into
loopne
aas
dec
je
xor
jne
jp
aaa
shl
xchg
cmp
add
push
insb
lcall
sbb
add
arpl
shll
jno
ffree
mov
movsl
push
mov
dec
aas
jne
xchg
sarl
outsb
xchg
imul
or
gs
jle
lcall
push
mov
add
bound
dec
push
xchg
push
xchg
and
sahf
js
popa
loopne
dec
xchg
cmpsl
jo
xchg
jle
mov
add
ljmp
xchg
mov
daa
outsl
std
sub
add
aad
test
mov
xchg
sub
add
ja
movsb
cmp
mov
call
jne
jns
and
mov
pop
and
icebp
xor
pushl
cmp
pop
pop
jae
push
cmc
adc
add
push
xor
ficoml
cmpsl
mov
lods
inc
flds
push
mov
cmp
jl
sub
pop
fsubrs
xor
std
incl
sub
mov
in
and
ljmp
inc
loope
jg
mov
rolb
outsl
inc
cmc
cltd
push
jbe
push
push
mov
sbb
inc
lcall
sbb
mov
mov
leave
clc
dec
pop
lea
pop
inc
mov
in
sbb
xchg
cwtl
jns
scas
mov
bound
jb
sub
mov
in
pop
mov
rcr
repnz
movsb
shrb
cmp
pop
bound
or
and
in
shlb
inc
and
dec
or
mov
clts
popa
lcall
push
pushf
xor
dec
iret
push
call
dec
jno
popa
aam
mov
sbb
or
hlt
sbb
cmp
jno
nop
outsb
ja
pop
pusha
sahf
pop
push
and
xchg
sbb
fiadds
pop
mov
movsl
jb
idivl
push
cmp
subl
es
pop
ljmp
jl
pop
stc
xor
push
cmp
mov
mov
jae
mov
mov
loop
and
or
push
jo
fldl
mov
xchg
push
cmc
js
rclb
inc
xchg
cmpsb
pop
fdivs
jbe
cmp
xchg
push
cltd
jns
jle
jno
ret
dec
xor
cmp
dec
dec
mov
mov
jne
xchg
push
mov
lods
inc
fmull
ljmp
bswap
and
jne
jge,pn
jns
sub
dec
into
xor
xchg
pop
stc
push
loop
cmpl
or
cmpsb
fcomp
fisubl
push
cmp
lock
fs
pop
hlt
sub
or
addr16
push
rorb
cmovns
add
push
sarl
and
mov
rorb
fistps
xor
imul
sub
xchg
add
sub
xor
repz
push
daa
frstor
sbb
mov
inc
cmc
and
jne
jg
mov
cmp
add
imul
sub
add
lods
cld
cmc
ret
pop
insl
rolb
ja
and
dec
jo
cmpl
xor
stos
pop
mov
mov
adc
mov
jg
fidivrl
popf
loope
xchg
loop
sbb
pop
pop
xlat
js
das
xlat
xchg
jb
and
add
je
push
testb
mov
shrb
into
dec
add
mov
negb
out
dec
push
insl
aad
jae
sbb
cmc
cmp
jns
pop
ds
or
jl
dec
rcll
lcall
inc
lret
mov
in
fiadds
jb
rclb
jbe
sahf
std
scas
data16
sbbl
lock
xchg
jns
sbb
jp
cli
adc
arpl
cmp
fbstp
fwait
jb
push
cli
pop
cmc
sub
pop
stos
js
inc
mov
xchg
cmp
es
add
dec
iret
in
sub
push
jge
pop
inc
mov
outsl
sbb
enter
hlt
mov
loopne
xor
adc
js
mov
mov
sbb
lods
or
lret
fsubl
sbb
mov
push
jmp
push
jmp
push
cmp
push
mov
scas
jbe
mov
ret
inc
in
xchg
cmp
insb
int
cmp
test
sahf
pop
mov
arpl
push
sub
mov
test
fstpt
pop
dec
add
xchg
lret
mull
mov
inc
out
push
scas
push
sub
or
int
push
mov
pop
dec
outsl
pop
mov
imul
repz
jecxz
jae
push
daa
js
dec
lahf
aam
xchg
sbb
js
bound
pop
pop
andps
mov
out
and
movsb
jb
pop
outsl
sub
subl
and
icebp
scas
inc
mov
negl
lock
mov
aam
mov
das
out
pop
movsl
sub
xor
pop
clc
xor
ss
cmp
fimuls
sub
sub
jp
mov
jae
inc
test
inc
pop
iret
xor
push
mov
push
lds
pushf
dec
mov
cmp
inc
dec
test
subb
popa
jle
icebp
or
mov
ja
stc
fisttpl
jmp
jle
ljmp
rcll
das
lret
out
cmpsb
mov
out
cmp
and
mov
pusha
sahf
outsl
loope
das
aas
lcall
fucomip
push
hlt
pop
cli
addr16
ss
xor
inc
sarl
mov
jg
mov
fidivrl
mov
push
push
sbb
insl
xor
add
loop
push
sbbb
inc
add
rclb
in
sbb
in
xor
xchg
cwtl
cmp
sub
sahf
xor
fstpt
mov
xchg
sbb
inc
into
sbbl
cli
lock
mov
mov
push
fs
pop
mov
mov
clc
lret
inc
insb
loop
dec
cmc
sub
cmpsb
sub
add
xor
adc
dec
jmp
cmp
jno
sub
xchg
or
xor
ds
sub
popa
xchg
pop
cmc
push
dec
mov
pop
add
jmp
xor
nop
or
shl
ret
xor
xor
or
int3
pop
popa
test
pop
sub
jmp
or
and
mulb
xchg
arpl
in
push
dec
push
xchg
gs
jno
aas
xor
dec
dec
std
jmp
add
lret
iret
fcoml
push
mov
sub
mov
jge
test
pop
js
jle
sub
pop
mov
mov
mov
inc
mov
cmc
mov
dec
pusha
inc
test
push
sub
jnp
mov
jo
roll
mov
orl
ret
push
push
fbld
aaa
pusha
sub
loopne
dec
add
jno
shlb
and
seta
xchg
mov
popa
jmp
in
cmc
fdivr
mov
fsubrp
ja
sbb
mov
das
movsb
ret
scas
mov
dec
pop
mov
ret
pop
mov
fisubrl
dec
xchg
popa
mov
test
ds
insb
and
pop
mov
add
rorb
xlat
fmull
inc
adc
jne
fucomp
inc
mov
adc
cmp
or
push
imul
jge
cwtl
mov
push
sub
testb
arpl
cltd
outsl
mov
in
movsl
jo
pop
fisttps
xor
mov
ljmp
pop
jb
test
xchg
sub
lcall
adc
aas
bound
add
add
lret
nop
fwait
lret
data16
pop
imull
xor
clc
fildll
cmp
aas
dec
mov
ds
push
xor
sub
or
push
jnp
cmp
pminub
aas
push
xor
imulb
movsl
jns
adc
pop
xor
ret
imulb
iret
and
stc
jl
xor
fcmovnbe
jl
test
pop
sbb
daa
outsb
jbe
jb
shlb
xchg
lock
dec
sub
mov
pop
std
repnz
test
inc
jo,pn
mov
mov
repnz
and
xor
cmpsb
call
adc
sets
pop
mov
rcr
mov
lcall
and
dec
push
outsl
lds
dec
bound
sub
loopne
adc
sub
into
insl
pop
rcrb
decl
push
lock
xchg
xchg
je
adc
insb
mov
lret
shll
add
push
lcall
cmpsl
insb
mov
pop
mov
stc
add
nop
pop
xchg
sub
cmp
fisttps
xchg
imul
ret
icebp
int3
mov
pop
mov
push
enter
xor
lcall
add
sbb
or
dec
sub
sbb
sbb
lods
mov
shrb
insb
xor
pushf
jecxz
vpsubw
test
mov
cmp
fisubl
lock
xchg
xchg
and
adc
stc
into
pop
outsl
mov
lret
sub
dec
inc
add
lcall
shl
mov
out
int
adc
add
test
loop
pop
push
adc
cs
outsb
or
fists
pop
cmp
lcall
enter
mov
cmpsl
xchg
adc
jle
pusha
lret
aam
push
test
loope
jne
push
push
stc
mov
add
dec
pop
stos
aad
push
arpl
jl
cs
daa
jnp
rclb
aaa
fldcw
add
xlat
jle
fldpi
pusha
scas
dec
push
in
das
cmp
xchg
pop
out
or
cmp
inc
mov
bound
mov
or
mov
int3
sbb
pop
testb
mov
shrb
and
mov
cmpb
push
push
fdivs
ljmp
sub
and
stc
pusha
mov
mov
ljmp
gs
dec
lret
push
xchg
add
je
push
out
aaa
mov
mov
push
pop
xchg
fisttpll
jmp
aaa
pusha
and
in
jbe
sub
imul
bound
cs
cmpsl
aad
sbb
lcall
sbb
sahf
incl
jns
mov
inc
sbb
cld
or
ja
lcall
cmpsb
and
push
divl
mov
aas
adc
mov
lcall
ds
sbb
or
adc
je
and
test
ja
inc
sbb
jno
into
inc
pop
mov
das
out
xlat
lahf
dec
cmp
or
adcb
mov
mov
inc
or
mov
mov
xchg
push
mov
jp
add
xor
inc
push
ds
xor
bound
jb
outsl
cli
xchg
push
inc
pop
push
and
push
xchg
pop
pusha
dec
add
inc
jle
test
add
movsb
cmp
cmp
lock
cmp
and
sub
push
negl
cmc
push
addr16
rcr
lods
lret
in
mov
pop
pop
mov
pusha
xchg
inc
sbb
gs
cmp
in
and
out
outsb
pusha
fimuls
fisubl
mov
ficompl
xchg
jne
fistpl
xor
push
jge
data16
das
mov
andnps
scas
push
jle
mov
test
imul
pop
sbb
imul
es
int
ss
push
scas
pop
pop
push
ljmp
fucomi
jp
sub
jg
or
sbb
add
dec
push
lret
push
sbb
jo
adc
xor
loopne
mov
in
sbb
icebp
jb
lcall
fbstp
push
cmpsb
and
xor
or
addr16
test
lock
cmp
outsb
cmc
and
push
cmp
adc
xor
push
imul
pop
fildll
test
mov
jp
das
mov
stos
or
inc
inc
scas
js
push
fwait
pusha
nop
xor
add
stc
jg
mov
lret
ja
jb
or
cmp
pusha
xchg
jns
dec
mov
xor
fidivrl
subb
inc
xchg
rclb
pop
loop
imul
jecxz
movsb
mov
cmp
xlat
ds
rcrb
inc
mov
lock
daa
mov
jns
mov
cmp
mov
sub
jne
push
sbb
and
loope
mov
xchg
dec
mov
cli
add
in
clc
and
mov
add
dec
popf
js
mov
jns
xor
add
push
loope
mov
sahf
psubsb
into
push
mov
call
int3
repnz
fmulp
cmp
and
imul
cmp
les
jmp
mov
push
pop
pushf
or
adc
adc
or
jne
xlat
and
addb
loope
ds
addl
iret
mov
loopne
bound
push
jne
cmp
popa
inc
sbb
jbe
sub
pop
jnp
jecxz
idivb
stos
xorl
addb
add
push
testl
mov
mov
jecxz
in
mov
cmp
push
addr16
xchg
cmp
int3
jp
mov
jno
stc
int
sub
sub
pop
addl
inc
outsb
and
pusha
dec
xchg
jp
push
push
mov
push
dec
inc
mov
push
jge
mov
sar
fs
outsb
push
jb
pop
add
cmp
jp
divl
add
adc
jecxz
cmp
xchg
mov
jne
xchg
shll
or
das
das
or
sub
pop
xor
stc
and
xchg
xchg
xor
bound
ret
mov
mov
sub
mov
popf
cmp
xchg
jo
std
outsl
xchg
cmp
xchg
aas
xor
adc
push
out
mov
xchg
cmp
pusha
out
cli
negl
push
out
push
mov
xorb
xchg
insl
ljmp
sub
stc
mov
out
sub
scas
pop
xchg
pushl
xor
loope
mov
lock
mov
ss
xchg
jp
lcall
hlt
enter
xlat
sahf
cmp
out
std
push
loop
sub
fidivrl
dec
push
add
flds
loop
ljmp
jne
loop
scas
sub
mov
inc
vmaxps
das
out
inc
cld
stos
sub
cmpsb
fstpt
stc
and
mov
addr16
jb
stos
movl
filds
int3
incl
xor
add
push
jl
pop
jae
and
and
stos
pop
js
lcall
xchg
jne
xor
shrl
insb
jbe
lret
dec
fisttpl
xlat
lea
add
int3
adc
mov
sub
addr16
mov
pop
mov
int3
rorl
sbb
int3
dec
xor
add
dec
mov
mov
cmp
negb
pop
adc
lret
ret
add
jp
icebp
stos
inc
scas
scas
fidivrl
fsubrl
mov
mov
call
leave
leave
iret
jmp
xlat
push
mov
ljmp
xchg
or
lock
cmpsb
lods
xor
or
mov
xchg
sbb
bound
cli
lcall
mov
ret
cmp
mov
xor
insb
lods
xchg
js
mull
jae
sarl
pop
addr16
jbe
push
sbb
sub
insb
call
sbb
sub
adc
jbe
repz
mov
mov
jns
cs
aad
scas
call
push
ffree
pop
shll
and
mov
jl
xor
pop
or
cmp
and
adc
int3
mov
imul
test
jo
or
xchg
push
ja
outsb
add
test
cmp
lcall
mov
xor
lcall
dec
inc
inc
fwait
scas
arpl
xchg
cmp
shrl
lds
lods
js
or
push
dec
mov
mov
jae
icebp
mov
or
mov
flds
pop
stos
adc
dec
adc
pop
jne
cli
jle
cmp
jns
ja
test
or
pop
cli
mov
jp
cmp
sub
and
push
or
jp
cmc
andl
repnz
mov
ja
pop
ret
pop
inc
pop
cmpsl
mov
enter
push
jns
dec
or
js
dec
dec
xor
mov
int
fwait
add
sub
outsl
cmc
sub
into
adc
cmp
fdivl
jnp
mov
sbb
stc
or
ret
popf
or
aam
lcall
inc
sbb
std
push
lcall
adc
push
jecxz
inc
stc
arpl
push
les
jl
arpl
lcall
sti
lret
lahf
bound
push
push
or
movb
nop
adc
or
sbb
int
mov
ret
addl
js
pop
rcrl
data16
mov
and
fcos
and
sbb
push
inc
cmp
imul
inc
cld
push
jle
xor
cmc
jbe
mov
leave
or
addr16
outsb
jo
lret
and
imul
les
xchg
sbb
aaa
scas
xor
fwait
jge
lcall
cmp
lcall
or
sahf
push
nop
inc
test
jne
out
add
pop
scas
scas
daa
cltd
int3
out
sti
repz
mov
jns
shlb
pop
icebp
jno,pt
add
roll
aaa
in
push
rcll
addl
insb
xchg
mov
jb
adc
mov
dec
insb
lea
xchg
pop
mov
jo
jae
push
enter
inc
pusha
or
push
shrb
jmp
in
loopne
jo
test
outsb
mov
mov
pop
add
loope
insb
push
push
sar
sub
jle
jg
sub
lret
outsb
hlt
es
addl
push
pop
outsb
gs
inc
sbb
xor
loopne
dec
sub
mov
adc
or
out
pop
cltd
imul
loopne
xor
jne
jns
inc
fldl
push
mov
ret
jns
adcb
test
sub
mov
push
lret
aaa
xorl
mov
pushf
push
pop
icebp
pop
and
inc
fstpt
scas
mov
lcall
into
loop
xchg
lret
or
ljmp
xchg
lock
dec
mov
jb
add
and
lods
cmp
fnstsw
bound
and
lods
xchg
push
jp
fbstp
dec
imul
push
cmp
jne
rcll
out
adcl
push
pop
insl
push
cmp
pop
sub
int
inc
push
xor
movsl
and
jb
push
test
jmp
jbe
jmp
int
or
sub
cwtl
and
scas
fdiv
outsb
cmp
aam
ficomps
jmp
fsubrl
mov
jae
punpckhdq
leave
push
xchg
mov
inc
xchg
js
xchg
lret
out
mov
cltd
test
sub
inc
jae
jbe
mov
xorl
cmp
daa
js
dec
jp
js
or
jns
push
fsubs
addl
xchg
inc
fcoms
mov
cmp
push
jns
loope
sbb
inc
mov
jns
lock
adc
push
stc
dec
pop
movb
push
or
shrl
div
jns
fisubs
out
insl
dec
int3
inc
mov
pop
sahf
cwtl
cli
xor
mov
or
rcl
ret
loopne
mov
push
aam
cmpsl
inc
push
mov
cmp
jg
push
jp
inc
mov
hlt
xchg
add
add
mov
imul
cmc
inc
ljmp
xchg
rorl
push
push
sub
in
lock
lcall
dec
mov
sub
jne
cmpsl
jns
repnz
addr16
push
fadds
aas
dec
or
jp
outsb
add
arpl
test
xchg
pop
outsb
insb
xchg
popa
enter
roll
jge
shll
mov
lcall
inc
and
xor
fnstsw
sahf
das
in
jl
push
pop
rcrb
add
int
fadds
pop
pop
lods
sti
test
jo
sub
cmp
jmp
addr16
or
xor
imul
leave
pop
mov
jecxz
push
in
data16
idivl
pop
test
pop
push
mov
movsb
scas
mov
jb
push
xor
pop
pop
jo
xchg
out
pushw
jp
dec
popf
jp
and
push
fcompl
inc
jne
cmc
sar
inc
sub
lret
pop
loope
rclb
inc
loop
jle
jl
pop
test
inc
je
imull
and
cltd
push
sahf
in
cmp
jle
aaa
aam
mov
xor
lahf
xor
mov
and
xchg
mov
push
inc
pop
xchg
xor
out
and
aad
pushf
nop
sub
loopne
adc
push
push
dec
mov
cmp
push
and
stos
cmp
roll
jmp
xchg
lahf
ljmp
xor
jl
pop
nop
insb
xor
jne
mov
fwait
push
jo
adc
gs
and
sbb
test
and
lea
sbb
loope
repnz
jmp
jg
or
fcoms
sbb
enter
pop
xor
out
outsb
outsb
addr16
pop
adc
push
push
subl
fs
movsl
xchg
cmc
gs
push
inc
ret
inc
push
pop
jle
add
sti
push
shrl
push
add
jae
ret
rorb
fistpll
cmp
inc
cmp
test
idivb
mov
jecxz
sbb
jg
ret
int3
outsl
rorl
aas
xor
mov
fucomp
push
jle
sbb
jb
cmp
add
adc
je
adc
movsl
cmp
pusha
inc
xorl
push
inc
pop
add
es
lret
les
scas
push
jp
xchg
fisttpll
out
cli
lcall
jnp
xchg
cmc
push
inc
test
andl
sub
iret
test
cmp
bnd
cld
lcall
push
pop
sub
mov
inc
icebp
cli
insl
outsb
mov
and
sub
sub
jp
movq
stos
std
fiadds
xchg
jge
stc
dec
inc
xchg
outsl
testl
sbb
andl
rol
pop
jle
scas
sbb
xor
and
pop
inc
and
mov
cmpsb
shrl
add
xchg
bound
jno
sti
mov
ss
lcall
jl
mov
inc
jp
hlt
xor
int3
enter
pop
jo
mov
popa
outsb
ja
leave
pop
pop
xor
fistpll
pop
push
sbb
push
cmc
push
aas
and
mov
xchg
xor
cli
std
fidivl
xchg
popf
sbb
aad
pop
mov
push
mov
xchg
add
aam
pop
push
repnz
aam
dec
decl
pop
and
sbb
aaa
sarb
call
ret
test
push
shrb
test
jp
stos
arpl
jbe
in
or
pop
sar
icebp
enter
jle
ret
inc
ret
inc
lret
xorb
mov
repnz
std
mov
nop
das
push
jnp
jnp
mov
or
andb
and
jg
pop
cmp
jmp
pop
aaa
loopne
sbb
out
cwtl
and
test
sub
mov
ret
dec
lods
mov
xor
push
inc
insb
repnz
cli
lock
imul
daa
and
out
dec
cmp
mov
xor
jle
xchg
jg
ljmp
add
ss
sub
fisubs
sbb
jbe
add
push
push
fsqrt
mov
push
sub
and
mov
adc
in
jae
mov
clc
xor
cmp
fisubl
xchg
add
loopne
jge
xchg
das
jp
push
xor
inc
ret
mov
jno
orb
sti
mov
add
cmp
icebp
mov
pop
jb
out
sti
ds
jo
inc
mov
ljmp
in
push
js
stc
cmp
pop
idivb
sub
lahf
stc
cwtd
in
xor
dec
pop
cmpsl
cmp
js
pop
and
inc
sbb
sbb
das
sti
dec
add
mov
sbb
loope
push
stos
jnp
idivl
jae
roll
inc
jbe
cmc
repz
sbb
hlt
pop
xor
jmp
push
xchg
mov
aaa
mov
and
mov
test
push
jns
nop
lods
negl
ret
aaa
sahf
nop
outsb
sub
push
mov
lock
sub
adc
mov
sbbl
das
inc
jbe
test
add
loop
add
add
push
cmp
repnz
js
sub
icebp
pusha
mov
push
in
pop
ljmp
test
cltd
xor
mov
mov
imul
pop
xor
ja
sbb
cmp
fldenv
int3
mov
nop
stos
pop
mov
aaa
xor
xlat
cmc
sahf
or
xor
in
jge
stc
dec
adc
jecxz
loop
sub
or
push
and
in
repz
sbb
cli
stos
xchg
jbe
cmpl
xorb
stc
sub
push
cmp
loope
mov
jne
sbb
jp
pcmpgtw
inc
sti
outsb
jmp
and
ljmp
cwtl
or
and
insw
mov
lock
pop
sbb
or
stos
and
push
ret
cs
sahf
das
popl
test
pshufw
sbb
out
ds
repnz
bound
sub
std
ss
xchg
sub
insl
scas
js
xor
or
cmpsl
stc
std
mov
xor
repz
cmpsb
lcall
fidivrl
push
push
xlat
ds
mov
cmp
icebp
jb
aaa
jecxz
movsl
dec
or
dec
frstor
jb
jns
xchg
mov
adc
xchg
fnsave
mov
add
and
out
xor
fisubrl
xor
adc
ss
add
dec
ficompl
mov
mov
inc
fimuls
inc
imul
into
adc
xor
xor
test
mulb
mov
inc
dec
fimuls
mov
xor
dec
and
rorb
repz
call
ljmp
mov
daa
push
dec
popa
dec
jo
jp
gs
imul
fists
lahf
lock
sub
xchg
insb
jnp
fucomi
inc
inc
push
add
shrb
sbb
imul
mov
sub
inc
outsl
xchg
xor
lock
mov
imul
call
sub
negl
xor
test
fcompl
stos
in
leave
and
daa
and
loopne
cmc
icebp
loopne
lock
jne
in
outsl
and
mov
sub
xchg
ljmp
into
jnp
fmul
xor
fcmovne
cli
outsb
loopne
test
dec
push
add
sub
fadds
shl
data16
and
dec
std
sub
cld
js
cmp
sub
cmp
xor
sahf
inc
jl
xor
cli
outsb
das
cmp
jl
cltd
lcall
bound
mov
xor
pop
lcall
jns
sub
int3
imul
in
fsubl
dec
fstl
sbb
push
push
scas
cs
test
mull
negl
mov
dec
mov
jge
cmp
ja
ret
jnp
pusha
std
js
pcmpgtw
int
push
mov
loop
jecxz
inc
dec
xchg
jl
and
sbb
push
sti
xor
sub
jns
jge
gs
mov
lods
mov
das
push
xchg
in
pop
ja
cmpsb
subb
xchg
push
xchg
push
pop
repnz
pop
sbb
hlt
pmaddwd
jmp
sub
scas
stc
mov
pop
inc
sbb
bound
repnz
mov
test
scas
loope
mov
or
xorb
movsb
and
cmp
and
movb
rclb
xor
jg
xchg
test
iret
repnz
xor
aaa
jns
add
outsb
sub
mov
stc
sbb
or
mov
cmp
mov
mov
dec
push
sti
cli
pop
scas
mov
dec
inc
jge
je
xor
repz
push
or
ss
stc
js
jns
stc
push
and
lock
pushf
jbe
mov
insb
mov
imul
scas
mov
add
push
jl
xor
mov
jo
push
js
mov
popa
mov
mov
mov
or
mov
xlat
jle
cmp
xchg
or
push
push
dec
mov
xor
je
cmp
pop
jno
fildll
pop
cmp
dec
lcall
lods
ret
arpl
mov
sbb
mov
je
mov
jg
add
lret
pop
pop
test
fistps
add
jnp
aam
jecxz
lcall
pop
les
inc
mov
idivl
jns
cmpsb
call
pop
call
pop
adc
std
cmpsl
stc
in
ja
insl
push
out
in
pusha
xor
cmpl
pop
push
push
into
orl
icebp
repnz
push
loop
mov
adc
lods
pop
dec
inc
dec
push
xchg
pop
inc
add
jne
pop
xor
mov
lcall
inc
jb
dec
mov
mov
inc
mov
jmp
sbb
xor
pop
cmp
das
mov
push
insb
je
out
arpl
pushf
stc
inc
leave
cmc
xor
das
imul
xor
repnz
lret
and
lcall
imul
push
mov
adc
movsl
je
cld
stc
xorl
jl
jge
xchg
data16
push
scas
repnz
jl
dec
ja
cmp
arpl
rcrb
xorb
xor
and
adc
sahf
mov
mov
into
inc
inc
xchg
mov
lcall
cmpsb
enter
add
mov
sbb
lcall
push
scas
dec
mov
insl
sar
cli
imul
mov
pop
mov
std
push
sahf
lcall
add
jnp
xchg
lods
push
das
in
mov
stos
adc
push
push
pop
and
pop
pop
das
ss
fdivrl
repnz
adc
testb
jmp
or
xor
and
mov
xchg
jge
pop
popf
icebp
stos
mov
dec
inc
insb
std
aas
mov
pop
jmp
test
dec
pop
popa
lock
das
inc
scas
inc
aas
sbb
pop
cmp
push
pop
inc
mov
xor
clc
mov
pop
les
or
sbb
mov
enter
and
movswl
or
imul
imul
dec
cmp
popa
jp
in
rolb
es
pusha
mov
dec
scas
jb
xor
push
xor
push
rorb
inc
je
add
xlat
pushf
je
lret
push
jl
into
or
jno
cmp
adc
pop
add
sub
push
popa
xchg
loope
lcall
aas
sti
popa
and
cli
inc
ds
sbb
xor
xchg
mov
mov
and
divb
or
jp
sbb
push
push
ja
xchg
test
ds
pop
cld
aas
jp
lcall
mov
sub
ljmp
add
lcall
daa
loope
js
out
push
pop
sbb
mov
negb
dec
cs
inc
jge
leave
adc
out
push
in
mov
mov
xor
xorl
adc
and
in
and
add
aam
lret
ljmp
out
jo
mov
jno
sub
jo
dec
cmp
mov
outsb
jns
pop
cltd
ret
inc
jp
cmc
sub
jo
fs
and
pop
push
cltd
loope
sarl
cli
daa
cltd
adc
insb
push
xor
inc
pop
pop
inc
sub
les
dec
sar
daa
sub
imul
push
jae
cmp
mov
xor
push
out
jp
adc
mov
pop
pop
inc
pop
gs
fstps
sub
ret
pop
cmp
jmp
lret
stc
jl
lahf
divl
jle
cmp
sbb
lcall
stos
cmpsb
dec
xor
aas
jb
jle
lret
jmp
jl
dec
repnz
test
add
call
sub
jbe
jno
jno
push
lret
fcoml
push
loop
xor
out
cwtl
add
sar
cli
scas
popa
xorl
addl
jecxz
xchg
out
fisubl
sbb
add
cmp
jo
aam
std
jae
sbb
fisubrl
add
jbe
sbb
xor
sarb
push
js
xchg
rorb
test
sub
jnp
cmp
jno
sub
bound
shl
pop
stc
push
xor
bound
jae
repz
xor
cltd
ss
inc
cmp
cmp
mov
icebp
fsubs
mov
pop
cmp
outsb
iret
push
push
xor
lahf
pop
sbb
enter
popa
mov
sbb
and
add
mov
scas
push
fldcw
push
push
pop
dec
inc
or
inc
imul
stos
in
hlt
adc
cmp
fdivrs
jbe
adc
cmp
pop
cmp
cmp
rorl
popa
push
imul
jne
inc
aam
aam
lock
mov
pop
push
data16
sti
repnz
imul
in
xchg
jno
jo
aas
into
cmc
dec
es
arpl
push
xchg
cltd
mov
das
pop
iret
xor
jne
dec
or
or
mov
cli
movsl
sub
and
xlat
inc
ret
jge
out
jae
dec
lods
and
push
hlt
mov
xchg
sbb
daa
pop
xor
bound
cmpsb
pop
call
pop
adc
ror
sub
xor
push
dec
jno
or
rorb
cmp
iret
add
lds
jmp
xor
and
pop
sub
js
cltd
shlb
xor
push
jo
cmp
push
add
inc
ja
rcr
dec
idiv
mov
push
stc
dec
adcb
sahf
dec
imul
mov
add
loope
inc
leave
xor
inc
xchg
testl
sub
jno
test
and
int3
jns
cmpsb
clc
stos
jno
or
ljmp
out
mov
push
jge
pop
pop
adcl
sbb
cmp
xchg
popa
fisttpll
xchg
subl
lcall
in
push
jl
addps
jb
imul
fidivl
add
mov
or
insb
daa
into
mov
push
mov
lea
fwait
jne
mov
test
inc
cmpsl
sub
loop
mov
sbb
int3
adc
and
xorl
bound
jl
inc
test
jne
pop
mov
xorl
and
add
ret
mov
pop
outsl
xor
ja
jae
jmp
stc
push
dec
mov
push
jmp
imul
jnp
sbb
mov
std
xchg
pusha
and
inc
ja
sbb
jo
sub
mov
cmp
inc
mov
sbb
mov
adc
addr16
inc
outsb
cld
add
pop
movsb
and
scas
jmp
mov
pop
enter
scas
pop
xlat
pop
insb
jp
jg
jnp
shll
sbb
push
inc
dec
stc
and
jg
daa
inc
add
and
xchg
daa
loopne
loopne
jne
and
fsubrl
mov
add
into
jge
adc
daa
mov
dec
outsb
sub
jle
dec
fnstsw
mov
gs
je
inc
and
push
imul
stos
lcall
ljmp
mov
adc
lret
pusha
dec
stos
test
inc
mov
orl
out
pushf
jecxz
pop
jecxz
orb
inc
cmp
cmp
clc
and
adc
jo
inc
rol
movsb
inc
sbb
pop
lea
ds
lcall
mov
in
push
mov
outsb
dec
movsb
fidivl
clc
inc
mov
adc
mov
fnstenv
shl
cmp
dec
leave
outsl
into
out
repz
subb
sbb
fndisi(8087
cmp
sbb
pusha
or
stos
add
cmpsl
xor
push
jle
or
xchg
fldenv
inc
push
mov
mov
or
fwait
add
out
pop
outsl
popf
dec
xchg
cmc
add
inc
pop
mov
cmc
sub
test
out
pop
mov
test
and
jnp
sbb
sarl
stc
inc
pop
mov
cmp
decb
jp
ds
test
orb
inc
sub
or
jb
fs
jae
incb
or
rclb
in
lret
mov
dec
cmc
xor
in
lcall
sub
aaa
outsb
lret
sub
nop
xor
mov
scas
cmp
mov
dec
inc
mov
sub
sub
ja
pop
jge
popa
fcomps
dec
cmpps
aaa
iret
push
mov
into
enter
fs
push
imul
mov
mov
xchg
pop
and
mov
push
fsubr
cmpsl
pop
in
mov
aaa
mov
jae
aas
leavew
push
add
and
jns
out
cmp
stc
fisubl
pop
adc
jnp
loope
testl
push
aam
mov
inc
adc
ret
std
pop
dec
shrb
insl
ficompl
sub
jns
push
pusha
and
test
xchg
sub
imul
sub
jle
clc
lds
cmp
jb
xor
stc
fdivs
out
stc
mov
orl
adc
fsubrs
loope
notl
es
xchg
sub
mov
push
mov
fsubl
mov
jns
ljmp
dec
sarb
call
sub
xchg
outsb
mov
push
jno
or
inc
clc
and
test
adc
push
dec
mov
sbb
jns
insb
adc
or
mov
dec
sbb
cmp
dec
inc
xchg
dec
mov
outsl
mov
test
pop
lret
jle
push
mulb
or
push
mov
cld
bound
adc
xchg
add
dec
mov
stos
dec
in
cmc
outsl
mov
stos
sti
cmp
pminsw
cmp
sub
push
xchg
jle
sbb
push
les
repz
pop
jo
fnstenv
xor
pop
sbb
cmp
pop
rcrb
adc
cld
aas
loop
fisubs
jbe
cld
aas
pusha
jno
cld
lret
push
enter
push
jno
and
or
insl
push
pusha
inc
mov
fcos
leave
fdivrp
ljmp
lea
sbbb
and
adc
mov
incb
cmpl
and
mov
hlt
dec
lret
inc
aad
sbb
push
rcrb
mov
imul
push
mov
push
mov
sbb
dec
jno
dec
pop
gs
push
push
cs
push
and
mov
orl
ds
stc
sbb
pusha
shrb
test
cmc
int
int
icebp
push
sarb
inc
hlt
stc
and
cmp
pop
sub
mov
mov
clc
jp
bound
adc
inc
mov
dec
repz
jp
ds
ja
aas
xchg
popa
bnd
ss
in
mov
and
lcall
mov
ja,pt
push
pop
xor
mov
add
jb
pop
sbb
enter
add
add
cld
lock
test
jb
sub
mov
pusha
xlat
mov
mov
cltd
pop
loop
xor
jp
icebp
cli
inc
aaa
push
and
jg
inc
mov
dec
into
adc
jno
push
mov
leave
or
cmc
jbe
popa
fidivl
dec
dec
sbb
sbb
xchg
mov
mov
or
inc
mov
mov
and
mov
jns
jb
in
lret
adc
scas
fwait
and
repnz
add
push
cltd
fdivrs
incl
add
cmc
aas
and
cmpsl
jae
add
roll
andl
and
nop
jbe
aas
push
in
outsb
stc
ret
popl
cmp
fsubrl
das
pop
and
add
mov
into
add
mov
outsb
mov
cmc
out
clc
push
pop
adc
int3
jmp
dec
mov
mov
inc
sub
addl
xor
out
adc
scas
mov
or
daa
inc
xchg
sbb
add
outsb
sub
inc
aam
mov
and
incb
mov
rorl
es
mov
movsb
enter
jae
jp
push
or
adc
inc
sub
inc
movsb
push
push
or
ret
jl
add
dec
jge
roll
mov
pop
jmp
ljmp
push
and
cli
inc
lods
adc
jge
call
sbb
fiaddl
insl
xor
lods
sti
out
adc
fisubl
xchg
inc
inc
loop
aas
lods
mov
push
and
xchg
loop
jp
jns
test
std
jp
lods
mov
cmp
arpl
popl
popa
cmp
fidivrl
loopne
xchg
test
inc
rclb
dec
mov
out
popa
daa
shlb
add
lds
mov
fnstcw
lcall
jno
cmp
fadds
sub
jnp
ds
jno
bound
lret
cmp
sub
sbb
pusha
inc
mov
sbb
test
cmp
outsb
or
jno
xchg
cmc
in
jno
cmp
xchg
lret
inc
dec
adc
sbb
imul
sahf
push
jno
js
leave
jmp
jb
mov
outsb
sbb
insb
adc
sbb
dec
and
cwtl
adc
lcall
sbb
jnp
sarb
jle
daa
arpl
data16
mov
push
insl
jb
je
inc
outsb
psubusw
cmp
xor
hlt
lret
mov
rclb
jbe
fisubrs
out
and
sub
cmp
jle
stos
stc
cmp
imul
rorb
add
ja
mov
sbb
or
cmp
add
enter
inc
push
mov
dec
mov
cmp
fs
pop
cmpsb
sbb
ds
subb
or
push
mov
xchg
jbe
add
out
jns
add
xchg
jl
pop
insl
loopne
outsb
cmp
in
add
jb
shl
pop
cmc
repnz
popa
xor
xchg
ss
sub
repnz
xor
notb
sbb
outsb
jnp
pop
loope
out
add
pop
cli
jne
ds
sti
inc
xchg
jo
repnz
call
sub
lahf
mov
add
jl
orl
dec
push
jns
mov
jecxz
repnz
inc
fiaddl
xchg
xchg
test
sub
mov
lcall
jo
sub
inc
dec
ret
pop
in
push
adc
jne
add
xor
inc
jle
dec
jae
mov
push
mov
push
sub
jg
pop
jp
mov
lcall
push
decb
cmp
jne
loopne
pop
pop
push
dec
mov
and
add
jae
ljmp
cmpsb
pop
lds
shl
inc
dec
pop
lcall
ds
push
sbb
xchg
lds
inc
lcall
jne
pop
sub
scas
lods
iret
movsl
imul
jl
mov
jl
outsb
cmpsl
xchg
lods
sbb
sub
std
shrl
fnstsw
dec
inc
divl
cld
inc
sbbl
mov
jo
dec
sub
jg
stos
mov
mov
scas
pop
mov
mov
xchg
clc
add
shl
shr
sub
sub
xlat
cli
lods
imul
jno
inc
jecxz
inc
outsl
push
pop
dec
xchg
mov
mov
push
movsl
paddw
psubsw
jne
cld
push
dec
push
adc
ljmp
cli
inc
and
jo
js
mov
insl
mov
inc
pop
lds
insb
clc
push
or
sbb
subps
lcall
loope
lods
inc
out
jg
popa
and
jge
loop
sbb
jne
sub
lea
outsl
ficompl
cltd
jle
ficompl
pusha
mov
inc
pusha
test
out
inc
or
mov
jae
mov
mov
mov
stc
xor
xchg
xchg
push
arpl
add
outsb
sub
sub
mov
xor
xor
and
mov
arpl
imul
inc
lcall
sbb
mov
mov
insl
mov
xor
orb
sbb
mov
inc
repnz
fadd
addr16
in
xor
and
jo
sar
sub
xor
shll
jmp
push
push
clc
sbb
cltd
jecxz
rcrb
mov
lcall
mov
pushf
inc
mov
call
enter
and
or
or
pop
sub
inc
and
das
jbe
xor
loop
adc
pop
sub
repnz
vmread
lcall
insl
mov
sti
bound
std
pop
jno,pt
cmp
add
out
outsb
mov
fnstenv
add
aad
addl
mov
sub
jbe
mov
mov
push
jo
fsubr
add
mov
sub
out
xchg
inc
mov
pmullw
jno
addr16
mov
es
jmp
inc
out
lret
dec
ja
loop
sbb
js
mov
xor
inc
test
daa
pop
in
mov
or
add
sbb
pop
xor
sub
in
jg
cmp
test
stc
stos
outsl
adc
xchg
loopne
cmp
dec
pop
sub
daa
mov
pop
enter
mov
ss
xchg
cmp
push
add
jae
jl
inc
cmpsb
imul
stc
jbe
stc
shlb
pop
out
outsb
pop
push
push
or
pop
push
push
bound
push
pop
pop
inc
push
pop
push
repz
push
ficompl
lret
lcall
jns
movsl
pop
push
xchg
mov
mov
add
hlt
rorl
pop
mov
adc
pop
pop
outsl
jae
js
ret
xor
bound
cmp
outsb
out
inc
cmp
cs
in
mov
daa
push
lcall
push
mov
retw
xchg
cmp
dec
cmp
imul
jp
lret
mov
pop
adc
lret
mov
sub
int
aad
lahf
dec
mov
cwtl
jge
push
ljmp
lcall
subb
xor
aaa
ja
fiadds
inc
xchg
es
adc
rclb
aam
ja
movsl
pop
je
jge
jno
push
cli
test
jp
and
lcall
pop
or
pop
add
mov
in
xchg
adc
xchg
inc
xchg
arpl
push
pop
dec
andb
cmpb
arpl
push
mov
outsb
popa
in
mov
dec
rcrl
pop
pop
mov
aam
push
fcomps
mov
mov
sbbl
inc
iret
pusha
inc
jecxz
inc
inc
cli
bound
lret
dec
ret
sub
add
push
inc
pushf
dec
pmuludq
outsl
dec
inc
dec
adc
sub
out
roll
aam
lcall
mov
or
pusha
mov
sahf
mov
jb
jg
jo
xor
jp
jp
adcl
shlb
js
jo
incb
lea
add
addr16
or
dec
sub
imul
xor
in
or
ja
pop
cltd
pop
std
mov
mov
mov
sbbb
lcall
xchg
sub
pshufw
push
jnp
mov
push
mov
inc
sub
adc
pop
es
mov
jg
fs
ds
jae
icebp
jmp
mov
add
popa
jb
fmull
ja
dec
jp
cli
jp
add
divb
xchg
xor
test
mov
jg
adc
add
jp
xchg
mov
or
inc
sub
js
ljmp
aaa
inc
cmp
push
jp
jb
add
jl
inc
or
stos
aam
rolb
add
mov
cmc
push
or
jbe
jle
bswap
mov
mov
push
push
popf
mov
bound
icebp
addr16
mov
pop
pop
cmp
mov
ds
mov
lods
imul
aas
divb
rolb
fs
stos
dec
test
jae
test
std
add
xchg
loope
adc
mov
mov
jno
pop
xchg
sub
mov
or
punpcklwd
or
ret
and
mov
outsl
cltd
out
jns
pop
pop
test
imul
mov
push
mov
xchg
outsb
pop
lret
mov
jb
enter
movsl
adc
ds
sarb
stos
dec
cmp
sub
pusha
xor
stos
test
jge
inc
outsl
insb
cltd
daa
mov
mov
hlt
notl
cld
cs
pop
add
push
xchg
pusha
pop
xor
push
jmp
dec
push
pop
imul
push
out
jne
jp
dec
es
jnp
jae
mov
mov
lret
jmp
push
scas
jb
daa
jne
pop
inc
pop
dec
xchg
mov
out
inc
mov
sbb
sub
pop
mov
adc
scas
popa
aaa
mov
mov
push
subb
add
fsubl
jge
cld
testb
pusha
or
or
cli
jg
je
jb
sahf
test
outsb
fdivrs
lcall
jo
bound
adcl
pop
flds
je
outsb
add
pop
xor
lret
mov
loope
push
ror
ja
xor
push
pusha
dec
xor
lods
xchg
imul
int
inc
lock
sbb
sub
push
pop
cvtps2pd
push
adc
pop
xor
jge
jae
sarl
xchg
repnz
xor
cmp
test
lock
xor
xor
sahf
mov
bound
ss
pop
and
out
add
sti
sbb
rcll
mov
rorb
daa
data16
and
mov
cmp
sbb
mov
add
sbb
xchg
add
out
aam
jo
pop
or
mov
pop
pop
int
adc
negb
lea
push
aad
push
clc
inc
mov
jnp
sub
xor
insb
jg
add
rcll
push
xchg
mov
add
sub
adc
jmp
dec
sub
fs
insl
test
xchg
and
sar
ja
inc
jo
xor
jbe
in
push
jp
ds
adc
cs
outsl
adc
aas
mov
shlb
mov
xor
mov
rcrb
lret
pop
je
cwtl
loop
mov
push
lcall
inc
cltd
xchg
jp
mov
xor
gs
cmp
test
mov
jecxz
pop
ds
mov
fadds
jmp
shll
pusha
xor
mov
dec
mov
sub
shll
push
repnz
fildl
sbb
cmpb
inc
mov
xchg
push
in
inc
inc
fstl
sub
pop
pop
aas
popa
insb
js
push
icebp
divl
cmp
sub
mov
push
dec
inc
bound
cmp
aaa
push
and
lcall
call
jle
sbb
and
lret
arpl
daa
gs
shll
jne
inc
jne
fwait
std
xor
dec
fsubrs
inc
fisubl
in
inc
fstpt
pop
add
rorl
push
or
jbe
jns
jle,pt
rclb
cmp
pshufw
sub
cmp
mov
mov
xor
mov
add
dec
mov
es
push
dec
rol
cmp
fisubl
push
and
inc
push
mov
jl
mov
push
aad
clc
sbb
xchg
jno
push
or
inc
or
inc
pop
cli
cmp
xor
mov
mov
jns
cmp
mov
mov
or
out
mov
and
leave
jl
xchg
mov
or
cmp
jae
mov
leave
insb
pop
sub
scas
jb
jo
fidivs
mov
sbb
adc
enter
imul
and
js
dec
lods
enter
lds
mov
pop
jl
cvtps2pd
inc
jg
push
or
cmc
in
jmp
adc
add
fmuls
lret
fstl
ds
imul
mov
mov
xor
ret
mov
jnp
cmc
xor
outsl
adc
pop
out
push
das
ret
sbb
sbb
ja
mov
loop
mov
cmp
ljmp
add
popa
xchg
inc
adc
movq
test
mov
imul
repnz
outsl
lcall
push
popa
or
xchg
movsb
call
subb
or
je
lahf
ds
std
out
sub
ja
jmp
mov
ds
jb
jl
aad
jle
lea
pusha
pop
jae
xor
loopne
cmp
inc
in
xchg
and
xor
jne
jae
dec
cs
std
dec
ds
lcall
xlat
scas
movl
and
jbe
jns
sahf
add
lock
roll
xlat
lahf
adc
jo
lret
bound
lret
jbe
cli
sbb
pop
sbb
fsubrs
les
lcall
push
push
add
push
xchg
cmc
pop
rsqrtps
shll
dec
data16
lcall
negl
nop
xchg
adc
fcomp
inc
push
stc
stos
push
rcrb
addl
mov
jae
lret
sub
imul
out
xchg
dec
mov
daa
jne
adc
sub
pushl
jle
jg
cli
jl
aas
stos
push
arpl
fbstp
cli
pusha
push
xor
mov
subl
cmp
dec
enter
mov
lea
out
sbb
rolb
adc
jmp
sub
into
push
mov
sbb
mov
lcall
push
int3
and
fisttpll
loopne
pop
out
mov
mov
pop
pop
lock
push
mov
imul
xor
jp
dec
xchg
mov
in
pop
lcall
out
push
mov
mov
pop
ret
and
cltd
jo
shll
jle
add
test
fsub
adc
jge
ret
inc
mov
or
ds
dec
shll
in
add
jle
inc
mov
adcb
adc
xchg
cmp
filds
dec
bound
push
jo
sub
fcmovu
aaa
mov
push
sub
je
jg
fistpll
out
and
aas
or
pop
sub
ja
jg
lret
xor
repz
sub
pop
pop
loop
sbb
insb
ss
xorl
jl
mov
push
dec
rcrb
push
ja
je
mov
or
inc
outsl
incl
xchg
sub
jae
pushf
fimuls
adc
push
subl
cmc
roll
outsb
mov
loop
xchg
sub
lcall
fdivrs
iret
inc
sub
xlat
pop
sub
inc
mov
out
idivw
outsl
xchg
sub
rorl
add
in
or
xor
lahf
pop
jl
xchg
dec
ret
lcall
roll
imul
test
ficomps
xchg
adc
dec
sbb
shlb
data16
outsb
in
mul
lea
inc
add
jb
inc
xchg
in
mov
xchg
pop
sub
inc
sub
js
inc
sbb
lcall
mov
lock
outsl
jle
clc
xor
sub
insl
mov
insb
push
aaa
cmc
cmp
imul
mov
sarb
lock
xchg
mov
cmp
out
insb
insl
movsl
cld
xchg
pop
inc
int
addr16
adcl
mov
outsl
cmc
sbb
hlt
push
icebp
xlat
xchg
dec
mov
jno
jns
jmp
cmpb
cli
push
jbe
pop
scas
push
jle
in
pop
sti
jle
rclb
scas
fnstsw
jb
not
das
test
fistl
ss
fnstsw
add
cwtl
in
sahf
inc
push
jg
push
cmp
add
or
dec
cmp
push
ljmp
rclb
clc
and
mov
insb
sub
push
and
inc
enter
leave
pop
jecxz
das
push
mov
lods
and
sbb
das
arpl
outsb
sbb
push
outsl
lods
jnp
cmc
lcall
push
out
mov
and
sbb
rcrb
xchg
imul
jae
jns
loop
das
pop
jle
mov
bound
in
stc
xor
add
lret
xor
mov
std
aas
jne
inc
xchg
popa
and
cltd
jnp
popa
xor
inc
insb
les
imul
push
js
lahf
fstl
cltd
lcall
and
push
sbb
push
mov
dec
jno
adc
clc
jne
jl
adc
aam
daa
inc
out
movsl
jb
fs
and
arpl
pop
loop
lret
or
xor
inc
ss
dec
cmp
decb
bnd
dec
je
loope
cmp
pop
adc
fs
ret
sbb
xchg
cmp
fs
xchg
mov
jb
call
icebp
jo
xchg
inc
dec
mov
call
aaa
rcrl
mov
cmpl
jmp
jb
fdivrl
cwtl
cmp
mov
mov
decl
arpl
inc
jle
shlb
lcall
fimull
jp
lcall
fcom
stos
gs
mov
jle
shrl
fadds
xchg
xor
rcr
lds
lcall
cwtl
add
bound
inc
repnz
jns
mov
push
mov
push
jo
sub
jl
jb
jb
mov
and
push
xor
jge
les
push
cs
out
xchg
xchg
cmpsb
pop
inc
xchg
mov
sbb
fisubrs
jne
pushf
loope
xor
pop
xchg
and
sub
mov
fs
mov
jmp
mov
incb
test
cld
add
sub
fisttpll
inc
mov
lea
lcall
cmp
leave
pop
rcrl
ds
and
inc
pop
inc
mov
push
xchg
jb
add
js
inc
lods
push
popa
xchg
lock
xchg
mov
inc
sbb
jb
stos
inc
sbb
pop
rclb
jge
test
leave
jmp
sub
xchg
jecxz
imul
subb
sub
jp
test
jmp
adc
jbe
stos
js
loope
lcall
mov
dec
jo
and
push
xchg
jo
das
pop
call
rcrb
cwtl
inc
nop
push
fisubl
sbb
mov
loop
push
roll
sahf
push
clc
xchg
fsub
or
pusha
mov
hlt
clc
cmp
cmpsl
mov
xor
cltd
sbbb
daa
stc
jae
xchg
add
jl
mov
jnp
xchg
loopne
dec
pop
movsl
pop
mov
push
mov
pop
imul
lods
add
sti
inc
sub
mov
outsb
xchg
cwtl
jp
lret
xor
or
jno
enter
mov
mov
push
jnp
xchg
outsb
jae
mov
cmp
test
es
aad
aam
push
mov
mov
bound
jg
jmp
je
mov
test
sub
in
jnp
lcall
jp
xor
punpckhbw
cmp
ds
push
pushf
rorl
sub
pop
jo
mov
movsb
mov
in
daa
mov
sbb
jno
repz
inc
ja
sti
xchg
gs
push
sahf
int
fld
inc
jnp
xor
lcall
jo
aam
insl
adc
mov
sbb
jge
lret
js
imul
out
movsl
cld
adc
xchg
ja
add
mov
push
out
and
push
fs
dec
test
sub
lods
outsb
jge
or
and
int3
inc
dec
cmp
pushf
cmp
adc
jae
lret
js
mov
stc
jno
imul
js
shl
lret
push
popf
xor
dec
cs
fdivrl
and
fdivrl
in
mov
into
push
jle
fimuls
and
jns
cld
push
add
sbb
lea
push
mov
xor
sbb
sbb
stos
jmp
popf
outsl
mov
lcall
or
arpl
dec
loop
pop
in
inc
fldl
or
add
jg
je
add
cli
jle
inc
push
cmp
pop
inc
es
lcallw
adc
jp
xor
push
push
cmpsb
icebp
ljmp
sbb
shl
push
lret
rcrl
mov
dec
push
std
jns
bound
jnp
cltd
adc
push
sub
add
incb
arpl
popa
and
and
stos
sarb
subl
xor
sti
outsl
movsl
sub
xchg
pusha
and
lcall
jae
jo
adc
cmp
cmp
lds
xchg
imul
and
cmp
divl
adc
insb
dec
lret
incb
imul
sahf
pop
repnz
pop
sti
fcoml
cmp
mov
stc
outsl
inc
shrl
mov
enter
push
jg
insb
es
push
out
and
pop
jb
pop
icebp
fnstenv
sub
in
je
mov
cmpb
push
mov
mov
out
ds
stc
jae
xor
push
jmp
mov
mov
pop
inc
pop
imul
jg
nop
xor
ja
imul
nop
mov
jns
ss
dec
jns
stc
xor
jmp
pusha
sub
and
fdivrl
jnp
lahf
sub
xchg
lcall
cmp
aaa
out
sbb
lds
or
inc
in
adc
es
cmp
push
es
or
out
outsb
cmc
adc
das
push
add
lods
sahf
adc
pop
push
leave
push
in
int
sbb
lahf
fadds
pop
push
lret
xor
test
pop
xor
mov
inc
into
add
push
negb
xor
in
cmove
stos
xor
fbld
pop
push
aaa
push
pop
mov
mov
pop
in
rorl
roll
push
add
cli
push
or
jl
jmp
add
mov
rorl
or
mov
xchg
scas
idivl
idivl
add
repz
stc
add
inc
sbb
cmp
mov
mov
loopne
push
outsb
pop
orl
pop
xlat
and
inc
mov
adc
pushw
lret
push
decb
cmp
inc
mov
leave
sub
sub
sahf
cmp
lcall
and
dec
xor
inc
jle
inc
push
xlat
fidivl
sbb
pop
cltd
pop
push
jne
push
ss
lock
cmp
punpckhdq
scas
mov
jnp
cmpl
shll
mov
test
data16
pop
xchg
jbe
adc
push
and
mov
fsubrl
js
cwtl
push
push
xlat
pop
test
push
jecxz
stc
jae
cmp
shrl
scas
dec
js
outsl
jp
stos
cmpsb
push
fcos
aaa
mov
and
imul
mov
jae
push
xchg
jge
adc
mov
dec
xchg
sbb
loop
ret
or
cli
mov
sahf
jmp
das
repnz
dec
jns
outsl
xor
ja
ss
push
loop
xchg
adc
mov
mov
dec
push
push
inc
sub
pop
pusha
pop
jge
mov
sbb
mov
mov
into
add
push
out
dec
cmp
sarl
test
cmp
icebp
out
dec
add
push
xor
in
in
cs
sub
lods
sbb
stc
sarb
dec
pop
inc
js
xchg
aaa
pop
or
mov
sahf
bound
shrl
adc
fdivrl
repnz
mov
mov
cmp
pusha
mov
fstl
flds
jb
mov
fwait
xor
xor
enter
sbb
stc
xor
cmp
jl
lds
xor
cmp
sub
inc
lods
pop
mov
cmp
enter
loop
mov
dec
pop
jb
mov
xchg
sti
nop
xchg
jne
or
ljmp
adc
xchg
aad
cltd
std
jmp
cmp
popa
cmp
repnz
in
pushf
aas
cltd
pop
cmp
push
sub
stos
loopne
and
outsl
aaa
outsl
stc
push
mov
pusha
cs
pop
jno
ds
outsl
das
in
jae
popa
lock
xchg
inc
outsb
idivb
xor
push
mov
inc
sbb
xchg
inc
mov
mov
xchg
and
loopne
jno
nop
inc
stos
pop
das
arpl
jo
aas
sahf
pop
push
arpl
mov
jbe
or
push
les
pop
push
xor
out
sti
in
lock
pop
mov
pop
push
pusha
jne
sahf
sub
outsl
cmp
sub
xor
or
sti
sbb
rolb
lods
push
pushf
push
dec
sub
rcl
lods
jae
sbb
cmpsl
icebp
mov
jl
das
xlat
mov
xchg
xor
jno
xchg
jge
sub
loop
clc
in
out
xchg
in
xchg
sbb
mov
cs
movsl
inc
in
mov
enter
cltd
push
xchg
dec
sar
jns
sub
lcall
mov
imul
lcall
sbb
lea
sbb
popf
lcall
std
sub
jecxz
cmp
loop,pt
adc
inc
mov
rcll
inc
dec
xchg
out
sub
inc
mov
stc
lods
nop
stos
pop
or
xor
data16
jbe
dec
outsb
adcb
adc
mov
mov
push
inc
outsl
stos
mov
xor
mov
xchg
jg
sub
aad
pop
bound
or
dec
or
sbb
lock
mov
mov
xchg
aas
jbe
scas
js
daa
ja
inc
jle
aas
cs
cwtl
mov
lcall
mov
sahf
mov
js
ds
jp
outsl
das
fwait
mov
jo
mov
mov
das
arpl
frndint
out
mov
or
add
jb
mov
lcall
cli
pop
jle
ljmp
xlat
inc
aaa
jb
and
stos
icebp
pop
lcall
stos
int3
faddl
pop
xor
punpcklwd
inc
out
mov
fsts
shl
mov
cmc
pop
jle
jp
outsb
cmp
imulb
lcall
insb
fstpl
lret
cmp
adcl
mov
ret
das
in
lcall
cmc
cmpsl
xor
aas
jp
push
repnz
or
xchg
mov
and
cmp
arpl
xchg
cwtl
push
ss
dec
stc
sub
xchg
sbb
inc
testl
mov
mov
fwait
aas
in
mov
sub
in
add
xchg
and
inc
fst
xchg
cmp
sahf
jne
jae
je
or
in
out
cmp
das
pop
jbe
push
js
or
xchg
jb
jns
std
push
mov
xchg
xlat
and
addb
and
sbb
daa
mov
sbb
je,pn
mov
lcall
inc
imulb
jbe
jge
push
imul
in
adc
mov
or
subl
mov
dec
ja
mov
cmp
sub
mov
inc
lea
dec
pop
xor
sub
jo
mov
sar
movswl
cmp
jnp
push
push
sbb
xchg
jne
add
pop
mov
lcall
dec
xchg
push
hlt
lock
sbb
dec
lahf
push
sbb
pop
cmp
or
adc
inc
dec
dec
pusha
push
pop
cmp
cli
xorb
jge
mov
or
push
jecxz
dec
addl
and
push
jmp
sbb
in
xor
and
jae
enter
aaa
lahf
je
dec
shrb
xor
xorb
hlt
dec
sub
inc
stos
inc
jnp
add
rorl
fs
sbb
daa
mov
lcall
negl
jo
mov
lea
lea
lods
jg
mov
cli
arpl
aaa
adc
jae
mov
or
xchg
test
cli
sbb
scas
mov
pop
add
xchg
xor
lds
mov
lds
jb
mov
fildl
push
mov
xchg
jbe
stc
int3
add
mov
jns
cmc
pop
push
ret
adc
jo
cmp
jne
xchg
scas
inc
ret
arpl
push
adc
or
bound
mov
cmp
xchg
sub
hlt
pop
mov
daa
aam
inc
je
or
clc
push
mov
xor
add
inc
lods
xor
push
xchg
scas
push
and
inc
andb
ret
mov
jp
es
or
jbe
rclb
test
loop
cltd
arpl
aad
lretw
js
loopne
cmp
mov
cmp
scas
sub
inc
xor
cli
insb
sub
xchg
push
jb
cli
test
inc
sbb
jb
cltd
inc
push
sub
and
inc
cld
loop
dec
test
and
pop
cli
pop
inc
in
test
das
bound
jp
sti
dec
fadds
lea
lcall
add
pusha
sub
das
sbb
shrb
icebp
gs
jns
jno
aaa
and
inc
mov
push
das
mov
mov
imul
push
sub
add
jo
jmp
cli
add
repnz
cli
les
ret
cmp
and
mov
jb
cli
add
clc
or
cwtl
ficompl
sub
and
cli
stos
ds
push
sbb
cmpl
loop
add
fdivl
repnz
popa
pop
mov
jb
inc
push
jno
mov
mov
or
xor
ja
xor
adc
jno
lret
sar
sub
fs
push
repnz
pop
sti
mov
ja
dec
mov
inc
ficoml
leave
sub
sbb
jb
mov
xchg
mov
pop
lret
jb
cli
dec
daa
pop
mov
xchg
xchg
cmp
js
repnz
pop
mov
sub
jae
enter
push
ja
jno
mov
es
xor
shl
dec
dec
inc
insb
and
inc
or
test
fisubl
outsb
fisubrl
hlt
sbb
shlb
js
lret
inc
adc
mov
pop
mov
repz
xchg
addr16
pop
jb
mov
jns
cmp
pop
mov
mov
pop
pushf
jbe
lret
or
xchg
inc
mov
xchg
test
inc
mov
pop
repnz
cmp
test
or
jno
mov
adc
inc
inc
jb
cwtl
icebp
ja
jbe
icebp
push
dec
subl
add
lcall
pop
xor
into
fadds
addr16
pusha
inc
push
cmp
cmp
xchg
repnz
push
dec
bound
xchg
popa
movsb
test
jo
insl
icebp
idivl
fwait
mov
clc
in
sub
stos
pusha
fcmovu
xor
bound
add
and
popa
sbb
cli
inc
and
and
sar
pop
sub
pushf
jp
ljmp
icebp
jp
fisubs
bound
test
or
lds
std
jp
ds
push
xor
mov
xor
pop
fisubl
imul
rol
test
ljmp
fdivrl
push
js
pushf
bound
push
out
inc
std
pusha
cli
cmp
sub
dec
popf
imul
push
bound
pop
inc
mov
cmp
jl
ds
frstor
ret
cmp
push
dec
popa
xchg
mov
xchg
push
idiv
mov
pop
adc
mov
inc
pop
mov
push
test
pop
fistps
push
push
jno
jp
clc
daa
xor
int3
aas
push
inc
dec
shll
xchg
and
scas
shlb
dec
popa
sub
shll
xchg
and
das
jl
popa
scas
jp
jge
stos
pusha
xchg
outsb
inc
cmpsb
jp
lea
jle
cli
ds
cmp
popa
bound
fisttpll
fimuls
jp
std
jb
cli
cmpsb
xor
jp
std
jb
cli
ret
jp
std
jb
jecxz
ds
mov
int3
loop
inc
pop
cli
mov
xorb
je
jp
std
jb
cli
inc
xor
jp
std
jb
cli
pop
xor
jp
std
jb
cli
js
sarb
pop
rorb
add
jno
pusha
dec
clc
bnd
pusha
loopne
jb
lods
fmull
shrb
nop
mov
mov
pusha
stos
push
push
pop
add
orps
push
fildll
ds
das
push
cli
inc
inc
mov
nop
xchg
inc
insb
ret
xor
cmpsb
bound
scas
jb
loopne
jno
js
cmpsb
jle
popl
hlt
icebp
cli
pop
add
mov
pushf
loopne
lcall
mov
loopne
jno
js
jb
loopne
jno
js
jb
loopne
jno
cmp
popa
stos
outsb
insb
int3
into
jp
jp
mov
dec
icebp
in
inc
je
bound
push
pop
dec
incb
cli
ss
pop
and
inc
jl
rdpmc
cli
loope
out
cwtl
outsb
inc
rolb
pop
mov
and
outsl
mov
jb
dec
pop
bound
jb
mov
dec
inc
sarb
xchg
test
data16
aas
dec
push
xchg
cmp
sbb
repnz
inc
mov
lcall
and
andb
and
outsb
pop
lods
mov
mov
ret
push
bound
mov
inc
xor
push
movsb
pop
in
jb
jle
mov
jb
pop
hlt
jp
cld
push
lcall
outsb
fdivl
int
movsl
sbb
push
push
pop
hlt
push
xor
inc
imul
cmp
aad
cli
sbb
out
cli
push
inc
xor
ficomps
aas
rcrb
stos
jp
aas
mov
jp
add
movsb
push
inc
add
bound
xor
std
sbb
jb
jno
jo
loopne
pusha
out
into
dec
mov
pop
call
lock
or
outsb
xor
test
incb
fsubl
inc
cmp
pop
das
cmp
sub
xchg
nop
test
push
pushf
xchg
cmpsb
pop
push
hlt
cmp
gs
in
or
cmp
pusha
lds
outsl
push
dec
in
pop
inc
test
shll
xchg
fidivrs
psubusb
xor
dec
adc
cmp
push
pop
pop
sub
adc
jmp
mov
sahf
mov
pop
mov
push
rclb
mov
lcall
and
jno
and
cmpsb
nop
cmp
cmp
mov
push
mov
ss
fwait
ja,pn
xlat
mov
decb
xor
dec
cmp
test
jp
in
mov
sub
inc
cmpsb
mov
test
cmp
and
pusha
mov
mov
call
xlat
jb
jb
cmpsb
jmp
push
push
dec
or
adc
push
and
pop
pusha
aad
inc
clc
dec
ja
loopne
jnp
ja
imulb
cmpsl
insb
or
pop
lret
inc
xor
cmp
cli
into
shlb
jp
sub
push
xchg
and
movsb
jp
xchg
lods
hlt
cmp
mov
xor
add
shlb
bound
loop
std
fnsave
mov
jns
jno
ja
ss
xchg
push
dec
and
bound
jl
insb
add
fisubrl
orl
int
dec
jb
sahf
popa
mov
imul
push
pusha
adc
adc
jb
push
sub
ja
sub
leave
sub
and
cmp
sarb
loope
xor
arpl
popa
hlt
popa
xchg
sub
call
adc
bound
xchg
sti
flds
xchg
inc
sub
ret
jns
adcl
sbb
insb
lods
popa
mov
cmp
popa
test
jns
sbb
pop
cmp
test
test
and
xchg
xor
mov
pusha
test
xor
fnstenv
add
popa
loop
adc
ja
fnstcw
mov
test
sub
imul
dec
cmp
aaa
ja
jp
and
bound
iret
scas
in
mov
jmp
cli
popa
out
xchg
loope
outsl
jno
repnz
cmp
push
adc
and
mov
ds
xchg
daa
xchg
push
repnz
aam
repnz
mov
mov
push
loope
out
sub
jo
ljmp
adc
inc
icebp
fsts
inc
dec
sbb
into
xor
imul
test
cmp
pop
gs
mov
xchg
es
dec
or
mov
xchg
xchg
add
jb
dec
pop
xchg
xchg
loop
pusha
mov
xor
mov
mov
inc
and
ja
and
sbb
cli
bound
xchg
lcall
shlb
or
sbb
repnz
pop
mov
cli
outsb
adc
push
ljmp
lods
not
fcmovu
jp
loop
stos
inc
pop
insb
push
inc
pop
cmpb
inc
test
jno
and
rcrb
sub
cmpsl
dec
popa
mov
lods
in
push
sub
or
mov
loop
cmp
jo
in
adc
sahf
cltd
fsubl
scas
xor
bound
xchg
into
cltd
or
in
clc
or
xchg
ja
shrb
outsb
lret
popa
pusha
loop
inc
stos
gs
loop
inc
je
cmpsb
cli
loop
dec
pusha
inc
popa
xchg
cwtl
adc
and
ja
mov
pusha
xchg
test
xlat
xchg
push
cmp
xor
insb
enter
inc
pop
hlt
push
inc
sub
imul
adc
lcall
jb
aad
ljmp
int
pop
ja
test
pop
mull
inc
insl
repnz
mov
popa
jecxz
jb
jecxz
pop
faddl
inc
pop
mov
out
mov
add
ja
bound
sbb
test
das
rcrb
fidivl
clc
add
lcall
nop
inc
loopne
jp
pop
jno
scas
stc
add
jo
in
inc
rolb
jno
jp
sti
push
jp
sub
lcall
add
movsb
gs
jle
addr16
inc
imul
cmp
jp
inc
dec
inc
pop
or
call
ja
push
cmpb
mulb
jb
mov
mov
and
ds
cld
inc
cmp
inc
popa
jb
mov
xchg
jbe
mov
imul
shlb
repnz
cli
fisubl
pop
test
push
push
jno
jbe
aas
sti
popa
cmpsb
outsb
ja
mov
ja
decb
cwtl
jbe
aas
mov
flds
inc
ja
jb
add
shll
ja
xlat
test
mov
xor
mov
adc
popf
divb
test
mov
adc
mov
idivl
mov
ljmp
adc
or
push
xchg
mov
inc
clc
mov
adc
mov
push
dec
inc
divb
lahf
outsl
jp
inc
stc
inc
pushf
xchg
xchg
sub
dec
xor
sar
clc
dec
jmp
ljmp
dec
and
jo
outsb
inc
ss
xor
cli
pop
into
cmpsb
adc
xorb
mov
test
pop
adc
or
and
jg,pt
std
jb
cli
ds
jp
std
jb
cli
pop
xor
cli
fyl2xp1
hlt
inc
sub
adc
je
cmc
data16
clc
add
shlb
adc
sub
dec
pop
je
mov
mov
mov
insl
cmp
xchg
call
xchg
inc
cli
xchg
test
jle
mov
popa
leave
cmp
ds
push
imul
cli
sahf
mov
addb
bnd
hlt
jmp
adc
pop
mov
xor
ss
xchg
outsb
mov
inc
sub
cli
insl
xor
scas
xchg
std
icebp
mov
aaa
xchg
int3
inc
jo
jno
insl
mov
cmp
bound
xchg
inc
ljmp
incb
lea
jge
jp
and
inc
xorb
popa
inc
stos
mov
fs
push
shlb
test
cli
jno
ja
lds
adc
mov
imul
out
insb
ret
sahf
mov
lret
ja
scas
jb
mov
push
ret
push
test
fidivl
xchg
rolb
nop
jno
jp
cld
add
stc
divb
loop
inc
pop
xchg
push
bound
pop
inc
insb
xchg
xchg
test
push
jge
in
mov
dec
mov
stos
push
divb
in
xchg
or
sbb
das
xchg
in
or
fnsave
sbb
test
pop
xchg
jno
jp
mov
jno
lret
sub
mov
daa
int3
mov
push
fidivrs
mov
mov
xor
popa
inc
and
cmp
sahf
mov
mov
add
pop
jl
aaa
cmp
push
divl
xor
sub
mov
jns
push
ret
or
addb
fcompl
lods
sub
cli
dec
cmp
lock
jge
mov
sbb
mov
es
mov
sub
mov
mov
push
or
jp
ficoml
push
loop
jp
cmp
insb
loop
jp
mov
mov
inc
mov
loop
lods
sbb
add
mov
int3
dec
das
and
jb
pusha
aaa
cmp
mov
adc
sti
rclb
pusha
ljmp
stos
inc
mov
mov
clc
and
orb
test
icebp
mov
xchg
cwtl
fnstsw
and
pop
xchg
lods
push
stos
or
movsb
sbbb
ss
and
idivb
lcall
dec
xchg
xchg
fsubp
xor
out
fstpl
out
std
jp
adc
or
lcall
add
jb
je
sub
push
sub
add
jmp
mov
pop
pusha
bound
cmp
xchg
jo
movsl
mov
jle
cltd
cli
int
subb
std
xor
mov
aam
xor
clc
hlt
bound
stos
add
je
cli
adc
sarb
or
outsb
out
cwtl
inc
pop
dec
ds
std
rcrl
pop
shlb
je
adc
je
and
adc
loop
cmp
cli
xchg
cmpsb
std
ret
mov
fiadds
or
jno
ja
add
outsb
aam
mov
fbstp
xor
loop
cld
cmpsb
sbb
lods
sarl
stc
adc
sub
mov
bound
pusha
xor
repnz
fidivrl
push
inc
popa
dec
jb
cli
je
inc
push
popa
xchg
cmpsl
daa
clc
push
sub
stc
ds
pop
cwtl
jbe
lret
and
stos
jp
xor
cmpsl
sbb
mov
in
sbb
clc
adc
and
or
jb
cli
cmp
sub
bound
mov
cmp
dec
sub
xchg
loope
push
insl
push
ss
mov
push
insb
xchg
test
push
jp
add
mov
pop
xorb
fsubrl
bound
jae
push
outsb
sti
jno
inc
cmpsl
sbbb
cmpsb
and
mov
pop
adc
fcmovnbe
bound
icebp
es
cli
stos
insb
mov
xchg
rol
mov
sbb
jecxz
cmp
popa
rorb
inc
bnd
jnp
loop
push
xor
jl
inc
bnd
test
cmpsb
inc
and
lds
dec
fdivr
mov
incb
pusha
cli
mov
mov
pusha
push
inc
add
mov
inc
and
ret
cs
dec
addb
cmp
mov
sub
mov
mov
ja,pn
daa
jg
jmp
rclb
pop
xchg
stos
repnz
ja
test
bound
ja
pop
into
jb
popa
cli
jb
int
and
pop
adc
mov
push
repnz
fnstsw
jmp
fistl
mov
pop
add
incb
sbb
cmp
movsb
mov
mov
sbb
test
into
cmp
fdivl
imul
test
push
mov
push
xchg
inc
stos
pop
ret
lahf
test
mov
jp
jno
stos
ja
mov
dec
sub
insl
jb
mov
dec
add
lods
dec
icebp
mov
fdivrl
movsb
out
flds
les
rolb
out
cmp
push
jb
leave
mov
insl
test
xchg
mov
inc
inc
pop
mov
dec
inc
sub
out
push
jno
lods
dec
mov
jp
xor
and
lods
inc
inc
cli
pop
test
adc
and
mov
cmp
xchg
popa
push
imul
loope
shlb
loop
or
out
pop
pushf
add
sarb
dec
mov
pop
inc
pusha
pop
sub
lods
fs
pusha
xor
sbb
sub
sti
ficoml
push
inc
lods
mov
pop
test
rolb
outsl
push
cmpsl
xor
int
mov
sbb
xchg
cmc
lds
rcrb
insb
jnp
mov
jb
out
shrb
shrb
fiaddl
or
lock
mov
mov
jp
and
adc
fcoms
adc
xlat
and
pusha
jb
cmpsb
adc
mov
sbb
mov
lret
clc
mov
xchg
cli
mov
adc
mov
pushf
jp
movsb
and
bound
xor
sbb
les
scas
and
in
popa
inc
jb
cli
add
std
pop
call
daa
mov
les
ret
into
inc
mov
adc
push
mov
lret
popa
insb
pop
push
addb
cltd
cmp
inc
pop
stos
inc
int3
movsb
add
and
loop
pop
ja
std
sub
and
pop
xor
iret
inc
mov
repnz
stc
add
aam
out
adc
shlb
ret
aaa
test
and
cli
pop
movsb
cmp
pop
sahf
je
push
pop
xchg
decb
sub
pop
mov
jno
cmp
stos
movsl
push
mov
aam
bound
lods
mov
add
push
in
lcall
aad
mov
loope
jecxz
cmp
loop
add
dec
bound
insb
popa
xchg
jb
xchg
mov
cmpsb
push
and
lods
pusha
inc
outsl
shlb
inc
sbb
or
push
lret
les
mov
popa
xchg
and
ret
cmpsb
pop
jp
xor
jp
cmp
jp
lcall
inc
push
pop
and
push
testl
lds
mov
and
pop
cmp
cmp
stc
ljmp
aaa
jno
cmpsl
mov
push
fidivl
jbe
in
lret
popa
mov
or
stos
cs
cld
add
xor
inc
sbbb
incl
jno
jp
popa
or
push
adc
push
ficoms
pop
cmp
inc
xor
je
mov
pusha
mov
dec
arpl
inc
insl
lods
test
mov
adc
and
mov
loop
push
pop
mov
sbb
lea
test
add
in
outsb
lods
jle
repz
dec
ja
jp
ja
ds
add
mov
jb
mov
jp
jp
inc
nop
lret
sub
mov
cmp
cmp
mov
bound
int
push
inc
popf
ljmp
ds
push
adc
loope
inc
jp
mov
xlat
jb
jb
test
cmp
insl
jp
mov
sub
mov
pusha
bound
pop
shll
jp
inc
test
ja
data16
mov
test
cmpsb
adc
fnsave
cltd
inc
xchg
imul
incb
dec
insb
insb
and
out
push
mov
cli
pop
cmp
mov
ja
mov
xor
std
inc
outsb
pop
mov
mov
hlt
imul
mov
jb
mov
inc
sarb
cmp
mov
lock
daa
out
insl
sti
ja
dec
sbb
outsb
adc
mov
xor
mov
mov
outsb
lret
pusha
push
out
inc
int3
mov
subb
loop
mov
jb
test
aaa
sub
push
test
and
jno
push
scas
jne
xorb
sbb
mov
repnz
cmp
or
clc
mov
jle
jp
lods
repnz
pop
mov
clc
add
sbb
jne
jle
dec
mov
clc
mov
insl
xchg
mov
inc
insl
bnd
jne
dec
sub
or
test
sbb
enter
mov
leave
shrl
rolb
push
outsb
clc
push
aam
inc
sub
push
call
ja
cld
jb
cli
xor
adc
incb
mov
pop
in
loop
jno,pn
sbb
hlt
pusha
cmp
xchg
inc
jo
mov
outsb
adc
std
cli
and
repnz
test
sbb
cld
rcll
cld
lods
cmp
pop
mov
sahf
bound
fcompl
or
call
dec
popa
ljmp
or
adc
sbb
popa
out
jmp
inc
loop
das
xor
inc
mov
inc
sbb
push
stc
dec
xor
mov
or
out
popa
inc
rcrb
hlt
test
icebp
outsb
jb
scas
ds
jbe
sub
ljmp
ds
outsb
fs
pop
outsb
and
mov
outsb
in
add
outsl
leave
xor
rclb
jge
jge
fdivrl
adc
inc
or
ds
std
repnz
cli
pop
sbb
xchg
jp
std
repz
das
cli
ficomps
mov
rcrb
dec
fiaddl
adc
stos
sub
insl
jns
shlb
data16
xor
lcall
push
cmp
xor
jb
outsb
popa
rclb
cmp
jb,pt
sbb
pusha
loop
bound
inc
sbb
jno
ja
jle
outsb
stos
outsb
popa
or
mov
pop
adc
out
repnz
push
scas
mov
scas
xor
push
aas
cld
stc
push
jl
mov
jno
imul
cli
daa
adc
cmpl
js
mov
pop
pop
bound
test
scas
or
push
mov
repnz
sysret
pop
loop
aas
out
inc
add
test
popa
cld
fdivrl
into
mov
mov
adc
jecxz
mov
and
out
add
inc
imul
add
jp
cmp
xor
nop
mov
test
and
jge
jo
setbe
cmp
pushf
mov
add
cwtl
mov
cmp
cmp
out
pop
jp,pn
shrb
inc
pop
ljmp
inc
xor
jno
jne
lcall
gs
or
fldl
sbb
jne
out
aas
mov
repnz
cmp
ror
mov
inc
xor
outsb
mov
loop
jp
pop
insb
push
idiv
inc
push
pop
adc
mov
stc
sub
pushf
mov
lahf
adc
shll
inc
in
pop
paddd
les
inc
icebp
push
pusha
or
repnz
xor
outsb
in
insb
cmp
xchg
mov
adc
or
loop
push
outsb
cli
insl
popa
and
dec
bound
sub
imul
dec
or
inc
adc
inc
cwtl
push
dec
shlb
jp
pop
sbb
cltd
cmp
inc
mov
and
mov
repnz
inc
repnz
mov
hlt
inc
popa
or
ret
das
pusha
push
and
push
cli
pop
dec
cmp
std
popa
xor
jp
pop
jl
jno
pop
lret
aas
sbb
push
sti
push
push
dec
or
outsb
bnd
mov
sbb
faddl
scas
pop
movsl
mov
dec
sbb
pop
movsb
mov
and
lods
jp
xchg
test
bound
mov
mov
enter
jno
jne
inc
push
mov
mov
sub
ja
xlat
bound
jbe
int3
scas
idiv
push
aad
sub
adc
loope
lcall
outsb
pop
aas
cmp
inc
ja
in
push
bound
cmp
cmp
inc
xchg
pop
and
sub
inc
scas
fldcw
aas
scas
outsb
push
popf
loop
mov
mov
shrb
fs
add
stos
xor
shll
dec
lret
or
rcll
push
mov
pop
pop
push
pop
mov
stos
mov
enter
icebp
jno
jp
std
push
loopne
or
pusha
sarb
das
jb
js
or
xor
aas
pusha
dec
pop
inc
sub
js
xor
out
inc
mov
dec
sar
push
ja
fsubs
jbe
pusha
cli
mov
and
dec
jmp
outsb
mov
xchg
ret
push
xlat
mov
cli
test
xor
aas
mov
enter
push
adcl
sahf
cltd
mov
jno
mov
adc
cld
clc
fidivrl
or
pop
inc
xchg
jns
jno
mov
lret
and
cmp
incb
rorb
inc
cmpb
out
mov
out
sub
out
fiaddl
jo
add
lcall
test
ret
and
add
bound
jp
jmp
push
dec
mov
xchg
mov
arpl
daa
pusha
add
jns
or
ljmp
idivb
sub
outsb
pusha
shl
rolb
ftst
cmp
scas
mov
cmp
inc
loop
cmp
out
push
mov
sbb
cmp
cmpsb
mov
scas
js
outsb
jno
mov
xor
pop
dec
sbb
bound
test
cli
dec
push
nop
cli
ret
and
jo
push
add
loop
outsb
mov
mov
mov
cmp
cmp
sbb
inc
mov
loop
pusha
inc
pop
jbe
into
push
mov
andl
daa
out
adc
loop
fisubrl
in
mov
aaa
pop
out
add
arpl
pop
cld
rcrb
outsb
mov
xchg
pop
adc
jnp
inc
ss
jb
cli
loop
fwait
ret
jmp
mov
mov
popa
xor
mov
cmp
jecxz
sti
inc
pop
in
mov
cs
outsl
out
push
cld
inc
jb
bound
and
cmpsb
ret
insb
mov
mov
pop
out
mov
mov
add
stc
mov
lods
insb
lds
cs
notb
jp
cld
sbb
and
pop
out
pushf
fstpl
lret
inc
pop
cmp
icebp
das
pop
fcmovb
stc
hlt
lcallw
mov
push
push
sub
xchg
outsb
cmpsl
in
cli
and
stos
pusha
addr16
ss
addr16
push
push
mov
aas
xor
outsb
call
or
bnd
cld
icebp
outsb
inc
fisubrs
popa
adc
bound
sbb
ljmp
repnz
xor
lcall
dec
xor
cld
xor
insl
popa
decl
out
ret
je
loop
push
fldlg2
repnz
lcall
icebp
inc
cmp
pop
mov
or
out
fisubrl
mov
xor
push
pop
xor
mov
add
stos
pop
cmpb
pop
bound
out
cmpl
add
pushf
setl
repz
jle
inc
inc
sbb
and
push
cltd
decb
addb
shrx
add
mov
jp
nop
jg
add
lcall
sti
mov
xor
ret
addr16
cli
and
idiv
andb
mov
mov
mov
pop
fwait
adc
cltd
dec
outsb
arpl
push
stos
inc
cltd
mov
and
sbb
xor
jmp
test
fsub
fdivrl
cli
jb
mov
test
jbe
cltd
out
mov
jae
cmp
popa
xchg
push
andb
jle
lea
enter
fistps
sub
inc
inc
add
fwait
nop
testb
cs
xchg
mov
sub
test
add
sub
iret
mov
push
mov
stos
dec
mov
cli
cwtl
scas
lcall
mov
stc
gs
pop
mov
and
xchg
addb
out
into
push
das
cmp
jbe
outsl
lcall
rcl
sbb
jnp
mov
mov
mov
clc
arpl
or
je
and
mulb
add
movsb
addr16
int3
insl
push
xor
outsb
mov
add
movsl
cwtl
mov
lret
dec
push
testl
jo
subl
xorl
add
pop
ja
mov
adc
xchg
popf
orb
les
dec
and
outsb
mov
inc
cmpl
lods
roll
add
mov
xor
fwait
cmpsl
aaa
lock
jl
mov
pusha
push
out
or
cmc
push
sbb
insb
out
xchg
jae
fistps
dec
xchg
add
mov
push
mov
outsb
mul
gs
mov
scas
cmp
bound
inc
push
ss
shlb
dec
ret
sarl
dec
xchg
filds
xor
jb
xchg
cmp
fwait
mov
mov
dec
cltd
inc
fsin
push
mov
cs
push
lea
push
je
fsubl
sarb
shll
test
subl
mov
push
pusha
inc
jns
lcall
inc
int3
jo
inc
cmp
mov
add
xor
ss
jg
ss
lock
insl
jno
mov
add
cltd
fnstcw
jecxz
jle
cld
pop
orb
push
sbb
mov
cli
outsb
insl
mov
in
sti
outsl
sbb
push
cli
loope,pt
aas
scas
push
sub
je
add
orb
sarb
add
mov
mov
das
pop
jns
xchg
adc
rcll
stc
imul
mov
stc
roll
repz
movsl
ja
and
sbb
cmp
mov
rol
movsb
pop
imul
and
mov
stos
jle
mov
dec
xor
lock
scas
push
fiadds
std
mov
in
cmp
mov
rolb
push
dec
cli
ss
lea
jns
clc
jle
subb
and
shrl
outsl
stos
mov
push
cmp
es
jbe
xor
inc
cli
mov
push
pop
cs
shl
jbe
inc
ss
std
js
cli
xchg
jne
mov
lret
shlb
outsb
xor
jae
and
dec
test
lcall
and
and
movsl
xor
pop
mov
adc
test
enter
mov
fisttpll
bound
inc
cltd
rol
fimuls
adc
cmpsl
push
data16
jle
arpl
loope
mov
jg
jae
mov
aad
jnp
adc
jno
mov
xchg
test
push
fwait
jno
add
pusha
cli
pop
mov
mov
jo
jo
dec
out
data16
stc
cmp
pop
outsb
jp
dec
jmp
imul
jnp
xchg
test
mov
jp
sub
cmp
divl
imul
jo
push
jne
jle
mov
es
inc
loop
push
jns
mov
call
push
test
sbb
cmpsl
inc
in
pop
and
mov
inc
test
sahf
mov
jno
add
outsb
das
repnz
jbe
xchg
dec
cwtl
stc
adc
push
fisubs
cmp
xchg
lcall
jp
stc
rcrb
push
pop
pop
xchg
stos
jne
lcall
sbb
ds
iret
sbb
icebp
mov
mov
jb
and
popa
ljmp
jo
and
mov
and
imul
cmp
jg
clc
jl
fsin
jmp
and
jmp
push
mov
cli
jbe
xchg
cwtl
testb
ljmp
jp
loope
inc
jge
xorl
mov
cli
jp
bnd
mov
ret
xchg
push
adc
cmp
xchg
fidivl
adc
dec
insl
arpl
xchg
outsb
out
lret
add
pop
inc
sbb
lea
inc
fdivrl
hlt
push
fnstsw
pop
dec
pop
shlb
inc
or
in
mov
ljmp
jns
mov
cmp
popa
inc
outsl
loopne
dec
add
shlb
sbb
inc
cli
inc
sahf
xchg
xchg
into
inc
mov
xor
inc
call
insl
dec
xor
mov
setb
mov
mov
call
lcall
and
push
and
sub
jp
scas
cmp
pop
shlb
adcb
push
bound
loope
adc
sub
push
sti
fcmovnb
outsb
adc
scas
pop
sub
inc
bnd
lods
push
dec
insl
bound
push
sub
fsubr
push
mov
push
and
push
mov
fisubs
popa
xchg
jns
stc
push
push
inc
aaa
xchg
bound
mov
fdivs
pop
jno
pop
inc
sub
bound
lds
and
ds
inc
jno
add
sub
repnz
dec
outsb
scas
inc
inc
psubsb
lahf
push
mov
sub
inc
negb
bound
outsb
pop
out
data16
mov
cli
pop
bound
dec
mov
or
mov
imul
scas
dec
inc
pop
pop
cmp
cmp
or
inc
rorb
stos
jno
addr16
pop
outsb
jle
inc
repz
pop
pop
mov
jle
cmp
inc
dec
cmpb
xchg
sbb
sbb
cmp
pop
inc
cltd
cli
pop
xor
push
jle
das
add
ds
dec
push
lret
or
pop
cs
mov
sub
jge
addl
ljmp
sbb
sbb
adc
int3
dec
and
test
outsb
jge
pop
shlb
loop
cltd
xor
jg
lcall
mov
data16
cltd
enter
rep
or
sbb
inc
fisttpll
cmp
jp
pusha
js
pop
cmp
imul
sbb
jno
xchg
test
mov
idivl
mov
xor
dec
xor
mov
fwait
mov
mov
jae
rcrl
out
mov
lcall
cltd
mov
cli
in
push
mov
jl
fisttpll
jle
popf
xor
cltd
fisubl
pop
enter
push
and
jle
push
sbb
test
dec
stos
mov
mov
insb
or
mov
loop
outsb
inc
scas
cmc
loope
pop
out
mov
rcrl
xchg
ljmp
stc
fwait
and
push
xor
sbb
push
mov
cwtl
jecxz
pushf
mov
sub
mov
mov
lock
add
push
bnd
inc
xor
ds
jle
repnz
popf
fsubr
jp
cli
dec
inc
jo
dec
cmpsl
xor
fcomps
xor
pop
adc
inc
mov
test
and
sub
cltd
scas
push
push
dec
negl
mov
mov
push
ret
cmp
test
out
cli
in
dec
call
inc
loop
ficomps
mov
cmp
mov
subl
xchg
call
stos
test
jo
dec
mov
and
jbe
jge
mov
pop
test
movsl
gs
mov
cmpl
pop
mov
xchg
inc
ds
lods
or
add
imul
or
lea
into
adc
scas
add
add
cltd
sbbl
ja
stc
mov
sub
or
ds
add
mov
dec
int3
in
mov
out
rolb
daa
rclb
int
addb
xor
push
rcl
sub
lret
lcall
push
cltd
xor
je
mov
mov
testl
sbb
lcall
jle
fbld
pop
call
mov
pop
mov
pushf
outsb
addr16
push
aaa
movsl
dec
mov
mov
in
jns
mov
ljmp
dec
test
push
add
ja
in
xor
jg
mull
sbb
fmull
pop
push
jp
mov
mov
adc
sbb
adcb
ljmp
sbb
out
repnz
jbe
xchg
test
jo
jle
fimuls
add
xor
pop
sub
ja
jp
shl
mov
lcall
icebp
mov
bound
xchg
xor
stos
scas
mov
rcll
or
notl
lea
mov
mov
dec
inc
xor
bound
stos
cmc
repz
arpl
inc
pop
sarl
jb
out
push
push
mov
jl
mov
les
add
bound
sbb
pop
push
add
addb
mov
sarb
cltd
xchg
and
incb
test
scas
sbbl
cmp
jnp
addr16
clc
movsb
scas
jb
lret
jae
stos
rolb
stos
mov
lcall
sub
sub
mov
imul
mov
sbb
mov
adc
lock
adc
cmp
jae
clc
mov
sub
sub
arpl
xor
push
dec
push
lods
fistps
pop
lcall
sbb
and
sbb
out
arpl
ja
pop
divb
ss
add
ret
lcall
pop
insl
jbe
mov
aas
cmp
and
sbb
dec
mov
jno
sub
lods
or
mov
out
jle
ss
and
xor
lea
cmp
jne
dec
iret
arpl
mov
adc
dec
jl
cmp
hlt
adc
outsl
lcall
pop
les
mov
add
push
mov
lods
pop
jecxz
sbb
divb
mov
rcl
fs
sbb
mov
scas
push
mov
xor
jg
push
fists
mov
mov
mov
insb
pop
inc
idiv
push
andl
imul
loop
pop
popa
inc
ljmp
inc
jns
test
push
imul
dec
jmp
and
pushf
stc
pop
test
pop
mov
pop
cmpl
fsubp
shl
addr16
push
cwtl
pop
fwait
lock
pop
loopne
add
jp
mov
jb
mov
push
push
sub
lcall
pushf
daa
inc
inc
xor
sbb
xor
mov
test
pop
mov
fsubrs
jo
dec
das
loop
jp
cld
dec
movsb
popa
scas
enter
sub
xchg
jae
out
xchg
bound
sub
push
out
adc
imul
rorb
dec
push
pushf
addr16
xor
push
mov
xor
xchg
xor
and
lds
std
ds
and
cltd
in
jo
std
pop
lret
bound
inc
lock
xchg
xchg
mov
cmp
and
jnp
mov
rcrb
jb
jg
les
daa
cmp
mov
xor
add
mov
adc
test
jge
clc
int3
stos
xchg
dec
xchg
push
push
add
aas
maskmovq
mull
gs
sti
xchg
dec
cmp
jp
cltd
aam
push
or
push
jle
lcall
cmp
xchg
sub
pop
cmp
jnp
js
xchg
adcb
jae
xchg
dec
xchg
pop
mov
jns
js,pt
jl
xlat
cmpsb
stc
cltd
adc
cwtl
cli
jae
sbb
push
sub
lds
shl
jp
or
popa
push
push
mov
ror
mov
nop
aam
jne
cltd
jo
or
cmc
outsb
mov
sbb
xchg
cmp
mov
sbb
jnp
jp
sbb
and
sub
jb
lret
mov
lcall
sbb
jno
and
iret
movsl
ljmp
push
mov
stos
mov
mov
rcl
mov
push
clc
aas
push
and
pop
sahf
insb
pop
dec
imul
jmp
cmc
dec
subl
pop
pop
pushf
inc
inc
or
ljmp
sahf
mov
and
mov
inc
mov
push
ss
scas
ja
fsubl
push
outsb
js
sbb
jmp
fs
pop
mov
std
imull
mov
jns
mov
jb
jb
ss
mov
mov
xor
movsl
das
xchg
adc
jbe
insb
add
mov
mov
sahf
cmc
mov
lcall
mov
mov
mov
das
out
stc
out
dec
imul
outsl
sub
mov
dec
stc
jecxz
push
inc
push
add
psubusw
cmp
inc
pop
jp
js
lcall
mov
pop
push
sub
out
push
jns
sub
or
push
jae
mov
xor
jbe
cmp
xchg
movsl
icebp
shrl
scas
repnz
insb
test
sbb
dec
push
xchg
xchg
xor
ds
cmc
daa
mov
rolb
sarb
in
test
dec
push
test
cmp
lock
and
adc
pop
sbb
arpl
inc
cltd
mov
mov
pop
movsb
rclb
pop
imul
jp
dec
pop
lahf
insb
bound
cs
dec
jns
ret
mov
dec
cmp
push
xchg
shlb
in
push
lds
jbe
cltd
xchg
test
das
xchg
add
fs
lods
popa
addr16
pop
push
pop
cs
push
inc
sbb
pop
lea
fcomps
mov
push
xchg
daa
xor
cmp
jl
mov
cmp
out
fisubs
sbbb
ljmp
jmp
decb
sarl
jbe
pop
stos
sbb
dec
sar
scas
xorb
loopne
lods
mov
cli
push
icebp
call
inc
mov
sbb
push
jne
mov
sbb
pop
imul
push
popa
cltd
ss
flds
fildl
icebp
cmp
xor
pusha
inc
cltd
cmc
xlat
cwtl
push
or
jl
lcall
mov
mov
jae
sti
or
fadds
push
jbe
ret
add
pop
mov
stos
out
sar
xchg
xchg
notl
push
push
jl
inc
int3
mov
cmpl
and
mov
pop
xchg
lcall
ds
fbld
inc
divb
pushf
cmp
inc
dec
xor
repnz
iret
or
inc
loopne
push
lds
or
pusha
cltd
ja
std
pushf
lahf
dec
and
mov
add
mov
inc
add
leave
pop
test
ljmp
cltd
divb
stc
popf
mov
mov
cmp
stos
cmp
rcrb
sub
testb
lcall
loopne
ret
imul
pop
mov
sbb
mov
rcl
push
rcrb
ds
mov
jge
mov
test
lods
notl
loope
mov
inc
push
out
cmp
test
cld
mov
or
ds
jbe
jl
pop
sbb
mov
pushf
and
in
stc
dec
cmp
pop
cmp
outsb
xor
bound
inc
and
xor
iret
mov
jbe
mov
jge
jns
xorl
je
push
push
cmp
mov
push
mov
cmpsb
pop
clc
mov
jbe
adc
sahf
cmp
cmc
mov
test
fwait
mov
mov
ljmp
je
xchg
aad
sub
mov
mov
xchg
pop
mov
mov
dec
pop
inc
fwait
jle
ret
fwait
mov
inc
mov
mov
orb
movsl
mov
mov
fcomi
pop
or
std
mov
std
dec
nop
rcrl
pop
lods
cld
pop
xchg
repnz
cmp
lock
lcall
nop
loope
and
icebp
pop
inc
ret
mov
mov
cmc
stos
inc
dec
mov
popa
bound
pop
aaa
sti
pop
push
push
cs
and
push
inc
xchg
adc
fists
jl
shrl
jbe
dec
imul
sub
add
test
mov
xchg
leave
lea
sbb
aas
cltd
test
jb
inc
outsl
push
ficoms
push
loop
mov
inc
mov
cmp
mov
pop
jo
arpl
pop
test
push
pop
cltd
es
mov
and
outsl
mov
push
lcall
aaa
xor
jne
test
ficoml
ds
orb
push
mov
loopne
outsl
lcall
inc
shlb
loop
lcall
data16
adc
mov
and
call
arpl
jle
outsb
cmp
mov
mov
cmovp
and
jle
sub
movsl
xchg
xchg
stc
jle
pushf
in
mov
mov
push
pop
and
dec
pusha
inc
mov
cmp
ds
mov
in
xchg
mov
add
pop
bound
cmp
push
mov
mov
pop
stc
xchg
das
xor
xor
cmp
push
inc
mov
mov
ljmp
pop
cltd
ret
addr16
jl
cmp
stc
popa
adc
je
dec
xchg
sbb
inc
movsb
add
cmpsb
insb
ja
test
push
fcmovu
sahf
rcrb
jmp
cltd
pop
ds
in
orb
lcall
ret
cs
dec
push
or
jb
push
call
pop
out
jle
jne
test
std
cmp
testl
cmpsb
imul
add
inc
push
xor
mov
add
out
mov
imul
xor
sub
cmp
out
push
sub
in
jo
mov
add
cmp
and
pop
out
addb
pop
jl
fwait
cli
int3
das
sbbl
push
aaa
rcll
inc
ljmp
adc
enter
jo
dec
mull
scas
pushf
dec
and
sub
ja
inc
into
push
outsb
xchg
push
cmp
aam
xchg
mov
das
test
add
adc
xchg
ds
and
xor
test
mov
xorb
xor
mov
mov
cltd
sbb
pop
pop
sub
out
iret
mov
dec
test
shlb
mov
es
mov
push
mov
inc
mov
test
cmp
sbb
adc
mov
jo
mov
sti
sub
push
cltd
jns
xchg
daa
shl
lcall
sbb
enter
jbe
shlb
cli
mov
mov
and
movl
ret
xor
xorl
mov
movb
icebp
xchg
pop
dec
std
add
jns
ss
pop
jle
cld
and
lcall
mov
mov
mov
xchg
mov
test
outsb
out
push
inc
jmp
sub
lcall
sub
xor
push
dec
inc
xlat
bound
out
mov
mov
lret
push
repnz
lods
int3
insl
insb
cmpsb
or
ret
jns
insl
mov
lret
jecxz
mov
ret
lcall
pop
mov
xor
mov
inc
add
std
shlb
lea
jp
add
stos
push
out
mov
and
sub
sti
rcr
nop
xchg
ret
arpl
mov
add
nop
jle
enter
lcall
jae
mov
js
and
arpl
xchg
or
lea
loopne
pop
add
fisubs
jne,pt
cmp
push
or
test
pop
xchg
pop
fwait
ljmp
mov
aam
or
and
and
fistps
divl
clc
ds
xor
add
xor
out
cli
ss
mov
add
inc
pusha
outsl
inc
sub
pop
pop
out
jns
jne
cmp
dec
pop
sbb
jns
rorl
out
and
rcrb
or
jae
test
xor
loop
pop
jb
pop
push
sbb
jbe
cs
push
out
pop
cmp
mov
gs
mov
scas
lcall
in
jle
push
pop
mov
clc
test
neg
jb
cltd
int
cmp
addr16
cli
inc
int3
pop
or
jae
mov
into
jns
sub
push
insb
push
and
jmp
leave
pop
lods
pushf
mov
bound
cmp
mov
insb
sbb
push
cs
and
push
mov
add
dec
cmpsb
or
stc
xor
daa
loopne
mov
sub
jb
rclb
inc
cmp
ficomps
into
dec
mov
mov
mov
bound
add
lcall
jnp
std
in
mov
aas
incl
sbb
jle
addl
jne
lcall
pop
xchg
into
daa
fs
lret
inc
sub
out
pop
andb
out
shll
iret
leave
push
xchg
cltd
and
mov
jae
ret
adc
lcall
mov
push
fbstp
sahf
cli
repnz
in
aas
and
sub
add
jle
mov
jecxz
out
mov
add
es
jo
gs
je
push
stos
jg
int3
sahf
fidivrl
out
sub
mov
jecxz
popa
jmp
ficompl
outsb
jl
add
cmp
sbb
dec
add
sub
dec
cmp
test
int3
mov
sub
mov
test
sbb
ja
and
inc
test
fs
pop
push
lret
sub
out
dec
inc
xchg
cmpl
cltd
pop
int3
push
adc
es
lret
sbb
idivl
jecxz
mov
push
add
sub
adc
jp
and
push
push
jns
jb
sti
testb
jb
pop
scas
jp
xor
inc
pop
inc
push
fistps
pop
jb
mov
inc
mov
cmp
add
jp
inc
cmp
jbe
push
bound
ds
int3
std
in
insb
push
mov
cli
pop
jb
dec
pop
mov
jb
xchg
outsb
jb
xorl
std
push
hlt
dec
adc
add
sbb
cmp
inc
jp
aaa
aad
jb
in
loop
stos
std
inc
popa
loop
xchg
add
cmp
jp
mov
or
jb
add
jp
mov
and
fiaddl
outsb
jp
cmc
and
xchg
pop
in
sub
imul
push
popa
bound
pusha
mov
and
jp
mov
je,pn
orl
sbb
inc
push
test
sbb
jle
in
sbb
mov
jb
cmc
stos
adc
mov
mov
sbb
in
jb
xor
loope
sbb
icebp
pop
fcomps
clc
pop
jb
lods
popf
xchg
pop
jbe
ret
sub
and
jp
das
push
cs
incb
inc
popa
std
mov
and
repnz
cmp
sub
cmp
jo
and
add
jo
jp
jle
in
push
pop
lret
xor
repnz
ret
xchg
push
ljmp
cmp
push
out
jbe
cs
fisubs
ss
nop
loopne
cmp
ss
fsubs
add
ror
jle
xor
push
cmp
shl
cmp
mov
fidivl
push
pop
out
sub
stc
jp
es
inc
pop
cmp
loopne
cmp
shll
add
outsb
xchg
out
jb
push
cld
loop
pop
jmp
js
pop
ljmp
inc
fisubrs
add
ss
fidivs
popa
jp
ljmp
jl
add
jge
mov
add
stos
xchg
scas
xor
fimuls
jne
jnp
inc
pop
adc
cmp
jns
xchg
mov
xchg
and
dec
mov
adc
and
push
out
inc
cltd
push
push
jns
mov
mov
cli
jl
in
jb
xchg
push
jns
and
sbb
mov
outsl
out
data16
push
and
xchg
sbb
pop
ds
inc
in
out
es
jo
js
adc
adcl
xlat
ret
mov
lcall
inc
mov
sbb
hlt
data16
and
jb
pop
pop
inc
loop
jne
cltd
outsl
push
jb
and
xor
iret
ss
inc
jp
cli
xor
sub
cmp
nop
jg
enter
cs
pop
cld
adc
jmp
mov
cmp
xorb
adc
repz
xor
in
lcall
cmp
mov
jle
push
mov
orl
jb
and
cmova
std
adc
pop
fsubrl
stos
pop
add
fimuls
jns
bound
test
jge
clc
push
mov
push
jns
lea
movsl
in
scas
dec
stc
mov
sub
mov
adc
shlb
mov
or
jecxz
xchg
inc
push
clc
xorb
or
mov
dec
push
ss
stc
shrl
pop
gs
push
rcr
mov
cli
cmpsl
lcall
xchg
rol
mov
push
dec
lcall
fisubs
outsl
xchg
xlat
imul
push
ja
xor
jno
cli
jecxz
push
sbb
pop
mov
cs
loopne
jns
lcall
int3
pop
scas
pushf
pop
jl
push
jno
pop
xchg
ja
pop
mov
xchg
lea
into
cwtl
mov
imulb
cmp
test
xor
jecxz
hlt
pop
sbb
sbb
daa
stos
jns
xchg
lods
mov
jae
jl
xor
int3
mov
les
shll
data16
cmp
dec
push
movsl
scas
fnstsw
jo
xabort
imul
cli
xchg
pop
sbb
pop
ja
sahf
and
es
push
scas
dec
icebp
dec
stc
insb
xor
jge
push
jge
insl
add
lcall
jge
ja
or
pop
dec
inc
mov
cs
inc
test
leave
mov
xor
pushf
xchg
pop
cmp
lahf
loope
imul
enter
xor
add
cmpsl
and
mov
pop
ret
cmp
jns
fisubrl
push
mov
sbb
cmc
inc
push
outsb
call
std
add
or
mov
xchg
push
jl
lret
cs
test
pop
mov
jae
mov
js
mov
mov
or
pop
sub
outsl
inc
lcall
lcall
cmc
out
stos
test
dec
daa
inc
xor
mov
dec
mov
mov
fdivl
fidivrl
shl
lcall
idivl
lea
jbe
sbb
push
scas
cmp
or
decb
test
call
shlb
stos
mov
enter
insb
cmp
test
pop
push
rolb
push
mov
mov
jg
xchg
cltd
dec
nop
cmp
jno
sbb
jo
mov
push
dec
sub
into
call
cwtl
repz
adc
sbb
loope
mov
fdivrs
push
loop
mov
ret
je
push
lahf
out
bound
nop
jg
test
shrb
and
test
pop
push
frstor
pop
push
mov
clc
ret
pop
mov
lret
cwtl
jle
mov
sbb
fcoml
divl
orl
adc
rol
dec
fstl
push
push
arpl
jo
xor
pop
add
add
mov
rcl
add
dec
xchg
in
movsb
outsl
popa
ror
sbb
and
inc
ja
out
pop
pop
jg
pop
dec
mov
sub
pop
js
lret
loop
jmp
imul
sub
sbb
sti
sahf
push
fiadds
test
cmp
mov
fmull
lcall
int3
or
mov
fstps
inc
jo
es
dec
cli
test
xlat
addr16
dec
loopne
jle
stos
ljmp
shll
js
pop
and
jg
lods
sbb
outsl
rcl
mov
xchg
xchg
adcl
mov
jmp
in
mov
and
ss
in
jmp
mov
cmp
sub
dec
push
xchg
inc
decb
es
inc
lock
fs
xchg
sbb
stc
sub
pop
movl
dec
push
sbb
push
ljmp
mov
cmpsl
push
sub
adc
cmpsl
orl
mov
addb
mov
jge
stos
lcall
sbb
jo
mov
jle
jmp
outsb
add
ss
lret
icebp
hlt
sub
cmpsl
mov
pop
add
popa
pushf
es
icebp
repnz
xor
sti
cmp
ficoms
xor
adc
movsl
lcall
cltd
push
mov
inc
sarl
mov
add
add
cltd
pop
push
stc
ja
push
xor
add
push
fbstp
and
movsl
ss
imull
repnz
cmp
adc
pop
jae
xor
fucomi
or
push
stc
sbb
test
sub
xchg
inc
sahf
cmpsl
pop
sub
push
mov
shlb
pop
pop
add
popa
hlt
cmpsl
mov
add
lea
gs
mov
adc
loop
xchg
data16
cmp
ret
bound
pop
sbbb
pop
int3
jp
mov
inc
mov
jge
cltd
sahf
mov
pop
lods
mov
inc
lcall
jge
mov
lcall
xor
shrb
push
addr16
inc
xor
fadds
push
cmp
in
dec
jb
fistps
pop
xor
shll
mov
outsl
loopne
cltd
std
arpl
lcall
xchg
ret
pop
dec
mov
bnd
push
pop
mov
aaa
and
sub
sub
jmp
and
mov
js
sub
sahf
repnz
and
fstpl
shl
das
lcall
jns
push
ds
dec
cmc
sub
cmp
loop
call
pop
jo
imul
ja
lcall
jmp
jae
aaa
add
lret
jecxz
cmp
imul
std
fildll
aad
cli
xchg
imull
mov
mov
lods
dec
movsl
enter
and
movsl
add
lea
jg
arpl
push
mov
mov
xchg
and
sti
xor
cmc
jnp
cmp
mov
pop
add
leave
cmpsl
ljmp
arpl
add
arpl
sub
insb
les
cmp
cmp
testb
sbb
cmp
and
push
push
frstor
push
out
jmp
je
mov
outsl
fisttpl
mov
out
mov
sub
push
jo
mov
sbb
mov
sbb
cmp
xor
outsl
xor
mov
mov
sub
ss
insl
lret
inc
fistpll
xor
xorb
bound
cltd
cvtpi2ps
call
js
adc
jnp
imul
frstor
sar
mov
das
lock
xchg
jns
lea
sub
cmp
faddl
add
ret
decb
sbb
pop
mov
ljmp
sbb
push
repnz
jae
ss
std
sub
or
rolb
dec
pusha
add
sbb
pop
stos
fsubp
or
jno
inc
loop
loopne
inc
mov
scas
mov
jb
mov
roll
clc
pop
stos
or
in
mov
ret
xor
jne
push
fs
repnz
lods
lcall
mov
ret
push
lret
popa
jmp
dec
cmp
lahf
sub
in
pushf
pop
sbb
add
clc
sbb
test
sbb
or
xchg
repz
push
in
and
jae
dec
mov
xchg
inc
jnp
and
inc
ss
jo
xchg
add
scas
lret
and
jmp
adc
jge
sub
sbb
mov
mov
xchg
test
scas
sub
loope
outsl
jae
sti
inc
jle
lcall
push
inc
mov
pop
sbb
add
pop
rclb
lds
mov
push
push
rcl
fildll
fidivs
mov
dec
pop
sub
cmp
xchg
divb
cltd
std
test
cmp
mov
fs
test
jno
cs
ds
push
iret
in
pop
jle
jecxz
mov
mov
cwtl
push
sub
sti
lds
or
cmp
xor
or
push
rclb
sub
scas
cmp
lcallw
jo
jns
arpl
popf
add
lret
sbb
and
cmp
fisubs
push
ret
mov
jge
stc
shrl
mov
dec
mov
cwtl
out
stos
and
mov
dec
sbbb
mov
rcr
jo
push
add
adc
clc
lcall
pop
cwtl
lods
or
and
fsubl
sub
mov
push
xchg
std
add
push
jecxz
add
sub
negb
push
shl
lock
and
inc
cmc
cli
cmp
jo
push
iret
inc
add
mov
push
out
popw
mov
hlt
cmpsl
icebp
repz
xlat
mov
rcrl
or
jle
fcomip
xchg
mov
jl
jb
jg
xchg
test
loope
jl
dec
enter
mov
test
mov
mov
jle
shll
loope
andl
cmp
mov
sbb
xchg
push
mov
sar
cmp
pop
stos
out
mov
mov
int3
jns
roll
xchg
pop
mov
push
cmpsl
mov
mov
fwait
bound
pop
push
add
mov
cs
ljmp
pop
mov
fdivl
sub
cltd
adc
xor
decb
mov
loopne
mov
lcall
ja
jb
std
or
mov
lcall
jnp
dec
mov
hlt
mov
jns
movsl
inc
push
movsb
sahf
and
push
add
into
xchg
insb
jle
loopne
lcall
mov
sbbl
xor
push
push
rorb
push
sbb
testl
sti
jnp
imul
outsl
rorb
jnp
test
xor
stc
pop
pop
jl
add
mov
lahf
add
fnsave
push
loopne
int
cmp
sbb
push
insb
push
push
mov
iret
mov
leave
imul
test
mov
rcrb
pop
dec
loopne
pushf
jno
pop
push
push
rcl
and
scas
jecxz
js
adc
xchg
out
es
push
call
popf
ficomps
mov
pushl
pop
jo
popf
arpl
xchg
jbe
aam
outsl
scas
mov
mov
in
lea
jae
mov
rcll
nop
add
lret
mov
mov
sbb
dec
insl
rorl
jge
std
jne
adc
cltd
mov
xor
mov
or
sbb
push
sub
sub
jmp
rolb
std
popf
lcall
bound
cmc
lods
scas
pusha
push
xor
mov
ja
sub
frstor
inc
lods
cmp
dec
jg
push
ja
outsb
subb
je
sub
out
ds
ret
xrelease
push
fldcw
aaa
adc
pop
js
jno
pop
adc
shrb
add
sbb
and
mov
adc
xor
jb
mov
jae
mov
inc
mov
mov
push
fisttpl
test
lahf
movsb
in
adc
adc
pop
sub
je
call
fadd
in
mov
mov
mov
push
shlb
jg
xchg
lods
lcall
movsl
jnp
je
mov
ja
imul
jns
push
stos
dec
mov
arpl
lea
cmp
imul
ljmp
xor
inc
mov
xchg
pusha
fisubs
adc
xor
cltd
imull
das
sub
xchg
mov
mov
sbb
shlb
inc
popf
sub
mov
iret
insb
bound
pusha
push
mov
loope
pusha
mov
loop,pt
shll
cmp
mov
rclb
ret
mov
push
out
add
leave
arpl
std
je
notl
jg
push
dec
jb
ja
cmp
sub
adc
mov
sbb
jns
mov
jae
mov
in
scas
xchg
add
add
or
lcall
repz
int3
scas
and
dec
cmp
and
inc
cs
jns
and
jne
adc
lea
push
jo
cli
shlb
cld
cmp
jmp
jl
ds
stos
mov
push
or
jns
push
xlat
fistpl
or
stc
in
sbb
pop
ja
jae
jo
cmp
push
jne
add
xchg
push
adc
outsb
sbb
adc
adc
lret
inc
rolb
imul
or
adc
cltd
pop
idivl
xchg
mov
repnz
push
mov
inc
sti
fldt
and
fs
lret
xor
dec
inc
out
jle
xchg
cmp
jb
outsb
push
mov
mov
mov
mov
push
or
adc
and
add
dec
lahf
sbb
inc
jmp
out
mov
dec
dec
and
jle
or
push
into
into
das
ja
rcrl
push
lods
hlt
cmovp
nop
push
mov
fidivrl
pop
and
mov
out
lods
imul
subl
ret
data16
lds
pop
pushf
paddusw
mov
out
scas
mov
sub
push
push
movsb
cltd
dec
stc
cltd
test
stos
push
cmc
push
movsl
negl
or
pop
popf
jg
sbbl
inc
stc
pop
fldcw
add
int3
mov
sarb
sbb
cltd
xchg
mov
scas
fwait
jbe
pop
jo
lea
stc
fimuls
aam
xorb
lret
test
addl
xchg
pop
and
push
mov
inc
cmp
fisubrl
das
rcll
adc
aad
notl
movsl
xchg
sahf
lahf
addr16
mov
bound
in
in
sbb
mov
jle
lods
xchg
jne
mov
das
dec
icebp
mov
jle
cltd
aaa
inc
add
sbb
mov
es
jg
xchg
out
mov
test
ficomps
push
pop
mov
lods
stos
into
lds
sahf
imul
mov
fmull
movsb
pop
pop
incb
and
into
lahf
sti
mov
jle
popa
and
mov
sahf
and
mov
pop
loope
mov
pop
arpl
popa
repnz
lea
fildll
or
ss
mov
adc
out
lock
popf
sbbb
cmpsb
xadd
and
xor
sub
lahf
pop
and
adc
lcall
dec
mov
sbb
in
repnz
pop
mov
test
testl
mov
subl
sub
and
dec
test
and
push
fnstcw
cwtl
mov
call
and
xchg
jo
sub
jge
loope
inc
mov
sub
rcrb
mov
das
adc
fstps
loope
ret
fisubrs
lds
movsb
cltd
and
mov
cs
jns
or
mov
in
pop
or
mov
out
sbb
sahf
mov
addr16
lcall
in
mov
addr16
xchg
jne
imul
mov
and
cltd
sub
mov
jge
ret
mov
xchg
jl
add
mov
inc
mov
ss
fidivrs
jp
popa
add
pop
or
jns
adc
out
cmp
push
pop
jo
rorb
andb
or
or
push
leave
aas
in
inc
imulb
test
mov
add
inc
idivl
loop
jbe
inc
cltd
lret
ficomps
and
jns
add
lock
lcall
jae
mov
outsb
les
test
lcall
ret
adc
aas
mov
jbe
or
mov
mov
int3
fsub
push
repz
jbe
sub
add
out
jo
es
fcoms
das
stc
out
test
cmp
cli
lock
sbb
jb
popa
xchg
in
inc
add
xchg
mov
imul
out
test
sub
jo
data16
hlt
divl
xlat
xor
xor
jle
push
adc
xorl
pusha
xchg
push
cmp
cli
popf
lock
mov
jb
out
std
fmuls
pop
jp
pop
mov
push
xchg
jae
mov
mov
test
cmc
in
jge
or
rcrl
sahf
fiaddl
std
or
clc
mov
imul
mov
sub
add
js
and
xor
sbb
mov
ud1
stc
mov
push
data16
out
mov
inc
mov
mov
jo
in
mov
push
push
pusha
lds
xor
imul
mov
adc
xor
fnstcw
sub
out
inc
push
out
jmp
es
mov
imul
cmc
xchg
divl
in
jno
sbb
jmp
cltd
enter
negl
mov
sbb
sbb
mov
pushf
jb
js
push
jne
cmp
mov
das
mov
push
rcr
pop
xchg
mov
not
mov
outsl
mov
mov
xor
mov
jle
repz
push
sbb
add
jo
mov
mov
jno
lock
ret
popa
and
nop
cs
jns
jl
clc
xor
frstor
negb
pop
sub
mov
sbb
sbb
insb
mov
or
inc
and
mov
add
or
pop
xchg
jge
jecxz
in
into
mov
rorb
or
lock
push
hlt
lds
rcrl
dec
js
sub
test
out
pusha
aas
test
push
ja
out
repnz
fidivrs
out
xchg
lret
into
and
xchg
rorb
xor
lahf
hlt
push
xchg
lcall
sbb
in
imul
push
inc
fldl
inc
nop
push
xchg
imul
pop
in
xchg
jp
jo
and
icebp
push
daa
in
adc
movsb
hlt
aad
in
mov
in
add
rcrb
les
mov
test
ljmp
lcall
call
mov
mov
stc
rorl
fildll
push
adc
cld
mov
xchg
sub
outsb
cmpb
mov
cmpl
call
stc
ja
and
inc
or
sti
mov
xor
out
xchg
add
push
sarl
insl
test
and
pop
jg
call
xor
mov
mov
cmp
jle
ljmp
jb
push
mov
xchg
fdivrl
mov
test
mov
daa
push
sahf
cld
pop
in
and
outsb
dec
out
divb
inc
add
jge
outsl
lret
pop
outsb
mov
pushf
stos
call
adc
int
or
cmpb
psubusw
jmp
pop
lret
pusha
daa
xor
fidivrs
shrb
mov
xor
or
sub
sub
jbe
dec
or
xchg
pop
mov
inc
pop
in
pop
repnz
push
pop
outsl
mov
fildl
mov
dec
test
movsl
xor
jno
cltd
outsb
out
adc
push
sub
ret
inc
lret
push
jb
pop
adc
movsl
xor
cmp
push
divb
bound
and
push
sub
jle
in
cld
inc
fsubl
call
je
and
push
jb
lods
pop
jb
and
pop
inc
shrl
cs
aaa
mov
xorb
pop
xchg
push
and
cmp
scas
sub
jb
sar
jp
and
fistpll
and
push
push
cmp
imul
add
xor
add
testb
jno
loopne
cld
scas
mov
sbb
outsb
jle
sbb
outsb
jb
xchg
outsb
ja
es
arpl
cmp
imull
inc
and
das
cs
xor
sbb
push
cli
pop
xchg
cli
add
add
js
xor
push
jae
add
push
jb
fstpl
mov
jae
jle
xchg
bound
jno
add
xor
xchg
push
subl
roll
adc
sub
ret
jne
jge
popa
jb
pop
imulb
fildl
cmp
call
das
add
cmp
pop
dec
pop
add
xor
sub
xorb
pop
inc
sbb
mov
mov
mov
jge
inc
push
xorb
es
xor
pop
jp
xor
bnd
dec
xchg
loop
jle
add
aas
push
xchg
cmp
repnz
cmp
popa
sub
ficoms
mov
cmp
out
ret
stos
cmp
adc
into
pop
mov
lcall
add
sbb
push
rcrb
pop
inc
iret
sbb
ss
imul
dec
loopne
add
add
push
cli
clc
xchg
pop
pop
fisubl
add
js
bound
js
mov
cmp
mul
repnz
fcompl
mov
push
out
push
and
adc
sbb
add
push
xlat
jbe
xchg
jl
xchg
imul
jne
push
xor
scas
mov
stos
and
subl
xorb
scas
sub
mov
fdivp
xor
js
adcl
jo
out
rolb
outsl
lcall
inc
mov
test
fisubrs
stc
mulb
repz
in
out
nop
and
add
mov
and
mov
mov
push
push
mov
pop
jnp
mov
adc
xor
lea
inc
pop
mov
jle
popa
mov
jp
sti
pop
mov
add
jae
fwait
and
jae
das
dec
iret
aas
cmp
jo
ret
es
push
jle
xor
xor
mov
inc
cltd
test
xorl
sbb
std
push
testb
orl
push
and
lcallw
mov
add
fadds
pop
imul
inc
bound
xchg
in
repnz
jle
cltd
dec
and
movsb
inc
add
add
mov
jge
sar
push
mov
mov
fucomi
mov
jo
mov
cmc
or
push
mov
inc
shll
leave
jbe
jns
lcall
imul
xchg
xorl
in
push
dec
loop
ret
mov
inc
xor
push
lahf
push
adc
fsubl
std
sub
sub
sbb
andl
and
clc
push
mov
jl
pop
dec
and
in
outsl
mov
push
andb
push
dec
and
add
lea
sarb
out
subl
adc
ds
in
repnz
mov
sub
ja
fwait
ljmp
inc
sub
pop
std
cltd
sbb
jno
jbe
xor
aaa
or
mov
imul
add
scas
pop
pop
data16
push
mov
xor
addb
mov
pop
mov
cltd
mov
and
cmpsb
ds
mov
lcall
ret
mov
lods
subl
xchg
lea
mov
cmp
fwait
mov
add
jle
test
lcall
mov
adc
push
je
mov
mov
fcmovnb
and
fucomp
bound
cld
add
jb
notl
add
and
sarb
adc
inc
mov
lea
testb
call
cmp
sbb
push
mov
xchg
mov
test
outsl
jo
loop
adc
decl
inc
movb
inc
mov
data16
mov
add
mov
jbe
lds
sbb
lahf
push
popa
lea
add
std
pop
lcall
or
xchg
push
dec
mov
cltd
mov
jp
das
scas
jne
mov
outsl
dec
cltd
mov
push
scas
jmp
test
inc
out
push
push
bound
mov
cld
mov
cmp
cmpsb
push
jne
ret
jg
pushf
fwait
mov
mov
pop
mov
lcall
and
stc
jb
out
jmp
push
orb
jle
pop
mov
addb
mov
mov
dec
pushf
sub
movsb
loop
lods
sbb
pop
je
ds
ret
hlt
test
repz
aam
out
dec
xchg
iret
and
mov
jnp
adc
or
xor
xor
pop
push
mov
fdivrs
or
in
jle
xchg
add
aad
push
adc
mov
stos
lcall
test
add
xor
cltd
xchg
je
out
fprem
hlt
mov
cli
in
jnp
mov
xchg
lea
mov
mull
sarl
pop
imul
ss
push
int3
add
and
inc
mov
xchg
xlat
cwtl
fs
cltd
adc
or
das
push
ficoms
xchg
repnz
mov
sub
lcall
sahf
jge
xor
add
mov
dec
ds
cmp
mov
test
xchg
lea
loop
mov
scas
mov
test
xchg
ss
nop
movsl
cltd
mov
and
out
fcompl
pop
add
cs
adc
aas
test
cltd
popa
test
xor
cmp
bound
int
mov
cmpsb
cltd
data16
lock
dec
sbb
fsts
jle
jge
movsl
jp
push
inc
scas
stc
aad
sbb
mov
inc
sbb
subb
or
push
je
movsl
lea
sbb
xor
inc
sahf
xor
pop
and
loope
jge
cltd
xorw
or
clc
mov
stos
fnstenv
cmpsb
jnp
add
lret
stos
cli
incl
ret
jb
add
mov
popf
jg
sbb
adc
and
cltd
lea
mov
ret
loop
repz
popf
pop
mov
fstpl
mov
outsb
mov
out
xchg
xchg
sarl
push
data16
mov
rcrl
sub
mov
pop
push
pop
loop
push
imul
or
test
pop
in
pop
push
jae
cmp
pushf
ja
and
cltd
pop
rolb
mov
pop
sub
cwtl
ret
dec
out
loop
cmp
cmp
shrl
pop
pop
in
push
sub
push
sahf
das
pop
nop
adc
lcall
adc
jmp
fnstcw
inc
cmp
mov
cmp
xchg
stos
clc
out
pop
mov
js,pt
icebp
sti
sarb
mov
cmp
adc
movsb
insb
aam
cmp
cli
mov
lret
lea
jg
and
mov
shrl
push
mov
pop
pop
das
scas
leave
mov
imul
pop
push
std
lret
mov
jg
into
and
jl
xor
test
jns
mov
jbe
andl
ret
inc
cmp
into
and
mov
ds
mov
add
mov
sbb
out
pop
scas
pop
stos
sub
data16
cltd
pop
dec
fwait
mov
sti
inc
pop
mov
xchg
or
jo
pushf
sub
cmp
fsubs
xchg
jae
shl
loope
pop
lods
in
push
add
cwtl
pop
bnd
add
mov
fs
outsl
sub
and
ja
mov
push
adc
cmp
or
shlb
sbb
cmp
mov
inc
out
cmp
cmp
call
addb
push
scas
xchg
enter
mov
das
dec
fsubrs
jmp
in
mov
add
and
aas
out
orb
ret
push
clc
in
in
xchg
lods
push
pusha
shl
dec
mov
out
cmpsb
sub
cltd
test
push
test
in
jo
cwtl
bound
int3
shrb
cltd
outsb
xor
iret
sub
jecxz
in
mov
ret
xor
insb
rcll
inc
jb
fcmovnu
and
pushf
lock
push
clc
adcl
cmp
xorb
jbe
jbe
push
cmpb
inc
pop
adc
xor
int
xor
and
rclb
add
mov
repz
add
cmp
or
shll
aaa
mov
adc
mov
outsl
inc
dec
pop
ret
dec
stc
mov
lock
xor
mov
movsb
cmp
add
imul
push
inc
dec
jge
bnd
test
sbbl
outsl
cmp
dec
pop
cli
in
loopne
cmp
mov
aad
mov
and
mov
xchg
in
pop
cmp
ss
iret
xchg
adcl
xchg
daa
add
inc
outsl
mov
cmpxchg
orb
or
mov
enter
and
cltd
adc
dec
mov
punpcklwd
cli
and
inc
aad
dec
xor
ss
jle
xor
jbe
andl
movsb
sub
je
mov
lcall
sahf
and
outsl
mov
pcmpgtb
jb
mov
sbb
les
sbb
pop
and
mov
call
dec
scas
mov
movsl
push
pushf
arpl
inc
xchg
add
lcall
addr16
add
ss
cli
es
mov
jae
mov
ja
arpl
popf
pop
xor
enter
mov
popa
insb
mov
push
hlt
addl
mov
rorb
loope
fiadds
dec
push
andb
repnz
pop
lahf
mov
jo
aam
xchg
sbb
insb
push
pop
fwait
rcr
and
or
loop
sbb
outsl
xchg
sub
stos
hlt
std
repnz
ss
pop
mov
mov
movsb
std
rolb
aad
outsl
mov
xor
mov
mov
add
xchg
or
add
cltd
fistpll
adc
lret
sub
add
push
push
jmp
add
push
xorb
out
lock
push
jae
push
ret
push
lcall
push
in
cmp
dec
mov
sub
popf
scas
or
in
pushf
inc
cmp
inc
mov
mov
iret
in
mov
mov
inc
lcall
pop
imul
out
psrad
adc
push
lods
fiaddl
rcl
mov
pop
sbbb
and
cmp
cltd
adc
aas
pop
ret
mov
pop
shlb
int3
mov
inc
inc
ret
lea
mov
jg
add
or
push
ficoms
mov
cwtl
cmc
mov
stos
inc
stc
icebp
or
bound
ds
jecxz
enter
or
add
mov
jg
lock
cltd
pop
rolb
lock
jbe
stc
add
sub
and
and
addr16
test
push
das
add
xor
iret
push
mov
xor
pop
daa
lods
push
lock
jl
lcall
scas
scas
popf
les
jbe
cmpsl
cmp
fwait
test
imul
push
pop
rcll
add
xor
dec
xchg
push
stos
lcall
ret
jle
aaa
shrb
mov
cwtl
sarl
mov
fldt
cmpxchg
scas
lods
insb
sub
aas
lret
aad
pop
cmp
cmp
xor
ss
xchg
pop
jb
push
rol
jo
bound
enter
push
push
clc
icebp
pop
cld
xor
cltd
dec
mov
pushf
mov
sub
add
out
stos
pop
mov
push
fidivl
aam
in
pushf
xor
ret
xchg
int
jb
add
cltd
dec
fsubs
add
jg
shlb
jg
leave
sti
sbb
mov
pop
xchg
les
addr16
push
mov
mov
mov
pop
std
push
jp
mov
mov
jns
ret
pop
insl
mov
jnp
addr16
mov
sub
icebp
enter
push
mov
jo
lret
in
cli
xorps
ja
jne
sub
push
popa
mov
xacquire
clc
loopne
imul
jae
adc
sub
and
cli
inc
je
sahf
xlat
xchg
add
lods
mov
xchg
test
mov
pusha
or
enter
stos
divl
xchg
sub
aam
test
mov
nop
cmp
aaa
jge
ret
push
xor
arpl
mov
lcall
sub
pop
mov
je
out
jb
push
mov
mov
sub
mov
dec
cmpl
lods
cltd
aaa
add
cmp
lcall
lret
mov
loope
mov
fnstsw
push
inc
ret
adc
pop
mov
push
adc
and
pop
pop
sub
pop
dec
rcrb
push
addr16
mov
sub
and
mov
rolb
sar
roll
aaa
into
xor
sarl
fmuls
pop
stc
mov
sbb
mov
xlat
ds
out
mov
clc
dec
xchg
mov
ljmp
pop
xlat
mov
stc
mov
add
mov
popa
ret
jmp
cmp
and
pop
xchg
mov
loope
dec
insl
stc
mov
cmp
ret
aad
jle
cwtl
negb
jne
cmp
xlat
jmp
lcall
mov
mov
sub
cltd
sbb
adc
mov
mov
iret
or
mov
mov
mov
sub
inc
pop
cli
fnstcw
or
cwtl
bound
mov
and
fwait
sti
push
mov
jns
je
aas
pop
push
sbb
lock
in
gs
cmp
sbb
out
add
mov
out
mov
push
pop
scas
dec
pop
adc
clc
enter
sahf
sahf
mov
xor
and
adc
add
lods
or
iret
xchg
and
and
xchg
in
sahf
cltd
bound
mov
dec
xor
out
jo
mov
fidivs
ljmp
cmpsb
ret
jbe
mov
icebp
xor
and
imul
jecxz
rcrl
mov
lcall
xor
add
divl
mov
xor
add
sub
add
iret
sahf
ss
mov
stos
mov
adc
lds
dec
int
adc
jg
sub
ret
inc
push
xor
scas
inc
push
punpcklbw
imul
mov
push
aaa
pusha
outsb
add
xor
lahf
sub
push
mov
dec
jbe
lds
jp
test
push
jbe
mov
neg
adc
mov
pop
roll
mov
stc
jne
scas
clc
scas
mov
jge
lods
das
les
pop
push
adc
push
cltd
pop
ljmp
ja
ror
cmp
add
jge
ret
ja
scas
mov
xor
cltd
xchg
and
xchg
mov
mov
push
jg
out
mov
jecxz
aam
cwtl
jns
cltd
push
test
mov
aam
out
clc
sub
lret
dec
xchg
cmp
scas
jl
mov
lods
dec
test
cmp
std
dec
mov
pusha
inc
cli
xor
pop
test
inc
jno
jnp
mov
popf
stc
push
dec
fwait
outsl
orb
das
push
dec
fsubs
repnz
mov
xchg
mov
pop
push
adcb
mov
jge
cmp
jp
arpl
les
push
push
pop
cmp
pop
sub
xchg
jecxz
or
cwtl
xor
pop
lcall
add
and
sbb
mov
lea
or
lcall
lds
lock
or
mov
fiadds
das
insb
movb
test
pop
into
pop
cltd
push
cld
mov
jbe
cmc
adcb
cltd
pop
loop
and
sub
data16
sub
les
je
ret
insb
jg
mov
aaa
push
lods
mov
test
scas
xchg
subl
add
ja
insl
fs
out
mov
mov
pop
adc
sbbb
push
or
cltd
fs
rcll
into
test
dec
pop
add
jae
cmp
jg
jne
adcb
fcmovnb
xor
movb
xor
negb
jns
fmulp
dec
fcoml
nop
add
outsb
or
pusha
mov
outsl
jno
jns
jg
testl
cmp
dec
shrb
dec
outsl
mov
mov
int3
lahf
sbb
mov
mov
pop
mov
lods
xchg
add
icebp
cmp
scas
nop
sub
inc
fisttps
jecxz
imul
into
mov
jmp
xlat
jne
lods
sub
mov
mov
notl
lds
mov
fdivrp
push
pop
les
mov
stos
jge
out
es
cmp
or
xor
dec
lahf
jb
enter
rolb
into
mov
shll
fdivs
mov
push
mov
push
add
mov
push
pop
movsb
and
fcmovbe
xchg
xor
mov
ljmp
jmp
jp
sbbl
xchg
add
cmp
cld
mov
call
xchg
in
roll
jns
mov
mov
test
adcb
add
lcall
jecxz
sub
ljmp
movsb
jl
mov
data16
mov
add
aam
stos
stos
and
enter
mov
mov
pop
mov
in
mov
lcall
mov
sbb
push
fucomi
mov
pop
lcall
movsl
inc
std
repz
push
sahf
imul
aaa
popf
das
imul
scas
rcl
and
scas
xchg
or
ss
lret
andb
aaa
fs
pop
mov
and
ja
mov
fldl
jg
dec
xor
lods
inc
fimuls
sbb
out
mov
cmp
ja
mov
sbb
out
jmp
push
testl
loopne
ja
lcall
idivb
pushf
in
das
mov
mov
xor
nop
pop
dec
std
lea
aas
sarl
dec
mov
aam
add
imul
repnz
mov
stos
jns
sarb
movsb
sub
cmpsl
fmuls
xchg
jle
scas
or
dec
inc
rcrl
add
mov
push
stos
pop
jae
mov
jbe
cli
ficoms
addb
adc
leave
ds
pop
push
adc
add
adc
test
jbe
jb
sub
add
lcall
push
insb
add
fistps
mov
stos
rcrb
je
stc
lods
push
roll
cmpl
lds
cltd
and
stos
xchg
add
jno
add
xor
mov
dec
push
xchg
push
lods
xor
sbb
ds
sbbb
push
testl
dec
cmp
mov
out
mov
jle
mov
mov
and
cwtl
test
sbb
push
lcall
sbb
mov
cld
lods
sbb
icebp
push
mulb
das
lret
int
mov
xlat
mov
lcall
pop
sub
mov
cltd
pop
nop
insb
movsb
imul
aaa
sbb
clc
xchg
cmpsb
ret
or
addr16
add
jmp
daa
fidivs
sub
bound
pop
mov
dec
lock
pop
mov
sub
into
pop
inc
cmp
jns
jo
fcmovb
pop
lock
aaa
sbb
cltd
out
fiaddl
xor
pop
xor
cmpsb
fcmovb
lds
push
and
sahf
insb
lcall
rcl
std
add
lea
dec
bound
inc
out
mov
jg
push
fxch
push
xor
mov
ljmp
and
ret
lret
and
daa
pop
stos
sub
push
sub
push
sahf
mov
cmp
lock
sti
nop
mov
xor
rorb
or
divb
cltd
dec
pop
mov
lcall
adc
xchg
insb
mov
push
lahf
xor
mov
outsl
add
inc
mov
cs
std
mov
pop
mov
cmp
sahf
cltd
aaa
or
sub
popa
in
jmp
mov
je
mov
ljmp
mov
clc
aaa
cmp
sub
addb
push
add
test
jp
dec
jns
ss
js
test
mov
xor
push
mov
mov
pushf
jle
and
js
dec
ret
jns
iret
pusha
lock
idivl
out
clc
dec
mov
xor
jecxz
test
jge
xchg
arpl
cmp
sub
dec
mov
orl
mov
repnz
sub
dec
movb
movb
inc
mov
cmpsl
shll
fsubp
lcall
inc
bound
pop
pop
jne
dec
push
mov
add
push
jae
sbb
insb
lcall
popf
push
pusha
aas
xor
sarl
xchg
and
mov
out
add
mov
mov
sbb
lods
push
lods
cs
push
cltd
mov
fxch
fistl
aaa
sub
ljmp
sub
cltd
andl
int
jno
jecxz
iret
test
push
push
lock
xor
adc
das
lcall
inc
sbb
inc
lods
ds
lcall
push
test
cmp
cli
inc
test
out
pop
push
gs
xor
jo
icebp
cli
mov
es
xchg
divl
mov
mov
xchg
add
pop
push
dec
iret
push
jo
or
mov
dec
lods
push
daa
mov
jp
into
fidivrl
popf
aad
sub
iret
xchg
lods
mov
test
inc
inc
addr16
test
jle
xor
jae
ss
jecxz
out
pop
sbb
out
cmc
mulb
fnstcw
mov
push
xchg
push
push
movsl
das
add
jecxz
das
lods
mov
pop
jns
jbe
shrl
xor
xchg
push
mov
test
inc
cltd
pop
pusha
mov
cs
fistps
push
loop
mov
or
xor
xchg
pop
sub
mov
or
or
sbb
mov
daa
sarl
adc
mov
xchg
cmp
lea
mov
ret
pop
push
xor
dec
xor
adc
sub
add
imul
sbb
xchg
stc
jb
cmpb
inc
and
sbb
xor
mov
inc
or
jg
mov
or
adc
add
adc
fs
mov
mov
dec
roll
inc
lock
test
stos
insb
dec
xchg
and
xchg
and
dec
jbe
scas
in
fwait
in
xchg
rclb
out
es
lods
push
rcrb
xor
lahf
xchg
movsl
xor
xor
lea
pop
adc
ret
pop
int3
inc
push
adc
add
add
inc
jno
in
push
mov
xor
sti
popw
or
insb
lock
mov
push
jns
sti
mov
jbe,pt
sub
daa
popa
xchg
aas
stc
loope
fadds
shrb
dec
pusha
cs
mov
mov
shll
push
mov
imul
sbb
cltd
outsl
jno
jnp
ret
icebp
or
or
pushf
js
pushf
add
adc
imul
mov
test
out
aas
out
insb
cmp
pop
mov
popa
sub
lcall
jp
mov
loopne
or
cmp
aam
and
lret
lret
lds
and
sub
cli
fs
ret
sbbb
cmp
push
push
icebp
ret
ret
xchg
ret
xor
cmp
ret
mov
loopne
add
mov
les
imul
pop
bound
lea
orl
repz
pop
mov
ficomps
out
mov
rcr
nop
xor
inc
les
push
ljmp
cmc
sub
inc
or
dec
and
pop
cltd
mov
jns
in
inc
sub
jb
aam
sub
mov
mov
iret
push
lahf
dec
into
push
dec
std
cmp
jmp
jno
shrb
and
xor
jbe
sub
sub
cli
outsl
lods
and
sub
lret
imul
lret
sub
call
bound
xorb
mov
fidivs
add
jnp
jl
dec
mov
stos
and
fs
inc
orl
inc
lret
sbb
mov
xor
jecxz
fcmovnb
push
lret
mov
clc
out
mov
adc
enter
and
inc
cmpl
insb
xor
xchg
xor
scas
popf
mov
mov
imul
lret
es
add
push
mov
and
jae
repz
insl
xor
jb
imul
ror
data16
aam
xor
outsb
jne
cmp
and
mov
xor
mov
mov
pop
cmp
lods
and
insb
lds
jp
dec
adc
fistpl
adc
shrb
rclb
mov
mov
inc
xor
xor
push
scas
loope
cs
pop
push
loop
ret
jecxz
sbb
mov
int3
mov
insb
push
ret
push
cmc
lcall
test
mov
jmp
ret
jae
and
lcall
pop
rclb
ds
inc
jge
iret
ss
adcb
dec
sub
repnz
mov
fadd
out
sbb
fstl
xor
sub
mov
jp
sub
movsl
cmp
ljmp
and
cmp
sub
jle
jl
xor
push
or
lcall
and
cmp
cmp
enter
push
outsl
das
ret
dec
xor
sbb
sub
orl
inc
push
out
movsl
sub
aad
jnp
sbb
in
pop
and
jns
mov
jge
xchg
cltd
loopne
sub
cmp
or
popa
loop
xor
lcall
test
push
psllq
ficomps
pop
fsubr
pop
scas
pop
out
lret
popa
mov
add
dec
filds
adc
popf
ss
clc
out
mov
das
hlt
pushf
dec
int3
push
test
xchg
xchg
mov
mov
mov
sbb
insl
mov
mov
fs
fisubrs
xchg
mov
test
fstl
add
sub
outsb
or
mov
in
mov
das
cli
sbb
mov
jmp
inc
out
xlat
int3
mov
lcall
ret
in
loop
lods
nopl
pop
pop
pop
outsl
popf
nop
ljmp
jb
add
insb
test
mov
adc
sbb
cltd
and
lahf
daa
pop
in
jge
mov
xchg
icebp
stos
jno
rclb
xlat
repz
or
insl
cmp
sarb
ret
mov
cs
push
popa
fdivl
pop
sbb
rcr
cmp
aas
cmc
mov
pop
lods
lret
popf
mov
dec
dec
pop
into
shr
sbbl
lds
imul
adc
mov
lcall
icebp
inc
mov
cmc
lods
mov
push
push
push
and
sbb
ret
adc
ret
int
xor
inc
lea
pop
or
ret
inc
sub
adc
mov
xor
insb
lcall
popa
fdivrs
test
lock
int
sub
push
push
push
sbb
std
ja
lea
sub
arpl
shlb
xor
cld
es
sbb
or
adc
jl
addb
jecxz
mov
or
fwait
mov
jle
in
mov
movb
cmp
and
push
push
lods
jo
jl
xor
push
sbb
push
repz
fnstenv
mov
aad
imul
shlb
jo
cmpsb
dec
mov
and
sahf
and
jb
sbb
xor
sbb
dec
lea
lds
das
pop
dec
jae
push
add
push
jne
mov
jae
sarl
aaa
xorl
jnp
stos
jae
outsb
sub
in
arpl
lock
repz
mov
mov
in
adc
das
inc
aam
add
add
out
push
inc
pop
xor
fimull
inc
mov
das
into
popa
add
or
outsl
sti
aam
dec
jae
jno
push
xor
roll
mov
push
stc
push
cld
push
pusha
xchg
and
popa
call
mov
cmp
idivl
xorb
jo
andb
ljmp
dec
xchg
or
nop
scas
inc
dec
stos
repz
xchg
in
popa
and
cs
jl
push
inc
dec
lcall
int
sahf
sub
repnz
shrl
aam
jnp
ja
jmp
push
push
test
pop
or
fwait
xchg
icebp
xchg
pushf
and
add
pop
repnz
mov
pop
add
sbb
push
sbb
pop
imul
xor
or
push
notl
mov
shr
inc
jl
xor
dec
ljmp
mov
outsb
imul
arpl
and
adc
jp
leave
popa
stos
ja
push
inc
je
movsb
or
jl
sub
stos
mov
test
push
push
pop
cmc
negl
loopne
repnz
ret
mov
jp
out
rcl
jo
in
ret
mov
jo
lcall
fidivrl
mov
sub
inc
sahf
ljmp
jnp
frstor
inc
and
and
mov
lcall
push
jae
js
ja
jns
mov
lea
lods
push
out
push
jmp
aam
scas
push
aad
add
push
mov
cwtl
add
jns
xchg
outsl
sti
sbb
icebp
test
fld
xor
pop
les
jge
xchg
jmp
stos
dec
push
xchg
jnp
lock
ljmp
jb
jmp
push
push
pop
ret
repz
xor
gs
pop
inc
jle
sub
pop
ficompl
ret
scas
mov
cmp
lock
sub
divl
imul
or
loopne
loope
jnp
pop
mov
sub
cmp
lret
lods
cmp
jmp
outsl
push
rclb
cltd
divl
push
nop
push
popf
mov
xchg
ret
push
test
and
mov
cmp
and
pusha
pop
cltd
popa
sub
pop
pushf
mov
shr
cs
mov
mov
cltd
fnstsw
push
inc
ss
lea
jle
jp
lock
xchg
fwait
inc
jno
stos
sub
mov
das
jmp
outsl
cwtl
xchg
loop
pop
aaa
lods
lds
icebp
lea
test
inc
mov
ficoml
pop
pop
fs
sub
loopne
stos
xchg
mov
clc
lret
push
inc
pop
jle
fdiv
insb
sub
mov
pop
jg
xor
fcmovbe
pop
lcall
rol
aad
xor
repz
loopne
call
scas
inc
mov
xor
cltd
aaa
movsl
cmp
ret
jle
and
mov
xor
pop
movsb
in
addr16
fcompl
cmp
cmp
mov
xchg
cwtl
or
icebp
icebp
adc
mov
inc
stos
jg
mov
and
fadd
lea
push
pop
scas
mov
data16
xchg
cmc
and
jp
mov
mov
jecxz
insl
imul
shl
aad
test
jo
adc
cli
inc
mov
or
jle
testl
lods
sbb
cltd
push
cmc
push
and
cmp
mov
in
jmp
jge
jae
aas
mov
test
repz
mov
int3
mov
or
cmpsb
push
mov
rolb
pop
mov
notl
sbb
sbbl
pop
mov
rcll
mov
pop
mov
jae
test
roll
cli
aam
xchg
adc
test
mov
inc
lcall
add
test
mov
pop
test
xlat
shl
or
sarl
mov
cltd
mov
cli
repz
repz
jmp
push
fists
nop
shlb
lea
jns
lods
ljmp
cmp
mov
popa
test
imul
jge
mov
mov
sbb
sub
add
jb
sub
lcall
dec
jae
rolb
push
push
and
jns
mov
xor
rcrb
in
je
xlat
mov
mov
mov
out
sarb
or
in
cmpsb
mov
pop
push
xchg
call
jb
sbb
movsl
add
stc
dec
jmp
push
add
sbb
and
mov
in
mov
mov
loop
jge
xor
mov
mov
mov
cli
dec
xchg
sbb
and
in
daa
std
push
pop
or
sub
jb
hlt
movsb
popa
mov
popf
fnsave
adc
lahf
aam
mov
sbb
out
cmc
scas
sbb
movsl
in
jo
std
and
out
int
jbe
mov
es
enter
rcrb
out
je
outsl
insb
push
in
add
jmp
pop
or
sbb
push
dec
mov
in
adc
sbb
mov
jg
std
clc
adcb
xchg
mov
mov
pushl
sub
sub
sbb
cmp
ret
adc
jno
cltd
inc
ljmp
lds
pop
mov
cmpsl
xor
sub
lcall
add
mov
mov
jle
sub
lcall
popf
or
jns
mov
xor
xchg
push
sbb
ljmp
icebp
inc
shll
xorb
fnstenv
lods
lcall
sub
and
test
cmpsb
lods
int3
push
ja
cltd
andl
xor
addr16
lret
xor
aaa
nop
fldenv
hlt
cli
iret
cmc
xor
stc
jmp
pop
cli
movsl
in
lock
xchg
imul
jno
js
jmp
inc
dec
xchg
cwtl
mov
loop
call
fidivrl
bound
jge
test
cmp
jge
mov
mov
mov
lcall
cld
in
bound
or
jp
into
shlb
rcl
push
loop
mov
or
test
data16
ret
jge
mov
mov
mov
cs
push
pop
lea
adc
sbb
stc
sahf
push
add
push
jb
ja
in
jb
lcall
cmp
ss
int3
pop
xchg
cs
sub
mov
loope
leave
shlb
add
adc
sbb
inc
pop
add
jmp
filds
sub
xor
lea
jp
cmp
mov
add
dec
push
ljmp
in
sub
popf
mov
test
jl
leave
stc
or
es
jns
xchg
push
xchg
cli
loopne
adcb
lret
in
mov
mov
add
imul
adcl
cli
fwait
les
cwtl
mov
push
pop
in
ja
int3
sub
fidivrs
clc
push
fnstcw
jo
mov
cwtl
pop
jg
inc
int3
mov
xchg
and
mov
jnp
lea
mov
mov
cltd
jno
rorl
aas
mov
fwait
jl
ds
inc
mov
lcall
mov
xchg
jne
sbbb
ds
mov
orl
aas
push
push
adcl
in
add
fsubrl
neg
jb
mov
xor
xchg
xchg
scas
mov
xchg
lock
push
pop
jmp
cmp
inc
cli
out
xor
test
rcrb
sub
pop
aad
pushf
sub
add
and
fwait
imul
cld
lret
bound
scas
addb
mov
jbe
xchg
pop
mov
inc
daa
divb
movsl
add
mov
jnp
cmpsb
sti
rcrl
popf
sub
sub
sbb
xor
lods
jbe
out
inc
addl
cmp
push
and
adc
das
ds
aam
in
ret
daa
into
cmp
mov
dec
jo
push
jns
mov
insl
mov
arpl
dec
insb
sub
ja
jnp
adc
aaa
push
std
rol
stc
fistl
xor
lahf
mov
jge
sbb
push
insl
inc
inc
pop
aas
dec
sbb
stc
gs
nop
xchg
add
cltd
xor
jns
mov
and
pop
aas
lea
and
sub
dec
sub
or
mov
jo
mov
aas
fwait
lcall
push
sti
adc
ljmp
mov
inc
aaa
mov
xor
mov
pop
mov
push
mov
mov
ret
xchg
cmp
mov
sahf
mov
fisubrl
or
decl
pop
sub
stos
push
and
push
int
push
mov
bnd
inc
ss
add
insb
inc
mov
pop
cltd
push
or
in
pushf
sbb
lahf
add
sbb
ret
jp
loope
cltd
sub
dec
lcall
jbe
sbb
pop
adc
mov
lock
fldenv
push
xor
jns
jbe
mov
insb
sti
pop
ret
fnstcw
pop
stos
std
push
les
dec
mov
jle
inc
pop
subb
lock
or
movsl
lret
test
xor
xchg
sub
and
sub
dec
pop
shlb
pop
movsb
mov
es
dec
ret
jg
aad
stos
or
lcall
adc
xchg
add
mov
cltd
in
lret
adc
cmp
push
loop
ret
pop
inc
and
lret
sub
cmp
mov
and
mov
orl
inc
lcall
fisttpll
sbb
ss
mov
ret
cs
cli
je
lret
jmp
stos
mov
sbb
lahf
jnp
insb
mov
mov
out
test
sbbl
negb
dec
push
adc
icebp
aaa
aad
test
add
test
fiaddl
jmp
sub
cmp
scas
mov
xchg
leave
adc
bound
xchg
out
and
mov
cltd
int
mov
pop
dec
rolb
mov
insb
clc
ja
in
fsubs
lcall
xlat
jle
test
ds
daa
test
fistpl
pop
cli
fwait
ss
in
rcrb
imull
sbbb
and
roll
lods
pop
movups
inc
dec
xchg
int
test
xor
mov
lret
inc
ds
mov
push
add
xchg
jl
pop
jb
sbb
imul
in
inc
pop
inc
stc
mov
xlat
popf
xor
mov
loop
mov
xor
repnz
ret
divl
adc
jo
cmp
push
and
scas
out
xor
movsl
int
push
ficomps
lods
add
jge
inc
sti
cli
imul
lods
loopne
andb
aam
lea
xchg
stos
sbb
mov
mov
push
mov
push
imul
xchg
push
push
cs
fadd
jle
cltd
mov
mov
dec
pop
rcrl
sbb
jl
dec
mov
insl
jae
addb
das
cli
lahf
cmc
out
xchg
stos
hlt
push
daa
add
adc
xor
mov
and
cwtl
mov
mov
into
pop
ja
mov
lea
rcrb
cmp
pop
movsb
fcmove
or
sti
add
cltd
lods
arpl
repnz
std
xchg
sar
xor
loop
sbb
out
out
fnstenv
sub
test
int3
out
pop
pop
lea
shlb
jns
test
and
xchg
xor
mov
cs
lock
mov
lret
cmp
sub
popf
cmp
pop
add
and
push
xlat
lahf
cmpsb
fcmovb
stos
cltd
xor
cmp
mov
cmp
jne
fsubrp
ja
and
pop
inc
shl
fs
addr16
pop
jns
mov
mov
sub
les
xor
and
ror
pop
mov
sbb
bound
xchg
js
xor
data16
scas
pop
inc
mov
gs
inc
lods
inc
aaa
lcall
outsb
js
mov
in
das
mov
shll
mov
push
frstor
movl
cs
sub
xchg
iret
jo
fldenv
adc
inc
pop
push
aad
xchg
aas
scas
imul
sti
aad
pop
insb
mov
les
pop
xor
mov
mov
mov
out
jb
lds
inc
stc
lods
and
sbb
and
push
icebp
xchg
mov
in
cmc
jmp
lret
mov
mov
pop
cld
test
cmpsl
push
popf
add
and
xor
std
ret
sub
jo
dec
xor
inc
ss
jmp
adc
pusha
fs
pop
xor
inc
aas
pop
push
ret
in
in
pushf
shl
insl
xor
cltd
jmp
dec
push
cld
pusha
test
in
mov
push
loope
test
cmp
jo
loop
mov
out
popf
movsl
dec
repnz
pop
stc
mov
pop
ucomiss
in
rolb
in
and
rolb
std
xchg
dec
movsl
cli
les
insb
mov
bound
das
lret
adc
cmpsb
mov
mov
jmp
and
and
test
cmp
push
inc
out
xor
mov
mov
cwtl
pop
repz
or
sbb
add
xor
mov
ljmp
cmpsl
mov
pushf
jl
or
mov
xchg
outsl
ficoms
rcr
les
mov
movsl
dec
int
lods
ret
jp
mov
jge
mov
andl
jle
ljmp
sub
jns
mov
jo
xlat
jge
mov
pusha
popa
pop
cltd
push
hlt
or
in
popa
sub
mov
sahf
in
pop
jne
add
or
push
fistpll
pushf
mov
mov
icebp
cltd
or
sbb
ss
jo,pn
xchg
enter
xor
dec
lock
mov
jns
inc
jnp
inc
clc
das
push
sub
out
push
xor
pushf
adc
mov
xchg
mov
or
mov
xchg
mov
dec
pop
or
testb
fs
sti
and
ja
mov
add
adc
shlb
jmp
mul
jne
push
cmp
xchg
test
lahf
jp
sub
out
test
in
mov
cld
fisubs
xchg
inc
xchg
xchg
pop
clc
mov
repz
in
fstpl
xchg
jge
mov
xchg
lret
inc
movsb
xor
leave
xor
in
rol
nop
sub
scas
das
loopne
jg
enter
sarb
mov
call
jns
xlat
lods
sbbl
insl
jle
test
push
in
and
inc
adc
jp
mov
int
sti
jns
or
repnz
outsl
add
stc
fstpl
mov
aaa
in
mov
data16
es
dec
loopne
ja
xchg
mov
lock
mov
test
mov
fwait
jbe
rolb
xor
xchg
mov
decb
filds
xor
fsts
or
lock
imul
outsl
leave
ret
dec
aaa
fildl
add
fidivl
sahf
rcll
inc
sbb
nop
mov
ljmp
sahf
pop
repnz
mov
or
shr
push
jnp
outsl
test
lret
sahf
cmp
data16
lret
mov
negb
push
lcall
rcrb
mov
inc
test
pop
sub
sbb
mov
sti
add
lret
and
mov
cmpsb
test
loopne
push
mov
sti
cs
int
jl
jg
xor
and
lcall
and
sti
jno
loop
jmp
push
push
mov
out
insl
das
leave
sub
xchg
or
rolb
mov
testl
call
lgs
sbb
mov
push
imul
push
sub
std
aas
dec
jecxz
sub
bound
jle
lea
dec
test
xchg
jae
mov
test
and
jg
imul
lea
pop
stos
sub
xchg
ja
inc
stos
arpl
dec
in
repz
jmp
notb
and
xchg
push
sub
stc
mov
sbb
xchg
bound
push
bound
call
xchg
pop
mov
ja
or
or
add
and
xchg
movsb
push
cltd
imul
cld
fiadds
mov
orb
xor
fnstsw
xchg
mov
mov
xchg
aam
sub
pop
movb
sbb
cmp
pop
xchg
xor
repz
lea
aad
loope
lcall
sub
cltd
sti
or
ret
bnd
push
sbb
inc
inc
lods
push
lds
or
iret
jne
sbb
sub
push
sbb
fwait
push
cmc
inc
loope,pn
cmpsb
dec
pop
push
jae
pop
cs
adc
sti
push
ficoms
mov
movsb
shll
test
in
inc
les
jbe
test
push
mov
outsb
mov
stos
jns
push
in
jne
and
xlat
mov
mov
jl
stos
jnp
or
adcl
mov
jg
fisttpl
mov
push
sahf
rcrl
aad
andl
lcall
cmp
test
mov
or
add
dec
sub
xlat
adc
push
jge
sub
cmp
cmp
jle
das
lcall
mov
out
les
sbb
int3
daa
nop
repz
xchg
cltd
push
mov
xor
lcall
jb
mov
jp
repz
lea
sub
popf
inc
aad
mov
inc
sbb
push
dec
fisubl
lcall
bound
arpl
push
gs
lds
mov
push
sbb
rcl
cmp
stos
push
adcl
stos
mov
decb
push
or
ret
inc
push
and
xchg
xor
repz
addr16
or
or
pop
mov
push
inc
pop
std
clc
or
cmpsl
mov
hlt
ja
xchg
mov
fwait
mov
mov
vpshuflw
rcrb
dec
outsl
loop
addw
push
jmp
icebp
dec
iret
xchg
enter
pop
mov
mov
mov
scas
mov
xor
fisubrl
cltd
addr16
xor
fists
mov
sub
cmp
xchg
add
fwait
cmp
orb
out
insb
out
ja
push
ja
out
cmp
mov
dec
andb
mov
movsb
sub
bound
jnp
int3
or
or
sarl
sub
jnp
aaa
loop
sbb
dec
stos
xor
cli
sar
and
xchg
dec
jae
outsb
out
xchg
jmp
dec
xlat
push
mov
xchg
fisubl
pop
and
jge
lcall
scas
sub
add
xor
scas
push
pop
mov
and
pop
ret
movsb
mov
sahf
mov
mov
or
in
sbb
push
mul
cmp
hlt
jmp
adc
in
cwtl
jno
cld
cmp
inc
xor
sub
mov
test
shll
stos
movsl
and
pop
pop
pop
sub
shlb
pop
push
or
insb
lods
or
in
cltd
pop
addr16
or
sub
in
movsl
or
stc
push
sub
daa
es
popf
jne
cltd
add
push
dec
or
enter
mov
addr16
push
push
inc
ja
aad
inc
lods
out
movsb
cmp
ret
and
int3
mov
cmpb
cltd
push
fdivr
mov
sub
in
or
lods
cli
gs
into
pop
cmpb
lock
in
or
daa
mov
into
pop
dec
xchg
mov
ficompl
inc
sub
cmp
imul
idivl
mov
cmpsb
cltd
lcall
mov
ja
pop
sub
cmp
push
scas
or
sub
jg
add
mov
xchg
mov
cmc
mov
addb
rcr
mov
js
sbb
xchg
dec
popf
jle
into
lods
jle
jo
adc
pop
mov
fsubs
sub
bound
mov
fucom
ljmp
sbb
lods
lock
out
mov
icebp
add
mov
xchg
jge
sahf
imul
cltd
push
mov
stc
xlat
mov
lods
lock
test
roll
fdivp
in
xchg
jns
lahf
mov
int
adc
and
bound
in
loopne
cltd
mov
and
mov
cmp
scas
sbb
out
push
out
aam
mov
loop
adc
jbe
stos
iret
adc
inc
iret
and
inc
sub
mov
or
mov
jns
pop
xor
in
ljmp
cmpsb
insb
shrb
in
mov
test
shl
rclb
es
sbb
dec
and
pop
in
and
push
std
add
or
movsl
jae
sbb
pop
push
sahf
cmp
mov
pop
stc
stos
rclb
mov
and
jp
test
sbb
iret
dec
jo
cmp
iret
jno
fsubrl
mov
loopne
and
xor
test
test
out
mov
ret
push
lods
cmp
cmc
dec
fdiv
pop
jo
aaa
popf
or
loope
insb
shlb
lret
addl
add
call
lea
jne
push
jmp
add
dec
gs
popa
addr16
outsl
js
add
fs
jbe
push
pushf
mov
lea
jmp
mov
pushl
pushf
pushl
ret
pushf
jmp
test
xchg
pop
call
sbb
call
and
insb
pop
adc
aam
mov
cmc
pop
cmp
pop
sahf
inc
into
jl
adc
fimuls
cmp
lods
aas
mov
xchg
fldt
lret
adcl
out
mov
dec
push
pop
xor
push
push
xchg
mov
inc
aaa
sub
iret
cmp
push
gs
or
push
xchg
fnstcw
xchg
add
dec
fisttps
test
lahf
pushf
pushf
les
jns
mov
and
mov
pop
fisttpl
lret
inc
adc
daa
xchg
adc
mov
dec
add
test
inc
fsubrs
mov
inc
cmp
jno
pop
pop
pop
test
and
adc
sbb
mov
je
pushf
cmp
mov
jp
pop
in
rcrb
mov
sahf
outsl
pop
xor
jmp
jnp
outsl
pop
iret
aas
repz
dec
sbb
push
aad
dec
in
mov
mov
push
jae
in
shll
mov
xchg
popa
je
adc
push
mov
or
push
xor
xchg
in
js
aaa
add
loopne
pop
push
pop
mov
sbb
mov
sbb
loope
push
imul
pop
fnsave
mov
icebp
lds
add
xor
pop
jns
test
shll
add
and
adc
aas
dec
daa
and
add
repz
or
mov
add
test
inc
test
dec
and
aas
mov
sbb
jmp
fisttps
rcrb
fisubrl
loop
push
lea
insb
inc
fs
push
test
popf
mov
cs
push
ret
int
jecxz
movsb
stos
add
scas
mov
cwtl
cs
sahf
pop
ret
test
jo
adc
fdivrl
lods
pop
adc
xlat
clc
jmp
movb
jmp
movl
pusha
push
mov
lea
jmp
lea
mov
call
int
xor
js
lret
stos
or
pop
jb
pushf
dec
loope
sub
sub
jle
sbb
sarb
mov
xchg
add
gs
repz
jae
repnz
gs
add
fsts
arpl
mov
jns
sub
lahf
or
xchg
scas
lods
data16
lcall
push
jne
jp
xor
lahf
inc
pop
roll
aas
add
jno
mov
pop
mov
add
or
test
inc
xchg
push
mov
xlat
xchg
and
arpl
sti
outsl
in
fdivrl
xchg
push
in
notl
ds
push
jae
in
faddl
incl
stos
adc
loop
cld
lods
pop
mov
add
daa
mov
or
ror
stos
sub
adc
sub
xchg
dec
loope
jno
mov
rorb
fcmovbe
sahf
cs
xor
push
xchg
mov
sub
add
fs
jae
shr
movsbw
rcr
mov
shr
mov
cmp
mov
pusha
mov
sub
push
pusha
repnz
pushf
lea
jne
btc
btr
shl
mov
cmc
sub
dec
dec
rcl
shld
mov
pusha
clc
cmc
pusha
sub
mov
stc
pushl
popl
cmp
cmp
pushf
jmp
push
push
inc
push
xor
cs
insb
add
scas
jno
push
lea
jmp
pusha
call
mov
xor
inc
in
int3
movsb
dec
shrb
je
loop
call
lds
xchg
repnz
repnz
cmc
cmp
sarl
arpl
mov
pop
fstps
pop
fiadds
mov
in
cmc
popa
scas
sub
mov
mov
jo
aam
xchg
testl
out
sahf
test
in
pop
pop
or
cmpl
pusha
sub
insb
into
push
and
sahf
sub
xor
jl
decl
xchg
inc
je
and
cmpsl
pop
iret
cmpsl
adc
divl
xchg
dec
stc
fbld
mov
mov
loop
jae
movsl
loopne
rcll
test
adc
jl
and
push
fidivrl
mov
rorb
mov
inc
lret
ss
push
mov
je
call
pushf
arpl
add
add
add
add
inc
or
add
jecxz
sub
add
add
pop
les
add
add
add
add
add
add
add
sub
add
add
imul
add
add
adc
add
add
add
adc
add
or
add
push
push
sub
add
add
sub
add
add
add
xor
add
add
daa
les
add
ljmp
pusha
sub
int
sub
add
add
add
add
fsubp
in
call
sbb
incl
cs
xchg
mov
lods
push
sub
sbb
cmp
sub
mov
fmuls
jecxz
pop
xor
into
test
jb
mov
mov
jmp
jns
arpl
or
xchg
adc
jmp
inc
jns
in
insl
std
xchg
sub
sbbl
inc
je
sahf
jle
mov
mov
cld
add
sbb
sbb
in
sbb
xchg
adc
push
movl
movb
pushf
lea
jmp
mov
jg
inc
xchg
repz
loope
in
leave
sbb
mov
or
xchg
push
data16
xor
jmp
negb
adc
loopne
xlat
fs
xchg
pop
xor
rorl
jl
cmp
imul
adc
fmul
rolb
loopne
sbb
jbe
ret
addl
les
dec
mov
sbb
push
loop
mov
test
or
mov
push
cwtl
push
jle
daa
push
faddp
inc
rcrb
mov
mov
loopne
clc
cmp
mov
push
push
jne
inc
xchg
std
xlat
dec
inc
mov
addr16
outsl
adc
inc
ret
out
aam
xchg
xor
insl
adc
and
ss
jne
fwait
sub
std
mov
filds
in
push
dec
in
push
fucomp
pop
adc
cmp
jne
mov
or
fdivrl
pop
adc
out
clc
xchg
test
mov
mov
dec
inc
pop
and
scas
into
pop
push
inc
das
std
dec
add
push
sbb
push
push
loop
pop
call
mov
sbb
enter
les
imulb
test
clc
mov
int
cmpsl
jae
pop
scas
adc
cwtl
dec
lea
jbe
bsf
shr
bts
mov
call
arpl
fs
xor
cs
insb
add
cmpsb
mov
mov
mov
push
inc
push
test
neg
cmp
stc
clc
mov
push
clc
clc
add
jmp
push
fs
xchg
push
aam
inc
mov
mov
lret
push
aaa
gs
inc
aam
xchg
loope
movsl
inc
sbb
cltd
popa
fisttpll
fstps
mov
inc
sub
pop
cmp
cmp
or
mov
pop
dec
mov
push
jle
mov
adc
and
cmp
outsl
pusha
ret
scas
push
push
daa
adc
scas
mov
push
fwait
xor
pop
jle
fcomi
lods
xor
inc
xchg
push
push
dec
dec
cs
test
aam
mov
xchg
add
cmp
adc
clc
les
adc
testl
insl
inc
xchg
xchg
cmc
mov
sahf
fcompl
out
fwait
sbb
xchg
pop
outsl
icebp
sbb
je
les
dec
mov
push
repz
sbb
lock
out
mov
imul
jnp
add
mov
daa
stc
dec
aam
xlat
mov
sub
fists
mov
and
call
int3
mov
or
pop
add
adc
inc
int3
mov
movsb
xchg
xlat
jmp
pop
sbb
sbb
mov
mov
inc
sub
popf
sub
jle
scas
clc
inc
sub
jns
push
loop
filds
add
test
adc
xor
sarb
test
sahf
add
mov
loopne
sub
scas
adc
sbb
out
mov
adc
pusha
aas
adc
mov
push
xchg
dec
enter
insb
out
jns
jle
add
inc
repz
xor
mov
sbb
nop
sbb
test
jl
and
xor
mov
test
mov
lret
dec
jge
push
or
aad
cld
and
jae
jge
cmp
fidivrs
ret
test
cmp
mov
test
ss
xor
fwait
sbb
stos
adc
out
xor
xor
sti
pop
stos
fwait
shll
enter
or
rorl
jno
stc
arpl
cmpsl
dec
out
repnz
inc
dec
in
fwait
jno
out
cmp
inc
xchg
cmp
test
int3
sub
scas
test
in
ret
sbb
xchg
or
aas
stc
mov
aas
das
cltd
pusha
mov
push
orb
xor
pop
sbb
sub
jnp
cmpsl
or
push
cmpsl
xchg
jo
daa
xchg
sbb
push
hlt
out
cltd
call
mov
outsl
and
fnstcw
dec
shl
sbb
mov
add
pop
fistps
sbb
add
and
nop
sbb
and
dec
cmc
mov
rorb
rcl
js
jge
lea
lcall
sub
xorb
out
out
lret
cmp
rolb
dec
pop
inc
mov
mov
mov
mov
insb
sbb
mov
push
and
lock
jae
pusha
pusha
lea
jmp
mov
xchg
jae
adcl
imul
adc
fbstp
xor
fdivl
cmpsl
adcb
mov
mov
or
fwait
mov
loop
lea
movsl
and
stos
xor
and
imul
mov
test
sahf
mov
inc
insl
push
arpl
push
adc
sarb
push
fs
rclb
mov
xor
out
fsubrs
inc
xchg
lcall
and
loopne
xor
xchg
inc
add
mov
jge
or
or
pushf
cs
mov
mov
push
jae
cmpsl
sarb
leave
inc
push
loope
pop
in
fsubrl
cld
sub
pop
loope
sarl
adc
mov
sub
cld
jae
add
jmp
pop
mov
or
aas
pop
cmp
addb
xchg
dec
iret
xchg
xchg
jnp
mov
jae
fwait
lods
cs
or
push
xchg
sub
pop
imul
jg
nop
pop
out
leave
dec
int
sahf
nop
repnz
in
icebp
mov
adc
lret
imul
in
xlat
inc
sub
sbb
add
xor
push
add
repz
mov
jno
cltd
pop
das
adc
xchg
mov
fwait
inc
jg
cmpsl
and
pop
sub
fistpll
mov
inc
jo
jge
insb
and
addr16
lret
jnp
imul
in
es
mov
int
fs
xchg
roll
xor
mov
ljmp
jo
jge
mov
cs
or
lret
xchg
push
cld
sub
push
jae
inc
xchg
arpl
push
cmp
mov
mov
dec
ljmp
outsl
std
jge
loop
pusha
cmp
inc
adc
mov
add
test
das
jecxz
lods
insl
cmp
sub
add
les
lock
lods
or
aaa
xsaves
std
arpl
sarb
sti
je
add
cmp
ds
inc
ret
int3
repnz
mov
rcll
xor
inc
push
push
cltd
jg
inc
or
test
lods
mov
mov
ss
ljmp
push
insb
xchg
nop
insb
xchg
jnp
test
ret
insl
sti
dec
inc
lea
iret
inc
cld
mov
pushf
popl
call
mov
pushf
call
movw
call
push
pusha
mov
jmp
call
stc
cmc
sub
jmp
movw
mov
pushf
mov
pushf
lea
jmp
mov
mov
pushl
pushf
mov
pusha
lea
jmp
pushf
bt
sub
test
cmc
jmp
std
pushl
popf
pushf
push
lea
jmp
pushf
pushf
push
push
mov
pushf
pushf
lea
jmp
pushf
mov
pushl
lea
jmp
mov
movw
not
pushf
popl
push
jmp
pushf
pushf
mov
movb
movb
jmp
movsbl
mov
call
jmp
push
call
push
mov
pushf
push
lea
jmp
mov
jmp
daa
bts
mov
sub
push
not
mov
jmp
mov
pushl
mov
jmp
jmp
pushl
popf
mov
pushl
ret
jmp
mov
jmp
lea
jl
push
mov
push
mov
mov
jmp
pushl
popl
pusha
lea
jmp
neg
shrd
dec
cmc
mov
call
jmp
jmp
test
xchg
shl
mov
stc
or
shld
add
pushf
bts
ror
add
movsbw
call
bts
or
movzbw
mov
push
shr
bsr
mov
bt
clc
test
cmp
sub
mov
pushf
cmc
mul
movb
call
pushf
inc
test
bt
cmc
pushl
add
cmc
cmc
sub
movb
pushf
mov
movb
mov
mov
pushf
lea
jmp
pushf
pushf
movzbw
bswap
mov
movb
jmp
repz
pushf
call
xor
jmp
div
pushf
mov
jmp
movzbw
das
mov
rcl
dec
mov
call
mov
pushl
mov
pushf
pushf
call
push
mov
pushf
jmp
mov
mov
jmp
movw
pushf
mov
pushl
pushf
popl
push
push
pushl
popl
movb
pushf
mov
movw
lea
jmp
mov
mov
push
jmp
pushl
popl
pushl
lea
jmp
push
bsr
aas
mov
call
bts
mov
call
rcl
shld
push
shl
mov
push
call
or
and
mov
pusha
call
sub
push
mov
stc
add
pushl
pushf
mov
lea
jmp
call
mov
call
mov
call
pushl
mov
jmp
mov
pusha
jmp
call
push
pushf
popl
call
inc
btc
aas
bsf
notl
clc
mov
jmp
push
shr
bt
mov
clc
clc
add
jmp
inc
movw
push
movw
mov
pushf
lea
jmp
cmc
mov
cmp
mov
cmc
test
add
push
pusha
jmp
pushl
or
bt
bt
movb
jmp
bsf
bts
mov
clc
call
push
mov
push
pushl
pushf
lea
jmp
movb
jmp
push
pusha
mov
pushf
mov
mov
pushl
lea
jmp
sub
push
jmp
mov
pushf
push
pushf
lea
jmp
rcl
mov
shld
bsf
shl
mov
bt
call
sbb
mov
dec
pushf
rcl
or
mov
clc
jmp
pusha
call
pushf
call
repz
popl
movb
jmp
call
add
bt
pushf
sub
jmp
pushf
jmp
movb
pushf
mov
movw
mov
push
pushf
push
mov
lea
jmp
and
adc
shld
mov
btr
mov
and
movzbw
mov
test
add
call
pusha
pushf
not
pushl
jmp
call
mov
stc
pusha
jmp
mov
movw
movb
pushl
lea
jmp
jmp
movw
pusha
push
mov
mov
mov
push
push
movb
lea
jmp
mov
mov
push
lea
jb
mov
pusha
call
bswap
rol
shrd
rol
lea
call
pushf
mov
call
push
mov
pushf
push
lea
jmp
stc
shl
call
jmp
add
movsbw
mov
cmp
call
pusha
mov
mov
push
movb
jmp
or
mov
pusha
rcr
or
add
pusha
mov
mov
pushf
mov
movb
push
lea
jmp
bsf
mov
and
mov
mov
call
mov
pusha
jmp
push
not
call
btc
stc
movzbl
rcr
sub
bsr
not
or
not
rcl
bt
add
inc
push
pusha
inc
movzbw
movzbw
ror
bswap
rol
shrd
sub
pusha
btc
mov
movb
clc
cmp
add
jmp
pop
movsbl
movzbw
push
jmp
cmc
test
cwtl
jmp
call
mov
mov
jmp
pushf
not
cmp
and
jmp
jmp
pusha
mov
pushf
mov
push
lea
jmp
push
jmp
call
lea
jne
call
pusha
clc
aam
jmp
daa
add
sete
mov
movsbw
mov
pusha
not
jmp
pusha
mov
mov
jmp
cmp
test
add
pusha
pushf
pushf
push
lea
jmp
rcl
sub
sar
call
mov
pushf
movb
push
movl
mov
jmp
shld
bts
mov
bswap
mov
cmp
bt
pusha
add
push
call
pushf
popl
lea
jl
popl
pushf
lea
jmp
mov
push
lea
jmp
bts
sub
bswap
jmp
movb
mov
call
jmp
pushf
popl
pushl
call
pushf
mov
call
pusha
mov
movb
mov
pushf
pushf
jmp
jmp
pushl
mov
call
bt
movw
call
jmp
pushl
pusha
mov
pushf
pushf
jmp
push
cmp
sub
push
stc
cmc
bt
add
jmp
clc
pushf
add
pushf
sub
stc
bt
clc
mov
pushf
cmc
clc
jmp
pushf
popl
pusha
pushl
popl
mov
mov
lea
jmp
sbb
mov
cmp
push
stc
sub
call
lea
lea
mov
call
mov
sub
bt
stc
test
pushf
add
mov
pushf
popl
pushf
call
call
call
push
movw
pushf
popl
lea
jne
pushf
pusha
pushl
pushl
popl
push
pushl
mov
lea
jmp
test
pusha
clc
shr
call
pushf
pusha
pushf
mov
pushf
pushl
mov
lea
jmp
stc
mov
rcl
bt
cmc
add
pusha
mov
pusha
mov
pushf
pushf
push
push
lea
jmp
mov
pusha
lea
jmp
pusha
mov
pushf
popl
push
pushf
pushf
movw
pushl
popl
movw
pushf
mov
mov
lea
jmp
mov
pushf
pusha
push
mov
mov
pushf
lea
jmp
mov
pushf
push
mov
pushl
ret
sub
call
mov
call
call
pushf
jmp
jmp
fstpl
pushf
pushf
pusha
push
lea
jmp
push
xor
stc
mov
stc
add
jne
cmc
cmc
add
push
pushf
pusha
lea
jmp
pushf
flds
pusha
pushf
movl
lea
jmp
push
mov
repz
popl
call
repz
popl
pushf
lea
jb
push
call
mov
push
mov
movb
lea
jmp
cmc
xor
rcl
mov
push
cmp
sub
jmp
movw
pusha
push
mov
pushl
lea
jmp
pushf
mov
pushf
jmp
mov
jmp
sub
pushf
cmc
cmp
clc
add
pushf
pusha
pushf
popl
mov
mov
jmp
pushl
popl
pushf
push
pushf
mov
lea
jmp
pushf
mov
push
mov
lea
jge
pusha
mov
call
aas
setns
lea
cmp
clc
push
pusha
cmp
mov
call
cmc
movzbw
mov
xchg
xadd
rol
push
call
mov
mov
call
mov
call
mov
movb
mov
mov
movw
lea
jmp
mov
clc
cmp
clc
mov
add
lea
je
push
mov
pushf
push
pushl
lea
jmp
call
movzbw
movzbw
pusha
xchg
mov
mov
mov
pusha
call
pushl
mov
pushf
jmp
bsr
mov
mov
cmc
mov
shl
call
add
pushf
stc
ror
pushf
movb
pusha
pushf
inc
mov
call
mov
pushl
jmp
call
sar
shrd
mov
sar
call
mov
push
push
pushf
lea
jmp
jmp
pushf
std
pusha
cld
push
call
call
call
bts
mov
bt
cmc
add
push
pusha
mov
lea
jmp
pusha
mov
lea
movb
pushf
jmp
mov
push
movw
pushl
ret
dec
rcl
lea
inc
xor
rcr
cmp
and
not
mov
pusha
jmp
pushf
popl
push
lea
jge
popl
push
pusha
push
lea
jmp
stc
xor
mov
cmp
jmp
add
add
cwtl
cmp
sub
clc
mov
cmc
add
push
lea
jmp
mov
mov
push
mov
mov
call
mov
mov
push
call
or
xchg
sar
mov
jmp
jmp
bsf
jmp
pusha
mov
push
pusha
jmp
shl
pushf
cmp
mov
jmp
pusha
sub
neg
mov
stc
add
pushf
movw
lea
jmp
pushf
popl
pushf
pushf
pushf
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
mov
call
lea
je
pusha
xchg
movb
movl
call
push
pusha
repz
popl
pushl
pusha
mov
mov
mov
push
mov
mov
pushf
mov
movb
mov
lea
jbe
push
pushf
mov
pushf
pusha
pushl
lea
jmp
pusha
push
call
clc
jmp
xor
push
shrd
shr
and
xor
btc
mov
movl
bt
add
call
pushf
pushf
popl
jmp
repz
popl
push
pushf
jmp
sar
mov
push
sete
add
sbb
sub
sub
stc
adc
mov
jmp
sub
pusha
and
jmp
dec
movb
jmp
pushf
call
movb
pushf
movb
mov
pushl
movb
pushl
mov
lea
jmp
call
jmp
movw
call
jmp
bsr
call
call
clc
xor
clc
push
push
clc
add
pusha
movb
call
pushf
stc
add
jmp
mov
add
call
pusha
mov
pusha
mov
lea
jmp
pushf
lea
movb
push
pusha
jmp
sar
not
xor
bt
mov
not
lahf
pop
btr
cltd
pop
movsbw
pop
shl
pop
std
lea
pop
jmp
add
mov
lea
jmp
jmp
pushf
jmp
pushl
popl
mov
pushf
push
lea
jmp
mov
mov
pushf
popl
pusha
push
movb
mov
pushl
popl
movb
mov
pushf
lea
jmp
test
pusha
clc
movb
pushl
popl
call
call
mov
pusha
jmp
push
mov
movl
movw
mov
call
pushf
mov
pushf
mov
pushf
push
lea
jmp
push
mov
lea
jb
push
pushf
mov
pushf
movl
movb
pusha
lea
jmp
call
push
mov
pushf
pushf
lea
jmp
not
not
mov
inc
dec
pushf
rcl
not
bsr
xor
sbb
and
not
mov
movb
mov
movw
mov
sub
jmp
mov
pushf
pushf
call
call
bt
mov
bsr
mov
movzbw
bts
sub
mov
call
call
pushl
popl
push
push
lea
jmp
pushf
mov
jmp
mov
movb
jmp
call
mov
pushf
push
movl
mov
pusha
call
jmp
cmc
add
test
clc
test
shld
pusha
call
mov
call
call
mov
pusha
lea
jmp
push
call
not
clc
pushl
add
pushf
rol
clc
sub
jmp
movb
pusha
call
add
pusha
movb
pushl
lea
jmp
jmp
jmp
pushl
call
jmp
daa
movzbw
bswap
mov
test
mov
mov
mov
jmp
jmp
rol
btr
movzbw
mov
push
pushf
add
pushf
mov
lea
jmp
pushf
pushf
pushl
popl
pushf
pushf
pushf
lea
jmp
pushf
mov
push
mov
pushf
mov
lea
jmp
pusha
jmp
call
mov
bt
movb
call
movb
mov
push
lea
jmp
jmp
pushf
mov
faddl
push
pushf
movw
mov
lea
jmp
lea
pushf
pushl
pusha
not
movzbw
lea
setp
lea
je
dec
call
call
pusha
repz
popl
lea
jp
push
pushf
mov
push
mov
movb
call
pusha
pusha
pushl
bt
add
test
lea
pushf
stc
cbtw
cmc
cwtl
bt
sub
call
mov
movb
mov
mov
jmp
aas
shrd
das
movzww
jmp
jmp
pusha
pusha
fldl
push
lea
jmp
jmp
push
mov
push
pusha
repz
popl
pusha
movl
mov
mov
movl
mov
call
mov
jmp
call
pushl
call
mov
pushf
pusha
push
mov
push
pushf
jmp
mov
lea
jg
pusha
mov
jmp
pushf
pushf
divl
pushf
call
call
mov
pusha
push
jmp
call
call
jmp
push
lea
ja
shl
btr
movzbw
mov
rol
pushf
movsbw
lea
rcr
xor
or
sub
push
lea
pushl
add
shr
and
shr
btr
sub
pushf
call
pushf
sub
mov
push
mov
mov
movb
pushl
lea
jmp
push
movb
pushl
repz
popl
jmp
call
jmp
bt
lea
jp
rol
cmc
test
cmp
sub
test
clc
add
pusha
lea
cmp
jmp
cmc
pushf
and
push
movb
jmp
lea
jne
rcl
adc
rol
xorb
mov
mov
movsbw
pushf
mov
pushf
pushf
lea
jmp
shl
mov
pushf
call
xchg
bswap
push
sbb
push
sets
shrd
push
stc
call
mov
push
mov
pusha
mov
mov
pushf
movb
mov
mov
pushf
call
call
rcl
sar
inc
mov
call
pop
cmc
and
pop
bswap
adc
shrd
bts
pop
xor
push
mov
bt
pusha
sbb
mov
cmc
call
jmp
pushf
popl
call
movb
call
lea
js
push
call
pushl
popl
pushl
movb
pushf
lea
jmp
pushf
push
and
cmc
test
cmp
jmp
mov
call
push
mov
pushl
movl
movb
pushl
ret
pusha
pusha
jmp
mov
shl
mov
bt
stc
add
movl
push
lea
jb
pushf
mov
pushf
lea
jmp
jmp
jmp
pusha
lea
jne
push
mov
pushf
lea
jmp
inc
mov
jmp
jecxz,pn
cmp
addb
inc
addb
movsb
xchg
add
out
add
pop
xchg
cmp
add
cmp
add
roll
add
jmp
addb
movsl
xchg
add
inc
addb
adcl
jns
add
inc
fwait
add
faddl
add
icebp
addb
pop
xchg
cmp
loope
cmp
loope
cmp
xchg
add
inc
xchg
add
cmp
add
ja
add
ja
add
out
add
test
add
test
add
icebp
addb
xor
add
xor
add
inc
addb
stos
addb
icebp
addb
daa
popf
add
xor
add
ja
add
adcl
and
pushf
add
movsb
xchg
add
or
add
stos
addb
xchg
add
sbb
add
xchg
add
or
add
in
add
out
add
icebp
xchg
add
xor
add
shl
add
and
xchg
add
sbb
add
shl
add
dec
lahf
add
icebp
xchg
add
sbb
add
movsb
xchg
add
icebp
xchg
add
jge
add
shl
add
out
add
icebp
xchg
add
and
loopne
cmp
call
add
fldl
add
and
xchg
add
xchg
add
int
add
icebp
xchg
add
xor
add
shl
add
jge
add
icebp
xchg
add
pop
xchg
cmp
loopne
cmp
call
add
stos
addb
shl
add
fldl
add
jge
add
shl
add
jb
add
icebp
xchg
add
push
out
cmp
loopne
cmp
jecxz
cmp
xchg
add
xchg
jmp
add
clc
jmp
add
xchg
add
roll
add
lret
cmp
loopne
cmp
xchg
add
mov
add
shl
add
and
fwait
add
roll
add
lret
cmp
addl
test
add
and
add
push
out
cmp
popf
add
jmp
jmp
cmp
addb
ljmp
cmp
jmp
add
cmp
add
movsl
xchg
add
dec
lahf
add
sub
add
cmp
add
sub
add
sbb
add
adcl
inc
xchg
add
pop
pushf
add
cbtw
add
push
out
cmp
addl
and
cmp
popf
add
mov
xchg
add
jbe
add
lahf
std
add
xchg
add
dec
lahf
add
daa
popf
add
clc
jmp
add
push
out
cmp
out
cmp
addb
movsl
cwtl
add
adcl
inc
test
cmp
loopne
cmp
xchg
cmp
add
in
add
xchg
jmp
add
xchg
add
pop
pushf
add
movsb
xchg
add
adcl
inc
fwait
add
lahf
std
add
jns
add
cbtw
add
movsb
xchg
add
cwtl
sahf
add
jb
add
and
cmp
add
mov
add
sbb
add
xchg
add
icebp
addb
int
add
inc
fwait
add
jb
add
xchg
jmp
add
xor
add
jmp
cwtl
add
cwtl
sahf
add
cwtl
sahf
add
xor
add
jge
add
inc
addb
test
add
and
cmp
addl
cmp
xchg
cmp
xchg
add
mov
pushf
add
mov
add
xchg
jmp
add
sbb
add
and
add
sub
add
pop
jmp
add
pop
pushf
add
and
xchg
add
fldl
add
mov
addb
pop
jmp
add
cbtw
add
xchg
add
xor
stc
pusha
not
bt
stc
sub
pushf
call
shr
pushf
call
movb
call
or
bsr
mov
bt
test
test
cmp
add
call
jmp
pushf
pushf
popl
pushf
pusha
jmp
mov
jmp
mov
jmp
call
pushf
pushl
popl
pushf
lea
jmp
pusha
and
movzbl
pushl
cmc
sub
jmp
sub
ror
mov
call
mov
push
pushf
pushl
mov
pushl
movb
mov
call
pushf
movb
pusha
pusha
mov
movb
push
movb
lea
jmp
pushf
mov
pushf
jmp
pushf
mov
pushl
mov
jmp
inc
pushf
lea
jmp
call
cmc
mov
test
clc
stc
add
pusha
movb
mov
lea
jmp
jmp
cmp
sub
call
call
sub
mov
bsr
pushl
rcr
xadd
inc
push
bts
mov
xor
movzbw
stc
pusha
neg
pushf
movzbw
bswap
inc
dec
pusha
rol
call
pusha
jmp
push
mov
call
lea
adc
clc
movzbl
movzbl
inc
xor
add
rol
rcl
shl
add
lea
movzbw
dec
rcr
rol
jmp
pushf
sub
stc
movb
jmp
rcr
sar
aaa
inc
mov
jmp
pusha
pushl
mov
call
add
call
pushf
pusha
mov
mov
push
mov
pushf
lea
jmp
mov
mov
push
lea
jmp
pushl
popl
pushf
lea
jmp
pushf
pushf
mov
push
pushf
movb
lea
jmp
pushf
call
jmp
repz
popl
jmp
test
sub
cmp
call
shr
push
mov
pushf
movb
pusha
pushf
pushf
popl
mov
mov
pushf
pushl
popl
mov
mov
lea
jmp
mov
pushf
jmp
push
pushl
popl
push
mov
lea
jmp
call
mov
movl
call
mov
pushf
pushf
popl
pushl
pushf
pushl
popl
movb
lea
jmp
push
movl
add
movw
mov
mov
pushl
pusha
lea
jmp
call
mov
call
pusha
clc
add
pushf
mov
pushf
movw
pushf
mov
lea
jmp
pushf
bt
shl
pushf
push
mov
pusha
pushf
pushf
popl
mov
pushf
jmp
push
repz
popl
cmp
push
stc
call
pusha
pushl
mov
mov
pusha
movw
push
pushf
lea
jmp
call
mov
lea
je
pushf
pusha
pusha
mov
call
push
pushf
pushl
call
mov
push
movb
call
jmp
mov
pushf
push
movw
pushf
lea
jmp
call
sub
call
call
call
push
mov
jmp
rol
pusha
sub
cmc
lea
jo
add
pusha
test
cmp
movb
lea
pushf
cbtw
pushf
cmc
cmp
jmp
mov
mov
movw
movw
pushf
push
mov
movb
movw
mov
pusha
jmp
mov
push
push
lea
jmp
sete
shl
rdtsc
pushf
test
sub
pushf
mov
mov
lea
je
mov
pushf
pusha
lea
jmp
rep
rcr
rcl
movsbl
shr
mov
ror
mov
std
cmc
pushl
popf
push
lea
jmp
push
pushl
jmp
btr
inc
add
shld
pushl
movzbl
cmp
mov
pusha
cmc
pushl
cmp
or
push
call
push
add
pusha
mov
mov
mov
pushl
lea
jmp
call
sub
jmp
mov
jmp
call
lea
jb
pusha
pushf
popl
call
jmp
push
push
mov
pushf
mov
pushf
mov
pusha
push
pushf
lea
jmp
repz
popl
pushl
pushf
jmp
xor
mov
pushf
sub
pushf
pusha
pushf
call
movl
mov
cld
mov
jmp
rcr
add
bt
bts
inc
adc
sub
rcl
neg
cmp
not
mov
pushf
jmp
mov
push
pushf
pushl
pushf
lea
jmp
jmp
cmp
mov
clc
pushf
add
pushl
push
pushf
lea
jmp
lea
jle
push
call
not
pop
push
xchg
movzbw
mov
pushf
pushf
lea
std
jmp
dec
inc
stc
ror
cmp
xor
inc
bswap
inc
bts
bsr
stc
cmp
sub
bsf
movzbl
xor
push
adc
add
btr
bt
xor
pushl
mov
jmp
pushl
popl
movl
lea
jmp
call
pushf
pushl
popl
movb
movb
mov
movb
lea
jmp
pushf
mov
call
xor
sub
bsr
mov
btr
cmp
neg
mov
sets
btc
add
bts
mov
movsbw
shrd
jmp
mov
pushf
pushf
push
jmp
sub
cmp
add
cmc
call
push
mov
jmp
rcl
rcl
or
not
mov
call
setg
inc
call
neg
mov
clc
test
cmp
pusha
sub
movb
test
pushf
stc
shl
lea
jp
push
pushf
push
mov
pusha
pushf
mov
pushf
popl
pushf
movw
call
add
movl
pushl
lea
jmp
mov
movzbw
cwtl
lahf
mov
push
pushf
pushf
mov
push
movw
push
mov
mov
push
lea
jmp
add
pushf
jmp
shr
call
jmp
rcr
rol
ror
pusha
inc
ror
jmp
repz
popl
pusha
push
jmp
mov
movw
pushl
lea
jmp
xor
push
cmc
add
jmp
call
pusha
movb
pushf
mov
mov
lea
jne
pushf
pusha
mov
pushf
push
pushl
push
lea
jmp
call
inc
pushf
pushl
lea
jmp
add
pushf
pusha
lea
jmp
jmp
mov
jmp
movb
mov
jmp
mov
mov
mov
mov
lea
jmp
call
sub
mov
push
bt
add
movb
dec
bt
bt
rol
test
pushf
call
push
mov
pushf
call
neg
cmc
inc
mov
pushf
cmc
add
pushf
pushl
lea
jmp
mov
mov
lea
jmp
movsbw
bswap
movzbw
jmp
xor
call
add
push
pushf
push
mov
lea
jmp
mov
push
movw
lea
jmp
xchg
push
movl
jmp
mov
pusha
jmp
sar
jmp
lea
je
clc
xor
cmp
xchg
cmc
pushf
mov
test
stc
cmc
sub
pusha
lea
jne
test
test
pushf
xor
call
pushf
movw
mov
pusha
movb
pushl
lea
jmp
pusha
pushf
call
sbb
aam
sub
mov
sbb
cmp
mov
test
sub
test
clc
shl
pushf
pusha
pushf
mov
push
push
pushf
popl
pushl
push
pushl
popl
pushl
mov
pushf
push
lea
jmp
pushf
setb
lahf
mov
movb
lea
cpuid
pushf
test
sub
push
bt
cmp
cmpl
mov
pushf
pusha
movw
mov
jmp
mov
pushf
push
jmp
lea
jne
jmp
mov
mov
push
lea
jmp
pusha
not
mov
jmp
bt
add
call
cwtl
push
sub
pushf
pushf
call
pushf
cmc
add
push
bt
mov
add
jle
cmp
cmc
bt
sub
push
jmp
test
cbtw
call
call
inc
pushf
decl
call
shl
mov
cmc
cmp
push
stc
add
lea
jae
pushf
mov
pushf
pusha
mov
lea
jmp
sub
pushf
cmp
movzww
call
pusha
jmp
bt
jmp
stc
cmc
add
bt
cmp
shrd
call
add
call
mov
movb
mov
mov
lea
jmp
mov
push
mov
movw
lea
jmp
stc
sub
jmp
pushl
popl
movb
pushf
lea
jmp
jmp
jmp
pushf
push
mov
jmp
mov
pushf
mov
pushf
pushf
lea
jmp
pusha
jmp
pushf
pusha
mov
mov
jmp
pushl
mov
jmp
add
jle
stc
add
pushf
pusha
pushf
mov
lea
jnp
pushf
pushf
mov
mov
pusha
pushf
mov
pushl
lea
jmp
bt
jmp
stc
bsf
mov
or
shr
cmp
shr
mov
stc
jmp
push
push
movb
repz
popl
pushf
movb
pusha
mov
jmp
mov
movw
movb
mov
call
call
pusha
bt
jmp
mov
jmp
pushf
pushf
bswap
jmp
mov
pushl
lea
jmp
movw
jmp
pusha
call
mov
jmp
mov
pusha
call
push
mov
pushl
mov
call
pushf
pushf
fildl
pushl
movw
pushf
lea
jmp
