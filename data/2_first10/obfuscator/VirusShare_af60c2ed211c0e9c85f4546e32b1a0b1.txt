push
mov
sub
call
cmp
jb
lea
push
lea
push
mov
lea
push
lea
push
push
call
jmp
mov
lea
push
lea
push
push
call
push
push
push
mov
mov
movzwl
add
lea
push
lea
mov
push
push
push
mov
call
push
call
xor
xor
cmp
jae
mov
add
mov
mov
mov
lea
push
lea
mov
add
dec
not
push
and
push
push
call
push
call
movzwl
inc
add
cmp
jb
mov
mov
push
push
call
add
pop
pop
pop
mov
pop
ret
add
add
push
mov
sub
push
push
push
push
call
add
cmp
jae
jmp
push
push
push
push
call
add
movl
mov
mov
mov
mov
add
mov
push
push
mov
mov
add
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
test
je
mov
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
movl
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
sub
add
mov
mov
push
mov
push
push
mov
jmp
xor
pop
mov
pop
ret
add
add
push
mov
sub
push
push
push
lea
add
mov
addl
mov
mov
mov
push
mov
mov
pop
cmpl
je
mov
push
lea
push
call
push
lea
push
call
mov
push
lea
push
lea
push
call
push
push
push
call
push
lea
push
mov
call
lea
push
call
movzwl
cmp
ja
mov
push
call
push
call
mov
test
jne
or
pop
pop
pop
mov
pop
ret
push
push
call
mov
test
je
push
push
call
push
call
push
call
push
call
test
jne
push
call
call
cmp
jne
push
call
movl
call
pop
pop
pop
mov
pop
ret
mov
mov
add
mov
call
pop
pop
pop
mov
pop
ret
add
in
sub
push
push
push
call
mov
mov
mov
mov
add
mov
mov
test
je
movb
inc
dec
jne
mov
mov
test
je
mov
sub
jmp
lea
mov
mov
inc
dec
jne
mov
movzwl
xor
lea
movl
cmp
jae
mov
test
je
mov
mov
mov
add
add
mov
mov
inc
inc
dec
jne
mov
mov
mov
lea
lea
movb
inc
dec
jne
mov
mov
mov
mov
mov
movzwl
inc
add
mov
cmp
jb
mov
push
push
push
push
call
mov
lea
add
cmpl
jbe
mov
add
push
push
mov
call
test
jne
jmp
mov
mov
test
je
add
push
call
mov
mov
cmp
je
mov
test
je
mov
add
add
jmp
mov
add
mov
mov
test
je
mov
sub
jmp
mov
test
jns
and
jmp
lea
push
push
call
mov
test
je
mov
add
test
jne
mov
add
push
push
mov
call
test
je
mov
movzwl
xor
xor
lea
cmp
jae
lea
jmp
lea
mov
mov
mov
mov
mov
mov
mov
shr
lea
push
mov
movl
movl
movl
movl
mov
mov
push
push
add
push
call
mov
movzwl
inc
add
cmp
jb
mov
mov
pop
pop
add
pop
mov
pop
ret
add
add
in
sub
mov
lea
push
push
call
cmp
jne
call
push
push
push
mov
mov
add
push
push
add
push
push
mov
call
mov
mov
mov
add
mov
mov
test
je
sub
lea
mov
mov
inc
dec
jne
mov
mov
xor
mov
test
je
jmp
lea
xor
imul
add
add
cmp
jb
dec
jne
mov
mov
push
push
add
push
push
call
add
mov
mov
mov
je
mov
sub
lea
mov
mov
inc
dec
jne
push
mov
push
call
mov
mov
mov
add
add
mov
test
je
mov
movzwl
add
lea
movzwl
lea
mov
add
lea
lea
push
push
push
add
push
call
push
call
mov
mov
mov
mov
add
add
mov
test
je
lea
mov
mov
inc
inc
dec
jne
mov
mov
lea
push
mov
push
push
push
call
push
call
mov
push
push
push
call
mov
push
push
push
call
call
pop
pop
xor
pop
mov
pop
ret
push
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
sub
mov
test
jne
mov
test
jne
pop
pop
xor
pop
pop
ret
lea
mov
mov
test
je
jmp
lea
lea
mov
sub
shr
test
jle
lea
mov
movzwl
mov
sar
and
dec
je
dec
je
dec
jne
add
jmp
movzwl
jmp
mov
shr
add
add
decl
jne
mov
add
mov
test
jne
pop
pop
mov
pop
pop
ret
add
add
add
in
sub
push
lea
push
call
push
lea
push
call
mov
pop
ret
add
push
mov
push
mov
push
call
mov
mov
pop
ret
add
push
call
mov
call
mov
shl
add
add
mov
lea
mov
shl
add
lea
mov
xor
add
mov
mov
shl
shr
xor
mov
shr
xor
and
shl
xor
xor
mov
shr
mov
lea
xor
mov
add
and
add
shr
xor
xor
mov
mov
mov
shl
shr
xor
mov
shl
shr
and
xor
xor
mov
shl
mov
shr
xor
mov
and
shr
xor
shl
xor
pop
pop
mov
mov
xor
pop
ret
add
add
add
add
mov
mov
mov
mov
mov
mov
jmp
add
int3
jmp
add
or
add
or
add
add
add
sbb
add
or
add
jg
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
das
push
add
dec
int
and
jae
jo
outsl
addr16
insl
jne
popa
outsb
outsb
outsl
inc
and
and
outsb
and
and
dec
push
and
jno
cs
add
add
cmc
add
pop
lock
jbe
dec
ja
dec
dec
ja
sahf
dec
stos
add
dec
sbb
add
jbe
dec
sbb
mov
dec
mov
or
dec
ja
lahf
dec
push
jbe
dec
sbb
fs
jge
sahf
dec
sub
add
dec
sbb
add
jbe
dec
push
imul
jb
add
add
cmc
add
add
add
add
add
add
add
inc
add
dec
add
dec
rolb
add
add
xchg
add
add
and
add
add
adc
adc
add
nop
add
sbbb
add
mov
add
add
add
add
add
add
add
add
add
cmc
add
rolb
xchg
adc
add
add
add
add
mov
adc
add
mov
add
adc
rclb
add
add
xchg
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
xor
add
add
add
jb
add
add
add
add
add
push
pop
xor
add
add
mov
xchg
add
add
add
add
add
add
add
add
push
add
loopne
jb
jb
add
add
adc
add
mov
add
add
add
add
add
adc
add
add
inc
add
rolb
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
cs
add
pop
and
or
ljmp
add
mov
add
add
add
inc
add
add
jmp
int3
push
mov
push
cltd
icebp
movl
out
jg
inc
cmp
je
push
or
mov
aas
sub
stc
inc
or
jne
movsl
add
jo
pop
jge
push
call
add
jge
lcall
mov
fisubl
pop
add
mov
xor
fwait
inc
in
push
push
push
add
lea
mov
xor
mov
add
movsb
pop
mov
mov
xor
sysexit
pinsrw
mov
test
push
movb
movl
fdivl
mov
add
sarl
jmp
sub
ljmp
call
clc
jae
mov
out
adc
push
lea
inc
adc
add
rcll
lods
mov
sbb
adc
add
in
cmc
mov
dec
adc
or
in
shlb
add
jne
sub
rcrb
insb
mov
aam
gs
fstps
movsb
in
jnp
ret
mov
mov
add
add
push
adc
and
repnz
push
out
mov
xchg
cmp
jg
or
push
add
mov
add
push
and
jb
sub
in
add
mov
aaa
mov
jo
push
inc
outsb
adc
and
pop
sbbb
dec
push
lea
and
add
out
or
iret
ret
je
add
pusha
push
outsb
sbb
hlt
adc
xlat
jmp
sbb
cltd
mov
mov
pop
mov
je
jp
sbb
cmp
xor
cmp
insb
sbb
hlt
mov
negb
jge
and
cld
cmp
push
lods
push
ret
or
repnz
cld
or
aaa
scas
cmp
cmpsb
adc
jmp
repnz
es
pop
jmp
arpl
outsb
loope
lret
xor
fsubs
cmp
add
mov
or
pop
enter
jo
pop
or
repnz
and
add
sbb
push
add
cmp
leave
repz
mov
fsubrl
fs
femms
subl
mov
pushf
jmp
jl
jo
insb
jne
stos
rolb
mov
xor
add
sub
mov
jmp
pop
xchg
pop
add
popa
jbe
pop
and
mov
mov
repz
and
pop
addr16
or
adc
xchg
sbb
xchg
xchg
sub
sbb
mov
repnz
dec
adc
mov
dec
lock
rcll
nop
adc
and
push
xchg
mov
push
lock
cmpl
jb
bound
xor
inc
imul
pop
js
add
js
mov
in
in
jo
xor
mov
je
inc
decl
pop
push
mov
jl
cmp
je
orl
or
push
mov
mov
dec
daa
lock
sbb
fidivl
into
add
jmp
icebp
inc
es
push
add
or
sbb
nop
adc
adc
cmp
mov
invd
mov
sbb
add
push
cmp
cmp
mov
hlt
push
cmp
jne
push
push
pushf
lcall
ljmp
push
add
jne
xchg
xchg
sub
pushf
xor
stc
dec
hlt
mov
negb
pop
pop
or
cmp
lock
mov
int3
int3
sub
enter
mov
xchg
jns
mov
or
inc
xchg
ror
mov
xor
inc
add
lret
inc
dec
push
fistpl
mov
decb
adc
push
clc
lods
or
imul
sub
sbb
movl
mov
pop
insb
mov
push
adc
adc
outsb
pop
mov
das
sub
mov
mov
mov
nop
leave
mov
inc
or
pop
sti
test
mov
mov
add
xchg
or
or
adc
into
pop
sbb
imul
in
outsb
jl
cmp
push
or
push
dec
mov
fmul
push
mov
or
filds
test
fcmove
mov
mov
push
add
loop
mov
test
push
mov
push
cmp
sub
jmp
or
adc
lret
ret
mov
and
call
or
lret
loope
pop
aaa
aaa
das
push
ret
mov
cmp
or
pop
fcoms
mov
xlat
mov
push
sub
decb
aas
add
mov
mov
mov
ret
jns
ret
fmuls
or
adc
ja
test
xchg
jae
and
sarb
inc
dec
sbb
lcall
inc
and
test
bound
lret
ret
popf
or
loope
jle
lret
adc
jbe
push
dec
nop
or
out
jae
mov
jns
outsb
add
mov
pop
sarb
mov
push
gs
xor
adc
fdivs
pop
mov
ret
pop
por
nop
or
dec
dec
mov
dec
roll
loopne
out
cmp
push
push
es
ss
or
or
sbb
push
shr
into
dec
sarl
popa
cmp
icebp
outsl
sti
lcall
movl
out
adc
inc
jne
fwait
mov
js
add
xor
das
lock
xchg
mov
lock
adc
sbb
sbb
pop
imull
imul
xchg
jge
add
inc
dec
mov
jmp
inc
ja
fbld
test
int3
ret
lds
fs
add
sbb
inc
add
pop
xchg
insl
cmpsl
pop
push
leave
jne
shrl
cltd
ss
jb
movsb
popf
es
shrl
sub
push
adc
ss
out
sbb
sub
pop
xor
xchg
ret
sbb
mov
or
inc
insl
adc
stos
stos
add
out
lret
shr
sub
jnp
or
mov
lea
xorb
or
mov
push
cmp
jbe
je
fimuls
leave
test
je
sbb
mov
imul
add
movl
sbbl
xchg
rcl
lea
push
adc
insb
out
fcompl
das
fistl
mov
dec
mov
xor
mov
push
outsl
ret
mov
add
loop
cmpsb
jecxz
or
sbb
lret
jnp
pmulhuw
sub
mov
pop
in
mov
pop
jo
sbb
dec
lock
pop
add
in
sbb
popa
or
push
je
mov
mov
loope
or
adc
test
cmp
push
mov
icebp
or
and
xchg
in
lods
cld
dec
lock
lock
xchg
inc
fildl
and
mov
icebp
sub
fisttpl
cmp
je
pushf
mov
loop
jo
and
test
sbb
cmp
adc
cld
inc
push
sub
out
pop
sbb
mov
adc
sbb
in
sub
loope
arpl
sbb
add
sub
in
mov
sub
dec
enter
pop
faddl
dec
sbb
push
push
and
shrd
lea
inc
push
push
movsb
fldt
jns
dec
cmp
inc
das
je
fsubs
add
sub
push
out
push
jbe
push
jge
cmpl
movsb
cmpsb
je
push
jle
mov
sub
mov
push
pop
push
jle
insl
imul
mov
fbstp
xchg
rorl
dec
mov
cmp
sbb
xor
or
dec
sbb
or
loop
les
fsubrl
and
add
movd
cmc
les
mov
inc
dec
adc
jge
outsl
jge
add
push
rol
ljmp
fildl
and
add
or
outsl
testb
pop
add
dec
adc
loope
arpl
dec
ffree
add
add
mov
mov
pop
cltd
and
mov
inc
sbb
xchg
aaa
rcrb
sub
enter
lcall
add
add
add
push
pop
mov
insl
sbb
addr16
adc
lock
push
mov
sub
mov
inc
mov
lret
dec
fisttpl
push
mov
xlat
les
or
and
mov
jne
imul
pop
mov
outsl
fmull
mov
sbb
sub
rcll
mov
or
loope
into
push
sbb
sub
sbb
xor
jecxz
rcrl
add
mov
inc
sub
out
imul
xchg
orb
mov
mov
adc
out
mov
fld
stc
pop
mov
pop
inc
popa
cmp
stos
adc
add
mov
mov
sub
mov
xchg
mov
mov
icebp
lea
mov
xor
movsl
dec
xorps
mov
pop
cmc
mov
out
in
aam
and
fidivl
lea
int3
insb
xchg
cmp
jne
aad
fsubr
lret
push
addl
mov
repz
add
dec
pop
cmp
icebp
stc
push
in
pop
popf
aam
enter
pop
mov
scas
movsl
out
push
push
pop
and
add
test
jne
call
inc
and
cmpb
lea
out
or
jg
pop
push
add
and
sbb
jl
ljmp
cwtl
push
cmp
dec
sub
sbb
unpcklps
fisubl
mov
ret
push
mov
cmp
lods
sub
add
jne,pn
pop
xor
ja
push
jns
inc
aaa
jmp
mov
mov
insl
in
insl
jmp
pop
add
or
outsl
cltd
sbb
sbb
xlat
add
sub
cmc
bswap
je
lea
jecxz
fldl
add
add
aas
das
lea
repnz
push
sahf
sbb
mov
and
dec
dec
lock
jg
in
decb
call
je
ja
push
data16
pusha
and
in
leave
testl
add
adcb
sti
out
std
pop
ja
loopne
imull
insl
push
sbb
xchg
add
lds
enter
aad
clc
sahf
lea
mov
mov
pop
xor
int3
sahf
mov
jne
push
lock
in
in
sbb
orl
xorl
js
mov
inc
jle
mov
daa
in
push
jbe
sub
int3
lock
lods
sub
add
jne
test
je
mov
cmp
jne
mov
lock
in
add
jnp
fsubr
cmp
test
mov
mov
mov
pause
popa
addl
xor
aam
mov
fwait
xchg
push
fcomps
mov
sub
cltd
mov
idiv
cld
sbb
cmp
popf
dec
cmp
cmp
inc
or
pop
imul
inc
add
sahf
insl
in
psubd
and
sbb
cmp
sub
adc
adc
push
iret
push
clc
jbe
es
xor
lret
xchg
aas
loopne
mov
mov
roll
mov
push
add
pusha
outsb
fsubl
cmp
std
lods
mov
mov
imul
les
jle
dec
popf
shrb
mov
adc
pop
mov
cmp
mov
scas
push
mov
add
dec
clc
and
mov
lods
and
aas
inc
fidivs
push
add
ljmp
pop
mov
dec
inc
imul
idiv
loopne
adc
pop
sub
mov
mov
bound
dec
fbstp
leave
fmull
aam
xchg
ja
push
inc
pop
daa
in
push
shrb
loope
clc
loope
sbb
pop
mov
inc
out
sahf
dec
fwait
stos
adc
add
jmp
mov
sbb
or
outsl
jo
in
pop
pusha
repz
lods
inc
mov
je
faddl
push
lret
mov
cmp
adc
adc
fimuls
add
je
outsb
fs
cwtl
pop
mov
rorb
lea
mov
xor
add
dec
ljmp
push
mov
idivb
jae
ficompl
inc
jb
mov
aad
mov
lcall
sub
sub
sarl
popf
xorb
jno
sbb
enter
repz
lcall
jl
lea
and
and
push
mov
cmp
pop
adc
adc
movsb
sbb
movsl
jns
push
sub
cltd
lcall
mov
aad
inc
cmp
inc
push
sbb
test
mov
int3
or
mov
xor
in
fbld
shlb
cmp
push
mov
lds
mov
repnz
rcll
test
fucomi
je
push
push
jmp
out
xchg
popf
in
fwait
mov
jae
cmp
cmp
int3
fwait
arpl
insl
popa
add
adcl
movsb
scas
dec
stc
dec
adc
imul
loope
mov
and
push
bound
lods
push
cmpl
jbe
push
add
jnp
jne
push
jo
insl
mov
mov
or
add
sti
mov
clc
jb
aam
mov
cmp
add
and
mov
cmp
cld
jle
fs
jo
fidivrs
push
cmp
jbe
sbb
pop
push
push
sbb
and
test
cmc
call
scas
inc
cmp
rcrb
fwait
jp
nop
es
mov
jbe
jb
and
mov
sub
repnz
jge
dec
push
push
push
lret
or
nop
mov
enter
inc
rcll
jbe
push
sub
lds
shrl
mov
cmp
cli
pop
mov
mov
and
or
jne
fisttps
lahf
loopne
andb
sbb
outsb
stos
fwait
and
adc
ds
inc
les
cmpsl
cmc
add
xchg
add
mov
adc
inc
popa
xchg
je
je
mov
sbb
inc
and
jmp
add
dec
mov
scas
push
fwait
jb
xchg
cmp
pop
mov
loopne
into
inc
push
push
adcb
jne
ret
and
cmp
bswap
cmp
lock
or
lea
iret
hlt
dec
push
in
and
xor
or
ja
fldl
dec
push
or
out
pop
add
push
scas
testl
inc
or
mov
fcmovnbe
dec
adc
test
mov
arpl
dec
and
pop
incl
mov
test
std
mov
scas
or
flds
aaa
lods
add
inc
into
push
jo
fiadds
sarl
stos
lea
mov
aam
int
xchg
rcrl
je
xor
sbb
scas
aam
daa
cmpsl
inc
push
push
sbb
jbe
lcall
inc
or
add
aaa
daa
mov
cld
push
sbb
jne
bound
cwtl
gs
pop
jecxz
push
adc
into
sub
lea
sbbl
sahf
insl
jae
mov
fwait
add
leave
addl
inc
adc
jns
icebp
pop
repz
loope
jl
lea
inc
pop
add
insl
add
mov
jae
dec
ja
dec
dec
mov
idivb
aas
add
pusha
mov
cmp
dec
add
repz
add
mov
and
add
in
or
push
push
scas
dec
ja
mov
xor
aas
sbb
push
cmpsl
xor
jno
and
js
adc
cmovb
mov
dec
adc
pushf
lahf
ljmp
jne
loope
adc
cmp
inc
fs
push
sbb
cmpsb
aas
push
xor
repnz
lea
xchg
cmp
fistpll
sbb
inc
sti
xor
and
mov
fstp
inc
mov
leave
repnz
ds
dec
or
add
lret
xchg
in
and
add
mov
cltd
fldln2
add
jae
xor
shrb
pop
push
cmp
ja
stc
dec
add
sbb
fcomi
add
inc
sbb
hlt
or
dec
mov
dec
mov
add
or
sbb
xchg
push
sbb
shr
je
mov
jecxz
lcall
mov
jne
ret
pop
insl
ds
jo
mov
adc
mov
es
or
aas
mov
test
and
test
dec
repz
sbb
or
nop
xchg
js
ret
rolb
mov
aas
sub
or
popf
out
scas
in
adcl
sub
scas
scas
sub
mov
pop
shrl
fcoml
rorb
sub
mov
xor
adc
cmp
lea
pop
imul
cmc
loopne
lock
ljmp
inc
jecxz
pop
hlt
enter
in
loop
in
in
xchg
sbb
mov
clc
inc
xchg
idivl
adc
imul
and
inc
push
and
mov
inc
push
loopne
or
sub
sub
ss
xchg
lcall
mov
sbb
dec
int3
or
popa
cmp
test
cmp
or
pop
cmpsl
out
pop
nop
lea
and
pop
push
ss
add
mov
cmp
pop
fistl
cmp
jg
pop
orps
arpl
mov
push
xor
jae
and
lea
movsl
or
fsubrl
mov
add
mov
xor
inc
mov
add
mov
fdivrs
mov
push
psubd
out
int
add
mov
fdivs
jmp
iret
insl
es
push
or
js
or
lcall
push
mov
sbb
mov
je
js
inc
or
push
push
push
mov
frstor
movsl
sbb
orl
rcrl
jbe
insl
xor
cld
lea
mov
lods
popa
out
push
addl
push
mov
add
je
and
mov
int
pushf
mov
sbb
call
mov
add
cmp
adc
in
lcall
add
inc
popf
leave
insl
lcall
mov
xor
outsb
cmp
dec
clc
xor
jbe
mov
push
mov
imul
or
jle
and
arpl
ret
jne
sub
xchg
inc
loope
pop
push
sbb
std
ret
adc
sub
jmp
mov
jge
fcomi
inc
push
je
adc
cmp
sub
je
mov
mov
cmp
iret
cwtl
adc
adc
sub
cwtl
push
sbb
dec
mov
data16
or
shr
int3
ja
cmp
es
and
and
sbb
inc
inc
iret
test
pusha
outsl
outsb
or
andb
dec
clc
scas
xchg
xor
ret
iret
sub
adc
cmp
rorb
jnp
cmp
pop
loope
xchg
add
adcl
and
cmpl
cmp
add
div
ja
and
xor
or
pop
cs
shlb
icebp
sbb
push
lock
jne
sbb
gs
cmc
xchg
lret
sti
outsl
pushf
gs
mov
and
mov
adc
pop
xlat
push
jnp
or
push
iret
add
adc
outsb
sbb
mov
dec
or
cmp
adc
add
lock
cltd
adc
sbb
outsl
xor
xor
outsl
repnz
int
lret
in
cmpsb
outsb
push
inc
sbbb
sub
jnp
ja
and
in
rcll
sub
data16
mov
mov
push
adc
sar
fisubs
cmovo
sbb
ljmp
jmp
xor
push
push
sub
cmp
pop
lea
jae
xchg
xor
hlt
daa
dec
push
jns
add
add
in
roll
mul
insb
adc
lahf
add
sbb
xchg
jo
jne
movsb
add
cltd
mov
hlt
hlt
cmp
xor
shr
push
ds
jmp
sbb
cmpsb
shl
bound
iret
jo
sbb
mov
or
cmp
sub
sti
push
xchg
int
xor
daa
and
daa
xor
lods
adc
orl
inc
nop
loop
cmp
daa
sahf
cli
cmpsb
js
or
mov
xchg
sub
mov
cmp
or
jbe
dec
adc
or
or
lret
and
test
xor
mov
inc
mov
push
pop
pop
sbb
sbb
dec
std
loope
mov
xchg
ret
cmp
hlt
repz
cmp
jb
mov
sub
cmp
push
mov
lret
pop
cmp
inc
testl
cmp
inc
pop
int
push
shrb
dec
pop
mov
out
cmp
cmp
fidivrl
dec
inc
rcll
and
punpckldq
and
or
sub
and
mov
push
movl
cmp
cmpl
push
push
addl
mov
or
and
mov
shlb
xlat
xchg
mov
mov
mov
lret
mov
mov
add
std
sub
pusha
cmpsl
pop
inc
and
mov
push
fisubl
insl
and
repz
add
int3
lea
imul
movb
push
jl
adc
mov
inc
fwait
mov
push
insb
add
or
repnz
mov
shlb
fstp
push
jl
sahf
test
or
test
inc
xor
lds
cmc
add
in
and
mov
or
subl
idiv
add
or
mov
mov
xchg
dec
int3
jmp
or
cld
pop
adc
insl
imul
mov
jmp
xor
mov
mov
push
cmp
movsl
test
sub
jl
loop
movsl
fdivrl
sbb
xor
fdivr
shl
lea
pop
jnp
mov
negb
mov
in
pop
xchg
leave
xchg
test
popa
and
mov
ss
nop
mov
in
fs
push
cs
add
idivb
and
push
mov
mov
adc
inc
inc
push
jl
push
rcll
out
push
rcrb
sbb
idivb
or
lahf
xchg
fstp
add
idivb
scas
jnp
std
test
add
push
mov
pop
jecxz
aam
mov
sub
test
cmp
stc
push
jl
pop
pop
bound
add
ds
mov
in
je
inc
fnstenv
jmp
xchg
fildll
mov
or
xchg
push
or
cmp
mov
mov
int3
stos
shrb
add
pop
cmovbe
sub
cld
pop
popf
fs
or
repz
cmpl
pop
add
jl
add
movl
sahf
lds
iret
jle
sbb
xchg
cmc
sarl
clc
test
cmp
je
pop
adc
negb
or
decb
push
jne
xor
cmp
push
pop
dec
call
ficomps
mov
out
out
jne
push
mov
test
add
dec
imul
dec
cmp
jbe
sub
aam
cmpsl
pop
cmp
inc
xchg
lds
loopne
fcoms
std
xchg
dec
sub
inc
test
je
orl
or
sbb
test
outsl
and
js
sarl
mov
jl
data16
add
orb
dec
xchg
dec
mov
add
jle
jo
or
and
cmp
jmp
sbb
adc
push
xchg
jle
sbb
push
push
xchg
push
pop
sbb
sub
sbb
iret
xor
and
dec
sbb
rol
push
cmp
data16
mov
fs
mov
mov
inc
push
stos
nop
pop
xchg
lods
mov
or
orb
pop
pop
mov
add
out
xlat
into
cli
mov
sub
mov
xor
in
sub
xlat
mov
dec
shr
cmp
xchg
dec
and
lds
sbb
dec
lods
add
jno
pop
sahf
dec
mov
add
fstpl
push
sbbl
data16
pop
push
or
adc
ja
xor
add
jg
adc
cmp
imul
mov
fildll
inc
test
rclb
sub
outsb
cmp
mov
inc
xor
aaa
inc
inc
dec
adc
dec
xor
adc
inc
or
cmp
lea
addr16
outsl
mov
jmp
add
ret
mov
loop
xchg
or
push
lock
sbb
or
mov
xchg
xchg
cmp
test
pop
lods
shrb
mov
add
ret
add
and
mov
ljmp
imul
dec
inc
ljmp
loopne
adc
or
or
dec
loop
xchg
cs
sub
scas
inc
mov
mov
in
insb
or
ss
mov
sub
xor
or
leave
and
addr16
adc
and
add
xchg
mov
pusha
in
in
test
push
add
or
imul
cmc
and
test
outsl
and
or
stc
adc
add
ret
std
mov
leave
ds
xlat
cmp
pop
xchg
mov
push
enter
xchg
sbb
mov
aam
lahf
stc
mov
jl
lods
mov
test
loop
cltd
stos
sbb
in
in
sub
jmp
dec
adc
or
xchg
out
std
cwtl
push
lock
cmp
adc
jl
pop
mov
in
pusha
add
push
outsb
or
add
inc
mov
nop
stc
test
leave
lods
jae
sub
das
cmpsl
cwtl
sub
hlt
iret
cmp
sbb
fs
in
mov
xchg
mov
push
push
xor
add
rcr
add
ret
lods
sub
pop
jecxz
pop
mov
pminsw
insb
mov
sbb
and
add
movsl
sbb
adc
push
imul
js
popa
sti
and
or
or
dec
cltd
ret
mov
sub
out
ljmp
daa
je
mov
cmp
jl
cmp
jg
sub
jmp
cmp
or
sub
mov
sub
lret
aaa
mov
pop
sar
lret
jmp
or
loopne
jl
inc
cmp
jb
lea
shr
or
je
insb
ret
mov
subb
insb
mov
sbb
dec
ror
mov
adc
mov
and
push
push
xor
pusha
scas
cs
fs
dec
data16
les
hlt
je
dec
shl
cmp
pop
js
mov
dec
pop
push
in
pop
nop
jl
rcrb
xor
int
mov
mov
mov
imul
cmp
or
fwait
rep
push
push
jmp
rclb
fstpt
dec
into
xchg
xor
dec
dec
dec
sti
enter
enter
adc
adc
cmp
and
add
inc
sbb
outsb
fbld
pop
ds
push
mov
sbb
push
cld
iret
mov
cwtl
cs
inc
mov
je
jmp
in
or
dec
sub
push
mov
dec
mov
push
repz
insl
les
ss
daa
lea
xchg
push
push
lcall
add
jbe
adc
or
adc
and
cmp
sub
sbb
addr16
jl
mov
and
mov
cmpsl
je
test
insb
mov
push
sub
cmp
push
push
mov
dec
aam
xor
je
jnp
xchg
add
pop
jg
or
fs
xlat
dec
pop
gs
nop
rcll
push
adc
out
mov
jo
and
and
mov
loope
add
add
mov
jae
movsb
xchg
cmpsb
fwait
popa
and
stc
fdivs
push
fldcw
divl
movsb
adc
sahf
test
dec
mov
adcl
inc
stos
mov
and
push
dec
push
jge
push
xor
adc
or
addr16
adc
and
and
add
scas
loope
unpckhps
lcall
fs
sbb
lret
sbb
add
add
lds
sbb
fimuls
js
into
les
push
push
aas
repz
cmp
lret
es
stc
pop
mov
mov
mov
xor
fwait
or
movsb
xchg
or
faddl
xchg
aam
xchg
xchg
inc
sbb
stos
inc
add
xor
addl
insb
insb
inc
jge
xchg
insb
mov
push
and
xor
xor
fldenv
cwtl
cld
pusha
sti
jns
mov
pop
fnstcw
mov
rclb
add
in
fdivr
sbb
sbb
in
add
pop
add
add
and
add
iret
add
and
mov
or
xor
xor
xchg
pop
add
add
jb
into
or
mov
mov
fstl
into
mov
cmp
aad
jb
sbb
sbb
cmp
ja
mov
sub
fimuls
fists
pop
add
cmp
jne
mov
push
jl
or
add
fdivr
push
pop
imul
jmp
cmp
sbb
insb
imul
or
adc
and
repz
addl
imul
cmc
or
dec
lahf
loope
out
jae
pusha
add
add
dec
xchg
push
loope
ds
sub
add
push
lods
jge
sbb
andl
sbb
nop
in
aaa
cs
int3
push
repz
rorb
push
and
adc
dec
test
inc
sub
pushf
and
int3
push
push
adc
leave
push
lds
add
pop
fmull
int
xchg
inc
div
dec
fcmovu
stos
or
adc
and
sub
or
adc
in
or
nop
dec
scas
stc
dec
in
in
mov
mov
adc
add
add
xchg
sbb
enter
pop
sbbb
cmp
into
lcall
push
lods
jns
add
out
outsb
rolb
outsl
sti
push
clc
or
addb
icebp
adc
xor
cmp
or
leave
jae
shrd
test
cmp
jb
or
sbb
fs
enter
fstl
icebp
cs
and
or
lds
mov
xor
dec
outsb
ror
pop
sbb
sbb
push
jb
sbb
xchg
or
sbb
insl
fidivs
rorl
mov
xchg
add
sbb
aad
sbb
pop
cmpsl
push
movsb
and
or
and
mov
mov
add
ja
jae
and
sub
push
inc
sub
out
sbb
lret
push
pushf
mov
lea
ds
xorl
outsb
jmp
je
int
inc
cmp
popa
popf
push
jmp
ss
jb
cmp
adc
push
and
cmp
mov
gs
push
test
icebp
icebp
jae
ja
sub
add
adc
fisttps
dec
sub
pop
mov
test
stc
je
and
dec
fwait
sbb
sub
cs
aam
insb
sbb
rolb
je
popa
sub
push
pop
call
sbb
cmp
xorl
imul
repz
push
push
nop
dec
outsw
push
mov
sbb
mov
ret
pusha
push
jns
into
in
roll
test
popl
lods
and
adc
repz
pop
dec
adc
or
shrb
leave
cmp
add
push
fldcw
lahf
subb
xor
rorl
xchg
add
sbb
in
push
dec
inc
push
fmuls
mov
cs
stos
pop
test
es
popa
comiss
repnz
xor
test
repz
insl
stc
add
add
sub
mov
inc
movsb
lock
cli
xchg
mov
movb
movsb
daa
addr16
incl
nop
iret
int3
inc
rolb
aad
adc
mov
enter
in
xchg
xor
ljmp
sub
daa
push
pop
daa
fidivl
in
out
ficompl
pop
aad
or
scas
lret
stc
or
scas
inc
mov
push
divb
mov
push
mov
mov
push
mov
outsl
add
adc
lcall
sbb
stos
jg
pop
push
inc
imul
subb
pop
imul
jb,pn
or
into
pop
or
pop
push
mov
divl
pop
int
jne
fistl
sub
loope
push
iret
push
inc
adc
or
xor
mov
xchg
adc
mov
cmpsl
or
fidivs
cmp
inc
adc
dec
push
fistpl
out
les
adc
push
push
rcrb
inc
repz
es
in
fimuls
jae
mov
push
push
int
pop
or
testl
movsl
adc
scas
add
adc
in
mov
or
pop
and
inc
sub
stos
mov
mov
jle
dec
lods
cwtl
mov
sbb
mov
push
jbe
or
ljmp
fistl
and
add
mov
sbb
xor
fadds
mov
div
aam
enter
adc
out
mov
push
or
jmp
aam
mov
add
add
rorb
imul
cltd
xchg
test
dec
rolb
movaps
daa
push
inc
add
out
mov
cmp
mov
and
inc
or
jne
test
push
or
popa
cmp
dec
xor
ds
insl
in
gs
sbb
or
and
sub
and
jne
xchg
rorl
add
jne
inc
sti
rol
mov
loop
fildl
loop
push
push
dec
adcl
call
xchg
push
shlb
pop
jg
pop
push
call
movsb
xorb
mov
or
dec
fsubr
dec
pop
push
in
push
lea
cmpsb
inc
or
push
movl
jo
jle
cmpsb
pop
push
cmpl
popa
jo
sub
je
push
inc
add
add
add
add
adc
cltd
xor
insb
sti
dec
and
cmpsb
or
cli
lcall
add
lahf
cwtl
adc
ja
addl
enter
dec
out
push
push
mov
inc
popf
lock
pop
inc
mov
pop
cld
dec
ret
xchg
or
pop
inc
movsl
fstpl
das
pop
ret
outsb
lods
adc
stc
fildl
xor
mov
or
ja
adc
xor
fidivrl
mov
jb
bound
mul
xor
pop
jl
clc
dec
mov
mov
add
push
push
iret
pop
push
mov
bound
xor
dec
les
mov
sbb
adc
cmp
out
fsubrl
xor
dec
xchg
pop
sub
jp
stc
lret
inc
je
push
inc
stos
lds
xor
bound
dec
push
ds
xor
inc
sbbb
mov
lahf
xchg
mov
push
mov
cmpsl
fisubs
bswap
outsl
les
adcb
add
cmp
pop
std
add
bnd
neg
adc
xor
push
mov
sub
in
pop
lock
pop
mov
shll
cli
adc
or
or
jae
adcl
pop
adc
jne
push
pushf
push
ljmp
insb
jge
outsb
mov
xlat
cmp
mov
imul
add
jecxz
jl
sarb
dec
jle
cmp
jne
add
dec
jne
cmpsb
mov
mov
sti
sub
and
ss
insl
sarb
outsl
jne
fwait
add
je
pop
jmp
dec
jo
sbb
fsts
popa
inc
mov
ja
adc
inc
xor
into
repz
mov
and
mov
pusha
inc
cmp
push
jbe
lock
dec
cmp
fcomps
or
sbb
pop
jbe
test
push
push
int
mov
adc
dec
jo
xchg
mov
and
hlt
adc
je
inc
divb
lea
das
adc
ret
push
xchg
in
jb
repz
mov
or
subb
jecxz
lret
lock
pop
cmpl
inc
aaa
xchg
lds
mov
jp
xor
movsb
scas
pop
adc
rcll
out
in
sbb
mov
movsb
loope
jmp
into
xor
inc
ss
mov
jl
popf
lock
aas
rorb
ja
mov
insb
cltd
mov
push
jge
pop
test
mov
adc
push
push
jne
add
stc
lds
sarl
add
repz
into
push
add
mov
cmp
aaa
inc
xor
push
orl
pop
pop
lahf
dec
inc
push
or
or
xchg
movsl
in
loopne
stos
mov
xor
adc
push
fldenv
add
mov
in
or
add
int3
mov
pusha
outsl
adc
jbe
fidivl
mov
movsl
fcompl
shll
adc
add
jne
or
pop
mov
push
movsb
inc
xchg
aaa
aaa
ret
sub
jbe
push
add
je
pop
into
and
cmpsb
out
in
xchg
inc
cmp
add
jo
aad
decl
ja
sbb
push
test
add
movsl
popa
or
das
dec
dec
xchg
imulb
dec
xchg
xchg
ds
insb
fmuls
xor
or
cltd
lea
sub
or
loopne
mov
xchg
int
sub
leave
xor
enter
pop
mov
popf
xorb
adc
in
mov
push
mov
cmpsb
sbb
sub
push
in
adc
orb
adc
xchg
mov
mov
xor
jne
and
sub
enter
iret
sub
addr16
xchg
andb
scas
pop
mov
adc
or
das
mov
je
out
sbb
push
and
and
ds
sub
cwtl
lret
xchg
lods
mov
and
cmp
sbb
and
sar
add
mov
mov
shll
xor
cmc
push
mov
lcall
in
ja
clc
in
negl
cltd
lods
push
call
or
mov
sub
out
leave
cmp
push
movl
rorl
pop
push
mov
xorl
dec
or
xor
jno
pop
insl
push
or
jmp
mov
dec
mov
fstps
inc
dec
add
mov
sbb
mov
aam
push
adc
cmp
cmp
inc
sub
jmp
adc
mov
inc
cmp
sar
and
js
nop
aam
pop
push
popa
jo
xchg
lret
and
addl
sbb
mov
push
cmp
fiaddl
mov
popf
push
jb
mov
dec
and
jl
pop
scas
popf
fstpt
cmp
pushf
sub
adc
dec
push
jne
and
push
inc
and
sub
cmp
arpl
les
in
or
in
and
push
js
lret
add
jp
mov
and
sbb
add
add
dec
mov
nop
andps
push
xor
arpl
and
loope
or
xchg
adc
ret
setg
add
stos
js
call
adcl
jbe
insb
addr16
negl
xchg
pop
adc
push
dec
cmp
add
add
xor
and
cmp
mov
mov
xchg
outsb
sbb
aas
lret
sbb
mov
push
cli
sub
adc
in
je
faddl
rcll
pop
xchg
ror
arpl
js
jno
mov
sub
nop
mov
call
adc
cmpl
cmp
inc
cmp
out
fs
pop
xchg
in
push
sub
jno
add
ss
dec
mov
enter
scas
pushf
sbb
pop
cvttps2pi
and
call
lock
rcr
mov
sub
stos
xchg
or
adc
cmp
jns
popa
or
in
das
daa
pop
sbb
jecxz
dec
pop
push
mov
sbb
ljmp
fsubr
add
sub
lret
scas
adc
mov
mov
inc
xor
loopne
ficoml
dec
sub
and
pop
or
iret
jl
sbb
or
in
sti
sbb
add
xchg
add
fnstsw
jo
push
cwtl
pop
pop
cmc
cmp
push
inc
fsubrp
dec
dec
add
insl
lock
and
push
or
sub
mov
adc
pop
push
jge
xor
sub
out
outsl
dec
shrb
pop
jne
lret
ds
fmuls
dec
dec
or
call
mov
insb
add
add
inc
loopne
and
lret
lock
dec
dec
xor
insl
mov
outsl
adc
xchg
es
mov
xor
aam
insb
add
ret
ja
or
lds
stos
jo
sub
dec
call
adc
mov
or
mov
and
dec
loopne
call
lods
mov
ficoms
push
mov
push
test
or
sub
icebp
or
mov
or
je
pop
push
add
mov
ret
sbb
addr16
or
lods
xor
xor
sub
add
test
movsb
jge
mov
mov
test
jp
bound
shll
or
jns
adc
scas
pop
mov
fs
ljmp
xor
dec
inc
pop
add
fadds
push
inc
lahf
aaa
pop
push
or
les
js
sbb
jnp
jl
loopne
cmp
std
nop
sti
push
lods
aas
add
jns
aam
jle
mov
mov
xchg
push
push
lods
mov
xor
pop
les
shll
and
cmp
pop
sub
aaa
adc
and
sub
sbb
negl
mov
in
das
lret
add
pop
divb
cmpsl
inc
sbb
lret
push
addb
jne
cmovb
xabort
aas
in
cwtl
add
cmpl
jae
inc
lods
imul
out
push
or
or
push
jle
push
mov
xchg
loopne
sbb
sub
popf
mov
adc
jmp
ja
push
or
dec
ret
fstpl
cmp
mov
roll
or
sub
or
sbbl
mov
add
jae
fprem
cmp
ja
lret
add
sub
out
dec
or
add
subl
sbb
jl
mov
jle
push
push
inc
mov
sbb
xor
sbb
subb
add
mov
pop
sub
mov
in
pop
add
test
ret
iret
cli
hlt
pop
dec
xor
sub
ret
push
mov
push
int3
xchg
and
xchg
push
push
sub
inc
faddl
fcomps
ret
mov
adc
push
pop
mov
xchg
rorb
test
in
or
push
adc
or
aas
inc
push
shlb
clc
cmovs
xor
fmul
bound
and
out
push
mov
pop
hlt
sbb
aam
or
xor
or
xorb
das
jne
ja
cmp
push
mov
push
jg
adc
and
xchg
pop
adc
push
xor
test
int
mov
lock
and
push
es
test
sub
dec
movsb
lock
test
push
mov
xor
jle
jno
insl
add
add
add
adcb
xor
mov
jae
sbb
or
or
cld
mov
sub
lods
xor
sti
je
int
sahf
push
je
xchg
xorl
adc
fsubs
push
mov
orl
pop
xor
test
inc
or
rorl
add
fisubs
mov
test
rcll
insl
and
loop
pop
sub
add
or
mov
flds
jb
mov
popa
test
inc
xor
xor
xor
inc
mov
setne
lds
bound
mov
fsts
mov
xchg
dec
sbb
push
fbstp
and
cmpl
jb
aam
mov
fs
orl
and
pop
fiadds
jmp
and
insl
inc
pop
enter
inc
adc
push
push
imul
clc
xchg
pop
lahf
add
xlat
mov
aas
xchg
or
lret
mov
in
pop
outsl
orl
adc
mov
cmp
hlt
jne
dec
lret
push
inc
cld
pop
mov
jno
popf
and
mov
int3
aaa
xchg
lock
int3
mov
mov
addr16
mov
adc
push
js
jae
lcall
inc
lret
pop
add
push
push
das
sbb
mov
xor
mov
shll
or
in
test
scas
xchg
lret
sbb
rolb
fisubs
jo
sub
lcall
and
adc
jb
add
ror
mov
mov
mov
in
and
in
xchg
and
xor
shrl
cmp
mov
xor
xchg
daa
push
pop
pusha
aad
or
cmp
adc
or
sti
scas
ret
xor
dec
ret
or
add
lods
arpl
cmp
and
jae
push
jo
jae
filds
add
mov
call
fwait
dec
je
push
fxch
into
clc
dec
push
insl
push
sub
sti
push
js
xor
sbb
or
xor
test
stc
and
and
xchg
push
test
or
loopne
addr16
fcoms
push
mov
and
shll
sbb
loope
test
add
pop
add
xchg
sub
and
sbb
add
add
push
in
inc
andb
mov
pop
cmp
push
jmp
sbb
call
adc
xor
cld
ficoml
enter
adc
and
hlt
pop
push
xor
pop
inc
mov
or
adc
inc
adc
or
test
sbb
dec
push
stos
movsl
add
and
fcmovb
add
sahf
movsl
and
sbb
loop
nop
test
push
inc
jb
mov
mov
movsb
sub
pop
outsb
in
sub
nop
cmp
into
insl
push
jmp
sbb
mov
dec
pop
clc
push
pop
and
lret
lret
arpl
xchg
push
mov
out
es
fs
mov
sbb
mov
sub
xlat
xor
outsl
ds
fisubs
ret
cltd
idiv
dec
pop
mov
les
mov
jbe
mul
lea
shl
fisubrl
call
xlat
jo
addb
test
int
push
pop
or
es
cltd
jne
sti
fs
rcll
imull
mov
add
sbb
mov
lahf
cmp
in
enter
sbb
rcl
add
add
or
mov
mov
iret
xor
jl
pop
mov
in
mov
clc
dec
dec
xchg
and
jo
xlat
or
xchg
ret
push
xor
or
movb
inc
pop
andl
inc
je
mov
cmp
aam
aam
inc
lret
jmp
movsl
daa
xchg
and
push
lods
sahf
cwtl
xchg
je
xchg
sbb
sbb
repnz
cmp
cwtl
sbb
adc
xchg
jecxz
jmp
sbb
pop
push
mov
sbb
shrl
cmp
stos
or
xchg
push
sub
adc
xor
mov
fldenv
dec
test
lea
scas
jg
pop
add
add
movsb
add
fistl
and
inc
addr16
cmp
rorl
adc
push
add
and
mov
jo
rclb
push
clc
mov
push
pop
pop
add
or
pop
sub
push
or
into
into
scas
cmp
pop
mov
push
sbb
loop
adc
xor
xchg
shr
sbb
add
ja
adc
rorb
push
mov
sbb
imul
dec
xorb
call
xchg
add
test
push
je
subb
adc
jp
mov
loopne
inc
and
mov
popa
cmp
dec
inc
inc
pop
and
rcr
inc
rorl
lret
cmpsb
inc
xor
dec
pop
rcl
repz
adc
jo
or
mov
inc
mov
push
add
and
or
add
adc
inc
cwtl
or
add
pop
sbb
call
and
cmp
xchg
aaa
enter
cmpsl
enter
add
mov
mov
adc
inc
cmp
dec
addr16
xlat
fwait
sbb
pop
je
sub
orb
mov
adc
xor
jge
push
test
pop
xchg
adc
mov
sbb
xchg
push
cld
sbb
add
add
andb
xchg
mov
sbb
stc
ja
imul
push
sub
lds
or
mov
push
add
mov
cmp
arpl
adc
push
add
fwait
pop
scas
jo
xchg
orl
enter
lds
test
mov
lea
mulb
add
inc
dec
and
mov
xor
push
sub
xor
cmp
push
sub
leave
ficompl
je
push
dec
adcl
mov
xchg
sub
mov
popf
mov
lret
pop
adc
adc
and
sbb
xor
repz
inc
push
cmp
push
or
idivb
xor
fsts
adc
mov
pop
and
cmp
and
add
adc
lods
fisttpll
or
push
in
dec
xchg
ror
jne
pop
xchg
sahf
mov
xchg
test
inc
shll
push
in
hlt
or
sbb
xchg
stos
xlat
push
cmp
lock
popf
sbb
rclb
addr16
cmp
iret
add
fwait
in
add
dec
enter
pop
roll
xchg
add
sbbb
lahf
xchg
cwtl
push
cmpl
je
mov
filds
fwait
mov
cmp
je
mov
or
push
in
add
mov
inc
xor
pop
jne
nop
jp
add
lds
leave
and
add
xchg
sbb
push
push
xchg
dec
xchg
inc
lea
or
push
fcomip
jl
cmp
inc
cmp
lds
rcll
je
add
in
lcall
cli
mov
ficomps
in
xor
mov
ss
or
jp
int
mov
mov
dec
je
inc
pushl
lock
in
xor
cmpsb
pop
sarl
leave
test
shl
or
sbb
icebp
cwtl
mov
inc
dec
test
addb
add
push
pop
mov
je
lea
inc
outsl
or
cmp
pop
int3
fistpll
or
or
inc
jmp
jle
out
xlat
enter
sub
adcl
inc
nop
dec
mov
pop
aaa
jo
sbb
mov
xchg
dec
je
add
or
shrl
push
cmp
sbb
jge
pop
loopne
mov
mov
mov
imul
jno
adcl
mov
scas
mov
sbb
jno
aaa
push
jb
adc
and
push
mov
sti
mov
cmpsl
mov
push
shll
xchg
push
cmpsl
gs
push
subl
add
inc
test
ja
clc
in
scas
nop
add
add
mov
sub
sub
xor
push
inc
inc
xor
sub
xlat
sarl
and
lock
mov
push
mov
mov
adc
and
scas
ljmp
pushf
into
je
shlb
loopne
imul
or
inc
add
pushf
jp
icebp
lret
into
mov
sbb
negl
fdivrl
dec
les
dec
popa
push
jmp
push
pop
xor
and
sub
js
cmpsb
aaa
dec
and
sub
popa
enter
lock
push
push
adc
in
jg
mov
jl
sub
inc
mov
popa
incl
leave
add
add
arpl
inc
popa
mov
xchg
mov
mov
frstor
adc
or
xchg
cmp
fcmovnu
mov
fstpl
mov
sbb
clc
lret
outsl
inc
or
or
or
out
pop
mov
dec
inc
bound
cmp
jne
mov
mov
or
jbe
mov
leave
fisttpll
pop
jne
xchg
vmovlps
les
into
test
add
lret
mov
mov
jns
std
out
adc
insb
adc
test
xchg
mov
scas
adc
add
adc
mov
sahf
int
cld
cld
adc
test
mov
cltd
dec
pop
sbb
push
fcmovnb
mov
stos
cmp
cli
push
pop
popf
jnp
cmp
and
inc
aam
je
sbb
js
add
ret
js
insl
jmp
sbb
imul
fildll
or
roll
imulb
sub
xor
xchg
sbb
shlb
lret
add
add
push
xchg
icebp
jb
mov
push
dec
mov
cmp
pop
push
xchg
outsb
adc
int3
je
bswap
shrb
je
jmp
je
or
js
dec
repz
movsb
in
inc
stos
push
mov
sar
lret
lods
loopne
fcoml
sbb
test
push
xor
sahf
dec
dec
xor
sbb
sbb
lock
sub
push
cli
xchg
xor
dec
add
mov
popa
xor
pop
pop
and
inc
add
sub
sti
arpl
push
or
rclb
add
cmp
fs
fmull
and
jp
jne
or
adc
pop
adcb
popa
mov
out
push
mov
push
and
sbb
sub
repnz
push
cmp
rolb
xor
jl
pop
xchg
pop
pop
daa
ds
or
xchg
xor
or
scas
cmp
add
sbb
or
xchg
stos
out
xchg
adc
rorb
les
adc
cli
js
outsb
fwait
int3
clc
popa
bound
pop
sub
add
jns
xchg
pop
jns
add
jg
or
push
cmp
pop
or
adc
jne
pop
pop
cmp
aad
aas
lock
push
sbb
adc
orb
mov
into
pop
and
pop
sbb
subb
incb
mov
or
xchg
mov
mul
xor
roll
pcmpgtb
xchg
sub
sbb
ss
cwtl
loop
lods
aad
test
popl
jge
in
js
into
mov
nopl
push
add
push
ljmp
gs
outsb
mov
and
sbb
inc
sub
mov
push
pop
mov
loope
ja
push
push
xchg
ljmp
pop
mov
and
push
test
jae
jmp
mov
mov
cmp
add
es
xchg
jmp
jae
sub
jmp
sbb
mov
jmp
sub
mov
shr
pop
pusha
fimuls
test
adc
cli
mov
fldl
addr16
mov
push
inc
or
and
out
adc
mov
clc
mov
or
in
xchg
adc
test
stos
rcll
arpl
pop
cmp
imul
and
repz
sub
orl
mov
adc
fs
add
idiv
in
popf
mov
mov
lcall
jl
in
dec
mov
test
movsb
add
push
cs
imul
movzwl
pop
mov
cmp
or
lock
pop
rorl
pop
gs
inc
mov
pop
rclb
cmp
or
cmp
dec
xor
push
ret
mov
mov
nop
nop
jo
or
test
cs
ds
inc
out
daa
mov
insb
enter
mov
or
out
pop
push
push
dec
or
dec
fwait
add
inc
mov
mov
sarl
add
lea
andnps
pop
cmp
add
sbb
mov
mov
rclb
jg
pop
test
push
idiv
adc
je
mov
clc
add
cmc
mov
and
iret
adc
xchg
fs
sub
and
jno
xchg
push
into
jne
inc
aam
cld
dec
pop
inc
ja
sbb
mov
cmp
pop
ret
pop
xor
or
rcrb
dec
movhps
mov
adcb
fwait
mov
jbe
sbbl
pop
pop
xchg
sbb
std
daa
jbe
dec
in
pusha
xor
add
leave
jg
mov
sbb
js
or
sbb
sti
sysexit
clc
mov
add
adc
push
sbb
scas
add
xor
sbb
sbb
xor
xchg
mov
lea
jb
or
xor
sti
adc
push
rcrb
mov
mov
lock
ljmp
add
cmp
ja
ljmp
jg
int3
jbe
cmp
popf
jp
xchg
pop
jne
cmpsb
inc
and
mov
add
pop
adc
das
mov
mov
lea
pop
dec
push
mov
cmc
pop
mov
cmc
adc
cs
rorl
mov
mov
add
add
stos
fs
mov
jg
jo
sbb
mov
or
mov
adc
xchg
xor
push
push
xorb
cli
push
mov
mov
dec
inc
and
in
sub
mov
ss
and
or
rclb
je
imul
adcl
add
cmp
in
add
lods
pop
int3
xchg
cwtl
lock
mov
add
add
xorb
jno
test
out
adc
inc
in
push
sbb
pop
dec
add
or
addl
dec
pop
sbb
jge
subl
xlat
mov
data16
adc
adc
decl
mov
mov
cmovbe
mov
cmp
lea
jno
cli
imulb
test
pop
pop
ljmp
pop
outsl
push
sub
aam
pop
repz
fldl
push
adc
push
push
push
xor
data16
dec
cmp
pusha
fisttps
or
leave
mov
add
imul
push
test
mov
push
cmp
test
mov
and
pop
mov
xchg
ret
je
xlat
loope
push
or
xchg
mov
rorb
pop
scas
jns
inc
shr
pop
movsb
sbb
sub
mov
pop
add
je
loopne
add
fisubrl
stc
rcrb
pop
push
xor
jle
bound
push
fildl
push
lea
push
push
sub
or
pop
das
sbb
and
sub
adcl
pop
ret
incl
pushf
andb
jle
arpl
nop/reserved
add
pop
mov
enter
xchg
push
enter
outsb
add
cs
sbb
int3
mov
cmp
enter
xlat
imul
adc
ret
xor
dec
xchg
mov
sbb
js
cmp
and
pop
or
int
push
dec
inc
push
push
mov
js
push
inc
ljmp
xor
jmp
cmp
out
mov
inc
and
mov
repz
pop
push
lea
mov
lcall
mov
fsubr
jno
pusha
cmp
je
adc
mov
dec
dec
push
in
xchg
jno
jnp
mov
adc
rorl
add
sbb
fbstp
cmp
mov
in
push
pop
ss
add
lock
push
insl
xchg
addr16
pop
imul
ret
and
in
je
dec
add
daa
movsb
jo
dec
inc
hlt
pusha
add
adc
outsb
and
and
into
mov
cmp
outsl
jne
lea
mov
xchg
sub
andb
int3
jl
push
ss
push
gs
sbbb
pop
test
sti
cmp
dec
add
in
adc
jl
mov
or
sub
add
mov
add
jne
sub
adc
or
push
add
or
pop
fisttpl
cmp
je
and
jnp
sbb
jl
fnstcw
js
add
mov
sbb
or
xor
ljmp
xor
ja
sub
jae
notb
lods
mov
fists
mov
test
dec
pop
cmp
or
insl
adc
and
add
mov
mov
sbb
dec
fiadds
jbe
push
xor
sbbl
or
sbb
dec
cmp
push
cs
in
in
add
mov
cltd
add
sub
pop
lret
add
inc
and
sbb
divb
loope
aas
cmp
sbb
mov
sbb
pop
lcall
and
or
stc
or
sbb
add
sbb
or
pop
jp
adc
int3
push
inc
test
adc
pop
js
jno
les
dec
and
push
inc
cmp
jae
cwtl
adc
inc
pop
les
xchg
pop
in
imul
pop
and
cmp
addr16
cmp
incb
pop
out
adc
dec
push
test
xor
cmc
fsubl
loop
aaa
mov
push
cmp
jmp
adc
push
or
inc
pop
adc
pushl
mov
push
mov
or
jb
or
clc
std
inc
lods
mov
or
push
sub
rol
int3
adc
and
sub
rorb
and
lcall
fmul
ficomps
hlt
jp
out
cmp
pop
out
add
sbb
ss
pop
std
and
fimuls
mov
add
inc
pop
or
jp
jne
mov
cwtl
mov
fimuls
jl
push
mov
int3
xchg
or
ljmp
add
and
push
mov
loope
ret
ret
imul
aam
loopne
mov
and
sub
pop
jg
pop
aaa
mov
rcll
inc
sub
mov
cltd
into
lcall
inc
cmpsl
push
test
xchg
inc
jo
pushf
out
aad
push
aas
inc
fisubl
xchg
loopne
faddl
adc
xchg
insl
xchg
push
aam
scas
push
pop
jns
push
xchg
mov
insb
test
mov
push
inc
mov
add
mov
pop
int3
mov
xor
sub
sbb
js
lds
loopne
into
insb
push
push
xchg
ljmp
out
ds
xchg
lock
dec
aad
fstpt
jle
jnp
xchg
inc
lahf
adc
pop
int3
jge
enter
add
fadds
add
add
adc
notb
xchg
paddq
loope
ficoms
xor
cld
jbe
cwtl
dec
xchg
test
cmpsl
cwtl
mov
pop
pushf
fwait
jle
cwtl
out
sub
gs
jbe
jle
or
stc
cmp
pop
inc
in
and
xchg
dec
cmp
test
jb
sbb
aad
into
jg
pushf
mov
les
fistpll
inc
mov
or
cmp
jne
aad
push
adc
lcall
xor
xchg
add
push
inc
out
adc
sbb
int3
add
pop
sbb
les
jo
rcrb
adc
in
mov
sbb
popf
into
push
or
mov
dec
shrl
test
and
xchg
je
mov
dec
es
fimuls
and
inc
or
xor
addr16
push
or
dec
loopne
out
add
aad
push
sbb
test
dec
popf
mov
into
lret
sub
xor
or
pop
dec
add
push
jns
and
and
vpunpckhwd
or
push
jle
add
les
jb
or
xchg
icebp
sub
pop
aad
daa
aam
dec
pop
inc
mov
fadd
jmp
ja
jl
jg
shl
mov
jp
xor
lcall
pusha
inc
mov
ret
mov
push
pop
push
dec
outsb
jno
bound
pop
xchg
rclb
mov
hlt
xchg
xlat
add
fwait
lcall
inc
add
scas
pusha
outsb
lods
fistpl
mov
ret
leave
insl
sarl
add
dec
jb
mov
mov
push
cli
add
and
movb
shlb
fs
and
and
outsl
add
movzbl
ret
inc
lea
jbe
movzbl
les
mov
fsubr
pop
push
lds
mov
addb
rcr
test
or
rorb
test
xchg
sub
fld
pop
push
inc
addr16
and
sub
scas
pop
fisttpll
rcr
or
scas
mov
and
or
lock
mov
aad
sbb
lds
and
pop
sbb
lock
in
pop
sub
push
iret
aas
mov
xchg
inc
mov
and
jb
mov
fmull
dec
pop
pop
sub
sbb
lock
and
jl
and
dec
jl
xchg
clc
popa
xor
jb
orl
pop
and
dec
mov
aam
adc
rol
orl
clc
push
cmpsl
mov
xor
jb
adc
fwait
add
push
cmp
ja
jb
inc
push
mov
adc
push
pop
ja
jne
mull
xor
pop
dec
add
add
lret
pop
rorb
cmp
jns
dec
das
sbb
mov
and
inc
shrb
or
or
mov
xchg
push
hlt
jecxz
mov
mov
pop
add
push
cmovle
ds
inc
pop
push
push
mov
cmp
push
lret
cmp
sbb
or
lret
sbb
push
dec
or
xchg
cmp
pop
mov
fildll
add
insl
xchg
push
mov
inc
jne
aam
inc
push
push
jge
mov
fmuls
cmpsl
enter
rcrb
pushf
mov
fs
pusha
and
in
daa
popf
pop
movsl
pusha
ficoms
nop
or
and
sub
pop
mov
mov
dec
outsb
rclb
push
push
sub
enter
out
jp
and
adc
clc
inc
jg
push
mov
push
cmp
mov
repz
lods
mov
pop
iret
scas
and
or
adc
pop
lea
mov
loope
cs
adc
add
mov
sbb
jne
sbb
in
outsl
outsb
rcll
roll
pushl
pop
rorl
adc
pop
and
inc
enter
loopne
sar
lock
and
push
sub
cmp
jmp
movb
test
pop
pop
leave
ret
push
jge
or
cmp
paddq
or
xor
fidivl
sbb
ds
and
je
push
jbe
test
dec
inc
mov
jae
mov
sbb
sbb
in
daa
cmp
cld
aas
push
mov
xor
loopne
push
sbb
pop
aaa
fildl
andl
adc
adc
jae
sbb
xor
mov
andb
inc
xlat
test
imul
int
fxch
sub
push
rcrb
ret
ds
into
sub
sub
mov
or
cmc
imul
cmpb
jp
xor
push
sub
xor
sub
mov
rcl
add
xchg
jbe
cmpl
cmp
mov
sub
and
cmp
pop
icebp
outsl
bnd
xlat
xchg
not
jo
adc
jmp
sub
sub
inc
cwtl
scas
push
sarl
mov
add
loopne
add
dec
jg
push
lea
pop
bound
pop
adc
adc
out
xchg
clc
cwtl
push
mov
mov
fldl
add
sbb
pop
repz
pop
int3
sub
fwait
or
sub
leave
mov
aam
and
fildl
mov
fs
pop
push
dec
imulb
jmp
mov
mov
cmpsb
cld
lcall
dec
cmpsb
imul
mov
cmp
movsl
add
or
xor
add
fld
mov
nop
mov
pop
mov
rcll
mov
sub
cld
insb
jnp
and
or
rcrl
fldcw
int3
cltd
xchg
cmp
push
insb
sub
mov
jbe
jl
add
idiv
fstpl
push
mov
mov
adc
add
gs
je
add
and
and
sub
scas
lea
xor
mov
call
shl
push
sbb
sbb
je
sbb
adc
or
or
add
out
inc
xchg
add
add
and
mov
push
lock
or
ret
mov
xlat
pop
cld
sub
push
enter
xor
mov
pop
lret
js
push
or
sarb
fstps
fcomps
push
clc
dec
cld
jmp
lret
dec
mov
pop
xlat
in
stos
mov
xchg
xor
or
or
adc
mov
divb
orl
xor
sarl
adc
jp
xor
mov
in
movsl
adc
lock
rclb
repnz
mov
lea
stc
mov
add
je
shrl
mov
inc
fidivs
mov
mov
jne
out
add
mov
cmp
cmc
enter
pop
jg
cmc
pop
aad
test
adc
jne
pop
push
call
xchg
inc
or
or
ss
push
mov
push
lea
shrb
fcomps
ja
mov
or
test
adc
mov
and
pop
inc
cmp
jl
lcall
andl
add
cbtw
and
cmp
pop
jmp
pusha
add
mov
cmpsb
jmp
popa
and
fistl
sub
lock
out
push
adc
jb
faddl
jmp
sub
cmp
js
pop
loop
xor
sar
jnp
out
out
and
push
test
scas
clc
je
sub
or
lret
add
iret
icebp
or
psubsb
cmp
inc
mov
and
inc
mov
xchg
loopne
sbb
outsl
divl
xchg
xchg
push
sbb
inc
mov
mov
cmp
adc
out
mov
pop
mov
adc
dec
test
mov
jmp
dec
out
pusha
cmp
pop
ljmp
xor
push
sub
test
or
mov
jmp
sbb
sub
in
bound
xorl
mov
movsl
imul
insl
sti
xchg
movsb
push
pop
test
fidivs
lock
aas
lea
add
inc
insl
pop
mov
jns
mull
push
jg
mov
or
jne
mov
jg
sub
push
xorl
jb
sub
cs
inc
int
rorl
jmp
std
std
jmp
cld
and
fisubrl
or
mov
inc
inc
inc
sub
cmp
and
fsubs
xor
cld
jmp
mov
mov
cmp
fisttpll
push
add
arpl
adc
sbb
push
inc
insb
cld
and
adc
fsubs
xor
sub
scas
jbe
mov
pop
test
in
cli
cmp
xor
xor
int3
sbb
add
pop
xor
push
test
je
mov
jg
cmp
jg
lahf
mov
xchg
inc
cmpb
mov
xlat
or
sub
mov
and
mov
push
push
mov
or
stos
inc
mov
arpl
add
cmp
jae
clc
ja
jae
and
mov
jle,pn
pop
loopne
rcrb
ret
mov
lea
lds
shlb
in
lock
loopne
dec
sbb
add
cmp
cmpl
inc
mov
fistl
in
push
jge
dec
jge
mov
fidivl
scas
clc
lods
or
lods
inc
adc
adc
push
mov
sti
or
cmp
add
ret
push
in
mov
lea
xchg
movsb
xchg
pop
xor
leave
xchg
pop
xchg
roll
xor
mov
cmovno
cs
cmp
or
cmpb
pop
aas
rol
sub
add
dec
ret
add
inc
cmpb
pop
lret
jb
push
mov
mov
test
and
stos
pop
push
pusha
addr16
in
mov
data16
mov
sub
sbb
push
fs
stos
movsl
push
and
adc
cmpsl
sbb
insl
push
bswap
or
inc
jmp
sub
lar
sarb
lods
pop
inc
jecxz
pop
ja
out
bnd
test
pop
arpl
push
ss
jb
rorb
inc
data16
cmp
dec
sbb
fsubrl
movsl
mov
outsl
and
inc
mov
je
cmp
enter
cmp
test
test
shl
push
jne
push
subl
or
notl
loop
icebp
rorl
movsl
out
dec
leave
rcl
adc
xchg
xchg
je
ret
cwtl
xchg
insl
stos
mov
orb
cmc
ja
test
adc
sbb
repnz
push
push
arpl
push
orb
inc
shrl
bound
sub
push
jmp
loop
clc
push
jns
es
pop
dec
in
je
push
aaa
pop
test
jne
stc
pop
in
push
inc
pop
imulb
mov
jmp
push
inc
pop
aas
push
pop
aad
sbb
adc
or
adc
loope
or
cmp
insl
rolb
sub
fiaddl
xchg
stos
adc
sub
cmp
shrl
test
loopne
cmp
fdivs
aas
lret
sbb
push
xchg
scas
out
loope
call
push
add
clc
or
xchg
jae
je
and
mov
mov
inc
add
aaa
lea
popa
sbb
arpl
ret
test
es
out
xchg
push
cmpsb
push
jecxz
pop
mov
push
or
out
out
add
push
mov
push
inc
push
inc
adc
jecxz
test
pop
push
pop
scas
add
inc
data16
ret
jl
xor
adc
cli
ja
out
push
lcall
out
xchg
repnz
loope
pop
mov
popa
inc
mov
push
cli
rorl
loopne
jbe
aas
dec
jnp
imul
add
cs
inc
mov
xchg
adc
mov
int3
mov
icebp
loope
sbb
pop
push
int3
data16
or
xorb
dec
and
or
xchg
out
clc
clc
cs
inc
push
mov
imul
mov
push
adc
xchg
nop
adcl
mov
cmp
sbb
jge
in
in
sbb
shl
xor
mov
ss
adc
mov
xchg
sahf
adc
dec
mov
rolb
insl
fs
pop
push
test
add
xor
mov
add
ss
adc
adc
shl
add
adc
jmp
pop
and
push
add
repnz
ret
push
in
pop
rorb
lret
dec
imul
or
sub
and
add
jb
dec
cld
sub
sbb
dec
sub
enter
jmp
and
lods
cmp
std
cld
leave
inc
movsb
pop
cmp
hlt
je
push
jle
pusha
add
mov
mov
stc
rolb
push
sti
mov
or
mov
aam
inc
insb
lods
test
cltd
add
mov
or
mov
sub
stc
inc
jno
loope
or
je
mov
jle
cltd
xchg
rcr
outsb
dec
pop
testl
pop
loopne
add
push
jge
inc
ds
aas
and
push
add
push
inc
in
scas
and
mov
mov
cli
add
test
nop
les
out
or
ret
jne
lods
sub
jle
push
sbb
pop
adc
data16
push
push
adc
push
sbb
add
mov
pop
mov
addr16
test
sbb
out
outsb
and
mov
sub
rcll
ja
dec
sbb
adc
int3
cltd
outsb
or
cmovne
adc
lcall
add
sbb
insl
mov
xor
sbb
adc
and
adc
pop
fs
sbb
scas
and
inc
cmc
iret
cltd
push
add
push
adc
lea
xchg
adc
pop
adc
pop
adc
xor
add
mov
jp
outsl
shlb
mov
jo
xchg
iret
fs
mov
adc
push
fistpll
fadds
and
jg
nop
in
fadds
jge
dec
clc
sub
sub
jmp
sbb
jbe
push
add
mov
aaa
pop
push
inc
adc
push
or
jne
mov
rep
lcall
xor
or
addr16
mov
inc
xchg
sub
dec
sbb
push
call
arpl
fisubs
movsl
adc
call
pop
lcall
xchg
xor
insb
rcl
mov
adc
mov
ja
filds
and
ret
mov
mov
roll
testl
int
jnp
pop
imul
ja
mov
fs
inc
adc
adc
jne
fmul
cld
enter
pop
lea
scas
dec
inc
outsl
pop
push
push
push
and
mov
jp
popa
call
loope
jl
mov
add
mov
dec
mov
mov
adc
add
fisttpl
jno
outsb
xchg
jg
mov
push
clc
cld
push
sub
xchg
stos
js
xchg
incb
mov
and
ja
out
jl
cwtl
or
pop
cmc
cmp
jbe
inc
inc
sti
int
rcrl
push
sarl
mov
sub
push
dec
rcrb
push
test
dec
shlb
imul
leave
nop
sbb
jmp
outsl
sbbl
or
out
mov
sub
jmp
unpckhps
insl
and
adc
sbb
dec
or
stc
jo
jg
inc
dec
stos
jmp
xor
pop
cmp
dec
scas
add
adc
adc
comiss
sub
xchg
and
bound
inc
push
or
test
push
add
adc
in
sub
and
in
push
or
push
adc
jns
xchg
test
or
loopne
push
sub
js
loopne
call
sbb
sub
sub
or
jo
lods
dec
and
mov
cwtl
jne
mov
ss
ja,pn
addl
popa
or
or
repnz
or
jns
rolb
fidivrs
addr16
push
or
movsl
daa
movsl
fcmovnb
cs
adc
or
scas
mov
aam
add
daa
xchg
push
and
mull
xchg
insl
xlat
rclb
test
cmp
mov
jne
cmp
adc
jp
popa
fucomi
fidivs
aad
push
adc
lea
add
push
push
and
jmp
cli
mov
jo
or
sub
call
fildl
add
jne
push
int
xchg
lds
xor
pop
fisubs
sbb
sub
ds
outsb
outsb
out
add
mov
mov
jl
mov
push
or
mulb
js
ja
and
int
insb
pushf
xor
stos
addr16
lods
mov
movsl
test
stc
lock
jge
icebp
push
sbb
xchg
adc
or
xchg
orb
xchg
iret
or
faddl
pusha
add
push
adc
jbe
in
orb
iret
ret
fiaddl
stc
and
xor
daa
sarb
push
jnp
mov
sub
andb
pusha
in
or
dec
or
mov
xchg
enter
je
and
sbb
pop
pushw
test
push
mov
add
xlat
xchg
sbb
lret
dec
loope
mov
adc
or
cmp
push
and
sahf
mov
insl
sub
shl
pop
push
jmp
divb
or
stos
dec
arpl
pop
xchg
daa
pop
addl
sub
pop
orb
mov
pushf
shll
clc
dec
inc
jge
movhps
sahf
xor
lods
popf
inc
insl
cltd
insl
jmp
jne
adc
xchg
add
sbbl
jns
mov
dec
shl
mov
or
push
add
pop
sub
cli
inc
inc
inc
add
je
xor
pop
push
popf
icebp
ret
mulb
mov
or
int
jo
or
test
xchg
pop
mov
push
inc
or
and
and
dec
add
or
fistps
clc
mov
mov
lcall
rclb
jle
add
jno
push
xchg
adc
inc
aaa
ljmp
lret
jg
xor
add
jmp
mov
cld
in
mov
push
inc
cmpl
inc
or
jbe
cmp
mov
sub
nop
sub
add
stc
jns
add
or
stos
lret
idiv
push
mov
and
lea
fsubs
in
mov
data16
sub
iret
mov
enter
lods
or
in
jne
sbb
dec
mov
jne
push
ja
pop
mov
enter
xchg
xchg
loope
aam
loope
mov
dec
fists
sbb
dec
sarl
fwait
daa
sbb
leave
adc
lea
or
and
jne
mov
xor
pop
pop
inc
fcmovnu
loope
out
insb
loopne
rorl
cmp
inc
mov
mov
les
cmp
xchg
jb
ud1
adc
loopne
or
movsl
mov
add
xor
dec
pop
or
push
sar
mov
lret
xor
jbe
xor
sbbl
dec
outsb
nop
add
xchg
mov
add
aam
in
enter
jl
adc
insl
dec
add
je
jne
dec
jp
divb
lret
dec
jge
sub
in
or
adcl
pop
ljmp
fstps
mov
jge
adc
cmp
lock
lret
cli
rcrb
mov
imul
push
cs
call
pusha
sbb
stc
push
push
call
add
push
push
push
or
ja
cmpb
add
jne
mov
push
inc
adc
jnp
and
pusha
add
fistpll
subb
push
dec
enter
into
xor
xor
or
jg
in
fs
jbe
jne
add
pop
fsubrs
in
sahf
xlat
jne
js
pop
into
int
pop
lret
andl
push
push
in
ret
pop
adc
fcomps
test
je
pop
shlb
mov
test
scas
cmp
call
clc
xchg
rorl
mov
push
repnz
loope
aas
inc
and
pop
add
jl
push
sub
div
and
test
data16
js
pop
cli
sub
lods
and
inc
iret
hlt
push
sbb
je
rorb
pushf
fwait
call
mov
cmp
ja
mov
lock
lret
divl
lcall
lret
push
int
mov
sbb
push
mov
xchg
int3
fs
pushf
cmp
sub
inc
adc
stos
add
test
xchg
adc
add
negb
jbe
shl
ds
jmp
sub
or
pop
popa
cwtl
inc
bound
add
cld
loop
mov
push
push
loopne
sub
add
fs
push
fs
jmp
mov
mov
loopne
data16
cmp
adc
push
xchg
push
pop
cmp
push
or
icebp
pop
xor
sub
mov
icebp
adc
sub
les
or
adc
pop
push
iret
xchg
mov
lock
fdivl
pop
pop
mov
or
pop
xor
in
imul
pushf
je
sbb
lock
fwait
mov
lea
popa
sti
jmp
and
push
adc
jo
mov
and
mov
ljmp
dec
or
cld
mov
test
adc
cmp
add
push
stos
bound
and
imul
mov
das
fisubs
xchg
pop
call
stc
sahf
jne
push
add
push
loopne
adc
pop
sub
daa
xor
mov
or
cmpsl
adc
scas
mov
jmp
pop
lret
jbe
insb
out
push
cmpsl
inc
jns
mov
loopne
push
test
dec
mov
data16
pop
mov
adc
inc
std
mov
test
popf
xlat
and
rcll
faddl
subl
dec
push
sub
negb
xchg
lret
clc
cmc
call
push
loope
inc
and
pop
or
inc
ja
and
retw
pushf
push
or
mov
jo
jae
mov
inc
lock
pop
mov
xchg
and
add
stos
mov
mov
sub
cmp
add
movb
sahf
sbb
int
inc
lods
and
mov
sar
push
je
loope
js
mov
mov
sahf
mov
cltd
pop
ret
pop
shlb
test
jg
jl
jae
xor
sub
fadds
faddl
add
mov
pusha
shrb
pop
sbb
fists
cmp
jg
ds
jne
and
mov
dec
jo
push
push
adc
clc
cltd
push
xor
enter
xor
mov
je
stc
add
push
dec
cmp
push
repz
inc
cwtl
popf
inc
loopne
rolb
mov
in
xor
cmpb
je
outsl
js
hlt
add
inc
jmp
jl
push
mov
push
popa
pop
lahf
roll
jmp
stos
stos
push
pop
enter
dec
push
test
fucomi
inc
sub
imul
mov
xchg
xor
insb
pop
xor
inc
stos
sub
jmp
pop
sub
or
pusha
rol
aad
iret
pop
in
lea
popf
loopne
adc
xor
sti
jge
and
and
push
mov
imul
jg
icebp
mov
es
push
mov
xchg
sti
mov
or
or
addr16
jbe
xor
fstpt
fcmove
push
xchg
inc
subb
outsl
inc
push
inc
push
push
push
stos
mov
mov
in
dec
jae
and
push
dec
nop
mov
rcr
lret
mov
hlt
xchg
mov
inc
lods
cld
imul
test
xor
mov
scas
and
xchg
push
and
pop
mov
xchg
xor
sub
rorl
mov
lds
shr
out
cld
inc
dec
and
pusha
inc
dec
xchg
mov
dec
add
dec
mov
lret
sub
bndldx
pop
jns
stos
arpl
sbb
lods
mov
push
add
mov
push
fsubrs
loopne
push
jmp
or
push
xor
push
push
sbb
les
or
mov
adc
fdivrs
sbb
popf
aam
push
xor
xchg
clc
push
sbb
jb
in
popf
mov
add
insb
mov
ljmp
push
sub
aam
nop
pop
add
cld
cld
decb
pop
rorl
lea
out
mov
and
fxch
lea
cmpsl
test
pop
pop
dec
xor
push
dec
push
pop
sarb
xchg
add
mov
pop
mov
lods
out
pop
incl
shrb
sbb
or
inc
mov
mov
push
add
push
add
fists
jp
adc
pop
adc
push
mov
ret
or
or
pop
inc
mov
std
cmp
sbb
jno
int3
adc
int3
test
pop
mov
push
sbb
cwtl
ret
adc
out
imul
or
xor
pusha
add
mov
shlb
mov
or
dec
subb
push
jne
jg
dec
adc
mov
jmp
lods
push
add
add
mov
sar
fdivp
sub
mov
mov
dec
lahf
push
lret
mov
xor
clc
enter
xor
jmp
adc
inc
cmp
add
mov
add
lcall
shll
dec
js
inc
cli
ss
mov
mov
pop
mov
sub
ret
js
cmp
out
incb
cmp
test
inc
adc
imul
pop
decl
lods
fs
mov
or
push
push
into
jns
jg
mov
adc
rorl
gs
jg
outsl
push
add
pushf
fisttpll
add
and
jg
rorl
int
data16
jg
outsl
xchg
inc
add
push
jbe
fnstenv
pusha
jle
sbb
jg
sub
clc
sti
jle
jg
lea
dec
jne
jecxz
mov
dec
outsl
add
pop
outsl
adc
mov
decl
adc
jge
paddusw
sub
pop
sbb
test
mov
add
push
outsl
sbb
mov
stos
pop
mov
stos
mov
sub
inc
mov
and
test
push
mov
rcr
dec
xor
mov
xlat
movsl
push
cmpsl
mov
push
ret
fsubr
nop
sub
lods
ret
outsb
outsb
pop
mov
mov
mov
stos
cmp
mov
add
lret
je
in
xchg
inc
movsl
jmp
pop
sub
push
pushl
jmp
mov
cs
sub
repnz
or
pop
mov
inc
add
loope
add
jno
inc
pop
sbb
popa
mov
mov
movsl
and
loopne
ret
testb
sbb
add
inc
jb
xor
xlat
sbb
pop
add
mov
jnp
lds
je
js
cmp
add
out
pusha
add
sub
and
pop
test
lock
sbb
jb
fs
sub
lea
clc
jns
push
xlat
jle
das
jnp
mulps
dec
pop
call
mov
xchg
xor
cmovno
jae
lds
dec
notl
lea
adc
xchg
sbb
shll
repz
and
or
jo
aas
add
pop
pop
and
sub
adc
repz
rorb
aas
mov
aas
shrb
pop
add
mov
pop
push
int
mov
clc
jle
pop
fstpl
fwait
push
mov
sbb
jmp
xor
mov
or
adc
or
mov
and
test
daa
lods
fadds
inc
add
inc
mov
mov
loopne
movsl
fdivs
adc
xchg
pop
xor
popf
clc
lods
push
dec
pop
xchg
hlt
add
xchg
out
or
mov
mov
add
aas
movsb
cmp
and
dec
add
xor
sbb
in
or
adc
or
xchg
hlt
cmp
xor
sub
sbb
dec
lea
outsb
jmp
or
add
mov
sarl
mov
stos
add
push
hlt
ja
into
mov
mov
loope
lea
jns
fs
je
xor
push
sub
lods
and
inc
mov
test
jle
mov
jb
arpl
lcall
mov
popf
pop
adc
add
add
push
adc
xlat
push
cli
lcall
add
pop
arpl
mov
dec
jle
push
jbe
jo
xor
push
jnp
cmpl
pop
xlat
dec
test
and
inc
push
sbb
push
inc
and
xchg
and
push
dec
fisttps
push
xor
mov
fnstsw
push
mov
adc
je
rorb
das
jbe
mov
push
xor
mov
xor
je
mov
lahf
push
leave
sub
fsubp
setbe
test
or
in
and
fs
lea
jns
cmp
adc
xchg
addr16
loopne
jmp
mov
cmp
jb
lret
clc
adc
out
adc
cld
inc
add
aas
daa
mov
jnp
dec
add
ret
int3
sub
inc
mov
mov
xor
mov
roll
enter
call
and
jae
jg
mov
mov
push
aad
popa
ficomps
std
pop
popf
push
jno
pusha
or
add
push
and
mov
rorl
mov
shlb
inc
scas
test
enter
jmp
inc
cld
pop
stos
call
sbb
add
js
les
rorl
push
loope
push
loope
sub
test
or
cwtl
hlt
cmp
pushf
fildl
loopne
fdivrs
fldl
jge
jecxz
lds
test
xor
std
inc
arpl
add
jbe
jmp
dec
lock
cld
push
adc
adc
mov
mov
add
inc
lahf
inc
inc
fists
mov
cmp
jbe
push
rcrl
shll
adc
mov
mov
jge
test
popf
fcmovne
mov
nop
inc
mov
jns
xor
sti
bound
inc
mov
add
cwtl
push
mov
or
sbb
sbb
jbe
int3
cmpb
mov
mov
mov
mov
inc
jb
mov
dec
movl
fstl
cmpsl
cld
dec
aam
jle
je
add
or
out
arpl
insl
jb
repz
mov
clc
pop
sub
sbb
negb
ret
adc
cmp
mov
rol
mov
mov
push
push
cmp
jmp
imul
stos
test
adc
xchg
enter
nop
pop
or
orl
movsb
add
fcoml
shl
xor
dec
push
pop
mov
push
and
sbb
sub
cmp
inc
dec
mov
xor
xchg
ljmp
xchg
sbb
clc
fsubl
std
and
push
std
cmp
clc
es
and
inc
bound
test
adc
cmc
cmpsl
add
pop
mov
adcb
add
sub
js
nop
add
jae
dec
cmpl
cmp
add
mov
mov
add
sbb
add
imul
cmp
enter
shl
pushl
fcmovu
nop
stos
sbb
cmp
fnstenv
into
jmp
jl
cmp
xor
movsb
test
sbb
fsubl
sbb
fwait
lret
bound
lahf
mov
sub
mov
lahf
les
push
and
xchg
push
or
xchg
mov
xorl
jae
jnp
push
jle
push
les
push
sbb
addb
popa
psadbw
mov
jne
aam
push
add
add
or
enter
adc
daa
mov
xchg
mov
pop
je
adc
sub
dec
pop
repnz
jnp
data16
pushl
call
and
testb
or
int
inc
or
and
int3
or
adc
or
scas
sub
jne
dec
mov
fidivrs
sub
or
push
cmp
xor
pop
test
mov
pop
xchg
push
add
add
push
mov
adc
add
ret
pop
pop
sub
cmp
or
xor
add
loop
push
hlt
and
cmp
clc
xor
jecxz
pop
lods
pop
adcb
inc
lock
sbbl
and
mov
idivb
mov
jmp
inc
xor
push
fadds
inc
fmull
jo
mov
adc
inc
roll
adc
sub
ja
push
repnz
in
mov
push
sbb
pop
aad
cmp
orb
lock
int
or
stos
dec
test
cld
cli
push
pop
or
pusha
nop
adc
or
add
jle
movb
fcmove
pop
add
push
jno
dec
dec
adc
mov
cmp
sub
inc
rclb
popa
jne
scas
xor
cmp
andb
pop
in
adc
dec
and
or
rorl
cs
insl
adc
arpl
or
popa
add
sub
inc
fsubrl
or
sub
push
jecxz
loopne
rcll
dec
sbb
rorb
or
mov
dec
mov
xor
cmp
adc
and
adcl
mov
popa
sbb
leave
or
icebp
push
movsl
adc
mov
call
fisubrl
and
sub
hlt
ds
aas
xor
aas
out
std
ret
jecxz
cld
ss
inc
js
push
mov
adc
xor
pusha
insb
add
xor
xor
mov
aam
hlt
add
icebp
and
or
dec
xor
or
icebp
sub
out
mov
addr16
pop
movsb
std
ret
sbb
pop
cld
sbb
and
pop
xor
mov
into
daa
and
sub
jne
lea
mov
adc
je
sbb
push
mov
inc
or
mov
inc
push
sub
inc
out
push
fisttpl
jl
mov
inc
mov
je
mov
xchg
int3
shl
fcomp
inc
pusha
leave
fldt
fdivs
ror
fidivl
fsubrs
mov
cmpsb
push
icebp
rcrb
sub
dec
xchg
cmp
and
cmp
call
mov
push
and
fisubrs
icebp
pop
pop
or
je
pop
mov
and
sbb
es
mov
es
std
fildll
lcall
je
iret
jecxz
add
out
or
cmp
or
jne
xor
mov
lea
add
f2xm1
pop
imul
push
lods
xor
mov
les
sub
jle
jp
lahf
dec
cmp
je
pop
push
insl
inc
fcomi
pop
mov
mov
ret
or
mov
sbb
idiv
cmp
stos
arpl
je
and
push
inc
and
inc
xchg
pop
sub
xor
mov
add
pop
ds
jp
icebp
inc
or
cmp
mov
push
and
cmpb
sub
mov
inc
cmc
loopne
je
fwait
hlt
stos
out
hlt
adc
insl
or
fwait
lret
lcall
mov
ret
cmp
fistl
adc
sarl
mov
cmp
xchg
add
or
pop
clc
push
inc
mov
divb
mov
sbb
stos
bound
test
or
sub
int
gs
and
and
push
jmp
jl
es
pop
push
add
or
frstor
mov
or
sub
lret
xor
dec
push
loopne
add
push
ljmp
and
or
vmread
in
dec
inc
inc
scas
hlt
adc
xchg
loop
leave
sub
cmpsb
mov
decl
push
sbb
push
adc
pop
push
xchg
sar
test
shll
mov
ret
xor
mov
jo
cli
or
sbb
in
adc
adc
into
dec
inc
pop
in
mov
adc
scas
adc
stos
data16
add
out
aam
push
std
jmp
fldt
jae
xchg
jnp
inc
movsl
xor
cld
mov
jmp
mov
cld
push
mov
mov
xchg
inc
sub
dec
push
rorl
hlt
lahf
jns
sub
loopne
call
jns
push
leave
lock
inc
jge
sbb
jmp
ret
cwtl
inc
push
mov
pop
sbb
fcmovu
add
aam
add
add
xor
imul
je
jp
sar
mov
cwtl
jb
and
pop
mov
jne
xor
mov
xor
or
sti
xchg
pop
rol
xorl
push
and
out
mov
pop
adc
pushf
or
sub
mov
inc
mov
pop
jo
inc
jb
adc
xor
add
add
imul
adc
sub
xchg
sbb
ret
and
mov
jo
xor
mov
dec
push
les
inc
out
mov
out
int3
push
hlt
shlb
jns
test
fcoml
fadds
out
push
sbb
jb
pop
cmp
or
pushl
in
int
and
adc
adc
mov
cmp
cmp
sbb
sbb
fistpl
or
or
stos
loopne
repz
xor
mov
jae
jnp
inc
pop
pop
in
cmp
out
in
xchg
data16
loopne
loopne
xchg
lds
loop
repz
sub
add
mov
int3
inc
xor
aad
cmpsl
out
test
mov
mov
int
add
and
aaa
cmp
outsb
aaa
add
in
sub
mov
xor
ja
pop
cmc
cmp
mov
jl
notl
push
jns
add
push
mov
mov
rcrl
pop
mov
add
add
lea
mov
mov
or
sbb
lock
insb
mov
jge
push
xchg
pop
adc
mov
xor
insb
pop
mov
pop
sub
movsb
sbb
adc
fcmovbe
pop
or
lcall
mov
inc
xchg
cmp
sub
scas
inc
call
add
rorl
sub
pop
test
jl
mov
sub
pop
jne
pushl
repnz
push
mov
imul
fiaddl
aaa
jge
push
movsb
or
je
out
lods
mov
jg
inc
mov
mov
sbb
cmpl
pusha
push
push
or
lods
loopne
pop
sti
xchg
adc
dec
or
xor
daa
jp
insb
adc
jbe
addr16
arpl
push
xchg
cs
pop
dec
push
aad
stos
xchg
pushf
dec
adc
pop
dec
adc
fbld
ss
jo
jnp
mov
lahf
push
push
push
push
add
aam
push
add
rorw
jb
jle
sbb
test
sub
cmpb
mov
ja
lahf
xor
mov
or
mov
pop
notb
xchg
sbb
inc
inc
inc
sbb
adc
sbb
mov
orl
pop
inc
pop
fcmove
add
cmp
xor
scas
adc
dec
cmpsb
xchg
dec
insb
cltd
stos
jne
and
sbb
sub
mov
pop
cmpb
rcl
cmp
jecxz
add
mov
stos
xchg
xchg
enter
xchg
xchg
mov
rcr
cwtl
aam
cmp
cmp
push
mov
mov
sub
add
push
mov
pushl
inc
mov
push
call
fcmovnb
jl
loopne
cwtd
mov
adc
pop
add
pop
sti
and
push
sub
sti
in
sahf
jo
out
clc
out
mov
sti
mov
or
lret
mov
xlat
shll
fdivl
and
gs
ret
sub
cmp
cmp
clc
imul
inc
xchg
add
fabs
or
enter
loopne
mov
popf
mov
cs
outsl
pop
mov
shlb
mov
in
sbb
fs
or
xchg
ret
pop
pop
push
hlt
hlt
cld
fildl
add
fsubrl
lret
testb
in
sti
jo
insb
jne
mov
repnz
jo
push
mov
xchg
roll
adc
and
test
mov
lock
insb
or
lods
outsb
andb
lock
pushf
xor
pusha
and
push
lea
lret
enter
xor
jne
mov
sub
js
pop
inc
jp
int3
jge
movsb
mov
push
js
mov
sti
jae
adc
loope
pop
push
lret
push
sbb
jle
pop
adc
add
xor
dec
xor
fyl2xp1
push
mov
mov
dec
xchg
ret
nop
jg
addr16
hlt
sti
cli
mov
test
sti
sub
inc
clc
mov
pop
cmp
mov
sar
push
and
xchg
or
xor
or
call
adc
adc
cltd
mov
int
dec
lds
xor
aam
rclb
push
inc
inc
lcall
lds
jl
repz
add
push
int3
xchg
adc
add
inc
idivl
mov
mov
xchg
sahf
mov
pop
test
inc
mov
pop
rcrb
add
int3
mov
xorb
push
iret
in
inc
xchg
mov
or
push
in
sbb
jecxz
arpl
cmp
mov
adc
lcall
mov
mov
jmp
xchg
bound
xchg
lcall
add
ds
nop
ret
cmpsb
sub
jbe
dec
inc
outsb
clc
sti
aaa
mov
std
test
inc
jns
xchg
mov
cli
sti
call
sbb
xor
inc
lcall
push
stos
popa
push
add
into
cld
aad
mov
addr16
insb
mov
into
cmp
incb
mov
cmpsb
jmp
ds
adc
sub
sti
insb
rclb
mov
sbb
push
sub
test
sbb
fbld
sbb
daa
xchg
sbb
lea
dec
and
or
xchg
sti
test
lock
adc
leave
jns
clc
sti
lock
stc
mov
sub
mov
push
test
mov
or
mov
and
arpl
mov
sub
cs
push
out
dec
enter
in
push
or
sahf
inc
xor
dec
sti
jb
sti
clc
sti
data16
mov
jns
sti
clc
sti
and
stc
push
mov
mov
icebp
stos
mov
dec
lds
pmulhuw
cmpl
dec
and
xchg
sub
sti
movsl
sti
pop
dec
decl
jmp
cli
sub
inc
lock
or
sbb
add
sub
rep
sub
shrl
sbb
jecxz
out
sti
cltd
add
sub
test
adc
and
les
fistps
mov
sub
test
lcall
out
fwait
rcll
sub
and
inc
lahf
dec
xor
sbb
fsubrp
mov
sti
fdivr
lock
int3
call
push
xchg
and
add
xor
pop
aam
mov
in
jle
mov
mov
adc
xchg
lea
dec
mov
xor
jae
pop
jg
lea
or
jmp
and
pop
xchg
jge
mov
fsubs
mov
rcrb
jbe
pop
cmp
je
sub
movsl
mov
sub
mov
dec
sti
xchg
addr16
add
sarb
mov
lret
jo
hlt
in
mov
sbb
or
or
sbb
push
ss
jo,pt
cmpsb
jmp
int
sbb
js
jne
xchg
adc
sbb
mov
inc
add
addl
add
in
jmp
add
mov
stc
movb
mov
scas
insl
movb
adc
and
add
dec
icebp
push
add
enter
pop
and
cmp
cmp
inc
or
adc
and
adc
icebp
scas
and
sbb
inc
mov
jne
ficoms
in
subb
ss
add
out
inc
pop
sbb
add
push
cmc
cmp
cld
pop
add
sub
popa
lds
ror
push
aas
in
ficoms
xor
mov
lock
movsl
stos
jl
in
repnz
jae
ret
jb
add
lret
and
lret
push
mov
push
js
add
pop
in
repnz
loopne
dec
add
outsl
mov
mov
shr
xlat
mov
cmc
xor
cmpl
add
add
pop
loopne
push
push
js
mov
out
cmp
jecxz
sub
cmp
pop
mov
stos
jnp
jle
orl
arpl
jne
pushf
test
sub
jno
mov
inc
mull
cwtl
jno
pop
add
fwait
lret
jns
mov
loop
or
lret
jmp
fcomi
sbb
dec
lahf
cmp
adc
dec
mov
dec
dec
adc
sbb
adc
leave
mov
mov
lock
cld
and
sbb
ret
and
add
mov
into
mov
scas
push
out
jle
add
jp
pop
sbb
clc
sbb
jne
pop
xor
cmpl
ja
jmp
inc
stos
mov
add
je
loope
sbb
cld
mov
adc
inc
cmpsl
movsl
adc
dec
mov
jb
pop
cld
movl
lds
and
sub
popf
lcall
push
call
shll
inc
cmp
or
aam
inc
and
mov
add
add
icebp
xchg
mov
inc
mov
test
aas
and
jae
inc
orl
imul
mov
jg
iret
mov
xchg
ja
xlat
xchg
fistl
add
xchg
mov
add
cmp
lea
aam
cltd
sti
lahf
xor
idiv
lea
mov
pop
cmpsl
notb
pop
pop
fadds
cltd
pop
testl
lds
int3
push
lcall
add
shrl
sub
inc
mov
or
sub
leave
rcll
insl
outsl
lret
mov
loopne
fcom
outsb
inc
push
adc
test
pop
mov
mov
fmulp
inc
inc
add
loopne
adc
push
stos
or
inc
test
fdivr
inc
jne
sub
and
cli
mov
enter
inc
add
fdivs
pop
jl
pop
mov
icebp
jb
pop
test
out
scas
loopne
sub
push
mul
or
pop
pop
pop
pop
scas
out
mov
push
mov
rcrb
sub
sti
push
mov
pop
sbb
jl
in
ret
int3
add
sub
push
inc
or
mov
add
lret
mov
mov
cltd
jle
push
lret
and
jne
mov
popf
lock
pushl
jbe
cmp
and
add
fs
sarb
ds
mov
push
mov
xchg
mov
or
jno
add
push
and
or
iret
test
fistpll
sub
call
loopne
cmp
or
jg
adc
lea
jg
and
and
popf
jae,pn
adc
lock
fstenv
jg
insl
test
adc
aaa
and
and
cwtl
cld
fs
mov
fdivrl
and
shll
sub
out
in
push
sbb
push
cmp
xlat
jbe
fs
fimull
stc
sbb
dec
test
cltd
shrl
cli
mov
xor
sbb
xor
pop
adc
addr16
pop
mov
je
dec
inc
in
popf
je
xorb
xor
push
mov
pop
pushf
imul
push
sub
push
adc
and
test
ficoml
and
movsb
inc
sbb
or
fs
jmp
rorl
test
test
xor
adc
xor
outsb
adc
sub
adc
or
xchg
lret
xor
or
xchg
xchg
add
dec
call
jb,pn
enter
jg
push
rcl
sbb
sbb
pop
test
add
outsl
add
pop
mov
cmc
jl
out
pop
inc
add
jo
sbb
or
rorl
push
fistl
sub
or
push
jne
and
inc
call
xor
jge
mov
adc
pop
and
or
sub
sbb
mov
pop
bound
cmp
inc
pushf
clc
sbb
nop
aam
mov
sbb
negb
mov
add
in
push
and
cmovo
test
xchg
test
sbb
sbb
cmp
jmp
xor
loope
fstl
leave
iret
mov
mov
add
in
push
mov
les
jo
push
aad
loope
test
or
arpl
cmpsl
fstps
roll
clc
add
adc
pop
lcall
push
adc
sbb
inc
lcall
pop
add
popa
adc
push
or
out
adc
inc
imull
mov
loopne
or
push
test
std
cmp
fisttpl
xchg
adc
cmp
xchg
dec
out
leave
push
bnd
pop
add
mov
sahf
adc
mov
lock
fdivrs
mov
xchg
sbb
push
and
ret
int3
loopne
or
cmp
cmp
js
or
aaa
es
or
push
test
dec
pushf
addr16
inc
adc
add
xor
or
ja
sahf
lods
cmpsl
popf
int3
or
cwtl
push
in
insl
xchg
push
adc
mov
pop
inc
cli
add
popf
stc
mov
inc
and
lret
ss
or
push
inc
sub
dec
sahf
insl
mov
enter
int3
adc
jo
pop
cmp
rorl
mov
mov
test
adc
test
shr
out
push
in
lock
fcomp
mov
cmp
lds
pop
sub
inc
cmp
scas
cmc
fcmovne
xchg
sbb
enter
pop
mov
sbb
aam
sbb
pushl
lock
int
test
mov
dec
clc
pop
push
or
xor
ret
mov
or
ja
aad
xchg
jne
je,pn
int
imul
cs
jb
push
pop
out
mov
idiv
pop
lea
mov
inc
add
insb
jns
mov
insb
lret
insb
sbb
or
int3
sub
bound
ficoms
pop
mov
mov
or
mov
pop
sub
xor
inc
jmp
imul
pop
test
and
mov
pop
sub
sbb
xchg
cmpsb
mov
insl
xor
sub
inc
or
mov
mov
fists
aad
sti
outsl
neg
or
fdivrs
lock
inc
sub
jmp
cli
push
xor
pop
sbb
out
fisttpll
mov
pop
or
add
imul
mov
cmc
add
decb
sub
lea
or
dec
mov
push
xchg
xor
jbe
pop
adc
add
push
sub
cld
inc
inc
sti
mov
inc
scas
sbb
addl
ljmp
dec
in
pop
ljmp
jl
cmp
push
cmp
enter
adc
ja
add
fs
jae
divb
mov
mov
adc
and
pop
push
adc
pop
xor
xor
and
aas
int
fcmovnbe
add
icebp
incb
or
decl
cld
pop
enter
addr16
adc
add
daa
aas
in
pop
insb
push
push
jmp
or
push
push
repnz
push
test
add
pop
test
pop
xor
pop
adc
addr16
mov
pop
push
mov
jb,pn
push
dec
or
shl
loop
push
outsb
hlt
lret
lcall
mov
and
pop
mov
es
fstpt
add
push
sub
cmp
add
dec
mov
pop
cmp
mov
mov
jge
cmp
leave
and
sarb
out
mov
pop
jle
jge
lock
cmpb
repnz
jle
jge
add
add
mov
pop
test
repz
push
test
incb
popf
mov
lods
je
rcll
pmaxsw
mov
mov
mov
and
sub
push
leave
push
loopne
sbb
mov
mov
cwtl
popa
push
push
adc
jp
into
and
test
rcr
test
int
das
sub
cmp
sub
and
and
or
adc
jbe
in
inc
iret
jae
sbb
cld
sub
push
js
add
outsb
sbb
add
loope
push
push
add
push
mov
mov
mov
js
sbb
in
adcb
flds
jp
scas
xchg
neg
fiaddl
in
into
push
sbb
sbb
mov
inc
jbe
push
ja
sbb
shr
je
sbb
adc
jmp
int3
shr
rcr
or
jne
lock
aam
push
and
add
push
cmp
ja
cmp
push
pop
lods
in
add
inc
adcl
add
lds
xchg
xchg
ret
xchg
or
push
push
lcall
lods
sbb
jne
data16
cwtl
pop
or
ret
addr16
std
dec
jns
jmp
mov
bnd
jae
popa
xor
adc
xchg
dec
push
or
or
std
sbb
mov
movsl
dec
mov
out
jne
push
mov
popa
repnz
pop
xchg
movsb
xchg
xchg
data16
sub
repz
sbb
xchg
adc
or
pop
and
lock
sbb
mov
add
push
mov
lods
or
cmp
into
and
adc
adc
mov
xchg
pop
ret
inc
dec
rcrb
ds
out
cltd
ja
dec
scas
ret
fadd
xchg
cmpl
ret
dec
cmp
push
insl
jb
rorb
push
push
dec
mov
cmc
adc
push
sub
push
pop
push
sbb
add
xlat
jae
mov
lea
js
mov
jae
inc
mov
dec
sti
mov
sub
or
movb
xor
das
mov
aad
sub
and
push
mov
add
fs
out
push
pop
call
or
sbb
pop
les
sub
fsubrp
movsb
add
cmpb
and
lahf
and
insl
in
out
push
ss
jecxz
dec
jae
xchg
jecxz
mov
addb
jne
fldt
outsb
mov
or
imul
sahf
mov
mov
push
jl
mov
mov
jle
and
xchg
inc
fisttpll
mov
rolb
or
or
and
push
pop
add
mov
push
add
push
xchg
cld
mov
add
mov
add
cld
and
mov
inc
leave
xlat
cmpb
inc
and
jnp
push
pop
sti
aas
push
orb
jmp
movb
ss
cmc
outsl
dec
negb
or
cmc
and
cmp
push
or
popf
shlb
stos
push
fwait
xor
mov
push
xor
cmpsl
lods
jmp
mov
and
sbbl
push
test
sti
add
inc
and
adc
inc
mov
sbb
bound
push
test
hlt
mov
lock
mov
jo
pop
pop
fisubrl
or
sbb
jp
iret
lea
rorl
fists
cmp
sbb
mov
aad
or
push
sub
daa
push
inc
sub
ljmp
push
mov
cmp
inc
inc
mov
test
mov
ret
ficoml
mov
int3
sbb
or
push
mov
data16
cmp
jle
mov
mov
xchg
xchg
add
cmp
scas
in
jb
pop
or
mov
and
pop
in
adc
jno
loope
xlat
and
and
push
insb
cmpsb
push
push
jne
pop
fisttpll
push
or
clc
jne
aam
hlt
out
push
or
dec
hlt
imul
cmp
fstl
inc
mov
std
inc
adc
cmp
pop
add
or
mov
inc
mov
mov
repnz
mov
fstl
les
push
adc
jno
lea
push
push
or
and
lret
outsb
push
xor
add
mov
test
rorb
dec
dec
or
movb
out
lods
inc
pop
cltd
jmp
adc
cmc
stos
push
pop
repz
sbb
cltd
add
jp
inc
stos
gs
addb
and
inc
jae
pop
je
lods
adc
dec
aad
nop
data16
jmp
mov
or
pop
sub
cmp
dec
jl
pop
inc
shrb
jno
out
lret
rol
mov
adc
cmp
push
or
data16
cmp
in
aaa
add
sbb
sub
movsb
imul
xchg
adc
leave
inc
fistpl
ss
and
int3
leave
mov
xlat
add
movups
and
subl
fcomp
and
xor
popf
or
hlt
adc
fstpt
sbb
bound
sbb
aam
fidivrl
push
cmp
ja
jae
int3
stc
lret
mov
test
sub
ss
pusha
xor
xlat
mov
mov
add
dec
or
xchg
dec
mov
shlb
mov
mov
add
ja
shll
add
xor
lock
imul
adc
sar
jb
or
inc
or
and
sbb
push
push
les
test
adc
or
jl
jb
push
jae
andb
into
das
inc
xchg
push
jns
mov
adcb
and
movsb
movsb
mov
inc
outsl
fisubrl
insb
add
sub
add
pusha
in
gs
adc
stos
add
out
andb
mov
movsb
arpl
int
xor
mov
push
imull
ret
add
gs
xchg
or
loop
iret
cmpsb
or
mov
fisttpll
punpcklwd
cwtl
lods
ss
jbe
push
call
mov
pop
or
dec
bound
inc
or
xchg
je
lock
xchg
mov
or
push
xlat
mov
sbb
jo
in
inc
jg
lahf
aad
sbb
ror
jge
and
xchg
or
jle
insb
push
ffree
mov
mov
cmpsb
add
arpl
loopne
jl
lret
pop
idivl
add
sub
lods
into
mov
ret
fcoms
adc
fs
hlt
push
jl
jle
cmp
shrb
or
xchg
or
hlt
or
arpl
iret
outsb
out
gs
gs
mov
cs
or
push
rcrb
sub
mov
es
lods
mov
mov
mov
push
ljmp
out
add
shll
mov
or
cmp
xor
add
jo
or
adc
fwait
push
xor
icebp
out
pop
scas
mov
dec
pusha
and
test
fisubl
mov
jbe
xor
cmp
adc
push
and
or
pop
movl
pop
jle
nop
jge
outsb
cmp
jae
pop
cmp
iret
hlt
aas
xchg
cs
stc
jae
cmp
add
jns
push
cmp
pop
add
in
mov
xchg
cwtl
call
pop
loopne
pop
iret
pop
daa
aam
mov
out
mov
jb
pop
test
lcall
push
cmp
mov
out
mov
fwait
mov
notl
mov
test
xor
inc
sub
shll
lock
xor
pop
addl
mov
xor
inc
pop
jmp
das
les
test
or
or
mov
sbb
mov
pop
push
mov
sub
mov
insl
xchg
push
cmc
push
add
mov
jp
cmpsl
cli
int3
mov
push
mov
and
mov
cld
mov
lods
sub
sub
sub
sub
iret
sub
push
lds
xor
cwtl
xor
add
daa
loope
mov
iret
cli
into
pop
lret
jge
int3
shl
in
dec
sbb
outsl
push
adc
mov
mov
fstpl
ja
add
jecxz
xor
inc
push
sbb
mov
push
lock
mov
xor
ss
adc
dec
xor
sbb
adc
or
cwtl
or
mov
insb
sbb
push
loopne
sbb
fisttpl
fnstenv
fcompl
inc
dec
aam
add
mov
ret
sbb
xor
cmp
xor
imul
fs
mov
sbb
mov
and
sbb
xor
jo
sub
mov
push
lahf
dec
cmp
leave
mov
push
inc
call
lods
add
sub
daa
popf
test
insl
sbb
xchg
pop
mov
pop
in
mov
paddd
mov
push
mov
mov
pop
mov
mov
xor
test
pop
cmpl
mov
push
and
xor
add
mov
notb
sub
loop
dec
add
dec
xor
dec
mov
adc
pop
sub
bound
inc
insb
xchg
negl
outsl
mov
inc
mov
test
fistl
outsl
and
sub
or
pop
xor
sbb
add
cmpl
decl
adc
push
hlt
mov
aam
int3
test
jbe
cld
jmp
in
cld
cmp
pop
aad
jae
lret
add
int3
xchg
sub
xchg
push
inc
adc
mov
cmpsb
jl
push
cmp
sahf
sbb
out
je
and
sub
mov
and
cmp
and
mov
push
dec
sub
mov
and
mov
cltd
fidivl
add
mov
and
sarl
cmp
enter
cmp
incl
push
int
inc
or
mov
or
adc
mov
pop
out
insb
nop
xor
and
or
test
ret
add
movzwl
ret
imul
insb
mov
mov
lahf
bound
or
pop
sbb
and
test
add
mov
lds
ficomps
sub
pop
sahf
lcall
stc
std
xchg
and
ds
mov
sidtl
gs
inc
mov
movsb
cmp
in
jnp
mov
push
cli
cli
cmp
std
leave
push
imull
mov
xor
cmp
es
iret
mov
mov
outsl
or
xchg
repnz
sbb
std
adc
addl
xor
xchg
xor
lock
add
ret
sub
aas
lds
add
push
je
add
lods
lea
cmp
pop
insb
mov
add
fsubl
mov
cmp
out
pop
mov
fiadds
into
sub
call
int
cmp
mov
adc
adc
inc
jmp
mov
adc
mov
fnstcw
imul
ficoml
rol
or
jne
lea
sub
imul
in
mov
test
mov
mov
push
fimull
aam
test
push
shlb
int
jb
std
push
mov
stos
cmp
ror
adc
sub
pop
sbb
mov
sbb
repz
cmp
rolb
mov
cwtl
inc
rcr
or
push
cmp
call
xor
fistl
pop
lahf
jmp
aas
mov
push
mov
and
flds
int3
pop
fsubr
cmp
cmp
insb
push
inc
sub
xor
xlat
ffree
xchg
sbb
je
aas
sahf
mov
xor
int3
adc
mov
cmpb
push
and
mov
rcll
xor
shll
xor
pop
test
lret
and
lcall
fcompl
rorb
repz
inc
pop
inc
xor
inc
call
dec
pop
xchg
nop
clc
xor
in
pop
aam
dec
aaa
in
shll
mov
push
rcl
sbb
push
adc
movsb
sbb
adc
inc
movsb
dec
pushf
or
movl
aam
ret
lea
enter
or
popa
add
add
jl
and
add
sub
or
daa
mov
add
out
or
cli
adc
pop
lods
gs
mov
pushw
push
test
lock
mov
scas
fdivrs
and
cmpsl
push
xchg
mov
mov
add
enter
div
xor
mov
push
cs
pop
push
inc
mov
adc
decb
stos
mov
and
mov
push
mov
pop
pop
jo
push
or
xlat
pop
sub
ds
cmp
lock
add
jne
arpl
cmp
adc
cmp
insb
or
or
adc
loopne
call
xor
add
orl
sahf
mov
push
int
pop
pop
mov
cmc
adc
push
nop
push
sub
fcomps
test
or
fwait
sub
xor
fdivrs
cmp
xchg
mov
jg
call
es
cmp
pop
stc
sti
push
stc
jo
shll
sbb
push
mov
and
arpl
xchg
and
ljmp
and
jecxz
sbb
ja
add
push
sub
dec
lahf
cmp
dec
adc
roll
test
rclb
push
pop
jnp
cmp
sub
jbe
enter
test
add
sub
rclb
into
data16
mov
test
jbe
pop
je
js
sub
push
jno
cwtl
add
push
mov
or
leave
je
es
andb
lcall
push
mov
inc
into
insb
addr16
add
and
mov
push
ret
adc
subl
sarl
adc
movzbl
adc
hlt
inc
ds
je
jmp
dec
insl
clc
insb
sbb
jp
add
incb
sti
jbe
cmp
ret
or
mov
dec
adc
adc
mov
cwtl
inc
xlat
shll
ffreep
pop
xchg
shr
inc
into
sub
and
sub
or
xlat
add
sbb
pop
or
sahf
push
js
or
mov
ds
ret
fnstenv
bound
aad
loope
push
imul
xor
mov
push
add
sbb
xor
fldenv
test
in
or
rcrl
lods
sarl
movsl
jl
lea
adc
sub
adc
rep
pop
or
ljmp
daa
mov
cmp
xor
sti
inc
lods
mov
pop
jmp
push
arpl
shll
pop
adc
sbb
jo
mov
movsb
mov
mov
in
or
jl
add
cmp
push
jl
sub
xchg
mov
add
out
inc
xchg
sbb
lcall
movsb
mov
cwtl
mov
jge
lahf
ret
addb
and
mov
insl
lcall
addl
iret
mov
push
or
lods
or
rep
imull
jne
or
fcomp
jno
jne
rcrb
xor
jle
xor
or
sbb
ss
pop
ja
cmp
xchg
sub
leave
flds
adc
sub
mov
add
aad
push
push
push
mov
push
in
push
adc
in
mov
push
out
or
std
add
xor
mov
fildl
cmp
cli
or
bnd
xchg
xchg
sti
jbe
cs
or
rcl
mov
mov
js
in
dec
push
mov
mov
mov
inc
rcl
add
mov
inc
add
mov
mov
sub
sti
push
adc
add
addr16
add
mov
mov
add
and
jno
jo
mov
xchg
sbb
sub
lea
cli
xchg
dec
mov
ljmp
test
ljmp
add
mov
out
add
xor
xchg
scas
sti
mov
xchg
hlt
pop
mov
push
clc
mov
lcall
push
dec
add
nop
inc
adc
push
push
dec
jbe
or
push
sahf
sbb
and
pop
xor
adc
adc
add
adc
stos
jle
sti
lock
xor
push
mov
adc
subb
aaa
add
imul
sbb
adc
adc
enter
add
adc
and
cmpsl
lods
cmpb
das
loope
les
inc
roll
lods
arpl
sub
or
and
or
adc
lahf
jbe
sbb
push
cmc
pop
and
xor
xchg
sub
xor
xchg
xorl
insb
cmc
inc
or
pop
inc
xchg
enter
pop
dec
dec
fsubs
testb
pop
xorb
or
pop
pusha
xor
pop
jo
dec
xor
adc
idiv
sbb
mov
pop
mov
imul
jb
lock
dec
mov
or
mov
or
push
loopne
in
dec
jno
in
in
dec
lock
leave
dec
pop
mov
inc
pop
xor
push
mov
sbb
or
jle
mov
cs
xor
in
cmp
cmp
mov
gs
cs
dec
dec
in
dec
cs
sbbl
pusha
sbb
adc
jmp
push
ds
ss
int
add
inc
inc
hlt
fs
or
lret
xor
mov
push
scas
dec
or
sub
mov
adc
cmp
xchg
add
jns
jo
add
imul
add
in
nop
js
jl
mov
sub
cwtl
inc
nop
xchg
add
lret
sbb
loopne
call
fistpll
cmp
jle
mov
add
add
push
dec
and
sub
xchg
add
rol
sbbb
push
bts
ds
iret
lods
add
or
test
bound
mov
dec
push
pop
fisttpl
push
mov
pop
adc
mov
mov
stos
mov
pop
cltd
scas
add
push
js
fnsave
divb
xor
rorl
fstps
inc
push
sub
pop
test
pop
or
inc
cmp
or
sbb
rcrl
xchg
pop
pop
jg
dec
aas
out
inc
add
scas
mov
or
add
push
mov
outsl
lds
orb
add
add
xchg
lea
iret
pop
adc
and
mov
sbb
incl
cmp
popa
push
ja
fs
add
xor
push
dec
inc
cmp
push
add
pusha
lcall
in
and
add
add
jbe
jl
add
and
push
jb
add
imul
sub
rolb
fsub
mov
lock
sub
cmp
and
jmp
add
add
jle
add
out
and
pusha
sub
xchg
ljmp
sbb
add
push
jne
icebp
fcmovnb
inc
xchg
or
stos
adc
xchg
fnstsw
ret
sub
dec
mov
loope
adc
arpl
mov
jmp
add
movsl
pop
inc
push
sbb
sub
movsb
add
and
ljmp
dec
dec
sbb
ss
shrb
mov
jmp
sbbb
rolb
int3
dec
push
and
in
xchg
int3
push
cmp
hlt
pop
mov
testb
rclb
pop
cmp
leave
or
insb
sbb
mov
push
push
add
xchg
enter
xor
push
dec
jle
fsubs
mov
sub
sub
shll
mov
add
or
pop
add
ljmp
sub
mov
jnp
mov
pushl
mov
out
pop
mov
push
cmp
jmp
dec
sub
push
lock
ret
call
mov
inc
push
add
fs
stc
or
jmp
int3
int3
ret
insb
push
lods
insl
insl
mov
jns
loopne
mov
jne
mov
test
inc
cmp
test
add
add
mov
fbld
dec
pusha
mov
mov
pop
jne
or
movsl
call
add
dec
ror
ret
inc
les
sti
cmp
movsl
sbb
mov
mov
inc
xor
inc
fmull
notl
pop
cmp
icebp
push
popf
pop
and
mov
pop
jmp
dec
icebp
test
pop
mov
cmc
test
inc
mov
or
push
mov
push
aam
push
fsub
aam
test
cs
xchg
add
cmp
shrl
cmp
roll
or
or
sbb
sbb
xchg
into
shl
and
push
dec
movsb
lods
add
add
jno
xor
or
push
sbb
stc
jb
mov
jno
test
in
inc
or
fsubrs
dec
call
gs
sbb
iret
sbb
add
sub
xor
clc
dec
inc
push
sub
lock
jmp
or
adc
movsl
movsb
test
in
xor
mov
mov
lret
or
sbb
and
pop
or
iret
add
int3
add
sbb
and
and
pushf
das
xor
ja
inc
dec
bnd
stc
sti
movsb
stos
adc
in
mov
dec
frstor
mov
jge
mov
shrb
les
push
loop
sbb
xlat
movsl
and
push
mov
mov
mov
push
inc
es
jo
fs
add
or
adc
pop
push
adc
lea
call
pop
pushf
hlt
popa
inc
cmp
jb
or
add
clc
orb
mov
sub
aas
push
push
add
push
sysexit
mov
push
not
jns
orl
and
sub
sub
adc
and
sti
subb
in
push
jne
bound
in
sbb
fcoml
mov
hlt
sbb
sub
cmp
les
or
mov
jne
test
aad
fisttpll
fcmovnb
add
and
xor
sbb
push
rolb
pop
sbb
dec
idivl
xchg
rclb
xor
xchg
cmp
jmp
or
lds
sbb
cmpsb
sbbl
es
imul
cmp
jmp
xor
dec
push
mov
xchg
ror
mov
inc
dec
mov
in
sti
lcall
adc
adcl
ja
or
adc
insb
shl
pop
aaa
add
xor
ss
sbb
clc
stc
inc
xchg
shlb
xor
subl
adc
or
enter
adc
jle
jge
or
ret
insl
push
insb
push
push
ja
mov
je
mov
test
sub
dec
ret
dec
dec
inc
test
sub
lahf
scas
ja
or
je
sub
push
sahf
add
or
sti
add
jmp
inc
lock
decl
js
in
xchg
xor
cmp
movzbl
push
jmp
ficoms
push
push
hlt
idivb
lret
inc
cmp
shlb
push
enter
addl
js
cs
jg
orb
add
cmpsb
or
movsl
lods
mov
nop
adc
xor
push
cmp
or
insb
push
pop
test
or
jne
ljmp
and
and
pop
les
mov
push
mov
and
aaa
pop
shlb
aaa
push
imul
push
or
das
sub
test
push
cmp
sub
orb
dec
mov
fidivl
gs
mov
mov
das
push
dec
push
xchg
fcoml
jb
rolb
xchg
ss
out
into
andl
xor
add
lock
jmp
mov
cwtl
arpl
icebp
mov
bound
cmp
jle
insl
shrb
dec
and
inc
pop
cmp
mov
push
daa
push
or
in
sub
cmpb
lods
in
test
dec
repz
push
mov
dec
push
jl
inc
lods
cmpsl
stos
lret
hlt
jl
jg
sub
cli
test
adc
dec
mov
setge
movsl
icebp
lcall
cmc
lods
loopne
adc
or
mov
pop
pop
inc
into
push
push
popf
sbb
arpl
push
inc
inc
popf
push
mov
or
ret
mov
and
mov
adc
sbb
movsl
jmp
mov
push
and
pop
adc
inc
in
mov
stos
jbe
psrlq
and
add
in
sbbl
bound
stc
cmp
jbe
mov
jns
adc
jmp
cmp
mov
inc
imul
mov
ljmp
outsb
lea
add
mov
fists
cmp
test
xor
mov
xor
fiaddl
pop
add
mov
daa
data16
mov
xchg
out
inc
fstpt
pop
in
repz
jl
cmp
xchg
jae
mov
push
shlb
mov
sub
ss
cmp
xor
mov
sub
or
jo
mov
hlt
mov
fidivs
cmc
jmp
not
mov
test
sbb
mov
popf
push
jp
test
sbb
and
lock
and
mov
outsl
or
mov
int
mov
iret
cmp
scas
or
bound
cmp
out
sub
xor
hlt
nopl
jne
das
test
push
lret
push
adc
cmp
sbbl
pop
insb
aaa
mov
data16
add
push
dec
push
out
add
push
lcall
mov
push
mov
insl
fwait
add
sbb
sbb
mov
in
mov
in
out
insb
or
pop
mov
cmp
and
adc
sbb
popa
inc
mov
sbb
mov
movsb
dec
testb
call
std
fsubs
add
xchg
imull
jp
cs
pushl
enter
jmp
and
pushf
movsb
mov
adc
rorb
inc
jnp
loope
mov
insl
push
xorl
sub
add
jle
push
inc
xchg
fstl
or
dec
cmovne
inc
std
mov
jmp
jb
xchg
jmp
imul
cmp
fs
mov
adc
les
imulb
mov
aam
mov
inc
add
inc
jbe
push
or
cmp
push
jl
iret
dec
stos
fmull
push
add
test
jne
cmp
add
lea
cltd
das
cmp
je
xchg
push
push
cmpxchg
sub
dec
inc
fldt
rcrl
cld
pop
enter
adc
dec
inc
push
jmp
mov
adc
out
lea
mov
inc
fsubl
mov
sbb
test
jge
xchg
mov
or
dec
adc
sbb
mov
fdivr
dec
mov
in
mov
sub
data16
push
sbb
dec
adc
jne
push
push
jg
mull
adc
mov
ljmp
testl
aas
iret
push
pusha
bound
test
add
add
aam
sbb
push
adc
mov
sbb
pop
sbb
cli
adc
loopne
jl
adc
pop
clc
call
dec
jne
pop
ljmp
fstpt
jbe
mov
movsb
sbb
inc
dec
rcrl
add
dec
shlb
dec
adcb
jne
cmpl
and
add
and
aas
xorb
dec
jmp
mov
push
sub
cmpsl
lock
mov
outsb
popa
rorb
add
pusha
mov
movb
pop
mov
mov
xor
movsb
add
je
sub
lods
ljmp
add
add
pop
inc
mov
mov
and
mov
sub
cmp
fs
movsbl
sarb
jns
orl
rcll
push
xchg
ficoml
mov
aaa
fmuls
or
and
or
cmp
add
rclb
sbb
sub
dec
aad
jg
jo
ficomps
repz
mov
repnz
loopne
cmc
sub
or
mov
bound
dec
pop
adc
xchg
mov
push
add
inc
pop
mov
xchg
lea
xchg
aaa
or
rorb
xchg
mov
rolb
jle
dec
sbb
pop
add
add
pop
inc
adc
cs
sub
jmp
std
dec
mov
sahf
sti
adc
adc
cltd
les
ljmp
and
xchg
jp
push
daa
mov
jbe
mov
popa
outsl
cmc
stos
jne
pusha
mov
push
push
cld
std
or
aad
mov
das
aas
aam
fcoms
hlt
xchg
jp
iret
aam
fs
addr16
jmp
daa
adc
mov
nop
adc
rclb
push
mov
insb
inc
jmp
adc
cs
dec
sbb
add
int3
cmp
es
mov
xchg
mov
xchg
gs
sbb
mov
call
sbb
push
mov
and
addr16
enter
aad
cmp
sti
sahf
arpl
push
in
sub
cmp
scas
push
or
fstpl
shll
repz
lock
add
adc
adc
les
and
mov
mov
push
add
lea
mov
aaa
adc
or
aam
mov
cmp
or
xchg
mov
lcall
out
into
or
outsb
cmp
xchg
fidivl
add
mov
inc
ja
out
push
or
into
iret
cld
xchg
les
cmpsb
nop
sarl
push
inc
out
push
cwtl
or
inc
mov
jmp
push
lahf
push
mov
cmp
bound
xor
test
lds
sub
mov
into
push
and
stos
cmp
sub
push
or
dec
lock
test
push
ficoml
xlat
int
loopne
insb
or
out
push
test
js
or
loope
fstps
mov
jno
sub
mov
or
inc
dec
adc
iret
nop
add
adc
sbb
mov
add
jl
and
mov
push
mov
movsb
rclb
fistps
dec
add
pop
nop
or
les
mov
pop
bound
pop
repz
or
into
add
jmp
ljmp
pop
cmc
lods
sti
inc
mov
add
xchg
mov
int
sub
je
lea
outsl
lahf
or
xchg
sub
pop
nop
add
lret
movsb
and
shr
mov
xor
and
leave
pushf
daa
loopne
outsb
xor
cmp
loopne
adc
sub
dec
cmp
test
sub
xor
mov
repz
jecxz
add
push
mov
inc
sbb
cmp
or
mov
lcall
cmpsl
jns
mov
mov
xor
xor
inc
pusha
xchg
jle
mov
std
pop
adc
jmp
out
lds
inc
fmul
pop
rcll
enter
and
lods
xchg
insb
adc
inc
sub
pop
jl
cltd
sbb
cmpb
cs
roll
xor
cmp
dec
out
aad
jo
and
rorb
and
popa
lock
mov
xor
push
call
je
and
mov
dec
jp
sub
sub
xor
dec
add
xor
mov
orb
push
sbb
dec
cmp
add
icebp
inc
xor
mov
inc
mov
loopne
mov
out
sbb
shlb
jge
pop
mov
test
adc
lds
ficoms
adc
addl
outsb
xor
jg
outsb
add
push
cmp
jge
insl
inc
insl
add
inc
pop
cmp
dec
add
clc
mov
jnp
clc
add
or
test
fcoms
sbb
jb
roll
push
sub
sub
insb
pop
xchg
gs
incb
int3
mov
fdivrs
ljmp
sub
sub
push
into
and
fimull
repz
mov
push
add
push
pop
jnp
mov
lock
mov
insb
mov
inc
pop
rcll
loope
pop
mov
cmpsl
loope
adc
add
jge
mov
push
xor
aaa
daa
sub
push
outsb
mov
push
adc
adc
cmc
push
popf
adc
cmp
sbb
mov
push
xchg
mov
ret
popa
sbbb
lds
sbb
xor
cli
xor
in
mov
inc
sbb
leave
not
xor
push
negb
xchg
pop
mov
int
push
or
loop
pop
je
push
or
or
jl
push
jnp
push
in
pop
pop
lods
xor
ret
push
gs
ljmp
decb
cmp
sub
lea
ss
dec
add
sub
cmp
and
rorl
movsb
stos
pop
or
sbb
inc
sbb
push
mov
mov
xchg
mov
lods
add
ds
loopne
jbe
lahf
mov
scas
in
subb
popf
add
push
push
sbb
rcr
inc
pop
sbb
rorl
not
inc
jb
int3
inc
clc
and
mov
pusha
je
inc
pop
sub
bound
jo
pop
test
add
xorl
test
inc
je
jge
dec
hlt
fnstcw
pop
clc
jg
bound
jp
cmp
sbbb
lret
inc
mov
sahf
call
rclb
push
and
cli
or
movsb
sub
mov
mov
rcll
sbb
sbb
push
jo
inc
push
or
mov
pop
or
int
push
add
pop
add
and
and
cmp
or
mov
or
in
sub
sub
or
jne
or
and
inc
fmull
mov
push
add
test
in
lret
cmp
in
sub
popf
ffreep
adc
roll
and
inc
xchg
jne
lods
cmp
cld
cmp
ss
jecxz
daa
int3
xor
sub
fcoml
or
push
aam
xchg
mov
mov
mov
test
jo
xchg
inc
inc
sti
adc
jnp
popf
in
jne
arpl
call
push
xor
sbbb
mov
hlt
scas
nop
loope
push
mov
sub
fnstsw
mov
sbb
and
pushl
addb
add
in
adc
insl
xchg
push
sub
xchg
insl
or
cli
loopne
icebp
loopne
sub
xchg
lar
xor
les
les
pop
clc
popf
push
mov
sub
rcrb
add
scas
mov
add
xor
cld
push
pop
incl
dec
push
jnp
cld
mov
inc
enter
and
loope
or
pushf
pop
je
pop
cmp
and
ficoml
adcb
div
or
cmp
adc
and
sub
push
cmpl
fisttps
clc
int3
pop
xor
sbb
pop
sub
mov
fsubs
adc
outsl
roll
lret
sbb
and
insl
ret
mov
mov
clc
test
push
sub
adc
push
std
loope
pop
inc
xchg
andb
out
aaa
xor
aam
push
aam
setne
mov
hlt
pop
adc
or
push
push
jae
xchg
lret
cwtl
mov
adc
jle
push
out
out
shll
movl
pop
pop
mov
cmc
adc
adc
popa
xor
cmp
and
hlt
pop
andb
xchg
outsl
sub
sub
inc
call
or
cltd
sub
insb
sub
imul
mov
xchg
push
xchg
inc
bound
lock
add
sub
or
fadds
rclb
dec
add
add
outsb
jle
pop
ror
xchg
jge
outsl
cmp
inc
inc
mov
mov
or
ja
xchg
inc
inc
and
pusha
fsubrs
ret
inc
push
imul
or
and
sub
jmp
dec
push
cmp
ret
repnz
push
xchg
stc
fnstenv
jne
cmovle
shrb
dec
or
hlt
call
push
add
mov
mov
push
jmp
xchg
xchg
add
sbb
mov
lock
adc
je
xor
push
mov
daa
cmpsb
pop
push
cmp
pop
call
lods
push
insb
xor
add
ja
loop
test
jb
insl
mov
xchg
lretw
adc
dec
push
cmpsl
pop
or
enter
or
push
adc
sbb
push
jns
imul
push
testb
ja
sub
fiaddl
or
jbe
test
add
sbb
mov
inc
icebp
loopne
and
mov
push
sbb
mov
sarb
mov
fidivrl
jbe
int
or
leave
mov
adc
cmpl
or
cmc
jae
mov
jae
in
andb
push
je
pop
pop
cmp
jl
mov
pop
mov
adc
inc
mov
mov
xchg
cltd
push
pop
mov
adc
repnz
jmp
add
bound
add
out
and
subb
pop
push
dec
dec
cltd
mov
adc
push
dec
xchg
sub
sub
add
idivb
ljmp
stc
mov
xchg
sbb
arpl
sub
and
sbb
push
aaa
push
or
pop
or
pusha
repnz
test
sub
sub
mov
inc
sahf
mov
loop
jmp
pop
not
mov
sarb
test
pop
les
push
mov
popa
mov
cwtl
test
shlb
test
test
push
mov
in
pop
pop
mov
dec
mov
ja
out
inc
mov
fisubrl
lahf
mov
iret
push
cmpsb
jmp
push
aaa
jecxz
into
shlb
and
orb
add
dec
andb
sbb
out
dec
fsubr
add
call
subl
cmp
jl
testb
pusha
add
jns
test
pop
cli
pop
movsl
into
xchg
sub
bnd
push
je
adc
inc
jmp
and
lods
push
int
in
js
int3
add
test
call
xchg
pusha
insl
fcom
imul
incb
scas
or
adc
rorl
movsl
mov
cld
cli
lcall
adc
jbe
mov
mov
xchg
es
jmp
mov
cmpl
mov
pop
adc
sbb
jae
sbb
sbb
lret
cmp
push
mov
cld
sbb
insb
xchg
push
xor
nop
inc
shll
mov
xchg
insb
push
gs
aam
xchg
adc
test
call
fcmovnbe
and
movsb
jmp
negl
cs
cmp
iret
push
cmp
and
jge
or
push
sub
rorb
push
cltd
sbb
jg
test
pop
jb
dec
ret
stos
mov
pop
ja
fxch
mov
fmull
dec
in
fistpl
notl
adcb
add
cmp
dec
dec
mov
mov
push
push
adc
pushl
cmp
push
mov
mov
repnz
add
sub
loope
inc
sbb
ds
rcl
in
arpl
push
dec
cwtl
shr
stos
stos
inc
add
loopne
push
jle
je
inc
stos
dec
sbb
jnp
lds
sub
mov
loope
mov
arpl
jl
std
lods
ret
push
jmp
cmp
add
add
sahf
cmp
je
inc
and
orb
aaa
sbb
out
pop
rolb
add
xchg
adc
movl
or
push
outsb
sti
jns
mov
fistl
push
jns
pusha
add
xor
cmp
ret
jno
ret
or
adc
adc
lock
fs
dec
dec
cmc
dec
jne
xchg
insl
lea
call
inc
fsub
sbb
push
jg
sub
inc
enter
inc
xchg
xor
cmpsl
sbb
sbb
inc
sbb
add
mov
add
sub
pop
push
test
mov
dec
sbb
pop
sti
mov
dec
fiadds
mov
int
sub
lods
leave
cmp
insb
les
sbb
aad
stc
lcall
addb
mov
sub
adc
clc
into
jmp
dec
inc
push
inc
xchg
cmc
push
dec
add
aam
ror
pusha
sbb
xchg
and
movsb
adc
movsl
test
lahf
and
in
cli
inc
ljmp
sbb
push
or
push
js
cmp
mov
jo
jg
into
addb
hlt
xchg
xlat
pop
mov
sub
ss
jne
mov
pushf
in
adc
nop
js
mov
imul
insl
bound
gs
add
mov
pop
pop
mov
shll
lods
push
cmp
stos
fistl
mov
mov
data16
cmp
imul
sub
adc
lods
shrl
mov
jae
pushf
inc
or
adc
jmp
or
sbb
mov
inc
jl
jne
or
and
hlt
mov
inc
xor
hlt
jp
es
ret
mov
insl
test
imul
push
mov
add
adc
cs
mov
mov
pop
test
movl
jle
pop
add
fdivrs
imul
out
jecxz
jb
add
xlat
ja
jne
fwait
int3
add
je
test
push
mov
add
fwait
inc
rclb
jbe
pop
loopne
stos
inc
pop
mov
jae
mov
gs
pop
mov
push
fcoms
pop
hlt
or
mov
cmc
pop
sbb
sub
pop
in
aad
in
and
jbe
adc
xor
popa
inc
sub
push
mov
in
incb
and
fisttpll
jmp
mov
mov
fcomps
hlt
in
add
mov
rolb
mov
mov
adc
sbb
iret
jge
and
xor
hlt
jns
push
push
mov
push
mov
sbb
sub
jg
andb
add
adc
pop
dec
bound
stc
xor
push
and
sub
adc
adc
or
or
test
push
addr16
jnp
xor
add
scas
or
mov
mov
fscale
lret
in
and
xchg
inc
sbb
mov
lock
xor
xlat
je
cmp
adc
cmp
cmp
and
adc
stos
cmc
ret
inc
add
sahf
mov
or
sub
mov
fwait
inc
mov
in
add
jae
lods
stos
arpl
sub
pop
adc
xchg
jl
add
sbb
push
or
mov
imul
push
mov
jbe
mov
sbb
mov
jmp
imul
sbb
push
push
mov
loopne
sbb
pop
sub
mov
shl
pusha
jae
sub
cs
loop
mov
adc
pop
pop
andb
pop
jl
in
lock
inc
or
ds
mov
inc
mov
xchg
add
push
aam
dec
sub
adc
jp
jne
popf
loopne
aaa
mov
mov
xchg
rcrl
pop
sbb
add
popa
pop
fcomp
xchg
cs
scas
pop
jb
lods
adc
xor
shlb
rorb
sub
je
xchg
dec
ja
into
repnz
in
rcrb
stc
inc
jg
push
push
insb
dec
adc
lock
cltd
in
adc
xor
pop
xor
or
xchg
lds
flds
test
roll
xor
or
rcrl
jbe
push
int3
lea
jne
pop
push
inc
fidivrs
or
fwait
in
dec
enter
shlb
ret
mov
sbb
in
or
cld
aam
fdecstp
mov
call
dec
pop
xor
out
aas
and
loope
inc
clc
rcl
aas
cmpb
dec
xor
jl
lret
and
xchg
sub
cmp
mov
push
popa
xor
cmpb
cwtl
pop
fs
leave
test
jo
aad
dec
ret
enter
mov
xchg
cs
mov
ret
pusha
pop
mov
and
in
jb
jbe
cmp
lret
xchg
pop
jl
pop
test
clc
xor
mov
in
pop
lea
aam
push
cmp
stos
xlat
mov
popa
dec
xchg
outsl
pusha
mov
or
cmp
sbb
inc
stos
pop
jb
clc
cmp
shl
jo
adcl
ljmp
dec
es
or
or
cmp
and
movsb
mov
inc
loopne
mov
jg
sahf
mov
cs
inc
icebp
or
enter
adcl
nop
pop
insl
in
mov
lret
mov
dec
cmp
stc
pushf
daa
test
fnstenv
cmp
ret
inc
movsb
cmp
inc
mov
aas
dec
xchg
or
mov
push
pop
jp
adc
inc
outsl
push
mov
fistpl
leave
mov
imul
xchg
es
test
sbb
fistps
cmp
fldenv
in
add
fidivl
sub
sbb
dec
add
pop
leave
sti
sti
or
lea
or
cli
sbb
dec
dec
call
xchg
popa
les
gs
in
jp
jmp
or
fwait
test
dec
pop
inc
aam
adc
ret
fcomps
dec
push
and
nop
fadd
fistpl
cmp
dec
pushf
out
adc
mov
es
cld
data16
xchg
jp
sbbb
test
call
lock
sub
jmp
jg
cmp
in
adc
mov
fcomps
lret
ficompl
ds
sub
and
jnp
testl
pop
lret
insl
mov
cmp
imul
outsb
and
arpl
jo
imul
cwtl
mov
pop
lret
int3
or
fnsave
popa
insb
insb
jge
popa
and
add
loopne
arpl
jmp
add
sub
sub
sub
mov
jmp
push
add
inc
add
lods
aam
fisttpl
inc
add
scas
pop
jg
cmp
pop
or
push
mov
and
add
pusha
push
jo
cli
pop
adc
imul
add
adc
pop
fs
mov
add
cmovs
cmp
add
pop
imul
adc
mov
es
cmc
pop
das
nop
iret
je
das
adc
push
pop
xchg
lods
fistpl
mov
addl
bound
dec
lods
dec
add
jbe
and
xchg
scas
fwait
push
pop
jo
and
lds
push
dec
dec
jns
popf
mov
or
jnp
das
imul
mov
push
pop
xor
popa
adc
xchg
insb
or
ja
or
into
ja
mov
sti
push
addr16
popa
dec
jne
fs
pop
imulb
push
gs
sbb
fs
out
ret
jne
dec
mov
xor
movaps
insb
fdivs
jecxz
jle
aas
and
cwtl
insl
cmp
mov
add
add
or
add
fwait
je
add
xor
cs
or
out
mov
jb
gs
push
gs
es
or
movsb
shll
insl
es
cmp
or
mov
sbb
adc
pop
sbb
lcall
push
sbb
and
and
and
es
sub
decl
sub
xor
xor
mov
cmp
ds
inc
inc
inc
ss
inc
inc
inc
dec
pop
dec
dec
dec
mov
dec
push
adcl
pop
pop
pop
pop
or
pushl
fs
push
insb
cwtl
fnsave
jb
out
jbe
js
scas
jnp
mov
dec
jge
jg
inc
fidivl
js
je
jb
gs
insl
push
popf
cmp
sbb
sbb
add
push
insl
pop
and
mov
and
or
cwtl
jmp
dec
sbb
add
adc
xor
ds
xchg
inc
and
out
stc
test
aad
add
adc
xor
cmp
inc
and
sbb
lahf
ficoms
int
mov
mov
adc
sbb
push
popa
adc
addr16
sarl
jne
imul
outsl
pop
mov
dec
pop
imul
pop
insb
or
push
lahf
push
insb
push
sti
xchg
pop
daa
lea
jae
mov
sbb
insl
arpl
lahf
sti
rcrb
add
push
sbb
in
insl
adc
lds
sub
push
mov
push
in
jb
mov
adc
mov
adc
mov
push
sub
pop
shrl
arpl
cmp
hlt
arpl
adc
outsb
mov
mov
inc
xchg
xor
cs
dec
sti
xor
or
scas
and
cmp
pop
fcoml
mov
push
hlt
adc
xor
aam
or
outsl
ret
mov
jb
inc
sbb
loop,pn
dec
mov
mov
adc
shll
cli
repnz
cmp
aam
fdivrs
test
add
xchg
insb
dec
aaa
mov
ja
adc
inc
and
movsl
outsl
mov
pushf
adc
je
out
jbe
inc
inc
jne
sbb
mov
and
arpl
das
inc
cmp
jnp
or
arpl
cmc
in
out
mov
jp
iret
outsl
pop
xor
mov
cmp
lock
xlat
lea
jne
loopne
xor
inc
adc
insl
testl
inc
push
add
and
xchg
pop
das
pop
testb
push
jnp
inc
push
in
sbb
aaa
stc
adc
pop
out
add
xchg
popa
insl
and
add
js
mov
lahf
and
mov
or
sbb
cmp
movsl
mov
mov
lret
push
xor
sbb
jo
or
cmp
test
rcrl
mov
das
push
or
push
or
dec
sahf
outsb
repnz
or
and
in
and
adc
enter
or
mov
sbb
cwtl
int
xchg
daa
push
sahf
cmp
repnz
or
jp
cld
sbb
cmpsl
inc
movsb
inc
test
cwtl
daa
xorl
pop
int
add
push
pop
pop
or
mov
dec
aaa
add
cmp
pop
addr16
insl
jnp
dec
fldenv
ret
ss
inc
hlt
insb
insb
xchg
adc
into
push
dec
cmp
inc
in
push
jne
cmp
push
jne
inc
gs
push
push
popa
imul
jae
bound
jb
jo
add
inc
lcall
jge
inc
jne
in
jo
arpl
jbe
inc
dec
in
push
pop
mov
or
or
nop
mov
or
inc
nop
xchg
jb
push
fs
xchg
mov
fldl
or
aas
pop
cmp
addb
adc
mov
scas
insb
jg
rclb
mov
repnz
daa
cmp
and
mov
sub
pop
fbstp
loopne
sahf
fldl
or
pop
js
jo
add
and
insb
adc
dec
bound
je
dec
xor
and
daa
sbb
outsl
and
sbb
gs
arpl
and
data16
pusha
mov
inc
nop
and
jb
mov
adc
and
adc
mov
push
jns
rolb
ljmp
cmpsl
mulb
je
fdivl
addr16
fs
insl
das
enter
pcmpeqd
bound
sub
jne
inc
jnp
cmp
pop
pusha
and
jg
cmpsl
mov
and
mov
int
jnp
xchg
pcmpgtw
adc
enter
imul
mov
push
adcl
xor
movsb
mov
daa
sbb
popa
arpl
xchg
out
insl
outsb
jmp
pop
pop
sub
in
adc
pop
mov
hlt
seta
mov
cmovno
outsb
mov
or
loope
fsubl
xchg
push
xchg
sub
and
push
push
push
fdivl
mov
add
jns
je
sub
inc
movsl
push
fs
sbb
and
pop
ss
or
aas
sub
scas
outsl
imul
and
popa
gs
je
xchg
mov
mov
orl
sbb
pop
sar
dec
popa
pop
push
neg
icebp
je
jg
fwait
mov
or
sub
mov
and
shrl
pop
je
outsl
je
sbb
fsts
cmp
aaa
int
pop
or
jl
cmp
outsl
add
ds
or
add
sub
jl
jge
imul
xor
gs
sub
cmp
outsl
or
es
add
ds
xchg
mov
mov
xchg
cmp
das
sub
aaa
insl
inc
cmp
pop
push
call
jb
imul
pop
pop
imul
fs
xor
daa
insl
inc
mov
imul
xchg
xchg
jo
push
arpl
ret
loop
imul
out
sub
roll
mov
test
nop
test
shll
jo
or
mov
mov
inc
pop
call
cmp
xor
test
cmp
xor
cmp
dec
shll
or
cmp
shlb
add
cld
movsb
clc
xor
shll
lock
call
data16
fcom
rcrb
enter
mov
mov
lods
test
shll
js
out
popa
dec
push
inc
and
cmpsb
loopne
cmpsb
imul
rcrl
int
les
mov
xor
dec
mov
int
imul
mov
xchg
cwtl
sarl
lret
dec
add
sub
nop
cld
in
dec
add
xchg
push
fs
push
adc
add
inc
and
aaa
cmp
and
add
add
insb
flds
add
gs
movb
add
mov
fbld
add
sbb
add
and
pop
test
mov
add
incl
mov
mov
xchg
xchg
ret
xchg
cwtl
cltd
lcall
mov
jmp
test
mov
scas
ret
mov
mov
mov
mov
mov
inc
jbe
mov
leave
jg
int3
int
iret
add
rcl
aam
inc
xlat
fcomp
fcmovu
cs
fnstsw
loope
cli
jmp
mul
out
call
in
out
out
ret
repz
cmc
ret
idiv
stc
cli
sti
scas
std
jmp
mov
add
mov
test
sub
ret
or
movsl
dec
add
jg
lock
popf
jecxz
push
or
push
je
mov
push
mov
sbb
xchg
inc
dec
pushf
add
push
push
test
xor
dec
sbb
imul
push
push
jne
adc
inc
outsl
das
mov
add
scas
adc
xor
inc
push
inc
mov
mov
inc
add
mov
dec
add
and
add
mov
and
and
es
insl
pop
and
cs
cmp
outsl
imul
popf
insl
jecxz
pop
gs
imul
sub
pop
and
sbb
xlat
add
pcmpgtd
push
or
mov
pop
xor
or
push
ss
push
push
in
lds
or
in
stos
addr16
les
and
lds
mov
and
fs
mov
or
incl
incb
jne
lret
push
add
adc
pushf
pop
mov
inc
add
mov
push
out
scas
push
or
hlt
push
or
pushl
movsl
icebp
jmp
out
fisttpl
movsb
mov
aad
cmp
dec
or
jle
sub
mov
sbb
dec
jno
repz
test
call
dec
ljmp
mov
hlt
movl
sbb
std
sbb
mov
xchg
adc
insb
push
ljmp
jmp
cmp
or
pop
adc
aad
jno
mov
inc
aam
decl
test
shrb
or
insb
cwtl
addb
mov
lods
jecxz
mov
jne
ljmp
fcompl
roll
add
ret
adcb
push
mov
mov
pushl
cltd
xchg
mov
mov
or
or
and
or
ljmp
adc
push
repz
je
jbe
jno
push
mov
add
std
lea
mov
pop
cmp
movsl
in
lahf
mov
leave
sarb
stc
add
cmp
or
out
rcrb
push
sub
insb
fs
add
imul
aam
jmp
xor
outsb
pop
jnp
pop
cli
mov
adcb
cmc
fnstenv
ljmp
mov
sbb
ficoml
gs
data16
pop
popa
mov
jnp
std
mov
mov
aam
movsl
fisttps
idiv
fists
shll
jmp
outsb
xor
mov
sarb
add
in
dec
lcall
or
cmp
add
adc
or
and
ljmp
outsl
cld
and
test
or
sarl
fdivr
ficomps
leave
dec
sub
cwtl
sar
or
test
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
lods
incl
lcall
ljmp
cs
push
fdivl
or
test
mov
ds
decl
decl
or
push
in
decl
xchg
daa
scas
xchg
or
xchg
shlb
add
inc
push
imul
xorb
sub
push
imul
aam
cmc
sub
mov
test
int3
dec
frstor
fistpll
mov
mov
add
dec
jmp
shll
push
repnz
addr16
cmpsb
fldl
mov
ds
in
ljmp
or
scas
testb
pusha
jp
inc
imul
pusha
fists
xor
xor
inc
mov
pushl
mov
std
and
inc
ja
int3
add
mov
lcall
cmp
mov
pop
inc
sub
mov
sar
xlat
ret
cmpsl
mov
fldcw
ret
es
arpl
pushf
mov
insl
add
ss
cltd
test
lcall
pop
jb
sub
adc
insl
loop
sub
or
mov
or
call
mov
dec
jl
or
fiadds
clc
mov
push
outsb
sbb
int
mov
mul
ja
inc
inc
mov
out
mov
jo
ud0
cmp
adc
or
adc
imul
scas
bound
ljmp
ljmp
mov
loop
mov
push
addl
mov
cmp
repnz
notl
pusha
sarb
decl
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
sub
ljmp
repnz
lret
mov
xor
mov
add
push
xlat
int
push
fdivrp
decl
mov
jp
mov
dec
hlt
les
sbb
sub
aaa
mov
or
or
add
pop
out
add
andb
ret
push
sub
and
fcoms
ja
xchg
inc
dec
std
mov
enter
rorl
call
inc
jecxz
dec
mov
clc
jle
mov
sub
cwtl
xchg
adc
dec
adc
sub
decl
inc
std
popa
push
xlat
scas
cs
out
aaa
xlat
mov
sbb
test
sbbb
push
add
ljmp
test
jmp
push
inc
sahf
push
pop
int
icebp
incl
and
mov
popa
ja
insb
cmpsb
loope
icebp
out
repz
gs
fisubrl
outsl
xor
lahf
inc
inc
sub
outsl
imul
xor
out
pop
pop
and
pop
or
cmp
pop
cli
ljmp
pop
pop
jno
test
subb
test
sub
xchg
sbb
xchg
sub
mov
data16
test
cmp
jns
jae
dec
call
mov
cmp
ficomps
dec
jns
inc
jle
jmp
repz
or
ljmp
ret
mov
dec
hlt
mov
or
inc
lea
or
int3
out
dec
xor
or
inc
mov
mov
pop
cs
int
mov
decl
push
mov
ficoms
test
loope
xchg
stc
loop
xlat
bound
out
clc
ljmp
inc
mov
push
sbb
adc
and
inc
mov
cmpsl
imul
sub
fbld
out
and
rorb
scas
push
xor
xor
pusha
jg
or
loope
lods
out
sarb
mov
adc
stos
and
leave
ljmp
lret
jle
push
jns
cmp
imul
icebp
repnz
dec
push
mov
lds
jo
gs
pop
jle
repz
pop
jl
loop
outsl
icebp
rcl
cmp
mov
js
leave
mov
gs
in
ffreep
dec
cwtl
subl
cwtl
and
enter
lret
scas
and
push
ds
inc
int
fnstcw
decl
pop
push
add
inc
ljmp
ja
inc
xlat
ss
push
push
sub
adc
incl
inc
in
mov
ja
pop
imul
pop
and
ss
sub
xor
adc
cwtl
mov
ljmp
push
mov
frstor
cmpsl
aaa
out
aad
fdecstp
jnp
pop
scas
test
leave
mov
pop
clc
pop
xchg
xor
sub
lods
dec
mov
clc
mov
pop
or
loope
fisubs
lds
push
call
dec
in
mov
movsb
ret
addr16
dec
test
mov
mov
std
cmp
rep
jnp
call
cmp
mov
ds
ljmp
lahf
mov
cmp
icebp
mov
sub
jae
xor
mov
jo
cmc
shrb
xorl
sbb
pop
jno
xlat
mov
int3
mov
stc
adc
loopne
dec
dec
adc
mov
jo
mov
das
and
pop
insb
cmp
les
adc
sub
ljmp
inc
cwtl
dec
add
push
jle
cli
jns
or
cmp
popf
cmpsl
push
mov
fs
aam
cmp
pop
xor
cltd
div
ljmp
into
and
jle
push
xchg
sub
int3
bound
mov
xor
call
or
rcr
mov
pop
lods
ret
outsb
xchg
dec
insb
popf
mov
cmpsl
cmp
decl
gs
adc
jns
movsl
dec
mov
movsb
jg
in
daa
sub
repnz
repnz
rcr
mov
shlb
incl
xchg
aas
mov
adc
out
loopne
mov
call
jle
aaa
or
jbe
dec
divl
lahf
adc
jb
and
call
ret
aam
add
inc
add
test
jmp
lret
xor
inc
jg
or
dec
adc
cs
test
jmp
sti
push
sahf
fs
sbb
or
or
es
jg
in
ja
pop
mov
or
sbb
fildll
add
lcall
popf
repnz
adc
dec
jae
adc
outsb
adc
ljmp
dec
in
pop
loopne
dec
cmp
sub
stos
mov
or
cmp
inc
lea
test
icebp
push
cmp
out
cmp
cmp
outsl
jge
aaa
add
das
lock
mov
shlb
imul
out
dec
xor
call
jecxz
in
daa
leave
dec
sub
or
mov
pop
loop
out
mulb
sub
sub
cld
sub
ds
hlt
sbb
ljmp
mov
lcall
das
rorb
jno
dec
push
cltd
ljmp
and
push
jbe
icebp
pop
je
fwait
xchg
fmull
jg
or
and
decl
iret
jl
je
jns
push
inc
js
mov
je
mov
mov
call
outsb
das
fdivrp
cmp
add
pop
push
ja
add
sbb
outsl
out
repz
insl
arpl
sbb
shr
loope
cmpsb
gs
ss
add
lea
xchg
lret
xlat
dec
pop
push
adc
jmp
lcall
lahf
cld
arpl
dec
lret
mov
pop
stc
movsl
fstpl
inc
scas
lock
sar
push
mov
xorb
xor
inc
jae
cmovo
out
pop
sbb
pop
icebp
push
add
pusha
ds
jne
or
mov
mov
clc
push
mov
adc
movsl
aad
mov
pop
fists
mov
aaa
outsb
icebp
xchg
pop
cld
movsb
pop
int
pop
add
sub
ljmp
ljmp
lods
lods
sbbb
loope
add
loopne
iret
mov
fldenv
cmp
imul
aad
addr16
incl
dec
es
sysexit
in
push
sahf
mov
in
in
das
call
mov
stos
jmp
sub
imul
fs
sahf
insb
xchg
jmp
ljmp
adc
cli
sbb
sahf
mov
pop
clc
dec
sti
add
jg
ret
cmp
inc
icebp
dec
xchg
inc
or
mov
xchg
loop
decl
pusha
das
js
push
aaa
mov
fidivrl
jno
ljmp
mov
sub
cmc
push
fcomp
imul
test
fsubr
aam
inc
sub
mov
shlb
fsubl
or
and
adc
insb
lds
xchg
pushf
les
std
ljmp
mov
dec
inc
sbb
fsts
ret
out
mov
call
shrb
dec
lret
lahf
adc
mov
pushl
xchg
sbb
ror
sub
into
inc
out
xchg
test
insl
nop
cs
pop
or
or
jmp
xchg
stos
push
fs
shr
xchg
lds
inc
decl
dec
lods
jle
xchg
adc
pushf
mov
outsl
fsub
add
mov
ljmp
shl
lcall
dec
mov
loope
mov
sbb
mov
inc
mov
decl
mov
mov
push
adc
out
adcl
test
sbb
or
jb
xchg
mov
data16
stc
outsb
ss
jl
jmp
sahf
adc
scas
adc
decl
lods
lods
sbb
xor
inc
aas
inc
movsl
les
clc
mov
stos
std
outsb
mov
stos
xchg
mov
mov
sbb
mov
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
mov
mov
incl
mov
and
pop
dec
adc
mov
mov
mov
sar
sbb
ficompl
mov
jmp
dec
mov
fwait
scas
mov
push
xchg
jo
xchg
mov
fidivrs
imul
cltd
popf
out
inc
lock
call
pop
jge
loopne
outsl
adc
add
mov
decl
push
xor
jb
adc
lahf
sbbb
cli
xor
cli
jno
lods
inc
enter
lods
cmpsl
loopne
ljmp
addr16
or
outsl
into
int
or
aas
sti
mov
aas
sahf
test
xchg
loopne
int
mov
mov
fwait
inc
jp
ds
daa
mov
movsl
fbstp
add
das
or
in
inc
loop
pop
test
jg
dec
xchg
fstpl
iret
stos
sub
adc
sbb
ja
push
loop
mov
mov
jle
les
and
push
sahf
sbb
jg
or
push
fdivrs
lahf
aam
pop
adc
lds
sub
sbb
mov
outsl
mov
daa
in
imul
dec
jp
adc
pop
aas
cmp
lods
cli
sbb
cld
push
jbe
and
jg
arpl
push
int3
pusha
ret
xor
pop
pop
test
sbb
pop
ljmp
test
or
orb
das
lret
jnp
dec
ja
decl
mov
add
dec
mov
outsl
inc
nop
call
jle,pn
jg
push
out
sbb
fisubl
jo
out
mov
mov
or
sbb
incl
xchg
js
sub
pop
outsb
xchg
push
mull
cmp
ss
aaa
clc
pop
mov
in
pop
xchg
sub
clc
sahf
fildll
ljmp
icebp
cmpsb
pop
fists
inc
addr16
fwait
push
shlb
in
mov
fisttpll
cmp
push
out
arpl
addl
cmp
pop
sar
jg
ljmp
call
xchg
divb
stc
scas
push
out
aaa
push
or
jg
ljmp
jmp
sub
jmp
push
mov
in
pop
shll
mov
stc
sbb
ljmp
bound
jg
in
jmp
mov
in
sbb
arpl
cmpb
pop
push
sbbl
outsb
xor
jp
xchg
movsb
loope
mov
cld
shrb
sub
dec
cld
cmc
scas
repz
xchg
insb
sub
dec
leave
ret
popf
pop
cs
dec
shlb
push
push
pop
xchg
imull
sub
mov
pop
repnz
arpl
imul
xlat
cmc
mov
ja
jmp
ficomps
mov
ret
or
jmp
add
and
ljmp
xor
arpl
add
push
outsl
cmpsb
mov
cli
inc
add
push
or
lcall
adc
jg
int
bswap
fsts
cmpsl
test
lods
cmp
dec
cmp
jbe
andb
fcoms
add
incl
pop
iret
jb
leave
jae
and
movsb
push
inc
inc
sbb
test
pop
adc
dec
incl
out
dec
movsb
arpl
inc
fsubr
inc
clc
xchg
push
jns
stc
xor
xchg
inc
fidivl
mov
stc
mov
mov
lds
pop
imul
ljmp
xchg
xchg
push
fistpl
dec
call
pop
ja
loope
into
pushf
das
hlt
fistpl
jecxz
dec
mov
aas
shll
subl
jmp
loope
pop
pop
std
pop
pushf
dec
cwtl
ds
icebp
xor
subb
aam
into
mov
std
test
dec
call
mov
outsb
mov
arpl
lret
sbb
loope
push
adc
adc
clc
lcall
xlat
imul
stos
pop
mov
jle
xorb
imul
mov
jno
sub
fisubrs
dec
in
rcll
addl
dec
or
sbb
movl
lahf
push
cs
lea
fnstenv
mov
fdivrp
mov
jmp
pusha
push
sarb
mov
pop
jo
loopne
mov
fsubl
mov
jno
call
aas
mov
add
ja
in
lock
mov
nop
clc
popa
stos
xor
adcb
call
les
sbb
daa
inc
xor
inc
sbb
test
bound
clc
sub
nop
lock
and
sub
jp
movsl
xor
cwtl
jecxz
shrb
jns
add
rol
xor
jmp
ljmp
mov
je
add
jae
divb
sbb
jge
jmp
push
adc
add
cmpl
icebp
jle
mov
and
out
loope
push
ret
inc
dec
mov
pop
es
or
cs
add
repz
xchg
test
decl
jb
shll
and
push
adc
subb
and
inc
pop
stc
jno
decl
icebp
sub
loope
and
mov
lods
cmp
adc
lods
mov
pop
icebp
shr
mov
subl
jecxz
call
and
dec
mov
popf
clc
pushf
arpl
jmp
out
iret
mov
jnp
jae
stos
pushf
roll
daa
mov
or
sar
call
lock
add
adc
mov
aas
or
xlat
mov
jb
inc
dec
cmc
jecxz
jp
in
pushl
pop
inc
mov
std
pop
push
movsb
sbb
jecxz
or
mov
sub
test
clc
mov
push
test
adc
mov
test
mov
shr
inc
loop
dec
lcall
dec
add
pushf
loopne
sbb
loopne
stc
leave
mov
decl
orl
pop
or
outsl
xor
pop
adc
dec
push
stos
mov
mov
outsb
clc
bound
into
or
inc
add
loop
ja
scas
xchg
mov
clc
mov
out
clc
xchg
inc
and
dec
inc
loop
xchg
jns
inc
cmpsb
ds
xchg
and
test
scas
addl
call
inc
and
repz
push
inc
daa
mov
adc
push
shll
je
pop
rcrb
mov
and
test
sbb
sti
arpl
loope
inc
fdivl
hlt
lcall
adc
notb
jecxz
mov
clc
push
push
daa
jo
test
test
aas
inc
in
aaa
push
imul
ss
or
xchg
aaa
push
aam
inc
out
aaa
jge
or
push
scas
testl
pushl
mull
or
orl
push
sub
mov
lock
clc
scas
inc
in
xor
mov
xchg
aad
andb
cmp
in
jl
mov
ja
add
xchg
aaa
aad
int3
push
sbb
lds
xchg
push
call
aam
mov
mov
sbb
sbb
addr16
and
sbb
dec
sar
xor
pop
outsl
mov
pop
test
mov
sahf
fiaddl
dec
test
mov
jg
imul
mov
push
xchg
cmp
into
cltd
fnstenv
sub
add
inc
stc
mov
cmp
sbb
inc
ret
dec
add
call
add
cmp
lds
mov
movsl
or
aam
outsl
out
mov
clc
int
mov
mov
push
xor
push
mov
xchg
addr16
sbb
add
fisubrs
xchg
in
outsb
add
jns
xchg
push
push
push
stos
pop
ljmp
xor
in
jns
jne
add
xor
sub
sub
movsl
je
dec
mov
cli
pushf
movsl
dec
sbb
xor
cld
dec
test
pop
popa
in
pop
mov
movsb
mov
ljmp
std
add
mov
fs
pop
lret
or
xchg
xchg
idiv
call
push
sbb
xor
in
enter
and
push
xchg
mov
inc
inc
ficoms
sahf
mov
aad
push
mov
les
inc
pushl
test
xchg
sbb
loope
aad
xor
push
inc
addb
std
and
mov
xchg
mov
ret
adc
cmp
mov
outsl
std
in
repnz
lock
cmp
ja
adcl
ljmp
pop
xchg
jmp
mov
aaa
xor
cmc
imul
outsb
jo
push
xor
inc
fs
decl
cmp
lods
pop
jp
or
iret
cmpsb
cmpsb
mov
add
cmpb
mov
mov
aaa
ljmp
jg
rolb
and
and
imull
mov
jae
xchg
cli
lea
mov
js
sub
decb
dec
leave
flds
stos
nop
inc
ret
dec
cmp
dec
leave
xchg
fisttps
pop
jno
add
pop
adc
jp
jecxz
pop
push
pop
or
ret
scas
scas
call
lahf
xor
lret
mov
mov
imul
mov
mov
fcmovnbe
sar
test
lcall
jg
dec
pop
xchg
inc
or
ljmp
adc
pop
sbbl
decl
mov
dec
jnp
jmp
test
idiv
pop
or
fsubrl
ret
push
scas
push
inc
hlt
jge
mov
cmp
inc
in
lods
fdivrp
ljmp
cmpsl
in
pop
sti
fidivrl
outsl
test
and
ss
test
mov
dec
movsl
ljmp
outsb
incb
rcrl
and
inc
decl
xlat
cmp
dec
fsubr
jnp
jns
daa
push
lods
jno
or
cmpsl
sbb
lods
add
in
mov
push
mov
xor
je
fcoms
out
lods
inc
cmp
shll
and
into
push
xchg
test
jge
pop
imul
enter
pushl
inc
mov
mov
mov
pop
mov
or
sub
sbb
pop
mov
in
fs
decb
dec
push
xchg
lret
aad
xchg
xor
cmp
out
das
push
cmp
loope
movsb
push
add
fs
jmp
sbb
inc
shl
mov
push
inc
arpl
sub
push
iret
fcomps
add
xchg
decl
decl
xor
mov
xchg
loop
xchg
rorl
add
cmp
mov
sbb
rclb
fcomi
pop
cltd
decl
xorb
lock
int3
fbld
iret
pop
sbb
lds
mov
cmp
ljmp
insl
stos
add
add
mov
rcll
int
insl
mov
insb
jl
mov
and
or
in
or
pushf
mov
imul
mov
out
das
jnp
xorb
lods
les
loop
jg
int
lods
mov
adc
negb
outsb
mov
mov
repz
decl
inc
xor
les
sub
cmovb
xor
in
in
dec
js
fdivr
and
mov
scas
pop
jge
sub
scas
push
daa
enter
test
pop
sub
rol
xchg
pop
ljmp
into
aad
xor
sarb
adc
out
cltd
pop
cli
pop
dec
dec
xor
cmp
pop
sbb
xchg
pop
or
stos
repnz
dec
sub
test
jg
daa
adc
sarb
xchg
cvtdq2ps
mov
pop
inc
add
mov
jmp
idiv
or
stc
rorl
xor
or
jmp
or
imul
mov
and
ja
fcoml
or
mov
call
hlt
jo
push
mov
adc
addr16
out
jg
loop
xor
inc
or
movsb
or
mov
pop
cli
in
popa
pop
jnp
push
mov
pushf
in
addr16
test
lock
ss
mov
xchg
imul
mov
xchg
outsb
lock
jp
daa
cmpb
xor
imul
jle
dec
or
decl
aaa
int
add
cmp
imul
in
push
decb
push
test
adc
sbb
sti
ja
cld
dec
cs
jle
insl
sar
imul
roll
jne
cmc
cmp
decl
jnp
cld
aas
iret
mov
sub
cmc
pop
pop
cli
push
fwait
les
sahf
outsl
std
decl
sbb
adc
icebp
fs
sub
outsl
xchg
les
clc
lods
incl
jne
inc
int
jl
push
fs
es
jecxz
push
inc
mov
pop
ljmp
pushl
push
inc
repnz
testl
stos
xor
aaa
sub
push
and
or
pop
stos
or
fsubl
nop
add
out
loop
mov
clc
dec
mov
lret
repz
xlat
adc
clc
jno
faddl
adc
decl
shlb
dec
mov
mov
push
dec
mov
jne
pushl
jae
cltd
popf
aad
dec
and
ds
sub
push
sub
ret
push
jp
inc
jns
fildll
call
outsl
cmc
adc
aaa
jns
or
push
stc
adc
das
pop
sbb
push
sub
or
mov
cmp
jge
sarb
dec
mov
idivl
lret
cmp
daa
sbb
push
or
adc
mov
sub
xchg
lock
sbb
test
or
lcall
enter
mov
mov
ljmp
das
mov
pop
outsl
add
pop
out
push
lds
fcmove
or
jmp
aam
call
dec
stc
mov
mov
rorb
mov
jmp
sbb
jle
jbe
out
mov
dec
daa
jp
mov
cld
mov
push
aad
fwait
pop
lock
dec
outsl
pop
pop
cmp
faddl
jp
ljmp
mov
in
dec
sbb
sub
pop
mov
inc
mov
mov
fmuls
inc
mov
xor
repz
ss
mul
mov
cld
xchg
adc
loopne
orb
inc
je
icebp
dec
mov
jecxz
xchg
scas
sarb
pop
jb
hlt
jmp
jne
roll
pop
pop
mov
push
popf
adc
js
pop
pusha
ljmp
lcall
xor
or
test
jb
aam
push
mov
push
mov
inc
xchg
cmp
int3
aas
xchg
push
ljmp
pop
jbe
std
cwtl
dec
push
cmp
and
scas
add
sar
dec
push
lcall
test
shrb
lret
sbb
jmp
or
lret
in
pushf
bound
pop
ljmp
mov
insb
adc
sbb
lcall
sti
xchg
ss
lret
ljmp
dec
sub
xchg
inc
scas
or
sub
imul
sti
lods
dec
sti
pushl
pop
lds
inc
movsl
ds
mov
xor
out
xorb
aaa
sbb
jo
cltd
cwtl
pop
in
jge
insb
stc
dec
in
repnz
arpl
add
xlat
ja
dec
fstpl
cmc
fnstcw
jle
insl
xor
ret
loope
inc
and
call
nop
jle
inc
in
fxsave
push
xchg
fldcw
outsl
cld
mov
out
xchg
gs
shlb
push
lods
push
fisubs
cmpsl
das
xchg
xor
xchg
lcall
pop
and
lods
jecxz
mov
push
adc
mov
lds
mov
xor
sub
dec
lods
dec
sbb
pop
enter
push
ja
dec
scas
push
rcll
jg
call
mov
mov
sahf
ds
mov
clc
dec
aas
pop
add
jle
sahf
sub
add
xchg
sub
shll
push
outsl
and
imul
push
decl
stc
enter
sub
mov
lods
insb
cmp
xor
rcrl
sbb
dec
imul
ljmp
cmp
sahf
jle
push
sbb
cld
xchg
bound
in
cli
jo
push
jge
decl
or
test
push
addr16
call
or
pop
sub
ljmp
incl
pop
or
push
dec
sbbb
cmpsl
lods
xor
shrb
ljmp
shll
pop
in
ret
jae
aaa
in
xchg
mov
mov
int3
xlat
lods
mov
popa
lahf
lret
repnz
hlt
lret
lret
fnstcw
adc
shlb
and
fdivp
je
xlat
xor
dec
repz
cwtl
mov
inc
pop
cmp
sarb
push
inc
stc
ljmp
cltd
test
hlt
mov
sbb
jecxz
jae
inc
xchg
in
call
out
nop
out
dec
std
mov
mov
pop
je
into
hlt
loope
xchg
push
push
mov
jmp
and
jne
xchg
pop
cmpsl
fs
inc
scas
mov
cmp
test
mov
push
cmp
sbb
push
add
mov
mov
inc
xchg
dec
mov
lret
or
xchg
cli
pop
or
loop
in
xchg
outsb
jae
fbld
push
sbb
hlt
lahf
std
movsl
pushl
jp
cwtl
mov
xchg
cmpsb
and
pop
mov
lea
decl
sti
inc
test
mov
xorl
cmp
test
jmp
xorb
mov
imul
pop
outsl
sahf
ficoms
icebp
sahf
je
or
sti
jo
push
push
xchg
mov
call
xchg
mov
jecxz
sbb
outsl
stc
jecxz
movsl
insl
adc
in
jmp
xchg
mov
out
jmp
inc
scas
gs
mov
push
mov
mov
das
lea
mov
aas
pop
decb
mov
ja
data16
loopne
pop
outsl
into
and
jmp
loop
out
and
jg
cmp
test
cmpsl
cld
add
sti
fdivrs
xchg
ret
shl
pop
repnz
xor
insl
jae
not
cmp
enter
fisubl
xchg
inc
sarl
pop
fdivrs
and
cltd
mov
adc
add
jmp
or
outsl
pop
ss
icebp
lret
mov
icebp
jg
outsb
ret
or
punpckldq
jp
inc
ds
inc
xorl
ljmp
push
pop
inc
xor
dec
arpl
test
jmp
jmp
mov
daa
js
push
aaa
dec
std
or
ljmp
xchg
xorb
popa
roll
xchg
mov
js
nop
js
call
outsl
movsb
std
dec
fwait
jg
aaa
jg
push
insl
push
sbb
lods
call
push
orb
pop
push
adc
push
mov
cmp
push
jmp
lods
lcall
cmc
je
and
fwait
nop
pop
add
sub
inc
mov
adc
push
dec
ds
mov
insb
mov
out
xor
sbb
pop
xchg
pop
std
ljmp
dec
add
aam
roll
dec
mov
mov
mov
sbb
int
add
cwtl
scas
cmc
decl
mov
ljmp
outsb
mov
add
fwait
add
or
push
pop
xor
stos
cmp
inc
rcr
stos
push
push
pop
xor
lock
jg
dec
inc
cmp
testl
sbb
in
mov
cwtl
cli
dec
outsb
sub
sub
paddsb
das
cmp
mov
popa
je
pop
aas
prefetchw
xor
subl
jl
jnp
jno
mov
fsubrs
data16
gs
cmp
adc
aad
sub
push
add
js
inc
fadds
push
dec
jmp
addr16
xchg
inc
push
add
push
iret
inc
jg
outsl
jecxz
pop
rcrl
gs
pop
rcr
adc
cmp
xor
pop
pop
test
add
outsl
js
xchg
push
jo
jbe
push
imul
fnstsw
or
pop
cmp
dec
fisubl
outsl
push
clgi
jmp
test
dec
pushf
pop
xlat
jne
xor
adc
popa
jo
add
adc
cmp
xchg
test
fcoms
fs
mov
sub
sbb
xchg
lea
gs
pop
mov
insb
mov
pop
xchg
mov
jns
aaa
dec
fnstenv
adc
out
jge
outsl
jo
pop
imul
or
mov
fbstp
push
inc
push
scas
push
pop
in
mov
push
dec
icebp
xor
rcrb
adc
mov
adc
add
bound
jns
jae
data16
sbb
mov
movsl
test
adc
xchg
jo
pop
and
adc
dec
js
scas
jae
adc
push
jmp
das
cmpsb
or
cmp
das
add
cmp
sub
repnz
sbb
arpl
imul
jbe
ja
pop
mov
andb
es
push
or
cmp
es
fadds
push
add
xor
pop
pop
jmp
and
push
pop
popa
fstpl
jns
test
cwtl
and
and
dec
inc
movsb
xor
adc
mov
das
sub
pusha
add
jb
popf
and
out
arpl
and
pushf
cmp
mov
or
add
xor
jns
in
mov
add
mov
inc
xor
shll
push
lea
mov
and
mov
and
dec
cmp
mov
xchg
dec
and
add
neg
add
push
dec
dec
add
gs
cmp
aam
dec
push
mov
popa
pop
xchg
je
push
jne
scas
inc
mov
outsb
gs
mov
jne
push
pushl
mov
jb
jnp
pop
js
popa
outsb
or
jnp
mov
dec
inc
inc
aaa
lods
fidivrs
jns
sub
mov
out
mull
pop
or
jb
adc
fld
pop
jl
inc
jne
jnp
ljmp
sbb
mov
loope
or
and
xchg
cmp
and
ret
nop
repnz
xor
das
sbb
add
sub
lahf
push
fdivp
dec
mov
adc
clc
mov
outsl
fwait
outsb
dec
rorl
pop
aaa
jo
xor
mov
inc
imul
inc
fistl
movsb
imul
mov
int3
dec
popa
cmpl
or
xor
adc
test
lods
jmp
sub
les
xor
inc
push
xor
loopne
xchg
lcall
adc
and
xor
mov
dec
hlt
or
nop
out
in
rorb
push
dec
pusha
inc
pushf
inc
mov
inc
dec
xor
and
test
nop
inc
jno
frstor
adc
lock
int3
xor
nop
imul
and
popa
or
and
jg
mov
add
inc
aaa
push
jg
and
or
fcoms
insl
nop
fnsave
pop
les
dec
or
aam
test
mov
jmp
fidivl
xchg
sbb
mov
int3
pop
jbe
adc
or
mov
jle
daa
call
popa
add
xchg
lock
add
sub
mov
aam
add
adc
pop
pop
adc
daa
push
fistpl
lahf
data16
or
cmp
add
lret
sub
mov
pop
sarb
ds
add
dec
lret
in
xchg
fisttps
pop
mov
gs
sub
mov
push
xchg
dec
pop
sub
xchg
xor
or
mov
pop
lcall
add
add
cld
nop
dec
pop
stos
mov
cmp
and
fs
psubusw
add
and
pusha
mov
lods
fwait
popf
test
sub
jae
mov
mov
mulps
pop
adc
data16
addl
adc
sahf
sub
mov
mov
inc
mov
sbbb
mov
aam
and
mov
rolb
mov
outsl
cmp
popf
cmp
xor
add
jbe
push
scas
popa
mov
nop
xchg
and
xchg
or
dec
add
xor
test
aaa
test
outsb
out
sub
add
into
inc
add
rcr
xchg
jo
adc
add
in
adc
push
add
icebp
xor
mov
scas
aas
push
dec
xor
push
add
xor
jp
sub
shll
orl
xchg
sub
xor
fsubr
or
jbe
add
sbb
nop
inc
sbb
and
cmp
push
or
lock
and
push
popa
mov
aam
aam
adc
pop
pop
aam
int3
and
aam
fsubl
jno
inc
inc
mov
pop
xchg
xor
jmp
orl
pop
inc
orl
loope
idiv
sbb
jb
or
and
stc
push
and
sbb
jb
xor
les
jb
outsl
xchg
repnz
js
pop
adc
cmp
mov
pop
sub
dec
push
xor
add
rclb
pop
jae
add
xchg
xor
fiadds
adc
adc
roll
enter
mov
xchg
jae
xor
aas
pop
or
xlat
inc
imul
or
mov
xor
in
in
sahf
pop
pop
jl
mov
mov
or
add
or
add
or
flds
xchg
dec
and
sahf
sbb
nop
jl
xchg
push
popf
pop
enter
test
mov
xchg
orl
fisttps
ljmp
sahf
fsubl
pop
insl
add
dec
add
dec
xor
mov
pop
xchg
add
xchg
cmp
or
dec
sahf
jne
jne
jne
inc
notb
jbe
pop
cmp
jbe
jbe
pop
push
add
and
pop
add
add
push
js
xchg
daa
mov
add
add
cmp
leave
test
cmpsb
or
sbbl
pusha
imul
inc
push
stc
pop
push
xor
inc
push
sbb
dec
enter
pop
arpl
fcmovu
push
xor
add
xchg
daa
jge
mov
add
add
fiadds
jmp
and
pop
hlt
add
jns
add
leave
ja
leave
js
adc
adc
enter
pop
js
in
mov
vmread
push
js
pop
nop
inc
adc
jl
xchg
inc
je
fs
test
repz
leave
inc
fcomip
fs
inc
aas
cmc
jns
enter
or
and
xor
sub
cmpsl
ret
adc
fistl
dec
fsub
lcall
lret
add
arpl
bound
add
arpl
inc
push
dec
add
pushf
dec
aas
sbb
xor
popa
in
cmp
aam
add
dec
jb
ret
add
mov
loope
mov
pop
popa
jbe
xchg
xchg
xchg
sidtl
flds
or
add
popf
insl
dec
sub
shlb
push
sub
xchg
and
test
mov
xchg
push
dec
push
sub
roll
mov
aaa
mov
xor
push
cmp
testb
xchg
add
add
or
orl
sbb
jnp,pt
and
xchg
xorps
adc
add
push
orl
inc
orb
push
pop
add
ja
inc
pop
bound
shll
insb
pop
insl
stos
and
mov
das
xorb
pop
orb
push
xchg
sub
mov
or
fdivs
sbb
test
xor
enter
adc
and
and
adc
dec
add
fs
stos
sub
aas
add
in
mov
push
pusha
cmpb
jle
in
and
pop
mov
cld
js
inc
stos
inc
jle
xor
adc
mov
int3
cmp
and
das
aam
pop
iret
iret
push
cmp
mov
in
call
push
scas
in
mov
call
fiaddl
rcr
and
stc
cmp
imul
lcall
cmpb
lcall
lcall
xor
and
lcall
adc
lcall
cld
pop
shll
clc
lock
aam
cmpsb
imul
cwtl
movsl
imul
cmpsl
push
aaa
fmuls
add
add
sarb
lcall
imul
sbb
or
xor
movsl
mov
cld
hlt
in
in
shll
mov
rorl
das
jl
jo
shll
adc
popf
cmpsb
mov
enter
jbe
nop
add
les
aas
push
jmp
or
sub
cmpb
add
xchg
cmpsb
test
fisttps
dec
push
xorb
imul
jg
push
out
aas
inc
stos
int
sub
sbb
in
xor
rcrl
xchg
mov
jg
gs
adc
insl
add
je
xor
add
mov
xorl
dec
mov
inc
sbb
insb
cmp
flds
mov
xchg
nop
push
xor
jecxz
xchg
add
dec
jo
adc
cltd
xor
or
test
sub
fldenv
mov
mov
ds
sbb
loopne
or
stos
lcall
mov
std
jg
cltd
outsl
imul
jb
sbb
inc
repnz
outsb
addr16
and
or
aaa
pop
outsl
pop
out
xorb
ja
xor
push
add
pusha
inc
inc
adc
stos
ljmp
push
int3
add
push
call
js
lds
rolb
lcall
or
fldt
fdivrs
pop
out
cmp
mov
fbld
pusha
ljmp
rol
push
inc
jl
add
leave
sub
lods
mov
jno
mov
cmpsl
inc
pop
jno
dec
inc
mov
cli
ljmp
std
pop
das
xchg
push
jmp
js
lea
mov
icebp
ljmp
pop
int
jmp
jb
jge
out
cmc
sub
xor
xchg
aad
cmp
xor
ljmp
inc
std
ret
adcl
jbe
xchg
out
cwtl
pop
jns
mov
lds
outsb
mov
cmpsb
lret
push
sbb
xchg
mov
in
sbb
pushl
inc
sub
cltd
mov
inc
push
outsl
jae
ds
inc
pop
frstor
icebp
or
decl
in
scas
add
clc
shlb
push
das
mov
fidivrl
cld
ljmp
pushf
fldenv
pop
push
adc
jl
push
or
arpl
fcos
in
mov
je
shlb
rol
mov
mov
test
pop
incb
arpl
fimull
imul
outsb
xor
out
lret
adc
div
loope
cmp
stc
sti
lock
mov
cs
popf
mov
dec
insl
shrl
imul
cmp
inc
jb
adc
and
jne
inc
dec
out
dec
ss
push
fdivs
in
mov
sub
xchg
ljmp
push
imul
sub
pop
push
and
sub
mov
xlat
cwtl
xor
call
aad
gs
pop
add
into
int
sarb
fidivrl
xchg
sbb
pushl
dec
cli
icebp
pop
out
iret
and
shrb
push
insb
loop
loopne
rcrl
pop
ficomps
pusha
or
jle
mov
mov
pop
push
dec
test
jmp
clc
xchg
push
aad
mov
stos
fninit
mov
stos
inc
fnstsw
add
inc
mov
adc
repz
ljmp
jmp
xchg
lret
add
xor
fldenv
add
pop
jns
inc
scas
sbb
lds
rclb
mov
incl
rolb
shrb
movhps
cmp
add
pop
ljmp
incl
imul
jne
mov
inc
and
xchg
outsl
push
push
stos
cs
pushl
in
mov
sbb
arpl
push
fdivrs
dec
sbb
lods
cmp
push
and
shl
das
fsts
cld
daa
pushf
xlat
mov
mov
ljmp
sub
aad
xor
mov
or
mov
push
fmul
sub
and
or
dec
enter
cltd
sub
mov
aam
adc
or
fs
rcrl
in
test
in
and
js
xor
mov
sbb
inc
push
mov
add
inc
aaa
add
orb
bound
gs
mov
std
imull
popa
je
icebp
insb
imul
and
insl
insb
mov
inc
xchg
jge
jae
jbe
arpl
or
mov
and
mov
je
hlt
pusha
mov
jae
fs
ret
addr16
insb
sub
add
jns
push
ljmp
jae
inc
push
push
sbbl
ret
push
inc
or
fwait
adc
and
sbb
pop
push
ret
sbb
add
and
mov
andb
add
and
mov
int3
add
popf
add
and
dec
je
push
push
mov
jbe
imul
xchg
or
outsb
add
jae
mov
fs
push
sbb
push
outsl
xor
daa
add
psubsb
xor
dec
movsl
outsb
adc
xlat
jo
add
bound
lret
in
mov
dec
xchg
inc
mov
sbb
fs
jp
jb
inc
js
pop
insb
test
outsb
dec
clflush
pop
pushf
outsl
outsl
mov
enter
jo
push
out
fisubl
jae
test
flds
in
push
inc
mov
jo
inc
outsb
jbe
outsl
mov
push
arpl
mov
iret
or
dec
pop
jo
dec
cmp
jb
jns
and
int
sbb
outsb
pop
cmp
fs
dec
mov
jae
adc
mov
jle
inc
jne
xorw
inc
gs
insb
mov
push
outsb
ja
fistpll
int
arpl
in
mov
insl
push
imul
sbb
mov
lret
rorb
outsl
cmp
andl
sub
enter
test
xchg
test
jnp
std
adc
bound
fcomps
cmpsb
imul
addr16
dec
repnz
jl
outsb
int
add
and
shr
jbe
pop
jnp
sub
imul
cli
push
sub
clc
imul
xor
lods
inc
dec
push
inc
gs
pop
inc
inc
fldt
inc
dec
or
push
add
push
fwait
xchg
and
cmc
es
inc
mov
sbb
cmp
jg
and
rcl
fs
xchg
and
inc
enter
adc
ss
pop
inc
ljmp
or
test
inc
dec
xchg
bound
inc
pop
xchg
or
adc
scas
pop
test
adc
mov
mov
orb
adc
lods
fnstsw
push
jo
aam
or
loopne
jo
jle
jl
push
pusha
dec
je
nop
push
cmpsl
cmpsl
imul
add
lea
push
mov
lods
xor
sti
mov
sub
mov
ret
clc
adc
fmulp
sub
std
inc
scas
insb
ror
mov
jbe
push
or
popa
mov
inc
inc
flds
hlt
mov
fistpll
lds
mov
dec
gs
sbb
addw
jne
cmp
rcll
ss
insl
mov
repnz
je
dec
mov
mov
aaa
mov
push
adc
add
jmp
movsb
jae
adc
jecxz
rorl
jno
jns
mov
jb
xor
cmp
sub
cmp
bound
cmp
jns
add
add
mov
and
mov
push
push
xor
orl
out
dec
dec
push
or
mov
lock
lock
aaa
lock
imul
jmp
sti
add
or
fmuls
push
lock
and
and
or
sub
out
decl
or
push
add
lock
sbb
xor
inc
mov
pop
lock
dec
incl
cmp
lock
rclb
adc
sbbb
pop
ud2
jno
sbb
xor
sub
ja
jg
add
call
daa
pop
and
js
sub
inc
aas
stos
inc
jmp
lock
add
pusha
and
pop
jo
push
add
std
pop
adc
or
or
or
inc
dec
xchg
mov
das
jnp
push
loopne
das
mov
decl
push
inc
xor
push
rcrb
or
test
ret
add
test
jge
mov
mov
dec
or
in
add
loope
mov
sbb
notb
lock
and
aas
and
cmp
inc
scas
push
mov
sbb
xor
dec
add
movzwl
push
lock
sbb
pminsw
lock
add
mov
lock
adc
adc
lret
js
push
fcoml
sbb
and
jnp
or
adc
adc
and
insl
scas
xor
inc
sbb
es
pop
add
mov
adc
lods
lock
lock
adc
aam
mov
fiadds
sub
bnd
add
std
int
and
xor
inc
or
pusha
ss
call
mov
out
xor
jnp
xchg
lods
jb
or
push
sbb
fstpl
mov
shrl
jbe
daa
add
in
imulb
jb
jnp
popf
sbb
adc
xor
out
push
repnz
pop
dec
push
add
or
pop
push
and
push
aas
and
add
adc
or
jo
cmp
add
add
mov
das
mov
lock
psllq
mov
jne
jae
lock
mov
add
mov
add
or
push
cmp
test
push
sub
int
xchg
pop
or
add
pop
add
stos
fldt
cwtl
push
es
vmread
mov
ret
dec
mov
and
nop
fldt
jg
adc
mov
push
out
sbb
adc
and
fmull
call
jl
add
sub
push
pop
adc
outsb
aaa
mov
or
and
fldt
aaa
xor
outsl
pop
mov
sbb
push
and
fistpll
mov
adc
dec
popf
push
ret
js,pn
mov
push
mov
repz
ss
or
aas
popf
and
jg
es
or
or
add
push
sbb
loopne
xlat
or
in
das
lods
add
adc
add
or
lret
ljmp
push
pop
and
adc
or
mov
insb
jbe
cmp
xchg
sub
inc
sbb
fwait
push
push
decl
pushl
cs
mov
pop
sbb
xor
and
ret
xchg
sarb
jmp
ret
and
mov
or
mov
add
adc
or
aaa
cs
and
fistl
cmp
and
push
sbb
or
push
inc
mov
sbb
sbb
add
adc
aaa
das
xchg
lret
cmp
adc
push
or
sbb
and
loope
int
and
inc
mov
adc
adc
push
scas
sub
lods
dec
outsl
repnz
or
sbb
lock
dec
sub
aas
pop
push
cmp
xchg
dec
mov
stos
jg
pop
lock
xor
shlb
push
inc
sub
jno
push
sbb
sub
xor
and
push
adc
das
ss
lea
mov
movsl
push
push
and
mov
int
push
orl
dec
sub
imul
add
add
lock
add
xchg
dec
sbb
enter
in
loope
pop
loope
add
je
mov
stos
mov
xor
fwait
and
stos
out
sbb
je
or
sbb
lock
outsl
sub
and
stos
mov
xchg
mov
xor
test
mov
push
push
sub
das
ds
cs
or
or
jecxz
dec
push
dec
lock
gs
ja
xor
sub
imul
je
and
or
loope
pmaxsw
jmp
adc
sysenter
add
cmp
pop
outsl
cmp
sub
xor
movsl
mov
sbb
push
mov
and
add
and
insl
fstpt
das
hlt
add
das
add
test
lock
add
push
add
xor
and
push
xor
cmp
and
clc
push
fcomps
pushf
mov
pop
lods
and
sbb
mov
pop
or
or
adc
sbb
in
sbb
jnp
repnz
mov
pop
add
or
pusha
sub
and
push
mov
push
pop
push
cltd
cld
mov
or
xor
add
sbb
das
out
adc
adc
adc
add
dec
out
push
xchg
pop
or
adc
neg
out
lods
fdiv
add
mov
and
or
pusha
negl
in
testb
adc
sbb
into
xchg
lods
sbb
xor
pop
popf
data16
add
jmp
lods
insb
and
sub
adc
mov
xor
addr16
div
dec
out
jae
cmp
add
adc
or
lret
sbb
or
xor
or
test
or
sbb
fisttpl
adc
mov
xor
add
adc
or
jb
lahf
data16
bswap
xchg
adc
or
mov
jb
sahf
sysret
mov
add
adc
push
inc
xor
pop
mov
sahf
and
push
pop
or
cmpb
lods
inc
add
mov
ret
ds
sub
cmpsl
cltd
loopne
push
rcrb
je,pn
cs
fwait
mov
nop
jmp
adc
addr16
call
fs
arpl
ret
jle
in
pop
rcrb
add
daa
out
sahf
stc
push
shrb
jae
arpl
repz
mov
mov
inc
sbb
sbb
mov
sbb
out
add
data16
add
jl
add
add
add
cmpxchg
in
add
add
call
int
jmp
nop
gs
mov
inc
mov
pop
pop
push
sub
adc
in
mov
add
jne
pop
push
sub
adc
rolb
jae
jne
mov
sbbl
and
sub
jb
shl
mov
je
lock
lds
fstps
sub
adc
adc
add
jne
mov
sub
in
adc
jne
roll
mov
sub
adc
mov
out
rorb
push
sub
adc
jae
adcl
add
or
lea
cmp
jbe
mov
inc
mov
adc
imul
arpl
call
add
pop
adcl
in
iret
jmp
pop
mov
mov
mov
aad
call
cmpb
jne
cmp
mov
data16
or
rclb
les
clc
sub
add
mov
xorl
clc
mov
cltd
pop
or
je
ficomps
lea
add
gs
call
xchg
mov
inc
or
je
sti
stc
push
dec
repnz
mov
add
mov
add
jmp
shll
rol
add
movl
push
je
cmp
ja
add
mov
xchg
les
lock
jmp
jno
shl
mov
movl
dec
mov
add
ljmp
push
push
push
push
or
lea
andb
xorb
loop
push
call
pop
aam
inc
and
push
cmp
jne
cmpl
xorb
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
push
add
add
add
add
add
add
add
add
bound
add
add
add
jbe
add
add
hlt
add
add
add
add
add
add
add
push
add
add
add
add
popa
jae
gs
imull
js
sahf
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
push
je
arpl
punpcklwd
jbe,pn
and
insl
popa
outsb
jl
gs
push
pop
jb
imul
xor
lods
or
mov
dec
fsubl
and
fldcw
cmp
cmp
push
sub
outsl
jae
adc
outsl
insl
sub
insl
jbe,pn
and
or
and
gs
jne
imul
and
add
jae
gs
push
jb
jbe
gs
fmuls
and
and
xchg
and
and
shlb
gs
mov
inc
js
arpl
je
outsl
outsb
dec
xchg
jbe
insb
and
gs
cmp
outsb
jbe
ds
and
inc
arpl
jae
cmp
and
ds
addr16
gs
gs
js
xchg
jne
imul
insb
fmuls
and
and
xchg
and
jb
les
jae
gs
jb
jbe
stc
gs
decl
and
and
dec
das
jae
arpl
imul
cmp
je
jne
je
outsb
push
outsl
ds
jae
gs
ja
jns
push
inc
jb
add
add
cmc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
cwtl
mov
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
aaa
add
add
add
add
add
adc
add
add
push
mov
add
add
add
inc
push
dec
inc
dec
out
cs
dec
dec
mov
inc
push
inc
push
cld
xor
cs
mov
push
shll
cs
sahf
add
inc
dec
cmp
xor
fs
jle
push
push
inc
push
data16
fs
insb
xor
dec
dec
dec
jo
cs
insb
push
add
fs
imul
add
inc
adcl
fs
jae
aad
push
imul
jb
shll
add
test
je
popa
stc
inc
insb
insb
outsl
arpl
add
jb
add
inc
jb
ja
add
push
xor
outsl
jae
jns
jns
add
jbe
jns
je
cmp
jb
je
jbe
inc
popa
je
jb
push
dec
inc
addl
push
popa
je
push
aad
ja
jo
fldt
push
add
mov
jo
outsb
inc
add
add
add
add
add
add
add
add
add
xor
add
nop
mov
add
add
inc
adc
add
gs
popa
imul
gs
sti
fs
insb
add
insb
insb
dec
popa
imul
add
nop
add
or
xchg
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
and
cwtl
add
add
xor
xor
xor
push
sahf
xor
xor
xor
xor
xor
xor
push
xor
xor
js
test
lcall
xor
xor
xor
xor
xor
sbb
and
daa
xor
xor
xor
xor
xor
xor
jg
mov
and
sub
imul
stos
ss
mov
in
ss
aaa
in
in
aaa
repz
pushl
or
cmp
cmpsl
cmp
cmp
