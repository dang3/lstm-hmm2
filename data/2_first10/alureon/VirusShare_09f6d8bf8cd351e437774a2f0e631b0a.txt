or
in
lcall
cmpsl
xor
enter
nop
pop
cmp
pusha
scas
mov
sub
popa
xchg
outsb
scas
pusha
jp
out
dec
out
fwait
sti
js
lahf
jo
mov
mov
or
icebp
dec
test
addb
mov
mov
inc
jl
jb
push
in
adc
xchg
lret
arpl
sbb
ficompl
daa
push
imul
int3
gs
lcall
jge
add
pop
sbb
push
fisttpll
jne
push
and
or
add
mov
xchg
faddp
outsb
stos
mov
pop
ret
lret
pop
test
adcl
xchg
mov
pop
xor
paddb
inc
adc
mov
cmp
pop
xchg
stc
in
pop
insl
loop
ja
sbb
xchg
cmp
dec
jmp
pop
xlat
scas
mov
fwait
sbb
div
movsl
jno
mov
leave
roll
mov
sub
enter
xchg
jle
mov
je
mov
mov
iret
jb
mov
fildll
vcmpsd
shr
mov
mov
and
mov
aad
mov
mov
or
sub
jo
je
mov
mov
xor
or
add
in
loopne
cmc
adc
mov
out
xchg
sub
mov
dec
xchg
dec
jnp
cmpsl
ror
fisubl
je
fdiv
inc
ja
js
lret
jge
pop
daa
cmp
popa
not
fcmovu
imul
mov
push
movsl
dec
mov
mov
jno
xchg
xlat
in
jp
std
insl
loopne
daa
sbbl
mov
jne
mov
shrl
mov
dec
fstpt
insb
pop
jge
addr16
mov
lods
add
sti
movsb
scas
xor
scas
js
push
sahf
loope
jg
xchg
pop
fwait
test
cltd
outsl
int
ja
loop
stos
jge
jecxz
cmp
mov
call
push
xor
cld
xchg
out
pop
mov
sub
in
fwait
xor
mov
stos
nop
and
jecxz
andl
repnz
aad
std
sbb
jl
inc
into
lods
cmc
cmp
jns
cwtl
das
or
scas
xchg
sub
pop
rclb
xchg
js
cwtl
adc
repnz
cltd
sbb
sub
dec
lock
jmp
loopne
sbb
and
andl
sbb
dec
jne
hlt
arpl
inc
jmp
inc
jecxz
sti
and
inc
les
xchg
pop
pop
in
js
lea
insl
das
lods
add
adc
in
dec
loop
pop
mov
movzwl
inc
inc
sub
sub
or
lea
mov
dec
sub
add
dec
dec
jne
or
mov
lea
mov
pop
inc
inc
pop
dec
inc
pop
add
lea
movzwl
inc
dec
dec
inc
sub
lea
mov
inc
add
ret
push
add
add
dec
and
lea
mov
inc
dec
push
push
push
push
inc
inc
sub
push
lea
imul
inc
dec
add
dec
xor
lea
mov
mov
dec
push
dec
dec
xor
dec
or
push
lea
imul
push
sub
dec
pushl
dec
call
sub
add
and
lea
movzbl
inc
sub
inc
dec
pop
ret
mov
mov
dec
add
inc
inc
inc
or
lea
imul
dec
mov
sub
inc
cmp
jb
add
mov
and
lea
xor
add
xor
dec
inc
pop
sub
or
test
jbe
lea
mov
dec
dec
dec
dec
sub
lea
inc
sub
inc
add
xor
lea
imul
inc
inc
add
inc
dec
sub
lea
mov
and
sub
dec
mov
dec
inc
movzbl
or
lea
add
imul
add
and
dec
dec
mov
dec
xor
mov
lea
mov
mov
inc
inc
mov
dec
dec
sub
lea
mov
add
dec
jne
add
mov
sub
dec
add
lea
mov
dec
add
dec
inc
add
mov
lea
mov
sub
inc
inc
inc
and
lea
mov
mov
inc
test
jbe
add
add
inc
sub
lea
mov
inc
dec
dec
dec
xor
lea
mov
inc
add
inc
dec
dec
add
lea
movzbl
inc
and
dec
inc
mov
sub
xor
movzbl
lea
mov
add
inc
add
and
inc
inc
mov
sub
lea
movzbl
mov
add
mov
inc
inc
mov
dec
or
movzbl
lea
mov
add
sub
dec
and
dec
inc
movzbl
and
jmp
xor
lea
mov
inc
dec
dec
dec
xor
pop
ret
push
sub
lea
xor
mov
add
inc
sub
inc
xor
inc
add
lea
imul
inc
dec
inc
add
or
lea
mov
add
add
dec
pushl
add
sub
pop
lea
imul
pushl
add
inc
inc
dec
sub
lea
mov
add
inc
inc
dec
and
lea
mov
dec
inc
pop
inc
inc
add
lea
cmp
je
call
call
movsbl
pop
inc
ret
push
dec
push
inc
add
push
xor
push
lea
push
mov
inc
push
inc
inc
add
add
lea
call
imul
push
dec
dec
sub
mov
dec
mov
xor
lea
mov
imul
add
test
je
sub
mov
inc
inc
xchg
or
lea
repnz
mov
add
xchg
inc
dec
add
xor
lea
mov
inc
dec
dec
add
xor
lea
add
mov
jmp
push
push
mov
mov
sub
dec
dec
inc
sub
lea
mov
add
inc
dec
pop
add
and
xchg
lea
call
mov
inc
dec
dec
dec
xor
lea
mov
sub
dec
sub
inc
call
sub
lea
call
movzbl
add
inc
dec
dec
and
call
lea
movsbl
call
dec
add
inc
push
dec
call
or
lea
mov
dec
call
dec
add
inc
pop
or
lea
mov
add
add
pop
inc
inc
pop
dec
or
lea
imul
pop
inc
inc
inc
inc
add
lea
mov
inc
pop
add
dec
pop
inc
or
mov
lea
imul
call
inc
inc
dec
inc
ret
xor
lea
push
mov
dec
push
dec
sub
push
dec
and
push
lea
mov
push
add
dec
mov
sub
inc
push
xor
ret
push
lea
mov
inc
sub
add
dec
or
lea
mov
add
add
dec
inc
or
lea
mov
dec
dec
inc
dec
jmp
jmp
dec
add
dec
sub
add
lea
mov
dec
sub
sub
inc
sub
pop
pop
ret
push
lea
push
mov
dec
inc
dec
dec
and
push
lea
call
pop
ret
sub
movzbl
mov
inc
dec
mov
inc
sub
mov
xor
lea
mov
mov
sub
xor
dec
dec
mov
sub
sub
inc
lea
mov
inc
sub
sub
dec
cmp
jb
sub
push
lea
mov
push
sub
sub
push
inc
inc
mov
sub
lea
xor
imul
add
xor
sub
dec
xor
sub
or
push
lea
mov
xor
dec
add
mov
add
inc
mov
and
lea
movzbl
movswl
sub
dec
dec
add
inc
or
add
lea
movsbl
movzbl
add
inc
sub
inc
add
lea
inc
inc
sub
dec
mov
inc
and
lea
mov
add
inc
cmp
jb
inc
xor
dec
add
mov
lea
jmp
sub
add
inc
adc
shl
xor
and
lods
cld
pop
mov
jmp
dec
add
mov
mov
lea
addr16
jmp
pop
dec
push
cmp
call
shll
cltd
lcall
dec
xor
pop
inc
sbb
rcrb
sets
dec
addl
test
cmp
mov
pop
push
mov
cmpsl
hlt
fldenv
mov
push
ja
jno
mov
aad
jns
jbe
inc
inc
mov
mov
sub
push
insl
sub
test
mov
lcall
into
mov
adc
repnz
inc
mov
cwtl
dec
mov
push
imul
adc
mov
pop
out
add
leave
jl
test
stc
notl
sahf
aam
and
int
pop
xlat
mov
xorl
jae
jbe
loop
sub
dec
xchg
cmp
rol
fs
in
out
loop
cmp
shrl
xor
rcrl
sti
nop
pop
push
jno
insb
pop
shlb
sub
imull
cmc
push
push
lds
mov
mov
inc
dec
sbb
pop
and
imul
pop
sbb
rcrb
test
dec
or
push
lods
push
mov
xchg
pop
stos
jmp
push
push
mov
fildl
lods
jecxz
popf
out
jge
int3
add
into
adc
and
les
stc
sbb
inc
push
xor
mov
mov
mov
jp
imul
push
mov
das
sbb
enter
sarb
push
sub
loope
and
jl
gs
jge
jle
push
sub
lahf
pop
fisubs
mov
nop
setge
cmpl
shr
jnp
mov
and
int3
cld
cmp
mov
cmp
call
daa
out
jne
cli
lea
inc
xchg
lds
std
jb
push
daa
sahf
xchg
jmp
mov
negb
inc
cwtl
mov
movsb
rclb
push
je
mov
inc
pushf
int
insb
xlat
cmp
push
arpl
icebp
mov
out
cmpsl
into
imul
pop
mov
adc
roll
ljmp
mov
repz
mov
mov
dec
pop
push
cmp
int3
jge
xor
test
mov
xor
pushf
mov
ret
out
repz
daa
push
std
scas
mov
lahf
popf
or
push
sub
hlt
push
fisttpll
xchg
jge
or
mov
fidivs
jbe
lods
mov
cwtl
xor
inc
inc
mov
or
cmpsb
aas
jno
roll
cwtl
mov
push
outsb
in
inc
cwtl
insb
call
push
cmc
sbb
adc
test
icebp
imul
sub
dec
rcrl
aas
and
mov
dec
push
push
js
lcall
jp
xor
addl
jno
pop
inc
mov
mov
mov
mov
sbb
mov
into
jae
sub
roll
cmp
test
push
lcall
pop
push
leave
into
imul
cs
push
pop
movsb
nop
add
add
jbe
mov
into
mov
movsb
or
xor
rcl
lds
test
out
cmp
cmp
mov
mov
out
adc
sub
cltd
mov
cmp
dec
insb
mov
dec
out
cltd
sbb
ucomiss
cwtl
out
dec
mov
cmpsb
inc
add
jp
mov
repnz
divb
imul
xchg
xor
or
lods
out
es
add
call
push
inc
outsb
push
ret
rorl
xchg
sbb
hlt
mov
jl
or
call
add
lds
cld
cmp
bound
cltd
dec
out
mov
imul
subb
or
sbb
push
fimull
aas
sbb
into
cmpsb
or
mov
loop
xorb
mov
xor
insl
into
subb
jo
cs
cmpsl
dec
cmpb
dec
or
dec
das
pop
mov
loop
cltd
in
into
faddl
ror
ds
xlat
test
adc
iret
roll
push
aaa
add
cmp
lock
fcom
sbb
xor
xchg
xor
rol
sub
fistps
lret
dec
sbb
push
or
cmp
inc
ss
fbld
ljmp
daa
rolb
int3
shlb
fsubrs
rclb
lds
aad
mov
sub
xchg
stc
fadds
test
popa
ret
outsb
jns
mov
test
and
sarb
ret
sub
scas
mov
mov
vprotd
lret
pop
cltd
mov
int
incl
inc
mov
leave
ror
adc
daa
push
std
and
loop
es
ror
sub
or
mov
stos
fsubl
add
into
pop
lods
fdivl
ja
sub
out
sti
dec
pop
push
jbe
adc
jmp
pop
mul
xchg
fists
and
stc
xchg
sub
shrb
out
xorl
cmpsl
jp
mov
lock
cmp
adc
frstor
push
pop
loope
cmp
test
rol
pop
mov
fstpt
clc
pop
stos
fprem1
push
in
mov
imul
call
icebp
pop
and
jge
mov
push
rclb
xor
pop
pop
jmp
repnz
dec
xor
fs
and
mov
cmpl
cltd
cmp
dec
xor
call
cmpsl
rcr
sbb
aaa
insb
xchg
xor
jp
fsubrl
outsl
push
mov
jl
lds
mov
cmpl
jle
jns
push
sbb
out
lahf
outsl
pusha
ror
fsub
xor
lea
pop
add
pop
or
xor
add
ds
fmull
repnz
les
lret
cli
hlt
das
fnsave
js
sub
mov
call
and
push
movsl
add
xchg
add
push
fmull
xor
fsts
pop
fisubrl
add
dec
add
dec
jbe
cmp
xchg
mov
ja
mov
jne
into
mov
sahf
xchg
adc
pop
movsb
sbb
sbb
cmp
mov
mov
dec
jnp
mov
cld
sbb
xor
add
lds
dec
cmp
and
data16
popf
push
fst
cmc
fnstcw
jne
cld
jno
mov
mov
xor
sti
sbb
int3
mov
mov
imul
sub
or
xor
adc
mov
pop
pop
jg
add
mov
cmp
xchg
add
in
es
ljmp
lcall
pop
scas
dec
mov
fidivrl
xchg
popa
mov
push
push
in
cmpsl
add
in
sahf
cs
ja
test
in
pop
jae
add
ds
or
pop
mov
cmp
lods
test
imul
inc
pop
cmpsb
loope
imul
inc
jg
mov
scas
outsb
sbb
cmp
jmp
fwait
xor
jecxz
rol
pusha
rep
jmp
and
cmp
mov
xor
mov
outsb
clc
sbb
xlat
or
pop
mov
addr16
scas
ljmp
adcb
cwtl
mov
mov
js
mov
dec
insb
mov
bnd
mov
xchg
push
sub
js
das
faddl
sub
mov
xchg
xor
sbb
cld
lret
add
daa
lahf
fimull
repnz
push
popa
in
lods
jae
jmp
or
push
pop
push
pop
in
pop
sub
outsl
cwtl
les
mov
insl
dec
movsb
decl
dec
addr16
std
fdivs
fwait
push
ret
mov
out
das
or
mov
pop
stos
mov
adc
cmp
enter
cmpsl
mov
daa
push
sbb
or
pop
out
jmp
bound
inc
adc
mov
into
in
lods
xchg
inc
xor
or
sub
nop
cmc
out
dec
inc
sub
in
xchg
mov
jnp
mov
cmp
movsl
pop
stos
call
andb
test
lret
push
and
jb
repnz
and
test
loop
xor
fwait
push
call
insl
sub
push
out
push
sbb
sub
repz
movsl
es
sbb
mov
arpl
mov
int3
pushf
adc
imul
fimuls
imul
insb
pop
cmc
push
scas
lea
push
mov
std
in
cmc
mov
leave
mov
cmp
bound
bswap
mov
mov
ss
pop
fiadds
xor
aas
inc
pop
and
cwtl
mov
stc
stc
push
mov
mov
insl
enter
mov
cli
sub
xchg
rolb
sbb
add
shl
inc
dec
sbb
push
add
hlt
mov
jns
jns
sub
lahf
push
pusha
sub
faddl
dec
jl
popa
pop
inc
jb
fcomps
sub
orb
lds
xor
mov
or
pop
dec
rcr
dec
sub
inc
pusha
sub
inc
jecxz
cmp
or
dec
jbe
pop
mov
pushf
aam
stos
dec
adc
popf
scas
sarb
dec
and
push
std
mov
mov
inc
cmp
push
mov
shrb
aam
sub
fs
outsl
sbb
mov
in
std
out
inc
mov
sub
xchg
jo
or
jecxz
mov
push
imul
cld
jne
push
dec
stos
xchg
pop
sbb
cmpl
xorl
test
std
push
std
mov
mov
leave
idivl
sahf
push
cmp
pop
xchg
jae
xor
sbb
aad
jge
aam
adc
fwait
add
jns
sti
adc
addr16
mov
mov
jbe
jmp
es
and
bound
lock
cmp
rcrl
test
mov
rorb
lods
dec
sbb
or
jge
data16
popf
int
xchg
out
fimuls
daa
xchg
adc
pop
pop
mov
lahf
cld
adc
aas
xor
das
iret
loopne
loope
das
cmp
pop
mov
sbbb
inc
out
jmp
add
adc
mov
sbb
inc
sbb
ficomps
popf
jno
pop
leave
lret
cmp
jbe
xchg
lods
push
fwait
mov
inc
xchg
gs
ja
dec
xchg
imul
or
out
jl
sub
andb
mov
jmp
shl
in
scas
das
repz
shlb
in
mov
push
loop
pop
mov
lret
mov
xor
push
movsl
cmp
cmp
mov
loope
push
adc
ljmp
dec
pop
xchg
mov
test
int
mov
mov
jbe
repz
aad
gs
test
xchg
out
jae
and
mov
cmpsl
ja
xchg
lret
push
aad
sub
out
mov
fldenv
jp
push
ficomps
pop
jecxz
fisubs
daa
add
bound
andl
dec
push
imul
mov
das
jb
xchg
mov
mov
mov
test
lods
mov
andb
or
out
aad
adc
and
iret
jp
xor
mov
rcrb
out
movsb
fs
repnz
lret
push
xor
mov
mov
adc
mov
les
xor
xor
push
scas
test
sub
je
xor
aam
adcl
dec
push
lcall
andb
xchg
sub
repz
pop
inc
out
imul
xlat
loop
pop
stos
lret
aas
int3
fisttpll
mov
xor
mov
xor
enter
aam
and
enter
int3
sbbb
pop
sbb
scas
xchg
fwait
das
dec
inc
adc
loope
icebp
imul
mov
pop
xchg
shr
ljmp
aam
testl
sbb
and
aas
mov
popf
pextrw
xlat
gs
cld
fisubl
xor
iret
in
ljmp
fbld
iret
jbe
lcall
mov
mov
mov
xor
sub
cmp
dec
dec
add
aad
or
test
xor
ss
jl
xchg
inc
add
test
into
in
stos
push
adc
arpl
push
pusha
inc
sub
out
mov
pop
jb
inc
add
xor
push
dec
sub
xor
xor
cmp
mov
and
icebp
adc
and
mov
dec
test
dec
fdivl
mov
int
mov
and
mov
add
push
sbb
pop
inc
insb
jae
shlb
dec
je
pop
push
scas
insl
sbb
movsl
arpl
jge
push
jmp
lods
pusha
mov
add
sbb
mov
or
lcall
js
stc
push
cld
jle
pop
or
icebp
cltd
jmp
xor
push
imul
mov
ljmp
xor
addl
andl
das
pop
sub
xchg
mov
scas
mov
int3
call
dec
cmp
cmp
gs
jae
jno
jno
loope
xchg
idiv
adc
sub
cmp
pop
jl
and
inc
lea
lret
sub
xor
jecxz
pop
testb
test
adc
sub
jmp
push
enter
adc
sub
dec
pcmpgtw
or
inc
mov
test
lahf
jl
sarl
adc
into
andb
cmpsl
mov
mov
xchg
adc
lahf
popa
jno
jmp
scas
and
data16
dec
jp
ljmp
cmc
std
mov
rcrb
dec
adc
dec
lahf
jecxz
fdivr
and
movsl
jge,pt
mov
stos
mov
mov
xchg
xor
jbe
test
aam
inc
or
pop
xor
cmp
sbb
cld
leave
push
pop
rcll
sub
mov
push
inc
stc
mov
mov
fsubs
add
jecxz
sarb
es
orl
xor
push
test
xchg
sub
mov
cmc
sbb
movsl
gs
in
mov
xchg
std
sub
mov
sbb
rcl
mov
aaa
dec
roll
pop
mov
daa
inc
cmpl
stos
scas
pushf
jecxz
stos
inc
nop
popf
decl
shrb
push
aam
xchg
hlt
pop
push
mov
xchg
in
leave
push
and
adc
test
push
cld
and
sbb
and
mov
xor
enter
into
ds
sbb
mov
or
adc
push
lret
mov
lods
test
loope
test
mov
mov
mov
or
pop
cmp
mov
jl
hlt
fists
leave
cmc
fdivrl
in
out
add
dec
or
add
inc
push
inc
fcomps
test
pusha
in
dec
fnstcw
sub
pop
push
mov
xor
dec
lret
cmpsb
jbe
add
xor
arpl
pop
push
nop
test
xchg
pop
sub
xchg
fdivl
cmpsb
shll
inc
push
jnp
int
push
pop
lret
xor
xchg
popf
push
pmullw
fistl
shr
adc
popa
mov
sub
sub
dec
fimuls
mov
xor
push
loope
dec
leave
call
lahf
xor
call
mov
addr16
push
lahf
mov
sub
imul
pop
mov
cli
test
cmp
lock
fisttps
xor
cmc
sbb
fistpl
cli
movsb
fldenv
inc
jmp
fsubs
lret
pop
mov
lahf
fdivr
cmpsb
js
lock
add
sub
in
cmpsb
xchg
jno
jl
enter
lds
add
add
rolb
ja
dec
push
loopne
int3
xor
lea
or
das
ret
mov
sub
mov
les
movsb
push
test
lahf
aaa
inc
pop
mov
xor
repnz
push
and
repz
imul
pop
out
cmp
add
sbb
mov
gs
dec
or
int
out
lret
sub
add
or
jb
out
xor
or
imul
dec
adc
std
push
daa
nop
bound
mov
pop
outsl
das
pop
jg
shl
jmp
sbb
movsl
mov
mov
aad
mov
aam
daa
decl
pop
dec
inc
ja
int
ja
hlt
jno
lret
jno
lock
out
mov
int
fwait
pop
pusha
enter
insb
push
out
gs
xchg
mov
push
sub
in
add
cmp
inc
lods
and
push
fsts
inc
ret
jl
xchg
jae
mov
xor
bnd
loopne
lock
popa
data16
jp
push
mov
mov
xlat
dec
cld
mov
repnz
aad
inc
out
lahf
in
out
divl
xor
pop
sbb
and
sbb
ss
data16
lcall
icebp
mov
xchg
xor
xor
push
mov
sahf
fildll
adc
repz
cmp
xchg
lcall
and
sti
std
mov
test
int
mov
pop
cltd
lcall
mov
dec
ret
hlt
cs
mov
fdivp
hlt
and
sbb
or
sub
mov
int3
imul
sbb
fisubrl
or
xor
adc
fsubs
enter
mov
imull
in
jp
lret
scas
frndint
jle
push
push
sub
bound
faddl
fsubs
mov
sbb
cs
push
pop
mov
cmpsl
pop
mov
int3
dec
shrl
inc
lahf
std
mov
xlat
push
stc
daa
or
dec
push
nop
lods
cli
mov
xchg
push
lods
outsb
int3
or
cmp
cs
jae
dec
dec
call
aad
and
in
into
and
imul
mov
imul
mov
jb
pmullw
add
and
cmp
jp
add
jo
lcall
test
or
popf
movl
insl
pop
fdivrl
js
inc
cmp
or
sub
dec
jne
inc
daa
push
cmp
xlat
add
jnp
scas
adc
lods
adc
cld
aad
mov
adc
ja
lcall
jg
leave
push
adc
cld
mov
xchg
mov
jp
inc
adc
sbb
mov
repz
aas
fstl
test
mov
xlat
and
mov
shrl
test
nopl
jp
lock
jae
loopne
test
xchg
pop
mov
or
mov
mul
neg
cmp
cld
and
pop
xor
xor
inc
or
cmp
mov
add
mov
push
je
or
add
mov
xchg
insl
shll
lret
stc
sub
cmp
jmp
xchg
dec
sub
push
icebp
push
popa
mov
popa
xchg
icebp
pop
in
lock
pop
aam
jg
inc
push
mov
xor
cwtl
add
aam
enter
dec
pop
loope
stos
xor
add
xlat
pop
popa
in
fcomps
flds
out
data16
mov
dec
jae
xor
mov
into
add
out
sarl
jae
scas
jle
shl
clc
mov
pop
cld
out
push
insl
xchg
mov
or
fidivrs
or
push
push
fcomps
fisttpl
lock
sbb
je
aas
inc
xchg
mov
arpl
xchg
stos
ss
out
cmpsl
test
push
ljmp
xchg
test
sbb
and
mov
cwtl
mov
arpl
imul
loopne
lahf
test
daa
imulb
ds
sarb
fwait
jge
stos
xchg
sub
hlt
ja,pn
seta
mov
stos
leave
mov
lret
sub
sub
adc
adc
xlat
or
xor
sub
add
xor
sbb
mov
adc
cmc
or
xchg
js
lods
in
add
stc
dec
xor
add
fimuls
sub
aaa
out
xchg
js
test
ret
bound
and
out
push
pushf
sbb
dec
outsb
iret
imul
imul
int3
bt
push
jmp
cmp
sbb
add
in
clc
dec
or
jge
cmc
mov
jb
lahf
add
xor
mov
jbe
loopne
mov
lock
sahf
lret
testl
imul
mov
out
ss
mov
sub
xchg
inc
decb
mov
fwait
push
cltd
dec
xor
xlat
addb
xchg
inc
test
push
cmp
icebp
jo
sub
mov
inc
shrb
addb
mov
incb
pop
mov
rcrl
rep
or
jns
jge
fwait
dec
sbb
loop
or
jl
cltd
push
lock
addr16
push
dec
lds
sbb
into
cwtl
loop
pop
lods
movsb
push
aas
fwait
pop
faddp
je
pop
ja
mov
cmp
out
push
rcll
xor
test
xchg
mov
dec
mov
mov
or
push
clc
stc
insb
imul
paddsw
add
push
mov
fucomi
ret
xchg
xor
in
inc
adcb
es
mov
loopne
jp
push
xchg
in
lds
stos
shrb
ljmp
decb
xor
lahf
jg
stc
sbb
cltd
nop
hlt
mov
test
outsl
mov
mov
mov
stc
js
and
push
mov
mov
lods
pop
add
dec
sub
mov
or
stos
xor
icebp
pusha
stos
pop
ljmp
mov
outsl
cmc
and
lahf
incl
js
and
add
xorl
push
popl
into
int
fldenv
jo
mov
add
rcrb
sti
push
mov
into
faddp
dec
dec
movsb
push
loopne
je
hlt
push
repz
loop
mov
sti
xlat
mov
loop
out
dec
push
cli
jbe
movsl
arpl
jp
mulb
jle
mov
jecxz
sti
cltd
and
add
test
mov
repz
fsubr
mov
loopne
data16
into
cmp
pop
xchg
pop
les
or
or
shlb
and
add
xor
xorb
pop
bound
dec
in
mov
int3
div
push
std
cwtl
repz
repz
jne
ljmp
adc
out
xchg
fnsave
lods
arpl
mov
add
lock
sbb
adc
es
cli
lar
fiadds
mov
ja
stc
inc
iret
ja
xor
repz
xchg
sbbl
cli
cmp
add
lret
cwtl
add
or
loopne
jp
inc
xor
stos
push
jbe
push
sbb
stc
sub
aas
addr16
subl
icebp
adcb
sub
inc
push
das
dec
cwtl
sbbb
ret
xor
test
inc
loope
mov
addr16
nop
ja
divb
sbb
mov
sub
xchg
sub
test
xchg
notl
test
mov
ss
cld
lds
mov
pop
inc
xlat
push
push
mov
andb
lds
insl
icebp
bound
pusha
jnp
xchg
das
mov
movsb
lds
mov
jp
add
mov
jp
mov
and
or
cmp
cmpsb
mov
jbe
cmp
outsl
jp
mov
sti
shll
inc
std
enter
push
pop
cmpsb
or
sbb
test
sti
out
xchg
mov
pop
mul
fstps
mov
push
je
add
xchg
insl
pop
and
insb
inc
int3
cmp
sbb
insb
dec
sti
stos
xchg
add
icebp
inc
sub
enter
out
lret
pushf
scas
pushf
out
aas
in
fsub
mov
pop
cmp
adc
outsl
adc
aam
mov
xor
jmp
repz
fidivs
mov
jno
repz
std
ret
jp
inc
icebp
into
or
data16
mov
mov
out
xchg
push
imul
stos
leave
push
inc
ds
or
jbe
jo
outsb
push
cmpsl
sub
andl
push
ljmp
fstpt
aad
int3
cmp
mov
in
enter
mov
in
jno
jge
lret
or
mov
scas
cwtl
repnz
add
fdivl
gs
dec
and
adc
pop
sub
mov
adc
mov
das
aad
sarb
xor
ds
pop
mov
out
cli
add
in
push
ret
inc
sbb
jne
xor
xchg
fisttpl
data16
rcrl
je
xchg
sbb
mov
std
int
pop
xorl
test
mov
mov
sub
xchg
outsb
or
fnsave
push
xor
inc
loop
xor
dec
loop
sbb
or
cmp
xor
jl
push
ds
fiadds
lret
je
inc
pop
or
jg
lcall
inc
lea
call
in
jl
mov
loopne
decl
in
mov
mov
cs
xchg
movsl
mov
out
enter
fmuls
mov
adc
bound
test
jl
cmp
mov
lea
inc
lretw
inc
call
lcall
sbb
js
xchg
aas
xor
cld
and
arpl
adc
pop
mov
scas
or
insl
and
lods
xchg
jae
or
or
adc
mov
leave
in
push
das
or
cli
sub
mov
test
popf
sahf
cmp
dec
jns
adc
and
sti
lret
cmp
dec
jmp
iret
xchg
scas
fimuls
clc
popf
sti
fisttpl
fnstsw
mov
insl
cmp
xor
fldl
lds
mov
mov
ror
aas
in
outsb
mov
and
sahf
jb
out
std
ljmp
jecxz
dec
mov
pop
dec
sti
adc
mov
push
adc
mov
in
jo
lret
lcall
cmp
mov
jp
push
jnp
or
cmp
sbb
mov
cmpsl
push
dec
jbe
in
cmp
pop
stos
outsb
mov
and
out
out
loopne
mov
and
das
xor
sbb
jne
imul
fdivrl
jecxz
addr16
test
adc
stos
repz
and
aaa
dec
scas
inc
pop
push
add
into
jge
daa
add
clc
out
and
mov
cmp
inc
fwait
shl
daa
jmp
enter
push
adc
dec
push
outsb
idivb
inc
push
jg
xchg
jl
lahf
inc
push
je
or
xchg
clc
inc
add
mov
pushf
mov
arpl
mov
mov
sub
push
lcall
clc
jp
and
adc
xchg
into
lods
mov
inc
in
out
wrmsr
rclb
xlat
or
adc
xor
lret
dec
sbb
not
jmp
xchg
add
lret
lret
jl
leave
in
cmp
std
clc
sbb
je
fsubl
daa
jg
push
adc
mov
sub
ljmp
mov
add
cli
pop
mov
xchg
ret
cmpsl
and
stos
xchg
push
push
mov
pop
notb
mov
cwtl
xchg
and
loop
enter
test
mov
les
and
aad
out
xchg
aas
mov
loope
pop
rdtsc
frstor
cmpsb
xor
inc
xchg
loop
sub
ja
data16
in
cli
pop
push
pop
mov
je
jecxz
lcall
pop
push
push
insb
sub
fdivrl
scas
mov
fnstenv
sbb
mov
mov
stc
imul
sbb
mov
mov
or
pusha
pop
mov
test
xor
mov
adc
call
dec
mov
xor
stos
pop
or
rclb
negl
fildll
jp
push
cmpsb
mov
gs
mov
or
mov
or
xchg
addb
rcrl
imul
and
pop
les
jle
dec
mov
or
xor
or
in
and
push
cmp
hlt
mov
cwtl
push
je
cmpsl
xchg
push
rorl
fwait
into
cmp
outsb
iret
xchg
jg
flds
test
fcomi
js
jne
push
and
repnz
dec
or
cli
xor
out
and
test
xchg
cmpsb
and
mov
inc
nop
bnd
bound
data16
pop
sub
pop
pop
icebp
sub
repz
aas
sub
mov
mov
push
dec
in
cld
test
jne
imul
sub
cli
jb
push
movsb
stc
jge
xchg
or
movsb
mull
push
into
push
push
inc
xlat
mov
in
and
cmp
sub
mov
pop
clc
jno
icebp
add
mov
test
xor
jmp
jae
ret
cmpsb
hlt
push
jmp
push
jge
inc
cmp
jg
in
rcl
loop
test
insl
jbe
pusha
mov
pop
pop
cwtl
pop
in
stc
out
rorw
mov
sbb
dec
jnp
sbbl
push
adc
movsl
push
adc
shrl
ret
aam
aas
or
jns
cltd
lret
fiaddl
jns
sub
outsb
pop
negb
nop
les
gs
xchg
inc
cld
mov
xchg
jnp
push
push
or
xlat
pusha
xchg
mov
add
sbb
jecxz
dec
mov
or
test
xchg
inc
inc
enter
add
fcomps
inc
outsl
rclb
add
sub
dec
mov
inc
or
and
shlb
addl
jge
sub
jne
stos
dec
mov
push
out
fwait
addb
pop
clc
repnz
popa
xor
stos
mov
push
jne
and
add
and
push
test
xor
out
jl
inc
jo
ja
cs
rorb
sahf
inc
xchg
data16
xor
cmc
dec
add
shrb
cwtl
movsl
lea
and
stos
out
test
cmp
outsl
xchg
out
call
icebp
pop
nop
cmp
xchg
sbb
mov
out
or
dec
loope
pusha
push
cli
leave
lock
sub
xchg
stos
push
xchg
xchg
mov
idiv
sbb
sub
mov
test
jae
lods
lods
jae
xchg
adc
mov
js
pusha
outsb
scas
bound
imulb
push
fcmovu
lret
mov
mov
shll
jne
addl
aam
pop
fsubrl
jl,pn
cmp
arpl
cwtl
lods
int
push
mulb
aas
mov
loop
std
scas
lock
jp
lods
mov
sbb
push
outsl
xor
xchg
add
inc
mov
ret
ds
sub
in
addl
lcall
cmp
insl
movsl
cld
movsl
cmpb
shll
inc
ds
adcb
or
mov
mov
jmp
bound
cmp
test
pop
add
aad
mov
fdivs
adc
inc
add
xchg
loope
mov
fidivl
fcomi
mov
lock
subb
int
adc
mov
pop
mov
or
push
mov
pop
jmp
sbb
sub
fidivrs
push
rclb
dec
icebp
jl
inc
and
dec
sbb
add
stos
inc
fisubrl
div
push
rorl
repz
sti
jae
mov
jae
and
push
aam
mov
fsts
loop
mov
xchg
and
nop
pop
push
xchg
and
js
arpl
movsl
xchg
loope
into
imul
push
cld
push
cld
shll
dec
or
jae
dec
jo
jl
mov
cmp
xchg
sti
sahf
cmc
mov
xlat
xchg
fwait
inc
dec
lret
cs
mov
loope
xlat
inc
push
sbb
orb
idivl
cli
mov
xor
xchg
sub
push
lods
xorb
das
daa
jno
sbb
cwtl
jmp
pop
push
jbe
push
or
mov
inc
repnz
negl
xor
add
mov
cmpsl
loopne
enter
stos
std
and
mov
jae
out
and
inc
xor
push
sbb
mov
dec
cmp
inc
addb
mov
cmpsb
cs
ljmp
icebp
movsb
addb
ljmp
jge
bound
mov
lea
push
mov
inc
or
add
outsb
add
in
pop
sub
jo
lock
bts
xor
pusha
lret
outsb
xchg
int3
jnp
test
cmpsb
pop
dec
inc
and
xchg
in
mul
sbb
movsb
sub
sbb
lea
push
test
cmc
andb
out
lcall
lods
stos
ret
sub
or
arpl
cmp
xchg
push
add
jle
jbe
push
les
jp
add
xchg
lods
and
push
or
xchg
testb
cli
jae
dec
add
in
xchg
sbb
adcb
js
rcl
ret
mov
push
fists
pushf
scas
mov
push
dec
jg
loop
shl
mov
push
aad
and
lods
mov
iret
shlb
cmpsl
sub
jmp
mov
inc
xchg
jle
sbb
pop
cs
das
inc
sbb
mov
dec
in
test
mov
xchg
cmp
xor
or
in
push
lods
lret
xchg
cltd
add
ss
in
and
push
adc
cmp
and
mov
push
cmc
add
stos
add
in
xchg
fdivr
lods
pop
or
jns
add
mov
jbe
sbb
xchg
mov
and
pop
pop
fidivrl
sbb
cmpsl
or
mov
scas
mov
push
push
and
push
push
ja
rclb
shrl
cltd
ret
imul
xor
outsl
sbb
xchg
ret
test
ret
jp
xor
pop
mov
mov
mov
dec
loop
xor
js
test
sbb
cmpsb
and
xor
jo
fcomip
fisubrs
mov
jge
hlt
mov
ja
sbb
jnp
incb
xchg
push
repz
and
js
mov
imul
loopne
ss
jg
rorl
mov
mov
das
fs
mov
fnstenv
cmp
jmp
sbb
mov
std
jmp
les
push
sahf
mov
jbe
push
js
cltd
push
fidivrs
outsl
xchg
ret
and
loope
mov
mov
rep
je
xor
in
push
mov
fisubrs
jecxz
sub
rclb
push
les
subl
icebp
inc
xchg
rol
cltd
sarl
lock
push
xchg
in
sbb
sub
xchg
xchg
mov
mov
xor
push
pop
addl
int3
dec
fdivl
push
jl
les
add
jp
ficomps
cmp
jae
xor
jo
les
jbe
dec
push
sub
ds
jp
data16
or
sbbb
add
jno
aaa
jb
out
in
call
callw
enter
iret
mov
adc
outsl
imul
jle
xor
test
pop
and
mov
jae
dec
rolb
mov
and
repnz
xor
sbb
inc
pop
shlb
cmp
shrl
mov
cmpsb
mov
xchg
push
orb
jo
pop
ss
and
mov
dec
dec
repnz
insl
xchg
sbb
fs
loope
inc
fimull
push
dec
jg
jo
daa
shr
ficompl
fstl
push
mov
into
stos
or
in
loop
pop
insb
mov
scas
or
push
daa
outsl
nop
shrb
dec
dec
loopne
jge
es
dec
dec
mov
mov
mov
scas
mov
push
mov
int
add
sub
adc
mov
mov
cmp
and
sub
into
push
sar
in
scas
imul
xorb
idivl
add
and
cmpsb
mov
in
test
aam
sbb
iret
adc
mov
mov
add
ret
sbb
inc
lods
push
mov
out
popf
stos
bound
pop
out
test
loop
lret
je
sbb
inc
jno
pop
mov
imul
stos
fwait
xor
xchg
add
add
imul
sysexit
mov
pop
jle
test
lods
mov
stc
mov
xchg
nop
push
clc
dec
cmpsb
mov
stos
iret
cmp
rcll
cltd
inc
mov
mov
icebp
xchg
push
out
xchg
lcall
sbb
ljmp
lds
cmp
sub
pop
inc
xor
test
fisttps
dec
mov
pop
pushf
and
movsb
ds
movsl
mov
imul
out
pop
int3
lea
cld
pop
xlat
push
push
shlb
dec
mov
or
insl
repnz
push
jle
adc
jbe
pop
out
outsb
xchg
test
outsb
lret
pusha
inc
or
fistl
and
jbe
push
and
and
push
clc
add
movsl
cmp
aaa
inc
or
imul
xor
lods
stc
in
pop
jmp
push
dec
xor
jb
push
int3
loope
mov
jl
sub
repnz
dec
or
push
lds
inc
cmp
pop
push
idiv
gs
rcrb
subb
jg
loop
inc
cmc
and
sub
and
pop
mov
lret
gs
xor
inc
mov
imul
mov
pop
mov
je
sub
jg
push
sub
pop
dec
jo
sti
pop
fstpt
mov
cmp
mov
xor
xor
or
mov
cltd
mov
lds
jae
sti
lahf
push
sbb
ud2
gs
cmpsl
and
int
inc
call
mov
xchg
push
sub
fistl
add
inc
lods
add
adc
jecxz
fnsave
or
xchg
call
push
outsl
test
stos
arpl
add
adc
js
jbe
xlat
pop
aaa
xor
fildll
sub
jo
std
shlb
es
ret
add
outsl
jns
cli
in
sbb
out
xor
xlat
jle
gs
sti
cltd
mov
pop
and
mov
test
add
fwait
aas
and
gs
push
push
outsb
dec
lods
add
sub
icebp
dec
mov
add
mov
jnp
xchg
push
jo
dec
inc
pushf
xor
iret
sub
xchg
sahf
mov
scas
mov
adc
sar
lods
mov
enter
stos
fcmovb
rcrl
add
mov
add
icebp
jecxz
mov
jne
inc
out
cmpsl
lcall
xor
adc
mov
lods
cmp
mov
mov
sbb
pop
push
sub
jo
adc
jp
xchg
mov
pop
je
xchg
xchg
fnsave
push
iret
mov
inc
mov
pop
mov
dec
fldenv
shl
out
xchg
dec
idivb
pop
and
leave
hlt
sub
jmp
inc
out
mov
or
cmc
xor
and
repz
cmp
adc
lret
scas
cld
mov
test
push
adc
xchg
inc
out
sbb
in
int3
xchg
mov
popa
orl
into
test
pop
dec
pop
lret
fnstsw
ds
cmp
dec
scas
sbb
mov
lds
cmp
xchg
push
add
xor
ja
stos
or
outsl
mov
insl
negb
jp
and
in
leave
ljmp
sub
pushf
loope
insl
inc
es
jp
orl
add
pop
jp
ret
cmc
adc
xor
insl
rol
mov
das
lods
jge
cmp
std
dec
lret
dec
ljmp
or
ljmp
inc
lds
pop
mov
xchg
mov
out
lea
ret
ljmp
rorb
repnz
jmp
xchg
roll
add
jmp
aaa
int
xor
fs
test
mov
xor
fnstcw
push
xlat
das
in
add
pushf
xchg
xchg
dec
lods
mov
jecxz
hlt
shll
mov
andl
call
xchg
repz
fwait
adc
or
iret
loop
sub
fimuls
mov
imul
dec
clc
je
stos
jae
ljmp
pop
lods
es
xorl
roll
cmp
push
test
enter
jb
hlt
ljmp
and
fdivs
ffree
inc
push
int3
aam
icebp
push
in
inc
sub
cmc
sub
cmp
mov
out
loope
add
icebp
adc
clc
push
pop
xchg
cmp
inc
jge
sbb
adc
sbb
cwtl
scas
mov
divb
xor
mov
xchg
icebp
int3
mov
insb
mov
push
xor
lret
sub
push
lret
inc
fsubl
and
mov
fisubrl
xor
mov
bound
scas
jecxz
jg
int3
sub
imull
xchg
fists
fs
outsb
mov
fucom
inc
addr16
lock
push
dec
add
fidivl
lcall
mov
out
push
scas
in
mov
fnstenv
scas
test
jp
stc
fsub
pop
cmp
mov
mov
adc
push
fadds
aaa
and
fstl
aam
fucomi
xorb
fiaddl
je
xor
loope
test
mov
jg
xchg
push
rcll
into
push
scas
cmpsb
stos
rclb
fiadds
mov
cmp
cmp
xchg
jle
out
sub
add
in
clc
sbb
aam
dec
pop
mov
rcll
decl
inc
mov
popf
stos
mov
pop
mov
sub
mov
mov
xchg
out
push
xchg
aad
rorl
rclb
or
sub
ss
add
ja
out
mov
sbb
pushf
fcomp
cmpb
mov
or
insl
cmpsb
sbb
cmpsl
lods
or
xchg
add
sub
xchg
lds
mov
xor
stos
inc
lds
mov
sbb
bound
imul
outsb
mov
rcrb
mull
and
push
ja
pop
adc
std
lock
push
or
push
push
mov
mov
in
in
xchg
js
or
pop
inc
push
rolb
ficoml
es
aas
lock
std
or
mov
jecxz
jle
or
cmp
push
dec
and
arpl
imul
xchg
mov
movsb
push
push
add
jae
mov
add
cli
add
or
pop
into
xchg
es
xor
lods
mov
in
pop
or
aam
mov
les
xor
lret
imul
cmc
sarb
push
lock
nop
cmp
mov
xchg
scas
test
std
cmp
mov
cmpsb
mov
jge
lret
sub
insl
push
lea
movsb
adc
push
xchg
inc
or
push
jge
clc
repz
cmp
pop
dec
fs
daa
pop
nop
mov
mov
leave
mov
enter
jae
jecxz
aam
inc
insl
inc
fistpl
jecxz
sbb
xlat
pop
fcoms
cvtps2pd
roll
push
mov
nop
hlt
fldenv
fdivrl
lret
int
jp
xchg
mov
inc
imul
xchg
add
and
xchg
fld1
imul
mov
xchg
adc
out
ljmp
fldl
or
inc
push
icebp
in
push
xchg
jbe
movsl
out
outsl
loop
push
mov
fwait
dec
imul
shrb
add
mov
mov
cmp
or
loope
pop
jecxz
loop
cmpsb
xchg
or
stos
aaa
dec
dec
push
out
dec
adc
mov
rolb
adc
dec
jno
xchg
push
es
out
imul
push
pushf
pop
add
sahf
xchg
test
push
jns
les
jmp
ja
mov
lods
rorl
cs
enter
xor
lcall
push
movsl
inc
adc
stc
insb
inc
lock
aas
in
hlt
push
and
pop
inc
insl
les
nop
sbb
ljmp
fmuls
xor
rolb
movzbl
push
pop
adc
adc
add
mov
add
mov
add
into
test
stc
or
insl
andb
popf
pop
ffree
imul
adc
ffreep
add
sbb
pop
pop
inc
adc
out
loop
jg
shlb
mov
sub
fnstenv
imul
jnp
pop
or
inc
inc
jbe
xor
inc
aaa
pop
sub
int
jle
std
mov
test
fs
jne
jge
mov
and
mov
lea
add
jecxz,pt
add
hlt
popa
scas
cmpsb
dec
inc
and
mov
sub
push
fcomps
out
inc
push
loope
cmpsl
mov
sahf
xor
jno
movsb
test
mov
rorl
bound
xor
test
lods
xor
jmp
mov
daa
lret
nop
fistl
cmpsb
fcmovnb
cwtl
cld
cltd
inc
cld
dec
add
and
sub
mov
pushf
fs
popf
xor
mov
cmp
pop
xor
pop
and
jo
pop
repz
sahf
sbb
mov
inc
rcrl
arpl
mov
lahf
ret
push
sarl
mov
sbb
cltd
xor
mov
jnp
rclb
call
push
mov
pop
push
jb
sbb
push
mov
cmp
jge
and
fdivl
jle
mov
xor
jp
xchg
jns,pn
or
ficompl
xor
xchg
and
stos
repz
sub
repz
mov
adc
or
jne
mov
xlat
test
inc
jne
cs
cmp
lock
popa
add
add
shl
cmp
and
aas
pop
jbe
stc
hlt
mull
mov
lret
stos
mov
sbb
and
enter
loop
jb
mov
adc
js
idivb
dec
lods
and
loope
ret
and
pusha
popf
ljmp
or
orl
into
daa
fisubs
dec
push
hlt
or
sbb
xchg
push
mov
xchg
fisttps
inc
cs
cmp
fisubs
repz
sub
pop
mov
test
lds
inc
jmp
cmp
push
loop
out
das
addr16
pop
xor
mov
jg
push
aam
ret
or
ljmp
xchg
push
cmp
xor
rcl
pushf
aad
push
jge
lds
mov
aas
data16
test
dec
ret
dec
pop
pop
pop
mov
mov
mov
sub
jmp
stc
daa
xchg
icebp
insb
push
and
add
xchg
jg
push
push
pop
and
inc
aad
cmpb
add
pop
push
or
inc
cmp
push
hlt
icebp
jno
lret
xchg
jae
inc
cmp
xlat
out
das
jp
mov
pop
test
cmp
fcomps
jo
cmp
and
sub
jge
mov
lock
sbbl
das
adc
sub
xchg
mov
mov
cmpsb
xchg
pusha
push
mov
imul
dec
xchg
sub
fnstsw
inc
mov
test
in
test
rolb
cmp
and
ficompl
push
imull
ret
sahf
rcl
cmp
gs
adc
lcall
andl
sti
xchg
cmc
cmc
icebp
xor
add
test
jecxz
xchg
sub
movsb
xchg
dec
xchg
or
push
pop
add
cmp
sbb
cmp
mov
bound
and
mov
jne
lcall
daa
movsl
lret
mov
shll
and
iret
or
ljmp
jg
cmc
mov
addr16
jns
jbe
cmp
inc
add
or
and
fstpl
xor
scas
dec
in
imul
pop
leave
mov
mov
mov
lods
push
ja
mov
jge
ljmp
leave
pop
dec
sbbb
loopne
je
push
mov
lcall
fcoml
cltd
add
push
call
and
loope
adc
es
or
pop
sub
mov
out
xor
fwait
and
inc
mov
inc
adc
xchg
jp
xlat
cmpl
imul
sbb
fisubrl
push
popa
test
in
jp
ret
aam
outsl
adc
pop
push
loopne
or
int3
arpl
leave
push
pushf
insb
xchg
gs
fcompl
pop
test
test
mov
mov
xor
in
and
cmp
mov
mov
lahf
pop
adc
cltd
out
xor
sbb
push
test
dec
sub
and
test
scas
add
imul
mov
mov
in
movsb
push
es
jge
pop
scas
dec
mov
or
test
add
addr16
push
sti
movsb
xor
int
add
sub
ror
pusha
dec
mov
bnd
xchg
jne
mov
xor
sbb
adc
mov
cli
xchg
lds
ret
mov
mov
fnsave
aam
lods
nop
pop
jnp
cmpsl
rorl
push
mov
pop
mov
frstor
cmpb
add
mov
inc
sbb
xchg
pop
pop
inc
and
sbb
sbb
popa
cmpsb
adc
stos
xchg
fidivs
out
push
push
test
lds
push
push
mulb
xchg
mov
jae
aam
adc
xchg
pop
test
xchg
stc
mov
or
je,pn
daa
jmp
inc
fwait
divb
inc
lret
ds
xchg
outsl
cmpsb
stc
mov
push
icebp
lea
jmp
mov
mov
fcomps
push
or
pop
add
sub
pop
shlb
and
and
test
fsubl
xor
inc
add
les
sub
jmp
add
es
pop
daa
out
ficoms
push
shlb
xor
jbe
stos
inc
jle
cmp
mov
fldcw
das
lcall
fwait
push
test
addl
lea
mov
cmp
xchg
out
and
nop
fmull
cmp
xor
mov
addr16
aam
filds
cmpsb
shll
pop
decb
mov
fimuls
mov
notl
xchg
mov
lock
add
xlat
jbe
scas
ret
mov
lock
and
jge
fimuls
jge
mov
mov
lret
sti
add
ja
les
dec
ss
inc
cltd
es
clc
jbe
mov
dec
ljmp
pop
fadds
mov
cltd
push
cwtl
ret
sbb
in
xchg
pop
fs
xchg
ds
rorb
int3
jge
repnz
pop
mov
xor
pslld
insb
sbb
mov
dec
test
xor
inc
mov
lret
subb
repz
popa
clc
popa
xor
lahf
add
filds
xchg
out
adc
arpl
pop
sti
mov
mov
xor
clc
cmc
push
loope
jp
cmp
push
cmp
xor
je
int3
rcl
xor
adc
xor
xchg
imull
inc
pop
inc
imul
xchg
fiadds
cmpsl
lea
ror
in
mov
xchg
mov
or
mov
pop
addr16
push
lret
stos
adc
stc
out
add
pop
adc
pop
push
scas
inc
ja
adc
stos
in
sub
mov
dec
dec
xor
push
mov
cld
cli
mov
mov
xchg
push
and
dec
cmp
jg
dec
pop
sbb
fdivrl
push
push
adc
sbb
test
gs
ret
aad
pop
jns
les
mov
mov
or
inc
push
scas
outsb
xchg
sub
or
jge
sahf
jno
inc
or
shl
bound
roll
xor
outsb
push
inc
fldenv
lret
mov
ljmp
nop
in
fidivs
jl
sbb
lret
repnz
rcrl
push
mov
mov
push
scas
jb
xor
dec
lcall
pusha
ret
loop
out
ljmp
mov
cltd
mov
cmpb
sahf
jae
pushf
int
std
xchg
les
mov
repnz
jmp
lods
es
sub
pop
popf
repz
fisttpll
sbb
aad
sti
movsb
xlat
jne
jp
pop
xor
insb
cmp
cmp
push
add
test
std
adc
dec
sbb
jmp
pop
xor
lods
hlt
int3
cmp
fstps
inc
aad
insl
add
lret
js
scas
mov
loopne
je
push
cmp
mov
dec
enter
xchg
dec
movsb
fidivrs
in
jne
daa
js
jmp
or
push
psrlq
adc
es
adc
jno
cli
fs
cmc
mov
inc
test
imull
push
mov
cmp
jne
xor
push
mov
jp
dec
inc
sub
inc
mov
sbb
lods
jg
shrb
sbb
out
mov
std
push
pop
arpl
push
pop
es
cli
aaa
mov
jno
and
in
popa
jge
jbe
xor
mov
push
cmp
push
testl
jae
aad
mov
cmp
adc
pushf
pushf
adc
lcall
cltd
xchg
cmp
das
notl
aaa
fdivp
aas
out
pop
outsl
add
adc
divl
sti
mov
mov
xlat
jecxz
enter
pop
fisubrl
fists
or
scas
out
or
neg
es
ret
popa
lahf
cmc
or
movsl
cmp
inc
cltd
clc
int3
test
fildll
sbb
dec
nop
aas
mov
xor
inc
leave
lock
pop
nop
or
addr16
and
xchg
inc
mov
add
nop
fimuls
xchg
sub
pop
mov
inc
cmp
pop
xor
sub
pop
iret
xchg
add
xor
sub
out
into
cwtl
in
mov
mov
fwait
into
sbb
dec
xchg
sub
add
and
or
sbb
jns
cmp
dec
jbe
cmp
adc
sub
decb
lods
or
pop
sub
xchg
test
push
out
jmp
bound
popl
mov
mov
add
cld
lret
sbb
mov
or
aas
inc
aas
xchg
inc
pop
jle
imul
sub
sarb
imul
inc
xchg
dec
je
mov
aas
sbb
dec
push
test
jae
sbb
push
sbbb
std
lods
mov
movsb
mov
into
fstpl
and
ret
loop
add
movsl
add
sahf
or
scas
sub
fldenv
notl
stos
jne
jge
iret
and
movsl
xchg
and
rclb
call
push
daa
ss
js
int3
ljmp
pop
mov
test
cmp
test
jne
sub
xchg
adc
sahf
mov
mov
sbb
fsts
cwtl
insl
xor
mov
inc
add
xchg
inc
lds
add
jnp
popf
xchg
pop
mov
int3
push
ret
aad
jns
cmpsb
clc
clc
mov
adc
les
jg
push
pop
fdivrl
stos
pushw
addl
dec
in
dec
and
testb
jge,pn
rcrl
push
incl
xor
pop
mov
shlb
jmp
iret
leave
xchg
sub
aas
scas
xchg
test
cli
idiv
js
inc
mov
jecxz
push
push
xchg
daa
and
scas
add
std
pop
push
testl
jno
sahf
aam
jae
jno
adc
jno
push
xchg
xor
jp
ficoml
mov
stos
test
shl
cmpsl
xor
out
sub
ljmp
xchg
sbb
add
pop
adc
sbb
lock
sub
fdivrs
fwait
and
push
push
out
jp
fidivs
aaa
mov
lods
dec
fdivrs
popf
pop
es
mov
cli
jl
mov
fisttps
dec
gs
mov
shll
pop
in
pop
fiadds
aam
mov
adc
mov
sbb
jne
and
aaa
or
test
add
hlt
rcrl
cmp
cs
fs
rclb
sbb
ss
sbb
lea
cmp
sahf
lods
dec
cmp
push
test
add
hlt
les
loopne
scas
xor
pop
xor
jo
dec
es
sub
scas
dec
imul
repnz
jb
ret
imul
lock
push
mov
pop
or
xor
sub
sar
mov
add
xor
push
cmc
mov
nop
shlb
dec
mov
cltd
jae
mov
push
ret
enter
mov
into
ljmp
add
std
cmc
imul
ja
and
push
or
xchg
shrl
sti
fisttpll
and
cmp
or
aam
and
aas
jo
sub
sbb
pop
cmp
xor
xchg
into
inc
or
in
stos
mov
or
mov
pop
test
cli
jnp
scas
aam
mov
jb
lret
jb
stc
fucomip
sub
cltd
xchg
flds
adc
mov
cmpb
jg
sbb
sub
repnz
cwtl
stos
mov
pusha
fwait
insb
sub
push
dec
lods
out
leave
cmp
pop
aaa
loope
cmp
bound
sarb
pop
gs
iret
inc
cs
pop
push
jae
mov
pushf
jne
gs
mov
shrl
stc
stos
les
mov
shll
bound
xor
pop
jae
lods
rcr
xor
push
sbb
in
cwtl
int3
pop
aas
push
leave
rclb
xchg
pop
inc
loopne
inc
sub
mov
or
sti
xor
inc
add
xor
loop
mov
icebp
inc
aaa
dec
shrb
jmp
out
hlt
mov
ret
cmp
jg
sbb
pushf
rcll
ret
insl
push
cmp
bound
and
aaa
int3
pushf
dec
mov
mov
xlat
sarb
cmpl
xor
ljmp
mov
and
addb
dec
jns
pop
inc
repz
bound
in
sub
pop
daa
clc
jne
xlat
push
call
push
mov
xchg
sbb
cmp
addl
movsb
nop
stos
out
pop
mov
mov
mov
loope
ljmp
or
clc
sub
bound
fildl
fstp
dec
sub
mov
cltd
fidivrl
rcrl
mov
mov
xchg
aaa
mov
daa
jae
push
sub
icebp
mov
mov
adc
or
mov
mov
and
jno
push
adc
insb
mov
cli
mov
adc
mov
js
pop
fwait
xchg
pop
jge
fcomps
adc
mov
pop
inc
jbe
movsl
imul
lock
cwtl
add
lds
fucomp
jne
ret
popf
roll
adc
ficomps
cmpsb
scas
leave
add
push
push
fsubr
push
jmp
push
dec
mov
testb
add
jne
dec
push
mov
sbb
mov
std
pop
arpl
imul
lods
pop
into
jo
movsl
mov
mov
frstor
nop
ret
leave
sub
mov
popf
inc
push
out
cmpsl
nop
add
xchg
adc
sub
jle
jmp
fcom
mov
ja
pop
cld
lcall
mov
mov
lds
adc
mov
push
mov
sub
sbb
xchg
sbb
scas
inc
insl
jbe
mov
stos
jne
jge
test
movsl
mov
xor
out
mov
push
jnp
mov
sub
pop
inc
lea
mov
jbe
sub
mov
pop
jmp
icebp
movsb
cmp
shr
stos
push
mov
add
push
and
pop
mov
les
adc
xor
mov
or
rcll
push
shlb
adc
sbbl
dec
push
inc
cmc
and
adc
stc
jno
fwait
mov
mov
cmp
adc
adc
insl
shl
push
cmpsb
sub
pop
std
xor
push
iret
sti
add
sub
pop
mov
push
adc
out
mov
out
sub
xor
add
pop
rorl
jg
aad
cmp
adc
dec
cmpsl
lea
xchg
pop
out
pop
xchg
mov
mov
adc
and
sbb
out
cwtl
lea
push
push
mov
xchg
cmpsl
sub
sbb
or
xorb
out
sbb
lahf
pop
repz
xsha256
cmpsb
adc
mov
pusha
adc
mov
decl
sbbl
cmp
test
icebp
or
sti
push
mov
scas
movhps
adc
pusha
adc
fldl
aam
jb
dec
dec
fsubrl
sub
les
cmp
sahf
stos
mov
inc
addr16
dec
cmp
pop
dec
inc
push
push
mov
repz
int3
and
xchg
cmp
jnp
out
pop
mov
test
iret
mov
enter
or
jbe
outsl
fdivs
lret
lcall
ret
outsl
mov
push
ficomps
add
repz
xlat
cmc
dec
mov
mov
xor
scas
adc
mov
rorb
sub
dec
xor
lock
je
xor
sbb
xlat
cmp
push
scas
lods
adc
or
and
mov
or
push
mov
push
in
xchg
inc
dec
inc
arpl
inc
ret
inc
xchg
aas
rolb
sub
xchg
js
arpl
jb
push
xlat
sti
jns
test
lock
inc
pop
insl
outsb
dec
push
int
sbb
out
sahf
mov
push
rclb
mov
cmp
imul
setne
test
mov
add
mov
dec
mov
xor
adc
mov
shll
adc
sub
mov
sbb
mov
cmp
ret
push
cmpsl
in
into
xchg
fdiv
mov
cmp
hlt
rclw
push
add
inc
jecxz
inc
mov
outsb
adc
gs
subl
jmp
or
xor
aad
add
std
push
inc
shrb
dec
cmp
cmp
ds
aas
mov
dec
insb
xchg
outsl
sbb
bound
mov
scas
pop
jo
out
inc
inc
cmp
insl
jno
fcoms
pop
jg
fisttpll
jne
sahf
cld
mov
pushf
in
jge
leave
pusha
push
and
xchg
frstor
or
pop
xor
mov
and
mov
out
mov
scas
pop
cltd
ret
lahf
sbb
das
fwait
pop
cmpsb
mov
sub
loopne
shll
dec
cwtl
pop
imul
adc
out
stos
mov
imul
stc
jnp
xor
jle
add
mov
xor
or
jp
push
cltd
pop
or
inc
insb
adc
insb
bound
or
mov
in
push
shlb
xchg
dec
xchg
mov
xor
cmp
add
sti
pop
jbe
add
or
sub
rcrl
mov
es
sbb
lock
repnz
lahf
or
je
sub
pushf
sti
or
es
cmp
cmp
sbb
call
inc
cmpsl
push
in
lcall
rol
aaa
test
mov
adcb
sbb
push
daa
into
iret
cmp
outsb
outsl
adc
sbb
dec
lock
and
jmp
ljmp
insl
push
rcll
pop
ljmp
mov
cmp
fwait
pop
pop
fistpll
push
movb
negb
gs
inc
into
sbb
xor
out
jmp
inc
out
aas
es
mov
mov
pushf
jg
stc
or
xor
std
mov
cmpsl
mov
jno
mov
dec
sub
arpl
ja
lds
jno
inc
std
into
xchg
cmp
popa
daa
dec
int
mov
cmp
push
lea
inc
xor
inc
mov
je
sbb
pop
pushf
xor
mov
add
rep
or
cwtl
movsl
arpl
push
fsubr
out
adc
pushf
or
ljmp
dec
dec
ljmp
addb
ret
ss
outsb
leave
jl
mov
iret
shrb
jmp
push
inc
xor
add
jns
fbld
stos
sub
lcall
xor
push
xlat
inc
mov
rcl
addr16
arpl
test
mov
or
shll
push
roll
inc
mov
int3
and
inc
mov
xchg
inc
mov
lea
inc
sub
pushf
or
leave
loope
stos
adcb
xor
dec
stos
or
nop
lods
mov
dec
jl
mov
xlat
popl
jo
dec
or
xchg
cmp
ljmp
push
push
and
adc
jp
and
sbb
xchg
scas
aaa
sbb
hlt
jmp
push
add
push
cwtl
popa
lea
fnstsw
push
xchg
fdivrl
rcr
sub
movsl
pushf
push
xor
adc
rorb
popa
xchg
pushl
xchg
mov
shr
clc
mov
cmp
imul
sarl
pop
xchg
jno
add
xchg
lcall
xchg
mov
or
inc
out
pop
sub
aas
das
xchg
cltd
scas
or
out
or
out
push
stc
xor
int
cli
nop
bound
movsl
cmovnp
xor
inc
sti
mov
addr16
mov
insb
jb
loop
insl
dec
and
aad
mov
jb
cmc
arpl
addr16
lds
mov
jecxz
aam
lahf
mov
dec
xor
or
sbb
out
sbb
out
push
jmp
mov
ds
loopne
mov
or
fs
mov
xor
out
clc
sbb
adc
imul
scas
clc
jp
mov
adc
adc
adc
push
and
add
push
or
and
jb
xchg
sbb
je
jl
lcall
mov
push
add
dec
jo
fdivr
push
rep
xchg
cmpsb
insb
dec
adc
sub
lods
cmp
out
jnp
adc
pushf
mov
xchg
cmp
pop
mov
in
mov
add
and
sub
sub
sbb
push
inc
push
xchg
jle
adc
cli
loope
push
enter
add
cmpsl
xchg
adc
or
mov
jns
test
das
sub
dec
jae
mov
mov
addr16
imul
jmp
ja
test
fiaddl
jnp
xchg
fcmovbe
xlat
movsb
imul
jmp
ljmp
imul
stos
mov
cmp
inc
fisubrl
daa
adc
shll
and
fldenv
inc
jne
xor
sub
lret
dec
aas
stos
pusha
xor
xchg
add
cwtl
mov
mov
lret
icebp
call
imul
pop
adc
call
movsl
dec
scas
dec
jno
mov
dec
inc
sti
dec
or
fisubs
cmp
hlt
aam
inc
xchg
xorl
mov
push
jae
push
sub
popa
add
pusha
int
mov
cmc
test
sub
add
lcall
lea
fs
dec
data16
cmp
jne
rolb
mov
in
cmovl
cmp
mov
mov
int
mov
sbb
dec
push
xor
loope
cmp
into
loop
jo
xor
pusha
add
pop
fwait
aam
push
xchg
fsubl
stc
std
rolb
lcall
decl
mov
in
test
sbb
outsl
pop
cltd
aad
scas
lock
adc
mov
adc
adc
cmp
cwtl
dec
add
lds
pushl
add
cmp
or
mov
inc
fwait
mov
or
xor
xor
mov
bound
adc
cmp
stos
imul
add
scas
cmpsl
loope
stos
lret
adc
mov
enter
nop/reserved
orb
ret
movsl
repnz
cmp
into
mov
ficoms
aas
cmpsb
mov
mov
or
cmp
mov
ffree
stc
and
lods
fildl
divb
inc
pop
mov
into
dec
mov
and
adc
mov
xor
xchg
int3
mov
mov
aaa
cld
pop
push
in
adc
push
xchg
cld
adc
nop
pop
xchg
in
cmp
sub
inc
int3
int3
mov
test
xchg
inc
int3
cwtl
cmp
insl
or
sbb
mov
leave
nop
dec
test
je
and
mov
je
enter
fcomps
and
mov
mov
jo
repnz
stos
scas
enter
fistps
sbbb
pop
aad
pushf
lcall
movsl
bound
push
jno
cmc
outsl
mov
cli
orb
jne
pop
jb
mov
push
pop
mov
jb
push
mov
ja
sub
dec
jge
das
jmp
and
push
inc
ret
test
xchg
addr16
daa
out
ja
rcl
push
inc
popf
int3
xor
addl
and
push
cmp
or
std
out
xlat
pop
pop
lcall
inc
cmp
outsb
cwtl
pop
cmc
and
inc
mov
xchg
ljmp
jmp
stos
sbb
fwait
sti
jae
cmpsl
out
fdivl
test
pop
or
mov
push
xor
lea
dec
lret
add
xor
adc
adc
adc
and
adc
xor
mov
vmwrite
decb
inc
sbb
outsl
mov
aam
pop
imul
cmp
sbb
movsb
outsl
mov
mov
fcompl
cmpsl
cs
push
imul
xlat
addb
sub
xchg
add
push
inc
cmpl
pop
lret
cmpsb
ljmp
xchg
jnp
jecxz
pop
xchg
push
pop
lcall
cld
push
ret
lea
das
shr
inc
add
int3
outsl
add
dec
test
aam
loop
fwait
cmpsl
lret
push
xchg
icebp
adc
popf
inc
jge
scas
cltd
and
popf
outsb
mov
fisttps
or
and
scas
rcr
cmp
or
xchg
jno
push
ficomps
xchg
lods
stos
sti
scas
xlat
addl
fwait
mov
scas
test
and
popa
aaa
xchg
insb
ret
and
pop
movl
xchg
imulb
adc
and
sub
pop
sub
call
orl
mov
mov
jl
rol
xor
loopne
push
xchg
push
lods
stc
sarb
or
ljmp
sahf
je,pt
dec
fwait
dec
and
mov
cld
xor
cmp
dec
mov
scas
clc
bound
mov
push
test
jmp
pop
dec
mov
orb
inc
lcall
in
fstpt
sti
int3
fnsave
and
pop
xor
testb
jns
shrl
mov
inc
repnz
cmp
jne
loope
rorb
jge
add
int
jmp
add
push
fsubrp
xchg
sbb
hlt
lock
sbb
addr16
dec
pop
aam
mov
jne
xor
or
mov
inc
in
add
xor
and
loope
test
sbb
aas
and
xor
sbbb
mov
push
nop
fdiv
xchg
sbb
mov
cli
fidivs
lods
aaa
jl
xlat
fsubl
sbb
jno
pusha
mov
bound
mov
jmp
push
dec
add
inc
jge
jns
sub
sub
mov
in
adc
repz
mov
sahf
fidivs
cmp
gs
lcall
sub
cwtl
inc
stos
rcl
lcall
xchg
das
popa
in
xchg
aaa
push
mov
adc
jo
pop
sbb
popl
mov
call
xor
mov
pop
ss
addr16
into
bound
fs
mov
push
fdivl
push
cli
cli
jge
outsl
test
jae
xchg
cwtl
jle
lret
mov
fwait
in
fldenv
es
adc
lret
push
pop
loop
mov
pusha
dec
cltd
cld
mov
sbb
pop
ret
dec
sbb
push
push
fcomi
movsl
mov
inc
loop
jbe
shl
data16
out
xchg
fcom
jno
pop
add
fwait
xor
push
sub
loopne
cmc
xchg
add
cmp
sbb
popa
and
cmp
adc
aas
jl
test
xor
sbb
mov
ja
adc
adc
dec
mov
out
ret
push
add
ljmp
repz
jbe
cmp
test
faddl
cmovo
or
or
push
adc
leave
inc
loopne
cmp
xor
fidivl
in
hlt
or
loope
jns
add
adc
inc
cmpsb
pop
outsb
push
xor
push
es
outsl
xchg
inc
xor
shrb
or
sbb
imul
cmp
rcl
pop
pushf
and
lds
out
mov
rcll
xchg
cmp
inc
shlb
icebp
testl
cs
daa
pop
es
test
xchg
cmp
shld
add
push
les
cmp
xchg
inc
sub
std
xor
repnz
xchg
cmpsl
jle
js
sub
enter
aaa
clc
jne
or
in
push
sub
pop
and
addl
add
mov
bound
inc
sahf
sub
fidivrs
xor
xchg
add
push
mov
lret
ss
and
imul
cs
ror
xchg
adc
popf
sbb
sbbb
jl
inc
rclb
jg
inc
ret
pop
cmp
lods
jg
repz
and
fnsave
add
arpl
loope
add
ret
js
test
push
inc
jp
sub
xchg
lret
vpunpckhbw
mov
sub
fidivl
insl
jbe
push
repnz
adc
sub
out
push
popf
mov
mov
cld
inc
sarb
mov
out
into
sub
sub
or
mov
inc
test
push
mulb
dec
dec
add
pop
ljmpw
xchg
push
adcl
imul
dec
sbb
xchg
js
ljmp
sbb
pop
xchg
cmp
mov
sub
jle
div
inc
mov
add
mov
adc
jg
out
fcompl
xchg
pusha
lock
shlb
imul
dec
adc
inc
sbb
into
pusha
pop
cltd
add
loope
xor
add
addl
lods
lock
sbb
dec
pushf
xor
ljmp
xchg
sbb
push
adc
xchg
adc
xchg
jbe
adc
insb
xor
push
mov
lret
cmp
flds
cmpsl
insb
repnz
pusha
fstps
fildll
std
push
bound
ficoms
push
lahf
adc
rorb
cmp
jb
xor
and
xor
test
repnz
lret
and
lds
jmp
pop
add
das
fs
and
or
imul
scas
xor
in
pop
and
mulb
sbb
xchg
dec
scas
stos
lahf
adc
add
aas
pop
inc
mov
mov
sbb
pop
push
push
ds
int3
out
dec
jb
adc
mov
push
cmp
lahf
mov
mov
inc
add
push
mov
imul
dec
cmp
imul
mov
rclb
sub
scas
imul
sbb
jle
inc
adc
stos
pop
outsb
mov
int3
pop
xor
test
pop
and
push
insb
int
ret
xchg
xchg
insb
pop
ss
sbb
and
les
and
out
fpatan
enter
or
jecxz
popf
fidivl
mov
ljmp
aas
cmp
in
xor
add
ret
pop
and
enter
lds
lcall
les
xor
iret
dec
mov
dec
add
mov
push
rcr
pop
clc
out
enter
hlt
cmp
andl
gs
adc
das
sbb
adc
mov
jo
mov
xchg
jno
inc
or
jo
sbb
pushf
lahf
or
test
ja
dec
push
sbb
cs
xor
mov
fisubrs
xchg
fs
push
and
fisttps
sub
add
push
jb
stos
shr
dec
lret
sub
pop
inc
insl
repz
movsl
mov
test
cli
call
mov
scas
xchg
or
add
outsb
inc
imul
mov
lret
dec
jmp
jno
stos
jno
call
push
clc
nop
and
mov
leave
rorb
mov
or
or
dec
lods
jle
in
insl
es
lds
out
pop
jecxz
jmp
clc
jno
push
fisttpll
pop
aam
sub
loope
or
outsb
and
mov
xlat
and
pop
mov
mov
sub
cmp
xor
dec
mov
out
int
testb
lar
rcrl
cmc
or
clc
push
xlat
jb
dec
dec
test
lock
daa
dec
movsb
push
mov
cmc
push
push
lea
imul
ret
subb
stos
xor
adc
lahf
inc
cmpb
add
lds
cld
and
rclb
stc
out
es
push
lods
jmp
sarb
adc
mov
movsl
xor
adc
xor
in
cmpsl
cmpsb
cwtl
sbb
sub
addr16
xchg
out
stos
scas
daa
ret
sti
pop
imul
jg
cmp
and
lea
push
pop
xor
push
ljmp
fidivs
cmp
dec
out
fdiv
mov
jno
fcomip
cwtl
push
push
jo
mov
push
es
xor
fsub
pop
jnp
dec
les
sbbb
cli
decb
arpl
icebp
jp
dec
ja
fcmovb
scas
shll
inc
cmp
push
movsl
fdivl
fwait
sarb
push
rcrl
int3
loop
sub
flds
xchg
sahf
adc
and
mov
push
out
ja
pand
sar
jne
lock
inc
add
pop
andl
adc
xchg
or
leave
dec
cmc
sub
push
dec
js
mov
test
jb
mov
xchg
xlat
or
xchg
sub
scas
insb
int3
or
push
scas
xorl
das
std
int3
test
insb
inc
lea
int
ja
call
mov
mov
dec
std
inc
cwtl
dec
repz
inc
mov
shlb
ljmp
xchg
test
add
pop
in
insl
ds
test
xchg
cli
cmp
outsb
mov
repz
jb
popf
pop
fs
lcall
adc
push
iret
or
inc
rorl
mov
lock
mov
mov
outsb
sbb
mov
arpl
sbb
ljmp
sub
pop
fdivs
jg
movsb
mov
push
js
pop
cmp
pop
lahf
push
cmc
mov
outsb
xchg
xor
mov
nop
test
push
cli
aam
cld
sbb
jae
add
loope
push
mov
loop
jne
scas
iret
je
js
cli
mov
rorb
sbb
aaa
adc
xchg
pop
mov
je
jns
ret
in
mov
dec
dec
or
dec
mov
or
mov
ss
mov
in
add
outsl
push
sbb
popf
mov
jl
xchg
push
cmc
xor
inc
cli
add
clc
push
loopne
pop
xor
cmc
out
push
lock
or
xchg
ret
pop
std
loope
jecxz
notl
sub
or
je
cmp
and
imul
int3
cltd
adc
mov
cmp
sub
add
dec
sarl
mov
fisttpl
aad
fimull
mov
bound
out
cli
scas
ja
sbb
dec
inc
ficompl
rcr
int
add
adc
sbb
jmp
mov
outsl
leave
or
jmp
test
outsl
ds
sti
cmp
add
mov
iret
je
fcmovb
jns
ret
push
int
insb
notb
aad
clc
pop
push
iret
aam
inc
push
push
sbb
push
rclb
mulb
dec
lahf
repnz
subps
cli
jecxz
jno
loop
and
dec
notb
es
sbb
add
xchg
dec
pop
mov
mov
cmp
mov
nop
mov
adc
arpl
push
dec
push
cli
jecxz
jge
notb
pop
lret
jae
mov
dec
out
inc
jle
push
push
cmc
loope
loopne
adc
dec
xor
lahf
loopne
pop
inc
cmp
cltd
adc
aam
pop
jno
sarl
stos
or
insl
ret
add
mov
mov
cs
out
and
adc
rorb
inc
enter
and
sub
xor
outsl
jg
rcpps
push
mov
and
cmp
mov
orb
fwait
push
inc
push
das
mov
icebp
mov
arpl
pop
xorl
or
adc
lds
imul
es
lds
insb
mov
psubusw
cmc
test
add
inc
add
add
add
add
lea
inc
add
add
push
jbe
add
pop
add
add
add
add
jo
call
jle
add
arpl
cmp
into
fsubl
lods
int
fdivrp
add
loope
hlt
inc
outsb
gs
jnp
jbe
fldt
push
mul
test
mov
in
cltd
xor
cmpsb
jp
xchg
xor
jle
lods
aad
jo
add
mov
gs
xor
shlb
sub
cmp
shl
ret
mov
ret
mov
stc
fstps
add
pop
out
pop
mov
fs
add
inc
vsubsd
xor
filds
mov
scas
push
or
cmp
into
aam
out
jecxz
cmpsb
sub
fwait
test
subl
jecxz
mov
or
in
push
jecxz
push
in
push
iret
lcall
lods
xor
push
inc
addr16
mov
mov
pop
pop
pusha
push
lret
sbb
loopne
ja
ljmp
jmp
pop
rcrl
loope
jbe
sbb
cmc
dec
fistps
shl
subl
ret
pop
idivl
bound
jo
xchg
loope
sub
lock
sti
mul
sarl
push
std
sub
sub
add
mov
lds
pop
sub
sub
dec
gs
ret
jns
mov
mov
fwait
add
loopne
cmpsb
xchg
test
and
cmp
jp
ja
or
jb
cmp
jg
inc
fdivrs
mov
mov
mov
xchg
fidivrs
cmp
cli
out
mov
xor
aad
jp
and
add
pop
lret
sub
aam
addr16
stos
int
jns
in
inc
xchg
inc
push
addr16
mov
stos
xchg
inc
jns
nop
or
dec
fnstsw
sub
andl
inc
xor
pushf
mov
push
rcll
dec
xor
imull
xchg
test
inc
sti
and
inc
jle
ret
imul
mov
lea
fadds
push
or
adc
mov
cld
push
mov
daa
in
cld
xor
cli
movsb
ljmp
jno
movsl
mov
int
lret
popa
sub
xchg
out
clc
lock
lret
sbb
outsl
lock
pop
in
mov
ret
iret
pop
not
clc
push
push
adcb
and
pop
orb
dec
mov
mov
xchg
dec
cmp
jbe
in
rcrb
mov
rcl
ds
data16
mov
push
xor
in
inc
mov
pop
jmp
xor
add
enter
mov
shl
pop
call
push
jno
outsb
or
sbb
push
mov
dec
std
sub
mov
frstpm(287
cmp
int
dec
mov
shlb
dec
jb
inc
cwtl
lds
mov
inc
mov
imul
jnp
dec
inc
dec
imul
mov
add
mov
push
push
push
cmpsl
scas
int3
inc
or
ret
cmc
mov
jmp
stos
es
stc
sub
jg
pop
cmp
sub
mov
inc
adc
or
std
stos
xor
mov
mov
test
test
rcll
jg
pop
cltd
sbb
jle
jnp
cmp
in
sti
jg
mov
dec
push
mov
popf
dec
or
sub
jg
push
into
cmpsb
std
mov
sub
xchg
icebp
stos
pop
stc
ficoml
out
jmp
push
sbb
xchg
pop
call
cmpsb
xor
sub
jl
sub
aaa
add
mov
jne
pushf
cmp
fcompl
sbb
push
mov
cmp
inc
mov
or
jae
sbb
push
cmp
add
mov
testl
xchg
sahf
int
mov
iret
ss
mov
mov
lcall
or
cmp
xchg
mov
lret
scas
push
inc
loope
or
std
jmp
into
push
iretw
push
cmp
sti
sti
jo
push
pop
xchg
lahf
mov
xor
xor
cmpsb
inc
jno
push
outsb
or
pop
xchg
xor
mov
mov
inc
fwait
adc
gs
lret
into
xor
clc
or
fs
or
fs
pop
add
out
jns
ficoml
out
sub
test
or
jmp
sub
cwtl
mov
icebp
and
and
jg
mov
push
mov
adc
or
icebp
mov
jmp
pop
push
jle
es
mov
and
cmc
xchg
cmp
js
fwait
xor
shrb
cmp
pusha
out
fdivp
cmc
imul
add
jp
push
lret
roll
out
fcmovb
adc
mov
fisubl
inc
add
fbstp
movsb
pop
aaa
je
imul
mov
sti
mov
cld
push
inc
push
jno
cmp
jge
xchg
mov
stc
shlb
scas
arpl
push
xchg
adc
mov
lods
lcall
pop
les
popf
push
lahf
sub
pop
push
cmp
mov
shlb
mov
add
jp
push
adc
jmp
test
outsl
cmp
gs
xchg
fnsave
jecxz
bswap
xchg
add
push
add
popf
inc
mov
mull
rclb
sub
push
pop
sbb
jle
mov
pushw
rorl
cli
hlt
adc
cld
cmp
adcb
cmp
int3
popf
es
sub
loopne
adc
cli
ds
mov
xchg
stos
sub
lods
jb
pop
iret
test
stc
movsb
outsl
mov
loope
lcall
cmp
lods
shlb
xchg
test
test
out
pop
jno
movsl
pop
inc
xchg
pop
xor
testb
test
in
or
xchg
adc
cwtl
adc
sbb
test
movl
insl
aad
jnp
insb
jns
ficoml
scas
mov
rorb
out
lods
shrb
jecxz
mov
cld
arpl
push
pusha
jns
jo
fst
std
lock
sarb
sub
arpl
lret
aam
aad
ljmp
out
mov
cmpsl
cli
cmp
fs
push
lods
pushf
loop
pushl
cmp
es
push
cwtl
test
je
mov
loope
lock
cmc
fs
arpl
hlt
lahf
call
push
pop
jl
add
movsl
mov
mov
daa
ret
cmc
icebp
pop
sbb
or
cmp
jne
fisttps
sbb
mov
inc
push
out
lds
clc
pop
cmc
je
test
or
int
ret
cli
sub
sbb
icebp
test
les
xchg
sbb
rcrl
and
xor
loop
jmp
mov
push
xchg
push
insb
pop
clc
outsl
push
rol
jle
lcall
mov
adc
dec
sub
test
cmp
cmp
xchg
test
lahf
and
and
xchg
pop
out
data16
jmp
push
mov
out
call
inc
jecxz
pop
popf
stos
daa
test
dec
push
mov
push
pop
out
cmp
out
lea
dec
sahf
mov
sbb
mov
gs
mov
aam
push
and
divb
stc
clc
xchg
or
icebp
nop
pop
or
adc
sbb
mov
cmpsl
sub
mov
fcoml
imul
xchg
cltd
push
push
mov
dec
lret
push
push
jno
sub
or
outsb
seto
loop
call
jae
and
cmpsl
ret
xchg
or
jl
in
insb
sub
or
insl
push
fsubrs
je
xchg
xchg
sub
or
pop
ljmp
mov
pop
pop
sbb
mov
icebp
into
cmp
out
cmp
test
shl
dec
pop
fmull
xchg
daa
outsb
sahf
fistpll
or
add
xor
xor
push
jmp
push
and
lret
les
movsb
mov
sbb
daa
push
lcall
ljmp
jmp
jmp
pop
jl
xchg
out
jne
mov
add
je
push
mov
push
test
xchg
scas
push
xchg
es
nop
mull
inc
jo
dec
leave
fisttpl
inc
sti
and
int
add
cmp
xchg
cwtl
call
das
ret
lods
adc
std
push
sub
sub
xor
lcall
jnp
pop
sbbb
adc
jbe
fs
inc
pushf
mov
pop
in
jg
rcl
fcmovnb
push
aas
or
jp
cmc
in
dec
push
xor
or
cmc
repz
pop
fs
add
lods
xor
and
movsl
mov
pop
daa
mov
je
fiadds
repz
dec
loope
call
mov
xchg
mov
cmp
lock
and
cli
lret
adc
add
fstpl
push
roll
aam
jb
cmp
mov
punpckhdq
out
push
nop
loopne
jmp
out
outsl
mov
xchg
xchg
cmpsl
lea
outsl
cmpsb
adc
mov
pop
fstpl
sub
and
rorb
or
xor
xchg
fcmovb
negl
xchg
cld
mov
sbb
sub
and
out
ror
stc
scas
inc
or
mov
mov
xchg
das
inc
outsb
aaa
cli
adc
xchg
fs
pushf
in
in
in
jp
shll
mov
xchg
add
rep
in
icebp
cltd
or
mov
jp
or
or
fstps
sarl
scas
loop
es
addr16
xchg
adc
xchg
arpl
adc
inc
lret
out
in
hlt
idivl
rcrl
jns
xlat
jo
pop
in
or
inc
mov
in
pop
dec
insb
add
outsl
xor
int3
adc
sbb
mov
sub
les
dec
cmpsl
movsb
push
lods
and
jle
push
add
mov
xchg
dec
mov
and
xorb
and
outsb
dec
sub
pop
fsubl
pop
pop
cwtl
xchg
xor
sar
mov
insl
mov
mov
mov
mov
inc
or
cmpsl
loopne
aas
out
cmp
mov
xor
in
inc
shlb
or
cmp
movsl
xchg
and
gs
xchg
mov
xlat
adc
mov
pop
ret
add
cmp
sahf
inc
push
cmpsb
jp
jle
int
popf
rcrb
dec
fdiv
iret
xorb
pop
sti
jb
or
jg
stos
add
push
adc
int3
push
cmp
jecxz
jnp
xchg
push
mov
in
ss
stos
cld
push
ds
and
enter
daa
cld
ljmp
jl
sub
rcll
iret
stos
add
push
out
push
sub
inc
pop
test
negb
shll
rorb
lods
jae
jmp
adc
jg
out
fsubrp
mov
fwait
bound
sub
pop
repnz
mov
and
jle
jmp
gs
lods
add
imul
or
fstpt
in
push
cmp
push
cli
pop
stos
add
inc
ds
pop
mov
les
out
nop
adc
sbb
xor
push
movsl
cwtl
gs
sbb
push
push
addr16
jne
cmp
divb
pop
enter
dec
dec
push
mov
in
fdivrl
push
and
ret
push
dec
lret
mov
adc
fsubl
incl
xchg
repz
push
lret
les
pop
mov
adc
pop
fisubrs
xlat
mov
pop
lods
xchg
mov
sbb
sub
insl
imul
jmp
rcll
jmp
mov
cmpsb
xchg
fnstsw
add
fbstp
les
add
negb
or
mov
fwait
inc
jecxz
pop
cmpsb
ror
insb
mov
or
and
fs
jnp
jmp
push
push
lret
orl
negl
aam
pop
pop
pop
lock
jnp
and
pop
push
pop
dec
mov
cmc
fmuls
in
xor
rolb
mov
xor
out
out
mov
aad
pop
sub
mov
xchg
sbb
mov
ret
jl
sbb
push
subb
addr16
mov
fs
lret
iret
dec
les
pop
fs
xchg
xchg
pop
sbb
xor
push
call
arpl
mov
jae
in
inc
dec
add
dec
fisubs
inc
xor
xor
aad
xchg
or
mov
pusha
lods
pop
jae
or
lds
and
das
popf
jno
in
sbb
shrb
stos
in
or
in
mov
fldl2e
inc
push
xchg
outsl
add
xchg
sub
insl
int
or
mov
jno
ds
popf
sub
mov
dec
lahf
dec
in
idivl
pop
out
mov
shr
jns
movsl
inc
and
lahf
testl
push
outsl
in
in
fstpl
hlt
sbb
mov
hlt
jg
or
lret
xor
cmpl
and
dec
pop
cmpsl
mov
popa
cmp
sti
ficomps
push
sub
xchg
fiadds
push
imul
cmp
jno
cmpsl
popf
mov
popf
shlb
mov
push
sub
mov
addb
lret
cmpsb
mov
outsl
mov
jmp
incl
adcl
lock
add
in
scas
add
pop
es
ss
testl
adc
mov
jg
enter
jo
sbb
negb
adcl
add
or
xchg
xchg
test
cld
xlat
add
rolb
repnz
insb
push
jae
sub
out
in
xchg
mov
fiaddl
pop
pop
and
sub
mov
das
add
mov
cli
pop
fsqrt
push
sahf
js
gs
mov
sti
xchg
out
iret
dec
add
lock
jbe
jns
mov
adc
imul
lods
adc
mov
xchg
cmp
inc
pusha
push
movsl
push
les
inc
stos
jns
pop
enter
lret
push
test
mov
test
adc
inc
sbb
outsl
repnz
pop
sub
xchg
out
xchg
lods
xor
mov
xchg
jl
pushf
fwait
mov
or
std
xor
sbb
sbb
xchg
sub
mov
jg
test
xlat
insb
cmp
out
movsl
pop
out
lret
mov
into
sub
jae
jne
and
aaa
mov
inc
mov
vorps
rclb
scas
xor
and
xor
movsl
bound
push
mov
pop
inc
pop
sbb
jbe
movsl
cli
lods
jmp
inc
mov
loopne
popf
xchg
push
ljmp
call
add
lret
icebp
jne
jl
test
pop
cmpsl
ja
dec
mov
inc
sti
js
push
in
pop
les
lea
sbb
test
es
xrelease
movsl
inc
add
cmp
adc
mov
cmp
cmc
push
andl
xor
xor
test
insl
xchg
sar
out
sub
vpshaq
sbb
clc
dec
scas
idivl
inc
sbbb
or
adc
mov
lret
jb
stos
fwait
push
andb
ss
scas
jb
dec
push
stos
mov
or
lds
insb
push
popf
xchg
adc
adc
lods
aam
adc
sbb
jge
into
or
dec
jmp
daa
jge
mov
jg
jnp
lret
cmp
cmp
fadds
mov
push
popa
enter
jl
mov
leave
call
lcall
pop
xlat
fs
cmp
js
xorl
sbb
scas
cmc
mov
xchg
iret
pop
push
nop
inc
les
pop
fndisi(8087
push
out
sti
or
das
jl
daa
icebp
data16
sarb
ficoml
push
fs
test
popa
jmp
inc
jmp
push
ret
fsubs
mov
arpl
xchg
xchg
push
js
mov
mov
push
inc
push
cmp
mov
jno
push
ret
arpl
movsl
es
sbb
jg
dec
gs
js
mov
xchg
or
popa
ss
cmp
subl
movsl
lea
imul
in
add
xchg
loopne
filds
bound
dec
cmp
out
cli
inc
adcl
mov
hlt
movsl
xchg
movsb
popf
scas
lcall
mov
push
jecxz
js
es
loope
xchg
dec
and
cltd
bound
insl
addb
enter
into
inc
mov
cmpsb
push
testb
cmp
push
das
mov
push
mov
mov
and
jne
and
icebp
jb
sysenter
sarb
sub
xor
lahf
inc
lds
mov
pop
jne
fimull
xchg
into
or
xchg
mov
mov
xor
xchg
mov
mov
inc
enter
dec
xor
inc
scas
mov
int
clc
jl
clc
insb
stc
sbb
loope
cwtl
movsb
dec
cs
inc
pop
mov
push
mov
das
jae
mov
xchg
ret
loope
pop
icebp
push
repnz
pop
scas
rcrb
mov
adc
cli
lods
sbb
fwait
test
inc
dec
test
xorb
movsl
icebp
mov
and
cwtl
lahf
out
xchg
dec
rclb
aam
mov
jmp
jl
mov
push
fisubl
jb
jae
mov
xor
pop
jb
cmp
movsb
js
insb
insl
xor
fwait
in
pop
adc
leave
cmpsl
dec
and
aam
fildl
add
in
mov
out
sbb
push
mov
jg
into
nop
sbb
inc
lret
hlt
pop
push
das
jl
sti
push
clc
cwtl
xor
sub
mov
lock
jmp
imul
loope
in
lods
pop
sub
xor
ret
ret
inc
sarl
xor
add
cmc
jno
inc
xchg
jg
aam
adc
lahf
xchg
ret
cmc
cld
imul
into
faddl
andl
shrb
and
jmp
xchg
and
pop
inc
lods
outsb
dec
sbb
cli
dec
lods
mov
pop
cli
xor
cmp
pop
cs
leave
jns
fdivrl
rcll
xchg
mov
popf
addl
iret
push
dec
mov
pop
and
enter
dec
lock
rclb
dec
jns
push
inc
or
pop
scas
dec
imul
out
jmp
ficoms
pop
int
cmp
sbb
sub
mov
sub
imul
or
hlt
jle
adc
dec
jg
cmc
mov
add
test
addl
out
jl
fcmovu
and
testb
fcmovne
or
popf
cmc
add
subb
cli
loop
daa
sahf
lret
xchg
into
arpl
push
jmp
icebp
aaa
inc
ret
mov
xor
adc
xchg
sbb
pop
or
pop
mov
fld
mov
pop
jecxz
scas
xchg
cmp
mov
push
push
mov
fnstenv
aas
add
scas
jbe
iret
mov
outsl
add
cld
add
or
sti
xchg
sbb
mov
lea
pop
xor
ficoms
cmp
mov
jg
jnp
pushf
xchg
nop
jb
cmp
insb
jb
and
xlat
fcom
or
dec
repnz
sub
push
out
fsubr
jp
lret
repz
mov
int3
xor
pop
push
mov
xchg
int
int
jne
add
sbb
cwtl
sbb
dec
pop
xlat
mov
mov
fmuls
xor
out
add
std
fsubs
push
cmp
sbb
inc
popl
aaa
daa
test
jno
lods
lret
push
aaa
dec
jb
std
clc
jns
rcll
sbb
pop
test
adc
insb
jb
push
lods
popf
inc
jle
sbb
test
dec
pop
lahf
shrl
mov
loop
inc
arpl
lcall
and
mov
cmpsb
sbb
out
scas
push
inc
das
push
mov
ret
filds
push
xchg
jns,pt
push
repnz
pop
in
outsb
cmp
xor
add
xchg
sbbl
aas
fdivl
loope
fldl
scas
lea
jl
xchg
aad
jl
imul
xor
jnp
aaa
fmul
addr16
rorb
popa
dec
lds
push
testl
jnp
and
filds
push
popa
lret
inc
or
insb
lea
dec
xor
mov
call
dec
cmp
jecxz
sub
and
sbb
shrl
dec
fmul
mov
cli
push
jg
add
pop
xchg
scas
das
decb
push
test
pop
cltd
mov
flds
sarb
pop
mov
jge
jp
dec
cmc
daa
mov
icebp
int3
adcl
cmp
add
and
cmpsb
jns
imul
stos
fmul
push
mov
sti
out
mov
push
xchg
push
popfw
jns
out
pop
sub
or
jne
mov
adc
js
pop
cmp
xor
add
mov
pop
repnz
loope
ljmp
mul
lea
subb
stos
enter
jl
push
inc
sub
shrl
jno
cltd
inc
ret
lret
clc
add
lea
fidivl
dec
adc
mov
jge
call
jno
leave
dec
call
and
sbb
cwtl
sub
mov
pop
movsb
repz
repz
jno
mov
cmp
lahf
das
clc
subb
jp
mov
jnp
push
add
dec
jnp
push
cmp
ja
outsb
repz
loop
aaa
adc
stos
outsb
pop
ljmp
sub
and
push
cmp
lods
and
int
fistl
pop
xor
or
mov
into
cs
jecxz
int3
or
xchg
and
add
push
mov
jmp
addr16
stc
loopne
movsb
lahf
inc
je,pn
pop
xor
add
mov
incl
sahf
mov
pushf
rclb
ss
lahf
inc
jg
xchg
fcomip
mov
pop
faddl
cmp
popf
mov
pop
negb
xchg
aad
rorl
test
mul
add
psllw
pop
int
mov
pop
mov
hlt
push
dec
inc
dec
and
push
inc
sbb
pop
push
iret
xchg
inc
xor
mov
idivb
jge
gs
mov
addr16
and
aas
sub
jnp
xchg
push
xchg
push
cmpsb
fwait
shlb
out
pop
pop
daa
sub
adc
pop
jae
dec
jne
aaa
cwtl
mov
in
add
into
fwait
data16
add
xchg
push
push
scas
ds
add
add
inc
dec
mov
cmpsb
mov
call
popf
adcl
das
insb
mov
push
add
fdivs
stos
sub
in
xchg
jo
shlb
shlb
lods
push
push
outsl
inc
cmp
push
sti
or
mov
repnz
mov
pop
and
xchg
push
mov
imul
cmp
aam
add
cmpsb
cmp
js
pop
pop
xor
push
mov
xor
jns
jo
test
fmulp
mov
pop
daa
sbb
mov
xor
push
pop
sub
or
sti
xchg
mov
ja
sub
sub
je
insl
jns
jo
push
inc
lods
popa
shlb
mov
xchg
ret
jmp
data16
outsl
mov
jmp
cltd
inc
arpl
rolb
sub
mov
ja
cli
and
std
cmpsl
popf
xor
lea
ret
loop
pushl
in
jnp
add
pop
cmp
ja
dec
popf
xor
daa
push
pop
ds
faddl
js
mov
mov
xchg
cmp
dec
addr16
mov
jecxz
cmp
and
sbb
sub
addl
or
mov
into
pop
jl
out
lret
insl
das
sbb
rcrl
enter
es
or
push
xchg
fcmovnu
push
sahf
pop
adc
mov
sbb
push
jge
add
mov
xlat
xchg
inc
dec
inc
lods
out
ja
aad
push
jge
cmp
mov
repnz
sub
cmp
mov
inc
popa
xor
xchg
sahf
test
inc
and
adc
mov
repz
xor
mov
dec
lods
xor
sub
test
push
clc
dec
sub
std
pop
insl
aad
ret
int3
stc
xor
mov
pusha
cmpsb
iret
pop
jmp
and
cwtl
xor
sar
mov
xlat
push
or
sub
mov
popa
aas
cld
pushf
pop
sub
inc
jns
xchg
mov
xchg
js
repz
pop
or
push
mov
frstor
mov
push
daa
jbe
and
xor
jge
lretw
in
popf
test
xchg
repz
sbb
cmpsl
ret
mov
sbb
fidivrs
dec
fdivr
icebp
cmp
shlb
roll
out
or
movsl
mov
or
adc
xchg
ret
mov
sbb
xchg
icebp
outsb
stc
in
inc
enter
and
ss
push
jnp
sub
inc
adc
scas
rcr
mov
mov
test
xor
sahf
arpl
pop
push
clc
pushf
cs
or
sub
mov
loopne
inc
fs
in
sub
mov
pop
aad
cmc
mov
rorl
lahf
popa
mov
sbb
pop
jmp
and
xor
hlt
sub
push
les
push
jbe
jae
popa
cmp
adc
adc
aad
jl
push
xchg
or
repz
clc
inc
sbb
popa
xchg
outsl
mov
and
es
mov
jae
shll
cmp
and
or
cmpsl
and
mov
jecxz
stc
aas
clc
mov
mov
int
stc
gs
cmp
lds
sbbb
pushf
xchg
out
daa
int
and
je
push
bound
cli
xor
jae
mov
add
mov
jno
mov
lods
mov
test
mov
loopne
pop
out
stos
mov
sbb
jl
outsl
test
pop
movsl
ja
rolb
inc
and
sub
push
fadd
mov
ljmp
popa
push
out
aaa
pop
or
gs
and
add
mov
mov
fildll
fidivl
fdivl
aad
sub
frstor
cmp
ds
cmpsb
cli
stos
pop
sub
xor
mov
ret
loop,pt
clc
outsl
lods
rcrl
stos
lahf
insl
or
sub
fsubrs
lods
shrl
lret
rorl
and
stos
movsb
test
and
dec
stos
sarb
data16
push
dec
test
mov
or
lods
inc
mov
xchg
out
ja
ret
xchg
mov
mov
mov
mov
jae
mov
mov
popf
std
sti
pusha
adc
popf
and
inc
iret
push
lods
dec
dec
push
xor
aaa
add
cmp
pop
icebp
pop
jne
xchg
or
lahf
inc
mov
or
cld
jnp
xchg
mov
dec
mov
cmp
jg
jl
inc
idivl
ffreep
dec
sti
jge
scas
fdivrs
adc
pop
inc
icebp
loop
test
mov
aas
outsb
mov
pusha
or
pushf
out
out
fdivs
ljmp
test
aad
mov
xchg
mov
cld
dec
je
stc
cmp
je
mov
and
lea
repnz
inc
xchg
out
in
stos
inc
add
cwtl
ficoms
inc
sub
add
mov
pop
add
add
iret
push
xchg
xor
cmpsb
rcr
out
repz
push
push
jo
mov
mov
lcall
js
xor
arpl
mov
out
out
jge
pop
pop
jo
ret
clc
iret
mov
lahf
pop
jbe
popf
add
ret
mov
test
loope
repnz
lock
in
cltd
stc
or
push
out
inc
mov
mov
arpl
inc
lret
ss
mov
lods
mov
mov
sti
adc
mov
call
movsb
or
pop
dec
arpl
lea
test
xor
jle
enter
cld
adc
les
sub
and
add
fbld
js
rclb
icebp
mov
int
pop
iret
pop
cmp
nop
pusha
daa
sbb
fiaddl
jl
xor
fmuls
mov
xchg
xlat
cwtl
hlt
pop
ds
clc
mov
xor
jecxz
mov
xchg
pop
addl
pop
mov
add
cltd
fsubr
imul
xchg
inc
and
pop
ret
ds
scas
std
lods
xlat
xor
dec
xchg
lods
sbb
push
cmpsl
sub
mov
add
cltd
add
pop
stc
sub
clc
adc
rcrb
jg
jo
nop
push
icebp
sbb
jle
add
sbb
xchg
push
sbb
xchg
add
imulb
leave
out
xlat
mov
pshufw
lock
fnstcw
in
movsl
stos
pop
fcoml
fucomi
xchg
dec
mov
pop
test
jmp
xor
xchg
pop
call
inc
call
mov
sahf
inc
xor
movsl
fldenv
cmpsl
nop
sahf
pop
cmp
mov
sub
or
adc
pop
jno
xchg
cmpb
jno
jne
xchg
adcl
into
dec
ljmp
aam
iret
call
or
xlat
mov
jg
mov
cli
jns
and
cli
test
and
pop
push
xchg
lds
push
dec
jge
add
inc
xchg
lods
mov
and
cmp
loopne
mov
gs
xchg
pop
inc
jmp
pop
pushf
enter
neg
and
xor
xchg
jne
insb
addr16
notb
cmpsb
aad
roll
sar
insb
out
xchg
sbb
cmp
fs
mov
out
mov
arpl
andb
fwait
pop
push
mov
pop
inc
in
stos
pushf
pop
sbb
pop
mov
jecxz
mov
lcall
je
rcrb
js
and
pusha
mov
fdivrl
jl
dec
js
rcrb
clc
mov
lret
push
xchg
sub
dec
hlt
dec
xorl
shll
mov
adc
scas
mov
mov
scas
xchg
icebp
idivl
cmp
push
movsb
push
inc
hlt
lods
lret
in
mov
rorb
xchg
jmp
push
rorl
jp
scas
enter
adc
stos
popa
jecxz
jae
enter
cltd
fbstp
xchg
inc
ret
pop
leave
dec
fsts
aas
sti
out
xor
cs
shrl
fstps
testl
in
popf
add
adc
js
leave
jg
mov
addr16
aaa
add
pop
imul
xor
mov
cmpl
jnp
dec
jg
push
push
testl
fisttps
cld
pushf
insl
sub
xlat
mov
into
pop
inc
les
mov
xchg
fiaddl
or
xchg
iret
jge
repz
adc
lea
ret
nop
arpl
insb
aad
loop
sub
call
cmpsl
fnsave
lret
daa
pushf
push
push
sbb
aam
mov
mov
sub
clc
pop
insb
mov
cmc
pusha
js
fs
xchg
mov
pop
push
loopne
jno
sbb
ja
cmp
shll
ret
jecxz
sbb
out
mov
add
les
sub
mov
pop
stos
pop
out
push
loope
xor
pusha
xor
iret
fwait
add
xchg
dec
jl
sar
sbb
mov
or
sub
add
psubsw
stc
add
fstpt
adc
inc
divl
adc
hlt
ds
dec
fistps
pop
add
aas
xor
jns
mul
ret
jnp
add
cld
repnz
gs
outsl
scas
rol
pusha
jnp
lea
cmp
fwait
pop
xor
mov
cmpsl
mov
enter
loope
call
sahf
les
jge
or
arpl
mov
mov
mov
movsl
jecxz
or
xchg
incb
jb
pop
xchg
pop
les
fwait
push
xchg
pop
pop
dec
add
push
mov
testb
and
out
loopne
fisubl
add
xor
mov
mov
sti
push
cmc
popf
push
outsb
mov
addr16
sbb
lock
pop
xor
push
mov
movsb
mov
stos
jno
jg
inc
push
push
push
pop
imul
jle
add
in
int3
add
push
es
dec
jb
mov
shrl
push
sbbl
inc
icebp
test
pop
sub
jns
ret
push
fsubrs
cmp
push
aaa
paddusb
mov
sub
nop
js
jne
ja
dec
pop
lds
fsts
insb
aam
jle
dec
adc
or
cmpsl
int3
inc
rcrl
fs
jg
push
cltd
mov
push
pop
xor
fwait
inc
cwtl
les
jg
fnstsw
mov
ret
push
andl
lds
mov
xchg
mov
xor
repz
outsb
in
outsb
ret
pop
aas
imul
in
lcall
inc
dec
adc
jne
fwait
or
pop
sbb
xchg
or
dec
jno
xchg
mov
arpl
js
int3
sahf
pop
out
push
cmovns
inc
shlb
jmp
mov
lods
or
sbb
mov
call
test
mov
push
ss
add
in
orb
inc
cmp
push
je
roll
test
fldt
leave
movsl
out
mov
pop
imul
out
mov
and
push
fists
mov
insl
stc
mov
icebp
loopne
aad
cwtl
pop
movsb
mov
sub
add
mov
jle
adc
and
loopne
mov
sub
sub
add
mov
dec
xchg
xor
in
push
mov
enter
test
out
rcrb
insl
pop
cmp
inc
fmuls
or
arpl
pop
in
test
and
and
aas
int3
push
out
jne
mov
cli
jp
mov
int
out
dec
or
jmp
hlt
addb
xchg
stc
pop
mov
enter
inc
out
xor
or
dec
dec
adc
lds
pop
inc
adc
dec
xchg
jl
sti
fmull
jg
mov
setae
rclb
push
lods
stos
popf
rcll
adc
sub
dec
xlat
mov
gs
movlps
jg
pop
push
jge
imul
es
pop
or
xlat
shlb
iret
scas
mov
hlt
dec
pop
or
push
ror
lahf
sub
mov
or
cltd
and
push
aas
mov
hlt
sti
outsl
mov
push
addr16
push
jge
inc
imul
fildl
in
and
and
test
xor
call
aas
sub
test
aad
test
and
adc
cmp
aad
sub
bound
jmp
repnz
pop
movd
sbb
or
loop
cmpsl
lods
and
ljmp
xchg
and
pop
ja
mov
push
cwtl
pop
daa
pop
dec
add
jmp
sahf
paddq
jg
out
movsl
cmc
mov
mov
jns
inc
cwtl
enter
pop
stc
sub
cmp
push
and
cmp
push
pop
divl
cmp
shll
sbb
mov
push
jno
adc
repz
xchg
loop
pop
or
and
and
dec
je
in
inc
sub
mov
xchg
fucomip
pushf
loope
sbb
fs
sbb
scas
xor
cli
push
or
push
sbb
sub
mov
aam
cvtpi2ps
mov
hlt
xor
idiv
repnz
adc
ficompl
fistps
test
pop
dec
loop
out
pop
dec
jmp
hlt
xchg
and
jmp
cmp
push
jecxz
inc
repz
aas
jne,pn
mov
pusha
push
stos
mov
fsubp
jb
or
adc
add
sub
sub
sbb
pop
in
add
lock
and
adc
inc
xchg
jne
push
into
bound
push
cld
shlb
stos
popa
cld
or
out
sbb
mov
fwait
and
xor
aad
cmp
bound
paddw
arpl
mov
adc
dec
dec
mov
mov
stos
rcrb
hlt
icebp
sub
shll
or
inc
outsl
sbb
iret
movsb
adc
xchg
and
pop
mov
sti
les
xchg
loope
andb
test
inc
fdivrl
movsl
ss
jb
push
xchg
pop
lcall
fcompl
dec
popf
jmp
out
mov
inc
mov
pop
nop
lahf
je,pt
test
add
call
cmpsb
mov
push
cld
repnz
mov
pop
lea
call
sarl
out
out
push
dec
xlat
popf
mov
mov
sahf
das
aaa
and
adc
sub
fcomip
addr16
mov
lods
xchg
pop
fcmove
mov
mov
dec
push
sti
jbe
jbe
insl
lea
cmp
arpl
fcmovnbe
dec
push
dec
inc
aas
imul
fisttps
jae
sahf
cs
les
shrl
enter
mov
jl
cs
adc
cli
sbb
insb
movsl
mov
aam
cmpsb
scas
jbe
sbb
xchg
stos
mov
ja
inc
sarl
fs
cmp
xor
push
push
loop
ljmp
in
ror
clc
sahf
dec
xchg
mov
es
mov
and
or
out
cmp
or
adc
and
insl
jecxz
fsubrs
int
loop
leave
mov
daa
fwait
insl
fstps
imul
push
into
shrb
dec
les
shrl
jp
jle
mov
popf
sti
xor
push
ficoml
push
ss
jle
dec
fldcw
jge
cmp
push
inc
gs
sub
cmp
xor
adc
pop
add
cvttps2pi
aas
push
movsl
negb
rcll
adc
fnstenv
push
push
jmp
pop
hlt
pop
sub
jo
ss
sub
sbb
repnz
rclb
subl
ret
push
mov
sub
xor
or
pop
out
aas
adc
loopne
sti
jne
jmp
inc
sarb
sub
aam
imul
nop
int
cmp
in
aam
xchg
popw
fdivrp
or
sbb
test
dec
xor
mov
stos
fisttpll
xchg
clc
or
out
push
daa
mov
sub
ret
push
push
pop
fidivs
es
test
aas
ret
cmp
sarl
lcall
mov
xor
repz
lock
repnz
int
sub
push
pop
loope
push
jmp
cli
xchg
inc
movsl
or
ret
xchg
xor
lock
loope
or
or
or
jae
adc
jecxz
inc
lret
pop
adc
movsb
ljmp
dec
push
inc
stos
inc
lret
mov
push
loopne
or
mov
int
cmp
and
xor
repz
mov
into
jnp
jge
data16
add
mov
mov
sbb
jmp
mov
mov
xor
xchg
fistpll
in
inc
sub
js
out
movsb
icebp
cli
mov
inc
and
daa
iret
dec
jb
es
out
arpl
stc
loopne
cmpsl
inc
adc
jbe
xor
lds
cmp
inc
ret
jo
push
fnstsw
rcll
inc
sarb
je
out
xor
mov
cwtl
adc
xor
push
popa
or
jns
jg
in
mov
dec
scas
or
xchg
mov
loop
adc
mov
movsb
out
nop
xor
paddusb
mov
pop
das
sub
lock
xchg
pop
pop
xchg
lcall
mov
push
pop
sbb
sub
int
test
inc
push
and
mov
pop
inc
stc
pop
lret
pop
lahf
sahf
add
das
pop
aaa
cltd
xor
push
dec
enter
scas
dec
test
inc
add
mov
data16
sub
jp
sbb
add
insb
pushf
adc
dec
xchg
aaa
in
push
add
jo
inc
or
jno
or
adc
adc
daa
cmp
jecxz
pop
and
mov
in
jp
and
fcoml
aad
cld
fadds
out
and
xor
mov
jo
xchg
pop
or
les
or
repz
jnp
inc
ficomps
mov
sti
in
outsl
rcr
inc
mov
xchg
cli
stos
rolb
jb
mov
push
test
insb
push
mov
jno
jno
inc
lcall
xor
sub
jns
mov
sti
shl
jne
jae
mov
outsl
aad
clc
push
add
sub
hlt
sbb
imull
rcl
mov
movsb
ret
jnp
mov
cli
testl
or
fisttpll
aaa
lret
adc
jbe
add
mov
adc
jb
fwait
out
nop
cmp
clc
shlb
jo
cld
ffreep
jl
lcall
dec
push
adc
leave
and
push
rcr
push
pop
sbb
je
sbb
rcll
and
ret
push
add
enter
push
xor
stos
jbe
and
in
pop
jbe
imul
push
xchg
call
sub
jecxz
lret
add
pusha
push
rorl
fiadds
movsl
test
nop
inc
xchg
pop
mov
lahf
push
lds
sti
mov
popa
stc
sbb
stos
push
sahf
add
xchg
lds
fildl
sti
sbb
cmp
xor
pop
cmp
dec
sbb
dec
xchg
lret
fisttps
out
lds
neg
mov
ljmp
pop
sub
or
pop
push
mov
add
enter
sbb
mov
bound
push
and
cmpsb
inc
xor
dec
mov
mov
fstl
dec
and
loope
in
inc
imul
test
lods
sbb
ja
gs
lret
les
fsubrs
cmp
xor
out
outsb
add
jecxz
shlb
adc
and
xchg
into
loope
jnp
mov
push
cmp
sub
sbb
jns
mov
xchg
xorb
loope
cmp
cmpl
fiadds
inc
jle
ljmp
test
xor
rorb
orl
and
ljmp
or
lea
xor
or
loop
dec
rclb
mov
fwait
jb
pop
mov
cmc
push
pop
mov
and
push
or
jp
fdivl
adc
dec
mov
mov
sub
adc
mov
lods
imul
repnz
in
xchg
in
leave
inc
lcall
cmp
xchg
scas
xor
and
jmp
js
out
out
sbb
sbb
cwtl
out
mov
fiaddl
or
pop
iret
or
sub
mov
inc
popf
fsubr
call
ret
pushf
push
cwtl
xchg
mov
ds
or
cli
add
inc
andb
sbb
cld
xchg
outsb
push
nop
inc
iret
lahf
insb
jae
mov
lret
inc
push
and
lods
in
xor
pop
or
das
adc
sbb
mov
xor
call
ds
cmp
jo
mov
mov
outsb
push
imul
daa
cwtl
push
push
inc
inc
xor
sti
adc
mov
adc
xchg
xchg
and
jb
mov
clc
and
xchg
ret
andb
and
roll
xorb
push
cmp
aas
mov
sub
fwait
mov
in
enter
mov
outsl
movsb
ret
cmp
jmp
inc
jecxz
mov
lret
push
add
xchg
push
loopne
aaa
mov
iret
push
jbe
insb
sar
daa
mov
pop
xchg
jno
mov
add
push
divl
dec
sbb
outsb
sbb
in
lods
jo
push
in
mov
out
out
cltd
out
adc
inc
push
insb
cs
jo
lcall
inc
xor
test
mov
in
sar
xorl
push
test
stos
fstl
dec
jge
pop
inc
pop
jmp
hlt
xor
loope
jnp
lock
jne
ljmp
mov
push
and
mov
dec
jp
sbb
shll
push
test
pop
jo
xchg
adc
mov
dec
aad
int3
lret
push
jnp
sbb
push
inc
imul
cmpsb
ja
call
xchg
sbb
inc
fwait
testl
add
scas
std
mov
stos
imul
mov
xchg
loop
jae
loopne
mov
xlat
push
unpcklps
xor
push
inc
cwtl
cmpsl
mov
fs
xchg
lods
nop
in
arpl
inc
mov
pmuludq
xchg
push
sub
lahf
test
and
insb
cltd
stos
xchg
repnz
add
mov
loope
dec
push
sub
mov
loop
mov
aaa
test
fs
sub
adc
lcall
jae
mov
sarl
ljmp
rcl
popf
hlt
pop
jae
test
inc
mov
daa
loope
mov
movsl
pop
cmp
dec
xor
pop
jno
pop
cmpsl
sbb
sbb
arpl
icebp
out
lds
mull
dec
push
orb
mov
repnz
mov
add
pop
pop
pushf
out
cwtl
mov
push
hlt
enter
sbb
dec
cwtd
out
cmp
lret
add
dec
cs
and
cmp
push
jl
dec
daa
scas
pop
push
jg
xor
call
es
cwtl
loop
mov
adc
stos
mov
mov
or
pushf
mov
inc
adc
adc
pop
cmp
mov
popl
mov
and
nop
andb
jns
adc
push
mov
outsl
fnstsw
out
enter
enter
push
sbb
lods
or
mov
adcl
sub
inc
dec
lea
inc
and
jge
mov
adc
out
aam
jo
jge
mov
test
loope
insl
adc
mov
add
and
mov
pop
sbb
xor
shl
cltd
scas
add
ret
fst
arpl
scas
dec
add
jb
sbb
push
jg
test
push
mov
lahf
jne
or
scas
aaa
in
sbb
hlt
in
adc
adc
mov
rorb
push
repz
cmp
insb
aas
pop
or
sti
iret
xor
sub
cmp
aam
and
out
fwait
dec
stos
mov
into
mov
imul
pusha
cltd
mov
loopne
or
add
xor
sub
inc
cld
ret
jnp
in
ret
mov
add
scas
imul
adc
mov
lret
inc
inc
sbb
in
jno
repz
lahf
mov
dec
xchg
shll
mov
fadds
pop
les
xor
pop
sar
cmp
je
add
jo
ja
daa
test
out
daa
imul
insb
aas
add
into
jno
js
cmpsb
xchg
xchg
shlb
mov
lcall
lahf
int3
dec
sbbb
xor
movsl
icebp
sbb
or
pop
xchg
ror
jmp
or
xchg
pop
mov
test
out
xchg
aad
test
inc
clc
call
in
flds
or
adc
sahf
or
rcl
add
jecxz
lahf
xchg
push
cmpsb
icebp
jl
repz
cmc
sub
mov
jge
imul
xor
or
pop
loope
dec
xchg
js
adc
insl
inc
inc
outsb
push
cmc
mov
outsl
popl
enter
mov
movsb
test
sbb
dec
outsb
movsb
inc
cmp
jnp
and
je
cwtl
frstor
or
dec
or
and
std
in
add
pusha
lock
cltd
inc
cmpsl
repz
mov
inc
cltd
cmpsl
aam
cmp
xchg
scas
and
popf
in
push
xorb
add
int3
inc
mov
mov
pop
jbe
stc
sbb
aaa
rol
fs
sahf
leave
xchg
cmp
pop
cltd
mov
bound
popa
xlat
and
push
mov
test
jl
xor
sub
inc
repnz
pop
adc
test
insb
cmp
push
push
cmc
mov
into
lcall
push
ret
push
cmp
out
in
out
hlt
inc
fisubrl
add
stos
xchg
loopne
lods
mov
mov
insb
and
or
stos
ret
aam
imul
sti
arpl
sbb
or
adc
mov
es
mov
jnp
shll
adc
adc
inc
sbb
test
inc
cmp
inc
and
dec
fdivp
imul
add
insl
mov
push
xchg
jle
sub
ja
testl
fdivrl
pop
pop
sbb
xor
dec
insb
scas
loopne
push
dec
jmp
or
sarl
cmc
or
pop
in
pop
hlt
mov
and
cmp
lods
inc
cmp
sub
aas
and
xchg
sbb
incb
mov
sub
pop
jnp
push
mov
cmp
aas
mov
rclb
mov
pop
sbb
xchg
imul
pusha
es
inc
test
mov
adc
cmp
cwtl
ret
or
jne
sbb
jp
mov
out
inc
jl
test
and
push
fiadds
cld
inc
adc
stos
pop
repz
ficomps
mov
fimull
shll
lcall
add
pop
js
jl
dec
pop
push
inc
es
add
xchg
lea
fs
mov
cltd
sub
fldcw
loopne
and
adc
inc
stos
adc
neg
sub
mov
out
lds
pop
mov
pop
and
ficoms
fiadds
mov
jo
jno
jmp
jo
sbb
cs
pop
jmp
rorb
dec
divb
xchg
or
js
add
pop
enter
inc
sub
repnz
jle
cwtl
je
cmpsl
out
dec
sbb
push
fs
test
iret
sub
clc
test
jp
ja
xchg
inc
ret
pusha
dec
inc
xchg
mov
mov
jns
or
in
les
push
in
dec
dec
scas
sahf
fsub
cmp
push
aam
or
pop
inc
pop
and
les
loop
divb
mov
push
call
sbb
test
fisubs
push
jno
lret
hlt
jo
outsl
and
mov
lods
or
std
in
pop
cmp
jne
push
andb
call
inc
mov
fidivl
push
outsb
cmp
sbb
add
sbb
xlat
jmp
inc
xchg
lock
jle
inc
stos
mov
je
and
or
hlt
sbb
loope
and
push
mov
popf
mov
sub
into
out
pop
dec
cwtl
data16
mov
cltd
lock
test
mov
push
bound
pop
dec
out
clc
fwait
in
rdpmc
pop
aam
mov
out
push
sbb
xadd
popa
insb
out
cmp
mov
dec
mov
mov
js
es
sbb
mov
mov
mov
or
xchg
lcall
loop
or
dec
inc
fimuls
insl
dec
je
in
aas
and
jecxz
aad
and
xor
xchg
push
adc
jnp
sarl
test
jbe
mov
bound
cmpsb
rorb
insb
push
xchg
sbb
out
jp
jmp
testl
ret
jge
enter
or
fisttpll
inc
insb
hlt
orl
jle
sahf
cs
mov
or
fwait
sahf
jmp
adc
out
xchg
lret
and
mov
loop
xor
sbb
sti
add
into
mov
ljmp
jge
jns
adc
mov
stos
popf
std
and
leave
inc
xchg
fdivrs
lds
inc
sbb
inc
loope
push
mov
test
lahf
popa
mov
inc
sbb
jne
imul
inc
shrl
movsb
and
jecxz
mov
sarl
je
test
movsl
and
or
inc
js
push
pop
mov
ror
inc
push
add
jge
cltd
repz
and
imul
ja
rcrb
mov
cmp
xchg
sbb
pop
ret
aas
sub
cmp
mov
repz
dec
and
adc
dec
aaa
mov
and
push
pop
roll
mov
scas
mov
fisubs
cmp
push
xlat
pop
lret
xchg
popfw
aas
push
inc
and
imul
in
loop
leave
lret
dec
aas
lret
stos
ds
sub
add
js
cmp
aas
enter
sub
imul
sti
add
sti
add
out
mov
in
nop
shlb
mov
adc
sub
push
inc
jmp
or
enter
int3
dec
inc
lahf
loope
repz
ss
ljmp
push
mov
jne
outsl
cltd
and
stos
cmp
scas
adc
or
popa
addr16
dec
mov
pusha
jb
inc
cmpsl
and
adc
fwait
repz
xor
lods
shl
pop
das
scas
movsl
lret
pop
dec
iret
inc
in
cmc
aas
sub
stos
push
xchg
mov
ss
leave
in
fcmovnu
cmp
lock
cltd
pop
imul
iret
sarl
lea
sub
pop
add
sti
xor
push
lea
pop
mov
xchg
daa
sti
push
xlat
cmpsb
pop
mov
outsl
cltd
loope
ret
rcll
jne
loop
mov
inc
mov
jmp
adc
xchg
in
aaa
cmp
mov
push
or
or
xchg
mov
fidivl
pop
push
lds
mov
jne
iret
mov
cmpsl
inc
outsb
ror
sub
push
mov
pop
clc
pop
ret
ljmp
sbb
push
inc
or
lock
fistps
orb
fists
pop
fwait
mov
movsb
inc
imul
ss
mov
sub
in
adc
loop
lcall
mov
popf
dec
out
pop
jmp
sbb
imul
pop
pop
daa
pop
and
push
xorl
mov
sbb
movsl
jecxz
and
xchg
es
rcrb
outsl
xchg
dec
inc
cmc
xchg
loopne
adc
mov
and
jno
jne
and
dec
pusha
push
dec
sbb
cmp
pushf
andb
push
mov
xchg
int
mov
mov
scas
mov
js
jge
mov
or
jb
cmp
stc
mov
in
sti
test
inc
push
pop
maskmovq
negl
or
mov
jle
adc
scas
or
cwtl
xchg
lret
sahf
jno
inc
call
sahf
fisubrs
hlt
sbb
sub
adc
fld
mov
xchg
sbb
aad
out
icebp
neg
outsl
mov
ret
jo
push
adc
sti
ror
adc
jp
jecxz
les
dec
loop
sub
popa
sub
imul
sub
adc
adc
xchg
xchg
mov
ret
daa
and
out
and
ss
cmp
xorl
pushf
jg
mov
ja
and
pop
mov
push
pop
iret
lret
jbe
notb
insb
add
mov
pushf
test
inc
popf
mov
pop
sbb
and
mov
dec
or
inc
hlt
pop
sbb
inc
hlt
jge
out
das
jl
out
clc
in
leave
leave
ja
or
xor
push
pop
inc
mov
inc
lret
mov
push
sti
js
lahf
dec
popf
scas
mov
sub
dec
push
mov
cmp
mov
in
add
mov
std
in
sbb
mov
cmpl
leave
call
pushf
mov
add
gs
cmpsb
rorl
adc
jae
sub
adc
sbb
ja
testl
and
mov
loop
or
or
sbb
aad
jns
jns
jns
and
push
inc
jb
inc
cs
cmpsb
es
rep
push
out
cmp
mov
jl
test
mov
int
rcrb
fists
push
adc
mulb
pop
push
lea
in
xchg
adc
jecxz
stos
imul
faddl
imul
adc
lcall
mov
add
mov
clc
mov
stc
fs
out
fmull
ds
xlat
and
jg
mov
mov
adc
jb
jge
and
movsl
loopne
xchg
or
loope
into
in
mov
pop
pop
push
pop
insl
shrl
mov
les
lret
mov
jb
popf
decb
out
imul
ss
fs
mov
pop
inc
inc
push
or
test
movsb
int
lea
sbb
pop
movsb
dec
cmpsl
inc
out
push
iret
sub
mov
and
mov
inc
das
xchg
xlat
fs
stos
outsl
icebp
xorl
sbb
ret
std
or
je
les
cli
sbb
fsubrl
jnp
jno
cwtl
shlb
mov
add
push
xchg
sub
sbb
inc
and
mov
ror
pop
mov
push
jo
movsl
inc
aad
xchg
insl
xchg
jae
or
xlat
xchg
jmp
xor
cmpsb
cld
lods
les
popa
xchg
and
iret
push
iret
jmp
stos
jle
les
es
mov
out
pusha
pop
mov
dec
mov
addr16
inc
cwtl
xchg
aam
or
fnsave
daa
int3
std
iret
das
incl
cmc
lret
stc
loope
adcb
hlt
push
pushf
push
sbb
mov
into
repz
adc
enter
xchg
fs
inc
pusha
or
and
sub
addb
pop
jecxz
jl
ja
xchg
test
add
fdivrs
adc
test
ficoms
lods
mov
xor
adc
mov
jmp
aas
aad
imul
sbb
mov
inc
jno
sub
stc
rclb
in
sbb
aaa
mov
mov
cmp
cld
cmp
jns
test
movsl
rcrl
mov
rcll
ficoml
xor
jge
daa
cmp
adc
decb
push
test
into
and
in
out
fadds
xchg
push
mov
xchg
pop
add
imul
pop
jge
xor
jns
cmp
adc
or
mov
xor
or
push
movsb
mov
push
dec
dec
push
ja
dec
scas
xor
xor
fmuls
lret
daa
sbb
push
xor
mov
cmp
or
mov
rorb
imul
out
mov
xchg
sub
loop
xchg
or
in
and
gs
movsl
push
jge
cmpsl
or
inc
mov
imul
mov
mov
pop
lods
jecxz
fimull
add
repz
sub
imulb
push
pop
mov
cmp
cmp
ja
mov
in
push
sbb
in
adc
cmpsl
mov
scas
dec
dec
xorb
lahf
xchg
jmp
or
mov
imul
xchg
adc
xchg
ret
adc
inc
push
xchg
mov
adc
jo
mov
mov
decb
mov
movsb
in
repz
push
mov
mov
in
dec
ljmp
mov
push
pop
jbe
lea
ffreep
je
inc
add
dec
jl
jg
or
mov
ret
sahf
jb
sub
pop
cmp
repnz
xchg
mov
fbld
xchg
adc
xorb
push
sub
sub
dec
cld
jge
mov
and
dec
xchg
mov
cmpsb
nop
fldenv
dec
xchg
xor
loop
repz
add
gs
daa
xchg
fstp
mov
mov
ljmp
fs
push
lods
mov
mov
dec
mov
jne
es
loopne
icebp
loope
xor
sbb
xchg
jae
jne
add
sbb
or
push
lock
sub
ljmp
xchg
sbb
xchg
dec
lret
cs
out
mov
mov
jne
cmc
mov
lret
fs
mov
jbe
sahf
push
leave
shld
scas
out
add
cmp
jb
adc
fidivrl
jae
outsl
lcall
out
js
xor
lahf
scas
push
push
and
repz
push
call
xor
call
mov
std
cmp
cmpsb
fld
addr16
mov
xor
out
ja
faddl
fidivl
insb
rcrl
int
imul
adc
adcb
mov
or
jmp
cltd
das
cmp
cmp
ljmp
into
into
insb
jp
and
repnz
push
mov
push
aad
xor
lcall
cmp
or
nop
loope
adc
jb
nop
scas
push
dec
ljmp
adc
sub
mov
adc
ret
mov
int
push
fbstp
fcmovu
outsl
into
push
jno
ja
or
loopne
outsb
loope
jmp
sbb
shlb
sbb
ljmp
inc
pop
cmpsb
dec
adc
cmp
vmovups
insl
test
faddl
add
fs
dec
and
add
in
pop
arpl
adc
fmuls
jl
pop
cli
mov
xlat
mov
cli
mov
push
icebp
lcall
push
dec
push
dec
pop
cmp
jp
movsl
sub
lahf
pop
add
test
and
or
out
nop
xchg
ret
mov
pop
pop
aas
inc
nopl
and
std
movntq
aaa
and
stos
movsb
cwtl
xor
popf
sbb
sahf
rol
shll
data16
mov
repnz
sarb
in
mov
sub
add
fstpt
loopne
scas
mov
sbb
mov
insl
jb
test
jo
fcoml
int
cmp
mov
push
in
enter
inc
push
addr16
mov
stos
sub
jmp
int
in
out
mov
mov
ja
xchg
sbb
data16
stos
daa
push
mov
imul
jnp
pop
mov
xchg
cs
mov
cltd
ret
mov
adc
lret
or
cwtl
sbb
push
fwait
mov
adc
jmp
test
jecxz
or
push
add
test
movsl
mov
out
dec
adc
dec
sbb
inc
mov
mov
test
cld
shll
arpl
xchg
pop
xor
jbe
and
pop
out
dec
cmc
pushf
jno
mov
sbb
pop
dec
sbb
mov
inc
add
dec
dec
dec
add
cli
or
and
xchg
inc
mov
jae
xchg
mov
mov
mov
call
ss
jno
sbb
mov
stos
or
mov
push
mov
andb
mov
mov
movsb
adc
push
add
xchg
popa
or
cli
imulb
cltd
dec
aad
cmp
ja
mov
and
cmpsl
pop
mov
call
scas
and
push
stos
push
push
sbb
add
iret
xchg
es
pop
ret
jb
shlb
push
into
sbb
daa
or
inc
shll
dec
test
fstl
jnp
insl
mov
out
in
mov
ret
pop
popf
pop
cs
mov
or
xor
les
sahf
push
ret
call
push
mull
test
call
pop
mov
jo
sub
mov
lret
insl
xor
xchg
lods
pop
jb
inc
cld
mov
imul
gs
mov
dec
dec
add
xchg
push
mov
sar
mov
sbb
popa
cli
out
jne
inc
mov
in
shlb
cmp
mov
into
mov
cld
adc
push
sbb
out
out
in
or
addr16
push
cmpsb
mov
out
mov
loop
jo
mov
adc
enter
and
pop
mov
dec
push
push
pop
sbb
pop
pop
or
sub
in
xor
ffree
xchg
xchg
xor
mov
cmpsl
add
lds
sub
clc
fwait
pop
xchg
pop
xor
fistpl
dec
addr16
lret
mov
mov
and
lods
and
xchg
mov
ret
inc
cmp
popf
jecxz
cmc
xchg
jbe
shrl
pop
jne
mov
mov
not
imull
rcrb
iret
jmp
arpl
loop
dec
fwait
ljmp
stc
mov
fisubrs
decl
xchg
arpl
mov
enter
int
rcr
push
mov
jl
push
stos
jne
mov
mov
dec
das
loope
in
mov
ja
cs
dec
mov
pop
mov
nop
and
aad
mov
jg
add
lods
xor
or
xchg
test
dec
push
mov
leave
imul
mov
push
mov
into
inc
outsb
mov
les
sub
push
or
outsl
mov
nop
add
shl
sbb
jp
sub
rcrb
sbb
les
inc
mov
inc
lret
jo
rorb
sub
xchg
fisttps
enter
cltd
stos
addr16
lods
mov
mov
lea
andl
dec
icebp
iret
in
out
push
lods
ja
add
mov
xlat
sahf
addl
mov
sbb
idivl
xlat
cmpsl
je
stos
test
in
mov
push
and
loope
dec
push
aas
pop
adc
iret
inc
mov
jne
push
out
jle
dec
sub
loop
cs
push
mov
fs
dec
mov
push
test
movsb
adc
nop
jge
andb
mov
ljmp
dec
add
cmpsl
push
cld
ds
xlat
sbb
hlt
divb
call
dec
xor
push
stos
andl
push
adc
mov
jne
pop
fwait
aam
std
push
out
xchg
shrb
cmp
jecxz
insl
mov
inc
push
add
and
out
cmp
mov
clc
scas
or
jmp
cmp
movsl
mov
lods
fucom
pop
ss
jle
xchg
gs
cli
cld
mov
mov
out
fisttpll
adc
push
mov
stos
movsl
push
pop
sub
xchg
fldt
test
sub
shlb
cli
outsb
fnstsw
imul
imul
in
outsb
ljmp
jle
xor
pushf
xor
mov
ret
leave
js
jmp
sub
div
dec
arpl
in
test
insb
cwtl
lahf
xor
mov
lcall
and
mov
sbb
out
xor
int3
inc
and
mov
push
or
das
push
andl
fldt
enter
cld
pop
std
inc
inc
cmpsb
lret
pushf
ljmp
add
cwtl
call
adc
dec
aad
add
push
lock
mov
outsl
jo
sub
xchg
popf
mov
sti
pop
sub
and
das
test
push
out
test
jmp
cmpsb
xor
add
fldenv
sbb
ret
xchg
xchg
sbb
bound
enter
pop
mov
aas
pop
inc
push
pop
push
call
adc
push
pop
dec
es
shlb
icebp
mov
mov
iret
cmp
xor
mov
sbb
dec
lret
adc
or
icebp
pop
add
into
std
dec
mov
mov
das
addr16
sbb
lds
test
fstp
decb
sarl
aad
lahf
popf
inc
lahf
aam
int3
push
fldenv
mov
dec
movsb
adc
aam
gs
andb
inc
movsl
bound
cmp
cmp
mov
jae
scas
add
out
aas
xchg
ja
bound
jae
cmp
aam
or
pushf
adc
xchg
fs
xchg
dec
cli
cli
mov
sbb
add
mov
fndisi(8087
adc
call
cltd
add
dec
xchg
inc
mov
lcall
xchg
adc
adc
and
popl
movsl
scas
xchg
fwait
xor
push
push
test
jbe
lahf
inc
mov
xor
jnp
pop
movsb
xor
lods
xchg
call
mov
shr
inc
rcrl
jo
xlat
pop
fs
inc
mov
cld
nop
dec
dec
sbb
dec
cmp
inc
aaa
scas
daa
stos
mov
mov
xchg
jnp
xor
jge
in
adc
rclb
xor
pop
or
shrb
mov
pop
lods
cmc
popa
push
loopne
ret
fcompl
add
xlat
icebp
cs
mov
jno
sub
je
push
mov
shll
cmp
into
cmpsb
jns
out
outsb
pop
and
xor
xor
xor
aas
add
aad
xor
inc
mov
aad
inc
daa
insb
or
push
pop
pop
xchg
push
mov
push
push
or
pop
jge
out
sbb
lret
icebp
and
subb
out
shr
xor
push
int
cmp
inc
dec
addr16
sti
rclb
das
inc
leave
pop
sub
aas
popa
test
shl
ret
or
cmpl
mov
mulb
and
mov
fstpt
and
scas
xor
mov
fcomi
push
mov
enter
sbb
add
movsl
std
lahf
xchg
adc
jb
mov
pop
pop
in
or
sub
cli
mov
insl
and
into
pop
pop
inc
mov
xchg
push
aas
rcr
sti
dec
inc
jo
add
stc
mov
lock
xlat
in
test
jae
rorb
daa
and
in
hlt
jg
mov
fldenv
cmp
or
daa
or
aam
and
rcrl
push
loope
mov
inc
mov
push
mov
add
push
mov
std
sbb
adcl
push
jge
imul
sub
scas
xor
fs
hlt
cmpsl
leave
inc
xchg
mov
in
ljmp
push
cmp
testb
lahf
push
pop
jmp
cltd
adc
dec
or
mov
push
or
xchg
scas
pop
lds
subb
sub
imul
popf
std
sbb
dec
mov
pop
loope
aam
or
arpl
mov
add
xor
sahf
dec
cwtl
jb
dec
sbb
repz
jmp
pop
mov
jge
mov
push
cltd
mov
adc
sbb
scas
sub
aas
ret
inc
stc
ljmp
movsb
das
fcompl
mov
fistl
jg
or
scas
arpl
les
mov
mov
cmpsb
scas
lahf
arpl
leave
leave
test
addb
jecxz
add
fdivr
test
fdivl
jg
loopne
daa
inc
or
inc
movsb
js
inc
ret
jp
inc
daa
aam
out
add
movsb
test
jmp
mov
push
adc
arpl
inc
mov
adc
cwtl
push
sub
add
add
les
ss
mov
push
mov
repz
fstpl
aaa
push
insb
add
lret
stos
int
sbb
fs
cltd
mov
gs
call
jge
jo
sub
adc
repnz
jae
mov
outsb
shrl
xchg
fldt
cmp
mov
inc
push
dec
adc
inc
jne
test
int3
daa
pop
cld
gs
mov
outsb
loopne
xor
and
mov
mov
xor
shr
fst
mov
mov
ds
fadds
inc
test
xchg
push
shrb
insb
and
test
rorb
fcom
aad
mov
js
cmpsb
inc
and
ja
mov
cmp
mov
mov
insb
push
int
jnp
cmp
push
scas
sbb
push
push
mov
mov
test
xchg
sbb
push
mov
orb
push
testl
sbb
in
jmp
test
jne
sbb
push
cltd
push
push
jnp
xchg
adcl
add
fstl
xchg
scas
cmp
movsl
iret
std
lds
or
fwait
rorb
jb
cmp
jmp
pop
shlb
in
adc
sub
insl
mov
xchg
or
out
stc
push
pushf
loop
jo
cmp
cmp
enter
push
cmp
push
outsb
call
inc
orb
mov
sub
push
cmpl
and
aad
pop
jbe
fidivrs
data16
inc
scas
pop
incl
nop
jo
pop
and
adc
jecxz
push
das
mov
out
push
dec
mov
int
xlat
jl
xchg
stc
push
sbb
and
pop
or
nop
xchg
or
aaa
jb
cli
xchg
dec
inc
pusha
and
push
cmp
popf
movsl
lds
dec
fs
aas
or
shll
scas
push
or
fs
pushf
mov
mov
inc
call
lds
fbld
push
pop
xor
inc
push
xchg
pop
mov
push
xchg
inc
mov
dec
mov
xor
lret
pop
stos
pop
mov
jno
addr16
cs
sbb
rcll
dec
sarl
push
mov
jae
sbb
mov
lret
enter
iret
fdivrl
and
push
daa
pop
mov
in
sub
xlat
notl
sbb
sbb
dec
iret
mov
adc
imulb
mov
xor
sub
adc
nop
and
and
and
jl,pn
push
add
outsb
xchg
andb
push
lds
out
call
std
add
out
cwtl
stos
rclb
xchg
and
pop
lret
mov
imul
stc
dec
insl
bound
test
sar
mov
sub
cmpsb
mov
dec
inc
sub
imul
fcmovb
fiadds
and
jg
popf
mov
cmc
cwtl
fcmovnu
sub
inc
loope
add
repnz
psubb
mov
sahf
xchg
aas
sbb
test
dec
nop
rcrl
or
stos
push
imul
pop
orl
movsl
aas
jmp
sub
or
in
xor
dec
neg
push
stos
or
add
xchg
push
fidivrl
fsubs
inc
jl
loop
pop
mov
jns
fistpll
push
iret
jo
ja
ret
jg
rorl
mov
icebp
xorb
or
cmpsb
cmp
dec
jae
js
ficompl
inc
dec
and
sub
mov
je
push
sti
sbb
iret
push
mov
push
mov
dec
nop
add
out
das
dec
inc
shrl
aaa
clc
mov
mov
cmp
adc
imulb
outsl
cmpsl
scas
push
mov
outsl
test
cltd
imul
xor
mov
idiv
dec
adc
sbb
int3
pusha
fsincos
xlat
outsb
adc
sbb
dec
pop
icebp
xchg
push
cmp
pop
xlat
cmpsl
lock
leave
repnz
fisttpl
cli
inc
mov
add
test
xor
cld
and
ret
mov
jge
dec
aaa
outsb
or
mov
lea
loop
inc
ficomps
loope
leave
push
and
mov
jg
xor
inc
sahf
outsb
outsb
add
cmpsb
or
movsb
sub
pushf
mov
int
or
adc
imul
xor
jge
mov
mov
mov
mov
push
adc
sbb
push
add
xor
mov
iret
push
es
and
lcall
pusha
int
in
stos
push
mov
negl
jge
inc
xchg
lods
inc
mov
cwtl
add
cmp
dec
jl
sbb
mov
mov
dec
mov
mov
frstor
dec
aaa
inc
rclb
nop
dec
pop
mov
add
sub
push
dec
jns
pop
push
jnp
inc
jecxz
lds
sbb
ss
and
movsb
add
sahf
ds
es
mov
pop
pop
or
fcmovnu
stos
das
push
jg
test
movsb
xchg
test
mov
or
mov
dec
movsl
jbe
jecxz
push
bound
lods
push
mov
and
xchg
or
je
sbb
xchg
add
jb
push
push
dec
push
je
mov
imul
or
lea
cwtl
aaa
outsl
cltd
add
mov
jp
mov
jne
mov
imul
test
je
xor
lock
test
pop
into
jno
jno
mov
sub
sbb
jge
popf
pop
sub
xchg
xchg
xchg
mov
fwait
mov
inc
xchg
ljmp
pop
push
mov
pop
movb
cmp
sub
sbbl
cmp
mov
jmp
adc
dec
jle
mov
xlat
jb
imul
lcall
int
mov
mov
or
pusha
mov
cmp
out
push
dec
mov
popf
fildl
mov
jecxz
add
in
fsubrp
repnz
dec
and
push
bound
or
add
je
and
ljmpw
insb
or
jmp
inc
das
mov
ret
lret
pop
cmp
mov
popa
lahf
mov
sarb
xor
fldcw
adcb
dec
dec
scas
test
push
lock
xor
dec
rcrl
sub
cmpsl
ret
mov
loope
mov
cs
incl
fildl
add
pop
add
jne
je
jmp
repnz
sbb
xchg
push
mov
xor
ret
cmp
xchg
hlt
icebp
dec
push
sbb
cld
push
pop
fs
les
je
dec
clc
sub
mov
out
cltd
test
popf
fistpll
fwait
mov
jnp
ret
scas
imul
push
and
inc
leave
mov
clc
pop
in
sbbb
jecxz
jns
sbb
lods
popf
cld
cmpsb
jp
cld
jnp
shl
sub
aaa
push
add
fstps
xchg
cmp
cld
lahf
jle
fwait
loope
sub
test
cmp
dec
bnd
push
out
cltd
mov
push
or
xchg
xor
and
cwtl
xor
jge
aad
fnstsw
out
adc
jmp
add
shrb
in
xor
mov
lret
leave
fimuls
pop
rorb
addb
mov
inc
dec
push
add
mov
pcmpeqw
fidivrs
test
xchg
paddusw
bound
mov
push
dec
mov
mov
inc
mov
xor
xchg
or
pushf
jb
add
imul
aas
sti
repz
sbb
xlat
jbe
testl
unpcklps
jg
shl
mov
pop
mov
sub
push
dec
and
jne
loope
addr16
mov
inc
sub
leave
push
sbb
mov
test
and
imul
jmp
ss
jae
aad
les
push
mov
jae
sbb
rcr
inc
cmp
sbb
and
jge
orb
sti
add
inc
gs
jp
sbb
iret
fadd
into
or
je
out
jbe
inc
out
push
or
ficompl
mov
push
sub
xor
lret
add
test
mov
push
mov
adc
jne
lret
test
out
cmp
add
pushf
insl
push
hlt
out
and
and
hlt
jno
shll
pushf
and
fnstcw
jo
imul
lods
mov
pusha
pop
xchg
mov
fdivp
in
or
dec
fisubrl
pop
cld
xor
inc
add
andb
inc
lods
in
xchg
inc
add
js
cmc
sbb
jns
addr16
mov
xchg
pop
xor
cs
std
test
xchg
pop
inc
outsl
push
cmpl
rcrb
gs
aad
pop
push
and
cltd
stos
sbb
sbb
mov
imul
cmp
scas
filds
or
fdivrs
adc
fstpl
mov
sub
insl
add
fdivl
push
nop
sub
pop
dec
stos
imul
pop
js
bnd
or
mov
xchg
jbe
sbb
jne
xchg
imul
out
stc
arpl
je
in
out
aam
stc
sub
mov
movsl
mov
mov
repnz
ja
push
ret
xchg
push
call
mov
inc
fsubs
dec
mov
lods
mov
leave
jnp
cwtl
pop
mov
sbb
sbbl
pop
popa
in
add
outsb
fidivrs
mov
push
fimuls
stc
sti
inc
dec
std
xchg
xorl
in
test
adc
shrl
dec
adc
imul
inc
fdivl
or
pusha
scas
daa
lcall
nop
movb
movsl
int
enter
rcr
sub
push
mov
aam
gs
add
dec
jp
mov
pop
mov
bound
dec
gs
and
fsubrs
out
push
out
jg
fxam
xchg
mov
and
nop
mov
lods
out
pushf
cmp
adc
jo
stc
pop
inc
jo
mov
pop
movsl
or
je
outsl
pop
dec
pop
in
push
push
test
jbe
je
xor
out
imul
insl
cltd
dec
aam
fnstenv
jne
mov
negb
cmc
cld
aas
xchg
xor
loope
fucom
jl
sub
mov
xchg
mov
imul
fwait
sahf
add
lods
out
xor
jle
or
and
cmp
call
pop
and
test
sbb
stc
sbb
jl
cmp
insl
inc
mov
inc
mov
jp
add
xchg
xor
adc
jno
lods
xor
mov
pop
sub
cs
cs
dec
push
mov
aam
sti
mov
xchg
jecxz
adc
stos
jne
push
mov
xchg
in
cmp
pand
fs
mov
stc
mov
fisubrs
lcall
sbb
push
adc
cvtdq2ps
xor
movsb
push
and
sbb
or
sbb
std
into
adc
ja
pop
popf
mov
enter
mov
mov
cwtl
movsl
or
or
mov
mov
sete
push
add
shll
or
dec
fisubs
and
fsts
and
lock
push
pop
cmc
mov
stos
push
add
jne
add
pop
mov
add
lods
pop
int3
aaa
std
pop
daa
xchg
add
lods
sub
inc
push
fdivl
stos
push
jecxz
in
std
cmpsl
cmp
cwtl
add
pop
adc
insl
push
add
push
pop
inc
loopne
ljmp
arpl
cmp
cmpsl
negb
xchg
xor
mov
adc
inc
push
idivl
push
inc
ja
xchg
push
dec
adc
lds
fdivr
jo
roll
scas
pop
and
cmp
jge
fnsave
lods
cmp
or
mov
jnp
int3
dec
sbb
jne
outsb
in
inc
adc
out
push
xor
imul
jg
xor
lret
repnz
mov
ja
das
pop
aaa
outsl
stos
insb
aaa
push
popa
jl
mov
xor
clc
int
add
dec
mul
fcoms
mov
add
adc
xchg
test
out
bound
xchg
lret
lret
push
lcall
ret
shll
jne
pop
xchg
aaa
mov
test
movsl
ret
fnsave
jmp
or
mov
ds
ret
lods
pop
sbb
pop
mov
popa
cmp
scas
add
fstl
cmc
push
fildll
clc
dec
cmp
jmpw
dec
mov
sub
jge
and
cmp
insb
push
jo
bswap
bound
cltd
jle
mov
adc
popa
out
test
xchg
aaa
jl
and
lret
jmp
dec
aas
mov
rolb
loope
pop
xchg
movsl
mov
dec
mov
hlt
and
mov
rcrb
xor
repnz
loop
push
add
add
add
fnclex
jo
cs
pop
sbb
inc
push
sbb
mov
std
cli
rol
daa
jmp
add
inc
int3
xlat
xchg
aad
xchg
aam
cmpsb
dec
sbb
out
les
mov
dec
cmp
aad
xor
mov
je
bound
dec
push
nop
mov
or
cs
movsl
in
pusha
sbb
sub
adc
dec
lcall
mov
movsl
scas
sub
push
xor
and
or
xchg
insb
test
popf
jb
xchg
sub
je
sbb
cmp
iret
ss
mov
data16
mov
jmp
lock
in
cmp
sbb
nop
aam
rcll
out
xchg
sbb
pop
jnp
test
jmp
inc
adc
xor
inc
fs
mov
cmp
mov
imul
mov
leave
mov
mov
fldcw
mov
out
pop
out
sub
stos
inc
loopne
cmp
fidivs
sub
clc
shrb
jg
xor
stos
ja
add
mov
in
and
fs
dec
push
shll
ret
mov
mov
imul
in
mov
and
adc
iret
loopne
mov
daa
mov
sbb
insl
push
outsb
or
sub
lock
das
jo
push
inc
ljmp
xchg
cmp
xlat
or
in
lods
mov
mov
and
filds
dec
sbb
hlt
or
push
cltd
sub
das
ret
scas
jnp
or
mov
test
cmp
inc
fnstenv
and
cmp
pop
je
or
xor
mov
fidivs
testb
jle
pop
int
dec
add
cmpl
or
fsubrl
xchg
or
iret
cmp
test
hlt
jle
mov
and
pop
in
or
xor
lods
repz
stos
push
ret
cwtl
lea
out
xor
lea
mov
and
cli
icebp
andl
adc
sub
out
sub
jno
jb
dec
dec
xlat
add
mov
sub
ret
or
aaa
das
lock
adc
lods
sub
lret
fdivrs
addl
or
lcall
std
xchg
cmovbe
and
mov
outsl
mov
push
cli
or
pusha
cltd
enter
xchg
jo
xchg
push
dec
xchg
adc
sub
pop
std
pop
scas
insb
sub
mov
lods
xchg
lahf
xchg
divl
xlat
sbb
cmpsb
xchg
inc
add
inc
jbe
and
jns
sti
aaa
sbb
xor
jecxz
aaa
xchg
fidivl
push
cmp
jl
sbb
sbb
push
xchg
mov
mov
popa
subl
sbb
mov
or
es
or
sub
pop
pop
fldt
jb
fistpll
in
inc
scas
xor
leave
les
out
mov
mov
and
ja
lea
inc
aam
rclb
mov
xchg
fisttpl
sbb
mov
push
roll
pop
stos
mov
sub
push
lods
jo
xor
sbb
lock
ja
mov
adc
das
sub
push
les
mov
jbe
roll
push
out
sub
stos
sbb
scas
lret
cli
mov
dec
stc
jo
dec
scas
lods
and
mov
sti
inc
lea
add
es
in
adc
icebp
push
sar
daa
mov
int
mov
lret
sub
shrl
push
adc
xchg
inc
in
jne
mov
ficomps
xor
adc
enter
mov
mov
divl
out
adc
sub
iret
sub
iret
shll
mov
cmp
cmp
nop
and
shr
adc
or
push
mov
outsl
lods
mov
adc
mov
imul
inc
imul
inc
xchg
push
adc
mov
or
cmp
popa
push
loopne
cmp
inc
neg
add
jmp
stos
ljmp
xchg
and
push
imul
divl
ljmp
mov
inc
iret
idivb
sub
add
and
test
pushf
sub
jb
mov
sar
repnz
shlb
inc
add
fldcw
rolb
lret
adc
andl
pop
in
outsl
cmp
and
cmc
dec
test
pop
imul
cmc
repz
loopne
call
shrl
mov
jmp
jbe
jns
std
push
mov
xchg
int
pop
or
xchg
repz
or
ja
and
mov
sub
std
mov
ss
mov
fcoms
xchg
cmp
and
add
push
sub
xor
push
frstor
in
loopne
push
pop
out
scas
aas
add
push
scas
daa
sti
cmp
sub
hlt
add
sbb
adc
leave
test
bound
es
jg
mov
stos
out
add
aad
ja
test
mov
add
add
xchg
lods
out
sub
inc
jnp
les
scas
xchg
jo
push
xchg
cmpsl
and
iret
mov
xor
xor
cmp
mov
mov
mov
cmpsl
pop
cmpl
popa
ljmp
lods
mov
mov
movsl
cmp
and
mov
stc
repz
or
es
fcomip
cmp
add
popa
gs
fisubl
cmpsl
mov
lcall
fisubrs
outsl
mov
xor
xchg
cmp
scas
fs
dec
and
jl
or
sub
stc
or
sub
stos
lds
jbe
pop
dec
pop
xlat
push
pop
mov
push
imul
movsb
pop
xchg
mov
and
clc
lods
push
jno
or
push
test
ret
pop
lret
lock
inc
or
xchg
mov
add
xor
adc
push
inc
xchg
ret
inc
hlt
addb
mov
xor
ja
sub
lods
sahf
cmpsb
lock
shll
mov
sub
cmpsl
ds
rcl
fs
movw
lahf
pop
xchg
lcall
ljmp
cli
fs
inc
and
das
es
lea
out
std
jne
repnz
fcmovnu
cmp
pop
push
or
inc
movsl
adc
in
cltd
cmp
mov
aam
add
xchg
arpl
push
pop
xor
fimull
pop
pop
rol
hlt
xor
xchg
cmpsl
ljmp
test
pusha
cmc
push
dec
dec
call
outsl
ret
cmp
arpl
pop
stos
pop
adc
rcr
xchg
push
insb
xchg
and
push
loop
jne
ljmp
leave
pusha
mov
pop
mov
or
hlt
dec
jge
cs
fistpll
js
in
cltd
pop
divl
jno
enter
dec
jge
test
loope
int
dec
cmpb
mov
sbb
bound
add
dec
popa
xor
add
jl
mull
jb
stos
mov
and
add
mov
rclb
push
xor
out
jmp
or
lods
arpl
sub
add
push
mov
mov
pop
dec
mov
stos
in
cltd
mov
icebp
push
inc
outsl
add
clc
dec
push
and
dec
imul
jmp
jb
mov
movsb
orb
xor
and
mov
push
dec
xor
and
mov
dec
add
mov
in
fs
into
mov
and
rcrb
xchg
cmpb
mov
and
fnsave
add
pushf
negb
sbb
shlb
xchg
xor
aas
dec
cli
cmp
pop
imul
cmpb
sbb
test
xchg
loope
enter
in
add
or
add
arpl
fldenv
and
mov
fs
or
data16
jge
sub
push
imul
dec
repz
iret
loop
test
mov
mov
cmpl
xor
sbb
call
fdivs
inc
js
stos
or
lret
mov
lret
sbb
xor
ja
cwtl
repz
mov
sbb
mov
jae
xor
aam
fs
mov
movsl
mov
or
outsl
push
or
push
ja
inc
ds
push
cmpl
add
mov
inc
inc
push
andl
cmp
icebp
and
mov
push
fsubs
pop
and
cmpsb
dec
xchg
add
dec
jbe
loope
cmp
xchg
lret
into
sub
data16
xor
fsubr
pop
jp
ret
push
xor
repz
mov
rclb
fstps
pop
sub
lea
add
lods
jge
ja
cwtl
mov
mov
stos
jmp
mov
xchg
pop
mov
fisubrl
jg
repnz
in
hlt
sahf
mov
cmp
or
in
xchg
dec
mov
stos
scas
rcrb
jmp
mov
imul
sub
in
ret
and
push
xor
test
call
jnp
mov
filds
jae
cmp
mov
adc
daa
hlt
cs
movsb
xor
jae
rcrl
lahf
clc
aaa
cmp
dec
xchg
add
xor
and
jl
dec
call
push
leave
cmp
or
sub
xchg
lahf
inc
sub
mov
push
cmp
xchg
jnp
inc
xchg
push
sbb
in
adc
fistpl
jae
xor
sub
aaa
aad
inc
dec
paddusw
lret
jp
imul
data16
xchg
enter
js
call
outsb
jl
adc
mov
ds
sub
xor
sub
in
xchg
xchg
sti
dec
mov
cmc
prefetch
mov
fisubs
aam
xlat
xor
xchg
hlt
xchg
add
pop
jg
loop
cmpsb
mov
lcall
jecxz
dec
mov
cmp
stos
bound
leave
pop
cmpsl
in
sbb
adcb
test
adc
or
mov
movsl
enter
add
mov
xor
push
mov
push
shr
mov
dec
cwtl
adc
in
pop
jb
movsb
inc
ret
and
lods
jmp
and
lods
rorb
test
test
stc
rcrl
sahf
ret
leave
mov
pop
pop
mov
and
inc
dec
test
xchg
outsl
in
outsl
pop
inc
rcrb
jae
jnp
xlat
pop
fdivs
mov
lea
std
xchg
je
fsubl
out
dec
jmp
mov
loope
outsl
test
mov
jge
loop
sbb
jg
cwtl
mov
js
sub
inc
jle
repnz
jne
pop
stos
jbe
xchg
cmp
mov
shll
test
jmp
aas
xchg
into
iret
fmuls
int
xor
jle
sub
sub
sbb
sahf
pop
scas
jo
arpl
mov
frstor
popf
xor
nop
push
imul
mov
loope
rcrl
es
cld
mov
dec
push
inc
ret
outsl
jne
push
inc
cmp
adc
and
push
mov
leave
lods
jmp
sub
gs
out
jne
xor
pop
mov
adc
fadd
outsb
in
addr16
scas
add
imul
call
inc
mov
inc
mov
stos
mov
jo
jno
mov
mov
leave
imul
mov
imul
xor
das
insb
pop
outsb
pop
jbe
dec
lret
dec
in
pop
sbb
push
mov
fwait
pusha
mov
dec
int3
lcall
bound
jb
dec
cwtl
imul
lahf
xor
jae
xchg
cli
jecxz
sub
push
jmp
mov
aam
inc
mov
xor
jmp
push
sbb
jnp
xor
out
or
into
insb
or
xchg
cmp
dec
jmp
push
sub
scas
test
inc
or
popf
jle
in
notl
xor
sbb
les
out
add
fdiv
mov
lret
imul
push
dec
sub
cmp
push
sbb
jle
shrb
dec
out
push
neg
scas
and
sarb
test
popf
cwtl
mov
inc
js
out
pop
insl
cmp
mov
pop
xchg
inc
xor
arpl
lret
sbb
mov
orb
mov
mov
cld
loop
pop
sbb
sub
jmp
sbb
mov
repz
cmp
mov
divb
rcl
ss
fsubrp
xchg
add
jp
out
pop
stos
rclb
xchg
clc
loope
sbb
mov
dec
pop
repnz
dec
mov
xchg
mov
jp
cmp
nop
mov
add
jmp
jnp
xor
sahf
imul
loop
sub
cltd
mov
or
pusha
ret
or
push
cmp
inc
adc
sbb
dec
test
lods
arpl
call
push
jbe
aam
sbb
out
sub
lea
xchg
jle
sahf
mov
xor
pop
pop
xor
mov
dec
cmp
out
ficompl
mov
cmpsb
push
call
jg
mov
inc
nop
arpl
adc
or
enter
ret
push
lds
scas
scas
sbb
ret
or
inc
pusha
push
push
dec
lahf
fsubrp
adc
scas
mov
push
cmc
inc
loope
jmp
fcmovnb
jne
into
mov
adc
movl
adc
lock
sarb
jo
cs
lahf
lahf
fidivs
cld
daa
and
lret
or
sub
scas
cwtl
mov
jle
mov
mov
fists
inc
loope
daa
fists
xchg
jne
xor
jg
or
cmp
in
jmp
push
daa
cmp
sbb
or
imul
jp
into
pusha
push
sarl
das
xlat
mov
cwtl
dec
outsb
hlt
sbb
fs
lods
test
ja
xchg
ljmp
mov
push
ja
out
sub
mov
and
cmp
jnp
lea
xchg
push
add
movsb
mov
fsubrp
lret
and
in
and
jmp
sti
adc
add
mov
xchg
lods
mov
loopne
cmp
sub
inc
push
jmp
inc
jnp
sbb
sbb
mov
lcall
pop
mov
sbb
in
cmp
les
xchg
scas
xor
sbb
jecxz
xor
aam
sbb
cmp
cmp
push
xor
int
test
push
mov
jle
pop
stos
fistpl
jle
test
dec
mov
adc
jl
pushf
ss
jg
push
push
outsl
mov
jnp
cld
out
pushf
dec
sarl
add
add
div
shrb
inc
mov
pop
mov
rolb
shrl
pmuludq
mov
dec
jns
pop
std
push
push
es
out
xlat
and
xor
xor
shlb
push
leave
sbb
scas
inc
jecxz
hlt
mov
repnz
aaa
jmp
pop
push
cmp
and
mov
aaa
push
dec
aam
xor
pop
sbb
test
mov
outsl
in
cmc
fstl
repz
hlt
rcrb
or
std
jae
and
inc
xchg
inc
xchg
jno
push
adc
inc
jmp
test
jp
cmp
dec
imul
shl
sbb
xchg
ljmp
ds
addr16
shll
or
xorl
fmull
inc
leave
add
cmp
inc
and
jge
and
es
sbb
xchg
lods
adc
mov
out
pop
xchg
mov
enter
or
jnp
sbb
fs
fldcw
xor
in
aaa
lods
push
aad
lock
dec
jno
adc
mov
aam
and
push
inc
mov
cld
mov
lcall
sarb
and
adc
and
iret
pop
out
inc
movsl
push
in
xchg
mov
and
push
test
or
int3
pop
test
xchg
das
pop
imul
jbe
sbb
xchg
aas
test
sbb
fimull
adc
xchg
add
and
mov
imul
mov
dec
jp
jnp
inc
push
mov
cltd
imul
jno
adc
mov
mov
xor
sahf
jle
stc
xor
add
dec
dec
push
cmpsb
push
xor
dec
clc
insl
arpl
jg
sub
or
sub
push
sbbb
call
or
icebp
mov
movsb
enter
incb
shlb
and
dec
cmp
pop
fistps
idivb
rolb
mov
cli
mov
jbe
les
loop
into
mov
sub
ss
scas
mov
mov
outsb
push
xchg
pusha
arpl
ds
xchg
inc
aas
jmp
xor
inc
xor
adc
ds
add
jb
fnstsw
rorb
mov
fcmovnbe
gs
push
vphaddubq
aaa
xchg
sarl
sbb
dec
inc
adc
mov
jbe
mov
test
dec
mov
push
push
shrl
adcb
mov
fcmovu
and
sbb
jae
aam
or
dec
push
clc
les
fbstp
dec
or
shl
jge,pn
scas
xor
mov
mov
push
je
mov
xchg
insl
cwtl
and
aam
xchg
adc
loopne
jle
hlt
push
sahf
ret
xchg
mov
push
push
nop
mov
out
gs
std
jecxz
pop
stc
cmp
xchg
jnp
add
outsb
dec
xchg
sbb
daa
dec
sbb
outsl
mov
push
mov
stos
dec
adc
popa
xor
aaa
xchg
mov
mov
or
inc
and
xchg
clc
mov
jnp
jno
xor
adc
ret
nop
out
fs
xchg
rcr
in
decl
lock
aam
sub
bound
jns
mov
pushaw
cmp
mov
xchg
hlt
adc
mov
imul
and
xchg
add
into
stos
gs
cmp
push
ss
mov
mov
sarl
mov
outsb
rcrb
mov
out
in
lret
lods
inc
dec
cmpsb
rcr
lret
jno
jae
scas
adc
fs
jbe
add
outsl
jns
imul
sub
inc
test
and
lods
std
mov
mov
popf
pop
jae
mov
mov
xchg
loopne
iret
jbe
xor
adc
inc
xchg
push
push
scas
in
pop
xchg
dec
xchg
jne
hlt
out
jbe
fnstenv
push
cmpsl
ret
icebp
das
lds
cmpsb
outsb
push
sbb
das
cmp
outsl
not
daa
inc
jmp
insl
fsubs
test
cmpsb
mov
jo
rcrl
and
adc
xchg
add
push
mov
out
xchg
stos
sbb
adc
or
mov
jecxz
jb
push
gs
aam
repnz
cmp
inc
int
or
jbe
aas
mov
mov
aad
insl
leave
push
lret
pop
lods
fsubrs
dec
insb
lods
push
pop
push
mov
aas
and
push
dec
xchg
xchg
loop
push
test
fs
jne
xchg
dec
push
into
das
adc
xlat
mov
mov
das
test
or
mov
xchg
arpl
inc
cmpsb
icebp
jb
test
sbb
dec
inc
ss
pop
pop
xor
nop
jg
pop
xlat
pop
mov
mov
mov
and
add
adc
data16
adc
repnz
pop
jb
jae,pt
mov
rcll
sbb
push
jo
mov
and
push
xor
jl
or
ret
cmp
pop
pop
out
jnp
aas
push
mov
and
aad
aas
repz
inc
mov
dec
xchg
jl
cmpsb
nopl
add
insl
or
xor
das
mov
das
in
test
mov
inc
std
push
mov
jmp
call
clc
loope,pt
mov
jbe
mov
mov
test
push
in
mov
scas
stos
jmp
xchg
and
jnp
ss
pop
push
pushf
push
popf
andl
mov
pushl
jb
xchg
sti
or
fildll
sbb
or
or
sbb
imul
fmulp
add
mov
and
lods
test
xchg
sti
pushf
or
int
jecxz
jnp
int
dec
ret
mov
sub
push
add
add
and
test
roll
cmc
cmp
shll
cltd
sub
add
movsb
mov
adc
int3
rorl
aaa
sbb
outsb
add
testl
sbb
arpl
inc
mov
das
cli
iret
adc
xor
aad
add
les
jmp
pop
jbe
rcrb
jnp
xor
pop
inc
mov
cmp
xchg
cmpsl
fisttpl
dec
mov
sbb
iret
mov
test
pop
clc
pop
mov
std
xchg
xor
xchg
cmp
push
dec
inc
dec
xchg
mov
test
cmp
mov
mov
xchg
outsb
add
mov
mull
xchg
lock
pop
insb
pop
dec
mov
shlb
fdivrl
and
xchg
aam
ljmp
scas
mov
xchg
pop
or
adc
add
or
cmpsl
mov
sbb
push
in
dec
dec
sub
clc
pusha
push
int3
inc
jnp
mov
mov
stc
arpl
inc
cmpsb
je
sti
mov
xlat
mov
mov
jle
dec
push
sbb
mov
fidivrl
push
and
pushf
out
sbb
push
fs
pop
xor
cmp
adcl
jmp
sti
js
rolb
cltd
inc
mov
aaa
xorl
into
sbb
push
sbb
push
jno
stc
sub
pcmpeqw
inc
in
sbb
dec
jg
or
inc
jns
dec
mov
xchg
in
shll
adc
push
gs
jp
or
adc
in
push
test
push
jns
pop
pop
insb
or
imul
imul
je
dec
xchg
imul
dec
and
push
jecxz
js
fwait
scas
or
mov
add
mov
pop
add
orb
jb
dec
add
sub
inc
js
ret
lods
mov
in
cs
xor
xchg
jg
xchg
mov
int
mov
and
loop
xor
into
test
xor
dec
inc
mov
ret
aam
pushf
jp
push
fcmovnb
adc
daa
inc
enter
leave
dec
mov
inc
xor
jns
jno
fucomp
and
mov
push
hlt
xor
jmp
mov
dec
js
jge
jg
add
cmp
add
movd
into
dec
and
iret
insb
push
inc
ret
out
imul
pop
or
insl
push
imul
or
add
mov
popf
xchg
inc
mov
push
jge
insb
insb
clc
sbb
jns
movsl
movsl
insl
sbb
insb
insl
push
inc
adc
mov
mov
fld
leave
sarb
inc
repz
dec
jmp
xchg
mov
sub
and
and
lock
sub
clc
sbb
les
lret
xor
mov
mov
pusha
or
fs
sbb
xor
ja
aaa
sub
shr
xchg
pop
sbb
data16
or
loope
mov
adcl
filds
ljmp
mov
call
and
lcall
and
gs
ljmp
sahf
daa
mov
test
sub
inc
dec
mov
xor
jg
dec
testl
pushf
pop
out
pop
mov
add
mov
sub
jle
inc
inc
addr16
jns
dec
jl
push
cltd
cmp
test
mov
adc
cmp
popa
std
and
stc
scas
in
jle
pop
faddl
addb
loopne
jbe
test
cmp
fwait
xor
cmp
sbb
xchg
fsubr
cmpl
lods
xor
or
mov
pop
shlb
pop
shll
jnp
insl
je
sub
sub
sbb
mov
movsl
mov
out
jns
loop
mov
sub
cld
jl
sbb
jno
cwtl
lock
in
and
js
rcll
scas
loopne
jnp
add
call
sbb
clc
adc
inc
mov
arpl
or
das
dec
pop
pop
xor
or
lret
push
nop
and
jns
dec
dec
cmp
xor
jg
jae
js
sbb
sbb
mov
lret
inc
shl
data16
in
in
mov
push
scas
push
or
std
mov
push
ret
inc
rcll
sbbl
mov
imul
mov
jo
inc
mov
cltd
sti
dec
sub
leave
inc
jo
jbe
bound
adc
hlt
fimuls
xlat
xchg
xlat
shlb
sbb
sbbl
sbb
int
sbb
scas
pop
or
or
xorb
inc
std
scas
cmp
lods
lcall
jg
jbe
andl
xor
pop
rcr
int
out
jae
popa
mov
dec
or
cld
lock
fisubrl
xorb
xchg
mov
add
jb
fdivrs
fnstsw
pushf
and
or
nop
pop
mov
sub
loopne
cmp
out
add
out
dec
mov
nop
out
mov
out
das
cmpsl
in
in
nop
and
push
jecxz
jl
leave
push
lods
dec
rcl
jg
pushf
xor
pop
test
stos
lods
add
rolb
repz
jns
jnp
lods
jp
and
cltd
loop
scas
cmp
lret
fisttps
dec
stc
fildl
jne
push
int
cld
in
loope
sub
int3
add
into
add
scas
and
adc
call
mov
sub
sbb
lret
fisttpl
xchg
ret
dec
test
sub
jo
xor
insl
push
add
sbb
sub
lcall
les
push
pop
pop
cs
dec
mov
sbb
ret
je
sbb
adc
sub
cmp
pop
mov
outsl
jb
lods
bound
push
in
sarb
dec
xchg
adc
lret
jmp
push
fadds
pop
xchg
mov
inc
jge
out
fcmovbe
jo
inc
cmp
pop
sub
cmpsl
enter
test
jo
mov
js
sbb
cmp
std
cld
mov
push
ret
jno
jp
jge
sbb
enter
sarb
mov
shlb
aam
and
and
cmp
mov
in
jo
cli
test
xor
dec
inc
insl
xchg
and
jl
or
enter
int3
loope
aad
fisttps
push
cwtl
inc
mov
stos
jl
filds
lcall
or
push
dec
mov
mov
dec
imulb
cmpsl
cli
dec
mov
push
xchg
gs
xorl
pop
push
jge
sub
and
orl
mov
or
push
and
loop,pt
popf
add
adc
mov
mov
jecxz
jmp
jo
or
aam
les
pop
cld
or
sub
push
mov
fsub
cld
cmp
mov
pop
lods
aaa
movsb
lds
jg
mov
cltd
clc
mov
pop
mov
mov
fistpll
in
push
stos
and
lret
xor
xchg
addr16
lret
jb
mov
jb
push
push
adc
imull
sub
inc
fiadds
enter
lock
push
adc
and
orb
shrb
ret
pop
cmpsl
vpackuswb
xchg
xchg
movsb
lret
or
push
test
adc
lret
inc
push
mov
cmp
add
cmc
push
adc
aam
xchg
mov
bnd
mov
in
mov
insl
sbb
cmpsl
jl
xchg
ds
lcall
jae
inc
test
mov
mov
jmp
adcb
dec
movsl
pop
push
lret
xchg
jbe
outsw
push
dec
loop
stos
gs
dec
aad
dec
push
dec
mov
and
xchg
push
mov
sub
test
add
cmp
aad
notl
push
jp
sub
xor
and
push
inc
pop
cwtl
cwtl
xchg
jnp
out
sbb
into
mov
xchg
or
cmp
xchg
in
push
cli
out
movsl
push
cmp
ds
mov
mov
lods
lods
cmpsb
gs
jmp
pop
imul
mov
dec
add
sbb
ljmp
dec
filds
ljmp
inc
cltd
mov
mov
int3
out
pusha
popa
gs
andb
push
aad
push
adc
fs
loop
in
push
data16
inc
sti
enter
out
sbb
mov
sub
shrl
testl
jl
push
sub
push
mov
fs
jge
cld
pop
push
cmpsl
pushf
and
out
adc
inc
nop
sahf
cmp
jnp
jle
mov
jle
scas
cld
add
mov
js
cmpsb
jae
imul
xchg
sub
clc
shll
shll
stos
mov
inc
sub
cmp
int3
adc
push
cmp
jp
cmp
out
inc
lahf
cmpsl
xchg
jl
int
stos
les
cmp
inc
adcl
ljmp
addb
jbe
mov
push
adc
cmpsl
cmp
in
dec
popf
add
aas
add
cmc
dec
call
mov
xchg
add
sarb
dec
in
inc
adc
in
or
sti
mov
cmp
das
test
mov
ss
int3
dec
repnz
aas
ret
mov
loopne
mov
test
lea
into
add
pop
cmp
mov
mov
pop
aad
jbe
sbb
sbb
add
inc
insl
jne
sub
mov
orb
movb
adc
mov
adc
icebp
sbb
loope
loop
insl
rcll
decb
dec
insb
fsubrs
aaa
adc
adc
add
xor
int3
das
push
cwtl
roll
inc
mov
mov
rcll
imul
cmp
sarl
stc
int
lods
out
add
cwtl
mov
add
push
icebp
push
xchg
aas
mov
rcr
and
push
jb
mov
jns
mov
jp
mov
les
cmpb
scas
mov
js
push
dec
aad
js
dec
bound
loope
xchg
push
push
inc
push
push
scas
cld
jl
fsubp
in
mov
push
shlb
leave
push
mov
pop
dec
jle
pop
repz
jne
jae
xchg
and
sbb
mov
mov
pop
xorl
test
lods
into
fsubrl
clc
sbb
ja
add
scas
pop
ficoms
adc
and
lahf
enter
in
out
lret
sahf
pop
lock
pop
int
rolb
loop
ficoml
xor
mov
popf
ds
ret
sub
mov
pop
push
mov
xor
cltd
rolb
inc
or
inc
mov
sbb
rol
ror
cltd
cmp
push
or
gs
add
mov
jo
adc
fiaddl
dec
jbe
cmp
push
xor
push
adc
xor
push
and
inc
je
mov
imul
insl
mov
jge
jge
fisubl
lock
scas
ljmp
aas
mov
xchg
mov
adc
xor
cmp
fisubl
dec
cmpsb
stos
ret
test
call
jmp
pmulhw
stos
or
xorb
sahf
in
add
cmp
das
and
stc
pop
daa
pop
push
fmuls
gs
dec
jae
sbb
cwtl
and
test
out
push
push
pop
inc
dec
test
jns
rolb
test
pop
ja
les
ljmp
outsl
jge
jae
push
push
mov
insl
jbe
pop
sub
adc
inc
imul
aad
mov
sub
ret
mov
adc
or
mov
push
cmpsl
sub
adc
adc
out
cmp
out
shrl
dec
inc
cmp
clc
xchg
jb
cmp
ljmp
bound
lock
out
mov
add
dec
jo
loop
stos
jns
sub
lea
mov
mov
jmp
jns
dec
cmp
jns
fs
sbb
sbb
rclb
sarl
jnp
push
add
xchg
jo
sbb
mov
inc
ret
push
popf
icebp
xchg
mulb
push
sub
dec
xchg
pop
lods
stos
out
sarb
sub
push
push
or
jnp
inc
push
add
in
and
sbb
pop
icebp
insl
aam
jb
adc
inc
mov
addb
jl
inc
or
mov
mov
dec
adc
mov
adc
fsubp
frstor
test
mov
push
pop
jae
pop
lahf
es
outsb
sub
ds
out
cmp
cmp
bnd
loope
xor
add
ret
aaa
add
cmpsl
xor
nop
and
jns
jp
popa
loope
add
mov
insb
test
cmc
nop
push
imul
andb
arpl
inc
clc
leave
xchg
lea
in
dec
pop
stos
lret
jecxz
pop
lds
out
sub
mov
pop
popa
mov
mov
cmc
dec
pop
inc
inc
ret
out
mov
mov
daa
mov
xchg
sti
mov
ljmp
outsl
lods
pop
shrb
not
xchg
sar
mov
mulb
and
lahf
jmp
jle
ret
jo
sbb
sub
jno
jno
roll
mov
mov
and
pushf
in
je
push
dec
xchg
out
sub
mov
jmp
mov
mov
iret
push
notb
andl
sbb
mov
rclb
notb
jmp
jns
jl
js
int
ror
mov
js
sub
out
mov
jne
lods
ljmp
aaa
mov
pop
popa
xor
test
lret
ds
pusha
and
hlt
push
das
or
insl
in
xchg
or
xchg
xor
in
or
aaa
pop
lret
clc
add
ljmp
inc
data16
mov
pop
jo
stos
xchg
pop
sarl
outsb
pop
icebp
movzwl
add
xchg
cmc
or
call
sbb
ja
sahf
lds
pop
test
or
jns
jns
mov
fdivs
int3
lcall
jp
jnp
loope
imul
pop
enter
mov
push
jp
cpuid
in
sub
xor
in
sub
lcall
scas
ja
mov
dec
add
test
shrl
xchg
mov
pop
cmpsb
jno
push
mov
pop
dec
rcll
cwtl
scas
sarb
shlb
ss
out
inc
or
push
cmc
push
aad
stos
fiadds
lock
rorb
or
aad
and
adc
cli
jne
pop
das
cmpsb
mov
jg
inc
jl
cmp
cs
aas
mov
jns
mov
shl
lret
clc
jnp
jge
enter
call
xor
or
pop
xor
ret
jle
stos
sti
leave
test
jecxz
movb
xchg
aam
sarb
sbb
mov
cmc
lcall
nop
jne
scas
int3
fiaddl
loope
inc
repz
jmp
dec
dec
in
sbb
shl
sbb
pop
pop
fldt
lock
jmp
xor
loope
pop
add
or
jge
in
lds
or
nop
xchg
sahf
add
pop
rorb
inc
jp
stos
push
push
add
pop
dec
pop
les
jmp
push
in
pop
xlat
push
in
ret
loopne
pop
icebp
and
mov
and
movsb
pushl
jecxz
out
pop
adc
push
jae
nop
push
xchg
sahf
sarl
out
ficomps
jb
xchg
jg
jno
into
mov
add
jne
fwait
lea
fnsave
push
fldl
jb
pushf
in
mov
cmpsl
dec
bound
bnd
sbb
inc
testl
ret
or
cmpsl
adc
xor
or
scas
xchg
rcll
mov
in
aaa
loopne
add
and
sub
sub
fcmovnu
call
add
out
cwtl
mov
aaa
sub
dec
dec
xchg
pop
popa
out
jg
fisubrs
xor
cmp
mov
xchg
mov
push
imul
lret
mov
inc
pop
pop
bound
adc
mov
ljmp
jae
jnp
or
mov
popa
xlat
pop
lock
dec
jecxz
outsb
dec
xor
fmull
stos
fsubs
cmp
sbb
loop
xor
ds
js
adc
pop
xchg
mov
jbe
and
pop
insb
or
and
les
orl
push
dec
test
pop
mov
inc
hlt
and
sub
mov
mov
pop
in
testl
or
ret
out
sub
xchg
push
cmp
xlat
lret
mov
rcll
cld
daa
push
jb
pop
sbb
loope
pop
cwtl
jnp
and
mov
and
and
int3
ja
mov
jns
xor
or
push
pushf
data16
icebp
sub
arpl
sti
ret
bound
scas
addr16
daa
push
out
das
shl
test
pop
mov
inc
out
mov
jl
xchg
cmpl
xor
jl
in
xor
jge
movsb
dec
mov
test
inc
outsb
iret
xchg
cwtl
dec
mov
mov
mov
fwait
and
lock
cltd
dec
das
push
add
das
enter
shll
pop
mov
xor
jg
loope
addl
sub
add
mov
cmp
test
repz
std
sbb
in
mov
add
pop
push
add
call
imull
cmp
jge
jb
inc
or
ss
pop
scas
test
sbb
push
xchg
mov
in
push
pop
inc
movsl
scas
fadds
adc
out
sub
pop
xchg
dec
push
ret
and
mov
ficoms
fs
sub
sub
arpl
mov
push
int3
arpl
pop
loope
inc
outsl
gs
nop
push
or
test
fwait
adc
std
xor
jl
ljmp
xchg
arpl
data16
cmp
loop
fdivrs
jle
in
mov
outsb
fs
pushf
mov
scas
mov
sahf
imul
pusha
or
loopne
lods
stos
push
inc
cmp
into
xchg
pop
jnp
into
je
push
adc
sbb
popf
scas
sub
or
test
jl
movsb
inc
mov
notb
lret
inc
sub
cltd
or
lcall
inc
push
data16
dec
cld
jmp
adc
in
sbb
pop
jge
inc
ret
mov
jl
mov
sbb
ss
gs
xor
fs
ret
lds
inc
pop
cmp
fs
push
jne
inc
punpckldq
sahf
push
popa
pop
and
push
mov
mov
insb
lods
fimull
repnz
dec
fisttpll
pop
mov
jmp
or
test
fdivrl
lods
mov
std
xor
push
pop
push
int
add
sbb
addr16
inc
in
shll
and
aad
clc
inc
xlat
inc
dec
pop
insl
scas
jnp
sti
xor
leave
mov
icebp
inc
dec
or
cmp
adc
fidivrs
cmp
leave
loop
xor
outsb
and
mov
cmpsb
imul
orb
pop
push
push
dec
sbb
mov
sbb
jns
mov
popl
adc
xchg
jne
aaa
test
sbb
cmpsl
pop
or
push
push
pop
inc
popa
dec
mov
das
lods
jae
push
jns
dec
mov
out
aas
aam
rorb
iret
sahf
loop
cmp
xchg
push
syscall
sbb
std
loop
mov
outsb
cmpb
in
pop
push
outsl
loop
inc
push
rorl
mov
push
data16
or
sahf
mov
rclb
daa
cmp
push
jbe
adc
std
mov
sahf
sbb
fidivl
je
mov
movsb
mov
rcrb
fstpt
lret
lahf
push
mov
sbb
jne
js
cmp
push
addr16
push
lret
pushf
nop
sub
sub
inc
mov
hlt
mov
or
pop
jp
xor
xchg
pop
push
mov
inc
or
mov
popa
repnz
jno
lock
mov
or
or
fwait
jae
and
dec
repz
push
push
rorl
mov
enter
out
jmp
mov
add
mov
jb
imul
cs
out
push
sbb
xchg
hlt
xchg
movsl
bound
mov
incl
jecxz
icebp
jle
ja
dec
sti
xchg
notb
mov
xchg
imul
inc
pushf
adc
jne
ljmp
xchg
cmpsl
push
rorb
out
pop
aas
push
jnp
add
loope
push
pop
push
mov
fnstcw
lock
fildl
sahf
cmc
or
cmpsb
rorb
add
dec
cwtl
sarl
or
jge
das
adc
sub
mov
rorb
xchg
ja
cmp
sub
jp
inc
test
and
jnp
cmp
add
lret
mov
jg
repz
dec
push
dec
xchg
cwtl
push
iret
cli
loope
enter
test
adc
jnp
sbbl
cltd
jnp
out
jmp
mov
xor
mov
pop
jbe
outsb
loope
jbe
les
add
in
test
xchg
insl
incl
cmp
shlb
dec
dec
sub
pop
icebp
push
xchg
mov
imul
in
and
iret
or
push
call
decb
ljmp
adc
mov
pusha
dec
adc
and
cmp
mov
js
daa
seta
mov
bound
in
pop
dec
push
jno
test
inc
into
out
shl
push
psubd
mov
adc
ss
andb
js
in
and
popl
loop
cs
jo
inc
call
fisttpl
lock
movb
jae
pop
jl
mov
pushf
sub
sub
push
mov
lods
test
mov
mov
xor
cmp
shlb
shl
xor
mov
pop
cli
adc
dec
iret
push
outsb
add
inc
aad
inc
mov
rcll
call
push
mov
in
andl
fiaddl
jp
bound
xor
in
sub
lea
jb
ljmp
pop
sub
lcall
and
test
mov
cmp
std
icebp
xlat
jl
pop
mov
nop
repnz
cmp
lds
inc
push
mov
cmpsb
pop
sub
negl
mov
pop
jne
xor
jno
adc
pusha
fidivl
push
ficoml
insb
xchg
mov
fdivl
pop
repnz
jbe
add
pusha
es
xor
sbbl
inc
xchg
mov
aam
mov
push
aad
xor
mov
adcb
xor
cli
mov
sub
xchg
jb
push
test
in
dec
in
pop
pop
adc
or
aad
adc
andl
jp
pop
mov
subb
leave
mov
pop
addl
add
inc
loopne
cmpsb
dec
nop
popf
sub
pop
repz
into
inc
shl
mov
andb
insl
push
push
ljmp
cs
stos
jge
mov
mov
jl
loope
fsub
mov
sti
adc
cmp
or
push
mov
adc
arpl
sub
out
in
and
lods
shlb
dec
sarb
cmp
das
cmp
pop
xlat
xchg
shlb
mov
jnp
jo
icebp
cmp
mov
jg
pop
push
add
push
cmp
dec
sbb
in
popf
xchg
lock
lods
xor
scas
dec
xor
pop
test
iret
mov
xor
or
repnz
fmull
and
mov
stc
aad
mov
ja
push
mov
stos
add
push
int
subb
push
jo
or
push
pop
push
jae
mov
in
mov
mov
mov
fstpt
and
ror
pop
sbb
mov
iret
pop
enter
pop
xor
and
lret
std
push
inc
xchg
pop
lahf
and
outsb
fbld
sub
pop
or
lds
fwait
enter
fwait
jle
insl
iret
jp
leave
adc
icebp
jbe
dec
testb
fisttpl
push
into
add
popf
sub
loopne
xchg
mov
cltd
imul
cltd
jmp
mov
mov
pop
mov
xor
cmpsl
pop
loopne
push
xadd
push
add
xchg
mov
push
sub
push
ja
ds
stos
std
xorb
clc
mov
sub
sbb
aas
lahf
pusha
jge
pop
aad
hlt
pushf
popf
jae
mov
mov
xchg
add
cmp
sbb
insl
out
aaa
adc
orl
fdivr
adc
std
in
mov
ja
dec
pop
or
push
into
rorb
jae
mov
cmp
xchg
inc
std
xor
pop
arpl
mov
dec
cmpsl
dec
cmp
sbb
mov
or
mov
sub
test
add
xlat
lahf
xor
filds
orb
sahf
lods
iret
push
jecxz
mov
iret
hlt
movsb
or
pushf
push
jle
ss
add
in
pushf
test
cmp
xchg
ja,pn
imul
rorl
jp
sub
cmp
add
shl
shlb
loop
push
inc
ds
dec
outsl
in
mov
and
shll
ret
lret
inc
or
pop
pop
or
fiaddl
clc
adc
movsl
xchg
jge
into
xchg
mov
or
dec
inc
and
add
and
dec
nop
or
pushf
lds
xchg
lret
pop
xor
shll
mov
enter
push
push
xchg
sbb
pop
mov
sub
test
orb
jmp
clc
call
roll
or
mov
xchg
lea
jbe
sbb
lods
xchg
lea
clc
arpl
sub
adc
fldenv
fwait
imul
dec
insb
mov
fimull
mov
sbb
jo
bswap
lods
outsb
and
xchg
push
loop
popf
mov
bound
fs
daa
or
jnp
mov
rolb
scas
adc
xchg
pop
insl
dec
fcmovb
mov
loop
arpl
mov
adc
ficoml
mov
rorb
mov
sbbb
cwtl
xchg
je
sub
adc
call
jo
imul
push
adc
xadd
adc
sbb
ss
push
mov
jmp
xchg
ret
imul
adc
in
daa
call
popf
fwait
xor
mov
add
mov
mov
pop
je
aam
andl
cmp
in
insl
dec
xor
and
sbb
pop
or
outsl
outsb
mov
icebp
dec
and
cs
push
dec
and
ds
and
push
fsubl
data16
sub
pop
cli
dec
and
subb
sbb
cwtl
ds
jae
cwtl
pop
enter
rcrb
pop
repnz
call
add
hlt
fld
xlat
xchg
in
pop
mov
mov
jecxz
pop
push
mov
jae
pushl
pop
sub
jmp
call
fstl
in
dec
testb
dec
pop
xor
decl
push
out
js
jp
lcall
cmp
xlat
add
mov
repz
lret
rol
addl
lcall
push
push
and
or
sbb
mov
outsl
push
jns
rorl
std
xchg
mov
dec
mov
add
sbb
addl
sub
push
pop
out
lret
scas
sbb
sbb
insl
movsl
or
sbb
push
outsl
mov
mov
js
xor
scas
shrl
lock
mov
cmpsb
popa
ret
mov
inc
in
bound
ljmp
push
add
je
out
sbb
addr16
sar
cmc
and
mov
ret
aas
pusha
out
dec
push
mov
lret
out
fmull
aaa
pushl
dec
mov
jl
push
xchg
and
cltd
rcll
cmpl
in
std
stos
push
call
xchg
scas
or
mov
and
xchg
pop
das
xchg
cs
and
imul
mov
in
cltd
daa
mov
inc
xchg
shl
pop
out
sbbb
push
mov
orb
mov
fnstsw
leave
jle
jl
test
rolb
pushf
pop
mov
fnclex
leave
movsl
sbb
out
xchg
push
ds
inc
push
cli
std
xchg
sahf
jp
mov
or
mov
lahf
movsl
or
cmpsb
icebp
xchg
mov
stos
add
add
mov
insb
sahf
pop
jge
inc
jbe
dec
mov
inc
xor
sub
inc
nop
jmp
stc
mulb
popa
fimull
inc
pop
jbe
aas
hlt
mov
popf
xor
or
rclb
push
and
decl
push
repnz
or
insl
lahf
adcb
inc
mov
incb
inc
sbb
fcmovu
jo
andb
and
push
push
mov
adc
int3
ret
insb
cmp
dec
in
pop
jmp
shll
and
inc
xor
fdivl
fs
jle
mov
cmc
inc
cmpl
jle
rep
dec
sbb
jae
in
movsl
imul
stc
scas
arpl
mov
cli
fisubrs
xor
jno
push
imul
add
push
inc
cmc
pushf
inc
aad
fisttpll
in
sub
and
inc
pop
mov
ss
push
add
xor
popa
mov
sub
jae
sub
push
decl
or
shrd
in
sarb
call
add
mov
pop
jo
xchg
jge
xchg
popf
les
add
sbb
jle
cmp
mov
xor
xlat
fidivs
mov
adc
lods
jle
push
aad
xchg
int
into
push
cmc
push
inc
out
ss
pop
cmp
sbb
add
cmp
test
dec
xchg
push
iret
dec
jbe
mov
enter
int
add
cltd
adc
mov
mov
fdivrl
dec
mov
inc
jecxz
or
or
aas
mov
idiv
iret
rcrl
push
jge
jmp
push
enter
js
outsb
decl
gs
push
movsl
and
or
xchg
lea
out
int
fstps
sub
into
add
or
cmpl
push
add
dec
sbb
pushf
leave
pop
cltd
sbb
popf
mov
sub
and
subb
enter
outsb
addb
or
mov
and
pop
rcl
mov
fxch
push
fsts
xor
add
iret
test
push
push
nop
test
cwtl
cmp
adc
dec
jp
out
mov
xchg
mov
sbb
cmp
pusha
cmp
push
cld
mov
sub
dec
in
aam
jp
aas
mov
fpatan
clc
cmpsb
pusha
dec
dec
and
sarb
inc
into
mull
or
inc
divb
pusha
test
mov
and
xor
mov
mov
mov
adc
jp
cmp
add
shrl
repnz
lcall
loope
pusha
cmp
jecxz
xchg
daa
sub
dec
gs
mov
loop
repz
pop
shl
xor
cmpsb
push
lret
and
jecxz
jge
out
pop
mov
jne
and
inc
push
and
lret
pop
ds
cld
mov
sbb
mov
outsb
in
push
or
insb
sbb
inc
mov
mov
sub
ja
scas
fldl
das
fsubrl
in
sub
or
push
push
cmp
cld
add
fwait
cmp
push
fcomip
sbb
sahf
fldl2e
movl
aaa
clc
sub
mov
xor
jl
push
pop
in
stos
cmp
inc
mov
mov
add
repz
pop
or
mov
cmp
rcrb
lahf
mov
jmp
xor
lret
std
xchg
mov
add
push
cli
dec
lea
out
pop
cmp
andb
loop
fiadds
push
pop
jno
mov
test
sbb
int
fldt
dec
mov
pop
cmp
jo
cld
mov
in
out
je
rclb
test
xor
lcall
and
xchg
ud1
mov
inc
das
fiaddl
int3
call
movl
xchg
and
in
dec
arpl
and
and
dec
mov
scas
xor
popf
js
std
repz
imul
and
loope
vhsubps
push
mov
pop
mov
xor
stos
xor
inc
dec
fcmovu
jg
in
loope
adc
repnz
or
xchg
pop
in
das
lods
push
leave
mov
negb
pushf
mov
sub
lods
cmp
movntps
shlb
pusha
push
call
test
daa
scas
imul
insb
test
cld
movsl
or
sbb
int
add
mov
fdiv
or
push
xchg
mov
in
mov
xchg
adc
fs
mov
sbb
cld
mov
stos
cmp
dec
inc
ja
jno
lods
pop
xor
scas
lock
mov
or
in
sub
cltd
adc
fsubr
xchg
mov
insl
mov
or
mov
xchg
adc
cs
inc
push
addr16
in
and
addb
aaa
jle
cmp
cmp
es
jecxz
in
test
adc
inc
jo
xchg
pop
shll
out
mov
pop
rolb
pop
xlat
pop
mov
dec
test
xor
adc
push
inc
je
xlat
jge
daa
dec
pop
jle
mov
loope
idivb
lcall
push
adc
pop
movsb
ja
sub
out
aas
les
xchg
mov
repz
or
repz
aad
push
pop
sahf
xchg
pop
pop
sub
lret
push
insb
inc
sub
add
dec
aad
pop
dec
std
ljmp
lret
enter
sbb
das
mov
ljmp
fdivs
adc
xchg
xor
add
iret
mov
push
pop
lahf
fs
sbb
scas
pop
adc
aam
push
jle
lods
pop
jp
sbb
dec
fisttps
jae
sub
cmpl
dec
jl
pop
icebp
aaa
das
fnsave
xchg
push
ss
scas
adc
and
sub
in
scas
jnp
jle
mov
push
out
cwtl
lcall
sti
mov
or
pusha
adc
into
xor
mov
xchg
dec
cmp
sub
inc
pop
pusha
dec
imul
aas
dec
arpl
pop
ss
shrl
pop
test
adc
addr16
cmp
int
cmp
bound
or
cmp
movsl
dec
inc
loop
mov
inc
xor
jno
pop
xor
insb
scas
or
dec
leave
mov
xchg
lahf
dec
sbb
rorl
pop
decb
push
cmp
dec
jmp
jb
push
push
fstpl
das
ret
dec
jg
push
push
iret
fimuls
out
es
jge
mov
rorb
xor
fimuls
jo
dec
fldt
in
cli
mov
cmpsb
cltd
lahf
push
in
insl
push
fisubrl
popl
int3
cld
decb
lret
int
dec
testb
jmp
mov
adc
out
lret
add
int
xor
int3
mov
aaa
popa
pop
mov
push
jbe
push
sub
jmp
push
mov
fwait
sahf
push
mov
push
int3
dec
jne
nop
and
pop
aad
rcr
gs
ljmp
or
push
push
mov
sti
jle
out
fiadds
mov
jecxz
enter
or
aas
cmp
mov
sbbl
pushf
pop
sbb
adc
outsl
jae
add
xchg
movsb
in
cmpl
jb
dec
cmp
dec
out
mov
into
aad
orb
imul
and
pop
sbb
outsl
xor
push
mov
daa
pop
dec
xchg
cmp
pop
andl
push
sub
loopne
fs
sbb
dec
mov
mov
sub
pop
xchg
cltd
mov
xchg
shlb
inc
push
push
inc
push
sub
icebp
pop
outsl
sub
pop
mov
das
jecxz
jo
add
mov
dec
xchg
sahf
test
jbe
imul
add
call
jg
in
dec
out
enter
lds
daa
cmpl
sbb
gs
repz
test
and
cmc
icebp
lods
imul
mov
xchg
pop
xchg
fs
pop
shll
cmp
jg
lret
pop
add
in
dec
xor
imul
into
mov
in
bswap
or
ror
mov
cwtl
or
xorl
stc
inc
jle
daa
cmp
fsub
mov
and
repnz
inc
jge
jae
pop
xchg
mov
fisttps
jg
mov
cmp
call
xchg
adc
pop
dec
sub
mov
inc
arpl
cmpsb
push
leave
jnp
movsb
mov
sub
ss
push
stos
push
out
pop
ljmp
popf
adc
pop
pop
mov
xchg
mov
mov
data16
test
ds
test
xor
add
pop
shll
jne
jo
scas
movsb
inc
ss
xor
pusha
xchg
xor
rorl
push
call
ret
stc
scas
lds
mov
xchg
sbb
scas
jge
xor
and
ja
daa
iret
cs
outsb
bnd
inc
test
test
test
jecxz
dec
divb
cli
push
xor
push
cltd
cmp
fnclex
push
ret
movsl
cmp
push
mov
adc
pop
adc
leave
ret
sbb
mov
gs
repz
lods
mov
enter
mov
sub
mov
enter
sub
les
mov
es
xchg
repz
push
mov
incb
mov
mov
mov
sahf
inc
ja
fisubrs
test
xchg
rcl
push
sub
cmp
sahf
lret
mov
xor
or
enter
pop
or
cmp
enter
cmp
shlb
popl
pop
sbb
rcr
ret
push
or
mov
enter
aad
fimull
lods
xchg
pushf
push
rclb
inc
leave
xchg
sub
test
daa
cmp
push
mov
imul
insl
pop
imul
and
cmp
ds
cmp
inc
sub
lods
push
int
cwtd
je
xlat
mov
and
popf
xchg
outsb
outsl
inc
in
inc
xchg
test
jns
inc
jae
cmp
xchg
outsb
lock
mov
pop
test
pop
outsb
or
aam
pop
fnstsw
loopne
push
rolb
in
mov
clc
int
push
adc
in
inc
push
add
adc
loope
dec
pop
aam
mov
aaa
cmpb
inc
inc
pop
push
push
and
lcall
fwait
out
jp
xor
dec
daa
pop
jg
aad
les
cmp
in
cld
sub
xchg
or
pop
dec
jnp
inc
pop
xchg
xchg
jg
movsl
test
mov
addr16
jb
sbb
push
jns
or
cmpb
into
push
or
movsb
pop
xor
xor
scas
pop
inc
push
xchg
loopne
cmp
pushf
and
xchg
lahf
fidivs
xchg
ud2
fimull
push
inc
sub
imul
cmp
je
jle
lahf
dec
scas
xchg
xchg
or
or
jno
dec
dec
xor
lods
cmp
jmp
mov
int
jns
xchg
nop
jne
lock
imul
sbb
leave
or
frstor
lods
sbb
loop
movsl
xor
ds
fidivl
pop
mov
dec
scas
sub
imul
mov
call
js
mov
pop
int
mov
insb
popa
jnp
sub
repz
fimuls
push
xchg
sub
out
add
inc
dec
jae
pop
fisttpll
jmp
sti
mov
xor
movsb
js
sub
adc
jnp
insl
cmp
fdivrl
test
ljmp
in
dec
lods
and
das
insb
xchg
pop
jne
pop
adc
imul
xchg
popa
stos
idivb
clc
mov
push
gs
ds
xor
pop
jnp
push
pop
xchg
and
cltd
cmp
jge
push
addr16
stc
outsl
add
fcomp
inc
jl
out
scas
fdivrl
pop
imul
cmp
inc
add
dec
std
push
nop
add
adc
mov
das
shrl
mov
movb
xchg
testl
inc
out
pop
mov
movsl
mov
pop
lods
xor
je
outsl
cmc
push
lret
jp
add
arpl
pop
ljmp
pop
iret
jo
sub
xlat
pusha
jns
out
je
push
stc
add
inc
mov
es
in
or
fnstsw
pop
mov
in
ja
add
stos
lahf
and
jg
xchg
xor
mull
insb
inc
mov
or
sbb
mov
stos
mov
out
dec
mov
jb
sub
adc
test
pop
sbb
pop
or
imul
and
loopne
outsl
push
loopnew
fnstenv
pop
mov
ss
rcrl
cvtdq2ps
addr16
pushf
cwtl
jno
mov
in
xchg
aad
test
data16
mov
movsl
dec
mov
out
inc
loopne
add
test
repz
aaa
sub
jne
aam
mov
mov
fbstp
sti
lret
lods
and
cmpsl
mov
add
adc
xor
aam
loop
sbb
rorb
sub
pop
sahf
sbb
popf
push
jbe
fucom
sub
push
mov
or
bound
sub
hlt
cmp
hlt
and
jb
mov
jmp
pusha
sub
cmpsb
repz
lcall
xchg
jecxz
enter
xchg
sbb
inc
sub
jnp
shlb
dec
pop
xor
push
pushf
sub
movb
popa
xor
xchg
mov
fisttps
imul
orb
inc
xchg
aas
mov
jnp
or
mov
xchg
lahf
pop
ret
out
fucomip
cmp
mov
les
call
test
dec
add
or
add
cld
add
fdiv
xor
in
aaa
sti
fdivs
mov
inc
fsub
sahf
add
push
out
scas
xchg
into
loope
rcrl
sahf
xchg
dec
or
int
dec
pushf
cmp
pop
in
out
call
pop
push
aad
nop
std
xchg
add
adc
data16
mov
mov
std
lds
and
sbb
mov
dec
imul
icebp
jle
stos
in
adc
subb
fsubl
cli
mov
lock
jae
aas
sahf
out
or
push
pop
roll
nop
push
stos
hlt
ja,pn
cmp
push
movsl
add
inc
sbb
fildl
jo
popa
jns
mov
mov
jge
pop
cli
pop
std
mov
add
pop
fdivrs
push
sub
cwtl
cwtl
cmp
fbstp
dec
jl
andb
jmp
in
jo
je
xor
dec
mov
stos
stc
xchg
jae
call
stos
std
push
xor
push
xlat
mov
aas
or
jmp
les
incl
mov
mov
xchg
call
jle
das
dec
add
shl
adc
fsubrl
sub
cld
mov
pop
cs
adc
jp
aas
jmp
aaa
adc
ss
dec
mov
ret
dec
sbb
icebp
mov
das
jo
pop
inc
xchg
xchg
mov
cmc
and
push
ss
test
test
pop
cmpb
mov
push
es
mov
insb
sbb
jg
nop
imul
scas
jmp
and
mov
push
stc
loop
rcr
mov
pop
ret
sub
mov
popa
imul
js
cmp
mov
inc
sub
es
popf
loope
mov
sbb
int3
popa
sbb
cmp
fcomp
leave
and
push
out
dec
sub
lret
sbb
mov
push
cmp
cwtl
icebp
push
push
movsb
push
idiv
mov
mov
jae
or
mov
sahf
aas
jnp
stc
ja
mov
cmc
jge
sub
mov
filds
push
and
insl
inc
fucom
inc
dec
stos
adc
inc
xchg
popf
loope
in
sbb
mov
cs
insl
shl
pop
popa
adc
adc
test
negb
pop
ja
mov
shlb
incb
shrb
or
dec
scas
pop
int
mov
imul
in
add
fidivrl
push
xlat
call
adc
push
fs
test
lret
sbb
dec
repnz
nop
cmp
lea
add
rcrl
mov
frstor
add
mov
in
shrl
rcpps
fcmovu
add
adc
or
add
imul
xor
movsb
or
pop
scas
cmpsl
cmp
jb
rol
sub
aad
mov
dec
and
or
out
mov
ljmp
xor
mov
adc
pop
ss
xchg
dec
stos
xchg
icebp
jns
xchg
sbb
add
push
mov
mov
int3
sbb
push
insb
dec
in
arpl
insb
adc
negb
cmp
adc
fstpt
xchg
jne
jbe
std
test
pop
and
cmpsb
mov
inc
pop
adc
xor
mov
sahf
add
pop
mov
loop
jo
sub
push
inc
jae
mov
pop
xor
or
pop
or
hlt
pop
push
sub
mov
dec
loope
and
cli
adc
xchg
jle
adc
sbb
mov
cld
pop
push
cltd
mov
xchg
and
dec
lock
mov
cmp
out
push
divl
aas
andl
mov
bsr
cltd
fiadds
push
stos
fisubrl
mov
mov
hlt
notl
out
jge
mov
sub
and
sub
mov
push
adc
and
sahf
push
cmp
mov
add
cmpsl
add
mov
jle
sbb
xor
pushf
je
xchg
lock
outsb
or
imul
push
andl
jo
je,pn
daa
rcr
and
jg
fiaddl
dec
xlat
or
cwtl
lods
jmp
xor
add
sub
jae
add
ficoms
and
imulb
add
cwtl
mov
push
insl
inc
xchg
mov
inc
inc
cmp
repnz
out
adc
pop
rcrl
adc
add
mov
adc
lods
xor
cmp
sahf
fidivl
je
daa
add
and
pop
or
in
pop
xchg
leave
lcall
add
jecxz
sub
xchg
out
ficoml
fdivl
push
mov
mov
sub
outsl
hlt
dec
cmp
mov
xchg
cmp
xlat
int
jb
cmpsl
sahf
or
push
fisubs
mov
cmc
int3
jge
cmpsb
lcall
insl
out
das
jae
xchg
das
and
into
scas
hlt
popa
jo
cmpsb
ror
pop
rcrb
push
insb
mov
bound
movsb
dec
loope
xor
add
loopne
int
jno
xchg
sahf
adc
sti
adc
push
adc
cmpsb
cltd
popf
fucomi
test
mov
lret
and
bound
fnstenv
xlat
add
movsb
iret
cmpsl
cmpl
xchg
xchg
dec
hlt
mov
or
sub
addr16
jecxz
jle
pushf
scas
loop
jne
in
sbb
popa
scas
dec
sti
xchg
adc
xlat
xchg
mov
mov
mov
dec
jae
iret
mov
lods
dec
lea
pop
fidivrl
aaa
cmp
hlt
sahf
inc
xchg
pop
mov
or
test
push
subb
lret
jl
jp
loope
adc
imul
mov
movsl
popf
mov
and
iret
ficoml
mov
fistl
mov
negb
pusha
sub
loopne
xchg
into
test
push
adc
addr16
sti
lcall
xchg
push
xchg
mov
mov
push
xchg
lock
imul
mov
add
cld
loope
xchg
ljmp
aam
sbb
mov
dec
mov
pop
adc
shll
movsb
mov
jmp
leave
push
mov
pop
test
int
nop
xchg
imul
ljmp
mov
adc
cmp
insb
sbbl
push
pop
loope
icebp
push
mov
push
lcall
int3
aam
sbb
push
mov
daa
jne
xchg
jae
out
fdivs
cmp
pop
mov
and
cmp
cs
popa
nop
mov
and
stc
repz
mov
je
pop
sbb
movsb
inc
pop
je
xchg
inc
aaa
rcrl
lret
int
imul
mov
popl
xor
data16
in
push
outsb
cmp
pop
pop
xor
pop
push
adc
icebp
fcmovbe
sbb
stos
pop
xchg
fistpll
shll
faddl
inc
repnz
fadds
popf
jle
inc
or
jno
orl
cwtl
loope
jne
push
addl
push
add
sar
test
pop
dec
cmc
adcl
mov
adc
mov
cltd
loopne
add
mov
out
mov
fadds
in
jp
jne
sub
lods
fadd
jmp
test
test
daa
shlb
mov
xchg
sbb
jle
sub
cmc
jne
dec
test
js
jnp
int3
xchg
lcall
aaa
pop
xchg
jb
xchg
and
cltd
jg
mov
mulb
sub
or
or
jo
testl
leave
cs
aad
es
jg
aam
sbb
jne
jae
test
lods
pop
add
xor
mov
sar
jmp
lea
mov
jle
add
paddw
sahf
cmc
mov
test
sbb
jg
cmpsl
push
rcr
test
arpl
pop
jae
jne
sti
and
and
cli
cmp
scas
inc
pop
xor
ret
scas
popa
lods
cmp
not
filds
dec
adc
pop
mov
mov
xlat
rorb
and
andb
cmpb
dec
add
push
and
ret
iret
ds
xchg
xchg
fistl
repz
xchg
xchg
ljmp
cltd
movsb
aaa
rclb
gs
push
cmp
xchg
int3
sub
dec
les
lcall
test
xor
mov
lret
pop
mov
inc
jg
cltd
pop
in
mov
and
jecxz
dec
loopw
and
addr16
enter
jnp
adc
or
push
xor
leave
jecxz
pop
popa
rolb
repz
mov
cmp
xor
je
test
push
jo
mov
dec
cmpsb
sub
jle
dec
pop
push
jmp
pushf
stos
add
rorb
cmp
sub
mov
enter
xor
xor
call
ret
movd
jae
push
xor
out
scas
outsb
pop
lret
cmp
popf
push
and
or
pop
xor
fldl2e
cli
jns
mov
sbb
call
push
xchg
movsb
jmp
sbb
dec
test
dec
push
ret
test
out
mov
out
mov
in
and
inc
mov
lock
popf
stc
xchg
scas
pop
mov
or
mov
ja
jae
mov
sti
jae
mov
lds
sub
inc
xchg
sbb
pop
xlat
xchg
fbstp
dec
mov
lahf
shr
jg
sbb
ds
ret
addr16
sbb
shrl
xor
std
arpl
ret
adc
inc
addr16
adc
in
sub
cwtl
mov
popa
pop
and
or
pop
testb
pusha
loope
mov
sub
push
rcll
pop
add
dec
push
das
xor
shlb
mov
ror
aas
jne
je
lds
pop
in
push
int3
sub
jp
fwait
and
pop
not
jb
or
cmp
xchg
mov
mov
jne
dec
data16
ret
bound
mov
inc
push
inc
jg
inc
lock
mov
test
mov
or
movsb
jbe
bound
push
test
test
xor
stos
pop
hlt
addr16
enter
dec
mov
daa
shlb
sbb
xchg
int
ret
add
lds
inc
pop
sbb
jge
pop
xor
jge
adc
sub
ret
sbb
scas
or
inc
and
push
jle
push
dec
mov
push
cld
roll
inc
adc
sbb
add
mov
out
jnp
mov
pusha
adc
nop
cmp
push
sbb
in
push
cwtl
cmp
cmp
lock
cltd
xorw
pushf
lcall
insb
mov
mov
movsl
in
das
mov
jl
xchg
jne
xchg
js
pop
jp
or
jno
pop
sbb
cmp
xor
push
leave
cmp
cmp
cmp
mov
data16
push
cmp
xchg
or
xchg
cmpsb
loope
lods
cmp
lahf
hlt
mov
idiv
mov
out
enter
cmp
dec
loopne
icebp
out
jge
jns
fadd
adc
test
push
imul
jns
mov
das
sbb
fldcw
stos
add
hlt
mov
pop
mov
inc
sbb
jb
aas
mov
cs
dec
popa
mov
cmovne
lds
fildl
ficoml
xor
mov
inc
lods
fs
gs
fbstp
pop
mull
mov
xchg
test
and
aas
xchg
pop
xchg
mov
adcb
xchg
stos
xor
sub
mov
cmp
add
arpl
push
mov
aas
addr16
pop
cmp
mov
sar
pop
push
dec
mov
mov
cmp
in
dec
pop
and
popa
sbb
sub
sub
fstpt
xor
in
mov
das
daa
sub
push
pusha
popa
lock
and
mov
add
jbe
loop
aad
rorl
push
dec
mov
popf
cmpsl
mov
cmp
loope
mov
mov
jle
push
jno
das
data16
xchg
jbe
push
ret
fdivs
sbb
iret
inc
xchg
lds
fimuls
bound
pop
lods
popf
pusha
xchg
fisubl
lahf
mov
push
add
incl
test
push
dec
repz
and
std
adc
push
and
inc
outsl
xor
popa
inc
addl
jns
mov
xor
mov
mov
jp
fcmovne
mov
adc
movsl
mov
push
popa
sbb
fnsave
mov
les
pop
or
daa
adc
bound
shlb
add
jne
cmp
sub
mov
cltd
add
pop
xchg
cmpb
mov
inc
setp
cmpsl
nop
loope
lcall
js
add
mov
sbb
lret
inc
movsl
pushf
shrl
pop
loope
mov
fnstcw
dec
xchg
mov
popf
add
out
xchg
lds
cli
rolb
pop
bnd
jno
shll
das
pusha
das
imulb
imul
popa
cmp
lods
ret
cltd
scas
sbb
dec
movsb
and
test
nop
xchg
jne
lods
jb
add
clc
xchg
test
pop
ja
xchg
daa
shll
pop
test
dec
sti
sbb
jb
into
add
push
add
out
ja
xchg
outsl
dec
sbb
or
stos
mov
inc
inc
out
shlb
sub
repnz
ret
shrb
inc
mov
pop
mov
clc
cmp
lret
stos
inc
inc
push
ljmp
jnp
xor
test
jmp
dec
test
in
test
mov
dec
inc
xchg
add
jno
mov
push
mov
out
out
jg
adc
dec
mov
mov
and
mov
jg
mov
pop
leave
xor
jl
or
adc
jle
cmp
pop
adc
pushf
pop
gs
rcrl
popa
sbb
lcall
mov
outsl
sbb
add
sub
jae
cs
and
dec
push
movsl
test
cmp
xchg
enter
aam
jp
mov
add
mov
ja
fidivrs
sbb
push
sbb
xchg
add
xor
scas
in
inc
xlat
mov
pop
jns
lcall
arpl
push
and
test
pop
notb
xor
fistl
dec
das
xchg
and
sbb
pusha
leave
xchg
pop
stos
mov
add
repnz
in
dec
add
jno
inc
pop
pop
inc
push
inc
subb
bound
incb
inc
roll
jmp
pushf
pop
add
clc
pop
into
push
mov
imul
pushf
movsb
andl
sub
sub
sbb
hlt
mov
mov
in
mov
jns
bound
in
pop
push
test
xor
sbb
lock
inc
jecxz
outsl
arpl
lods
xchg
fstps
inc
cmp
dec
jecxz
iret
rorb
jecxz
fwait
int3
or
fistpll
inc
loopne
dec
in
mov
fdiv
in
and
mov
mov
add
in
xchg
fistps
push
pop
pop
nop
scas
push
insb
or
adc
jmp
cmpsl
mov
cmpsb
cmc
outsl
sub
arpl
push
sub
xor
inc
push
xor
pop
ret
rcrl
stos
lcall
addl
int
pmaddwd
mov
sarb
scas
cmp
push
out
ret
and
mov
push
jg
stc
sbb
sti
or
mov
call
push
cmc
repz
xchg
out
xor
mov
jge
mov
mov
pop
notl
aad
mov
icebp
fildl
sbb
mov
xchg
jle
push
jns
mov
sub
pop
mov
sbb
cmp
inc
scas
testl
aam
push
fmull
mov
popf
jnp
sub
xchg
and
jg
sbb
loop
lret
pop
mov
jl
dec
lods
dec
pop
inc
push
int3
mov
push
push
mov
fcompl
sub
imul
sub
out
movb
jecxz
scas
lret
movsb
mov
cmp
scas
sub
es
sti
mov
xchg
push
loop
cmc
in
stc
ljmp
push
mov
cmpb
aas
jne
mov
xchg
mov
test
popf
daa
std
lret
and
push
test
ljmp
dec
push
pop
aam
je
jne
loopne
je
movsb
das
mov
js
or
cmp
mov
adc
mov
out
lods
mov
inc
bound
push
roll
in
mov
ljmp
push
sub
mov
and
jecxz
or
or
inc
mov
icebp
mov
loopne
sbb
in
repz
sbb
mov
ljmp
mul
popf
sbb
jne
lods
mov
cmp
push
loope
mov
es
insb
int3
pop
cmp
sbb
test
mov
jmp
cmp
add
jo
int
push
loopne
or
int3
int3
push
adc
push
mov
imulb
push
xchg
inc
inc
aam
dec
sub
mov
out
imul
sbbb
cltd
xor
cli
pop
adc
sub
fisubs
ss
fsubrl
fimuls
push
roll
lds
sub
xchg
cmp
cmp
add
fbstp
aas
mov
xchg
sbb
and
rorl
jle
mov
js
sarb
xlat
pop
xor
roll
jge
ficoms
ss
sbb
in
jle
nop
outsl
add
lds
adc
mov
out
aaa
insl
xor
fnstenv
inc
inc
pusha
dec
dec
inc
push
ret
add
aaa
insl
adc
sub
add
mov
sbbl
leave
xchg
inc
addr16
mov
sbb
dec
scas
xor
iret
push
xor
fwait
sub
or
sbb
jl
push
shlb
es
xor
dec
cmpsb
sbb
xchg
push
xor
sub
jne
mov
jmp
and
jmp
fcomps
imul
jge
mov
out
xchg
jns
cmp
loope
clc
xor
shl
das
mov
clc
adc
or
xchg
imul
mov
pop
bound
lret
and
hlt
pop
std
subps
sub
out
mov
inc
adc
ss
inc
sbb
dec
push
jae
sahf
mov
xchg
or
sbb
mov
pop
ret
or
mov
les
jle
xchg
and
xor
aaa
into
and
pop
or
cmc
popa
dec
popf
push
xor
mov
in
daa
or
pop
pop
pop
and
sub
or
pusha
inc
test
jmp
pusha
popa
mov
xor
lret
bound
sub
jno
jbe
add
subl
clc
test
or
fiaddl
mov
call
gs
push
mov
pop
mov
in
mov
loopne
mov
pop
jecxz
mov
movsb
xchg
cmp
ljmp
fnstsw
sub
xor
cltd
test
loope
lds
jns
jb
je
test
cmp
sbb
in
pop
fcmovnbe
adc
xor
inc
adc
xchg
iret
pushf
jg
and
out
mov
insb
bound
je
aas
jae
ucomiss
cmp
rcll
jae
add
sbb
push
shr
aad
int
clc
and
jp
fcmovnb
mov
mov
ficoml
aad
dec
push
push
test
sarb
pop
mov
fcoml
cmp
dec
aaa
or
xchg
xchg
lods
int
sub
mov
jno
arpl
jp
aaa
push
fiadds
add
sti
and
into
addr16
dec
fneni(8087
aam
inc
jnp
out
pop
xchg
xchg
push
sub
cmpl
mov
cld
jo
xchg
or
or
cld
daa
scas
or
test
sub
xchg
sub
fucom
aam
xchg
rolb
imul
dec
push
sub
xor
mov
cmp
mov
dec
xchg
push
push
sbb
push
dec
inc
push
sbb
xor
mov
pop
int3
aaa
or
add
push
popa
adc
test
mov
sahf
add
pop
sarl
repnz
xchg
xchg
lock
add
popf
add
sub
stos
scas
xor
out
push
jp
jle
adcb
pop
mov
adc
enter
push
and
inc
cmovo
repnz
imul
adc
dec
add
xorl
mov
pop
xchg
xlat
sub
loop
cmp
std
push
fwait
scas
jp
pop
lahf
push
cltd
adc
dec
insl
sbb
add
adc
test
call
cmp
imul
in
sbb
ljmp
aaa
shll
xlat
in
cs
mov
insb
sbb
jbe
push
leave
lea
out
cmpsl
test
dec
dec
cmp
pop
lods
push
pop
adc
loopne
call
xchg
mov
int3
push
imul
pop
or
popf
push
cmc
inc
cmp
rcr
sbb
add
dec
jae
cmpsl
ja
orb
mov
and
mov
jle
inc
mov
jl
outsl
cmpsb
out
jp
sub
jge
adc
add
imul
jb
dec
push
push
xor
loope
mull
mov
int
sbb
add
sub
add
add
add
insl
add
add
add
add
add
fadds
add
repnz
add
add
add
add
add
add
inc
add
add
add
insb
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
incl
add
add
add
add
add
addl
incl
add
add
add
add
add
incl
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
add
outsb
dec
outsl
bound
push
arpl
add
push
imul
insb
insb
outsl
arpl
add
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
push
push
dec
outsl
arpl
add
inc
gs
jb
arpl
jae
popa
outsb
fs
gs
outsl
jne
je
addl
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
js
je
jb
arpl
jae
lahf
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
xor
je
imul
push
gs
jns
je
insl
push
imul
jae
insl
outsb
je
xor
inc
gs
jne
jb
outsb
je
jb
arpl
jae
and
push
popa
imul
insl
gs
int3
add
je
outsl
imul
jbe
jae
cmp
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
add
addr16
bound
arpl
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
popa
jae
dec
outsb
outsw
inc
add
push
imul
js
inc
add
dec
outsl
popa
fs
insl
popa
addr16
add
add
arpl
outsl
jne
gs
jbe
outsb
je
cmp
push
arpl
add
popa
jb
jo
gs
add
add
jbe
insb
imul
je
sub
dec
outsl
popa
fs
imul
add
outsl
ja
popa
jb
je
filds
push
gs
outsl
jne
fs
arpl
add
insb
jns
gs
dec
jne
inc
add
add
sub
add
add
add
insl
add
add
add
add
add
fadds
add
repnz
add
add
add
add
add
add
inc
add
add
add
insb
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
