jge
inc
mov
imul
outsl
mov
add
pop
into
cmp
lret
frstor
gs
or
cmpsl
fistpll
pop
hlt
cmp
ljmp
mov
xchg
sub
outsb
mov
adc
repnz
iret
sbb
sub
add
fisubl
lea
dec
andl
scas
not
popa
xchg
fmul
dec
stc
xor
test
and
lahf
cli
push
mov
lcall
dec
in
mov
cmp
cwtl
in
ss
mov
jns
xchg
int3
add
inc
mov
adc
add
or
xchg
sub
add
xor
jbe
and
and
in
inc
js
shr
xor
add
xchg
lret
int
mov
in
jo
add
out
jl
adc
insl
loopne
jns
lds
mov
adc
iret
fwait
push
in
and
repz
aaa
jg
lret
sbb
jnp
inc
mov
stc
xor
shll
outsl
mov
cmp
cmp
frstor
xorl
mov
test
hlt
cmp
ret
movsl
mov
fstpt
dec
xchg
ret
mov
daa
adc
repz
rcrb
outsl
in
add
fldenv
pop
pop
dec
sbbl
lea
fdivrl
lcall
xlat
and
lret
cld
push
mov
xor
testl
mov
aad
in
rolb
lock
int
pop
mov
jo
push
xchg
dec
xor
mov
xor
iret
in
popa
xchg
push
mov
loope
and
out
inc
js
shr
xor
jne
mov
add
lret
shll
gs
pushf
in
insl
leave
add
out
les
xor
rcrl
aaa
jnp
cmp
mov
iret
fstps
and
fldenv
sbb
in
in
inc
mov
out
dec
adc
xor
add
pop
lret
mov
cmp
fwait
xlat
loopne
dec
test
mov
stos
pusha
or
inc
sub
mov
jb
mov
pop
enter
dec
sub
fimull
adc
push
cmc
xor
jecxz
incb
stos
jmp
es
js
push
xchg
pop
cmp
xor
ficoms
je
or
in
insb
loopne
inc
jnp
or
xchg
ds
cmp
push
pop
mov
dec
ss
sub
icebp
push
xchg
int3
bswap
popf
add
and
push
xor
inc
mov
iret
push
mov
dec
jnp
pop
mov
cmp
xor
jne
mov
fimuls
lret
inc
inc
and
jg
add
in
inc
mov
pop
insl
cli
jo
cmp
cmp
fcomps
mov
iret
sub
and
or
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
pop
xor
jge
mov
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
cwtl
lods
dec
dec
stos
in
insb
adc
das
cmpsb
insb
stc
fnclex
jns,pt
jmp
pop
in
js
ret
test
ss
mov
jnp
or
jnp
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
cmpsb
or
mov
cmp
stos
pop
and
dec
hlt
xor
mov
cli
es
mov
rcrl
sahf
shll
insb
mov
xchg
in
dec
dec
mov
inc
aad
and
jl
xchg
addps
add
jge
sbb
insb
mov
and
dec
xchg
cmp
pop
imul
lcall
mov
imul
mov
sbb
xchg
ljmp
into
jle
xchg
add
mov
adc
outsl
or
mov
cmp
loop
push
dec
lds
push
xchg
clc
xor
addl
outsl
mov
push
cs
fidivs
ret
clc
js
ret
xchg
xor
push
mov
adc
mov
int3
pop
adc
bound
mov
iret
push
mov
cwtl
jb
pop
mov
cmp
xor
jne
mov
lret
lret
hlt
sar
and
jg
add
in
inc
mov
pop
xchg
cld
jo
xor
cmp
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
clc
inc
dec
mov
cmp
mov
loopne
jg
push
or
dec
pop
and
cmp
jge
mov
fistl
sub
mov
or
dec
scas
cmc
xor
fs
mull
and
scas
negl
outsl
clc
xor
xchg
popf
pop
icebp
push
dec
dec
stos
in
insb
in
outsl
cmpsb
leave
adc
clc
jmp
xchg
movsl
sbb
pop
test
ss
mov
adc
mov
int3
ljmp
cmpsl
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
loopne
pop
dec
cmc
shll
xor
enter
mov
mov
out
cmpsb
fcmovnbe
pop
xchg
mov
xor
not
or
out
sub
xchg
in
and
daa
xchg
jl
xor
cmp
popf
ss
jge
sub
arpl
cld
shll
mov
aaa
inc
mov
stos
fucomip
repz
or
pop
outsb
jmp
jle
mov
idiv
and
mov
pop
xchg
lods
mov
stos
lock
or
mov
dec
incb
add
inc
arpl
shl
push
push
xchg
fdivl
divb
push
jae
in
in
insb
mov
cmp
mov
dec
xchg
xor
pushl
jns,pt
ljmp
rclb
fwait
lock
fisttpl
out
leave
jecxz
jp
cmp
lcall
mov
push
mov
push
push
shlb
mov
xor
mov
jns
in
pop
movsb
divb
stc
cmp
nop
fidivl
or
out
jae
mov
stc
lret
push
sbbb
rorb
pop
jmp
subb
das
jns
jmp
inc
mov
sub
pop
pop
mov
mov
dec
icebp
sar
jno
xlat
loopne
jecxz
push
or
fldcw
lods
push
les
scas
pop
and
mov
popa
mov
xchg
push
and
mov
add
dec
push
hlt
jo
rcrb
fs
inc
dec
lret
sahf
scas
and
adcl
fdivrl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
or
into
inc
mov
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
decl
inc
in
xor
in
sbb
pop
inc
mov
pop
mov
mov
mov
push
mov
iret
sub
and
gs
jg
fstpl
mov
jmp
dec
mov
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
jl
pop
popaw
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
or
rcr
notb
xor
fstl
je
or
in
insb
stos
loop
mov
xor
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
and
mov
jge
inc
std
xchg
jmp
sbb
xchg
mov
gs
pop
sub
cld
js
loop
xor
loope
je
mov
lret
adcl
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
mov
popa
enter
lods
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
adc
and
cmp
out
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
lea
loop
jb
jmp
pop
in
js
ret
test
ss
mov
adc
xchg
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
repnz
mov
cmp
enter
in
and
gs
jg
fstpl
mov
cmc
mov
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
pop
and
cmp
jge
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
mov
adc
outsb
fnclex
divb
cmp
cmp
ret
pop
out
adc
push
xchg
int3
sahf
push
test
int3
push
cmove
iret
push
mov
inc
jbe
pop
ss
cld
js
loop
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
loope
mov
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
pop
dec
insl
stos
incb
add
in
outsl
cmpsb
in
es
cld
jns,pt
incl
nop
lret
outsb
lock
daa
mov
idivb
jnp
adc
sub
adc
mov
push
outsl
xchg
fstpt
or
loope
and
mov
push
mov
fwait
or
out
mov
cmp
mov
pushf
hlt
xor
mov
pop
movsb
in
sub
divps
lret
sub
add
pushf
mov
push
in
xlat
sbb
jg
ljmp
ret
xchg
out
dec
xchg
sbb
pop
dec
mov
pop
imul
popa
insl
xchg
je
testb
stos
xchg
and
shlb
loopne
jbe
xchg
sbb
loope
lcall
push
lret
mov
adcb
es
test
imul
mov
dec
sti
add
and
test
mov
std
dec
imul
fs
sub
movsl
and
xchg
ret
mov
lahf
sbb
inc
mov
popf
lods
loop
mov
or
iret
push
mov
xor
xchg
ss
xor
aam
pop
out
out
cmp
stos
call
int
in
push
mov
adc
jnp
andb
mov
cli
ret
mov
cmp
cmp
mov
test
add
es
in
add
pop
cmpsb
fucomip
add
mov
loopne
fwait
mov
or
jmp
js
icebp
adc
and
stc
outsl
adcl
imul
cwtl
xor
dec
cwtl
shll
pop
sahf
mov
jb
idivl
loop
adc
xor
fstl
pop
push
arpl
in
insb
xchg
out
outsb
mov
inc
xchg
adc
mov
cmp
data16
ret
mov
push
fisubs
insl
pop
cld
into
mov
jl
jnp
mov
xchg
lods
cmpsl
ss
sub
mov
mov
mov
mov
cmp
push
push
xchg
adc
testl
xor
mov
add
mov
sbb
loop
jns
and
inc
lds
imul
xor
mov
sbb
mov
xor
xchg
add
loopne
in
xchg
addb
lock
jg
push
mov
loopne
stos
xor
movsb
mov
dec
scas
add
cmp
and
xlat
pop
imulb
jno
lret
aaa
jle
xchg
cmp
xchg
ds
cwtl
dec
mov
sbb
in
cmpsb
mov
ds
lret
jbe
call
sbb
mov
or
mov
scas
shlb
xor
div
loopne
aaa
adc
pop
in
adc
mov
cmpsb
cltd
fildll
xchg
mul
jns
into
push
mov
or
call
push
xchg
push
mov
daa
mov
cmp
enter
scas
push
movsl
mov
out
mov
out
mov
or
movsl
xor
fwait
in
mov
int
movsb
in
or
pop
lods
mov
in
pop
xchg
mov
js
push
mov
iret
xchg
and
fld
js
adc
add
jge
mov
push
pop
dec
or
and
fwait
xchg
push
or
mov
fucomip
pop
push
les
imul
movsb
cmpsl
pop
and
test
jno
fucomi
dec
test
mov
iret
dec
pop
test
jo
mov
orb
and
cmpl
fmull
jg
xor
popf
pop
je
or
cmc
gs
mov
adc
gs
cli
push
jmp
movsl
sbb
cmp
fisttps
adc
les
icebp
jns
int3
ljmp
cmpsl
loopne
into
inc
test
jmp
mov
or
pop
lcall
xor
fldenv
push
lret
mov
inc
xor
push
mov
mov
movsl
pop
fs
push
pop
lea
xchg
outsl
push
cmp
cli
push
enter
lods
and
loope
js
adc
pop
fs
cmc
add
fstps
xchg
pop
jge
mov
push
dec
xlat
sti
jno
hlt
and
jnp
push
or
fists
push
les
xor
cmc
nop
jl
inc
ds
sbb
dec
push
xchg
hlt
jo
scas
pop
fs
mov
sahf
jecxz
or
and
sub
pop
test
dec
dec
push
gs
pop
fists
mov
fnclex
mov
jmp
pop
in
push
movsl
repz
inc
xchg
sbb
xchg
add
addr16
psrad
push
xchg
ret
jp
aas
dec
xchg
push
outsl
mov
jae
cs
pop
sbb
or
xchg
adc
or
test
lahf
fldcw
mov
enter
mulb
pushf
jg
cmpsl
in
jl
or
pop
pushf
cmp
cmpsb
test
pop
xchg
popf
das
jl
cmp
gs
rorb
aaa
xchg
ljmp
std
add
lret
push
imul
push
mov
mov
or
sbb
clc
test
or
jno
into
inc
dec
push
stos
xchg
and
std
sub
popf
fildll
gs
mov
loopne
insl
sbb
push
popa
scas
cli
xor
adc
mov
push
xchg
fmull
lahf
in
aas
jge
lret
pop
pop
jno
stos
in
insb
loopne
push
je
pop
or
xor
aas
insl
stos
lcall
movsb
insb
jle
push
rcrl
jne
incb
sbb
jecxz
pmulhw
pop
mov
sub
push
popf
mov
xlat
sub
in
inc
std
cmp
dec
loope
sub
cmp
jns
jbe
xor
pushf
fcmovnu
push
insb
cmp
out
xor
xor
mov
fistps
out
mov
jnp
popf
aam
popa
cmpsl
and
mov
mov
lret
out
lock
mov
mov
add
push
es
in
jg
ret
jmp
jns
roll
cmp
loopne
dec
lahf
clc
ret
aaa
jle
xchg
and
std
ret
or
jo
outsl
cmp
mov
lea
imul
push
xchg
fsubl
nop
scas
adc
jnp
fiaddl
dec
js
pushl
dec
mov
push
mov
std
push
dec
in
data16
cmp
mov
or
movsb
lock
call
pop
sbb
loopne
pmulhw
pop
mov
sub
popa
popf
mov
or
in
outsb
sti
in
pusha
rcl
inc
jne
xor
in
fs
push
inc
xchg
aam
xor
subl
add
xlat
repz
adc
pop
sahf
rcrl
out
fnstenv
jp
dec
or
fwait
es
mov
stos
mov
adc
cld
adc
popf
fldenv
movl
out
xor
jl
and
or
sbb
sbb
cmp
in
inc
imul
stos
mov
out
outsl
or
call
jl
mov
fdivrl
cmc
dec
cwtl
mov
fstps
jno
stos
in
insb
mov
inc
je
push
or
in
loop
cmp
mov
dec
jns
push
data16
ret
mov
jl
mov
loop
lods
aad
inc
mov
jecxz
ja
or
fists
mov
movsb
fsubs
lods
cmp
mov
insb
jnp
or
cld
cs
loope
pop
lods
cmp
jns
ret
daa
jno
cmpl
add
xlat
or
lahf
xor
shl
jl
test
jp
rcr
sub
push
mov
fdivs
cmp
gs
rorb
dec
js
jge
or
dec
xchg
aaa
outsb
xchg
aas
pop
iret
ficompl
cmc
xchg
jl
fistps
ss
add
incb
xlat
loopne
out
xor
rol
push
scas
ljmp
cmp
test
jo
mov
outsl
mov
sbb
int3
jo
mov
fimull
shlb
je
or
mov
dec
enter
mov
lds
les
shl
push
mov
out
sub
std
aas
imul
ss
loope
and
dec
cltd
shll
and
jb
lock
push
fists
addr16
ss
jae
and
mov
data16
dec
sbbl
jo
push
sbb
lret
mov
mov
xor
jg
add
mov
jnp
pop
aad
or
das
xchg
mov
roll
pushf
icebp
or
clc
and
xor
test
and
xor
mov
int
in
filds
or
or
loopne
lods
cmp
cmpsl
mov
sub
sbb
xchg
and
lods
imulb
push
xchg
fildl
push
mov
mov
pop
add
xchg
jo
lcall
ja
gs
push
jge
xorl
scas
divl
bound
xor
rclb
dec
addb
in
adc
mov
sub
push
dec
loop
and
incb
adc
scas
icebp
pop
ss
fidivrl
adc
adc
roll
mov
or
xlat
push
cmove
sub
cwtl
or
mov
lds
scas
adc
adc
add
jbe
fs
add
mov
inc
mov
jb
jmp
push
sti
and
dec
xchg
fldcw
push
xchg
cli
int3
ljmp
in
and
cmp
inc
dec
popf
xor
mov
cmp
jne
sbb
xor
aad
sbb
cld
dec
mov
push
lock
popa
mov
stos
fistps
sbb
outsl
lcall
clc
jae
fisttpll
lret
scas
ljmp
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
push
insb
stc
icebp
imul
mov
movsl
scas
sbb
in
xor
ret
mov
clc
popa
inc
xor
or
in
xchg
aam
push
jbe
cmp
fmull
mov
sti
and
sbb
insb
arpl
loopne
push
sahf
mov
pop
push
xor
add
test
cmp
sbb
jl
add
pusha
ret
mov
rolb
mov
sub
in
mov
lds
inc
mov
rcrl
je
mov
jno
add
data16
push
mov
cmp
fs
add
jecxz
fstps
jae
xor
mov
aad
xor
inc
jge
jmp
cmpsb
lock
xor
fldcw
jg
out
shlb
push
dec
mov
pop
lea
cmp
mov
jmp
aam
mov
jno
test
arpl
sub
xchg
stos
sub
clc
cmp
jo
lock
mov
cmp
cmp
shr
mov
xor
outsl
popf
adc
sarb
cmpsb
fwait
icebp
sbb
dec
cwtl
sbb
lret
jmp
jne
movlps
es
test
mov
lds
dec
pop
mov
xor
lds
push
jle
adc
ljmp
adc
mov
xor
dec
push
jecxz
jno
mov
jecxz
jl
adc
bound
push
notl
push
fstpl
xor
and
call
push
ljmp
out
aam
or
sar
or
lcall
cli
fdivs
mov
pop
repz
pop
ljmp
jle
int
add
mov
in
and
mov
pop
fs
lea
mov
fsts
xchg
aas
jne
mov
dec
xchg
scas
sti
jno
lods
and
dec
test
imul
bound
inc
jg
cmp
adc
push
popa
fildl
sub
mov
sbb
cmp
pop
inc
jg
push
sbb
xor
addr16
ret
or
and
scas
negl
or
cli
lods
daa
sub
add
in
stos
sbb
pusha
data16
inc
leave
insb
jmp
xor
cmc
lock
xchg
es
push
rcrl
sti
rcr
mov
or
out
fidivrl
xor
sub
js
int3
and
sbb
sub
xor
pushf
in
jnp
lods
mov
cld
cmp
loopne
std
adc
xchg
and
test
and
jp
out
xor
xor
mov
cmp
mov
mov
mov
push
jns
ret
sub
fstpl
jge
loopne
jb
ljmp
add
aad
pusha
sahf
loop
inc
xchg
pop
imul
and
roll
sbb
aaa
or
fdivr
jbe
xchg
adc
shlb
xor
jb
stc
repnz
and
sub
scas
fists
push
mov
into
or
fsubrl
fsubp
cmp
lret
xor
push
call
pop
push
pop
iret
adc
xchg
loope
sub
push
mull
jmp
ss
jl
mov
xchg
int3
mov
fwait
add
ss
loopne
ljmp
adc
xlat
out
divl
mov
cmp
xor
mov
cmp
lahf
repz
xchg
sub
add
inc
ret
inc
push
insb
inc
jne
sbb
sbb
fbstp
jg
repz
lds
loop
jg
ret
add
adc
or
pop
cli
inc
mov
sub
jmp
dec
mov
aam
pop
dec
jns
mov
fs
es
xchg
out
mov
das
popa
icebp
cmp
loopne
jo
sub
or
test
inc
push
xchg
pop
jo
mov
sbb
or
int
outsw
lock
jp
out
push
test
xchg
hlt
daa
xchg
add
adc
xchg
adc
inc
mov
in
jne
repz
out
ret
xchg
fidivs
push
scas
mov
sbb
fnsave
inc
pop
cmpsl
arpl
bswap
inc
mov
mov
ds
iret
lcall
jo
cmp
les
pop
inc
xchg
mov
fwait
loop
xor
shl
and
stc
pop
lahf
divl
dec
xchg
fdivrs
cwtl
inc
xor
and
dec
in
fisubs
in
lods
in
shrb
lods
lds
lods
cmpsb
sub
adc
imul
cs
int
cli
sub
mov
fisttpl
daa
aaa
jg
jno
imul
in
jo
sbb
out
push
lea
imul
mov
xor
sbb
in
xor
lods
or
mov
mov
stos
andl
inc
test
xor
incb
xchg
test
fisttpl
dec
sbbl
into
adc
jmp
or
dec
jmp
inc
mov
negb
adc
dec
mov
or
cmpsb
ret
lock
push
mov
adc
mov
int3
sarb
bound
mov
iret
push
mov
mov
fistps
std
cmp
xor
jne
mov
mov
push
lret
or
fwait
in
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
and
sbb
mov
pushf
inc
mov
aam
pop
dec
mov
cmp
mov
loopne
xchg
lods
push
or
pop
imul
dec
pop
and
cmp
jge
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fdivl
inc
mov
cmpsb
sti
or
enter
movsl
test
inc
out
xor
pop
adc
test
loopne
push
gs
outsl
cmpsb
xor
pushl
imul
popa
shlb
insb
jns
push
ss
ret
sub
das
mov
or
lock
aad
int3
pop
jnp
fwait
sub
mov
fmul
cmpsb
push
xchg
adc
sub
jecxz
and
and
mov
jg
push
jnp
adc
scas
cmc
daa
mov
fsts
pop
adc
or
mov
fsubr
mov
test
inc
test
hlt
push
xchg
leave
mov
add
xor
inc
jb
push
shrb
inc
loope
mov
loopne
add
pop
movsb
cmp
mov
insb
stos
sub
in
scas
hlt
dec
dec
push
sub
push
bnd
xchg
push
fnstsw
xchg
sbb
imul
out
mov
jge
cld
cmp
pop
mov
out
loope
aad
dec
mov
sbb
daa
mov
mov
cltd
push
and
aam
sub
and
xchg
lcall
mov
push
dec
lods
nop
mov
jl
cli
adc
lea
ds
push
dec
test
and
out
enter
mov
mov
das
je
xor
jg
add
pop
pop
je
jmp
movsl
sahf
rcrl
mov
or
pusha
fwait
jmp
cmp
lods
xchg
xor
sbb
lods
xchg
ss
jne
daa
repz
adc
out
dec
cltd
cld
xlat
sbb
call
pusha
ficomps
inc
mov
lods
jmp
add
loope
lret
and
shll
popa
mov
fisubrl
xchg
adc
out
pop
jnp
sbb
push
cmpl
fdivr
pop
cmp
daa
outsl
inc
sbb
and
outsb
ret
or
xchg
sbb
mov
aas
jp
testl
dec
xchg
xchg
insb
mov
inc
adc
bswap
cwtl
out
popf
cltd
ror
push
cmove
mov
popa
mov
bswap
enter
xor
loop
xor
lcall
lret
mov
mov
in
push
cli
int3
movzbl
in
mov
movl
mov
push
mov
iret
call
fdivl
insl
mov
jg
fstpl
mov
and
popa
ja
in
rcr
dec
sub
shl
jl
aas
ljmp
stc
jns
jmp
sbb
mov
enter
inc
lock
movsl
cs
cmp
outsb
arpl
sbb
jne
inc
jbe
xchg
fsts
push
addr16
outsb
in
lahf
sahf
mov
cli
inc
lods
loopne
ja
push
xor
data16
inc
icebp
hlt
das
push
xchg
pop
adc
sub
movsb
push
popf
dec
rolb
pop
sub
push
ret
and
xchg
enter
pop
clc
inc
pusha
dec
lea
stos
std
mov
inc
push
cltd
aas
clc
or
push
cli
out
ret
jge
mov
xor
aad
clc
xchg
cltd
mov
cld
into
int3
fcoml
fwait
scas
es
sarb
insb
adc
lret
mov
jle
shl
aaa
mov
mov
loopne
jnp
mov
mov
push
jp
scas
lods
adc
test
mov
jle
dec
fcmovbe
push
fwait
push
ds
enter
cmp
popf
xchg
sbb
add
xchg
inc
cld
pushf
xor
xor
mov
dec
jle
push
jp
test
xchg
xlat
lods
ret
cld
mov
aam
imulb
xor
lods
fisubrl
pushf
in
test
pusha
push
mov
call
das
push
imul
dec
mov
push
daa
xchg
xchg
clc
cmp
pop
cmc
push
cmp
pop
fwait
and
lahf
scas
push
movsb
mov
fadds
insl
lea
pop
jge
out
mov
test
mov
mov
repz
mov
mov
mov
inc
jp
repz
adc
insl
dec
inc
mov
lods
mov
sbb
shl
sub
xchg
repz
pop
sub
in
cmp
mov
pop
mov
jp
sahf
and
jg
cmc
xor
cmp
adc
movsb
mov
xchg
lods
or
push
mov
lret
mov
jle
jae
adc
push
and
ja
xor
hlt
sub
ficomps
or
insl
dec
in
cmp
sub
xchg
pop
cltd
push
je
cmp
and
call
jno
sbb
pushf
inc
xchg
subl
jnp
pop
cmp
push
shlb
call
inc
or
in
jnp
add
push
or
mov
inc
fstpl
sbb
jne
stos
call
sbb
lret
call
outsl
dec
xor
cltd
cltd
out
pop
mov
pushf
push
dec
int3
aad
test
sti
addr16
mov
or
fimuls
shll
rcr
test
pop
jge
cld
mov
xor
fs
xor
jge
cmp
aas
adc
movsl
movsl
fstpt
in
jbe
push
fadd
sbb
or
rcr
xor
cmp
xor
aas
arpl
and
mov
mov
dec
or
repnz
in
lret
adc
jl
rclb
fbld
lds
div
and
adc
outsb
pop
sarb
xor
inc
adc
pop
and
test
insl
enter
pop
mov
inc
fstps
roll
pop
mov
cmp
sbb
fdivrs
in
push
mov
add
inc
insb
sub
int
push
clc
add
cmp
jmp
aad
or
in
jo
pop
enter
sbb
sbb
sbb
sahf
dec
ret
cltd
sbb
inc
mov
das
loopne
cmp
mov
icebp
jae
mov
sbb
inc
imul
loope
imul
lock
sbb
into
xchg
sbb
test
in
enter
jnp
dec
repnz
into
ljmp
in
inc
lock
sub
jg
fnstcw
xchg
xor
inc
mov
jmp
xor
repnz
pop
dec
mov
cmp
xchg
xlat
loopne
dec
test
or
stos
fistps
dec
pop
sub
cmp
data16
testb
mov
xchg
cmc
sub
mov
or
dec
shl
jo
rcrb
fs
inc
dec
xchg
ret
and
mov
and
fdivrl
outsl
ret
pushf
ljmp
in
insb
test
dec
mov
adc
in
add
ficompl
sahf
test
ss
int
js
mov
int3
xor
mov
and
int3
push
cmove
iret
pop
mov
ret
sbb
pop
mov
sub
loop
xor
jno
scas
out
and
jbe
and
jg
add
pop
inc
mov
pop
sub
jns
shll
loopne
push
mov
push
xchg
ljmp
sub
or
aaa
dec
movsl
icebp
sbb
adc
xchg
fistps
data16
fs
sar
outsl
pop
aam
pop
dec
mov
cmp
xlat
frstor
push
test
or
mov
sbb
les
imul
inc
xchg
int3
and
mov
fstpt
jle
xchg
sub
mov
or
jo
shrb
fs
add
or
cmp
in
clc
push
inc
fst
jb
xor
mov
mov
mov
xor
push
push
adc
cli
add
outsb
hlt
push
mov
sbb
js
mov
int3
xor
mov
cmp
cmove
iret
push
mov
loope
and
jmp
jmp
adc
mov
cmp
lret
das
jbe
adc
in
or
pop
movsl
out
inc
mov
fwait
aam
xchg
int
jnp
aad
mov
into
cs
and
xchg
rorl
push
fcompl
cmp
mov
cld
add
xchg
fnsave
outsl
mov
cmpsb
fisubs
gs
fnsetpm(287
sub
insb
movsl
scas
jecxz
push
xchg
fsubs
outsl
cmc
add
lret
mov
test
cmp
xchg
testl
dec
cmp
pop
push
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
inc
mov
mov
inc
sub
push
mov
fisttpll
and
mov
js
fsts
pop
adc
mov
xchg
loopne
lret
sub
mov
in
mov
add
mov
pop
dec
jnp
pop
inc
inc
jo
test
pop
xchg
jp
cmp
mov
enter
in
and
je
cmp
in
pop
fs
inc
mov
cmp
xchg
jmp
jnp
dec
cmp
jno
test
es
push
or
stos
fisttps
icebp
cmp
jno
mov
fldt
imul
jmp
adc
inc
hlt
jo
leave
sbb
orb
gs
dec
sbb
adc
scas
mull
clc
xor
insl
popf
pop
imul
adc
push
mov
das
cmpsb
add
fwait
loop
dec
clc
lcall
xchg
cmpb
lahf
lock
push
push
adc
mov
int3
adc
inc
mov
mov
inc
sub
push
mov
cmp
mov
js
fsts
pop
adc
jecxz
lret
int3
insl
mov
in
mov
add
mov
pop
imul
jns
push
pop
xchg
jp
cmp
mov
enter
in
and
xchg
fwait
cmp
in
pop
fs
ss
sahf
es
xchg
pop
xorl
jno
test
es
push
or
stos
fisttps
icebp
cmp
push
cmpsb
mov
fisttpl
imul
pop
and
dec
cmova
jo
leave
sbb
orb
gs
dec
sbb
xorl
rcr
sbb
clc
xor
insl
popf
pop
dec
imul
adc
push
mov
das
cmpsb
loopne
fwait
loop
dec
clc
std
jne
sbb
mov
lock
push
push
adc
out
int3
repz
mov
mov
inc
sub
push
mov
sbb
mov
js
fldl2t
xor
mov
mov
xchg
loopne
lret
in
insl
mov
in
js
add
mov
pop
or
jo
call
leave
cmp
mov
enter
in
and
xor
cmp
in
pop
fs
roll
gs
daa
sahf
xchg
mov
pop
pop
dec
cmp
jno
shl
es
push
or
and
shll
leave
out
and
xor
ljmp
mov
and
dec
aaa
inc
hlt
jo
leave
sbb
orb
gs
dec
sbb
adcl
rcr
jl
clc
xor
insl
popf
pop
sub
gs
jecxz
push
mov
das
cmpsb
rorb
xchg
lcall
in
rcll
ss
push
push
adc
out
int3
shll
outsb
jno
cmpsl
jb
cmove
mov
push
mov
jge
and
cld
js
fldl2t
xor
roll
push
lret
mov
jnp
fnsetpm(287
adc
out
movsl
pop
sub
pop
inc
inc
jo
mov
pop
xchg
jp
cmp
mov
enter
in
and
push
cmpsl
cmp
in
pop
fs
aaa
daa
sahf
out
dec
xchg
pop
xorl
jno
rcl
push
or
and
icebp
pop
repz
xchg
cmpsb
mov
fcmovne
jo
xchg
jge
stos
mov
cmp
dec
aaa
inc
hlt
jo
les
dec
sahf
int
sahf
dec
sbb
xor
mov
movsb
mov
cli
xor
insl
popf
pop
or
gs
ret
clc
push
mov
das
cmpsb
mov
dec
clc
cmp
xchg
cmpb
xchg
out
ss
push
push
adc
fdivrs
int3
mov
inc
mov
mov
inc
sub
push
mov
pop
dec
and
mov
js
xchg
jmp
adc
fidivs
lret
lods
sub
in
mov
add
mov
pop
leave
jnp
pop
inc
inc
jo
sub
pop
xchg
jp
cmp
mov
enter
in
and
hlt
pop
cmp
in
pop
or
inc
mov
inc
repnz
xchg
pop
xorl
jno
shl
es
push
or
mov
push
les
out
and
stos
mov
fldt
mov
adc
inc
hlt
jo
leave
sbb
orb
gs
dec
sbb
adcl
mull
enter
popf
pop
jmp
or
xor
push
mov
das
cmpsb
orb
xchg
lcall
xchg
cmpb
lahf
lock
push
push
adc
xchg
pop
out
xchg
out
int3
xchg
pusha
movsb
mov
mov
inc
sub
jbe
gs
mov
mov
mov
js
fldl2t
xor
adc
push
lret
dec
insl
mov
in
jno
add
mov
pop
jmp
inc
jo
enter
jp
cmp
mov
enter
in
and
adc
cmp
in
pop
fs
inc
mov
cmpsb
cmp
xchg
pop
xorl
jno
rcl
push
or
and
mov
icebp
cmp
shll
popa
fisttpl
mov
adc
inc
hlt
jo
les
fs
orb
gs
dec
sbb
xorl
rcr
pushf
jl
xor
insl
popf
pop
lret
cmpsb
or
xor
push
mov
das
cmpsb
pusha
cmp
jge
in
rcll
ss
push
push
adc
fdivrs
int3
jae
inc
mov
mov
inc
sub
push
mov
popf
dec
and
mov
js
xchg
jmp
adc
cmc
mov
xchg
loopne
lret
insb
aam
mov
in
pop
enter
movsl
pop
mov
jo
push
leave
cmp
mov
enter
std
and
mov
or
in
pop
fs
rcll
gs
daa
sahf
push
cmp
xchg
pop
xorl
jno
test
es
push
or
iret
stos
fisttps
icebp
cmp
xor
popa
fldt
inc
xchg
jge
stos
mov
and
dec
test
jo
leave
sbb
orb
gs
dec
sbb
adcl
rcr
cld
mov
popf
pop
stos
imul
adc
push
mov
das
cmpsb
inc
ret
xchg
fisttpll
cmp
push
push
adc
lahf
jns
xchg
out
int3
push
imul
inc
sub
pop
mov
std
or
pop
aas
mov
js
aam
xor
push
sahf
mov
xchg
loopne
lret
or
mov
in
fs
mov
pop
test
inc
jo
or
cmp
mov
enter
in
and
aam
cmp
in
pop
fs
daa
sahf
data16
xchg
pop
xorl
jno
shl
es
roll
or
mov
push
les
icebp
cmp
adc
popa
fisttpl
inc
xchg
jge
stos
mov
or
dec
or
jo
rcrb
fs
roll
sahf
dec
sbb
xorl
mull
clc
xor
insl
popf
pop
mov
gs
inc
rcll
das
cmpsb
and
loop
dec
clc
mov
xchg
cmpb
test
ss
sbb
adc
mov
int3
xor
inc
mov
mov
inc
sub
push
mov
loop
and
mov
js
fldl2t
xor
jo
mov
and
push
lret
sub
imul
add
mov
pop
dec
mov
jo
mov
leave
cmp
cmp
in
and
jno
cmp
ljmp
divb
dec
xchg
loope
mov
incl
pop
dec
stos
dec
sti
jno
shl
es
roll
or
stos
fistps
push
push
les
fs
cmp
outsb
stos
mov
fldt
jne
xchg
cli
mov
adc
inc
hlt
jo
leave
sbb
orb
gs
stc
sbb
sbb
scas
mull
movsl
rcr
das
dec
clc
xor
popf
pop
data16
dec
xchg
xor
test
push
mov
cld
das
cmpsb
std
or
loop
inc
clc
lcall
jne
sbb
push
lahf
lock
push
adc
mov
int3
adc
inc
mov
mov
inc
sub
push
mov
add
pop
aas
mov
js
fldl2t
xor
nop
xorl
int
mov
in
js
add
movsl
pop
insb
adcb
mov
in
pop
xchg
leave
lret
cmp
cmp
in
and
xchg
cmpsl
cmp
ljmp
divb
dec
xchg
loope
mov
pop
pop
pop
dec
stos
dec
sti
jno
rcl
push
or
stos
fisttps
icebp
cmp
dec
cmpsb
mov
fisttpl
jo
xchg
jge
stos
mov
cmp
dec
aaa
inc
hlt
jo
leave
sbb
orb
gs
stc
sbb
cmpl
scas
mull
movsl
rcr
cmovs
xor
popf
pop
inc
mov
dec
xchg
xor
mov
push
mov
cld
das
cmpsb
fisttpll
loop
inc
clc
cli
jne
sbb
mov
lock
push
adc
in
int3
repnz
outsb
jno
cmpsl
or
mov
push
mov
and
pop
aas
mov
js
xchg
jmp
adc
loopne
lret
in
sub
in
mov
add
mov
pop
or
adc
jo
jecxz
pop
xchg
jp
cmp
mov
enter
in
and
xor
jg
in
pop
fs
sub
gs
daa
sahf
xor
xchg
pop
xorl
jno
shl
es
roll
or
push
push
lock
cmp
scas
stos
mov
fucomi
jne
xchg
cli
mov
adc
inc
hlt
jo
leave
sbb
orb
gs
stc
sbb
sbbl
rcr
outsl
dec
clc
xor
popf
pop
es
dec
xchg
xor
call
cld
das
cmpsb
mov
inc
clc
lcall
in
push
nop
cmpb
lahf
lock
push
adc
in
int3
shrb
inc
mov
mov
inc
mov
mov
mov
inc
dec
and
mov
js
xchg
jmp
adc
fidivs
lret
lea
mov
in
mov
add
mov
pop
sub
adc
jo
addl
xchg
jp
cmp
mov
enter
in
and
push
cmpsl
cmp
ljmp
divb
dec
xchg
pop
xorl
jno
shl
es
roll
or
and
rclb
icebp
cmp
mov
mov
fcmovne
xor
jge
stos
mov
jp
dec
aaa
inc
hlt
jo
test
fs
orb
gs
dec
sbb
cmp
scas
mull
movsl
rcr
dec
dec
clc
xor
popf
pop
push
mov
dec
xchg
xor
enter
fdivrp
das
cmpsb
popf
or
loop
inc
clc
cmp
sbb
ja
lock
push
push
adc
fistpll
int3
mov
inc
mov
mov
inc
sub
pop
mov
bound
pop
aas
mov
js
fsts
pop
adc
scas
mov
xchg
loopne
lret
lods
pop
rol
imul
test
out
movsl
pop
int3
scas
adc
jns
fcomps
jp
cmp
mov
enter
jmp
shll
or
fwait
ss
in
pop
fs
lds
sahf
inc
xor
pop
xorl
jno
test
es
push
or
iret
stos
fisttps
icebp
cmp
out
out
mulb
xor
jge
stos
mov
jp
dec
aaa
inc
hlt
jo
test
fs
orb
gs
dec
sbb
sbbl
mull
clc
xor
insl
popf
pop
out
or
xor
push
mov
das
cmpsb
jge
fwait
loop
dec
clc
lcall
xchg
cmpb
push
lock
push
push
adc
fistpll
int3
xchg
imul
insl
xor
inc
sub
push
mov
orb
aas
mov
js
mov
xor
adc
mov
xchg
loopne
lret
dec
insl
mov
in
js
add
movsl
pop
in
mov
jo
ret
lds
jp
cmp
mov
enter
in
and
adc
jg
in
pop
fs
gs
daa
sahf
mov
xorl
jno
test
es
push
or
iret
stos
fisttps
icebp
cmp
into
out
mulb
xor
jge
stos
mov
jp
dec
aaa
inc
hlt
jo
test
fs
orb
gs
dec
sbb
cmpl
rcr
insl
outsl
popf
pop
or
xor
push
mov
das
cmpsb
pop
ret
xchg
jp
in
rcll
ss
push
push
adc
fistpll
int3
jb
inc
mov
mov
inc
sub
push
mov
mov
mov
js
fldl2t
xor
xor
push
lret
insl
insl
mov
in
mov
add
mov
pop
mov
jo
arpl
pop
xchg
jp
cmp
mov
enter
in
and
mov
cmp
in
pop
fs
call
daa
sahf
add
dec
xchg
pop
xorl
jno
shl
es
roll
or
iret
stos
fisttps
icebp
cmp
cs
mulb
jne
xchg
cli
mov
adc
inc
hlt
jo
leave
sbb
orb
gs
stc
sbb
sbbl
scas
mull
clc
xor
insl
popf
pop
cmpsb
mov
dec
xchg
xor
push
das
cmpsb
cmp
dec
clc
fimull
cmp
sbb
adc
fistpll
int3
push
je
mov
outsl
mov
inc
sub
push
mov
ret
pop
lods
mov
js
fldl2t
xor
push
fidivs
lret
or
insl
fnsetpm(287
in
enter
movsl
pop
lods
jnp
pop
inc
inc
jo
add
pop
xchg
jp
cmp
cmp
in
and
rcrl
jg
in
pop
outsb
sub
gs
daa
sahf
arpl
mov
jnp
dec
cmp
jno
shl
es
roll
or
iret
stos
fisttps
icebp
cmp
push
out
mulb
jne
xchg
cli
mov
adc
inc
hlt
jo
leave
sbb
orb
gs
stc
sbb
cmpl
mull
clc
xor
insl
popf
pop
xchg
dec
adc
push
mov
cld
das
cmpsb
sbb
dec
clc
mov
xchg
cmpb
push
lock
push
push
adc
mov
int3
xor
mov
and
repnz
popa
iret
push
mov
addb
pushf
fildl
dec
inc
adc
pop
test
jo
mov
or
lret
outsl
jbe
and
mov
xor
or
xor
adc
dec
popl
imul
or
fstpl
mov
cmp
jb
notl
cmp
mov
loopne
xchg
dec
ret
jp
test
scas
jmp
inc
sbb
sahf
jno
into
ljmp
aad
add
cmp
mov
cmp
push
adc
jge
dec
aad
xor
sbbl
imul
push
cmp
repnz
cmpsl
xlat
lret
ljmp
and
lahf
in
js
dec
xchg
sub
mov
int
test
and
and
jnp
dec
cli
mov
inc
ja
jb
iret
rsqrtps
jnp
jmp
sub
jae
cmpsb
cld
jne
pop
cmp
mov
push
sub
push
shll
test
cmp
out
jl
jno
popa
int
cmp
in
pop
cli
pop
inc
push
jmp
jg
pop
int
xchg
jle
jno
pop
ret
addr16
adc
add
scas
fwait
pop
stc
lea
mov
iret
pusha
xchg
sub
mov
int
adc
lret
add
inc
mov
outsb
rcrb
mov
mov
into
sub
jl
addl
gs
jecxz
jge
pop
xchg
pop
inc
scas
ret
cmp
pop
dec
sbb
mov
imul
enter
sbb
repz
leavew
push
cmpsb
lret
mov
pop
sub
in
adc
jp
mov
andl
cmp
cltd
lcall
shlb
and
mov
addr16
mov
jns
and
mov
nop
loope
shlb
outsl
push
push
or
adcb
pop
movsb
inc
jmp
add
jno
xor
lahf
outsb
jmp
jo
pop
mov
hlt
aas
mov
cmpsb
arpl
or
dec
dec
cli
sub
mov
gs
sbb
fstl
inc
xor
xchg
imul
adc
push
aas
cmp
jge
stos
movsl
popf
test
cmpsl
mov
loop
fucom
fmuls
shl
shll
sahf
push
xchg
imul
jp
imul
mov
add
in
aam
mov
in
out
mov
mov
popf
mov
jl
xor
cmpsb
out
dec
in
push
mov
xor
mov
int
das
and
cmp
add
loope
out
test
pop
pop
mov
jo
inc
neg
call
mov
or
push
std
mov
cs
xor
jge
enter
insl
jbe
js
inc
repz
dec
jg
cs
mov
sbb
xchg
jae
xchg
cmpsl
push
mov
mov
insl
imul
mov
add
call
mov
cmp
mov
inc
negb
dec
call
lcall
in
cmp
nop
mov
xor
or
jmp
ja
or
movsb
aaa
mov
jg
mov
inc
cltd
cs
jl
ret
cmp
loopne
data16
movsl
push
fsubl
jbe
cmc
daa
outsl
add
frstor
loop
mov
into
adc
add
jns
sbb
fnstenv
bnd
xchg
mov
sbb
mov
pop
cs
add
insl
popf
pop
add
fcmovu
xchg
mov
test
sbb
cmp
stos
xchg
push
jne
repz
filds
mov
xchg
movsl
pop
xor
ret
out
push
lock
adc
inc
imul
push
into
sub
imul
fistps
mov
sbb
jns
popf
mov
sub
mov
iret
add
movsb
loopne
sbb
ss
mov
xchg
imul
bswap
das
rolb
aad
or
and
js
adc
aas
jg
xchg
incl
sarl
inc
decl
jo
int
pop
incb
mov
add
cmp
out
lahf
insl
push
int
outsl
clc
rcr
xchg
sahf
pop
repz
and
push
jne
mov
orb
stc
lods
push
dec
mov
and
sub
call
mov
mov
xchg
fisubl
aad
add
mov
cmpsb
insl
in
cmp
shlb
mov
or
xor
mov
out
ret
fwait
loop
dec
xchg
clc
scas
imul
push
xor
test
stos
and
jno
pop
movsb
push
pop
jl
rorb
insb
and
mov
push
jae
frstor
jg
in
lcall
fsubl
xor
push
insb
mov
pop
shr
jo
push
pop
jo
cli
cmp
push
push
push
sbb
sbb
gs
fidivrl
test
xlat
jmp
sbb
adc
imul
cmpsb
les
mov
jne
push
and
cmp
in
aam
or
stc
pop
dec
push
add
sti
inc
and
sbb
pop
pop
xlat
out
outsl
and
loopne
pusha
dec
push
outsb
or
dec
sarb
gs
mov
imul
xchg
and
xchg
aad
out
mov
mov
inc
sub
sbb
jge
mov
test
pop
xor
and
jle
sarl
pop
mov
icebp
jg
mov
mov
lods
jo
push
mov
xor
xor
cmp
testb
ds
and
xchg
jbe
dec
xchg
sarb
mov
jge
lods
xlat
ds
pop
lock
mull
xchg
out
test
sub
rcl
sbb
inc
push
je
ljmp
add
loope
xlat
jmp
movb
push
cmc
mov
pop
and
hlt
movb
jns
out
orb
pop
lcall
out
or
repnz
fildl
aam
insb
cmp
addr16
xchg
loop
xor
ficoms
popa
test
push
push
sbb
push
gs
mov
ret
xlat
jns
repnz
jecxz
call
imul
xchg
mov
dec
data16
cld
mov
jmp
adc
push
fisubl
dec
nop
mov
push
xor
adc
inc
aam
repnz
xlat
shll
ja
dec
stc
fbstp
mov
jecxz
mov
scas
or
dec
rorl
xor
mov
lcall
lods
in
inc
sahf
stc
add
push
aam
imul
xlat
jl
push
sbb
pop
lahf
cwtl
test
inc
cmp
xlat
loop
mov
jge
cwtl
cmp
or
leave
arpl
sub
fmull
sbb
xor
sti
jns
inc
dec
sub
dec
and
jecxz
movsb
outsl
jecxz
jp
sti
jge
mov
fmul
jp
sbb
cmpsl
pop
jns
mov
out
push
loopne
loope
jl
into
arpl
or
xchg
xor
shl
out
xchg
mov
xchg
int3
xor
jbe
fsubs
add
es
mov
jle
add
ror
fildl
push
div
sub
mov
xor
push
adc
push
cld
sbb
rclb
xchg
sbb
xor
aaa
xchg
ljmp
ljmp
add
mov
add
arpl
iret
out
pop
sarb
repnz
repnz
or
jno
rorb
rcrl
dec
les
jmp
cmp
mov
push
fistps
adc
mov
lds
dec
mov
aam
fs
fadds
xchg
jecxz
pop
ret
clc
call
idiv
mov
pop
mov
dec
push
fwait
push
mov
lods
fs
stos
jns
xchg
push
push
xor
xchg
pop
mov
scas
loopne
in
aaa
push
mov
dec
icebp
dec
das
xlat
inc
inc
xorb
mov
inc
mov
push
sahf
or
cmp
and
adc
and
xchg
push
and
gs
enter
pusha
pop
fs
in
scas
test
jmp
push
xchg
faddp
pop
cmpsb
jecxz
xchg
mov
and
push
sbb
movsl
in
xchg
sbb
jmp
sub
cmp
fsubrl
jae
inc
mov
dec
imul
das
dec
dec
sti
ja
xor
push
and
and
jl
mov
jle
repnz
or
fistpl
cmc
andl
and
mov
dec
jge
mov
sbb
out
cmp
sub
ljmp
cmp
mov
ljmp
cmp
in
stc
iret
rorb
push
push
or
push
jbe
out
add
ret
or
int3
push
shld
sub
xchg
stos
scas
leave
stc
xchg
aaa
cmp
scas
icebp
inc
addb
sbbb
ss
dec
test
mov
and
mov
pop
add
leave
ret
mov
dec
jbe
iret
jg
out
inc
std
imul
jb
xchg
xchg
aad
arpl
pusha
gs
out
icebp
xchg
and
out
and
mov
mov
pop
add
mov
dec
cmp
push
imul
sub
push
sub
add
ret
xchg
add
fldl
ror
scas
cmc
cmpl
sbb
scas
dec
cwtl
out
and
push
std
fstps
scas
clc
shll
test
outsl
xor
icebp
mov
xchg
sub
stos
push
add
adc
jge
add
mov
pop
add
pop
jno
jmp
xchg
inc
push
jle
das
fistps
int3
movsl
lfs
sbb
pushl
sbb
pop
lea
jmp
psllw
mov
or
pusha
iret
inc
imul
mov
shrl
or
jae
daa
jo
loop
push
mov
shl
fldcw
and
push
sti
mov
mov
mov
sub
out
cs
movsb
mov
pop
repz
hlt
iret
mov
popa
jp
push
push
pop
jmp
out
dec
xlat
inc
adc
or
xchg
imul
dec
pusha
mov
add
pusha
xchg
dec
lds
jmp
cmp
cmc
mov
addr16
hlt
xor
shrb
mov
jne
aam
xor
cmp
loop
pushf
jo
adc
lods
push
mov
xor
lds
cmp
jbe
mov
push
stc
push
xchg
mov
ljmp
pop
push
insb
or
mov
outsb
cmp
pop
mov
jl
sub
call
imul
fadd
repnz
xchg
and
sbb
shll
cmp
mov
or
xorps
fcoms
and
add
cmpsl
mov
int3
adc
stos
sub
dec
dec
sub
imul
out
fnstcw
xchg
out
cli
lods
int3
mov
stos
push
sbb
mov
xor
ss
cli
cmp
rcll
rcrb
imul
xchg
inc
mov
xor
popf
add
sbb
adc
rcr
inc
xchg
rcll
cmp
aaa
or
jo
pusha
cmpsb
fists
dec
push
dec
lock
mov
jne
and
aad
and
cmp
popf
orl
int3
test
mov
leave
push
xchg
mov
xchg
sbb
adc
pop
das
push
sbb
push
gs
mov
xor
mov
pusha
xchg
movups
movzbl
jl
and
dec
or
pop
jbe
stc
lock
jmp
push
jne
jnp
paddusw
lret
das
jbe
aaa
adc
leave
in
cmp
jne
pop
inc
pop
fisttpll
mov
inc
lds
fcomps
mov
or
test
insl
stc
or
sbb
push
mov
add
fs
push
sbb
mov
iret
xchg
rclb
jg
pop
rorl
out
stc
loope
fdivrs
mov
mov
push
pop
and
dec
or
and
inc
repz
fwait
pop
mov
xchg
fsubs
add
fsubrl
int
inc
pop
fstl
xchg
dec
icebp
mov
push
stc
push
xchg
mov
ljmp
xchg
out
ja
ja
imul
ficompl
jae
pop
push
stc
and
and
inc
loopne
adc
gs
jg
and
in
ret
inc
shl
scas
daa
sti
jne
and
mov
mov
nop
lret
mov
xchg
sbb
imul
jg
negl
femms
add
adc
mov
and
mov
popa
ljmp
mov
or
xchg
out
xchg
inc
lret
sbb
into
cld
loopne
cmpsb
mov
mov
hlt
xchg
out
push
xlat
cld
push
sbb
push
dec
or
es
stos
popl
test
xchg
mov
aas
inc
adc
mov
push
pop
stos
int
mov
adc
ret
or
push
push
aam
cmp
test
mov
repnz
pushf
bound
xor
cmp
and
cmpsl
push
gs
sub
push
inc
lsl
pop
loop
and
push
gs
mov
pop
mov
shrb
addr16
adc
movsl
ds
fnstcw
pop
filds
push
mov
mov
sbb
or
mov
and
hlt
or
mov
pop
imull
mov
pop
xchg
jge
jno
mov
icebp
mov
add
fucomip
mov
xor
jle
mov
add
je
inc
dec
iret
inc
mov
int3
sbb
ja
push
std
pushl
int
pop
mov
add
mov
adc
cmp
movsb
mov
jg
popa
mov
fwait
hlt
sub
mov
jo
dec
scas
jbe
inc
cwtl
push
mov
mov
ljmp
mov
cld
out
xor
xchg
popa
xorb
test
imul
imul
mov
push
xchg
pop
out
lea
mov
ss
ret
out
ret
inc
pop
inc
pop
mov
xor
or
bnd
add
in
xlat
lcall
je
std
clc
jmp
mov
xchg
push
xchg
xchg
mov
cmp
push
push
pusha
mov
pop
adc
push
loopne
cmp
sub
cmp
pop
iret
cs
aad
ljmp
nop
addl
mov
adc
fldl
dec
mov
sub
jmp
sbb
jl
pop
sti
add
in
adc
clc
fmuls
out
jge
pop
mov
cmp
xor
push
lret
and
jge
xor
inc
xchg
rorl
sahf
or
xchg
sbb
xor
sti
sbb
sbb
outsl
jmp
add
xlat
in
stos
add
lods
mov
test
and
sub
loop
pop
push
ja
push
out
cltd
xor
ret
pop
and
pop
ja
mov
loop
int3
subb
scas
les
call
imul
sarl
lret
aas
repz
sbb
in
push
lea
pop
dec
in
inc
jp
push
xor
loopne
clc
xchg
bound
inc
or
jns
mov
mov
push
fstpt
xchg
sub
sub
les
jno
mov
loopne
cmpsb
into
idiv
aaa
pop
shrb
pop
jae
jb
push
pop
add
cltd
cmp
sbb
loope
insl
roll
jge
mov
ret
push
ds
je
movsb
jnp
arpl
adc
or
lock
roll
orb
sahf
dec
out
movsl
fstpl
and
xchg
mov
or
sbb
in
in
sbb
cmp
pop
fstpt
ds
or
push
out
ss
add
lcall
cmp
add
cmp
inc
dec
xchg
xchg
mov
add
fwait
inc
mov
cmp
in
gs
sbb
lods
in
adc
dec
out
xchg
and
adc
pop
jmp
inc
lcall
out
imul
lahf
loope
lds
adc
jmp
xchg
fisubs
jle
mov
sbb
pop
mov
leave
test
scas
fdivl
xor
sub
sti
imul
cmpb
sbb
xor
jl
pop
jns
cli
leave
adc
mov
hlt
sub
sti
sub
int
cli
dec
xchg
imul
push
cmc
stos
mov
dec
jge
mov
lds
dec
jge
push
pushf
frstor
outsb
pop
push
inc
cmp
and
fimuls
jmp
pop
in
adc
and
cld
mov
rclb
dec
lret
adc
hlt
imul
mov
xchg
or
jno
and
push
xchg
or
shrl
mov
pop
fwait
cwtl
cltd
clc
cmc
bound
mull
inc
mov
js
rcrb
repz
iret
pop
xchg
stos
dec
pop
sub
outsl
cmp
add
mov
popf
rol
ret
mov
jge
cli
ret
movsb
gs
xchg
sbb
cmc
xchg
cltd
jns
inc
std
jge
fisttpll
fisubrl
stc
mov
dec
jnp
dec
rcr
test
push
inc
fnstsw
adc
sub
pop
pop
push
or
push
nop
mov
pushf
test
fdivrl
lret
mov
imul
dec
cmp
popa
sbb
push
xor
sbb
int3
mov
shr
jns
je
xchg
sub
or
mov
add
icebp
loopne
push
xor
in
imull
movsl
adc
jae
sbb
adc
push
xchg
xor
sbb
arpl
popf
xor
xchg
or
add
xor
dec
adc
mov
imul
xchg
js
inc
push
xchg
cs
fcomps
or
and
inc
dec
data16
fldl
or
lods
dec
cli
out
cli
mov
or
test
cltd
jb
dec
test
xchg
in
pop
pop
das
mov
xchg
and
int3
aad
mov
inc
jae
addr16
jg
cld
or
das
jmp
mov
leave
xlat
add
mov
mov
das
lahf
sub
and
outsl
add
adc
push
xor
jmp
das
pushf
push
fs
stos
or
insb
sub
cmpsb
mov
mov
mov
int
imul
test
popf
aas
mov
rol
dec
fidivrl
sub
aam
addr16
jne
push
xlat
rol
imul
iret
push
rcll
lods
mov
jl
movsb
sbb
jne
idivl
add
enter
hlt
icebp
js
push
adc
test
insl
dec
adc
shl
fidivs
push
aad
icebp
mov
adc
das
or
pop
mov
bound
jbe
xorb
fnsave
popa
stos
iret
jge
std
mov
xlat
ss
or
or
add
arpl
fwait
sub
push
scas
inc
mov
stos
push
mov
shll
lret
pop
outsb
cmc
addl
or
or
fstps
pop
or
inc
mov
cld
daa
out
cmp
xchg
pop
xchg
lret
stc
add
push
sbb
jle
inc
cli
mov
fmuls
repnz
lret
or
out
scas
mov
bound
es
adc
movsl
adc
lret
sub
dec
jns
mov
adc
test
lods
mov
imul
mov
inc
pusha
lret
sahf
cwtl
cmp
out
xor
adc
data16
mov
loopne
pop
fcmove
mov
in
or
daa
mov
fstpl
mov
sbb
sahf
adc
pop
or
fisttpll
pop
ja
mov
mov
ss
lret
push
add
stos
sbb
scas
in
jp
scas
sarl
mov
mov
add
movsb
push
inc
stos
sbb
mov
imul
xor
insl
lahf
clc
test
addb
xor
idivl
outsl
loopne
push
mov
mov
mov
xchg
pop
rol
cmp
cmp
and
cld
vmread
xor
add
and
notl
xchg
push
ret
bswap
in
subl
mov
scas
int
jmp
cmc
jns
mov
shlb
ss
add
fcomps
dec
fsubrs
dec
adc
dec
data16
sub
fcom
testb
xlat
push
js
call
aaa
pop
or
mov
fs
out
inc
filds
iret
xchg
daa
or
cltd
iret
sbb
cmp
test
mov
and
sub
mov
scas
js
push
adc
out
jnp
rcrl
adc
mov
or
mov
add
inc
arpl
add
fisubs
jnp
xchg
sti
sbb
nop
popa
xchg
insb
movsb
shlb
adc
enter
xor
lock
or
fiaddl
in
inc
mov
xchg
mov
rol
jo
mov
outsb
addr16
dec
add
adc
rolb
movsl
mov
bound
shll
sub
pop
fnstcw
and
lock
das
jbe
adc
dec
or
ss
cmc
adc
mov
leave
test
pop
sbb
lret
sub
mov
lods
sbb
and
and
popf
xchg
adc
fs
and
pop
xchg
clc
xor
fwait
outsl
test
jne
xlat
pop
and
das
push
rcr
push
ror
xlat
cmpsl
int
cmp
or
sbb
mov
inc
xchg
hlt
pop
pop
pop
dec
or
jo
pusha
mov
ret
cmp
mov
sti
in
dec
nop
repnz
or
call
clc
dec
push
imul
int3
mov
and
popa
and
in
push
icebp
popa
lret
leave
repnz
and
test
push
inc
sub
dec
xchg
sti
adc
repnz
cmpsb
call
mov
inc
sub
push
and
mov
sub
sbb
arpl
popf
xor
push
xchg
cmpsl
add
dec
test
fwait
in
dec
std
test
adc
sub
call
xchg
ljmp
xchg
sub
sub
mov
push
cli
pop
dec
mov
add
ljmp
jae
mov
xor
mov
lods
fsts
dec
adc
push
int
in
sbb
mov
gs
dec
or
ss
jge
jns
mov
add
out
into
jns
data16
mov
mov
xor
les
mov
adc
push
jbe
iret
enter
push
adc
cmpsl
das
pop
in
xchg
xchg
icebp
and
lods
negb
dec
test
xor
and
popf
add
cmp
ret
cwtl
pushf
addr16
roll
pop
into
rclb
sbb
sahf
cli
ljmp
push
push
movsl
dec
cmp
leave
push
cmp
add
daa
jns
loope
push
imul
cmpsl
inc
fisttpl
push
add
dec
mov
cwtl
rcrl
lahf
cs
lret
xchg
addl
movsl
sbb
cmc
lea
gs
inc
lods
xchg
or
dec
in
push
orb
dec
xlat
inc
daa
shrb
dec
mov
and
or
test
jbe
dec
gs
scas
add
xchg
pushf
call
push
xor
test
xchg
xchg
mov
das
popa
add
pop
xchg
out
or
inc
loope
sub
cmp
sbbb
lahf
add
cmp
sub
and
addr16
cli
fnstenv
mov
ds
lahf
mov
std
sbb
inc
xor
cmp
gs
repnz
arpl
rcr
insl
lock
pop
and
pop
out
mov
das
push
into
jge
das
jmp
mov
mov
add
add
push
pop
xchg
or
sub
jl
out
dec
jae
mov
pusha
inc
out
repnz
mov
mov
pop
mov
fpatan
loopne
cmp
sub
ja
cmp
shlb
mov
xchg
add
bound
mull
push
sbb
mov
sbb
inc
test
jle
xor
mov
or
cmp
push
fidivrs
mov
sbb
or
adcl
cwtl
imul
call
add
push
sub
in
subb
and
jbe
out
cmp
xchg
xchg
mov
stos
into
loopne
adc
push
dec
popf
xchg
repz
lret
cmpsl
lahf
push
ja
enter
ret
popa
aaa
jecxz
addr16
aad
lock
cmp
or
push
or
add
insb
or
lcall
add
push
jno
jge
mov
aaa
mov
mov
xor
xor
or
dec
out
cmc
les
cli
inc
push
xor
or
push
sbb
stos
xchg
movsb
stos
cmpsl
cmp
or
call
pop
movsl
pop
mov
lret
xchg
mov
std
and
xchg
pop
sub
out
inc
adc
subl
scas
outsl
ret
jns
cmp
sub
inc
test
lret
pop
std
ds
in
leave
sub
cmp
mov
sbb
xor
call
setno
nop
xchg
push
sbb
loopne
mov
sbb
or
add
push
sbb
xchg
repnz
push
pop
or
mov
jns
inc
jnp
mov
sub
xchg
push
sbb
sub
mov
stc
cmp
jne
adc
data16
pop
fidivrl
in
addl
repnz
adc
dec
mov
out
and
test
push
mov
in
and
jle
adcb
clc
adc
stos
adc
insb
dec
mov
bnd
divl
jb
cwtl
or
call
jnp
in
arpl
stos
jg
dec
adc
sbb
and
jae
add
mov
lea
push
gs
aad
inc
or
out
xchg
cmp
sbb
inc
cltd
adc
movsb
or
mov
mul
std
mov
out
lahf
and
adc
aad
mov
xchg
shll
jge
repz
fcmovnb
sub
cmpsl
or
add
pop
je
cli
pop
call
jle
mov
sbb
cltd
add
popa
sub
mov
adc
sub
icebp
cmp
jbe
ja
sahf
icebp
xor
lahf
imul
xchg
testb
test
aaa
mov
cmc
xchg
aam
dec
cmp
push
inc
or
push
pop
std
dec
js
iret
lods
mov
and
out
inc
jg
xlat
lea
out
pop
dec
imul
int
imul
adc
popf
test
and
rclb
pop
lahf
pusha
jl
popa
add
mov
lock
jno
sbb
push
lret
sbb
into
cld
mov
mulb
movsl
insl
pop
fbstp
test
aas
inc
in
out
pusha
sbb
es
loopne
fs
pop
pushf
mov
imul
dec
mov
xor
mov
int3
xchg
into
xor
add
das
jb
int
scas
lret
and
sub
sub
or
cld
mov
push
test
stos
repz
lret
mov
jle
jb
rolb
push
mov
into
testl
das
jbe
stos
sbb
rcrb
int
inc
loope
jb
out
mov
sti
stc
jp
loope
stos
sub
and
iret
sub
icebp
dec
xchg
shlb
insb
add
mov
rolb
mov
lcall
xor
mov
or
xchg
jg
addr16
add
dec
push
inc
dec
les
mov
mov
popa
lds
cli
dec
iret
hlt
sub
jnp
mov
xor
or
testb
sahf
iret
mov
sub
repnz
and
test
and
fildl
push
xor
push
aad
enter
xchg
push
int3
xchg
mov
adc
lock
cli
mov
inc
adcl
cmc
lock
push
aaa
aam
cmove
cmc
mov
or
cwtl
mov
es
lahf
incb
add
jne
mov
xchg
addr16
lds
nop
mov
out
out
mov
dec
adc
jbe
jl
sub
icebp
into
or
inc
stos
inc
jb
mov
sbb
mov
mov
pop
dec
xchg
ja
cmp
rolb
jne
inc
xor
add
adcl
lahf
rolb
cmc
add
mull
xchg
fwait
push
fsubs
iret
imulb
scas
mov
sbb
scas
outsb
add
rol
add
pop
mov
rorb
mov
pop
nop
fisubrs
les
fidivs
daa
daa
xor
outsb
sbb
aad
pop
into
sahf
fucom
xchg
xchg
mov
stos
jb
lods
cmp
leave
or
inc
jg
and
pop
mov
pop
jno
push
fdivrl
gs
xor
jo
movsl
mov
andl
mov
xor
mov
sub
xor
lea
dec
push
lret
xor
test
cmc
mov
add
fistl
mov
pop
mov
iret
push
cmpl
push
jmp
popa
pushf
mov
add
add
jne
mov
inc
sbb
jb
add
push
inc
inc
inc
orb
mov
scas
or
dec
inc
outsl
pop
mov
scas
je
hlt
sub
adc
mov
into
xchg
pop
dec
ljmp
decl
xchg
jns
data16
jno
mov
les
add
dec
xchg
add
pop
fldenv
sbb
sbb
lcall
push
stc
js
inc
add
cli
push
push
adc
out
xchg
aas
cmp
decb
out
stos
stos
xchg
shlb
sub
inc
and
imul
adc
mov
mov
adc
sbb
mov
adc
sub
sbb
mov
xchg
inc
testl
ljmp
or
lret
arpl
scas
push
add
adc
js
xchg
repnz
xor
fcmovnu
jle
xchg
jg
cltd
cli
shrl
cmp
popa
jge
mov
dec
mov
lea
or
mov
sbb
cmpb
dec
popf
push
sahf
movsb
adcl
and
pop
test
cmp
push
mov
pusha
insb
push
pop
ss
jecxz
ret
je
pop
aas
aaa
add
fldcw
jl
stos
or
add
fistps
iret
inc
lock
xor
fimuls
xchg
jmp
mov
bound
push
aas
test
pop
push
sub
cmp
lods
repz
push
and
dec
mov
jecxz
jnp
xor
cmp
in
inc
bound
xchg
mov
push
lds
mov
shlb
or
shlb
sbb
mov
sarl
in
daa
les
daa
je
jno
out
mov
mov
mov
stos
push
push
fnsave
pop
cwtl
mov
push
adc
nop
dec
jg
dec
aaa
std
iret
ret
movzwl
pop
jmp
dec
loopne
pop
add
std
repnz
movsb
cmc
outsl
adc
mov
mov
leave
and
xor
pop
jae
xlat
call
xor
aas
mov
push
test
ret
imul
idiv
inc
psrld
add
jo
mov
jmp
movsl
xchg
and
mov
cmp
inc
lds
mov
push
nop
lret
mov
fistl
inc
jg
cmp
out
out
inc
add
xor
pop
outsb
sub
dec
enter
mov
xchg
sub
movsl
cmp
pop
mov
daa
lret
mov
xor
push
adc
sbb
lods
gs
adc
repnz
scas
loopne
rclb
cmp
mov
popa
dec
pop
lret
cmp
xor
dec
sbb
test
sahf
jle
adc
int
in
leave
xor
xchg
lcall
adc
call
enter
test
pushf
fstl
xor
daa
jbe
aad
pushl
mov
add
fisubl
stos
xchg
sbb
pop
test
jae
inc
pop
pop
imul
add
sbb
enter
push
dec
mov
or
lods
ja
ljmp
push
mov
mov
jns
jae
es
pushf
inc
in
sbb
or
sbb
push
movq
ror
decb
je
push
mov
aad
sub
inc
ja
add
fistl
js
mulb
inc
jnp
pop
pushl
lock
or
sbb
push
cmpb
xor
mov
js
mov
mov
int
mov
insl
imul
push
add
arpl
push
pop
sub
jns
std
sahf
stos
sbb
into
insl
ljmp
sub
outsl
aas
pop
popf
loopne
mov
pushf
add
mov
adc
and
test
or
addr16
inc
cmp
call
movsl
out
sub
lds
shlb
add
and
loope
in
push
mov
jge
pop
arpl
jne
int3
mov
or
pusha
jecxz
roll
xor
enter
scas
sbb
adc
test
das
xor
pop
and
je
jmp
jmp
xchg
sub
mov
add
fmuls
cs
push
mov
ss
lock
mull
pop
dec
mov
fmull
pushf
pushf
and
loope
int
push
les
pop
cmp
cmpsl
jl
fisubl
or
jbe
movsb
xor
stos
mov
leave
mov
insl
test
fisubrl
stos
aam
sahf
ret
ds
ret
push
sub
cmp
pop
or
pop
call
inc
jl
icebp
mov
inc
cmc
push
cltd
movsb
xor
in
jb
fisttpll
push
idiv
das
pop
imul
int
popf
sub
cmp
sarb
lahf
adc
push
int3
shll
jbe
pushf
jae
push
rol
mov
data16
clc
mov
push
jne
stos
mov
cmpb
dec
xchg
xor
ror
iret
mov
push
pop
adc
mov
leave
imul
addb
jg
fwait
mov
adc
inc
xchg
rcrb
lea
or
dec
cmp
cmp
xor
add
rcrl
jp
sbb
cmp
test
pop
mov
in
popa
adcb
stos
mov
xchg
sahf
bound
add
lret
lret
inc
scas
fst
icebp
or
mov
mov
lcall
cmp
lods
pusha
sbb
jno
pop
mov
mov
aad
cmpsl
mov
mov
or
loop
dec
pop
mull
sbb
dec
loop
popf
mov
scas
jnp
cld
mov
or
leave
add
xor
push
adc
push
xchg
xor
push
mov
aam
or
mov
es
dec
xor
xchg
push
xchg
enter
mov
fwait
fwait
mov
add
pop
inc
adc
movsb
test
ljmp
arpl
push
dec
jnp
pop
dec
shll
cmpsb
imul
sbb
test
out
enter
imull
pop
inc
adc
lret
in
dec
call
pop
testb
jl
ror
cltd
js
cmpsb
mov
push
shlb
inc
xchg
inc
add
dec
mov
xor
fs
inc
inc
xor
out
jne
pop
sub
enter
pushf
push
cmp
xlat
je
into
repz
aad
inc
enter
xor
mov
xchg
pop
in
push
pop
inc
mov
push
sub
or
inc
pop
int3
mov
mov
loope
jl
push
push
aam
movntq
out
lock
adc
pop
mov
loop
in
mov
repz
lret
fisttpll
jb
loope
sbb
cmp
lock
jnp
stc
out
adcb
test
push
in
mov
sub
shlb
sub
mov
imul
sub
pushf
pop
mov
or
stos
out
mov
pop
cs
sub
xchg
pusha
fstl
mov
loop
cmp
push
iret
cmpl
mov
popa
adc
sti
push
sub
orb
mov
popa
out
jecxz
cmp
loopne
or
outsl
repz
dec
daa
push
insl
and
sbb
mov
loop
dec
push
int
mov
sti
pop
add
or
js
bound
pop
lods
or
js
andb
mov
jp
outsb
out
mov
push
ret
xor
and
inc
push
and
mov
cmpsb
or
jle
pop
aaa
insl
dec
mov
mov
subb
test
clc
stos
mov
cli
ret
popf
test
xchg
xor
ljmp
in
lcall
aas
mov
js
mov
mov
fs
inc
push
xor
outsl
sbb
lret
xor
dec
gs
mov
out
loop
jl
pop
adc
aaa
orb
add
xor
xor
inc
pusha
popf
pop
mov
dec
mov
adc
testb
mov
xor
outsl
clc
dec
in
daa
mov
cmc
outsl
in
insb
mov
inc
pop
push
lahf
fwait
inc
mov
shr
cltd
mov
movsl
divl
mov
sahf
ljmp
lods
mov
sub
into
inc
push
ds
cli
mov
sbb
pop
mov
mov
fwait
daa
loop
xlat
repnz
mov
test
fisttpl
inc
mov
mov
bound
pop
leave
ds
pop
pop
xchg
fidivrs
insb
loopne
repz
mov
sub
xor
or
jbe
mov
aad
aam
push
in
push
add
inc
pusha
mov
sub
or
test
in
xchg
dec
packsswb
mov
jle
stos
cmpsb
sbb
add
xchg
sbb
cwtl
mov
add
mov
scas
cmc
mov
lret
mov
dec
push
sub
fwait
rol
mov
repz
ja
dec
int
xchg
fisubs
mov
dec
pop
inc
sub
movsb
daa
cmpsb
icebp
xlat
flds
stos
mov
add
int
sbb
push
or
mov
pop
jmp
stos
insl
or
mov
xchg
jns
jecxz
popa
mov
loopne
jb
mov
popa
jbe
lock
mov
shlb
mov
insl
mov
push
lds
push
cmp
out
movb
inc
pop
loop
push
mov
add
in
data16
cmpb
sbb
push
jecxz
outsb
pop
stc
icebp
iret
fsubp
cmpsl
insl
in
pop
cmp
mov
into
xchg
push
rcrb
es
pop
jmp
sub
int3
ss
xchg
cltd
shll
push
ficompl
fstpt
jg
hlt
shll
test
divl
adc
and
sti
sbb
dec
mov
call
gs
or
cmp
movl
or
andb
popf
mov
lret
ss
shrl
scas
cmpsl
lock
mov
fcoml
cmp
outsl
movsl
sbb
call
xchg
cltd
nop
mov
mov
loope
push
je
mov
jnp
push
jg
bound
fwait
sbb
push
nop
ret
in
addr16
and
mov
movsl
pop
sub
sti
pushf
mov
adc
int
add
mov
pop
mov
iret
sub
shrb
jo
aad
arpl
imul
inc
ja
scas
mov
xchg
das
jbe
mov
loopne
mov
test
pusha
push
adc
in
mov
pusha
jno
sub
pop
shl
cmpb
inc
adc
add
xor
addb
add
pusha
and
pop
mov
push
xchg
pop
mov
push
imul
adc
decl
outsl
sbb
push
dec
mov
pop
in
fwait
sar
pop
loope
push
inc
in
adc
mov
or
mov
mov
je
into
inc
leave
gs
xchg
sub
jo
pop
jbe
add
mov
fwait
xor
dec
pop
inc
addr16
das
push
lret
pop
push
outsl
test
pop
call
inc
movsb
in
inc
mov
jecxz
dec
push
pushf
inc
in
adc
arpl
mov
dec
cmp
out
fstpl
arpl
mov
jb
push
mov
ja
lds
inc
lods
xlat
outsl
pop
inc
jg
imul
pop
jmp
bound
mov
mov
aas
inc
loopne
fadd
jbe
sbb
scas
dec
clc
xchg
lret
mov
add
and
decl
pushf
sub
jns
pop
out
je
pop
lret
pushf
pusha
jmp
xor
mov
cld
aam
or
stos
fxam
cmpsb
int
pushf
leave
jnp
out
lret
mov
sbbl
xchg
shlb
pop
pop
ret
or
add
cmpsb
mov
pop
mov
in
add
mov
cli
cmp
je
dec
pop
jge
mov
enter
jo
iret
sbb
pusha
iret
cmovb
add
jns
xchg
sbb
jnp
jp
pop
ljmp
sub
into
inc
or
push
pop
jo
pushf
lret
fs
xlat
out
test
xchg
pop
cmp
ljmp
pop
inc
dec
xlat
fs
cmpsl
push
or
cltd
mov
dec
mov
sbb
add
mov
in
fadds
stos
pop
pop
mov
iret
dec
mov
rcrb
add
xlat
stc
andb
flds
push
gs
pop
push
sbb
out
cmp
mov
or
stos
dec
xchg
adc
push
adc
jae
jmp
sbb
cmc
and
ss
push
pop
pop
imul
or
sub
mov
popa
out
inc
hlt
bound
lea
or
loop
das
or
push
jne
inc
repz
ror
outsb
nop
or
pop
test
add
arpl
shll
popa
les
and
stc
or
data16
scas
push
mov
fstpt
in
aam
dec
or
xchg
xlat
stos
sahf
mov
outsb
test
adc
xchg
pop
dec
xchg
inc
xor
mov
mov
xlat
fs
pop
mov
mov
dec
jb
out
repz
mov
popa
inc
jb
add
mov
and
cmc
rcrl
xor
popl
scas
dec
cmpsb
adc
mov
jg
lret
jne
lret
push
xor
ja
popf
pop
repz
andb
pop
cmp
jae
mov
mov
je
cltd
enter
enter
dec
cmp
lcall
mov
mov
inc
or
sbb
cmpsb
mov
adc
data16
lods
mov
and
mov
pop
or
dec
xor
loope
movsl
pop
inc
or
xchg
dec
mov
repnz
xchg
stc
add
pop
xchg
repz
pop
ljmp
mov
cmp
mov
mov
mov
mov
jae
xchg
negl
ja
mov
iret
xor
pop
out
pop
loope
ja
rol
mov
push
stos
adc
inc
xchg
loop
and
mov
xor
cmc
roll
ficompl
scas
cmc
iret
pop
sub
ret
or
xchg
inc
jne
ret
xchg
sahf
pop
das
in
push
test
xchg
faddl
jmp
dec
inc
insl
or
mov
fndisi(8087
int
fwait
dec
cmp
lahf
mov
mov
arpl
insl
lods
notl
pop
sub
xchg
sub
fdiv
jnp
xchg
pop
mov
in
ja
cs
xor
call
ljmp
pop
xchg
lahf
push
push
imulb
pop
adc
jmp
popa
movsb
sub
jae
rcrl
push
mov
mov
xchg
mov
pop
sub
cmp
jg
mov
mov
in
imul
bound
or
push
sub
cli
arpl
lea
pop
rcrb
pop
out
dec
xlat
fs
pop
cmc
std
mov
dec
scas
cmpsl
stos
or
cli
pop
cs
lea
xchg
mov
sub
mov
cwtl
testl
pop
daa
call
sbb
sbb
scas
lahf
insl
or
or
clc
popa
popl
push
sub
popa
cmp
lods
inc
cmpsb
xchg
pop
xor
cmp
notl
fistps
fsubp
out
mov
icebp
fs
sub
mov
leave
mov
shlb
mov
sete
push
dec
mov
push
lcall
adc
push
push
jp
fsubr
or
mov
and
xlat
mov
pop
dec
pop
rclb
inc
xor
je
scas
mov
adc
sbb
repz
mov
xchg
das
arpl
pop
fimull
jo
cmc
out
in
cli
inc
push
xor
in
ja
cltd
cmpsb
pop
mov
dec
dec
cli
out
push
push
out
enter
lds
dec
rcrb
dec
pop
pop
jns
xchg
mov
and
popa
mov
add
pop
push
xor
cmc
dec
cmp
pop
mov
jno
and
gs
inc
insb
jbe
and
mov
mov
mov
adcb
inc
xor
pop
ja
push
ss
sbb
dec
pop
movsb
pop
cmpb
lods
cwtl
icebp
cwtl
mov
xchg
lock
insl
dec
pop
add
jnp
or
mov
add
pusha
push
int3
adc
rcl
lock
and
mov
adc
mov
fnstsw
mov
xlat
and
mov
inc
sub
mov
cmp
push
mov
inc
icebp
out
sub
dec
dec
int
and
cld
in
fsubl
dec
mov
test
int
xchg
cmp
sub
iret
add
mov
mov
movsl
pusha
jl
popa
int
enter
push
cmp
bound
jge
push
repnz
ljmp
mov
in
mov
push
sar
int
dec
mov
xor
mov
movsl
cld
es
adc
dec
stos
in
js
mov
icebp
mov
xor
xchg
dec
add
loop
xchg
pop
adc
jae
fs
mov
push
jbe
ds
mov
xor
dec
push
cmc
inc
loopne
fisubs
xor
les
add
lret
fmuls
test
dec
xlat
aam
xor
xchg
xor
pop
jmp
jnp
lods
pop
and
sti
cmpsl
jg
push
repz
push
loopne
jbe
lret
sub
sbb
mov
xchg
xchg
pop
mov
lahf
jmp
loop
inc
cmp
mov
jbe
push
sahf
test
adc
daa
mov
test
sbb
int
adc
jb
hlt
mov
xchg
dec
cmc
movsb
mov
or
lcall
dec
sbb
imulb
ret
xchg
mov
mov
lret
fidivs
mov
lods
in
insb
cmp
cmp
xabort
stos
and
rcl
test
jae
aam
sub
push
js
and
and
jnp
inc
xlat
mov
push
cmp
mov
jbe
xchg
inc
sub
mov
adc
lock
pop
loop
mov
dec
cmp
call
icebp
es
pop
inc
and
add
push
push
out
lds
lods
or
mov
adc
inc
pop
ficompl
mov
movntps
sahf
clc
rcll
imul
das
dec
sub
fs
fs
jno
adc
pop
and
iret
add
push
repnz
pop
js
neg
sbb
mov
aam
fiaddl
stos
jb
test
cmp
sbb
pushf
adc
test
test
xchg
mov
inc
dec
fpatan
dec
sbb
jge
aaa
sbb
pop
xchg
xchg
fisubrs
je
outsl
xor
test
adc
xor
push
cmpsb
sub
das
sbb
push
repnz
insl
push
jbe
push
and
insb
shl
or
jns
jle
jb
ret
or
lahf
lock
sub
repz
lods
push
ret
bswap
mov
fnsave
imul
clc
popf
add
pop
stos
cmc
incb
adc
adcl
pop
lods
mov
in
cli
add
fmul
shrl
loope
scas
mov
dec
push
mov
cmp
pop
aas
pop
adc
and
jae
mov
pop
jo
nop
aas
lahf
lea
out
loopne
pop
icebp
jb
cmp
lds
sbb
iret
out
dec
xlat
xor
pusha
sbb
fadd
dec
bound
pop
test
xor
jp
mov
and
les
fs
xor
popa
add
or
aad
sahf
ja
add
fdivl
fcom
aad
les
xchg
fstl
sub
xor
pop
enter
imulb
or
push
mov
lods
lcall
stc
aas
dec
adc
popf
mov
imul
stc
adc
xchg
frndint
xchg
cmp
imull
sub
fdivrl
dec
pop
lods
cmc
mov
pop
dec
gs
jbe
jo
jb
mov
dec
js
fiadds
push
inc
lea
arpl
inc
adc
jmp
in
negl
add
jnp
sarb
rcr
inc
out
cmp
inc
cmpl
stc
adcl
stos
push
ficomps
inc
xor
dec
add
pop
in
popa
pop
jecxz
dec
push
adc
cmp
cmp
stos
shl
fcmovne
and
cmc
rorl
sahf
inc
xor
ret
movsb
mov
sbb
add
int3
sahf
fstl
test
mov
scas
stc
and
aad
mov
cmp
cmpsb
leave
sti
and
mov
inc
pop
or
push
aas
pop
imul
mov
xchg
cmp
mov
add
lcall
cmpl
pop
aaa
sub
ret
pop
jmp
ror
iret
fistpll
imul
or
cmp
popa
ds
inc
or
loope
add
fisttpl
rorb
mov
lcall
pop
mov
xor
inc
lahf
js
sub
mov
inc
out
sbb
xor
pop
int
add
les
es
sbb
test
hlt
dec
pop
data16
xchg
mov
jne
xor
dec
stc
xchg
les
push
push
rcrl
cmpsb
inc
mov
lock
aam
fcompl
jle
cmp
pop
adc
out
shrl
and
pop
inc
push
repnz
andl
lcall
loopne
je
repnz
push
adcb
lea
pop
jmp
les
sub
hlt
jbe
or
mov
imul
inc
jl
mov
add
sbb
mov
out
or
cwtl
enter
aam
dec
fnsetpm(287
mov
outsb
std
mov
dec
adc
mov
jp
adc
pop
std
push
enter
test
dec
xchg
jbe
and
iret
jae
pop
inc
fs
adc
jecxz
jbe
stc
in
iret
inc
sbb
jmp
sub
imul
es
add
jb
xor
jb
and
fs
xor
inc
xchg
jge
sbb
es
mov
lea
pop
push
jae
inc
or
not
jo
jno
aaa
xchg
popa
insb
outsl
clc
xor
es
sbb
dec
stos
pop
adc
or
xchg
orb
out
adc
add
sahf
in
rolb
lea
pushf
int3
int
lds
xchg
inc
daa
sbb
leave
out
ds
sub
xor
imul
xchg
mov
xor
jns
bound
xchg
repnz
fwait
xor
jle
jnp
sbb
pop
enter
mov
inc
aas
push
add
ds
inc
adc
xor
lcall
leave
mov
dec
or
mov
gs
leave
aas
mov
add
xlat
out
mov
dec
call
movb
pop
mov
es
jns
testl
sbb
out
push
xchg
sbb
or
mov
hlt
sub
xor
push
mov
decl
mov
cwtl
mov
mov
and
sbb
pop
mov
dec
push
dec
cmp
mov
sbb
sbb
movb
lret
insb
mov
or
andl
fdiv
jnp
into
sti
dec
gs
sbb
ja
ljmpw
push
jecxz
jg
imul
fidivrs
cmp
pop
xchg
xchg
push
push
dec
cmp
lret
out
cld
decl
and
fiadds
mov
aam
xor
push
cld
inc
je
lret
and
and
std
in
or
sarl
cmp
push
jns
out
outsb
fcomip
jne
xor
jb
in
pop
dec
cmp
aam
or
lds
icebp
dec
stos
repz
outsb
rclb
mov
idiv
les
addr16
das
ss
test
jne
mov
sbb
dec
jb
icebp
sub
aad
outsl
mov
gs
sbb
mov
push
icebp
mov
jg
fldt
mov
fldenv
or
xorb
lret
push
lods
movsb
sbb
imul
pop
test
lock
dec
popl
mov
add
cld
loope
pusha
dec
adc
mov
mov
movsl
or
cli
pop
sti
and
js
add
adc
adc
das
xor
jmp
sub
mov
jmp
cmp
jg
arpl
dec
aaa
xor
jo
sub
rcl
push
out
xor
push
pushf
mov
aam
push
push
pop
cmp
mov
pop
xor
cmp
push
jg
xor
jns
push
je
xchg
enter
jg
fcomps
out
or
fildl
mov
adc
jbe
ret
lods
mov
clc
mov
clc
xor
push
incl
pusha
into
xchg
fsts
xor
lods
enter
idivb
push
push
popa
imul
lahf
dec
add
mov
fiadds
cltd
and
or
and
inc
and
rolb
add
std
pushf
push
sbb
jg
sbb
arpl
push
add
xchg
mov
xchg
xor
lea
cli
cmp
sbb
movsl
xchg
cld
fdivs
cmp
test
pop
es
push
and
cltd
pop
push
fmull
aas
ljmp
lods
icebp
pushf
pop
loope
xchg
std
jnp
pop
ja
aam
push
cmp
lds
lods
adc
popa
inc
cld
lea
fimuls
dec
leave
test
notl
push
mov
mov
sub
aaa
xchg
pop
fists
cs
or
insl
gs
ret
and
popa
mov
sub
mov
jmp
shll
mov
mov
xlat
out
outsl
sbb
cmc
jns
iret
cmp
adc
sub
gs
mov
dec
mov
mov
adc
xlat
dec
fs
or
negl
mov
je
jnp
mov
and
in
ret
cmpl
dec
sub
in
add
popf
inc
cmp
mov
aaa
mov
mov
out
sub
adc
fsubrs
lds
pop
and
push
mov
cwtl
fs
add
jbe
push
xchg
rolb
lcall
add
sbb
shlb
xchg
imull
stos
jge
daa
movsb
dec
mov
jno
cltd
hlt
lods
nop
mov
test
outsb
pusha
or
xor
jge
jbe
sbb
rcr
insl
test
fistpl
xor
jp
adc
pop
sub
and
cmp
out
negl
add
pop
pushf
imul
fcmovnb
jnp
lcall
inc
jns
shl
pop
sub
add
mov
sub
mov
or
mov
mov
imul
xchg
mov
sub
mov
stos
push
fsubrl
jae
js
leave
push
push
or
daa
ss
dec
fnsetpm(287
mov
mov
out
ret
data16
pop
or
mov
adc
push
ss
cwtl
push
pop
push
lret
or
mov
ljmp
cltd
cmp
mov
ljmp
aaa
xor
fucomi
movb
pop
sahf
mov
nop
pusha
sub
mov
adc
aam
imul
push
scas
cli
bound
mov
push
and
adc
push
pop
add
stos
inc
pop
adc
dec
cmpsb
cmc
dec
add
loopne
data16
imul
out
dec
popa
inc
fs
addb
stos
icebp
gs
imul
cmc
in
xor
aaa
jecxz
fisttpl
decl
leave
repnz
nop
pop
xchg
mov
dec
or
mov
mov
push
or
testb
stos
cltd
hlt
mov
jge
dec
jne
dec
lock
dec
leave
or
mov
pop
rorl
mov
data16
xchg
popf
mov
pop
dec
push
pop
cmp
dec
sti
pop
push
push
xchg
pushf
movsb
and
in
test
sbb
pop
js
gs
adc
insb
jbe
aam
sahf
dec
xor
xchg
popa
fadds
xchg
hlt
fildl
inc
test
inc
jecxz
pop
xchg
cmp
xor
fcmovne
and
jmp
pushl
jo
mov
add
sahf
ret
out
hlt
clc
pop
jae
sub
jne
fwait
dec
fsubp
or
inc
and
stos
adc
xlat
cli
arpl
orb
stc
lods
popa
dec
mov
movsl
rclb
lahf
das
adc
push
out
push
add
pop
divl
xor
fwait
inc
xchg
mov
and
adc
stos
repnz
mov
stos
inc
fsubl
adc
es
cmp
lret
das
icebp
jg
and
cmpl
in
pop
movsb
sahf
pushf
test
pop
xchg
scas
lret
ret
mov
fs
outsl
into
mov
inc
jmp
pop
fcomps
or
shlb
or
mov
push
jecxz
xor
incb
gs
adc
sub
movsb
stc
inc
bound
stos
mov
inc
sbb
jb
mov
loopne
jle
scas
jg
sub
or
hlt
jo
mov
cmpsl
xlat
and
addr16
add
movsb
and
lret
pop
cmp
dec
and
cmpsb
push
cmp
and
test
cmp
mov
push
cli
and
call
xchg
fcmovb
ret
mov
sub
cmpsl
cmp
cli
and
adc
mov
ja
aad
xchg
lock
push
xchg
lea
xchg
test
and
mov
iret
repnz
rorb
ficomps
jp
adc
es
movsb
cmpl
xor
out
clc
fildll
fstpl
stc
mov
stos
loop
out
or
pop
cmp
pop
dec
xor
push
test
cmp
push
ja
xor
push
cwtl
into
or
lods
cmp
sbb
or
roll
or
dec
push
pop
in
mov
mov
mov
aaa
sbb
or
mov
fdivrl
sbbl
sti
leave
add
pusha
fcomps
inc
mov
icebp
rorl
jle
leave
pop
into
notb
lods
sbb
js
jo
popf
dec
add
adc
jo
es
mov
les
ret
int3
outsl
fnsave
mov
daa
mov
cmp
and
rsqrtps
les
dec
popf
dec
xchg
lods
repz
jmp
cmpsb
mov
pop
jg
addb
into
push
sbb
cmp
hlt
movsl
rorb
push
shr
pop
test
fnsave
adc
push
sbb
push
ss
idivl
dec
pop
xchg
jle
leave
movb
adc
and
xchg
shlb
or
push
inc
in
push
pop
mov
lock
mov
push
aas
rolb
inc
mov
xchg
and
or
sbb
push
ficoml
dec
push
pop
lock
lods
mov
xor
sbb
lds
cmp
icebp
sarl
leavew
in
cmp
dec
dec
add
insb
pop
dec
mov
sahf
imul
cmp
add
xor
push
cmp
sahf
push
jns
mov
pusha
and
cli
leave
fwait
xchg
jne
push
lods
add
mov
add
popf
mov
push
adc
adc
xchg
push
inc
and
mov
pop
aad
fidivs
loopne
jp
test
sub
mov
cmp
pop
jg
inc
int3
movsb
mov
cmpsl
out
sbb
jno
xchg
push
pop
dec
xchg
pop
adcb
push
xchg
dec
test
mov
inc
in
sub
xor
jl
stos
cmp
iret
into
xchg
fistps
adc
mov
lds
dec
cld
cmc
cmp
sub
inc
shll
idivb
add
data16
pop
push
jecxz
jb
clc
xor
loopne
movsb
xor
sbb
inc
inc
popa
sbb
fwait
xor
pushl
add
inc
int3
int
cmp
shlb
mov
out
and
pop
jbe
or
adc
xorl
test
je
dec
and
push
jmp
lret
sub
and
mov
lds
add
pushf
cltd
pop
ss
mov
xor
push
test
dec
xchg
sub
or
sub
or
inc
dec
imul
repnz
loope
push
mov
push
or
test
test
scas
mov
sub
jmp
cmp
dec
test
jle
sbb
dec
xchg
dec
push
in
divl
loop
sub
fistl
jecxz
add
leave
dec
inc
or
push
clc
dec
jb
mov
pushf
xchg
mov
mov
adc
jno
mov
sti
daa
pop
push
sbb
pop
test
adc
js
ret
push
xchg
dec
add
and
inc
cmp
sbb
xchg
stos
sub
xorb
movsl
xchg
and
mov
cmp
data16
das
jg
xorl
and
aad
dec
fs
test
std
mov
add
xor
repz
stos
jp
out
add
movsl
inc
xor
pop
test
lret
xchg
int
cmp
lods
out
loope
mov
lods
xor
dec
pop
cli
cmp
push
bound
sub
fs
adc
dec
pop
dec
out
cmp
call
aaa
adc
ja
pop
mov
adc
ss
add
sub
mov
dec
xchg
sbb
popa
inc
imul
shlb
or
enter
in
insb
ljmp
cwtl
pop
adc
lcall
lds
sub
xor
pop
push
mov
xor
mov
jne
add
ds
std
mov
xor
xor
add
mov
lret
push
fwait
xlat
jmp
push
lods
mov
pop
dec
mov
out
jbe
mov
xlat
sbb
or
out
movsl
in
xor
popl
xchg
ficoms
cmp
into
fcoml
nop
and
fsubl
cmp
fisttpll
int3
out
pop
rclb
inc
xchg
stc
jnp
outsl
loope
adc
xchg
shlb
cmp
jnp
or
pushf
test
loop
xor
xor
jb
lods
cmp
pop
ja
out
xchg
pop
mov
mov
ficoms
push
lret
and
sbb
push
push
xchg
fsubrl
fwait
dec
xchg
push
imul
in
cmpsb
cld
xlat
stos
mov
sub
xchg
loop
rolb
hlt
fdivrl
sbb
imul
in
push
sbb
out
out
mov
ds
sbb
sub
mov
sbb
int
cmc
xor
testl
cli
punpckhdq
rorl
inc
and
pop
mov
movsb
inc
dec
xor
push
pop
or
sub
mov
dec
jae
xchg
daa
xchg
movl
lods
and
push
jo
out
and
mov
mov
outsb
push
cmp
mov
rclb
outsb
xor
and
pop
fisubs
inc
add
std
or
cmp
sbb
scas
pushf
out
int3
mov
add
mov
xor
jecxz
pop
out
sti
shlb
stos
imul
dec
mov
je
add
aam
insb
adc
xchg
push
les
dec
mov
pop
cmpsb
sub
xor
cmp
js
ret
push
xchg
dec
outsb
arpl
pop
mov
adc
call
mov
fstl
push
xor
pop
addr16
pop
fwait
loop
lock
lods
push
push
dec
xchg
dec
push
jb
call
out
sbb
add
mov
sub
sti
jp
push
pop
scas
data16
jbe
call
inc
fmuls
andb
and
sub
daa
sahf
dec
xchg
repnz
stos
xchg
pushf
popa
movsl
loop
jbe
inc
inc
mov
pushf
in
sub
inc
aad
lock
into
sub
sarl
stc
int3
or
pop
iret
dec
pop
ret
mov
dec
stos
mull
or
mov
xchg
pop
dec
or
cmp
xor
sub
daa
je
push
test
pusha
and
mov
xor
mov
pop
cmpsb
addr16
jge
xchg
mov
js
xchg
fimull
jle
cmc
sub
pushf
jl
into
inc
push
outsl
mov
out
psubd
arpl
mov
sbb
lret
repnz
sub
inc
push
mov
add
je
shlb
enter
mov
push
fsub
adc
sbb
pop
inc
inc
data16
xchg
sbb
jo
xchg
push
repz
cmp
mov
and
cmp
push
mov
mov
mov
mov
xor
dec
dec
rolb
xlat
orl
pusha
xchg
lahf
pop
dec
xlat
dec
xor
test
movsl
dec
loope
and
stos
cli
rol
and
adc
dec
dec
xchg
jg
xchg
sbb
jae
stos
insb
rclb
inc
notl
xchg
sahf
push
in
scas
jne
cmp
aad
xor
add
pop
ljmp
icebp
int3
jecxz
leavew
les
mulb
imul
add
cld
std
inc
pop
int3
repnz
pop
mov
mov
in
frndint
pop
mov
xor
fcoms
mov
test
xchg
sbb
cli
and
jp
fwait
test
adcl
add
inc
popa
adc
mov
mov
jp
sbb
mov
sub
popa
dec
nop
xlat
pop
lea
arpl
int3
out
xor
sbb
lock
lahf
data16
sbb
jmp
dec
hlt
mov
movsb
xchg
imul
dec
mov
and
jns
push
push
xchg
jns
sub
pusha
mov
xchg
hlt
lods
aas
mov
dec
cmp
jae
addl
xchg
sub
mull
or
add
fcoms
out
negl
hlt
and
movsb
cmc
aad
cmp
aad
aaa
cli
adc
push
push
jmp
cmp
lcall
and
rclb
out
lahf
mov
fbld
cli
int
dec
push
ja
mov
mov
pop
aaa
adc
sub
xchg
test
pop
adc
mov
retw
jne
mov
pop
push
pushf
lret
das
and
or
adc
sarb
jno
lahf
push
push
repz
pop
xchg
jle
rorl
call
cmpsl
loop
gs
jb
adc
cli
cli
lods
in
jmp
jb
sub
js
lds
cwtl
loopne
rcrb
inc
clc
dec
sbb
mov
loope
fndisi(8087
popa
jge
add
data16
sarl
xchg
jl
push
out
ss
mov
xor
lret
sub
fcmovne
and
xchg
call
stos
clc
xor
idivb
cmpsb
mov
call
add
cwtl
cmpsb
xor
or
mov
mov
add
orb
xchg
xchg
xor
cli
pushf
dec
jge
loope
out
jae
jnp
jne
je
out
cmpb
test
sbb
adc
pop
xchg
in
movsb
ja
cwtl
pop
fldenv
xlat
add
mov
mov
and
in
or
add
das
arpl
test
inc
mov
inc
xor
mov
pop
std
dec
js
iret
scas
and
xor
int
push
jg
pop
lock
or
scas
stc
add
lock
cs
or
sbb
daa
call
ds
lods
jle
aam
or
movl
mov
rorl
push
insl
push
ficoms
dec
jne
mov
dec
lds
mov
jmp
mov
xchg
mov
jo
daa
xchg
in
insb
pop
and
outsl
cmpsb
dec
push
scas
pusha
mov
jae
je
lahf
in
subb
repnz
out
or
inc
inc
fnstenv
bound
pop
divl
rolb
pop
and
cld
js
mov
imul
xchg
push
push
sar
fbld
scas
pusha
dec
out
push
mov
aad
or
mov
pop
xchg
test
mov
sbb
sub
jmp
rorl
nop
dec
shlb
fs
cmp
stc
test
inc
xor
or
mov
dec
lahf
jno
rcll
xchg
sarl
xchg
stc
dec
sbb
mov
xlat
mov
mov
cwtl
repz
dec
inc
xchg
jge
xchg
aaa
xchg
and
cmp
rcrb
dec
test
mov
add
nop
mov
xchg
push
out
push
pushf
popa
imul
ret
leave
or
insb
sub
insl
ret
sbb
push
cmpsb
loop
lods
pushf
sbb
in
add
xlat
adc
cld
das
fistps
or
test
cltd
scas
dec
lods
mov
cltd
cmp
stos
loope
xlat
sub
fcom
inc
pop
loop
hlt
jmp
push
jg
mov
dec
in
lahf
imul
insb
push
lret
mov
nop
in
inc
jl
add
xchg
fwait
rcrl
int
cwtl
popa
iret
clc
dec
sti
mov
push
or
push
sub
dec
popf
dec
out
fs
iret
or
mov
pop
movl
xlat
or
rol
icebp
gs
aas
outsl
idivl
imul
lock
and
icebp
outsb
fisubs
enter
xchg
hlt
test
rorl
adc
sub
cld
iret
mov
ret
test
iret
adcb
dec
or
cmp
and
dec
inc
mov
sti
mov
lock
cmpsl
mov
cmpsb
lret
pop
sub
jg
pop
cmc
or
inc
mov
fisttpll
call
mov
mov
push
fiadds
xorl
in
cmp
ror
enter
shll
xor
jl
or
or
pop
push
xor
lret
cmp
xchg
enter
pop
or
adc
lahf
dec
and
add
cmp
cmp
out
cmc
lods
es
mov
mov
xor
aaa
fs
cli
inc
idivl
dec
xor
sbb
push
xor
inc
sub
dec
adc
pxor
aas
sbb
sahf
pop
add
sub
fnsave
pop
jae
in
xor
insl
jge
jnp
aas
jge
mov
inc
cmpl
nop
jns
inc
daa
xchg
dec
pop
hlt
stos
shrb
jp
gs
sbb
nop
lahf
sbb
xlat
pop
pusha
jo
cmc
cltd
mov
xor
repz
nop
and
pushl
add
adc
jno
inc
pop
mov
mov
dec
lret
jnp
mov
ret
stos
stos
lahf
xrelease
dec
push
add
iret
into
incb
cld
adc
and
jnp
lret
lock
rorb
movsl
ret
div
iret
xchg
pop
fwait
in
hlt
test
push
mov
sbb
pop
mov
xchg
push
push
xchg
lahf
or
pop
pop
or
mov
dec
outsl
pop
loope
gs
jb
cmp
clc
ret
sub
xor
les
repnz
ja
add
sbb
adc
push
test
add
pop
dec
or
mov
in
adc
test
jbe
adc
inc
cmpb
xlat
dec
add
shl
fdecstp
add
push
sub
dec
pop
pushf
fildll
sub
das
out
pop
mov
push
leave
dec
xor
out
out
pop
dec
xchg
fisttps
loop
adc
jno
jbe
xlat
or
mov
stos
out
and
jo
xor
xchg
sarb
mov
and
inc
mov
movsl
push
out
test
pop
arpl
es
sahf
sarb
dec
push
lods
cmc
mov
pop
dec
jno
out
jbe
xchg
and
jge
lret
adc
push
jmp
stc
out
mov
out
push
aad
xor
cmc
andl
iret
inc
lea
pop
cmpsl
jp
out
repnz
xchg
arpl
cltd
inc
repnz
add
sahf
test
mov
popl
ja,pn
pop
sub
into
imul
cwtl
pusha
push
ret
mov
lea
and
icebp
cmp
lods
cs
sbb
xorl
test
or
adc
insb
mov
sub
sbb
cmpsb
mov
into
and
cmpsl
or
cmp
test
popa
sarb
rcl
cmp
mov
aaa
aas
or
sbb
jns,pt
out
add
mov
pop
lock
test
in
mov
test
hlt
arpl
cs
jl
test
dec
push
add
pusha
fwait
scas
sti
sbb
fwait
pop
jmp
rcr
mov
or
cmp
dec
andb
and
shrb
jge
add
movsb
or
cmp
xchg
push
and
lods
mov
sbb
mov
or
push
cmp
pop
add
push
movsb
and
data16
fwait
cmp
cmp
popa
cltd
and
push
xchg
mov
jno
idivl
ficomps
movsb
mov
stos
sahf
jo
lds
jne
push
notl
subl
divb
addl
inc
ljmp
icebp
insl
repnz
add
js
out
pop
sub
cmp
mov
popf
mov
incb
xchg
sub
mov
movsb
adc
inc
imul
movsb
fsts
rcl
fdivs
pop
inc
mov
pop
cmp
jne
fwait
mov
xchg
pop
ljmp
add
pop
cld
or
add
popa
repz
fisubrs
and
js
jae
lret
sub
jbe
sub
test
or
and
testb
pop
lret
stos
test
daa
and
inc
mov
push
and
mov
sub
sub
sbb
leave
lcall
lret
push
cli
mov
and
push
icebp
add
stos
pushf
dec
pop
xchg
sbb
out
iret
loope
lods
call
idiv
sbb
mov
dec
imul
pop
enter
pop
scas
sbb
std
and
repnz
jl
mov
dec
fcoml
sti
sbb
sahf
movb
push
jnp
mov
ret
dec
out
std
inc
btr
in
or
xor
jae
and
push
std
push
cwtl
dec
jl
lods
fwait
xchg
mul
movsl
xchg
addb
inc
rcrl
loope
fsubrl
aam
fiadds
inc
and
jns
lahf
jg
lds
adcb
or
js
movsl
pushw
stc
leave
aas
loopne
jae
cli
enter
sub
stos
icebp
repnz
popf
daa
ja
sbb
jbe
enter
inc
dec
push
or
mov
or
pushf
test
ljmp
jge
xor
ss
jmp
std
andb
cmc
les
or
mov
pop
aam
jbe,pt
inc
mov
lahf
mov
pop
sti
dec
or
loop
xlat
fldl
cmp
sub
fsts
inc
and
xor
ljmp
jl
lea
repnz
and
cld
dec
aad
mov
out
imul
jne
cld
outsl
out
das
fistps
fs
sub
add
push
std
sbb
lahf
scas
lock
fwait
xor
and
lods
stc
stos
adcb
sbb
hlt
adc
test
aaa
mov
das
movsl
inc
mov
rol
mov
xchg
data16
sub
mov
fs
xchg
aaa
icebp
and
leave
lahf
js
and
cli
inc
lods
in
bound
insl
add
xchg
imul
or
lds
mov
test
and
xor
arpl
xor
cmp
adc
and
icebp
cmpsb
add
xchg
call
int
cs
pop
adc
mov
ds
and
push
sub
fsub
aad
int3
jns
call
add
push
leave
stos
xchg
pop
mov
cmpsb
leave
sbb
inc
jns
mov
cmpsb
xorb
jge
xor
mov
icebp
lcall
shr
cmp
add
loop
call
imul
adc
daa
incl
es
loope
pop
lock
icebp
mov
stos
jmp
movsl
xchg
insb
arpl
jle
jmp
xlat
shlb
dec
add
dec
mov
dec
inc
enter
pop
or
push
or
pop
dec
roll
dec
xchg
cli
lret
jg
push
lea
xchg
scas
out
mov
dec
jo
stc
mov
inc
pop
aad
imul
cmp
cmpsl
sbb
adc
dec
mov
mov
and
insl
push
cli
xchg
jns
out
orb
pop
cmc
jg
dec
sbbl
jno
push
popf
dec
scas
mov
dec
sbb
das
outsl
cmpsb
jl
ja
push
mov
adc
loop
jne
add
sahf
sub
jae
ja
cmpsl
mov
sti
and
mov
jne
cld
jbe
or
inc
xor
add
jnp
iret
rorb
sarl
mov
lods
in
inc
jne
pop
aas
and
dec
mov
xchg
push
pop
sub
xchg
push
loope
mov
hlt
cmp
mov
arpl
outsl
xlat
inc
inc
ljmp
push
fldenv
inc
push
sbb
shll
mov
xchg
sub
hlt
jae
cli
int3
jl
imul
xchg
push
sbb
arpl
cs
sbb
xchg
xchg
mov
adc
lcall
sbb
rolb
and
pop
xchg
mov
mov
jo
or
outsb
addl
add
dec
pop
pop
mov
sahf
clc
xor
jb
sbb
mov
add
inc
mov
push
sbb
movsl
push
inc
push
clc
jle
add
addl
and
dec
je
sarb
inc
or
mov
add
or
and
add
divb
push
push
leave
ffreep
sti
jne
pusha
adc
das
pop
mov
lods
in
sbb
ljmp
daa
test
pop
fwait
push
jae
aaa
or
loop
dec
adc
int
cmp
fwait
out
call
cmp
lock
jmp
mov
or
jecxz
push
mov
xor
dec
lock
les
pop
and
xchg
in
dec
hlt
mov
cmc
mov
gs
shl
cmp
sbb
cmpsl
xor
fisubl
dec
das
jg
xor
stos
mov
ud1
divl
push
pop
les
or
shl
pop
popf
adc
cwtl
frstor
scas
jne
bsr
addr16
fidivs
enter
scas
sub
in
adc
push
push
scas
xchg
ret
xor
cmp
mov
test
stos
mov
jl
xchg
pusha
cmp
jle
inc
jecxz
and
mov
mov
cmp
inc
mov
cmp
pop
adc
shrb
lret
roll
pushf
loope
loope
dec
mov
movsb
mov
dec
adc
mov
sbb
sub
dec
ss
rcrb
fmuls
lahf
nop
and
jecxz
je
adcl
cmp
rcrb
mov
push
push
lcall
mov
ret
cmp
ficompl
cmp
popa
dec
daa
cli
sub
rolb
js
es
or
test
or
dec
pusha
iret
fistpll
outsl
cmpsb
jae
mov
mov
xor
aad
inc
scas
pushf
xchg
and
cmpsb
in
mov
xor
or
push
inc
scas
clc
jle
mov
xorb
scas
fidivrs
add
sub
or
inc
out
leave
into
fstpt
inc
fcoml
mov
out
lods
jns
push
or
fisubrs
pusha
jb
cmp
pop
adc
in
dec
cli
je
rorb
outsb
mov
sub
outsl
ds
lods
and
sbb
insl
stc
out
cwtl
adc
rcrl
pushf
xor
ljmp
mov
xchg
cmpsb
sbb
sub
mov
ljmp
repnz
stos
leave
std
and
mov
mov
dec
stos
cwtl
push
icebp
out
cli
cltd
lret
mov
and
aas
pop
popa
enter
inc
insb
addr16
pop
shl
push
inc
mov
xchg
adc
outsb
ret
cwtl
jl
sbb
xor
aad
push
mov
sub
out
divl
sbb
enter
out
inc
sti
cmp
jb
add
sahf
xabort
stos
and
pop
push
ja
out
cltd
sub
jb
dec
out
push
jo
mov
or
pop
cwtl
dec
cmpsl
int3
es
xor
ds
push
sbb
jbe
sbb
push
xor
cmp
and
fcompl
or
enter
or
mov
and
arpl
adc
inc
dec
shl
pushl
sub
push
xchg
call
ljmp
int
dec
movsl
stos
jbe
dec
mov
inc
dec
imul
mov
mov
mov
fmull
mov
insb
sub
cmp
mov
sbb
adc
daa
into
nop
inc
daa
sbbb
push
cli
xchg
fcmovne
sub
js
dec
ljmp
push
stc
popf
add
mov
mov
xor
or
mov
pop
pusha
or
jg
sbb
push
mov
subl
jo
dec
dec
sub
or
std
and
push
mov
cmc
mov
dec
and
in
xor
lret
and
xlat
sbb
nop
add
cli
ret
sti
mov
out
lcall
sub
cld
pop
and
cli
push
xor
xchg
sub
arpl
mov
lea
loope
jo
add
cmp
inc
xor
xor
mov
mov
push
outsl
cmp
sub
sbb
xor
mov
fs
std
cli
lods
insb
mov
in
xor
inc
stos
xchg
xor
arpl
sarb
mov
fisubrl
jp
pop
adc
std
xchg
imul
mov
negl
push
jb
push
stos
sahf
jle
mov
mov
fdivl
fstps
fs
add
pushf
arpl
dec
add
fsts
stos
jmp
pop
mov
and
gs
dec
cmpsl
pop
test
insl
mov
push
push
gs
mov
int
test
lret
xchg
push
movsb
call
cmp
xchg
mov
jg
std
cmp
xchg
jno
inc
pop
adc
pop
testl
add
lods
pop
mov
pop
das
mov
sub
push
cmpsb
in
in
aaa
aaa
adc
cmp
xchg
imul
pop
inc
add
sub
das
les
ret
pop
cmp
fsub
es
int
lret
jl
mov
mov
xor
push
dec
dec
in
shr
popa
fucomi
testl
jno
dec
inc
test
mov
pop
pop
mov
call
jno
inc
mov
pop
ds
dec
mov
mov
cmp
cmpsb
decb
xor
divl
xchg
push
movsb
pop
mov
inc
adc
jns
push
push
pop
aaa
loope
cmpsb
imul
enter
sbb
mov
or
jle
fcomp
mov
stc
add
sbb
fsts
aad
js
mov
js
dec
or
out
pusha
push
loop
jno
adc
mov
xor
adc
push
mov
ret
lods
and
insl
sub
aas
lahf
insl
aam
pop
push
jns
sahf
sub
dec
jne
daa
sub
lahf
iret
mov
or
mov
adc
jae
scas
std
add
loop
sbb
inc
rcrw
sbb
xchg
enter
leave
mov
insl
test
mov
cmc
cmp
andl
push
aad
enter
sahf
rep
jno
mov
jecxz
jmp
and
adc
es
dec
xchg
push
jae
fisttps
dec
cmp
fldenv
or
mov
push
cld
jl
mov
xor
loope
psubusw
push
add
int
and
int3
out
mov
push
lcall
ret
testb
sbb
lret
push
pop
movsb
in
xor
int
out
xor
shl
add
mov
pop
push
push
mov
xchg
fdivl
in
shlb
arpl
mov
jmpw
pop
mov
in
aad
pop
and
mov
insb
clc
add
and
dec
jge
adc
mov
dec
fcmovu
fdivrs
lret
fcmovnb
jo
pop
or
fistl
in
rorb
dec
mov
jbe
xor
fldl
jge
out
xchg
pop
ret
lods
pushf
push
add
cmpsb
aad
pop
vsqrtps
lods
scas
mov
mov
inc
ffreep
pop
cmpsb
stc
ret
into
push
pop
insl
xor
insl
mov
addr16
inc
ror
cmp
subb
pop
lahf
call
sub
inc
dec
pop
sbb
sub
cltd
pusha
push
in
std
mov
test
stos
idivl
imulb
or
add
cmpsb
loope
push
lret
add
fs
pop
lret
aas
scas
add
cmp
mov
or
cmp
mov
arpl
or
stc
stc
jle
shl
faddp
data16
movsb
shll
repnz
ss
mov
lods
mov
cmp
test
mov
cmp
lcall
xchg
nop
lods
aam
lea
popf
mov
pop
dec
or
mov
xchg
pop
cmp
mov
ffree
push
and
inc
sub
mov
mov
jo
movsb
cmc
cltd
cli
cmp
aad
mov
pop
cmp
out
outsl
and
loopne
movsb
dec
loope
jmp
pop
jae
shlb
test
cmp
stos
faddl
fcoml
mov
jo
xor
les
into
inc
dec
outsb
cmp
xchg
repnz
idiv
fsubrs
fsubrs
sbb
fsts
aad
pop
es
cld
fsubr
ret
jo
xchg
insb
lock
mov
rolb
pop
out
or
mov
add
xor
mov
ljmp
fisubl
popf
test
jg
jbe
pop
or
mov
sahf
cld
add
jb
aam
fidivs
in
add
insb
nop
sarb
sbb
mulb
vsubsd
or
pop
sti
loope
out
dec
notb
fstpt
push
stos
mov
fwait
or
inc
std
xor
lret
adc
iret
cmp
xorl
jecxz
sub
das
mov
rcrb
out
enter
es
pop
mov
outsb
jo
fbld
je
mov
ja
pmaddwd
scas
rclb
mov
inc
out
jg
sub
push
out
inc
pop
in
popa
frndint
lea
push
in
jns
insl
movsb
int3
ds
sub
cmp
shlb
sbb
imul
lock
sub
inc
mov
pop
pop
sbb
mov
jp
xchg
lret
insb
xor
addr16
sbb
aas
jbe
mov
mov
push
js
rcl
sti
add
xchg
inc
lea
jl
jmp
xchg
shlb
sbb
loope
lods
lds
stos
sbb
dec
imul
or
push
cmc
mov
rorl
movsb
enter
jo
adc
out
incl
nop
outsl
mov
adc
jnp
ljmp
jge
push
pushf
mov
pusha
clc
adc
pop
dec
adc
and
jle
push
mov
cmc
popa
fmul
adc
xor
cld
or
or
xlat
xchg
cmp
and
jne
orl
add
imul
icebp
stc
fstsw
jp
cld
js
pop
push
pop
jne
push
fs
mov
movsl
jmp
fcmovbe
gs
and
test
inc
add
sti
xlat
jmp
adc
lcall
inc
cmpsb
in
hlt
xchg
cmpsb
mov
and
out
pop
cmp
cmp
sbb
mov
mov
ljmp
pop
lock
shlb
es
cmp
rorl
xor
push
call
push
subb
push
mov
in
imul
pushf
inc
sbb
sti
adc
in
pop
or
mov
rcrb
dec
jge
push
pushf
fucom
and
dec
in
psubw
mov
insb
aad
sbb
jns
cmpsl
pop
dec
shlb
int
inc
mov
sub
and
mov
mov
xchg
mov
lcall
jbe
bswap
mov
inc
std
rcrb
sub
fsubrs
pop
loop
inc
mov
in
scas
or
pop
rclb
push
fmulp
pusha
test
adc
add
mov
iret
ret
or
enter
insl
insl
jmp
inc
xor
leave
bound
fs
push
dec
lods
icebp
fsub
adcl
pop
daa
or
lds
mov
out
inc
cmp
imul
insw
test
test
mov
add
loope
hlt
sub
ja
inc
lret
cmc
xor
lahf
clc
xor
imul
cmp
hlt
fdivl
aaa
cmp
cmp
xor
js
out
aas
or
in
test
in
jecxz
dec
jns
mov
in
stc
pop
in
stc
iret
mov
push
pop
xchg
js
mov
pushf
in
push
and
ljmp
jle
iret
mov
std
hlt
shrb
aad
outsl
aas
mov
ja
imul
add
movsl
xchg
or
enter
hlt
mov
jno
sbb
fwait
or
outsl
lea
cld
mov
sti
add
cmpsb
jp
dec
pop
xchg
daa
mov
sub
jecxz
adc
mov
ror
sbb
sub
shrb
dec
lea
outsl
mov
test
sub
cmp
in
xlat
loopne
rcl
outsb
xchg
sub
lcall
in
in
push
xlat
mov
mov
mulb
das
lret
or
aam
adc
out
insb
sti
insb
cwtl
push
jne
mov
mov
stos
fistpl
dec
jg
inc
shrb
jecxz
sbb
push
jge
cmp
imul
leave
push
xor
adc
outsb
outsl
cmpsb
leave
xchg
xchg
adc
mov
jns
push
jns
push
add
cmp
xchg
jl
mov
jle
lret
test
sub
mov
push
or
lret
mov
mov
dec
add
repz
jo
pushf
dec
orl
es
clc
pop
and
jbe
jnp
movsb
in
ret
adc
out
icebp
xlat
mov
jp
pop
mov
push
dec
mov
dec
inc
ss
or
mov
pop
inc
mov
movl
xchg
imull
add
adc
stc
mov
push
adc
mov
xchg
mov
jae
lock
mov
jl
stc
mov
push
ret
dec
sub
and
in
push
dec
pop
add
pop
ret
pop
pop
mov
and
push
add
aam
fst
add
lea
daa
mov
pop
mov
ficoml
pop
in
jecxz
in
xchg
bound
and
xor
ret
dec
dec
adc
pop
out
push
xchg
jno
xchg
adc
dec
mov
je
pop
addr16
cli
call
push
aam
adc
data16
pop
ret
or
sub
mov
movsl
repnz
pop
sti
mov
fdivr
call
in
mov
or
mov
and
ffreep
pop
and
inc
add
xlat
out
fnstenv
xchg
fs
xchg
pop
jecxz
lds
cmp
fwait
add
jg
push
fists
pusha
or
or
jge
out
add
mov
out
addr16
cmp
adc
and
rorl
adc
dec
cmp
xor
pop
and
fcmovnbe
lret
or
ret
xor
daa
xor
mov
lcall
mov
xchg
xchg
outsl
scas
mov
sub
cmpb
cmp
sub
loope
cld
in
inc
pop
int3
in
xchg
fsubs
imul
or
fwait
jb
test
imul
and
addb
je
pop
in
jge
pop
loope
outsl
test
or
jne
pcmpeqd
cmp
pop
jo
mov
dec
pop
xchg
push
ja
cwtl
mov
add
std
mov
xor
adc
sbb
cld
mov
push
out
sub
shl
inc
mov
xor
dec
mov
pushf
mov
shlb
dec
test
xor
test
les
int3
ds
xchg
sbb
stos
jmp
gs
add
test
out
movsb
push
mul
hlt
jo
loop
sub
pop
inc
lds
push
xor
jno
jecxz
dec
push
aam
xchg
xchg
out
aad
mov
xchg
pop
inc
add
pop
pop
or
dec
es
and
idiv
adc
mov
lret
xchg
hlt
push
pop
hlt
popa
pop
or
sbb
cmpsb
push
jl
stos
sahf
lds
sbb
and
ret
out
rcr
mov
imul
add
out
xlat
mov
insl
stc
out
jg
iret
dec
mov
lahf
cmp
repnz
lods
mov
xchg
adc
add
fdivl
and
cmp
lret
roll
mov
jp
mov
ljmp
stos
iret
test
adc
mov
adc
sbb
aaa
rcll
stos
cs
aam
mov
and
js
outsb
shlb
mov
nop
mov
stos
int
mov
ljmp
jg
add
addl
ret
mov
sub
jns
sbb
stos
mov
loope
sub
push
pop
cmp
cmp
jae
inc
fs
or
fldenv
or
inc
add
push
mov
sarb
daa
ljmp
insl
jnp
ret
adc
add
lret
push
int3
inc
fmulp
inc
pop
imul
add
adc
sbb
mov
lods
out
in
scas
enter
hlt
adc
dec
lock
or
sbb
jge
js
push
sbb
stos
ds
in
cmc
xchg
inc
pop
sub
pop
cmp
mov
add
aad
stos
inc
mov
lds
ret
or
mov
mov
nop
push
les
rolb
push
xchg
mov
rcr
lret
dec
daa
mov
adc
in
dec
mov
sti
sti
jnp
mull
cmp
dec
push
test
inc
mov
mov
out
sti
and
je
dec
mov
test
cmpsb
sbb
stc
jg
push
test
mov
jge
cmp
aad
and
or
pop
pop
mov
fisubs
shlb
popa
pop
ret
or
and
and
imul
in
imul
ret
mov
push
xor
pushf
xchg
outsl
dec
rcll
xchg
pusha
push
sbb
mov
push
das
add
cmp
call
mov
pop
sub
lret
dec
jb
das
out
mov
or
mov
xchg
jbe
sub
cmp
jmp
imul
mov
fists
adc
aad
push
inc
sub
inc
xchg
imul
adc
test
movsb
scas
push
leave
arpl
pop
mov
jae
add
cmp
xlat
rcll
adc
outsb
sub
lret
pop
pop
pop
push
and
je
pop
in
es
sti
movsb
push
sbb
jle
sbb
outsl
stos
in
sbb
popw
cmpsb
leave
push
xchg
out
add
and
ret
cmpsb
adc
mov
xchg
shll
dec
cmpsl
fcmovnb
out
out
call
jo
inc
adc
jns
jecxz
imul
aad
movsb
rep
loope
xor
jp
mov
or
push
add
outsb
test
sbb
sbb
data16
push
out
xor
out
xchg
inc
notl
lds
fs
aad
dec
mov
inc
mov
rorb
cmp
mov
xchg
adc
aam
jmp
xor
xor
out
push
xor
repnz
inc
test
pusha
dec
dec
je
insb
sub
pop
xchg
mov
sbb
add
jmp
add
imul
ret
das
rcrl
adc
cmc
dec
pop
mov
call
xor
xchg
xchg
push
jnp
dec
mulb
jns
cmp
test
xchg
cmp
cmp
pop
fldcw
sub
adc
cmp
cmc
test
xor
lds
and
jnp
not
cwtl
in
or
inc
xor
dec
adc
imul
or
int
add
xchg
icebp
lods
scas
ljmp
dec
inc
das
fwait
push
sub
xor
mov
adc
mov
call
cmp
and
jp
iret
sub
mov
mov
jle
mov
movb
and
push
ds
stc
cli
cmp
adc
cwtl
in
push
stos
mov
cli
xor
ss
sbb
inc
rcrb
pop
movsb
pop
sub
xor
inc
mov
cmp
repz
and
aam
sbb
xchg
lock
push
inc
or
mov
bound
mov
pop
xor
xor
mov
dec
cs
lret
ss
sbb
sbb
or
mov
ret
push
xchg
dec
iret
jae
adc
cmpsl
add
mov
sub
fdivrp
xor
call
addr16
pushf
and
jno
pop
divl
in
or
ret
fwait
xor
shlb
mov
jbe
repnz
xchg
jb
and
pushf
cmp
std
inc
stc
or
add
xchg
or
adc
aas
loop
mov
sarb
inc
pop
out
lods
ss
xorl
shl
pop
imul
pop
imull
lret
loop
cmpsb
add
dec
notl
cmp
fsubp
insl
test
fnstenv
insl
sbb
cmc
ss
das
rcrl
jge
imul
sbb
lahf
outsb
pop
inc
adc
pop
adc
add
mov
imul
mov
sbb
sub
call
sub
sahf
sarb
cli
adc
lcall
fildll
mov
mov
outsl
inc
xor
lds
fmul
lock
mov
lahf
pop
test
sub
xor
push
sbb
outsl
push
push
or
cltd
xchg
in
lret
frstor
jb
shll
fs
frstor
inc
push
mov
imul
jb
jbe
js
int
add
and
sub
add
loop
push
cli
ds
call
ljmp
adc
dec
sbb
jle
sbb
mov
adc
sarl
loope
rcrl
in
std
lret
gs
lret
adc
dec
push
jle
mov
xor
call
xor
add
clc
mov
or
mov
xchg
sub
mov
std
sbb
mov
and
mov
mov
mov
cld
imul
rcrl
stc
and
push
dec
jp
iret
shrb
inc
lahf
add
daa
push
add
out
add
adc
add
mov
dec
add
lods
push
pop
add
sahf
and
lret
movsb
out
sub
mov
in
sub
cmp
or
pusha
or
dec
adc
and
jno
add
imull
iret
mov
mov
xchg
orb
cmc
out
outsl
into
into
jge
cmc
jbe
hlt
or
ss
mov
dec
mov
pop
jle
rcrl
mov
pop
movsl
jge
push
fldcw
scas
test
sbbb
ss
lods
sbb
jmp
daa
and
jae
outsl
xchg
jbe
call
leave
sub
mov
pop
jae
sbb
mov
subb
and
mov
popf
xor
inc
lods
mov
xchg
mov
sbb
inc
shrb
fcompl
sbb
ljmp
jl
mov
push
mov
loop
jbe
outsl
jl
cmp
or
testb
hlt
push
stos
jb
rcll
jae
int3
add
mov
or
xchg
mov
loope
ja
aas
lahf
inc
sub
inc
dec
mov
lea
sub
lods
mov
mov
dec
jns
jno
stos
sub
sbb
loop
add
aam
sbb
cmp
jg
and
xchg
xor
fcoml
or
movsb
jno
and
jp
jno
ljmp
mov
cmp
adcl
xchg
cli
subl
jl
dec
dec
fidivrl
icebp
mov
out
push
fists
add
xchg
in
cmpsb
test
xchg
xor
cli
pushf
dec
xorb
pop
and
enter
xor
cmpsb
xchg
das
add
xchg
outsl
cmc
jne
iret
pop
mov
mov
adc
cmp
jmp
imull
movsl
xchg
or
outsl
ds
stos
and
pop
mulb
jb
aam
mov
cmp
xchg
mov
push
add
cmp
pop
fcomps
jge
mov
lret
cmp
pop
mov
jmp
xor
jmp
andl
ja
push
push
lds
jns
test
mov
sbb
mov
fucomp
insl
hlt
mov
ficoms
outsb
test
xchg
jnp
inc
sub
shlb
xchg
xchg
loop
sti
pop
add
inc
mov
inc
pusha
add
mov
js
push
or
cmpsb
xor
ret
pop
push
adc
lods
jno
jmp
stos
lahf
inc
mov
push
cld
mov
xor
in
cli
cmp
dec
ds
movsb
mov
push
cli
jmp
jle
dec
sbb
ret
loopne
or
lahf
sbb
repz
push
adc
mov
mov
add
arpl
popf
push
subl
imul
cltd
sbb
popa
ds
or
aaa
fisubrs
stc
clc
ror
aam
cli
inc
mov
jmp
lods
popa
stos
iret
or
inc
xor
stos
push
test
cmp
push
xor
and
popa
push
dec
in
popf
add
and
addr16
pop
testw
data16
out
ss
push
fistps
lea
aaa
out
enter
into
jb
cwtd
pop
das
push
cmp
dec
arpl
pop
mov
insb
pop
add
sbb
adc
mov
and
cmpsb
addr16
pop
jb
or
add
push
push
xchg
popf
add
ret
adc
aam
sbb
stos
stos
sub
fwait
jne
gs
add
ror
pop
or
cmp
dec
lret
fsts
gs
lret
out
das
inc
lret
shlb
inc
xor
and
lcall
out
std
out
inc
in
sbb
add
mov
sub
cmp
sub
pop
shl
imul
mov
sbb
pop
or
jno
mov
mov
ret
and
stos
fisttps
push
mov
cmp
aas
push
jle
loopne
jecxz
loop
or
repnz
cltd
push
ret
pop
jge
pop
xchg
pop
jmp
push
xchg
jge
ficomps
jge
xchg
sbb
repnz
rcrl
sbb
call
aam
pusha
dec
dec
pop
notb
lock
push
dec
add
adc
mov
int3
add
and
sbb
push
dec
xchg
xor
out
cwtl
or
addl
fisubrl
leave
and
cltd
jl
data16
roll
lret
das
out
das
adc
inc
adc
push
and
pop
inc
jg
inc
int3
mov
ljmp
lods
pop
fistpl
rol
mov
cmpsb
pop
popa
or
mov
sahf
jnp
movsb
stos
stos
inc
add
imul
sub
mov
int3
inc
aaa
mov
mov
lea
dec
in
popf
adc
mov
mov
clc
aaa
jle
mov
push
mov
dec
scas
jo
cwtl
mov
cmpsb
lods
mull
mov
sahf
ret
clc
add
adc
negl
hlt
xor
dec
ret
mov
dec
lds
aad
mov
sbb
icebp
add
loop
test
rorl
bndstx
xor
js
cli
pop
fildl
lock
cmp
iret
inc
cmpsl
int3
dec
fimuls
iret
push
out
int3
xor
xchg
add
imul
repnz
sahf
xor
pusha
rolb
test
push
lock
es
mov
or
outsb
mov
push
aaa
mov
pop
dec
cmpsb
push
dec
mov
or
pop
mov
arpl
jnp
stos
cmpsb
scas
jge
dec
xchg
testl
adc
adc
ss
mov
or
fs
fcomip
add
andl
cmpsl
add
fisubl
sbb
inc
lret
cmpb
mov
push
pop
or
mov
xor
dec
inc
xor
mov
or
mov
subb
aam
pop
fs
inc
gs
pop
sub
xchg
pop
bswap
orl
xor
stc
lahf
call
or
bswap
enter
xchg
ret
out
shl
call
jle
into
and
sbb
or
bnd
adc
adc
jne
imul
xchg
fisubrs
jno
mov
jg
push
xlat
jmp
in
sub
fidivs
and
xchg
sub
cli
add
sbb
cmp
xchg
pop
xor
imul
sub
lock
rcrl
push
and
mov
mov
mov
ds
rcrb
inc
xchg
push
das
in
adc
ljmp
jo
gs
dec
jge
inc
mov
xchg
jg
shl
scas
add
sub
imul
in
ja
lret
xchg
cmp
cmp
fldcw
jno
pop
lret
fsubl
pop
cltd
inc
popf
sbb
pop
push
cld
xchg
aad
mov
and
fs
sub
daa
xor
out
push
stos
pusha
mov
xlat
push
cmp
pop
mov
sbb
lahf
xlat
callw
fwait
enter
cmpsb
xchg
xchg
lret
das
ds
jecxz
leave
add
add
jno
adc
mov
xor
int
das
mov
out
stc
dec
dec
fadds
orl
aam
bound
scas
fbstp
cmp
call
cmpsb
and
inc
or
ds
mov
in
add
mov
imul
nop
test
add
mov
or
dec
scas
jbe
jl
insb
sbb
pop
jns
imul
es
fsts
mov
jns
dec
sbb
cmp
fcompl
in
scas
push
mov
mov
pop
in
js
enter
push
andl
mov
inc
fxch
sub
int3
sbb
lods
fs
adc
iret
adcb
and
sub
ljmp
pop
xchg
mov
inc
repz
icebp
jg
in
iret
sbb
repnz
sub
loope
adc
icebp
mov
out
dec
ds
jmp
mov
imul
lea
scas
sbb
sub
jbe
stc
mov
popa
iret
add
push
test
pop
mov
cwtl
dec
mov
push
cmpsl
mov
out
cmp
test
xchg
push
mov
add
ss
push
xchg
mov
mov
push
es
mov
aad
lea
repnz
push
jo
push
add
jne
cmpb
xor
in
inc
push
push
adc
mov
outsl
sub
lock
adc
and
jo
orl
mov
sub
jmp
mov
sub
jns
aas
mov
cmp
or
negb
out
mov
repz
xor
loope
js
add
in
fisubl
dec
cmp
pushf
jl
int3
int
fsubl
call
jecxz
xchg
test
das
in
gs
inc
out
push
stc
xchg
or
cmpb
in
xchg
push
sub
sbb
out
inc
dec
xlat
xor
cltd
adc
cltd
pusha
mov
mov
add
frstor
dec
fmuls
lret
dec
popf
push
or
outsb
and
imul
xchg
pusha
pushf
imul
sbb
pop
add
push
fwait
push
in
dec
test
jmp
inc
or
and
add
xchg
std
loope
lret
sbb
sbb
in
ficoml
mov
xlat
and
fdiv
jnp
movb
xlat
rol
fwait
clc
or
add
in
stos
mov
ror
push
aas
mov
pop
xor
test
pusha
roll
loope
and
sub
inc
mov
in
xchg
dec
push
push
repz
andb
adc
jp
and
aad
or
mov
cmpsb
mov
add
clc
sub
mov
jb
leave
jno
or
stos
sbb
enter
fnstenv
aas
lret
xchg
mov
icebp
out
xchg
inc
aam
mov
adc
and
jns
ss
xor
dec
pusha
pop
add
sbbb
dec
dec
adcl
mov
xor
xchg
in
sahf
jb
inc
xor
inc
mov
cmp
call
fidivrl
dec
movsl
sbb
push
push
sbb
add
add
popf
sarl
jecxz
jne
scas
aas
cmp
xchg
bound
and
fwait
cmc
leave
pusha
repz
mov
nop
lods
repz
les
or
pop
test
ficoml
leave
jbe
adcl
xor
pop
arpl
xor
or
push
push
xchg
out
gs
add
pop
shl
or
jns
or
jno
lea
js
std
add
xor
lods
cwtl
into
or
shr
jge
movl
cmp
adc
or
ss
lahf
sahf
mov
dec
lret
cmp
not
pop
jmp
push
imul
clc
shll
mov
in
and
xchg
shll
shlb
int3
shll
mov
xchg
add
cld
sbb
gs
and
std
es
adc
lahf
push
pop
scas
sbb
xchg
lock
notb
xor
lea
mull
add
stos
call
out
sbb
add
jno
mov
stos
das
cmp
shrl
fiaddl
dec
mov
push
push
fnstsw
push
lcall
inc
movsl
fstpl
add
data16
push
sbb
int
jb
push
rorl
movsb
loopne
sbb
cmp
adc
add
test
rolb
xor
mov
sbb
adc
ja
pop
mov
scas
cmc
xor
leave
add
push
loopne
inc
insb
jbe
popa
mov
lahf
clc
addb
pop
int
inc
pop
frstor
jb
iret
sbb
out
push
and
push
pop
or
cmp
mov
add
shrl
mov
in
push
sbb
data16
jp
test
imul
push
cmp
mov
std
cli
cmp
adc
mov
js
push
lea
ja
xchg
push
dec
loopne
pop
lds
movb
xchg
fidivs
fistps
jae
int
std
mov
iret
lods
sub
dec
jnp
js
loop
xchg
out
fs
add
outsl
mov
negb
fcompl
pusha
jns
inc
repz
addr16
pop
xor
ja
iret
sti
les
imul
mov
add
dec
pop
ja
pop
faddl
push
mov
outsl
sub
mov
xlat
adc
pop
test
push
jbe
or
nop
fsubs
jne
rcr
push
int
inc
pop
frstor
in
js
fdivrp
pop
dec
xchg
xchg
lahf
adc
rol
lods
sub
sub
sbbl
jnp
cld
int3
cmc
jno
testl
popf
pop
stc
imul
mov
inc
lret
lret
imul
xor
push
jg
sbb
dec
xchg
push
xchg
jo
adc
and
cvtps2pd
das
push
sub
aad
leave
je
out
xor
mov
jp
push
gs
xchg
lret
add
lret
pop
cwtl
mov
leave
gs
out
gs
dec
inc
xchg
stc
jmp
pop
out
out
xor
cli
lock
pop
mov
orb
or
pusha
xchg
xor
sbb
ds
aas
inc
loopne
mov
or
mov
gs
lahf
stc
jge
ret
pop
shll
ret
mov
sahf
clc
xor
mov
repnz
pop
xchg
scas
jl
ljmp
xchg
movl
scas
es
pop
jae
js
cltd
loopne
mov
jge
js
jo
std
fildl
lock
cmp
les
int3
call
imul
imull
imul
popa
xchg
lock
sbb
lahf
imull
xchg
sbb
dec
stos
jle
inc
data16
add
jae
ficoml
leave
pop
hlt
call
loope
add
mov
dec
movb
xor
das
movsl
sub
in
jbe
jecxz
ljmp
mov
int
stc
sub
psubusb
pop
dec
popa
outsb
and
adc
dec
mov
mov
fsubl
call
add
or
mov
pop
pop
mov
addb
pop
mov
call
mov
add
xchg
stos
outsl
add
mov
sarl
ret
inc
and
pop
inc
mov
cmp
inc
nop
push
les
ljmp
adc
lock
inc
mov
test
add
push
push
out
mov
xchg
pusha
pop
stc
mov
in
popf
pavgb
stos
outsl
lock
and
and
xchg
sub
xchg
cmp
insb
mov
adc
scas
pusha
cmova
cltd
pop
call
pop
cmpsb
mov
mov
mov
cmp
outsb
jno
cmp
sbb
jns
insb
stos
xor
sub
add
pop
jno
pushf
mov
dec
mov
gs
cmc
dec
mul
cmp
and
cmp
nop
cmpsb
push
mov
jns
shlb
jle
adc
jb
mov
outsb
mov
je
and
sbb
scas
fcmove
cmp
dec
rcll
adc
dec
cmp
mov
xchg
xchg
sti
add
xchg
or
out
fs
ds
and
cmp
push
cs
inc
and
jmp
sub
xchg
jge
lahf
push
ljmp
iret
rorb
clc
and
fisubrs
pusha
fs
outsb
xchg
inc
sub
mov
xor
and
adc
inc
negb
stos
and
imul
lock
arpl
scas
out
xchg
sbb
fs
data16
sub
xchg
inc
inc
ds
out
std
mov
je
testb
js
cmp
xchg
mov
lods
dec
xor
test
pushl
test
or
mov
cltd
lret
pop
and
hlt
dec
sbb
jg
sbb
cmp
mov
addb
mov
inc
icebp
lret
shll
mov
inc
dec
cmpsb
pop
xor
or
pop
inc
loopne
jle
push
dec
cmpsb
xor
mov
push
add
cmpsb
in
fadd
ret
cmp
push
and
push
xchg
stos
cltd
push
in
decl
leave
repnz
and
ficoml
das
cli
pop
fildl
loop
mov
mov
cltd
fucomi
popa
fstps
std
loope
outsb
sub
sbb
ss
cmp
fdivrl
aas
sbb
scas
xchg
pop
aaa
mov
insl
cmp
cs
divl
shrb
negl
lcall
test
push
xor
aam
pop
sarb
mov
ja
jno
out
rcr
lahf
loopne
pop
inc
cmc
pop
mov
mov
test
call
xchg
dec
or
scas
adc
mov
and
mov
and
inc
mov
insl
sub
jl
mull
lock
outsb
sub
and
pop
inc
loope
mov
out
push
mov
pop
mov
dec
sub
int
movsb
xor
and
push
adc
ret
mov
orl
push
mov
dec
fidivrl
aaa
movsb
lea
push
lret
arpl
and
ret
or
jnp,pt
outsl
jbe
xor
fists
push
aas
lods
and
les
mov
mov
sbb
lret
outsl
push
iret
fdivrs
or
push
cmp
out
fidivs
sub
jp
sub
jo
dec
dec
cmp
dec
mov
out
sbb
scas
jo
andb
ret
and
mov
lea
loopne
icebp
xchg
push
ja
imul
les
xchg
rolb
ljmp
sbb
test
dec
push
push
bnd
or
xor
sub
js
push
adc
ss
fbstp
js
aas
inc
ret
cmpsb
call
shll
mov
fdivrs
rcrb
imul
cmp
sahf
in
xchg
dec
js
int
pop
mov
pop
push
inc
dec
push
add
pop
mov
push
xchg
frstor
xchg
sbbl
into
cmp
xchg
sub
cltd
lds
fistps
mov
loop
dec
aam
lea
and
pop
and
pop
xor
pop
scas
data16
aad
dec
fs
dec
lods
add
neg
mov
add
xchg
inc
pop
push
cmp
mov
shr
dec
and
shlb
icebp
mov
mov
xor
stos
negb
ja
ds
cs
mov
les
dec
sub
lret
pop
xor
std
sbb
xchg
scas
xchg
or
aas
inc
adc
cmp
leave
rorb
adc
adc
hlt
jo
std
je
decb
add
loopne
xor
sti
xor
push
pop
mov
push
lcall
icebp
cmp
dec
mov
adc
sub
cmpsb
hlt
fdivrl
push
stc
push
push
incl
imul
gs
mov
add
pop
lahf
call
dec
mov
sub
cmp
xchg
add
imul
and
add
aas
dec
in
in
or
mov
popa
stos
fsubs
aas
hlt
mov
jo
mov
std
fbstp
xchg
pop
xchg
repz
pop
add
aas
push
jle
sub
cmp
jb
add
addr16
stc
hlt
inc
pop
jmp
jae
les
ret
adc
aam
dec
test
xor
loope
test
pop
mov
lods
loope
add
sbb
adc
into
or
outsb
stos
lret
loop
jns
out
orb
shll
xchg
call
lahf
outsb
and
mov
mov
fildl
and
icebp
cmp
push
adc
mov
pop
sub
mov
and
ja
imul
lds
xchg
fdivs
and
pop
inc
ds
int
mov
loope
jns
mov
out
loop
orb
add
push
push
popf
rol
xlat
pop
shrl
adc
jl
adc
sbb
inc
jno
repz
push
pop
cwtl
out
xor
sbb
lock
mov
pushf
inc
jbe
insl
daa
sahf
cmp
pop
div
stos
jb
xchg
jg
incl
repnz
sti
in
sbb
add
insl
test
or
mov
fwait
daa
mov
or
leave
cltd
in
mov
scas
jbe
and
test
or
and
mov
lcall
adc
jecxz
sub
loop
push
lea
inc
outsl
rolb
jnp
lret
shl
jle
leave
mov
js
mov
stos
xchg
jne
push
out
or
push
scas
jo
insb
arpl
int3
aam
pop
test
bound
mov
mov
sarb
jb
cmp
add
xchg
je
xchg
les
out
jbe
inc
mov
call
cs
mov
insl
stc
out
sub
je
data16
xchg
sub
adc
push
ljmp
xor
sbbb
sub
xchg
imul
shl
popf
lods
mov
pop
jae
inc
mov
mov
or
pop
mov
push
ret
push
aas
loope
movl
cmp
mov
jb
cmpsb
and
mov
adcb
sub
rep
inc
rcll
sahf
push
stc
adc
mov
popf
pop
sti
leave
addb
loope
sub
loopne
lret
mov
mov
inc
and
cmpb
xor
dec
jmp
or
lea
repnz
sub
adc
or
ja
xchg
mov
jmp
mov
pop
lret
jbe
pop
add
cmovb
sub
dec
cs
pop
lret
fistpll
es
shrl
cmc
ss
inc
mov
dec
dec
out
scas
xchg
outsb
and
out
sti
lods
push
in
mov
jg
pop
pop
xchg
jne
enter
pop
and
ss
cmpsb
jg
out
or
pop
cmp
xlat
inc
pop
jno
pop
pop
pushf
pushf
lods
nop
mov
mov
mov
dec
test
imul
sti
mov
rcl
das
nop
imul
push
xchg
and
mov
jbe
xor
adc
add
sub
sub
in
fmull
and
pop
inc
jecxz
nop
orb
sbb
push
aas
xchg
pop
mov
push
adc
push
mov
lcall
fs
sub
jle
jae
stos
mov
cmp
in
jns
cli
shl
in
pusha
and
leave
dec
sub
xlat
push
push
xchg
dec
push
jae
arpl
mov
or
adc
mov
push
sbb
or
xor
out
mov
mov
push
cmp
out
and
push
mov
xor
mov
loopne
into
pop
push
es
sub
mov
push
int
sbb
lret
xchg
cwtl
cmp
dec
jmp
pop
into
fistps
stc
addl
mov
jne
ja
jge
mov
sbb
mov
adc
mov
cmpsb
push
or
fs
mull
popf
inc
add
imul
pop
xorl
test
xchg
movsb
arpl
ret
mov
sbb
call
sarl
enter
stc
lcall
stos
enter
inc
daa
fwait
sub
lcall
mov
dec
jmp
je
gs
push
leave
test
cld
out
dec
jo
cmp
or
test
fsub
xchg
ret
inc
lods
xchg
xor
stos
jno
push
xchg
cmp
iret
jg
push
sbb
fidivl
jne
lock
cmp
dec
push
pop
insl
addr16
iret
aad
and
mov
mov
imul
sbb
imul
mov
leave
lret
sub
out
es
fcmovb
lret
mov
cld
inc
xchg
js
and
arpl
clc
cld
sub
gs
mov
mov
and
mov
xchg
adc
repnz
push
jo
cld
dec
or
xchg
cmpsb
xor
or
cmp
and
adc
sub
jbe
xchg
jl
ret
in
mov
out
pop
roll
mov
xchg
cmpsl
rcll
test
vpunpcklqdq
shr
enter
dec
sbb
or
and
add
add
incb
push
in
jl
divl
add
push
out
loop
lods
mov
adc
lret
out
push
jbe
inc
lahf
and
dec
in
push
adc
fstps
mov
xchg
out
arpl
cmp
stos
jecxz
into
ljmp
cmpl
push
xor
outsb
push
lock
cwtl
mov
push
inc
jo
sbb
xor
pushw
pusha
sbb
loopne
fistps
inc
cmp
mov
sub
push
std
stos
outsb
lret
orb
mov
fmull
and
xchg
mov
xchg
adc
inc
cmp
xchg
jmp
daa
sti
jbe
lret
push
outsl
cmp
sbb
gs
stos
int
dec
ret
test
dec
mov
hlt
and
call
sahf
or
mov
mov
dec
push
and
inc
notl
aaa
ficompl
aas
sub
jae
rcrb
and
out
shlb
pop
or
loop
xchg
mov
aam
jecxz
daa
sbb
adc
and
cmp
xchg
cmp
out
xor
adc
or
add
cs
or
pop
cmp
adcb
cmp
xor
sub
inc
enter
in
xor
inc
ret
and
push
push
pshufw
lds
imul
leave
ret
sub
cmp
mov
xchg
xor
adc
out
js
movsl
xor
clc
pop
mov
lret
and
mov
cmp
adcl
inc
pusha
decb
out
inc
and
inc
inc
jae
test
adcl
fs
ret
pushf
mov
sub
and
dec
rol
cmp
ja
cmp
jnp
mov
dec
rcll
loope
sbb
mov
cmc
lea
rclb
jns
aaa
sub
repnz
dec
push
imul
xchg
mov
negb
int
stos
push
dec
jmp
xchg
cmp
pop
mov
lcall
icebp
out
std
ss
jne
dec
outsl
or
dec
or
mov
pushf
mov
xchg
cltd
pop
out
arpl
cltd
xor
sub
inc
outsb
iret
mov
fcmovnu
dec
ret
xor
ss
xchg
or
dec
stc
mov
gs
dec
dec
pop
mov
insl
add
dec
das
cwtl
sub
fs
mov
add
jl
outsl
sub
in
fwait
pop
imul
jmp
and
pop
lret
fldcw
addr16
sahf
push
decl
cmp
or
pop
in
jnp
std
xchg
cs
lret
aaa
fisubs
add
or
mov
cmp
les
inc
xor
dec
cmp
xchg
cltd
and
adc
xchg
and
addr16
add
repz
rcr
test
xchg
adc
leave
dec
xchg
mov
cmp
fadds
rorb
rcrl
xor
jno
xchg
popa
cwtl
cwtl
inc
pop
add
adc
test
rorl
xchg
fs
jno
cld
std
mov
mov
stos
iret
jbe
xchg
push
fmull
dec
call
push
inc
sarl
notl
xchg
test
stos
adc
pop
push
fwait
or
xor
sarb
sarl
lcall
mov
movsb
mov
scas
pop
or
outsb
in
and
push
cltd
adc
add
in
add
mov
ret
enter
mov
add
loop
loope
cli
fs
fdivs
gs
sbb
pusha
mov
shlb
dec
jnp
aas
and
in
push
inc
inc
pop
outsl
popa
xor
fstps
sub
mov
mov
jne
daa
and
sbb
sbb
cmpsb
xor
and
out
xor
jecxz
shrb
sub
push
adc
adc
jecxz
mov
xor
sub
sub
xchg
adc
push
pop
aaa
ja
stos
filds
stos
outsl
xor
stos
sub
sbb
fs
fxch
mov
jbe
mov
lret
cli
ficoms
dec
mov
adc
ljmp
scas
jbe
leave
in
adc
sbb
out
jns
inc
sti
push
dec
outsb
dec
stc
jb
push
ror
orl
cs
push
imul
outsl
cmpsb
aad
addr16
lds
mov
dec
mov
iret
cli
sub
cmpsb
jecxz
sarl
push
pop
cmp
sbbb
fisubl
int
xchg
scas
jle
idivb
mov
scas
lahf
push
ja
idivb
imul
mov
lcall
jg
xchg
lock
xchg
fldcw
je
xlat
imul
in
xchg
mov
add
xlat
adc
mov
pop
xchg
fsubrl
xchg
loop
jno
movntps
sbb
and
test
pushf
jae
inc
ficompl
dec
xor
jns
imul
ljmp
stos
sub
bound
cs
mov
cs
jb
pop
cmp
fidivl
sub
jge
ret
int3
ret
int
pop
xchg
pusha
mov
push
push
lahf
clc
aad
fdivrs
sbb
lret
or
in
xor
cmp
fdivrp
mov
cmp
out
adc
push
aaa
divl
xchg
test
cmp
fildll
adc
sub
sub
gs
imul
xchg
data16
cmp
mov
cwtl
mov
xchg
jne
push
daa
out
sti
ljmp
arpl
dec
and
mov
out
inc
add
add
sub
sub
in
xchg
pop
fcmovnbe
hlt
xchg
inc
sbb
xchg
lea
rcl
jns
xlat
repz
repz
sbb
in
adc
incl
cmpsb
xor
sbb
pop
add
xchg
add
lock
inc
stc
in
aam
fwait
test
hlt
xchg
push
cmc
ror
pop
mov
mov
sbb
xchg
sbb
stos
sahf
or
ret
outsl
outsl
in
scas
idivb
out
repnz
mov
add
xchg
and
push
leave
jecxz
push
gs
xchg
adc
aaa
mov
ret
xor
ja
lahf
ljmp
sbb
dec
hlt
and
int3
jecxz
add
sub
imul
dec
cmp
bound
push
add
sbb
ds
lods
repz
ss
daa
fnsetpm(287
xchg
mov
test
int3
inc
leave
repz
fisubrs
sbb
aaa
lcall
mov
call
mov
ss
mov
sbb
pushf
shrb
sub
fs
in
add
xchg
inc
push
test
pop
pop
testb
cmpsb
out
lds
sbb
movsb
scas
push
leave
arpl
inc
mov
negb
mov
sub
cmc
and
ljmp
jecxz
out
imulb
insl
mov
mov
data16
dec
test
dec
pusha
mov
push
ds
mov
iret
lret
cli
out
outsl
outsl
jno
into
dec
mov
inc
sbb
js
dec
xchg
xor
mov
pushl
jp
faddl
fwait
daa
and
xor
cmove
mov
lret
add
xor
aad
and
pop
addr16
mov
push
jg
les
popa
jmp
and
xlat
inc
mov
outsb
mov
xor
nop
mov
out
xor
pop
dec
mov
ljmp
cmpsb
out
add
cmp
out
or
sbb
lds
add
lcall
add
push
popf
outsb
inc
int3
cmp
push
sub
dec
loope
sbb
rcrb
stos
adc
inc
xchg
stos
or
mov
shl
jecxz
movsb
out
ss
mov
mov
loopne
sahf
mov
aad
xchg
call
jecxz
xor
aad
add
ljmp
push
flds
mov
inc
cmp
rcrl
jno
js
cmpsb
int
add
sub
sbb
dec
xchg
fcmovb
lods
movsb
mov
ret
pusha
bound
hlt
jne
hlt
imul
test
sub
xchg
pusha
pop
mov
sub
int
sbb
dec
xchg
lods
mov
add
daa
lret
ret
loope
push
lret
test
inc
in
add
push
mov
stc
dec
dec
jno
lret
test
push
sub
sub
lea
imul
push
cltd
cmpsl
cli
cmp
sbb
es
push
mov
inc
in
sub
into
jmp
ret
push
cmp
scas
dec
out
scas
pop
popf
push
jno
mov
or
sub
cmp
jo
dec
xchg
adc
insl
popf
enter
js
jne
xor
aad
push
jle
jmp
mov
hlt
jp
or
xor
inc
hlt
fwait
loop
int3
adc
pop
in
aam
sarl
push
jae
orb
or
jnp
add
pop
push
mov
or
cmp
and
lods
stc
xchg
xchg
imull
fcoml
pop
cmc
or
add
lock
add
add
mov
cmp
jne
jno
ret
mov
sar
mov
jns
loopne
mov
out
inc
push
jbe
push
insb
daa
popa
or
es
dec
mov
inc
jbe
lods
cwtl
and
sbb
ljmp
test
xlat
mov
sbb
xor
rorl
jmp
hlt
ret
mov
ds
mov
sbb
sti
fdiv
dec
jbe
mov
int3
inc
mov
xor
std
aas
sti
cmp
dec
insb
lcall
push
sti
jmp
clc
aam
cli
cs
xor
pop
dec
adc
mov
and
push
lods
mov
and
ja
mov
push
cmpsb
subl
mov
cmp
jns
pop
mov
repz
loop
push
repz
adc
aam
xlat
fistpll
iret
loope
fwait
jge
fsubs
repnz
dec
add
mov
ret
pop
pushf
adc
sub
mov
xor
hlt
lock
imul
and
add
ja
sahf
add
push
cmpsb
iret
sbb
movsb
lods
sbb
ss
dec
adc
stos
fistps
sti
ret
add
mov
and
cmp
sbb
adc
xchg
and
rorl
push
gs
xchg
pop
loop
in
jp
outsb
sub
and
xor
push
mov
pop
push
inc
inc
mov
pushf
fstl
and
jae
jb
rcrb
lahf
ljmp
ds
nop
mov
popf
dec
pop
sub
mov
and
or
jle
outsb
push
ret
dec
sar
inc
unpcklps
out
jb
iret
lret
lods
xor
bnd
icebp
sbb
fsts
fsubrl
fucomp
aaa
outsl
push
push
loop
lret
test
add
mov
nop
xchg
loopne
sub
sub
and
adc
mov
jae
inc
jmp
pop
adc
dec
iret
sbb
sbb
xchg
sbb
xchg
cmp
mov
or
out
sub
aaa
pushf
test
je
call
xor
scas
adc
inc
imul
pop
xor
dec
xlat
movsb
mov
inc
arpl
push
outsb
stos
insb
outsl
and
or
clc
xor
lea
jo
into
mov
xor
icebp
cmp
and
test
in
loopne
mov
add
aas
mov
dec
lods
push
mov
imul
cmpsl
cmp
xor
ds
fnstcw
movsl
inc
xlat
out
inc
std
loope
fimuls
data16
inc
jne
cli
jmp
mov
ss
dec
fnsetpm(287
adc
pusha
das
addr16
or
scas
pop
mov
mov
push
mov
cld
xor
xchg
add
out
cmp
push
insl
cmp
psubd
pop
ljmp
aaa
xor
mov
cs
push
arpl
aam
dec
mov
jge
jne
into
or
jle
sbb
hlt
mov
cmp
inc
addr16
adc
mov
jge
xor
addl
mov
pop
pop
jnp
fstps
dec
xchg
mov
lahf
mov
dec
test
add
sub
pop
dec
in
test
jno
testb
push
pop
pop
outsl
sub
fsub
fisttps
imul
xor
icebp
fsubs
div
jae
hlt
sub
adc
sbb
ds
adc
dec
pop
idivl
popf
jo
scas
or
mov
loope
mov
out
pusha
mov
mov
adc
dec
fnstenv
ss
dec
or
shr
sub
push
dec
mov
fstpt
in
rorb
gs
dec
nop
sarb
adc
pop
push
mov
popa
xor
and
loop
push
sbbl
xor
lret
ret
js
mov
push
sahf
cmpsb
xor
shlb
cmp
xor
mov
ss
dec
sahf
mov
cli
dec
aas
popf
sbb
orb
cld
adc
arpl
sbb
sar
xor
arpl
vpmacsdqh
div
cmp
sarl
inc
lods
iret
arpl
cwtl
add
inc
mov
pop
push
jo
mov
mov
adc
test
jp
fimuls
xchg
or
daa
ret
mov
push
addr16
pop
or
int
add
dec
cmp
mov
xchg
not
gs
test
mov
rcrl
sub
mov
sbb
imul
push
inc
mov
stos
aas
jle
xchg
fdivrl
pop
pop
push
xchg
insl
lcall
flds
xor
pcmpeqb
test
test
insb
sbb
mov
fs
int3
xor
jne
push
xor
gs
call
adc
fidivs
outsb
test
adc
sahf
push
mov
push
xchg
mov
out
push
sahf
ret
or
cmpb
or
xor
pop
jmp
popa
jns
sub
adc
rorl
and
push
xchg
js
mov
lds
push
mov
pop
adcb
xchg
sbb
std
adc
ljmp
mov
imul
cmp
fldcw
shlb
sub
scas
outsb
sub
xchg
in
jae
inc
mov
cmpsl
bnd
ficompl
mov
cmp
sbb
adc
push
dec
push
lret
lods
and
gs
and
fcompl
or
addr16
jnp
cli
push
pop
pop
popa
aad
push
test
lea
dec
test
fnstenv
inc
lds
int3
sub
xchg
dec
notl
jb
inc
cs
sub
add
arpl
jmp
sbb
imul
xor
out
xchg
push
dec
dec
ret
xchg
pop
repnz
and
fisubl
cmpsb
cmpsl
mov
outsl
stos
icebp
cmp
aaa
pushf
mov
jns
pop
repz
dec
shl
push
sub
mov
scas
lods
pop
add
mov
pop
fiaddl
movsl
or
adc
pushf
pop
cs
loope
and
jns
aaa
fwait
and
test
cmp
hlt
pusha
xor
or
test
cmp
adc
adc
xchg
roll
add
xor
addr16
push
adc
sub
das
test
xor
cmc
mov
testl
leave
pushf
repnz
xchg
inc
cmpb
and
movsl
cmp
push
cltd
insl
mov
mov
daa
imul
pop
xchg
and
clc
lahf
xchg
jb
add
lods
aaa
xchg
or
sub
mov
or
rcl
jns
sub
pop
and
cmp
rcr
fdivrl
pop
ljmp
test
mov
lret
cmpsb
xchg
jnp
cmpsb
sbb
cmc
mov
jns
ljmp
sti
ljmp
in
jne
lcall
jmp
mov
add
jae
test
jno
inc
jp
lret
push
pop
mov
popf
xchg
pop
pop
mov
sub
push
xchg
mov
or
jmp
mov
popl
inc
xor
in
loope
inc
mov
mov
dec
mov
xchg
ret
mov
cmpsl
lea
and
jmp
je
fbstp
sahf
outsl
je
jno
push
jnp
cli
pop
cmp
into
mov
dec
add
test
les
dec
inc
cmp
mov
dec
sarl
mov
inc
fsubr
imul
repnz
je
mov
jl
cmc
outsl
gs
out
sahf
xchg
orl
mov
popf
xor
push
or
insb
jg
movsl
aam
push
std
loop
movsb
pop
cmp
ljmp
sahf
jbe
push
cmp
inc
ja
and
dec
lahf
pop
jo
pop
jecxz
clc
pop
sub
mov
imul
pushf
xchg
call
scas
test
add
and
xor
cmpsb
push
pop
aad
inc
adcl
rclb
pop
push
inc
data16
mov
cs
jo
shll
jno
cli
inc
push
fcmovnbe
insl
pop
stc
mov
mov
inc
jb
cmpsb
hlt
mov
loope
dec
add
psllw
dec
mov
push
xbegin
and
mov
dec
ja
icebp
adc
pop
arpl
push
outsb
enter
aad
xor
adc
or
cs
or
movsb
or
add
mov
mov
adc
add
outsb
movsl
outsl
xor
sbb
dec
jne
inc
inc
cmp
pop
xchg
cmp
and
cld
lcall
fwait
inc
notb
out
mov
xchg
and
inc
fldcw
nop
push
cltd
jb
sbb
das
fldcw
mov
lods
mov
dec
loop
dec
push
jbe
and
add
mov
nop
dec
shlb
xor
lret
xchg
outsb
icebp
loop
mov
in
cwtl
cmp
xchg
jl
iret
xor
cmp
sbbb
sbb
push
rcll
mov
pop
dec
xor
and
xchg
adc
sbb
dec
test
push
cmp
xlat
sub
jb
push
imul
mov
sbb
fildl
and
xchg
fadd
xor
push
daa
andb
dec
hlt
dec
fwait
loopew
jecxz
push
xchg
fdivrl
and
xchg
sbb
xor
fcoml
addr16
jmp
add
inc
into
in
js
pop
cmpsb
int
lock
lock
shlb
xchg
call
push
imul
popa
xchg
aaa
sbb
imul
pusha
fisttpll
mov
add
lds
jbe
popf
daa
push
or
enter
imul
loope
push
jae
push
ffreep
enter
stos
inc
sti
loop
push
push
js
mov
mov
mov
ret
mov
sub
shrb
gs
leave
xchg
add
xchg
divl
or
pop
push
pop
arpl
loope
dec
inc
inc
dec
dec
test
sbb
lahf
icebp
cmp
jge
mov
lcall
mov
xchg
mov
dec
scas
aaa
test
cmp
repz
fmuls
dec
pop
mov
xor
mov
xchg
sub
fmul
fs
fiadds
cmc
outsl
fwait
ss
sub
scas
jmp
icebp
mov
out
or
pop
loope
push
out
fcoml
test
daa
pusha
push
jp
push
ljmp
adc
stos
or
fistps
mov
sbb
xchg
mov
add
call
popa
fucomp
jbe
js
pushf
dec
loope
jns
add
pop
adc
adcl
mov
mov
aas
push
leave
ljmp
add
inc
push
sarb
mov
cmpsl
mov
push
inc
enter
add
imul
inc
dec
lods
sbb
test
push
jle
mov
mov
and
out
aaa
push
or
lahf
push
je
daa
jno
daa
test
xor
adc
push
imul
or
sbb
jns
xchg
lods
and
mov
aad
adc
or
inc
ja
insb
pop
sbb
cmp
cmp
jb
dec
daa
cmp
cli
pop
or
scas
dec
add
stc
out
int
jo
repnz
add
mov
dec
push
cmp
cmp
sub
xchg
adc
call
mov
add
adc
pop
fwait
fwait
jge
enter
push
icebp
das
inc
mov
pop
push
mov
sub
xchg
lods
testb
pop
inc
mov
push
pop
lods
and
inc
cmpsb
ja
jae
mov
mov
repnz
jmp
stos
iret
test
sbb
mov
add
dec
test
mov
push
mov
inc
lcall
push
sti
fcomp
cs
fistl
decb
rol
movsb
mov
adc
ljmp
add
sub
xor
cmp
or
inc
ss
pop
addr16
mov
dec
jae
dec
insb
push
xor
jbe
rcrl
jno
pop
in
mov
mov
jl
fucomip
push
nop
xchg
sbb
xchg
and
shrl
incl
mov
mov
push
insl
dec
sar
sbb
movsb
jo
sbb
fiaddl
aad
cltd
xor
enter
shll
add
lods
mov
xor
mov
pop
int
push
mov
lock
dec
ds
or
and
xchg
adc
adc
mov
sub
cmpsl
outsb
and
dec
dec
nop
cmp
clc
jmp
jg
jle
pop
xor
rorb
mov
xchg
mov
ds
or
test
jecxz
adc
outsl
cmp
dec
xor
cmc
gs
fstpt
stc
pop
push
daa
mov
push
pushf
imul
fcmove
popa
pop
sbb
sbb
mov
fstpt
mov
fdivrl
or
pusha
in
cmp
adc
loope
jb
scas
inc
out
push
push
or
sub
sub
into
push
push
mov
dec
dec
cmp
popl
les
jmp
cld
add
cmpb
loop
ss
cs
mov
stos
add
pop
out
in
repnz
ret
push
sub
jae
lods
and
sub
daa
and
or
mov
sub
stc
sbb
pop
daa
scas
mov
inc
push
ja
push
filds
xlat
loopne
dec
sbb
das
pusha
daa
ljmp
test
push
push
inc
mov
pop
fs
cmc
jne
push
ret
mov
sbb
scas
mov
fidivrs
push
dec
xchg
gs
ret
repz
not
push
and
addr16
sbb
xor
scas
add
mov
aas
pushf
mov
pop
enter
xor
sub
lea
repnz
mov
cmp
jle
adc
sub
mov
push
jns
shll
add
inc
jne
test
xor
mov
sub
add
in
inc
cmp
push
pusha
stos
mov
pop
insb
xchg
addr16
repz
push
push
fldenv
test
dec
das
push
stos
pushf
outsl
inc
clc
enter
movsl
mov
arpl
mov
push
div
xor
jnp
push
insb
xor
lcall
push
dec
sub
pop
jp
sti
inc
mov
mov
mov
mov
js
insl
fimuls
pop
mov
mov
inc
inc
jmp
roll
lods
popf
es
lret
movsb
pop
mov
jb
mov
pop
dec
in
in
jl
lret
xor
mov
lret
ret
sbb
std
es
jp,pn
dec
add
cmp
mov
in
mov
cmove
ret
test
loope
push
lret
adc
ja
jmp
bnd
cltd
iret
in
adc
adc
or
in
jne
sbb
cmp
sbb
leave
add
xor
mov
add
dec
xchg
test
add
cmp
push
and
test
adc
inc
sbb
shlb
aad
dec
mov
movsb
lea
push
sbb
je
stos
filds
imul
fmuls
ficoml
inc
mov
mov
sub
xor
cmc
subl
mov
xor
inc
loopne
ret
push
mov
jmp
rcll
outsl
cmpsb
mov
andb
cmpsb
leave
fwait
lods
loop
jns
lret
in
dec
scas
ficoml
sbb
or
fs
pop
mov
cmp
mov
push
out
mov
and
sarb
aas
mov
pop
pop
aaa
adc
push
xchg
pop
adc
scas
xchg
dec
xchg
lods
andb
and
sbb
fwait
in
cli
lods
pop
dec
and
cmp
out
data16
and
adc
xchg
ror
call
loopne
sahf
dec
addr16
call
nop
cmc
lret
pusha
pop
jecxz
sbb
lret
into
mov
sbbl
daa
adc
jo
and
fildl
rorb
addr16
push
mov
sbb
fsubp
js
xchg
and
inc
adc
je
jmp
lea
xor
pop
std
leave
dec
cmpsb
aam
mov
iret
cli
leave
cld
add
push
repnz
jp
sub
cmp
add
xchg
stos
icebp
insl
or
pushf
mov
sub
and
ja
and
push
gs
mov
fbstp
or
aad
iret
das
jl
mov
loope
mov
out
fdivrl
adc
cltd
gs
jb
int
pop
jg
mov
in
lcall
xlat
cmp
nop
ret
sub
outsl
mov
out
jg
jle
icebp
inc
pop
inc
mov
aas
cmpsb
out
mov
add
sub
pop
js
test
es
sub
adcl
inc
mov
loopne
jb
inc
dec
lock
data16
xchg
sbb
mov
loopne
fistl
std
out
xchg
jnp
dec
adc
es
stos
cmp
cs
sub
dec
inc
notl
jg
mov
pushf
test
jbe
inc
or
pop
and
mov
or
insb
std
sub
fsubp
cmp
jns
pusha
shll
mov
xchg
test
push
inc
mov
jo
push
cld
dec
test
es
and
shl
lods
xchg
repz
lcall
inc
shrb
dec
adc
loope
inc
pushf
xchg
jle
jo
or
push
sbb
inc
mov
gs
and
adc
pop
or
sub
sbb
dec
cmp
adc
pop
sbb
loop
mov
sub
repz
gs
jl
jp
sbb
adc
or
sub
xchg
aam
adc
insl
mov
lahf
push
test
or
rorb
cltd
into
push
dec
ljmp
jg
stos
adc
xor
mov
xchg
or
rorl
or
xor
bnd
ljmp
cs
or
iret
aad
dec
sbb
je
rol
faddp
add
inc
mov
jo
fisttpl
repz
jle
ret
enter
das
push
repnz
int
mov
cmp
jle
or
sub
mov
push
jns
ret
dec
sub
inc
jne
test
xor
mov
sub
jmp
xchg
mov
insb
shrl
pop
xor
cmp
sahf
cmp
and
icebp
jne
jnp
pop
fbld
jne
push
mov
shll
xor
sub
je
or
sub
imul
and
scas
mov
jmp
add
cmp
xchg
sub
stc
flds
mov
jle
push
clc
pop
pop
mov
or
xchg
lret
repnz
pop
add
or
dec
in
and
test
rcrl
push
push
das
imull
dec
stos
pop
in
movsb
push
cmpl
push
add
test
mov
stos
adc
out
fwait
mov
push
sub
cmp
jl
mov
outsl
jecxz
test
jo
das
push
dec
lds
adc
cmpsb
je
popf
jne
shlb
out
xor
enter
sbb
fwait
fwait
push
jnp
test
mov
mov
jg
xor
sbb
mov
scas
clc
cwtl
popa
pop
scas
jp
mov
jecxz
and
mov
push
scas
outsb
dec
arpl
stos
lods
scas
jge
dec
xchg
testl
mov
dec
xlat
out
dec
xlat
sub
rclb
movsl
and
dec
add
lahf
xchg
mov
mov
jle
scas
roll
push
iret
hlt
lods
aas
mov
scas
outsb
inc
xchg
stos
push
loopne
mov
mov
test
dec
test
pop
pushf
add
gs
icebp
cs
ljmp
cmp
jb
mov
stos
push
and
jno
push
pop
jae
mov
sub
fs
jg
mov
mov
mov
inc
pop
iret
subl
ds
jns
jmp
dec
or
sbb
mov
ja
jno
jl
dec
pop
xchg
mov
mov
das
in
ret
jb
xchg
dec
jg
add
xchg
or
add
das
fsub
inc
je
jne
test
add
shrb
mov
sub
sarb
mov
sub
std
mov
mov
dec
mov
pop
aam
xchg
loopne
xchg
clc
and
lret
push
clc
ss
and
out
mov
and
jge
pop
mov
push
aaa
lds
pop
push
inc
lods
dec
mov
xlat
jb
dec
sbb
je
data16
pushf
daa
cmpsl
pop
jle
int3
sarl
ret
dec
adc
rol
fcompl
outsl
cmpsb
or
in
sbb
mov
int
nop
aas
inc
test
sub
ret
xlat
jp
repnz
in
dec
dec
dec
fwait
call
adc
out
outsb
cmp
mov
mov
fcomp
and
mov
xor
or
cmp
daa
jno
in
sub
js
ss
popa
gs
lret
into
pop
push
imul
mov
fwait
daa
sbb
cld
call
mov
cmp
mov
inc
push
shrb
movsl
daa
cmp
call
cmp
int3
ds
cmp
push
xorl
mov
fistpll
fs
aam
mov
jle
test
jl
and
arpl
xor
mov
out
jne
shll
daa
test
xor
adc
push
imul
or
in
xor
xchg
lods
and
mov
aad
adc
or
mov
sbb
lret
sbb
or
scas
cwtl
clc
rcll
fs
mov
inc
roll
inc
sub
call
xor
inc
jge
jbe
fsubr
cmp
fwait
loop
cmc
add
push
mov
out
cwtl
xchg
add
or
scas
add
dec
inc
xor
mov
xchg
sbb
push
sbb
xchg
shl
dec
cwtl
xor
es
push
push
popf
in
mov
loop
jmp
stos
iret
mov
dec
push
mov
rclb
sub
sbb
jl
adc
int
sbb
mov
push
sub
scas
int
pop
test
lds
sbb
xor
dec
mov
movsl
cmp
mov
cld
pop
sbb
adc
or
and
inc
jne
ljmp
mov
lods
jno
sub
adcl
in
ljmp
xor
jmp
push
mov
lods
or
out
ja
iret
jnp
outsb
xor
dec
call
js
aam
xor
dec
push
mov
imul
fmull
out
jg
add
inc
aad
jno
lahf
add
push
repz
dec
fdivs
nop
lret
add
lret
lods
and
popf
cs
scas
jo
arpl
and
cmpsb
cld
add
jb
or
ret
cli
mov
push
jmp
sub
stos
sbb
push
dec
lds
jae
pusha
mov
inc
xchg
hlt
push
push
jecxz
adc
mov
lock
rol
push
xor
or
mov
or
test
mov
lret
push
pop
mov
lret
insl
or
mov
mov
sub
cmpl
test
ja
cld
lcall
ret
enter
lods
out
mov
call
mov
iret
mov
shlb
xor
aaa
and
cmp
popl
fwait
lds
xchg
pop
xor
mov
and
pusha
cs
and
std
leave
adcb
cmp
cmc
stc
jp
les
mov
jmp
icebp
sbb
or
fldcw
cmp
adc
cmp
mov
add
aaa
lods
mov
movsl
xor
test
imul
pop
ror
dec
push
pop
xchg
xchg
jp
mov
push
jp
data16
push
xlat
jae
or
mov
and
dec
das
cmp
ret
and
add
add
sahf
addr16
call
mov
fmull
mov
xlat
je
sbb
inc
mov
mov
dec
push
xchg
sbb
jecxz
sub
stc
sti
inc
ficomps
cmp
dec
pop
loop
movsb
lea
adc
mov
and
out
lock
imul
cmp
loope
and
dec
mov
adc
mov
je
xchg
les
out
jbe
sub
cmp
pop
movsb
cmc
pop
push
dec
leave
sub
adc
jae,pt
push
pop
test
dec
mov
sub
fimuls
ja
mov
cmp
or
push
int3
cwtl
cmp
les
mov
sti
jno
lods
gs
test
lock
fisttps
imul
xchg
sbb
in
adc
fldenv
scas
js
xchg
jnp
divb
scas
cmc
xor
movsl
mov
mov
add
je
loopne
mov
push
or
repnz
push
shr
jbe
or
test
inc
jge
ljmp
and
rolb
popf
in
cmpsl
mov
clc
pop
and
in
int
mov
iret
jno
xor
push
test
xlat
pusha
stos
std
lret
push
and
addl
mov
or
ja
dec
jo
movl
in
inc
mov
sbb
in
pop
xchg
repz
add
xor
mov
jb
jecxz
subb
stos
lea
inc
into
dec
dec
imul
xchg
pop
test
aam
push
mov
movsb
inc
sub
test
out
and
pushf
xchg
sbb
sbb
movsl
mov
push
sarb
jg
jnp
xchg
mov
or
xor
gs
cmp
repz
fcom
adc
xchg
pop
add
gs
mov
lret
pop
and
pop
jg
mov
stos
in
jg
mov
gs
mov
mov
or
mov
push
or
pop
cmc
jno
cli
scas
mov
leave
dec
test
int3
jne
ret
cmpsl
stos
sub
sub
cmovbe
ja
mov
pop
pop
xchg
push
and
shl
push
sbb
sbb
lret
mov
xchg
push
mov
xchg
fisubl
repnz
or
sub
cmp
in
test
push
pop
xchg
mov
ds
jmp
std
scas
imul
cltd
adc
mov
inc
pushf
mov
cwtl
cmp
in
add
sbb
cmp
inc
adc
aas
mov
and
fildl
rorb
addr16
xlat
fcmovnb
fisubl
scas
sbb
xchg
rcrl
adc
sahf
out
jo
mov
pop
leave
scas
dec
jb
and
test
inc
rcr
aad
nop
sbb
pushf
sbb
dec
outsl
add
push
lret
sub
fxch
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
or
lret
das
jbe
and
jg
add
in
inc
mov
pop
mov
rcrl
repz
fcomps
mov
iret
sub
and
gs
jg
fstpl
mov
stc
add
jb
aam
pop
dec
mov
cmp
mov
loopne
dec
test
or
stos
filds
imul
pusha
xchg
and
mov
jle
xchg
hlt
sub
mov
or
dec
scas
cmc
xor
fs
inc
dec
cmpsb
ret
or
loopne
scas
negl
outsl
clc
xor
fstl
je
or
in
insb
in
outsl
cmpsb
leave
adc
mov
sbb
pop
test
ss
mov
adc
mov
int3
xor
mov
and
int3
push
cmove
iret
push
mov
loope
and
std
cmp
xor
jne
mov
dec
xchg
lret
das
jbe
and
jb
add
mov
xor
rcrl
divl
mov
iret
sub
and
test
sbb
mov
stc
add
outsl
mov
aas
pop
dec
test
xlat
loopne
dec
test
or
pop
shrb
cmp
jge
mov
fstpt
inc
xchg
fdivl
outsb
mov
or
dec
scas
cmc
xor
fs
fsubs
ret
or
loopne
scas
negl
pop
xchg
faddl
popa
clc
xor
mov
and
mov
push
outsl
cmpsb
leave
adc
mov
sbb
pop
test
xor
mov
mov
addr16
mov
pop
cmpsl
xor
jnp
sub
sti
pop
mov
stc
add
inc
js
int
xor
jne
mov
fcoms
lret
fldt
das
push
pushf
in
jbe
add
stos
out
in
adc
in
lds
jns
ljmp
add
xchg
in
in
and
inc
mov
sbb
ljmp
in
dec
xchg
imul
mov
ds
adc
frstor
in
ret
xchg
cmpsl
fildll
mov
and
hlt
cmp
dec
mov
mov
xchg
push
sbb
pop
cmp
dec
sub
cmp
rcrl
out
add
int3
data16
sbb
dec
addl
div
inc
xchg
fdivrl
popa
stc
xor
ficoms
pusha
stos
pop
dec
ljmp
mov
add
incl
in
es
cmp
mov
mov
or
push
mov
adc
fdivs
sub
pop
mov
sub
out
inc
js
shr
xor
setge
lret
xor
push
pushf
in
jne
add
mov
xor
jmp
jnp
dec
adc
ljmp
in
and
pop
stos
aaa
jg
out
fs
and
sarl
xchg
xchg
and
int3
or
mov
cmp
xchg
xlat
loopne
push
test
mov
stos
pusha
add
pop
hlt
cmp
aaa
stos
mov
fcmovnu
jno
xchg
hlt
sub
mov
cmp
dec
mov
ret
sbb
mov
inc
dec
mov
pop
dec
andl
xchg
fmull
stc
xor
xchg
ficoms
loop
pop
dec
es
and
xchg
hlt
push
mov
or
cmp
inc
mov
mov
sbb
jno
in
ss
lret
mov
out
lock
xchg
dec
sbb
or
and
int
movnti
iret
push
and
xor
ds
sbb
fidivrl
loop
mov
xchg
xchg
jo
mov
fwait
push
nop
dec
mov
pop
fwait
gs
jg
orb
lahf
jae
adc
test
xor
mov
pop
push
cmc
cmp
ficomps
mov
iret
xor
and
mov
adc
in
enter
out
sahf
adc
aaa
imul
xor
out
aaa
jg
xlat
mov
add
mov
or
lds
pop
sub
jl
xchg
sub
sbbb
mov
es
lcall
shlb
dec
out
test
inc
xchg
das
xor
add
xchg
ret
or
sub
mov
cs
xchg
stos
cli
push
pushf
sbb
movsl
mov
push
adc
adc
es
cmovbe
ljmp
mov
loopne
int
pop
mov
push
cltd
in
jge
cmp
mov
or
fldcw
imul
icebp
ss
nop
les
icebp
test
push
mov
push
sub
not
lahf
mull
mov
xor
and
pop
jp
leave
push
inc
cwtl
fldcw
insb
mov
out
aam
subb
dec
mov
jg
adc
test
cmp
movsb
out
in
xor
das
mov
push
mov
sbb
div
aaa
jb
sbb
add
push
es
xchg
fmuls
jns
lret
or
lret
aad
out
sub
mov
stos
andl
cmpsb
loop
outsw
jl
shll
lret
inc
gs
cli
or
xor
xbegin
sub
jbe
cld
xor
aam
sub
cmpsb
mov
aad
sbb
imul
addr16
inc
mov
daa
adc
scas
outsb
dec
cltd
sbb
lcall
bound
dec
mov
push
mov
jl
ret
icebp
push
fbld
jb
cwtl
xor
sbb
jno
ficoms
movb
push
das
jbe
enter
sbb
fcmovnu
add
pop
add
jl
repz
or
mov
xlat
add
nop
iret
push
mov
jae
mov
jl
fstp
push
fldcw
mov
push
inc
in
jmp
jl
iret
adc
or
cld
addr16
adc
jg
mov
jno
out
sbb
and
mov
dec
fisubs
stos
repz
pop
imul
jo
aam
inc
mov
jbe
mov
in
jb
call
fdivrl
mov
lret
adc
dec
add
jb
scas
in
mov
xor
ljmp
cmc
fsubrs
push
xchg
into
ljmp
jge
push
adc
es
insb
jl
leave
mov
add
cmpsl
cltd
pop
aad
dec
mov
mov
or
sub
sbb
mov
mov
ret
or
mov
jecxz
inc
xchg
lret
and
gs
stos
movsl
mov
push
jns
jne
adc
es
cwtl
fsubl
pop
mov
xlat
add
ret
dec
mov
dec
xchg
fisttpll
sub
jp
in
int
lods
fsubrl
int
scas
adc
push
jl
fistps
xor
cli
outsb
jg
add
pusha
loopne
out
sub
adc
imul
out
or
adc
mov
std
xor
jle
nop
aas
mov
lret
cmp
lahf
fldt
xchg
adc
jae
cmp
push
pop
test
or
cmp
or
adcl
mov
in
jne
xor
into
sbb
shl
pop
lahf
lea
pop
test
aaa
mov
inc
adc
test
sbb
or
in
push
stc
push
imul
or
dec
shrb
push
mov
jns
aam
mov
stos
push
pop
push
mov
data16
sbb
js
xor
jb
add
movsb
mull
adc
mov
xlat
push
jle
jmp
jecxz
xchg
dec
or
xchg
hlt
adc
pop
lahf
sub
sahf
mov
mov
push
push
mov
and
mov
add
or
sbb
mov
fcmovnb
repz
mov
or
lock
int3
lcall
xor
cmpsb
out
js
add
xor
outsb
cmpb
pop
push
test
cmp
rcrl
scas
xchg
adc
push
lcall
int
xchg
rorl
addr16
inc
mov
int
cmp
xor
ss
push
jge
cmpsl
lret
add
xor
mov
xchg
sti
xor
or
sbb
pop
jae
fsubrs
jg
xchg
out
sti
and
jecxz
jp
inc
push
pop
arpl
xlat
sti
and
pop
inc
cmpsb
ljmp
jle
not
push
das
jmp
and
xor
adc
stc
add
dec
mov
ret
add
insl
mov
or
jb
or
dec
gs
xchg
sbb
mov
loope
sbb
or
testb
mov
dec
js
sti
cmp
or
leave
loop
cwtl
add
mov
sub
fstpt
mov
pop
jns
rcll
sbb
jnp
lret
cmp
stos
mov
inc
mov
or
adc
sub
and
and
leave
or
stc
push
jl
int3
aaa
mov
jb
shr
pop
stos
xor
fistpl
fst
dec
inc
cmpsl
xor
loopne
push
out
pop
lods
mov
mov
insb
push
nop
rcrb
sti
sub
idivb
lret
mov
std
fstpt
mov
in
pop
movsb
cwtl
jg
nop
mov
aad
add
xchg
push
cmp
jle
out
lret
fwait
iret
mov
sahf
sbb
and
pop
mov
into
fnstsw
dec
dec
je
or
mov
out
dec
xchg
cmp
inc
fsubrs
mov
ret
bound
fimuls
vmovups
jb
ljmp
fldenv
loope
shll
mov
cs
cmc
popf
outsl
push
jne
test
in
xchg
or
mov
lea
outsb
inc
lds
push
popa
xchg
xlat
je
jb
enter
fsubp
inc
jo
adc
xchg
xor
pop
jns
shll
pushf
fadds
dec
jae
int
adc
mov
dec
cltd
xor
iret
push
mov
xchg
or
push
repz
inc
ljmp
sub
xchg
pop
jl
hlt
daa
sbb
lds
ret
xor
mov
pop
pushf
xchg
int
loopne
ja
xor
jg
add
mov
jmp
sahf
sbb
mull
inc
pop
cwtl
enter
fld
negl
pop
iret
push
shl
jae
fisubs
cmp
or
in
add
repz
xor
mov
aaa
jg
aam
mov
nop
in
add
test
or
pop
pusha
xchg
sbb
scas
in
jge
ficoms
push
outsl
cwtl
aad
in
cmp
sbb
sub
dec
divl
mov
cmc
xchg
icebp
daa
lret
sahf
mov
fnstcw
clc
cmp
xor
jo
xor
test
xor
cmp
jp
lcall
and
jns
pop
aaa
lahf
xchg
add
jecxz
jae
ret
out
adc
cmpsb
fcompl
xchg
push
pop
outsl
lcall
adc
mov
dec
mov
cmp
add
dec
in
sbb
jne
sub
call
mov
and
mov
js
mov
pop
out
out
jns
ljmp
addr16
xchg
pushf
sub
data16
and
xor
jl
shll
pop
fsubrl
xor
sub
loopne
dec
mov
sub
aam
jo
lds
and
mov
sub
pop
jbe
les
in
pushl
adc
adc
fiaddl
adc
push
jnp
int3
push
mov
or
push
hlt
lret
ds
std
and
ljmp
push
movsl
and
cmp
call
stos
idiv
cmp
pop
outsb
lock
mov
xchg
iret
jle
roll
int3
sti
push
mov
add
push
cmpsl
or
mov
add
or
std
out
addr16
dec
mov
push
and
fsubrl
les
push
xchg
out
push
mov
push
pop
cltd
in
jns
xor
aam
inc
xchg
jmp
jge
repz
sub
and
inc
fstps
sbb
ja
ret
mov
mov
test
xor
sbb
push
add
mov
scas
xchg
inc
loope
pop
xor
xchg
arpl
lret
xor
or
pop
jecxz
fs
aaa
outsb
sbb
inc
dec
cmpsb
bound
scas
idivl
outsl
clc
xor
fstl
js
or
into
and
aaa
repz
mov
cmpsb
mov
pop
mov
sbb
sub
in
cmp
mov
insb
jno
int3
xor
mov
and
jae
stos
or
xor
mov
int3
or
out
divl
mov
fcmovnb
gs
jne
into
or
hlt
inc
scas
out
push
popf
out
and
lds
push
mov
add
pusha
inc
ja
add
movsb
pop
jge
jae
