mov
aaa
and
xor
shlb
mov
scas
lahf
mov
pop
shlb
decb
ja
add
notl
repnz
inc
mov
imul
cmp
sbb
inc
mov
mov
sbb
fs
add
fbld
add
test
subb
scas
mov
insl
addr16
fisubrl
fs
test
ret
xor
lods
lea
fiaddl
mov
sub
mov
push
aad
pop
aad
mov
pop
pop
add
sbb
xor
mov
shr
or
jnp
jne
jl
mov
ja
inc
and
pusha
jle
movsl
sbb
lods
and
popa
jb
cli
inc
and
test
loopne
mov
cld
fbstp
jb
push
or
cmpl
xchg
dec
les
add
and
loope
mov
or
mov
daa
adc
daa
mov
icebp
xlat
or
fwait
arpl
sbb
shlb
iret
jp
dec
or
mov
mov
ja
cmp
sbb
std
mov
enter
ljmp
sbb
and
xor
cmp
mov
mov
cmp
fsubs
lea
mov
jle
sti
or
fcomp
cmp
cmc
cmp
lock
scas
loopne
mov
mov
out
cmp
fwait
cmp
xchg
sbb
mov
fs
clc
or
sub
cmp
cmp
xchg
mov
sahf
scas
mov
call
pop
fstp
or
pop
inc
push
and
into
mov
in
lahf
xor
xchg
mov
pop
inc
and
dec
push
mov
cmpsb
or
adc
jb
shlb
and
push
cli
and
pop
cmpsb
xor
sbb
cmp
in
adc
test
std
imul
jecxz
mov
adc
sbb
cli
loope
mov
mov
aaa
cmp
fildl
jecxz
mov
push
push
shrb
mov
mov
sbb
mov
jmp
mov
adc
test
rorb
push
je
push
sbb
dec
adc
in
push
adc
loop
cli
mov
lcall
pop
pop
xor
addr16
inc
mov
mull
aaa
sbb
cli
push
mov
insl
arpl
cmp
fstps
shrb
pop
add
sbb
subb
jns
in
pop
test
test
in
fstl
ljmp
clc
mov
addr16
ret
ficomps
aaa
ffreep
push
or
cmp
inc
ud2
mov
sbb
or
xor
in
xor
flds
prefetch
filds
dec
mov
jo
and
and
or
outsl
fs
data16
into
or
adc
jecxz
nop
sti
aaa
test
and
xchg
jnp
fbstp
pop
mov
cltd
mov
and
mov
lea
add
jae
inc
mov
xor
std
pusha
xor
pop
aam
pop
call
add
dec
adc
test
repz
scas
lea
lods
movsb
inc
pop
out
jecxz
inc
push
add
call
jns
xchg
rclb
push
push
pushf
data16
jmp
xchg
iret
das
insl
push
mov
mov
inc
mov
ret
dec
mov
movl
mov
mov
sbb
icebp
in
into
repnz
mov
out
pop
movsl
inc
lahf
adcl
faddl
loopne
inc
inc
incb
mov
or
sbb
mov
enter
filds
or
jle
mov
dec
jns
push
pushf
pop
arpl
jle
mov
movsl
scas
popa
sub
xor
movl
sti
test
xor
mov
mov
loopne
xchg
inc
outsl
push
inc
arpl
add
lock
add
inc
mov
jp
mov
ja
mov
jno
gs
ljmp
repz
int3
xor
xchg
aad
or
fsubrs
pop
mov
out
stos
loope
cmc
mov
dec
sbb
jg
cmp
pop
cmp
stos
xor
std
sbb
andb
xchg
lea
xorl
shlb
in
je
jp
push
push
sub
sub
addr16
ljmp
inc
out
xchg
sub
jg
cli
mov
mov
call
ljmp
add
fisubs
daa
xchg
scas
fwait
test
dec
pop
jle
popa
and
xor
cmp
jbe
cmpb
stos
iret
jo
mov
insb
xor
jecxz
push
lods
je
lds
mov
jmp
push
in
popa
in
js
jnp
xor
jecxz
orb
cmp
int
fsubp
cmp
adc
sub
xchg
repz
sub
xor
lret
jns
fidivrs
mov
icebp
ficoml
pop
std
xor
mov
sub
xchg
js
popa
icebp
mov
lahf
push
dec
jbe
add
xchg
jae
mov
and
xchg
hlt
bnd
mov
cmpsl
sbb
xor
jmp
and
sub
loopne
and
sahf
xor
dec
mov
pop
in
xor
dec
decb
loope
fisttps
mov
and
insl
jbe
inc
pop
jo
mov
inc
sbb
xchg
sti
fwait
and
icebp
and
jnp
loope
out
into
leave
movsl
or
movsl
mov
outsl
mov
lret
fisubl
sbb
je
iret
ret
dec
cli
mov
in
ljmp
cmp
aam
pop
mov
scas
push
cltd
jl
jl
mov
outsb
mov
fists
push
pop
jnp
and
ret
dec
xorb
pop
pop
popf
sub
push
cmp
call
mov
aaa
jle
xchg
into
xor
fildll
subb
cmp
stc
mov
sahf
cmpsl
lea
cbtw
mov
xchg
je
out
jbe
mov
pop
shrl
mov
mov
cmp
iret
pop
stc
push
sub
out
movsb
aas
mov
scas
sahf
cmp
or
fnstcw
leave
hlt
mov
insb
add
xor
ljmp
ja
sahf
xchg
mov
dec
scas
mov
cs
xchg
xor
in
dec
mov
les
and
lds
xchg
lret
sbb
in
mov
dec
mov
fstpl
xor
inc
xchg
mov
or
sbb
fldt
cmp
test
outsb
push
lahf
cmp
roll
xchg
cmp
cmp
or
xor
es
sahf
testb
subl
std
sub
rclb
lret
push
ljmp
mov
imul
fisubrs
mov
aam
lret
stos
push
outsb
outsl
pop
sub
push
fbstp
push
movsb
push
push
fcoml
call
bound
popa
jge
or
or
roll
call
xlat
push
xor
mov
ret
outsb
or
sub
hlt
xor
ret
push
adc
out
insl
cs
testl
jne
subb
shr
cmp
and
movsl
cmp
mov
stc
ret
es
xor
repz
and
negl
jo
add
stos
and
out
sub
jo
mov
mov
sub
idiv
cmp
cmp
ljmp
pop
add
jnp
jno
pop
std
adc
into
rcrl
jae
and
mov
fs
stc
and
bound
in
leave
jle
adc
jp
imul
cmc
cmp
jp
es
cmpb
leave
mov
mov
test
dec
xor
mov
fidivs
popf
fists
insl
xor
std
cmp
in
repz
pusha
dec
aam
in
push
pop
push
cmpsb
xchg
test
jno
lahf
push
jmp
mov
pusha
ds
cli
mov
mov
push
mov
inc
lea
call
mov
inc
call
imul
push
mov
call
sub
imul
inc
xor
lea
mov
call
inc
and
lea
sub
sub
dec
and
xor
inc
inc
add
mov
mov
mov
call
inc
add
movzwl
add
add
call
mov
mov
call
add
lea
mov
inc
dec
dec
lea
inc
inc
pop
imul
mov
sub
add
lea
pop
dec
dec
pop
dec
xor
add
or
pop
dec
add
lea
dec
sub
and
mov
inc
pop
mov
xor
pop
add
inc
mov
mov
mov
call
xor
dec
dec
inc
ret
inc
mov
push
sub
inc
push
add
dec
push
inc
push
mov
xor
push
add
lea
mov
imul
add
push
and
ret
push
dec
add
sub
or
add
add
inc
push
add
or
movzbl
call
pop
ret
jmp
or
and
dec
lea
movzbl
sub
dec
xchg
lea
inc
inc
imul
xor
movswl
movzbl
dec
mov
inc
mov
add
dec
jne
imul
mov
mov
xor
pop
add
movzwl
pop
movsbl
xor
pop
mov
inc
mov
dec
inc
add
mov
add
add
lea
movzbl
add
ret
push
push
dec
movzbl
push
inc
inc
sub
inc
mov
mov
push
mov
mov
mov
sub
push
movsbl
dec
dec
add
dec
imul
mov
push
dec
mov
dec
push
mov
mov
xor
dec
inc
push
mov
dec
push
and
inc
pushl
movsbl
call
dec
add
lea
mov
inc
imul
mov
mov
mov
pop
ret
mov
cmp
jb
sub
xor
add
mov
inc
mov
movswl
inc
xor
inc
mov
xor
sub
dec
mov
dec
mov
cmp
jb
inc
pop
mov
add
inc
add
mov
sub
dec
or
lea
sub
inc
inc
sub
add
xor
add
inc
xor
dec
mov
dec
movzwl
test
jbe
lea
imul
inc
movzwl
imul
inc
sub
add
lea
mov
dec
and
add
add
mov
lea
movzbl
movzbl
mov
add
movswl
lea
and
xor
sub
mov
mov
mov
add
add
mov
lea
sub
mov
sub
mov
inc
dec
add
and
dec
jne
mov
mov
lea
mov
add
mov
or
mov
inc
add
xor
lea
mov
mov
dec
dec
mov
add
inc
xor
inc
mov
inc
and
test
jbe
dec
and
lea
xor
or
add
mov
mov
mov
mov
add
mov
dec
mov
inc
inc
mov
imul
lea
mov
lea
lea
and
lea
mov
mov
movswl
inc
movzbl
mov
mov
add
dec
or
and
inc
add
mov
inc
lea
movzbl
mov
sub
mov
movswl
mov
mov
add
lea
movzbl
sub
mov
add
imul
jmp
push
sub
inc
inc
add
sub
mov
imul
imul
imul
mov
inc
dec
mov
mov
imul
xor
movswl
inc
mov
imul
inc
movzwl
dec
movswl
dec
sub
mov
lea
dec
dec
add
inc
inc
mov
inc
add
inc
dec
sub
cmp
je
add
or
and
push
or
call
call
mov
sub
call
call
imul
dec
imul
movsbl
mov
dec
sub
ret
dec
dec
pop
dec
ret
push
add
imul
inc
mov
dec
push
mov
lea
push
add
push
movzwl
push
and
dec
lea
mov
lea
call
mov
push
add
mov
xor
inc
sub
sub
neg
sub
xor
inc
inc
dec
mov
mov
add
add
mov
mov
inc
inc
mov
inc
dec
je
inc
dec
or
mov
add
imul
mov
inc
inc
sub
imul
repnz
lea
mov
add
dec
jmp
inc
dec
dec
mov
inc
mov
dec
inc
jmp
movzwl
mov
dec
sub
inc
inc
movsbl
add
pop
pop
ret
push
mov
inc
lea
inc
add
dec
lea
sub
add
mov
mov
mov
lea
inc
and
inc
add
mov
xor
dec
inc
add
sub
mov
mov
dec
pop
ret
sub
inc
mov
sub
dec
mov
dec
mov
mov
lea
add
mov
dec
dec
xor
lea
mov
mov
inc
inc
inc
and
add
mov
mov
add
add
cmp
jb
lea
push
dec
add
push
sub
imul
push
lea
mov
xor
movzbl
mov
xor
mov
lea
xor
dec
inc
push
imul
mov
mov
inc
add
xor
mov
or
mov
xor
lea
mov
dec
mov
movzbl
xor
sub
inc
sub
add
inc
add
imul
and
movzbl
dec
and
imul
lea
mov
inc
lea
inc
imul
inc
mov
dec
mov
dec
inc
jmp
push
aaa
outsl
nop
or
adc
fucomip
popa
inc
or
pop
sarb
mov
jge
int3
nop
mov
pop
adc
std
jmp
inc
inc
cmp
repz
adc
mov
sub
pop
or
fadds
mov
mov
pop
and
or
inc
fmul
pop
mov
inc
subb
mov
stos
inc
add
test
pop
mov
jbe
jno
push
jecxz,pt
rcr
dec
int
out
js
int
addl
and
arpl
iret
and
mov
loopne
pop
mov
adc
jns
aaa
flds
or
adc
rcrb
cmp
pop
stos
pop
dec
jae
sti
xchg
push
push
mov
push
int
or
out
push
sbb
faddl
in
je
or
jnp
mov
leave
loope
cmp
xor
sbb
bound
rcrb
xor
add
mov
les
jle
test
outsl
fldl
lfs
and
xor
daa
pop
pop
sarb
and
and
mov
xor
sti
sbb
lcall
call
testb
movsb
cvtps2pd
fnclex
sub
loopne
ja
dec
lcall
push
push
pushf
add
ret
out
mov
jnp
adcb
cmpsb
push
scas
insb
lret
and
clc
jns
sbb
dec
push
jp
push
shr
and
outsl
xchg
xchg
push
xchg
pop
jp
mov
scas
sub
pop
jae
stos
cmp
push
dec
test
bound
pop
and
movsl
std
shlb
idiv
cmpsl
popa
mov
and
nop
ret
jg
mov
outsl
push
mov
or
adc
nop
pop
enter
repz
inc
dec
push
hlt
mov
push
aaa
mov
xchg
xchg
mov
inc
insl
sarl
pop
std
cmpsb
mov
sbb
add
mov
out
fstpl
shrl
rcll
iret
jne
and
popa
jb
jbe
stc
mov
testl
pushf
jo
pop
cwtl
popa
dec
shll
and
pop
adc
stos
repz
xchg
in
ja
ss
jae
mov
xchg
arpl
lds
cmp
push
aas
mov
bound
cmp
push
and
test
jne
sbb
push
cwtl
out
inc
or
inc
out
lods
pop
mov
loopne
fwait
cmp
hlt
push
mov
fucomp
push
xlat
gs
sbbl
pop
shr
outsl
add
pop
popf
outsl
in
fcoms
lea
jg
jp
je
pusha
mov
inc
insb
idiv
std
rcrl
cld
mov
xchg
jne
and
xchg
xchg
mov
mov
push
cmpl
in
movsb
push
push
add
rcrl
test
sub
rolb
xchg
out
xchg
clc
mov
cwtl
inc
jmp
icebp
lcall
pop
adc
xchg
test
stc
add
lds
rcrb
mov
pop
adc
loopne
andl
imul
or
movsl
xor
adcb
push
cs
jecxz
movsb
mov
aaa
aam
sub
inc
pop
pop
dec
jle
sahf
add
mov
sbb
jg
dec
push
test
fistl
dec
iret
dec
sbb
mov
ret
mov
jecxz
jmp
or
ret
xchg
imul
arpl
les
push
mov
cmpb
push
push
pop
mov
sbb
call
or
aad
and
pop
adc
rolb
ss
movsb
jnp
jle
js
sbb
test
jns
movsl
cs
adc
dec
gs
xchg
adc
fiaddl
jl
orb
mov
and
sbb
adc
inc
jno
dec
mov
push
jge
cmp
and
ljmp
sub
aaa
jbe
jle
andl
addl
and
push
sbb
or
hlt
mov
mov
push
into
out
popa
arpl
fwait
inc
ret
loop
enter
fmul
pusha
mov
das
pusha
out
in
stos
xor
mov
rorb
cli
jb
mov
jg
imul
arpl
pop
sbb
call
pop
mulb
pop
mov
lods
cmp
pusha
mov
xchg
cmp
test
repnz
push
movsl
cmp
xchg
fwait
pop
xchg
xor
and
mov
mov
rcrl
add
lret
cmp
inc
inc
adc
xchg
nop
mov
sbb
sbb
jge
mov
lcall
jl
jmp
fimull
repnz
xor
addl
int
fsts
out
dec
jp
daa
stos
fisttpl
fisttpl
mov
ficoml
inc
pop
fidivl
fwait
rcll
mov
stos
adc
sbb
push
push
sub
jbe
call
cmpsb
pop
lret
dec
adc
jle
sbb
iret
push
dec
inc
dec
xor
aaa
cmc
inc
in
sub
add
popf
imul
sbb
leave
xchg
inc
mov
or
ja
push
or
dec
addr16
pushf
or
std
stos
cmpsb
push
inc
leave
mov
inc
sub
push
and
in
lcall
pop
insb
pop
ss
lahf
add
xchg
ss
cwtl
movsl
cltd
adc
into
jbe
aam
enter
inc
push
daa
fadd
xor
std
jle
gs
cmp
lret
popa
popa
ss
fistpl
and
sub
lea
popf
push
mov
test
out
sbb
sub
dec
sbb
out
nop
lcall
testl
sbbb
pusha
inc
stos
aam
imul
dec
xor
fcmovnu
xor
sbb
jl
lcall
into
inc
adc
loope
out
push
decb
cmp
cld
xchg
xor
fisubl
ret
xchg
fnsave
pop
pop
push
dec
sti
movsl
in
fcomi
mov
mov
mov
cwtl
imul
lret
mov
int3
repz
fimull
mov
xor
fcom
dec
jle
test
ret
test
lea
mov
loop
pop
jp
jb
inc
sahf
fwait
test
jmp
adc
or
xchg
mov
mov
icebp
xor
sub
bound
mov
or
mov
xor
cmp
dec
and
add
adcl
in
mov
cmc
xchg
ret
cmpsb
clc
int3
das
mov
cs
fbstp
mov
inc
and
mulb
arpl
jle
push
add
sbb
mov
jp
sti
mov
mov
fsubl
sub
je
cmp
test
sbb
ja
sub
cmp
sbbl
mov
add
jnp
test
shl
mov
jnp
lds
sub
cmc
sahf
mov
es
ds
jle
enter
inc
add
ds
daa
lret
inc
ret
enter
addr16
or
mov
and
mov
imul
xor
icebp
xor
push
pop
jl
cld
fsubs
in
xchg
cmp
addr16
cmc
xor
mov
roll
fdivr
xchg
lcall
sbb
out
mov
sbb
pop
dec
sti
hlt
cmp
popa
leave
adc
lret
jmp
xor
push
adc
fimull
ficompl
mov
cmc
bound
inc
add
cld
int3
add
int
ja
push
es
ja
xchg
test
xchg
adc
xchg
test
adc
push
mov
add
ja
faddl
cmpsb
popa
dec
in
dec
dec
pop
movsb
or
dec
fldl
lods
jmp
xchg
mov
jnp
mov
xorb
pop
in
jle
jbe
inc
cmp
notl
insb
mov
out
out
ds
cmc
scas
jle
lds
rolb
jmp
mov
rorl
dec
mov
mov
sbb
dec
push
xor
notl
lcall
outsl
inc
leave
jno
imul
pop
add
adc
mov
inc
mov
movsl
jbe
hlt
out
aas
add
addr16
cmp
jns
pushf
test
addl
aad
add
cmpsb
or
inc
testl
mov
jo
mov
mov
incl
pop
mov
mov
int
mov
xor
mov
shr
cltd
stc
fnstenv
sub
mov
mov
sub
lods
jmp
pop
xlat
pop
mov
and
cmp
inc
fnstcw
cmpsb
mov
pop
mov
mov
lods
pop
jge
add
dec
fstpl
lcall
pop
outsb
adc
jg
push
cmp
cmc
sub
mov
add
xchg
iret
out
sbb
push
in
pop
test
inc
test
fildll
sub
clc
cmp
mov
subl
ja
and
inc
adcl
pop
sbb
pushf
or
jno
idivl
jb
in
push
ja
and
xchg
fimull
pushf
or
adc
ret
inc
or
mov
out
cmc
jne
cmp
iret
lds
in
mov
and
xor
in
lea
xorl
mov
lods
iret
lret
and
mov
das
or
inc
jge
fcomp
inc
lahf
xchg
ret
pop
repnz
pop
and
fs
dec
jmp
jmp
iret
push
sub
rorl
es
pop
or
mov
ss
fwait
add
cwtl
pop
or
push
int
mov
loopne
sbb
push
stc
add
xorb
pusha
jb
ficoms
jge
mov
jge
ljmp
jno
insl
cmp
pushl
push
cmc
cwtl
mov
push
call
cmp
sarb
or
daa
int3
xchg
pop
popa
dec
pop
dec
mov
jg
call
jl
daa
mov
xor
push
mov
es
fnstenv
out
push
ret
sarl
iret
sbb
jge
das
daa
jg
repz
mov
lods
addl
or
xor
sbb
popf
call
pushf
sarb
dec
nop
imul
xchg
jnp
mov
mov
insb
inc
and
into
insl
xchg
jge
insl
pop
and
xchg
mov
shll
dec
movsl
in
pop
mov
pop
sub
xchg
cmp
and
aad
jnp
bound
std
push
add
mov
movsl
mov
ficomps
xchg
jno
cmp
xchg
adc
jbe
xor
inc
xor
sbb
add
and
inc
sahf
xor
sub
sub
pop
dec
cs
lret
sub
fsub
mov
daa
ret
mov
pop
mov
inc
iret
test
mov
adc
jecxz
inc
adc
xchg
iret
stos
decb
out
sbb
or
ljmp
rolb
adc
repz
cmp
lods
jne
roll
subl
jno
xchg
or
inc
insl
jmp
ret
mov
push
or
xor
pop
sub
dec
je
sbb
pop
inc
pop
or
jmp
and
mov
xchg
pop
and
sbb
pcmpeqb
mov
mov
xchg
repnz
das
or
push
lock
ucomiss
push
cld
fwait
divl
xor
fildll
lock
dec
xor
xchg
push
js
xchg
jno
add
xchg
cmp
pop
or
and
in
repnz
js
push
dec
mov
in
mov
enter
xor
add
sub
mov
insb
shlb
in
cmp
cmc
mov
add
jbe
clc
inc
mov
rcrb
ficompl
aaa
rcrb
add
sbb
shll
or
sub
xchg
xor
mov
dec
insb
add
or
mov
mov
xor
ret
add
sbb
cli
stos
das
leave
ds
loopne
adc
push
add
pop
ffree
ss
push
insl
and
sub
fwait
lret
mov
or
iret
scas
cmp
cmp
scas
mov
adc
adc
xor
lea
xchg
mov
jmp
xor
repz
pop
stc
cwtl
addr16
add
and
or
push
jbe
aaa
pop
mov
loop
xor
pushf
cli
ds
xor
push
mov
mov
movsb
fcomp
sahf
jg
aad
out
or
out
mov
sbb
mov
ss
and
mov
sbb
pop
out
xor
loope
aas
or
loop
lret
jmp
call
and
das
push
jo
jb
and
adc
popa
sbb
or
inc
lods
movsb
movsl
xchg
in
fst
imul
ds
ss
mov
jno
sbb
mov
push
dec
mov
scas
push
xchg
inc
pop
popa
jmp
add
adc
ret
orb
mov
notl
in
out
gs
cmpsb
out
pop
mov
test
or
jmp
jge
jae
out
shl
jl
into
fildll
push
movsl
test
cmp
sti
pop
or
les
lret
fs
bound
adc
clc
mov
jo
ja
and
dec
push
idiv
mov
xor
pop
aas
pop
cmp
cwtl
imul
repnz
clc
push
cld
jo
int
xchg
inc
std
jg
scas
clc
adc
cs
stos
add
mov
dec
mov
sbbl
and
xor
sbb
mov
pusha
fwait
jno
mov
mov
mov
stos
das
pop
imul
push
mov
cld
fwait
push
mov
enter
push
inc
or
adc
mov
inc
xor
push
inc
add
movsl
pushf
lret
inc
lds
sub
xor
adc
pusha
icebp
dec
movb
push
mov
aad
mov
jbe
sbbb
inc
mov
cmp
sub
and
xchg
les
lods
sahf
enter
mov
jecxz
inc
out
aad
aad
lock
add
pop
dec
sti
rolb
xchg
push
in
sahf
test
stos
enter
mov
jae
ds
cmpl
cld
push
and
push
sbb
hlt
loop
push
pop
jl
dec
adc
mulb
movsl
cmpsl
hlt
lret
xor
scas
test
pop
push
aas
jns
sub
xchg
lcall
aam
xor
sbb
clc
cmp
insb
xchg
scas
or
hlt
scas
fucomi
mov
or
jp
fmull
sbb
test
insl
aas
jge
scas
push
push
lods
sub
dec
and
int
sub
iret
and
mov
push
lock
jns
lods
test
repnz
xchg
lock
testl
xchg
inc
pop
lods
adc
divl
int
jo
cmp
push
lret
sub
ds
pop
outsl
in
shl
test
iret
dec
aas
icebp
push
fnstsw
mov
cmp
mov
push
mov
xchg
push
mov
sub
push
sahf
loop
mov
or
subb
mov
arpl
mov
test
fcomps
inc
add
movsl
mov
sbb
fwait
in
pop
push
bound
lahf
cmpsb
push
push
add
fsubs
or
ret
push
scas
testb
divl
dec
add
stos
fsubrp
fldl
ret
xchg
or
scas
lahf
movsb
dec
jnp
mov
adc
pop
cmp
cmp
pop
sub
fidivrs
imul
xor
sbb
or
test
and
sahf
jbe
aaa
fbld
sbb
ljmp
xchg
adc
cmp
push
dec
lea
imul
push
lds
mov
xchg
incl
push
gs
lret
and
jmp
nop
adcb
jecxz
sbb
int3
stos
mov
xor
jnp
insb
mov
inc
mov
rcll
ja
andb
cld
inc
aas
mov
or
or
call
out
xor
aas
jns
and
xchg
or
jae
aam
mov
fcoms
dec
pop
cltd
or
mov
pop
mov
xor
sar
pop
mov
fwait
nop
sub
and
scas
fwait
dec
out
adc
cmp
add
inc
daa
mov
daa
pushf
mov
call
loopne
add
lock
jge
jge
jo
sub
xchg
rclb
dec
xchg
mov
les
je
push
insl
scas
xchg
jbe
pop
sbb
sbb
cld
sbb
ljmp
pop
mov
jo
rol
add
sbb
xor
adc
negb
enter
cmp
add
sub
les
adc
jg
adc
jge
jno
ja
ja
cltd
push
ficompl
jae
cld
mov
test
xchg
mov
hlt
das
pop
jae
and
repz
push
lock
stc
loope
push
push
sbb
sti
repnz
mov
ds
adc
sub
and
or
in
or
xchg
jp
pop
icebp
push
notl
or
scas
dec
adc
push
mov
mov
inc
adc
jle
mov
inc
mov
lods
jno
push
aaa
mov
push
insb
inc
mov
rcrl
dec
sub
ja
mov
scas
leave
aad
lods
inc
shr
mov
mov
xchg
xor
sbb
lcall
jae
jno
int
dec
pop
mov
add
mov
push
jb
in
or
test
fisubrs
inc
loop
ds
sar
js
scas
jl
je
or
jl
sbb
xchg
pop
and
adc
xchg
and
mov
sub
sbbb
out
call
mov
xchg
testb
stos
iret
cmp
movsl
xlat
cmpsb
fcoml
ja
inc
inc
push
mov
popf
std
xor
lods
pop
add
fs
push
mov
or
lret
mov
jns
pop
sub
popa
out
sbb
out
cs
mov
mov
sarl
inc
jmp
mov
push
in
lods
pop
push
inc
or
push
shrl
shr
into
movsl
cltd
pop
fistpll
inc
sti
lds
in
fisubrs
enter
xchg
jb
ja
lods
test
add
pop
ret
xlat
dec
inc
and
shlb
filds
or
mov
push
fldenv
push
das
sub
mov
inc
out
xlat
data16
jecxz
or
or
push
cli
stos
push
in
jmp
adc
xchg
mov
adc
xlat
cmp
lcall
lcall
les
pop
pop
enter
or
pop
fmul
testl
mov
fcoml
jmp
adc
test
cltd
jne
inc
ror
xchg
stos
roll
adc
sbb
mov
jl
aas
xchg
pushf
ljmp
jl
aad
push
frstor
loop
or
fs
adc
xchg
cmp
pop
mov
arpl
pop
call
mov
and
aaa
pop
jb
cwtl
jmp
scas
aaa
jae
shrb
test
mov
sbb
xor
cmp
mov
ficoms
ss
xor
mov
je
push
bound
mov
cmpsl
ljmp
fisubs
mov
psubsw
mov
enter
test
fwait
movsb
sub
xchg
sbb
push
in
lret
mulb
loop
add
push
pop
in
push
rcl
ret
cld
mov
mov
test
inc
push
ds
or
int3
pusha
mov
adc
fwait
add
adc
inc
jle
hlt
sahf
out
push
sbb
push
fidivl
das
lock
dec
gs
mov
pop
cld
xor
idivb
mov
ret
push
sbb
test
popa
dec
sub
popa
iret
notb
cltd
cmp
add
adc
pop
daa
jp
pop
mov
push
sbb
push
push
mull
enter
loopne
mov
arpl
lock
insl
mov
dec
ds
test
xchg
sub
cmpsl
imul
inc
or
mov
xchg
xchg
mov
push
inc
mov
lea
cltd
add
lcall
xchg
bound
mov
nop
in
push
std
scas
jbe
sbb
cld
xor
arpl
sub
rorb
pop
fmull
xchg
push
jmp
mov
xor
or
hlt
test
repz
sub
lea
fs
push
hlt
fwait
xor
fistpll
jmp
push
ret
mov
aaa
fimuls
lods
mov
push
in
push
push
xchg
jg
ret
mov
fadds
imul
stos
clc
add
hlt
mov
xlat
rcr
dec
stos
cli
repnz
test
xor
mov
jbe
sahf
mov
cmpb
repz
push
mov
jnp
xor
pop
inc
lods
or
pop
xchg
movsl
imul
sti
cld
jae
push
adc
dec
cmc
dec
add
das
xor
mov
test
in
mov
fprem
xchg
inc
sti
lods
in
enter
dec
icebp
aam
enter
je
push
or
sbb
sbb
outsb
mov
mov
dec
inc
sahf
push
jno
lcall
and
mov
dec
push
adc
or
popf
test
testb
data16
jge
gs
and
inc
xchg
push
fiadds
push
inc
mov
cli
xchg
ret
sub
fsubr
pop
xchg
fdivp
dec
repz
jp
push
pop
mov
dec
pop
inc
and
ja
and
arpl
lock
fldl
jb
xlat
inc
outsb
js
adcb
shrb
pop
cmp
dec
insb
mov
addr16
idivl
fisubl
icebp
aaa
data16
mov
addr16
xlat
lahf
adc
xchg
and
sub
das
lahf
mov
cmp
shr
fs
push
adc
arpl
and
das
in
and
mov
sbb
in
pop
out
rcll
dec
int
fscale
dec
dec
ret
popa
cmp
push
pop
ror
pop
insb
push
and
cmp
mov
fdivrp
lea
pusha
mov
adc
mov
jne
inc
loope
inc
jo
mov
mov
sbb
dec
lret
icebp
flds
xor
xor
mov
pop
pop
out
aad
cmp
pop
cs
loope
pop
call
seta
fisttpll
mov
mov
int3
loopne
addr16
push
jae
icebp
and
call
movsl
into
cmp
xchg
loope
xchg
loope
ljmp
mov
ljmp
movsb
shlb
cwtl
add
out
or
insb
test
das
das
rcll
dec
fcmovnb
xchg
dec
mov
lods
inc
int3
into
test
jae
dec
icebp
push
lods
aad
data16
mov
fisubrl
ret
out
push
andb
test
lret
sbb
xchg
jno
jno
and
dec
sbb
fldenv
dec
repnz
add
cmpsl
je
mov
ljmp
std
scas
inc
mov
and
mov
jle
cmpsb
push
fildll
jne
xor
scas
roll
es
fdivr
das
xor
loopne
popf
push
xor
enter
shr
adc
imul
rcll
sub
dec
stc
dec
mov
lret
out
mov
loop
xor
aaa
cmp
dec
repz
mov
mul
mov
stos
shlb
sbb
push
jl
adc
mov
jae
mov
test
cwtl
push
lret
pop
or
jmp
cmc
push
andl
or
pop
xlat
mov
push
insl
repnz
adc
and
cli
fs
xchg
leave
mov
fsubrs
ret
aaa
mov
mov
sarb
jecxz
inc
sbb
jbe
imul
sahf
mov
add
divl
les
mov
insl
aam
and
adc
and
add
repz
std
std
sub
adc
test
testl
arpl
gs
jbe
and
into
lret
cmpsb
out
scas
popf
xor
or
daa
out
ss
lret
mov
scas
cmpsl
mov
adc
cmp
fs
xor
movsb
push
xacquire
mov
nop
xorps
mov
or
jmp
ja
jne
mov
int3
push
push
dec
pushf
int
ffree
adc
and
lds
mov
out
addr16
xchg
shrl
push
int3
arpl
mov
ffreep
imul
xchg
xor
or
aam
push
sti
nop
sbbb
ljmp
pop
in
insb
and
arpl
push
pop
add
cmp
fcmovne
cmp
fsubrs
xor
mov
push
mov
add
jecxz
or
mov
jecxz
icebp
adc
outsl
aad
push
mov
push
push
xor
scas
ret
jecxz
push
repnz
int
xchg
rcrl
sbb
jl
mov
sarb
testl
xlat
pop
push
loope
out
fs
call
or
dec
push
lods
out
call
push
arpl
repnz
sti
and
sti
daa
loope
rorl
aaa
inc
in
test
push
push
lret
inc
stc
xchg
inc
or
and
adc
shl
xchg
mov
addb
iret
leave
addr16
cltd
pop
adc
xchg
imul
push
sbb
cmp
or
jle
mov
mov
mov
into
jmp
push
pop
sub
dec
test
xor
mov
sarl
lea
js
loopne
jne
pop
inc
push
and
cmp
inc
or
inc
pop
sbb
aam
mov
push
imulb
inc
cs
inc
xchg
fadds
ja
test
xor
rolb
rcrl
fiaddl
test
cmp
inc
jb
or
shrb
mov
loopne
push
push
pop
jbe
enter
mov
pop
lahf
sub
or
arpl
pop
adc
pop
in
cmpsl
push
std
scas
adc
jge
in
inc
std
enter
loop
mov
inc
stos
adcl
push
mov
rorl
out
push
aaa
mov
stc
iret
cmp
arpl
add
adc
dec
icebp
inc
sbb
push
fnsave
mov
xchg
sub
or
loope
push
add
cli
ret
mov
dec
shl
add
iret
adc
lods
adc
orb
sarb
sbb
inc
test
xchg
pop
ss
mov
jo
cmp
iret
sbb
out
inc
les
in
notb
stos
pop
repnz
sbb
hlt
aaa
mov
ss
pop
cmp
fldcw
popf
push
mov
mov
pop
scas
movsb
test
sarl
repz
adc
xchg
mov
inc
adc
inc
sar
adcl
mov
iret
push
pop
aad
mov
mov
movsb
daa
xchg
mov
leave
pop
and
daa
out
ret
mov
adc
sub
mov
adc
les
mov
jp
repz
push
shrl
inc
mov
cmp
cmpsb
repz
jg
cwtl
aaa
pop
andb
and
xor
data16
mov
fwait
mov
or
cmp
pop
add
out
ljmp
leave
jo
cmp
dec
inc
adc
repnz
cmp
mov
repnz
mov
adc
fsubrl
dec
cmpsb
pop
xlat
mov
adc
adc
mov
mov
and
inc
or
mov
bnd
cmpsb
jecxz
sub
gs
insl
push
stc
add
adc
mov
std
pushf
hlt
pop
pop
pop
imul
jae
lods
in
imul
jae,pt
pop
xor
test
scas
mov
dec
in
lcall
adc
cmp
movsb
int3
hlt
les
jmp
int
and
jns
xchg
ja
iret
stos
lods
ss
fists
dec
inc
dec
cli
sti
mov
in
xor
sub
dec
shrl
sbbb
adc
dec
or
jae
sub
adc
push
or
dec
jp
sbb
fcoml
into
lock
out
pop
sbb
xchg
mov
and
daa
push
xor
pop
fwait
and
fdivrp
ret
sarl
cs
xor
mov
adc
ret
adc
xchg
and
xchg
cmp
push
dec
pop
xor
loope
mov
xchg
les
sti
setle
jnp
rolb
scas
cs
gs
sbb
xchg
sbb
mov
adc
cwtl
jnp
loop
into
mov
mov
push
insl
dec
inc
ja
xchg
fldcw
and
addb
repnz
ret
stos
insb
xor
xchg
pop
push
fwait
fs
mov
shrb
jae
inc
gs
cwtl
mov
stc
xor
mov
mov
fwait
sub
sub
iret
lods
cmp
nop
pushf
xor
rorb
mov
mov
xor
and
adc
pop
or
sbb
xor
imul
lock
lods
call
aaa
lcall
jp
jmp
int
cmp
cmp
aas
jnp
test
pop
aam
adc
ljmp
test
out
mov
enter
cmp
jnp
mov
push
or
fs
or
popf
leave
pushf
inc
icebp
cmp
inc
jnp
add
call
lcall
jne
adc
test
pushf
test
pop
lea
sub
inc
imul
les
jo
pushf
jge
jmp
lret
iret
leave
lock
or
mov
mov
cmp
scas
popa
hlt
nop
jno
es
mov
xor
or
rol
mov
push
jae
mov
cld
and
lods
cmpb
filds
lahf
inc
in
pop
add
fwait
jle
subl
sahf
cmpsb
inc
mov
fldl
sub
mov
dec
xrelease
call
in
dec
mov
rorl
sahf
adc
pop
insb
cmc
and
dec
dec
daa
aas
scas
mov
loopne
ds
xchg
adc
mov
jge
inc
fldt
fisubrs
jno
sub
icebp
dec
inc
test
xchg
ss
orl
jmp
fsubs
aad
jnp
jb
and
std
pop
aaa
adc
idivl
test
or
or
xchg
mov
iret
shrb
jae
stc
push
lock
cmpl
arpl
rolb
pusha
cmc
sti
pop
mov
fldt
sub
pop
xchg
push
jl
addr16
cld
adc
dec
mov
xor
mov
das
popa
stos
dec
add
adc
fnop
ret
call
leave
popa
add
push
aas
enter
pop
adc
movsl
mov
sbb
popf
icebp
mov
jnp
pextrw
hlt
dec
inc
adc
adc
stc
cmp
inc
aad
sti
mov
fdivl
xchg
cmp
stos
mov
sub
cli
jae
add
cmpl
jecxz
mov
push
je
sbb
jbe,pt
sahf
addr16
popa
mov
pop
push
lahf
mov
in
inc
cmp
stc
xor
adc
pop
int3
pop
gs
lods
inc
mov
xchg
push
js
mov
je
roll
adc
push
jmp
mov
cmpsb
imul
iret
lea
fs
xor
jmp
cld
leave
idiv
loopne
imul
pop
sbb
or
add
jns
jne
xor
jae
pushf
nop
enter
pop
and
sub
stos
mov
rorb
add
inc
sbb
stos
cmp
xchg
shl
mov
lret
test
jbe
lea
add
mov
push
pop
pop
pop
imul
xor
mov
pop
pop
inc
fldenv
fimuls
mov
sbb
xor
cmpsl
jbe
jbe
ret
jo
cmp
inc
dec
gs
into
add
inc
leave
ja
lahf
pop
push
aas
adc
popa
mov
jecxz
sbb
dec
jnp
cli
xchg
mov
call
movsl
dec
pop
pop
shr
or
push
lcall
sub
out
je
mov
shlb
mov
xor
dec
and
bswap
sbb
int
sub
mov
sar
clc
or
jbe
pop
divl
and
jno
fmulp
jno
lds
and
aam
icebp
test
push
xlat
jo
push
xor
mov
cmpsl
jb
sti
pop
or
pop
sub
adc
push
js
push
adcb
aam
in
ds
std
sbb
into
daa
mov
cmpsl
repz
stc
xchg
dec
or
das
mov
aam
push
add
push
cmp
xor
jge
xchg
jmp
mov
mov
xor
loope
jno
in
int3
sbb
aad
pop
jno
in
mov
lods
aaa
inc
push
mov
cli
push
shrb
xchg
pop
inc
jg
ja
and
clc
adc
mov
pop
mov
insb
sub
cmp
es
and
mov
jne
and
xor
ret
pop
leave
cmpsl
sub
ds
out
xchg
loopne
sub
cmp
and
adc
mov
cmp
cmp
fcoms
inc
sbb
sbb
lds
and
push
inc
push
jb
imul
and
dec
push
mov
aaa
loope
push
daa
lahf
out
scas
repz
fiaddl
jl
push
mull
insl
in
jp
lods
or
inc
push
mov
in
xchg
call
add
in
test
dec
add
jo
rolb
inc
popf
aas
add
dec
or
es
cmp
rol
sti
lods
lods
mov
shlw
add
std
les
or
rdmsr
dec
mov
adc
mov
jo
and
pop
jns
test
cmp
aaa
and
push
add
filds
sbb
mov
add
pop
das
jnp
int
mov
and
jp
adc
cltd
in
lods
mov
adcl
xchg
inc
insl
xchg
xchg
das
rolb
icebp
pop
jge
ds
add
rcll
sub
push
repnz
out
fcomi
dec
aaa
mov
and
and
dec
ret
icebp
push
adc
les
push
shr
lcall
cmpsb
test
lds
or
call
push
adc
and
mov
iret
fldenv
mov
fbstp
ret
rcll
lock
mov
inc
push
and
pop
xchg
imul
sub
lret
sbb
out
lds
sub
mov
out
scas
add
pop
mov
inc
xor
loop
jl
xor
jle
add
fcoml
dec
mov
push
lcall
dec
push
ja
inc
out
fs
pusha
mov
adc
add
mov
aad
push
and
fnstenv
mov
push
into
outsl
mov
movsl
call
and
pusha
test
pop
enter
push
mov
push
daa
and
cmp
outsb
cmpsl
mov
or
test
jp
sub
dec
jge
xor
push
daa
fists
push
mov
dec
les
sbb
sub
in
mov
popl
sub
movsl
and
push
push
inc
imul
sbb
mov
xor
lret
xchg
or
fwait
cltd
lods
xchg
jae
pop
xor
cld
loop
xchg
sbb
push
cld
xor
cmp
cmpsl
fucomi
out
loop
hlt
ja
dec
cmp
gs
mov
mov
push
sub
or
xlat
loop
imul
std
inc
xchg
testb
outsl
out
sub
jno
insl
dec
jg
pusha
cmp
jnp
mov
loopne
aam
repz
outsl
iret
dec
rcrb
les
xchg
popf
and
test
jo
push
sbb
shlb
jbe
inc
mov
adc
clc
mov
inc
dec
push
into
dec
adc
sti
jge
xlat
sub
add
in
aad
fdivs
clc
movsl
nop
shll
rol
icebp
sbb
add
pop
xor
lods
int3
mov
xchg
fisubrs
add
imul
enter
mov
push
out
mov
cmc
sbb
cmpsl
lcall
scas
pop
push
sub
mov
movsb
dec
and
add
lods
fsubr
xchg
cmc
add
adc
loope
mov
jbe
shr
and
adc
add
cld
sbb
lret
mov
lods
sti
jp
scas
sub
loopne
push
fwait
jmp
mov
js
je
test
shrl
cltd
test
dec
out
shll
aad
fs
fs
pop
icebp
out
inc
aaa
rcll
ljmp
dec
cltd
into
out
jecxz
rol
lret
dec
mov
sbb
orl
push
sahf
fnstenv
aas
in
rcr
mov
pop
push
popa
jmp
mov
gs
cmp
enter
cmpsb
pop
xchg
and
or
ljmp
js
je
cwtl
xor
fcmovu
in
lahf
add
popf
mov
sbb
or
fisttps
aaa
or
mov
mov
sbb
cwtl
imul
mov
icebp
cmpsb
jle
add
add
sbb
mov
int3
repz
cmp
jns
outsb
lds
push
push
and
enter
or
mov
in
sbb
arpl
xor
add
leave
setne
mov
jo
ret
movsb
mov
xchg
pop
rorl
and
pop
jmp
and
leave
imul
bound
jmp
dec
loope
int
dec
adc
or
and
inc
dec
je
jp
mov
xor
pop
pop
pop
or
out
pop
or
xor
jb
cmp
mov
jmp
jmp
inc
jnp
loop
and
mov
repnz
std
les
xchg
mov
xchg
mov
sub
leave
add
mov
add
lcall
mov
loop
mov
dec
pushf
and
or
adc
mov
mov
sbb
pushf
pop
mov
xchg
xor
mov
leave
loop
sbb
and
nop
cld
inc
cmp
flds
sub
cmp
pop
fs
or
xchg
clc
ja
pusha
mov
push
xor
in
scas
pop
ffreep
xor
imul
enter
ljmp
lods
and
sbb
xchg
mov
mov
stos
testb
push
or
daa
ret
adc
in
sbb
data16
inc
loop
mov
or
push
inc
pop
in
mov
dec
xor
dec
test
xor
xor
sbb
cld
outsl
xor
add
push
jo
es
lahf
jno
lods
add
scas
xlat
xchg
dec
popf
cmpl
test
push
inc
push
clc
scas
cli
xor
mov
push
add
aam
and
inc
mov
mov
adc
pop
adc
cld
out
imul
cwtl
movsb
test
xchg
cmp
cmp
jno,pn
mov
mov
adc
xchg
lea
cmp
xchg
sbbl
repz
or
ss
xor
mov
mov
lods
jmp
xlat
lods
ss
outsl
push
ss
leave
lds
outsl
test
lcall
pushf
mov
les
adc
adc
and
cmpsb
lea
cmpsl
mov
test
jecxz
cltd
cmp
loop
sbb
push
in
shrl
inc
jnp
cmpb
xchg
mov
mov
sarb
neg
mov
pop
mov
test
pop
insl
mov
cli
scas
lods
add
mov
cmp
outsl
jg
lret
sub
icebp
ljmp
in
sbb
inc
adc
loope
add
insl
movsl
subb
xorl
ljmp
pushl
or
imul
pusha
lcall
push
ret
jbe
sarb
shl
test
add
adc
enter
jno
or
pop
xor
push
loop
push
sub
sbbl
pop
jae
pop
add
fs
pop
cmpsl
sbb
mov
push
int
jae
mov
lcall
adc
pop
inc
add
mov
test
mov
mov
mov
push
shl
xlat
sbb
fwait
js
int3
pushf
inc
pushf
clc
or
ret
lret
xchg
in
mov
xchg
ja
int
mov
sub
in
je
inc
test
rorb
mov
pop
xchg
hlt
xchg
imull
inc
lods
or
jge
push
cmp
adc
out
scas
in
imul
aas
iret
xor
push
aam
sub
aam
adc
adcl
cli
clc
fistl
sbb
mov
mov
mov
jb
iret
outsb
movsl
or
sbb
inc
adc
xchg
xchg
inc
mov
pop
aaa
adc
or
les
fnsetpm(287
stos
cmpl
or
nop
pop
mov
leave
int
pop
push
testl
jae
xor
pop
ret
fwait
sbb
jp
out
lret
in
push
repnz
adc
sbb
lods
cmpsb
arpl
sub
cmpb
jns
loopne
xor
jge
cld
enter
insl
push
pop
mov
imul
js
out
mov
aad
or
mov
ss
mov
cmpsl
fisttpll
mov
movsl
inc
nop
xor
cmp
mov
cmpsb
dec
sahf
mov
popa
into
sahf
mov
rcll
mov
sub
lcall
int3
ret
in
clc
mov
daa
pop
dec
js
or
xchg
arpl
inc
cmp
mov
mov
jge
pop
inc
adc
in
push
icebp
adc
dec
mov
iret
jno
adc
ljmp
test
dec
out
mov
push
ljmp
dec
popa
lds
mov
pop
mov
stos
jb
ja
arpl
scas
lcall
loopne
movl
iret
popf
inc
mov
dec
out
lea
jb
dec
sahf
pop
pushf
in
adc
addr16
stc
jmp
ja
clc
cli
xchg
sbbb
jmp
jmp
icebp
and
mov
decl
push
int
mov
mov
shll
sbb
mov
push
adc
dec
ret
imul
lret
call
push
sti
sbb
lods
pop
xor
mov
pop
aaa
xchg
clc
xchg
sbb
arpl
imul
push
and
inc
or
bound
je
popa
and
jle
aad
stos
cmpsl
jg
js
out
test
movsl
cmp
xchg
pop
mov
push
in
dec
push
popf
pop
pop
and
xor
das
or
filds
insb
insl
push
mov
mov
pop
jle
popa
addr16
push
or
scas
lea
flds
cmp
int3
sbb
pop
mov
xlat
mov
ljmp
pop
add
pop
loope
insl
adc
in
std
push
xchg
lahf
out
jnp
jbe
gs
add
cmc
ret
dec
push
push
xchg
cmpsb
insl
nop
add
jge
inc
jo
popf
xor
xor
test
or
in
loope
mov
fsubrl
sbb
je
push
mov
adc
mov
xchg
mov
inc
xchg
dec
mov
icebp
cwtl
fwait
lods
dec
inc
jecxz
inc
inc
xor
mov
mov
mov
sub
in
stos
dec
sub
sub
adc
mov
mov
sahf
lahf
loopne
cltd
mov
sbb
daa
mov
mov
movb
aad
aaa
push
jl
scas
pop
aad
sbb
mov
iret
enter
fisubrs
or
shrl
xchg
dec
ljmp
mov
imul
sub
inc
mov
pushf
adc
out
inc
imul
jmp
fisttps
pop
iret
decl
jno
mov
xor
rcr
cmpsb
sbb
jmp
jmp
xchg
cmp
cmp
and
scas
sub
aaa
leave
leave
mov
cltd
andl
pop
aaa
jns
or
xlat
lds
lret
mov
mov
imul
mov
mov
jbe
sbb
in
cmp
movb
adc
mov
pop
sbb
push
push
out
and
aas
mov
mov
dec
dec
out
loopne
push
xor
imul
ja
fnstsw
sub
mov
pushf
mov
aaa
jecxz
out
dec
sbb
test
sbb
lods
js
or
sub
dec
ret
inc
fiaddl
outsl
pop
ret
roll
sbb
test
sub
mov
push
cmp
out
imul
mov
dec
cmp
xchg
adc
jb
into
imul
stos
adc
testl
push
and
lret
add
dec
into
sub
add
insl
divb
inc
sub
rep
cmpl
push
sbb
dec
mov
xor
jnp
cld
mov
and
xor
mov
stos
stos
aas
push
and
jmp
pop
dec
cmp
inc
imul
lret
dec
fsubp
loop
adc
push
ficoml
dec
shlb
cwtl
mov
fcmove
daa
fdivrs
push
sub
and
adc
testb
sbb
lods
test
cwtl
push
outsb
xor
out
insl
mov
dec
jo
push
adc
insl
pop
bound
imul
ljmp
test
jl
push
test
mov
sbb
sbb
xlat
cmp
imulb
aam
test
bt
shr
cmpsl
mov
popf
loope
out
fsubrl
inc
dec
inc
in
bound
mov
push
loop
lahf
aad
repnz
mov
test
scas
int3
subb
jp
pop
fsubrl
xlat
test
lahf
imul
movsl
pop
in
ja
mov
bound
cwtl
imul
xor
sbb
flds
bt
xorb
in
xor
loop
or
push
sub
and
loope
les
xchg
clc
jo
cmpsl
mov
out
adc
mov
ror
ret
out
std
inc
stos
adc
cltd
aad
xchg
lds
push
or
sbbl
leave
or
fbld
in
addl
cli
in
scas
add
mov
popf
mov
test
rorb
add
adc
ljmp
and
add
fists
xchg
leave
add
scas
ja
push
pop
test
clc
negl
addr16
loop
mov
jnp
sub
push
out
bound
jb
jmp
jp
loope
imul
jno
cltd
add
lcall
push
aam
call
sbb
sbb
leave
and
mov
dec
add
sbbb
and
cmp
or
inc
pushf
js
je
pop
mov
xor
mov
int3
fdivrp
movsl
sub
dec
in
mulb
icebp
pop
hlt
and
pop
cmpsl
sub
mov
mov
sahf
gs
shrb
pop
lahf
and
sbb
lret
inc
out
movb
ds
test
sarb
insb
scas
hlt
movsl
dec
pop
inc
hlt
mov
xlat
out
or
stc
std
sub
rol
sbb
mov
sub
mov
adc
jl
mov
addr16
sub
xchg
xor
jp
adc
xchg
loop
jl
and
dec
out
mov
mov
xor
cld
negb
aam
movsb
das
imul
out
fwait
stos
in
inc
add
mov
inc
push
or
in
push
ja
add
and
lea
cltd
cmpsb
sub
mov
mov
mov
shll
icebp
lahf
adc
sub
ds
test
dec
lock
call
fiadds
mov
pop
les
xor
adc
pop
out
mov
mov
sub
xchg
lds
sbb
inc
cltd
xchg
xor
jae
mov
es
fwait
cltd
aad
es
sub
xchg
pop
jb
adc
push
stos
data16
ficoml
lock
out
and
inc
or
dec
jecxz
xchg
mov
mov
dec
cmp
cmc
imul
push
andb
outsb
mull
inc
aas
lods
push
int
movsb
mov
stos
cmpsb
dec
jnp
xchg
es
adc
adc
cmp
lea
xor
stos
insb
fadds
cld
xchg
aad
cld
inc
cmp
lahf
loopne
mov
xor
nop
repnz
sahf
lock
jge
sub
cmp
cltd
imul
mov
loope
push
and
mov
into
ficompl
push
aad
sbb
test
jne
sub
pop
push
shrl
clc
add
shl
mov
mov
pop
mov
icebp
shlb
inc
imul
shlb
movsb
and
mov
std
mov
je
push
mov
add
rcl
jae
jne
inc
inc
inc
lret
movsb
repz
push
sbbb
adc
xchg
pop
jo
insb
mov
ret
and
adc
push
pop
scas
xchg
loopne
adc
sub
mov
xchg
lret
and
mov
lahf
fsubr
lods
repz
mov
repnz
je
ds
and
int3
and
es
pushf
mov
mov
leave
arpl
lea
sub
jbe
mov
rclb
int3
scas
dec
or
push
pop
enter
test
jne
inc
push
add
or
xor
data16
sub
sub
xchg
outsl
sub
push
mov
ret
loopne
mov
push
outsl
sub
push
fsubrl
das
out
add
test
out
push
push
in
mov
or
popa
into
lret
subb
popa
xchg
out
cmp
xor
xchg
xor
stos
xor
fdivr
popa
imul
jb
out
sbb
lcall
hlt
sbb
ljmp
mov
test
mov
jg
pop
jmp
test
jbe
jmp
lahf
pushf
cmp
xor
pop
stos
pop
into
jmp
mov
rorl
lret
sbb
jg
cmpsl
in
adc
fsubl
fldcw
xchg
outsw
cmp
and
stos
in
inc
xor
daa
sub
stos
add
repnz
dec
mov
xchg
mov
daa
pop
mov
sahf
xchg
fldcw
psubsb
and
jecxz
cmpsl
and
out
xlat
repz
fdivrs
pop
sub
idiv
xor
sbbb
mov
ret
ss
scas
fdivrl
test
mov
and
mov
outsb
rol
lahf
pop
aam
or
aam
loope
cli
cltd
int3
mov
div
or
sub
in
lock
bound
ret
sub
pop
dec
cli
jb
aam
mov
mov
mov
fwait
xlat
pop
inc
outsl
xor
jnp
and
es
int3
outsb
and
sub
adc
testl
iret
mov
add
imul
les
push
sti
push
in
fildl
xchg
sub
cmp
mov
add
mov
jl
pop
lret
inc
jecxz
jge
loope
popf
pop
rcl
cli
scas
dec
mov
push
pusha
jmp
add
add
xchg
pop
add
adc
cli
jp
stc
mov
mov
or
inc
in
out
xchg
mov
cmp
xor
insl
cwtl
adc
cli
int
int3
sahf
pop
mov
push
jne
jge
cwtl
mov
lods
popf
cmpsl
jne
mov
jge
mov
mov
mov
xchg
test
imul
rclb
fmul
jge
call
push
mov
sub
insb
push
mov
mov
aam
jl
dec
pop
stos
inc
jge
sbb
adc
shrl
scas
pop
xchg
xchg
mov
repz
jge
movsb
xor
mov
sub
pop
and
or
inc
cmp
notl
push
sub
inc
ljmp
lret
xor
fisubrs
outsl
fsubrl
das
pop
adc
pop
daa
imul
pop
aas
pop
sub
sub
sti
xchg
cmp
xlat
cmc
cmp
les
mov
xor
cwtl
aaa
pop
jo
movb
out
adc
jns
push
push
pop
cld
loopne
mov
push
mov
mov
loope
jmp
or
and
data16
arpl
inc
aam
stos
add
jno
adc
out
cmpsl
sub
cmp
push
mov
hlt
jae
jne
adc
mov
out
mov
adc
test
outsb
sbb
push
ljmp
xchg
mov
jne
sarb
iret
rcrl
lods
push
xor
daa
das
lret
rcr
or
fdivl
mov
xor
adc
lret
or
xor
test
in
push
add
xchg
mov
outsl
adc
lcall
sub
ljmp
cwtl
add
jbe
aaa
addr16
xchg
mov
addr16
inc
mov
jmp
orb
pop
add
fistps
loop
in
ror
dec
out
dec
lret
push
test
cld
or
add
aam
xor
mov
push
jmp
jmp
dec
adc
imul
pop
ficoms
jb
sahf
les
out
mov
xor
add
dec
jo
and
cmpsl
sbb
fidivs
roll
jl
mov
adc
rolb
or
add
cmc
repnz
jbe
sbb
mov
inc
cmpsb
xor
and
dec
and
pushf
cmc
insb
rorl
repz
out
enter
mov
or
mov
jns
dec
insb
loopne
in
dec
jmp
mov
add
xor
inc
mov
fidivl
lods
popf
sbb
dec
mov
mov
adc
ret
xchg
inc
sbb
fcoml
jns
or
in
inc
sub
mov
pop
les
sub
mov
xor
insb
inc
dec
je
xor
std
push
xor
pop
xor
stos
in
cld
test
les
cwtl
cmp
fsubr
adc
into
movsl
xchg
insb
pop
test
ficoms
cli
sub
push
inc
pushf
insb
mov
mov
sbb
test
dec
dec
push
aam
push
push
jmp
add
add
out
shll
dec
aas
mov
fisubrl
scas
dec
mulb
ja
dec
dec
pop
and
notb
mov
sbb
cmp
push
pop
lds
lock
aad
les
adc
cmp
lret
add
les
iret
xchg
stc
pop
mov
decl
outsb
sti
fdivl
jno
cli
data16
stos
dec
popf
cwtl
mov
out
sbb
in
and
lcall
and
add
pop
dec
fwait
nop
push
mov
pop
shl
out
pop
xor
jnp
ds
xchg
mov
sbb
pop
cwtl
orb
inc
pop
cmpl
add
and
mov
dec
dec
pop
mov
push
mov
das
cmp
or
or
sub
mov
cmp
imul
lahf
popa
stc
sarb
icebp
je
es
cs
lods
ljmp
inc
aam
int
add
pop
mov
mov
rorb
in
add
ror
jl
out
pop
das
icebp
xor
loope
mov
pop
mov
ljmp
jmp
xchg
adc
add
es
gs
xchg
fisttpll
ds
mov
lcall
out
or
mov
stc
mov
fistps
hlt
sbb
and
and
pushf
jns
xor
inc
bound
pop
out
mov
lea
mov
mov
xchg
aad
fwait
mov
fs
pop
int
stc
pop
sbb
mov
popa
mov
pop
cmp
pop
pop
pop
xor
out
cmp
in
jp
jl
ja
mov
adc
add
aaa
pop
add
test
int3
jae
or
nop
add
adc
mov
andb
xchg
loope
cmpsb
sti
adcl
icebp
sub
mov
fistpl
mov
fisubrl
mov
jp
sub
xor
adc
ljmp
mov
aaa
mov
sbb
push
mov
push
ja
loop
or
xchg
add
aam
xor
jle
sbb
mov
and
icebp
ja
cltd
or
sahf
enter
jl
aam
sti
push
xchg
mov
bound
jae
pop
outsl
in
xor
jecxz,pt
repnz
adcl
mov
divl
outsl
movsl
popa
inc
xchg
mov
pushf
add
aas
push
mov
icebp
mov
pop
into
outsl
cmc
cmp
inc
scas
or
test
ret
in
aad
shl
lret
xor
jne
mov
cltd
push
xor
and
push
push
ss
sbb
das
dec
mov
outsb
call
mov
jbe
push
inc
dec
jns
and
mov
int3
dec
sbb
in
inc
inc
aad
outsb
sbb
ss
push
mov
scas
mov
sbb
mov
cld
xchg
lock
les
into
lea
mov
mov
test
cmp
das
xchg
lcall
jo
mov
call
lret
inc
popa
xchg
ds
inc
mov
and
pop
jb
out
mov
mov
inc
mov
loope
sarl
lds
mov
inc
cmp
pop
lock
sub
push
mov
or
int
cmc
loope
push
mov
es
filds
inc
push
sub
dec
mov
insl
fistpl
xor
faddl
xor
in
and
dec
and
inc
lret
add
pop
sub
in
icebp
fwait
mov
xchg
push
mov
mov
mov
xchg
jecxz
mov
adc
stos
scas
rcrb
aaa
mov
inc
adc
dec
inc
sarl
and
adc
popf
or
xor
pusha
movsl
lret
and
leave
lcall
mov
sahf
bound
push
sbb
mov
mov
mov
or
mov
jg
shll
jnp
lcall
ds
jge
push
push
xorb
decl
xor
ds
jno
scas
lcall
test
in
xorl
push
sub
pop
pop
ss
mov
mov
or
pushf
pop
hlt
jmp
push
adc
out
push
add
scas
cmp
loopne
fnstsw
dec
aad
incb
jns
jle
mov
dec
cld
inc
adc
out
insl
push
sahf
std
mov
iret
mov
mov
stos
test
jl
mul
test
rcrl
icebp
jl
insl
aad
lcall
push
aad
shlb
pop
pop
repnz
daa
jmp
call
ja
mov
sahf
loop
xor
movsl
sub
cltd
cltd
fsubl
shr
into
jo
jl
cwtl
adc
loope
jns
xor
or
mov
movsl
repnz
shl
dec
cmp
sti
mov
push
push
fldenv
addb
inc
inc
sub
inc
cmp
test
mov
inc
loopne
mov
lahf
nop
pushf
fnstsw
icebp
jl
in
nop
push
es
sub
das
mov
sub
decb
sbb
rcll
xchg
popf
les
out
aam
push
and
dec
hlt
push
push
fimull
addr16
dec
sub
cmp
xchg
iret
mov
jae
loop
and
push
or
sbb
outsl
in
add
ret
pop
fs
test
xchg
adc
mov
stos
out
xchg
hlt
jg
jmp
clc
jmp
popf
add
nopl
mov
pusha
push
mov
out
pusha
and
rorb
jge
cli
fwait
push
add
pop
inc
bound
mov
cli
in
imul
mov
lea
dec
jo
fwait
clc
mov
cmp
dec
test
push
pop
mov
mov
xchg
sti
push
jb
jo,pn
addb
inc
enter
aas
aas
sbb
add
out
scas
mov
loope
or
xor
sbb
iret
out
mov
js
push
add
mov
sbb
inc
xchg
dec
sarb
iret
lahf
xor
push
jno
pop
cs
pusha
lcall
imul
mov
in
push
hlt
and
add
pop
rclb
daa
mov
and
idivb
cmp
pop
mov
inc
pusha
add
shl
aad
adc
cmc
in
xlat
sbbl
cli
sbb
and
in
sbb
add
xchg
mov
fldenv
inc
pop
adc
int3
pop
jns
fsubrs
xor
jp
xchg
fbstp
sahf
pop
ret
pop
pop
add
stos
sbb
pop
pop
dec
in
ja
aas
in
cltd
pop
xchg
and
mov
mov
cmp
ret
xlat
orb
xor
nop
scas
cmp
push
mov
cmpsl
dec
inc
lock
loope
sahf
dec
das
jnp
ret
fdivr
cmpsl
add
pop
and
test
das
cmp
xchg
inc
ret
push
mov
sbb
loope
dec
ljmp
cmp
ficompl
aaa
push
dec
mulb
test
ss
fnstenv
adc
pop
sbb
jo
inc
aam
decl
xchg
sub
inc
dec
add
jo
in
push
js
xlat
inc
inc
cwtl
fstps
add
in
jp
daa
test
fstl
sti
push
in
pop
int
hlt
xchg
dec
add
sub
and
popa
pop
in
xchg
dec
inc
pop
sub
cwtl
daa
sbb
mov
jle
outsl
out
pop
adc
sub
push
movsl
mov
xchg
lods
pop
lret
pop
cs
je
stos
sbb
adc
movsl
adc
mov
stos
jecxz
xorl
push
cli
cmp
lods
scas
fcomps
sub
mov
inc
in
pop
outsb
nop
lods
inc
sbb
pop
push
icebp
aam
mov
xchg
adc
sbb
xor
lret
add
loopne
decl
and
pop
stos
or
movsb
test
adc
cmp
xchg
inc
arpl
out
repz
jmp
sarb
ret
gs
sub
mov
mov
mov
pushw
sti
dec
jle
inc
call
in
jle
enter
xchg
add
xor
jmp
imul
xlat
lods
push
xor
cmp
fsts
call
or
push
sub
fisttpl
and
xor
mov
mov
sbb
jne,pt
xchg
add
pop
ret
int3
mov
aam
lods
dec
adcb
xchg
push
loope
fwait
jbe
add
ret
mov
mov
fdivl
push
add
shll
cli
shl
jno
mov
lock
stc
in
shrl
xor
push
cmp
leave
mov
stc
testl
hlt
lods
inc
mov
and
negl
add
lods
xor
xor
cmp
outsb
repnz
insl
push
test
aam
xor
fnstenv
add
lods
mov
mov
inc
enter
fmull
movsb
sahf
xchg
test
mov
xchg
mov
enter
dec
sbb
add
push
cs
roll
icebp
rorl
into
add
xchg
sbb
cmp
xchg
add
jp
rorl
stos
nop
js
dec
and
mov
outsl
mov
mov
pop
jmp
cli
push
sub
lahf
lock
xchg
test
push
mov
xor
mov
stos
mov
ret
jp
xchg
mov
pop
popf
jg
in
cmpsl
jl
in
scas
imul
xchg
and
push
inc
loop
fs
jno
push
cmp
dec
xchg
adc
and
flds
std
mov
add
sub
fwait
lods
aam
rol
stos
out
or
dec
and
arpl
and
pop
xchg
add
lahf
cmpsb
xchg
sub
mov
std
mov
dec
adc
push
mov
enter
sub
mov
data16
mov
sub
sbb
dec
push
icebp
xor
jae
or
popf
lret
je
jl
inc
cli
test
dec
lcall
push
ret
iret
or
sub
xchg
mov
mov
out
popa
jae
addb
enter
adc
in
into
or
clc
mov
jb
rcrb
fs
cmpsl
incb
dec
ds
xchg
or
and
fcomi
cmpsl
push
inc
in
cmp
adc
push
jecxz
cmpsl
pop
nop
push
in
lock
cmp
test
sbb
call
aam
ficompl
imul
dec
ret
jp
pop
jno
in
fwait
int
push
in
pop
add
xor
inc
adc
das
push
lock
imul
js
and
cltd
pop
push
daa
xor
sarb
imul
js
movsb
out
inc
call
mov
pop
sub
adc
xchg
popf
sub
dec
or
xchg
call
push
or
pop
mov
or
or
or
fs
jnp
pushf
sbb
mov
fdiv
scas
aaa
dec
cltd
pop
cmpsb
jle
or
int3
orb
add
insl
mov
pop
fcmovu
aas
scas
sar
cmp
ja
inc
push
mov
sti
mov
jmp
out
or
adc
dec
loope
in
jae
inc
hlt
cmc
xchg
dec
daa
ds
ret
rcrl
or
jecxz
jo
mov
lock
xchg
stc
ret
mov
icebp
pop
test
and
movsl
mov
mov
pop
loopne
add
inc
hlt
imul
dec
inc
inc
mov
mov
lds
jnp
inc
mov
adc
add
xchg
push
imul
mov
sti
shlb
mov
loop
daa
test
sbb
jl
imul
mov
xlat
cmp
mov
loop
aaa
and
xor
xlat
dec
jmp
outsb
sbb
insb
insl
rclb
push
jo
xchg
mov
and
inc
out
lcall
lods
jo
add
mov
sbb
test
cwtl
test
int
lea
jne
cs
repz
lods
push
xor
lock
xchg
push
or
ss
stc
adc
insb
in
movb
push
out
and
daa
mov
cwtl
pop
add
add
pop
fbstp
adc
pop
daa
xchg
sub
out
inc
mov
add
iret
ret
push
les
incl
xchg
sahf
adc
sbb
popf
repz
cmp
popf
push
popf
push
or
loope
mov
mov
rcrl
dec
lcall
mov
sar
in
xor
clc
aaa
inc
hlt
out
cwtl
fs
repz
jmp
in
pushf
cmp
adc
or
sbb
shlb
and
sub
out
out
or
daa
loope
hlt
xor
adc
inc
mov
and
cmp
stos
sbb
les
je
test
test
push
cltd
test
cmp
or
add
inc
mov
mov
jl
arpl
add
scas
inc
sub
jbe
daa
addr16
or
nop
add
shlb
push
fmull
xlat
in
and
add
insb
daa
xor
inc
lcall
pop
xchg
xor
fiadds
daa
and
fwait
data16
outsl
push
xchg
xor
adc
cmp
lret
ficompl
test
jecxz
adc
cmp
int
pop
pop
and
bound
sarl
push
insb
inc
jge
push
jge
adc
or
bound
pop
bound
sub
pushf
test
enter
adc
jo
xchg
aam
aaa
int3
sub
cld
outsb
sbb
loop
arpl
xor
sub
ljmp
in
jge
push
in
lea
dec
insb
test
xor
jns
fstl
dec
aaa
sbb
jle
pop
and
jge
jb
int
sahf
push
pushf
sub
pop
into
push
std
dec
lds
push
push
jae
test
ficoml
daa
adc
aad
rcll
mov
jno
mov
outsl
mov
test
adc
push
fisttpll
and
or
inc
imul
pop
jle
mov
or
jecxz
dec
sbbb
sbb
xor
imul
and
out
lahf
pop
nop
xor
int3
adc
popa
bound
pop
fwait
ret
xorb
lods
test
and
insl
xor
insb
ficomps
repz
insb
mov
loopne
lahf
jge
jbe
mov
mov
out
mov
add
mov
sahf
pop
aam
cmp
fisttpl
ljmp
movsl
mov
pop
and
repnz
sub
inc
je
stc
paddsw
or
pop
push
sbb
jo
fidivrl
sbb
je
in
add
dec
fnsave
push
mov
aaa
test
pop
loopne
int3
sbb
xor
xchg
dec
cs
inc
pop
jae
mov
es
cli
or
leave
jb
jle
popl
mov
je
cltd
aad
fadd
js
adc
test
addr16
push
aam
mov
popa
xchg
cmp
sbb
pop
mov
push
xchg
loopne
xchg
cmp
and
adc
push
sub
adc
insb
or
adc
xor
invlpg
cmp
pop
movsb
inc
out
dec
mov
inc
add
mov
scas
mov
enter
inc
es
inc
xor
scas
fisubrl
or
sbb
dec
push
js
int3
jns
imul
or
fisttpll
int3
or
xchg
movsb
sub
sbb
push
insb
hlt
dec
push
xlat
divb
sub
ss
inc
mov
in
popf
out
and
xchg
ja
subb
mov
add
add
cwtl
jle,pn
fnstenv
mov
or
fwait
push
xor
and
pop
mov
mov
pop
xor
xchg
mov
scas
movsl
inc
xorl
pop
or
or
sub
into
shl
pop
lods
popa
adc
mov
and
lods
movsl
mov
dec
lret
out
shlb
jmp
or
xchg
mov
cmpsl
xor
aam
sub
add
mov
pop
pop
mov
sbb
es
push
mov
scas
es
gs
insb
mov
into
lea
sbb
cli
hlt
sub
imul
add
add
xor
pop
mov
ss
mov
jl
and
ljmp
mov
lds
mov
mov
lods
and
pusha
sbb
pop
les
popf
inc
jnp
repnz
mov
sbb
jp
lahf
cmpsl
cmc
jnp
insb
fdivr
idivb
or
das
test
xchg
jnp
out
dec
lea
test
pop
mov
jl
int
cli
lcall
cmp
cwtl
sbb
and
pop
jbe
xor
repnz
jo
fisubrl
test
pushf
xchg
xor
ficompl
bound
jmp
loope
aas
or
push
push
mov
sub
out
mov
fildll
jne
mov
pop
adc
add
adc
sub
pop
lret
sbb
enter
icebp
into
xchg
je
stc
andl
and
inc
mov
in
enter
jg,pn
or
lea
add
ljmp
pop
repz
add
mov
addr16
and
jmp
push
orb
sub
fdiv
pop
sub
movsb
push
push
lret
push
popa
xor
xor
fwait
test
and
dec
pop
fs
push
xchg
in
or
dec
popa
pop
mov
es
inc
mov
inc
test
scas
lahf
in
lock
test
leave
sbb
in
jle
fcoml
imul
dec
cmpsb
xor
pushf
jns
scas
mov
push
jno
shrl
mov
jae
add
scas
and
add
mov
fnstcw
inc
jae
ja
cwtl
xchg
scas
add
jnp,pt
aas
xchg
in
mov
jns
mov
dec
loope
sarb
pop
movsl
mov
ss
jecxz
cmp
adc
inc
les
push
fsubs
jbe
aad
test
push
rcl
push
inc
and
cmp
insl
fs
sbb
scas
mov
fcmovbe
cmp
add
arpl
shlb
jg
mov
test
ret
xor
sbb
pop
mov
sub
push
mov
ss
idivb
mov
jno
push
adc
ja
push
sub
mov
inc
jo
mov
and
dec
jle
add
dec
lahf
fildll
orl
rorb
cmp
mov
adc
aad
cmp
push
xor
arpl
xor
inc
dec
push
pop
pop
out
mov
dec
pop
nop
mov
shll
dec
mov
push
addr16
ret
out
rorl
mov
push
xchg
or
shll
fdivl
pop
fdiv
mov
xor
xchg
arpl
aam
push
int3
int3
out
or
mov
xor
adc
inc
mov
xchg
mov
inc
cmp
xchg
push
push
cmpsb
or
stos
jne
dec
cwtl
in
mov
and
test
and
or
test
add
aam
stos
cmc
mov
cmp
lcall
leave
shrl
mov
out
test
push
lea
and
push
add
sbb
aaa
inc
and
repnz
arpl
push
push
addb
clc
lret
das
sar
mov
jl
and
out
sub
adc
int3
mov
mov
bound
or
aad
cld
add
xor
push
lret
out
daa
xor
pusha
bound
push
adc
in
dec
jp
mov
or
sbb
jl
outsl
leave
cmpsb
aas
xchg
js
mov
icebp
out
sub
lahf
jae
mov
lea
inc
xor
adc
iret
sbb
test
pop
movb
or
jmp
loopne
cmc
lds
adc
push
mov
jbe
loope
xchg
fisttpll
insb
mov
jne
loopne
bound
mov
repnz
mov
xchg
das
jns
fdivp
cltd
lret
dec
and
sub
mov
std
pop
icebp
mov
mov
hlt
push
push
in
inc
xchg
cmp
inc
pop
stc
js
push
xchg
bnd
sti
push
push
mov
pop
and
loop
mov
test
lret
or
jb
jmp
push
xor
into
jnp
mov
xchg
repnz
out
mov
fidivrs
or
push
cmp
dec
dec
jnp
add
and
hlt
movsb
sbb
jne
test
sbb
int
loopne
addr16
rolb
mov
sbb
xchg
mov
mov
inc
mov
pop
andl
or
cmpsb
and
insl
push
test
or
ffree
into
cmp
outsb
idivb
je
inc
ds
push
aam
or
jbe
fidivrl
jbe
stos
push
jbe
pop
lods
dec
lcall
addr16
outsl
out
imul
lods
sbb
stc
icebp
mov
arpl
mov
fucomp
push
and
sub
int3
jle
lock
test
xor
stos
mov
shll
push
mov
adc
adc
cmp
lret
sbb
loopne
pop
cwtl
cmpsl
mov
jbe
and
mov
sub
add
fmull
sahf
mov
push
push
xorb
mov
cli
inc
dec
lret
lea
mov
mov
push
in
sbb
sbb
mov
and
jbe
pusha
sub
test
dec
aad
into
adc
inc
aad
mov
aam
sbb
scas
rorl
add
inc
xchg
cmp
aad
xor
fwait
xchg
xchg
ret
xor
sub
jge
in
in
out
inc
sbb
push
xor
enter
xchg
add
dec
mov
dec
insl
outsb
push
loop
nop
mov
popf
outsl
xlat
push
add
mov
fadds
das
aam
xchg
ss
mov
adc
dec
testl
or
movsb
mov
mov
sbb
lea
cmp
flds
test
and
pop
bound
adc
pushf
xor
sahf
out
push
add
repnz
test
popa
ret
outsl
pop
es
lret
sbb
mov
int
push
fistl
inc
jno
add
out
push
sahf
fsts
mov
or
and
out
orl
push
pop
xor
jns
push
mul
mov
mov
fsubrl
popf
and
jle
test
add
sbb
das
jl
jl
mov
jbe
das
jns
stos
jge
inc
arpl
adc
add
cmpsb
and
mov
sbb
je
cmpsl
xor
sbb
scas
mov
and
dec
xchg
je
inc
push
jle
arpl
dec
jmp
jnp
clc
mov
cltd
or
test
pushl
inc
sbb
sbb
mov
xchg
ja
imul
fdivrp
mov
dec
and
push
mov
outsl
push
mov
or
or
pushf
aas
push
daa
call
and
mov
stos
cmp
mov
out
aas
mov
mov
xlat
mov
jne
push
push
adc
out
ja
das
pop
dec
mov
pop
lahf
in
aaa
js
mov
jns
cwtl
jg
insl
ret
fcoms
dec
sbb
or
push
mov
nop
enter
stos
cmc
jl
nop
pusha
repz
daa
xchg
rcrl
cld
fisubrs
cli
xor
fnstenv
xchg
cmp
cld
and
xlat
lret
pop
inc
imul
lock
add
test
or
scas
bound
add
mov
xor
inc
jmp
js
into
jbe
andb
cld
ret
ficoml
gs
aam
aas
out
add
xchg
stos
ljmp
pop
mov
pop
cmp
lret
add
sti
mov
aas
jecxz
pop
jecxz
cmp
shl
mov
loop
xlat
popa
mov
fsts
das
mov
mov
sbb
or
out
cld
mov
loopne
cltd
mov
pop
xor
pop
gs
rcrb
lods
icebp
pop
dec
add
push
push
inc
das
mov
into
lcall
cmpb
mov
push
inc
out
pop
push
or
neg
mov
xchg
fmull
pop
or
stos
out
dec
mov
orl
int3
jno
sbb
mov
iret
or
jns
scas
lret
push
adc
in
jbe
sarl
dec
pop
sti
inc
jns
lahf
jno
add
iret
test
in
sbb
int
sbb
add
sbb
pushf
cmp
pop
pop
jbe
movsb
push
std
das
push
test
xchg
cli
jg
xchg
cs
fisubs
nop
xchg
mov
les
add
movsl
dec
adc
adc
jae
imul
cmp
loope
inc
lock
xor
push
imul
shrl
fisubs
mov
cmc
jne
add
sbb
or
lcall
repnz
iret
and
push
je
movsb
dec
push
sub
enter
and
out
in
cmpsl
shrl
dec
arpl
or
mov
scas
xor
jmp
ret
mov
xor
xchg
shlb
std
cltd
scas
movsb
mov
lods
mov
push
pop
cmp
test
push
rol
cwtl
jno
dec
int3
bnd
loope
push
jno
leave
cmp
and
xor
movb
pop
lea
cmp
scas
xor
out
cmp
ror
outsb
mov
out
sbb
jecxz
int3
add
fstpt
outsb
and
jecxz
inc
ljmp
stc
outsb
arpl
leave
iret
pop
jg
fisttpll
jne
bound
pop
sub
js
push
sbb
jnp
iret
xchg
movsb
add
cs
out
push
inc
jno
int
and
pop
mov
cmpl
popf
js
jnp
pop
xor
das
int3
out
loop
fcompl
sti
pop
ljmp
cld
pop
xchg
mov
mov
movsl
scas
lock
mov
ret
fs
ss
pop
nop
cltd
push
sar
adc
dec
movl
push
dec
outsb
std
punpckhbw
mov
mov
sub
mov
inc
cld
addr16
mov
push
push
ds
xchg
cmp
xor
frndint
inc
je
cmp
jge
scas
push
lret
mov
cmp
imul
jbe
or
lods
fcmovne
push
out
mov
add
pop
sbb
push
dec
mov
arpl
pop
jp
out
xchg
imul
sbbl
mov
pop
push
lods
adc
movsb
dec
jno
movsb
clc
shrl
dec
dec
sahf
adc
int3
inc
lahf
inc
in
in
xchg
pop
jge
xor
sar
and
lahf
mov
inc
mov
insl
int3
jl
mov
popa
pop
lock
xchg
shll
pop
insb
daa
dec
inc
push
repnz
aaa
mov
lcall
ds
imul
jno
dec
push
sub
into
jbe
daa
add
fstp
or
pushf
daa
out
mov
push
inc
popa
loope
dec
das
xchg
push
mov
leave
pop
aam
int3
xor
sbb
mov
insl
mov
hlt
push
adc
jb
dec
sub
cltd
add
je
adc
sub
cld
mov
in
jg
in
out
icebp
rolb
dec
ret
sub
push
jo
or
jmp
ret
jmp
stos
xor
hlt
call
mov
or
notl
mov
cmpsl
mov
or
inc
inc
inc
scas
aad
cmp
icebp
mov
adc
inc
je
and
ja
cmp
mov
js
dec
xor
jno
mov
xchg
test
and
push
pop
into
enter
and
movsb
out
or
std
jge
call
xchg
or
cmpsl
add
faddl
sbb
pop
cmpsb
mov
sub
mov
xchg
jp
ss
push
add
out
mov
test
cltd
or
inc
mov
xrelease
mov
clc
and
inc
daa
cld
cmp
cmpsb
xor
xchg
push
push
pop
xchg
cmpsl
insb
leave
or
or
sarl
mov
ja
xchg
or
mov
jecxz
fstpt
outsb
loopne
mov
mov
xchg
cld
sub
ret
xor
inc
or
iret
inc
out
cli
mov
inc
sti
mov
sub
scas
xchg
clc
sub
movsl
mov
test
ss
fwait
push
push
inc
sti
cld
outsl
stos
into
sbb
fldt
mov
outsb
dec
mov
cwtl
xchg
push
loop
stos
or
dec
pop
bound
jmp
lcall
outsb
xlat
xchg
clc
jmp
ja
pop
xchg
cmpsl
pusha
in
or
mov
cmpl
push
outsl
push
mov
mov
or
idivl
sbbb
sbb
imul
mov
iret
mov
jne
pushf
les
lcall
push
jnp
out
push
push
sbb
mov
mov
fbld
test
lock
out
mov
push
repnz
call
xor
pop
je
xchg
ss
les
adc
loope
jl
scas
dec
xlat
mov
jmp
popa
pop
cmpsl
das
es
shlb
outsb
js
in
pop
ret
mov
mov
cmp
lret
mov
dec
pop
pop
inc
cmp
jno
push
loop
sbb
adc
mov
shll
aas
push
sbb
jo
pop
adc
lods
or
or
rcll
jns
aaa
orb
out
inc
pop
jecxz
and
adc
sub
subb
sub
lds
stos
mov
adc
out
inc
inc
xchg
and
ljmp
xor
repz
leave
jle
lret
and
add
sarb
sub
mov
push
xor
jle
out
and
jne
mov
movsl
dec
push
data16
call
jns
ficoml
loop
adc
std
mov
popa
xchg
dec
dec
xchg
pop
xchg
add
sti
sbb
out
data16
xchg
xor
aad
mov
in
test
mov
cmpsb
push
js
mov
adc
and
jecxz,pt
and
pop
or
sar
ret
mov
add
sbb
leave
cmpsl
fcoml
shll
cwtl
dec
jg
or
and
call
fidivs
je
stc
mov
jp
add
inc
push
in
shll
jo
daa
arpl
mov
in
inc
and
test
and
push
xchg
repnz
cltd
ss
das
lods
or
mov
pop
lods
out
push
mov
pop
add
cmp
aad
jl
movsl
dec
arpl
lock
mov
mov
outsl
popa
add
addr16
imul
rorb
ret
mov
and
nop
call
cwtl
ja
out
jno
jge
add
xor
loope
mov
fwait
pop
dec
add
aaa
bound
mov
cmp
and
mov
ficoms
fldl
push
mov
xchg
push
xchg
pop
jmp
icebp
mov
and
mov
lahf
or
pushf
ja
cs
pop
and
xlat
mov
xor
jb
xchg
lods
xorb
inc
sbb
push
pop
and
popf
dec
shlb
dec
xchg
shrl
and
xor
iret
push
int
push
mov
in
loop
fstps
adc
mov
adc
imul
and
or
adc
mov
scas
stos
pop
and
cmc
jg
cwtl
xchg
jo
lcall
mov
stc
stos
add
xor
outsb
loope
aaa
pop
inc
clc
pushf
imul
outsl
mov
pop
cmpsb
pop
cmpsb
int
outsb
adc
xchg
mov
and
iret
mov
out
cmp
icebp
imull
clc
cmp
into
test
mov
out
in
mov
mov
sbb
in
sahf
mov
pop
outsb
icebp
in
mov
mov
cltd
xchg
fildl
in
pop
mov
mov
pop
adc
dec
lods
ficomps
popa
mov
inc
sbb
sub
dec
lahf
push
xchg
fcoml
mov
fsubrl
das
pop
stos
push
add
jns
es
dec
xlat
std
pop
adc
shrl
mov
xlat
sti
je
xchg
fsubrs
mov
hlt
test
inc
mov
jl
jno
push
pop
cmp
jnp
ss
inc
mov
rcrb
push
dec
aaa
dec
scas
mov
sub
or
pop
xlat
movsl
outsl
nop
xchg
sub
cmp
pushf
dec
inc
mov
dec
sahf
mov
aas
sub
clc
dec
imul
pop
mov
adcb
or
arpl
loope
mov
popa
add
mov
or
mov
jmp
mov
imul
ja
call
jl
push
pop
mov
repz
testb
mov
or
out
sbb
outsb
fildll
xor
sbb
mov
roll
fcmovb
pusha
aaa
jmp
jl
xor
push
fdivrs
sub
js
das
ret
push
xchg
int
inc
aas
xor
mov
loopne
mov
and
dec
in
add
test
and
leave
push
ja
push
negl
mov
aam
and
nop
loope
dec
pop
flds
xor
xchg
xchg
cld
or
mov
movsb
push
movsl
lret
xor
sahf
cmp
mov
inc
cs
bound
jo
outsl
bound
std
out
fwait
lret
and
insb
out
jle
sbb
loopne
push
ret
movsl
pop
jp
rcr
pop
fildll
pop
clc
negl
lods
lods
pusha
push
jae
sub
cmpsb
mov
pop
xor
in
test
push
jo
loope
or
cmpsl
jge
add
loope
sub
sahf
mov
xor
fmul
fdiv
xor
dec
adc
xchg
pop
pop
jae
sahf
int3
int3
insb
in
and
dec
jns
dec
decl
icebp
daa
or
or
fwait
fwait
aas
push
xor
stc
xlat
pop
test
and
test
cmp
in
push
cmpsl
icebp
mov
ljmp
push
scas
out
out
and
ret
cld
mov
push
xor
push
pop
sub
adc
insl
in
sarl
pop
fidivrl
popa
rolb
lds
repnz
cmp
leave
jl
push
jae
mov
sbb
xor
fwait
jmp
rclb
orl
adc
add
xor
in
inc
mov
insb
subl
bound
enter
mov
out
jp
cmpsb
in
dec
scas
mov
call
or
int
pushf
mov
mov
bound
dec
imul
pop
jns
adc
or
push
jecxz
xchg
pop
out
inc
icebp
popa
das
xor
insb
add
xor
ljmp
sbb
das
pusha
cmc
xor
das
fdivl
popf
sbb
call
sahf
loop
ficomps
and
xor
hlt
test
pusha
rorb
cmp
ret
ss
cmpsb
add
cmp
pop
add
dec
call
mov
mov
xchg
cmc
mov
pop
push
clc
loope
icebp
aam
rol
mov
jns
stos
movsl
test
push
push
xchg
sbb
test
xchg
mov
pusha
in
mov
outsl
or
adc
clc
pop
ljmp
test
cmc
cld
pop
sbb
sahf
int
jg
fwait
sti
jbe
popa
das
out
insl
xchg
aam
jae
xchg
enter
enter
or
ljmp
jp
mov
dec
pop
test
jb
jmp
lods
ds
mov
clc
loope
lea
xor
pop
xchg
leave
fdivs
mov
push
lea
jo
cld
cmp
mov
mov
rclb
cltd
jmp
cmp
fs
mov
mov
xchg
test
xor
cmp
loopne
mov
xorl
add
and
xorb
dec
enter
out
into
add
stc
add
mov
sbb
sub
pop
pop
push
lret
outsb
adc
xchg
inc
xchg
pusha
imul
in
xor
test
xchg
call
pop
pop
ret
je
call
mov
add
inc
and
cmc
and
std
adc
sub
dec
test
pop
jp
fwait
mov
mov
pusha
shr
mov
in
sub
out
call
push
test
xchg
ret
push
push
sub
xchg
dec
jno
jnp
mov
sub
push
cmp
cltd
ljmp
cmp
jp
inc
adcl
pusha
xchg
data16
sbb
in
repz
jae
adc
fwait
add
lock
xor
test
and
stos
xchg
dec
inc
adcb
cwtl
scas
lret
or
and
fnstcw
lcall
cmp
push
popf
xchg
mov
les
mov
inc
or
nop
les
xorb
out
testl
les
sbb
cmp
push
or
mov
xchg
pushf
pop
movsl
jp
add
aaa
cmp
mov
nop
jno
sub
bound
adc
push
xlat
mov
ja
mov
enter
loop
gs
add
out
mov
xchg
sbb
sub
ja
loope
aaa
cmc
jbe
sub
mov
imul
lahf
and
loope
lock
lods
jo
push
lret
insl
mov
fisubrs
push
scas
add
or
sbb
popl
repz
xor
js
inc
push
cmp
cld
xor
sub
and
sub
dec
xor
out
pop
fdivl
sahf
push
jbe
shrb
dec
sub
mov
push
pop
test
push
xlat
jle
and
mov
push
dec
adc
xchg
and
mov
daa
fimuls
sbb
cld
xor
rorb
xchg
repnz
arpl
sub
pop
outsl
std
lods
sbb
lret
stos
mov
ret
mov
mov
push
pop
aam
aas
mov
pusha
lea
jo
jns
scas
sub
cmp
dec
sub
pop
icebp
pop
addr16
lods
mov
filds
adc
jmp
sub
scas
xchg
mov
mul
icebp
mov
lret
loop
cmpsb
push
xor
lock
pushf
mov
lods
lea
cmp
iret
pushaw
fdiv
imul
xor
or
or
pusha
xor
sub
xor
cltd
mov
ljmp
cmp
cmpsb
xorb
test
ret
mov
aas
jo
clc
jecxz
lods
outsb
dec
pop
stos
cmpsb
push
pop
out
pop
pop
movsl
jle
dec
icebp
dec
push
lahf
nop
imul
fisttpll
jge
add
add
outsl
loope
pop
cmpb
cs
test
inc
sahf
pop
and
mov
icebp
mov
jmp
leave
lcall
mov
cmp
dec
pop
repnz
or
ficoms
loop
mov
sub
xchg
xor
push
pop
mov
fldcw
jge
orl
or
or
jmp
arpl
pop
ds
fisubs
push
mov
testl
xor
or
add
push
std
outsl
jae
jns
gs
out
pop
mov
sub
sub
mov
shl
jnp
loop
mov
jns
stos
mov
pop
cltd
sbb
shl
xor
and
ss
shll
int3
stc
nop
mov
sbb
add
cmpsl
inc
bound
and
push
adc
popf
data16
das
fistpll
les
scas
xor
idivl
fidivs
test
cmpl
popf
sub
scas
loopne
int3
aaa
mov
mov
mov
inc
mov
in
push
frstor
cmpsl
loopne
push
sbb
lret
xchg
inc
fs
jae
dec
sti
fcoml
std
lea
insb
sahf
adc
ret
shrb
pushf
jmp
mov
movsl
outsl
mov
hlt
pop
jge
shll
enter
inc
mov
call
mov
sub
adcb
xchg
or
scas
in
filds
popa
push
jno
scas
in
aaa
xor
inc
push
iret
std
inc
push
pop
rcrb
loope
adc
add
mov
add
jp
xor
js
and
or
sub
jns
mov
movsl
iret
outsl
xlat
stc
add
mov
stc
imul
jg
inc
add
je
xchg
fidivl
pop
jno
cmp
jl
xor
cmp
nop
add
in
inc
xor
push
outsl
cmp
mov
repnz
ds
dec
ficompl
lods
sbb
or
ljmp
es
xchg
loopne
movb
adc
xlat
idivb
push
movsb
add
mov
ljmp
repz
and
jp
sub
inc
repz
and
add
or
aaa
add
or
or
sbb
lahf
add
add
xchg
fnop
cmc
xchg
or
add
jmp
push
add
dec
jmp
push
test
popa
inc
lods
jg
clc
cmp
iret
dec
jns
pop
lcall
nop
mov
nop
jge
in
call
cs
aas
lods
aad
lahf
aas
sub
sub
loopne
stos
iret
mov
sub
lret
sbb
out
sub
jbe
add
push
or
xchg
ja
mov
movsl
sub
inc
dec
sub
jns
inc
push
push
jl
push
je
bound
xchg
mov
gs
in
pop
mov
add
sbb
fimuls
mov
jge
cmp
pop
gs
ret
lcall
aaa
testb
cmp
cmc
outsl
insb
ficompl
lret
in
xor
push
lret
sbb
enter
jne
inc
push
push
roll
cld
adc
ret
in
adc
pop
scas
adc
mov
divl
dec
dec
mov
loop
insb
mov
sti
adc
dec
fsubs
xor
aaa
and
mov
lds
cmp
xchg
xchg
fcoms
in
mov
cmpb
adc
ja
ret
jo
orb
les
orl
out
in
outsb
sahf
imul
je
andb
add
sbb
loope
xchg
pop
je
mov
cli
or
xchg
pop
cli
mov
mov
enter
fdivr
mov
sbb
mov
aaa
outsb
cmp
call
inc
jge
cld
push
fcom
cld
es
pop
xchg
lea
push
xchg
xor
test
into
scas
insb
push
adc
lfs
shlb
and
sbb
pop
out
movsb
inc
aad
loop
add
and
stc
aaa
jae,pt
pop
push
aam
cmp
lea
fucomi
ret
arpl
push
push
test
loopne
dec
sub
adc
jl
fwait
std
outsl
jle
mov
dec
lods
mov
jle
rcll
aaa
ja
dec
mov
dec
add
hlt
es
mov
jmp
enter
hlt
push
add
pop
daa
psraw
mov
outsb
je
mov
adcb
lcall
pop
xchg
jnp
pop
mov
mov
jmp
mov
cmpsl
movsb
mov
jl
push
into
or
in
and
js
jns
adc
arpl
lods
pop
call
cmpsl
sub
push
sbb
aaa
mov
jecxz
cmpsb
ret
jp
daa
imul
in
fldenv
aam
jb
out
xor
mov
mov
mov
sub
imul
addr16
movb
pushf
hlt
pop
mov
xchg
xor
mov
push
mov
testb
push
pop
jle
outsl
dec
and
out
neg
ja
cmpl
add
jae
cmp
sub
cmpsb
push
aad
stc
pop
or
cld
sub
adc
rcrb
jg
stos
mov
es
fimuls
into
ret
dec
mov
or
repnz
fwait
test
mov
test
adc
sbb
adc
dec
stc
in
jo
inc
cmp
shlb
mov
aad
sbb
or
imul
fmuls
cmp
loopne
movsl
out
dec
dec
mov
dec
lret
iret
inc
jl
mov
jns
mov
mov
or
add
out
mov
sub
sub
call
mov
outsb
push
insl
addr16
mov
pop
pop
lret
pop
test
adc
outsl
jns
push
stc
aaa
xor
adc
adc
mov
xchg
in
lret
cmpl
les
mov
idiv
jne
dec
scas
adc
leave
or
outsl
arpl
mov
cld
in
xorb
mov
rorl
inc
insl
outsl
mov
fmul
add
std
fldenv
les
sahf
add
data16
in
imul
push
rolb
jnp
push
sub
fisubs
push
ret
mov
test
neg
xchg
out
enter
arpl
rorb
rclb
dec
aaa
sub
or
sub
ss
in
lods
das
loop
shl
xchg
in
movsb
or
int3
insb
dec
or
mov
xorl
in
jmp
xorl
mov
stc
and
popa
mov
jle
sarb
mov
or
test
icebp
lods
add
jl
mov
int
fcmovne
movsb
je
mov
fisubs
loopne
adc
cmp
and
repz
in
aas
mov
movsb
sub
jecxz
push
lcall
hlt
cmp
sub
mov
xor
iret
jmp
and
add
push
out
nop
lret
xchg
sbb
pop
loope
test
push
sub
pop
lock
fisubs
push
pusha
das
hlt
push
adc
outsb
aaa
mov
jg
loopne
adc
outsl
push
mov
cmpsb
sbb
icebp
xchg
push
int
or
add
push
incb
add
pop
push
addl
dec
in
and
push
xchg
inc
xor
push
xor
push
aam
mov
insl
ss
mov
in
rcrb
leave
and
ret
stos
pop
or
fbld
fiadds
cld
mov
rolb
js
popf
enter
xchg
push
lods
pop
in
sub
nop
aas
or
mov
mov
ret
dec
inc
inc
cmp
jne
out
sahf
shlb
aam
add
testl
mov
fmul
test
sbb
ret
mov
pop
dec
pop
sbb
sbb
int3
xchg
pop
sbb
arpl
and
push
test
dec
add
pop
flds
xchg
cli
lods
adc
push
nop
push
adc
mov
jmp
sbb
sbb
cld
lahf
ljmp
push
shlb
cli
adc
call
subb
lret
ljmp
xchg
jle
jae
inc
push
sbb
mov
mov
sbb
ret
cmp
or
dec
lods
in
jmp
inc
mov
sbb
mov
dec
rolb
mov
mov
push
mov
inc
cwtl
dec
add
sar
rcr
movsl
insb
popa
adc
inc
add
inc
jne
sub
out
fsubrs
adc
mov
movsl
imul
nop
cmp
push
loop
cltd
pop
inc
lds
dec
cmpl
lret
loop
sarl
in
ss
sbb
lock
js
repz
xchg
test
mov
jae,pt
fsubrs
jg
rcrl
in
mov
pop
cmp
mov
xchg
insl
aaa
add
sbb
or
xchg
into
xadd
dec
pop
xlat
jb
in
int3
jo
jno
pop
mov
das
pop
lcall
jno
das
cli
push
icebp
push
sbb
mov
jno
lret
adc
ret
cmp
test
aam
lods
addr16
clc
sbb
jnp
mov
adc
outsl
and
xchg
in
xchg
cmp
adc
xchg
cmp
mov
add
sub
add
or
in
cmpsl
shll
push
jns
sbb
ss
stc
adc
xchg
icebp
cs
shrb
jecxz
inc
mov
push
xchg
adc
pusha
xor
mov
outsb
cmc
fisubrl
lahf
sub
mov
xchg
push
mov
mov
add
sbb
leave
js
dec
dec
inc
push
gs
lds
xor
xor
fstps
movsb
stos
dec
dec
xchg
negb
push
sahf
aam
shrb
int3
call
inc
mov
test
je
pop
ret
addl
xchg
int3
jnp
inc
sti
in
aam
popf
mov
andl
sub
xlat
gs
dec
scas
std
gs
jle
pop
sbb
sub
les
insl
icebp
scas
lahf
and
cmp
dec
jo
leave
mov
imul
sbb
inc
js
leave
lock
push
insb
mov
xchg
jle
cmp
data16
jg
ds
pop
push
xchg
jns
mov
or
jp
rcrl
mov
dec
fstps
mov
xchg
adcl
mov
scas
push
out
nop
outsb
loopne
sbb
in
test
sub
enter
outsb
dec
cmp
xor
mov
pop
aad
cs
jnp
xor
stc
cmp
jle
mov
dec
push
lahf
or
push
lods
add
sar
mov
mov
iret
or
lcall
and
adc
lcall
imull
inc
inc
jne
imul
push
pop
xchg
movsl
push
dec
pusha
pop
aad
jmp
mov
fisubl
sbb
xchg
xchg
repnz
hlt
push
push
out
aam
loope
ret
call
dec
jge
mov
sti
adc
out
sbb
adc
add
xchg
call
popa
mov
push
rcr
cli
mov
enter
mov
pushf
cld
adc
ret
mov
mov
inc
jb
scas
xlat
jo
add
adc
fimuls
aas
sti
cmpsl
arpl
lldt
add
and
jnp
or
add
int3
mov
cmpsl
js
cld
cmpb
enter
arpl
push
or
stos
adc
adc
push
jnp
sub
mov
add
div
fs
rclb
sub
sbb
clc
pop
lds
inc
addr16
or
lahf
clc
adc
idivl
movsb
stos
push
dec
loop
adc
mov
shrl
rolb
inc
pop
mov
sbb
jmp
pop
xlat
in
mov
in
leave
xchg
ss
jecxz
fucomip
sbb
in
mov
cs
cli
mov
fxch
mov
rcrb
xor
mov
adc
fsubrs
jmp
lret
lcall
sbb
ds
or
dec
mov
inc
out
rclb
mulb
inc
outsb
xchg
loopne
adc
dec
pop
incl
fwait
jge
cmpsb
mov
int
mov
push
sahf
nop
addr16
mov
cmp
call
adc
mov
cmpl
mov
mov
fstpl
lret
or
sbb
mov
movd
fisubrl
mov
cli
mov
jbe
sub
adc
insb
or
push
shll
xchg
xor
or
fbld
push
mov
add
scas
jo
push
lods
fildll
aam
inc
popf
insb
jge
insb
lret
adc
mov
adc
iret
pop
test
cmpsb
lods
and
lods
sbb
and
pusha
daa
dec
pop
push
or
pop
and
dec
xor
data16
cmp
cmp
pop
insb
mov
inc
arpl
pop
mov
jb
mov
dec
and
adc
sbb
ljmp
inc
inc
inc
loop
mov
loop
push
mov
mov
mov
add
mov
pop
ss
mov
popf
gs
stos
pop
xchg
pop
adc
dec
mov
jns
mov
sub
pop
rolb
repnz
jb
adc
pop
imul
clc
jno
jne
mov
enter
adc
aas
int
lods
out
adc
lock
insl
xchg
stc
inc
pop
or
fimull
sub
and
or
vmovq
push
push
or
mov
mov
jge
das
sub
fbld
sti
sbbl
xor
lods
rcll
mov
mov
lods
jns
mov
push
sub
mov
and
jns
dec
iret
push
mov
out
mov
mov
mov
in
repz
cli
xchg
push
jb
les
in
dec
jle
imul
adc
mov
lret
and
and
sbb
or
lods
addr16
enter
sbb
add
pop
adc
jb
sbb
cmp
insb
icebp
lcall
xchg
or
sti
lret
call
lahf
fmul
adc
sbb
mov
jmp
std
inc
nop
subl
pusha
or
repz
adc
sti
int3
gs
hlt
pop
xchg
sbb
mov
and
fcomps
jmp
jno
das
mov
push
and
fstpl
inc
andl
fisttps
ljmp
subb
bswap
sub
push
test
dec
inc
push
xor
rcll
and
mov
jge
out
push
mov
mov
xchg
pusha
mov
call
in
or
cwtl
rorb
xchg
popa
iret
inc
ret
insb
movsl
xor
jne
push
adc
cmp
test
lea
inc
push
push
aas
repz
pop
pop
dec
scas
xchg
lea
stos
mov
lods
and
xlat
loop
fs
xchg
dec
int
jno
divb
outsl
adc
mov
addb
jns
cmpsb
decb
aaa
mov
stos
push
sbbb
pop
dec
out
cmp
outsl
es
cmpsb
sbb
cmpsl
and
gs
test
ret
out
lods
inc
mov
and
cmp
mov
xchg
int3
testb
xlat
popf
lods
rcl
add
jbe
lea
popa
fwait
ljmp
xchg
shl
xchg
sub
push
xlat
jb
and
xor
mov
push
out
dec
push
xor
insb
loop
loope
arpl
sahf
fldl2t
stos
pushf
jb
movsl
test
dec
in
repz
jge
js
jb
cmc
xchg
pusha
cmpsb
inc
shrb
push
adcb
adc
loope
sbb
mov
out
dec
mov
push
mov
jo
addr16
mov
lret
cmp
xor
pop
in
rol
inc
dec
adc
push
imul
ljmp
mov
ss
stc
ljmp
lea
mov
popa
addr16
aaa
push
ret
andb
mov
test
dec
rcrl
sbb
jo
pop
push
dec
add
rcrb
sbb
cltd
pusha
movsb
add
inc
mov
pop
add
xor
enter
jle
jecxz
leave
dec
mov
std
sbb
jns
sbb
outsl
sarb
pop
jns
xchg
jo
outsl
scas
xchg
sub
xor
pop
iret
std
out
test
adc
stc
xor
scas
mov
mov
in
add
bound
push
nop
jne
push
inc
loop
je
je
pushf
xor
imul
dec
mov
push
arpl
pop
push
in
std
test
nop
ja
fmull
pop
pop
adc
mov
rol
and
pushf
xchg
cmp
movsl
outsl
in
push
scas
orl
mov
cs
pop
add
cmc
add
xchg
sbb
jno
ds
dec
mov
arpl
loop
rdpmc
int
fs
out
cmp
push
sub
mov
add
inc
std
rcll
dec
jbe
loop
adc
mov
lret
pop
mov
fwait
pop
jo
xor
add
std
mov
pop
xchg
outsl
arpl
xor
inc
add
mov
repnz
mov
mov
pop
mov
shrb
js
aaa
div
pop
cmpsl
andl
es
aaa
add
jae
clc
pop
cld
out
add
push
std
test
inc
inc
test
add
dec
inc
andl
testb
fidivrl
idivl
mov
movsb
jl
js
jp
pop
push
mov
cmp
fcmovbe
dec
leave
lcall
pop
sbbb
or
fucomp
mov
fisttpll
jl
mov
xchg
jl
sti
hlt
mov
mov
insb
pop
xchg
pop
dec
mov
dec
xchg
sub
ja
mov
push
cmp
jle
add
or
inc
iret
dec
call
rcl
mov
push
fcmove
loope
icebp
cld
stos
sbb
add
in
xchg
push
iret
or
pop
inc
ficompl
or
add
in
jmp
sub
dec
jl
pop
clc
ret
mov
xor
addr16
mov
popf
fs
cmp
imul
mov
add
movsb
or
dec
lret
fwait
and
pop
sub
pop
pop
jno
fidivrs
or
pop
xchg
fsubl
sub
xchg
adc
pop
sbb
adc
xchg
sub
ljmp
xchg
jbe
and
ja
mov
adc
inc
add
dec
cli
cmp
mov
jb
hlt
push
ss
and
test
jne
movsl
mov
fwait
cmp
and
fnstcw
push
or
jae
adc
and
ffreep
rdpmc
jle
mov
inc
jg
mov
nop
cld
pop
lds
adc
jmp
mov
or
frstor
stos
das
call
int3
xchg
mov
les
rorl
cmp
cmp
push
dec
pop
lods
movsb
shll
addl
adc
jl
jg
dec
mov
add
inc
in
test
jo
shll
dec
mov
repz
adc
push
pusha
testb
cltd
inc
test
xor
mov
test
lret
sub
sbb
icebp
add
fnstenv
fsts
adc
inc
mov
outsl
int3
sbb
nop
sub
add
jbe
sbb
pushf
test
inc
xchg
jge
sbb
or
mov
stos
jno
lret
pop
daa
sti
push
lret
push
and
repz
popa
les
pop
call
imul
xor
dec
push
aaa
cmp
nop
xchg
pop
push
and
ds
bound
cmpsb
movsb
gs
loopne
mov
popf
pop
lret
xchg
cld
rcl
or
jge
xlat
mov
cmpsl
roll
add
subl
stos
push
xor
dec
mov
pop
jle
loop
xor
xchg
mov
les
and
xchg
out
jmp
add
mov
or
out
dec
rolb
mov
enter
push
cli
cmp
ds
stos
cmpsl
inc
sbb
and
pop
xchg
xchg
jae
jae
shrl
add
pop
data16
xchg
mov
mov
mov
pop
adc
lods
cmp
cvtdq2ps
pop
add
xor
sub
or
pop
fidivrs
sbb
inc
cmp
das
mov
fistpll
lods
mov
repnz
movsb
test
ja
stos
cwtl
js
mov
mov
mov
or
push
jle
aaa
test
inc
popa
dec
test
scas
cmpsl
stc
mov
xchg
pop
clc
sub
scas
shrl
add
insb
insl
inc
or
inc
sbb
hlt
cmpsb
mov
sub
cs
mov
jle
adc
cld
or
inc
push
adc
dec
das
dec
mov
lods
xor
cmp
mov
aam
cltd
mov
in
fs
mov
xchg
sbb
mov
and
scas
fdivr
inc
fwait
xor
into
loopne
jnp
outsl
sbb
jno
pop
xchg
rcll
mov
push
sub
fdivrl
out
iret
ja
lcall
push
in
jecxz
xchg
inc
pushf
and
imul
sbb
push
bound
lods
inc
es
mov
shlb
mov
lahf
in
aas
mov
loope
daa
adc
mov
xchg
adc
jbe
daa
dec
ret
leave
in
lock
popa
jle
test
add
xor
aam
sub
fdivrs
or
das
test
xor
jecxz
jle
fsubrl
push
xchg
fnstsw
mov
clc
inc
xchg
inc
and
mov
xchg
scas
cltd
sbb
mov
jge
andl
fdivs
fiadds
sub
mov
loope
pop
mov
sbb
imul
mov
insb
xchg
rcll
xlat
call
cmp
xchg
or
or
movsl
jo
in
cwtl
or
out
das
xor
lret
test
mov
in
sahf
mov
cmp
or
sub
adc
add
push
insb
add
out
mov
outsl
ret
movsb
cwtl
cmp
mov
pop
xor
loopne
pop
fdivs
xor
popa
xchg
rcr
mov
add
imul
pop
jle
xchg
ljmp
js
sbb
imul
add
adc
pop
jbe
fs
sti
inc
sub
add
fsub
gs
or
jbe
mov
push
or
fadds
icebp
adc
sti
cwtl
je
rolb
xchg
xor
fwait
movsb
and
or
outsl
push
cli
jns
sub
imul
cmp
mov
dec
push
or
icebp
jbe
shll
cs
cwtl
scas
test
mov
inc
dec
andb
ficoml
outsb
push
jg
shll
jo
loopne
out
test
sbb
lahf
mov
dec
inc
push
sahf
jns
and
jno
int3
pop
xchg
in
scas
cmp
mov
aaa
add
lods
and
cmp
cmp
popa
and
sti
daa
mov
inc
push
or
std
xor
stos
add
push
test
lahf
inc
jns
push
enter
out
in
xor
mov
lods
test
mov
ss
insl
pusha
pop
mov
lea
pop
outsl
in
loop
aam
adc
mov
fsts
and
mov
stos
mov
jnp
icebp
out
pop
shrb
out
push
sbb
lret
xchg
push
cltd
xchg
adc
ret
std
mov
push
xchg
mov
dec
aad
jge
das
inc
mov
inc
rolb
push
push
add
lods
int
pop
rcl
fsubrp
jo
add
add
mov
fcomps
ljmp
cmp
es
call
mov
sub
js
mov
out
xchg
test
out
and
mov
add
loopne
movsb
push
dec
call
mov
xchg
mov
or
and
mov
neg
iret
lret
mov
xchg
outsb
clc
dec
cmp
scas
mov
fwait
jnp
sub
push
jl
and
jge
lahf
sbb
mov
xor
mov
ds
mov
mov
sbb
lock
test
addr16
jns
xlat
int
nop
lret
pop
in
popf
sub
adcb
lret
pushf
cltd
xlat
nop
xchg
push
iret
cmp
call
lahf
adc
pusha
idivl
push
and
add
test
xchg
adc
mov
fucomp
shl
jp
inc
mov
fistl
cmp
pop
dec
imul
loopne
xchg
stos
ds
lret
into
pop
adc
adc
nop
or
push
jne
ret
sub
xor
pop
inc
adc
es
mov
je
push
mov
jmp
cmpsw
test
gs
aad
mov
popf
add
stc
and
jge
test
je
aam
push
dec
hlt
std
pop
iret
loope
clc
jne
mov
sub
arpl
out
mov
push
sub
cld
and
pop
cwtl
mov
gs
incl
repz
jp
pop
jge
mov
dec
lods
inc
dec
stos
mov
cmpsl
sub
add
jecxz
push
cwtl
lods
jecxz
fstpt
inc
xchg
popf
jo
stos
repz
dec
sub
sbb
push
push
sub
fstl
gs
inc
fistpll
andb
rolb
or
cwtl
cmp
aas
mov
outsb
and
into
dec
sub
stos
mov
fdiv
jae
ret
jns
and
and
mov
dec
mov
test
inc
in
das
sub
add
xchg
nop
ja
cmp
fdivs
mov
fcomp
sarb
xor
dec
push
enter
fs
inc
cmc
aam
fcomp
enter
push
xchg
push
fwait
sbb
adc
add
xor
sahf
adc
push
mov
aas
mov
push
xor
loop
push
clc
mov
sti
push
loop
mov
push
neg
inc
lods
adc
jecxz
aaa
sbb
xor
add
fsubl
fnstenv
push
push
adc
and
aam
imul
test
fcoml
and
loop
cs
sti
pop
pop
scas
mov
inc
sub
les
test
inc
mov
mov
data16
leave
cs
pop
aas
shrl
lret
fninit
leave
xchg
xchg
in
out
pop
push
test
jg
imul
dec
xor
in
adc
fbld
lret
out
xchg
cmp
in
pop
out
stos
mov
sub
add
mov
sub
imull
push
adc
cltd
je
mov
cmc
mov
xchg
movsl
add
inc
xor
fcmove
mov
jnp
dec
add
or
mov
js
xor
or
xor
xor
xor
scas
xor
fnstcw
sub
xchg
jnp
jo
lret
arpl
jno
repnz
lcall
sub
in
subb
jge,pn
sbb
adc
and
scas
dec
xor
jge
cmpsb
rcrl
jmp
cmp
mov
cmp
fidivrs
lock
call
and
pop
out
call
pshufw
jg
mov
mov
es
in
cmp
hlt
test
xchg
mov
insl
ret
dec
mov
adc
sub
pop
pop
outsb
call
sahf
mov
add
pop
or
dec
loopne
xor
push
imul
jns
jb
ljmp
xchg
jmp
insl
adc
fildll
add
sti
dec
mov
clc
dec
xchg
insb
in
jmp
fwait
xor
lahf
pop
jae
movsb
xchg
pop
ja
les
lret
stos
and
jnp
lahf
dec
pop
dec
insl
sub
out
adc
adc
ja
xor
sbb
adc
xlat
mov
mov
lcall
pop
mov
dec
push
mov
push
mov
jmp
and
fwait
dec
daa
outsb
and
xor
fnstsw
lds
std
cmp
push
jns
icebp
stos
sbb
cmpsb
lea
mov
repz
xchg
cmp
push
scas
leave
je
loopne
nop
das
int3
mov
mov
outsl
roll
or
push
enter
icebp
shrb
popf
test
inc
jo
rcrl
jl
pop
xchg
add
test
fmul
push
adc
add
dec
xchg
push
or
mov
inc
sarl
cli
mov
addr16
push
inc
test
and
test
outsb
rcrl
adc
add
push
sahf
test
mov
fcmovne
clc
jno
lahf
ret
sub
adcl
xchg
dec
inc
jle
cmp
jp
loopne
cmpsl
sub
outsb
pop
push
jp
test
ret
and
xchg
test
jo
fldl
cmp
rorb
jne
pop
cltd
add
add
ljmp
push
movups
hlt
andb
inc
add
push
push
fidivl
or
and
push
aam
adc
push
pusha
stc
out
sti
pop
sbb
xchg
movsl
mov
fldl
ds
das
mov
fldenv
or
test
and
xor
daa
dec
ljmp
and
imul
ljmp
fldenv
xchg
adc
test
test
pop
pop
movsb
cs
movb
in
mov
pop
mov
jecxz
aad
sub
sarb
sbb
data16
add
imul
pop
iret
or
jno,pn
outsb
sbb
mov
in
mov
cmpsb
inc
adc
xchg
push
sbb
fwait
cmpsb
cld
mov
adc
mov
inc
cmpsl
or
aas
test
pop
mov
enter
dec
xor
pop
and
je
adc
push
xchg
pushf
jp
xchg
jle
inc
dec
jno
stos
jmp
jno
mov
pop
mov
lods
mov
push
iret
vmovapd
sbb
addr16
adcl
push
repz
lock
sub
into
ds
jl
cli
int3
ficompl
push
stos
xchg
enter
mov
pop
test
imul
cmp
jg
inc
mov
mov
xor
out
xchg
pop
mov
jle
sahf
cmp
and
jmp
cmc
jo
pop
push
out
pop
sbb
mov
aad
jle
mov
mov
push
test
jne
pop
fdivrp
inc
adc
dec
xorl
je
xor
enter
jmp
xchg
pushf
loop
jge
sbb
pop
shl
mov
sbb
das
pop
mov
push
mov
inc
rolb
ja
scas
dec
mov
xor
inc
in
jge
test
add
push
test
js
in
andl
stos
push
push
popf
hlt
sub
mov
push
in
pop
mov
pop
xor
ljmp
jp
pop
sbb
inc
cmpl
inc
lcall
xor
cwtl
ss
jge
jne
mov
and
mov
add
mov
xor
loope
sbb
out
push
loopne
aam
mov
adc
sarb
cmp
push
mull
inc
and
and
xchg
cmpsb
mov
mov
dec
movl
pop
ja
call
adc
jp,pn
in
hlt
or
scas
cli
fcoml
aam
out
inc
pop
loop
jb
ror
mov
mov
loop
outsl
cmpsl
mov
sbb
pop
sbb
sbb
jno
xor
mov
test
pusha
pop
js
xor
and
insl
inc
dec
leave
xchg
hlt
push
movsl
mov
loope
xor
sarb
xchg
mov
jmp
roll
push
jne
mov
xor
cmp
test
aaa
mov
cmp
std
fsts
and
sub
cwtl
xchg
pop
or
aam
shll
inc
mov
dec
adc
bound
lods
fsubrl
adc
hlt
inc
sub
div
dec
push
mov
std
dec
push
sarb
mov
jno
aam
insb
push
mov
lret
adc
iret
ret
sub
test
scas
pop
mov
xorl
push
xor
dec
jge
sbb
pop
jmp
pop
imul
call
and
cmc
out
loopne
mov
push
sahf
jne
sub
ds
orb
xchg
pop
repnz
popf
test
inc
dec
sti
lods
push
inc
adc
push
addl
clc
cmc
mov
xchg
int3
adc
xchg
outsl
mov
iret
out
out
cmp
in
dec
nop
jmp
push
insl
xor
lahf
xor
popf
lahf
push
hlt
mov
mov
push
clc
imul
xlat
jo
bound
daa
int3
mov
ds
aaa
xlat
lret
and
pop
push
es
mov
ficoml
hlt
popa
test
out
jae
xor
xchg
cmp
sub
sbb
push
insb
lret
jae
pop
inc
inc
movsl
fsubl
cwtl
jp
mov
scas
or
mov
sahf
icebp
mov
shrb
sti
cmp
xchg
xchg
push
sbb
lods
ret
lahf
repnz
cmpsb
mov
je
or
jecxz
rcrl
adc
fnstcw
and
test
mov
add
sbb
imul
icebp
dec
mov
inc
std
and
add
repz
adc
cmpsl
or
addl
les
and
and
sub
jmp
inc
repnz
es
cmpsb
shll
pop
jmp
fiadds
cmp
dec
xor
jl
fisubrl
jmp
push
cld
adc
jbe
fwait
mov
test
repz
sub
out
jno
out
imul
ret
inc
in
je
push
fst
jne
push
jns
ror
int3
hlt
push
jno
jno
leave
fwait
or
cmp
enter
fcmovb
test
cs
xlat
into
jp
idivb
mov
addl
add
pushf
pop
inc
inc
sbbb
mov
hlt
shrb
push
xor
test
xchg
cmpl
ja
mov
ss
adcl
jp
pushl
test
gs
test
out
lods
and
jge
sbb
test
cmp
mov
push
lock
rcrl
lds
out
sbb
push
xchg
arpl
lods
inc
sti
pusha
das
fstp
push
loopne
cmp
cli
fldt
dec
imul
das
hlt
mov
int
mov
cmp
add
xchg
data16
ljmp
test
iret
push
lret
pop
cs
sahf
push
dec
icebp
xor
icebp
scas
xlat
cmc
and
pop
adc
popa
das
cmc
fisubrs
mov
add
inc
add
add
call
add
adc
add
das
inc
add
add
rol
inc
add
xchg
add
call
add
fmull
cltd
aas
mov
sbb
push
xor
dec
and
rolb
mov
test
add
pop
int3
aad
add
out
std
pop
xchg
add
sti
pop
or
and
jge
sbb
lret
roll
add
adc
mov
pop
addr16
scas
les
loope
xchg
shlb
jne
mov
inc
dec
aas
and
je
mov
mov
les
inc
sub
shrl
add
jg
out
pop
jge
subb
in
scas
aad
or
mov
repnz
dec
or
ret
insl
adc
cmp
pop
push
in
imul
shrl
mov
outsb
and
je
xchg
out
out
rorb
push
or
cmp
inc
sbbb
lcall
inc
push
data16
mov
sti
rolb
xchg
and
jo
movsl
pop
add
negl
outsb
xor
es
aam
adc
jnp
insb
mov
nop
or
outsl
clc
ret
jmp
jb
insb
jmp
xor
mov
adc
mov
cmp
orb
lock
mov
fistl
pop
adc
pop
pop
subl
sti
pop
cmp
cld
lahf
pop
insb
jp
xlat
shrb
cmpl
mov
and
fnstsw
fcoml
insl
mov
mov
xor
xchg
lock
insb
cmc
push
scas
jo
mov
cmp
mov
in
sarl
push
jnp
insb
stos
pop
dec
and
repz
loop
cmpsl
adc
jae
test
xor
inc
mov
ss
jns
cmp
mov
inc
ja
icebp
mov
lret
aas
lea
xor
dec
mov
ret
shll
shl
je
sub
loopne
jg
push
fisttpll
ror
cmpsl
and
cld
sub
pop
adc
push
mov
movsl
jae
mov
inc
out
xchg
call
jg
clc
jno
push
xor
sbb
dec
out
adc
test
and
and
jl
lods
les
std
pop
pop
add
insl
aaa
push
adc
stc
inc
ja
cld
test
popa
fildl
js
decb
xor
setns
lods
rcrb
mov
jb
push
dec
adc
push
loope
cwtl
mov
push
or
lahf
adc
or
xor
add
jb
cwtl
cltd
leave
push
int3
mov
adc
cmp
cmpl
and
lahf
mov
cmc
ja
inc
jmp
jmp
jo
mov
push
sbb
mov
cmp
insb
gs
aam
sub
test
sub
stc
ds
in
mov
ds
outsb
jae
sahf
iret
js
sbb
mov
and
test
orl
test
ret
add
mov
jae
inc
jl
test
dec
jae
mul
dec
out
fld
inc
divl
aam
mov
inc
mov
sub
mov
push
ds
push
mov
xchg
push
sti
sbbb
dec
shrl
jp
mov
mov
pusha
movsl
lcall
into
shrl
arpl
shl
mov
xor
xor
ljmp
pop
cmc
xchg
xchg
lahf
fwait
cmp
cmp
into
mov
arpl
inc
fisttpl
pop
sub
loope
sub
dec
jne
adc
pop
in
adc
pusha
sbb
in
js
pop
cmp
addr16
fbld
fwait
sbb
mov
sbb
notl
cmp
gs
add
jnp
rcr
add
adc
aaa
in
sarl
pop
pop
loop
inc
lods
xchg
xor
xchg
pushf
mov
add
sbb
or
pushf
pop
jle
mov
mov
hlt
xchg
mov
xor
mov
pusha
and
mov
cmp
aam
or
sub
pop
lahf
std
loop
fdivs
ss
stos
int3
mov
xor
hlt
jmp
dec
dec
push
ret
pusha
cmp
mov
cmp
or
sub
pop
jl
outsl
jge
ljmp
and
imul
rorb
push
ja
and
movsb
xchg
push
mov
sti
in
xchg
aam
and
testb
sarl
mov
fiaddl
into
int3
mov
sbb
dec
inc
mov
sub
sub
sbb
cmp
push
outsb
sti
xorl
enter
or
xor
mov
enter
rcrb
mov
stc
dec
or
ljmp
dec
sub
jns
loop
pop
xlat
sbb
in
jo
sub
out
inc
sti
and
ss
xchg
fmulp
fnsave
jbe
mov
out
mov
ja
fidivl
sub
icebp
orl
inc
repz
aas
push
popf
cld
adc
cmpsb
cmp
add
scas
sbb
cltd
lahf
and
js
xchg
pop
addr16
data16
xor
in
fistpll
je
mov
adc
pop
rolb
sub
mov
daa
mov
push
fsubs
mov
mov
mul
mov
xchg
cmp
or
xor
xchg
jne
movsl
lea
push
cmpsl
inc
std
adc
jae
out
mov
push
or
cltd
mov
in
mov
or
and
sub
sub
pop
add
mov
lea
or
les
push
sbb
insb
rcll
test
cmp
lcall
neg
int
mov
out
stos
pop
rclb
cmpsb
cmc
cs
popf
xchg
inc
shl
fcomps
or
mov
inc
fdivr
jmp
mov
cli
sbb
mov
cmp
sbb
inc
icebp
into
into
push
jecxz
stos
cmp
adc
xor
sbb
or
scas
mov
repnz
leave
mov
fistl
andl
or
xor
jp
adc
push
dec
jg
mov
movq
inc
jno
sti
mov
xor
mov
repnz
jp
jmp
stos
popa
or
in
js
iret
pop
add
lahf
outsl
add
xor
sub
popf
jp
push
imul
test
fisttpl
and
xchg
negb
push
xchg
add
add
enter
sub
sti
cld
push
cmp
jo
or
iret
push
in
cmpsl
clc
adcb
cmp
idivl
int
sub
xchg
inc
jno
xor
xchg
lea
jb
and
sub
pop
add
mov
ret
aas
stos
mov
jmp
enter
mov
mov
sub
lcall
mov
or
xchg
cmp
adc
or
jbe
mov
out
repnz
jmp
scas
or
jecxz
iret
or
inc
xchg
cmp
lret
sub
mov
push
stos
jmp
adc
jge
cmpsl
mov
mov
xchg
cmpsb
or
adc
mov
push
shrb
xor
aaa
add
rcll
scas
adc
fdiv
push
mov
lock
mov
cmp
add
or
xchg
imul
mov
inc
push
sbb
mov
arpl
jge
stc
xchg
and
add
jg
sbb
sub
arpl
cmp
mov
sub
pop
mov
inc
sahf
and
leave
test
push
das
xorb
sub
dec
cmp
subb
xor
sbb
cli
daa
cli
hlt
lcall
mov
stos
pop
gs
movsl
inc
inc
lahf
notb
testl
aad
test
pop
mov
jns
loop
nop
lock
mov
add
mov
jnp
dec
mov
outsl
push
hlt
mov
dec
lcall
int3
xchg
mov
imul
icebp
dec
xchg
cmp
es
sbb
outsb
dec
dec
mov
aas
cmp
movsb
pop
cmp
fwait
push
outsl
cltd
cmp
in
jnp
mov
enter
ds
push
es
cmpsl
outsb
frstor
insl
and
and
pop
xchg
iret
sbb
and
cmp
ljmp
in
jbe
push
jae
gs
cmp
scas
pop
movb
in
and
ret
popa
pop
sar
stos
mov
sub
mov
mov
xchg
loope
mov
xchg
push
roll
inc
lock
pop
nop
popa
or
pop
sub
pop
mov
xchg
int
in
pop
and
and
fwait
aaa
add
push
lcall
mov
ret
idivl
cmp
dec
clc
bound
inc
movsl
mov
xor
aam
nop
jbe
jb
mov
fildl
mov
iret
pop
in
scas
push
shlb
in
cmpsl
arpl
icebp
pop
fidivs
inc
aaa
xchg
dec
fistpll
add
mov
sbb
fucomp
je
pop
adc
es
xchg
inc
jp
fcmovnbe
push
pop
xor
cmpsl
dec
fists
js
cli
out
inc
sbb
or
data16
fs
push
and
xlat
je
shl
loop
aas
insb
fnstenv
or
add
xchg
enter
lahf
mov
ds
jmp
aas
xor
inc
fstpt
sti
adc
lret
cmc
and
sub
addr16
jne
add
sub
orb
test
mov
adc
cmp
les
push
scas
insb
mov
ss
pop
xor
cmp
pop
sub
dec
and
and
rcl
pop
ljmp
cld
mov
jmpw
arpl
mov
push
jne
xor
pop
jmp
sbb
gs
or
jg
dec
mov
inc
je
out
push
cwtl
jae
lret
fisubrl
push
lea
shl
rcll
fs
jmp
cmp
mov
imul
jo
enter
call
pop
pop
jnp
sbb
and
pop
jb
loope
lret
iret
repnz
xlat
shll
imul
pop
inc
lock
cwtl
rorl
addb
jnp
mov
sub
add
popf
imul
mov
ljmp
stos
mov
cmp
arpl
hlt
pop
xlat
hlt
lock
xor
sar
into
out
ret
faddl
nop
xor
xchg
mov
or
mov
test
fbld
cmpsb
cmpsb
in
jno
and
push
test
xor
xor
mov
ror
sub
xchg
lret
ljmp
je
int3
cmpl
mov
inc
leave
sahf
les
fsubrp
add
add
dec
cmp
sbb
pop
cmp
mov
lahf
pop
mov
mov
dec
fwait
lock
in
xchg
sub
lea
test
cld
cmpl
push
arpl
mov
jbe
push
pop
unpckhps
mov
popl
insl
shll
bound
adc
or
mov
loop
clc
mov
dec
xchg
andl
hlt
push
cmpb
sub
push
add
int3
xor
and
sub
or
sub
orl
pop
test
sbb
xor
push
xor
clc
addr16
sti
and
sbb
loope
adc
cmp
leave
jle
in
sub
imul
shlb
aad
pop
mov
icebp
rorb
rolb
adc
pop
or
out
sbb
xor
dec
inc
mov
mov
call
xchg
mov
pop
out
popf
sbb
push
xchg
stos
push
aaa
iret
fistpl
and
pop
les
das
sahf
ret
mov
pop
xchg
pop
xchg
ret
add
movsb
push
mov
call
inc
lea
pcmpgtw
xchg
add
push
sub
aad
xchg
push
in
sub
push
dec
jo
pop
enter
xchg
shlb
cmp
pusha
cmpsl
repz
jmp
mov
imul
fld
shrl
iret
ret
leave
push
cltd
adc
jecxz
add
jg
or
dec
jmp
xchg
leave
rcl
push
add
das
and
dec
jae
mov
fadds
mov
xchg
js
lret
xchg
and
test
arpl
pop
mov
xchg
fmuls
ret
and
pop
sub
dec
xor
out
add
fxtract
lds
inc
jecxz
mov
arpl
sub
cmp
cmpsl
notl
outsb
cmp
mov
xchg
mov
ja
ds
adc
fwait
jecxz
sbb
push
pop
outsb
lds
cwtl
and
dec
xchg
std
sbb
mov
jp
xor
inc
pop
aam
insb
movsb
into
lds
push
mov
imul
mov
fsubr
add
popf
lds
mov
stc
mov
mov
adc
das
movsb
mov
sub
dec
ja
iret
inc
scas
push
lcall
xchg
shlb
push
jp
outsl
loope
pop
inc
dec
popa
pop
mov
pop
add
js
mov
or
cmp
sahf
es
add
pusha
sbb
mov
rolb
and
mov
xor
aaa
xor
aaa
imul
scas
dec
aaa
jne
fnstsw
imulb
js
jg
into
loope
out
lahf
sub
hlt
xchg
mov
push
ret
fdivs
gs
adc
divl
pop
ficoms
cmpl
mov
push
xchg
sbb
adc
inc
pop
ja
cli
enter
cmp
shrl
and
dec
test
dec
pop
push
push
push
xchg
in
int
repnz
add
scas
test
jae
int3
mov
out
pop
les
addr16
jns
xchg
jne
mov
pusha
test
ss
dec
insl
cmp
notl
aaa
add
dec
jo
pop
or
or
mov
dec
pop
jmp
push
push
inc
notb
in
daa
cmp
add
nop
out
rolb
mov
add
push
and
inc
lock
adc
popf
orb
push
dec
in
sahf
mov
adc
sbb
and
mov
xorl
push
adc
xchg
or
arpl
mov
je
arpl
inc
jnp
xchg
jmp
jne
arpl
push
mov
xchg
fdivrl
xor
lcall
sahf
add
inc
adc
ss
and
mov
pushl
aad
aas
mov
or
mov
test
sbb
mov
sbbl
push
leave
mull
adc
stos
mov
dec
or
nop
add
dec
mov
shrb
push
leave
test
lods
sub
push
adc
xchg
in
and
out
stos
loopne
push
pushf
andb
pop
cmp
inc
push
cmpsl
mov
inc
lahf
push
push
adc
pop
outsl
push
mov
mov
mov
sub
sub
add
test
push
jle
lods
cmp
out
int3
test
int
push
out
jge
xor
jo
inc
dec
pop
cmp
dec
xor
je
pop
sub
les
cltd
dec
push
in
cmpsl
movsb
jecxz
pop
movsl
push
decb
movb
xor
push
mov
mov
mov
enter
call
lds
loope
clc
and
into
stos
mov
and
leave
jg
lret
test
xchg
mulb
inc
push
out
stos
in
mov
sub
and
repz
adc
mov
add
shrb
push
loopne
push
call
mov
add
dec
shlb
clc
jns
insl
cmp
shr
pop
push
mov
xor
mov
adc
mov
mov
xor
cmp
xor
stos
nop
xor
push
pop
imul
inc
rorb
subl
dec
leave
test
cmpsb
inc
cli
jle
sbb
jo
cmp
jmp
lods
mov
and
mov
lret
mov
mov
mov
ret
scas
xchg
push
adc
mov
in
jle
popf
test
lods
cld
data16
or
test
pusha
in
and
jl
sub
sub
in
sub
int
cmpsb
mov
std
movsb
fildl
xor
xor
in
cmp
mov
rcrb
sub
push
push
cld
xlat
popf
xchg
rclb
xor
adc
lret
movlhps
pop
pop
cmpsb
pop
push
inc
pop
imul
mov
xor
jmp
js
lret
inc
mov
xchg
add
out
in
mov
mov
les
pop
in
or
insb
daa
jg
dec
mov
or
lods
pop
mov
xchg
sbb
sbb
fnstcw
inc
and
xchg
imul
je
rcrl
pushf
js
out
and
repz
inc
pop
sub
jo
dec
sbb
adc
mov
pop
arpl
mov
jmp
es
rorl
push
mov
push
add
int3
push
sbb
mov
add
lret
and
mov
push
cmp
cwtl
in
test
inc
inc
mov
hlt
shlb
push
push
xor
xchg
push
insl
mov
mov
sbb
inc
xchg
int
fidivrl
jmp
addr16
enter
clc
aaa
sbb
push
es
rolb
inc
or
adc
sbb
sbb
mov
in
mov
xor
cmc
jl
mov
aas
mov
pop
pop
mov
adc
shl
adc
pop
and
leave
insb
mov
mov
js
push
mov
xor
cwtl
shr
push
repz
popa
test
push
lods
mov
pop
and
mov
jnp
or
lahf
xor
dec
dec
adc
int3
shlb
xchg
add
cmp
add
dec
ja
xor
cmpsb
pop
mov
std
loopne
test
xchg
jns
or
add
inc
mov
cltd
and
xor
lcall
decb
inc
les
adc
stos
or
mov
aad
popf
pop
mov
repnz
pop
mov
sbb
add
cld
dec
ds
jmp
loopne
pushf
jmp
in
mov
dec
push
cmpsb
dec
lcall
sbb
outsb
test
sbb
in
push
mov
adc
push
call
xchg
or
lcall
outsl
mov
and
std
xchg
pop
sbb
cmc
fcoml
fs
repz
iret
jp
ret
dec
lea
adc
nop
sub
dec
pop
and
mov
aas
mov
imul
mov
jo
mov
dec
jmp
pop
gs
enter
lcall
xor
ds
cmpsl
inc
dec
add
cmc
outsb
divl
xchg
std
pop
dec
je
jmp
je
mov
xchg
nop
negl
sub
sbb
lea
inc
and
movl
mov
les
sbb
dec
jecxz
mov
sbb
push
or
mov
mov
dec
dec
cmp
insb
dec
adc
js
nop
imul
xchg
mov
pop
mov
mov
loop
shrw
arpl
lea
pop
adc
jb
dec
test
sbb
addr16
loop
cmpsb
inc
lcall
nop
loope
jne
in
mov
mov
adc
mov
jle
xor
in
in
jl
stos
dec
jmp
in
test
stos
add
adc
mov
mov
in
pop
pop
add
or
inc
stos
sbb
push
push
cltd
sbbl
cmp
bound
mov
add
pushf
test
pop
sub
sahf
jl
in
icebp
mov
push
je
rorb
jne
movsb
rcrl
pop
push
lods
mov
mov
jnp
sub
jno
xchg
aad
in
fwait
pop
add
add
clc
stos
pop
and
jge
cli
dec
imul
mov
jnp
and
adc
or
push
pusha
pop
pop
rclb
push
xchg
sub
add
jnp
cmpsl
mov
fidivl
movsl
sbb
jmp
cld
mov
pushf
fnstsw
lods
sti
cmp
pushf
push
jl
adc
inc
sbbl
pushf
mov
aam
or
xor
sub
jl
mov
subl
cltd
dec
out
push
adc
xchg
jne
jl
dec
mov
test
mov
sub
lock
lret
cs
jbe
rorl
jae
adc
or
repnz
jne
ret
imul
dec
ljmp
xor
int3
inc
aaa
mov
and
sub
sbb
lds
es
lret
addb
lret
mov
xchg
mov
jp
push
and
or
and
ja
push
sbb
adc
xchg
js
movb
push
test
test
mov
push
or
mov
repz
ja
outsb
imul
mov
push
leave
int3
outsb
lock
inc
cmpsb
movsl
jp
mov
in
mov
jo
push
cli
ljmp
sti
push
adc
repnz
adc
mov
dec
rcrl
mov
mov
mov
mov
fcmovb
sbb
aam
in
es
xor
mov
sub
xor
shlb
cltd
pop
fs
repnz
ja
icebp
cmc
push
arpl
mov
adc
sbb
pusha
xchg
jbe
popf
test
inc
sub
sbb
lret
cmp
orb
mov
push
mov
and
mov
test
sbb
add
jge
mov
cmp
pop
dec
jl
hlt
leave
test
aam
fisttpll
std
insb
cmp
and
or
pop
pop
ret
test
jno
movsl
jp
test
xchg
jno
dec
sub
push
jb
and
scas
push
sbb
pop
lock
fstl
sbb
jo
xchg
adc
xchg
xor
es
and
xor
or
add
adc
or
jp
jp
inc
jge
aaa
mov
push
inc
cld
in
popa
cmp
call
push
xor
pusha
aas
dec
fisttpl
icebp
pop
inc
out
cmp
aam
mov
pop
inc
sti
and
pop
dec
dec
xor
stos
mov
cmp
ret
jno
fistps
pushf
mov
jno
ret
lock
cli
test
sti
inc
mov
ss
mov
mov
add
sub
mov
je
adc
scas
jecxz
test
call
ja
xor
push
mov
outsb
stos
shrl
inc
lahf
xchg
mov
fisubl
jl
arpl
dec
rcr
stos
test
push
pop
gs
mov
rorb
daa
addr16
jnp
xor
mov
popa
pop
mov
call
mov
or
pop
jnp
jae
push
push
leave
aas
mov
and
mov
lahf
mov
les
cmpsl
jl
sub
int3
fcoms
cs
xor
cmc
push
sub
in
lret
pop
sbb
cwtl
mov
aaa
cs
adc
mov
repnz
add
fucom
test
dec
out
clc
out
lods
ja
inc
daa
adc
cmpsb
sbb
in
dec
or
cltd
out
subl
test
xlat
pop
and
aaa
jecxz
sbb
jg
cmp
in
mov
add
sub
sbb
int
rcrl
pusha
int3
inc
inc
bound
or
adc
mov
hlt
lret
or
lahf
mov
xchg
in
mov
mov
sbb
jne
dec
inc
pop
or
shll
sub
cmpsb
push
adc
mov
rol
xchg
sub
call
sub
or
and
je
jle
xchg
fsubr
aas
add
repz
shlb
dec
outsb
sbb
into
mov
dec
pop
mov
cltd
mov
mov
incb
gs
or
mov
or
stos
xor
ds
aaa
daa
mov
cmp
pushf
jp
or
scas
mov
mov
xchg
jbe
lock
js
mov
mov
lret
call
jl
jns
jmp
movsl
rclb
int
sbb
jns
mov
mov
lret
jle
and
ljmp
je
test
jnp
dec
jmp
push
inc
insl
je
out
rcrl
mov
leave
repnz
stos
or
incl
popa
out
cwtl
adc
int
inc
cmpsl
addr16
enter
lahf
jg
pusha
cmp
rcrl
xor
jge
jmp
pop
stos
pusha
xor
or
mov
push
stos
jnp
cs
movsl
adc
cmp
xchg
pop
insl
mov
pop
cmp
imul
sbb
lret
ja
call
push
push
jecxz
xchg
dec
popf
int3
stos
fists
mov
lcall
cltd
jnp
es
das
mov
dec
add
aad
pop
cwtd
stos
imul
and
jp
mov
or
xchg
pcmpgtd
pop
nop
push
jo
mov
pop
stos
mov
jecxz
sub
dec
enter
mov
jecxz
jl
cwtd
mov
and
pushf
dec
inc
sti
cmp
ret
inc
faddp
outsl
arpl
lea
dec
pop
into
lods
adc
popa
stos
je
jecxz,pn
jae
outsb
push
ja
adc
jp
push
cltd
push
sub
dec
scas
addb
sub
in
mov
testl
sbb
jmp
mov
adc
push
pop
lahf
pop
sti
push
dec
movsl
dec
lahf
xor
mov
cmpl
xlat
sahf
jg
sbb
jecxz
mov
sub
jb
add
cmp
movb
jl
adc
push
in
cli
dec
ss
sbb
popa
lds
push
and
mov
out
lods
shrl
shrb
xchg
stc
jb
mov
dec
mov
jecxz
popa
sbb
out
idiv
add
sub
sbb
adc
out
mov
addr16
icebp
push
sub
push
or
lds
adc
fmull
jno
lock
lock
int3
mov
out
inc
adc
jns
cli
fs
inc
shlb
jp
shll
lret
dec
xchg
mov
in
lcall
bound
pop
pop
loope
les
iret
dec
or
fcomip
sbb
std
xor
cli
in
aas
rcrb
mov
test
xchg
xchg
arpl
or
xchg
or
inc
testb
sbb
mov
jb
je
test
and
mov
sub
fwait
push
cwtl
cwtl
outsl
out
pushf
sbbl
jg
inc
add
sbb
fs
push
in
and
lock
imul
inc
fwait
adc
inc
lods
mov
aaa
mov
cmpsl
fcmovnu
popf
dec
dec
cmp
pop
cmpsl
cs
int3
cld
adc
xchg
and
mov
dec
push
lea
jg
clc
adc
xchg
test
sbb
mov
fldl
popf
dec
data16
and
or
mov
fwait
sbb
mov
add
jno
clc
dec
test
dec
inc
inc
xchg
adc
shrl
or
das
push
lds
sbb
ret
std
jp
sbb
enter
in
bound
mov
jle
imul
stos
shll
daa
sub
jmp
adc
mov
push
xor
cmp
sbb
or
push
jp
pop
insl
cmp
sub
jo
inc
out
icebp
inc
mov
imul
lcall
push
sub
rol
push
mov
int3
dec
gs
ljmp
xchg
fsubr
inc
sub
insl
sub
dec
enter
adc
roll
sbb
fwait
ss
mov
mov
adc
mov
push
mov
sub
adc
adc
xchg
ficompl
in
test
push
loope
aam
cmp
shl
adc
test
in
stc
mov
jb
sub
cmp
les
xor
loop
outsl
xchg
cmc
fcomps
ret
imul
dec
pop
jg
aaa
jl
clc
fdivp
loop
lock
sub
xor
mov
mov
imul
mov
mov
add
js
enter
popf
xchg
nop
movsl
loop
into
pop
lods
jg
notb
and
daa
or
daa
mov
mov
fistpll
xlat
cld
cli
jno
jge
sbb
addr16
cwtl
fxch
stos
test
int
out
call
loop
mov
mov
shrl
mov
and
push
fs
mov
add
push
leave
sbb
aaa
lods
push
sbb
cmp
mov
hlt
pop
fisttpl
add
xor
and
inc
pop
daa
enter
scas
mov
ljmp
and
shlb
testl
hlt
insb
outsb
or
daa
fisttpl
inc
pop
sub
imul
dec
out
xchg
and
dec
lret
or
cwtl
aam
add
mov
pusha
cwtl
ret
iret
push
orb
inc
mov
clc
xor
mov
jp
adcb
xchg
rcll
loop
fnstcw
jbe
psrlq
subb
xchg
rcll
std
and
int
adc
push
dec
std
or
add
out
cli
jmp
cli
sahf
sub
aas
or
icebp
push
inc
pop
jns
int
or
mov
cld
fcmovnbe
or
push
inc
xor
pop
lods
fwait
jb
xchg
and
lds
inc
andnps
cmp
xchg
push
mov
mov
jg
arpl
ret
lret
mov
lret
dec
jae
adc
pop
test
cltd
out
xchg
aaa
pop
pop
jo
adc
out
cmp
dec
hlt
ja
cmp
lcall
adc
sbb
or
pop
jl
push
mov
in
cwtl
inc
nop
adc
ja
add
pop
fbstp
mov
rcll
aad
pop
sbb
mov
cmp
or
push
sbb
cmc
jb
pop
lret
mov
jne
sub
and
lds
andb
enter
push
movsl
cmp
stc
cmp
loopne
fsts
pop
bound
mov
leave
rclb
outsb
adc
cld
xchg
inc
and
dec
dec
outsl
mov
sti
mov
add
out
std
lock
in
cmc
push
movsb
subb
aad
mov
mov
ljmp
jb
mov
out
aam
test
dec
cld
inc
dec
xchg
inc
into
and
jg
jle
shlb
xor
lods
add
out
mov
icebp
fildl
movsl
rol
jno
mov
jns
adc
and
or
add
insb
movsb
ret
xchg
sti
push
and
fs
fcmovnbe
sbb
adc
or
test
pop
inc
loopne
mov
pop
jmp
dec
pop
repz
mov
addl
xor
or
imul
mov
shl
jo
enter
lea
ss
insb
daa
out
add
sbbl
sbb
pusha
xchg
sti
into
das
cmpsb
ljmp
shr
push
imul
jo
pop
arpl
jmp
push
adc
mov
push
pushf
ja
mov
stos
add
in
sbb
std
out
dec
push
out
cs
jae
jno
mov
lcall
mov
cltd
adc
pop
sub
mov
and
rcll
inc
pop
aaa
adc
or
ja
dec
icebp
fisubrl
popf
shll
and
iret
push
dec
dec
daa
fldenv
push
pop
mov
mov
mov
pop
xor
sbb
xchg
mov
ljmp
rcr
lock
std
shll
mov
cmp
or
js
pop
out
lds
clc
insb
or
push
push
dec
push
inc
inc
lahf
pop
mov
sub
orl
jae
popf
rcr
fistps
dec
std
mov
sahf
jno
sbb
add
sub
mov
mov
mov
sbb
sub
adc
cmp
xchg
pop
inc
mov
test
orl
sub
mov
or
push
mov
lcall
cmp
scas
mov
test
sbb
jo
xchg
mov
pop
cmp
fwait
shl
or
mov
mov
popf
aas
pop
jne
xchg
pop
mov
xchg
adc
das
adc
gs
lahf
cmp
scas
xor
cwtl
pop
sub
lcall
mov
push
cmp
addr16
mov
dec
jno
xchg
jno
popa
and
sub
push
cmp
sti
repnz
out
loopne
mov
sbb
sbb
lods
icebp
loope
dec
push
inc
ret
xor
jp
inc
cmp
jae
sbb
or
repz
jae
fstpl
mov
or
outsl
popa
cmpsl
xchg
sarl
xchg
add
pushf
xor
aam
jb
pop
cltd
ja
out
pop
call
sbb
jnp
cmp
shrb
test
insl
iret
es
andl
lds
je
movsb
inc
push
leave
xor
sub
mov
out
test
add
mov
shl
dec
push
ret
add
aad
sub
dec
jno
pop
jecxz
and
in
hlt
push
sbb
imul
cmp
nop
imul
pushf
mov
mov
je
in
sbb
mov
lcall
or
push
cmp
fcomps
out
cmp
leave
mov
pop
or
fdiv
sub
sub
inc
leave
inc
out
loope
mov
sub
mov
testb
jo
dec
or
add
lods
push
movsl
divb
push
mov
and
call
cmc
lret
jmp
rcrl
mov
pop
xchg
xorb
xlat
cmp
lret
lret
shl
sbb
lods
push
inc
loope
mov
push
xchg
mov
mov
cmp
mov
sbbb
daa
mov
cmpsb
lods
and
mov
sbb
repz
pop
push
test
dec
pop
sub
popf
mulb
imul
add
test
mov
mov
jno
les
xchg
and
inc
or
fsubs
cmp
push
lds
call
ror
test
push
inc
ds
jae
stos
movsl
test
cmpsb
jo
lods
adc
fsubrl
cmp
ja
jbe
roll
movsb
gs
fstps
scas
sti
xor
shll
stos
roll
xchg
mov
cld
bound
xor
movsl
or
adc
std
jmp
call
sahf
pushaw
cwtl
mov
sub
inc
imul
mov
arpl
movsb
pop
push
pop
repz
jo
lods
lret
aad
push
jle
jne
mov
or
fcomps
ss
divb
idivl
fxch
mov
jae
xor
dec
jno
and
sbb
das
scas
ss
orb
xchg
clc
pop
xchg
push
jmp
in
xlat
or
pop
inc
jno
cmp
mov
lock
inc
mov
push
in
lcall
dec
xchg
adc
dec
and
addr16
inc
or
jmp
add
mov
xchg
imul
lahf
mov
pusha
popa
aam
jnp
aad
xchg
mov
sub
xchg
fsubrs
in
js
sub
lods
bound
and
ds
jnp
sub
das
fwait
aam
cmpsb
pop
add
loop
das
xlat
pop
adc
ret
xchg
adc
push
and
stc
xor
push
int3
gs
inc
lret
sbb
popa
negb
xchg
stc
push
cmp
cmp
fisttpll
dec
dec
xchg
cmp
cltd
das
test
lods
icebp
cmp
push
scas
add
inc
lods
movl
roll
push
push
push
jp
push
callw
pop
sub
cli
pop
sbb
inc
popa
dec
push
outsl
out
lcall
cmpsb
push
ds
rol
lods
push
sbb
mov
jle,pt
addr16
sub
jmp
pop
in
fwait
push
in
movsl
loopne
mov
mov
mov
adc
dec
ja
aam
filds
jecxz
out
pop
inc
loopne
outsb
dec
cmp
arpl
and
or
add
test
mov
out
xchg
push
mov
jb
pop
mov
or
inc
negl
cld
sbb
fisubrs
lret
adc
enter
mov
adc
mov
iret
negl
imul
mov
sub
mov
sub
mov
or
adc
addr16
test
enter
cmc
lcall
ljmp
pop
inc
aaa
cmp
push
cltd
mov
and
dec
jb
gs
jecxz
nop
lods
and
sub
cmp
shll
pop
in
popf
aam
adc
adcb
pavgb
movsb
sbb
pop
cmc
dec
outsb
push
sahf
shrd
insb
ret
xchg
cmc
sahf
sbb
sub
fcomps
les
dec
in
jno
inc
int3
pop
push
mov
sti
rorb
loop
and
aaa
scas
lds
mov
lea
orb
fs
pop
and
dec
pop
dec
dec
or
dec
es
imul
add
stos
sbb
push
or
sub
pop
add
test
xorl
dec
cmp
repz
jge
stos
popa
xchg
push
cmpb
push
insl
xor
hlt
ljmp
popf
mov
mov
xchg
ds
xchg
fs
mov
jae
int3
lds
fsts
in
fcoml
mov
icebp
and
add
lds
xchg
jg
mov
jne
je
adc
adc
notb
adc
divl
pop
outsl
ret
icebp
addl
scas
mov
jge
cli
and
movsl
fstsw
gs
das
push
rorl
repz
xchg
mov
fcmovne
mov
es
mov
jl
inc
add
xchg
sbb
cmpsb
in
fs
xchg
sbb
inc
cmp
add
popf
enter
ljmp
daa
fisubrl
iret
or
jo
aam
outsl
sti
and
mov
dec
jp
or
jg
add
mov
push
icebp
push
cmp
lods
inc
jbe
shrl
lods
out
mov
and
sbb
pop
ja
inc
inc
outsb
ss
mov
pop
or
mov
xchg
cli
out
mov
mov
cld
add
adc
inc
mov
js
shrb
into
inc
sub
test
jge
sub
sub
mov
push
lret
cmc
or
or
inc
insl
pusha
into
fwait
add
insl
or
xchg
out
jns
push
fcoml
insl
orl
je
loop
lret
sub
mov
sti
sub
loop
ja
pop
sbbl
subl
movsb
pop
jb
ja
jle
pop
movsb
iret
dec
mov
vcmpneq_ussd
shr
fisttpl
sbb
out
les
and
divl
and
lret
outsb
xchg
pop
loop
and
push
push
push
loop
sbb
adc
enter
fs
cmp
push
and
mov
mov
mov
add
pop
lds
and
and
sbb
inc
pop
hlt
out
sub
push
adc
jb
scas
xlat
xor
jecxz
int3
lret
fbstp
mov
scas
fnstcw
inc
jns
rorl
xchg
dec
pop
loop
mov
movsl
test
lahf
lds
dec
pop
add
push
push
fwait
cltd
add
int3
insl
lret
sub
push
push
cmp
pusha
push
xchg
bound
out
mov
add
sahf
cltd
fdiv
mov
jmp
inc
inc
lret
push
punpcklbw
adc
push
scas
sub
aas
pop
jle
sbb
popa
rclb
fmull
inc
jge
movsl
stc
cmc
lret
push
cmp
leave
fsts
cli
shrb
push
insb
loopne
pop
or
inc
inc
fnstcw
pop
and
sbb
adc
lds
fsqrt
icebp
testb
pop
cmp
popf
xor
jl
fnsave
cmpl
dec
xlat
in
iret
mov
cmp
xor
dec
push
enter
xor
dec
aam
clc
jmp
cwtl
movsb
mov
insb
xchg
or
add
mov
inc
fs
adc
lcall
lods
push
popa
inc
mov
outsl
mov
enter
push
into
fs
mov
into
jge
cmpsb
mov
push
push
frstor
add
inc
lar
dec
dec
sti
shrl
jp
fisttps
jae
ss
pusha
dec
xlat
cltd
mov
cmp
cmp
cmp
fbld
roll
inc
xor
mov
dec
pusha
insl
sub
adc
test
loop
push
rcrl
jno
cmp
mov
mov
mov
push
movsl
pop
js
icebp
enter
sbb
xor
pop
ss
xchg
stos
addr16
data16
fldcw
pushf
popa
insb
arpl
loopne
outsb
cld
addl
lret
pop
jle
addr16
fdivrs
mov
pop
jmp
add
test
xor
leave
cmc
imul
ja
and
sbb
or
push
cmc
xchg
sub
adc
mov
xor
push
sub
mov
lds
imul
movsb
pop
das
xor
iret
mov
lock
fldcw
int3
bound
icebp
or
dec
jbe
dec
orl
xor
cmpsb
add
xor
xchg
mov
flds
mov
add
jmp
cmc
enter
cmpsb
loop
push
leave
iret
jmp
movsb
sub
sbb
sub
aam
sub
lahf
pop
cmp
cmp
xchg
pop
mov
mull
push
jmp
mov
insl
adc
movsb
ret
cltd
mov
and
sti
out
or
add
push
imul
push
lods
inc
sub
ret
dec
lret
push
adc
xor
xor
call
dec
inc
test
fcmove
daa
xor
out
xchg
push
insl
subb
flds
and
sub
lock
xchg
testl
in
or
dec
jl
lds
les
lahf
leave
pop
outsb
shl
jns
into
test
add
lods
rolb
ret
jle
xchg
jmp
ss
xor
iret
pop
or
push
mov
push
sub
lods
js
jae,pn
cmp
pop
dec
lahf
mov
sti
mov
loop
mov
iret
addr16
and
stos
shll
add
xor
sub
dec
repnz
sub
xor
lea
stc
mov
push
scas
cltd
inc
sub
sahf
push
dec
lea
mov
push
push
or
movsl
add
addr16
adc
and
add
xor
test
sbb
das
in
pop
shll
push
mov
pushf
fidivs
jecxz
daa
or
cmpsb
repnz
and
mov
fadd
mov
jg
imul
mov
mov
jb
das
sbb
xchg
imul
sbb
dec
cs
lock
cld
sti
jne
loopne
aad
int
cmp
test
mov
add
pop
adc
test
outsl
dec
inc
cmp
xlat
sub
pop
push
out
outsl
pop
add
xchg
dec
sbb
and
iret
inc
cld
pop
mov
dec
mov
sub
xchg
pop
jb
or
mov
out
cmp
dec
pop
jl
mov
sbb
imul
push
push
aad
jno
sub
dec
push
inc
add
add
addr16
adc
rol
add
and
dec
movsb
lahf
ror
adc
xchg
jno
cld
popa
scas
sbbl
or
push
stc
dec
inc
mull
pop
xchg
mov
push
push
jmp
dec
loop
out
hlt
out
in
jns
andl
aas
outsb
pushf
cli
jne
scas
add
pushf
push
out
enter
sub
push
xchg
ret
lret
mov
sbb
sub
bound
and
mov
push
pop
cmp
sarb
push
jnp
xorb
push
and
mov
pusha
dec
pop
add
dec
jne
dec
cmp
adc
xor
cmp
xchg
ret
pop
arpl
repnz
mov
pop
jno
das
mov
cmc
mov
dec
stos
inc
or
mov
adc
pop
in
addl
lods
imul
pop
mov
outsb
xchg
inc
xchg
xor
fs
sbb
mov
jnp
das
jl
hlt
jnp
das
stos
add
ljmp
out
push
dec
inc
jg
xor
in
adc
cmpsl
std
add
popf
lock
fs
ret
mov
xbegin
push
pop
cmp
inc
sbb
push
popf
sub
inc
nop
and
adc
push
xchg
ds
add
dec
iret
int
in
js
mov
fucom
imulb
shll
jecxz
lret
adc
push
repz
pop
cli
inc
mov
mov
repnz
out
jb
es
rcr
jmp
es
lods
xorb
and
lds
cmp
fsubl
lods
jecxz
mov
dec
cli
popa
mov
and
std
pop
int
outsl
dec
jmp
daa
hlt
ja
sub
insb
lret
push
imull
sub
inc
aad
cmp
cmp
aad
in
or
test
punpcklbw
xor
inc
dec
and
and
sub
popa
add
cmpb
cli
and
mov
inc
sub
mov
and
add
sbb
push
je
lret
sub
lret
sbb
push
insb
outsb
jg
fistps
add
rorl
stos
lahf
lods
cmp
mov
rorl
jg
xor
pop
and
xor
sti
mov
mov
stos
mov
adc
and
icebp
adc
and
cmpl
or
rorl
add
pop
mov
cmp
lds
inc
cmpsl
rcl
sbb
insl
mov
and
dec
inc
data16
push
gs
push
bound
add
dec
sbb
das
sub
mov
jno
adc
movsb
mov
pop
filds
fldt
je
xchg
and
sbb
cld
jb
and
rorl
sbb
mov
jb
and
aas
adc
nop
jecxz
jl
add
push
adc
mov
and
and
daa
sbbb
jecxz
mov
fmuls
or
repnz
mull
sbb
cld
inc
in
les
and
rcll
pop
loopne
and
mov
push
xchg
nop
or
xor
outsl
sbb
inc
ds
mov
and
mov
dec
ret
xchg
fstpt
sbb
dec
mov
mov
inc
sti
js
lcall
jg
sbb
pop
lock
ret
pop
in
icebp
push
clc
fcmovu
dec
dec
jle
loopne
add
mov
outsb
aad
lods
sub
test
fistps
xor
daa
fisubrs
cltd
and
sub
repz
aas
sti
xchg
adc
xchg
fdivr
outsb
add
dec
push
push
push
jge
and
sbb
xchg
dec
or
js
jge
dec
dec
sub
test
cltd
test
out
dec
cmp
mov
sbb
int
xor
leave
cmovns
or
mov
fcmovnb
hlt
mov
add
pusha
push
frndint
inc
inc
cmp
cmp
lea
ret
push
gs
sti
pop
sub
fisubrs
cld
pop
or
pop
ss
pushf
dec
push
push
hlt
aam
hlt
xchg
jecxz
cmp
les
iret
mov
pop
cmpsb
fistps
push
dec
shlb
sahf
test
fcomps
call
sub
inc
jp
jmp
inc
xchg
push
andps
push
das
es
cmpb
pop
aad
or
sbb
jl
xor
adc
xchg
push
dec
ret
sbb
inc
dec
dec
das
mov
ja
dec
lock
pop
les
insl
mov
mov
icebp
lds
movsl
mov
call
js
cmpb
inc
out
xor
and
mov
mov
push
cmpsb
jno
fstpt
mov
jl
add
outsb
push
sbb
in
rolb
sbb
aam
inc
jae
push
sbb
and
icebp
mov
cmp
outsl
mov
mov
xchg
jecxz
mov
xorl
pop
xchg
lds
and
mov
jge
inc
sbb
pop
data16
mov
pop
out
adc
dec
jbe
sbb
push
sbb
pop
fimull
cwtl
imull
push
push
sub
mov
int
jl
out
xor
pop
jne
xchg
mulb
sub
out
xor
or
jne
sahf
mov
xchg
inc
mov
iret
shll
sbb
or
sub
shlb
rcl
mov
cmp
pop
add
rorb
push
xchg
mov
sbb
pop
adc
repz
pop
sbb
int3
xor
sbb
fs
sahf
mov
ss
push
aad
inc
xchg
cwtl
xchg
push
adc
cmp
xchg
stc
ds
mov
jecxz
cli
sbb
insb
sarl
pop
or
rclb
sub
nop
mov
push
popa
js
cmp
fmul
mov
mov
pusha
cli
push
lds
mov
cmp
push
and
outsl
or
lock
cltd
xchg
and
push
aaa
xchg
mov
fcmovne
and
xor
int
mov
ds
lahf
into
gs
mov
sub
mov
gs
mov
cmc
mov
call
icebp
ficoms
in
into
xor
arpl
sti
pop
dec
adc
repz
mov
xor
push
lahf
cs
add
inc
and
frstor
stos
jae,pn
inc
add
mov
sahf
roll
fcomps
inc
cmp
add
pop
clc
imul
fwait
shlb
imul
jbe
mov
cmp
popf
jmp
xchg
mov
inc
pop
cmp
das
shlb
data16
outsl
xchg
lea
and
in
mov
adc
incb
rolb
and
cltd
in
test
hlt
mov
add
mov
stos
in
sbb
adc
mov
mov
test
mov
bsf
xchg
push
dec
sarl
add
rcr
popf
fidivrl
imulb
add
fdiv
mov
lret
add
es
fisttps
or
or
or
and
and
dec
mov
mov
sub
loopne
out
adc
cmpsl
dec
dec
fcomi
xor
mov
mov
and
dec
mov
test
or
pop
rcrb
jmp
sub
cmp
and
mov
and
and
mov
mov
inc
cmp
pop
shlb
mov
and
cmp
push
pop
std
inc
outsl
jae
cmp
scas
sub
jo
cmp
dec
xchg
int
adc
out
gs
fidivl
jp
jns
inc
and
sub
xor
fldcw
call
mov
pusha
sbb
in
enter
pop
int
mov
xchg
sub
in
addr16
daa
std
movsb
mov
faddl
add
lcall
mov
and
add
and
cmp
xchg
stc
scas
out
loop
call
std
inc
decb
xchg
mov
sbb
push
test
or
adc
push
cmpsl
push
add
sub
fimull
lahf
fsubs
sbb
inc
sbb
clc
adc
popa
repz
scas
push
xchg
add
jne
xor
sbb
shlb
mov
cmp
fisubl
addr16
mov
enter
push
push
xchg
iret
fisttps
mov
fisttpl
mov
xchg
adc
jmp
mov
xor
and
or
jg
push
dec
sbb
dec
jge
es
mov
pop
stos
dec
pusha
outsl
pop
rclb
inc
sbb
mov
gs
pushf
mov
or
lea
jb
out
jle
sub
mov
sbb
jmp
xchg
push
sub
sub
cld
std
add
and
in
fisubrs
jo
mov
repz
sub
or
lret
insl
fadds
roll
sub
mov
sbb
movsl
test
sub
je
dec
cli
xchg
ljmp
fwait
out
cmpsb
mov
add
loopne
fdivl
push
sahf
addl
ret
lock
sub
cmpsl
stc
sbb
shll
add
xor
push
insb
test
xor
add
xor
mov
add
jge
xor
out
gs
adc
ds
mov
xchg
add
das
and
dec
repnz
fisubl
addr16
adcl
scas
and
scas
stos
inc
jmp
inc
mov
int
inc
adc
push
mov
insl
fadds
pop
lret
pushf
push
sti
into
js
int3
jno
add
xchg
sarl
mov
xlat
hlt
jp
pop
cmp
and
call
in
jl
jno
js
enter
pop
leave
sahf
sub
test
xchg
sub
sub
pop
push
and
aaa
insb
data16
lahf
xchg
mov
fcmovnbe
push
jo
xchg
xor
mov
push
out
stos
mov
mov
ret
jecxz
or
jmp
and
dec
les
jb
jle
push
out
loopne
add
mov
dec
popf
shl
loop
pop
jecxz
int3
ret
scas
test
mov
push
aas
in
sbb
mov
jne
flds
rclb
sti
jp
iret
push
ljmp
enter
lds
gs
sub
sub
jne
lret
sub
jae
lock
call
enter
in
dec
popa
fnstcw
loop
cmpsl
inc
cmp
pop
add
jne
adc
std
cltd
test
lock
push
push
xchg
movsb
lods
push
dec
add
push
shrl
push
nop
enter
shlb
inc
rcrl
aam
shlb
pop
lret
push
in
and
loop
pop
decb
fstpt
pop
lods
xlat
fldenv
cwtl
dec
and
xor
popf
shlb
inc
cmp
xor
cmp
stos
imul
mov
or
cmp
mov
int
mov
sub
push
cmp
sbb
sub
xor
outsl
popa
popf
add
bound
data16
push
in
or
push
or
cmp
and
sbb
inc
push
int
repz
xchg
mov
rol
rcll
xchg
inc
push
inc
xchg
lret
imul
adc
pop
sbb
add
rol
jae
ds
mov
popa
mov
jns
dec
mov
mov
pushf
jge
leave
inc
mov
bound
pop
add
xor
test
dec
shll
repnz
data16
push
jmp
hlt
pop
stos
iret
shrb
lret
lret
mov
sbb
xchg
sbb
testl
adc
cmp
dec
fcoms
repnz
inc
loope
fwait
push
data16
jbe
fsubrs
lahf
daa
add
dec
fmul
aaa
repnz
push
fs
enter
push
mov
sub
cmpsb
insl
int
stos
lcall
testb
cmp
jle
aaa
mov
addr16
int
mov
sub
stc
mov
mov
cltd
pop
fdivs
mov
cmp
rcrb
push
loope
out
rcr
dec
adc
in
cmp
pop
mov
xchg
outsb
or
movsb
jp
cld
movsb
mov
fnsave
adc
rorl
jl
sbb
sti
roll
sbbl
out
mov
cmpl
out
clc
aam
sbb
arpl
cltd
and
xchg
lods
jmp
popa
push
lods
or
pop
sbb
insl
fs
dec
insb
insl
fisubrl
std
nopl
push
outsb
fstl
pop
scas
mov
cli
scas
ja
pop
mov
jbe
fsubr
xchg
mov
stc
mov
sbb
jo
mov
into
ficomps
enter
jo
addr16
jns
mov
int
pop
insb
adc
outsl
push
lcall
int3
lahf
jmp
ja
mov
jbe
mov
pop
xchg
jp
ss
xchg
pop
mov
mov
nop
jae
repz
xchg
adc
jl
je
fwait
rorb
sbb
pop
add
mov
inc
ret
fmul
lea
sub
jp
cmp
and
pop
negb
xor
fmull
lret
mov
movsb
xchg
fiadds
mov
in
aam
sahf
xchg
push
inc
jle
pand
sbb
clc
inc
push
pop
aam
fisttpl
ret
repnz
clc
loop
repnz
sahf
ds
xchg
pop
xchg
rorl
xor
push
jg
jl
popa
or
dec
xorl
movsl
mov
in
mov
rcll
int
incb
ljmp
push
int
pop
cmc
in
imul
stc
xchg
xchg
push
xchg
add
xlat
inc
jae
lock
sbb
pop
or
ret
fdivrp
out
push
inc
lods
stc
cld
add
xchg
fdivl
mov
aam
imul
fdivrl
cmp
add
mov
pop
lock
xor
outsl
xchg
push
mov
pop
push
jl
or
lock
daa
cmpsl
in
or
jmp
fldcw
mov
loop
dec
cmp
inc
into
and
sub
mov
in
icebp
stc
sahf
mov
add
pop
js
sbb
jae
jnp
push
jbe
movsl
xchg
mov
fisttps
movsl
imull
xor
cmp
mov
and
pop
outsl
lds
push
pop
dec
jle
mov
fsubrl
fimull
push
mov
push
push
xchg
adc
push
ljmp
push
inc
cmp
nop
and
inc
gs
sub
and
cmp
push
cmp
mov
mov
xchg
lods
addr16
sbb
dec
and
xor
cmc
pop
dec
inc
cmpb
aad
inc
mov
lods
in
insl
add
movsb
push
sbb
inc
in
data16
or
ret
arpl
push
dec
pusha
xor
xchg
movsl
sub
pop
pop
pop
das
pushf
fidivrs
in
cmp
scas
cs
or
outsb
pop
mov
out
loopne
push
cli
in
out
adc
insb
or
insb
mov
cmp
pop
loopne
icebp
push
push
xchg
and
jno
mov
pusha
adc
mov
jb
ljmp
jae
int
or
adc
ja
jl
outsl
lea
js
xor
xchg
jmp
inc
lods
pop
sub
sub
or
pop
mov
dec
jns
ret
test
xor
jge
jle
ret
push
idivb
and
int3
lea
pushf
les
jl
dec
lea
outsl
xchg
ss
inc
inc
icebp
ljmp
and
lods
incl
push
cld
inc
cli
enter
out
or
dec
fldenv
or
adc
nop
das
aad
das
out
xchg
mov
and
push
stc
adc
idivl
xchg
pop
sub
xor
adcb
jle
adc
popa
je
mov
jmp
push
mov
sub
add
scas
imull
sbb
or
movsl
cmc
lahf
inc
xor
mov
imul
dec
mov
decl
cmp
fdivs
mov
imul
xor
push
popa
and
scas
sub
fs
fstpl
int
fisttpl
sbb
pop
pushf
cli
cmp
mov
fisubrl
std
test
sbb
dec
push
push
out
pushf
into
js
stos
repz
mov
stos
sbb
jecxz
loopne
sbb
enter
or
fwait
sarl
add
in
nop
xchg
jo
xchg
mov
out
or
int
add
rol
add
daa
pop
leave
xchg
push
in
mov
mov
dec
aaa
push
orl
cmp
stos
int3
push
cmp
mov
and
sub
std
lea
mov
jbe
outsl
ljmp
jl
cmp
xchg
inc
add
int
xor
fsubr
lods
scas
mov
rolb
gs
inc
inc
pop
pop
add
fisttpl
ret
out
mov
inc
xor
jae
sti
mov
jg
psrlq
cmp
call
mov
rorb
mov
int3
cmp
adc
mov
outsb
dec
push
and
test
les
or
ds
and
xorl
mov
fnstcw
push
mov
jnp
mov
push
dec
out
jb
pop
xchg
xor
test
adc
add
fstps
fwait
and
adc
mov
bnd
enter
shl
aaa
test
sub
and
loop
lods
out
inc
sbb
sbb
mov
push
cmp
dec
cmpsl
inc
divl
fbld
push
int3
sahf
sub
in
sbb
mov
rcll
and
sbb
dec
les
int3
mov
ss
pop
push
jbe
jp
bswap
jg
leave
fistl
inc
je
and
mov
lret
fstpt
inc
dec
int3
ficoms
cmp
push
popa
arpl
pop
jmp
enter
jmp
dec
sbb
nop
push
into
xlat
stos
cwtl
int3
insb
pop
pop
push
push
mov
jno
push
lods
push
rcrl
jmp
fbstp
push
movsb
xlat
dec
pop
push
fmuls
sub
js
xlat
xorl
into
mov
jecxz
sti
and
jg
sbb
nop
test
add
inc
mov
or
mov
inc
mov
xor
dec
mov
call
out
push
daa
arpl
gs
dec
das
xor
dec
call
push
and
popa
inc
loope
push
shl
pop
adc
arpl
jne
mov
out
xchg
xlat
arpl
mov
mov
jo
pop
inc
mull
xor
movsl
jmp
insb
rolb
dec
clc
and
rcr
mov
inc
mov
es
jne
leave
daa
lock
xor
jp
ds
incb
inc
mov
in
insl
cwtl
inc
jl
in
ljmp
lcall
stc
dec
cmpsl
fcoms
into
inc
push
push
xor
xor
cmp
loope
dec
cmpsl
lret
xchg
lods
fmul
fstl
fistps
dec
or
xor
and
stos
shll
int
pushl
ljmp
adc
movsb
adc
mov
pop
ja
js
mov
cs
test
xor
mov
xor
ja
add
adc
xchg
xchg
jp
enter
dec
xor
loopne,pt
fs
add
sub
pop
mov
xchg
out
add
gs
call
call
mov
hlt
cltd
inc
sub
lods
dec
add
xlat
pop
ljmp
mov
shl
iretw
push
mov
jns
or
sahf
xor
cmp
das
aam
mov
mov
fadds
ja
add
mov
mull
mov
sbb
add
leave
icebp
cld
mov
cmpsl
add
fldcw
ret
jnp
inc
push
inc
outsb
cmp
pusha
xor
mov
mov
aaa
inc
sbb
test
pop
lds
or
test
or
cmp
xchg
and
scas
jmp
jno
addr16
aas
pop
loop
js
add
jnp
pop
bound
repnz
mov
inc
xor
pop
lahf
xor
icebp
and
outsl
inc
mov
cmc
fcmovnbe
sahf
loope
fsubrs
mov
cmpb
shlb
dec
cmp
pop
xchg
aaa
cmc
insl
aad
ret
xchg
pop
and
scas
scas
addr16
lahf
jb
mov
out
les
mov
adc
pusha
add
mov
sub
jecxz
gs
out
add
cs
dec
push
hlt
sbb
pop
in
fwait
mov
or
push
xor
std
mov
push
daa
cmp
cmp
mov
mov
stos
hlt
mov
arpl
push
push
xor
aas
cmp
test
push
and
shl
mov
mov
pop
cmp
icebp
out
push
sub
fs
pop
push
lods
rcll
jle
popa
test
arpl
mov
imul
pusha
push
push
sahf
pop
decl
adc
rcrl
je
jnp
ret
in
sub
adc
scas
inc
cmp
adc
rcrl
cmp
clc
lcall
cmp
ds
inc
out
test
popf
xor
pop
add
jge
or
nop
jmp
xor
cmp
mov
mov
std
lods
mov
push
sbb
mov
outsb
cs
adc
and
popa
mov
mov
mov
std
xchg
jmp
jecxz
ret
mov
cmp
add
leave
mov
push
movsl
cld
sub
int
mov
je
test
mov
mov
loop
loop
cmp
and
pop
ja
in
xor
cmpsb
mov
or
int
insl
adc
aam
cwtl
jo
xchg
cmp
fimuls
jb
shll
mov
mov
rcrl
je
jnp
mov
stos
loopne
sbb
dec
sbb
adc
aas
and
int
mov
ud2
int3
call
das
jae
divb
fs
imul
dec
jg
xchg
mov
enter
adc
mov
in
adc
inc
lea
or
mov
or
adc
enter
out
inc
sbb
stos
pop
push
aaa
mov
sub
jmp
faddl
push
cmpb
loope
fcmovb
ret
int
mov
gs
icebp
jge
enter
xchg
aam
mov
or
or
ss
outsl
adc
xchg
mov
dec
in
dec
ja
sub
mov
ds
pop
int3
cmpsb
outsl
sbb
ljmp
les
iret
mov
inc
mov
negb
notl
inc
cmpsb
push
scas
adc
dec
movsb
jp
inc
imul
int
test
call
dec
dec
rcrb
js
in
stos
sub
jecxz
int
ret
sbb
js
bound
test
xor
mov
push
push
lds
out
aam
repz
arpl
sub
push
loopne
into
sbb
out
mov
cmp
dec
mov
dec
stos
jg
push
jle
jge
jge
add
faddl
sbb
and
sarb
std
cmp
push
adc
pop
pop
bnd
xchg
mov
dec
lods
test
cltd
popa
xor
jl
jmp
xchg
jns
or
shlb
lds
push
paddusb
repnz
insl
js
out
les
xor
pop
inc
pop
pop
mov
xor
sbb
adc
js
xchg
iret
inc
mov
insb
push
lcall
push
push
mov
lea
movsl
stos
mov
in
sub
addb
add
pop
arpl
pop
insb
pop
sub
jne
dec
or
jbe
sbb
sti
jnp
jb
movsb
jmp
fs
sti
pushf
stos
cltd
xchg
inc
out
test
pop
jl
fisttpl
loop
add
sub
inc
mov
rcrl
xchg
cld
jl
xchg
cmp
bound
pop
adc
ret
dec
inc
repz
sub
ret
aaa
jae
orl
pop
mov
es
ds
scas
sbb
jno,pn
faddl
adc
lock
mov
sub
stc
scas
pop
cmpsb
scas
mov
jne
cld
jmp
lods
push
cmp
push
sbb
mov
fsincos
and
cmp
cmp
lcall
leave
test
shlb
stc
scas
pushf
cmp
or
dec
adc
and
rcrb
std
sbb
fidivs
add
cmp
inc
ficomps
jae
push
out
lea
mov
push
dec
sub
xchg
sub
mov
jecxz
aad
mov
lea
mov
inc
xor
pop
out
incl
xchg
movsb
lret
pop
mov
inc
cmp
push
fildl
push
mov
xor
fstl
into
stos
adc
sbb
inc
hlt
cmpsb
sbb
sbb
dec
outsl
es
pushf
sub
cvtps2pd
stc
pop
stos
out
mov
sbb
cmp
popf
sub
push
pop
add
es
fwait
enter
int3
cmc
daa
and
inc
rcrl
fistps
icebp
orb
mov
out
hlt
daa
lahf
dec
mov
cmpsb
rcl
outsb
test
xor
dec
repz
outsl
pop
jno
mov
lcall
mov
dec
shlb
bound
rep
ficoms
les
fwait
cmc
sbb
clc
cltd
mov
pop
mov
sub
xchg
inc
sti
adc
or
cmp
cmp
cmp
mov
ret
or
mov
jne
cmp
cmc
test
push
jle
fwait
iret
out
cmc
dec
pusha
xchg
cmp
xchg
xor
and
dec
xchg
or
sbb
cli
mov
sbb
test
sub
out
repz
or
sub
xlat
push
iret
sub
mov
out
adc
aaa
cltd
sub
sbb
mov
repz
mov
in
pop
xchg
shlb
adc
pop
aad
lahf
jb
inc
bound
loopne
mov
outsb
clc
mov
xor
mov
push
outsl
inc
jb
call
adc
xor
cmp
test
xchg
jns
in
xor
insb
loop
xchg
in
inc
lock
pop
inc
and
mov
mov
mov
mov
push
mov
add
inc
insb
cmp
sbb
lret
jle
jp
cmp
in
out
mov
insl
pop
mov
aaa
fistl
mov
push
xchg
std
enter
xor
and
fidivrl
jle
mov
and
mov
mov
cwtl
mov
pop
push
xor
fcomi
push
insb
xor
sub
jecxz
push
or
cmpsl
sahf
pushf
xchg
mov
mov
in
jmp
and
pop
mov
sbb
dec
ret
sub
pop
adc
scas
sub
add
fcoml
cmpsl
shll
mov
mov
mov
aam
jmp
cmp
xchg
cld
repnz
push
pop
mov
les
iret
sub
mov
mov
and
jecxz
outsb
cmp
or
loopne
imul
jae
pop
cmp
xchg
ss
aas
jg
sbb
scas
mov
sti
fmul
lret
mov
mov
xor
ljmp
ret
movsl
js
loope
xor
adc
dec
mov
leave
rol
xchg
xor
das
push
jmp
sub
incl
inc
fistps
sarl
das
jb
cld
pop
pusha
arpl
rol
mov
loopne
mov
call
popf
mov
scas
or
nop
cmp
es
mov
jbe
mov
jge
jl
xchg
cld
pop
decb
cmp
mov
cmp
fistpll
int3
rdmsr
out
sahf
xchg
add
daa
jnp
outsl
sub
push
mov
sahf
add
xor
arpl
sub
sbb
xchg
mov
les
outsb
add
icebp
mov
push
scas
mov
dec
outsl
cli
bnd
nop
mov
scas
cltd
push
orl
mov
lods
xchg
int
mov
jne
sub
and
jno
ljmp
push
mov
ds
sahf
fstpl
in
sub
gs
push
scas
pushf
loopne
add
add
push
xor
cltd
sbb
ret
fwait
daa
faddl
push
push
ds
xchg
xlat
sbb
cmpb
fs
and
into
push
idivb
aaa
pop
and
ljmp
pop
gs
enter
adc
or
sub
lret
imul
pop
xchg
sbb
out
sub
outsb
xchg
mov
pop
and
mov
push
mov
add
lahf
movsb
xchg
or
jae
jge
mov
mov
mov
imul
sbb
lcall
pop
xorb
xor
and
stos
push
lcall
mov
xchg
lret
test
daa
cmp
mov
hlt
rcrb
out
mov
addr16
fmulp
mov
aam
inc
push
cmp
js
or
idivl
fistpll
into
inc
int
inc
jmp
add
jmp
orb
sbb
loope
ss
inc
test
jp
push
push
xor
push
out
pushf
and
imul
pop
arpl
mov
fistpll
pop
mov
xchg
mov
imul
jle
daa
mov
clc
xor
lret
fidivs
fsubrs
add
dec
jnp
pop
adc
sbb
pop
xor
hlt
cmp
int
test
into
imul
inc
jp
jmp
test
cmpsb
sub
mov
fisubrl
or
sub
xchg
jmp
jg
lods
dec
dec
loope
or
arpl
adc
icebp
adc
movsl
fildll
xor
clc
pusha
les
add
lods
xchg
mov
test
pop
push
call
adc
jns
jns
stos
test
into
adc
outsl
cmp
ret
push
push
dec
mov
pop
loop
pop
inc
cli
test
push
add
mov
pop
mov
into
int3
incl
cwtl
ret
add
inc
cmpsl
sub
sub
push
xor
jle
int3
loope
rdtsc
xchg
xchg
adc
or
or
adc
inc
and
sbb
jmp
in
and
sbb
pop
jb
popa
std
inc
jnp
jnp
push
aad
loop
cld
and
loop,pt
dec
test
es
mov
sbbb
inc
and
jnp
aad
sbb
xchg
mov
cwtl
imul
add
xor
xlat
ror
cs
daa
mov
and
lret
jmp
pusha
mov
fsubp
push
or
cltd
cmp
fistl
ss
adc
imul
mov
or
jl
cs
inc
into
xchg
fsubl
mov
push
test
arpl
lea
ja
pop
pop
outsb
dec
add
mov
pop
xor
lods
ljmp
inc
test
cmp
mov
cmpsl
ret
mov
popa
adc
repnz
xchg
stos
mov
sbb
mov
push
jnp
imul
int
shl
cld
inc
outsb
xor
xchg
out
add
inc
mov
leave
into
call
sti
popa
test
outsl
clc
xchg
jl
test
jle
mov
push
pop
push
repz
arpl
popl
fcompl
cwtl
inc
sbb
xor
pusha
push
out
test
pop
shrl
mov
or
les
out
adc
lods
outsb
or
pop
ja
sti
es
adc
and
lea
xor
add
adc
mov
inc
push
lods
mov
push
rcr
cli
mov
adc
adc
mov
mov
cmp
cmp
fdivl
mov
sub
cli
aas
movsb
enter
jne
ljmp
pop
jg
jg
pop
mov
fsubrl
jno
lods
push
and
jmp
xor
stos
fwait
inc
cmpsb
daa
dec
roll
jnp
jnp
and
subb
ret
sbb
pop
adc
loopne
test
mov
out
push
adc
rorl
push
jns
fildl
push
push
jmp
mov
enter
push
inc
xchg
addb
stos
out
push
inc
imul
inc
mov
outsl
xchg
sbb
hlt
mov
push
sbb
xchg
fstl
rcl
or
stc
stc
adc
in
sub
xchg
ficoms
push
sahf
call
xor
call
mov
mov
pushf
or
adc
pop
loop
sub
mov
mov
push
dec
push
movsl
fisttpl
outsb
push
shlb
adc
leave
mov
lock
jmp
test
dec
and
dec
jno
mov
leave
xchg
pop
in
inc
xchg
jne
jnp
cli
fstpl
in
hlt
add
adc
and
inc
mov
adc
invd
mov
test
mov
rcl
lods
or
cmpsb
in
imul
lods
sub
out
or
lret
and
shll
rorb
mov
dec
xchg
inc
sub
or
or
push
and
push
je
arpl
adc
dec
mov
imul
push
mov
lock
xchg
mov
mov
jno
mov
aam
cltd
daa
aam
js
or
or
push
leave
jg
adc
xor
arpl
gs
mov
sub
in
cltd
mov
xchg
xchg
push
bound
pop
nop
rcr
loop
jg
adc
testl
cli
pop
inc
nop
fidivs
dec
sbb
ret
add
jmp
mov
jns
in
in
jle
pminsw
xchg
push
aad
cmp
addr16
sbb
loope
add
push
push
xchg
mov
dec
addr16
aaa
mov
and
inc
icebp
sub
push
add
push
aaa
test
pushf
xchg
add
pushl
xor
cld
ja
jg
lea
sbb
cli
inc
aas
jp
pop
das
xorb
enter
jg
insb
enter
pop
orl
dec
shl
cmpsl
dec
mov
bnd
add
das
mov
lock
cmp
sbb
imul
add
xchg
or
fdivrs
jl
aaa
repnz
add
dec
mov
lar
push
js
xchg
mov
fcompl
mov
xchg
js
shrb
lret
jecxz
cltd
inc
mov
clc
adc
jo
mov
mov
mov
cmc
sti
out
push
pushf
test
and
jne
lods
xchg
push
mov
jbe
cmp
stc
mov
lret
cmpsb
mov
leave
sub
or
dec
pop
xchg
or
adcl
jle
std
stc
hlt
leave
mov
push
dec
pushf
jae
xchg
inc
shll
fldcw
mov
sub
jae
mov
mov
or
jp
pop
loopne
inc
mov
or
and
js
dec
inc
inc
jbe
fmulp
daa
jecxz
out
ret
fs
cmpsb
adc
jno
out
xchg
xchg
push
data16
xor
js
ficoms
dec
dec
inc
lret
sub
lods
xchg
out
ds
pop
ljmp
jo
lea
clc
pop
lds
ffreep
mov
jae
fmulp
pop
xor
cwtl
mov
xlat
xchg
mov
cwtl
popa
lods
aaa
sub
std
cmp
test
mov
test
cld
add
and
xor
es
rcl
enter
call
sub
fs
fcomi
cmp
mov
gs
jne
into
or
add
or
lock
loopne
push
iret
pop
cltd
push
and
xchg
cltd
adc
loope
sub
les
cmp
add
imul
cmp
scas
xor
aad
xchg
and
fimuls
arpl
sub
pop
rclb
jl
adc
and
stc
push
ja
sub
bound
notb
jne
sub
jb
pop
scas
pop
hlt
daa
cltd
xchg
pop
inc
dec
mov
sbb
cli
xor
cmpsb
int3
repnz
and
sub
cmp
xor
bound
iret
xchg
cmp
push
inc
inc
in
rorb
repnz
push
lock
stc
push
inc
imul
xchg
ret
xchg
adcl
add
mov
lcall
add
je
jnp
int
ja
rclb
inc
fs
push
fwait
mov
popa
adc
jns
xchg
ljmp
movsb
xchg
sub
mov
loopne
xchg
dec
mov
loop,pt
mov
mov
and
fs
pushf
xchg
fdivrs
ss
push
cmp
push
jb
sarb
adc
mov
adcl
jge
movsl
out
movsb
test
test
xchg
int3
scas
and
ret
pushf
and
iret
or
mov
push
aam
std
xor
or
scas
pop
push
cmpb
dec
push
pop
push
cmpsb
add
inc
push
nop
add
jns
cli
popf
mov
push
cli
cmp
popf
int3
pop
test
ljmp
add
scas
test
mov
sub
ja
cmp
clc
in
or
loop
shll
test
dec
push
lret
add
mov
in
fwait
mov
mov
mov
jno
sbb
aad
out
les
jnp
int3
rorl
push
arpl
inc
jno
shlb
outsl
data16
cmp
in
xchg
jno
les
or
and
mov
dec
inc
sbb
jle
popf
lods
in
jbe
imul
fwait
dec
pop
jne
add
push
lret
in
pop
jns
cli
jo
fsubrs
push
push
add
cmc
in
sub
rclb
rorb
mov
push
mov
les
pusha
push
adc
imul
mov
inc
and
int
std
sbb
dec
pop
mov
cld
lea
int3
andb
adc
popf
orl
rcl
xchg
imul
add
lock
mov
into
cs
leave
push
icebp
dec
jl
sbb
movsb
mov
lahf
jae
or
xchg
and
in
dec
scas
lret
add
add
hlt
pop
inc
jg
cmp
aad
mov
pop
mov
lcall
loopne
xlat
cmp
xchg
js
int
lock
adc
jmp
add
xchg
insb
xor
es
mov
xorl
aad
cmp
test
mov
jecxz
pop
jnp
aad
fwait
stos
sub
and
shl
cmc
xchg
out
cmc
mov
fadds
cmp
or
cmp
cmp
repz
pusha
jp
out
xchg
pusha
test
dec
jno
jbe
mov
imul
sbb
jecxz
pop
cmc
push
popf
mov
adc
fidivrl
inc
sbb
enter
sbbl
mov
in
jne
loope
out
rclb
testb
mov
icebp
mov
dec
mov
hlt
mov
pop
adc
mov
shlb
lcall
lcall
fsub
dec
cwtl
push
aaa
pop
push
loop
add
ja
push
cmp
testb
inc
cwtl
xchg
push
mov
jmp
add
sbb
aam
bndstx
testb
stc
mov
add
js
mov
or
and
pop
pop
xchg
dec
pop
push
mov
xor
insb
dec
cmp
stos
sbb
aaa
movl
sub
inc
xchg
jno
add
stc
les
divb
add
add
orl
fs
ret
pop
jl
out
cs
xor
or
outsb
sub
adc
mov
xchg
add
fwait
jmp
add
inc
iret
or
aaa
in
xchg
dec
xor
mov
pop
mov
inc
dec
movsb
pop
fistps
test
push
nop
mov
das
out
inc
std
sub
div
lods
fwait
push
cli
pop
lods
scas
add
ret
into
cld
xor
mov
push
xchg
out
icebp
pushf
ljmp
mov
lea
mov
mov
in
pop
cmpsl
icebp
push
outsl
or
mov
cmp
enter
cli
sbb
mov
pop
xchg
ret
and
mov
dec
adc
push
mov
mov
mov
cs
pop
out
push
xchg
add
xchg
loope
out
and
cmc
rcrl
insb
and
mov
sti
or
xchg
je
dec
rorl
nop
mov
stos
inc
stc
xchg
sbb
mov
mov
adc
jb
xchg
sbb
xor
jnp
seto
inc
dec
setnp
push
lret
or
ljmp
or
dec
cmpsl
les
negl
out
xchg
les
mov
popf
pop
leave
pop
stos
mov
mov
lret
mov
pop
std
leave
mov
and
cmc
cwtl
adc
inc
sar
ret
add
xchg
push
lcall
mov
push
rorb
inc
imul
push
movsb
lods
push
scas
inc
fwait
insl
xor
in
and
stos
or
push
cmp
pop
pop
push
lock
sub
or
mov
push
insl
jl
ss
je
and
shlb
ret
popf
push
int3
sbb
jge
addr16
insl
sub
inc
ficoml
cmp
or
scas
testb
testl
sbb
jecxz
jle
dec
je
ds
mov
mov
xchg
inc
mov
push
fs
xchg
add
lret
lods
mov
xor
sub
fidivrl
aas
xor
pusha
mov
clc
fstpt
mov
mov
or
pop
lods
mov
push
sbb
gs
out
inc
fstpl
movsb
sti
mov
mov
outsl
or
jne
sub
adc
icebp
aas
sub
ja
jno
mov
xchg
jecxz
pop
xchg
or
aad
fstps
adc
push
or
inc
xchg
inc
outsl
sti
stc
nop
dec
faddl
sbb
add
in
and
imul
add
push
sahf
mov
sbb
sub
xchg
ljmp
lcall
enter
sti
call
cmpsl
popa
mov
and
push
mov
leave
mov
mov
lcall
lods
data16
jmp
sbb
icebp
xchg
addr16
idivb
cmp
or
mov
cltd
or
lcall
inc
aam
xchg
pop
iret
daa
pop
xchg
sbb
test
pop
adc
push
sbb
sti
fstp
stos
or
cmp
cltd
or
out
std
mov
inc
test
mov
xchg
cmp
mov
leave
jmp
mov
repz
xchg
mov
sbb
icebp
stos
ds
fidivl
cmpsl
and
shlb
out
xor
js
roll
repnz
call
and
inc
mov
push
sbb
inc
mov
mov
jle
xor
add
iret
jne
insb
sbb
push
mov
mov
dec
jle
and
add
stos
jge
jnp
bound
push
and
push
ljmp
mov
sub
add
fldl2e
mov
mov
clc
ret
sub
or
jbe
bnd
popf
add
pop
dec
and
xchg
xchg
push
xor
ret
mov
and
jb
add
sbb
add
dec
sbb
fmull
xor
out
dec
gs
sub
jecxz
jp
adc
aad
xor
inc
out
cmp
insl
data16
lds
inc
adc
scas
cltd
loop
aam
imul
popa
cmp
sub
cli
adc
test
rorl
mov
or
sbb
adc
mov
xchg
cmp
mov
fisttpl
sahf
rcll
aas
jns
test
cwtl
or
inc
mov
and
push
mov
mov
in
les
sub
outsb
iret
xchg
out
xor
fwait
pop
sub
in
pop
cmp
push
pop
xchg
and
insl
cmpsl
add
je
gs
popa
stos
mov
lock
testb
cmp
push
adc
ljmp
push
pop
mov
arpl
andb
mov
cltd
in
daa
pop
leave
scas
dec
fildll
adc
inc
scas
pop
enter
jo
dec
loope
adc
loop
mov
and
int
mov
into
cwtl
sbb
in
hlt
movsl
dec
push
push
lret
out
sahf
mov
mov
mov
sbb
sub
adc
into
add
or
add
aas
jge
in
pop
test
jp
pop
jae
cwtl
xor
mov
inc
fsub
and
stos
ror
lods
push
sbb
cmp
out
xchg
mov
lea
xor
mov
jl
mov
test
data16
jmp
lds
mov
sbbb
enter
xchg
sbb
and
jne
pushl
dec
add
cwtl
rolb
jo
fdiv
inc
xchg
xor
lahf
add
xchg
add
aaa
stos
sbb
std
mov
push
jbe
shll
sti
shrl
mov
mov
jl
pop
popf
cmc
fdivrs
es
mov
aaa
popa
movsb
xchg
xchg
cmp
inc
pop
ljmp
sub
push
xchg
cmp
mov
jg
das
xchg
dec
out
or
jae
std
mov
push
push
or
movlps
jl
mov
imul
add
mov
test
mov
sub
jmp
push
push
sarl
jo
insb
mov
std
cmp
xor
int3
xchg
mov
movsl
push
jnp
movb
and
add
and
lock
test
push
loop
pop
aam
das
add
int
loopne
inc
cld
add
das
out
xchg
or
ret
or
jb,pn
out
jb
sbb
add
cmpsb
cwtl
loope
cli
aaa
cmp
sub
lods
cmp
or
out
ja
mov
mov
xchg
dec
cmc
jnp
mov
sub
jo
cmp
fsubs
inc
add
push
scas
mov
xor
jl
pushf
adc
not
push
mov
cli
and
sarl
cltd
or
jbe
cmpsb
inc
mov
outsb
scas
push
jle
lcall
mov
popa
xchg
mov
popf
clc
xchg
or
cmp
lret
push
out
xchg
jmp
mov
out
or
orb
sbb
add
sub
je
add
or
cmp
or
lods
cmp
mov
jg
sbb
or
jecxz
mov
sub
xchg
mov
pop
shll
jo
lods
xchg
xor
aad
jp
enter
add
pop
ds
add
xlat
dec
mov
in
push
sti
xchg
lods
stos
push
pop
iret
lods
dec
mov
jae
shl
dec
xorl
mov
and
cmpsb
fmuls
sbb
aaa
jns
add
xchg
jp
xorl
xchg
stos
lahf
jne
cmc
pop
mov
pop
jp
xlat
and
shr
iret
mov
ss
out
clc
addr16
hlt
test
or
rorb
insb
jp
cmp
pop
xor
daa
flds
or
fwait
sbb
loope
lock
jmp
push
orl
xlat
into
mov
and
cltd
add
mov
dec
pop
shl
cmp
inc
fsubp
sub
frstor
shll
aam
sarb
push
rorb
inc
stos
filds
pop
pop
loop
shl
sbb
dec
push
push
mov
jp
ss
jge
out
hlt
clc
xchg
loop
pop
ds
shrl
jnp
push
fwait
es
adc
int
je
mov
das
cmpsl
addr16
mov
push
scas
ds
mov
sub
cmp
xor
adc
pop
in
push
mov
adc
push
lock
ficompl
xorl
mov
fistpll
enter
mov
xor
sub
das
rcrl
pop
inc
cli
or
cmp
mov
sub
push
pop
xor
dec
inc
mov
ret
fimull
pop
mov
lods
adc
push
insl
sbb
or
loopne
out
movsl
jbe
jae
scas
mov
loopne
push
jbe
mov
outsb
and
mov
or
scas
addl
arpl
les
push
push
pop
xor
and
xchg
pop
in
insb
mov
push
pop
fmull
mov
out
clc
pop
pop
dec
pusha
pusha
pop
sbb
std
adc
fsubrl
xorl
inc
pop
sbb
frstor
mov
mov
pop
xchg
dec
mov
add
les
lock
push
sub
cmp
dec
popf
test
in
jbe
icebp
cli
cmp
cmpl
lods
in
repz
and
mov
fstl
movsb
mov
mov
rcrb
lcall
or
xor
ja
repz
inc
scas
pop
sub
adc
push
mov
cs
mov
not
mov
jge
sbb
out
lock
lods
mov
lods
add
clc
std
out
andb
dec
daa
inc
lret
sbb
fstl
lret
pop
fldt
dec
sub
mov
ror
imul
pop
es
mov
inc
out
push
jl
jmp
jne
div
adc
je
push
inc
dec
fistps
aad
arpl
or
loop
loop
pop
test
sub
push
lahf
aam
fcomi
adc
add
jo
and
mov
lods
gs
cwtl
shrl
in
jno
mov
cld
loopne
mov
mov
aas
nop
jle
mov
das
stos
inc
adc
dec
sarl
or
add
mov
and
jp
jnp
ja
mov
int3
lds
pop
shlb
adc
xchg
mov
adc
loopne
pushf
xchg
adc
lea
lock
pop
cmp
fisubrs
sbb
stc
movsl
adc
sbb
mov
test
lock
fimuls
scas
push
out
and
ss
jns
push
cmpsl
rcrb
xchg
jb
jecxz
into
adc
sub
fstpl
ss
adc
add
rclb
add
andl
or
ds
les
out
xor
fdivs
fists
jb
ret
cli
cmp
dec
xor
jl
into
nop
loope
fisttpl
decb
cmp
ror
in
cltd
jecxz
hlt
hlt
or
arpl
popa
mov
inc
nop
lahf
or
cmp
push
movsb
mov
clc
or
jp
lret
cmp
xor
out
xor
mov
pop
xchg
test
fwait
testl
or
and
mov
loopne
aas
cs
fildll
insb
jo
data16
fmull
out
dec
test
add
add
es
inc
subb
jne
aad
mov
cld
sub
mov
push
cmp
xchg
cmp
xchg
cmpsl
and
sahf
sub
ljmp
test
push
incl
pusha
les
sbb
pop
add
lea
xor
in
cmp
mov
sub
out
cmp
sub
cwtl
test
call
loope
lock
ljmp
inc
mov
scas
jl
add
stos
arpl
into
mov
sub
cld
std
dec
dec
push
xor
and
lods
adc
push
movsb
inc
fimull
jb
jno
inc
rolb
or
push
mov
lahf
or
pushf
lret
mov
mov
jne
add
add
pop
data16
shlb
mov
cs
mov
ja
test
imul
cmpsl
test
inc
sub
in
sub
sub
xchg
mov
sbb
xchg
fisubl
jo
loopne
test
out
lret
loope
pop
in
leave
lds
test
addb
dec
cli
xor
imul
jge
mov
xor
fistl
int
loope
fwait
loope
adc
ljmp
into
lahf
daa
imul
fidivrs
xor
mov
mov
mov
arpl
sbb
insb
fnsave
dec
add
negl
sub
and
movsl
aam
call
pop
adc
pop
mov
and
outsb
jnp
inc
add
ret
cld
push
cld
xor
mov
loop
or
sub
xor
pop
push
dec
mov
xchg
push
aam
shlb
pop
into
in
insb
out
xchg
jecxz
out
mov
mov
xor
les
insl
fisubrl
mov
gs
jmp
addr16
pop
out
fs
outsb
ficompl
outsb
xchg
jl
addr16
push
dec
jg
fs
push
ret
orb
shl
adc
insb
and
nop
xchg
push
stos
xchg
icebp
mov
mov
rol
lock
sti
mov
aad
pop
pop
mov
sub
or
mov
jo
stc
push
push
adc
loop
jmp
fistpll
lret
sbb
sbb
mov
adc
push
add
movsl
dec
sub
push
shll
push
xchg
or
adc
scas
out
stos
stos
or
xor
mov
inc
dec
inc
xchg
shll
ds
jnp
lret
fiadds
adc
shll
jp
inc
sub
dec
cwtl
push
xchg
sbb
xchg
cmc
jb
mov
daa
push
out
popa
fcompl
icebp
test
std
cs
pop
mov
and
adc
sbb
out
sbb
fstps
incb
jecxz
pop
jle
lds
ds
es
xchg
out
push
test
mov
xchg
jo
rcrl
mov
xor
mov
mov
push
pop
out
dec
ret
xchg
stc
dec
mov
sub
popa
cmc
xchg
mov
clc
xchg
dec
scas
sub
and
aad
movsb
lods
inc
adcl
mov
xor
xor
jb
push
xchg
into
cs
imul
insb
mov
jle
scas
adc
push
dec
rcrb
insl
aad
push
leave
adc
shlb
or
enter
js
inc
or
xor
pop
sbb
inc
repnz
push
jne
les
pop
xor
xor
xchg
cmp
sub
lds
es
insl
movsb
sbb
ret
arpl
sarb
inc
and
or
push
xor
shrl
jnp
stos
sarb
mov
das
leave
or
nop
sbb
popf
rep
jge
hlt
push
shrb
test
mov
gs
data16
mov
mov
outsb
xor
sub
cwtl
out
xchg
fisttpll
dec
lea
testb
negl
jl
jne
ret
cmpsl
push
push
data16
dec
dec
pop
xlat
out
xchg
pushf
ror
std
sahf
xor
cli
pop
mov
push
scas
sbb
mov
mov
movsb
imul
leave
dec
les
addr16
or
sahf
cmc
inc
push
sub
jecxz
inc
mov
sbb
repnz
movsl
addr16
ss
pop
imul
lcall
fsubl
shrl
fcomi
cmp
or
scas
aam
out
sbb
popa
inc
pop
sub
dec
ret
outsl
shll
mov
leave
sbb
push
or
xlat
shrb
scas
adc
scas
dec
adc
out
mov
scas
test
mov
arpl
xchg
mov
imul
test
mov
add
pushf
les
cld
mov
fsubs
jne
mov
fists
lea
leave
dec
insl
pop
jg
in
test
push
mov
jne
cmpsl
xor
ja
es
outsl
pushf
call
mov
mov
pop
fbld
test
cmp
and
lea
sub
in
das
in
jo
scas
xchg
test
stos
iret
inc
fwait
jge
movsl
dec
xlat
mov
std
xor
push
out
pop
lret
mull
and
pusha
mov
shll
sub
mov
movl
mov
sbb
test
adc
mov
fucom
inc
add
or
daa
add
mov
stos
outsl
adc
aad
dec
add
bound
xchg
add
and
sub
leave
or
sti
pop
fmuls
subb
daa
lret
into
fdivr
mov
test
lret
jno
inc
and
stos
mov
mov
dec
mov
and
mov
mov
aam
cmp
ds
jle
fs
adcl
out
sbb
push
jg
fsubs
sbb
shrl
mov
test
sub
fld
test
jns
jmp
popf
frstor
push
inc
jb
fwait
mov
aad
fbld
leave
xlat
sahf
hlt
lods
mov
inc
mov
xor
dec
into
sbb
enter
pop
dec
ficoms
iret
inc
dec
jl
test
cltd
mov
xchg
adc
add
xchg
add
xchg
mov
fldcw
lahf
daa
popa
jg
pop
fwait
cmc
imul
pusha
sub
stos
cmpsb
aaa
xor
and
ficompl
xchg
gs
adc
cmp
pop
out
xor
jg
inc
in
sub
int3
outsl
push
xor
cmp
out
insl
dec
sbb
xchg
mov
sbbl
sub
ficomps
add
dec
ss
sbb
jp
pop
sti
cmpsl
loop
inc
jp
xor
add
in
xorl
mov
daa
mov
lods
inc
ror
mov
jne
inc
push
xchg
popa
lcall
mov
mov
xlat
mov
outsb
adc
sbb
and
adc
loop
pop
add
mov
lock
daa
das
mov
mov
stos
cwtl
aaa
mov
arpl
jg
cmp
test
ffree
imul
xchg
jg
pop
lret
push
mov
pop
cmp
nop
mov
jbe
push
add
mov
pop
adc
shlb
cmpb
inc
pop
xchg
xchg
enter
lcall
xchg
fs
enter
pusha
repnz
sub
std
lahf
ss
inc
jae
lcall
and
dec
add
adc
cmp
push
lods
dec
pop
insl
mov
xor
jns
imul
sbb
xchg
mull
fcmovne
pushf
push
jecxz
adc
sub
ficompl
xchg
aas
imul
jecxz
sbb
mov
add
fwait
pop
shrb
xchg
add
loopne
mov
inc
sbb
jp
aam
cmpsl
fdivrs
mov
xchg
into
movsb
xlat
mov
jecxz
fidivs
sub
js
jne
push
cld
adcb
loope
cmp
shr
dec
test
add
imul
cmp
and
mov
mov
ds
addr16
cmp
dec
xchg
xor
inc
fwait
sub
scas
cltd
lods
pop
test
add
scas
dec
sti
sub
ja
sbb
negb
insl
jns
dec
dec
fnstsw
sbb
repnz
movsl
movsb
adc
int
imul
pop
mov
fcompl
inc
js
xchg
sub
aam
jbe
pop
int3
pop
mov
pusha
cwtl
or
push
inc
add
and
and
lock
xor
cmp
scas
aaa
scas
ror
add
and
pop
push
scas
sbb
mov
push
outsb
add
stos
sbb
iret
movsb
pop
mov
dec
push
adcl
daa
fdivrs
aad
mov
add
push
jecxz
adc
ficomps
ds
int
cmp
mov
je
pusha
dec
inc
andl
iret
cltd
jl
stos
inc
cmpsb
xchg
pushf
push
mov
out
mov
sub
and
stc
cmp
int3
imul
mov
pop
shrb
jp
bound
test
sbb
nop
loopne
ficoml
jl
lock
int3
xchg
cmp
clc
out
in
test
arpl
and
sub
sub
cwtl
pop
loop
ja
inc
or
sbb
or
ficompl
mov
bound
jns
test
scas
push
mov
push
repz
inc
icebp
pop
aas
out
or
xor
dec
and
test
repz
hlt
jne
dec
scas
and
loopne
dec
aad
mov
mov
imul
shrb
or
les
fwait
sub
lods
imul
mov
mov
push
mov
aad
jnp
lcall
adc
jp
push
std
add
cmc
or
xor
ret
pop
sbb
adc
adc
rcrl
sbb
clc
jae
insb
pop
hlt
aas
arpl
pop
cli
or
outsb
mov
mov
popa
pushl
pop
pop
push
fisubl
adc
sub
jno
xchg
call
aam
jp
or
nop
test
in
dec
pop
push
lret
adc
lcall
imul
add
or
dec
pop
inc
adc
das
ficomps
in
gs
push
xchg
mov
orl
xor
out
and
fidivs
mov
mov
xchg
test
into
push
mov
inc
mov
pop
out
les
repz
outsl
push
sbb
cmp
xchg
mov
jge
sbb
sub
jne
adc
dec
push
mov
pop
rclb
stos
pop
push
pop
mov
outsb
fdiv
daa
inc
lods
add
xor
pop
sub
sbb
shll
xchg
stos
inc
pop
or
lret
int
enter
adc
test
jmp
add
push
fsubr
out
ja
push
fwait
dec
xchg
adc
pop
push
mov
inc
stos
fstps
xchg
lods
sahf
add
sbb
inc
xchg
ret
xchg
pushf
mov
outsb
xor
and
push
fs
insl
cltd
cmp
cmp
std
inc
lcall
xor
enter
loop
cs
push
stc
dec
ljmp
mov
das
jb
clc
push
push
and
sti
and
inc
stos
adc
in
push
or
jp
lret
jge
jne
in
ret
xor
stc
mov
pop
inc
and
ss
push
adc
in
xor
add
sbb
xor
push
mov
mov
je
adc
test
mov
jno
divl
hlt
daa
cmc
jle
mov
jns
int
inc
xchg
addr16
mov
cwtl
jae
mov
cmp
idiv
aad
adc
cs
jne
sahf
lcall
or
out
sub
jnp
aas
leave
test
and
das
adcb
fcoms
sbb
lds
or
xchg
sub
aas
scas
pop
aad
and
div
xchg
sti
push
xchg
add
xchg
add
out
daa
fiadds
cmp
dec
aam
fnstcw
jnp
adc
mov
mov
push
push
jg
push
test
sti
mov
test
mov
push
xchg
imul
cltd
lods
dec
mov
into
pop
xor
fld
cli
mov
out
test
and
movsb
in
ljmp
je
mull
adc
dec
or
push
aam
mov
lret
mov
mov
stc
adc
and
cmpsb
or
pop
and
aas
dec
in
rolb
testl
in
adc
nop
mov
jecxz
mov
js
inc
sbb
xchg
js
lret
popf
dec
sti
outsl
sbb
push
and
leave
inc
inc
dec
ss
mov
fldt
dec
shr
mov
mov
fsubr
in
cli
lods
dec
cmp
loop
dec
push
outsb
jbe
push
rcl
stos
xchg
adc
popa
lcall
lcall
mov
lahf
lea
mov
push
cmp
ss
xchg
int3
jb
mov
jno
cmp
push
insl
adc
xchg
dec
cli
jp
addr16
mov
int3
xchg
aad
cmc
or
int3
push
loopne
aad
mov
subl
inc
inc
ds
stos
fnstenv
sti
dec
or
mov
dec
mov
fsub
xor
and
and
std
push
inc
jp
mov
add
fbstp
test
inc
in
or
seto
adc
aad
cwtl
xor
push
xchg
nop
push
test
mov
add
clc
mov
xor
mov
push
xchg
fcoml
sbb
lock
xchg
scas
add
popf
xchg
fisubrl
mov
cmc
xor
imulb
scas
jg
or
mov
popa
dec
dec
jo
push
mov
aas
icebp
xor
push
scas
js
xor
loope
mov
roll
call
pushf
push
pop
into
add
mov
icebp
mov
jle
xorb
push
fildll
pop
nop
repnz
sbb
ljmp
ds
aas
xchg
lods
repnz
sub
test
jno
jae
xor
gs
pushf
decl
imulb
sub
push
dec
jge
dec
jnp
in
mov
ss
sahf
vmovaps
and
out
imul
test
jne
fisubl
xchg
xchg
sub
jbe
lock
adc
cmp
dec
ret
cmp
jae
mov
lods
in
dec
xor
sbb
roll
mov
stc
pushf
mov
mov
imul
cmp
imul
notb
cmp
ja
and
popf
sarb
dec
pop
mov
xchg
and
dec
cwtl
or
int
xor
sbb
jecxz
and
dec
dec
mov
mov
mov
test
push
or
movsl
inc
es
mov
cmp
aam
jne
fsub
popa
les
stos
pop
jg
enter
mov
inc
mov
jo
fisubs
daa
dec
es
lods
sub
loop
xor
and
subb
pop
out
imul
xchg
jnp
sbb
push
xor
addl
test
aaa
xor
jnp
mov
bound
test
mov
inc
cmp
add
fdivp
daa
insb
loope
and
mov
jl
adc
fldl
xor
fimull
pop
add
pop
xchg
mov
or
jecxz
xchg
in
iret
cmp
jg
inc
xchg
js
pop
idiv
lock
pop
pop
dec
jge
fimull
repz
loopne
lods
shrl
ds
data16
mov
push
pop
cmp
fiadds
lods
idivl
pop
pop
mov
xor
sti
loop
test
clc
fidivrl
mov
jnp
into
std
daa
and
leave
or
cmc
aam
pop
sbb
add
cmp
fsubp
xchg
fstpl
in
mov
loopne
sub
loopne
or
movsl
dec
or
jo
jmp
mov
mov
add
ret
cmp
sub
add
cmpsb
ucomiss
imul
adc
pop
imul
rcl
dec
scas
test
test
and
mov
push
into
icebp
xchg
leave
jnp
dec
xchg
push
sti
inc
push
pop
loop
jb
in
dec
out
icebp
pushf
xchg
jae
leave
sub
add
test
mov
pop
imul
cmpsl
mov
aas
dec
adc
cmp
sub
cmp
stc
cwtl
cmp
call
ret
xchg
stos
mov
pop
xor
scas
int
and
or
pusha
pop
jmp
and
xchg
arpl
pushf
push
in
dec
and
push
sbb
or
iret
imul
or
es
adc
cli
fidivrl
popa
push
out
stos
jle
aam
inc
dec
xchg
iret
push
pop
or
cmpsl
mov
dec
cmp
scas
sub
cmpsl
cmc
pop
movsb
mov
mov
sbbl
and
sbb
mov
pushf
sbb
repnz
test
jg
mov
movsl
in
mov
xchg
adc
mull
mov
arpl
add
mov
or
xor
inc
mov
or
sbb
lods
mov
loope
outsl
jmp
test
xchg
ja
jl
pushf
fsubl
add
inc
sub
aam
out
jp
jp
out
push
data16
loope
add
je
mov
rcr
dec
mov
adc
or
stos
cmp
test
in
shrl
das
inc
adc
inc
xor
mov
inc
xlat
daa
fst
rcl
xchg
xchg
je
add
xor
dec
pop
jnp
stos
lret
adc
jp
dec
cmp
mov
adc
sahf
add
mov
adc
sbb
cwtl
out
inc
cmp
add
aaa
cs
push
mov
mov
sbbb
pushf
int3
int3
out
add
or
mov
adc
jmp
gs
xor
dec
and
out
jmp
inc
adc
mov
stos
cmp
in
outsl
jmp
push
dec
jmp
xchg
icebp
rol
sbb
dec
cmp
lds
xchg
lods
out
jae
mov
xchg
inc
dec
hlt
shlb
xlat
lea
stos
fnstcw
repz
test
xchg
rcll
sub
xor
scas
sti
sbb
mov
pop
stos
repnz
in
iret
and
jmp
hlt
push
inc
lcall
jle
adc
mov
enter
mov
jmp
std
xor
hlt
jge
xchg
aam
scas
cld
lds
inc
mull
aad
ret
push
push
ret
pop
push
mov
mov
mov
mov
xchg
pop
mov
xchg
and
sbb
dec
ret
cs
test
gs
std
jb
or
xchg
into
cli
mov
cmp
jne
insl
xchg
dec
bswap
jo
insl
sti
jl
test
sahf
test
mov
loopne
imul
cmp
and
dec
xchg
mov
movsb
push
pop
sbb
xchg
test
leave
push
jmp
test
das
jno
xchg
mov
dec
mov
push
xchg
push
decb
adc
lahf
loopne
lock
push
outsl
push
dec
nop
mov
xor
clc
fcmovnu
xor
mov
stc
cwtl
fs
mov
xchg
xchg
stos
jb
xchg
fldcw
mov
cs
scas
enter
test
dec
or
call
push
mov
mov
mov
and
sbb
rorb
jecxz
insb
add
out
movsb
inc
mov
jb
gs
inc
mov
lret
lcall
ds
pushf
push
gs
leave
aad
les
pop
cli
daa
les
div
sbb
cmpsb
fbld
test
push
jecxz
mov
pop
scas
push
dec
fiadds
xchg
cmp
xchg
aam
in
pop
mov
sbb
pop
fisttps
or
jae
jae
leave
rcll
addl
sub
stc
cmpl
xor
push
lret
mov
aad
fisttpll
and
or
js
clc
mov
aad
pushf
adcl
and
shr
and
jmp
pop
mov
cmp
xor
mov
jae
pop
test
inc
pop
popf
sbb
mov
xor
testl
xor
mov
mov
subb
daa
test
aaa
inc
mov
aas
push
bound
sbb
fistpl
push
sbb
pop
pusha
sub
fwait
jp
scas
cltd
cmp
push
test
les
int
js
adc
test
loop
push
insb
popa
xchg
in
stos
add
hlt
cmp
mov
and
and
jl
jg
push
icebp
pop
and
aas
imul
adc
cmpl
sbb
jne
inc
lea
fwait
mov
rorl
sti
sub
push
fs
fidivrs
pop
loope
mov
push
cmc
mov
stos
int3
jbe
jne
or
mov
movl
sbb
push
iret
test
push
lret
add
mov
mov
sub
sahf
cli
jnp
sbb
inc
push
mov
hlt
cltd
jle
das
loope
inc
inc
jle
aam
jmp
sbb
push
pinsrw
mov
repz
mov
out
ret
cltd
cmp
sub
jl
test
and
out
sbb
sbb
jbe
add
das
fcompl
mov
outsb
and
xchg
je
pusha
add
xchg
out
mov
add
push
mov
nop
xchg
cmp
jne
xchg
jns
or
shl
icebp
testl
mov
in
sub
rcrl
push
mov
jns
cmpsl
jae
sub
movsb
pop
fldt
mov
sbb
movsl
mov
dec
in
out
jnp
stos
fsubrl
mov
das
push
push
jge
fnstsw
das
rorl
mov
dec
push
imul
test
clc
cltd
lahf
inc
shrb
jmp
mov
jne
push
push
mov
js
stos
les
adcl
mov
cmpsl
popf
push
add
dec
push
jnp
xchg
mov
pushf
xor
int
jns
mov
mov
hlt
insb
push
fsubs
das
popf
sti
inc
pop
loope
test
mov
xor
mov
xchg
fdivrs
aad
dec
out
push
shll
bound
xchg
dec
test
iret
mov
inc
das
adc
inc
adc
push
push
lcall
test
sbb
insl
sarb
xor
das
loop
mov
aas
pop
xor
fsubrs
stos
fucomi
stc
cmp
pop
icebp
or
xchg
ret
stos
aad
fsubp
mov
sub
or
sbb
push
push
inc
adc
arpl
add
imul
ficoms
push
jle
push
ret
movsl
mov
ret
mov
fcmove
push
jnp
scas
aam
fstp
xor
fisttpl
jne
xchg
leave
inc
jae
stos
repz
xchg
stos
push
leave
cs
jno
xchg
cmp
xor
aam
dec
cltd
out
push
dec
std
test
out
pushf
fdivs
test
jae
pop
add
xchg
js
ja
xor
int3
mov
movsb
std
cli
xchg
lock
loope
insb
scas
ret
and
pop
dec
inc
inc
in
mov
add
in
sti
xor
mov
cs
push
jno
push
repnz
cmp
pop
std
jecxz
push
loope
pop
fisttpl
fucomi
fsubrp
jae
out
cld
idivl
ror
cld
imul
push
xchg
xchg
mov
std
or
push
jns
add
pop
mov
mov
sub
push
and
rcr
push
stos
mov
jg
mov
and
jmp
lahf
subb
pop
mov
outsb
nop
rcll
jp
xchg
sar
xor
stc
add
scas
lret
imul
xor
lcall
sbbb
arpl
sub
dec
adc
pop
fisubrs
jecxz
jge
sub
cs
rolb
push
enter
sbbb
cltd
dec
arpl
jb
out
cmpsb
add
das
arpl
jb
aam
ret
push
and
in
push
cmp
xchg
std
mov
lock
ret
daa
inc
test
pop
mov
loop
mov
mov
mov
test
jnp
scas
fs
insb
or
sbb
dec
lcall
mov
pushf
adc
stos
mov
jge
in
dec
inc
jg
mov
push
and
ss
mov
xchg
push
add
mov
fisubrl
cmp
pop
stos
cmp
outsb
mov
mov
test
pusha
add
jl
push
fcmovne
inc
jns
pop
fmuls
fisubrs
aaa
cli
cmpsl
jae
addr16
je
shl
inc
sarb
pop
xchg
xchg
mov
repz
mov
sub
jl
xor
xor
sarb
jb
jne
add
movsb
jg
fbstp
mov
lret
jbe
mov
repz
or
cmp
fs
cmpsb
repz
mov
aas
lds
xchg
lahf
sahf
mov
lods
cmp
out
jmp
inc
sbb
loop
and
jnp
test
stc
testl
out
jg
outsl
dec
jmp
arpl
data16
dec
pop
mov
xor
andb
or
sbb
push
aam
imul
and
jnp
inc
sbb
mov
les
into
push
repnz
add
js
push
shl
loopne
and
add
cmp
jae
in
popf
loop
sub
jl
nop
insl
sbb
add
idiv
mov
js
arpl
mov
lahf
int
lods
xor
cmpsl
or
mov
mov
arpl
inc
pop
sbb
mov
scas
jb
ds
push
lock
ljmp
cmpsl
add
mov
or
je
jmp
xor
cltd
outsl
mov
pop
stc
test
push
ljmp
and
outsl
test
cmpsl
mov
call
push
imul
fiaddl
scas
loope
je
cmp
ficompl
sub
pushl
mov
dec
outsb
pop
sub
xor
xor
dec
fwait
add
addr16
dec
dec
sbb
push
sti
lock
ret
cmp
jne
and
cmp
lds
mov
in
push
jnp
scas
addb
add
and
inc
dec
and
in
fs
aas
cmpb
sbb
aam
sbb
xchg
sbb
call
ss
cld
jle
xchg
and
stos
inc
ficoml
mov
iret
lods
arpl
cmp
movsl
push
popa
repz
pop
and
dec
adc
xchg
lds
cmpsb
test
jp
and
into
lea
pop
or
out
pop
mov
jecxz
cltd
ficoml
or
leave
mov
lahf
mov
int3
and
cmpsl
shrl
loop
add
cmp
add
arpl
xor
jbe
add
mov
mov
xor
fdiv
jmp
mov
xor
xor
nop
pusha
pop
pop
shlb
repz
lret
adc
jb
pop
cmp
test
jmp
push
mov
jge
lret
fs
aaa
sbb
mov
cmpsb
and
sbb
out
sti
xchg
jb
jnp
into
push
sbb
jp
loopne
mov
scas
push
scas
sti
fldcw
out
cwtl
inc
dec
xor
mov
fcomip
test
lcall
push
and
mov
xchg
cmc
outsb
pop
lret
in
dec
pop
jo
inc
fcomip
xor
mov
stc
cs
or
xchg
mov
out
jae
popl
aas
xchg
fadds
test
push
lock
pop
les
push
daa
or
xchg
cmpsb
push
pop
ja
dec
add
xor
sbb
mov
mov
add
or
cmpl
pop
fsubrs
xchg
jmp
in
xchg
inc
sbb
xchg
jecxz
cmpsb
nop
sbb
lods
aad
cmp
mov
sub
sarb
and
push
adcl
xor
mov
jle
cmpsb
cli
stos
mov
push
sti
inc
jnp
mov
rorb
jb
cltd
and
adc
xor
ds
repz
jl
mov
and
fisttps
jno
mov
push
mov
test
xchg
ljmp
daa
and
clc
jns
cmp
push
sbb
cmp
push
mov
cmc
add
sbb
aam
xlat
inc
pop
aam
pop
ret
jle
mov
mov
std
sbb
cwtl
dec
and
iret
test
push
xor
sti
fsubrl
pushf
add
cs
or
add
cmp
adc
push
int
fisubl
out
lcall
xchg
jp
clc
int
inc
jl
xchg
lret
xchg
mov
sbb
mov
cld
jmp
mov
pushf
or
inc
nop
dec
jle
xchg
test
cld
mov
ucomiss
xchg
xlat
or
sbb
sbb
cmpsl
nop
ja
movsl
pop
and
lret
xchg
mov
outsl
fstl
or
call
push
xchg
inc
fidivs
aam
sbb
sbb
lcall
sub
and
sub
movsl
shrb
test
xchg
in
repz
cmp
shrl
pusha
in
lods
cld
inc
fidivl
mov
imul
subl
cmp
add
mov
in
ljmp
into
pop
pop
stos
mov
adc
daa
xlat
dec
fcoms
filds
lret
inc
mov
mov
ret
push
jns
sbbl
jmp
sub
fnstenv
adc
fwait
cwtl
pushw
psubusb
cmc
push
in
rcll
lret
je
xchg
mov
in
sti
dec
shrb
lcall
push
xchg
fisttpll
xchg
inc
mov
pop
pop
adc
xorb
mov
daa
jle
insb
push
loop
xchg
push
lret
clc
addb
or
push
ljmp
jge
sbb
mov
xorl
cld
or
mov
leave
sbb
mov
lds
jge
cwtl
sti
pop
mov
into
outsb
fnstenv
add
loopne
lds
adc
pop
xor
ljmp
enter
push
mov
jns
cmpsl
adc
out
dec
inc
dec
inc
add
ret
push
add
lock
fbld
jmp
das
fxch
movsb
mov
ret
in
jl
pop
or
js
js
or
aam
mov
sti
test
or
xchg
fcomps
scas
in
push
ret
insb
sub
jge
mov
adc
mov
flds
insb
mov
jno
pop
aas
imul
sbb
pop
fidivrs
lock
cmp
inc
into
pushf
pop
leave
cli
jg
and
inc
and
repnz
adc
fldenv
mov
enter
add
sbb
jno
scas
cwtl
mov
popa
arpl
inc
inc
sbb
jb
jbe
mov
xlat
and
bound
movsl
adc
daa
lock
clc
out
or
sub
loop
popf
pop
pop
or
aaa
push
out
jmp
or
gs
jp
sti
in
movsl
jl
test
fxch
int
lea
rcrb
aas
aaa
cmp
fstpt
shlb
in
test
xor
imul
fisubl
cmp
xchg
mov
shlb
push
test
pop
pop
fmul
dec
adc
mov
jle
clc
push
pop
pop
mov
clc
cmp
lea
lds
dec
xchg
xor
test
and
push
mov
fwait
ret
adc
ljmp
mov
aaa
or
sbb
inc
mulb
inc
push
mov
fsubrl
and
lahf
push
neg
icebp
pop
jecxz
mov
adc
xor
add
into
ja
jp
cld
cs
and
call
add
sbb
xchg
data16
fwait
sub
sub
leave
push
xorb
in
ret
fcomi
mov
add
inc
cltd
push
lret
sbb
cmp
sbb
sbb
xchg
addr16
adcl
sbb
pop
pop
and
mov
push
ret
or
insb
rorl
in
insl
mov
or
aas
imul
cld
push
or
add
test
into
pop
mov
fimull
inc
adc
dec
adc
in
pushf
loop
push
pop
in
nop
pop
mov
mov
roll
insl
xchg
push
outsl
out
xchg
push
clc
cmp
stc
push
jo,pt
int
add
jb
in
fbstp
sbb
mov
dec
out
pop
mov
sub
iret
ss
clc
repnz
xchg
aad
jo
dec
fmull
cmpb
insb
push
js
popa
mov
adc
jl
xchg
mov
rcrl
xor
jmp
adc
into
xor
jo
fdivrp
mov
rclb
dec
pop
clc
sbb
pop
loopne
add
mov
or
inc
enter
and
ja
mov
inc
jno
lods
xchg
cld
push
outsb
sahf
mov
mov
mov
int3
push
mov
int
aad
cwtl
cltd
dec
pop
ja
lahf
loop
xchg
jns
sti
dec
mov
or
jl
aam
xchg
and
mov
aam
in
pop
lret
add
mov
jle
fldt
jmp
arpl
xchg
or
nop
xor
pslld
mov
stos
sub
pop
push
leave
addl
mov
aad
in
scas
test
mov
or
lds
and
arpl
mov
gs
andb
into
cmc
cs
cli
xchg
hlt
mov
outsb
sbb
ss
sbb
add
push
add
outsl
cmpsb
shlb
popa
addr16
xchg
mov
jecxz
std
xor
std
xchg
xlat
lods
push
ret
push
ds
push
mov
xor
loop
jno
add
fcoml
sub
mov
fcompl
pop
iret
xchg
aas
aas
aas
mov
ds
fmul
ss
aad
cmp
rdmsr
imull
mov
mov
inc
arpl
stos
dec
xor
cmp
dec
outsb
stos
mov
mov
outsb
add
mov
ljmp
test
in
popa
mov
sub
repz
jge
add
fwait
movsb
xchg
nop
je
push
jo
and
ds
jns
ret
xchg
mov
xchg
lahf
xchg
nop
mov
mov
es
adc
loop
lahf
mov
mov
fildl
sbb
lret
mov
dec
or
daa
aas
icebp
iret
push
pushf
insb
in
stos
push
cld
and
mov
dec
notl
std
mov
dec
aam
adc
rcr
push
xchg
xchg
push
fwait
repnz
enter
dec
mov
jnp
cmp
pop
scas
and
inc
addr16
xchg
outsb
fsubrl
scas
xor
jecxz
dec
cmp
shll
into
icebp
push
into
pop
addl
icebp
out
cwtl
xchg
adc
in
xchg
xchg
outsb
dec
repz
in
lds
inc
insl
jg
or
jmp
ret
fsubrl
mov
xlat
xchg
pop
aam
jl
insl
scas
xchg
add
cmp
mov
mov
shr
scas
hlt
int
adcb
psrlq
sub
fidivl
outsb
mov
sub
mov
or
xchg
out
jns
stos
loope
adc
add
aaa
test
adc
mov
mov
js
add
xchg
int
jecxz
call
test
fdiv
mov
push
mov
dec
adc
in
push
neg
jns
aaa
popf
sub
jl
in
jb
inc
mov
cmp
mov
xchg
xchg
iret
pop
xchg
andps
fcoml
dec
or
add
or
fcmovnbe
mov
es
add
mov
cmp
add
dec
pop
push
sbb
xor
xchg
mov
or
es
popl
lods
add
jge
mov
clc
xchg
lahf
cmpsl
and
fwait
jb
imul
paddw
mov
in
repz
mov
push
out
pop
popf
in
mov
lds
aaa
dec
gs
fidivrs
stos
mov
ss
stc
fwait
jl
int3
dec
push
test
stos
sub
xor
mov
mov
sbbb
pop
imulb
push
mov
mov
inc
scas
sbb
xor
into
xchg
sub
sbb
pop
xor
hlt
push
mov
mov
adc
mov
fs
in
and
mov
mov
add
or
inc
and
loope
cmpsb
loop
push
in
or
lret
sub
sti
jae
int
imul
mov
inc
sbb
sub
lret
iret
push
dec
adc
and
cmp
and
stos
dec
xchg
sub
jnp
add
or
outsb
mov
dec
xor
shll
mov
inc
push
pop
hlt
push
adc
cmc
push
jae
cli
repnz
push
xor
xchg
cld
js
inc
push
dec
pop
push
inc
popa
inc
mov
dec
in
outsl
push
les
adc
jl
sub
mov
push
dec
cmpsb
mov
adc
jmp
adc
sub
pusha
cli
repnz
jbe
roll
loop
sbb
xchg
repnz
or
mov
idiv
mov
dec
outsl
mov
decl
aas
fsubs
push
jecxz
cltd
into
cltd
call
mov
out
push
fsubs
dec
xor
or
push
iret
xchg
lret
pop
add
xchg
enter
movsl
add
movsl
dec
sub
push
mov
push
insb
pushf
xorb
mov
sbb
rcrl
aam
mov
insl
push
pop
xor
push
testb
sub
mov
adc
mov
adc
std
and
stos
lock
or
mov
push
xchg
push
adc
jge
loop
loopne
scas
hlt
dec
jbe
bnd
or
push
movsb
or
leave
movsb
jo
push
in
xchg
or
mov
sbb
test
adc
lock
stos
ret
mov
stos
mov
test
rcr
test
cli
lahf
and
inc
inc
or
aas
mov
jno
sbb
iret
cmc
bound
jl
outsb
and
std
and
jp
popa
lds
fwait
clc
mov
sub
popf
push
and
jno
es
jmp
and
pop
out
loopne
stc
xchg
fdivrl
xor
add
fs
mov
xor
cld
ds
pop
jmp
dec
scas
fdivp
xor
or
mov
xchg
sbbl
xchg
xor
incb
rorl
xchg
xchg
mov
fldenv
into
adc
inc
mov
sbb
xchg
test
jle
int3
push
cmp
adc
movsb
in
jg
mov
mov
loop
mov
call
sbb
mov
mov
inc
xchg
lret
and
jae
rcrb
sub
jbe
xchg
or
jmp
adc
lods
or
xorl
inc
mov
push
lcall
cltd
fmul
mov
add
mov
mov
dec
push
push
test
iret
imull
aam
pop
in
fistl
and
inc
repnz
cmpsl
clc
inc
pop
inc
push
push
popa
out
mov
lea
repnz
cmp
out
adc
push
push
inc
cld
mov
je
clc
lods
push
int
pop
scas
xor
sbb
cltd
pop
lea
sub
adc
dec
scas
cmpsb
aas
out
sub
jl
lds
insb
sub
clc
out
test
mov
test
pop
ss
mov
inc
sti
lock
lds
sub
adc
sub
inc
scas
inc
repz
push
jge
inc
cmpsl
jno
cli
xchg
and
sbb
push
je
cwtl
mov
cmp
pop
or
mov
mov
je
sti
sub
data16
sbb
scas
scas
dec
ja
mov
shll
add
jns
jle
lahf
pop
stos
pop
pushf
aaa
enter
and
jg
mov
sub
out
sub
test
pop
pop
test
pop
mov
enter
inc
push
scas
xlat
xor
push
add
xchg
xchg
sub
sti
jecxz
adc
sarb
dec
fistl
sbb
clc
and
sti
lods
icebp
daa
bound
cmp
jmp
mov
mov
sarl
push
xchg
in
arpl
aad
popa
push
popa
sar
adc
popf
mov
movsb
in
das
lock
ja
inc
mov
push
scas
mov
or
mov
mov
jb
jg
fsubl
push
or
sbb
push
push
sub
dec
pop
sysret
test
and
lea
fimuls
push
adc
adc
fld
movsb
rcll
inc
fwait
xlat
movsb
and
testl
push
dec
pushf
push
in
ja
sbb
jge
movsb
hlt
xor
sub
insl
and
lret
dec
in
out
dec
pop
push
push
inc
bound
shrl
imulb
cmp
sub
jne
mov
xor
popa
sub
stos
sub
push
mov
or
or
out
mov
mov
fadd
in
jbe
jecxz
xchg
pop
xchg
mov
mov
pop
stos
inc
and
pop
mov
rcrb
popa
out
cmpsb
gs
fsubrs
sbb
pop
pop
xchg
inc
xchg
fists
jecxz
jb
mov
int
and
and
pop
mov
ret
ljmp
xchg
or
and
shrl
in
inc
subl
lds
cmpl
jns
mov
mov
adc
mov
mov
shlb
sub
dec
lret
adc
divl
scas
xorb
inc
lods
insl
repz
dec
lret
or
mov
stos
xor
mov
fsts
cmp
iret
add
mov
ret
xor
add
jnp
out
jle
sbb
jmp
js
mov
ror
or
push
xchg
xor
cli
push
faddp
lock
push
dec
stos
jmp
jnp
pmuludq
std
dec
in
ret
sbb
and
mov
popf
mov
addr16
mov
in
xchg
push
movb
ds
rcrl
xor
xor
negl
ljmp
and
sbb
gs
add
loope
movsl
xor
mov
cli
clc
jecxz
cmp
in
scas
xchg
imul
out
shl
add
je
cmpsl
lret
dec
sbb
dec
imul
test
cmp
sbbl
xchg
jb
mov
fistpll
xor
jge
cmc
cmc
jb
sub
mov
and
fsubl
out
pop
cmp
and
cmc
mov
pop
ja
lods
adc
in
sbb
or
shrl
shlb
fidivrl
insb
test
ss
xor
scas
std
and
movsb
mov
mov
push
sub
enter
clc
lahf
rorb
lret
lods
add
call
nop
aaa
cwtl
call
insb
mov
test
setg
pushf
sub
das
lcall
stos
xchg
nop
popf
xchg
and
push
push
decl
add
inc
add
inc
jno
popf
jo
repz
jae
jle
mov
mov
push
xchg
jl
sar
mov
out
les
xor
cmp
int3
ds
add
mov
dec
imul
cmc
and
push
shrb
jle
mov
subb
in
repnz
cmp
mov
popa
mov
add
or
sbb
mov
movsl
movsl
inc
mov
cmpsl
dec
sub
push
insb
cltd
sbb
pop
push
mov
outsb
leave
push
insb
jmp
push
and
in
jns,pt
std
add
andl
std
xor
xor
pop
xchg
lods
repnz
test
and
in
in
cmp
and
nop
pop
test
movsl
mov
fwait
xchg
push
xor
les
mov
lahf
sub
xor
inc
push
push
into
test
test
int3
orb
jb
lods
mov
sbb
and
add
jnp
outsl
xchg
mov
or
pop
xor
sbb
jmp
les
ret
inc
lret
ret
adc
mov
jp
repnz
lcall
lret
add
or
iret
xchg
sbb
in
jp
dec
xchg
mov
add
loopne
out
les
adc
push
cld
inc
scas
into
xchg
mov
test
xor
push
jns
jge
push
scas
sub
mov
inc
nop
je
push
xchg
inc
pop
xchg
ficompl
sub
lcall
dec
mov
dec
stos
fwait
push
xor
push
xchg
scas
test
mov
mov
lret
aam
lahf
inc
lcall
es
mov
imul
test
pop
cmp
sti
je
mov
gs
sbb
fisttpl
stos
and
jno
xchg
mov
lcall
data16
xor
aam
mov
jge
cmpsb
dec
scas
mov
ds
pop
mov
jns
outsb
pushf
sarb
jo
sbb
add
push
sbb
test
xchg
lock
popf
in
mov
aas
push
mov
dec
popa
inc
mov
out
mov
subl
in
stc
pop
xlat
cmp
hlt
pushf
lcall
pop
fwait
xlat
mov
dec
pop
mov
cmp
rep
std
js
popf
fdivrs
rcll
fdivl
into
jae
iret
push
aam
pop
sbb
mov
lahf
orl
mov
pop
popa
in
imul
nop
push
ja
cmp
and
mov
lcall
push
mov
pop
pushf
jl
daa
cmp
sbb
cli
jb
cmp
fcomps
pop
cli
cmp
fbstp
pop
fs
cld
cwtl
nop
mov
ja
sub
cmp
aas
test
jne
add
popf
addr16
out
mov
add
aas
pusha
fs
dec
jle
fdivp
imul
daa
jne
xor
inc
jmp
pop
adc
stos
inc
and
mov
stos
mov
out
mov
stc
ror
mov
pop
push
enter
or
sbb
mov
stos
and
sbb
mov
xchg
mov
sbb
dec
das
push
push
xchg
xchg
pop
cmpsl
sbb
js
xchg
mov
mov
cmpsl
dec
cltd
fs
in
sbb
repz
jmp
push
push
cmpsl
lods
jae
pop
ja
jno
xchg
sbb
xor
jae
or
mov
mov
xchg
inc
jb
iret
out
sub
adc
xchg
lock
mov
push
jge
mov
das
inc
test
lret
adc
sahf
mov
out
xor
std
repz
or
out
sub
fnstsw
inc
xor
mov
lea
jnp
push
push
mov
cmc
ds
cmpsl
or
je
dec
or
and
shl
rcl
lahf
inc
inc
jnp
add
fcom
lea
stos
pop
test
daa
out
jle
and
inc
lahf
mov
es
aam
int3
aaa
push
dec
push
aad
int
js
lret
orl
xor
popf
jno
lret
imul
or
aam
and
fdivrl
sbbb
movsl
inc
cmp
mov
add
xchg
lcall
in
lahf
push
test
push
adc
mov
or
mov
test
jnp
jnp
and
frstor
js
loope
sub
fwait
add
pop
mov
jne
adc
mov
mov
pop
or
inc
lea
add
xor
sbb
pop
xchg
cltd
scas
negl
ret
mov
jae
pop
cli
rep
inc
add
jbe
insb
sbb
je
dec
adc
cmpsb
xchg
push
dec
clc
stc
push
cmpsl
sub
jo
inc
out
imul
lret
rcrl
scas
movsb
ss
adc
aaa
or
sbb
mov
mov
ds
insb
mov
push
lret
movsl
push
cwtl
repnz
mov
or
inc
mov
stc
add
dec
cmp
das
sbb
cld
push
fs
movsb
jecxz
inc
xorl
jns
movsl
hlt
pop
mov
movsb
xor
test
mov
popf
mov
xor
add
push
stos
in
xchg
push
dec
mov
cmp
out
push
sbbl
push
fsubr
repz
push
mov
push
aaa
push
lret
xor
jo
jb
cmpsl
lock
std
xor
ficoml
xor
dec
lret
sahf
outsl
sub
mov
mov
mov
loope
int3
push
adc
fisttpl
cld
out
aas
into
inc
pop
dec
cmpsb
lods
xchg
sti
adc
in
jecxz
mov
cmp
adc
movb
dec
pusha
filds
lds
cmp
push
sub
jne
mov
in
xlat
cmp
pop
or
rclb
xor
movsl
cmp
lods
add
push
xor
dec
pusha
outsb
icebp
lods
mov
shll
je
adcl
dec
cmp
cld
sbb
shrl
clc
jo
test
xchg
mov
jne
sub
rcr
push
adc
lcall
iret
xchg
out
sti
and
jmp
enter
mov
jmp
stos
pop
ficoms
sbb
lods
mov
mov
cli
pop
mov
jmp
pop
push
test
mull
dec
stos
inc
adc
or
into
stc
push
adc
insb
dec
roll
push
push
in
pop
push
stos
movsl
sbb
and
jnp
jle
cmp
jo
cmp
arpl
clc
push
aaa
and
jecxz
imul
dec
push
and
jle
stc
push
addr16
mov
add
pop
xchg
xchg
lods
pop
inc
push
xchg
pop
jmp
mov
in
jno
xchg
dec
and
testb
cmpsl
scas
movsb
adc
sahf
xchg
xor
cmp
fdivp
pop
aaa
xchg
cmp
mov
jae
fwait
mov
int3
int
pop
inc
in
hlt
adc
xchg
or
rcrb
das
mov
aas
cmp
add
sbb
icebp
mov
dec
jno
lods
push
cltd
in
sbb
loop
loopne
jl
stc
ret
sbb
xor
mov
rolb
xchg
jecxz
adc
sub
jl
fdivrs
scas
addl
in
xor
fldt
add
or
jp
mov
loope
and
dec
mov
dec
enter
push
adc
aam
bound
lock
js
push
push
out
aad
jecxz
notl
shll
jno
push
cmp
xor
lret
lods
ret
mov
in
cmp
jmp
dec
enter
sub
pushf
aam
lahf
mov
out
push
rcll
mov
mov
movsb
dec
mov
dec
jbe
dec
jb
add
add
lds
out
push
pop
mov
jle
jmp
shrl
shll
outsl
sbb
or
inc
daa
outsb
aam
jp
jne
bnd
int3
cmp
xor
push
push
loope
or
idiv
icebp
xlat
nop
js
or
fstpl
das
hlt
xlat
aad
xchg
or
xchg
jb
cld
pop
dec
add
push
pusha
cs
ss
mov
xor
jg
insl
cmp
imul
sarl
push
lock
stc
test
mov
and
imul
stos
add
outsb
jne
push
enter
dec
cmp
cmc
or
das
test
sbb
aad
std
into
dec
fidivrs
inc
add
jg
sar
xchg
and
xlat
ds
adcw
in
push
popf
pop
fwait
add
inc
dec
xchg
add
push
mov
sub
sbb
fs
repz
enter
testl
cmp
enter
das
or
fdivl
inc
mov
jecxz
fdivrl
aad
cltd
inc
adc
jne
loope
movsb
xchg
and
cmp
inc
cwtl
hlt
hlt
inc
xchg
scas
sub
or
sub
arpl
pop
mov
and
call
jge
mov
add
adc
dec
pop
jp
mov
mov
test
inc
xorb
dec
test
xor
inc
mov
cmc
pop
sbb
sub
cld
popf
add
jb
adc
push
fadds
lds
jmp
and
bound
mov
xchg
test
xchg
sbb
xchg
sub
and
outsb
faddl
dec
mov
insb
popl
fidivl
iret
mov
pushf
fidivrs
leave
inc
mov
ljmp
ficoms
mov
mov
mov
cmp
lods
andb
scas
push
and
jecxz
mov
sbb
sub
orb
stos
out
push
ret
inc
add
xor
sarb
dec
testl
dec
out
inc
cltd
add
mov
stos
jge
push
adc
xor
xchg
lahf
or
fiadds
imul
loop
dec
jle
rol
pop
jg
lret
cmp
into
je
jns
push
sbb
lret
dec
aad
and
mov
es
jmp
out
fistpll
cmp
or
cs
push
mov
cmpsb
cmpsl
pop
inc
cmp
pop
dec
xchg
and
lock
add
sub
xchg
push
les
adc
inc
out
sub
inc
sub
sub
xchg
or
mov
mov
pop
cmp
adc
adc
iret
in
push
or
mov
cmp
loop
std
mov
xchg
pop
xchg
mov
xor
push
xor
mov
lock
pop
pop
mov
out
jg
adc
inc
out
pop
lahf
sarb
xchg
xor
xchg
ljmp
loop
les
xor
lods
fstl
lea
mov
loope
mov
push
andb
and
cmpsb
dec
xor
pusha
pop
je
pop
mov
scas
gs
stos
cmp
test
jmp
ret
int
jno
sbbb
aad
rcll
mov
sbb
sgdtl
xor
in
pop
stos
jle
or
dec
add
mov
pop
mov
xlat
pop
mov
int
cmc
inc
outsb
jne
test
and
mov
mov
clc
xchg
dec
adc
sub
xchg
and
leave
lret
jo
sti
jo
inc
bound
and
aam
insb
daa
jne
add
insb
pop
outsl
jbe
adc
mov
cmp
add
or
dec
lret
pushf
push
xchg
push
xchg
mov
aam
adc
mov
pop
jg
pop
jbe
cmp
mov
test
mov
cmp
ja
loop
and
sbb
or
adc
fldt
pop
mov
inc
leave
inc
adc
cmp
ljmp
orl
jne
int3
subb
xor
mov
addb
ret
ja
pop
mov
mov
adc
clc
fbld
idivl
popa
dec
stc
mov
lcall
leave
add
add
or
add
push
jg
cmp
add
fscale
dec
popf
sbb
mov
addb
repz
clc
lea
xchg
outsl
movsb
add
rorl
int
pop
adcb
fwait
aam
pop
icebp
pop
sbb
mov
mov
fmul
adc
mov
jp
cwtl
enter
das
xchg
sbb
dec
faddp
std
into
xchg
and
jne
add
pop
xor
push
sarl
xor
push
ret
mov
aam
jns
fsubrl
fs
adc
dec
in
fsubs
mov
test
jo
push
mov
lahf
repz
xchg
inc
enter
mov
jp
lret
mov
dec
movsb
sbb
popa
or
or
repnz
adc
arpl
movsl
and
mov
sbbl
or
sub
mov
lock
sub
fs
mov
in
xor
lock
lds
rcrl
or
std
dec
adc
mov
xchg
addl
or
mov
lahf
pusha
cmp
push
loope
jno
pop
aas
push
mov
insb
imul
push
testl
xor
int
cmc
repnz
pusha
pushf
sbb
cmp
addr16
outsl
xor
adc
inc
jne
adc
adc
js
in
inc
fisubl
shll
jle
ret
imul
mov
lock
cmp
cltd
push
mov
hlt
enter
add
lahf
loopne
xor
mov
lret
jns
rclb
into
mov
lock
and
stos
fmull
mov
mov
xchg
je
add
leave
shll
and
es
or
mov
push
fdivl
adc
cli
dec
push
xor
outsb
lods
add
cltd
out
pop
mov
jns
dec
push
add
iret
pop
out
xor
pop
shlb
out
lea
sbb
cmpsl
pop
mov
call
stc
pop
jae
xor
mov
sahf
xor
insl
ds
gs
push
int
sahf
ja
or
xchg
ret
mov
mov
and
mov
int
cmc
push
push
mov
push
xchg
out
adc
and
jp
stc
jne
imul
iret
cmp
pop
and
in
jns
mov
mov
inc
dec
outsb
hlt
mov
push
test
aad
stos
push
pop
xor
mov
test
sarb
xor
fwait
sbb
jo
adcb
notl
jp
inc
jns
dec
pop
sub
push
cmp
xchg
test
aas
xor
jae
or
dec
push
xchg
lret
cltd
inc
insb
dec
inc
sti
movsl
push
mov
push
ds
mov
clc
xchg
fst
ret
cli
data16
aad
pop
sar
xor
cmp
mov
mov
movsl
mov
dec
pop
shrb
jnp
cmp
mov
test
int3
fcmovnb
fstps
aaa
jmp
mov
dec
pop
cmpsl
inc
jge
pop
fsubrl
push
or
aas
cmp
movsl
add
outsl
adc
shlb
or
sbb
mov
inc
mov
mov
pop
xchg
jno
xchg
mov
out
stos
jmp
pop
pop
in
iret
sub
pusha
lret
push
xor
daa
xor
incl
cmp
out
das
out
add
xor
xchg
mov
inc
cmp
jmp
add
stos
adc
shrl
in
sbbl
out
je
fstl
push
fdivs
inc
fisubs
mov
int3
cmpsb
sub
push
lcall
ljmp
cmc
fldcw
mov
imul
clc
sub
and
leave
ret
add
repnz
adc
std
les
movsb
sti
jnp
dec
stos
mulb
stos
ljmp
pop
std
add
subl
js
hlt
rclb
add
movsb
fwait
xchg
xor
lret
lcall
mov
fisubrl
cmp
mov
into
pusha
lcall
mov
mov
rcrb
ja
jb
bound
mov
sbb
adc
pop
sub
inc
sub
inc
test
push
std
test
pop
psrlw
mov
out
dec
and
cmpsl
pop
push
mov
cmp
add
fs
int3
jle
repz
fdivrs
pop
movsb
inc
xor
pop
in
jle
iret
add
stos
jge
jbe
popf
sub
js
pushf
movsl
push
cld
out
jne
mov
jmp
or
inc
mov
mov
ret
mov
pop
movsl
mov
clc
sti
ret
lahf
movsl
cltd
in
adc
popf
sbb
testb
sub
push
mov
mov
bound
lahf
fsubs
test
jns
push
insb
out
push
sbb
insl
sbb
out
std
shlb
xor
daa
outsb
jmp
mov
mov
xor
inc
sti
inc
or
sbb
jle
cmp
mul
lds
shll
mov
push
inc
cmc
fbld
push
dec
loope
xor
inc
ds
and
mov
lcall
hlt
add
pop
aam
sbb
int
in
adc
mov
sbb
xchg
dec
adc
aas
xchg
push
and
or
dec
or
and
xchg
cld
sbb
sti
mov
or
mov
and
arpl
cmp
data16
stc
adc
test
daa
out
add
call
xor
flds
mov
cmp
dec
adc
xorl
push
xchg
sahf
cmp
rorb
push
shll
es
sbb
sub
outsb
and
dec
into
xchg
fs
push
fsts
mov
adc
loopne
pop
push
aam
cmp
cltd
out
outsb
mov
iret
add
sbb
insl
push
push
bound
lods
leave
fadds
push
pop
ljmp
clc
sub
push
sarl
dec
mov
xor
mov
mov
cmp
leave
js
jge
or
call
outsb
xchg
mov
int
sahf
fsts
popf
cmp
add
jne
mov
sahf
mov
int
mov
fadd
pop
or
lcall
loope
bnd
icebp
xchg
lahf
sub
dec
das
push
out
cli
mov
or
cmp
mov
hlt
movsl
cmp
push
cmp
cmp
or
push
test
pop
sub
mov
and
jecxz
mov
jg
jns
mov
hlt
adc
mov
jo
pop
das
jno
inc
add
es
and
jnp
leave
push
sub
cmp
jmp
cld
xchg
xchg
xchg
add
dec
sahf
pop
stos
into
and
cltd
dec
pop
outsb
das
push
popl
cld
or
mov
mov
mov
jno
cmp
mov
sub
mov
repnz
dec
sub
pop
cmpsb
mov
sarl
xchg
jne
cmp
jns
arpl
hlt
jb
dec
dec
test
mov
pop
lods
cmp
std
or
dec
and
mov
jno
out
out
sahf
inc
testb
sub
or
cmp
sbb
outsb
outsb
mov
inc
push
xor
xchg
aad
ss
not
dec
insb
push
cwtl
cld
jo
rcl
and
dec
inc
or
repnz
or
int
cs
xor
add
xlat
pop
jle
leave
scas
or
jge
addb
leave
xor
test
pop
push
outsl
test
repnz
out
pop
fdiv
lcall
push
cmp
fildl
lcall
aam
out
mov
ja
fldl
enter
cmp
fidivl
push
cmp
fidivs
call
mov
subl
fbstp
scas
ret
add
dec
push
ja
jns
fwait
and
in
rcrb
and
test
sbb
push
insb
loope
or
lods
xlat
sbb
mov
pop
or
scas
sub
pushf
js
or
pop
lock
pushf
sbbb
pop
inc
sbb
pop
mov
dec
in
in
dec
enter
pop
sub
jbe
sub
fidivrs
negl
lcall
add
dec
ss
sbb
or
outsb
stos
jl
lods
sub
add
movsl
out
jno
adc
xchg
dec
mov
stc
xchg
mov
clc
and
lock
ret
orl
enter
or
mov
mov
cmc
inc
cmpsb
pop
cmp
ss
fimull
leave
sub
inc
fcmovb
pop
adc
mov
ret
jns
stc
sahf
in
mov
inc
sub
push
add
fdivp
orb
adc
adc
shll
rcll
sbbl
test
cmp
in
movsb
dec
loope
sbbb
hlt
mov
xchg
push
jp
mov
jmp
popf
jno
adc
mul
xor
mov
fistl
in
dec
or
mov
roll
mov
and
inc
mov
test
push
adc
or
pop
cmp
dec
push
lahf
push
aad
push
fidivrs
leave
inc
ljmp
add
push
or
or
add
push
dec
push
out
insl
adc
mov
popa
shr
pop
iret
stc
push
pop
cmp
icebp
orb
jnp
push
cmp
dec
xor
dec
or
imul
rcll
sbb
mov
sbb
hlt
pop
cmpl
and
sti
sbb
popf
out
testl
add
dec
outsb
int
rolb
mov
or
mov
stc
dec
enter
adc
stos
mov
js
scas
mov
testb
jae
fcmovnb
loope
lcall
mov
or
cwtl
push
sahf
mov
pop
sub
jp
dec
mov
push
clc
pop
lods
or
into
insb
test
push
int3
fisubs
popf
outsb
pushf
jecxz
dec
arpl
mov
insl
add
xchg
mov
mov
or
addr16
jne
pop
cmpsb
popa
lock
pop
insl
cwtl
cltd
adc
iret
lret
arpl
sub
xor
jbe
mov
es
loopne
push
ss
std
dec
icebp
sub
rolb
lahf
mov
rol
cmpsl
and
pop
xor
add
sbb
repnz
cmp
lods
movsb
xor
addr16
repnz
imull
or
fstl
mov
mov
xchg
mov
push
add
pop
pop
sub
push
jg
mov
and
hlt
movsl
subl
loopne
ss
mov
lods
dec
ficomps
add
cmp
cmc
insb
lock
xchg
call
dec
push
push
adc
mov
pop
pop
pop
call
cli
sahf
mov
shl
mov
fstpt
lods
mov
fstpl
inc
lret
inc
jnp
mov
jo
ret
in
arpl
push
stos
in
pop
xor
aam
movsl
push
sahf
mov
iret
push
inc
movsb
dec
rcrb
adc
fcomps
sub
push
stc
add
cmp
xor
dec
les
lahf
shll
das
imul
es
insl
mov
in
dec
jle
pop
xchg
inc
jno
push
out
mov
loopne
xlat
xchg
xchg
notl
in
aaa
cwtl
xorl
mov
fucomp
mov
jmp
and
or
mov
bound
cmp
loope
mov
rolb
in
fs
cld
pop
mov
xor
popf
mov
cmp
lcall
fstl
lods
sub
idiv
push
xchg
lods
push
insl
ja
mov
push
ret
sbb
push
pop
sub
add
dec
inc
pop
repnz
pop
dec
xchg
ret
daa
iret
pop
lock
pop
rcrl
mov
sub
ficoms
xor
in
test
pop
mov
xchg
push
arpl
push
dec
into
clc
jne
in
pop
fdivr
inc
push
shl
mov
sub
gs
xor
mov
cmp
pop
dec
es
jnp
ja
lods
and
xor
jb
push
push
pop
sbb
push
rcr
cmp
imul
or
xor
fwait
inc
push
jge
mov
neg
and
xor
je
sbb
mov
imul
les
inc
push
or
hlt
mov
mov
xorb
filds
xchg
aad
fnstsw
fwait
jl
inc
jg
jae
adc
int
mov
dec
mov
shlb
lret
inc
in
pop
js
test
popf
lods
mov
xchg
push
insb
and
adc
shl
dec
sub
or
iret
in
xor
icebp
cmpsb
out
mov
pop
dec
or
test
int3
dec
nop
test
add
shrl
mov
xor
je
inc
out
mov
cli
inc
test
adc
cmpsb
dec
jbe
faddp
mov
insl
mul
shrd
pusha
fs
jne
adc
int
pop
jmp
loop
shr
pop
jb
mov
insb
push
mov
leave
jg
adc
push
mov
shlb
add
dec
addr16
flds
mov
loope
or
inc
lods
pusha
push
mov
inc
sti
lods
xchg
sbb
or
cwtl
inc
ljmp
cmp
jb
sub
loopne
pop
add
jb
out
cwtl
xlat
fldenv
loope
mov
in
loop
int
arpl
jbe
sub
add
mov
add
pushf
clc
dec
sbb
hlt
adcl
daa
imul
sbbb
xchg
push
mov
or
fiadds
out
add
insb
cmp
mov
setnp
int3
xchg
into
mov
jns
ret
dec
and
ss
or
inc
dec
das
leave
jae
movsl
flds
pop
aaa
jnp
sub
subl
push
sbb
lret
pushf
cwtl
jns
sub
ds
mov
cmp
and
and
lcall
ss
mov
cmp
cli
and
push
push
mov
movsl
dec
ss
int3
and
incl
test
call
adc
pop
in
xchg
mov
sbb
mov
sbb
subl
sub
leave
mov
jno
aad
jp
and
cmp
jge
cmp
xor
jnp
sbb
add
js
pop
fs
pop
int3
xchg
push
jge
sub
adc
sub
and
jb
sti
adc
aam
fiadds
std
rclb
mov
movsl
fldenv
imul
mov
mov
shr
xchg
xchg
jae
mov
stos
dec
test
cmpsb
inc
fiadds
idivl
les
push
arpl
daa
mov
popa
subl
push
xchg
gs
xchg
icebp
and
pop
out
dec
outsb
sbb
adc
inc
cmpsb
dec
mov
add
xchg
in
mov
or
iret
fimull
push
push
into
adc
sub
mov
fmul
repnz
push
adc
out
pop
scas
mov
push
xlat
rcrb
push
daa
iret
pop
shll
xor
lods
aad
mov
mov
cmp
fwait
add
iret
and
loope
push
aas
add
add
jne
fmull
push
sbb
adc
lods
pop
aam
cs
shlb
jecxz
xchg
xor
jb
inc
hlt
xor
jecxz
mov
daa
and
stos
fmull
pop
jl
adc
sbbl
and
mov
mov
movsb
jl
cmp
push
inc
cs
inc
inc
inc
mov
pop
scas
push
addr16
mov
cmp
call
or
push
shrb
test
out
repnz
movsl
inc
sub
mov
scas
sub
xchg
cld
jnp
movsb
and
out
xor
shlb
movsb
and
mov
sbb
popa
inc
jo
cmp
aad
fst
mov
pop
xchg
mov
movsb
lods
push
or
and
pop
cli
aad
xor
mov
test
loope
int3
mov
add
test
push
ret
ja
add
lahf
or
or
and
ret
lds
movsb
lret
enter
cmpsb
cmp
or
jmp
inc
inc
mov
loopne
arpl
sti
adc
dec
popl
ror
pop
ds
inc
divl
cmp
jne
cmp
and
dec
jb
jno
call
out
stos
jne
add
repz
xlat
sbb
sbb
and
aam
leave
in
pop
push
mov
xchg
sub
mov
or
outsl
pop
jecxz
mov
lds
mov
ss
pop
fs
push
test
call
rcll
push
frstor
loopne
insb
jg
outsb
iret
test
fdiv
test
xor
repz
scas
or
dec
sbb
in
cs
xor
add
je
mov
inc
xchg
lods
inc
push
data16
and
int
mov
push
xor
sbb
lahf
fsubrs
mov
andb
out
mull
das
cmpl
les
mov
aas
daa
pop
test
xor
rcrb
lea
xchg
inc
adc
shld
jl
jae
divb
xchg
mov
ja
push
push
lock
ss
dec
lret
cmp
and
loop
jo
stos
bound
mov
addr16
cmc
popa
sbb
and
mov
xchg
mov
sub
daa
das
lods
jno
inc
paddd
adc
addr16
jg
ds
shrl
inc
xchg
iret
insb
jmp
int3
int3
xor
inc
mov
les
icebp
mov
out
sbb
pop
push
test
jg
lret
or
mov
jo
xchg
scas
and
repz
xchg
push
arpl
xor
fldenv
jg
movsb
inc
fwait
push
add
shr
test
push
mov
adc
nop
pop
bound
dec
pop
xchg
inc
sbb
jae
ret
push
cmpsl
mov
mov
shrl
daa
jp
popw
out
jno
popf
xor
sbb
mov
enter
pop
dec
testl
sbb
pop
sub
pop
test
fsubrs
lret
les
add
dec
bts
leave
and
aad
adc
mov
push
or
int
mov
adc
lds
es
dec
divl
sahf
xchg
fwait
clc
pop
jbe
mov
out
or
xchg
rcr
rol
push
lahf
out
xchg
mov
jbe
push
fs
insl
sub
lods
xor
stos
cwtl
pop
cwtl
mov
sub
movsb
sbb
jae
rcll
mov
and
js
stos
jmp
nop
push
rol
cmp
sbb
std
jmp
push
sbbb
inc
in
stos
aad
mov
mov
fistpll
icebp
inc
push
jb
push
ljmp
mov
idiv
shr
mov
sub
ror
int3
rcll
int
cmp
pop
popa
out
inc
xor
sbb
cli
mov
and
push
mov
xorl
rolb
xchg
push
add
insb
outsb
jge
pop
xchg
daa
fwait
sbb
test
int3
cmp
scas
mulb
push
xchg
cmp
sbb
jo
pop
adc
dec
xchg
fcomp
pop
js
push
inc
xchg
jnp
lods
inc
adc
cli
imul
stos
lods
movsb
lods
push
cld
push
pop
sub
sub
push
cmpl
fistl
mov
sbbl
pop
daa
aad
out
cmp
add
push
cmp
mov
and
sahf
cwtl
cmc
mov
adc
and
mov
jg
xor
cmpsb
ret
add
sahf
sub
aad
sbb
sti
jo
and
mov
sbb
pop
xlat
xchg
leave
mov
inc
jecxz
mov
adc
in
adc
int
fnstcw
inc
fisubrl
sbb
fstps
scas
sbb
test
ja
lcall
das
mov
mov
rcl
dec
xor
cmpsb
in
gs
add
sub
add
dec
sub
js
fldcw
cmp
xchg
scas
movb
bound
cwtl
cmpsb
in
mov
ds
rcr
or
mov
fwait
and
add
lret
push
in
add
mov
cmp
jne
pop
aam
pop
test
in
je
fwait
das
outsb
adc
arpl
mov
rorl
loop
xor
insl
lahf
repz
bound
xchg
push
dec
ret
xchg
or
clc
push
jge
subb
xchg
int
fwait
dec
dec
cmp
or
mov
lahf
and
sub
and
fcompl
xor
jno
xlat
cmp
pop
fcmovb
popa
bound
xchg
sahf
adc
clc
mov
inc
jae
pusha
dec
cmc
loope
mov
inc
mov
mov
cmp
shll
mov
hlt
pushf
sbb
cs
call
mov
and
jmp
out
aam
ljmp
mov
mov
xor
pop
pop
and
cmpsb
sub
pushf
leave
imul
mov
inc
sbbb
gs
out
dec
pop
loop
or
push
xchg
int3
in
jge
jno
sub
push
in
out
push
test
aad
and
imul
popa
cmp
adc
add
add
filds
pusha
lods
mov
out
xor
pop
push
xor
movsb
pop
sarb
and
and
stc
push
sbb
lret
jbe
repz
mov
xorl
and
inc
mov
add
fs
mov
jo
in
popa
ss
lods
inc
mov
mov
cmpsl
faddl
push
mov
pusha
cmp
jb
aaa
inc
in
sarl
rcl
cmp
fsubrp
inc
xor
dec
std
xlat
cwtl
mov
inc
bound
add
push
pop
lock
loopne
cmp
mov
jmp
inc
jecxz
popa
sbb
lods
jne
mov
jle
mov
sub
xchg
mov
adc
leave
sahf
jecxz
rcr
lret
push
or
sti
pushf
movsl
sub
repz
push
pop
push
add
jae
in
and
rcll
mov
mov
lods
sbb
cmp
and
imul
leave
fmul
lock
dec
daa
dec
jne
std
fwait
loope
xchg
out
mov
in
mov
adc
popf
dec
sub
cs
out
mov
xadd
adc
mov
fdivrs
inc
add
popf
push
inc
push
stos
inc
mov
mov
iret
into
and
dec
rolb
mov
cmp
pop
mov
sub
data16
ja
adc
mov
in
push
imull
jle
mov
xor
loope
sub
push
xor
add
out
mov
pop
out
ficomps
fs
pusha
jb
push
jae
in
aas
sub
xchg
sub
das
cmpsb
xor
mov
inc
pop
and
sbb
es
mov
pop
sub
in
dec
cs
dec
add
xchg
loopne
push
jb
pop
add
lods
psllq
or
mov
jb
pop
cmp
inc
out
jp
arpl
sub
xor
dec
nop
scas
mov
js
push
sbb
jns
cmp
roll
cwtl
loopne
popa
test
lret
xchg
aam
lcall
test
bound
nop
arpl
xchg
cmp
push
mov
jp
int3
and
mov
and
insb
xchg
pushf
jp
xchg
je
xchg
sbbl
jl
and
mov
or
sub
jo
push
mov
data16
clc
movsb
popf
jmp
scas
adc
adc
push
ss
dec
cmpsb
rorb
and
in
inc
in
ljmp
icebp
jne
shrl
push
psrlw
cmp
dec
jo
lds
mov
ss
hlt
push
cmp
stc
xor
lds
push
mov
dec
inc
pop
sahf
and
nop
cmp
xor
cmp
cmpl
fstpl
cwtl
mov
mov
dec
ss
and
jbe
adc
icebp
stc
dec
jg
insb
and
mov
cmpsl
cmp
pminub
mov
push
fstl
xchg
xchg
mov
sarb
dec
add
xchg
ss
das
push
bound
sbb
sub
push
out
nop
out
pop
dec
fnstenv
sub
shrb
aas
out
icebp
aas
dec
sub
pop
icebp
movsl
cmp
stos
adc
sarb
adc
cwtl
sbb
orb
dec
dec
fistps
repz
shl
leave
rclb
lds
inc
add
data16
dec
mov
in
pop
pop
shll
or
lock
stos
out
pop
aad
inc
xchg
repnz
jno
jnp
stos
sub
mov
test
scas
push
fwait
lcall
push
or
adc
int3
inc
sub
sbb
data16
leave
xchg
xchg
mov
mov
xor
outsb
inc
mov
cmp
aam
jp
xchg
sub
cmc
cltd
pop
movb
test
loop
out
adc
xchg
add
mov
jbe
test
ja
hlt
pop
xchg
hlt
xchg
outsl
xchg
daa
xor
jno
rolb
test
out
in
xchg
and
leave
inc
enter
cld
dec
inc
xchg
sahf
out
nop
jnp
sbb
mov
add
stc
mov
out
mov
mov
sbb
mov
jle
inc
sbb
ret
mov
mov
adcb
repz
sbb
or
shlb
ret
add
xor
cmp
cmp
aas
pop
add
xchg
dec
jns
out
inc
inc
sbb
jbe
pop
xchg
and
pop
test
sbb
xor
pop
aas
xchg
je
cmp
jns
push
mov
repnz
out
inc
mov
mov
pop
and
add
xor
ljmp
loop
push
jns
inc
popf
ja
iret
cwtl
or
and
shl
hlt
and
cs
sub
cmpsl
shll
aas
pop
xchg
pop
jne
dec
sbb
or
adc
xchg
shrb
clc
add
sub
insl
or
arpl
mov
adc
pusha
adc
or
jle
in
mov
jge
xor
lods
mov
in
adc
add
ljmp
call
mov
push
mov
push
sub
push
pop
pop
fcom
pop
xorb
push
mov
add
out
pop
mov
mov
mov
lahf
pop
mov
enter
add
sbb
out
push
lods
adc
decl
pop
mov
stos
dec
mov
xor
mov
push
xchg
lret
or
add
shlb
xchg
mov
push
inc
daa
ret
and
loop
movb
fwait
push
mov
mov
in
jl
or
jns
insl
ficompl
nop
xchg
mov
push
cmp
add
js
ficoml
pop
scas
lods
cmp
mov
xchg
test
or
fstpt
mov
cmp
xchg
inc
rcr
mov
movsl
push
mov
cmp
jg
mov
xchg
and
cmp
inc
or
arpl
or
mov
orl
add
aaa
shrb
addr16
xor
xchg
or
lods
push
push
sub
mov
out
mov
pusha
mov
bnd
sbb
test
mov
iret
mov
arpl
mov
lret
dec
and
adc
in
mov
push
addr16
add
orb
rclb
pop
pop
and
in
aas
filds
scas
gs
jae
movsl
adc
xchg
xor
or
sbb
lods
adc
xchg
test
sti
daa
aas
adc
xchg
arpl
imul
pop
cs
fsubrl
jno
add
bound
xor
dec
out
aas
and
cld
jnp
dec
mov
clc
pop
fcomps
inc
sbb
cmc
scas
pushf
outsl
xor
jg
sbb
rolb
or
mov
and
mov
cmpsl
stos
cmp
xor
jb
xchg
dec
cmp
adc
test
jo
add
sbb
mov
test
or
add
jp
bnd
or
or
stos
push
jg
scas
sub
lds
aad
add
xchg
dec
xor
imul
cwtl
out
cmp
or
sbb
daa
jns
pop
roll
daa
mov
into
insb
push
dec
xor
xchg
and
test
cmp
or
addr16
cmp
lds
testl
push
mov
cmp
cmp
mov
push
stos
dec
or
test
ljmp
insl
xor
adc
repz
adc
pop
mov
ret
sbb
lcall
popa
pusha
bound
jecxz
sbb
fs
push
or
mov
lods
push
in
mov
ja
mov
daa
lea
aad
mov
push
jb
int
sub
lods
jp
in
xchg
cmp
outsb
test
scas
sub
sbb
push
mov
lock
inc
pop
mov
adc
inc
fisubl
xchg
mov
dec
cmpsl
sub
mov
push
lea
mov
sub
lods
sahf
pop
outsb
roll
push
aas
icebp
jg
adc
lods
and
or
fmuls
and
lret
lcall
sbb
stc
cmc
and
adc
mov
dec
shrb
or
scas
enter
mov
cmp
mov
clc
add
mov
dec
jne
je
pop
mov
ds
das
mov
ja
sub
jle
shr
jo
add
cmp
xchg
sbb
and
jg
cmp
stc
dec
sub
push
dec
imul
mov
jle
add
sbb
fildl
rcll
in
and
insb
cmpsl
jo
inc
mov
imul
xchg
and
mov
inc
insl
in
sub
cs
sub
cmpb
ret
and
scas
cli
in
inc
imul
jbe
arpl
mov
or
fwait
rorb
jp
and
sbb
scas
xchg
cltd
jo
fistpl
fsubr
pushl
leave
or
lock
shlb
jno
hlt
push
add
cmpb
test
jl
inc
loopne
js
add
lahf
mov
popf
mov
dec
dec
fistps
push
adc
orb
adc
mov
fistps
adc
call
pop
sub
lcall
out
jnp
push
mov
clc
fisttpl
cmc
gs
dec
lret
mov
out
int3
mov
ret
cli
sti
scas
add
jl
jo
push
lret
jnp
pop
out
out
and
loop
xchg
ds
adc
cmp
add
into
call
cmp
cmp
inc
add
insb
mov
jge
fdivrl
pop
dec
fnstenv
lock
test
and
jbe
add
jmp
lahf
push
add
sahf
movsl
inc
jp
sbb
inc
call
add
mov
sahf
sbb
movsl
imul
and
sahf
out
dec
mov
imul
cmpb
sbb
stos
adc
xor
pop
inc
loope
inc
dec
xor
rorl
sbb
in
mov
and
fxch
push
or
inc
lea
lock
shr
cli
or
fldl
mov
cmp
cmc
es
pushf
dec
dec
adc
enter
sub
das
or
xchg
pusha
xchg
lods
adc
movsl
cli
mov
mov
xchg
push
inc
pushf
popa
sub
cmpsb
std
dec
std
or
dec
out
test
jbe
jns
jo
xchg
cmp
pop
xlat
rclb
icebp
andb
pop
sbb
aad
pop
mov
jl
xlat
pop
pushf
xlat
mov
inc
fldenv
mov
scas
hlt
xchg
or
push
test
push
add
ficoms
and
cmp
pop
mov
and
mov
lds
dec
sbb
push
fs
fdivr
mov
cltd
xor
xchg
gs
repz
insb
jecxz
aaa
jbe
rorl
push
sbb
pop
pusha
cmp
or
out
or
jne
pop
jno
dec
xor
xchg
xchg
test
adc
insl
clc
dec
add
add
add
mov
out
arpl
fstp
mov
cli
je
and
ljmp
inc
cmp
mov
adc
test
test
push
add
pop
inc
jbe
mov
xor
sub
pop
jno
cmpsb
subl
xchg
xchg
sub
push
push
arpl
cmpsl
dec
mov
dec
imul
cmp
inc
hlt
jnp
dec
inc
pusha
test
lods
add
lods
mov
dec
and
test
mov
movsb
adc
js
inc
add
jb
add
pop
cli
loope
mov
push
gs
scas
ljmp
int
xchg
and
jns
hlt
int
sbb
pop
rorl
out
sbb
sbb
aad
xor
int
outsb
je
cmp
push
inc
lahf
inc
mov
stos
mov
lret
mov
mov
inc
xchg
mov
fisubrl
pop
adcl
aad
and
sbb
xor
arpl
cmpsl
insl
or
das
mov
fwait
je
rorb
jcxz
movsl
mov
pushf
xlat
sbb
adc
push
mov
addr16
push
icebp
sub
sub
xor
sub
inc
lret
adc
and
setns
shll
push
mov
push
mov
out
in
push
inc
and
xor
add
mov
inc
jle
shl
sub
imul
push
xor
jbe
adc
jle
jl
or
movsb
adc
arpl
mov
stos
cmp
dec
cs
loopne
fdivrp
mov
or
add
daa
into
ret
adc
or
mov
loope
dec
push
jae
lcall
loope
inc
sbb
pop
adc
int
xchg
mov
fstpt
xchg
xchg
les
inc
jg
lcall
out
inc
daa
pop
xchg
mov
leave
enter
sti
fnsave
test
pop
sbb
push
mov
add
adc
inc
push
notl
pop
push
pop
insl
mov
jno
out
scas
xchg
icebp
pop
jle
pop
mov
sub
adc
int
ss
fstp
aas
sub
movsb
rorl
cmp
jo
jle
ljmp
pop
push
add
and
imul
xor
fildl
es
sbbl
xor
nop
add
push
xor
push
loopne
mov
cmpsb
insb
sbb
or
pop
sbb
jp
sti
mov
xor
dec
mov
sub
lods
scas
mov
inc
jg
sarb
out
aad
adc
jno
rolb
cmp
imul
sbb
dec
in
sub
mov
cmpb
and
pop
mov
fdivr
fwait
or
pop
inc
jno
push
or
stos
pop
jbe
cmpsb
scas
pop
sbb
test
je
adc
push
bound
cltd
push
jle
jnp
sub
xlat
lret
dec
sub
mov
jecxz
popa
insl
inc
dec
les
and
enter
insb
xchg
stos
sti
movsl
pushf
xlat
popa
data16
rcr
inc
out
mov
cmp
sub
ds
push
fcom
mov
aaa
cmpsb
insb
iret
ret
cmpb
inc
loopne
pop
sbb
pop
sub
push
adc
iret
mov
mov
addb
lds
push
sti
add
lock
push
mov
shll
jo
stc
xchg
aad
sahf
das
xchg
dec
lret
pop
roll
adc
xchg
and
into
dec
pushl
popf
cmp
rep
scas
mov
rolb
push
cmpsl
fildll
mov
mov
sub
xchg
les
pop
sbb
add
push
mov
mov
stos
in
push
sahf
mov
cmc
xor
lock
sbb
jl
cmpsb
outsb
popa
fsubs
or
mov
icebp
pop
insl
pinsrw
add
jmp
cmp
jno
cmp
icebp
sub
call
jg
push
lret
int3
mov
sub
je
mov
xchg
icebp
test
or
pop
pushfw
adc
or
sahf
or
std
je
push
call
adc
mov
imulb
cmpl
xor
idivb
mov
adcb
test
idivb
out
out
addb
out
or
loop
mov
or
xor
pushf
sub
mov
mov
das
sub
fsubl
push
cmpsb
pop
xor
mov
pop
cltd
movsb
sub
mov
std
pop
mov
sbb
adc
cli
mov
lods
ret
in
testb
jns
xor
xor
cmp
jbe
icebp
add
push
mov
pop
push
inc
mov
mov
lock
xchg
ss
je
hlt
ret
or
adc
enter
hlt
mov
mov
pmulhuw
packuswb
dec
out
sub
jae
imul
and
dec
or
push
push
outsl
int3
xor
adc
jg
mov
xchg
add
movsb
fbld
cli
cld
adc
in
push
out
dec
push
push
in
push
enter
sub
ds
mov
rorl
lcall
stos
aad
iret
mov
jge
xchg
setp
insl
push
jns
sbb
dec
or
mov
icebp
mov
push
fstpt
es
xchg
pop
xchg
es
xlat
negb
jnp
pop
jp
inc
sarl
outsb
ret
or
rorl
push
fwait
pop
iret
fcomp
imul
or
jle
xor
inc
jg
push
outsl
fwait
leave
xor
push
movsl
sub
inc
test
cmpsl
idiv
adc
xor
aad
test
sarb
rolb
mov
push
lods
dec
ja
jne
cli
cmpb
or
fcmovnb
addr16
je
pushl
jno
jg
fidivrl
mov
sbb
shr
inc
jge
pop
and
xchg
pop
xchg
fiaddl
push
pop
dec
mov
aaa
adc
inc
out
dec
cmp
adc
in
int
out
jmp
mov
inc
lret
scas
xchg
mov
in
mov
cmp
xchg
dec
dec
and
int
pop
push
fmull
pop
xchg
adc
ds
int
enter
mov
lods
pop
jnp
les
nop
pop
dec
mov
insl
adc
out
sbb
ret
add
pop
out
loopne
fdiv
xchg
stc
pop
dec
subl
nop
cld
pushf
stos
imul
lods
movsl
mov
add
lea
inc
xchg
sub
scas
cmpsl
aaa
dec
xor
hlt
fsubl
les
lods
fnstcw
xor
sbbb
dec
sti
mov
sbb
mov
pop
insl
ret
xchg
mov
popa
sbb
mov
push
mov
fldcw
xor
in
mov
aad
or
dec
push
jb
testb
add
addr16
popa
xor
punpcklbw
scas
ficomps
mov
add
mov
out
mov
ljmp
or
cmpsl
mov
push
loop
dec
cmc
pop
dec
cmpsb
lret
mov
pop
cwtl
nop
test
and
into
incl
sub
push
es
lret
mov
add
icebp
fcmovne
add
push
jl
cmp
cmp
loop
fadds
jp
or
rorb
adc
cmp
push
les
std
push
xchg
add
push
std
mov
push
out
mov
mov
pop
cmp
inc
fidivs
dec
sub
fs
sti
adc
sbb
and
or
sub
inc
ljmp
xchg
lret
mov
mov
mov
adcb
cmpsb
cmp
mov
ljmp
jo
push
xor
repz
xchg
icebp
ds
insl
pop
out
rcll
out
add
std
pop
jbe
sub
div
popa
mov
negl
es
leave
push
cmpsl
fists
xlat
push
loop
xchg
and
cltd
sbb
mov
cltd
inc
sbb
out
popf
pop
mov
js
adc
lahf
xor
js
push
mov
inc
repnz
or
imul
fsts
and
fildll
cmpsb
call
cwtl
and
add
popa
test
cwtl
out
push
imul
xor
lods
jno
mov
inc
addr16
iret
mov
ret
aam
mov
hlt
push
mov
or
sti
inc
jmp
inc
fadds
xchg
les
xchg
mov
fcoml
icebp
aas
es
xor
outsl
scas
inc
fmull
xor
ljmp
scas
cltd
rcrl
add
xor
lods
test
xchg
xchg
push
and
in
xchg
aad
out
mov
mov
pop
pop
mov
pop
pop
mov
jae
pop
add
shrl
shl
pop
shll
jno
mov
call
lret
mov
lret
daa
cld
test
adc
inc
decb
aas
mov
sahf
mov
imulb
sub
mov
mov
cmc
dec
xchg
shlb
xor
decb
lahf
rorl
mov
imul
sub
jge
mov
and
sbb
inc
jmp
and
xchg
mov
sub
lds
dec
mov
dec
mov
xor
popf
xor
in
xor
aas
mov
dec
lea
add
pop
orl
mov
lret
lea
jbe
xchg
mov
int3
adc
outsl
scas
mov
push
sahf
fs
iret
lahf
push
int
cld
cli
xchg
sub
xchg
test
shlb
dec
mov
sti
adc
sti
jns
or
data16
pop
outsl
test
add
fisubl
lea
and
outsb
into
fwait
xchg
inc
xor
xchg
out
insl
pop
loop
and
mov
nop
into
popa
out
lods
lods
mov
mov
cwtl
push
subb
in
adc
in
test
jp
pop
imul
cmp
sbb
xchg
icebp
test
add
and
aam
xor
scas
imul
imul
pop
push
movsb
xchg
or
add
mov
scas
es
mov
nop
or
outsb
mov
jp
push
lcall
xorb
insl
jmp
pop
fdiv
cld
jae
add
stos
pop
das
xor
xchg
xchg
mov
pop
xchg
add
shrl
sti
xor
pop
outsb
adc
cmpsb
cmp
adc
je
in
outsl
cli
jmp
xor
mov
mov
pop
cld
jne
sub
dec
sahf
je
jo
push
xor
inc
xchg
push
repz
xchg
insb
xor
repnz
fs
insb
dec
sahf
cmp
pop
test
and
shl
pop
addr16
cltd
iret
in
pusha
mov
jg
push
cmp
repnz
fwait
mov
xchg
loope
test
pop
sbb
push
mov
cwtl
ret
scas
lret
jp
aam
xor
fwait
out
lahf
cltd
and
fldl
mov
mov
mov
lret
imull
pop
orb
inc
mov
mov
popa
xor
xor
dec
outsb
dec
stos
jb
mov
outsl
mov
mov
xchg
cld
mov
cmp
mov
and
mov
adc
sbb
inc
dec
or
xchg
push
sub
or
popf
je
dec
push
xchg
push
add
cltd
pop
es
daa
nop
and
lret
jne
jle
enter
dec
mov
cmpsb
icebp
mov
mov
fdivrl
or
nop
mov
pop
mov
mov
dec
mov
mov
mov
dec
arpl
sub
push
popa
idivl
mov
inc
jno
leave
pushf
add
rorb
ds
add
repz
fistpll
cltd
lods
test
clc
xchg
dec
out
jle
les
rolb
mov
iret
out
insl
add
imulb
das
rolb
mov
dec
je
fwait
scas
test
fisttpll
inc
or
das
push
mov
mov
sbb
scas
mov
push
loopne
arpl
xchg
jo
mov
or
xor
in
js
fisttpll
das
repz
lcall
adc
dec
push
in
lahf
cmp
mov
insl
cpuid
repz
lret
movsw
add
lahf
mov
mov
cmp
daa
fmull
in
xor
add
inc
xor
or
dec
lea
xor
inc
pop
jp
pop
enter
mov
mov
fdivrl
inc
xor
mov
jae
adc
and
imulb
lret
rcrb
js
int3
out
cs
sbb
jl
xor
insb
lret
in
mov
xor
mov
mov
or
arpl
xchg
lods
mov
fstps
out
es
mov
dec
jecxz
and
mov
xor
test
xchg
aam
dec
ss
sub
fildl
leave
dec
mov
adc
icebp
ja
cmp
rclb
and
cmp
pusha
fbld
sub
shlb
xchg
les
jno
or
cmp
add
rcll
lock
sbb
fists
add
cmpsl
aad
sub
mov
cmp
xor
xchg
xor
sbb
add
xlat
pop
stc
ljmp
inc
pop
pop
cltd
fwait
nop
pusha
or
int3
mov
and
outsb
test
and
stos
jnp
xchg
outsl
mov
and
pop
sub
cwtl
dec
pop
idiv
push
shlb
sar
fwait
pop
lahf
popa
jno
sahf
jne
lea
sbb
ja
mov
aam
cmp
test
jnp
xor
aaa
dec
cmpsb
mov
negb
cmp
fnstenv
dec
cmp
dec
jno
sub
dec
test
loopne
pop
stos
test
push
je
mov
or
pop
push
ljmp
dec
mov
pop
mov
arpl
mov
imul
cmp
cmpsb
loop
addl
jae
loope
les
and
xor
data16
das
and
adc
xchg
sub
in
nop
and
test
dec
leave
movsl
jecxz
and
inc
jb
adc
sbb
in
rorl
mov
mov
xchg
das
stos
sbb
lds
idiv
rolb
lds
loopne
insb
jg
sub
pop
lods
jbe
out
test
mov
insb
sbb
or
pushf
cmp
jne
mov
movsl
push
cmp
repnz
push
xor
jge
sbbb
xchg
mov
sarl
bound
mov
or
push
sahf
test
and
cmp
add
and
imul
cmp
in
sti
sub
xchg
sbb
addr16
lea
ljmp
jbe
jb
into
pusha
mov
imul
out
pop
jns
fmuls
push
mov
push
pop
ds
int3
sub
enter
lahf
dec
loopne
outsl
out
dec
cltd
out
addr16
sub
inc
aam
cmpsb
imul
xor
lock
movsb
insb
lds
adc
out
mov
inc
js
dec
or
sbb
xlat
mov
int
cmp
dec
mov
fistpl
mov
popf
enter
mov
xchg
sub
xor
movsb
cmp
pop
aam
sub
or
daa
movsb
adc
inc
daa
or
xor
and
fwait
mov
movsb
aad
sbb
imull
ss
and
ret
js
jl
in
push
das
mov
add
ja
scas
int3
jg
ja
stc
jle
or
rolb
sahf
xchg
mov
xchg
mov
and
bnd
lret
push
cmpsl
ret
cs
push
notl
ljmp
sub
fiadds
pushf
test
popf
rclb
push
mov
fnstenv
sub
cmp
inc
movsb
push
pop
out
and
insb
jle
fldenv
out
adc
jns
cli
sub
orb
pop
cmp
sub
insl
aam
lcall
lods
xchg
repnz
out
int
movsb
and
mov
stc
mov
addr16
pop
add
mov
ss
push
into
sbb
inc
int
mov
aas
addr16
inc
mov
je
add
dec
subl
in
jmp
movsl
sbb
das
cli
mov
mov
cmpsb
cmp
cs
add
out
pop
ds
inc
out
fcomp
push
jl
in
cmp
or
mov
push
arpl
push
sbb
inc
xor
fisubrl
push
push
int3
jno
scas
or
jge
insl
inc
jne
push
sbb
pop
lods
cltd
xchg
fstpl
addr16
data16
ficomps
mov
cltd
scas
pop
outsl
adc
push
adc
jbe
cmp
call
aam
or
aam
mov
andl
stos
push
popa
xor
imulb
push
out
popa
fs
stos
lcall
mov
mov
movsl
xor
stos
rcrb
lret
xlat
dec
cmp
or
dec
and
ja
or
mov
xchg
push
xchg
pop
lahf
dec
sbb
mov
into
mov
inc
std
jp
fimuls
or
inc
sub
dec
fmull
cmp
ljmp
in
push
or
aad
nop
not
mov
in
nop
adc
mov
subb
lcall
ret
sbb
bound
js
insl
sbb
lret
sub
repnz
testb
push
clc
repz
jecxz
outsl
jne
xchg
int
movb
rolb
push
jae
movsl
cwtl
mov
or
push
jge
outsl
rol
mov
lds
imul
add
dec
xor
or
sbb
stos
in
mov
shlb
aas
xchg
sub
cmp
lods
clts
xor
faddl
stos
ret
outsb
and
sbb
js
mov
dec
xchg
jo
vrsqrtps
xchg
fsubl
sub
cmc
or
lods
dec
rcrl
into
repnz
jle
push
sbb
add
fs
add
or
pop
nop
or
or
dec
dec
add
pop
mov
cs
jo
pop
mov
mov
out
test
dec
stc
sahf
xor
daa
dec
das
data16
jp
pop
mov
mov
fs
add
push
and
test
data16
popf
fistpll
push
mov
roll
jmp
out
mov
enter
mov
cmp
mov
insb
hlt
or
int
push
je
mov
lds
or
mov
clc
inc
fldt
repz
mov
bound
cmp
inc
ret
aad
xchg
push
mov
dec
xor
dec
mov
push
add
xchg
sahf
sti
test
sub
jp
add
adc
popf
aaa
mov
pop
cmp
xor
ficompl
movsb
leave
pop
es
pop
ja
add
insl
popa
adc
push
lret
decl
mov
mov
add
and
jnp
xor
icebp
stos
daa
or
jne
adc
into
add
pop
pop
and
lods
cli
lret
lods
jno
sti
mov
orl
mov
adc
add
insb
jbe
mov
std
jne
mov
ljmp
push
cmp
or
mov
cltd
nop
mov
es
jge
mov
mov
push
cmp
fldl
push
xor
fs
inc
out
adc
jae
and
ret
adc
into
jp
jae
lcall
movsb
andl
add
stos
cmpsb
sbb
push
cmp
jp
or
test
xchg
add
push
sub
mov
shlb
out
mov
jl
fdivp
cmp
adc
and
dec
ljmp
call
jae
cltd
jmp
sahf
fwait
add
idivl
mov
ret
loopne
sbb
dec
fdivrp
mov
setnp
enter
lock
sar
adc
cmpsl
cmp
pop
fistpll
cli
add
nop
or
xor
mov
cmp
xor
ret
and
xor
sbb
mov
stos
pop
ret
inc
or
dec
push
mov
jae
add
jmp
inc
aaa
jne
ficoml
mov
lret
push
fildl
fadd
mov
ficomps
cmp
sbbl
aad
dec
and
call
stc
inc
mov
js
xor
aad
and
clc
cmc
nop
out
jb
les
repnz
jbe
cmp
xor
rcl
movsl
mov
outsl
inc
cmp
outsb
jmp
icebp
sbb
push
mov
int
pop
popf
adc
test
roll
mov
test
sbb
arpl
or
jp
or
inc
inc
aam
mov
cmpb
xor
push
mov
push
mov
in
loopne
xlat
out
aaa
jl
xchg
jmp
stos
mov
jmp
push
mov
sub
jl
out
sub
dec
jmp
mov
inc
xchg
jle
popf
stos
push
sahf
bound
pop
mov
xor
xor
addr16
pop
repnz
scas
xchg
roll
adc
mov
dec
push
in
pop
push
cmp
aaa
xchg
daa
xchg
aad
fiaddl
pop
mov
sbb
xor
or
mov
dec
sub
cmp
scas
xor
ljmp
xchg
cmpsb
lea
in
pop
inc
icebp
ljmp
inc
int3
fsts
xchg
rol
sbbb
ret
push
cmp
xchg
jae
lods
scas
ds
xor
xchg
inc
movsl
lds
in
ss
or
mov
rcr
bound
jbe
pusha
mov
mov
sbb
sarl
push
lcall
and
unpckhps
fs
cmp
movsl
and
mov
rorb
jne
push
fwait
cltd
mov
adc
push
rolb
lret
lods
hlt
imul
fstps
popa
lahf
sbb
dec
push
add
mov
pop
fimull
mov
jae
add
mov
jbe
iret
lock
push
lea
in
jbe
add
xor
cmpsb
add
jns
rclb
mov
xor
leave
and
ds
jo
sub
imul
out
sub
out
cmp
cmpsl
mov
nop
lods
lcall
cmpsl
clc
pop
xor
movsb
inc
mov
popa
ja
ljmp
enter
push
dec
jne
sbb
mov
jecxz
or
lock
sahf
mov
pop
les
loopne
xor
mov
int3
cld
std
test
mov
sahf
mov
loop
sub
rcl
in
fs
in
add
cmp
insl
shl
adc
add
mov
fisubs
adc
shll
mov
lods
mov
mov
sbb
fldenv
lahf
in
fimuls
xchg
pushf
xor
mov
sub
mov
and
ret
les
add
je
xchg
scas
push
and
jae
xor
mov
mov
pop
mov
lds
adc
cmp
jmp
adc
fbstp
sbb
jno
in
jns
icebp
jno
outsl
popf
lahf
xorl
popf
test
aaa
sub
push
mov
push
push
sbb
mov
sbb
dec
mov
jl
inc
pusha
mov
popf
inc
js
imul
icebp
shlb
scas
shr
push
xchg
dec
inc
outsl
or
or
shrb
lcall
aas
mov
xchg
push
jp
cmpsl
mov
mov
sbb
sbb
push
adc
pop
jno
in
lock
dec
out
jecxz
in
insb
in
mov
sbb
in
iret
ret
mov
jb
stc
cmpsb
in
push
jg
mov
sbb
int3
je
jae
data16
stc
sahf
pop
stos
sbb
xor
cmp
sahf
in
xchg
fnstsw
or
cmp
iret
inc
push
scas
rolb
scas
fmuls
mov
xchg
jns
std
into
xchg
and
push
xor
clc
pop
in
pusha
es
xor
ja
pop
pop
enter
jae
ds
fadd
inc
test
bound
or
jne
lea
mov
or
jle
in
arpl
jmp
sbb
push
test
sahf
or
push
mov
push
jmp
scas
fcomps
xchg
xchg
xor
std
add
addr16
js
lods
nop
in
loope
push
push
fadds
clc
mov
cmp
inc
jb
and
sbb
xchg
xchg
push
xor
je
mov
sub
loopne
xchg
dec
mov
leave
daa
popf
push
sub
pop
xchg
lret
in
nop
push
mov
imul
mov
add
sbb
push
push
leave
inc
lea
gs
add
in
jp
js
es
pop
movsl
cmp
and
pop
out
pop
loop,pn
das
test
fdivrs
out
fcmovnb
add
sbb
pop
insl
or
call
xor
xor
add
cmp
out
out
mull
popl
push
bound
dec
pop
mov
adc
pop
pop
and
xor
xor
jg
jge
repnz
mov
repnz
sbb
dec
frstor
cltd
jbe
rolb
fiaddl
mov
je
cmp
cmp
sub
aad
mov
inc
das
inc
add
inc
outsb
push
fisubl
pop
scas
call
xorl
push
push
out
into
jle
flds
push
nop
es
stos
and
scas
push
mov
xchg
stos
jbe
dec
lret
lods
or
inc
out
cmpsb
mov
rcrl
inc
js
dec
sar
mov
into
add
or
int3
mov
stos
mov
ds
das
test
imull
push
mov
out
inc
pop
add
sub
push
adc
pop
mov
lods
dec
lods
sub
add
adc
cmc
lds
pop
imul
push
mov
cld
andb
cmp
stos
negb
pop
int
lock
clc
push
add
jmp
push
sbb
lcall
cmp
aam
cmp
push
clc
daa
lods
aaa
inc
in
imul
rcrl
mov
scas
mov
dec
aad
cmpsl
mov
je
imul
jae
in
sti
xchg
xor
push
jp
jae
bound
dec
ss
xlat
sub
icebp
push
pop
fisubrl
ds
iret
xor
xchg
add
aaa
cs
js
imul
into
pop
pop
xor
mov
pop
push
cmp
or
jecxz
into
and
push
out
mov
dec
lret
pop
push
add
and
sbb
pop
cs
mov
push
dec
xor
sbb
enter
push
or
adc
mov
mov
inc
nop
mov
dec
jo
mov
jne
filds
sbb
ja
roll
pop
pop
cli
and
ja
sarl
cmp
roll
test
dec
mov
push
mov
test
shll
mov
mov
gs
ret
dec
jae
jmp
sbbb
dec
xor
xchg
or
add
xchg
xor
jnp
iret
jle
add
jg
push
mov
imul
mov
fidivs
pop
push
cmp
mov
pop
ljmp
inc
dec
or
lahf
pop
jmp
cmpsl
xor
rcrb
pusha
dec
loope
xchg
sub
fcmovb
mov
addr16
sbb
xor
adc
inc
add
fisttps
jl
mov
pusha
adc
in
filds
mov
aas
testl
ret
inc
mov
pop
adc
lea
dec
mov
push
lahf
cwtl
jnp
and
xchg
fwait
movsl
add
dec
imul
or
and
push
push
loop
xor
mov
pop
inc
or
and
dec
fidivrs
cmp
repz
mov
mov
rclb
icebp
sbb
jnp
cmc
in
pop
jnp
pop
sbb
lea
push
push
pop
cs
outsl
inc
pusha
insl
fstpl
imul
sti
dec
inc
bound
and
jmp
fsubr
outsb
hlt
jmp
movsl
daa
cmp
cmpsl
lret
jge
cmpsl
and
jg
or
daa
adc
out
and
inc
mov
adc
xchg
shlb
sub
jecxz
or
inc
enter
inc
mov
inc
mov
adc
mov
rcll
push
jmp
sub
xor
das
aaa
or
xchg
aam
pop
mov
jae
es
clc
inc
and
mov
cwtl
ret
loope
ss
xlat
lahf
rorl
in
push
adc
jmp
insl
repnz
aam
inc
xchg
addb
push
cwtl
lea
push
mov
push
and
mov
adc
ljmp
adc
xlat
or
jl
and
lahf
es
mov
int
sub
fprem
sbb
inc
sti
data16
addr16
jge
shlb
lods
test
inc
stos
in
add
cld
cmp
aaa
xchg
lret
and
clc
ljmp
ljmp
mov
sbb
inc
or
lcall
enter
xlat
ror
mov
jg
sbb
inc
sti
or
adc
scas
or
addb
mov
xchg
xor
scas
pop
pop
jnp
sbb
cltd
push
and
adc
xchg
mov
add
xchg
lcall
or
jle
sub
push
sbb
cltd
lret
add
xchg
inc
pop
jl
sbb
addr16
sbb
jge
pop
sbb
stos
dec
push
daa
insl
cmp
clc
jge
nop
adc
add
sub
ljmp
add
xchg
gs
shll
ficomps
and
dec
adc
jle
mov
mov
dec
incl
cltd
pop
sbb
jns
cmp
lock
mov
sti
mov
ja
dec
adc
sub
mov
jbe
xchg
lods
sub
or
std
mov
loop
lods
jo
cmp
sbb
ss
out
sub
fwait
insl
shlb
mov
or
mov
shll
jge
cmpsl
cmpb
mov
xor
aas
lcall
icebp
jecxz
xchg
stc
mov
xchg
mov
adc
xchg
ss
fistps
lcall
cwtl
into
push
mov
mov
cld
fistpl
aaa
bnd
icebp
or
jl
or
cltd
enter
cmp
int3
mov
cmpl
inc
ret
xchg
loopne
sbb
stos
ficoml
xchg
out
lds
cmpb
in
add
ja
repnz
xor
fcomps
jg
mov
rcll
scas
rolb
loop
jne
sub
fsts
add
ss
sbb
add
push
out
mov
push
pusha
inc
test
mov
sub
sub
or
cmp
ds
scas
fcompl
dec
jge
push
push
mov
sub
and
sbb
std
flds
xchg
xor
jecxz
xor
xor
fdivrs
mov
lret
pushl
sbbl
mov
mov
xor
arpl
shl
loop
dec
pop
rorb
rorl
dec
jbe
jle,pn
sbb
lea
push
clc
ret
push
push
mov
popa
mov
xor
push
les
ljmp
cmp
stos
xchg
jo
pop
enter
inc
test
jne
or
pop
cmpsl
negb
loop
xchg
popf
pop
or
jne
call
or
xchg
inc
out
mov
das
fcoms
lret
pop
push
mov
scas
icebp
leave
out
xchg
xor
or
int3
dec
pcmpgtw
add
stos
mov
iret
cltd
mov
loopne
ret
stos
incl
cmpsb
in
lahf
into
add
iret
out
popa
mov
lret
and
setge
movups
inc
mov
inc
fcom
dec
sbb
lcall
push
dec
pop
jge
hlt
xchg
out
test
daa
gs
mov
rclb
add
outsl
jmp
mov
test
insl
jmp
cmp
scas
aam
sarl
enter
pushf
push
int3
and
je
mov
movsl
pop
nop
mov
jno
negl
push
stc
or
inc
dec
aaa
rclb
push
adc
inc
in
stc
outsl
lea
mov
and
imul
pop
ret
xchg
test
push
sbb
xlat
stc
and
jbe
mov
mov
repz
das
sbb
divb
push
pop
xchg
mov
adc
jl
hlt
sub
or
xor
push
sahf
inc
sub
in
jb
jg,pt
add
aam
ds
add
xor
xchg
push
lea
mov
rclb
push
jno
pop
push
xchg
push
jl
jno
fidivrl
mov
out
jae
jne
imul
mov
xchg
in
daa
push
loop
das
mov
mov
mov
cmpsl
enter
adc
and
lea
sub
cmp
sub
adc
and
movsl
xor
insb
lea
ds
mov
jg
icebp
sub
adc
add
fiaddl
data16
cs
cmp
dec
aas
out
push
bound
xchg
push
cmp
pop
sbb
sbb
lods
adc
pop
out
xchg
xor
sub
and
pop
mov
jecxz
xor
mov
push
push
scas
pop
and
mov
pop
cwtl
sbb
ss
jp
arpl
aaa
ljmp
xlat
popf
in
and
sbb
sti
fnstenv
out
xor
push
nop
insb
es
fld
or
fwait
cld
into
popa
or
push
loop
scas
cmp
aad
inc
sti
inc
push
sub
movsl
inc
sub
pop
jle
mov
adc
aaa
cmp
xchg
jge
push
scas
mov
cmp
and
nop
cmp
fs
lock
int3
push
testb
and
dec
mov
xor
lea
in
out
jg
fildl
pop
ljmp
mov
adc
fldln2
ljmp
pop
mov
in
push
ret
mov
scas
cltd
mov
xchg
call
cmp
jecxz
jb
xlat
xor
cmp
or
ffree
fcmovb
bound
mov
stc
fisubrl
mov
adc
inc
cmp
aas
jno
or
mov
iret
insl
mov
push
xchg
add
xchg
shrl
xor
inc
or
mov
inc
push
push
imul
mov
popf
push
sahf
xchg
aas
ficoml
ret
jp
pop
or
test
les
and
pop
lea
ficompl
push
jae
aam
adc
xchg
xor
addb
add
push
xor
stos
adc
cs
outsb
lock
jbe
mov
pusha
gs
bound
mov
test
pop
loopne
lods
frstor
shrb
and
outsb
pop
push
jno
lods
aaa
xchg
cld
pusha
stc
clc
dec
clc
fcomps
adc
xchg
mov
mov
push
test
xor
jbe
imul
fisttps
addb
mov
stc
insb
into
add
ficompl
mov
int
aam
aad
xchg
mov
sbb
push
scas
psubd
adc
andl
xor
fsubrl
leave
inc
or
nop
lods
cli
adc
mov
adc
sbb
lds
mov
fiaddl
xor
mov
xor
fdivl
cmp
pmaxsw
cmpsl
sbb
or
cmpsb
sar
cmp
icebp
jg
lods
jbe
jle
mov
sbb
dec
ds
or
mov
sbb
sub
fwait
cs
dec
shr
cmp
cld
jnp
lods
hlt
in
xchg
and
leave
sub
xorl
sub
pop
sub
push
repz
xchg
iret
loop
xchg
mov
jno
notb
sub
push
pop
stos
mov
sahf
sbb
sbb
rcl
outsl
jbe
adc
cmp
jae
jns
mov
ret
cs
fxch
sub
fiaddl
divb
mov
out
call
add
out
enter
inc
clc
push
push
push
scas
dec
mov
out
push
xorl
scas
je
not
int3
je
subb
mov
movsl
ljmp
rcrb
cmp
sub
xchg
ret
out
ss
cmp
sbb
or
out
and
icebp
push
ds
ds
mov
dec
cld
adc
out
mov
sbb
cmp
push
sbb
sbb
xchg
addr16
lret
sbb
daa
les
xor
lods
pop
xchg
jle
push
or
and
sti
mov
push
adc
ret
mov
pop
adc
mov
xchg
jle
out
lret
inc
es
cmpsb
out
test
cmp
inc
jae
mov
adc
fs
sbb
mov
aam
xchg
xor
es
loope
lea
adc
jo
jmp
and
in
push
loope
jecxz
out
mov
sbb
xor
jae
sub
xchg
pop
sbb
dec
sub
aaa
cmp
xorb
jb,pn
cmp
mov
mov
jle
xor
ficoms
out
add
pop
test
lcall
aas
dec
into
add
fucomi
and
je
out
loopne
sbb
out
dec
in
cmc
xor
or
add
leave
push
ret
repz
icebp
fstpt
cmpsb
loope
insb
cwtl
pop
xchg
sub
js
shlb
outsl
gs
cmp
test
movsb
cmc
loop
pop
mov
sbb
mov
mov
cli
cmpsb
das
hlt
jecxz
sbb
pop
movsl
mov
cmp
call
push
inc
dec
enter
in
mov
sub
add
repnz
mov
cmp
add
cwtl
or
int3
dec
xchg
call
fmul
sub
mov
scas
xor
lret
leave
sbbb
push
lea
mov
outsb
mov
xor
inc
notb
cmp
dec
push
sbb
xor
jnp
mov
push
mov
xchg
mov
pop
mov
sbb
cmp
or
repnz
ret
sub
jno
and
or
cmp
jl
lret
cmc
aaa
and
outsb
fxam
dec
lret
test
xchg
or
push
mov
mov
and
or
pop
or
dec
ficomps
ljmp
push
xchg
xor
imul
fs
scas
sub
add
ret
lret
jecxz
arpl
repnz
push
data16
mov
adc
sbb
leave
push
lods
adcb
cwtl
inc
fildll
dec
fsubs
jge
pop
pusha
movsb
clc
roll
test
xchg
dec
test
sbb
fcoms
mov
popa
jecxz
div
mov
pop
lods
stc
ja
dec
sub
pop
xor
pop
sbb
loope
ficoml
fwait
mov
lret
dec
pusha
cltd
mov
shrl
add
pop
or
loop
sbb
pop
pop
negb
push
adc
xchg
sbb
jnp
in
sahf
sahf
sbb
call
jl
loope
xchg
mov
orl
cwtl
sbb
ret
stos
repz
into
fisttpll
sbb
mov
ror
iret
xor
outsl
imul
push
ljmp
mov
mov
sub
adcl
mov
sub
push
imul
mov
shr
fwait
jb
sbb
mov
fidivrl
insb
xor
sbb
cmp
mov
mov
mov
cli
gs
lods
mov
ja
aam
sahf
shll
bound
subb
lds
xor
das
hlt
xchg
es
xlat
popf
sub
inc
and
cwtl
push
inc
jl
je
add
rcrb
cs
jns
xchg
std
pop
jg
mov
in
das
push
pop
stc
int3
lret
ss
jg
adc
test
mov
lret
adc
out
testb
jae
sbb
adc
sahf
jno
shl
leave
popa
cltd
inc
adc
mov
ret
cmc
cmp
dec
in
pop
sbb
sbb
cmpsl
pop
fmull
std
xor
sbb
aad
pop
sub
and
enter
mov
jne
push
aaa
loopne
sub
addr16
xor
xor
mov
add
xchg
cmp
adc
dec
stos
xor
mul
outsl
mov
sbb
lret
lahf
jo
sbb
js
ljmp
mov
ds
ss
xor
inc
or
or
adc
sbb
sahf
xchg
movsb
xchg
sbb
push
popa
adcl
add
adcb
push
aaa
das
in
shll
sub
push
add
out
bound
aad
in
and
mov
push
adc
es
int3
and
sbb
movsb
mov
aad
adc
jg
push
dec
dec
lahf
dec
push
mov
push
popf
les
dec
or
fstpl
rcrl
jne
xlat
repz
test
stos
dec
and
adc
add
clc
fisttpl
cli
pop
pop
or
jg
in
jg
lock
mov
jnp
out
mov
mov
insb
std
push
ljmp
jno
jno
int
jns
and
push
push
mov
push
and
adc
adc
mov
xchg
cmp
xor
scas
into
and
adc
enter
jno
mov
hlt
lahf
mov
popf
mov
inc
push
sub
jb
or
rorb
mov
addr16
fmuls
add
scas
dec
or
es
cs
or
lods
jge
lds
mov
mov
jl
pushf
xchg
and
loopne
movsb
movsl
mov
out
adc
aad
mov
xchg
pusha
jmp
sub
pop
addb
dec
iret
jns
js
jge
es
push
pop
push
xor
cmpsl
mov
xchg
xor
mov
dec
orl
sbb
pop
xor
loop
in
cwtl
das
mov
ret
pop
cmp
dec
icebp
jo
enter
ficomps
push
jne
imul
pop
out
and
es
fbstp
push
mov
outsl
cmp
lods
xchg
dec
cmp
mov
out
push
mov
mov
popa
fmulp
add
addr16
xchg
push
sub
pop
mov
pop
mov
jne
mov
push
call
sbb
negb
je
jb
dec
je
arpl
sub
dec
shrl
fisttpl
xchg
jmp
es
dec
pop
mov
stos
sbb
cwtl
aas
mov
mov
pop
push
sub
cmp
std
std
inc
push
incb
pop
fbstp
aaa
sub
into
insl
sub
pop
push
enter
popa
stc
iret
dec
mov
mov
sbbl
fistl
sub
daa
lds
jnp
out
fisttpl
stos
dec
mov
push
sbb
inc
or
and
mov
mov
int3
sbbl
mov
sahf
mov
test
add
mov
mov
ja
mov
cmp
repnz
or
mov
scas
and
sbb
call
test
dec
repz
dec
mov
push
mov
inc
adc
xor
or
pop
dec
mov
mov
cmpsb
lods
dec
les
insl
stc
test
jnp
cmp
xchg
push
fiaddl
in
clc
jno
pop
lock
dec
pop
xchg
inc
and
je
dec
repz
dec
mov
adc
jle
orb
lret
in
roll
push
ja
or
imul
mov
iret
or
mov
test
loope
sub
dec
jmp
or
mov
bound
push
shr
lcall
push
cmp
sbb
push
cwtl
movsl
xor
clc
inc
nop
ret
inc
or
push
popf
cmpsb
mov
stc
ret
imul
jns
mov
adc
cmp
xchg
clc
mov
mov
and
popf
add
ret
sbb
pusha
lret
jmp
ljmp
push
pop
movsl
dec
ds
xor
mov
iret
fldl
subb
adc
xor
jge
push
pop
in
fwait
aam
mov
enter
adc
mov
add
dec
clc
inc
xor
dec
cmpsl
cmpsb
dec
and
or
xor
rorb
fstpt
leave
xchg
cwtl
test
mov
xchg
or
stos
nop
test
fs
mov
and
arpl
loope
cmpsb
mov
pop
pop
shrb
call
adc
pushf
popa
cld
cltd
sbb
leave
es
mov
sahf
iret
popa
and
and
and
neg
sti
mov
shr
leave
xchg
adc
xlat
ss
sbb
jb
ret
mov
jo
stc
jmp
pop
sub
push
loope
pop
jg
push
xchg
cmp
fiaddl
xchg
xchg
xlat
mulb
ds
roll
test
inc
dec
pop
inc
jbe
insl
lret
call
aas
rcl
mov
jae
push
mov
rcll
icebp
fwait
jecxz
add
pop
lahf
xchg
icebp
mov
xchg
adcl
insl
mov
push
add
push
push
call
push
pop
sbb
shl
lods
sbb
ror
and
mov
outsb
xchg
cmp
aas
pop
lods
call
mov
dec
and
jle
xor
and
push
jo
or
sub
imul
lret
cmpsl
ja
mov
pop
mov
and
pop
xchg
mov
sub
xor
in
icebp
cld
imull
jg
int3
mov
mov
test
cltd
mov
xchg
jle
adc
pop
push
xchg
call
mov
mov
jns
cmpsb
mov
sti
adc
xchg
cmc
popa
fidivs
sarl
push
cld
pop
push
dec
test
inc
add
or
cmp
scas
fstps
and
adc
out
pusha
and
jns
stc
js
cmp
mov
sub
cmp
je
ficomps
xor
ret
test
rcl
xor
movsb
mov
cld
jmp
mov
gs
cli
sbb
shufps
dec
pop
out
fwait
int3
mov
adc
sub
out
ret
or
stos
pop
scas
dec
and
clc
xchg
ja
jae
sub
inc
fcompl
mov
arpl
rcr
pop
aas
loop
add
xor
pushf
sub
push
shrb
mov
push
pop
test
mov
mov
jp
xor
jno
inc
mov
push
mov
sub
push
dec
adc
cltd
shrl
int
aaa
xchg
lsl
push
rol
arpl
roll
xchg
stc
cmp
inc
pusha
cmp
adc
sbb
inc
flds
push
xchg
xor
sbb
jns
aam
add
ret
adc
in
jae
xchg
lea
cmpb
imul
mov
adc
sbb
inc
shrl
lea
or
test
test
push
cmp
or
mov
das
imul
testb
faddl
arpl
cmp
imul
scas
test
insl
push
xchg
sbb
outsl
outsl
stos
imul
pop
bound
cmp
fcmovu
les
out
adc
cwtl
jge
cmp
mov
imul
cmp
pop
out
xor
out
fildl
mulb
cmp
mov
sahf
mov
addr16
dec
or
jmp
adc
sub
testb
jp
jle
push
sub
ds
and
leave
ds
movsl
adc
iret
mov
jbe
jns
out
xor
push
mov
test
lcall
add
inc
cwtl
cltd
xchg
add
xor
sbb
and
dec
push
xchg
mov
pushf
inc
test
sub
fcmovne
enter
push
mov
cmp
cmp
sar
ljmp
ret
call
mov
cs
daa
or
or
mov
cltd
and
pusha
add
push
ljmp
lahf
mov
popa
lret
pop
scas
mov
lret
pop
inc
mov
inc
fcmovnb
or
stos
mov
test
sbb
data16
popf
cwtl
xchg
cmpsb
fwait
pushf
and
jnp
scas
inc
out
adc
out
or
in
subb
push
mov
cli
xchg
andl
shrb
test
imul
push
pop
movsb
insb
test
jle
sbb
pop
test
loop
jno
insl
sbb
imul
jl
sti
add
test
leave
pop
mov
in
or
ja
jle
enter
push
dec
ret
jmp
stos
pop
push
xchg
push
or
out
jno
xchg
shrb
push
push
inc
and
jge
xor
push
and
outsl
paddq
fidivrs
mov
adc
loop
pop
ret
jo
xchg
dec
jbe
xor
xor
dec
jecxz
loop
fdivs
jbe
jne
out
std
xchg
lods
jecxz
mov
and
dec
movzbl
mov
sahf
adc
sbb
addl
add
xor
or
aas
cmp
scas
mov
lea
mov
mov
cwtl
xor
or
js
mov
call
inc
add
sub
fcomi
push
jnp
scas
adc
hlt
sbb
dec
jbe
and
idivl
mov
xor
xor
imul
mov
aas
rcl
xchg
imul
push
jns
pop
and
xchg
js
adc
and
mov
mov
out
or
stc
call
movsb
dec
fsubrs
inc
roll
pop
sbb
sbb
shlb
shrb
adc
insb
xchg
repnz
test
lods
mov
pop
test
outsb
notl
insb
into
into
test
int
xor
jp
lret
pop
in
dec
cs
jnp
lahf
dec
mov
cmp
push
dec
xchg
js
rcrl
mov
xchg
out
cmpsl
les
out
inc
je
adc
cmc
or
cmp
pop
imul
sbb
mov
vpmovzxbq
ss
ds
dec
leave
mov
outsb
pusha
sub
sti
insl
mov
inc
ja
jne
imul
je
scas
cmp
mov
pushf
mov
ljmp
jmp
inc
xchg
dec
lock
clc
cmp
lcall
clc
fdivrs
jno
cmp
leave
test
mov
ret
pop
jmp
mulb
testl
xor
sahf
mov
xchg
ret
jmp
data16
sub
mov
inc
in
outsb
dec
ret
mov
dec
and
fnstcw
push
testb
inc
push
cmc
aaa
aam
imul
push
loop
inc
adc
cmp
inc
shll
xor
into
les
pop
ss
mov
pop
pushf
push
test
mov
mov
lret
repz
fdiv
push
xor
mov
or
mov
in
cwtl
xchg
xor
or
aas
mov
arpl
push
xchg
das
mov
xchg
push
adc
enter
mov
faddp
fmull
arpl
int
outsl
mov
insl
stos
lods
cmp
cmpb
dec
stc
out
nop
fcmovnbe
popa
lcall
jg
enter
push
dec
fs
bound
xor
cld
inc
pop
fistl
inc
mov
sbb
mov
pop
stos
into
fs
inc
cmp
icebp
inc
jg
pop
cmc
xchg
mov
cwtl
mov
cmp
in
ret
mov
inc
inc
xchg
insl
mov
cmpsl
adc
dec
jle
adc
mov
mov
test
sub
xlat
inc
inc
data16
push
addr16
loopne,pt
mov
add
cmc
pop
in
dec
aam
loop
jb
sti
or
js
jbe
mov
add
push
pop
arpl
pop
mov
scas
sbb
mov
fwait
push
aaa
leavew
sub
lret
enter
fisubl
std
pop
cmpl
int3
sub
xchg
add
call
and
lret
inc
popf
fsubl
cmp
insl
sbb
imul
clc
loop
fwait
sbb
repz
cmpsb
sub
pop
mov
rorb
aam
inc
mov
or
cltd
sbb
clc
test
adc
xchg
dec
hlt
push
out
push
xchg
pusha
pop
dec
cmp
sub
and
mov
dec
fsubrs
pop
imul
push
punpcklbw
mov
outsb
sub
mov
mulb
enter
xor
in
sub
dec
push
adc
outsl
sub
stos
xchg
ja
notw
daa
xchg
fiadds
fwait
jbe
lret
insl
dec
cltd
inc
loop
xor
je
test
and
fnstenv
gs
push
push
gs
loopne
movb
and
test
call
fdivrp
pop
xor
mov
and
mov
pop
popf
inc
aas
andl
ja
and
xchg
sbb
scas
add
mov
stos
stos
mov
test
imul
ret
pushf
sbb
addr16
stc
cmp
outsb
push
pop
cmpsl
lret
mov
or
pop
pop
jnp
inc
mov
aaa
push
lock
fwait
test
pop
sbb
mov
in
gs
sbb
lds
subb
scas
push
imul
cmp
cs
popf
jl
dec
jne
aaa
ret
adc
fisubrl
inc
push
repz
push
adc
popa
pusha
out
inc
popf
mov
imul
and
out
mov
into
jno
mov
push
mov
mov
dec
arpl
adc
cmp
roll
aam
pop
mov
dec
lods
aaa
cwtl
int3
and
jno
push
or
bound
out
push
inc
mov
pusha
mov
scas
lods
testl
xchg
and
adc
mov
pop
dec
stc
call
imul
rcll
inc
cmc
inc
dec
xlat
pusha
mov
and
xchg
mov
rorb
xchg
jbe
sub
lcall
das
rorl
push
mov
lret
sbb
sbb
mov
insb
ds
jno
push
ret
mov
pop
or
add
dec
xor
in
test
mov
subb
xchg
xchg
or
imul
push
push
mov
jmp
outsb
movsl
xor
lret
popf
cmc
shll
in
js
dec
mov
sti
jp
sbb
rorl
cmp
ret
hlt
sahf
lahf
sbbb
sbbb
adc
lahf
jp
mov
mov
ds
or
mov
imul
in
ja
int
outsl
leave
mov
inc
jg
subb
mov
xchg
lock
pop
cmp
add
pop
gs
mov
adc
jp
xchg
xor
aam
mov
mov
aam
and
or
cmp
adc
xchg
mov
push
inc
loope
pop
rol
push
in
add
ljmp
in
mov
dec
dec
repz
leave
outsl
add
mov
push
mov
movsl
jge
rcll
pop
mov
push
pop
das
adc
adc
rcrl
ja
mulb
push
pop
xchg
push
hlt
cmp
int
cmp
lods
shlb
lahf
popf
fistpll
lahf
and
mov
pslld
lock
add
inc
inc
xchg
in
mov
add
xchg
addb
test
add
xchg
mov
mov
cmp
aaa
dec
or
imul
sub
in
xor
dec
std
pop
jns
ds
adc
sbb
pop
inc
push
test
cmp
sbb
cmp
in
dec
fs
dec
ljmp
test
mov
mov
or
dec
xchg
ss
movsb
pushf
cmp
adc
lret
mov
ds
jno
rclb
mov
pop
daa
mov
dec
sbb
jge
movsb
inc
or
nop
iret
out
nop
insl
shlb
imul
xchg
add
adc
scas
pop
imul
or
imull
push
push
stos
cmc
or
mov
pop
jnp
sub
fdivl
fs
ret
int
adc
cmp
mov
mov
xor
sbb
std
popa
js
pop
mov
cmp
mov
inc
xlat
inc
cmc
loopne
test
fwait
scas
scas
inc
pop
push
fwait
mov
jns
dec
lea
xor
insl
lods
mov
and
cli
mov
xor
movsl
mov
jnp
jle
cmpl
dec
sbb
aaa
cmp
add
mov
aam
cmc
jae
out
fwait
loope
and
stos
xor
icebp
leave
mov
dec
test
jnp
sbbb
pop
ljmp
outsb
mov
jge
test
scas
lahf
sbb
mov
push
inc
push
mov
fimuls
sbb
xchg
pop
push
mov
inc
in
dec
cs
pusha
xlat
push
inc
inc
pop
push
jecxz
lahf
imul
adc
stos
cld
jle
jmp
add
pop
dec
mov
lods
ret
or
jecxz
cmp
aaa
outsb
cmp
pusha
mov
testb
xorl
dec
fwait
sbb
inc
cmpsb
ss
pop
daa
adc
jns
mov
loope
clc
xchg
mov
lcall
dec
xlat
arpl
xlat
in
xchg
mov
jl
pushf
jg
push
mov
xchg
jge
ret
subb
jp
add
fnstcw
shr
cmp
add
sbb
xchg
sub
nop
dec
out
push
cmpsl
dec
popf
js
jae
loop
lods
inc
insl
sbb
insb
mov
hlt
xchg
jg
inc
push
loope
loope
push
fwait
or
push
mov
mov
pusha
mov
enter
pop
add
mov
call
out
jnp
adc
subl
outsb
push
lret
mov
adc
mov
or
adc
or
xor
pushf
inc
pop
stos
cltd
mov
popa
cld
loope
mov
imul
push
pushf
loop
mov
push
shrl
dec
test
cmp
ds
dec
into
inc
sbb
pmulhw
and
rolb
xchg
hlt
push
jns
clc
xchg
cmp
clc
rep
stos
mov
scas
xchg
shr
sbb
jmp
sbb
adc
ja
pop
cmp
dec
orl
cli
jbe
out
insb
bswap
shlb
loopne
or
or
ret
cmp
sub
jge
add
mov
lods
mov
adc
lods
pop
jle
inc
push
or
stos
sub
loop
cmp
int
dec
xchg
add
bound
out
cwtl
push
stos
rcrb
pop
test
mov
in
pushf
scas
sub
jecxz
inc
xorb
not
repnz
jecxz
xchg
bound
fists
lds
ja
aas
cwtl
pusha
push
aaa
mov
pop
scas
cmp
jnp
cld
and
add
iret
cmovo
sub
push
dec
push
test
leave
fwait
and
ds
dec
adc
mov
loop
outsl
xchg
xchg
jne
jl
mov
fistl
fldt
and
test
sbb
mov
cmp
test
xchg
jle
dec
jnp
sub
xchg
cld
push
add
xchg
loop
pop
sar
ret
in
ret
adc
xchg
clc
sti
rolb
test
mov
inc
repz
sub
pop
fcompl
pop
popf
lea
mov
inc
test
rcr
mov
jl
enter
cmp
ljmp
xchg
rcrl
cmp
scas
pop
lds
inc
mov
sbb
mov
sub
mov
mov
add
jecxz
adc
xchg
nop
push
les
inc
pop
insl
adc
pop
xor
xchg
xlat
xchg
mov
adc
jns
xor
add
or
xor
or
leave
xchg
mov
lea
push
sbb
xchg
insb
xchg
mov
rorb
lret
shll
cmpsl
inc
js
jg
add
mov
icebp
mov
shrb
lahf
pop
lds
and
lret
stc
adc
insb
insl
sbb
iret
pop
pop
in
movsl
add
mov
and
jge
xchg
fbstp
and
test
push
popf
sub
mov
push
push
and
add
sbb
cmp
rcll
insb
sbb
cmp
sbb
adc
push
adc
sub
jae
sub
push
inc
outsl
jge
push
push
add
outsb
xchg
scas
add
sub
lds
std
mov
sub
xchg
ret
or
sarl
stos
lret
jmp
dec
gs
jp
lcall
pop
arpl
pop
mov
sbb
inc
pusha
int
arpl
sub
sub
fnstenv
sub
or
les
ret
clc
int3
mov
and
lret
cltd
adc
adc
xchg
or
pushf
insb
lea
or
cmpl
in
addb
dec
mov
push
xchg
sub
xor
dec
pop
mov
adc
xor
adc
out
js
int3
ret
repnz
or
mov
sbb
lods
addr16
dec
mov
in
mov
mov
bound
dec
inc
enter
inc
or
rorl
out
repnz
shlb
out
sub
addb
imul
dec
hlt
pop
ljmp
lods
dec
ficoms
enter
cmp
lock
sbb
mov
jbe
sti
leave
inc
andl
jp
xchg
jmp
sbb
out
js
adc
pop
xacquire
cmp
popf
lea
push
fs
lds
dec
sub
in
sub
mov
add
repz
cmp
cwtl
das
or
std
outsl
xchg
in
mov
test
xchg
cli
fucom
jnp
xor
xor
test
mov
jnp
sbbb
or
ljmp
push
std
mov
movb
jp
fsubr
outsb
push
lds
hlt
shlb
push
xlat
sbb
mov
inc
dec
xor
ficoml
xor
addb
inc
repz
int3
pop
out
pop
cltd
push
into
inc
fidivs
add
sub
aam
mov
xchg
roll
aad
daa
fldenv
cmp
jnp
fwait
mov
pop
sbb
rcl
fst
xor
mov
sbb
popl
mov
cmc
xchg
es
or
dec
ss
imul
cwtl
ret
sub
movsl
mov
test
cltd
push
and
mov
push
ss
lods
cmp
sbb
stos
cmp
jl
gs
bound
mov
out
scas
push
sbb
sbb
mov
inc
inc
in
or
xor
ljmp
add
jnp
in
xor
lcall
ret
pop
and
xchg
into
add
push
sbb
int3
jp
add
js
cs
lret
mov
adc
adc
adc
jno
test
add
mov
fsts
sbb
sbbl
clc
sbb
cmp
loop
push
and
adc
jne
mov
das
out
ds
xor
adcl
loopne
xor
pusha
add
filds
pop
inc
rolb
or
and
es
addr16
js
je
and
pop
cs
push
aam
arpl
inc
mov
das
mov
cwtl
rorb
leave
push
adc
iret
pop
je
and
mov
mov
mov
xorb
insb
cmc
aad
jle
cli
jl
mov
push
push
push
subb
push
daa
into
dec
insl
adc
pop
ja
jnp
adc
mov
clc
pop
aad
add
mov
lods
stos
jl
dec
xlat
lahf
lods
int
push
adc
les
sbb
out
inc
cmp
std
jp
lock
push
xor
ret
test
gs
loopne
dec
ror
sub
adc
mov
inc
std
lret
mov
gs
xchg
mov
enter
aas
jbe
cwtl
ret
scas
xlat
mov
xchg
jns
into
inc
in
and
arpl
xor
imul
fcompl
sbb
jp
cmp
aas
sbb
iret
cmp
jns
and
push
sub
push
jns
ficomps
mov
sbb
iret
das
pusha
repz
pop
push
lcall
sbb
sbb
pop
mov
clc
cli
jmp
aaa
out
jns,pt
test
dec
popf
call
add
pop
test
dec
push
fbld
ljmp
andl
dec
mov
icebp
xchg
insb
out
adc
xor
loope
sahf
lods
xchg
mov
mov
stos
arpl
cli
sub
sub
mov
lret
scas
imul
pop
push
punpcklbw
repz
cmp
xchg
mov
mul
pop
imul
cli
mov
fbstp
ret
and
cmpsb
jge
lcall
jmp
and
adc
sub
mov
fbld
mov
cmpsl
cmpl
test
xchg
jb
mov
or
jl
adc
xchg
xchg
mov
xor
test
mov
dec
dec
fwait
xchg
fadds
sahf
xchg
jge
mov
vpaddsb
mov
dec
mov
xchg
cli
push
pushf
addl
xchg
and
movsb
jecxz
sbb
mov
in
andb
nop
jnp
jmp
loop
ja
xchg
pop
dec
add
mov
push
jle
or
outsb
aad
addr16
mov
fcomps
and
adc
fisttps
pop
add
pop
insl
dec
cli
add
or
add
cmp
or
fs
addl
inc
xor
out
inc
imul
mul
das
daa
mov
imul
add
and
and
mov
pop
xchg
stos
lea
sub
bound
aam
jno
push
xchg
leave
inc
or
mov
call
stc
jl
into
aaa
popa
loope
outsl
inc
adc
or
fcompl
repnz
stc
push
cmpsb
bound
xorb
xor
pop
mov
or
cmp
pop
pusha
test
mov
shl
lods
gs
mov
mov
popf
aas
inc
pop
adc
jmp
pop
daa
push
data16
or
or
xchg
pop
xchg
xchg
fdivs
inc
push
pop
dec
dec
pop
or
lret
clc
push
xchg
or
add
jge
mov
andl
push
je
xor
icebp
mov
xchg
xor
xchg
leave
mov
inc
cmp
repnz
in
stc
hlt
push
loopne
pop
in
jp
std
dec
fimuls
subl
xchg
adc
mov
mov
inc
dec
adc
mov
pusha
jnp
add
inc
into
xchg
add
fistps
dec
in
pop
cld
xor
sbb
dec
dec
push
test
sub
xor
inc
outsb
xchg
out
test
jae
fimull
mov
fisubl
shr
inc
mov
ljmp
mov
push
fcoml
sbb
bound
pushf
loopne
mov
and
sar
mov
mov
scas
iret
stos
pop
pop
fs
ss
stos
cltd
stos
or
or
push
push
sub
dec
and
cwtl
pop
xchg
xor
sub
sub
lods
xchg
cli
push
mov
sub
rcr
test
pop
or
pop
adc
gs
and
ret
and
adc
movsb
jb
mov
aad
fistps
mov
and
es
std
or
mov
out
dec
mov
std
rcrb
leave
jbe
in
mov
jge
push
ja
out
or
or
mov
push
mov
mov
cltd
lea
stos
push
xchg
inc
mov
or
cmp
nop
push
mov
cltd
pop
jo
movb
dec
inc
xor
jge
cmc
push
sbb
xor
push
xor
mov
inc
dec
fstpl
jecxz
in
ret
cmc
mov
mov
mov
add
hlt
aam
in
mov
fcmove
cmc
or
outsb
or
ret
dec
push
and
scas
jp
mov
imull
and
lret
and
xchg
ret
dec
cmp
push
cli
sub
dec
test
xor
xchg
ja
push
inc
das
jp
xor
test
shlb
mov
jnp
dec
addr16
mov
addl
shl
repz
hlt
and
jb
inc
push
mov
mov
sarl
imul
dec
insl
mov
xchg
sbb
sar
or
mov
lret
lock
popaw
push
stos
sti
cvtps2pd
mov
fiadds
push
aad
stc
cmc
inc
dec
rcr
sbb
xor
iret
sbb
out
rcll
sbb
or
sbb
add
add
dec
add
sub
aas
mov
mov
push
test
arpl
push
adc
rorb
mov
scas
push
cmp
push
add
out
dec
rclb
cs
push
xchg
movsl
jp
shr
inc
and
ret
mov
ret
adc
lcall
jle
push
adc
lahf
push
adc
mov
scas
cmpb
shrb
cmp
scas
sub
out
mov
pop
mov
loopne
xor
loopne
add
adc
cld
loop
outsb
pop
sbb
inc
jmp
inc
dec
mov
lds
int3
and
pop
xchg
shr
mov
xor
pop
pop
aad
lahf
inc
sbb
loop
popf
loop
inc
pop
adc
jge
mov
shrb
decl
out
xor
push
out
or
or
xor
sub
aad
fmul
imul
bnd
pop
sub
jb
push
retw
daa
add
mov
mov
ret
xchg
xor
aad
je
and
jo
test
fcom
jle
repnz
aad
insb
shll
repz
add
cltd
aas
pop
shll
in
lret
repz
or
pop
jg
iret
mov
fsts
mov
int3
xchg
mov
jnp
sbb
stc
jae
es
mov
ss
cltd
sahf
int3
sarb
xchg
sbb
dec
popf
pop
dec
cmp
imul
mov
jg
lret
xor
loop
dec
test
std
cmp
jnp
nop
dec
ja
loop
lahf
mov
inc
mov
das
cmp
xor
push
test
cltd
dec
mov
fistps
mov
inc
nop
xchg
push
rep
dec
cs
add
out
mov
inc
add
stos
xor
xor
cld
dec
sbbb
ret
mov
mov
xchg
arpl
dec
pop
iret
push
cli
cmc
fcmovnbe
pop
ss
cmp
fldt
push
stos
cs
or
test
stos
out
mov
aad
aas
leave
or
jmp
leave
jae
fsubl
popa
mov
mov
fildl
je
loope
call
shlb
xchg
mov
jne
pop
mov
loop
aas
or
xor
sti
inc
ja
pop
sbb
lods
sub
xchg
mov
insb
test
xchg
add
jle
inc
jge
adc
mov
cmp
dec
mov
mov
rcrb
inc
aas
imul
outsl
xlat
mov
iret
pop
fwait
sbb
fndisi(8087
ljmp
push
pushf
ds
jmp
loop
inc
push
inc
int3
lea
push
sbb
cmp
negl
adc
clc
and
cmp
cmp
in
sahf
mov
cmpsb
xor
cmp
dec
jg
jbe
popa
cmp
nop
push
mov
sub
dec
inc
mov
xchg
cmp
fcoml
sbb
pop
jp
sub
dec
loopne
mov
jmp
jns
loopne
mov
mov
and
ds
push
stc
dec
push
xchg
cmc
enter
inc
dec
mov
addr16
icebp
adc
cmc
jecxz
fcomip
jno
rol
outsl
stos
pop
xchg
sbb
xor
bnd
cltd
cwtl
push
jmp
inc
in
das
or
addr16
lret
sbb
pop
and
lods
arpl
movsl
aas
movsl
lds
push
mov
jmp
adc
bound
add
aaa
daa
hlt
js
mov
clc
xor
in
mov
adcb
sti
cmc
in
xor
and
pop
mov
or
push
nop
movsl
push
pop
xorb
aaa
cwtl
aas
jns
mov
sbb
xchg
inc
or
dec
in
add
fwait
lock
orb
fsts
push
aaa
sahf
dec
push
popa
iret
sbb
inc
adc
sbb
or
jno
mov
rcrb
inc
rcrb
sbb
mov
je
scas
inc
andb
out
mov
ljmp
sbb
sahf
cmp
dec
mov
in
and
push
mov
stc
jno
mov
js
ljmp
out
inc
sub
jg
inc
sub
cmp
jb
fstpt
jge
pop
mov
mov
adc
test
sbb
shrl
loopne
fadds
sub
scas
rsm
es
mov
mov
movsl
dec
lcall
rcll
lods
adc
fbld
or
xor
jae
sub
aam
shl
xor
pusha
jecxz
andb
repz
or
test
arpl
dec
jne
mov
rcrb
pop
daa
ss
andl
les
jl
fcomip
jmp
push
sub
dec
test
test
pop
inc
push
inc
mov
aas
lds
arpl
test
dec
movsl
test
sub
mov
xchg
loop
out
inc
xor
sub
xchg
mov
cmp
sti
shll
and
pop
fwait
shrb
sahf
ret
stos
or
fimuls
pop
mov
fdivl
add
fisttpll
loop
cs
loopne
cmpsb
and
ljmp
inc
cmp
sbb
mov
js
jecxz
jge
mov
mov
cmpps
or
pop
notl
add
xor
rcrl
dec
mov
adc
xor
xchg
sub
push
pop
mov
jecxz
or
test
adc
adc
push
test
or
mov
sbb
cmp
subl
adc
push
incb
fwait
out
sbb
or
jmp
cld
pop
jbe
imul
xor
int3
test
enter
adc
std
and
xchg
je
daa
rorl
sub
outsb
pop
addr16
sub
push
or
dec
fists
push
jo
inc
push
test
add
ret
aad
push
cmp
inc
or
push
mov
push
xchg
inc
lods
jnp
adc
lret
pop
mov
cs
sub
ret
mov
xchg
out
ja
enter
outsl
loop
in
dec
inc
test
int3
popf
xor
xchg
inc
sub
aaa
xor
xor
push
push
mov
sbb
xchg
jmp
sub
sbb
lods
sub
out
or
dec
sbb
adc
push
pop
jmp
out
mov
fdivs
imul
subb
cmp
jne
inc
lods
cld
stc
loope,pn
andb
dec
aam
out
shr
and
cmp
xcrypt-cbc
cmpsl
xchg
pop
pop
jb
cmp
int3
xchg
test
nop
xor
adc
mov
