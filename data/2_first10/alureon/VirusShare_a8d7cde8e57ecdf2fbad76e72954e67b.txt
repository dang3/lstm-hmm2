mov
into
inc
mov
inc
mov
pop
jge
repz
in
es
cltd
add
push
push
jnp
cmp
jae
and
pop
ds
fcoms
daa
dec
mov
pop
fyl2x
mov
mov
inc
dec
jl
arpl
dec
sahf
ret
or
push
pop
stos
sbb
adc
xor
or
push
sahf
test
xlat
and
push
adc
push
mov
or
xchg
bnd
adc
jno
jmp
inc
sbb
ret
ret
jmp
fcoml
clc
pop
and
mov
pop
sub
or
lock
cmp
or
pop
movsl
pop
jno
or
or
cmp
mov
inc
push
std
jg
insb
imul
lret
clc
pop
out
inc
xlat
int3
clc
jne
fistpll
fdivrs
jle
pop
insl
jp
push
loop
repnz
or
jg
dec
aam
mov
push
call
shl
jo
aas
clc
inc
inc
mov
sbb
xchg
ror
pop
nop
dec
popf
stos
mov
xor
or
loop
lods
in
stos
shll
fs
lcall
outsl
shlb
fstpt
daa
sub
movsl
sub
repnz
lods
cmp
fs
jae
dec
aam
test
push
mov
popa
ljmp
or
lcall
je
lret
imul
dec
add
into
push
cmp
cltd
arpl
add
iret
mov
xchg
mov
aaa
add
jge
ret
push
repnz
cmc
xchg
push
xchg
imul
sub
pop
dec
outsb
sbb
xor
mov
inc
mov
enter
dec
xor
mov
addl
add
inc
mov
jp
dec
jns
clc
loop
bnd
sarl
sbb
mov
ret
and
pop
in
popf
addb
sub
sbbb
dec
test
inc
and
dec
pusha
pop
cmpsb
add
andb
repz
lods
dec
or
cwtl
pop
and
or
out
inc
or
or
hlt
out
mov
sti
and
fwait
test
push
cli
stos
sbb
inc
cwtl
pop
mov
jmp
mov
test
fs
cld
mov
out
cmp
mov
into
stc
int3
cmp
mov
sbb
mov
mov
inc
mov
jnp
jbe
sbb
xor
imul
inc
inc
inc
inc
sub
or
lea
mov
dec
dec
inc
inc
dec
jne
xor
mov
lea
mov
pop
dec
inc
pop
inc
dec
pop
sub
lea
movzbl
inc
dec
inc
add
xor
lea
mov
inc
add
ret
push
inc
add
add
sub
lea
mov
inc
sub
push
push
push
push
add
dec
xor
push
lea
mov
sub
add
dec
dec
add
lea
mov
mov
inc
push
inc
add
xor
sub
and
push
lea
mov
push
add
dec
pushl
sub
call
inc
add
xor
lea
mov
inc
dec
dec
dec
pop
ret
movzwl
mov
inc
dec
inc
dec
dec
xor
lea
mov
inc
mov
inc
inc
cmp
jb
add
mov
and
lea
xor
mov
add
xor
dec
dec
pop
inc
xor
test
jbe
lea
mov
add
inc
dec
add
add
lea
mov
dec
inc
inc
inc
and
lea
mov
inc
inc
add
inc
inc
and
lea
mov
and
sub
sub
mov
inc
dec
movzbl
add
lea
add
movsbl
sub
and
inc
add
mov
sub
sub
mov
lea
mov
dec
inc
mov
sub
add
sub
lea
movzbl
dec
dec
jne
inc
mov
dec
add
xor
lea
mov
add
add
add
inc
sub
mov
lea
imul
dec
add
dec
dec
sub
lea
mov
mov
inc
test
jbe
inc
sub
inc
add
lea
imul
sub
sub
inc
add
and
lea
mov
inc
inc
inc
dec
add
sub
lea
imul
sub
and
dec
dec
mov
dec
xor
movzbl
lea
movzwl
add
inc
dec
and
inc
dec
mov
or
lea
movzbl
movsbl
inc
mov
add
dec
mov
dec
and
movzbl
lea
mov
add
inc
sub
and
inc
inc
movzbl
or
jmp
and
lea
mov
inc
inc
add
inc
sub
pop
ret
push
sub
lea
xor
imul
dec
inc
add
dec
xor
inc
and
lea
mov
dec
dec
dec
inc
and
lea
mov
dec
inc
add
pushl
inc
sub
pop
lea
movzbl
pushl
sub
add
dec
sub
xor
lea
movswl
dec
inc
add
sub
add
lea
mov
dec
add
pop
inc
dec
and
lea
cmp
je
call
call
mov
pop
add
ret
push
inc
push
add
inc
push
xor
push
lea
push
movzwl
dec
push
inc
inc
dec
and
lea
call
movswl
push
dec
dec
inc
mov
add
mov
or
lea
mov
imul
inc
test
je
inc
mov
inc
add
xchg
add
lea
repnz
mov
dec
xchg
dec
dec
inc
xor
lea
movzwl
inc
add
inc
inc
add
lea
add
movswl
jmp
push
push
mov
mov
dec
inc
dec
add
sub
lea
mov
inc
sub
inc
pop
inc
or
xchg
lea
call
movswl
dec
inc
inc
inc
xor
lea
mov
inc
dec
inc
inc
call
add
lea
call
inc
inc
inc
add
add
call
lea
imul
call
sub
inc
add
push
inc
call
xor
lea
imul
inc
call
inc
add
sub
pop
xor
lea
imul
add
dec
pop
inc
dec
pop
inc
and
lea
imul
pop
dec
add
dec
sub
and
lea
movzwl
dec
pop
inc
dec
pop
inc
and
mov
lea
mov
call
dec
inc
dec
inc
ret
xor
lea
push
mov
inc
push
add
add
push
sub
add
push
lea
mov
push
inc
inc
mov
sub
add
push
xor
ret
push
lea
inc
sub
sub
sub
sub
lea
add
add
sub
inc
add
lea
movswl
inc
dec
inc
dec
jmp
jmp
dec
add
sub
dec
add
lea
imul
sub
add
dec
inc
or
pop
pop
ret
push
lea
push
mov
inc
inc
dec
sub
and
push
lea
call
pop
ret
sub
imul
mov
inc
inc
mov
inc
inc
mov
add
lea
mov
movzbl
sub
xor
inc
dec
mov
dec
sub
inc
lea
mov
inc
dec
dec
dec
cmp
jb
or
push
lea
mov
push
dec
inc
push
inc
inc
mov
sub
lea
xor
mov
add
xor
add
dec
xor
add
xor
push
lea
mov
xor
inc
dec
mov
inc
dec
mov
or
lea
movzbl
inc
sub
dec
add
dec
sub
add
lea
movswl
movzbl
dec
inc
sub
dec
sub
lea
dec
inc
dec
inc
mov
inc
or
lea
inc
inc
cmp
jb
sub
xor
inc
sub
mov
lea
jmp
iret
xlat
call
rol
test
inc
mov
shrb
sti
dec
leave
sar
or
dec
insb
fidivs
add
mov
paddw
out
mov
and
mov
sti
adc
fisttps
xlat
fsubrl
mov
cmp
ljmp
outsl
sti
ret
notrack
rcr
xchg
push
mov
loopne,pn
pop
push
pop
scas
lea
mov
aam
jns
add
bswap
xchg
nop
pusha
and
cmp
pop
adc
sbb
outsl
and
sbb
rorl
stos
test
ror
faddl
in
sub
std
mov
mov
sbb
and
xchg
push
or
mov
ljmp
add
lock
and
and
jo
fdivrs
pop
inc
mov
pop
jp
shlb
rorb
inc
and
mov
test
lret
jl
andb
jne
loope
dec
ret
and
add
cltd
out
mov
and
sti
mov
cmpsb
mov
adc
or
mov
in
arpl
cmp
movsl
sbb
les
push
xor
in
sub
out
cltd
cmp
aad
imul
jae
and
ret
mov
cmp
adc
shll
sar
jg
ds
lcall
pop
bound
pop
call
and
sbb
push
xchg
out
cmc
add
pop
fcom
pop
jae
mov
or
les
jns
je
jl
add
mov
ja
or
test
roll
add
pusha
pusha
les
xchg
lods
cmp
mov
adc
test
cwtl
pusha
mov
ret
cltd
inc
cmp
push
mov
inc
jmp
pop
xor
sbb
add
sub
out
loopne
sbb
xor
pop
mov
push
adcl
push
or
mov
lods
fnsave
xchg
adc
push
shll
addr16
xor
or
ror
out
xor
mov
jns
notb
lds
or
insb
psubq
and
sbb
add
nop
in
push
incl
mov
ja
sti
push
idivb
jns
mov
mov
lret
daa
out
adc
pop
arpl
stos
addr16
scas
sub
xchg
cmp
out
push
mov
inc
scas
lret
andb
pop
icebp
xor
sbb
inc
pushf
or
out
ja,pn
testl
das
fwait
xor
add
rcrl
add
sahf
pop
call
mov
inc
cltd
rorb
int
sub
or
in
cmp
dec
mov
and
shr
mov
mov
inc
jl
sti
cmc
in
mov
push
je
inc
shll
out
ret
and
push
adc
pop
mov
jg
les
mov
aas
je
pop
pushf
xchg
cli
cs
lock
mov
mov
fwait
mov
stos
loope
fnsave
jmp
in
push
fidivs
hlt
push
or
adc
pop
loop
push
scas
lods
gs
fidivrl
repz
testl
lods
cmp
test
fwait
inc
mov
es
popa
mov
pop
fcompl
sbb
mov
in
mov
gs
mov
dec
fistpll
ljmp
push
js
mov
ret
cli
or
inc
out
xor
push
xchg
sahf
pop
dec
sbb
daa
pop
mov
dec
call
lea
and
sub
scas
insl
in
adc
out
pop
sarl
addr16
je
loope
insl
cmp
mov
adc
jecxz
jae
decb
addr16
fcomi
insl
inc
sti
cmpl
inc
idivb
sub
push
movsb
fsubp
das
mov
add
mov
xchg
adc
push
inc
adc
sti
pushf
sbb
and
add
push
loope
sub
mov
pop
xor
mov
adc
ret
push
push
mov
call
pusha
movsl
xchg
jl
les
push
pop
lahf
lods
ss
aad
push
clc
inc
xor
enter
xchg
popf
test
or
dec
data16
aaa
add
mov
clc
mov
cmp
andl
dec
adcb
js
dec
lcall
push
mov
js
ret
outsb
mov
idivb
pop
mov
pop
stos
ret
sbb
sub
adc
xchg
clc
enter
lret
cltd
lods
call
push
mov
cmp
cltd
push
subb
nop
xchg
aaa
popa
cmc
sub
loopne
fcoms
int
lds
cld
and
inc
xchg
sbb
shrl
ds
xchg
stos
dec
aaa
cwtl
sub
xorl
mov
inc
cvtpi2ps
push
push
inc
insl
xchg
ljmp
xor
mov
jg
das
in
in
leave
pusha
gs
xor
push
int3
inc
xchg
scas
adc
jnp
icebp
lret
sbb
push
ds
jecxz
sti
xor
cltd
push
jbe
fisubs
pop
icebp
and
clc
push
repnz
hlt
fnstenv
stos
inc
pusha
sub
cmp
insb
and
pop
push
js
inc
out
cs
pushf
push
and
sti
adc
mov
mov
adc
sub
test
and
sbb
cwtl
or
clc
mov
jno
stos
adc
cmp
dec
mov
push
sub
push
test
hlt
or
mov
add
cmp
mov
push
addr16
shll
pop
add
andl
test
cld
jae
mov
scas
jle
pop
fisttpl
adc
ja
adc
in
jl
vunpckhpd
sub
jne
lret
sbb
add
dec
ds
out
out
lcall
ficomps
dec
enter
mov
cmp
mov
lret
hlt
stc
iret
divb
xchg
hlt
jmp
cmp
lods
cli
xchg
pushf
and
lcall
xchg
cltd
ret
cmp
aam
mov
xor
push
jmp
cpuid
cs
es
ja
xchg
xlat
mov
and
sub
cmc
mov
xlat
out
pop
jle
inc
dec
xor
inc
mov
xor
aad
mov
movsl
in
arpl
add
fscale
xchg
lcall
push
mov
xchg
ds
loop
adc
sub
mov
xchg
inc
pop
pop
add
lods
dec
push
popa
ljmp
daa
js
addr16
lret
pop
or
pop
imul
xor
mov
inc
jmp
cmp
sub
out
ss
inc
or
adc
mov
mov
insb
sbb
scas
add
cmc
adc
xor
sbb
rolb
add
xchg
mov
cwtl
dec
mov
pop
cltd
jno
pop
addb
or
je
inc
pop
xor
ror
shl
in
pusha
or
mov
negl
jecxz
test
lret
cmp
inc
loopne
aad
or
xor
mov
loop
fldl
and
imul
int3
es
mov
jo
in
and
cmpsl
clc
jp
or
data16
mov
jl
ret
jg
or
das
dec
nop
jge
ud0
sub
loope
or
mov
dec
jg
cmpsb
pop
rolb
and
dec
insl
je
dec
lret
mov
add
rcl
sbb
push
adc
mov
mov
repz
push
add
decl
pop
les
mov
sbb
fidivl
add
or
es
test
jmp
mov
fdivp
cli
cmp
pop
cmp
push
call
fwait
cmp
test
mov
xchg
fsubrp
mov
mov
mov
mov
dec
add
js
aas
std
shlb
xchg
sbb
cmp
movsl
or
push
push
push
mov
call
jbe
xchg
dec
add
adc
into
loope
sbb
add
pusha
test
cld
into
fmul
sbb
push
push
inc
sub
jecxz
and
jne
mov
mov
mov
mov
mov
push
jg
insb
sarb
xchg
mov
mov
mov
mov
mov
repnz
push
cmpl
mov
ret
mov
inc
rcrl
stc
fisubs
mov
out
std
std
nop
mov
jno
inc
aad
xor
rolb
imul
call
and
inc
pop
or
test
sbb
fistpl
mov
in
nop
js
out
mov
pop
cs
aam
cli
rcrb
je
addr16
call
ja
mov
rorb
pop
sbb
leave
or
jl
into
lcall
out
in
or
cld
mov
pusha
rorb
gs
mov
push
shll
pusha
cmp
inc
mov
pop
arpl
pop
push
pop
jmp
vucomisd
dec
or
jne
mov
pushf
jae
out
int3
and
pop
push
cwtl
mov
test
sbb
insb
fs
mov
mov
in
add
and
enter
jle
or
jns
incb
dec
sarb
test
cli
popf
push
pushf
imul
insb
aas
cmp
loopne
add
negl
adc
xlat
mov
fwait
jno
fs
push
loop
jmp
dec
lahf
xor
cmp
jmp
cli
sub
mov
mov
rol
insb
addr16
shlb
data16
push
mov
addl
in
dec
loop
les
iret
mov
dec
inc
es
push
pop
cltd
xchg
sbb
ds
and
sbbb
sti
xchg
fmull
xchg
aad
das
mov
imull
or
test
and
test
push
mov
aam
popa
loope
scas
sub
in
cmpsb
push
mov
fmull
jge
inc
das
jle
loop
xchg
fldenv
shll
loop
mov
dec
mov
scas
mov
lret
cli
push
rorb
dec
movsl
push
sbb
dec
int3
xor
xchg
pop
push
mov
xor
mov
cmp
pop
sub
out
inc
cmp
and
or
mov
clc
push
xchg
xor
ds
mov
cmc
push
dec
mov
sub
data16
stos
dec
xor
dec
pop
and
dec
push
les
in
or
mov
jne
mov
dec
clc
pop
mov
adc
enter
mov
pminsw
and
adc
mov
xor
mulb
cmp
xor
dec
mov
mov
jp
adc
sub
cmp
adc
jo
xor
dec
stos
ja
add
ffree
out
inc
fists
iret
leave
inc
mov
jmp
jp
add
push
sub
pop
mov
inc
mov
xor
outsb
inc
inc
or
xchg
dec
inc
pop
adc
cmpb
and
mov
insb
aam
les
xchg
lods
ljmp
cmp
or
and
mov
insb
int
pop
cld
xchg
dec
pop
add
stos
dec
aaa
subl
xor
por
ret
jg
xchg
mov
data16
pop
adc
popa
lods
insb
pop
jle
cmpsl
mov
and
mov
mov
xchg
sbb
loope
dec
or
fwait
js
inc
dec
repz
es
hlt
fcmovnbe
xor
aam
mov
aam
mov
mov
mov
into
add
xchg
out
gs
jle
add
mov
cmp
jo
jo,pn
mov
mov
push
jns
punpcklbw
sbb
das
mov
lods
insw
and
fcompl
cmp
clc
aad
mov
ret
outsb
cli
repnz
jle
dec
pusha
dec
cmpsb
daa
add
add
xor
inc
adc
daa
arpl
push
jno
jb
push
and
stos
mov
jb
mov
or
iret
mov
cltd
enter
and
aam
repz
xlat
jbe
mov
xor
dec
popa
divb
cmp
cli
xchg
inc
sub
mov
inc
jge
pop
shrb
fidivrl
mov
sbb
loopne
push
test
hlt
out
adcb
icebp
mov
and
dec
test
dec
add
cmpsb
stc
lea
cld
rcrl
fstpl
fiaddl
add
inc
int3
xor
shlb
mov
xor
les
jp
test
pop
aam
lock
cltd
hlt
lock
mov
rcrl
in
scas
lcall
sbb
sub
ror
stos
ror
lret
inc
je
mov
cwtl
out
cltd
mov
cmp
sub
jmp
loope
setns
lock
xor
ficoml
pop
mov
scas
or
lods
in
rorb
mov
insl
and
mov
pushf
xorl
imul
jno
xchg
inc
push
sbb
cmp
inc
sub
mov
and
or
jge
imull
aad
fcompl
mov
imul
sbb
popf
pop
mov
adc
inc
jle
jnp
aaa
movsl
ret
push
push
or
in
mov
cmc
xor
std
dec
sbb
adc
add
dec
les
cmp
repnz
out
mov
stos
jae
jmp
push
call
jns
cld
rorb
mov
adc
stos
arpl
dec
and
das
repz
sbb
xchg
leave
popf
out
aam
clc
fnstenv
nop
orl
push
add
jmp
roll
dec
rorl
lret
adc
xor
jne
inc
shl
into
scas
fbld
test
sbb
outsb
data16
sub
cli
outsl
gs
into
adc
xchg
data16
add
inc
stos
push
test
cmpsb
repz
in
xchg
ds
fwait
mov
mov
cltd
jo
sbb
jl
cli
xchg
in
sub
lret
hlt
pop
test
lea
push
idivb
into
leave
loope
test
and
add
aaa
and
scas
sub
cmp
inc
mov
int3
inc
sti
filds
cmp
ja
mov
mov
cmp
xlat
cmpb
pop
cmp
xchg
and
out
xor
xchg
pop
test
mov
jmp
mul
xchg
mov
icebp
push
sub
pop
adc
xor
jbe
and
les
adc
and
jmp
pop
mov
cs
pop
mov
leave
mov
in
inc
movsb
js
inc
repz
aaa
test
inc
xor
mov
adc
scas
in
xchg
out
in
mov
xchg
repnz
subl
and
imul
xchg
shl
sahf
test
mov
fisttps
jmp
add
aad
mov
xor
dec
fwait
jno
adc
add
mov
fildll
mov
dec
test
mov
cld
xchg
call
in
and
jmp
pop
leave
xor
mov
cmp
in
pop
or
mov
mov
inc
xor
stos
hlt
xchg
lods
or
loope
xor
out
mov
fdivrl
mov
fucomip
repz
inc
fwait
xor
out
push
dec
out
dec
sbb
sbbb
xchg
sbb
and
mov
jno
lds
rcll
mov
push
sub
repz
or
stc
inc
xor
dec
int
subb
outsl
xchg
stos
adc
jge
cmp
mov
jg
ret
mov
dec
stc
dec
ja
lods
popl
out
inc
repz
ret
jb
dec
sti
adc
rcrb
aas
in
and
gs
outsb
stos
jle
enter
icebp
int
fisubl
pop
ror
and
mov
mov
imul
loope
test
cmp
mov
inc
outsb
xor
mov
inc
mov
std
arpl
jb
arpl
adc
int3
pop
mov
movsb
cmc
xchg
xchg
mov
iret
bound
mov
bound
fdivrl
xlat
lods
outsl
aam
lods
pushf
into
icebp
pusha
pop
ret
mov
or
sub
fcoms
daa
mov
mov
cli
mov
sbb
jo
and
inc
bound
rclb
cs
shll
and
pushf
call
jmp
push
inc
outsl
xchg
mov
roll
call
fwait
mov
out
xor
push
je
rep
pop
xor
jo
mov
mov
mov
sahf
fsubr
lcall
inc
pop
mov
frstor
inc
jl
xchg
adc
je
jmp
dec
xchg
int
adc
mov
mov
rorb
pop
mov
cmpsl
stos
push
sbb
push
lds
mov
nop
mov
in
mov
xchg
outsl
lods
imul
xchg
mov
jle
adc
pusha
pop
xor
push
dec
or
fs
jl
add
dec
clc
orb
cmp
dec
ret
scas
insb
sub
mov
inc
loop
xor
mov
pop
lahf
aas
fistps
ret
xor
jecxz
mov
popf
sbb
cmp
pop
push
outsb
or
jge
rorl
mov
enter
pop
xor
pmullw
fmull
push
cli
ror
xchg
push
cltd
or
sub
lret
jb
cmpsl
push
xor
mov
lock
sti
out
int
cmpsb
adc
incl
xlat
dec
sbb
test
jge
fidivl
into
mov
push
ljmp
and
inc
adcb
out
inc
jle
imul
imul
icebp
push
sahf
pusha
sbbl
inc
int
mov
push
xchg
fistpl
fadd
sub
enter
mov
aam
mov
cs
sti
cmp
sub
sbbl
mov
orb
leave
cmp
popf
lahf
inc
jbe
pusha
cmp
cmpl
sbb
sub
pop
lods
ss
insl
pop
out
mov
mov
jb
sbb
push
cmp
xchg
jno
call
enter
push
mov
shlb
in
popa
jmp
or
rdtsc
jae
adc
xchg
lret
xchg
push
adc
add
jae
xlat
decl
fistpll
int3
push
mov
and
sub
in
packuswb
int
mov
fisttps
inc
scas
ljmp
sub
or
xchg
std
jp
mov
sub
test
int
test
test
mov
push
sti
inc
xor
pop
adc
and
orb
stos
repnz
xchg
movl
shlb
jne
cmpsb
fcmovnu
add
test
push
sub
push
sbbb
jno
and
push
cmp
add
sub
dec
and
cmp
lret
cmp
hlt
ss
imul
push
int
je
icebp
jno
and
mov
sahf
test
ja
stos
lcall
mov
sti
mov
js
pop
add
out
inc
jnp
rcr
scas
push
jns
add
jge
dec
outsl
mov
xchg
and
add
sbb
pop
ja
das
xchg
adc
sbb
or
add
sub
hlt
sti
ffreep
sahf
pushf
jl
subb
sub
fcmovnbe
mov
sub
mov
sti
add
dec
mulb
jno
mov
xlat
inc
inc
test
mov
push
adc
xchg
lret
aad
pop
fs
pop
mov
and
cmp
or
xor
cmc
loopne
outsb
adc
pop
les
pop
or
xor
mov
addb
cmp
cmp
data16
out
stc
xor
xor
jo
add
push
jg
pop
xchg
jne
add
xchg
nop
push
dec
das
mov
mov
push
xor
js
mov
and
sbb
leave
pop
mov
adc
dec
lods
inc
testl
mov
jnp
cmpsb
xor
je
dec
sub
mov
out
inc
insb
mov
pusha
push
mov
jbe
mov
punpckldq
pusha
andb
add
daa
xor
bound
mov
cli
adc
xor
lock
mov
rcll
push
scas
and
mov
cmpsb
pop
mov
out
jp
mov
pushf
pop
sub
push
aad
sbb
cs
test
sbb
dec
adc
adc
movsb
divl
dec
mov
shlb
aam
mov
sub
aad
jb
repnz
clc
or
ljmp
stos
jbe
cmpsb
mov
add
das
repz
jae
cmc
sbb
pop
jg
xchg
sbb
dec
dec
adc
sbb
inc
popa
jbe
stos
add
stos
outsl
mov
aas
push
test
lods
shlb
jo
pop
mul
cltd
lahf
or
fprem1
cli
jmp
in
cmp
fistpl
sbb
addr16
jle
lock
pop
push
out
push
pop
in
sub
mov
lret
sub
hlt
enter
cli
mov
or
loop
xchg
adc
inc
jle
fs
sbb
outsl
cmpsl
mov
push
cmp
cmc
mov
cmpb
mov
repz
mov
push
daa
sbb
loope
loopne
mov
leave
shll
dec
xor
pop
mov
mov
or
leave
dec
in
adc
push
and
cmc
jl,pt
inc
pop
jge
adc
cmc
aad
jo
inc
mov
das
push
out
inc
jbe
filds
sub
jg
in
sub
xor
aas
mov
cli
stos
sbb
call
rcrl
dec
movsb
and
imul
mov
sbb
inc
inc
repnz
mov
mov
cmp
jb
icebp
lret
jp
dec
in
mov
shrb
adc
adc
cltd
pop
jo
mov
dec
lret
jmp
add
cmc
sbb
mov
test
push
mov
imul
pop
jmp
xchg
fdivrl
roll
push
cmp
or
cmp
lds
lea
outsb
xchg
sti
dec
adc
sarb
jne
mov
enter
mov
aam
aas
cs
mov
sub
jbe
jo
adc
or
sbbl
xchg
shll
mov
mov
js
aad
cli
xchg
push
push
ret
lahf
loopne
add
xchg
rclb
dec
or
sbb
push
hlt
imul
mov
cmp
in
iret
and
imul
es
das
sti
lcall
sbb
add
mov
mov
jae
popa
xchg
jp
lret
dec
aas
mov
jne
repnz
imul
out
and
xadd
lret
shlb
lret
loop
outsl
xchg
into
mov
push
daa
scas
adc
out
inc
cli
jl
stos
ss
inc
mov
xorl
shlb
sub
mov
mov
in
add
jbe
out
shrb
ret
in
or
pusha
lds
iret
dec
notb
or
lock
jnp
dec
pop
aas
out
movsb
mov
lds
pop
notl
xor
ud2
out
sbb
mov
stos
lcall
add
mov
sub
jmp
insb
mov
mov
cmc
scas
into
std
xchg
mov
icebp
fimuls
lds
mov
xor
fs
cmpsb
push
push
and
stos
push
bound
clc
cmp
jg
movsl
es
icebp
cmp
add
jmp
movsb
push
adc
lahf
out
insb
in
mov
inc
xchg
scas
insb
imul
jae
mov
ds
push
push
inc
push
mov
sub
mov
std
mov
mov
mov
ret
or
sti
cmc
lds
add
and
lahf
jp
or
sar
xor
stc
push
iret
mull
into
and
mov
xor
or
xchg
cwtl
fdivrs
cli
mov
dec
out
pop
mov
push
pop
lcall
arpl
or
jb
or
xor
push
or
dec
aaa
insb
jno
or
cmpb
cmp
loope
lock
pop
sub
xor
mov
xor
js
scas
dec
inc
mov
cmp
adc
inc
push
xchg
fildll
xor
xchg
mov
int3
enter
push
mov
xor
push
aas
iret
dec
xchg
test
jns
xor
aad
xchg
stos
repz
inc
dec
call
jg
or
rorl
inc
add
pop
arpl
add
insb
test
movsb
and
insb
sub
shlb
push
lods
push
adc
push
movsb
scas
aad
xor
push
mov
loop
test
sbb
and
dec
or
call
cmp
out
loop
mov
stc
sahf
cwtl
lret
fisttpll
hlt
and
adc
and
rcrl
std
dec
int
cmp
mov
loopne
inc
sub
mov
decl
cwtl
adc
push
mov
sbb
addr16
mov
mov
ja
sub
jbe
in
in
hlt
push
cwtl
mov
clc
in
add
push
inc
and
popf
fsub
push
pop
bound
dec
shlb
dec
xchg
cmp
roll
cs
iret
stc
dec
or
mov
xor
push
sbb
mov
popf
and
jle
jecxz
lret
inc
pop
aas
insl
fdivl
jae
mov
jae
sbb
mov
mov
add
jle
stos
pop
jge
fildl
rol
adc
xlat
je
cwtl
iret
orl
cs
push
mov
addr16
dec
add
mov
aam
jl
dec
xlat
out
jo
dec
push
loope
jae
inc
inc
cli
jl
inc
xchg
jnp
popa
add
fdivrs
ret
jae
jae
lock
sbb
xor
cmp
lds
in
mov
imulb
rcrb
and
not
push
iret
xchg
inc
nop
push
or
and
or
lea
pop
jbe
stc
adc
int
jne
js
xchg
xchg
into
xlat
call
or
xchg
push
js
and
movsl
bound
jb
push
loopne
dec
mov
inc
loop
mov
mov
push
je
sti
rorl
enter
mov
xchg
fucom
bound
nop
jmp
loopne
mov
fadds
xchg
repnz
je
in
pop
cmpsb
sahf
hlt
or
clc
xchg
mov
jns
out
dec
mov
out
jle
movsb
mov
or
sub
cld
popa
xor
out
mov
adc
rorl
mov
sub
xchg
fcompl
cltd
cmp
mov
ffreep
pop
mov
push
hlt
sbb
xadd
pushf
sbb
lcall
ljmp
jno
push
data16
ret
dec
xchg
js
xchg
jg
loopne
sbb
roll
xchg
iret
dec
xor
jne
mov
xor
outsb
inc
into
adc
mov
push
mov
push
inc
daa
add
add
enter
scas
scas
mov
pushf
aad
add
and
cmp
js
fcmovnu
inc
xchg
inc
sbb
mov
sub
sub
clc
pop
lret
xlat
mov
pop
fxch
xor
leave
mov
mov
insl
cld
xchg
jge
sub
popa
sub
dec
xlat
pop
adc
in
pop
imul
popf
mov
adc
cmpb
mov
push
add
out
fsubl
pop
cmp
aam
fsubs
movsb
out
sbb
mov
inc
xor
dec
push
adc
add
dec
mov
or
cld
sub
mov
mov
fidivl
inc
sub
sbb
loop
std
and
inc
dec
dec
in
or
cld
cmp
xor
add
mov
cmp
iret
add
jns
xchg
and
add
je
dec
clc
idiv
pop
inc
mov
sub
push
call
dec
xlat
mov
jne
and
push
int3
andl
xorb
ss
in
ss
dec
xor
pop
mov
ljmp
push
adc
nop
aaa
lock
mov
out
sbbb
jmp
sub
aaa
sbb
jl
push
sub
xlat
mov
or
fiadds
lret
lcall
sarl
ljmp
cmp
xor
pop
ret
xor
repnz
push
data16
pushf
sub
stos
fdivrs
sub
ss
dec
inc
hlt
xor
xchg
mov
push
xchg
negb
in
popf
add
jl
sub
fnsave
popa
xor
and
out
sti
mov
cs
mov
movsb
xchg
fnstcw
gs
test
xor
push
or
lea
test
int
sahf
fwait
jb
jg
les
loop
fmulp
pop
aaa
test
cmc
ret
movsl
dec
stos
pop
in
mov
adc
fimull
pop
xor
inc
leave
popa
push
out
jbe
negb
sub
xchg
insb
rorl
push
mov
fbld
push
jge
dec
fists
cmpsl
ljmp
jnp
and
jecxz
xor
es
scas
int3
test
orb
das
jae
xor
push
push
je
xor
inc
inc
mov
mov
cli
jb
insb
xor
out
shlb
push
lcall
mov
xchg
neg
roll
and
adc
jnp
push
xchg
insb
test
jae
or
iret
sub
lcall
out
rol
mov
inc
mov
lcall
fwait
aas
add
mov
adc
push
enter
push
aas
sbb
repz
dec
int3
mov
dec
dec
inc
std
mov
push
ret
pop
pushf
imul
pop
adc
popf
ss
scas
sbb
mov
pop
jbe
clc
dec
jp
xchg
pop
orl
add
ja
daa
jecxz
outsl
xchg
pop
cmc
push
cmc
test
mov
sbb
mov
aas
xorl
cwtl
xor
cmp
sub
sub
shl
and
or
push
push
mov
lahf
add
inc
lock
jnp
out
scas
fildl
jl
lea
outsl
scas
out
and
outsb
repnz
dec
les
sub
ljmp
test
xchg
pop
into
dec
bound
xchg
das
aaa
test
cltd
mov
sub
xchg
mov
dec
mov
imul
mov
mov
xchg
imul
test
pop
sub
fildl
add
sahf
jmp
dec
xchg
jbe
push
divl
xor
pop
ficoml
pop
fwait
dec
ss
or
mov
arpl
pop
inc
in
mov
jb
negb
mov
cmpsb
mov
pop
jno
push
ja
inc
mov
out
jmp
mov
in
adc
sub
cs
pop
fdivs
movsb
repnz
ljmp
sub
dec
leave
repz
fstps
jno,pt
fcmovne
cmp
in
xor
inc
pop
movsl
addl
mov
mov
jge
pushf
aam
and
aas
xor
out
mov
ret
ljmp
sub
inc
pop
push
cmpsl
push
or
mov
mov
pop
and
cmc
inc
mov
out
dec
sub
test
xchg
mov
les
jp
cli
or
gs
movswl
flds
push
jmp
std
adc
xor
jne
ds
mov
jbe
cld
mov
dec
xor
outsb
sbb
es
push
sbb
xor
std
outsb
outsl
test
push
fldt
push
cmp
cltd
cld
daa
add
sub
mov
rcll
ja
in
push
in
aas
pop
test
mov
dec
jo
std
movsl
mov
jp
call
fisubrs
mov
mov
popa
add
push
ja
push
cwtl
adc
push
subb
xchg
stc
cwtl
fimull
das
movsb
out
out
pop
sbb
push
or
sbbb
sub
adc
jmp
fdivrs
je
jb
adc
jno,pt
and
repnz
pop
dec
push
out
pop
xchg
jmp
sti
iret
push
idivb
sub
jns
xchg
rol
cmp
lods
test
mov
sub
mov
and
adc
cmp
lea
les
sbb
mov
cld
mov
jge
into
jnp
in
push
xchg
mov
cmp
mov
push
popw
mulb
sub
cmc
ret
add
outsl
fwait
mov
popf
xor
repz
ja
add
push
dec
ret
and
ret
sbb
popa
imul
int
fcompl
add
mov
push
js
add
inc
mov
sub
adc
outsb
dec
fndisi(8087
ret
add
testb
push
sbb
iret
addr16
test
push
mov
mov
cwtl
mov
dec
shll
push
rclb
xchg
cs
add
add
inc
lret
outsb
push
or
jo
jnp
mov
mov
lea
loop
stos
push
xchg
dec
out
sbb
gs
jbe
xchg
cmpsl
out
and
ficoms
mov
ret
ljmp
mov
pop
in
mov
add
add
cmpsl
testb
push
fisubs
or
stos
enter
rolb
rcll
xchg
jnp
mov
enter
not
lcall
loop
lock
and
in
sbb
adcb
out
movsb
pop
dec
sub
lds
xchg
fmuls
add
into
push
cwtl
dec
push
dec
jno
aad
pop
sub
js
fwait
dec
fildll
shll
push
cmp
gs
fdivl
je
mov
sub
pop
cmp
mov
cmp
hlt
push
ds
push
mov
adc
adc
inc
sub
add
add
jnp
pop
stc
ret
mov
jo
and
inc
add
xor
repnz
ss
shlb
pushf
in
mov
ss
loope
cmp
dec
jb
imull
sub
outsb
xor
pop
pop
sbb
mov
fisubl
mov
inc
xchg
jno
add
xor
xor
dec
arpl
enter
add
jns
add
cmp
mov
outsb
es
sbb
stc
test
cmp
xorb
mov
pushf
popa
js
out
add
pop
pop
xchg
push
mov
in
xor
push
insb
push
dec
xor
push
fiadds
xor
int
inc
mov
sbb
clc
lods
adc
inc
add
test
test
loopne
mov
jbe
scas
fstps
jecxz
mov
add
cltd
add
sbb
mov
pop
mov
scas
jbe
aad
pop
pop
sbb
in
sbb
aas
pusha
inc
pop
jle
xor
nop
and
dec
cs
popf
pop
push
clc
shl
mov
loope
or
call
inc
shll
dec
test
mov
mov
movb
mov
lds
in
movsb
xor
xor
dec
movsl
mov
into
mov
dec
dec
push
pop
test
and
daa
adc
mov
xchg
int3
mov
loopne
xlat
es
sbb
outsl
sub
sbb
mov
sub
add
xchg
cld
push
add
mov
movsl
test
pusha
jae
and
dec
out
push
cmp
or
cmp
ljmp
sbb
cltd
das
ret
jmp
in
sub
lret
jno
stc
leave
pop
movsl
mov
ja
shll
sbb
and
add
int3
iret
mov
sbb
hlt
pop
out
xor
fbld
sbb
das
dec
fst
dec
fcomps
xchg
scas
xchg
pop
jmp
jle
mov
xchg
mov
sub
xlat
lahf
mov
test
mov
testb
out
add
xor
or
sub
mov
xor
int3
loopne
emms
cmpsb
pop
mov
out
dec
jg
push
add
pop
repnz
test
push
add
mov
pop
mov
sbb
lret
ljmp
lret
dec
loop
xchg
sar
xchg
inc
ss
pop
es
push
rclb
jecxz
xchg
jl
les
arpl
cmp
repnz
add
mov
pop
in
mov
leave
jge
and
ret
pop
das
add
or
mov
or
ret
stc
arpl
loopne
jnp
xchg
scas
push
test
jg
pop
scas
repnz
cli
pusha
push
sbb
xor
insl
pop
push
cltd
icebp
sub
xchg
push
jo
xchg
sub
jp
loopne
mov
out
lea
dec
or
andb
sub
mov
lods
sub
inc
adc
mov
push
mov
popf
mov
sbb
jle
pop
xor
insb
mov
add
mov
push
mov
jp
pop
std
loop
push
or
jle
xlat
dec
add
xor
in
dec
cld
or
xchg
push
adc
xlat
mov
lds
push
and
fmull
adc
mov
or
or
xlat
pop
shrb
sub
lret
hlt
fdivrl
out
mov
sub
mov
jp
cmc
dec
or
filds
ret
dec
idivl
mov
push
adc
jae
sti
sub
mov
inc
jge
inc
mov
add
outsl
fistpl
dec
popa
add
iret
hlt
insb
push
pop
adc
fsubrp
icebp
cltd
lea
hlt
or
sti
pushf
iret
xchg
sar
pop
jbe
lds
push
xor
int3
cli
mov
outsl
add
call
repz
jecxz
add
adc
mov
mov
or
popf
add
test
data16
push
dec
adc
clc
mov
add
pop
mov
fisubrl
mov
lea
sar
xchg
add
lret
mov
pop
mov
and
sbb
pusha
in
sub
adc
push
jl
stos
sbb
inc
inc
push
mov
pop
pop
movsl
or
cld
adcl
mov
imul
out
popf
stos
call
sub
dec
add
enter
lods
mov
sub
add
sbb
andb
ljmp
push
inc
test
xchg
inc
cltd
in
fcompl
popf
fcomi
int3
mov
or
mov
mov
xchg
outsb
jo
sbb
nopl
out
xor
mov
pop
mov
pusha
or
jg
arpl
mov
sbb
or
imul
clc
sub
cmc
out
xor
lcall
inc
cmp
lods
cltd
jmp
sbb
or
push
shlb
repnz
jmp
jle
repz
outsl
loopne
push
sbb
out
test
dec
fsubrs
mov
sahf
xchg
jp
xorl
xchg
and
jo
aaa
test
jae
arpl
xchg
adcl
mov
push
add
fisttps
jnp
xchg
stos
repz
push
std
aad
inc
test
sbb
jnp
xor
xor
mov
adc
mov
es
pop
mov
xor
mov
sbb
fs
sahf
divl
pop
test
shrb
out
sbb
xchg
cwtl
adc
xchg
aas
loop
sti
iret
movsb
jns
mov
pop
push
loop
fstl
in
jo
fbstp
xor
test
test
push
pop
das
shl
inc
bound
pop
iret
js
ss
or
inc
and
aam
int3
rcrl
mov
mov
pop
adc
mov
scas
mov
dec
aaa
sti
dec
repz
js
imul
outsb
mov
fwait
add
rol
cwtl
dec
cmpl
pop
sub
jo
pop
incl
cwtl
push
xor
push
xlat
rcll
xchg
pop
cmp
pop
rdmsr
xchg
xor
and
shll
jg
mov
mov
aad
lahf
and
jb
dec
sbb
add
lods
hlt
mov
push
and
xchg
mov
sub
inc
jb
inc
pop
jmp
inc
sub
jo
sbb
std
or
sub
add
dec
data16
daa
mov
lds
adc
std
adc
sub
mov
pop
stc
aam
xor
decb
or
in
fdiv
mov
push
mov
add
test
xchg
push
ror
inc
mov
and
fsubs
lods
cmpsb
insb
inc
mov
sbb
jecxz
xor
rorl
xor
mov
mov
arpl
test
es
sub
dec
and
cli
adc
in
mov
sub
push
mov
and
mov
push
or
and
pusha
sbb
mov
aad
sbb
pop
andl
pop
addb
mov
ss
fcmovnbe
sbb
xor
mov
push
sub
stos
outsb
xor
daa
inc
xchg
mov
jmp
outsb
adc
or
inc
lret
addr16
dec
outsl
mov
sub
pop
inc
test
mov
mov
or
repnz
hlt
and
movsl
cmp
jae
insl
cltd
push
lods
cmp
outsb
test
inc
xor
add
sub
push
pusha
mov
push
pop
inc
test
push
aas
imul
addr16
scas
cwtl
lcall
addr16
les
and
mov
adc
lret
lea
in
lds
cmp
sub
push
repnz
mov
popa
movsl
add
jl
gs
fiadds
xor
ss
sbb
lret
rcll
out
add
in
add
and
out
pop
call
gs
jg
cld
and
daa
inc
out
inc
rorl
shr
sbb
add
pop
adc
xor
add
aas
pop
nop
pop
dec
rolb
jnp
add
pop
mov
sub
push
sbb
in
add
aam
xchg
fistpll
stos
pop
adc
js
mov
jns
data16
jle
sbb
xor
ljmp
xchg
wbinvd
xor
test
loope
adc
xchg
push
mov
push
sub
pushl
out
adc
daa
push
cmp
sarb
ds
push
adc
sub
and
jbe
xchg
mov
loope
int
mov
mov
stos
push
sbb
std
mov
cmp
fincstp
or
cmpsb
imul
push
cld
add
stc
shll
fnstcw
jbe
mov
xchg
test
xor
in
repz
rcrb
xchg
ret
and
mov
enter
lods
sti
notb
outsl
pop
daa
cmpsb
jl
and
dec
popa
add
int
xchg
in
stos
push
jne
loope
rcrl
inc
jbe
je
les
rcll
in
jae
jae
push
and
cmp
adc
clc
lret
lret
in
and
clc
push
cwtl
mov
insl
or
push
adc
xor
inc
sbb
fcompl
inc
push
jp
mov
cmpl
mov
arpl
shrb
xchg
add
adcb
jecxz
mov
bnd
je
cmp
xchg
ja
and
sbb
nop
loopne
ret
jecxz
xchg
push
lock
xorb
addr16
mov
lds
lea
aad
les
ja
adc
popl
jge
mov
mov
jne
mov
fisubs
adc
mov
call
ficoml
js
add
mov
mov
push
and
shll
ja
xchg
xchg
in
inc
and
aas
push
iret
cs
xchg
sbb
mov
addr16
jnp
jl
fiaddl
mov
cmc
xchg
leave
push
ds
sub
pop
sub
pop
push
dec
or
dec
jecxz
lds
mov
sbb
mov
aaa
mov
inc
addr16
mov
rcrl
inc
ljmp
mov
push
shrb
xchg
jo
push
sub
and
pop
mov
ja
sbb
movsl
dec
or
jb
jnp
ljmp
mov
stos
push
push
aad
filds
je
jl
lahf
repnz
mov
pop
and
mov
mov
sub
icebp
dec
test
inc
fsubl
fstpt
and
push
mov
shll
pop
jl
movsb
cltd
rcr
out
sti
andb
or
dec
call
sub
dec
testb
jp
sub
lcall
and
push
mov
insb
pop
or
stos
js
mov
sbb
push
popa
mov
mov
mov
push
cltd
cmp
ret
sub
dec
adc
or
pop
mov
mov
cltd
cmp
jle
cli
pop
stos
lret
mov
data16
test
inc
xchg
lods
cwtl
mov
xor
cwtl
fisubs
data16
pop
xchg
shlb
das
nop
repnz
es
jnp
mov
add
cmpsb
ja
jmp
inc
fs
mov
dec
leave
push
adc
adc
popa
cmp
sub
int
jle
fadds
and
mov
imull
repz
jl
xor
push
add
jmp
fists
cmp
jg
rorl
pop
fwait
pop
adc
mov
ror
sub
or
fiadds
cmpsb
stos
es
jmp
jg
dec
in
imul
js
fldcw
test
pop
fcomip
jns
cmc
int
loope
lcall
sub
dec
adc
inc
inc
mov
shlb
mov
push
xchg
pop
pop
ds
jp
mov
clc
push
and
inc
cmc
xor
push
inc
xor
sub
mov
mov
pop
or
adc
pushf
pop
cmp
dec
mov
sbb
or
inc
xchg
push
sbb
mov
xchg
iret
es
rol
sbb
jnp
stos
jnp
mov
cmp
enter
sub
bound
shlb
int
xchg
and
push
or
arpl
in
repz
aam
lock
push
mov
out
add
push
mov
adc
fwait
mov
js
jno
bound
sbb
or
dec
and
xchg
out
popa
push
sbb
mull
and
fnstenv
push
stos
mov
mov
into
pop
fwait
or
cmp
sbb
jmp
cwtl
adcl
ljmp
das
ljmp
push
in
add
stos
or
test
dec
repz
sbb
push
push
cwtl
sahf
xchg
stc
shll
push
pop
xor
lcall
cmpsl
xchg
pop
je
js
xchg
sub
ljmp
mov
int3
cld
xchg
daa
mov
inc
jae
and
mov
cmp
hlt
dec
cmc
sbb
or
repz
sbb
clc
stos
iret
and
movsl
pop
xor
inc
repz
cmp
iret
pop
popa
xor
pop
mov
mov
bound
mov
fcmovbe
aad
adc
or
icebp
movsb
das
testl
mov
and
mov
sbb
pushf
pop
and
jo
sub
cmc
scas
test
xor
ss
das
push
or
in
pushf
rol
daa
pop
mov
lea
lahf
mov
mov
clc
pop
sahf
es
pop
insl
aaa
ret
ljmp
dec
cmp
pop
cwtl
pop
add
rcrb
shl
add
les
xor
lcall
stc
push
push
jnp
fwait
jl
in
mov
or
mov
adc
dec
and
adc
lcall
mov
mov
xchg
fdivrp
jne
sbb
into
cltd
in
aaa
xlat
movsb
adc
subb
mov
outsl
xor
out
test
ret
in
mov
mov
cmp
cs
inc
flds
leave
jne
jl
mov
repz
outsb
jne
xor
push
clc
lds
sub
adc
loopne
js
bound
inc
dec
jp
or
dec
sti
xorl
push
jo
dec
pop
fidivrs
jns
leave
loope
out
cmp
cmp
cwtl
add
xor
sub
xor
mov
cmp
pop
mov
cli
sbb
sub
arpl
mov
popa
mov
frstor
sub
jnp
dec
cmovnp
or
cmp
cmp
aad
sbbl
xchg
inc
aad
push
push
push
sub
jne
ds
jbe
lea
pop
mov
arpl
dec
int3
xor
adc
repz
lret
popf
bound
outsl
fidivrl
and
pop
fisubrl
popf
fwait
lahf
enter
inc
ja
cmp
sbb
push
sbb
subb
adc
jg
add
jns
xchg
mov
xor
inc
xchg
pop
xchg
pop
mov
nop
addr16
xor
mov
jnp
imul
fldcw
push
popf
dec
shll
loop
dec
push
push
mov
test
push
xchg
mov
sub
dec
xchg
mov
sti
xor
sbbb
pop
arpl
push
inc
fildll
pop
popf
or
dec
add
xlat
push
sub
xor
xchg
lods
jne
cmpsl
mov
divb
mov
loop
icebp
and
add
enter
inc
aaa
aas
adc
mov
scas
aam
and
adc
fldt
mov
adcl
das
pop
adc
and
xor
sbb
test
pop
adc
push
scas
cmp
or
stos
xchg
int
jo
cld
daa
loope
sbb
add
lahf
clc
xchg
leave
and
popl
out
addl
sub
lods
add
rcll
adc
clc
push
jmp
and
movsb
push
jge
mov
add
std
adc
movsl
rorl
cltd
nop
sub
aam
xchg
pop
jmp
pusha
push
add
mov
call
and
aaa
push
mov
push
jmp
sub
call
frstor
ss
push
mov
cmc
or
push
jmp
and
es
inc
jns
jo
out
push
add
jg
cmp
lahf
aad
repnz
lret
test
or
push
inc
sbb
sbb
in
sysret
or
sub
shll
std
fistps
push
ret
loop
mov
add
push
push
xor
fmul
clc
push
pop
int
dec
insl
adc
dec
or
dec
jb
jmp
jno
fisttps
pop
sub
pop
shll
pop
inc
or
lea
push
std
push
mov
ret
filds
sti
clc
push
jle
pop
stos
into
sahf
push
fists
mov
ljmp
sarb
test
insl
sbbl
pop
xchg
fildll
inc
mov
lock
push
lds
adc
xchg
and
mov
sbb
daa
popf
paddb
loope
xchg
popa
jecxz
push
std
xchg
lret
pop
xchg
dec
ds
loopne
imul
lcall
sub
adc
xchg
jl
cmp
and
mov
daa
xchg
cli
ret
jns
sub
aas
mov
sbb
jmp
xchg
mulps
jl
mov
push
xchg
in
cmp
dec
fildll
xchg
mov
shll
jne
movsb
mov
aam
push
stos
or
pop
mov
xchg
enter
sbb
dec
mov
es
fildl
pop
pop
mov
jg
jns
mov
inc
fidivrs
lea
jecxz
dec
test
cmpb
cmp
or
sbb
lahf
sub
data16
in
mov
loop
jbe
xchg
das
lods
jno
stos
ret
hlt
and
xchg
int
mov
mov
or
cmp
dec
sahf
pop
xorl
arpl
test
out
cmp
cltd
jbe
imul
xchg
arpl
pop
clc
aad
push
fildl
fisttpll
je
mov
jle
loopne
sub
lcall
lods
or
mov
mov
cmp
dec
lock
pop
in
sub
xchg
movsl
xchg
stos
or
dec
inc
sub
add
aas
cmc
inc
das
push
mov
ret
les
push
out
insb
push
pop
ja
ljmp
mov
or
loopne
xchg
jbe
and
push
xchg
xchg
or
outsl
jns
dec
test
or
popa
pop
cwtl
sub
outsb
js
sbb
or
pop
sbb
add
lods
hlt
repz
dec
and
iret
lds
xchg
sbb
out
repz
dec
push
sub
mov
mov
stos
lahf
insl
popa
mov
jmp
outsl
fcoms
daa
testl
adc
push
mov
add
popf
inc
mov
or
inc
mov
dec
int3
es
pop
cli
fstpl
clc
xorb
into
cmp
mov
push
int3
movb
mov
lahf
sbb
mov
fs
pop
out
sub
loopne
aas
mov
sub
pop
pop
dec
nop
rorb
dec
mov
js
icebp
xorl
jbe
mov
jg
repnz
das
cmp
lock
mov
mov
xchg
out
add
and
xor
repz
add
int
sub
and
inc
inc
or
mov
xchg
xor
mov
das
add
push
mov
loope
mov
dec
in
jp
mov
push
out
lret
and
jb
xchg
call
jne
add
or
push
pop
into
mov
sar
das
lods
fildl
call
jp
sbb
into
mov
test
nop
xchg
ret
in
aam
fdiv
cld
int
rcrl
in
in
push
aad
shll
popa
das
dec
xor
lock
sbb
cmp
fiaddl
into
inc
aam
add
or
inc
inc
pop
shl
test
repnz
daa
fiadds
add
scas
mov
movsl
scas
cmc
xchg
sbb
cmpl
mov
cmovb
jae
outsl
fimull
dec
or
jae
mov
sub
mov
sbb
stos
ljmp
jns
imull
pop
dec
inc
int
sbb
mov
callw
xchg
mov
and
je
int3
inc
sbb
inc
pop
mov
lea
loop
ret
inc
jnp
lret
lcall
hlt
dec
dec
pop
mov
and
addr16
daa
jae
aam
cltd
fdivl
ljmp
mov
mov
flds
cmp
inc
add
dec
adc
dec
fiadds
cmp
sbb
adc
decb
jns
ljmp
and
jmp
fsub
mov
das
hlt
push
mov
int3
mov
sub
jo
mov
test
pop
fcmovbe
out
gs
adc
leave
or
std
push
inc
cli
xchg
or
fsubrs
int
cmpsb
and
xorb
addr16
les
sbb
push
xchg
negl
push
mov
out
cmpsl
cld
bound
push
stos
pop
dec
xchg
ss
stc
iret
adc
lods
dec
sti
mov
jo
mov
pop
lock
cwtl
and
adcl
or
fsub
roll
pop
push
pand
mov
push
pop
pop
mov
and
sarb
mov
inc
pop
lret
sub
mov
addr16
daa
lahf
dec
and
push
dec
arpl
insb
add
xchg
enter
lods
fists
sahf
das
pushf
decl
adc
pop
add
xor
enter
adc
xor
mov
cli
pop
test
lahf
pop
mov
divb
repnz
les
jg
xchg
sub
push
push
and
sbb
adc
inc
mov
cltd
sub
mov
aad
mov
sub
mov
add
mov
mov
movl
pop
push
gs
jno
pop
hlt
out
sti
add
add
bound
stos
adc
loopne
adc
movsl
mov
pushfw
scas
lods
adc
mov
mov
lods
subl
enter
loope
inc
sub
pop
cmp
icebp
cli
std
mov
pop
and
fcompl
sti
mov
sarb
sbb
inc
xchg
jg
shll
pop
jp
sahf
mov
scas
mov
mov
lret
or
xchg
enter
adc
xchg
dec
lods
sub
test
xchg
dec
in
mov
aas
in
push
sub
push
lahf
lcall
sub
cld
mov
sbb
ss
inc
sbb
dec
xor
xorl
jge
cmc
jne
jle
lods
rorl
push
sub
push
xor
xor
sub
rcll
mov
xchg
mov
mov
xchg
mov
cmp
jb
dec
fsubrs
dec
jl
mov
sbb
insl
dec
iret
cmp
dec
ja
fdivs
test
ret
ljmp
push
fldt
jecxz
mov
pop
mov
add
jnp
sub
shlb
movsl
and
fcomps
or
jmp
and
add
js
mov
divb
jl
decl
loope
stos
adc
lahf
jns
les
sub
jg
js
aaa
and
sahf
jg
jle
out
fucomp
lea
mov
lods
insb
cmp
js
or
mov
mov
test
xchg
jmp
lods
dec
dec
cmp
mov
shll
ror
repz
fcoml
les
push
mov
sbb
divb
roll
and
addr16
mov
xchg
jmp
jo
cmp
sub
daa
mov
xor
popl
mov
test
stos
push
pusha
aam
cwtl
ret
lds
jo
and
loope
pusha
mov
or
movsl
adc
inc
xchg
push
test
scas
xchg
repnz
mov
test
mov
fildll
cld
dec
ss
outsl
lcall
daa
or
fnsave
cmp
aaa
push
movsl
stos
arpl
sbb
fcmovbe
cwtl
fisubrs
add
out
popf
mov
push
adc
negl
dec
out
lods
jmp
ljmp
or
push
and
aaa
fldt
jmp
lahf
add
jne
in
std
test
andb
mov
cli
scas
stos
mov
notl
cmp
lock
inc
cmc
imul
mov
sar
or
cmc
jns
mov
out
dec
popl
mov
sbbl
rolb
sarb
xchg
in
adc
mov
xchg
pop
outsl
inc
icebp
in
adc
xchg
mov
lret
scas
lods
xor
xor
nop
jp
test
add
fs
mov
push
jnp
jg
je
lret
js
add
jnp
sub
sbb
repz
xlat
jg
mov
jmp
repnz
dec
out
inc
mov
mov
cli
or
xor
pop
adc
fcomi
and
xchg
outsl
aam
mov
jae
fcomip
arpl
fistps
inc
es
aas
ja
push
jo
ja
call
cli
add
into
pop
rolb
movsl
mov
dec
addb
fimuls
sub
mov
insl
mov
pop
sbb
mov
dec
add
lret
xor
inc
orl
flds
or
jo
imul
xlat
scas
push
sbb
sbb
enter
push
or
hlt
mov
pushf
add
and
xchg
cwtl
shl
mov
std
mov
aam
xchg
xchg
mov
push
insb
push
sub
add
cmp
add
in
aad
daa
ret
mov
jmp
fs
jmp
xor
mov
pushf
jmp
cli
push
bound
jbe
xor
aam
inc
cmp
clc
or
sbb
sub
mov
mov
push
cli
add
adc
ret
push
sbb
int
sbb
insl
repz
cli
cmp
sub
mov
scas
lock
std
sbb
push
fidivrl
imul
mov
scas
xchg
adc
xchg
mov
data16
inc
loop
std
cld
mov
push
cmpl
ret
mov
inc
push
inc
mov
movl
sbb
imull
movsl
rcll
enter
mov
or
mov
push
sub
jno
repnz
sub
icebp
cld
insb
mov
into
sub
or
loopne
lea
stos
pop
pop
or
pusha
adc
mov
int3
dec
mov
popl
jo
aas
dec
lcall
mov
cmp
dec
addr16
ret
bound
push
icebp
sbb
pusha
ja
repz
shlb
and
repnz
arpl
fstl
pusha
add
mov
bound
mov
xor
add
roll
sub
test
push
lret
push
pop
and
xchg
mov
movsl
jmp
ss
inc
repnz
das
mov
or
fildll
sti
pop
shlb
andb
mov
jbe
ss
mov
test
inc
cmc
arpl
jne
into
jbe
in
je
test
dec
inc
mov
or
xchg
test
dec
xor
lock
pop
mov
lahf
ljmp
push
daa
jae
shrb
sub
std
icebp
mov
call
jo
xchg
test
stc
jl
mov
sbb
lock
add
lea
or
cmp
test
push
jns
lods
sub
push
adc
add
mov
mov
sbb
nop
pop
xchg
out
lahf
lock
adc
call
jnp
push
or
int
addr16
xchg
decl
push
div
adc
xchg
cmc
icebp
add
push
sbb
push
adc
pop
dec
dec
mov
aad
fcmovbe
add
mov
fs
and
scas
add
xchg
push
rorl
cltd
aaa
dec
sub
out
and
fmul
mov
pop
dec
inc
jbe
mov
sbb
sub
and
push
andl
add
and
fbstp
andl
jmp
iret
mov
std
inc
inc
jmp
mov
negl
jl
and
orl
adc
orl
or
outsl
iret
pop
jbe
movsl
xchg
nop
rcll
out
add
xorl
in
fwait
stc
addr16
inc
jbe
rcl
cmc
insb
into
out
mov
mov
mov
int
xchg
fs
and
xchg
push
mov
mov
cmp
ljmp
test
push
movsl
loope
push
ret
push
loop
fcoms
rcr
and
repnz
in
insl
mov
jo
mov
bound
out
filds
je
icebp
dec
jne
adc
dec
xor
jecxz
dec
add
mov
jmp
movsb
sub
mov
xor
out
inc
xor
mov
push
std
pop
mov
mov
jbe
cmp
fwait
pop
bswap
xchg
idivb
mov
adc
mov
dec
adc
add
icebp
mov
ds
lods
imul
jbe
inc
rorl
add
mov
adc
aam
jge
xor
je
lock
test
sub
xor
loope
in
cmc
lock
sub
cs
and
mov
lahf
fldl
pop
aam
lahf
mov
jecxz
repz
dec
jbe
mov
cmp
push
orb
fstps
inc
mov
data16
repz
insb
adc
push
add
add
add
fsub
add
arpl
xlat
sub
int
jl
inc
push
das
sahf
add
loop,pn
cmc
stos
roll
cld
test
or
test
mov
jle
cwtl
mov
jge
jb
mov
roll
cmc
and
decl
mov
insl
xchg
mov
xchg
sub
push
fistpll
int
push
imul
lcall
js
fbstp
adc
rol
dec
sahf
movsb
daa
pop
fnstcw
push
push
cmc
enter
mov
int
pushf
dec
jp
into
mov
in
adcl
mov
pop
mov
movsl
stos
lods
mov
in
mov
pop
loope
ja
sub
in
cmp
jle
call
mov
xor
mov
xor
jl
fs
cli
pop
repz
aad
or
push
outsl
xchg
fsubr
push
mov
outsl
push
or
lock
repnz
aam
fimuls
add
aam
mov
outsb
pop
out
xor
inc
into
sbb
daa
jae
pushf
adc
rorl
or
inc
nop
sar
sbb
jmp
dec
ss
cltd
adc
mov
hlt
cmp
push
dec
dec
mov
lods
inc
add
xorl
out
mov
adc
test
enter
sbb
dec
or
divl
into
inc
sub
jbe
xchg
ljmp
jmp
movsb
cld
cs
inc
mov
fadds
and
and
jecxz
in
sbb
lret
vpsrlq
pop
pop
std
or
in
shll
sub
push
in
push
push
jns
in
in
call
das
cmp
pop
lods
frstor
mov
cmp
sbb
mov
aas
push
ja
hlt
clc
cli
data16
mov
shl
lret
add
addr16
sub
loopne
dec
jns
rorl
repnz
cmpsb
mov
lret
out
lcall
inc
mov
push
or
shll
fnstsw
in
mov
sbb
movsb
js
aad
repz
in
rorl
and
cltd
xchg
ljmp
std
jg
int3
shlb
and
push
imul
cmp
lods
jo
add
xchg
fmull
stos
xor
mov
ljmp
imul
aad
sbb
fbstp
dec
popf
arpl
negl
out
out
jecxz
out
pop
add
pop
pop
popf
mov
call
or
pop
cmp
xor
jae
or
cmc
sbb
mov
loop
mov
fcmovne
int3
lods
mov
aaa
jne
xchg
pop
or
and
shlb
hlt
sti
mov
or
xor
jmp
daa
pop
cmp
mov
mov
cmp
test
or
add
shl
loopne
push
aam
inc
stos
cmpl
push
arpl
in
pushf
fcomps
mov
test
sbb
xor
pusha
add
xchg
push
popf
add
fnstcw
add
out
pop
add
fs
aaa
lods
mov
dec
xchg
jb
xlat
sahf
and
dec
push
sbb
jne
scas
and
adc
int
mov
add
mov
cmp
mov
mov
push
insl
out
lret
mov
or
and
hlt
mov
add
add
or
and
sti
jecxz
int3
xor
dec
sub
pop
fildl
cmp
adc
jne
int3
inc
movsl
push
in
dec
into
pop
xor
push
xor
pop
gs
dec
sbb
sub
pop
adc
or
pop
or
and
aad
xchg
mov
addr16
cli
fimuls
insb
mov
idivl
adc
mov
pushf
dec
rcll
into
fstpt
movsl
dec
aaa
lret
cwtl
roll
fistl
add
imul
mov
fistps
xchg
lcall
or
js
push
das
loopne
push
inc
cmp
iret
push
mov
dec
dec
dec
and
push
pushf
gs
pop
rcrb
test
sub
sub
sub
push
pop
imul
in
jns
cs
xchg
dec
mov
loop
xor
and
and
mov
lahf
cmpsl
jmp
lds
and
sarl
add
cmp
popf
mov
rolb
push
push
or
ljmp
pop
lock
gs
fcoml
xchg
and
pop
insb
mov
loope
outsb
fwait
cmp
adc
push
inc
sub
andb
std
sub
adc
lock
lock
je
cmc
mov
sbb
push
mov
push
fdivrl
jl
add
cmp
movb
xchg
arpl
icebp
shlb
push
pop
movsl
bound
iret
sub
mov
ljmp
scas
leave
jne
push
aas
inc
xchg
rorb
cmp
insl
iret
sub
sbb
and
xchg
mov
out
push
jmp
out
repnz
cmpsb
push
push
pop
push
jg
mov
sahf
fisubrs
ljmp
dec
and
inc
std
pop
insb
out
or
ret
xchg
push
mov
daa
and
cmp
dec
hlt
fisttpll
cli
or
sbb
scas
jg
gs
ret
pop
js
xchg
jp
or
jp
or
sub
insl
jnp
dec
ret
in
fwait
mov
adc
fnsave
and
jge
les
dec
add
mov
inc
jbe
fwait
lds
xchg
or
adc
mov
mov
out
inc
sub
jb
pushf
pop
inc
cltd
out
lcall
movsb
push
sbb
stos
cmpsl
loopne
int
pusha
cmpb
xchg
add
insl
cmp
adc
movsl
lock
arpl
inc
adc
fwait
dec
xlat
enter
cmp
cmpsl
adc
out
mov
in
mov
mov
adc
enter
lcall
jg
stos
daa
mov
fs
es
scas
push
mov
sbb
dec
sbb
xor
sub
ss
sahf
push
js
fwait
push
mov
pushf
adc
out
xchg
jns
xor
mov
lret
test
bound
push
push
sub
lock
faddl
inc
dec
jmp
fdivrs
push
js
push
mov
pop
scas
in
or
push
imul
stos
aaa
and
jl
cwtl
leave
jnp
int
testb
mov
xchg
lret
mov
cmp
lods
cmp
dec
adc
call
pop
loopne
aam
push
rclb
outsb
adc
dec
ret
cwtl
js
push
jns
cmp
stc
imul
sarb
rolb
mov
roll
call
popf
mov
mov
xchg
divl
pop
int3
bound
aam
inc
mov
test
sarl
cmpb
add
xor
jmp
roll
sbb
sbbb
loopne
fdivrs
jp
test
ret
dec
or
andl
das
jge
sub
es
cmp
cmp
xchg
test
sbb
mov
cs
jae
repnz
push
mov
or
or
sahf
shll
add
pop
cmp
out
pop
xlat
idivl
mov
cwtl
adcb
mov
mov
inc
dec
sbb
mov
cli
sub
subl
loopne
mov
sub
mov
dec
dec
and
lahf
stc
cli
dec
jnp
xor
ret
test
in
jp
arpl
push
into
add
mov
lock
jne
mov
out
aaa
movsb
adc
sahf
data16
sbb
rorb
jecxz
into
and
mov
mov
jb
test
out
and
stc
lods
clc
ret
push
add
in
mov
mov
push
mov
lods
jecxz
fstpl
repnz
arpl
push
add
push
mov
mov
stc
fcmovnbe
jg
mov
mov
pop
scas
je
mov
mov
pop
cltd
test
dec
mov
pushf
fcmovbe
mov
sarb
push
xor
sub
les
cld
sbbl
adc
pop
push
nop
dec
movsl
les
mov
sbb
das
xor
enter
pushf
mov
pop
push
pushl
pop
dec
fdivrl
inc
xchg
dec
lret
mov
jle
lea
fwait
mov
xor
mov
or
cwtl
jmp
inc
out
mov
ja
call
xchg
ds
xor
rorb
sti
and
ret
pop
mov
loop
sub
lea
fbstp
xchg
mov
pop
subb
mov
aam
mov
aad
add
dec
testb
mov
mov
push
fdivrs
push
add
or
pop
xor
jl
inc
sub
jl
and
sub
push
adc
ljmp
dec
cmp
data16
shl
sbb
push
fdivrs
xor
leave
cmp
pop
les
mov
lock
iret
sub
xchg
jp
in
cmp
mov
mov
scas
fs
pop
add
adc
icebp
imul
add
pop
in
stc
mov
outsl
and
mov
dec
imul
or
cltd
cltd
sahf
in
mov
push
and
add
stc
jo
outsb
pusha
sub
mov
lret
mov
jge
notb
mov
leave
lds
loopne
scas
dec
loop
sahf
inc
cmp
stos
rclb
lods
sahf
add
mov
xchg
jb
pop
xchg
jo
xchg
sbb
sbb
pusha
jns
xchg
in
cs
mov
aad
mov
cmp
popf
insb
push
int
leave
repz
push
into
repnz
xchg
xor
jl
push
enter
insb
adc
outsl
fcompl
xchg
shl
clc
pop
cmp
daa
bound
lock
mov
pop
loope
push
dec
and
xchg
jb
ljmp
jmp
dec
add
jmp
sbb
and
jle
mov
xor
je
mov
iret
scas
pop
mov
jg
mov
sti
mov
bound
and
out
lds
cmc
fiaddl
sub
pop
lret
je
idivl
mov
repz
cmp
out
jae
repz
push
mov
shl
fs
in
out
and
lret
iret
pop
or
adcb
jb
xchg
mov
add
aas
aam
sar
inc
lds
popa
jns
add
lahf
jge
push
cmc
stc
xchg
xorl
jae
scas
in
jge
inc
fcomps
out
pop
and
out
xorl
add
mov
iret
pop
mov
cmp
mov
sarb
xor
dec
mov
inc
sbb
mov
mov
sub
jecxz
js
cmc
int
aam
clc
dec
add
sub
jns
inc
fsubs
bound
fadds
mov
aad
das
shrl
iret
fnstcw
lahf
xor
jnp
adc
aas
or
cli
ljmp
push
mov
and
hlt
stos
testl
cltd
mov
sti
sub
out
adc
xor
adc
daa
ja
xor
mov
ret
rclb
dec
xchg
sbb
pop
ljmp
cmpsb
out
jmp
sub
inc
add
mov
xchg
dec
xor
push
push
mov
jns
dec
jno
aad
out
fldenv
dec
cmpsb
jl
and
js
xchg
shlb
mov
out
push
inc
mov
ja
icebp
ret
leave
pop
andl
lods
stc
mov
lds
aad
xchg
xor
mov
mov
popf
push
cmpsb
mov
insb
ret
aaa
mov
icebp
cmpsl
je
inc
jns
fnsave
outsb
mov
inc
gs
aad
jnp
ret
lds
and
xchg
mov
sub
and
test
add
ss
or
fsubs
in
mov
aaa
cld
jmp
push
insb
xchg
das
fistpl
pop
test
pop
sbb
popa
inc
rclb
repz
dec
lahf
scas
xchg
repz
daa
sbb
inc
outsb
mov
cli
lods
push
or
or
loope
xor
xchg
jmp
xor
decl
add
xor
idiv
or
enter
std
cmpsb
cmc
scas
fnstenv
pop
insl
arpl
test
mov
loope
addr16
mov
cmc
jg
movsl
popf
pop
or
push
jnp
cwtl
adc
jnp
and
int
jg
hlt
cmpsl
mov
aad
bound
sbb
cmpsl
mov
jbe
in
add
cmp
popf
or
cltd
jl
or
das
insl
fldl
jmp
mov
push
inc
insl
jl
outsb
xorl
adc
jg
shll
mov
and
xchg
adc
push
and
pop
jg
mov
sti
xor
push
inc
test
pop
and
pop
inc
dec
sbb
mov
inc
aad
cmpsb
jo
leave
adc
fisubrs
decl
and
adc
sarl
xlat
mov
push
test
aaa
shl
xchg
fldcw
into
push
cmpsl
je
rcr
fisttpll
lea
cmp
fisttpll
add
sub
pop
dec
movsl
inc
es
dec
lcall
push
std
mov
xchg
jb
ficoms
mov
add
lret
xor
loope
mov
xor
clc
out
adc
inc
lcall
jo
test
add
mov
mov
rorb
div
xor
cmp
sub
adc
add
jne
add
mov
lret
and
rcrb
loop
das
lods
out
repz
mov
lcall
bound
or
mov
stc
cmp
cmpsl
jle
push
sbb
setg
neg
xor
dec
and
mov
mov
std
mov
sbb
sbb
rcr
dec
movsl
adc
jge
mov
std
test
rclb
mov
mov
push
shlb
loope
sub
pop
mov
adc
adc
bound
inc
mov
cmpb
pushf
imul
pop
out
fcmovnbe
mov
orb
xchg
mov
outsl
cmp
out
int
arpl
pop
pop
sti
xor
cs
push
ja
cmp
cmpsb
adc
movsl
test
dec
clc
std
mov
es
leave
aam
mov
call
pop
pop
sub
push
inc
out
lods
scas
sub
or
pop
add
cwtl
adc
pop
js
sti
fdivr
fisubrs
mov
xor
test
pop
or
shl
cld
xor
movsl
cs
stc
xchg
clc
or
inc
cltd
shlb
inc
mov
cmp
aam
fisttpl
add
mov
inc
jae
mov
mov
dec
pusha
cmpb
sub
into
pop
cli
mov
mov
pop
scas
stc
sbb
dec
mov
movsb
pop
icebp
mov
inc
mov
out
and
fsubr
insl
push
lret
jnp
sub
dec
pop
and
sub
inc
in
jecxz
incl
sbb
sarb
sahf
loope
jle
out
test
cltd
push
xchg
mov
mov
out
cmp
cmp
jb
xor
inc
push
aas
into
inc
jnp
push
bound
jnp
shrb
dec
jno
mov
movsl
mov
jg
sbb
dec
jnp
in
jb
pop
lods
cli
iret
in
push
pop
jns
cs
and
out
movsl
repz
add
fsubr
jp
shlb
mov
test
jp
xlat
sub
loopne
cmp
xchg
xor
xchg
xchg
hlt
dec
mov
push
fbstp
push
clc
lahf
notb
xor
loope
jb
lcall
fwait
inc
cmp
les
push
iret
movsl
and
repz
xor
or
sub
mov
data16
mulb
cs
ljmp
mov
mull
mov
mov
push
fcompl
xor
fsubrl
dec
sbb
fimull
mov
sbb
mov
mov
fisubrl
mov
cmp
jg
orb
push
fdivl
mov
xor
cmp
and
arpl
in
les
pop
in
pop
flds
dec
sbb
cltd
je
adc
mov
mov
xlat
mov
push
scas
pop
inc
add
pop
mov
fbstp
and
xor
mov
sbb
cs
jg
xor
dec
cmpsl
mov
clc
mov
fadds
dec
int
push
inc
cli
loope
or
cltd
sbb
vmovupd
data16
cwtl
push
je
adc
cwtl
add
add
add
adc
add
inc
add
pop
add
pushf
je
add
dec
inc
add
pop
add
call
add
lcall
movsb
sbb
ljmp
fwait
sub
push
data16
test
pop
inc
jmp
add
push
sub
js
pop
int3
jge
push
pop
jle
sbb
ljmp
test
add
cli
je
add
push
pusha
cmp
mov
mov
inc
mov
aam
cmp
sarb
xchg
sbb
jb
xor
fmull
add
mov
mov
jp
hlt
fisttpll
inc
mov
mov
inc
xor
out
mov
daa
sbb
pop
xchg
out
mov
mov
add
push
mov
movsl
roll
pcmpgtd
mov
js
repz
testl
sti
jnp
push
or
xchg
inc
adc
and
mull
add
mov
adc
lret
outsb
xlat
or
mov
into
sbb
inc
bound
enter
jns
sbb
fwait
dec
fdivs
inc
out
test
stos
pop
pushf
jbe
pop
inc
pop
bound
xchg
fcmovbe
mov
movsb
lret
pop
sbb
scas
aam
jne
ret
push
aam
push
repz
pushf
rcrl
xchg
aaa
into
stos
cmc
repnz
xor
add
in
out
cmp
mov
insl
inc
fwait
jb
cmp
movsb
jae
mov
lret
inc
stos
ss
loopne
pop
sbb
sub
mov
push
xchg
fbstp
pop
xor
jae
jae
cmpb
inc
push
push
into
sbb
and
mov
pop
or
add
push
repz
sub
jno
imul
jg
jmp
fistps
push
jae
shll
ret
inc
jl
idivl
rclb
or
out
sub
fisttps
fsts
stos
repnz
jp
mulb
mov
dec
int3
mov
ret
jo
popf
inc
cld
jp
jns
pop
pop
loope
sbb
sbb
dec
xchg
aaa
jl
das
test
subb
push
pop
sub
mov
dec
cmp
shll
fldcw
ret
mov
inc
inc
lahf
jno
fcomi
push
cmc
int3
mov
stc
arpl
ret
mov
mov
sbb
adc
push
sub
loopne
sub
sbbb
das
sbbb
adc
mov
pop
mov
lds
das
sub
fdivs
add
rcl
cmp
push
les
jl
notb
xor
mov
leave
sahf
inc
adc
icebp
insb
bound
sbbb
ds
pushf
imul
stc
in
icebp
xchg
add
sahf
fstpt
scas
add
jecxz
rcrb
loop
jmp
insl
mov
inc
aaa
shr
pop
and
fs
test
inc
cwtl
arpl
je
out
jbe
lcall
jno
lds
xlat
lret
fisttpl
xor
lods
dec
add
push
jmp
push
xchg
push
sbb
mov
leave
push
out
stos
test
mov
jl
mov
jmp
movhps
pop
arpl
cmovns
dec
cmp
and
or
repz
hlt
jbe
xor
dec
int
ret
cmp
inc
mov
das
cmc
pop
test
inc
arpl
mov
int
mov
decb
ret
mov
out
and
adc
iret
and
jg
fisttps
mov
push
call
or
sub
out
push
mov
loopne
mov
jle
sub
leave
or
push
cmp
dec
mov
jnp
xchg
cmp
into
or
cs
mov
fwait
lea
mov
shrl
push
das
ja
notb
adc
call
sub
lcall
and
xor
inc
cmp
ja
jnp
sbb
lock
out
cmp
in
fstp
scas
jle
fcmovnu
cmp
xchg
test
jp
orl
imul
mov
mov
std
cmpsb
pop
addl
lahf
das
push
rcr
dec
jg
inc
cmp
es
cmc
fimull
sahf
js
sti
xchg
hlt
fbstp
push
movsl
xor
rorl
cltd
cmp
addr16
sub
cs
jg
rcll
aas
pop
out
scas
sub
mov
xchg
mov
fistpl
mov
adc
ret
rclb
mov
push
mov
fisubrl
or
jb
sbb
mov
cs
es
fbld
jns
pop
iret
fldt
mov
cmp
sbb
into
jg
lcall
or
rcl
xchg
test
xchg
push
inc
mov
bound
xorb
daa
sub
push
les
shl
pusha
jp
xchg
shl
sbb
add
or
int3
es
pushf
push
loopne
scas
les
fiaddl
mov
inc
test
insb
xchg
lds
idivl
sbb
icebp
test
dec
cmpsl
hlt
jmp
out
pop
daa
shlb
cmpsb
test
mov
mov
out
cmp
repz
or
das
fwait
push
lds
pop
fdiv
mov
lret
add
sub
or
insb
add
shrb
and
adc
scas
add
pop
cmpsl
jns
imul
pop
subb
adc
stos
xor
pop
adc
mov
jae
pop
lds
or
lret
dec
jle
inc
push
scas
push
cmp
fildll
dec
pop
sbb
adc
out
aad
testb
xor
aas
xchg
cmp
into
iret
ret
xchg
leave
and
jg
dec
pop
pop
sahf
add
jmp
iret
jae
xor
xchg
cmp
int
mov
pop
mov
arpl
fidivrs
or
in
mov
dec
dec
loopne
jge
rolb
cmp
aas
lock
xor
das
mov
and
ficoms
daa
aad
outsl
sub
shlb
mov
popf
pop
jle
idivl
arpl
int3
fs
inc
mov
leave
in
cs
jge
scas
xchg
push
mov
mov
jge
loope
cmp
pop
js
mov
cld
push
daa
cmp
lea
mov
fistl
add
ljmp
aad
cmpsl
sub
sbb
arpl
lcall
dec
mov
mov
cwtl
in
push
shl
imul
dec
bound
xor
mov
test
push
stc
mov
notl
in
xchg
cli
shll
fsts
fadds
fisttpl
mov
pop
iret
mov
mov
pop
lret
mov
out
jecxz
pop
adc
in
add
call
lret
fs
arpl
mov
xlat
cmp
cvtpi2ps
push
test
cmp
std
mov
imul
iret
stos
cmc
mov
inc
mov
aaa
pop
add
push
sbb
sub
aad
pop
sbb
push
and
rorl
fwait
sbb
fiadds
push
mov
or
dec
fistpll
sbb
push
push
jne
push
popf
push
mov
cmp
into
sti
lret
int3
lds
add
idivl
mov
xlat
mov
clc
jg
mov
push
xchg
cmp
popa
test
sub
pop
mov
repnz
xchg
in
dec
sbb
enter
lods
enter
inc
ficoml
call
xchg
mov
dec
jns
ljmp
mov
pop
adc
xorl
and
pop
mov
cmp
ja
push
xorl
int
insl
jne
pusha
xlat
and
sarl
aaa
pop
dec
ss
sbb
cmp
xor
shll
or
data16
popf
push
xchg
out
hlt
loope
cltd
push
sub
inc
nop
mov
in
divb
sbb
jne
dec
jecxz
inc
addb
fldt
inc
cmp
pop
sar
pop
ss
sub
lahf
add
mov
inc
sbb
mov
cmp
arpl
sub
or
pop
xor
xor
add
inc
xor
mov
add
adc
jmp
sti
add
cs
sti
add
movsb
sub
jmp
aad
and
imul
and
xlat
dec
movsl
fldl
adc
negl
mov
bound
mov
jb
inc
cmp
xchg
xor
fildll
lret
mov
test
es
iret
jg
das
or
subb
movsb
jg
and
push
nop
cmp
fstps
out
pushf
and
push
cmc
add
aas
adc
mov
es
lea
add
test
add
mov
mov
mov
mov
rclb
cmp
lock
dec
std
push
out
mov
inc
and
jmp
rcl
mov
inc
repz
js
push
mov
test
repz
insb
dec
sbbb
fisubs
cltd
and
cmp
mov
push
lea
fsubrs
repnz
xorb
test
aam
sub
adc
pop
pop
xor
test
ret
in
cld
cmp
mov
addb
ret
pop
dec
dec
inc
xlat
test
sahf
out
ljmp
or
or
cmp
out
and
rcrl
sub
push
adc
push
adc
inc
dec
into
xor
shlb
pusha
dec
in
mov
sbb
xchg
imul
test
js
inc
aas
fisubs
mov
aad
repnz
push
mov
mov
arpl
fisttps
sbb
cmp
adc
mov
loope
lret
inc
jecxz
jb
addl
jg
les
sbb
add
sub
mov
mov
lea
mov
fcoml
add
adc
andl
mov
mov
add
insl
fistpl
scas
push
cmpsl
test
xlat
aas
xchg
inc
mov
pop
daa
dec
pop
ret
add
lcall
or
idivb
rcr
jo
mov
mov
push
lds
dec
inc
jle
xlat
xor
popa
js
jle
cli
scas
out
add
stos
mov
and
xchg
jle
cmp
or
xchg
jg
aas
shrb
test
pop
pop
add
xor
push
sbb
ffree
fmull
cwtl
insb
mov
xchg
mov
sbb
in
test
pop
push
arpl
sub
dec
nop
or
inc
loope
notb
fildll
test
ffree
jge
inc
or
adc
jmp
and
into
add
fst
push
dec
ret
lahf
push
or
or
out
xorb
sbb
int3
rol
cmc
pop
pop
xchg
cltd
in
out
aas
xchg
mov
jle
wrmsr
test
testl
mov
fwait
lods
fwait
inc
inc
sahf
ljmp
in
adc
test
sbb
andl
mov
jb
mov
or
sub
mov
mov
cmp
cmp
cmp
sahf
cmp
or
sbb
pop
std
iret
push
add
xor
bound
fwait
jge
stos
fmuls
add
push
imul
repnz
sbb
ret
inc
dec
fwait
add
nop
test
fistpll
adc
xchg
stos
sarl
mov
pusha
test
sub
incb
lahf
xchg
jae
clc
stos
mov
sub
cmpsl
mov
inc
or
xchg
inc
bnd
fcoms
ss
mov
int3
stc
sahf
sbb
inc
xor
mov
dec
into
mov
lret
js
mov
add
pop
aam
test
pop
addr16
imul
orb
mov
ja
fs
or
inc
dec
andl
mov
jno
inc
outsb
daa
jecxz
xor
ljmp
cmp
inc
pushf
mov
nop
mov
mov
ja
mov
loope
aad
push
push
or
adc
cmc
cmpsb
xlat
jb
sub
adc
inc
clc
cmp
out
jne
add
adc
mov
mull
lcall
sub
ja
lcall
pushl
test
insb
in
int
push
ds
rcrl
scas
popl
xchg
es
inc
scas
imul
adc
dec
repnz
adc
sbb
aas
xchg
das
jecxz
pop
dec
test
movsb
mov
inc
lahf
mov
shl
push
mov
inc
aaa
scas
dec
push
sub
sbb
xor
push
ss
dec
add
jae
shl
push
ret
push
loop
inc
xor
and
js
dec
cmc
xchg
test
jnp
bnd
pop
push
insb
loop
cli
add
mov
daa
mov
fistl
push
mov
imul
outsl
std
xchg
xlat
jb
jbe
mov
stos
and
out
pop
pop
imul
adc
cmp
dec
sbb
xchg
push
adc
jo
in
rcrl
ret
lcall
sbb
jmp
cwtl
leave
fisubrs
jecxz
xchg
sub
fcomps
pop
mov
pop
push
pop
jae
pop
mov
push
push
mov
pcmpgtd
push
mov
lret
mov
xchg
xor
mov
divb
roll
mov
scas
xor
pop
sub
sbb
adc
mov
fisubs
push
inc
lods
nop
loop
fwait
sarl
lds
cmpb
inc
inc
jne
cmp
mov
xchg
add
cld
out
push
lods
push
pop
int3
xlat
bound
std
pop
mov
inc
bound
add
daa
add
mov
mov
mov
test
stos
push
jnp
cmp
cmpsl
mov
lret
push
rorb
mov
lret
daa
push
pop
jle
mov
inc
ret
or
lea
jecxz
dec
adc
fcmovnu
call
mov
cs
repnz
aaa
cmp
xchg
test
cld
mul
stos
pop
aam
mov
xor
mov
jge
mov
push
mov
ss
mov
arpl
dec
lds
imul
xchg
lret
jle
addr16
mov
lret
cld
nop
lret
repnz
or
mov
hlt
dec
mov
fcmovu
mov
and
daa
cwtl
fdivrs
sbb
jnp
es
or
rcrl
in
mov
ss
pop
inc
aad
or
mov
xor
cmp
je
pavgb
pop
mov
mov
mov
repnz
repnz
loop
cmp
test
pusha
test
mov
inc
pop
mov
stc
lods
dec
jb
arpl
nop
cli
test
or
xor
rorl
xchg
inc
push
sub
mov
sahf
push
mov
loope
jle
leave
jno
add
and
mov
jne
sbb
in
mov
aad
xor
mov
leave
and
es
or
cld
mov
push
inc
call
push
mov
rcrb
inc
push
push
arpl
leave
jg
filds
xorb
in
cmpsb
dec
fcompl
cmp
aad
fmull
jmp
fldl
aas
dec
lcall
push
and
movsl
lock
rcrb
inc
gs
mov
movsb
mov
add
xchg
add
shlb
dec
mov
jmp
dec
inc
jnp
repnz
xor
test
inc
pop
pop
inc
adc
lcall
mov
fsub
mov
push
ror
test
scas
xor
repz
jo
mov
cmp
mov
das
inc
daa
inc
push
scas
jo
inc
sub
push
pop
cwtl
bound
shll
push
out
mov
and
xor
sbb
pop
ds
aam
pop
es
repnz
push
test
sbb
ljmp
or
rcr
push
lods
sbb
cmp
sub
lret
mov
inc
jne
add
sbb
fwait
rclb
pop
and
lahf
dec
in
push
out
sbb
cld
dec
push
cld
xlat
sub
popf
flds
adc
sti
pushf
pop
jbe
mov
jnp
pop
cmc
lahf
xor
das
rol
hlt
dec
sub
mov
lea
aad
shll
outsl
shrl
je
dec
jmp
mov
mov
jne
incl
and
pop
popl
sarl
loop
push
adc
push
mov
iret
pushf
or
inc
fisttpl
adc
jno
jl
loop
in
cwtl
inc
inc
stos
xor
call
sbb
mov
or
pusha
into
imul
pop
pop
mov
rcll
fisttpl
mov
inc
mov
iret
and
and
mov
mov
rorb
outsb
push
lret
fucom
es
mov
adc
inc
sbb
or
iret
inc
lret
aad
repnz
popa
cmp
test
in
push
or
push
aam
cmp
inc
aam
xchg
je
sbb
mov
pop
push
jno
ss
add
mov
sbb
addr16
fiaddl
push
jl
sbb
loop
add
inc
inc
inc
xor
aaa
dec
or
jge
push
adc
lds
xor
jns
xor
leave
cmp
imul
pop
pop
nopl
dec
mov
adc
xchg
mov
dec
jns
pop
cwtl
mov
xor
cmpsl
ljmp
fdivl
push
clc
jo
inc
mov
out
push
lahf
cmp
inc
lret
add
push
add
fisttpl
into
mov
mov
dec
push
fistpl
std
push
fidivs
movsl
add
add
cmc
arpl
jge
add
ljmp
add
aas
arpl
add
sbb
fnsave
or
clc
outsl
xchg
into
adc
idivb
rcrb
jmp
cmpsl
adc
addr16
sub
push
popa
mov
inc
scas
addr16
movsl
and
mov
dec
cmc
jle
push
pop
dec
repz
jbe
cmp
cmp
addb
movsl
mov
and
outsb
push
iret
add
dec
popf
sbb
rorl
mov
fdivr
adc
stos
divps
fldl
add
pop
inc
test
jecxz
xor
mov
cmp
sbb
xor
stos
mov
cmp
addr16
jge
push
les
daa
int
cmp
test
inc
jo
int3
mov
jae
int3
inc
popa
dec
shl
sub
mov
sbb
mov
fs
fistpl
call
rcll
out
mov
jbe
rcrl
fistpll
in
fwait
icebp
xor
int
jbe
sbb
sbb
frstor
syscall
inc
ret
call
mov
lea
push
lcall
repnz
pop
adc
popf
imul
fadds
cmp
cwtl
push
pop
mov
fimuls
xchg
pusha
jle
sbb
xor
test
jmp
lds
mov
sub
xchg
xor
and
lahf
mov
js
cmp
sbb
bound
mov
pop
mov
insl
adc
fdivl
mov
test
xor
and
je
mov
xor
adc
sub
xchg
in
movsb
lret
mov
xchg
out
fstl
bound
sahf
xor
clc
xchg
xor
cmp
push
dec
loop
cmpsb
sbb
pop
jbe
call
hlt
pop
sarl
fidivs
sbb
mov
orl
aad
enter
inc
aam
cmp
jl
int3
outsb
lret
dec
cwtl
loopne
jp
in
rol
stos
xchg
mov
inc
fidivl
out
cld
xor
insl
push
mov
fmull
pop
xor
cmp
sbb
inc
xchg
cmc
add
js
test
adc
aad
mov
outsb
aas
sbb
fs
jecxz
adc
out
mov
push
xor
add
jle
push
js
mov
pop
cli
insb
sub
xchg
jge
movl
popf
outsl
ret
inc
sub
out
inc
cmp
iret
repz
xchg
cs
xor
arpl
mov
add
daa
xlat
dec
shll
jno
rcr
imul
dec
sub
in
popa
and
push
and
int3
jnp
mov
fldcw
pop
iret
xlat
cli
xchg
sbb
or
je,pt
xorb
fisubrl
imul
popa
push
cmp
enter
loop
lea
jl
mov
and
mov
jbe
cmp
icebp
pop
fwait
cmp
mov
rorb
stc
addb
jne
xchg
mov
push
xor
pop
mov
push
pop
lahf
fisubl
lods
sub
sub
arpl
inc
cmp
or
testb
jg
cmp
insb
cmp
lret
cmp
adc
adc
lcall
cltd
arpl
pushf
xchg
sbb
inc
xchg
pop
or
imul
jmp
push
roll
dec
test
cmp
mov
jbe
imul
add
jg
inc
mov
gs
or
adc
xor
insl
mov
pop
pop
lret
mov
out
push
inc
nop
mov
push
or
std
in
xchg
dec
int
mov
lret
cmc
push
and
cltd
adc
add
xlat
xor
inc
rcl
mov
push
mov
jnp
add
add
popf
xchg
mov
enter
mov
mov
push
lods
lods
enter
test
pop
inc
ficoms
add
pop
lahf
arpl
adcl
aad
push
imul
out
enter
outsl
std
inc
add
adc
orb
cs
fdivl
lods
mov
mov
xor
sti
divb
ss
in
sbb
fsts
xchg
inc
fadd
mov
cmp
lds
repz
in
imul
loope
cmp
mov
sti
xor
push
dec
add
idivl
int
ds
sub
add
mov
in
or
or
cmp
in
cltd
push
jns
icebp
dec
lret
repz
mov
lret
lock
mov
fcomps
daa
pop
dec
jmp
mov
sbb
push
insb
jbe
push
shr
fwait
jns
aas
lahf
mov
jns
out
cmp
in
out
dec
add
mov
movsl
xor
fistl
mov
inc
dec
or
cmp
sub
pop
insb
mov
rcl
xchg
in
mov
clc
dec
sbb
loopne
mov
arpl
jle
add
test
inc
adc
orb
loope
cmp
adc
sub
sub
add
push
insl
mov
pop
pushf
cmp
mov
xor
push
mov
fdivrs
aad
mov
jp
mov
jo
mov
mov
rcrb
stos
adc
xchg
push
mov
push
xchg
sub
enter
aad
mov
js
jg
into
test
mov
popa
push
dec
xor
and
push
sub
pop
sbb
pop
mov
mov
test
and
outsb
jmp
and
repz
push
aad
push
mov
jmp
mov
and
mov
cmpsl
cmp
cmp
and
sub
mov
pop
fsubl
or
scas
xchg
out
mov
sbb
repnz
repnz
cmp
xchg
xor
lahf
sbb
or
hlt
mov
xor
stc
iret
xchg
or
movsl
lods
data16
repnz
cli
jae
arpl
xor
jmp
lock
mov
and
lds
lods
int
xchg
test
adc
or
gs
cmp
and
movsl
dec
mov
mov
sbb
xchg
pusha
mov
jp
sub
mov
dec
xlat
pop
add
dec
data16
jae
loope
es
push
push
test
repz
dec
push
in
ret
mov
pop
std
jo
jns
leave
mov
pop
dec
insb
adc
leave
icebp
jle
dec
dec
je
xor
xor
xchg
mov
int
push
loope
mov
aaa
in
dec
lahf
add
jmp
movsb
dec
xor
jmp
mov
sarl
mov
pop
or
pop
push
shr
ja
icebp
inc
lock
je
ret
ret
jo
les
adc
arpl
push
push
adc
pop
sub
mov
adc
fisttpll
xchg
push
push
fmull
jmp
inc
xchg
push
jge
dec
fistpl
bnd
cmp
pop
cmpsw
dec
popa
mov
push
frstor
bound
shl
dec
pop
mov
and
dec
dec
xchg
or
scas
adc
movsl
loope
sti
test
adc
jmp
nop
insb
aam
adc
test
xchg
jo
mov
adcb
les
or
sahf
in
and
imul
lea
push
jl
sahf
movsl
pop
ljmp
mov
imul
xchg
cmp
push
add
xchg
lahf
push
insl
sbb
mov
in
notl
sub
sub
ss
scas
insl
sahf
fs
daa
push
insl
imul
iret
insl
pop
loopne
dec
xor
sahf
inc
addr16
cmp
dec
out
movsb
cs
cli
pop
push
adc
sbb
sub
fldenv
pop
mov
jae
mov
xor
mov
in
in
repz
or
cmc
out
mov
ret
cmc
sti
push
movsb
pop
test
ja
and
iret
push
lock
popl
repz
or
daa
inc
enter
dec
outsb
cwtl
sahf
or
imul
imul
aam
xor
xchg
popa
or
add
pop
rcll
mov
add
inc
dec
jp
cwtl
adc
mov
mov
xor
into
cmp
adc
push
xor
inc
sub
mov
sbb
subb
inc
rcrw
adc
sar
jg
sub
cmp
mov
jmp
test
dec
inc
xchg
enter
jne
pop
repnz
gs
std
enter
jmp
and
stos
xor
jmp
push
adc
mov
loop
aaa
jmp
adc
cmc
adc
fmul
adc
mov
pop
sub
cmc
and
adc
and
xchg
in
xchg
loope
icebp
mov
cwtl
jno
mov
das
ret
in
popa
adc
movsl
ret
and
fcoms
cwtl
sbb
dec
cmp
jmp
jl
or
inc
cmpsl
jl
ljmp
mov
iret
xor
inc
lock
out
and
push
inc
daa
xorb
jb
andnpd
inc
and
popf
mov
imulb
dec
ret
mov
cli
or
inc
fadd
xchg
sbb
aaa
das
mov
mull
push
lods
jp
clc
or
mov
pop
jbe
jo
push
aad
das
daa
pop
jns
xlat
mov
xchg
mov
pop
fsubrs
clc
mov
stos
jmp
push
jg
mov
push
dec
int3
jns
nop
cmp
shrb
jo
jnp
popf
pop
pop
dec
push
js
dec
ds
pop
cltd
and
cwtl
add
fidivs
ja
lret
cmp
bound
pop
mov
into
fcomi
mul
mov
clc
into
call
xlat
hlt
js
sbb
insb
pop
pop
test
cmp
adc
xchg
sarl
pop
mov
mov
cmp
aaa
outsl
inc
push
xchg
xor
stos
fmulp
dec
push
dec
cmp
sub
dec
sbb
movsb
lds
push
dec
je
xchg
test
test
mov
test
adc
pop
and
ret
xor
cwtl
adc
cmp
subb
or
xchg
iret
mov
cmp
xchg
lret
pop
ja
mov
and
pop
test
push
pop
cwtl
pop
gs
sarl
mov
xlat
xchg
xchg
mov
add
or
jecxz
cmp
jbe
add
dec
xor
jp
fcoms
sbb
mov
sub
pop
push
cmp
clc
mov
out
add
js
xlat
pop
pop
push
push
fs
std
popa
test
mov
pop
xlat
es
cmp
arpl
stos
scas
xor
pop
pop
dec
fbld
adc
ret
ljmp
lcall
xor
in
mov
out
dec
aad
xchg
ss
or
ss
sbb
leave
mov
outsb
jp
adc
gs
sub
loope
or
loop
and
or
rol
mov
adc
mov
or
rorl
aaa
sbb
mov
mov
test
lahf
jmp
cltd
repnz
rol
leave
lret
cs
cli
sub
fbld
xchg
push
mov
push
push
xorl
adc
jp
jge
mov
loope
popa
xor
sub
icebp
movsl
adc
mov
jo
xor
pusha
jle
int
or
pop
out
push
xor
xchg
scas
dec
cmp
dec
fs
cli
jge
dec
imul
xor
scas
or
arpl
and
sarb
mov
fwait
dec
neg
mov
lahf
insl
inc
jne
xor
data16
cwtd
out
xchg
add
sub
add
sti
push
daa
rorb
test
cmpsb
push
or
fnsave
dec
iret
xchg
imul
push
fwait
repz
fs
hlt
push
and
xchg
push
and
mov
dec
push
pusha
push
das
xor
and
lea
push
arpl
push
ror
mov
sahf
cmc
cwtl
lock
repz
jne
inc
mov
out
mov
push
push
add
cmp
cmp
mov
out
mov
rolb
xchg
mov
adc
stos
dec
add
repnz
mov
inc
adcl
gs
cmp
out
movsb
pop
pop
mov
push
inc
mov
cli
frndint
xorl
imul
fs
movsb
sbb
sub
push
mov
clc
ja
inc
jl
cmp
out
mov
jp
fisttpl
push
or
mov
xor
or
xorb
jle
xchg
jp
sbb
xor
cli
xchg
stc
test
xchg
repz
stos
sub
mov
leave
jge
ljmp
xor
dec
push
xor
jbe
dec
into
arpl
fisubl
int3
loopne
cs
es
lock
cwtl
adc
popf
pshufw
sar
das
pop
xor
sbb
mov
pop
iret
mov
mov
push
ds
adc
mov
in
outsl
push
inc
mov
mov
cld
jmp
cmpsb
or
and
jae
mov
lahf
in
mov
jl
mov
mov
ds
inc
fsubl
ds
sbb
sbbb
lret
inc
nop
dec
cmp
dec
lods
and
shll
loop
pop
iret
jmp
addb
mov
test
push
rclb
sub
clc
pop
inc
xrelease
pop
cli
testl
adc
cmp
pop
inc
xorl
adc
iret
outsb
repz
nop
dec
and
subl
jmp
popf
mov
mov
xor
nop
mov
push
incb
movsb
out
fimuls
pop
mov
mov
in
adc
pop
jns
int
cmp
and
cwtl
inc
fisttpll
pop
dec
hlt
adcb
pop
dec
pop
loop
add
imul
imul
xor
into
jle
pop
fildl
mov
enter
shr
dec
inc
jne
xorl
or
mov
in
add
scas
outsb
mov
mov
ret
cmp
sub
out
pop
bound
fidivrs
mov
jnp
fsubrp
jns
mov
adc
ret
repz
mov
push
std
sub
push
sbb
sbb
test
repz
pushf
testl
shll
mov
pop
inc
iret
fwait
push
and
inc
mov
push
icebp
sub
xchg
enter
cmpsb
jp
add
loope
mov
dec
lds
inc
mov
outsl
dec
inc
sbb
xlat
lods
pop
scas
inc
sbbl
jmp
mov
inc
icebp
mov
mov
dec
notb
push
fidivs
sbb
adc
inc
in
fists
ss
xchg
and
jmp
out
lret
mov
dec
xor
and
sub
xchg
lcall
lcall
xchg
in
inc
mov
pusha
push
ret
sub
ljmp
rol
aam
push
sub
cmpsl
xchg
int3
aas
loope
mov
js
xchg
adc
xor
lock
ljmp
es
insl
movsb
mov
inc
gs
data16
mov
and
and
out
pop
jnp
dec
push
loopne
jne
mov
rcrl
sub
xchg
in
fbstp
push
dec
movsl
out
and
mov
pop
mov
iret
rol
test
lret
aas
std
hlt
movsl
dec
fstps
push
pop
insl
or
iret
mov
lea
mov
stos
pop
jle
in
leave
pop
repz
gs
mov
pop
out
lds
js
cmpsb
xor
sub
jne
dec
mov
inc
pop
loope
dec
inc
jp
add
dec
sbb
je
lock
mov
ss
arpl
dec
push
inc
push
mov
pop
push
lock
movsl
loopne
fnstenv
jg
inc
movnti
inc
mov
pusha
cmp
jle
jecxz
or
hlt
sbb
push
insb
xchg
dec
inc
cli
dec
add
gs
jbe
sahf
sti
mov
mov
sbb
pop
mov
cmp
add
iret
or
jecxz
ret
push
add
pop
jl
sahf
int
adc
mov
addb
mov
sub
out
add
fdivrs
ret
sub
rorb
mov
adc
push
dec
clc
mov
xchg
sub
test
sti
xor
mov
sbb
mov
insb
loop
pop
inc
sbb
aam
les
fwait
xor
xlat
adc
adc
adc
xchg
in
adc
adc
test
and
inc
aaa
je
mov
mov
push
ljmp
jmp
xchg
popa
xor
mov
loopne
push
mov
les
mov
mov
scas
insb
cmp
jecxz
ja
dec
mov
cwtl
stc
movsl
addr16
out
mov
mov
lret
btc
inc
push
mov
mov
cltd
sbb
ljmp
out
imull
stos
pop
inc
push
mov
xchg
mov
fldenv
fdivl
lock
fimull
stc
xchg
aaa
dec
push
fldt
jmp
addl
push
jne
cwtl
xor
xor
enter
or
sbb
jg
mov
lds
sbb
or
std
jnp
insl
jns
dec
pop
mov
roll
out
fsubr
sub
inc
cli
lahf
or
jecxz
testl
stc
dec
popf
pop
mov
or
mov
addb
xchg
cmp
les
insb
pusha
adc
add
pop
push
jp
jp
xchg
sbb
push
shlb
add
into
dec
insl
cmc
jne
sahf
loop
sti
sub
pop
dec
or
or
jge
jle
rcrb
je
jp
mov
xchg
jne
hlt
cltd
xorb
adc
int3
in
sbb
lcall
cli
nop
fists
movsl
mov
orl
call
or
scas
ja
pop
lock
inc
loope
loope
cmp
adc
xchg
mov
sub
mov
or
pusha
fwait
push
mov
xor
add
mov
dec
les
xor
cmp
sbb
pop
loopne
pushf
imul
jl
test
adc
fincstp
stc
iret
lds
or
mov
push
add
cmpsb
testl
cmpl
cmp
or
inc
mov
jne
out
push
jge
xchg
loope
dec
pop
xor
fistps
enter
lods
cwtl
dec
imull
inc
leave
adc
psubusw
nop
fbld
pop
sbb
sub
jno
sbb
div
cmp
jnp
ret
int
insb
repnz
dec
or
jns
push
sub
rolb
pop
in
imul
ficompl
push
jl
sahf
cmpsl
fcomi
inc
add
jb
nop
mov
ljmp
int3
jmp
das
movsb
inc
jmp
xor
clc
lcall
dec
and
fildll
insl
jle
add
jl
cld
leave
out
insb
sahf
subl
pop
inc
xchg
pop
sub
mov
aam
shlb
movsl
sub
adc
repz
rolb
dec
xor
mov
mov
inc
xor
sub
add
push
jno
jnp
sarb
shlb
and
pusha
mov
ret
cmp
cmp
jmp
pop
mov
rorl
sti
mov
xchg
pop
ret
shll
fmul
out
mov
and
xlat
gs
lret
sub
sbbb
movsb
rorb
sahf
or
mov
pushf
scas
mov
fiaddl
sbb
movsb
dec
insl
cld
cmpsl
test
mov
lahf
ss
nop
jmp
in
aam
in
xchg
daa
mov
pop
mov
or
sbb
xor
nop
arpl
dec
jbe
jb
addr16
xchg
icebp
sub
cmc
pop
loopne
push
nop
ret
mov
mov
rorb
cmc
ret
xchg
jo
jb
add
add
aam
xchg
mov
dec
push
jecxz
push
ljmp
mov
adc
adc
mov
fdivs
dec
enter
push
mov
mov
add
dec
rorb
jne
loopne
sbb
repnz
lods
add
cmp
inc
pause
ja
orl
jle
in
push
popa
mov
fwait
and
cs
testl
repz
pushf
vmread
cli
popw
fs
cmp
mov
mov
call
adc
push
fsts
push
mov
scas
adc
aas
adc
inc
fimuls
outsl
fisttpl
xchg
cmpsb
inc
jg
out
jns
sbb
adc
add
movd
ret
xchg
cmp
push
or
dec
jecxz
sub
jns
sarb
sub
stc
mov
inc
stos
mov
lea
jg
fs
lock
mov
lret
loopne
cmp
outsl
fdivl
sbb
shl
cmpl
out
outsb
cmpsl
push
cli
push
lods
addb
adc
mov
jne
push
je
shrb
clc
adcb
sbb
jne
fdiv
enter
orb
vmovntps
inc
adc
ror
sarl
add
cs
test
push
in
cltd
add
sbb
cli
call
sti
fsubl
adc
cmp
icebp
sub
jle
and
push
ret
movsl
push
or
dec
cmp
sarb
sarl
daa
ljmp
insl
and
test
cwtl
sbb
leave
jmp
int3
xlat
shll
cmp
outsl
mov
push
mov
pop
cli
dec
mov
mov
or
xchg
std
into
inc
xchg
in
clc
mov
insl
cmpb
pop
mov
xchg
push
lods
lret
cmp
orl
testl
adc
xchg
xor
add
mov
dec
inc
or
or
js
pop
push
jg
leave
into
jns
xchg
sbb
push
scas
leave
push
jnp
cmp
dec
shll
pop
xor
mov
cmpsl
mov
lahf
fdivrp
pop
dec
cmpsl
cmpsl
jp
ss
dec
and
xor
adc
hlt
enter
inc
push
pop
adc
push
test
and
ss
sbb
cld
mov
das
add
sub
lods
hlt
je
pusha
inc
pop
pop
mov
insb
addb
sbb
jae
mov
rclb
push
pusha
lods
ret
xchg
das
mov
mov
jno
push
loopne
push
adc
cmpsb
mov
inc
std
adc
mov
jle
mov
and
flds
mov
inc
mov
fwait
inc
jns
mov
stc
lcall
mov
xchg
mov
lock
jg
cmp
jne
in
fimuls
mov
xchg
pushf
ud2
push
les
xchg
lods
xlat
fwait
in
xchg
push
sub
fcmovu
stos
insl
dec
mov
xor
jae
aas
add
fwait
sti
inc
and
stos
daa
push
aam
xchg
mov
mov
mov
or
std
jb
fs
push
push
cld
mov
adc
mov
lods
mov
call
jb
push
out
ficompl
movsl
sub
jae
xchg
push
rclb
int3
push
in
or
xchg
adc
adc
in
stos
sbb
ficompl
adc
sbb
push
sub
dec
push
add
clc
lea
xchg
cmpb
les
fsubl
lcall
mov
lahf
xor
je
inc
sub
jl
addr16
stos
inc
inc
iret
aaa
push
daa
sub
lock
fsubrs
xchg
mov
xor
mov
sti
mov
and
jle
or
jo
inc
insl
inc
pop
push
scas
jg
dec
fisubrl
das
dec
testl
bound
out
adcb
mov
xchg
xor
cltd
mov
inc
pop
mov
mov
test
lret
lea
and
into
jle
sbb
xor
scas
add
pop
jecxz
jae
maskmovq
idivl
inc
in
addr16
icebp
add
mov
mov
mov
pop
jmp
js
es
or
pop
xlat
subb
pop
test
rcll
jmp
and
subl
and
inc
xchg
add
jno
out
push
jle
out
clc
jnp
aam
inc
adc
test
sbb
icebp
das
ja
cmp
movl
jns
scas
jle
cs
jmp
ja
cmpsb
leave
pop
pop
adc
sub
out
insl
pop
xchg
std
mov
ljmp
shl
or
sbb
fistpl
insl
sbb
fcoml
inc
cmpsb
orb
push
imul
jge
iret
scas
mov
arpl
mov
int
rcrb
outsb
nop
out
ds
xchg
enter
lret
mov
xchg
and
jg
jo
out
lock
bound
sbb
push
lods
imul
daa
enter
or
data16
les
inc
outsb
negb
bound
dec
in
mov
jae
stos
les
dec
xor
jge
into
lds
lds
lods
leave
cmp
or
icebp
mov
cmp
and
add
and
into
dec
or
rcll
mov
push
inc
adc
rcrb
fstl
ret
push
dec
orb
xor
mov
daa
push
mov
xchg
dec
add
sbb
push
test
les
pop
std
mov
pop
and
neg
inc
rolb
mov
cltd
test
xchg
lret
ljmp
fwait
leave
lahf
nop
xor
stos
inc
fs
cltd
mov
ret
mov
in
sbb
stc
lea
pop
stos
stos
push
in
insb
push
or
outsb
call
imul
cltd
je
lret
mov
testb
xor
lods
out
dec
sarb
push
or
push
push
sub
jb
cs
jecxz
xor
adc
mov
pop
test
lock
mov
sahf
mov
scas
pop
jmp
xchg
cmp
test
add
mov
and
push
inc
xchg
and
cmpsb
test
xor
jno
xchg
and
sbb
cwtl
sahf
loop
pop
and
xor
sbb
mov
ss
sbb
sahf
mov
sub
or
bswap
fs
call
dec
push
jmp
cld
xchg
sbb
sub
push
loope
je
ljmp
lods
enter
hlt
inc
leave
push
fistl
jns
push
mov
call
adc
or
and
in
xchg
aam
lret
shrl
les
js
popf
sbb
xor
push
dec
daa
cmp
mov
xor
xchg
lahf
ja
pop
mov
adc
testb
ret
cmp
aas
clc
ficoml
das
mov
fxch
xchg
jp
outsb
scas
leave
bound
fisttps
bnd
nop
int3
xor
loope
stos
mov
dec
cmp
cmp
sbb
pop
xchg
cmc
mov
pop
sbb
mov
addb
std
xor
cwtl
std
movsb
inc
push
lods
lock
mov
add
mov
mov
sbbb
in
mov
or
dec
and
fisttpll
es
jg
nop
sbb
mov
test
out
loopne
out
ss
adc
jo
cmp
lds
fdivl
mov
inc
repz
enter
xchg
xchg
iret
and
fists
pop
push
sbb
xchg
cmp
negl
sbb
mov
dec
mov
push
lods
popf
pop
jecxz
push
mov
daa
push
inc
mov
out
pop
push
jo
je
sbbl
xor
ret
cmp
jno
rorl
lahf
and
cld
xor
xchg
mov
mov
jb
pop
dec
lret
pop
rolb
popa
and
imul
mov
int3
push
add
clc
icebp
jmp
iret
lods
dec
cwtl
mov
lds
jle
adc
sar
lods
jnp
mov
push
movl
out
xor
xor
outsl
test
sahf
fidivs
mov
repnz
jl
addr16
fpatan
das
jg
xchg
and
mov
popf
into
outsl
imul
iret
inc
sti
enter
add
dec
fistpl
xor
xlat
xlat
mov
inc
or
inc
jl
xor
insb
lea
or
cmp
incb
out
aas
dec
and
cld
daa
mov
jbe
mov
movsl
pop
scas
insb
or
notb
fsubl
pop
mull
hlt
dec
or
adc
mov
cli
outsl
sbb
mov
add
fldl
ret
dec
push
mov
jns
jno
add
add
sbb
nop
adc
lcall
inc
cld
gs
mov
outsl
das
dec
fldt
cmpsb
xchg
xchg
lret
in
imul
cli
cmpb
lock
in
adc
lods
aad
cmpsl
divb
mov
fnclex
push
cmp
test
imul
push
arpl
test
and
sbb
jno
and
xchg
lods
fdivr
outsb
jns
mov
stos
sahf
mov
and
call
mov
mov
repz
add
sub
mov
sbb
mov
icebp
adc
push
or
dec
stc
test
fistpll
arpl
cli
das
jo
rcrl
dec
sti
push
xchg
stos
and
push
pop
dec
sub
xor
lds
mov
jg
adc
decb
inc
lahf
gs
jmp
adc
xor
jp
pop
mov
cmp
dec
bound
jg
jg
push
dec
lods
pushw
mov
dec
aad
xchg
jecxz
fbld
add
fwait
cs
dec
jo
int3
cmp
sbb
add
and
or
mov
dec
out
fs
push
cmp
sbb
push
sarl
xor
popf
dec
pushf
push
scas
cli
inc
dec
cmc
test
aaa
out
inc
in
in
sub
pop
sbb
outsl
stc
mov
mov
fwait
adc
pop
cmp
pushf
scas
inc
int3
sbb
mov
dec
xchg
cmp
clc
push
mov
or
bound
mov
in
push
aam
mov
shll
push
stos
and
cmp
js
inc
jp
dec
and
ret
pusha
into
push
adc
push
mov
pop
push
mov
push
fbld
mov
mov
rclb
mov
push
adc
and
push
dec
dec
jp
test
mov
xchg
mov
lcall
imul
notb
add
mov
push
adcl
sub
shr
fsts
pop
jbe,pn
mov
cld
cmp
add
call
mov
xchg
and
or
mov
shrl
fs
inc
push
push
or
out
outsb
dec
sbbl
xchg
mov
in
int
mov
sbb
and
daa
mov
lock
mov
repz
add
jno
std
test
in
jo
mov
and
add
lret
push
xor
addr16
stos
nop
aas
sbb
or
inc
stos
dec
in
jne
pusha
aaa
ss
imul
dec
cmpsl
sbb
mov
rorl
lahf
scas
xor
dec
addr16
mov
mov
push
jno
mov
jg
imul
fbld
mov
ret
or
into
iret
aad
jmp
ljmp
ja
scas
insb
dec
in
adc
mov
pop
gs
sub
call
fiaddl
xchg
jge
add
add
cmp
popa
xchg
xlat
out
mov
in
stos
mov
insb
pop
adc
call
cmp
add
mov
outsb
push
push
mov
inc
repnz
jne
push
rol
in
pop
ret
out
sbb
imul
adc
pop
scas
int
outsb
sub
insl
sub
lods
push
addb
cmovbe
sar
push
sub
jo
cld
adcb
popf
or
jp
mov
or
cwtl
cmp
cmp
inc
xchg
xor
cmp
andl
xchg
in
push
aaa
mov
pop
add
insl
jecxz
and
icebp
xchg
sub
sub
jns
xchg
xchg
shll
pop
jg
add
aaa
add
xlat
mov
fists
cmc
in
sti
adc
pop
fldt
test
inc
test
in
pop
inc
xchg
xchg
adc
int
ja
fisttps
pop
add
xchg
pop
sub
cli
cmp
mov
nop
iret
fdivl
icebp
test
xchg
inc
xchg
into
and
jmp
push
mov
popf
sub
inc
jo
dec
cmc
push
test
mov
mov
or
divb
mov
rcr
in
xor
jo
in
call
sbb
jbe
cmp
lcall
pop
jno
cld
fldt
pop
mov
cmpl
fstpt
add
cmc
inc
jb
pop
dec
mov
jno
aad
xchg
test
or
mov
rcl
pop
subb
hlt
sbb
xchg
push
dec
dec
in
lar
mov
pushf
std
stos
mov
in
push
sbb
or
mov
jno
push
mov
iret
popa
pop
cmp
jns
cli
mov
pusha
ret
jb
xchg
std
mov
cmp
pop
push
xchg
jecxz
enter
mov
dec
mov
insb
inc
enter
cmp
enter
xor
insl
xchg
ja
xlat
mov
inc
sbb
cld
pop
inc
mov
and
ret
push
mov
pop
rcrb
push
mov
int3
adc
adc
ss
nop
sbb
and
scas
es
lods
pop
fisttpl
es
rorb
cltd
scas
movsl
test
cmp
add
cltd
xchg
loop
mov
xor
fs
push
jb
mov
or
cli
ja
shlb
or
das
cs
loopne
movsl
push
push
push
xchg
jp
loopne
ret
mov
mov
sarb
pop
cltd
xor
sbb
jmp
dec
push
stc
mov
sahf
xchg
shr
or
push
lods
and
ds
jle
imul
pop
orl
gs
or
adc
nop
fsubl
imul
int3
cmp
iret
cli
xchg
loopnew
dec
vmovapd
out
or
jne
int3
xlat
mov
push
pop
cwtl
ss
fisttps
rorb
push
loop
fwait
sbb
imul
daa
push
fwait
mov
mov
inc
inc
ret
fucomp
orl
mov
inc
leave
aad
imul
cmp
and
add
jle
fstpl
jno
ret
inc
ficomps
cmp
mov
jbe
or
jns
cltd
jge,pn
mov
push
hlt
xchg
adcb
add
call
jo
orl
mov
insl
adc
mov
mov
mov
xchg
and
popa
cltd
fmulp
pusha
mov
pop
xchg
xor
inc
rorb
in
jle
test
mov
jle
push
addr16
aam
loope
mov
cmpsl
les
pushf
mov
add
mov
js
or
testb
dec
es
add
mov
nop
dec
add
insb
mov
cs
or
out
int
into
out
xlat
ret
add
or
in
int3
call
add
outsl
xchg
mov
dec
add
mov
iret
xorb
cmpb
jns
pushf
push
rcrb
movsl
and
xor
imulb
test
ss
nopl
das
dec
jge
inc
rclb
mov
jge
out
nop
sub
inc
inc
jbe
or
cmp
adc
sub
lock
data16
xor
inc
adcl
mov
mov
jg
sub
outsb
jb
pop
test
pushf
dec
xchg
pusha
shr
xor
push
and
mov
imul
jnp
pop
cmp
outsb
cmp
movsb
mov
aam
xor
cwtl
sub
pushf
mov
xchg
test
mov
cmp
jmp
add
lea
fadds
popf
je
scas
jmp
arpl
mov
or
dec
sbb
jge
push
mov
pushf
cltd
push
cmpsb
test
push
int3
mov
outsl
aaa
or
cmp
mov
inc
sub
testl
cmc
mov
loope
jmp
jmp
addr16
mov
sbb
into
fs
jecxz
shr
mov
and
outsb
enter
jns
dec
pop
call
inc
jge
shl
fldenv
movsl
sti
push
lea
xor
mov
mov
stos
dec
sub
sub
jb
imul
stc
jns
les
sub
push
push
inc
xor
jns
out
repz
jmp
lahf
sub
jp
pop
ljmp
and
xchg
push
xor
mov
mov
mov
dec
pop
imul
into
subl
pop
std
cld
pop
mov
xchg
out
movsb
and
push
arpl
sub
ja
out
ljmp
mov
int3
sbb
data16
inc
sub
xchg
xchg
push
cmpsl
sbbl
pop
mov
jmp
stos
jns
lahf
imul
push
xor
shr
push
sub
roll
clc
loop
mov
dec
mov
push
sbb
xchg
ds
je
sbb
das
mov
mov
adc
lock
push
sub
aam
fs
hlt
mov
xchg
aad
andl
lock
xchg
push
and
shrl
popa
cmp
shll
iret
mov
inc
push
xchg
mov
sbb
dec
addr16
xor
in
out
inc
jecxz
repnz
mov
mov
mov
jp
cmp
std
cltd
fcmovu
imulb
mov
cmp
xchg
sti
jo
inc
into
cltd
insb
lcall
mov
or
cmpsb
mov
loopne
mov
movsb
mov
pop
les
xor
inc
or
les
testb
fs
cmp
cmp
in
jge
repnz
or
push
adc
sub
dec
add
jge
cmpb
fsubl
jne
xor
mov
lock
xor
and
sub
xor
shlb
dec
sbb
sub
mov
decb
and
adc
mov
push
arpl
daa
shrl
mov
push
test
ljmp
inc
sub
mov
xlat
imul
xchg
notb
pop
mulb
xchg
out
sti
leave
cltd
sarl
jae
pop
in
sbb
inc
jle
stos
outsb
pop
gs
xchg
scas
dec
jp
popa
mov
pop
inc
sarl
add
shlb
mov
push
or
cwtl
rcr
movsl
das
dec
shl
mov
dec
mov
mov
loopne
insl
data16
and
adc
subb
jo
insl
pop
jno
or
jns
shr
outsl
xchg
out
sub
push
fmuls
mov
cld
xchg
or
adc
sub
shr
pop
loop
int3
adc
insb
stos
mov
cmp
rcr
push
stc
add
loope
test
sbb
adc
cmp
fisubrl
daa
imul
sahf
and
inc
in
fisttpl
mov
js
int
push
pusha
pop
add
push
pop
jp
lods
out
adc
rorl
inc
pop
in
dec
adc
push
jne
xor
int
cmp
rep
outsl
mov
push
mov
inc
jecxz
sbb
in
in
fdivr
mov
mov
inc
mov
push
mov
jbe
les
fistpl
dec
dec
adc
jg
sbb
lock
lcall
imul
xor
pop
loop
xor
popfw
lret
incl
mov
cmp
or
add
sbb
fisubrl
mov
cwtl
xchg
xchg
inc
xchg
movsb
jp
das
inc
js
adc
mov
inc
inc
into
pop
inc
clc
cli
cmpb
adc
cltd
mov
mov
mov
cmp
xor
jle
pop
mov
inc
or
mov
jl
mov
rcrb
cmp
xchg
movsb
cltd
pop
pushf
mov
sbb
rep
push
or
mov
jno
call
int3
out
ljmp
mov
mov
rcl
mov
hlt
xchg
cmp
addr16
mov
std
cmpsl
sub
jne
cmpsl
sarb
push
cltd
push
enter
push
adc
out
vcvtsi2sdl
repz
xor
lock
insb
sub
or
inc
fstpl
movsl
inc
sahf
aam
xchg
clc
lahf
out
rcrb
inc
repz
loop
in
xorb
jge
pop
xlat
push
outsb
xor
mov
push
mov
lock
mov
mov
divl
in
sbb
das
mov
push
pop
dec
gs
andl
leave
adc
sub
ss
sbb
inc
lods
cli
adc
adc
push
sub
and
xlat
iret
cltd
gs
repz
jns
or
movsl
inc
inc
lea
push
cmp
xchg
lods
rcrb
imul
adc
repnz
sbb
in
adc
xor
repnz
repnz
sbb
mov
daa
push
sahf
mov
cmpsb
in
pop
cmp
adcl
jnp
stos
out
cmp
push
fcmove
fiadds
fnstsw
mov
mov
or
out
sbb
imul
leave
mov
addr16
repnz
out
xchg
lea
out
fptan
push
lret
or
fdivrs
insl
addr16
push
cltd
mov
ss
int
fidivs
jl
mov
pop
ljmp
mov
in
jle
in
icebp
or
pop
cmp
movsb
int3
and
cmc
mov
jne
add
dec
or
out
jbe
imul
dec
sarl
lahf
jge
inc
sbb
sub
pop
movsb
sub
push
or
fcmovnu
call
fadd
mov
movsb
movsl
xor
sbbl
stos
sub
dec
adc
mov
mov
imul
fs
fstpl
addr16
shr
out
cmc
or
addl
push
movsb
add
xlat
push
jge
das
shl
lods
fistpll
push
mov
jno
jns
pushf
xchg
stos
pop
jmp
push
jg
adc
pop
mov
pop
add
subb
decl
js
in
pusha
push
das
jo
out
roll
es
jno
jle
mov
and
flds
sahf
sbb
loopne
mov
gs
lds
mov
nop
cmp
arpl
mov
ss
sub
inc
arpl
fcmovnb
mov
lock
test
sbb
dec
or
ds
rorb
and
fidivrs
xor
pop
int
mov
and
pushf
addr16
fmul
setle
dec
mov
pop
dec
repz
mov
push
clc
sub
fsubl
add
pop
dec
and
cmp
js
push
mov
mov
lret
push
xor
cmp
mov
repnz
shrb
cmp
out
scas
incb
push
pop
or
stc
jmp
jns
outsl
repnz
xor
cmpsb
sahf
data16
fnstsw
add
shl
cmp
lcall
add
subb
xor
xchg
push
add
rcll
jge
or
fwait
or
push
enter
or
lret
into
inc
pop
ss
cmp
enter
fxch
cmpxchg8b
nop
shrl
jg
pushf
enter
repnz
sbb
add
sub
and
inc
lahf
pop
push
fmuls
sbb
jp
into
pusha
add
pop
dec
ret
test
cmp
lret
dec
dec
push
cli
orb
jae
jnp
or
out
pop
jae
in
insl
shll
fwait
imul
gs
pop
ljmp
mov
rolb
or
pop
lods
movsb
sbb
pop
fwait
dec
inc
fidivrl
sahf
imull
jle
adc
add
jbe
dec
lea
mov
out
xchg
test
xchg
adc
das
sti
and
mov
add
imul
int
xchg
mov
push
xchg
jge
mov
sub
nop
lods
test
jo
loop
jo
sbb
xchg
mov
repz
shlb
or
pop
add
fidivl
outsb
cmp
bnd
insb
rcr
jecxz
in
sar
xor
test
imul
in
in
mov
mov
scas
cld
mov
movsl
pop
in
inc
or
adc
fsubs
mov
jl
fisubrl
imul
xchg
lods
jp
icebp
add
mov
pop
fidivl
scas
push
gs
fnstsw
lahf
mov
lahf
scas
stc
jae
cmpsb
mov
pop
arpl
out
ja
mov
ljmp
push
fstp
outsb
push
push
ret
sbb
sbb
ja
iret
mov
sbb
adc
dec
out
dec
in
mov
clc
cld
fists
vpmovqb
repnz
adc
sub
mov
sub
outsl
fwait
in
or
cmpsb
jl
xor
mov
fsts
jg
dec
out
cwtl
jne
sub
jo
xchg
pop
cs
rcrl
jmp
leave
outsb
stos
movswl
add
test
shrb
in
lcall
push
test
inc
adc
cmpsb
out
sti
icebp
pop
mov
push
sub
imul
xor
dec
popf
in
mov
lahf
in
ret
inc
out
dec
mov
loop
loop
xchg
cmpsl
test
push
pushf
fs
cmp
rorl
flds
xor
xor
sbb
jmp
pop
loopne
adc
stos
pop
fld
xchg
sarl
cmp
cld
xor
mov
dec
pop
and
cmp
add
sub
mov
stc
leave
testb
push
pop
adc
leave
adc
mov
dec
cmpsb
daa
mov
xor
sahf
es
rcrl
pop
rclb
mov
mov
int
xor
add
lret
dec
lods
enter
and
mov
dec
push
dec
jo
fstpl
repz
xchg
stos
dec
push
test
jecxz
dec
push
je
inc
and
push
push
adc
roll
or
push
arpl
sbb
jecxz
inc
rcll
testl
pusha
lods
push
cwtl
movb
fmul
sbb
in
dec
pop
les
xor
or
cmpsl
and
sub
sub
mov
push
mov
sbb
std
push
int3
xchg
or
int
pop
dec
mov
fcmovne
outsb
xor
dec
in
shlb
adcl
and
sahf
cmp
and
lds
push
pusha
cs
movsl
sub
roll
enter
in
popa
dec
and
int3
and
push
xchg
lcall
jo
clc
outsb
sub
call
gs
lock
inc
fs
jae
sbb
inc
shlb
es
and
lods
popa
mov
enter
mov
shrl
clc
mov
pop
data16
imull
lea
stc
stc
xchg
arpl
cli
dec
ss
fsts
sub
mov
mov
in
dec
outsb
dec
mov
mov
rcrb
add
gs
push
dec
mov
es
xchg
stc
sub
xchg
andb
dec
loope,pt
lret
rcrl
mov
andb
adc
jae
clc
lods
test
and
sahf
leave
mov
cmp
and
or
xchg
je
mov
dec
mov
sahf
cmpsl
jb
push
rolb
jae
fcmovu
inc
xor
xchg
stc
mov
jle
sbb
scas
pop
lds
push
pop
push
pop
cmp
push
daa
xchg
mov
clc
dec
nop
scas
int
inc
mov
std
loop
pop
push
notb
stc
scas
cwtl
in
aaa
mov
adcb
popa
or
pop
xor
mov
add
push
lock
mov
dec
out
into
pop
fcmovnb
scas
pop
sahf
nop
cmp
mov
push
sbb
adc
adc
mov
int
ret
and
out
out
adcl
out
mov
lock
ret
int
dec
ficomps
jecxz
cs
out
and
pop
mov
mov
fildl
mov
mov
push
mov
and
xchg
outsb
cltd
xchg
mov
adc
in
in
add
cmp
out
notl
sbb
mov
or
or
lock
cli
pop
inc
inc
jno
cmpxchg
jbe
xchg
lahf
mov
les
jae
iret
outsl
out
inc
sub
sarb
mov
dec
call
ljmp
notb
push
dec
movsl
pop
ljmp
dec
mov
mov
pop
popf
adc
xchg
cli
or
iret
push
sbb
mov
dec
ja
pop
sub
sarb
mov
fs
or
or
push
xchg
stc
test
mov
popf
adc
mov
in
fiadds
xchg
or
icebp
sbb
mov
cmp
push
ss
sbb
enter
test
fisttpll
mov
outsl
test
xchg
fldcw
fisttps
mov
mov
icebp
mov
xchg
mov
outsl
mov
sbb
lock
jge
dec
int
shl
addr16
in
jg
es
xor
sbb
fisttpl
lcall
or
ror
adc
inc
adc
testl
mov
fisubrs
xchg
sbb
jnp
lahf
mov
add
or
in
push
xor
repnz
mov
cld
out
mov
mov
cmp
outsb
xchg
mov
jne
ret
xchg
pop
filds
mov
test
push
lahf
popf
fadd
aam
lods
and
jb
add
xchg
das
test
push
mov
jb
pop
fidivrl
insl
sub
shrl
ljmp
gs
sub
or
push
imul
mov
int
stos
popf
bound
and
or
popa
stos
arpl
aas
fldl
iret
mov
scas
jnp
and
in
xchg
sbb
in
out
inc
js
and
fsts
outsb
jbe
addr16
fnsave
jnp
xor
sbb
jo
cmpsl
sbb
aad
mov
fnstenv
repnz
adc
sbb
dec
fsub
cs
fldenv
push
lock
jnp
pushf
jmp
xor
rol
rcrl
fs
fists
in
pop
aaa
mov
jne
loop
leave
inc
sub
dec
pop
xor
xchg
js
and
push
stos
out
nop
sbb
sub
dec
lock
sub
repnz
cli
dec
out
icebp
je
inc
mov
pop
mov
dec
dec
mov
xchg
imul
pop
stos
mov
push
cmp
xor
orb
out
enter
add
imul
mov
cltd
jmp
mov
mov
cli
nop
fimuls
push
pop
lahf
lods
and
push
mov
mov
icebp
stos
in
fwait
and
andl
dec
push
dec
xchg
pop
pusha
test
or
xchg
adc
lahf
mov
mov
jl
inc
out
fs
sti
jo
push
or
push
cmp
mov
push
loop
mov
mov
xchg
and
cmpsl
lcall
sub
and
xchg
cli
inc
loopne
lret
push
outsl
xlat
xchg
jb
les
loope
mov
loope
jmp
jae
pop
ja
or
jne
invd
mov
nop
divb
pop
cmpsl
ss
das
movsb
pop
rclb
sbb
rorb
add
inc
cs
sahf
or
test
adc
out
push
adc
jmp
cmc
mov
push
xor
xchg
xchg
pop
mov
and
mov
repnz
and
adc
mov
xchg
or
jmp
sbb
popf
mov
mov
xchg
mov
mov
mov
dec
lret
sbb
inc
stos
fwait
leave
out
stc
xor
jg
jns
pushf
in
mov
data16
add
cltd
pop
and
dec
lcall
pushf
test
sbb
cmp
in
dec
int3
lcall
or
cmp
and
adc
mov
pop
push
mov
insl
ja
pop
push
add
in
lahf
push
xor
ret
add
or
mov
and
mov
push
adc
sub
test
call
dec
mov
or
mov
xchg
lea
dec
fwait
sahf
ret
jecxz
cmpsl
jp
lret
movsl
inc
xchg
test
icebp
sbb
inc
push
in
out
in
sbb
sbb
call
dec
je
cmp
repnz
mov
lea
fwait
call
push
mov
sbb
lcall
dec
iret
mov
daa
xchg
movsb
jbe
push
dec
jnp
inc
sbb
jae
or
mov
fisttpl
sub
repz
ljmp
aas
add
sahf
int
insb
jnp
dec
sbb
out
arpl
mov
mov
js
sbb
int
push
jmp
xorb
sbb
adc
popa
jb
sbb
mov
fcmovnb
jb
out
pop
stos
sahf
scas
mov
dec
std
loopne
rorb
in
addr16
xor
cmc
mov
pop
xchg
ret
clc
add
pop
xor
sub
cmp
add
jge
push
xchg
sub
or
lea
or
rclb
dec
rcl
or
mov
push
and
std
out
sbb
stos
scas
or
iret
jecxz
ret
cmpsl
insl
in
dec
inc
and
xchg
cli
push
gs
jns
inc
fcoms
pusha
stc
jno
int
shll
jb
jmp
arpl
inc
push
cs
out
mov
in
mov
push
loope
cmp
cwtl
lret
call
lds
and
and
imul
cmp
aas
mov
pop
mov
loope
loope
leave
stc
ret
das
cltd
in
xlat
inc
mov
fcompl
jmp
add
push
inc
clc
inc
sub
adc
xlat
fst
mov
cmpsb
push
por
add
jo
push
jecxz
sub
mov
loopne
daa
inc
jmp
sti
add
mov
sbb
sub
cwtl
lods
iret
xchg
or
xchg
mov
in
ljmp
and
mov
icebp
mov
xchg
in
aad
enter
xor
push
xchg
in
xchg
pop
mov
leave
gs
std
jl
test
xchg
pop
sahf
lret
mov
and
test
loop
cwtl
dec
pop
mov
jne
ja
xchg
cld
movsl
adc
data16
xor
add
or
fcom
stos
addr16
jp
push
out
sbb
add
cli
sbb
or
or
jne
mov
jmp
insl
aaa
pop
shrl
fmul
and
cld
bound
inc
xchg
mov
pop
jno
sbb
and
push
jnp
dec
cmp
dec
mov
or
jl
xor
out
push
mov
jb
int
cmp
cli
outsl
xchg
pusha
mov
fisubs
inc
clc
into
cmc
dec
mov
adc
scas
shrl
aas
sub
xlat
mov
cmp
loope
loope,pt
add
xchg
subl
adc
repnz
push
les
cmp
inc
ss
push
xchg
xor
jmp
mov
jns
lods
arpl
sti
jae
jle
mov
fistpll
pop
mov
das
negl
iret
shll
xchg
xchg
cltd
cli
mov
dec
xchg
rorl
jne
bnd
dec
test
push
pop
and
pop
mov
popf
popa
jp
jnp
jae
in
fmull
inc
out
in
adc
nop
pop
mov
in
inc
fcmovbe
in
jae
enter
sbb
mov
adc
mov
aam
mov
icebp
jbe
xchg
sbbl
xchg
outsb
sbb
fwait
push
xchg
popa
push
test
shll
lock
popa
mov
mov
jbe
inc
add
mov
pop
mov
bound
or
sub
test
push
and
dec
pop
ss
lret
pop
idiv
iret
imul
pop
mov
and
adc
pop
mov
inc
push
jo
arpl
icebp
ds
push
cmp
inc
jl
adc
mov
push
cld
and
mov
pop
mov
leave
aam
xchg
fistpl
out
cmp
addr16
js
shl
or
lea
aad
cltd
out
out
add
mov
push
jge
sbb
push
xor
push
jge
push
sbb
xor
mov
jecxz
insl
push
and
push
push
and
test
mov
stos
fcmovne
fwait
cmp
out
cs
mov
cwtl
xchg
shlb
or
push
push
pop
add
dec
sub
and
scas
mov
cmp
out
into
fsubl
add
jnp
mov
pusha
mov
aam
js
mov
ss
add
rorl
xchg
bound
cli
imul
mov
jbe
mov
pop
jmp
popf
outsb
scas
mulb
mov
lods
or
mov
sbb
pop
rcl
fcompl
fs
daa
stc
xor
jmp
add
sbb
fistpl
lahf
mov
stc
mov
aam
repz
pop
dec
mov
cmp
imul
lods
cmp
leave
pop
xor
test
cmpsb
and
cmp
stos
mov
shlb
inc
jl
or
inc
jnp
cs
lods
jno
push
add
sahf
dec
xor
xor
pop
out
push
in
push
push
shr
or
ja
pop
js
shll
inc
mov
sarb
ret
fildl
pusha
or
push
inc
stos
xor
ja
aad
jo
dec
jg
mov
sti
cmp
jmp
insb
jo
or
jbe
sbb
adc
stos
push
stos
test
mov
lds
pusha
mov
or
cli
fldenv
fwait
xlat
fwait
int
mov
cmp
iret
cld
sub
scas
test
jns
in
fsubrs
inc
std
addr16
fiadds
lret
sub
mov
xor
lahf
fwait
loop
mov
sar
push
sub
or
ja
inc
scas
pop
sbb
jecxz
in
mov
scas
jecxz
loope
sbb
cmp
or
imul
bt
add
lds
repnz
mov
in
and
aam
in
gs
sbb
and
cmc
and
mov
fists
jmp
gs
mov
push
cs
hlt
iret
cmp
push
mov
ret
mov
loopne
clc
adc
mov
cmc
testl
ja
lret
push
icebp
clc
xchg
pushf
pop
mov
test
je
push
test
pop
inc
jo
adc
and
sub
adc
mov
jo
jmp
shrb
xor
movsl
fiadds
mov
roll
js
out
mov
aad
mov
push
aad
sub
push
inc
out
dec
imul
adc
sbbb
cmc
repnz
int3
jp
aaa
js
inc
sbb
lahf
cmpsb
lret
ljmp
xlat
out
mov
sbb
pop
movsl
jno
data16
xchg
je
negl
inc
into
ja
aaa
repz
mov
inc
push
push
mov
ret
and
xor
xlat
std
push
lret
or
xorl
jo
and
je
push
mov
fld
xchg
lcall
pop
jecxz
aam
xor
jo
xor
jg
fucomip
in
push
into
sub
sahf
mov
xlat
ret
or
jle
add
and
jl
pop
daa
pushf
popa
leave
dec
adc
fs
orl
cmp
shrb
mov
iret
dec
mov
loopne
rorb
std
mov
rcl
xor
enter
popf
jle
push
push
loop
andb
test
pushf
xlat
add
sbb
add
scas
daa
orl
cmpsl
ds
movsl
clts
push
xor
push
call
aam
mov
pop
mov
and
jle
ljmp
das
shr
enter
xor
mov
jg
in
dec
sub
cmp
mov
lcall
push
push
shll
adc
stc
das
mov
xchg
fwait
push
iret
stos
adc
stos
cltd
sub
mov
mov
jns
aas
inc
jp
dec
push
popf
cmp
jl
sub
sahf
insb
fldcw
stos
pop
loop
inc
add
in
outsl
js
cld
sbb
stc
xor
jae
add
out
test
je
jno
data16
push
push
nop
rcrl
sub
aad
mov
pop
mov
mov
aas
pop
xor
jbe
and
pop
adc
add
xchg
daa
fsts
popl
jecxz
call
cmc
mov
sbb
sub
sbb
icebp
fucomip
adc
ja
testb
test
fwait
hlt
iret
cli
pop
stos
xchg
cwtl
dec
sahf
and
jge
xor
inc
xchg
lods
scas
scas
add
cmp
inc
sbb
cmpsb
xchg
adc
jmp
outsb
jge
repz
push
xchg
arpl
pop
test
mov
cmp
dec
xor
ss
stos
out
out
sbb
insl
mov
lods
fwait
adc
hlt
dec
roll
iret
andl
pop
pop
adc
fcoml
jne
mulb
mov
repz
add
out
push
divl
jb
cmp
adc
push
adc
ds
shl
inc
dec
gs
jno
int
dec
stos
scas
push
imul
xchg
fsts
xchg
jge
imul
xchg
cwtl
sub
cmp
pop
push
xchg
lcall
mov
movsl
mov
sbb
inc
or
out
xor
xchg
push
mov
pop
jl
dec
jno
xchg
cmc
fyl2xp1
adc
mov
imul
daa
loop
mov
cmp
mov
xchg
call
into
cmp
cld
fs
dec
jno
mov
dec
fisubrl
dec
push
std
sbb
fists
or
movsb
lcall
cmp
mov
sti
iret
mov
dec
or
push
cmpb
jbe
nop
aaa
mov
pushf
sub
test
pop
sbb
xor
mov
jmp
aas
xor
push
sub
popf
das
sub
adc
mov
and
lcall
stos
or
adc
or
fisubrl
fwait
jnp
imul
fildll
cmp
mov
mov
or
dec
xor
jns
aad
push
iret
adc
xchg
pop
xor
jmp
clc
pop
sub
adc
dec
mov
std
insb
mov
std
mov
xorb
push
mov
imul
les
je
sbb
pusha
cld
and
movb
hlt
mov
pop
jo
sbb
or
mov
sbb
dec
fs
sbb
shll
pop
shlb
or
pushl
jnp
dec
popf
scas
mov
outsb
lock
fdivl
jnp
or
pop
test
insl
shlb
divb
xor
fadd
jo
bound
and
adc
add
mov
or
mov
or
mulb
dec
push
aas
loopne
inc
cld
orl
mov
daa
cmp
fsubrs
aam
fisttps
xlat
inc
ret
into
out
jnp
inc
and
stos
jmp
repz
imul
sbbb
popa
push
gs
push
mov
lret
orb
mov
mov
push
es
add
in
push
outsl
inc
xor
jg
push
adcl
sbb
sahf
pop
xchg
dec
jecxz
stos
loope
fsubp
mov
pop
and
mov
mov
test
sub
sbb
movsb
mov
outsl
rol
inc
push
popa
and
call
jno
aaa
add
fs
or
xlat
mov
loope
movsl
jno
inc
xlat
push
sub
outsl
inc
jb
negl
insl
lcall
clc
mov
mov
fidivrs
idivb
aam
cmc
dec
loopne
test
out
int3
sbb
push
jne
fwait
gs
push
push
lods
iret
aad
repnz
adcl
imull
fadds
and
pushf
pusha
sub
push
ljmp
cli
or
aas
or
mov
cmpsl
mov
iret
jl
test
shlb
cmp
jae
loope
clc
lods
fmull
xchg
rcrb
push
fildll
xchg
loope
inc
ja
or
dec
bound
dec
outsl
push
xor
mov
cwtl
iret
cmp
scas
cmp
lea
inc
nop
jg
mov
mov
xchg
sbb
hlt
lods
cmp
xchg
cmpsl
mov
adc
sbb
clc
adc
js
xchg
loopne
adc
mov
xchg
xorb
fwait
dec
popf
pop
xorb
in
pop
aad
in
cli
cmp
cmp
imul
add
lock
adc
int3
inc
clc
and
loope
cmpsl
jbe
roll
lret
cmpsl
and
inc
jae
push
mov
and
das
stos
cmp
mov
cmpsl
pop
orl
test
inc
dec
or
addr16
insl
or
aas
loope
ficoml
lret
andl
sbb
and
stos
jmp
jnp
sub
mov
clc
sbb
lcall
cmp
int
mov
int
scas
mov
pushf
inc
adc
js
aam
arpl
in
sahf
in
push
xor
adc
stos
mov
inc
sub
adc
jecxz
inc
daa
mov
mov
sti
dec
dec
cmp
mov
in
cmc
cmp
adc
test
std
mov
cs
bnd
subb
mov
inc
dec
ret
push
repnz
and
mov
stos
sub
ljmp
data16
jbe
daa
int
sbb
pop
pop
es
rcrl
std
cmp
dec
mov
mov
das
mov
in
leave
add
or
pop
fmul
push
xchg
xor
pop
fsubs
mov
outsl
and
loopne
and
lret
fcoms
stos
das
roll
nop
rcrl
ss
vsubps
lods
call
stos
outsl
mov
add
fchs
out
cli
dec
shlb
test
adc
cmp
movsb
xchg
dec
adc
cmp
jae
jg
cmp
sub
jg
int3
aaa
push
pop
push
js
rclb
jae
cs
push
fnsave
push
rorl
fdivrp
xchg
xor
ds
ja
inc
xor
fldcw
xchg
adc
xchg
jb
ficompl
xlat
xor
add
jge
imul
push
insb
or
xchg
or
or
std
pop
sbb
nop
loope
cmp
dec
lahf
fcompp
popf
jbe
pop
repnz
push
dec
stos
adc
or
fsubs
jge
and
jl
nop
or
movsb
jo
dec
shl
pusha
hlt
mov
popa
and
lods
outsl
test
mov
ja
sahf
dec
or
daa
nop
sub
lret
dec
enter
pushf
dec
cmpsl
xchg
arpl
stc
xchg
jb
popa
sub
pop
xorl
subb
cli
std
xchg
mov
mov
ret
clc
jmp
jbe
sbb
xchg
loop
dec
out
sarl
pop
and
ss
push
jle
add
and
mov
push
and
add
out
std
cmp
lret
push
dec
clc
scas
sbb
cli
add
dec
or
or
in
arpl
cmp
mov
shr
pop
mov
push
push
and
add
and
mov
push
repnz
repnz
jge
cmp
negl
adc
jns
mov
testl
or
loop
dec
inc
dec
and
xchg
mov
aad
loop
pusha
in
rcll
push
push
jp
sbb
rcr
xor
cmp
adc
sbb
adc
xchg
mov
ds
dec
movsl
popf
cmp
sub
pop
test
xor
fildl
dec
xor
pop
mov
inc
stos
test
cld
push
jne
in
push
dec
mov
or
sbb
cmp
loop
popf
lods
pop
cs
mov
data16
fcomi
icebp
scas
cmovbe
inc
mov
and
jge
lret
xlat
stc
inc
gs
push
pop
mov
or
mov
push
inc
das
nop
mov
and
dec
sti
push
scas
or
loop
shrl
xor
add
or
test
cmp
in
enter
dec
in
push
test
pusha
mov
mov
xor
jle
insl
sti
pop
fsubrp
div
into
cmp
gs
push
outsl
scas
sbb
in
pop
gs
push
ret
mov
mov
mov
adc
mov
aas
int3
insl
fidivl
inc
push
xchg
ret
js,pn
xor
adc
mov
xchg
aam
pop
jae
mov
test
inc
sbb
ja
cltd
addr16
ljmp
shl
and
pop
test
add
outsl
jnp
lods
inc
and
test
outsb
add
dec
add
mov
mov
pmaddwd
rol
out
fistl
out
jge
sbb
ficoms
es
lret
sahf
sub
in
inc
xor
cmp
out
xrelease
and
xchg
arpl
std
ja
sbb
adc
fistpll
mov
outsl
adc
sysexit
popf
popa
jo
imul
lret
test
cmpsl
sbb
pop
mov
pop
jmp
gs
lock
or
jge
sbb
sbb
test
scas
in
test
mov
jg
jae
mov
push
adc
or
loop
ss
imul
pop
mov
imul
sub
inc
dec
mov
jecxz,pt
xchg
je
dec
daa
dec
jmp
sarl
inc
popf
shlb
add
sbb
cwtl
xor
sti
imul
fsts
repnz
sbb
pop
pop
rol
repz
aas
ja
add
add
mov
xchg
and
lret
add
mov
xchg
push
rcll
jb
fnstcw
fwait
push
xchg
inc
out
call
andb
mov
fwait
outsb
push
jg
sbb
dec
push
out
fisubs
sub
lea
inc
outsl
adc
or
aam
lahf
cld
xor
xchg
push
popa
in
push
pushl
loopne
das
xchg
xchg
mov
lods
inc
lahf
lret
scas
jb
jbe
stos
jb
inc
mov
mov
out
push
jb
push
push
inc
bound
testb
lret
lret
fs
in
cmpsl
push
cmc
hlt
loope
test
xchg
xorl
inc
mov
push
shrb
and
repz
dec
adc
mov
sub
subl
lea
mov
or
push
sahf
cltd
movsl
leave
or
push
push
ljmp
and
shl
pusha
inc
add
sub
leave
adc
les
fistps
loopne
sbb
add
idivb
inc
imul
imulb
andl
scas
lcall
inc
mov
push
shlb
push
sbb
and
ficoms
popa
sbb
inc
cmp
add
xlat
add
rcl
fsub
xor
and
xor
mov
mov
sub
cmp
pop
push
out
in
and
sahf
rorl
clc
repz
dec
sarb
stos
negl
mov
je
arpl
repz
negl
ds
inc
aam
push
fistpll
dec
mov
xchg
cwtl
fadd
jmp
aad
pop
ss
enter
push
pushl
sub
adc
and
mov
out
push
inc
sbb
in
mov
ret
aad
sbb
mov
addb
mov
icebp
in
xchg
int
cmpsl
mov
mov
push
out
mov
leave
stc
jnp
jbe
sbb
test
imul
jne
mov
xchg
lcall
xor
fcomps
jecxz
je
loope
sbb
lret
xor
cmp
outsl
ss
repz
adc
jns
cmp
jl
ret
sbbb
add
jl
ss
dec
inc
out
test
test
leave
push
cmpsb
pop
jns
jmp
js
inc
shrb
xlat
jle
sbb
pushf
pop
mov
sub
ret
and
cmp
pop
andb
sbb
rorb
push
sbb
mov
fbld
jne
aaa
cmpsl
jmp
jp
push
adc
pop
cmp
fimull
mul
adc
jns
add
dec
sub
popf
add
shlb
cs
mov
jno
mov
cwtl
aad
fcmovnb
jns
out
xchg
jmp
insl
out
push
sub
lret
push
xor
mov
mov
xor
cmp
sbb
push
jne
popa
aaa
ss
insl
jp
sub
jbe
stos
mov
outsb
ret
cmp
adc
scas
or
divl
xchg
jae
popl
pop
jnp
push
xchg
movsb
cmpl
add
pop
cli
jbe
shlb
mov
movsb
testl
jns
addr16
xor
scas
adc
inc
jnp
loop
sbb
subb
dec
fmul
or
imull
mov
lcall
cmp
clc
mov
test
mov
cli
mov
jl
fisubs
movsb
jmp
fistl
ljmp
xchg
scas
cmpsl
mov
ret
or
push
mov
cli
lea
pop
xchg
lahf
and
insl
jl
push
or
arpl
inc
lahf
xchg
into
dec
push
add
inc
lahf
outsl
cld
and
loop
daa
mov
sbb
lock
xor
testl
or
inc
sub
leave
les
inc
pop
aaa
das
loope
daa
movsl
cltd
jge
jbe
fwait
jl
pop
sbb
cmc
sub
add
cmp
push
dec
jne
pusha
jns
push
sub
sbb
mov
ss
xchg
outsb
pop
fsubr
lods
cmp
nop
jle
cwtl
sbb
add
les
push
pop
jle
cmpsl
inc
in
loop
arpl
ret
pop
push
fdivrs
addr16
inc
adc
jnp
xor
pop
lock
and
faddl
mov
sub
mov
mov
icebp
mov
faddl
mov
mov
sbb
dec
adc
lods
popf
fimull
loope
adc
pop
popf
test
es
out
cmpsb
mov
sbb
mov
dec
lock
fcoms
pop
and
imul
fistps
out
add
les
jae
sbb
xor
xchg
adc
cld
pop
sbb
mov
js
add
add
mov
das
movsb
mov
add
pushf
mov
pop
pop
in
outsl
lds
adc
push
xor
mov
dec
mov
cmpsl
dec
pusha
push
or
mov
mov
mov
loopne
mov
dec
xlat
and
mov
lods
xchg
ret
and
test
add
push
pop
xchg
jb
lcall
adc
and
in
shrl
pushf
movsl
cmp
outsb
sbb
out
xchg
cmp
add
cmp
repz
sbbb
jle
pop
jbe
or
sbb
inc
stc
xlat
cmpsb
orb
xor
lea
jmp
outsl
xchg
outsb
ror
movsl
mov
sub
inc
mov
jl
mov
sub
sub
dec
xor
in
sbb
pop
pushf
push
sub
xlat
nop
cmp
fsts
jl
push
lods
mov
push
lods
xchg
jecxz
inc
push
imul
cmp
cs
popf
idivl
and
sbb
push
pop
mov
jbe
and
gs
cwtl
jne
xchg
and
loope
cmpsl
dec
mov
loopne
and
mov
mov
mov
inc
notl
aas
jo
std
jno
ljmp
jbe
out
dec
int
mov
in
int3
push
loope
sub
mov
popf
cmp
mov
jnp
push
jle
add
popa
test
dec
mov
mov
sbb
xchg
lods
pushf
add
sub
xor
or
fsubl
add
or
fmull
lock
dec
push
pushf
int3
pop
insb
cwtl
push
rcl
das
mov
ret
out
cmp
mov
out
orl
repnz
ljmp
int3
dec
xor
scas
repz
out
aaa
sub
cld
fstpl
fidivs
dec
aad
mov
movsl
mov
inc
sub
mov
jecxz
pop
jns
dec
mov
xor
and
cmp
push
loopne
jp
dec
je
lret
rol
nop
or
mulb
and
arpl
sbb
mov
jo
push
std
mov
xor
mov
insw
cmp
mov
dec
pop
jne
mov
int3
outsb
arpl
xchg
and
aaa
sarb
mov
sbb
add
cmp
lahf
data16
and
sbb
sahf
ficoms
fldl
mov
scas
xor
lock
daa
sub
test
test
xchg
std
sub
cs
fimuls
ja
cmp
shlb
pop
and
dec
and
lds
xor
mov
jne
add
dec
ss
xor
popl
lods
mov
xor
mov
in
out
xor
clc
inc
or
xorb
dec
fdivs
shrb
mov
fstl
and
sub
mov
jp
mov
and
out
mov
xlat
ret
mov
mov
repnz
pop
lock
fimuls
movsl
outsl
jmp
loopne
jl
out
ret
mov
rorb
xchg
adc
addr16
xor
ja
cmp
stos
xchg
call
push
jae
push
hlt
in
loope
push
add
in
jb
fisubs
cmp
flds
jle
andl
ficoml
xor
push
adc
lock
fldl
aam
fnstenv
pop
rcll
setnp
mov
push
sub
hlt
jge
fiaddl
xchg
jp
xchg
mov
mov
pop
jns
int
imul
rol
pop
jnp
cmc
jne
sbb
add
cmp
aad
push
dec
pop
dec
inc
icebp
mov
pop
push
jge
imul
xor
out
js
push
scas
mov
sahf
bound
inc
and
jo
xor
add
orb
rcr
jg
jne
sub
cmp
or
fidivl
jg
shrb
insb
adc
rorl
pop
mov
pusha
add
gs
decl
into
aam
int
ss
loop
outsb
nop
pop
pop
sub
or
mov
lret
mov
lods
mov
jnp,pt
test
xor
pop
lods
rcrl
or
mov
leave
ret
aad
movsl
add
pop
sub
mov
fs
pop
xchg
in
jno
sbb
mov
sbb
ljmp
js
ficoms
xor
xor
je
dec
nop
pop
inc
test
adc
rolb
cld
sbb
ds
rcrl
outsl
outsl
popf
add
cwtl
ds
dec
adc
mov
dec
pushf
int3
cmpsb
pop
rcll
lock
mulb
sub
inc
inc
add
push
mov
and
mov
lahf
push
repz
sbb
mov
leave
js
mov
fistpl
dec
stos
xor
rcrl
test
mov
in
jge
ret
fisttpl
mov
lds
dec
insl
mov
xchg
mov
adc
add
xor
cs
and
hlt
adc
inc
fsubs
jmp
lock
jno
jge
dec
adc
sub
pop
pop
hlt
cli
push
mov
into
mov
push
jne
mov
cmpsl
loope
inc
mov
loope
test
inc
dec
xor
test
cmp
mov
mov
and
stos
pop
ficoms
aad
loop
and
loope
fidivrl
xchg
xlat
or
pop
test
scas
ds
cmc
mov
fistps
icebp
lret
dec
or
pushf
pop
lea
dec
rolb
jno
inc
xor
cmpsb
sbb
cmc
in
inc
les
or
sahf
adc
out
jb
and
jbe
lret
jl
es
and
dec
das
fs
jmp
jbe
mov
push
adc
loop
mov
pop
les
adc
loopne
push
dec
lret
pop
pop
mov
xchg
and
repnz
ret
jge
mov
rcrl
aas
dec
mov
insl
or
mov
xchg
into
cli
ret
sub
dec
push
mov
jmp
adcb
sub
inc
xorb
out
push
jae
sub
dec
out
popa
jecxz
into
rep
adc
add
jmp
dec
dec
pop
icebp
push
sbb
test
dec
mov
push
aam
inc
xor
jb
cltd
repnz
and
cltd
negb
mov
outsl
cmp
cmpsb
sarl
sub
xor
cmp
inc
cmp
pop
pop
outsb
mov
add
mov
xchg
js
mov
rorl
push
cmp
jg
insl
inc
sbbl
pop
cli
fidivrs
nop
mov
mov
lea
test
jae
cmp
or
adc
lret
cmp
sbb
addl
adc
shll
fs
cs
out
scas
gs
jae
push
push
nop
aad
sub
lret
jbe
jmp
roll
xor
out
xchg
cmp
inc
sbb
jg
ds
sar
stos
pop
dec
icebp
adc
jbe
push
sbb
lock
push
dec
add
ljmp
sarb
pop
xchg
mov
call
scas
lret
push
mov
in
cwtl
repz
incb
sub
ljmp
and
sub
lahf
cmp
or
jns
cs
testl
es
cmpsl
hlt
lret
xor
cld
jmp
push
call
into
xchg
cmp
jl
cmp
or
pop
mov
jne
pop
add
cmovbe
xchg
or
ja
push
inc
outsl
inc
sub
jo
push
mov
push
add
mov
mul
cld
ja
jge
push
inc
stos
and
push
sub
lods
shrb
sbb
lret
movsb
out
jae
iret
movsl
adc
insb
xor
adc
pop
add
in
push
push
lods
jp
xorb
sahf
pop
cmp
sbb
negb
faddp
mov
adc
insb
repz
fists
out
mov
jno
roll
ljmp
dec
cmp
or
or
dec
loope
enter
jns
xchg
push
inc
inc
mov
out
and
sahf
es
push
mov
mov
sub
sub
test
push
xor
or
adc
sbb
mov
hlt
lea
or
add
imul
push
push
mov
or
xchg
lods
sub
cmp
clc
jl
xorl
lcall
das
mov
jmp
stos
aad
leave
dec
push
or
push
jo
movsb
jno
cmc
or
lea
lcall
into
dec
jb
popf
shrl
adc
aam
inc
pop
mov
push
sub
pop
jecxz,pt
sub
and
lret
movsl
add
mov
jge
shlb
sbb
loop
dec
call
jno
out
mov
fs
jno
push
cmpsl
jecxz
adc
dec
les
je
and
sub
xchg
cmp
call
int
pusha
pop
imul
loope
je
xor
stos
cmp
sbb
pop
insb
sbb
scas
test
repz
mov
push
and
lds
bound
mov
dec
mov
mov
fsub
inc
in
leave
lret
mov
dec
cmpsb
sbb
pop
sub
and
notb
insl
add
hlt
mov
cmpsl
lcall
cmp
lds
ret
fst
lods
js
mov
arpl
xchg
cmpsl
in
mov
ss
sbb
mov
out
sbb
push
inc
dec
popa
je
push
jns
dec
js
jns
notb
add
dec
mov
xor
xchg
xor
addl
sub
arpl
adc
sbb
mov
inc
outsb
pusha
bnd
cmp
or
in
fmul
xlat
pop
mov
jno
jo
dec
inc
cli
je
jle
shlb
repz
jo
lcall
mov
jmp
repnz
add
jo
fisubrl
jg
inc
xor
adc
xchg
xchg
lock
xchg
out
mov
test
or
cmc
loopne
mov
jl
mov
int
lret
mov
add
cld
sbb
mov
inc
mov
add
aas
pop
and
sub
xor
xor
repnz
js
sbb
jecxz
loopne
daa
mov
std
and
pushf
loop
or
cltd
inc
out
movsl
dec
pop
sbb
mov
mov
ja
ret
sahf
sbb
xchg
mov
cld
jnp
in
lcall
mov
dec
shrl
shlb
push
fistps
outsl
fcomi
cmpsl
push
and
lret
inc
pop
leave
or
pop
or
push
adcb
decb
outsl
iret
cmp
int3
cmp
add
inc
sbb
sub
jmp
iret
pop
stc
xchg
incb
xor
into
sub
inc
fmuls
mov
in
or
shrl
fld
out
sbbb
scas
rcl
or
pop
pushf
sbb
sbb
adc
mov
jg
clc
pop
and
aas
pop
mov
adc
divb
sub
dec
or
xchg
jns
push
sub
ret
mov
fwait
adc
gs
xchg
lock
pop
sbb
or
test
lret
js
daa
int3
sti
mov
push
test
into
arpl
mov
push
outsl
std
clc
inc
mov
xor
dec
xchg
loopne
sbb
nop
mov
sbb
nop
push
mov
push
mov
pop
in
mov
sbb
fcmovnu
iret
sbb
out
sbb
inc
xchg
xchg
mov
rorl
test
xor
jns
iret
or
fnstcw
subl
sub
push
cmp
add
inc
lods
out
adc
or
xor
ja
imul
mov
pop
inc
ret
je
cmpsl
ja
ja
push
jl
out
mov
push
or
pop
sbb
cltd
fsubr
mov
mov
jge
adc
and
lock
sbb
push
bound
insl
out
insl
xor
sbb
loope
fnstcw
cmpsl
cmp
cwtl
rclb
fsubr
mov
push
xor
cmp
sahf
inc
mov
das
cwtl
aad
stos
fcmovne
jnp
mov
dec
mov
movsl
fs
add
cs
out
adc
jmp
cmp
push
cmp
and
cmp
jnp
pop
mov
fmul
test
mov
clc
mov
jp
mov
mov
cmpb
adc
xchg
push
fcmovnu
xchg
push
in
call
ret
dec
shlb
insl
dec
rcrl
stc
ja
mov
add
xlat
cwtl
movsb
sub
xor
push
pop
fidivrl
xchg
jns
jnp
fstpl
sub
ret
stos
cltd
mov
pop
mov
subb
add
pushf
jno
sub
sbb
cmpsb
into
out
push
jmp
push
out
inc
aam
sti
jno
add
sarl
outsb
mov
sbb
or
stos
je
xchg
and
lock
jp
pop
jb
adc
push
xor
or
enter
nop
mov
in
mov
rolb
add
adc
and
stos
icebp
pop
lea
roll
fidivs
cs
addr16
mov
xchg
xor
pop
pop
pop
pop
push
ficoms
idivl
add
adc
cmp
std
dec
inc
pop
fdivp
jb
jg
mov
ss
jne
mov
lods
pop
cmp
lea
push
outsb
xchg
daa
push
sbb
or
sub
adcl
in
sbb
inc
in
push
mov
pop
pushf
adc
push
xor
leave
xchg
sbb
jge
out
jns
fsubrs
ds
stos
or
add
dec
test
cmovge
daa
jmp
xor
rcl
test
movsl
ds
add
mov
lock
jae
pushf
cmp
cmpsl
lret
mov
xchg
push
cmp
in
inc
out
pusha
jae
lahf
out
clc
inc
mov
sub
repnz
xchg
orb
mov
scas
jg
jmp
popf
rorb
fisubs
into
xchg
int
and
jl
and
rcrl
test
clc
jno
sbb
insb
or
cli
mov
test
enter
inc
sbb
pop
into
sbb
sbb
fwait
mov
data16
adcb
add
dec
push
jmp
test
ds
popa
sbb
popf
enter
mov
sti
inc
jo
int3
push
pop
jp
jp
scas
xor
sbb
into
out
int3
push
mov
cmc
push
and
inc
mov
adc
inc
adc
cmp
add
jo
adc
sub
pop
inc
je
ret
loope
add
adc
pop
jb
cltd
test
xchg
mov
inc
lahf
test
mov
inc
and
ror
adc
cmpsb
gs
in
mov
add
jne
adc
repnz
add
push
jecxz
inc
fdivl
and
adc
add
lret
outsb
xor
jecxz
cmp
sbb
or
pop
push
aas
cmp
ja
daa
push
adc
xchg
sub
jp
mov
pushf
xor
test
pop
movsb
fnstsw
cmp
jo
cmp
xchg
mul
sahf
dec
adc
pop
movsl
mov
or
sbb
inc
mov
fimuls
insl
sbb
push
jb
insl
adc
and
mov
add
bound
popa
push
mov
or
push
repz
mov
or
outsl
movsl
and
mov
out
sbb
add
jmp
insl
lock
inc
rcl
lock
push
stos
sbb
mov
scas
xchg
cld
cmp
jmp
aas
inc
lock
xor
mov
mov
in
mov
cli
pop
enter
repnz
loop
xchg
add
xchg
adc
scas
xor
es
cltd
inc
in
and
sub
or
les
dec
notl
bound
sbb
pusha
testb
xchg
stos
jl
ror
jns
fsub
test
sub
dec
mov
pop
je
lds
jmp
add
shlb
mov
lea
inc
cmp
or
out
icebp
xchg
jl
pop
push
movsl
cmc
cs
in
cmp
into
ljmp
push
hlt
cmp
lea
xchg
and
adc
mov
push
nop
xchg
cmp
inc
push
pop
clc
xchg
cmp
jns
vmovaps
insb
push
mov
or
jb
jbe
xchg
mov
or
sub
in
pop
xor
or
pop
mov
test
adc
inc
in
fisttpll
inc
test
fildll
gs
sub
jmp
jo
and
inc
mov
xchg
js
lret
dec
je
int
sahf
aad
push
or
pop
ret
and
je
cmc
push
andb
mov
mov
xchg
or
lahf
jl
mov
gs
scas
fisttpll
icebp
or
lcall
jae
leave
stos
dec
in
cmpsl
adc
lret
es
xlat
hlt
ja
rcpps
shrb
add
sbb
fdivrs
flds
cmpsl
cmp
test
adcl
sbb
mov
and
mov
mov
mov
sub
pop
test
sti
xchg
jl
mov
fists
pop
add
lcall
jns
sub
aas
scas
lock
scas
int
in
shll
rol
ljmp
loope
stc
dec
cs
call
pop
stos
out
lea
fs
jmp
mov
fstpl
lahf
mov
arpl
loope
hlt
mov
in
and
hlt
or
sbb
jo
pop
cmp
xchg
pop
push
bound
inc
mov
js
lds
stos
inc
and
cwtl
pop
or
pop
inc
sbb
cltd
dec
enter
movsb
mov
rclb
xchg
fisttps
fadd
jmp
mov
jmp
popa
sahf
mov
inc
in
push
dec
loop
xor
pop
jp
shrb
stos
inc
testb
arpl
in
sub
je
mov
sbb
mov
mov
out
cmp
je
lret
add
addl
stc
mov
outsb
xchg
push
dec
push
jl
mov
dec
mov
incb
std
jb
sbb
add
and
push
rcrb
xchg
gs
mov
fimull
jae
out
dec
dec
xor
add
push
pop
inc
pusha
mov
sub
xlat
movb
mov
mov
mov
sahf
add
dec
jle
out
inc
mov
fdivs
leave
pop
jae
or
dec
inc
ljmp
std
lods
pusha
into
outsl
pop
fwait
lock
lahf
sub
fimull
lret
je
add
jae
jecxz
xchg
pop
lods
push
xchg
pushf
leave
xchg
cwtl
es
pop
xor
arpl
xor
les
xchg
xlat
cmpsl
sub
shlb
aas
ljmp
xchg
notl
xor
pop
out
push
mov
pop
cmp
bound
test
scas
ss
cmp
push
push
loopne
mov
mov
mov
mov
jo
push
jle
cmp
pop
dec
mov
ds
xor
pushf
sub
out
adc
loop
or
imul
lret
popf
xchg
xchg
lds
mov
pop
xchg
xchg
in
cmc
pop
adc
stos
mov
push
popf
mov
mov
mov
add
aas
mov
push
pop
in
xor
mov
jnp
sub
ljmp
jle
out
push
hlt
mov
push
mov
sbb
sti
inc
mov
cmp
insl
push
adc
sub
mov
gs
aas
cmc
stos
loope
and
je
pop
mov
sub
insb
xor
hlt
xchg
add
push
jb
stc
loop
repnz
pushl
xchg
pop
dec
sbb
mov
test
int
into
pushf
fwait
cmp
add
pop
pop
cmpsb
and
adc
pusha
adc
lret
outsl
in
push
mov
jge
je
mov
ficoms
imul
pop
xor
sub
mov
or
fildll
mov
push
sub
cmpb
cmpb
lods
dec
scas
ss
push
push
jl
jb
jecxz
and
in
push
fstps
sti
push
xchg
rol
xor
jg
hlt
out
dec
andnps
jg
cmp
push
mov
gs
cmp
and
push
mov
test
inc
xor
xchg
test
lret
dec
sahf
sbbb
jns
and
pop
pop
fldl
jg
hlt
clc
sahf
cmp
dec
push
mov
mov
push
mov
mov
pop
pop
push
xlat
push
inc
xor
cmpsb
adc
outsb
lock
test
cmovle
ds
shll
idivl
daa
je
cld
xor
sbb
popl
cmpsl
cmp
outsl
xchg
mov
sahf
pushl
outsl
mov
andl
or
mov
loope
xchg
enter
adc
pop
iret
rorb
mov
adc
sub
ja
arpl
aam
repz
jecxz
sub
dec
jae
call
mov
and
mov
ret
aas
in
sbb
fcmovne
movsl
sub
out
idivl
jne
jmp
push
idiv
stos
loope
push
cmp
bound
fstpt
push
dec
pop
bound
enter
or
xchg
inc
dec
not
movsl
xchg
xor
icebp
adc
notb
and
rcr
push
fdivrl
sbb
and
out
mov
pop
ffreep
pop
stos
inc
adc
std
lods
xchg
and
stos
cld
push
stos
ror
lods
pop
psraw
aam
es
mov
inc
mov
xchg
adcl
and
ds
fisttpl
dec
loopne
ja
ret
and
pop
dec
lods
jg
jae
in
jecxz
cltd
mov
int3
jne
or
jp
cld
arpl
fdiv
test
dec
inc
nop
jbe
add
mov
leave
push
adc
jo
loop
push
mov
mov
cmp
adc
mov
push
test
enter
push
sub
push
jo
pop
ja
cmp
adc
cmp
adc
testb
lret
push
mull
cmpsl
jge
add
int
mov
loope
lods
inc
mov
xchg
xchg
stos
repz
aas
pushf
lahf
loopne
ret
pop
lods
mull
clc
xor
mov
ret
cltd
in
xor
imul
mov
rorb
dec
sub
loopne
pop
insb
icebp
pushf
cmp
cmp
sub
sahf
xor
sbb
xchg
xchg
push
in
jge
inc
fsubr
mov
or
rcl
inc
xchg
sub
push
sbb
in
dec
push
xlat
aam
outsb
test
sub
push
or
ljmp
daa
cmp
push
popa
in
fwait
test
fimull
jl
cmp
in
fisttps
inc
push
adc
jnp
rcrb
stos
iret
sbb
push
lahf
mov
xor
push
dec
lret
cmpb
pop
ds
ret
add
sbb
int
adc
fsubrs
loop
xchg
mov
jne
leave
imul
mov
and
and
stc
lret
lea
pop
das
xchg
xchg
mov
int
and
repnz
jne
and
pop
aad
or
out
shl
inc
push
adc
dec
es
incb
cmp
lods
xchg
or
pop
enter
idivb
cmpsl
inc
in
jae
pusha
mov
sbb
ret
out
pop
imul
int
push
cld
cmc
shl
or
and
mov
pop
pop
sub
cmpsl
mov
and
add
test
ret
pop
addr16
aam
das
xchg
sub
mov
dec
cmpsl
mov
inc
jmp
add
mov
frstpm(287
jl
movl
repnz
pop
adc
mov
icebp
cmpsl
lret
sbb
pop
cmp
jp
push
dec
es
mov
adc
mov
lahf
outsb
jmp
ret
das
rcrb
lret
xchg
pop
repnz
shlb
pop
jp
jb
pop
push
stc
add
jne
pop
lds
cltd
insb
int
imul
cld
fcomps
add
adc
pop
insb
pop
xchg
or
push
ja
add
or
in
sub
mov
aad
xlat
insl
clc
xor
sbb
xor
insl
pop
sbb
xor
imul
fs
sbb
addb
mov
push
and
orb
shlb
ret
sub
daa
cmp
and
insb
in
mov
and
cltd
lds
out
loope
cmp
push
jmp
mov
adc
or
ljmp
scas
bound
cmp
iret
sub
lcall
lahf
sahf
jbe
repz
ljmp
mov
mov
adcl
jns
pop
adc
das
mov
mov
lods
add
popa
mov
xor
push
and
cmpl
push
inc
mov
in
add
and
js
mov
cld
ds
lret
xchg
push
or
lcall
inc
sub
add
dec
pop
jb
mov
and
fwait
sbbb
lret
ljmp
pop
pop
fs
add
add
jnp
mov
lods
inc
xchg
jne
cld
jge
call
cmp
xor
jg
dec
loop
sbb
cltd
push
add
pop
cmp
das
lds
dec
loope
xchg
dec
push
int3
pop
fldenv
xorl
jp
scas
cmp
pusha
dec
loope
fsubl
jno
push
dec
sub
adc
andl
adc
mov
popa
out
inc
cmpsl
imul
sub
add
mov
cmp
xchg
shlb
popa
lcall
nop
in
cmp
imul
sbb
enter
ja
mov
int3
adc
xchg
nop
xchg
pusha
and
idivb
jmp
je
jae
ljmp
add
jge
test
add
movsl
mov
stos
and
push
add
repz
sub
mov
xor
scas
scas
dec
push
push
mov
adc
cmp
outsb
aaa
cltd
mov
fnsave
mov
pop
outsl
pop
sub
mov
sbb
mov
add
scas
and
repz
cmp
inc
in
ret
int3
sbb
add
jle
xchg
mov
popa
jp
or
flds
and
jecxz
jge
add
sub
pusha
sbb
nop
lods
sbb
addb
mov
inc
or
pop
insb
push
add
ja
iret
push
ds
and
sti
in
mov
and
rorb
mov
mov
add
les
jmp
js
icebp
push
imul
popf
stos
insl
addr16
repnz
dec
repnz
fdivrs
fcmove
dec
push
dec
push
sub
push
int
jb
mov
xchg
mov
lea
and
sub
popa
mov
mov
outsl
roll
mov
js
cmpsb
cmp
fstpt
loopne
pop
inc
cmc
rcrb
scas
sti
inc
cltd
add
clc
mov
ja
shlb
jecxz
xor
bound
push
push
fwait
pop
je
push
mov
sbb
inc
adc
lock
cmp
scas
rorl
ljmp
negb
icebp
mov
shlb
movsl
test
nop
call
ficompl
les
arpl
mov
jmp
ret
fbstp
cmp
jne
mov
sub
int
inc
aam
pop
imul
hlt
mov
adc
ds
ret
pop
mov
jp
addl
testb
mov
push
sub
pop
xlat
stc
adc
fs
je
mov
and
and
push
shlb
test
cmc
push
nop
test
ret
aaa
ja
out
adc
push
dec
mov
mov
sbb
xchg
pop
mov
fldenv
icebp
loop
mov
lcall
pop
fisttpl
pop
mov
out
adc
ljmp
sbb
push
orb
gs
rorb
loope
mov
push
sub
lcall
ror
inc
jecxz
cld
bound
jg
pop
dec
adc
dec
push
or
stc
bnd
das
ds
mov
push
dec
add
mov
std
inc
nop
test
aas
push
sub
pop
addr16
mov
adc
cmp
xor
pop
mov
cs
jmp
cmp
ja
popa
sbb
movl
std
inc
shl
mov
rorb
jl
xchg
scas
ret
lods
icebp
push
cmpsl
aaa
push
das
int3
sub
sub
pusha
push
scas
dec
fisubrl
je
cmp
das
cltd
push
and
mov
loop
rcrl
xor
scas
mov
or
std
stos
cmp
decb
loop
jbe
push
mov
iret
rclb
repz
adc
fimull
in
and
push
pop
pop
gs
lcall
ljmp
frstor
les
int
addr16
mov
adc
arpl
adc
ror
cld
lods
popa
outsb
mov
arpl
jmp
cmp
cs
cvtdq2ps
pop
cmp
sbb
push
arpl
cmp
mov
push
mov
fdiv
xlat
cld
or
lods
adc
es
jns
cli
lea
dec
mov
shr
das
sbb
in
add
stos
daa
xchg
sbb
xchg
jno
ret
sbbl
mov
mov
jp
outsb
mov
lret
in
jge
fmuls
inc
cmpsb
xchg
popf
jno
daa
dec
pop
xchg
test
cli
lahf
jnp
push
xchg
adc
js
sbb
mov
xchg
adc
inc
bound
push
jb
loope
or
push
movsl
adc
insb
mov
mov
inc
dec
sahf
data16
neg
les
or
xor
std
je
adc
and
loope
scas
test
jecxz
xchg
push
xlat
push
pusha
cmp
cmp
push
xchg
fistpl
inc
push
scas
andb
or
int
subl
cmp
in
out
cmpsb
adc
out
je
jecxz
cmp
sahf
cs
fwait
jnp
enter
and
lahf
sbb
call
jo
jecxz
jo
bound
std
mov
fisttpl
push
pop
out
jle
xor
cmp
mov
cmp
pusha
das
fwait
mov
fwait
push
lods
or
sbb
dec
mov
sub
push
popf
repnz
cltd
or
adc
subb
sub
xor
bound
ret
pop
and
ret
rorl
xchg
fbstp
fidivrs
mov
push
mov
dec
test
xlat
jp
push
adc
icebp
or
imul
push
xchg
aaa
jb
xlat
xchg
push
xchg
enter
cwtl
cltd
fiadds
adc
in
cmp
or
jnp
adc
loop
das
and
and
je
leave
outsb
stc
push
mov
cltd
repnz
cltd
arpl
sti
mov
mov
mov
insl
in
es
mov
out
inc
fnstsw
iret
xchg
je
jl
js
mov
hlt
int
pop
cmp
push
mov
cwtl
pop
sbb
mov
or
inc
shrl
adc
loopne
sub
lret
jns
or
arpl
mov
dec
imul
repnz
scas
mov
das
mov
dec
es
popa
adc
push
pop
inc
xchg
in
lods
in
sbb
mov
xor
xchg
movsb
ror
pop
std
push
dec
and
cmpsb
lahf
xor
and
aaa
stc
mov
test
lock
or
mov
lcall
xchg
jo
movsb
leave
aaa
in
ficompl
aad
outsl
aad
xchg
sbb
jne
sahf
inc
push
push
push
xor
and
imul
add
lret
inc
test
jne
sbb
nop
or
pop
mov
sbb
add
ss
jno
stos
fists
sub
mov
dec
and
lea
je
idivb
sub
pushf
jo
inc
sbb
adc
scas
out
jns
ss
mov
sub
mov
xorb
loop
dec
fs
test
cltd
cwtl
stos
mov
push
fdiv
mov
cmpsb
xor
adc
idiv
mov
lock
lds
sahf
mov
int
pusha
xor
pushf
cmpsb
sbb
inc
jnp
movq
push
adc
sbb
inc
jae
addl
adc
mov
cmp
cmp
vcomisd
rcll
cmp
and
test
aam
addr16
sbb
std
cli
jl
ds
repnz
rclb
jb
loope
jne
sub
xor
inc
jge
adc
inc
out
xchg
pop
mov
and
and
mov
test
dec
ljmp
cvtdq2ps
or
notb
nop
push
cmp
jns
add
les
and
adc
movsb
pop
adc
incb
orl
sbb
stos
xor
jae
shll
scas
xchg
fucomp
mov
mov
mov
sbb
inc
sub
jne
std
subl
rorl
es
in
sub
insb
mov
xlat
lret
jae
jne
hlt
pop
test
rorb
cmp
push
mov
pop
leave
sti
push
dec
xor
mov
mov
push
imul
jo
pop
or
adc
dec
add
sub
mov
shrl
arpl
xchg
add
cmpsb
pop
daa
sbb
inc
and
shrb
fdivrs
push
xorb
les
xchg
mov
sbb
jmp
iret
pop
mov
std
fldenv
pusha
jecxz
mov
in
push
push
mov
test
xchg
testl
adc
das
mov
pusha
es
pop
pushf
insl
aad
mov
or
or
inc
in
add
insb
rcl
movsb
hlt
aaa
adc
add
jl
pop
imul
sub
pushf
sbb
scas
in
sub
push
outsl
sub
enter
and
xchg
xor
sbb
les
dec
mov
adc
out
cmp
imul
or
push
or
out
sbb
push
fwait
out
repz
ss
mov
jle
insl
sbb
jo
push
or
add
stos
lahf
pop
mov
lea
insb
pushf
jae
xchg
call
xchg
aaa
or
cwtl
push
or
gs
jne
mov
sbb
sub
sub
lret
inc
push
sbb
or
xor
fisttps
cwtl
add
pop
mov
stos
jns
push
subl
popa
repnz
sbb
jae
and
mov
ljmp
mov
inc
push
test
fldt
xor
adc
xor
mov
fucompp
inc
jecxz
cmp
jb
mov
jne
test
out
fwait
sti
out
cmp
daa
jo
cmpl
dec
popa
add
test
mov
mov
jae
xor
lds
cltd
mov
mov
dec
mov
mov
outsl
jnp
stos
inc
sbb
lods
jl
jecxz
lock
test
jecxz
mov
hlt
xchg
scas
xchg
dec
loope
fldcw
mov
xchg
and
dec
xchg
inc
clc
sub
addr16
xchg
xchg
and
push
aam
pop
aas
addl
adc
decl
mov
dec
pop
out
dec
enter
mov
mov
push
sbb
cs
xchg
push
mov
sbb
repz
jbe
jns
js
cmpsb
pop
and
jle
mov
sti
inc
mov
xlat
fwait
stc
pop
sahf
addr16
pop
clc
push
mov
jl
dec
cmpsl
mov
mov
sub
add
jne
push
sbb
int
popa
adc
divl
in
in
aaa
or
inc
jle
fstl
cmp
test
jno
fs
loopne
xchg
xor
fdivl
jno
dec
sub
mov
cs
pop
pop
fidivs
test
lret
push
xchg
shrl
pop
push
cmp
mov
jge
xchg
icebp
mov
jle
adc
xchg
rcl
xchg
imul
sub
sub
shll
xchg
test
add
push
inc
pushl
add
negl
lds
lret
push
push
jp
ret
cmp
sbbl
mov
jg
jae
jne
aad
ljmp
xchg
fucomp
imul
lret
mov
xchg
dec
test
mov
sbbb
test
fs
lret
lods
inc
rolb
insb
jb
aas
idivl
outsl
bound
ja
scas
imul
cltd
push
fcompl
pop
add
fsts
cmp
inc
mov
pop
hlt
adc
xlat
les
in
sub
xchg
pop
xchg
adc
idivb
pop
push
cmpsl
cmpsb
cs
cmpsb
pushf
scas
inc
scas
dec
xor
insl
mov
nop
jo
sbb
enter
insl
popf
push
mov
pop
xchg
cwtl
loopne
mov
mov
mov
xor
pop
inc
mov
xchg
and
dec
mov
jns
pop
outsl
push
into
aad
pop
inc
insl
outsb
popf
sbb
scas
sbb
xor
and
jle
cwtl
lods
dec
sbb
addr16
out
stos
xchg
subb
cmp
pop
push
add
mov
sub
jp
cmpsl
cli
cmc
imul
jns
ds
das
and
shrb
pop
fimuls
pop
push
xchg
sub
adc
sub
cmp
push
rcrl
jb
cmp
idivb
not
xchg
or
fs
cli
pop
rcl
iret
loope
stc
les
stos
nop
call
sbb
leave
iret
out
je
pop
mov
scas
dec
dec
xchg
hlt
mov
in
or
aam
fmulp
icebp
mov
inc
in
pop
push
ret
shl
pop
sub
or
test
stos
push
jecxz
cmp
add
pop
add
sahf
ljmp
and
add
mov
test
mov
aam
orl
and
jne
pop
rcr
cmp
push
or
adc
mov
push
fmulp
roll
pop
mov
dec
insl
pop
addb
lock
stos
lods
mov
xor
jno
call
adc
cmp
movsb
mov
je
ret
enter
jns
xchg
mov
test
movsl
xor
ret
dec
aad
push
movsb
mov
pop
or
xor
movsl
fidivs
out
mov
dec
mov
pop
mov
testl
push
mov
xchg
roll
fistl
inc
add
mov
lods
pop
cmpsb
test
loope
adc
cmc
mov
add
imul
jl
push
loop
outsb
aaa
mov
inc
inc
mov
pop
adc
loopne
xchg
subl
aad
adc
iret
xchg
lock
pop
int
or
xor
divl
test
xor
repnz
cltd
adc
popa
push
divb
mov
repnz
push
add
lcall
cmpsb
pusha
push
pop
pop
fs
scas
mov
pop
stos
dec
pop
repz
or
out
sub
in
imul
ret
adc
xchg
ficoml
sub
addb
sbb
aaa
add
movsl
ds
xchg
pop
roll
fwait
mov
inc
aaa
adc
mov
stos
fcompl
xor
shrl
iret
arpl
cmp
cmp
pushf
jns
movsl
jno
lret
cmp
test
mov
push
iret
pop
cmp
arpl
xchg
repz
jnp
mov
dec
pop
jmp
jb
fdivl
sub
push
in
icebp
data16
adc
inc
mov
fsubrs
out
inc
xchg
arpl
jae
popf
pop
mov
mov
int
je
shrb
sahf
push
mov
mov
repz
mov
bnd
sub
cltd
mov
push
adc
or
push
jmp
cmpb
sti
in
or
xchg
cmp
push
je
pop
fs
sbb
test
cltd
rclb
dec
popl
cmp
in
adc
call
mov
call
out
shll
or
push
neg
sub
add
int3
or
dec
dec
push
jno
cmp
out
or
stc
pushf
push
sarl
leave
and
cmpsl
scas
pop
push
pop
out
jne
pop
mov
cmpsl
mov
int
clc
pop
mov
in
gs
aaa
jmp
cld
in
mov
mov
inc
iret
stos
popa
jae
push
icebp
mov
mov
push
daa
mov
int3
mov
sbb
mov
leave
imul
sub
adc
addr16
xchg
dec
lds
nop
jnp
pusha
and
popa
and
mov
dec
sbb
shl
jne
cmc
inc
gs
in
aad
or
adc
mov
xchg
cmpsl
leave
loope
lock
out
fst
int
jns
insb
addb
mov
fbstp
adc
dec
in
jbe
adc
xchg
or
xchg
test
out
popa
out
push
and
stc
push
mov
sbb
lock
fadds
jg
pop
inc
xchg
ljmp
shrl
iret
popa
test
stos
cmpsl
xor
xchg
dec
jg
data16
mov
jmp
mov
mov
imul
and
jno
push
xchg
push
rcl
jae
out
dec
lcall
pop
push
stos
cmp
aas
lret
cli
rolb
pop
daa
fs
dec
scas
into
and
js
jae
in
or
dec
dec
adc
xchg
cmpl
push
mov
and
dec
cltd
aad
cmpb
add
fisubl
dec
pop
pop
dec
or
push
adc
dec
cmp
and
jno
mov
rcll
lcall
aam
and
cmpsb
fisubrs
mov
aam
les
mov
cmc
les
xchg
std
adc
es
xor
cmp
repnz
mov
into
jae
in
and
pusha
xchg
mov
out
scas
adcl
adc
jno
jge
int
xchg
sbb
stos
lcall
sub
push
inc
int
insl
lods
or
int3
sbb
fidivrs
lcall
jb
pusha
ds
cmc
xchg
xchg
jbe
xor
sbb
mov
mov
jmp
dec
pop
daa
sbb
cmp
outsb
xchg
fs
cmp
mov
shrb
gs
dec
or
xlat
les
fdivrs
cmpsb
dec
cmpsb
adc
fwait
sbb
je
push
les
aaa
stos
xchg
js
or
xchg
sbb
adc
jmp
xchg
popa
push
call
int
cwtl
xor
leave
fiadds
iret
and
sbb
in
adc
mov
inc
push
stos
jle
jo
sub
mov
inc
fsubs
mov
fwait
pop
lea
or
mov
fwait
test
mov
cmp
dec
js
sub
call
fsts
dec
in
int3
jb
sbb
push
sub
inc
ret
loopne
lock
fs
push
mov
int
ss
add
dec
and
fs
jl
outsl
mov
das
pop
jb
pop
shll
xchg
mov
push
ret
insl
adc
mov
sbb
pop
imulb
or
push
mov
addb
pop
xorb
lods
mov
repz
dec
mov
repz
jmp
cltd
sbb
xlat
loop
and
gs
push
push
cmp
cmp
out
out
inc
mov
mov
xchg
inc
xor
dec
mov
imul
subb
mov
cltd
dec
int
ret
xchg
sub
outsl
push
je
sub
jno
push
sti
sub
out
adc
cmc
fwait
sub
insb
ret
lock
inc
and
call
lret
lret
lds
push
fisubrl
decb
fwait
lock
push
stos
xchg
jno
cs
in
xlat
push
cmpsl
dec
daa
xchg
test
mov
rol
es
sbb
mov
popf
daa
cld
cmp
daa
pop
mov
popl
in
daa
xchg
and
inc
int
bndstx
nop
out
test
iret
push
stc
pop
out
insl
mov
mov
jl
dec
pop
mov
dec
dec
mov
ss
insb
xchg
mov
gs
aam
and
sarb
orb
pop
xchg
push
mov
test
cmp
dec
mov
sbbl
ds
ret
addb
xchg
mov
adc
cmpsb
xchg
loop
lods
movzbl
jle
push
call
bound
mov
xchg
mov
add
aaa
sbbl
inc
test
mov
adc
rorb
mov
sub
cmp
inc
div
push
outsb
ljmp
insb
ret
inc
rcr
js
cmp
out
or
push
jnp
push
lret
jmp
sub
xchg
and
xor
cmp
cmc
loop
lock
fwait
ss
pop
rcl
mov
cmp
test
fchs
fstps
push
out
leave
inc
repnz
push
mov
mov
jbe
mov
sub
repnz
dec
or
sbb
xchg
fst
mov
pop
and
sub
adc
ds
dec
mov
data16
xchg
cmpsb
cmpsb
pop
mov
out
lcall
push
repnz
adcb
cmp
add
xor
out
or
test
add
ljmp
mov
sbb
adc
enter
pusha
repz
push
ficomps
cmpsl
sub
xor
repnz
icebp
and
int3
stc
cltd
leave
push
push
int3
jno
loope
cmp
cmp
mov
ficomps
test
sbb
pop
jge
xchg
inc
add
out
push
test
test
aad
mov
std
negb
pushf
fldl
enter
inc
and
jge
leave
sbb
sub
cmp
int3
js
mov
cmc
bnd
xchg
jno
and
int3
mov
adc
int
sub
push
lret
pop
pop
lret
shlb
inc
pop
fmull
adc
and
rcl
leave
out
out
lret
pop
push
sub
ret
clc
jl,pt
roll
out
inc
ss
outsb
mov
pusha
push
adc
aaa
and
mov
xchg
test
stos
addr16
lret
or
sar
dec
jns
hlt
jno
lret
dec
and
loop
cld
dec
adc
sbbb
sub
cwtl
lods
cmp
stos
out
xorl
mov
test
push
fcmovu
lock
jns
leave
shl
add
pop
ds
adcb
rcll
mov
jle,pn
int
add
xchg
out
push
lcall
sarb
jnp
imul
and
lods
fnclex
or
cli
mov
xchg
sti
mov
adc
bound
xor
jns
outsb
movsl
or
lahf
imul
or
cwtl
mov
lret
loop
add
addr16
insb
inc
ja
dec
dec
adc
imul
and
push
jbe
imul
gs
daa
dec
or
and
xchg
and
adc
mov
sti
dec
mov
fs
jnp
and
gs
mov
pop
pop
push
mov
sbb
or
cli
test
outsb
sub
xchg
cmpsl
in
cmp
xor
xchg
mov
mov
xlat
xchg
out
xor
cmp
mov
cmpl
adc
sub
xor
cmp
dec
fidivrs
mov
pusha
or
xor
cmp
loope
pusha
sbb
xor
mov
sub
jp
mov
ss
or
jmp
lea
out
int3
sbb
jae
sub
popa
ret
xor
popf
stos
in
in
pop
out
repnz
lods
cmp
scas
push
adc
fsubrl
fsubrl
push
pop
xchg
outsl
popf
roll
loop
push
stc
xchg
scas
and
inc
test
pop
dec
push
fcmovnu
insb
cmp
arpl
frstor
or
outsl
js
pop
idivl
mov
pop
rol
push
lret
or
gs
popf
dec
or
iret
sbb
test
mov
or
mov
out
mov
adc
jge
movsl
sbb
adc
sti
scas
dec
arpl
divl
and
mov
and
or
xchg
not
cli
in
mov
sbb
loopne
add
jne
pop
leave
out
xor
pop
mov
fistl
xor
or
cmp
or
add
cmp
lcall
fisttpll
xchg
ret
adc
push
mov
xchg
leave
outsl
mov
repz
adc
jne
inc
mov
and
fistps
adc
push
setp
or
lahf
cmp
push
inc
lahf
fisubs
push
xchg
addr16
in
lret
dec
fwait
xlat
test
roll
push
adc
stos
xlat
push
loop
sarb
ss
sub
mov
jae
cltd
js
inc
pop
or
sbb
cmp
rcl
scas
aaa
sub
aad
push
mov
xchg
cmp
pop
fs
xchg
xchg
sub
arpl
jmp
pusha
leave
push
mov
mov
test
data16
ljmp
out
filds
test
adc
lcall
mov
int3
sub
stos
mov
inc
and
test
pop
arpl
aam
repnz
subb
sbb
scas
ja
sbb
pusha
aad
pop
mov
sbb
stos
jge
add
pop
arpl
scas
faddl
adc
lods
in
rolb
jb
adc
mov
jecxz
lret
pop
lods
xlat
jae
hlt
addr16
and
imul
add
jmp
sub
add
xlat
mov
push
mov
iret
dec
rcll
leave
in
sub
enter
mov
insb
arpl
push
push
cmpsb
aam
xlat
mov
mov
xlat
or
aaa
ret
aad
jne
jp
cs
xchg
cmp
loop
mov
popf
sti
push
pop
fidivrs
push
cltd
mov
data16
cmpsl
dec
repnz
push
jnp
negb
test
push
insl
jo
mov
sahf
cmp
add
adc
mov
fdivs
imul
push
push
daa
popa
sbb
imul
xchg
pop
popa
pushl
inc
in
mov
inc
mov
pop
xor
sub
int3
arpl
pop
aam
out
xor
jne
mov
imul
xor
leave
xchg
jae
jecxz
mov
dec
jl
pop
adc
orl
stc
andl
fadds
stc
dec
call
out
and
lret
sahf
pusha
lods
repz
xchg
push
sbb
dec
dec
adcb
jne
dec
ss
movsl
cld
pop
sub
push
subl
jle
xor
sbb
sbb
pop
roll
fwait
dec
push
sub
bound
fiaddl
hlt
adc
jo
gs
add
test
negb
sahf
mov
or
imul
sarb
xchg
mov
fcmovb
imul
xchg
in
cmp
popl
sahf
pop
dec
or
push
jl
adc
adc
add
mov
cld
test
test
inc
fs
add
xchg
lret
adc
or
jmp
sbb
xchg
cld
jbe
rorb
inc
iret
and
sbb
dec
test
pop
jbe
addr16
jmp
sbb
push
push
lods
nopl
jg
dec
pop
mov
fisttps
jo
andb
pop
es
or
dec
mov
into
fmulp
hlt
dec
jae
jo
ret
xchg
sub
aas
cld
pop
lods
mov
adc
ficompl
push
inc
cmp
fucomip
pushf
aaa
outsl
sub
popf
mov
pop
shr
jge
add
repnz
adc
repz
cmp
xor
inc
add
mov
divl
sub
inc
ds
adc
and
mov
out
rolb
pushf
cli
xor
aam
xchg
test
in
xlat
cmpsb
xchg
popf
inc
repnz
shrl
dec
jp
popa
rcrb
sub
cmp
pop
sti
sub
dec
insl
faddl
enter
out
mov
cmp
mov
or
push
loopne
mov
mov
inc
sub
movsb
test
es
test
cmpsl
icebp
int
add
sbb
mov
scas
imul
xor
xor
jns
lret
pop
jns
add
loopne
mov
into
sbb
and
mov
movsb
mov
or
cmp
push
mov
mov
adc
fs
cmp
divb
pop
inc
lea
rcll
lret
inc
add
or
je
in
push
inc
dec
pop
gs
call
pop
xchg
jmp
loope
pop
dec
pop
pushf
pop
adc
scas
pop
incb
push
adc
xor
inc
xchg
mov
icebp
gs
xchg
jb
mov
iret
pop
mov
outsl
ret
pop
jns
mov
adc
lret
or
andb
push
test
das
sbb
mov
cmpsl
insl
sub
mov
jle
adc
jo
std
shrl
and
int3
push
mov
sbb
mov
or
sti
cmp
mov
or
outsb
enter
sbb
inc
dec
push
jb
cmp
ret
sub
add
das
pop
push
pushf
jnp
adc
test
popf
jae
lock
lods
rep
xchg
mov
jbe
pop
push
mov
inc
jo
andb
sub
fsubrs
lcall
mov
insb
cs
movsb
inc
int
mov
aas
je
sbb
and
push
les
sbb
mov
jmp
into
das
ffreep
out
adc
cmp
inc
sbb
mov
push
sar
enter
out
in
mov
sarl
dec
out
mov
lahf
push
xchg
or
cmp
cs
pop
push
pop
dec
lds
enter
xchg
ret
add
mov
stc
mov
dec
jle
adc
cli
or
xor
icebp
jp
ret
pop
mov
jp
jle
xchg
jns
mov
faddl
enter
popa
mov
or
jmp
push
sti
adc
pop
lret
enter
sub
decb
movsb
xor
mov
mov
cli
mov
icebp
fsubrs
adc
insl
outsl
cmp
lds
imul
dec
dec
iret
jle
outsb
inc
ss
pop
xor
arpl
adc
cmp
inc
push
cld
sub
pusha
dec
push
popa
dec
mov
les
dec
fisubrs
adc
sub
scas
nop
sarl
push
add
movmskps
stos
call
js
mov
and
inc
mov
cmp
pop
je
mov
clc
mov
cmp
push
loop
add
out
test
push
stc
and
sbb
add
pop
inc
mov
fidivs
lahf
daa
jbe
inc
jbe
sub
jecxz
incl
cmp
mov
cmp
mov
push
fimuls
adc
xor
cld
push
js
mov
dec
lea
lock
mov
add
and
popf
mov
pop
mov
int
add
inc
ret
into
jo
out
out
push
test
in
jbe
jnp
arpl
sti
xor
mov
int3
arpl
xchg
cmp
mov
imul
lea
xor
cli
dec
in
push
add
xor
dec
cs
testl
fdivrp
test
pop
fs
lods
fwait
out
jecxz
xchg
pop
mov
mov
or
push
mov
cmpsl
lret
call
inc
sbb
mov
ret
stc
ja
sbb
adc
sub
push
test
mov
push
daa
cmpsb
jne
dec
popf
lds
mov
mov
pop
stos
or
icebp
loop
add
lret
xor
loopne
jno
or
shrl
dec
jbe
shrl
pop
jae
xchg
je
xor
push
rcrl
rcrl
pop
mov
lods
jmp
xchg
call
jmp
loopne
push
and
push
or
ja
xor
lcall
lds
movsl
mov
push
fs
fdiv
or
and
sbb
imul
xor
xorl
insb
in
loopne
xchg
out
mov
int
out
jo
jo
mov
fadds
xor
arpl
ljmp
test
adc
xor
mov
mov
inc
lds
xchg
push
inc
push
loopne
mov
rclb
jns
fists
jbe
fldt
call
push
pop
cmc
cmc
pop
hlt
cwtl
xchg
pop
cli
leave
mov
or
sbb
sbb
inc
cmpsb
push
xchg
mov
jb
clc
sub
repz
in
cmp
scas
cmp
sub
movsb
sbb
xchg
rcl
pop
inc
popa
pusha
lret
mov
and
xor
cmp
fisubrs
push
inc
dec
test
or
pushf
jl
flds
pop
mov
mov
inc
cmp
out
or
out
in
ljmp
lock
cmp
shrl
xor
cltd
adc
xorl
movsb
add
cmpsl
arpl
loop
cwtl
jl
jge
xorb
in
arpl
insl
add
pop
inc
and
aam
addb
mov
and
dec
das
pop
fnstsw
inc
push
jmp
lret
loope
sub
sbb
xlat
cld
loopne
cmova
ficoms
cmp
sbb
push
dec
roll
sub
dec
inc
pop
sub
pop
sbb
pxor
std
cmc
mov
add
sti
adc
hlt
push
xchg
fwait
data16
mov
sub
outsl
arpl
jno
sbb
or
lock
cmpsl
ljmp
mov
xor
ret
push
pop
shl
mov
mov
dec
ja
pushf
mov
adc
cmp
fldt
scas
pop
or
sub
iret
loope
inc
jb
sub
push
int3
jg
vpxor
adc
dec
inc
inc
mov
and
xchg
fwait
movsl
shl
xor
clc
cmpsb
jle
les
in
repnz
addl
push
out
fwait
mov
and
jno
icebp
xchg
loopne
stc
jecxz
cwtl
push
sbb
sub
xchg
mov
test
pop
sub
sbb
push
pop
int3
cmc
inc
negl
adc
mov
hlt
mov
std
popa
mov
fisubl
idivl
scas
inc
aas
jle
jno
not
subl
arpl
test
dec
cwtl
cmp
or
gs
inc
setge
lock
add
pop
mov
mov
out
sahf
sub
aaa
leave
lret
mov
lods
mov
pop
dec
xor
sar
xchg
xchg
xor
mov
sti
clc
mov
test
divl
pop
xchg
loopne
mov
xchg
hlt
faddl
call
add
cwtl
cmp
out
push
add
adc
fadds
pop
cmp
shlb
ss
test
test
or
loop
cmp
jbe
outsl
inc
inc
nop
push
xor
or
and
sbb
inc
pusha
movsb
cmp
mov
icebp
lock
int3
mov
mov
mov
std
int
add
mov
add
dec
cmp
jbe
shl
call
fs
enter
xlat
pusha
rcrb
xor
aam
ss
das
push
or
ss
mov
fcmovb
mov
sub
push
notl
xor
cmc
js
jae
scas
xchg
sbb
lods
sar
icebp
cltd
loop
lods
cmp
movsl
shrb
xlat
fbstp
mov
aam
pushf
pop
mov
inc
fbld
aam
jb
push
in
das
dec
inc
loope
fs
mov
inc
shl
imul
or
jle
dec
mov
xchg
stc
mov
cli
imul
imul
cmp
mov
sub
nop
xchg
fistpl
inc
dec
xchg
mov
push
and
repz
xchg
dec
cmpsb
pop
pop
loope
cmpsl
dec
jmp
mov
sub
aaa
sub
test
pop
mov
mov
push
add
lcall
adc
adc
call
push
add
mov
fstps
fs
fldenv
cmc
int
jle
repz
add
jne
std
test
xchg
jl
adc
cmp
sub
sbb
push
jno
mov
in
loope
ds
lahf
test
pop
xlat
adc
pop
popf
rcrb
ds
cmp
insl
cmp
xor
fsubrs
popa
push
cmp
dec
js
sub
push
imul
popf
int
jge
cmp
mov
in
jle
into
std
loopne
inc
int
ret
into
mov
mov
xlat
xchg
xor
cld
cmp
mov
gs
and
xchg
loopne
xor
aam
cmp
movsb
cmp
fcoml
cmc
pop
cltd
sbb
push
mov
jecxz
mov
mov
call
popf
jbe
cmpsb
popa
cmp
xchg
push
mov
int3
fiaddl
adc
std
push
mov
mov
mov
mov
leave
jecxz
popf
sbb
arpl
and
cmpsl
xor
cmp
mov
data16
dec
fidivl
dec
cmp
mov
fstpl
mov
jl
hlt
loop
mov
je
lods
cmp
xor
dec
push
inc
xor
jb
mov
insb
mov
inc
lret
sahf
mov
dec
pop
popa
pop
outsl
sub
repnz
push
addl
xorl
fwait
xor
repnz
mov
xlat
and
stc
pop
in
and
popa
enter
sarl
unpckhps
adc
mov
jb
and
sti
into
ljmp
dec
fs
insb
mov
and
dec
fwait
dec
and
cli
lahf
pop
xor
jp
mov
inc
repnz
mov
aam
test
outsb
cmp
int3
xchg
pop
daa
cmc
fistl
lock
push
sbb
scas
gs
iret
xor
jmp
scas
xor
pop
sub
add
ja
xlat
xchg
and
imul
push
sbb
imul
pop
jb
addr16
and
cmpsb
mov
lret
std
sbb
xor
out
lods
repz
std
addb
jmp
sub
mov
rcrb
mov
mov
in
cli
mov
into
xor
pop
call
adc
sub
movsl
out
mov
or
cs
add
fildll
mov
popa
mov
push
push
cs
or
xor
and
addb
idivl
lods
inc
push
repz
aad
gs
cmc
fucomp
js
andb
bound
adc
mov
inc
sub
pop
enter
add
pop
push
jmp
je
xchg
fistl
mov
xor
mov
xchg
in
jle
fistpl
mov
mov
fstps
adc
mov
divb
cmp
fistpl
outsb
sbb
int3
xor
and
ljmp
xchg
pop
mov
ja
popf
int
enter
mov
rcrb
mov
sub
je
sub
mov
fwait
push
idivb
pop
add
outsl
je
lret
jle
mov
sarl
xchg
push
repnz
aam
fnstcw
xchg
imul
or
dec
jb
push
sbb
mov
data16
dec
jmp
sbb
mov
xchg
or
xchg
cmpsl
mov
add
xchg
das
mov
push
divb
int3
xor
lea
test
insb
out
popa
jmp
pop
add
jg
outsb
mov
mov
das
push
out
push
add
stos
popl
push
inc
xchg
mov
std
jmp
ficoml
outsb
xor
neg
dec
push
rorl
pop
adc
mov
stc
arpl
push
clc
inc
scas
inc
dec
pusha
xor
shrb
jmp
sahf
fstpt
cld
push
fs
andb
cmpsl
mov
lods
push
push
leave
iret
sbb
lahf
mov
gs
mov
push
aaa
adc
shl
cltd
inc
push
adc
or
xor
cli
leave
lods
jg
popa
sbb
mov
loope
iret
inc
inc
pop
test
ret
xorb
mov
pop
or
mov
inc
adc
enter
pop
jo
data16
das
ficoms
popa
cwtl
lret
mov
xor
mov
adc
outsl
jle
xor
cwtl
lods
ss
cmc
fldl
mov
rorl
mov
or
or
push
fidivrl
and
and
mov
or
mov
loop
xor
imul
mov
lret
or
fisttps
fwait
add
jmp
stc
and
mov
jbe
pop
push
sbb
push
lcall
lfs
js
and
mov
sti
lret
rcrl
aaa
xchg
mov
jno
xlat
orl
mov
cmp
ja
fstpl
inc
outsb
arpl
mov
loope
jl
int
aaa
mov
sub
push
mov
xchg
ds
repnz
aaa
xor
es
mov
test
jae
xor
xchg
pop
pop
arpl
fldenv
fcmovb
fadds
pop
divl
je
jns
test
fistpl
gs
bound
mov
bound
pop
loop
loop
pushf
push
push
addr16
test
adc
xchg
adc
xchg
outsl
out
mov
lret
lret
loop
lar
mov
arpl
xor
mov
pop
outsb
mov
test
add
xchg
and
dec
ljmp
mov
adc
sub
inc
sub
fcmovnu
aad
mov
cld
shrb
pop
xchg
and
and
jge
pop
ljmp
and
ss
add
jns
push
sbb
fisubrl
pop
mov
pop
xchg
mov
dec
sbb
subb
xor
outsb
push
andb
sahf
leave
adc
cmp
pop
xchg
dec
nop
xor
pop
jbe
loop
aad
mov
loop
adc
mov
ss
dec
daa
jmp
in
dec
mov
push
inc
cmp
pop
mov
ljmp
in
inc
lock
inc
inc
fcomp
testl
jns
cmc
xor
xor
sbb
jp
pop
insl
or
out
mov
call
std
call
cli
xchg
mov
test
outsb
mov
lcall
pop
scas
in
arpl
xchg
imul
pop
fwait
std
scas
in
out
scas
push
pop
rcrl
pusha
inc
popf
cltd
cmp
int3
mov
jb
xchg
pushf
ret
ljmp
cmpsl
repz
mov
add
dec
inc
jge
cmp
mov
insl
xchg
sar
or
les
lock
sti
mov
mov
pusha
ljmp
or
fs
addr16
outsb
fistpl
shll
sub
cld
sbb
adc
lahf
inc
fwait
pop
fists
pop
gs
mov
leave
and
mov
xlat
cld
jl
xchg
rcl
add
in
push
cmp
xchg
in
push
lea
outsb
popa
rolb
aad
or
pushf
and
lods
out
addr16
icebp
sbb
fwait
dec
cwtl
push
sbb
stos
lock
xchg
mov
and
mov
or
outsl
jecxz
out
pop
push
jb
incb
mov
mov
xchg
outsb
xlat
imul
jge
loope
sub
addr16
in
adc
jns
add
sbb
hlt
mov
push
cwtl
test
xor
jnp
mov
ficomps
js
xchg
jp
fsubl
loop
loope
cmp
sahf
push
cli
mov
mov
ret
adcl
pop
xchg
xor
jle
add
xchg
aad
mov
jae,pt
addb
js
pop
lahf
jne
out
aam
cs
push
xor
lods
ret
test
xchg
out
push
repnz
pushf
outsb
je
cmp
testb
std
xchg
or
mov
in
daa
negb
xor
and
sbb
jb
mov
jno
in
shll
arpl
std
cltd
lahf
pushf
mov
adc
outsl
fnstsw
lcall
adc
lock
into
pop
into
loope
stc
nop
inc
movsb
jnp
push
lods
lret
icebp
andb
jecxz
sbb
icebp
fiadds
pusha
and
jno
dec
fwait
and
fldenv
pop
mov
xor
ss
add
mov
lods
cmc
rolb
dec
shr
cmp
stos
ja
dec
es
lea
movsl
in
movsb
test
pop
cmp
cld
int
dec
rclb
repz
sub
xor
jl
int3
pop
movsl
movb
imul
add
ja
mov
mov
cmp
orb
shlb
push
stos
jno
das
xabort
xchg
shrl
push
mov
rol
jg
xchg
mov
or
pusha
mov
xor
test
insl
jb
jnp
lea
fisttps
inc
cltd
cmp
cli
or
das
arpl
mov
dec
jne
mov
dec
push
mov
js
dec
insb
stc
je
rol
pusha
inc
cmc
or
cmp
cmp
push
test
cmpsl
jcxz
scas
cmc
jmp
sbb
cwtl
adc
je
cld
lods
sub
jecxz
hlt
fsin
loopne
xor
movl
or
cmp
and
fs
xchg
sbb
cmpsb
xchg
out
xor
push
mov
push
mov
xor
loopne
xchg
jge
addl
enter
mov
cmc
adc
adc
xor
fmul
test
adc
jmp
stos
inc
xor
push
scas
push
xor
jb
fadd
frstor
xor
cmpsl
adc
pusha
cmpsb
mov
jne
lea
aad
and
sbb
loop
jnp
enter
mov
jle
and
jno
in
setge
pop
mov
fbstp
pop
mov
mov
jne
loope
jg
mov
loopne
inc
movsl
rclb
call
filds
mov
scas
pop
cmp
js
fwait
mov
fwait
inc
push
sti
mov
sbb
jmp
sar
lret
movntq
out
scas
jp
add
adc
xchg
rcrl
insl
push
push
mov
add
sbb
clc
fsub
inc
mov
mov
inc
in
add
mov
mov
pusha
data16
mov
mov
and
jl
dec
push
adcb
fsubrp
pop
pop
xchg
inc
mov
inc
aam
leave
stos
add
mov
push
adc
mov
ja
mov
scas
push
lds
or
xor
les
rol
push
push
xor
or
test
and
lret
sbb
int3
dec
lahf
popa
push
cltd
and
pop
mov
add
lds
popa
or
mov
popa
pushf
sub
hlt
xchg
xchg
out
mov
not
aaa
stos
pop
jb
jl
push
sbb
or
jns
mov
lcall
or
inc
lcall
int
out
push
icebp
mov
aad
adc
repz
pop
dec
das
ret
fdiv
popa
ds
hlt
in
in
mov
fdivs
add
in
or
int3
cmp
mov
mov
add
dec
call
in
mov
repz
scas
movsb
lret
sub
insl
cmp
jnp
mov
sub
aaa
aaa
lcall
xchg
cmp
push
test
int
ja
xchg
je
cmp
bound
fistpll
mov
add
mov
lret
aas
adc
shlb
fs
insl
mov
add
push
inc
lcall
mov
ss
xchg
cli
pop
inc
clc
mov
dec
xor
arpl
xchg
cmp
out
frndint
aaa
out
jmp
fistl
xor
mov
push
dec
adc
ret
int3
dec
cmpb
jge
mov
cmpsl
pop
out
sbb
testb
mov
aam
adc
sbb
add
push
inc
imul
push
pusha
fildl
xchg
sbb
jbe
xchg
jne
or
sbb
orl
into
sbb
movsl
xchg
outsb
and
repnz
aas
test
lods
mov
push
fsubs
addr16
mov
jbe
xchg
inc
mov
inc
push
adc
sub
xor
mov
pop
fwait
mov
dec
das
lods
addr16
mov
mov
fucomp
push
orl
mov
mov
ret
jo
sarl
mov
hlt
lea
push
xor
or
pop
pop
movsb
inc
ja
int3
or
decb
jne
push
cld
pop
xchg
mov
push
mov
add
and
insl
sahf
gs
ja
lahf
ror
inc
dec
sub
mov
sub
jge
push
lods
inc
movsl
mov
jl
clc
rorb
daa
lods
mov
xor
in
push
or
repz
insb
out
cli
xchg
adc
lock
imul
adc
cmp
mov
fs
xchg
cs
cli
dec
icebp
lds
iret
dec
dec
pop
fildl
dec
sahf
addr16
xor
negl
imul
fs
pop
fwait
mov
lods
shlb
sub
mov
scas
push
dec
leave
add
mov
mov
pop
and
data16
cmp
fsubp
lock
out
xorb
div
stos
dec
addr16
lret
jne
loop
mov
notl
in
shrb
test
xchg
adc
lock
std
jecxz
xchg
int3
out
push
xchg
adc
lock
clc
push
xchg
xchg
jge
gs
xchg
sbb
pushf
inc
push
push
pop
in
and
jnp
lcall
cmp
mov
pop
cmp
adc
arpl
sahf
mov
call
dec
insb
xchg
jg
mov
fadds
lret
stos
lods
sub
ljmp
addb
test
ret
cmp
xor
adc
pop
xchg
loope
mov
insl
jbe
in
lea
sub
in
xlat
arpl
loope
aas
loopne
xor
inc
fcoms
dec
out
push
pop
jp
cmpsb
movsb
mov
add
adc
les
shll
dec
ja
and
scas
sub
mov
outsb
push
loopne
js
push
dec
adc
adc
lds
add
adc
jp
jo
or
mov
sub
mov
gs
fnstenv
dec
cmp
dec
fsubp
xor
icebp
xchg
jle
or
sets
or
loop
je
ret
or
mov
fldenv
jns
outsb
jnp
outsl
mov
mov
mov
insl
cmpb
pop
fs
push
movsb
add
sbb
adc
das
call
lret
cli
adc
xor
cmp
subl
cltd
jp
es
fidivrl
out
sahf
cmp
cmc
pop
push
jl
out
imul
mov
outsl
fcomp
aad
xor
pop
xor
add
pop
mov
jb
or
mov
or
rolb
add
lret
pop
jg
jae
xchg
xchg
pop
mov
or
push
mov
bnd
xchg
lea
daa
scas
mov
and
add
je
push
cmpsl
mov
jns
movsl
jge
addr16
push
cmp
xchg
pop
cmp
cmp
add
in
or
mov
xor
push
out
jl
aam
sbb
jg
push
mov
add
sti
push
sub
fistpll
dec
pop
and
mov
adc
dec
shll
or
mov
roll
inc
es
mov
sub
xorb
movsl
enter
or
cmc
mov
movsl
xor
jecxz
ret
push
sahf
pop
addr16
movsl
add
xchg
mov
fidivl
xchg
cmp
cmpsb
mov
pop
cmp
sub
int
sbb
add
push
mov
loope
sub
or
sub
inc
lock
iret
and
xor
ret
decb
loope
adc
mov
pop
movsb
adcl
mov
loope
mov
out
fcomp
out
lock
ljmp
cmpsl
popf
xor
cld
push
js
repnz
lods
clc
and
and
scas
in
or
push
enter
test
stos
xlat
cmp
and
push
orl
je
mov
in
or
sub
stos
dec
inc
dec
mov
pusha
pusha
shlb
mov
push
push
mov
mov
adc
je
cld
or
mov
fiaddl
popf
adcb
fs
mov
xchg
add
repnz
cmp
bound
adc
xchg
ret
inc
jle
inc
jbe
sbb
inc
ja
xor
call
sub
mov
les
push
cli
cmp
int
pop
push
call
xchg
jne
fidivl
xchg
inc
jp
jle
loope
adc
cmp
sbb
pop
inc
dec
fdivs
frstor
sbb
jle
jg
mov
and
mov
imul
xor
jp
jp
mov
rclb
cli
test
ss
sti
adc
mov
mov
or
xor
add
dec
adc
add
add
jg
add
popf
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
inc
adc
add
add
imul
add
mov
add
lcall
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
jl
add
incl
add
add
add
add
add
mov
incl
add
add
adc
add
add
lock
add
incl
add
add
add
je
add
add
add
incl
add
add
adc
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jb
cs
insb
add
imul
insb
add
inc
gs
jb
jbe
je
push
jb
imul
imul
inc
gs
outsl
outsb
jae
insb
gs
insb
imul
dec
outsb
addr16
push
add
outsb
push
popa
imul
insl
gs
add
push
jb
je
push
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
je
popa
insl
gs
imul
add
add
ja
imul
jb
jne
insb
inc
insb
insb
outsl
arpl
add
popa
insb
push
imul
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
js
je
jb
arpl
jae
pop
add
je
jne
jb
outsb
je
jb
arpl
jae
iret
add
.byte
