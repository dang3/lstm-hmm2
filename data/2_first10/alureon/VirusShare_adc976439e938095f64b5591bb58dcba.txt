dec
inc
sarl
mov
jnp
les
adc
cmp
mov
mov
jns
xor
jno
adc
cmpsb
mov
adc
clc
mov
and
repz
cli
inc
test
push
sub
dec
cli
dec
popf
les
mov
bound
mov
subl
aad
mov
mov
jle
rsm
lea
je
aam
mov
inc
cmp
out
lea
push
or
inc
inc
jo
stos
pop
das
mov
roll
test
push
lahf
cmp
std
xchg
add
jnp
or
sbb
add
in
mov
cmp
push
cmp
push
inc
lcall
into
adc
test
int3
sub
insl
out
cmp
push
test
mov
fsub
sbb
pop
push
es
scas
cmovne
insl
adc
shlb
loope
rclb
mov
popf
loopne
arpl
mov
sarl
mov
xchg
hlt
fsubs
mov
and
arpl
dec
pushf
insb
cmpsb
push
mov
push
sub
lret
iret
add
push
in
clc
imul
inc
or
mov
test
pop
in
hlt
lahf
js
dec
testb
sahf
clc
or
sti
int3
sub
inc
in
aad
or
push
popa
and
add
dec
push
mov
sbb
aad
cwtl
or
loopne
adc
push
lcall
sbb
insl
xchg
jns
pop
lret
repnz
pop
iret
pop
adc
popa
jmp
mov
push
push
inc
idiv
jl
xor
lds
cmp
push
into
insb
out
mov
jae
out
xor
fistl
lret
mov
mov
fwait
push
call
cld
lcall
xchg
inc
fs
mov
outsl
out
shl
hlt
in
sbb
clc
push
std
mov
inc
xor
loop
mov
cmp
sub
mov
pushf
in
ljmp
scas
push
cmp
lcall
jae
jns
test
aam
inc
xlat
sbb
pop
push
shl
adc
test
pop
mov
xchg
mov
add
icebp
lcall
mov
imul
add
js
pushf
data16
int3
in
xchg
xchg
sub
cmc
pop
jnp
rcll
xchg
push
cmp
pushl
out
or
jge
xchg
push
es
data16
je
cltd
xor
mov
scas
insl
scas
add
jbe
or
push
adc
inc
pop
dec
cs
lret
sub
mov
icebp
out
pop
mov
pop
xchg
pop
loope
mov
je
or
test
in
icebp
test
cmp
inc
ficoml
decb
jae
sbb
stc
in
aas
pop
pop
and
inc
hlt
mov
int3
loope
adc
push
and
loope
mov
inc
lret
arpl
ret
add
push
std
mov
popa
pop
xchg
imulb
cmp
pop
jbe
mov
shrl
gs
dec
ljmp
ds
sub
test
out
pop
lahf
sbb
lret
push
sub
xor
dec
add
out
mov
lods
hlt
pop
aam
ljmp
mov
cmp
gs
addr16
mov
sarl
cltd
sub
iret
push
ljmp
mov
xor
xchg
or
test
pop
rcrb
xor
fcoml
and
cmp
mov
cmp
jle
sub
pop
in
sub
mov
outsl
dec
jns
push
dec
sub
pop
out
enter
mov
fs
mov
pushf
add
sti
push
sub
fs
pop
rcr
imul
jmp
daa
cltd
xor
sti
fstpt
imul
cmp
inc
popf
mov
mov
or
xor
jmp
inc
adc
iret
and
dec
sbb
lahf
xor
rcr
dec
ljmp
cmp
jp
jmp
bound
inc
popa
lcall
xchg
test
push
test
dec
sbb
cmp
gs
mov
jmp
orb
daa
mov
stos
ret
inc
mov
xorb
idiv
lahf
xor
sti
dec
enter
lds
idiv
adc
rcrb
push
cltd
jmp
enter
mov
lods
mov
cmp
push
lods
and
ret
pushf
cmpsb
pop
or
push
pop
aaa
fsubrs
cld
xorb
lahf
xchg
adc
wbinvd
cmpsl
aam
das
ret
jmp
rolb
adc
jge
mov
sti
mov
ljmp
inc
fsubrp
cltd
add
pop
out
cwtl
xchg
cld
mov
stos
fs
popf
cmp
xchg
xor
or
leave
shlb
mov
loop
jnp
mov
xor
js
mov
lock
inc
pusha
inc
sub
adc
rorl
test
popf
das
and
push
pop
xor
lret
xchg
dec
rolb
push
test
sbb
call
add
mov
pushl
jns
inc
js
cmp
pop
movswl
sub
shll
mov
ficomps
pop
or
leave
adc
push
cmp
cli
xchg
mov
jns
dec
xchg
lret
xchg
cmp
sub
xorb
fidivrl
push
inc
out
das
push
loop
arpl
ja
in
into
lods
mov
in
sub
push
push
incl
cmp
jns
popa
pop
sbbl
push
push
xchg
repz
fildl
pop
adc
hlt
inc
or
test
ja
inc
imull
add
shlb
adc
nop
out
mov
cmpsl
push
cmp
daa
lret
sub
arpl
mov
cmc
sbb
or
dec
add
str
ret
jle
mov
notl
jae
dec
dec
aad
clc
mov
pop
add
pop
push
dec
sbb
xor
inc
inc
inc
push
rclb
push
jns
add
sbbb
clc
jo
mov
in
gs
push
pop
aad
or
dec
sbb
and
ljmp
aad
stos
je
fwait
pop
dec
cmc
ljmp
and
mov
inc
inc
mov
fcomi
enter
mov
shll
std
lods
jg
dec
jp
lcall
xchg
push
mov
aad
imul
fldenv
test
xchg
mov
mov
sti
sbb
jmp
das
mov
test
pop
inc
xchg
or
sub
or
insl
pop
push
xchg
pop
cmpsb
jne
jge
sbb
fwait
xchg
mov
xchg
or
out
mov
icebp
cmp
jl
cmp
mov
add
push
sub
in
mov
xlat
mov
ss
push
lea
call
pop
sub
xlat
dec
xchg
mov
xchg
mov
in
mov
mov
lds
repnz
push
xor
mov
mov
mov
mov
xchg
sub
mov
xor
pop
loope
mov
cmc
lret
jns
stc
xchg
std
push
xchg
inc
lds
out
mov
fisubl
push
data16
sub
add
cmp
enter
or
in
lret
shrd
shl
imul
inc
and
faddl
adc
faddl
js
mov
or
dec
test
sub
shlb
in
or
xor
inc
push
mov
pop
test
mov
cmpsl
mov
push
mov
cmp
cmp
xchg
int
pop
sbb
pop
ds
pop
jns
rorb
inc
pop
icebp
mov
add
jb
fs
lret
sub
cmp
inc
ja
lea
adc
lahf
arpl
outsl
cmp
cs
lret
adc
push
mov
daa
lfs
xchg
lret
aad
loope
and
sub
in
dec
xchg
and
fldcw
clc
cmp
mov
lods
js
dec
xchg
cmpsb
jne
sahf
fidivs
push
mov
jp
jmp
adc
push
push
lods
out
pop
sub
jl
xchg
push
in
or
call
jmp
pcmpgtd
cli
xchg
in
dec
cmp
dec
lret
adc
insb
jge
pop
les
addr16
lret
add
pop
pop
sub
sbb
out
sub
pusha
and
insl
jne
sub
into
jecxz
ja
and
rclb
jns
imul
insl
inc
push
pop
jge
and
dec
xor
mov
sub
push
and
outsl
scas
rcrb
sbb
sti
dec
arpl
or
xor
inc
jae
pop
cmc
fwait
mov
fstp
push
and
inc
mov
xor
adc
int3
cmp
addr16
xor
lret
jmp
inc
aam
je,pn
dec
cld
mov
andb
mull
ja
mov
std
inc
jecxz
mov
movsl
adc
dec
mov
push
mov
xor
mov
call
movswl
mov
call
add
push
mov
call
add
lea
inc
dec
sub
call
sub
dec
dec
add
mov
mov
sub
lea
inc
sub
sub
mov
call
xor
add
sub
inc
sub
call
dec
inc
call
inc
mov
mov
add
add
mov
sub
add
add
pop
lea
mov
add
add
pop
dec
dec
pop
dec
add
inc
add
pop
dec
mov
lea
mov
mov
and
dec
inc
pop
movsbl
imul
pop
lea
or
mov
add
mov
call
mov
add
mov
add
ret
inc
lea
push
add
or
push
inc
movzbl
push
or
inc
push
movzwl
push
mov
movsbl
mov
lea
mov
push
dec
ret
push
inc
inc
inc
sub
and
inc
inc
push
movswl
or
xor
call
pop
ret
jmp
dec
mov
mov
movsbl
movzbl
add
lea
add
inc
imul
and
mov
inc
movzbl
add
inc
xchg
add
imul
inc
lea
xor
imul
mov
inc
add
inc
xor
add
dec
jne
add
mov
movsbl
mov
pop
lea
lea
pop
dec
mov
pop
imul
add
mov
imul
add
add
xor
mov
add
inc
imul
add
ret
push
inc
movsbl
inc
imul
and
inc
inc
xor
push
push
push
push
mov
lea
lea
push
sub
movsbl
add
lea
dec
mov
dec
mov
mov
mov
or
push
add
dec
xor
mov
lea
push
mov
add
push
add
dec
pushl
inc
call
movzwl
add
sub
movzwl
add
inc
movzwl
lea
and
pop
ret
add
lea
and
dec
lea
inc
dec
add
mov
inc
lea
inc
add
xor
cmp
jb
add
xor
inc
imul
mov
inc
sub
mov
movzbl
mov
inc
add
imul
dec
mov
movsbl
inc
mov
sub
inc
cmp
jb
add
pop
and
dec
add
dec
add
inc
mov
lea
mov
add
movsbl
sub
dec
mov
xor
add
movzbl
xor
imul
and
mov
inc
sub
test
jbe
add
inc
imul
dec
inc
inc
movzbl
dec
inc
movzwl
inc
dec
and
dec
add
mov
movzbl
mov
dec
add
dec
movswl
and
movswl
inc
mov
lea
mov
mov
dec
inc
mov
lea
dec
mov
and
mov
mov
dec
lea
dec
jne
movzbl
mov
mov
lea
add
sub
imul
lea
imul
add
dec
mov
sub
mov
xor
lea
inc
imul
mov
sub
mov
add
dec
test
jbe
add
dec
mov
inc
dec
and
mov
sub
sub
add
and
mov
mov
lea
add
inc
or
movswl
mov
and
lea
mov
and
lea
dec
mov
add
or
movzbl
inc
inc
add
imul
movsbl
and
sub
dec
mov
lea
dec
movzbl
inc
imul
mov
inc
jmp
push
sub
lea
xor
imul
mov
lea
inc
xor
or
mov
imul
imul
movsbl
lea
sub
inc
lea
mov
mov
mov
inc
mov
inc
add
lea
sub
xor
add
dec
or
mov
movzbl
or
inc
movzbl
add
imul
lea
add
cmp
je
call
call
movzwl
imul
sub
dec
movsbl
dec
mov
inc
add
movzwl
dec
dec
lea
inc
mov
add
xor
or
mov
mov
mov
dec
mov
xor
lea
inc
add
lea
mov
dec
and
inc
inc
mov
mov
add
add
mov
inc
lea
add
mov
add
mov
mov
mov
dec
ret
mov
inc
pop
inc
ret
push
mov
mov
dec
lea
mov
push
lea
movswl
push
add
push
mov
push
or
movsbl
sub
lea
mov
call
mov
push
add
add
xor
and
sub
inc
neg
mov
imul
mov
xor
sub
mov
mov
inc
movzbl
mov
mov
inc
inc
mov
or
dec
je
inc
dec
dec
mov
mov
jmp
inc
mov
mov
imul
mov
add
repnz
inc
add
add
inc
jmp
lea
inc
lea
movzwl
inc
or
dec
sub
imul
mov
mov
inc
inc
mov
movzbl
dec
pop
pop
ret
push
dec
dec
mov
add
xor
xor
add
mov
inc
lea
add
inc
lea
imul
inc
mov
add
lea
mov
inc
mov
xor
movzbl
inc
and
add
mov
pop
ret
sub
imul
mov
add
dec
mov
mov
mov
mov
movzwl
sub
mov
mov
mov
xor
add
and
mov
add
lea
inc
sub
sub
mov
mov
inc
inc
cmp
jb
mov
push
sub
dec
push
sub
and
push
lea
mov
xor
add
movswl
xor
dec
sub
xor
dec
imul
push
dec
imul
mov
add
dec
xor
mov
mov
inc
inc
mov
xor
movzbl
lea
add
inc
add
inc
lea
add
or
mov
movzbl
inc
add
jmp
bound
add
inc
pop
out
inc
pop
sub
or
xor
pop
and
jle
aaa
out
or
jae
popl
outsb
nop
cmp
std
pushf
lahf
das
pop
push
ret
cmpxchg
mov
out
jae
pop
cmpsl
or
dec
fisubs
mov
sbb
subl
lock
mov
sub
in
mov
movsb
in
add
xorl
mov
imul
xchg
mov
aaa
lds
xchg
gs
sahf
jbe
or
lds
imul
call
lds
loope
mov
pop
jne
pushf
push
inc
ds
enter
out
jbe
inc
sub
adc
mov
mov
xor
xor
lock
inc
sbb
lock
js
ss
ret
push
ja
pop
push
adc
outsb
xchg
jnp
sahf
cld
mov
sub
mov
pop
sub
aas
adc
notl
lret
xor
mov
pop
mov
in
pop
dec
leave
sbb
cmp
xchg
in
mov
mov
mov
pusha
add
xchg
es
jne
rclb
dec
in
pop
pop
mov
stos
js
or
adcl
in
test
push
lcall
inc
sbbb
sarb
pop
mov
out
xor
dec
add
dec
and
xchg
jl
push
pop
mov
into
add
cwtl
mov
jns
dec
nop
inc
sbb
xchg
cmp
out
outsl
rclb
sub
mov
push
xor
xor
add
icebp
and
hlt
mov
dec
xor
pop
mov
mov
int
mov
mov
lret
cli
cmp
xchg
push
movsb
and
jmp
fisttpll
mull
pop
addr16
jmp
stmxcsr
scas
shrb
push
test
or
xchg
xlat
and
dec
inc
das
js
xlat
scas
mov
imul
mov
popa
mov
xor
mov
movsb
mov
mov
push
inc
cli
sub
fstpt
mov
ror
adc
mov
fnstenv
fisttpl
psubusb
pop
cmp
dec
mov
mov
inc
jmp
add
xor
xor
pusha
insl
lds
imul
rcrb
push
adc
jns
push
out
dec
push
mov
jecxz
inc
icebp
xchg
push
cltd
stos
lret
stos
jae
mov
popf
stc
xor
pop
lcall
lea
add
pop
or
int3
mov
adc
push
scas
sub
jae,pt
jl
push
jnp
in
pop
sbb
inc
xor
cltd
adc
pop
or
std
inc
lahf
cmp
lcall
or
rolb
orl
mov
mov
scas
mov
jne
addr16
inc
dec
sarb
hlt
mov
inc
fstpt
jb
xchg
jae
mov
xor
sti
fsubl
push
ds
jl
rcrb
je
ja
pop
rcl
fwait
icebp
js
js
aaa
ss
pop
pop
sbb
repnz
cmc
pop
sbb
stos
xlat
jle
pop
in
popl
jne
cli
test
fistpl
and
ds
and
jge
bound
inc
or
decl
cmp
add
jno
push
xchg
loopne
pop
xor
lahf
pushf
push
not
das
pop
scas
ret
hlt
int
mov
pop
dec
addr16
dec
mov
out
mov
sbb
incl
movsb
mov
mov
in
rcl
lret
pop
xchg
cmp
mov
mov
outsb
lret
mov
jo
cmpsb
sbbb
mov
hlt
sub
fidivrs
xor
adc
xchg
push
xor
xchg
sbb
dec
push
mov
lret
insb
int3
xchg
ds
mov
push
mov
test
jmp
xchg
mov
cmp
push
add
push
stc
pop
push
pop
arpl
out
add
inc
inc
stc
aaa
scas
outsb
and
lods
dec
cmpsl
lret
ja
mov
xchg
push
icebp
mov
add
xor
xchg
out
push
inc
outsl
sub
cmpb
add
mov
cmc
lods
jb
xor
xchg
mov
mov
psllw
pop
jns
mov
test
inc
outsb
imul
icebp
pop
pop
cmp
int
inc
inc
mov
movsb
test
jmp
mov
adc
popf
out
cmp
in
aad
dec
xchg
ljmp
cmp
push
lret
add
push
jns
jecxz
mov
dec
fistpll
sub
lret
ret
outsb
movsl
xchg
and
scas
push
addr16
xor
fimuls
cltd
inc
sti
mov
jmp
std
call
xchg
je
jae
jge
xchg
sti
jle
psubsb
insb
ss
pop
sbb
xchg
out
arpl
mov
sub
es
mov
pop
imul
sub
je
xchg
adc
jle
inc
mov
aad
push
int3
in
fsub
xchg
mov
in
lahf
sub
stc
ret
inc
inc
dec
cmp
xchg
cmpsb
cmp
test
ja
xor
and
repz
cmp
adc
ret
adc
push
cmp
cmp
ds
mov
cwtl
sub
cmp
loop
and
cltd
cmp
xchg
fsubrs
dec
repz
pop
mov
test
xlat
adcb
aam
addr16
mov
or
sub
xlat
push
imul
int
pop
pop
adc
movsl
js
cmp
sbb
inc
fdivrs
xchg
cli
push
add
jmp
pop
sbb
pop
cmpsl
add
or
jnp
dec
dec
int
das
push
pusha
mov
cmp
xlat
dec
mov
push
outsl
pop
enter
mov
mov
sub
lret
and
sbbl
mov
lods
sbb
xor
sub
ret
sbb
pmulhuw
cmp
cmp
mov
cmpsl
loope
inc
jmp
jbe
mov
stc
and
adc
push
ror
cli
lds
xchg
mov
mov
jp
decl
xor
push
cmp
xlat
push
subb
mov
or
and
cmpsb
sub
xchg
mov
stos
mov
clc
in
and
cltd
scas
clc
add
jne
mov
or
push
dec
lret
stos
rcll
xchg
cmpsl
dec
cmp
rclb
and
mov
jne
shl
jb
in
lcall
dec
call
jno
cmp
add
push
das
xchg
cmp
mov
cld
mov
cs
or
lds
jmp
nop
sarb
jne
xchg
ret
xchg
push
pop
push
inc
and
ljmp
leave
cmc
xchg
ljmp
push
dec
and
inc
pop
adc
cmp
add
mov
or
dec
dec
mov
imul
sbb
push
pop
cmp
cmpsb
push
mov
jbe
mov
test
mov
and
add
cmpsb
lret
lea
jp
movsb
movsb
add
testb
flds
inc
sbb
sbb
mov
sub
cmpsb
test
filds
insl
stos
mul
sti
and
fsts
cmp
orl
fildl
scas
jl
sub
mov
cmp
lds
cltd
fiaddl
sti
movsb
mov
sub
ret
or
int
aaa
mov
jo
adc
outsb
xlat
pop
movsl
inc
mov
out
into
bound
ret
dec
dec
arpl
pushf
adc
faddl
pop
mov
les
lods
sub
sub
xor
xchg
bnd
in
fwait
or
cmpb
xchg
mov
out
sub
and
xchg
mov
and
push
out
mov
mov
xorl
test
nop
insl
mov
jp
lea
sarb
or
test
out
xorl
std
aaa
js,pt
outsl
cmpsb
ret
or
ja
cwtl
jle
push
sbb
jle
in
jl
mov
push
test
fbld
daa
sbb
jmp
xchg
lret
fistpl
pop
cli
jecxz
jg
push
and
insl
pop
jl
pop
adc
inc
movsl
cmp
rorl
imul
lea
sub
xchg
or
xor
xlat
sub
adc
inc
and
push
or
lahf
or
insl
std
inc
cmp
in
cwtl
fs
icebp
pop
pop
xor
sbb
jp
mov
js
loop
mov
loop
ret
pop
movsl
cwtl
push
pop
stos
or
mov
pop
in
push
mov
mov
sub
in
and
cmp
adc
fld
or
rorb
jp
stc
mov
fs
sub
shr
mov
inc
pop
iret
insb
lods
stos
mov
adcl
dec
sbb
jle
inc
xchg
arpl
icebp
lods
sbb
loopne
mov
in
cld
mov
jae
insb
and
jnp
push
xchg
pop
andb
dec
xor
fwait
jo
ret
mov
mov
mov
add
mov
pop
xchg
adc
inc
imul
out
add
xor
in
loope
idivl
mov
arpl
pop
sub
jae
icebp
loop
mov
sub
pop
aaa
pop
xchg
or
fistps
push
sbb
jne
and
jg,pn
mov
loopne
loope
out
je
in
or
mov
push
mov
lds
and
pop
xchg
dec
call
push
loope
xchg
cmp
insl
addr16
inc
test
jb
push
xchg
xor
cld
push
inc
mov
jbe
jb
cmp
into
dec
and
cmp
cmp
cli
adcl
jbe
sbb
imulb
test
nop
inc
mov
jno
mov
adc
mov
xor
jg
xchg
or
add
add
xor
mov
lcall
or
inc
or
lret
jne
lret
out
sbb
pop
fadds
aam
cmpb
jg
insl
mov
ficompl
jne
push
int3
sti
sbb
test
icebp
lods
dec
sub
shl
rcrb
xlat
test
pusha
repnz
fistl
push
dec
sbb
mov
lods
jg
sahf
ret
icebp
or
insl
adc
clc
pop
jno
push
icebp
pop
dec
lock
xor
inc
repz
mov
dec
xchg
dec
pop
mov
adc
jg
faddp
fdivs
push
push
cld
push
cmc
in
cli
pop
inc
data16
lods
out
xchg
popf
js
call
push
unpcklps
dec
jae
pusha
sub
ss
cmp
bound
jmp
push
in
sarb
adc
aas
lods
add
dec
cmpsl
je
jmp
fists
stc
xor
jae
insl
test
and
adc
aad
mov
or
arpl
cmp
cld
nop
push
pop
xor
loop
inc
xor
sbb
std
aad
and
mov
fsubp
sti
lods
sub
fisttpl
jno
repnz
xlat
rol
ret
jns
push
rclb
incl
fmul
jns
xchg
ror
and
mov
jns
inc
adc
dec
pop
lods
add
dec
test
out
in
pop
mov
xchg
pop
or
xchg
mov
test
div
or
pop
mov
jecxz
test
outsb
add
stos
jl
inc
or
pop
enter
mov
mov
mov
dec
xor
adc
jp
pushf
ret
adc
and
mov
jg
jp
aad
lods
stos
mov
sbb
mov
pop
in
mov
dec
fimull
shrl
and
push
jg
mov
xchg
xor
jecxz
xlat
mov
stc
pop
out
xchg
xchg
jno
stos
xchg
jmp
pop
and
xchg
lret
shrl
jecxz
insl
pop
aad
scas
mov
push
lret
adc
lds
push
cs
les
ret
inc
pushl
aam
scas
mov
movsb
push
cmp
jl,pt
pop
sbbl
add
movsb
inc
subb
cmp
insl
js
or
jl
sahf
sub
lds
jno
sub
xor
mov
dec
outsl
or
fldl
jae
add
fcmovnb
push
xchg
and
mov
mov
sbb
pop
dec
loope
imul
arpl
mov
ja
lods
sbb
not
cltd
rorb
jno
xchg
shll
das
mov
insb
popa
add
ja
and
neg
xor
arpl
mov
fistps
push
mov
cmpsl
mov
sbb
fildll
sbb
popa
lcall
xorb
cmp
fmuls
into
push
mov
and
pop
pop
sub
mov
stos
inc
lcall
insl
adc
pop
pop
xchg
pop
bts
mov
mov
ds
sbb
dec
mov
push
decb
sub
orl
cmp
iret
orl
insl
decl
xchg
inc
fsubl
ror
mov
imull
cmp
pop
orl
push
fwait
add
jnp
pusha
dec
cwtl
lret
push
mov
jns
and
icebp
mov
repnz
xchg
sbb
inc
aas
jge
jmp
aad
inc
mov
dec
inc
hlt
mov
sub
sbb
mov
mov
mov
movl
int
lret
cmp
out
fwait
mov
inc
push
dec
jnp
jbe
mov
add
mov
push
test
xchg
aam
fisubs
dec
adc
outsb
push
xchg
mov
int
or
out
mov
lret
test
or
xor
sub
sbb
sbb
aad
jg
or
sbb
loopne
mov
sbb
cltd
mov
xchg
cmp
jb
jmp
jg
add
cld
lock
rcrb
cwtl
out
pushf
mov
xchg
in
mov
adcb
jmp
push
xor
xor
inc
cmc
adc
xor
test
jbe
push
jae
inc
jecxz
repnz
int3
cmc
pop
in
bound
hlt
imulb
in
pop
pushf
ja
aam
pushf
xchg
push
loopne
sbb
inc
popa
add
arpl
lods
ret
dec
ret
popa
xor
or
mov
imul
jp
fidivs
icebp
cli
cmpsl
stc
cwtl
lret
lock
sbb
adc
add
or
in
xor
insb
sbb
and
stos
pushf
sahf
push
in
dec
xorl
dec
imul
inc
jge
loopne
push
push
and
insb
pushf
and
popf
and
dec
jbe
inc
xchg
lret
sbb
std
jns
mov
add
leave
cmpsb
add
lahf
push
aas
adc
rcll
ror
pop
std
inc
fidivrs
mov
int
hlt
lock
xor
push
aas
hlt
adc
stc
dec
xor
fld
mov
stos
add
push
add
mov
out
lods
push
out
push
fwait
int3
pop
scas
push
int
mov
leave
call
or
aam
outsl
out
or
movb
inc
fwait
jl
faddl
sub
xor
cld
jge
movsb
mov
add
push
add
ljmp
adc
imul
popa
int3
xchg
outsl
getsec
dec
mul
shlb
out
sbb
jno
mov
lahf
arpl
push
pop
aaa
in
push
ret
mov
sub
sbb
mov
test
xor
cmp
in
lods
adc
inc
push
xor
pop
into
jg
pop
sub
hlt
and
add
cmp
movsl
inc
mov
pop
push
cmp
test
xchg
mov
sbb
lcall
test
push
pushf
cmp
or
dec
cwtl
js
frstor
js
sti
mov
push
scas
add
pop
jecxz
in
add
popa
inc
cli
test
ss
mov
clc
idivl
out
fisttpll
movsb
orl
mov
push
and
cwtl
xor
dec
dec
in
inc
lahf
mov
push
add
dec
hlt
lods
mov
enter
push
add
push
add
sbb
sbb
sbb
repz
cmp
xchg
push
xchg
mov
or
jge
inc
push
mov
sbbb
xchg
pcmpgtd
pop
ret
neg
inc
and
in
adc
push
pop
iret
adcb
scas
cld
inc
ss
mul
fstl
shl
xlat
push
loopne
pusha
lret
out
stos
push
or
adc
mov
leave
dec
ds
js
int3
imul
sub
flds
test
or
lcall
mov
xor
push
and
push
shr
push
mov
push
movsb
loop
ljmp
adc
pop
inc
rcrb
xor
dec
mov
dec
mov
lret
ret
mov
sahf
scas
push
inc
lcall
sbb
or
test
jecxz
push
mov
inc
test
mov
inc
stc
fbstp
sti
jno
jno
outsb
negb
fstpt
jg
js
xor
iret
jmp
mov
mov
adc
ljmp
jo
call
mov
jmp
cs
pusha
mov
push
add
xchg
xlat
pop
jae
out
pop
mov
cmpsb
xor
jb
out
mov
sbb
pop
stc
jno
ret
clc
or
mov
in
dec
jno
xlat
mov
adc
cmp
fildll
fwait
sub
sar
xor
repz
call
push
ljmp
adcl
sarl
in
mov
fs
insl
xchg
mov
rcrl
pop
sti
push
inc
mov
aas
ret
mov
movsb
sub
repnz
inc
push
and
pop
shll
push
call
cwtl
xor
cmpsl
repnz
push
xchg
testb
mov
int
push
mov
mov
fcomps
and
xchg
fnop
xor
push
dec
stc
add
mov
fadds
cmp
add
push
sub
pushf
sbb
test
jl
cmp
gs
adc
jl
xchg
or
dec
aam
les
mov
sbb
xchg
mov
jmp
dec
scas
cmp
fprem1
pop
cli
jnp
nop
adc
lods
icebp
scas
cltd
and
daa
mov
insb
fmuls
jl
fdivl
cwtl
xor
repnz
adc
pop
rol
cltd
bnd
push
mov
test
dec
add
movsb
pop
mov
in
dec
push
xchg
movnti
pop
rep
fs
hlt
dec
pop
jns
and
adc
dec
jns
icebp
inc
inc
adc
call
mov
cmp
and
jno
mov
arpl
js
imul
and
hlt
inc
mov
mov
insb
xchg
pop
jle
add
in
sub
xor
jge
mov
sub
pop
lcall
or
dec
stos
pop
fnstsw
inc
repnz
iret
aam
mov
add
cmp
pushf
push
cwtl
xlat
mov
pop
push
xchg
add
sahf
arpl
outsb
scas
repnz
lods
cmp
mov
icebp
xor
lods
cltd
adc
pop
cli
fdivrl
gs
stos
or
mov
outsl
sub
push
jge
sbb
xchg
mov
mov
int
add
sub
fcompl
movb
lret
out
andb
push
les
jmp
add
js
pop
cmp
cmpsl
jp
int
ss
sub
pop
mov
repnz
xchg
mov
pop
cmp
les
jo
aas
sub
call
mov
rcl
lcall
cld
cld
jl
pop
push
push
leave
out
jp
scas
inc
mov
push
xor
xlat
out
mov
repz
adc
pop
jg
push
jb
andl
sub
push
imul
test
and
imul
fidivs
movsb
insl
xor
bound
inc
aaa
jne
sbb
dec
out
add
push
stos
xor
push
push
mov
enter
push
sbb
std
xor
cvtps2pi
push
sbb
dec
jp
test
cmp
jns
rcrb
jge
rorl
cwtl
rcrb
fwait
mov
pop
push
repz
xorb
and
mov
stos
stos
pusha
mov
jg
repnz
dec
iret
cwtl
scas
sub
in
sub
cmpsb
and
dec
jnp
dec
mov
in
and
iret
pushl
mov
bnd
outsl
mov
test
mov
std
in
in
lret
dec
repz
mov
out
jb
add
jae
jo
testl
xchg
ret
adc
sbb
xor
test
sarl
fcomps
xchg
movsb
cwtl
sbb
sub
sbb
xchg
psrad
jns
xor
das
movsb
mov
pop
fcomps
jp
sub
lods
sbbb
or
mov
sahf
sbb
repz
ss
jge
mov
cmpsl
dec
shll
imul
fucomi
cld
inc
xchg
adc
jo
outsl
aaa
cs
mov
cmpsb
fwait
adc
xchg
shlb
mov
fmul
push
inc
xchg
leave
int3
pslld
sahf
cmp
dec
add
mov
loopne
pop
in
aad
inc
icebp
mov
and
mov
and
pop
sbb
add
imull
ret
imul
dec
imul
push
xor
jecxz
add
xchg
jbe
xor
cmpsb
fnsave
lahf
scas
outsl
mov
sbb
jge
mov
insl
jbe
lcall
mov
xchg
roll
pop
add
shl
sar
push
mov
jnp
cwtl
fistl
gs
push
sub
es
cmp
data16
jb
cmp
idiv
into
shll
call
or
loop
addr16
inc
and
das
mov
lods
pop
dec
test
out
fists
pop
xchg
sub
mov
mov
es
repz
xor
mov
xor
mov
lret
sbb
into
cmp
jne
xor
pop
push
stos
arpl
and
lods
mov
mov
xor
aad
mov
jmp
repnz
jg
mov
push
out
cmp
pushf
pop
cld
cmc
outsb
ficomps
ljmp
xchg
mov
mov
xchg
mov
mov
and
pop
int
out
inc
cmovnp
into
jmp
jp
pushf
clc
clc
adc
gs
enter
inc
xlat
xor
out
push
dec
pop
lahf
test
js
lret
callw
and
xor
insl
rcl
scas
ficoml
in
fsubrl
fsts
or
cmp
inc
rcll
mov
insl
sub
outsl
bound
sbb
scas
adc
ficompl
out
pop
daa
push
sbb
movnti
cmpsl
int
push
lcall
adc
sub
jae
fadd
mov
xor
subl
repnz
mov
inc
jnp
andl
xchg
jno
sub
sahf
mov
adc
dec
sti
and
mov
lret
movl
loopne
mov
add
adc
cli
stos
stos
test
pop
not
jb
iret
xchg
mov
push
push
or
push
cmp
sahf
xor
out
jl
jp
cmpsl
pop
and
or
aam
enter
loop
sti
jne
lods
xchg
cmp
into
cld
push
sub
lret
pop
stos
leave
imul
push
jns
popf
lret
or
dec
inc
xchg
lret
test
xchg
mov
mov
add
cltd
jl
std
stc
mov
mov
mov
push
repnz
dec
aad
sbb
adc
dec
scas
jns
in
sub
pop
xchg
and
outsb
sbb
sub
std
lret
pushf
mov
rdpmc
shl
sub
cmp
out
hlt
sbb
ss
movsl
mov
push
inc
or
dec
and
fwait
aam
nop
pusha
shlb
mov
aam
jp
lret
stos
nop
nop
sbb
xchg
mov
ret
adc
mov
dec
pushf
int3
sbbl
or
std
out
add
pop
aaa
mov
jno
fs
pop
mov
add
in
mov
fisttpll
pusha
daa
cli
shrb
shlb
cmc
pop
push
scas
xchg
addl
add
inc
xorb
les
and
int
nop
in
sti
push
fsubs
jecxz
xchg
xchg
ja
out
mov
push
std
jle
sahf
popf
adc
xchg
pop
iret
inc
andl
aaa
ss
mov
and
xor
xor
mov
mov
lods
cmp
pop
cltd
sarb
or
rorl
mov
push
push
xor
stos
sarb
mov
xchg
imul
adc
insl
add
repnz
mov
mov
pop
stos
mov
xor
sbb
out
sbb
adc
ss
test
sub
fisttpll
pop
lock
adc
lahf
xchg
cld
sub
mov
icebp
xchg
inc
icebp
lret
xor
push
call
fsts
jge
xor
lods
rol
dec
les
inc
push
pop
loop
sbb
xor
mov
pop
addr16
adc
xchg
jmp
cmpsl
push
dec
xor
push
cs
test
cmp
inc
popf
ds
popa
cmpsb
loope
pop
fldcw
sbb
daa
pop
push
sub
fnstsw
pusha
adc
push
aaa
ret
cld
add
loopne
mov
aad
ficompl
leave
jns
mov
or
aam
sahf
outsl
push
jno
pop
add
stos
xchg
push
mov
xor
loope
test
mov
xchg
bound
adc
mov
cmp
ja
ja
dec
and
jmp
les
or
scas
lahf
in
in
scas
fnstcw
ljmp
aaa
xchg
jbe
mov
movsb
cmc
cmp
dec
sbb
fbld
inc
mov
dec
jne
aas
int3
test
pushf
std
mov
xor
sub
mov
cld
fstps
dec
mov
repz
mov
out
xor
mov
enter
xor
adc
pop
mov
fdivp
inc
or
ret
mov
xor
mov
clc
test
cmp
xchg
test
xchg
aaa
mov
jo
lcall
cltd
jnp
movsl
push
xchg
ret
jecxz
or
and
shr
mov
or
mov
push
nop
sti
push
addr16
inc
fcomi
loop
push
rcrb
imul
call
arpl
xor
sbb
dec
enter
mov
aam
inc
pop
ds
push
lock
mov
push
out
lret
cmp
jnp
es
add
inc
dec
outsl
aad
mov
cmp
dec
and
pop
mov
arpl
int
dec
xchg
push
lds
xchg
cmp
shlb
xchg
out
and
in
pop
test
pop
int3
loopne
mov
mov
sub
adc
lds
jo
xor
dec
pop
cwtl
mov
lock
lea
cmp
mov
repz
pop
popf
pop
mulb
mov
cmpsl
mov
lret
in
inc
jno
push
lahf
jno
mov
push
push
jl
xchg
insb
sarb
imul
xchg
jo
or
lret
push
add
movsl
sbb
add
mov
mov
inc
inc
jno
mov
mov
aas
cmp
xchg
xchg
lods
adcb
jmp
leave
js
int
orl
outsl
xlat
pop
js
aaa
push
movsb
fisubrl
add
xchg
jns
cwtl
mov
jecxz
mov
ficompl
clc
das
stc
fucom
adc
fmuls
movsb
fistpll
loop
mov
mov
into
fsts
mov
std
cmp
xor
mov
add
xchg
gs
lea
dec
stos
nop
sub
xor
sbb
cmp
out
push
sub
add
lret
out
je
out
lea
xor
push
fbstp
cmp
in
adc
lock
mov
adc
mov
in
or
cmpsl
xor
jp
cmp
mov
les
int
mov
mov
lods
xor
shlb
ret
xchg
mov
repz
push
sub
addr16
xchg
sub
and
inc
lcall
mov
xor
jl
add
or
sbb
lods
pop
pushl
leave
xchg
jbe
adc
pop
mov
popa
jle
fiaddl
pop
lock
lahf
sti
pushf
jne
into
push
mov
xchg
popf
push
jbe
minps
cmpsl
icebp
push
stos
bound
lods
inc
negl
repz
lods
push
pop
mov
dec
jo
mov
pop
ret
adc
shll
sbb
pop
sub
mov
stos
and
xchg
and
jnp
adc
adc
jnp
pop
xchg
call
xlat
adc
lods
lcall
jge
sub
dec
inc
fcompl
sti
or
mov
xcrypt-ecb
cmpsl
dec
push
out
mov
adc
test
aam
cmp
fmul
xor
out
mov
sarl
inc
scas
push
xor
leave
or
push
jnp
push
mov
adc
xor
aaa
mov
dec
cmp
xor
xor
inc
mov
mov
out
jnp
mov
mov
xchg
xor
loop
cmp
pop
rclb
xchg
dec
push
mov
psllq
cmpsb
pop
cmpsb
dec
and
jmp
mov
int3
xor
push
cs
add
hlt
mov
mov
repz
pusha
cmpb
inc
inc
jbe
bnd
cmpsl
mov
in
xchg
scas
pop
sahf
insb
repz
push
adc
fbld
scas
jecxz
ss
pop
imul
mov
adc
mov
imul
imul
mov
add
sub
xchg
test
mov
push
stc
push
sti
pop
lods
push
jbe
jno
stos
repnz
aad
and
out
jns
xchg
mov
rcrb
dec
imul
lods
inc
cltd
jg
pushf
fdivrl
mov
adc
or
cmp
cmp
pop
pop
data16
push
adc
pushl
mul
add
jl
imul
cld
pop
pop
mov
pop
xrelease
test
sbb
test
xchg
push
leave
or
xchg
imul
xchg
xlat
cld
push
in
addb
inc
cmp
xchg
ret
mov
or
mov
or
sub
push
loop
imul
das
aaa
ljmp
mov
je
mov
push
mov
popa
aas
movsl
push
insl
mov
jns
mov
cmp
test
ljmp
lahf
movsl
into
call
xchg
mov
jge
rorl
clc
sub
push
cmp
js
aam
dec
mov
into
ret
sar
xchg
lea
inc
pop
fsubl
bound
test
push
sub
adc
call
fwait
cmpsl
sarl
bound
lret
mov
out
jmp
xchg
lock
mov
fs
push
adc
test
in
mov
sub
movsb
aas
mov
inc
mov
fsubrl
cmp
scas
mov
sbb
xor
aas
xor
mov
mov
mov
hlt
xor
sbb
or
test
jmp
and
aas
repz
imul
sub
flds
out
imul
ds
test
dec
roll
xor
dec
push
push
mov
scas
movsb
and
mov
bound
stos
call
jge
arpl
idivl
popa
loop
mov
dec
cltd
fidivl
dec
sbb
xchg
fidivrl
sub
cmp
xchg
sbb
leave
pop
sarb
mov
ret
es
lods
jo
in
mov
jle
test
or
cld
in
cmpsl
dec
lock
jp
jae
enter
js
aad
add
in
cmp
mov
push
popf
adc
push
gs
repnz
fsubr
fs
adc
ds
mul
mov
lret
in
xor
addr16
mov
pop
push
pop
pop
dec
insb
xlat
pop
out
adc
fcomp
inc
test
add
sti
sub
xor
ret
cmp
cmp
insl
cmp
loopne
or
fnsave
xor
movsb
xchg
xchg
mov
and
jae
jb
push
daa
add
nop
mov
adc
mov
pop
push
jp
rcl
add
ja
jge
out
test
xor
sub
push
and
repz
popf
dec
jae
add
ljmp
add
repz
mov
mov
pop
sub
inc
lods
mov
inc
lret
mov
aas
incl
push
movsb
movsb
pop
push
incl
dec
lcall
xor
inc
lds
jp
loope
stos
lock
and
rclb
jg
mov
pop
ja
into
int
mov
andl
not
push
daa
rol
pop
jbe
inc
sbb
outsl
hlt
imul
inc
mull
sbb
mov
pop
mov
lds
mov
call
subl
pop
inc
insb
jge
fcom
sar
shlb
lahf
push
mov
sub
or
test
aaa
movsl
insl
xchg
divl
mov
inc
fs
stos
mov
cld
and
add
and
jo
shll
ja
mov
enter
mov
lret
aas
outsl
mov
xchg
jns
jno
cltd
lret
cld
add
test
xchg
jl
fdivp
pushf
jbe
les
out
pop
imul
sbb
pop
ljmp
add
cmc
icebp
ds
jbe
pop
xchg
dec
loope
mov
orb
cltd
mov
inc
push
xchg
and
insb
repnz
div
int3
pop
xchg
lcall
cmp
loope
push
push
cltd
pusha
sbbl
inc
mov
mov
repnz
nop
inc
mov
int3
xchg
test
cmp
mov
xor
cmp
dec
enter
lcall
mov
jnp
and
ljmp
popf
sub
pusha
iret
insl
cmp
and
dec
nop
xchg
movaps
imul
mov
pusha
test
sbb
out
xor
push
xor
lcall
jo
testb
lahf
out
je
outsb
mov
mov
lcall
pop
pop
test
mov
mov
lods
out
les
and
lods
pop
mov
arpl
xchg
addl
fisubrl
xchg
mov
sbb
add
daa
into
push
jp
test
inc
dec
mov
test
inc
mov
add
adc
dec
aam
mov
scas
cmpsb
out
les
xchg
mov
xorl
add
dec
int
cmpsl
cmp
cmpsb
lret
push
mov
pop
and
js
pusha
int3
jns
rep
loope
insl
adc
insb
movsb
fcoms
rolb
stc
add
lret
dec
cmpsl
in
mov
mov
rol
adc
mov
andb
mov
or
std
jecxz
arpl
test
jl
addl
dec
cmc
in
jle
repnz
es
push
adc
jno
insb
repz
sbb
rcll
or
aad
ljmp
popf
test
inc
inc
push
test
inc
inc
sbb
cld
je
ds
push
aam
clc
and
cmp
xchg
pop
jno
outsb
sahf
or
adc
lret
fcmovu
dec
lock
inc
dec
dec
push
jne
mov
ljmp
inc
and
jl
in
push
addr16
mov
inc
test
in
sbb
repnz
ret
xchg
sub
inc
aam
or
daa
in
mov
add
push
mov
jp
jmp
adc
xor
aad
fimuls
fwait
or
das
mov
cmp
jne
ret
stc
fists
aas
sub
bound
aas
mov
cltd
xchg
mov
cli
clc
les
and
aad
and
movsl
rclb
sub
popf
sbb
push
cld
inc
lds
lret
cmp
mov
and
inc
adc
sbb
pop
insb
pop
pop
flds
in
or
xor
in
dec
frstor
and
jae
das
xchg
cmp
push
in
mov
jnp
push
adc
jge
lahf
in
loope
xor
mov
fxch
jmp
xor
jbe
or
cld
fidivrl
lock
inc
imul
or
lahf
aas
fistps
inc
clc
or
sarl
jecxz
neg
lret
or
jecxz
out
scas
xor
enter
leave
adc
fnstsw
out
mov
das
popa
cmc
rol
fstpl
xlat
mov
xchg
lods
dec
daa
inc
pop
int3
pushl
jle
push
lods
imulb
stc
mov
jno
arpl
outsb
int
mov
repz
mov
insl
test
mov
dec
dec
jne
and
out
dec
push
fs
xor
stos
jb
loop
sbb
sbb
or
dec
repnz
mov
call
out
popf
scas
pop
cmpsb
xor
push
adc
in
xor
mov
adc
or
je
sub
mov
cmp
add
dec
pop
mov
nop
lds
mov
mov
outsb
mov
imul
sbb
dec
pop
push
adc
mov
xor
shr
cmp
mov
shrl
jp
inc
std
xor
and
aam
in
jecxz
mov
xor
mov
mov
xchg
jmp
pop
sub
xchg
or
dec
xor
pop
cli
cmp
pop
dec
lret
sbb
inc
jbe,pn
shlb
call
jmp
js
push
mov
ret
into
jmp
pop
loopne
pop
mov
cmpsl
lods
leave
pop
repnz
mov
jmp
jge
mov
mov
into
cmp
jo
popf
pop
je
adc
or
inc
sbb
mov
push
outsb
lret
insl
and
push
addl
das
cmp
enter
add
cmp
jle
rol
jne
cmp
imul
sbb
push
dec
sbb
shrl
aam
lret
or
sbb
lahf
je
sbb
frstor
ss
lahf
jg
jle
jmp
xor
out
jno
mov
adcb
mov
into
lds
sarl
push
xor
pop
xchg
mov
mov
rolb
cmp
jnp
mov
jmp
mov
orb
call
pop
jae
clc
pushf
pop
in
sbb
lahf
stos
in
lahf
mov
lods
ds
jns
push
aaa
leave
cmp
mov
mov
push
sbb
cmp
dec
mov
xlat
pusha
imul
mov
jno
inc
jl
sbb
sbbb
notb
mov
aam
lret
pop
inc
fs
sbb
xor
dec
int3
sbb
rorb
flds
mov
dec
ja
inc
lahf
out
add
lods
mov
jne
sbb
fadds
loop
add
jmp
fstps
push
ror
fdivrl
in
test
sarb
aam
sub
negb
fsubs
sub
mov
jmp
push
adc
leave
fmull
and
push
push
fsubrl
mov
lods
sti
fwait
rolb
xorb
add
dec
pop
popa
das
pop
adc
cmc
jo
pop
js
xor
loopne
dec
cmc
mov
xchg
movsl
xor
and
or
sbb
leave
pop
xor
xor
mov
leave
add
xlat
push
pushf
icebp
or
push
or
adc
sbb
js
adc
outsb
lods
in
cmp
movsl
sti
aam
js
xlat
inc
call
fstps
cmp
push
dec
and
jmp
mov
mov
push
aad
and
loop
mov
fsubrs
xor
loope
mov
ret
leave
dec
shlb
xor
mov
iret
cmpsl
lea
mov
aas
xlat
clc
out
dec
rcrl
jge
cs
jb
lea
cld
adc
arpl
sbb
xchg
xor
xor
insb
shld
add
movsl
roll
ljmp
xchg
pushf
jb
aas
cmp
ja
outsb
mov
ret
jmp
sub
imull
loopne
leave
shlb
jns
jg
repz
pop
stos
ror
xchg
ret
mov
insb
pop
jno
mov
stos
loope
insb
or
cmp
or
mov
xchg
xlat
jb
fisttpll
fs
iret
sbb
pop
outsl
mov
xchg
mov
test
pushf
sbb
mov
mov
hlt
and
in
out
fsubrs
mov
scas
push
and
push
xor
fcomi
scas
sbb
flds
push
cmpsb
cld
iret
loope
mov
xchg
lods
ja
cmp
cvtdq2ps
call
ss
in
movsw
in
in
cmp
mov
inc
clc
and
jl
sbb
cmpsb
cmp
sub
sbb
xchg
cmp
mov
mov
into
data16
dec
mov
and
in
mov
arpl
mov
sahf
lsl
scas
mov
loop
mov
adc
pop
push
cmp
add
xchg
pop
inc
sahf
ja
outsb
dec
lret
cmp
xor
test
pop
inc
mov
jns
jmp
push
je
adc
jmp
pop
pop
subb
aas
push
imul
cwtl
push
leave
test
scas
sub
dec
inc
push
flds
lahf
or
imul
and
sub
jae
jecxz
pcmpgtw
dec
ret
pop
test
stos
pushf
push
lahf
scas
test
sub
fwait
pop
pop
mov
xchg
or
rcl
mov
inc
sub
mov
sti
push
test
dec
inc
cmp
lahf
into
out
divl
jmp
jecxz
das
inc
std
iret
add
pusha
cmpsl
nop
cmp
mov
popa
imull
jl
xchg
loop
mov
pop
out
push
cmp
cmp
pop
pop
sub
stos
enter
aad
data16
rolb
add
fmuls
cmp
cld
ds
jne
out
dec
jb
jge
xor
pop
js
sbb
and
push
out
fisubrl
inc
int
jne
sub
es
cmp
fbstp
pusha
es
and
inc
divb
sub
mov
dec
mov
pop
mov
mov
shll
sbb
mov
jb
fwait
cmp
cmp
add
lds
clc
mov
or
call
insb
add
sub
xchg
cld
aad
jbe
insl
sbb
dec
and
adc
loop
pop
mov
ja
cmp
jns
outsl
xchg
lahf
movsb
sbb
rol
cwtl
loopne
ljmp
adc
out
sbb
popf
mov
mov
mov
roll
pop
fdivrl
movb
movsl
fimuls
mov
push
sbb
inc
sub
sub
sahf
and
sbb
mov
shl
sbb
movsb
ljmp
cld
std
pop
mov
adc
pop
ret
and
repnz
and
xchg
es
out
push
loop
loop
daa
mov
int3
flds
xlat
mov
and
int3
in
xchg
add
subl
pop
lods
xchg
push
les
divl
jge
mov
xor
jge
incb
pop
scas
scas
inc
cs
mov
stos
inc
pushf
jmp
cld
jnp
mov
xchg
mov
lahf
or
xor
sub
imul
mov
add
int
inc
and
push
sahf
imul
pusha
jae
xor
aad
pop
push
and
mov
leave
call
pusha
xchg
leave
cmpsl
jb
jmp
jge
or
pop
inc
mov
out
shrl
and
or
sbb
lds
insl
fwait
add
sbb
add
addr16
inc
adc
push
aad
push
xchg
out
sub
repz
jecxz
ret
insl
pop
mov
jge
jnp
mov
adc
in
and
out
ljmp
mov
pop
dec
aas
mov
or
push
push
sbb
in
mov
ljmp
popf
stos
jmp
js
sahf
dec
xor
xchg
inc
sub
dec
fldt
jae
fs
lcall
add
inc
push
bound
lods
sti
repz
ljmp
xorl
xchg
jle
xchg
decl
push
push
dec
and
mov
imul
jl
pusha
inc
pop
adc
out
in
mov
iret
sub
ljmp
fcom
cmp
jle
ss
lods
subb
xchg
loope
mov
mov
loop
test
aaa
fimull
xchg
into
mov
mov
pop
repz
dec
push
jmp
adc
inc
lcall
in
jp
mull
sbb
fsubs
cmpsl
test
test
dec
dec
test
sbb
in
add
sub
xor
jl
lahf
repnz
push
repnz
add
data16
cmp
push
shrb
js
mov
jl
xor
add
and
rorl
or
xchg
xchg
shrb
cmp
pop
pop
cld
mov
mov
mov
scas
gs
mov
sbb
jmp
pop
out
mov
jecxz
mov
call
jmp
jp
idivb
outsl
aam
scas
push
pusha
xlat
push
pop
es
adc
sub
lret
inc
pop
xchg
add
rcrl
or
xchg
std
xchg
rolb
mov
sbb
mov
addl
imul
jge
inc
negb
mov
sarl
mov
aad
repz
pop
sbb
or
fimuls
scas
and
cmp
jmp
shl
mov
shr
sbb
cmc
sub
ret
inc
pushf
pop
neg
pop
fs
popf
movsbl
xlat
mov
mov
sbb
test
outsl
inc
lahf
imul
clc
std
aaa
cltd
icebp
fidivrs
test
jmp
enter
fucomi
xchg
push
mov
push
push
lock
rcrl
mov
xlat
lcall
insb
ss
cmp
popf
inc
add
and
lods
and
or
pop
sets
arpl
pop
fiaddl
aam
add
cmpxchg
notb
lret
adc
aaa
xor
lods
xor
push
xchg
cltd
repz
push
inc
adc
pop
icebp
outsl
bound
jmp
imul
pop
mov
movsb
data16
sbb
push
dec
push
scas
out
xchg
cld
add
jb
das
icebp
adc
movsl
lcall
pop
and
bound
adc
jl
stc
roll
push
cltd
shlb
mov
popf
aas
sbb
dec
movsb
mov
cmp
and
push
in
subl
sub
out
jecxz
jp
pop
lret
clc
call
xchg
fdivs
rcrl
test
je
fwait
mov
push
xor
mov
mov
mov
ret
mov
testb
lods
dec
test
sbb
jp
jae
int3
es
adc
push
add
sbb
addb
sbb
hlt
or
cltd
jmp
xor
test
mov
xchg
iret
and
lods
popf
xchg
jge
lock
cld
mov
stos
mov
popf
sbb
ja
pop
ja
enter
pop
shll
test
jmp
cmp
xor
in
out
xchg
jns
push
jo
and
incb
sbb
inc
ja
dec
shrb
and
lods
lret
sub
dec
lock
sub
mov
cmp
nop
leave
add
sahf
sub
push
and
mov
inc
xchg
xor
mov
inc
mov
fcompl
add
fld
mov
mov
mov
mov
push
mov
aam
push
jmp
rcrb
xchg
lret
lock
bound
dec
mov
inc
sbb
inc
lds
les
sbb
outsb
push
in
inc
loopne
sub
fstps
insb
xor
push
icebp
push
rclb
lea
das
adc
rcr
pop
addb
out
mov
dec
scas
xchg
loopne
sbb
test
arpl
pop
enterw
les
mov
lea
scas
jae
int
sbb
push
push
push
mov
sbb
cwtl
in
shlb
add
out
inc
mov
adc
xchg
jae
and
nop
sub
jae
sbb
stos
lds
sbb
push
xor
ret
lds
adc
mov
mov
sub
xchg
out
sub
jmp
push
mov
aam
and
add
pop
sub
mov
cmp
xchg
scas
cmp
rorl
pop
xchg
stos
iret
icebp
mov
adc
dec
xor
pusha
bound
mov
hlt
xchg
mov
sub
dec
cld
test
and
xor
pop
or
xchg
jp
bts
movsb
dec
cmp
lea
jbe
mov
mov
lock
xchg
data16
cmovg
fdivs
shl
sbb
into
pop
dec
xor
filds
inc
pop
out
ret
sahf
mov
in
and
pop
or
mov
mov
fimuls
adc
je
sbb
lahf
fstpl
loope
mov
out
shrb
mov
ljmp
and
ret
push
ds
stos
cmp
adc
in
jns
adc
jnp
sti
push
ja
adc
andb
pop
inc
int3
call
xorb
pusha
xlat
or
pop
nop
pop
lds
insb
jo
push
data16
cwtl
insl
push
jae
fstpl
sub
mov
inc
popf
nop
js
push
sub
mov
push
test
out
push
sub
ficoms
dec
test
lret
cwtl
adc
and
cmp
fistps
mov
jnp
jb
pop
stos
je
or
push
ds
psubusb
push
xchg
or
mov
cld
jae
sahf
mov
mov
lahf
icebp
mov
out
and
cmp
xchg
push
and
nop
mov
push
loope
sub
mov
movsb
cmp
mov
add
inc
xor
je
testb
or
sbb
jno
cmpsl
push
leave
cld
sub
bound
add
or
inc
dec
aas
pop
lds
add
cmp
pop
cld
adc
roll
int
adc
iret
pushfw
sub
cmp
xchg
inc
fwait
aam
add
push
movsb
and
jecxz
pop
adc
cmpsl
xchg
cmp
ret
lods
jp
pop
cmp
mov
cwtl
inc
js
div
and
andb
sbb
iret
mov
std
aaa
push
fiadds
icebp
imul
push
xor
lahf
xor
ss
je
lock
sub
sub
ds
daa
inc
aam
dec
jne
cld
sub
in
xchg
fnsave
lods
push
fidivrl
ret
ljmp
int3
pop
adc
popl
or
and
pop
fstps
fists
cmp
mov
movsl
jp
adc
add
iret
flds
lsl
push
sbb
arpl
lahf
add
xor
push
sub
mov
mov
ffree
outsl
xchg
arpl
dec
lods
sub
xlat
mov
dec
clc
mov
xchg
inc
sub
add
dec
xchg
xchg
pop
cmp
add
add
dec
loopne
in
xor
mov
and
es
dec
dec
push
or
dec
or
push
mov
lock
and
iret
dec
std
cmp
add
cmp
jg
adc
clc
repz
push
dec
addl
push
sub
xchg
test
and
adc
inc
lds
dec
pop
in
orb
or
call
test
int
movsl
fcmovnb
lret
mov
loope
sbb
cli
icebp
sbb
das
cmp
shll
push
popf
mov
push
loope
addl
jmp
sbb
jmp
pop
lods
jmp
jbe
stc
rcll
sbb
push
mov
sub
mov
mov
imul
dec
test
stc
dec
dec
jge
insb
pushf
out
rcrl
aas
or
nop
mov
cli
ljmp
inc
jbe
pop
mov
insb
mov
pop
out
loope
clc
ret
in
dec
xchg
pop
nop
ret
or
bswap
pop
xchg
sbbb
test
sub
xchg
push
gs
addl
xchg
xor
dec
sub
mov
dec
cmp
push
sbb
les
mov
jbe
cmc
pusha
rcll
cwtl
nop
sahf
ljmp
mov
and
bound
outsb
adc
stos
stos
out
sub
call
xchg
sbb
dec
xchg
ja
test
imul
mov
call
wbinvd
cmc
outsl
rolb
and
push
jb
add
int
stc
inc
sbb
in
push
mov
sub
test
test
xor
jp
pop
mov
xchg
mov
add
sub
es
daa
hlt
jge
loope
scas
popa
jge
lock
inc
mov
cld
aam
fildl
mov
in
mov
fadds
xor
pop
inc
lods
cs
push
xlat
dec
xor
cmp
xor
xor
sub
jnp
fldcw
lahf
inc
cmpsl
mov
push
mov
push
fs
xchg
sub
sbb
aaa
lods
push
ret
and
pop
in
cwtl
mov
fwait
dec
outsb
sbb
adc
in
aas
cmp
adc
ret
dec
das
out
nop
fadds
das
dec
add
pop
mov
inc
inc
push
into
mov
out
sub
push
xchg
movsb
sub
rcl
xchg
loope
in
xor
xchg
stos
and
sarl
mov
sub
das
mov
ss
lods
sbb
cli
sbb
dec
pop
cmp
loop
mov
pop
std
or
pusha
cld
or
sub
xchg
idivl
sub
sbb
repnz
fstl
insb
rcrl
ret
jp
sub
cwtl
orb
xchg
out
sbb
repz
gs
iret
inc
lahf
or
lret
sub
call
lock
jmp
imul
inc
aaa
push
out
popa
or
push
push
and
sarb
stc
xor
insb
pop
sub
inc
insl
mov
jb
imul
push
cli
test
sbb
jbe
inc
aad
push
clc
jmp
repnz
xchg
int3
sbb
or
les
sub
mov
enter
mov
jl
pop
cli
ja
sub
pop
inc
adc
cli
enter
push
jae
sub
pop
xor
aas
push
aas
stos
in
aas
push
xchg
scas
les
fldenv
mov
lds
mov
xor
test
pusha
ret
shrl
mov
push
mov
movsb
fistpl
adc
out
xorb
leave
gs
push
push
lcall
sbb
jle
xchg
std
cmpsl
jl
daa
sub
pusha
dec
fwait
pop
in
cmp
push
ror
pop
mov
push
outsl
out
sub
mov
daa
clc
pushf
int
xor
jmp
dec
and
sbb
cmpsl
push
mov
imul
xchg
stos
add
lds
repnz
pop
jae
loopne
lret
mov
bound
mov
adc
ja
rcll
sub
push
mov
jb
xor
into
push
push
mov
jno
cmp
mov
loope
shlb
cld
pop
sub
or
push
data16
push
mov
add
js,pt
test
imul
shrb
rcrb
roll
or
int
cmpsb
add
stc
lret
inc
leave
shrl
movsl
mov
or
and
insl
mov
and
sbb
loope,pt
and
sbb
pop
jmp
sahf
bound
adc
lret
in
mov
mov
push
int
inc
adc
inc
lds
sub
or
sbb
jne
gs
lret
mov
mov
lret
xchg
sub
and
lods
stc
ret
into
adc
inc
shll
sbb
or
push
pop
fisttpl
enter
sbb
mov
xchg
sub
sahf
pusha
and
cmp
dec
aam
mov
dec
cli
mov
mov
int
dec
mov
xchg
lret
pop
inc
rorl
fmuls
cmpsl
mov
iret
mov
push
mov
stc
imul
ljmp
inc
sbb
fistpll
jnp
popa
sbb
jg
stos
mov
and
pop
pop
cmpl
lahf
fsts
inc
xor
mov
lock
mov
push
stos
jle
push
sahf
cmpsb
sub
outsl
loope
lret
mov
stos
int
push
inc
jg
mov
jns
adc
cmp
adc
mov
mov
adc
test
sar
push
aaa
xor
int
into
shlb
push
xchg
or
stos
sbb
mov
sbb
dec
pop
jns
and
test
lcall
cld
cmp
xor
imull
ljmp
xchg
or
sub
enter
cmp
add
mov
dec
push
push
dec
mov
dec
sahf
xlat
pop
and
mov
and
lea
cmp
sbb
jae
repz
pop
dec
arpl
fimuls
mov
iret
pop
sbb
fbld
push
adc
adc
rorl
divb
test
inc
mov
in
out
jge
mov
adc
pushf
and
loop
and
cmpsb
fsubrl
inc
inc
dec
pushf
mov
inc
add
call
iret
mov
movsb
push
lret
dec
xlat
xchg
out
scas
jne
push
cmp
and
and
sbb
mov
les
je
test
xchg
push
xor
in
iret
movsl
cmp
shr
mov
cmp
or
repnz
je
imul
mov
outsl
mov
dec
cli
pop
push
lock
push
addr16
inc
out
or
pusha
jp
xchg
lcall
sub
jmp
mov
repz
push
pop
pop
fcomp
mov
xor
addr16
pop
or
movsb
sub
fisubrs
inc
in
gs
lds
sub
test
pushl
mov
std
jecxz
pop
or
sub
loop
jl
test
or
pop
popa
pop
lds
push
arpl
or
repnz
sbb
out
rcl
dec
fstpt
movsb
push
jge
ficompl
or
add
xchg
jb
mov
jp
ret
inc
pop
inc
fidivrl
jl
xchg
stos
mov
xchg
xorl
lds
mov
push
jmp
dec
inc
xor
sub
mov
lea
xor
inc
fisubl
push
pop
dec
movl
jge
mov
ret
dec
jecxz
popf
pop
das
pusha
gs
xor
pop
push
ror
xchg
adc
mov
fwait
stos
push
lret
adc
stos
add
fimull
xchg
xorb
push
leave
stc
add
sbb
mov
enter
loope
imul
ds
mov
scas
jno
ror
repnz
into
mov
insl
push
mov
sbb
xor
into
inc
jmp
hlt
pop
in
rcr
cmpsl
das
arpl
pop
or
sub
lods
stos
sahf
inc
repnz
xor
inc
negb
pop
pop
add
dec
cld
out
lcall
or
mov
adc
pop
push
dec
mov
mov
cmp
jno
inc
aam
add
dec
cmp
mov
sahf
and
or
loop
mov
loopne
mov
aam
sti
or
xchg
sub
mov
cmp
cmp
or
cmpsb
repnz
repnz
mov
mov
test
les
fisttpll
and
push
xor
xor
xchg
scas
mov
cwtl
add
movsl
sbb
jns
ret
lcall
adc
repz
push
in
cmp
movsl
repz
mov
les
pushf
rol
xchg
xchg
mov
mov
test
xchg
xchg
push
in
add
mov
sub
adc
mov
sti
rcrb
xor
mov
inc
insl
jle
xchg
mov
push
in
mov
outsl
mov
and
adc
sub
push
ss
or
jmp
shll
add
std
ds
fcoms
shll
or
pop
int3
cs
cwtl
mov
mov
sbb
jge
adc
mov
push
fisubs
xor
xchg
jl
icebp
xchg
pop
pusha
sti
lods
pushf
fisubrl
xchg
rorb
mov
push
fcoml
fildl
iret
mov
cld
jne
xchg
jb
xor
cmp
cmpsb
out
push
mov
cmp
fnstenv
xor
dec
lret
clc
mov
loop
fsubr
scas
and
loope
jno
add
xor
fistl
push
adc
jnp
lcall
in
stos
not
or
stos
add
xchg
dec
lods
adc
lea
shlb
in
push
mov
cmp
xchg
je
push
and
jmp
sub
xchg
jmp
fwait
cmp
test
fstpt
sarl
inc
int
mov
or
adc
pushl
outsb
mov
or
int
mov
into
ss
or
scas
pop
mov
or
mov
flds
jl
mov
loope
mov
fwait
mov
in
sub
xacquire
stos
pushf
sti
lea
loope
pop
es
sub
jnp
and
fdivrs
arpl
push
frstor
mov
sbb
popa
fmull
test
lret
stos
mov
jbe
cmp
xchg
nop
data16
push
mov
mov
out
insb
fwait
fs
mov
push
jge
int3
or
lahf
mov
mov
shr
lods
pop
cmpl
hlt
xchg
addr16
sub
cmp
xchg
enter
or
pop
xchg
into
shlb
or
aaa
pop
add
inc
pop
jmp
lods
scas
mov
dec
mov
bound
outsl
pop
fsubrl
mov
adc
fmull
lret
shlb
je
jnp
pop
fisubrl
cmc
cmp
push
mov
ljmp
aad
jmp
test
pop
sub
or
adc
sbb
icebp
push
sbb
mov
mov
movsl
cmp
pop
popf
insl
mov
sbb
mov
js
mov
mov
jae
pop
bound
add
or
cmp
cwtl
sub
pop
inc
xor
sti
mov
mov
and
cld
jg
cmp
and
xlat
call
aam
fdivrs
aaa
xor
sbb
push
xchg
or
push
movsb
arpl
add
xchg
add
lods
add
pop
fdivp
mov
fcoms
push
dec
imul
xchg
sbb
loopne
rcrl
xchg
xchg
push
je
gs
aaa
fdivs
push
imul
mov
in
loop
push
rcll
adc
mov
push
in
or
les
mov
and
lea
xchg
cmpsl
cmp
shlb
pusha
rcll
out
sbb
push
call
sbb
xlat
pop
aad
ret
leave
cmc
or
fsubs
test
enter
in
cmp
dec
mov
aad
cmc
xor
ds
and
jg
stc
ficoml
movsb
pop
xchg
call
mov
imul
stc
cmp
ret
fcompl
fsts
repnz
push
pusha
mov
pop
fwait
dec
add
sub
jmp
xchg
aam
pop
lods
xor
arpl
mov
or
in
mov
pop
pushf
adc
inc
lds
cltd
sub
mov
aam
lods
andl
lahf
das
out
incl
pushfw
cmp
push
std
subl
and
in
xor
jno
imul
push
imul
sahf
cmp
jmp
out
sub
xchg
movsl
loope
les
sbb
popl
and
lods
insl
leave
rclb
fildl
test
inc
adc
fidivrs
cmp
std
aam
cmp
pop
mov
call
mov
cli
lea
add
inc
adc
inc
faddl
fdivl
add
fcom
push
subb
mulb
hlt
hlt
stos
in
pop
cmp
insb
cmp
iret
cld
addr16
popf
in
mov
ret
and
fwait
mov
or
push
pop
cwtl
mov
fwait
mov
test
pandn
cs
mov
push
mov
cmp
jae
and
cmp
mov
cli
fld
les
popf
insl
jne
sub
dec
cld
jne
dec
xorb
mov
loop
aas
aam
push
lret
inc
pop
int3
cmp
cmovnp
mov
loope
pop
adc
ret
mov
lret
in
scas
testl
jne
scas
pop
fwait
push
sarb
lcall
cmpsb
ret
cmc
pop
cmpsl
shl
adc
jg
sbb
nop
lcall
mul
xor
mov
std
push
mov
jae
xchg
flds
jecxz
stc
lods
popa
dec
sub
ss
rcrb
stos
sti
into
les
xor
mov
mov
test
mov
sub
or
xchg
sbb
outsb
dec
mov
push
ljmp
adc
loopne
leave
xchg
pop
mov
jne
int
iret
or
mulb
pop
mov
push
cmpl
sbb
pop
xor
cmp
fistpll
inc
cwtl
fisubrl
out
fstpt
fidivl
dec
dec
stos
cld
arpl
push
pop
enter
jns
add
hlt
sbb
push
pop
dec
xor
add
test
aaa
mov
in
push
adc
pusha
cli
xchg
xor
jae
daa
pop
adc
adc
cwtl
mov
scas
shl
repnz
lea
shl
sbb
addr16
stc
adc
xlat
and
xor
sbbb
cmpsl
nop
ret
insl
dec
mov
cmp
inc
xchg
mov
movsb
mov
xor
test
lods
pop
sbb
out
gs
fstpl
mov
pop
mov
sbb
add
sbb
mov
dec
repnz
mov
data16
xchg
sarb
mov
sbb
lods
mov
mov
inc
mov
ret
inc
sbb
fldl
fldl
arpl
movsb
aaa
iret
xchg
int
mov
xor
das
push
dec
and
xchg
adc
into
pop
pop
fdivr
or
jmp
and
sub
pop
dec
jno
push
adc
into
sub
inc
iret
hlt
iret
lcall
jp
mov
cmp
jge
pop
mov
add
test
and
into
sub
ret
fdivs
mov
mov
fimull
pop
add
mov
or
outsb
cmp
dec
out
sbb
loope
xor
js
pop
cmp
add
repz
mov
hlt
cmp
loopne
cbtw
js
outsl
fcoms
and
ja
or
fcoml
cmp
mov
mov
push
sahf
pushf
fs
ljmp
add
push
jle
push
nop
mov
and
pop
stc
mov
xor
das
movsl
ret
add
dec
rcll
or
jmp
stos
sub
fsubrs
out
xor
mov
jb
xor
in
ss
cmp
xor
dec
jp
mov
inc
pop
lahf
lcall
in
lods
inc
inc
pop
mov
inc
dec
pop
in
adc
addb
jecxz
jle
sbb
sub
icebp
mov
cmp
flds
adc
imul
imul
lods
inc
decl
xor
and
and
ds
push
in
push
pop
sar
lea
jno
jno
xchg
icebp
ret
test
in
jecxz
repz
ja
inc
call
xor
inc
rcl
dec
std
cld
ja
xor
xchg
dec
scas
shll
movsb
popl
je
test
scas
push
xor
in
sbb
rolb
or
fwait
lret
mov
inc
shrl
lods
ret
into
xlat
lret
xadd
lea
pop
ret
test
shll
test
push
pop
mov
nop
inc
das
xchg
dec
mov
fnstcw
adc
ds
lret
popl
jnp
mov
sbb
mov
cs
and
jno
jp
dec
test
testb
test
bound
lret
mov
push
add
add
pop
or
or
mov
scas
gs
push
mov
stc
jno
test
xchg
fadd
and
xchg
out
dec
insb
fisubrs
sbb
or
lcall
or
add
popa
xchg
rolb
add
or
pop
mov
pop
sub
adc
cmp
movsl
sbb
in
fwait
mov
sbb
cmpsb
cmc
xlat
pop
fimull
out
cli
mov
mov
incb
movsb
mov
cmp
icebp
mov
mov
pop
and
push
mov
xchg
inc
jecxz
data16
inc
inc
loop
repnz
pop
jl
push
dec
ret
es
jne
cmp
sbb
sbb
sub
mov
gs
shll
pushf
inc
pushf
outsl
jae
jl
xchg
clc
xor
mov
mov
and
mov
dec
pop
fnstcw
lcall
int
das
repnz
mov
xchg
imul
mov
jge
xchg
enter
lret
xchg
lds
lea
rcll
push
mov
xchg
mov
pusha
popf
cli
adc
testb
lods
pop
push
lock
in
xchg
and
xchg
loope
add
insb
xorb
push
add
mov
push
dec
daa
mov
sti
rclb
sub
or
iret
cmp
cmc
fnstenv
insl
cltd
jb
scas
lods
mov
addr16
mov
xor
out
inc
cmp
sbb
sbbl
push
inc
test
or
inc
aad
push
test
daa
cli
adc
push
dec
fs
pop
mov
cmc
jno
mov
subb
mov
mov
dec
lahf
popf
lock
and
hlt
ss
cld
loope
cmp
and
push
cwtl
mov
mov
daa
mov
loopne
scas
jle
inc
popa
mov
popa
lea
or
stos
inc
mov
jmp
cmp
ja
pop
cs
lods
ds
jb
cmpsb
loopne
push
sub
xor
pusha
in
stos
lret
stos
sub
in
mov
das
jb
jg
xor
xor
xchg
pop
lods
pusha
loope
add
jecxz
dec
outsl
scas
adc
mov
add
out
fisttpll
ret
fstps
iret
sub
cmp
out
leave
xorl
in
pushf
rcrl
ds
insb
dec
hlt
dec
aad
push
mov
test
push
xchg
loope
mov
imul
mov
repnz
mov
dec
dec
pop
sub
scas
addr16
push
lds
add
sbb
loope
pushf
cmp
cli
pusha
xor
into
dec
lock
cmp
aam
cs
push
jecxz
insb
jl
xchg
call
aaa
mov
cmpsb
sbb
jo
faddl
outsl
nop
mov
and
mov
scas
and
sbb
xchg
imul
repz
or
mov
xchg
fsubl
jg
xor
pop
pusha
loopne
jmp
adc
das
out
movsb
push
repnz
addr16
add
pop
mov
or
adc
push
jne
cli
out
sbb
xchg
sbb
adc
mov
cmp
pop
pop
pop
adc
pusha
and
pop
lahf
movsl
add
rcr
xchg
fistpll
mov
mov
jnp
add
or
sub
or
or
pusha
push
imul
and
filds
jp
and
ds
cmp
jne
popf
popa
pop
xchg
sub
pop
xchg
lahf
fcmovbe
jecxz
cmpsb
adc
mov
mov
mulb
repz
dec
sti
les
aaa
test
xor
sbbl
lock
dec
das
mov
cmpsl
lods
in
cli
adc
mov
cmp
add
xor
jne
jl
mov
pop
dec
rcrb
cmp
clc
adc
repnz
js
mov
daa
mov
add
cmp
insb
mov
in
out
mov
mov
xor
mov
fldl
add
aam
iret
pop
outsl
rcrb
lods
addr16
stos
clc
shrb
cmc
lahf
or
mov
lods
pop
pop
push
daa
dec
lds
jb
test
fdivl
loope
lods
pop
and
push
lea
outsl
jb
inc
loope
test
dec
add
mov
data16
sbb
gs
mov
mov
dec
in
mov
daa
scas
jno
push
jne
and
pop
dec
fisubs
sub
xor
in
repz
push
xor
mov
ror
jbe
mov
ljmp
mov
inc
fildll
push
mov
adc
sbb
subl
lods
stc
fnstsw
adc
sti
aam
pushf
orb
stos
out
popf
inc
fidivrs
fiaddl
leave
popa
and
push
scas
enter
mov
jae
das
enter
mov
sbb
in
int
lahf
pushf
scas
dec
xchg
incb
lds
cmp
add
pop
fwait
hlt
mov
jecxz
lods
es
or
sbb
xor
adc
movsb
movsl
inc
inc
stos
jl
push
loop
jle
mov
out
repnz
mov
ret
pop
cmpsb
or
add
sbb
lss
adc
cltd
in
dec
in
shl
lret
pop
mov
lods
cmp
lcall
push
imul
fcomi
fld
fldl
loopne
enter
shr
jp
cmp
loopne
or
cmp
int3
cmp
push
push
dec
stos
mov
dec
stos
out
cwtl
out
pop
cmp
sbb
daa
sub
pop
pop
leave
sahf
mov
inc
add
mov
fdivl
mov
push
iret
dec
ss
dec
popl
sub
or
aas
and
xchg
mov
bound
imul
loop
test
nop
cltd
insb
cld
sbb
mov
inc
sub
aam
lock
sbb
cmp
clc
flds
jge
outsb
pop
push
jle
adc
outsl
sbb
xchg
jbe
xor
daa
add
shr
mov
mov
imull
or
xchg
mov
mov
les
jb
imul
or
add
sti
rcrl
ljmp
xchg
add
outsl
xlat
dec
mov
inc
dec
loope
les
fcmove
or
sbbb
inc
out
lds
mov
ss
dec
mov
and
fistps
imul
xor
fwait
push
data16
sarb
jns
out
aad
or
push
rcrl
mov
mov
ds
sub
xchg
in
repnz
aad
leave
sbb
push
outsl
int
cwtl
out
fldt
mov
or
inc
jg
daa
cld
repnz
sbb
sub
jg
movsb
subb
sbb
insl
fwait
jae
sub
pop
push
lret
testl
es
ret
adcl
push
arpl
test
push
fwait
popl
pop
and
mov
sbb
push
loopne
in
jle
in
ficompl
xchg
pop
mov
cmp
add
insl
jne
loopne
sub
and
into
xchg
lcall
or
xchg
xor
mov
push
mov
jb
int
and
mov
xor
movsb
xor
xchg
inc
mov
lea
outsl
outsl
push
pop
sbb
cmp
sub
adc
inc
adc
in
add
imul
sbb
mov
push
addb
adc
xor
dec
popa
call
lea
mov
sub
mov
repz
mov
or
lods
mov
lret
and
jmp
push
mov
jno
stos
insl
mov
jp
xorl
popa
adc
lret
mov
xor
push
aas
lods
mov
xor
mov
int3
adc
mov
scas
adc
cmc
aas
dec
adc
jp
pop
push
jg
movsl
les
jge
testl
push
mov
sub
je
ja
aam
fwait
dec
inc
inc
push
dec
cmpsl
aam
push
test
lret
js
stos
and
lcall
je
lret
jns
negb
xor
adc
mov
imul
sub
mov
jmp
mov
fistpll
or
push
add
inc
ljmp
jle
repz
mov
mov
add
sbb
clc
sti
stc
mov
insb
sbb
adc
vpextrw
lds
cmp
aaa
dec
out
call
cmpsb
es
lahf
sbb
insl
cmp
imul
jns
jne
dec
and
fwait
inc
pop
cmp
ds
movsb
stos
jbe
mulps
mov
mov
dec
cli
inc
jne
mov
xchg
enter
and
push
outsl
lret
sub
ja
scas
stos
jge
ss
nop
cs
cmp
or
ret
cwtl
add
daa
outsb
lods
dec
imul
jmp
test
inc
xchg
bound
outsl
nop
sahf
sahf
cmp
push
sub
inc
push
and
mov
fldenv
pop
mov
sbb
imul
add
gs
mov
lock
and
xchg
push
lahf
jne
mov
les
lret
sbb
and
dec
adc
in
jl
add
scas
mov
ret
sti
and
adc
jnp
ljmp
jbe
sub
orb
cmp
jbe
loopne
dec
fstpl
mov
icebp
mov
sub
mov
mov
cwtl
dec
aaa
stc
cli
int3
inc
loope
pop
lret
or
xchg
or
int3
xor
jno
testl
cmpl
inc
xor
cmp
scas
lret
rorb
pusha
dec
and
inc
jp
xchg
imul
jl
push
ret
xchg
lods
movsl
rcl
and
fdivl
roll
stos
shll
fwait
sti
mov
test
neg
mov
cmp
push
xchg
inc
jge
mov
in
inc
lret
sbb
and
jne
adc
lock
sbb
mov
mov
ret
and
aam
dec
packsswb
mov
mov
aam
mov
lret
mov
sub
pop
popf
jle
or
sbb
test
mov
add
push
and
fistps
cli
negl
je
bnd
lock
adc
rcrb
repnz
cmp
movsb
adc
jmp
loop
adc
je
mov
push
pop
mov
stos
mov
fiadds
pop
xor
xchg
pop
push
jae
movsl
pop
sub
ret
addr16
push
testl
lea
mov
cmp
mov
call
int
int
sbbl
pop
inc
in
pop
jge
in
adc
push
test
pushf
out
pop
call
xor
sbb
lcall
data16
jg
add
adc
sbb
or
xchg
mov
cltd
mov
movntps
ds
loop
stc
aam
fidivrs
mov
clc
pop
push
or
sar
sub
lock
and
decb
lret
dec
sbb
test
fildl
ret
es
sbb
lds
pusha
jecxz
mov
push
pop
cmp
popf
xor
stc
and
add
icebp
jmp
cmp
cmp
xchg
iret
push
mull
cmp
arpl
mov
imul
mov
cmp
dec
sahf
and
lock
repz
rol
jae
inc
shl
loopne
data16
dec
sub
xchg
sbb
push
xlat
cmpsb
stos
mov
pop
lcall
mov
pop
lahf
sub
jp
mov
jne
fucom
in
push
nop
xor
stos
pop
jmp
pop
sbb
adc
aas
pop
push
adc
jecxz
inc
and
lods
and
test
lods
pusha
mov
sbb
gs
shlb
pop
int
fbstp
pop
push
mov
lahf
pop
inc
repz
ljmp
pusha
das
adc
movsl
jl
dec
xorb
jae
and
scas
movl
cmp
pop
js
pop
daa
lret
cmp
or
insl
push
and
ja
push
inc
lods
insb
int
sub
ret
or
data16
pop
cld
xchg
sub
dec
pop
and
push
sub
ds
arpl
xor
sbb
xchg
cmpsb
ss
jmp
imul
bound
add
in
mov
push
fidivl
pop
cwtl
ss
pop
out
subb
jnp
add
fwait
ja
aad
dec
jmp
leave
jmp
push
mov
mov
and
shrb
jb
sarb
in
in
jle
push
inc
add
cmc
adc
and
or
mov
fisttpl
pop
lret
sbb
orl
loope
leave
xchg
push
inc
imul
sbb
sub
dec
push
and
dec
imul
or
retw
movsb
loop
pop
mov
add
mov
sbb
pop
inc
adc
lock
incb
xchg
push
push
ret
sub
xchg
mov
jmp
mov
outsb
or
lahf
clc
nop
jp
stc
mov
sub
push
outsl
aas
mov
pop
sub
and
pop
and
push
sub
cld
addr16
jg
js
jnp
sub
push
lods
subps
shlb
inc
jmp
xor
xchg
pusha
cmp
daa
xor
shl
xrelease
in
xchg
cmp
xchg
es
xchg
scas
test
stos
sbb
out
dec
rcrb
mov
neg
in
mov
sub
bound
inc
mov
aaa
insl
insb
xor
jne
lods
sbb
pusha
mov
or
lods
xorb
pusha
mov
sbb
jp
adc
mov
je
lcall
and
jg
push
cli
xor
les
fwait
ds
mov
sub
mov
fimuls
mov
test
scas
ljmp
test
ds
mov
mov
mov
cmpb
std
jecxz
adc
xor
dec
dec
loop
sbb
mov
and
icebp
sbb
fstpt
mov
mov
clc
mov
mov
jmp
outsb
or
rcrb
mov
cmp
imulb
cltd
and
push
and
mov
js
adc
in
xchg
mov
negl
mov
addr16
mov
xchg
out
lods
pop
test
push
cmc
mov
mov
lcall
push
push
shrl
jae
pop
adc
xor
rorl
js
mov
testl
addr16
mulb
aaa
lahf
add
outsl
xor
pop
push
jmp
jmp
loopne
jno
addl
in
sar
insl
jb
out
imul
shl
fldenv
cli
push
jmp
add
stos
test
inc
xchg
inc
sub
sbb
mov
incl
lahf
push
shrl
pop
pop
inc
pop
sarb
movb
notl
fdivp
pop
lods
adc
stc
mov
adc
mov
imul
push
sub
jo
imul
or
pop
nop
jns
cmp
inc
xchg
rcr
stc
pop
dec
or
aam
das
pushf
jl
xor
pop
fwait
sub
loope
lret
add
or
xchg
and
jle
xor
push
cmp
push
ds
pop
cltd
cmp
cwtl
cwtl
hlt
rol
dec
jl
inc
add
add
cli
das
enter
push
push
lods
add
iret
jmp
pop
xorl
lock
add
hlt
adc
jle
xchg
jno
xor
or
cltd
das
lods
xor
inc
adc
std
inc
enter
inc
sub
jo
jnp
pushf
imul
and
and
jl
cmp
ret
sub
sub
push
xchg
cltd
mov
xor
cltd
mov
pusha
add
sub
inc
mov
fadds
inc
lods
shll
sarb
or
mov
jl
push
mov
popf
es
insl
pop
sub
mov
or
clc
add
pop
sahf
mov
js
in
subb
sbb
cmp
pop
jl
jae
cmpsb
and
mov
mov
ss
popf
push
fcomps
sbb
imul
in
lock
xor
and
bound
pop
push
mov
enter
mov
push
cmp
xchg
into
jl
imul
adc
mov
or
sahf
ds
shl
repnz
sub
ror
mov
sub
ror
roll
mov
adc
lods
mov
int
ret
nop
imul
or
push
orl
int
cli
repnz
js
mov
shr
stc
aam
orl
or
insb
xchg
or
mov
jb
adc
and
out
xchg
sbb
lods
adc
inc
jg
mov
cmpsl
pop
fists
xlat
sahf
adc
mov
xor
adc
rcl
mov
out
shlb
pop
scas
sti
shll
adc
sub
inc
into
aad
add
and
inc
outsb
jecxz
mov
pop
fisubrs
cmp
in
sub
outsb
cmp
daa
mov
in
sbb
mov
adcl
mov
sbb
aam
xchg
out
rcrb
dec
xchg
sbb
sub
xchg
xor
imul
pusha
sbb
fmul
xchg
jno
cwtl
jmp
fldenv
mov
add
jno
test
adc
cmp
shlb
xor
into
ret
sub
sub
mov
ljmp
rdtsc
stos
cmpsb
ss
pop
add
test
cmpl
hlt
lret
mov
fimuls
push
in
test
jl
addr16
fwait
inc
sub
out
rolb
xchg
mov
pop
decb
xchg
mov
cmc
sub
sub
mov
mov
loop
subb
add
mov
add
xor
sbb
or
xchg
jge
insb
xor
lea
fiadds
mov
imul
push
jae
mov
adc
clc
or
mov
je
pop
mov
outsl
mov
adc
call
or
pop
daa
iret
adc
jbe
ja
jge
mov
sub
dec
lock
loop
mov
mov
inc
std
mov
ret
mov
mov
into
cmp
data16
fldt
inc
xlat
sbb
push
lock
nop
inc
sar
repnz
orb
popa
inc
es
dec
mov
cmp
movsb
pop
fisttps
fldt
sub
loop
inc
sahf
xor
mov
xor
jp
mov
leave
lret
nop
fcompl
dec
in
imul
popf
cmp
aad
fsubs
adc
sbb
dec
fsubrs
imul
insl
fwait
jbe
sub
cli
cs
pop
fwait
sbb
out
fbld
bound
mov
cmp
xchg
jno
cmp
popa
fwait
mov
adc
xor
lret
outsl
lahf
mov
sub
outsb
xchg
sbb
push
lods
ret
andb
popa
pop
adc
mov
shrl
adc
aam
lock
daa
pop
dec
ljmp
mov
ret
icebp
mov
int
xchg
xor
testb
inc
and
shl
jle
cwtl
sub
xor
inc
dec
fcompl
imul
pop
data16
xor
jmp
xchg
scas
sub
inc
mov
add
mov
movsl
mov
mov
sahf
fiadds
cmp
cmp
mov
test
lahf
xor
dec
shlb
mov
add
push
sbb
cmc
shll
cmp
jb
push
pop
cmp
ret
stos
fmull
and
js
push
mov
adc
push
adc
call
inc
push
xor
xchg
repnz
mov
ljmp
mov
mov
push
lcall
wrmsr
cmp
fcoms
and
fisubrl
mov
jl
mov
pop
nop
dec
in
fistpll
or
mov
lock
test
sub
push
je
pop
test
or
sbb
int
jmp
sub
adc
jle
stc
mov
aas
xchg
cmp
dec
xchg
mov
mov
in
cmp
mov
gs
jg
fwait
push
popf
cmp
rcrb
dec
cltd
xor
mov
inc
mov
out
xchg
push
sbb
pusha
pop
xchg
out
dec
notl
fimuls
pushf
leave
movl
jmp
jp
sbb
cmp
xchg
out
jle
or
mov
mov
movsb
pop
pushf
insl
jecxz
loop
push
xchg
mov
mov
pop
mov
jne
mov
inc
into
mov
je
sub
xor
sub
pop
xor
mov
imulb
xchg
fists
repnz
xchg
mov
sub
add
cwtl
jo
and
or
xchg
push
mov
inc
cmp
clc
or
mov
cmpsl
cmp
mov
add
lods
hlt
mov
lea
xor
sbb
sti
lds
cmp
bound
push
xchg
loop
aam
mov
xchg
fs
sbb
mov
pop
enter
roll
lods
xor
in
jg
lret
pushf
hlt
mov
daa
inc
bound
inc
mov
lcall
inc
pop
fildl
std
movsb
mov
or
lret
xchg
loope
daa
fsubrs
movsl
mov
adc
popl
sbb
pop
call
mov
pop
mov
mov
inc
pusha
out
xchg
jne
mov
int
push
inc
je
pop
mov
and
shl
inc
fdivs
outsb
aam
fwait
inc
dec
mov
push
cld
push
loopne
jo
mov
mov
adc
sti
jns
add
push
shrl
cmp
xchg
out
fists
cmpsb
shr
sub
cs
push
aas
je
mov
jl
fnsave
cmp
xor
inc
pop
test
mov
inc
pop
push
stos
cmp
fcomps
enter
mov
inc
shll
or
dec
xor
mov
inc
sub
inc
lret
sbb
test
mov
dec
popa
arpl
hlt
fsts
es
das
mov
scas
and
dec
call
test
faddl
cld
add
push
pop
cmpsb
push
pusha
push
inc
into
push
enter
push
mov
incb
add
push
adc
outsl
cmp
mov
adc
jge
xchg
es
mov
das
int3
jmp
lret
fiaddl
mov
sbb
cmp
pop
sub
mull
jo
adc
mov
call
std
aas
fs
inc
repnz
pusha
insb
mov
and
fs
scas
outsl
pushf
sub
dec
out
xchg
les
in
addl
in
divb
lds
dec
inc
je
and
xor
test
xchg
sbb
imul
xchg
sbb
mov
and
add
ret
insb
mov
pop
fdivrl
or
arpl
jl
stc
push
jae
jae
pushf
ficomps
loop
and
mov
je
dec
repnz
xor
fsub
cmp
sub
sub
mov
aad
les
repnz
jmp
out
out
push
dec
sbb
sub
scas
imul
mov
xor
push
cmpb
rol
into
xchg
imul
sbb
xchg
cmp
adc
les
xchg
sub
jmp
cmp
or
sbb
add
xchg
test
or
or
lret
loopne
or
sub
mov
lcall
daa
push
cltd
in
data16
rcll
mov
lahf
gs
sbb
add
stos
cmpsl
push
inc
sbb
loop
mov
je
bound
push
dec
sbb
arpl
sar
loopne
pop
out
scas
add
pop
push
outsl
mov
add
xchg
pop
cmp
aas
or
popf
adc
dec
lret
sbb
jecxz
movl
jle
mov
hlt
jns
ja
clc
shlb
in
pop
stc
xchg
inc
xchg
and
nop
adc
pop
sbb
shl
xchg
push
into
xor
push
or
or
pop
push
lahf
sub
push
jge
fnstcw
push
jp
or
xchg
std
mov
es
cmp
les
dec
pop
sar
xchg
test
ljmp
sbb
mov
fsubr
aas
vpminub
aam
rorb
call
and
or
pop
xchg
mov
loopne,pn
sbb
daa
mov
sbb
jmp
lock
into
nop
loopne
pop
push
or
popa
pushf
xor
test
pop
xor
lds
jo
add
mov
or
mov
add
sbb
mov
sbb
and
push
lock
sub
push
mov
dec
clc
mov
scas
clc
or
adc
dec
add
std
mov
jb
imul
pop
xchg
loopne
outsb
xchg
push
fisttps
jno
and
clc
jnp
dec
je
inc
insl
shrl
test
mov
pop
bound
jo
push
cmp
aaa
mov
pushf
sbb
mov
movsl
insl
push
pop
pop
dec
add
dec
repnz
les
mov
std
inc
sub
adc
adc
cmp
add
mov
dec
and
sbb
inc
add
mov
bound
add
int
mov
mov
aad
cmp
mov
mov
xor
insl
jns
cltd
shrl
inc
aaa
ss
cli
dec
fucomp
cltd
fidivrl
push
push
dec
divl
in
nop
in
stos
sbbb
xlat
jmp
add
outsl
cmp
movsl
mov
adc
je
dec
xchg
pop
bound
pop
xor
mov
mov
aad
sahf
pop
fidivs
test
sarl
pop
inc
out
mov
addb
sub
or
inc
cmpsb
cmp
out
xchg
or
mov
push
mov
ja
pop
aad
out
mov
pop
cmp
xchg
xchg
pop
lock
xchg
out
add
fldcw
add
and
pop
adcl
inc
dec
test
jnp
dec
rorl
jmp
cwtl
cmpb
add
nop
jb
mov
adc
shlb
ja
sub
sbb
push
cmp
scas
xchg
lds
add
cs
mov
jo
in
jmp
sub
jp
xor
shrl
xchg
popa
fmulp
sub
pop
ljmp
push
mov
cs
adc
icebp
out
add
lds
push
or
mov
push
jb
hlt
pop
inc
fidivrl
adc
xor
aaa
sub
and
repnz
or
outsb
add
daa
adc
scas
mov
push
xchg
push
and
mov
jle
pop
ud0
mov
inc
lods
cwtl
imulb
pop
mov
push
dec
out
ret
mov
sbb
mov
inc
mov
jns
sub
shl
test
nop
and
filds
sarl
popf
inc
roll
jmp
dec
adc
mov
jne
test
movsb
into
jg
in
out
push
or
lods
shlb
clc
idiv
js
fimull
adc
or
mov
or
repnz
sub
sub
clc
or
fdivs
pop
icebp
aas
mov
jno
sbb
lds
xchg
je
jb
les
push
movsb
mov
cmp
and
push
aaa
lea
adc
add
jno
and
mov
jb
inc
addr16
push
adc
push
lods
or
fcomps
test
stc
ret
icebp
es
pop
jmp
dec
fistpll
jmp
cmp
movsl
icebp
push
into
xchg
sub
gs
xlat
stos
andb
mov
inc
push
insb
dec
testl
or
sbb
push
jl
in
out
pop
imul
sub
cmpsl
enter
mov
inc
test
fildll
les
cmpsl
cltd
push
sbb
shll
cmc
xchg
push
in
sub
and
stos
mov
or
insl
and
cmpsl
je
pop
mov
fwait
inc
adc
xchg
outsl
test
pop
jno
mov
mov
push
mov
cmpsl
loop
xchg
sbb
cwtl
test
add
xor
fisttpl
stc
lret
jns
sbb
add
iret
cmp
fidivrs
pop
loopne
mov
xchg
shrb
cltd
out
js
mov
jp
mov
lock
sbb
mov
or
lret
fcompl
mov
ja
mov
sar
mov
sbb
inc
aad
enter
fyl2x
mov
lret
in
or
test
pop
adcl
sub
cli
sbb
inc
clc
int3
jge
mov
icebp
inc
and
add
pop
xor
pop
xor
fcmovbe
xchg
addr16
mov
xchg
xchg
lahf
jle
js
add
cmp
add
aam
xor
fsts
mov
mov
les
jmp
xchg
jl
movsl
add
aam
sbb
mov
ljmp
xor
adc
test
and
mov
jg
leave
mov
lock
xchg
jb
jge
push
stos
jns
and
psubb
and
add
jp
repz
inc
xor
push
shlb
push
jl
daa
cmp
in
cmpxchg8b
fistpll
loop
ficoml
sub
mov
scas
loop
popa
jl
mov
jecxz
enter
enter
pusha
and
push
lea
lods
mov
das
test
les
loope
jne
pop
push
mov
push
mov
jnp
push
mov
mov
pop
sub
in
outsl
add
pop
push
loop
out
mov
pop
stc
inc
push
pop
dec
push
xchg
orl
cmp
xor
pop
loope
cmp
ficoml
jbe
fistpl
int
push
xor
mov
loop
ss
ffree
inc
pop
clc
iret
push
push
lcall
repnz
out
rolb
out
push
mov
fadd
mov
cmpsb
lret
fisubrs
push
cmpl
pop
dec
orl
adc
push
xchg
aam
aam
imulb
adc
aam
jl
fsubs
out
std
out
outsb
add
mov
jnp
xchg
xchg
or
push
and
adc
add
test
add
add
sub
add
jecxz
pop
push
outsb
inc
push
repz
pop
dec
out
lea
mov
sub
arpl
icebp
and
xchg
shrb
shlb
test
mov
inc
add
loope
shrl
neg
pop
addr16
int
and
xchg
xchg
fldenv
jg
sbb
xchg
icebp
jne
pop
out
mov
mulb
dec
lea
or
sbb
pop
mov
data16
inc
fistpll
scas
fdivl
loope
xor
dec
push
jp
mov
test
push
dec
mov
loopne
bound
inc
ss
into
xor
xor
dec
call
fisubrs
int3
sbb
aad
into
lods
xchg
mov
pop
mov
mov
stos
sbb
ljmp
mov
leave
lcall
and
lea
dec
push
dec
or
or
icebp
fstps
out
es
in
adc
pop
xchg
dec
dec
jae
pop
bound
insl
jle
cld
jnp
jmp
lret
nop
push
popf
cmp
cmpsl
mov
and
add
jg
mov
pop
ret
cld
mov
mov
insl
jae
cmp
sub
lods
inc
aam
hlt
call
inc
imul
outsl
xchg
xchg
inc
jl
push
int
jge
ret
shrl
inc
test
inc
inc
stos
xor
cmp
inc
sub
movsb
sub
pop
add
push
dec
aad
mov
jle
pop
ljmp
sbb
add
cltd
xchg
xchg
int3
aam
mov
out
jge
arpl
insb
movsl
arpl
push
jmp
dec
xor
pop
and
int
mov
xor
mov
mov
pop
sub
xchg
xchg
test
push
mov
mov
test
inc
ret
je
xor
pop
xchg
or
insl
fisttpl
cmp
add
add
fimuls
cmpsb
mov
lahf
add
addr16
dec
xchg
in
xchg
mov
pop
mov
pop
mov
jo
xchg
imul
cli
movsl
xor
sub
dec
je
xlat
ljmp
call
sbb
cmp
outsl
pop
mov
adc
hlt
rorl
sti
jle
bound
scas
or
leave
xor
ljmp
dec
ds
enter
sbb
fbstp
pop
sub
imul
jno
sti
sbb
fsubrs
repnz
mov
in
xchg
xchg
scas
adc
add
in
mov
sub
add
loope
stos
fwait
sbb
rcrl
push
ret
xor
sbb
sub
cltd
loop
xchg
sti
shrb
movsl
pop
jle
jmp
sbb
pop
test
push
inc
int3
jne
jecxz
test
rol
in
popa
jns
dec
test
popa
addr16
sbb
into
pop
xchg
cmp
xlat
lock
xorl
in
sbb
mov
stos
icebp
adc
add
jge
idivl
jge
sarl
push
gs
mov
cmp
fs
pushf
ss
inc
es
sub
pop
dec
mov
mov
pop
jecxz
out
ja
sbb
outsb
mov
movsb
es
in
jmp
dec
ret
mov
fnstenv
push
adc
mov
out
div
and
test
and
test
test
imul
mov
adc
pop
into
repz
fwait
and
mov
shrb
inc
mov
movsl
xlat
sub
and
sub
xchg
jo
pop
jg
loop
dec
xchg
movsl
inc
popf
repz
and
mov
mov
sub
push
pushf
jmp
jnp
jb
sub
popf
dec
inc
cmpsl
xchg
dec
xor
add
icebp
leave
test
mov
jns
loop
adcb
jle
outsb
adc
cmpsb
pop
sub
dec
fmuls
js
pop
sub
test
scas
subb
jge
daa
std
loope
inc
iret
sub
adc
xor
leave
ficoms
out
jo
inc
fidivl
inc
sarb
and
xor
dec
int
andl
mov
ret
jo
mov
jl
aad
push
xor
lea
into
pop
mov
dec
sbb
mov
and
scas
mov
testl
aas
ljmp
mov
popf
sahf
pushf
bound
xchg
pop
mov
fcomp
inc
or
mov
pop
jecxz
ret
sub
jns
rol
fmulp
orl
repnz
ret
clc
orb
cmpsl
cmpsb
fldenv
push
dec
insl
testb
shll
popa
mov
lods
or
std
aam
xchg
addr16
xchg
sub
jno
xchg
and
mov
and
add
cmp
mov
popf
mov
outsl
rcll
add
pop
or
mov
in
xchg
cmp
mov
mov
outsb
leave
pop
or
cmp
outsb
bound
scas
scas
push
ret
movsl
push
mull
mov
clc
or
and
iret
clc
or
bound
pop
sbb
mov
outsb
cmp
outsl
mov
xchg
lret
and
repnz
fldln2
xchg
jg
xchg
das
shl
notb
pop
xchg
cmp
sahf
or
mov
jnp
int
in
jmp
jns
hlt
inc
dec
iret
or
cmp
ss
xor
mov
jge
inc
and
fs
ds
addr16
dec
lcall
cmpsb
insl
or
pop
fldcw
cmp
insb
imul
je
cwtl
ljmp
inc
xchg
inc
int
in
addr16
movsl
inc
and
xor
data16
cmp
sub
imul
xchg
pop
sti
scas
jo
sti
push
sub
aad
fneni(8087
loope
pop
arpl
fcomps
es
imul
add
leave
nop
lahf
pop
push
cmp
jmp
lock
repz
xchg
ss
rcrl
cmp
test
push
mov
jno
push
out
test
sub
out
adc
mov
daa
das
dec
mov
and
dec
xor
cld
data16
or
mov
lahf
es
mov
push
add
cmpsl
sbb
dec
dec
push
dec
add
ja
mov
push
icebp
inc
repz
stos
pop
scas
fiadds
data16
pop
lea
and
nop
sti
cmp
in
mov
jno
addr16
mov
leave
pop
mov
clc
push
shrl
and
mov
inc
imul
mov
dec
push
lods
mov
jmp
enter
sub
cli
push
cwtl
cmp
mov
imul
cmp
call
incl
loopne
fcmove
mov
jb
mov
popa
and
push
aas
insb
sub
jo
cmp
jp
xchg
lods
sbb
loope
or
loopne
push
push
push
push
jecxz
and
aam
rcll
sub
js
mov
sub
sahf
les
stc
fiaddl
xor
push
mov
adc
push
leave
cs
fstpt
sbb
inc
mov
repz
sub
cmp
popf
mov
adc
fnstcw
and
mov
aam
jbe
cld
jo
xor
out
neg
mov
push
xor
mov
mov
push
sbb
popa
test
xor
stos
push
fbstp
mov
pop
scas
gs
push
aaa
ljmp
test
call
lcall
dec
xchg
rcrb
ret
jmp
into
ss
insl
lret
push
into
loopne
idivl
fisttpll
addr16
cmp
ret
movsb
push
leave
push
mov
in
mov
xchg
arpl
test
test
mov
fisubl
mov
xor
lods
in
insb
adc
jns
xchg
das
addb
sub
inc
cmp
jnp
pop
cmp
ljmp
fiadds
pop
jb
imul
jns
aam
outsb
inc
add
xchg
orl
sbb
mov
insb
jl
sub
mov
stc
in
cli
push
dec
xlat
std
and
mov
scas
pusha
lods
adc
jae
cmp
ja
lcall
xchg
xchg
pop
mov
xchg
loop
xchg
les
mov
dec
lret
imul
push
cld
movsl
in
cld
ja
ljmp
inc
test
shll
xor
xlat
jns
mov
and
inc
push
dec
sub
mov
pop
xchg
stos
xchg
ljmp
sbb
add
ret
or
lret
subl
das
test
test
and
jae
xchg
out
jno
sar
ja
push
adc
test
pop
repz
mov
dec
cmpsl
in
packuswb
push
es
sahf
push
fisttpll
mov
ds
fadds
fcompl
orl
fmuls
push
mov
cmpb
and
xchg
jno
dec
cmp
xchg
fwait
sbb
scas
aam
mov
faddp
imul
imul
imul
aas
je
mov
call
sub
aad
dec
cmpsl
mov
push
mov
repz
or
fcmove
shl
pop
lea
pop
jle
stc
mov
xor
imul
aad
cmpb
loopne
sbb
dec
push
lds
lea
lods
insb
add
scas
mov
and
and
lahf
mov
xor
xchg
popf
int3
or
inc
ret
out
aaa
push
aas
icebp
ret
insl
pop
js
xor
jae
inc
pop
shlb
mov
jno
out
pop
mov
dec
add
loope
lcall
mov
or
in
dec
ss
xor
sub
call
mov
pusha
push
leave
sbb
enter
icebp
daa
sub
outsb
and
or
pop
aaa
lods
pop
push
das
pop
jno
xor
mov
les
add
es
adc
insb
and
fwait
xchg
push
cmp
imul
xlat
idivl
sub
int3
dec
stos
cltd
stos
sahf
ret
pop
dec
stc
jp
scas
pop
lods
imul
popf
sbb
cld
and
push
inc
scas
int3
mov
sub
mul
outsb
les
pop
mov
xorl
jae
insb
or
xor
jns
push
add
inc
push
jg
push
and
test
repnz
jno
jnp
popa
cmc
sarb
mov
xchg
mov
aad
hlt
cmp
in
shlb
add
xor
jle
mov
add
jo
sub
lcall
aam
int
ljmp
leave
mov
jl
sahf
pop
xchg
inc
or
fstp
cli
movsb
stos
fistpll
cmp
lea
popf
mov
dec
mov
fcmovu
negl
xchg
sub
mov
mov
inc
add
pop
cmp
lods
inc
xchg
loop
sub
sarb
stc
fucomp
ret
mov
lods
test
ret
xchg
sbb
pop
add
xchg
push
mov
gs
xchg
int3
lods
jo
imul
mov
xor
sbb
test
sub
xchg
or
out
out
pushf
xchg
je
shr
imull
jae
jns
mov
push
mov
add
sbb
lock
mov
mov
je
inc
sbb
call
mov
cld
adc
arpl
scas
dec
push
dec
jg
add
dec
sbb
in
mov
xor
jo
jne
notl
jno
mov
aad
inc
daa
das
cmp
cli
jge
mov
int3
lcall
mov
adc
mov
test
mov
mov
xor
fwait
push
loope
in
paddw
jbe
icebp
test
iret
loopne
pop
jae
mov
xchg
xor
das
in
xor
stos
inc
das
jns,pt
cmp
cld
lods
ja
cmc
loopne
adcb
add
jmp
lret
stc
mov
insl
adc
sub
jne
xchg
mov
imul
outsb
fisubs
add
xor
out
mov
dec
enter
scas
sub
movsb
movsl
jle
sbb
jge
adc
das
jo
scas
nop
icebp
mov
sbb
mov
xchg
mov
sahf
pop
lods
gs
les
pop
shll
mov
xchg
pushf
nop
and
pop
inc
lock
pop
ret
inc
in
fistpl
jle
outsl
in
adc
xchg
xchg
adc
inc
movb
adc
xchg
mov
sahf
dec
fcompl
xchg
push
into
fcomps
sub
sbb
dec
dec
aad
mov
rolb
pop
les
test
cltd
test
push
inc
sub
and
in
or
push
cmpsl
push
mov
test
sub
inc
cmpsb
rol
test
sbb
jmp
inc
sub
out
push
nop
lods
xchg
out
fucomp
push
in
in
insl
cmp
sahf
inc
cmp
xchg
repnz
shrl
scas
adc
sarl
rcr
mov
out
jle
out
pushl
shll
cmpsl
pop
cmp
jl
jnp
in
mov
mov
imul
shlb
mov
sub
add
or
pop
or
xchg
adc
inc
fistps
fistpll
pop
test
adc
mov
or
sbb
xor
idivb
lahf
inc
and
jne
pop
cmpl
sbb
cmp
cmp
inc
sub
mov
das
fiaddl
push
sub
popa
movsb
jns
dec
test
lret
ret
cld
push
push
xor
popl
cld
push
les
std
movsl
in
mov
push
in
adc
dec
jno
xchg
in
popf
mov
ficoml
and
cmpsl
mov
inc
aam
and
sbb
cwtl
ljmp
mov
sub
inc
push
mov
xlat
mov
cmpb
out
gs
cmp
push
cmp
push
push
jae
add
popa
pop
add
push
inc
in
xor
adc
inc
idivl
jmp
and
xor
cmpsl
dec
inc
jp
cmp
daa
nop
loopne
xor
aad
push
outsl
sti
push
into
sbb
xchg
roll
cmpsb
adc
les
and
sub
push
inc
push
test
push
adc
stc
mov
pop
sub
inc
lock
divl
adc
mov
inc
ret
mov
pop
iret
test
or
add
call
cmp
jp
stos
adc
neg
xchg
xor
jo
sub
in
inc
cmp
lcall
lret
push
mov
pop
jmp
fstps
gs
subb
pop
jb
jl
jge
push
pushf
mov
inc
dec
and
shlb
filds
stos
cmp
pop
cld
mov
adc
andb
and
mov
test
cmp
jmp
and
fsubr
je
arpl
pop
mov
out
dec
xor
pusha
loope
mov
cmp
xchg
push
mov
shrb
loop
mov
jle
dec
outsb
into
push
fisttpll
pop
clc
cmp
shlb
sahf
fisttps
push
jno
jne
in
sti
adc
dec
roll
adc
adc
push
mov
fstpt
cwtl
push
lods
pop
xor
cwtl
xchg
loop
mov
mov
outsb
xor
fisubs
add
lods
mov
lea
lds
adc
pop
ds
jbe
jne
xor
addr16
push
sub
add
mov
nop
push
dec
cltd
int
mov
gs
jnp
popa
test
mov
cmp
out
sub
fisttpl
mov
scas
lret
popf
sbb
push
cmp
out
mov
loope
shrb
xchg
jg
popa
adc
ficompl
push
out
and
or
addr16
or
cmc
mov
and
pop
arpl
add
mov
jl
imulb
xor
frstor
mov
mov
inc
adc
shlb
popa
push
cld
mov
mov
aaa
scas
xor
popa
add
jbe
jno
add
inc
add
or
add
inc
add
adc
add
inc
add
add
jmp
xchg
add
shlb
add
dec
out
imul
jnp
pushf
clc
push
je
test
adc
popl
sub
in
push
add
pop
inc
lds
out
jnp
lds
push
insl
popf
insb
jge
jp
lods
scas
cmc
dec
addr16
xchg
popa
imul
xchg
stos
xlat
pop
popf
lods
pop
les
mov
or
sbb
mov
lock
pop
int3
inc
add
jecxz
dec
sarl
pop
dec
jp
jo
sti
dec
push
notl
je
mov
aam
movsl
enter
xlat
dec
sub
and
pusha
and
test
xchg
ljmp
mov
or
sarl
enter
mov
jbe
out
add
mov
mov
cli
outsl
push
insl
lcall
bound
adc
fidivl
test
add
mov
mov
xchg
outsl
jp
dec
dec
jne
xchg
inc
ljmp
fs
sub
dec
dec
inc
loopne
cmp
gs
mov
outsl
in
or
mov
xchg
lods
ljmp
cmpsb
lds
pop
and
mov
rorb
pop
xorl
lret
xor
mov
repz
push
adc
adc
dec
sub
mov
xchg
sbb
into
xor
ret
push
pusha
rolb
mov
bnd
ss
and
xchg
lods
rclb
out
cmp
in
mov
push
mov
arpl
loope
in
imul
negb
outsl
mov
pushf
and
sahf
cwtl
lods
int3
xchg
je
scas
lods
idivl
push
mov
mov
insl
shrb
cmc
lcall
xchg
lock
sub
sub
jmp
xchg
loope
repnz
jbe
repnz
in
cmp
mov
xor
movsl
jecxz
or
mov
sub
xor
lods
fsubrs
shrl
cmp
cli
push
jecxz
inc
idivb
mov
sub
movsl
dec
lods
push
hlt
push
pop
in
add
mov
dec
push
pop
lret
xor
and
pop
in
adc
and
push
and
sbb
jp
push
ljmp
daa
ja
cli
inc
xchg
repz
mov
mov
and
mov
and
stc
and
mov
mov
sbb
ret
sub
in
movhps
xchg
jne
add
popa
inc
into
mov
xlat
ja
out
int
sub
mov
outsl
adc
xor
add
xchg
fnstsw
mov
push
and
adc
ret
aaa
jle
mov
or
xor
int3
or
push
rolb
arpl
addr16
mov
mov
das
mov
sub
jb
mov
add
sbb
pop
imul
sahf
repnz
or
in
scas
lret
lock
xchg
push
daa
addl
xchg
dec
push
xchg
sbb
inc
in
lret
add
lods
in
in
or
mov
push
aas
jl
insl
scas
push
and
fs
pop
pop
lods
xchg
jo
data16
loop
loop
push
or
out
gs
jmp
xchg
mov
jmp
jo
mov
or
lods
sbb
lods
fwait
push
sub
repz
mov
aam
mov
out
lret
movsb
pop
mov
aaa
test
adc
fildll
add
mov
fisubrs
rcll
imul
cs
jo
adc
cmp
jle
sub
mov
pusha
loopne
push
cmp
ljmp
inc
lcall
cwtl
dec
hlt
sahf
ror
mov
mov
xchg
insl
data16
loope
xchg
int3
out
push
loop
and
mov
pop
xor
pop
xor
jg
std
hlt
jbe
cmp
movsb
mov
scas
dec
dec
fwait
rolb
push
pop
xlat
jmp
mov
insl
pop
inc
adc
cmp
or
call
outsb
stos
inc
xor
repz
cmp
or
xor
je
add
stos
pop
dec
sahf
out
lea
rcrl
subl
push
lock
sbb
xchg
pop
je
mov
adc
lods
and
xor
mov
mov
xchg
dec
daa
mov
mov
leave
js
sbb
adc
insl
xchg
ljmp
andb
mov
mov
sbb
add
cmp
das
out
stos
and
daa
lea
jmp
aas
js
inc
mov
repnz
and
or
insl
mov
pop
push
fisubrs
mov
lahf
dec
push
sbb
cwtl
adcl
xchg
lcall
sub
push
lret
fcomps
insl
lcall
cmc
push
dec
ficomps
in
push
cmp
loope
mov
leave
xchg
nop
fucomip
clc
in
jnp
cmp
pop
adc
pop
int
cmp
pop
cmp
xor
adc
add
js
pop
xchg
xchg
xchg
stos
cmpsb
or
push
mov
pop
cmp
jmp
dec
and
shl
xor
push
test
imul
shl
dec
aam
inc
flds
popf
out
inc
int3
add
insl
dec
in
jge
imulb
inc
jbe
sub
push
test
lret
aas
pop
xchg
inc
pop
es
ss
in
add
xchg
push
pop
ss
sar
mov
and
push
and
cmc
jne
bound
iret
jmp
xlat
mov
push
inc
mov
sti
cmc
ficompl
xchg
push
adc
cwtl
cmp
arpl
xchg
adc
adc
jo
outsb
adc
inc
lock
pusha
pop
neg
xchg
gs
and
cvtpi2ps
loopne
lcall
rcll
stos
inc
push
repnz
and
mov
xor
mov
pop
ret
fisttps
stmxcsr
xchg
mov
push
fwait
or
aad
cli
pop
mov
mov
fsub
loope
and
and
cld
mov
std
or
in
loope
add
stos
stos
adc
add
std
aad
xchg
push
push
push
add
xchg
sub
bswap
mov
popa
mov
mov
and
sbb
fidivs
xchg
inc
jns
in
mov
adc
pop
or
popf
mov
lcall
out
add
clc
call
jb
mov
jmp
mov
xor
mov
add
dec
sub
lret
cmpsb
sub
or
inc
flds
or
adc
inc
enter
jo
lods
out
jo
aad
sub
pop
loopne
pop
sbb
sub
sbb
addr16
shl
and
call
movsl
cmp
pusha
mov
add
mov
sbb
stos
fstpl
jp
pop
scas
cmp
push
xchg
xchg
lea
adc
cmp
sub
dec
js
fidivrl
jae
xor
xor
xchg
aam
xchg
imul
test
xor
adc
inc
mov
fst
rorl
pushf
mov
sub
jmp
aaa
xor
mov
outsl
dec
dec
add
mov
inc
jmp
mov
loope
loope
cmpsb
lock
jbe
inc
addb
xchg
mov
mov
cmp
pushf
pop
xor
cmpxchg
lcall
rorb
stos
mov
adc
out
push
inc
repz
xlat
nop
xchg
shrl
pop
dec
arpl
stos
add
gs
out
out
and
dec
cli
loopne
fadds
mov
adcb
jle
stos
out
cwtl
sub
int
insb
clc
jl
cld
popa
scas
movsl
or
scas
mov
xchg
stos
xor
sbb
and
ret
in
dec
stc
in
xor
lea
popa
out
jae
daa
ja
insl
push
loope
cmp
mov
fildl
icebp
es
jp
in
pop
pop
pushf
adc
xchg
shrb
pop
pop
jns
pushf
lret
or
inc
and
dec
pop
rorb
test
jb
mov
cmp
test
xlat
dec
cmpsb
mov
mov
ja
in
insl
fsts
mov
insb
push
aam
mov
nop
cmp
lods
mov
mov
call
ret
adc
aam
pop
push
jle
in
lds
push
push
scas
ds
push
and
bound
adc
je
das
cmpl
in
cmp
pop
mov
das
insl
mov
out
mov
dec
cmpsl
inc
imul
in
push
mov
movntq
out
cmpsl
int3
mov
lahf
and
mov
repz
rorl
pop
ret
fdiv
mov
mov
cs
and
mov
cmp
repnz
xor
xchg
xor
pop
jns
daa
shl
dec
rorb
dec
sbb
insl
cmp
xor
sub
sti
xorl
xor
sbb
jb
lods
push
xchg
cmp
lods
adc
adc
push
sbb
aam
xor
adc
iret
mov
fsubp
imul
iret
jno
push
mov
mov
adc
inc
push
mov
rcrb
xor
jno
in
mov
js
jno
mov
fildl
js
daa
inc
popa
mov
out
mov
incb
iret
outsl
or
push
mov
or
out
mov
loope
adc
aad
xchg
lahf
jae
inc
xor
es
pop
sub
shrb
out
jg
inc
aas
or
jne
clc
xchg
je
jmp
loop
or
arpl
or
popa
sti
push
pop
cli
sub
je
push
mov
mov
inc
jo
lret
lret
test
pop
xor
cmpsb
aas
jae
xchg
mov
stc
push
inc
or
inc
or
daa
xchg
jge
aas
mov
loop
pop
adc
pop
adc
cwtl
test
call
cltd
fbld
ja
sub
cmp
xlat
pop
inc
mov
lret
cwtl
mov
and
repnz
xorl
xor
push
movsb
dec
movsb
mov
popf
xchg
jl
jmp
push
xor
or
daa
xor
jmp
cmp
lods
cmp
push
push
jl
mov
dec
push
fildl
subb
in
test
out
or
xor
xchg
sar
pop
lods
dec
and
shlb
mov
add
pusha
jle
adc
arpl
ja
sub
xlat
inc
lcall
imul
lock
scas
xlat
push
loop
out
lock
test
jnp
sbb
cwtl
rol
add
bound
pusha
imul
clc
mov
out
loope
push
xchg
push
rol
rorl
stc
jp,pn
fisttpl
ja
sub
jle
fs
shll
sti
sarb
lret
or
stos
cld
out
stos
cmp
scas
scas
cmc
ret
lock
and
dec
jnp
inc
insb
ds
mov
scas
fmull
adc
jg
loope
out
cwtl
pop
out
imul
pushf
jno
fcoms
mov
xor
sbb
and
push
jb
outsb
and
mov
ss
xor
imul
out
push
xorb
push
lds
scas
repnz
inc
addr16
pusha
jle
xchg
sbb
xchg
dec
cmp
imul
lds
pop
jbe
and
xor
xchg
push
lret
je,pt
in
cmp
sarb
sub
rolb
mov
sbb
pop
adc
xlat
pop
push
outsb
cmpb
xlat
xchg
mov
cli
xor
test
push
cmp
test
add
mov
std
xchg
cmpsl
mov
lods
dec
adc
shl
mov
push
pushf
fwait
lahf
jo
mov
ficomps
mov
sbb
addr16
sub
sti
dec
and
cld
xor
push
mov
pop
mov
icebp
test
lea
sahf
jmp
push
leave
mov
mov
leave
test
push
inc
mov
repz
adc
mov
push
dec
mov
loopne
ljmp
rcrb
mov
enter
in
fs
lcall
xor
stos
dec
push
sbb
icebp
test
and
pop
adc
jb
in
insl
dec
jecxz
ljmp
mov
movsb
jl
in
sub
mov
movsb
add
outsl
repnz
dec
mov
insb
std
cld
cld
cmpsb
loop
pop
jbe
push
pop
push
aas
lods
mov
xor
push
mov
adc
sahf
fsubrl
inc
sbb
jns
jle
mov
sub
xchg
jae
adc
mov
in
out
mov
cmp
lret
and
idivl
or
scas
sbb
jb
adc
sarl
outsb
jmp
adc
ljmp
inc
test
inc
sbb
shll
cmp
jae
outsb
shrb
cmp
test
jns
lock
xor
imull
and
or
jle
ror
pushw
add
xchg
or
ljmp
fs
mov
and
push
popa
inc
sub
or
cmp
loope
pop
mov
mov
ffree
or
test
outsb
xchg
jmp
les
cmp
mov
pusha
inc
sub
adc
add
loop
leave
loope
xlat
rcrb
test
int3
dec
jecxz
ret
addr16
lea
loopne
out
pusha
inc
fidivrs
neg
stos
andps
pop
rclb
push
jecxz
scas
ja
jb
mov
mov
fsubrs
arpl
test
inc
daa
pop
call
pop
in
push
fiadds
add
pop
cmpsb
jo
ljmp
fcomps
push
shr
popf
rolb
or
fs
leave
icebp
call
jl
jbe
popf
mov
adcb
hlt
mov
idivb
bnd
xor
inc
loopne
sub
bound
push
inc
fisubs
mov
jb
sti
shll
lods
cmp
fs
cmp
push
cmp
sub
clc
mov
xor
dec
push
es
aad
mov
mov
loop
xchg
adc
out
or
jbe
inc
push
and
jmp
lahf
sub
jmp
out
stos
mov
cmp
or
int3
iret
xchg
cwtl
lods
pushw
cmc
xchg
jecxz
push
pop
mov
lcall
cmpsb
mov
add
iret
scas
cmp
iret
iret
outsb
loop
jno
cmp
adc
adc
sbb
xorl
cmp
xchg
stc
shl
scas
push
and
add
xor
push
dec
rorb
sub
cld
movsl
mov
dec
iret
imul
push
fstl
mov
push
divl
test
cltd
adc
pop
iret
push
in
mov
iret
das
and
and
jb
insl
bound
mov
mov
adc
sbb
add
jl
inc
cmp
cs
lods
in
mov
lret
rcll
push
sbb
shlb
jnp
mov
loop
cmp
lret
cmp
aad
sti
mov
jl
or
dec
or
dec
repz
mov
dec
adc
cmp
pop
sbb
xchg
enter
lret
rcrl
cmpsb
scas
cmc
push
int3
popf
loop
jns
or
cld
or
dec
mov
adc
inc
ss
sbb
and
rcrl
clc
rcll
push
adc
add
pushf
adc
cmc
sub
lret
aad
pusha
cld
icebp
aam
inc
xor
fs
dec
cmp
arpl
gs
enter
cmp
enter
into
and
xchg
xchg
mov
loopne
jne
adc
ret
call
sbb
cmpsb
jne
pop
jae
mov
into
in
or
mov
scas
mov
xchg
mov
pop
lret
icebp
aad
sub
aam
dec
scas
imul
lea
hlt
test
mov
popa
dec
out
loope
loopne
insb
push
push
pop
mov
shll
xlat
mov
lods
xor
and
inc
cmpsl
int3
ret
ret
frstor
mov
movsl
push
mov
hlt
xchg
mov
sarl
jnp
adc
add
aas
mov
sub
xchg
pusha
mov
jmp
inc
and
daa
sbb
cmp
xchg
lret
lret
mov
mov
push
lock
jbe
addr16
add
repnz
je
add
imul
fldenv
fists
sbb
pop
push
fs
lds
jg
sbb
inc
jecxz
repnz
pop
xor
ret
dec
out
scas
sub
lods
xchg
gs
inc
data16
arpl
jo
out
xchg
daa
jo
lods
cmp
inc
or
adc
pop
lret
jb
dec
jns
bound
sbb
pushf
mov
pusha
adc
inc
cmp
push
xchg
test
xlat
xchg
aaa
sti
push
mov
clc
insl
aaa
inc
pop
add
inc
mov
adc
or
repnz
sbb
pop
dec
push
jecxz
or
mov
rol
push
cmp
adc
das
loopne
ret
lods
or
outsb
jns
mov
xchg
xchg
and
pop
mov
movsb
popa
xor
xchg
and
inc
xorl
sub
cmc
iret
xor
jecxz
lea
mov
xchg
adc
push
add
loop
inc
cwtl
mov
jnp
mov
mov
cli
dec
ret
sti
ljmp
rcl
xor
cmp
or
test
scas
push
stos
dec
or
pushf
xchg
cmpsl
mov
cmpsl
lret
lcall
xchg
add
sub
lock
xchg
cwtl
sti
test
cmp
mov
pop
ja
pushf
xor
push
xor
das
fs
and
jmp
mov
mov
test
mov
sub
fst
subl
inc
movl
jl
xor
pop
jp
inc
shlb
loope
lock
xchg
add
sbb
or
pop
cs
inc
out
repnz
adcb
lahf
mov
loope
addr16
ret
je
push
pop
mov
xchg
sbb
sub
xorl
add
loop
imul
pop
mov
ret
xchg
jecxz
dec
push
outsl
and
jno
dec
fwait
mov
jg
outsl
cld
aas
sti
push
in
scas
pop
inc
pushf
mov
cmp
hlt
rolb
inc
loop
enter
mov
xorl
hlt
mov
out
int3
stos
jmp
or
cmp
cmpsb
sti
loopne
hlt
rorl
notb
jno
dec
add
scas
mov
call
out
int
add
movsl
pop
xchg
shr
fisubs
sbb
inc
pushf
js
sbb
data16
jns
int3
std
sahf
jnp
fs
sbb
adc
jns
scas
dec
sub
sub
pop
pop
pop
paddsw
xchg
mov
clc
or
sbb
dec
jge
fcom
add
test
ret
mov
mov
mov
mov
aam
cwtl
fwait
inc
fildll
out
and
mov
jmp
xchg
jns
and
sahf
push
xchg
imul
rcl
repnz
xchg
sub
sbb
jg
xor
mov
push
cmp
loopne
std
add
cltd
cltd
cmpl
sub
insl
rorl
pop
mov
fistpl
fisttpll
mov
mov
sub
and
jns
or
xchg
xchg
cmp
mov
cmp
mov
inc
cmp
or
xchg
pop
pop
mov
sar
scas
pcmpeqw
aad
rorb
adc
das
and
call
inc
cld
add
xchg
pop
sub
mov
fidivs
xlat
loope
stc
iret
and
repnz
cwtl
and
lcall
pop
mov
jo
mov
je
out
aaa
shrl
xor
xchg
jo
cmp
dec
in
fs
ret
fs
cld
adc
fbstp
loopne
sub
popf
or
and
cmp
ljmp
jmp
push
adc
push
lods
jns
cmp
mov
xor
inc
mov
or
push
add
pop
aaa
in
add
push
loop
push
xchg
lret
and
sub
jle
ja
sub
and
cmp
nop
rclb
insb
mov
sbb
or
push
outsb
ficoml
ss
sbb
sub
jp
push
pop
add
mov
pop
cmc
jns
in
fcoms
out
cmc
lods
lahf
push
cmp
loope
push
push
lods
aam
mov
pop
test
xchg
hlt
push
cmpsb
dec
xchg
or
adc
out
shlb
xchg
sub
dec
out
inc
movsb
out
xchg
jg
push
jmp
popf
aas
sti
fdivrp
xor
lahf
ljmp
scas
inc
scas
nop
and
jp
push
iret
dec
dec
add
push
test
inc
jp
test
ljmp
fadd
or
imul
aaa
pop
mov
jo
jbe
popa
les
test
in
pcmpgtd
imul
adc
inc
sahf
rcll
ret
inc
mov
mov
cld
insb
das
push
jns
push
testb
add
mov
frstor
testb
jmp
jmp
jl
mov
sarb
scas
add
rcrl
jbe
mov
ret
jbe
inc
sete
insb
data16
add
xchg
sub
xchg
and
adc
out
test
jo
in
sub
ds
cmpsb
in
movsl
or
mov
push
mov
inc
or
movsb
mov
and
inc
mov
dec
in
jnp
or
xor
fcomps
hlt
sbb
and
push
mov
dec
mov
lods
ja
outsl
sub
scas
inc
das
jne
es
ss
add
push
out
inc
mov
xor
ja
mov
mov
push
or
loopne
in
lods
int
pop
ds
and
jp
mov
pop
scas
pop
pop
int3
aad
pop
int
adc
adc
nop
dec
add
pusha
ffreep
loopne
int3
xchg
pop
jo
icebp
push
aad
adc
movb
addr16
jo
jno
fstpl
fs
das
arpl
push
cmp
xor
mov
loop
add
or
xchg
mov
push
mov
push
jge
add
push
push
rolb
cmp
pop
inc
and
sbb
jno
xchg
imul
and
loopne
pop
dec
xor
aam
push
js
loopne
stos
jl
les
sar
bswap
hlt
pop
mov
negl
lahf
push
xchg
out
lahf
ret
sbb
jp
mov
xor
dec
mov
clc
ljmp
test
mov
xchg
xor
dec
jge
ds
negl
les
push
in
imul
fldenv
jp
ljmp
in
mov
popa
cmp
clc
imul
xor
xchg
out
stos
xchg
cmp
cmpsb
push
incl
in
stos
loop
xchg
inc
aam
in
and
cmpsb
cs
testb
xor
rcrb
mov
sbb
push
rcll
mov
in
xchg
dec
jge
mov
pop
mov
pop
insb
movsb
fnstsw
je
cwtl
ja
insb
jmp
addr16
ds
mov
pop
push
out
fistps
hlt
push
lret
pop
cmpsb
mov
cmp
adc
sbb
add
adc
das
push
dec
inc
aas
mov
and
pop
xchg
pusha
sbb
xor
xor
jnp
lods
or
out
rolb
jno
lret
xchg
out
xchg
xchg
mov
pusha
fadd
mov
sub
xchg
or
mov
rolb
sbb
call
cmpl
cmp
dec
pop
in
ret
cmpsb
mov
push
mov
mov
icebp
out
out
icebp
push
or
sub
pop
je
cmp
lods
cli
test
out
fwait
icebp
movsb
int3
in
repz
jecxz
and
out
filds
bound
and
clc
dec
mov
sbb
mov
test
clc
scas
pop
adc
pop
cmc
mov
incb
jecxz
clc
push
or
mov
out
addr16
outsl
imul
filds
paddusb
sbb
rclb
out
nop
mov
lahf
lea
das
sbb
mov
gs
mov
aad
shl
sbb
mov
add
insb
add
lcall
call
stos
fiadds
mov
xchg
pop
cmp
stos
dec
xchg
sub
cld
add
test
and
icebp
add
inc
cmp
adc
test
sub
dec
xchg
push
int
out
subb
icebp
pop
and
stos
push
dec
std
jg
push
movsb
xor
jo
rcrl
in
xor
mov
movsb
iret
dec
adc
jns
push
icebp
push
popf
pop
push
add
xor
mov
outsl
aas
data16
stos
or
enter
cmpsl
cmp
mov
fs
enter
jae
fsts
dec
int
push
sub
push
sbb
cmpsl
adc
lds
cmp
sbb
ret
icebp
xchg
movsb
dec
std
inc
dec
imul
mov
cltd
push
enter
ja
cs
mov
jnp
out
push
in
cmp
aas
mov
pop
pop
shll
shrl
push
xchg
jno
and
push
sub
jecxz
outsb
mov
cmpsl
ror
inc
cmpsb
jnp
inc
out
mov
icebp
hlt
lret
shrb
rcrb
loop
fcom
shrl
sarb
addr16
jne
leave
shll
sbb
cmp
jl
adc
scas
popf
ss
ljmp
cld
mov
aam
xchg
jge
add
jl
scas
or
jge
cli
pop
rcll
mov
xchg
ret
ds
mov
ss
jmp
jbe
inc
mov
xor
sub
pop
xor
mov
fidivrs
jle,pn
pop
leave
icebp
mov
jo
lcall
jge
insb
dec
mov
mov
fwait
mov
sbb
adc
std
lods
adc
fwait
mov
dec
pop
lea
out
pop
mov
and
sub
ja
out
arpl
sbb
ret
sub
xor
fldcw
test
push
xchg
sub
mov
pop
notl
xchg
movsb
pop
xor
popf
xor
loope
fnstenv
popa
or
mov
xorb
fcoms
test
jmp
into
jo
push
adc
lret
jecxz
sbb
jnp
xor
in
popf
loope
sbb
push
mov
loopne
clc
ss
mov
sbb
outsl
mov
push
xchg
xor
loop
cmc
lret
dec
jb
mov
adc
cld
in
icebp
loopne
pusha
dec
icebp
lds
outsb
jns
push
add
push
xor
mov
lret
mov
call
nop
jbe
adc
cmpsb
sub
jmp
nop
add
adc
shl
ret
fcomip
xchg
adc
mov
xor
fwait
es
mov
aam
sbb
pop
push
cmp
je
enter
dec
push
add
addr16
push
fisubs
push
mov
loop
sbb
sbb
insl
cmp
hlt
out
add
adc
or
mov
pop
mov
or
scas
mov
daa
rolb
cmp
and
push
in
inc
cmpl
ret
fcmovnbe
mov
add
test
add
mov
sbb
cmc
je
cli
sub
adc
mov
xor
pop
popf
add
cmp
pop
mov
mov
xchg
sti
sti
xchg
jecxz
ja
push
test
jge
adc
stc
pusha
push
movsb
cmp
lods
xchg
test
or
in
ds
movsl
aas
lds
in
push
addr16
cmp
jg
popf
je
fnstenv
shlb
push
mov
call
in
push
dec
nop
bound
mov
js
inc
int3
aaa
pop
adcl
daa
sbb
add
xchg
addr16
fcompl
jns
into
pusha
pop
push
iret
rorb
and
mov
push
jle
in
xor
pop
outsb
and
inc
inc
adc
dec
addr16
movsl
pushf
movsb
outsb
sub
and
push
popa
sti
shlb
or
add
mov
imul
mov
cltd
imul
mov
sbb
pop
std
orb
sti
gs
addr16
inc
pop
cmp
or
sub
mov
or
pop
mov
pop
xchg
in
push
adcb
sbb
sbb
stc
mov
inc
push
sbb
or
and
jl
int3
push
jae
add
lret
bswap
xchg
xchg
sbbl
and
xchg
push
fwait
lods
add
pop
xor
ret
mov
jae
sub
into
fld1
js
aam
icebp
fwait
sbb
idivl
inc
aad
push
daa
iret
js
and
cmp
cltd
adc
shrl
mov
out
cmc
dec
xlat
daa
lods
imul
jbe
add
sub
or
cmp
std
xlat
sbb
cmp
imul
gs
shrb
mov
adc
mov
ret
aam
inc
inc
push
or
into
negl
mov
push
jns
fs
or
call
inc
fadds
subl
add
push
cmpb
aaa
cmp
jbe
xor
mov
dec
mov
adc
fs
add
pusha
rorb
jno
cmpb
fstps
clc
or
mov
mov
popa
dec
dec
testb
dec
test
jno
xorl
sub
les
in
fnstenv
inc
jmp
dec
dec
fwait
leave
aam
mov
xchg
cmc
mov
insb
add
inc
inc
jmp
das
push
lods
inc
mov
jns
inc
fwait
out
mov
rolb
mov
bound
orl
inc
lock
sbb
stos
push
mov
or
inc
pop
add
pusha
aas
push
lods
out
in
clc
jmp
mov
inc
lret
mov
test
jbe
aas
out
imul
inc
xchg
jnp
sbb
loope,pn
ficompl
push
jp
lret
int3
test
or
xchg
test
sti
push
and
jg
into
das
cltd
adc
imul
add
out
or
movsb
gs
inc
adc
enter
jne
and
lret
sub
stos
scas
adc
stos
incb
cmp
push
add
jmp
dec
adc
jecxz
inc
cltd
fcoml
in
add
add
aam
stc
jnp
in
leave
call
frstor
inc
push
push
loop
idiv
pop
cmp
mov
mov
jne
dec
aad
lret
mov
mov
mov
cli
jo
fisttpl
mov
sbb
inc
push
adc
add
test
pop
pop
shr
fs
inc
js
inc
inc
inc
xchg
sub
test
repz
or
adc
push
or
es
xchg
sbb
lcall
xor
mov
cmp
push
adc
inc
ljmp
rolb
cs
loop
pop
aaa
lret
push
mov
scas
xchg
imul
xchg
lds
jo
and
sbb
std
mov
jbe
dec
mov
loopne
mov
int3
pop
and
mov
jne
adc
jb
test
addr16
iret
movb
testb
sbb
sub
xor
in
test
pop
xlat
xchg
scas
cmp
cmp
pop
lds
cmp
imul
bound
les
dec
fdivrs
stc
xchg
mov
and
or
scas
cwtl
mov
sub
mov
sub
rorb
in
mov
out
cmpsb
mov
leave
les
mov
mov
das
xchg
pop
repnz
test
test
mov
sbb
jg
popa
out
inc
pop
testl
sarl
sbb
loop
adc
mov
repnz
imul
sahf
adc
ret
cltd
jge
jbe
lret
mov
dec
add
mov
sahf
lods
cld
jle
lahf
js
add
add
in
test
adc
mov
pop
test
dec
jo
xchg
mov
mov
outsb
hlt
repz
addl
mov
sahf
jo
xorl
hlt
mov
mov
jnp
data16
or
xchg
cmp
pop
cmp
jmp
or
sub
int
stc
add
cli
adc
fwait
jg
xchg
cmpsb
xchg
ja
inc
xor
andb
jne
jg
push
and
imul
xor
jae
roll
rorl
and
cmpsb
mov
pushf
jmp
leave
repnz
mov
popf
mov
out
push
jae
leave
inc
call
mov
in
xor
out
mov
insl
mov
rorb
push
outsb
aaa
movsb
loopne
arpl
jb
fdivp
test
inc
sbb
sti
lock
xlat
cmp
mov
mov
pop
in
mov
popa
cltd
cs
popf
roll
push
aad
aam
inc
cmpl
imul
in
pop
cmc
or
pop
pop
popa
mov
in
out
je
push
mov
shrb
jge
mov
sahf
es
push
sti
push
mov
mov
and
shrl
clc
sub
hlt
leave
jle
sub
scas
cmpsl
lret
and
mov
loopne
insb
dec
pop
shll
xorb
repz
dec
jl
daa
cmp
test
ds
lods
pop
js
mov
sub
mov
ret
adc
push
cmp
mul
mov
iret
insl
and
js
inc
cmp
insb
pushl
ds
mov
ret
dec
ds
jo
je
sub
inc
rorb
xchg
mov
mov
pop
pop
sub
xlat
mov
ret
test
stos
fdivrl
sub
mov
and
lret
arpl
push
scas
push
jbe
pop
popa
fisubrl
arpl
push
in
mov
push
pop
outsl
xor
sub
jo
ja
cmp
jecxz
ret
xor
lcall
add
xor
xchg
in
outsl
or
fstl
in
jnp
cli
incl
and
push
mov
fcompl
xchg
mov
dec
adc
jge
je
mov
in
inc
cmp
jnp
mov
inc
mov
leave
mov
inc
cmp
cs
lret
jmp
pop
or
test
inc
and
adc
jae
mov
addb
xchg
call
sub
faddl
in
jbe
xchg
xchg
and
pop
iret
push
pop
lcall
sti
sub
xchg
adcl
xor
dec
add
and
cmpsl
es
and
xchg
subl
push
imul
jmp
pop
in
sub
push
xchg
push
enter
pop
xor
mov
inc
mov
lock
lret
test
or
orl
lret
pop
rclb
pop
hlt
loop
mov
leave
imul
mov
insl
rolb
test
xchg
inc
dec
call
xor
mov
jg,pn
stc
and
insb
cwtl
push
scas
jge
and
mov
in
and
jb
mov
pop
arpl
loope
xchg
xlat
loop
or
dec
cld
lods
push
push
daa
popf
ss
xchg
and
jle
jg
fs
mov
ret
fldl
pop
and
push
xor
jnp
dec
xchg
pop
mov
push
inc
mov
cmpsb
lahf
or
cmp
cmp
dec
jbe
in
inc
mov
mov
std
aas
loopne
jno
jns
popf
mov
or
adc
xlat
out
mov
movsb
shl
lret
lds
es
xorb
mov
mov
fidivl
or
xchg
enter
inc
inc
in
pop
out
das
push
jmp
sbb
inc
sbb
addr16
test
movsb
add
nop
mov
ljmp
or
xor
cmp
xor
push
push
cld
stos
ret
rol
push
xchg
cmp
jl
push
dec
mov
mov
jae
jnp
inc
sub
sub
lahf
mov
jle
and
cmp
sbb
pop
pop
sub
adc
jecxz
xchg
cmpsb
pop
lcall
jbe
cmp
clc
loopne
jb
pop
mov
jle
mov
push
xor
mov
xchg
pop
pop
rolb
insl
or
xorl
mov
and
bound
mov
jns
mov
xchg
dec
popa
loop
pop
cmpsb
leave
lods
sub
loopne
int
call
xor
inc
dec
mov
or
ja
xchg
sahf
push
cmp
or
aas
addl
scas
shrl
stc
cmc
and
leave
repz
fwait
jae
pop
mov
insb
pushf
push
cmpsl
xor
xchg
push
cmp
mov
inc
nop
cmpxchg
pop
jno
pop
decb
jmp
sbb
out
jmp
and
mov
push
sbb
cmp
je
cmp
jecxz
or
xchg
jp
and
bound
push
test
lret
inc
jns
popf
xor
pop
push
outsb
inc
inc
mov
mov
test
fsubrs
mov
out
addr16
sti
mov
xchg
pop
sbb
repz
notl
cmp
mov
adc
and
mov
lods
xchg
xor
sahf
fisubrs
inc
mov
adc
pop
hlt
push
adc
in
adc
nop
aad
mov
dec
lret
add
jns
in
int3
push
push
mov
sbb
ret
jle
scas
mov
data16
mov
insl
into
xchg
sbb
lret
les
out
int
lret
jmp
and
lock
sub
insl
lcall
mov
flds
mov
pop
mov
pop
sbb
xor
pop
shlb
dec
xor
sub
mov
mov
jnp
movsb
pop
dec
pusha
xchg
shlb
sbb
lds
pushf
mov
ss
lods
call
mov
in
hlt
aaa
int
sub
mull
push
pop
xchg
mov
shl
cmp
jge
popf
jb
enter
imul
clc
mov
pop
ret
lcall
movsl
popf
xor
shrb
jne
in
cli
subl
rcrl
scas
xchg
std
xor
mov
mov
push
mov
in
inc
adc
sub
nop
push
add
add
movsb
shlb
in
lds
jl
gs
push
outsl
or
pop
out
cld
add
inc
mov
jle
add
sub
push
pop
push
jp
mov
outsl
mov
addl
test
mov
inc
pop
hlt
dec
lods
add
dec
jb
das
pop
call
movsl
ss
pop
ja
mov
inc
inc
add
adc
cmp
and
std
pusha
or
inc
xlat
cltd
mov
push
sub
dec
outsb
fisubl
scas
mov
dec
mov
inc
fisttps
cs
out
aam
imul
lret
int
mov
xlat
pop
jbe
decb
fcoml
lock
cmpps
loop
sub
pop
mov
sbb
sbb
pop
cltd
icebp
out
clc
push
adc
lods
sbb
and
jb
inc
jae
mov
jne
cmpsb
push
push
adc
sbb
xor
cli
pushl
shlb
xor
push
push
dec
lock
push
cwtl
push
jmp
int
push
and
dec
stos
lahf
mov
jae
dec
fistpl
ja
jnp
cmp
fs
cmp
or
std
ss
enter
adc
cmpsb
dec
pop
movl
xor
cli
jl
loope
fists
or
repnz
pop
test
xor
lods
cs
fnsave
shl
jmp
test
aas
roll
testl
test
fcomps
or
mov
pop
dec
mov
inc
xchg
or
popa
inc
jecxz
push
pop
aaa
xlat
pusha
je
mov
addb
cmp
out
push
fs
xchg
stos
pop
daa
out
stos
outsl
pop
out
push
mov
lcall
add
cmp
std
fbld
imul
jnp
movsb
mov
in
push
xchg
sub
nop
cmp
gs
stos
clc
lock
ljmp
xchg
add
out
lods
pop
fnstsw
add
jae
mov
add
aaa
dec
xchg
nop
aaa
les
mov
xor
icebp
push
cwtl
xchg
xchg
or
nop
pop
icebp
sbb
xchg
cltd
ja
xchg
out
push
add
pop
loope
pop
ds
adc
push
imul
sub
cmp
push
imul
daa
sbb
fwait
jns
daa
lcall
in
and
inc
outsb
mov
pop
mov
test
aam
test
or
bound
jecxz
adc
dec
jle
jmp
out
fs
js
into
insb
fildll
insb
or
push
cmp
or
fildll
pushw
mov
and
cmpsl
mov
mov
cmc
in
je
scas
fsubs
mov
cmp
push
pop
pop
sbb
adc
mov
je
adc
clc
nop
dec
movsb
and
ror
in
iret
js
or
sarl
add
imul
add
aad
and
jmp
inc
xor
xchg
inc
adc
sub
cs
sbb
pop
stc
xor
mov
jg
xchg
inc
clc
fwait
inc
jo
ret
or
popa
jns
out
rorb
movsl
and
xor
outsl
mov
scas
inc
mov
outsb
jmp
jg
lds
inc
push
and
dec
ror
push
fs
in
out
add
out
jns
movsb
fsts
push
mov
out
mov
es
or
and
push
xor
xchg
xlat
daa
add
f2xm1
pop
data16
js
icebp
push
test
xchg
dec
mov
popf
mov
fmull
cmp
sub
fisttpll
popa
sub
in
aad
hlt
mov
jle
push
fdiv
lea
cmp
call
jp
pusha
pushf
cmc
scas
xor
xor
pop
ret
cmp
icebp
aas
jmp
test
inc
leave
push
clc
sub
pop
sbb
out
pop
out
fidivrl
jne
roll
mov
cmp
mov
or
xchg
adc
cmp
or
outsb
lods
or
pop
aaa
cmp
jo
mov
add
fbstp
orl
push
shll
xor
scas
sub
adc
movl
cmpsl
sbb
xchg
sbbl
dec
roll
rorb
push
dec
inc
pop
mov
subl
dec
xor
or
push
imul
push
dec
rcr
iret
in
lea
loopne
push
jmp
pop
testb
shll
shll
cmpsb
out
jb
sbb
rcrl
dec
insb
mov
push
pop
aas
sub
mov
int3
adc
pop
jp
sti
idivb
add
gs
lahf
test
dec
loop
iret
mov
mov
adc
int
test
sahf
and
push
push
mov
subb
arpl
je
lea
dec
xchg
and
ss
leave
lcall
push
cli
dec
inc
inc
adc
out
aad
gs
lods
jo
hlt
je
out
sub
jb
repnz
cs
cmp
inc
cmp
out
push
aas
out
in
out
ret
pop
sbb
adc
sub
pushf
cli
loope
popf
lods
mov
imul
jmp
lock
push
xchg
or
data16
cld
insl
dec
enter
push
adc
xor
or
mov
lea
cmp
rorl
ss
sub
ja
imul
push
sarl
rorb
gs
xchg
jns
jg
or
and
bound
add
js
insb
add
aaa
pusha
xchg
mov
xor
xchg
xchg
adc
bound
pop
xor
add
mov
sbb
addr16
xrelease
stos
psllw
cmpb
pusha
jb
jp
cwtl
inc
push
dec
stos
cmp
test
push
cs
cltd
lods
xor
mov
aam
push
sub
inc
dec
sub
and
mov
xlat
push
enter
out
pushf
popf
push
pop
mul
out
mov
cli
pushf
insl
outsb
dec
ficomps
dec
pop
mov
mov
fcmovnb
test
pop
popa
mov
nop
daa
movsl
dec
repnz
roll
test
jns
mov
insb
outsb
outsl
mul
orl
mov
cmp
ret
mov
fimuls
or
mov
jmp
gs
out
sarb
out
mov
push
dec
sar
jge
jge
sbbb
jp
lds
in
adc
jne
cmp
test
mov
imul
aaa
sbb
xor
push
mov
pmuludq
jae
sbb
jne
movsb
cld
jg
movsb
push
das
or
lahf
call
out
mov
mov
not
icebp
clc
jg
pop
mov
mov
mov
sub
cmpsb
inc
inc
inc
ret
lcall
xor
test
lcall
xor
xlat
rcrb
mov
jle
inc
test
dec
mov
cld
movsl
sub
pop
jae
adc
enter
jo
push
pushf
lds
sahf
mov
add
in
sbb
mov
pushf
sbb
je
mov
fcomp
inc
and
insb
rcll
sub
repz
call
outsb
mov
xchg
mov
cwtl
push
loopne
lds
das
imul
mov
mov
stc
imul
js
ds
push
bound
rorb
sub
cltd
cmpsl
push
ss
sbb
repnz
or
jb
inc
mov
pop
mov
divb
mov
daa
push
fistpl
push
fsubl
cmc
push
cwtl
pop
orl
and
xchg
shll
fildll
fsubp
in
mov
jae
movsb
xchg
add
adc
iret
jb
rcrl
test
movsl
xchg
push
cmp
fwait
dec
ds
shlb
lods
jp
hlt
adc
xchg
push
das
pop
mov
mov
fnstsw
cmp
gs
or
int3
push
dec
mov
fs
outsb
arpl
pop
loope
cmp
ljmp
sub
pop
fmul
aam
rcll
mov
cmc
push
clc
mov
cmp
sub
js
imul
iret
jg
gs
loopne
inc
inc
shlb
test
xchg
pop
mov
lds
lea
xchg
addr16
lahf
jle
orb
cmpsb
mov
sahf
pop
shl
mov
ja
or
xchg
stos
leave
cmp
jns
or
lret
cltd
mov
aaa
mov
xor
loopne
inc
imul
and
sub
inc
and
pop
mov
pop
je
jne
mov
and
jl
cs
rol
xor
mov
imul
cmpsl
sti
jne
loopne
inc
mov
popf
sbbl
add
shlb
popa
ret
and
xchg
lret
inc
std
xor
push
add
mov
in
mov
mov
fsts
stos
orb
lods
pop
mov
enter
xor
aad
gs
mov
shlb
data16
inc
cld
orb
test
movsl
aas
roll
ljmp
mov
cmc
mov
dec
test
hlt
push
imul
aad
in
mov
lret
adc
loope
xchg
cmpsl
pop
jecxz
push
icebp
pop
sbb
adc
lock
dec
aas
xchg
mov
mov
sbb
aaa
scas
lea
std
aad
cld
test
pop
sub
pop
adc
xchg
out
dec
lock
ficomps
xchg
inc
fwait
pop
pop
sub
mov
mov
imul
inc
aas
loope
push
push
enter
sub
inc
loop
mov
jo
sbb
fadd
mov
xor
mov
lret
pop
cs
in
add
cmp
popl
in
dec
shlb
fptan
and
push
adc
leave
xor
je
pop
dec
mov
push
data16
test
inc
pop
enter
dec
and
iret
loopne
divb
lcall
mov
js
jle
sahf
lret
pop
icebp
lret
jle
gs
add
push
inc
je
iret
sub
jg
and
movsl
jo
fwait
daa
and
dec
and
adc
lret
or
jno
push
dec
adc
imul
arpl
mov
xchg
scas
or
lcall
jbe
inc
pop
xchg
sbb
pop
negl
xor
loopne
rcr
lahf
mov
adc
xor
cmc
adc
lea
mov
mov
and
dec
into
aas
jmp
inc
outsl
dec
and
hlt
jle
sti
jp
rclb
push
push
fsubr
push
add
aad
movsl
adc
cmp
or
push
pop
add
sbb
repnz
or
leave
add
mull
sub
xor
inc
cli
jo
ffreep
and
mov
movsb
dec
scas
mov
xchg
adc
cmp
adc
add
lods
cmp
mov
ljmp
fwait
xor
mov
sub
push
push
jo
pop
das
cmp
arpl
xor
xorl
cli
insb
jb
in
jle
aaa
mov
popa
mov
and
sarb
xchg
mov
mov
mov
add
test
lods
popa
rorl
movsl
in
je
adc
jno
daa
out
push
xlat
movsb
pop
pop
push
push
out
xlat
ljmp
xor
cmp
adc
or
rorb
aad
scas
xchg
loope
lock
mov
mov
shrb
sub
loope
aam
adc
sub
flds
xchg
scas
push
and
mov
out
loopne
stc
rcrb
add
mov
dec
loopne
packsswb
rcl
shl
xor
push
and
mov
ss
es
fcmovne
in
lods
push
mov
cmp
call
icebp
xor
test
xchg
lret
xlat
aas
xchg
enter
sub
adc
rol
clc
cmpsb
adc
cmpsb
mov
fdivrs
inc
jg
inc
jno
std
xchg
push
push
scas
movl
xlat
pop
test
xchg
mov
sub
pop
dec
jecxz
ljmp
and
mov
sbb
adcb
pop
jne
lods
scas
data16
push
jle
sub
in
mov
imul
mov
pop
xor
leave
adc
into
sub
insb
xor
subl
imul
mov
cwtl
cmp
jecxz
jno
mov
cmpsb
inc
adc
xchg
in
incl
add
dec
int3
dec
lea
leave
cmp
xor
cmp
cwtl
popf
outsb
sub
scas
mov
sub
lea
in
hlt
aam
cs
push
test
mov
mov
jg
aad
loop
xchg
jmp
add
jmp
repz
pop
xchg
stos
daa
mov
fcmovu
iret
cmp
ja
popf
dec
sarl
adc
mov
add
sbb
sbb
mov
xchg
mov
mov
negl
mov
mov
adc
out
fchs
ds
js
jae
popa
push
or
sub
cmp
xor
sti
pop
mov
xor
and
mov
jo
gs
and
fists
shrl
jns
sub
jmp
jmp
int
adcl
xchg
ss
movsb
call
ror
fisubrl
xlat
mov
and
cs
cmp
cmp
cmp
lds
adc
cli
dec
and
ds
lock
or
and
pop
or
pop
out
out
xor
sub
test
loopne
pop
adc
sbb
movsb
push
ficompl
decb
mov
sbb
mov
mov
cld
insl
push
lods
fcoms
cld
js
inc
sbb
in
push
rcrl
cmp
mov
xor
xchg
scas
scas
jge
pop
pop
push
fiadds
das
loopne
mov
mov
mov
pop
bound
arpl
sub
arpl
imul
cmp
imul
mov
test
std
in
mov
test
rcrb
rorb
dec
adc
xor
mov
notb
sbb
inc
pop
fnstenv
or
xor
jmp
or
aad
add
ret
or
sahf
xchg
lcall
jns
bound
dec
scas
add
or
out
aaa
es
and
cli
outsb
dec
dec
sbb
in
dec
stos
adc
jg
and
aad
daa
dec
aam
fcomi
call
sti
adc
mov
popa
idivl
stos
mov
xlat
sbb
in
xor
sbb
out
pop
sub
jmp
jecxz
mov
test
sarb
mov
fstpt
and
mov
push
jae
mov
sub
enter
push
icebp
adc
fwait
shlb
mov
daa
test
mov
nop
sbb
movsl
je
mov
shl
sub
mov
xchg
dec
aaa
out
cmp
loopne
mov
lods
cmp
sbb
loope
mov
sub
jnp
repz
out
sbb
push
xchg
add
xor
jb
jg
int
shlb
hlt
pop
icebp
push
or
and
sbbb
push
in
and
movsl
push
movsb
jno,pt
add
mov
inc
stos
stc
cmp
mov
ljmp
int3
mov
jb
loop
mov
nop
enter
jno
xchg
jg
inc
outsb
mov
hlt
inc
inc
inc
mov
pop
jmp
mov
mov
adc
enter
and
jnp
arpl
xor
push
ds
cmc
sub
pushf
std
sub
pop
mov
outsb
jp
dec
pop
adc
lahf
mov
sarb
mov
jo
fnstsw
sbb
in
or
cli
aas
push
lsl
jno
dec
dec
int3
push
xor
test
rcr
in
cwtl
mov
test
inc
mov
es
mov
clc
mov
test
add
shrl
faddl
cs
jle
jno
sbb
ds
out
sub
dec
test
decb
mov
mov
icebp
imul
inc
repz
jl
jl
jae
lods
mov
setno
loop
fdivs
add
testl
sbb
xor
and
xor
mov
andl
cwtl
and
dec
stos
mov
cltd
pop
xor
or
jp
mov
cmp
mov
hlt
and
dec
push
test
arpl
mov
test
mov
popf
cmpsl
adc
test
bound
addr16
mov
shr
clc
fsubrl
mov
and
xchg
push
push
inc
lds
dec
xor
lods
int3
mov
mov
scas
jl
xchg
xor
sbb
adc
lods
pop
sub
jnp
sub
xlat
mov
test
cmc
mov
xor
data16
push
shrl
lods
int
ss
pop
ss
mov
inc
inc
addr16
mov
dec
cmp
or
adc
leave
ret
std
clc
les
repnz
xor
push
mov
call
dec
xchg
pusha
mov
or
test
mov
adc
pop
fs
xlat
add
mov
leave
mov
sub
or
xor
sti
dec
push
lret
es
mov
lds
js
pop
fs
xchg
xor
sahf
jae
data16
test
inc
lcall
jmp
sarl
mov
imul
je
scas
dec
mov
lret
mov
es
movsb
out
test
sub
push
inc
mov
adc
bound
push
adc
add
mov
mov
jle
xor
rorl
fidivrl
lea
enter
loopne
pop
lock
pop
mov
mov
sbb
add
insl
push
icebp
and
sub
adc
or
pop
ja
out
or
cwtl
je
cmp
push
pop
ret
xor
das
aas
cld
movb
and
or
cmpl
in
and
dec
stos
inc
jo
idiv
inc
stc
cltd
mov
fnstenv
test
mov
adc
addl
je
mov
push
fsubl
nop
add
mov
or
rolb
cwtl
popa
pop
ret
rcll
push
pushf
in
out
push
jb
arpl
and
movsl
or
pop
ja
push
movsb
and
dec
add
outsl
inc
jle
xchg
mul
fdiv
dec
or
jg
inc
fs
pop
fnsave
dec
aad
loope
xchg
lahf
jae
clc
jne
pop
add
adc
adc
mov
xchg
enter
cmpsb
call
push
pop
pop
lods
inc
bound
push
or
pop
inc
jg
cld
push
repnz
xlat
js
inc
pop
cmovg
xor
adc
dec
sbb
subb
bound
xchg
jmp
arpl
test
xlat
and
xchg
ss
mov
inc
adc
jns
jae
inc
rcl
inc
cmp
pusha
inc
jg
sbb
loopne
pop
jle
imul
repnz
adc
xchg
bound
push
fbld
jnp
push
int3
ljmp
into
shll
xor
mov
in
sub
cmpsl
sub
inc
shl
out
lret
shll
ds
pop
push
jnp
add
idivl
test
ljmp
lahf
sti
sub
and
adc
js
in
fimuls
test
jne
lcall
jecxz
mov
loop
push
into
push
add
xor
add
mov
mov
fisubs
and
out
xchg
aaa
imul
push
inc
sub
mov
loop
add
pusha
or
test
push
gs
mov
mov
cmp
or
push
inc
sarb
ss
adc
inc
jae
ljmp
pop
inc
or
jo
jae
cmpsl
mov
cld
fnsave
add
mov
bound
xchg
fldt
mov
xor
andl
sub
sahf
jl
sub
pop
bound
std
dec
push
sub
in
pop
in
arpl
flds
mov
or
out
pop
mov
dec
lds
and
into
and
jnp
popf
test
mov
jmp
sahf
mov
push
arpl
outsl
push
add
lds
pop
add
pop
arpl
pop
clc
cwtl
das
sub
sub
push
fldcw
loope
dec
xor
addr16
pop
popf
or
jcxz
sti
outsb
imul
sub
xor
outsb
cmp
out
cmp
insb
cmp
xchg
rcll
jg
movsl
mov
cli
loopne
dec
rcll
in
jne
outsl
rcll
or
call
rol
seto
mov
int
lret
pushf
cli
out
pop
inc
cmpsb
xchg
sub
push
or
fists
lods
or
in
mov
push
int3
xchg
std
aad
test
je
andb
call
or
jno
scas
jecxz
or
cmp
pop
ds
xchg
xor
in
adc
repz
fsubl
pop
cmp
jecxz
shl
and
fwait
nop
stc
daa
sahf
stc
or
lds
hlt
enter
sbb
or
jle
fs
mov
sbb
pop
popa
and
pop
out
fwait
sti
and
push
out
cmp
push
xor
jnp
pop
dec
mov
icebp
push
and
sbb
ret
sahf
lods
xchg
fldl
stos
sub
xorl
call
cld
dec
sub
mov
sub
inc
inc
xor
inc
push
cmp
add
push
imul
xor
push
xor
cmpsl
std
lock
shlb
iret
divl
lds
out
js
mov
push
push
sbb
pop
xlat
pop
jg
adc
pushf
mov
shll
sti
lods
xchg
mov
lods
or
int
data16
popa
sbb
loope
sub
jno
pushf
xchg
inc
adc
mov
stos
push
adc
lcall
cmp
aas
jle
popa
jb
sbb
rcl
jmp
das
jbe
mov
dec
das
push
and
cld
movsb
jl
push
lds
lea
aam
inc
dec
pop
dec
inc
mov
or
out
rcr
xchg
rcrb
mov
test
sub
sahf
xor
fwait
xchg
fisubl
ret
push
dec
mov
fs
inc
pop
cwtl
cmp
lret
insl
test
cld
scas
lods
or
dec
pusha
cmp
xchg
inc
lea
cli
mov
sahf
xor
jnp
add
sbb
adc
sub
pop
push
jge
dec
pop
rorb
das
in
sbb
add
xor
mov
test
out
mov
bound
pop
mov
sbb
sti
ror
adc
aad
movsl
in
push
sahf
sub
mov
or
add
icebp
in
mov
shll
push
sub
outsb
inc
subb
hlt
xchg
fldcw
shrb
mov
shrb
adc
and
xor
cmpsb
push
xor
cld
jns
int3
out
mov
out
pop
scas
lahf
aaa
fnstcw
cwtl
xchg
mov
insl
adc
sub
pop
sbb
orl
pusha
clc
fldenv
int
push
cmp
dec
aaa
add
aad
stos
mov
jbe
ds
insl
movl
dec
xchg
push
bound
pop
cmpb
data16
jmp
aam
add
imul
mov
mov
cwtl
lcall
jae
add
add
scas
push
xchg
lods
in
xchg
xor
sbb
push
add
inc
je
pushf
sarb
adc
adc
mov
jb
mov
fs
cmp
sub
fiaddl
movsb
cmpsb
ficompl
movsl
xor
sbbb
mov
test
fs
xor
sahf
xor
mov
outsl
or
nop
outsl
lcall
sub
repz
fmul
test
mov
push
jnp
jne
shrw
sbb
ret
xchg
add
push
mov
cmp
lahf
test
ss
rorl
cmp
jae
jecxz
lcall
movsb
inc
mov
roll
loop
adc
aam
fdivs
in
pop
daa
jmp
in
mov
sbb
jae
jne
stc
fucomip
xor
lock
cmc
ja
add
xchg
xchg
mov
jb
mov
jecxz
and
push
cltd
mov
aad
pop
mov
enter
cmc
sbb
popf
loopne
mov
xchg
lahf
sbb
cmp
inc
xchg
push
inc
outsl
jnp
mov
jae
out
in
and
pop
jecxz
adc
orl
jmp
in
push
out
or
jge
pop
add
cmpsb
into
or
adc
inc
mov
adc
test
or
and
data16
dec
pop
lret
aam
das
push
sbbl
jge
repz
or
fcompl
arpl
and
lahf
inc
pop
js
js
leave
fisttps
xor
popf
imul
xchg
adc
mov
jp
mov
pop
mov
push
dec
and
inc
stos
ds
pusha
ljmp
push
mov
fistpll
sbb
aas
xor
pop
inc
sbb
jecxz
es
mov
fimull
inc
mov
mov
mov
enter
orl
outsl
mov
mov
loopne
mov
mov
cmpsl
dec
sub
mov
lret
imul
cltd
gs
outsb
xor
cld
into
pop
mov
xchg
fidivl
das
dec
mov
and
xorl
sub
decb
jns
movsl
nop
mov
idivl
xchg
ret
xchg
fldenv
in
sbb
mov
xchg
lods
loopne
cmpsb
inc
or
bound
pop
xchg
ljmp
insb
mov
imul
add
cmp
lock
dec
fcomps
fdivs
dec
sbb
xor
adc
and
sub
cwtl
pop
and
dec
ds
ret
test
aad
mov
lret
es
imul
add
pop
lods
test
mov
mov
scas
mov
lods
rcrb
rcrb
sti
inc
mov
addl
adc
out
adc
js
adc
sarb
roll
mov
filds
into
repz
cli
mov
jae
shll
bound
jno
xor
incl
inc
or
lcall
lea
js
dec
std
jmp
popa
lret
xchg
subb
fisubrl
in
hlt
ficoms
incb
pop
jp
pop
shrb
or
inc
xchg
jp
jno
call
xchg
adc
repz
fwait
enter
cmp
cs
in
xchg
xchg
js
arpl
mov
jne
sbb
mov
cmpsb
daa
ret
inc
jmp
adc
cwtl
push
mov
jbe
dec
lcall
adc
js
push
pop
addl
mov
adc
push
iret
push
pop
ds
flds
in
xchg
adc
mov
mov
imul
maxps
add
cmp
in
out
aad
pop
decb
mov
xchg
xchg
or
cmpsb
lret
pop
int3
and
sub
movsb
or
repz
xor
pop
rolb
mov
fisubs
mov
int
popf
push
and
pop
aam
add
roll
pop
jo
cmp
jbe
ret
lods
icebp
dec
nop
cmc
add
insl
xor
jle
adcl
pusha
lods
xchg
movsl
cmp
stc
and
bound
mov
fldenv
mov
pop
outsb
xor
ficoml
lea
push
stos
js
jb
insb
lret
push
adc
mov
pop
jle
push
cmp
aad
icebp
scas
sub
in
mov
jne
pushf
push
mov
jecxz
mov
sarl
xchg
jb
shll
cli
imul
jmp
repnz
cs
loopne
push
xchg
daa
lock
cltd
xor
dec
mov
cmp
sub
cmc
add
sub
mov
adc
push
sti
mov
jns
push
les
and
xor
jecxz
xchg
mov
in
and
xchg
push
lock
icebp
push
int3
in
pop
mov
and
push
pop
dec
sbb
iret
in
or
xor
and
lret
add
adc
fstps
cmpl
lcall
jb
call
push
loop
pop
jl
sub
out
jmp
cs
movsl
ss
cmp
sbbl
and
sbb
pushf
jp
push
xlat
repz
xchg
jbe
lcall
mov
into
cld
in
in
mov
push
xchg
and
adc
call
dec
fdivrs
bound
call
pop
xchg
fists
cwtl
jne,pt
jg
stos
cmpsl
aas
cmp
mov
pop
hlt
pop
add
cmpxchg
dec
mov
add
inc
mov
test
or
insl
inc
loopne
and
scas
jne
repz
and
fildl
hlt
mov
insb
sti
push
ja
sbb
in
ret
pushf
mov
mov
shlb
int
subl
push
add
in
jge
pop
mov
adc
lods
or
mov
notl
gs
test
mov
push
dec
or
cmp
inc
or
mov
cmp
jmp
cmc
and
xchg
jge
mov
jmp
mov
xor
xchg
das
sub
sub
insl
mov
in
ja
jle
mov
xchg
jno
inc
dec
mov
cmpsb
pop
std
andb
adc
iret
fdivrs
out
out
outsl
mov
jne
ljmp
ret
mov
push
and
in
outsb
mov
insb
popf
das
xchg
inc
dec
gs
xlat
xchg
and
idiv
and
in
sub
jecxz
enter
sub
loope
dec
test
mov
lret
into
ss
call
fnstsw
fisttps
jle
jnp
in
or
orl
arpl
pop
cmp
push
jne
cmp
mov
jge
cmp
mov
rcrb
pusha
ret
arpl
mov
mov
xchg
jae
sbb
pushf
sub
adc
insl
mov
cmp
sar
pop
fnstenv
lcall
rcrl
iret
daa
push
push
arpl
loopne
leave
cmp
lret
push
sbb
dec
fcomi
mov
mov
out
jne
mov
ljmp
iret
mov
dec
jp
cmc
xor
dec
scas
dec
sbb
cmp
mov
xor
cmovp
and
jmp
mov
stos
lods
mov
push
loope
or
das
xchg
addr16
mov
mov
scas
cmp
sbb
frstor
sub
sbb
and
jnp
push
fsubs
nop
sbb
cmp
jg
loopne
and
fisttpl
sahf
inc
lret
inc
mov
out
out
add
push
lods
pop
out
out
push
or
or
and
out
inc
and
pop
or
push
xchg
js
or
add
jmp
data16
sbb
cld
or
xchg
jno
lock
sub
clc
lret
cmp
test
and
push
push
add
mov
movsb
imull
icebp
cmp
loope
insl
xor
add
add
mulb
xor
add
nop
popa
cmp
in
shll
mov
add
sub
mov
xchg
aad
iret
arpl
ljmp
les
push
mov
clc
mov
jl
adc
jne
pop
and
ja
frstor
adc
sbb
pop
push
pushf
lret
jb
movsl
fsub
xlat
mov
sub
jbe
jmp
xor
movsb
pop
push
call
xor
jnp
mov
push
xchg
or
sar
jo
les
fisttpl
and
pop
rolb
push
pop
js
xor
mov
cmp
in
mov
xchg
sub
lea
cmc
dec
movsl
mov
in
xor
adc
mov
mov
fs
enter
scas
adc
xor
jge
mov
andb
insl
popa
sub
mov
scas
cmp
xchg
sti
lret
int
out
and
xor
ret
rcrl
xchg
fsub
jg
mov
jg
roll
mov
mov
frndint
inc
mov
xorl
inc
imul
mov
jnp
mov
jns
sub
mov
pusha
popf
and
movsb
insl
adcb
xor
or
rorl
mov
adc
mov
push
or
loop
insb
mov
dec
ja
test
sbb
mov
add
mov
add
push
repnz
mov
loope
pushf
in
mov
out
xchg
dec
hlt
filds
clc
add
enter
outsl
adc
inc
push
mov
imul
ss
jge
ja
mov
push
mov
arpl
pushf
jbe
mov
cld
push
outsl
iret
loope
xor
cli
jno
stc
push
mov
icebp
popa
cmp
sahf
add
inc
xor
arpl
aad
icebp
xchg
dec
jmp
jnp
push
pop
fistl
push
test
mov
mov
or
fbld
enter
mov
shll
mov
mov
push
lret
into
nop
add
jae
dec
sub
jno
cld
xlat
loope
repnz
in
inc
call
ljmp
or
pop
test
and
push
aam
out
or
aad
clc
pop
cld
popf
mov
jmp
mov
ret
into
lret
dec
cmp
fs
loop
in
push
xchg
add
shrb
cmp
add
push
sbb
test
in
cld
and
push
lods
xor
xchg
popf
arpl
insb
adc
ljmp
aaa
add
sbb
push
hlt
insl
jno
adcb
xor
push
adc
outsb
sbb
jbe
clc
jmp
xchg
mov
sar
std
lahf
ret
or
repz
push
push
or
enter
lock
pop
pop
outsl
insl
enter
dec
aam
sbb
cmp
and
outsb
fs
xchg
subb
test
push
mov
pop
mov
stos
call
stos
push
test
sub
jmp
push
gs
ja
pop
dec
in
xchg
adc
out
cmp
in
sbb
adc
into
pop
sbb
movsl
cltd
or
ss
or
mov
ret
pop
inc
cmpsb
push
mov
imul
mov
jb
dec
push
clc
lods
dec
aaa
fimull
out
push
inc
mov
movl
mov
inc
lcall
mov
lods
xchg
cmp
push
or
cld
fcomi
xor
movsb
push
aam
sbb
mov
movsl
fimull
pop
int
push
pop
sub
jecxz
test
xor
cli
imul
mov
sbb
testl
lea
mov
loopne
ror
sbb
loopne
das
mov
js
pop
jmp
jle
dec
xlat
aas
hlt
fsts
inc
outsb
aam
dec
dec
adc
and
lea
or
mov
push
idivb
dec
pusha
xor
mov
ss
daa
xor
mov
incl
jb
stos
lods
cmp
into
fdivr
out
cld
cld
add
inc
add
sub
sahf
test
in
cld
jo
mov
adc
xor
jp
mov
adc
push
push
mov
xchg
out
jne
cmp
fstpt
cmp
jmp
mull
push
push
mov
ret
cmp
jecxz
push
shl
into
jp
xchg
dec
stc
into
sbb
mov
repz
dec
pop
call
xchg
jge
adc
pop
jbe,pt
je
cltd
add
adc
in
xchg
fmul
mov
mov
push
mov
andl
xchg
adc
sub
fwait
mov
or
jecxz
cmp
loope
add
mov
adc
fcoml
cmpsl
dec
js
add
mov
lret
insl
pop
jno
cld
pop
outsl
les
mov
cmp
into
sub
ret
lds
sbb
data16
mov
inc
jnp
roll
xlat
les
jbe
leave
inc
ljmp
jmp
mov
pop
mov
sbb
out
jmp
fwait
xchg
and
dec
sarb
loope
cmpl
adc
mov
subb
sub
xor
xchg
inc
jge
mov
cmpsb
imul
stos
jb
xchg
lods
in
imul
loopne
mov
shll
arpl
insb
mov
cmp
insb
push
pop
jg
push
nop
xchg
dec
sub
dec
int
sub
mov
dec
pushf
popa
cmpsl
dec
aam
insb
lret
mov
ret
aad
fdivrp
data16
stos
in
lock
pop
fucomp
cmp
or
xchg
sbb
cmp
adc
enter
call
mov
into
loope
movsb
pushf
lahf
or
mov
mov
sbb
lods
mov
inc
ficomps
bound
lret
push
inc
hlt
push
in
icebp
in
ja
mov
out
stc
or
sysenter
and
outsb
add
push
sub
hlt
vmovlps
scas
dec
sub
and
lcall
insl
rcll
stc
jno
test
inc
pop
mov
adc
popf
cmp
iret
stos
pop
inc
shrb
daa
std
pop
in
loop
stc
outsw
inc
and
les
fsts
in
mov
daa
cmpsb
and
aas
jne
popf
or
mov
xor
xchg
cltd
jns
movsb
outsl
sbb
outsb
scas
test
fsubrl
popa
mov
rolb
ss
adc
cmpsl
or
xor
jbe
xchg
jns
xchg
lods
in
mov
mov
sbb
cmpl
fidivl
push
xor
mov
into
es
or
mov
adc
cmc
sub
pusha
cwtl
xchg
adc
cmpsb
sbb
xchg
pop
xrelease
orl
dec
aaa
icebp
jle
jbe
pop
imul
icebp
sbb
shll
outsl
pop
mov
dec
adc
imull
cmp
adc
and
in
xor
xchg
mov
sbb
sub
popa
cmp
add
js
roll
inc
xlat
aas
pushf
fscale
jecxz
mov
dec
pop
aas
stos
mov
adc
outsb
mov
out
push
mov
cld
or
cmp
pop
xor
jb
addr16
aad
jnp
outsl
push
cmpsl
xchg
mov
in
pop
dec
or
test
mov
scas
sub
adc
jg
xchg
inc
pop
aam
iret
mov
mov
icebp
lahf
aas
insl
arpl
insl
fsubrl
or
cld
in
or
stos
in
iret
dec
mov
push
inc
mov
sti
mov
mov
push
cmp
data16
cmpl
push
cmpsb
mov
cli
cmp
pop
inc
into
cltd
and
mov
das
jo
faddl
jg
mov
call
jae
lock
fidivrs
lea
pop
sub
test
push
dec
or
push
sbb
sarl
sub
sbb
arpl
ficoms
aam
add
mov
cmpsl
xchg
out
in
add
jp
lds
jae
scas
adc
push
jbe
inc
repnz
inc
add
jp
mov
addps
fstpl
stos
cmpsb
mov
push
inc
mov
test
jae
and
outsb
es
stc
rclb
sbb
inc
push
fwait
jecxz
mov
cmp
lret
or
fcoms
data16
popa
data16
daa
fs
push
push
movsl
pop
stos
sbbb
xchg
vmwrite
and
adc
push
cld
jp
cmp
xorl
inc
cmpsl
mov
lods
mov
cltd
mov
stos
jo
jb
aas
push
add
les
out
ret
and
xchg
test
pop
mul
mov
adc
scas
cld
cld
sub
call
pop
and
jp
loop
pop
shrb
rcrl
and
add
popf
pop
sub
in
aas
push
andb
inc
stos
int
dec
lcall
ljmp
mov
daa
or
dec
fs
mov
cmpsb
lods
push
fwait
or
jp
push
mov
and
ret
test
jmp
and
sbb
dec
mov
mov
fiaddl
addr16
stos
and
hlt
cmp
ret
mov
or
sti
xor
add
imulb
popf
test
xchg
ss
test
sub
mov
bnd
adc
mov
lock
mov
sub
adc
push
add
loop
cmp
adc
xor
out
mov
add
sbb
pop
into
pop
dec
dec
and
sbb
fwait
mov
fdiv
pop
jns
mov
pop
pop
aaa
in
sub
mov
imul
inc
push
pop
sub
xlat
das
and
pop
pop
push
sbb
in
cmp
push
pop
pop
mov
jns
xchg
pop
stos
or
in
inc
push
sub
mov
dec
into
outsl
sti
and
call
cli
and
push
mov
lret
inc
dec
adc
cld
adc
dec
repnz
xorb
loope
mov
xor
inc
loop
dec
lods
clc
mov
jno
cmp
and
cmp
fucomip
mov
das
ja
lods
push
lods
lret
hlt
or
add
pop
fcompl
lahf
dec
mov
jecxz
shl
sbbb
ja
sbb
cmp
pcmpgtd
mov
xchg
addr16
nop
cli
shll
pop
cmp
fnsave
or
ret
test
fistps
xchg
jbe
bnd
mov
lahf
push
push
mov
xchg
sub
aaa
push
jmp
sub
jmp
push
pop
insl
sti
fisubrl
sub
stos
jmp
xchg
dec
flds
vpsrlw
ss
call
cmp
js
sub
aad
pop
shlb
dec
int3
mov
xchg
rorb
sbb
and
push
dec
lock
jno
jae
test
cmpsb
jno
mov
test
aad
and
stc
fdiv
sub
dec
xchg
lret
mov
ret
sub
mov
pop
push
rcll
pandn
xlat
loope
mov
xor
mov
in
insl
ret
icebp
pop
and
pop
inc
inc
cli
inc
mov
xorl
inc
mov
call
jp
sub
pop
les
mov
jmp
inc
and
popa
inc
push
call
je
sub
push
scas
rcll
xchg
out
xor
cmp
jo
jbe
insb
xorb
rcrb
into
dec
mov
mov
mov
or
push
leave
or
jbe
xchg
cmp
xchg
in
mov
int3
xchg
add
add
add
mov
ljmp
or
mov
imul
dec
mov
jecxz
imull
hlt
jmp
mov
add
stos
lds
dec
movsl
cmp
ret
jne
in
popf
xor
ja
jle
scas
dec
imul
inc
mov
cld
ljmp
ss
clc
enter
pop
aad
jmp
and
push
push
stos
aad
jno
fadds
pop
sbb
repz
mov
addr16
and
faddl
xor
push
pop
mov
jbe
orl
pop
shl
fcmovnbe
add
cmp
mov
mov
push
and
ljmp
pop
sti
push
xchg
cmp
loope
test
scas
loope
pushf
mov
jecxz
shlb
cmp
hlt
sub
and
movsb
xor
pop
fs
xchg
lock
in
dec
lahf
add
sbb
dec
sub
pop
and
cli
pop
jno
leave
sub
xor
pop
mov
sub
ret
gs
cli
push
das
xchg
pop
out
or
mov
push
int
mov
push
pop
mov
mov
aaa
ss
jle
mov
inc
jmp
pushf
adc
cli
je
push
test
in
arpl
ror
popf
cmpsl
roll
movsb
pop
sub
sub
mov
xchg
loope
lret
and
hlt
add
movsl
fnstenv
push
or
xor
push
rol
stc
mov
or
dec
outsb
enter
pop
sbb
or
dec
popa
or
std
inc
in
add
test
mov
push
mov
inc
add
enter
cmpsb
pop
scas
leave
mov
mov
mov
sbb
sub
rcrb
lock
xor
mov
mov
xchg
pusha
push
cmp
dec
mov
pop
insb
cmc
mov
sbb
push
and
cmpsb
jno
fs
lcall
mov
dec
lret
sub
xchg
into
jmp
cmpsb
jnp
int3
jmp
into
call
cmp
aad
add
inc
out
fwait
out
mov
add
fstpt
fcoms
test
add
mov
sahf
outsl
test
lds
pop
std
push
cmp
mov
dec
xor
call
push
push
mov
dec
aas
jmp
in
imul
fnstcw
loop
xchg
pop
in
mov
jmp
ja
sahf
enter
mov
arpl
mov
mov
push
iret
pop
xchg
push
jno
stos
xchg
inc
ja
in
adc
fdivr
push
mov
pop
or
adc
and
test
dec
xchg
sub
sbb
stos
je
daa
dec
mov
sbb
ss
stos
stos
sub
xchg
pop
mov
mov
push
fwait
jle
push
mov
lret
cs
call
movsb
test
jns
xor
repz
adc
cs
bound
push
arpl
xor
push
inc
stc
push
jle
jbe
pop
add
mov
xchg
scas
outsl
sbb
fwait
es
adc
dec
dec
daa
cmp
and
xchg
out
mov
stc
ljmp
outsb
cmpsb
mov
outsb
push
stos
mov
jbe
pop
fiadds
movsl
push
imul
sub
lods
cmp
insl
ja
mov
sub
jecxz
dec
repnz
jp
mov
cmpsl
dec
data16
push
fld
aad
push
jle
inc
sub
in
mov
dec
in
mov
cwtl
jl
out
imul
fldenv
pop
add
mov
push
inc
and
inc
clc
in
dec
test
mov
imul
inc
jo
sub
jnp
inc
mov
adc
dec
rorb
mov
dec
imul
cli
pop
mov
aam
xor
sti
xchg
hlt
js
pop
fsts
xor
adc
fwait
and
addr16
es
sub
sahf
adc
inc
daa
fldenv
es
and
outsb
mov
add
fsubrl
inc
arpl
push
cltd
andl
xor
add
jb
stos
cmpsb
movsl
or
pop
lcall
stc
mov
push
push
pop
cmpsl
ds
mov
dec
adc
fsubs
repz
sub
ds
xchg
dec
push
outsl
sub
clc
mov
test
mov
inc
scas
call
mov
mov
or
jo
jbe
jg
inc
incl
xchg
rcrl
scas
xlat
outsb
and
sub
jno
pop
sub
fs
or
lret
xor
movsl
outsb
jmp
xchg
cmpb
mov
mov
mov
xor
mov
std
scas
mov
xchg
inc
in
pop
lock
cmp
insb
testl
push
sub
aam
mov
lret
add
iret
dec
scas
mov
inc
shr
aas
scas
stc
sub
lods
rcrl
jp
repnz
jb
out
mov
jne
jg,pn
pop
fwait
xchg
mov
mov
and
addb
jns
aas
pop
jbe
jl
aaa
push
cli
xchg
ja
adc
fldenv
mov
jg
jb
push
and
out
aad
call
mov
cmc
test
push
data16
ds
sub
push
adc
nop
test
mov
mov
add
sti
repz
xchg
jg
sbb
call
pop
pop
imul
sbb
sub
sbb
std
mov
dec
mov
jbe
add
ret
pop
adc
xchg
jnp
push
mov
mov
mov
pop
jnp
jnp
or
pop
add
lds
cmp
cli
scas
mov
mov
push
jnp
xchg
mov
pop
and
mov
cld
and
mov
decl
sbb
ss
popf
imul
lea
dec
cmp
mov
jnp
mov
inc
stos
pop
cld
aam
add
mov
ffreep
scas
cwtl
jo
adc
pop
stc
loopne
int3
orl
lcall
cmp
pop
and
mov
movsl
and
addb
jne
and
fistps
pop
cwtl
mul
jb
in
mov
sbb
fsubl
and
sahf
bound
mov
sub
xor
idivb
ret
cmp
data16
sarb
mov
pop
push
iret
xchg
xchg
int3
inc
mov
leave
and
push
dec
xchg
xchg
inc
lahf
fbld
mov
lea
nop
into
xor
js
mov
mov
test
or
pop
add
cli
lret
xchg
outsb
ja,pn
mov
hlt
push
pop
or
xor
dec
fwait
pop
aad
jmp
add
lock
mov
dec
das
and
xchg
add
sub
or
int
dec
std
daa
loop
mov
cli
frstpm(287
out
cwtl
ret
mov
cltd
sub
jae
sarb
sbb
sti
pusha
je
jbe
daa
lods
sbb
out
cmpsl
test
outsl
xchg
gs
dec
xor
movsl
sbb
push
out
rcrl
sbb
das
mov
xchg
bound
push
les
stos
mov
loop
sub
fwait
push
mov
js
andnps
sub
daa
mov
ficompl
dec
mov
cmp
popf
test
jmp
lods
mov
mov
adc
pushf
xchg
cmp
add
stos
insl
mov
xor
out
and
fistpl
mov
jne
mov
mov
lods
mov
stc
sbb
pop
pop
push
pop
jp
scas
jmp
adc
call
push
mov
loop
push
xor
ss
push
nop
dec
push
cmp
inc
sahf
das
std
aaa
insb
jbe
cmp
in
into
cmp
aas
jmp
dec
lahf
and
or
daa
icebp
lods
mov
add
loope
into
pusha
movsl
fcompl
cmp
push
xchg
fidivl
mov
adc
cs
or
movsb
push
stos
into
cmpsb
push
sbb
adc
mov
mov
out
ficoml
cmp
push
loopne
or
fisubl
mov
cltd
adc
repnz
mulb
data16
dec
add
sti
in
das
or
push
inc
xchg
dec
fsubs
ror
or
sub
scas
xchg
push
adc
jl
cli
xlat
jp
jle
gs
sub
fwait
cmc
rol
fwait
lret
mov
imul
mov
loopne
mov
shlb
insb
fisubrs
fisubl
jp
lods
cli
push
ljmp
fisubl
popf
jnp
and
lret
xor
jmp
dec
mov
add
mov
test
xchg
rclb
pop
int3
insb
mov
and
loop
and
xor
cmp
out
lret
std
push
scas
ficompl
mov
sbb
inc
add
loop
mov
add
cmc
rcr
sti
cmc
ljmp
ret
into
xrelease
pop
sarb
cltd
dec
inc
dec
cli
in
cli
int3
repnz
add
es
rorl
sbb
mov
xchg
testb
and
dec
xor
les
dec
ss
pop
mov
mov
int3
mov
cltd
sub
cmp
and
shlb
rol
repnz
loope
sub
insl
subb
jmp
cmp
push
fdivs
shr
mov
lock
or
mov
in
xchg
jne
popf
cld
mov
clc
ja
adc
movsb
cmpsl
hlt
test
or
cmp
repz
lret
shlb
cmp
data16
stos
dec
jecxz
cmpsb
and
push
push
xor
mov
and
sub
adc
in
test
lods
jno
sub
jb
mov
daa
fldl
cmpsb
lds
sbb
stos
adc
add
push
push
xchg
in
js
push
add
pop
call
movsl
sub
ret
adc
inc
mov
mov
scas
daa
push
stc
popf
adc
push
and
mov
lock
jp
mov
lret
outsb
loope
scas
push
cmp
in
fistl
jne
call
jl
sub
dec
jnp
jl
and
jb
mov
pop
enter
dec
lcall
mov
test
pop
xchg
cmp
imul
xor
and
push
inc
pushf
mov
mov
or
push
or
xchg
push
mov
mov
addr16
loope
popa
mov
ss
std
cmp
fisubrs
push
in
jno
inc
xor
mov
xchg
test
aaa
dec
aad
cli
pop
addps
dec
mov
mov
mov
les
and
add
cld
push
scas
add
pop
rcl
ret
enter
out
xchg
sub
xor
ret
cltd
into
mov
rorb
sub
cmpsb
in
daa
jbe
icebp
mov
scas
pop
adc
ss
pusha
stos
or
push
outsl
mov
fcomps
push
sub
mov
or
fimuls
push
adc
add
mov
enter
test
addl
xor
call
cmp
xchg
mov
mov
jns
mov
or
cmp
mov
mov
scas
or
mov
incl
xlat
and
sbb
loop
sbb
shrb
out
jbe
lahf
pop
inc
rcrl
mov
and
xchg
aad
fidivs
rcll
jp
add
aas
int
inc
or
es
pushf
add
mov
js
insb
ljmp
cld
xchg
xchg
cmpsb
mov
fiadds
sub
sub
sub
mov
adc
pop
jge
icebp
inc
push
out
ljmp
ss
push
sbb
inc
ja
adc
push
mov
and
sbb
cmp
shlb
mov
push
test
lcall
sub
xlat
pop
push
and
cmp
jbe
push
xor
mov
cmp
aaa
stc
xchg
ret
hlt
jne
add
mov
in
gs
icebp
data16
cmc
test
clc
in
and
pop
add
hlt
inc
test
jns
popa
int3
hlt
in
adc
jle
and
aam
dec
decb
movsb
fbstp
mov
cmpsb
lea
js
push
repz
outsb
jp
mov
pop
test
scas
mov
test
dec
nop
fidivrs
fcompl
inc
andl
sbb
jb
mov
ret
popa
rcrb
dec
mov
addb
ret
jno
nop
decl
fildl
pop
xor
stos
adc
mov
repnz
and
addb
scas
daa
icebp
addr16
cmpsb
idiv
mov
push
jg
add
sub
sbb
daa
pop
add
mov
inc
pop
and
sub
daa
mov
les
lock
inc
push
jns
pop
push
pushf
jae
adc
mov
inc
dec
lds
jo
fdivs
fwait
sub
fstpl
or
xlat
jecxz
push
dec
ror
out
jnp
xor
test
mov
mov
aam
add
loop
mov
jp
iret
sbb
mov
or
dec
dec
pop
add
ljmp
loop
push
outsl
sbb
ss
or
dec
bound
add
dec
lret
test
nop
mov
aas
or
pop
push
cwtl
dec
das
push
loop
jecxz
cmpl
xor
ds
pop
bound
push
call
aad
cmpsl
jge
dec
stc
sub
lods
xchg
inc
mov
mov
lock
pop
xor
push
push
fiadds
arpl
daa
std
clc
cli
sbb
int
loop
pushf
mov
cmp
fucomp
hlt
mov
sbb
push
inc
pop
xor
adc
bndldx
mov
mov
jecxz
adcl
stos
imul
inc
rol
lret
sahf
jno
cmp
mov
lahf
adcb
adc
jl
cwtl
icebp
hlt
jo
add
arpl
inc
andb
mov
fisubl
xchg
mov
push
ja
cmp
aaa
inc
mov
mov
leave
andb
loopne
and
pop
repnz
cmp
imul
test
add
and
jl
fstps
orb
mov
and
enter
int3
dec
pop
mov
jge
sub
aam
push
shll
dec
add
mov
daa
inc
fildll
mov
xchg
lahf
rcll
mov
mov
cmpsl
mov
xor
test
cmpsb
std
imul
jo
pop
in
pop
adc
push
xchg
loop
adc
mov
ret
inc
mov
pop
mov
cmp
aas
jnp
mov
push
repz
jns
pop
sar
data16
movsl
mov
rolb
cs
jge
cmp
push
bound
test
xchg
negl
popf
aaa
imul
xchg
imull
sub
fwait
enter
jle
xlat
inc
out
imul
inc
or
xlat
push
xor
test
xor
push
dec
adc
inc
test
push
or
dec
mov
es
out
sbb
shll
or
or
adc
fsubrl
jns
mov
lods
cli
xor
cltd
and
jae
cmpsl
clc
insb
cmp
xchg
sbb
mov
popf
xchg
jno
lods
popa
pop
mov
push
adc
pop
jmp
sub
addr16
pop
cwtl
xor
add
pop
ret
ss
lods
pop
es
jp
stos
mov
fldt
neg
shl
push
pushf
push
push
std
leave
mov
cmp
fstpl
out
cli
xlat
mov
scas
push
dec
negb
es
or
rcrw
clc
popf
notl
pop
inc
inc
int3
jne
ss
dec
mov
dec
into
fdivrs
daa
dec
scas
icebp
mov
out
add
mov
mov
push
adc
ret
ret
push
sbb
mov
loope
xchg
icebp
roll
and
pop
out
or
icebp
mov
das
pop
in
fdivrs
pusha
pop
sahf
je
out
test
mov
arpl
dec
cmpsb
cs
cli
xor
add
mov
mov
dec
xchg
or
push
fcmovnb
loope
lahf
icebp
xor
jp
sbb
outsb
and
shrl
jo
lcall
mov
add
mov
fsts
push
std
jle
mov
test
pop
add
fldcw
cmpsb
mov
je
mov
pushf
pop
mov
pop
pop
jnp
fs
pop
out
gs
xor
inc
xchg
shll
mov
dec
enter
pop
sub
mov
sti
xchg
pop
int
cmp
lahf
scas
adc
dec
cmpsl
inc
pop
or
movd
mov
lods
cwtl
inc
les
push
notb
cmp
fwait
int
bnd
jp
jle
insl
xchg
add
lds
into
or
xchg
icebp
mov
adcb
sbb
inc
lock
or
and
mov
dec
cmpsb
xchg
mov
bswap
sbb
iret
mov
jge
push
aad
stos
push
pop
jne
or
inc
dec
mov
filds
inc
pop
inc
jle
enter
pop
lds
loopne
test
sbb
imul
jl
fstl
push
ljmp
jo
lods
nop
inc
add
in
ret
push
push
iret
es
lcall
push
into
dec
adcb
xor
aas
test
xchg
pop
dec
sti
leave
mov
clc
nop
addl
test
rcrb
cwtl
cmp
inc
sbb
inc
pop
in
jns
sti
push
xchg
clc
adc
stc
int3
jmp
das
xorl
sbb
dec
js
mov
movsl
lret
lret
test
mov
aaa
cmp
dec
pusha
pushf
ret
enter
pusha
sbb
or
enter
lods
mov
fmuls
push
leave
loope
mov
mov
xlat
adc
fwait
mov
push
comiss
jge
cmc
cs
dec
faddl
icebp
jmp
test
sarl
in
push
imul
in
vcvtps2dq
ljmp
sub
dec
cltd
xchg
int3
and
sbb
cmpsl
jbe
sub
outsb
stc
call
mov
jecxz
lahf
ljmp
divb
jns
adc
dec
dec
call
shr
fstl
rcrl
mov
or
insb
xlat
jne
dec
insl
clc
xchg
loopne
fmull
mov
ret
shll
pop
test
dec
push
jl
repnz
loop
xchg
jnp
pop
push
fs
lcall
loop
cli
mov
inc
dec
sti
add
dec
sub
xchg
outsb
xor
sub
je
mov
adc
adc
cmpsb
xor
mov
or
enter
repnz
fiadds
xchg
add
inc
xchg
ficomps
xor
sahf
add
xor
mov
lahf
and
sbb
ds
lock
dec
jmp
dec
dec
dec
and
push
sbb
or
push
lcall
mov
divl
loop
popa
out
ja
cmp
pop
mov
push
pop
fimuls
sub
push
pop
test
shrl
adc
inc
xchg
xor
nop
add
int
cwtl
mov
sbb
ds
mov
movsb
push
xchg
aad
les
mov
add
add
bnd
push
je
addr16
push
hlt
shrl
xor
icebp
aaa
loope
mov
out
imul
add
arpl
jle
mov
jbe
lock
scas
mov
rolb
add
ljmp
rcrb
mov
cmpsl
jge
inc
lcall
aam
movq
out
lret
push
mov
sbb
rcl
jge
push
mov
aas
xlat
dec
add
jns
cwtl
test
fistpll
aas
push
lods
add
cld
mov
repnz
imul
sahf
pop
jo
test
jae
sbbl
cmp
sub
clc
push
mov
adc
lret
adc
je
sbb
inc
fisttpl
push
adc
cs
mul
mov
into
or
mov
and
jp
lds
daa
lods
xchg
jg
jecxz
or
pusha
outsb
add
repz
or
daa
cltd
lds
jmp
sahf
mov
in
mov
jge
out
inc
or
xchg
xchg
mov
lret
popa
mov
xor
fistpll
add
xchg
addl
mov
insb
sub
pop
daa
loop
sarl
ret
jecxz
arpl
lods
dec
insb
pop
xchg
mov
push
repz
emms
divb
ret
jnp
push
out
sbbl
fwait
pop
jl
mov
push
xor
cmp
fmul
push
clc
enter
xchg
int
rcl
push
inc
rcr
inc
adc
jl
push
mov
popa
cmp
inc
fdivrs
scas
push
push
scas
ja
aaa
add
mov
dec
pushf
aaa
outsb
push
pop
rcr
ds
sub
jnp
inc
pop
mov
mov
ret
sub
mov
sahf
ja
sub
rcl
mov
in
add
cmp
dec
push
in
push
pop
daa
dec
xor
cmp
inc
les
dec
int3
mov
je
cmpsl
cmpb
cmp
mov
test
jge
pop
mov
repz
mov
mov
jg
aad
cs
fstpl
in
int
mov
or
repz
jp
add
fstpt
jnp
xor
mov
arpl
imul
cmp
ja
and
inc
cmp
mov
cmpsb
sub
mov
fidivl
dec
daa
data16
js
jg
rcll
xchg
stos
les
rcrl
mov
lea
inc
inc
div
inc
jmp
jl
arpl
adc
mov
and
daa
or
dec
cmc
shll
pop
add
cmp
jo
jbe
jge
daa
mov
ret
push
je
xchg
mov
xor
inc
addb
adc
add
mov
and
test
sahf
adc
add
mov
sbb
pop
push
push
cmp
outsl
jp
mov
hlt
sbb
pop
sub
lret
lds
or
pop
into
rcll
jle
mov
inc
outsb
jae
jne
cmp
aaa
xchg
push
addr16
dec
stos
jle
mov
stos
sub
jge
mov
xor
cmp
mov
push
cltd
push
test
jae
cld
inc
jecxz
cmpsb
adc
popf
xor
pushaw
scas
mov
mov
call
and
iret
jle
shlb
pop
adc
imul
loop
gs
push
ret
insb
xchg
fs
rolb
pop
mov
inc
lret
js
xchg
cmp
sub
mov
test
mov
cmp
sbb
stc
sub
sbb
int
idivl
aam
cmpsl
fwait
les
dec
xchg
cmpb
xchg
ds
imul
xchg
mov
into
aam
adc
lahf
jmp
inc
jmp
inc
dec
fdivs
mov
push
dec
lock
inc
dec
repnz
cmp
lods
sbb
pop
xchg
or
aaa
sub
ret
dec
gs
inc
mov
xchg
xchg
inc
mov
push
add
sahf
jns
dec
sbb
jns
data16
adc
dec
lods
mov
ds
pusha
sbb
sub
in
dec
jge
cmp
idivb
test
jp
or
pusha
xlat
jle
xor
cltd
js
and
lock
add
addb
es
aad
mov
fildl
cmpsb
in
mov
aas
dec
inc
inc
or
jo
sub
jl
ficompl
int
pop
jnp
dec
aas
or
dec
mov
sbb
add
ss
sub
push
mov
test
sahf
mov
pop
lea
aam
inc
cmpsl
scas
rcrb
out
sarb
sub
imul
adc
mov
mov
jo
pop
ror
sbb
add
mov
mov
lret
daa
fs
xchg
out
xchg
adc
sbb
jg
insl
jle,pn
cltd
fmull
inc
bound
and
xchg
insl
sahf
adc
lret
in
xchg
scas
insl
scas
andl
sbb
jecxz
fdivr
adc
rolb
lock
hlt
and
adc
test
dec
xchg
mov
out
push
ret
in
stc
push
cmp
pop
cmp
mov
scas
add
or
ja
and
push
mov
push
jne
dec
daa
pop
aas
in
inc
mov
loop
andl
pop
mov
ret
adc
jmp
add
cmp
mov
ret
dec
popa
cs
stc
jp
lret
loope
pop
add
mov
mov
xor
push
jmp
in
lret
sbb
clc
out
mov
lods
xor
cmp
std
loope
or
jae
adc
ja
xchg
iret
std
push
pop
nop
jp
lea
jbe
lea
jp
xor
jb
dec
fs
ss
jne
lods
push
or
popf
mov
xchg
push
mov
and
adc
enter
xchg
mov
cmp
hlt
std
incb
xlat
jl
fyl2xp1
scas
outsb
arpl
fcomps
out
xor
fstp
xor
and
fs
rcll
fists
gs
nop
inc
hlt
lret
add
mov
mov
cmovp
popf
xchg
lret
sub
fwait
inc
loopne
add
xor
mov
cld
scas
adcl
in
iret
xchg
movsb
mov
sbb
sbb
mov
mov
xchg
and
lahf
ret
mov
pop
call
mov
jns
int3
ja
dec
or
aas
mov
addr16
hlt
fstpl
mov
enter
into
xor
cmp
mov
xchg
scas
clc
mov
push
in
mov
pop
sbb
xor
andb
faddl
cmp
and
inc
fdiv
and
aad
sub
lods
das
popa
cmp
mov
xor
sbb
inc
test
pop
aaa
cmp
mov
push
push
mov
lds
add
mov
fdiv
fstpt
stos
inc
sub
lcall
adc
insl
les
dec
jae
sbb
push
icebp
jl
leave
inc
ror
stos
pushf
add
mov
popf
fldenv
mov
iret
pusha
lret
lods
xor
adc
or
sub
dec
add
sahf
xor
fsubr
pop
xor
stos
rcr
sbb
mov
std
jle
bswap
adc
lret
jnp
jbe
montmul
cmpsb
xchg
push
loope
std
jno
cmc
mov
iret
rcll
enter
shll
notb
mov
dec
adc
sub
leave
jb
sbb
xchg
stos
push
test
xchg
test
push
dec
adc
dec
jnp
or
sbb
mov
pop
lret
movsl
rcll
mov
outsl
push
arpl
pop
call
movsb
mov
pop
or
fistpll
inc
xor
jmp
push
data16
mov
mov
scas
push
fmuls
pop
mov
test
adcb
push
repz
imul
pop
cmp
adc
popa
fwait
shrl
cld
mov
repz
nop
inc
or
or
cmc
fiadds
or
mov
mov
lds
lods
inc
sub
rcrl
sub
and
xchg
mov
sbb
pop
aam
mov
dec
or
mov
xor
movsb
imul
xchg
xchg
icebp
rclb
sbb
sbbl
pop
jg
fcompp
push
repnz
add
add
push
xchg
cltd
jmp
je
or
popa
and
adc
dec
add
push
enter
push
stos
pop
cltd
pop
shrb
xchg
xchg
or
dec
in
test
ficoms
mov
add
jmp
xchg
lock
cmpsl
mov
xchg
aad
enter
sbb
int
inc
lods
call
sub
mov
and
pop
cltd
adc
mov
xor
pop
jmp
fcomi
fisubrl
imul
dec
jle
loopne
pop
cmp
mov
mov
bound
lret
notb
pop
aas
es
xor
cltd
in
in
popa
cwtl
xor
mov
dec
leave
insb
inc
js
pop
mov
stos
aaa
jp
movb
pop
js
pop
paddw
mov
dec
inc
mov
daa
lock
sub
popf
sub
mov
inc
fstpt
and
hlt
jp
nop
mov
rcrl
movsb
push
sarl
mov
pop
mov
test
or
fsubrp
sti
and
in
bound
imul
bound
or
sti
aad
jle
mov
popa
sbb
shll
mov
cmp
decb
lahf
lds
push
pusha
stc
test
sti
xor
mov
cltd
lahf
nop
shlb
mul
mov
imul
out
pushf
imul
push
popa
out
stos
push
mov
jo
pop
insb
mov
in
roll
cmpsl
ret
std
xor
pop
sub
outsl
mov
insl
jo
xchg
xchg
iret
shrd
jno
test
jle
sahf
in
pushf
xchg
or
mov
mov
or
xor
dec
clc
lock
lods
or
mov
in
mov
dec
pop
jo
outsl
xchg
nop
outsb
icebp
lahf
rcl
std
mov
add
sbb
leave
jmp
out
jnp
or
mov
push
mov
call
pop
stos
pop
cwtl
outsl
jmp
mov
xor
push
or
lods
jecxz
push
icebp
add
dec
fisubl
imul
sbb
bound
pop
or
insl
jl
cmp
jo
aam
mov
imul
xlat
inc
js
mov
cwtl
lock
data16
mov
inc
clc
pop
subl
mov
inc
call
sahf
pusha
test
lods
mov
repz
test
mov
lea
fwait
xchg
cmpsl
push
ret
orl
add
sub
test
xchg
sbb
sbb
ja
sti
fcompl
mov
hlt
call
cmp
jg
pop
push
pop
or
pop
insl
inc
dec
mov
mov
test
push
xchg
gs
or
xchg
fsubs
jle
stos
add
mov
mov
mulb
xchg
jns
cmp
xchg
mov
push
mov
jne
ja
in
and
faddp
sub
pop
gs
int3
out
fistl
in
adc
rcrb
and
mov
mov
mov
adc
adc
testl
adc
pusha
jae
mov
popa
inc
inc
inc
lds
and
in
adc
and
cmp
loop
mov
stos
pop
iret
movl
fisubrl
fsubr
lods
stos
pop
jo
sub
in
push
aad
mov
dec
insl
stos
xor
xchg
ljmp
mov
repz
or
in
ficomps
pop
insl
out
gs
sub
fwait
mov
bound
sbb
mov
aad
jbe
pop
stos
sub
sahf
lret
xorl
xchg
add
lcall
pop
or
bound
push
xlat
lahf
fsubrp
stos
repnz
jo
dec
inc
fcompl
jbe
setb
shrb
shrl
mov
lahf
scas
loopne
in
fcoms
pusha
sub
mov
out
std
mov
mov
lret
les
jecxz
test
imul
scas
sub
sub
xor
jge
push
repz
mov
cmp
pop
jae
xchg
mov
sbb
mov
subb
stos
xlat
push
fiaddl
mov
mov
xchg
imul
xchg
test
mov
pop
test
js
cmp
in
test
push
jo
xchg
and
mov
jae
cli
addr16
push
lret
or
jmp
int3
daa
repnz
enter
push
outsb
sub
pushf
mov
fcoms
test
jne
rolb
sub
fnstenv
mov
dec
cld
mov
test
hlt
test
ret
or
stos
int
add
hlt
loope
pop
xchg
mov
loopne
mov
clc
ret
hlt
out
pop
pushf
clc
gs
sub
add
pop
jl
loope
ret
rcl
int3
neg
lods
jmp
orl
stc
addr16
jno
jg
rcrb
or
or
xor
pop
mov
pop
insb
ss
test
pop
jl
or
mov
fnstsw
adc
movq
nop
mov
iret
bswap
push
xor
ljmp
leave
shll
adc
mov
mov
mov
lcall
jb
in
jp
push
cmp
nop
aas
clc
loopne
xchg
add
inc
hlt
cmp
dec
subl
push
adc
into
lea
icebp
or
cmc
xchg
les
xor
cmp
xor
shr
mov
stos
mov
pop
in
fmull
sub
movsl
pop
mov
cld
inc
pop
mov
roll
cmp
clc
mov
jae
test
and
test
jbe
sub
bound
mov
jo
jo
enter
rclb
push
add
pushl
xchg
cmpsb
test
and
scas
jcxz
push
sub
sub
loop
scas
sahf
sahf
ja,pt
ja
ljmp
fidivrl
cmp
in
and
nop
dec
cmc
adc
dec
adc
push
test
outsl
xchg
imull
pop
iret
loope
aam
and
mov
cwtl
inc
xchg
incl
cmc
lret
sbb
or
cltd
sbb
inc
test
add
addr16
mov
adc
bound
jg
or
lods
mov
mov
sub
adc
jno
add
je
pop
jp
loopne
push
inc
adc
cmc
bound
cmpsb
je
jge
into
or
jge
shll
insl
xorb
cmp
pop
mov
or
loopne
test
mov
adc
ss
and
inc
inc
add
dec
xor
lods
cmpsb
into
dec
lret
es
jle
cld
lret
or
out
mov
inc
mov
incb
jp
inc
outsb
iret
pop
mov
lds
imull
sti
dec
mov
jo
lahf
sub
sub
int3
pop
cmpsl
xorb
pop
add
cmp
mov
mov
jecxz
outsl
xor
les
sub
xchg
push
mov
frstor
add
dec
rolb
xchg
lods
hlt
data16
cwtl
pop
sti
dec
mov
mov
inc
xacquire
dec
mov
mov
mov
or
mov
fdiv
add
cmp
adc
cmp
or
jne
pop
jno
lcall
mov
or
inc
ss
and
mov
pop
call
pop
icebp
mov
cmpsb
imul
adc
inc
js
mov
lea
add
stos
scas
pop
iret
push
mov
mov
mov
ds
js
dec
xchg
sbb
xor
ds
jmp
scas
jg
and
mov
pop
or
inc
xor
mov
in
cli
mov
in
aam
aas
sarb
push
dec
xlat
jb
push
add
pop
js
or
add
ljmp
lods
xlat
outsl
icebp
xchg
mov
fwait
mov
mov
and
repz
stos
cmp
aaa
lds
pop
test
and
enter
arpl
ja
sub
pushf
push
aad
sbb
in
into
sti
dec
jg
decb
in
adc
mov
jge
xlat
add
data16
jl
loopne
andb
fxam
in
negl
shrl
clc
sub
adc
and
jns
push
mov
sub
add
sub
imul
add
inc
pop
cmp
or
leave
cmp
cwtl
insl
inc
xor
popa
fwait
insl
pop
inc
cmp
push
cli
pop
sbb
push
je
outsl
out
in
inc
push
rorl
dec
xchg
pop
xchg
or
and
cli
icebp
cmp
pop
fcomp
cltd
loopne
and
or
outsl
imul
stc
mov
inc
nop
jno
xchg
sub
inc
in
mov
mov
sbb
xor
inc
hlt
imul
movsl
sub
sub
lcall
ds
ret
test
mov
xor
aaa
hlt
inc
scas
pop
jno
or
enter
cmpsl
test
sahf
xchg
repnz
mov
xchg
and
mov
xchg
adc
ds
push
fdivrs
les
in
movsl
das
fnstsw
dec
arpl
mov
mov
fstpl
mov
addr16
fwait
aas
stc
sbb
mov
sbb
add
repnz
push
data16
cmpl
lret
outsb
cltd
xor
cmp
out
jne
cmp
aaa
into
adcl
xorb
pop
and
cltd
sub
cmp
inc
pop
movsl
or
rcll
or
inc
pop
lret
stos
rcrl
sahf
fcomp
stc
push
scas
cli
or
ss
pop
rcl
mov
ficoms
pop
in
shll
push
fimuls
adc
dec
sub
xchg
fsubr
cmp
xor
clc
cmp
sbb
mov
add
stos
cli
xor
out
and
stc
test
mov
mov
idivb
mov
sbb
pop
push
pop
push
jo
rorb
ret
loop
adc
sub
test
int3
xchg
ds
enter
push
jmp
sti
jecxz
xor
jmp
or
cmpsl
lock
iret
cmp
dec
cld
lret
das
cltd
add
cld
push
push
jbe
dec
cli
jbe
cmp
imul
mov
nop
into
or
xchg
inc
fbld
cmpsb
pop
push
aaa
ss
inc
repnz
xchg
mov
and
cld
aaa
pop
nop
ljmp
adc
int
cwtl
adc
cli
jno
mov
mov
hlt
add
in
dec
sbb
xchg
adcb
push
xchg
add
jne
movsb
cmpl
or
int
sub
cltd
xchg
pop
adc
scas
ljmp
cmp
inc
sub
pushf
adc
adc
iret
sbb
icebp
lods
inc
ret
call
sub
jns
enter
lcall
out
fdivl
andb
pop
push
jge
push
imul
xor
fisttpll
repnz
and
lods
or
test
cmovge
xchg
pop
mov
mov
inc
lods
cmc
jmp
inc
in
mov
pop
nop
cmp
inc
mov
adc
xchg
adc
out
loope
push
mov
insb
xlat
xchg
add
lods
fs
shr
call
in
ret
push
mulb
jns
popf
loopne
repz
push
bound
insb
xor
mov
or
lcall
xchg
mov
push
cmp
mov
out
rcrl
imul
lcall
cmp
nop
call
lcall
mov
out
mov
test
mov
stc
popa
orl
cld
les
sahf
in
xor
lret
lahf
xlat
jg
lods
pop
mov
shrb
adc
jae
or
mov
xchg
mov
sbb
mov
pop
xor
dec
push
and
cld
lods
xor
sub
mov
notl
mov
sub
mov
mov
push
sarb
xchg
adc
pop
stos
js
sub
in
push
mov
es
cltd
cmpsb
popa
mov
fistps
sbb
add
sarl
mov
jne
push
rcrl
jmp
mov
popf
fwait
mov
stc
aad
popa
push
push
add
fucom
and
mov
push
pop
mov
pop
pusha
repnz
inc
or
xor
icebp
stos
mov
xchg
outsl
mov
add
in
insl
aas
mov
cmp
jns
inc
gs
jle
xchg
pop
pop
jnp
sbb
pop
jp
add
push
fwait
ss
adc
ret
ret
mov
insb
clc
dec
aam
sub
hlt
leave
pop
and
lods
inc
mov
dec
push
xchg
dec
xor
cltd
hlt
mov
push
decb
and
lcall
push
sub
hlt
xchg
cmp
sbb
in
pop
sub
xor
mov
mov
sbb
jp
xchg
mov
pop
pop
scas
push
cwtl
test
dec
push
data16
xor
pusha
into
inc
xchg
push
daa
aam
ja
sahf
pop
adc
js
js
xchg
arpl
sub
push
cld
test
cmp
lds
call
jb
movsl
ror
fsubl
lcall
dec
xchg
inc
mov
pop
insb
dec
rolb
pop
bound
loopne
mov
inc
aas
push
pop
rcl
fwait
roll
pusha
fbld
jecxz
lds
inc
push
jns
shll
pop
xchg
inc
push
jmp
ss
xor
sub
pushf
mov
fisubs
jns
inc
mov
ret
cltd
insl
je
and
pop
in
gs
pop
cmp
sub
movsl
std
in
dec
dec
cmp
pushf
xchg
mov
aam
insb
pop
mov
add
not
xor
nop/reserved
cmp
insl
cmp
dec
movsl
inc
stos
fstsw
cmc
dec
mov
fdivrs
rcl
repnz
bound
adc
pop
test
and
sub
data16
leave
popf
outsl
scas
sbb
lcall
loop
shlb
repnz
int3
imul
mov
ljmp
push
mov
or
aam
test
rcrl
dec
data16
xchg
aaa
add
or
clc
sti
loop
repnz
cmp
subb
pop
mov
es
add
bnd
pop
outsb
clc
push
cmp
jnp
and
test
andb
dec
sbb
pop
outsl
cld
jmp
mov
scas
loopne
cltd
cmpsl
jbe
pop
mov
into
push
out
je
bound
and
jmp
movsl
dec
mov
imul
jno
in
add
movsb
push
fdivs
cli
ss
les
lods
mov
cmp
add
pop
jp
jmp
out
pusha
jno
mov
repnz
mov
psrld
cmp
cltd
repnz
xchg
and
cmc
xor
and
mov
loop
out
jg
inc
push
mov
push
aas
mov
cld
imul
rcl
out
dec
aam
loop
inc
lcall
cmpsb
xor
cltd
movsl
fimuls
rclb
and
sbb
fstpt
jecxz
repz
aad
imul
cmp
mov
sbb
les
pop
xor
in
add
add
or
dec
addl
cld
xor
lret
xor
sbb
movl
pop
xchg
adc
insb
test
jg
pusha
mov
pop
faddl
daa
call
test
jns
xchg
pusha
subl
gs
jb
aam
jle
xchg
mov
pop
inc
adc
out
inc
out
mov
repnz
and
jno
xlat
scas
outsl
sbb
xchg
filds
mov
int
andb
out
pop
repnz
adc
xor
mov
mov
lds
nop
test
jl
cmc
int
or
movsl
shlb
cmp
ja
cltd
sbb
inc
rcr
mov
outsl
aaa
or
jbe
mov
pop
fisubrl
in
jg
push
lret
lock
ja
sub
sbb
cmpsb
cli
in
sub
jmp
or
sub
sbb
icebp
pop
xchg
popf
leave
mov
fs
xor
adc
pusha
inc
out
fdivrl
sub
cmp
sahf
clc
cmp
dec
push
pusha
test
cmp
xchg
in
push
mov
cwtl
js
mov
int
or
dec
or
mov
in
out
dec
popa
cmp
add
or
xlat
ss
inc
filds
jl
shlb
icebp
inc
sub
outsl
add
pop
hlt
icebp
adc
leave
aad
mov
mov
mov
jbe
lret
mov
dec
cmp
mov
dec
mov
push
iret
sti
stos
outsb
shrl
cmp
xchg
mov
inc
inc
add
cmpsl
dec
cltd
and
fwait
and
scas
mov
inc
testb
nop
mov
arpl
xorl
rcrb
imul
jge
cld
sub
aas
xor
mov
stos
data16
jb
xorl
arpl
dec
sub
scas
pop
mov
cli
rcrb
loopne
ljmp
cmpsl
jo
and
xchg
imul
mov
adc
jecxz
leave
enter
lahf
adc
or
cmc
cmpsb
jg
add
ror
push
xor
xor
add
cmp
fwait
xchg
mov
cld
adc
mov
frstor
sti
ret
ret
loope
data16
sub
pop
add
bound
inc
push
push
mov
push
in
mov
rcll
int3
mov
cmpsb
cwtl
pushf
icebp
add
mov
mov
insl
xchg
cmp
imul
adcb
cmpsl
mov
xchg
xchg
dec
andl
iret
xchg
fmull
mov
ror
jecxz
pop
daa
sub
movsl
cmp
xchg
test
xchg
inc
add
gs
mov
xchg
fwait
or
sbb
cmp
mov
xor
iret
or
arpl
stc
push
clc
stc
sub
sbb
mov
xor
push
cmp
lea
out
jne
add
iret
sbb
mov
cmp
add
jg
in
add
or
jnp
test
inc
push
mov
mull
adc
lret
fimuls
sbb
xchg
dec
jg
xor
in
inc
inc
sub
shll
mov
fdivrl
loop
adc
push
jle
fisubl
lods
push
jae
aaa
fcoms
je
bound
push
int3
pop
mov
sub
je
ret
mov
pop
cwtl
cmp
je
lock
sbb
pop
jno
test
push
jle
pop
xchg
mov
popf
das
outsb
popa
lahf
outsl
movsl
rolb
adc
adc
test
subb
adc
scas
lea
das
pop
mov
xchg
lds
xor
mov
cmc
in
lcall
dec
jecxz
add
sub
and
inc
sub
dec
addb
lds
insl
mov
clc
xor
negl
div
cmpsl
mov
cmp
repz
push
ds
clc
sbb
sti
push
jecxz
lahf
dec
fstpl
push
cmp
loop
out
or
cmp
mov
xor
xchg
xchg
in
or
or
shlb
std
fisttpll
mov
mov
or
daa
fstp
sub
sbbl
aam
sub
jmp
mov
dec
sarb
add
jo
add
nop
iret
mov
pop
mov
xlat
mov
cs
xor
mov
je
js
cltd
xchg
inc
imul
push
mov
inc
and
jb
sbb
xchg
jo
je
cmp
dec
mov
xlat
test
pop
testl
sub
iret
push
flds
inc
addr16
push
scas
add
cmp
inc
loope
std
and
lret
je
fucomip
xchg
jne
aas
inc
icebp
nop
mov
pop
nop
pushf
push
mov
and
xchg
pop
in
scas
pop
lds
mov
push
aam
faddl
mov
in
leave
mov
hlt
mov
mov
inc
cmp
pop
inc
sub
shlb
in
pusha
lahf
mov
cmpsb
std
out
and
cmpsb
sub
into
xchg
sub
sarl
fdivrs
add
loopne
inc
inc
pop
mov
cmp
cmp
pop
ficoms
mov
call
mov
cmc
test
clc
lcall
fnstcw
inc
push
sub
stc
lods
push
cmp
or
and
movntps
jmp
pop
push
jbe
and
popf
or
loope
adc
sub
pusha
psrlq
je
cmpsb
xor
das
add
stos
stos
sub
rolb
repz
xchg
or
ror
outsb
pop
mov
push
scas
sbb
jns
faddl
cld
mov
jl
add
sbb
mov
mov
and
mov
adc
push
ret
push
popa
pushf
xchg
dec
xor
jo
orb
push
ret
pop
xchg
mov
or
jae
inc
mov
out
inc
lea
cld
daa
lock
je
mov
adc
std
lret
dec
out
jo
mov
lret
jg
cli
fcomi
push
push
sbb
lock
mov
push
inc
imul
cmp
testb
cmp
or
dec
jle
cmp
scas
pushf
cli
in
adcb
sub
out
daa
xor
rolb
mov
inc
pop
xchg
popf
mov
mov
or
mov
push
xchg
jmp
ficoml
adc
push
nop
jg
out
mov
or
negb
mov
cmp
imul
shll
inc
in
test
add
sbb
lret
movsl
scas
adc
jb
lea
addr16
lds
xchg
ja
mov
clc
iret
or
add
scas
pop
mov
fistpll
repz
cmp
addr16
aas
test
outsw
shrb
shl
jnp
sub
int
mov
pop
nop
aas
sti
mov
cmp
scas
movsl
and
xchg
mov
hlt
xor
sahf
mov
mov
aad
push
mov
ja
jmp
sbb
mul
jnp
cmp
data16
movsb
adc
dec
mov
cli
imul
adc
stc
fcoms
cmc
cmp
test
dec
aaa
rolb
mov
int3
test
pop
xlat
mov
mov
adc
push
shll
inc
cmp
fs
mov
mov
push
into
int
push
loopne
test
insb
dec
jp
subb
push
popa
insl
dec
notb
mov
cmp
stc
rcrb
dec
jge
insb
sarb
xchg
jmp
nop
inc
into
cmp
jns
scas
push
sbb
mov
nop
lahf
jge
std
scas
je
cmp
xchg
ja
add
push
and
lock
jmp
gs
jecxz
pcmpeqd
fistps
pop
cmp
jno
in
or
mov
adc
loope
xlat
test
testb
add
imul
push
lret
jb
sahf
adc
add
lock
in
roll
rcr
and
pop
inc
insl
pop
leave
xlat
push
setne
inc
ret
imull
std
push
push
and
fs
addr16
sub
push
jge
push
shrb
xchg
out
outsl
xlat
or
pop
push
push
pop
cmp
scas
mov
mov
mov
fistps
in
add
aam
es
push
lcall
stc
sbb
cmpsb
je
fs
jle
mov
lahf
lret
push
pop
add
mov
push
les
add
sbb
pop
add
add
inc
orb
lods
fdivrl
je
lods
inc
xchg
inc
sbb
lahf
fcomps
or
pop
popf
popf
push
mov
int
aaa
inc
add
cmp
and
sub
sbb
push
dec
jp
mov
inc
dec
ds
sbb
add
cwtl
add
into
xchg
jp
subb
ljmp
ljmp
push
pop
cli
es
sbb
aam
and
xor
int3
mov
dec
push
ljmp
test
lahf
std
sbb
mov
dec
xchg
mov
ret
add
mov
and
or
jecxz
out
or
daa
in
inc
adc
cltd
adc
ljmp
and
xchg
aaa
out
in
mov
lock
stos
icebp
lret
push
fdivs
fsts
ret
test
negl
jb
xchg
adc
adc
mov
shr
xchg
in
jl
loope
pop
fcmovu
imulb
fists
xchg
mov
fnstcw
stos
in
xchg
inc
dec
adc
scas
arpl
mov
and
clc
pop
mov
xchg
jle
ljmp
inc
xor
or
mov
sbb
mov
or
push
loopne
and
inc
sti
and
rclb
cld
imul
adc
inc
and
sbb
popf
ss
pushf
dec
sbb
pop
dec
nop
out
imul
sahf
lods
dec
mov
daa
leave
lea
xchg
and
mov
addr16
adc
jo
mov
sbb
sub
push
dec
push
stc
push
test
xchg
and
data16
data16
aas
xor
shrb
sarl
mov
pop
or
xor
cmpsl
int3
andl
xchg
out
and
testl
sbb
psubb
or
in
cwtl
push
insl
movsl
stc
and
test
xchg
pop
lock
adc
popa
xchg
les
cld
xor
add
sbb
inc
jl
inc
jl
push
jg
xchg
dec
dec
jno
data16
mov
nop
xchg
jle
push
xchg
pop
dec
jnp
jo
std
push
push
and
mov
cmp
jne
rorb
pop
jp
or
shll
xor
inc
push
pop
lock
lahf
mov
and
fwait
idivl
jae
mov
das
ficompl
mov
inc
push
sub
clc
mov
rorl
mov
int
test
xor
ljmp
pop
aad
lret
dec
clc
aas
rcll
jle
xor
popa
daa
lret
pop
loopne
popf
xlat
dec
subl
into
lods
jno
xor
xor
ja
push
inc
ja
xor
cmpsl
xchg
lahf
pop
jl
js
test
icebp
mov
cmpsb
jae
fdivrs
enter
insl
pop
sub
lea
ret
pop
xor
xchg
in
imul
movsb
in
mov
mov
pop
adc
movsb
push
mov
rol
inc
xor
ss
jbe
in
or
inc
fildll
dec
fiaddl
fucomip
xor
loopne
mov
mov
xchg
lea
add
cmp
sahf
popf
jp
cmp
jb
lods
scas
add
mov
pusha
cltd
jno
test
mov
orb
adc
cmp
push
lret
dec
adc
repz
cld
addr16
mov
aad
sbb
add
jae
cmp
xchg
call
ja
pushf
pop
scas
mov
mov
fstl
sbb
loope
inc
inc
mov
imul
fsts
insb
in
popa
shrd
dec
repz
loop
xlat
lret
mov
testl
pop
or
mov
pop
shrl
pop
fldenv
sbb
push
add
inc
and
or
jge
inc
inc
xor
fs
aad
jae
sbbb
repnz
ds
xchg
mov
lahf
push
xorb
cwtl
mov
psubq
popa
cmp
cld
inc
push
adc
and
arpl
fcomp
inc
push
add
cs
popf
jge
ret
xor
mov
or
sbb
inc
pop
insb
pop
mov
lock
dec
sbb
fwait
test
cmpl
out
jo
mov
and
cmp
sub
repz
loopne
xchg
mov
ja
std
dec
xchg
pop
mov
popf
adc
inc
push
clc
das
enter
sub
jne
xchg
movsl
push
lahf
adc
xchg
popa
imulb
pop
arpl
mov
xor
xchg
push
clc
add
clc
fdiv
sbb
inc
sbb
mov
mov
push
dec
inc
xor
mov
outsl
roll
aas
sbb
push
mov
aam
cmovbe
xchg
mov
xchg
pop
lock
dec
addr16
inc
repnz
popf
mov
std
fst
push
mov
mov
dec
dec
cmp
sti
rcrl
inc
fisubrs
and
adc
dec
rcr
add
dec
movsb
pop
mov
sbb
sbb
mov
sahf
dec
push
out
mov
inc
pop
inc
loopne
cmp
mov
xchg
ljmp
push
stos
insl
movsb
lea
jmp
es
mov
dec
inc
bound
jmp
aaa
ds
and
pop
sub
push
pop
xchg
pop
fiadds
lods
inc
repz
add
inc
xor
dec
xor
pop
pop
mov
sbb
aam
lea
loopne
addr16
cmp
fdiv
mov
push
shl
lods
cmpsl
ret
popf
mov
addr16
stos
or
pop
adc
repz
aad
xor
cmp
cmp
sbb
pop
popa
pop
push
rorb
stos
ficomps
dec
jne
and
xor
cs
sub
and
sub
fldl
and
lods
jp
gs
fpatan
rcl
out
mov
popf
xchg
or
sti
stc
popf
jl
imul
test
add
data16
add
aad
aam
and
pop
lds
inc
pop
inc
fnstcw
xorb
mov
dec
or
mov
rclb
xor
aas
cld
mov
mov
cwtl
adc
push
test
popf
mov
setge
or
push
pop
jnp
mov
lahf
ret
mov
cmp
and
xchg
jge
mov
xchg
mov
fstl
pop
cmp
sbb
std
fimull
cmp
dec
mov
sbb
sbb
or
add
mov
bound
adc
pop
mov
pop
std
lcall
addr16
sub
ficomps
mov
xlat
scas
push
pop
push
adc
xchg
adc
push
lahf
push
cs
rorl
out
sbb
cmp
push
inc
push
mov
mov
outsb
lods
les
xchg
mov
inc
adc
and
mov
das
add
fdivs
pop
jnp
daa
insb
cmp
adc
sti
ljmp
loopne
mov
fisttps
repz
mov
mov
mov
xchg
cltd
adc
lds
sub
subb
ret
dec
rcr
mov
mov
in
add
pop
iret
xlat
movsl
pushf
loope
pop
xor
mov
enter
lods
inc
mov
fcoms
xorl
mov
repnz
push
xorl
push
scas
lret
mov
test
add
daa
aam
xchg
adc
gs
push
mov
dec
popa
jge
imul
xor
push
pop
sub
push
xchg
mov
dec
add
std
cmp
cltd
orb
sub
cmpps
xor
sbb
sbb
push
mov
pop
jo
cmp
pop
ret
adc
and
rolb
aaa
mov
xor
mov
les
test
mov
popa
loop
mov
out
inc
jo
xchg
jl
sbb
mov
aaa
aad
xchg
cs
pop
inc
rorb
shlb
xchg
inc
shrl
xchg
dec
lods
fstpl
pop
xchg
inc
xchg
std
loopne
inc
data16
loopne
call
jb
xlat
mov
mov
add
sti
adc
subl
arpl
in
mov
and
nop
test
cmpsb
mov
inc
out
mov
aam
mov
insl
in
arpl
lods
fisttpl
mov
push
xchg
call
inc
sti
pop
iret
shl
xor
dec
mov
push
mov
and
inc
dec
mov
mov
or
pop
jl
inc
mov
mov
pop
inc
jecxz
xor
std
xchg
out
xchg
repnz
testl
inc
clc
in
inc
insl
dec
mov
daa
jns
fst
jmp
out
fdivrl
push
mov
leave
jns
in
jns
dec
das
out
sbb
inc
daa
dec
lods
dec
jnp
les
sub
cmp
sbb
fists
in
insb
adc
xchg
xlat
fdiv
jg
fst
xor
cmc
sahf
cld
decb
sbb
lret
cmp
mov
shll
test
mov
jg
push
shll
enter
addr16
iret
add
sub
xchg
ficompl
lcall
scas
mov
jmp
outsb
scas
mov
movsb
in
or
jno
jp
test
cmp
sbb
inc
aaa
insb
sarl
jge
shlb
adc
mov
lret
xchg
push
add
mov
xor
xchg
mov
jb,pn
repnz
xchg
lret
iret
mov
mov
inc
jecxz
test
cwtl
mov
pop
jle
inc
mov
adc
xchg
mov
push
xchg
mov
gs
aas
xor
cmc
adc
jnp
jle
mov
mov
icebp
test
dec
clc
popa
mov
test
inc
das
lahf
mov
add
cs
push
lahf
dec
scas
mov
inc
sbb
jmp
push
mov
lret
pop
pop
gs
in
add
adc
push
mov
cmp
xor
ret
testb
xor
stos
mov
sub
adc
insl
test
scas
pop
sub
cmpsl
mov
cmp
mov
jnp
and
loop
call
xor
add
push
dec
sub
mov
fstl
les
xlat
sbb
stos
xor
sbb
out
mov
imul
jge
js
sbb
lds
mov
repnz
xchg
push
sbb
aam
hlt
lret
jb
pushf
pop
pop
cmpsl
xchg
sub
hlt
mov
xlat
int
popa
jo
repnz
dec
scas
aas
idivb
mov
xchg
push
push
push
sbb
lds
push
je
jg
icebp
arpl
dec
xor
push
out
lret
mov
enter
xchg
aad
xchg
scas
js
xchg
clc
xchg
mov
inc
push
jno
push
push
mov
xchg
mov
cwtl
xor
ret
lods
fnstsw
or
jmp
gs
aas
push
inc
jge
mov
jne
mov
mov
push
xchg
cmp
loop
jo
pop
pop
pop
inc
cwtl
inc
sbb
push
xchg
aaa
inc
push
pop
push
lds
addb
idivl
jo
add
mov
cmpsb
fdivrp
test
sti
dec
sub
xchg
andb
shl
dec
rorw
fstpl
mov
nop
iret
shlb
pop
jg
push
jle
pop
xor
out
jecxz
clc
popf
aam
add
jmp
lds
cs
xor
shrl
dec
or
xor
inc
push
pop
jnp
jo
aaa
jbe
inc
mov
inc
sbb
push
inc
pop
stc
test
es
sahf
into
fsubrl
dec
mov
dec
xor
aaa
xchg
xlat
sbb
cwtl
mov
and
negl
and
outsb
test
jns
cmp
sarl
sbb
xor
daa
ds
in
je
or
jge
decl
add
sub
mov
mov
adc
inc
dec
xor
xor
push
shlb
push
cmp
jno
mov
mov
push
push
cmc
xor
fidivs
js
in
mov
jmp
mov
mov
arpl
adcb
mov
sub
fisubrl
int
add
test
loop
cmpsb
f2xm1
adc
jecxz
jo
push
dec
push
xchg
in
sbb
pop
int3
subb
ss
pop
or
mov
pop
jp
aaa
in
scas
and
mov
inc
pop
cli
and
cmpsb
cli
and
mov
out
adc
cs
enter
stos
mov
fcoms
nop
mov
ficoms
xor
inc
xchg
std
and
icebp
pop
or
rorb
rclb
pop
sub
scas
adc
push
lcall
push
lods
pop
jb
xor
pop
jne
xor
cltd
jle
repz
pop
ss
pop
cmp
rorb
int
mov
cld
je
push
mov
add
mov
jmp
adc
das
adc
mov
and
mov
mov
xor
mov
std
addr16
lea
cmp
dec
inc
pop
inc
add
rcl
mov
sbb
push
je
push
mov
xchg
add
mov
xchg
sbb
pop
lods
dec
into
lea
jp
xchg
popa
sub
pop
test
mov
dec
scas
int
frstor
rolb
dec
xchg
cwtl
jmp
pop
xor
jne
loop
cld
fwait
push
pop
js
xor
bound
jae
ret
stos
arpl
cmp
and
pop
inc
testl
scas
sub
enter
daa
and
scas
sub
mov
test
sub
xchg
fcmovnbe
std
dec
int3
cmp
mov
and
push
sub
ret
mov
adc
dec
jae
xor
stc
add
lds
into
mov
push
nop
cmp
push
xor
jb
add
outsb
dec
mov
lret
xchg
arpl
outsl
cmp
xchg
std
xchg
dec
ds
jmp
cs
push
icebp
jae
fcmovb
loope
jg
je
mov
mov
aam
and
pop
mov
lea
jno
lcall
outsb
dec
cmp
add
hlt
cmpsb
adc
add
repnz
movsb
and
add
mov
jmp
sbb
xchg
pshufw
fmull
in
sti
jmp
imul
fbld
push
xorb
icebp
push
inc
int3
shl
in
popf
push
outsb
loop
test
and
push
ljmp
inc
leave
sub
arpl
out
ljmp
pop
ret
out
xchg
adc
es
cmpsl
xchg
mov
jns
lock
xchg
bound
cmp
mov
jnp
dec
push
push
dec
push
lret
inc
out
lret
xor
ret
shll
sub
push
adc
dec
jge
fs
fs
or
loope
popa
imul
ficoms
push
outsl
fildll
dec
in
cmpsb
push
into
mov
pop
in
popa
mov
jo
test
lock
xor
inc
mov
repnz
push
cmp
mov
mov
mov
in
stos
add
push
stos
xchg
cmpsb
inc
sub
xor
mov
negb
rol
into
add
cmpsb
rcrb
fldl
imul
pop
mov
in
scas
ja
xor
dec
sub
sub
jge
mov
mov
out
pop
andb
mov
test
lret
andl
push
mov
xchg
insb
mov
jns
enter
stos
outsl
mov
mov
cmp
mov
lret
pop
in
jo
loop
aas
and
pop
inc
lcall
pop
movsb
out
cs
int
or
shrb
dec
xchg
mov
mov
pushf
int
push
addl
dec
jge
loopne
flds
lock
dec
cmp
out
lahf
adc
add
gs
jecxz
push
add
xorb
ja
or
pop
push
push
stos
dec
or
mov
pop
nop
cmp
arpl
fs
into
xchg
or
xor
mov
jo
shl
mov
cmp
nop
pop
mov
lret
dec
jbe
aam
cmp
pop
pop
test
cmp
pop
and
roll
cmp
push
xchg
mov
jle
xchg
sahf
jge
adc
cltd
mov
push
jmp
adc
add
add
je
stc
loope,pn
jg
idivl
mov
sbb
xorb
aam
data16
sub
xchg
and
dec
jae
notl
cmp
inc
sahf
mov
or
cmpsb
mov
push
push
sub
jecxz
inc
adc
sub
ret
fnop
popa
mov
adc
int3
std
movsl
add
icebp
and
dec
hlt
jns
mov
mov
cmp
dec
jb
push
psubb
inc
mov
jo
mov
dec
push
or
lds
cs
jo
and
jp
fstps
sarl
rorl
gs
sub
jmp
sahf
and
xor
enter
loope
lret
call
push
or
icebp
pop
or
ss
mov
nop
xchg
rcrl
jecxz
cmp
sub
negl
icebp
or
aam
into
sub
mov
shrl
add
imul
pop
pop
test
shr
sub
std
or
push
sub
xlat
mov
and
ds
ret
in
daa
jmp
stc
push
scas
les
jl
and
jns
std
into
out
fcoml
mov
bound
jmp
lahf
or
cs
iret
inc
mov
jg
rolb
cmp
bound
mov
cmpsl
out
mov
test
shll
and
in
pop
pop
dec
jg
dec
stos
orl
sbb
xlat
bound
js
mov
dec
mov
jns
xchg
rcrl
xchg
mov
pusha
mov
jge
sub
sahf
xor
daa
sbb
mov
xor
notl
test
inc
or
out
cmp
xchg
lcall
adc
or
sti
daa
loopne
add
pop
fwait
test
ljmp
or
in
gs
cmp
movsl
icebp
jae
pop
dec
das
jmp
jo
int
mov
or
inc
lods
negb
nop
mov
sbb
and
jmp
test
lock
movl
jb
lahf
out
in
cld
or
sahf
ja
dec
push
aad
mov
nopl
daa
pop
scas
dec
push
aaa
add
scas
push
fimull
int3
mov
insl
dec
jge
and
or
in
insl
dec
stos
or
popa
movsb
inc
pop
adc
shll
xchg
sbb
mov
inc
stos
pop
adc
in
mov
mov
test
aas
push
add
inc
dec
out
loop
sahf
faddp
inc
loop
ds
or
stos
mov
lahf
into
cmp
loopne
loope
sahf
push
mov
out
or
sti
orb
psadbw
in
xor
jbe
or
es
mov
cmc
lea
sbb
adc
lock
adc
out
and
and
inc
jns
jns
mov
jb
fidivl
out
jo
push
int
add
rep
inc
cltd
push
clc
jns
stc
mov
sub
movsb
or
adc
dec
ret
mov
xchg
sbb
outsl
outsl
shll
push
div
mov
fdivs
push
clc
into
mov
enter
popa
inc
mov
test
jae
inc
out
push
or
ret
or
mov
ret
sub
arpl
movsb
sti
mov
xor
arpl
dec
in
out
adc
dec
push
xlat
xchg
mov
adc
cld
jb
xor
fs
lods
cmp
pop
lcall
xchg
mov
aaa
pop
mov
hlt
hlt
addl
pop
lret
int
xchg
push
outsl
pop
imul
loopne
loop
test
icebp
fimuls
mov
or
addr16
cmc
xor
jge
leave
cli
cmp
icebp
pop
sbb
sub
or
notb
cwtl
or
and
jno
ds
imul
sbbb
mov
lret
xor
xchg
xlat
inc
scas
dec
incb
stos
outsb
sub
jae
xchg
sub
mov
dec
js
and
mov
clc
jmp
stos
add
or
jo
jns
stc
xor
mov
mov
cmp
pushf
jns
ja
lock
jnp
cmp
ja
hlt
pop
bsr
aam
cmc
jno
xchg
sbb
pop
pop
ret
ret
push
mov
cmp
frstor
sar
jo
iret
and
je
pop
mov
fs
and
xchg
pop
pusha
lea
fstps
jp
icebp
pop
jp
mov
div
xor
mov
or
pop
xor
inc
xor
hlt
and
xor
push
in
jns
push
lahf
xchg
xchg
dec
stc
jp
push
xor
call
sbb
in
xchg
and
mov
addr16
clc
bswap
sub
cmp
icebp
pop
jmp
loop
imul
decl
push
sahf
adc
dec
or
push
jb
pop
cwtl
mov
je
sub
adc
dec
cmp
sbb
es
stos
ss
push
pop
in
imul
ds
pop
scas
push
cmp
xchg
jns
data16
mov
sub
hlt
int3
in
cmp
mov
aas
sub
xor
cmpsl
cmp
jmp
inc
imul
push
mov
in
jbe
mov
jg
cmpsl
and
sahf
jb
mov
fadd
icebp
mov
shlb
sbb
push
iret
lret
fxtract
out
mov
push
testl
jne
in
movsb
inc
sti
inc
dec
enter
int
push
into
mov
call
and
aad
push
int3
lods
cmpb
cmpsl
iret
int3
sti
faddl
mov
addr16
les
add
push
scas
lahf
rolb
hlt
dec
pushl
mov
mov
xchg
and
inc
inc
push
push
xchg
lret
nop
sbb
xchg
insb
icebp
jae
lock
cld
cmc
push
cmp
mov
dec
dec
jle
shlb
iret
mov
inc
and
fwait
pop
sti
xchg
xchg
xchg
cli
or
pop
mov
cmp
sub
imul
push
adc
push
xchg
jmp
xchg
adc
mov
xchg
inc
jge
scas
xlat
pushl
adc
mov
mov
imul
jno
mov
inc
push
pop
es
jecxz
sbb
loopne
push
sbb
and
adc
xor
dec
popa
cld
mov
push
shlb
hlt
mov
sub
es
in
dec
and
out
insl
push
mov
repnz
mov
scas
les
push
add
and
fidivs
scas
cmp
ljmp
stc
stos
add
dec
add
inc
subl
repz
lcall
clc
lods
pop
mov
add
lahf
dec
addr16
insl
xor
lcall
xor
and
pop
pop
fadds
ljmp
dec
sti
das
inc
push
js
sub
pop
or
fldt
jle
mov
fs
mov
sub
add
push
xchg
sbbl
xchg
mov
hlt
pop
sub
scas
nop
sahf
add
cld
iret
shl
xchg
xchg
mov
jnp
mov
imull
adc
and
lret
fdivl
pop
iret
add
test
incb
mov
dec
mov
xor
sub
mov
cmp
movsl
mov
cs
sub
push
fiadds
and
fnsave
jmp
inc
push
sbb
sarb
mov
sub
pop
jge
mov
rclb
stos
mov
mov
outsb
test
or
xor
dec
add
mov
inc
imul
arpl
add
sbb
or
mov
or
rclb
xor
pop
and
push
push
jnp
jl
adc
jecxz
mov
add
add
in
je
sub
jecxz
aas
leave
nop
sbb
xchg
and
jecxz
jle
ficoml
push
add
jmp
test
xchg
test
or
adc
cmp
cmp
inc
jno
xor
cmove
mov
mov
push
pop
jg
sub
inc
pop
in
push
out
cli
jns
dec
sahf
cmpsl
inc
mov
enter
mov
sub
roll
lret
pop
js
leave
xlat
aas
xchg
sti
loop
inc
add
mov
sbb
push
xor
movsl
in
and
pop
leave
push
push
cmp
sbb
adc
cmp
movsb
add
fldl
xor
push
es
fs
adc
jns
popa
std
jo
cli
pop
cli
mov
dec
das
aam
add
int
cmp
insb
lcall
xchg
xchg
adc
cs
and
jle
out
push
lds
adcl
mov
popa
and
mov
fcoms
mov
scas
inc
or
xchg
mov
fmul
or
mov
push
loop
push
test
jge
cwtl
ret
lea
jl
jno
push
mov
popf
jp
sub
cmc
sahf
fbld
push
fwait
push
or
in
sub
cmpl
aas
fistl
outsb
or
or
dec
add
es
adcl
lods
ret
dec
addb
out
mov
push
jge
cmp
push
lea
xchg
jbe
test
sub
insl
insb
inc
loop
sbb
pop
cmpsb
mov
push
push
ficoms
xchg
push
push
jnp
bound
xchg
popf
fdiv
aas
lds
add
inc
mov
shll
mov
or
or
lods
in
or
lds
andl
xor
sbb
mov
std
fdiv
push
jo
jns
rcrl
int3
jnp
sub
clc
movsb
add
mov
and
inc
daa
out
xchg
fcmovb
ret
add
push
mov
dec
les
push
cmp
int3
cli
ljmp
mov
sbb
jne
sub
pop
cmpsl
sbb
adc
gs
mov
in
dec
add
clc
adc
pop
inc
popf
lcall
rcll
xchg
insl
mov
lret
pushf
mov
xchg
and
xlat
adc
scas
or
mov
stos
add
and
jp
sti
dec
xchg
je
xlat
xchg
or
adc
sub
mov
rcr
fadds
rcll
ds
sub
fs
push
or
cli
in
imul
mov
dec
lods
movsb
and
aaa
sahf
inc
mov
outsl
aad
adc
icebp
fstpt
xor
push
or
pop
js
scas
cmp
cmp
jne
and
pop
lret
insl
pop
iret
push
in
pop
dec
jmp
loope
imul
xor
cmp
jo
cmp
jmp
data16
mov
daa
or
jecxz
fcmovnu
daa
sub
ret
fbstp
cmpsb
shlb
jge
mov
fstpl
push
stos
and
std
mov
push
cs
mov
in
lret
divl
push
call
fcomip
dec
cmpsb
xchg
or
adc
xchg
fwait
mov
icebp
sub
dec
out
orl
sub
insl
jmp
or
or
icebp
mov
ret
dec
fwait
xchg
enter
into
and
inc
push
int
jns
mov
cmc
in
sarb
inc
aas
pop
mov
and
jle
out
or
cli
and
mov
xchg
push
in
stos
iret
sbbb
flds
out
adc
cli
pop
mov
lods
lods
xor
jle
or
hlt
clc
ret
repnz
jle
mov
and
mov
xchg
int
outsl
lret
jbe
ret
pop
enter
cmp
std
incb
aaa
mov
xor
in
mov
pop
dec
out
cwtl
stos
cmp
pop
out
xchg
xchg
pop
or
nop
jns
in
cltd
dec
adc
popa
jmp
sarl
xor
inc
loopne
push
popf
in
lds
out
movsb
repz
in
out
fiadds
xchg
repz
cwtl
mov
or
sub
mov
pmaxub
popf
jo
cld
imul
add
sub
add
adc
or
arpl
adc
dec
or
dec
out
mov
lret
mov
and
and
lcall
push
lods
xchg
or
sbb
sbb
rcll
pushf
daa
lahf
sub
pop
lds
push
xchg
dec
in
or
xchg
data16
jmp
push
loope
ss
and
shrb
mov
shl
jns
sub
outsb
dec
dec
das
ret
jmp
lods
mov
xlat
lahf
xchg
mov
or
push
and
js
dec
jge
jno
adc
jb
push
ljmp
sbb
sub
sub
cmp
popa
jbe
mov
outsl
dec
addb
mov
mov
shl
push
movsb
mov
mov
jmp
xchg
fwait
addl
jp
int3
jb
enter
in
xchg
jo
test
pop
pop
mov
stos
xchg
inc
addr16
mov
adc
mov
mov
aaa
jl
xlat
loopne
cwtl
jnp
pop
pop
lods
cltd
gs
mov
stos
test
cltd
aam
ljmp
cmpsl
test
into
mulb
fs
aaa
mov
pop
neg
addr16
imul
fisubrs
push
cld
clc
lcall
ss
mov
lods
add
pop
jnp
jmp
jmp
rolb
or
adcl
add
repz
push
test
mov
lcall
ljmp
mov
add
inc
or
icebp
sbb
mov
push
std
or
in
testl
mov
mov
dec
xchg
xchg
aaa
les
cmp
inc
insl
aas
sarb
ja
das
pop
xchg
mov
das
aam
add
addr16
mov
stos
mov
pop
out
imul
into
fists
adc
pop
push
outsb
das
push
enter
rolb
mov
int3
int3
iret
lds
mov
fisubrl
cmp
xchg
add
xor
testb
ja
mov
cmpb
adc
loop
xor
xlat
sahf
sbb
mov
pop
out
mov
inc
lock
insl
lods
mov
addr16
ljmp
jle
jg
pusha
lea
dec
jnp
jecxz
push
mov
test
out
inc
repnz
adc
jg
sti
mov
mov
hlt
out
fisubs
lahf
add
inc
in
push
and
cmp
dec
xchg
jp
sbb
ja
push
jo
pop
inc
das
sbb
mov
loope
and
mov
out
icebp
push
cmpsb
push
out
adc
stos
push
or
fstpt
mov
out
lock
jecxz
push
notl
or
loope
jbe
das
pop
fisubs
xlat
sti
lcall
push
cmc
sbb
sub
movsl
push
or
dec
inc
xlat
jns
in
stos
sub
jnp
xchg
push
xchg
sti
int
incl
cmp
or
adc
cmpl
test
xlat
sarb
ljmp
inc
cmpsl
clc
or
xor
ret
sbb
les
pop
ror
std
popa
sbb
xlat
lret
add
pop
cmp
fdivl
sbb
pop
dec
jne
ret
out
push
andl
push
test
movsb
push
xchg
fadd
jecxz
push
aaa
jno
jae
dec
sub
inc
xchg
addr16
std
popf
or
outsl
push
mov
lea
xchg
xor
sub
rclb
dec
mov
cmc
push
or
loopne
push
jno
cwtl
sbb
das
lcall
jge
jnp
lret
iret
int
scas
xor
int3
daa
rorb
aam
inc
sub
or
enter
push
mov
mov
pushf
das
inc
pop
add
jge
mov
jbe
pushf
adc
pusha
in
inc
inc
jl
xchg
popa
dec
imul
loope
cltd
popa
addr16
cltd
xchg
test
push
mov
cmpsb
xor
jbe
sub
in
inc
les
xchg
out
test
xchg
and
jb
pop
pop
pop
outsb
add
adc
imul
popf
loopne
cmp
and
sbbl
out
sbb
inc
fwait
push
ret
mov
iret
repnz
cmpsb
dec
cs
xchg
rolb
ret
add
cmp
std
xor
inc
and
cmc
add
sub
enter
out
negb
and
fs
loop
xchg
mov
js
jne
adc
sub
scas
add
adc
popf
adc
dec
pop
daa
or
js
adc
mov
sarb
xor
sub
jbe
add
into
and
adc
imul
cld
cmp
shrb
addl
mul
jo
enter
fwait
sub
int3
dec
lcall
addb
inc
lea
out
jns
sti
mov
ss
and
cmp
dec
dec
stos
pop
cmpl
std
or
mov
lds
mov
mov
mov
push
fnstenv
cli
xorl
mov
mov
dec
mov
rolb
fs
xor
dec
sub
bound
mov
sub
mov
mov
pop
add
xor
sbb
out
sbb
mov
ja
fildll
enter
lahf
and
add
loope,pn
mov
push
rolb
adc
sbb
xchg
pop
mov
push
movsl
cwtl
imul
lret
pushf
mov
cmp
pop
xchg
pop
je
adc
sub
xor
into
pushf
cmpsb
movsb
stc
aam
push
dec
mov
adc
dec
jle
dec
lahf
xor
cmp
js
fnstenv
adc
sbb
mov
mov
inc
mov
inc
popf
sbb
cwtl
loope
pop
aaa
test
xchg
sahf
xor
sbb
fisubs
sub
call
insb
add
lcall
cs
mov
jnp
out
xchg
sub
scas
into
cltd
jo
jle
addb
imul
mov
out
pop
push
push
jns
mov
div
or
dec
xor
mov
mov
lcall
fs
sub
mov
add
jne
cmp
xchg
mov
imul
pushf
jnp
mov
shll
jmp
sar
add
cwtl
in
mov
lds
and
stc
inc
decb
and
pop
and
add
mov
cmc
sbb
jmp
mov
or
ljmp
aam
in
or
enter
jb
data16
sub
adc
sahf
push
push
in
int
jbe
adc
mov
inc
mov
cmp
out
sbb
mov
or
pop
roll
movsl
add
xchg
jns
mov
scas
sub
lods
cli
xchg
mov
int3
mov
and
mov
add
in
sbb
icebp
test
ss
sbb
loopne
mov
jp
std
btc
mov
ss
ds
push
dec
mov
xor
mov
jb
jb
push
adc
fistpll
sahf
cmp
jb
je
and
and
jl
out
inc
les
adc
and
xchg
jp
imul
push
roll
pop
and
rclb
mov
pop
test
pop
je
push
jnp
or
xchg
and
inc
push
test
stos
dec
loopne
into
or
adc
fcompl
mov
imul
fimuls
lea
fisubs
jns
jae
rorl
lods
les
mov
imul
xchg
jp
daa
xorb
mov
call
mov
mov
loopne
shll
outsb
mov
daa
sbb
and
aad
mov
movb
mov
adc
push
icebp
je
and
dec
jo
lahf
std
cmpsl
push
repnz
jp
xor
roll
jno
mov
hlt
add
mov
mov
cld
fidivrl
hlt
mov
fldcw
mov
les
notb
adc
loopne
shrl
scas
hlt
sti
fsts
mov
sbb
push
sbb
xchg
pushl
lea
xlat
dec
int3
test
dec
in
jp
jle
xor
lods
inc
mov
idivb
cmpsb
adc
push
sbb
jecxz
and
movsb
les
jb
adc
push
and
push
and
push
mov
inc
fcmove
sub
call
push
fs
pop
pop
nop
mov
and
mov
pop
js
xchg
cmp
adc
dec
xchg
pop
sbb
xor
mov
hlt
addr16
cmp
repnz
sbb
lcall
ret
xor
shr
sub
cmp
addr16
stc
dec
scas
cmpsb
cs
movsb
out
enter
fbld
out
les
outsl
cmp
cmp
lods
sbb
decl
sahf
inc
jnp
adc
jae
push
add
jae
jl
rclb
xor
jo
ror
sub
aas
mov
and
scas
popa
push
outsl
push
leave
out
sbb
insb
loop
ret
sub
lods
int3
ljmp
sar
stos
sub
or
out
mov
fdivl
ret
adc
cmpl
or
popf
pop
mov
in
dec
lods
idivl
les
rorb
into
dec
jp
imul
aas
adc
cmp
pusha
sbb
dec
jecxz
fyl2x
push
popa
loopne
in
ret
ja
dec
and
mov
push
ss
enter
out
jge
dec
adc
cwtl
rcrl
cwtl
out
cmp
test
aaa
cmpsl
fisttps
testl
in
sarl
mov
fs
mov
pop
lcall
or
enter
and
andl
mov
jne
ret
sub
aam
pop
push
and
adc
movsb
dec
mul
fcompl
leave
inc
test
adc
scas
ds
cmp
fstpt
in
ds
mov
mov
and
xorb
pop
inc
fisttpll
lea
cmpsl
leave
push
pop
inc
cwtl
xor
sbb
or
ljmp
sub
push
insb
adc
pop
hlt
jle
xor
xchg
fsubrs
sarl
pushf
cmpsb
in
cwtl
or
pop
jbe
sub
mov
cmp
xor
cmp
adc
dec
adc
inc
mov
inc
ss
jl
out
mov
push
mov
clc
ljmp
inc
sti
roll
sub
out
xchg
out
push
int
sub
inc
dec
test
les
int3
lret
and
jnp
shrl
mov
insb
sub
dec
push
add
pop
data16
jno
shll
jmp
icebp
cwtl
popa
mov
dec
or
jnp
dec
lret
inc
sbb
push
dec
or
out
scas
int
cmc
cmp
ficompl
and
jnp
mov
les
icebp
xchg
mov
mov
int
or
fsub
sbb
sub
fdivs
bound
fnstsw
mov
mov
xor
add
dec
push
sub
add
out
inc
rcrl
lea
repz
inc
stos
mov
enter
push
int
xor
ret
inc
aas
xchg
and
xchg
push
sarl
lcall
cmp
jecxz
ret
clc
vpsrlw
loope
lds
push
repnz
cli
jo
dec
push
push
inc
add
and
xor
nop
mov
sbb
in
stos
inc
xchg
mov
xorl
fidivrl
push
pop
sub
pop
nop
cmc
out
inc
mov
cmpsl
int3
push
jp
pushf
inc
repz
inc
jge
inc
imul
xchg
mov
sahf
out
sti
and
repz
lret
insb
pop
pop
fiaddl
sbb
sti
pushl
out
lret
or
and
pop
lds
cmpsl
xchg
ljmp
add
pusha
lahf
mov
push
clc
sub
sub
cltd
pop
dec
push
cmpsb
shrl
sbb
add
je
lcall
sub
jbe
sbbb
jge
fbld
into
sbb
adc
mov
mul
push
pusha
and
outsl
cmp
out
or
dec
push
push
std
and
sub
dec
add
movsl
inc
push
cld
and
and
hlt
or
mov
sbb
es
or
sbb
sti
mov
cmpsb
loope
xor
testl
scas
or
jmp
fidivs
fsubs
mov
fldl
movups
popf
loope
cmp
cli
int
out
pop
nop
mov
iret
in
js
push
outsl
push
or
rorl
or
aaa
inc
daa
or
fists
insl
int3
xor
push
ss
in
inc
testb
sub
popf
xchg
adc
scas
inc
in
in
int3
push
push
jge
cmp
jae
mov
fistps
ljmp
mov
imul
lds
in
pop
stc
pop
popa
ljmp
out
mov
sub
cmpsb
jbe
mov
xchg
gs
mov
sbb
bound
sti
jae
movsb
pop
pop
ja
int3
mov
xor
outsl
test
adc
pusha
jge
rcr
mov
lcall
dec
std
ret
jo
outsl
mov
int
movsl
xor
ret
data16
movb
outsb
mov
add
mov
std
std
push
ds
sbb
cmc
leave
xor
daa
call
xchg
lahf
cli
fists
pop
sbb
jecxz
mov
or
xchg
xchg
mov
push
jle
or
xlat
inc
xchg
sub
stc
xlat
xor
in
fcomps
ficompl
and
fsubl
adc
lcall
pushf
gs
adc
push
scas
ljmp
cld
sbb
fadds
xchg
cmp
pop
cmpb
scas
mov
fldpi
pop
cmp
hlt
fs
rol
xchg
lahf
xlat
jl
pop
imul
jbe
rolb
xchg
mov
sbb
out
lods
or
outsl
es
aad
xlat
vpunpcklbw
xchg
dec
pop
in
jl
mov
inc
rorb
xor
sbb
and
cmc
push
xor
and
es
jmp
imul
testb
jo
popa
mov
dec
xchg
aas
xchg
adc
nop
scas
xchg
mov
dec
fbld
cmp
inc
pushf
test
addr16
hlt
iret
sub
call
mov
rcl
dec
aas
mov
dec
lds
mov
xchg
jne
xor
sbb
aas
addr16
mov
xor
mov
jbe
sub
fldt
xchg
das
inc
xor
jg
sti
adc
xor
aas
pop
fsubr
jnp
out
xor
xor
bound
jge
fimuls
dec
sbb
pop
fiadds
in
call
dec
xlat
and
and
mov
push
mov
adc
stos
inc
lidtl
pop
outsl
sub
inc
push
sti
and
dec
add
aad
ljmp
mov
mov
xchg
dec
jns
aas
call
in
inc
mov
and
push
fstpt
jle
mov
push
popf
lret
imul
pop
cmp
ret
mov
in
pop
sbb
jo
cmp
imul
jnp
arpl
push
sbb
scas
jp
dec
rcll
inc
sbb
das
cmp
fsubs
xchg
or
adc
aas
sub
mov
inc
push
lret
cmp
push
add
dec
popa
popa
pop
and
lahf
lods
dec
sti
sbbl
subl
pop
lods
jbe
or
pushf
insb
dec
pop
mov
sar
mov
fdivr
sbb
push
push
js
inc
icebp
rol
pop
inc
imul
mov
inc
mov
loop
mov
lods
movsb
mov
fisttpll
in
leave
xor
imul
clc
inc
je
hlt
nop
add
mov
nop
cwtl
incl
xchg
xor
sahf
ss
pop
lret
lock
cmpsl
push
mov
dec
fsubs
sbb
push
pop
push
or
push
adc
or
cltd
xchg
inc
sub
jo
dec
int3
cmc
mov
dec
mov
insb
jb
adc
jbe
dec
mov
cwtl
jb
and
and
sbb
mov
shl
xchg
mov
xchg
inc
and
dec
adc
lods
push
and
aas
push
sti
pop
popa
leave
data16
jecxz
mov
sbb
rcrl
faddp
imul
and
push
push
fs
data16
jecxz
add
mov
aad
shrl
cmp
loopne
iret
mov
hlt
inc
stos
jns
test
out
aad
mov
jle
jb
push
jno
rcrl
pusha
fiaddl
cmp
jnp
sub
repnz
mov
xor
out
je
lods
mov
imul
and
or
fbstp
inc
sub
and
int3
sahf
jecxz
out
orl
mov
add
frstor
fs
adc
leave
pusha
xchg
rorl
pop
add
addr16
cmpsl
cmc
add
pop
test
std
lahf
jmp
cld
sub
rcrb
sub
cmpsl
push
aaa
dec
ja
iret
or
lret
iret
sub
mov
sbb
adc
mov
sub
sbb
js
mov
cltd
pop
outsl
jo
mov
cmp
mov
pop
mov
andl
loope
lock
jne
push
scas
pop
dec
adc
jge
adc
cli
repnz
stos
imul
in
inc
out
push
cmp
popf
jb
cld
dec
mov
xor
pop
push
lea
add
and
push
mov
repz
imul
outsl
mov
push
in
sarb
and
bound
cs
fs
jg
imul
les
test
add
inc
adc
and
lcall
mov
sub
mov
jmp
push
ss
mov
push
jo
arpl
je
add
sbb
or
or
arpl
push
stc
xchg
cmp
pop
imul
cmc
pop
repnz
adcl
inc
jle
mov
push
das
pop
and
dec
pop
lock
jne
add
jbe
mov
xor
into
cmc
inc
mov
dec
pushf
push
cmp
arpl
pop
push
loop
adc
jae
jmp
jns
stos
xchg
mov
jb
adc
int3
cld
rcl
cmp
leave
cmpl
mov
add
mov
jo
dec
or
divl
push
lcall
xor
inc
test
in
aas
push
mov
pop
cmp
movsb
adc
or
cmp
imul
push
and
add
out
jae
in
mov
mov
jne
repnz
decl
imul
pop
fdivrl
shll
sub
mov
sti
jb
mov
outsl
xchg
jbe
sbb
jg
push
std
push
or
ret
cli
sbb
dec
add
incb
push
subl
pop
mov
es
xor
mov
jl
pop
xchg
sbb
cmp
pop
in
loopne
jnp
push
fnstcw
in
push
cmc
insb
inc
ss
movsb
and
add
adc
enter
sbb
mov
push
dec
fs
fnclex
mov
dec
push
sbb
dec
xchg
cmpsb
clc
xorl
icebp
enter
popf
push
pop
fs
inc
mov
roll
je
mov
jb
pop
outsl
dec
movsl
jbe
lods
sarb
pop
iret
fs
ret
jle
lcall
insl
pop
ss
aam
push
push
repnz
cwtl
jmp
xor
or
jge
mov
push
aas
fldl
ret
or
leave
stos
outsb
xchg
shlb
push
push
movsl
loop
cmp
iret
data16
xchg
sbb
test
jg
insl
fdivrl
adc
rcr
sbbb
xchg
adc
mov
mov
adc
push
add
mov
pop
in
jo
test
xchg
int
inc
call
pop
pop
add
lcall
push
fnstsw
fmull
mov
test
mov
xchg
push
shrl
adc
leave
jno
andl
pop
jne
push
dec
adc
adc
dec
clc
xchg
inc
into
sbb
jp
test
xchg
sbb
dec
std
xchg
inc
pop
xchg
inc
mov
in
arpl
loope
sbb
push
xchg
xchg
loop
aas
mov
repnz
push
jb
dec
mov
sub
out
shrb
inc
popf
dec
push
cli
lods
xchg
mov
call
xchg
mov
std
ds
add
lcall
xchg
sub
clc
mov
int
or
icebp
loop
mov
mov
sbb
std
mov
fsts
aad
lret
fs
push
sbb
cmp
sbb
pop
mov
movb
jg
call
fimuls
xchg
pop
bnd
in
sbb
or
and
sbb
mov
xchg
xor
pop
rclb
imull
dec
and
sti
cltd
sbb
gs
fildll
push
addr16
and
jmp
call
xor
int3
cmp
movsb
aam
int
sbb
adc
mov
push
pop
sbb
jnp
je
scas
ret
cmp
xchg
pop
mov
popf
jmp
inc
int3
out
jo
lods
lock
lods
push
mov
sub
mov
mov
insl
adc
pop
es
jno
je
mov
test
push
cmpl
ret
dec
test
xlat
mov
or
aaa
xchg
mov
mov
jbe
inc
mov
mov
aad
mov
lret
fnsave
repz
addr16
sub
icebp
xchg
xor
jecxz
fnstcw
mov
outsb
cwtl
loope
add
cmc
add
es
xchg
jo
mov
lret
mov
sarl
jnp
jmp
gs
dec
push
das
sahf
ds
mov
sti
loopne
test
mov
fisubrl
mov
pop
push
pushf
test
std
sbb
or
fsubr
cld
arpl
cmp
inc
and
mov
out
sub
mov
enter
adc
xor
mov
orl
dec
nop
loopne
inc
mov
sar
lea
loop
inc
popa
icebp
cmp
inc
stos
iret
pop
xor
adc
fstl
sub
loop
sub
repnz
sbb
cmc
jge
mov
test
rorl
mov
fnstsw
or
lahf
fsubs
jmp
icebp
push
sbb
rolb
xlat
pop
insb
push
xchg
outsb
push
sub
aam
pop
sbb
xor
andl
sbb
inc
or
roll
push
push
add
fsubr
clc
xor
sub
inc
hlt
stos
lret
dec
in
gs
leave
gs
or
jle
inc
sub
mov
popf
mov
add
repz
lods
fists
pushf
cmp
addr16
inc
cmc
mov
subl
dec
xchg
iret
pushf
push
sub
cmp
ret
ds
xchg
sbb
dec
push
sub
data16
jecxz
cltd
aad
insb
xchg
fstpl
adcl
jbe
xor
mov
push
push
cwtl
insl
and
or
je
push
mov
les
std
gs
pop
loop
leave
inc
pop
sbb
movsl
inc
inc
xor
stos
sbbl
lds
push
addl
stc
ds
scas
adc
outsb
add
mov
sbb
push
jmp
loope
or
call
cs
cmp
mov
sub
xor
stos
sti
sub
lahf
cld
dec
cmpb
push
enter
mov
sub
xchg
dec
adc
test
loop
call
jge
mov
dec
xor
sub
sub
mov
fs
rorl
imul
rolb
rcrl
enter
pop
xor
push
push
out
cmp
xchg
sbb
add
pop
dec
add
rcrl
add
mov
pop
subl
les
xor
cmpb
jae
ret
mov
outsl
inc
je
fisubrs
clc
jae
xchg
fwait
and
divb
js
lcall
daa
es
inc
dec
mov
aad
jmp
cwtl
push
in
sub
test
mov
fistl
inc
out
xor
pop
ror
jmp
pop
push
pushf
adc
adc
or
nop
lret
pop
xor
adc
lds
je
popa
xorb
pminsw
mov
xchg
inc
push
sbb
push
inc
test
adc
movsb
pop
xchg
xor
aas
push
lods
ss
xchg
adcl
loop
inc
xchg
xor
lret
xor
cmc
cmovae
hlt
add
bound
inc
push
rorb
pop
sub
xor
cld
xor
adc
or
lret
clc
jbe
inc
jno
lock
pop
jecxz
shll
pop
pop
imull
insb
cmc
add
pop
push
or
push
xchg
fldt
dec
add
icebp
andl
clc
jnp
lcall
je
cmp
mov
jl
xchg
xchg
adc
arpl
sub
pushf
cmp
mov
cmp
arpl
xchg
push
popf
cmp
adc
div
cmp
test
or
mov
sbb
ret
mov
testb
xlat
sub
mov
cmp
or
in
pop
stos
xchg
insb
push
aad
dec
les
xchg
sbb
cmpsl
mov
ds
daa
and
ja
faddl
jl
add
hlt
or
push
push
cmc
negb
mov
adc
inc
call
adc
cmp
loop
add
out
subl
mov
loopne
and
dec
add
out
frstor
in
aaa
lods
inc
scas
sbb
mov
or
es
add
int
jb
lahf
aam
xchg
cwtl
pop
loope
fwait
stc
jle
xchg
fists
addl
sub
xor
sbbb
cwtl
popa
std
scas
loopne
loop
inc
mov
test
out
add
idivb
cltd
call
jle
aad
mov
jg
movsl
xchg
icebp
in
lahf
int3
and
sub
cmp
clc
popf
outsl
add
imul
movsb
push
inc
in
ret
jle
pop
arpl
rorl
jge
mov
and
out
pop
pop
setb
idivb
insl
pop
in
fnstenv
aam
push
jb
fucom
dec
repnz
jmp
testl
push
pushf
xchg
das
add
or
stos
add
jmp
push
inc
icebp
xor
ss
jno
or
xor
popf
sub
stos
imull
scas
add
fwait
jg
mov
push
inc
cs
lods
in
rolb
push
sub
sub
dec
dec
or
sub
xor
dec
sub
loope
data16
inc
pusha
jns
add
scas
cmp
pushf
inc
pop
pop
mov
xor
sbb
mov
pop
xchg
lea
ficoml
in
xchg
nop
inc
mov
int3
sub
xor
sbb
cli
rorl
jnp
lods
lods
outsb
push
push
repz
nop
lcall
cmp
daa
pop
and
loope
push
out
pop
popl
and
and
pop
mov
orl
lret
push
outsb
push
jae
dec
cmp
shll
mov
fldcw
add
fcoml
and
mov
insl
sbb
xlat
mov
pop
ljmp
movsl
mov
outsl
fnstenv
mov
xor
inc
out
and
sub
lods
aam
shrl
dec
mull
ret
xchg
filds
movsl
and
mov
xlat
scas
cmp
out
xchg
cmpsb
inc
icebp
and
or
mov
dec
xor
xchg
add
aaa
lods
pop
adcl
rolb
push
imul
faddl
sbb
lret
jnp
hlt
jbe
ret
scas
inc
mov
sub
test
push
test
xchg
mov
mov
negb
in
and
fsubs
xchg
mov
int3
jg
jl
jbe
jmp
lahf
aas
cmp
mov
add
or
push
fwait
mov
sub
push
sti
pop
fstpt
out
repz
in
fnstsw
mov
outsl
jmp
add
xor
pop
push
push
push
negb
sbb
sub
mov
stos
lcall
test
outsb
dec
sbb
or
cld
adc
lds
sbb
cmc
insl
test
into
lds
mov
mov
lods
inc
pushf
inc
dec
scas
xchg
sahf
je
aad
xlat
mov
test
mov
sbb
sbb
and
les
xchg
repnz
add
mov
pop
xchg
mov
test
adc
jno
bound
pop
gs
loop
mov
subl
or
leave
loopne
xlat
jp
jb
imul
les
ljmp
inc
int3
mov
cmpsl
leave
jae
psubsw
rorb
and
out
mov
jecxz
cmp
mov
sbb
lds
and
fwait
ja
mov
inc
sahf
test
bound
addr16
mov
pop
loop
sbb
cld
cmp
xor
pop
and
movsb
shl
mov
jb
sti
lods
orl
sbb
xor
mov
mov
add
mov
pop
xchg
jmp
jbe
xchg
ss
push
sbb
lods
fisttps
fdivs
int
lds
dec
or
mov
clc
adc
add
cmp
mov
or
adc
push
rcrb
imull
sbb
pop
mov
stc
adc
pushf
xchg
xor
xchg
test
jbe
iret
jno
std
je
and
mov
dec
pop
sbb
jg
inc
adc
pop
out
fidivs
jb
dec
jae
addr16
ljmp
ss
pop
push
les
inc
mov
inc
xchg
jl
mov
push
fdivrs
xchg
push
mov
and
dec
mov
mov
dec
lock
add
sbb
cmp
scas
and
sbb
adc
jo
clc
insl
lods
insb
dec
andl
aad
imul
icebp
adc
out
aas
inc
mov
push
or
in
fmull
cmp
or
cmp
sbb
mov
push
ss
dec
imul
or
ret
adc
inc
in
fs
jbe
lods
and
test
cld
or
mov
ficompl
cs
repz
pop
jns
pop
jns
aaa
loop
pop
pushf
jnp
bound
pop
push
or
fstpt
push
rcr
add
pushf
pop
cmpsl
or
lret
mov
mov
ljmp
mov
addb
sbb
pop
or
insb
push
ret
jp
and
or
lods
dec
mov
jne
gs
mov
dec
sub
scas
insb
in
pop
xchg
ds
mov
sub
or
addr16
lahf
jae
pop
ret
xchg
inc
xlat
ss
mov
popf
and
popa
jae
popa
push
push
jno
test
ror
aad
arpl
testb
out
mov
lcall
adc
and
or
cmp
push
rolb
or
push
xchg
jne
jmp
das
and
gs
push
adcl
xor
add
ret
call
sbb
sub
xchg
movsb
adcb
xor
mov
insb
xchg
jb
stos
dec
or
add
data16
add
and
jb
mov
fwait
fs
jne
es
jno
int
jne
mov
add
adc
mov
andl
das
mov
scas
inc
push
dec
hlt
js
test
sub
sub
inc
mov
sbb
xchg
and
sub
mov
and
add
dec
sti
out
sbb
push
mov
inc
cmp
in
jbe
push
and
test
dec
inc
cltd
js
mov
stc
xchg
pop
scas
or
push
fstl
lea
pop
aad
repnz
and
mov
inc
fildll
out
sbb
pop
push
inc
jns
into
ljmp
call
cltd
mov
mov
mov
push
movsb
mov
pop
mov
fs
dec
xor
push
fs
ret
leave
xchg
mov
mov
aam
inc
fwait
pop
or
test
int
sbb
sahf
cwtl
fmull
fmuls
hlt
xchg
mov
stc
imul
jns
jb
test
jp
xor
sbb
lcall
sbb
pop
std
ss
dec
xor
cmpsb
xlat
jnp
in
idiv
sbb
pop
xchg
jae
test
and
xchg
imul
nop
outsb
add
negb
jecxz
ret
lret
and
push
mov
fisubs
inc
orl
ret
iret
cmp
xchg
inc
jle
inc
mov
addr16
das
insb
xor
pop
imul
les
sub
xchg
jno
add
lcall
cmp
leave
sarl
in
add
hlt
xor
pop
pop
cwtl
scas
or
incl
call
inc
in
xchg
scas
adc
sub
repz
outsl
fwait
cwtl
pop
loope
je
mov
mov
sub
pop
add
cli
fs
push
mov
lahf
testl
pop
xchg
out
push
mov
mov
jns
inc
jnp
jnp
xor
mov
and
sbb
jno
loope
cwtl
jle
in
setb
iret
aas
daa
rolb
sub
sub
dec
stc
pushf
cs
push
jecxz
mov
dec
xchg
mov
pop
shlb
fsubs
xor
push
add
dec
adc
or
iret
aaa
pop
out
cmc
gs
in
dec
jp
rolb
jl
jle
xlat
mov
pop
dec
mov
test
sbb
dec
add
pop
es
jl
lret
mov
sub
push
ret
imul
iret
pop
fwait
stc
cmc
test
iret
fdivs
push
aad
in
bound
mov
int
pop
cmp
into
aas
cmp
jns
push
lret
or
fsubs
add
mov
imul
cmc
shr
stos
mov
std
inc
inc
fimuls
pop
add
out
or
mov
jge
mov
push
cwtl
xor
jecxz
jns
pop
dec
shlb
push
push
push
sub
out
dec
cmp
or
dec
adc
push
sbb
sub
mov
lods
xchg
test
into
orl
arpl
push
mov
fcmovbe
pop
xchg
in
pop
jns
popa
mov
stos
sbb
stos
pop
mull
cld
jg
inc
aam
into
jae
sub
rorl
sbb
addr16
push
mov
adc
daa
mov
pop
test
or
push
and
xor
pop
cld
mov
inc
out
cmp
push
iret
pop
repz
push
pop
add
inc
jmp
mov
sbbb
mov
in
scas
pushf
ret
jno
ret
cmpsb
add
push
cmp
data16
popl
stos
dec
jmp
push
add
push
popf
out
and
aaa
mov
mov
jb
cltd
inc
sarb
insb
inc
sti
hlt
mov
adcl
sti
lods
sub
hlt
les
shll
movsl
sbb
jp
shlb
adc
or
add
mov
outsb
xor
and
inc
adc
xchg
leave
hlt
mov
mov
cmp
xor
jl
cmpsl
out
xor
add
cmc
stos
data16
jns
add
mov
lods
mov
nop
roll
fldenv
inc
sub
fbstp
or
imul
sbb
lcall
mov
cwtl
adc
dec
test
xchg
insl
pop
xchg
insb
fldenv
inc
xchg
and
subl
and
mov
inc
cmp
mov
push
lret
jp
clc
mull
xor
push
sarb
jno
fbstp
mov
inc
push
dec
enter
int
pop
push
nop
jo
mov
pop
dec
call
mov
mov
lods
pop
mov
vrsqrtss
mov
aaa
jecxz
mov
inc
mov
inc
frstor
iret
add
mov
dec
mov
mov
xchg
or
scas
rclb
jp
out
sar
js
xchg
pop
push
push
fcmovne
xchg
pop
sbb
shlb
pop
push
mov
inc
xor
inc
dec
shrb
mov
test
pusha
cwtl
push
push
lret
mov
call
sarl
dec
jecxz
shrb
mov
and
repz
test
or
cmc
imul
xchg
jmp
dec
mov
shlb
add
aaa
nop
xor
fisubrs
loope
adcb
insl
nop
popa
or
sbb
dec
outsl
and
aam
int
sub
inc
sarb
xchg
xchg
bound
or
mov
in
adc
lock
fstps
jae
xor
cmpsb
fisubrs
inc
arpl
push
fadds
sub
sbb
arpl
les
pop
inc
mov
mov
mov
scas
subb
mov
les
mov
stos
pop
cmp
enter
sub
sub
movsb
ljmp
jge
jnp
mov
adc
xlat
sti
add
jns
nop
add
xor
sub
pop
xchg
inc
ret
jmp
push
cmp
nop
pop
jne
and
push
mov
hlt
mov
dec
out
leave
jns
xchg
mov
and
mov
in
mov
shl
int3
insb
cmp
inc
ss
push
pop
xchg
je
inc
add
or
jns
out
sahf
clc
clc
mov
xor
outsl
pop
lds
push
push
fnstcw
sub
lods
movsb
and
lcall
frstor
pop
add
pusha
and
cmpsl
lahf
xchg
je
hlt
mov
push
out
ret
add
fdivl
fimuls
sub
add
add
sub
jle
mov
xor
inc
and
data16
xchg
mov
or
ja
call
adc
aas
xchg
addr16
les
push
push
sti
xchg
adc
mov
punpckhdq
ljmp
mov
mov
mov
stos
std
xchg
cmp
test
adc
inc
movsl
xchg
arpl
add
push
imul
add
cmp
lds
scas
test
rcll
lcall
pushf
clc
jge
push
mov
push
dec
or
cltd
pop
scas
stos
rcll
push
cli
cmp
sub
repz
imul
cmp
push
sub
rcll
sbb
xor
in
adc
mov
out
dec
fisubs
inc
adc
mov
outsb
iret
insb
push
test
outsb
pushw
out
in
jg
adc
in
pop
mov
inc
xlat
xor
rorl
rolb
dec
lret
push
ds
insl
popa
push
idivb
mov
adc
sbb
adc
scas
push
mov
inc
cltd
inc
xrelease
pop
div
cmpsb
adc
scas
cmp
sub
xor
movsb
mov
sti
mov
stos
add
test
leave
adcb
ljmp
loop
rcrl
mov
inc
inc
push
lods
push
add
xor
xor
push
out
cmpsb
adcb
xchg
mov
out
mov
jo
or
test
and
sarb
aaa
fcoml
das
iret
cwtl
cltd
dec
sub
jecxz
int3
xor
lods
mov
mov
sub
xor
mov
pop
mov
mov
and
rcr
pushf
inc
cmp
lahf
inc
hlt
mov
or
adc
insb
in
sbb
add
ljmp
add
and
sub
stc
out
sub
pop
mov
out
mov
push
add
jb
nop
xor
dec
bound
imul
cli
push
shlb
loope
xor
fcoms
add
loopne
xchg
cmp
pop
xchg
pop
decb
inc
lcall
fdivp
push
inc
jno
push
adc
insb
xor
pop
mov
jb
push
rep
jl
xor
xor
cvtpi2ps
cwtl
addr16
inc
in
fmull
sbb
add
xor
in
in
lods
xlat
and
xchg
jmp
ja
xor
dec
cmp
or
mov
mov
ret
loope
adc
lahf
inc
mov
adc
mov
sbb
daa
cltd
mov
mov
test
inc
stos
add
sbb
mov
jne
adc
cltd
mov
shlb
sub
ret
gs
sbb
mov
mov
into
dec
popa
dec
mov
and
stos
loop
push
sarb
stc
or
data16
xchg
sbb
xchg
mull
push
dec
pop
adc
out
ljmp
ss
adc
sbb
shlb
nop
xchg
pop
fdivs
push
in
sbb
sub
mov
xchg
repz
int
dec
sub
mov
xchg
aad
lock
cmp
push
std
movsl
push
mov
mov
daa
xchg
loopne
mov
pop
lret
insl
fisttpl
mull
bound
lods
sub
jb
fildll
fisttpll
add
testl
push
mov
or
add
fsts
mov
rorb
inc
int3
loope
cltd
mov
pop
mov
lods
int
aam
in
or
pop
or
sbb
xchg
add
ret
sahf
adc
aad
push
int3
sbb
movsb
fnstcw
outsl
sbb
sbb
and
pop
add
mov
mov
lea
xor
in
cmp
insb
mov
addr16
push
aad
loope
mov
in
clc
jmp
xchg
les
aam
push
lahf
aaa
fildl
push
fidivl
stos
scas
jle
sti
test
jl
popa
fnstcw
jecxz
push
jge
arpl
ljmp
icebp
in
js
xchg
mov
xchg
ljmp
lret
into
lret
jnp
clc
inc
push
rep
popf
daa
inc
sbb
fcompl
cltd
fs
lret
cmp
jns
jbe
lahf
test
push
and
xchg
in
push
inc
dec
packssdw
cs
scas
or
mov
and
push
adc
cmp
mov
cs
leave
add
ret
adc
int
push
mov
ja
aaa
mov
inc
sub
frstor
push
out
in
inc
add
jle
xor
imul
dec
pushf
and
jae
push
push
jns
cmp
xor
repnz
jb
test
ja
sub
mov
aad
addl
cs
or
sub
push
and
ds
mov
dec
mov
fidivrl
jecxz
cmp
icebp
insb
lods
add
lds
inc
sbb
sahf
push
xchg
aas
hlt
lahf
adc
and
cmpsl
inc
jge
ja
jb
jl
fisttps
fdivs
rcl
out
pop
add
popa
mov
jne
out
and
mov
rol
add
mov
xchg
mov
cmpsl
mov
jmp
out
fimull
sti
addr16
orl
pop
das
mov
jmp
test
adc
les
xchg
lock
pop
push
test
outsl
push
into
rcrb
rcll
dec
sahf
jno
std
sbb
test
jns
js
push
xchg
add
add
scas
mov
push
and
inc
cs
xchg
mov
out
push
ljmp
test
lods
xlat
fwait
xor
test
int
fiaddl
push
fisttpll
rcll
inc
and
ja
int
cmpsl
jae
paddb
fstl
push
lahf
mov
jmp
outsl
add
xor
lret
mov
movsb
dec
ja
mov
sbb
test
fsubrp
icebp
fimuls
dec
sub
add
aas
flds
scas
in
flds
sahf
test
adc
js
ds
pcmpeqd
fstpl
mov
and
sub
ss
movsb
dec
test
push
jmp
std
sbb
xlat
addl
fmull
mov
mov
jp
js
mov
push
sub
sub
mov
xchg
jae
mov
aam
mov
jl
dec
jmp
mov
aam
inc
nop
xchg
pop
adc
pushf
lret
ret
cltd
out
in
sub
test
sti
push
sub
cmp
add
ret
lret
repz
fwait
cmpsb
hlt
subl
sub
xlat
testb
in
jg
jmp
popl
or
loop
adc
mov
mov
add
mov
jnp
xchg
popf
aam
cmpsl
idivl
xor
sbb
cmp
mov
imul
call
jmp
stos
sbb
add
pushf
jbe
lcall
push
mov
mov
push
sar
and
adcl
or
out
daa
movsl
ret
adc
cli
cltd
jmp
xor
andb
js
or
cmpl
inc
popf
rcrl
jge
ja
jo
repnz
imulb
lods
and
or
ret
rdpmc
loopne
ret
in
insb
addl
sahf
cmp
jno
aas
js
clc
or
cli
sub
jecxz
and
arpl
scas
xor
inc
fucomp
jmp
cld
and
and
aad
push
aas
rolb
bound
sarl
ja
fsubp
test
lea
and
shl
int
ljmp
cmp
xchg
imul
push
cmpsb
xor
pop
and
lcall
sbb
jno
push
cmp
inc
adc
outsl
xlat
dec
sub
out
pop
xor
pop
shl
xor
add
and
test
rcrl
enter
call
pop
cld
mulb
cld
mov
jl
scas
add
xor
cs
cli
lret
test
je
push
and
loope
mov
bound
bound
pop
or
sub
push
insb
data16
cmp
aaa
add
stos
cwtl
sti
pop
cmp
and
js
fldl
in
outsb
inc
icebp
roll
push
jb
aad
adc
loope
inc
mov
leave
jg
sbb
xor
repnz
rclb
in
fst
daa
fldl
push
insb
inc
out
xor
shlb
rol
movsl
pop
mov
fs
mov
lds
rcrl
jge
push
and
divb
into
out
cmp
sub
mov
xchg
notb
popf
adc
into
pushf
pop
mov
xchg
adc
jb
mov
in
pop
cmp
mov
cmp
daa
inc
pop
std
ret
popf
imul
das
and
xor
cmp
clc
scas
jae
xchg
push
nop
mov
imul
roll
sub
jne
mov
mov
add
movsb
int
mov
into
cwtl
std
je
mov
sbbl
adc
les
es
or
jg
fldenv
jbe
sti
inc
dec
dec
adc
negl
lret
pusha
je
jg
xchg
lret
dec
lea
sbb
sbb
xchg
add
lahf
cmc
pop
xchg
adcb
insb
adc
cmp
or
xchg
dec
jno
nop
mov
jbe
loopne
xchg
clc
jge
mov
mov
in
jge
or
mov
jp
fisubrs
outsl
pop
cmp
xchg
cmp
and
and
mov
fiadds
and
xchg
sarl
xchg
mov
daa
pop
test
dec
push
inc
push
dec
push
dec
lock
jle
fdivrl
into
fwait
adc
push
addr16
ja
addb
test
jl
imul
gs
inc
imul
aas
lret
xchg
dec
sbb
test
and
notl
int
cmc
aaa
outsb
stos
pop
jo
out
or
xchg
popa
sahf
stos
cmp
sbb
pop
dec
enter
and
aas
xor
cli
cmp
fcmove
clc
int3
adc
mov
pop
mov
mov
inc
xchg
je
shrb
aam
in
gs
pop
adc
into
mov
or
outsb
xchg
cmp
rolb
pandn
cmpsl
xor
std
shll
pop
add
fstps
jle
push
inc
push
push
lret
jge
rcll
mov
cmpsb
push
sti
pop
mov
inc
mulb
mov
orps
xchg
js
dec
push
inc
std
pop
icebp
jnp
add
sbbb
movsb
pop
ja
xlat
mov
loope
and
mov
gs
hlt
les
fsubrl
movsl
inc
inc
rcl
lcall
add
test
pop
add
push
test
sahf
mov
mov
repnz
ret
sbbl
mov
cmp
loopne
xor
jae
dec
imul
push
sub
imul
dec
pop
or
jl
popa
stos
mov
lea
in
jno
dec
cmpsl
fsubrl
loopne
test
xor
push
mov
lods
jl
pop
inc
push
stos
imul
jae
jmp
inc
xchg
outsl
dec
jbe
push
mov
in
lods
xchg
jge
xchg
adc
or
in
cli
in
push
sub
and
aas
push
mov
xchg
popa
arpl
pop
sti
leave
xchg
or
hlt
repz
pop
in
leave
movsb
pop
push
and
sti
jno
mov
dec
cs
mov
and
int3
cmp
jo
cmp
aad
hlt
out
sub
jecxz
xor
jmp
inc
test
sbb
and
pop
sbb
adc
xchg
dec
mov
cltd
pop
mov
test
sti
cmp
aas
add
inc
cmc
dec
iret
int3
cmpsl
mov
ljmp
cltd
pusha
or
xor
mov
popf
fdivrs
psubsb
add
mov
repz
icebp
sar
adc
dec
xor
cmpsb
idiv
add
fnstcw
mov
shrl
test
bound
cmp
jle
and
mov
shl
fcoms
ret
adc
enter
push
xchg
ret
jne
sub
aas
and
pop
mov
je
pop
les
xor
outsb
sub
mov
shl
xchg
sbb
loopne
jl
aam
cmp
push
push
cltd
pop
push
xchg
jo
jg
jbe
lods
shrb
test
pop
add
xchg
mov
inc
setl
push
add
mov
mov
int
cld
push
sbb
xchg
push
mulb
fisubrs
pusha
mov
mov
mov
xchg
or
and
les
jo
ja
mov
test
jbe
push
jne
dec
cltd
cmp
dec
mov
sbb
or
int
jg
add
clc
ret
es
dec
and
fidivrs
dec
hlt
fwait
push
cmp
pop
nop
shrb
loopne
adc
dec
push
loope
inc
sbb
ds
stos
push
loopne
test
sbb
movsb
mov
mov
int3
ss
dec
or
mov
es
fcoms
rcrl
add
fnsave
clc
mov
xchg
xor
in
lar
pusha
inc
push
in
dec
orb
je
mov
jecxz
jo
push
loope
stos
jae
fisttps
inc
jbe
mov
sub
mov
jle
je
sub
mov
sub
bound
leave
or
xchg
mov
pusha
pop
and
push
nop
push
add
push
int
jmp
jb
adc
lods
movsl
push
subb
clc
sub
lds
scas
pop
sub
mov
lods
push
clc
add
jnp
sbb
mov
rcl
in
pushf
mov
in
or
and
shll
mov
add
inc
notl
jns
mov
outsl
mov
push
movsl
mov
test
pop
lods
pop
pop
dec
inc
jle
mov
xchg
cmp
js
sti
dec
sar
pusha
pop
jmp
pushf
std
das
xor
sub
pop
dec
stc
add
fdivrs
jb
mov
pop
cmc
cmpsl
repz
adc
xor
test
daa
stos
ficompl
dec
pop
lods
das
mov
lret
sbb
and
rclb
iret
data16
mov
int
sbb
cmp
jmp
outsl
or
mov
adc
jl
pop
mov
mov
addb
test
dec
sub
jg
mov
xchg
sub
mov
push
cmc
xchg
add
cld
push
jg
mov
push
cmpl
mov
lcall
in
cld
lock
bound
pop
add
lea
pop
gs
add
std
xchg
int
lea
loopne
cmp
sub
sbb
jge
cmpsl
sub
jno
mov
mov
sbb
sbb
aaa
push
fmull
imul
outsl
lods
inc
lret
pop
xchg
fucom
sub
xchg
adc
mov
call
mov
into
pop
jp
mov
xor
leave
ss
pop
inc
dec
pop
mov
outsb
mov
mov
or
or
and
sub
jge
orb
dec
or
jb
adc
xchg
rcll
mov
scas
lret
and
push
les
add
push
lcall
lret
mov
push
in
ret
je
aam
pushl
stos
out
inc
sub
enter
xchg
hlt
je
xor
inc
mov
inc
jg
push
mov
inc
shll
xor
stos
push
jp
jg
jne
icebp
shlb
xchg
into
cmc
test
scas
pop
cmp
push
or
test
xor
mov
sub
stos
out
sahf
xchg
imul
pop
inc
xchg
mov
pop
outsb
lods
ficomps
xchg
addb
or
ljmp
repnz
adc
push
imul
inc
out
nop
arpl
clc
rorb
pop
rclb
shlb
lods
mov
inc
and
dec
testl
scas
push
xor
xchg
sub
dec
and
loop
scas
inc
push
mov
cmp
mov
mov
dec
das
ret
inc
cltd
push
into
in
inc
mov
test
xchg
mov
jae
mov
and
pushf
ret
adc
sub
rcll
mov
fsubl
les
rcr
sbb
or
roll
scas
cltd
mov
int
mov
mov
sahf
sub
repnz
push
sub
sub
movsb
cmp
add
mov
inc
sub
stos
in
inc
xchg
sbb
xorb
xchg
lods
add
outsb
bound
push
mov
push
jnp
cmp
in
iret
test
xchg
sub
ja
sbb
clc
lea
leave
out
popa
orb
inc
xchg
test
or
mov
jno
inc
xchg
push
dec
fs
popf
sbb
xchg
fstl
cmc
rol
sub
mov
ds
into
rolb
add
stc
add
pop
xchg
add
fadd
insb
xchg
je
and
pcmpgtd
lods
popa
arpl
push
xor
xchg
push
es
sub
daa
lcall
xor
lds
push
loop
inc
rcl
out
jmp
fdivrs
mov
in
ror
xor
cld
jmp
push
pushf
xor
or
xchg
push
fcoms
jo
int3
mov
cld
cmp
pop
rolb
push
add
pop
lock
mov
fucomi
in
jl
loopne
xchg
jle
addr16
pop
imul
enter
in
cmpsl
sbb
scas
mov
add
and
mov
ret
popf
jp
push
pop
jmp
or
sub
cmp
sub
push
add
lds
add
int
adc
mov
lds
and
mov
adc
sbb
mov
jb
add
add
lods
loopne
or
cld
sub
int3
leave
push
pop
in
cmpsb
fidivl
add
ds
adc
xchg
mov
cmpl
lcall
inc
push
fcompl
js
stos
inc
aaa
jge
and
add
sub
test
fisubrl
mov
xor
sub
out
mov
mov
xchg
sbb
mov
and
mov
testb
inc
push
and
fcomi
adc
pop
in
dec
cmp
or
adc
insl
das
cmp
xchg
push
mov
sbbl
push
mov
shlb
adcl
push
push
or
jle
gs
and
jp
inc
cmp
loopne
fnsave
aad
adc
shrl
mov
xlat
pop
push
and
test
push
inc
adc
jg
dec
dec
mov
cld
jmp
es
or
int
mov
mov
and
or
push
enter
or
out
popa
rolb
adc
pop
cld
cmp
stos
jb,pn
mov
fldt
push
cltd
lds
jl
mov
arpl
stos
scas
xor
imul
push
pop
dec
cmp
jne
enter
jne
ss
popf
sbb
sti
push
inc
mov
lds
dec
sub
pop
hlt
push
sub
insb
mov
aas
ja
push
or
mov
add
in
xchg
or
cmp
test
test
add
ret
stc
xor
pop
frstor
js
xchg
push
sub
or
gs
shr
enter
push
and
push
popl
lock
push
sbb
cltd
gs
mov
in
lds
movsl
mov
jae
iret
add
xchg
mov
lds
insb
arpl
in
or
repnz
orl
gs
or
and
jae
xor
adc
fwait
add
dec
fcompl
pop
sbb
dec
xchg
mov
and
mov
scas
mov
sub
into
or
adc
push
or
jge
jecxz
sbb
sbb
jg
loopne
cmp
jne
cmp
iret
ljmp
clc
dec
cmc
mov
fdivp
fnstcw
push
mov
push
mov
mov
les
mov
mov
jae
idivb
out
xchg
dec
mov
pop
stc
daa
mov
push
lods
mov
shrb
jno
data16
std
push
mov
cmpsl
leave
cmp
xor
inc
push
xor
dec
mov
fsubs
push
repz
fildll
push
fs
and
mov
push
xchg
cli
pop
pop
idivb
sbb
leave
call
fcoms
out
dec
inc
cmpsl
fildl
mov
ss
idivb
push
xchg
mov
push
dec
jnp
out
mov
ret
mov
hlt
pop
jge
dec
je
lds
es
test
sub
pop
xor
sbb
and
idiv
inc
mov
cmpsb
xchg
fisubs
subl
adc
jecxz
fidivrl
into
in
mov
pop
push
ja
cmp
mov
xlat
lret
lea
rcr
shll
pop
pop
xorl
addr16
cs
mov
idivb
cmpsb
in
call
ljmp
fwait
stc
and
or
repz
push
cs
adc
jo
movsl
mov
xor
xor
sbb
mov
ror
sahf
call
jno
shlb
cmp
mov
mov
jmp
and
sbb
aad
sbb
or
jae
pminub
nop
push
subl
sub
pop
pop
push
sahf
push
and
lea
xchg
cmp
mov
push
push
test
stc
xor
andl
xor
jno
inc
add
addr16
stos
roll
mov
in
xchg
jae
jg
sarb
pop
mov
inc
insb
sti
cmp
mov
pop
inc
fldcw
cmpsl
pop
cmp
mov
das
lds
and
test
dec
lea
cmp
addr16
xor
lcall
cmp
pop
pop
dec
sahf
pop
mov
pop
lret
lds
adc
pop
out
push
xor
inc
xor
pop
sub
ljmp
pop
andb
or
cmp
pop
dec
stos
test
sti
test
xchg
push
pop
loop
push
mov
cmp
cltd
in
cld
push
aaa
inc
sub
in
mov
ret
test
jmp
pop
loope
xchg
xchg
push
fs
lcall
add
ss
inc
mov
cmpsb
add
enter
pop
push
sbb
pop
push
aaa
lock
sbb
push
add
xlat
xchg
add
xlat
adcb
lret
add
inc
inc
insb
rclb
jnp
or
and
into
mov
out
xchg
add
and
in
into
out
or
in
loopne
xchg
lods
jbe
dec
dec
std
aaa
pop
or
xor
movsl
mov
cld
jnp
sbb
dec
arpl
movb
add
and
mov
clc
lret
mov
call
cmc
mov
ret
inc
fwait
outsb
jo
pop
je
cmp
mov
pop
add
cmp
loop
cmpsb
or
sbb
push
cs
fs
inc
inc
add
imul
xchg
xchg
fmull
mov
popa
clc
mov
ljmp
call
mov
pop
xchg
adc
push
sbb
and
add
and
jp
xchg
aad
sub
inc
mov
jg
mov
fwait
cmpsb
lods
or
sub
adcl
stos
std
push
push
sub
and
cmpsl
test
add
mov
cmp
xor
mov
iret
hlt
cld
andps
hlt
push
lea
lret
fs
xchg
and
jbe
int
fs
pop
jnp
mov
aad
lcall
inc
or
das
test
clc
sbb
mov
loopne
jg
sub
test
and
cmp
test
mov
arpl
add
out
test
add
les
fwait
mov
orl
xor
adc
das
negl
inc
jle
pop
into
pop
outsb
shll
jns
jne
decl
xchg
and
sahf
lods
ss
pop
add
push
ljmp
aaa
insl
cmp
mov
stc
sarl
fldl
jp
icebp
xor
xor
mov
sbb
js
roll
sub
pop
inc
add
and
xchg
pop
pop
mov
ret
pushl
test
push
out
call
dec
mov
std
ja
es
pop
adc
push
cli
mov
adc
add
test
fnstsw
mov
mov
adc
decl
data16
push
and
and
pop
push
mov
jle
icebp
xorl
push
lret
cmp
sbb
mov
insb
in
ja
jl
push
call
or
lret
push
dec
insl
pop
std
repz
adc
aas
mov
rorl
out
testl
xchg
inc
mov
xchg
push
push
fistpl
aas
pop
sub
add
out
xchg
jne
je
sub
rcrl
or
add
jno
aad
add
sbb
xorl
cmp
pushf
call
and
out
xchg
adcb
pop
cmp
jbe
cmp
sub
adc
cmc
stos
shll
andl
popf
xchg
test
sub
mov
xchg
add
adc
aad
mov
or
orb
pop
adcb
rcr
shll
orb
loop
xchg
jle
xor
cs
test
pop
or
mov
mov
iret
mov
jle
loopne
fwait
loopne
or
push
lods
xor
lret
push
jmp
dec
cmpsb
mov
in
push
inc
es
roll
fs
mov
pop
imul
xorl
mov
dec
je
xchg
push
jmp
fnstcw
rorb
mov
jge
sub
les
inc
sub
push
jmp
mov
mov
pop
nop
dec
scas
or
ss
lret
jecxz
mov
iret
xorb
out
dec
sbb
pop
and
xchg
aad
xchg
inc
es
nop
cmp
fstpt
sbb
jns
ficompl
add
cmp
daa
xchg
xchg
xchg
cmp
or
movsb
pop
mov
mov
pushf
jp
adc
jbe
inc
lcall
pop
jle
xchg
lock
stos
jmp
mov
cld
dec
cmc
insl
mov
sbb
stos
xchg
cmp
mov
aad
pop
mov
out
in
mov
ss
push
mov
shll
sub
rorb
subl
imull
test
cwtl
out
enter
ljmp
loopne
sub
aas
push
xchg
inc
mov
add
adc
xor
out
dec
sbb
sahf
xor
out
xor
push
movsl
push
popf
mov
mov
or
push
out
adc
movsb
push
cmp
hlt
jb
pop
jl
jecxz
cmp
aas
mov
add
clc
sbb
fninit
nop
sarl
andl
mov
movsb
xchg
popf
push
loopne
sti
dec
adc
data16
lods
pusha
jge
pop
xchg
xchg
mov
cmp
in
or
and
inc
mov
ret
shrl
dec
aad
jmp
rclb
lcall
adc
fwait
push
ss
arpl
stos
das
call
jle
inc
add
mov
mov
outsb
sti
push
cld
ds
shlb
arpl
fists
push
imul
mov
pop
lods
scas
mov
ret
pop
stc
adc
pop
inc
addr16
cmp
lock
pushf
ja
push
sahf
into
gs
movsb
xor
xchg
mov
cltd
lock
mov
sbb
or
jae
popf
ljmp
inc
ss
xchg
mov
mov
push
jecxz
xor
std
mov
into
push
mov
jecxz
in
outsb
repz
push
xchg
in
cld
mov
inc
pop
adc
xchg
imul
pop
movsb
out
ficompl
sbb
mov
jno
push
inc
ljmp
mov
xchg
inc
xlat
jl
loopne
ljmp
ss
lahf
dec
stos
jecxz
push
pop
inc
mov
pop
lret
mov
stc
insb
add
dec
push
test
lret
lret
xor
cwtl
ret
popa
jp
out
add
xchg
js
cmp
fwait
and
insl
pop
enter
loop
ss
sti
int3
pop
stos
mov
adc
loopne
test
bound
mov
outsl
mov
mov
out
pop
out
iret
and
je
sbb
and
jp
movsb
mov
test
xlat
adc
movsl
daa
loope
push
xor
inc
shlb
push
icebp
xlat
mov
adc
ds
xor
adc
adc
test
dec
out
pop
xchg
insb
and
mov
orps
roll
popa
push
aad
jle
adc
fs
lods
orb
lret
sub
mov
scas
dec
out
xor
dec
mov
and
pop
es
inc
lret
insl
sub
pop
mov
cs
out
mov
bound
lret
or
jne
mov
sbb
pop
mov
push
shl
adc
lahf
jae
adcl
xchg
inc
sarl
mov
and
push
ret
inc
mov
call
inc
fwait
in
enter
rcrl
inc
lahf
popa
sbb
dec
sahf
pop
sub
jae
aaa
inc
gs
pop
push
or
jo
aad
or
xchg
push
push
ret
push
fcoml
popa
and
xchg
rcrb
adc
cmp
cltd
jp,pt
lret
jne
cmp
inc
pusha
mov
imul
pusha
popf
mov
test
ret
fmuls
push
fcoms
aam
and
or
subl
pop
rorb
test
sub
aas
xchg
adc
lcall
imul
jns
jo
mov
push
int3
dec
repz
mov
mov
mov
mov
dec
pushf
push
ds
dec
sub
mov
mov
js
imul
dec
test
sub
sbb
add
lds
rclb
mov
add
push
test
sahf
lods
call
lcall
movsl
mov
sbb
or
sub
cmc
adc
stc
cmp
cli
inc
int
cmpsb
cmp
aaa
js
stc
and
sbb
dec
movsb
int
mov
xchg
arpl
stos
xchg
push
cmp
outsb
jge
pop
mov
cwtl
sti
jge
dec
cmp
and
mov
mov
inc
mov
jns
lea
jmp
add
xor
mov
notl
loop
mov
mov
inc
iret
fildll
inc
loope
repz
pop
shrb
repz
pusha
jb
inc
in
shrb
xor
insl
xor
aam
push
ljmp
test
ficomps
loop
xor
sbb
popf
insl
sbb
xchg
dec
sbb
add
lcall
pushf
mov
sub
sbb
leave
pop
and
dec
lcall
rcll
dec
aaa
jecxz
outsb
insb
enter
icebp
jge
or
enter
mov
lds
repnz
xor
dec
shll
mov
and
mov
rcrl
sub
jns
xchg
jb
js
test
or
ret
sbb
jmp
jns
jae
mov
mov
or
out
push
imul
setle
cmpsb
mov
test
movsb
in
cmp
pop
push
ret
mov
add
jg
test
or
test
loop
loop
orl
adc
mov
ljmp
out
or
stos
gs
in
out
aaa
and
inc
out
cmp
mov
jno
ret
lods
xor
sbb
sub
push
imul
leave
cltd
fistpl
sub
movsl
xchg
sub
mov
push
fistpll
lea
sbb
leave
in
mov
xor
mov
repz
sub
and
test
add
and
cmp
cmpsb
sbb
loope
negw
aaa
mov
or
mov
inc
mov
enter
repz
insb
mov
negl
or
or
xchg
loope
mov
add
js
push
cltd
xor
xchg
das
add
leave
dec
dec
adc
cmpsb
ds
arpl
sub
pusha
arpl
push
xlat
out
mov
xor
xlat
adc
outsb
aas
xor
out
mov
outsl
adc
popf
sub
dec
add
cwtl
add
jecxz
outsb
shrl
xchg
out
sbb
out
or
cli
adc
cmp
xchg
jge
xchg
iret
cmp
jnp
jle
fidivrs
jns
mov
in
xor
push
push
scas
mov
lock
dec
push
inc
test
sbbl
pop
outsb
daa
nop
push
shll
ds
jo
aam
rorb
lods
sbb
adc
inc
cmp
add
inc
in
jne
sbb
stc
enter
leave
imul
add
pushf
cs
xchg
inc
pop
ds
in
sbb
xor
adc
mov
clc
xchg
mov
xchg
and
pop
addl
add
pop
xor
pop
in
nop
mov
jg
notl
cmp
push
sahf
nop
mov
mov
stc
movsl
lret
call
xchg
scas
rolb
or
xchg
push
loopne
mov
es
daa
inc
ret
inc
xor
orl
add
or
jae
clc
pop
pop
and
imul
sub
push
sbb
cmp
sbb
xlat
in
add
jle
std
pop
test
lods
jle
and
mov
inc
enter
lret
sahf
lods
enter
mov
or
dec
movsb
xchg
add
std
and
dec
out
mov
enter
sub
shrl
lea
jno
mov
mov
mov
fcmovb
or
rolb
xchg
test
pop
ret
in
dec
cmpsl
cld
enter
outsl
xlat
jle
std
lea
xchg
mov
inc
or
shl
sti
sub
jmp
mov
loope
out
push
ret
cltd
jmp
popf
jg
out
enter
lahf
and
cli
out
add
sbb
ret
add
or
sbb
mov
pop
mov
inc
mov
cwtl
mov
cmp
push
cmp
push
xchg
sbb
sbb
stos
mov
pop
adc
shr
leave
jmp
jmp
push
stos
cld
dec
aam
mov
cmp
jnp
xchg
loope
cmp
xchg
insl
sub
test
pop
add
xor
ja
sub
xchg
and
cwtl
mov
std
inc
xor
sub
xor
sbb
or
mov
lret
lds
adc
and
dec
movsb
frstor
and
shll
sub
iret
lock
xor
rolb
cld
dec
or
sbb
stos
cmp
and
and
test
adc
lock
out
std
jge
mov
or
cmc
sbb
es
dec
sub
sub
pop
push
int3
pop
push
mov
pop
add
or
sub
imul
outsl
push
cmp
or
mov
cmpsb
xor
mov
out
sbb
movsl
jmp
dec
inc
ss
daa
fcompp
aaa
lds
lea
or
push
rorl
loope
sbb
fdivl
test
jle
or
sbb
xchg
and
imull
xor
pop
pop
sarb
jp
jbe
pop
icebp
fnsave
testb
push
add
add
sbb
push
ds
mov
jnp
lock
mov
lahf
push
push
jns
adc
jo
push
push
iret
popf
sbb
jb
push
inc
and
push
and
jle
mov
subl
lods
imul
aad
add
std
push
adc
mov
jp
mov
inc
xor
pop
cld
lret
ljmp
mov
xor
sub
pop
inc
int3
push
and
out
in
jae
pop
mov
xor
adc
pushf
mov
xchg
jle
cltd
repz
fiaddl
repz
call
xchg
pop
push
sar
xor
mov
jp
cmpb
sbb
sbbb
stos
adc
sbb
or
or
fnop
lcall
push
inc
in
in
stos
dec
dec
xchg
jp
inc
cmp
cmp
adc
flds
faddl
push
mov
out
push
lahf
ret
xchg
adc
jmp
inc
orl
cltd
call
jnp
daa
jno
xchg
lret
fisubl
sub
mov
lock
jg
outsl
mov
dec
clc
cwtl
or
and
cmp
push
int
and
out
add
cltd
adc
aaa
xchg
sub
aad
lcall
ja
sarl
dec
mov
sbb
or
inc
lcall
loop
cli
sbb
mov
rcll
mov
ja
mov
out
sbb
es
sbb
mov
mov
xchg
mov
cmc
cmp
inc
mov
aaa
les
jecxz
out
cmpsl
adc
pop
scas
out
out
das
adc
repz
call
test
leave
xor
dec
pusha
call
push
or
lcall
xchg
outsl
adc
add
test
leave
lock
std
roll
jge
out
lods
mov
adc
in
sub
xchg
jecxz
push
sbb
inc
ret
push
cmpsl
push
inc
lods
sbb
das
sahf
insb
push
jmp
dec
jmp
cmc
jge
arpl
dec
iret
add
jle
dec
xor
stos
in
outsb
xchg
test
mov
bnd
sbb
xor
pusha
stc
clc
out
lea
jbe
movsl
ds
xor
out
sub
daa
push
ret
jge
aaa
aad
adc
cmp
inc
jns
xlat
ret
sbb
mov
ja
cltd
pop
mov
cs
fstpt
es
iret
test
sbb
jne
pop
add
mov
cmp
iret
dec
sti
filds
jle
sbb
sbb
lea
test
inc
in
sahf
lods
xor
mov
xlat
out
stos
adc
push
js
loopne
shl
sub
testl
add
mov
jge
test
xchg
out
mov
or
les
xor
lock
jmp
data16
sbb
movsb
push
movsl
mov
push
jne
cmovg
fsubs
cmc
insl
push
jnp
dec
adcl
push
mov
insl
sub
lret
push
xor
sbb
push
fmull
rcll
and
mov
xlat
sbb
inc
add
xchg
dec
daa
pop
scas
aas
in
notl
mov
pop
jecxz
scas
test
int3
xchg
incb
add
insb
lret
pusha
sbb
jne
loope
rolb
dec
ss
mov
shl
rcrb
ljmp
pop
push
or
rclb
adc
jne
inc
lock
ret
fnstenv
ret
sar
jg
rol
adcl
cmp
lods
xor
mov
sub
ret
jb
gs
xchg
loope
sbb
sbb
pop
push
sub
push
rclb
lret
andb
ret
stos
xor
stc
sbb
orl
xchg
xchg
xchg
scas
cld
xor
xchg
xor
xlat
loopne
or
jbe
popf
repnz
mov
mov
cmp
push
rcl
outsl
jmp
mov
push
movsb
jb
adcb
loop
lods
hlt
gs
push
mov
mov
test
xor
xchg
xchg
cmpsb
imul
ficoms
mov
xor
test
ret
shlb
or
lret
loope
sahf
loopne
or
xchg
push
das
pusha
mov
decl
dec
push
testb
lcall
jnp
sbb
imul
leave
imul
pop
andb
mov
data16
mov
mov
andb
mov
mov
adc
loopne
int3
mov
cmp
mov
aas
testb
inc
popf
add
lock
sbb
pop
popf
rolb
idivl
add
lcall
adc
cld
fstps
dec
arpl
sahf
and
in
push
mov
mov
or
mov
inc
fwait
cltd
stos
jcxz
ljmp
es
push
inc
fisttpl
imul
and
ret
adc
testl
pop
sbb
cld
mov
lock
cltd
sbb
push
iret
cmp
push
bound
and
pop
xor
aaa
lret
and
rcl
cwtl
cltd
negb
sahf
lret
pop
pop
mov
aam
test
and
and
inc
loope
loopne
cmp
jbe
xchg
sub
insb
aad
sub
jp
stos
jge
rcr
lahf
lods
mov
mov
jnp
push
pop
into
push
inc
xchg
jo
neg
or
faddl
movsb
sub
into
pop
shll
push
jbe
push
loop
push
xchg
jle
lods
aam
jnp
push
fisttpl
push
push
mov
push
jecxz
xadd
push
insl
scas
xor
mov
inc
xchg
notl
jmp
inc
xchg
cli
cmpsb
rcrb
jo
push
ret
push
xchg
mov
out
leave
hlt
orb
insl
inc
pop
adc
fnstsw
push
sti
and
ret
mov
lahf
adc
mov
mov
jp
fisubrl
mov
sub
enter
stos
lods
fisttps
cmp
and
hlt
mov
std
movsb
cmpsb
dec
dec
jo
push
mov
fildl
pop
mov
cmp
sbb
lret
bound
jnp
adc
mov
or
mov
cmp
xchg
imul
data16
cmp
dec
jg
mov
movsb
push
fsubrs
pop
fiadds
rclb
lret
xchg
mov
in
jle
test
xor
lea
push
sub
cmpsb
mov
xchg
jp
dec
aas
and
mov
aas
je
mov
mov
jl
loope
ljmp
arpl
mov
xorl
xlat
in
or
jl
mov
movsl
jecxz
ljmp
jp
sbbb
in
push
dec
scas
push
adc
mov
shrl
xchg
pop
xchg
sarb
lds
sub
and
fcmovne
mov
rolb
and
sbb
cltd
mov
es
push
ljmp
lea
xor
stc
repnz
and
add
pop
mov
js
push
or
cmp
push
mov
add
out
shrb
stos
jecxz
inc
mov
xor
jg
pop
xor
clc
add
jb
je
pop
and
adc
xchg
mov
es
ljmp
int3
jae
sbb
roll
xor
call
and
pusha
push
push
out
jle
mov
test
mov
int3
daa
loopne
loopne
sbbl
and
mov
cs
pop
and
push
aas
cmp
mov
fstps
and
jae
testl
mov
jl
testl
add
std
inc
push
cld
aam
xchg
aad
and
loop
mov
jns
or
cld
xchg
arpl
insl
cltd
mov
dec
mov
fisttps
mov
rclb
rcl
gs
fbld
mov
fucom
xlat
push
and
dec
inc
pop
mov
dec
jno
add
mov
sub
out
adc
mov
lret
repnz
xor
add
shl
mov
in
xchg
and
adc
push
sbb
ret
push
pop
fisttpll
push
xchg
mov
xor
xchg
mov
dec
fs
lret
mov
xor
in
add
pop
dec
lcall
sub
mov
xchg
dec
out
addr16
lods
pop
xchg
sbb
fcmovb
ljmp
mov
mov
add
loopne
out
test
repz
xor
lods
movsl
pop
std
enter
adc
cs
out
jnp
and
jl
adc
testl
xor
pop
cmp
dec
adc
es
int
lods
imul
repnz
cmp
inc
bswap
and
push
xchg
sbb
sub
in
sub
cmp
jle
scas
and
jb
inc
insl
popa
add
int
push
mov
test
push
fincstp
xchg
and
jl
pushf
int3
das
push
dec
xchg
in
dec
sahf
aam
sub
sub
adc
xor
xchg
and
pop
out
daa
stos
aam
jge
dec
stc
add
pusha
cmpsl
xchg
ret
push
sub
dec
lret
and
scas
pop
das
int
movsl
sbb
je
fs
fs
pop
lcall
fcom
imul
fdiv
pop
daa
mov
jo
xchg
dec
add
in
adc
jne
out
mov
inc
push
cmp
shlb
mov
jnp
push
ljmp
imul
push
cmp
mov
inc
or
and
int3
negl
bound
push
aad
fidivl
push
stos
jo
mov
ljmp
dec
sub
pushf
xor
cwtl
xor
add
jae
ss
repnz
imul
fwait
inc
push
xchg
sbb
in
mov
add
mov
sub
xchg
int
sub
push
mov
shr
rol
and
movsl
mov
aas
adc
or
sbb
shrb
or
mov
jg
fistpll
pop
mov
sub
adc
imul
xlat
addb
and
xor
pop
lods
mov
cmp
repnz
add
sti
jno
jmp
pop
mull
scas
out
xor
jg
das
xor
ds
sub
and
pop
adc
push
or
shlb
push
sub
inc
repz
or
dec
cmp
jmp
in
dec
ret
inc
xchg
data16
adc
lahf
aaa
push
cmp
pop
lahf
sbb
arpl
push
jns
add
add
and
and
inc
shll
pop
push
scas
mov
adc
sub
sbb
dec
add
add
xor
mov
outsb
aas
shrl
mov
imul
fstpt
rol
enter
aaa
mov
and
mov
cltd
xchg
xchg
test
inc
in
out
xchg
loop
xchg
dec
push
sub
xor
mov
mov
push
test
sub
hlt
lcall
mov
hlt
pop
adc
inc
repnz
mov
mov
mov
enter
loop
add
adc
stos
jp
mov
inc
fistl
movsb
bound
testw
outsl
dec
fistpll
fsub
test
add
int3
xchg
inc
dec
lods
sbb
mov
addr16
push
movsl
loope
sti
cli
popf
out
mov
xchg
mov
jp
jp
into
push
shrl
or
pushf
mov
push
xor
insb
iret
adc
dec
cmp
or
loop
aam
test
mov
lods
icebp
sub
sti
xchg
sub
js
mov
sub
imul
fnsave
lods
lds
fldenv
mov
xor
in
clc
ficompl
scas
jae
dec
stos
xor
sarb
rcrl
push
lds
pop
test
and
out
sar
roll
xchg
sub
mov
dec
call
add
push
push
mov
jmp
jge
insl
xor
cmpb
mov
aaa
addr16
push
loop
xchg
movsb
out
sbb
xor
cmp
dec
orl
stos
insl
ret
loopne
sbb
add
jmp
mov
test
dec
dec
clc
sti
jmp
xor
lds
pop
popa
cmp
dec
outsl
add
adc
stos
ja
orb
dec
insb
out
cmpsl
mov
xlat
mov
in
jecxz
frstor
daa
jle
test
rorb
fldcw
in
test
mov
lods
push
lret
in
and
xchg
aad
rolb
and
inc
and
addb
test
inc
inc
test
ljmp
aad
cmc
sub
inc
pop
dec
movsb
mov
arpl
jp
jmp
into
adc
push
inc
adc
lret
push
lods
aas
shll
xchg
fists
and
xor
test
rcrb
jg
dec
push
sbb
punpcklbw
and
or
mov
add
or
add
cld
int3
mov
mov
adc
rorl
xor
pop
mov
dec
cli
jge
fs
scas
nop
jp
sub
xchg
mov
test
sbb
xor
cld
xchg
inc
in
adc
aam
pop
mov
int3
outsb
hlt
iret
roll
shrl
mov
notb
push
clc
orb
dec
xchg
dec
mov
jmp
lret
ret
cli
pusha
sbbb
ljmp
outsl
in
rcrl
clc
jecxz
aad
outsl
pushf
mov
sbb
xorl
and
scas
sub
ds
pop
lds
clc
push
inc
hlt
sbb
in
jnp
in
ds
mov
and
cmp
dec
addb
in
cmpsb
mov
or
and
add
dec
iret
dec
pushf
lcall
in
adc
outsb
sarb
xor
popf
mov
jg
popa
sub
insb
xor
xchg
lahf
movsb
mov
cmp
daa
push
imul
pop
nop
mov
push
cmp
ret
push
mov
push
ljmp
jbe
jnp
mov
testl
adc
insb
inc
adc
add
das
adc
daa
cmp
xlat
ret
jb
js
adc
call
in
add
lret
mov
jmp
sub
jmp
popf
xchg
jnp
and
jecxz
test
ret
lds
in
pop
mov
mov
scas
je
xchg
jle
push
shlb
cmpsb
adc
aad
shl
sub
out
iret
and
fadd
pop
push
or
icebp
jp
jle
lcall
aas
inc
adc
inc
xor
test
sbbl
in
xor
lea
pop
out
mov
mov
js
out
push
push
mov
pop
dec
in
sahf
xchg
push
imul
and
imul
cmp
jns
pop
mov
out
cwtl
jp
popf
fidivrs
jmp
xchg
pop
inc
aam
jne
pop
mov
xor
out
das
les
xor
sub
sub
ret
xor
insl
mov
mov
push
out
scas
jg
xor
ds
jno
int3
in
loop
xchg
and
mov
insl
pop
mov
and
cmp
hlt
repz
fcomps
out
divb
fwait
push
cwtl
shll
pusha
add
test
cmpsb
dec
pop
iret
fldcw
sbb
adc
dec
sahf
out
pop
ja
xchg
ds
popa
aaa
lret
cld
add
lds
stc
aam
jmp
nop
jnp
test
sub
mov
leave
loop
lds
mov
cltd
fld
dec
mov
ret
sub
ret
jnp
aad
xor
or
jbe
adc
or
jnp
out
mov
pop
aam
dec
inc
mov
test
mov
jmp
fcomps
xchg
outsb
lret
or
lock
pop
mov
into
or
xchg
mov
fbld
popf
out
add
lcall
mov
int
add
push
and
iret
enter
in
leave
or
xor
and
es
inc
inc
jmp
repnz
and
popa
mov
or
mov
jb
inc
inc
mov
mov
aad
rcll
mov
add
lret
and
test
mov
jge
fcoms
jnp
or
mov
inc
push
cmp
stc
pop
daa
outsl
test
mov
add
mov
inc
mov
push
mov
lahf
mov
dec
and
pop
add
inc
mov
test
mov
clc
lahf
dec
mov
pop
test
mov
addb
adc
xchg
add
cmc
repz
lea
jo
mov
ret
and
sbb
cmc
bound
jbe
sbb
fsubr
mov
sti
ret
or
mov
inc
fsubrs
adc
icebp
out
jg
jmp
mov
cs
lods
pushf
pop
mov
add
add
shrl
mov
dec
dec
or
cmpsb
std
je
and
in
pop
cmp
std
dec
movsb
pop
inc
or
pop
pop
sub
fbstp
cmp
lods
out
or
jecxz
add
ficompl
pushf
ljmp
nop
dec
repz
in
repz
icebp
dec
lret
aam
push
add
dec
adc
imul
rolb
cwtl
dec
mov
mov
xchg
je
rdmsr
mov
lcall
lock
pop
push
mov
js
cmp
dec
popa
jbe
mov
nop
out
cs
es
mov
xchg
push
lock
lods
mov
push
mov
mov
inc
rcll
mov
inc
inc
dec
sti
adc
lcall
xchg
pop
jmp
mov
in
iret
sub
out
cwtl
mov
mov
cmp
inc
ret
xchg
insl
jnp
sub
inc
imul
hlt
out
or
pushf
xor
xor
gs
adcb
icebp
je
mov
aas
push
sub
sbb
flds
xchg
jge
sbb
pop
andl
push
sahf
pop
int
mov
rcrl
nop
mov
add
dec
cwtl
push
das
or
imul
test
je
sbb
xor
enter
jecxz
cmp
pop
sub
cltd
int3
imul
stc
je
out
jnp
lahf
push
lret
mov
adc
