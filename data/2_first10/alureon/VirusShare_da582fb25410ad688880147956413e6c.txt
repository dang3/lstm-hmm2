or
fsubrs
pop
push
xor
mov
sub
nop
jg
sub
mov
daa
dec
pushw
lods
cmpsl
mov
scas
jle
pop
dec
pop
les
jne
xchg
xchg
xor
and
push
js
outsl
packsswb
pusha
test
ds
mov
inc
dec
and
and
jae
cld
dec
imul
mov
inc
pop
adc
sub
mov
or
fwait
push
pusha
imul
xor
mov
sbb
cmp
xchg
ljmp
cmp
dec
jae
ja
jnp
sub
shr
pop
jb
lock
stos
pop
pop
enter
cmpl
pop
aas
out
dec
nop
pop
outsb
sbb
ljmp
mov
and
mov
std
jp
push
sbb
cmp
pusha
lcall
sub
mov
jmp
repz
cli
xor
int3
les
sbb
scas
in
pushl
shlb
shr
or
sbb
pop
int3
jae
sub
push
and
mov
out
daa
pop
sti
and
or
pop
mov
out
jb
sub
sbb
adc
cmp
xchg
iret
aaa
repnz
ret
repz
sbb
jae
xor
insl
sbb
imul
in
ret
sbb
xchg
dec
add
rcll
fstps
fimuls
add
int
sub
push
clc
xchg
jecxz
sub
sbb
and
jnp
inc
int3
and
xchg
insb
dec
cmp
test
mull
push
inc
xchg
mov
in
jb
cmpsl
cld
aam
cld
fcompl
test
mov
fsin
shlb
sub
jno
daa
add
push
lret
dec
outsb
lret
push
cld
inc
xchg
idivl
pusha
fldcw
dec
cmc
mov
jo
mov
push
pushf
daa
movsl
loop
test
xor
push
aas
sub
stos
mov
add
add
adc
loope
and
arpl
adc
dec
sbb
inc
loope
int3
cli
and
mov
fsubrl
sbb
push
jno
into
sbb
leave
push
mov
jmp
fldln2
inc
popf
jmp
out
or
pop
mov
mov
test
jle
mov
hlt
jno
mov
mov
jo
dec
jae
sti
push
repnz
stos
sub
pop
shll
mov
fmulp
lahf
sar
lret
pop
xchg
xor
jns
or
jecxz
push
jno
inc
cmp
jo
add
xor
jl
sbb
test
push
adcb
hlt
lea
fdiv
stos
lods
pop
int
mov
movsb
mov
push
lock
stos
push
add
adc
sti
into
mov
push
fistl
cmp
aam
pop
sbb
mov
iret
fiadds
cld
lods
add
dec
cmp
mov
jo
xchg
sbb
push
add
ja
mov
and
and
in
in
or
pop
ret
mov
insb
cld
inc
mov
xor
dec
iret
mov
push
xchg
and
cmp
add
jne
inc
push
in
ss
lahf
pop
mov
lret
adc
js
addl
dec
jb
enter
in
inc
imul
inc
iret
mov
add
scas
mov
enter
movsb
pusha
inc
add
push
or
adc
scas
sbb
mov
xor
dec
ja
mov
mov
lahf
in
leave
push
aam
add
daa
cmc
loope
mov
outsb
mov
jle
iret
fneni(8087
adc
xor
jl
or
jge
lods
fs
cmp
mov
andb
rcr
sub
lock
cmp
cmp
xchg
push
add
jecxz
lods
xchg
popa
pusha
scas
mov
outsb
mov
lea
adcb
bound
cs
inc
adc
les
aas
push
jno
xchg
mov
sti
idivl
in
lahf
sub
dec
xor
out
repnz
pop
cwtl
dec
jb
adc
xor
fnstcw
push
cmp
jecxz
cmc
mov
cli
dec
pop
adc
xor
add
xlat
lods
xor
pushf
sti
fistpll
push
lds
mov
shll
das
lcall
dec
mov
jle
lret
pop
fs
pop
xor
jecxz
inc
jge
mov
shlb
jbe
add
cli
xor
inc
cmp
bound
push
pushf
aas
dec
add
xchg
push
mov
mov
fiaddl
pusha
inc
stos
js
fistpll
loope
jecxz
adc
ret
rorb
or
dec
cmpsb
shl
leave
or
and
or
and
jge
jl
mov
sub
mov
out
test
int3
mov
ret
mov
and
negl
stos
call
xorb
xchg
jge
ja
jmp
or
jmp
mov
in
les
pop
std
iret
test
fistpll
and
dec
jecxz
xchg
aam
xchg
cmpsb
inc
das
pop
or
mov
pop
pop
cmp
xchg
movsl
shl
ffreep
mov
repnz
mulb
inc
int3
jmp
andl
fdivrs
push
in
pushf
jg
lea
dec
rorb
dec
jns
mov
ss
cmp
sbb
jnp
pop
stos
mov
xor
sbb
mov
ret
push
xchg
stc
xchg
es
jns
jb
and
push
or
sbb
or
test
ror
stc
mov
mov
push
cmc
clc
in
repnz
imul
addr16
mov
insb
fs
dec
pusha
cmp
es
dec
addb
pushf
pop
adc
or
jmp
xor
push
adc
fwait
jg
and
inc
sub
out
idiv
jg
test
pop
leave
inc
nop
popa
sub
mov
push
nop
out
push
or
vmovlps
leave
ret
or
sub
push
fnstcw
aas
jnp
dec
add
movsl
sarl
test
out
and
jns
adc
cmpsb
sbb
orb
shrb
push
lds
xor
ds
pushf
scas
xchg
inc
int3
inc
mov
into
fs
jle
dec
js
jp
sbb
sbb
push
sbb
mov
mov
scas
xchg
subl
fisubrl
inc
xchg
sub
into
dec
iret
jg
inc
test
inc
lea
xlat
add
mov
sub
fstpl
xor
call
scas
dec
test
mov
loope
loope
or
push
jl
xchg
movsb
cmc
pushf
and
and
sbb
ret
in
lahf
sub
xchg
push
push
jmp
push
inc
gs
xorb
xor
xchg
mov
jmp
mov
fmuls
adc
daa
sub
je
inc
imul
xchg
and
popa
adc
jns
pop
rorl
imulb
push
mov
mov
jl
stos
mov
mov
push
dec
fidivrs
adc
mov
loop,pn
push
cltd
push
shlb
lret
in
inc
add
xor
data16
daa
icebp
call
pop
dec
adc
jge
and
jae
xchg
bound
mov
xchg
pop
xor
out
js
xorl
sub
xor
aaa
lret
add
mov
lds
cli
call
xor
cmp
scas
add
add
cmpsb
std
dec
adc
xor
jns
cmp
sahf
insb
jb
cmp
mov
or
push
dec
and
xchg
dec
inc
ret
cltd
fdivl
aam
or
pop
imul
out
data16
hlt
sub
inc
push
clc
scas
jbe
mov
sub
or
push
es
sbb
lds
cmpb
mov
int3
stc
sub
adc
lds
pop
inc
mov
aam
dec
add
push
or
xor
xchg
std
push
pop
or
insl
fs
jb
rclb
xchg
mov
sbb
add
orl
or
sbb
push
loopne
jp
pop
aad
xchg
sbb
data16
loopne
test
dec
cltd
sahf
jnp
push
add
popf
in
test
lahf
or
push
xchg
adc
inc
out
fisubs
and
sub
cli
mov
dec
es
sub
dec
ljmp
xchg
cwtl
push
cmp
sub
mov
hlt
repnz
aaa
sub
lret
mull
cmp
pop
adc
xchg
mov
out
sarl
fnstsw
lcall
rorl
sti
inc
xchg
stc
aam
push
and
inc
iret
add
mov
xor
scas
aaa
addb
mov
sub
inc
cmpsb
ret
mov
cmc
jbe
aaa
cmp
test
push
cmpsl
mov
test
xchg
in
lret
cmpsl
pop
or
or
outsl
mov
iret
mov
xor
leave
mov
outsb
mov
std
inc
leave
or
insl
pushf
es
cmp
jne
xchg
mov
test
lcall
sub
jecxz
or
xchg
pusha
or
jae
add
push
jbe
add
incl
movsl
push
int3
or
add
sar
push
xor
je
adc
lock
hlt
mov
repz
jmp
fldl
adc
gs
cwtl
movsb
int3
adc
cmp
pushf
mov
rcr
sub
pop
int3
loopne
mov
jnp
push
mov
cmc
stos
sbb
mov
jo
push
inc
and
or
mov
dec
lods
fistps
in
cmc
sbb
cmpsb
pop
negl
lret
sub
pop
mov
mov
pop
push
mov
lret
mov
aad
and
movl
leave
std
jne
cmpsl
int3
imul
imul
mov
mov
and
sti
in
cld
fwait
or
cltd
mov
rcrl
imul
pop
aas
xchg
mov
dec
jno
ficoms
add
insb
popf
fcoml
repz
ja
stos
cmp
inc
adc
mull
xor
gs
bound
movsl
pop
fidivrs
xor
ss
xor
shrb
mov
push
loopne
mov
lock
es
imul
mov
mov
ret
sub
pushf
adc
xor
pop
pop
dec
test
add
inc
out
xlat
cmp
inc
mov
adc
pop
jnp
mov
dec
cli
addr16
in
nop
and
scas
push
and
sbb
jb
cmp
lods
popf
mov
mov
nop
sub
xlat
js
pop
pop
dec
in
or
jg
inc
popf
out
dec
and
bound
push
mov
jb
sbb
sub
cmp
push
sbb
js
mov
cmp
pop
mov
ret
xchg
imul
xor
and
sbb
fistpll
es
push
scas
out
cld
fdivr
loop
lds
cmpsl
jae
ja
mov
call
pop
mov
xchg
ss
xlat
jl
imul
shlb
mov
pop
in
jo
pop
mov
mov
iret
dec
jl
out
jmp
mov
xor
ds
fidivl
mov
fcmovu
movsl
xchg
mov
or
addr16
pop
fcmovnbe
loope
push
sti
xor
jno
mov
and
test
int3
push
imul
mov
leave
or
mov
ficoml
dec
mov
pop
hlt
rorl
sti
push
cmc
les
arpl
mov
xor
pusha
push
loop
mov
adc
xchg
sbb
mov
movsl
imul
pop
adc
daa
das
leave
cs
pop
in
pop
loope
lea
cmp
push
add
adc
pusha
xor
iret
lea
mov
sbb
mov
fsubs
imul
xchg
jo
fsubp
dec
in
mov
add
pop
aam
and
punpcklbw
jno
loope
out
add
loopne
frstor
dec
add
mov
add
cwtl
adc
xlat
int3
pusha
cmp
ret
xchg
pop
xchg
push
mov
out
or
pushf
mov
movsb
or
xlat
rclb
jo,pt
repnz
jp
stc
xchg
dec
cmpsb
repz
stos
fcmove
or
sbb
fnstcw
divl
adc
dec
mov
sbb
inc
jg
imul
mov
aam
cwtl
dec
dec
sbb
mov
sbbb
je
cmp
pop
xchg
push
imul
add
nop
gs
and
aad
jo
mov
lods
jo
mov
pusha
insb
cmp
dec
push
cmp
call
cmp
pop
cs
jb
pop
ja
nop
std
pop
ds
shrb
inc
inc
pop
mov
shrb
popl
jecxz
mov
dec
dec
pop
or
shlb
lahf
ds
add
or
xchg
orb
sti
jp
push
inc
push
ljmp
hlt
cmp
sbb
mov
rclb
push
cld
pop
lea
aam
test
xchg
test
xor
xchg
mov
mov
mov
jl
mov
sbb
popf
sub
xchg
out
sti
xchg
cmp
push
jbe
dec
jp
mov
sarb
pop
icebp
or
ljmp
sbb
push
mov
outsb
cli
cmp
test
loope
cmp
lahf
mov
push
stos
adc
push
pop
sti
mov
fistpll
and
loopne
repnz
jecxz
je
jmp
aaa
loopne
mov
or
addl
test
push
mov
add
popf
out
cltd
testb
cmp
mov
das
js
adc
test
mov
cmpsb
sub
fisttps
or
pushf
dec
imul
mov
mov
mov
js
cmc
enter
enter
popf
bound
pop
and
aaa
enter
add
stc
dec
xor
and
out
dec
sti
pop
inc
push
into
dec
lahf
enter
or
sarl
mov
mov
lea
sub
mov
cs
mov
fisubs
mov
mov
icebp
fadds
or
jno
out
into
push
in
jb
aaa
adc
mov
cmpsb
popa
or
inc
add
mov
mov
loope
pop
test
out
mov
ljmp
pushf
mov
xor
mov
xorl
pop
sti
enter
mov
lcall
mulb
jmp
aad
pop
push
test
pushf
sbb
shr
xchg
lods
leave
xor
pushf
sbbl
incl
dec
gs
and
mov
mov
in
or
sbb
and
cmp
jbe
sbb
aad
scas
cmpsb
cld
test
aad
jb
sbb
mov
and
and
sub
add
jmp
outsb
aam
cli
jl
cmc
sbb
sbb
cmpl
mov
in
sbb
out
and
mov
scas
andl
insl
shrl
lock
fildl
inc
xchg
xchg
inc
ret
mov
adc
movsl
push
push
in
or
dec
inc
ret
popf
xchg
movsb
gs
dec
inc
sub
push
jle
jp
xor
leave
sahf
mov
in
popa
push
mov
dec
inc
testb
pop
dec
inc
cmpsb
cmp
imul
outsl
es
stos
in
mov
pushf
hlt
adc
lock
sub
jb
cmp
xlat
push
or
ja
sbb
inc
das
mov
jmp
xor
adc
cmpsb
stos
aad
jg
or
ret
and
inc
push
pop
popa
ret
and
out
mov
cli
inc
lcall
js
sub
cmp
sub
pop
add
dec
mov
dec
aaa
jo
jp
push
jecxz
mov
dec
adcl
mov
jmp
insl
jmp
pop
sub
into
mov
in
stc
pop
out
push
lret
inc
adc
adc
mov
inc
dec
add
pop
shll
pop
jecxz
jo
insl
les
fsubs
adc
lock
scas
inc
repz
jae
shrb
xchg
insb
add
int3
fsts
push
push
movlhps
scas
insl
pushf
push
pop
int3
sti
fstpt
ret
sub
add
jbe
das
fists
lods
pop
aam
xchg
filds
popa
cmp
fwait
pop
lret
ret
xchg
test
pop
adc
ficomps
inc
push
cmp
jp
into
mov
sarb
xchg
inc
fdivl
xchg
scas
test
fcomi
out
sbb
dec
jge
cld
mov
ja
leave
and
leave
inc
mov
add
test
data16
aaa
in
lret
mov
jmp
in
fwait
adc
mov
xor
mov
sbb
xchg
mov
or
pop
dec
cli
xor
inc
cmp
ds
std
add
inc
push
fdivrs
and
and
scas
mov
inc
cmp
xlat
je
mov
les
adc
mov
pusha
dec
flds
jl
stc
mov
jae
mov
sti
dec
add
lods
mov
sbb
imul
adc
mov
fsubrs
pop
jecxz
int3
pop
repz
mov
xor
call
adc
or
cwtl
mov
mov
call
pop
in
mov
and
and
sbb
lret
nop
cmp
sbb
jno
adc
outsl
sti
jge
push
jge
pop
add
push
inc
fdivrl
add
stos
shlb
lcall
stc
ljmp
fs
out
xchg
sbbb
inc
insl
add
jae
pop
mov
pop
movsb
bound
into
mov
and
mov
jp
mov
addr16
and
dec
popf
add
add
push
stos
lods
jae
arpl
xchg
push
ljmp
add
scas
mov
cld
inc
cwtl
data16
ds
pop
repz
mov
xlat
mov
scas
aas
push
pop
nop
sbb
test
push
pop
mov
stos
add
mov
aaa
arpl
outsb
adc
add
xchg
mov
mov
in
push
mov
ds
adc
xchg
clc
push
jno
int
int3
add
stos
sti
iret
ret
pusha
es
sahf
sbb
mov
lods
pop
xor
pop
adc
mov
or
jne
ficoml
out
mov
sbb
push
repnz
aad
cld
sbb
aas
mov
sbb
nop
lock
pop
mov
mov
mov
enter
push
push
lea
cwtl
pop
inc
int3
fstps
rorl
test
fdivrl
loop
cli
lret
hlt
lret
loope
popa
in
cmp
iret
ret
icebp
cmp
inc
cmp
stos
xchg
sahf
pop
adc
mov
dec
xchg
xchg
je
inc
mov
pushl
or
jp
jb
sbb
mov
jecxz
dec
push
in
out
scas
shlb
test
xorl
adc
mov
cmp
call
mov
mov
sub
inc
xchg
xchg
mov
push
clc
xchg
insb
movsb
jmp
xor
stos
outsb
mov
mov
dec
or
inc
aad
cwtl
push
and
repnz
loopne
mov
cmp
adc
test
xor
imul
inc
sahf
jo
test
cmpsb
jbe
lret
notb
jne
addr16
push
lea
sbb
mov
js
stos
test
andl
xor
lods
iret
clc
mov
shlb
add
jbe
cmpl
aam
push
movsb
imul
jno
mov
cmp
lds
in
aaa
lds
insl
in
xor
cmp
jbe
enter
mov
mov
mov
adc
dec
and
loope
xchg
in
xchg
repnz
loope
mov
inc
lcall
das
inc
push
sbb
scas
inc
jle
lds
jnp
fdivl
cld
sbb
adc
in
rcrl
notb
and
mov
mov
push
sbb
push
mov
or
into
cmp
aad
inc
xchg
sub
sti
jbe
mov
fcompl
outsl
dec
jns
push
cld
push
std
cmp
into
pop
lret
jnp
inc
or
movb
or
fwait
jne
xorps
es
mov
or
cld
aad
push
xchg
inc
xor
push
fisttps
cld
ret
outsl
adc
xchg
jbe
dec
pop
lret
sahf
dec
les
call
add
push
cli
mov
repz
adc
xchg
sub
insb
mov
andb
mov
jo
inc
or
cld
scas
sarl
or
inc
bound
xchg
ficoms
cmp
or
dec
xor
stos
mov
adc
sti
movsl
inc
pop
int
movsb
ss
dec
lods
shlb
lods
pop
sbb
mov
mov
lds
pop
aas
fcomps
xchg
setb
iret
lods
and
jmp
lds
sahf
sbb
push
or
lret
jae
or
lods
ljmp
jo
cmp
add
inc
imul
sbb
sub
loopne
scas
stos
push
cmp
scas
mov
fsts
jl
les
ret
add
jne
int
cld
arpl
out
and
mov
and
xchg
pop
mov
jp
mov
scas
leave
push
push
test
data16
mov
push
repz
and
pop
shlb
stos
hlt
add
fnsave
inc
xor
popf
inc
adc
cmp
fmull
and
incb
or
orl
into
inc
adc
lods
push
xor
xchg
ja
mov
daa
pop
mov
ret
cmpsb
hlt
outsl
mov
pop
sub
xor
jns
fdivs
push
xchg
jbe
pushf
popa
pop
add
scas
loope
cmp
mov
push
adc
lods
mov
push
es
sub
push
insb
ds
jp
cmc
and
mov
lahf
lods
fwait
mov
pop
test
mov
adc
and
orl
out
push
icebp
or
xchg
push
rclb
fdivs
dec
fisttps
ja
ljmp
dec
movsl
cmp
shrb
movsb
sahf
mov
mov
test
rorb
or
jbe
cli
in
loop
sub
add
int3
jge
ss
out
or
inc
jge
bound
and
mul
push
addr16
xor
jae
sub
aam
pushf
jge
pop
sbb
aaa
shll
addr16
or
xor
int3
lret
pushf
push
shll
push
imul
cld
mov
add
mov
add
pop
fists
cmp
movhlps
bound
pop
jb
test
punpckhbw
jg
mov
shll
mov
pushf
sar
lahf
sub
push
pcmpgtd
fdivr
xchg
push
or
sub
outsb
pop
call
push
jle
pushf
imul
adc
cli
xchg
cmp
inc
pop
inc
scas
jmp
scas
bound
or
or
sete
mov
scas
push
and
insb
add
mov
mov
rclb
mov
lret
add
mov
sub
sbb
lret
dec
sti
xchg
dec
jp
clc
shlb
adc
jg
ds
sahf
xchg
xchg
test
pushf
jb
pop
xor
jns
lods
dec
pop
xchg
or
jmp
aaa
ret
sarl
cltd
lock
out
adc
mov
pop
rclb
xor
xchg
mov
and
in
ret
mov
mov
imul
sub
push
xchg
fs
adc
dec
arpl
mov
push
or
movsb
sbb
xor
cmc
mov
out
loop
icebp
mov
ljmp
mov
test
sbb
jecxz
push
je
cld
add
pop
subl
fstpt
and
mov
cld
pandn
adc
rcll
lahf
out
leave
push
dec
data16
data16
jecxz
lahf
or
xchg
jle
adc
or
mov
cmp
sbb
mov
js
jae
repz
push
pop
mov
jmp
pop
xor
inc
stc
adc
pop
lret
fsubs
inc
dec
and
lret
stos
loopne
cmp
cmc
iret
jne
repnz
out
cwtl
cmc
cmp
sub
jge
or
dec
stos
mov
cli
mov
mov
call
adc
sbb
or
cld
bound
roll
sub
stos
mov
lods
test
adcb
movsl
adc
int
shrl
sub
mov
adc
std
adc
mov
xor
push
sub
fs
mov
bound
inc
fisttpl
fiaddl
inc
je
sbbl
mov
popf
gs
mov
arpl
and
cmpsb
mov
das
cmc
adcb
loop
addl
adc
lds
cmp
push
xor
fbstp
lahf
sub
mov
lcall
lahf
popf
sub
mov
cld
cmp
movsl
popf
lahf
adc
call
inc
sub
cmp
mov
roll
xchg
imul
in
hlt
sbb
and
loope
fdivs
cmp
mov
jo
mov
ret
xchg
dec
xor
sbbl
add
aam
jmp
add
add
clc
divl
outsb
test
out
cltd
mov
test
clc
pop
and
xchg
mov
fcmovu
into
orl
jne
fisubrs
stos
sub
fimuls
ret
out
and
sub
es
nop
mov
adc
mov
orb
lds
std
xlat
add
pop
scas
fidivrs
jnp
lahf
lret
or
fidivs
jg
scas
bound
out
jge
adc
enter
push
inc
jns
dec
jmp
mov
fsubr
jnp
test
pop
push
add
cwtl
xchg
pop
stc
stc
out
mov
js
sub
jg
inc
push
fwait
sar
cmp
lret
popa
in
call
idivb
movsb
clc
stc
dec
sbb
and
mov
addr16
jo
push
mov
mov
fldenv
scas
ret
scas
add
popf
dec
rclb
ljmp
popf
mov
fsubr
and
xchg
mov
lret
mov
fs
xchg
xor
mulb
incb
jge
or
cltd
std
lock
inc
notl
inc
pop
and
xor
mov
sub
pusha
fs
outsl
ud1
js
adc
repnz
clc
pop
fidivrs
in
sbb
xor
mov
inc
pop
mov
insl
sub
inc
imul
push
arpl
pop
inc
xor
clc
jbe
lret
xchg
adc
and
jl
cltd
popf
cs
cld
ror
scas
out
inc
adcb
dec
shll
and
pop
add
and
outsb
out
xchg
test
sbb
and
xchg
out
mov
mov
or
push
pop
cmp
dec
sbb
mov
ret
mov
imul
push
jp
add
lahf
push
xchg
sbb
gs
ret
in
clc
and
cmp
xor
test
dec
push
test
xchg
imul
aam
push
aam
test
out
push
leave
jb
pop
cwtl
cmp
movsl
call
mov
mov
addr16
jns
xchg
or
ja
mov
push
decl
or
cmp
fisttpl
and
jl
scas
or
into
pop
insb
je
addr16
out
and
inc
mov
pop
je
mov
pop
aaa
cmpsb
and
test
sti
clc
imul
and
out
insl
in
fsubl
xchg
xchg
gs
cmp
scas
inc
sub
data16
adc
js
stos
loope
mov
lret
pop
in
jnp
je
out
inc
data16
dec
cwtl
cmpsb
push
outsb
popf
mov
ljmp
leave
ret
and
fimuls
popa
xor
push
shlb
xorb
sbb
add
loope
lods
jns
int
dec
mov
push
in
mov
aaa
inc
addl
push
sub
lcall
imul
push
xor
pop
and
xor
loopne
outsb
jns
push
mov
push
cmp
movsb
dec
stc
imul
scas
into
enter
push
ret
ljmp
sub
mov
or
push
test
mov
push
clc
add
in
lret
imul
nop
xchg
aam
fildll
push
in
push
dec
sbb
insb
jae
mov
fldl
jnp
lcall
lds
jg
or
out
pop
out
das
mov
push
es
test
ss
push
pop
iret
aas
test
lods
push
mov
xchg
sbbl
cmp
hlt
jp
pop
add
rorl
jbe
scas
paddsw
ja
adc
inc
and
in
mov
jne
pop
cmpsb
dec
add
pop
cmp
push
dec
and
mov
inc
mov
mov
add
loope
cwtl
fisubrl
pop
test
sub
pavgb
jae
mov
sahf
xor
lret
outsl
ret
sub
int
imul
pop
add
sbb
rcrl
inc
sub
iret
add
scas
sbb
xchg
and
mov
jnp
cmpsl
pop
adc
rcrb
sub
mov
sub
jns
enter
push
stc
fs
adc
mov
sub
sahf
jne
pop
fsubrp
pop
inc
or
int
sbb
pop
mov
repz
adc
xchg
mov
xor
mov
xchg
mull
imulb
icebp
mov
icebp
add
jo
sub
not
cmpb
incl
scas
xchg
rolb
add
push
les
aaa
mov
jne
pop
js
push
test
mov
mov
jae
adc
ds
fcmovnb
adc
adc
add
aam
mov
push
xor
mov
pop
xchg
inc
enter
cmp
push
jecxz
push
sub
sub
mov
dec
xor
mov
cs
pop
or
pop
mov
mov
xor
aad
add
ret
mov
mov
mov
xchg
cmpsl
lds
push
gs
pop
stos
push
xor
mov
xchg
ret
shll
out
ret
push
inc
rol
dec
fimuls
and
cmpsl
aad
mov
stos
dec
mov
shl
rcrl
insl
scas
sbb
repz
xchg
cmp
or
into
mov
fisubrl
cmpsl
dec
and
jbe
pop
mov
icebp
sti
xchg
or
cmpsl
push
lcall
jbe
adc
pop
inc
pop
pop
lcall
add
add
pushf
iret
xchg
mov
mov
xchg
or
lods
add
xor
mov
nop
sub
dec
mov
gs
rolb
cmpsl
and
and
xor
pop
adc
cmp
mov
insb
icebp
add
push
add
dec
in
mov
mov
ds
enter
jle
adc
xchg
and
jp
mov
mov
adc
fildll
add
push
mov
mov
aas
xor
jbe
fisttpll
sub
aas
xchg
sub
lock
pop
fnstenv
int3
adc
fcomi
jp
pushf
mov
test
cmpsl
dec
test
movsb
test
ja
jg
scas
nop
or
inc
pop
pushf
mov
cs
hlt
inc
xchg
dec
lret
or
cmpsl
andb
dec
add
ja
sbb
or
mov
pusha
in
push
mov
adc
cmp
dec
out
dec
dec
cmp
aaa
dec
xor
insb
dec
fcomi
into
out
xor
or
sub
es
jae
adc
shlb
ss
pop
rorb
dec
mov
pop
out
mov
loope
aaa
sbb
xchg
adc
cs
pop
stos
sbb
test
inc
xchg
adc
sub
and
xor
push
inc
or
mov
mov
inc
sarl
mov
jp
arpl
fs
or
mov
jno
dec
cmp
and
xchg
divb
imul
dec
push
mov
dec
ficomps
icebp
xchg
or
jge
fistpll
jns
push
cmpb
jecxz
test
adc
adc
ljmp
cmp
ret
dec
xor
lcall
or
mov
stos
jno
mov
cmpsb
jecxz
sahf
js
popf
mov
jle
das
inc
popf
push
enter
das
add
popf
loop
enter
cmpsl
ficoms
xchg
add
arpl
mov
pop
addb
les
cld
xor
js
lret
lods
xchg
pop
sub
fsubrl
ss
mov
hlt
aaa
xchg
lock
movsl
xchg
faddp
mov
loopne
add
in
lods
push
mov
jns
jae
ret
nop
inc
out
fucomp
je
imull
js
pop
adc
out
imul
lahf
ffreep
jno
into
cmpsb
mov
lods
outsl
ja
je
jns
pop
jle
and
push
push
scas
pushf
sub
and
sub
or
or
cmp
addl
mov
mov
insb
lcall
xchg
fcoml
into
rorl
fcompl
inc
fiaddl
jmp
sub
add
cmp
gs
add
and
ficomps
pop
iret
in
inc
xchg
cmp
rol
adc
int
nop
push
fstl
shll
inc
sti
push
and
in
jmp
imulb
dec
mov
pop
dec
imul
mov
movd
jecxz
dec
mov
in
dec
in
fnsave
xchg
std
xor
xchg
aad
les
gs
inc
data16
xchg
xchg
lcall
cmc
dec
xchg
sub
push
push
repnz
mov
test
les
xchg
cltd
push
sbb
popa
cmp
add
pop
mov
call
loop
dec
push
cmp
mov
pop
dec
shrb
and
xchg
pop
int3
test
push
mov
adc
sahf
cmc
in
cs
sbb
gs
and
lcall
mov
mov
mov
clc
nop
mov
pop
pop
cltd
or
shrl
xchg
insl
dec
mov
sub
sbb
inc
push
aas
mov
rclb
or
call
out
mov
and
xchg
sub
add
and
outsl
inc
mov
mov
scas
add
lods
pop
xor
dec
loop
repnz
sbb
ret
pop
add
and
test
bswap
sti
aaa
mov
adc
and
fsubs
ds
or
push
data16
cmpsl
lock
add
fs
mov
insl
xor
sub
das
pop
cmc
movaps
sarl
fcomps
push
lods
xchg
dec
testb
mov
shll
push
or
les
mov
js
daa
fsts
adc
in
icebp
shrl
pop
push
les
popa
mov
and
ja
out
pop
pop
jp
test
inc
inc
lods
clc
push
mov
inc
xchg
rorb
cltd
popa
dec
pop
pop
fwait
mov
sbb
mov
mov
scas
inc
push
inc
sub
push
clc
movhps
cmp
dec
mov
and
mov
and
pop
fsubl
cmp
or
icebp
add
mov
push
cwtl
or
jmp
bound
aaa
and
fmull
xchg
mov
divl
pop
or
jbe
lea
mov
test
push
je
mov
add
outsb
test
mov
adc
add
xchg
sar
test
out
xor
push
lods
leave
adc
inc
push
filds
enter
cmpsl
out
push
xchg
jbe
ds
fadds
mov
ja
lahf
pop
insb
rcrb
cmp
lods
xchg
cmp
pop
inc
orb
fisttps
cmc
push
shrl
cmc
in
dec
mov
or
sbb
out
xchg
into
out
pop
inc
mov
faddp
inc
jg
fiaddl
popf
fadd
jecxz
inc
fbld
fbstp
inc
cmp
in
int
in
pop
push
stos
fsub
js
and
lds
scas
enter
into
jae
xor
and
jbe
sarb
imul
iret
xchg
lods
repnz
leave
sarb
cwtl
jo
popf
cmp
xchg
push
xchg
hlt
or
ds
cs
int
or
fbstp
mov
call
and
adc
hlt
mov
or
xor
sti
xchg
jg
nop
xchg
push
xor
in
shl
roll
lcall
pop
cmpsl
jo
arpl
adc
inc
ss
xor
into
sbb
aam
pop
add
hlt
nop
cld
mov
sub
in
js
pop
push
test
push
mov
mov
xchg
imul
mov
inc
jle
ret
sti
pop
das
std
push
cmp
bound
push
adc
into
dec
int
fsubrl
mov
xchg
arpl
xchg
xchg
ds
scas
jne
fbstp
push
cltd
jno
adcb
cmpsl
xor
mov
fst
mov
xlat
imul
data16
push
mov
outsl
int
shlb
inc
mov
ljmp
xchg
stos
cmp
jle
adc
std
mov
mov
and
fwait
movsl
mov
sbb
push
call
mov
cmc
clc
add
js
xor
inc
pop
pop
cmpsl
clc
cmp
fisubs
pop
jnp
mov
and
ljmp
or
xchg
lods
cmpl
push
stos
test
ror
outsl
pusha
cmpsl
mov
cmp
data16
in
jbe
push
cld
clc
jno
rcll
xchg
mov
sti
in
mov
lcallw
outsl
jmp
jnp
pop
outsl
stc
xchg
push
shll
cltd
into
les
arpl
fstpt
bound
dec
pusha
and
out
iret
fidivrl
inc
push
add
mov
jno
inc
pop
test
sahf
adc
push
mov
push
aas
mov
out
dec
lds
push
xchg
xchg
ret
mov
std
clc
pop
jo
loope
and
cs
fwait
sti
das
xchg
mov
inc
jge
push
sbb
dec
mov
add
call
cmc
testb
mov
push
out
adc
jae
icebp
sbb
mov
insb
xor
cwtl
orl
outsl
mov
mov
jmp
xchg
xchg
or
jbe
jns
mov
test
decl
cmp
dec
push
shlb
daa
aaa
cmp
gs
cs
mov
mov
daa
add
inc
inc
pop
add
mov
jo
and
sarb
fcos
sbbb
test
call
outsb
in
ljmp
or
rcrl
mov
fs
cltd
sbb
lods
jbe
insb
push
dec
xor
fbstp
and
ljmp
in
pop
add
mull
sarl
xchg
lahf
or
cltd
inc
inc
push
int3
adc
sub
xor
subl
fcomps
ret
fildl
int3
das
loopne
xchg
repnz
imul
mov
sbb
push
jmp
xor
xchg
adc
stc
mov
push
jmp
hlt
mov
ss
xor
inc
adc
mov
push
ss
sbb
fwait
xchg
je
mov
cmp
or
pop
shr
je
adc
mov
cmp
sbb
stos
ret
mov
xlat
mov
mov
sbb
rclb
das
add
mov
push
sbb
enter
stos
rcll
xchg
or
fbstp
loopne
sbb
cs
sbb
aam
sub
mov
cs
movsl
mov
add
lahf
adc
fsubr
xchg
add
loopne
xor
jl
xor
ret
pop
mov
loope
and
pushf
nop
xchg
out
addr16
out
into
pop
pop
push
leave
pop
adcl
leave
push
jb
les
cmp
ja
push
xor
xlat
dec
scas
insl
sub
xchg
dec
movsb
inc
or
aas
cli
push
sub
sub
loopne
cmp
aad
cmp
fs
mov
das
aas
das
lods
xchg
shr
xchg
mov
iret
insl
popa
jge
je
xchg
xchg
add
ss
sub
mov
mov
cmp
add
data16
xlat
aad
cli
cmp
push
iret
jb
into
and
scas
leave
inc
lret
mov
mov
scas
lcall
inc
jp,pt
stos
mov
scas
stos
or
fidivs
add
add
sbb
cli
je
outsl
or
jne
nop
or
lods
sti
lds
jne
shrb
cmpsb
jecxz
nop
out
mov
inc
mov
jne
cs
pop
mov
jns
inc
cs
adcb
xor
inc
sbb
enter
xor
les
lock
mov
dec
ret
pop
mov
test
gs
movsl
iret
lds
loopne
test
cmpsl
scas
cli
out
test
faddl
push
cmp
aam
cmp
add
dec
xor
fcmovnb
pmullw
mov
push
rolb
add
mov
js
or
rcrl
jge
sbb
insb
scas
jns
xor
lods
scas
mov
fists
jp
into
lods
ljmp
testb
xor
add
test
in
sub
push
xor
lret
xor
mov
movl
xchg
xorl
ret
mov
test
cmp
cmp
xchg
movsl
pop
sub
iret
clc
jo
ljmp
or
add
daa
or
pop
aad
icebp
imul
stc
jecxz
xchg
mov
jae
cs
fwait
les
pop
adcb
sub
pusha
jmp
mov
or
les
pop
scas
fildll
dec
hlt
mov
dec
xchg
in
rorb
shr
mov
adc
inc
movsb
jl
enter
out
pop
mov
out
mov
loope
cmp
add
scas
push
out
fildll
movsb
sub
into
in
add
sbbb
sub
adc
in
fidivl
jnp
aad
stos
test
icebp
mov
cmc
sbb
ds
insb
xor
mov
out
in
fisttps
adc
repz
hlt
push
xor
cmp
rcrl
stc
stos
pop
out
pop
sbb
loop
xor
cmp
ds
jns
pushf
into
mov
pop
sub
popa
sbb
or
scas
inc
cmp
xchg
test
sbb
arpl
mov
outsb
arpl
mov
scas
fcoms
cli
add
out
push
lret
mov
mov
test
flds
cmp
pop
ret
fsubrs
dec
xlat
lret
adc
mov
cmp
mov
subb
sbb
leave
mov
and
loopne
xlat
and
lods
mov
cmp
pop
nop
repz
decb
fisubrs
dec
pop
mov
jns
mov
jg
test
inc
jae
jae
mov
es
je
aad
push
outsl
mov
cmp
add
outsb
insb
mov
cs
dec
cmp
jmp
mov
ret
enter
pushf
cmp
xchg
pop
mov
je
jle
stos
les
xor
push
mov
mov
shrl
iret
mov
adcl
add
cmp
adcl
sbb
ret
std
jmp
mov
mov
jmp
arpl
sbb
or
push
fdivrs
incb
loopne
inc
sub
in
cmp
movsl
sarl
rcrl
mov
js
cmp
mov
inc
aam
out
repz
aam
data16
ret
xor
jmp
jo
sarl
scas
xchg
ret
fstl
lods
add
es
movsb
imul
stc
call
js
pop
arpl
rolb
push
push
dec
adc
pop
inc
sbbb
rcrb
out
mov
cld
je
pusha
loopne
jecxz
cmpsl
jae
cmp
mov
push
sbb
notl
mov
xchg
push
std
and
out
inc
mov
jae
fdivrl
ds
pop
dec
xchg
jmp
daa
sbb
enter
jae
aam
arpl
push
sbb
sarl
sbb
ja
fildl
and
lds
mov
fs
clc
push
pusha
ret
mov
mov
jnp
lahf
leave
add
lret
mov
adc
ret
icebp
mov
inc
or
rorl
xchg
insl
adc
sub
arpl
xor
xor
push
cltd
std
mov
shlb
loopne
in
ret
inc
push
hlt
xchg
leave
lahf
lock
outsb
loopne
shlb
inc
gs
inc
inc
or
movsl
and
and
fidivs
mov
dec
cmp
add
sub
jecxz
adc
adc
cmpsb
repz
sub
jno
rorb
inc
mov
repz
mov
sarb
cmp
sub
jo
mov
aas
data16
pop
add
cmpsl
add
or
pop
test
pop
cmp
sbb
stos
out
lret
ja
js
test
leave
fwait
dec
orps
add
cmpsb
and
sti
mov
pop
and
stc
fidivl
push
pop
or
mov
and
sub
mov
sub
ror
or
fldcw
jbe
in
fldcw
cmc
loope
adc
cmp
add
push
fldenv
xor
adc
pop
jb
inc
jmp
movsb
lahf
jb
pop
push
rorb
je
xchg
xchg
outsb
test
mov
dec
dec
stos
enter
cs
mov
adc
dec
lds
cwtl
mov
shrl
xchg
in
cli
arpl
dec
cwtl
mov
scas
imul
add
ljmp
and
push
fisttps
pop
outsb
lock
mov
jmp
mov
xlat
hlt
add
xchg
lock
aad
call
hlt
or
add
cmp
xchg
lcall
std
addr16
sbb
adc
jne
stos
enter
jae
aad
clc
es
dec
lret
scas
push
push
sbb
add
je
jns
outsb
inc
cmp
push
fstps
cmp
jg
jg
out
xchg
lds
pop
mov
pop
sbb
sbb
mov
mov
jl
fdivr
mov
fidivrs
xor
out
push
jns
or
test
push
scas
add
jbe
sub
test
pusha
and
push
scas
push
sbb
shlb
flds
fst
add
sbb
xchg
cmp
push
sbbl
in
dec
cmp
in
jbe
cli
and
leave
fcomps
out
inc
mov
lods
cmpsb
push
mov
mov
dec
fucom
les
mov
dec
in
or
in
sbb
xchg
lcall
test
mov
jle
dec
roll
rcr
inc
loopne
cmp
in
push
mov
mov
loope
out
lret
push
pop
adc
xchg
jno
fwait
aam
cmp
sub
mov
and
lcall
or
ret
jae
icebp
or
xor
pop
dec
pop
mov
fmul
and
jl
dec
mov
orb
xchg
adc
or
mov
shll
mov
arpl
fimull
mov
cwtl
decb
out
lea
sbb
push
popf
rcr
mov
mov
shlb
lret
es
jge
arpl
pop
xchg
cmpsl
in
mov
shr
icebp
mov
inc
adc
fucomi
fstpt
mov
dec
adc
mov
or
and
pop
iret
dec
aad
jns
and
outsb
dec
sarl
pop
mov
test
scas
pop
jbe
decb
fmulp
dec
rcr
notl
and
jno
adc
rcrb
out
imulb
cmpb
adc
shrb
jecxz
xchg
mov
mov
psubd
xchg
gs
loope
inc
movsb
lea
pushf
cltd
out
out
mov
pop
lcall
sub
mov
xor
push
jp
aas
adc
adc
lret
sbb
popf
out
sbb
les
std
mov
int
add
mov
cmpsb
pop
mov
jbe
adc
dec
aas
mov
dec
pop
pop
mov
mov
cmp
out
sub
xor
mov
dec
sub
jp
ja
inc
scas
adc
xlat
std
insl
shrl
mov
push
mov
push
es
out
cwtl
mov
cmp
or
mov
jbe
test
jg
rorb
push
outsb
xchg
xchg
inc
mov
inc
push
mov
leave
bound
fcompl
das
pop
xchg
xor
jle
data16
adc
lahf
fidivl
sub
shrl
aas
lods
lret
fwait
cmpsl
mov
xor
xchg
in
add
cmp
and
inc
cmpsb
push
xor
dec
xchg
cmp
or
dec
add
xchg
test
push
iret
jbe
jmp
jle
mov
lds
xchg
fsts
icebp
and
mov
push
mov
mov
mov
add
jmp
inc
out
and
jecxz
pop
xchg
stos
test
das
fdiv
mov
sub
aam
gs
cmc
sub
xchg
pop
push
mov
into
scas
bnd
cli
notl
cwtl
ja
xor
inc
out
cmp
test
sbb
xor
addr16
xor
inc
inc
les
out
mulb
shrl
fwait
jp
adc
loope,pt
insb
sbb
or
pop
jmp
push
out
jmp
xchg
sub
in
lcall
jns
xor
mov
rdmsr
xchg
addl
sub
insl
jbe
mov
aas
sub
les
in
and
test
sub
enter
pop
pop
shll
pop
mov
stc
in
inc
jns
mov
push
adc
push
jmp
inc
xor
push
xor
out
cmp
das
dec
or
mov
wbinvd
enter
es
mov
or
dec
xorl
mov
test
mov
ss
lea
fisubrl
and
push
scas
jg
xchg
fistl
int3
mov
js
jne
clc
mov
fadd
jb
outsb
or
popf
lret
jl
or
outsl
sahf
mov
sbb
dec
in
sbb
dec
xchg
movsl
mov
push
popf
scas
pop
mov
call
adcb
cltd
xchg
icebp
fimull
sar
dec
gs
lock
adc
pop
dec
add
sbb
dec
xor
mov
mov
in
sti
leave
sbbl
add
arpl
sbb
les
cld
mov
push
mov
mov
mov
lds
cmpsb
inc
call
or
pop
jp
push
xchg
pop
jns
pop
out
mov
scas
mov
push
cmpsb
xchg
js
clc
sbb
es
ds
cmp
dec
cmp
aas
jle,pt
test
hlt
lock
stos
xchg
sti
dec
ret
out
les
mov
push
pop
orl
xchg
mov
jbe
sbb
shl
rcl
adc
shrb
ficompl
cmp
add
inc
add
mov
test
add
and
xchg
cmp
jmp
pop
mov
sub
fidivrs
jle
dec
push
mov
sbb
cld
and
out
sbb
in
inc
paddd
lds
lahf
outsl
mov
cmpsl
imul
mov
cmp
mov
outsl
and
or
stos
mov
or
fiadds
push
aad
or
jo
xchg
test
jb
inc
scas
push
and
ds
lea
or
in
or
add
cmpsl
mov
mov
add
sbb
xor
cmpsl
pop
jnp
insl
xchg
dec
cltd
cmpsb
adc
mov
adc
scas
lret
jle
mov
inc
xchg
lcall
jno
inc
rcr
pushf
sti
std
in
imul
aad
inc
add
mov
adc
mov
jae
jne
nop
sbb
xor
xchg
jecxz
add
in
loope
insl
mov
mov
xor
pop
ljmp
les
fcompl
mov
jp
lret
fiaddl
gs
outsb
xchg
popf
test
stos
clc
push
pop
lcall
lock
mov
add
fdivr
aam
in
jbe
test
ret
adc
or
pusha
mov
jo
lret
pop
jecxz
push
add
adc
ds
push
mov
nop
js
and
test
xchg
in
mov
inc
lret
xor
xor
movsl
rcrb
mov
stos
stos
lods
fadd
fs
or
cld
cmovns
or
xor
stos
sarb
lods
add
repnz
inc
cmp
or
lahf
jge
jg
imulb
cs
adc
push
scas
andl
fimull
pop
out
adc
in
push
daa
ror
inc
outsl
sub
xchg
or
and
ror
xor
dec
cmc
clc
push
push
icebp
add
stos
cmc
aad
sbb
sbb
dec
jns
mov
out
add
daa
dec
out
xlat
dec
mov
sbb
and
or
imul
xor
ret
push
push
dec
loop
jp
jns
push
and
scas
and
mov
mov
xor
cmpsb
xchg
popa
fcomps
movsb
sbb
lret
cs
imul
imul
cmp
hlt
mov
ficomps
div
loope
xchg
fs
mov
cmc
mov
ljmp
scas
hlt
cmc
in
push
ret
dec
leave
push
mov
mov
mov
pop
into
lods
push
aad
mov
sbb
inc
daa
jl
mov
lods
dec
std
xor
mov
xchg
and
and
ret
lods
hlt
insb
xchg
push
divb
adc
ljmp
cli
xchg
outsb
lea
jnp
outsl
divb
jg
jmp
test
jne
mov
lcall
dec
ret
iret
negb
sub
pop
adc
aas
jge
jnp
dec
jecxz
xlat
push
divl
jo
mov
pop
sub
lcall
mov
test
or
test
xchg
push
push
sub
aaa
dec
xchg
dec
mov
and
xor
jmp
lcall
stos
sbb
xchg
jp
clc
inc
inc
bound
jb
mov
les
shl
inc
int3
cmc
lods
push
cmp
dec
and
or
and
sub
sub
cmc
andl
out
stos
or
pop
inc
notb
orl
push
sti
cwtl
and
xchg
jno
test
xchg
lds
popa
mov
sub
ljmp
mov
cld
inc
jge
scas
out
das
or
cmp
ds
ffreep
add
lods
insl
mov
jnp
in
lea
sbb
xchg
std
or
cmp
jp
js
test
mov
mov
push
mov
lret
aaa
dec
cs
in
loop
shl
dec
test
pop
dec
cmp
lret
pop
inc
cmp
jp
mov
mov
nop
adc
push
das
stos
in
mov
ja
xchg
shl
arpl
gs
inc
cmc
jb
adc
push
xchg
jge
out
pop
jl
mov
popa
ljmp
leave
insb
stos
xchg
jns
adc
dec
mov
pop
push
out
ret
inc
rcrb
ficoml
cmp
mov
fadd
jne
movsb
jb
std
iret
sbb
aad
lods
jg
xor
fldl
sti
cmp
mov
in
sbb
rcll
inc
andl
or
xchg
sbb
stc
cmc
popf
xorl
xrelease
insb
cmp
xchg
adcb
lods
pop
push
jmp
incl
sub
imul
xorb
push
jge
popa
inc
jne
ds
leave
and
mov
and
xchg
add
dec
jmp
xor
push
pop
je
jne
xor
mov
sti
loop
stos
pop
enter
test
mov
or
aad
xchg
sub
dec
pop
xor
aad
pusha
loope
sarl
rcrb
xchg
out
ror
sub
push
scas
or
xchg
xlat
push
cltd
repnz
fidivrs
in
ficompl
int3
jp
nop
pop
xlat
in
or
sarb
inc
and
je
jb
pop
aaa
mov
fs
mov
adc
faddl
pop
aad
adcb
mov
ret
into
in
lret
cmp
sub
incl
dec
packssdw
lods
sbb
dec
pop
xor
out
scas
test
pop
fadds
int3
sub
daa
les
mov
test
or
mov
mov
sbb
rorl
dec
sbb
lahf
add
or
xchg
scas
dec
mov
mov
jp
xchg
mov
mov
dec
setnp
cmp
mov
sbb
fisubl
sbb
int3
cltd
js
mov
sub
call
push
in
sbb
lcall
ljmp
inc
inc
mov
loop
xor
push
pop
jecxz
ljmp
es
pop
fidivrl
cltd
insl
xor
popf
jecxz
sahf
xchg
xchg
xchg
insb
popf
mov
frstor
or
loop
mov
hlt
das
adc
aad
xlat
fstl
dec
mov
xchg
test
lea
jmp
xchg
fstl
cmp
adc
dec
fisubrs
lods
xor
mov
sub
sbb
cmp
rcrl
cmpl
sub
imul
xlat
repnz
xchg
outsl
in
lcall
mov
cld
mov
sbb
sbb
ds
push
and
aad
or
imul
cmp
pop
dec
sub
out
pop
sub
les
mov
add
and
cmp
dec
jno
xchg
loopne
cltd
and
hlt
fsubrp
cmc
jae
enter
sbb
pop
or
adc
dec
mov
ret
rcrb
push
rorb
pop
jge
mov
fucomp
mov
mov
mull
cmp
int3
adc
outsb
mov
push
mov
ja
mov
or
dec
test
inc
mov
mov
sbb
mov
loopne
jno
decb
movl
add
icebp
test
dec
movsl
mov
adc
fstl
add
xor
leave
into
xchg
push
pushf
gs
xor
cld
xor
loope
mov
bound
lret
cltd
ret
dec
mov
xlat
icebp
jns
dec
mov
xchg
aad
xchg
iret
add
add
mov
pop
mov
jmp
add
loop
repz
cmp
sub
xchg
aad
shrb
lret
sti
add
shrl
or
cmpsl
xor
or
push
jb
mov
sub
rcrl
in
jae
lahf
and
inc
inc
jl
pushf
lods
lahf
pop
mov
xlat
sub
int3
xor
hlt
sub
push
xor
inc
lds
xor
sub
push
adc
enter
adc
push
and
mov
xchg
cs
cvtpi2ps
inc
test
lds
insl
add
bound
mov
mov
in
dec
js
movsb
rolb
shlb
cmp
nop
add
loope
push
xchg
std
push
inc
aaa
and
mov
add
jns
cmp
pinsrw
xchg
in
xor
imul
lcall
out
jns
xchg
popf
lahf
rolb
sub
mov
adc
mov
fstpt
xchg
and
push
lea
xchg
std
ficomps
add
loop
rcrl
dec
add
adc
call
ljmp
jp
xchg
int3
flds
xchg
pop
cs
ljmp
ror
mov
adc
pop
adc
jle
pop
mov
pop
inc
arpl
daa
in
rcr
outsb
stos
test
pop
cmpsb
aas
mov
sbb
outsb
and
inc
out
dec
cli
sub
or
dec
adc
ljmp
dec
xor
fwait
clc
das
adc
and
pmaddwd
mov
dec
fstpl
dec
sbb
add
mov
lret
mov
in
andb
add
dec
pop
or
mov
cli
sbb
and
push
jge
mov
mov
das
add
outsb
mov
bound
out
pusha
push
mov
call
mov
test
lcall
lahf
jnp
dec
sbb
jne
pushf
lcall
lods
and
cs
push
push
es
insl
xor
popf
sbb
shlb
movsb
pop
stos
cmp
loopne
mov
fwait
pop
shlb
fwait
push
lds
push
sub
scas
xchg
pop
mov
pop
jbe
test
inc
fidivs
mov
repnz
cwtl
or
stc
push
push
mov
daa
mov
fldcw
dec
and
gs
or
in
cmp
in
int
andb
stos
repz
das
in
xor
push
pop
push
inc
andb
mov
pop
xor
mov
mov
test
ljmp
pop
push
add
jo
fsubs
les
ja
pop
jecxz
imul
add
inc
loopne
shlb
mov
inc
jl
sbb
and
adc
shrb
lods
fs
inc
cmpsb
jg
xchg
not
je
pusha
andb
cmp
add
jle
xor
mov
das
dec
sar
dec
shl
add
adcb
push
and
call
in
stc
mov
stos
mov
xor
jmp
loope
dec
lock
int
and
xchg
jno
dec
sbb
fistl
adc
in
lods
sbb
xchg
add
shlb
xchg
mov
jae
mov
fnstsw
and
sbb
sbb
cltd
shll
dec
cmc
mov
and
dec
ret
mov
add
jnp
cmpsb
xlat
dec
movsl
dec
in
daa
js
cld
push
pop
cvtps2pd
inc
pop
push
push
sahf
add
movsb
xchg
fisubl
dec
and
xchg
sub
sbb
mov
aas
dec
cmp
add
fisttps
repz
aas
pop
adc
fs
lret
mov
imul
fsubs
sbb
ficoml
je
sub
imul
mov
cmpsb
pop
insb
mov
fmuls
ljmp
pop
jns
lcall
pop
fidivrl
pop
xor
jmp
pop
nop
inc
xor
xchg
push
pop
adc
fs
movsl
xor
leave
cmp
cli
lcall
mov
mov
mov
jae
cmp
inc
rclb
lret
inc
push
pop
push
push
pop
jb
sbb
xor
xor
movsl
mov
mov
clc
mov
xchg
into
mov
movd
and
daa
pop
xor
or
inc
repnz
fst
les
lret
push
push
pushf
mov
sub
sbb
push
pop
xchg
inc
mov
ljmp
xor
cmc
mov
or
and
enter
jle
inc
or
jp
jge
sbb
cmpsl
jno
insb
out
mov
sub
cmp
jo
jbe
add
jle
stos
add
push
inc
pop
add
cltd
add
pop
mov
push
pop
bound
inc
adc
push
fnstenv
fsub
addr16
dec
cmp
jmp
repz
or
add
mov
cs
inc
test
cmovae
sbb
lea
test
popf
sbb
jmp
rcll
cli
loope
mov
fdivp
jg
sub
push
sub
mov
loopne
out
jae
repz
out
mov
mov
mov
mov
xchg
jns
push
cmpsb
shlb
test
xchg
popa
test
test
repz
repz
jb
inc
aad
sahf
cli
push
push
xor
dec
sbb
scas
icebp
push
jne
lods
add
push
pop
jb
cltd
xor
inc
add
roll
mov
in
nop
jg
mov
mov
loope
ljmp
daa
fmull
jg
jnp
add
gs
cmp
imul
mov
repz
xchg
sti
sub
mov
or
mov
add
or
stc
enter
mov
push
mov
aaa
push
and
ja
les
mov
dec
orb
into
ret
or
push
pop
cld
leave
leave
push
push
or
ret
es
inc
push
dec
xchg
cs
xor
mov
pop
sbb
fnstcw
dec
lods
faddp
jne
and
sarb
xor
pop
inc
xchg
pop
push
mov
jp
xlat
mov
fstps
mull
lock
pop
mov
add
in
sbb
sbb
adcl
cmp
les
popa
mov
in
in
aam
or
cmp
sbb
sbb
in
add
pop
nop
xor
js
jno
subl
and
xor
stos
lods
mov
loope
pusha
pop
in
daa
xor
pop
xchg
sti
mov
es
mov
xchg
lret
mov
pop
jecxz
and
pop
jmp
dec
test
mov
xlat
gs
mov
add
ret
pushf
enter
mov
or
ret
lea
xchg
add
stc
clc
in
pusha
or
leave
jle
in
xchg
movsb
dec
mov
mov
dec
xor
push
fcomi
mov
movsl
fwait
xor
sahf
mov
mov
sub
mov
outsb
dec
fwait
add
ss
loop
out
fdivs
cmp
adc
andb
int3
and
ds
xchg
jge
inc
cwtl
cltd
add
adc
push
shlb
jnp,pn
lret
or
pop
dec
cmp
movsl
rorb
jno
mov
in
rcrb
scas
pop
mov
icebp
cs
mov
xor
ficoms
call
aad
jbe
je
adc
in
lahf
sbb
psllw
xchg
fwait
and
sub
repz
jmp
in
test
jns
add
test
jne
inc
shlb
loopne
in
dec
in
jge
pop
cwtl
sbb
cwtl
std
xchg
loop
lret
shll
mov
pop
fsubl
mov
subl
mov
ret
mov
push
mov
jno
fmull
pop
cld
sbb
jo
int3
sub
jg
or
pop
push
lret
push
cwtl
jo
add
ret
bound
lret
lea
enter
out
push
pop
scas
sub
dec
xor
loopne
cmp
sbb
sbb
mov
pop
lcall
jne
je
andl
pop
clc
pusha
mov
repnz
add
cmpsb
mov
push
add
gs
loope
mov
jno
out
dec
test
cli
lock
mov
sti
es
dec
and
jno
mov
push
inc
xchg
inc
cmpsl
mov
xchg
scas
jnp
aam
test
sub
adc
loop
adc
sbb
std
mov
or
or
aaa
pop
cmp
jg
mov
sbb
mov
sti
mov
clc
adc
pop
fst
xchg
jmp
ret
push
orl
imul
lods
cmp
out
push
insl
inc
add
aam
add
jmp
and
cmpl
or
push
stos
xlat
xchg
dec
or
cmp
adc
ljmp
in
fcomps
cmpsb
popf
push
repnz
add
call
push
or
lea
sub
loopne
lahf
cld
push
or
sub
std
and
xorb
pause
cmpsl
and
mov
inc
xlat
cli
clc
jmp
and
iret
das
rclb
in
dec
jo
sti
mov
cmp
mov
int3
test
mov
mov
xorb
cli
ret
test
fsub
rorb
iret
cli
lret
jne
cmpsl
cmp
push
call
and
xchg
lea
and
sub
dec
movzbl
add
add
xchg
and
mov
mov
dec
xor
lea
mov
inc
sub
inc
inc
lea
dec
jne
sub
mov
lea
dec
pop
inc
add
pop
dec
mov
pop
mov
mov
dec
or
inc
dec
mov
xor
mov
mov
xor
add
ret
push
push
mov
dec
push
mov
imul
mov
lea
inc
lea
push
mov
dec
mov
lea
push
mov
lea
dec
movsbl
add
inc
mov
push
mov
mov
inc
push
mov
and
xor
imul
inc
push
lea
imul
push
lea
inc
pushl
lea
call
dec
add
sub
mov
mov
mov
sub
or
mov
pop
ret
add
add
add
cmp
jb
or
xor
sub
mov
xor
add
mov
mov
lea
inc
lea
inc
mov
mov
add
dec
cmp
jb
and
pop
dec
inc
mov
dec
movsbl
lea
dec
sub
inc
sub
inc
xor
add
lea
xor
or
lea
mov
lea
mov
test
jbe
or
dec
imul
lea
lea
inc
inc
inc
sub
imul
inc
dec
and
mov
add
mov
sub
movzbl
sub
lea
add
sub
dec
and
lea
sub
mov
lea
inc
mov
mov
dec
mov
add
mov
mov
mov
mov
add
movzwl
mov
mov
dec
jne
lea
mov
lea
mov
mov
inc
dec
movzwl
dec
imul
inc
dec
mov
dec
and
sub
add
add
add
sub
mov
mov
add
imul
test
jbe
inc
inc
sub
inc
or
imul
xor
movsbl
lea
inc
dec
inc
lea
dec
dec
inc
inc
mov
movzbl
xor
add
lea
and
imul
mov
mov
add
add
movzbl
add
lea
add
mov
sub
and
sub
lea
mov
mov
imul
movzbl
add
mov
mov
lea
inc
mov
mov
movzbl
movzbl
sub
lea
add
dec
jmp
push
mov
inc
dec
add
sub
imul
lea
sub
sub
dec
dec
mov
add
mov
dec
dec
dec
lea
dec
add
sub
sub
or
movzwl
lea
lea
dec
sub
dec
sub
mov
mov
mov
movsbl
sub
or
sub
add
mov
cmp
je
inc
or
mov
push
add
call
call
lea
dec
call
call
mov
imul
movsbl
dec
dec
add
inc
ret
mov
imul
pop
dec
ret
push
movzbl
lea
dec
sub
mov
push
dec
sub
push
add
push
dec
push
add
lea
mov
add
lea
call
xor
push
lea
dec
xor
inc
sub
mov
neg
and
dec
inc
dec
dec
dec
mov
inc
lea
mov
or
lea
inc
mov
sub
dec
je
lea
dec
inc
mov
add
dec
mov
mov
lea
dec
mov
repnz
inc
mov
add
or
jmp
mov
lea
inc
lea
movzbl
inc
dec
lea
mov
dec
dec
inc
movsbl
inc
jmp
hlt
mov
test
or
xchg
cmp
insl
lahf
repz
nop
loop
out
pop
lods
mov
fcoms
xor
sahf
or
dec
cmp
rclb
mov
fidivrl
loope
leave
adc
and
and
pop
cmc
in
pop
in
adc
mov
mov
shll
sub
jle
dec
pop
aas
les
movsl
lods
cmpsb
cld
shll
loope
ficompl
and
sub
std
push
adc
aas
iret
mul
sbbb
mov
mov
jno
imul
mov
in
dec
push
sbb
dec
pusha
pop
and
lret
in
fwait
das
popf
pop
repnz
test
jmp
jl
lods
inc
ljmp
insl
or
and
stc
shl
mov
dec
push
imul
dec
mov
sub
mov
jmp
cmpsl
inc
je
ds
cld
sbb
or
jnp
cmc
or
arpl
test
xchg
sub
add
sub
or
cmc
pop
add
arpl
sub
movsb
pop
inc
inc
cmp
jno
and
sahf
outsb
inc
outsb
scas
pop
jno
into
pop
mov
add
jl
mov
mov
cmp
psllq
pop
cld
jmp
ljmp
xchg
jnp
mov
movsl
mov
dec
lods
add
jb
fisubs
and
andl
iret
add
inc
cmpsl
push
es
out
std
pop
mov
ficompl
ss
and
mov
divl
sub
mov
xor
or
aad
xchg
mov
cli
in
rclb
mov
fwait
jmp
sub
jl
pop
leave
jns
repz
sahf
inc
xor
pop
das
test
repnz
sbb
enter
gs
arpl
pop
pushf
hlt
pop
fisubrl
inc
out
inc
push
jnp
pusha
mov
clc
cmp
mov
pop
hlt
or
cmc
xor
fwait
sbb
imul
jne
movsl
pop
pop
cmpsl
pusha
lcall
jo
dec
test
dec
sub
pop
ficoml
sbb
and
aaa
lods
outsb
mov
jecxz
adc
mov
cmp
repnz
jg
mov
jno
repnz
loopne
fdivs
sbb
fnstenv
fwait
lods
in
cmpsb
fildl
mov
mov
mov
lods
iret
mov
popl
push
mov
push
cs
jmp
mov
subl
push
aaa
ds
adc
insb
or
es
mov
ret
popf
fcmovnb
xlat
xchg
dec
xor
mov
push
push
or
sti
int
imul
push
es
adc
jbe
js
pop
mov
xchg
xchg
dec
pop
and
or
inc
movsb
dec
cwtl
sti
mov
sub
cmp
mov
pusha
dec
xchg
adc
jbe
xor
shrl
int3
fildll
mov
mov
mov
pop
jecxz
repnz
in
push
or
xor
ret
lods
mov
adcl
inc
mov
cmp
xchg
lock
int3
gs
push
rorl
sbb
dec
pop
add
push
int3
push
xor
push
sarb
jno
cmpsb
cmp
lret
js
push
hlt
stos
out
cmp
les
into
or
adc
sub
push
fistpl
cli
push
pop
out
push
lret
and
pop
push
popa
sarl
enter
outsb
popf
sti
fmull
cmp
xchg
push
ljmp
push
fidivrs
ret
mov
xchg
pop
add
sbb
inc
out
sbb
pushl
loop
xchg
clc
data16
add
cs
aam
pop
lcall
jg
sarb
call
jae
push
push
outsl
pop
push
and
add
imulb
xchg
icebp
in
mov
pop
in
or
xor
addr16
pop
pop
add
add
push
xchg
adcl
mov
cmp
push
cmc
mov
in
sub
mov
or
jno
arpl
movsl
cltd
sub
icebp
lret
add
add
popa
mov
mov
sbb
notl
push
or
lods
pop
data16
fcoml
jb
cltd
rclb
xchg
fcompl
jo
jb
pop
jmp
les
add
mov
and
lahf
in
inc
out
mull
and
mov
fs
insl
xor
lds
inc
or
cwtl
in
mov
fsubrl
mov
push
les
sub
nop
gs
ja
aaa
insl
mov
gs
or
cmp
mov
movsb
and
mov
mov
mov
sti
mov
std
aad
pop
cli
insl
mov
push
sbb
add
test
pop
out
jecxz
pop
hlt
dec
mov
xlat
btc
lds
push
or
pop
xor
adc
mov
popf
cmp
loop
loop
sbb
add
fs
mov
pop
js
scas
icebp
mov
adc
shlb
adc
cmp
flds
call
add
add
cmp
test
push
and
leave
push
js
jecxz
sbb
and
mov
das
setno
sbb
push
outsb
mov
dec
or
jl
pop
movsl
jp
stc
dec
pop
cli
sbb
add
insl
inc
cmp
dec
js
mov
in
xchg
xchg
rorb
cmp
sub
in
enter
int
dec
xchg
fnsave
mov
pop
add
and
lret
test
hlt
incb
fmul
jmp
movsl
cli
push
sbb
ret
fists
pcmpeqd
mov
lahf
push
push
inc
popa
add
push
mov
xchg
loop
andl
push
dec
jno
sti
test
fidivl
lahf
lds
jno
clc
popl
clc
fisttpll
ljmp
arpl
rcl
add
xlat
xor
mov
adc
cwtl
leave
add
lahf
das
jl
push
pop
rorl
daa
and
xchg
daa
xor
bound
push
movsl
gs
push
sub
stos
xchg
pop
or
and
outsb
mov
sbb
cmp
xlat
sbb
test
dec
js
inc
mov
push
jmp
lahf
mov
xchg
les
pushf
dec
dec
scas
int
push
add
outsl
push
xlat
stos
sub
popf
push
out
xor
pop
insl
lock
sub
and
jo
jge
jno
add
push
popa
jmp
enter
data16
cmp
xchg
push
lods
enter
jg
push
xorl
movsl
lea
pop
push
jge
scas
ret
aam
int3
mov
push
nop
inc
movb
sti
ss
pop
imul
sbb
nop
jle
mov
mov
cmovnp
inc
sub
sti
xor
cmp
lods
scas
cmpsl
xchg
pushf
dec
imul
push
mov
mov
mov
dec
push
sbb
jns
pop
jno
jp
or
sub
sbb
mov
or
dec
mov
xor
xor
cwtl
iret
push
sbb
adc
repz
nop
call
jnp
inc
inc
in
loopne
das
push
push
adc
ja
inc
rcll
mov
mov
sbb
xlat
adc
ffreep
clc
fildll
test
bound
repnz
lret
mov
and
std
lret
mov
ljmp
sub
inc
xchg
fdivp
sahf
jp
into
sbb
dec
int
sub
cmpl
repnz
pop
jmp
mov
jecxz
into
popf
sar
cmp
andl
lods
test
dec
mov
cmpsl
push
mov
insb
ja
hlt
pop
jg
ja
lods
and
lods
mov
std
jbe
push
jo
add
stc
gs
lea
push
and
cmpsl
xchg
or
sub
data16
mov
pop
sbbl
lods
lret
mov
cmp
inc
lods
adc
ja
mov
sbb
or
inc
push
cli
dec
mov
in
movsb
loopne
clc
invd
loopne
loope
nop
push
inc
xchg
fnclex
xor
sahf
xorl
lea
cmpsl
scas
push
aad
mov
jp
or
push
ficompl
push
mov
in
pop
notl
pop
out
loop
sub
insb
mov
jns
iret
mov
mov
add
dec
xchg
mov
fcompl
push
dec
movsb
shll
imul
sbb
mov
shl
xlat
es
test
lahf
jb
cmp
xchg
cmpsb
mov
fidivs
sub
iret
popf
out
sahf
pusha
cmpsl
addb
sub
adc
call
ss
mov
ljmp
add
test
push
mov
imul
call
jecxz
out
pusha
test
push
or
jnp
loope
pushf
out
mov
pop
cltd
add
add
push
sub
mov
cwtl
mov
stc
pop
ja
xor
xor
and
fcmovnu
popa
in
gs
pop
mov
pop
clc
sub
xchg
movsl
insl
movsl
enter
es
mov
stos
out
inc
test
ljmp
jns
jns
pop
cmp
push
and
scas
pop
and
xchg
es
mov
jne
inc
dec
std
adc
or
out
inc
fidivrs
in
imulb
jnp
pop
xor
sbb
fcmovnb
lods
stos
push
scas
add
cld
aad
inc
pop
enter
adc
and
fbld
ss
lods
out
mov
mov
cli
fcomps
ret
mov
cmp
xchg
xchg
and
out
mov
sub
das
inc
fadds
lret
mov
xor
repz
adc
mov
pusha
mov
rol
iret
xchg
das
sub
or
out
dec
cmp
mov
lret
mov
aad
out
inc
or
jmp
pop
mov
jg
jne
adc
jae
shrb
fnsave
cmpsl
stos
repz
ret
das
lret
cmp
mov
in
jbe
mov
ss
sbb
pop
mov
mov
popa
pusha
subb
stos
in
add
xchg
cmp
movsl
daa
popaw
push
inc
fcom
sub
jge
cmp
std
inc
outsb
push
scas
arpl
pop
out
daa
xor
test
fldl
adc
nop
jns
sub
mov
lock
jo
pushf
fs
sbb
frstor
mov
xor
xlat
das
repz
or
mull
mov
sub
into
loop
jge
jmp
sbb
and
cmc
repnz
cmp
dec
mov
aaa
in
pop
mov
jl
mov
and
mov
stc
int
fmull
adc
je
ficompl
mov
mov
jbe
lcall
nop
sub
cs
lock
scas
aas
cmp
xor
lahf
add
fwait
cmc
aad
xchg
add
notb
popa
mov
loopne
imul
repnz
pushl
adc
jmp
add
push
inc
aas
sub
cmpsl
cmp
push
jecxz
stos
pop
push
movsb
mov
lcall
adc
ss
je
jb
movsb
mov
cli
mov
mov
push
dec
insb
jnp
stos
xchg
repz
xchg
pop
pminsw
mov
push
insb
sbb
push
pop
pop
lret
dec
sub
pop
pop
cmp
mov
mov
dec
mov
mov
jp
fbstp
sbb
aaa
iret
pop
call
mov
imul
ret
in
and
xchg
jle
mov
inc
in
pop
shr
sub
sub
pop
mov
jge
mov
repz
inc
xchg
cmpsl
popf
subl
lea
dec
mov
cmc
mov
inc
jbe
inc
rdmsr
jl
mov
mov
xchg
test
sbb
cli
cmp
adc
clc
mov
inc
int
pop
pop
mov
xchg
push
leave
mov
and
pop
ja
mov
fcomps
adc
mov
mov
xchg
int3
std
js
add
aaa
mov
outsb
test
lds
rclb
pop
or
mov
or
js
mov
pop
popf
ds
push
xchg
push
xorl
sti
pop
je
push
int3
enter
push
lods
test
sbb
adc
lock
mov
fisubs
adc
jl
dec
sbb
addb
jns
cmp
jno
pop
push
addr16
fnstenv
inc
test
jne
mov
sbb
inc
pop
cmp
jb
pop
scas
or
xor
nop
fcoml
decb
mov
daa
flds
sbb
mov
add
shlb
mov
push
xchg
mov
or
add
addr16
xchg
pop
out
lods
sbb
lret
cld
loopne
mov
pop
lahf
mov
int3
dec
add
dec
jo
cs
insb
or
popa
mov
int
in
lds
add
pop
loopne
dec
out
ds
xchg
outsb
in
jle
push
lods
insb
rcrb
in
das
test
pop
addb
enter
pop
fimuls
aas
stos
push
mov
popa
test
data16
ljmpw
xor
lahf
push
inc
icebp
movsl
push
ljmp
stos
jns
push
sub
mov
movsb
orb
test
subl
cwtl
inc
jle
movsl
adc
ljmp
lods
or
subb
daa
enter
push
adc
adc
stos
adc
pop
xlat
dec
int3
adc
test
sbb
js
movsl
je
sub
icebp
movsb
les
js
xor
or
jecxz
adc
xchg
pop
iret
cwtl
ljmp
mov
jl
adc
inc
push
ja
scas
test
repz
or
push
xor
jno
in
mov
inc
hlt
xchg
popa
inc
and
mov
mov
mov
mov
pop
push
push
subps
xorb
mov
repnz
or
fisttps
rorb
decb
lods
push
aad
das
push
push
or
ret
loop
and
sbb
add
mov
into
cmpsl
mov
push
jge
addr16
xchg
test
out
lcall
aas
int
lret
pushw
push
data16
adc
dec
dec
sbb
cmpsl
mov
push
mov
add
mov
call
add
sub
call
lea
push
or
call
imul
sub
mov
dec
dec
movzbl
call
sub
dec
imul
dec
sub
inc
inc
dec
lea
dec
mov
dec
movsbl
add
call
add
add
mov
dec
imul
call
mov
and
call
lea
lea
or
sub
dec
sub
inc
lea
lea
pop
add
dec
add
add
pop
imul
imul
pop
sub
sub
or
imul
pop
add
inc
dec
inc
dec
and
inc
xor
pop
mov
inc
pop
inc
lea
mov
sub
movsbl
call
lea
inc
and
inc
ret
add
xor
push
dec
sub
push
dec
lea
push
imul
push
mov
push
movzbl
add
mov
inc
inc
push
mov
ret
push
dec
push
dec
mov
movsbl
dec
push
mov
inc
or
call
pop
ret
jmp
mov
imul
pop
pop
ret
push
mov
dec
dec
inc
inc
inc
inc
imul
imul
inc
mov
dec
dec
movzbl
dec
dec
lea
imul
lea
imul
mov
mov
mov
inc
lea
add
mov
and
pop
ret
sub
imul
mov
mov
xor
mov
dec
imul
mov
dec
dec
mov
add
mov
xor
or
imul
mov
dec
inc
inc
lea
and
add
sub
or
dec
cmp
jb
add
push
lea
mov
push
and
inc
push
or
dec
xor
mov
add
xor
inc
sub
xor
inc
lea
push
xor
dec
push
dec
add
pop
xor
dec
dec
dec
inc
mov
sub
inc
add
lea
xor
add
movzbl
mov
mov
mov
inc
movswl
movzbl
sub
sub
sub
mov
add
inc
add
lea
movzbl
movswl
mov
inc
add
imul
inc
dec
inc
movzwl
mov
mov
lea
jmp
add
add
or
add
add
add
add
sub
adc
inc
add
mov
add
cli
cmp
add
cmp
add
xchg
push
add
cmp
scas
push
jg
ljmp
or
sbb
cwtl
pop
cmc
add
mov
pop
jae
sub
pop
es
dec
or
dec
fisttpl
jnp
bound
cmpsl
adc
mov
roll
into
dec
fs
loopne
xchg
add
mov
popf
faddl
orb
ss
lret
rorb
sbb
out
cmp
mov
loop
aam
leave
add
ja
fmull
sbb
sti
push
add
sub
push
cli
pop
push
adc
pop
adc
xor
lahf
pop
mov
dec
xchg
testl
cmp
ret
sbb
adc
arpl
loop
cmp
aaa
cmp
ds
fisttpll
outsb
iret
add
pushf
xchg
push
cs
popa
or
aad
xchg
pop
nop
lahf
xlat
sbb
push
mov
add
sahf
inc
test
out
ret
and
cmp
push
jns
ljmp
push
aam
ds
lds
jno
mov
pop
dec
jg
dec
scas
mov
popf
test
mov
mov
pop
and
xchg
rcl
mov
ja
bound
inc
les
mov
adc
rcrl
shl
cmp
adc
stos
xorl
xchg
push
adc
sub
jl
inc
repnz
adc
imul
pushl
in
pop
jb
add
iret
clc
or
movsb
cli
and
jmp
cmp
pop
mov
test
insl
adc
xlat
cmp
lahf
dec
jecxz
xor
xor
hlt
jl
jecxz
push
mov
fwait
mov
jge
stos
push
lcall
jmp
or
xlat
add
stc
aaa
mov
shrl
cmp
in
loopne
mov
sub
mov
push
pop
scas
inc
sub
mov
lret
pop
lods
or
bound
add
sti
or
aam
pushf
pop
lret
add
dec
xor
adc
sbb
mov
inc
mov
inc
adc
arpl
push
out
jne
pusha
inc
push
cmc
adc
loop
mov
stos
pop
jae
sbb
sti
flds
fcom
adc
push
out
int
loopne
popf
mov
lods
sarl
and
jecxz
xor
shr
ds
ja
movsb
mov
mov
mov
lods
out
cmp
and
pop
cmpsl
int
jo
fisttpll
xchg
xchg
cmp
inc
aam
xor
popa
out
shl
adc
mov
fiadds
mov
jnp
sub
sahf
ja
and
inc
fistl
mov
dec
loopne
pop
imull
dec
mov
outsb
mov
adc
and
pop
push
xor
cwtl
icebp
ds
imul
mov
lea
enter
xchg
xchg
push
or
aam
mov
fnstcw
push
stos
push
fisttps
push
adc
les
scas
bound
jp
ja
mov
shll
dec
and
movsl
outsl
or
add
bound
in
dec
out
out
mov
jg
xor
lret
mov
mov
sbb
jo
cld
mov
push
inc
xor
and
pop
xlat
lret
loop
lods
xor
mov
lock
loope
xor
bound
pusha
xchg
jg
cwtl
outsl
jmp
and
out
adc
lea
adc
xor
mov
nop
mov
rcll
repz
aad
mov
dec
adc
cli
je
movsl
je
mov
jo
jb
sub
lods
cmp
lods
xor
hlt
mov
lock
into
mov
fxch
lods
jae
jnp
rclb
mov
call
repnz
cltd
repz
aad
mov
stos
cld
or
pop
neg
cmp
jns
and
mov
jbe
outsl
xchg
sbb
adc
xchg
mov
and
and
lret
mov
and
xor
dec
xchg
and
enter
popf
stos
sarb
cs
bound
xchg
xor
mov
mov
sti
ret
jne
jmp
dec
fcoml
cld
lods
int
pop
pop
cs
cmp
inc
js
lods
xor
mov
scas
std
idivl
scas
fistpl
sarl
in
aaa
cli
inc
mov
icebp
jne
mov
enter
int3
mov
test
movsl
cmp
arpl
fs
mov
add
push
xchg
push
cmpsb
ljmp
pop
testl
add
dec
xchg
cmp
jb
cld
sub
jle
frstor
mov
fnstcw
rol
fnsave
or
lret
mov
adc
push
hlt
into
dec
push
leave
or
out
cmp
mov
mov
cmpsl
lods
scas
xor
out
shrl
clc
add
call
and
shrb
cmp
xchg
test
leave
lret
jae
jns,pn
inc
xor
add
fistps
dec
sbb
ret
xchg
and
cmp
mov
scas
ss
outsb
addb
cli
xor
xchg
rcl
jg
mov
push
gs
rolb
data16
xchg
outsl
enter
outsl
add
aam
loopne
and
mov
cs
jp
cwtl
dec
add
gs
loop
in
into
cmp
ficoml
and
pushf
xor
aam
mov
adc
popa
xlat
or
or
push
jo
pop
stos
jo
out
sbb
int3
dec
push
das
movsb
jns
je
daa
push
pop
xchg
cs
adc
jge
dec
fiaddl
flds
add
std
sub
aam
jp
push
test
mov
jmp
mov
sbb
pop
inc
cltd
add
dec
xchg
or
mov
aas
jno
jge
push
sarb
cs
xchg
mov
mov
les
mov
push
cmp
inc
loopne
mov
nop
mov
das
out
pop
push
in
jns
jg
lock
pop
out
xor
xchg
xlat
push
popa
bound
mov
lds
and
push
ljmp
les
ja
nop
mov
sahf
mulb
out
mov
pop
imul
js
inc
and
mov
inc
enter
and
cmpsl
test
xor
fucomi
push
mov
fwait
dec
shrb
fiadds
fstps
popf
pusha
adc
ret
or
push
stc
sbb
cltd
jmp
test
outsb
mov
xor
mov
test
rcll
and
mov
xchg
ss
push
es
mov
test
fistps
bnd
mov
ret
ret
push
rclb
dec
cmp
mov
in
cltd
sti
sbb
roll
cld
test
jmp
imul
cmp
xchg
or
pop
pop
add
jne
fcomps
push
faddl
sub
lahf
enter
xor
and
cmp
lea
mov
fmulp
push
fisubrl
mov
ds
xchg
pushf
mov
inc
cli
dec
out
ds
in
push
add
ss
lret
xchg
outsb
or
addr16
mov
lock
js
sbb
lahf
lret
xchg
jnp
sub
insb
push
pop
ja
out
leave
clc
bnd
aad
inc
sub
test
push
xor
ja
push
cltd
test
andb
jp
push
gs
jb
add
neg
call
mov
ret
sbb
cli
repnz
add
aad
cli
dec
xor
xchg
mov
xchg
aaa
insb
hlt
pop
in
push
xlat
stc
mov
inc
push
sbb
outsl
xor
mov
dec
push
dec
inc
jmp
add
rorb
cld
mov
push
mul
test
mov
cltd
mov
push
shll
ret
xor
sbb
and
lods
icebp
loop
cmp
outsl
and
out
cmpsl
mov
adc
inc
test
js
loop
sbb
push
fcoml
push
inc
mov
jne
stos
in
shlb
and
aas
xlat
adc
mov
or
xchg
mov
ds
addr16
or
adc
xchg
mov
sbb
jne
out
outsb
sub
sub
test
lcall
and
in
mov
pop
mov
aam
sub
sub
mov
lods
out
mov
sahf
pop
loope
imul
add
sbb
xchg
xchg
inc
jb
xchg
lock
mov
les
addr16
shl
or
xor
sub
mov
pop
add
sub
stos
iret
xchg
pusha
popf
pop
loopne
out
sbb
sub
int
les
fisttpl
popf
or
dec
cmp
je
pop
jp
jle
inc
stc
xor
mov
fidivrs
mov
fwait
idiv
lods
or
cmp
mov
lea
repnz
or
cmp
clc
mov
loopne
hlt
test
jns
push
fwait
mov
imul
hlt
out
jbe
sbb
test
mov
repnz
and
push
iret
fdivrs
jge
or
jmp
sub
xchg
inc
scas
std
mov
ja
mov
cmp
imul
add
insl
pop
repz
je
call
daa
leave
dec
jmp
mov
lods
cld
xchg
mov
fsubrl
xchg
shlb
push
leave
repz
mov
ficomps
movsl
sbbb
mov
shr
les
popa
pop
shll
jnp
xchg
gs
testl
jb,pt
int3
shrl
lahf
or
add
ret
inc
ljmp
add
push
cld
loop
sahf
in
add
js
leave
jno
pop
fsub
cmp
int3
adcb
push
data16
dec
pushf
pushf
dec
call
or
inc
adc
or
fwait
adc
punpcklwd
xchg
dec
and
test
push
inc
xorl
add
push
cli
mov
mov
ss
cmp
mov
lea
or
enter
imul
out
push
mov
das
mov
movsb
inc
xorl
or
or
and
ljmp
sbb
cmpsb
dec
ljmp
push
fnsave
dec
jo
push
popf
mov
cmc
jmp
nopl
addb
mov
and
dec
push
sub
dec
in
psllw
nop
scas
jmp
in
xchg
xchg
pop
xchg
cmp
adc
jle
mov
mov
out
pop
andb
jnp,pt
and
cmp
ffree
xchg
fdivrl
test
movsb
lock
push
in
jno
out
sahf
mov
push
add
ss
adc
sbb
stc
adc
data16
addr16
insl
add
icebp
jno
push
mov
jne
sbb
dec
inc
mov
je
and
mov
jp
and
inc
xchg
or
dec
int
xlat
cmp
xchg
push
aam
push
leave
mov
xor
fsubl
push
pusha
jle
mov
cmpb
mov
aaa
cmp
shl
sub
cmp
mov
pushf
add
mov
stc
mov
sbb
mov
out
mov
ja
fnstenv
outsl
pop
cmc
in
aam
ret
xchg
lods
movsb
insb
es
pop
imul
pop
pop
sub
adc
shll
pop
test
inc
mov
movsl
push
mov
mov
popa
repz
stos
push
xor
inc
xchg
in
xchg
add
rorb
dec
jb
cmp
push
pop
push
mov
push
outsb
xchg
test
in
jae
mov
stos
sub
shlb
add
aas
and
and
out
fldt
pop
xor
rclb
mov
stos
mov
pop
aaa
dec
xchg
xor
stos
lret
idivb
lods
lods
daa
fwait
cmp
sbb
and
jo
fdivs
xchg
repnz
fcompl
mov
lret
and
cmp
and
aaa
pop
cmpsl
xchg
push
lret
mov
adc
mov
cltd
lret
xor
fucomi
cmp
jne
daa
push
inc
std
in
push
sub
inc
fdivrp
push
cli
pop
repnz
push
out
pop
push
test
or
insb
stos
xor
xchg
mov
cli
outsb
push
pop
push
popf
push
xchg
mov
inc
pusha
sub
sbb
xchg
adc
movntps
ljmp
popa
lahf
hlt
and
shll
jecxz
mov
cwtl
cltd
fs
dec
cmp
sbbb
mov
ret
inc
fildl
jmp
sub
clc
out
xlat
and
aas
popf
or
push
frstor
jo
cmp
or
inc
loope
lods
sbb
lds
push
stos
pop
daa
pop
or
dec
add
in
inc
leave
mov
or
lds
cmpl
icebp
or
cwtl
stos
add
icebp
mov
test
push
fstpl
xchg
xor
fisttpl
sbb
fcmovnu
xor
and
fsubrs
cli
pop
lea
xor
test
push
and
cmp
or
jecxz
test
mov
cmp
jne
iret
cmp
dec
jge
jo
mov
dec
mov
lods
mov
adc
jle
or
js
mov
pop
cmp
shlb
cltd
xchg
inc
push
push
mov
movsl
call
push
js
push
enter
aad
push
cld
pop
movl
mov
sbb
dec
push
xor
nop
fimuls
inc
hlt
call
mov
sbbl
sub
stos
ljmp
scas
jbe
sbb
ja
pusha
in
or
cmp
loop
inc
stos
ljmp
sub
jbe
std
in
sahf
xchg
fdivr
mov
mov
pop
mov
cli
test
roll
insl
and
dec
lods
loop
jp
negl
add
sarl
mov
push
loopne
fcomps
stc
cmp
mov
popa
int3
mov
ret
adc
ret
push
mov
cld
mov
pop
dec
in
inc
popf
pop
rcll
cmp
mov
pop
imul
jle
cmpsl
lods
hlt
xor
dec
loopne
jae
repnz
ljmp
outsl
scas
adc
dec
stc
push
aas
adc
jmp
fmuls
ljmp
testb
inc
mov
sbbl
ds
fisubrl
js
cmp
mov
inc
sub
sub
mov
inc
inc
in
and
inc
push
rcl
aaa
cld
shrl
testb
sbb
jle
fsts
jnp
push
into
sar
inc
or
mov
clc
mov
mov
pop
mov
inc
nop
clc
outsl
clc
xchg
cld
add
fs
xchg
call
jle
adc
adc
xchg
rorb
or
nop
or
dec
inc
out
cmc
rorl
aas
inc
aaa
call
or
nop
pop
push
jge
mov
cli
and
fldz
sub
jo
lock
sub
xor
clc
clc
dec
popf
fstpt
sub
xchg
inc
cmp
mov
fs
adc
mov
bound
test
imul
mov
xor
aam
xor
lahf
hlt
movsl
repz
push
lret
imul
jno
pop
xor
test
arpl
mov
dec
xchg
fdivrs
adc
jmp
mov
lahf
loope
jns
sbb
xor
aaa
pop
imul
shr
or
or
loopne
fistl
push
jmp
mov
stos
mov
jmpw
insb
cs
pop
mov
imul
mov
int3
mov
cmp
scas
sbb
inc
xor
cmp
jmp
lret
or
and
imul
cmp
icebp
push
cmp
popfw
fwait
xorb
in
adc
pop
xor
fadds
mov
movaps
das
push
mov
aas
cmp
xor
stos
adc
ljmp
test
out
sub
mov
mov
pop
push
add
rcrl
sub
mov
xchg
ljmp
sub
jg
and
ds
ja
xorb
and
in
test
rorb
insl
sbb
ret
push
push
out
sub
cmovl
push
and
lods
sub
das
cmp
test
es
sub
or
mov
and
push
or
mov
jecxz
rsm
mov
in
lock
jae
cmp
add
pop
mov
leave
dec
aas
fsub
dec
pop
xor
cmc
and
mov
icebp
inc
xchg
xchg
nop
push
mov
mov
mov
aam
popa
cmp
imul
pop
inc
rol
and
call
fdivl
sbb
xor
cmc
fistpl
xchg
lods
sub
out
or
inc
or
in
cmp
jecxz
or
xchg
cmpsl
jmp
mov
jle
mov
mov
xchg
jg
inc
xor
cmp
jns
repnz
jns
adc
lock
mov
int
int3
es
lret
hlt
or
cltd
insl
add
lods
mov
enter
inc
add
dec
dec
cld
mov
pop
mov
push
call
rcr
dec
into
sahf
push
jnp
sarl
push
push
jle
loopne
aam
cmp
sarl
cs
shll
mov
jo
pop
jge
je
dec
mov
out
sbb
js
movsl
rol
scas
jb
mov
das
mov
mov
nop
bound
add
mov
daa
aas
sub
hlt
repz
xchg
push
cli
mov
adc
mov
mov
adc
popa
inc
push
dec
cmp
test
push
hlt
hlt
bound
xlat
out
jno
aad
inc
cli
insb
popf
int
sti
pop
ljmp
pop
sub
or
and
insl
lea
mov
xor
add
add
push
or
shrb
jno
sub
push
cmp
push
xor
test
mov
lcall
inc
lock
loope
pop
in
jae
orb
fdivp
mov
sub
mov
xorb
aas
frstor
addr16
ficomps
adc
jl
push
xor
pop
jl
mov
ja
and
xchg
sbb
dec
or
pop
and
cmpsl
repz
cmovo
test
fistl
pop
push
lahf
push
sbb
lahf
mov
jbe
sbb
jno
aam
cmpsb
xor
adc
fimull
mov
mov
xchg
fdivp
arpl
mov
outsb
loopne
cmpsl
mov
fdivrs
gs
mov
data16
adc
pop
or
loopne
orb
enter
stos
add
jl
test
imul
dec
sub
jge
cs
sub
cmp
rcrl
rcr
push
mov
jmp
out
dec
pop
inc
ljmp
pop
and
ss
pop
xor
sub
insl
dec
ret
loop
das
or
adc
aaa
lea
aas
out
mov
iret
aaa
mov
test
xchg
jnp
cwtl
xchg
aam
xchg
loop
lea
notb
daa
lock
fsubr
mov
pop
insb
inc
lods
je
cmp
mov
jle
mov
mov
adc
adc
dec
xchg
test
test
dec
shrl
sub
repnz
push
jecxz
jo
and
jno
sbb
push
sbb
aam
ja
xchg
lret
insl
add
sub
xor
or
and
pop
negb
les
daa
stc
adc
cld
insb
pushf
repnz
add
sbb
out
lea
cmp
dec
dec
flds
add
aas
mov
dec
inc
xchg
cmc
sub
mov
adc
xor
mov
mul
cmpsl
dec
lahf
or
xchg
xchg
jecxz
push
data16
cld
or
inc
inc
ffree
jg
cmc
shlb
inc
inc
adc
push
mov
nop
shr
popf
xchg
xor
sahf
sub
mov
retw
lret
js
pop
cmp
es
iret
inc
push
jecxz
cli
ret
movsl
inc
test
mov
cmp
sub
adcl
out
push
adc
fscale
loopne
and
popf
lods
outsb
dec
ja
adc
shl
rorb
frstor
mul
jo
mov
repnz
jbe
mov
nop
gs
mov
insl
jecxz
aaa
pop
popf
fsubrl
ret
push
push
and
sbb
leave
leave
mov
cmp
mov
add
mov
or
vpshaq
popa
pop
sub
negb
js
adc
push
aam
in
and
cmp
addl
ljmp
mov
test
or
pusha
push
xchg
xorb
shlb
lret
xchg
jg
dec
mov
and
jg
sbb
mov
add
and
sub
push
sbb
std
cltd
mov
jbe
inc
lods
mov
arpl
insl
sahf
pushf
adc
adc
ljmp
add
movsl
jp
jae
or
add
fdivrs
sub
inc
outsl
or
cmpsb
test
xchg
xor
mov
insb
jae
sbbl
shll
lahf
les
cli
iret
ds
int
pop
adc
das
pop
out
cmpsl
loope
out
es
cmp
xor
sarb
cmpsl
loope
xchg
dec
sbb
stos
mov
and
je
add
fwait
sub
adc
aaa
xlat
and
pop
or
mov
lret
or
int
push
xchg
je
dec
sub
nop
push
stc
push
test
gs
into
sub
test
loopne
push
stos
push
scas
sub
mov
lds
fnsave
lea
jle
lahf
int
rol
mov
sti
scas
or
or
rolb
cld
scas
add
push
fcmovnb
push
mov
push
mov
jp
pop
shlb
jnp
out
jl
mov
shll
out
and
mov
xchg
mov
jmp
jl
mov
cltd
hlt
js
popa
dec
pop
les
int3
xor
and
and
stos
in
pushf
insl
loopne
sahf
daa
pushl
push
lock
in
jp
sarl
jp
mov
shlb
pop
lods
xchg
inc
bound
add
fisubrs
incl
or
pop
ret
add
add
loop
fnstcw
adc
test
fimull
out
stos
jb
aaa
inc
mov
xchg
mov
xor
pushf
mov
add
dec
pop
adc
js
xor
iret
lret
mov
and
or
cmpsb
ss
and
aaa
jb
scas
leave
xchg
pop
dec
mov
add
fisubl
or
mov
mov
xchg
and
mov
and
cmp
inc
push
or
or
push
sahf
rorl
fildll
loop
dec
out
pop
ret
xchg
and
add
inc
jecxz
pop
scas
imul
divb
das
mov
lcall
mov
mov
cmp
leave
mov
pop
add
ret
into
aas
ret
je
scas
int3
or
sbb
xor
push
jl
jmp
movsb
cmp
hlt
xlat
push
pop
jnp
pop
pop
gs
mov
test
mov
in
sub
es
xchg
push
mov
ss
adc
cltd
mov
cltd
fadds
dec
int3
pushf
outsl
mov
mov
out
movb
ret
inc
fucom
sbb
enter
inc
dec
lret
push
lahf
cli
mov
fildl
jmp
loopne
xor
in
xchg
add
in
mov
cmp
sbb
lods
aam
mov
push
dec
lds
push
jge
mov
stos
sbb
sti
xor
insl
out
iret
jmp
cwtl
mov
out
loope,pn
sahf
js
arpl
ss
push
scas
add
dec
nop
jecxz
inc
push
scas
fmulp
dec
dec
incl
cmp
add
dec
fdivrs
add
ja
lret
pop
in
addb
mov
push
dec
ds
imul
or
cmp
into
cmpb
cs
mov
fidivl
dec
dec
mov
fstpl
pop
test
add
frstor
fcmovbe
inc
punpckhbw
cmpsb
lret
lret
xor
xor
and
push
ja
and
push
adc
and
js
mov
pop
jmp
test
mov
push
roll
jmp
mov
jae
jo
in
and
and
cmpb
sarl
btr
mov
movsl
lods
dec
fsubs
out
push
jno
clc
pop
lahf
adc
push
and
push
lds
mov
icebp
xor
mov
in
jnp
test
cmpsl
test
mov
into
pop
pop
xchg
inc
pop
jecxz
loop
cmc
add
xor
in
inc
fbld
data16
and
repz
jmp
nop
cmp
mov
cld
xchg
push
or
lods
push
sbbl
or
in
mov
push
imul
clc
push
push
inc
clc
cmpsb
inc
loopne
dec
sub
xchg
sub
cmp
fwait
scas
and
pop
rcrb
repz
inc
bound
ret
les
dec
imul
push
mov
jns
shrb
lret
sti
add
addb
daa
or
mov
mov
movzbl
fisttpll
cmp
and
lret
inc
or
incb
cs
shl
or
push
outsb
sbb
mov
mov
jnp
mov
shr
inc
scas
out
xor
xor
lahf
hlt
inc
lcall
pop
add
dec
inc
sub
stc
clc
pop
mov
in
int3
inc
mov
cmp
call
mov
and
lea
cmp
loop
cmp
add
or
std
fiaddl
negl
test
jno
jp
add
leave
dec
push
test
int3
mov
jbe
int
adc
sub
arpl
xchg
bound
outsb
mov
fsubrl
or
mov
pop
fnsave
xor
jge
pop
jo
icebp
sarl
mov
adc
pop
test
lret
xor
fcomp
inc
jle
scas
or
sahf
stc
xor
aas
xlat
mov
out
mov
shrb
test
insb
push
lahf
cmp
xlat
inc
jp
in
outsl
xchg
pop
movsl
dec
repz
call
xor
cmc
loop
movaps
dec
jne
dec
xchg
sub
mov
dec
pop
push
leave
dec
sub
pushf
xchg
jge
push
jmp
cmp
aas
inc
add
jo
mov
add
lods
pop
out
aad
mov
and
outsl
in
pop
loop
mov
dec
repnz
scas
sub
std
inc
mov
mov
pop
shlb
sub
hlt
lahf
push
icebp
and
mov
jnp
sub
cmp
test
mov
jae
ficompl
orl
aam
pop
add
andl
sbb
sbb
insl
mov
inc
repz
ja
dec
jnp
dec
cmp
std
xor
insl
jge
or
aaa
xor
notl
push
loope
mov
cmp
cmc
push
ret
in
push
jmp
or
pop
faddl
shl
or
repz
jmp
jno
fsubrs
je
and
mov
jno
scas
sahf
cmc
rcl
rolb
mov
mov
inc
push
jmp
je
lock
jl
push
pop
imul
xchg
xchg
lret
push
jecxz
push
jb
jnp
xchg
or
stc
and
dec
lahf
inc
movsl
sbb
inc
mov
dec
mov
stos
cmpsl
aaa
ss
ret
jp
mov
arpl
call
push
stos
add
jge
test
xchg
xor
and
clc
mov
sbb
or
sub
xor
pushf
cmc
xchg
sbb
sub
xchg
sbb
push
call
out
pop
dec
add
repz
jno
push
shrl
imul
aad
jne
hlt
push
sbb
sub
pop
sub
cltd
subl
or
adc
pop
out
daa
cli
pop
inc
mov
mov
ret
and
outsl
in
add
outsb
pop
bound
mov
lahf
bound
jmp
pop
repz
mov
aad
loop
sbbl
pushf
mov
xchg
pcmpeqb
xchg
mov
and
sbb
sbb
ds
leave
sbb
cmp
cld
lods
ljmp
shlb
cmp
push
imulb
fildll
subl
sub
pop
mov
outsl
jge
jp
inc
xor
test
insb
lds
cmp
in
mov
jmp
call
data16
scas
clc
fdivrl
in
jmp
xor
and
push
pop
ss
push
out
xor
aam
push
mov
test
ret
pushf
les
mov
mov
stos
xchg
and
adc
outsl
sarb
notl
loope
mov
jecxz
ficompl
loopne
jmp
xchg
sbb
iret
sub
mov
cmp
mov
xor
and
leave
push
or
push
lock
sbb
adc
adc
nop
test
test
add
dec
movsb
hlt
jle
cmp
lock
cmp
sub
fwait
gs
push
fsubp
rolb
fs
sub
iret
fsts
test
inc
push
js
pusha
out
je
ror
adc
xor
pop
out
sub
addr16
stc
shlb
iret
sbb
lea
pushw
pop
test
cmp
push
clc
lea
or
call
sbb
mov
dec
mov
mov
scas
incl
ficoms
jnp
lea
xlat
pop
push
scas
inc
aas
sbb
add
fisubrs
rorb
inc
xchg
push
std
das
out
xchg
call
push
gs
jle
repz
nop
ror
sarl
jo
dec
mov
cmc
mov
sbb
sarl
pop
mov
push
or
adc
leave
dec
inc
xor
sarl
out
rolb
jmp
pop
xor
popa
xor
ljmp
leave
dec
scas
enter
addr16
cmp
popf
adc
jb
pop
and
js,pt
push
inc
notl
inc
mov
fldt
mov
repnz
cmp
jmp
mov
mov
addr16
or
sbb
dec
fdivp
punpckldq
xchg
loopne
push
jne
jns
push
repnz
pop
shlb
cmc
sbb
aas
mov
rorb
into
bound
test
sbb
jmp
add
mov
je
push
jns
addl
sbb
mov
and
jp
sub
mov
inc
leave
pusha
in
scas
xor
push
imul
sub
ds
ja
mov
ds
ljmp
leave
test
inc
mov
rol
movsl
pusha
mov
int
pop
add
xchg
rcrl
and
xchg
push
sbb
pop
shll
dec
imul
mov
pop
out
lds
into
pop
adc
std
cltd
ss
int
test
negb
jl
fwait
push
cmpsb
aam
int3
sub
pop
xchg
orl
repz
bound
add
loopne
ds
loop
lahf
push
ds
hlt
cmc
fnstsw
push
jle
mov
dec
or
mov
fs
je
cld
iret
ss
daa
adc
mov
repz
push
pop
outsl
les
cmp
cs
rcrl
sub
sub
jecxz
sbb
add
push
or
pop
push
cli
adc
fiadds
mov
dec
adc
movsb
rorb
ss
pop
fwait
pop
arpl
push
mov
inc
mov
out
adc
sub
inc
xchg
xlat
mov
jo
shrb
jne
xchg
and
aaa
fs
pop
pop
vrsqrtps
dec
adc
xchg
cli
add
andl
xchg
cmpsl
js
jmp
orl
ds
movups
inc
dec
xchg
out
xor
imul
popf
mov
dec
adc
insl
sti
inc
movsl
sbb
cmpsb
out
pusha
repnz
mov
popf
movsl
sbb
lcall
dec
inc
pop
adc
fidivs
inc
push
xor
std
movsl
aad
jp
push
loope
adc
adc
insb
outsb
sbb
push
scas
pop
mov
fwait
or
dec
push
add
into
repz
pusha
test
xchg
imul
jns
fildl
push
fcoms
mov
cmpsb
fstpl
pop
incb
div
inc
adc
or
clc
inc
sbb
mov
roll
fiadds
jl
ljmp
mov
js
or
and
int3
jge
pop
fucomp
pop
out
divb
adc
mov
sti
int3
pop
daa
leave
leave
int3
in
mov
gs
js
enter
iret
aaa
mov
dec
xor
push
mov
or
mov
jge
mov
sar
cmpb
scas
popf
lock
xchg
or
pop
sub
inc
je
and
xchg
add
push
mov
or
mov
and
repnz
jle
out
movsb
push
fistpl
dec
sbb
pop
lahf
rorl
shrb
fsubrs
push
pusha
jmp
xorb
sbb
mov
adcb
jo
add
sbb
jge
xor
mov
ret
leave
out
add
shrb
dec
gs
add
jecxz
loop
scas
jo
int
pop
rcll
mov
orb
nop
xchg
icebp
push
jmp
mov
pop
into
imul
stc
fidivrl
jp
jp
inc
add
cmp
jmp
pop
jg
mov
push
inc
ja
out
sahf
scas
pop
fisubrl
shll
inc
in
xor
shlb
aad
mov
jge
and
ret
inc
add
hlt
scas
xor
mov
adc
sub
stc
push
icebp
xlat
aad
mov
ljmp
sbb
jmp
pop
cmp
and
lahf
icebp
lds
movsb
jb
fists
or
fistl
inc
mov
insb
dec
and
sahf
jl
dec
push
xchg
and
ret
cmpsb
stos
mov
push
stc
das
lret
adc
push
repnz
int3
and
mov
sbb
int
iret
int3
jno
lock
pop
pop
xchg
jb
rcll
xchg
ljmp
adc
in
mov
hlt
aas
jge
push
inc
repnz
popf
out
cwtl
lret
aas
mov
pop
aam
leave
mov
add
ja
jbe
andb
daa
sub
cmp
xor
mov
movq
pop
insb
rep
mov
dec
lret
sub
adc
arpl
inc
push
mov
icebp
movsl
push
imulb
stos
cmpsb
and
ret
push
xor
jns
inc
ds
lds
iret
das
lds
pop
cmp
xor
sbb
xchg
scas
cmp
adc
push
pusha
jbe
hlt
adc
roll
hlt
lock
adc
sub
int3
into
fisttpl
dec
dec
adc
mov
lret
xchg
daa
stos
mov
ja
jecxz
jp
jmp
push
push
jge
xor
xor
inc
icebp
pop
push
sub
aaa
stc
repnz
in
sub
js
add
out
pop
enter
xor
mov
lds
ja
mov
add
cmp
out
stc
subb
mov
les
in
repnz
mov
flds
jp
js
pop
ds
aas
jmp
fsubrl
pop
daa
and
dec
jmp
enter
ds
jo
imul
ret
inc
adc
push
jnp
addb
dec
xlat
xchg
mov
rcrb
xchg
and
push
addr16
push
adc
pushf
add
jmp
sub
repnz
or
cmc
and
add
mov
cmp
and
pop
xorb
enter
scas
cmp
out
hlt
push
and
inc
lahf
or
std
mov
mov
andl
pusha
pop
rcll
push
add
lahf
mov
cmc
sbb
adc
xchg
push
stos
test
mov
mov
pop
jp
mov
ljmp
mov
jne
cmp
push
dec
dec
and
mov
push
mov
and
jge
add
js
xor
das
into
mov
dec
xchg
xor
cs
out
xor
inc
and
in
and
xchg
xorl
out
insb
in
addb
or
adc
adc
or
sub
addr16
jbe
popf
imul
fdivs
adc
ret
cmp
sub
pop
scas
loope
adc
dec
push
cli
sbb
out
test
les
sti
fwait
jg
xchg
jmp
inc
and
cltd
xor
and
lods
or
pop
lahf
test
sahf
das
rcll
ret
jno
int
js
cmpsb
adc
out
dec
and
stos
mov
push
mov
rorl
mov
mov
out
mov
cmp
inc
ja,pn
icebp
sbb
pop
pop
dec
or
mov
test
jbe
fldz
sub
mov
scas
xor
sbb
rorb
lcall
adc
fildll
dec
mov
pop
lds
sub
data16
push
mov
jo
add
aaa
sbb
mov
xchg
mov
hlt
adc
ja
or
das
lds
xlat
stos
mov
outsl
mov
movsb
mov
and
fisubs
mov
into
out
loop
jbe
stos
jl
inc
loope
out
idivb
rcrl
jae
scas
sub
pop
je
stos
int3
orb
pop
int
adc
out
add
andb
pop
or
inc
fdivl
adc
je
inc
in
and
leave
hlt
aas
mov
and
xor
ds
mov
gs
sub
outsb
insl
cmc
loope
pop
mov
and
cmp
pop
mov
sbb
sbb
add
pusha
aaa
sub
xor
mov
mov
sbb
add
adc
data16
or
lcall
nop
cmpsb
xor
lds
repnz
lret
add
sbb
fisubrl
outsl
sbb
addl
add
push
fistpll
sbb
mov
jae
stc
jns
mov
xor
xchg
cwtl
sbb
adc
es
or
aam
pusha
or
cmp
imul
push
inc
push
push
stos
adc
mov
adc
mov
stos
sub
inc
jns
imul
enter
xor
mov
nop
cwtl
mov
cmp
sbb
lea
call
inc
sub
or
lds
xor
mov
out
sub
mov
sbb
enter
push
aaa
int
leave
pop
mov
and
dec
xchg
mov
aas
push
add
loop
dec
fwait
mov
adc
aas
std
testl
aas
jno
dec
or
aas
out
lods
jns
cmp
jg
lahf
test
push
xchg
push
out
je
mov
dec
mov
call
mov
pop
repnz
fwait
test
in
mov
dec
es
popf
push
fcoms
xchg
inc
push
mov
ss
clc
sub
out
xor
push
jecxz
and
cmp
sub
push
dec
lcall
cmp
dec
int
iret
loopne
jo
sti
popa
jne
and
adc
in
sbb
lahf
insl
dec
inc
out
pop
addr16
arpl
clc
dec
out
std
sub
xchg
xchg
stos
cltd
ss
pop
push
xchg
push
and
fisttps
or
ret
mov
jne
cmp
inc
jmp
jns
mov
rcr
mov
adc
test
and
loopne
sbbl
rcr
xor
pop
mov
ret
pop
hlt
xchg
icebp
cmpsl
jl
movb
add
mov
and
fsubrl
xor
in
push
and
pushf
dec
fnsave
pop
movsb
mov
xchg
xchg
lock
mov
add
and
adc
out
je
jne
sbb
sub
sti
lock
cmc
lods
mov
xchg
sub
cmp
jl
jns
and
push
cltd
and
pop
xchg
adc
cmp
cmpsb
push
pop
pop
ret
dec
lahf
adc
cmp
sbb
movsl
pop
addl
xor
xchg
out
cmpsb
sbb
xor
pop
jnp
in
loope
outsb
xchg
fucomip
std
lret
repz
mov
outsl
mov
call
jmp
and
rclb
jnp
sahf
lods
in
cmc
xlat
lock
mov
and
test
pop
inc
mov
mov
inc
add
add
popf
jge
and
cltd
sub
lcall
clc
imul
inc
cmpsb
pop
xor
xor
cmp
jl
cmp
jnp
fcmovu
insl
fnstsw
in
adc
lret
add
xor
shlb
stos
ljmp
add
fwait
xchg
inc
mov
sti
sbb
push
js
jg
mov
loop
push
arpl
popl
sahf
outsl
or
and
add
pusha
mov
js
xchg
push
lahf
jmp
xor
cs
lret
sbbl
lock
and
mov
and
push
pushf
movsb
pop
sbb
sbb
div
fistps
push
lcall
cltd
dec
hlt
add
fs
shlb
leave
movb
jns
cmc
cmpb
mov
scas
test
insl
mov
daa
mov
xor
mov
inc
xor
xchg
into
aas
inc
int3
jns
cwtl
and
stc
lods
mov
fiadds
sbbb
adc
mov
adc
mov
hlt
mov
movsl
push
cmpsb
cli
icebp
push
adc
pop
cmp
or
add
push
stos
pop
xlat
xchg
push
adc
lods
mov
cmp
inc
hlt
jge
or
int3
arpl
and
out
fistpll
adc
in
popa
insb
cmp
xchg
adc
inc
mov
out
sbb
cli
sahf
pushf
inc
sbb
jle
and
push
mov
in
jmp
push
rcrb
mov
inc
inc
js
pop
sbb
and
cltd
jmp
xchg
movsb
in
mov
push
cltd
xchg
imul
stc
js
dec
inc
inc
addr16
push
int
jmp
or
pop
jo
jnp
cltd
or
mov
out
jmp
push
dec
fwait
mov
jb
outsl
adc
je
or
and
push
inc
ret
add
out
ss
xchg
xchg
sbbb
dec
aam
mov
cmp
notb
or
scas
inc
cld
imul
ret
mov
inc
das
in
or
fisttpl
dec
stos
cltd
stos
jae
jg
fxch
jbe
jp
adc
inc
sub
sub
fdivrl
js
pop
cmpsl
push
scas
jmp
pop
rcrl
mov
dec
xor
out
imul
ror
out
or
mov
sub
je
aam
sbb
ret
xor
cmp
jns
inc
add
hlt
scas
repz
test
fcompl
xorl
test
popf
and
xchg
add
or
mov
aaa
push
repnz
mov
insb
lret
or
insb
xchg
adc
insb
arpl
lods
dec
rclb
test
adc
lahf
mov
jl
mov
xor
in
mov
out
out
and
jne
mov
mov
cmp
imul
stos
fs
inc
fimull
ss
xorl
cmp
test
and
push
mov
or
movsl
movsl
jo
gs
int3
push
xor
ja
pusha
pop
fistpll
stc
mov
repnz
iret
fistps
je
xor
pop
mov
scas
cmp
xlat
in
jnp
mov
mov
shr
mov
jl
shrb
arpl
out
or
xor
push
imul
sub
enter
or
push
rorb
fiadds
lds
inc
lret
pop
cltd
sub
dec
mov
cmp
add
cmp
dec
jg
dec
push
dec
jg
pop
call
fwait
hlt
test
pop
arpl
dec
push
cmpsb
fcos
repz
sahf
mov
or
pusha
hlt
bound
rcrb
ljmp
push
orl
pop
inc
or
in
stc
jae
push
pop
jmp
addr16
mov
inc
mov
pop
popf
sbb
add
mov
lret
stos
jp
sbb
lret
fsubrl
mov
sbb
sbbb
cmp
sub
cmp
pop
and
mov
fidivs
test
mov
dec
leave
loop
mov
sub
inc
cmp
pop
outsb
loopne
xlat
push
repnz
insb
outsl
popf
and
mov
pusha
adc
aad
mov
mov
aad
push
push
fs
xchg
cmp
push
adc
adcb
xchg
dec
ret
aam
call
mov
aam
push
lcall
loope
rclb
aas
loopne
out
and
add
jae
inc
xlat
mov
mov
xchg
adc
pop
clc
lret
xchg
adc
cmp
test
push
lahf
fmul
jbe
iret
into
and
mov
incl
ljmp
lret
imul
addr16
sahf
jns
inc
ret
or
inc
jmp
xchg
jno
cmp
call
cmpsb
mov
mov
movl
addr16
adc
mulps
add
cwtl
lahf
aaa
and
jmp
cmp
aaa
push
jmp
xor
or
dec
fisubrs
push
inc
test
mov
fists
dec
jecxz
daa
push
imul
ret
data16
cmp
int
add
loopne
bound
adc
js
and
mov
dec
lods
lret
sahf
out
xorl
push
cmp
or
cli
pusha
clc
mov
push
cmp
sbb
sbb
jno
jns
mov
xor
push
jmp
mov
jnp
cmp
dec
mov
cmc
mov
cmpsl
repz
push
push
arpl
pop
and
aam
shl
imul
xor
mull
dec
dec
nop
repz
fcmovnb
push
popf
mov
fucomp
aad
fcoms
push
repz
test
jmp
xchg
inc
rolb
mov
xor
and
or
dec
mov
leave
out
jge
cli
shlb
add
pop
mov
out
mov
jo
push
dec
push
lock
mov
xchg
repnz
or
or
sti
and
insb
in
les
add
adc
cltd
sbb
mov
ljmp
add
mov
sub
cld
and
adc
pop
jns
dec
div
clc
movlps
adc
aad
mov
mov
sbb
cmp
fstp
inc
jmp
mov
push
mov
mov
in
jmp
xchg
xchg
pop
mov
imul
nop
add
xchg
jno
mov
notb
add
movsb
push
inc
sbb
scas
pop
data16
jge
bound
iret
mov
cmc
dec
dec
mov
and
sbb
fwait
hlt
clc
and
pop
xchg
add
hlt
sar
rcr
sbb
adc
sbb
in
mov
popf
jnp
sbb
push
pop
fistl
rcrl
adc
sub
divl
les
jl
ficoms
movsb
orb
mov
inc
stc
push
aad
int
stos
in
sub
inc
jle
in
addr16
jmp
sub
add
xchg
push
mov
xchg
icebp
jnp
int3
pop
push
rcll
mov
mov
push
xchg
xchg
movsb
test
xchg
adc
cmpsl
jbe
inc
or
orb
es
xchg
jne
test
xchg
jmp
jg
icebp
jo
cmpsb
adc
nop
inc
sub
out
addr16
jp
out
push
pop
mov
stos
aas
adc
xor
push
lss
testb
hlt
lret
hlt
fmul
movsl
bound
sbb
andb
dec
dec
loope
ret
cmp
aam
jl
stc
cmp
mov
pusha
test
mov
xchg
inc
mov
ret
adc
cld
dec
js
mov
push
outsb
dec
les
sub
test
mov
sbb
not
cmpb
mov
pop
inc
shrb
adc
icebp
push
gs
cmp
iret
jnp
test
std
nop
fimuls
and
mov
lods
fwait
loopne
rorl
push
mov
mov
cmp
push
push
mov
xchg
in
pop
add
add
repnz
in
xor
xor
ja
pop
jnp
jmp
sbb
insb
aas
inc
stos
mov
ret
lea
sbb
lret
cli
xchg
jne
arpl
sub
clc
inc
cld
inc
jbe
out
in
mov
pop
arpl
mov
push
js
jmp
inc
cwtl
push
repnz
mov
xchg
lods
fnstenv
shld
or
cmp
call
cli
xor
insb
xor
or
mov
rorb
jno
stos
addr16
push
sub
jl
test
push
int3
xor
cmc
xchg
inc
cld
lret
sbb
lret
add
test
clc
fldcw
sub
iret
or
cli
cmpsb
sub
int3
stos
cmp
sbb
and
pop
adc
movsb
lods
fnstenv
fs
sbb
cmp
stc
xorb
xlat
xor
push
out
and
orl
movsl
adc
mov
xor
sarb
jl
lret
jae
leave
cltd
dec
inc
add
pop
sbb
lock
rorb
call
mov
test
sub
inc
fxch
testb
push
jbe
out
cmp
sbb
cmp
ss
pop
lods
or
aas
push
adc
imul
dec
movsb
mov
jmp
inc
and
int
call
pop
insl
mov
or
lea
jecxz
add
jb
add
or
push
mull
push
fimull
and
jno
push
ljmp
xchg
aas
insl
inc
mov
xchg
inc
int
into
or
mov
lret
inc
fmulp
mov
jl
mov
pop
add
xchg
fbld
mov
jg
pusha
dec
fstps
jg
negl
cwtl
xchg
or
add
mov
aam
mov
and
jb
adcb
xchg
test
sti
inc
mov
and
js
lcall
fnstsw
sub
fisubl
push
pop
mov
and
cwtl
lds
out
int
int3
xchg
ljmp
adc
jne
push
add
mov
sbbb
push
fimuls
inc
sbb
fsubs
mov
pop
sbb
dec
xchg
jae
pop
push
dec
cmp
pop
sbb
loope
aad
jbe
aas
call
cli
mov
fistpl
or
cmp
mov
jbe
out
mov
sbb
sbb
mov
test
push
xchg
mov
dec
adc
jecxz
jl
popa
cmp
sub
stc
fcoml
and
iret
mov
ss
test
cltd
mov
mov
lcall
decb
or
mov
sarl
push
xor
stos
ret
sbb
fs
mov
or
mov
in
movsb
and
xchg
leave
mov
xor
inc
mov
aas
push
out
dec
dec
in
stos
test
mov
add
mov
jg
cld
repz
fisubs
icebp
jae
pop
imul
lret
xor
inc
jmp
or
lahf
xchg
xchg
xchg
sti
jns
imul
cmpsb
cmpsl
push
aaa
lret
popa
jmp
cmpb
cltd
sub
mov
xchg
ljmp
sub
jnp
mov
stos
jmp
imul
incl
sub
imull
test
outsl
pop
aas
or
jae
dec
frstor
test
mov
les
shlb
lcall
adc
outsl
ljmp
fwait
roll
lret
gs
stc
addr16
in
xor
in
mov
dec
and
inc
fs
xor
push
enter
xchg
ds
xchg
leave
mov
push
fdivs
leave
and
and
jbe
mov
inc
sub
ljmp
mov
or
push
fldl
test
xchg
adc
mov
popa
add
xchg
in
jns
aad
pop
dec
insl
and
inc
cmp
sub
jp
add
cmpsb
inc
jp
pop
mov
fisubl
mov
out
enter
sbb
push
mov
pushf
repnz
shll
fldenv
mov
repnz
push
or
dec
xchg
mov
adc
xchg
shlb
add
mov
repz
std
sti
je
cmp
mov
and
addb
lock
je
les
xlat
pop
out
cmpsb
add
in
cli
sbbl
les
sbb
lcall
cmp
outsl
into
mov
inc
lea
push
inc
outsl
xchg
lds
cmp
or
ja
mov
xchg
pop
and
inc
cltd
scas
pop
adc
ret
icebp
mov
mov
in
xchg
push
cld
cmpsb
loope
je
cltd
js
pushf
incl
sbb
pop
scas
ret
inc
or
add
sbb
push
mov
push
cmp
repz
ret
add
inc
mov
fs
pop
ljmp
repz
fwait
test
mov
subl
in
inc
mov
push
push
jne
fisttpll
push
in
jno
sbb
sub
sti
shll
repnz
dec
cwtl
hlt
lahf
xchg
shll
xlat
add
scas
mov
cmp
add
pushf
push
int3
mov
mov
xchg
loopne
cli
sub
pop
pop
rcr
adc
jnp
pop
mov
cmpsl
arpl
push
daa
inc
pusha
lret
and
xchg
aas
aad
mov
xor
push
inc
sbb
jb
jns
jne
and
adc
adc
or
std
jmp
mov
mov
loop
push
aas
jb,pt
shrb
out
ss
push
shll
xor
adc
xchg
and
movsl
fs
cmp
mull
or
dec
add
enter
outsl
fisubs
push
imul
inc
mov
mov
inc
into
cmp
inc
adc
lret
mov
xlat
inc
cmp
icebp
mov
jge
std
push
jg
add
adc
push
mov
js
imul
cmp
mov
mov
pop
and
or
push
into
js
push
je
mov
popf
mov
iret
mov
mov
mov
push
leave
nop
cmp
xchg
test
mov
iret
add
cld
xchg
jl
xor
mov
mov
add
add
pushf
js
mov
jb
jnp
fwait
push
add
sti
or
mov
les
mov
cwtl
fsubrl
push
iret
xlat
jge
movsl
repnz
jg
mov
jge
imull
and
repnz
pop
lea
sar
xchg
push
lods
enter
fcoms
das
pop
insl
addb
pop
mov
pop
sub
sar
cmc
test
jmp
mov
cmp
out
test
lfs
ss
lods
adc
or
push
adc
cmp
insb
xor
lahf
shrb
mov
mov
lds
push
xchg
loop
adc
push
and
mov
ljmp
cmp
int3
or
iret
lock
js
out
sbb
lods
add
inc
in
cmc
aas
sarl
jo
cmc
dec
fmull
aaa
xor
fdivl
jmp
test
out
out
in
cmpsl
add
ret
test
lods
pop
rcll
lea
push
call
dec
lods
mov
clc
push
fcmovb
inc
ror
ret
pop
inc
and
fdivrp
mov
loopne
pop
bnd
ja
push
aam
fidivs
std
sahf
jo
mov
mov
inc
mov
repz
movsb
arpl
push
aaa
movsb
jo
inc
xlat
push
push
mov
mov
mov
ss
mov
mov
aaa
fistps
mov
inc
adc
push
vpcmpeqb
cwtl
les
outsb
mov
dec
sub
stc
and
cmp
loopne
mov
cmc
cmpsl
fadds
add
lods
addr16
rol
jp
lods
xor
push
adc
jl
jg
pop
and
push
sbb
mov
stc
cmpsb
stos
add
jnp
mov
stc
pop
mov
mov
sahf
les
adc
xchg
cmpsl
mov
or
lds
mov
push
dec
jmp
sub
mov
pop
xlat
mov
cmp
inc
imulb
shll
cltd
add
scas
lahf
daa
jb
mov
mov
jae
mov
adc
repz
sbb
out
aam
push
out
pop
sahf
jecxz
xchg
sbb
pop
xchg
and
jbe
mov
adc
mov
pop
cmpsl
pop
adc
jl
lahf
jl
popf
sahf
adc
in
leave
cmc
inc
sbb
and
pop
add
stos
sarb
fdivrs
es
inc
push
jmp
mov
scas
jge
push
repz
push
sbb
call
xchg
lret
int3
adc
ret
adc
out
push
repz
frstor
sub
scas
icebp
aad
mov
rcll
sbb
rcr
pop
jno
shll
into
les
dec
pop
fucom
sub
adc
jnp
push
data16
xchg
aaa
mov
mov
add
fsubl
push
sub
cld
mov
push
cmpsl
xchg
lods
sub
inc
inc
in
movsb
sub
in
and
jo
xorl
jmp
call
call
and
jne
xchg
cmc
mov
call
pop
add
jmp
packuswb
aam
inc
cmpsl
mov
subl
xchg
cld
xchg
aaa
popa
and
mov
adc
xchg
shlb
iret
inc
mov
cwtl
cli
test
sub
gs
inc
daa
outsb
in
mov
mov
dec
xor
adc
ss
and
subl
imul
inc
call
jbe
mov
add
jle
out
mov
add
cmc
xchg
xor
test
out
stos
pop
test
push
les
arpl
inc
popa
mov
jecxz
mov
pop
movsb
mov
fsts
movsl
enter
daa
mov
aas
push
imulb
orb
cld
stc
fists
jge
jo
jecxz
xlat
rorl
cltd
sbb
mov
mov
jne
and
nop
jbe
ja
hlt
inc
push
xlat
stos
std
lods
hlt
dec
fldenv
push
mov
xor
jne,pt
ds
insb
and
sub
xchg
push
into
imul
push
inc
mov
mov
fwait
or
mov
mov
mov
addb
xlat
addb
insb
pop
sbb
nop
lret
enter
add
jne
adc
mov
gs
dec
xlat
fiaddl
xor
or
fnstenv
jl
rclb
inc
mov
and
dec
cltd
outsb
insb
inc
inc
fiaddl
scas
mov
or
add
repnz
fsubrp
sbb
ds
fstps
mov
sbb
outsb
rcrl
ljmp
loopne
sub
aam
imul
push
sub
imul
dec
xchg
scas
mov
bnd
xlat
outsl
insb
xor
out
mov
outsl
push
push
or
test
pop
xchg
jne
and
push
dec
fsubrs
xor
adc
mov
aaa
outsl
loopne
dec
stos
test
dec
fwait
sbb
nop
lods
stos
mov
inc
ljmp
cld
daa
out
sub
and
scas
iret
loop
sub
in
popf
stos
divl
mov
shll
sbbb
outsl
shll
popa
jge
pop
rcrl
xchg
and
movsb
cmpsl
sub
shll
inc
mov
out
lea
xlat
ss
add
pop
sbb
sub
imul
enter
cmp
and
mov
dec
mov
cmp
pop
aaa
int3
xlat
jnp
xchg
dec
outsb
pop
stc
iret
imul
mov
enter
popa
dec
scas
fstps
cmpsl
xchg
add
out
fnstcw
push
dec
das
pop
cmp
jne
sti
ja
rclb
rorl
cmp
fs
orb
lea
sbb
test
test
je
push
jb
jb
loopne
push
add
xchg
fstpl
push
leave
pop
ret
sahf
lock
sub
ja
adc
inc
fdivrs
stos
add
aam
ds
shl
loopne
icebp
ror
or
inc
fldt
dec
ficompl
fcmovu
decl
xor
mov
enter
daa
std
insl
ljmp
jb
mov
and
push
cwtl
mov
sub
inc
sub
stc
and
and
rcrb
add
lock
adc
inc
or
cmc
bound
xor
jle
in
xchg
and
jae
decl
in
pop
stc
clc
dec
push
ja
xchg
jne
shlb
test
sub
addl
dec
lcall
lcall
in
xor
sub
loop
adc
add
mov
std
cmp
xor
xchg
pop
push
dec
mov
enter
mov
test
push
aas
cmp
imul
ret
jecxz
add
dec
orl
pop
test
dec
aas
and
bound
and
cltd
inc
sti
adc
sbb
ret
test
jmp
andb
aam
and
xlat
push
mov
mov
aaa
daa
fidivrs
sub
push
cli
out
mov
cmpsb
jo
adc
jecxz
xchg
dec
cmp
add
imul
dec
std
mov
pusha
subb
in
xchg
sahf
xor
mov
add
jae
dec
cmpl
lods
push
lret
dec
mov
add
std
add
sbb
pushf
cmp
fsubl
repz
mov
jo
cwtl
stos
popf
push
imul
fadds
lods
ds
sbbb
adc
mov
fstl
push
addb
push
fsubrp
fwait
cmpl
out
cmc
add
in
cmp
mov
xlat
mov
dec
into
cli
shrb
sbb
dec
cmp
cmp
icebp
pop
in
fimuls
push
adc
je
push
sbb
xor
dec
jns
add
daa
push
pushf
pop
cmp
sub
mov
or
jg
xor
mov
or
cmp
ja
xchg
adc
test
sbb
mov
sbb
leave
pop
xchg
movsl
popf
clc
inc
push
adc
inc
jo
pusha
dec
fwait
add
cmp
mov
jge
in
inc
jo
xchg
outsb
push
jbe
fbld
nop
cwtl
cmpsb
mov
pusha
shl
push
ljmp
xchg
mov
xchg
push
mov
or
lret
sbb
cmp
cmp
or
insb
sub
adc
adc
popf
out
add
xor
aam
lret
fwait
lock
inc
pusha
jle
cmpsl
push
xchg
ja
imul
mov
cmp
in
in
mov
xor
icebp
add
call
sbb
sbb
cs
and
sar
push
pop
jg
jno
popa
notb
pop
mov
xchg
dec
pop
cmp
mov
jb
push
and
mov
pop
in
shlb
xchg
pop
mov
push
xlat
lock
ret
int
je
into
lock
inc
dec
pop
int3
stos
fcompl
cmc
push
and
cltd
or
mov
and
rcrl
mov
add
push
imul
and
cmc
fwait
cwtl
fdivl
faddl
jbe
mov
repnz
loope
xchg
inc
mov
aad
sti
xchg
popf
ret
test
push
add
xchg
daa
aam
mov
cs
roll
push
and
addr16
lods
adc
inc
in
sub
pop
inc
fnsave
cmp
std
push
mov
pop
imul
adc
jno
mov
cs
or
aaa
repnz
jnp
sub
and
cmp
pop
fwait
repz
aad
push
popa
movsl
adc
xchg
xlat
call
cld
push
ja
lret
sarl
push
pushl
xor
xchg
add
cmpsb
pop
cli
and
push
dec
jmp
js
hlt
loop
les
jecxz
push
mov
or
outsb
lods
and
adc
rcll
das
mov
cmp
stos
or
dec
ret
ss
push
orl
and
out
aaa
mov
add
adc
enter
xchg
aas
jae
and
mov
bnd
adc
sub
arpl
jno
jne
lods
test
popa
test
test
jle
pop
call
cld
scas
jp
adc
mov
fs
popa
add
mov
popf
je
jecxz
sub
fwait
pop
ja
or
ret
mov
std
dec
fcoms
popl
or
xor
xor
push
push
es
jge
data16
cmc
daa
push
mov
aaa
jo
mov
mov
fnsave
lods
mov
mov
lcall
inc
movsb
sbb
popf
push
inc
movsb
aas
fistpll
mov
push
inc
test
mov
push
aam
jle
mov
rolb
adc
mov
jmp
inc
xchg
lock
mov
outsb
sbb
je
xchg
call
mov
pop
js
dec
and
mov
mov
ja
adc
into
adc
repz
push
dec
leave
xchg
jno
scas
mov
mov
add
stos
inc
movsl
out
adc
and
dec
aam
out
adc
aam
adc
xlat
jo
or
bound
sti
xorb
mov
in
dec
xor
pop
sbb
repz
adc
jne
iret
loop
or
iret
push
mov
in
push
pop
or
lea
in
test
sub
outsb
addr16
jecxz,pt
aad
leave
imul
addr16
lods
fisubrl
jg
cli
jno
nop
xchg
in
jecxz
outsl
testl
mov
jle
cld
pop
inc
push
aaa
cmp
inc
add
inc
push
dec
mov
fwait
and
lods
sbb
push
cs
jp
adcb
or
loopne
leave
mov
jg
xchg
mov
sbb
push
xchg
and
inc
stc
mov
xor
imul
adc
and
loope
daa
or
add
xchg
outsl
pop
sub
sbb
sub
add
pop
and
pop
test
loopne
push
arpl
sbbb
jnp
pop
jno
push
sbb
mov
adc
xor
test
in
orl
cli
hlt
aam
lock
or
pop
iret
test
mov
pop
sub
cmp
push
movsl
addr16
pop
sub
push
jno
xor
push
fiadds
fsts
push
mov
shlb
imul
mov
jno
adc
sti
push
dec
pop
js
cmp
cmpb
push
adc
test
cli
mov
and
push
xor
outsb
jecxz
iret
in
fisttps
push
inc
mov
gs
add
test
pop
popa
lods
out
out
push
pop
jg
aas
test
arpl
daa
xchg
cli
ficomps
fdivl
idiv
mov
mov
fsts
lods
movsl
mov
mov
aas
pushf
xchg
jp
mov
inc
fisttpll
loope
ret
lock
mov
push
cs
clc
jbe
loope
mov
ret
dec
sbb
mov
push
mov
mov
sbb
imul
mov
js
mov
sub
test
cmpsb
scas
in
inc
xchg
cmp
rorl
xor
mov
jmp
xorl
imul
adc
mov
dec
out
insb
in
lahf
rol
adc
faddl
test
xor
adc
fbstp
dec
sub
push
mov
out
je
call
xor
xor
aad
jb
test
cmp
and
push
add
mov
mov
cmpsb
xchg
inc
fstpt
loope
dec
out
mov
xchg
jno
daa
js
mov
adc
and
mov
ret
das
aad
jbe
addr16
and
dec
addr16
mov
repnz
loopne
pop
jp
and
xchg
outsl
mov
mov
fistl
clc
pop
rcr
testb
jne
cwtl
pop
or
repz
fstp
int3
sti
push
mov
and
movsl
xor
cmc
adc
mov
fs
mov
mov
negb
sbb
xor
dec
add
cwtl
les
stos
jle
dec
ret
jbe
cmp
xchg
push
aaa
fdivrl
cltd
fs
xchg
jg
dec
or
push
xchg
pushf
dec
roll
jmp
add
sbb
fsts
aas
bound
aas
lret
insl
aas
mov
bound
std
xor
sarl
insl
push
ret
imul
popa
das
in
loopne
sub
imul
popf
jmp
insl
mov
loope
repz
lods
push
xchg
ret
cmc
jge
pusha
jle
sub
loopne
aam
sub
ret
mov
loope
les
in
mov
imul
stc
lods
in
orl
fistl
int
or
leave
in
xchg
push
add
enter
test
bound
or
pop
xchg
addr16
hlt
pop
adc
inc
outsl
adc
jbe
cli
adc
sub
rcll
mov
fcomip
cmp
mov
hlt
mov
push
push
pop
test
lahf
push
cli
inc
aaa
jbe
or
jns
push
dec
addr16
jl
in
aam
push
dec
add
lock
sbb
or
test
pusha
addl
subb
xor
xor
xchg
mov
dec
rcl
cmpb
ret
les
cs
xchg
jne
inc
stc
sahf
inc
loop
jns
push
pop
cli
stc
cmpsl
cmc
mov
mov
xor
push
loope
addr16
and
dec
pop
xor
orl
hlt
in
loopne
andb
std
ljmp
mov
scas
dec
iret
aam
xchg
xor
je
mov
lcall
jae
add
mov
rep
push
or
std
xchg
scas
ffree
mov
out
cmpsb
inc
lcall
stos
pop
insb
stos
pusha
adc
mul
ret
test
inc
and
jmp
adc
stos
cmp
into
pushf
rorb
or
sub
out
mov
or
ds
lods
bound
lods
and
das
enter
rcrl
dec
out
mov
inc
mov
stos
cwtl
test
inc
and
pop
in
dec
aaa
mov
sbb
pop
push
movsl
cltd
dec
jmp
mov
aas
out
sub
movsb
cmp
push
mov
inc
jbe
andb
dec
daa
lea
cs
pop
data16
jo
jno
in
rcrb
mov
icebp
or
mov
inc
das
xlat
fdivs
jmp
lret
mov
pusha
jg
adc
inc
mov
add
or
or
mov
and
xchg
outsb
cmpsl
imul
cmpsl
ja
in
mov
lret
pop
mov
mov
adc
fs
push
xor
imul
andl
pop
push
testb
jcxz
arpl
mov
sbb
push
lcall
push
cmp
ficoml
sub
fwait
push
sahf
mov
jb
xchg
jp
inc
fwait
xlat
subl
push
in
jp
cld
lret
push
push
mov
movsl
out
imul
mov
in
arpl
adcb
inc
lret
cwtl
gs
cld
jnp
mov
mov
jnp
in
and
jno
pop
dec
sahf
xor
push
ss
pop
les
push
lret
dec
jp
pop
xor
call
pop
mov
push
rclb
jo
sbb
dec
add
div
ret
fstps
daa
sub
imul
jo
cmp
mov
pop
add
repz
cld
cmp
shl
testb
adc
cmp
add
mov
enter
cmp
jecxz
mov
or
imul
pop
pusha
scas
sbb
popf
shll
mov
pop
mov
notrack
lret
shl
lret
or
push
xchg
iret
fidivs
xchg
cli
icebp
arpl
ljmp
xchg
inc
cmp
lret
aad
add
xchg
push
mov
shrb
lret
or
push
cmp
mov
mov
fdivs
adc
cmp
or
or
imul
popf
add
cltd
clc
inc
add
daa
jmp
arpl
mov
inc
in
loopne
dec
lahf
jb
sbb
fwait
call
sbb
out
cs
fdivrp
outsb
repnz
je
xchg
in
rcrl
fcomp
fistl
cmp
inc
data16
xchg
ret
cwtl
sti
movsl
gs
mov
hlt
call
sbb
or
add
adc
test
fldcw
aaa
sbb
rorl
icebp
inc
cmp
dec
sbb
cmpsb
xchg
and
mov
push
popa
mov
fidivs
inc
or
loopne
pushf
or
dec
dec
sub
in
mov
xchg
sbb
loope
sbb
sbb
sbb
jb
dec
cmp
dec
ret
xchg
xchg
mov
test
push
jg
lret
fisubl
scas
arpl
pop
lea
decl
pop
aaa
push
inc
insb
fbstp
pop
hlt
pop
rorb
push
push
lret
stc
dec
jmp
sbb
ror
les
pop
mov
cmpsl
negl
out
dec
inc
cmpsl
xlat
adc
js
das
stos
enter
push
dec
push
and
lahf
popf
clc
les
xlat
jnp
nop
in
mov
cmp
fdiv
loope
pop
and
mov
vphaddwq
insl
in
push
jbe
sahf
imul
dec
mov
pop
push
or
inc
jge
ret
xchg
cs
pop
jmp
hlt
lock
add
jg
and
stos
xor
mov
adc
xchg
outsl
movsb
daa
call
adc
in
fisubl
inc
sbb
out
fimuls
push
jle
aam
aaa
push
int
cmp
pop
push
out
cmpsl
push
cltd
add
addr16
adc
cltd
push
inc
out
pop
icebp
int
xchg
add
data16
call
mov
and
mov
daa
lret
mov
pop
test
mov
cwtl
push
fstpl
js
cwtl
femms
pop
push
or
fwait
jmp
dec
into
int3
mov
pop
lods
adc
outsb
dec
arpl
popa
fildll
lock
call
inc
fcmovnu
pop
mov
cmp
xor
lds
pusha
nop
rcrb
mov
div
xchg
sbb
push
mull
shr
rcll
insb
in
and
dec
daa
inc
pop
outsb
loop
mov
js
cwtl
movntps
xchg
popl
orb
int3
mov
cmp
xchg
adc
inc
xchg
call
sahf
adc
lods
ror
stos
in
or
push
lahf
sub
jp
sarl
mov
repz
stos
jne
sub
adc
imul
mov
inc
frstor
mov
mov
pop
imul
lahf
xchg
mov
add
jmp
mov
sub
leave
call
dec
ljmp
ret
mov
fwait
and
add
outsl
shr
dec
or
and
in
jp
fidivs
enter
pop
lods
mov
mov
cwtl
xchg
push
inc
lret
jmp
pop
push
arpl
sbb
push
xchg
cli
jnp
popf
sbbl
push
shl
jno
in
jno
inc
in
comiss
out
roll
mov
cmp
and
mov
ffreep
adcl
pop
lcall
add
fildll
fcomps
push
loope
push
shll
sbb
xchg
xchg
fs
sarl
cmc
mov
xchg
sbb
pop
xchg
loopne
pop
sbb
pop
xchg
xlat
call
sar
push
push
repz
mov
jns
mov
fbstp
mov
xor
iret
out
orb
push
call
jo
sub
dec
xor
je
subl
dec
fidivl
push
test
stc
ljmp
sub
into
xchg
add
jp
mov
fcomps
push
shll
addl
pop
or
jne
pushf
inc
and
xchg
xchg
sahf
inc
mov
sub
cmp
loope
mull
mov
push
pop
jg
sub
loope
loope
jg
sub
mov
adc
in
inc
aas
lahf
sbb
daa
add
insb
mov
pop
xorl
cli
mov
in
je
or
adc
fnstsw
lds
sub
ss
gs
repz
cld
sbb
cmc
pusha
enter
pop
xor
adc
fcompl
outsl
icebp
mov
pop
outsb
sub
inc
clc
sbb
jle
lods
test
ja
roll
fsubl
and
call
xor
int3
lret
aam
fidivl
pop
jmp
push
js
cli
lds
sti
xor
sub
mov
popa
lods
or
aam
mov
fs
scas
bound
jnp
dec
push
int3
out
xchg
lock
scas
loop
lcall
jno
jne
cwtl
addb
shl
lret
out
jae
stos
roll
shll
mov
mov
dec
push
lea
hlt
lcall
push
fs
pop
pop
shr
shrb
mov
or
shrb
in
arpl
xchg
enter
jl
pop
jo
cmp
lret
jge
repz
aas
push
pop
inc
push
pop
add
imul
push
js
jns
xchg
sbb
nop
fnsave
mov
xor
aas
les
rorb
mov
icebp
mov
pop
rolb
dec
inc
xor
push
jns
push
sub
sub
dec
xor
cmp
xchg
out
cmp
std
xchg
cwtl
xor
ds
xor
sub
mov
addr16
pop
inc
sti
pop
popf
insb
add
stos
mov
das
jge
pop
bound
out
mov
sub
xchg
push
pop
jl
pop
and
subl
push
mov
js
int
pop
jp
mov
leave
out
leave
jge
cmp
jmp
in
mov
sbb
fistpl
insb
mov
cwtl
xor
add
adc
leave
mov
stc
inc
inc
lock
or
iret
push
enter
ret
or
pop
xchg
scas
popf
fcompl
fidivl
and
sbbb
fld
mov
jp
push
sub
mov
mov
sbb
adc
in
mov
sub
cmp
fidivs
push
jnp
xchg
push
in
cli
add
mov
mov
nop
clc
iret
xchg
ret
sti
cltd
jle
pop
es
mov
leave
outsb
ljmp
jne
in
jp
push
cmp
pop
sub
or
addr16
gs
lret
xor
xchg
jge
sbb
cmp
xchg
xchg
add
xchg
enter
adc
shlb
push
dec
pushf
add
pop
rcll
mov
faddl
jp
aam
stos
rorb
cltd
mov
add
dec
mov
jns
sbb
mov
stos
rolb
je
js
flds
and
adc
adc
stos
pslld
cmp
stc
inc
mov
mov
stos
push
pop
sahf
add
pop
mov
pop
or
ja
andl
and
push
push
cmp
and
add
adc
sub
mov
push
mov
jnp
mov
mov
nop
cs
cmpsl
inc
inc
inc
and
sbb
in
cli
out
jecxz
xorl
dec
adc
mov
mov
xor
inc
xor
sbb
xor
sub
in
cmpsb
cmp
inc
loope
fstl
add
xor
mov
mov
mov
clc
fldl
jle
add
fcompl
sbb
mov
stos
add
test
cmp
push
pop
jmp
andl
and
xchg
sbb
sbb
and
rcrb
inc
inc
and
and
shlb
jecxz
jno
jne
mov
movsb
add
arpl
sbb
xor
inc
lods
push
cmpsb
mov
add
push
push
loopne
jge
insl
adc
call
dec
pop
insb
filds
lcall
jg
inc
lea
and
clc
adc
push
ret
pop
pushf
sub
shl
jns
repnz
out
out
negl
inc
arpl
cmp
push
push
aam
pop
push
enter
repnz
cmp
cs
mov
sbb
cmp
out
roll
icebp
sti
into
lret
setp
and
xor
mov
mov
lods
pop
pop
std
ret
xor
lock
stc
cmp
dec
jne
pop
cmp
mov
inc
cmp
cmp
shll
test
jne
push
bound
cmp
mov
cmpsl
std
cmp
adc
icebp
icebp
mov
cmp
jmp
js
add
pop
out
inc
mov
jle,pn
nop
lret
stos
inc
xchg
js
sub
cmpl
pop
xchg
movsl
arpl
add
lods
jne
mov
lods
add
repz
mov
imul
cmc
in
pop
push
ja
cmp
and
xchg
pushf
shll
xchg
sbb
int3
int
pop
pop
push
jmp
xor
test
add
push
mov
dec
les
push
ljmp
sbb
dec
imul
popa
pop
dec
cmp
jo
dec
cld
push
jmp
movsb
mov
add
fdivp
rorl
jg
mov
dec
xchg
pop
mov
xor
cs
out
fnstsw
stos
jo
into
repz
pop
push
xor
sbb
and
lahf
cmpsb
push
cmp
out
inc
movsb
cmp
jae
bound
lret
repz
arpl
js
push
rorb
inc
test
adc
cs
ror
leave
cmp
xchg
cmpsb
lock
rcrl
mov
dec
outsl
push
push
and
lea
ret
pop
jns
jl
imul
add
cmp
dec
cmp
insb
jae
mov
cmp
les
and
xchg
add
sbb
mov
mov
scas
and
jae
sub
xor
cmp
fldcw
jl
xor
push
je
fdivrl
dec
dec
sbbl
pop
jnp
shr
mov
dec
pop
loope
xchg
xchg
scas
idiv
loope
xchg
jae
inc
jns
push
jecxz
ja
icebp
jg
mov
lret
loope
jg
mov
mov
subl
outsl
outsb
mov
cmp
xlat
add
jns
xor
push
sbb
lret
sub
int3
rcrb
push
mov
lret
xor
clc
sbbb
aas
in
push
lret
sarb
mov
addr16
adc
pop
push
inc
gs
jb
sub
int
dec
mov
rcl
rorb
inc
popa
stc
cmpsb
clc
ds
cltd
inc
or
mov
xlat
cmp
lock
fwait
xchg
jl
pop
pop
pop
sahf
pop
testb
cmp
xchg
fisttps
scas
add
mov
lods
mov
dec
fcomi
mov
push
sarl
mov
rcr
sbb
andl
cmpl
fwait
inc
push
stc
shrb
pop
inc
pop
inc
xcrypt-cbc
cmpsl
xchg
jbe
in
or
and
and
int
push
mov
fs
data16
mov
pop
dec
ds
in
add
ret
mov
sbb
lahf
in
icebp
and
test
out
pop
and
pop
pop
outsl
dec
test
xchg
sbbl
popa
in
rcr
gs
outsb
in
adc
out
data16
mov
and
jns
hlt
xchg
or
sbb
clc
lret
sub
mov
jg
stos
pop
add
movsb
popa
mov
mov
dec
lret
aad
subl
es
test
dec
mov
jns
mov
mov
jae
movsl
cs
nop
jg
sbb
in
cmpsl
sbbb
iret
lock
add
insl
test
push
mov
pushf
popf
popf
je
addr16
fwait
and
lahf
add
in
push
mov
sub
or
shlb
or
jl
sub
cmp
sub
lea
fcoml
hlt
mov
cmp
xchg
pop
lea
lea
pop
sbbl
pop
fcomi
push
mov
les
xor
fbstp
nop
jno
popl
xchg
movsl
fildll
jg
je
insl
lods
and
clc
out
mov
lcall
pop
pop
mov
jbe
sub
adc
cltd
fisubs
push
xchg
adcb
inc
mov
scas
sub
notb
lret
cmp
push
in
mov
or
stos
cmp
sbb
lret
and
pushf
push
pop
fstpt
sbb
popf
mov
push
cld
lea
and
imul
imul
jo
cwtl
mov
pop
imul
test
rcpps
icebp
lds
jo
das
je
jo
push
imul
sbb
pop
pop
or
lahf
xlat
nop
bnd
inc
mov
fstpl
mov
out
dec
cmp
adc
ja
sub
movsl
xor
pop
sub
or
out
sub
fucompp
mov
imul
mov
xchg
lcall
movsb
push
sub
xchg
xorb
int
pop
fnsave
ret
in
push
scas
or
mov
push
dec
data16
lds
add
jae
lahf
popf
test
test
cmp
ljmp
fstl
xchg
testb
dec
popf
call
dec
bound
daa
mov
add
notb
jle
inc
cmpsb
popl
xchg
pusha
lods
mov
mov
out
sub
adc
pop
add
add
stos
out
mov
push
add
int3
jno
dec
leave
mov
addr16
push
inc
imul
cmpsb
std
xchg
mov
and
aam
mov
mov
std
dec
xor
sbb
das
pusha
adc
pop
inc
push
push
push
jbe
sbb
and
fmull
lcall
push
inc
mov
stos
add
lahf
data16
push
pop
cs
push
xchg
jns
sbb
mov
mov
imul
inc
pop
add
jbe
and
adc
lock
jnp
data16
cmpsl
imul
loope
insb
orb
jb
je
inc
out
pop
ss
lods
mov
stos
out
sbb
push
dec
mov
dec
xor
test
jl
inc
cmp
sub
mov
xchg
call
js
sbb
fucomip
aaa
mov
cld
sub
jle
jnp
dec
cmovb
xchg
dec
inc
dec
mov
pushf
shll
jb
xchg
test
xchg
les
scas
repz
sbb
jp
pop
aam
cmp
fwait
and
adc
dec
stc
daa
pop
mov
lods
inc
pop
mov
push
ja
push
in
sbb
pop
xor
movsb
ss
cmc
repnz
fcmovu
das
mov
add
aad
push
nop
out
out
ja
cli
ja
mov
xor
std
and
or
les
push
sbb
nop
cmp
test
shll
scas
je
repz
loop
shll
fwait
pop
sub
into
outsb
xchg
lea
notb
sbb
inc
mov
xor
jne
xlat
sti
jo
adc
movsl
lods
ljmp
into
repz
imul
repz
lret
sbb
or
push
sti
jns
xchg
dec
cmp
dec
mov
mov
icebp
add
scas
stos
sub
mov
mov
test
es
lds
jo
dec
or
loopne
jb
stos
adc
jne
lcall
es
dec
test
lret
mov
testl
or
filds
inc
inc
cmp
jns
decb
push
bound
lcall
mov
scas
add
add
lret
jg
gs
std
and
test
testb
jne
push
push
sub
psubb
xchg
pop
fcmove
rcrb
push
out
imulb
sbb
fwait
sti
sbb
test
sbb
ljmp
aas
mov
cld
sub
enter
xchg
jo
aaa
dec
cmp
lods
xchg
sub
and
mov
mov
roll
lods
fdivrs
xor
loopne
lret
pop
or
stc
flds
or
sub
xor
push
shrl
pop
xchg
cmpsb
jecxz
and
lret
sbb
mov
fnstenv
mov
mov
out
data16
mov
mov
and
sub
sbb
mov
sbb
pop
add
testl
push
mov
xor
push
jae
pop
int
pop
jae
daa
fcompp
pop
aas
scas
cwtl
sub
mov
test
enter
mov
push
xchg
inc
inc
pop
rcrb
mov
in
push
insb
xor
test
dec
mov
mov
mov
inc
mov
sbb
push
test
xchg
cmpsb
xor
inc
dec
jl
insb
or
test
pusha
xchg
addr16
popf
imul
scas
test
clc
sbb
data16
icebp
leave
sarb
inc
push
add
cli
dec
pusha
mov
jecxz
insl
cmp
mov
cmp
popa
jae
loope
xchg
js
lahf
pop
mov
sbb
or
adc
dec
ss
outsl
sub
jno
imul
aad
imul
mov
stc
mov
call
sub
jns
es
dec
dec
jb
sub
mov
mov
jmp
js
cmpsl
je
pushf
out
push
inc
add
push
and
inc
movsb
push
clc
incb
movsb
scas
and
ret
mov
xor
ljmp
inc
dec
jl
mov
inc
sbbl
or
sub
pop
lcall
mov
mov
jg
idivb
in
jb
clc
jbe
xchg
pop
jp
dec
mov
les
cwtl
setns
bound
call
popf
fiadds
pop
fmull
stos
dec
dec
dec
xchg
fistl
loopne
pusha
pop
rcrl
popf
push
jb
jge
adc
js
insl
stc
inc
xchg
mov
fldenv
jmp
mov
pop
outsb
std
push
imul
out
sar
push
mov
jns
mov
push
pop
push
insb
call
push
into
or
xchg
cwtl
and
adc
mov
out
jmp
aaa
cltd
addr16
sbb
stc
adc
adc
mov
cmp
xchg
push
or
dec
push
sub
sti
adc
imul
aad
lret
aad
sbb
lods
cmp
dec
xchg
push
or
popf
inc
shll
out
das
ret
addr16
mov
push
sub
xor
dec
in
cmp
push
dec
ret
and
jo
call
sub
insl
sub
outsb
jmp
cmp
cmp
and
lods
push
jp
scas
pushf
push
and
jecxz
or
xchg
into
stc
and
push
stos
loope
fdivs
imul
dec
mov
dec
pushf
mov
lds
xchg
notb
mov
xchg
cltd
dec
cmpsb
xchg
inc
cmpsb
cmp
out
cmpsb
sbb
ret
aas
imul
mov
inc
imull
rol
sub
int
outsl
xor
int3
mov
test
dec
ljmp
pop
insl
data16
mov
mov
and
pusha
push
xchg
jb
jnp
inc
sbb
sub
es
inc
je
clc
pop
xchg
ret
mov
xchg
and
js
dec
xchg
dec
sbb
jns
mov
sbb
out
pop
xor
push
dec
bound
mov
out
mov
rclb
fldenv
jle
or
mov
fcomps
pop
xchg
mov
pop
cs
shrl
in
inc
lret
insl
inc
push
pop
popa
mov
push
cmp
and
les
pushf
out
iret
dec
cwtl
xchg
sub
push
adcl
fstl
mov
addr16
lcall
and
cmp
fsubrl
sub
mov
mov
pop
test
psllq
insb
pop
int3
lahf
int
sbb
jge
xchg
loope
popa
sbb
mov
ficoml
test
jl
mov
ret
cmp
lock
insb
and
add
push
or
popf
scas
jne
add
inc
fisubrs
xchg
test
arpl
outsb
cmp
and
lcall
leave
xorl
jns
xchg
cld
sahf
inc
dec
movsl
jecxz
pop
cmpsb
mov
sub
out
push
mov
sub
jns
and
into
jb
inc
xchg
sahf
pushw
mov
es
pop
pop
adc
test
xorl
dec
inc
out
scas
and
ror
push
jb
int
rorb
nop
inc
xor
js
xor
in
jg
sarl
sarl
jecxz
divl
fnstenv
mov
xchg
mov
pushf
push
pop
push
pop
mov
push
push
fiaddl
fs
fisubrl
jmp
leave
xchg
cmpsb
push
xor
cli
ss
jnp
pop
icebp
dec
or
int3
mov
sbb
cli
jle,pn
int3
popf
and
dec
mov
pusha
push
mov
sbb
inc
lock
mov
pop
in
je
call
nop
cmp
sti
pushf
orb
mov
mov
and
xor
xor
jl
pop
sub
sub
rol
cmp
subl
imul
adc
lret
or
jmp
outsl
fsubrp
add
stos
lret
lcall
dec
les
scas
std
lock
lods
adc
jno
jbe
mov
js
fcompl
out
jns
arpl
in
insl
cs
in
jnp
bound
sbb
loop
icebp
negb
int3
or
addl
dec
pop
mov
fldt
pop
inc
and
push
add
cmp
inc
or
mov
fwait
imul
lods
sbb
lahf
cmp
pop
shrb
jl
push
and
scas
fisubrl
jle
push
add
shrl
jge
xor
cld
xchg
clc
lahf
mov
adc
into
clc
mov
roll
imull
and
fdivrl
sbb
xlat
lods
popa
sbb
jl
and
sub
add
movsl
in
and
iret
dec
out
jns
lret
incl
sbb
sub
arpl
incl
std
fists
pop
and
cwtl
xor
loopne
pop
aad
xchg
xor
outsl
mov
mov
mov
add
or
cld
push
add
cld
out
repz
lahf
push
mov
loope
fidivrs
in
inc
inc
stc
out
and
ret
xor
sahf
or
push
jmp
jne
or
arpl
nop
int
sbb
cs
cmp
jge
sti
nop
xor
outsl
mov
inc
xchg
push
mov
jmp
and
test
sti
insb
mov
das
push
or
and
inc
lds
leave
mov
pop
push
gs
push
xor
enter
mov
push
jno
les
fnstcw
loop
ret
cmc
iret
andb
pop
clc
mov
aas
outsl
fs
mov
out
js
test
dec
std
ret
xchg
dec
add
xor
icebp
outsl
loop
xchg
call
mov
dec
cmp
fwait
mov
out
loope
jmp
sahf
dec
jo
stos
push
jl
aad
orb
inc
rcl
popa
in
rorl
and
jl
pop
mov
cmc
ja
mov
sahf
cmp
enter
aad
sub
fdivrs
mov
cmp
mov
push
xchg
popa
push
mov
scas
fsubs
jmp
jl
arpl
out
das
arpl
cmp
push
cmp
adc
push
xchg
push
test
push
mov
test
sbb
dec
push
pop
and
or
and
push
mov
push
fistps
cmp
push
lock
arpl
mov
mov
or
loopne
add
jmp
cmp
xchg
inc
xchg
movsl
ds
sub
pop
jge
pop
mov
scas
test
or
cmpb
insb
pop
adc
sub
std
pop
icebp
aaa
xor
jp
adc
ret
push
xchg
mov
lahf
dec
les
pop
sub
xchg
mov
push
or
sub
jecxz
insl
adc
adc
jae
push
fisubrl
adc
and
fnstsw
jl
iret
lret
ja
cs
rclb
icebp
stc
mov
cs
stos
fiaddl
xor
popf
fsubr
jle
fldl
into
int
lods
adc
fcomip
test
test
xchg
jb,pt
lret
arpl
mov
jp
xor
mov
decl
dec
mov
cmpsb
pusha
test
call
xchg
fs
insl
outsl
outsl
mov
imul
add
rclb
stos
sbb
dec
jmp
or
pop
mov
loopne
imul
jg
fldcw
out
dec
cmpsb
jnp
mov
mov
mov
jp
clc
addr16
cmpsl
mov
loopne,pn
leave
cwtl
or
fsubs
cmp
in
push
lahf
adc
jo
push
cmpsl
push
out
adc
or
cs
sbb
jmp
pop
das
pop
lcall
pop
mov
sub
rclb
dec
xchg
je
loopne
in
mov
push
rcr
and
sub
addb
icebp
pop
mov
xlat
push
test
add
mov
daa
mov
push
fstpl
lcall
mov
mov
pop
clc
cmp
leave
xchg
dec
jp
cli
pop
divb
sub
inc
xchg
dec
xor
mov
pop
mov
imul
mov
pop
jo
sub
adc
sti
xchg
pop
inc
lea
inc
pop
pop
outsb
mov
adc
add
inc
frstor
inc
xchg
test
out
fneni(8087
hlt
jp
and
push
xchg
mov
daa
fidivl
ud2
adc
push
cmp
mov
push
pop
mov
ror
add
into
fs
mov
out
scas
jmp
negb
negb
jp
cli
adc
cmpl
sub
fs
bound
aas
scas
push
mov
cltd
dec
js
fnstenv
xlat
sti
daa
and
insl
fbstp
fdivl
shl
pop
sbbl
sahf
rorl
dec
push
hlt
cmp
mov
hlt
dec
and
out
pop
xor
fildll
xchg
out
xchg
js
fsubrp
mov
in
push
cmp
test
test
inc
jge
sbb
pusha
push
jle
int3
pop
bound
iret
mov
adcl
push
loope
movsb
repz
popf
adc
arpl
cltd
add
cmp
lcall
jle
inc
mov
jno
adc
pop
push
shll
ljmp
repnz
fmuls
xchg
imul
jb
sub
pop
popa
mov
push
or
mov
jns
xor
loope
scas
adc
insl
jle
rolb
xor
test
lods
addr16
add
ss
cmpl
mov
sbb
fnstcw
pop
test
and
out
aam
xchg
sub
scas
xchg
sub
mov
sbb
sbb
cmpl
adc
test
adc
sub
fldenv
sub
es
lahf
add
sarl
mov
aad
movsb
mov
xor
cmp
dec
test
jge
fdivrs
pop
xchg
fnstcw
push
lods
data16
das
or
gs
gs
stc
or
inc
popa
gs
les
and
sbb
xchg
xor
sbb
fmul
sub
fsubl
inc
popf
mov
add
add
js
sub
sbb
and
mov
lcall
loop
lods
rorb
lret
int
pushf
jle
mov
push
subb
pop
aam
push
pushf
mov
xchg
pop
push
push
sarb
adc
or
imul
in
fists
xchg
push
fmull
push
loope
pop
jecxz
pop
ljmp
ret
stc
mov
lcall
popa
push
sbb
mov
ret
cltd
pop
dec
cmpsb
lods
pop
