mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
sub
mov
mov
not
mov
add
not
shl
imul
sub
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
push
add
push
mov
add
push
push
lea
push
mov
call
add
mov
mov
mov
mov
push
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
decl
mov
jne
addl
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
mov
sub
push
xor
push
mov
mov
mov
cmp
jne
push
mov
call
push
lea
push
push
mov
push
mov
mov
call
mov
call
cmp
je
xor
jmp
push
push
push
push
push
mov
call
mov
mov
mov
mov
push
sub
mov
call
push
call
lea
push
push
push
push
call
push
lea
push
push
mov
call
lea
mov
add
lea
push
mov
call
cmp
je
cmpl
jne
mov
call
cmp
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
leave
ret
push
mov
call
mov
mov
dec
jne
mov
cmp
jne
push
pushl
push
mov
call
jmp
cmp
je
test
jne
testl
je
cmp
je
push
push
push
xor
call
push
mov
call
xor
ret
fs
adc
add
add
add
int
xchg
je
add
push
scas
push
pushf
sbb
movsb
xchg
mov
ja
jmp
mov
inc
sub
ljmp
test
rcrl
fimuls
and
fbstp
je
inc
jne
add
ret
add
dec
js
jbe
aas
cmc
int3
jnp
dec
jne
ja
xchg
jo
cwtl
loope
scas
or
and
xor
fmuls
jp
arpl
mov
cs
push
cmc
mov
adc
in
pop
mov
in
xchg
push
inc
and
jae
mov
int3
arpl
pop
jp
enter
jmp
mov
ljmp
sub
lods
fldt
sub
jg
lret
enter
loope
shrb
mov
pop
jnp
sub
push
sbb
bound
mov
adcl
aam
test
lods
push
js
dec
into
pop
sub
movsb
inc
fsub
ss
icebp
mov
pop
pop
aaa
js
pop
ret
sarb
imul
pop
mov
cltd
and
dec
cmp
mov
scas
dec
das
mov
ds
adcb
adc
sbb
outsb
es
ljmp
or
mov
mov
jae
add
inc
scas
cmp
cmpsl
or
xor
mov
dec
enter
xchg
popf
ljmp
add
push
pop
adc
add
dec
cmp
jg
jecxz
notl
fildll
insl
inc
jb
sub
cmp
orl
add
dec
gs
shr
mov
or
sub
fs
enter
sbb
push
aas
xchg
jne
jecxz
ljmp
mov
sub
in
push
leave
xor
dec
popa
mov
cmp
push
push
mov
loop
xchg
dec
scas
sub
pop
lret
mov
shlb
sbb
ss
popf
outsl
and
gs
pop
mov
or
bsr
sbb
xor
andb
aam
and
insb
ja
inc
dec
fbstp
mov
fiaddl
mov
test
mov
sub
std
pushf
popf
or
lods
int3
stos
or
push
es
sub
add
pop
stc
pop
ljmp
dec
int
aas
outsl
leave
clc
add
bsr
stos
inc
fisttpl
inc
mov
inc
pop
sub
dec
es
popf
ljmp
jmp
aaa
cli
rcrb
gs
cwtl
mov
lcall
scas
outsl
add
jl
stc
test
lcall
push
mov
xor
mov
cmp
clc
aam
xor
add
adc
dec
mov
fildll
ljmp
or
sbb
fists
jb
or
jp
inc
cmpsb
mul
hlt
rcrb
inc
mov
adc
fsubp
pop
in
adc
and
add
imul
xchg
xor
jp
and
inc
mov
lahf
das
rorb
push
xchg
sbbb
call
or
bnd
mov
mov
stos
les
jae
aam
sbb
cmpsl
loope
fsubp
cmp
add
sbb
inc
jbe
adc
push
mov
and
ja
lods
or
lds
xor
mov
imul
xor
sub
pop
cli
fsub
leave
int
div
fwait
outsb
lret
adc
mov
mov
add
scas
and
out
lahf
lock
xor
repz
xchg
lods
inc
dec
jp
aad
cmp
jp
dec
lods
pop
pop
lds
rcl
sarl
pop
lds
out
mov
into
ret
push
shlb
bound
inc
stos
cltd
xor
ds
pop
cmp
lret
push
shlb
loopne
jne
jmp
ja
mov
inc
ja
subl
add
arpl
cmp
in
xor
push
adc
jp
mov
mov
fstl
outsl
std
in
lcall
sbb
or
adc
cmpsl
xchg
mov
inc
cmpsb
rcll
dec
or
inc
fstpl
out
popa
fistpl
mov
fldt
pop
sbb
fs
mov
icebp
cld
imul
fcompl
xor
pop
sarb
jae
xor
dec
dec
movsl
jno
sbb
inc
subl
hlt
mov
jae
xchg
negl
inc
sbb
das
fnstenv
pop
mov
mov
pop
clc
testl
in
outsl
call
sbb
test
addl
xchg
add
mov
imul
idiv
cmp
adc
adc
xlat
dec
ja
jno
out
sbb
roll
pop
push
sub
adc
xchg
ja
clc
adc
cmp
jno
dec
mov
pop
xchg
jg
jne
jecxz
push
adc
outsl
test
cmp
lcall
pop
repnz
enter
and
and
inc
xchg
pop
jae
in
iret
push
mov
pop
adc
xchg
aam
ret
nop
add
pop
jp
jmp
insl
repz
inc
jg
jae
push
fistps
jmp
ljmp
sbb
movsb
orl
cli
jne
pop
cmp
stos
iret
mov
mov
mov
push
loopne
mov
mov
clc
push
xchg
mov
std
addb
mov
call
jle
and
sbb
adc
fadd
sub
jmp
mov
lret
xchg
pop
idiv
push
iret
cmpsb
and
popa
mov
cmc
pop
es
push
aam
push
into
mov
and
mov
jae
xor
lock
notl
mov
mov
inc
subl
dec
sub
mov
or
add
les
cmpsl
aas
popf
xor
mov
mov
and
scas
lret
mov
insb
dec
push
test
hlt
and
cld
sti
or
int3
cmc
push
int3
clc
mov
pop
punpckhbw
cmp
and
sbb
or
dec
sub
xor
call
cmp
cmc
jecxz
hlt
scas
frstor
jmp
aaa
cmp
movsl
cwtl
jbe
popa
ss
gs
mov
sub
xchg
xchg
inc
xchg
xor
popf
xor
in
xchg
shr
add
shlb
jl
cmp
mov
stos
adc
ret
pop
fabs
or
loop
mov
xor
pop
push
xor
inc
lods
mov
pop
sti
arpl
push
jg
mov
stc
pop
sub
adc
xchg
mov
push
shlb
ljmp
push
shrl
dec
mov
stc
dec
xor
mov
xchg
jle
xchg
xorl
cld
mov
sbb
loope
cmp
and
sub
dec
rorl
push
in
in
jae
adc
inc
ja
xchg
dec
push
mov
loopne
bound
and
scas
sub
loopne
pop
push
sti
sti
cli
or
or
inc
sub
mov
out
lock
fwait
push
xchg
mov
mov
ss
jmp
mov
mov
lods
mov
stc
int
lahf
fistl
in
push
test
inc
xchg
out
pop
in
mov
adc
mov
lahf
pop
xor
and
test
adc
add
cli
enter
push
leave
push
fsubrp
jo
add
xor
sti
rorb
mull
xchg
add
add
orb
lock
or
lods
mov
mov
dec
sub
xchg
xor
arpl
jmp
dec
sbb
mov
jecxz
mov
dec
lds
inc
mov
push
mov
test
fdivr
push
push
push
es
test
push
pop
inc
pop
aam
sbb
into
add
jle
repz
in
repz
fs
cmpb
sub
xchg
sahf
jne
push
loopne
out
dec
mov
jb
sub
inc
cmp
stos
sbb
sbb
xchg
mov
pop
push
aas
dec
sbb
call
adc
mov
les
jnp
jg
adc
ret
and
insb
fcoms
sub
ljmp
pop
test
add
inc
cmp
xchg
mov
fs
inc
adc
mov
jns
inc
sub
loopne
sysenter
stos
push
inc
push
arpl
ficompl
stc
jecxz
jne
push
movsb
fwait
dec
jle
movlps
adc
mov
js
xchg
add
movsb
xchg
jne
ja
lds
jb
insl
cmp
repnz
sbb
test
and
cmp
mov
lods
inc
cmp
pushf
fwait
out
loope
add
and
in
lret
fsubrs
fistl
je
dec
scas
pop
cmpsl
dec
scas
jle
xchg
sbb
in
mov
or
jno
loope
out
rcrl
xor
inc
jecxz
andb
mov
mov
sbb
cmpsb
mov
mov
clc
push
adc
add
dec
add
jp
and
mov
xor
outsb
dec
fstl
stos
sbb
mov
cld
xor
iret
dec
sub
dec
out
jmp
fdiv
adc
push
test
ljmp
out
adcb
add
push
add
pop
mov
jb
add
mov
out
sub
lahf
fistps
and
lods
and
inc
xor
pop
pusha
sbb
lock
ret
lods
lods
or
test
or
xorb
jmp
cmp
mov
subl
ret
jg
xchg
orb
dec
pop
pusha
add
cs
mov
jne
xchg
xchg
leave
test
inc
movsl
push
sbb
das
jmp
cwtl
jmp
jo
pop
lcall
push
lea
ret
push
pop
addr16
jmp
mov
xchg
test
mov
pop
pop
testb
cs
arpl
sub
imul
mov
mov
xor
xchg
push
cmpb
cltd
loop
mov
sbb
enter
pop
xor
push
test
push
cmp
pop
sti
int3
notl
leave
jmp
and
dec
cltd
arpl
movsb
sbb
test
sub
pop
dec
inc
sti
test
cmp
fwait
outsb
cmp
nop
in
aas
mov
fmuls
pusha
xlat
cmpl
test
push
or
mov
jne
retw
push
lock
sub
xor
pop
fsubr
inc
and
cmpsb
std
iret
and
aad
addr16
adc
jmp
dec
pop
ja
xor
jl
dec
out
mov
and
fisttpl
push
jl
or
repnz
aad
mov
sbb
popf
sub
add
mov
ja
inc
lea
sbb
rol
lret
hlt
dec
out
cltd
nop
mov
daa
push
insl
sbb
sti
jo
mov
mov
aad
in
subl
mov
dec
hlt
je
fldcw
jle
mov
push
and
inc
and
orl
jb
imul
inc
test
xor
pop
cld
pop
lods
imull
and
adc
mov
or
nop
das
jg
xchg
lcall
test
xchg
outsl
inc
jnp
mov
icebp
mov
enter
jne
xor
push
or
sbb
jae
cmp
sti
ret
mov
xchg
mov
imul
hlt
aaa
loop
xchg
cmp
pushf
mov
movsb
xchg
daa
xor
lods
sbb
mov
nop
lcall
pop
cmp
cmp
pop
test
imul
inc
das
add
movl
ret
adcl
js
popa
sub
jle
inc
lock
insb
test
mov
jbe
cwtl
imul
adc
popf
dec
repz
xor
cmp
testl
sti
mov
sbb
loop
jo
and
punpckhdq
fldlg2
popf
fs
or
mov
popf
cmpl
pop
pop
popa
mov
inc
xchg
pushf
clc
sbb
ret
popf
js
mov
sbb
and
cwtl
add
ja
inc
pop
pop
fisubl
cld
imul
pop
jmp
cli
xchg
fucompp
fistps
imul
xchg
clc
sub
shrl
push
mov
mov
rclb
sbb
jl
mov
fcomp
sub
paddusb
mov
push
inc
nop
sti
mov
inc
mov
add
or
cmp
rcrl
xchg
lretw
es
sub
mov
dec
mov
jle
adc
sub
xor
lcall
xchg
xchg
jle
clc
mov
push
push
out
and
inc
ret
mov
mov
cmp
mov
mov
insb
dec
push
aam
push
sub
push
and
add
hlt
stc
mov
push
jge
cld
and
fstl
cmpsb
lret
andl
push
pop
sbb
dec
mov
test
in
cmp
shll
stos
iret
loop
movsl
adc
inc
cltd
adc
sbb
and
push
repz
mov
and
rcll
xor
test
repz
mov
insl
je
gs
xor
into
cmpsb
push
dec
movsl
ds
dec
and
add
decb
push
jno
aam
in
punpckldq
lcall
push
roll
pushf
cmc
fwait
into
out
xchg
dec
push
rdpmc
jns
movl
xchg
pop
clc
daa
and
sbbl
adc
xlat
into
inc
pop
test
popf
sar
pusha
popa
inc
lds
fnstcw
xor
jge
stos
sti
sti
enter
je
mov
fmuls
out
ds
ss
and
ror
shlb
in
in
mov
adc
aas
dec
outsl
and
adc
sahf
outsl
aaa
sub
js
addr16
cmpsb
stc
and
xor
mov
ret
add
stos
lods
out
stos
sarl
in
xchg
rorl
ljmp
dec
nop
pop
inc
insb
jg
sub
inc
sbbb
mov
jge
fs
pop
mov
pop
mov
test
dec
mov
aaa
int
movsbl
es
dec
ficomps
jp
inc
sbb
arpl
xchg
in
cmp
xor
cltd
shl
stos
jno
test
out
xchg
clc
sbb
mov
out
mov
inc
ljmp
or
int3
in
int3
mov
mov
adc
mov
add
sub
movsl
sti
icebp
push
imul
cmpsb
test
fsts
aam
mov
dec
sbb
mov
cmp
sbb
popf
xchg
daa
lea
lret
mov
in
and
push
mov
mov
scas
jo
adc
dec
notb
mov
or
movsb
push
adc
jmp
repz
fstl
mov
jno
scas
add
pop
push
jle
aam
xchg
or
xor
in
aam
aad
movsl
push
mov
lahf
inc
dec
loopne
xchg
adc
leave
js
lods
mov
js
mov
faddp
out
xchg
cmp
pop
je
sub
push
mov
sub
jo
leave
popf
lds
push
scas
push
daa
pop
je
inc
daa
pushl
lods
loopne
out
jae
mov
push
adc
jmp
or
pop
das
or
aad
out
into
lods
mov
negb
stos
and
pop
push
mov
call
and
push
test
mov
sarb
dec
stc
daa
imul
out
jecxz
popa
add
arpl
js
scas
enter
dec
sub
xchg
fcomps
mov
jge
hlt
pop
insl
or
pop
add
sub
sarb
cli
and
movsb
cltd
lahf
imul
scas
std
mov
sub
out
arpl
in
jmp
ljmp
insl
cmp
inc
adc
test
in
jg
sbb
repnz
cmp
pop
lea
ss
jp
lret
dec
pop
sub
mov
das
jle
lret
jmp
dec
daa
pop
sbb
push
mov
mov
mov
daa
adc
mov
jnp
in
mov
push
and
xchg
add
stc
mov
push
sarb
jl
dec
mov
fdivrl
dec
mov
sub
dec
arpl
xchg
xor
sbb
xorb
fwait
mov
out
xor
sbb
cmp
mov
xlat
fucomip
lods
mov
pop
mov
daa
cmp
out
icebp
arpl
add
cs
push
sub
stc
mov
push
push
jnp
add
cld
cmp
xchg
mov
in
test
negb
mov
cmpb
icebp
scas
ja
mov
not
roll
icebp
das
mov
aaa
mov
dec
mov
aam
push
leave
aaa
aas
stos
clc
stc
ja
and
in
mov
ja
dec
ret
shll
mov
cwtl
ljmp
mov
movsb
mov
movsl
mov
loopne
loop
inc
xchg
mov
cs
add
loope
push
popa
pop
leave
shlb
loope
or
push
nop
fmull
dec
sub
mov
aas
jp
shll
dec
jo
inc
fnstenv
ljmp
mov
jecxz
addr16
dec
jle
aad
sbb
push
inc
jmp
push
ror
leave
jmp
test
mov
imulb
jge
xor
or
push
push
jns
xchg
mov
jecxz
enter
xchg
insl
sti
test
add
xchg
gs
mov
xor
jno
sub
jnp
loope
xorb
lods
les
pop
jns
rorb
imul
pop
sub
jae
sbb
aas
ret
xor
adc
repz
es
mov
lods
mov
mov
test
push
test
mov
xchg
call
test
jno
pop
xchg
pop
xchg
movsl
jl
insb
fsubl
aas
xchg
adc
test
out
ds
xor
sub
stc
into
dec
out
pop
adc
fisubrl
add
sbb
sbb
cwtl
dec
outsl
rorl
ds
repz
addr16
loop
leave
xchg
xchg
xor
mov
aaa
in
inc
das
loope
adc
fcompl
fldcw
adc
jp
popf
bound
ret
push
nop
lea
jns
sub
and
sbb
cwtl
and
add
mov
mov
divl
sti
pop
inc
cmp
std
cmp
and
das
mul
xchg
jmp
test
lret
cld
jg
repz
jg
ljmp
xchg
jo
dec
mov
mov
enter
leave
mov
int3
arpl
je
mov
add
fs
out
cmp
data16
mov
ret
mov
push
dec
dec
adc
jne
xor
mov
or
pop
add
sbb
jg
xchg
pop
dec
divl
orb
xchg
xchg
stc
pop
test
cmp
jb
sub
jl
mov
sub
divb
mov
stc
mov
or
mov
xor
pop
add
ret
jg
mov
ds
jne
imul
scas
xor
xor
nop
imull
in
stc
mov
dec
or
cltd
or
pop
test
call
rol
loopne
jge
mov
push
xorb
add
mov
jp
int3
in
xchg
xchg
mov
cmpsl
cmp
mov
movsl
sbb
sub
clc
xor
pop
ja
push
imul
fsubrl
js
xchg
in
cs
push
inc
mov
repnz
mov
pop
or
pop
jb
fstps
lahf
test
xor
aaa
jbe
cmp
mov
sbb
inc
inc
imul
loopne
add
aam
outsb
mov
aaa
jo
sub
lcall
fsts
cmp
rorb
add
push
or
pop
les
adc
add
dec
scas
push
orb
iret
popf
jo
cmpsb
push
mov
add
fisttpl
das
cltd
mov
inc
mov
lahf
fsubrs
data16
aad
pop
ja
sbb
push
mov
add
stc
dec
add
push
adc
push
fcoms
pop
push
jle
shlb
inc
lock
int3
mov
jmp
nop
enter
loope
rcr
pop
or
jo
or
mov
sahf
arpl
gs
imul
adc
fmuls
sub
imul
mov
jmp
jne
xlat
sub
jne
ret
sbb
fimuls
dec
cmc
mov
pop
test
add
sbb
dec
rorb
in
in
inc
ljmp
sahf
ss
jnp
das
std
xchg
rcll
adcl
xorl
cmp
push
rcl
xor
adc
rcrl
sub
push
ss
sbb
adc
ljmp
ljmp
lret
iret
cmp
test
pushf
shrb
dec
jb
scas
icebp
inc
out
rorl
push
push
and
and
fwait
mov
in
and
jno
mov
lcall
jne
popf
dec
jnp
sub
xor
adc
pop
adc
cs
call
adc
out
add
leave
jg
and
cmp
out
adc
mov
xchg
jbe
cmpsl
xor
cmp
xchg
sbb
enter
mov
xor
pop
push
ljmp
xchg
pop
in
in
movsl
cmp
and
fcmovu
mov
sbb
ret
hlt
mov
aas
shrl
outsb
adc
popf
jbe
inc
xlat
mov
mov
mov
loopne
pop
mov
fimuls
cmp
leave
jp
dec
mov
cltd
xchg
leave
xchg
jmp
jbe
mov
or
cmp
cmp
or
sbb
and
je
aaa
jns
mov
stos
in
stc
filds
sarb
ja
add
mov
pusha
push
push
dec
push
xor
ja
fisttps
or
pop
xchg
les
mov
movsb
scas
int3
out
mov
push
jo
arpl
cmpsb
xor
call
fld
pop
cmp
test
and
push
or
xchg
int
mov
sub
sub
imul
xorl
push
jo
adc
roll
fbstp
out
fiaddl
pop
sar
rcrl
cmp
xor
inc
insl
push
ss
mov
data16
aaa
mov
addb
mov
hlt
out
test
js
and
sub
lods
cld
cmpsl
notb
sbb
lahf
ficomps
jle
xor
or
pop
mov
mov
test
loope
fldenv
aas
adc
addr16
fistpl
adc
jg
shrb
out
repnz
sub
xor
sbb
setb
xchg
push
bound
sbb
jae
pop
jne
flds
push
push
mov
fsubrl
mov
fstpl
adc
cmp
mov
jge
gs
dec
xor
pop
inc
pop
mov
push
and
lea
inc
ret
js
inc
leave
insl
scas
mov
xor
pop
shrb
repz
ljmp
push
push
cmp
int3
insl
aad
cltd
push
add
cmpsl
sbb
mov
pop
aad
fnstenv
cmp
cmp
xchg
clc
push
and
mov
cmpsb
dec
xchg
std
lock
mov
das
clc
jo
imul
mov
mov
sbb
mov
push
loope
and
sarb
jo
das
lock
xchg
mov
mov
aaa
sbb
xchg
add
pop
pushf
loopne
adc
or
movsl
lock
cmp
imul
mov
pop
cmp
cs
pop
xchg
ret
out
addr16
xlat
sub
mov
sub
jo
mov
xchg
dec
xor
sbb
cli
pop
or
in
mov
adc
inc
push
xor
aas
jle
mov
popa
fmuls
jmp
insl
lahf
fwait
add
scas
push
loope
outsb
fwait
out
jae
je
aam
add
lea
xor
aad
lock
xchg
or
mov
notb
ret
out
enter
cs
aas
out
outsb
ss
clc
test
popf
int3
aam
mov
mov
add
xchg
xor
and
add
add
