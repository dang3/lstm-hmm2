xchg
xchg
push
xchg
xchg
xchg
xchg
mov
xchg
xchg
sub
xchg
mov
mov
mov
sub
mov
sub
mov
push
pop
pop
sub
mov
push
pop
pop
jmp
test
pop
nop
fnstsw
data16
xor
fs
in
ret
fimull
jne
push
ret
add
pop
sbbb
xor
add
or
pusha
scas
sbb
or
shl
xchg
or
sub
xor
mov
andl
pop
mov
cmc
add
and
fld1
dec
mov
add
out
push
cs
pop
js
lock
das
jo
shl
cmp
subl
lret
mov
push
dec
int
inc
pop
lret
sahf
daa
loopne
mov
nop
push
movl
outsl
rclb
adc
out
cmp
bound
push
mov
adc
mov
sbb
and
repz
xchg
inc
mov
lret
lcall
rdpmc
xchg
push
fstpl
or
adc
inc
lock
je
push
adc
ds
mov
in
shl
gs
jne
and
in
xor
ss
aaa
add
push
push
push
or
add
aad
ret
aaa
add
xchg
fisttpl
loop
cli
push
lea
inc
sbb
mov
jl
addb
or
andl
jp
push
repnz
sahf
into
pop
mov
xor
or
or
insb
push
inc
lret
jl
fisttpl
or
push
popa
lods
imul
sbb
sti
push
dec
lods
xor
es
pushl
add
sbb
sub
bound
imul
push
push
inc
outsb
or
pop
cld
mov
add
test
and
mov
mov
sbb
mov
cltd
sbb
xlat
mov
mov
push
fld
xor
cmc
pushf
pusha
push
in
fcoms
divb
mov
stc
mov
inc
sub
mov
adc
cmp
mov
stc
adc
dec
jmp
pop
or
jnp
mov
pop
lcall
sbb
jo
shlb
push
cmpsl
adc
adc
sbb
cmpsb
sub
dec
and
push
jg
icebp
mov
pusha
loope
stos
push
std
sub
push
xchg
or
fstp
mov
sub
or
stos
xchg
fsubr
ror
aad
mov
push
sub
add
and
dec
pushl
push
nop
add
adc
imul
pop
mov
dec
pop
lret
jge
ss
or
add
gs
ret
out
sbb
insl
rcrl
ret
adcl
jmp
pop
inc
pop
mov
xchg
jge
movsl
pop
dec
sbb
jmp
adc
ss
or
adc
pop
and
sub
push
cmpsl
or
push
cmc
push
sub
push
pusha
lds
xchg
loop
push
lods
mov
rclb
jae
sub
cmp
fsubr
jle
call
sub
add
insb
jg
iret
rcl
or
cmp
adc
cmp
cld
lods
xchg
adc
add
or
or
xor
loopne,pt
scas
pop
add
push
adcb
or
ss
sbb
ja
and
sbb
sub
xchg
xlat
shll
cltd
daa
or
movsl
cmp
nop
lods
jbe
repz
aas
mov
add
xchg
push
push
xor
ss
cwtl
cmp
push
mov
sbb
sbb
dec
add
in
lds
ss
and
shll
imul
dec
int3
mov
adc
jns
insb
and
in
lret
sbb
nop
loopne
ret
mov
sbb
mov
rcrb
and
clc
adc
lds
loope
xor
fdivl
jb
das
jb
loope
roll
mov
ja
and
sbb
movsb
add
jb
test
es
fs
outsb
pop
jo
fmuls
in
cld
mov
imul
mov
dec
xlat
xor
jle
mov
int3
add
add
add
cmp
out
or
mov
movsb
add
cmp
mov
pop
push
push
mov
inc
lret
mull
ret
mov
cmp
lods
sbb
lods
add
sub
pop
je
inc
jl
inc
and
pop
mov
sub
out
add
jne
push
push
int3
add
fisubrs
mov
mov
pop
dec
enter
or
sbbb
mov
fstpl
and
pop
jne
add
mov
push
call
in
addr16
dec
mov
push
rcl
xchg
mov
inc
jne
mov
iret
loop
jno
dec
sub
sahf
or
push
shll
mov
cmp
fs
adc
mov
sarb
xor
cmpsb
cltd
dec
xchg
dec
xor
in
movzwl
bound
push
cmpsl
mov
arpl
xchg
and
dec
adc
and
adc
repnz
clc
test
dec
icebp
call
add
sub
jge
mov
inc
cmpl
add
int
xorl
andb
xor
aad
stos
jmp
mov
pop
push
xchg
sub
out
mov
jl
mov
jle
subb
sub
pop
lcall
fiadds
or
pop
leave
es
add
leave
cmp
sarb
nop
push
xchg
cmp
xchg
out
jle
mov
imul
addr16
ror
lods
loop
repnz
lock
popa
xchg
rolb
and
rclb
mov
and
fmuls
jbe
xor
int3
mov
addr16
roll
jbe
push
cmp
push
cmpl
ret
out
jg
jo
push
mov
mov
mov
cmp
in
mov
add
sbb
xchg
adc
rcll
cltd
xor
push
mov
sbbl
int
push
or
mov
fldl
mov
mov
mov
cli
cs
outsl
push
mov
mov
je
inc
jbe
int
pop
outsl
decb
addb
push
test
xchg
mov
jmp
wrmsr
mov
imul
sarl
pop
or
sbb
leave
imul
jo
or
in
jne
mov
sub
mov
insl
into
or
out
int3
cmpb
outsl
push
dec
sbb
aad
cmp
mov
dec
cmp
sti
nop
in
cmpl
dec
arpl
out
dec
add
sub
jge
xor
pushf
movsl
inc
mov
jg
cmp
fadds
pusha
stos
mov
xchg
push
mov
dec
xor
jno
arpl
iret
pop
cmc
inc
repz
dec
push
dec
xor
mov
ljmp
sbb
rclb
ljmp
mov
movsl
jb
dec
rolb
call
adc
aaa
aaa
mov
jne
scas
sbb
insb
mov
sub
inc
in
push
push
adc
arpl
fmull
stos
int
dec
hlt
negl
aam
jb
int3
data16
arpl
cmc
inc
repnz
clc
mov
cmp
add
add
in
push
mov
or
ret
cmp
adc
and
adc
xor
or
repnz
and
inc
fcomip
inc
xor
jp
int
popf
into
dec
xor
and
inc
stos
jmp
and
movsl
pop
inc
aam
lods
xchg
in
loop
fnstcw
add
cmc
cmc
in
adc
xor
loopne
sbb
adc
fadd
jecxz
mov
in
rcrb
ljmp
cmp
or
adc
rorl
out
outsl
adc
cmp
cmp
repz
outsb
jb
in
mov
jb
es
or
fwait
xor
pushf
scas
xchg
xor
inc
or
adc
pushf
aaa
nop
jg
push
sub
outsb
jl
addr16
push
call
loopne
out
stc
mov
repz
decl
call
subl
push
xlat
sub
inc
sbb
add
sub
xor
and
xor
cld
add
loop
push
jae
mov
or
push
ret
hlt
fiaddl
fsubrs
call
xor
es
push
jmp
jmp
xor
movsb
jo
icebp
cs
xor
inc
xchg
and
pop
and
imul
dec
in
sbb
sbb
sub
xor
adc
cld
cmpsb
popf
lods
sub
in
mov
jo
sbb
push
sbbl
push
mov
popa
jmp
push
push
arpl
jp
jns
adc
jecxz
stos
adc
push
cld
test
clc
sbb
lock
fmulp
loopne
out
fdivr
cs
inc
cmc
sahf
push
or
xor
aam
and
movsb
jecxz
xor
cld
decb
dec
push
sbb
jecxz
sbb
lods
push
mov
jecxz
gs
and
jne
enter
jo
insb
les
and
sbb
fsubs
mov
data16
in
fs
andb
test
rcll
out
push
out
addl
mov
aaa
inc
js
cmp
jmp
cmp
mov
pusha
cmp
fs
popa
and
xor
rclb
add
movsl
push
and
push
and
mov
scas
push
movsl
inc
movl
sbb
fldlg2
ljmp
movsb
in
insb
adc
push
aam
stos
mov
xor
outsb
mov
pop
fs
pushl
and
aad
loopne
std
pop
cwtl
pop
mov
sbb
adc
jle
push
lods
leave
aaa
ret
xchg
test
mov
push
add
mov
cmp
dec
movsl
daa
jns
xorl
or
arpl
push
mov
jo
out
test
in
mov
add
jne
mov
lock
rclb
pop
scas
daa
dec
or
lods
push
call
movsl
scas
je
mov
cmp
iret
stc
hlt
mov
lret
aas
xchg
cld
push
jnp
mov
lcall
pushf
sub
sbb
mov
int
lea
sub
test
cmp
or
shrl
les
dec
mov
shll
cmp
jmp
mov
out
jle
mov
cmpsl
add
inc
push
sbb
aaa
ljmp
mov
andb
and
xor
jmp
loop
pushf
xor
add
call
dec
outsb
inc
ja
lods
jecxz
push
xor
xor
leave
cmpsb
jne
sbb
lea
cld
inc
sbb
aam
pushf
jmp
pop
pop
out
jp
pop
cmp
inc
push
mov
aaa
cwtl
shll
ja
shrl
mov
mov
call
or
subw
mov
sbb
cmp
nop
mov
add
and
fstp
pop
les
dec
add
jne
and
lahf
sub
shl
mov
add
xor
pop
lret
mov
lahf
xor
repnz
push
std
imul
shll
or
xor
stos
test
lret
fmuls
cmp
es
pop
push
jle
js
mov
adc
shlb
sbb
gs
cli
inc
jmp
out
test
xchg
push
adc
cmp
mov
fnstsw
dec
xchg
pushl
jp
push
sub
pop
pop
jecxz
mov
pushw
dec
call
pusha
shll
clc
sti
push
push
push
and
in
cmpsl
push
or
cmc
addb
les
xor
cmc
arpl
jle
sub
jle
adc
jmp
xor
sbb
mov
jmp
adc
into
nop
sbb
mov
xor
sahf
cmp
inc
repnz
mov
lock
je
mov
ret
sbb
fwait
inc
and
mov
sub
pushf
adc
and
mov
sub
add
in
sbb
or
sub
test
adc
lea
push
and
insb
add
mov
das
fs
mov
and
sub
dec
pop
dec
dec
shrl
cmp
pop
cmp
repnz
out
xor
pop
push
daa
push
jnp
fcmovnb
mov
adc
popa
sbb
inc
cld
mov
out
js
enter
or
pop
lods
imul
les
push
sahf
shlb
jl
add
insl
push
adc
xlat
push
push
shl
mov
ja
loopne
lods
insb
adc
popa
cwtl
pop
insb
in
jns
or
push
std
sbb
xchg
lcall
je,pn
dec
sub
push
sbb
aam
jae
les
in
dec
or
jb
cs
stos
or
inc
jp
sub
int3
cmp
jle
jne
mov
mov
xor
inc
adc
testl
push
or
and
pop
mov
daa
push
and
js
stc
inc
mov
pop
popf
sub
stc
mov
mov
add
or
xchg
xchg
repz
mov
test
mov
ljmp
push
les
adc
sub
inc
gs
cli
ljmp
push
adc
sbb
fadd
cmp
jb
dec
shll
sub
lock
jbe
pusha
mov
push
dec
lods
ret
cmp
loop
lock
dec
arpl
push
movsb
push
xchg
mov
push
or
stc
je
mov
or
xchg
test
inc
leave
sub
mov
mov
inc
xorl
hlt
add
sbb
xor
daa
adc
xchg
idiv
or
jg
hlt
xchg
out
scas
fdivrl
fs
sub
fsts
aad
icebp
or
add
adc
pop
cmp
in
dec
cs
sub
dec
clc
cmp
arpl
js
adc
je,pt
adc
push
fsubs
inc
push
mov
add
cmp
pop
inc
ljmp
mov
cli
sub
lcall
inc
mov
inc
xchg
add
outsb
xchg
sbb
mov
lahf
in
push
dec
sbb
mov
xlat
loope
mov
ret
push
sbb
inc
adc
sub
push
call
or
lret
fs
and
daa
mov
sub
pop
cmpsb
push
push
movsl
shr
xor
mov
movl
cmpsb
add
or
pop
int3
push
push
cwtl
sub
test
xchg
cli
sub
pop
push
mov
push
pop
addb
daa
xor
or
mov
jl
les
aam
test
jmp
mov
sub
or
pop
test
fsubrl
dec
mov
push
repnz
aad
push
or
xor
jno
jne
rcrl
mov
add
mov
xchg
adc
cmp
cmp
nop
or
or
cmp
xor
les
repnz
bound
fs
andb
mov
sub
cmpsl
xor
mov
sub
nop
sbb
nop
lods
cwtl
xor
adc
mov
nop
cmpsb
sbb
idivl
adcb
pusha
loopne
inc
xor
rol
jno
stos
lea
and
in
outsb
push
pop
mov
sub
push
cmp
mulb
aaa
scas
loop
int3
mov
adc
sub
mov
xor
popf
lret
lds
sub
add
and
and
arpl
inc
ret
into
out
jmp
push
xchg
dec
mov
test
insb
or
mov
mov
and
cmp
bound
aad
mov
clc
sub
mov
push
mov
cwtl
cmp
fiaddl
leave
int
sbb
push
push
sub
pop
adc
enter
adc
inc
and
enter
sarl
push
call
shld
jb
cmp
inc
leave
jp
popa
in
push
push
lods
jl
push
stos
lret
in
mov
repz
add
push
inc
dec
fcmovu
and
mov
sbb
call
jns
movsb
xor
sub
les
add
push
mov
orl
sbb
pop
jl
ljmp
int3
mov
lock
in
mov
and
das
aas
xchg
mov
aaa
sbb
into
xor
rolb
fsubs
push
mov
sub
lock
mov
fnstcw
add
sbb
rorb
mov
mov
cmp
loopne
dec
mov
in
fisubrs
xchg
sbb
pop
icebp
xor
dec
inc
mov
push
ret
adc
mov
iret
cmp
in
and
mov
jmp
inc
add
mov
or
and
out
mov
aad
add
or
sarb
xchg
add
sbb
repz
cmp
push
mov
mov
and
cwtl
pop
xor
out
call
js
pushl
clc
xchg
repz
neg
sub
push
jg
call
dec
pop
adc
sbb
push
push
push
xchg
data16
cmpsl
insl
stos
sti
test
dec
mov
lock
xchg
hlt
cld
aaa
mov
push
pop
mov
mov
sbb
bound
pop
sbb
push
jbe
push
aad
cmpsl
sbb
cmpb
jle
jo
test
arpl
inc
int3
aad
xchg
les
adc
fsubrs
jb
mov
daa
repnz
mov
int
xchg
aam
idivl
mov
js
push
leave
shlb
cmp
addr16
cs
adc
inc
dec
ljmp
push
push
cld
pop
push
pop
inc
or
xor
adc
adc
pop
sub
push
test
and
out
add
or
mov
xchg
repnz
gs
jmp
dec
push
jmp
mov
stos
ss
cld
in
icebp
push
inc
adc
and
xor
jnp
xchg
mov
xlat
mov
adc
mov
mov
jge
leave
movsl
movsb
jne
in
loop
movsbl
fadds
cltd
push
sbb
mov
push
jp
mov
imul
ja
daa
push
je
fdiv
add
xor
das
scas
dec
les
sbb
jo
insb
imul
je
aas
ret
cmp
adc
dec
jg
dec
push
cmp
add
je
push
test
ljmp
mov
cwtl
fwait
test
ret
mov
movsl
stos
mov
movsl
mov
ss
sub
jne
in
adc
sahf
mov
add
xchg
sbb
dec
addl
leave
xor
sbb
insb
xor
in
adc
jne
aas
call
test
pop
mov
jb
nop
enter
cmp
or
or
outsl
aaa
and
insb
mov
pushf
lock
jbe
mov
pop
in
out
imul
pop
add
push
xor
add
imul
int3
xor
cmc
lds
jae
mov
into
mov
push
mov
and
fsubr
cmp
push
test
jb
xor
cmpsl
test
jge
or
test
aad
mov
ljmp
std
out
mov
or
insb
add
inc
daa
ret
negb
mov
push
je
mov
lret
jnp
or
hlt
jg
mov
sub
hlt
xchg
fidivl
in
jle
rorb
jmp
cmp
cmpsb
lret
addl
in
or
jae
test
in
xor
dec
es
and
push
or
inc
xchg
mov
in
add
fs
inc
stos
shll
loope
sub
push
lds
or
shlb
mov
roll
fstps
sub
push
sarl
into
or
inc
mov
push
dec
add
nop
call
mov
pop
inc
loopne
mov
clc
lds
jno
or
jecxz
pop
add
mov
scas
or
jle
lret
mov
jb
jp
std
or
test
in
out
add
outsb
adc
mov
sub
sbb
mov
fdivs
mov
push
pop
in
dec
dec
add
xchg
push
aam
add
cs
sbb
mov
push
cmpsb
xchg
frstor
mov
pop
gs
insb
push
cmp
push
mov
push
dec
mov
popf
loopne
mov
std
xor
mov
jo
xbegin
dec
mov
xchg
insl
jae
iret
mov
nop
mov
pop
cmp
inc
push
mov
mov
rcrl
ja
mov
push
icebp
inc
sub
adc
pusha
cmp
jnp
jnp
mov
jp
mov
je
push
daa
add
outsl
push
loop
dec
and
rcrb
or
into
xor
bswap
push
jbe
das
inc
jo
dec
cld
les
fcomps
lret
inc
ret
push
cltd
push
xchg
mov
adc
and
js
and
mov
jge
adc
lock
push
cmpsb
ss
mov
call
push
sbb
cmp
mov
fs
inc
rorb
inc
imul
aam
int
lea
inc
sbb
push
mov
xor
push
cs
movsl
repnz
in
adc
subl
sbb
push
mov
rol
inc
lock
inc
mov
pop
repz
mov
mov
dec
iret
js
imul
push
push
int
ss
pusha
test
pusha
mov
fcompl
sub
jecxz
mov
or
sbb
sub
xor
mov
cmp
cmp
dec
je
por
jae
pop
mov
out
gs
leave
popa
lods
xorb
dec
test
pop
dec
loope
imull
sub
push
jl
push
push
jb
sbb
aam
mov
jne
out
adc
divl
pop
xchg
jge
cltd
sbb
sbb
lock
jg
sbb
roll
or
add
rcrb
leave
loop
rclb
lods
ljmp
jo
adc
out
push
mov
mov
std
add
pop
mov
ss
add
int
or
fnstsw
cs
mov
loope
cltd
lds
pop
into
jo
push
sub
cmpsb
lods
mov
adc
fistpll
pop
push
or
das
insl
push
pusha
lds
sub
and
and
out
sbb
add
pop
sbb
jmp
and
or
cmp
inc
or
je
je
test
sub
and
rorl
fstps
arpl
out
jne
mov
sbb
pop
arpl
and
call
mov
sbb
inc
inc
std
xor
and
push
xor
in
push
inc
call
inc
xor
js
lea
jns
lods
pop
leave
gs
clc
mov
or
cmpsb
jge
sub
aaa
lea
fistps
repnz
cmc
dec
testl
jb
das
dec
adc
sbb
dec
scas
push
mov
cld
push
xor
xchg
xchg
scas
rcll
ret
out
jg
rclw
fimull
add
rcrb
sub
mov
sarb
add
mov
add
orb
or
dec
adc
frstor
negb
jecxz
call
and
shlb
ficomps
inc
pop
dec
and
push
les
jne
xchg
add
in
cmpl
nop
icebp
orb
rcll
xchg
pop
adc
mov
sarb
push
in
jmp
xor
fs
mov
addr16
cmp
and
fdivs
imul
std
je
test
sub
dec
or
test
flds
xor
jb
add
es
sbb
xchg
mov
sbb
dec
mov
test
dec
scas
pop
push
pop
das
or
inc
jmp
in
cld
js
adc
dec
inc
push
sub
push
das
insl
repnz
or
sbb
je
xchg
sub
add
pop
pusha
mov
sub
aad
imulb
outsl
rcrb
pusha
aas
adc
insl
lret
fstps
call
mov
add
nop
insl
mov
adc
adc
push
ljmp
xor
imul
xchg
pop
inc
fcoml
pop
mov
sub
inc
sbb
loope
push
mov
mov
setne
mov
pop
dec
inc
add
mov
pushf
adc
inc
in
pop
xor
sub
sbbb
shrl
push
inc
nop
iret
lods
scas
jnp
xor
addr16
push
mov
adc
cltd
and
sar
mov
popf
xchg
das
push
out
xchg
fs
outsb
adc
cmc
ds
divl
cmp
stos
add
xor
test
ja
clc
dec
push
cmpsl
mov
lds
mov
sub
or
adc
movsl
das
add
jle
pop
and
test
loope
adc
xchg
sub
ficoms
cmpsl
add
xor
sbb
cs
cs
mov
inc
mov
push
and
jmp
outsb
push
add
loop
in
sub
ret
mov
cmp
pop
xchg
in
jno
loope
mov
icebp
dec
rcr
mov
adc
movsl
leave
mov
xchg
scas
int
jo
xchg
loopne
mov
adc
hlt
insb
cltd
leave
cs
leave
fs
mov
mov
dec
lret
jle
leave
mov
push
rorl
dec
mov
aaa
jnp
test
push
shll
mov
or
data16
insl
cmpsb
pop
popf
enter
lret
es
sahf
test
in
lods
and
out
pop
push
pop
jg
sub
into
clc
cmpl
movsl
stc
jg
push
mov
or
sub
adc
xchg
adc
sbb
sbb
pop
jb
add
or
sbb
mov
sbb
repnz
adc
out
mov
sti
daa
push
xchg
add
push
sub
std
jecxz
jns
lea
data16
xchg
push
mov
push
add
xor
in
sbb
push
sub
xchg
aaa
mov
mov
cmp
push
jmp
cmpsb
insb
mov
daa
mov
popa
push
push
cmp
sub
lods
imul
push
fwait
mov
movsb
push
sbb
sub
inc
and
sbb
dec
jp
sub
fucom
sub
mov
cltd
sub
popa
cmpsb
in
clc
insb
lret
dec
testl
cwtl
or
imulb
cltd
adc
mov
test
lods
sub
push
dec
in
inc
sub
rcpps
stos
gs
jmp
mov
add
adc
mov
jb
jbe
xor
pop
add
jae
push
rorl
rolb
adc
push
adc
and
lahf
inc
fcompl
jl
adc
call
cmp
test
lahf
add
xchg
std
adc
push
call
aad
push
mov
fidivrs
jge
lds
outsb
rolb
xchg
jp
into
dec
mov
fstl
jle
push
or
push
jo
inc
adc
adc
jae
rol
sahf
popf
dec
add
std
cli
adc
dec
fsubl
add
cmp
enter
xor
lahf
push
addl
movsb
sbb
enter
ret
ss
or
push
and
je
xchg
negb
mov
jbe
add
stc
jne
sub
and
ret
or
mov
inc
cwtl
push
adc
jb
call
iret
push
pop
push
cs
popa
pop
xor
daa
clc
sbb
imul
movsl
lcall
in
push
jno
xor
add
and
cwtl
scas
mov
inc
add
shlb
es
je
fbstp
js
shlb
pop
lods
out
lea
dec
iret
out
shr
adc
in
sti
out
jnp
sub
cmp
dec
mov
sar
push
out
shr
popf
mov
jns
adc
cmp
dec
imul
adc
push
loopne
int3
xor
xor
mov
cmpsb
jno
add
notb
push
dec
mov
loope
or
cmp
fwait
cmp
mov
fs
push
inc
jmp
mov
mov
push
lock
push
sbb
push
or
mov
imulb
pop
cltd
mov
add
jns
pusha
subl
pop
outsb
and
jl
pop
jge
movsl
loopne
jno
js
mov
movsl
pop
cmp
loopne
out
imul
mov
jg
mov
mov
mov
or
pop
leave
add
xchg
es
push
pop
cmp
mov
push
dec
and
cld
lahf
mov
popf
pop
inc
imul
std
shrl
add
mov
push
inc
rclb
inc
adc
or
xchg
je
xor
xor
sar
jl
gs
adc
cltd
pop
mov
jo
mov
adc
in
jno
mov
sub
add
inc
jg
jp
or
push
rcpps
call
orl
push
loope
cmp
rorl
mov
hlt
daa
roll
cmp
add
mov
sbb
mov
xor
xor
fucomp
sbb
mov
and
xchg
jecxz
roll
loopne
movsl
jne
decb
mov
addl
in
xor
jnp
jle
aad
ret
add
xor
mov
test
mov
xor
mov
hlt
loop
insb
sbb
je
loopne
pop
outsb
icebp
and
adc
or
xchg
add
and
sub
or
enter
pop
inc
int3
sbb
pop
mov
mov
pop
pop
ss
jl
mov
dec
jmp
mov
sbb
daa
add
xchg
es
mov
ljmp
add
jp
inc
xchg
jb
jp
mov
mov
stc
je
push
mov
jl
pop
rcll
scas
push
aam
push
mov
pusha
dec
insb
cmp
xor
add
xor
in
dec
mov
clc
iret
roll
in
xor
pop
sbb
es
cmpsl
sbb
push
pop
dec
popa
shll
mov
xorl
sbb
mov
loope
int
pop
jmp
inc
cmpsb
or
call
push
loop
pop
das
les
push
outsb
jmp
xchg
xor
mov
add
aad
adc
adc
es
sbb
shl
mov
ds
jbe
mov
gs
lea
icebp
popa
lret
pop
add
sbb
push
push
mov
push
into
mov
sub
and
jne
cmp
or
insl
cmp
push
jge
js
insl
ss
or
stos
push
mov
sub
push
and
scas
sub
mov
std
pop
push
pusha
mov
pop
jmp
mov
sub
jmp
sbb
push
adc
adcb
std
sub
dec
das
jne
mov
aad
mov
jecxz
std
or
jge,pn
jno
inc
adc
mov
shlb
jnp
or
test
in
xchg
fisubrl
fisttps
xorl
je
mov
or
xor
mov
shlb
rcrb
xor
shll
imul
inc
xor
es
iret
hlt
push
jle
fdivr
fs
dec
push
lock
imul
mov
or
push
js
or
sub
xor
adc
mov
sbb
lock
addr16
xor
push
loop
adc
sbb
sub
pop
sete
pop
xchg
leave
add
sbb
js
insb
or
inc
jne
mov
push
sub
cltd
call
push
cmp
pop
dec
fs
fucomp
dec
fwait
adc
das
std
repz
adc
adc
aam
rolb
push
test
jmp
adc
pop
enter
or
sti
in
inc
sub
cmp
push
pop
or
sub
pusha
std
add
inc
fdivrp
cmp
shl
adc
pop
loop
dec
xchg
adc
jle
sbb
xchg
in
sub
pop
dec
xor
hlt
aaa
scas
mov
jp
inc
or
pop
mov
in
adc
call
xchg
xchg
shrb
cs
cmc
jmp
fldcw
pusha
sub
psllw
popa
scas
push
mov
pop
pop
repnz
arpl
jo
or
mov
das
mov
push
loopne
int
xchg
inc
and
stos
xor
push
and
out
push
xchg
fs
push
imul
inc
and
xchg
popa
ret
xlat
adc
mov
cmpsb
jbe
aad
lahf
mov
jge
inc
mov
sub
or
shr
xor
in
xchg
or
sub
cmpb
fmuls
jmp
adc
aaa
cmp
call
mov
es
aad
xor
or
jnp
hlt
mov
scas
mov
movb
std
ss
fbld
outsb
out
or
mull
lock
and
test
nop
pop
mov
imul
adc
add
and
cwtl
lds
and
out
mov
or
inc
in
lea
pop
inc
mov
jge
cmpsl
and
incl
and
aaa
mov
inc
pop
mov
push
adc
repz
dec
sub
add
xor
mov
cmc
in
mov
add
mov
fisubrs
push
in
mov
sub
clc
adc
mov
imul
and
iret
xorl
sbb
add
enter
cmp
xlat
lcall
rcrl
sbbl
push
call
fs
jle
cld
inc
mov
xchg
pusha
pop
adc
push
cltd
arpl
xchg
cmp
aad
add
mov
jno
pop
stc
push
ret
lods
dec
leave
jnp
std
scas
leave
xor
lea
in
cmpsb
mov
or
ljmp
loop
or
cltd
rorb
push
repz
loop
adc
out
and
in
jecxz
std
aam
mov
test
arpl
int3
std
sub
dec
push
push
adc
and
sbb
push
push
xor
mov
movl
xchg
cwtl
cmpsb
nop
shr
and
les
inc
xchg
and
loope
adc
aad
std
daa
fucomi
scas
test
xchg
xlat
dec
mov
jbe
mov
jae
bswap
dec
dec
push
sub
adc
in
int
cmp
jl
add
lret
xchg
xor
call
jmp
xor
adc
sub
or
loop
add
lods
arpl
xlat
sub
cmp
cmp
addr16
inc
cmp
push
jo
ret
adc
call
or
jecxz
push
fisubrs
fs
push
mov
sub
popa
idivb
add
pop
xor
test
jbe
insb
push
jnp
dec
repnz
pop
cmc
imul
push
stos
add
adc
adc
mov
mov
adcl
push
loopne
dec
sbb
sbb
sub
jmp
mov
xchg
push
push
jp
js
orb
loop
pop
imul
jno
sub
fs
mov
pop
fdivrs
fs
or
xchg
mov
mov
xlat
or
repz
push
cmp
rclb
int3
push
sbb
sub
add
ret
imul
dec
addr16
rcll
mov
jecxz
sub
dec
push
jle
arpl
xor
iret
sbb
jne
std
dec
and
adc
mov
mov
pop
mov
and
jge
leave
inc
jg
mov
fsts
and
cmc
push
sub
xor
push
arpl
and
mov
jecxz
movsl
mov
jle
sub
sub
loop
inc
insb
stc
aam
cltd
ljmp
inc
sub
mov
sub
call
rclb
dec
ret
xor
jne
push
push
sti
sbb
fs
lret
shlb
sahf
sbb
mov
test
sbb
pop
xchg
imul
div
mov
shr
sub
mov
sbb
imul
xchg
adc
je
and
int
push
movsl
jle
test
orl
int3
and
or
mov
out
mov
lahf
aas
push
dec
es
inc
mov
scas
mov
out
out
jmp
push
clc
add
dec
or
subl
divps
inc
adc
outsl
push
aam
lock
imul
sbb
jmp
call
mov
sub
or
fstl
pop
leave
inc
out
sub
adc
jle
lods
sbb
adc
fninit
sub
jo
xor
sbb
testb
sub
jns
movsb
adcl
add
cmp
subl
push
mov
insb
mov
hlt
js
shr
pop
mov
and
inc
aam
icebp
xor
mov
adc
and
lret
cs
xchg
pusha
daa
lahf
inc
in
pusha
adc
lea
lret
out
or
fnstenv
or
call
lods
fs
fs
jo
sub
subb
in
addl
cmp
push
lret
insb
jl
jbe
mov
pop
sub
jo
add
lea
test
mov
add
inc
cs
adc
xchg
cmp
mov
cmp
ljmp
pop
sub
jae
sbb
xchg
test
push
inc
xchg
fidivrl
sbb
mov
js
xlat
fwait
push
xor
dec
jnp
mov
xor
fidivl
sub
test
call
sbbl
sub
enter
pop
ror
notl
and
or
or
mov
cmc
movsb
ret
in
clc
mov
push
dec
outsl
neg
cld
enter
in
loop
add
in
push
mov
push
mov
mov
xor
ss
xchg
stc
jecxz
or
push
pusha
lods
mov
inc
push
loopne
inc
divb
push
ljmp
cmpsb
fwait
mov
test
out
rcll
push
ja
push
sbb
pop
pop
mov
test
adc
into
xchg
in
insl
call
jl
jecxz
pop
loopne
int3
xchg
imull
test
cmp
dec
push
lock
xorb
scas
push
stos
divb
push
sahf
mov
outsb
sahf
hlt
cmpsl
mov
push
adc
push
or
xchg
inc
mov
or
rcll
adc
sarl
in
sbb
inc
add
sub
jne
xchg
out
shlb
adc
and
icebp
shlb
push
mov
lcall
bound
mov
rorl
arpl
mov
jl
sti
xchg
das
pop
sbb
pusha
repz
mov
aaa
or
ret
add
fwait
mov
and
stc
stos
sbb
inc
jns
and
addl
or
mov
mov
iret
inc
xor
rcl
xchg
cmpsl
inc
pop
sbb
dec
or
jb
push
jo
push
push
les
ljmp
dec
sub
mov
icebp
push
add
iret
shll
rclb
sbb
insl
rolb
ret
leave
cmpsl
adc
call
pusha
cmc
arpl
jno
sub
in
test
add
xchg
jmp
cmp
and
xor
lods
adc
jmp
fwait
sub
or
int
push
out
lods
push
icebp
mov
lret
sar
dec
or
pop
outsl
and
fcompl
fsubrs
or
pop
lcall
add
mov
adc
mov
xor
ret
out
or
jnp
push
push
xor
and
jne
cli
daa
or
jo
mov
jmp
or
int3
out
jbe
popa
subl
stos
sub
and
xor
cmp
adc
or
call
sarl
mov
ss
jge
cwtl
push
jae
in
rolb
xor
push
jg
cmpsl
loopne
repnz
add
push
sub
mov
lahf
add
jne
shr
fcomps
cmp
enter
jmp
mov
jge
test
push
sub
push
lods
orb
sbb
inc
dec
pusha
mov
fabs
das
nop
or
lcall
imul
call
and
sbb
mov
push
jbe
lods
jg
xor
mov
and
inc
sub
enter
xor
jns
mov
xor
and
mov
rorb
adc
jbe
andl
adc
push
lahf
and
mov
test
jb
enter
enter
xchg
inc
inc
fs
push
sub
stos
push
adc
mov
out
loop
mov
cmpsb
and
jb
xchg
mov
pop
inc
movsl
adc
push
hlt
loop
add
sbb
loope
dec
sub
inc
mov
sub
xchg
push
sbb
inc
cmp
xor
pop
push
adc
test
in
push
cmpsl
mov
jge
aam
xor
outsl
or
or
sbb
mov
sub
mov
or
mov
cltd
jle
pop
insb
jb
cmp
sbb
push
jno
hlt
cltd
in
xor
xchg
mov
push
enter
push
add
and
pop
dec
or
jbe
and
pushf
js
addr16
or
mov
adc
stos
or
cmc
xor
and
jb
xchg
out
sbb
out
sub
jae
xchg
and
aaa
push
add
sbb
xchg
fs
and
add
mov
repnz
jo
nop
xor
xor
xor
xor
adc
xor
inc
int
inc
lea
stos
adc
aam
pop
mov
dec
xor
int3
or
rorb
xor
loop
inc
adc
das
repnz
jge
enter
stc
in
mov
shr
adc
xor
mov
sbb
and
dec
std
lods
dec
test
rcll
stc
inc
leave
pop
push
xlat
inc
cmovae
mov
fnstcw
add
push
xor
cs
mov
sub
add
xor
cmpb
push
sbb
push
mov
lahf
test
cli
rol
mov
adc
hlt
sub
loopne
mov
adc
dec
dec
pop
jp
jmp
mov
imul
adc
fs
test
out
andb
xchg
push
fs
mov
push
shlb
and
bound
imul
push
cs
sub
adc
ss
adc
fidivrl
and
adc
lret
push
cmpsb
jae
repnz
fnstsw
pop
push
in
cmp
jnp
push
xchg
adc
fwait
jge
sti
push
fwait
inc
jle
xchg
mov
jnp
inc
nop
sahf
inc
ja
lock
bound
inc
outsb
jle
push
jo
dec
outsl
mov
mov
inc
add
mov
lcall
out
and
je
hlt
ja
sbb
das
jmp
popa
mov
pushf
je
lea
xchg
xlat
cmpsb
sub
lds
and
xchg
mov
popa
fs
inc
xor
xchg
push
or
cmpsl
cmovge
adc
int3
fcompl
jbe
insl
addr16
sub
fmull
push
xchg
pop
push
cmp
push
repz
dec
ss
cmpsb
cs
pop
jge
insl
bound
pop
inc
xchg
scas
dec
fildl
mov
ja
je
mov
mov
push
inc
aad
test
jb
sbb
pop
jo
pop
push
ss
rcl
ss
in
pop
xorb
jb
push
inc
jbe
in
leave
shrl
sub
jle
add
xor
rorl
loop
jae
jmp
shr
or
mov
sub
ss
pusha
movsb
cmp
mov
jae
dec
scas
jbe
dec
stos
push
imul
lea
in
addr16
mov
or
adc
test
or
xor
or
or
add
das
mov
lcall
fcomi
adc
in
ja
sub
jmp
add
sub
or
cmpsb
aam
outsl
mov
shrb
inc
add
fiaddl
add
sbb
lahf
mov
in
daa
imul
pusha
xor
call
vcvtdq2pd
in
pop
xchg
loop
or
xchg
mov
adc
int3
jmp
pop
insb
fldcw
xor
lahf
pop
lcall
push
xchg
push
es
insl
in
shll
push
sbbb
sbb
js
imul
inc
mov
jb
push
out
adc
and
test
jnp
out
iret
stos
mov
and
jns
in
data16
and
jae
mov
scas
jle
push
clc
sahf
pop
ja
pop
pop
pop
push
dec
call
lods
aaa
outsl
xchg
fmuls
or
sbb
shll
or
xchg
out
cs
or
push
inc
je
es
jle
cmpsb
sbb
repz
je
add
push
inc
and
fsubs
bound
test
insb
xchg
out
leave
or
call
jb
scas
mov
stc
cs
push
fwait
and
filds
adc
mov
adcl
lea
inc
push
mov
mov
inc
sub
int
pusha
aad
popa
dec
mov
jns
popa
nop
pop
dec
incb
and
imul
out
cli
sbb
insb
cmovp
fildl
pop
cmp
xor
nop
and
sbbb
mov
shlb
mov
or
xor
aam
dec
pop
pop
sbb
out
or
dec
mov
add
cs
or
xor
xorl
bound
sbb
subb
aam
loopne
js
add
inc
daa
movsl
or
jbe
inc
scas
imul
mov
adcb
mov
test
push
lods
out
dec
cmp
jae
and
inc
push
mov
push
test
adc
int
mov
jle
pushf
jle
nop
sbb
sub
stc
jno
inc
jo,pt
shll
pushf
gs
inc
dec
lds
int3
inc
adc
cs
mull
popf
adc
loope
aam
icebp
and
fs
ja
pop
testl
out
sbb
xchg
cmc
cltd
sub
jmp
inc
push
mov
push
mov
cwtl
in
mov
test
or
test
dec
ret
dec
push
js
out
scas
sahf
inc
mov
cmp
inc
add
lds
fsubs
jae
sub
fnstcw
push
inc
mov
inc
inc
mov
call
cmpsb
sbb
inc
push
sbb
cmovs
adc
aas
pop
jb
js
adc
in
out
gs
fadd
and
dec
ja
sub
fs
imul
adc
inc
ret
inc
push
js
mov
push
je
push
inc
imul
pop
adc
ja
dec
push
and
es
xchg
fnstcw
mov
insb
cmp
jns
adc
dec
sbb
mov
data16
mov
fwait
lret
and
mov
addr16
xor
stos
mov
xchg
dec
lahf
cltd
xchg
push
pop
mov
xor
data16
pop
test
dec
mov
adc
inc
test
push
dec
mov
fs
cmp
arpl
clc
xor
int3
ja
jl
insb
lea
mov
in
mov
inc
dec
cmp
inc
mov
in
mov
cmp
ja
cltd
xor
adc
xor
lock
pop
push
jl
and
push
mov
jae
push
xor
inc
inc
push
sbb
xchg
fcomip
cmp
and
push
pushf
ja
and
mov
xchg
in
rcll
loope
mov
xor
lret
outsb
xchg
cmp
cmp
insb
in
movsl
fimuls
push
jae
sub
mov
cltd
adc
jns
xchg
pop
jbe
inc
pop
xor
mov
jmp
or
and
std
rolb
jmp
add
add
cmp
or
fbld
sbb
xor
ss
out
jmp
hlt
xor
xorb
xchg
popa
les
jmp
inc
rclb
xchg
fidivl
leave
push
das
sarl
and
cmp
adc
movsb
mov
push
mov
mov
sub
mov
jl
cld
xchg
rcll
jmp
popa
sbbb
mov
dec
jae
cli
xchg
arpl
jno
sbb
sub
add
mov
mov
xchg
push
jo
xchg
pop
push
inc
cmp
push
nop
fdivs
mov
jo
sub
push
sub
xor
outsl
test
aaa
out
mov
pop
fsts
icebp
out
in
aad
push
cmp
je
push
addr16
sub
nop
ds
sbb
cld
inc
imul
nop
or
mov
cmp
jo
ret
loop
pop
xchg
daa
sub
dec
into
mov
enter
pop
daa
pop
xchg
imul
inc
dec
in
add
or
pop
xchg
andl
orl
aam
push
gs
add
addr16
mov
push
popa
jg
push
data16
das
sub
xlat
add
or
xor
rcrl
mov
orb
mov
or
imul
xor
jecxz
xor
int3
adc
jb
sbbl
icebp
int
mov
jne
pop
push
imul
pushf
inc
jp
inc
outsl
fwait
xchg
dec
popa
cmp
loopne
jo
inc
add
movsl
pop
mov
stos
testb
jae
inc
lds
push
add
andl
data16
sub
dec
or
or
lods
mov
test
pop
and
jo
adc
sub
mov
popa
and
inc
or
and
popf
sbb
or
sub
sub
mov
adc
xchg
dec
push
mov
adc
aaa
dec
add
rcrl
cmp
mov
cmp
jno
mov
dec
rcll
xor
jecxz
jge
nop
add
adc
int3
aam
xchg
adc
add
xlat
negl
inc
in
jns
je
xor
loop
push
jo
jae
ja
ss
fnsave
dec
cmpsb
loope
pop
jne
in
pop
inc
mov
inc
push
sub
iret
dec
stos
push
inc
fdivl
xor
loopne
rorb
outsl
mov
jns
mov
push
mul
js
push
xor
mov
loop
scas
mov
sub
lods
dec
sar
in
fs
jne
xlat
and
push
xchg
mov
mov
push
in
lret
jns
shl
xchg
mov
test
cmp
dec
mov
sub
jns
push
xchg
imul
jp
mov
inc
mov
pop
lcall
jmp
push
fdivs
cmp
jge
es
sti
jae
add
jns
mov
push
stc
cmp
sub
push
bound
gs
mov
out
pop
call
cmp
push
mov
dec
ret
outsl
jecxz
cmp
jb
sbb
lret
jl
out
popf
or
inc
bound
add
iret
jb
into
xchg
dec
adc
push
pop
xorb
push
popa
sbb
inc
xchg
int
cmp
sbb
and
or
push
lahf
loop
std
mov
stc
sub
cs
push
mov
imul
fwait
pop
movsb
adc
ja
or
jne
hlt
data16
sbb
cltd
cmpsl
sub
stc
pop
cmpsl
in
mov
sbb
jmp
xor
ret
inc
push
sbb
lock
loopne
sarb
sub
les
lock
icebp
mov
subl
imul
out
sbb
dec
push
lds
add
subl
push
outsb
imul
and
imul
int3
dec
ja
sbb
aaa
bound
or
mov
sbb
sub
push
popa
push
mov
xchg
mov
cmp
xchg
testl
outsb
call
aad
cmp
mov
sbb
pushl
inc
imul
inc
and
fwait
rcll
sub
inc
leave
add
das
pop
sub
jb
dec
rcll
insl
insb
bound
xor
lahf
insl
call
or
popa
into
outsl
pop
fimuls
test
das
xor
inc
adc
inc
ja
cld
sbb
cmpsb
enter
inc
push
call
jecxz
or
pop
test
outsl
insl
pusha
jg
dec
movsl
xchg
inc
mov
loop
inc
stos
and
jnp
sub
xchg
lds
lret
cmp
inc
in
adc
stos
iret
inc
cmovb
lahf
addr16
sub
push
cmp
push
cmc
push
adc
lahf
fildll
mov
rcrb
mov
adc
sbb
fs
pop
daa
scas
shld
sub
insb
test
pop
test
addr16
ja
adc
pop
xchg
mov
dec
out
out
sarl
out
push
cmc
pop
and
es
jle
fimuls
adc
sub
scas
pop
inc
dec
cmpsb
and
cmp
icebp
fsub
lretw
cmp
xchg
xchg
sub
dec
and
mov
pop
cmpb
cmpsl
roll
insl
pop
in
add
and
xor
cltd
jl
adc
dec
and
mov
jo
push
push
sbb
das
add
aas
mov
js
inc
or
xor
icebp
inc
sub
mov
orl
mov
sub
sub
and
xchg
dec
jae
lretw
leave
inc
insl
fmuls
adc
mov
fstps
loopne
jge
sub
mov
or
lea
movsl
cmp
pop
sub
test
sarl
idivb
xchg
outsl
inc
dec
or
jle
push
mov
cmp
add
popa
je
rcrl
fmuls
ret
ds
push
xchg
mov
and
jbe
std
rcrb
das
dec
xchg
xor
fisttpl
add
push
cmp
cmp
inc
sub
lret
loope
xor
sub
or
sti
mov
sub
sbb
push
adc
inc
push
ficomps
inc
push
mov
and
mov
xor
sbbb
in
sub
gs
out
out
jp
adc
jl
fs
mov
enter
adc
jle
in
test
jle
dec
cld
push
outsw
sbb
push
adc
adcb
xor
dec
adc
repz
sub
shlb
xchg
cltd
mov
lcall
jecxz
cmpsl
out
jle
dec
push
sub
cwtl
outsl
data16
hlt
adc
cmpsl
test
sbb
jns
jae
jb
push
rcrl
inc
push
jl
sbb
dec
in
mov
jae
cli
cwtl
shlb
adc
mov
push
lods
dec
int3
lret
imul
movsl
push
jo
mov
mov
jle
push
ds
mov
jne
int3
or
dec
cmp
jb
push
pop
xor
inc
jle
jmp
and
and
mov
dec
jne
imul
outsl
mov
push
fists
and
add
lahf
cmpsb
adc
push
dec
jmp
mov
test
mov
and
xor
xor
or
dec
ljmp
push
lea
inc
jge
jmp
stos
nop
dec
push
cmp
mov
icebp
cmp
iret
lea
sub
or
jecxz
sbb
jae
jp
ljmp
inc
jae
test
test
push
idivb
enter
jmp
and
mov
aam
int
add
popf
mov
cltd
push
lcall
sub
push
mov
or
sub
mov
pop
mov
pop
dec
push
hlt
dec
or
jne
call
out
adc
push
push
jle
arpl
jp
and
or
mov
outsl
repz
mov
mov
popa
mov
je
dec
orl
jno
dec
dec
insl
inc
sub
test
out
jbe
fsubs
add
mov
sahf
push
fldcw
icebp
inc
pushf
push
outsl
popf
insl
jbe
std
jns
popa
psubw
pop
mov
pop
push
xlat
push
mov
dec
addb
fadds
jb
xor
insb
xchg
pusha
push
mov
jae
sbb
aad
repz
pushf
ret
adc
scas
jg
or
add
scas
jnp
jae
out
xchg
sbb
out
pop
xchg
pushf
jecxz
add
pusha
ja
add
and
push
movsl
push
icebp
pop
jp
lds
leave
dec
out
sbb
inc
jno
xor
and
fs
jb
xchg
hlt
inc
mov
xor
mov
call
arpl
mov
or
shrl
imul
adc
mov
mov
lock
sahf
jae
out
imul
pop
dec
pusha
sub
inc
jns
data16
sbb
cli
sub
push
fsubrs
lret
jb
jp
sbb
enter
sbb
outsl
js
inc
pop
xor
sub
mov
push
mov
loop
ja
sub
in
call
or
inc
inc
adc
mov
mov
xor
es
lcall
lods
adc
jns
sbb
mov
gs
sbb
dec
in
sbb
ret
mov
mov
arpl
push
cs
sbb
shll
sbb
mov
js
pop
pop
scas
bound
mov
push
insb
ret
sub
sbb
push
inc
dec
mov
mov
jno
dec
fdivl
and
mov
mov
pushf
xchg
adc
call
cmp
jne
push
std
movsb
test
mov
insb
jne
dec
push
aam
and
add
mov
int
jecxz
pop
dec
divb
sbb
scas
push
mov
xor
add
push
add
pop
pushl
jb
shlb
cmc
mov
sbb
inc
xchg
jb
lahf
rorb
loope
fs
xchg
pop
mov
mov
imulb
rclb
mov
push
lods
popf
xor
mov
repnz
bound
dec
imul
test
cmp
xor
cmp
cmp
push
push
and
push
test
packsswb
adc
add
or
jnp
nop
cli
xchg
mov
sti
sub
sub
lret
sbb
insb
sub
ret
and
mov
sbb
scas
lods
or
mov
pop
jo
or
aam
mov
imul
lret
icebp
fstpl
xlat
push
sub
add
ljmp
mov
gs
mov
sbb
cld
push
pop
mov
cmp
jp
bound
inc
cwtl
repz
mov
jnp
inc
jle
cmp
xchg
add
imul
xchg
jo
xchg
cwtl
in
lcall
cmp
cmpsb
inc
xchg
add
dec
xchg
mov
push
mov
mov
pop
xchg
ret
repnz
das
icebp
int3
int
cmc
rolb
xor
rcl
xor
xlat
fsub
jecxz
fstpt
out
filds
fsubp
out
rolb
jmp
or
lock
repz
adc
idiv
in
cli
sti
sbb
jmp
ds
or
xor
idivl
adc
sub
sbb
and
sbb
daa
push
pop
lds
and
push
and
sub
adc
adc
mov
filds
add
add
mov
stos
jle
inc
lods
xor
xchg
daa
sub
inc
and
cmp
pop
popa
hlt
dec
fs
inc
jmp
frstor
mov
sahf
jne
inc
xchg
mov
mov
xor
fnstenv
test
mov
push
adc
jns
pop
jp
mov
and
leave
in
adc
adc
and
cmp
pop
shll
add
leave
xor
repnz
sbb
sub
in
pushf
mov
cmp
jmp
in
mov
push
leave
and
daa
jle
cmp
cmp
and
aaa
push
leave
pop
xorb
jl
lret
movsl
in
inc
cmp
test
repz
and
ljmp
cmp
or
ljmp
and
cmp
push
xchg
add
ret
test
sub
mov
mov
test
mov
add
sbb
sar
dec
mov
icebp
push
push
adc
shrl
in
imul
sarl
addb
xchg
jp
es
add
add
stc
int3
fwait
aam
push
cld
fs
ret
int3
lret
add
pop
push
ljmp
es
add
sub
dec
lock
aam
add
adc
cwtl
sbb
cmp
xlat
fistl
lcall
sub
inc
pop
pop
bound
or
adc
jno
add
xor
mov
adc
sub
dec
scas
jns
cmp
jle
push
and
cmp
xlat
testb
in
aaa
sub
mov
push
push
dec
mov
and
daa
add
jp
sbb
scas
mov
cmp
lcall
js
add
std
stos
nop
add
push
hlt
cltd
addb
mov
inc
push
mov
cmp
mov
mov
cli
dec
rorl
ljmp
clc
mov
fildll
cmpsl
mov
add
pop
mov
lret
and
cmp
cmpl
mov
push
popf
loopne
loop
mov
add
cmp
xor
xchg
cmp
mov
add
es
popf
pop
outsl
loope
push
push
jp
loope
bound
loopne
fdiv
add
iret
mov
js
ss
les
and
nop
call
imul
out
into
add
sbb
out
scas
fiaddl
xlat
mov
add
cmpsb
adc
fwait
jmp
cmp
xor
push
iret
inc
loop
cmp
mov
add
xor
pop
mov
jae
jg
fimull
and
ss
add
mov
out
gs
xchg
sbb
nop
fildll
mov
or
out
ja
fdivrs
jge
cli
push
add
pop
mov
xchg
xor
jno
shrb
inc
std
outsl
out
push
aaa
add
inc
les
xchg
pushf
roll
dec
sbb
pop
adc
es
add
xorl
sub
mov
and
lock
xlat
out
test
mov
adc
sbb
pushf
jecxz
dec
aad
add
pop
ljmp
lcall
in
mov
mov
sbb
adc
idivl
push
mov
insb
push
pop
mov
xor
sahf
add
loop
loope
jnp
mov
dec
mov
int
add
fldt
icebp
add
inc
cmp
loop
mov
fmull
push
add
jle
pop
clc
rolb
add
imul
mov
adc
out
sbb
addr16
out
insb
mov
cmpb
pop
mov
and
aam
sbb
and
into
add
daa
xor
cli
popf
or
jnp
in
or
lret
pop
pop
mov
and
add
sbb
data16
popa
call
arpl
adc
movsl
push
int
in
cltd
rcl
es
cmp
adc
lcall
sbb
popf
rorb
in
jb
jmp
xor
xchg
mov
adc
jnp
ret
push
in
daa
cmpsl
into
add
inc
pop
fildll
dec
adc
cmp
xchg
add
rorb
add
or
mov
cld
out
movl
or
iret
stos
cli
cmp
scas
ljmp
ss
pop
in
pop
into
fcmovnu
addr16
in
cmp
outsl
sbb
jmp
pop
daa
add
xchg
filds
cld
lcall
inc
bound
add
jp
or
mov
push
mov
lahf
cli
adcl
inc
sbb
and
adc
fwait
lods
mov
pushf
in
mov
cmp
inc
add
push
mov
and
mulb
scas
bnd
mov
aam
pop
push
lock
pop
lret
fmull
je
push
mov
es
test
push
ds
imul
sbb
out
xlat
daa
dec
roll
add
cmpsb
jb
flds
mov
add
mov
addb
test
rcr
add
shl
mov
add
xchg
adc
bound
sbb
test
clc
jb
cmp
lds
mov
fwait
cmpsl
div
arpl
jge
test
push
add
dec
jecxz
insl
es
jmp
and
cmp
stos
in
adc
daa
fnstenv
push
mov
cmp
popl
stc
sti
mov
lock
xchg
andb
add
test
in
adc
dec
test
in
fs
inc
scas
arpl
or
and
cltd
push
scas
add
mov
mov
sbb
hlt
ljmp
ljmp
xchg
dec
push
pop
popa
cmp
inc
pop
and
dec
stos
mov
mov
sbb
adc
in
in
xor
xorb
daa
leave
mov
jp
lret
dec
xor
mov
pop
mov
clc
les
sub
movsl
outsb
adc
cmp
fidivrs
cld
jecxz
insb
lea
xchg
in
out
out
mov
cltd
daa
pop
pop
outsl
ret
add
mov
inc
insl
mov
paddusw
sti
nop
or
mov
pop
sbb
inc
loopne
shrl
lods
cs
jb
cwtl
jl
add
cmc
sub
add
rolb
pop
jb
hlt
cmp
fcmovnb
or
xchg
daa
dec
pop
movsb
jo
ljmp
sub
mov
cltd
jge
push
lcall
ja
sbb
jg
leave
dec
testb
push
mov
into
lcall
dec
mov
jbe
clc
jbe
push
add
je
inc
sbb
movsl
popf
cmp
jle
test
in
pop
add
movsb
and
into
mov
add
jb
notb
and
or
xor
in
xchg
dec
push
push
dec
cmp
jl
subb
les
jmp
pop
xchg
adc
sub
mov
imul
popf
es
in
stos
add
out
sbb
dec
mov
jbe
xchg
mov
cmp
mov
enter
fs
inc
add
int3
sbb
or
daa
inc
shlb
aad
scas
mov
or
dec
cld
int3
loopew
jns
out
fiaddl
insl
in
es
repz
adc
jne
mov
mov
sub
dec
insb
test
inc
or
xchg
les
lods
fs
fwait
sub
and
jae
xchg
push
inc
jle
into
mov
das
popf
loope
lods
in
rcl
loop
jbe
or
adc
mov
sub
mov
jnp
add
inc
loop
inc
cmp
hlt
aas
cmp
ljmp
pop
xorl
xchg
add
cmpsl
mov
jg
sbb
xor
pop
stc
ljmp
mov
lahf
jnp
fbld
mov
call
leave
xchg
adc
roll
lret
jmp
sbb
and
add
sbb
or
fs
sbb
or
fisttps
pop
scas
jae
mov
or
push
repnz
lds
add
pop
lret
pop
pop
movsb
add
jmp
sub
pop
dec
jo
inc
fnstcw
cmp
jns
mov
aas
add
or
xchg
inc
mov
and
in
xchg
lret
add
pop
jbe
in
jmp
loope
sbb
cmp
pop
shrb
xchg
dec
add
cltd
push
addl
jbe
mov
add
movsl
outsl
add
ret
xchg
pusha
push
mov
popf
repz
inc
mov
mov
mov
mov
mov
push
cltd
inc
add
mov
mov
jae
inc
out
je
add
ja
mov
in
shrb
mov
push
sbb
push
sbb
out
in
lds
stos
ret
add
add
std
test
jmp
xor
icebp
pop
xor
or
cmp
add
pop
out
loope
push
inc
icebp
aas
popf
shlb
stos
jno
jbe
push
mov
push
and
inc
iret
and
aam
pop
xor
sbb
add
and
stc
push
inc
mov
lea
mov
popf
dec
scas
inc
xchg
mov
mov
sahf
mov
jmp
lds
add
push
jle
xchg
and
jae
dec
adc
xlat
sbb
add
rolb
std
push
mov
or
add
dec
fidivrs
cmp
les
adc
and
imull
push
hlt
bound
push
inc
cmp
adc
xchg
in
or
loopne
jge
decb
xchg
dec
and
adc
add
dec
iret
cmp
movsl
add
gs
sbb
adc
mov
cmp
iret
insl
and
mov
sbb
aam
sub
sahf
pop
add
mov
leave
in
xchg
add
stos
add
add
rcr
repnz
stc
insl
in
xchg
cld
adc
pop
mov
add
cmp
sub
fistps
jmp
push
sub
inc
add
sbb
or
icebp
inc
subb
jnp
fsqrt
xor
adc
lods
lock
dec
ret
scas
in
bound
mov
ds
cmp
cwtl
sub
in
je
pop
jne
add
lods
sbb
pushf
cli
loop
jnp
jl
pusha
xor
ret
lods
or
in
out
loop
pop
mov
add
aam
lds
push
loopne
enter
rorb
stos
and
ret
dec
adc
push
in
sti
and
adc
mov
push
jo
cmp
in
add
arpl
cmp
imul
movsb
jbe
ret
pop
adc
xchg
insl
sbb
pop
gs
pop
lds
in
test
pop
sar
mov
gs
push
je
xlat
jno
fucomp
cmp
pop
lret
xchg
add
xor
adc
inc
lcall
adc
aaa
orl
movsl
and
lods
sbb
cmp
js
add
dec
adc
das
xor
es
fnstcw
adc
in
bound
movl
nop
push
lret
leave
xorb
ds
cmp
subl
pop
push
cmp
mov
lods
in
in
subb
jo
adc
add
push
das
xchg
dec
add
jg
cmp
shlb
pop
sbb
add
add
inc
add
sbb
sbb
sbb
adc
outsb
into
cmpb
inc
and
ljmp
or
out
nop
or
cmp
xchg
inc
repnz
mov
cmpsl
push
xor
add
data16
mov
add
pop
mov
in
sahf
sbb
mov
and
aad
adc
out
insb
in
xor
imul
out
sbb
mov
xchg
loope
add
push
sbb
stc
insb
test
je
add
in
sbb
cmpsl
test
add
and
ja
xchg
xchg
sbb
adc
xchg
lds
push
mov
andl
fdivr
in
mov
inc
sbb
cmc
jl
stc
sbb
loope
add
push
pop
lods
les
mov
cmp
xor
mov
cmp
inc
out
lahf
fdivs
xchg
cmp
cmp
lock
pop
jne
in
call
leave
dec
fcmove
cmp
lahf
stos
jmp
pop
push
fstpt
add
test
out
pusha
shll
pop
test
mov
dec
xor
jb
int
or
cwtl
ror
mov
add
in
xchg
movsl
mov
rcl
pop
bound
adc
lock
mov
push
ds
repnz
into
repz
shl
or
jp
xchg
dec
or
addr16
gs
inc
sub
cmp
es
out
test
xor
or
outsb
add
pop
add
add
sbb
sbb
scas
pop
or
syscall
hlt
fstps
pop
leave
push
adc
cmp
jo
or
addr16
pop
add
ljmp
xchg
cs
push
out
dec
leave
scas
jno
test
pusha
cmp
adc
add
jmp
dec
hlt
cmpsb
cmc
cmp
xlat
add
jno
nop
add
les
add
cld
ds
jo
add
adc
pop
ja
cmp
and
xlat
push
and
orl
into
int3
xchg
add
flds
mov
pop
mov
std
subl
xchg
jmp
test
out
pop
ljmp
stos
sbb
sub
lods
mov
pop
and
ds
cmp
jno
in
mov
mov
cmp
push
in
mov
fdivs
xchg
es
insl
jp
xchg
cmp
in
les
scas
filds
sahf
int3
fwait
fs
add
sahf
out
adc
andb
icebp
mov
jne
loop
aad
or
movb
hlt
inc
out
xchg
push
inc
sbb
adcl
inc
aad
pop
int3
jle
aas
mov
mov
inc
and
pop
add
jb
fisubrs
pop
in
ss
cmpsl
xlat
sub
push
xchg
sbb
daa
jo
push
mov
jb
in
notb
in
fsubl
fistpll
in
lahf
adc
add
loop
icebp
mov
dec
ljmp
fs
lds
add
xchg
cmp
in
in
sub
or
out
push
dec
in
ret
pop
cmp
in
mov
aad
andb
sahf
xor
leave
jg
push
test
into
and
xlat
push
cwtl
or
push
setp
inc
cmpsl
sbb
xor
icebp
jmp
jo
xor
cli
sbb
lea
testb
mov
ljmp
inc
add
xor
ja
aas
cltd
out
dec
imul
pop
loopne
loopne
incb
out
cmpsl
sahf
pop
pusha
mov
pop
test
mov
fistpl
push
add
xor
decb
mov
dec
cmp
lahf
push
or
cmp
in
in
add
ja
cmp
clc
shll
rol
stos
packuswb
push
mov
inc
lods
or
sub
pop
stc
xchg
dec
fadds
pop
push
insb
add
xor
test
movl
mov
mov
in
gs
xor
hlt
xchg
aaa
in
xor
and
lret
cmp
fcmovnu
or
jge
pusha
jecxz
adc
test
pop
adc
mov
imul
xor
xchg
into
sti
and
push
mov
cmpsb
add
dec
icebp
mov
jmp
ret
cmc
movl
scas
cmp
inc
fucomip
je
in
add
jecxz
push
fcoms
sbb
out
dec
jb
ficomps
sub
inc
stc
arpl
lcall
in
sub
insb
test
sbb
mov
sub
dec
adc
xchg
mov
jnp
fstps
sub
dec
xor
fs
jle
in
in
movsb
push
mov
cmpsl
add
jae
push
jp
adc
andl
lea
adc
js
add
mov
push
loop
leave
lahf
in
xor
sahf
push
and
mov
fstpl
add
fsubs
mov
arpl
xor
pusha
hlt
cmpsl
xchg
add
loop
addl
xchg
inc
imul
or
xchg
mov
mov
jl
fcmovne
jbe
and
andl
testl
mov
add
dec
shr
inc
cmp
or
push
jp
data16
je
push
add
push
jg
loop
push
sbb
and
cmp
insl
nop
aaa
popa
bswap
lcall
inc
leave
imul
dec
incb
add
or
fisubl
add
sbb
jge
sbb
lods
cmp
or
imul
xchg
addb
mov
ficompl
sbb
ret
ds
pop
adc
js
xor
popa
mov
jb
in
xor
jne
jne
ljmp
push
mov
add
sub
mov
cmpsl
in
sub
dec
sbb
fisubrl
add
stos
bswap
mov
fisttps
or
dec
push
sbb
fxam
fwait
cmp
daa
mov
adc
bound
adc
test
icebp
bound
jecxz
mov
mov
add
cmp
pusha
in
inc
add
mov
dec
adc
idivl
fisubs
push
xchg
cmp
add
jecxz
in
jo
adc
add
cmp
sub
sbb
inc
inc
sub
out
jbe
fisttps
and
in
addl
pop
test
dec
inc
aas
and
in
and
push
movsb
int3
cmp
jb
jbe
loop
dec
pop
dec
fsts
je
and
add
inc
pop
jo
push
add
xor
jl
add
add
shlb
lock
in
adc
add
cwtl
mov
int
hlt
in
mov
adc
insb
iret
cmp
das
mov
inc
fistl
mov
fcompl
call
adc
xor
data16
das
cs
gs
cmp
push
mov
mov
push
fcomip
fs
lret
add
mov
fwait
push
pop
orl
pop
rcll
xchg
sbb
mov
cld
jno
ret
adc
frstor
sbb
cli
pmulhuw
cltd
mov
pushf
es
cmp
cmp
and
jne
dec
pop
add
inc
push
daa
jnp
push
sarl
lret
subb
int
add
and
mov
add
jo
sbb
pushf
push
movsl
dec
xchg
rcrb
gs
mov
mov
and
test
mov
jg
loop
clc
xor
adcb
inc
jle
in
cmpsl
testl
dec
add
jle
xor
in
xlat
outsl
dec
fiaddl
push
div
fcmovb
cmpsb
nop
sahf
jp
xchg
add
int
mov
fwait
loopne
xor
fxch
mov
xor
xchg
divl
xor
iret
in
fwait
loop
mov
mov
xor
clc
add
add
pop
jbe
pop
mov
jle
push
movsl
or
loopne
outsl
mov
imulb
fldl
lret
lods
sbb
test
add
jmp
dec
jb
in
ret
push
xchg
push
inc
in
pop
popf
js
pop
mov
pop
sbb
repnz
or
jae
pop
stos
out
scas
popa
out
push
ds
cmp
mov
testb
fdiv
inc
cmp
in
xchg
in
jo
sub
cmp
lret
add
jbe
dec
stos
add
adc
pop
or
mov
xor
pushf
cmp
xor
in
cmp
iret
dec
cmp
pop
push
cmp
mov
and
push
in
xor
mov
popl
add
jae
mov
pop
lea
lds
sbbl
mov
dec
add
aam
add
pop
dec
pop
lea
iret
jno
roll
shll
add
cwtl
cmp
int
hlt
inc
or
cmp
cmp
push
sub
xchg
adc
add
loope
xor
pop
sbbb
cmp
or
cmp
rcrb
lret
jle
add
in
and
idivl
adc
lods
and
xchg
and
fwait
les
lcall
fiadds
cmpsb
pushf
ret
mov
inc
outsl
push
ljmp
clc
mov
ret
pusha
cmp
pop
xchg
inc
je
mulb
or
bound
mov
inc
add
dec
inc
xor
in
repnz
add
xchg
add
xor
jle
and
jle
bound
jns
cmp
add
arpl
mov
testl
pop
mov
enter
xchg
popa
testl
in
sub
adc
cmpsb
cmp
push
and
mov
js
call
lods
pop
test
fisttpl
mov
sub
cmp
xor
adc
cmp
es
andl
sub
roll
push
adc
mov
jnp
in
cmp
jno
std
push
or
add
jmp
mov
mov
outsb
loop
data16
xor
repnz
loop
jg
push
and
lcall
or
rolb
add
adc
and
sbb
ds
clc
sub
cmp
mov
mov
pop
jbe
lock
cltd
pop
dec
pop
xchg
add
mov
cli
cmp
sti
fs
test
pop
std
xor
call
neg
loop
push
test
cmp
jp
rcrb
jbe
pop
gs
and
in
aad
mov
jmp
movsb
shl
insl
dec
mov
push
jb
movsl
mov
insb
add
push
das
jns
loopne
push
add
out
pop
cmpsb
or
pop
inc
sub
cmp
daa
sub
pop
jnp
inc
sbb
sub
loope
test
adc
ret
inc
aad
xchg
ds
in
jl
imul
pop
inc
or
femms
pop
push
in
sub
add
movsl
in
adc
cmp
push
arpl
pop
loopne
daa
cmp
je
orb
fdivrs
testl
cmpsb
cmp
xor
mov
mov
lods
ja
add
lods
pop
lods
push
arpl
rol
sbb
mov
mov
out
jmp
and
fsqrt
lock
movsb
xchg
cmp
add
dec
jbe
cmp
in
add
sub
fstpt
out
gs
add
data16
pop
xlat
push
popa
rolb
push
into
shlb
xchg
mov
cmp
xor
pop
imul
fimull
mov
adc
cltd
gs
xor
pusha
clc
ret
in
mov
fidivl
push
push
mov
lds
rolb
pop
lret
movsl
or
stos
adc
mov
es
loopne
push
addb
pop
sbb
xchg
and
repz
stos
pop
jecxz
jno
dec
shll
out
int
cmp
adc
xorb
xor
stos
cmp
push
shlb
xchg
lahf
push
lods
cli
sarl
xchg
and
in
mov
or
xor
add
cmp
call
mov
inc
dec
mov
add
cmp
testb
popa
add
int
xchg
sbbl
popa
push
add
ret
sbb
and
in
rclb
lret
cmp
dec
adc
test
push
and
inc
add
sub
jnp
mov
cmp
cs
xabort
inc
xchg
sbb
test
cmp
push
repnz
xor
out
loopne
cmp
xchg
cmc
jmp
add
pop
stos
add
cmpb
daa
pushf
mov
push
xchg
sbb
int
sbb
or
in
int
bound
gs
jp
add
scas
add
testl
jo
cmp
out
pop
movsb
or
add
dec
or
adc
cmp
cmp
ret
leave
loope
mov
addl
shl
add
sbb
push
inc
out
and
mov
data16
adc
sbb
xor
push
cmp
ja
andl
add
loope
jp
gs
or
jle
lcall
sbb
stos
rcll
fwait
cltd
push
out
mov
cmp
pop
xor
cmc
or
fists
mov
and
in
add
jge
test
jb
cmp
scas
das
test
repz
add
test
sub
add
mov
pusha
add
add
repnz
fiaddl
pop
std
xchg
dec
icebp
repnz
hlt
or
pop
mov
inc
add
addr16
int
xor
xchg
pop
mov
test
and
jg
cmp
or
stc
loopne
cmp
sub
in
fs
and
xchg
mov
lea
aaa
movsb
jae
add
xchg
insl
in
and
add
fnstcw
adc
pop
bound
lods
jle
inc
fisubl
pop
inc
adc
iret
stc
sahf
pop
or
mov
sbb
stos
add
and
dec
addr16
in
outsb
lock
ret
jecxz
cltd
cmpsb
fistpll
xchg
pusha
mov
mov
dec
in
mov
nop
push
inc
lahf
jne
xor
add
ja
jmp
sbb
outsl
cwtl
add
in
inc
out
dec
dec
aam
jne
pop
xchg
xchg
fucom
sbb
dec
in
add
and
in
lds
les
cmp
mov
sbb
or
mov
jl
ljmp
or
jp
adc
cld
add
push
xchg
and
push
pop
dec
pop
pop
adc
pusha
push
fiaddl
in
push
arpl
cmp
push
cltd
pop
cmp
imul
inc
pusha
cmp
mov
cmp
or
or
xor
jp
mov
fadds
jnp
sub
mov
into
and
dec
mov
pop
xor
dec
cltd
add
mov
test
xchg
lahf
js,pn
cwtl
sub
add
sub
add
add
jb
shll
jnp
aam
fmuls
mov
popf
xor
jp
jle
sbb
ss
nop
pushf
shr
outsl
in
mov
ret
dec
add
repz
inc
ret
push
fs
repnz
jg
and
push
lcall
mov
inc
fucomp
inc
aaa
ljmp
mov
push
jbe
jge
or
cmpl
call
sahf
into
and
ret
and
jae
sbbb
ret
in
in
push
cmpl
sbb
jle
adc
aas
out
xchg
mov
subb
cmp
jmp
jp
adc
gs
mov
and
clc
out
cmp
loop
sbb
xchg
dec
or
sbb
sub
xor
push
mov
ret
mov
gs
adc
jne
adc
dec
mov
in
push
mov
and
int
mov
cmp
cmp
mov
xor
ret
and
jmp
dec
sbb
cli
xacquire
insl
push
push
xor
pushf
ret
sti
movsl
cmpsl
add
movsb
shrb
iret
aaa
and
push
xchg
insl
sub
xlat
add
js
sub
pop
pop
out
pop
into
subl
mov
cmp
pushf
jo
inc
adc
fwait
popf
cmp
roll
in
stos
add
fnsave
clc
ror
xchg
std
mov
add
mov
in
and
add
pop
aas
lods
and
in
sub
mov
out
sub
cmp
add
scas
mov
in
push
cld
aam
mov
loopne
popa
mov
in
js
mov
inc
enter
jecxz
dec
int
lds
out
je
test
xlat
xor
jmp
movsl
mov
out
xor
sbbl
push
into
cli
popa
shll
and
jp
add
cmp
shlb
sbb
scas
pusha
xorb
pop
jo
ds
jmp
dec
push
scas
gs
jp
cmp
aas
jbe
pop
sbb
jne
cmpsb
jge
dec
push
push
in
fmuls
cmp
arpl
mov
jns
movsl
push
push
inc
out
mov
in
lods
dec
in
je
mov
movsb
push
insl
jg
in
sub
dec
cmp
pop
repz
push
or
and
cli
mov
gs
lret
fcmovb
or
in
mov
imull
push
xor
mov
mov
inc
pop
cmp
pop
add
out
pop
mov
leave
negb
lret
add
cmpsb
add
shlb
fwait
sub
pop
ret
sbb
and
mov
dec
insb
out
enter
in
and
mov
jbe
bound
dec
ja
or
negb
inc
sub
push
js
add
gs
in
in
push
fistl
or
mov
inc
in
and
mov
sti
cmp
or
lcall
mov
pop
add
fwait
data16
out
subb
cli
aas
in
popa
stc
outsb
lret
mov
jo
loopne
lds
sbb
out
and
add
jnp
adc
fiadds
push
or
xchg
pop
lea
dec
in
ret
push
inc
nop
add
stos
add
mov
pushf
mov
jg
cmp
sub
adc
shl
adc
cmp
inc
sti
mov
add
fxch
mov
sbb
loopne
cmp
pop
lock
stos
or
clc
xor
xor
stc
ljmp
adc
mull
cmp
mov
fmuls
adc
sub
aam
jns
pop
jbe
inc
in
cmp
sbb
lock
enter
add
push
clc
bound
into
mov
lret
es
or
insl
add
inc
out
mov
inc
or
dec
add
inc
jns
imull
pop
cmp
loopne
movsl
insl
sahf
push
fsubp
sbb
icebp
mov
arpl
cmp
in
mov
push
lds
jl
jle
xchg
insl
mov
add
daa
test
push
mov
out
add
mov
movsb
jmp
popf
pusha
aas
mov
mov
pop
add
mov
mov
loop
mov
xorb
inc
jno
into
cmp
popa
cmpsb
fmull
xor
test
in
pop
mov
fwait
push
add
pop
mov
pop
pop
pop
sbb
inc
inc
add
push
xor
sbb
rol
jmp
lods
sub
xor
jae
push
mov
cmc
inc
add
add
xchg
or
cmp
nop
mov
daa
fmull
jecxz
add
insb
or
pop
rcl
pop
inc
add
pop
inc
sub
fisttps
push
jnp
lret
mov
clc
test
orb
movsb
lods
fdivrp
outsb
faddl
out
cs
lods
outsb
out
add
pop
xchg
cltd
in
sub
jb
sbb
repz
subl
mov
or
pop
add
ljmp
shl
insb
jl
sub
cmpl
xchg
imul
sbb
dec
movsb
adc
mov
add
adc
sbb
dec
aad
mov
in
scas
inc
int
cli
shll
inc
cmp
xor
add
and
add
das
sbb
fisubs
pop
push
add
fdiv
xor
in
loop,pt
lods
scas
and
cmp
xchg
cmp
or
xor
in
mov
sbb
pop
scas
push
fcomps
das
scas
and
fistl
add
andl
cmpsb
es
inc
and
lret
mov
gs
mov
pop
mov
xchg
jmp
xchg
pop
mov
movlps
in
mov
test
push
and
xchg
sub
sbb
mov
push
xor
loopne
push
add
xorl
mov
lcall
enter
mov
pop
add
lcall
and
xchg
stc
std
cmpsb
jg
mov
push
jp
jb
fdivrs
loope
call
test
jge
sub
std
add
mov
add
bound
out
lcall
lds
adc
cmp
pusha
dec
fstpt
mov
sahf
sbb
add
leave
ret
push
adc
bsf
sti
and
jns
cmp
cwtl
mov
sub
add
mov
and
push
repnz
cwtl
pop
add
push
and
add
loope
adc
js
loopne
testb
insl
xchg
dec
cmpsl
cmpsl
push
ds
fdivrp
mov
in
fwait
in
pushf
insl
jl
arpl
push
mov
xchg
outsb
sti
and
or
add
aas
xchg
leave
sub
mov
dec
out
rol
enter
fiaddl
pop
xchg
andb
dec
or
add
sbb
dec
movsb
ficoms
jge
mov
gs
ret
test
fwait
call
rorb
push
adc
jmp
adc
inc
pusha
aad
mov
xchg
out
cmp
mov
in
jp
push
loop
out
ficompl
orb
and
popf
mov
jo
in
insl
push
shlb
or
xorl
outsb
cmp
push
add
jmp
mov
inc
daa
dec
add
test
and
pop
cmp
in
ljmp
mov
mov
add
mov
add
les
rclb
sahf
mov
nop
pop
bound
jae
cs
adcl
shll
adc
sub
sbb
ljmp
jae
aad
arpl
add
adc
ret
sbb
arpl
sbb
das
shl
ret
push
movsl
xchg
cmp
dec
scas
fsub
inc
sbb
add
xor
push
fldcw
xor
in
inc
cmp
in
in
rcl
cmp
xchg
and
stc
push
and
aas
cld
sub
push
xor
popf
mov
stc
dec
sub
pop
clc
cmp
xchg
jecxz
fwait
add
push
mov
data16
inc
mov
fcoml
repnz
movsl
jmp
out
add
dec
mov
shl
jmp
xor
sbb
pop
mov
or
xchg
add
add
and
add
mov
mov
test
and
ds
jge,pn
add
mov
aaa
outsb
lret
xchg
pop
mov
jge
push
dec
or
jp
in
test
push
add
mov
popf
sar
adc
pushf
jmp
pop
stc
or
dec
cmp
inc
jp
inc
inc
cmp
andb
clc
push
pushf
adc
test
or
daa
sahf
push
add
xchg
mov
roll
ret
sbb
arpl
pop
push
push
sahf
sbb
and
insb
cmp
test
add
arpl
jae
xchg
cmp
insb
jmp
dec
repz
mov
mov
adc
inc
in
rcr
sub
and
cli
test
inc
daa
sub
in
sub
pop
fstl
loop
cmp
ds
mov
pop
out
shl
dec
pop
dec
test
or
cld
add
push
and
imul
lods
mov
ficompl
pop
mov
loopne
movsb
cmp
xchg
lods
add
mov
cwtl
js
mov
add
pushf
mov
add
xchg
inc
xchg
mov
mov
jne
cmpsl
jne
add
xor
push
lods
stos
add
sub
mov
lcall
add
dec
xor
shl
or
mov
sarb
ljmp
add
mov
mov
repz
xchg
lret
xor
push
popf
pop
ret
in
xor
cli
in
imul
and
push
in
jns
pop
mov
jge
cmp
fistl
or
add
add
mov
push
aaa
adc
jp
cmp
and
adc
loop
push
fisubrs
lods
in
out
pusha
in
mov
jo
pop
inc
test
dec
pop
mov
fs
add
test
je
push
dec
add
xchg
or
popf
push
push
loope
add
insl
popf
cmpsb
shll
sbb
stos
push
lds
mov
mov
xor
jmp
or
xchg
xor
cmc
fbstp
idivb
loopne
ja
xor
fiaddl
addl
inc
data16
sbb
mov
es
inc
arpl
daa
inc
xor
add
nop
pop
jae
pushf
loope
in
push
test
add
cmp
dec
out
add
sub
rolb
add
pushf
ds
mov
hlt
in
fwait
invd
cmpsb
loopne
je
add
jg
ret
fildl
jbe
and
cmp
fwait
mov
ret
inc
in
add
into
xchg
sbb
add
cmpsb
inc
push
jo
cmp
sbb
fsubrs
imul
add
adc
add
movsb
adc
aam
add
js
ss
jle
insb
in
pop
inc
popf
cmp
out
cmp
mov
lods
inc
insl
mov
cmp
dec
mov
nop
das
mov
pop
ljmp
push
add
push
out
mov
stc
add
mov
xor
and
in
test
fnstsw
push
lahf
jp
or
stc
pop
lret
dec
add
mov
insl
lcall
add
jo
jge
cmp
stos
push
adc
push
jne
add
lcall
mov
in
inc
mov
jecxz
and
lods
xor
add
jmp
and
sbb
cwtl
sarb
repnz
mov
arpl
dec
and
and
popf
inc
je
fsubl
cli
sti
xchg
add
or
cmp
gs
bnd
prefetch
add
out
cwtl
fdivl
sahf
push
add
daa
lahf
pop
inc
add
inc
in
lods
hlt
cmp
cld
out
push
cmp
movsb
jne
subb
lret
and
cld
jle
pop
inc
notl
inc
lret
hlt
pop
mov
ss
jno
or
fsts
dec
in
test
cmp
mov
jns
mov
cmpl
add
mov
push
sahf
sbb
inc
cmp
insl
cmp
cwtl
in
cld
jnp
ds
add
pop
mov
jg
jp
mov
pop
jl
in
loop
mov
dec
sbbl
push
and
add
mov
imul
popf
jp
ja
in
or
mov
xchg
fimull
out
inc
loope
push
cli
sbb
pop
jno
mov
push
aaa
movsl
sbb
sub
adc
mov
std
jb
not
adcl
mov
or
cmp
mov
pop
cmp
ljmp
loop
cmp
mov
adc
lret
adc
xchg
or
cli
sbb
cwtl
adc
adc
lret
ljmp
pop
aam
push
test
insl
imul
data16
mov
add
int3
mov
push
dec
in
push
fadds
rolb
xlat
cld
inc
mov
jmp
clc
stos
inc
add
cmp
inc
pop
mov
enter
das
clc
lret
out
in
addr16
add
pushf
cmp
iret
adc
fstpl
sbb
mov
test
pop
les
and
shll
movsl
mov
jne
mov
fstps
inc
out
out
mov
mov
cmp
xchg
aaa
or
pop
out
ds
fidivrs
add
int
add
mov
imul
int
inc
cmp
popf
loopne
das
scas
adc
les
sbb
mov
mov
cmp
dec
test
fs
inc
adc
dec
and
std
xor
imul
jbe
scas
repnz
add
jmp
adc
aaa
cmp
adc
outsl
movsl
imul
sub
mov
pop
and
xchg
mov
stos
xchg
push
fcmovb
cli
adc
loope
cltd
insb
xor
jo
out
lods
add
xchg
jg
out
lahf
shl
lahf
sub
xchg
add
mov
ret
loop
lock
in
dec
cmpb
pop
pop
in
dec
push
in
loope
stc
out
pop
cs
popf
add
and
xor
addr16
pop
and
insb
es
mov
test
ja
out
xor
or
incl
inc
mov
in
mov
int
cmc
add
mov
xchg
adc
imul
mov
in
and
sti
push
mov
test
inc
lahf
or
aam
add
lahf
add
outsl
test
push
sti
cmc
cmp
push
in
and
mov
push
ljmp
add
sbb
xchg
jnp
loop
sbb
je
and
cmpsb
adcl
mov
mov
int3
mov
sti
adc
out
shlb
enter
scas
ljmp
lret
mov
dec
add
xchg
sbb
sub
mov
imul
add
int3
mov
sub
iret
xchg
add
cmp
sarl
fldenv
inc
in
xchg
sub
cmpsb
xchg
bound
int
and
shl
sub
cmpsb
in
and
insl
push
push
ret
jo
js
pop
ja
jg
in
loop
cwtl
dec
aam
lahf
mov
inc
aaa
rorl
xor
in
outsl
and
std
pusha
in
enter
add
sbb
mov
enter
and
cld
loop
imul
xor
mov
fwait
pop
std
pop
loope
je
xchg
int
loop
xchg
or
ret
push
and
jb
lcall
jne
ljmp
jecxz
or
out
push
xchg
mov
add
shll
push
cmc
mov
repnz
nop
push
push
cmp
into
mov
lret
jmp
js
pop
jp
fsubr
mov
adc
xchg
cmp
xor
fistpll
inc
cwtl
cs
fiaddl
loope
cmp
imul
mov
ljmp
add
xor
inc
nop
or
and
push
cmp
xchg
ds
mov
int3
roll
imul
lods
nop
in
cmp
subb
ss
loop
cld
mov
dec
xchg
adc
jae
mov
cmp
inc
add
aad
loop
xor
lds
pop
dec
fwait
adc
sub
pop
adcb
and
sti
cmp
sbb
js
data16
xor
test
push
or
cmp
sarl
js
cmp
lcall
adcb
aam
add
xor
mov
fs
pop
loop
dec
inc
idivb
out
fcoml
in
ja
pop
jmp
movsl
sub
nop
sbb
cmp
movsl
jmp
arpl
sbb
sbb
sbb
inc
and
imul
ret
test
mov
dec
loop
mov
mov
pop
mov
sub
jo
lds
cmc
mov
xchg
add
fdivrp
pop
imul
lret
cmpsb
mov
notl
sarb
cwtl
inc
or
jbe
cmp
call
icebp
data16
movb
mov
push
cmp
pop
repnz
pop
cmp
jle
xchg
mov
dec
in
push
add
aam
inc
cmpsl
je
shl
add
cmp
mov
dec
xchg
aam
cs
in
aam
mov
cmp
pop
clc
imul
stos
ja
jmp
addr16
negl
adc
push
inc
push
jae
je
add
cmp
test
sub
in
mov
jg
add
cmp
or
test
xor
cmp
movsb
push
test
and
adc
adcb
mov
add
stc
repz
popl
or
ja
mov
shrl
mov
ror
jp
cwtl
add
call
fwait
xchg
sub
pop
adc
add
movsl
cmp
jne
add
jle
mov
inc
add
xor
and
add
imul
add
pushf
lea
pop
pop
out
and
fsts
mov
sti
fdivrl
cmp
cmpsb
cmp
add
jmp
jne
add
jb
push
ljmp
hlt
cs
rclb
mov
loopne
adcl
mov
jns
add
icebp
pop
js
daa
cmp
add
add
out
push
add
insb
mul
iret
hlt
lret
insl
pop
lock
or
push
icebp
aas
rcll
lods
ds
lar
shrl
fdivrl
jmp
sub
mov
cmc
lcall
sub
fmulp
in
in
mov
add
or
ljmp
loopne
mov
arpl
pop
or
movsl
je
cmp
mov
xchg
mov
add
add
jecxz
loopne
dec
cmp
xchg
add
add
in
insl
out
inc
add
add
pop
pop
mov
dec
loope
jecxz
pusha
add
jge
stos
mov
out
ss
cmp
sti
in
mov
mov
rcrl
cmp
sub
mov
out
addr16
in
sbb
mov
fs
and
popf
or
adc
cmp
push
sub
lock
mov
jnp
sbb
loopne
jne
add
and
dec
je
popf
icebp
out
push
and
sub
mov
xor
dec
xor
sub
shll
mov
sbb
ret
jp
test
xchg
mov
sbb
fcmovne
mov
cmp
pop
lds
inc
fsubrs
btc
in
loop
popf
fwait
jg
adc
adc
jno
aad
xchg
insl
ret
mov
out
mov
mov
inc
js
rcrb
mov
cmpsl
pop
cmp
add
sahf
addb
pop
or
add
in
and
push
push
or
test
mov
jge
add
inc
movsb
jp
xchg
daa
cmp
dec
mov
jge
jbe
or
test
cmc
out
mov
cmp
mov
hlt
push
jge
mov
cmpsl
pop
aad
inc
mov
inc
mov
jg
xchg
push
add
dec
xchg
imulb
pusha
push
add
popa
test
test
out
mov
lcall
es
fwait
cli
aam
call
add
sub
clc
mov
mov
shll
hlt
add
add
test
test
out
xor
xor
ljmp
cmc
in
sub
cltd
pop
test
test
dec
cmp
cli
cmp
mov
rcrl
into
mov
mov
cmp
add
inc
xor
add
cmp
and
popf
clc
gs
push
jne
popa
inc
mov
mull
in
pop
es
xchg
jp
test
cmp
cmp
mov
mov
adcb
nop
xchg
push
mov
cmp
lret
and
add
stc
push
adc
fs
add
addb
add
loop
outsl
add
andl
inc
int3
out
pop
or
and
cmp
mov
cmp
inc
in
aad
out
es
adc
inc
in
push
into
push
jae
or
out
sar
and
add
data16
rorb
add
adc
notl
sbb
cmp
lock
out
add
pop
add
adc
mov
mov
out
inc
xchg
mov
mov
inc
in
sarb
shll
add
sbb
sbb
dec
add
loope
mov
cwtl
cmp
clc
popa
mov
add
mov
jae
shl
jnp
and
js,pn
bound
bnd
arpl
nop
cmp
lahf
push
int3
das
loopne
iret
add
popa
push
push
lds
jno
cmp
xchg
aam
mov
xchg
mov
jnp
test
fisubrs
lcall
sub
sub
loope
adc
mov
pop
in
mov
cmc
mov
add
push
mov
in
mov
cmp
add
ss
xor
daa
and
add
sbb
lock
cmp
fisttps
fucomi
or
xor
in
inc
iret
or
or
in
decb
sbb
repnz
sub
xor
out
mov
fdivp
jno
adc
sub
cmc
popa
xlat
adc
sub
cmc
push
out
adc
lock
and
sub
shrl
inc
test
sbb
jns
jbe
mov
pop
call
mov
imul
sub
out
adc
xor
jns
mov
add
inc
fldl
cmpsb
arpl
cmp
addr16
or
loope
sbbl
stc
and
adc
sub
add
jmp
or
iret
clc
push
sar
xor
push
push
icebp
hlt
cli
out
rorb
ret
jmp
shrb
mov
xchg
out
fsubs
inc
ret
pop
js
pushf
cmp
lret
xchg
cmp
fcmove
in
scas
mov
and
mov
xchg
and
call
mov
mov
adc
mov
imul
test
stos
popf
adc
mov
lahf
fwait
mov
das
addr16
dec
pop
sbb
imul
ja
inc
pop
jno
pop
jge
mov
jp
push
scas
jnp
add
gs
push
lret
push
inc
insl
pop
sbb
das
add
enter
leave
xor
xor
pop
dec
and
add
aaa
cmp
adc
add
dec
psubsb
pop
mov
cmc
or
cmp
and
outsl
push
adc
daa
pop
push
daa
or
fmuls
or
xchg
in
dec
cmp
mov
in
clc
nop
in
stc
in
xlat
aad
in
lret
xchg
decl
int3
cmp
in
mov
fidivrl
add
xlat
nop
icebp
push
xchg
enter
mov
and
scas
dec
test
sti
mov
sbb
in
cmp
mov
or
fldenv
adcl
or
outsl
movsl
lcall
es
stc
jne
mov
or
ljmp
in
jns
sbbl
add
mov
in
inc
add
pop
add
loop
push
pop
mov
xor
xlat
cmp
imul
xor
cmp
pop
xor
aam
jnp
fimuls
popw
xchg
push
mov
push
scas
sbb
out
add
sbb
data16
jmp
stos
add
cmp
in
push
xchg
mov
sti
out
cmp
pop
cld
lods
test
cli
or
add
shlb
flds
sub
aad
popa
cmpsb
rcr
cmp
jnp
aam
stos
jb
in
test
dec
fsubrl
bndstx
mov
das
adc
xchg
push
dec
mov
jnp
lcall
scas
cmpl
scas
xchg
sbb
inc
xorb
addr16
jp
and
pop
and
dec
jnp
sbb
ja
insl
inc
jo
repz
imul
sub
in
inc
loop
fadds
mov
loop
or
push
jle
sbb
loop
and
rcll
inc
rclb
adc
ret
push
cmp
in
xor
push
and
in
add
stc
and
adc
insb
sti
pop
das
cmp
jno
imul
add
popf
add
in
idiv
sbb
aam
in
mov
das
jmp
je
jnp
ret
sbb
and
out
push
or
mov
mov
std
adc
sar
in
mov
push
int
scas
xlat
cmp
xor
out
clc
mov
xchg
aas
scas
xchg
outsl
aam
push
mov
add
adc
sub
jle
and
cmp
pop
jno
xchg
dec
add
xchg
inc
jo
movsb
pop
pusha
jb
adc
add
sub
pop
pusha
into
inc
shl
and
sbb
ja
adc
adc
add
push
jge
int
add
lds
cmp
lods
add
jmp
jle,pt
xchg
outsb
add
cli
aaa
dec
push
in
pop
repz
ret
filds
add
call
les
fadds
out
lea
iret
fs
mov
or
stc
jmp
test
int3
loop
rorb
in
nop
mov
xchg
add
xor
ror
in
test
dec
fbstp
jmp
adc
mov
loopne
lds
mov
pop
mov
sbb
fadd
jne
ret
cmp
sahf
push
mov
std
xchg
in
rorb
pop
addr16
pop
push
arpl
adc
scas
pushf
out
cs
mov
push
xchg
outsl
jne
inc
sbb
jnp
js
push
stos
jnp
push
in
jg
std
sub
pop
add
and
dec
loopne
push
dec
mov
pop
dec
movb
sub
inc
popa
ficoms
rclb
adcb
fnstenv
pop
hlt
xor
cmp
pusha
pushf
adc
cmp
cli
pop
clc
aas
sbb
fmull
jmp
sbb
lods
jno
sbb
and
adc
push
dec
scas
inc
and
orb
es
mov
stc
repz
mov
add
mov
fcmove
jge
fldt
arpl
cwtl
jecxz
or
stos
jmp
and
add
repnz
fidivrs
movsl
or
adc
jp
add
push
mov
sbb
loopne
lahf
inc
jge
loopne
mov
mov
aam
jg
negb
jmp
insb
inc
into
jle
mov
adc
icebp
jp
dec
call
cwtl
jp
jl
mov
outsl
add
popa
dec
pop
test
inc
add
fstpt
cmp
sub
sbb
fs
xor
pusha
test
rcll
clc
sub
mov
sub
rorl
pop
dec
flds
add
sub
push
or
movb
add
testb
cmp
cli
add
loop
fimuls
sub
jg
sbb
add
rol
sub
aam
xor
daa
in
mov
fcomp
stc
fisttpll
xor
add
loopne
lods
adc
jo
jno
mov
movsb
dec
mov
mov
dec
loope
push
mov
inc
add
xchg
add
test
fwait
cmpb
mov
idivb
js
enter
lret
push
pop
into
fldl
gs
add
ss
mov
inc
jns
mov
cmp
inc
scas
jnp
jl
pop
jge
cmc
and
pop
mov
pop
mov
mov
sbb
adc
ja
add
push
aas
sub
add
fmull
cmp
lds
insb
ja
fwait
push
push
and
cmp
and
mov
cmp
cmc
sub
inc
pushf
cmp
cli
daa
mov
cmc
fsubrs
or
mov
mov
mov
add
ret
fsubl
imul
fwait
xchg
icebp
aad
fadds
in
xlat
loope
clc
icebp
int
sbb
test
push
xchg
jnp
std
stc
in
sarl
shrl
fstp
add
lret
mov
xchg
xlat
stos
popa
sbb
daa
add
add
add
sbb
pop
js
mov
xor
leave
das
sbbb
mov
or
mov
lret
add
clc
pop
fsubp
dec
rolb
sub
push
das
or
ret
addr16
shl
mov
in
xor
or
int3
or
rdmsr
sbb
in
xor
or
xor
lahf
in
notb
cld
outsl
xor
gs
bound
or
adc
sub
adc
adc
cmc
mov
and
loope
and
mov
and
sbb
loope
and
clc
sbb
movsl
sub
inc
hlt
add
in
push
ss
or
mov
repz
out
sub
sbb
push
push
loopne
adc
mov
sub
and
enter
into
test
fisttpll
jno
lock
jns
lret
shl
in
int3
in
mov
xor
lahf
loop
ds
cmp
sub
or
pop
nop
push
lret
jne
pop
xor
lds
in
leave
popf
leave
mov
lahf
rcll
mov
or
scas
dec
mov
mov
mov
lds
sti
mov
shrb
add
cmp
bound
push
or
in
jle
mov
jno
xchg
and
repz
push
jg
push
mov
loop
in
imul
or
jae
mov
inc
pusha
mov
mov
add
hlt
jns
rorb
add
add
ds
adc
jg
jne
jecxz
in
cmp
cmp
adc
test
pop
jae
add
sub
add
cmp
adc
sub
in
xor
sbb
xlat
mov
or
add
add
dec
sbb
jbe
and
cmc
jecxz
int3
hlt
fwait
das
movsb
jge
out
rolb
cmpsb
shlb
out
cmp
jl
or
aad
pop
in
fisubrl
sbb
cld
aad
dec
add
scas
stos
mov
mov
jge
stc
push
or
pminub
xchg
lahf
inc
mov
mov
push
xchg
add
jne
pop
dec
es
lahf
pop
test
inc
mov
adc
xchg
dec
dec
outsb
xchg
cmpsl
push
jno
cmp
mov
pop
shlb
scas
rolb
sub
or
sub
stos
jle
push
int
inc
cmc
popf
jl
jnp
ret
ljmp
je
insb
jmp
aas
cmp
cmp
sbb
dec
sub
das
xor
and
lds
sub
jb
fs
cmp
iret
mov
sbb
sub
push
out
test
pop
cmp
iret
add
pop
ljmp
in
xchg
mov
cmp
or
jmp
loopne
jno
in
jmp
sub
sub
mov
cmp
add
hlt
mov
sti
clc
leave
rol
cmpsl
jecxz
iret
cmp
in
pop
cmp
mov
cmp
jge
outsl
pusha
add
pop
pop
dec
out
out
push
lea
xchg
inc
loope
xlat
pop
add
xchg
iret
sbb
pop
inc
xor
scas
push
mov
fidivrl
bound
add
mov
icebp
jns
das
add
jl,pn
int
lds
loop
adc
add
xchg
adc
test
in
pop
test
xor
addb
ret
int
cmp
jno
or
pop
mov
jge
add
push
andl
push
fcmovu
mov
cmc
mov
stos
add
test
in
inc
fsubrs
je
in
inc
jge
cli
mov
pop
pop
inc
jo
in
movsb
mov
cwtl
xchg
mov
mov
add
js
dec
movsl
xchg
xchg
in
or
loop
jmp
fiaddl
scas
inc
dec
stc
xchg
push
push
push
ret
push
iret
in
insl
pop
mov
bound
clc
add
jg
lldt
das
test
in
or
dec
lahf
daa
jmp
or
fstps
push
in
movsb
ret
fcmove
stos
xchg
pop
fiadds
add
cltd
sbb
xor
add
aaa
cmp
lock
repnz
jle
or
cmc
sahf
scas
cwtl
mov
dec
cmc
adc
and
mov
mov
cmp
stos
cmc
scas
mov
push
and
jge
dec
repnz
int
in
pop
add
inc
pop
sbb
mov
push
leave
inc
xor
in
mov
xchg
inc
or
popf
notb
cmp
sub
cmp
jmp
outsl
ret
mov
pushf
mov
push
adc
mov
or
pop
notb
js
push
in
std
sbb
cmp
mov
jl
popa
fdivrl
push
rcll
outsb
sti
mov
push
add
mov
push
adcl
cmp
int
push
orl
je
addb
push
cmp
sahf
inc
and
or
mov
stos
mov
mov
ja
daa
fisubs
mov
or
fwait
repnz
pop
inc
sub
and
mov
movl
cmp
clc
das
inc
or
pushf
push
hlt
imul
mov
lcall
orl
sub
lcall
push
xor
and
int3
pusha
sub
or
pop
insl
push
addr16
aam
mov
or
idivb
lea
popl
jnp
push
loop
push
mov
jns
popa
adc
dec
push
daa
into
into
xor
mov
cmp
or
pop
mov
push
jmp
dec
adc
sbb
push
hlt
or
xor
aas
adc
mov
inc
test
pop
test
stos
jnp
xchg
sub
stos
or
mov
outsb
mov
imul
arpl
xlat
dec
adc
aaa
pop
pmulhuw
and
pop
je
push
inc
ffree
call
out
adc
clc
outsb
and
ror
loop
movsl
movsb
sbb
cwtl
sti
clc
stos
mov
cltd
pushf
jnp
dec
insl
shl
lret
sub
push
loop
or
push
popa
loopne
pop
push
daa
add
sahf
adc
xchg
xchg
notb
pop
int
in
imul
pop
sahf
xor
int3
cmp
xor
inc
mov
cmp
data16
hlt
jg
dec
push
movsb
xor
push
xor
pop
adc
fstps
clc
outsb
std
aam
ljmp
and
adc
xchg
adc
adc
jg
xchg
xchg
fcomps
jge
mov
push
dec
daa
xchg
cmp
mov
xchg
das
popl
int
push
adc
push
movl
popl
and
outsl
inc
or
notb
push
insb
mov
fidivrs
mov
mov
mov
add
loopne
cmp
sahf
add
mov
xchg
pop
dec
sub
jecxz
adc
psubusw
imul
jno
inc
hlt
repz
fidivrs
popf
into
adc
mov
inc
add
dec
or
push
call
enter
adc
sub
mov
push
push
in
clc
arpl
gs
test
add
pop
cld
pop
jae
loope
inc
sub
or
push
nop
cmc
adc
aad
jmp
lahf
xor
call
inc
inc
das
inc
leave
adc
popf
incb
arpl
lret
push
xorb
cmp
sahf
xor
inc
int3
adc
imul
fmuls
sub
push
and
popf
mov
call
and
push
addl
int3
lahf
xor
jmp
push
sub
sub
mov
xchg
fsubr
repnz
in
stc
dec
cmp
aam
push
or
jge
cs
cmc
push
jnp
xchg
mov
push
cmpl
push
aam
xor
call
fsubs
aaa
sti
dec
push
mov
scas
sub
mov
jle
xor
pop
pop
push
jno
mov
pop
push
ljmp
cwtl
mul
out
fdivrs
hlt
push
adc
lcall
mov
pop
mov
popa
xor
hlt
push
ret
out
cmp
or
xchg
or
pop
adc
jmp
ret
adc
test
ss
jnp
jns
loope
sub
and
aam
jge
mov
add
popl
pop
push
test
adc
jl
push
data16
enter
sub
enter
mov
xor
repnz
sub
arpl
or
mov
fsubs
inc
cmpsl
push
scas
mov
adcl
ret
call
dec
jnp
lods
xchg
sub
es
fldenv
cmpsb
xor
sbb
jge
mov
mov
leave
movsb
adc
movntps
mov
repnz
sub
mov
push
data16
pushf
scas
or
inc
sti
sti
mov
test
add
jnp
out
fucom
div
pushf
cmp
sbb
loop
bound
adc
push
daa
ret
mov
fdivrs
or
ss
movsb
repz
dec
fsubr
hlt
cli
xchg
jo
inc
ljmp
sbb
push
cli
fdivrs
hlt
jge
inc
icebp
movsb
push
adc
sti
clc
loopne
movsb
pop
test
jo
adc
stc
scas
cmp
ljmp
mov
jne
fdivrs
hlt
pop
cmpsb
pop
mul
xor
mov
addb
cli
xchg
pop
or
ljmp
cmpsl
stc
popa
jp
mov
and
repz
inc
adc
sbb
push
add
push
mov
test
push
fs
rcrl
push
rolb
popa
dec
xor
stos
insl
fdivrs
jl
xor
fcomps
jge
mov
pushf
xchg
popl
repz
inc
stc
in
push
outsl
lock
inc
xor
imul
pop
cmpsl
xchg
and
rcll
cmp
in
fs
sarb
mov
loope
mov
out
in
shlb
or
mov
cltd
cmp
add
loope
and
inc
add
mov
jp
das
mov
pop
and
jle
loope
int3
adc
add
mov
mov
add
shr
cld
fidivrl
mov
sti
lcall
sbb
stc
pop
sti
mov
push
andl
xchg
popl
mov
mov
push
scas
sbb
jbe
call
pop
or
inc
jmp
popf
inc
vorps
or
inc
je
fstps
and
shrl
mov
cmp
fwait
xchg
mov
xor
cltd
into
or
subl
or
into
fdiv
in
pop
xchg
sbb
or
jge
hlt
in
fxch
or
sub
adc
or
jle
hlt
adc
and
ljmp
icebp
mov
add
ljmp
xchg
sarl
jp
bound
sub
push
adc
inc
mov
test
pop
loope
inc
shlb
xchg
out
cmp
and
inc
dec
mov
mov
sub
mov
shl
popl
in
adc
push
push
and
and
cmp
xchg
cmp
fadds
push
push
repnz
mov
clc
mov
dec
loopne
add
cs
andl
stos
cmp
cmp
and
add
cmp
stc
mov
push
mov
loopne
hlt
or
scas
aaa
cli
adc
cmp
and
cwtl
ficomps
xor
and
sbb
lock
and
mov
mov
cli
cmp
add
and
stc
pop
mov
cltd
popf
cmp
in
add
fdivrs
jns
in
in
xor
imul
insl
loope
cmp
or
or
stc
hlt
in
repnz
or
into
or
add
cmp
in
shll
into
ljmp
sub
mov
ljmp
push
lods
and
push
clc
shlb
ljmp
push
pop
and
mov
and
ljmp
jbe
repnz
fdivrs
mov
sbb
or
pop
fdivrs
xor
insl
push
adc
inc
inc
dec
hlt
or
test
xchg
adc
outsl
xor
hlt
je
sbb
and
sti
mov
mov
data16
sub
inc
xlat
dec
jge
mov
xlat
xor
sti
out
xchg
int3
int3
adc
xchg
in
aam
sar
push
inc
xchg
push
fnstenv
push
decl
andl
addr16
mov
xor
int3
shlb
sbb
push
xor
or
lret
neg
push
movsl
popa
stos
ss
mov
mov
dec
rcl
push
pop
add
cmp
jnp
xor
popa
div
mov
popf
or
scas
imul
fisubl
mov
popa
and
and
hlt
mov
into
out
push
fs
cli
adc
les
adc
add
inc
add
addr16
push
jp
mov
daa
nop
inc
add
push
out
jp
leave
mov
adc
test
inc
mov
loop
fsubs
jge
mov
popf
mov
sahf
xor
xor
adc
jne
addr16
push
insl
fistpl
push
daa
lods
or
fdivrs
or
mov
mov
and
sbb
and
shrb
xor
into
rorb
push
adc
or
dec
shll
push
ret
sbb
or
add
ja
loop
xchg
imul
in
mov
aam
add
pop
inc
imul
movsl
jle
mov
mov
mov
stos
mov
movsl
out
in
ss
mov
movsl
mov
popa
divb
xor
sti
clc
xchg
and
pop
test
jg
or
cmpl
filds
push
repnz
pop
and
adc
jmp
divb
aam
cmp
push
push
jae
xchg
popf
jno
dec
test
addl
sub
in
mov
outsl
or
aas
mov
push
mov
pop
daa
cmp
jnp
mov
inc
repz
dec
fadds
jge
mov
cmp
cmp
xor
sub
or
pop
div
imul
or
loope
and
push
push
adc
pop
mov
mov
loope
jmp
out
and
add
mov
inc
hlt
outsl
nop
rorl
loop
mov
lret
arpl
popf
cld
jnp
mov
lock
cmp
mov
mov
popa
jle
outsl
push
ret
mov
popa
out
in
sahf
xor
es
int3
in
int
lcall
shl
inc
jnp
sub
aam
and
mov
cmc
lcall
in
xor
mov
push
and
mov
push
sub
adc
sub
cmp
sbb
rcrb
daa
and
ljmp
jae
and
stos
jmp
jo
xchg
xchg
add
mov
rclb
inc
out
xor
mov
cmp
popa
dec
pop
leave
push
ret
cmpsl
cmp
stos
pop
ud2
xchg
push
scas
hlt
in
sar
mov
call
and
sub
mov
sbb
rolb
and
sbb
shl
outsl
inc
sbb
xor
scas
xor
ret
push
cmp
in
adc
pushf
loop
jnp
cmp
pop
mov
xchg
pop
lcall
imul
push
cltd
in
shlb
hlt
sub
push
ffreep
or
jge
ljmp
aad
in
push
aaa
loop
xchg
cmp
jnp
jno
je
sub
and
jge
mov
and
xchg
sti
sti
jbe
jae
push
sbbl
jp
pop
sub
lahf
push
jp
lods
test
jo
and
or
test
dec
or
loop
cmp
add
popa
pusha
mov
inc
sbb
inc
add
sbb
or
test
insb
mov
jno
jl
jp
adc
add
xor
mov
cmpsl
data16
cmp
adc
mov
jb
into
rcrb
mov
sub
adc
leave
dec
call
dec
rcrb
add
mov
push
lcall
jle
ret
cltd
jge
push
xor
cmpl
cmpsl
test
insl
jno
add
cld
jbe
lahf
and
push
mov
call
ljmp
mov
sub
or
out
push
and
inc
inc
dec
add
xor
inc
ljmp
lods
push
inc
ljmp
movsb
or
cmp
xchg
sahf
xor
mov
rolb
popa
fsubs
jne
mov
sbbb
leave
xor
mov
adc
or
mov
dec
mov
pop
mov
cs
adc
arpl
inc
lea
adc
inc
adc
mov
test
int3
adc
je
dec
push
fsubs
addb
jmp
sub
and
in
xor
call
rol
adc
call
dec
rcrb
call
or
inc
enter
mov
xchg
sti
clc
cwtl
lds
test
jp
jnp
rolb
jns
mov
fdivrs
or
iret
idivb
outsb
push
and
xor
out
xchg
addb
pop
cltd
jbe
cmp
inc
pop
add
cmp
xchg
add
or
mov
hlt
in
mov
adc
dec
xchg
in
enter
fsubrs
inc
into
push
mov
inc
imul
jge
mov
mov
popl
dec
sbb
int3
adc
dec
movsl
in
clc
or
ror
xchg
xor
ror
fdiv
aas
stc
add
xor
sbb
ss
popa
push
xor
pop
shl
push
sbb
inc
xor
pushf
rcrb
jge
mov
stos
bound
sti
clc
inc
jg
pop
test
testl
add
in
fisubs
sbb
test
lahf
ds
jp
hlt
outsb
and
loopne
es
xlat
mov
ja
cmp
jnp
daa
mov
adc
pop
xchg
xor
mov
jge
mov
lock
addl
inc
cmp
inc
pop
add
out
test
add
or
clc
hlt
int
test
bound
add
movsb
xor
and
clc
jno
or
test
sub
jnp
test
fidivrl
adc
mov
loop
mov
lock
lret
les
jnp
jae
mov
mov
jl
push
test
in
lcall
hlt
in
or
dec
into
or
in
jne
adc
xor
in
xor
cld
inc
into
cmp
cmp
push
ljmp
test
ljmp
js
and
inc
jns
inc
int
push
mov
test
mov
stos
or
dec
loopne
and
cmp
out
cmp
fdivrs
inc
testl
inc
mov
xchg
mov
and
fdivrs
mov
stc
clc
cmp
and
cmp
jmp
cmp
popa
fdivrs
in
test
cmp
mov
sub
cmp
loope
cmp
add
cmp
jbe
cmp
popa
fdivrs
hlt
push
xor
add
int3
xor
mov
or
adc
out
sti
hlt
mov
jae
add
popa
lock
mov
dec
pop
cmp
inc
fsubs
pop
or
hlt
or
lret
xor
xor
int
lcall
and
mov
sarb
ret
jnp
popa
adc
sub
xor
stc
jecxz
lods
fcomp
mov
jp
es
mov
push
movsl
cmp
fdivrs
mov
in
add
dec
aas
fsubs
dec
andb
in
push
sbb
out
cmp
mov
cmp
mov
nopl
push
ret
or
popa
xlat
sub
sahf
daa
ret
aad
and
std
xchg
adc
inc
bnd
mov
xchg
inc
mov
mov
push
fs
jae
cmp
pop
jbe
push
addr16
inc
js
mov
or
fdiv
adc
adc
in
xchg
sbb
xor
mov
mov
popa
imul
push
ret
sti
cmp
sahf
xor
mov
cmp
aaa
dec
inc
xor
imul
push
pop
cmp
sbb
mov
fdivrs
add
add
fsts
or
cmp
mov
push
gs
push
or
adc
lea
cmp
loop
and
jmp
inc
push
daa
adc
push
jle
or
shl
adc
inc
xchg
in
cmp
or
cmp
mov
jb
cmpsb
push
xchg
push
aam
lahf
mov
add
dec
push
cmp
ds
adc
jp
add
push
sbb
jp
add
xor
xchg
and
jp
mov
fs
jnp
stos
and
cmp
mov
sub
addl
mov
test
sti
mov
les
jp
push
push
lahf
ds
scas
and
mov
cmp
lahf
xor
add
in
lock
jge
fcoms
mov
push
leave
cs
daa
and
or
cmp
jnp
cmp
mov
sbbb
retw
sti
cmpsl
cmp
xor
call
fimull
add
xchg
hlt
ret
or
inc
call
fcoms
pop
and
push
lahf
or
fisttps
push
add
sahf
cmp
mov
repnz
pop
test
ja
or
das
pusha
div
mov
sub
xchg
and
cli
add
sbb
je
and
inc
ljmp
and
orl
push
aad
mov
popl
lret
pop
fldcw
cmp
pop
and
clc
push
fdivrl
jnp
push
nop
adcb
pop
mov
imul
ss
clc
xor
loop
imul
movsl
or
dec
std
mov
bound
shlb
pop
mov
xor
sub
cmp
pop
jno
fcmovb
xchg
dec
imull
xchg
fdivrs
add
notl
loope
rcll
sub
test
adc
loope
call
rcl
ljmp
xor
inc
xchg
lcall
aas
add
outsl
cmp
sahf
xor
into
int3
adc
xor
adc
push
out
jo
in
daa
add
mov
mov
aas
pushl
call
adc
cwtl
adc
sub
dec
rcl
pop
adc
pop
push
call
xchg
rorb
call
push
rol
and
lret
jge
mov
clc
orl
push
pop
test
fnsave
mov
pop
push
pop
in
jb
pop
test
jg
adc
fcoms
jns
inc
comiss
jne
cmp
add
cmp
insb
scas
cmp
sbb
xor
push
dec
out
hlt
adc
push
in
sbbb
jbe
aam
inc
testl
jnp
fistps
inc
inc
push
push
xor
idivb
idivl
xor
adc
cmp
mov
jo
pop
gs
mov
mov
popl
xor
cmp
mov
push
fwait
xor
inc
jno
cltd
mov
mov
inc
mov
add
sti
mov
push
sub
mov
push
sbb
cmp
sahf
xor
pop
cmp
adc
lds
mov
push
fdivs
push
int
push
adc
add
cmp
std
cmp
jnp
push
mov
sub
in
push
mov
adc
pusha
mov
mulb
repz
push
jae
cmp
push
mov
add
push
test
jbe
add
push
mov
xchg
inc
jae
add
loop
loop
sbb
popa
mov
add
daa
mov
fdivrs
or
jne
adc
jno
in
mov
sti
stos
mov
jp
cmpb
dec
mov
test
push
cmpsl
enter
data16
xor
in
int
fs
jb
in
lods
in
xor
fsubr
xor
add
fmuls
inc
inc
push
jl
jp
pop
inc
js
and
sahf
add
sti
jnp
in
stos
adc
std
xor
addr16
and
icebp
cmpsb
or
pop
add
out
inc
pmuludq
add
es
jno
out
loope
mov
add
mov
out
sti
in
pop
add
xchg
mov
mov
daa
in
movsb
loopne
mov
lock
sbb
fildll
sbb
hlt
pop
xchg
dec
or
xchg
pop
mov
cmp
push
and
loopne
cmc
inc
pop
cli
mov
jb
pop
mov
mov
push
fs
clc
out
jne
sbbl
std
or
lea
push
cmp
movsl
sbb
xor
fcomp
cwtl
jge
mov
sti
push
lea
add
jb
sahf
scas
fdivrs
divl
jne
add
push
outsl
fdivrs
jl
xor
lds
fdivrs
sub
cmc
cmp
out
adc
andb
jo
adc
call
stos
rclb
call
jmp
pop
adc
pop
cs
sub
adc
lahf
int3
out
call
imul
and
fmul
cmpb
aad
stos
popl
cmpsb
jle
pop
test
fcompl
jnp
sbb
notb
je
aad
and
ja
and
fs
or
push
or
inc
enter
movsb
icebp
int
cmp
jns
or
xchg
adc
sbb
push
testl
mov
je
std
push
ret
fidivrs
sahf
xor
lock
jle
mov
and
hlt
jnp
jo
push
mov
cwtl
adc
sub
ljmp
repnz
or
push
adcl
in
hlt
push
sub
insb
inc
or
int
mov
sub
adc
push
mov
jle
jp
lods
pop
xchg
outsb
shlb
xchg
lret
stos
call
scas
rcr
adc
imul
fwait
aad
int3
cmp
scas
pop
sub
sub
and
cs
mov
and
scas
stos
sarb
jmp
popl
ljmp
pop
adc
lret
push
adc
inc
mov
jns
test
nop
cmp
dec
fdivrs
mov
fstl
add
rolb
fists
cmp
lret
push
mov
shl
or
mov
xor
or
mov
adc
sub
pop
push
hlt
or
xchg
stos
or
xor
mov
xchg
dec
jle
adc
leave
mov
psraw
mov
inc
cli
and
rcr
add
xchg
jbe
mov
or
int3
mov
pop
addl
cmp
or
dec
mov
out
dec
cmovl
push
lods
xchg
rorb
xchg
out
or
ljmp
push
and
int
mov
rcrb
add
cld
ljmp
and
mov
shll
lock
pop
xor
daa
push
inc
testl
mov
push
test
add
cmpsl
fdivrs
jnp
test
cmp
fdivrs
sub
cmp
inc
into
daa
fdivrs
repz
in
push
sbb
mov
inc
cmpsl
adc
jecxz
push
jge
or
xor
cmp
mov
inc
dec
or
sbb
addr16
loopne
mov
pop
add
pop
cmp
xchg
add
pop
add
sub
je
and
add
fsts
cmp
in
pop
and
dec
fsubs
imul
pop
loopne
cmp
sahf
xor
pop
int3
mov
lods
push
add
sahf
sbb
inc
mov
or
mov
sti
mov
push
and
mov
lret
pop
jp
xor
into
lds
fistpll
aam
pop
test
int3
adc
movb
fnstenv
jecxz
push
daa
mov
mov
mov
or
xor
mov
in
ja
mov
cmp
jle
imul
cmpsb
mov
add
out
fstl
jmp
out
lods
mov
in
cmpsb
movsb
cmp
sahf
xor
repnz
int3
adc
repnz
jmp
pop
iret
inc
das
push
pop
sub
push
adc
cmp
xor
mov
out
test
add
clc
test
js
scas
jnp
lods
outsl
rol
or
jne
mov
aad
addl
fildl
add
lahf
ds
stos
mov
sbb
add
sbb
mov
lcall
pusha
adc
inc
addr16
add
cmp
addr16
cmpsl
and
xlat
fistpl
jp
lds
out
add
stos
add
jp
pop
insl
jecxz
sub
rcl
int
mov
stc
in
dec
push
ret
lods
cmp
or
xor
mov
out
push
idivb
mov
adc
sbbl
inc
and
repnz
push
inc
push
fs
bound
add
fs
repnz
fcompl
jnp
mov
jno
sub
and
out
fldl
fidivs
pop
xor
pop
cli
dec
out
mov
fdivrs
clc
popl
mov
fsubl
test
cmp
pusha
adc
jle
hlt
sbb
push
std
mov
mov
jb
sarb
sahf
xor
int3
leave
lock
pop
add
test
xchg
dec
cli
sarb
mov
cmp
jmp
jp
mov
mov
mov
jge
mov
test
mov
sti
clc
or
adc
mov
dec
out
dec
fsubs
inc
push
aam
xchg
push
lea
ret
fistpll
jnp
push
cmp
sub
pop
mov
mov
sbb
mul
jge
mov
jae
add
movb
mov
add
push
cwtl
pop
inc
in
inc
push
cmp
push
pop
or
popl
js
mov
mov
cmp
jle
xor
cwtl
and
sub
shl
jge
mov
mov
popl
into
jne
pop
test
lret
or
inc
xchg
push
sahf
lds
test
ds
cmp
inc
cmp
aaa
cmpsl
push
adc
cmpsb
in
adc
bound
clc
lcall
mov
call
hlt
fnstcw
mov
js
cmc
push
xchg
jge
mov
mov
pop
test
les
fucom
notb
scas
dec
outsl
push
xor
xor
into
mov
fbld
add
cmp
hlt
or
adcl
xor
and
hlt
sbb
adc
jecxz
adc
sti
in
sbb
xchg
in
int
push
sahf
fnstenv
sti
std
push
daa
icebp
mov
lods
inc
or
pushf
insl
testb
cmpsl
rcrb
sub
cmp
inc
pop
and
inc
rcrb
xor
add
inc
negl
neg
xor
rcl
mov
mov
shrb
sbb
pop
xor
inc
rclb
rcrl
jb
xor
add
fiaddl
fistps
popf
and
lahf
xor
daa
scas
int3
adc
pop
in
add
mov
mov
adc
pop
mov
enter
popa
outsb
mov
push
ret
cs
sahf
xor
adc
or
pop
add
in
and
outsb
cld
into
or
ret
cmp
or
in
out
xchg
inc
jl
or
xchg
out
lahf
mov
lea
addr16
pop
cmpb
or
cmp
fdivr
jp
sub
lods
jge
adc
pusha
mov
inc
jp
rcr
adc
js
enter
std
rcrb
call
cmp
mov
jmp
mov
mov
fmulp
fnstcw
xchg
into
or
in
mov
out
sbb
scas
xlat
shlb
and
mov
and
dec
push
rcrb
cwtl
inc
movsl
push
movsl
enter
inc
movsb
sbb
sbb
xchg
push
push
mov
jp
popl
xchg
jl
pop
test
sub
jl
lahf
lods
fnstcw
inc
mov
push
or
out
mov
or
mov
stos
hlt
jmp
push
or
dec
mov
comiss
xor
pop
out
cmp
cmc
fdivrs
push
outsb
scas
cmp
mov
cmp
add
fsubrs
fists
sub
test
addr16
and
jnp
jp
sub
or
pop
std
push
shrl
lock
adc
push
adc
push
rorb
sbb
push
into
rcl
or
xchg
movsl
gs
push
mov
iret
jns
push
movsb
das
test
sti
hlt
jb
test
in
in
xor
popa
popa
mov
inc
mov
mov
or
jl
push
in
push
sbb
fnstcw
mov
divb
push
lea
out
sbb
adc
imul
imul
push
cld
mov
jmp
inc
repz
lahf
into
dec
mov
push
inc
mov
mov
sarl
inc
inc
cmp
and
mov
push
and
sti
clc
cli
mov
insb
jnp
xchg
mov
inc
lds
push
xchg
aam
push
shlb
xlat
sarb
inc
nop
mov
inc
add
dec
in
xchg
jp
mov
adc
jne
call
xchg
rcrb
outsl
cmp
cmp
lcall
loope
jnp
cmpsb
push
div
mov
and
loopw
dec
mov
lret
cmpsl
mov
jge
fdivrs
or
add
or
lret
std
mov
xor
data16
imul
dec
rorb
dec
nop
sub
or
sub
adc
out
add
jmp
or
xor
stos
hlt
adc
sbb
jg
mov
inc
pop
mov
lret
xor
popa
jno
push
ret
and
sahf
xor
cli
xchg
int3
cmp
ds
popa
mov
push
dec
cmc
and
mov
push
xor
bound
pop
cmp
sub
jne
fcoml
fmulp
mov
clc
sub
mov
jge
test
jo
pop
sbb
inc
les
addr16
and
jnp
icebp
xchg
div
das
adc
or
pop
outsl
push
fs
stos
inc
cmp
jge
mov
arpl
popl
enter
adc
es
rol
mov
fsubrs
lods
mov
push
or
pop
and
mov
pop
push
mov
and
sbb
xor
push
rcrb
xor
adc
jg
or
push
ret
cs
sahf
xor
add
ds
dec
rorb
lds
jae
ljmp
jns
and
or
mov
sub
pop
cmpsb
scas
fdivrs
sbb
bound
outsb
fdivrs
jecxz
inc
inc
or
adc
jg
dec
xor
mov
sbb
sbbl
xlat
div
js
iret
or
fildll
pop
mov
ret
jle
imul
sub
cli
push
int3
and
jle
rclb
ljmp
gs
jmp
push
lahf
sti
repnz
dec
stos
cmp
in
pop
sbb
cmp
mov
xchg
lret
and
mov
out
testb
in
jnp
popl
test
mov
ljmp
iret
pop
cmpsb
push
popl
xchg
jge
push
fmuls
push
popl
push
push
daa
mov
pop
fdivrs
or
and
cmp
imul
cmp
mov
mov
mov
or
movsb
add
pop
sarl
mov
jb
dec
or
add
inc
test
xchg
inc
hlt
cli
mov
or
mov
mov
sub
push
sub
nop
ret
sbb
stos
stc
fsubrs
jge
mov
inc
lcall
out
xor
int3
adc
dec
pusha
in
dec
pop
cmp
mov
stos
in
and
adc
mov
add
sbb
jp
xor
add
xchg
mov
adcl
lea
outsl
adc
xor
movsb
mov
lcall
mov
data16
sti
clc
cmp
addl
jnp
mov
shl
fmuls
mov
lods
jmp
decl
adc
or
cmp
add
cmp
ds
or
mov
xor
push
mov
cmpsb
in
mov
push
ds
fs
sahf
add
and
inc
mov
ret
popa
mov
lock
stc
fdivs
or
mov
ret
xor
or
xor
mov
hlt
or
subb
mov
or
mov
add
or
fcoms
pushf
inc
or
sti
clc
push
push
fwait
pop
mov
call
mov
cli
int
push
or
pop
and
mov
jne
adc
out
test
popf
hlt
or
roll
mov
rcrb
sbb
xor
sbb
call
jae
mov
push
mov
add
push
cmp
dec
pop
inc
rclb
adc
mov
insb
inc
es
sti
ljmp
lahf
inc
out
lret
notl
mov
push
fs
push
lea
adc
pop
mov
push
arpl
sub
xchg
cmp
out
xor
jge
mov
add
popl
and
pop
pushf
push
mov
in
sbb
xor
inc
lods
push
scas
mov
xor
subl
outsb
inc
enter
sarb
inc
mov
sbb
and
sbb
and
fnstsw
shl
push
sbb
in
repnz
xor
mov
stc
imull
add
insb
push
pop
adc
adc
push
xlat
jmp
or
test
and
mov
hlt
out
in
outsb
or
and
loop
das
mov
cmp
push
daa
les
mov
cmp
add
cmp
fisubrl
cmp
fdivrs
pusha
es
cmp
test
cmp
inc
pop
cmp
inc
adc
repnz
into
stos
fsubs
sbb
and
shlb
xor
mov
dec
arpl
jns
insb
ret
sbb
and
cmp
pop
inc
jge
mov
js
popl
or
rorl
inc
inc
adc
and
add
and
test
mov
inc
hlt
inc
inc
add
sub
cmpb
dec
push
xchg
dec
and
fcoms
xchg
cmp
sahf
xor
xchg
int3
adc
loop
fcomps
inc
mov
push
push
fwait
jl
ret
test
cmpb
loope
cmp
xorb
add
cmp
insb
mov
fs
fdivs
xchg
or
add
mov
enter
cs
faddl
rcl
int3
inc
sub
and
sbb
cmp
and
ret
cmp
jnp
mov
addr16
dec
mov
pusha
mov
outsb
xlat
loopne
cmp
and
in
mov
hlt
gs
add
out
jae
movsl
pop
add
lret
inc
and
in
into
adc
repnz
aam
frndint
fadds
push
mov
mov
adc
cmp
jnp
sbb
test
mov
mov
mov
enter
mov
cmp
ds
hlt
in
addb
mov
xor
hlt
in
dec
dec
xor
into
or
fdivr
hlt
in
popa
sub
cmp
adc
push
lcall
xchg
push
je
daa
fs
jle
adc
sbb
in
scas
sbb
cmp
cmp
cmp
testb
add
ljmp
mov
lods
sbb
fimuls
pop
mov
pop
pop
mov
insl
fwait
pop
push
sbb
aas
sub
into
or
rcr
hlt
in
mov
add
into
or
addl
xlat
jge
into
or
pop
insb
sahf
hlt
in
sub
adc
repnz
sbbb
out
pusha
fdivrs
cmp
hlt
aam
call
js
imul
add
lods
sbb
rolb
call
clc
sar
cmp
daa
mov
cmp
mov
popf
sti
mov
push
adcl
pop
push
sub
mov
inc
inc
jp
jo
pushf
fmull
xchg
xchg
sbb
stos
repz
cltd
and
xchg
cmpsb
jge
push
bound
test
xor
push
sbb
adc
sub
sub
fs
das
pushf
call
sahf
rorb
fdivrl
mov
ficomps
sbb
push
lcall
cmp
int3
jg
jge
mov
sahf
lcall
hlt
jmp
cmp
mov
push
xorl
cmp
sbb
push
xorl
add
outsl
mov
mov
fisubl
add
insb
clc
cmp
and
xor
dec
cli
lahf
jo,pt
mov
jp
adc
mov
shlb
cli
jp
daa
mov
sahf
xor
inc
push
je
and
stc
inc
mov
sbbl
jl
add
push
or
loope
pop
js
inc
add
in
adc
jp
fisttps
cld
inc
cmp
jmp
cmp
sub
popf
jp
inc
jl
andl
sbb
das
mov
clc
ret
add
test
mov
or
and
in
sub
mov
or
sbbl
popf
into
or
pop
hlt
in
rclb
into
or
pop
aam
hlt
in
mov
mov
fcom
sub
push
mov
mov
mov
pop
xchg
push
bound
cmp
cmp
inc
push
and
clc
fdivrs
jge
mov
cmp
mov
xor
or
xor
and
hlt
or
xor
or
rcr
notl
xor
ror
hlt
or
xor
push
fld
ja
xor
pop
push
insl
hlt
or
pusha
xchg
aaa
adc
pop
bound
notl
xor
popa
dec
aaa
in
mov
pop
adc
mov
in
rclb
out
dec
pop
roll
add
dec
push
cmp
adc
add
fcmovnbe
cmp
push
into
sbb
jae
mov
jbe
jp
xchg
mov
popl
clc
xor
fsubs
mov
sub
or
notb
xor
or
inc
or
ret
adc
pop
ret
in
cmp
sub
adc
jge
mov
lock
std
stos
inc
ficompl
jne
jp
ds
inc
jo
add
leave
xorl
adc
xor
pop
and
fdivrs
inc
addb
movsl
fisubrs
jae
xchg
hlt
in
lcall
jg
push
hlt
in
rorb
ror
testb
ficoms
push
andb
adc
xchg
cmp
rclb
pop
push
insl
movb
pop
cs
aas
dec
cmp
push
fdivrs
jmp
push
shlb
and
leave
ror
pop
sbb
shll
mov
bound
mov
mov
mov
movsl
call
inc
or
mov
imull
jno
rorb
push
mov
and
xchg
movsb
shlb
das
pop
cmp
push
and
in
fnstsw
test
in
movsl
mov
mov
rcll
cmp
mov
add
jge
sahf
xor
mov
adc
jbe
fsubs
jns
pop
push
inc
fldl
aaa
fwait
int3
xchg
jp
mov
add
adc
out
jge
inc
add
sbb
adc
adc
add
in
jmp
ja
push
inc
or
push
jns
in
jle
inc
out
xchg
jns
push
mov
mov
rclb
gs
add
jmp
iret
sahf
nop
jp
or
jge
jge
mov
aad
cmpl
mov
imul
xor
mov
sahf
add
cmpsl
loop
sti
mov
adc
push
daa
adcb
fdivrs
or
jb
inc
in
js
mov
or
popa
mov
shrb
aas
in
jae
negb
es
sbb
out
sahf
call
cmpsb
mov
int
cmc
cmp
out
fdivrs
or
jmp
mov
stos
xchg
and
adc
enter
jb
and
push
ret
lahf
cmp
jmp
aas
arpl
rcrb
int
shrl
clc
outsb
rclb
ljmp
push
stc
and
aas
out
rorb
inc
loope
ror
fldt
or
sub
mov
negl
mov
call
popa
push
fstps
jge
add
sbb
stc
and
jmp
or
jnp
fcompl
sub
in
mov
call
pop
push
xorl
mov
xorl
xchg
jp
pusha
cmp
adc
fisttpll
push
pop
pop
fisubs
fisubs
mov
in
arpl
adc
in
pop
pop
xchg
jge
jge
mov
or
or
push
dec
cltd
inc
leave
lcall
cmc
sub
inc
mov
mov
dec
popf
push
es
pop
test
pop
inc
das
div
test
or
mov
jno
mov
jecxz
popa
pushf
mov
add
xchg
je
adc
sub
scas
pop
add
pop
xchg
imul
pop
adc
pop
sbb
or
sub
jmp
in
sbb
and
sub
in
jg
jnp
into
or
std
bound
in
loopne
lds
or
out
ret
in
push
into
mov
into
or
adc
lods
fidivrs
pushf
hlt
in
push
incl
inc
mov
stc
mov
push
push
ljmp
pop
repz
das
ljmp
call
ljmp
add
and
scas
ljmp
gs
and
outsl
ljmp
pop
mov
pushf
das
ljmp
adc
jge
shrb
cmp
dec
adc
cli
mov
push
adc
mov
xor
or
sub
leave
adc
or
rcl
hlt
or
in
or
dec
cmp
aaa
adc
sbb
sbb
xor
push
sar
mov
and
push
xchg
rcll
movsl
roll
stos
jb
mov
pop
aas
or
mov
sbb
fmul
mov
in
sub
dec
into
or
je,pn
hlt
in
fstpl
es
test
hlt
in
xor
or
rorl
out
mov
cmp
adc
movsl
inc
mov
xor
fs
testb
inc
and
sub
imul
mov
and
add
cmp
jnp
ja
lret
cmp
mov
mov
mov
sti
mov
jp
les
fiadds
cmp
loope
jo
bound
inc
dec
cmp
jle
inc
jg
pop
outsl
fsub
and
mov
mov
adc
sahf
xor
dec
pop
int3
adc
push
in
mov
ja
fcomps
or
push
std
pop
repz
sub
lret
and
pushf
pop
cmp
jnp
cmpxchg
adc
jmp
sub
out
stos
enter
pop
daa
aad
sti
cmpsb
inc
and
jp
pusha
push
mov
lahf
ds
pop
jl
add
mov
data16
dec
adc
xchg
dec
cmpsb
or
cld
call
popa
sub
or
daa
push
and
mov
or
push
ja
adc
sbb
inc
sbb
popa
cmp
push
mov
and
pop
sahf
mov
and
aaa
xor
jae
add
insl
and
jae
inc
jns
mov
shl
pop
and
in
inc
rcrb
mov
leave
sub
xchg
sbb
dec
inc
ljmp
pushf
test
and
add
ret
xor
mov
sub
sub
cmp
mov
sbb
test
push
testb
loope
xchg
cmp
push
cmp
inc
adc
and
pop
add
in
out
inc
popa
into
clc
inc
movb
sub
test
sbb
inc
ljmp
jno
pop
and
sahf
push
lods
cmp
jnp
mov
mov
push
cmp
ja
ret
gs
or
and
loop
mov
loop
arpl
mov
ds
fnop
sbb
fs
cmp
inc
out
and
mov
xor
rclb
inc
leave
test
fmul
cmp
sahf
xor
mov
flds
test
sub
flds
mov
cltd
fdivrs
or
jbe
notb
inc
call
jno
cmp
js
adc
bound
addr16
icebp
add
pop
jg
daa
mov
or
loop
mov
pop
add
push
and
sahf
xor
pop
ror
loopne
mov
lock
popa
add
dec
adc
push
cltd
shrl
add
enter
shlb
cwtl
xlat
inc
call
test
bound
sub
inc
fiadds
lcall
adc
and
test
sbb
sti
clc
and
mov
xchg
div
inc
adc
xor
jecxz
std
mov
outsb
stos
in
cmp
jnp
add
arpl
sub
mov
int
fdivs
movsl
popf
ds
mov
lahf
push
rorb
jp
pop
pop
pop
push
mov
jl
lods
out
inc
hlt
in
and
into
adc
movb
pop
push
aas
fdivs
push
or
ret
stc
cmp
jnp
add
adc
mov
jnp
inc
and
mov
icebp
sub
loopne
cmp
or
and
lahf
loop
aaa
mov
and
lahf
fdivrs
aaa
test
cmp
add
lret
cmp
push
add
scas
pop
fdivrs
pop
stos
outsl
inc
cmp
jnp
aam
adc
mov
and
jge
mov
test
cmp
or
rorb
and
or
in
in
inc
mov
push
test
cmp
popa
jno
ds
fs
push
arpl
jle
addr16
fdivrs
or
cs
notb
push
sbb
dec
cmp
mov
icebp
mov
sti
dec
or
ret
in
popa
mov
xor
hlt
rcll
popl
xlat
lahf
sbb
aas
pop
popl
and
in
cltd
sbb
inc
mov
ret
push
insb
xchg
sbbl
mov
test
and
or
out
cs
sbb
fsts
shll
push
addl
jg
push
fs
orl
fs
mov
mov
push
fs
gs
jns
orb
insl
fidivrl
scas
sbb
adc
in
sub
daa
and
fdivs
inc
jge
mov
sbb
rep
sahf
xor
jne
mov
ja
stos
test
pop
push
mov
jle
aam
sbb
mov
sub
jle
adc
or
lods
fs
call
shl
adc
mov
mov
mov
stos
push
imul
arpl
dec
cmp
sahf
add
jae
and
or
inc
jnp
xor
fldl
mov
dec
loopne
push
ret
lds
sahf
xor
in
adc
hlt
dec
out
jp
cmp
add
or
popf
loopne
or
push
das
cli
adc
ret
and
jns
sbb
cmp
pusha
shlb
mov
jnp
xor
mov
into
mov
inc
loopne
pop
sbb
dec
fs
cld
mov
mov
out
in
sarl
jns
out
cmpsl
inc
jl
add
imul
cmp
push
sahf
in
cmp
ret
fwait
and
cli
arpl
mov
sbb
js
mov
jp
cmpsl
sahf
xor
sahf
loop
add
mov
xor
add
mov
mov
or
push
div
in
or
and
loop
or
mov
imull
bound
ss
fbstp
fdivrs
lods
or
insl
cmp
sbb
xor
jmp
add
sub
enter
and
jge
mov
sbb
test
outsl
adc
test
loope
fdiv
hlt
leave
loope
or
mov
repz
push
fbstp
cmp
stos
push
push
adc
xchg
and
mov
fs
push
push
and
out
icebp
push
push
sub
adc
aad
pop
and
or
sbb
jge
mov
aad
cmp
or
or
mov
enter
cmp
add
lcall
outsl
cmp
jne
cmp
add
push
mov
ds
sub
jb
shl
adc
testl
cmp
mov
and
xchg
push
ret
xchg
sahf
xor
add
shrb
fcoml
or
aad
and
pushf
mov
fnstcw
jno
sbb
fs
push
add
mov
add
loopne
leave
cmp
jnp
cli
cli
cwtl
adc
mov
and
jge
mov
xchg
popl
fucom
popl
test
xchg
sub
sub
fnstcw
pop
jbe
add
cmp
shrl
xchg
ljmp
mov
fdivrs
lea
or
push
fdivrs
lds
cmpl
mov
aas
nop
and
in
jns
jge
mov
insl
sbb
sti
cmc
daa
test
int3
or
insl
and
sbb
or
shl
in
or
or
adc
out
and
xlat
ljmp
stos
push
and
ljmp
pop
cmp
jnp
shr
xchg
adc
xchg
or
sub
cld
cmp
mov
and
imul
sub
pop
jge
scas
stos
shlb
sbb
xor
jmp
cltd
or
add
xor
mov
out
addr16
sub
or
xor
loop
cli
push
and
sub
in
cmp
jnp
jge
inc
adc
inc
cmp
and
fsubr
sahf
jge
mov
jge
popl
mov
dec
dec
dec
lock
movsl
or
cmc
mov
fnsave
xor
mov
inc
jp
in
movsl
and
pop
jne
inc
push
jae
mov
xchg
and
sahf
xor
pop
cld
int3
adc
or
popa
mov
dec
push
daa
enter
mov
or
insb
je
in
sub
sbb
push
iret
pop
or
lret
out
lcall
xor
or
add
out
push
into
lret
test
nop
test
les
int3
sbb
loopne
push
daa
sbb
enter
loope
js
leave
pop
fdivs
jge
mov
and
mov
xchg
pop
sahf
xor
ds
lret
in
fdivrl
xchg
popa
mov
sbbl
adc
mov
mov
or
int
jge
mov
mov
popl
mov
jg
and
push
push
sub
cs
jmp
add
cmp
cmp
stos
pop
add
loope
lret
negb
int3
adc
mov
push
cmp
inc
inc
pop
push
sub
xor
cmpsb
imul
xor
cltd
mov
sbb
xor
inc
push
hlt
or
cmpsb
cvtps2pi
xor
sbb
hlt
or
lods
pop
insl
adc
mov
mov
fsubr
in
call
popl
or
aad
inc
jnp
mov
xor
in
dec
mov
sbb
lods
hlt
in
and
add
inc
in
hlt
in
rcl
pop
sub
or
mov
out
jmp
mov
cmp
xchg
jmp
inc
and
fisubrs
cmp
jnp
cmc
aad
adc
push
xchg
xchg
pop
and
jge
mov
test
sarb
pop
add
adc
cmp
cs
add
cmp
test
pop
add
cli
fildll
out
inc
shrl
stos
cmp
sahf
xor
int3
jl
mov
lret
test
push
cmp
sbb
inc
mov
neg
in
imul
popl
es
push
xchg
out
mov
push
pusha
pop
std
lret
jp
rcll
mov
adc
inc
add
lret
pop
repnz
adc
or
cmp
add
mov
in
push
fstps
push
mov
jp
mov
add
icebp
push
ret
sub
or
and
mov
cld
popa
movsl
add
push
cmp
pushf
adc
jl
push
sub
push
xchg
mov
or
push
jp
push
lods
mov
leave
mov
jp
js
inc
mov
sarl
and
add
mov
mov
ss
popa
adc
cmpsb
adc
mov
or
xchg
idivb
jge
mov
sub
mov
movsb
pop
xor
mov
push
or
jb
xlat
hlt
into
pop
test
cli
rolb
mov
call
mov
xor
popa
fnstcw
sbb
mov
or
mov
notb
and
in
dec
sbb
cmp
mov
jle
jle
adc
or
in
inc
or
popf
mov
xchg
jbe
mov
arpl
inc
mov
mov
pop
inc
xchg
jl
mov
dec
popa
xchg
mov
push
inc
sbb
call
ret
lcall
shlb
outsl
sub
mov
and
dec
mov
out
mov
test
addl
sbb
ds
inc
jp
xor
xor
repz
fstpt
sbb
xor
call
clc
pop
mov
nop
loopne
inc
and
cmpsl
gs
movsl
dec
jp
cmp
movsl
mov
push
pusha
mov
pop
js
push
ret
ljmp
xor
inc
cmp
dec
xchg
and
orb
push
packuswb
push
add
inc
and
mov
leave
xchg
loope
into
scas
loope
aas
sahf
hlt
call
imul
rcr
leave
ficompl
sbb
fidivrs
aas
mov
les
push
jp
outsl
add
neg
or
inc
push
cld
fsubs
and
push
das
fnstsw
jnp
lock
mov
std
and
jne
or
jge
mov
inc
pop
popl
out
and
test
jle
ss
fmuls
inc
ja
and
mov
jno
inc
arpl
pusha
repz
add
inc
xchg
imul
inc
jecxz
jno
mov
roll
inc
pcmpgtd
push
mov
jbe
addr16
jnp
stos
add
adc
jp
popa
sahf
and
lcall
orl
cmp
sti
push
inc
sbb
sub
mov
push
orl
push
adcl
cmp
xorl
xor
jbe
inc
jnp
pmaxsw
hlt
cmpb
or
cmp
mov
aaa
popa
outsl
xchg
imul
adc
inc
push
mov
lcall
mov
pop
sub
pusha
or
cmp
pop
popl
push
fiaddl
cmp
fs
fwait
cmp
adcl
fcomi
or
xor
adc
hlt
or
outsb
loop
adc
nop
xchg
int3
and
mov
gs
lods
pop
popl
cmpsl
adc
pop
lahf
inc
je
in
add
add
push
inc
pusha
pop
push
repnz
and
xchg
les
jnp
aas
mov
lret
adc
and
pusha
movsl
xor
into
movsl
mov
inc
jg
mov
add
inc
mov
inc
loopne
movsl
nop
inc
or
shlb
movsb
shlb
add
ljmp
testb
xchg
mov
pop
and
inc
lret
test
fs
aam
pop
adc
jno
xchg
jne
jge
mov
pop
lcall
icebp
push
popa
inc
sbb
fbld
ficompl
pop
mov
lcall
pop
imull
xchg
dec
sbb
hlt
cmp
or
fsubl
adc
push
daa
adc
addb
pop
fsubl
in
or
jnp
cmp
mov
and
ss
ret
cmp
sahf
xor
int3
cli
mov
jne
xchg
inc
fiadds
fnstcw
or
push
push
cmpsb
inc
mov
sahf
pop
pop
push
fs
movsb
cli
pop
and
mov
fs
int3
dec
sbb
xchg
lahf
imul
mov
and
loop
sbb
xchg
cwtl
and
fistpl
pop
push
fs
fbld
and
leave
pop
outsl
popf
push
addr16
into
fsubs
and
fdivs
jge
mov
sub
and
in
and
xchg
mov
iret
addr16
push
cmp
or
jl
es
incb
lcall
inc
lcall
mov
push
addl
cli
les
push
andl
pop
test
rcrb
pop
or
das
pop
mov
lret
stc
adc
in
xor
mov
adc
mov
orb
and
mov
and
adcl
cmp
mov
es
xor
out
pushf
aaa
sti
call
rclb
cmp
cmp
xchg
out
gs
mov
mov
stos
jecxz
ret
lock
sahf
xor
insb
jb
adc
pop
dec
in
cli
xchg
imul
lahf
inc
add
sar
pop
jp
dec
mov
pop
inc
add
sbb
sbb
add
xchg
add
jp
mov
rcr
inc
or
sbb
adc
cmpsl
fs
mov
xchg
pop
cmp
mov
add
push
fucom
push
push
fstps
add
and
in
sbb
inc
call
pop
or
sub
hlt
inc
mov
loop
std
mov
popa
inc
ret
and
std
inc
push
addr16
inc
cmp
fwait
inc
pop
adc
push
andl
loopne
jecxz
push
mov
and
lahf
ds
cmp
jp
jmp
cmc
div
sahf
mov
or
imul
mov
adc
sbb
in
les
ds
cmp
mov
int
mov
das
sbb
push
ret
adc
push
pop
aam
xchg
hlt
lcall
ret
pop
xlat
shlb
push
and
shr
daa
sbb
rclb
mov
jmp
popl
adc
push
daa
mov
push
fadds
andb
fcoms
jge
mov
shrb
daa
stos
sbb
sahf
ds
jl
mov
cs
or
lahf
int3
jp
jmp
push
lahf
repnz
or
jb
xchg
ret
sarl
dec
mov
push
inc
push
popf
xchg
push
fs
outsl
and
aam
ret
notb
dec
cmp
xor
add
scas
cmp
jnp
pop
jp
adc
mov
sub
fcomps
jmp
mov
dec
in
or
add
dec
call
push
or
ret
scas
xchg
or
iret
call
fdivs
sbb
push
mov
loopne
ret
sbb
in
lock
lret
cmp
mov
lds
xor
stc
adc
xor
or
in
ret
mov
vpmaskmovq
pop
jno
mov
loope
mov
xor
into
fisttpll
notb
cmc
pop
insb
in
pushf
sbb
add
xchg
mov
mov
sbb
mov
dec
cmp
push
ret
mov
popa
pop
lds
push
ja
adc
dec
jp
jb
stc
push
lahf
ja,pt
xrelease
aam
xor
or
leave
call
rorl
lret
push
pop
icebp
adc
lcall
push
sbb
push
cmp
mov
inc
push
mov
aaa
xlat
add
ret
insb
cmp
sahf
dec
and
loop
jg
jmp
popa
ja
mov
and
sahf
jle
and
or
xor
fs
pop
fwait
mull
daa
add
sbb
or
jp
je
jo
inc
add
out
bnd
int
sti
adc
inc
ss
nop
and
fadds
out
jge
mov
dec
pop
popl
xchg
call
fwait
nop
in
push
movb
push
clc
jecxz
push
xchg
push
aam
ror
aad
push
jns
cmp
push
inc
add
loope
movsl
unpcklps
mov
or
inc
aad
inc
add
loopne
jp
inc
adc
repz
fmul
ret
jge
mov
stos
xchg
popl
mov
xlat
mov
jnp
iret
imul
xchg
ljmp
iret
fcoms
mov
jp
jge
stos
popl
shlb
push
rcll
pop
ror
push
and
sub
jnp
je
cmp
mov
jge
mov
aad
negl
ret
cmp
sahf
dec
and
mov
cmp
push
and
imul
jp
mov
sub
mov
flds
adc
mov
sub
xchg
movsb
psubsb
roll
mov
daa
add
addb
push
in
roll
lcall
and
imul
mov
vmovups
ljmp
push
xchg
lahf
push
scas
lods
popf
and
fistps
push
outsb
jp
psubusb
jg
cs
sub
sbb
mov
sub
js
shrb
adc
scas
call
stos
lcall
sbbb
jl
xchg
cmp
sahf
add
imul
mov
inc
repnz
popa
xchg
jo
push
daa
insl
sub
mov
or
aaa
notb
mov
in
sti
mov
jp
adc
sub
and
add
and
insl
lahf
fsts
pop
aaa
jp
mov
jp,pt
idivl
nop
cltd
mov
fcoml
inc
fldt
dec
and
dec
sub
in
push
sbb
inc
add
adcb
mov
dec
pop
add
adc
dec
cmp
mov
sub
in
movsl
or
in
out
jae
push
cmp
int3
fdivrs
movsl
sbb
add
push
jnp
dec
ficoml
outsw
pushl
pop
popa
scas
xorl
cmpsb
ret
icebp
cmp
jmp
cmp
jno
mov
add
jmp
stos
fdivrs
adc
jno
cmp
adc
imul
mov
pop
xor
or
xchg
sub
fisubrs
jns
loope
bound
test
mov
or
mov
inc
pop
push
out
jp
pop
mov
shll
repz
jnp
lea
clc
out
jge
mov
dec
cltd
fistps
xchg
pop
sub
mov
push
cmp
mov
push
xor
cld
cmp
or
cmp
xchg
inc
dec
inc
sub
stos
adc
popl
into
mov
test
sbb
dec
jmp
int
popl
add
push
sub
ja
aam
or
ja
push
ret
int3
cmp
sahf
add
and
xor
imul
dec
jp
adc
sarb
push
jge
mov
int
fildll
enter
call
lcall
push
mov
mov
ljmp
cmpsb
fsubrs
inc
xchg
push
xor
mov
iret
ja
and
or
fdivrs
jnp
insl
and
test
fucom
mov
dec
dec
cmp
into
lds
scas
aad
jecxz
frstor
xchg
mov
movsl
mov
mov
push
loope
inc
add
mov
negb
inc
add
lods
dec
out
in
lahf
fs
sub
sub
mov
mov
jnp
mov
sbb
hlt
out
sbb
or
int
loope
lcall
cmp
jnp
xchg
sbb
cmp
mov
xor
cmp
addl
push
cmpl
jne
xchg
mov
sub
sti
mov
push
and
mov
sahf
mov
scas
in
xchg
mov
notb
notl
and
jmp
inc
cmp
adc
or
aas
hlt
or
and
and
hlt
or
enter
mov
xor
or
jge
mov
mov
jnp
xor
inc
jg
in
mov
xor
stc
mov
pop
roll
sbb
pop
shll
jge
loop
cmp
in
add
outsb
xlat
mov
loope
xor
jo
inc
aad
lods
xor
push
dec
mov
ret
lahf
or
xor
ds
clc
xchg
cltd
jp
mov
idivb
pop
repnz
sbb
int
pop
xchg
test
inc
mov
push
iret
out
and
cmp
cmp
fdivrs
sbb
add
cmp
and
cmp
add
dec
imul
sti
mov
adc
or
addr16
fisttps
mov
inc
cli
mov
dec
adc
push
iret
pop
daa
xchg
orl
mov
mov
push
in
push
sbb
popl
push
xchg
and
cmp
add
pop
fdivs
jle
xchg
and
or
push
rolb
cmc
add
sub
and
jge
mov
rorb
in
xor
mov
jmp
in
mov
mov
fsubr
add
push
add
add
sbb
adc
xor
and
js
mov
lahf
movsl
inc
add
popf
mov
jmp
pop
in
shrb
call
and
dec
adc
notb
inc
iret
loope
push
les
pusha
pusha
notb
dec
cmp
in
jns
jne
cmp
mov
bound
push
fsubrl
inc
div
test
and
hlt
mov
mov
sbb
push
pop
das
ljmp
lahf
fdivrs
xchg
ljmp
lds
cmp
mov
inc
cmp
pop
fdivrs
lret
inc
jp
dec
inc
fadds
mov
lret
popl
rcrl
filds
test
sub
jo
hlt
mov
and
jecxz
sarl
and
mov
sahf
jp
call
add
sbb
pop
jp
clc
aaa
iret
fwait
inc
add
insl
xchg
push
jp
add
fildl
jp
pop
fidivrs
cld
cwtl
pop
sbb
rcl
fdivs
mov
test
mov
sti
clc
stc
xchg
mov
test
xchg
fisubs
xchg
or
push
les
xchg
inc
pop
inc
imul
cwtl
and
mov
enter
cli
cltd
mov
and
hlt
adc
mov
adcl
fs
cmp
xlat
and
test
clc
fs
mov
cmp
xlat
and
test
rcrl
sub
outsl
jns
add
scas
jl
jp
jo
mov
data16
sub
stc
shlb
call
cmp
je
xchg
cld
call
cmp
loop
mov
test
jnp
xchg
sub
div
imul
or
out
sub
sarb
or
les
ficompl
jp
data16
inc
popl
xor
sbb
popl
dec
jb
fdivrs
jge
push
inc
or
ret
push
cmp
jge
cmp
mov
push
out
popa
sbb
sbb
ret
out
popa
inc
ret
rcrb
cmp
dec
sbb
pop
push
or
inc
popl
mov
nop
xchg
inc
add
fcmovu
cmp
or
sarb
fdivrs
pop
sahf
add
mov
cmp
adc
xchg
and
lods
sbb
inc
cmp
mov
aaa
sub
push
ret
cltd
cmp
sahf
xor
jl
insb
mov
xchg
lret
sbb
bound
sbb
faddl
shlb
fld1
sub
inc
sbb
sbbb
cmc
dec
inc
pop
lcall
pop
and
inc
pushf
cltd
mov
clc
dec
cmpb
push
popa
div
in
pop
or
iret
daa
loop
sub
and
rorl
cmp
jnp
jp
push
adc
mov
and
andl
rcr
adc
xchg
cmp
mov
cmpb
xchg
inc
xlat
std
pop
add
fcomi
cmp
cmp
cmp
hlt
in
fwait
sub
jge
or
imul
hlt
hlt
test
in
lea
out
xor
in
ja
jbe
lret
popa
or
movsb
push
daa
jle
test
mov
or
or
mov
or
test
lahf
cmp
clc
cmp
bnd
hlt
nop
cmc
and
pop
xchg
shll
jp
pusha
pop
insl
popl
push
out
ja
jne
jp
sub
mov
inc
mov
out
pusha
divb
jge
mov
ljmp
sti
clc
mov
fs
jnp
sub
div
dec
pop
mov
psrad
das
mov
popa
xchg
rclb
daa
lret
fdivrs
add
fs
ss
push
dec
xor
rorl
idivb
pusha
mov
jae
add
jb
mov
loope
pop
xlat
mov
add
add
jbe
loope
mov
jno
notb
aam
sub
sbb
mov
mov
jmp
sbb
popa
in
sbb
int3
or
xor
hlt
in
cmpsl
xchg
sub
cmp
xchg
shr
inc
cli
mov
jp
adc
xchg
test
jne
cmp
pop
sbb
cmp
xor
test
jb
adc
mov
in
sahf
sbb
push
cmp
mov
test
mov
cmp
sahf
xor
roll
inc
mov
and
adc
clc
mov
lahf
xor
jp,pn
adc
ds
fucomp
jp
cmpxchg
hlt
lahf
ds
sti
jmp
outsb
or
xchg
dec
inc
std
add
aad
daa
push
es
fdivrs
or
xchg
xlat
notb
cmp
shr
inc
testb
aam
iret
jge
mov
mov
ljmp
xchg
dec
inc
negb
xor
sti
mov
push
andb
lods
sahf
xor
cmpsl
dec
in
loopne
push
sub
pop
mov
sbb
fnstenv
and
xor
cmp
sbb
fs
mov
mov
lahf
add
in
jp
mov
jnp
nop
scas
xor
adc
inc
fwait
cmp
mov
lcall
push
ret
push
cmp
sahf
xor
pushl
daa
inc
roll
je
mov
push
inc
xchg
inc
ljmp
and
inc
push
inc
sbb
int
dec
mov
adc
mov
mov
fwait
popa
fs
lcall
mov
cmp
or
jge
mov
jp
popl
pop
push
cmp
in
loop
or
into
or
imul
cmp
or
leave
push
hlt
in
fstpt
xchg
into
or
push
adc
hlt
add
pop
or
xchg
or
cmpsl
outsb
mov
jecxz
outsb
adc
std
inc
test
mov
in
stos
ds
ret
cli
cmp
or
call
or
push
call
dec
or
adc
rorl
or
aad
mov
push
pusha
iret
or
loop
cpuid
fdivs
outsb
and
jnp
rcr
adc
int3
jne
xlat
jnp
in
cmp
iret
fdivrs
jg
addr16
cmp
fdivrs
sub
movsl
push
cmp
dec
fdivrs
pop
jl
adc
mov
outsl
adc
or
xor
stc
sub
hlt
or
push
ret
push
hlt
or
sub
adc
mov
or
pop
push
adc
in
mov
push
insl
test
movsl
hlt
jne
dec
mov
pop
adc
and
inc
inc
or
dec
movsl
lods
int3
mov
mov
push
fists
or
int
movsl
ljmp
insb
and
div
mov
dec
movsl
mov
inc
mov
jbe
movsl
das
pop
mov
jne
add
jge
inc
mov
mov
xchg
inc
insb
inc
mov
mov
sub
or
mov
mov
in
inc
movsb
xchg
mov
fiadds
inc
jb
shrl
outsl
add
push
cmp
jnp
aam
cmp
sub
jns
mov
pushf
into
fmul
jecxz
test
testb
and
sahf
imul
addr16
or
adcl
mov
push
orl
push
xchg
icebp
push
subl
movsb
test
loopne
jp
sbbb
cmp
and
mov
cltd
popa
repz
push
daa
loope
fdivrs
or
sub
xor
xorb
xchg
fwait
hlt
out
mov
inc
enter
movsl
repnz
mov
cmp
add
outsl
mov
and
loope
cmp
scas
pop
cmp
ss
hlt
hlt
ret
dec
jns
mov
int3
je
mov
popa
xchg
cmp
push
daa
ss
and
inc
or
pop
pushf
cmp
add
cmp
mov
lret
test
inc
insb
fwait
loop
sub
addl
adc
subl
rcrl
lahf
popa
fstl
leave
lahf
xor
loope
adc
xor
ficoml
clc
aas
mov
pop
inc
or
dec
notb
fsts
jnp
cmp
mov
fistl
popa
lods
cmp
ret
inc
cmp
sahf
cmp
jne
sub
or
sbb
adc
pop
and
repnz
sbb
xor
mov
lock
and
lods
mov
into
daa
mov
cmp
in
into
adc
les
push
dec
fnstcw
ret
lret
push
daa
call
dec
ljmp
notb
inc
mov
icebp
sbb
cmp
mov
jae
popa
xor
sbb
rcll
repnz
in
mov
fs
fsubrs
inc
inc
notl
xor
push
push
push
and
test
push
xchg
sub
bound
mov
ret
dec
cmp
pop
mov
add
mov
inc
lcall
xchg
daa
push
ret
popa
mov
js
xor
add
hlt
mov
sub
popa
in
mov
test
mov
or
xchg
push
mov
and
cmp
xchg
xor
mov
adc
mov
std
xlat
cmp
cmp
arpl
add
out
cmp
out
inc
and
insb
jnp
push
fwait
cmp
mov
mov
mov
mov
inc
movq
and
push
aas
cmp
in
cmp
ljmp
into
movsl
fdivrs
sbb
mov
adc
aas
sbb
push
cmp
mov
icebp
dec
in
push
ret
lret
sahf
adc
int3
lock
mov
xchg
inc
inc
inc
mov
orl
jno
pop
add
sbb
mov
daa
inc
and
pop
lods
sub
adc
fmuls
jge
mov
jle
cmp
or
adc
stc
call
mov
lret
mov
fsubl
jae
jmp
hlt
sbb
or
cmp
movsl
hlt
lock
mov
data16
rdpmc
mov
test
out
jnp
mov
shll
jge
mov
out
sbb
inc
jno
ret
and
push
xchg
inc
add
lahf
jne,pt
stc
pop
jp
push
aaa
das
or
sub
ret
in
mov
xor
pop
inc
inc
lcall
fistpll
inc
test
inc
mov
les
add
add
pusha
pop
jge
mov
popa
ja
xlat
sahf
xor
sub
xor
mov
sub
adc
flds
dec
sarb
rcll
inc
add
enter
loope
nop
mov
icebp
aam
jp
push
sahf
cmp
addb
jle
popl
in
int
mov
pop
out
fcomps
inc
cmp
js
push
pop
inc
jo
and
fsubrs
jge
mov
ret
mov
popf
sti
sti
inc
jnp
inc
push
adc
mov
push
xchg
daa
hlt
pop
lahf
dec
adc
hlt
addr16
fisttps
test
cld
hlt
movsb
sbb
loope
enter
mov
ficompl
popa
stos
dec
and
and
aas
and
fisubrs
mov
xor
sahf
push
fs
fstpl
rcrb
or
popf
xchg
dec
push
push
imul
inc
or
inc
out
sbb
xor
cvtps2pi
mov
sbb
ret
lock
cmp
add
popa
and
aas
xor
pop
jmp
stc
lret
push
mov
in
sbb
clc
into
or
fnstcw
mov
push
and
loope
xor
mov
cmp
jnp
lret
adc
mov
call
and
push
ss
call
cmp
jmp
cli
pop
mov
push
jns
notl
pop
mov
sub
ljmp
cmp
ret
xchg
stc
rcl
and
jge
mov
arpl
popl
dec
and
int3
adc
int
in
jbe
jnp
fmuls
inc
and
push
shlb
and
xchg
cmp
in
sbb
stos
test
rolb
mov
sub
aas
jge
mov
push
lcall
nopl
lcall
add
popl
stc
dec
mov
inc
jnp
mov
div
pop
sbb
or
adc
loop
mov
stc
jg
push
cmp
cmp
adc
inc
mov
fnstcw
jge
mov
sti
mov
push
sbbl
mov
push
subl
fwait
or
push
pushf
fldcw
jge
or
loop
add
rorb
push
daa
rcrl
mov
cs
sbb
cmp
movsl
stos
sub
jp
pusha
add
add
sub
test
or
jp
andl
inc
add
pop
loopne
jp
sbb
dec
adc
mov
and
mov
adc
jge
mov
out
fisttpll
sti
clc
mov
xchg
push
cmp
hlt
mov
and
or
adc
sti
mov
or
push
daa
aad
jnp
xchg
or
xor
dec
and
or
sahf
jg
adc
jecxz
mov
hlt
or
sarl
mov
js,pt
sub
fimull
cmp
rcll
xor
test
insl
ret
sti
in
push
pop
test
jmp
jnp
xchg
nop
test
mov
cwtl
hlt
sbb
icebp
imul
adc
mov
sub
mov
out
adc
jne
fsubrs
inc
daa
push
ret
cmp
stos
test
int
xor
push
or
or
imul
in
lret
scas
push
or
or
stos
pop
jmp
push
inc
mov
mov
inc
xor
mov
xchg
inc
sub
lock
adc
push
daa
shrb
sub
clc
add
sbbb
mov
cltd
neg
pop
out
and
movsb
push
rcrb
and
bound
popl
mov
inc
mov
outsl
cmp
cmc
scas
cmp
jnp
mov
mov
data16
push
ret
lds
or
and
jbe
xchg
mov
shlb
jp
dec
add
popl
inc
rcll
add
cmp
aam
cmp
mov
xchg
adc
cwtl
push
sbb
sub
sbb
fmuls
jge
mov
and
test
adc
sti
clc
stc
cmp
orb
fs
out
xchg
pop
add
out
sbb
ror
xor
testb
lods
mov
cmp
ss
add
xchg
jnp
repz
or
and
xchg
loop
shll
cmp
popa
or
cmc
push
and
add
fistpl
inc
mov
fs
pop
ja
andl
mov
adcl
add
xchg
mull
leave
pop
mov
idivl
xor
cmpsb
xchg
fsubs
jge
mov
push
mov
xchg
jmp
cltd
icebp
rcr
lock
dec
mov
pop
cmp
sub
adc
out
rol
repnz
mov
aad
dec
or
adc
lods
int3
lahf
and
je
cmp
jnp
movsb
movsl
fistl
sub
pop
mov
pop
fsubrs
fs
popl
add
ljmp
lahf
ds
add
jge
jo
jl,pt
add
add
cmp
idivl
call
lock
loop
fsubs
lret
cltd
xchg
sub
daa
and
sbb
adcb
pushf
fwait
and
fmul
mov
mov
loopne
cmp
stos
pop
add
outsl
cmp
push
add
test
sub
add
or
out
cmp
ljmp
adc
jge
mov
insl
push
or
in
push
loopne
rclb
mov
addr16
sarb
cmpsl
sbb
daa
dec
cmp
jo
dec
push
je
mov
mov
mov
pusha
mov
pop
xor
and
lods
cltd
loopne
cli
fwait
jbe
in
lods
dec
dec
call
cli
xchg
daa
lods
sbbb
dec
add
or
addl
mov
in
sub
xchg
adc
into
mov
pop
in
insl
or
loopne
iret
fsubs
in
fbld
xchg
cmp
jge
cmp
mov
sub
icebp
add
sub
into
les
stc
ret
cli
dec
iret
stos
clc
cmp
sbb
popa
rorl
mov
dec
jmp
inc
shlb
inc
sbb
pop
cmp
add
push
jne
pop
repnz
sbb
outsb
and
clc
pop
loope
push
shr
or
and
and
inc
int3
add
arpl
or
push
dec
outsl
ja
cmp
mov
push
mov
gs
pop
xlat
bound
js
addb
pop
inc
and
xchg
add
jb
mov
xlat
cmp
outsl
push
dec
add
out
xor
dec
data16
jecxz
lahf
sbb
inc
cmpsb
xor
jae
xchg
shrb
dec
in
mov
push
sti
xchg
cmp
popf
sbb
mov
icebp
lods
leave
pop
add
js
jle
pop
jmp
xchg
filds
out
fildl
jecxz
out
add
xlat
fsubr
aas
rcl
in
repz
add
mov
and
inc
ret
xlat
add
cmp
fildll
aaa
jl
mov
xor
mov
add
inc
sub
int3
mov
add
ja
add
inc
pop
inc
cld
imul
pop
movsl
cmp
loop
or
out
dec
or
xchg
jo
dec
xchg
in
jp
js
inc
add
xchg
ja
lea
int3
fists
mov
push
fdivl
outsb
sbbb
jle
xchg
popa
cli
inc
fildll
andb
dec
pop
and
add
sbbl
xchg
mov
push
outsl
mov
push
sub
add
xchg
xor
mov
inc
loope
lock
iret
cwtl
movsb
daa
pushf
test
aas
jne
xchg
push
insl
cmp
pop
mov
test
adc
inc
lds
insb
adc
je
dec
add
repnz
add
ljmp
and
in
lods
fcoml
test
imul
pop
xor
negb
into
out
test
and
push
push
push
lss
cld
xor
lret
icebp
in
push
sub
sbb
and
daa
and
lds
gs
das
add
add
push
in
pop
add
out
fnstenv
loop
in
or
jmp
jo
xchg
cmp
je
dec
cmpb
add
test
inc
pop
lods
mov
imul
cmp
push
mov
xchg
add
sbb
insl
pop
and
out
sub
jle
jnp
cmp
push
pop
pop
lahf
rorl
not
xchg
loopne
popf
jecxz
shrb
fistpll
mov
xchg
xor
cwtl
push
cs
aad
add
stos
dec
jecxz
add
rorl
pusha
pop
adcl
mov
cmp
add
out
mov
cld
mov
outsb
imul
jno
and
data16
sbbb
imul
inc
add
dec
xor
inc
jl
scas
inc
sbb
stos
mov
movsl
and
icebp
xlat
add
push
jnp
mov
xlat
xor
xchg
sub
fistpll
mov
fnstcw
sub
push
and
adc
xor
shl
out
jbe
in
inc
sahf
in
sub
inc
js
or
adc
addr16
adc
pop
dec
mov
pop
fisttpll
repnz
clc
adc
leave
adc
pop
cmc
push
int
adc
call
inc
mov
add
bound
push
mov
sub
mov
push
cmp
mov
outsl
inc
or
fdiv
sarl
in
or
outsb
es
add
in
fmuls
in
add
adc
add
xchg
ss
cmp
imul
sbb
xchg
js
or
inc
sub
adcb
sbb
dec
dec
push
mov
out
sub
adc
inc
push
and
xor
mov
jns
push
js
add
out
mov
lds
add
fstl
ljmp
into
inc
hlt
mov
xchg
loop
jle
int
outsl
mov
in
scas
mov
je
vpmacssdd
inc
sbb
pop
add
pop
lret
cltd
inc
mov
or
inc
jb
rcr
rclb
popa
cmp
roll
cli
sbb
cmp
ficoms
shlb
sub
out
xor
loope
sub
pop
add
pop
adc
cltd
add
jne
movsb
adc
jo
loope
fnsave
movsb
rcl
add
cmp
mov
mov
add
mov
inc
fwait
add
in
sbb
call
adc
inc
fbstp
and
mov
inc
aam
fiadds
cli
mov
int3
mov
mov
xchg
punpckhbw
hlt
pop
stc
jno
jle
cmpsb
cmpsl
rorb
lods
fists
cmp
cmp
mov
negl
add
fistps
and
push
sbb
add
jno
inc
in
mov
decb
inc
test
lods
xchg
adc
pushf
sub
mov
adc
mov
pusha
lock
cwtl
fs
mov
add
jg
scas
shll
test
ret
xor
sub
dec
fdivrp
add
cld
aad
popa
jmp
sub
ret
jecxz
pop
rcrb
fs
lock
sbb
sub
stos
out
mov
add
fdivrs
jns
mov
xor
add
repnz
xchg
mov
jg
inc
inc
lret
jecxz
cmp
daa
clc
xor
loop
sbb
push
inc
in
inc
in
scas
or
and
mov
jl
je
cmp
pushf
mov
add
mov
ljmp
mov
pop
ljmpw
lahf
xchg
or
fwait
fs
lret
jp
jge
jb
push
addl
hlt
cs
adcl
int3
icebp
pop
push
mov
sarb
cmp
sub
loopne
jge
mov
dec
push
pop
out
jno
mov
cmpsl
dec
mov
xchg
cmpb
ljmp
add
add
test
add
fcomps
shl
sub
add
pusha
jno
aas
test
push
push
add
cmp
jb
sbb
rclb
sar
cmp
nop
aaa
xor
leave
sub
in
or
rep
inc
add
sti
xchg
frstor
and
das
cmp
and
inc
out
sub
out
sub
out
rolb
les
repnz
dec
add
sub
fwait
ret
jge
cmp
sub
push
insb
mov
jae
jbe
sahf
loope
std
dec
jmp
sbb
fcomps
push
cltd
rclb
cmpsl
cmp
adc
jg
nop
loope
testb
mov
sub
loop
xchg
xor
xchg
imul
jo
push
jg,pt
in
stos
jnp
jnp
es
cmp
sarl
mov
xor
dec
jg
mov
js
sbb
rcr
adc
into
cmp
mov
and
sti
adc
push
add
pop
cmpl
lods
movsb
hlt
add
push
push
enter
inc
or
arpl
sub
loope
adc
sarl
sbb
jmp
adc
jae
popa
sbb
pause
es
aaa
repz
add
int3
ret
lods
cs
add
xchg
mov
popf
movsbl
inc
cmp
mov
add
mov
test
incb
jecxz
add
jno
push
sbb
or
out
cmp
dec
repz
movsl
or
xchg
in
shl
incl
testb
xchg
sarl
cwtl
std
add
and
loop
test
push
dec
das
add
inc
nop
jne
test
call
popa
cmp
popf
loopne
pushf
ss
mov
stos
in
xchg
shll
adc
pushf
sub
dec
push
test
cli
adc
std
pop
xor
sbb
lds
subb
sbb
test
shr
dec
sub
cmp
jp
dec
sbb
cli
xlat
cmp
xor
in
dec
aas
loopne
jnp
add
cmp
adc
jns
xor
cmp
mov
mov
or
xlat
jecxz
rcrl
pop
pop
loope
shlb
add
sbb
cmpsl
movsl
fsubr
add
ja
into
je
daa
hlt
movsl
push
pop
dec
xchg
jle
in
bound
cmp
sbb
test
divb
out
fxam
dec
and
mov
cwtl
bound
adcl
push
xor
ds
xorb
mov
stos
sbb
fdivl
adc
loop
add
inc
inc
in
mov
xor
cmp
popf
lret
push
fimull
fsubrl
gs
fnstcw
add
shl
cmp
ret
adc
and
mov
cli
jmp
repz
and
dec
xor
test
cwtl
in
sbb
and
in
les
movl
sub
and
cmp
fldenv
dec
daa
add
ret
pop
sbb
fcoms
inc
daa
mov
insl
push
jge
dec
pop
and
dec
mov
pop
test
cmpsl
push
xor
ficomps
in
push
cwtl
and
cmp
add
test
lods
movsb
push
jno
mov
addb
jg
cs
mov
sub
lea
and
adcl
rclb
andl
enter
mov
lret
imul
and
faddl
add
mov
mov
cmp
inc
add
sbb
aam
and
mov
jge
xchg
pop
add
mov
xchg
lret
nop
leave
sub
jae
add
nop
in
test
call
xchg
loope
in
sbb
add
mov
int
adc
les
add
add
test
and
pop
adc
enter
jns
sbb
aaa
pop
mov
into
das
add
nop
mov
out
popf
testl
inc
dec
mov
dec
sub
push
fdivs
addb
add
push
pusha
lock
fstpt
cli
out
dec
lods
sbb
scas
nop
aas
jnp
shld
rcrb
movsl
adcb
cmp
mov
pushf
mov
cmp
cmp
sub
xor
xor
push
aam
shlb
inc
loope
and
sub
mov
dec
loopne
cmp
jbe
fbld
jp
add
iret
imul
push
fsub
dec
ja
ret
sub
sub
push
cmp
adc
in
test
shr
imul
out
aas
mov
inc
cmp
dec
pop
pop
jb
je
sbb
adc
jle
mov
in
cs
shll
push
jmp
inc
icebp
adc
push
jae
es
mov
mov
or
aaa
sahf
lcall
xor
in
jg
ficoms
inc
cmp
mov
xchg
push
js
in
jg
adc
aam
cmp
or
xchg
rolb
imul
pop
and
out
in
xlat
daa
mov
sub
pop
frstor
add
mov
ljmp
pop
push
pop
xchg
add
jb
cld
cs
inc
repnz
dec
mov
rcrb
mov
mov
mov
mul
in
jb
mov
jle
push
ret
bound
add
icebp
hlt
sti
or
loopne
and
and
int3
dec
cmp
pop
cmc
cmp
rol
outsl
imul
faddp
add
lret
shlb
jb
pop
lods
clc
ret
push
mov
xor
inc
xor
mov
daa
insb
xlat
xchg
sbb
je
inc
add
dec
sbb
jb
add
sbb
or
pop
rclb
test
jmp
mov
sti
jb
je
int
shll
cmp
dec
rolb
mov
jmp
aas
sbbl
dec
sbb
test
sub
cltd
loopne
dec
or
jae
stos
mov
push
hlt
inc
mov
add
mov
jecxz
add
aas
cmp
cmpsl
mov
add
roll
flds
icebp
adc
xor
push
sub
add
aam
daa
and
fwait
scas
loop
in
jne
subb
sbb
popl
lret
sbb
cmp
aam
das
push
and
adc
loop
sbb
cmp
ds
pop
sbb
fsqrt
jns
ficoms
mov
add
pop
outsb
mov
sub
xchg
ds
inc
rclb
mov
cmp
cmp
add
imul
pusha
push
cmp
out
rcrb
pop
lahf
bound
xchg
sub
repz
inc
and
add
cwtl
mov
add
mov
in
or
sub
shl
arpl
and
xchg
test
mov
outsl
inc
mov
jo
add
mov
jl
popf
cmp
out
fcoml
xchg
inc
out
shll
daa
push
es
xor
push
in
inc
and
daa
sub
std
cmp
add
testb
jae
ss
movl
adc
imul
ljmp
add
add
jae
add
xor
or
es
adc
lret
sub
add
es
dec
nop
sub
and
xchg
jle
fcmovb
dec
pop
pop
pop
mov
mov
dec
mov
test
inc
out
xchg
inc
insb
dec
gs
stc
pop
add
fistpll
push
in
cmp
lahf
add
push
add
test
push
mov
dec
ret
movsl
push
mov
sub
scas
scas
mov
cwtl
stos
add
cmpsb
cmp
jne
dec
jae
push
and
dec
and
in
cwtl
pop
cmp
aam
daa
pop
sbb
xor
mov
in
hlt
ss
cli
out
add
sbb
inc
inc
enter
or
sub
xorb
cmp
push
call
ss
int3
jns
sub
add
cmp
movsb
in
ret
or
sbb
cmp
add
xchg
jae
adc
lock
divb
call
out
mov
jae
bound
push
push
insb
cwtl
out
stc
leave
inc
bound
data16
xchg
cmpsl
mov
call
test
cmp
and
sbb
jb
cltd
mov
dec
frstor
xchg
bound
xor
pop
stc
mov
lea
or
jo
push
and
int3
test
inc
add
scas
xor
iret
cmp
sti
loope
mov
repz
stc
adc
inc
mov
fdivp
jp
sub
insl
and
add
cmovle
in
sti
jno
mov
cmp
lret
js
or
lret
int3
sbb
xor
scas
fwait
jg
add
scas
and
adc
nop
aam
in
add
inc
in
xor
mov
mov
push
push
in
out
scas
cli
and
int
icebp
movsl
ds
push
notb
insl
push
pop
mov
add
cmp
in
addr16
fstps
adc
dec
inc
outsl
push
outsl
roll
xchg
sub
in
mov
dec
adc
in
popf
test
in
and
mov
push
dec
sti
cmp
nop
push
outsb
add
push
ret
push
mov
stos
xor
and
jg
test
fisubs
popa
add
ljmp
xorl
push
fld
adc
add
pop
cmp
dec
mov
xchg
hlt
mov
and
clc
sub
insb
xor
jns
ja
push
hlt
fadd
inc
roll
gs
je
shlb
mov
inc
add
ret
std
scas
mov
mov
stos
cmp
or
sahf
scas
mov
add
add
mov
mov
jns
add
pop
jno
pop
icebp
and
icebp
jle
imul
shll
inc
add
pushf
pop
aaa
push
and
inc
mov
outsb
add
dec
dec
stos
add
dec
push
pop
pop
lret
add
cmp
mov
mov
scas
or
add
sub
add
popf
inc
adc
xchg
inc
bound
add
xchg
xor
in
jne
lahf
xor
movsl
push
or
pop
pop
add
fcoms
iret
loopne
ljmp
in
push
std
inc
pop
in
jbe
add
ljmp
lret
cmpsb
add
insl
xor
cmp
jb
push
std
std
out
in
pop
enter
mov
fnstsw
sbbb
pusha
jo
adc
lret
in
lahf
add
add
loopne
in
enter
scas
in
test
out
xchg
cmp
fdivrl
adc
xchg
inc
insl
mov
mov
xchg
inc
add
cmp
pop
insb
ljmp
cmp
in
orl
scas
repz
fs
push
jbe
push
add
add
test
insl
xor
or
lcall
cmp
mov
push
add
repnz
lods
mov
pushf
std
inc
cmp
js
mov
in
adc
aas
nop
push
fcompl
xchg
daa
loopne
push
fnstcw
in
or
cs
cmp
jle
add
pop
pop
out
jmp
add
pop
in
dec
or
pop
ds
add
sub
ret
lds
dec
sbb
cmp
and
inc
and
sbb
inc
arpl
aad
sbb
sub
adc
iret
das
cmp
sbb
sub
out
lea
add
mov
sbb
mov
shl
dec
cmpl
cmp
xchg
sub
test
fiaddl
out
ret
inc
in
mov
push
xchg
lock
xorb
push
mov
rolb
and
lahf
jb
xchg
xchg
rcrb
jmp
pcmpgtb
popf
mov
popf
jno
scas
xacquire
mov
sub
ljmp
sbb
jp
int3
fucom
ja
std
faddl
pop
fisubl
lret
mov
add
subb
repz
fdiv
sub
cli
add
test
cmpsb
pop
popf
in
das
mov
lea
loope
out
sahf
adc
cmc
cmp
out
clc
mov
andl
jmp
sbb
dec
and
int3
sahf
dec
adc
sbb
pushf
cmp
cmp
in
xor
addl
or
das
lock
fadds
in
pop
in
cld
je
ljmp
or
in
cmpsl
mov
loopne
in
push
bound
push
mov
in
out
in
dec
gs
mov
jg
out
push
or
ret
in
inc
and
dec
popf
in
adc
xchg
or
cltd
mov
cmp
mov
aaa
dec
add
pop
mov
mov
mov
add
je
xchg
test
cmp
lret
lods
rorb
adc
push
jne
add
fxch
xchg
add
pushw
add
sahf
pop
sub
rolb
push
jbe
fcmovbe
jae
fwait
mov
add
sbb
or
xor
sbb
daa
add
jle
es
cmp
inc
inc
add
jo
inc
inc
lds
pop
ficompl
ds
cmp
or
in
or
sbb
hlt
js
fnstsw
adc
mov
mov
sbb
pop
add
adcb
dec
sub
mov
jne
fs
add
stos
xchg
xchg
mov
add
dec
popa
dec
inc
inc
mov
sti
je
loopne
in
inc
xchg
pop
xor
add
mov
addr16
add
pushf
sbb
ret
sub
dec
cld
dec
cmpsb
mov
add
mov
push
jb
ja
or
inc
lcall
les
xchg
and
les
xor
sysenter
movsb
test
rcl
aaa
and
fs
dec
loopne
cmp
das
pop
rorb
cmp
idivl
adc
fmull
mov
xchg
jp
adc
pop
add
mov
or
data16
js
pop
fsts
sbb
add
fdivrp
js
jb
aas
add
mov
loop
jnp
fcmovnu
cmp
add
imul
add
mov
mov
lods
daa
fisttpll
std
or
mov
dec
inc
sbb
ret
or
add
push
fwait
addr16
fs
mov
sarb
aaa
shll
jne
cmp
test
test
movsl
int3
cmp
jp
add
in
jae
sbbl
stc
in
add
and
jne
mov
adc
cld
add
scas
add
cmp
jecxz
and
cmpsb
in
xchg
sub
fistpll
fistpl
pop
test
mov
adc
mov
into
push
test
pop
repnz
stc
les
and
jle
sar
inc
push
shl
dec
adc
or
pop
mov
out
push
xlat
in
xchg
pushf
in
mov
in
lret
jmp
mov
popf
aad
sub
fidivrl
in
shlb
mov
mov
insb
aas
add
mov
pop
test
pop
out
inc
shrl
mov
mov
add
fsubr
aam
ds
xchg
pusha
js
div
sbb
orl
in
into
daa
dec
test
popf
ljmp
jae
sub
push
mov
pop
nop
dec
xchg
or
mov
mov
jmp
dec
dec
xchg
and
and
movsl
xor
add
xchg
rcl
iret
rcrb
add
daa
add
loopne
test
repnz
std
sub
in
aaa
or
rorb
add
call
mov
cmp
cmpsb
add
adc
lret
js
mov
sbb
adc
fsubs
hlt
inc
mul
inc
loop
pop
jo
fnstcw
jp
mov
push
call
and
jp
inc
in
push
mov
mov
xchg
nop
cmp
xor
and
cmp
pop
lods
fsubrs
in
sbb
mov
outsl
lods
in
xchg
jl
test
nop
enter
int3
jae
pop
cmp
and
popa
or
xchg
pop
out
jno
add
xchg
xchg
in
inc
cmp
add
insl
pop
xchg
sbb
dec
xchg
add
xchg
roll
cmp
outsl
add
mov
cmp
lcall
sub
out
ds
cmp
lcall
sbb
and
fcoms
add
or
inc
rorb
add
mov
mov
out
hlt
inc
shll
push
xorb
loop
cmp
cmp
fucom
fwait
pop
call
inc
mov
xor
mov
jmp
leave
mov
add
shrb
testb
mov
movsl
into
and
pop
mov
xchg
mov
dec
and
fs
xchg
jae
in
aam
add
scas
jle
into
push
jg
cmpsb
xor
andl
or
gs
or
push
mov
add
gs
insb
pop
mov
lahf
loopne
test
mov
pop
adc
cmp
adc
mov
adc
fwait
and
ds
in
inc
mov
mov
add
mov
adc
inc
scas
mov
imul
mov
inc
cmp
fldl
jmp
xor
movsb
cmp
mov
mov
mov
popa
mov
cmp
subl
in
sub
or
popa
mov
stos
mov
sbb
aaa
int
jo
in
pop
inc
or
sub
jp
in
addr16
in
xor
popl
add
push
add
mov
out
enter
popa
insl
jnp
cmp
cs
cld
pop
or
stos
add
insl
adc
test
test
in
push
push
jmp
xor
dec
adc
aad
add
and
add
mov
dec
cmp
loopne
cmp
rolb
push
xchg
jb
clc
jle
xor
xchg
mov
xchg
sbb
and
cmp
push
inc
sbbb
lahf
xchg
into
loop
and
add
jb
in
jns
adc
xchg
and
jae
loopne
aas
pop
ja
sbb
jge
jle
sbb
lret
ret
aad
testb
adc
shl
jmp
add
mov
add
jo
ljmp
fwait
adc
cmp
cmpsl
sti
call
cmp
repz
pop
push
sbb
imul
cmp
inc
in
test
dec
push
adc
jp
inc
jle
cmp
pop
sbb
push
push
xor
mov
cmp
and
mov
ljmp
jge
inc
bound
add
imul
lret
push
cmpsb
inc
mov
mov
mov
loopne
xor
mov
xor
loop
dec
ja
ds
push
into
aas
aam
aad
hlt
shrb
or
in
outsl
gs
dec
into
add
ja
mov
in
iret
gs
jl
push
cmp
push
mov
insl
bound
cmp
pop
push
stc
fimull
ds
popf
mov
loop
pop
dec
push
ljmp
add
out
sbb
sahf
mov
mov
push
push
sbb
push
ja
adc
leave
pop
stc
mov
hlt
popf
and
scas
mov
loopne
sbb
cmp
pop
dec
inc
xor
mov
pop
int3
add
movsl
or
leave
mov
movsl
in
add
repz
dec
push
jns
add
or
gs
mov
dec
shlb
pop
add
dec
das
or
lds
call
in
cmp
push
std
ret
ja
add
push
mov
cmp
out
out
test
xor
jno
in
scas
stos
cld
jns
repz
xchg
add
andl
inc
cmp
rclb
test
add
scas
xlat
cmp
into
cmp
icebp
stc
ret
add
or
jae
add
dec
scas
inc
sahf
pop
mov
mov
push
push
jns
add
test
xor
ja
cmp
es
push
scas
cwtl
icebp
rorl
add
in
push
loop
mov
jbe
mov
in
cmp
cmp
divl
add
xor
inc
dec
add
out
clc
aas
popa
leave
xlat
dec
add
in
sar
in
ja
cmp
jmp
adc
mov
inc
jae
push
rcrl
sahf
hlt
js
jmp
rol
and
negl
cli
xchg
fildl
cmp
leave
in
xchg
xlat
out
and
add
cmp
xchg
es
mov
pop
stc
sbb
cmp
shrl
sbb
add
xor
and
xchg
xor
pop
push
xchg
mov
cmp
imul
pusha
in
add
int3
lahf
loope
sbb
loopne
cmc
cmp
lock
xor
ljmp
ficompl
mov
or
jl
mov
cld
mov
rcrl
sub
cli
fdivl
mov
mov
add
jge
or
dec
mov
or
pushf
mov
mov
sahf
jl
add
mov
pop
push
lods
pop
imul
jl
jns
stc
stos
lock
cmp
cmc
mov
stos
add
mov
mov
scas
enter
jae
jp
jnp
sbb
movsb
push
dec
pshufw
mov
xchg
add
mov
in
incl
movsl
mov
xchg
cmp
cmp
push
push
lret
in
mov
jge
jmp
cmp
imul
setbe
shlb
xchg
iret
ret
jne
sbb
cmp
enter
xlat
rol
pop
xor
pop
call
and
add
cmp
sub
in
iret
pop
jl
dec
xchg
pop
shl
mov
sub
mov
dec
sub
inc
fsubp
ret
or
jge
scas
push
hlt
xor
cmp
xchg
sub
jle
call
sbb
bound
imull
aam
mov
add
lret
mov
dec
in
sub
jle
test
mov
inc
mov
ja
cwtl
aas
ljmp
ljmp
jecxz
loop
push
in
aam
inc
cmpsl
pusha
xor
xchg
or
or
xor
test
mov
addr16
jge
roll
or
dec
out
push
add
call
data16
sbb
cmpb
cmp
xlat
das
mov
add
repz
and
cmp
mov
fs
dec
and
gs
mov
push
sahf
or
dec
and
lock
lods
mov
shll
push
sbb
sbb
jno
cmpsb
push
inc
pusha
imul
in
aas
mov
and
mov
add
dec
test
sbb
pop
jb
lods
jae
add
into
jns
pop
cmc
xchg
xchg
inc
push
mov
lcall
mov
lds
pop
and
add
imul
leave
shr
sahf
add
mov
push
mov
popf
mov
add
int3
inc
aad
add
pop
rcrb
mov
adcb
mov
dec
movsl
in
test
cwtl
lret
or
adc
scas
pop
into
mov
pop
das
mov
cmp
xor
cld
lods
adc
and
pop
shlb
lds
or
out
sub
int3
cwtl
mov
scas
mov
pop
adc
sbb
jb
insl
out
jnp
or
sbb
mov
repnz
int
out
mov
or
lock
inc
add
jno
push
or
lea
ljmp
ja
outsl
xlat
cmp
adc
and
push
outsb
in
lock
in
push
cmpsb
bound
add
in
xchg
sahf
xchg
int
mov
in
xchg
cmp
add
pusha
stc
and
lcall
jae
dec
add
int
lea
int3
sarb
pop
sub
das
and
arpl
jle
test
aas
in
or
or
icebp
inc
hlt
stc
cmp
jnp
push
scas
notb
push
outsb
dec
xchg
or
pop
sub
movsb
in
xlat
ret
pop
cltd
dec
sub
dec
xorb
cmp
adc
stos
sbb
in
cwtl
stos
insb
sahf
pop
add
hlt
fisttps
pop
scas
pop
fadds
add
mov
add
push
roll
xchg
lods
xor
mov
aas
ss
add
adc
add
add
insl
sub
pop
das
xor
and
ds
in
pop
fiadds
mov
lret
test
cmp
aas
pusha
push
push
call
cmp
xor
add
mov
push
aad
or
jmp
jl
je
leave
xlat
and
lods
mov
test
xor
lea
outsl
pop
push
xor
xor
dec
arpl
test
mov
jae
adcl
cmp
pop
push
fbld
fincstp
popa
gs
addr16
mov
loopne
inc
leave
dec
add
add
push
lods
mov
testb
inc
inc
or
add
enter
pop
jnp
nop
les
mov
cmp
ret
cmp
out
sbb
and
shlb
sub
nop
push
cmp
or
jle
push
mov
filds
jmp
dec
iret
add
mov
and
repz
jb
inc
lcall
mov
in
jp
mov
incb
mov
xlat
push
insl
xor
je
mov
cmpl
adc
jnp
cmp
adc
cld
int
lcall
jp
call
and
add
cmc
sti
mov
or
push
pop
sub
xchg
push
push
push
out
mov
stos
or
pop
cmp
jl
scas
jle
sbb
pop
leave
push
cmpsl
inc
sti
fbstp
mov
repz
xor
loopne
jns
push
add
fistl
les
in
sbbb
jmp
ret
jb
add
mov
jns
add
adc
push
lods
mov
and
mov
repz
enter
sti
bound
mov
clc
inc
cmp
xorps
cld
dec
cmp
add
mov
shlb
xor
inc
inc
es
jecxz
pusha
cmpsb
xchg
mov
pop
das
mov
adc
xchg
in
cltd
lcall
jmp
not
js
add
pushf
or
sbb
mov
mov
mov
adc
test
jl
inc
or
ret
mov
inc
fiaddl
pop
adcb
je
add
cltd
adc
cmp
push
jb
call
and
lock
pop
fwait
mov
mov
aas
sub
sbb
jg
xchg
pop
gs
cmp
xchg
test
pop
ror
ret
movsl
mov
xor
lods
mov
fucomp
xlat
add
push
cmp
cmp
sbb
test
push
and
in
loopne
icebp
mov
aam
jmp
cmc
insb
add
mov
dec
rcrb
pop
int
clc
in
lsl
adc
sti
and
adc
cmp
mov
mov
cmp
shll
or
data16
xor
popf
cld
mov
lds
mov
or
add
xchg
push
inc
add
sub
sahf
bound
call
sbb
je
cmp
jae
cmp
push
xchg
add
push
stc
pop
add
sub
arpl
xchg
lea
mov
mov
scas
add
adc
push
jl
add
in
mov
popa
mov
cltd
pusha
fwait
pop
addr16
dec
fwait
popf
popw
cmc
repz
mov
pushf
push
mov
pusha
xchg
clc
xchg
idiv
cmp
pop
nop
mov
subl
int3
pop
hlt
inc
aas
sbb
mov
out
inc
add
cmp
aas
movsl
inc
dec
add
pop
rcrl
ror
shlb
push
movsl
cmp
sti
subl
sbb
xor
jge
in
xlat
loop
out
jb
pop
sub
gs
out
fcmovnb
popa
orb
stos
xor
xchg
lahf
add
ljmp
mov
stc
xor
in
pop
loopne
jmp
inc
mov
mov
icebp
mov
insl
xor
outsl
sbb
dec
aam
fimuls
divb
insb
sahf
pop
inc
test
cmc
cmp
popf
push
hlt
aas
pushf
push
jmp
dec
push
mov
outsl
sti
push
repnz
pop
leave
arpl
andb
jmp
mov
pop
lock
xchg
adc
iret
push
cmp
or
pop
cmpsl
movsl
loopne
in
dec
and
dec
or
cmp
testb
add
push
jno
fldenv
adc
mov
fsub
xchg
stc
add
andb
sbb
insb
fadds
dec
pusha
inc
in
xchg
and
lret
push
ds
cmp
loope
adc
sub
out
jmp
mov
jne
or
add
dec
fbld
add
mov
in
and
clc
and
mov
add
push
add
cmp
add
gs
add
dec
mov
jns
negl
or
push
push
jg
stos
enter
sbb
test
loopne
cmp
ds
push
inc
jne
loop
cs
jg
jns
inc
inc
adc
popa
jne
pop
fildl
add
icebp
dec
mov
cmp
cs
mov
add
mov
jmp
adc
sbb
enter
pop
fxch
pop
in
cmp
inc
mov
mov
pop
lmsw
add
xchg
jge
add
dec
cmp
mov
jno
xor
ds
or
rcr
xchg
push
xchg
fistps
fsts
movsl
cmp
cmp
daa
sahf
out
jge
in
hlt
xorl
xchg
or
insb
mov
sub
cmp
xchg
movsb
daa
testl
inc
inc
jae
in
pop
movsl
pop
pop
inc
inc
int
fldl
pop
xchg
xor
ret
lcall
negl
push
mov
popf
inc
add
inc
xlat
lock
sbb
cwtl
xor
lcall
nop
add
mov
jmp
rclb
mov
push
cmp
push
or
hlt
mov
subb
mov
lret
rcll
and
insb
ret
repnz
inc
jbe
in
lea
in
jne
insl
cltd
int
cmp
jle
addb
xor
push
sbb
cmp
jnp
clc
mov
sub
mov
in
cmp
sbb
adc
jmp
push
call
and
lret
xchg
mov
adc
cmp
adc
fldl
mov
test
mov
cmp
mov
insl
adc
ret
inc
add
pop
pop
in
jge
repnz
je
and
inc
xor
xchg
mov
insb
in
mov
mov
cmp
icebp
scas
xchg
jnp
dec
xor
cmp
sti
sub
push
xor
ret
and
test
sub
jecxz
repnz
loop
lret
out
iret
dec
dec
xor
or
add
xor
pop
leave
lock
in
lods
mov
pop
aad
jmp
pop
xchg
push
cli
nop
inc
jnp
fnstcw
xchg
pushl
mov
out
xchg
fiadds
lock
stos
movsb
hlt
fs
nop
js
sub
loop
add
stc
in
je
fadd
push
cmp
xor
xchg
hlt
sti
aam
mov
lods
sbb
add
lahf
or
jbe
cmp
out
or
sub
dec
jge
adc
hlt
fwait
inc
pop
les
push
lea
or
sbb
add
add
pop
xor
loopne
add
mov
notb
cmp
pop
push
and
jl
push
daa
xchg
sarl
sub
jge
adc
mov
add
push
pop
jnp
or
cltd
je
push
xor
out
mov
aas
lret
xor
sbb
in
and
add
sub
imul
sub
or
testl
daa
pop
and
ror
loopne
or
aam
lcall
xor
adc
add
pusha
in
inc
fiaddl
cmp
in
ja
lods
cmp
mov
jl
test
lea
imul
mov
cwtl
jle
call
push
insl
inc
pusha
xor
jnp
add
push
outsl
cmp
jecxz
add
sarb
stos
adc
xchg
fcmovnb
repnz
xchg
add
xor
mov
cmp
jne
cmp
add
cwtl
out
add
mov
mov
loop
ljmp
rcr
nop
enter
pop
mov
push
inc
negl
gs
movnti
lea
sub
nop
sti
cmp
ret
rcll
enter
pushf
sbb
lcall
mov
aad
mov
xor
jmp
shrb
int
mov
cmp
ja
push
lods
jb
fmuls
decl
adc
loop
cmp
add
cmpsb
popf
sbb
cmp
jg
jp
in
xor
lcall
xor
notl
or
sahf
xor
cmp
or
mov
dec
jb
dec
inc
add
in
inc
repz
std
repnz
sub
adc
xchg
ljmp
inc
dec
cld
in
cmp
mov
inc
push
rorl
cli
sub
cmp
mov
xchg
jno
add
sub
les
lret
pop
shll
mov
xor
fisubrl
sub
sub
jge
cmp
in
jle
test
xor
and
scas
call
punpckhwd
mov
fisubrl
cmp
cmp
dec
jmp
out
mov
cltd
cmp
mov
dec
rclb
in
add
inc
ficoms
shll
fdivr
popa
adc
cld
jmp
stos
in
cltd
in
add
mov
jmp
sbb
xorb
pop
add
js
or
add
mov
mov
pop
cmpb
or
outsb
and
mov
sarl
push
stc
in
or
mov
inc
ljmp
mov
test
jne
out
dec
stos
push
push
das
jmp
mov
push
clc
lods
ret
in
jno
inc
rclb
push
xchg
add
push
mov
adc
cmpsl
sbb
arpl
inc
add
movsl
call
inc
xchg
pop
lret
outsl
es
in
xchg
es
cmp
jno
adc
xor
mull
add
jnp
data16
mov
test
fdivs
mov
loopne
fstpt
notb
in
aad
test
mov
cld
aaa
sub
in
inc
insb
lcall
rclb
jne
add
jle
insl
xchg
pusha
add
cmp
jg
lret
lahf
movb
jge
or
je
xorl
add
inc
mov
adc
jo
xor
cmpb
sub
push
lods
sbb
arpl
nop
sahf
add
cs
gs
aad
das
cmp
stos
cmp
orl
lret
daa
in
mov
into
pop
cmp
stc
or
outsb
sbb
inc
cmp
out
pop
addr16
add
addl
leave
xchg
sbb
and
sahf
jmp
add
shlb
add
lods
adc
jmp
cs
movl
mov
cmc
cmp
scas
xorb
je
gs
inc
mov
daa
jecxz
xchg
clc
push
mul
jl
push
push
sub
outsl
push
dec
and
orb
and
dec
mov
add
js
adc
fimuls
xor
adc
and
add
push
inc
sbb
testl
repz
aad
mov
and
das
mov
gs
stos
push
pop
push
pop
fld
jae
aad
add
cltd
xchg
mov
cmp
cmc
cld
inc
push
jl
jb
jmp
mov
push
in
add
dec
insl
ja
idivl
xchg
addb
enter
add
mov
nop
mov
popf
dec
rcrb
je
pop
jmp
and
inc
mov
push
and
call
adc
movsb
or
in
icebp
loopne
je
fisubl
jle
imul
jae
hlt
jno
in
dec
or
cmp
sbb
pop
add
sahf
xor
out
std
mov
aaa
gs
sub
xor
rolb
incb
or
adc
cmp
enter
push
cli
loop
les
flds
loope
push
popa
movsb
loopne
nop
in
or
into
je
xorb
cmp
sub
cltd
push
out
xor
shlb
inc
orb
and
fsubr
xor
xchg
sbb
mov
out
pop
rorb
out
fnsetpm(287
in
xchg
xchg
popf
xor
mov
xlat
shr
pushf
test
push
mov
ret
dec
or
flds
mov
add
sub
out
jb
sbb
das
push
cld
ficoml
in
push
cmp
add
shlb
ss
in
pop
add
cmp
jmp
ds
add
mov
popa
jb
add
mov
sar
test
arpl
mov
clc
mov
xchg
rclb
fnstsw
mov
dec
xchg
and
jle
sbb
xor
movsl
lcall
ret
and
popa
leave
add
xchg
imul
movsb
add
sub
inc
inc
ja
mov
scas
adc
xchg
in
mov
add
and
aam
dec
gs
push
scas
xor
cltd
rorb
cli
fcoms
adc
lods
dec
stos
rorl
mov
ljmp
rcrb
fidivrs
rcl
jns
add
icebp
int
dec
xor
pushf
dec
xchg
jmp
push
loopne
mov
add
out
mov
vpsubsb
in
lahf
dec
imul
in
cmp
adc
xchg
mov
cmp
pop
pop
and
adc
cmp
jns
shl
fsts
shlb
aas
dec
push
mov
sbb
test
fldenv
sarl
add
sub
nop
and
mov
in
push
jbe
and
cltd
sahf
cmp
dec
lret
sbb
add
jge
aam
ljmp
test
adc
data16
pop
add
and
jp
mov
inc
xor
jae
cmp
jle
fwait
inc
loope
cmp
jp
add
mov
outsl
fidivrs
enter
dec
lock
sbb
daa
dec
dec
push
into
popa
add
or
in
in
nop
loope
xchg
inc
adc
mov
and
ucomiss
loopne
pop
dec
push
in
inc
cli
cmp
cmpsl
cmp
scas
popa
xor
out
and
lret
add
xor
into
or
mov
jge
js
cmc
ss
shrl
mov
stos
jg
add
aas
stos
cmp
pop
in
subb
in
and
pop
insl
sbb
mov
xor
cmp
test
mov
cmp
nop
nop
mov
lcall
jmp
inc
cmp
and
test
jle
lock
jns
cmp
adc
stc
add
fimull
cld
jle
cmp
clc
or
enter
sahf
add
lahf
iret
pop
push
shrl
sub
out
mov
daa
loopne
adc
pop
adc
inc
mov
jo
sub
cmp
scas
pop
cmp
in
out
mov
add
dec
or
aas
mov
add
mov
cmpsl
pop
add
in
jmp
mov
scas
mov
push
test
sub
or
xor
mov
add
and
loopne
cltd
inc
cwtl
xor
lods
add
pop
add
rcl
insb
in
nop
jno
jmp
outsb
mov
enter
add
pusha
daa
xorl
fbld
loope
ret
in
pop
cltd
fcmovnb
and
aad
scas
lcall
loop
and
shll
sub
dec
add
cmp
sbb
xlat
push
out
xchg
fildl
adc
repnz
sbb
cmpsl
mov
sbb
pop
rcl
add
rorb
add
mov
movl
jle
dec
xor
mov
xchg
push
and
push
mov
jmp
out
sbb
lods
dec
add
sub
mov
repnz
cmp
iret
int
push
shl
and
data16
jb
jg
jne
cmp
ret
popl
sbb
movsl
repnz
movsl
shlb
cmp
lcall
add
mov
fsubrl
inc
and
fs
sbb
popa
mov
mov
sub
pop
cmp
dec
pop
out
or
add
dec
mov
sub
and
lds
push
pusha
cltd
add
sbb
mov
sub
js
pop
idivl
push
addl
sub
cmp
nop
cmp
add
shl
sbb
sub
shll
dec
add
inc
repnz
in
sti
mov
push
mov
cmp
adc
adc
dec
add
sub
jp
xchg
loope
aaa
sbb
mov
pop
or
shl
lea
cld
mov
inc
add
mov
jne
add
in
aaa
jl
ds
mov
jg
jmp
movsb
xlat
fldcw
pop
pop
dec
pop
jg
cmp
daa
pop
push
push
push
leave
test
fwait
lahf
faddl
jp
cmp
adc
push
xchg
jge
add
mov
popf
mov
jmp
mov
mov
in
xchg
jge
add
addr16
std
xor
insb
clc
sbb
xchg
fwait
inc
xor
cmp
sub
daa
cli
xor
insb
stc
jmp
sti
cmpsl
fmuls
jne
mov
shlb
add
push
data16
fdivl
jne
stos
sbb
filds
xchg
xchg
imul
addr16
lods
or
sub
notl
cmp
mov
jl
cmp
popf
cmp
sbb
jne
jae
and
sbb
xchg
in
ret
sbb
adc
cmp
loope
cmp
enter
pop
dec
sub
mov
lret
sbb
mov
jle
int
fs
jmp
ficomps
pop
ljmp
rol
sbb
jge
andl
dec
add
dec
cmp
les
mov
out
push
inc
cmp
push
and
imul
or
ja
xlat
call
imul
or
add
jge
adc
sahf
jns
in
jg
or
pop
xor
jge
in
and
cs
cmp
mov
inc
dec
and
bound
and
mov
jl
or
xchg
push
adc
ljmp
add
xchg
daa
push
rorb
xchg
mov
xor
shlb
dec
aas
fldz
xor
in
or
mov
push
imul
stc
mov
in
popf
and
clc
dec
cmp
mov
lahf
dec
imul
add
pop
in
pop
cmpsb
mov
mov
push
rcrl
dec
add
insb
xchg
popa
imul
imul
mov
out
testb
lock
push
inc
push
pop
loop
xchg
loopne
inc
nop
mov
js
jae
dec
dec
add
adc
mov
pop
xor
fwait
iret
imul
mov
outsl
mov
pop
push
add
insl
inc
mov
bound
sbb
mov
xor
mov
jl
add
mov
call
mov
xor
pop
sti
mov
pusha
mov
cmp
jmp
jle
adc
push
pop
mov
or
cmp
shrl
arpl
imul
mov
call
fidivl
aas
movsb
jle
rol
or
or
xlat
jmp
std
mov
cmpsb
outsb
in
lcall
cmp
fildll
dec
es
cmp
push
aad
shrl
add
push
ja
faddl
sbb
jbe
subb
call
mov
daa
cmp
fdiv
adc
lock
inc
fiaddl
cs
pop
xor
cmp
in
cmp
fstps
sahf
in
pop
jb
pop
outsl
repz
mov
add
add
divl
lcall
cmp
sbb
out
jne
aam
xchg
inc
enter
cmp
lock
test
pop
xor
mov
test
jp
and
mov
int3
cli
add
fisubrl
in
ljmp
cmp
in
pop
rcl
jecxz
icebp
es
jecxz
in
mov
add
movb
mov
sar
pop
imul
shlb
fdivs
in
pop
push
mov
adc
lret
jg
and
rcrb
pop
nop
setae
pop
in
push
rolb
push
xor
cmp
add
or
or
call
pop
popa
jb
adc
lods
iret
call
adc
pop
inc
add
je
mov
cmp
dec
mov
cmp
loope
dec
std
xor
adc
divl
jnp
sub
lea
cmp
mov
xchg
aam
insl
add
ja
das
mov
enter
je
adc
xchg
fiadds
int
outsl
mov
mov
xor
outsb
mov
mov
stos
sub
pop
cld
add
cmp
and
xor
inc
loop
sub
inc
cli
loopne
arpl
shrb
add
inc
jge
dec
stos
into
add
pop
and
repnz
push
adc
je
ds
push
cwtl
cmp
add
je
lea
fidivs
add
aam
jge
ficomps
jl
jno
mov
cli
xchg
jns
adc
jmp
xchg
and
shrl
mov
fiadds
cwtl
cmp
push
test
inc
mov
js
push
add
leave
cmp
mov
and
xchg
in
popf
ds
pop
ret
add
fdivr
repz
pusha
pop
add
data16
sbb
in
ds
adcb
dec
cmp
xor
out
add
and
fwait
out
scas
imul
gs
inc
or
pop
pop
cmp
pushf
loop
push
aaa
fistpl
pop
cmp
adc
add
jmp
xlat
sbb
cmc
or
cmp
jp
and
in
leave
mov
pushf
pop
lods
cmp
ja
arpl
push
inc
jae
in
push
and
je
xlat
push
push
dec
imulb
movsb
add
std
clc
test
inc
scas
jbe
ret
outsb
out
mov
mov
gs
sub
dec
enter
pop
scas
xchg
sub
arpl
add
outsl
aas
test
jg
mov
sbb
in
mov
push
fdivrs
call
adc
imul
add
popf
sbb
popl
xchg
and
in
sbb
push
pop
lods
mov
mov
pop
pop
insl
cld
out
je
adc
mov
fstpl
ss
daa
dec
filds
lret
cmpsl
adc
stc
and
in
pop
fsts
push
add
jmp
pop
pop
mov
mov
or
enter
pavgw
imul
cmpsb
xchg
mov
adc
in
sub
ret
mov
outsl
lcall
icebp
mov
mov
inc
mov
cmp
jle
cmp
xor
or
jp
call
adc
lea
mov
and
scas
push
add
add
fsubrs
call
push
insb
popa
adc
fdivrp
sub
fwait
jae
xor
jecxz
xchg
lds
sbb
in
mov
push
and
inc
aam
push
lock
cmp
or
cmc
cld
jbe
mov
mov
hlt
in
cmp
dec
and
les
add
lret
imul
in
testb
jmp
xchg
cmp
or
addr16
es
pushf
popa
loopne
bnd
sti
cmpsl
pop
push
gs
xor
pop
jno
add
test
sbb
arpl
in
push
mov
outsl
pop
into
outsl
xor
data16
mov
fnstcw
or
rcr
jbe
in
insb
hlt
sahf
out
or
mov
xchg
dec
gs
xchg
mov
mov
ljmp
xor
rcrb
movsl
iret
loop
pop
inc
mov
pop
cmp
cmp
sbb
cwtl
inc
sub
lds
mov
in
je
jle
nop
nop
xchg
out
mov
cmp
mov
inc
test
add
sbb
add
lret
mov
ja
addr16
or
mov
clc
outsb
xchg
xor
mov
jg
mov
mov
or
and
xchg
in
push
sub
mov
cmp
les
push
test
in
xchg
fnstsw
mov
ds
jae
cmc
fnstsw
add
mov
mov
pusha
jne
or
pop
pop
adc
pop
int
daa
in
dec
sbb
jae
push
sti
inc
xchg
sub
sarb
lret
inc
mov
inc
sub
xchg
cmp
inc
or
icebp
sbb
sti
pop
sub
fsubrs
cmp
lret
mov
xor
es
stos
mov
lret
jns
ret
mov
ficoms
xchg
dec
call
inc
sbb
cmp
std
pop
movsl
dec
dec
add
pop
scas
popf
gs
rorl
push
cmp
movsl
ljmp
lds
pop
mov
gs
fs
and
hlt
in
dec
and
jl
cli
cld
in
add
mov
mov
ss
jmp
inc
dec
add
jne
ret
pop
lahf
fists
and
das
lock
pop
sti
cmc
cmpsl
test
ljmp
in
imul
lods
ja
add
shlb
addr16
add
add
orl
pushf
push
add
dec
cmp
and
fiaddl
cld
fistl
push
and
lret
mov
imul
rcr
ljmp
int3
xchg
je
adc
dec
add
stos
stc
add
imul
in
xchg
xchg
sti
mov
stos
or
or
push
pop
mov
inc
insb
subb
fmul
jbe
add
fidivrs
mov
rol
push
jb
sahf
std
sbb
das
addl
and
push
sbb
in
push
mov
xchg
mov
xchg
xor
xchg
and
mov
sbb
stc
mov
mov
mov
cmp
scas
mov
decb
xchg
popf
xchg
sub
push
mov
faddl
insl
xor
cmpsb
in
mov
sbb
xchg
in
outsb
fcoml
sub
das
or
iret
cmp
ret
and
cld
loopne
mov
jbe
or
mov
inc
jne
inc
dec
rclb
sub
rol
subb
add
stc
gs
je
mov
mov
or
mov
mov
xchg
add
ja
xor
insb
cli
bound
xor
mov
cld
ljmp
adc
jmp
add
lahf
xchg
aam
jo
xor
adc
and
out
dec
and
rorl
pop
mov
sbb
jne
mov
cld
jno
cmp
cmp
clc
jnp
fisubl
outsb
mov
add
imul
subb
cli
or
aas
clc
into
cmp
repnz
int3
lock
nop
mov
cmp
adc
pusha
mov
xchg
add
enter
lea
pop
push
jae
rcrl
callw
out
cld
lret
ds
add
sahf
pusha
addl
pop
mov
ds
stc
push
lcall
or
gs
xorl
push
or
add
movsb
adc
cmp
rcrb
and
enter
cwtl
xchg
fstl
lods
xor
add
lea
add
push
jge
mov
jns
pop
mov
inc
or
push
sub
push
insb
shl
mov
xchg
jne
add
dec
mov
outsb
add
add
add
fimull
in
ror
mov
mov
jo
gs
sub
add
sub
inc
in
daa
mov
mov
in
sbb
xchg
repz
and
mov
mov
mov
movsl
mov
cmp
lds
sahf
clc
pushf
scas
mov
pop
lcall
gs
adc
push
out
out
jmp
jl
jno
mov
es
roll
je
push
inc
loopne
jb
xor
mov
test
cs
lret
les
stos
nop
add
into
insb
adc
inc
jge
movsl
sti
sbb
or
out
xor
add
out
add
cmp
inc
mov
add
in
adc
out
jg
push
sub
xchg
in
cmp
mov
jo
hlt
loope
add
aas
push
fsubrs
int3
lea
or
sbb
adc
fucomip
inc
add
fbstp
fadds
lahf
popa
es
sub
pop
xchg
push
mov
xchg
push
pusha
pop
jbe
leave
jb
in
sub
inc
in
lcall
sub
cmp
fbstp
fdivs
cmp
rolb
out
bound
scas
adc
pop
lahf
cli
movsb
pop
jle
cmp
iret
sbb
stos
mov
shrl
ss
fcoms
scas
repnz
incb
inc
push
sbbl
lds
or
loopne
mov
xchg
jnp
jg
xchg
ret
mov
add
imul
in
rep
sti
or
movsl
lods
jmp
out
lods
scas
sbb
loopne
cmp
add
ds
jnp
xchg
or
xor
js
arpl
les
adc
cmp
pop
and
frstpm(287
jns
mov
add
movsb
xor
je
sub
fdivrs
adc
mov
cmpsb
dec
cmc
jg
in
jno
insb
mov
xor
mov
je
sarl
sbb
mov
add
sub
push
ds
movsl
mov
cmp
sbb
imul
movsb
cwtl
faddp
loope
xor
mov
sbb
rcrb
sbb
loop
add
sti
arpl
add
push
je
in
fsubrs
xor
or
cmp
jne
lods
mov
mov
sbb
add
sub
shrl
cmp
subb
sbb
sub
pop
popa
cmpsb
mov
loopne
mov
enter
add
jb
in
rolb
sub
add
inc
sbb
in
jb
adc
rcl
cmp
insl
mov
lods
pushf
fisttpl
sahf
xor
add
xor
xchg
aas
and
popf
or
rclb
int
xor
cmpsl
std
dec
cmp
aad
mov
fucomi
jns
push
jmp
jmp
lds
inc
and
cmp
inc
push
push
or
xorb
into
cltd
js
cs
push
add
mov
notb
xlat
push
push
or
add
ljmp
in
ret
ret
ficompl
push
cmp
dec
cmpb
das
nop
mov
add
sahf
fadds
cmp
xchg
cli
fcomp
add
xor
sbb
outsb
add
jmp
inc
cmp
shrl
aam
js
xchg
cmp
sbb
bound
mov
or
and
in
jmp
hlt
or
mov
cmp
push
aad
add
add
mov
jnp
add
pushf
xchg
test
repnz
xor
or
int3
cmp
bound
sub
add
mov
decl
cmp
push
mov
xchg
xor
pop
cwtl
mov
cmp
xchg
cli
mov
adc
add
iret
hlt
repz
jmp
mov
out
jge
add
imul
sub
movsl
or
dec
aas
popa
add
cli
imul
mov
mov
push
mov
adc
emms
inc
sti
loope
adc
inc
push
ret
nop
popf
adc
add
xchg
sarb
rcrb
cmp
xchg
mov
in
test
inc
aas
cmp
cmp
das
mov
scas
cli
jmp
out
jle
xor
jns
movl
pusha
sub
aam
xchg
ds
shr
scas
in
lret
mull
mov
xchg
jp
pop
inc
movsl
mov
lret
xchg
jnp
cmp
aam
enter
mov
loopne
int
mov
pop
idivl
sti
add
std
enter
adc
nop
push
sub
adc
iret
icebp
cmp
or
xchg
sbb
cmp
fldcw
aaa
sahf
pop
rolb
repz
les
js
cs
xchg
or
mov
cmp
push
pop
push
fwait
cmp
cld
sbb
inc
xlat
out
call
nop
imul
pop
mov
xchg
sbb
das
sub
imul
jp
jnp
int
sbb
mov
push
mov
movsb
nop
js
pop
loope
push
add
rol
imul
in
jp
ret
pop
fwait
shrl
pop
inc
dec
cmp
jnp
cld
adc
fisubl
dec
xchg
pop
add
jb
pop
test
cmp
loope
jns
aas
dec
inc
lahf
push
xchg
call
jge
testl
adc
jns
mov
test
mov
cmp
rcl
nop
cmp
outsl
sub
cli
add
int
push
cmpsb
and
push
dec
push
cmp
mov
fwait
aam
add
cmp
push
bnd
pop
sbb
or
pop
cmp
jae
add
lock
xchg
sbb
test
jae,pn
push
add
in
in
jnp
fwait
cmp
out
and
push
jp
hlt
add
callw
or
jb
add
in
mov
out
xchg
stos
test
push
push
add
popa
pop
cmpsl
aam
loopne
je
pop
roll
movsb
add
mul
adc
pushf
fcomps
loopne
push
xchg
cmp
je
orb
pop
push
pop
mov
xor
dec
fisttpll
clc
xor
roll
test
fs
stc
fninit
xchg
in
add
xchg
jle
bound
ss
test
inc
sbb
or
push
cli
push
adc
adc
decl
push
dec
add
test
lret
adc
dec
mov
mov
scas
xchg
inc
dec
add
push
pushf
add
ret
mov
mov
pop
rcl
ret
xor
xchg
xchg
aaa
test
adc
stc
addb
ja
pop
fidivs
xorb
add
mov
fsubl
push
dec
popa
jp
push
aam
xchg
add
sahf
dec
cmpsl
cmp
mov
pop
or
ret
fcompl
add
add
inc
outsb
in
push
mov
mov
add
xor
adc
test
dec
in
inc
xchg
mov
into
std
pop
lods
mov
dec
cli
sbb
pop
jbe
push
push
lds
in
push
test
jno
cmp
out
jne
fisubrs
in
out
push
sub
loopne
cmp
push
cmc
notb
mov
arpl
jne
scas
mov
gs
in
and
jle
push
out
cmp
jmp
dec
in
pop
mov
adcl
ljmp
popf
int3
jne
faddp
jno
arpl
mov
cwtl
cmp
sub
arpl
dec
xchg
fadds
mov
shll
cli
in
push
add
add
mov
add
xlat
pusha
lods
push
lods
les
loop
mov
mov
sub
pop
sbb
cmpsl
arpl
add
clc
lds
ja
jp
out
pop
pop
std
loop
andl
add
pusha
pop
adc
stos
test
mov
loope
sbbl
add
or
add
rep
xor
fisttps
fnsave
movsl
sub
pop
jl
jge
std
clc
pop
test
repz
ja
add
lret
repz
jb
push
loopne
cmpsl
pushf
add
adc
jl
loope
push
add
ds
push
push
xor
adc
sbb
xchg
and
inc
inc
sbb
sbb
ds
pop
add
adc
hlt
add
dec
mov
stc
in
jmp
push
cmp
outsl
cmp
cwtl
in
push
xor
add
cltd
rorb
inc
daa
xchg
leave
push
xchg
cmp
repz
lea
aad
cmp
mov
inc
xchg
add
sbb
sahf
rolb
aas
jp
push
aas
inc
ret
jno
jo
jns
push
add
add
dec
in
sub
or
jae
cmp
outsl
push
hlt
push
popf
sbb
cmp
mov
xchg
rolb
push
push
insl
faddp
stos
lahf
xor
neg
cmp
fidivrl
push
xchg
xchg
insb
cli
in
jmp
aaa
xor
bound
fld
or
push
ret
in
and
jnp
stos
out
cmp
adcl
push
icebp
aas
scas
pop
add
fisttpll
fistpll
aas
mov
out
push
les
jb
dec
fidivrs
aas
fildl
dec
add
ret
sbb
mov
pop
ljmp
and
int3
lret
sub
in
int3
jmp
mov
clc
gs
cmc
cld
out
dec
xchg
push
add
mov
sub
or
popa
xor
xchg
in
frstor
xor
adc
push
sahf
outsl
vpcomleuq
sti
push
ljmp
inc
cmp
mov
pop
in
lret
outsl
or
add
sbb
or
push
icebp
and
adc
popa
ja
cmpsb
inc
sbb
push
jmp
or
pop
add
inc
pop
clc
in
and
rol
mov
in
push
sbb
cmpsl
adc
test
dec
mov
mov
add
xchg
fidivl
mov
cmp
add
int3
add
stc
in
pop
xchg
adc
add
cmp
and
daa
in
sbb
les
xor
cmp
mov
mov
loope
lret
test
lods
add
mov
mov
cmp
movsl
in
or
push
cmp
std
push
or
repnz
sarb
je
lds
cmp
sub
mov
mov
or
cmpsl
cmp
lret
loopne
mov
xchg
adc
lock
insb
add
imul
imul
fsubrp
xor
push
xchg
push
incl
loope
mov
xchg
fiadds
inc
movsb
aaa
xchg
xor
cli
cmpsb
cmp
adc
cwtl
loopne
mov
pop
mov
xor
add
adc
ficoml
addr16
pop
add
lock
insb
arpl
jo
xchg
leave
in
shll
pop
jb
jo
xor
adcl
loopne
dec
lret
shlb
test
and
jbe
and
add
call
pusha
mov
idivl
addb
mov
push
add
add
out
repz
ja
fiadds
fisubrl
mov
imulb
aam
in
and
sarb
pop
nop
add
jecxz
out
ljmp
in
in
fistpl
ret
and
cmp
mov
loop
jl
mov
mov
aas
xchg
mov
rorl
xor
lahf
les
lods
sbb
push
insb
dec
daa
mov
in
stos
push
xchg
jge
js
das
xor
sbb
add
push
je
mov
jge
ret
ds
hlt
repnz
or
fcom
in
dec
roll
sbb
mov
nop
mov
sub
mov
call
js
xor
leave
movzbl
sbb
popa
sarl
leave
in
add
mov
testb
mov
iret
fiaddl
shrb
ret
mov
push
stos
and
cmc
pop
pop
loope
mov
xor
cmp
movsb
dec
jg
stc
cltd
xchg
add
call
cmp
lea
xchg
pusha
rorb
mov
cmp
add
pop
pop
adcl
js
sbb
mov
xor
ss
dec
jecxz
ficompl
aas
ror
cmp
sub
fsubrl
lods
gs
adc
js
pushf
enter
outsb
pop
pop
pop
adc
enter
cmpsl
mov
repnz
test
and
xor
xchg
inc
inc
cmp
ret
push
ds
cmp
stc
idivl
mov
add
adc
sahf
pusha
sub
and
shrb
xchg
hlt
sub
add
add
cwtl
add
popf
out
rorl
jge
test
mov
inc
cmp
xor
fildl
dec
mov
bswap
cmp
cmp
leave
lods
fdivrs
mov
xor
push
mov
adc
push
ret
int
aas
bound
pop
sub
je
push
fwait
into
mov
sbb
cli
popf
rclb
xlat
shl
xchg
mov
les
testl
mov
mov
imul
stos
add
icebp
or
xchg
out
pop
push
add
testl
add
push
inc
add
sbb
shl
les
repz
and
mov
add
pop
dec
xchg
dec
dec
cmc
add
jg
cmc
xchg
sub
out
add
and
addb
fsubl
push
in
sbb
cmp
inc
fcomip
mov
jnp
in
jnp
inc
int
dec
jne
adc
mov
loopne
in
push
cltd
outsb
cmp
adc
xchg
rcll
add
inc
add
out
push
out
cs
in
cmp
sub
xlat
xor
or
or
pop
and
sbb
das
jecxz
out
xor
lock
ds
fcomip
or
jl
in
std
cmp
ret
adc
lcall
add
mov
jp
gs
adc
andb
mov
mov
movsb
push
mov
es
ljmp
add
or
adc
adc
and
ret
je
repnz
and
in
in
test
aaa
cmp
les
cli
in
push
cmp
int3
add
cli
call
es
rcl
loopne
mov
scas
lds
subb
xchg
and
lock
pop
mov
subb
xchg
dec
push
xchg
scas
lahf
xchg
popf
dec
jae
adc
in
std
mov
push
inc
jo
sbb
inc
js
mov
imul
adc
pusha
js
cltd
ret
mov
pop
xchg
sbb
inc
sbbb
addb
xchg
fucomp
pusha
xchg
and
cwtl
dec
xor
dec
popf
jae
dec
pop
out
or
sub
inc
addb
sbb
sub
pop
push
xor
sbb
or
ret
int3
xor
or
and
pop
cmc
sub
rorl
sbb
or
je
xchg
and
jae
dec
ds
icebp
adc
cmp
push
add
cld
shr
out
rolb
icebp
push
iret
call
cs
mov
add
loopne
paddq
jmp
in
push
mov
sub
call
repz
sbb
lds
into
jp
in
movsl
mov
nop
test
cld
dec
inc
cmpsb
add
iret
ljmp
add
inc
xchg
mov
push
addb
loop
mov
outsb
movsl
inc
andl
cltd
jl
cmc
lcall
xor
and
outsb
bound
js
mov
mul
mov
push
add
stc
and
xchg
fs
movsb
inc
push
sbb
js
dec
mov
bound
aaa
out
inc
in
inc
xchg
add
arpl
push
adc
es
sbb
sahf
inc
jno
dec
loopne
add
aad
and
stc
push
hlt
xor
cmp
icebp
push
xor
xchg
add
sub
and
xor
pop
test
cmp
jns
filds
xor
or
andl
fxam
mov
mov
popa
jno
in
sbb
iret
out
xor
out
mov
ret
daa
cs
and
fsub
or
call
lret
add
xor
movsl
in
mov
dec
orb
push
jmp
mov
lcall
shl
out
dec
mov
sbbb
mov
xchg
push
add
scas
mov
push
jo
push
imul
xor
mov
arpl
dec
imul
imul
add
pop
dec
loope
pop
pusha
cmpsb
addr16
jg
pop
mov
fs
lret
and
and
rcr
push
add
rclb
daa
lds
movd
and
xor
xor
pop
xor
dec
or
lea
push
cmp
push
and
nop
adc
or
das
cli
add
and
cld
fldl
rcrl
or
xchg
jo
xchg
or
movsb
out
adc
in
lahf
jecxz
iret
sub
cs
cmp
rorl
aad
add
inc
divb
cli
rcrb
add
xlat
push
or
enter
cmpsl
xchg
push
cli
sbb
sub
mov
out
mov
dec
mov
pop
in
outsb
sti
mov
cld
xlat
mov
cmpsb
pop
push
outsb
mov
arpl
pop
mov
jb
cmp
dec
add
jae
dec
decb
mov
push
push
mov
mov
scas
inc
loop
dec
int
add
or
fsubrl
nop
sbb
pushf
inc
jnp
pop
cwtl
dec
mov
lea
push
shl
jecxz
adc
jno
in
or
mov
cli
sbb
fsub
add
ficompl
fcoml
add
aaa
rolb
lret
fsub
loopne
fsub
into
leave
fldcw
dec
test
insb
stc
jl
cmp
cmp
add
aam
xor
roll
subb
push
inc
jnp,pn
add
ret
mov
xchg
cmp
adc
sub
lret
icebp
loopne
int3
in
or
and
xor
jae
xchg
jnp
push
lret
jg
cwtl
inc
addb
dec
mov
push
outsl
push
mov
repz
add
sbb
fs
mov
mov
push
dec
dec
jne
dec
aam
and
in
inc
shld
sub
mov
mov
mov
lods
cwtl
dec
mov
movsb
inc
xor
cmp
sahf
sbb
lcall
stos
scas
xchg
out
scas
push
roll
sbb
dec
jmp
pop
std
insb
push
dec
stc
or
cmp
cmc
icebp
leave
cs
add
ret
data16
fildl
mov
xchg
add
cli
lcall
js
push
aaa
adc
and
cmp
int3
cmc
lock
enter
add
cmp
xor
cmp
add
scas
test
jp
lea
and
int3
xchg
add
inc
pop
les
and
fnstsw
cmp
repz
pop
pushl
sbb
and
add
mov
popf
in
mov
jmp
dec
lods
jb
dec
push
sbb
push
jnp
pushf
jp
aas
cwtl
ljmp
adc
loope
jnp
imul
xchg
lods
pusha
inc
add
sbb
add
call
jb
add
push
mov
in
push
mov
subb
cmp
test
mov
lods
cs
lds
jo
xchg
and
aaa
in
add
xchg
test
lea
mov
add
insb
adc
add
jge
push
cmp
mov
sbb
ljmp
xlat
or
jmp
adc
out
mov
xchg
push
fnstsw
flds
vmovapd
cmc
stc
pop
shl
iret
jmp
sub
push
push
xor
mov
cmp
aas
sbb
and
sbb
das
in
and
jae
jns
aas
pop
sbb
mov
gs
cmp
lock
push
and
and
or
jb
mov
cmp
push
push
inc
dec
jns
inc
cmp
mov
push
xchg
cmp
nop
in
add
xchg
mov
or
std
add
fmuls
add
jb
sbb
mov
or
push
push
sub
es
sbb
cmpsb
adc
dec
cld
or
sbbl
mov
adc
dec
push
cmc
xor
icebp
or
imul
adc
mov
stc
pop
or
lods
faddl
movsl
xorb
add
xchg
xchg
pushf
sbb
and
fmull
inc
pushf
in
dec
adc
mov
andl
add
lret
sub
sti
or
sbb
jge
dec
pop
aam
sub
cwtl
or
and
scas
xor
fldl
xor
xchg
or
lods
mov
and
popf
and
subl
dec
cld
outsb
xor
push
pushf
ja
fwait
rcll
into
cs
int
gs
or
addr16
cmpsb
test
adcb
negb
dec
test
fisubl
jo
je
inc
popf
inc
and
xor
lods
jo
xchg
lods
xchg
inc
cltd
lds
push
mul
jbe
inc
sub
popa
cmp
mov
add
repnz
push
pop
icebp
push
aad
xchg
cltd
inc
xchg
mov
es
shl
push
vucomiss
mov
push
fmull
jno
lcall
ds
add
loop
adc
or
dec
sti
mov
iret
movsl
xor
mov
pop
cmc
iret
or
adc
test
imul
jmp
fdivp
std
movaps
inc
in
or
cwtl
cld
and
cld
add
idiv
ljmp
scas
jmp
aaa
sub
test
cld
adc
inc
jbe
mov
lock
loopne
fsubl
in
or
movsl
add
pop
lahf
push
jp
lahf
lcall
daa
andb
cmpsl
frstor
shl
push
fldenv
cmp
fstps
push
jmp
mov
stc
xchg
sbb
stc
mov
sbb
stc
mov
sbb
stc
rcrb
stc
ficomps
stc
ljmp
clc
add
dec
or
adc
incl
jl
inc
sub
xlat
inc
cmp
inc
inc
jle
inc
push
jle
inc
pop
jle
inc
push
jle
inc
cmpb
xchg
jle
inc
lret
es
lods
cmpsl
gs
inc
movsl
ficompl
add
movsl
repnz
sbb
add
inc
cmpb
std
jge
jo
lahf
out
ffree
out
cmc
or
push
sub
and
dec
cmp
push
js
inc
test
sahf
jle
inc
int
cmp
ljmp
daa
sub
lahf
andl
iret
mov
xchg
shrl
fxch
in
sub
ret
pop
xlat
das
xchg
and
mov
es
rcrl
bnd
movsb
jle
fwait
cwtl
jle
fwait
lea
fwait
hlt
jle
fstps
sub
xor
cli
jne
bound
lahf
je
inc
lahf
xchg
lahf
stos
jp
lahf
mov
ss
fxch
cmp
in
pmaddwd
ret
out
or
int
xor
inc
repz
push
repz
leave
ja
fs
xchg
aaa
jae
in
aam
negb
clc
add
dec
or
hlt
dec
push
js
inc
xor
inc
jle
inc
outsl
dec
data16
movsl
sub
jecxz
mov
shll
xchg
sub
mov
es
roll
push
xchg
repz
repz
fpatan
in
push
int
add
xor
adc
adc
pop
cld
jno
mov
cld
out
sbb
cmp
ljmp
cmp
bound
aas
cmp
xor
cmp
jae
stos
cmc
push
inc
jp
pop
push
jp
lahf
outsb
jp
lahf
mov
lahf
movsb
jp
lahf
mov
xchg
sarl
lahf
jecxz
lahf
cmc
bound
cmp
ret
and
ret
mov
test
imul
aam
aas
icebp
cld
adc
add
fisubrs
cmp
fidivrs
ds
mov
enter
lcall
es
std
xor
mov
add
sbb
push
cmp
inc
cmp
lods
stos
test
mov
cmpsl
shll
pop
ret
in
mov
jb
xchg
lock
xlat
addr16
sbb
xchg
sbb
les
clc
je
mov
repz
push
xchg
test
cmpsl
ret
push
jmp
adc
into
ficomps
call
xchg
test
push
scas
ret
xchg
add
jl
mov
stc
cmpsb
aaa
cmp
popa
mov
shlb
fsub
stc
adc
add
pop
jg
jp
cltd
in
jle
sbb
jb
xchg
ja
push
popf
lds
fstpt
sahf
cld
loope
aas
xor
movsl
femms
mov
add
movsb
sti
mov
cmpsl
xchg
leave
js
mov
jmp
call
rcrl
cmp
shrl
data16
push
or
dec
jg
mov
in
mulb
mov
fldt
aaa
sub
loope
aam
jb
xchg
arpl
popf
push
jp
cltd
mov
sahf
aas
cs
adc
mov
popf
lea
push
lret
dec
adcb
or
lahf
jnp
pop
jbe
leave
roll
add
push
cltd
pop
mov
stc
ja
popa
jae
mov
sbb
clc
adc
dec
cmp
pop
pop
adcb
out
sbb
push
cmpl
std
cwtl
out
fisubrs
je
sahf
call
std
adc
cmp
mov
push
pushf
jle
lret
jne
push
ret
cmp
jns,pt
xor
test
xor
std
bound
push
in
test
mov
es
popl
lods
repz
push
aad
ss
jae
outsb
or
xchg
hlt
lret
es
ficomps
jnp
push
xchg
jp
pop
enter
or
sbb
inc
mov
scas
cmpsl
mov
shlb
jl
nop
fxch
add
jmp
or
loope
shrl
cld
add
dec
and
iret
inc
xor
xchg
cltd
jo
cmp
pop
stc
push
je
popf
daa
jl
gs
lahf
insl
and
xchg
lahf
jge
pushf
lahf
inc
movsl
movsb
lahf
dec
movsl
lods
lahf
push
movsl
mov
pop
movsl
mov
lahf
sub
movsl
aam
cmp
jne
call
sub
lret
clc
lret
mov
or
sub
adc
xor
iret
and
adc
sub
or
xor
scas
cmp
movsl
fldl
fisttpll
fstl
fstpl
lcall
sbb
mov
inc
push
xchg
add
nop
sub
sbbb
xchg
mov
adc
in
shll
aas
fldt
jo
mov
add
xchg
sub
mov
mov
pop
pop
push
mov
pop
push
mov
pop
xchg
mov
mov
mov
popl
xchg
xchg
add
xchg
mov
mov
mov
mov
sub
mov
mov
pop
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
push
mov
pop
xchg
xchg
movl
sub
mov
mov
pop
sub
mov
mov
pop
xchg
xchg
mov
mov
mov
mov
xchg
call
xchg
mov
mov
mov
mov
sub
mov
mov
pop
xchg
call
inc
incl
cmp
jne
mov
inc
cmp
jne
mov
mov
add
add
jmp
jmp
mov
lea
mov
xorl
add
cmp
jb
jmp
pop
sub
mov
jmp
mov
add
mov
subl
mov
ret
call
mov
mov
mov
sub
mov
mov
pop
sub
mov
push
mov
pop
xchg
addl
xchg
mov
mov
mov
pushl
mov
mov
mov
mov
mov
mov
sub
mov
push
pop
pop
sub
mov
mov
pop
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
pop
mov
mov
mov
decw
sub
mov
mov
pop
sub
mov
mov
pop
sub
movl
xchg
mov
mov
mov
call
dec
rolb
add
add
rolb
add
add
add
rolb
add
add
add
pushl
add
add
add
dec
rolb
add
add
rolb
add
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
fiadds
inc
gs
gs
imul
js
je
jb
arpl
jae
imul
gs
xor
cs
insb
add
std
sbb
mov
sbb
inc
jbe
push
clc
sti
iret
add
ss
mov
mov
add
sbbb
add
pop
pushf
inc
add
insl
add
jbe
movsb
call
std
sbb
hlt
dec
add
pop
cmp
movb
and
call
sahf
inc
add
jbe
push
xchg
add
jbe
inc
add
adc
js
les
inc
jbe
jo
sahf
rolb
jbe
push
clc
sti
iret
add
ss
mov
rolb
js
jbe
push
les
inc
jbe
jo
sahf
mov
add
push
clc
sti
iret
add
ss
mov
mov
pop
cmpsl
push
add
push
push
lea
iret
insl
add
jbe
movsb
pop
cmc
mov
cmc
jp
mov
add
add
jbe
add
jbe
add
jbe
xor
inc
js
aaa
dec
je
xor
xor
inc
jl
xor
ss
dec
je
xor
xor
jbe
push
xor
add
adc
imul
dec
js
inc
pop
inc
add
fs
jae
jbe
push
xor
sbb
add
popa
insb
aaa
and
dec
js
inc
pop
push
imul
jb
adc
push
pop
aas
je
pop
and
sbb
arpl
dec
mov
movb
jbe
call
int3
cmp
cmp
sub
popf
mov
inc
add
iret
shll
adc
inc
jbe
add
mov
sti
iret
sahf
shll
adc
inc
jbe
dec
add
mov
sti
iret
mov
xor
adc
inc
jbe
aaa
add
mov
sti
iret
ret
dec
push
inc
adc
inc
jbe
pop
add
mov
sti
iret
iret
shll
adc
inc
jbe
pop
add
mov
mov
mov
and
push
push
and
jne
adc
ds
sub
test
dec
add
add
ds
add
cmp
add
xor
test
mov
pop
add
and
pop
and
or
mov
cmp
or
jne
sbb
cmpsb
add
les
or
mov
dec
nop/reserved
jbe
sbb
dec
jmp
std
aas
and
add
mov
inc
lahf
mul
sub
lock
aaa
sbb
movsb
testb
dec
mov
subl
inc
or
push
pop
pop
sub
clc
adc
xor
jbe
mov
movb
xlat
add
ss
cmp
cmp
ss
adc
jbe
jmp
mov
jmp
mov
cld
es
inc
push
sti
iret
add
ss
push
jmp
adc
jbe
mov
sub
mov
inc
mov
rcrb
cs
jne
mov
sbb
cmp
jmp
mov
jmp
mov
orl
add
repnz
add
jbe
addb
or
push
jmp
roll
push
clc
dec
pop
shll
dec
inc
add
lea
jne
adc
cmp
int
sbb
incl
jbe
push
inc
adc
inc
jbe
xchg
lcall
push
clc
das
cmpsb
pop
in
dec
add
dec
sbb
mov
pop
shll
pushf
inc
add
dec
mov
adc
jb
roll
adc
add
push
clc
cmc
xor
add
dec
jb
jmp
orl
inc
push
jle
mov
adc
jecxz
inc
sub
adc
push
add
ss
add
jns
rolb
dec
adc
cmpsb
rolb
add
mov
sti
cmp
ss
mov
addl
add
int3
stc
pop
xor
cwtl
daa
add
jbe
add
push
dec
rolb
jbe
add
in
roll
push
clc
dec
push
shll
mov
push
cmpsl
push
add
jbe
call
xorl
mov
mov
sbb
inc
jbe
add
jne
rep
push
dec
inc
add
add
jne
pushl
mov
mov
push
mov
and
or
cld
int
fcmovnbe
incb
call
add
sub
add
sbb
mov
pop
add
jae
lds
mov
movsl
dec
add
adc
add
cmpsb
aam
cmp
add
jne
sahf
sldt
jbe
sub
test
sbb
add
call
cmp
add
ds
orl
xchg
mov
mov
pop
jmp
dec
shlb
push
inc
data16
ret
xor
mov
adc
mov
repnz
jl
pop
les
sub
