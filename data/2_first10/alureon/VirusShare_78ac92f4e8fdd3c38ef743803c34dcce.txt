mov
push
in
mov
aam
in
test
push
in
fcmovbe
push
in
in
aam
in
aam
in
data16
in
and
push
in
inc
aam
in
add
push
in
not
push
in
ljmp
in
lret
in
mov
rcll
cmpsb
rcll
xchg
rcll
mov
push
in
data16
in
or
push
in
sbb
push
in
data16
in
insb
aam
in
pop
aam
in
data16
in
data16
in
xchg
jo
xchg
jo
mov
js
mov
jo
xchg
jo
xchg
jo
xchg
jo
xchg
cwtl
in
jbe
pusha
in
jbe
pusha
in
jbe
pusha
in
jbe
pusha
in
jbe
pusha
in
jbe
pusha
in
jbe
pusha
in
jbe
aam
ljmp
in
ljmp
in
ljmp
in
jbe
pusha
in
jbe
pusha
in
out
shr
out
shr
out
shr
addr16
in
addr16
in
addr16
in
addr16
in
addr16
in
addr16
in
addr16
in
addr16
in
addr16
in
addr16
in
jbe
pusha
in
jbe
pusha
in
jbe
pusha
in
call
mov
in
call
mov
in
push
mov
in
push
mov
in
push
mov
in
push
mov
in
push
mov
in
jbe
pusha
in
xchg
push
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
aam
nop
in
lret
in
mov
in
ret
in
mov
ret
nop
in
mov
nop
in
mov
nop
in
scas
ret
nop
in
stos
ret
nop
in
cmpsb
ret
nop
in
mov
ret
nop
in
lcall
in
xchg
ret
nop
in
data16
in
mov
nop
in
mov
nop
in
xchg
nop
in
add
in
jle
nop
in
lret
in
jp
nop
in
jbe
nop
in
jb
nop
in
outsb
ret
nop
in
push
nop
in
retw
nop
in
nop
in
pop
ret
nop
in
pop
ret
nop
in
data16
in
cwtl
in
in
xchg
in
in
xchg
in
in
xchg
in
in
xchg
jecxz
in
xchg
jecxz
in
sahf
call
push
in
fwait
mov
in
popf
in
in
fwait
jmp
push
in
cwtl
in
in
cwtl
loopne
in
lahf
jmp
sub
jmp
sub
out
in
cltd
out
in
lahf
jmp
test
cltd
out
in
lcall
in
cltd
out
in
cltd
out
in
lahf
jmp
push
in
test
pop
mov
push
rorb
pop
ficoml
mov
in
iret
repz
gs
in
test
pop
mov
push
rorb
pop
ficoml
mov
dec
lods
adc
lds
push
push
in
sahf
in
push
fwait
in
sbb
mov
in
sbb
loopne
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
xchg
ret
adc
mov
push
aam
enter
mov
fsts
mov
in
xchg
ret
sbb
pusha
lret
and
in
aad
mov
data16
in
xchg
mov
mov
in
iret
and
xchg
adc
push
in
mov
mov
lret
and
stos
sbb
mov
and
mov
jno
fnstenv
les
sbb
ret
push
aam
xchg
pop
aam
ret
pop
rolb
mov
ret
pop
fcompl
mov
dec
mov
ret
dec
rcll
push
in
mov
sbb
ret
push
aam
xchg
pop
aam
ret
pop
rolb
mov
ret
pop
fcompl
mov
fs
or
aas
mov
or
ret
push
aam
xchg
pop
aam
ret
pop
rolb
mov
ret
pop
fcompl
mov
dec
mov
ret
dec
rcll
lods
sub
lret
and
dec
data16
in
mov
std
lods
das
ret
push
aam
xchg
pop
aam
ret
pop
rolb
mov
ret
pop
fcompl
mov
dec
mov
ret
dec
rcll
lods
sub
lret
and
in
mov
std
lods
das
ret
push
aam
xchg
pop
aam
ret
pop
rolb
mov
ret
pop
fcompl
mov
in
scas
and
data16
in
xchg
mov
in
ret
dec
fcomps
les
and
cmp
and
pop
fcomps
lods
das
aad
mov
pop
aam
lods
cmp
sbb
push
aad
mov
adc
rcll
mov
in
cwtl
mov
in
scas
and
push
lret
pop
fnstenv
xchg
pop
fyl2x
mov
fcoms
push
in
mov
adc
les
add
pop
int3
sbb
in
mov
adc
les
add
pop
int3
sbb
in
scas
add
addr16
in
data16
in
icebp
add
lock
mov
and
ret
mov
and
cs
jns
negb
hlt
xchg
outsl
pop
in
mov
in
and
pop
cs
sahf
pop
cmpsl
adc
fcmovb
out
xchg
sub
jo
inc
icebp
mov
scas
jle
les
out
pop
mov
data16
inc
pop
lock
in
data16
jp
aam
mov
aam
in
pop
pop
mov
adc
xchg
adc
popf
adc
mov
in
into
sbb
sbb
data16
xor
mov
fisubrl
push
outsl
sub
aam
icebp
pusha
js
push
jno
and
pusha
sub
push
fcmovnu
icebp
rcr
mov
lods
fcmovb
fstpt
push
pop
icebp
jmp
fdivl
psrld
sub
add
les
adc
scas
out
push
in
data16
inc
pop
lock
in
data16
jp
aam
mov
aam
in
pop
pop
mov
adc
xchg
adc
popf
adc
mov
in
into
inc
fs
sbb
data16
xor
mov
dec
outsb
mov
outsl
sub
aam
icebp
mov
es
pusha
sub
push
fcmovnu
icebp
rcr
mov
lods
fcmovb
fstpt
push
pop
icebp
jmp
fdivl
psrld
sub
add
les
adc
scas
dec
sbb
in
gs
push
pusha
jb
and
gs
in
fidivl
push
scas
testb
testb
mov
inc
push
in
cmp
gs
mov
sbb
in
gs
push
in
data16
scas
rclb
gs
popa
je
push
pop
gs
icebp
fdivs
adc
es
ds
mov
in
data16
jnp
pusha
sub
add
mov
test
movsb
jns
push
inc
out
sub
add
nop
cld
cmpsb
mov
daa
mov
mov
fdivrl
neg
sub
nop
in
out
in
push
cmpsb
mov
adc
dec
test
sbb
out
mov
outsb
mov
outsl
sub
shr
sahf
rclb
lret
icebp
in
pusha
push
cmpsb
mov
add
dec
pop
dec
in
sbb
out
mov
or
push
outsl
sub
shr
mov
nop
in
icebp
test
lret
dec
fmuls
gs
adc
data16
mov
jo
loop
data16
xor
fwait
adc
sub
sbb
sahf
rclb
sub
sbb
cmpsb
mov
aad
lock
aas
mov
add
sub
add
shlb
push
push
lds
ret
mov
sub
sbb
mov
mov
mov
sub
sbb
inc
xchg
push
sahf
rclb
sub
add
jmp
imul
and
jmp
aam
push
scas
data16
lock
cmp
xchg
cld
cmpsb
mov
lods
mov
mov
jno
es
aam
scas
push
in
shlb
nop
in
sub
jmp
test
pop
pop
add
inc
into
andb
sbb
data16
popa
pop
mov
in
jbe
push
jno
rcl
data16
inc
mov
cmp
cmpsl
inc
mov
push
lods
jne
in
data16
popa
push
cmp
call
data16
ja
call
fsubrl
mov
mov
in
pushw
mov
jmp
pop
mov
in
cmp
push
into
inc
data16
add
xor
data16
lock
inc
shlb
aam
les
xor
cmp
mov
xchg
aam
scas
loopne
es
in
fldt
nop
in
jmp
movb
es
in
nop
in
gs
aad
mov
in
mov
cmc
dec
sub
or
pop
mov
hlt
jbe
push
push
bndldx
push
mov
test
fstpt
push
in
gs
jmp
loopne
sub
xor
push
in
cmp
out
and
push
sti
pushw
push
bound
push
in
data16
data16
call
in
mov
cmpsb
mov
in
jbe
push
inc
sarb
mov
cmpsb
mov
jmp
ds
hlt
out
cmc
inc
ds
push
push
data16
popa
outsb
scas
call
cmpsb
mov
bound
xchg
in
pop
cld
cmpsb
mov
imul
pop
jmp
add
icebp
test
clc
jl
push
inc
gs
nop
cld
cmpsb
mov
xor
loopne
xor
scas
data16
lock
jno
and
data16
push
inc
dec
mov
in
or
ds
aam
pop
inc
or
data16
sub
scas
sub
rcl
addr16
jns
aam
test
mov
nop
in
jne
mov
adc
lock
jno
rcl
data16
stos
data16
sbb
jnp
pusha
sub
add
mov
cld
je
out
and
cld
mov
movsb
aas
and
push
popa
mov
dec
add
nop
in
mov
call
push
add
out
push
cmpsb
mov
fdivrl
push
push
mov
scas
data16
push
jmp
les
pushw
push
add
scas
sub
shlb
jl
jnp
pusha
sub
push
push
les
sbb
jle
nop
in
gs
pusha
cld
cmpsb
mov
and
nop
in
gs
push
cmpsb
mov
adc
lock
inc
gs
mov
cmpsb
mov
mov
push
push
les
sbb
cmpsb
mov
sbb
lock
inc
dec
mov
adc
sub
mov
mov
aam
mov
in
jmp
aam
jmp
mov
scas
dec
rorl
inc
mov
mov
hlt
gs
mov
cmpsb
mov
jmp
in
pusha
sub
cmp
data16
mov
add
jo
push
icebp
in
cmp
mov
jmp
adc
push
push
out
sub
gs
push
xchg
scas
push
push
cmpsb
nop
in
mov
lock
inc
dec
mov
in
or
cmpsl
data16
add
cld
cmpsb
mov
jmp
in
pusha
sub
cmp
inc
mov
rclb
mov
rclb
jnp
pusha
sub
add
mov
scas
xchg
mov
push
push
cli
nop
in
mov
out
push
cmpsb
mov
jo
lock
inc
mov
in
into
and
pushw
push
les
push
insb
loop
push
in
repz
in
dec
ret
or
icebp
pushf
mov
in
repz
dec
cmp
data16
lret
in
into
mov
in
out
data16
jbe
push
jno
rcl
data16
aas
mov
mov
ja
call
mov
or
scas
and
mov
fisubl
add
push
jb
nop
in
gs
in
jnp
pusha
sub
push
mov
jmp
mov
cld
mov
push
ja
or
cmpsb
rclb
cmpsb
mov
sub
inc
xchg
jp
nop
in
mov
movb
mov
sbb
cmpsb
mov
bound
data16
jbe
push
jmp
lods
push
add
nop
in
lds
lods
push
es
inc
icebp
pushf
aam
xchg
inc
cmp
pushw
mov
push
addr16
insb
out
and
pusha
sub
xor
push
in
pushw
cmpsl
inc
mov
pushf
cmpsl
cmp
push
cmpsl
jmp
test
add
nop
in
jmp
pusha
jno
mov
in
lahf
and
pusha
jb
mov
in
mov
lock
inc
icebp
in
mov
cmpsb
mov
in
jbe
push
inc
sarb
sub
mov
and
mov
cmp
cmc
inc
in
jnp
pusha
sub
push
mov
jbe
cwtl
cmp
mov
outsl
sub
test
cwtl
mov
bound
in
pop
cld
cmpsb
mov
lods
fcmovnb
dec
bound
fsubl
jl
cmpsb
mov
bound
imul
mov
jmp
lods
fdivl
in
xchg
fcomp
cmp
dec
in
jnp
pusha
sub
push
sbb
repz
dec
inc
cltd
mov
in
mov
or
push
insb
gs
push
cld
cmpsb
mov
lods
jne
out
data16
inc
and
pop
mov
cld
cmpsb
mov
jmp
in
pusha
sub
cmp
stos
mov
cmpsb
aas
and
add
add
nop
in
jmp
movb
push
out
push
aad
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
inc
shlb
dec
in
jnp
pusha
sub
scas
call
cmpsb
mov
dec
sarl
xor
mov
icebp
add
lock
sbb
shlb
push
push
data16
add
sub
xor
int
jle
xchg
adc
movsl
adc
test
mov
pusha
cmp
hlt
je
mov
push
ds
data16
push
ja
aam
ja
add
outsb
rclb
outsb
xor
push
dec
sub
adc
loope
testb
icebp
cld
je
icebp
add
lock
je
shlb
nop
in
jne
mov
in
mov
push
add
nop
in
jmp
cmp
add
cmpsb
inc
icebp
sub
adc
cmpsb
fdivl
mov
fstpt
mov
cmpsl
aas
mov
scas
data16
jbe
push
jno
and
data16
push
xor
scas
pop
push
jle
push
add
nop
in
jmp
or
adc
es
jl
inc
loope
icebp
cld
je
lock
hlt
lock
lods
fidivrl
sub
daa
inc
shl
scas
or
inc
loope
testb
icebp
hlt
je
icebp
js
cld
cmpsb
xor
popa
insl
cmp
ljmp
hlt
scas
jmp
inc
fidivrl
cwtl
daa
daa
es
ja
jecxz
daa
inc
or
andl
inc
loope
testb
testb
icebp
hlt
je
icebp
js
jno
and
fidivl
mov
dec
inc
icebp
and
clc
icebp
jae
mov
icebp
scas
mov
sub
out
pop
pop
fdivl
adc
dec
les
adc
stos
aam
scas
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
data16
in
rcll
data16
in
data16
in
dec
aam
in
xchg
push
in
jle
push
in
data16
in
data16
in
js
push
in
mov
in
push
rcll
data16
in
data16
in
aam
in
data16
rcll
data16
in
data16
in
ss
in
mov
mov
in
data16
in
data16
in
data16
in
data16
in
mov
push
in
mov
aam
in
test
push
in
fcmovbe
push
in
in
aam
in
aam
in
data16
in
and
push
in
inc
aam
in
add
push
in
not
push
in
ljmp
in
lret
in
mov
rcll
cmpsb
rcll
xchg
rcll
mov
push
in
data16
in
or
push
in
sbb
push
in
data16
in
insb
aam
in
pop
aam
in
data16
in
gs
pop
fisubl
mov
sbb
push
fiaddl
mov
fstps
rcrb
xchg
in
add
and
in
push
and
pushl
xchg
pop
rcrb
mov
cmpsb
mov
push
fiaddl
ret
pop
leave
adc
mov
data16
in
stos
sub
dec
lret
and
in
outsb
mov
pop
fisubl
mov
in
pop
mov
pop
fisubl
mov
push
in
dec
mov
pop
iret
and
cmp
sbb
dec
ficoml
mov
pop
iret
push
mov
in
lods
adc
dec
ficoml
mov
dec
ficompl
rcrb
mov
in
cld
mov
pop
lret
adc
mov
push
xchg
adc
pop
data16
in
lods
adc
mov
push
aam
shlb
cld
out
frstor
rcrl
lds
mov
aas
stos
add
data16
in
mov
and
xchg
cmpsl
mov
in
mov
pop
les
adc
mov
push
fsubrs
cmpsl
dec
shlb
push
in
fdivs
rclb
mov
stos
sub
push
int
push
fsubrs
lcall
icebp
push
in
in
mov
push
int
mov
mov
cmc
enter
scas
in
mov
adc
mov
stos
sub
sub
xchg
adc
pop
data16
in
mov
cmc
enter
lds
mov
in
mov
add
push
leave
sbb
push
lret
and
in
mov
jecxz
sbb
sbb
in
mov
add
in
data16
mov
in
loop
push
fsubp
int3
push
out
aam
out
loop
push
mul
in
loop
push
push
jecxz
push
push
jecxz
push
sbb
or
and
adc
sub
sbb
xor
and
cmp
sub
inc
jecxz
pop
dec
jecxz
pop
push
jecxz
and
out
and
out
and
call
imul
jp
add
sbb
dec
jmp
push
and
xchg
jmp
int3
and
icebp
jmp
hlt
and
sub
sbb
ds
sub
es
ljmp
ds
daa
insl
jmp
daa
mov
stos
daa
shr
into
daa
lock
daa
adc
add
sub
pop
sub
imul
in
mov
scas
in
movsb
sub
in
mov
shr
ret
sub
in
iret
sub
in
fsubrl
pop
in
add
and
adc
sub
sbb
cmp
xor
dec
in
dec
sub
jbe
xchg
in
mov
lods
in
mov
shr
sub
in
in
sub
out
add
push
out
cvtpi2ps
out
push
sub
out
sub
inc
out
cmp
jp
outsl
sub
out
lods
sub
out
les
loopne
iret
sub
out
loop
add
imull
push
out
pop
sub
dec
sub
outsb
sub
out
shrb
pop
lock
sub
lock
in
data16
xchg
mov
in
data16
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loope
sbb
popf
loope
sbb
data16
in
data16
in
shlb
js
cmp
jecxz
fdivl
mov
add
in
cmp
fiadds
jmp
push
js
data16
mov
cmp
and
mov
in
icebp
dec
mov
jmp
fisttpl
cmp
jb
rcl
data16
ja
mov
cmpsl
sub
in
adc
daa
fidivl
bound
call
outsb
cmp
adc
imul
ja
test
fdiv
mov
lods
stc
in
data16
pusha
jns
xchg
call
jl
mov
adc
std
dec
jp
mov
dec
sub
icebp
adc
iret
shll
sub
jo
scas
icebp
repz
sub
aad
icebp
sub
push
in
gs
jl
inc
loope
testb
mov
add
cltd
daa
add
imul
gs
xor
cs
insb
add
daa
add
int
add
fsubl
add
jmp
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
fs
imul
add
je
jb
arpl
fs
jae
add
jb
jne
insb
push
jb
je
arpl
insb
gs
push
pop
je
call
pop
or
xor
mov
jno
shr
mov
mov
ja
jb
test
dec
bsf
inc
test
mov
cmp
bsf
mov
jae
sub
jne
cmp
dec
pushf
jns
xchg
inc
call
pop
mov
clc
inc
inc
clc
sub
inc
inc
push
inc
clc
add
dec
dec
inc
inc
push
push
dec
repnz
jmp
bts
test
ret
test
pop
mov
inc
push
clc
inc
inc
add
neg
mov
mov
add
mov
inc
jmp
dec
add
add
sub
dec
bt
dec
add
cld
test
cmp
jb
sub
xchg
inc
dec
pop
mov
cmp
neg
dec
add
dec
repz
add
popf
push
jmp
