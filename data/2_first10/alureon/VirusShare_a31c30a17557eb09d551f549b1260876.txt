push
mov
push
mov
mov
cmp
jb
lea
push
xor
mov
test
jbe
push
push
push
pop
sub
mov
mov
mov
lea
lea
mov
ror
imul
not
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
leave
ret
cmpl
je
incl
xor
inc
ret
pushl
call
test
jne
ret
push
push
push
call
xor
inc
mov
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
jmp
push
mov
mov
sub
push
mov
mov
imul
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
push
push
mov
lea
push
call
mov
mov
push
mov
call
pop
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
push
mov
pop
xor
movl
lea
rep
mov
push
lea
push
call
push
push
mov
push
lea
push
push
mov
push
call
mov
lea
mov
inc
test
jne
sub
cmp
jae
dec
mov
inc
test
jne
mov
mov
movsl
movsl
movsl
push
push
push
push
call
push
pushl
mov
push
call
mov
pop
pop
pop
call
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
add
push
pop
pushl
lea
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
push
push
push
mov
push
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
pushl
pushl
call
pop
pop
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
push
xor
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
add
xor
add
incl
mov
push
call
mov
mov
mov
xor
mov
div
mov
mov
mov
not
add
mov
sub
xor
mov
mov
add
inc
cmpl
jb
testl
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
mov
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
mov
push
rol
push
mov
test
je
mov
jmp
push
call
mov
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
push
push
push
pushl
call
mov
lea
add
lea
add
mov
pushl
mov
mov
lea
and
call
pushl
mov
mov
call
pushl
pushl
pushl
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
mov
ret
mov
push
mov
mov
mov
mov
add
cmpl
jne
xor
jmp
push
mov
push
mov
push
lea
mov
push
push
mov
push
push
mov
call
cmpl
jne
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
cmpl
jne
push
push
push
push
call
movzwl
push
pushl
push
push
call
pop
xor
pop
inc
pop
pop
ret
int
popf
cmpsb
jns
cmp
xchg
inc
xor
sbb
dec
sarl
in
xchg
clc
jmp
repnz
mov
aam
and
push
cmc
xlat
arpl
mov
xor
add
mov
sub
sbb
dec
push
icebp
jle
gs
add
sub
or
jne
scas
jns
idiv
jp
push
push
add
push
xchg
insl
movsb
stos
rcl
aaa
sbb
sub
dec
push
xchg
fcmovne
jns
xchg
cmp
cmp
adc
add
mov
cmp
adc
loop
jne
arpl
imul
xchg
xchg
testb
mov
dec
adc
pop
jg
pop
jbe
mov
mov
jl
fsubl
xchg
scas
pop
add
inc
xor
out
inc
divl
xchg
test
outsb
nop
mov
xchg
js
mov
pop
mov
inc
push
inc
stos
inc
lea
dec
ds
fsubrp
mov
add
jb
les
mov
pop
or
mov
jb
jb
leave
adc
fs
sub
les
xchg
lcall
inc
mov
jle
cmp
or
dec
fcmovne
or
cmp
hlt
enter
xchg
cmp
mov
add
ja
bound
xchg
and
xchg
repz
cmp
sbb
cmp
pop
cmp
add
xor
lcall
not
mov
sbb
lret
dec
insb
jb
call
pushf
fsts
shl
inc
in
popf
adc
mov
inc
adc
incb
or
push
mov
add
imul
mov
sub
adc
or
outsl
movsl
mov
mov
mov
cmp
jbe
pop
aam
stc
mov
pop
lahf
movsl
mov
sti
mov
push
testb
je
dec
xchg
or
add
cmp
add
xor
cmp
pop
pop
hlt
jae
and
leave
push
mov
enter
repnz
rolb
nop
pop
lea
xchg
out
sub
inc
loopne
fidivrs
and
mov
mov
movsb
arpl
mov
movsl
push
std
ja
pop
aad
xchg
jnp
dec
mov
outsb
clc
movsb
mov
jle
sub
or
pop
adc
testb
int3
fadd
and
add
imul
lods
adc
xor
dec
mov
test
sub
jae
iret
sbb
push
inc
jge
pop
mov
pushf
inc
repz
call
call
pop
add
jne
inc
fs
aas
mov
lret
repnz
and
jns
jbe
pop
push
push
jno
lods
idivl
sub
jge
fistpl
add
cmpsl
std
xor
nop
mov
sub
pop
dec
add
pop
ss
sbb
lret
mov
xor
aam
loop
and
insb
in
inc
mov
sar
lock
cmpsl
out
cwtl
xchg
cmp
arpl
call
ljmp
rolb
mov
popa
mov
xchg
hlt
pushf
out
dec
xchg
xchg
jecxz
test
into
xchg
aas
sahf
push
aam
and
xor
fdivs
mov
std
mov
sti
jmp
pop
push
jno
mov
xor
scas
jge
out
xor
xchg
std
jge
mov
idiv
in
jae
mov
hlt
ds
aas
mull
insb
push
jb
inc
ljmp
lcall
mov
add
adc
into
jnp
sbb
pop
lret
jg
divb
jle
clc
in
clc
and
scas
fsubl
cmpsb
wbinvd
dec
mov
xchg
push
add
cmp
push
add
fmull
xchg
lods
fstl
in
adc
sar
mov
cmc
pop
ljmp
test
or
mov
fldenv
test
das
jle
ds
or
rorl
jo
jg
or
pusha
pop
std
mov
push
loopne
je
xchg
mov
add
insl
mov
mov
cwtl
jmp
lods
sar
jb
xor
cmpsl
mov
ja
xor
mov
fs
insb
mov
inc
mov
cld
into
js
or
or
xchg
or
cld
xchg
imul
sub
xchg
fwait
lret
xor
mov
ret
sub
add
inc
out
lahf
pextrw
arpl
pop
sbb
stos
aam
xchg
fiadds
mov
pop
inc
pop
fimuls
cmp
xchg
pop
js
leave
aaa
daa
jnp
pop
in
and
jmp
lea
mov
mov
sahf
dec
add
mov
movsb
cli
cmp
call
mov
mov
out
mov
imul
inc
cmp
sub
xor
mov
jecxz
stos
jae
imul
clc
sub
mov
loop
xchg
push
add
and
or
dec
and
dec
ja
xor
jge
shlb
and
gs
dec
pop
das
data16
fldcw
cmpsl
hlt
scas
sbb
adc
xchg
xchg
sub
push
mov
inc
scas
add
cmp
xchg
sarb
inc
rorl
cmp
xchg
sbb
lea
repz
out
adc
push
fucomip
or
mov
addl
mov
mov
and
add
or
rorb
test
lods
xor
roll
iret
sub
push
or
repz
sbb
aam
insb
gs
decl
xchg
orb
int3
test
sbb
lods
jnp
lcall
mov
loop
pop
movsb
sub
pop
cs
fidivrl
xchg
rorb
lcall
mov
or
repnz
fidivs
ficoml
stos
and
popa
lahf
decb
inc
imul
fbstp
push
call
add
push
cmp
mov
cwtl
pop
ljmp
ss
pop
outsl
imul
mov
repz
or
mov
adc
cmpsl
rcrl
pusha
pminsw
push
add
hlt
sbb
popf
sti
stc
and
icebp
lret
add
dec
aam
xor
add
cmp
xadd
cs
xchg
les
repz
jp
fisubs
subb
dec
jne
dec
dec
or
mov
fimull
add
das
pop
rcrb
push
fdivrl
ret
into
sub
rolb
repz
cmpb
mov
fmull
cli
sbb
mov
adcl
add
bsr
imul
jl
push
or
pop
call
lahf
ret
push
scas
popa
adc
mov
cmpsl
dec
push
stos
sbb
notl
test
test
adc
addr16
loop
xor
orl
in
jns
fsubl
in
in
outsb
imul
add
mov
inc
or
out
fs
pop
scas
insb
iret
push
add
mov
lcall
mov
cltd
dec
movsl
pop
inc
sub
dec
dec
into
dec
fcomps
mov
dec
popa
pop
aad
pop
pop
es
xor
inc
cld
pop
mov
cmp
mov
jo
push
neg
sbb
cmp
pop
or
dec
je
adc
inc
outsl
xor
mov
imul
rcrb
sbb
pop
pop
aas
ja
pop
add
add
dec
icebp
test
sub
mov
fisttpl
and
lods
insb
jo
movb
mov
sub
mov
outsl
hlt
adc
adc
jnp
cmc
sub
jo
push
cmpsl
xor
lods
cmp
das
lods
fiaddl
cmp
pop
lods
daa
in
fs
dec
movsl
jle
and
or
jae
mov
rcrb
sub
mov
add
incl
cmp
jae
inc
fdiv
add
xchg
imul
negl
xor
sbb
fnstcw
dec
mov
push
sub
cs
out
test
insl
xchg
mov
movsl
xor
rcr
xchg
nop
push
ljmp
fidivl
mov
cmp
shrb
incb
add
push
loop
pop
pop
icebp
push
pushf
arpl
enter
add
repz
popf
adc
rclb
mov
xchg
stos
fsubl
je
inc
pop
std
mov
seto
push
sbb
or
mov
adc
xchg
adc
or
test
mov
out
pop
jbe
mov
jg
mov
mov
mov
scas
mov
jo
ljmp
sti
inc
ja
bound
xorl
icebp
inc
mov
mov
shlb
pop
push
add
xchg
lret
mov
repnz
or
inc
insb
loop
lret
mov
mov
mov
ret
addr16
movsb
sti
jnp
dec
cmp
scas
cmpsb
cmp
je
test
rorb
in
std
sub
inc
arpl
popa
hlt
fwait
lock
sub
cld
and
xchg
pop
cmc
lock
push
lods
or
les
xor
inc
sarb
lret
sahf
xlat
inc
imulb
call
imul
push
inc
shr
jmp
lret
push
dec
aad
movsl
imul
sub
js
sbb
cmp
fwait
sub
fcmovnbe
push
inc
mov
loopne
popa
adc
andl
add
bnd
les
repnz
xchg
lds
add
inc
fs
cmp
mov
repz
cmpsb
test
testl
and
cld
in
push
stc
add
cmp
lahf
pop
add
add
mov
sti
dec
dec
mov
jp
add
mov
cmpsl
stos
xchg
cmp
fisubs
or
dec
sbb
popf
lods
shl
lret
xor
push
lock
xchg
pop
jno
adc
mov
sbb
adc
xchg
or
and
mov
movsl
mov
les
jb
inc
adc
add
orl
mov
xor
out
mov
sub
fs
sbb
add
add
mov
xchg
sbbb
pop
imul
mov
das
xchg
cli
sub
jle
xor
add
xchg
mov
sbbl
adc
insl
hlt
cwtl
dec
jno
ret
mov
adc
mov
mov
jne
and
mov
xlat
dec
inc
xchg
xchg
decb
jp
xchg
lcall
fnstsw
cld
lods
stc
jecxz
mov
dec
movsl
jl
push
xchg
cltd
outsl
sbb
iret
adc
mov
das
cmp
xor
adc
in
mov
xor
int
mov
jo
dec
mov
imul
mov
dec
dec
add
ficomps
dec
data16
cmp
push
js
and
mov
in
int3
push
push
sbb
or
sbb
add
xor
inc
popa
leave
jo
pusha
mov
add
incl
xlat
ds
cmp
ds
xor
push
cli
jg
add
add
xor
fmull
mov
inc
js
lods
xlat
xchg
ss
or
fstpt
lods
mov
hlt
aaa
mov
lret
pop
lods
jge
popf
mov
sbb
fidivrl
dec
pop
test
lahf
push
not
dec
pop
mov
push
lahf
add
jae
and
roll
arpl
adc
sbb
adc
fstps
mov
xchg
sbb
fidivrs
arpl
adc
aam
out
iret
loopne
add
mov
rcr
sub
mov
scas
out
or
add
mov
shll
mov
mov
or
xorb
jae
imul
lcall
push
mov
movb
enter
testb
fadd
jl
ret
ficoms
push
sub
cmpsl
pop
arpl
mov
add
xchg
cmc
mov
add
xor
sub
lret
push
mov
pop
pop
and
push
pop
mov
inc
ss
xor
sub
mov
sbb
sbb
imul
pop
mov
push
cmp
std
xchg
push
sub
push
and
les
mov
adc
jae
xlat
fwait
adc
int3
push
imul
mov
mov
mov
lods
mov
out
out
pop
aaa
jle
add
dec
aas
cltd
repz
mov
les
out
xchg
hlt
sbb
cmp
scas
outsb
push
aas
jne
test
jmp
scas
mov
das
imul
iret
sub
in
push
xor
pop
mov
push
inc
mov
mov
repz
push
outsb
pop
scas
mov
and
icebp
xor
mov
mov
movsb
outsb
add
add
sub
dec
ja
xorl
pop
inc
push
aas
ds
add
inc
outsl
mov
mov
adc
mov
mov
jmp
ret
push
push
mov
inc
jnp
repnz
aas
dec
test
mov
out
xchg
daa
pop
xor
add
sub
gs
idiv
mov
pushf
lret
sub
inc
xchg
add
cmp
xchg
insl
fcomps
loop
xor
aaa
out
xlat
fmul
test
jne
sbb
xchg
out
pop
xchg
movsb
enter
into
inc
mov
mov
insb
repz
ja
pusha
pop
xor
mov
sbb
into
pop
int3
stos
and
adc
jne
les
xchg
add
hlt
das
stos
std
cmpsl
ss
cs
push
dec
into
jl
enter
xlat
incb
dec
mov
int3
mov
or
test
aas
cmc
xchg
fwait
jbe
test
std
cli
add
or
js
js
loopne
cmp
pushl
repz
add
add
fimull
sti
call
fidivrl
inc
arpl
push
push
loopne
dec
outsl
xlat
addr16
movl
xchg
lahf
dec
xor
pop
imul
icebp
or
pop
fwait
xchg
inc
dec
mov
adc
fsubs
mov
push
sbb
iret
movsl
hlt
mov
inc
addr16
inc
jb
add
cmp
stos
mov
test
negl
lret
popf
sahf
jmp
sbb
shrb
jno
lret
add
out
xchg
ss
ss
jle
hlt
and
or
cmpsb
xlat
in
and
insb
jo
xor
shll
mov
sub
movsb
pop
cmpsl
dec
adc
enter
sbbb
out
push
flds
pop
jl
pop
pop
arpl
mov
push
pop
dec
adc
arpl
lret
testl
cmp
push
add
adc
lock
xor
dec
adc
push
in
xor
repz
mov
std
lock
test
jg
dec
inc
mov
xchg
mov
xor
shrl
fidivl
hlt
push
lds
add
fwait
das
adc
cmp
mov
daa
xor
rcrl
cs
xchg
push
shl
jecxz
pusha
inc
add
inc
stos
shlb
cmp
pop
pop
push
push
imul
cli
mov
xchg
or
test
in
rcrb
adc
sub
inc
jnp
dec
inc
shlb
dec
xchg
cmpsl
xchg
dec
dec
jns
nop
inc
pushf
fdivs
push
jp
cmpb
mov
imull
sbb
ds
flds
sub
std
popf
push
push
fadds
pop
popf
add
out
and
pop
hlt
popf
mov
ret
in
pop
loopne
or
adc
pusha
mov
test
addr16
mov
add
mov
scas
dec
outsb
push
sub
nop
mov
in
sub
inc
test
icebp
stos
sti
lock
ret
sub
sbb
mov
mov
cmp
loop
out
or
push
jne
cmp
adc
cwtl
outsl
mov
add
dec
arpl
test
push
xor
fnstenv
add
add
stos
mov
sub
sub
repz
jb
xchg
jbe
adc
add
xchg
jns
pop
fsubrs
movsl
pop
sbb
repnz
hlt
xchg
xor
mov
and
jbe
add
push
notb
or
sbb
dec
xchg
mov
pop
push
jnp
cli
cmp
ja
movsb
daa
or
aad
test
jecxz
ret
mov
cmpsb
pusha
sbbb
in
adcl
pop
fwait
cmpsl
jnp
fdivp
and
sbb
xor
ret
scas
inc
sbb
add
add
add
mov
outsb
int
push
out
cmpsb
xor
mov
pop
repnz
js
decb
cwtl
cmp
xchg
adc
mov
into
ret
jb
cmp
ret
mov
push
pop
sahf
inc
iret
inc
add
lret
loope
ret
and
addr16
sbb
mov
xorl
jo
out
mov
add
addr16
push
pop
shlb
cld
jne
xor
inc
xorl
mov
pusha
addb
into
inc
data16
mov
or
xor
lods
push
push
mov
ret
lahf
subb
push
push
inc
in
in
dec
test
or
ljmp
or
shll
mov
cmp
xor
xorb
push
cmpsb
mov
into
addl
insl
xchg
mov
rcrl
int
es
and
repnz
xlat
xchg
pop
hlt
stc
cwtl
imul
adc
sarl
mov
ds
xchg
fiadds
jb
push
clc
inc
clc
loope
out
fcomi
outsb
dec
iret
sub
daa
enter
inc
popa
stos
dec
cs
mov
push
jns
jge
fistl
cmp
std
cld
in
xchg
out
sti
push
mov
out
xor
xor
daa
xor
xchg
shr
push
xlat
cwtl
push
into
mov
jae
mov
insl
jl
popf
scas
popa
rcrl
js
in
repnz
add
mov
jae
adc
inc
int
mull
push
and
pop
fs
shll
pop
jg
repnz
mov
shll
mov
dec
xor
sbbb
es
ljmp
sub
pop
xchg
cmp
insl
mov
divl
add
jecxz
xchg
call
lret
adc
lahf
sub
sub
sti
jbe
sbb
mov
push
xchg
popf
sbb
mov
fldenv
adc
mov
xor
fildll
pusha
shl
push
fisubl
jb
rorl
push
sbb
test
dec
adc
fnsave
cltd
aas
jecxz
sar
mov
push
sbb
pushf
mov
and
inc
and
incl
mov
xor
push
hlt
gs
idiv
cmpl
mov
fwait
add
push
mov
je
pop
or
in
andl
mov
insl
inc
xchg
push
mov
rcl
adc
push
and
rcll
pop
pop
or
cmpsb
jle
mov
ret
pusha
testb
cld
scas
and
inc
mov
test
or
xor
imul
fidivs
popa
jmp
adc
cmp
xchg
push
fdivrs
and
add
mov
cmp
push
mov
sub
or
jle
or
mov
enter
mov
stc
outsb
push
stc
inc
enter
adc
lea
mov
push
xor
rcr
stos
les
adc
in
push
xor
lea
xor
or
xor
cli
movsb
out
fs
sbbl
add
xchg
pop
iret
shrd
popa
rclb
inc
jbe
xchg
mov
push
mov
push
cs
loope
mov
mov
inc
test
pop
fcomi
gs
loopne
js
mov
push
push
inc
pop
mov
inc
pop
outsl
repz
add
gs
or
jge
lds
and
aam
jg
push
movaps
psrlw
mov
daa
and
sub
and
mov
jg
cld
mov
in
js
xchg
push
fdivl
add
push
bound
enter
dec
sub
sarl
push
mov
inc
movsl
adc
pop
out
cmp
ss
cmpsb
adc
jnp
dec
sahf
xor
cmp
jmp
mov
addl
sahf
mov
and
mov
call
loopne
imul
mov
test
add
lcall
inc
addr16
pop
loopne
cwtl
loopne
push
dec
or
mov
xor
xor
pop
and
push
fsubs
inc
das
std
sbb
lods
test
mov
movsb
jp
iret
jbe
or
and
mull
add
pop
cwtl
xchg
scas
lcall
popa
test
mov
adc
ret
and
clc
mov
bnd
iret
test
add
movsl
mov
cwtl
xchg
das
mov
into
mov
push
inc
sbb
cltd
and
push
push
mov
cmp
cs
out
ret
mov
lret
lock
int
lds
out
mov
mov
jp
outsl
cmp
pushf
dec
pop
jg
outsl
ja
repz
xor
lea
push
push
mov
add
add
push
mov
mov
push
ss
add
inc
adc
aas
or
out
push
hlt
push
outsb
test
inc
xor
int3
arpl
adc
sbb
lcall
cwtl
test
shlb
roll
decb
jmp
in
arpl
pop
insl
jno
pushfw
inc
xor
push
xchg
cltd
icebp
fdiv
fsubrl
and
add
cmpsb
xchg
nop
push
outsl
jo
out
out
cmp
fisubrs
lret
inc
jbe
int
outsb
mov
push
test
sub
in
inc
cld
ret
sub
add
mov
out
mov
jle
fsubrl
jae
sub
mov
cmc
jns
mov
scas
fimull
mov
xchg
dec
mov
dec
stos
loope
adc
les
mov
pop
jl
xchg
xor
push
cmpsb
add
lock
sbb
fiadds
jns
lret
sbb
mov
push
cli
rclb
xchg
gs
jns
inc
sahf
cmp
int
ja
xchg
push
pop
cmp
ret
jl
in
lret
pop
push
dec
int3
lret
das
cmp
lock
lods
rcrl
bound
cmc
dec
dec
dec
ret
adc
mov
adc
add
inc
lahf
xor
rcl
mov
push
aam
xor
mov
mov
sahf
ret
add
jp
icebp
xor
push
mov
lret
sti
movb
add
testb
inc
in
mov
cmpsb
shl
xlat
ljmp
imul
and
mov
mov
sbb
enter
lret
xorps
outsl
mov
mov
xor
mov
jle
xor
sub
dec
sub
sti
and
mov
scas
jns
mov
push
add
fisttpl
sbbb
push
sub
xchg
aad
add
cmp
adc
lea
add
sbb
neg
pusha
lock
js
insb
in
subl
xchg
fwait
mov
xor
fnstsw
inc
rcr
dec
rorl
inc
lds
add
pop
jo
lret
pushf
in
cmp
inc
pop
sbb
mov
inc
daa
lds
pop
out
cs
xor
mov
fcompl
aas
inc
int3
jge
push
cli
clc
push
int3
jecxz
jno
adc
inc
jbe
inc
adc
mov
xlat
adcl
push
pop
xor
mov
mov
scas
add
and
xor
adc
xor
sub
ja
add
test
negl
dec
mov
mov
fistl
dec
popa
or
mov
mov
test
icebp
stos
sub
fadds
xor
mov
push
mov
cmpsl
xchg
mov
stc
mov
lahf
xchg
inc
mov
xor
lcall
add
sbb
push
in
jp
push
loope
xchg
sarb
pushf
lea
mov
fwait
das
test
pop
fildl
dec
mov
push
jge
sub
cmp
mov
cld
sbb
ret
lods
push
jp
xor
mov
in
popa
in
movsb
idivb
popa
lret
mov
arpl
out
push
xchg
cld
sahf
dec
adc
sahf
hlt
sbb
lcall
jl
pop
jbe
pop
out
cltd
out
jg
cmc
enter
popf
hlt
jmp
inc
je
sub
push
xchg
flds
pop
lods
sti
loopne
or
or
fmuls
jno
popa
push
das
mov
arpl
mov
xchg
test
js
pop
les
rorl
sub
bound
sbb
sub
imul
repz
repnz
pop
aaa
jge
add
insb
stos
int3
popa
paddusw
cs
arpl
and
adc
shll
dec
call
or
ljmp
andb
add
ret
into
stc
pop
sahf
out
stc
lret
push
ror
or
loope
in
cmc
jno
pop
daa
aam
test
lods
imul
jno
mov
das
inc
sahf
rclb
xchg
out
popf
in
int3
aam
add
sbb
add
jbe
fdivrs
xor
push
push
add
stos
stc
add
jno
jl
cmp
add
and
sbb
lcall
push
js
aam
dec
fadd
movsl
adc
outsl
add
add
mov
pop
rclb
hlt
gs
cs
pop
adc
rorl
cmp
idivl
or
test
xor
pop
mov
mov
pushf
adc
in
add
gs
xchg
movsb
mov
subb
and
rcrl
je
sbb
sti
jns
inc
std
sahf
xor
test
pop
push
xor
dec
and
out
ret
int
fdivl
jnp
or
repz
pop
mov
rcrb
stos
jnp
pop
ja
adc
or
pop
jb
xchg
jp
mov
bound
and
mov
popf
add
add
add
hlt
subl
xor
mov
add
fimuls
daa
out
add
leave
sub
mov
add
ror
cmp
xchg
cmp
sbb
cltd
mov
mov
sub
lret
frstor
xlat
andb
popf
test
inc
mov
or
sbb
dec
negl
les
pop
or
scas
cs
mov
dec
cmp
add
push
dec
mov
outsl
cld
xchg
or
andb
idivb
loop
cmp
and
push
clc
adc
movsl
xchg
aam
mov
pop
push
repz
dec
cltd
insl
notb
jb
mov
pop
or
push
loope
add
xor
cs
sti
inc
add
test
cltd
xchg
lods
outsl
dec
lahf
fdivrl
fcomi
mov
mov
fildl
fprem1
add
loopne
leave
mov
xacquire
cmp
push
es
xor
push
movsb
lret
xorl
mov
push
sbb
mov
mov
scas
sub
pop
cmp
loopne
repz
mov
adc
fists
inc
pop
cmp
outsl
rclb
in
cmpsb
push
test
jbe
mov
sbb
and
call
or
push
int
inc
in
jle
test
mov
adc
into
pop
sbb
scas
test
cmp
sbb
push
dec
mov
out
sub
jle
push
jl
add
pop
xchg
aad
repnz
push
or
dec
repz
ds
icebp
mov
jo
test
in
or
sub
pop
sub
call
push
xchg
ficoms
add
addl
lock
jne
and
mov
aam
mov
xlat
mov
add
add
mov
cmp
rorl
mov
cmp
out
scas
push
lahf
xchg
rcll
sbb
popf
and
pop
bound
adc
sbb
out
adc
inc
hlt
lock
cmp
out
jb
xchg
add
mov
jns
decl
sbb
popa
fisubl
push
leave
pop
js
out
or
mov
sahf
fs
xor
xchg
push
inc
and
xchg
push
nop
mov
add
inc
ljmp
lock
xchg
jp
cmpsl
or
test
add
cmp
in
push
mov
pop
mov
inc
cwtl
dec
sub
lcall
add
mov
rcr
pop
fsubrp
outsl
sbb
test
inc
xor
fcoms
add
roll
mov
mov
push
pop
sub
adc
cs
adc
negb
jbe
inc
pop
rolb
cmpsl
pop
out
int3
sub
shr
inc
sub
xchg
adc
xor
inc
push
add
fs
sbb
stos
xchg
sbb
test
ret
xchg
