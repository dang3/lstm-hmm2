push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
sub
orl
push
pushl
lea
push
call
xor
cmp
jne
lea
push
push
lea
push
pushl
call
test
jne
cmp
je
pushl
push
push
push
call
add
or
jmp
push
push
push
push
push
push
push
lea
mov
push
lea
push
lea
push
push
lea
push
movl
mov
movl
mov
mov
call
cmp
mov
jne
lea
push
call
cmp
jge
cmp
je
push
push
push
push
call
add
or
jmp
mov
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
movl
test
je
mov
mov
jmp
push
call
mov
mov
mov
push
push
push
push
xor
push
inc
push
call
mov
mov
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
lea
push
push
pushl
call
mov
imul
add
imul
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pushl
push
call
mov
push
push
push
push
call
mov
add
lea
add
mov
pushl
lea
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
jmp
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
mov
cmp
jne
push
call
test
mov
je
push
push
call
jmp
xor
mov
test
je
pop
jmp
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
mov
push
push
call
cmp
jle
sub
push
push
lea
push
call
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
addl
movzwl
push
mov
cmp
jge
mov
push
mov
lea
call
push
push
mov
call
pop
pop
pop
ret
jmp
push
mov
push
pushl
call
pop
push
pushl
push
call
pushl
mov
pushl
push
pushl
call
push
push
call
pop
pop
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
push
push
pushl
call
mov
test
jne
pushl
push
push
push
pushl
pushl
call
add
jmp
mov
jmp
pushl
push
call
test
mov
je
add
cmpl
jne
mov
mov
xor
pop
inc
pop
pop
ret
pushl
pushl
push
push
push
pushl
pushl
call
add
push
call
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
mov
push
lea
push
mov
mov
push
push
call
test
je
cmpl
jne
test
mov
je
mov
test
je
cmp
je
inc
inc
jne
cmpw
jne
andw
add
push
push
lea
push
lea
push
call
add
jmp
push
pushl
mov
lea
push
push
call
lea
push
push
lea
push
lea
push
call
add
pop
lea
push
push
call
mov
pop
call
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
push
mov
lea
sub
nop
lea
mov
push
mov
inc
pop
cmp
jb
pushl
lea
push
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
mov
push
call
pushl
mov
push
call
lea
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
je
pop
pop
jmp
push
mov
cmp
jg
xor
jmp
mov
shr
push
inc
push
pushl
call
cmp
je
push
pushl
call
cmp
je
andl
je
mov
dec
movzwl
lea
jne
movzwl
lea
cmp
jl
mov
push
mov
mov
lea
rep
pop
mov
andw
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
xor
cmp
jle
mov
mov
pushl
mov
push
call
test
je
inc
cmp
jl
xor
pop
pop
pop
ret
mov
mov
mov
jmp
push
mov
push
cmp
jb
push
lea
xor
movl
test
je
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
not
imul
xor
mov
mov
sub
mov
mov
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
imul
sub
push
mov
mov
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
mov
mov
ror
xor
imul
add
mov
divl
mov
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
je
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
push
mov
mov
mov
push
push
mov
mov
lea
push
push
push
pop
mov
mov
movl
call
test
je
cmpl
jne
mov
test
je
cmp
mov
mov
jbe
mov
test
je
push
push
call
push
call
andl
pushl
push
call
push
call
test
mov
je
mov
mov
mov
push
pushl
mov
call
test
je
incl
lea
push
call
xor
cmp
mov
je
push
push
call
test
jne
pushl
push
call
push
call
mov
lea
push
call
mov
cmpl
je
push
push
call
push
call
cmp
mov
je
push
push
pushl
call
add
jmp
lea
push
call
mov
lea
push
call
orl
mov
lea
push
call
mov
push
lea
push
lea
push
lea
push
call
test
jne
mov
lea
push
push
pushl
pushl
pushl
call
add
cmpl
jne
flds
push
fldlg2
push
fxch
fyl2x
faddl
fstpl
call
call
push
push
pushl
pushl
pushl
call
pushl
push
pushl
pushl
pushl
call
pushl
push
pushl
pushl
pushl
call
add
pushl
push
pushl
pushl
pushl
call
add
cmpl
jne
pushl
push
pushl
pushl
pushl
call
flds
add
fstpl
push
pushl
pushl
pushl
call
pushl
push
pushl
pushl
pushl
call
add
xor
cmp
je
pushl
push
call
mov
push
call
jmp
mov
cmp
je
pushl
push
call
push
call
cmp
je
pushl
push
call
push
call
cmp
je
pushl
push
call
push
call
cmp
je
pushl
push
call
push
call
xor
inc
jmp
push
call
xor
mov
pop
pop
pop
call
leave
ret
push
mov
mov
mov
mov
sub
test
jne
inc
jmp
andl
push
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
push
lea
push
push
add
call
mov
add
test
je
mov
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
mov
push
call
pop
cmp
jne
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
push
push
movl
mov
mov
lea
push
call
dec
jne
testl
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
add
dec
cltd
shrl
pop
mov
mov
fs
mov
sbb
bound
nop
popf
sub
fiadds
or
xor
add
jns
addr16
insb
movsl
loop
lcall
mov
ljmp
mov
sub
inc
repz
pop
mov
mov
fs
clc
clc
mov
aaa
cli
bound
nop
popf
sub
fiadds
or
xor
stos
ficoml
mov
jp
adc
xchg
cmp
sub
rol
movsl
push
pushf
dec
or
mov
scas
insb
testb
enter
pop
cmp
pushf
iret
push
xor
addl
mov
xchg
ror
dec
out
mov
cmovae
pop
shlb
jne
aaa
out
mov
test
cli
xor
cmpsl
dec
xchg
popa
js
mov
into
cmp
in
cmp
stc
ret
fs
outsb
jmp
pop
cld
mov
sbb
mov
test
out
testb
cld
mov
aad
pop
add
mov
cmp
adc
sbb
adcl
movsb
pop
sbb
dec
xchg
push
or
xchg
stc
lcall
fildl
and
aaa
jbe
xchg
inc
pop
stc
div
ja
adc
sbb
fwait
lea
mov
pushf
fmul
lcall
inc
dec
mov
outsb
sbb
and
nop
xlat
mov
xor
inc
adc
or
cld
dec
jne
sub
push
cmpsl
sahf
fcmovbe
pop
test
xor
iret
adc
vfrczsd
stos
mov
andb
sbb
shll
cmp
ficoms
lods
mov
adcl
arpl
cli
sub
adc
or
fs
nop
xchg
inc
popa
sahf
les
add
shrb
inc
push
in
rol
xchg
mov
push
add
mov
subl
cmp
xor
fprem1
xchg
lahf
cmp
out
aam
fmuls
sub
vmovsd
or
fwait
add
int3
push
jnp
pushl
xchg
aas
adc
pop
adc
xor
hlt
imul
jle
inc
xchg
mov
sahf
ss
cmp
lock
aad
stos
popa
addb
dec
mov
add
pop
hlt
movsb
hlt
push
shrl
inc
shll
std
sub
adc
push
mov
js
dec
ds
xor
cmp
stos
faddp
cmpsb
mov
or
xor
sub
add
dec
push
push
decl
mov
pop
cmp
cmp
push
dec
ljmp
outsb
add
movsb
push
jge
add
add
and
xchg
cwtl
dec
and
mov
push
imul
dec
xchg
xchg
loope
mov
push
sbb
mov
cmpsb
mul
jae
lcall
jecxz
dec
out
lods
adc
fwait
mov
test
mov
mov
fidivrs
adc
scas
shlb
pop
sub
add
or
dec
cmp
inc
jo
pushf
sarb
and
xlat
fnstcw
jge
xor
into
out
adc
jg
mov
add
push
add
stos
mov
loop
add
dec
xchg
cmp
inc
jo
es
into
lods
and
or
repz
jle
mov
hlt
add
pop
mov
je
sets
xorl
jne
mov
inc
mov
insb
xchg
adc
test
pop
into
xchg
sbb
and
shr
xor
cmp
mov
cmpsl
loope
out
add
add
add
cmp
loopne
incl
stc
xor
cli
add
mov
andl
jbe
in
mov
jmp
mov
clc
add
add
fistpll
and
mov
bound
ret
leave
repz
adc
push
inc
mov
nop
sbbb
pop
in
xchg
out
insb
fildll
push
push
mov
mov
test
les
mov
fwait
stc
shll
loopne
pop
shl
xor
inc
xor
xchg
jno
in
or
out
adc
xorb
repnz
cmc
mov
pop
and
mov
pop
mov
out
scas
add
movsb
dec
push
xchg
sahf
loope
and
popa
mov
sub
xor
rorb
insb
lcall
mov
cmp
pop
xor
dec
add
mov
aaa
jnp
roll
imul
add
add
bound
scas
push
mov
sub
xor
xchg
xor
add
stc
xor
inc
xor
aas
mov
cmc
je
cmp
mov
xchg
mov
xor
test
jns
mov
shlb
or
out
adc
push
jecxz
pop
rorb
push
sbb
jns
pop
pop
ficoms
shrl
test
xchg
add
sub
add
stos
repnz
loopne
dec
xchg
fs
leave
insl
es
add
in
lock
leave
xchg
inc
or
ja
out
cmc
cmc
jne
pop
mov
jle
pop
mov
in
aam
mov
leave
sbb
dec
push
mov
lods
and
jbe
test
pop
out
mov
xor
xlat
xchg
mov
jle
psubsw
stos
sub
push
add
call
cmp
mov
xchg
xor
insl
fidivl
das
ret
xchg
aam
xorl
js
adc
mov
jge
mov
mull
int
int
lock
xchg
test
lods
scas
loopne
push
lock
pop
nop
mov
dec
mov
mov
loopne
sbb
pop
pop
xchg
lods
imul
add
or
mov
cmp
adc
xchg
bound
repnz
xchg
mov
cmpsb
jbe
sub
cmc
xchg
ss
pop
pandn
add
cld
lret
call
data16
cmp
adc
in
and
add
xlat
jl
push
dec
add
fmul
ss
jbe
sbb
movsb
ds
addl
add
cltd
add
mov
xor
mov
push
push
ja
sahf
push
jo
jmp
ljmp
lods
sbb
punpcklwd
inc
mov
dec
test
cmp
bound
cmp
pusha
add
ds
addr16
sbb
jno
enter
mov
bound
cmpb
pop
dec
sbb
jne
add
sbb
out
mov
scas
aaa
mov
gs
mov
test
jae
rorb
cmpl
sbb
push
add
js
pop
adc
or
add
inc
push
mov
cmp
pusha
adc
lods
testl
arpl
pop
add
jmp
das
test
nop
loopne
xor
add
sub
xchg
push
mov
das
scas
lock
imul
ret
xlat
sbb
fchs
mov
sbbb
test
xchg
pop
pop
add
loopne
pop
cmpsb
mov
fpatan
lods
insl
inc
cmc
int
fwait
lret
lds
pop
ss
mov
xlat
loopne
mov
pop
pop
mov
cmp
shlb
cmp
sbbb
fs
jg
subl
mov
pop
mov
and
xchg
mov
add
add
faddp
xchg
jae
mov
xchg
inc
test
insb
rorl
movsb
jge
shr
sub
stos
add
leave
mov
mov
jo
fchs
aas
jb
xor
dec
loope
out
das
in
frstor
scas
mov
fs
dec
shrl
daa
push
mov
xchg
cmp
adcl
sub
inc
sarl
pop
inc
mov
mov
add
xor
mov
ret
jge
loope
idivl
in
push
out
arpl
test
push
ljmp
pop
andl
negb
mov
fstps
or
inc
lahf
xchg
sbbb
adc
inc
clc
add
cmp
jp
pusha
jecxz
push
xlat
call
test
cmp
ds
mov
mov
pop
into
xor
fcmovne
insl
sub
mov
ja
dec
fprem1
push
jge
or
divb
jge
stc
je
mov
mov
sub
cmc
jb
lea
fmuls
sbb
mov
shll
mov
arpl
xor
push
mov
xchg
aaa
jmp
or
fcmovnb
jo
pop
sbb
nop
cmp
or
add
push
xchg
in
rcr
loope
movsb
jle
mov
sub
outsl
in
into
mov
je
xor
jo
decb
dec
inc
or
ljmp
fwait
push
add
stos
xlat
sbb
push
pop
out
push
roll
adcb
jg
movsb
pop
mov
sbb
mov
int
loop
cmc
sub
mov
mov
add
jbe
pop
bswap
test
enter
jp
cmp
ljmp
jecxz
stos
pop
sbb
loopne
sti
divl
or
stos
test
xchg
mov
xlat
cmp
stc
int
lods
js
mov
jbe
lods
insb
jb
mov
cmp
mov
mov
scas
dec
or
cld
mov
add
add
jp
adc
ret
xor
pop
xchg
pop
mov
adc
negb
out
out
add
mov
icebp
xchg
cmpsl
stc
sahf
or
rorb
adc
dec
gs
xchg
pcmpgtd
jne
xor
int
test
and
mov
fidivl
mov
in
sbb
dec
test
stos
cld
lea
test
xchg
pop
mov
inc
inc
pop
out
push
movsl
jns
add
test
push
inc
and
aad
bound
sbb
sub
outsl
pop
movsl
mov
dec
add
testb
jno
inc
mov
mov
and
ret
and
into
add
sti
cld
push
jp
inc
test
mov
jnp
fstpt
jl
xor
fs
push
mov
inc
lahf
mov
or
ficompl
aam
adc
inc
mov
xor
mov
mov
int3
xor
lahf
lret
and
ss
adc
and
inc
pop
push
std
inc
aaa
push
or
mov
jge
and
add
fists
ljmp
or
loop
shlb
add
cld
xchg
adc
movsb
test
movsb
mov
jb
jns
loop
mov
outsb
dec
lds
mov
adc
xor
data16
leave
xchg
imul
or
popa
cpuid
inc
xchg
mov
popa
dec
mov
call
xchg
mov
icebp
jns
xchg
add
jl
sahf
sbb
cmp
imul
xchg
imul
test
addb
addr16
mov
add
lcall
dec
out
pop
pop
movsb
je
jmp
int
sub
sub
icebp
push
pop
dec
data16
push
adc
aam
sbb
push
push
scas
mov
xchg
loope
ret
xor
addr16
ret
sub
sbbb
adc
ja
sbb
jo
push
add
add
dec
xor
fistpll
cmp
mov
call
mov
cmpsb
mov
cld
xchg
dec
and
or
jmp
inc
in
cmp
push
xchg
or
adc
push
ret
jge
xchg
sbb
sbb
sti
jnp,pn
in
cli
fcoms
jp
mov
clc
test
xor
rclb
sbb
jo
jb
inc
and
rorb
jp
or
imul
jb
mov
leave
testb
movsl
les
jae
cs
mov
scas
sbb
jnp
jg
jo
cmp
ror
push
andl
out
xchg
mov
out
xchg
aam
in
ror
rolb
inc
bound
ss
mov
xchg
push
into
jne
mov
or
scas
adcb
add
ficoml
sbb
and
loope
cmp
jae
das
in
add
xchg
je
mov
sub
fwait
in
sub
pop
lods
or
push
pop
mov
sbb
test
test
pop
and
jae
mov
sbb
push
mov
jmp
jns
rorl
cmp
in
add
mov
dec
xor
push
enter
inc
push
and
pop
xor
jmp
mov
or
sub
sub
cmpsb
std
jbe
mov
fwait
std
xchg
jge
fstpl
jbe
cmp
js
jl
jp
cmp
sbbl
fstpl
push
lods
lods
xlat
out
bound
fdivrs
mov
mov
je
rcrl
add
push
or
cwtl
addr16
leave
jnp
fwait
mov
push
mov
pusha
push
sarl
bnd
shlb
dec
jg,pn
lods
sub
jle
push
adc
cmc
imul
mov
jge
fidivrl
pushf
ret
fcoml
gs
sub
pop
jmp
loopne
imul
cmp
or
rcl
xor
cld
lret
mov
jle
adc
jae
mov
fisubs
aas
push
stc
lret
push
mov
fdivs
insb
add
mov
testl
outsl
je
jo
les
loop
popa
gs
sbb
pusha
shlb
mov
xchg
out
fs
fsubs
outsl
imul
xchg
ret
std
inc
sarl
addr16
test
inc
xchg
add
js
in
fdivp
jp
and
or
xor
int
or
push
xchg
in
incl
stc
add
mov
outsl
scas
mov
jecxz
dec
xchg
dec
inc
pusha
rep
shll
fimull
add
xchg
int3
call
sbb
ret
fsubr
mov
fwait
mov
lahf
fdivl
inc
dec
aas
call
or
movsl
mulb
shlb
xor
push
popa
sbb
mov
jge
xor
push
inc
mov
push
fs
xchg
xchg
mov
mov
xor
stos
cld
add
test
in
stos
outsl
sub
pop
sub
or
scas
push
sub
jge
inc
mov
popf
test
lods
enter
rolb
or
adc
aam
test
loope
mov
or
fwait
adcb
shl
dec
test
dec
xor
add
sahf
mov
xchg
lods
in
iret
and
mov
mov
ret
add
aas
xlat
jmp
mov
dec
jae
loopne
inc
mov
jle
sub
andl
lea
and
dec
insb
dec
into
or
insl
sahf
cmp
or
xchg
test
jno
jne
popa
int
jg
inc
xor
ret
xchg
out
movb
dec
andl
ja
ja
ret
mov
xchg
xchg
clc
stos
or
inc
add
inc
in
aas
mov
dec
in
mov
adc
cld
or
adc
add
or
add
shrl
inc
xorb
int
xor
lods
test
push
lods
sarb
dec
add
in
dec
jmp
push
lret
das
push
fiaddl
incb
jg
ror
pop
dec
sbb
scas
lea
rcll
aam
pop
std
jl
push
or
ja
testb
mov
pusha
shrb
jmp
mov
mov
xchg
add
clc
mov
fsubp
fsubrs
xor
add
jl
push
ret
icebp
movsl
push
inc
add
mov
sbb
cwtl
and
scas
xchg
adc
shll
imul
imul
add
sub
pop
ss
sahf
mov
popf
imul
xor
sbb
jne
push
sub
adc
mov
repnz
jbe
outsb
sub
enter
icebp
or
inc
and
ret
test
mov
xor
pop
cmpsl
mov
add
pop
or
out
mov
mov
xor
sub
sahf
pop
sub
mov
mov
sub
sbb
stc
rcr
es
sbb
add
push
pop
icebp
mov
cmp
cmp
cli
mov
mov
mov
push
ret
add
add
cltd
cmp
movsb
sti
imul
inc
aas
jnp
cmp
inc
sahf
ja
sbb
mov
cli
andb
shll
popa
jge
test
jne
pop
cmp
jnp
push
add
sbb
jae
outsl
xchg
es
adcb
cmp
ds
mov
repz
lods
int3
loopne
xchg
mov
xor
adc
imul
push
dec
sti
ret
xor
hlt
lds
insl
pop
xchg
sbb
sub
unpcklps
add
push
aad
inc
stos
arpl
push
loope
push
rcr
call
insl
aad
jnp
mov
cmp
nop
add
push
cmpsl
stc
mov
mov
push
loopne
jbe
push
pusha
sbb
outsl
lods
mov
cwtl
and
decb
lahf
inc
and
pop
mov
mov
jl
stos
pop
pop
es
mov
and
xor
lods
pop
jae
and
xchg
mov
aaa
sub
push
mov
jmp
fsubrs
call
imul
add
js
hlt
mov
add
ljmp
mov
xor
jmp
sub
lahf
lahf
jl
stos
or
mov
pop
scas
mov
ss
mov
mov
cwtl
inc
hlt
dec
cmp
xchg
ss
fidivl
in
pop
sub
bound
push
xchg
add
and
popf
xor
add
mov
xchg
jne
xor
xor
inc
fidivrl
divb
xor
cmp
test
add
add
mov
mov
or
sarb
scas
adc
and
mov
loope
jnp
jl
inc
sbb
sti
std
enter
push
cs
subb
adc
stc
test
xchg
imul
cmpsl
fcompl
mov
push
data16
or
pop
int
test
dec
fstps
dec
or
int3
sub
xor
pop
out
push
dec
adc
imul
movsl
popl
sbb
call
dec
mov
inc
sbb
lods
push
cwtl
xor
cld
fwait
mov
or
nop
pop
sub
adc
nopl
cmc
mov
jmp
sbb
cwtl
cli
jecxz
xor
insl
inc
fcomps
pop
cmp
imul
std
or
xchg
fninit
pop
fmul
jl
xchg
jl
sbb
xor
push
push
dec
cli
xor
roll
jo
mov
inc
push
inc
scas
daa
adc
loope
push
cmp
pop
jae
xchg
jl
mov
cld
enter
or
decb
lea
xor
lods
or
pop
mov
sbb
aam
les
push
sti
repnz
cs
xchg
cli
mov
adc
cmp
jecxz
ja
sbb
repz
jbe
test
cmp
gs
xor
sbb
sbb
mov
sub
add
add
fstpl
jb
out
xchg
scas
mov
lods
mov
pop
in
test
imul
stos
loope
xchg
pop
sbb
add
test
push
cmpl
dec
daa
cmp
mov
push
into
ss
cmp
dec
addl
mov
bound
xchg
rol
or
daa
mov
jnp,pt
inc
arpl
cmp
std
cmp
xchg
cltd
mov
iret
inc
xchg
dec
add
jle
inc
aaa
jb
ljmp
jle
mov
and
and
mov
pcmpeqd
add
cmp
xor
bound
icebp
cli
pop
pcmpeqb
add
sbb
out
pushf
and
aas
loope
in
sahf
clc
jmp
inc
mov
fnstenv
insb
jl
dec
adc
aam
test
push
dec
je
rcr
or
in
jo
in
pop
in
or
add
scas
push
sub
fsubl
xor
outsb
sub
in
jp
or
out
int
xchg
sbb
call
scas
and
in
push
add
pop
nop
xchg
adc
icebp
or
pusha
mov
jmp
pusha
imul
pop
mov
jg
inc
scas
sbbb
pop
nop
cmp
scas
lods
xor
and
int
and
push
repnz
sbb
pushf
fistl
lahf
jp
cmp
insl
mov
gs
sar
repz
add
repnz
movsl
and
jle
mov
mov
dec
pop
mov
push
repnz
daa
mov
adc
push
lods
jl
jno
inc
fdiv
inc
add
xlat
sbb
pop
jg
mov
icebp
je
pop
or
sysexit
das
mov
pop
lret
sub
jg
jo
das
cwtl
xor
add
jl
in
test
not
pop
add
mov
in
xlat
shrb
scas
mov
outsl
xor
aad
mov
in
int3
fwait
loope
cmpsb
adc
jnp
pop
repz
bound
add
ret
in
gs
pusha
jnp
rcr
mov
outsb
pop
outsb
cmp
pop
and
outsb
mov
lcall
and
lea
scas
sbb
mov
push
aaa
or
xlat
add
or
call
inc
pop
clc
xchg
in
jg
jns
xchg
jg
ret
lahf
dec
repnz
out
loop
sub
cmpl
loope
stos
aad
cmp
lcall
aad
nop
fldenv
ljmp
rcrb
sub
jp
cli
fistl
or
popf
icebp
mov
mov
sub
or
mov
xor
xorb
push
rcr
loopne
test
xchg
aam
mov
outsb
and
add
fcomi
push
push
dec
movb
pop
mov
mov
push
stos
adc
xor
adc
jmp
ss
repz
mov
jle
out
stos
mov
out
add
pop
aam
mov
js
scas
dec
mov
sbb
mov
jl
fisttps
dec
or
int3
sub
add
jno
es
shll
xor
adc
sti
xor
into
or
fwait
mov
cmp
dec
icebp
pop
jmp
jge
cmpsl
movsb
dec
push
arpl
pop
jb
leave
insb
dec
pop
lea
mov
sub
cli
pop
mov
outsb
sbbl
das
js
fwait
mov
mov
std
stos
xchg
cs
leave
dec
pop
imul
sub
daa
inc
fld
add
jge
push
lret
in
jb
xchg
add
dec
aam
mov
push
or
xor
xor
jo
ss
cmp
mov
adc
in
xchg
mov
lahf
mov
ds
mov
ljmp
inc
sub
push
push
ljmp
pop
pop
push
int
cmp
gs
pop
movsb
inc
pusha
and
pop
shlb
cltd
push
xchg
fcmovbe
pop
mov
add
int3
loopne
mov
or
or
les
scas
out
add
fidivrl
cs
sub
psubw
ret
inc
cmp
sbb
adc
xchg
and
add
leave
test
lock
test
dec
jne
add
out
xchg
fwait
test
js
jp
inc
daa
or
xor
clc
dec
in
cs
loopne
pop
jmp
jmp
arpl
daa
or
add
add
xorl
push
mov
sbb
xchg
imul
adc
push
adc
das
cmpl
xchg
fcmove
and
mov
and
pop
fwait
cmp
sbb
mov
lcall
mov
les
roll
std
add
add
std
xor
push
aad
push
cmpsl
xor
lods
lahf
mov
add
leave
jge
cli
mov
mov
arpl
negl
bound
adc
int3
imul
and
xchg
cmpsb
test
jno
dec
or
mov
incb
dec
push
adc
cmp
and
daa
push
out
aad
and
aam
cs
or
mov
inc
mov
aas
sbb
add
in
repz
sub
mov
nop
lret
repnz
add
inc
test
sub
test
iret
mov
ret
stos
clc
add
add
stc
jne
sub
cmp
jae
int3
inc
out
outsl
add
iret
imul
and
shrl
shrb
jmp
and
pusha
cltd
inc
pop
pop
xchg
push
lea
jnp
sbb
xor
imul
cmp
sub
test
lret
lahf
xlat
push
ljmp
add
xchg
call
dec
cmpsb
fwait
hlt
lret
fstl
cmp
inc
shll
mov
cltd
sub
or
sahf
mov
iret
inc
sbb
fwait
popf
data16
sbb
adc
mov
jno
sub
xchg
xor
lret
movsb
cmpsb
sub
jnp
pop
sub
std
enter
clc
addr16
iret
loopne
xchg
cmp
shrl
mov
xchg
push
add
add
lds
mov
mov
or
sub
subl
jmp
add
and
xchg
or
xchg
sub
and
or
das
fstps
imul
enter
ficoml
dec
mov
lea
fistps
lods
lock
popf
lock
jl
sysexit
cmp
or
cmpsl
in
lock
cmp
stc
and
andb
xchg
daa
pop
pop
inc
filds
mov
loope
cmp
jge
sti
xchg
pop
mov
jecxz
es
and
jne
sbb
sarb
incl
iret
std
jge
daa
xlat
test
jnp
mov
mov
sub
clc
outsl
add
or
jb
cmp
rcrl
lods
push
mov
popa
lock
sbb
jne
fistps
bound
ds
sbb
add
add
push
out
xlat
push
xor
cmovle
and
test
rcll
imul
je
aad
call
iret
cmp
incb
cwtl
popa
lds
adcb
and
subl
and
imull
rcrl
aad
loop
lea
push
sub
adc
pop
jns
dec
sarb
popf
mov
clc
loopne
es
dec
rorl
xchg
das
push
sub
setns
mov
inc
loop
int
add
aad
cmp
stc
pop
dec
or
sarl
insl
cmp
xchg
std
cmpsb
jp
je
mov
jno
sti
push
xchg
inc
dec
jmp
mov
mov
testl
fadds
cmp
sbbb
or
scas
in
les
push
push
push
ds
in
ret
xchg
roll
insb
sub
lcall
fidivrl
rcrl
push
cmpsb
mov
add
fcoms
xor
test
sbb
mov
lock
push
sub
adc
imul
mov
mov
ja
mov
dec
rol
lods
test
mov
cmpsl
das
inc
sbb
add
sti
inc
hlt
mov
and
in
and
cmc
push
jbe
jo
arpl
add
add
popf
test
mov
or
xchg
ficompl
mov
in
mov
cld
inc
lret
rcll
sbb
sub
push
jge
loop
mov
in
xor
xchg
aaa
xchg
int3
push
inc
add
loopne
jmp
mov
int3
mov
scas
rolb
ja
pop
or
pop
lret
out
jnp
push
push
jno
push
and
mov
lods
inc
dec
fisubrs
jne
into
inc
pushf
add
pop
or
test
xchg
adc
fnstcw
lret
xchg
sub
rol
and
jbe
and
or
adc
insl
and
jno
cmp
nop
mov
or
mov
leave
jb
inc
and
aas
fsts
cwtl
ljmp
test
mov
in
ficoml
lret
cmp
mov
in
popa
in
push
cltd
xchg
test
jne
incl
pop
outsb
flds
aam
cmpb
mov
cli
fidivrl
pop
jno
insl
xchg
push
mov
pop
sbb
or
ficomps
adc
mov
das
int3
in
adc
mov
iret
cwtl
jp
or
pushf
stc
stc
add
inc
je
jp
mov
fdivl
push
pop
fwait
mov
sbb
sub
or
sub
jecxz
inc
mov
fdivrs
add
adc
adc
mov
push
shlb
sbb
sub
sub
das
ljmp
cmp
shr
notl
xor
je
testl
rorb
dec
pop
inc
in
pop
repnz
add
inc
mov
push
pop
in
xchg
and
je
dec
push
mov
sub
fstps
cmp
jo
adc
shll
jmp
shll
shl
mov
fcompl
mov
pushf
inc
dec
loopne
lock
jmp
sub
jle
push
sbb
push
fdivrp
icebp
test
int3
sahf
outsl
popa
push
ret
jne
sub
mov
fs
out
mov
xor
aam
leave
mov
or
mov
add
cmp
inc
sbb
das
jne
jmp
sbb
xorb
dec
loop
pop
mov
jnp
lods
lods
outsw
or
fidivrl
adc
les
cmp
mov
jnp
inc
bound
popa
in
inc
inc
mov
bound
rcll
pop
jne
fwait
out
shll
daa
hlt
je
inc
aad
jp
test
inc
imul
clc
ja
push
popf
add
add
cmc
sarl
mov
repnz
sahf
mov
xor
xchg
mov
xor
shll
int3
test
hlt
xor
push
mov
sarl
xor
test
jbe
adc
aaa
fidivrl
js
test
pop
inc
or
lret
dec
push
mov
icebp
adc
and
fisubrs
sbbl
mov
xchg
dec
je
mov
dec
sbb
aad
bound
sbb
insl
push
mov
add
xor
call
jnp
aaa
gs
lcall
iret
xor
imul
jbe
cmp
adc
jecxz
or
xor
cmp
lret
pop
out
bound
cmp
adc
jb
iret
push
mov
adc
mov
xchg
pop
add
data16
xchg
sub
sbb
in
jbe
mov
mov
xor
mov
repnz
inc
stos
out
subb
pop
icebp
fs
test
sbb
push
and
ret
ret
insl
and
loop,pn
mov
xchg
arpl
push
pusha
jae
repnz
adc
dec
rorb
enter
push
push
pop
pop
repz
jnp
cli
lret
out
sbb
and
outsl
jae
sbb
pop
decb
addr16
cmp
sub
adc
sbb
xchg
lahf
in
int3
push
xchg
arpl
xchg
iret
je
in
jo
add
jb
les
sbb
into
mov
cltd
decb
pop
and
jns
dec
sub
fwait
add
dec
sahf
or
shll
ret
in
xchg
and
sub
ret
push
mov
psubd
cmp
hlt
fs
mov
mov
push
and
repz
dec
fnsave
mov
lret
dec
clc
clc
lds
jg
and
sub
repnz
jns
dec
ds
test
js
insb
inc
or
jbe
hlt
cmp
shll
mov
xchg
aad
mov
jb
ja
leave
sub
je
xor
xchg
in
ds
cmpsb
sbb
mov
lods
lret
movsl
test
pop
scas
inc
aas
xlat
adcl
and
shlb
out
mov
idivb
bound
outsl
xchg
add
insl
addr16
sbb
aam
out
add
add
mov
jg
pushf
ljmp
add
add
stos
outsl
mul
arpl
inc
push
sub
cmc
cmpl
pop
test
pop
lret
ds
inc
sub
sti
fs
sub
mov
mov
lods
dec
xchg
and
xchg
jl
and
and
pop
mov
inc
mov
shrb
mov
mov
mov
pushf
xor
push
cld
fisttpl
loop
js
add
lods
aad
push
fnstcw
inc
inc
das
test
and
pop
add
pop
lret
adc
pusha
adc
push
ds
fsubl
mov
xor
and
ja
stc
popa
outsb
fistpll
loop
popa
lahf
inc
shlb
ss
adc
adc
aad
rol
add
jno
mov
stos
bound
add
pop
adc
loope
rol
mov
xchg
add
jecxz
rolb
add
xchg
mov
xchg
mov
movl
push
or
cltd
loopne
mov
out
test
lahf
sub
call
mov
mov
cmpsl
adc
movsl
js
test
mov
stos
imul
xchg
fwait
push
testb
popa
xchg
add
sbbl
add
mov
cmp
mov
addr16
das
in
cmp
pop
lds
adc
dec
mov
mov
leave
or
fdivr
sub
jge
xchg
imul
out
and
cmp
stc
and
adc
inc
lds
xchg
dec
movb
or
cltd
pop
das
push
sti
inc
sbb
dec
sti
hlt
leave
and
sbb
xor
sub
mov
cmp
push
and
mov
sub
iret
xchg
bndldx
push
adc
xor
sub
movsl
nop
sbbl
jnp
iret
mov
push
in
cmp
jecxz
ljmp
test
std
sub
ret
in
or
ds
data16
pop
or
cld
jle
cs
lahf
jmp
aas
rcll
lcall
push
sbb
mov
mov
cmp
out
enter
insl
pop
jo
and
mov
mov
lods
fs
sti
dec
xor
jo
sbb
add
jge
test
adc
enter
dec
js
iret
leave
sbb
adc
rcll
inc
jns
pop
test
lock
clc
push
or
xchg
sbb
ja
