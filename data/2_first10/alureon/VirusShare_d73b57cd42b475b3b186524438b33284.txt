push
xlat
cmpsl
rcl
pop
xor
mov
movsl
mov
jb,pt
or
jo
jbe
negb
movsb
in
xchg
imul
cli
mov
std
mov
scas
bound
dec
jecxz,pn
sbb
ss
ja
test
pop
jecxz
ret
stos
jmp
scas
or
mov
nop
test
adc
and
test
xor
jge
mov
push
lock
cs
js
lret
sbb
cli
rcrb
jl
repnz
fstl
mov
cmp
dec
xor
out
mov
jae
call
outsl
xchg
mov
xchg
xchg
fisubrs
loopne
xchg
lret
sbb
ja
mov
xor
aaa
cs
dec
inc
cwtl
sar
add
xor
adc
rolb
fucomi
xchg
sti
gs
inc
mov
mov
cwtl
mov
push
mov
pushf
mov
xchg
stos
pushf
lret
mov
shll
add
sbb
cmc
out
imul
sbb
cwtl
push
std
lea
cli
clc
dec
inc
out
pop
cltd
or
sbb
push
es
sub
sub
xor
sbb
sub
dec
mov
add
jb
sub
imul
roll
outsb
scas
enter
mov
bound
inc
call
mov
push
mov
or
imul
call
inc
mov
call
push
imul
call
add
or
mov
add
mov
dec
call
imul
sub
imul
and
lea
mov
xor
sub
lea
mov
imul
lea
call
inc
add
mov
lea
mov
call
inc
mov
call
inc
lea
inc
sub
add
inc
mov
movswl
dec
pop
dec
dec
mov
add
mov
pop
add
add
pop
mov
inc
inc
inc
pop
and
add
and
inc
imul
lea
inc
imul
pop
mov
inc
pop
inc
xor
mov
sub
mov
call
mov
inc
mov
mov
ret
imul
imul
push
mov
mov
push
inc
imul
push
mov
add
push
inc
imul
push
and
movzbl
mov
imul
or
push
imul
ret
push
lea
add
lea
add
xor
lea
lea
push
dec
imul
inc
call
pop
ret
jmp
add
and
mov
dec
movzbl
mov
lea
xchg
add
sub
lea
mov
xor
add
add
mov
imul
inc
add
imul
dec
jne
lea
mov
lea
imul
pop
inc
mov
pop
movzbl
mov
pop
inc
dec
movzbl
mov
add
imul
dec
and
dec
add
and
add
ret
push
push
sub
inc
push
and
inc
movzbl
and
mov
or
push
lea
mov
mov
dec
push
mov
add
add
inc
lea
imul
mov
push
or
mov
inc
push
inc
dec
xor
inc
mov
push
dec
inc
push
inc
inc
pushl
imul
call
dec
add
inc
dec
dec
sub
dec
mov
dec
pop
ret
xor
cmp
jb
inc
xor
mov
mov
imul
or
mov
mov
inc
sub
mov
imul
add
dec
inc
mov
dec
imul
cmp
jb
pop
mov
sub
and
lea
dec
add
or
add
inc
xor
inc
dec
xor
movswl
mov
imul
mov
test
jbe
dec
mov
or
inc
dec
inc
xor
or
imul
lea
inc
inc
and
sub
dec
mov
and
inc
movzbl
add
mov
add
mov
or
and
mov
mov
mov
mov
dec
mov
inc
inc
mov
mov
sub
mov
mov
add
lea
mov
inc
mov
dec
jne
movzwl
mov
sub
mov
and
dec
inc
mov
mov
dec
lea
add
mov
mov
inc
mov
inc
dec
inc
mov
dec
mov
add
dec
test
jbe
mov
sub
add
and
inc
inc
dec
and
movsbl
sub
mov
imul
mov
inc
dec
inc
inc
lea
lea
mov
dec
add
and
sub
add
mov
mov
and
movzbl
lea
dec
add
inc
add
and
dec
sub
mov
add
movzbl
movzbl
sub
sub
mov
lea
inc
mov
sub
mov
movzbl
add
dec
add
mov
jmp
push
xor
mov
inc
xor
inc
dec
imul
imul
dec
and
dec
inc
xor
and
and
lea
mov
or
mov
and
inc
xor
inc
add
imul
dec
add
mov
sub
mov
inc
add
mov
inc
add
lea
lea
mov
sub
cmp
je
dec
mov
sub
push
sub
call
call
sub
lea
call
call
and
movzwl
add
mov
sub
inc
add
ret
inc
sub
pop
mov
ret
push
inc
inc
inc
sub
imul
push
mov
inc
push
inc
push
dec
push
dec
dec
sub
lea
dec
call
imul
push
dec
dec
xor
add
sub
sub
neg
sub
dec
add
mov
mov
add
mov
xor
dec
mov
mov
xor
inc
sub
mov
dec
je
lea
sub
lea
mov
sub
add
mov
imul
inc
inc
lea
repnz
mov
or
add
mov
jmp
mov
dec
imul
dec
lea
dec
mov
mov
jmp
mov
dec
inc
mov
mov
and
or
inc
pop
pop
ret
push
inc
movzwl
inc
dec
or
sub
imul
imul
dec
or
dec
dec
xor
sub
imul
inc
movzbl
sub
add
lea
add
inc
dec
dec
imul
mov
imul
add
pop
ret
sub
mov
mov
add
dec
mov
movsbl
lea
mov
lea
sub
mov
movzwl
xor
xor
add
mov
mov
sub
inc
inc
mov
and
add
mov
inc
add
cmp
jb
inc
push
mov
add
push
sub
or
push
lea
add
xor
lea
dec
xor
dec
movzbl
xor
lea
mov
push
movzwl
mov
mov
inc
or
xor
lea
mov
sub
dec
mov
dec
movzbl
lea
mov
dec
add
add
add
add
movswl
lea
movzbl
add
inc
add
sub
lea
dec
imul
inc
inc
inc
mov
lea
add
lea
movsbl
imul
jmp
mov
adc
pop
pusha
orl
dec
in
pop
aaa
jns
ja
push
lret
lods
sarb
jnp
mov
adc
je
xor
or
mov
and
mov
mov
ja
xchg
out
sbb
adc
notb
xor
mov
stos
mov
lcall
in
inc
int3
pop
rol
arpl
fcompl
lea
aaa
pusha
ret
ffreep
je
gs
scas
pusha
sub
mov
adcb
aad
pushf
ja
mov
inc
jg
sbb
lods
add
pop
clc
mov
pop
std
sbb
mov
push
outsl
mov
pushl
pop
pusha
leave
cltd
rclb
nop
std
xor
dec
cmp
aam
jge
ds
in
cmp
js
cmp
icebp
bound
push
mov
cltd
and
insl
or
inc
and
stc
or
sbb
cmp
out
mov
jg
test
mov
adc
lcall
movsl
add
xor
es
jns
test
push
ja
icebp
cmp
dec
or
push
pop
fs
ja
cmp
shl
js
cltd
jmp
jg
xlat
xchg
cmp
jl
pusha
xchg
dec
adc
pop
sarl
lds
dec
ret
pop
add
cltd
mov
add
data16
loop
enter
push
pop
or
add
ljmp
dec
hlt
mov
mov
js
dec
sbbl
shlb
or
xchg
cs
cmp
xor
push
les
mov
int
mov
sub
ficomps
hlt
mov
andl
jo
lock
icebp
sbb
inc
and
mov
jmp
xchg
ljmp
xchg
or
push
out
adc
push
mov
sbb
adc
and
pop
jbe
cmp
jb
xor
xchg
addr16
sub
push
enter
movsb
fisttpl
mov
xchg
jno
test
in
testb
add
mov
cmc
andb
mov
les
scas
jmp
iret
add
mov
cmpsb
xchg
inc
pop
and
cmp
sahf
xor
mov
ret
imul
lret
sbb
lahf
div
xor
fadds
or
inc
cli
mov
sbb
xor
repz
xchg
dec
cli
aaa
mov
outsb
arpl
xor
scas
fs
add
xchg
push
out
fwait
hlt
mov
and
gs
loopne
push
movsb
movb
lods
lcall
and
pop
adc
add
sub
add
xor
ret
and
mov
fidivl
and
faddl
xor
inc
mov
out
add
pop
aam
xchg
jb
cmc
mov
pop
rcrb
and
xor
mov
nop
sbb
sbb
mov
mov
adc
mov
mov
cmp
xor
add
push
adc
inc
inc
pop
lock
xchg
hlt
sbb
push
repnz
rolb
inc
loope
xor
test
jle
mov
fldl
xchg
call
or
lock
push
xchg
jge
xor
lahf
outsb
push
dec
mov
into
push
pushf
pop
or
in
sbb
pop
mov
mov
pusha
xor
mov
mov
adc
sbb
add
and
nop
call
jmp
mov
cld
sub
das
push
pop
and
shl
shrl
pop
mov
arpl
pop
xor
mov
pop
push
cmpb
cmp
sahf
ljmp
mov
push
xchg
scas
cmc
add
sub
inc
notb
movb
cmp
outsl
jb
add
test
dec
popa
pop
push
mov
pushf
shll
loop
cwtl
int
mov
inc
push
jo
std
jno
aas
cmp
or
bound
outsl
sub
call
sarb
pop
jmp
xchg
xor
fidivrs
jle
mov
mov
dec
pop
call
cmp
cmp
ljmp
mov
popa
lret
and
dec
frstor
jo
shrl
inc
lds
add
push
es
sub
inc
std
pushf
jl
pop
int
fwait
daa
int3
mov
or
push
mov
test
pop
fstl
mov
adc
pop
adc
sbb
mov
roll
loop
xor
rcrb
fidivl
cmc
sbb
aas
aas
enter
dec
les
and
xor
shll
lret
mov
popf
jae
int
outsl
xchg
outsl
mov
pop
aam
fdivrs
jo
das
jle
sub
xlat
xlat
adc
jb
out
aad
movsl
xchg
cwtl
cmp
lds
inc
data16
push
orl
stc
sbb
xchg
sbb
pushf
fdivrs
addr16
cmpsl
adc
testl
dec
test
fucom
mov
fcom
mov
les
cmpsb
lds
mov
push
mov
sti
add
cmp
mov
sub
ljmp
pop
dec
pop
lea
push
jge
jl
push
jge
fwait
into
pop
mov
mov
mov
inc
sub
insb
xor
mov
mov
loopne
and
sbb
cltd
sub
and
rcrb
int
cmp
daa
mov
mov
and
add
mov
mov
cmp
fldt
out
aaa
pop
pop
imul
leave
mov
push
clc
in
pop
mov
aaa
out
jb
jbe
clc
sub
shlb
jge
jae
in
data16
xlat
stos
loope
aad
dec
addb
insl
gs
sarb
test
fucomip
mov
or
movsb
push
mov
sub
stos
jg
mov
mov
movsl
fildll
mov
sub
push
imul
cmc
pusha
into
icebp
xchg
mov
jmp
in
imul
and
mov
andl
clc
test
mov
sub
lds
adc
sub
ret
sti
std
std
jb
jmp
push
jmp
loopne
xchg
push
mov
or
ds
enter
jnp
outsl
js
fs
push
and
cwtl
inc
leave
test
pop
sbb
cli
fbstp
pusha
imul
sbb
xchg
or
int3
sub
push
shlb
repz
add
insl
or
push
xor
add
out
sbb
sub
out
and
xor
call
sbb
nop
cmp
pop
lret
xchg
mov
lock
out
lret
pop
hlt
sbb
pop
fwait
pop
hlt
sbb
xchg
jge
repz
mov
lods
push
mov
or
add
mov
aaa
call
lods
cmp
je
aaa
sub
addl
ficompl
outsb
std
fs
scas
pop
xor
xor
cmpsl
jge
and
lret
dec
pop
adc
and
lods
jne
lcall
cmc
in
sahf
mov
add
sbb
rorb
loopne
in
add
lahf
cwtl
ds
jmp
dec
lods
outsl
das
sbb
out
pop
stc
cmpsl
mov
sbb
mov
fistpl
idivl
out
dec
push
imul
js
mov
push
aaa
push
inc
sbb
mov
popa
jno
fadds
setle
shll
in
popf
fstpl
cmp
mov
mov
aam
loop
aaa
test
cmovp
mov
dec
mov
or
cld
out
jg
mov
pop
int
adc
imul
jp
or
aam
inc
adc
cmp
sahf
lods
lahf
sub
cltd
inc
or
loopne
add
les
test
adc
or
int
xchg
out
mov
push
and
jp
lods
pop
sahf
jge
pushf
fmul
xchg
adc
stos
pop
cmp
push
sub
mov
shl
xlat
stos
pop
popaw
orps
in
dec
adc
mov
or
js
mov
inc
scas
cmpxchg
mov
loop
jecxz
mov
sbb
dec
insb
pushf
sub
aad
andb
push
loop
inc
or
sub
sti
addr16
loope
mov
pushf
idivl
fdivs
xor
jle
rolb
xchg
aad
loope
rcrl
xor
aas
dec
jp
shlb
push
and
mov
jae
sbb
fcoml
out
cmpb
jl
inc
dec
mov
sub
cli
loop
mov
pop
test
cmp
shld
dec
xchg
and
or
sbb
call
lods
mov
push
test
inc
shl
jbe
sbb
mov
aad
add
mov
mov
cltd
orl
mov
jne
sub
sbb
jb
push
gs
ljmp
mov
mov
out
xor
ss
add
inc
xor
add
nop
xchg
lea
iret
iret
cmpsl
xor
shl
xchg
mov
push
ret
xor
stc
loop
or
loopne
jmp
inc
int
int3
or
daa
lea
mov
fdivrl
push
je
dec
into
loope
pusha
push
push
call
mov
negl
adc
cmp
jne
in
testb
or
test
subl
aas
inc
out
push
lcall
imul
loope
push
and
f2xm1
aaa
jp
repz
push
int
das
stos
and
push
cmpsb
push
jo
fnsave
dec
jmp
icebp
sahf
mov
dec
cmpsl
push
sub
leave
insl
add
iret
jo
aad
ja
mov
push
mov
push
dec
cmp
inc
push
xchg
lret
dec
xor
or
jecxz
test
test
mov
pop
ret
mov
aaa
mov
fstps
pop
pop
imul
movsb
jno
jbe
int
test
dec
jle
pop
and
out
int3
sahf
pop
outsl
add
cltd
jl
das
stos
mov
push
rcrb
sbbl
push
aam
ja
xchg
sub
jp
cmpsl
sarb
fwait
addr16
or
jnp
enter
cli
lea
cmpsl
push
mov
mov
aam
pop
bound
in
mov
cmp
or
inc
add
mov
je
lahf
clc
dec
inc
inc
aas
inc
mov
lret
mov
pop
cltd
push
mov
dec
sub
ret
imul
dec
testl
mov
jmp
lret
xchg
mov
es
cmp
inc
outsb
in
test
mov
pop
jbe
lret
call
adc
dec
std
jecxz
cmp
in
cmp
and
push
enter
push
fwait
popa
push
rsm
push
xchg
mov
lock
in
xchg
add
ret
push
push
sbb
sti
sbb
or
ljmp
mov
lock
test
and
sbb
push
inc
cmp
push
xchg
bound
sbb
pop
mov
push
push
pop
fmuls
xchg
xchg
jg
mov
aas
and
fists
cld
das
sub
add
adc
push
xchg
outsb
stc
andb
fwait
stc
mov
clc
repnz
ja
in
adc
ret
out
enter
add
sbb
subb
inc
sub
repz
pop
xchg
je
test
add
or
test
inc
rcrl
sbb
jno
jno
cwtl
push
push
je
and
lock
add
xor
insl
ret
pop
cmpsb
rcrl
hlt
bound
test
js
stos
jae
adc
mov
lret
or
sahf
cmc
es
sub
sub
push
call
jmp
dec
sub
xchg
xchg
iret
scas
loope
xchg
mov
mov
mov
mov
cmp
aad
push
pop
nop
pop
or
xchg
movsl
lret
jno
jl
mov
xor
push
mov
dec
add
popf
add
add
imul
fists
sbb
mov
sub
popf
inc
in
jmp
push
push
loope
pop
test
xchg
xor
and
mov
jae
sarl
imulb
pusha
mov
ret
sbb
nop
lds
sarl
inc
xchg
xchg
lcall
xor
mov
ss
mov
or
scas
push
adc
mov
adcl
mov
inc
nop
test
add
getsec
les
loop
dec
jge
out
iret
jns
jno
inc
nop
jl
out
mov
adc
aaa
push
call
dec
and
cmp
shr
push
in
ss
cmpsl
mov
jnp
push
imul
inc
repnz
hlt
jge
inc
movsb
push
cmp
mov
pushf
stc
in
xchg
rclb
test
cmc
xchg
xchg
mov
mov
inc
pop
pop
mov
jne
test
mov
xchg
inc
sub
adc
jnp
xchg
fnstcw
repnz
cmpsb
pop
or
cmp
xlat
call
mov
add
or
push
lret
arpl
sbb
mov
rol
in
hlt
iret
jl
mov
cmpl
sbb
jle
orb
fucomi
inc
xchg
and
jmp
xchg
inc
insb
fs
and
cmp
mov
or
stos
cmp
lcall
stos
roll
jecxz
inc
add
fisubl
int
xor
add
popf
repnz
cmp
or
sbb
sbb
cmp
das
rcr
and
xchg
xor
enter
jno
in
das
int3
cltd
test
hlt
sub
xor
ss
in
xor
xchg
inc
cmpsl
or
push
fistpll
mov
ficoms
or
fldt
stos
insl
mov
mov
jge
xlat
movsb
test
out
outsl
push
add
es
inc
sub
sbb
lahf
mov
mov
insb
pop
aad
imul
adc
pop
out
cltd
out
pop
mov
dec
idivl
or
cmp
pop
mov
mov
inc
shlb
push
sbb
add
push
insl
dec
aas
pop
leave
and
sub
add
addl
xchg
je
cmpsb
push
loopne
pusha
ljmp
leave
gs
or
pop
stos
rcrb
sbb
dec
sub
cld
dec
lret
sbb
into
clc
mov
lods
sub
sub
pop
fsubrp
mov
jg
pop
loop
jmp
push
jmp
daa
in
pop
pop
movsb
lret
repnz
and
subb
adc
xor
add
mov
inc
dec
imul
mov
xchg
je
test
mov
mov
xchg
fdivl
mov
inc
cmp
fsub
inc
inc
or
in
jno
in
sar
imul
stc
xchg
adc
pop
mov
dec
addr16
repz
es
fidivs
pop
xchg
xchg
stos
mov
das
jmp
ja
cmp
pop
pop
and
pop
pushf
mov
sbbl
pop
lcall
sahf
mov
fs
sbb
and
in
negb
cmp
mov
sub
sub
js
fnstenv
and
mov
push
cmp
xchg
mov
adc
lret
leave
sub
and
dec
std
das
nop
pop
inc
pop
pop
idiv
push
fnstcw
sbb
stc
mov
popa
mov
push
jge
push
imul
std
int
sbb
mov
out
out
add
jae
addb
sbb
std
outsl
push
cmpsb
push
xor
push
xor
lds
ret
mov
pop
and
push
js
test
xor
fsubrs
loope
pop
shll
mov
fidivrl
xchg
mov
scas
and
dec
idivb
mov
mov
test
inc
testb
inc
insl
pop
out
dec
push
shlb
shlb
out
std
cmp
test
sub
dec
insb
push
dec
orl
jle
lea
data16
aad
cmp
jbe
movsb
pushf
xchg
scas
adc
and
sbb
ss
pop
push
inc
cmp
xor
mov
mov
test
in
call
mov
out
movsb
cmp
insl
add
dec
or
add
in
xchg
adc
cld
pop
sti
adcl
lods
push
mov
jns
adc
movsb
push
mov
xchg
sar
mov
mov
and
pushf
dec
pop
hlt
or
jp
fwait
and
scas
cmp
aam
jns
xor
in
fs
movsl
push
call
pop
sub
and
test
xorb
ja
add
xor
movb
sahf
nop
lea
pusha
xor
into
push
aaa
sbb
outsb
pop
sbb
pop
subb
loope
call
push
pop
into
jge
les
in
push
je
in
cli
push
movsl
sbb
push
cwtl
or
test
pop
cmp
pop
cli
pusha
adc
fwait
push
mov
mov
xchg
sub
dec
movsl
out
pop
inc
imull
dec
inc
orb
jecxz
xchg
repz
jmp
imul
adc
mov
outsb
aad
xchg
mov
inc
cltd
inc
enter
mov
hlt
cli
adc
inc
jecxz
xor
or
sub
add
inc
flds
cmc
and
out
pop
xchg
shll
and
push
out
cmp
inc
repz
lds
xchg
mov
inc
push
setp
jbe
fmull
mov
setnp
outsl
mov
cmp
fwait
xchg
push
sbbb
inc
cmp
or
fwait
js
mov
add
xchg
sub
notl
inc
mov
aam
fcompl
sbbb
mov
mov
mov
and
nop
dec
negb
ror
xchg
mov
lods
sbb
mov
aaa
gs
std
jmp
lds
pop
les
mov
dec
xor
and
hlt
mov
jmp
cmc
or
adc
jmp
push
fidivrs
push
push
or
inc
call
dec
pushf
outsl
and
clc
orl
add
xchg
mov
aam
mov
push
sub
push
outsl
aas
test
mov
mov
aam
jnp
push
xchg
test
aam
sbb
mov
inc
mov
add
test
popf
and
jl
neg
std
jl
mov
out
mov
std
xor
pop
cmc
push
xchg
out
dec
test
jecxz
lret
add
xlat
or
scas
mov
pushf
out
mov
xor
lahf
flds
jecxz
push
out
je
insl
or
fimuls
in
into
insb
xorb
insb
je
loopne
jecxz
nop
pop
insb
cmpsb
jmp
sub
cwtl
add
fsub
clc
mov
mov
in
cmpb
mov
in
in
addb
xor
or
lds
in
jg
clc
mov
mov
pop
fwait
dec
sbb
andl
std
inc
mov
sti
pop
flds
dec
cmp
incl
aaa
pop
bound
repz
xchg
sahf
mov
xlat
cs
xor
cli
imul
mov
adc
test
xchg
ret
dec
insl
fdivr
aam
cmp
mov
iret
fistpl
sahf
int
push
fbstp
ja
frstor
cltd
lcall
andb
push
sub
push
or
and
movsb
clc
iret
xlat
fs
mov
ja
scas
fmuls
mov
fs
push
insb
notb
mov
xor
out
repnz
rolb
aaa
ss
cli
imul
cmc
xchg
pop
out
fisubrl
out
test
int3
sub
jb
add
jb
les
subb
cli
adc
outsl
lods
xchg
lods
ret
dec
lods
xchg
dec
loop
into
mov
shlb
fwait
lret
js
mov
mov
sub
sbb
stos
sub
cs
add
add
daa
cmpsb
test
xor
mov
decb
xchg
fnstsw
push
mov
test
push
sub
adc
push
pop
lahf
sub
aaa
push
xor
xchg
enter
lds
gs
cli
mov
dec
dec
cld
addb
sbb
or
inc
push
sti
enter
dec
cmpsl
and
jno
xchg
cs
pop
popa
pushf
sbb
and
add
ss
xchg
push
pop
out
lret
data16
pop
xchg
rolb
mov
cmpsl
repz
aad
mov
pop
and
je
test
mov
mov
aad
cmp
and
roll
mov
jae
dec
in
pop
mov
pop
mov
and
ja
test
jp
int3
pop
jae
pop
insb
scas
xor
ja
jmp
or
adc
lahf
sbb
pop
int
adc
shlb
add
ja
fpatan
push
mov
cld
call
mov
xor
cltd
std
sbbl
mov
fdivrl
jmp
enter
push
mov
mov
xchg
dec
cmp
cmpsl
dec
loope
mov
mov
cmp
xor
jno
jbe
jle
inc
insl
mov
xchg
or
movsl
mov
lock
xchg
or
in
pop
sub
cld
in
movl
inc
mov
sub
ret
arpl
lcall
jg
mov
addr16
scas
sub
push
mov
jp
bound
pop
mov
test
mov
aad
out
jb
lret
imul
or
out
push
xor
into
push
or
lods
pop
xchg
or
loope
cld
sub
stos
mov
mov
mov
sbb
add
adc
xor
pop
mov
mov
addl
push
jle
adc
sbb
adc
dec
clc
push
mov
das
ja
or
xchg
icebp
jae
mov
in
enter
push
test
mov
js
aaa
sub
mov
cwtl
dec
xchg
or
sub
jb
add
jnp
pop
adc
adc
in
mov
test
lods
push
adc
push
push
loope
cmp
sub
push
lock
outsl
das
cmp
cmc
inc
cmp
push
shlb
out
xor
jecxz
jecxz
pop
pop
imull
cs
adc
les
jp
xchg
pop
mov
pop
mov
add
cmp
out
in
sub
pushl
mov
cld
dec
je
test
mov
dec
xchg
mov
sub
aam
jno
shll
aas
inc
arpl
lods
xchg
or
je
xchg
sbbb
iret
sahf
arpl
outsb
lcall
jbe
test
xchg
es
dec
jb
mov
pop
sbb
repnz
mov
arpl
out
xchg
mov
cmp
enter
push
jp
mov
nop
dec
mov
loope
mov
mov
test
fwait
outsl
cltd
jle
mov
notl
sbb
mov
mov
push
mov
stos
in
je
jns
and
mov
cmpsb
mov
clc
sub
stos
mov
cwtl
jne
fldl
push
and
std
ds
ja
repz
pop
fists
push
xchg
test
lahf
inc
jmp
inc
and
imul
lds
outsl
test
movsl
stos
popf
mov
xchg
jmp
jmp
xchg
adc
or
test
mov
pop
jmp
ljmp
mov
imul
add
into
ficomps
jmp
loop
cmp
fwait
mov
lods
ret
out
mov
sub
pop
inc
lret
aas
mov
into
subl
test
outsl
call
push
arpl
jbe
test
inc
out
test
dec
pusha
ret
xchg
and
inc
pop
aam
mov
lahf
loope
dec
cmpsl
stos
pop
push
xchg
sbb
xchg
jno
xorl
shlb
and
stc
xor
jns
push
cmp
add
lea
cld
sbb
cmp
out
push
movsl
xor
dec
lods
add
push
mov
std
lea
sbb
dec
inc
jmp
inc
lods
cmp
test
mov
push
je
push
fisubrl
cld
jp
lret
js
pop
cltd
and
push
mov
mov
xchg
sbb
mov
sbb
jp
jns
cs
dec
and
fistps
add
push
test
gs
ja
mov
push
ffreep
sarb
and
outsb
dec
dec
repnz
sti
inc
mov
and
pop
call
pop
sahf
ljmp
cmpsl
aaa
adc
push
pop
push
and
ss
adc
mov
sub
cmp
dec
loop
inc
inc
lock
mov
adc
or
in
xor
aam
daa
adc
fiaddl
lods
lahf
mov
addr16
fs
mov
dec
jne
loopne
imul
sub
movsb
movsl
jns
fisttpl
nop
into
sti
mov
mov
mov
adc
pop
in
push
shrl
andl
add
jmp
cmpl
or
jne
mov
cwtl
mov
dec
push
jbe
mov
mov
mov
loope
mov
negb
out
iret
xor
insb
rcrb
jl
repnz
lods
add
dec
push
pop
fnstsw
das
add
jbe
xchg
fisubrl
outsb
xor
and
lock
dec
andb
sub
pushf
add
mov
mov
push
mov
nop
sbb
cwtl
add
pusha
mov
les
jecxz
dec
jecxz
add
sbb
pop
and
adc
pop
cmp
jbe
sub
mov
out
dec
mov
in
int
push
in
sub
push
pop
outsb
int
cmp
mov
or
push
faddp
ret
pop
inc
jecxz
jmp
out
xchg
mov
fmuls
mov
jae
push
je
repz
xchg
pop
and
mov
les
adc
addb
sub
pop
sbb
pop
jg
lock
xchg
sahf
jmp
push
loop
ret
xor
data16
push
push
push
pop
adc
negb
out
and
push
clc
iret
mov
rorb
push
arpl
jge
xor
or
adc
dec
arpl
dec
das
mov
adc
jns
movsb
js
insb
adc
push
imul
mov
fistl
inc
aam
sarb
dec
insb
push
imul
out
negb
pop
out
mov
push
inc
mov
push
pop
je
mov
lds
sub
push
jecxz
or
aas
sub
test
imul
ja
lret
andb
imul
into
fdivp
mov
sub
xchg
push
pop
pop
cmp
aaa
xor
fldcw
lret
out
in
outsl
int
les
cltd
lahf
push
xor
ret
out
jmp
ds
out
pop
sahf
jns
inc
sub
loopne
and
push
xchg
xchg
into
adc
scas
test
movsl
xchg
mov
insl
orl
mov
cltd
imul
ret
cmp
jle
jecxz
idiv
xchg
sbb
loopne
push
push
cwtl
pop
jno
xor
pusha
mov
lret
das
xchg
sub
scas
mov
roll
jne
push
and
pop
jmp
add
jnp
icebp
test
xchg
fidivs
mov
mov
mov
pop
les
sahf
mov
mov
cmp
fcompl
addl
outsb
loop
cmp
ja
xchg
xchg
xor
cmc
add
cmp
ret
mov
stos
pop
roll
pusha
int3
and
and
ficoms
inc
inc
sbb
sbb
test
dec
dec
sub
fisttpl
test
xchg
push
push
aad
cmp
call
jg
sbb
sbb
and
imul
or
add
test
lods
addl
std
fnstenv
jg
inc
inc
outsb
subb
daa
stos
lret
fwait
xchg
sub
adc
sub
jb
lfs
movsl
iret
nop
out
decb
jnp
mov
in
addr16
mov
dec
add
ljmp
and
dec
in
push
sub
arpl
rorb
and
lret
mov
xor
push
jns
dec
in
cmp
jg
push
fwait
push
xor
sbb
sbb
mov
insb
mov
ret
sub
sub
fsub
loope,pt
sbb
pop
out
push
mov
cmp
sbb
mov
jmp
out
and
dec
inc
in
cmp
enter
xchg
xchg
js
push
subb
dec
add
sbb
adc
jle
push
sti
fcomi
xchg
call
xchg
push
aas
cli
js
gs
js
sbb
stos
daa
fldl2e
les
inc
cmp
fstpt
insb
push
gs
or
fs
ljmp
cmp
push
test
mov
nop
jb
pop
inc
mov
data16
je
inc
fstpl
fnstsw
xor
inc
sbb
fsubr
jns
rorl
testb
pop
dec
pop
push
imul
push
adc
add
call
mov
stc
mov
mov
outsl
jg
lea
inc
sub
xlat
xchg
sbb
das
pop
aad
icebp
aas
jl
lcall
mov
add
pop
inc
insl
add
mov
push
jo
in
dec
mov
daa
and
mov
jecxz
out
dec
rcll
stos
clc
aas
inc
mov
cmp
mov
adc
aam
jl
fistpl
dec
jb
incb
mov
ds
imul
cmpsb
fdivr
mov
popa
pop
xchg
mov
das
stos
mov
ret
xchg
add
lds
aas
test
out
xchg
std
subl
xlat
hlt
sbb
mov
int
lret
xor
fildll
add
in
push
add
bound
cld
cli
pop
pop
cmp
test
cmp
popf
scas
mov
scas
push
int3
mov
in
negl
fiadds
test
push
xchg
int3
outsb
aaa
push
cmp
pop
fs
cwtl
orl
or
sbb
mov
cmp
stc
mulps
mov
inc
jecxz
pop
jge
mov
test
mov
push
inc
and
cmpsb
or
outsl
stc
loopne
mov
sub
lods
mov
sbb
scas
fbstp
gs
xchg
lret
mov
push
pusha
jne
xor
cmp
cmpsb
ljmp
jb
into
ja
pop
push
pushl
ss
jp
cltd
int
js
push
popf
pop
subl
cmp
mov
es
scas
cmpsl
call
add
jae
ss
adc
mov
out
pop
movsb
frstor
pop
mov
jl
xor
sub
mov
pop
cmpsb
test
in
fs
mov
pop
roll
or
mov
jb
xchg
jecxz
stos
aaa
ja
xor
fnsave
into
inc
sbb
in
or
pop
loope
mov
and
test
lds
cmp
js
jno
xchg
push
cmp
lcall
pop
inc
lods
sbb
jp
imull
xor
in
cmpb
mov
popl
or
sti
sbb
xchg
ret
push
mov
or
scas
repz
cwtl
mov
mov
xchg
sub
sbb
ret
dec
ss
sarb
lret
xchg
inc
pop
mov
data16
cwtl
dec
int3
sbb
push
xchg
int
imul
and
and
inc
mov
rclb
popf
mov
std
push
dec
mov
mov
jmp
jnp
data16
jg
popa
xchg
loope
push
fwait
xchg
data16
mov
addb
dec
jns
pop
test
xlat
int
add
clc
dec
lds
adc
adc
shl
fldt
nop
cmp
out
cld
and
cmpsl
ss
out
rcrb
rcrl
repnz
pop
cmp
hlt
repnz
xchg
add
outsb
cmp
fldenv
pop
xchg
xchg
sub
mov
xchg
sub
mov
or
jnp
mov
dec
dec
lods
inc
popa
sub
cwtl
sub
aaa
dec
inc
pop
cmp
bound
dec
inc
push
inc
int3
int
inc
mov
and
lock
jno
movsl
xchg
jb
sub
mov
xchg
andb
ficoml
adc
and
mov
into
xor
jmp
pop
jecxz
jbe
pushf
mov
mov
rcll
movsb
cltd
pop
out
out
nop
sbb
add
mov
aad
mov
pop
in
xchg
shrl
stos
jecxz
stos
test
mov
adc
or
arpl
jne
inc
mov
or
mov
pop
outsl
mov
mov
das
add
cmpsl
jge
loope
insb
ds
jmp
fimull
cs
push
xor
add
or
sahf
out
dec
add
push
loope
inc
sbb
push
add
roll
cwtl
test
xor
addl
pop
rolb
dec
xchg
xchg
xchg
repz
lea
add
and
xor
test
dec
je
lcall
inc
mov
daa
cwtl
sbb
sbb
das
cmpsl
test
repz
int
bnd
jno
cli
rorb
lods
xor
mov
dec
cmc
jno
popa
xchg
pop
push
in
fidivs
cmp
rol
rcrl
popa
mov
sub
sub
lds
xchg
pusha
inc
jo
pop
fisubrs
push
jns
andb
cmp
fst
inc
add
sbb
iret
jo
daa
mov
test
ljmp
or
lods
out
ss
in
dec
mov
xchg
push
incl
mov
fidivl
pop
jo,pn
push
shlb
pop
mov
xchg
xchg
mov
lods
mulb
inc
cmpsl
mov
jne
xor
push
mov
subb
xor
add
mov
lods
jns
push
adc
jl
leave
cmpsl
and
mov
inc
add
sti
lahf
in
test
int
mov
mov
testl
sbb
mov
add
xchg
mov
adc
and
jge
mov
cmp
inc
hlt
jb
add
rcrl
roll
mov
stc
icebp
dec
inc
out
mov
mov
frstor
push
sbb
in
shrd
push
push
pusha
adc
mov
mov
inc
imull
mov
stc
cmp
ds
push
hlt
mov
inc
or
js
mov
or
jbe
pushf
sub
pop
mov
js
inc
icebp
sub
push
loopne
and
jecxz
mov
int3
notl
jno
mov
loopne
bound
xrelease
push
daa
sarl
xchg
jmp
xor
sub
inc
idivl
hlt
xor
cmpsl
xlat
jle
or
ret
pop
mov
push
in
lods
in
lds
inc
dec
lock
mov
jns
pushf
jo
add
push
push
push
gs
stc
mov
hlt
mov
xchg
int
inc
sar
lret
les
outsl
sub
sbb
test
push
ret
cmpsl
fistps
xchg
stos
push
dec
idivl
add
mov
mov
cld
cli
jmp
xor
xchg
mov
jl
and
test
and
cs
testl
out
fwait
or
mov
push
push
dec
push
shlb
and
add
jo
sbb
clc
loop
loop
inc
mov
dec
sbbb
insl
iret
daa
sti
fisubrl
fwait
rorb
out
popa
fsubr
push
divl
or
adc
rolb
mov
ret
or
sbb
push
ja
lea
adc
inc
push
add
sub
and
adcl
je
data16
fdivr
mov
lods
fidivrs
fwait
jge
add
inc
cli
adc
cltd
xchg
dec
sahf
cmp
mov
stos
int3
sub
stos
sahf
sub
cmp
into
cmpsb
outsl
bound
and
dec
ret
lea
sbb
data16
in
inc
testb
and
sbb
lahf
pop
cmpb
or
mov
cmp
popf
cmp
dec
pop
in
xor
jmp
xor
xchg
xchg
ds
ret
and
push
inc
mov
icebp
add
dec
jae
dec
push
jmp
xchg
and
pop
mov
cmc
popf
mov
negb
mov
gs
jae
clc
test
lahf
hlt
in
xor
leave
sbb
pop
cmc
mov
cmp
add
adc
stc
sbb
mov
imul
push
xchg
clc
cld
imul
test
testl
lea
int
js
loope
std
mov
mulb
fistpll
fdivs
jbe
sbb
roll
xor
faddp
sub
or
sbb
mov
enter
pushf
repnz
pop
mov
mov
adc
jp
xor
and
and
enter
cli
into
mulps
loop
jmp
pop
mov
lock
enter
mov
pop
mov
cmpsb
pop
lods
jmp
adc
fidivl
out
inc
nop
jbe
insb
jno
into
lds
xchg
jbe
and
xchg
cmpsb
arpl
adcb
in
jno,pt
dec
popa
scas
xchg
xchg
nop
je
sub
rol
mov
scas
out
dec
cmpl
ljmp
rdmsr
lret
test
aad
sbb
adc
loope
adc
and
mov
test
aam
leave
js
out
fstps
sahf
jns
in
cmp
loop
stc
adc
mov
add
stos
pop
ljmp
dec
test
adc
shlb
push
cli
jp
test
mov
pop
test
daa
je
dec
and
and
dec
inc
arpl
outsl
incl
test
mov
dec
or
adc
and
mov
subb
adc
and
fs
fsub
cmp
out
outsl
xor
xlat
mov
push
insb
dec
jae
pop
icebp
sub
or
cmp
mov
bound
in
rorb
nop
out
add
xchg
inc
daa
mov
or
pop
in
fwait
insb
fbstp
scas
stc
stos
cltd
adc
adc
mov
xchg
adc
cmp
sbb
test
cmpsl
sbb
aad
mov
call
or
xor
pop
outsb
dec
xchg
jmp
jmp
mov
xchg
ds
sbb
push
pop
xchg
and
dec
call
cld
sahf
push
mov
sub
rol
xor
mov
add
jbe
movsb
repz
movsl
xor
jbe
pop
subl
sarb
testb
ret
imulb
add
push
pop
scas
mov
nopl
subl
xor
fdivrs
outsl
xchg
lret
push
outsl
and
cs
xchg
dec
jmp
fwait
or
or
xor
ret
sbb
test
xchg
leave
push
lret
sarl
pusha
xchg
imulb
aas
cli
call
lcall
inc
enter
insl
mov
xor
or
mov
lcall
nop
jbe
adc
xor
xchg
dec
daa
fisubs
int
lods
addr16
xchg
scas
mov
fisttpl
fs
test
in
or
leave
pop
inc
int3
jne
dec
dec
frstor
stc
test
mov
mov
xor
inc
into
call
cmp
push
and
rolb
mov
xor
pop
cmp
mov
int3
push
dec
test
ja
and
push
add
leave
repnz
fldl
cld
inc
mov
fsubrp
jb
xorl
xor
leave
push
pop
gs
loopne
repz
rcrl
push
ret
jno
pop
enter
pushf
jb
outsl
xchg
pop
pop
mov
xor
shrw
mov
mov
push
call
dec
xor
sub
or
cmpsl
inc
out
cmpsb
lods
jbe
and
scas
pushf
jmp
mov
cld
stc
jl
adc
jbe
jg
sbb
inc
add
ret
inc
pop
cmp
push
adc
pop
xchg
push
test
xlat
test
pop
data16
push
adc
in
icebp
popa
add
ret
stos
out
add
bound
rorl
testl
repnz
imul
imul
leave
add
sahf
and
pop
shll
jmp
jnp
xchg
test
sti
shlb
mov
insb
pop
cmp
cmp
pushf
add
subb
std
xor
clc
adc
clc
fidivl
adc
lcall
mov
into
sbb
test
push
popf
stos
sbb
mov
inc
pop
cwtl
add
sub
rclb
push
adc
daa
sti
cmp
nop
test
jecxz
faddp
test
les
mov
loope
xchg
sub
sti
je
popl
in
lret
test
add
cld
cmc
int
int3
insb
xor
fwait
xchg
in
jns
cs
addr16
negb
fwait
jae
and
mov
shl
jmp
jg
mov
sbb
add
jmp
int3
jmp
insl
mov
or
sahf
in
out
jg
push
ficompl
sbb
cmp
ja
mov
and
rclb
lods
pop
lret
dec
jl
and
mov
inc
push
je
mov
pop
sahf
in
fnstenv
mov
adc
aaa
shll
cmp
sbb
cmp
or
aas
int
out
ds
sti
insb
fstps
adc
cmp
mov
jns
dec
testb
dec
shl
push
shl
and
incb
popf
sub
dec
repnz
sub
or
push
inc
loope
mov
or
ss
mov
adc
scas
stos
leave
sbb
int3
mov
pop
test
add
push
inc
and
ss
mov
inc
add
inc
orl
shrl
sahf
jle
test
mov
test
insl
mov
mov
imull
mov
sarb
rclb
pop
andb
iretw
mov
sbb
sub
fnstsw
jns
mov
subl
js
inc
push
stos
push
lods
pop
jmp
push
cmc
dec
mov
sub
dec
xchg
xor
pop
push
scas
push
out
adcl
popa
mov
in
lahf
imul
pusha
insl
sbb
test
mulb
mov
hlt
jne
pop
push
es
push
inc
mov
aas
jno
test
nop
sub
dec
fwait
lahf
or
push
push
cmp
ljmp
mov
adc
sahf
mov
mov
mov
push
jo
in
mov
mov
jno
xlat
inc
mov
out
or
fsubs
sbb
das
dec
jmp
cmp
cmp
rclb
mov
lret
inc
cwtl
xchg
pop
data16
pop
movb
jo
fsts
lods
jle
add
sub
lret
mov
in
dec
sbb
jno
mov
xchg
stc
cmc
out
xor
imul
mov
cmp
jp
mov
sub
push
adc
and
push
and
shrl
stc
popf
mov
pop
jle
data16
sub
jge
ja
or
cmc
cmpsl
adcl
sbb
xor
scas
and
int
int
jae
mov
aas
xchg
pusha
add
pop
push
lcall
push
sbb
fwait
idivb
add
inc
xchg
inc
daa
outsb
loope
push
xor
int
adc
aam
ss
sbbl
push
stos
mov
push
or
inc
pop
lods
mov
jne
pop
pushf
mov
in
push
test
rclb
push
gs
xchg
push
jbe
cmpsl
mov
repz
lcall
push
roll
test
mov
push
cmp
cmpsb
and
push
and
aaa
ljmp
scas
fstpt
sbb
es
jne
ja
add
cmp
rol
in
lcall
orb
imulb
clc
daa
sbb
cmpsb
jp
gs
hlt
faddl
das
or
mov
adc
pop
cmpsl
test
pushf
xchg
sti
pop
push
fiaddl
insl
xor
divb
out
pop
outsb
fidivrl
fcoms
imul
inc
dec
mov
repnz
outsl
jp
add
dec
popa
js
mov
nop
mov
jg
mov
gs
popf
insb
mov
nop
and
and
add
cmpsl
mov
inc
sbb
push
inc
adc
adc
addr16
push
bound
jb
or
mov
daa
icebp
pop
pop
lds
rorl
clc
fwait
test
inc
stos
mov
test
out
aad
or
stos
add
insb
sub
filds
mov
call
imul
icebp
dec
fwait
xchg
movsb
lret
and
ja
mov
stos
out
adc
in
dec
test
dec
adc
mov
pusha
cmp
cmc
jne
xchg
fld
sbb
xor
mov
inc
ljmp
cwtl
out
xor
sbb
frstor
lret
insb
inc
pusha
cli
mov
das
mov
adc
cmc
test
dec
pop
jne
imul
xchg
je
jl
outsb
inc
enter
adc
fisttpl
cmp
sbb
mov
daa
imul
xchg
pop
push
dec
fiaddl
push
cmp
popa
jae
jnp
shll
shll
push
loope
out
scas
and
lret
cmpsl
jo
and
pop
sub
or
jbe
push
sbb
hlt
int3
cmc
cmp
in
sbb
cmc
lret
pop
mov
mov
lahf
in
out
loope
lods
xor
pop
jp
push
insl
decb
jge
dec
insb
out
push
adc
popa
lahf
pushf
fucomi
loop
and
mov
jnp
or
mov
and
sarl
push
and
inc
dec
jno
xor
les
mov
sbb
pop
repnz
clc
popa
jle
cli
mov
cmc
cmp
pop
jbe
call
and
or
in
cwtl
adc
cmp
mov
sar
push
and
push
inc
pop
pop
mov
ss
mov
arpl
adc
ret
mov
je
inc
push
insb
cmp
push
loope
adc
push
sub
jg
jno
pop
popl
sbb
adc
bound
push
dec
es
in
sbb
cltd
shll
sbb
cwtl
test
das
jmp
int
cmp
inc
inc
call
and
les
push
mov
pop
outsl
and
adc
dec
mov
jge
or
push
scas
fimuls
sbb
testb
iret
mov
mov
stos
in
icebp
lcall
repnz
push
iret
aam
jmp
adc
out
cmc
pusha
jg
mov
and
das
cmp
jmp
mov
int3
stc
adc
shll
scas
sub
dec
outsb
mov
mov
insb
push
mov
ljmp
xor
pop
insb
addl
testb
rcr
jmp
adc
cmp
jmp
shrl
into
sub
imull
dec
aam
loopne
fsubrl
add
mov
movsb
jnp
std
insb
mov
test
xor
or
iret
cmp
sbb
les
jb
pop
imul
add
js
lret
mov
data16
adc
andl
ret
in
pop
sbb
push
pop
insb
mov
cld
and
aam
orl
sub
dec
add
jne
lock
mov
outsb
out
xchg
rdtsc
inc
adc
pop
mov
sub
dec
dec
scas
imul
addr16
arpl
out
mov
adc
sub
test
hlt
adcb
in
xor
push
jno
sub
hlt
dec
pop
loop
repnz
cs
mov
int
add
sub
fdivs
cltd
push
jle
xchg
jl
jmp
mov
notl
push
inc
int
lds
mov
in
dec
cmp
inc
sbb
jb
mov
testb
fdivrl
and
dec
nop
scas
in
sbb
cwtl
mov
sbb
imulb
or
pop
cwtl
popl
int3
int
lods
or
fld
out
imul
mov
loope
popa
mov
lahf
adc
out
mov
mov
lods
pop
and
lahf
inc
mov
mull
jae
ret
dec
fs
mov
arpl
xor
mov
push
js,pn
arpl
inc
and
pop
pop
cmp
mov
scas
ss
push
test
adc
sbb
jmp
inc
scas
hlt
push
and
std
inc
out
push
mov
add
xchg
lret
aaa
add
mov
jb
sub
push
test
dec
lret
mov
insb
je
ja
popf
sbb
cmp
add
inc
sub
sub
jno
cmpl
cs
sbb
leave
es
pop
pop
test
jle
int
daa
or
cmpsl
iret
inc
cli
cmp
pop
inc
call
pop
adc
inc
push
into
or
inc
ret
mov
int
loopne
test
mov
jb
mov
test
sbb
jo
loope
pop
sahf
or
push
fnstsw
dec
inc
adc
xlat
dec
imul
push
pushf
shll
out
sub
mov
repnz
cltd
pop
push
push
aad
cmp
dec
adc
cmpsl
pop
xchg
inc
movsb
ljmp
pop
int3
int3
inc
sahf
mov
jb
cli
adc
rcll
int3
rcrb
mov
fwait
ljmp
pop
ret
push
or
pusha
mov
xor
adc
xchg
or
dec
jns
daa
fwait
dec
sbb
jp
loope
stos
jbe
dec
inc
lret
push
sbb
sbb
mov
aad
xor
lock
pop
inc
mov
mov
test
jmp
mov
cmp
xor
outsl
and
and
fs
adc
das
popa
add
hlt
mov
les
push
jp
mov
pop
inc
fiaddl
test
std
popa
mov
pop
loop
ffreep
dec
jle
test
dec
shl
pop
jno
mov
or
push
sti
fisttpll
xor
icebp
enter
cmp
fmul
notl
jae
cmp
inc
int3
sbb
adc
pop
or
in
cli
lret
js
in
arpl
loope
subps
inc
das
pusha
mov
fs
movsb
xor
pop
jnp
in
into
inc
push
mov
xlat
loopne
push
xchg
call
mov
or
push
icebp
and
roll
shrb
fidivs
rcrl
pop
test
xchg
sbb
xchg
jl
imul
cmp
ret
add
inc
pop
imul
push
pop
pop
loope
idiv
sti
cmp
xor
je
xchg
outsb
hlt
test
mov
lcall
in
divl
ret
xchg
in
ret
inc
xlat
bound
out
jmp
daa
test
idiv
in
repnz
int3
xchg
jbe
rorl
outsb
lret
jns
push
daa
push
subl
xor
adc
cmc
mov
sub
dec
or
movsb
mov
fildl
or
repnz
add
imulb
ljmp
mov
outsl
dec
mov
filds
or
flds
cmp
push
sub
sub
pop
sub
rorl
mov
arpl
cld
insb
push
into
jns
into
mov
mov
xchg
lds
and
out
in
bound
jecxz
ficoml
leave
mov
mov
jns
lods
mov
insl
jp
adcb
and
into
dec
mov
sbb
jp
inc
int3
push
jo
xor
gs
or
stc
xchg
sahf
mov
push
and
mov
mov
sbb
lods
inc
pushf
les
lret
mov
fwait
lock
ljmp
ret
mov
or
xchg
adc
fstps
and
jmp
pop
jg
test
pop
push
pusha
push
lahf
clc
pushf
lea
mov
outsl
lods
xchg
lahf
ljmp
subb
cmp
out
adc
cmp
jecxz
lods
rcrl
cmp
fwait
daa
andl
movsb
scas
pop
sbb
jl
dec
add
mov
loop
icebp
lock
popl
push
inc
testb
jecxz
jno
ljmp
sub
fnsave
sbb
pop
mov
outsb
lret
in
push
adc
dec
and
jns
mov
test
add
scas
dec
or
mov
in
in
out
mov
push
xor
xchg
iret
shll
xchg
nop
cmpb
sarb
inc
mov
sub
mov
shll
in
scas
push
aad
push
pusha
mov
inc
in
lea
inc
sub
add
xchg
cmp
xchg
mov
leave
mov
clc
fadd
or
push
testl
xchg
repz
cltd
dec
pop
mov
js
inc
imul
dec
std
xor
cltd
cwtl
ljmp
ljmp
mov
das
lea
inc
in
in
decl
inc
jge
jg
inc
pop
push
mov
pop
mov
sbb
jmp
mov
nopl
das
xor
fdiv
sbb
or
js
push
xchg
jo
xchg
xor
int
xchg
jae
lcall
stos
sbb
lret
movsl
cmpl
ret
and
jp
mov
repz
jns
pusha
daa
repz
add
clc
movsb
rorl
mov
cli
jae
and
pop
or
loopne
sub
push
cmp
xchg
dec
popa
add
in
push
jne
inc
testl
into
pusha
push
bound
sub
loopne
mov
jns
mov
clc
sahf
pusha
and
lods
or
pop
cmp
es
enter
lret
hlt
dec
jae
dec
test
inc
sti
test
add
mov
dec
xor
int3
mov
lcall
mov
out
mov
loopne
icebp
and
arpl
leave
and
mov
mov
xchg
call
lock
lcall
mov
pushf
jecxz
enter
push
movsb
outsb
xchg
int3
int
xor
iret
int3
out
cmp
mov
or
push
sub
cmp
xchg
xchg
dec
shl
fildll
pop
add
repnz
adc
rclb
adc
mov
jmp
cmpsb
enter
iret
test
andl
pushf
call
mov
dec
inc
in
ret
xchg
adc
xor
dec
cli
inc
movsl
addr16
inc
pop
mov
sbb
pop
daa
out
shr
test
pusha
jo
dec
adc
fstpl
fdivrl
aaa
bound
cmp
sub
jbe
sub
adc
arpl
mov
enter
jg
xor
jp
inc
push
cmp
sbb
outsb
aas
push
mov
mov
lcall
imul
fwait
rol
ret
outsl
iret
imul
out
push
adc
jbe
jne
sbb
jns
inc
lods
push
jg
sub
push
xchg
bound
inc
test
sbb
neg
inc
loope
les
dec
mov
inc
xchg
jmp
bound
adc
pop
testb
pop
mov
inc
bound
adc
or
xchg
mov
out
scas
insb
mov
aam
add
cmp
sbb
push
push
inc
js
enter
mov
inc
es
push
data16
fldenv
int3
clc
mov
rclb
ret
jnp
mov
addr16
mov
push
push
fistl
cmc
clc
adc
int
inc
scas
in
or
jecxz
cli
add
roll
push
sbb
cs
int3
jge
pop
inc
nop
movsl
fldcw
pusha
adc
xor
push
mov
pop
insl
cmp
icebp
sbb
jecxz
sub
xchg
pop
nop
adc
push
sarl
les
lea
ljmp
xchg
xor
push
push
cmp
pusha
mov
fldl
add
out
xor
pop
mov
xchg
mov
imul
xchg
mov
pop
aam
clc
shll
mov
cmp
sbb
add
add
mov
inc
xor
cli
movsb
mov
xchg
pop
ss
mov
lret
or
push
push
es
ss
xchg
scas
test
inc
pop
push
push
mov
push
mov
pop
js
add
test
cli
imul
mov
fidivs
test
or
aas
mov
jge
mov
fs
sbb
shrb
push
lods
push
sbb
orl
scas
lods
xor
or
outsb
or
mulb
jnp
sub
push
push
loop
clc
js
rep
clc
into
in
push
xchg
mov
dec
xchg
jmp
pop
sub
call
mov
sub
das
mov
and
jns
scas
inc
push
mov
int3
inc
test
daa
lahf
call
adc
jae
sub
and
dec
xchg
push
xchg
jmp
push
jbe
mov
xor
cld
push
in
add
xchg
cmpsb
inc
jb
out
lock
js
sbb
cmp
cmp
xchg
add
mov
lock
push
fisubl
sub
icebp
imul
pusha
xchg
push
cli
xchg
mov
in
das
lcall
pop
stos
lock
adc
or
jle
mov
inc
xchg
push
dec
add
in
jnp
jle
lods
pop
or
gs
inc
xor
or
pop
push
or
push
mov
popa
addps
mov
lret
lock
cmp
rcrb
enter
mov
mov
loop
fldenv
lods
push
aam
adc
adc
pusha
mov
sbbb
pushf
adc
or
mov
cmp
dec
jns
jmp
lret
icebp
push
or
out
xor
inc
loope
cmovle
mov
nop
xor
push
mov
sti
loopne
xchg
push
mov
mov
es
lret
jnp
add
or
dec
pop
adc
and
xor
mov
nop
dec
sub
fstpt
fwait
aam
mov
repnz
scas
imul
add
or
or
dec
mov
clc
sub
push
push
sbb
fiaddl
cmpb
push
mov
mov
mull
gs
xchg
and
xchg
jle
sub
daa
sbb
sub
xchg
sub
adc
sub
out
push
inc
in
push
test
ljmp
and
pop
cs
ja
xlat
in
stos
cwtl
incb
pop
or
mov
mov
fiadds
das
stc
lea
pop
pmuludq
and
inc
sub
lea
pop
adc
mov
jp
lcall
call
xchg
dec
cli
xor
mov
add
gs
push
sbb
mov
sub
push
jl
push
fisttpll
inc
popa
call
sbb
out
push
or
js
cmp
jmp
lods
scas
mov
mov
ds
lea
lods
sbb
mov
mov
das
push
push
mov
mov
xchg
jo
jbe
loop
sti
popf
push
in
lods
mov
movsb
mov
pushf
fisubs
or
das
cli
jecxz
cmp
xor
or
dec
or
in
adc
in
out
jnp
int3
repnz
mov
inc
jae
sbb
int
icebp
dec
xchg
xchg
adc
mov
mov
xchg
push
and
inc
xchg
movsl
incl
pop
cmpsl
fisttpl
icebp
adc
cmp
jl
push
iret
ret
ja
ficomps
sbb
cmp
or
sbb
jo
mov
jle
sbb
or
pop
mov
inc
rcrb
daa
xchg
nop
cmp
mov
mov
or
adc
out
jns
sbb
inc
in
dec
outsb
test
jb
sbb
pop
iret
dec
nop
fistpll
xor
sbb
adcl
dec
or
mov
dec
mov
push
gs
mov
xlat
lods
cmp
cwtl
fidivs
leave
notb
sbb
sbb
stos
xor
mov
jle
sbb
xor
stos
lret
cmp
mov
mov
pop
mov
popa
sbb
orl
out
negl
push
aaa
arpl
xchg
push
mov
rclb
adc
mov
adc
repnz
sub
mov
push
shll
xor
push
stc
jge
loope
and
jno
arpl
shlb
gs
add
clc
push
inc
insl
out
icebp
pop
inc
repnz
xor
lods
pop
nop
sti
cmp
in
dec
pusha
lcall
clc
insl
sub
xor
aas
scas
push
into
imul
mulb
iret
xchg
and
pop
sbbl
iret
pop
clc
movsl
lret
rcr
das
push
lcall
pop
mov
sub
sti
mov
nop
cld
or
mov
imul
lea
pop
aas
decb
lods
add
cmpsb
addr16
fstpt
mov
clc
and
cmpsl
sbb
leavew
push
ret
xor
in
cmpsl
lock
adc
xchg
pop
or
fisubrl
add
inc
sub
add
fbld
sub
mov
lcall
mov
xchg
movb
jno
out
fsubrp
out
ljmp
or
lret
lock
adc
xchg
bound
mov
xchg
jno
mov
test
push
cmpsl
push
add
add
mov
and
sbb
push
in
fadds
inc
and
push
out
sahf
stos
shll
mov
test
je
ss
push
jge
xchg
mov
out
aas
movsl
sbb
or
xor
test
inc
xchg
rcl
xor
lods
mov
add
loope
insb
adc
sub
fcomp
ja
gs
jmp
mov
jae
and
movsb
out
and
push
cltd
push
cmp
insb
out
cmp
push
mov
or
mov
outsb
mov
pop
in
sbb
ret
mov
mov
cs
out
jg
sub
push
aad
adc
in
enter
jno
lahf
loope
adc
dec
mov
sti
inc
je
jno
aam
fsts
push
hlt
adc
dec
inc
mov
jb
cmp
mov
jne
dec
jno
inc
outsl
mov
mov
push
out
inc
inc
cmpl
lds
test
dec
mov
xchg
jns
jnp
jne
pop
pop
out
inc
hlt
cmp
cmp
mov
push
and
es
loop
cwtl
push
mov
test
movsl
adc
addr16
dec
ss
push
xchg
popl
out
push
out
ret
lods
sub
int
lea
in
ds
repnz
dec
scas
mov
arpl
jmp
stos
scas
pop
test
sbb
sbb
xchg
insl
cmpsl
fisttpl
inc
cmp
mov
xor
dec
dec
mov
popa
rcrl
and
scas
cmp
dec
lret
mov
add
jp
mov
fwait
hlt
adc
xchg
pushf
sbb
out
pop
or
cltd
call
mov
dec
mov
mov
test
pop
xchg
inc
call
xchg
jg
mov
loop
loope
push
inc
push
imul
outsb
adc
sbb
jbe
xchg
loope
orl
mov
push
mov
xchg
xorl
outsl
outsl
imul
neg
fidivrs
and
push
lret
lds
scas
and
add
mov
adc
pop
lea
push
xor
int
movl
push
mov
jb
lea
xchg
cmpsb
repz
jp
mov
jb
int
out
sub
idivb
cmp
inc
cmp
mov
out
dec
jne
test
mov
push
movsl
and
dec
pop
add
mulb
cltd
or
cmp
adc
sub
shrl
hlt
mov
rorb
mov
jns
xorb
ret
sbb
lock
pop
add
or
dec
lods
sbb
push
and
sub
imul
ja
push
xchg
xchg
rolb
das
or
adc
call
push
or
pop
stos
add
or
cmpsb
or
insl
sbb
sbb
movsl
dec
pushf
dec
aad
adc
push
push
mov
xchg
sti
sahf
repnz
mov
add
test
pop
or
fbld
pop
icebp
dec
push
add
arpl
sbb
xor
or
hlt
popf
push
adc
pop
cmp
adc
addr16
jecxz
insb
pop
xchg
in
xchg
enter
andl
cwtl
andl
mov
pop
mov
je
jmp
push
call
repnz
gs
and
lock
fnstcw
call
fcmovb
adc
ja
aas
ret
dec
xor
jg
mov
push
adc
inc
call
sarl
lret
xor
fbld
imul
xor
cmp
xor
mov
cld
fbstp
jb
imul
hlt
mov
dec
lea
jle
aaa
std
jbe
inc
mov
fwait
cmp
test
nop
adc
xor
xchg
push
adc
add
sbb
mov
xchg
xlat
lds
sbbl
jecxz
gs
out
sbb
xchg
aas
mov
aaa
jecxz
push
inc
or
ret
cmp
inc
imull
push
xchg
xor
adc
stc
mov
dec
mov
fiadds
mov
mov
pusha
fisubrl
in
mov
addb
sahf
and
frstor
movsl
push
sbb
xlat
lret
lahf
lcall
ljmp
mul
xchg
ja
imul
cs
addr16
sarl
insl
dec
and
push
mov
cmp
and
pop
mov
mov
add
lea
dec
pop
daa
jns
dec
orl
mov
int
es
mov
cmp
stc
dec
ljmp
xlat
stos
dec
jno
and
jne
imul
inc
add
hlt
push
ljmp
xlat
add
push
or
xor
clc
xchg
cmpsl
lds
mov
xchg
std
lods
jo
out
es
push
ret
fcmovb
addb
push
mov
xchg
cmpsl
cmp
iret
xor
push
adc
clc
in
mov
out
lahf
pop
icebp
and
jbe
push
mov
mov
gs
mov
fstpl
mov
ja
stos
in
data16
fadds
push
iret
or
ja
test
lret
xor
sahf
movsb
ret
mov
inc
mov
lret
ss
outsb
repz
jge
loopne
popf
sub
idiv
int3
dec
inc
ret
cmp
stos
imul
fs
push
xorl
xor
mov
and
xchg
sub
test
xor
out
mov
push
inc
clc
mov
call
and
inc
add
hlt
fisubrl
mov
mov
or
push
sub
sub
and
in
bound
lds
lcall
push
aam
imul
xor
daa
mov
outsl
lret
insb
sub
cmc
cmp
aaa
outsl
push
adc
push
sti
and
call
mov
mov
cwtl
xor
arpl
imul
pop
shrl
pop
mov
jmp
adc
lret
sub
jmp
cmp
jne
lods
cmpsl
lret
mov
lods
rol
add
mov
rorl
mov
icebp
filds
aad
add
jne
mov
dec
add
add
daa
xor
inc
mov
inc
arpl
test
je
mov
lret
sub
mov
insb
jb
int3
inc
popa
shll
ds
shrb
xor
imul
adc
pushf
mov
and
cltd
arpl
push
and
lret
cmpsb
add
push
jae
cmp
jge
jbe
dec
sub
loope
sub
dec
das
sti
push
scas
insb
int3
lods
cmpb
out
cltd
dec
xor
inc
cmp
jno
sub
pop
mov
mov
imul
sbb
insb
not
push
hlt
aam
jb
inc
scas
inc
push
subl
popf
jno
sti
or
stc
xor
adc
movsb
mov
pop
repnz
push
mov
testl
cmpb
or
stos
and
scas
testb
in
comiss
popa
std
insb
ja
push
sub
mov
daa
xchg
sub
mov
jns
out
pop
mov
push
and
lds
imul
mov
cmp
mov
add
cmc
jb
mov
pop
stc
icebp
icebp
insl
leave
xchg
sbb
adc
pushf
cpuid
push
sub
mov
int3
scas
int3
dec
cmp
mov
ret
dec
inc
dec
or
cmp
jge
je
mov
pop
sarl
sbb
dec
cmp
mov
aaa
call
sub
das
adc
dec
test
jne
mov
cwtl
mov
into
mov
fsin
jge
aam
dec
cmp
aad
xchg
jmp
mov
dec
test
lret
cmp
mov
lret
iret
sub
dec
mov
arpl
or
mov
add
stos
das
jmp
xchg
outsl
call
add
icebp
push
inc
cwtl
push
lock
push
nop
add
sbb
rolb
jl
xor
nop
outsl
mov
out
loope
lds
mov
or
and
insl
mov
push
insb
add
jo
add
xchg
push
sub
fistl
fwait
sbb
cmp
mov
out
sub
adc
fsubrs
push
and
imul
test
inc
sub
pop
mov
dec
cmpsb
loop
and
mov
mov
add
push
pop
dec
cmpsl
fwait
push
rolb
cli
out
or
iret
add
add
cld
pop
cmp
test
pusha
leave
inc
decb
inc
lcall
fistl
mov
push
mov
gs
scas
or
popf
repnz
inc
loop
and
xor
sti
lcall
lahf
mov
iret
ret
ljmp
inc
add
in
add
cmp
xchg
std
adc
mov
rorl
lcall
bound
fdivs
mov
bound
lret
mov
outsl
ds
dec
incb
andb
dec
insb
mov
or
mov
mov
xchg
popf
int3
sbb
push
adc
and
mov
repz
int
adcl
cmp
or
add
or
jo
insl
out
fldt
scas
inc
mov
dec
insb
dec
int3
jl
fimull
adc
inc
ljmp
push
fsubl
jl
repz
add
mov
sub
ss
push
popa
cmc
scas
mov
adc
jb
pop
ret
adc
mov
lret
ds
data16
jg
sub
dec
push
sahf
cmpsl
loopne
mov
sbb
or
inc
xor
push
xor
inc
test
loopne
arpl
pusha
das
dec
xchg
mov
lods
dec
pop
mov
sub
stos
test
mov
les
in
aad
repnz
mov
dec
dec
sub
push
mov
not
out
push
fidivl
jnp
pop
adc
hlt
push
movsl
lods
fistpl
mov
out
bts
pop
xor
loope
cmc
fstl
mov
push
dec
dec
xor
enter
fstpl
xlat
adc
nop
gs
mov
mov
fimuls
sbb
insl
push
xchg
repz
jg
pop
xchg
gs
repz
nop
sahf
fwait
test
xchg
sbb
dec
mov
adc
sbbl
sub
shl
inc
movsb
xor
scas
push
nop
add
pop
jbe
ljmp
push
inc
jl
xchg
mov
xchg
mov
sbb
mov
fsubrl
pop
ret
and
push
lcall
out
dec
or
sarb
pop
xor
vmovshdup
rcrb
fcomps
or
stc
stos
mov
mov
mov
pop
lea
ss
int3
movsb
mov
add
cmp
addr16
xchg
loop
push
dec
fisubrl
mov
cmpsb
repnz
jnp
jp
in
sub
arpl
arpl
add
mov
mov
outsb
loop
test
adcb
xlat
or
nop
iret
dec
fisubrs
jns
lahf
aad
xchg
movsb
ja
and
inc
inc
sbb
push
sbb
add
mov
ljmp
in
rorb
inc
lcall
xor
xor
test
xchg
cmp
mov
jne
xor
pop
dec
mov
xor
jne
fdivrs
mov
in
or
dec
out
and
ret
xchg
push
mov
hlt
add
roll
clc
insb
scas
fs
cmpb
pop
in
loopne
sub
lods
rolb
popa
repz
add
out
flds
adc
inc
leave
pop
xor
push
nop
mov
inc
sub
and
cmpl
es
bound
lret
adc
dec
loop
inc
jb
dec
aad
push
sbb
fwait
mov
xchg
cmc
sbb
scas
mov
frstor
adc
and
jne
fwait
rcl
icebp
jp
or
push
dec
icebp
ja
outsl
sub
jge
cli
shrl
sub
gs
leave
mov
push
in
je
cmp
push
fsts
in
fdivl
pushl
mov
loopne
pop
fmuls
shl
cmp
cltd
pop
push
pop
mov
push
xchg
pop
fisubs
or
loope
dec
pop
mov
testb
mov
cmpsb
fnstenv
arpl
push
lds
adc
outsl
add
xor
or
sub
pop
rorb
or
clc
inc
enter
out
sbb
pop
and
pop
icebp
out
ss
shll
addr16
lahf
repz
sbb
scas
repz
mov
xchg
add
int
fstps
cmpl
pop
mov
movsb
ds
push
mov
cmpsl
jge
push
jecxz
add
cld
aad
mov
jge,pt
mov
sbb
pop
stos
ss
inc
inc
clc
loopne
xchg
push
mov
push
or
mov
push
sub
lahf
and
arpl
cltd
clc
mov
pushl
int3
rolb
lds
push
mov
adc
jns
push
or
cmp
repnz
xor
pushf
call
movsl
fdivl
stos
dec
loop
mov
dec
stos
les
fistpl
hlt
xchg
push
jle
shlb
je
jo
mov
icebp
mov
xchg
jmp
mov
or
leave
aaa
jl
sbb
adc
bound
enter
xor
push
iret
test
push
mov
mov
pop
sbb
loopne
repnz
sbb
sub
int3
dec
cmp
loop
pop
iret
xor
loop
fildl
shrl
mov
dec
loopne
jb
shrb
outsl
mov
mov
pop
sbb
inc
mov
pushf
mov
imul
sub
xor
inc
cmc
mov
sti
jbe
leave
push
pop
inc
mov
adc
sub
cli
push
lock
mov
arpl
mov
int
xchg
xchg
dec
and
ds
leave
arpl
roll
cld
cmp
cmp
jo
in
mov
jle
and
jb
fildl
jmp
lret
or
pop
and
int
imul
aaa
es
xchg
cmp
lret
sahf
pop
sbb
inc
mov
testl
out
or
outsl
adc
and
or
into
lds
clc
imul
and
jne
ljmp
bound
mov
loop
daa
cld
stos
mov
rorl
notl
push
out
pop
pop
pop
xorb
cmp
xchg
testl
mov
mov
xor
sarl
shll
movups
idivl
aam
adc
lea
xor
pop
into
jno
test
push
dec
xchg
rolb
stos
call
inc
das
adc
lcall
sbb
adc
fs
idiv
xor
push
pop
jnp
inc
repnz
fsubrl
push
fnstsw
push
xchg
test
xor
push
dec
pop
inc
lahf
sbb
dec
push
lret
daa
cmpsb
aas
popa
loopne
jecxz
and
or
xor
add
sub
inc
pusha
leave
xchg
loope
sbb
dec
push
jnp
divb
cmp
pop
mov
dec
loope
xor
dec
adc
adc
cmp
fsubl
xchg
and
andb
jo
push
ljmp
addr16
and
sbb
and
rcll
in
cli
xchg
sub
add
jmp
add
fbld
ja
pusha
pushf
std
test
pop
push
pusha
lret
sub
mov
inc
sahf
dec
xor
fwait
cmc
mov
inc
les
in
xchg
cmp
lret
xor
adc
mov
lret
idiv
fwait
js
hlt
fld
or
fcom
fsubl
sbb
loop
ja
gs
inc
iret
lcall
in
xchg
test
mov
daa
lock
push
adc
and
dec
loope
rcl
cmc
xor
fcoml
push
test
data16
push
xor
xorl
xchg
mov
iret
loop
sub
push
imul
or
int
gs
jns
xchg
lods
and
jp
jmp
adcl
jae
jb
push
sarb
lea
adc
inc
sbbl
movsl
pop
xor
pop
arpl
inc
xor
sub
jle
test
es
popa
arpl
dec
push
cmp
inc
in
adc
lods
std
mov
add
mov
sub
jge
xchg
pop
popf
xor
adc
push
push
xor
test
xor
add
inc
dec
jnp
cltd
xchg
mov
ret
xor
jb
pop
sub
rcrb
rorl
dec
xlat
scas
xchg
add
jno
xor
mov
aas
jno
xorb
lret
loop
xrelease
add
mov
xchg
repnz
idivl
les
sub
xchg
cltd
outsb
inc
jg
xor
test
adc
packssdw
enter
pop
xchg
lahf
movsb
js
pusha
ljmp
or
fnsave
mov
cld
mov
adc
outsb
cmp
cld
adc
and
lret
and
sub
push
push
leave
pop
scas
aas
adc
int
xchg
daa
aad
push
push
push
sar
testl
lock
es
jno
popa
adc
je
call
mov
cmp
scas
jno
and
cmpsl
sarl
inc
test
in
ds
adc
xchg
add
scas
sti
push
test
xchg
xchg
into
xor
mov
lock
out
add
out
test
jbe
fstpl
jle
lods
or
fmul
clc
stos
inc
xchg
pushf
jge
sub
and
inc
mov
sbb
dec
rcrl
xchg
jo
jae
pop
mov
jg
inc
inc
popa
loop
cmp
adc
xchg
movsb
es
or
push
jbe
das
and
mov
or
push
ret
sub
adc
push
mov
or
cli
or
das
mov
lcall
push
xchg
or
ret
mov
mov
adc
push
jb
dec
mov
es
dec
push
out
sub
pop
mov
or
jno
mov
add
pop
adc
fldcw
adc
push
test
insl
cmc
mov
bound
adc
call
lret
test
xor
cli
jns
push
adc
test
mov
lret
aad
es
or
mov
rcrb
lods
push
mov
out
add
xor
ficoml
xchg
pop
cmp
xor
push
and
push
or
sbb
mov
pushf
mov
push
loopne
sbb
fimuls
push
lret
xor
loope
mov
jmp
sbb
dec
js
add
aam
push
pop
sub
push
lds
iret
and
cmp
outsb
push
rorb
or
add
sub
fst
sti
arpl
sti
xor
mov
outsl
roll
mov
leave
adc
cmpsb
mov
mov
mov
push
fwait
out
js
negb
insb
movsb
push
push
ds
jle
and
add
test
mov
aam
lret
cmpb
cmp
adc
jl
stc
xor
inc
fwait
aam
pop
mov
mov
ds
cmc
dec
xor
lret
fldl
fsubr
sub
in
cli
mov
adcl
in
cmp
lret
lret
std
mov
mov
mov
cld
xchg
push
fidivrl
pop
sbb
popa
cmpl
es
mov
pop
test
push
xlat
xchg
stos
notl
jg
pop
jne
jle
adc
sub
push
push
pop
int
sub
arpl
mov
ret
stos
adc
xor
pusha
mov
or
sub
jge
mov
jbe
fsts
mov
or
mov
int3
pop
jns
repz
fcomp
icebp
inc
or
dec
sub
adc
jns
dec
inc
out
loope
or
in
adc
pop
shll
sti
or
pop
mov
hlt
cld
mov
jp
inc
aas
outsw
into
ror
loop
mov
pushf
repnz
push
or
popa
ret
mov
fwait
cmp
and
jmp
loopne
cmp
js
xchg
shll
dec
sub
pop
loope
jns
sbb
cmc
mov
insl
ja
jno
jge
test
mov
cmpsb
inc
pop
popf
lods
lods
mov
int3
xchg
cmc
mov
pop
in
push
popa
ret
cmp
call
add
cli
inc
loope
jno
pusha
mov
test
shrb
jo
cmc
and
inc
gs
mov
int3
enter
int3
adc
mov
in
jb
inc
hlt
sbb
mov
pop
popa
stos
std
dec
cmc
cmovae
dec
mov
pop
inc
test
lock
fsubl
add
lods
lea
push
movsl
cmpl
jnp
jb
fisttps
scas
out
jne
pop
sub
addr16
cld
rcrl
adc
int
int3
xor
mov
cmp
bound
mov
xchg
popf
sbb
gs
push
mov
adc
bound
push
loopne
push
inc
push
cld
xor
or
jne
sub
lret
mov
or
inc
xor
pushf
mov
out
mov
in
je
pop
int3
aad
add
lds
sub
in
loopne
adc
repnz
mov
cmp
jno
mov
cld
sub
sbb
scas
adc
mov
les
sub
andb
mov
orl
test
shlb
hlt
add
pushf
jno
jle
imul
scas
es
push
jg
lret
stos
ljmp
negl
out
subl
pop
dec
stos
mov
mov
mov
mov
test
dec
ds
sub
jnp
push
dec
fmul
push
push
loopne
mov
lret
pop
push
lds
test
sbb
adc
movl
mov
rcr
ja
cmpsb
add
xor
scas
aam
sbb
jle
insl
movsl
dec
mov
das
xor
fisttps
or
int
jl
push
xor
hlt
and
arpl
inc
inc
and
jbe
jnp
xchg
shll
dec
ret
out
lahf
rcrb
lea
pop
cmpl
jg
pop
lods
inc
out
add
cmpsb
or
mov
jb
inc
insb
cmpsb
mov
or
add
push
jae
adc
pusha
rol
dec
shlb
shll
jg
es
or
adc
pop
push
push
and
ss
xor
fldl
imul
mov
sbb
clc
leave
pop
dec
outsb
ret
cli
pop
out
xor
out
pop
push
push
mov
adcb
xchg
mov
loope
sbb
pop
test
mov
pusha
fdivrs
sbb
xor
hlt
fidivl
je
cmp
movsl
lcall
jnp
xchg
push
pop
call
xchg
sahf
daa
pop
xchg
xchg
or
loopne
lods
mov
mov
and
fwait
mov
xchg
les
xchg
and
pusha
popa
sub
dec
lahf
pop
sub
les
call
call
push
shlb
fcom
test
mov
jnp
add
or
adc
jge
sub
arpl
aaa
pop
lcall
mov
loope
int3
and
jge
sbb
iret
mov
das
or
mov
out
and
call
mov
sub
addr16
call
sub
sbb
mov
mov
jnp
mov
cs
andb
lods
popf
mov
gs
xchg
sub
pop
and
xchg
mov
out
movsl
and
mov
mov
sub
jb
out
mov
and
or
pop
in
xor
into
fstpl
sbb
repz
hlt
movb
call
xchg
pushf
and
test
in
push
push
mov
into
adc
and
out
push
sbb
mov
aam
push
jecxz
cld
inc
clc
mov
popf
pop
insb
shll
loop
add
cltd
push
mov
mov
stos
andl
cld
sbb
dec
movl
pop
xchg
adc
cmpsl
xchg
shl
out
mov
cltd
xchg
out
add
movsb
dec
test
xor
cld
and
dec
out
je
cli
dec
cmp
pop
push
movsb
pop
insl
enter
xor
sub
cmp
fmuls
fcmovu
leave
dec
or
adc
lds
cmp
dec
pop
push
sub
imul
stos
mov
mov
cli
sbb
xchg
mov
enter
mov
sti
add
shlb
sub
dec
sbb
scas
sbb
add
std
adc
push
ffreep
pop
xchg
imul
in
stos
add
scas
cmp
cmc
jecxz
mov
stc
xor
in
dec
jg
into
aam
out
test
int3
or
mov
inc
popa
in
mov
xor
lods
and
cmp
push
icebp
xchg
shr
jecxz
sub
imul
xchg
insl
imul
out
and
clc
mov
xchg
addb
ljmp
xor
stos
and
xchg
lea
mov
fcoml
mov
jb
jne
dec
into
inc
adc
lahf
rcrb
pop
dec
mov
mov
xor
lea
or
movsl
xchg
mov
fistps
mulb
pop
push
sbb
cltd
xor
add
repz
sbb
loopne
pop
icebp
jecxz
mov
xor
divl
push
icebp
stos
fisttpll
sbb
push
xchg
ds
data16
mov
sbb
mov
jmp
fucomi
mov
sbb
stos
mov
or
mov
pop
adc
push
and
clc
inc
jb
cmpsl
push
sbb
clc
aad
inc
in
inc
stc
cltd
xchg
cld
cmp
jge
xor
push
inc
hlt
daa
xchg
mov
push
cmp
mov
mov
enter
push
mov
dec
mov
pop
mov
aaa
push
hlt
cmp
push
pop
idivl
je
adc
pop
xor
aam
rcrl
dec
and
fcmovnu
gs
dec
shl
pop
fcmove
insb
cmp
adc
scas
sbb
push
cltd
fisubs
push
jg
push
movsl
mov
pusha
int
mov
inc
repnz
mov
into
ret
xchg
mov
add
fwait
stos
cld
push
decl
xor
pop
adc
leave
in
lahf
lret
xchg
xchg
inc
add
ret
cmp
ljmp
and
in
clc
sbb
shl
movsb
xchg
ja
add
je
xor
jae
fimuls
outsl
sub
in
jnp
rcrl
sub
and
iret
inc
loopne
push
mov
xlat
mov
dec
inc
ljmp
mov
and
int
dec
aas
cmc
frstor
ja
out
js
fstpt
mov
cmc
jmp
add
loope
jecxz
xor
push
pop
rolb
cmp
test
outsb
cli
iret
jne
jp
or
pop
jmp
div
sbbb
inc
jge
jecxz
inc
cmp
jo
pop
imul
aas
daa
inc
ds
adc
jns
out
shlb
sbb
out
mov
mov
arpl
pop
adc
add
scas
popa
stos
scas
ret
mov
cltd
rol
sarb
mov
jmp
aaa
xor
dec
bts
push
stc
dec
pop
pusha
cmpsl
jg
and
cmc
xchg
xchg
adc
xor
sub
xchg
inc
das
lahf
sub
insb
aad
mov
sar
data16
inc
ljmp
cs
mov
enter
shll
add
dec
gs
pop
insl
fstpl
pop
inc
jo
pop
mov
js
mov
push
lret
scas
jae
fildl
xchg
mov
pop
push
daa
push
mov
rorl
enter
push
js
sbb
add
lcall
inc
scas
or
and
rol
out
pop
fs
push
sub
inc
test
or
adc
jp
arpl
inc
popa
push
xchg
or
into
dec
loop
scas
and
adc
stos
stos
fnstenv
test
jl
nop
jmp
xor
dec
cmpsl
add
and
jl
les
jge
sbb
adc
fldenv
inc
inc
ret
sub
in
mov
cmp
xor
push
push
xchg
adc
mov
xor
cltd
leave
fs
xor
xchg
iret
lret
shl
or
notb
sbb
ficompl
aam
fldl
pushf
inc
ret
dec
lods
jecxz
fwait
push
or
roll
xchg
xchg
pop
cmp
scas
outsl
insb
stos
lods
mov
ds
mov
popa
mov
popa
notb
lds
enter
mov
mov
add
pop
sbb
jge
mov
rcr
imul
fs
les
pushf
pop
jl
cld
in
inc
ljmp
out
outsb
dec
sub
fcmove
loop
insl
push
cmp
es
sar
popa
jns
cmp
cmp
xchg
and
adc
add
push
push
jmp
xor
test
adcb
fwait
or
xor
and
push
shlb
push
ret
addb
je
lahf
cltd
mov
sub
sub
cmp
je
mov
cwtl
fimuls
sahf
in
mov
int3
pop
mov
add
inc
lock
mov
std
sbbb
mov
cmpsb
cmpsl
or
pop
mov
mov
cmc
test
sub
cmc
cli
sub
inc
dec
arpl
pop
dec
ret
test
and
inc
or
inc
jb
pop
mov
fwait
or
fldcw
outsl
fistpl
imul
and
inc
mov
xor
cwtl
or
xor
inc
scas
cmp
jbe
es
pop
mov
xchg
dec
xchg
shrw
add
inc
lcall
add
dec
insl
cmp
push
lds
das
fisubrs
push
cmp
sub
xlat
push
mov
mov
fbld
xchg
jmp
cmp
decl
stos
mov
aaa
pop
mov
xchg
pop
int3
movsb
data16
ret
mov
xchg
inc
jb
mov
mov
cmp
adc
les
sbb
dec
mov
fstp
std
inc
push
addb
fisttpll
cmp
and
mov
cmpsb
insb
fsubs
push
mov
push
fs
dec
mov
jle
jmp
xor
xchg
and
aaa
ret
mov
fcmovb
cs
inc
cmpl
andb
out
mov
sbb
inc
cmp
outsl
xchg
mov
notl
mov
mov
andl
sti
aas
rcrl
push
pop
int
cli
fimull
mov
mov
mov
rcll
mov
popa
stc
cmpsl
xchg
sub
fcompl
gs
mul
jmp
shl
xchg
sahf
filds
rcrb
push
leave
adc
mov
outsl
insb
mov
sbb
jne
into
xor
pusha
cmpb
adc
fidivrs
cmpsl
or
push
ds
sbb
insl
fistpl
mov
cld
jecxz
inc
sub
and
leave
or
repz
push
adc
inc
loopne
sbb
lcall
sbb
lret
add
sahf
jo
ficoml
lods
xor
jae
jge
fwait
pop
mov
inc
test
daa
push
pop
addr16
icebp
fs
sbb
sahf
mov
nop
mov
push
mov
int
or
sbb
pop
aas
shlb
jno
lds
movsl
push
orb
lret
jmp
xorl
filds
lods
jg
xchg
adc
add
loopne
out
cmp
push
lods
aad
shrb
roll
ja
adc
inc
je
add
dec
push
push
mov
test
cmp
outsb
inc
call
dec
hlt
out
adc
xor
stos
movsb
int3
out
jecxz
rcl
sti
ss
sahf
lcall
fcompl
fs
adc
loop
sahf
xchg
lods
addl
call
sub
mov
jnp
mov
xchg
pop
mov
jmp
inc
test
out
outsl
mov
scas
xchg
pop
jbe
mov
adc
cmp
mov
aam
jns
sbb
adc
xchg
mov
sub
and
push
xchg
adc
jno
adcl
mov
add
jp
sbb
push
lds
xchg
fsubr
jns
dec
testb
dec
mov
int
imull
movsl
fsubp
xchg
out
mov
mov
in
pop
outsl
fcomi
dec
dec
popa
sbb
cmp
xchg
clc
cs
adc
je
jne
scas
ljmp
inc
mov
push
ljmp
jno
push
lds
mov
outsl
cli
mov
orb
jg
adcb
mov
adc
iret
xlat
inc
test
das
push
or
fdivl
inc
push
shlb
data16
jecxz
mov
xchg
adc
dec
sub
cmp
jmp
inc
test
mov
cmpl
xor
xor
pop
jbe
push
sub
mov
push
mov
shrb
adc
lret
cmp
cmc
mov
dec
je
mov
cmp
xor
sub
out
aas
push
sbb
push
mov
or
out
inc
pop
add
test
test
lock
pushl
push
out
xchg
js
mov
dec
popf
inc
and
jl
ret
adc
and
add
mov
push
mov
cmp
inc
cmc
imull
outsb
cmp
loopne
cmp
les
cmpl
lret
das
jbe
adc
sub
das
inc
adc
xor
mov
mov
lea
mov
fsubrl
xchg
fldenv
mov
lret
adc
jne
insb
idivl
jle
cwtl
loop
das
loopne
dec
cmp
and
mov
in
adc
inc
xchg
ljmp
insb
lret
fildl
decl
enter
mov
stc
mov
and
movsb
cwtl
insb
push
dec
cli
xchg
and
cmc
add
dec
mov
sbb
jbe
cmpsl
push
jno
mov
xor
lods
sbb
adc
jb
xchg
cmc
pop
or
adcl
push
xlat
and
mov
ss
and
sbb
cmpsb
cltd
repz
inc
jnp
mov
add
in
dec
loop
popf
sti
and
enter
sub
ret
rolb
pop
out
push
mov
jge
cwtl
jmp
sbb
loopne
mov
mov
loopne
addr16
int3
out
loop
sbbl
rol
xchg
mov
or
add
sbb
out
sub
or
sub
mov
shlb
icebp
xor
jmp
add
jb
sub
cwtl
stos
sub
xchg
xchg
xchg
aaa
pushf
or
push
ds
ljmp
ds
and
repnz
sbb
js
cmpsl
and
inc
pop
dec
mov
sbb
sbb
in
add
mov
repz
xlat
mov
repz
insb
push
mov
fadds
repz
insl
add
imul
sbb
enter
andb
cld
cmpsb
enter
xor
je
push
cmp
dec
push
mov
pusha
xchg
shlb
lret
adc
shlb
jmp
rcrl
adc
and
pop
repnz
out
movsl
int
sbb
mov
cltd
and
cmp
and
insl
jns
inc
fmuls
insl
pop
mov
repz
repnz
in
lea
pop
and
lock
jmp
mov
xor
jl
push
xor
sbb
popa
in
icebp
pop
orl
mov
jo
xlat
out
mov
push
aad
sbbl
dec
xlat
xlat
gs
insl
jno
add
and
movsl
cmp
dec
xchg
or
mov
push
in
fs
inc
jns
inc
pushl
xlat
adc
movsl
cs
push
jge
je
cmp
inc
adc
and
lcall
jo
mov
mov
add
loop
xchg
cmc
in
cmpsl
xor
in
repz
mov
stos
cmc
and
cmpl
out
idivb
pop
dec
data16
sub
lret
xor
jne
dec
xor
aam
pop
fcomip
js
dec
pop
pop
cwtl
and
clc
imul
pop
dec
lock
add
xor
pop
clc
jle
mov
imul
and
cmp
xor
rclb
pop
leave
push
adc
or
sbb
pop
pop
or
bound
bound
push
ljmp
mov
cmp
les
push
push
popl
sub
fsubl
aam
ret
data16
loopne
mov
les
aad
popa
arpl
cmpsb
leave
push
pop
clc
out
push
paddq
test
mov
lds
push
jge
lret
lock
inc
or
jge
in
adc
aaa
push
enter
sbbl
cmp
mov
sbb
les
xchg
into
push
loop
jne
pop
dec
insb
mov
mov
dec
xor
or
lock
mov
pop
jb
sub
sub
enter
sbb
fcompl
sti
out
push
jne
jg
jle
sarl
ss
outsl
js
data16
es
lcall
mov
cmp
fcoms
sub
push
jno
pop
jb
iret
shrl
aad
push
lea
sub
pop
sub
or
je
inc
push
or
push
mov
mov
add
push
pop
scas
xor
insb
sbb
fisubl
popf
mov
data16
sbb
dec
cltd
cmp
les
flds
jb
sub
dec
push
mov
scas
push
mov
sub
mov
dec
push
fs
dec
lods
lds
pop
jmp
inc
rcrb
pusha
in
push
daa
xor
jbe
ficoml
cmp
shrb
mov
cmp
shrb
test
pop
mov
aas
mov
in
stos
and
fidivrl
shrl
xchg
sbb
jge
lea
adc
int3
sbb
jl
add
sti
pushf
mov
es
gs
test
pushf
aaa
and
push
fcoms
imul
adc
int3
pop
jno
es
sub
mov
mov
inc
sbb
rcrb
xchg
pop
sub
in
sbb
outsb
mov
ret
add
rcr
inc
push
int
add
sub
xchg
pop
in
fsts
sbb
push
jle
repz
inc
dec
icebp
in
rorl
lahf
add
sahf
mov
sub
lcall
or
sub
inc
arpl
or
inc
and
push
es
xor
push
out
out
xchg
test
push
pop
lret
rcrl
or
enter
xchg
shr
daa
lds
and
aam
fiaddl
in
push
dec
into
and
or
xchg
fdivr
mov
loopne
dec
push
cmp
jecxz
adc
push
sbb
aas
movsb
sub
pop
pop
push
xor
insb
fld
mov
test
loopne
add
mov
les
je
mov
insl
cmp
repnz
popf
lea
xor
rcr
or
or
aas
outsb
scas
mov
sarl
mov
fstpt
adc
xor
mov
jmp
push
fneni(8087
add
addr16
int3
fildl
pop
lods
repnz
dec
jo
fs
push
repz
int3
sahf
jmp
out
jnp
cld
add
push
add
mov
push
fistpl
clc
pusha
mov
call
xchg
lea
jl
cs
mov
enter
addr16
dec
movsb
xchg
stos
push
inc
subl
xor
iret
ljmp
fildll
bound
jle
add
adc
xor
xchg
add
xor
fidivrs
dec
jge
adcl
pop
ljmp
push
jecxz
insl
das
divl
mov
cmpsl
sbb
int3
add
jmp
mov
jnp
pop
jbe
out
mov
mov
mov
jl
xor
or
add
mov
or
lret
lds
idivb
xchg
or
dec
fld
mov
xor
adc
in
xchg
addr16
rclb
inc
xchg
scas
mov
stos
test
jge
pop
mov
int
inc
pusha
jae
adc
mov
mov
xor
adc
pop
adc
hlt
cmpsl
mov
rcrb
imul
fldcw
adc
push
pop
mov
pop
mov
icebp
fwait
sbb
dec
push
jne
iret
shll
xchg
in
lods
out
add
lea
mov
pusha
cmp
or
fwait
aam
popa
xor
cs
ret
mov
call
dec
push
jg
mov
pop
jg
cld
call
aas
cwtl
mov
dec
and
adc
leave
jg
cmpsl
pop
aaa
push
xlat
iret
hlt
mov
xor
jmp
vcvtsi2sdl
push
ja
add
xlat
cltd
pop
mov
into
and
jl
enter
xchg
or
hlt
loope
sub
adc
in
mov
loopnew
adc
add
push
int3
mov
xor
ret
cld
stos
dec
jne
xorl
sub
mov
or
hlt
jg
into
push
pop
call
aad
mov
lret
call
push
mov
xlat
roll
add
mov
lea
in
cli
cs
dec
sub
rclb
pusha
lahf
mov
push
xchg
mov
movsb
mov
lcall
fnstcw
add
lods
call
xor
fisubrs
sub
stc
xor
jecxz
jmp
jne
cmp
mov
in
fmuls
clc
popf
fisubl
iret
repnz
pop
ret
test
cmp
dec
lods
pop
inc
into
mov
inc
cmpsl
mov
add
pop
push
sti
mov
mov
sbb
pusha
mov
adc
sbb
lret
daa
movsb
pop
dec
push
inc
jmp
cmp
xchg
push
add
and
nop
mov
ret
jge
popa
xchg
cmpsl
mov
or
addr16
push
sub
mov
cltd
lock
test
push
fwait
sbb
rcr
xchg
sbb
adc
push
popf
add
mov
dec
jmp
ja
mov
aad
cmc
cmp
xor
add
push
and
xor
or
scas
mov
sub
dec
xchg
cmc
jp
sub
jp
xchg
mov
lahf
mov
pushf
inc
cmpsl
inc
es
cmp
add
shl
jnp
into
mov
in
mov
or
add
jp
dec
aas
jg
push
push
mov
lret
xchg
add
loope,pn
rcll
pop
icebp
mov
shlb
inc
mov
mov
or
mov
insl
push
dec
pop
insl
add
shll
lock
movsb
mov
fldt
lods
and
add
pop
xor
cmpsb
incb
es
cmp
push
cld
sub
enter
and
or
call
or
dec
fidivrs
rclb
sbb
mov
fimuls
mov
mov
push
ffreep
scas
jo
xchg
pop
lahf
shrl
xor
sub
imul
sbb
mov
jae
rol
xor
add
and
test
adc
adc
das
loop
inc
cltd
xorl
bound
lret
int3
ret
jecxz
std
loop
call
cli
push
es
lds
in
jmp
in
add
push
aam
mov
mov
out
xchg
stc
das
push
push
push
xchg
xor
int3
xor
sub
icebp
jne
sub
push
loope
inc
mov
rcrb
push
test
mov
xor
stc
imul
repnz
lcall
inc
jle
adc
mov
cli
nop
add
in
out
fbstp
xchg
cmp
dec
rorb
or
pop
jns
mov
testl
lods
dec
xchg
cmp
xor
mov
adc
push
sbb
fadd
mov
xlat
adc
mov
out
pop
adc
xchg
pop
or
pop
out
mov
decb
lret
push
leave
dec
cli
sub
loopne
rolb
rol
mov
jl
mov
ret
test
xor
mov
mov
and
ret
and
mov
fcomps
in
notb
mov
std
jg
in
movsl
jns
rcl
inc
sbb
or
add
add
je
jp
mov
dec
out
pop
xor
in
push
call
push
pushf
js
rorb
popa
cmp
mov
daa
arpl
lretw
pop
cltd
sti
or
js
lods
dec
mov
out
mov
xchg
jmp
leave
xchg
fstps
lret
mov
adc
sbb
rorl
in
in
jle
mov
push
bound
into
and
pusha
add
icebp
inc
lds
add
and
in
mov
decb
insb
mov
sbb
cmp
pop
sbb
mov
repnz
dec
enter
dec
loope
fadds
xchg
jb
jbe
cmp
bound
sbb
or
mov
push
sub
lret
mov
push
addr16
sbb
test
shlb
mov
dec
shrb
add
cmp
out
xor
pop
hlt
xchg
mulb
mov
andl
xlat
lret
cmp
cwtl
push
and
sub
mov
insb
and
and
psubq
push
popa
loopne
dec
lret
sub
cltd
sbb
pusha
jge
lahf
sub
cli
pop
or
push
mov
int3
aam
roll
cwtl
sub
mov
int3
sub
xchg
push
push
dec
rclb
xchg
jecxz
pop
mov
lods
fdivl
and
lahf
mov
out
es
addr16
mov
sarb
sub
aaa
add
pop
jg
int
out
push
pop
ficoms
xchg
push
xchg
sbb
rolb
cmp
stc
push
or
movsb
pop
gs
cmp
jg
mov
loop
ja
leave
mov
push
rclb
jge
jge
subl
inc
mov
popa
or
and
fdivs
pop
or
xchg
mov
pop
push
sbb
jle
movsb
push
adc
push
nop
mov
adc
lahf
std
insb
inc
mov
cmpsb
sub
mov
orl
xor
pop
and
add
push
pop
jge
sarb
scas
stos
shrl
sub
and
or
jmp
aaa
scas
sbb
in
in
leave
les
xorl
sub
pop
sahf
jo
cs
fcomps
mov
js
ds
cmp
repz
jbe
push
jge
sti
ret
movsb
push
jno
lcall
sbb
pop
repz
cmp
call
aad
mov
xchg
out
pusha
das
jb
in
pop
or
xchg
pushf
jl
ss
ds
xlat
insb
mov
push
imul
popa
std
loop
mov
xchg
xlat
cmp
push
or
or
pop
push
adc
adc
add
mov
xor
mov
mov
xchg
xlat
fwait
xor
mov
insl
jne
add
repnz
lods
mov
enter
mov
sbb
es
out
dec
out
shl
add
push
jo
mov
pop
pop
aas
push
pop
jbe
ret
push
ds
xlat
push
xchg
adc
ja
pop
dec
or
hlt
mov
stos
pop
mov
insl
ja
nop
insb
and
fidivs
cmp
stos
sub
cltd
jp
xchg
arpl
add
and
sub
pop
rclb
xor
pop
or
arpl
std
in
call
loop
and
cmp
or
shlb
out
jnp
in
fstpt
ret
mov
xor
scas
lret
insl
xchg
or
push
insl
sbb
mov
lcall
cs
sbb
add
aaa
call
push
xor
cmc
cmc
pop
mov
pop
inc
test
xchg
outsl
xorl
in
mov
add
add
insl
jne
in
cmp
add
stos
push
jl
adc
cmp
sub
into
fidivs
cwtl
stos
sub
vpmacsww
push
jge
movsb
dec
jbe
cmp
outsb
cmp
jne
outsb
out
shrb
cs
xchg
in
jns
je
stos
in
sub
dec
adc
mov
std
das
cmp
iret
dec
or
out
adc
adc
jp
sub
mov
ret
scas
lahf
mov
fbld
nop
xor
in
push
pop
imul
push
add
mov
cmp
jl
sub
dec
scas
stos
or
test
dec
aam
cmpsb
js
daa
mov
dec
hlt
mov
inc
shlb
jb
and
sbb
cld
imul
pushf
inc
pusha
pop
leave
pop
add
sarl
jno
test
lock
xchg
repz
pop
jns
fisttps
mov
cli
int3
mov
adc
adc
push
inc
and
push
jl
dec
push
jno
push
xchg
cmpsb
outsb
arpl
cmp
insl
out
jg
jmp
xor
mov
les
into
mov
push
mov
into
insl
daa
adc
jnp
mov
into
stos
pop
mov
cmpsb
test
cmp
cmp
mov
lret
pop
mov
sbb
movsb
fbld
xor
ds
add
test
lock
sbb
sbb
gs
negl
addb
nop
jl
push
mov
add
adc
cmc
xchg
stos
and
or
inc
std
filds
dec
faddl
mov
adc
lock
cmpsl
mov
inc
int
push
lahf
jecxz
icebp
lret
fdivp
lcall
rcrb
fmulp
mov
cmp
mov
je
sbb
pop
frstor
mov
jle
enter
push
mov
xlat
call
stos
les
sbb
call
sbb
popa
mov
jno
push
and
mov
adc
dec
cmpsb
jno
push
std
out
inc
adc
clc
sub
mov
mov
jle
mov
orl
cmpl
xchg
sbb
aam
cmpb
iret
add
jbe
je
adc
xchg
in
mov
movsl
es
jae
dec
sub
dec
adc
jmp
lock
mov
mov
cld
mov
int3
jecxz
les
hlt
lret
enter
cmp
and
clc
add
inc
ret
mov
ljmp
lea
pop
mov
sbb
int3
push
sub
adc
jbe
sub
mov
inc
iret
pusha
in
fldcw
insl
pop
dec
push
pop
cmp
xchg
sbb
mov
inc
xchg
std
or
push
push
call
xchg
mov
lahf
and
ficoms
xrelease
cmpsl
out
stc
aam
jbe
dec
push
cltd
push
inc
div
adc
mov
mov
pop
test
bound
fnstenv
loop
stos
pushf
sub
in
cli
add
rorl
sbb
aaa
sub
into
jnp
and
imul
pop
adc
mov
in
and
std
stc
pop
fimull
jge
fsubrl
jge
mov
jecxz
out
xor
mov
inc
psubq
ljmp
xor
loope
fistps
pushf
mov
mov
sbb
movsl
mov
scas
pop
les
ss
sbbb
lcall
mov
imul
in
mov
inc
add
sbb
push
data16
outsl
or
enter
imul
pop
mov
ss
popfw
in
or
lret
imul
call
inc
mov
add
push
stos
pop
insb
sub
sub
ret
in
ret
aas
jne
jae
xor
push
pop
cmp
sbb
cmp
push
cmpsb
xor
scas
xlat
or
imul
or
filds
dec
dec
mov
pop
jne
popa
inc
add
sub
adc
dec
add
and
mov
dec
sbb
cmpsb
lret
jecxz
addb
cli
pusha
mov
cmpsl
sbb
adc
cli
sbbl
xorl
addr16
dec
xchg
mov
jnp
and
inc
mov
jb
cltd
cmp
jns
pop
or
mov
xchg
fidivrs
or
mov
je
fadd
jl
sub
jl
lea
pop
mov
xchg
iret
fmulp
and
rcl
add
or
xchg
or
add
jg
mov
cld
movsl
or
dec
test
pop
mov
imul
fnsave
icebp
cmpsl
sti
mov
push
mov
and
or
xchg
shlb
sub
lahf
jge
stos
jno
pop
push
ljmp
mov
lock
xchg
dec
pop
mov
daa
pop
shrb
pop
cmp
mov
minps
into
jecxz
jmp
push
das
dec
popa
cmp
xlat
fistpll
loop
sbb
es
loopne
lods
mov
xchg
sahf
pop
addr16
jae
sbb
jg
mov
clc
push
pushf
popa
cmp
mov
push
and
dec
adc
sbb
push
out
icebp
push
int
cltd
insb
rclb
mov
into
test
pop
arpl
jmp
lods
pop
push
insl
xlat
inc
aad
fcompl
int3
das
rorl
aam
fidivrs
mov
mov
cmpl
sub
xchg
dec
cmp
sbb
push
mov
sti
int3
enter
sahf
gs
ss
jecxz
lret
dec
xor
scas
sbb
test
pop
adc
xchg
push
ss
xor
scas
and
push
das
fdivrs
cli
pop
mov
pop
dec
cld
jmp
sub
popf
in
dec
ja
ljmp
sarl
insb
dec
out
cmp
aad
xor
inc
xorb
xor
lcall
fnstsw
pushf
rcrl
and
mov
nop
repnz
ficomps
fidivs
ret
aaa
rorb
push
adc
fsubr
jb
je
into
in
cmp
lret
inc
aam
ljmp
lods
push
dec
mov
adc
sarl
or
iret
cmpsb
sbb
inc
paddusb
shll
incb
jns
movsl
push
fistps
cmp
movsl
mov
cltd
or
aas
or
mov
mov
scas
mov
sbb
out
xchg
cmp
icebp
rolb
jbe
stos
jg
imul
scas
mov
mov
outsl
push
push
xor
ja
xchg
icebp
sub
jns
dec
arpl
inc
mov
das
aad
cmp
or
cmp
xchg
les
lds
adc
xchg
mov
sbb
dec
jp
rorl
mov
mov
lcall
enter
loop
sbbb
lods
in
inc
les
cmp
cmpsb
pop
ds
scas
loopne
mov
in
into
jno
pop
mov
cmc
add
leave
dec
adc
mov
mov
jnp
xchg
push
sarb
push
sub
es
scas
lret
lret
jns
lock
in
sbb
jb
cmp
jge
mov
mov
ret
call
push
dec
loope
pop
mov
fwait
aam
cmp
sbb
cmp
mov
add
mov
or
clc
cmp
int3
jl
or
lahf
pop
std
enter
repz
dec
xchg
mov
mov
gs
fdivl
shll
push
in
stos
imul
call
add
out
sbb
daa
mov
shlb
rclb
push
cmp
push
sbb
ret
inc
add
das
imul
xchg
or
test
add
aam
fimuls
std
cmpb
movsb
stos
cltd
das
sub
inc
mov
mov
dec
or
insl
mov
sbb
mov
push
push
scas
outsb
test
pop
les
hlt
cmpsl
mov
xchg
jns
mov
scas
loope
jecxz
xor
popa
stos
and
movsl
sbb
and
adc
pop
mov
mov
xor
lock
adc
inc
aaa
cltd
rcl
push
lea
jo
sub
inc
jne
xchg
test
push
pop
stos
sub
mov
call
aam
mov
dec
fnstsw
or
add
cs
scas
mov
mov
cltd
lods
or
lods
outsl
and
clc
jmp
inc
dec
dec
xchg
jmp
call
aaa
out
cmp
mov
bound
mov
js
add
add
test
inc
jo
repnz
call
dec
mov
xchg
imul
mov
push
adc
int
leave
ja
pop
pop
inc
push
jecxz
popa
mull
data16
test
adc
pushf
aas
cmp
jno
mov
negb
aaa
mov
and
enter
adc
and
mov
sarl
push
lret
mov
lret
xor
aam
pop
and
addl
imul
mov
pop
and
xor
cwtl
insl
lea
xchg
xchg
shll
pop
clc
arpl
push
pop
pop
xchg
dec
dec
stc
lret
jecxz
xchg
xor
fmull
jbe
sbb
fildll
sbb
inc
lock
decb
xchg
jp
jecxz
sbb
ret
push
add
movsb
mov
cli
and
sub
dec
arpl
ficoms
sarb
lock
rclb
xor
enter
gs
dec
ds
xchg
add
cmp
dec
jp
inc
jnp
mov
xchg
mov
dec
ret
rclb
les
mov
les
into
inc
scas
inc
xchg
fmuls
jae
adcb
pop
mov
mov
or
inc
fisttpl
or
push
pop
rolb
out
pop
mov
sub
leave
mov
jp
sbb
in
push
dec
int
lds
jnp
cmp
imul
mov
scas
imul
xor
lds
incl
add
push
out
popl
sbb
mov
imulb
repnz
pop
lret
aad
pop
xor
pusha
pop
movsb
xor
cld
xchg
mov
inc
in
sti
dec
push
cmp
jbe
mov
clc
xchg
inc
movsl
inc
add
and
lret
adc
movsb
insb
movswl
jne
and
adc
aaa
movsl
aam
jge
mov
xor
xchg
sbb
insl
push
scas
and
xchg
push
jge
cmc
jl
rolb
decb
cmp
inc
mov
push
jmp
push
jl
cmpsl
sbb
xor
or
subl
push
popl
xchg
aaa
data16
les
xchg
push
or
in
mov
mov
shlb
mov
mov
mov
mov
xchg
out
xchg
sub
xor
lds
adc
push
mov
push
out
lret
clc
or
xchg
jecxz
adc
mov
mov
scas
jmp
push
hlt
xchg
mov
mov
ret
dec
arpl
gs
add
ud0
int
shufps
daa
jecxz
test
xchg
stc
filds
xchg
mov
ja
das
stos
dec
lods
or
and
mov
push
adcb
aaa
jmp
adc
jecxz
add
into
mov
cmc
cltd
lock
nop
cmc
outsb
test
lds
std
xlat
mov
cmp
sub
cmpsl
outsb
push
stc
gs
pusha
xchg
lock
sahf
sarb
cmc
shr
data16
movsb
jne
dec
das
sbb
jle
and
pop
inc
in
rcrb
fisubrs
aad
xchg
rorb
int3
test
push
mov
repz
jl
gs
jbe
and
mov
dec
fstps
cmp
inc
ds
icebp
push
cld
add
in
add
stos
xlat
fdiv
jge
xchg
test
out
inc
repz
int
cld
out
lret
sahf
movb
mov
clc
xor
in
inc
sbb
and
jmp
and
test
jno
inc
lds
cltd
out
enter
enter
jmp
jns
fldenv
inc
or
divl
int3
sar
lahf
cwtl
mov
mov
popf
stc
adc
jle
pushf
int
dec
sahf
xrelease
ret
add
inc
mov
push
push
lds
insb
mov
sahf
in
inc
mov
add
mov
inc
fcomp
cmp
pop
dec
aam
jmp
push
fidivrl
popf
lods
push
adcl
pop
mov
scas
mov
inc
aaa
pop
adcb
lods
fisttpll
jnp
xor
fwait
in
test
fs
int3
jne
lock
daa
xchg
push
mov
test
ljmp
or
adc
shll
mov
in
sbb
adc
adc
xor
jbe
ficomps
mov
inc
sub
xchg
ljmp
push
in
cmpsb
jnp
inc
lret
out
rclb
mov
imul
or
add
sbb
out
iret
in
jb
pop
pushf
dec
pop
pop
mov
xlat
aaa
loop
insl
fldt
pop
out
aam
movsl
or
xor
adc
inc
repnz
ds
lret
call
push
std
lea
cli
xor
pop
dec
cmp
xor
push
enterw
mov
jbe
fnstcw
inc
rcr
imul
stos
push
iret
jecxz
out
sub
inc
jl
pop
adc
add
adc
dec
jns
lods
mov
dec
lret
push
inc
or
add
xchg
test
dec
mov
xlat
mov
push
out
out
jne
jbe
movsb
pop
xchg
roll
es
pop
and
rcrb
out
gs
cltd
iret
loopne
adc
push
fcoms
inc
daa
xlat
mov
push
cltd
idivb
ja
cmp
pop
cs
mov
fdivs
add
das
outsl
mov
sub
mov
push
add
adc
int
xchg
jecxz
pusha
xor
shrl
cmp
pop
cs
sub
cmp
xchg
xchg
ffreep
cs
test
mov
mov
and
jge
mov
lock
mov
and
pop
cmp
andl
cmpsb
aas
mov
mov
rclb
push
or
aas
jge
pop
andl
lods
mov
xchg
je
cmpsl
divl
imulb
adc
dec
add
lds
mov
and
xor
in
out
cmp
sub
add
sbb
data16
push
mov
sti
nop
adc
addr16
or
mov
jmp
xor
out
mov
mov
jmp
mov
push
jnp
js
lret
jp
mov
out
lods
rorb
fcmovu
in
inc
icebp
out
mov
or
notl
out
mov
jl
or
popa
call
mov
push
popf
jno
push
popa
cmp
gs
jne
out
xchg
std
rcrb
add
lock
xchg
int
sti
xchg
mov
cmp
lock
lea
adc
jle
gs
add
je
dec
imull
lahf
test
or
xor
cmp
sub
pusha
test
xchg
adc
scas
xchg
adc
inc
ss
mov
roll
lea
adc
cmc
adc
or
xor
nop
jno
in
xlat
cmc
sahf
cmpb
cmpsl
scas
in
xor
mov
popa
ret
and
ficomps
arpl
push
cmc
mov
sbbl
push
rcrb
pop
mov
fcmovbe
push
lahf
adc
and
aam
pop
iret
xchg
add
repnz
xchg
notb
mov
ret
sbb
xorb
xchg
dec
ljmp
mov
sahf
in
dec
push
lahf
sub
push
adc
es
xchg
shlb
adc
cmp
lods
cmpsb
xchg
xor
push
sarb
out
js
cmp
aam
loope
push
lds
das
dec
add
imul
cltd
icebp
dec
mov
sub
in
test
bound
mov
dec
fwait
mov
popf
scas
insb
push
in
push
pushf
xchg
jp
and
lahf
xchg
in
push
push
addl
dec
jbe
jecxz
test
mov
popf
sub
negl
pusha
sub
sti
repz
mov
mov
pop
je
test
push
jns
cmpsl
inc
pop
jb
js
repnz
jae,pn
jp
dec
sbbb
int
out
js
sarb
mov
cmp
nop
std
adc
out
jb
fsubs
loop
pop
sub
xor
pop
cmp
orb
inc
jne
ja
sbb
scas
xchg
test
dec
xchg
ret
push
sbb
adc
cmp
jecxz
popa
ret
int
pop
cld
iret
xor
mov
leave
pushf
jecxz
add
mov
stos
repz
inc
out
jnp
or
push
aaa
pop
pusha
ja
push
xchg
mov
jmp
xchg
cld
cs
lret
mov
jle
or
jbe
outsl
or
dec
mov
or
xchg
imul
cwtl
push
jle
es
sub
jmp
hlt
or
mov
into
test
mov
shrl
loopne
movl
enter
cld
stos
imul
mov
pop
pusha
and
lret
and
dec
aad
jae
clc
sbb
and
out
cwtl
xchg
faddl
fists
or
lods
loope
popa
repz
mov
iret
daa
int3
ret
bound
push
push
pop
jnp
mov
xor
jae
fimuls
cwtl
and
inc
sub
inc
inc
ds
sarl
adc
cmp
xor
enter
fmulp
insl
test
jge
repz
fidivs
inc
sbb
jl
insb
and
xchg
add
outsb
pop
or
hlt
shrl
jbe
loope
xchg
cmp
addr16
popf
cli
or
data16
pop
push
fs
arpl
clc
push
pop
xor
mov
data16
or
mov
xchg
xchg
fadd
fnstsw
push
test
scas
lods
mov
cmp
popa
xlat
cmpsb
shlb
mov
pop
in
sbb
scas
or
fcoml
xchg
dec
ficoml
sbb
jno
sub
add
inc
lea
dec
sub
loop
movsb
daa
ja
int3
add
hlt
int
arpl
mov
fldl
movsl
pop
movsl
repnz
cli
orb
mov
icebp
sub
out
jmp
shrb
add
cmpl
subl
sub
cmpsl
jae
mul
sar
cwtl
mov
gs
in
lock
rcrl
adc
fildll
or
shlb
fldcw
dec
lcall
cmpsb
mov
pop
fcmovnbe
sbb
xchg
jge
gs
adc
out
pop
repz
ds
into
cmp
push
pop
mov
imul
xlat
adcl
dec
mov
add
imul
mov
mov
xor
sub
popa
mov
sbb
into
mov
fcmove
and
jge
aad
push
cmpsl
mov
std
push
push
mov
sub
mov
mov
fsubp
add
xchg
imul
pop
fldenv
int
cs
mov
push
push
aam
cli
test
inc
es
cmp
ficompl
mov
jnp
scas
push
mov
lods
les
out
pushf
xor
lods
mov
or
scas
stc
adc
jno
jge
mov
adc
cs
fists
mov
xor
cli
cmp
mov
dec
push
aaa
add
in
mov
mov
loopne
or
fdivr
pop
push
pop
mov
mov
je
add
mov
mov
mov
mov
fs
mov
loopne
lock
loop
lea
mov
inc
lcall
and
clc
cmpsl
sbbl
roll
jb
push
mov
outsl
pop
pop
pop
push
lret
sbb
mov
jmp
psrlq
inc
cli
push
mov
std
lea
aad
shll
jl
int
rorl
loopne
es
dec
mulb
dec
push
jbe
and
dec
sbb
xor
sbb
jle
mov
sti
int
cltd
popl
jb
out
adc
xor
lahf
in
pushf
adc
cmp
dec
scas
push
mov
jno
or
mov
mov
and
lcall
mov
mov
gs
gs
test
or
repz
stos
jp
jg
lea
repz
pop
lock
push
and
pop
std
push
out
call
ss
mov
scas
imul
das
test
mov
lahf
and
dec
shlb
add
int
pushf
movsb
push
cmc
add
inc
and
mov
or
mov
es
push
divb
les
jne
cltd
mov
scas
cmpsb
add
fisttpll
rcll
pusha
jb
popf
xor
pop
sub
xor
aad
dec
in
ja
dec
or
popa
mov
ret
out
push
mov
fldt
adc
cmp
sahf
test
fisttps
pop
jle
aam
lret
stc
das
adcl
leave
push
out
iret
cmp
or
sbb
add
testb
cwtl
dec
lods
shll
lds
rclb
sarl
cmpsl
sub
xlat
or
pushf
or
enter
inc
jg
add
push
jecxz
gs
and
sbb
and
outsl
xchg
mov
cltd
add
pop
push
mov
out
mov
jmp
hlt
repnz
lea
xchg
push
mov
push
roll
test
xchg
push
dec
stos
jno
mov
je
icebp
pop
mov
sbb
or
ret
bound
adc
adc
and
mov
xchg
inc
jl
daa
in
jno
mov
pop
test
es
sti
xor
sub
mov
cltd
jo
adc
movsl
push
sub
shll
xchg
loop
xor
aaa
repz
fsubrs
sti
cmpsl
loope
or
fsubr
jmp
outsb
adc
and
mov
xorl
mov
dec
or
pusha
dec
pop
insl
data16
push
into
mov
fsub
cld
outsl
xchg
and
xchg
and
hlt
lods
and
cwtl
shr
scas
fmuls
rol
cltd
cwtl
movsl
shl
fs
lahf
sbb
xchg
das
nop
ret
stos
pushf
pop
pop
sarl
inc
hlt
out
jo
jo
push
test
pop
test
std
sbb
cmp
add
ret
cmp
cmpsb
mov
sub
sub
int
dec
imul
repz
mov
xlat
or
iret
lock
pop
popf
jnp
popf
out
adc
push
jns
ret
outsl
call
shrl
lock
sti
les
cmp
sbb
mov
data16
sbb
ret
xor
ja
mov
push
cs
xor
in
bound
jmp
pop
push
cli
insb
mov
test
jnp
dec
cmp
pusha
jns
addr16
cwtl
mov
add
fst
test
sti
test
and
adc
stos
mov
mov
adc
add
sbb
mov
scas
loope
cmp
stos
lret
pusha
pop
pop
hlt
mov
out
inc
xchg
es
mov
sbb
popa
loop
sbb
pusha
hlt
mov
popl
popf
enter
jg
pushf
add
fimull
ret
scas
sbb
pop
adc
pushf
sub
pop
call
addl
stos
test
add
jnp
mov
xor
mov
push
mov
push
jmp
sbb
out
enter
adc
pop
out
dec
decl
jb
and
inc
or
dec
jecxz
pop
cmpsl
sub
inc
lret
lds
idiv
dec
add
sbb
es
and
sahf
jge
adc
nop
mov
jae
cmp
pop
push
push
or
jne
inc
imul
sarl
sbb
cltd
jno
dec
pop
adc
cmpl
test
stc
mov
dec
dec
xor
loopne
cmp
dec
orb
xor
sbb
shl
jl
ja
cmpsl
and
mov
loop
jns
add
push
rclb
add
dec
adc
sti
rcll
sbb
cmpl
outsl
mov
imul
mov
cmovl
sbb
popa
xadd
pop
pop
add
mov
mov
mov
daa
outsb
lret
xchg
lods
mov
insb
push
adc
rcl
stos
addr16
xchg
mov
test
mov
push
scas
mov
ds
out
sub
in
pop
or
sub
and
jmp
clc
xlat
loopne
xchg
fidivl
mov
xchg
inc
outsl
push
jnp
fidivrl
test
in
outsl
dec
adc
pusha
adc
lds
dec
fmul
cmp
xchg
adc
rorb
shl
pop
pop
outsb
sub
lds
jbe
subb
je
sbb
jmp
xlat
scas
movsl
lds
inc
loop
mov
aad
mov
outsb
or
xlat
shrl
or
cmp
sub
mov
aad
sub
int3
movb
cwtl
dec
mov
in
or
fstps
cwtl
push
pop
cld
test
push
aas
shll
stos
mov
mov
mov
clc
lahf
push
dec
clc
sub
lods
mov
negb
push
in
xchg
popl
cmp
ret
or
push
xchg
arpl
adc
and
adc
std
loope
sbb
popf
imul
inc
je
xchg
mov
and
or
sub
cmpsb
pop
leave
ja
clc
notb
jno
in
add
dec
lahf
cmpsb
adc
add
xor
xlat
scas
fdivl
mov
js
and
mov
mov
aam
data16
push
pop
adc
sbb
test
popa
pop
fs
mov
mov
sti
mov
mov
cmp
pop
inc
sbb
cwtl
push
jg
call
cmpsl
test
sub
loope
inc
shr
dec
fwait
ret
test
push
sbb
filds
xor
inc
inc
leave
cld
adc
sti
rorl
pop
sbb
and
ret
test
cmp
in
mov
mov
push
dec
cli
adc
pop
arpl
arpl
fwait
iret
jb
mov
xchg
lds
loopne
loopne
cmpl
or
das
pusha
xchg
repz
xchg
popf
ja
mov
dec
imul
movsb
fisttpll
mov
inc
movsl
push
push
enter
notb
test
xchg
aaa
aad
pop
jp
or
xchg
mov
in
lods
enter
push
pop
aam
adc
xchg
add
pop
in
cmp
and
test
push
incb
pusha
sbb
inc
cld
xor
push
ret
mov
bound
jge
jp
xchg
sub
jecxz
mov
loopne
mov
inc
jl
out
sub
jmp
lock
add
pop
mov
sbb
pop
cmpsb
xchg
pop
sahf
jp
repz
loopne
add
in
mov
and
imul
mov
add
mov
stc
dec
inc
movsb
dec
pop
out
int
out
adc
aas
or
mov
inc
stos
in
push
mov
scas
ss
push
les
push
mov
movsl
push
cmp
cld
fldl
addr16
mov
int
insl
ja
jae
in
mov
repz
popf
stc
push
mov
lds
subb
clc
popa
mov
adc
repz
loop
pop
add
divl
into
mov
push
adc
sbb
fists
loop
mov
sub
adc
call
xor
and
dec
or
into
adc
into
sbb
leave
data16
dec
pop
xchg
xchg
adc
mov
xchg
adc
mov
mov
repnz
adc
mov
ret
mov
pop
dec
or
lret
popa
es
jg
outsb
fdivl
aaa
xor
test
daa
and
add
fbstp
add
fsincos
icebp
mov
inc
out
imul
ds
push
jbe
enter
data16
fdivs
pop
incb
jg
mov
rclb
adc
xor
pop
loop
cmp
out
notl
test
mov
mov
sahf
scas
pop
js
jecxz
dec
sub
cmp
and
jmp
pop
lods
sahf
sbb
clc
fnstsw
aas
mov
lock
sbb
lods
imul
push
int3
xchg
cmc
sub
mov
and
push
xor
mov
cmp
add
sub
enter
roll
lods
adc
sbb
inc
popa
push
lock
cmp
inc
rep
aam
flds
lret
cmp
jecxz
insl
loopne
lds
repnz
and
mov
aaa
jg
push
and
cmpsb
adc
and
mov
jp
sahf
xchg
adcl
bound
aam
lods
sub
pop
inc
dec
dec
cmp
add
inc
ret
insb
aad
ljmp
or
mov
mov
ret
cmp
scas
rcrb
and
addr16
lock
fcompl
push
scas
mov
inc
jns
cmpb
lds
add
mov
sub
pop
dec
dec
mov
mov
sub
divps
mov
jle
sbb
hlt
cmp
pop
jo
push
push
not
dec
or
mov
mov
andl
push
push
roll
inc
out
mov
testl
dec
xor
inc
or
inc
push
or
lcall
out
push
sbb
mov
mov
leave
rcl
inc
divb
xchg
out
xor
mov
inc
inc
mov
pusha
nop
int3
mov
cltd
or
push
pop
inc
mov
inc
fldl
jg
sbb
das
xor
icebp
sbb
mov
cs
dec
adc
push
cld
test
testb
movsb
imull
lcall
cmp
dec
jb
dec
fistps
add
or
sub
xchg
enter
cmp
lods
ds
das
mov
lcall
test
decb
cmp
cmc
or
inc
mov
dec
dec
insb
fcoml
xor
push
and
or
push
ficoml
mov
fldl
fsubrl
stos
add
mov
sbb
fwait
in
es
add
cmp
cmovle
xor
sub
loope
fwait
push
out
add
adc
inc
sti
mov
es
das
data16
cmp
fistpl
out
and
ret
lods
xchg
pop
add
lret
lahf
lahf
int
jno
jno
sbb
shr
repnz
xor
std
imul
ljmp
adc
dec
int3
aad
es
mov
cld
mov
pop
hlt
pop
mov
and
and
rcll
notb
lahf
in
xchg
sahf
test
jp
inc
es
in
xchg
cs
adc
adc
and
fisttpl
fsubl
mov
and
cmp
xchg
sti
aas
jb
adc
adc
stc
test
xlat
dec
pop
push
push
mov
mov
xchg
sub
mov
pop
or
mov
divl
xchg
nop
mov
jle
mov
add
push
clc
add
ljmp
jb
adc
mov
popf
mov
test
xchg
in
jnp
push
incl
or
lret
mov
out
xor
js
insl
push
add
adc
std
fcmove
int3
cmp
and
xchg
push
sub
xchg
pop
out
mov
fcomp
pop
mov
repnz
pop
cmp
sub
jno
int
daa
nop
loopne
mov
movsb
mov
mov
fs
hlt
das
mov
dec
hlt
enter
stos
cmpsl
add
mov
xor
stos
cmpsl
and
pop
xchg
imul
adc
xchg
fiaddl
std
sbb
cmp
test
fwait
das
arpl
lock
mov
pop
mov
xor
xorb
insb
cmp
xchg
pop
test
rolb
mov
add
repz
inc
fdivrl
cmp
pop
cmpsb
call
ljmp
shl
movsb
sbb
pop
or
or
inc
xchg
ret
jp
mov
lret
xchg
orl
xor
mov
imul
pop
sub
stos
lods
mov
test
inc
mov
jecxz
xor
pop
pusha
mov
lock
negb
mov
in
lret
popf
and
pop
push
add
sub
movsb
xchg
aas
ss
xchg
sbb
and
and
stos
inc
jns
cmp
mov
mov
jl
mov
xchg
sbb
rcl
push
mov
push
orb
mov
jne
inc
in
sbb
push
imul
stos
pop
aas
push
daa
inc
lods
jmp
dec
cmp
pop
ret
push
push
push
or
movsl
push
ja
hlt
sub
in
cmp
xor
push
in
add
xchg
dec
adcb
jo
pop
mov
mov
jle
aam
cmpsl
aad
std
out
or
pop
pushf
and
popf
xor
nop
movsb
test
mov
popf
fsubl
jne
fs
cmp
cltd
add
decb
insb
mov
out
sub
aaa
mov
lods
xchg
jnp
repz
mov
ds
pop
xorl
jae
sub
cmp
pushf
fisttps
in
add
sbb
lcall
fs
xchg
nop
shl
test
ds
loope
stos
mov
mov
push
pop
popa
mov
mov
lods
xchg
icebp
ja
add
lret
or
or
push
in
movsl
xor
rcrl
scas
in
cmp
adc
and
scas
xor
pop
test
jge
stos
or
das
les
fs
dec
outsl
adc
fcoml
push
jb
loope
dec
das
or
pop
fdivl
cwtl
stc
aad
mov
pusha
and
push
xor
test
jecxz
push
inc
push
jmp
push
jne
or
sub
int
popa
mov
scas
scas
and
pop
popa
pop
jne
pop
sub
pushf
enter
mov
rcrb
mov
inc
andb
sbb
cmp
adcb
jbe
ljmp
in
xor
ret
movsl
cmc
mov
sub
into
in
cmp
jge
les
out
push
dec
xor
xchg
inc
push
cmp
jp
dec
xchg
lea
dec
arpl
fcoms
dec
ror
jg
mov
movsl
mov
jae
mov
sbb
mov
clc
imul
push
scas
pop
mov
ljmp
push
pop
pop
jbe
pop
lods
std
jl
pop
jg
ss
dec
aam
loopne
xorb
jg
lret
inc
sub
iret
rol
cmp
mov
cli
sbb
pop
pushf
subl
pop
subl
cltd
mov
decl
out
sbb
xor
call
push
popa
mov
sub
xchg
out
mov
cmp
ljmp
into
int
int
mov
ret
xchg
xchg
add
aaa
adc
push
cmc
dec
jo
in
outsb
pop
sub
cmc
adc
dec
mov
mov
decl
pop
movsb
lock
mov
lods
loopne
mov
inc
mov
xor
in
sbb
jne
movsb
cs
test
mov
fsubrl
arpl
rcr
das
ds
inc
mov
and
fs
sbb
in
mov
les
sbb
pop
jp
inc
das
jno
dec
fstps
popf
mov
repz
mov
mov
mov
dec
mov
mov
jl
addr16
cwtl
je
call
mov
add
je
mov
out
nop
loope
aam
push
imul
or
push
mov
adcl
mov
testb
mov
cmp
lretw
mov
out
inc
ja
pop
sbb
jp
out
jmp
lods
inc
inc
out
pcmpeqb
mov
pop
lods
jmp
and
sub
push
push
and
jnp
push
repnz
mov
push
mov
das
lds
loope
jbe
sbb
dec
pusha
mov
fldt
sub
ret
daa
pop
sub
mov
adc
mov
add
lcall
adc
or
movb
push
cmp
test
xlat
xor
or
lea
dec
outsl
fnstcw
mov
push
loope
and
push
sbb
jg
inc
mov
enter
subl
push
pop
xor
push
and
fsubp
test
movsb
mov
out
fwait
test
xor
inc
into
sub
shlb
pop
jnp
aad
daa
or
jae
std
insl
mov
rcr
stos
aad
aas
insl
hlt
gs
pop
sbb
dec
scas
mov
das
push
lcall
add
inc
push
pop
mov
adc
stc
mov
xchg
push
lods
dec
jg
aas
mov
loope
xchg
inc
jg
sbbl
add
in
sbb
mov
or
bound
jb
popf
xor
dec
add
fs
sub
push
andb
movsl
lds
inc
int
or
cltd
cmp
outsb
rolb
inc
out
add
xorl
mov
xor
test
jnp
mov
es
xor
loopne
inc
fisttpll
sub
push
dec
and
xchg
sbb
sbb
mov
aas
jo
sub
jne
or
ret
jnp
xchg
cmp
adc
data16
and
test
lock
cmp
shlb
mov
lds
xor
mov
mov
adc
cmp
cmp
jp
xor
loop
je
cmpsb
mov
sahf
test
insb
sbb
out
xorb
sti
cmp
scas
cmpsl
push
repz
mov
ja
adc
repnz
fmuls
fnstsw
push
sahf
add
in
push
shll
lea
das
test
pop
pusha
mov
add
sbb
scas
pop
call
adc
ret
sahf
cmpsb
in
sbb
push
fldl
repz
ss
arpl
das
out
arpl
aad
jbe
xor
das
dec
icebp
pop
dec
inc
int
xchg
jo
ss
imul
and
push
fbld
scas
addr16
xor
filds
mov
sbb
scas
cwtl
ret
push
pop
popa
push
or
push
lods
leave
fsubr
and
sbb
push
mov
aaa
mov
es
lds
and
or
imul
xchg
push
ljmp
sti
je
dec
fidivrs
xor
dec
mulb
dec
push
jno
ficompl
imul
jp
aaa
out
and
rorl
or
mov
and
push
aaa
push
xlat
cmp
int3
mov
test
inc
xor
cmp
ja
mov
lods
int3
xchg
pop
shll
loope
loop
dec
pop
sarl
je
adc
jmp
cmpsb
mov
push
cmp
fstl
mov
or
mov
imul
cs
add
dec
push
xchg
cmp
aaa
jnp
xor
in
test
pop
mov
jne
cmp
adc
cmp
addr16
pop
push
mov
cmp
dec
xor
test
inc
je
add
mov
jnp
add
sub
rcr
pop
and
inc
dec
sbb
pop
and
dec
xchg
in
loope
hlt
inc
mov
loop
pop
test
cmp
mov
mov
aaa
mov
mov
inc
push
dec
aaa
jne
lret
inc
mov
and
xor
dec
sub
stos
inc
test
jae
imul
cmp
dec
loopne
and
dec
add
outsl
or
lods
sarl
jmp
dec
mov
push
cmpsl
and
and
pop
mov
mov
pop
inc
loope
test
sbb
push
xchg
insb
lock
imul
mov
jno
fwait
xor
pop
and
mov
ja
mov
cld
scas
jne
mov
cmp
add
lahf
fmulp
push
cmp
pop
adc
jo
push
imul
xor
cli
icebp
rcll
xchg
xchg
sub
or
repz
call
xor
push
sti
scas
xchg
add
sbb
fcmovnu
mov
pop
test
inc
push
xor
in
fidivrs
mov
jns
jle
cwtl
fiaddl
mov
les
dec
inc
shll
mov
inc
or
ret
jecxz
or
adc
push
data16
mov
xor
out
iret
push
xchg
dec
pop
lods
sahf
mov
aas
jl
cmp
dec
xlat
in
jecxz
icebp
in
and
sbb
push
fstpl
nop
adc
xchg
sub
mov
shll
ljmp
imul
jns
push
testl
sahf
sbb
mov
dec
add
push
sub
fs
scas
cmp
int
pushf
mov
pusha
inc
push
cmp
stc
fbld
adc
dec
lds
adc
loop
add
loope
xor
add
xchg
adc
lock
push
jl
jmp
dec
in
pop
xor
ja
test
ret
pop
adc
int
adc
sub
lds
push
sti
sub
cmp
xchg
fcompl
and
jns
mov
push
xor
mov
mov
cli
sub
dec
movsb
xchg
mov
dec
lods
xchg
mov
sbb
xor
jae
jle
cmp
es
add
jnp
je
xchg
enter
cmp
popa
loopne
hlt
aad
adc
fsubrl
lds
addl
addr16
cmp
je
aam
jge
cmp
or
jl
adc
fdivrs
xor
adc
dec
inc
and
mov
push
int3
add
test
fs
js
cmp
mov
cmp
dec
add
inc
pop
gs
cmp
push
repz
out
daa
sub
test
out
jae
jmp
sbb
pop
subb
aad
pop
xor
aam
insl
ret
out
movsb
out
mov
lock
xchg
enter
pop
xor
repnz
cmp
clc
sub
fsubrs
and
mov
mov
btrl
rorb
jns
push
xchg
out
das
cmpsl
out
xor
addr16
dec
and
mov
or
inc
ja
mov
rcll
mov
in
jbe
inc
mov
sub
xor
popa
fimull
insl
addl
popa
push
dec
lcall
mov
jp
xor
mov
lea
pop
roll
lea
sub
add
push
or
pushf
dec
dec
js
lcall
movhps
sarb
jns
loop
sti
stc
mov
adc
into
or
js
xor
lods
test
mov
jl
pop
sti
xor
popf
idivb
push
lcall
mov
pusha
les
pop
imul
shrl
dec
movsb
adc
stc
out
dec
dec
push
js
icebp
add
jecxz
lods
mov
and
mov
dec
jecxz
in
pushf
scas
iret
je
push
pop
loope
sbb
mov
adc
mov
mov
fsubl
add
fcmovnb
sbb
lret
and
into
or
sbb
ficoml
addr16
stos
inc
mov
push
pop
sbb
mov
lcall
movsb
loop
lret
mov
lcall
shll
push
popa
int
pop
xor
cmp
jbe
jmp
test
inc
adc
lods
pop
sti
add
cltd
mov
dec
ret
jecxz
cltd
repz
pop
jne
fdivs
insb
xor
xor
mov
sbb
mov
dec
cmp
sahf
into
mov
or
rolb
xor
dec
es
sub
or
push
aas
sbb
pop
mov
add
sbb
cli
aad
pop
lock
cmc
mov
jge
in
mov
popl
cmp
mov
loope
cmpsb
pop
outsb
lods
rcrl
adc
xchg
add
int3
xor
cmp
sbb
jnp
sarl
jbe
push
lahf
inc
jmp
mov
mov
xchg
mov
repnz
cwtl
adc
jb
daa
adc
add
mov
cmp
repnz
test
in
inc
loopne
jg
adc
cmpsb
push
loopne
mov
outsb
repnz
je
sti
ret
shr
inc
loopne
aad
xchg
adc
lea
movsl
stc
adc
inc
xor
imul
xor
xchg
rcrb
mov
sarl
push
insl
jne
insb
incb
inc
dec
out
iret
flds
in
xor
es
pop
jg
mov
dec
lds
lea
sbb
cmp
addb
inc
outsl
and
imul
sub
lret
adc
or
dec
cmp
mov
push
bound
jmp
mov
and
xchg
arpl
in
push
and
dec
jne
daa
fistps
ret
jb
stc
sbb
jge
jbe
subl
aam
and
jge
and
rolb
rolb
xchg
sbb
insl
movsl
dec
inc
out
jne
movsb
or
mov
lock
cmp
inc
stos
loop
dec
sbb
test
mov
pop
xor
popa
cmp
pop
ja
or
lds
cs
sbb
mov
cmp
iret
das
int
fwait
xor
call
sub
std
mov
clc
out
and
clc
out
je
js
repz
movsl
mov
mov
int3
leave
pop
idiv
add
jno
mov
adc
adc
loope
sub
jl
stc
sub
pop
nop
xchg
pusha
push
outsl
pop
xchg
and
hlt
jb
shr
icebp
popa
mov
sub
cmpsb
lcall
jecxz
inc
inc
mov
mov
int
sbb
cmp
hlt
xchg
xchg
pop
sbb
ljmp
dec
mov
and
icebp
pop
jmp
mov
ret
shrl
mov
pop
mov
int
xchg
ret
insb
std
daa
call
pop
call
push
or
jge
and
popa
add
pushf
jo
insl
sub
pusha
insl
push
pushl
jecxz
outsl
dec
mov
pop
cld
add
inc
in
lea
jae
rclb
cmp
lods
outsb
popa
and
mov
rcrb
int
pop
xchg
sbb
jecxz
pusha
test
adc
shlb
movl
xor
test
pop
inc
push
xlat
xchg
xlat
outsl
and
inc
imul
inc
dec
add
in
bound
push
fidivl
cltd
mov
into
dec
mov
push
push
je
mov
mov
sti
rclb
dec
iret
into
mov
sub
jge
cmp
aad
xlat
xchg
negl
push
and
push
push
mov
xor
ret
mov
jmp
fsincos
stc
in
jae
xor
push
arpl
sub
jg
es
dec
shlb
mov
push
and
xor
ljmp
or
leave
stos
push
testl
fisttps
jle
mov
dec
and
mov
ja
lcall
testb
jbe
xchg
pop
mov
adc
rcrb
dec
push
sub
cmpsl
movsb
popa
ds
in
mov
pop
mov
scas
and
les
xor
inc
es
and
add
lret
adc
lcall
dec
inc
bound
orb
fwait
in
fidivrl
or
mov
insb
sbb
test
gs
pop
leave
popa
aas
push
sti
mov
push
pop
jle
inc
icebp
sub
popf
cs
sahf
jae
pop
mulb
sub
add
adc
imul
add
popf
push
push
scas
fiadds
mov
xor
pusha
adc
pop
push
push
leave
fnstsw
cmpsb
and
lods
pop
push
addb
mov
cltd
lods
jl
cmpsl
clc
ljmp
inc
mov
xlat
dec
aad
pop
pop
idivl
jg
loope
cmpb
push
mov
mov
jns
out
mov
mov
ret
stc
shrb
in
cltd
nop
bound
dec
adc
add
or
cwtl
cmp
adc
sbb
rorb
adc
test
cmp
jl
sti
jg
fstpt
cmc
dec
sbb
sub
into
fildl
in
inc
movsb
or
xchg
jmp
pop
repnz
loop
push
sbb
loope
negl
push
pop
sub
iret
lea
jge
pop
bound
mov
mov
jge
xchg
cmp
push
push
aad
add
xor
scas
jbe
mov
adc
pop
jle
or
push
and
fiadds
pop
aaa
mov
stos
imul
sub
cmpsl
and
and
cmc
dec
push
hlt
dec
test
mov
add
enter
jnp
push
mov
cmp
sbb
jle
pop
cmc
fs
stc
add
push
xor
std
shlb
mov
mov
xchg
add
jne
icebp
loopne
pusha
decl
xor
rol
pusha
gs
pop
pop
in
mov
ss
mov
cltd
into
and
sbb
dec
repnz
fcmovbe
add
arpl
mov
mov
inc
movsl
aad
lcall
mov
add
push
sbb
pop
and
mul
jo
out
pushf
lods
sahf
pusha
ds
mov
rclb
in
mov
jp
fisttpll
repz
sbb
add
cmp
fwait
jb
sub
dec
pop
add
fdivrl
inc
mov
pop
sbb
or
xor
adc
xchg
xchg
jl
ret
ljmp
sahf
lds
pop
stos
adc
outsl
in
push
arpl
mov
lock
and
jg
dec
lods
sub
jp
in
cwtl
fimull
inc
push
inc
clc
sub
add
out
pop
lds
imul
inc
ja
call
mov
cmp
push
cmc
ljmp
xchg
push
fbstp
jmp
jne
xlat
aaa
push
aam
lahf
fs
mov
jg
xchg
test
sbb
inc
jnp
pop
outsl
scas
mov
dec
daa
std
mov
add
inc
das
mov
or
ret
jne
xor
pop
mov
adc
dec
negl
fnstcw
mov
rcrl
int3
fsubrl
and
fnstenv
push
lds
xor
shlb
mov
and
sub
dec
out
pop
fstpt
jnp
xchg
enter
scas
push
sub
lods
stos
jns
mov
sbb
cmp
mov
call
mov
add
mov
lds
xchg
pop
iret
aam
xor
jne
adc
clc
rcrl
xor
push
xchg
mov
cmp
jecxz
jae
mov
and
add
pop
mov
dec
ret
cmp
test
cmove
pusha
lods
adc
out
ret
jp
sbb
mov
stos
pop
sub
aad
add
mov
and
sbb
das
fcoml
loop
loop
cmp
xchg
sbb
jo
jo
call
jo
out
popf
sti
ret
jmp
into
xchg
inc
dec
fsubrs
in
mov
push
aas
xchg
dec
lret
mov
sub
std
ja
pop
sub
cmc
push
jae
mov
aam
or
dec
into
push
sub
mov
xor
adc
lahf
xchg
dec
adc
clc
cmpsl
add
clc
mov
jae
mov
xchg
sub
idiv
or
xchg
cmp
pop
dec
loopne
pop
inc
mov
gs
ret
fucompp
sti
dec
xorl
pop
scas
adc
cld
sbb
in
test
pop
adcl
gs
xchg
mov
ja
loopne
nop
bound
icebp
movsb
jns
xchg
inc
pushf
push
jl
loop
mov
lock
xor
int3
fnstsw
push
xor
fistpll
mov
sbb
push
jmp
or
pop
pop
xchg
mov
or
pop
lret
lret
xchg
or
jle
adc
xchg
xchg
push
or
fimull
fistl
addr16
mov
mov
mov
add
xchg
add
imul
stos
and
add
xor
mov
xlat
fcmovbe
xchg
fstpt
mov
or
mov
fists
jecxz
std
test
insl
pop
aad
sub
dec
xor
test
fidivl
ret
daa
push
sti
daa
iret
adc
cmp
shl
clc
jmp
sbb
test
call
je
ljmp
cld
test
jl
mov
mov
mov
and
xchg
pop
mov
or
ljmp
mov
adc
or
jo
xchg
nop
mov
jns
pop
movsl
imul
mov
stos
push
push
aam
ret
popf
shl
cmpsl
ds
call
jae
aaa
add
and
mov
push
addr16
loope
push
popa
adc
pop
jle
fnsave
mov
fildll
and
push
ret
xor
dec
imul
lret
loop
outsl
fcmovne
test
std
fcomp
fdivl
jmp
cmp
push
dec
dec
and
fcomps
je
cmp
mov
adc
rsqrtps
testb
or
xchg
xor
cs
repnz
aaa
xchg
into
cmp
push
roll
xchg
popa
repnz
movsl
repz
cli
shl
sub
or
mov
pop
int
sub
loopne
int
mov
paddusw
mov
xchg
mov
mov
jmp
lcall
idivl
aas
addr16
mov
int3
imul
xchg
pop
sub
out
inc
mov
fsubr
stc
je
ss
scas
stos
iret
mov
js
push
xchg
mov
js
or
rcr
mov
mov
add
inc
add
inc
add
adc
add
add
mov
inc
add
scas
inc
add
add
or
mov
mov
lods
test
and
sti
fiadds
fists
push
or
cmp
mov
sbbb
stos
pusha
mov
mov
jmp
cmp
sbb
in
sbb
lea
fnstenv
sbbl
dec
aaa
cli
dec
dec
xchg
pop
mov
sub
inc
bound
cld
push
call
fidivl
push
and
inc
jle
std
int
stos
lret
xor
andb
inc
pop
in
and
adc
xlat
sti
into
xlat
inc
push
push
lret
mov
add
iret
mov
jbe
lods
out
adc
repz
sahf
jl
stos
test
test
pop
adc
push
sub
and
xchg
cmp
cmp
lret
imul
mov
aaa
pop
enter
mov
aad
jo
fistpll
adc
push
std
sub
ss
sbb
shl
push
pop
pop
jbe
repz
adc
sti
jmp
loopne
ljmp
scas
adc
and
mov
in
xchg
or
jg
jmp
fcoml
fcomps
arpl
inc
filds
cmc
push
mov
aad
xchg
jae
push
adc
sub
push
loope
mov
aas
addr16
arpl
jne
lahf
scas
stos
push
sbb
notl
insl
mov
int3
jmp
in
pushf
idiv
fdivrp
lock
push
aad
xlat
adc
lds
pop
fdivp
rorb
xor
jno
shll
sbb
out
bound
cmp
popf
cmpsl
clc
jno
out
loope
push
add
mov
das
sbbl
jmp
je
inc
imull
cmp
insb
jae
gs
or
sub
sbb
xor
arpl
pushf
sbb
roll
push
inc
clc
sub
addl
inc
dec
mov
lretw
push
xchg
mov
sub
stc
inc
xor
or
lods
mov
mov
fsts
jmp
sub
xor
xor
cld
push
dec
lcall
mov
pop
es
sub
rcrb
fwait
in
adc
flds
dec
xchg
mov
imul
add
push
in
push
in
jo
andb
insb
nop
dec
outsl
fisubs
mov
lds
pop
js
std
mov
int3
nop
mov
aaa
cli
sub
out
pushf
sahf
dec
pop
notb
popf
sbb
sbbb
dec
push
ss
and
sub
xchg
jns
cmc
push
adc
jnp
les
push
sub
pop
sbb
aam
pop
lret
in
enter
sbb
stos
cwtl
movsl
xorl
out
and
mov
jecxz
mov
mov
lds
push
and
daa
cmc
mov
push
into
add
inc
std
imull
cmp
pop
xor
push
mov
stos
cmc
mov
call
pop
cli
pop
sub
push
lahf
enter
mov
and
dec
jnp
push
mov
shrb
out
inc
or
push
mov
sahf
rcll
and
in
scas
pop
pop
popa
jp
repz
xor
or
and
es
jl
sub
or
enter
in
push
loop
addl
stos
push
adc
sub
test
sbb
lcall
stos
push
inc
sbb
adc
dec
and
scas
xor
inc
fdivrl
mov
push
jmp
xor
bound
psllw
lods
ficoml
inc
inc
jle
aam
aam
sbb
lea
out
test
fxch
loop
jge
sti
jns
cltd
clc
aaa
movsl
inc
imul
insl
mov
mov
or
shlb
iret
jp
adc
das
jg
les
jbe
popa
fcmovnbe
add
mov
cmp
mov
loope
mov
pop
les
fldl
ss
pushf
inc
jg
es
lret
mov
xor
adc
sbb
jle
xor
test
adc
mov
callw
dec
push
fcoml
xchg
and
insl
or
imul
push
shl
addr16
mov
jmp
std
push
loope
xchg
into
dec
fs
data16
sarl
in
push
adc
inc
outsl
xor
mov
adc
fildl
sar
jecxz
add
mov
mov
ljmp
mull
jmp
ret
push
ds
pop
fiaddl
dec
icebp
adc
sbb
push
xor
loope
sub
xor
mov
inc
imul
mov
adc
in
inc
dec
and
pushf
xor
aam
dec
out
in
js
les
xor
jne
mov
ret
aam
add
movsl
lahf
and
sbb
cmc
fs
push
mov
sbb
imul
ss
sbb
jmp
enter
into
adc
mov
xchg
adc
bound
or
adc
jnp
pop
cmp
stos
aaa
push
rolb
les
inc
sbb
push
out
insl
pushf
cmc
push
gs
dec
fimuls
inc
pusha
fwait
ss
mov
push
roll
cld
xchg
jmp
out
loopne
aas
fcoms
mov
scas
stc
mov
fcomip
dec
dec
test
into
xchg
mov
int
inc
dec
fimull
sub
lds
in
mov
outsl
bound
mov
data16
lret
jp
daa
mov
xor
and
jo
test
arpl
sbb
repnz
ret
fucomp
ret
dec
sub
cmp
xchg
movsl
enter
lods
pop
mov
pop
or
addr16
jge
push
adc
fisubrs
testb
cltd
sbb
iret
inc
fstl
aas
push
and
gs
lods
lret
mov
lret
mov
pusha
call
sbbl
cli
dec
mov
iret
inc
push
jmp
adc
ret
cmp
test
xor
xor
cs
pop
pop
pop
fnstenv
fsubs
into
xor
dec
icebp
mov
push
adc
insb
or
mov
xorb
push
xor
dec
jb
adc
mov
bound
imul
adc
popa
add
addl
pop
jmp
xlat
cmp
mov
or
sbb
mov
lahf
mov
fwait
jmp
xchg
jle
sbb
adc
add
push
adc
aas
mov
into
imul
mov
ljmp
inc
dec
inc
cld
xor
iret
lods
pop
dec
and
aaa
mov
adc
and
mov
dec
bound
fistpll
sub
jae,pn
adc
fsubr
dec
call
ds
jbe
js
in
mov
jnp
xor
or
insb
add
in
add
pop
jmp
xchg
popw
and
mov
fwait
inc
push
aad
inc
daa
roll
add
pop
iret
push
xor
pop
xchg
nop
adcl
mull
push
and
in
jmp
mov
add
int3
ret
in
imul
test
push
loop
adc
sub
mov
push
ficomps
ljmp
rcrl
lahf
imul
inc
shll
jbe
adc
xorl
sub
cld
leave
xchg
add
daa
into
and
jle
mov
arpl
adc
ds
loope
push
movsl
incb
das
aad
rorl
bound
lds
xor
aam
xchg
fcmove
dec
push
rcr
xchg
sub
jecxz
outsb
out
mov
cmp
divb
adc
adc
dec
sbb
lret
mov
test
subb
fs
test
xlat
xchg
das
bound
cmpb
call
aam
pop
push
sub
shrl
sub
shlb
sbb
sarl
test
cmpsl
adc
adc
sbb
roll
dec
ds
in
and
dec
cmp
cwtl
iret
aad
sub
push
rorl
jmp
fisubs
mov
xor
mov
xchg
sbb
aaa
mov
lock
out
push
loope
xlat
jo
cmp
xchg
hlt
jecxz
shl
mov
pop
lods
push
aas
mov
sti
dec
mov
mov
shrb
xchg
dec
imul
lcall
cmp
mov
mov
sub
into
or
fidivs
mov
pop
addb
js
ljmp
inc
lea
xchg
stos
inc
aam
xchg
dec
jbe
dec
sti
fcomp
std
jg
pop
ds
xor
or
aad
repnz
test
mov
out
dec
cmpsb
lods
neg
mov
andb
mov
stc
mov
scas
sbb
inc
jns
xor
add
and
mov
lea
jmp
leave
jo
jnp
leave
cld
push
aas
pop
xchg
cmpsb
inc
dec
inc
sub
rcl
or
imul
test
xor
dec
sub
mov
cmp
jg
incl
fcmove
aas
or
xchg
rcrl
sbb
icebp
out
and
xor
add
xor
icebp
xor
data16
mov
in
mov
xchg
cmpsl
orb
jo
loope
or
aaa
rorb
sub
pop
insl
push
inc
scas
es
pop
mov
mov
pop
loopne
out
cmp
and
mov
pusha
arpl
inc
mov
mov
sbb
mov
pop
add
xchg
in
lods
ja
prefetchw
mov
repz
mov
rorb
loopne
ret
and
push
test
lods
and
mov
out
add
jle
dec
mov
mov
negb
hlt
jg
ret
dec
insb
mov
popa
arpl
pop
xchg
push
push
mov
lahf
mov
outsb
hlt
pop
lret
mov
sbb
stos
cwtl
xor
sbb
xchg
adc
dec
xchg
jl
rcl
movsb
or
sub
add
jnp
std
sbb
mov
pop
leave
push
into
loop
mov
adc
jae
mov
inc
push
clc
push
ficoms
les
es
movsl
fwait
push
xor
insl
arpl
insb
mov
push
shll
mov
je
inc
pushf
lret
pushf
loopne
dec
cmp
hlt
stos
out
movsl
sub
lahf
xor
cwtl
mov
fcmovnbe
subb
rclb
or
lret
imul
lcall
stos
sbb
stos
scas
mov
rorl
cmp
imul
add
faddp
das
jae
push
or
and
sbb
xchg
push
in
aad
outsb
xchg
je
je
fldenv
mov
mov
lret
pop
push
popa
jle
push
xor
jle
or
sub
and
and
push
sbb
out
pop
dec
hlt
jbe
mov
mov
sbb
mov
dec
les
xor
cmpsl
pop
out
into
jo
adcb
inc
sub
pop
scas
les
mov
fs
test
mov
imul
je
lds
pushf
pop
or
mov
xor
mov
inc
jae
xchg
dec
pushf
push
ret
xor
movsb
sarb
sub
cmc
into
enter
fmuls
out
fsts
sub
test
cli
push
hlt
jae
outsl
inc
dec
inc
pop
ja
clc
push
mov
xorb
jmp
insb
std
jo
cmp
mov
pop
dec
mov
decl
lcall
xor
stc
iret
addr16
cld
push
fwait
repz
js
int3
add
push
or
filds
push
inc
fcmove
int
aaa
orl
sub
add
pop
shrl
loope
dec
lds
fildll
stos
imul
and
fnsave
mov
or
iret
xchg
es
inc
shrb
inc
jne
inc
test
pop
xor
mov
mov
push
scas
fcoml
subl
push
insb
adc
mov
xor
push
rcrl
jp
fld
sarl
mov
jns
in
pop
push
outsb
push
in
iret
xchg
push
mov
pop
xchg
mov
pop
mov
pop
xchg
stos
testl
mov
xchg
test
sub
leave
outsb
fcmovnu
ret
cli
inc
or
and
std
inc
cwtl
mov
jle
jecxz
xchg
dec
addr16
imul
jno
xor
mov
pusha
shl
arpl
iret
lods
jmp
cmc
or
xchg
push
adc
xchg
cmp
cmp
arpl
out
xchg
sbb
push
cmp
push
push
mov
or
test
in
rolb
cmp
jmp
ja
cmp
inc
mov
add
leave
pop
cmp
les
jle
xchg
ljmp
mov
repnz
xlat
test
push
das
enter
dec
mov
pop
jae
out
xor
cltd
pop
in
sbb
or
aam
inc
outsl
pop
rcl
inc
lea
in
popa
std
in
outsb
lock
insb
loop
mov
icebp
leave
pop
adc
scas
xchg
test
xchg
stos
aaa
sbb
pop
mov
dec
push
mov
popa
test
nop
push
adc
adc
xor
rcr
stc
dec
outsb
outsl
dec
daa
pop
mov
popf
lret
ja
dec
add
shr
int
leave
imul
std
sub
or
mov
mov
mov
shll
bnd
mov
lret
mov
ss
insl
dec
cmpsb
push
fcmove
bound
divb
into
and
jb
xchg
and
cwtl
add
loope
jecxz
pop
bound
add
aam
dec
jbe
imul
sub
stos
mov
add
mov
and
inc
loope
mov
add
add
mov
or
or
orb
mov
ds
xchg
ret
das
dec
flds
iret
push
pop
jg
notb
sarl
push
or
sub
xchg
adc
mov
daa
cmp
jae
in
cli
xor
out
ret
hlt
mov
insl
orl
mov
mov
mov
cli
mov
sbb
sbb
xchg
cld
jae
js
inc
rcrb
xor
cmp
inc
loopne
lret
add
jno
mov
add
cmpsb
cmp
push
in
fs
ret
xchg
and
jbe
lret
dec
icebp
aaa
vcvttpd2dqy
shlb
inc
iret
and
xchg
and
pop
outsb
or
or
fistps
loope
fsts
mov
pop
pop
pop
ds
jno
aam
mov
test
mov
xor
bound
mov
sbb
loop
dec
jmp
dec
mov
jbe
add
in
shl
ja,pt
bswap
out
xchg
dec
mov
js
cs
jne
mov
inc
mov
aad
ljmp
push
cmc
mov
shrb
mov
and
popa
push
dec
int3
mov
imul
xor
orl
or
cwtl
shll
adc
loopne
movsb
mov
xchg
in
jl
inc
inc
adc
imul
loopne
jmp
xor
repnz
arpl
ret
mov
add
and
dec
mov
cmpsb
jp
jp
mov
sahf
rcll
or
addb
jno
popl
iret
insl
inc
adc
lcall
inc
add
std
pop
test
pusha
imul
mov
in
loop
int
ljmp
cmpsl
ficomps
mov
sub
xor
dec
enter
loope
aaa
fimull
jecxz
mov
xor
popf
mov
inc
push
cwtl
mov
mov
cli
scas
movsb
ja
add
int
xchg
imul
sbb
pop
add
push
imul
jp
xchg
aad
mov
arpl
insb
jbe
das
cmp
mov
inc
sub
mov
jle
mov
test
lret
xchg
dec
cmp
add
push
push
dec
xchg
lret
push
xchg
sbb
pop
mov
sarl
sbb
jne
inc
push
js
iret
out
xlat
mov
and
fdivl
or
push
and
sti
hlt
je
out
lret
and
in
sub
push
or
fiadds
mov
push
jle
cli
mov
mov
mov
mov
incl
mulb
jp
outsl
xlat
loopne
fldt
mov
lahf
pop
add
pop
fwait
addr16
push
jg
lret
test
jle
mov
push
scas
aas
or
inc
pop
xchg
push
pushf
sti
icebp
fs
fidivl
sbb
cmp
pop
xchg
sub
add
ret
jecxz
xchg
xchg
gs
aas
cmpsl
rorb
mov
and
dec
daa
test
mov
les
stc
ret
inc
and
inc
mov
movsb
adc
push
cld
and
lcall
jmp
stos
fldt
lock
mov
sbb
mov
in
divl
fistpl
inc
mov
mov
in
pop
enter
arpl
lahf
mov
dec
mov
or
adc
ss
repnz
adc
movsl
push
ret
in
and
iret
fs
clc
popf
xor
mov
mov
jae
sbb
outsl
xlat
sub
leave
inc
mov
fbld
push
fdiv
mov
cmp
rclb
jb
ja
inc
out
dec
add
jecxz
mov
adc
int
xlat
mov
sub
fmull
dec
aaa
mov
cld
movsl
je
push
fadd
insb
sbb
repnz
clc
aas
and
xchg
inc
sub
insb
xchg
movsl
pop
dec
test
andb
push
int3
mov
sbb
lcall
std
test
xor
jge
mov
sti
push
push
fwait
mov
pop
sarl
scas
icebp
stc
sub
or
dec
out
add
out
cmp
pop
seto
inc
mov
mov
lahf
inc
stc
inc
lea
dec
pop
mov
pop
fimull
sub
add
dec
mov
std
cmp
shll
rorb
pop
int3
adc
cmp
dec
jg
iret
test
or
sbb
xchg
dec
mull
inc
add
mov
adc
dec
sbb
xchg
out
xchg
js
adc
stos
out
jmp
insb
outsl
movsb
mov
inc
out
lea
repz
and
movsb
xor
aad
pop
pop
out
or
rcrl
inc
xlat
add
lahf
jbe
mov
test
jbe
paddw
and
gs
fmulp
jmp
push
and
sti
xor
sbb
mov
mov
pop
clc
mov
popa
faddp
repz
mov
shl
mov
xorl
sbb
push
fld
popf
icebp
or
imul
addb
fisttpl
push
inc
mulb
ret
mov
mov
fiaddl
in
bound
cmp
in
or
arpl
or
jle
inc
and
push
fwait
pop
inc
and
outsb
xchg
cmp
sahf
mov
ja
add
shl
popa
cmp
and
cmp
jb
pusha
mov
mov
lods
rol
mov
gs
dec
nop
movhps
je
jne
mov
sub
push
mov
jns
movl
or
push
pop
cwtl
push
test
inc
xor
xchg
xor
jle
dec
rcll
pop
es
add
jl
xor
xchg
push
or
frstor
push
sbb
into
mov
jl
dec
lea
scas
mov
mov
movsb
lods
xor
pop
mov
ss
add
inc
mov
xchg
outsb
inc
lret
fdivp
mov
subl
sahf
xchg
pop
push
sarl
and
sti
push
cmp
add
jne
jb
repz
add
out
sub
fstps
sarl
mov
in
popf
xchg
mov
addr16
bound
push
mov
or
lock
push
insb
hlt
mov
daa
inc
loop
push
out
dec
sbb
clc
fisttpl
cmc
xchg
aaa
jns
sub
je
pop
mov
mov
movd
and
mov
test
repz
gs
sub
fadds
pop
mov
loop
push
pusha
cmp
add
test
ds
add
ret
imul
jle
enter
xchg
ret
xchg
xchg
into
pop
push
mov
add
and
in
stos
mov
adc
fildl
test
sbb
push
xor
stos
movsl
xor
or
ds
sub
aam
adc
test
call
jno
shlb
mov
movsb
ja
cmp
subl
or
lods
ja
cwtl
flds
mov
jp
dec
xchg
xchg
adc
addl
jmp
mov
lret
sub
dec
mov
stos
adc
clc
test
insl
mov
call
inc
jbe
adc
push
mulb
into
idivb
dec
jae
sbb
adc
push
call
aaa
cmpsb
xchg
xchg
pop
or
aas
adc
fstpl
test
shlb
xchg
in
cld
and
scas
outsb
sbb
or
or
bound
sbb
pop
lods
negl
sbb
mov
sub
shll
inc
sub
xor
mov
mov
dec
repz
arpl
xor
push
jno
sub
dec
pop
loop
es
lahf
pop
xor
mov
inc
int3
mov
dec
out
adc
pop
data16
jmp
mov
mov
push
sbb
add
lret
mov
repz
in
pop
dec
sub
mov
add
les
or
fists
sbb
hlt
ss
ret
mov
cwtl
jp
pop
push
std
lahf
mov
cmc
enter
and
sbb
mov
les
fcmove
das
int3
clc
pop
aaa
stos
negl
insl
sub
out
pop
sbb
jno
inc
mov
cmpsb
arpl
jbe
cmp
into
int
sub
lea
lea
loopne
fbld
dec
push
and
imul
testb
xorl
movsl
shrb
jae
pop
and
add
out
ret
mov
aas
mov
jnp
mov
inc
ja
aas
pop
mov
adc
rcll
test
std
or
xor
leave
push
adc
mov
sti
js
cmpsl
pop
inc
adc
loopne
cmpsl
sahf
loopne
mov
jbe
cmpsb
ss
cltd
dec
icebp
movsl
pusha
mov
testb
mov
mov
cmp
dec
inc
clc
mov
and
or
lods
mov
cmp
push
out
jo
fsubrs
xchg
cli
adc
js
mov
outsb
xchg
arpl
mov
mov
loope
jns
cmp
pop
mov
int
push
gs
test
outsb
in
or
addl
aas
cs
mov
in
push
push
cmp
sbb
icebp
cmp
jecxz
data16
add
push
cmp
fsubs
ss
jge
cmpsl
int
cmovno
imul
push
or
dec
lods
jp
pushf
das
incl
call
psubw
sub
cwtl
pop
or
xor
xchg
lret
mov
mov
inc
lret
jl
fidivrl
lret
push
push
push
pop
sbb
movsl
roll
shll
pusha
test
in
fincstp
xchg
loopne
xor
insl
inc
shll
push
negl
xchg
test
add
hlt
iret
jne
fadds
xchg
push
mov
and
test
test
icebp
push
pushf
adcl
mov
popa
sbb
les
xor
int3
decl
sbb
iret
add
adc
loopne
lea
sub
xchg
push
lods
in
mov
pop
scas
or
sbb
int3
cmc
filds
xorb
xor
jp
loope
pop
imul
dec
lock
out
cmp
mov
stos
mov
push
filds
inc
push
xor
test
addl
mov
and
mov
bound
js
lret
mov
jge
cmp
mov
push
divl
jp
jg
out
or
in
mov
xor
xchg
mov
aad
or
movsl
mov
arpl
cmp
xor
push
ljmp
sub
ja
or
ljmp
sahf
ret
push
loop
inc
or
repz
stos
js
imul
rorl
test
jmp
sbb
push
xor
decb
push
hlt
pop
test
lcall
sub
adc
xor
or
and
jbe
movsb
xor
aas
adc
push
fistpll
pop
mov
pusha
dec
lea
xchg
push
cmp
pop
dec
add
je
and
push
cld
std
shl
sbb
out
scas
sbb
ds
outsl
inc
dec
push
xchg
bound
jb
jmp
movsb
shll
adc
scas
jno
xchg
jno
mov
iret
xchg
and
and
arpl
fsub
pop
loope
out
xor
sti
dec
test
jb
call
stc
sub
mov
aam
ljmp
insb
push
cmc
jl
imul
xlat
sbb
mov
pop
lock
mov
icebp
adc
xchg
add
push
xchg
aad
leave
sub
insl
xor
nop
dec
call
and
sub
dec
or
notb
adc
mov
pop
out
emms
pop
insl
push
xchg
ret
cmpsl
mov
mov
ljmp
shlb
sbb
in
sti
jo
mov
cmpsb
cmp
stos
pop
rcrl
add
fbstp
mov
and
xor
andl
adc
in
test
cmp
lods
in
ljmp
mov
sbb
lods
sub
divl
push
shl
add
jle
arpl
pop
cmp
and
lea
arpl
sub
mov
into
fnstcw
adc
mov
or
jecxz
scas
out
loopne
or
call
das
push
and
dec
mov
nop
nop
mov
mov
pushf
mov
fcomps
add
inc
int3
mov
fisubrl
shl
cltd
jp
pop
pop
pop
clc
out
rclb
xor
xchg
dec
adc
xchg
jecxz
mov
xlat
aas
push
aad
fnstsw
aad
popf
add
filds
sub
sbb
sti
cltd
test
lahf
out
repz
mov
mov
addb
xor
lea
xor
pop
lcall
popa
out
jnp
gs
in
pop
mov
mov
pop
pop
imul
test
add
leave
cmpsl
out
mov
ficomps
repnz
xchg
daa
adc
pop
push
mov
sahf
mov
int3
lods
sbb
lods
push
les
or
fdiv
fcoml
push
mov
out
jno
mov
pop
mov
pusha
jbe
and
mov
test
iret
pop
push
adc
popa
xor
mov
sub
sub
cmp
fstps
jo
imul
push
imull
jle
roll
or
xchg
mov
fcmovu
jl
cmpsb
subb
ret
push
loopne
xor
add
sub
xchg
xor
adc
pop
dec
fs
icebp
ficomps
test
jnp
ret
sub
dec
shll
loop
adc
test
push
add
jg
call
lock
les
xor
push
scas
pop
pop
inc
loop
jmp
ds
les
adc
outsb
xor
xchg
filds
addr16
push
mov
mov
jg
les
outsl
and
shr
lods
or
lock
xor
fsubp
in
imul
jg
xor
hlt
mov
aaa
cmp
mov
sub
hlt
push
lret
mov
lret
dec
dec
jae
ss
sub
sub
aas
mov
inc
pop
xorl
cmp
inc
imul
add
loopne
out
cwtl
iret
inc
ljmp
aad
add
xor
lahf
dec
pushf
ljmp
mov
sbb
push
mov
ja
push
sbb
lds
add
jl
push
popa
sub
mov
add
out
mov
xchg
enter
pop
xchg
xchg
inc
or
xor
leave
push
add
popf
ret
jg
pusha
xorb
loop
repz
stos
lcall
out
mov
pushl
mov
and
and
adc
movsl
xchg
arpl
enter
cmp
adc
sahf
xor
pop
int3
fsubr
dec
jmp
xchg
pop
jb
punpckhdq
mov
test
fists
pop
jg
stos
aam
fimuls
add
jp
sbb
rclb
iret
lret
mov
pop
mov
and
xchg
jg
mov
nop
sub
stc
ds
fwait
test
lods
scas
mov
jnp
inc
div
mov
cmpsb
pop
pop
dec
cmc
aam
std
mov
imul
mov
int3
bound
jbe
scas
mov
cmpsl
int3
js
jg
lods
add
mov
lods
rcll
sub
int3
xchg
es
ss
cmp
jle
loop
or
insb
and
int3
rol
int
mov
hlt
das
mov
push
pop
adcl
adc
mov
adc
xchg
lds
pop
pop
cmpsl
pop
push
xchg
int3
test
out
neg
mov
push
rcr
mov
pop
jae
dec
pop
xchg
pop
or
pop
or
push
pushl
inc
into
inc
mov
popa
cwtl
aaa
test
fdivs
in
lahf
jb
adc
lret
pop
cwtl
out
je
pop
in
in
fiaddl
jo
fs
jne
mov
cmpsl
cmpsb
jmp
xor
ret
inc
outsl
movsl
inc
rcrb
mov
jb
stos
xor
and
mov
pop
cmp
pusha
mov
dec
cltd
jecxz
sbbb
mov
push
sti
inc
cltd
mov
scas
mov
mov
mov
pop
cld
sbb
mov
jecxz
testb
les
and
les
xor
mov
jb
push
xchg
test
inc
mov
repnz
sahf
movsb
addr16
enter
cmp
ljmp
push
pop
in
xor
inc
push
adc
stos
sbb
sti
xchg
es
adc
adc
push
pop
adc
sbb
sbb
adc
pmaxsw
jge
sbb
cmpl
push
sbb
out
cltd
and
and
add
fadds
addr16
enter
sbb
popa
push
scas
mov
mov
insb
lcall
jo
fmul
inc
addr16
or
inc
jns
jle
mov
jns
and
pop
and
cmp
cltd
shrb
inc
popa
push
jne
call
and
in
xchg
sysret
cwtl
pop
insl
in
sbb
mov
mov
dec
imul
shl
inc
js
sub
shl
mov
dec
xchg
push
rcrl
mov
fimull
ds
xchg
enter
mov
test
addl
xorl
sbb
movsb
xchg
into
xor
pop
lods
push
sub
leave
mov
flds
xchg
fcom
sarb
push
jge
sbb
daa
sbb
mov
daa
and
pusha
sbb
adc
adc
data16
adc
push
dec
outsb
push
test
repz
jp
pop
pop
and
dec
decb
dec
cmp
or
decb
mov
xor
or
inc
or
mov
pusha
jns
and
add
pop
ficomps
insl
gs
and
mov
repnz
int
mul
popa
fadds
test
das
pop
and
stos
xlat
inc
insl
in
or
pop
cmpsl
aam
xchg
decl
or
mov
push
mov
mov
and
movsl
test
ret
mov
pop
popa
add
xor
jne
outsl
out
pusha
pop
xor
or
fs
xor
shrb
mov
pop
adc
dec
dec
mov
add
and
pop
jl
mov
sarb
xor
fildll
outsb
xchg
pop
dec
dec
pop
jle
sti
ret
das
dec
ja
clc
lds
jle
push
xchg
aas
mov
pusha
in
shll
shlb
xlat
repnz
lcall
out
fistpll
lods
std
es
push
or
cmp
je
inc
sbb
stos
rol
cmc
xchg
das
add
jo
push
pop
fmul
lods
inc
inc
aaa
sarl
xor
xchg
stos
pop
lcall
cmpsb
jo
lock
sub
dec
mov
lds
xchg
or
das
add
dec
sub
sub
fwait
mov
das
loopne
ds
cmpsb
mov
mov
dec
fdivs
mov
scas
xchg
lret
pop
arpl
jmp
push
enter
push
out
xchg
scas
mov
cmc
and
jg
cmpl
fwait
jp
xchg
inc
jmp
pusha
or
daa
and
int3
addl
lcall
mov
xor
jge
add
add
add
and
ret
or
lret
adc
push
in
add
fadd
mov
out
and
js
add
in
data16
cmp
rorl
or
ja
push
insl
bound
add
popf
mov
inc
sbb
push
xchg
les
mov
bound
mov
xor
lds
cltd
cs
add
mov
xor
xor
out
andb
test
cwtl
stos
lret
mov
xchg
fisubl
push
out
adc
jne
lods
xor
pushf
test
aaa
mov
jb
adc
mov
movsb
xchg
nop
jo
mov
fcomps
mov
jmp
push
xchg
cmc
push
sbb
dec
mov
imul
notb
aaa
cmp
stos
jb
xchg
adcl
mov
mov
push
jnp
push
push
mov
sahf
mov
sbb
cmp
sbb
lock
add
push
xor
inc
sti
add
sub
pop
insl
adc
mov
inc
xor
lahf
pop
xor
in
pop
mov
push
xor
ljmp
lcall
outsl
pop
sub
fadds
lds
jp
mov
lret
lret
dec
sti
push
add
movsb
test
fisubrs
xchg
and
lea
stos
pop
test
or
pop
sbb
adc
ss
je
cmpsb
test
loope
icebp
inc
ljmp
fcmovbe
aas
repnz
jno
sub
jl
mov
ffree
sbb
mov
insl
push
sbb
in
cmc
mov
mov
leave
push
cmpsb
aam
cmp
dec
jo
push
cld
mov
fists
rol
mov
cmp
out
cld
dec
cmc
and
jle
iret
sub
mov
shll
push
rcpps
jp
mov
imul
aas
push
out
inc
icebp
mov
adc
daa
add
pop
xor
xor
popa
shrb
enter
mov
dec
test
and
in
out
xchg
sbb
cmp
dec
pushf
dec
cli
mov
xchg
pop
int
rcrl
lret
jecxz
outsb
sbb
cmp
inc
xlat
subb
ja
xchg
adc
or
leave
dec
sbb
xchg
push
jb
mov
test
inc
inc
insl
sti
add
ret
test
pop
imul
int
in
stc
mov
mov
mov
fstps
pop
dec
mov
sbb
sbb
mov
inc
in
jge
push
data16
pop
xchg
inc
inc
pop
mov
inc
xor
lds
sbb
pop
cmp
inc
lcall
filds
xchg
ret
cli
cli
fxch
sbb
jbe
rclb
xor
sbb
gs
mov
outsb
mov
test
add
xor
mov
mov
cmp
xor
lods
pushf
or
out
outsl
sub
push
scas
call
jne
push
notl
outsl
loope
xchg
push
add
sti
int
bound
mov
xor
inc
js
add
mov
test
fwait
sbb
inc
gs
leave
out
daa
mov
mov
mov
push
add
insb
xor
or
aaa
or
or
or
sub
inc
sbb
mov
jbe
shll
sub
mov
pop
ljmp
nop
pop
or
dec
cmp
cmc
cmp
jne
call
xor
bound
inc
lret
test
mov
sbb
mov
dec
out
lods
ds
nop
push
fcoms
pusha
xchg
fiaddl
jnp
add
lock
or
mov
adc
stc
lods
repnz
pushl
inc
imul
fimull
and
lock
jns
push
repz
aaa
cmp
mov
in
push
inc
add
sbb
rcrl
cmp
notb
sbb
cs
into
fldt
stc
xchg
push
repnz
cmc
sub
cltd
push
frstor
test
mov
divb
jmp
mov
lock
mov
fmull
mov
iret
out
inc
inc
popf
or
add
mov
daa
jbe
fidivl
out
pop
psubw
stos
inc
xchg
jne
in
sub
and
mov
test
pushf
lods
sbb
and
mov
xor
mov
outsb
inc
outsl
xor
sub
clc
xchg
les
pop
jl
cwtl
sub
bound
ja
frstor
jle
fisttpl
into
daa
jne
ficoml
aam
pop
in
orb
mov
rcll
cmp
ds
mov
sbbb
cmc
pop
pushf
pop
into
addr16
xor
sub
sub
add
cmp
mov
xlat
push
insb
fcomps
inc
lahf
enter
std
cmp
jb
loope
jb
push
fisubl
pop
xchg
sub
fcoms
cltd
dec
insl
addl
push
aas
gs
and
fsubr
lcall
pop
jecxz
dec
popa
aad
sbb
xchg
xor
fcomps
mov
mov
ss
jg
mov
fstps
sbb
iret
sbb
mov
in
cmpb
sbb
clc
sbb
mov
xchg
xor
popf
pop
call
and
lods
loop
test
popf
fildl
cltd
movsb
notb
in
aam
int3
pop
hlt
and
xor
cmp
out
aam
insl
andb
push
or
test
adc
jbe
inc
xlat
xor
orl
add
notb
dec
inc
jmp
lahf
push
outsb
mov
test
ja
rclb
mov
fsts
aam
test
jae
loop
inc
pushf
je
mov
gs
clc
pop
jbe
xrelease
leave
mov
pop
lds
sbb
insl
mov
out
mov
out
cs
pop
mov
dec
and
cmp
cld
push
sar
mov
push
lret
in
adc
sbb
pop
adc
xchg
inc
stos
pusha
xchg
subb
in
leave
xchg
add
jecxz
sbb
adc
xor
pop
pop
js
gs
push
adc
imul
and
or
rcrl
add
in
fcmovnb
jno
mov
cmp
repnz
pop
cmpsb
push
xchg
xor
xor
xor
inc
cmp
mov
imul
mov
mov
sub
add
sub
xlat
sbb
int3
into
push
fcompl
mov
cmp
sub
jno
stos
ss
jno
enter
pop
push
mov
jns
pop
cli
adc
pushf
jb
mov
stos
push
or
mov
push
fiaddl
mov
pop
pop
nop
sbb
mov
mov
adc
into
mov
jle
jo
ror
sti
sbbl
test
add
dec
stos
cmp
inc
mov
and
cmpsb
roll
js
stos
sar
jmp
cmpsl
jns
and
lea
lahf
inc
test
push
repnz
mov
cmpsb
cmpsb
adc
jl
pop
jae
pop
adc
mov
pushf
into
sub
clc
sub
imul
movsl
mov
lcall
and
xlat
int
jmp
pop
mov
stc
incl
enter
data16
rclb
sub
sti
outsl
xorl
repnz
and
test
pop
mov
cli
push
add
xorb
pop
adc
pop
stc
mov
add
or
jmp
xor
rcr
cmp
xchg
test
cmp
jl
mov
mov
sbb
jns
test
ret
in
jns
iret
popf
fiaddl
xchg
divb
xlat
popf
repz
mov
pusha
icebp
bound
mov
adc
xor
cwtl
nop
ja
in
push
adc
mov
pop
cmp
ror
pusha
cmp
adc
lea
in
xchg
sbb
mov
fst
jns
sub
pop
fsts
ror
jb
cmp
xchg
insb
ret
jae
mov
sub
icebp
push
and
out
xchg
aaa
xchg
sbb
xchg
push
call
in
cmc
hlt
sub
inc
ret
ret
dec
fists
mov
pop
sub
mov
jbe
jno
push
and
inc
mov
imul
push
jecxz
fs
mov
into
nop
or
push
jo
add
nop
pop
and
cmp
pop
mov
push
push
cld
enter
jge
jbe
pop
sub
and
mov
xor
pusha
jo
xchg
jge
cld
rclb
mov
pusha
je
ret
mov
mov
cltd
push
mov
lods
adc
sahf
rcll
cmpsl
int3
hlt
pop
arpl
pop
nop
and
push
pusha
stos
mov
scas
cmpsb
cltd
inc
adc
xchg
test
jle
scas
mulb
adc
mov
mov
or
jae
jne
sbb
inc
add
xor
repz
ret
sub
mov
fstl
aas
push
dec
roll
cmpsb
jo
adc
sub
adc
inc
push
insl
cmc
out
jecxz
rorl
cmp
inc
or
hlt
jge
sbb
push
dec
push
loopne
fsubr
xchg
mov
lret
cltd
cmp
fwait
daa
aaa
xchg
and
sbb
enter
fwait
aaa
fstps
mov
mov
jle
jmp
mull
imul
jg
jle
lahf
fnstsw
fisubrs
xchg
test
mov
fidivrs
pop
inc
mov
mov
dec
pop
sub
push
les
inc
pop
push
adc
lret
das
rorb
mov
test
inc
popf
or
enter
mov
or
iret
fcomip
mov
mov
ret
mov
hlt
mov
cli
out
sub
imul
stos
shll
or
xor
in
test
popf
mov
and
out
or
aas
sbb
add
aad
fwait
scas
mov
fiadds
lret
nop
adc
adc
xor
enter
pop
insl
movsl
jg
or
cmp
or
popf
and
jnp
push
nop
aad
lret
xchg
jo
xbegin
adc
repnz
lods
cwtl
repz
fs
enter
out
mov
leave
push
lret
or
mov
sub
shl
sbb
std
addr16
pop
dec
xor
mov
dec
ja
lods
inc
inc
fstpl
adc
adc
hlt
cmp
dec
pop
jp
popa
test
inc
jp
fucomp
dec
ret
sub
das
xchg
lods
jo
pavgb
dec
dec
pop
inc
jge
shlb
adc
sar
pop
loope
cmp
pop
xchg
cmp
xchg
mov
add
cmp
or
mov
adc
jle
inc
es
push
mov
add
arpl
andb
push
rclb
insl
adc
mov
mov
scas
insl
mov
add
jl
pushf
mov
sahf
push
mov
cli
and
cli
mov
xchg
dec
cmpsb
sbb
mov
push
and
icebp
pop
lock
scas
pop
or
fcmovbe
dec
xor
repnz
mov
mov
cli
cwtl
fldenv
cmp
cltd
int3
cmc
or
mov
aaa
pop
mov
lock
loop
mov
insb
pop
sarb
adc
xchg
mov
xlat
lcall
push
push
jno
shll
mov
cltd
and
cmp
das
clc
mov
fisttpl
in
imul
inc
mov
in
inc
fsubrs
and
loopne
sub
fdivrl
adc
les
mov
inc
ss
sbb
fiaddl
add
jle
cmpsl
jb
rclb
cmp
enter
std
cld
out
imul
or
xchg
das
cmp
cmpsl
aas
xchg
lea
jne
lcall
daa
xchg
sarb
into
cmpsl
mov
mov
outsl
loope
in
ret
int3
pop
mov
cli
movsl
pop
sub
pop
mov
adc
push
sub
in
das
divb
int
cmp
mov
push
aas
out
icebp
call
push
adc
pushf
bnd
popa
iret
repnz
imul
push
pop
push
outsb
pop
push
push
daa
xchg
lahf
inc
cmpb
sbb
jmp
xor
insb
lret
std
dec
sbb
jmp
popa
or
jecxz
mov
insb
out
adc
call
arpl
push
lods
jl
jmp
adc
or
xlat
clc
scas
movsb
lds
sahf
enter
lock
loope
jo
out
mov
inc
ret
mov
testl
sbb
push
mov
xchg
pop
add
iret
aas
lods
test
sub
push
outsl
inc
subb
push
in
les
sbb
cltd
xor
or
insb
push
insb
mov
ret
sbb
imul
cmp
mov
pop
call
mov
pop
mov
xchg
mov
fistpll
push
movlps
jns
cmp
adc
lret
push
ror
iret
dec
push
imul
in
xchg
in
dec
mov
mov
dec
sti
lahf
pop
push
mov
lds
in
rcl
ret
mov
xchg
sub
je
push
popf
jle
neg
or
cmpsl
cld
imul
hlt
xorl
daa
pop
jb
lock
in
test
in
xchg
inc
popf
es
jno
inc
popf
and
mov
popa
xchg
mov
inc
inc
pop
je
aaa
popa
push
mov
jbe
dec
or
or
arpl
mov
cld
aas
mov
imul
mov
pop
push
movsb
cltd
das
dec
mov
xchg
mov
jnp
or
mov
pop
push
mov
leave
gs
out
or
mov
inc
pslld
ljmp
sahf
sub
jbe
int3
xor
call
out
and
in
xchg
lea
test
push
cmpsl
jo
adc
insl
inc
jne
fisubl
in
data16
bound
push
mov
addr16
sub
filds
push
cmpl
outsl
xor
fs
sti
lea
mov
cmp
push
jb
stos
or
mov
sbb
fisubrl
fimuls
push
inc
jno
int3
xor
push
test
jae
pop
mov
mov
fidivrs
repz
imul
cltd
mov
pop
inc
imul
inc
mov
lods
iret
loope
mov
inc
mov
jnp
pop
in
fimuls
mov
lods
dec
push
adc
xor
hlt
bound
std
sarb
orl
xchg
cmp
push
bnd
mov
rcr
adc
popa
movsl
xchg
push
jg
sbb
sub
out
sbb
mov
xchg
mov
rol
or
sub
inc
fcompl
add
les
shll
push
add
rclb
and
inc
push
jmp
ja
icebp
out
pop
and
div
shll
inc
jne
mov
ret
rcl
cmpsl
dec
testl
jp
and
xchg
test
pop
push
and
lret
xchg
push
inc
and
jae
push
xchg
mov
lret
pushf
jae
xchg
mov
fstl
mov
inc
and
mov
loop
jae
ficompl
mov
push
lea
jp
add
cmpsb
test
inc
mov
fwait
ret
test
sub
iret
ljmp
lahf
push
xchg
loopne
sub
dec
lds
orb
and
testb
push
outsb
dec
ljmp
iret
inc
sbb
les
pushl
mov
adc
aaa
dec
jmp
adc
xlat
push
or
pusha
sub
inc
imul
push
call
adc
lods
daa
push
jmp
xchg
inc
cmpsb
pop
js
mov
fimull
xor
mov
cwtl
adcl
jge
fisubs
lods
enter
mov
inc
add
cmp
cwtl
mov
js
call
outsl
insl
cmpsb
pop
shlb
in
push
dec
gs
rcrl
adc
icebp
ss
xor
jmp
fcomps
jmp
push
adc
pop
scas
das
inc
insb
lods
dec
lods
xchg
jecxz
inc
sbb
dec
push
mov
test
fisubl
movsb
decb
fcomps
mov
test
sbb
hlt
cmp
mul
je
pop
xor
or
mov
ret
adc
xor
fdivrl
mov
andl
pop
inc
test
js
or
repnz
adc
mov
dec
push
jns
movsb
scas
sti
aaa
popf
notb
jno
test
in
push
ret
rolb
sub
loope
sub
psrlw
push
xchg
sbb
push
fstpt
mov
sbbl
shrl
nop
add
test
pop
adc
xorb
xor
sbb
pop
mov
inc
and
jo
xchg
hlt
or
bound
push
faddp
cmpl
in
in
repz
rclb
push
mov
pushf
testl
dec
lcall
jnp
jp
adc
mov
jmp
outsb
mov
mov
and
or
adc
push
ds
into
add
movsl
sbb
add
bound
pop
inc
pop
or
mov
lods
call
push
and
and
fadds
sbb
xchg
mov
je
jle
or
fwait
das
push
cld
andl
cs
movsb
mov
or
xchg
dec
ljmp
roll
lahf
test
mov
fstpt
sti
test
cmp
int3
dec
or
leave
fildll
lret
inc
pop
cmp
aas
pop
adc
inc
sub
dec
rcll
mov
jge
out
lods
jecxz
std
call
jne
inc
jp
std
nop
or
adc
rdmsr
mov
xchg
jb
sbb
xchg
pop
jl
jmp
dec
stos
mov
mov
xchg
pop
or
int3
in
sub
movsl
dec
popa
sbb
inc
les
cwtd
mov
int3
dec
in
adc
iret
adc
inc
lock
and
mov
xor
xchg
out
stc
pop
adc
cltd
lea
loop
aam
or
imul
popf
dec
sti
xchg
push
ficomps
stos
ds
mov
out
shll
imull
xor
insb
and
inc
lock
fisttps
pop
cmc
mov
rolb
aam
xchg
jns
iret
mov
add
filds
stos
ljmp
mov
or
adcb
gs
pop
or
repz
call
ds
sub
lea
test
inc
mov
adcl
pop
mov
repnz
xchg
outsl
int
movsb
ljmp
xchg
push
push
cmp
xor
dec
sbb
or
fprem
ret
pop
fsubs
repz
fs
loop
test
stc
arpl
rcrl
rcll
js
out
sub
movsb
call
pop
mov
add
xchg
hlt
aad
lcall
test
jl
sbb
orl
test
in
jg
orb
sti
subl
adc
pop
or
inc
notl
jns
pop
mov
jnp
hlt
loop
add
inc
sbb
mov
mov
fs
cmp
sbb
movsb
mov
xchg
dec
and
test
clc
loopne
push
fs
xor
aam
in
mov
cs
xor
cmpsb
lea
sbb
dec
inc
inc
fisttpl
pop
arpl
xchg
mov
dec
xchg
ret
lock
sub
push
push
int
lock
xchg
ljmp
arpl
insl
mov
stos
jnp
dec
mov
cmp
xchg
and
fdivs
js
adc
adc
or
andl
psadbw
aam
xor
adc
jl
lods
push
ds
sub
pop
inc
loopne
dec
imul
setle
cld
pop
jae
push
outsb
pop
mov
out
xchg
test
push
jne
and
and
sub
cwtl
cmp
dec
repnz
jns
push
inc
movsl
jo
add
outsb
add
scas
dec
xchg
out
hlt
pop
xchg
outsl
jl
jae
in
xlat
pop
cs
loopne
ret
add
popf
clc
aaa
popf
bound
pusha
pop
push
xor
xchg
jg
mov
sub
mov
pop
jno
lahf
sub
push
jo
ffreep
out
cli
push
mov
js
jae
hlt
inc
add
shll
loope
scas
or
mov
cmp
stc
sbb
add
mov
mulb
inc
movsb
mov
rol
into
in
mov
pop
sub
sbb
adc
lcall
sbb
pop
cmpsl
leave
mov
xchg
inc
mov
enter
sub
sbb
add
jg
push
push
and
inc
sarb
in
sub
cmp
push
inc
cmpb
or
nop
mov
xchg
add
sub
mov
sarl
out
rol
xchg
aaa
and
cmp
sub
xchg
mov
jp
sbb
inc
stos
push
addl
decl
push
test
dec
and
jnp,pt
lahf
mov
sahf
inc
xchg
sub
jg
xchg
pop
cmp
inc
add
or
jmp
stc
xor
push
out
sbb
cmpsb
jbe
pop
test
mov
inc
data16
pop
fwait
das
mov
rclb
cli
xchg
push
fcomps
mov
xchg
mov
shlb
xchg
jbe
dec
cmp
test
jno
cmc
ja
dec
cmp
sbb
clc
clc
sbb
std
je
addb
jl
loopne
xchg
adc
inc
cs
lea
leave
shr
xor
mov
inc
mov
aaa
jle
loope
movsl
sub
ljmp
xor
dec
jp
xor
dec
sbb
adc
inc
lock
subb
add
mov
scas
mov
sbb
out
into
in
rorl
sub
and
cld
sbb
sbb
das
ret
addr16
movsl
add
xchg
outsb
mov
mov
add
lret
lock
dec
and
ja
jnp
add
fdivrl
imul
in
push
cmp
inc
loopne
shlb
lds
and
into
orl
lcall
jne
sbb
push
repnz
push
or
push
adc
or
cmpsb
cmp
loope
jns
pop
testl
xchg
sarl
fimull
divb
leave
add
ja
outsb
ss
mov
lahf
filds
iret
scas
xchg
icebp
popa
inc
dec
fs
add
lahf
and
xchg
je
adc
outsb
aas
adcb
inc
lock
sbb
mov
mov
jp
mov
dec
jmp
adc
pop
cmovo
dec
insl
push
out
cmp
fldl2e
popa
mov
sbb
push
or
jecxz
addr16
add
fcom
mov
mov
mov
xchg
and
push
dec
fcmovb
movsb
mov
outsl
and
sbb
test
xchg
inc
dec
pop
fst
adc
ljmp
cs
iret
xchg
xlat
mov
dec
leave
jg
mov
shlb
mov
xchg
xchg
jg
andb
aas
push
movsb
or
hlt
mov
jo
fcoms
test
enter
stos
jle
jne
mov
pop
inc
pop
push
decl
or
shll
jbe
adc
sub
and
inc
int
fdivrs
outsl
dec
js
stos
jb
xchg
pop
mov
or
ja
nop
dec
pop
jge
jecxz
mov
in
lret
or
jl
sbb
insb
adc
sub
data16
std
lods
leave
lock
arpl
insl
fsubs
xchg
addr16
ficompl
mov
pop
cmp
in
jecxz
mov
and
jge
mov
mov
ret
push
lcall
loope
fsubrl
mov
ljmp
sub
sbb
sbb
icebp
in
test
push
mov
jnp
jbe
lods
stc
lock
repnz
pusha
inc
js
arpl
pop
into
ret
test
test
leave
cmpsb
cwtl
sbb
xchg
fidivl
pop
int3
jmp
in
cli
inc
cmp
adc
jle
iret
inc
xchg
ret
jmp
out
sbb
fistl
sbb
loop
push
es
push
mov
lock
fldcw
and
sarl
jmp
cmp
push
std
out
or
movsl
clc
push
pop
push
andb
push
pop
sbb
or
iret
and
imul
hlt
push
bound
sbb
jg
lods
loop
fcomps
fadd
out
pop
insl
xchg
xchg
leave
leave
popf
pushf
and
fimuls
fisttps
jle
mov
and
jne
mov
jb
aas
jle
xchg
stc
movsl
lods
dec
xchg
jge
ret
aam
arpl
inc
aam
jne
xchg
sub
jmp
aaa
jmp
jge
fstpt
mov
gs
pop
test
mov
out
repnz
xchg
js
push
loop
pcmpgtd
jns
cmp
mov
sbbl
xor
xor
outsl
aas
or
lods
mov
fnstenv
out
bound
leave
aaa
cli
les
imul
xchg
inc
cmp
adc
xor
mov
and
addr16
test
pop
mov
adc
lods
pushf
pop
sarb
mov
xor
mov
sub
cmp
cmp
ds
mov
xchg
jns
faddl
int
mov
dec
dec
mov
cmpsb
pop
mov
test
inc
inc
or
in
jb
mov
arpl
leave
cmc
out
lret
in
shl
dec
xor
ljmp
jg
pop
jg
sub
jnp
shlb
push
push
ss
jl
aad
fnstenv
jne
jo
pusha
fcomps
notl
testb
aas
sti
mov
stos
popf
mov
sbb
sub
adc
pop
jbe
push
test
das
int3
std
push
movsl
leave
fs
cmp
push
xchg
push
cmpsb
or
sub
cwtl
movsl
mov
sbb
cmpsb
mov
or
pop
inc
cmp
shrl
imul
jecxz
xchg
xor
xor
adc
fidivrs
addr16
mov
jmp
sub
mov
shrl
fldt
jge
mov
ret
fistps
mov
xor
test
push
ficoms
jns
in
cmp
xchg
pop
jmp
jns
scas
cmp
jl
cmpsl
cli
loope
fwait
push
pop
movsl
mov
push
sub
lds
sub
cld
mov
shlb
data16
nop
jle
fs
out
jmp
gs
inc
mov
insl
ljmpw
and
dec
adc
lds
inc
xchg
mov
push
dec
inc
dec
mov
pushf
cmp
push
add
aas
add
icebp
clc
xchg
push
ljmp
pop
movsb
or
cmp
and
arpl
ds
dec
insb
push
in
mov
in
dec
je
cmp
sbbb
fisubrs
dec
xchg
push
push
adc
je
out
and
dec
aad
push
mov
dec
mov
div
mov
mov
aam
or
inc
inc
cmpsb
dec
adc
xor
mov
pop
filds
divl
iret
stos
cmp
fs
xchg
sub
mov
out
pop
loopne
sub
sbb
fs
xchg
push
imul
mov
xchg
aaa
test
xchg
sti
lods
pop
movsl
xchg
sub
cmp
or
or
lcall
bswap
cmpsb
cmp
aaa
outsb
push
mov
and
pop
inc
inc
jecxz
pushf
andl
mov
movsb
mov
test
pop
mov
fiadds
push
jle
nop
lock
test
xchg
push
push
out
xchg
dec
xchg
push
push
lods
in
in
orb
inc
jne
mov
sbb
in
icebp
dec
push
sbb
adc
scas
inc
sbb
mov
out
dec
jnp
repz
xchg
ret
int3
imul
lods
stc
test
pusha
fimull
fiaddl
mov
lds
stos
clc
repnz
jle
ror
mov
lea
mov
or
in
adc
pusha
sub
mov
fisubl
loope
jl
push
out
pop
cmp
fstpl
enter
cmp
mov
xchg
dec
xorb
push
fdivrl
xor
inc
mov
jbe
push
jno
pop
ja
and
shlb
mov
lret
inc
push
imul
icebp
dec
aam
pusha
or
push
sti
loope
push
mov
adc
pushf
fisttps
dec
xor
pop
outsb
sbb
push
xor
shl
sbb
in
mov
or
js
sub
adcl
enter
loopne
pop
inc
inc
subb
push
test
add
subb
inc
add
rdmsr
dec
lock
mov
popa
mov
push
push
stc
lock
adc
fcoml
popa
scas
adc
adc
inc
dec
aas
pop
sub
test
xor
xchg
fcompl
loope
pop
add
xlat
xchg
mov
into
out
cmc
data16
mov
inc
cmp
dec
and
aad
ljmp
shl
or
pop
mov
mov
outsb
or
rclb
dec
out
fwait
xor
roll
gs
sbb
inc
dec
cwtl
ss
scas
jne
hlt
dec
pop
adc
jmp
imul
push
mov
xchg
jmp
jmp
inc
inc
fisubrs
dec
or
movsl
repnz
ljmp
jmp
xchg
pop
aaa
mov
push
jno
xchg
daa
pop
or
fnstenv
test
dec
lahf
dec
or
jmp
ja
mov
fmull
pop
pop
test
or
push
sbb
in
sbb
ficomps
fiaddl
xor
adc
jle
sub
add
mov
outsb
es
call
ret
shlb
fidivrs
in
xor
dec
add
dec
data16
lret
pushf
sbb
lret
pop
fmuls
iret
fcom
out
out
xchg
test
jne
or
pop
nop
cld
data16
mov
add
rcll
dec
and
sub
add
jp
mov
stc
insb
icebp
fbld
inc
outsb
mov
xor
test
add
fbstp
push
xchg
sbb
scas
cmp
data16
push
leave
aaa
pop
loope
push
cmp
sub
mov
mov
sbb
imul
mov
jp
cltd
xor
ljmp
pop
cmp
int
out
xchg
lea
xchg
enter
hlt
pop
fldt
lea
add
loopne
jp
cmpsb
mov
mov
je
rclb
andl
lods
dec
outsb
ja
pushf
lcall
js
xor
orps
test
insb
imulb
cmpsb
adc
push
fwait
cmp
add
or
leave
fldenv
gs
sub
lods
push
out
dec
fwait
jp
jmp
add
jecxz
aas
push
inc
xor
cmp
test
mov
int3
jmp
lret
pop
pop
mov
dec
fnstcw
cmp
pop
or
mov
pushf
movsb
dec
or
das
int
add
pop
pop
aad
xchg
cmp
and
mov
hlt
push
fcmovnu
lods
sbb
lods
xchg
and
or
or
into
push
imulb
xor
sbb
lret
gs
sbb
aas
js
xchg
adc
scas
loop
out
mov
jp
inc
pop
hlt
add
jno
or
jno
inc
adc
sbb
push
sub
lods
arpl
jge
addr16
jnp
addl
subl
push
dec
stos
aam
pop
mov
std
jg
cmp
popf
dec
inc
mov
inc
inc
stos
sub
mov
sub
jns
xchg
sbb
add
jae
ror
je
xor
and
pop
jns
imul
cld
repnz
cmpsl
add
pop
push
adc
pop
int
fstpt
sbb
movsb
pop
xchg
or
addr16
sub
push
fadds
data16
inc
adc
hlt
bndldx
aaa
lret
ja
add
and
mov
test
pop
movsl
jg
xchg
jnp
dec
mov
adc
mov
xor
js
push
sbb
mov
cmp
mov
daa
fwait
pop
sub
stos
pop
je
pop
jb
in
mov
xor
and
xchg
pop
je
ret
lea
sbb
std
lcall
test
sub
adc
fstl
xchg
insl
shl
mov
mov
iret
jp
pop
xchg
outsl
sbb
xor
rolb
mov
lret
mov
sti
mov
in
addr16
inc
fiaddl
pop
xchg
mov
movsl
daa
mov
lds
mov
popa
adc
cli
adc
les
sahf
aas
lret
out
pop
nopl
dec
jmp
sbb
out
dec
bound
lea
or
hlt
pop
insl
popa
jg
adc
cmp
lret
jge
jl
rclb
mov
mov
ljmp
bound
imul
sahf
mov
push
loopne
out
movsb
int3
stc
xor
push
js
aas
push
cs
adc
test
jle
push
cs
pop
out
jecxz
pop
or
xchg
jnp
add
bound
sub
je
lahf
ror
inc
int
adc
sbb
out
or
in
sbb
insb
dec
stos
mov
ja
cmp
out
push
pushf
and
push
aad
sbb
int
bound
andb
fisubrs
jmp
xlat
xchg
cmpl
lret
pusha
pop
lock
mov
bound
inc
lret
fs
cli
or
sbb
ljmp
or
xchg
inc
pop
or
mov
clc
rcll
add
jo
negl
xor
pop
mov
cmp
dec
jge
lds
movsb
push
cmovbe
dec
mov
dec
dec
dec
and
sub
mov
lret
mov
mov
das
ss
adc
fldenv
popa
and
xchg
negb
mov
ficompl
cltd
cmp
fimull
jp
dec
xchg
addl
psrlw
lock
pusha
sub
dec
sahf
mov
inc
mov
cmp
dec
pusha
in
icebp
and
scas
inc
mov
in
int3
pop
adc
or
mov
sub
mulb
jno
inc
test
or
in
jl
rcrb
test
ss
mov
xlat
incl
loope
mov
neg
call
cmp
outsb
cli
xchg
mov
xor
xlat
mov
adc
cmpl
sbb
push
xor
ret
jecxz
cmpsl
inc
jmp
cltd
aas
or
mov
xor
mov
je
sbb
mov
cmpsb
and
pop
aad
xor
adc
push
clc
arpl
sbb
pop
push
imul
dec
dec
jl
cmc
mov
int3
cli
repz
mov
pop
pop
xchg
adcb
adc
cs
pop
pop
fsubl
and
aad
inc
fidivrl
pushf
scas
aam
les
push
rcrb
fs
rorl
or
orl
cltd
xchg
iret
mov
pop
dec
adc
dec
lock
cmpl
mov
mov
call
cmpl
stc
mov
add
ljmp
scas
sub
aam
pop
arpl
mov
sub
les
add
pop
cmpl
dec
int
shr
in
jns
or
repnz
xchg
cmpsl
xor
or
adc
or
maskmovq
mov
iret
into
in
ds
iret
add
cmp
or
mov
adc
jle
mov
sub
jb
cmpsl
sbb
mov
push
push
rorl
sbb
adc
pop
dec
imul
insb
addr16
in
out
adc
cs
ja
xchg
mov
xchg
sahf
jno
dec
out
and
or
dec
pop
adc
pop
dec
orl
push
mov
or
cwtl
push
cltd
sub
ds
adcl
push
xor
decb
scas
test
cmc
cmpl
in
push
ljmp
sbb
mov
inc
popf
fcmovb
clc
push
jmp
icebp
rclb
cmp
cmp
jmp
fisubrs
rclb
nop
loop
jecxz
in
test
dec
push
pop
rcrl
sbb
push
push
ja
mov
cmp
and
cwtl
inc
arpl
and
imul
out
inc
add
xchg
bound
stos
arpl
inc
pop
sub
movsl
jle
lret
mov
jge
push
icebp
fsubs
sbb
dec
mov
subl
add
mov
cmpsl
and
test
jne
sbb
popf
mov
pop
imul
cmp
addr16
xchg
dec
sub
sbb
push
cmove
imul
adc
jp,pn
test
adc
push
ja
fs
mov
out
mov
es
lock
jmp
out
mov
lods
adc
and
hlt
xor
gs
or
movsb
imul
ja
cmp
imul
pop
adc
int3
aam
pop
mov
imul
clc
movsl
pop
xor
mov
jecxz
mov
les
lock
dec
loop
inc
jnp
leave
mov
out
add
ja
adc
inc
mov
mov
pop
into
xor
adc
jl
out
sub
push
xchg
xchg
sub
sub
adc
fistpl
test
test
sub
add
loopne
out
imul
hlt
pop
rcr
rcrl
adc
cs
pop
out
xchg
add
rorl
pop
shlb
pusha
scas
lock
repz
inc
in
or
lcall
push
fcoms
cmp
cmp
and
sarl
ja
mov
or
aaa
mov
aad
or
mov
dec
popa
and
std
test
sbb
or
movsb
data16
xor
int3
roll
mov
gs
jle
aad
jbe
mov
std
adc
xor
hlt
daa
popa
cmp
lock
jecxz
bts
mov
data16
popa
dec
add
jae
mov
cmp
dec
fsub
push
fs
xchg
nop
inc
xchg
mov
cmpsl
add
inc
xchg
sub
jbe
pop
enter
push
ja
test
aad
mov
push
push
and
dec
je
mov
sbbl
stc
notl
mov
jno
lods
add
sbbb
bound
fs
pop
sbb
int3
mov
repz
push
fidivrs
add
scas
mov
jge
test
dec
lahf
xor
ficoml
popa
push
inc
xor
rorb
jecxz
or
enter
insl
or
dec
aad
ds
ja
xor
sub
mov
outsl
bound
push
jmp
int3
cmp
cmp
mov
dec
dec
lret
clc
adc
repz
push
sti
sub
mov
or
std
xchg
test
cmp
test
adc
std
push
pop
loope
dec
mov
xlat
pop
rcr
out
scas
in
dec
bound
xor
lds
aaa
pop
sbb
sub
push
mov
add
fisubrs
clc
jle
mov
mov
stc
xchg
lock
cwtl
movsb
mov
fmuls
nop
or
adc
mov
outsb
lock
out
dec
mov
sub
push
hlt
or
outsb
pop
add
scas
sbb
call
xor
push
daa
pop
ret
popa
cmpsb
cmp
jg
mov
fldcw
je
xor
jbe
imul
cmc
xor
popa
mov
mov
dec
mov
add
pop
push
and
mov
jmp
sbb
andl
jg
pop
xor
outsb
inc
mov
pop
mov
jp
testb
mov
or
push
stos
insb
xchg
sbb
gs
sbb
js
cmp
mov
stc
je
lcall
and
lods
movsl
and
mov
pop
jg
cld
mov
xor
jmp
fdivs
pop
push
rolb
outsl
lahf
cmp
pop
lea
in
mov
int
sub
rcrl
fldenv
mov
shlb
or
flds
xchg
cwtl
mov
in
cmpsl
push
adc
pop
mov
gs
mov
mov
jge
out
and
cmpsl
sar
out
xchg
cwtl
cmp
lret
lcall
sbb
dec
push
pop
sarb
jb,pn
mov
dec
insb
or
popa
xchg
ds
cmp
aad
mov
ficoms
outsl
add
dec
and
leave
pop
sbb
or
inc
mov
cs
jbe
in
arpl
scas
or
ds
add
mov
push
pushf
pop
push
mov
scas
in
mov
movsb
dec
mov
xchg
jmp
fcmovnu
les
imul
inc
push
and
bound
and
dec
adc
jne
addr16
or
faddl
call
or
push
fndisi(8087
xor
lds
in
popw
mov
dec
fdivrl
add
or
push
adc
pop
cmp
ja
popf
ss
popf
fcoms
push
add
jl
mov
call
insl
subb
pop
icebp
lods
and
mov
push
stc
mov
mov
out
nop
push
notl
pop
movsb
test
sub
cmp
movsb
sub
daa
push
adc
ljmp
stos
mov
mov
sahf
dec
mov
inc
stos
adc
hlt
sub
into
outsl
sub
push
sub
add
pusha
xor
ljmp
pop
bound
and
push
jno
mov
movsl
or
test
scas
pop
enter
fmull
aas
mov
gs
or
ret
leave
iret
adc
test
xor
push
lods
xor
movsb
daa
pop
adc
mov
int3
lods
add
xchg
pop
xchg
gs
and
jmp
nop
dec
adc
in
push
jp
scas
add
pop
sar
cmp
repz
pusha
ds
push
mov
stos
mov
add
into
xor
sbb
in
dec
loopne
nop
mov
jg
xchg
dec
inc
mov
add
outsb
xor
mov
push
inc
pop
sti
xor
out
in
stos
mov
sub
mov
and
add
shr
push
out
stos
stos
cld
lret
shll
adcb
test
and
xchg
out
movsl
xor
pop
sub
add
xor
int
add
dec
das
fwait
mov
ret
mov
repz
sub
movsb
fwait
sahf
or
les
xor
out
add
and
aaa
mov
dec
roll
mov
push
aas
shrl
outsl
xor
call
pushf
in
out
sahf
mov
test
lods
cltd
xor
pop
pusha
jle
cmp
push
mov
lcall
aaa
das
mov
sub
push
pop
mov
dec
aaa
xor
dec
or
daa
cwtl
ljmp
push
fnstcw
addr16
sub
push
mov
sahf
push
inc
shlb
mov
dec
mov
lods
adc
add
xor
shlb
fistpl
out
push
jecxz
int3
dec
lods
test
cld
xor
mov
adc
jp
sub
inc
push
sbb
inc
out
fbld
aad
dec
dec
adc
dec
dec
dec
in
jbe
cmp
push
imul
lcall
xchg
or
scas
pushf
out
ret
mov
mov
mov
xchg
enter
adc
mov
pop
pop
push
mov
sbb
ficomps
test
sarl
push
inc
bnd
out
push
gs
inc
jle
ret
xor
inc
pusha
sbb
pushf
cmc
dec
mov
loope
xor
ret
test
insl
into
repz
inc
daa
add
push
add
fistpl
lods
fcompl
stc
xchg
push
cmp
or
scas
inc
jmp
cmp
pop
lahf
pop
pop
fwait
push
xchg
addr16
ss
cmp
pusha
fs
xor
adc
shr
fmull
cmp
call
inc
sub
mov
jg
mov
testl
stos
inc
push
pop
xchg
lret
push
jo
mov
adc
sar
add
mov
jb
loope
mov
cmpsb
mov
cli
cmp
in
sbb
pop
test
lds
push
icebp
nop
addr16
leave
or
iret
arpl
sub
adc
fwait
hlt
mov
jb
gs
or
mov
pop
sub
fistpll
push
xchg
repnz
fmull
mov
std
sti
hlt
jecxz
push
adc
mov
pusha
loope
insb
stos
jo
jae
fs
lds
andb
rorl
out
adc
outsl
push
fisubs
pop
pop
push
mov
sbb
adc
imul
mov
aad
loope
cli
adc
stc
in
xor
cmc
imul
jne
das
cltd
bnd
adc
sub
call
push
pop
shll
mov
xchg
mov
xor
jge
sbb
pop
shll
pop
xchg
cmpsb
inc
mov
aam
dec
into
mov
or
orb
jg
fmuls
std
xchg
jbe
addl
mov
in
inc
add
lds
or
push
jno
and
lahf
dec
mov
lea
xchg
nop
loop
out
push
inc
mov
xor
push
into
mov
ds
xor
mov
hlt
iret
dec
andl
push
jnp
insb
daa
xor
roll
xor
cmpb
or
ret
cs
push
xchg
and
leave
imul
pop
push
ss
dec
aaa
imul
sub
sbb
ret
clc
and
xchg
mov
add
jmp
adc
or
stc
cmp
xlat
xlat
negb
js
hlt
and
and
xchg
insl
mov
shrl
stos
xchg
lods
outsl
dec
push
imul
xchg
push
pop
imul
sub
inc
sbb
dec
adc
mov
cmp
addr16
mov
lret
or
out
jg
lret
cmpsb
inc
ja
mov
xchg
jg
fs
dec
sbb
xchg
in
xchg
leave
cli
rcrb
xchg
jmp
adc
imul
cmp
fidivrs
jp
loopne
lret
inc
mov
adc
bound
or
mov
or
fst
sarl
inc
xchg
fmull
jge
jmp
jle
mov
or
push
mov
cmp
std
packssdw
out
xlat
insl
adc
test
arpl
dec
mov
int3
inc
and
mov
push
dec
fs
push
sub
xor
and
and
rcrl
repz
add
cmp
repnz
jbe
or
dec
and
out
inc
jecxz
mov
mov
or
sub
push
and
lock
xor
std
mov
fstl
jne
mov
pop
into
mov
and
add
sub
cli
mov
dec
add
dec
in
inc
aad
fs
dec
lock
and
mov
mov
jecxz
pop
mov
dec
adc
test
push
sbb
inc
bound
ret
mov
sub
subb
in
or
mov
js
mov
dec
mov
arpl
andb
mov
jmp
pushl
jnp
outsl
out
mov
push
mov
arpl
jns
outsb
xor
call
add
push
xor
stc
jne
rcrb
andb
mov
test
sbb
movsl
mov
or
jmp
xchg
or
ljmp
sub
in
aaa
imull
push
int
ljmp
xchg
or
cmpsb
xor
lret
push
jecxz
or
aam
add
iret
mov
add
mov
inc
sbb
xor
test
outsl
rol
pop
jecxz
out
shl
ljmp
test
hlt
or
fbld
mov
adc
cmp
xor
rcl
lods
sbb
imul
test
mov
movsb
ret
inc
jae
sbb
jne
jl
push
loopne
ja
jmp
into
loopne
shl
xor
or
or
mov
inc
int
mov
jecxz
rep
rclb
inc
pusha
sub
add
imul
mov
dec
xor
jmp
in
imul
adc
push
inc
scas
pop
inc
push
push
jb
scas
faddp
aad
out
jno
mov
es
xchg
stos
inc
add
ja
test
xor
das
in
sbb
sub
sub
stc
outsl
shll
xor
daa
pushl
lock
push
mov
pop
sahf
add
js
adc
mov
repnz
fdivs
add
jns
daa
fnsave
lret
call
inc
adc
push
pop
jbe
push
mov
ds
xchg
aas
push
cwtl
notb
inc
stc
mov
dec
hlt
out
scas
lahf
ror
add
dec
mov
lods
arpl
mov
adc
mov
push
inc
jo
add
rclb
mov
das
adc
xchg
mov
xor
inc
cmp
adc
popa
xor
xor
iret
subl
mov
xor
sub
xchg
ss
sarb
test
push
aas
jo
cli
adc
pop
lods
mov
push
mov
notb
cwtl
adc
rcl
cltd
inc
inc
push
aam
popf
sbb
cmp
orb
adc
or
stos
mov
mov
fildll
hlt
les
fists
inc
add
cwtl
push
jnp
xor
stos
subb
imull
or
mov
push
jecxz
ret
out
aam
outsb
out
sar
div
push
or
sbb
and
lcall
pop
add
insb
xor
cmp
push
idivl
mov
dec
jmp
stos
pop
gs
out
ret
mov
repz
sbb
lea
sbb
outsl
xor
inc
xor
es
sbb
adc
cli
outsb
xor
sub
pop
fidivs
and
cmp
in
xor
imul
testl
inc
psubq
sub
and
mov
push
out
xchg
lea
or
pop
pop
int
roll
shll
xor
lret
ret
sub
cmpsl
pop
movsb
push
and
sbb
mov
mov
inc
cmp
mov
or
push
arpl
cmc
push
adc
ljmp
pop
fadd
and
aas
push
cwtl
paddd
sub
xchg
lcall
lods
je
mov
repnz
sub
pusha
push
jge
add
add
dec
jp
sub
cmpsb
stos
test
add
cmp
shll
aam
push
inc
xchg
leave
aas
fs
dec
test
imul
dec
in
inc
jo
pop
push
leave
popf
shlb
pop
mov
int
mov
xchg
jb
clc
mov
pop
xchg
lret
hlt
sbb
cmp
mov
jne
sbb
shr
lcall
stos
outsl
and
enter
mov
jns
iret
dec
out
sti
or
test
pusha
or
sub
ja
inc
mov
xchg
xor
cmpsl
add
in
inc
mov
dec
roll
aaa
in
xor
mov
ljmp
call
cmc
xlat
and
xor
xchg
pop
out
jnp
jmp
or
and
faddl
jecxz
es
and
cmpl
cmc
cmp
cmp
mov
cmp
add
sti
push
lret
add
imul
jecxz
addr16
xchg
in
int
push
pop
mov
mov
lcall
cmpsl
mov
mov
pop
mov
les
into
aad
popl
inc
mov
or
stos
dec
push
jnp
psrad
pop
test
in
loop
dec
fld
xorb
add
test
push
lahf
mov
stc
adc
pushf
ljmp
mov
cli
jne
xor
xlat
dec
bound
negb
mov
ficoml
pop
push
mov
pop
cmp
push
jp
inc
and
sbb
lods
cmp
push
mov
imulb
jns
out
pop
scas
lods
pop
jge
jl
mov
clc
adc
jb
add
dec
mov
int3
lods
add
test
dec
sbb
and
orb
out
push
sbbb
jnp
jecxz
cwtl
xchg
mov
mov
mov
or
imul
scas
sub
mov
dec
push
xor
xchg
push
fsubrs
adc
and
sub
arpl
lahf
dec
push
add
and
aaa
pop
ror
mov
push
adc
add
sub
pop
cmpsb
lds
push
bound
jo
ret
jns
enter
mov
pop
leave
cmp
loope
and
loop
gs
adc
or
inc
jecxz
stos
shlb
xchg
xor
fistpll
test
xor
mov
and
push
adc
mov
scas
mov
mov
imul
mov
sbb
arpl
xor
std
lods
mov
jg
cli
dec
inc
mov
out
or
sbb
lods
xorb
lods
lock
cmp
dec
mov
cmpsl
ret
lahf
mov
pop
jge
aam
fstl
fidivrl
addr16
daa
mulb
adc
test
xor
or
shll
in
clc
imul
mov
mov
inc
pop
sbb
out
sbb
pushf
cmp
pop
sub
ja
loope,pt
call
pop
jbe
mov
fsubrs
add
sub
inc
bound
lods
push
jno
and
xlat
gs
and
int3
sbb
sub
cmp
test
push
adc
cs
ficomps
jo
sbb
clc
in
jmp
les
loopne
test
xchg
mov
push
sub
sbb
fwait
aam
movsb
xchg
mov
mov
jne
ja
in
xor
sub
clc
xchg
clc
icebp
mov
sbb
out
pop
scas
fimull
call
push
aas
mov
jl
fistps
jnp
inc
popa
jg
push
ret
fmul
fwait
and
arpl
sub
adc
xor
std
call
std
sub
inc
and
pop
insl
pmaxsw
add
dec
out
or
add
push
adc
cmp
notl
sbb
lret
jb
hlt
es
imul
inc
ss
roll
add
jg
add
int
shll
push
stc
dec
and
push
xchg
or
in
or
in
push
cs
loopne
fldcw
adc
push
and
insb
leave
in
mov
arpl
and
add
mov
js
test
cmp
adc
mov
fdivrs
pop
sbb
dec
orb
push
out
stc
test
mov
jae
adc
lods
fucomp
outsl
pop
pushf
fcom
xchg
pop
mov
scas
lock
popa
fcompl
pop
out
xchg
add
mov
subl
xchg
fwait
leave
add
orb
jne
inc
loope
push
inc
xor
cwtl
shll
pop
ret
xchg
push
mov
jp
dec
pop
add
in
cmp
add
jo
cmc
jno
pop
fdivrp
imul
movsb
pop
out
inc
mov
cmp
mov
nop
les
pop
enter
cltd
mov
cmp
lea
das
dec
jnp
push
rep
xchg
xchg
out
repnz
lds
pop
mov
sub
push
cltd
inc
popa
js
faddp
cmc
popa
icebp
xor
aam
xchg
fwait
aam
push
sbb
bound
je
or
jae
jne,pn
xor
popa
shrl
pushf
xchg
cld
add
xchg
iret
mov
inc
pop
mov
rcr
pop
or
pushf
test
outsb
gs
or
aad
cmp
outsl
cmp
add
fnstenv
xor
jb
lock
mov
fwait
mov
mov
or
xor
or
out
mov
sub
pop
xchg
sub
xchg
inc
pop
mov
push
cli
es
mov
jne
icebp
orl
dec
and
int3
in
sbb
or
jno
push
mov
stc
in
mov
inc
or
sbb
mov
int
push
ljmp
cmp
jle
sahf
mov
out
scas
mov
hlt
add
sbb
not
or
data16
cs
xor
jne
fisubs
pop
cmp
jae
movsb
inc
orl
pushf
mov
es
es
xchg
jle
rolb
xchg
sub
xchg
and
arpl
movsl
push
stc
jmp
movsl
jg
lods
call
and
mov
and
shll
aam
cmp
outsl
movsl
mov
fstpt
or
lock
es
push
je
xor
mov
shrl
push
pop
push
loopne
push
xor
xor
lret
mov
mov
mov
pop
clc
shl
mov
mov
gs
ja
mov
pop
mov
out
dec
push
in
pop
cmp
sbb
or
xor
rclb
int
leave
jle
lods
dec
xchg
lret
add
jecxz
sbb
cmpb
insl
orl
xorb
pusha
push
xor
mov
or
dec
mov
cmp
jnp
scas
or
ja
lret
xchg
orl
push
mov
dec
stos
cmovg
xchg
pop
pop
pop
cmp
test
testb
xchg
sbbb
mov
pop
push
dec
jo
push
gs
sbb
pop
je
xor
aad
out
into
out
fdivrs
lods
subl
jbe
mov
dec
inc
ja
mov
ja
add
dec
ja
push
add
mov
and
je
rolb
lock
incb
and
inc
or
xchg
lret
testl
pop
mov
bound
mov
mov
into
sub
lock
je
cmpsb
rorl
in
daa
or
outsb
jbe
push
ret
aam
jg
xchg
cmc
int
lret
mov
bndldx
mov
icebp
sbb
and
push
rcll
mov
cmp
fmul
cmp
lds
and
icebp
mov
mov
mov
loopne
mov
call
sbb
cmc
cmp
lock
push
cli
repz
insl
int3
mov
out
ret
push
xchg
pop
leave
xchg
mov
mov
out
test
aaa
ret
xchg
scas
mov
ja
dec
les
cmpsl
addr16
pop
push
nop
inc
popf
adc
addb
fldcw
loopne
imul
cmpsl
push
call
clc
jbe
push
dec
jo
xchg
dec
in
sub
cmpsl
dec
push
dec
enter
jno
popw
rorl
into
scas
or
xchg
bnd
mov
jmp
inc
mov
mov
sarl
test
push
sub
jecxz
mov
cltd
dec
jbe
jb
shrb
or
in
inc
mov
inc
cli
mov
gs
es
and
sub
mov
push
loope
cmp
sub
dec
push
mov
mov
push
jnp
sbb
leave
lods
sub
push
xlat
jno
inc
cmp
mov
popa
clc
adc
adc
out
push
cltd
push
add
stos
pop
jmp
pop
divl
xor
push
insl
sub
cmp
scas
mov
aam
jge
pop
sbb
xor
jge
pop
mov
mov
mov
sub
cld
stc
add
or
add
mov
sbb
cmp
xor
jp
adc
xchg
lods
loopne
dec
xor
push
test
outsb
xchg
cld
jne
mov
ss
mov
in
js
mov
movsl
jecxz
cmp
bnd
lcall
mov
mov
adc
stos
mov
in
cmpsl
jns
popa
imul
gs
add
and
jns
popf
sub
int
loopne
push
cmpsl
hlt
sbb
cmp
xor
dec
stos
jbe
inc
mov
push
xor
movsl
pop
cmpsl
and
mov
icebp
mov
rcl
loop
ret
pop
mov
inc
and
je
out
lahf
or
cmp
cmp
mov
negb
jbe
sbb
sbb
pop
ret
cltd
lret
repnz
sub
jns
insl
lahf
sub
or
or
mov
push
sub
xchg
repz
lahf
mov
push
mov
dec
dec
mov
inc
sarl
lret
lods
xor
mov
mov
or
movsb
in
popf
sbb
mov
mov
das
lahf
xchg
jp
jne
inc
jmp
cltd
add
arpl
addr16
sub
cli
xor
loope
mov
and
int3
nop
dec
mov
rol
dec
pop
adc
subl
push
jo
jns
iret
popf
leave
jb
jbe
enter
lret
mov
adc
repnz
xchg
insl
sub
lock
mov
dec
movsb
inc
in
jl
fcoms
cmpsl
xor
hlt
fs
div
or
scas
out
and
mov
mov
mov
sti
lahf
rcrb
pop
xor
mov
ljmp
or
fildl
mov
dec
stc
aas
loop
push
jecxz
cmp
adc
pop
xchg
or
xor
repnz
sbb
xchg
xchg
add
push
mov
ficoml
add
sti
push
dec
push
pop
in
fidivs
stc
ss
mov
mov
out
loope
xor
in
pushf
pop
jl
ret
dec
bound
jmp
sub
jmp
pop
push
mov
notl
or
pop
pop
outsb
sub
fwait
cwtl
mov
xchg
inc
int3
and
fldenv
push
cs
iret
cmpl
jg
enter
xchg
mov
xchg
xor
sbb
lods
imul
sbb
jns
adc
incl
add
jp
fsubs
sub
adc
jb
mov
iret
mov
or
push
iret
pop
add
mov
shlb
divb
daa
jecxz
jb
mov
adc
imul
faddp
mov
mov
push
mov
dec
imull
xchg
scas
icebp
inc
xchg
mov
sbb
dec
push
mov
mov
adc
outsl
stc
je
stos
pop
xor
sub
mov
stos
out
jae
clc
test
pop
adc
cmp
adc
outsb
adc
movsb
inc
xor
pop
pop
inc
push
push
jno
movsb
repnz
push
cmp
call
adc
cmp
shrb
test
pop
mov
xorl
pop
test
xchg
sar
das
cltd
cmp
pusha
int3
icebp
pop
inc
xor
out
mov
push
xchg
test
add
sbb
test
adc
cmp
dec
ja
js
mov
sub
jbe
sbb
call
sub
mov
xchg
mul
repz
shll
lcall
pop
xchg
js
mov
aaa
ds
sbb
adc
inc
negl
sbb
adc
xchg
jnp
outsl
test
or
add
jp
or
test
pop
das
stos
iret
aas
and
xor
repnz
jbe
inc
test
xchg
xchg
adc
stc
and
outsb
out
aas
add
cli
fstl
rcl
mov
movsb
sbb
xchg
xchg
pop
mov
xor
lock
ret
insb
shrl
sahf
aas
jbe
xchg
lret
ret
in
fwait
gs
rorl
decl
push
daa
mov
cmpsb
lret
data16
mov
push
nop
pop
adc
leave
loopne
rcll
pusha
mov
loop
or
cmpsb
inc
push
cld
mov
scas
pop
mov
std
sub
xor
dec
and
mov
jae
cmp
ljmp
dec
push
nop
push
sub
jae
push
roll
mov
cmpsl
out
jg
scas
lcall
jnp
outsb
jg
insl
std
jb
mov
or
and
pop
fwait
cs
adc
out
add
pop
xor
popa
jge
or
add
sbb
dec
push
aad
jl
mov
inc
es
jo
jno
int
aam
mov
sti
cmp
jbe
lea
rolb
push
in
dec
leave
mov
inc
test
popw
ds
sub
or
push
repnz
rcll
pop
bound
test
scas
fcomp
test
ret
hlt
hlt
and
or
fistpll
ljmp
push
shlb
lret
cmp
push
inc
ret
inc
dec
push
cltd
mov
shrw
pushf
mov
lea
dec
test
jo,pn
mov
push
stos
mov
mov
test
ds
pop
fnstenv
mov
stos
add
push
out
ja
in
inc
jns
jp
adc
pop
rcrb
jg
or
test
push
sbb
mov
adc
jae
mov
push
mov
or
iret
mov
loop
pop
or
xchg
lahf
call
or
pop
sbb
and
sbb
cmc
inc
sti
dec
hlt
cli
inc
adc
cltd
pop
dec
mov
enter
mov
iret
outsb
into
jae
inc
jne
jae
arpl
push
dec
ficompl
orb
fstps
mov
cmpsb
aas
out
jns
add
rcr
add
cwtl
out
cmp
fsubl
mov
test
sbb
sub
cwtl
dec
dec
rcrb
mov
mov
stos
stos
ss
cwtl
outsb
sbbl
popf
lcall
scas
sbb
leave
or
pop
ficomps
mov
lods
pop
sub
cwtl
vcomisd
into
push
imul
push
fadds
je
jecxz
pop
fstpt
mov
push
mov
xchg
std
cmpsl
adc
lods
cmp
in
sbb
arpl
pop
push
ljmp
mov
fs
and
dec
div
gs
movsb
cltd
sahf
cwtl
xchg
sbb
lea
addr16
xor
mov
lods
and
cli
ret
adc
stos
dec
int
sti
cmc
fs
js
push
clc
lea
jae
lahf
mov
xchg
mov
rcl
inc
pop
lret
test
or
jnp
ret
sub
loop
and
addb
adc
add
popa
adc
mov
pop
aaa
test
mov
setge
push
adcb
or
ret
shr
dec
filds
sub
add
out
lret
push
cmp
loope
je
and
xor
inc
dec
sub
mov
and
jnp
int
or
iret
push
inc
inc
arpl
mov
mov
dec
xchg
cmpsl
pop
mov
push
popa
xchg
imul
xlat
aad
pop
cltd
imul
xchg
push
dec
repz
insl
dec
push
mov
pushw
pop
mov
mov
cmp
cmpsb
cmp
pusha
mov
testl
adc
mov
xchg
pop
and
dec
in
or
push
std
xchg
xchg
lcall
add
push
in
dec
pop
movsl
inc
mov
push
loopne
xor
jb
and
add
aad
sub
adc
xchg
mov
adc
xor
adc
jmp
movsb
sbb
pop
jle
ret
pop
jb
push
inc
mov
stc
ficomps
shlb
dec
in
and
rcrb
dec
lods
ja
bnd
daa
push
push
fistpl
add
sub
or
jle
push
pop
out
fnsave
pop
push
adc
cmp
jo
xchg
loopne
daa
push
fcomi
xchg
daa
dec
push
pop
sbb
out
lea
and
scas
sub
arpl
jbe
fistl
out
sbb
mov
xchg
mov
add
add
push
mulb
out
push
cmpsl
jno
cltd
sti
sarl
sbb
push
or
mov
iret
inc
pop
arpl
jge
and
pop
movsl
mov
push
pop
out
cmp
lahf
dec
sub
mov
mov
fdivp
rorb
lea
test
lods
iret
jle
mov
push
movsl
xchg
iret
pop
sbb
insl
xor
adc
andb
loop
test
insl
ret
xchg
cltd
and
cmp
cs
adc
mov
mov
mov
pusha
push
inc
mov
insb
sub
fisubrl
int3
pusha
call
icebp
adc
test
cmp
jb
xchg
lods
scas
into
pop
gs
fdivs
mov
repz
stc
pop
dec
pushf
fdivl
insl
add
push
cmp
jo
aaa
out
out
test
pop
in
sti
cwtl
ljmp
rorb
jmp
jl
out
xchg
pop
jne
push
and
das
sar
jecxz
mov
fdivrs
or
push
hlt
inc
cmp
push
inc
adc
jl
enter
xchg
je
fwait
lcall
push
mov
jae
add
push
and
lret
push
pop
and
jmp
popf
cmp
push
sub
test
div
dec
lods
test
cmpsl
aam
mov
jmp
ljmp
jg
shlb
xchg
or
xchg
popa
cmp
aad
outsb
nop
inc
dec
pop
pop
fst
xchg
xlat
and
popa
cmpl
mov
add
inc
xorl
adc
or
out
and
sbb
pop
mov
dec
loop
in
dec
and
cld
lcall
fiaddl
sti
test
sahf
and
test
ret
vsqrtps
cmp
mov
das
lods
xchg
pop
mov
into
mov
dec
inc
cmc
jecxz
popf
mov
mov
sti
push
fbstp
mov
insl
sub
mov
mov
jp
sbb
dec
inc
mov
sbb
pop
pop
mov
stos
mov
pop
push
pop
jmp
orl
test
pop
sbb
jns
cltd
addps
lcall
outsb
pop
jp
sar
sub
out
aad
arpl
dec
lahf
and
aas
sbb
jle
mov
push
xchg
ss
cs
sub
or
out
std
test
movsb
ja
inc
add
cmp
aad
popf
lock
insb
data16
rcl
pop
xlat
in
cwtl
mov
shll
xchg
daa
push
ror
or
push
fldt
imul
fiaddl
cmp
push
bound
int3
push
pop
jns
mov
inc
dec
into
sbb
xchg
sub
imul
push
sbb
popf
jle
adc
daa
sub
pop
dec
clc
cmp
aad
mov
pop
pop
in
or
xchg
dec
es
pop
add
pop
imul
icebp
loope
or
subl
lcall
mov
sub
into
pop
roll
push
cmp
fsubl
inc
pop
addr16
or
cwtl
jnp
push
cwtl
xchg
ret
fimull
decb
gs
push
mov
bound
jecxz
ret
ss
push
adc
xchg
inc
fadds
adc
push
jecxz
ja
adc
loope
filds
pop
and
mov
jl
cmp
idivb
stc
pop
popa
stc
sbbl
push
ret
sub
jp
push
push
xchg
inc
adc
xchg
nop
movsb
loop
and
sbb
iret
and
int
testl
pusha
fwait
mov
out
inc
cmp
int3
clc
enter
ljmp
fsubr
rcrb
cmp
or
leave
xrelease
pop
js
jp
loop
mov
mov
mov
jne
jne
popa
ja
test
inc
dec
dec
sub
cmp
aad
mov
mov
sbb
jp
xchg
in
lods
loop
adc
mov
cmpsb
push
pop
sub
lock
ret
sbb
out
addr16
pop
jae
add
adc
subb
mov
fcoms
mov
sub
push
xor
or
sub
push
int3
leave
pop
jno
xor
pop
and
rclb
stos
jecxz
dec
or
sbb
pop
inc
into
aas
addr16
adc
or
leave
shlw
faddp
mov
cmc
sahf
jmp
xchg
fisubrl
mov
nop
lods
into
mov
mov
enter
mov
push
call
push
lcall
addl
dec
sbb
rclb
mov
out
out
xchg
inc
clc
push
cmp
insb
pusha
adc
in
cmp
mov
mov
xorl
out
cs
jecxz
icebp
fstl
inc
rorl
out
cmc
pop
adc
push
out
jno
cs
sub
cli
pop
dec
popa
inc
shr
mov
adc
ja
and
pushf
iret
dec
xor
or
aam
lret
sbb
nop
pop
das
mov
mov
cmc
lea
jl
jge
add
push
leave
xchg
fisubs
int3
mov
test
dec
and
pop
repz
js
loopne
jne
adc
outsl
insl
in
dec
cmpsb
arpl
arpl
xchg
jne
push
xor
jg
cmp
les
pop
and
dec
and
jg
add
cmp
int
adc
mov
inc
push
sbb
loopne
xchg
jecxz
fdivp
int
lret
call
push
push
mov
inc
xlat
scas
push
inc
fdivr
sub
push
mov
xor
mov
leave
pop
mov
decl
cwtl
jmp
mov
es
sbb
int3
inc
add
xchg
clc
repz
add
inc
mov
xchg
add
jo
fldl
xor
sub
mov
frstor
lret
test
cmp
mov
and
mov
add
cmpsl
pop
cmpsb
inc
dec
call
lret
dec
dec
fimuls
test
xchg
addr16
ss
inc
sbb
rol
sub
addr16
add
or
sub
push
in
cmpsb
repnz
ljmp
repnz
jg
imul
testb
adc
xchg
and
loope
iret
leave
push
and
js
and
frstor
clc
push
dec
pop
mov
xchg
lods
out
pop
ret
cmp
pop
test
inc
ret
inc
insb
dec
cmp
xor
push
add
xchg
push
imul
lea
push
loope
or
fs
push
imul
adc
cwtl
test
mov
cmc
inc
je
enter
rcl
popa
mov
filds
xor
inc
stc
sti
inc
loopne
sub
xlat
mov
test
lret
cmp
add
stos
in
cmp
push
push
xor
adc
fistpll
jg
xchg
sahf
mov
movb
xor
fbstp
popf
out
adc
mov
push
fdivrl
mov
dec
and
adc
data16
imul
cmp
clc
ret
arpl
in
fadd
or
mov
sarl
mov
mov
sub
mov
mov
and
mov
dec
stos
test
imul
negb
ret
imul
shl
jmp
push
addl
jg
es
fildll
out
cld
int3
in
or
sbb
xor
pop
fistpll
fnstcw
sub
dec
xchg
push
inc
inc
sub
ret
or
cltd
mov
mov
push
mov
loopne
cwtl
jb
rolb
mov
mov
and
add
test
loopne
xchg
into
push
mov
mov
mov
xor
dec
lds
loope
daa
popa
xor
fnstcw
lcall
sbb
cmp
cmc
xchg
xchg
imulb
sti
xchg
mov
inc
jbe
inc
in
push
bound
mov
lods
adc
pop
xchg
cmpsl
cltd
push
or
orb
xchg
stos
iret
outsb
stos
iret
scas
xchg
daa
lahf
mov
jno
sbb
or
dec
push
pusha
lret
sbb
notb
stos
pop
inc
dec
sbb
bnd
pop
jne
pop
and
xchg
ficoms
clc
xchg
cs
or
andb
or
iret
xchg
add
lods
lods
xchg
mov
jl
scas
xchg
mov
push
or
ljmp
jp
les
cs
jns
or
xlat
jno
inc
add
fdivs
sbb
lret
sbb
arpl
scas
and
repz
in
mov
and
mov
lahf
pop
sub
es
mov
out
sti
mov
scas
cmp
sbb
xchg
js
mov
outsl
repz
cs
mov
pusha
stos
inc
es
cmc
pcmpeqd
sbb
sbb
andl
push
lcall
push
fstpl
cwtl
push
push
adc
fs
push
jo
cmc
xchg
jne
dec
dec
mov
dec
aad
fcmove
adc
inc
insb
pop
cmc
push
sar
add
pop
aam
dec
pop
adc
jge
in
cmp
je
into
loop
aas
and
or
and
stos
jge
and
lea
mov
sbb
xchg
xor
sbb
insl
dec
ja
movsl
mov
pop
mov
sti
add
or
sti
add
and
jne
inc
dec
add
add
in
xor
jg
jno
xchg
mov
loop
jmp
mov
lahf
cmpsl
lea
pushf
mov
push
mov
push
dec
or
out
sub
mov
push
std
xchg
sbb
or
sub
lods
adcl
pop
dec
push
pop
pop
cltd
adc
mov
sub
adc
cmp
sub
pop
inc
or
dec
aad
sub
test
add
dec
dec
xchg
push
jo
pusha
sbb
ffreep
pop
mov
add
mov
dec
ss
xor
movsl
nop
fsubr
lcall
std
outsl
daa
mov
xchg
inc
or
and
sub
inc
pop
hlt
sub
jns
and
div
insl
mov
pop
sbb
mov
decb
push
dec
xchg
leave
popf
fisubrs
aad
mov
mov
bound
pushw
jo
mov
jo
bound
xor
push
loope
pop
bound
clc
cmpsl
std
aaa
adc
cmpsb
xchg
xchg
inc
cmp
data16
lahf
pop
pop
loop
fstl
adc
ljmp
mov
push
mov
sbb
mov
adc
jae
cmpsb
mov
xor
push
and
xchg
jns
enter
stos
gs
push
cmp
pop
outsb
mov
mov
cmpsl
jl
add
pop
fwait
sub
movsl
fsts
les
stos
jp
mov
inc
lcall
mov
test
negl
loop
pop
imul
mov
or
lret
inc
jns
sahf
lea
add
les
adc
xor
dec
sahf
iret
test
pop
test
fisubrs
or
lea
arpl
cli
stc
bound
addr16
add
dec
test
fistl
jbe
or
fcmovne
insl
cli
jae
jg
cmp
mov
gs
xor
sar
nop
imul
ljmp
pushf
sub
mov
xchg
das
add
das
jge
add
and
das
xor
ss
sub
in
outsb
sub
ja
cmpl
and
lock
hlt
aad
sti
lret
out
mov
aam
inc
dec
scas
sub
mov
xlat
jg
test
je
adc
mov
pop
xor
rcr
xor
adc
mov
pusha
mov
ds
scas
imul
loopne
mov
jl
pop
xorl
mov
xchg
adc
mov
fstps
pop
ret
cmp
adcb
xchg
imul
inc
and
jp
hlt
dec
aaa
cmpsl
mov
xchg
in
mov
fbld
icebp
jge
imul
cli
cmc
ffreep
mov
mov
xchg
dec
xor
xchg
lcall
and
aas
push
out
pop
stc
dec
stc
ja
ret
push
dec
mov
xchg
inc
dec
mov
jl
push
decb
mov
ljmp
mov
inc
mov
jb
insl
dec
dec
pop
xor
mov
iret
inc
xchg
sti
mov
push
jp
mov
inc
xchg
popa
ds
repnz
cmpsb
ss
sub
pusha
jle
loope
xchg
and
sahf
dec
lahf
test
pop
scas
das
test
hlt
or
cmp
adc
pop
repnz
and
pusha
hlt
in
test
and
fwait
lret
insl
add
push
jp
int3
mov
mov
pop
mov
dec
lret
inc
out
lods
mov
imul
outsb
lods
call
jl
in
sub
and
mov
dec
and
js
sub
dec
mov
push
xchg
out
push
sub
pusha
sub
xchg
dec
imul
mov
hlt
idivl
fcmove
lret
adc
xor
push
sub
inc
out
pop
out
or
jns
xchg
jp
cmp
or
rorb
inc
jnp
adc
cmp
stos
fsubrs
in
orl
adc
iret
inc
inc
inc
testl
xchg
or
fildll
dec
xchg
shll
test
arpl
mov
rorb
xchg
inc
fsubl
push
sub
div
mov
inc
in
outsb
scas
push
inc
shrb
pop
es
addr16
push
cli
mov
lods
jnp
adc
test
xor
rolb
int
repz
shll
inc
call
cli
das
mov
lahf
adc
and
clc
imul
fs
int3
aas
mulb
pop
jle
and
pop
pop
out
or
dec
daa
movsb
xchg
lahf
mov
scas
in
das
enter
out
push
mov
jg
push
fisubrl
leave
fisttpll
mov
in
es
insl
dec
sbb
dec
inc
add
xchg
adc
push
lods
repz
and
xchg
imul
movsb
mov
cmp
cmpsl
aam
jne
outsb
adc
nop
ret
sub
loopne
mov
aam
clc
ja
ficoml
gs
dec
pop
outsl
dec
mov
shll
mov
cmp
sbb
mov
inc
mov
push
addr16
jae
pop
stc
push
jecxz
sbbb
mov
push
mov
cs
mov
ja
pop
fadds
xor
push
fiaddl
mov
dec
inc
stos
xchg
lock
sbb
imul
inc
int3
daa
sub
or
jae
and
cmp
pusha
fcmovnu
sarl
and
sbb
lods
mov
jmp
lcall
loope
sbb
lret
in
cwtl
sub
in
sbb
inc
repz
addl
ljmp
xor
mov
inc
or
mov
inc
xchg
and
jbe
lahf
repnz
mov
jg
shrw
bound
sbb
lret
movsb
not
xchg
and
rcrl
mov
xor
ss
sbb
inc
out
and
out
jg
sub
jno
sub
push
mov
std
xchg
xorl
popf
jnp
insl
lds
mov
pop
jne
mov
xor
outsb
iret
pop
mov
and
fs
push
push
iret
dec
test
lahf
xorl
test
js
cmp
jg
out
mov
and
xchg
sbb
dec
pop
aad
cmp
lock
pop
mov
mov
lea
and
pop
xchg
sbb
lret
in
sti
push
xchg
fsubrs
xchg
movsb
les
and
jp
add
mov
xchg
jmp
push
int3
cmpsl
aam
adc
cld
aad
cli
push
adc
arpl
pushf
into
mov
in
jp
test
test
inc
cs
add
xchg
cmp
in
cld
fsubrl
data16
ja
jg
clc
mov
repnz
in
dec
pusha
out
dec
mov
xchg
addr16
jg
mov
jne
cmc
pop
inc
push
jne
or
xchg
pusha
mov
sahf
push
push
xor
cwtl
jmp
push
dec
inc
xchg
in
stos
or
mov
pop
mov
push
sbb
scas
ret
sbb
mov
add
pop
sub
and
stos
push
xchg
xchg
ret
pop
loope
popl
add
jb
cwtl
mov
and
mov
std
fcomps
adc
cmpsb
xchg
mov
ljmp
sbb
mov
stc
sbbl
sub
sub
fwait
sysexit
lds
testb
repnz
cli
inc
int
and
jmp
mov
ja
dec
outsl
arpl
pop
pop
sub
mov
pop
sahf
pop
adc
aas
fistpl
add
push
dec
mov
inc
jbe
loop
dec
mov
dec
sub
nop
outsb
mov
and
add
cltd
push
aaa
rorl
adc
push
idivl
jp
cmpsb
lret
pop
dec
mov
pop
hlt
pop
lret
pushf
bound
hlt
mov
lret
jg
dec
mov
fbstp
or
cli
pop
popa
shl
pop
add
js
test
push
das
adc
push
add
mov
popl
add
popa
outsb
jno
mov
aas
sub
mov
in
loopne
movsl
rcr
jno
stos
xor
aaa
lcall
sbb
aaa
xor
or
fucomi
push
mov
shrb
push
faddl
imul
and
mov
pop
and
roll
mov
xlat
pop
adc
sbb
and
fistpl
add
mov
add
divb
jg
scas
out
popa
dec
pop
push
shr
sub
aam
xor
mov
orb
fisttpl
xchg
iret
enter
insl
leave
sub
rcrl
in
fst
test
iret
xchg
and
sbb
xchg
push
cmpsl
jle
inc
hlt
pop
xchg
pop
out
push
loope
cltd
lds
sub
xchg
pop
push
push
cmp
or
or
iret
push
push
arpl
scas
or
and
dec
insb
faddl
xor
sbb
cltd
inc
cli
ljmp
mov
cmp
and
test
cmp
loop
mov
out
rclb
push
mov
in
je
clc
test
imul
fidivrl
and
mov
jnp
fnsave
testl
dec
jnp
rclb
cmc
and
add
jnp
movsb
xchg
jb
and
jne
ss
or
cmpsb
inc
stc
mov
and
stc
push
negl
push
loope
add
movsb
xchg
sbb
inc
pop
stc
lret
out
aas
or
cwtl
push
push
pushf
adc
mov
push
adcb
popa
inc
add
rcrb
cld
out
fdiv
pop
andl
mov
dec
jecxz
mov
data16
adc
leave
cmc
pop
cwtl
inc
ljmp
arpl
jno
cli
and
in
mov
shr
jmp
push
mov
mov
bound
xchg
lock
sbb
add
into
xor
imulb
mov
jg
aam
rcrl
cwtl
notl
or
add
xlat
cmp
push
add
cld
jne
or
int
and
fcomps
loope
cmp
popa
jne
clc
push
sbb
push
fisttps
jbe
arpl
fsubl
test
fs
ja
push
jp
mov
and
out
movsl
hlt
dec
mov
mov
data16
lret
sub
push
into
mov
out
int3
jno
outsb
pushf
outsl
lahf
cs
cmp
inc
leave
and
mov
xor
les
ret
mov
push
das
xchg
int3
dec
sbb
ror
nop
mov
sti
mov
call
cmc
add
addr16
fwait
sub
sub
ljmp
sbb
pop
mov
dec
xchg
and
testl
dec
mov
pop
lock
out
popf
stc
xlat
or
pusha
xabort
add
and
or
test
push
add
lds
cmp
mov
ds
fldt
icebp
pop
clc
xchg
mov
fldt
notb
jne
iret
nop
scas
and
lcall
ss
out
cmp
mov
push
test
xor
dec
ret
sub
pop
inc
rcr
mov
and
lds
repnz
xchg
sub
sahf
icebp
xchg
jl
xor
es
add
add
xchg
sbb
push
outsb
mov
mov
add
lret
jl
dec
gs
jno
mov
sahf
movl
mov
stos
ret
in
and
jp
add
push
stc
in
adc
loopne
cwtl
add
pop
out
fadds
aad
xchg
jae
fidivrs
and
enter
pop
cmp
push
outsl
fsubp
mov
sbb
shll
fdivrl
shlb
cmp
and
into
popf
sub
negb
les
mov
sub
int3
stos
test
inc
fmul
insl
jb
and
dec
fucomi
xchg
push
mov
aas
jmp
inc
adc
loop
jne
mov
and
and
mov
cmpsb
dec
sbb
sbb
mov
icebp
mov
int
mov
in
lret
inc
lods
inc
xchg
sbb
and
lea
lods
sarb
movsl
mov
jbe
ret
daa
jmp
push
and
fisttpll
insl
movsl
mov
aas
out
or
imul
sarb
out
sub
dec
je
aad
cmc
pop
mov
push
xor
push
cmp
enter
jnp
enter
mov
push
in
and
subb
push
rol
cmpl
cmp
xor
xor
enter
mov
mov
cmp
in
dec
test
test
push
enter
push
adc
pop
push
push
mov
xchg
nop
imul
and
imul
cmp
push
mov
pop
fiaddl
mov
rcr
imul
cmpsl
pop
lock
in
dec
push
stc
adc
je
adc
pop
xchg
lcall
mov
add
cmpsl
clc
ja
scas
xchg
lock
insb
or
sub
jl
shlb
loop
popa
arpl
cmp
push
sbb
and
xor
sti
pop
cmc
imul
ja
stc
ret
outsb
pop
mov
fcmovnb
mov
xor
lret
je
test
fs
popa
outsb
das
pushf
jb,pt
jmp
add
daa
das
mov
movsb
xchg
pop
ret
dec
dec
jmp
cmpsb
push
in
les
mov
dec
jge
mov
mov
lods
orb
aas
repz
lret
jb
push
pushl
jmp
int3
iret
pop
cmp
stos
into
nop
mov
rcll
dec
cmp
mov
xor
mov
cli
push
sbb
popf
test
dec
ljmp
nop
jne
cwtl
dec
mov
imul
dec
mov
mov
test
cmp
mov
repnz
push
pushf
sub
cmpsb
ret
hlt
push
cld
outsl
and
mov
icebp
mov
mov
mov
push
xor
icebp
lds
jbe
xchg
push
ja
xchg
out
test
or
or
xchg
mov
ffreep
jmp
mov
je
test
push
cmp
sahf
fldl
xchg
adcb
mov
sahf
mov
adc
jmp
xchg
push
hlt
popa
cmp
lds
inc
test
mov
push
notb
and
lret
jno
loope
mov
push
xchg
add
mov
add
push
sub
fcomi
xor
mov
cmpsl
add
add
xor
adc
add
xchg
sbb
out
call
ja
es
add
or
sub
lds
out
jmp
pop
test
cwtl
mov
mov
mov
out
and
cmpsb
pop
jecxz
mov
nop
push
sbb
sti
pop
test
or
pop
sbb
sbb
pop
or
mov
inc
iret
or
inc
sub
sbb
push
xor
jecxz
jecxz
mov
mov
xor
fs
pop
stc
mov
cmpsl
lock
ja
sub
sbb
push
mov
and
inc
or
lods
jne
mov
into
xorb
pusha
aas
adc
aaa
lods
les
dec
cmp
jb
leave
mov
adc
test
das
sbb
and
aaa
inc
sbb
adc
xlat
pop
sbb
sbb
xchg
mov
lock
pop
bound
jmp
bound
stos
orb
cld
or
mov
add
test
les
or
adc
dec
pop
lds
or
call
cwtl
icebp
les
mov
jmp
mov
cmp
jecxz
subl
out
loop
cmpl
adc
pop
push
loop
repz
sarb
test
aaa
out
sbb
or
fs
sbb
inc
xchg
stc
test
repnz
jg
shll
das
fwait
dec
psubq
jle
fdivr
ds
hlt
push
pop
loope
movsb
inc
gs
int
pop
jno
lahf
aam
jle
push
or
nop
and
sub
pop
es
xor
fdivrl
cmp
into
and
fs
pop
sarl
cmp
add
call
sahf
mov
adc
pop
xchg
negb
les
jnp
mov
mov
lods
push
sub
test
dec
mov
cmp
stos
out
mov
pop
arpl
dec
fsubs
imulb
dec
xchg
jp
adcb
in
fidivrs
pop
sbbl
loopne
xchg
insl
in
cwtl
xchg
adc
orl
jb
mov
push
push
iret
mov
insb
fidivs
aaa
dec
adc
xchg
rcrb
nop
sub
sub
rcrl
push
inc
mov
es
mov
jne
ljmp
adc
cwtl
cmpsl
scas
xor
in
sub
jmp
jl
xchg
cld
stos
add
pop
pop
fwait
stos
call
out
xchg
stc
cmpsb
mov
ljmp
packuswb
cmpsl
cmp
pop
xchg
xor
sub
pop
adc
cld
pop
push
or
mov
ds
ficompl
repnz
daa
insl
iret
notl
or
mov
add
jmp
mov
nop
push
and
fidivrl
xchg
subb
pushl
and
test
cmpsb
shrl
or
sarl
cmc
cmp
mov
sub
xor
test
jp
popl
push
push
jecxz
dec
lret
aam
dec
rcll
leave
xchg
stos
inc
jno
jno
pop
mov
xor
cwtl
xchg
mov
or
add
daa
inc
cmc
xchg
jmp
std
lcall
sbb
test
jae
das
ljmp
sbb
lahf
push
test
stos
aas
lods
jbe
xor
call
dec
or
or
int
into
lds
xchg
pop
lods
dec
xor
pushf
icebp
pop
add
sbb
fcmovb
lea
jecxz
pushl
xchg
jl
xchg
mov
das
sub
aad
movsb
insb
dec
insl
push
es
in
int3
in
shlb
nop
repz
loope
jecxz
loopne
popf
dec
stos
clc
xor
repnz
pop
sbb
push
test
out
inc
cmp
mov
das
mov
movsl
mov
mov
pop
adc
add
ljmp
addl
vmaxsd
fnstsw
xchg
fists
pop
movsl
cvttps2pi
pop
sub
adcb
iret
inc
jmp
fbld
dec
mov
adc
mov
das
inc
cmpsl
sbb
dec
pushf
and
push
mov
je
mov
cmp
dec
in
cmp
idiv
ljmp
movsl
insb
pop
js
mov
jns
push
fsubrl
inc
sti
mov
xchg
scas
sub
movsb
aaa
cs
sbb
ficoml
js
gs
inc
in
pop
mov
mov
xor
hlt
out
call
cmp
push
fiaddl
push
and
sbb
jo
cmp
arpl
cmpsl
loop
jg
stc
imul
jmp
inc
test
xor
jae
pop
out
adc
pop
dec
push
dec
into
xchg
imul
js
jg
in
ja
lea
ss
jns
ljmp
fidivl
and
or
shl
fimull
daa
xchg
or
xchg
ds
push
ja
lds
mov
into
in
mov
and
testl
cmpsl
aam
lret
or
dec
pop
dec
pop
jb
or
push
loope
call
pop
fwait
sub
inc
or
mov
jp
das
jb
nop
ljmp
dec
outsl
xchg
data16
jmp
cmp
and
std
in
dec
dec
fwait
adc
adc
xchg
mov
mov
cmp
or
aam
adc
mov
shrd
jle
fwait
test
in
inc
dec
cld
dec
rolb
cwtl
fidivs
shrl
shll
inc
add
pop
pop
pop
out
cmova
pop
lcall
arpl
jmp
movsb
pushf
xchg
pop
sbb
xor
and
push
xor
rclb
ror
addl
lea
xor
push
inc
or
sub
test
mov
jo
xor
mov
cmpb
icebp
aaa
test
sbb
test
pop
push
cld
lret
pushf
pop
call
gs
pop
xor
fld
jo
aam
fisttpll
lods
std
test
es
pushf
adc
movsl
hlt
lods
notb
jmp
lcall
movsb
aas
call
js
pop
xchg
clc
cmpsb
sbb
cmp
inc
xor
cmpsl
repnz
test
insb
aad
push
imul
pop
sbb
and
jge
cmp
imul
pop
ja
cmp
sbb
and
or
or
xor
insl
aaa
or
sub
jbe
jbe
push
sub
inc
cmc
cltd
dec
sub
stc
int3
movsl
test
pop
sbb
fsub
ss
pushf
js
gs
cwtl
call
ljmp
fadds
inc
cmp
rol
aam
push
lock
or
cmp
xlat
and
mov
gs
test
sub
xor
imul
and
xor
jb
inc
and
and
inc
cs
jl
and
and
sahf
add
pop
cld
jg
or
ret
add
push
es
adc
jo
scas
setbe
out
negl
das
mov
stos
jmp
in
mov
or
stc
loope
lret
or
fiaddl
mov
sbb
pop
xor
sub
enter
mov
ds
or
add
call
ret
test
inc
mov
pop
sbb
xchg
cmp
mov
mov
inc
xchg
or
fcmovb
aas
pop
loopne,pn
push
loope
nop
mov
push
xchg
pand
std
dec
loop
jecxz
das
sbb
jl
push
scas
push
push
push
jg
push
cmp
inc
mov
xchg
xchg
and
fisttps
daa
outsb
mov
les
fwait
jl
or
or
rol
mov
add
push
add
popa
mov
or
mov
dec
and
shr
repnz
and
cmp
popf
out
dec
cmc
call
dec
lcall
mov
inc
mov
wbinvd
icebp
mov
xchg
out
not
xchg
lahf
jnp
sarb
add
sarl
and
nop
or
fwait
mov
lea
jle
ret
mov
lock
sub
dec
pusha
dec
cmp
jecxz
mov
inc
sbb
sbbl
fwait
test
mov
sbb
in
dec
mov
sbb
xchg
out
jmp
ret
pop
pusha
ds
mov
je
dec
fidivrs
mull
xchg
push
data16
xor
jns
jae
std
push
pop
dec
pop
adc
push
rcrb
push
leave
daa
add
mov
mov
or
popf
push
push
das
or
ret
das
imul
mov
call
push
in
fstpt
adc
insb
cmpsl
ret
mov
mov
pop
and
push
pop
test
jae
pusha
in
icebp
mulb
fs
insl
push
imul
pop
or
mov
adc
fs
push
mov
add
add
cmc
dec
mov
cmp
pop
xlat
js
aad
jmp
adc
leave
mov
push
mov
jle
leave
pop
xor
push
xchg
outsb
enter
cmpsb
out
int3
movhps
out
push
sbb
jbe
mov
stc
jo
mov
xor
push
loope
dec
ljmp
in
addr16
sub
repnz
mov
cmp
test
sbb
cld
mov
ss
adc
dec
pop
jle
pop
sub
pop
in
push
dec
imul
inc
cmp
sub
sub
loopne
jne
mov
nop
inc
sahf
cmp
lret
push
sbbl
dec
daa
imul
sub
push
lcall
pusha
cltd
push
dec
aas
xor
inc
fdivs
enter
insl
insb
mov
pop
rorl
fsubs
pusha
xor
scas
and
shl
mov
aad
xor
dec
es
into
sub
push
pop
in
jnp
fidivl
imul
inc
add
add
pop
mov
test
test
paddusw
sbb
scas
inc
cmovnp
mov
sbb
aaa
xchg
inc
mov
jl
xchg
add
lcall
cli
push
add
fistpll
lret
pop
test
bound
push
add
sbb
mov
testb
jns
xchg
pusha
loopne
or
outsl
mov
out
dec
xlat
ret
adc
mov
jecxz
jns
inc
mov
jmp
pop
xchg
push
xchg
xor
pop
pop
test
sti
push
or
test
das
mov
gs
and
push
ret
dec
adc
ret
subl
fiaddl
pop
popa
movsb
push
mov
enter
add
sbb
mov
jmp
loopne
rcrl
cltd
gs
cwtl
lods
and
push
xor
sub
jl
add
mov
imull
rolb
xchg
scas
add
ss
xchg
cmp
pop
jle
xor
fidivrs
ret
mov
jns
popf
je
xchg
mov
cli
sub
xchg
outsl
aad
dec
jo
in
mov
xor
in
xchg
jo
int
pop
je
and
push
sahf
xchg
lea
mull
sbb
call
xchg
dec
pop
xchg
lods
movsb
jmp
mov
adc
bound
push
push
rcl
rclb
aaa
mov
test
inc
outsl
xchg
xchg
mov
aad
mov
mov
sbbb
and
out
and
and
jl
inc
push
mov
inc
mov
and
jge
lahf
ret
pop
cmpsb
mov
imul
sbb
push
js
test
rclb
push
fdivs
cli
je
stos
mov
cli
scas
mov
xchg
lock
pop
sti
lds
pop
imul
pop
xor
pop
jb
xchg
or
test
mov
sub
fwait
stc
cs
fnstcw
stos
pusha
pop
fst
push
sbb
xor
or
pushf
xchg
mov
movsl
jnp
cmc
jns
xchg
arpl
aas
out
xchg
pushf
sub
in
inc
mov
jne
cmpsb
in
or
xchg
repz
popf
xor
lcall
imul
mov
add
mov
mov
jmp
adc
clc
gs
loopne
lahf
jnp
ljmp
shlb
fiaddl
add
lret
testl
adc
imul
aam
les
add
in
adc
je
aaa
xchg
and
adc
push
ret
in
sti
mov
mov
sub
sarb
inc
jae
dec
pop
pop
int3
cmp
mov
jb
lret
and
movsl
ja
das
test
das
sbb
je
add
adc
push
test
xchg
lret
or
push
push
mov
adc
push
pop
add
lds
pop
mov
dec
sub
xchg
imul
adc
icebp
pop
insb
lret
inc
xor
arpl
idiv
cmpsb
test
jbe
loope
testl
inc
pop
ss
ret
cmpsb
pushf
notb
lods
push
pop
jmp
jecxz
imul
shll
fwait
mov
iret
je
vphaddubw
test
ds
mov
aaa
cld
aad
mov
or
add
cltd
fisubrs
test
cmp
and
outsl
pop
inc
mov
pop
shl
sbb
cmpsl
xchg
mov
adc
fwait
xor
ss
icebp
push
mov
out
repz
xlat
inc
jnp
mov
mov
sub
adc
jmp
xor
adc
pusha
mov
add
sbb
cmp
mov
and
mov
fnop
pusha
cmc
cmpsb
testb
insl
mov
xchg
enter
lret
sub
jb
bound
dec
aam
test
sbbl
fdivrl
loop
push
loop
adc
add
mov
cmc
pop
iret
and
push
push
sarl
pop
mov
cmpsb
jns
pop
out
pop
push
insl
push
loopne
mov
arpl
enter
mov
rcr
insb
stos
shlb
ret
nop
ljmp
mov
les
sbb
adc
sub
sbb
dec
repz
cmpl
mov
and
pusha
into
push
cmp
inc
test
push
jnp
std
lea
out
mov
pop
xchg
push
aad
enter
jge
mov
jecxz
js
or
shlb
xchg
jne
jo
push
sar
dec
jmp
sbb
dec
out
and
mov
pop
int
cmp
mov
jne
mov
sbb
jo
sub
pop
test
push
leave
jae
cld
repz
ss
mov
push
cmp
ret
lea
pop
and
adc
and
xor
stos
xchg
mov
jl
lods
push
int
insb
fdivrp
lret
lock
not
iret
aam
in
insl
shrl
cmp
sahf
fbstp
imul
jge
dec
push
inc
pusha
orl
mov
inc
dec
in
and
fdivs
dec
cmp
jmp
and
push
fcomps
lock
fadds
mov
add
push
or
ret
mov
insl
dec
jo
dec
sti
or
aam
dec
test
loop
ret
rep
dec
mov
add
xchg
outsb
outsb
out
mov
or
xor
push
dec
mov
or
loopne
mov
and
push
sub
cmp
fwait
dec
adc
js
pop
loopne
arpl
sbb
push
pop
fimull
sbb
mov
inc
dec
inc
nop
out
xchg
icebp
scas
mov
xchg
popf
xchg
pop
fisubl
cld
fcomps
mov
xor
dec
push
add
jo,pn
push
loopne
push
enter
mov
push
push
add
std
push
xor
fimull
pop
imul
shrb
dec
xor
repnz
mov
jnp
hlt
mov
cmpsl
dec
cmpsb
fmulp
ds
loop
pop
daa
pop
aad
addr16
lds
xchg
mov
push
outsl
inc
testl
mov
dec
xchg
mov
mov
js
push
leave
loop
mov
inc
test
inc
rorl
iret
push
inc
fstpt
pop
fadd
pop
mov
jne
repnz
dec
jo
cmpsl
lods
mov
or
bound
sbb
mov
mov
mov
or
arpl
add
roll
push
xor
sti
sub
jb
cmp
cvtpi2ps
iret
dec
sbbb
es
inc
insl
xchg
icebp
and
xor
pop
add
sahf
xchg
sbb
idivb
sbb
pop
xor
test
and
lods
push
stos
hlt
aad
fisubs
xchg
pop
mov
mov
cltd
inc
and
aad
or
xchg
movsl
ret
push
mov
xchg
xchg
pop
cmp
sbb
leave
mov
xchg
in
movsb
jge
and
ss
dec
push
test
fcomps
int
push
mov
jbe
cmp
testl
cmpsb
scas
cmpsb
leave
xor
xor
gs
lods
outsb
add
jns
les
cmp
sbb
stc
inc
add
pop
cli
xchg
and
ficomps
mov
ds
cmc
test
int
sti
scas
cmc
fdivs
ror
outsb
aas
lea
push
icebp
in
push
jecxz
insl
pop
xchg
jmp
lahf
das
sti
pop
xchg
jge
or
cmp
xor
fs
stos
mov
or
sbb
and
negl
push
pop
xor
pop
pushf
outsl
scas
mov
add
int
enter
sbb
shrl
mov
adcl
and
cmpsl
cmpsl
mov
mov
ds
scas
fidivrs
call
push
xor
and
xor
shrl
insl
lock
push
mov
cmp
xor
cmpsb
sbb
gs
lea
dec
jge
sti
push
push
inc
cmp
dec
add
xchg
sbb
and
scas
outsl
lock
lock
jmp
cmp
ljmp
pop
fcoml
daa
pop
xor
push
lahf
bound
in
mov
jge
push
mov
addb
adc
xor
clc
arpl
loopne
or
sbb
jp
inc
jno
cmp
dec
or
and
es
push
rcll
pop
xor
pusha
mov
jno
mov
adc
or
sub
dec
rcll
mov
mov
enter
cmp
mov
psubusb
mov
insl
into
cmpsl
ja
enter
cli
mov
add
dec
clc
or
jge
cmp
mov
or
pop
pop
je
xchg
ret
jmp
popa
dec
sub
repz
inc
xchg
std
jecxz
test
inc
cli
xor
push
aas
inc
test
imul
imul
bound
addl
scas
sahf
leave
lret
cmp
fs
xor
pop
clc
insb
enter
adc
cmp
jo
jge
out
or
adc
mov
cs
adc
lahf
jmp
mov
pop
adc
pop
adc
xlat
ja
mov
xchg
icebp
hlt
ss
jns
cmp
inc
mov
and
push
leave
loope
outsl
cmpsl
lahf
or
adc
add
or
xchg
jnp
inc
loopne
loope
mov
mov
mov
mov
inc
js
adc
mov
lock
leave
dec
xchg
stos
addr16
aad
enter
stos
jmp
gs
pusha
fadd
out
push
mov
push
lea
inc
xor
stos
or
stos
das
sahf
jg
data16
inc
arpl
inc
push
sbb
pop
adc
mov
inc
mov
pop
movsl
iret
loopne
jge
or
mov
mov
ljmp
ljmp
stos
push
cmp
add
dec
pop
sub
cltd
ja
cli
inc
pop
pop
mov
popa
shl
fisttps
jne
push
shl
call
out
sti
jge
mov
or
dec
movsb
push
lods
and
test
filds
imul
pusha
call
in
xchg
test
xchg
mov
fsubl
mov
xor
push
dec
jge
popf
out
fists
adc
fdivs
pop
out
pop
and
dec
mov
push
gs
std
mov
arpl
add
lahf
mov
iret
insl
sub
test
stos
and
push
lcall
decl
jle
adc
xor
mov
push
imul
inc
sub
xor
cmp
xchg
popf
cltd
mov
pop
mov
pop
loopne
fstpt
xchg
xchg
xchg
push
stos
pop
xor
hlt
bound
je
cmp
jne
mov
cld
out
subb
add
push
scas
mov
sbb
dec
xlat
cmp
mov
xor
aas
and
lret
nop
out
icebp
adc
mov
cmp
inc
movsl
push
ud2
push
push
ljmp
testb
insb
out
xlat
ljmp
add
mov
xor
xor
mov
jmp
mov
inc
jae
push
mov
xchg
fistpl
lret
lea
pop
cwtl
pop
xor
mov
add
sub
gs
decl
push
rol
loop
test
dec
mov
mov
lds
mov
andb
sub
pop
out
sbb
mov
les
fucom
imul
mov
or
fcoml
dec
lock
hlt
inc
mov
clc
cltd
dec
sbbl
jb
fmulp
xchg
inc
stc
xchg
fildll
mov
cmpsb
out
and
shrb
sub
sub
cmp
sub
or
push
es
push
cwtl
cwtl
lock
inc
outsl
test
mov
pushf
loopne
stc
sbb
xor
in
repnz
lret
loopne
outsl
mov
lods
inc
xchg
cmpsl
jle
sub
cmc
arpl
popf
and
push
in
out
dec
mov
mov
push
jecxz
pop
gs
data16
rol
stc
daa
dec
inc
add
push
mov
and
clc
pop
popf
and
jge
fsubp
out
jp
test
pop
std
mov
stc
lcall
and
jns
int
xorb
cltd
dec
push
jae
dec
pop
inc
mov
jle
adc
cmp
cmp
sbb
loopne
les
and
dec
mov
test
mov
inc
mov
cli
hlt
inc
cmp
insl
or
popl
out
stc
add
sti
aaa
out
lock
xor
enter
pop
rcll
push
ljmp
leave
ja
jno
lods
sbb
xchg
jg
stc
ja
cmc
es
rcll
dec
fmull
push
mov
cmp
jle
pop
stos
in
mov
jnp
fmuls
out
shrb
and
pandn
sub
or
xor
pop
mov
inc
mov
aam
je
jns
out
mov
mov
arpl
repz
sub
popf
rcrb
fldl
pop
pop
xchg
xchg
addr16
lds
iret
xchg
push
adc
shrb
ret
iret
pop
add
cli
lock
and
fildll
push
xchg
ja
mov
push
insl
in
lods
aaa
test
repnz
mov
std
adc
imul
adc
hlt
inc
lods
fdivr
lahf
sub
cltd
dec
cmpsl
mov
sbb
pop
add
dec
ds
pop
pop
xchg
daa
call
out
pop
mov
pop
add
mov
push
lcall
fcomps
jo
ret
lea
pop
mov
jge
cmp
popa
push
sub
aas
jle
lock
mov
add
sub
icebp
add
pusha
shlb
push
lods
loop
xchg
dec
jge
and
pop
pop
dec
cmovno
adc
pop
lds
push
and
dec
iret
xor
inc
decl
loop
mov
imul
adc
fistps
popa
dec
hlt
mov
fiaddl
jo
stc
mov
sbb
in
mov
cltd
les
add
addr16
xchg
fsubrl
jl
je
cmpb
aad
lahf
into
lods
pop
ljmp
and
jne
jmp
inc
xor
sbb
sbb
jle
push
not
mov
lods
xor
mov
mov
mov
and
push
call
call
fimuls
hlt
sub
inc
and
dec
mov
call
add
scas
adc
test
ss
dec
pop
mov
ja
inc
push
push
sbb
cmp
xchg
pop
lret
mov
xchg
pop
in
mov
pop
enter
shlb
pop
inc
or
push
mov
adc
popf
jnp
mov
and
xchg
cs
mov
push
jge,pn
mov
mov
xchg
std
aam
or
push
sub
into
mov
add
adcl
cmp
adc
pop
or
int3
je
xchg
clc
ds
sbb
jbe
fadds
mov
add
mov
enter
repz
cs
or
sub
xchg
inc
sub
add
les
sahf
dec
int
inc
lods
xor
dec
add
mov
dec
fwait
inc
mov
pop
pop
out
lahf
cmc
and
stos
xor
jb
dec
leave
mov
fs
sub
inc
movsl
arpl
xchg
mov
or
movsb
stos
jno
adc
xchg
int3
loope
mov
xchg
out
sahf
int
test
xchg
push
in
mov
cld
imul
sbb
subb
rol
hlt
jp
rorb
dec
mov
mov
loopne
movsl
lahf
xchg
jno
aas
mov
shrl
leave
push
pusha
andb
out
sub
ss
nop
cmpsl
ret
daa
aam
adc
push
imul
ljmp
xor
dec
mov
cmp
jns
mov
mov
jbe
mov
repz
pop
arpl
movsl
aaa
lea
insl
int
enter
xor
movb
nop
fstps
fwait
mov
std
insb
xchg
and
decb
repnz
xor
lcall
ret
movlps
dec
sub
inc
outsb
adc
xchg
jl
call
lock
xor
int3
aam
icebp
xchg
pop
inc
aam
ss
cmpsl
cmp
test
mov
in
jo
sub
jl
nop
test
in
cmp
loopne
test
and
rcr
adc
subb
cmpsb
ja
xchg
pop
test
pop
pop
sub
rcll
cwtl
in
repnz
sbb
stos
andl
pop
ljmp
adc
push
rorb
shrl
int3
add
inc
das
hlt
pop
jp
or
sets
sbb
cmp
xor
adc
jb
xchg
jl
and
adcb
mov
fld
mov
fs
mov
das
cmpl
repz
in
call
xorb
in
dec
jnp
ret
sbb
mov
je
xchg
aad
mov
outsb
mov
shll
jp
inc
inc
dec
push
sub
pop
xor
mov
in
dec
stc
push
sahf
subb
cld
sbb
stos
jbe
out
add
test
pop
sub
testl
imul
icebp
sub
clc
sbb
insb
jo
or
dec
sub
adc
push
mov
inc
jae
lea
push
daa
cld
and
hlt
mov
inc
mov
adc
sub
xchg
xor
push
and
pop
jne
add
and
int3
xor
or
inc
lea
int
ffreep
lret
fisubrs
cmp
stc
push
int
pop
adcb
sbb
in
sub
jb
jmp
cmp
call
push
mov
push
dec
rcrb
repnz
xchg
lahf
jl
adc
scas
adc
mov
xchg
cmpb
sbb
jo
push
testb
cmp
into
inc
lahf
xchg
stos
nop
xor
mov
in
xchg
test
lcall
jb
cmp
stc
cmp
out
mov
mov
jb
cmp
into
jge
or
movsl
xchg
movsb
sbb
cmp
fdivs
jle
inc
mov
mov
aad
sub
push
xchg
xor
cmpsl
insb
rclb
push
cmp
and
xor
lods
mov
lds
adc
mov
lea
ds
sahf
sarl
cmp
pop
cmc
sub
mov
bnd
or
mov
push
add
mov
sbb
popa
imul
popf
xchg
mov
imul
cmpsb
adc
xchg
mov
xchg
repnz
adc
test
in
push
stos
movsl
mov
adc
adc
repz
xchg
in
sbb
push
daa
int3
jg
outsl
imul
push
in
jl
addb
adc
pop
jns
mov
jae
dec
dec
stos
cmp
xor
mov
inc
enter
ss
aad
daa
imul
icebp
test
aas
mov
sub
pop
mov
mov
and
and
mov
stc
dec
push
jl
dec
and
mov
imul
xor
inc
xchg
push
ljmp
into
sti
mov
sub
shr
imul
xor
ds
fst
sub
fwait
stos
and
in
pop
cmp
stos
inc
fidivs
sbb
adcl
lret
out
psubq
adc
adc
movsb
nop
ret
jg
sbb
xor
je
sbb
push
leave
xchg
and
jbe
rolb
jno
mov
inc
pop
cli
je
lcall
pop
add
jmp
test
popf
or
mov
sti
adc
out
ss
jne
adc
inc
fs
popa
mov
jo
test
push
pushf
inc
shl
loop
in
fwait
or
test
inc
or
inc
lea
out
iret
lds
aaa
push
sbb
cmp
mov
call
add
dec
jecxz
mov
pop
loopne
fwait
insb
sbb
rclb
jae
lock
mov
arpl
jae
fcmove
mov
lock
fmull
xchg
adc
and
mov
sub
cmp
cmp
cltd
pop
xor
dec
jmp
nop
mov
or
adc
shll
adc
loopne
sub
add
icebp
lock
sahf
pop
sub
sbb
lock
pop
add
aas
lds
sbb
lods
inc
iret
loope
xchg
lods
xchg
mov
es
mov
mov
sub
insl
ret
enter
cmp
insb
addr16
sbb
push
sbb
pop
sbb
lea
in
add
dec
in
push
in
adc
sub
pop
jl
int3
push
mov
sbb
popa
mov
add
and
dec
movsl
xchg
in
clc
stos
pop
push
into
rorl
inc
mov
adc
dec
aad
icebp
jmp
mov
inc
cwtd
adc
push
aam
in
sti
out
add
add
mov
ret
jp
test
pop
test
aaa
insb
ret
es
mov
mov
jo
sahf
sub
sti
push
pusha
sbb
and
jl
push
cs
and
cwtl
mov
adc
sbb
ja
push
mov
xchg
push
in
or
lods
jne
cmp
inc
jle
or
imul
push
mov
sbb
add
aaa
lock
stc
push
mov
cmp
inc
push
stos
pop
fisttps
pop
fiaddl
std
xchg
cmp
lock
or
stos
jno
popa
cwtl
sub
jb
mov
mov
nop
mov
inc
fisttpll
mov
mov
aad
dec
mov
sbb
repnz
push
cmpsb
sub
test
jp
bound
jb
ret
jb
adcl
add
into
push
mov
ljmp
jg
mov
mov
call
push
add
popf
sub
bound
stc
sar
pop
pop
xchg
fldl
push
nop
dec
outsl
test
or
xor
dec
inc
lret
xchg
adc
fisttpll
aas
push
xor
xchg
hlt
mov
xor
or
mov
inc
or
insl
push
mov
popf
inc
data16
scas
push
test
test
mov
adc
xchg
and
decl
adc
scas
imul
sub
pop
loop
iret
push
scas
and
fwait
mov
ret
outsl
pop
scas
sti
dec
pop
jmp
ret
aas
mov
jg
addl
aad
and
test
nop
test
loope
ds
mov
xchg
je
gs
fdivr
ja
out
and
jl
fsqrt
mov
jno
dec
mov
pop
fstpl
icebp
push
jle
movsl
dec
rcr
mov
cmp
es
jp
mov
mov
add
and
iret
popf
lcall
cmpsb
dec
mov
sub
ret
js
ds
ret
ljmp
int3
push
je
mov
das
aam
pop
loop
rolb
out
jp
mov
pushf
xor
xor
ror
arpl
fnstenv
push
cmp
imul
arpl
data16
setge
add
inc
mov
jbe
mov
out
dec
xchg
pop
inc
iret
shll
or
call
je
cmp
notb
stos
gs
mov
xor
inc
inc
lret
popa
lahf
in
xorl
sbb
jmp
push
and
movsb
fnstcw
xlat
sbb
cmpl
lret
cld
mov
cmp
fisttpl
aam
aad
mov
mov
adcb
jge
scas
lahf
jmp
adc
pop
sbb
or
push
cs
and
push
int
mov
jg
jge
repz
mov
int
in
mov
pop
jge
cmc
outsb
cli
xchg
push
mov
or
adc
sub
jae
add
inc
push
mov
xchg
sub
add
imul
decl
mov
dec
push
and
jmp
insb
jo
in
pop
cltd
and
popf
pop
xchg
adc
pop
cmp
mov
pop
push
xchg
mov
cmp
je
sbb
lock
sub
jb
pushf
sahf
push
pop
jb
cmpl
xor
jmp
lods
jl
mov
jecxz
cmpsb
insl
dec
test
call
cs
loopne
add
jne
xlat
xchg
fld
push
in
andl
call
dec
mov
cmc
sub
stc
je
jnp
xchg
enter
into
ds
aas
push
popf
outsl
aas
xor
js
aam
ret
pop
stc
pop
mov
mov
and
sti
lods
outsl
movsb
add
cltd
or
test
push
es
jae
xchg
stc
sahf
roll
xor
popf
mov
add
subl
inc
int3
and
add
idivl
dec
cltd
rclb
movsb
into
loop
es
xchg
aad
iret
cmp
ss
sbb
arpl
xlat
hlt
or
cmp
faddl
adcl
arpl
push
xchg
fdivl
das
push
sarb
cwtl
jnp
ljmp
jae
xchg
movsb
cltd
pop
cmpsl
push
int3
leave
test
addr16
dec
stc
cmpsb
push
dec
in
cmp
jp
sbb
mov
pop
pop
ret
ja
or
inc
rcll
adc
jle
jbe
dec
mov
and
jg
movsb
adc
mov
xchg
sbb
mov
and
je
lods
mov
idivb
leave
cld
lret
les
fisubrl
or
shl
mov
aaa
xchg
mov
fisubs
fimuls
aam
xor
hlt
addr16
jno
shll
sub
xor
les
sub
jmp
jo
or
in
adc
xchg
jns
lea
pop
enter
push
pop
jle
enter
push
jle
push
fcoml
dec
push
mov
aaa
sbb
enter
loopne
push
std
lods
xor
jge
xchg
inc
jne
fcoml
out
mov
rcr
fldcw
adc
dec
jp
inc
stc
pop
cmp
push
mov
pop
jne
push
jge
lods
xor
add
inc
mov
lds
dec
ds
call
xchg
add
inc
and
shlb
in
pusha
pop
and
scas
cmpb
shll
and
add
xor
xchg
subb
jecxz
jo
addr16
push
mov
rcrl
pop
pop
push
test
jecxz
xor
gs
outsl
dec
jp
mov
jecxz
pusha
inc
ret
jmp
xorl
clc
das
pop
push
insl
out
out
inc
xor
dec
jno
loopne
imul
fadd
sub
hlt
mov
je
xchg
mov
mov
in
ror
es
sbb
jmp
clc
push
repz
add
rorb
mov
movsl
pop
mov
in
cmp
adc
int3
iret
inc
test
in
lock
rorb
rcll
in
jo
pusha
mov
bound
popl
aad
inc
icebp
lds
scas
fcmovnbe
or
mov
or
adc
jnp
call
popf
or
in
inc
data16
in
sti
cmp
in
jnp
lahf
shll
in
int
mov
fdivrl
jne
cmpsl
mov
movb
dec
leave
push
movsl
mov
inc
pop
rorl
dec
mov
pop
mov
pop
in
cli
mov
in
jp
clc
lret
pop
cmp
sub
lods
iret
les
add
adc
inc
lahf
pop
mov
xchg
ja
rcl
adc
dec
movsb
in
pop
test
cltd
xchg
pop
sbb
pop
pusha
mov
cmpsl
mov
movsl
dec
out
cmovb
push
aas
mov
loope
daa
test
cmp
xchg
enter
xor
jb
inc
add
and
nop
add
mov
hlt
add
les
jne
push
or
pop
pop
and
lret
fs
cmp
or
push
inc
sbb
enter
add
lahf
mov
or
and
pop
je
cmpsl
adc
inc
icebp
xchg
dec
jns
lock
xchg
adc
adc
push
inc
or
mov
inc
je
xchg
inc
push
cltd
dec
cli
mov
cmovl
lock
add
dec
adc
lods
and
jb
std
xchg
cmp
sbb
jp
and
sbb
notb
insl
xchg
ret
xchg
rcrl
adc
movsl
cwtl
lret
pop
lods
inc
dec
pusha
cmpl
in
xchg
rcrb
xchg
test
or
lock
test
out
xchg
pop
dec
movsl
shl
out
xchg
out
or
jp
shll
jb
out
std
mov
fimuls
loope
xor
xchg
pop
or
scas
jge
or
arpl
adc
pop
out
pop
nop
push
cmp
xor
xor
fldlg2
aaa
in
mov
enter
dec
mov
js
xchg
mov
pop
andb
aaa
in
sahf
shrl
outsl
test
mov
dec
loop
stc
enter
and
or
loope
jge
fcoms
inc
mov
lahf
pop
les
jl
int3
std
pop
mov
stos
add
call
xor
push
in
and
sbb
lret
sbb
mov
dec
xlat
mov
pop
in
jg
in
xor
mov
jne
xchg
mov
insl
stos
pop
lods
cs
mov
cmp
pop
in
loop
mov
test
xchg
mov
lock
xchg
lock
inc
adc
sbb
sbb
and
push
adc
sbb
add
notb
jge
inc
xlat
add
push
xchg
adc
mov
mov
int3
shrl
inc
mov
mov
pop
lcall
pop
inc
jbe
add
mov
jle
cs
loop
dec
arpl
mov
adc
mov
movsl
xor
sub
adc
or
es
inc
push
jo
mov
je
jbe
mov
cmp
dec
imul
lahf
and
mul
xchg
shrl
adc
outsl
push
jecxz
xchg
pop
push
cwtl
cmpsb
push
call
xor
leave
out
jmp
pop
clc
test
adc
xorb
inc
cmp
pop
in
sti
dec
cwtl
loop
fstpl
mov
into
leave
and
push
movsb
cmpsl
cltd
pop
inc
push
pop
jecxz
cli
inc
push
mov
sbb
xchg
jmp
inc
fbstp
dec
into
xor
ljmp
and
and
lea
sbb
pushf
lahf
xchg
imul
inc
jmp
push
mov
jns
mov
lcall
inc
stc
cmpsb
icebp
pop
inc
jo
sub
sub
mov
jl
pop
dec
sub
mov
pushf
test
lahf
and
mov
lock
cmc
and
add
jb
jno
add
xor
cmp
mov
jl
dec
xor
das
mov
imul
lahf
sbb
fsts
inc
mov
cmp
rorb
and
popf
pop
in
dec
mov
repz
out
pop
push
cld
and
and
fidivl
cmp
stos
stos
sub
and
fdivrl
inc
icebp
iret
sub
popa
jnp
mov
sub
ljmp
ss
movsb
pop
mov
xchg
xchg
sub
loop
add
jno
dec
or
call
in
mov
sub
das
and
inc
xchg
out
or
pop
and
repz
xchg
sub
xlat
xchg
push
and
dec
inc
xchg
jmp
stc
mov
inc
adc
jae
mov
xlat
mov
push
xchg
test
test
outsb
test
mov
pop
xor
jne
or
xlat
xor
ds
mov
add
je
pop
mov
mov
popa
in
cmc
outsb
loope
arpl
dec
rorl
mov
lahf
mov
pop
movsb
cmp
mov
push
ret
sti
push
mov
add
inc
fisttpl
es
lods
inc
clc
std
dec
imul
push
sarl
cltd
inc
nop
fdivrp
cmpsl
negb
jns
push
sub
cltd
cmp
push
mov
push
push
mov
and
xor
xlat
scas
adc
cmp
lods
in
xor
pop
into
stos
enter
push
pushf
push
and
lea
mov
pop
push
pop
push
jne
sbb
xchg
lahf
xchg
es
testl
push
je
jp
inc
mov
or
xrelease
or
ja
incl
mov
test
push
test
mov
jle
jo
jecxz
decb
xor
ror
lods
sbb
inc
mov
imul
lcall
jmp
mov
insl
loope
jns
jecxz
rcll
outsb
push
xor
adc
dec
dec
jle
inc
xor
push
mov
sbb
mov
ja
cli
sarl
and
cvtps2pi
lds
pop
push
icebp
fsub
pop
xchg
nop
pop
jmp
xor
out
negl
ss
sub
xchg
repnz
xchg
pop
mov
in
cli
cmp
pop
inc
mov
inc
mov
adc
push
into
sub
xchg
mov
mov
popf
pshufw
jg
or
repz
pop
popa
je
mov
and
mov
pop
mov
test
jb
inc
mov
jae
xchg
jae
idiv
sub
popa
das
outsb
ret
ljmp
clc
outsl
es
adc
push
xchg
sub
pop
push
fsubs
push
mov
mov
and
subl
aad
cmpsb
xchg
mov
int3
mov
push
jno
mov
xor
pop
pop
xchg
xchg
cltd
push
pop
out
popf
outsb
cmp
incl
sub
adc
imul
or
repz
xor
sbb
outsb
inc
sbb
jmp
clc
or
mov
hlt
movsb
pusha
pop
and
ret
and
pop
inc
test
mov
pushl
lahf
push
js
jb
inc
jns
jne
xor
test
inc
sbb
les
lods
and
adc
test
xor
pop
out
flds
insl
test
sti
test
stos
rorl
xchg
outsl
repnz
jmp
aas
or
xchg
dec
or
or
dec
pushf
fld
xchg
lret
dec
sub
cmpl
test
cmc
add
jl
out
sbb
outsb
movsb
xor
mov
inc
xchg
aaa
ficoms
or
lods
sbb
mov
jb
loop
inc
push
or
mov
lock
mov
dec
pop
and
and
inc
adcb
cmp
add
pmullw
pop
push
shll
cs
jl
cltd
adc
push
mov
and
dec
emms
stos
jbe
imul
cmp
shrb
push
cmp
push
lret
shr
test
cmp
cmpsl
out
enter
stos
jp
mov
mov
mov
in
jmp
add
outsb
mov
ljmp
inc
and
rcrb
mov
dec
and
mov
mov
imul
insb
or
aas
mov
dec
push
nop
or
inc
xchg
push
shll
scas
dec
insl
imul
es
push
std
mul
scas
lock
into
xor
cmp
cmpsl
mov
pop
int
push
mov
dec
aaa
cs
cmp
dec
fimull
mov
xchg
iret
xor
call
out
push
xchg
gs
lds
add
mov
dec
inc
icebp
pop
jp
fidivrl
pop
repz
cmp
out
jne
fadd
rorl
subb
outsl
ss
insl
or
je
test
fstpl
mov
push
int
dec
scas
testl
clc
cld
dec
popf
ds
jb
lahf
xchg
sub
adc
mov
or
or
pop
pop
push
mov
fxch
or
insl
in
mov
push
push
jno
ljmp
insb
push
sar
mov
jmp
out
mov
pop
push
jb
xchg
jg
movsl
mov
xchg
test
lock
adc
inc
sbb
addb
or
loope
mov
out
inc
mov
or
jo
shr
mov
inc
dec
cli
inc
out
sub
cli
xlat
push
repnz
jle
push
imul
pop
sub
shll
addr16
mov
scas
das
pop
mov
inc
jbe
sbb
arpl
push
fcoml
mov
std
dec
icebp
fldt
int3
test
jo
cmp
fiadds
or
mov
bnd
imul
and
jne
cli
repz
push
push
jp
cmp
mov
inc
std
jp
int3
std
ja
cmp
lret
xchg
jns
xchg
out
add
sub
sub
push
xor
mov
sbb
ss
enter
mov
xchg
fxch
subb
mov
fwait
gs
filds
cmp
adc
ja
fwait
outsl
inc
xchg
lret
inc
jmp
scas
movsb
cmp
add
mov
mov
test
dec
adc
and
imul
or
mov
outsb
movsb
pop
mov
lods
outsb
mov
jg
insl
jbe
fs
mov
mov
and
sub
mov
adc
pop
insb
adc
test
loop
xchg
testb
imul
fucom
push
mov
ja
cmpsb
arpl
movsb
ret
rcl
dec
popa
sbb
call
adc
cmp
int3
add
jbe,pt
push
sbb
inc
pop
or
cmp
mov
imul
shlb
lcall
das
mov
into
inc
jge
fs
dec
sub
test
loop
iret
roll
fildl
out
jae
or
adc
xchg
xor
inc
sub
xchg
pop
lcall
mov
aam
xchg
sub
mov
dec
pop
mov
in
mov
mov
mov
sbb
icebp
add
jnp
dec
mov
rcl
pop
xor
pushf
add
push
mov
xor
loop
dec
and
sti
clc
cmpsl
outsl
xchg
sbb
lret
xchg
or
rdpmc
decl
cli
cs
clc
xchg
sbb
sbb
icebp
or
bound
iret
xchg
aaa
dec
cld
mov
subl
les
mov
mov
xchg
fnstsw
cli
sahf
shl
repz
jbe
stos
frstor
clc
int3
dec
int3
fcompl
xlat
jnp
mov
mov
call
cltd
fisttpl
push
repnz
inc
je
insl
mov
jmp
ja
ljmp
adc
pop
test
or
call
imul
dec
fcomps
movsb
sub
test
and
movups
jmp
or
in
fcoms
jmp
or
imul
insl
lcall
push
lds
xchg
cmp
sub
dec
lods
mov
adc
pop
rcr
xchg
cs
add
insl
pushf
adc
ret
test
repnz
jge
getsec
xchg
cltd
xlat
js
mov
mov
cwtl
pop
bound
adc
add
scas
push
out
adc
sbb
loopne
inc
stc
add
sub
or
test
push
int3
jg
fcompl
cmp
int
je
jnp
sbb
sub
js
les
jmp
pop
call
in
dec
arpl
fistl
mov
je
rclb
dec
out
shlb
or
in
sbb
and
jl
pushf
daa
jnp
push
sbb
jg
mov
lods
mov
and
jno
mov
add
sahf
movb
inc
and
cld
pop
mov
mov
roll
push
mov
stc
jbe
mov
fs
inc
je
and
leave
pop
repz
mov
sbb
sub
ss
sbb
cmp
xor
lret
fwait
rcll
fwait
mov
cmc
push
sub
icebp
xchg
adc
sub
add
mov
xor
push
mov
pop
imul
push
out
dec
orb
pop
pop
jp
mov
out
call
lea
inc
pop
cli
adc
jbe
cmpsb
adc
sahf
xor
and
mov
cmp
xchg
push
addr16
xchg
xchg
mov
fucom
in
test
das
shrb
inc
daa
pop
add
mov
popf
andb
imul
inc
mov
jae
stc
dec
iret
cld
insb
in
daa
mov
xchg
and
mov
mov
jle
sub
mov
orb
xchg
stos
xorl
daa
pop
sbb
shlb
cmpl
jne
dec
lock
ds
stos
popf
nop
xor
fstp
or
dec
je
test
into
popa
lock
imul
dec
sub
adc
test
addr16
push
arpl
dec
rcll
mov
icebp
and
jno
shll
syscall
in
test
adc
add
or
dec
fistl
pop
and
jnp
pop
cmp
dec
mov
ret
fnstcw
mov
jbe
pop
add
sbbl
fisubs
stc
popf
int
mov
test
xchg
or
or
sub
push
addl
sbb
mov
in
or
jo
loope
sub
mov
push
adc
test
loopne
jno
insl
lods
mov
fdiv
subb
lea
movb
mov
push
xchg
pop
pop
out
cs
inc
inc
rorb
leave
sub
mov
repnz
adc
inc
push
inc
xchg
in
pop
out
jne
sbb
addr16
and
mov
or
js
dec
inc
inc
xorl
cmp
out
out
clc
mov
js
jb
xchg
pop
cmpb
lret
out
outsb
inc
inc
xor
pushf
mov
push
jnp
in
ret
mov
imul
push
mov
aad
popa
insb
inc
dec
xchg
fimuls
or
fsts
popf
xor
push
pop
push
mov
xchg
pop
jmp
push
push
popf
mov
fcomi
inc
out
xor
jae
or
daa
dec
andl
lahf
xchg
push
shlb
loop
dec
test
js
insl
je
andl
stc
jo
inc
cmp
and
inc
dec
lahf
daa
mov
pop
sub
jl
push
ret
div
les
adc
lahf
cmp
mov
stos
hlt
sbbb
inc
mov
pusha
mov
mov
xor
push
mov
or
xor
mov
sahf
inc
out
dec
fbld
push
jecxz
cwtl
mov
scas
xchg
jo
lock
ret
in
cmpsl
in
adcl
cmpsl
call
cmp
fimuls
lods
inc
divl
insb
inc
mov
sahf
insl
add
imul
adc
iret
les
jne
xchg
clc
imul
pop
in
fsubrs
loopne
ret
mov
lods
cmp
xlat
jmp
and
loope
jns
out
sub
nop
adc
cli
pop
mov
pop
mov
jmp
roll
test
imul
andb
fsubs
adc
xchg
xchg
rcll
hlt
in
iret
imul
mov
sub
xor
cltd
fs
adc
cli
pop
inc
jbe
and
dec
sbb
loop
aam
and
push
ds
imul
adcb
jg
std
stos
aaa
pop
fs
addb
lock
adc
push
pusha
fmul
add
aam
cmp
dec
cli
cltd
pop
aad
psllq
jnp
push
movsb
cli
add
leave
mov
sub
sub
lahf
pushf
push
mov
and
push
pop
movsl
xor
mov
lock
daa
dec
aas
xor
jmp
movsl
cmp
or
fpatan
pop
orl
std
paddw
movsb
testb
addr16
jg
mov
jns
mov
xor
sub
pop
ficompl
adcl
adc
fists
pop
adc
push
pop
sbb
scas
in
lret
pop
xchg
inc
aas
pop
xor
mov
jmp
adc
sahf
push
sarl
dec
out
cmp
call
or
fwait
cmp
incb
ret
sbb
daa
imul
fildl
sbb
push
push
repz
cmp
imul
or
jo
leave
mov
cmpsl
pop
cld
enter
adc
fistpl
sbb
xor
adc
loope
jp
jl
adcb
rcl
jle
inc
arpl
fnsave
dec
pushf
mov
leave
add
push
jl
cmp
popa
xchg
gs
xor
sub
inc
xchg
repnz
push
mul
push
dec
mov
sbb
adc
lahf
xlat
sbb
lret
scas
dec
inc
sub
call
cwtl
mov
popa
and
cmc
sar
push
sub
negl
js
cs
jl
add
jae
fcmove
cmp
sbb
xchg
adc
call
adc
fcmovbe
dec
xchg
ss
clc
test
cmpsl
popa
in
inc
jge
lods
nop
add
pop
mov
rol
mov
test
mov
adc
fistps
fsincos
push
sub
scas
das
andb
mov
cmp
push
inc
imul
outsb
fidivrs
mov
push
daa
pop
addl
mov
mov
xchg
int3
pop
ficoms
shlb
xchg
stc
bound
add
lret
sbb
or
adc
push
mov
je
cmp
mov
jmp
push
pop
cmp
mov
dec
or
stos
lret
lret
xchg
xchg
xchg
jmp
fmull
fdivl
add
cwtl
and
push
sti
mov
mov
in
mov
cmc
jp
test
ret
mov
mov
jp
into
ret
lods
movsb
cmp
xor
daa
add
jp
gs
aad
cmp
imul
add
push
imul
stos
decb
test
xor
and
mov
ficompl
js
inc
sub
or
in
std
out
aam
bnd
lahf
add
lock
jp
mov
cld
cmp
hlt
call
or
inc
std
dec
arpl
or
or
gs
pop
and
push
test
push
xchg
dec
stos
add
out
daa
jg
cmp
iret
gs
movsl
mov
es
stos
dec
adc
out
pop
rcrl
mov
jbe
xor
les
dec
out
and
dec
jns
stos
inc
sbb
pop
pop
fsubrl
push
pop
mov
fwait
inc
cwtl
or
and
ret
out
xor
sub
push
lret
mov
or
inc
jae
and
push
lcall
inc
aam
je
push
out
dec
ds
imul
and
lret
jb
inc
mov
inc
mov
adc
movsl
mov
cmp
and
xor
mov
lds
jmp
jns
mov
or
mov
mov
loopne
icebp
push
and
out
clc
aam
xchg
push
hlt
cmpsb
xchg
sbb
xchg
cmp
cmp
sarl
arpl
enter
in
inc
xor
iret
push
scas
jo
lret
imul
icebp
sbb
mov
push
xchg
adc
stos
sbb
imul
xchg
lock
lcall
fmuls
pop
or
and
pop
lock
lds
jmp
call
push
sbb
gs
cltd
or
push
or
xchg
xlat
imul
adc
push
icebp
pop
jp
xchg
insl
jns
mov
sbbl
rclb
jbe
ror
imul
cmp
gs
or
mov
test
leave
xor
and
xchg
das
clc
xchg
out
pop
cltd
pop
sub
insl
jg
mov
cs
pop
sub
add
add
push
pop
aad
repz
iret
sahf
fisubrl
push
xchg
cld
leave
pop
mov
hlt
xor
jne
outsl
imul
xchg
cmp
xlat
movsb
push
filds
cld
gs
rcrb
mov
xchg
cmp
push
out
adc
lret
cmp
jge
aad
int
mov
aad
add
ljmp
mov
popa
notl
ficoms
push
outsb
push
notb
out
popa
sub
push
sbb
sti
les
xchg
sub
mov
dec
fdiv
jne
xor
test
mov
fs
push
inc
pop
rolb
cmpsb
inc
fcomip
mov
bound
xchg
fcompl
in
mov
or
bound
push
int3
movsl
test
cmc
pop
jbe
mov
fildl
testl
mov
test
sbb
fwait
addr16
mov
cmp
imul
popf
out
and
inc
fidivrs
cmp
test
enter
int
push
cli
mov
inc
jo
sub
sub
jmp
mov
mov
mov
mov
jno
add
std
mov
repz
aad
mov
std
mov
sub
inc
or
cmp
sbb
sbb
negb
clc
cmpsl
inc
cltd
stos
idivl
lods
cld
decb
or
icebp
cmp
repz
jecxz
test
leave
leave
adc
adc
jnp
icebp
mov
sbb
fbstp
mov
not
loopne
rorl
push
dec
or
arpl
push
into
test
rcrl
imull
sbb
sarb
xchg
mov
mov
cmp
fnsave
mov
mov
imul
loop
rorl
sub
sahf
addl
xchg
or
xchg
adc
das
sbb
fs
ss
fdivp
push
pop
add
sti
push
mov
hlt
mov
gs
push
fisubs
push
adc
adc
push
xor
jne
mov
mov
inc
sarb
test
xor
adc
add
shll
in
scas
ret
adc
hlt
cmp
or
js
jb
shll
inc
mov
jmp
test
rcrl
stos
cli
mov
pop
fbld
enter
add
cmp
loop
js
dec
add
cmp
pushf
cwtl
les
jae
add
sti
sar
repz
pop
dec
sbb
insl
in
mov
jle
mov
es
test
xor
cld
push
repnz
sbb
jae
hlt
push
add
cmpsb
xlat
imul
lods
inc
adc
add
bound
imul
mov
jecxz
mov
sbb
cltd
fistpl
xchg
inc
fnstenvs
xchg
push
xchg
pop
lcall
push
imulb
push
into
mull
xchg
xchg
inc
dec
cmc
sti
js
fiaddl
addr16
insl
cld
jle
gs
scas
rcrb
mov
pop
dec
lock
add
push
fistl
rorl
sbb
mov
dec
imul
jo
pop
int3
pusha
movsb
adc
test
push
aas
jb
dec
je
dec
xchg
jbe
adc
pop
add
and
or
int
xchg
inc
mov
fsubrs
dec
in
sub
cld
xchg
lea
shrb
push
pop
fs
mov
icebp
loop
cmp
sahf
xor
and
aaa
scas
mov
leave
jmp
lret
and
outsl
loopne
pushf
popa
cmp
xlat
jle
cmc
daa
lds
push
aas
sbb
adc
test
mov
mov
dec
sub
xchg
mov
cld
fsubl
jge
cli
xor
cwtl
das
mov
loope
ret
scas
in
add
add
ljmp
or
mov
lahf
and
jbe
sub
sbb
enter
mov
into
adc
out
std
rorb
adc
into
mov
mov
les
add
bound
mov
mov
ja
cwtl
jecxz
xchg
or
add
push
sub
xor
pushf
mov
adc
int3
or
mov
frstor
lock
in
iret
inc
jo
sar
sbb
xchg
add
icebp
xchg
sahf
mov
dec
add
dec
shl
jne
sub
in
sbb
ss
or
aad
ljmp
jnp
mov
mov
jae
repnz
nop
push
inc
mov
cs
push
es
dec
sti
repz
adcb
pop
mov
add
adc
fsubl
cwtl
jmp
jge
sbb
mov
cmp
popa
push
int
movsl
pop
call
add
in
mov
rcl
inc
mov
lock
sub
mov
jmp
pop
out
cmpb
in
jae
pop
stos
stc
pop
cwtl
xor
mov
pop
fwait
rolb
ret
mov
ret
push
frstor
push
icebp
aas
lahf
js
dec
mov
out
push
mov
push
or
cld
adc
lret
enter
mov
popa
bound
xchg
fildll
mov
andl
mov
daa
dec
xchg
mov
adc
inc
idivb
cmpsl
enter
mov
mov
mov
pop
jmp
cmp
inc
inc
pop
xchg
test
rcrb
in
lret
mov
outsb
out
or
and
hlt
jne
cmpsb
dec
push
outsl
mov
sub
sahf
lods
clc
loop
stc
xlat
movsl
lcall
inc
aam
mov
jb
or
xchg
lods
mov
push
jmp
mov
andl
cmp
movsb
mov
inc
inc
xchg
dec
aaa
push
loope
adc
in
lahf
mov
pop
sub
inc
mov
push
inc
xor
mov
jle
fadds
popa
add
je
fwait
clc
sbb
jae
mov
cmp
pop
cmpsl
push
or
popa
lcall
inc
popa
xchg
mov
mov
jb
arpl
inc
cmpsb
ret
xchg
or
mov
jbe
jb
fistpl
mov
ss
pusha
push
into
arpl
rcrl
fists
dec
and
movsl
push
pop
aam
sbb
movsl
stos
cmp
pushf
jge
and
pop
movsb
xchg
lret
mov
dec
pop
lock
cld
push
jl
repnz
xchg
outsl
jg
ss
ret
les
cld
mov
cmp
and
sti
sarb
les
test
test
cmpsb
ret
test
sub
add
mov
dec
push
mov
sbbl
mov
dec
pusha
fistl
test
jmp
shr
dec
add
mov
ret
je
cmc
adc
loop
clc
cli
ret
mov
dec
push
ja
mov
jmp
dec
sbb
clc
lahf
mov
dec
addr16
adc
mov
ret
and
loopne
sub
sbb
popa
jl
in
iret
sahf
nop
in
int
fsubrs
add
fnstsw
and
out
shl
sbbl
pop
mov
inc
pop
xchg
inc
daa
xchg
fwait
mov
mov
pusha
fwait
insb
in
mov
xchg
jle
das
jo
out
push
test
mov
dec
push
fnstcw
test
andl
bound
mov
mov
or
rol
ja
cmp
jns
les
or
jb
fwait
cmp
mov
dec
ds
fs
inc
adc
sbb
xchg
mov
test
test
and
jb
add
pop
mov
inc
bnd
add
sbb
mov
andl
cwtl
sub
push
inc
push
aam
test
xchg
adc
in
cld
orb
add
dec
mov
inc
aaa
out
shl
jnp
test
pushf
sub
cmp
inc
add
aad
sbb
lods
sarb
dec
inc
ret
fldenv
inc
rcr
xchg
cmp
andb
fists
mov
jb
stc
mov
std
out
ljmp
rorl
xchg
cltd
or
add
jae
popa
jns
pop
lret
pushf
cmpsl
pop
cltd
cmpsl
mov
imull
cmp
mov
das
jl
lock
mov
or
movb
addr16
cmp
outsb
jg
push
sub
data16
stos
mull
mov
pop
mov
jnp
adc
sbb
dec
mov
mov
outsl
in
popf
mov
inc
jne
xor
insb
popf
lods
cmp
jle
pushf
mov
shrl
push
pusha
ja
cltd
repnz
arpl
lcall
sub
adc
xor
sahf
fimuls
js
cmc
addr16
call
loope
pop
xchg
xor
nop
or
xchg
push
mov
iret
add
jp
inc
addr16
pop
add
in
push
test
lcall
cli
stos
outsb
mov
mov
gs
mov
ljmp
jge
scas
mov
push
jae
pop
imul
mov
sbb
ret
test
cmp
jl
ret
xor
inc
cmp
add
enter
out
cmpsl
pop
pop
test
outsb
push
push
lods
mov
js
push
insb
pop
gs
dec
sbb
cmp
jg
stos
xor
mov
dec
mov
bound
mov
inc
inc
shrl
jmp
pushf
stos
scas
call
pop
rorl
mov
and
lea
cmp
sbb
sub
mov
repz
cmpsb
inc
lret
cmc
mov
push
leave
add
arpl
jmp
shrl
sub
hlt
outsb
mov
ja
lods
dec
jnp
incb
push
clc
std
pusha
mov
dec
aaa
loope
lcall
mov
inc
jae
into
imul
ret
pop
outsl
push
insl
lret
add
and
adc
fcmove
jmp
les
pusha
paddusb
out
js
out
xchg
dec
push
dec
or
sarl
mov
add
aad
sub
xchg
sub
test
cmpsl
xchg
xchg
addr16
jmp
cmp
insl
push
cmp
mov
mov
and
into
sub
fisubs
mov
sub
lahf
add
mov
mov
pushf
push
jb
mov
cltd
adc
adc
sub
shrb
dec
xor
pop
adc
xchg
scas
out
fsts
stos
mov
add
mov
mov
fwait
in
imul
ret
loopne
xlat
xchg
xchg
pop
lcall
mov
movsl
int3
mov
mov
or
push
aad
xchg
mov
pop
popf
jecxz
ds
sub
sub
jae
pop
cmp
mov
and
or
jnp
movsb
sub
push
mov
adc
popa
test
or
lret
jecxz
jl
dec
mov
push
popa
popf
lds
jb
push
sub
inc
cli
mov
adc
jnp
xchg
aad
dec
inc
or
or
cmc
cltd
or
inc
insl
jg
push
mov
hlt
xchg
into
lods
stos
loope
mov
dec
leavew
sub
sub
add
lret
inc
push
jl
mov
mov
mov
gs
outsl
test
and
shrl
gs
jp
stos
stc
push
cltd
cs
cmp
fwait
add
mov
daa
pop
cmp
adc
scas
and
ja
cmp
mov
dec
mov
xor
loopne
imul
inc
add
in
clc
sbb
outsb
jbe
dec
std
cmpb
sub
or
in
jle
xor
adc
int
sub
push
mov
mov
scas
cmp
pop
icebp
repz
nop
mov
rcrb
aam
push
pop
cmp
andb
aaa
ds
cltd
pushf
dec
test
out
cld
inc
pop
ds
mov
dec
shll
inc
push
out
mov
or
mov
pop
fistpl
lea
iret
call
cltd
xor
jo
in
stos
inc
or
mov
jmp
sbb
je
cmc
xchg
mov
repz
test
outsl
ret
addr16
inc
or
out
ss
cmp
out
sub
gs
push
sub
call
fdivrp
dec
pop
sub
rorb
imul
add
imul
scas
pop
xchg
scas
dec
inc
popa
sub
cwtl
dec
and
iret
jl
lahf
push
xor
std
push
adc
sbb
imul
dec
ss
xchg
clc
and
in
sub
xchg
jns
rcrb
and
pop
jnp
add
and
xchg
sbb
lea
iret
xchg
push
call
jnp
sbb
push
jae
shrb
inc
jnp
jmp
shrb
hlt
cmp
pusha
or
aad
cld
cmp
paddq
and
mov
adc
sub
or
add
sbb
dec
sub
adc
xchg
imul
sub
pop
mov
imul
xchg
push
cs
addr16
mov
cmp
xlat
inc
or
lock
push
outsl
add
mov
mov
scas
scas
nop
mov
cmpsl
sbb
ret
add
hlt
fnsetpm(287
jae
in
adc
and
adc
aaa
mov
add
mov
nop
negl
cmp
adc
xchg
pop
lea
and
add
in
arpl
in
mov
push
enter
cld
ja
jecxz
and
cld
mov
int3
lods
cli
rolb
pop
lea
mov
ret
mov
in
out
jmp
vpcmpgtb
sub
ror
std
insl
inc
adc
adc
add
dec
addl
aad
pushaw
mov
js
mov
aad
adc
or
fimull
ds
inc
push
jl
scas
jecxz
sub
repnz
sbb
pop
xchg
je
dec
cmp
jae
and
popf
sub
lock
mov
add
icebp
rolb
ret
mov
xorb
cmp
cmc
fsubs
sub
xor
fstpt
loop
mov
repz
repnz
cwtl
xor
movsb
mov
mov
mov
xchg
fdivrl
loope
add
addb
xchg
mov
jg
daa
sbb
das
or
adc
xor
pop
fcomps
jmp
xor
pop
or
push
xchg
push
outsb
and
ljmp
xchg
push
sahf
mov
pop
iret
push
ljmp
cmpsb
jno
mov
mov
xor
push
adc
or
insl
inc
adc
in
mov
aaa
sub
into
loop
lock
pop
scas
out
pop
rcl
cli
sub
adc
inc
les
cmp
leave
dec
mov
mov
int3
mov
loop
or
into
cmc
mov
dec
lret
jle
mov
andl
dec
leave
mov
aaa
pop
ror
idivl
imul
loop
jecxz
sub
inc
jno
aaa
push
inc
test
aam
sarb
and
outsb
or
push
mov
pop
out
cmpl
nop
popf
in
or
movsb
and
xorb
out
mov
cmp
push
fs
jns
fucomi
inc
xchg
aad
cmp
aaa
int3
xlat
pop
push
push
shr
repnz
stc
mov
outsl
cs
mov
mov
lahf
dec
movsb
aaa
xor
stos
mov
pop
insb
shrb
outsl
cmp
jns
out
mov
xor
or
lods
adc
jbe
aam
adc
xor
lret
and
adc
mov
dec
dec
xlat
xor
or
mov
xchg
or
mov
mov
push
scas
stc
inc
mov
fnstcw
and
daa
add
js
flds
inc
scas
cmp
lahf
mov
or
push
stc
lret
fs
push
xchg
jg
xor
repnz
xchg
test
xlat
mov
lcall
stos
adc
cmpsb
dec
pop
cmpsb
loope
hlt
fidivrl
icebp
add
jmp
movswl
push
enter
pop
jns
dec
adc
popf
lret
out
pop
mov
stos
int3
in
ja
adc
rclb
jae
inc
adc
movsb
cmp
jbe
jo
aas
adc
cmp
shlw
xor
sub
lods
dec
jb
dec
fnstcw
lods
stc
ret
andl
mov
outsb
lods
das
out
jl
sub
ja
clc
pop
mov
xor
fistpll
int3
dec
cmc
icebp
ret
push
mov
lods
popf
cmp
push
pushf
int
dec
mov
sub
rol
fwait
je
push
adc
add
pop
mov
cmp
push
roll
push
lcall
pop
jmp
jbe
rcrl
ja
mov
or
mov
aaa
mov
rcr
jo
xchg
lcall
fcomps
push
lret
aaa
inc
dec
xor
cltd
and
nop
xlat
and
cltd
ss
mov
xorb
test
mov
pushf
or
lret
xlat
int
mov
stc
push
jl
inc
repz
and
cmp
push
aad
jae
mov
sti
out
push
loopne
cltd
inc
in
mov
jle
mov
push
mov
repnz
lret
sbb
mov
mov
in
ds
pop
add
les
push
lods
mov
xchg
lret
pop
mov
int3
test
xchg
mov
bnd
mov
pop
xor
rolb
lahf
sbb
jbe
repz
fwait
mov
xchg
pop
fdiv
roll
aad
jbe
pop
repnz
add
into
xchg
sbb
into
ficomps
xchg
ficompl
xor
adc
adcl
mov
js
mov
lds
mov
dec
lsl
imul
or
or
das
ss
cmp
lret
addb
pop
dec
notl
dec
xchg
test
cmc
jbe
sbb
jbe
jmp
hlt
xor
add
int3
in
xchg
std
mov
out
mov
mov
enter
or
ret
or
fmul
loop
loop
pop
outsb
push
dec
push
sub
add
pop
push
popa
and
movsb
dec
cwtl
jns
jge
mov
jge
cs
fdivrl
sub
jg
xchg
inc
int
or
pop
test
enter
pushf
testb
xor
dec
add
xchg
xor
loope
shr
in
dec
sub
nop
add
pop
mov
xlat
dec
inc
jne
ss
push
pop
fists
js
mov
pop
movsl
or
aad
inc
inc
fcos
push
mov
pop
mov
and
jmp
sub
and
pop
movups
dec
adc
ljmp
push
sbb
add
rorb
mov
fucom
imul
xchg
addr16
mov
cli
or
ja
cli
jmp
sbb
dec
fdivr
inc
orl
lahf
test
push
pop
loopne
or
lret
xor
push
out
jnp
add
xor
rolb
gs
fs
add
movl
aaa
fucom
push
pusha
cmpsb
insl
iret
cwtl
push
in
ss
in
add
aaa
jb
pop
mov
sub
std
cmp
sub
pop
shlb
inc
adc
adc
in
inc
out
aad
pusha
or
sub
imul
jnp
jne
inc
in
adc
dec
ret
out
jo
fs
add
jmp
xor
push
and
push
ret
cmp
mov
or
and
lods
pop
fucomp
dec
mov
xchg
lahf
lahf
cmp
cmpsl
mov
hlt
loopne
sub
add
lret
sub
and
rcrb
push
add
cs
cmp
bound
adc
test
xor
sbb
sub
dec
outsl
or
ljmp
inc
or
inc
stc
fucomip
jge
ret
bound
jecxz
jne
cmp
sbb
inc
adc
loope
cmp
sbb
push
cmp
fstpl
adc
cld
andb
pusha
mov
xor
out
cli
push
inc
js
ljmp
pop
mov
repnz
jmp
cs
sub
imul
add
push
out
xchg
clc
inc
or
lock
jmp
inc
mov
xor
dec
mov
bound
dec
int3
arpl
jae
pop
fidivs
cs
pop
mov
imul
imul
addr16
int3
shlb
xor
xchg
add
inc
aaa
add
fdivrl
insb
orb
enter
pop
push
hlt
std
lods
xor
xor
popa
adc
sbb
mov
jnp
mov
mov
push
jno
xor
sbb
pop
inc
cld
inc
xchg
ja
or
jb
test
pushf
lods
cmp
mov
mov
dec
push
lods
imul
mov
popl
sub
cli
mov
xor
push
dec
jl
pushf
xchg
fidivrl
nop
xchg
iret
mov
inc
js
gs
or
xor
adc
jmp
stos
fdivs
pop
sub
lock
push
stc
cltd
sub
mov
xor
in
fiadds
pop
and
subl
jnp
mov
nop
and
push
mov
mov
sbb
sbb
push
jbe
incb
outsb
lds
jle
loopne
loope
adc
in
sarb
pop
add
out
shl
test
out
sahf
inc
std
pushf
add
rolb
add
incl
mov
lods
sar
jns
jecxz
push
inc
jo
xchg
fwait
jne
sub
mov
jecxz
adc
jg
push
xlat
mov
add
cltd
icebp
sbb
scas
scas
jo
cmp
scas
int
ja
xchg
push
push
sbb
push
xchg
shll
into
sahf
das
cmp
jmp
cmp
out
sbb
push
cs
stos
inc
pop
mov
pop
mull
cmpsb
sar
add
mov
and
adc
xor
sarb
ret
jo
and
xchg
sbb
lock
aad
dec
adc
dec
cmc
jp
repnz
out
jne
lods
jae
mov
push
int
mov
jle
repnz
sub
or
test
lcall
into
jg
mov
inc
xchg
sbb
call
cld
adc
mov
cmp
lods
std
iret
sahf
sbb
testl
mov
add
scas
mov
enter
pop
mov
xor
dec
add
aad
xchg
xchg
popa
push
dec
xchg
out
data16
iret
xchg
jno
sbb
dec
outsb
dec
xor
rcll
jle
mov
adc
pusha
lret
je
loop
pop
out
pushf
enter
jbe
or
iret
pop
xor
jno
add
fxch
sub
xor
pop
insb
mov
mov
push
ja
and
inc
loope
daa
push
pop
xchg
out
cwtl
mov
gs
cmp
leave
cmp
push
fsubrl
movzwl
popf
jecxz
cmp
cs
dec
repnz
ss
dec
ss
mov
negl
iret
push
insl
push
mov
movsl
sbb
lcall
sbb
mov
xlat
adc
fwait
adc
sbb
mov
xchg
and
jle
inc
iret
jno
mov
mov
pop
in
or
in
insl
pop
cmpsl
push
jmp
or
dec
faddl
jno
stos
jg
inc
sub
cltd
lcall
loop
xor
inc
out
xchg
frstor
add
xchg
test
jno
adc
mov
sbb
pop
and
sbb
xor
movsb
mov
xchg
cmp
cmp
push
popl
mov
jp
mov
or
test
shll
pop
popa
in
sbb
xor
add
mov
filds
jb
jp
cmpsb
lods
es
dec
test
pop
mov
or
sbb
sbb
ljmp
scas
lock
push
pop
xchg
sahf
repnz
sub
pop
lods
mov
mov
dec
popf
mov
js
cli
lds
mov
testl
push
lahf
icebp
outsb
rclb
dec
rcrl
mov
mov
adc
inc
inc
scas
pop
xor
cmp
mov
sub
pop
mov
sub
mov
inc
push
lahf
or
inc
mov
sarb
mov
aad
je
inc
shld
xchg
ret
lock
cwtl
adc
add
sub
rcrb
movl
scas
push
into
push
idivl
sub
mov
fstpt
movsbl
pusha
int
mov
cmp
lret
and
out
or
and
out
add
data16
enter
pop
mov
ljmp
push
out
xchg
jmp
mov
scas
or
dec
dec
insb
iret
mov
mov
jmp
mov
pop
gs
or
jp
shlb
rorb
lahf
sub
push
mov
dec
adc
mov
dec
sub
test
outsl
jne
call
loope
mov
in
repz
mov
imul
ret
add
mov
in
ret
adc
cmp
sub
mov
or
mov
gs
int3
mov
push
shl
adc
outsl
mov
inc
push
or
inc
sub
cmp
iret
mov
ja
mov
xchg
push
push
jmp
adcb
mov
mov
fiaddl
icebp
or
sbb
pop
imul
in
pop
or
out
fdivl
pop
ja
cli
cmp
mov
sub
movb
pushf
jno
dec
cmp
xchg
movsl
mov
mov
rcll
js
jo
mov
sub
ret
mov
sub
mov
or
push
hlt
fbld
cmpb
cmp
pop
in
xchg
mov
jo
sbbb
insl
mov
imul
sbb
push
add
decb
testl
xchg
mov
popf
int
cmp
mov
cld
cs
inc
hlt
pop
lods
mov
and
pop
imul
mov
outsb
into
inc
push
jl
inc
mov
and
add
repz
xor
mov
jp
jns
into
clc
fcmovnu
sbb
lahf
mov
popf
mov
push
stos
xchg
scas
scas
lcall
push
scas
cli
sahf
pop
push
pop
xchg
or
sbb
popf
dec
inc
loop
pop
ficoms
mov
jb
inc
mov
push
sub
movsl
insl
cmp
xchg
mov
bound
test
add
add
push
sub
and
jle
shrb
repnz
aaa
push
roll
decl
rcrb
les
sub
xchg
sarb
dec
push
push
daa
mov
adc
inc
xor
add
pop
lret
pop
cs
arpl
cmc
shlb
push
movsb
push
add
ss
fdivrs
bound
cmp
jl
xchg
push
or
mov
pop
xchg
ret
push
mov
mov
jle
mov
or
jb
mov
insl
rcrb
jl
cli
sub
pop
fprem1
insl
les
dec
and
mov
or
push
inc
loopne
pop
push
roll
pop
jns
sub
mov
adc
xchg
or
or
ret
in
pusha
cmc
lods
and
loop
stos
out
push
in
or
sbb
and
pop
pop
cmp
pop
pop
mov
aad
fucom
in
cmp
or
lret
pop
inc
daa
jns
dec
mov
mov
sub
jecxz
pop
jg
pop
dec
enter
jns
mov
dec
inc
lea
mov
push
fdivs
aam
pop
scas
out
dec
mov
push
lret
in
or
test
or
gs
mov
inc
stc
loope
pop
xchg
jnp
and
cwtl
ja
cmp
pop
ret
adc
int3
pop
pop
add
outsl
add
test
inc
jne
outsl
mov
push
test
sti
pushf
cld
aam
jbe
rcr
roll
leave
xchg
xlat
dec
cmp
movsb
stos
add
fcoml
xor
cwtl
arpl
jne
sbb
push
popa
dec
adc
mov
cld
xlat
cld
pop
iret
sub
mov
dec
pop
aaa
dec
loopne
pop
loop
outsl
pop
mov
pop
mov
xor
jmp
or
test
lret
cmovo
pop
pop
outsb
adc
adc
lods
popf
nop
inc
fwait
icebp
fdivs
out
pop
lea
nop
jb
pop
testb
ret
mov
push
sub
fwait
push
call
pop
shr
pop
shrl
mov
push
inc
cvtps2pi
adc
std
jmp
iret
sub
ret
out
rolb
popa
imul
in
negl
cmpsl
js
xor
pop
lods
imul
pop
lret
xchg
sbb
pop
push
scas
add
inc
out
mov
cmp
cwtl
mov
sub
adc
xchg
cmpsl
mov
leave
cld
pusha
nop
dec
sub
lahf
and
mov
push
inc
sub
lods
xchg
hlt
jg
int3
xor
lea
ss
cwtl
mov
int
xor
cmp
inc
jb
jmp
repz
xchg
cld
dec
or
and
add
and
mov
jbe
xchg
dec
mov
mov
mov
loopne
and
int
out
inc
mov
mov
cmpsl
xor
pop
bound
pop
data16
out
xchg
daa
pop
mov
push
push
sbb
xor
and
mov
xchg
cmp
or
push
mov
adc
xor
inc
bound
mov
sub
stos
repz
dec
pop
push
rcrl
loope
xor
lods
push
es
jns
or
jp
sub
outsl
adc
js
xchg
scas
arpl
sub
scas
les
aam
scas
cmpsl
pop
bswap
push
shl
test
scas
rolb
js
mov
popf
enter
sbb
sbb
xchg
jge
loopne
out
pushf
and
iret
leave
int
push
incb
fcompl
push
enter
pop
dec
repz
in
ficomps
mov
ret
rcl
leave
cld
jp
ror
adc
xchg
mov
out
dec
push
jnp
lea
daa
inc
fsubl
popf
popf
jno
mov
mov
jae
movb
in
xor
pop
mov
push
sbb
pop
test
sbb
in
mov
pop
loopne
int
sbb
xor
bound
mov
sub
mov
sbb
xchg
rcr
movsl
xor
popa
add
enter
push
sbb
dec
cli
jns
mov
mov
js
xor
adcb
xor
movsl
ljmp
add
loop
cmp
out
push
cltd
repz
push
pcmpgtd
ja
jmp
or
cmc
xchg
out
mov
leave
sbb
mov
xchg
popa
ret
das
push
pop
jg
cmp
sbb
int
test
dec
fs
xchg
mov
pop
lahf
and
aad
mov
loope
sub
loopne
sub
mov
cmpsl
xor
iret
outsb
sub
cmpsl
inc
test
iret
xor
mov
inc
movb
add
xchg
in
lahf
adc
pop
int
pop
push
jno
inc
mov
xor
and
and
sub
cmpsl
mov
jmp
xchg
pop
cmpb
dec
or
inc
cs
hlt
mov
pusha
mul
fstps
fisttpll
adc
xchg
inc
fbstp
sbb
aas
dec
push
mov
push
mov
sbb
jmp
push
dec
call
mov
jns
dec
xor
out
pushf
pop
pop
fwait
and
xor
xor
mov
dec
cmp
jno
inc
daa
jle
cmc
mov
andl
ds
das
ljmp
stc
jo
enter
and
pusha
sub
arpl
cmpsl
mov
cs
roll
cmp
fisttpll
xor
and
push
aam
push
cmp
dec
in
and
pushf
loop
or
cld
jl
sbb
xor
pop
pop
scas
out
jo
incl
push
iret
insb
add
push
adc
sbb
xchg
cmc
stc
testl
scas
ret
jno
mov
rclb
clc
push
ret
pop
mov
push
aad
shl
daa
aad
sbb
lock
adc
sti
out
mov
imul
cli
les
mov
inc
mov
mov
xchg
or
sbb
testl
test
mov
dec
jl
ret
pop
cmpsl
out
addr16
xchg
dec
inc
pusha
mov
add
sti
push
outsl
dec
sahf
aam
sbb
inc
cmp
mov
fbstp
aaa
in
adc
out
insb
dec
movsl
andb
mov
cmp
test
aas
xor
cmp
inc
sub
pop
xchg
mov
or
push
inc
femms
jns
jbe
xor
out
ja
in
cmp
aam
aas
cmp
pop
out
adc
mov
ss
sub
xchg
shlb
push
dec
and
repnz
loop
jge
dec
mov
loopne
imul
and
lcall
xchg
jb
mov
push
arpl
inc
push
outsl
jge
cmp
and
cmc
xchg
mov
mov
and
shl
outsb
dec
jno
popa
packsswb
push
dec
mov
negb
cmpsl
adc
test
jae
push
call
jle
pop
pop
xchg
jo
dec
and
out
push
mov
call
add
les
adc
and
inc
push
ret
aaa
jo
jo
adcl
ret
inc
xchg
shlb
jmp
lret
sahf
movsb
out
xor
sbb
and
cmp
data16
daa
imull
negb
icebp
outsl
popa
leave
push
mov
adc
pop
int
lea
pop
dec
leave
cmp
push
fistpll
adc
sbb
fmul
sub
add
and
sbb
stos
fsubrs
fdivs
enter
jbe
js
xchg
xor
addr16
jno
adc
lods
ja
iret
mov
jb
dec
loop
sub
push
insb
push
andb
pop
outsb
xlat
mov
push
fwait
add
imul
push
repnz
rclb
lods
fbstp
xor
mov
add
filds
mov
or
jmp
movsl
sbb
jecxz
pusha
xlat
shll
mov
or
sub
imull
dec
sub
jns
data16
loop
scas
and
xchg
adc
notb
in
adc
or
dec
jge
jno
add
sub
jo
inc
lret
adc
sbb
fimull
mov
repz
sbb
lock
fwait
orb
in
mov
xor
hlt
les
and
pop
cltd
xor
push
movsb
cli
and
jge
pop
dec
or
outsl
leave
mov
arpl
jmp
lret
cmpl
iret
add
ret
pop
adc
dec
inc
xchg
rclb
std
call
mov
sbb
lds
je
lods
or
outsb
rclb
dec
cmp
fwait
loopne
push
adcb
loopne
push
fldl
jg
lods
cmpsw
mov
adc
and
adc
orl
mov
icebp
cs
pusha
or
inc
pop
popa
push
xor
jne
push
arpl
adc
xchg
repz
scas
scas
jl
cli
clc
inc
inc
add
shll
mov
aaa
js
mov
jg
scas
loopne
mov
mov
sbb
unpcklps
shrl
dec
jge
pop
lahf
repz
cmp
push
adc
mov
ret
outsb
fidivrs
dec
push
or
mov
repz
repz
cs
sub
das
xor
int3
fidivrl
and
mov
xor
adc
int
mov
adc
push
pop
pop
aam
icebp
xor
cmp
mov
xor
xor
lock
loope
mov
mov
jle
or
xlat
adc
je
js
and
popf
pushfw
imul
out
sbb
mov
xchg
les
add
sub
stos
pop
inc
test
dec
jnp
mov
inc
fst
push
and
push
add
dec
xchg
inc
movsb
orl
out
nop
cmpl
imul
adc
pop
fnstsw
xchg
scas
mov
data16
adc
imul
sbb
cmpsb
cwtl
mov
cs
push
stos
xor
cmc
js
inc
addb
and
ret
pop
mov
dec
dec
add
mov
push
dec
ja
jmp
iret
je
mov
or
loop
jae
mov
dec
mov
adc
pop
push
push
loopne
push
gs
clc
mov
js
mov
sub
jb
cli
push
lret
shlb
mov
dec
push
dec
or
jo
hlt
mov
push
sbb
jbe
mov
cmc
movsl
divl
sbb
mov
or
inc
inc
dec
fadd
or
loope
aad
ret
in
out
clc
pop
adc
xor
popa
xchg
out
dec
mov
push
sbb
lcall
and
jns
aad
fadd
cli
fstl
ss
xchg
push
xor
fbstp
adc
mov
mov
sub
mov
sub
ret
imul
dec
popf
fdivp
lds
sub
cmp
pop
xchg
mov
xchg
cli
mov
xchg
out
jp
push
fwait
sub
cmp
sbb
lahf
jno
lea
ret
jg
fildl
xchg
cmp
push
xchg
jle
shrb
std
cld
lds
cs
movsb
push
fs
loope
jns
sub
sbb
icebp
fcompl
lret
inc
jo
xchg
adc
xchg
lods
fadd
push
sub
push
imul
loop
mov
add
aam
inc
stos
sub
lock
outsl
inc
add
jb
xchg
clc
fisubl
or
or
push
and
lret
gs
scas
les
js
cltd
xchg
push
xor
xchg
jp
daa
mov
dec
xor
adc
inc
stos
or
repnz
mov
xchg
jecxz
fisubrl
fs
int
add
inc
push
dec
jmp
or
kxnorw
jecxz
and
out
into
sub
shll
stos
and
adc
pop
adc
pop
outsl
lcall
ficomps
pop
test
inc
aas
adc
jg
jae
and
fidivrs
lret
mov
fwait
xor
push
and
and
cmp
pop
jecxz
sub
sarl
mov
sbb
mov
shll
setnp
cmp
hlt
insb
mov
out
mov
xchg
xchg
pusha
and
ja
aad
arpl
dec
lea
repnz
pop
mov
jo
cmp
mov
pop
pop
hlt
cmp
push
std
jmp
stc
add
dec
cmpsb
loopne
popa
div
cmp
pop
sub
jmp
and
pop
loopne
int3
inc
in
les
xchg
fs
jle
ds
mov
or
jl
inc
andb
out
dec
mov
pop
sub
ja
pop
in
loopne
mov
pusha
fdivrs
push
cltd
add
lret
das
mov
insb
inc
adc
movsb
mov
loop
sbb
jge
jb
aad
adc
stos
pusha
mov
in
arpl
in
iret
xchg
jbe
mov
lea
pop
adcb
dec
jno
arpl
xchg
cmpl
jb
divb
push
sarb
popa
or
pusha
pop
rolb
loopne
cmp
jo
dec
sub
rorb
xchg
or
jnp
xchg
popf
rolb
cmp
scas
push
stos
hlt
insl
push
pushf
adc
lcall
push
cmpsl
mov
mov
xlat
pop
mov
loope
push
xchg
iret
sbb
add
push
rcl
adcl
pop
jp
xchg
cmpsb
or
xlat
sbbl
fcmovne
ss
cmp
or
out
inc
mov
fidivs
or
mov
mov
dec
jne
push
enter
das
mov
shll
stc
loopne
imul
mov
add
test
fwait
insl
sub
loop
push
mov
jmp
jae
leave
es
pop
clc
mov
jbe
inc
movsl
pop
lcall
fldenv
jp
das
fstps
std
mov
sbb
leave
mov
and
and
adc
mov
dec
out
in
pusha
sbb
mov
adc
sub
idiv
imul
mov
push
jl
imul
cwtl
inc
jne
mov
and
mov
dec
jno
imul
sbbb
and
inc
sbb
das
ret
nop
add
lock
daa
inc
cmp
in
negb
ret
sbb
mov
iret
in
cmc
int3
or
or
mov
inc
arpl
sahf
inc
dec
js
bswap
pushf
add
fucomi
xor
int3
or
cmp
or
pop
loope
and
pop
stos
hlt
push
inc
pop
cmp
or
xchg
std
std
int3
sbb
cld
fxch
shl
and
cld
cmp
test
push
push
or
lret
or
rcrb
cwtl
jnp
add
nop
roll
mov
fs
jne
xor
and
lock
xchg
faddl
sbb
pusha
sbb
fstp
xrelease
cmp
and
fldcw
ret
cmp
cld
or
scas
lock
jo
aam
add
adc
ljmp
iret
fdivr
lahf
mov
or
sub
aas
xchg
ds
or
or
repnz
jnp
out
loop
cltd
lret
xchg
sbb
jp
inc
mov
cmp
pop
mov
xchg
mov
xor
rcrb
fsubs
mov
jno
xor
pop
mov
lahf
sub
lahf
inc
pushf
sbb
pop
ficoms
push
dec
jg
add
lahf
push
daa
lret
sbb
sub
add
sub
dec
out
mov
cld
push
mov
pop
repz
mov
fldcw
adc
into
xor
out
xchg
lock
cli
mov
fiadds
mov
pop
lock
hlt
inc
jae
in
dec
jmp
inc
test
sti
mov
push
roll
xlat
loopne
cld
dec
pop
outsl
cmpsl
push
push
shll
xchg
fdivrl
and
or
mov
testb
nop
mov
xchg
mov
jns
call
cmpsl
inc
mov
frstor
mov
add
adc
jb
mov
shl
mov
cmp
jmp
jg
xlat
jns
add
xor
lea
stos
rorb
mov
out
pop
mov
loopne
sarl
add
mov
push
xchg
daa
daa
fldcw
addl
add
sub
xchg
dec
dec
stos
lret
xchg
inc
repz
inc
mov
sbb
pop
and
jne
mov
jnp
xchg
test
sub
enter
scas
pop
shrl
lods
xor
push
das
dec
cvtps2pi
push
dec
orb
ds
pop
in
push
jmp
test
dec
mov
xor
in
and
jae
mov
pop
or
push
imul
cmp
push
pop
pop
fsub
test
inc
xchg
jb
sub
add
lret
dec
pushf
repz
pushf
jns
and
arpl
mov
flds
ja
leave
adc
jb
out
fdivl
mov
shrl
imul
add
xchg
cmp
sahf
ret
mov
xchg
xchg
in
adc
shl
addr16
scas
mov
mov
ja
sub
icebp
adc
sbb
int3
pop
aaa
xchg
sub
jle
sub
jae
hlt
mov
sub
mov
setno
pusha
cmpsl
mov
out
xchg
nop
sbb
rcll
dec
or
push
inc
cli
js
cmpsb
cmp
jbe
ss
push
fwait
clc
jg
fdivp
test
outsb
inc
jno
mov
fs
adc
xor
mov
jge
clc
cmpsb
mov
jp
sbb
mov
fidivrl
jb
repnz
loopne
lods
sbb
jns
mov
inc
scas
add
rcrl
xor
dec
inc
ficoms
jmp
in
cmp
xchg
aas
mov
pop
cmp
outsb
loop
int3
fmuls
enter
xchg
shll
popf
mov
fs
pop
addr16
cmp
cmp
clc
mov
inc
call
test
shl
pop
dec
add
adc
push
scas
mov
mov
pop
rorl
lret
mov
lds
jo
mov
out
int
rcrl
push
jae
icebp
sbb
pop
jb
mov
negb
mov
inc
frstor
mov
push
dec
shr
adc
mov
xchg
jmp
pusha
movsb
fs
xchg
pop
sahf
ret
cmp
imul
fiadds
repz
ljmp
dec
adcl
cli
mov
mov
in
mov
mov
in
jne
out
lret
push
gs
adcb
jae
arpl
dec
cmp
jmp
add
inc
mov
sbb
mov
mov
movsl
aam
movsb
and
mov
cmp
cmp
aas
int
mov
push
mov
jno
subl
in
mov
fildll
mov
js
xchg
popf
stos
xchg
push
aam
xor
mov
fsubr
lea
adc
mov
daa
dec
xor
xchg
push
clc
xchg
and
xchg
es
cmpb
addb
fwait
shll
lods
xchg
mov
lcall
mov
insl
jecxz
aam
je
or
inc
xchg
jno
sbb
frstor
mov
lahf
ficoms
imul
lcall
aam
stos
in
mov
xchg
outsl
negl
adc
popa
aas
jns
mov
xchg
lahf
xor
cmp
xchg
out
mov
lods
sub
mov
cld
rol
dec
in
fld
gs
scas
push
das
and
push
xchg
push
test
out
sbb
dec
out
popa
xor
and
repnz
lret
and
cwtl
les
xor
negb
call
repnz
mov
push
leave
fwait
cltd
je
push
push
sub
pushf
sarl
shrl
popf
fisttpl
out
mov
clc
pop
lret
stc
addr16
fadds
adc
loopne
xchg
xchg
xchg
jbe
jmp
ja
hlt
ja
sub
repnz
jmp
out
dec
test
jmp
push
repnz
je
pop
xor
std
std
scas
pop
testl
push
mov
mov
icebp
lret
sarb
sub
push
adc
cmpsl
fcomi
insb
aam
adc
xchg
ljmp
add
sbb
in
les
in
stos
out
aad
xor
aas
xchg
push
mov
pop
popa
in
jl
insb
push
jle
jmp
lock
addb
outsl
pop
loopne
call
mov
fisttpl
mov
mov
ljmp
pop
xor
jl
sbb
xchg
xchg
push
fcompl
lret
cmpsb
add
stos
popa
fisubrl
rcrb
pop
pop
cld
jb
adc
movsb
ja
dec
inc
cwtl
inc
dec
mov
loopne
mov
mov
cmpl
ja
push
mov
insl
mov
or
leave
dec
out
lods
sbb
adc
xor
or
mov
es
adc
orb
and
sub
dec
and
push
mov
add
inc
ror
repz
mov
pusha
push
fs
pop
test
push
and
push
mov
sti
insl
xor
int3
lahf
xchg
inc
out
test
xchg
push
pop
imul
imul
imul
ja
dec
mov
xchg
into
add
mov
cmpsl
loope
and
add
in
xor
aad
dec
pop
pop
aam
in
clc
add
into
sarl
mov
push
enter
xlat
out
add
sub
pop
xchg
lock
push
test
mov
gs
clc
dec
mov
shr
js
mov
jmp
pushf
add
or
pop
mov
adc
scas
pusha
add
inc
xor
loop
xchg
dec
lcall
aad
mov
sbb
lcall
mov
jle
ret
aad
mov
daa
mov
inc
dec
xor
sub
adc
stc
test
icebp
or
ja
lods
pop
adc
and
test
adc
scas
adc
add
add
inc
pop
fisubl
sbb
dec
ficomps
scas
inc
aam
popf
jp
sub
xchg
cwtl
xchg
in
mov
or
int3
int
mov
jno
add
inc
adcl
mov
inc
jbe
lock
lods
mov
add
pop
cmp
int3
ja
inc
pop
arpl
insl
cmp
add
mov
lahf
das
push
cli
mov
or
mov
xlat
xchg
ret
mov
outsl
out
arpl
push
mov
ret
pop
push
cmp
xorl
xor
push
adc
ss
fiadds
jo
fcmovnbe
pop
rcrb
fisubs
push
mov
jnp
arpl
sub
dec
cmc
out
mov
mov
ss
test
pop
scas
aam
addb
inc
sar
in
repz
ss
loope
ret
je
mov
cmp
xchg
enter
jns
xchg
push
xchg
push
push
mov
pop
mov
test
bound
xor
scas
andb
loope
inc
mov
test
out
in
cmp
pop
shlb
inc
int
in
mov
lock
push
data16
lods
popf
test
pop
fs
cmp
cmpb
and
xchg
adc
rcrl
in
push
fcomps
dec
ret
pushf
sti
push
dec
test
je
xor
cltd
mov
je
fcmovne
jae
lcall
dec
pop
jecxz
adcb
push
cmpsb
xchg
enter
sub
xchg
out
push
pop
int
in
mov
jno
andl
add
shll
outsl
mov
xchg
dec
rorl
mov
dec
mov
sbb
mov
add
mov
xchg
hlt
test
out
movsb
fidivrs
mov
sbb
sarb
sub
push
jae
add
in
dec
mov
and
pop
dec
push
in
lea
fists
xchg
loopne
pushf
mov
hlt
ss
mov
sub
rcl
test
mov
insb
roll
test
jge
pop
pop
lcall
ss
arpl
fdivrp
ss
movsb
sahf
and
test
mov
push
ds
pusha
sbb
mov
orl
push
or
je
into
mov
fbstp
gs
xor
xor
mov
and
int3
sub
popf
lods
dec
sub
jnp
xor
pop
test
shrl
cmp
cmpsl
lahf
dec
mov
subb
iret
inc
and
out
add
lock
fsubrl
push
jmp
jo
inc
sbb
add
loopne
pop
xor
shrl
and
sahf
push
xor
popa
into
mov
cmp
sbb
dec
xor
out
jno
mov
pop
fsubs
or
adc
push
push
pushf
jae
fwait
mov
mov
test
mov
jp
pop
sbb
loop
gs
add
and
cs
dec
adc
addb
test
fldcw
pop
insb
inc
cmc
test
sti
andl
fwait
sbb
sbbb
cmpsl
xor
xchg
mov
mov
cs
lea
sbb
xchg
sub
int3
xchg
cmp
or
or
testl
adc
int
jno
pushf
les
jno
lret
orl
cmc
mov
add
shlb
lret
outsl
mov
popa
pushf
lock
std
clc
jnp
push
jb
sbb
ret
cwtl
test
js
je
inc
jmp
cmp
into
jo
add
das
cmpsl
inc
popf
xchg
xlat
pop
mov
jae
out
jp
jno
insl
call
pop
fnstcw
sub
adc
fcoml
stos
call
cmp
loop
mov
js
sub
push
sub
sbb
jbe
dec
jle
push
inc
push
pop
cmpsl
pop
inc
fisubs
jo
cmp
push
mov
aaa
mov
lea
out
stos
stc
mov
or
notb
xchg
repz
or
shll
or
in
daa
sbb
xor
inc
inc
dec
and
xchg
divb
test
ret
sub
fstl
sarl
cmp
stos
incb
push
sub
gs
pop
xor
mov
es
aas
sub
lods
or
pop
scas
dec
fsub
lahf
icebp
xchg
and
mov
out
call
stos
cmpb
xor
stc
sub
je
fsubrs
adc
and
subl
out
stc
fbstp
call
or
int3
js
xor
xor
insb
sbb
xchg
cmc
xchg
add
xchg
lds
push
push
ret
pop
scas
xchg
loope
push
inc
adc
int3
and
pop
jle
cmp
ficompl
dec
sbb
cmc
or
hlt
mov
movb
or
mov
fmul
xor
mov
scas
js
xchg
jp
push
xchg
sar
sbb
testl
xchg
mov
adc
or
lcall
icebp
std
mov
ret
aad
mov
nop
add
mov
xor
loope
rorl
aad
add
xchg
dec
fstl
ret
stos
fstl
xlat
inc
aaa
dec
xchg
lea
pop
jmp
je
mov
sbb
cmovbe
push
iret
dec
xchg
cld
and
bound
stc
fs
xor
push
add
or
pop
aad
out
cs
ficoml
cli
jno
outsl
daa
fs
sbb
das
xchg
js
ficomps
push
rolb
push
jl
add
xchg
ss
jmp
fisttpll
inc
mov
out
imul
mov
push
push
adc
mov
xor
xchg
sbb
aam
jp
add
jg
js
daa
insb
pop
xchg
loop
adc
jmp
mov
xchg
test
ja
aam
das
cmpsb
xlat
dec
mov
cmpsb
inc
lock
xchg
ss
mov
jg
mov
lods
or
outsb
mov
push
outsb
adc
sbb
cmp
das
shrl
mov
test
mov
lcall
add
cmp
std
push
add
lds
jmp
ret
inc
out
dec
gs
arpl
and
ret
mov
push
cli
xchg
or
sarl
jbe
movsl
pop
push
into
inc
add
jmp
sub
pop
lods
sbb
inc
sub
sbb
xor
adc
xchg
jge
mov
fwait
stos
cmp
js
mov
es
fcompl
jae
cmp
lods
sbb
lods
js
and
push
pop
and
push
add
mov
in
jg
in
les
dec
pop
addl
and
pop
mov
sub
jb
jge
push
cmp
xlat
mov
insb
stc
add
pushf
mov
arpl
adc
shll
cmp
and
data16
mov
mov
push
test
add
divl
cmp
adc
or
imul
push
jl
mov
icebp
cld
je
sbb
sub
mov
rcpps
or
lock
push
stos
pop
and
inc
and
xchg
scas
push
fstpl
imull
negl
adc
sub
stos
insb
mov
insl
jecxz
mov
int
pop
fstpl
out
rclb
mov
and
xor
aad
callw
iret
mov
repnz
adc
outsb
cltd
sbb
mov
push
outsb
mov
mov
pop
xchg
in
stos
popf
or
xchg
inc
loope
lcall
dec
imul
pop
aas
mov
add
lret
out
imul
mov
xor
stc
iret
mov
add
lds
pop
negl
xchg
mov
cmpsl
dec
pop
paddusb
dec
push
adc
ret
dec
ljmp
scas
stos
pushf
jnp
adc
sub
xor
insl
inc
or
clc
mov
mov
add
jg
adc
scas
iret
dec
and
imul
fcomp
cmpsl
inc
and
ror
daa
cmp
push
push
repnz
jno
rcl
bound
leave
ljmp
cmp
add
or
push
pusha
jp
loope
and
out
test
xor
outsl
and
dec
je
aam
lea
sbbb
movsl
xchg
movsl
clc
xor
je
stc
xchg
sub
movsb
jb
inc
jecxz
movsl
and
jb
rclb
pop
mov
cmpsl
sbb
add
movsb
pop
add
test
in
pop
and
pop
pop
mov
jne
sarb
fwait
sbbl
lret
ret
lea
roll
xor
in
sbb
xchg
sbb
mov
mov
and
push
ljmp
outsl
inc
mov
add
mov
xor
sub
testl
pusha
filds
jg
mov
sahf
sub
cmc
call
cltd
mov
xchg
clc
test
inc
fcmove
push
stc
fcmovnbe
dec
lods
call
and
flds
popf
rcrb
cs
out
mov
push
inc
lds
pop
push
dec
mov
arpl
in
pop
sbb
mov
jmp
into
mov
pop
push
sahf
or
in
adcb
cmp
shl
and
push
aam
scas
lods
movsb
popf
pop
into
xor
push
add
mov
in
cwtl
sahf
mov
imul
sub
in
dec
push
dec
push
outsb
ds
mov
inc
clc
insb
frstor
add
mov
mov
repnz
in
sbb
xchg
subb
insl
mov
div
mov
aaa
ss
push
push
pop
cwtl
std
push
mov
subb
inc
xchg
xlat
inc
call
lret
mov
jmp
dec
mov
ja
jae
leave
repnz
xchg
cmpsb
addr16
sbb
ret
add
loopne
push
repz
pop
jmp
mov
mov
mov
sbb
xor
cs
sub
sub
ret
clc
js
jmp
clc
scas
inc
push
nop
in
sub
or
cmp
and
sbb
pop
lcall
aad
insl
cli
xor
mov
in
sbb
je
cmpl
xor
pop
out
inc
rcrl
cltd
ficoml
ja
dec
jb
out
loopne
in
or
test
fdivrl
or
adc
mov
pop
or
std
jl
sbb
mov
push
cmpsb
push
loope
cmp
inc
adc
and
xor
clc
shll
add
pop
das
addr16
int
jnp
sub
add
mov
inc
or
ror
loop
mov
cmp
mov
in
in
sahf
add
mov
insl
sbb
cmpsl
int
inc
jnp
jo
in
lahf
add
jno
pop
add
pop
xchg
ret
inc
loope
pushf
xchg
fmull
aaa
cmc
cmp
mov
pushf
cli
faddl
cmp
xchg
mov
lret
or
cld
dec
jne
dec
jl
test
in
int3
inc
push
int3
jne
pushf
mov
stc
hlt
mov
shll
push
add
xor
cmpsb
xor
notl
pop
mov
ret
les
pushf
xchg
push
repnz
mov
mov
cmp
loop
add
mov
xchg
jg
movsb
mov
ret
mov
xchg
cmpsl
cmp
dec
repz
push
shll
or
xor
xchg
pop
xchg
cmp
and
popa
mov
pop
pop
fisubrs
cmp
mov
mov
je
cld
xlat
pop
jmp
mov
xchg
and
xor
movsb
scas
mov
cmp
jecxz
jb
push
movsb
addr16
pop
xchg
call
fbld
aaa
sbb
mov
lea
cmp
insl
imulb
xor
inc
test
mov
xor
repnz
into
push
jb
sbb
inc
ds
xchg
insb
and
dec
bound
daa
ds
cwtl
and
fimull
mov
inc
inc
test
call
lds
or
lcall
jne
mov
mov
sti
repnz
das
popa
adc
mov
mov
fists
cmp
fisttps
mov
sub
inc
ljmp
ret
sarl
push
pusha
mov
sub
rol
cmpb
aas
aaa
das
cmc
sti
shrl
shl
jl
xor
add
push
adc
nop
pop
push
rorl
cmp
mov
sahf
cltd
xchg
iret
fidivrl
and
sbb
leave
int3
sbb
jmp
dec
add
cmc
inc
xor
adc
jne
and
repz
fidivl
cwtl
adc
push
adc
xchg
das
push
nop
mov
jmp
fs
cmp
daa
pushf
dec
jecxz
cli
ret
xchg
cmpsb
andl
push
aaa
scas
ja
jp
jbe
xchg
inc
into
cmp
roll
dec
jecxz
lcall
enter
int3
outsb
push
adc
lds
sbb
das
cmc
pop
scas
outsl
jae
jae
mov
adc
popa
inc
dec
mov
cmp
xor
addr16
orb
popf
fmuls
test
xor
mov
dec
jge
ljmp
mov
ss
lods
cmpsb
adc
pop
mov
xorb
mov
das
or
je
lods
push
jbe
pop
sub
ss
or
inc
aad
idivl
into
adc
movsl
mov
cli
jecxz
jb
loop
je
stos
sar
cli
xchg
pop
lcall
or
testl
jno
dec
stos
js
cwtl
je
jecxz
xchg
lea
test
adc
outsb
in
out
scas
sbb
shrb
push
aad
jns
aam
sbb
andb
cmpb
fisubrl
mov
movsl
into
aad
mov
mov
ljmp
cmp
sub
add
loop
push
cmp
movb
lret
mov
mov
outsl
pop
fldl
aas
movsl
or
jg
out
es
add
scas
test
jg
pop
fdivl
mov
test
dec
sbb
testb
ljmp
fwait
mov
movsl
inc
sti
notb
bound
xchg
cli
mov
push
push
jge
ret
or
aas
inc
adc
mov
jle
outsb
fiaddl
sbb
sbb
dec
pop
pusha
or
in
sbb
dec
push
push
xor
cmp
pop
aas
andl
test
inc
ds
div
add
movsb
es
rclb
push
nop
adc
sub
sbb
pop
divb
jg
xor
mov
mov
loopne
das
mov
out
mov
decb
jns
mov
sub
call
je
and
aas
testl
or
adcl
sti
ret
out
push
hlt
divb
les
cmp
imul
or
add
cld
xor
xchg
inc
mov
push
mov
les
pop
out
jg
sbb
and
pusha
test
icebp
ds
es
insl
adc
or
inc
divl
push
outsb
jno
add
mov
add
andb
lock
repnz
sahf
outsb
call
cltd
out
pop
rcll
movsl
int
ret
jbe
or
ja
ret
xor
fcoms
xor
dec
aam
push
sbb
xor
or
std
fcmovne
cmpsl
jl
and
fdivs
pop
dec
cmp
add
iret
sbb
mov
jae
fcmovbe
fnstenv
fwait
les
cmp
int
popf
sti
imul
inc
frstor
adc
sbb
pop
test
pop
dec
sbb
cld
das
xchg
sahf
test
testl
jne
or
aam
ret
adc
loope
clc
mov
push
dec
xchg
jge
adcl
mov
je
or
sarl
mov
xor
mov
jnp
scas
add
pop
jno
pop
mov
int
aaa
mov
inc
movsl
add
xlat
adcb
aas
call
push
cmc
lods
mov
fcomps
adc
lret
xor
pop
fdivrl
dec
lahf
es
iret
ss
xchg
jl
icebp
clc
es
cmp
pusha
jo
sub
subl
cmp
ljmp
mov
push
ret
sbb
fwait
add
push
sahf
je
or
ret
loop
push
aas
fiadds
in
mov
mov
sub
xorl
and
mov
jle
gs
sbb
pusha
adc
push
into
push
das
lods
push
and
xchg
clc
pop
cmc
mov
scas
fstpl
stos
and
xor
fucomi
mov
or
leave
jmp
gs
xchg
dec
and
or
out
mov
push
je
pop
mov
mov
pop
add
push
outsl
jbe
test
ficoml
mov
inc
test
dec
lahf
push
cltd
outsl
adcl
int3
scas
outsl
inc
sub
mov
sub
push
inc
mov
xchg
fbstp
sub
mov
sub
das
xchg
test
and
or
nop
dec
stos
cwtl
out
mov
add
pop
test
cmp
pop
popa
movsb
sahf
push
push
negb
fists
mov
push
lret
pop
mov
cli
imulb
or
rcrl
add
push
hlt
ret
adc
enter
dec
cmc
imul
lea
push
dec
adc
xor
cmp
fisubl
pushf
inc
inc
push
lods
mov
push
pop
stc
and
lods
xor
jnp
in
pop
aas
mov
addb
cltd
push
test
add
and
pop
repnz
push
pop
loopne
xor
add
inc
imul
pop
fisttps
inc
jae
aam
inc
xor
cld
icebp
push
sbbl
and
test
fnstcw
xor
or
iret
cmc
cmp
inc
ficoml
negb
cs
cmp
repz
pop
xlat
fisubrl
mov
push
push
push
stos
dec
lea
or
and
mov
aam
add
add
movsl
fnstenv
lret
sub
test
add
adc
mov
sahf
movsl
rcl
jnp
aad
dec
call
jnp
xchg
adc
mov
mov
insb
mov
stos
loope
clc
mov
icebp
adc
pop
push
inc
shl
add
insb
test
fnstcw
sub
mov
mov
push
nop
dec
pop
daa
sub
or
sub
js
fsubrl
stc
mov
mov
fs
pop
pop
aaa
scas
jae
push
and
in
jae
repz
and
test
sub
mov
gs
xchg
insl
out
das
or
jno
inc
insl
fmull
pop
pusha
ficoms
imul
in
pop
cmc
cwtl
lods
xor
mov
cmpsb
jg
lock
pushl
int3
mov
jmp
fiadds
es
cmp
adc
pop
xchg
fdiv
add
xor
cld
testl
push
jle
xor
mov
lcall
test
out
push
outsl
and
sub
dec
mov
push
repz
lret
and
inc
and
testb
cmc
jge
sub
xor
mov
nop
jge
xchg
cmpsb
mov
popf
jmp
xchg
ja
cmp
push
cs
inc
mov
jge
loop
je
sbb
mov
cld
subl
sub
or
sbb
pop
loop
movsb
add
jle
mov
xlat
lods
jne
mov
bnd
push
or
sbb
push
mov
test
mov
push
mov
pop
ljmp
inc
and
cli
inc
mov
pop
sbb
mov
push
addl
hlt
out
push
das
repnz
cmp
add
xor
inc
jl
mov
jns
in
popa
jecxz
aad
js
enter
imul
out
push
outsl
scas
xchg
int3
mov
fbld
mov
xor
out
adc
into
mov
rorl
sbb
in
lods
enter
call
repz
push
fsubr
imul
sbb
pusha
add
lcall
sbb
adc
xchg
aaa
or
lods
push
aad
inc
xchg
dec
loop
xchg
xor
shll
push
sub
bound
lods
shr
lret
movsb
andl
cmp
dec
cli
adc
ja
add
loop
les
mov
ja
mov
jge
add
xor
mov
add
lds
jne
xchg
aas
push
jnp
in
jae
inc
lock
imull
pop
in
out
inc
sti
scas
xor
outsl
insl
out
or
ds
mov
jmp
jnp
jg
and
dec
and
aam
bound
jmp
lea
imul
daa
mov
fdiv
and
mov
add
cli
xchg
cmp
rorl
inc
shll
fucomi
pop
call
sub
or
lock
cld
dec
mov
addb
mov
fwait
mov
push
out
sbb
xor
adc
rorb
cmc
jecxz
jbe
test
fxch
iret
lods
ret
jne
and
out
sahf
push
dec
add
ja
movb
mov
dec
mov
mov
mov
andb
sub
shrb
shll
aaa
out
imulb
sbb
dec
in
out
std
shlb
rcrb
or
lret
leave
mov
hlt
imul
or
or
filds
xlat
repnz
cmc
adc
stos
fwait
rcrl
and
lods
dec
sbb
mov
aaa
repnz
test
mov
insl
dec
xchg
inc
inc
daa
xor
jne
adc
lea
inc
aam
xor
ffree
inc
jnp
rol
cmp
sub
push
scas
movsb
jno
insl
pusha
lret
jecxz
dec
mov
cmc
clc
scas
adcl
adc
jbe
jg
popa
enter
xchg
lods
sti
cmp
popa
fcompl
jb
ja
jb
popf
sti
jno
divb
rorl
add
or
pusha
arpl
or
stos
cmp
inc
push
cmpsl
test
mov
or
inc
sbb
arpl
push
je
loope
mov
mov
roll
sbb
or
dec
or
push
jbe
cmp
shr
adc
or
lahf
mov
scas
fldcw
rcrl
sub
loopne
mov
add
and
inc
and
xchg
enter
push
sub
popa
adc
mov
int
mov
dec
mov
or
adc
or
mov
cmp
pop
in
mov
sub
xchg
std
leave
je
loopne
aad
xchg
ret
lods
mov
jne
sbb
lahf
jp
cli
test
mov
fildll
loope
stc
mov
sarl
dec
test
scas
cmpsl
test
lcall
movsb
outsl
dec
aaa
cmp
lock
dec
fadds
fsubl
add
gs
xor
dec
add
lret
es
outsl
lods
std
jbe
fdivrs
add
inc
fcmovne
mov
push
dec
ret
ljmp
mov
jmp
movsl
jge
push
mov
dec
mov
faddl
fsts
dec
pusha
out
xchg
mov
iret
adc
jne
gs
push
iret
das
std
add
rcl
pcmpgtd
sub
xor
fwait
push
iret
add
add
push
mov
lods
leave
stos
aas
mov
lret
xchg
cmp
jns
loopne
fcom
mov
les
jg
jl
pop
pop
fcoml
imul
ljmp
enter
daa
jno
jb
aaa
or
mov
fmull
sbb
loope
mov
test
lock
and
stos
push
cmpsl
roll
scas
imul
sbb
fnstsw
mov
mov
hlt
pop
sub
cmc
std
push
fwait
data16
fisttps
dec
mov
in
and
std
push
inc
sbb
sti
sub
scas
and
xor
jnp
adc
or
xor
mov
sahf
imul
mov
adc
mov
fistpll
or
rolb
data16
in
jmp
fimull
dec
or
cmp
add
mov
cmpsl
xor
inc
adc
mov
inc
pop
in
sub
xor
gs
and
pop
negl
int
xchg
scas
mov
inc
sti
fcompl
loope
pop
pop
inc
int3
mov
dec
movsb
push
push
sbb
adc
inc
jb
subb
jecxz
insb
jns
in
mov
push
jmp
pop
dec
xor
jge
xor
lret
add
xor
push
cmpsl
and
or
add
shlb
test
sub
testb
ljmp
xlat
mov
iret
out
pushf
loop
fucomp
cmc
lods
sub
push
xor
xchg
int3
or
jmp
push
mov
popa
xchg
sti
pop
test
outsb
ljmp
mov
xchg
mov
pushf
fstps
outsl
call
add
int
test
roll
repz
mov
aad
js
jecxz
mov
inc
push
adc
ret
gs
xchg
xchg
shlb
push
mov
pop
mov
dec
cmpl
inc
dec
lahf
push
adc
jno
lea
xlat
add
ds
test
inc
cwtl
cli
mov
fisubs
shrb
rcrb
pop
addr16
add
cmc
jle
sbb
ret
adc
xchg
int3
sbb
inc
mov
mov
retw
hlt
jg
jmp
jb
stos
push
imul
add
andb
adc
inc
adc
jne
fldt
mov
testb
or
js
cmp
pop
jno
ja
inc
add
jns
sub
and
pop
push
push
push
xchg
sub
mov
push
pop
gs
adc
mov
adcb
shlb
xchg
inc
leave
iretw
sub
scas
loopne
adc
and
adc
sbb
out
clc
shll
pop
mov
push
test
insb
mov
lcall
repz
bound
sub
push
jbe
rorl
lahf
cmc
add
pop
mov
jle
scas
enter
push
in
outsl
add
sub
lods
cwtl
dec
fimuls
or
pop
mov
test
push
call
or
xor
pop
lret
mov
add
push
dec
jg
add
out
or
push
inc
cmp
and
dec
jecxz
and
or
jmp
push
clc
mov
pop
es
in
test
jg
icebp
es
int3
hlt
ret
push
leave
fimull
rcl
push
divb
inc
xchg
inc
rol
leave
pop
in
imul
test
or
or
mov
daa
pop
pop
inc
test
call
cwtl
jb
and
in
mov
imul
es
jp
jnp
test
push
jmp
testl
ss
mov
sub
fcoml
xor
nop
clc
out
icebp
bound
jo
loop
es
test
pop
xor
dec
mov
pop
jne
out
sbb
xor
cmp
clc
nop
rcrb
lahf
fstpl
test
push
loope
leave
ds
icebp
xchg
sub
mov
jno
xlat
mov
push
inc
aad
iret
lds
rorl
sub
in
mov
pushf
inc
jmp
rol
out
push
negb
pop
sub
inc
mov
or
or
psubsb
repnz
inc
cmp
xor
out
sub
sub
out
xchg
addb
cs
push
adc
jnp
call
hlt
xchg
stos
lret
lds
cmpsl
out
and
and
push
sub
lahf
add
mov
sbb
adc
mov
cmp
fidivl
mov
xor
xchg
or
push
mov
aad
popf
or
dec
pop
mov
sbb
sar
cmpsb
push
lea
fildll
jo
aad
jmp
or
je
cmp
mov
mov
pop
pop
arpl
aam
sbb
daa
mov
xchg
or
mov
dec
mov
pop
addr16
dec
mov
lods
mov
into
lds
movsb
shl
jge
inc
cmc
in
js
jp
add
jo
xor
cmpsl
jns
jge
mov
xchg
xor
cs
fldl
mov
cmp
xchg
lcall
cmp
in
loopne
push
inc
push
dec
xor
mov
add
xchg
mov
add
add
inc
cmpsl
sar
sbb
jmp
ds
popa
and
jg
fdivs
mov
xorl
jl
pop
js
fsubl
add
dec
lcall
cltd
rolb
dec
add
mov
je
iret
cltd
movsb
adc
pushf
stos
fsub
lods
add
or
repz
dec
sub
fsubrp
jg
cld
mov
bound
push
or
pop
cmp
sub
cmp
mov
sub
and
fidivl
lahf
adc
fstps
scas
mov
jmp
pop
or
xchg
roll
cld
lock
fs
pop
scas
push
inc
arpl
subb
je
xor
inc
test
push
mov
adc
and
cmp
test
cld
out
adc
cwtl
jg
sub
xchg
hlt
mov
mov
sbb
or
push
test
inc
or
pop
repnz
add
xor
push
cli
cmpl
sbb
into
cmpsb
shr
mov
movsb
ficoml
imul
pop
ljmp
mov
mov
clc
ljmp
mov
xchg
push
xor
dec
add
cwtl
lock
mov
inc
cmpsl
dec
sahf
push
fistl
xor
add
test
ret
cltd
adc
fmul
fildl
jp
and
jnp
and
add
ret
mov
ret
sbb
sbb
bound
divl
mov
roll
xchg
bound
roll
xlat
bound
inc
jnp
andl
pop
inc
xor
inc
add
mov
xor
mov
add
inc
or
testl
inc
inc
mov
jo
cltd
out
mov
loop
pop
pop
es
pop
add
add
mov
shr
enter
jp
inc
xchg
sbb
cs
mov
addr16
xor
xchg
inc
pushf
lret
mov
add
movl
pop
jnp
xlat
fidivrs
out
scas
idivl
fs
outsb
gs
mov
xlat
push
xchg
ret
adc
pushf
popa
sahf
inc
cs
push
cmpsb
outsb
pop
lahf
cltd
hlt
dec
loopne
and
cmp
mov
fwait
mov
or
es
loop
fs
repnz
ret
push
enter
es
or
ja
or
xchg
xchg
fdivrl
mov
ret
xchg
out
mov
es
jge
test
cwtl
xlat
and
jp
movsb
jne
xor
clc
mov
rorb
jnp
nop
xchg
adc
out
jl
arpl
add
pop
or
aas
aam
jle
ds
xchg
dec
cmp
sub
sub
or
inc
out
sub
andb
jo
adc
mov
jecxz
mov
mov
insl
dec
mov
sub
nop
bound
push
insb
inc
mov
push
push
sbb
dec
mov
incl
push
sbb
push
imul
sbb
jb
shr
or
pop
lds
xchg
add
ret
in
pop
add
xchg
pop
sub
imul
jg
pop
ror
or
pop
into
sbb
mov
pop
in
pusha
aad
add
icebp
adc
and
sbb
sub
jb
test
push
jnp
jp
cmc
mov
inc
arpl
inc
lds
sub
push
add
stos
les
sbb
lret
ret
daa
test
and
xchg
lret
lea
cmp
pusha
cmp
inc
hlt
mov
push
jae
movsb
ss
daa
jno
jmp
ja
dec
jmp
lahf
mov
mov
push
or
gs
mov
xchg
pop
scas
pop
or
sbb
and
arpl
or
addb
gs
rorl
inc
mov
jns
pop
movsb
scas
btsl
sbb
jbe
ficompl
mov
xchg
insl
inc
repz
hlt
stc
in
ret
dec
fisubl
lcall
push
sbb
pop
push
sub
insb
mov
pop
add
popf
jbe
pop
insl
aaa
dec
js
enter
out
into
mov
xchg
dec
jno
out
fidivl
push
pop
lret
xchg
dec
test
xor
sub
in
dec
cmp
fwait
mov
sub
sti
sbb
pop
cmc
cld
aaa
lcall
add
adc
pop
adc
add
cmpl
push
fisttps
sbb
movsb
lds
inc
mov
mov
lods
sub
sarl
xor
es
mov
popf
add
xchg
int
xlat
sarb
jl
mov
xchg
cs
cmc
outsl
mov
sbb
popa
and
inc
int
scas
jmp
scas
arpl
test
out
repnz
mov
ljmp
shrl
mov
or
pusha
mov
mov
xor
xor
and
jg
roll
lahf
ffreep
sub
xchg
pop
push
jl
mov
hlt
sbbb
dec
sbb
cmp
xchg
subb
mov
insl
cmc
stc
xchg
jbe
stc
hlt
adc
sarb
push
xchg
outsl
mov
out
std
sbb
loopne
sub
and
fisttps
loope
dec
jne
jns
pop
test
arpl
pop
loop
in
aad
shl
cmpsl
or
rorb
xchg
nop
inc
mov
popf
cmpsb
pushl
call
leave
push
xchg
xor
xor
int3
dec
gs
mov
mov
aas
enter
or
dec
jbe
scas
mov
mov
jnp
pop
loop
mov
jno
nop
sub
and
scas
rclb
fwait
push
jge
outsl
fbstp
outsl
lods
xor
xchg
jae
ss
jne
jnp
or
dec
xchg
sbb
mov
jbe
xor
in
ja
and
mov
lahf
je
inc
daa
xor
cld
cmpsl
into
out
lcall
inc
push
jecxz
mov
sub
cmp
dec
xor
xchg
ficomps
or
mov
mov
lds
jecxz
and
mov
or
mov
std
fwait
pop
and
je
int3
arpl
adc
xor
mov
xchg
mov
inc
push
push
add
sub
and
pop
loope
xchg
fxch
jno
xor
mov
orl
sub
cmp
xchg
pop
iret
loop
and
in
xchg
xor
mov
sbb
je
ret
sub
fmul
mov
es
xor
mov
xor
nop
push
lret
mov
mov
dec
cmpsl
inc
dec
test
ret
jns
sbb
pushf
cli
xchg
repnz
jge
lret
xchg
popf
adc
popa
inc
mov
nop
lret
scas
xlat
sub
dec
mov
insb
cwtl
aaa
add
imul
push
int
popa
test
push
dec
cmpsl
in
popl
sub
push
xchg
test
and
push
testl
sbb
pop
shlb
dec
cmp
fistpll
and
cmp
ss
dec
rcrl
add
das
jne
mov
inc
out
lret
arpl
sub
xchg
xchg
insl
ror
iret
inc
xchg
int3
das
and
dec
inc
mov
js
mov
repnz
in
adc
jmp
and
push
or
cmpsb
jno
dec
cmc
xchg
sbb
xchg
pushl
idivl
gs
push
in
jns
les
pop
sbb
es
shll
shlb
rcl
jae
xchg
pop
fisubrs
ljmp
inc
mov
push
jae
push
push
test
jae
xor
dec
enter
div
add
inc
xchg
xor
arpl
ret
test
cli
in
cs
push
xor
enter
add
mov
notb
cltd
inc
xchg
cmp
adc
sti
push
aas
sbb
in
bound
inc
dec
sub
pop
in
imul
sbb
stos
jp
faddp
sub
es
inc
movsb
out
pop
push
mov
mov
popf
mov
jp
or
movsb
xor
dec
xchg
clc
mov
pop
popf
sub
in
jle
shlb
cmpsl
jg
sbb
lret
add
inc
push
mov
inc
imul
push
push
sub
outsb
xor
xchg
into
call
shll
leave
mov
inc
cltd
in
mov
jae
aam
into
loope
int
lret
aam
cs
push
orl
movsb
sbb
imul
fistps
mov
das
push
cmc
mov
fidivl
cli
sahf
outsb
dec
pushf
pop
aam
pop
cmp
jle
jle
std
das
mov
mov
cmp
shlb
push
not
or
mov
or
popa
cmp
arpl
out
fstps
sub
push
lock
cmp
pop
sub
push
mov
jne
adc
jp
dec
sti
iret
lea
int3
push
or
cmpsl
lret
dec
std
sti
test
ss
inc
add
lret
jmp
leave
pop
mov
dec
pop
cltd
jno
dec
scas
ja
sbb
jecxz
bound
mov
xor
sbb
aad
xlat
cmp
fs
adc
pand
inc
in
fstps
push
bound
repz
mov
div
or
mov
test
in
decl
sbb
fs
pop
shll
call
loope
jb
pop
jnp
dec
mov
and
jmp
das
lock
fistpl
add
cmpsb
xor
repz
data16
push
push
xor
inc
or
cmpsl
add
pop
pushf
mov
call
or
fisubl
in
test
jbe
xchg
in
lret
cli
lock
stc
ret
iret
shll
mov
adc
call
cmp
and
xor
int
or
xchg
sub
in
enter
push
dec
inc
mov
sbbl
mov
mov
sbb
jg
lahf
inc
pop
data16
cmp
lret
repnz
xchg
mov
test
sar
sarl
xor
aad
inc
enter
enter
pop
lret
cld
dec
aas
push
inc
and
ljmp
incl
stos
fisubl
js
sahf
pop
mov
jecxz
xchg
rcr
jge
hlt
ss
add
adc
scas
enter
pop
sbb
cmp
cmp
sub
fcomp
scas
outsl
inc
gs
jle
xor
add
ljmp
aam
sti
cmp
dec
iret
cmp
stos
inc
sub
inc
pop
add
iret
adc
out
insb
inc
mov
mov
dec
fstp
test
xlat
pop
mov
and
cmp
popa
add
imul
mov
scas
ss
rcl
and
sub
fsts
lock
mov
xor
popf
dec
inc
or
int
adc
imul
pop
aaa
mov
inc
push
pop
dec
das
mov
rcr
jmp
xor
pop
cmp
xchg
loope
inc
loopne
shl
and
or
int
ret
dec
aaa
adc
scas
int3
inc
push
in
jl
fwait
sbb
dec
jae
mov
push
iret
not
and
jecxz
cs
adc
data16
xchg
lock
sahf
addl
xchg
loope
lcall
or
adc
jnp
push
inc
cltd
inc
dec
ds
test
daa
push
imul
pop
lds
pop
insb
sub
stos
lock
stc
mov
rorb
xlat
enter
mov
pop
lret
mov
push
sub
in
leave
jp
sbb
vucomiss
loopne
gs
ja
out
fimuls
jno
or
cld
in
or
loop
cmp
jg
lea
sti
imul
inc
push
xor
pop
cmp
ljmp
sbb
push
bound
ret
sbb
movsb
addl
out
roll
inc
or
push
jg
dec
popa
aas
clc
push
jg
out
lret
sahf
stos
outsl
adc
rcll
fidivrl
jge
pusha
fldl
add
push
lret
lods
jmp
sbb
and
addr16
jnp
decl
lock
xchg
sbb
jno
push
std
movsl
mov
push
sarl
mov
jns
pop
jmp
rep
pop
add
pop
jl
mov
jmp
lods
sbb
and
push
ds
adc
dec
fisubl
pop
jl
call
pop
in
jo
push
notl
lds
subb
dec
mov
mov
arpl
sbb
aam
std
sbb
and
loope
lods
sbb
jmp
inc
xor
in
or
xchg
sbb
enter
xchg
and
mov
push
imul
push
sbb
lret
adc
int
je
mov
adc
scas
ljmp
lods
jns
sbb
stos
and
inc
mov
xchg
or
test
std
sub
sti
stos
add
sub
sbb
inc
shrb
mov
push
pusha
xor
addr16
inc
cld
fwait
adc
inc
mov
cmp
movsl
ror
out
adc
ss
jle
and
mov
shlb
jo
or
cmc
out
shrb
mov
fld
cli
pop
jecxz
sub
dec
clc
pop
shrb
je
sub
xlat
rorl
mov
add
push
subb
enter
inc
scas
popa
mov
test
xchg
popf
add
movsb
or
push
push
cld
dec
xchg
jae
sbb
dec
inc
mov
in
jmp
xor
idiv
inc
lcall
xchg
and
sub
mov
imul
clc
lret
jl
jle
xor
les
mov
call
push
das
sti
gs
xchg
out
rorl
sbb
jge,pt
mov
rorb
mov
or
fnsave
not
xor
or
sub
fistpl
add
and
fwait
mov
adc
les
cmp
seto
mov
sbb
xchg
notb
mov
cmp
sub
loope
jbe
stos
dec
jg
add
fs
mov
xor
aaa
mov
ljmp
xor
dec
push
fidivs
mov
and
dec
push
jp
mov
ficompl
xchg
mov
std
mov
add
sub
mov
adc
cmpsl
mov
rcll
add
iret
and
add
outsb
scas
xor
inc
add
inc
inc
inc
andl
dec
xlat
into
mov
in
xchg
daa
adc
dec
xchg
sub
call
into
pop
popf
out
xchg
sahf
cmc
scas
aas
inc
dec
icebp
mov
aas
push
gs
mov
into
pop
imul
aad
loopne
das
dec
pop
push
test
out
push
adc
sub
mov
jb
cmpsl
xchg
ficoml
dec
popf
ss
or
aam
leave
xlat
dec
mov
xchg
daa
jle
adc
shlb
mov
xchg
xchg
int3
mov
out
out
pushf
cmp
scas
dec
pop
sbb
fisttpll
out
xor
mov
adc
fcomi
pop
xchg
inc
push
push
add
popa
daa
jnp
lahf
mov
jecxz
iret
pop
push
fwait
add
cs
mov
inc
dec
jnp
jmp
sub
stos
inc
add
add
mov
dec
push
lret
data16
xor
popf
outsb
pop
cmp
stos
jne
mov
dec
sbbl
aad
fldz
push
cwtl
lcall
mov
fadd
pand
pop
enter
iret
andl
mov
cmc
sub
xor
xchg
push
mov
cmp
sub
push
mov
flds
and
sti
push
xchg
inc
add
push
xlat
pop
and
out
and
sbb
cmp
sub
jb
js
add
jg
push
jmp
add
inc
mov
adc
in
pop
or
push
cmp
jmp
xchg
ljmp
mov
das
add
pop
mov
or
call
xchg
stos
fidivrl
inc
pop
dec
adc
imul
xor
inc
enter
imull
adc
leave
xchg
inc
fmul
xchg
in
mov
mov
xchg
adc
xchg
push
add
adc
xor
iret
stos
sbb
cmp
mov
cmc
inc
pop
add
bound
popa
lock
in
inc
sbb
dec
xchg
adc
mov
or
xchg
add
aas
sub
dec
lods
mov
js
and
pop
or
lret
jo
jge
lret
rolb
xchg
adc
leave
repnz
dec
pop
bound
adc
push
pop
sbb
sbb
and
shl
ljmp
dec
out
sti
pop
cmp
or
mov
dec
lret
pushf
jge
mov
int
pusha
hlt
sub
xor
inc
lock
push
arpl
pop
mov
mov
xor
inc
sub
lret
mov
mov
dec
gs
leave
xchg
std
enter
sub
addl
int3
jmp
repz
cmp
pop
cmpsb
ljmp
ss
mov
adc
cs
sbb
movb
jns,pn
or
cmpsb
fsubs
mov
xor
mov
add
mov
jno
add
inc
xor
mov
iret
orb
push
out
add
xor
sub
mov
jp
call
popf
shrb
and
cmpsl
int3
jns
fisttps
ret
mov
pushf
jae
adcl
push
fdivs
pop
mov
inc
shlb
fs
inc
out
mov
jmp
icebp
inc
cmpsb
mov
repz
pop
dec
movsl
dec
int
lret
fxch
push
adc
pop
inc
lods
outsl
jno
outsb
jmp
das
sub
les
or
pop
ljmp
or
xor
fsubp
lods
mov
xor
ja
jmp
in
ret
inc
cs
and
mov
and
push
lds
outsb
push
and
enter
dec
inc
sub
add
aam
sbb
les
or
ret
mov
jl
and
push
mov
cmp
sti
or
stc
sahf
xor
lock
fdivs
repnz
jp
jmp
or
imul
test
push
pop
cmp
jno
lea
ja
sahf
dec
fadd
jmp
out
insl
sahf
sarb
or
mov
stos
sbb
add
ffreep
mov
lcall
cld
push
lods
movsl
adc
xchg
enter
push
pusha
stos
push
and
cld
iret
inc
mov
mov
mov
pop
xor
les
test
mov
jbe
or
add
sbb
mov
movhlps
and
dec
add
xchg
loope
push
arpl
dec
fldcw
cmp
xchg
pushf
les
inc
insl
jo
xor
ret
aam
sbb
movsl
xchg
cwtl
mov
cmp
mov
fs
or
lds
mov
jae
sbb
pop
out
push
adc
add
xorl
xor
xor
adc
cmp
jmp
imul
insl
jno
push
jg
push
mulb
ljmp
cmp
inc
in
cmp
cmp
lahf
clc
ss
xor
packsswb
or
pop
pop
xchg
das
iret
lods
pop
sub
scas
push
stc
sub
xchg
pop
dec
cmp
xchg
in
mov
xor
mov
add
adc
mov
push
aam
mov
adc
movsl
pop
sbb
gs
repnz
dec
test
rolb
out
stc
scas
shrb
das
iret
xchg
shrl
ljmp
outsl
mov
subb
cmp
jo
aaa
and
push
fsts
bound
push
pushf
cmp
inc
stc
lods
scas
mov
iret
cmp
rorl
jo
mov
cmpsb
notl
js
dec
out
fiaddl
inc
je
pop
push
push
mov
jp
push
test
mov
sub
sarb
imul
call
push
and
movsb
mov
inc
adc
jae
sub
sarl
lret
sub
dec
in
push
movsb
push
test
cmpsb
popa
add
ror
pop
aam
out
mov
movsl
inc
fs
add
mov
stc
popf
add
jmp
adc
pop
xchg
jo
repnz
push
dec
int
sub
gs
push
loope
jecxz
fidivrl
lock
dec
sbb
pop
push
lret
sbbl
cmpsb
js
repz
mov
fisttps
inc
ljmp
push
movsl
aaa
pop
pop
xor
xor
push
imul
mov
add
push
out
inc
outsb
or
xchg
fistpll
mov
cmpsl
adc
lea
aam
mov
sub
loope
dec
enter
cmp
sbb
mov
nop
and
push
pop
ljmp
mov
imul
cmc
cltd
xchg
mov
bsf
adc
push
roll
loope
shll
popf
pushl
ret
mov
push
in
push
push
loop
aaa
push
inc
cmp
mov
jne
repnz
inc
iret
rolb
pusha
shll
mov
cmpsb
jmp
or
push
lods
mov
cmp
daa
and
push
sub
daa
mov
icebp
cld
jmp
mov
mov
push
mov
add
lretw
lods
repz
sahf
cmc
imul
cmp
or
test
add
inc
and
negl
fisttpl
sub
adc
mov
stc
xchg
xchg
mov
lds
push
lret
push
cmpsb
jg
aam
push
adc
cmpsl
iret
and
popf
sbb
xor
pop
incl
xor
es
adcb
test
insb
filds
into
dec
test
sti
clc
out
movsl
fwait
cmp
sbb
mov
inc
xchg
les
clc
outsl
pop
in
jmp
xchg
mov
mov
fwait
dec
out
sub
pop
and
push
je
sti
bound
popa
add
mov
idivb
mov
mov
mov
neg
mov
sub
test
imul
testl
and
cs
xlat
inc
loop
fldcw
pop
ficoml
cwtl
int
lock
lea
pop
sbb
fsubr
mov
sub
jb
int
push
and
iret
pop
or
cwtl
jae
hlt
fdivp
aam
roll
mov
inc
push
sbb
sbb
pop
or
insl
movsb
mov
sbb
pushf
je
xchg
xor
adc
test
mov
test
push
jle
ds
insl
cwtl
jno
pop
mov
mov
repnz
gs
pop
sysenter
das
movsl
shrl
iret
pushf
pushf
jmp
xchg
xor
dec
cld
jns
pushf
jae
jb
mov
lock
mov
cmp
data16
sbb
lock
mov
stc
adc
imul
mov
adc
fs
cltd
pop
out
sbb
and
ss
insb
dec
jmp
push
and
ret
shr
xchg
lods
jmp
rorl
mov
add
add
xor
cwtl
cmp
mov
sub
stc
insl
das
js
test
push
xor
data16
pop
mov
jo
aas
adc
add
xor
push
sbb
xor
popf
dec
pop
mull
es
and
cmpsb
inc
ja
or
popa
jmp
jns
mov
push
repz
in
or
pop
je
cs
ficoml
addr16
out
jg
and
imul
pop
mov
inc
in
imul
xchg
fstp
das
or
xchg
inc
inc
push
popf
test
movsl
stos
xchg
pop
xchg
inc
mov
cmp
cmc
cmpsl
divps
mov
int3
pop
cmc
add
cwtl
in
lahf
lcall
pusha
jl
pop
mov
std
mov
test
pop
rcl
add
out
shlb
mov
and
sbb
in
idivl
or
add
out
dec
idivl
adc
call
xchg
jmp
dec
cwtl
inc
movsl
loope
xchg
pop
push
lcall
cmp
jb
in
stos
int
mov
nop
iret
cmp
mov
jbe
or
lods
xor
or
cmpsl
jne
loop
jo
or
jns
push
enter
adcl
jbe
test
push
mov
loope
iret
mov
pop
or
push
jl
ds
jmp
mov
adc
je
das
add
into
jg
cmpl
lret
dec
loopne
jecxz
mov
imul
mov
les
bound
cwtl
mov
mull
lods
mov
lret
jns
in
dec
call
push
addr16
pop
ss
repz
repz
incl
xchg
push
movl
cmpsl
mov
in
call
loopne
inc
adc
lods
pop
push
adc
adc
in
cmc
inc
xchg
mov
iret
es
int
popf
cmp
insl
add
xlat
mov
inc
test
mov
xor
mov
jmp
add
out
stos
dec
ret
add
cld
loopne
popf
add
pop
mov
sbb
pop
or
aad
mov
add
cmp
or
jne
out
fwait
inc
add
ja
rcrb
aas
fsubrs
cld
jno
mov
sbb
rorb
stos
lahf
test
lret
mov
xchg
xchg
mov
int3
jb
sbb
ficoms
sahf
xchg
or
or
push
loop
aas
outsl
cli
or
rcl
cli
fidivrl
out
xchg
ja
push
push
pop
sub
and
jle
adc
sbb
xlat
mov
push
adc
jno
cmpsb
cmpsb
cmpsb
sarb
repnz
pop
push
dec
addr16
jbe
and
ja
mov
mov
pop
fidivrl
mov
in
or
sbb
cmp
test
aad
dec
outsb
pop
std
in
inc
mov
pop
hlt
sub
jge
rolb
into
mov
enter
mov
pop
loop
xchg
in
nop
push
cmp
and
aaa
jae
cmp
test
add
mov
aad
push
sbb
out
adc
in
bound
dec
mov
aas
push
outsb
xchg
jnp
movsl
or
push
out
adcl
jnp
mov
cmpsl
les
imul
pop
add
sub
testl
jne
mov
lret
adc
clc
ret
dec
sub
pusha
mov
add
xchg
cmp
dec
ja
iret
out
cs
push
push
pop
cmp
sbb
ss
cmpsb
sti
mov
lcall
cmp
jle
sub
mul
and
xchg
inc
pop
in
xchg
data16
cwtl
cmp
fnstcw
fmull
sbb
int
in
sub
aad
push
repz
test
cmc
xor
xor
xchg
push
setl
xlat
add
mov
sub
ds
push
lods
or
outsl
mov
jle
add
jnp
cmp
in
adc
enter
or
popa
xor
xchg
xor
sti
xchg
and
cmpsl
jle
scas
xor
cli
mov
ficomps
push
and
push
jb
sbb
add
inc
mov
mov
inc
add
andl
sbb
sub
push
es
mov
lret
test
mulb
add
scas
cmp
mull
sub
pop
cs
fldenv
adc
call
or
xchg
outsb
test
cmp
push
cmpsb
rol
out
xchg
or
les
shrl
adc
jne
popa
insb
stos
pop
in
pop
sbb
insb
xor
stos
xor
notl
stos
pop
int
lds
incl
setle
and
out
mov
mov
mov
fadd
dec
push
insl
aas
rcll
jmp
sub
push
add
daa
icebp
jmp
mov
in
dec
repnz
rclb
sub
xor
push
nop
mov
xchg
cwtl
mov
sahf
ljmp
pop
cmc
add
mov
and
dec
fildll
add
add
inc
lea
and
call
nop
push
mov
mov
mov
ss
loopne
sbb
lea
xchg
pop
adc
cmp
mov
notl
clc
in
sarl
jns
sub
sbb
mov
and
inc
std
sbb
jno
pop
inc
fisubs
mov
cld
loope
in
aad
mov
ds
sar
roll
push
jg
aad
int3
lret
mov
aam
jle
adc
clc
push
mov
test
mov
xlat
aaa
add
jo
mov
nop
mov
mov
xlat
cld
sarl
pop
adc
idivl
lds
xor
mov
xchg
dec
movsl
scas
mov
lods
mov
repnz
je
stc
or
adc
mov
xor
ffreep
mov
sti
adc
mov
dec
insb
and
mov
mov
dec
stc
rclb
mov
add
jl
adc
pop
jle
lods
bound
stos
and
pop
xor
sub
ret
pop
sbb
in
xchg
mov
lret
adc
sti
ljmp
orb
rcll
in
xchg
and
xchg
orl
push
out
sub
jmp
clc
jno
lock
sbbl
and
or
jnp
insb
mov
test
sbb
addr16
in
dec
jae
sbb
pop
movsb
mov
into
jo
shlb
outsb
mov
cmpb
add
sub
scas
push
jbe
push
add
das
or
iret
mov
add
pop
push
pop
shlb
push
pop
mov
mov
negb
mov
push
lahf
xor
or
je
inc
fiadds
test
xchg
jl
push
xchg
and
out
cwtl
mov
orb
mov
or
dec
fs
out
bound
out
nop
dec
lret
enter
sbb
push
mov
sub
xchg
sub
xchg
adc
insb
mov
xchg
push
call
cwtl
jbe
adc
and
pop
test
jno
cli
out
jbe
rorb
sar
mov
mov
inc
xchg
cmp
or
sub
push
or
lods
addr16
fwait
shrl
mov
fwait
jns
mov
xchg
xor
lahf
sbb
in
or
xchg
jnp
cmp
sbb
inc
cmpsl
in
add
push
sbb
sbb
cwtl
xchg
sar
xchg
inc
add
imul
imul
mov
inc
jp
pop
fisubs
xlat
data16
xchg
movsw
mov
inc
xlat
loope
add
jp
xlat
jno
repnz
pushf
movsb
sarb
mov
pusha
imul
jecxz
pushf
out
shlb
call
sub
aas
inc
fwait
enter
cmp
fwait
ljmp
push
hlt
mov
sti
int3
notb
adc
lods
jle
aaa
xor
cmpsl
mov
das
das
je
push
stos
lods
decl
push
subl
or
adcb
or
das
js
and
mov
lock
mov
stos
pop
fs
inc
movsb
leave
xchg
js
cmp
pop
jnp
imul
jne
outsb
sbb
pop
scas
mov
xchg
leave
les
add
mov
and
cs
ljmpw
loope
mov
lea
push
stc
xor
repnz
mov
xchg
ss
adc
call
xor
mov
sarb
rolb
in
subb
cli
dec
ljmp
jl
push
cmp
pop
out
stos
lahf
push
in
ljmp
test
mov
pop
ficompl
test
stos
daa
xor
test
clc
in
dec
and
movsb
scas
notb
mov
sub
dec
add
lock
push
imul
call
xor
gs
pop
outsb
mov
mov
mov
push
sahf
pop
lds
xchg
push
or
scas
imul
xor
adc
stos
ds
mov
push
mov
mov
cmpb
sub
jns
stc
cmp
aam
les
fs
xchg
cld
xchg
push
popa
jae
into
ss
sub
mov
out
push
repz
and
xchg
cmp
ljmp
ss
lds
daa
inc
cmp
hlt
ficoms
es
and
in
mov
xchg
stos
xchg
mov
cmp
iret
popf
dec
aam
iret
stos
mov
xchg
adc
lds
adc
mov
movsb
push
adc
pop
rcrb
inc
mov
mov
or
and
or
and
scas
int
lds
outsb
sub
subl
loopne
mov
test
sbb
dec
jb
cmp
js
pop
push
lret
pop
call
jg
sub
push
dec
mov
jmp
add
or
xor
in
testb
in
test
mov
xchg
aam
cmc
push
loop
sti
jbe
es
je
sub
cmp
jmp
daa
push
mov
mov
popa
pop
jb
in
push
cmp
mov
shrb
push
inc
aaa
adc
aaa
movsl
cmp
adc
popa
mov
out
shlb
fiadds
pop
jae
dec
in
fsts
les
adc
mov
mov
push
data16
sbb
sbb
cli
es
dec
scas
in
mov
orl
and
cmp
add
pop
sarl
cmp
push
stos
push
js
outsb
mov
fnstsw
push
js
call
ret
pusha
test
std
xorl
lds
scas
faddp
rorb
cmp
icebp
fisubl
xchg
mov
push
cmp
cmp
pop
mov
mov
pop
adc
scas
inc
xor
mov
ret
and
das
out
fst
aam
iret
pop
sub
mov
push
hlt
flds
inc
fcmovnbe
or
push
sub
int
js
dec
dec
jge
sarl
jae
dec
iret
call
jbe
rcrl
or
jle
pop
push
adc
addr16
adc
mov
xchg
data16
mov
xor
lahf
adc
adc
sub
leave
rcrl
mov
ja
cmpsb
lock
add
cmpl
es
xor
repnz
dec
pop
xor
xor
iret
out
in
je
in
pop
push
jbe
loop
scas
mov
jbe
xor
xor
and
mov
push
mov
imul
cmp
jae
or
setg
adc
pop
sbb
mov
outsl
jo
pop
shlb
jnp
xchg
lahf
imul
jge
jns
xchg
lret
dec
imul
bound
mov
jl
lea
fistps
jae
xchg
or
jns
jle
lods
sbb
icebp
popa
xchg
clc
fnstsw
cmp
movsb
ja
add
jle
jns
movsb
inc
sbb
rcpps
sbb
lds
mov
popa
imul
push
cmovo
cs
mov
xchg
ja
xlat
call
cmp
negb
lock
fisubs
mov
cmpsl
shll
xor
sub
stos
imul
rcll
dec
inc
or
sub
cltd
mov
push
mov
lock
mov
mov
cmp
sbb
pop
push
sub
ljmp
mov
dec
es
ljmp
or
ficoms
int
pop
and
lock
push
jae
pop
outsl
mov
xchg
jp
sub
xchg
push
pop
sar
push
push
lds
dec
into
mov
enter
aas
cmp
cmp
ja
and
adc
jnp
mov
aam
fld
in
inc
test
mov
adc
push
loop
clc
out
pop
test
in
lods
adc
mov
lods
add
ret
dec
orl
jge,pt
and
aas
mov
outsb
sub
mov
out
lods
insb
test
repnz
cmp
inc
mov
push
jno
xchg
js
xor
xor
push
push
xchg
push
mov
jl
les
pusha
pop
inc
xor
sbb
lods
lahf
push
scas
inc
jecxz
pop
int
mov
lahf
pop
arpl
pop
sub
and
aaa
arpl
cmp
repz
and
ret
dec
cmpsb
xchg
lcall
cltd
call
pop
cmp
mov
fwait
sti
and
or
fsubrl
insl
dec
adc
loope
dec
mov
or
lcall
in
out
push
loope
pop
jg
loopne
cmp
xchg
fcomps
or
or
add
cmp
ds
push
add
adc
pop
xor
add
push
cmpsl
stos
fadds
ret
mov
fstl
xchg
sahf
out
pop
insl
xchg
mov
jle
cmp
js
cmovge
cmc
lret
inc
xor
jbe
gs
push
iret
adc
sbb
add
sbb
out
jecxz
push
jge
rclb
les
push
test
inc
int3
call
popa
cwtl
cli
push
call
insb
mov
or
mov
add
rcrl
arpl
inc
jmp
inc
test
mov
je
add
pop
xor
andl
imul
ja
push
dec
cmp
mov
in
rolb
fwait
outsb
bound
imul
cmp
jle
sub
aas
mov
xchg
mov
and
mov
addr16
jnp
jnp
inc
cmpsb
jns
cmp
loope
inc
and
sub
cs
mov
into
sbb
pop
jp
aaa
stc
popf
inc
xchg
xlat
in
sarl
and
shll
mov
inc
ret
pop
test
pop
adc
sub
xchg
adc
idiv
xor
mov
les
stos
lret
fiaddl
and
adc
sbb
push
test
xor
jp
out
jo
loop
inc
pusha
and
push
xor
out
mov
sarb
movsl
int3
dec
pop
imul
jl
popf
mov
sbb
aaa
nop
dec
out
fdivrs
jmp
inc
stos
out
test
js
or
sbb
xor
and
pop
cmp
stc
fimull
shlb
arpl
sti
ds
test
cmp
dec
pop
mov
mov
and
mov
cltd
fmulp
lret
pop
fneni(8087
sbb
out
and
dec
loope
arpl
or
repnz
rorl
xor
pop
pop
aad
insl
jg
inc
pop
ret
mov
xchg
and
fsubl
insb
jle
pop
lret
push
mov
mov
mov
dec
out
test
les
jmp
nop
xor
cs
inc
aam
and
push
in
aam
jnp
enter
add
pop
insb
clc
sbb
incb
mov
push
pop
pop
movsb
xor
in
rclb
pop
push
daa
pushf
es
popf
mov
fildll
mov
inc
aaa
and
jmp
ss
ljmp
iret
pop
ja
rorl
or
bound
roll
sub
pop
pop
xchg
xor
daa
jge
add
leave
or
out
push
xor
icebp
xchg
fwait
imul
push
sbb
sub
ljmp
mov
add
shl
cmp
and
nop
pop
lea
call
js
push
lods
push
xchg
xor
and
lds
cmp
xchg
sub
daa
loopne
call
ljmp
dec
dec
push
in
repz
jl
push
test
and
lods
or
xchg
mov
pop
fs
mov
add
ficoml
loopne
sbb
pop
jnp
pushf
jmp
jle
sbb
add
rorb
ljmp
and
loopne
and
push
stos
das
mov
mov
push
xor
or
hlt
fcmovne
cmpsb
xor
pusha
sub
pop
jl
stos
xchg
jmp
pop
adc
out
and
addr16
je
sahf
cltd
lcall
dec
cld
stc
inc
push
cli
insb
mov
mov
and
sbb
xor
pop
push
cmp
popa
addb
call
cmpsl
jbe
and
push
test
sub
shll
jns
push
xor
fisubs
adc
lret
or
in
cld
fstps
mov
testb
pop
adcl
mov
sbb
cld
out
push
mov
sbb
inc
add
scas
cs
pop
or
pusha
push
rcrl
scas
out
xchg
sti
gs
lret
insl
adc
lret
fisubs
nop
cmp
scas
ja
sub
mov
xor
andl
pop
mov
ja
roll
jne
mov
inc
sub
mov
or
cmc
aaa
ljmp
jne
mov
inc
ljmp
cmp
push
ds
jo
mov
loopne
scas
add
loop
sahf
mov
mov
lods
cs
jnp
add
inc
jge
lods
dec
dec
stc
mov
mov
sahf
adc
adc
pop
mov
lcall
push
out
daa
push
push
mov
xchg
or
and
cmp
stos
mov
pop
lret
pop
cmc
into
fdivrl
and
cli
stos
push
push
add
mov
imul
jne
fldenv
pop
loope
xor
mov
push
in
out
pop
xchg
arpl
pop
lea
xor
inc
insb
or
in
rcrb
adc
sub
xchg
js
mov
sub
xchg
addr16
les
add
sarl
sub
cmc
mov
dec
popa
loop
and
adc
pop
imull
ret
pop
or
or
sub
mov
xor
adc
or
inc
sbb
mov
stos
clc
mov
stc
add
popa
sub
test
jbe
cmp
fbld
adcl
jp
fimuls
stos
xlat
and
dec
xlat
sahf
jecxz
push
ja
addr16
cmpsb
fistl
xchg
mov
jo
mov
test
daa
xchg
int3
mov
mov
mov
cmp
loop
mov
mov
or
cs
scas
mov
dec
aas
call
mov
bound
pop
aaa
pop
lock
nop
add
xchg
cmp
mov
fidivl
jmp
add
movb
mov
push
sbb
push
adc
rcll
mov
out
mov
jp
mov
mov
sbb
mov
arpl
hlt
xor
dec
jo
xchg
lcall
in
xchg
cmc
xor
jbe
stc
frstor
insl
rorl
and
xchg
out
inc
jecxz
mov
or
jbe
imul
lock
adc
mov
scas
jae
lret
js
mov
lret
je
adc
shl
es
testl
jno
daa
dec
aam
or
mov
test
mov
xor
or
and
xor
orb
mov
mov
fdivrs
inc
mov
mov
xchg
push
nop
mov
sahf
xchg
das
sbb
imul
cmp
sbb
xor
sbb
cmp
fsts
and
dec
xor
add
sbb
ljmp
adc
rorb
aaa
adcw
push
push
pusha
sbb
ret
xchg
and
cwtl
ficoml
dec
dec
out
pop
popa
mov
fisubl
add
sub
add
ljmp
movsl
lahf
dec
sub
mov
shll
inc
add
clc
xchg
adc
das
or
lret
push
pop
lcall
repz
lock
xchg
icebp
xchg
mov
dec
repnz
mov
push
fistl
inc
dec
cmpsl
pushf
lret
ret
lea
xchg
mov
in
mov
push
stos
sbb
outsl
mov
mov
addr16
mov
and
in
mov
inc
leave
jmp
js
cmp
xchg
or
mov
mov
xchg
loop
cmc
dec
stos
mov
add
jb
dec
adc
and
int3
mov
sbb
into
aam
mov
shrl
and
das
and
cmp
pop
mov
flds
iret
mov
mov
lock
jl
push
add
jmp
inc
repz
movsl
out
fdivs
cmp
pop
loopne
dec
mov
push
sahf
mov
and
mov
cld
jle
push
clc
iret
cwtl
push
pop
mov
fisubl
mov
test
stos
sub
pop
cmc
jle
daa
ret
pusha
cmc
shr
mov
scas
imul
psrlq
out
inc
cld
or
jb
fidivs
cmp
xor
add
jl
repnz
cli
xchg
xorb
mov
into
leave
cmc
dec
cwtl
pop
outsl
popf
out
inc
enter
ja
xor
inc
imul
mov
sbbb
out
adc
mov
in
decl
ss
sbb
ja
mov
outsl
fadds
push
mov
ja
push
jno
outsl
push
mov
mov
orb
sub
fimull
push
fdiv
pop
pusha
sbb
push
mov
dec
inc
xchg
mov
iret
jmp
gs
sti
inc
das
mov
cmovno
jmp
xchg
pusha
sub
roll
or
shrb
lahf
pushf
adc
jno
inc
imul
loopne
cmc
adc
sub
pusha
xor
out
insb
aad
mov
sub
sub
pop
into
and
or
dec
inc
sub
lock
mov
push
sub
scas
push
stos
jge
pop
add
in
jo
popf
xchg
idivl
adc
sub
push
test
into
mov
ds
cld
fdivrl
xor
xchg
pop
xor
xchg
jmp
push
call
pop
bound
or
and
mov
push
das
jmp
cmp
paddq
lea
mov
fsubs
mov
and
cli
add
ret
jge
fnsave
push
andl
dec
pop
cmp
xor
icebp
jo
loop
js
xchg
mov
ja
mov
inc
push
shrb
fsubl
ret
lret
cld
push
pusha
dec
push
push
cmp
sti
or
sub
lods
mov
sbb
mov
xorb
and
adc
dec
inc
jne
push
test
mov
mov
sbb
xor
sti
out
and
pop
test
push
loopne
xchg
lahf
xchg
pop
dec
adc
cmp
sarb
and
rolb
loop
arpl
sahf
jp
repnz
das
loope
pop
imul
ja
bswap
push
dec
pop
mov
mov
and
xchg
adc
repnz
jle
mov
xor
xorb
mov
jns
jmp
push
inc
jle
cmp
inc
dec
sub
mov
mov
or
or
leave
roll
jbe
jp
mov
sti
ds
jb
jl
or
mov
sub
pop
adc
push
int
gs
dec
fbstp
ffreep
call
add
xchg
fdivs
push
aad
jecxz
in
mov
mov
xor
lods
xor
hlt
sub
pop
lods
jmp
out
jb
sub
stos
out
clc
mov
lret
fcmove
lret
scas
sbb
sub
cmp
mov
bound
rolb
pop
mov
fcomp
inc
adc
scas
lret
adc
aaa
fildll
and
pop
jg
fimuls
mov
test
jmp
jno
push
pop
roll
jns
xorb
call
fisubs
fcompl
mov
std
pop
mov
jp
xchg
jnp
std
sub
int
pop
mov
mov
cmp
push
mov
jle
stc
mov
pop
mov
imul
jl
cld
or
out
sbb
enter
mov
or
add
in
leave
mov
repz
mov
sub
jle
pop
jge
mov
inc
pop
cs
das
lods
xchg
in
or
mov
and
jae
nop
and
repz
xchg
lock
movsl
jne
jle
pop
jne
pushf
and
fucomp
or
xchg
xchg
js
les
and
sbb
cs
push
mov
rcr
adc
js
iret
pop
mov
sub
add
mov
xor
cmp
mov
mov
pop
or
clc
das
movsb
call
cli
mov
sti
das
inc
cmpsl
mov
in
cwtl
testl
sbb
push
or
and
mov
out
mov
sarl
xor
pop
pop
ljmp
stc
adc
mov
filds
push
xchg
dec
jne
out
xchg
push
js
jno
das
sti
sub
movsl
das
mov
pop
mov
ja
orl
dec
sbb
mov
mov
test
cmp
or
push
ds
daa
hlt
js
and
test
scas
je
cmp
dec
orb
loop
inc
pop
and
arpl
sub
jae
rcrl
mov
andb
loopne
ss
ss
neg
jge
push
pushf
mov
push
ljmp
pop
jns
fwait
cmpsl
je
adc
sub
push
dec
mov
jecxz
or
sarb
and
stos
fbld
mov
out
mov
rcrb
mov
jle
loopne
lret
adc
cmpl
mov
mov
pushl
push
leave
fwait
cmpsl
or
or
push
inc
cmp
mov
ljmp
daa
notl
aam
cmp
std
inc
mov
push
push
pop
fstpt
out
pushl
leave
mov
lea
pushf
orb
xor
js
jb
jl
addl
mov
dec
mov
ret
mov
cmp
aaa
sbb
mov
mov
sub
popw
pop
arpl
pop
xchg
and
stc
lods
sbb
jb
mov
into
iret
jl
sub
cmpl
pop
enter
mov
add
stos
or
pushf
mov
iret
testl
cmp
sbb
sub
pop
mov
int
ljmp
sbb
and
xor
cmp
dec
xlat
sbb
outsl
cld
adcl
push
fidivrs
xchg
or
je
repnz
jo
sbb
test
dec
rorb
cmpsl
pop
stos
out
lods
add
xchg
mov
cmp
cmp
ss
cwtl
push
arpl
sti
xchg
cld
dec
ret
push
xlat
jle
mov
pop
out
push
cltd
dec
leave
mov
dec
sub
xchg
into
push
or
mov
movsl
dec
pop
iret
aaa
jp
dec
repz
xchg
xchg
push
popf
cmpsb
inc
lock
push
popf
in
push
out
dec
icebp
test
shll
push
xor
sbb
aam
or
jmp
or
jo
test
repz
sub
pop
mov
add
aam
repnz
out
in
xchg
aam
sbb
sbb
scas
inc
mov
insl
lods
and
xchg
inc
lock
mov
ds
test
hlt
cmp
adc
repz
xor
fwait
sahf
lret
sub
dec
bound
ja
movaps
push
mov
and
bnd
push
xchg
adc
push
fwait
cmp
sub
jno
xchg
les
xor
mov
loop
cltd
sar
fwait
lahf
outsl
bound
push
mov
ret
xorb
mov
cs
push
lea
inc
mov
neg
out
ret
or
sbb
scas
or
test
test
mov
sbb
mov
xor
fs
sub
pushf
adc
push
out
dec
rcrb
cmp
arpl
movsl
loopne
repz
mov
add
dec
ljmp
mov
xchg
iret
pop
rcll
das
mov
testl
mov
out
sahf
out
jno
test
lds
loop
jne
and
mov
call
sarb
xlat
jecxz
in
mov
dec
shll
jnp
pushf
and
dec
xchg
xor
arpl
xchg
cmp
cmpsl
ret
sub
loopne
push
ret
inc
inc
daa
sub
sub
aam
repnz
test
mov
dec
xor
jb
jne
add
int3
daa
gs
jge
or
lcall
xchg
clc
push
push
jo
mov
and
dec
mov
fadds
sbb
xchg
data16
jae
dec
in
pop
inc
and
mov
shlb
js
jne
sub
arpl
or
outsb
enter
pop
mov
push
ljmp
cmp
xchg
mov
cmp
cld
inc
xchg
dec
fiadds
cld
push
setle
fnsave
pop
sub
sbbb
loopne
je
sahf
jmp
mov
fsub
out
cmp
pop
sbb
addb
jge
shll
dec
adc
lahf
enter
adc
sub
repz
bound
dec
push
or
push
fdivrl
sub
adc
inc
mov
imul
jne
dec
xor
insb
cmp
add
xor
mov
jle
pop
cltd
jg
lock
je
inc
mov
dec
mov
popa
or
mov
mov
fbld
mov
std
ret
icebp
pop
cmc
ljmp
mov
repz
ja
xchg
loop
mov
out
loopne
or
xchg
and
or
pushf
addr16
and
lods
pop
cmp
dec
pop
or
jle
pop
cmpsl
fdivr
lahf
insb
andl
jg
mov
shll
mov
pop
scas
jns
fcom
leave
mov
lods
jge
lret
cwtl
mov
call
daa
in
sbb
lods
in
insb
repnz
fidivrl
pop
dec
cltd
mov
cltd
imul
sbb
sbb
push
push
dec
imul
xor
frstor
loop
out
jp
inc
push
repz
in
aad
xchg
xlat
sbb
fdivl
add
sbb
jno
leave
les
jbe
xchg
pop
or
mov
mov
xchg
fcom
movsb
and
out
repnz
add
testl
sahf
xor
cwtl
sarl
sbb
and
and
jecxz
shl
push
aas
testl
push
jl
cmpsl
roll
push
pop
addl
cli
push
fists
sub
ficompl
outsb
loopne
stos
mov
sar
pop
dec
xchg
mov
cmp
ret
addr16
pop
mov
jle
popf
add
mov
inc
arpl
ja
in
mov
sub
insb
lods
jecxz
adc
sbb
dec
add
sub
pop
adc
dec
jg
xchg
mov
mov
xor
push
and
in
jl
adc
mov
adc
sbb
pushf
dec
sti
rolb
jb
mov
sbbb
fwait
imul
imul
gs
lret
sbb
in
gs
xchg
les
add
push
call
mov
fidivrs
mov
sti
arpl
rep
mov
pop
mov
xchg
and
fnstenv
mov
jae
ljmp
aas
not
inc
scas
cmp
inc
jp
fildl
jg
daa
call
in
cmp
int
or
push
vfrczps
or
jo
jbe
int
add
aas
push
fucomp
push
push
ror
fists
xchg
dec
add
mov
jo
cld
lods
pop
push
xchg
jge
push
mov
in
inc
imul
push
cmpsb
icebp
shl
pop
mov
xchg
and
fs
pop
ja
mov
adc
sub
mov
scas
sbb
aad
in
test
jmp
fiadds
sub
pop
je
cmpsb
cld
hlt
sub
mov
push
jo
enter
or
in
cli
lock
std
out
jle
mov
and
adc
outsb
adc
lahf
iret
incl
mov
xchg
aad
daa
inc
jns
cmp
cmpsb
jmp
pop
insl
cmp
mov
push
dec
inc
xchg
xor
mov
jnp
mov
xchg
xchg
sarb
and
adc
or
lds
rcll
xor
xchg
pop
in
inc
pop
cmp
mov
mov
push
punpcklbw
out
mov
pop
sub
inc
cld
sbb
ret
bound
pop
sbb
lods
add
hlt
push
ds
mov
dec
adc
push
push
lock
jmp
add
test
or
adc
fisubrs
pop
fwait
hlt
imul
rorl
inc
stos
popf
or
cmp
mov
shl
xchg
mov
sub
jecxz
repz
lret
cmp
dec
xchg
test
sbb
adc
mov
jge
mov
xchg
inc
test
dec
mov
inc
lcall
mov
cltd
xchg
cmc
dec
sbb
cmpsb
push
mov
stc
movsl
xchg
clc
mov
rolb
inc
add
mov
sti
pushf
scas
adc
adcl
mov
fsubs
insb
repz
dec
loop
mov
imul
ficoms
mov
roll
inc
inc
aam
cld
rolb
fs
xor
push
lock
adc
pop
call
pop
push
negl
mov
dec
mov
inc
or
sbb
jmp
repnz
sub
sbb
cmp
sbb
js
push
push
lret
inc
or
xchg
push
cld
push
mov
int3
inc
rolb
or
imul
xor
sbb
call
push
enter
outsl
imul
jge,pt
mov
add
dec
cmpsb
pop
jno
mov
adc
pop
jno
rolb
cmp
xor
outsb
add
push
sarb
lret
imul
adc
dec
loope
subb
cmp
ss
fmul
mov
insl
gs
stos
scas
cmp
sti
jnp
cmc
out
fistpl
test
jae
ret
enter
and
addr16
cltd
aam
popa
ss
cld
add
in
and
fldt
push
mov
add
pusha
mulb
sub
dec
and
out
out
imul
xchg
jl
inc
jg
popa
repnz
pop
in
push
movsb
out
aas
xchg
mov
pop
and
mov
dec
out
std
insb
cmc
int
decb
cmp
ja
add
cltd
jp
xchg
dec
test
arpl
fcoms
popf
or
cmpsl
outsb
pushf
jns
test
inc
inc
fldenv
pop
push
call
pop
mov
pop
insb
xchg
mov
pusha
and
push
pop
mov
and
leave
pop
repz
cmp
sub
fmull
sbb
push
stos
outsb
sbb
sub
inc
daa
mov
jne
les
and
aaa
pop
sub
sbb
mov
push
or
mov
aad
shll
call
rorl
jb
jnp
jmp
sub
out
test
or
out
add
outsl
add
test
sub
outsl
cmp
xchg
jb
scas
and
jae
out
mov
pop
or
jae
in
sbb
aas
fs
xchg
insl
outsl
int
loop
push
lret
in
cmp
mov
outsb
mov
jae
pop
loop
bound
xor
fwait
iret
shll
xchg
push
fimull
fadds
pop
cmp
dec
mov
cltd
mov
mov
sub
push
ss
lahf
xor
notl
pushf
or
xchg
mov
and
jns
sub
mov
mov
test
aam
cmp
scas
shrb
adc
popf
in
sub
sahf
std
mov
jl
add
xchg
inc
es
sbb
mov
xor
pop
sbb
fwait
out
das
punpckhwd
adc
dec
in
inc
xor
faddl
aad
fchs
out
cmp
out
or
rorb
mov
int3
js
into
jl
andl
sub
imul
repz
mov
mov
repnz
xchg
push
pop
pop
mov
out
mov
mov
mov
or
cmpsb
pushl
pop
or
lret
xlat
mov
in
mov
pop
in
xchg
or
stc
dec
add
dec
push
xchg
jecxz
xchg
mov
push
sub
mov
test
sub
std
mov
daa
jns
mov
repnz
push
cmp
mov
xchg
aaa
mov
dec
test
sub
shlb
cld
popa
cmp
adc
and
nop
insb
xchg
out
popa
adc
cs
mov
sti
pusha
pop
xor
dec
mov
lea
xor
ret
mov
push
fwait
loope
nop
mov
sti
jl
inc
inc
insb
ret
xchg
adc
cmpsl
test
mov
adc
ret
push
popf
xor
jno
insb
jne
dec
xor
outsl
jge
xchg
popf
cs
aad
push
mov
popf
mov
mov
pop
mov
pop
xchg
mov
sub
jns
jmp
test
xchg
movsb
ss
movl
add
testb
xchg
icebp
sbb
inc
mov
mov
je
mov
out
cmp
dec
xor
jbe
lds
gs
ss
dec
mov
or
jae
ds
add
sbb
ljmp
dec
inc
iret
inc
jbe
loopne
frstor
lods
popf
popf
inc
mov
popf
lcall
gs
and
insb
push
push
outsb
adc
ljmp
push
xchg
mov
into
jne
mov
push
jg
pop
rolb
loopne
mov
out
adc
cmp
lcall
add
cmpsb
xor
xorl
and
stos
je
sub
lret
add
sahf
cmp
stc
lret
push
sub
sub
xchg
push
or
out
or
fsubs
sbb
and
aaa
jb
ja
ja
aam
pop
push
push
cmpsl
or
rorb
movsl
xchg
or
into
ss
xchg
bound
stos
adc
or
cmpsl
sub
cmp
jns
js
pop
in
jp
cmp
ss
cli
cmpb
push
push
ficomps
hlt
outsb
cmp
xor
add
dec
and
cmp
jp
xchg
dec
cmp
test
fimuls
and
daa
xchg
pushf
xchg
stc
icebp
pop
fs
xchg
or
add
jg
test
inc
and
outsl
adc
cmp
xor
test
jp
mov
mov
push
out
cltd
and
pushf
stos
fwait
jmp
insl
xor
push
xor
sub
in
adc
dec
sahf
dec
movb
cmp
shrb
rorb
mov
adc
push
sbb
mov
inc
add
test
mov
mov
icebp
add
stc
sub
adc
inc
inc
sub
push
les
or
in
pop
popf
shrl
jl
xor
loope
lods
sbb
loope
arpl
sub
cmp
inc
cld
cmp
push
fwait
out
or
xbegin
jmp
insb
push
xchg
data16
pop
ss
inc
and
add
mov
cmp
idivb
loope
dec
dec
cmc
int3
xchg
sti
mov
push
int
xor
stc
mov
out
and
inc
or
pop
and
lea
test
dec
jl
fdiv
add
ja
popf
movsb
push
push
repnz
cmp
mov
push
jg
iret
jnp
aaa
outsl
jmp
pop
dec
xor
mov
loop
rclb
iret
cmp
cmp
fs
push
pusha
fsts
pusha
jp
sahf
mov
xor
hlt
dec
mov
pop
test
dec
frstor
jmp
xchg
repnz
jb
sbb
mul
pop
call
sub
pusha
sub
gs
dec
jl
test
lock
ret
and
rclb
or
push
popf
out
mov
cmovs
insb
adc
xor
inc
fsub
xor
xor
mov
int
mov
jnp
mov
std
mov
or
jmp
inc
loopne
jae
xor
rcrl
sbb
sub
repnz
dec
mov
mov
push
stos
into
outsl
adc
and
and
scas
push
pushf
cmpsl
adc
dec
sub
fwait
into
mov
mov
mov
xchg
pop
inc
call
rol
in
insb
movsl
into
stc
dec
lods
repnz
enter
jae
roll
aaa
add
call
popf
mov
imul
mov
xor
rolb
sahf
cmp
push
loop
adc
into
stc
mov
sub
mov
in
or
mov
das
inc
push
icebp
sbb
xor
sub
dec
out
pusha
pop
xchg
subl
xchg
mov
aas
sahf
or
icebp
jbe
inc
insl
lea
push
mov
rorl
mov
jl
xchg
ds
adc
data16
push
mov
mov
orl
sbb
mov
xlat
leave
inc
pop
hlt
and
ds
or
and
aam
vpmacsdql
fwait
cmpsl
and
mov
pop
mov
outsl
std
movsb
aas
ljmp
loope
out
jne
insl
inc
fcoms
notb
inc
clc
pop
fisttpll
sarb
cltd
shl
cmp
mov
cmp
sar
xchg
and
mov
fidivl
mov
out
xor
fs
test
test
or
dec
lods
cmp
inc
mov
pop
sub
push
ret
mov
mov
add
fidivrs
mov
and
mov
sub
adc
jnp
outsl
or
xor
dec
cli
lret
and
lods
bound
popa
add
cltd
lds
icebp
popf
into
lahf
jg
xor
mov
repnz
add
push
aam
aaa
enter
xor
sub
mov
xchg
mov
int
jge
pusha
cmp
scas
jae
scas
aam
faddl
sub
adc
xchg
add
lods
sbb
rcll
dec
repnz
mov
into
stos
repz
in
xchg
movsb
loope
addl
fnstsw
jecxz
push
cltd
imul
mov
push
clc
push
dec
xchg
lcall
icebp
sbb
gs
jl
pop
fildll
xchg
stos
ret
test
fcmovb
imul
icebp
daa
fs
pop
dec
stos
xchg
cmpsl
mov
mov
clc
out
stos
mov
sub
mov
test
push
jns
imul
ds
adc
cmpl
outsl
push
add
mov
lret
adc
js
sub
and
mov
popf
xchg
aam
rcrb
dec
sbb
je
in
jecxz
pop
imul
mov
scas
adc
xchg
aaa
in
cmp
testb
cmp
addr16
jo
bt
sbbb
cmp
xchg
js
add
sub
lea
mov
ror
and
pushf
outsb
adc
sbb
mov
sub
lret
adc
call
movsl
inc
mov
jne
arpl
push
xchg
xchg
setno
ss
add
popf
stos
loopne
adc
fwait
movsb
pushf
into
mov
xchg
mov
dec
adc
jle
add
mov
mov
mov
sub
mov
std
dec
ja
aas
rcr
cmp
xlat
mov
mov
jp
lret
pop
or
xor
data16
dec
mov
xchg
add
adc
sahf
movsb
sbb
and
test
mov
outsl
cltd
pop
push
fcmove
and
or
jmp
test
pop
mov
xor
les
jo
mov
cmc
mov
je
fsubp
push
pop
pop
sub
fcompl
fldt
daa
fwait
mov
xor
xchg
loopne
mov
jge
sbb
shll
dec
or
or
outsb
aad
lock
mov
popa
jno
push
push
sbb
js
outsb
popf
js
loop
cmp
fucomi
aas
mov
lahf
mov
and
sbb
jbe
push
xor
movsl
aad
pop
cwtl
pop
adc
mov
subb
mov
ror
andb
imull
sbbb
mov
or
cs
jge
xchg
xor
xlat
test
stc
dec
dec
push
mov
sbb
cmp
clc
cwtl
dec
xor
jnp
xchg
subb
cmp
mov
loop
push
mov
jl
call
pop
mov
loope
jae
lea
or
mov
fsubl
in
cmp
test
outsl
sbb
jmp
dec
rorl
hlt
lods
or
ja
rcll
cmp
jno
sbb
sbb
xor
pop
jne
adc
dec
pop
mov
into
push
pop
aad
fisubl
inc
fndisi(8087
in
push
fisttps
xor
iret
fs
jecxz
les
stos
push
les
shlb
add
mov
jno
cmpsl
es
jp
repnz
dec
rorb
sbb
dec
xchg
mov
cltd
cli
pop
or
cmp
inc
in
lds
enter
ret
repz
popf
push
fisubl
jmp
cld
inc
inc
mov
and
xor
cli
dec
in
push
xchg
leave
aas
dec
xchg
or
mov
mov
xor
movsb
xor
mov
pop
imul
out
js
xchg
je
pop
test
lods
jge
insb
jecxz
outsl
dec
mov
jnp
xchg
or
push
fdivrl
fimuls
lods
pop
mov
pop
mov
cmp
mov
mov
ljmp
enter
mov
daa
xor
ret
dec
jg
ret
mov
jns
add
aas
dec
xchg
jbe
rcr
mov
push
sbb
movsl
sub
lock
outsl
xchg
out
out
inc
test
out
nop
or
lods
mov
mov
jmp
fsts
lcall
out
cld
sbb
insl
jb
xor
sub
sbb
sahf
mov
dec
sbb
aad
inc
cmpsl
cmp
ret
push
inc
mov
inc
push
push
pop
popf
cmpb
in
mov
cmp
and
icebp
and
imul
sbb
stos
dec
inc
mov
jecxz
cmc
ds
fcoms
int3
adcl
mov
jmp
rorl
fmuls
ss
mov
sbb
pop
repnz
xchg
sbb
imull
cmp
clc
gs
sub
adc
mov
imul
pop
es
inc
pop
scas
add
lret
sbb
in
jmp
aaa
stos
cmp
jmp
push
mov
dec
fisubs
nop
add
mov
jb
add
mov
shlb
inc
stos
je
in
add
cmp
or
repnz
ja
sbbb
mov
or
lods
adc
push
add
mov
ficompl
aas
and
xchg
shll
cmpsl
xchg
or
fldt
or
and
in
or
imul
mov
mov
andps
rolb
sbb
jp
shll
dec
std
and
repz
jb
or
sub
cmp
xlat
mov
or
pop
add
loopne
mov
push
inc
jbe
icebp
xchg
dec
sti
xor
pop
dec
stos
pop
pop
rcll
in
stos
fimuls
mov
xor
pop
insl
inc
pop
xchg
push
cmp
push
ljmp
or
mov
nop
cmpsb
mov
imul
fdivrp
add
cmp
xor
pop
cmp
jmp
adc
dec
arpl
jnp
mov
in
mov
or
sub
mov
cltd
andl
cmp
sub
add
and
inc
out
or
gs
sub
jle
sbb
lock
repnz
rcl
xor
out
mov
sub
push
push
nop
sbb
add
xlat
dec
xor
pop
out
adc
mov
sub
mov
into
bound
lcall
sub
iret
int
adc
mov
je
imul
out
cmp
adc
lahf
loope
inc
rol
jns
dec
ret
sbb
ljmp
pop
lcall
fdivs
sbb
cwtl
mov
jo
xlat
nop
sub
lds
or
cmp
insl
pushf
outsl
pop
sbb
fildll
mov
add
cld
das
daa
scas
fsubs
lods
cmpsb
int3
push
xor
mov
inc
add
scas
repnz
mov
data16
pop
sub
lcall
scas
aaa
dec
leave
insl
adc
pop
xor
mov
cmpsl
inc
jae
in
add
push
mov
xchg
mov
mov
ficoms
data16
push
out
xchg
mov
mov
add
xchg
pusha
icebp
cmp
movsl
popa
mov
cmp
enter
stos
jno
addr16
jge
cmp
mov
je
jo
cli
out
ljmp
xlat
out
frstor
jmp
test
imul
sub
test
sbb
lahf
aam
mov
popa
and
fsubr
in
in
sarl
cmp
addr16
pop
stc
dec
dec
in
jmp
mov
xchg
rcl
push
push
jecxz
repnz
xchg
sub
inc
xchg
std
fstl
pushf
arpl
aaa
out
mov
mov
sbb
adc
das
adc
add
sbb
jl
inc
cmpsb
adc
int
push
lahf
subb
pop
fs
pop
lods
push
sti
fstpt
repnz
pushf
and
cmc
xchg
pop
popa
add
pop
add
shr
and
jge
jae,pn
movsb
outsl
xor
jbe
daa
jb
icebp
adc
aad
mov
shrw
sahf
stc
scas
dec
fistl
loope
jge
cmpsl
pop
dec
rol
je
mov
mov
push
sahf
xchg
es
repnz
mov
out
push
xor
aad
sar
stc
pop
shr
inc
inc
inc
test
rolb
test
xor
and
movsb
push
sbb
inc
ret
jnp
repz
hlt
ljmp
mov
shlb
ficomps
cmc
orb
mov
adc
xor
xlat
jl
rorl
dec
outsl
jle
faddp
jmp
fs
jbe
ret
lods
mov
jne
cld
dec
rcl
jae
xor
sub
pop
mov
les
mov
mov
sub
xrelease
sub
mov
add
cmc
xlat
and
jns
jecxz
pop
xor
mov
xlat
clc
sub
pop
fildl
mov
pusha
ds
mov
mov
fiadds
testb
clc
adc
mov
sbb
std
lock
lock
cmp
add
xor
test
jb
lods
jae
pop
mov
ss
andb
xor
push
mov
push
ds
cwtl
aam
rcll
data16
add
jmp
mov
and
in
push
mov
test
cmpsl
xchg
dec
adc
push
pop
xlat
mov
sbb
mov
push
sbb
cmpsb
push
mov
adc
sub
pop
scas
stos
ljmp
enter
hlt
daa
jns
cmpsb
inc
or
jo
pop
je
dec
sbb
out
inc
or
sbb
sbb
fisubrl
fidivrl
dec
xor
stos
push
lods
rcll
stos
sbbb
out
xchg
cmpb
in
sar
xlat
ss
addb
xlat
xor
xor
popa
std
jecxz
jbe
fildll
mov
mov
push
and
lea
cmc
outsl
bound
fmuls
notb
fdivrl
cmpsl
adc
jle
into
xor
test
sarl
nop
inc
cwtl
pop
in
mov
cmpl
push
jno
jle
mov
push
movsb
push
shlb
push
dec
outsl
pop
jmp
icebp
dec
xchg
out
inc
sahf
bound
stos
jae
int3
sarb
loopne
xor
ret
iret
lret
adc
fiaddl
pop
mov
mov
cmp
test
pusha
out
mov
lds
shrl
inc
lret
mov
sub
add
ds
jle
dec
std
or
mov
sbb
fadds
fstl
ret
fs
push
and
xlat
jle
lods
into
mov
dec
dec
add
test
scas
stos
fwait
ja
mov
push
jl
loope
dec
cs
shl
mov
aad
mov
sub
dec
test
loop
mov
faddp
leave
sub
xchg
js
aaa
cwtl
jb
xor
jae
fwait
xchg
cs
mov
fdivrl
xchg
loopne
fs
sahf
sub
adc
fsubrs
push
xor
loopne
ja
fwait
cmp
mov
or
jg
repz
rolb
out
jne
fwait
jne
in
sbb
mov
pop
push
push
pop
mov
ror
mov
xchg
nop
loop
mov
xlat
and
xchg
mov
cltd
pop
adc
mov
test
cltd
loopne
gs
add
icebp
cmp
mov
out
adc
nop
popa
and
movsb
cmp
sti
scas
es
jno
mov
aas
rorb
popf
rcrb
cmp
iret
jno
push
mov
xchg
fsubrs
rcrb
inc
data16
pop
mov
jp
js
out
popf
pop
sub
shll
xchg
outsl
out
jae
mov
je
pop
dec
xorl
je
movsl
sbb
and
sub
lret
push
cmpl
stc
int
add
addr16
cs
and
lcall
inc
sbb
adc
sub
test
inc
nop
xchg
inc
mov
lret
subb
push
cltd
les
stc
xchg
into
sbb
dec
ds
test
insb
movsb
sub
testl
add
mov
jmp
inc
push
jae
or
cmc
mov
aam
insb
and
loopne
mov
mov
testb
pop
aaa
jb
addl
add
jno
sbb
push
mov
push
xor
cmp
hlt
adc
repnz
xorl
ror
pop
in
add
xor
mov
mov
lds
push
mov
loopne
mov
les
or
ret
add
mov
xor
mov
or
cltd
cli
popf
sbb
mov
rolb
aas
xor
ja
jl
jb
add
inc
stos
lods
dec
jnp
loop
push
mov
adc
out
push
mov
dec
aas
mov
and
fnstenv
mov
xchg
lcall
mov
adc
adc
cmp
jg
sub
test
pop
icebp
mov
mov
cmp
sbb
mov
nop
test
sub
lcall
xlat
jecxz
pop
xor
pop
cmp
and
popf
das
xlat
sbb
lret
xlat
cmp
adc
rcr
sar
xor
pusha
outsb
inc
xlat
stos
sub
push
and
ja
pop
data16
popa
and
inc
sbb
call
dec
sub
ret
add
mov
in
insl
iret
aad
fdivl
ret
sub
ds
mov
mov
inc
dec
mov
fiaddl
pop
xchg
aam
mov
jnp
call
inc
and
mov
mov
fisubrl
ljmp
int
aad
mov
out
jle
cmp
inc
in
not
inc
negb
and
loopne
push
and
bound
sub
pop
repz
fstpt
adc
add
dec
pop
jns
rcll
cmp
mov
inc
in
fcomps
out
push
in
adc
imul
rcrl
cmc
aam
loop
mov
mov
xchg
lds
shlb
mov
shll
jns,pt
int
mov
push
xchg
out
aam
sbb
div
lods
jle
xchg
mov
lods
adc
xchg
cmp
push
adc
inc
insl
add
lds
sahf
xor
sbb
shll
fs
cltd
mov
dec
cwtl
inc
jbe
inc
fstps
outsb
clc
icebp
jnp
pop
hlt
addr16
loope
in
jns
cltd
pop
repz
clc
cs
scas
rolb
jnp
or
ret
push
stc
mov
ja
test
and
pop
movsb
xor
mov
sub
or
xor
xchg
loopne
cmp
loope
jb
lock
push
lcall
pop
js
inc
jg
bound
es
or
adc
out
dec
cmp
cmp
test
stos
out
xor
or
bound
push
adc
pop
arpl
inc
inc
in
loope
and
je
xor
jo
ja
mov
fchs
sbbb
test
in
mov
das
dec
in
inc
call
adc
fisubrs
stos
inc
mov
mov
repnz
mov
or
neg
pusha
out
movsl
add
inc
push
cwtl
fsubl
add
popf
mov
dec
adc
push
jns
or
pop
adc
and
xor
mov
cmc
sub
xchg
inc
lds
subl
mov
xchg
sub
in
cmpl
cmp
aad
dec
test
sbb
mov
ljmp
and
pop
sar
xlat
les
jl
loop
call
mov
sahf
sbb
jle
dec
inc
push
mov
mov
pop
mov
push
sub
xor
je
push
and
push
mov
aad
insl
mov
or
ret
push
mov
inc
adc
ljmp
and
jb
sbb
xorb
jge
inc
cmp
decb
imul
popa
divl
mov
sub
sbb
mov
shll
fistpll
mov
cmpsb
lds
sub
mov
je
push
in
and
sbb
ficoms
push
fs
mull
outsl
sbb
fistpll
pop
pop
xchg
enter
or
cmpsl
fildll
jnp
daa
inc
xchg
sti
jns
outsl
jg
shlb
cs
sbb
insl
popf
nop
pop
ret
inc
loope
ret
mov
cwtl
data16
int
cltd
out
lea
dec
pusha
les
pop
bound
shlb
mov
lods
sub
jae
out
ljmp
mov
xlat
stc
mov
pop
xor
not
mov
lock
jmp
mov
lods
out
daa
stos
sbb
loopne
ss
icebp
ljmp
sub
jnp
xchg
mov
inc
mov
pop
inc
push
cmp
cmp
xchg
and
lahf
sub
loopne
fimuls
and
cmp
adc
inc
stos
int3
insl
stos
dec
outsl
out
sub
pop
pop
inc
call
mov
sub
jp
lcall
lock
outsb
loop
jl
sbb
jmp
mov
int
jae
push
mov
cmc
dec
and
js
aaa
adc
pop
out
mov
inc
jmp
push
shll
jmp
lcall
iret
aad
jnp
mov
imul
push
xchg
sti
in
lds
ljmp
mov
push
subb
fcomp
jl
aas
mov
scas
sar
sbb
out
in
ljmp
sub
je
lcall
inc
out
fwait
adc
jecxz
in
mov
xor
dec
inc
cmpsl
push
int
push
lcall
dec
movsl
lods
leave
push
mov
rcrl
ss
stc
lcall
mov
adc
adc
push
cmp
and
movsb
in
push
dec
sub
mov
sub
push
add
bound
mov
shrl
int
int3
js
push
sub
mov
mov
cld
mov
packuswb
or
cmp
popa
inc
es
push
and
cmpb
mov
jbe
push
daa
lret
push
pusha
std
fs
cmp
lods
fcoms
or
repz
mov
mov
sbb
cmp
xchg
adc
jg
out
xchg
xor
fdivl
mov
cwtl
scas
or
sbb
shll
aas
lret
xchg
cltd
jb
bound
call
sbb
pop
adc
or
push
inc
xchg
sub
adc
sub
cld
gs
es
cmp
xchg
ret
mov
lcall
pcmpeqd
or
mov
push
std
aaa
dec
mov
mov
lock
xor
in
fisubrl
js
mov
pop
push
mov
jl
dec
or
arpl
mov
popf
push
popa
push
sub
das
add
cmp
adc
mov
jnp
or
mov
sbb
fs
mov
sbb
test
push
cmpb
fisubrl
fs
cmp
mov
mov
dec
cmp
push
cmp
and
sub
jmp
cmp
sbb
pop
mov
inc
leave
pop
push
jbe
mull
jmp
xor
dec
inc
pusha
dec
clc
lea
and
add
movsb
mov
mov
in
mov
hlt
imul
out
sub
dec
outsl
xor
xchg
int3
xchg
sub
ljmp
je
lret
push
ret
les
push
jb
or
mov
xor
divl
js
insb
aad
jnp
subb
insb
pusha
pop
dec
outsb
pop
push
dec
int3
and
fs
outsl
addr16
pop
pop
add
mov
jp
mov
push
repz
jne
jg
inc
add
mov
psubw
fwait
sub
iret
rcrb
pop
fs
fsubs
push
es
pop
sbbl
adc
cld
scas
xor
enter
push
test
xor
jg
cwtl
cwtl
xchg
xor
jecxz
fwait
jno
lret
leave
xchg
setle
dec
stos
and
fstps
add
push
aaa
push
pop
push
das
lds
jne
mov
daa
cmp
xchg
in
aaa
out
xor
cmp
inc
adc
mov
std
cmc
adc
pop
jp
bound
rcrb
call
xchg
jl
pop
xchg
stos
adc
lods
repnz
mov
jl
ret
lods
xchg
push
bound
xchg
jl
sti
pusha
inc
jg
lds
sub
or
xchg
ljmp
sub
and
and
shrl
xor
fs
pop
mov
repnz
lret
push
jne
int
rcl
out
xchg
push
and
jne
arpl
or
out
inc
xor
in
mov
adc
and
pop
hlt
out
cld
or
xchg
std
imul
mov
add
jmp
xchg
clc
gs
jno
std
pop
adc
push
sbb
pop
lds
pop
mov
insb
shll
ja
fincstp
sub
les
mov
push
push
jge
divb
std
xor
test
outsb
adc
scas
cmp
rcrb
and
push
sub
cmc
shl
sub
pop
repnz
pop
mov
aas
fsubrl
call
scas
jecxz
sub
cmp
inc
clc
cmpsb
pop
push
jbe
loop
lock
scas
add
sbb
fists
push
push
add
pop
and
imul
gs
add
hlt
jae
cwtl
mov
sub
dec
jl
jne
lcall
sub
sbb
les
adc
inc
jns
mov
mov
cli
ss
movsb
jmp
sub
sub
push
push
aam
cmpsl
jmp
andl
jbe
lods
xchg
int
add
push
mov
jo
and
lret
js
push
imul
not
push
cltd
testb
dec
aad
jge
stos
dec
inc
sbb
loopne
addb
cmp
ljmp
test
movsl
sbbl
mov
jbe
and
cmc
adc
push
aas
in
loope
aaa
mov
and
sbb
ficoml
loopne
addb
hlt
xor
addr16
subl
inc
shlb
sbb
int3
ljmp
ljmp
sti
movl
loope
mov
lods
icebp
aas
add
insl
jp
fistpl
jbe
imul
cmc
add
jg
inc
aam
pop
fsubrs
int
sub
push
negb
imul
lcall
inc
ljmp
cmp
out
iret
pop
pop
sub
sarb
pop
cmp
hlt
push
fwait
push
cmpsl
and
ds
cmp
das
adc
les
testl
lods
call
popf
shr
gs
fidivl
pop
or
ret
fidivrs
push
mov
inc
lret
subl
loop
repnz
and
out
movsl
or
mov
popf
shlb
and
jmp
sbb
mov
aam
pop
mov
clc
adc
dec
daa
in
popf
dec
mov
imul
int
into
mov
push
add
jge
xchg
jns
addr16
inc
push
jl
add
out
mov
mov
mov
xchg
pop
negb
fwait
mov
mov
pop
inc
adc
cli
push
dec
cmpsl
rcrb
mull
cld
sbb
cmovnp
or
andl
decb
xchg
lret
jns
xor
in
insl
popa
shrb
loopne
sub
pop
or
and
mov
mov
or
and
mov
lock
inc
jb
gs
adc
sub
xor
arpl
add
sub
sub
fcmovu
data16
jbe
xor
es
orb
mov
and
stos
mov
lea
pop
xor
jne
bnd
pop
insl
addl
aas
mov
adc
jae
sbb
cmpsb
push
push
dec
push
inc
mov
mov
push
push
cmpsl
mov
ds
repz
bound
add
in
lds
shrb
mov
mov
je
cmpsb
hlt
test
subl
or
lret
mov
cwtl
dec
xor
jo
xor
inc
jb
cmp
pusha
js
in
andb
data16
cwtl
fisttpl
aas
xchg
movsl
rcll
pop
imul
and
jg
ficompl
sub
xor
in
repz
cs
das
negb
outsb
fwait
jae
ret
jae
mov
jl
fimuls
adc
inc
ljmp
xorl
push
insl
int3
mov
das
jno
cmpsl
mov
dec
dec
aam
mov
js
xorb
pop
les
not
loope
cmp
mov
call
inc
inc
fstp
rolb
insb
test
xchg
insl
rorl
arpl
lahf
dec
mov
outsl
andl
and
ja
imul
mov
and
notl
cmp
js
mov
mov
lea
nop
ret
mov
xor
imul
outsl
ja
xor
mov
aam
int3
and
sbb
das
pop
jg
push
mov
xchg
push
xchg
sbb
push
mov
es
sub
dec
or
cmpsl
cmp
or
andl
jmp
push
aaa
pop
adc
cmc
fcmove
aas
fstpt
push
inc
sub
ja
push
cmpsl
int
cmc
enter
call
push
pop
push
mov
sub
frstor
sarl
dec
pop
dec
sti
aad
and
mov
mov
shll
pop
div
icebp
sbb
stc
mov
cmp
enter
and
add
mov
add
mov
cmp
sbb
push
int
sub
push
adc
mov
ret
sbb
mov
cmpb
jg
mov
jg
ret
shll
jns
and
bound
test
sbb
jne
popa
pop
aad
mov
jne
sub
sbb
mov
push
xor
aas
out
jmp
and
sbbb
mov
rol
je
test
test
bound
sub
out
inc
xchg
adc
xor
xor
addl
rep
mov
into
mov
cltd
sahf
hlt
aam
mov
aad
fisttps
mov
daa
xchg
sub
jno
imul
mov
xor
jl
or
scas
or
push
push
pop
ret
cltd
not
cli
push
fists
aaa
loopne
dec
mov
mov
xor
add
gs
scas
push
idivl
push
push
and
xor
pop
xchg
pop
fs
pop
ss
push
or
pop
xor
xchg
sbb
dec
fistpll
or
psraw
mov
push
add
shrl
sub
es
dec
fdivs
push
lret
push
bound
testw
cmp
add
ss
frstpm(287
lock
cmp
push
fsubrl
sub
mov
add
nop
loopne
jne
cmc
add
stc
mov
leave
push
into
lret
sub
jmp
push
dec
adc
xchg
push
jns
add
mov
mov
imul
push
xchg
xchg
sbb
insl
pusha
out
add
mov
adcb
fidivrs
addr16
pusha
add
push
xchg
adc
xchg
in
inc
in
insb
sti
push
sub
aam
sbb
add
ljmp
gs
insb
lods
arpl
push
or
lea
xchg
sarl
rcrl
scas
mov
jne
jge
bound
loopne
movsl
das
les
adc
inc
fstpl
xchg
fildl
sub
xor
pop
outsb
into
push
aad
test
mov
add
jbe
movsl
test
or
mov
leave
pop
ds
mov
rolb
enter
push
mov
xor
not
cwtl
mov
inc
fmull
jo
inc
ja
outsb
sub
push
fbld
fs
jle
es
jge
popf
lcall
repz
pop
fmull
mov
cwtl
mov
arpl
cmpsl
test
pusha
out
xor
fstps
pop
lahf
or
xchg
and
inc
cli
cmp
into
push
or
jne
scas
and
and
push
test
jb
add
cmpsb
push
pushl
or
fs
or
xor
rorl
jb
testb
ss
sub
cmp
hlt
fsubs
insl
dec
in
sub
les
inc
shr
fstpl
repnz
xchg
pop
pushf
lods
push
imul
jg
cmpsl
dec
rcr
daa
dec
or
test
fwait
pop
fwait
pop
jnp
push
nop
or
adc
repnz
cwtl
jmp
ret
scas
adc
mov
rorl
loope
daa
test
insl
dec
push
adc
out
pop
cmp
xor
leave
xchg
jno
fildll
int
decb
sbb
mov
stc
lods
loop
jb
outsl
pop
push
pop
pand
push
sub
test
cmp
test
jo
into
shll
jg
pop
repz
leave
test
push
and
inc
mov
in
insl
add
popa
mov
leave
pushf
jns
jbe
mov
push
lret
cmc
adc
leave
sub
xor
jecxz
xor
mov
nop
iret
cmp
jmp
mov
jle
or
and
cmpb
or
xchg
add
pop
push
enter
cmpsb
jp
and
int3
stos
insb
jle
xor
cmp
iret
cmp
sub
rcll
lret
and
shll
mov
leave
fildl
mov
stos
add
and
in
aaa
fdivrs
out
adc
cmp
mov
scas
mov
inc
jmp
imulb
cli
mov
and
push
test
shll
mov
push
jl
mov
sbb
test
js
mull
dec
mov
pop
mov
pop
and
add
mov
add
lea
gs
lret
mov
sbb
xlat
mov
pop
out
push
cmp
repz
pop
rol
das
fwait
mov
cmp
sub
scas
and
rolb
dec
movsb
leave
test
shrl
repnz
or
mov
inc
mov
fsub
mov
xlat
mov
fisttpll
cmpsb
fistpl
pop
mov
iret
aad
shrb
sahf
jmp
push
xor
in
mov
mov
xchg
pop
or
xor
rcl
mov
jge
inc
hlt
dec
ja
ds
cmp
es
xlat
test
cmp
mov
pushf
and
cmp
push
ljmp
das
mov
sarb
push
jl
mov
xchg
test
push
out
jmp
stos
inc
push
test
or
aam
pop
inc
lret
outsl
mov
xchg
jl
adc
js
pusha
mov
gs
sbb
pop
movsb
add
push
jmpw
xchg
int
mov
addl
sbb
iret
sbb
pop
sub
mov
pop
nop
movsl
aad
jmp
add
adc
std
push
das
jns
or
roll
shlb
mov
pop
cmp
test
hlt
lods
or
mov
fistpll
ds
mov
les
popf
shll
rclb
pushf
js
sbb
repz
inc
gs
cmp
ds
xchg
xchg
mov
decl
lret
push
mov
pop
pop
push
sub
mov
xchg
sbb
cmc
sub
dec
mov
orb
es
stc
mov
lret
push
pushf
jo
leave
arpl
enter
adc
out
test
push
cs
push
sub
jbe
jns
mov
subl
jb
outsl
inc
xor
loop
mov
aas
add
js
fs
xadd
cmp
dec
xor
pop
sti
xchg
mov
cwtl
popl
adc
inc
stc
shll
mov
xor
push
shll
sub
mov
icebp
dec
jge
xchg
sbb
loope
push
nop
adc
pop
xlat
mov
sbb
call
push
cltd
jp
or
icebp
push
inc
pop
popa
leave
imul
add
mov
out
push
jbe,pt
cltd
xchg
mov
fistpll
push
xor
xor
mov
fists
cmpsl
fbld
xchg
int
xchg
adcl
pop
lea
pop
pop
jecxz
push
pusha
out
sub
mov
inc
xchg
lods
outsl
cmp
add
incl
jl
or
dec
test
sti
sub
mov
or
adc
loopne
mov
in
iret
int3
jmp
and
ljmp
mov
mov
mov
xchg
out
push
xor
inc
jge
in
sahf
test
adc
scas
mov
sub
jp
dec
movb
mov
call
pop
clc
jge
lock
js
setg
mov
es
movsl
and
push
popf
dec
out
test
pusha
mov
loop
lret
fldenv
movsb
repz
es
cmp
jmp
lahf
or
xlat
fnop
push
adc
repnz
jg
pop
push
insl
clc
stc
mov
ja
adc
sbb
in
or
je
out
into
popf
or
out
pusha
push
pop
lret
or
and
icebp
cltd
lret
jbe
lock
sub
xor
or
stos
lcall
test
lea
orb
add
nop
jmp
sub
ret
movsb
gs
addr16
push
jl
into
loopne
push
int3
push
mov
mov
aaa
sbb
mov
test
push
jo
clc
sbb
mov
pop
repnz
mov
neg
ljmp
in
imul
out
jge
ja
push
add
mov
cmp
add
test
mov
sbbl
rcrb
icebp
or
ds
aad
aas
mov
jnp
leave
sbb
sbbl
pop
pop
fwait
sub
cli
pop
push
fsubs
pop
test
pop
loopne
jbe
add
sub
xchg
imul
jae
add
jecxz
ret
inc
pop
inc
adc
movsl
mov
pop
clc
mov
mov
mov
rclb
int3
xor
out
dec
mov
pop
pop
pop
insl
xchg
sbb
dec
imul
jmp
je
jno
and
lahf
lea
int
mov
adc
out
leave
repz
fs
jne
lcall
rcr
cmpsb
pop
in
mov
std
push
cmc
jle
or
mov
mov
mov
rolw
push
sbb
fistl
mov
aad
cmp
pop
xchg
sti
sbb
jbe
pop
in
outsb
test
fwait
adc
dec
push
jnp
shrb
and
cmp
lahf
sbb
aad
cmpsl
nop
dec
insl
outsl
adcb
in
and
pop
cmp
stos
inc
shl
clc
jle
inc
and
xchg
cmpsb
xchg
ret
add
in
arpl
scas
sbb
fsubrs
fimuls
push
cmc
xchg
sbb
or
scas
int3
or
push
es
or
and
sub
mov
sub
loop
pop
pop
fimull
or
dec
lcall
daa
sbb
sahf
aas
sub
dec
or
icebp
subl
out
sti
push
insl
ljmp
lods
push
test
jge
fyl2x
negb
sti
test
imul
test
or
inc
in
cwtl
mov
jp
shrb
mov
gs
mov
jp
xlat
stos
sti
xchg
bnd
sub
add
cld
aaa
inc
inc
xchg
push
jecxz
push
fdivrl
fstl
cmp
stos
repz
cld
mov
mov
dec
mov
and
imul
push
add
fisttps
jno
int
jno
shl
xor
inc
mov
mov
lea
push
xadd
lret
ljmp
es
lahf
lods
push
pop
cwtl
mov
cld
lock
in
test
setle
and
xchg
sbb
outsl
ja
and
pushf
jbe
dec
insl
shll
repz
enter
jo
addl
jb
add
push
push
mov
lcall
jmp
cmp
lds
cltd
xlat
addb
adc
insl
daa
js
mov
jmp
xchg
sub
rclb
pusha
mov
aas
gs
mov
mov
pushl
sbb
dec
dec
xor
lods
daa
lods
shlb
int
xchg
and
ss
sub
dec
dec
fst
je
out
add
nop
ret
dec
lcall
in
cmpsl
xor
ds
loope
pop
sub
outsb
dec
mov
sbb
ret
and
or
dec
fidivrl
sbb
and
xchg
andb
push
js
xor
add
mov
lret
sbb
and
fwait
je
and
xrelease
sub
ds
adc
ret
mov
incl
inc
jge
and
or
cmpb
mov
leave
pop
pop
xor
aad
mov
ljmp
movsb
jge
loopne
mul
mov
mov
jae
scas
loopne
push
xchg
pop
loopne
clc
inc
cmp
mov
adc
mov
sar
fwait
inc
mov
imulb
addr16
inc
mov
inc
inc
inc
loope
push
mov
lds
stc
mov
fldcw
mov
cmp
ja
cmpsb
imul
call
inc
inc
lcall
xor
into
inc
sbb
sbbb
insb
pop
mov
mov
adc
xor
mov
outsl
sahf
mov
jnp
push
adc
fsubl
sbb
adc
scas
imul
ret
gs
pop
rorl
fstps
adc
dec
sbb
fidivs
xchg
pop
mov
mov
mov
test
xchg
cmp
sbb
cmc
and
fsubr
enter
mov
push
dec
scas
cwtl
pop
adc
pop
xchg
inc
or
mov
mov
jno
sbb
hlt
popf
pusha
xlat
stc
jno
adc
sub
test
dec
adc
jb
out
ficoml
cmp
pushl
push
inc
cmp
ds
adc
daa
and
lods
in
mov
test
nop
adc
mov
lods
add
and
fidivl
sbb
sub
test
jmp
arpl
popa
pop
sti
or
jge
repnz
push
mov
fsave
jecxz
int3
cmp
cltd
sbb
mov
push
scas
iret
cmpsl
in
addl
enter
insb
cmp
mov
sti
sbb
ja
stc
in
push
repnz
shrb
dec
jl
in
pop
arpl
idivl
or
xor
fs
mov
or
popf
mov
cmp
inc
mov
mov
xchg
pop
push
outsl
rcrl
test
pop
inc
sub
out
mov
scas
adc
cmp
movsl
fcoml
fdivrs
lds
pop
push
push
push
sarl
pusha
dec
mov
movsl
stos
dec
xchg
call
cmp
fisubrs
cmp
mov
int3
or
pop
jp
lds
pop
into
insb
mov
vshufpd
lcall
pop
mov
dec
jo
push
test
fisubrl
mov
cmp
inc
pop
sbb
mov
push
lock
lcall
lea
dec
cwtl
inc
mov
and
fucomip
pop
incl
add
cltd
fwait
pop
xchg
mov
out
inc
push
mov
adc
enter
xor
shll
push
inc
pop
lahf
int
push
out
inc
fsubrs
mov
lcall
xchg
jne
adc
arpl
inc
jmp
cmpsb
xchg
jns
mov
leave
xchg
mov
add
and
or
outsb
lds
das
cltd
sub
xor
xchg
and
iret
cmc
mov
inc
push
imul
out
aas
fnsave
pushf
jbe
cmp
imulb
std
mov
xchg
subb
push
pop
pusha
mov
daa
fincstp
in
sbb
jns
das
xchg
jno
mov
shlb
das
test
clc
fwait
ret
push
mov
adc
cmp
inc
rclb
adc
ljmp
xchg
cmc
jecxz
cmp
xchg
in
scas
dec
mov
movsb
cmp
rorl
les
mov
outsl
mov
or
divb
nop
out
mov
jnp
mov
xor
aam
call
icebp
jmp
and
in
dec
xor
cmp
inc
repz
mov
push
jecxz
pop
mov
stos
out
into
xlat
cmp
and
or
andl
xor
jge
sub
or
lds
scas
pushf
xor
in
mov
ja
pop
mov
ret
in
push
xor
push
mov
les
movsb
mov
pushf
add
std
loop
out
es
xor
mov
clc
out
and
or
ret
push
mov
ret
aaa
orb
in
xchg
repz
or
lret
scas
mov
mov
inc
outsb
mov
jno
cli
shrl
xlat
test
mov
dec
push
adc
add
scas
adc
das
mov
div
jg
sbb
and
hlt
popf
add
and
idivl
xchg
dec
adc
pop
mov
imul
xchg
cwtl
inc
sarb
loopne
mov
ss
insb
into
cmp
in
clc
mov
jle
or
push
fisttpl
rclb
orb
add
fwait
and
ljmp
lret
mov
fdivl
into
leave
scas
test
xor
push
int
imul
pop
mov
and
xor
add
mov
mov
ret
inc
into
cmpsl
mov
jne
jge
mov
mov
lahf
ja
cmp
cld
add
cmp
push
dec
jae
pop
mov
dec
mov
loope
xchg
and
dec
inc
mov
sub
aad
xor
fwait
dec
inc
mov
jmp
lea
cmp
mov
mov
cmp
hlt
push
adc
cmp
push
and
in
out
pop
mov
arpl
and
inc
ss
bound
xchg
aaa
push
imul
addr16
adc
notl
imul
cmpsb
addr16
cmp
out
test
cmpsb
idivl
into
sub
out
stos
test
xlat
sub
or
addr16
add
pop
or
fidivl
js
jae
idivl
lret
stos
and
cmpsl
add
js
cwtl
aaa
fiadds
push
popl
fsubr
push
mov
xor
add
daa
mov
outsl
fs
mov
testb
fcompl
fs
mov
negb
shlb
xor
inc
nop
push
or
add
or
jbe
sbb
rcrb
lret
mov
mov
mov
in
ret
mov
push
push
fcomps
mov
in
pop
mov
stos
leave
jbe
jecxz
push
sahf
cmpsl
shrl
xchg
nop
fistps
or
out
and
pop
xchg
dec
orl
rorb
movsl
mov
or
scas
jb
inc
jp
fldt
push
cmp
add
vfrczss
pop
ljmp
mov
inc
icebp
mov
movlps
lret
into
clc
lahf
xor
pop
push
push
pop
movsl
out
movsb
movsl
ja
ficomps
lods
cmp
fwait
xor
inc
fmuls
jle
dec
sbb
negb
or
movsb
ret
pushf
insb
xchg
out
pop
sbb
push
dec
lret
mov
push
aas
cltd
sbb
mov
lds
lds
mov
dec
sub
js
imul
decb
aad
mov
mov
mov
lret
jecxz
repz
es
jge
ljmp
stos
xor
or
xchg
test
xchg
repnz
hlt
push
cltd
sbb
adc
sbb
push
pop
nop
mov
pop
push
mov
fsts
jns
shlb
jle
push
ljmp
cmp
pop
mov
mov
xchg
mov
push
cwtl
jbe
jo
call
sbb
pop
cmp
cwtl
iret
scas
cs
pop
xchg
push
push
xor
sbb
xor
in
jp
or
mov
adcb
ss
xor
cmp
pop
fists
insb
cs
and
fbld
push
ja
pop
hlt
in
inc
outsl
pop
cltd
imul
testl
aas
xorl
and
ja
add
int
and
ss
xchg
cld
inc
cs
movsl
into
inc
movsl
test
aas
das
test
lret
fcomps
in
mov
sub
adc
repz
jge
outsb
add
or
outsb
shll
out
push
sub
jecxz
jb
cld
fmuls
or
mov
je
cmp
and
lds
jbe
insl
cwtl
scas
xchg
sbb
and
mov
sbb
jl
push
cmpb
sbb
call
cli
sub
sbb
adc
pop
int
frstor
cmp
dec
add
xchg
add
js
mov
rolb
loop
orb
xor
sbb
pop
aaa
fildll
fildl
pop
fwait
ret
add
pusha
pop
xor
je
xor
xchg
jmp
sub
inc
bound
cltd
add
das
cwtl
jg
push
mov
sbb
iret
pop
xchg
or
or
dec
dec
shll
in
mov
aad
icebp
and
lea
pop
pop
repz
cld
and
lods
rcl
dec
xorl
js
aam
cld
pop
fsubr
pop
dec
rcl
pop
fst
pop
adc
jae
cmp
xlat
pusha
enter
jg
jmp
mov
aad
inc
jmp
movsb
sbb
pushf
jnp
sbbb
jbe
xor
cmp
push
push
sub
add
out
xor
dec
rcrl
clc
add
test
data16
xchg
test
and
ret
mov
ret
scas
mov
mov
divl
mov
aaa
mov
test
jl
or
mov
xchg
adc
bound
pop
cmp
pop
iret
push
fnsave
out
push
add
lahf
push
mov
nopl
jb
jae
sti
sbb
inc
loopne
sbb
sub
or
cltd
mov
movsl
pop
sub
scas
iret
push
scas
fmul
cs
stos
shrb
test
pop
xchg
shll
repnz
or
adc
bound
aad
shr
mov
orb
add
dec
repz
movsb
add
loopne
xchg
jb
jns
cs
hlt
in
aas
jns
jne
xchg
icebp
scas
es
mov
pop
aaa
xor
push
nop
and
lret
xchg
cld
inc
jbe
and
inc
add
pop
dec
pop
mov
daa
cltd
inc
dec
add
imull
in
mov
sub
dec
cmp
mov
adc
adcl
cmp
add
push
push
int3
das
add
sarl
dec
adc
aaa
push
call
sub
cwtl
js
sub
ss
mov
xlat
dec
ret
testl
mov
lock
jne
push
mov
ss
rolb
dec
cli
neg
ret
stc
xchg
outsb
xlat
out
xor
mov
sub
je
xor
insl
xchg
fdivp
lods
jbe
scas
add
cmp
mov
fisttps
xchg
loopne
inc
sub
andb
mov
or
aam
lahf
inc
mov
cmpsl
lret
sbb
cli
lods
xorl
mov
mov
repz
pop
pop
out
adc
call
add
jno
jl
arpl
inc
inc
mov
aam
adc
mov
jmp
jbe
pop
xchg
pop
in
inc
divb
fwait
mov
or
lods
xor
push
gs
push
fwait
jmp
sbb
lods
inc
sbbb
mov
add
mull
fcoms
fidivrs
mov
shl
cmp
add
jmp
test
or
jnp
xchg
inc
fmul
daa
out
bound
sbb
sub
push
xchg
hlt
xchg
stc
cmpsl
ja
das
sbb
scas
scas
push
pop
mov
mov
pop
into
mov
sbb
mov
aas
jl
inc
mov
sub
mov
cltd
cmpsl
sahf
stc
mov
repnz
leave
aam
adc
inc
fwait
cmp
pop
jge
ficompl
test
xor
sbb
cs
or
fsubrl
filds
mov
mov
jae
sar
scas
pop
mov
imul
pop
fiaddl
scas
call
gs
mov
push
fcmove
fmuls
jne
push
cmp
lret
adc
dec
loop
clc
sbb
rcl
leave
mov
test
enter
cli
andb
sbb
pop
jg
lds
stc
xor
xlat
iret
jnp
or
out
xchg
mov
jo
xchg
je
ss
insl
dec
push
inc
sub
xor
arpl
cld
movsb
rcrl
cmpsl
add
mov
pop
cmc
fwait
rcll
arpl
push
inc
cmp
pop
dec
cmpl
ficompl
out
cmp
jg
mov
cli
mov
mov
mov
sbb
sbb
dec
insl
cmp
xor
mov
xor
xchg
pop
cmc
in
xlat
or
mov
pop
mov
dec
mov
and
sti
pusha
cs
xchg
icebp
lea
pop
into
mov
movsl
loope
jbe
es
into
sbb
push
sub
orl
lahf
jecxz,pt
push
add
filds
leave
xlat
jmp
dec
sbb
loope
mov
aam
es
iret
scas
xlat
adc
or
nop
pop
dec
dec
pop
lds
rcl
mov
insb
gs
push
enter
sbb
inc
push
push
stc
add
ds
xor
inc
xor
and
test
loope
dec
int3
daa
adc
icebp
outsb
out
outsb
pop
frstor
xor
roll
inc
inc
scas
sbb
imul
pop
ret
cmp
jecxz
sbb
dec
mov
and
add
cmp
scas
je
jns
popl
mov
mov
xor
adc
push
addr16
pop
lahf
xor
insb
sbb
lahf
test
inc
iret
lods
xorl
in
and
pop
or
cs
cli
cltd
pop
cmp
aas
cmpsl
adc
sbb
lcall
jo
notl
ds
mov
xor
imul
mov
xchg
ss
xchg
aaa
mov
sti
in
xor
and
dec
inc
pop
cmp
push
rorb
add
mov
mov
mov
pop
or
int
ret
lods
jae
and
movsl
es
je
xchg
fisubs
in
and
aaa
lret
jecxz
in
jbe
mov
jns
or
js
fmull
testb
in
jmp
scas
pcmpeqw
stos
push
adc
xchg
jl
lret
jne
lds
adc
push
mov
jno
loop
jno
jecxz
xchg
dec
aaa
ja
hlt
and
jbe
loopne
mov
sahf
lret
dec
cwtl
mov
insl
push
pushf
sti
xor
push
cmp
in
mov
into
insb
mov
xchg
adc
mov
lock
and
in
popf
adc
and
xchg
scas
push
or
enter
push
les
dec
mov
lahf
mov
out
cmpsl
dec
frstor
jae
icebp
mov
inc
fldenv
cltd
sahf
jne
sub
dec
bound
mov
inc
sub
mov
ret
daa
lods
sub
aad
adc
xor
fwait
mov
imul
pop
fdiv
sub
jmp
sub
js
dec
insb
int3
jae
cmp
icebp
dec
insb
pop
xorb
movsl
fdivrs
sub
push
cmp
lds
mov
or
dec
pop
daa
jo
cmp
mov
mov
mov
or
pop
sarl
mov
lret
xchg
les
test
inc
adc
movsl
xor
mov
mov
js
jle
out
xlat
xchg
in
mov
jno
sub
adc
sbb
adc
and
movsl
enter
pusha
push
jge
jo
jnp
in
adc
push
cmp
or
xchg
pop
push
scas
inc
jns
or
bound
jne
imul
dec
add
dec
mov
xchg
movsb
push
or
cs
dec
lds
clc
pop
int
pop
lahf
add
in
sar
fldt
shl
cmpsl
loope
leave
movsb
mov
les
sbb
jb
and
sub
and
add
mov
je
xlat
adc
cmp
sub
divl
int
push
movsl
movsb
adc
sub
inc
into
test
lods
inc
mov
iret
and
popf
je
push
dec
push
cmc
lahf
mov
test
adc
das
ficoms
push
les
enter
cmpsl
int
mov
popf
push
mov
pop
jmpw
adcl
aaa
cmpsb
cltd
pop
dec
sub
clc
jo
xlat
jl
mov
vmovapd
add
xchg
mov
sbb
cmc
std
adc
out
add
pop
imul
inc
mov
xchg
aam
cmpsl
popf
out
dec
ds
push
ficomps
std
inc
int3
pop
sub
fadd
div
pop
push
mov
xchg
aad
int
aaa
pusha
sbb
arpl
lahf
add
test
out
and
nop
cmp
xor
jns
arpl
imul
sbb
shll
mov
jmp
dec
test
inc
and
push
daa
or
mov
and
popa
nop
movsl
mov
cltd
test
daa
push
sub
push
loop
test
or
std
rorb
add
repnz
and
push
jle
xor
sub
dec
sbb
sbb
mov
stos
mov
jg
jns
mov
mov
push
shrl
mov
or
clc
push
mov
add
popa
loope
adc
rcr
in
sbb
xchg
rorb
xor
out
jle
xchg
cli
pop
shll
cmpsl
rorb
xchg
sub
iret
add
jbe
insl
cmp
dec
adc
pop
lahf
lods
iret
push
mov
test
outsl
dec
xor
adc
mov
in
sbb
pop
ljmp
outsb
sub
pop
inc
fcmovne
daa
jg
xchg
push
mov
je
daa
in
mov
mov
and
out
inc
cmp
mov
ret
dec
jns
std
pushf
in
push
adc
dec
stos
jns
inc
movl
cmp
js
jae
cmp
pusha
adc
dec
xor
dec
push
mov
testb
sbb
mov
out
pop
aam
adc
dec
xchg
dec
add
stos
ret
push
and
popa
rol
adc
ja
scas
nop
mov
sub
icebp
fldl
bound
ret
stos
outsl
fildll
add
bound
push
inc
inc
and
adc
xchg
jecxz
jle
mov
les
push
push
sub
and
mov
mov
cmp
xor
shll
rcrl
adc
mov
mov
or
ret
in
ss
mov
mov
push
movsb
stos
loopne,pn
ljmp
xlat
aad
push
loopne
jle
pop
mov
jns
out
in
je
bound
fisubs
call
dec
inc
fisttpl
or
pop
mov
out
xchg
push
sub
fdivrl
dec
cmp
xchg
sub
jg
pop
loope
lods
inc
or
js
test
xchg
cmc
stc
dec
shrl
sbb
push
sahf
loope
aad
push
mov
lahf
pop
push
ja
mov
jmp
sbb
jno
pushf
ja
jmp
xor
test
fwait
mov
jns
scas
push
shrl
mov
or
jmp
jmp
mov
mov
lea
js
outsl
repnz
pop
adc
push
and
mov
and
scas
lret
sbb
inc
and
cmp
fisubrs
std
cmpsl
jbe
daa
xchg
pop
pusha
and
