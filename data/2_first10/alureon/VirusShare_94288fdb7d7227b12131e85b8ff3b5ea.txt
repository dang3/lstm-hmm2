push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
in
fwait
mov
sbb
dec
inc
xor
lret
mov
push
add
mov
pop
pop
xor
add
in
and
cmp
rcll
cmp
add
mov
inc
push
mov
inc
hlt
xor
out
stos
out
lods
mov
and
sbbb
mov
outsl
jbe
jns
sbb
cmpb
cld
mov
or
add
dec
dec
stos
test
xchg
xor
xchg
mov
pusha
in
mov
bound
or
cld
push
test
cmp
enter
outsl
dec
call
repz
mov
jbe
lock
mov
push
jo
lock
mov
lods
mov
xor
sbb
leave
popf
mov
loope
add
xchg
xchg
inc
in
push
pop
inc
repnz
pusha
pusha
add
adc
push
add
pop
or
mov
nop
sahf
fcmovu
xchg
test
popf
leave
xor
pop
stos
xchg
sbb
movsb
jmp
loopne
mov
insl
push
pop
jns
add
daa
hlt
aas
add
loopne
mov
xchg
adc
lret
es
aaa
mov
jge
pmaxsw
mov
adc
je
outsl
mov
mov
andl
xchg
out
jp
sub
dec
push
adc
out
repnz
inc
ret
pop
jg
adc
mov
movl
sub
cmpsl
lea
add
inc
pop
xlat
daa
inc
add
add
xor
pop
jg
imul
andl
or
xchg
xchg
mov
sbb
pushf
aas
jo
clc
mov
jbe
dec
shlb
mov
xchg
adc
outsl
jbe
sub
dec
adc
mull
xor
les
es
dec
in
jo
adc
int3
pop
rcr
pop
stos
aas
xorb
add
dec
dec
pop
xorb
sahf
sbb
xchg
bound
mov
stc
push
add
rolb
daa
insl
in
jae
js
sub
in
lret
scas
lcall
mov
stos
mov
push
je
mov
mov
dec
mov
add
xchg
and
pop
xor
sub
sub
dec
cwtl
sbb
incb
ret
xchg
mov
mov
mov
aaa
out
push
sub
loope
mov
cmp
mov
inc
lea
cmp
cmp
addr16
mov
jg
mov
add
insl
lods
cmpsb
cmp
mov
or
mov
sbb
leave
bound
mov
add
pusha
leave
jmp
outsb
mov
jmp
rol
repnz
jo
call
aad
ljmp
xor
xor
fs
adc
add
inc
fimuls
xchg
cltd
fistpl
mov
loop
out
add
mov
dec
rolb
add
add
lret
xor
and
addr16
shlb
or
cltd
ret
in
insl
cmp
or
pusha
mov
inc
insl
mov
out
pop
push
punpcklbw
or
inc
jle
inc
mov
xchg
addl
jmp
or
inc
pop
cld
nop
jnp
xor
shll
inc
int3
mov
fbstp
bound
fcmovnu
ds
in
ret
add
add
sbb
jb
pushf
loop
push
cli
xor
push
jg
bndstx
xorb
insl
scas
inc
mov
mov
int
jle
xchg
data16
inc
lods
out
mov
test
in
movsb
and
and
push
add
push
pop
fiaddl
xor
xor
sub
sbbb
out
pop
push
ljmp
lods
clc
xchg
mov
add
in
cld
dec
rorl
insb
inc
push
mov
jae
imul
sub
rclb
sub
jg
mov
xor
adc
xchg
loop
cmp
xchg
xchg
push
mov
xchg
aad
sub
lcall
les
mov
xorb
sbb
or
sbb
sub
std
pop
hlt
jecxz
divb
insl
jl
jg
inc
inc
setno
add
add
in
dec
mov
push
imul
or
arpl
ljmp
xor
xchg
mov
xchg
shrl
out
mov
xor
adc
icebp
add
js
sub
sti
ret
jecxz
push
leave
push
sbb
mov
rclb
fisubrl
in
push
lods
pop
cmp
xor
out
sbb
or
dec
ret
inc
ljmp
rolb
lods
cmp
jmp
pop
icebp
mov
cmc
ljmp
pop
push
test
mov
xor
lds
add
adc
push
imul
popa
pop
cmp
out
std
repz
psllw
xor
jmp
or
xor
pop
jo
jnp
jecxz
andl
pusha
cmpsl
mov
xchg
mov
push
sub
add
xor
lock
sbb
mov
jns
sub
or
repz
jno
xchg
fs
xchg
in
mov
and
pop
cmp
je
push
inc
add
loop
mov
scas
out
mov
fdivl
jecxz
test
dec
bound
sub
icebp
out
fistpl
dec
hlt
into
sbb
scas
mov
mov
lret
sti
inc
dec
add
and
in
add
in
bound
cmp
xor
or
mov
mov
mov
sbb
test
sbb
jle
jnp
cli
jp
jge
loope
mov
popa
mov
scas
sbb
into
aaa
adc
pop
cwtl
inc
das
xchg
mov
shl
sarb
das
mov
and
sahf
inc
jo
fmuls
loopne
sub
add
outsb
sbb
mov
les
stos
add
mov
sub
cmp
clc
insl
push
and
pushf
js
adc
sbb
insl
or
xchg
insl
jle
or
shrb
mov
inc
insl
mov
cmp
mov
ret
mov
ss
pushf
adc
or
in
mov
cmp
fimull
add
fisubs
mov
fwait
pop
or
xchg
push
movsb
les
adc
mov
xchg
mov
push
mov
lds
pop
mov
les
jno
lock
in
cmpsb
pop
dec
jl
mov
sub
jae
enter
dec
xor
inc
dec
push
pop
imul
mov
or
push
mov
lods
add
jnp
dec
xlat
mov
push
push
sub
rcrl
jnp
pusha
sbb
fmull
subb
out
ss
xor
add
adc
test
push
icebp
loop
mov
popf
jl
inc
and
std
push
sub
hlt
mov
jmp
pushf
push
push
lods
inc
retw
adc
jg
out
and
aam
push
push
add
add
sub
jge
mov
sub
inc
xor
mov
and
add
cli
and
cmp
pop
aas
test
mov
dec
inc
jnp
inc
shl
sbb
and
and
xchg
setle
sbb
mov
fcoml
dec
cwtl
stos
add
jle
cmp
and
dec
xor
cwtl
movsb
mov
or
fwait
mov
xor
or
push
mov
pop
add
or
inc
mov
hlt
mov
adc
subb
jle
xchg
lods
nop
scas
inc
mov
xchg
cmp
pop
clc
lret
cld
lret
insl
js
jg
mov
stc
jb
fdivs
jno
and
or
sbb
cmpsb
pusha
mov
sbb
mov
test
clc
or
rcrb
sbb
mov
push
int3
add
lock
cmp
pop
xchg
jno
or
cwtl
das
xchg
stos
fnstcw
mov
push
cwtl
mov
aaa
dec
sbb
mov
outsb
push
out
int3
fidivl
sbb
mov
int
mov
fdivrl
fldl
rcrb
nop
or
sub
inc
testl
ret
add
sub
sbb
insl
xchg
cmp
xchg
addb
imul
jbe
adc
addr16
sbb
repz
adc
cmp
xchg
mov
outsl
fmull
mov
pop
lcall
sbb
or
out
ds
pop
mov
pop
ljmp
push
hlt
mov
adc
setnp
addr16
sbb
or
les
movsl
cmp
inc
sub
or
add
add
pop
and
xor
sub
pop
decb
scas
gs
xchg
mov
in
dec
push
jecxz
pop
inc
jle
in
es
mov
sahf
data16
adc
or
mov
cwtl
fistpl
imul
pop
cmpsb
push
add
jnp
mov
pop
mov
push
js
lahf
push
imul
rcr
fsubr
fldt
mov
loopne
test
sti
jge
adc
pop
repz
shll
vmovshdup
push
add
inc
ja
jns
xchg
loopne
jl
xchg
ret
test
mov
push
mov
mov
popf
call
push
pusha
cltd
xchg
outsb
mov
dec
and
push
idiv
or
xor
and
leave
add
int
sub
mov
mov
inc
rcll
scas
mov
mov
add
or
test
loop
rorb
add
popl
repz
push
popf
inc
add
dec
push
push
inc
mov
cltd
adc
repz
or
sub
mov
cltd
orb
lahf
out
scas
out
xor
mov
dec
fsubrl
xchg
pushf
pop
popa
test
xor
jae
out
mov
loop
imul
sbb
add
add
push
fmull
adc
int
adc
sub
pusha
jbe
repnz
cmpsb
movsl
push
mov
xor
pop
sub
test
adc
sub
stc
inc
cmp
inc
push
cwtl
jnp
fidivrs
jmp
or
xor
arpl
jle
xchg
adc
pop
sarl
clc
cwtl
fs
xor
in
mov
sbb
addr16
popa
subl
sub
add
mov
adc
clc
jg
lret
add
rclb
fcompl
stc
out
dec
xorl
rcrb
insl
jl
jnp
popf
pop
jp
cmp
arpl
repnz
lods
mov
jge
cmp
mov
cmp
sub
fabs
push
imull
repnz
je
and
test
in
dec
sbb
test
enter
pop
in
lea
dec
cs
push
addb
int3
sub
hlt
or
mov
sbb
adc
sbb
pop
lahf
ds
neg
ss
xlat
sub
pop
js
adc
sub
pop
mov
pop
xorb
in
inc
inc
mov
push
inc
cmpsb
leave
xchg
mov
lods
cmpsb
lds
sub
jne
adc
popf
sbb
into
add
push
pop
pop
fstpt
test
sbb
add
mov
add
mov
push
and
adc
sub
loop
repz
or
mov
dec
and
iret
xchg
sti
pop
xchg
mov
dec
int
dec
nop
sub
inc
and
into
cwtl
ss
xor
inc
xchg
push
cmp
stc
add
xchg
dec
push
in
sbb
lret
aad
sbb
push
push
xchg
aaa
jp
mov
and
add
insb
dec
test
scas
iret
push
insb
sbb
adcl
jp
xor
adc
inc
test
jmp
cli
or
sbb
pop
mov
mov
cmpsb
sbb
sbb
cld
pusha
cmp
xchg
jnp
cmp
sbb
dec
cmpb
mov
jae
adc
cmp
fstps
jle
pop
std
xor
sbb
mov
lock
in
or
push
jmp
std
je
add
cmpsl
push
add
in
loop
lock
push
lods
sarl
js
ss
mov
mov
mov
fcmovu
mov
test
push
mov
xchg
test
pop
mov
in
in
pop
loopne
sub
lret
sub
and
jbe
mov
fwait
mov
orb
xor
mov
adc
frstor
movsl
aad
mov
add
mov
or
lods
mov
loopne
stos
sahf
das
sub
inc
mov
enter
dec
ret
jl
or
push
flds
inc
ret
pop
inc
jne
jp
xchg
pop
and
in
mov
sbb
dec
stos
filds
jbe
mov
mov
sbb
and
pop
and
jnp
loope
fs
xor
push
cmpb
sub
aaa
gs
xchg
mov
aaa
cmp
sub
cwtl
add
push
stos
jmp
jg
imul
inc
pop
add
sub
push
xchg
test
push
cmp
xorb
cmpsl
int
outsb
ficompl
sbb
mov
cs
cmp
outsl
fsubl
and
xchg
xor
in
aam
mov
ret
in
sbb
add
sub
adc
xchg
push
mov
pop
and
nop
lods
test
rcrl
xchg
sub
push
stos
pop
mov
aad
fwait
jp
cwtl
mov
jnp
pop
cmp
fsubrs
cld
cmpsl
into
add
xor
and
jae
enter
sub
sbb
xchg
pop
and
or
adc
cmc
or
push
jno
shrb
mov
bound
xor
jbe
mov
loope
xor
inc
xlat
jl
lds
adc
add
add
inc
mov
ljmp
stos
push
push
xlat
or
adc
push
shrb
sbb
cltd
int
dec
jmp
inc
sbb
lods
xchg
xor
jno
hlt
in
ss
cwtl
loope
jnp
cltd
sbbb
addr16
sub
jb
push
sub
repz
sbb
xlat
push
fadds
mov
mov
repz
cmp
xchg
mov
js
mov
jo
pop
add
or
enter
mov
lds
mov
xor
dec
xchg
fwait
sub
pop
pusha
mov
call
insb
pusha
add
mov
push
cld
sbb
sbb
imul
mov
inc
push
or
adc
jne
inc
pushl
push
mov
mov
sub
iret
fucom
fidivs
icebp
imul
cmp
pop
add
pop
out
and
aaa
out
push
sbb
rcrb
mov
jmp
push
sbb
sub
mov
pop
out
popa
inc
mov
stos
pop
dec
rolb
xchg
cmp
and
xor
xlat
cld
fisubs
add
xchg
jb
mov
adc
push
adc
dec
or
xchg
cmp
sbbb
xor
aas
mov
inc
mov
sbb
inc
adc
add
add
clc
push
add
pop
mov
push
fsubl
xor
popa
outsb
xchg
or
int3
cmp
nop
mov
push
in
cltd
pop
inc
sub
lods
lret
out
cli
addl
mov
ret
aam
test
mov
insb
mov
or
repz
ficompl
inc
addr16
jecxz
dec
dec
loope
cmp
mov
fs
add
lcall
xor
loope
push
jge
mov
imul
pop
or
jne
rolb
jl
mov
and
mov
cltd
or
dec
sub
cmp
mov
pop
arpl
or
cltd
clc
out
jg
or
dec
movsb
ret
add
jbe
sbb
gs
jno
push
adc
in
sub
test
cmp
mov
sbb
aas
adc
popf
inc
js
xor
mov
dec
iret
fsubl
jg
jno
loope
jge
adc
je
icebp
push
cli
inc
xor
mov
inc
dec
shlb
adc
sbb
in
in
xor
mov
mov
ja
add
sub
push
in
clc
xlat
movsb
std
pop
mov
xchg
xchg
js
dec
in
aad
mov
or
test
pop
ror
frstor
sbb
negb
scas
movsl
out
fsts
and
add
add
adc
mov
repnz
mov
adc
sub
mov
test
fs
push
out
insl
nop
jecxz
lcall
mov
pop
and
mov
cs
push
mov
jne
aaa
test
in
inc
sub
dec
out
std
jne
or
cmp
push
bound
cs
ljmp
das
out
jecxz
roll
add
movl
sub
movsl
outsb
pushf
ficoms
mov
add
in
fistl
insb
fsub
jl
in
xor
ret
test
adc
into
iret
shlb
icebp
daa
cltd
orl
pusha
bound
cmc
add
lods
notl
fmull
push
lds
mov
clc
cld
add
push
sub
and
add
data16
shl
int3
adc
cmpsb
aad
sub
mov
mov
inc
sbbb
shr
cs
ret
lcall
mov
in
andb
push
aam
adc
lcall
movsl
mov
mov
adc
cli
mov
mov
xor
pop
loopne
push
mov
mov
adc
ds
fcoms
pop
nop
dec
add
roll
lods
adc
add
fistpll
xlat
scas
test
add
xchg
lcall
mov
fs
ret
adc
ljmp
movsb
test
int3
rorl
and
andb
insb
adc
and
lea
xor
aaa
xchg
ret
lcall
mov
lahf
cmp
jg
xchg
lcall
adc
xchg
arpl
lret
ljmp
int
hlt
mov
aam
add
pusha
or
and
mov
mov
fmull
jb
cltd
sub
jl
outsl
xchg
imul
add
insb
sbb
ret
aad
sarl
out
sarl
mov
lret
out
xchg
daa
andl
jo
xchg
or
xchg
dec
inc
and
cs
inc
jp
stos
leave
mov
dec
push
mov
add
sbb
int
iret
shlb
fldcw
out
adc
rolb
mov
jmp
mov
adc
hlt
xlat
cs
lods
inc
jo
rcrl
in
jl
fcomps
inc
jecxz
adc
mov
pushf
mov
aam
pop
add
lods
insl
fldl
pop
mov
imul
insl
cwtl
mov
out
mov
insb
std
inc
push
push
inc
ret
lcall
inc
mov
add
add
negl
mov
sub
cmp
cmp
push
cmp
add
int3
mov
jb
xchg
and
pusha
xchg
pop
test
push
cmp
sbb
loopne
addr16
lea
pop
psubb
in
pushf
dec
pop
test
outsl
leave
xchg
pop
add
adc
mov
movsl
addr16
mov
xchg
andl
dec
sbb
scas
mov
imul
ret
add
cmpsl
add
movsl
das
mov
lea
outsl
icebp
das
fisubl
push
aas
dec
jo
mov
add
adc
and
out
cmp
imul
hlt
cmp
pop
jl
mov
call
push
pop
mov
les
shl
xchg
repz
std
inc
or
sbb
cmpsl
xchg
or
add
mov
aaa
imul
mov
test
add
add
test
xor
stos
scas
pop
insl
push
or
les
inc
fnstenv
lods
call
dec
sbb
imulb
int3
ret
pop
lods
adc
adc
and
cli
and
nop
repz
sub
sbb
icebp
sub
and
dec
out
xchg
xchg
into
push
test
enter
loop
loop
inc
mov
or
int3
sbbb
int3
cwtl
add
mov
les
add
add
xor
data16
or
jns
inc
cltd
pop
sub
sbb
sub
pop
decb
mov
add
adc
xchg
push
jns
sbb
lret
jle
jge
ja
push
push
out
mov
mov
mov
jmp
inc
inc
xchg
cs
shll
mov
cmp
jb
jo,pt
lret
lahf
in
add
clc
jb
mov
adc
dec
aad
addr16
into
fwait
xor
push
xchg
fs
mov
inc
mov
add
in
push
lcall
xchg
jne
iret
adc
mov
out
and
pop
insb
cmc
jecxz
nop
adc
jno
sbb
gs
shlb
aaa
mov
dec
mov
jns
push
adc
insb
add
adc
popa
or
and
push
mov
sub
sbb
sbb
mov
cmp
xor
rep
je
xchg
hlt
xor
loop
ror
shlb
sbb
and
mov
fs
adc
xchg
test
jns
fisubrs
inc
les
es
sbb
orb
push
inc
insl
data16
dec
fldt
ss
icebp
stos
lret
inc
sub
incl
das
inc
stc
dec
iret
xor
icebp
push
inc
rcrb
stc
pop
bound
movsb
mov
cmp
pop
jecxz
add
pop
add
and
jp
xchg
xor
lea
movsb
fcoms
xor
xchg
push
jp
cmp
dec
pop
movsl
rcll
cmp
inc
mov
xchg
pusha
movsb
outsb
sub
fiaddl
stos
add
arpl
mov
add
dec
mov
rolb
icebp
push
fs
mov
mov
iret
adc
idiv
ds
movsb
add
cmpsb
insb
pop
mov
cs
leave
jns
pop
mov
cmc
xchg
cmpsl
cmp
arpl
dec
and
lret
sbb
sbb
leave
jnp
xor
in
xchg
lods
mov
xchg
pop
in
pop
mov
std
xchg
enter
mov
cmp
in
icebp
fcomi
scas
cmp
loop
scas
sbb
sub
add
xor
divl
cmp
or
test
lods
dec
fwait
sbb
fsubl
inc
mov
or
xor
mov
enter
jmp
mov
add
in
pop
mov
inc
int3
push
js
dec
pop
clc
ficompl
test
sbb
push
aad
popf
ret
out
inc
xlat
xor
lret
addr16
push
xchg
shlb
jp
push
inc
push
push
add
add
popa
cmp
in
arpl
pop
dec
dec
in
mov
daa
inc
jmp
jns
call
js
xor
aaa
pop
add
jb
and
lea
mov
xchg
mov
push
mov
mov
imul
jp
lret
imul
test
mov
mov
sub
imul
add
ficoml
add
stos
dec
fildll
ds
inc
jle
test
dec
test
fwait
adc
pop
mov
movsl
xchg
je
std
nop
mov
mov
cmp
xchg
jge
mov
inc
sub
push
outsl
ret
and
push
push
mov
sti
adc
sbb
pop
cmp
xchg
les
outsl
sbb
iret
in
fisttps
inc
scas
loope
cli
cmp
and
sbb
sub
stc
jle
jp
xchg
in
ja
std
andb
mov
jge
or
sti
test
jbe
mov
icebp
dec
push
and
ret
mov
push
fcmovb
cmp
sub
dec
arpl
outsl
xor
aam
or
into
xor
add
jmp
aaa
and
jecxz
lahf
mov
imul
xchg
sub
add
jae
inc
fstpl
add
test
cmp
jns
add
popa
mov
popf
cmp
push
fisubrs
sbb
lret
outsl
mov
andb
es
mov
out
xchg
inc
in
das
and
dec
sbb
add
jle
pop
push
dec
shll
daa
cmp
push
insl
leave
fisttps
inc
sbb
sbb
xchg
popa
jns
out
xchg
test
out
xchg
shlb
out
test
scas
adc
add
add
jae
and
or
fsubl
das
sbb
pop
mov
jnp
pop
xor
pop
repnz
mov
lret
push
loopne
inc
out
sub
out
pop
fadds
in
xor
mov
je
xor
xor
leave
xor
jo
icebp
add
loope
lock
jo
push
mov
rorb
lcall
mov
andl
adc
jmp
ret
push
fsub
push
mov
mov
sub
adc
clc
pop
dec
ret
adc
call
test
xchg
cmp
orb
and
jmp
insb
and
loopne
cmp
and
jnp
in
inc
sbb
sarb
int3
pop
pusha
mov
push
sbbb
sub
into
js
shll
jg
add
mov
inc
in
loop
jno
and
insb
mov
loopne
or
mov
mov
popf
outsb
fimuls
test
adc
mov
inc
sub
and
xor
lret
mov
fisubl
xchg
push
pushf
adc
popf
push
cltd
push
mov
dec
aad
movsl
adc
sub
movsb
mov
subb
inc
or
enter
add
add
sub
dec
mov
dec
mov
in
stos
into
in
rcrl
mov
ret
scas
lret
sub
gs
xor
rep
pop
cmp
movsb
hlt
shrl
aad
nop
mov
das
cltd
pop
mov
push
in
pop
xchg
pop
outsl
xchg
aas
repz
xchg
sub
adcl
mov
pop
pop
ret
or
xchg
mov
into
cmp
jb
fimull
xor
es
mov
and
xchg
movsb
arpl
sti
test
jbe
shrb
mov
sub
cltd
add
pop
push
inc
mov
or
scas
lea
add
jno
shll
or
xlat
dec
fcomps
ja
jp
push
add
bound
inc
jne
inc
in
add
std
and
push
outsl
cmp
cmp
inc
and
and
notb
xlat
gs
lret
filds
in
out
inc
pushl
add
add
sbb
mov
jae
or
int3
into
add
push
pop
loop
les
aas
lret
jmp
push
xchg
push
cmp
add
pop
jp
sub
cmp
sahf
mov
xchg
jmp
lock
xchg
and
or
aad
sbb
xor
xor
mov
aaa
sbb
sbb
add
mov
andl
push
and
and
cmpsl
pushl
hlt
cs
aam
mov
jns
add
dec
orb
mov
lock
ret
js
daa
xchg
out
cmpsb
mov
test
push
fildl
insl
adc
sahf
pop
dec
mov
movsl
add
xchg
inc
and
jmp
mov
or
inc
cmc
stos
out
les
xlat
adc
push
jmp
in
pop
out
adcl
idivl
inc
xor
fimuls
jns
das
int3
sbb
notl
xchg
test
inc
lret
adc
mov
xchg
add
jo
sbb
adc
xchg
imul
and
and
lock
int
js
or
cltd
in
jle
sbbl
pop
inc
push
lods
push
pusha
xchg
xchg
push
xor
xchg
push
push
jecxz
outsl
lahf
out
int
test
lret
jecxz
jne
pushl
or
add
mov
andb
stc
roll
leave
flds
loop
jp
adc
mov
pop
repnz
mov
aad
sar
sub
fs
lock
jne
js
dec
mov
repz
ss
leave
mov
ret
sub
psubb
xorl
lret
in
sbb
add
xor
xchg
mov
sub
jle
jns
add
add
movl
push
gs
lahf
sbb
xor
mov
pop
add
lret
push
aaa
mov
jno
push
daa
xor
cs
or
repnz
cmp
pop
xchg
bound
sbb
jne
xor
jb
mov
mov
mov
pop
sub
incb
out
rcll
neg
lods
xor
pop
cmp
daa
