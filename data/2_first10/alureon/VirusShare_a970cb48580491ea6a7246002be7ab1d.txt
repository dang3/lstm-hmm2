push
mov
sub
sub
mov
mov
add
mov
call
cmp
je
mov
push
call
mov
sub
movl
movl
sub
push
call
add
inc
jmp
add
add
sub
jmp
mov
sub
mov
ret
mov
add
mov
mov
sub
add
inc
cmp
jb
mov
add
jmp
mov
cmc
lea
add
cld
sti
std
add
mov
jb
or
mov
mov
ret
add
insb
mov
add
jns
inc
push
add
inc
jne
inc
pop
fbld
add
in
add
jnp
add
loopne
add
les
adc
pop
mov
sub
fldl
xor
test
sti
dec
push
pop
jns
rcrb
jns
std
inc
incl
test
cmc
xchg
mov
js
in
clc
jl
add
jns
inc
and
jns
pop
arpl
inc
pop
mov
in
adc
sub
jmp
cli
jp
push
popf
and
mov
cmp
add
sarb
add
lea
add
addr16
cmp
je
popa
and
cmp
pop
xor
addb
std
xor
incl
leave
sarl
add
aad
inc
inc
or
dec
push
jbe
iret
sub
cmpl
inc
jns
imul
add
cld
movsb
cld
rorl
sub
pop
int3
add
dec
jns
add
add
std
add
std
xor
lods
xor
xchg
das
aaa
xchg
sub
cmp
stos
das
aaa
mov
std
jnp
lods
movmskps
fisubl
fldt
into
repnz
iret
xor
movsl
fidivs
shr
pusha
inc
aam
std
jnp
lods
cvtps2pd
jmp
jns
in
jo
call
xor
mov
fisubrl
fcmovnu
bound
iret
data16
out
pop
jo
jmp
js
fdivl
stc
into
cmc
icebp
sbbl
test
cmpsb
std
add
call
push
mov
mov
enter
mov
std
add
test
mov
mov
pop
xchg
mov
std
add
cld
xchg
push
ret
xchg
mov
pop
xchg
mov
std
add
cld
test
xchg
cmp
pop
popf
mov
std
add
cld
mov
xchg
cmp
pop
mov
jns
add
lret
jns
pop
and
pop
out
dec
or
arpl
push
stc
std
add
mov
jb
sub
or
iret
cmp
mov
dec
sub
add
jl
into
add
popa
lods
stos
mov
or
out
or
and
sub
add
mov
add
mov
loope
out
xchg
jb
cwtl
lods
mov
jl
or
xor
cs
test
pop
add
orb
mov
cmp
out
mov
incb
incb
pop
pop
adc
pop
int
cmp
adc
movsl
out
jns
add
or
sarl
std
rcll
and
jns
add
gs
push
iret
cmc
xchg
or
loop
and
jns
xchg
jns
add
jns
rcr
mov
cmc
push
rolb
adc
xchg
insb
jp
inc
shll
inc
icebp
and
dec
and
jg
xor
gs
pop
sar
jl
fisttpl
std
nop
pop
jp
inc
fisubs
add
leave
cld
xchg
imul
inc
in
mov
pop
int3
add
lcall
jecxz
jnp
push
bound
jb
xchg
jp
add
sbb
out
jns
add
cld
mov
mov
push
xor
or
cmc
pop
loopne
mov
js
fst
stc
jns
sbb
dec
jns
pop
or
adc
inc
std
add
push
jb
xchg
jle
lds
les
jmp
cld
add
mov
std
jnp
add
jle
in
paddw
push
mov
js
loopne
dec
sbb
jle
or
arpl
sub
pop
cwtl
add
mov
int3
add
lret
adc
dec
incl
pop
ret
call
out
enter
adc
mov
pop
mov
int3
add
sbb
stos
jnp
and
jle
or
incb
xchg
imul
jp
add
loop
jecxz
jp
add
or
mov
add
pop
cmp
std
mov
mov
dec
insl
jp
jecxz
jnp
push
pop
mov
add
std
rorl
cmc
xchg
in
jp
inc
xor
in
jecxz
jl
mov
into
cmove
xor
jecxz
jp
test
jp
add
loop
jecxz
jp
mov
mov
push
jge
mov
ds
mov
and
repz
cs
sub
std
add
add
sbb
dec
jp
daa
cld
jl
mov
bound
dec
jp
les
gs
fwait
jp
add
jae
cmp
es
arpl
fs
jmp
in
es
push
jp
inc
push
idiv
add
test
pop
in
add
pushf
mov
lcall
jno
lret
pop
out
in
jp
jns
add
dec
jno
shll
jp
adc
fs
imulb
cmpsb
jns
popl
jp
test
rolb
