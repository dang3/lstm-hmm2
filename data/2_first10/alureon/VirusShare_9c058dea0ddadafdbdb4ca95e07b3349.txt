jge
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
add
jg
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
and
add
adc
add
add
pop
adc
add
add
adc
add
adc
add
adc
add
adc
add
sub
std
xchg
add
inc
push
push
inc
xor
xor
pop
jae
scas
inc
cwtl
adc
pop
cmp
jp,pn
pop
outsl
and
sub
inc
movsb
arpl
pop
jne
ds
daa
dec
cmc
or
loop
pop
adc
aad
xchg
pusha
fadd
shrb
pop
pusha
mov
push
test
xor
xlat
cmp
sub
outsl
in
mov
clc
and
scas
pop
cmp
sbb
adc
pop
push
jmp
out
negb
adc
mov
cmp
mov
loopne
jnp
lret
or
repnz
xor
bound
mov
idiv
imul
cmp
fimull
inc
dec
inc
jle
mov
ret
or
pusha
xchg
negb
pop
roll
fisttpll
shrb
mov
lods
shlb
les
or
lret
mov
in
cmp
in
sub
ja
jnp
fstps
insb
push
mov
sbb
pusha
test
dec
pop
das
in
and
mov
add
arpl
gs
jmp
dec
push
or
out
mov
stos
xchg
xchg
mov
adc
mov
mov
xchg
pop
es
popf
pop
into
stos
out
sti
int3
add
inc
into
jp,pn
sbb
sbb
mov
jb
dec
pop
push
jecxz
aad
xchg
mov
dec
cmp
ret
jne
and
inc
shll
inc
fs
movsb
jns
fs
hlt
iret
sub
stos
push
fwait
movsl
sbb
push
jp
add
test
outsb
xchg
shlb
or
sub
inc
outsb
xor
xchg
setns
lret
jle
dec
jecxz
gs
mov
or
out
insb
cmp
pusha
divl
jo
or
fisubs
push
dec
mov
jo
or
xchg
repz
dec
push
dec
repnz
xlat
shl
dec
mov
push
dec
jns
mov
iret
mov
scas
movsl
iret
pop
sbb
pop
sbb
lods
cmpsl
push
lret
ds
ret
shrb
fidivs
add
fwait
out
int3
mov
mov
ljmp
xor
mov
push
mov
push
mov
add
xor
call
inc
inc
call
movswl
push
imul
call
dec
xor
inc
inc
add
call
mov
dec
add
inc
lea
mov
mov
mov
and
mov
lea
inc
mov
call
lea
add
lea
and
dec
call
add
sub
call
dec
inc
dec
movsbl
inc
inc
movzbl
add
dec
pop
imul
inc
dec
add
dec
pop
xor
add
pop
lea
inc
dec
mov
pop
dec
and
add
mov
mov
lea
inc
sub
pop
mov
imul
pop
lea
sub
mov
add
dec
call
dec
inc
inc
dec
ret
and
sub
push
add
mov
push
imul
add
push
inc
add
push
and
dec
push
mov
inc
mov
movzbl
inc
push
dec
ret
push
imul
add
inc
movsbl
add
sub
lea
push
add
mov
push
inc
call
pop
ret
jmp
mov
and
movsbl
dec
movzbl
dec
inc
xchg
or
inc
add
inc
xor
movzbl
dec
mov
add
inc
inc
mov
dec
jne
inc
mov
imul
dec
pop
inc
inc
pop
mov
imul
pop
dec
dec
or
dec
mov
dec
sub
dec
inc
dec
mov
add
ret
push
xor
lea
inc
sub
and
add
inc
dec
push
push
push
push
sub
mov
lea
push
dec
add
movzwl
dec
imul
xor
inc
inc
inc
mov
inc
push
imul
sub
xor
inc
lea
push
sub
lea
push
dec
add
pushl
inc
call
dec
add
and
inc
inc
mov
and
mov
add
pop
ret
jb
lea
xor
inc
sub
mov
inc
and
mov
inc
inc
or
add
inc
xor
lea
imul
mov
lea
cmp
jb
imul
mov
mov
add
xor
sub
imul
xor
dec
or
pop
lea
movzwl
test
jbe
or
dec
xor
inc
mov
inc
mov
mov
inc
lea
lea
sub
or
lea
add
inc
inc
mov
dec
lea
mov
dec
imul
and
movzbl
mov
dec
mov
movzbl
xor
add
add
xor
sub
and
dec
inc
mov
mov
sub
mov
inc
imul
mov
mov
xor
mov
or
mov
inc
dec
mov
dec
jne
lea
mov
lea
add
movsbl
mov
xor
dec
dec
add
inc
mov
mov
dec
add
lea
sub
lea
mov
sub
sub
mov
xor
mov
test
jbe
mov
dec
mov
mov
mov
mov
sub
sub
sub
lea
imul
mov
lea
and
inc
inc
add
inc
dec
mov
inc
mov
and
mov
mov
mov
mov
dec
movzbl
add
add
add
inc
mov
and
or
mov
mov
inc
lea
movzbl
and
mov
mov
mov
dec
mov
dec
sub
movzbl
mov
inc
add
inc
jmp
push
call
lea
xor
xor
sub
xor
dec
mov
inc
lea
add
inc
lea
inc
xor
inc
inc
mov
dec
shl
lea
imul
xor
sub
inc
push
inc
inc
sub
call
lea
pop
dec
add
mov
and
mov
movsbl
add
mov
cmp
je
call
call
add
iret
add
mov
imul
lea
sub
or
xor
sub
imul
add
movsbl
inc
dec
mov
pop
dec
ret
push
dec
mov
dec
add
mov
push
dec
inc
push
lea
push
add
push
movsbl
mov
push
lea
or
lea
and
mov
call
imul
push
imul
push
imul
pop
add
add
mov
mov
imul
mov
mov
dec
inc
inc
mov
dec
je
xor
sub
imul
dec
lea
mov
inc
lea
add
mov
inc
sub
mov
mov
dec
movsbl
mov
repnz
lea
mov
add
lea
jmp
movzbl
lea
inc
and
lea
mov
add
inc
dec
movzwl
mov
mov
jmp
inc
mov
dec
mov
pop
pop
ret
push
movsbl
sub
sub
or
and
inc
mov
or
add
inc
inc
add
mov
lea
imul
add
imul
sub
dec
inc
movzbl
lea
inc
imul
add
pop
ret
sub
add
mov
mov
mov
mov
dec
dec
mov
inc
mov
mov
dec
mov
xor
mov
sub
mov
add
add
inc
movswl
dec
mov
and
add
or
cmp
jb
movsbl
push
dec
add
push
mov
mov
push
imul
lea
mov
sub
add
xor
mov
inc
xor
movzbl
inc
xor
movsbl
lea
push
dec
dec
xor
add
or
mov
mov
lea
mov
add
imul
movzbl
or
inc
dec
imul
add
dec
add
add
dec
movzbl
dec
or
sub
inc
lea
sub
sub
sub
inc
lea
mov
sub
add
dec
or
add
cmp
jmp
or
rolb
test
in
jns
enter
je
and
jmp
dec
es
ljmp
int
jmp
dec
push
inc
fstpt
push
pop
or
sub
pop
xor
xchg
into
xchg
or
out
mov
mov
int
sub
mov
mov
leave
shll
cld
test
cmc
xchg
stos
movsb
test
es
push
out
dec
lea
pusha
push
mov
cmpsb
mov
mov
dec
xchg
stos
andb
in
push
mov
mov
mov
sub
xor
gs
bound
lods
xchg
dec
pop
mov
les
push
in
leave
xchg
jp
xor
in
jle,pt
movsb
push
nop
je,pt
pop
insb
out
ja
mov
mov
stos
fcmovbe
cmp
sub
les
adc
popa
das
nop
call
xlat
pop
or
popf
dec
push
fnsave
or
add
jmp
loopne
mov
daa
mov
pop
daa
lea
cmp
sbb
and
les
repnz
iret
xchg
mov
inc
cmc
mov
lods
or
aaa
lods
cltd
dec
insb
mov
pushf
lods
rol
mov
mov
cld
jbe
cmpsb
mov
arpl
fbstp
xlat
add
jbe
jae
std
ljmp
sbb
into
inc
jo
or
test
push
loope
popa
or
xor
cmp
adc
and
or
or
arpl
arpl
push
clc
movsb
lret
mov
adc
outsb
filds
popa
ja
sub
and
fucomp
jne
out
sahf
jp
push
inc
jge
ret
repnz
xchg
jmp
nop
mov
and
test
or
pop
mov
fnstsw
addr16
or
pop
das
out
mov
xchg
xor
jno
out
es
in
shll
lahf
out
jne
add
outsl
adc
inc
fmull
std
scas
mov
adc
cmc
loope
cmc
dec
sbbb
in
loopne
xchg
add
cmp
and
sub
jge
sbb
mov
pop
adc
push
adc
adc
fidivs
cmp
ljmp
lods
xor
dec
xchg
xor
dec
outsb
out
pop
mov
rolb
jecxz
mov
in
lods
std
dec
dec
aaa
xchg
fstpl
int
pop
mov
or
mul
xchg
push
mov
add
or
dec
test
das
pop
adc
nop
fmuls
fildl
pushf
adcb
mov
sbb
xor
sbb
mov
jnp
jmp
dec
psubb
pop
xchg
imul
stc
rcr
jnp
add
mov
lock
push
inc
fs
fwait
add
lds
xor
repnz
push
cmp
cmp
lds
mov
mov
lret
mov
jns
movsb
in
mov
and
adc
pop
or
mov
sub
into
push
inc
fsts
out
xchg
mov
in
pop
clc
iret
sbb
xor
inc
xor
outsl
cmpsb
jne
cmpl
pop
mov
and
cmpsb
ja
rcll
mov
add
push
add
jae
data16
and
loope
push
cmc
sbb
or
lea
scas
jmp
ret
filds
dec
test
out
ja
xchg
xor
fcmovnb
inc
sbb
add
scas
lea
imul
icebp
xlat
movsl
cwtl
rcrl
lret
fldenv
push
fst
loope
cmc
ss
dec
outsl
fnstenv
lea
enter
jo
shll
pop
xor
and
pop
mov
dec
jmp
sub
inc
mov
cmpsl
add
adc
xor
shlb
dec
div
fsubrl
jb
push
stos
ret
ficoml
add
pop
jbe
ror
loop
or
jb
push
dec
cmp
dec
jle
lahf
mov
test
fwait
xchg
imul
mov
inc
fsubrs
andl
loopne
push
mov
mov
xchg
movsb
cmp
sti
add
or
jae
lret
push
xor
imul
rcll
cmp
mov
adc
xchg
sahf
xchg
lods
add
or
jb
and
and
daa
push
and
inc
jbe
mov
add
sbb
sbb
call
stos
ja
je
ret
adcl
aas
mov
fisubl
xor
imul
dec
aam
cmpsl
rorl
push
add
add
ret
push
test
xchg
xchg
por
enter
and
sti
xor
mov
adc
xchg
repz
into
stc
push
cmp
or
sub
jb
jg
xchg
mov
add
add
jp
add
or
imul
sub
mov
popa
xchg
pop
mov
push
iret
mov
enter
popf
fnsave
iret
and
jo
dec
cs
adc
mov
out
add
xchg
int3
insl
dec
loope
into
cmp
jmp
cmpsl
and
inc
or
add
testb
xchg
and
jae
lret
mov
test
xor
xchg
pop
add
pop
std
xor
xchg
ds
or
pop
mov
clc
sbb
xchg
xchg
or
xchg
mov
add
jbe
pusha
repnz
inc
add
push
or
into
add
mov
pop
adc
int
mov
jne
cmp
lods
dec
stc
jno
mov
sbb
jp
lds
push
push
mov
mov
and
xchg
inc
insb
cli
stos
addr16
imul
pop
jge
lds
mov
mov
shl
mov
mov
aam
test
mov
and
in
test
aam
rcrb
push
lds
and
fisubrs
roll
bound
mov
pop
cmp
imul
jns
test
cmp
push
jg
inc
std
lret
enter
adc
mov
out
sbb
xchg
xchg
stos
push
push
fstp
movl
and
lahf
or
xor
mov
xor
shlb
cmp
shll
push
lds
jb
sbb
mov
cmc
fwait
rcrb
pop
push
or
adc
lahf
aaa
ret
test
mov
or
lret
flds
dec
inc
jae
or
jne
inc
push
popa
imul
cmpl
pop
pusha
mov
into
aas
or
adc
xchg
frstor
mov
inc
mov
mov
pop
mov
shll
jge
or
push
push
push
js
gs
mov
addr16
push
jns
and
pextrw
stos
pop
xchg
gs
add
jecxz
inc
xor
mov
testb
in
sub
aad
jns
and
pop
jo
xor
imull
insb
add
daa
adc
mov
insl
mov
and
inc
cltd
movsb
xchg
icebp
jmp
aam
stos
inc
mov
orb
cmp
lods
adc
pop
lock
movsb
lea
imul
adc
ret
pusha
aas
mov
in
mov
hlt
adc
xchg
sub
arpl
subl
pop
cmpsb
loop
clc
inc
adc
xor
xchg
inc
jbe
pop
inc
addb
aam
mov
mov
jne
fsubs
xlat
inc
inc
pop
out
outsl
jle
inc
insl
dec
pop
adc
inc
cmp
nop
idivl
adc
imul
je
add
dec
cwtl
bound
in
jle
mov
jo
out
clc
cmp
mov
in
jns
push
out
jnp
lock
fidivrs
and
push
add
xorb
cmp
sti
push
inc
mov
xor
loop
adcb
lret
rcr
fldcw
push
fnstenv
repnz
pop
ss
sbb
inc
test
inc
rdpmc
pop
mov
dec
movsl
bound
xchg
fistps
pop
pop
daa
or
mov
mov
add
leave
inc
mov
sub
loope
insb
push
fs
ret
and
pop
incb
into
hlt
pop
insl
cmc
into
mov
pop
add
sbb
loop
in
ret
adc
xorl
lahf
jg
or
push
jb
fidivrs
ss
mov
fwait
xor
cli
cmc
jmp
xchg
mov
pop
cs
stos
mov
xchg
cwtl
sbb
outsl
jo
fdivl
fs
add
inc
mov
pusha
cmp
jl
xlat
bound
xchg
cmp
scas
and
mov
xor
or
mov
fisttpll
icebp
push
or
xlat
cmpsl
pop
pusha
push
pop
jb
cmp
pop
pop
inc
jle
inc
jle
xchg
mov
in
fsubr
push
outsb
lret
xor
xchg
les
cmp
xchg
cmp
in
push
das
js
jmp
sbb
outsb
mov
add
adc
cmp
mov
shll
ljmp
adc
jb
mov
div
dec
jle
scas
and
lods
scas
jbe
xchg
mov
pop
or
test
adc
push
or
pop
insl
pop
pop
and
rorl
ds
das
in
std
xchg
fcoml
fcmovbe
cmp
bound
cmp
sahf
fwait
pop
iret
xor
lods
push
pushf
inc
cltd
loopne
mov
cmp
jmp
fsts
jl
fcom
test
les
fdivs
dec
mov
xchg
ds
add
fnstsw
js
sbb
xlat
test
mov
pop
jg
addr16
adc
mov
cmp
lock
jecxz
mov
mov
jns
and
iret
adc
outsb
inc
ds
push
aad
shlb
xor
int3
hlt
push
adcb
ret
arpl
push
movsb
xchg
push
stc
fmull
push
inc
pop
pusha
lods
add
icebp
dec
push
xchg
jge
pusha
dec
arpl
push
jl
inc
push
fs
shr
dec
dec
fnsave
jbe
pop
repz
mov
cld
ljmp
ret
in
stc
cmp
sub
call
push
loop
das
xchg
push
jae
jbe
fdivrs
mov
sub
sub
xchg
mov
rclb
sbb
cmp
sub
inc
enter
imul
or
sub
pop
popf
inc
shll
mov
outsb
xlat
nop
xchg
sub
dec
lret
rcl
and
push
add
ss
sub
lret
outsl
lea
adc
clc
sarl
pop
ljmp
lea
mov
aam
stc
out
sbb
cmc
sub
mov
mov
aas
jns
or
mov
outsl
imul
in
repnz
iret
xchg
ja
or
pop
clc
or
lahf
cmp
inc
add
cmc
test
and
mov
cmp
or
roll
mov
xor
inc
lock
stc
into
movsl
or
pop
repz
cmp
sub
push
dec
jne
push
shl
hlt
je
add
and
aaa
mov
mov
js
jmp
movsb
mov
mov
push
ss
arpl
inc
inc
hlt
adc
repz
jne
test
pop
sahf
out
jbe
pop
add
sahf
enter
xchg
inc
es
cmp
call
sahf
mov
fs
stc
out
repz
push
pop
es
xor
or
push
sub
push
adc
push
dec
push
fxch
cmp
sub
dec
pop
stos
mov
cltd
xlat
mov
cmp
mov
test
add
dec
loopne
in
lea
jg
xchg
xchg
call
jle
sarb
lahf
or
mov
push
aam
jge
dec
xchg
stos
mov
cmpb
push
sbb
test
jns
adcb
inc
mov
out
iret
fistps
sbb
push
shll
cwtl
jmp
in
lock
cld
lahf
sbb
dec
inc
out
fisttps
test
insl
add
movsb
add
inc
inc
xchg
pop
jne
aas
pop
jns
add
pop
mov
xchg
dec
sbb
call
sub
sbb
inc
sbb
fnstenv
cmpsb
cld
flds
mull
adc
popa
loope,pt
inc
cmp
push
sub
mov
ja
popf
push
repz
dec
jp
xor
cmp
mov
or
cmc
fiaddl
shlb
mov
test
nop
add
into
pop
adc
lret
cmp
xchg
es
scas
aas
or
mov
jmp
dec
fiadds
lcall
adc
inc
mov
sahf
mov
fcoms
jg
les
call
jns
ss
lcall
or
cs
dec
rcl
daa
sub
xchg
xor
sub
xor
gs
xor
insl
fmuls
xor
dec
mov
jo
dec
pusha
fdivp
push
fwait
movsl
pop
xchg
and
repz
push
ja
jp
rorb
sbb
clc
scas
and
decb
orl
je
fsubl
dec
outsl
stos
sahf
in
jl
inc
xor
repnz
jne
outsl
ss
jo
dec
push
sub
adc
bound
sub
nop
xor
or
shlb
in
sub
or
xchg
jl
mov
aam
das
nop
dec
push
and
je
insb
sbb
jecxz
sarb
xor
std
mov
jne
add
ret
pusha
pop
mov
shr
xchg
lds
dec
mov
xchg
xchg
sbb
popa
cmc
sub
and
cmpsb
adc
jl
sbb
xor
and
ret
mov
fmul
jb
jne
lret
fists
cmpsb
lcall
es
push
movsl
fcoml
or
mov
sub
das
adc
xor
and
dec
ret
and
shl
lds
push
imul
push
dec
dec
jge
sub
popa
hlt
dec
in
test
mov
mov
mov
ret
out
int
andb
mov
xchg
stos
mov
xchg
out
jle
lret
pop
push
sub
inc
addr16
mov
arpl
leave
or
adc
fstl
cmpsb
push
repz
pop
inc
xchg
pop
inc
xchg
scas
push
xlat
mov
xlat
aad
popf
jnp
ljmp
dec
push
push
pushf
loopne
in
cli
and
sbb
mov
jecxz
inc
xor
in
xchg
lahf
test
aas
fcmovnu
cwtl
lds
sti
inc
into
xor
orl
jae
push
js
pop
in
push
add
sbb
outsl
loope
fdivrs
xchg
sbb
outsb
pop
fcompl
jge
mov
or
cld
aas
or
push
xor
les
call
int3
out
pop
mov
outsb
jb
xchg
in
cmovge
jmp
jbe
mov
mov
aas
sbb
lea
dec
mov
sbb
jmp
ds
mull
insl
mov
cmp
push
shrb
pop
in
int
sub
inc
push
mov
mov
pop
lret
outsb
pop
lret
repnz
push
push
mov
mov
pushf
adc
mov
outsb
pop
dec
inc
xchg
xchg
inc
jle
rcr
jns
xlat
or
push
sbb
inc
in
addr16
cwtl
mov
adc
lcall
scas
enter
jae
lock
and
push
inc
jge
mov
ror
push
pusha
mov
lcall
cmp
jnp
sub
hlt
or
mov
call
and
sub
xor
nop
in
fistl
jb
sub
jge
sarl
pop
cmp
cltd
add
inc
mov
pop
stc
push
imul
dec
sub
mov
jp
xchg
movsb
inc
push
and
aad
scas
imul
add
iret
setnp
xor
imul
adc
fcompl
mov
jl
sub
sbb
pop
xor
xchg
mov
jno
mov
int
lahf
or
gs
shlb
mov
cli
sbb
jp
popf
outsl
pop
cmp
out
mov
push
adc
cmp
mov
xchg
rclb
xchg
leave
jne
sub
scas
enter
ret
pop
inc
aas
jb
mov
jmp
incb
inc
ljmp
pop
lea
jg
gs
loop
cmpsb
sahf
arpl
in
jnp
jl
addr16
xchg
testl
sub
imul
inc
and
pop
add
mov
fcoml
push
shll
das
loop
mov
test
mov
mov
in
jo
daa
bound
lret
sbb
jmp
xor
jns
xor
add
fcomps
jns
jno
adc
or
popa
movsb
dec
sbb
cld
test
fisubl
andb
loopne
or
pop
pop
insl
jg
inc
inc
fucomp
enter
rcrb
mov
test
sbb
movsl
add
in
mov
aas
or
xchg
add
loope
mov
push
pop
cmp
int3
mov
pop
int3
push
cmpsb
add
mov
scas
les
cmp
scas
fstpt
mov
in
xor
lahf
cmp
popa
push
fcmove
pop
mov
sbbl
subl
push
sbb
push
xor
scas
leave
lods
xchg
pusha
aas
mov
test
xchg
cltd
cmpsl
mov
mov
test
lcall
or
jmp
push
movsb
sbb
sahf
jg
mov
addr16
mov
in
cmpb
into
xlat
adc
cltd
lcall
xlat
pop
push
test
ds
test
clc
dec
dec
mov
sub
fcomi
mov
push
dec
icebp
adcb
xchg
push
cs
lar
push
sub
sub
repnz
std
inc
pop
in
mov
lock
pop
or
idivl
pop
arpl
adc
lret
and
fmul
cmp
out
mov
inc
imul
inc
mov
stos
mov
outsl
sbb
xadd
mov
push
xor
or
mov
mov
inc
mov
cmp
hlt
jne
cltd
jp
xlat
sub
mov
ss
dec
cmp
fisttpl
lret
mov
cwtl
inc
xlat
pop
dec
mov
mov
addr16
fisubrs
jg
sub
mov
shrl
pop
lock
insl
adc
addl
jp
push
sub
push
stc
movb
in
fsts
inc
sub
adc
arpl
int3
decl
jb
mov
ret
sbb
insl
mov
daa
or
xchg
push
dec
hlt
nop
stos
xor
sbb
pop
jmp
jb
add
fcomps
test
icebp
clc
mov
les
nopl
movsl
jecxz
add
xchg
jp
mov
imul
test
xor
push
fs
imul
ss
mov
mov
aaa
xchg
push
mov
fnstenv
lods
fs
push
mov
roll
pop
mov
iret
xchg
subl
mov
stc
in
push
rorb
aad
inc
insl
push
xchg
cmp
repnz
push
insl
mov
mov
ljmp
leave
sti
push
sbb
fsubrs
ja
xor
into
push
jg
hlt
fdivrs
and
stc
sub
dec
leave
push
mov
xchg
sahf
imul
and
aam
cmpsb
inc
lret
pop
mov
cmpl
jb
loopne
push
mov
mov
cmp
es
cltd
pop
cmc
stos
and
mov
fcmove
pop
gs
pop
lahf
inc
sbb
xor
mov
addr16
add
cmc
cltd
xor
leave
das
sub
insl
push
cld
inc
aam
mov
dec
lea
add
push
sarb
arpl
cmp
test
mov
and
icebp
outsb
popa
cmp
dec
js
mov
inc
or
mov
sbbb
insb
and
fucom
jo
lods
mov
ds
mov
sar
xor
into
pop
fisubl
sbb
je
mov
insl
pop
movsl
movsb
std
enter
or
pop
ljmp
lock
call
pop
dec
aam
mov
mov
adc
outsb
inc
test
xor
cmc
ss
hlt
fimuls
mov
flds
jg
les
xor
in
and
adc
lcall
sbbb
mov
pop
push
mov
push
fnstsw
or
inc
es
cld
mov
subb
mov
jp
test
and
mov
sbb
pop
push
movsb
sub
mov
mov
aad
or
xchg
and
jne
ljmp
jecxz
and
push
movsl
mov
push
addr16
out
or
mov
jae
jmp
xor
inc
mov
shrl
cmp
shlb
pop
outsl
or
sti
push
loope
das
mov
mov
jge
sbb
lods
mov
xor
and
std
add
sub
mov
pushf
pop
mov
pop
and
leave
movsb
loope
out
fwait
add
test
sbb
jle
aas
jecxz
outsl
pop
dec
sub
jl
inc
mov
add
jle
push
dec
shlb
lock
cld
push
mov
mov
les
out
mov
add
add
mov
dec
xor
push
cmc
mov
adc
xchg
cmp
pop
and
xchg
inc
sub
mov
or
mov
popf
sbb
das
mov
int
call
out
stos
test
add
out
addr16
pusha
int
iret
movsl
jle
push
sub
push
and
insb
out
mov
aam
and
test
jle
cmpsb
imul
xchg
call
insl
in
cs
cmp
jg
or
sbb
push
pop
add
rorl
xchg
xor
xor
push
mov
cmp
jno
scas
add
xchg
adc
sub
decb
outsl
mov
cwtl
js
mov
xor
or
rorb
pop
inc
jmp
mov
jge,pt
push
xor
dec
aam
add
shrb
mov
insb
and
jns
or
nop
add
arpl
xor
cmp
jle
out
lods
mov
out
clc
ds
mov
push
pop
in
push
mov
out
ja
sbbl
jp
arpl
jns
dec
nop
iret
mov
and
in
pop
pushf
jmp
lods
ljmp
cmp
cld
sbb
js
dec
jge
add
cmp
pusha
mov
hlt
aam
test
sub
jae
sbb
sahf
jb
push
xchg
ret
stos
ljmp
xchg
fidivl
sbb
cmp
sarb
mov
mov
sbb
push
into
or
add
push
stc
nop
clc
imul
add
imul
mov
sahf
scas
mov
jno
les
inc
cld
test
fnstenv
cmp
mov
movsl
pushf
stc
inc
or
es
sub
mov
pop
jb
mov
insl
push
jmp
dec
stc
push
pop
cmp
mov
cmp
lcall
xor
push
add
sahf
push
jae
inc
hlt
nop
mov
ljmp
outsb
mov
sub
sub
adc
pusha
out
inc
jae
add
xchg
out
add
lahf
jns
mov
sar
arpl
rclb
xor
push
and
in
stos
add
or
into
fsubl
dec
sbb
xor
test
out
sub
mov
sbb
fwait
imul
es
in
inc
pop
jo
ficomps
sbb
jmp
mov
push
ret
push
out
xor
lea
out
outsl
movsl
ja
ret
inc
pop
jne
and
push
cli
mov
outsl
stc
icebp
out
dec
xor
adc
inc
test
ss
pop
mov
sub
test
in
mov
mov
add
push
dec
sbb
lock
daa
stos
mov
jo
out
add
cmp
in
lods
push
pop
push
test
cltd
xorb
addr16
xchg
int3
mov
and
and
adc
mov
out
pop
loopne
movsb
xchg
sbbl
inc
mov
add
sbb
movsb
mov
sub
rclb
xlat
es
xor
fdivs
popf
dec
push
jae
sub
push
stc
scas
sti
dec
push
out
outsb
repnz
lahf
or
test
add
jecxz
xor
sub
call
mov
mov
mov
lret
fists
cmp
lods
inc
dec
cmp
sarb
xchg
loopne
dec
jmp
pop
or
pop
jmp
and
incl
enter
out
mov
sub
scas
stc
clc
bound
pop
pop
add
mov
sub
dec
bound
dec
inc
rorb
fsubrl
in
mov
pushf
int
ljmp
ret
cmpsb
call
lret
daa
pop
mov
cs
cmp
jmp
adc
int
outsl
add
mov
dec
mov
pop
ljmp
rcrl
push
pop
or
in
mov
cmp
test
fdivrl
sbbb
mov
dec
and
mov
push
and
dec
imul
push
cmp
and
ret
or
adc
daa
out
jae
cs
jno
adc
cmpsb
and
push
test
sbb
inc
lea
xor
mov
mov
sbbb
push
mov
inc
dec
mov
and
cmp
xchg
popf
in
sbb
ds
mov
pop
cmp
xchg
pop
ja
fdiv
fisubs
mov
out
cwtl
lock
adc
sub
scas
xor
out
movsl
jg
movl
pop
imul
push
or
xor
mov
dec
xchg
test
dec
shlb
and
scas
xor
push
cmp
rcr
rep
cld
addr16
sti
push
push
xor
add
addl
cmpsb
xchg
jl
xchg
mov
xchg
inc
inc
adc
mov
or
push
das
mov
cmp
mull
mov
mov
jne
push
aas
mov
pop
pop
jns
jno
inc
fstpt
lods
or
rcrb
jae
xchg
add
mov
add
iret
dec
inc
xor
jno
adc
shr
or
inc
or
out
jno
rorb
imul
lock
lahf
movsl
cmpsb
stos
xchg
xchg
inc
mov
fmul
in
mov
dec
fmul
fists
std
xchg
cs
push
outsb
sahf
adc
icebp
adc
cltd
or
sbb
shll
filds
add
pop
movsl
lds
daa
add
inc
leave
inc
dec
lds
jl
push
xchg
dec
cmp
sbb
rcrl
rorb
test
xchg
inc
cmc
fistps
jmp
push
cmc
movsl
jmp
cmpsl
xchg
and
js
enter
aaa
loop
jge
adc
jecxz
add
inc
aas
dec
lret
fbstp
xchg
mov
shll
fistpll
lcall
adc
mov
mov
test
popf
mov
sbb
lods
stos
pop
std
xchg
inc
xchg
xchg
test
sub
rorl
xor
mov
pop
push
fcmovnu
inc
pusha
and
mov
adc
subl
cwtl
xor
out
dec
inc
mov
fcompl
pop
ret
lds
imul
dec
insb
bound
fidivrs
mov
inc
jnp
mov
mov
cli
cmpsl
lcall
xchg
ret
cmp
jmp
cmp
and
mov
jb
mov
inc
insl
test
ret
inc
cmp
push
hlt
leave
repz
jle
jmp
jle
inc
mov
pop
xchg
iret
dec
xor
filds
call
pop
push
ret
filds
push
sti
push
pop
xlat
inc
sub
lock
add
hlt
mov
cwtl
loopne
add
pop
mov
movsb
sbb
dec
shlb
fucompp
out
xor
sti
stos
mull
jae
add
bnd
dec
add
loop
loopne
push
jb
and
lret
push
add
jmp
lods
push
ret
xchg
ret
or
cmpps
ficoms
das
pop
sahf
dec
test
mov
imul
sub
shlb
or
inc
cmp
inc
adc
nop
cmpsl
ret
stos
jns
shll
fsubrp
mov
cs
pop
cmpsb
sbb
dec
pop
pop
ja
es
sub
inc
push
dec
lock
or
popa
jb
dec
data16
testb
popf
cltd
ds
dec
sub
push
and
popa
cmp
shlb
movsb
sub
pop
inc
shll
mull
xchg
arpl
jecxz
lods
pop
xchg
fisubs
int3
mov
pop
adc
jle
insb
jo
add
or
dec
adc
pop
xor
gs
in
lds
push
mov
mov
and
xchg
sbb
out
movsb
jecxz
jl
aaa
aam
inc
xchg
mov
mov
inc
clc
aaa
je
call
push
cltd
repz
xchg
mov
sbb
dec
test
jmp
dec
jbe
repnz
adc
cmp
stos
std
ret
sti
or
nop
inc
jg
or
mov
push
in
jle
push
sbb
push
pop
xchg
les
add
movsl
pop
test
add
call
imul
test
jg
xchg
dec
add
divl
mov
loop
sbb
jb
ret
mov
fmuls
int3
mov
mov
xor
cwtl
filds
xor
out
pusha
loop
nop
dec
ljmp
arpl
aas
fwait
adc
scas
pop
mov
and
popf
jp
aad
call
enter
fdivl
mov
pop
add
dec
xchg
mov
mov
jo
mov
push
in
or
repnz
fs
jp
cwtl
adc
insl
jmp
fucom
lahf
loopne
adc
jp
add
inc
stc
mov
mov
scas
dec
cmp
sbb
sar
or
shl
xchg
cmpsb
push
incl
fidivs
or
cwtl
nopl
enter
test
add
inc
popa
pop
mov
push
pushf
xlat
jmp
sub
add
sub
cli
out
jmp
and
jl
cwtl
xor
int
add
jo
mov
push
push
sbb
mov
or
pop
andl
ljmp
push
jno
jle
sahf
cwtl
iret
fsub
mov
or
test
or
iret
push
aas
mov
pop
fwait
testb
das
push
lea
pop
cld
xchg
push
adc
jl
xchg
sub
lea
pop
mov
js
incl
aad
dec
pop
mov
outsb
clc
xchg
lcall
lret
cld
pop
std
jne
fstpt
or
xor
mov
cmp
call
dec
pop
dec
add
mov
pushf
out
or
push
insb
sub
mov
pop
in
stos
stos
movsl
out
in
mov
xchg
mov
stos
insl
aad
imul
dec
call
mov
arpl
dec
pushf
adc
popf
jecxz
sub
or
imul
in
sbb
or
sub
or
ret
pusha
insl
leave
mov
sbb
mov
pushf
out
push
add
fwait
popa
ret
mov
sbb
lock
mov
test
pop
fidivs
inc
gs
cmp
imul
jns
lods
inc
xor
addr16
imul
in
push
or
lods
test
xchg
sti
mov
push
stos
mov
push
inc
cwtl
mov
xor
xor
or
cmpsb
fdivp
cmpsl
aaa
mov
dec
pop
cmp
mov
adc
sahf
int3
jae
jbe
xchg
mov
int
push
dec
cmp
aaa
in
add
xor
scas
sbb
es
fnstsw
adc
mov
call
bound
mov
arpl
cmp
movsb
cmpl
data16
xchg
fildl
data16
test
mov
xorl
add
cld
jnp
xor
xor
lahf
mov
cmpsl
xchg
enter
jb
aas
dec
cmpsl
mov
lcall
jg
sbb
les
pop
lahf
inc
call
scas
cmp
xorb
aam
cmpsl
mov
or
lea
xchg
cltd
in
sbb
lods
or
and
je
jl
or
fisttps
cmp
imul
and
pop
js
xchg
repz
jno
lods
test
push
jne
fstpl
dec
cmp
outsb
stc
add
imul
sub
jbe
inc
hlt
push
ljmp
icebp
aam
fisubl
sbb
lahf
negb
pop
pop
dec
dec
data16
mov
mov
lds
popa
les
inc
ss
imul
lea
inc
jmp
pop
sbb
bnd
pusha
sahf
pop
test
mov
stos
jle
call
out
sbb
inc
push
out
dec
adc
jle
cli
mov
int3
out
cmp
rcrl
and
jb
dec
adc
pop
rorl
out
mov
cmpsl
mov
movsl
cmpsl
pop
sar
add
xchg
ret
fldt
pop
das
loope
icebp
or
dec
add
jecxz
add
jmp
cmpsb
mov
leave
repz
rcl
pop
push
jnp
cmp
lods
mov
sub
testl
sub
fisubrs
cs
push
xor
rorb
jecxz
xchg
xchg
xor
aaa
rcrl
subl
das
xchg
mov
adc
mov
push
jmp
fmull
enter
jne
mov
pop
jb
xor
pop
aad
mov
out
div
fcomps
loopne
push
test
mov
cmpsl
test
mov
movsl
clc
or
ljmp
jne
movsb
adc
insl
jno
cmp
sbb
daa
or
or
scas
pushf
jb
das
fistpl
mov
aad
std
inc
or
or
cmp
andb
nop
enter
nop
in
mov
mov
sub
jmp
test
mov
jns
jp
mov
in
pop
jle
adc
inc
shll
adcl
push
pushf
inc
mov
mov
xchg
lods
sub
adc
cmp
jl
sahf
push
cmc
cmp
xlat
out
mov
sub
movsl
ss
fwait
jne
push
ds
lds
lods
loop
add
pop
cld
lcall
cmp
or
or
mov
es
push
lret
out
or
sub
and
sbb
xchg
cltd
dec
jmp
mov
mov
fstpt
mov
jp
xchg
aaa
sub
and
mov
xchg
movsb
adc
enter
jne
jecxz
push
je
pop
fcompl
jbe
dec
scas
adc
jg
xchg
inc
jns
aam
mov
mov
mov
push
fadds
pop
stc
pop
stc
xchg
movsl
clc
int3
xchg
pop
ret
das
jge
mov
out
out
leave
and
imul
lret
cmp
scas
loop
sbb
mov
adc
push
cmp
jne
fwait
scas
xchg
testl
cld
inc
scas
jnp
mov
data16
movsl
sub
mov
in
daa
pop
mov
dec
jle
xchg
cwtl
push
jbe
mov
outsl
mov
pop
or
mov
icebp
cmp
xor
sbb
pusha
fsubr
push
sub
in
jns
int
pop
dec
push
and
loop
adc
lret
rorb
lret
je
sub
xlat
cltd
dec
lret
stc
sub
sbb
xchg
rcr
and
sub
mov
jl
xor
push
in
jl
or
cmp
outsl
push
jle
pop
cmp
mov
sub
mov
fstp
call
repnz
sub
ljmp
loopne
sub
fisttpll
popa
pusha
out
test
add
shl
dec
addr16
addl
sub
jmp
inc
inc
or
nop
das
popa
jne
mov
es
pushf
sbbb
pop
fcmovnb
jo
std
add
fwait
jmp
ret
add
dec
in
mov
cli
inc
push
jg
rclb
out
leave
xchg
test
mov
in
call
addl
or
mov
out
sub
rorl
vpunpckhdq
xor
test
jl
loop
ret
and
daa
xor
stos
mov
jmp
mov
sbb
push
dec
jns
pop
mov
xor
push
ret
jmp
push
xchg
bswap
or
lods
movsl
jl
xor
arpl
mov
sub
shrb
sub
aam
lds
sub
bound
fsts
cmpsl
sub
jbe,pt
les
out
loop
jae
sbb
shl
sub
or
xor
xor
dec
leave
inc
or
aad
jbe
sahf
repnz
mov
pop
cltd
aam
lods
sti
insb
add
jp
aam
sbb
sbb
adc
fnstcw
push
and
in
and
and
or
mov
sbbl
mov
fldlg2
inc
xchg
testb
xchg
les
xchg
jne
sahf
rorb
mov
adc
push
pop
pop
jp
inc
loopne
mov
iret
adc
cltd
dec
mov
sar
add
mov
xchg
sbb
es
mov
mov
in
fbstp
push
push
aad
jne
xchg
add
mov
ss
lret
sub
lea
push
push
push
jns
pop
xor
mov
cmc
lret
iret
nop
shll
or
ret
sbb
mov
add
inc
test
sub
push
ds
rolb
lret
hlt
cmp
stos
mov
push
rcrb
xor
hlt
jns
mov
cmp
fiaddl
sbb
push
dec
xchg
es
pop
add
rclb
jno
popf
jecxz
xlat
movb
pop
jle
sub
int3
cmp
xchg
jbe
push
xchg
pop
scas
or
add
pushf
inc
xor
lahf
adc
aam
adc
sub
ret
push
sahf
shr
sbb
and
das
into
scas
or
mov
xchg
loopne
stos
cmp
inc
dec
out
repz
mov
test
repz
in
nop
dec
dec
mov
test
fidivl
xor
movsl
lcall
fwait
push
adc
hlt
subl
dec
adc
test
shlb
xchg
pop
or
pop
mov
ss
outsl
sbb
sarl
xchg
into
mov
push
sbb
pop
scas
mov
pop
int3
in
fmulp
les
sbb
mov
lock
leave
mov
mov
pop
aaa
xorl
inc
jge
push
mov
sub
and
or
ds
add
adc
or
jle
loop
and
rorl
jne
enter
mov
and
dec
ljmp
jne
pushf
mov
and
xor
and
arpl
fidivrs
sbb
xorb
xchg
ljmp
dec
mov
xlat
xor
je
cmp
xchg
mov
test
daa
cmpsl
jns
pop
xor
jmp
add
fcoml
bound
sub
ja
xlat
pop
xor
xor
gs
pop
inc
imul
pop
add
jbe
mov
sbb
xchg
loope
dec
cmp
jl
and
mov
and
pop
push
fs
dec
mov
in
das
js
bound
pop
clc
xchg
outsl
iret
lock
mov
mov
and
pop
jecxz
andb
leave
in
mov
pop
dec
shl
and
dec
pop
push
out
ja
fdivp
xchg
in
push
jae
and
sub
xchg
dec
mov
and
leave
mov
sti
addr16
enter
cmp
aam
out
inc
lea
sahf
push
mov
ret
in
faddp
mov
or
std
inc
fisubl
pushf
push
mov
cli
push
cmp
out
divb
mov
push
add
lahf
rcl
adc
adc
adc
mov
mov
inc
mov
dec
loop
sbb
push
hlt
mov
int
fldcw
push
push
push
mov
jecxz
imul
fstpt
testb
push
push
xor
sub
push
gs
mov
mov
pop
pop
pop
lods
cmpb
das
mov
xchg
enter
andb
mov
lahf
jnp
lahf
xchg
cmp
jp
push
push
popa
outsb
cltd
lret
mov
imul
lret
jno
mov
sub
stos
out
loop
loop
xor
pop
ret
sub
mov
adc
scas
icebp
pop
mov
std
out
pop
adc
cmp
es
or
adc
or
out
mov
pusha
fbstp
and
gs
cmp
rcr
pop
push
test
cmp
ret
lret
loopne
enter
xchg
into
aad
das
mov
dec
xchg
test
xor
xlat
nop
dec
mov
fs
arpl
push
pushf
inc
aaa
xor
pop
fisttpl
inc
cltd
pop
mov
and
xchg
cmp
xchg
inc
arpl
sub
sub
mov
inc
nop
int
icebp
and
add
lret
add
enter
cltd
imul
sbb
pop
dec
incl
dec
pop
lcall
push
push
xor
jle
inc
xlat
or
mov
pushf
inc
mov
lret
add
pop
jns
pop
adc
pop
jae
sahf
outsl
xchg
dec
ror
mov
lock
adc
push
arpl
aaa
dec
or
sbb
cmp
inc
cmp
gs
fiaddl
and
adc
push
or
pop
add
or
hlt
clc
xchg
xorl
dec
mov
add
push
sub
jle
push
push
xor
fldt
sub
mov
sbb
push
rolb
push
cmc
pop
adc
xor
lods
int3
movsl
lret
pop
lods
rorl
push
cmpsl
mov
mov
cmc
sub
sub
gs
xchg
sbb
int
mov
adc
aad
call
movsb
fcomps
cmpsl
inc
out
shlb
and
loop
repz
inc
jne
out
dec
mov
jmp
cmp
je
jge
cmp
sub
xchg
rcrl
jnp
push
inc
popa
cwtl
sbb
pushl
test
imul
hlt
cmp
stc
xor
pop
ljmp
out
cltd
mov
xchg
insb
pop
ja
js
xchg
push
jne
push
pop
imul
scas
cltd
mov
out
push
mov
pop
mov
lret
mov
cli
in
cmp
enter
imul
xor
pushf
sbb
repz
jno
mov
mov
inc
add
imul
mov
js
pop
fiadds
or
arpl
xor
fdivr
outsl
insl
mov
fidivrs
xchg
mov
ja
mov
into
mov
xor
mov
sub
fwait
dec
movsb
dec
rcrl
rolb
inc
shll
push
iret
xchg
mov
mov
pop
cmp
cmp
adcb
cltd
dec
dec
mov
xchg
fcomps
xchg
mov
push
aad
and
lret
out
pop
enter
out
imul
xchg
or
loopne
scas
fs
lods
pop
pop
in
and
mov
stc
xchg
insb
inc
inc
xchg
or
jnp
and
mov
xchg
in
outsb
cs
loopne
push
fdecstp
insb
gs
adc
pop
je
cmp
pop
adc
sbb
fld1
xchg
std
pusha
movsl
sahf
sti
pop
js
jb
cltd
outsl
sahf
icebp
insl
cmp
mov
pop
adc
gs
mov
sub
and
jns
imul
das
and
lods
jmp
xchg
add
and
or
mov
push
mov
sbb
or
and
cmc
fs
pop
mov
mov
or
cmp
add
clc
sbb
fisttpl
and
inc
push
xor
dec
xor
push
imul
and
jbe
outsb
inc
dec
push
in
test
xchg
int3
sub
leave
mov
icebp
stos
in
mov
adc
loopne
movsb
bswap
int
cmp
mov
xchg
inc
inc
xor
cmp
call
mov
dec
ret
jbe
and
dec
stos
out
cmp
leave
sbb
movsb
ret
mov
push
popf
pushl
pcmpgtd
fcmovb
call
mov
ret
inc
cmp
std
mov
jmp
mov
lret
and
mov
mov
ja
outsl
pop
xchg
fsubrs
rorl
into
push
popa
scas
iret
sarb
movsb
das
cld
sub
mov
jbe
loopne
pop
fisubrl
scas
adc
outsl
mov
test
add
mov
sahf
stc
pusha
sub
mov
xor
add
sbb
dec
movsl
fldl
fs
repz
mov
xor
into
dec
or
jnp
add
xchg
dec
fidivl
dec
ds
or
xchg
adc
repz
jbe
sub
aad
cs
in
push
mov
xchg
and
push
dec
popa
mov
cmpsb
mov
imul
cltd
inc
inc
pop
and
mov
int
xchg
cmpsb
push
fdivl
data16
pop
leave
xlat
adc
jecxz
fildl
xchg
dec
push
jae
jp
hlt
lahf
cmp
adc
mov
jge
leave
inc
inc
inc
dec
lods
xor
clc
in
lock
jo
sub
outsb
and
ds
inc
and
sahf
loop
stos
stos
cld
fidivrl
fcompl
pop
outsb
cld
je
pop
ret
jle
leave
outsb
fxch
or
pushf
mov
gs
add
jb
stos
rcr
mov
jp
ljmp
inc
mov
jge
inc
rclb
jb
aam
dec
mov
insl
outsb
pusha
add
or
jle
xor
inc
mov
push
sbb
rolb
xor
ds
clc
fnstenv
fcmovnu
lds
sbb
inc
inc
int
sub
cmpsl
mov
and
ss
dec
out
js
ljmp
imul
gs
add
pop
jecxz
lcall
sub
push
repnz
jne
xchg
repz
rclb
sbb
mov
xchg
jge
daa
in
sbb
inc
jecxz
sbb
jns
in
or
stc
mov
xchg
or
insl
ret
and
es
sti
mov
lods
xchg
popa
jo
shll
inc
int
mov
mov
stc
iret
data16
into
mov
lods
aaa
cwtl
scas
je
sbbb
or
imul
xchg
arpl
sub
pop
subb
add
xor
pop
in
in
and
out
ja
add
jno
pop
xor
test
add
jo
pop
movsb
scas
addl
jg
pop
push
fcomps
movsl
nop
lds
ds
xchg
sbb
push
rcrl
jecxz
mov
mov
mov
add
pop
inc
or
inc
aaa
pop
nop
subl
idiv
andl
push
pop
inc
pop
fxch
in
xor
cltd
insl
outsb
lods
push
cmc
mov
dec
sub
fbld
dec
shlb
nop
jb
mov
repz
pop
iret
cmpsl
cmpsb
mov
xchg
roll
shr
add
mov
xor
xchg
icebp
sbb
scas
add
leave
lcall
dec
jno
movsb
call
jno
xor
icebp
mov
pop
pop
test
lods
dec
xor
jno
jae
gs
cmp
jbe
mov
cmp
dec
aaa
add
out
outsl
mov
popf
mov
push
out
sahf
inc
adc
mov
ficoms
mov
xlat
xchg
mov
stc
push
jmp
outsl
je
sub
aad
dec
adc
mov
fstpl
imul
cmp
sahf
out
cwtl
ret
minps
call
mov
sbb
and
cltd
mov
imul
mov
xor
dec
mov
jns
repz
aaa
test
sub
sbb
inc
and
imul
fsubrs
jp
sub
inc
pop
js
mov
jl
inc
jl
enter
adc
adc
scas
mov
and
pop
test
cmp
das
mov
jg
bound
dec
ret
lret
loope
stos
rcrb
aam
gs
out
scas
imul
in
repnz
sar
cli
push
in
mov
push
xor
imull
loop
pop
push
enter
push
mov
inc
or
sbb
sbb
movsl
cmp
pop
or
lea
adc
orl
inc
inc
mov
mov
push
pop
jnp
jle
jge
xchg
imul
push
cmp
xlat
pushf
jle
and
negl
adc
mov
pushf
push
pop
add
rcrb
push
mov
lods
or
fnstcw
or
or
sbb
fildll
xchg
je
inc
and
cmp
or
lahf
fwait
and
cmpsb
lahf
jge
in
enter
cmp
hlt
mov
mov
je
or
cmp
mov
hlt
mov
pop
cmp
mov
adc
in
mov
fildll
sbb
aas
andnps
int
mov
bound
psrld
sub
rcr
cld
je
pop
mov
add
xlat
xchg
mov
jmp
jb
or
mov
arpl
mov
icebp
pop
sbb
or
cltd
or
mov
xchg
sbb
mov
jmp
ret
nop
icebp
cmp
sub
mov
rclb
int3
nop
jae
lcall
arpl
jmp
push
ss
outsb
dec
insb
lods
mov
ss
jecxz
inc
stos
sbb
dec
test
mov
fdivrs
cmp
sub
daa
mov
sar
je
rcrb
scas
stc
cmpsb
loopne
repz
add
imul
xchg
pop
arpl
sub
push
xchg
std
in
or
cmp
sub
in
fcoml
aam
shll
and
imul
or
jo
iret
call
lcall
repz
xor
in
inc
mov
lret
jne
push
mov
jge
stc
lock
sbb
sub
in
cltd
lock
inc
xchg
xchg
jns
sbb
jb
shrb
add
js
and
lahf
sbb
test
sub
sbb
and
shr
loop
mov
fsubs
fcomp
mov
hlt
add
out
cmpsl
xor
fucom
enter
jmp
xor
movsb
dec
push
fs
xchg
xor
cwtl
xor
jne
mov
xor
cltd
lret
pop
mov
add
jno
mov
mov
sub
and
jmp
xor
enter
pushf
push
lahf
mov
mov
fstpt
mov
mov
push
sbb
sbb
mov
and
mov
xor
cmp
sub
loop
int
movaps
sbb
out
mov
daa
sub
outsb
jnp
faddl
adc
mov
ret
cmpb
outsl
mov
adc
and
push
push
int3
or
sbb
test
jo
loope
repnz
int
cli
mov
call
imull
lock
jmp
lret
mov
pop
out
push
push
mov
nop
inc
ja
pop
dec
fidivrs
adc
outsb
mov
mov
leave
into
sub
addr16
sub
inc
pop
mov
mov
outsl
out
lret
mov
sub
mov
out
jmp
cli
mov
mov
aad
push
lcall
mov
sarl
cmp
sub
sub
out
mov
shr
sti
dec
adc
jb
aad
gs
and
xor
mov
xor
jb
xor
sbb
leave
jae
lods
cmp
or
and
stc
and
inc
divl
mov
outsl
pushf
adc
cmp
repz
fsincos
mov
ret
das
mov
adc
push
lds
push
cmpsl
ljmp
push
mov
rcl
jp
lahf
in
adc
mov
push
sarb
iret
mov
rcrl
adc
jo
pushaw
push
cs
dec
and
insb
outsl
lea
mov
mov
daa
push
xor
push
or
push
sbb
jle
iret
rclb
in
lahf
sbb
mov
adc
xchg
jg
std
cmc
rcrb
adc
cwtl
iret
push
inc
push
jge
mov
cld
outsl
testb
xchg
outsl
jg
xor
aaa
hlt
in
jg
or
fistpl
dec
vmwrite
or
cmpsb
dec
lret
je
jmp
xor
jne
dec
jl
addb
push
mov
mov
notl
push
dec
insb
gs
sbb
les
call
push
mov
sub
cmpsb
mov
adc
adc
push
mov
push
js
push
cld
mov
dec
dec
cs
pop
inc
mov
lock
icebp
or
jg
cmp
cmp
adcl
jl
mov
xor
pop
jmp
and
mov
lods
sub
add
mov
and
std
aas
ret
xchg
adc
divb
sbb
leave
or
imul
sub
xchg
gs
ds
pop
push
add
push
dec
loop
ror
mov
dec
or
and
movsl
stc
lea
xor
test
xor
pop
xchg
push
xor
or
das
stos
cmp
icebp
mov
mov
lock
cmpsl
pop
jmp
lock
mov
jnp
jge
adc
cmp
and
xchg
scas
mov
test
cld
ss
ljmp
jb
rolb
adc
jb
and
push
mov
cltd
xor
push
fisubs
xchg
or
fs
cli
fbstp
sub
repnz
pop
jno
fistps
fwait
cld
sub
sbb
pop
mov
lods
pop
jb
add
mov
mov
sbb
cwtl
jns
inc
into
push
cld
and
push
push
jp
xlat
pop
and
je
pop
fucom
cmc
push
cmp
imul
xor
inc
ja
pop
popa
std
mov
movsl
xor
ja
idivb
fs
cs
xor
js
insb
push
mov
pop
lods
into
xchg
add
outsl
xchg
push
popa
mov
in
in
insl
lea
inc
bound
and
ret
orl
sub
and
loope
sub
mov
sbb
out
push
sbb
mov
sbbb
cmpsl
xchg
movsl
or
pushf
pop
and
pop
hlt
mov
sub
inc
push
xchg
out
push
inc
dec
or
jb
ja
pop
cmp
ss
orl
lahf
xor
sbb
mov
mov
push
idivb
xchg
xor
iret
mov
ret
pop
fiadds
jmp
mov
out
pop
inc
hlt
dec
and
and
push
ljmp
jg
gs
cmp
in
cmp
xchg
xchg
inc
jbe
push
pop
fnstcw
xor
add
cmp
mov
clc
clc
jo
sar
mov
dec
icebp
mov
dec
lea
fldenv
iret
mov
push
add
sarl
mov
sbb
xchg
pop
sbb
lcall
xchg
inc
push
xor
or
jg
test
scas
or
leave
fdivrs
clc
or
jg
pop
sub
call
sub
dec
leave
mov
sbb
add
xor
inc
xor
popa
repnz
mov
mov
loopne
cmp
repz
mov
add
mull
and
test
cmp
lock
jge
add
les
rorl
or
gs
xor
and
daa
das
dec
sbb
sub
mov
add
movsb
jns
cs
lods
cmp
cmpsl
fdivp
mov
sub
int
into
cltd
lods
negb
dec
lcall
push
andb
outsb
cmpsl
in
into
outsl
add
test
mov
inc
inc
pop
inc
stos
mov
push
push
xchg
xor
sub
or
js
lahf
mov
mov
ret
cli
cmp
ret
sti
dec
sub
adc
xchg
addr16
ret
or
add
aaa
repz
repnz
test
xor
into
cmp
clc
mov
out
and
pop
sbb
cmp
lahf
jmp
inc
dec
out
mov
mov
mov
fistps
mov
testl
cmp
bswap
clc
pushf
data16
sti
cmp
hlt
pop
xchg
xorb
sti
loopne
xlat
shufps
jmp
sti
adc
lret
insl
mov
or
cmp
and
test
lds
out
dec
in
push
xor
mov
push
je
test
or
xlat
jb
mov
adc
push
and
cmp
pop
insl
dec
je
xchg
pop
fbld
leave
add
sub
hlt
ffree
adc
add
rorb
repz
mov
xor
test
mov
out
leave
cmp
pop
push
jb
mov
and
rclb
test
aaa
decl
fiadds
lret
hlt
inc
and
sub
xorl
jmp
cld
fldz
dec
inc
or
adc
mov
inc
xchg
mov
enter
gs
int3
int
cli
add
xor
movsb
or
xor
cmp
jb
mov
mov
push
jmp
dec
push
ret
or
fiadds
call
sahf
out
test
mov
nop
sbb
dec
dec
push
cmc
sbb
xchg
xor
xor
clc
dec
cmpsl
and
mov
sub
push
test
outsb
mov
xor
fwait
cli
mov
pop
or
lcall
push
add
xchg
cmp
sub
mov
sub
movsb
outsl
inc
xor
testl
xor
add
rol
sti
cwtl
ds
mov
movsl
stc
sbb
or
jo
inc
jno
outsb
inc
adc
push
popf
xor
push
pop
cs
xchg
and
test
ja
pushf
xor
push
jo
movsb
addr16
jmp
cmc
jle
ljmp
mov
jne
daa
in
and
imul
adc
ja
aaa
push
scas
in
cs
pop
sub
mov
inc
jl
cmp
jl
or
insb
cmovle
jns
mov
pop
push
aad
movsb
std
insb
inc
movsb
lret
aaa
rorb
pop
daa
or
xchg
mov
cltd
add
or
cmp
lock
pop
decb
cmp
xchg
movsl
fdivrs
jmp
subl
mov
dec
or
dec
jmp
cmp
not
outsl
ret
jle
adc
das
out
fdivs
push
repnz
shlb
jne
sub
jne
xor
repnz
mov
lret
decb
ret
pop
cmp
popa
mov
inc
rorb
neg
push
mov
test
fildll
pusha
cmpl
mov
mov
aad
or
lcall
inc
lock
std
jne
push
aad
xchg
mov
dec
sbb
mov
test
fstl
mov
sbb
xlat
push
xchg
push
dec
xchg
rol
test
xchg
in
cmpsl
fsubrs
pop
outsl
dec
ljmp
xchg
es
cmp
testl
insb
mov
lock
sub
rcr
fldenv
pop
jo
jns
lock
jo
jns
push
xchg
mov
imul
ds
mov
adc
lahf
jns
orb
cmpsl
adc
lods
xchg
xchg
dec
loopne
push
call
cmpsb
pop
fimull
and
rcrb
mov
inc
mov
dec
cwtl
cmp
push
mov
fstp
sub
or
mov
dec
cmp
and
xchg
push
fcmovu
adc
jno
sub
push
cld
xchg
mov
aad
inc
fadd
rcl
pop
mov
loope
es
jl
sbb
mov
inc
test
cmpsl
sti
js
enter
aad
test
int
sub
les
cli
int3
ret
mov
loop
sbb
and
push
fwait
xchg
notb
mov
fs
adc
mov
test
sub
add
loop
xchg
clc
popf
jnp
imul
sub
pop
fcomp
dec
mov
pop
sub
mov
aas
repnz
aas
jo
cmp
lahf
scas
lock
loope
mov
les
repz
mov
and
clc
jo
mov
enter
mov
out
das
sub
jne
iret
jmp
lea
xchg
movsl
xor
xor
jbe
or
cmpsl
pop
push
pop
xchg
andb
lcall
mov
cld
push
movsl
cs
adc
aad
sahf
inc
mov
pushf
add
dec
xchg
or
enter
push
lret
mov
adc
mov
in
test
int3
mov
jns
cmpsb
dec
lahf
and
fdivr
nop
mov
in
aam
ficoml
aas
jge
sub
out
mov
jnp
mov
sub
arpl
ret
and
cmp
xchg
cmp
in
stos
enter
add
scas
dec
pop
int
scas
pop
or
rolb
loop
mov
adc
fldln2
into
iret
jge
jb
mov
lods
push
lock
jns
ss
sbb
and
sbb
dec
pushf
js
jmp
fcoms
mov
mov
in
aas
push
mov
sub
push
lods
div
xor
stos
pop
push
xor
shrl
sti
shlb
lahf
and
in
xor
arpl
and
xchg
lods
aam
mov
xchg
rorl
fs
gs
inc
insb
outsl
sti
jg
mov
sbb
repz
dec
insl
cmp
sbb
imul
pop
arpl
rcrl
ret
test
pushf
leave
jmp
insb
pop
inc
mov
sahf
or
call
mov
inc
cmp
mov
push
das
stc
mov
pop
push
subl
cmpsl
imul
push
mov
addr16
jae
loopne
or
cli
jo
mov
mov
cli
sbb
lret
xor
push
xchg
imul
push
adc
sbb
test
xchg
test
loopne
xchg
mov
sarl
push
scas
adc
mov
pop
cld
stc
add
add
test
cmp
bound
scas
jl
aaa
aam
clc
push
xor
cmp
xor
out
clc
mov
mov
mov
and
pop
or
int3
add
fstpt
in
xor
scas
and
cmp
insl
fildll
and
hlt
insb
xor
xor
nop
pop
dec
sub
add
in
int
dec
clc
sub
inc
in
inc
mov
inc
sub
fidivrs
cwtl
dec
mov
shlb
inc
cmp
pop
movsl
jbe
push
imul
mov
lods
pop
push
pop
cmp
push
out
or
mov
pushf
pop
xor
push
adc
dec
xor
mov
xchg
out
out
fs
and
lock
imul
dec
inc
and
mov
cmp
jg
cmpsl
incl
cltd
aam
and
and
sub
lret
and
push
adc
push
out
leave
pop
fcmovbe
push
lcall
lods
leave
jp
push
inc
jns
xlat
mov
sbb
pushf
xchg
in
jle
sub
addb
cs
mov
xchg
or
rcrl
and
iret
int3
in
pop
jae
inc
gs
movsl
pop
test
or
arpl
sub
mov
push
mov
fwait
sub
mov
mov
cmp
sub
mov
shlb
pop
sti
cmp
cltd
popa
xor
movsl
imul
popa
subl
sub
pop
push
scas
jmp
mov
cmp
cmpsb
mov
jno
jns
fs
push
data16
mov
stos
mov
mov
outsl
push
shrl
outsb
dec
stc
mov
rcrb
cmp
adc
pushf
push
xchg
sahf
repnz
jne
fistl
int
lret
add
mov
xchg
lcall
mov
testl
arpl
mov
pop
cmp
in
imul
or
push
mov
push
cmp
add
mov
rorl
jp
cmpsl
aaa
and
and
push
and
sbb
shrd
mov
sub
test
mov
mov
jb
idivl
jbe
ds
push
xorb
rcrb
xorb
outsl
scas
sub
push
cltd
test
adc
jb
xchg
jns
test
outsl
jbe
xchg
popf
push
lret
jg
and
jmp
mov
jp
lret
movsl
cmp
adc
inc
mov
inc
xchg
xlat
adc
jp
push
adc
lcall
leave
pop
aas
into
jp
xor
call
cmp
sub
adc
xchg
dec
mov
repnz
xor
mov
push
pop
and
je
in
mov
filds
in
ds
xchg
pop
jbe
adc
jbe
in
cld
jmp
icebp
fstpt
jae
ret
sbb
mov
cli
movsb
lret
test
pop
inc
cmc
mov
movsb
sahf
mov
test
adc
pop
les
dec
sbb
insl
icebp
sub
fwait
clc
sbb
lds
mov
add
add
adc
pop
mov
xchg
ljmp
mov
out
fcmove
or
cmpsl
in
push
sahf
cld
fstpl
push
repz
or
mov
pop
mov
and
xlat
mov
fucomp
imul
dec
enter
decb
movsl
subl
dec
mov
mov
pop
in
cmpsl
aaa
ljmp
xor
fists
cli
and
les
cld
xor
stos
xchg
xchg
lcall
out
dec
int3
movsb
mov
and
daa
xchg
repnz
jmp
or
push
push
jle
pop
push
push
dec
mov
pop
imul
jb
adc
ret
add
insb
add
dec
jne
add
jge
iret
out
push
inc
idiv
cmp
imul
out
pop
es
or
cmp
rcll
xor
push
jns
lock
incb
inc
pop
and
xchg
movsl
jne
ljmp
xchg
pushf
pusha
ja
ja
push
push
xchg
push
sbb
and
and
not
dec
sub
jl
test
or
or
test
jge
cmpsb
repnz
xor
aaa
pop
leave
cltd
dec
xlat
mov
dec
add
sar
imul
fwait
testb
lea
mov
fs
or
cmp
sub
lahf
push
fidivl
andb
das
jg
sbb
mov
ljmp
push
loopne
cmp
out
ja
ret
rcll
lods
cmpsl
mov
pop
sbb
adc
rcl
pusha
jb
cmp
mov
fldcw
mov
xchg
push
lret
insl
insb
sbb
gs
imul
dec
mov
jl
arpl
loope
testl
stos
cmc
xchg
sti
xchg
pushl
das
adc
aas
int3
or
push
dec
add
dec
jecxz
and
out
jmp
push
adc
mov
mov
mov
cmp
mov
inc
and
rol
mov
sbb
sub
fcoml
imul
test
out
cs
faddl
in
cs
insb
dec
cmp
inc
add
pop
xor
mov
and
cmc
mov
sub
dec
mov
arpl
cmp
mov
lcall
incb
cs
fs
cmp
out
addr16
ret
dec
lret
cmp
mov
fildl
mov
xchg
adc
ljmp
inc
roll
mov
cltd
pop
jno
sti
adc
into
stos
cmp
cmp
aaa
pusha
inc
cmc
popa
fcomi
cmp
jecxz
sub
xor
cmp
cmp
mov
xchg
incb
out
jg
xchg
ja
mov
push
enter
mov
xchg
sbb
mov
xchg
mov
mov
outsl
lcall
dec
push
mov
xchg
jnp
xchg
lods
adc
sbb
in
shrl
es
cmc
sbb
adc
xchg
cmpsb
imul
cmp
mov
loope
cmp
je
fidivs
cld
cmp
dec
ds
mov
into
daa
sbb
movsb
cmp
pop
fucom
sub
xor
bound
xor
add
pop
aad
mov
push
jno
fmul
daa
mov
mov
scas
push
sbbb
mov
decb
dec
or
add
pop
jg
fmull
cmp
imul
inc
test
jb
stos
dec
cli
push
ret
lods
and
aam
popa
cmp
inc
dec
clc
mov
jns
and
addl
push
clc
dec
ret
inc
test
mov
jae
xchg
fnsave
xchg
nop
mov
lret
add
cmp
inc
loopne
fiadds
negb
adc
int3
cmp
scas
data16
lock
outsl
xor
xchg
mov
sub
adc
pop
mov
pop
loope
leave
and
outsb
adc
jo
mov
pop
mov
movsl
jg
pop
fstl
mov
and
cmpsl
sahf
gs
movsb
or
mov
scas
loopne
hlt
es
xchg
ror
fisttpll
inc
pushf
setae
arpl
ret
imul
add
jae
mov
inc
ret
push
ja
call
add
mov
dec
bound
or
pusha
enter
mov
jbe
stos
adc
data16
popa
int3
mov
dec
stc
dec
out
and
xor
ja
or
push
push
or
adc
xor
or
cmpsl
mov
into
mov
cmp
fistps
das
mov
out
xor
xchg
xchg
aaa
adc
cwtl
mov
sarl
je
vprotb
push
lds
sbb
movsl
dec
fldcw
pop
add
movsl
test
mov
out
lahf
mov
jno
cmpsl
mov
stc
mov
push
push
and
or
dec
mov
pop
mov
cld
loope
xor
pop
jg
push
sti
push
jae
sbb
xor
mov
adc
sub
cmp
jnp
clc
and
dec
xor
dec
mov
jns
inc
sub
jp
out
cmp
xor
or
mov
mov
pop
inc
dec
loop
pop
fs
pop
xchg
cltd
gs
sub
js
mov
adc
cli
int
insb
or
in
outsb
jnp
xor
sub
mov
jns
push
pushf
out
fwait
push
pop
lds
add
cwtl
xor
pusha
sti
mov
and
scas
xor
imul
inc
scas
dec
test
fdivl
cmp
inc
pop
push
loop
cli
rcl
mov
cmp
in
clc
outsl
dec
push
cmp
fwait
jge
orb
mov
or
add
xchg
cmp
xorl
repnz
xor
jmp
call
adc
jns
mov
aam
adc
shlb
cmpl
movsl
pop
les
ds
dec
jp
sahf
sub
and
inc
jmp
or
in
mov
icebp
cmp
push
pop
dec
xchg
sahf
lods
aam
outsb
cmp
in
mov
and
lock
lcall
mov
dec
scas
fwait
add
cmp
sbb
lret
fs
jns
js
or
dec
inc
test
cmp
mov
xchg
cmp
sbb
mov
dec
pop
xor
dec
outsl
dec
movsb
out
cmp
in
packsswb
dec
popf
cltd
int3
mov
dec
inc
and
xchg
roll
in
jmp
cwtl
in
mov
adc
lcall
sbb
inc
mov
fwait
rcl
push
lahf
mov
jg
xchg
mov
sub
dec
fiaddl
and
mov
jg
loope
push
mov
cmc
push
inc
mov
push
xchg
jno
ffreep
push
stc
imul
loop
shrl
out
and
fsubrs
icebp
cmc
xchg
adc
addr16
jae
pop
xchg
adc
je
xchg
jo
pop
shll
pop
stc
imul
mov
sub
ficoml
dec
cld
neg
or
outsl
mov
add
lcall
and
sub
jo
pop
movsb
sbbb
mov
out
add
push
outsl
dec
pop
bound
mov
shll
mov
mov
dec
inc
addr16
aas
cmpsl
sub
rol
mov
jg
sub
jae
xchg
fldcw
adc
inc
adc
dec
sub
insb
ds
pop
xor
enter
popa
xchg
mov
je
adc
fimuls
cmp
out
test
and
jg
mov
int
ficoml
jb
sahf
cld
cli
and
sub
xchg
fs
adc
mov
fs
adc
inc
out
test
cmpsb
push
imul
mov
lret
jp
int
push
add
mov
jno
mov
push
sub
pop
roll
add
and
dec
data16
cwtl
push
jecxz
lahf
cmpsl
hlt
push
lods
call
adcb
ljmp
movsb
int
push
clc
imul
aam
inc
xor
repnz
inc
outsl
fildl
xor
sahf
lret
add
and
push
and
inc
cmp
mov
dec
sarb
or
out
mov
pop
pop
in
sub
mov
jo
jle
les
insb
lock
and
jge
and
data16
jg
cmp
mov
mov
jne
add
mov
loop
xchg
test
xchg
lods
sbb
push
cmp
in
in
fucomip
add
test
stos
push
xor
sarl
std
movsb
cmpsl
and
imul
lods
xor
fwait
push
mov
ds
fidivl
and
movsl
aad
daa
xor
mov
ret
sbb
insl
outsl
inc
enter
sarl
push
clc
cmp
sbb
lock
sarl
sbb
xchg
lret
inc
fdivs
gs
lods
test
push
mov
imul
ret
and
xor
pusha
add
adc
pop
sub
es
jl
rcrl
xor
stc
add
into
push
mov
lahf
iret
js
push
ss
cmp
jbe
mov
or
push
mov
push
push
into
xchg
pop
jp
sbb
repnz
jmp
jns
test
push
mov
mov
sub
repnz
xorb
mov
insl
les
insb
repnz
sub
inc
adc
test
cmp
push
lcall
outsl
stos
insl
lcall
lds
sti
pop
aaa
daa
and
outsb
mov
fnstcw
ret
xchg
imul
mov
jp
je
scas
jo
jo
outsb
push
jae
add
mov
or
push
in
adc
sub
jbe
xchg
cmp
push
call
pop
ret
enter
xor
test
pop
cmp
jge
and
ficomps
cmpsl
add
sti
push
cmc
pop
popf
test
adc
pop
leave
js
sbb
hlt
adc
mov
sub
mov
adc
in
in
dec
mov
leave
test
mov
sub
push
inc
das
inc
lds
jecxz
addr16
cld
adc
dec
push
pop
rolb
test
lahf
xor
shrl
aam
test
lret
or
jnp
jp
pop
lret
dec
xlat
mov
int
mov
add
movsb
idivl
lcall
dec
aam
sub
adc
or
pop
aad
orb
cmp
lcall
push
sub
jae
out
ret
rorl
insl
ret
xchg
pop
cmp
popa
popf
add
arpl
outsl
into
ret
xchg
sub
lods
out
repz
insb
daa
and
jb
inc
push
aam
mov
leave
int
sub
aad
xchg
or
fs
sbb
cmc
inc
es
sbbb
hlt
lahf
sbbb
cmp
scas
stc
push
xor
adc
adc
and
adc
rcr
enter
push
push
xchg
xchg
outsl
out
out
inc
push
int
js
movsb
cld
and
daa
push
aam
xchg
sub
in
jb
xchg
jle
in
popf
fs
fstpl
push
out
enter
les
pop
inc
pusha
mov
pop
adcl
add
inc
xor
ss
jg
push
jne
and
imul
xor
or
stos
cli
ficompl
add
pusha
and
and
call
pshufw
mov
and
cmc
shll
data16
xchg
xlat
in
and
test
pop
mov
dec
in
xchg
fsubrl
fisubs
out
aaa
and
adc
xor
sub
stos
push
add
xor
out
xorb
ja
jmp
loope
mov
jne
loope
xlat
and
add
push
push
sbb
out
loop
jno
sti
jbe
pop
pop
push
sbb
xchg
push
insl
fists
rorb
lea
mov
mov
inc
adc
repz
adc
test
adc
clc
daa
call
pushl
mov
imul
push
lahf
cmp
js
sbb
les
ret
and
and
movsb
mov
pop
add
sub
or
outsb
test
decb
rol
cltd
ljmp
sarb
push
jne
sub
fidivl
cmp
gs
pop
addr16
adc
les
xor
push
fisttpl
int3
lahf
and
add
add
shrb
ljmp
data16
mov
xor
xchg
jle
mov
sub
test
imul
ljmp
inc
push
and
cwtl
dec
fnsave
and
inc
jns
test
call
shlb
sti
jne
cli
add
insl
mov
jl
jae
mov
stc
bound
mov
addr16
mov
sbb
stos
cmpsl
adc
inc
jl
fistps
mov
pop
fldcw
sbb
add
insl
or
ja
cmc
dec
ljmp
mov
test
push
pop
inc
loop
leave
adc
sub
jmp
aad
mov
repnz
jae
jno
inc
jne
mov
inc
push
cmp
out
xchg
dec
das
lret
sbb
mov
jmp
xchg
les
mov
sub
push
imul
notl
sbb
gs
call
push
mov
xchg
repnz
xor
and
sbb
out
stos
push
js
test
insl
jp
scas
pop
xchg
std
in
stos
mov
push
sbb
mov
scas
xchg
cmp
xor
sbb
mov
flds
test
mov
mov
pop
call
pop
in
in
pop
push
mov
pop
push
cmpsl
dec
sub
push
pop
imul
push
js
push
jnp
push
ss
xchg
shl
test
dec
adc
aad
lods
jecxz
int
and
imul
out
cmp
das
pushf
jae
mov
shll
mov
outsb
push
bound
inc
loopne
inc
fs
sub
repz
call
cmp
xor
aaa
inc
icebp
arpl
aas
xor
xchg
pop
push
mov
shlb
lods
jle
ret
sub
nop
outsb
push
loopne
pop
or
imul
mov
pop
cmp
stos
lods
add
ret
ret
icebp
mov
jl
mov
jnp
nop
ret
jbe
nop
loope
push
mov
adc
mov
mov
jns
in
pop
mov
push
push
adc
jp
test
sbb
xchg
jno
dec
ja
jmp
inc
cs
aam
cmp
xchg
mov
cli
lods
aad
mov
adc
dec
or
jb
stos
add
lods
xchg
mov
aaa
jp
daa
vpand
ret
cmp
xor
add
jnp
inc
mov
ss
add
dec
inc
mov
insb
xchg
jecxz
inc
lock
out
fld
mov
add
cmp
mov
hlt
es
in
outsb
adc
pop
hlt
sahf
xchg
and
adc
scas
add
lret
lcall
or
xor
andl
jle
push
mov
dec
test
cmp
leave
in
push
fldenv
sub
cltd
pop
inc
push
xor
jb
cmp
lret
insb
sbb
mov
mov
mov
pop
adc
out
push
pop
jmp
add
mov
stos
and
inc
ficoms
push
mov
sti
mov
in
shr
inc
mov
mov
fadds
push
les
or
mov
inc
push
ljmp
daa
add
pop
inc
cmp
rolb
pusha
stos
mov
fmulp
xor
jp
movsl
xchg
mov
ljmp
mov
cs
adc
and
add
pop
cld
push
enter
mov
out
jb
scas
sub
xorb
and
dec
adc
jnp
arpl
or
xchg
test
stc
push
mov
xchg
push
adc
out
lcall
pop
inc
fisttpl
push
das
mov
pop
mov
mov
adc
and
loopne
add
add
pop
inc
mov
lea
pop
and
mov
insl
ret
dec
xor
call
lods
stos
ret
add
test
or
rolb
loope
sbb
rorb
push
das
clc
idivl
mov
jge
sub
xchg
out
jns
fsts
out
xchg
int
mov
xchg
xchg
push
inc
mov
dec
fistpl
cmp
nop
push
fisubrs
movsb
pushf
insb
int
test
xor
xchg
aam
sbb
loope
stos
mov
ror
xchg
nop
enter
dec
pop
add
lret
andl
flds
xor
data16
arpl
mov
or
add
dec
sbb
ret
or
leave
in
call
cli
js
leave
jp
push
jl
and
iret
adc
aam
mov
mov
add
in
stos
dec
adcb
cmc
imul
outsl
and
inc
xchg
cmp
jmp
push
cmpsl
adc
mov
or
push
sbb
xchg
add
mov
popf
mov
in
sub
out
ja
fldenv
xor
dec
fs
std
cmp
push
and
mov
pop
adc
xor
mov
adc
jo
fmuls
int
loop
daa
mov
sarl
fmull
movsl
scas
pop
in
and
lods
enter
inc
ja
xchg
repnz
daa
into
mov
cmp
or
push
adc
je
sub
cmp
mov
clc
jle
mov
leave
push
cmpsl
inc
aad
hlt
ret
scas
mov
into
dec
ficompl
push
mov
call
push
mov
lret
xor
loope
test
fucomip
lds
jp
in
add
dec
push
xchg
icebp
roll
xorl
lcall
lcall
push
movsb
shl
xor
xor
mov
lock
push
vpunpcklwd
mov
sbb
insl
sub
dec
shr
pop
add
fmuls
jno
pop
inc
mov
test
cmpsl
and
jbe
out
inc
sbb
sti
cs
xchg
fcoml
cmpsl
xlat
pop
or
pop
sub
adc
push
movsb
jmp
inc
jb
add
mov
aad
push
push
dec
adc
xor
adc
loope
repz
and
push
push
and
rcrb
xor
jg
imul
out
scas
sbbb
out
sti
out
inc
mov
mov
cmpsb
imul
jmp
mov
xchg
into
loop
xor
push
mov
sub
mov
or
enter
dec
jg
sbb
js
imul
int
rcll
aad
or
pop
push
fimuls
dec
test
out
pop
cmp
cmc
and
push
jmp
aaa
aad
push
xchg
lods
xchg
pop
sub
add
cld
cmp
ret
pop
inc
mov
push
idivb
mov
out
xlat
pop
mov
dec
lret
and
insl
jl
mov
inc
lock
add
insl
adc
ljmp
xchg
flds
es
lods
push
pop
add
mov
lahf
mov
mov
je
pop
pop
outsl
int
sbb
push
inc
jp
jns
int3
fwait
mov
lods
xchg
je
vmovhps
jg
mov
outsb
push
or
jp
adc
les
mov
in
adc
mov
jg
sub
mov
lds
addr16
and
insb
fldt
fiadds
ret
std
enter
xchg
lods
sub
push
aas
ss
sub
inc
iret
lods
cmp
cmp
mov
mov
movsb
or
and
jle
subl
in
int
and
xchg
cmc
xchg
xorl
pop
and
loopne
movsl
add
fbld
pop
jmp
push
dec
mov
leave
testl
icebp
andl
idivb
sbbl
mov
xchg
xlat
add
dec
rcr
add
imul
sub
orl
xor
popf
jne
mov
mov
xchg
fcomps
jnp
sub
fs
into
xor
inc
inc
iret
out
aaa
xchg
std
mov
fildll
and
fistpll
notl
cmp
sub
iret
push
and
inc
add
imul
in
mov
repz
aaa
movsb
mov
xchg
aaa
and
or
imul
pop
adc
jne
pusha
fstl
bound
rcll
mov
mov
cmp
in
cmc
cs
stos
xor
push
in
jne
orb
bound
mov
insb
arpl
loopne
aas
xchg
arpl
mov
inc
call
aam
push
cld
add
mov
and
idivb
mov
jmp
rdmsr
ds
or
pop
outsl
test
ljmp
lahf
subb
jb
mov
xor
jb
dec
stos
push
out
loop
ss
ljmp
mov
pop
movsl
and
aaa
in
push
or
mov
lea
push
pop
and
xor
jno
fldenv
push
push
xor
shrl
hlt
shlb
repz
sub
fistl
mov
push
mov
lock
push
ljmp
sbb
mov
mov
jae
mov
push
mov
andb
xor
inc
sbb
xor
jo
sub
xchg
jge
pop
xchg
and
fidivl
mov
jecxz
int
xor
dec
gs
push
push
lret
data16
test
adc
hlt
dec
pushf
inc
imul
jne
aad
lock
jge
leave
mov
and
pop
inc
or
push
cmp
jne
jns
xor
dec
js
jne
cli
scas
lock
movsl
idivb
push
xor
or
out
bound
int
cmp
out
das
adc
out
ljmp
stos
loop
pop
adc
dec
loop
mov
dec
aad
cmc
in
xchg
cli
adc
inc
divb
jno
xlat
sar
pop
icebp
or
inc
sbb
or
xchg
repz
fmul
xchg
loopne
add
int
push
and
and
mov
xchg
xor
nop
sub
xor
xchg
lock
xchg
enter
and
push
and
dec
mov
or
shlb
inc
xchg
idivl
pusha
mov
daa
in
xor
test
xor
add
fdivl
xchg
addr16
push
mov
adc
aad
cmc
inc
xor
pop
stos
cmp
jge
adc
push
sub
add
lea
mov
cmp
and
xchg
xor
loope
dec
jne
cmpsb
dec
jae
mov
and
mulb
sbb
mov
adc
je
mov
repz
pop
insb
cmpsl
adc
mov
mov
je
adc
bound
inc
inc
xor
dec
lock
movntq
mov
arpl
addr16
and
sahf
push
xchg
scas
popl
sbb
xchg
mov
hlt
outsb
lods
inc
mov
adc
xchg
lret
iret
sbb
clc
mov
sub
mov
xor
movsb
int3
inc
add
xchg
into
clc
cmpsl
cmp
cld
dec
adc
out
rcrb
fidivrl
sub
imul
push
pop
xor
das
sti
mov
and
lret
sbb
mov
pop
xor
mov
push
lret
mov
push
jns
daa
out
insl
mov
xchg
gs
inc
cli
xor
xor
xchg
pop
nop
arpl
mov
mov
rcl
pop
cmp
aaa
pop
pushf
test
dec
pop
arpl
aam
add
jmp
ret
addr16
push
lret
popf
cwtl
push
cmpsl
add
test
fmuls
jp
mov
test
scas
dec
mov
jns
orl
das
cld
inc
jg
mov
stc
mov
push
jne
leave
pop
and
mov
mov
movsb
mov
mov
test
pop
dec
push
std
lods
and
push
mov
sbb
test
cmc
cmp
sbb
out
pop
jmp
daa
jb
push
int
loope
scas
adc
filds
hlt
leave
adc
nop
xchg
inc
push
push
mov
cmp
mov
sti
testb
movsb
cmp
pusha
aam
xor
sahf
push
popa
and
in
fldenv
sbb
sbb
pop
ljmp
push
shll
cmp
pop
cmpsb
arpl
dec
jl,pt
stos
roll
sub
add
dec
stos
pop
popa
inc
xor
mov
adc
and
push
cmpsl
mov
testl
bound
inc
scas
xchg
mov
jmp
inc
popf
test
test
fwait
daa
jg
les
sub
adc
gs
xor
outsl
js
xchg
inc
jb
aaa
and
pop
addr16
cmpsb
aam
push
push
into
adc
dec
cmpsl
and
xor
gs
lcall
aad
dec
test
ss
aaa
hlt
data16
add
inc
dec
in
scas
lods
popa
lods
mov
cltd
push
std
sub
mov
dec
sahf
aas
lods
lahf
push
inc
movsl
sahf
repnz
jb
stc
mov
sub
xlat
in
sahf
std
das
jb
cli
lcall
lcall
cld
dec
mov
inc
lcall
addr16
aam
xor
push
mov
mov
iret
fwait
popf
jg
inc
adc
dec
cld
test
inc
and
sarb
push
dec
xor
je
or
lcall
cmc
pop
mov
xchg
cmpsl
out
ret
inc
gs
xor
movsb
ss
test
sub
cmp
mov
imul
stos
sub
outsb
xchg
ficoml
imul
inc
push
sub
jmp
das
orl
cltd
faddl
stos
adc
xchg
int
push
sti
jae
inc
insb
push
out
xor
lock
mov
pop
adc
mov
subl
sbb
or
inc
data16
lret
lods
cs
loop
or
loope
and
mov
scas
jbe
push
mov
ljmp
fs
jno
add
lret
adc
or
sbbl
jbe
mov
cmpsl
cld
inc
xlat
test
sahf
leave
add
bound
inc
dec
mov
jno
jne
and
rcrb
pop
xor
xor
lcall
jp
and
add
xor
addl
jnp
mov
mov
mov
jle
fdivl
push
loop
into
push
pop
sub
xchg
inc
cli
adc
cmp
pop
daa
arpl
xchg
pop
sbb
cld
push
ffree
dec
jge
insl
adc
aam
sbb
adc
gs
sbb
or
fmull
dec
and
popf
lods
rorl
ret
es
in
mov
add
movsb
lea
or
ljmp
addb
inc
inc
sub
fs
test
bound
adc
aam
jmp
lahf
inc
aas
and
xchg
and
xchg
inc
insl
or
push
pop
das
ja
outsl
xor
push
sbb
push
cld
fucom
jecxz
add
pop
add
jl
shrb
movsb
push
sub
enter
repz
sub
pop
into
mov
inc
pusha
mov
inc
lret
out
test
loope
add
cmpsl
xor
xor
inc
xchg
inc
sbb
sahf
sbb
in
sbb
jae
notb
push
dec
inc
cmp
into
dec
xchg
mov
xchg
loope
arpl
sti
daa
dec
scas
lods
pop
das
ffree
es
jne
scas
push
leave
push
jae
xchg
out
cmp
mov
rcrl
sahf
add
icebp
sub
gs
add
add
pushf
loope
fsub
lahf
cmp
scas
sub
sbb
out
cld
mov
mov
enter
fldenv
dec
popa
and
repz
jb
xorl
ret
fstp
divps
adcl
jns
in
fmul
sub
sub
rolb
lea
lock
ffree
rcl
adc
mov
push
sbb
mov
int3
xor
es
push
out
pop
sub
ljmp
and
adc
out
in
mov
sub
mov
inc
inc
pop
nop
daa
xor
out
add
jecxz
mov
hlt
push
popa
adc
xchg
fsubs
mov
xchg
push
sub
lea
pushf
js
andl
add
arpl
fs
dec
push
sti
and
lret
cmp
xchg
stc
mov
idivb
mov
inc
arpl
adc
jae
enter
dec
push
push
pand
popa
dec
dec
jnp
loop
fmul
mov
or
inc
add
jnp
ds
mov
push
cltd
bound
pop
decl
adc
repz
cwtl
pop
rorl
lds
pop
pop
sub
into
pop
insb
aaa
push
into
leave
pop
xchg
fistpll
pop
imul
push
out
out
cli
das
jae
inc
push
cmp
xchg
sbb
js
mov
cli
lods
or
and
cmp
cmpb
pop
cld
mov
aas
loop
inc
sub
fcomps
jge
std
sub
std
out
sbb
fimull
dec
jmp
mov
push
aam
aad
inc
push
pop
in
and
mov
add
cmpl
push
imul
lods
scas
outsl
shlb
sbb
jmp
push
mov
jae
fwait
dec
xchg
stos
cmp
sbb
inc
mov
push
mov
add
fwait
dec
or
xchg
mov
mov
mov
push
sbb
fnsave
fstpl
xor
test
or
stos
enter
nop
mov
icebp
dec
ficoml
sub
jge
ss
fadd
shll
nop
or
xor
loope
insb
aam
in
mov
cmpsl
xor
add
fadd
sub
and
sbb
cmpsl
mov
cmpsl
sahf
test
push
xor
jge
nop
inc
test
xor
cmp
cmc
or
xor
stos
dec
jp
add
mov
mov
add
or
push
bound
into
movsb
jge
out
lods
and
shll
add
in
in
lods
incb
mov
cmp
inc
sbb
insb
cltd
into
cmpsl
repnz
jg
push
sbb
pop
mov
cwtl
jbe
clc
push
dec
mov
jo
jmp
inc
mov
test
jnp
test
dec
clc
add
cli
fildll
dec
pop
std
dec
cs
push
push
incb
and
clc
mov
inc
adc
fstp
sti
sbb
add
testl
aas
push
dec
jle
lret
inc
in
mov
fstpl
lret
shll
enter
xor
mov
push
jl
cmp
fadd
scas
xor
leave
sub
sub
xlat
xchg
jecxz
addb
jne
lret
or
push
popf
pop
xchg
fucomi
push
mov
cmpb
das
push
xor
insb
mov
fcmovu
pop
outsl
xlat
adc
leave
dec
sarb
add
mov
and
loope
sahf
sbb
ret
iret
add
mov
std
xchg
or
je
lods
test
out
ret
inc
seta
xor
mov
test
loop
ret
inc
fwait
iret
mov
push
data16
lods
in
push
pop
adc
out
jnp
stc
mov
test
aas
push
stc
cwtl
imul
push
jecxz
mov
inc
push
and
clc
fsub
sahf
cmp
fwait
sahf
and
xchg
outsl
mov
aas
mov
aam
push
ljmp
mov
aad
movsl
mul
js
cmp
loope
sub
lret
sar
xchg
fcoms
subb
sbb
adc
das
mov
cltd
xchg
mov
mov
daa
out
dec
push
loopne
fwait
pop
stc
and
loope
arpl
and
icebp
dec
jge
cmp
iret
mov
inc
adc
xchg
filds
cmp
xorl
cmp
lret
adc
andl
int
mov
mov
xchg
inc
adc
add
add
int
clc
xchg
les
dec
pop
dec
ja
and
adc
adc
aad
rorl
xlat
inc
inc
or
repz
inc
add
add
lods
roll
sub
dec
mov
xchg
push
inc
pop
pop
pop
dec
inc
bound
gs
lods
cmp
cmp
xchg
sbbb
jmp
enter
movsl
cmp
add
sbb
sahf
mov
adc
popa
xchg
movsl
adc
arpl
outsb
pop
sbb
jle
xor
jecxz
out
scas
sbb
push
call
pop
aaa
add
mov
jne
mov
insl
mov
mov
sbb
insb
nop
dec
ficompl
xor
jo
add
fnstsw
sbb
out
loopne
ljmp
sub
pop
test
addr16
xchg
inc
aaa
and
and
jl
andl
mov
mov
add
or
insb
or
or
cltd
and
or
inc
repnz
lret
lcall
inc
xchg
jno
sub
lret
dec
cmpsb
add
inc
mov
std
sub
imul
mov
xor
mov
movsl
ja
inc
cs
mov
inc
loop
fs
inc
rorb
push
popa
shl
aam
popa
popa
outsb
mov
mov
xchg
inc
ja
cmpb
or
jb
bound
inc
sub
cs
inc
sub
and
iret
or
ds
push
pop
xchg
iret
sub
push
adc
dec
inc
aad
enter
faddp
lea
hlt
mov
and
iret
jle
in
flds
sarl
dec
add
call
add
js
push
fwait
adc
adc
mov
jle
call
test
cmpb
pop
into
jnp
inc
dec
jne
popf
xor
mov
or
pop
sub
das
mov
shl
shrl
pop
sub
enter
adc
sbb
mov
aas
xchg
xchg
xchg
rcll
jmp
pop
mov
jnp
push
adc
pop
scas
aaa
leave
and
cmp
push
push
push
fnsave
xchg
sub
inc
inc
loopne
out
sbb
psubw
dec
sub
jns
daa
and
or
outsl
fimull
sbb
jb
mov
xor
mov
sub
mov
cli
icebp
pusha
pop
hlt
sub
das
ds
xchg
push
add
std
or
loope
xor
les
mov
jl
pop
mov
js
je
cmpsb
mov
outsb
stos
cmc
jo
cli
jne
fadds
lea
or
ret
xchg
xchg
sub
inc
inc
sub
push
shll
sbb
stos
cmovle
iret
int3
lahf
stc
sbb
insb
push
and
xchg
cmpb
cltd
xor
add
pop
cltd
call
adc
movsb
pusha
inc
mov
jae
and
push
lds
ror
jns
sub
es
xchg
jbe
lods
loop
pop
fidivrl
cs
lret
pop
dec
dec
inc
jb
cmp
adc
push
push
mov
add
mull
add
sub
test
and
stos
sub
js
push
subl
arpl
push
shll
mov
xchg
mov
arpl
xor
push
stos
xchg
or
lahf
lods
in
jp
mov
push
fadd
sahf
lret
dec
sbb
jp
pop
cmp
pop
jbe
sbb
lods
lds
push
mov
cli
movsl
rolb
and
pop
rcrb
aam
ret
sbb
movsl
inc
add
aad
pop
enter
sbb
push
mov
ret
push
gs
nop
bound
push
je
fbld
sbbl
push
hlt
test
icebp
int3
movsl
aaa
cmc
ret
inc
movsb
frstor
xchg
dec
add
pusha
aad
out
push
mov
jp
and
test
in
push
and
jbe
xchg
ja
mov
pushl
cmp
inc
filds
cmp
push
ljmp
mov
cltd
adc
dec
and
inc
push
int
mov
jp
test
movb
arpl
enter
sbb
fs
mov
push
mov
hlt
push
pop
mov
cltd
insb
fisttpll
xchg
xchg
lods
push
sub
movsl
mov
xchg
mov
inc
in
daa
cli
aaa
lock
in
dec
push
cwtl
jp
les
ret
ret
push
push
aas
roll
imul
pop
insl
or
or
jnp
repnz
add
ja
call
mov
push
sbb
cmp
lods
sbb
shlb
ds
mov
inc
scas
mov
pusha
mov
push
jnp
in
in
adc
push
adc
rcrl
push
stc
cmp
push
sub
bound
jp
and
int3
lds
pop
sarl
por
or
mov
xchg
mov
enter
adc
xchg
call
sarb
and
aad
test
mov
sbb
cmp
mov
cltd
lods
push
ret
sub
inc
mov
mov
orb
cmpsb
xchg
sbb
pop
jbe
fwait
adc
sahf
push
cltd
dec
mov
jne
ss
mov
lcall
push
sub
mov
test
inc
push
sub
cld
dec
or
orl
fs
and
mov
and
pop
xor
nop
movsl
rolb
jbe
in
mov
push
popf
or
pusha
pushf
mov
lret
sub
xor
pop
xor
jb
out
inc
scas
or
in
jnp
xchg
mov
mov
js
jl
shr
inc
fwait
mov
mov
adc
insl
das
iret
inc
inc
data16
data16
cwtl
jne
and
sub
push
mov
pop
dec
adc
jae
pop
fs
dec
push
aaa
insb
movsl
mov
lods
dec
or
ret
jge
ljmp
into
in
mov
popf
inc
imul
add
mov
jmp
sub
popf
dec
aad
cmc
je
pop
xchg
in
pop
mov
lock
mov
or
adc
push
adc
sub
dec
mov
fsubrs
ret
xlat
add
push
lret
pop
pusha
xchg
test
pop
add
enter
daa
mov
mov
dec
sub
jg
jae
cmp
adc
aam
and
and
clc
push
adc
imul
ljmp
test
pop
js
pop
rcr
and
cmpsl
bound
scas
pop
fdivrs
das
outsb
jmp
lcall
xchg
adc
adc
jo
test
in
negl
mov
movsb
sbb
cmpsl
push
scas
mov
push
outsb
stos
inc
outsb
xor
rcrb
mov
ss
push
lea
xchg
sbb
fsubs
ret
cltd
call
mov
imul
cmc
sti
movsb
cmp
mov
or
addr16
jl
adc
and
dec
lcall
cmpsb
aam
push
cld
mov
mov
xor
sbb
mov
insl
mov
into
mov
mov
aas
test
fucomip
and
imul
movsb
push
stos
in
cld
int3
adc
xor
test
lret
xchg
cmp
insb
insl
lret
ljmp
add
iret
mov
aad
add
in
cmp
jb
cmp
imul
icebp
and
xchg
sti
rolb
xor
jne
push
das
mov
ss
mov
or
aas
sub
push
lcall
dec
and
je
out
test
mov
xchg
xchg
pop
ret
and
jge
sub
cmc
in
add
aaa
outsb
aas
or
mov
xchg
adc
int3
mov
cli
pop
lahf
clc
inc
jb
xchg
adcb
push
repz
jo
rolb
sbb
call
in
js
arpl
sub
data16
les
xor
cltd
bound
scas
int3
xlat
cwtl
dec
xchg
cmp
clc
lods
jle
in
dec
aas
lds
ja
and
push
dec
sub
mov
xchg
mov
lods
inc
sbb
mov
cmp
daa
cmp
lock
mov
mov
adc
adcl
roll
xchg
cs
add
jecxz
mov
jo
xor
and
add
and
nop
jmp
xlat
nop
sub
xlat
push
dec
or
lahf
and
mov
jns
add
add
pop
or
jp
int
cmp
stos
inc
pop
stos
ds
iret
mov
mov
daa
mov
push
xor
lods
js
xchg
mov
out
xor
inc
mov
add
push
sub
add
push
call
cs
cli
sbb
sahf
cwtl
jns
insb
jo
pop
or
and
fisubl
aaa
out
in
or
fsts
movsl
xor
test
ds
sahf
sarl
popa
pop
iret
push
cs
mov
movsl
xor
push
ss
mov
arpl
mov
stos
mov
std
cli
clc
add
popa
aas
lea
int
inc
or
jno
push
mov
push
into
lods
fs
jne
scas
sbb
cltd
pop
cmc
pop
mov
incb
aam
push
clc
jl
stc
mov
cwtl
fisttpl
fisubrl
pusha
bound
sbb
mov
out
xchg
and
jp
dec
ret
jmp
clc
xor
scas
xchg
pop
std
scas
scas
sbb
jmp
xchg
pop
mov
add
mov
je
insb
pusha
mov
xchg
rcrl
popa
xor
orb
pop
stc
imul
push
sbb
or
pusha
mov
punpcklbw
insl
mov
and
jg
sahf
xor
pop
push
sbbb
clc
or
xchg
jnp
jnp
subb
mov
xchg
pop
fsubp
xchg
sbb
ss
sub
fs
insl
cmp
mov
push
xchg
dec
icebp
test
pop
faddp
hlt
popf
mov
ljmp
and
loopne
ret
cmp
adc
mull
sbb
inc
hlt
mov
sbb
into
nop
test
ret
add
inc
repnz
jg
shll
cltd
pop
push
in
dec
adc
popa
xchg
mov
adc
push
xchg
test
mov
lahf
movsb
lcall
sbb
movsb
inc
pop
scas
popa
inc
je
push
mov
mov
jp
xchg
cmp
xor
jg
push
aaa
inc
cmc
xor
add
mov
cltd
movb
ss
mov
jne
shl
sub
xchg
jle
mov
test
test
mov
lahf
call
mov
rolb
jge
mov
sbb
cmpsb
aaa
cmp
adc
sbb
insb
adc
dec
pushf
inc
sbb
and
imul
pop
adc
std
lock
jae
pop
add
add
mov
ja
cmpsl
ror
xor
and
stc
mov
into
ljmp
subb
hlt
fistl
lfs
outsb
jns
enter
shrd
sbb
xchg
and
adc
and
loop
cs
lods
call
jecxz
sahf
hlt
repnz
dec
inc
jge
ret
xchg
jmp
repz
push
test
cmp
enter
sub
in
mov
xor
lods
mov
jmp
lahf
andb
imul
lea
sub
out
or
aaa
scas
aad
nop
mov
rcr
and
aaa
je
inc
add
jne
hlt
test
push
enter
iret
pop
mov
mov
scas
mov
or
mov
mov
sub
dec
pusha
in
sub
in
mov
fs
inc
pop
mov
cmp
mov
add
sub
dec
xor
jb
and
add
push
add
xchg
mov
push
cltd
or
sub
push
mov
cmpsb
inc
push
pop
fadds
cmp
movsb
pop
fisubs
shrl
adc
movsl
mov
xchg
sarb
add
jbe
inc
imul
cmp
push
xchg
xchg
mov
hlt
imull
push
push
into
mov
mov
pop
sbb
gs
and
mov
push
das
pop
mov
repnz
js
cmp
clc
fwait
in
mov
pop
sti
ja
cmp
push
in
cmp
fistpl
lock
inc
and
int3
add
shlb
leave
negl
xchg
shll
mov
and
lcall
jns
ds
mov
mov
and
jl
pop
cmp
xor
adc
jecxz
sub
xchg
inc
test
xchg
dec
loop
adc
sbb
xchg
maskmovq
testl
xlat
adc
mov
das
adc
mov
push
mov
jp
adc
pop
xor
add
and
mov
sbb
sti
sahf
popa
sub
adc
fldl
dec
sbb
test
enter
sbb
adc
xchg
orb
shrb
jbe
test
and
xor
enter
mov
and
inc
leave
add
stos
xchg
cld
jo
mov
xor
test
pop
ficompl
xchg
shrl
les
fsts
xor
mov
iret
in
cmp
leave
sahf
mov
cmpb
dec
outsb
pop
int3
out
jbe
cld
scas
cmpsl
negl
adc
inc
inc
cmpsl
lahf
sbb
jnp
mov
inc
pop
es
xor
shlb
in
test
loop
dec
add
dec
std
jg
pop
andl
mov
dec
in
addr16
xor
outsb
xchg
mov
add
inc
insl
cld
decl
inc
test
add
push
jge
ja
add
in
test
xor
add
jbe
cmp
mov
push
in
mov
or
fwait
into
dec
fcmove
jno
stos
xchg
jge
xchg
cltd
and
stos
lods
loopne
dec
pop
into
jge
ret
hlt
fbld
nop
je
mov
mov
inc
mov
xchg
mov
xchg
fwait
sbbl
inc
cld
inc
test
negl
inc
out
and
int
adc
jg
fdivs
push
jge
cmp
aas
scas
and
mov
xchg
pop
sbb
mov
pop
mov
jnp
out
ds
bound
cmc
les
and
aas
dec
lock
dec
cmp
dec
mov
jmp
mov
add
add
mulb
mov
mov
mov
stc
in
aad
mov
cmp
xchg
dec
adcl
cmp
mulb
mov
adc
das
in
es
lea
mov
ljmp
scas
pop
mov
push
lock
int
adc
sub
nop
test
adc
jg
sbb
adc
faddl
mov
xor
mov
push
sbb
mov
imul
in
inc
cmp
cmpsl
mov
test
das
test
add
xor
insb
test
mov
inc
enter
sti
mov
add
sub
data16
jo
inc
mov
mov
push
popf
push
xor
add
dec
add
insl
mov
and
push
jns
mov
mov
ss
xchg
mov
lods
sbb
xchg
stos
aad
jnp
repz
testl
popf
xor
fdiv
clc
aad
push
push
sub
aam
mov
sbbl
in
rcr
sbb
xor
repz
jg
scas
mov
mov
loop
lea
sbb
sbb
int3
sub
mov
mov
xor
pop
mov
add
cwtl
cld
xlat
cltd
scas
dec
in
xchg
js
jo
notl
rcrl
mov
mov
nop
lret
stc
out
lret
mov
xchg
pop
arpl
out
movsl
sbb
dec
jns
insb
jmp
mov
cmp
lret
test
jb
aad
out
js
xor
aas
add
fnstsw
jno
push
nop
mov
add
pop
sub
add
mulb
jae
rcrb
fstps
ds
dec
hlt
mov
cmovno
fistpl
sub
mov
cmp
popf
ss
push
push
or
pusha
aaa
push
insb
jge
in
pop
add
es
shll
enter
lahf
mov
test
mov
inc
xchg
shll
adc
mov
mov
sbb
ret
mov
ds
push
jns
or
int
xchg
mov
insl
testl
iret
jl
jo
dec
stos
xor
jg
mov
mov
mov
lds
and
mov
xchg
lods
sub
sbb
dec
stc
adc
popa
repz
or
cmp
push
in
cltd
pushf
sub
push
out
push
jbe
mov
sbb
std
ret
sahf
jl
push
or
adc
imul
into
jnp
outsb
popf
cmp
xchg
jle
sahf
stc
inc
jbe
pop
test
pop
inc
outsb
adc
inc
movsl
out
or
pop
cld
jnp
cmp
jb
into
mov
cmpsl
outsl
popf
pop
and
add
fcomi
dec
loopne
call
repz
fsubrs
pop
sbb
fists
cmp
aaa
roll
inc
adc
out
lret
adc
pop
or
mov
dec
cmp
movsl
stos
and
dec
negl
leave
xor
addb
add
add
insb
cmp
test
ljmp
subb
pop
xchg
adc
rolb
sub
cld
cmpsl
xor
sbb
mov
jl
sub
shll
xchg
repnz
sub
mov
punpckhwd
cmp
fmull
inc
lds
pop
mov
xor
or
cmpsw
cs
sbb
es
adc
or
pop
cmovge
sbb
pop
pop
insl
loop
lcall
and
adc
pop
mov
out
mov
popf
das
push
mov
or
inc
dec
adc
je
insb
xor
int3
test
adc
sub
popf
mov
xchg
std
fdivrs
fnstsw
push
jg
adc
leave
pop
gs
in
xor
andl
scas
adcl
clc
or
mov
push
rcll
addr16
pop
das
fnstcw
loopne
cld
nop
and
jp
adc
pop
gs
mov
pop
test
in
pop
repnz
mov
or
mov
lea
adc
scas
lcall
and
add
sub
jne
sub
loopne
scas
pusha
push
ja
movb
imulb
stc
loope
into
data16
or
scas
inc
push
ret
push
rclb
push
movsl
ds
push
mov
mov
and
loopne
jb
cltd
stos
or
inc
das
shrl
and
push
addr16
into
sbb
movsb
inc
dec
cmpb
hlt
popf
xchg
sub
jnp
mov
outsl
pop
dec
xlat
mov
xchg
arpl
mov
inc
pushf
in
xchg
lods
or
mov
dec
jbe
jne
mov
in
movsb
xchg
scas
shrl
pop
inc
inc
imul
or
imul
fdivr
xlat
call
lsl
outsb
int
ds
mulb
adc
push
pop
or
sbb
mov
cmp
sbb
ret
fs
push
sub
rcll
pop
jbe
cli
fsubrp
int3
cmp
sub
sub
jmp
cmp
out
dec
cmpb
sub
sub
mov
dec
mov
mov
rcr
ror
lock
pop
push
or
push
sahf
lcall
por
add
nop
mov
xor
dec
dec
sbb
xor
xchg
roll
in
iret
jbe
rorb
jnp
loopne
mov
cmc
jae
out
sarl
cmc
jo
cli
in
inc
mov
add
or
xlat
in
mov
insb
rorl
push
test
rcrb
pop
push
xchg
ret
scas
xor
push
dec
jle
xchg
adc
popl
adc
inc
dec
sbb
repnz
sub
cwtl
mov
inc
sub
mov
mov
mov
notb
and
mov
popf
repz
push
cld
add
icebp
cmpb
movsb
or
xor
mov
test
or
and
mov
fiaddl
icebp
jo
adc
out
mov
jle
and
cmp
outsl
pop
movsb
imul
loop
adc
lret
sbb
jb
and
push
loope
and
mov
mov
pop
daa
filds
push
and
sub
mov
push
out
test
adc
xor
adc
das
adc
aad
jecxz
aas
push
mov
adc
push
xor
outsb
test
or
mov
inc
fidivrs
test
xor
subl
pushf
pavgw
mov
pop
pop
and
jl
xor
push
out
in
lock
incl
cld
aam
loope
lahf
xchg
xor
popf
mov
inc
push
lds
jmp
dec
lods
or
outsl
sbb
lahf
imul
jo
inc
adc
ss
cwtl
rclb
std
lea
push
cwtl
mov
adc
or
mov
push
in
mov
test
imul
into
repz
cli
ficoms
lods
test
sahf
inc
xor
xchg
idivb
mov
inc
mov
cwtl
jb
daa
sub
xchg
jae
iret
xor
ljmp
in
push
sbb
sbb
pop
inc
mov
jns
add
aad
js
leave
pop
dec
jne
mov
sti
mov
or
dec
fildll
test
dec
cmpsl
popf
xor
xor
lcall
push
dec
add
cld
sbb
loope
jns
sti
iret
jp
ja
dec
pusha
dec
adc
inc
pop
aam
push
xchg
mov
mov
cmp
or
rcrl
mov
test
inc
popf
es
leave
or
mov
mov
psrld
pop
push
jle
rcrl
xchg
pop
push
add
enter
add
xor
jmp
adcl
lret
jae
cwtl
lea
fwait
push
dec
inc
pop
pop
cld
pusha
ja
sub
jg
cmp
inc
cli
or
pop
adc
sti
xor
jo
out
out
mov
mov
ficoml
gs
fdecstp
push
xor
loop
lcall
mov
dec
adc
push
and
test
rorb
mov
fisubrs
pop
popa
jge
std
loopne
xchg
inc
mov
mov
subl
jne
jmp
inc
out
cwtl
adc
repz
jle
les
loope
push
xor
mov
xchg
shr
enter
jmp
subb
inc
xchg
add
mov
jg
vmread
mov
imul
shl
mov
mov
adc
mov
sti
nop
pop
scas
or
jno
fmuls
mov
lea
fldln2
jg
addr16
adcl
inc
sbb
mov
dec
cmp
sahf
push
outsl
cmp
mov
cmp
or
cwtl
fstps
xchg
inc
mov
call
mov
lods
shll
fadds
cmpsl
mov
adc
sbbb
mov
push
dec
out
leave
cmpsl
xor
cmp
mov
jp
into
lahf
inc
pop
inc
xchg
dec
lret
xchg
fistpl
test
clc
push
lea
jl
insb
sub
pop
add
pop
inc
xor
fcomp
dec
out
sbb
fidivs
int3
adc
adc
add
xchg
mov
imul
sarb
aas
adc
jae
xchg
jae
sub
out
shlb
imul
jbe
lahf
push
pop
je
sbb
sub
jp
scas
push
outsl
cmp
or
out
jb
xchg
mov
pop
mov
addr16
enter
cwtl
fistps
aad
aaa
repz
jmp
jbe
xchg
pop
loope
jge
xor
imul
in
testl
adc
push
xchg
add
repnz
xor
and
in
sbb
test
xchg
rcl
jo
sub
xchg
decb
xchg
inc
cmp
mov
das
ljmp
dec
ficoml
out
adc
add
bound
add
lods
stc
inc
std
and
in
out
mov
xlat
lahf
mov
dec
cld
jg
fldenv
ja
dec
or
pop
iret
and
xchg
xchg
inc
push
pop
push
push
mov
jnp
rol
lds
xor
mov
enter
bound
negb
loopne
out
inc
fsubr
movsb
pop
pop
or
add
lods
inc
test
add
jge
xor
test
inc
cmc
sbb
sbb
add
sub
outsb
repz
push
mov
adc
xor
xor
and
outsb
jl
ret
or
sbb
xor
cmc
xchg
add
loop
jmp
inc
jbe
sbb
iret
cmp
int
das
dec
add
movsl
dec
insl
nop
mov
adc
iret
insl
testl
les
je
pop
cmp
and
adc
jmp
inc
ss
test
cmp
lret
cmpl
pop
leave
adc
jp
sbb
in
and
add
mulb
mov
dec
cmp
js
or
push
ss
xchg
mov
popf
jp
push
or
jle
outsl
dec
sub
push
imul
pushf
lds
jl
mov
sbb
sarb
inc
lahf
dec
dec
dec
sub
clc
cs
rcll
mov
cmp
sbb
and
or
and
out
mov
pop
mov
aam
lea
lret
cmc
mov
mov
addb
roll
cmp
pop
adc
mov
jmp
pushf
rorl
jg
cmp
ret
mov
lods
scas
je
rcl
mov
push
mov
test
jge
sub
sub
fistl
in
push
stos
test
push
inc
ret
and
outsl
insb
mov
push
js
push
cmp
pusha
add
rcrb
jae
mov
pop
mov
sbb
push
dec
xchg
lea
xorl
scas
aam
push
mov
and
pop
sbb
pop
addb
dec
dec
or
out
inc
scas
gs
mov
das
or
and
mulb
aad
pusha
pop
test
imul
dec
mov
scas
push
cli
xor
push
fldcw
out
mov
out
lock
fbld
lods
push
hlt
mov
rolb
or
test
mov
stos
leave
sbb
pusha
mov
cmp
push
js
lock
das
mov
mov
xchg
sub
mov
sbb
cmpsb
dec
dec
popa
out
sbb
ljmp
jg
rol
out
sbb
dec
dec
in
inc
cltd
adc
arpl
aad
pop
arpl
jle
ss
xchg
cmp
jbe
xor
mov
fisubrs
xor
sbb
mov
insb
jae
sub
xchg
ds
call
mov
scas
xchg
dec
mov
dec
cmp
sub
adc
ss
fistps
ficompl
sub
lods
jb
fstpt
or
sbb
xchg
cmp
lahf
ja
sub
lds
adc
pop
test
sub
pop
out
stos
xor
pop
xchg
or
push
mov
xchg
fwait
mov
lret
mov
popw
fisttps
dec
scas
adc
pushf
mov
stos
leave
cwtl
in
dec
mov
xchg
dec
mov
cmp
mov
and
inc
pop
xchg
xor
mov
xchg
pop
fisubs
in
jge
ss
cmp
dec
add
add
and
xchg
ret
fstl
cld
lahf
dec
out
add
jle
iret
mov
mov
mov
into
pop
push
cs
or
mov
push
shrb
sbb
out
lret
inc
pop
mov
mov
or
aas
std
push
pop
mov
int3
mov
iret
and
dec
mov
dec
popf
fidivrl
xchg
xorb
lret
mov
dec
ds
inc
cs
das
xchg
mov
mov
pushf
pushf
mov
movsb
sbb
loop
xor
inc
dec
push
xchg
xorl
test
push
aam
cmpsl
jns
jmp
and
lods
ss
dec
dec
cmp
js
and
mov
repnz
bound
push
fmul
pop
adcl
int3
sahf
jbe
push
loop
lret
add
xchg
insl
popa
push
js
cs
pushf
js
add
fiadds
adc
mov
aaa
in
inc
rcrl
popa
out
test
inc
lds
push
int3
cmc
int3
ret
mov
mov
dec
xor
call
int3
out
std
dec
in
js
aas
loop
xchg
mov
clc
out
stos
sahf
pop
jne
lcall
popf
sub
push
jl
scas
cmp
sub
sbb
dec
daa
movsb
dec
lds
jle
andb
aas
push
sarb
add
inc
add
cmp
das
pushf
xchg
cmp
sub
or
jmp
in
test
lds
jecxz
leave
bound
fldcw
push
sti
mov
fisubs
xchg
nop
clc
mov
mov
jnp
push
fiadds
stos
mov
loop
pop
xor
mov
jmp
adc
cs
hlt
xlat
dec
gs
ss
aam
mov
pop
adc
add
movb
dec
jg
or
pop
pop
mov
mov
ror
pushf
inc
jge
hlt
ljmp
mov
or
adcb
nop
pop
mov
and
jle
ret
xchg
cmp
pop
xchg
mov
add
nop
push
xor
mov
in
je
repnz
jnp
ffreep
cmp
mov
das
inc
push
mov
popa
sub
test
stc
adc
out
cmc
push
xchg
in
sbb
sub
cltd
lock
les
leave
movsb
sti
ret
inc
mov
dec
add
push
stos
call
xor
aaa
sub
mov
push
ret
mov
cmp
push
pop
shr
js
push
inc
mov
cmpsb
adc
xor
hlt
inc
xor
movups
sub
jbe
sbb
mov
sub
or
jnp
mov
or
mov
and
je
dec
sbb
fsubr
add
lret
fcmovne
dec
or
pop
xchg
fisttpll
inc
push
push
add
lret
imul
fsubr
dec
gs
mov
sub
mov
pop
adc
out
xchg
mov
lcall
jg
push
add
xor
ret
shrl
pop
cwtl
popa
test
shll
adc
mov
xchg
ret
scas
jg
sti
pop
out
push
inc
inc
arpl
andb
push
adc
xorl
inc
pop
pop
popf
sti
mov
sahf
push
mov
add
imul
sbb
xchg
es
mov
sbb
rclb
xor
mov
imul
js
add
push
add
cmpsl
adc
negl
imul
lods
sarb
rorb
mov
inc
loopne
inc
lcall
cli
pop
jnp
pushf
pop
push
push
mov
dec
jbe
and
cmp
in
xchg
inc
jl
cwtl
sbb
lahf
push
push
xlat
jp
inc
push
hlt
inc
push
sub
jo
adc
in
sbb
or
call
cwtl
inc
lret
lcall
sub
adc
mov
bound
pushf
push
mov
imul
mov
inc
dec
mov
mov
repz
ja
push
pushf
xchg
shll
xchg
and
int3
or
jmp
xchg
pop
adc
inc
pop
or
ret
xchg
arpl
ret
aaa
push
adcl
icebp
js
xchg
inc
pop
mov
inc
ljmp
and
mov
dec
test
mov
ss
xchg
cmp
cli
adc
dec
mov
mov
mov
and
sub
mov
xchg
addr16
inc
mov
and
xchg
lret
mov
pop
rcrb
dec
pop
jl
packsswb
sbb
mov
cmp
shlb
repz
pop
out
jg,pt
dec
jb
or
sub
fadds
jl
dec
shll
loop
les
xchg
inc
xchg
stos
lahf
mov
cmp
shlb
dec
roll
aaa
jbe
sub
inc
aad
xchg
clc
sub
jp
pop
sti
rcll
adc
popf
jae
mov
mov
int3
dec
gs
ret
jns
inc
test
imul
adc
fldenv
mov
inc
pop
jle
sti
mov
mov
int3
jl
pop
cmp
jle
pop
mov
dec
push
push
jl
cs
xor
dec
test
jl
insb
mov
aad
pop
mov
pop
adc
jns
dec
and
std
jecxz
lahf
sub
pop
or
pop
pop
pop
jb
sahf
into
sub
add
adc
inc
in
mov
mov
sub
bound
mov
in
aam
mov
xchg
jns
pop
lret
jbe
fnstenv
mov
adc
xlat
lahf
sub
or
data16
cmp
pop
adc
pop
mov
ja
xchg
adc
sub
testl
jne
sub
movsl
aam
add
inc
hlt
push
adc
mov
inc
bnd
sub
cmp
pop
loope
dec
bound
je
lds
movsb
in
ret
push
xchg
cmp
mov
cmpsl
stos
cmp
xchg
icebp
jae
es
inc
mov
pop
and
add
fidivs
xchg
negl
jecxz
mov
xor
cmp
jno
pop
push
xchg
inc
in
mov
icebp
icebp
lods
push
popa
pop
push
fcoml
arpl
mov
push
movb
movsl
sub
rorb
and
add
dec
xlat
ja
mov
movsb
xchg
cmpb
and
fsubr
dec
ret
xor
and
cld
or
loopne
lock
mov
push
push
add
icebp
popf
xor
pop
and
out
mov
rcrl
cmp
fxam
adc
pop
les
mov
out
adc
inc
sbb
jns
inc
fldcw
aaa
loopne
test
push
nop
dec
aaa
sbb
faddl
pop
jno
add
test
pop
mov
jmp
fdivrs
sti
sub
aad
pop
ret
dec
fdivr
cmp
add
pop
test
fmull
test
add
push
std
xchg
xorl
add
aad
lret
fs
in
and
loop
aaa
mov
rcr
jbe
pop
mov
fnstsw
xor
xchg
out
mov
mov
in
sub
dec
adc
cmp
popl
jne
fidivrl
clc
cld
movsl
into
sub
adc
dec
inc
push
mov
out
daa
lahf
xchg
and
gs
xchg
icebp
add
jp
push
pop
mov
or
xchg
arpl
lahf
sbbl
xor
push
fdivrl
ror
xchg
pop
test
cmpsb
sub
xchg
mov
out
stos
add
sbb
stos
into
push
push
push
mov
mov
xor
out
push
sub
ret
fwait
lock
inc
lds
rclb
cmpsl
xchg
imul
rol
stc
cld
mul
mov
inc
or
xor
dec
xor
mov
repz
xchg
pop
mov
push
xchg
addr16
inc
imul
sbb
shlb
mov
dec
and
mov
dec
mov
loop,pt
add
popa
jb
js
enter
stos
mov
add
out
insl
call
lds
test
adc
dec
subl
outsb
mov
testl
loopne
mov
shr
mov
cld
or
xchg
arpl
jb
dec
mov
cmpsb
and
movsb
dec
adc
xchg
dec
sbb
sub
or
jne
mov
bound
dec
in
int
jae
in
mov
lock
sub
jge
lea
mov
inc
lods
mov
push
sbb
cld
icebp
push
or
mov
ficompl
sub
dec
loop
mov
cmpl
mov
filds
dec
cld
pop
push
roll
push
pushf
jmp
cli
jl
xor
pusha
xchg
daa
sti
movsb
frstor
fdivrl
es
rcll
and
packssdw
or
loop
sbb
cmp
clc
lock
push
mov
enter
in
inc
aam
stos
xchg
aaa
mov
mov
dec
sbb
mov
stos
push
adc
mov
push
ror
fnstenv
pushf
inc
add
pop
sbb
mov
push
in
sbb
repnz
jbe
or
sti
clc
cmp
pop
fldenv
test
into
pop
pop
movsb
jno
push
sahf
bound
dec
xor
cmp
or
or
xor
xor
inc
cld
cmp
sub
lds
flds
adc
or
dec
or
add
mov
shl
insb
sbb
sbb
lea
fstpl
sbbl
in
roll
xchg
xor
decw
fists
outsb
inc
or
in
or
sbb
pop
xchg
out
rcl
sbb
adc
jmp
xchg
sbb
xchg
dec
iret
push
inc
mov
push
dec
adc
sub
xlat
test
push
xor
xor
sub
add
and
inc
jp
fsub
xor
loope
int3
xor
cmp
les
outsb
lods
rcrl
mov
lds
jbe
mov
cmc
xchg
test
test
enter
sahf
inc
xchg
shll
cltd
push
xor
xchg
fisubrs
mov
and
xchg
mov
jbe
fistpl
pop
sbb
mov
icebp
push
ljmp
and
cmp
ret
dec
xchg
lea
loop
jnp
mov
inc
or
clc
in
jne
mov
ljmp
mov
mov
xor
mov
sahf
cmp
jecxz
cli
adc
shll
mov
rcrb
decl
jl
dec
call
notl
adc
vmwrite
push
out
add
jg
push
dec
icebp
movsl
ds
add
sbb
rcrb
out
pop
adc
and
mov
leave
imul
movsl
adc
jnp
subl
icebp
xorl
call
ficomps
aas
out
dec
adc
faddl
ret
jmp
push
sub
test
jae
in
pushf
xor
in
jns
jo
bound
out
aam
mov
cmpsl
in
fiadds
in
loope
test
cltd
andl
rclb
cmp
and
xchg
inc
call
jmp
inc
add
leave
lret
dec
int3
push
fs
sbb
sub
jo
pop
call
loopne
repz
aaa
es
add
push
and
adc
out
data16
xor
aam
mov
fwait
dec
cmp
jo
mov
xchg
sti
adc
subl
add
cmpb
pop
mov
cld
jnp
pop
out
sbbb
lods
jg
pop
and
pop
fucomp
ret
loope
dec
inc
mov
arpl
out
enter
and
mov
sub
lds
leave
sbb
fistpll
cmp
aam
imul
icebp
cmp
cmpsb
or
dec
mov
lock
mov
push
and
cmp
aas
in
mov
inc
pop
mov
outsl
pop
push
pop
jge
in
mov
pop
pop
lock
mov
pop
into
sub
pusha
sub
lret
popa
jae
xchg
adc
cli
jae
aad
dec
mov
or
scas
mov
cmpsb
jbe
adc
xchg
iret
ret
mov
pop
notl
adc
pop
iret
push
dec
or
stc
int3
jo
aad
xor
sete
shll
lret
ljmp
arpl
ret
sti
mov
dec
push
subb
fsubrs
mov
stos
or
adc
mov
cmp
mov
dec
repnz
xchg
xor
push
add
lods
mov
inc
lods
sti
xchg
fistpl
xchg
ficompl
cmc
or
cmp
inc
sbb
ss
mov
xchg
or
jecxz
xor
out
pop
out
sbb
cmp
inc
pop
dec
xor
mov
dec
cmp
sarb
ja
dec
std
movb
pop
icebp
mov
and
clc
es
pop
cmp
fisubrs
sub
das
cmp
ret
inc
hlt
xchg
fwait
xchg
loope
fisttpll
xchg
daa
mov
mov
push
add
push
sti
xchg
sbb
fwait
add
test
data16
in
inc
push
aaa
mov
jne
ss
xor
stos
push
in
std
out
sbb
push
imul
sbb
test
insb
int3
jle
gs
xchg
lods
bound
jb
cmp
test
sbb
lret
adc
hlt
and
mov
pop
adc
clc
mov
pop
push
sub
into
sbb
in
out
jnp
cmpsb
lahf
into
sub
push
aam
into
imul
sub
subb
idivb
or
mov
nop
push
xchg
fmull
testl
lret
push
adc
mov
stos
sbb
sar
arpl
jg
mov
pop
mov
dec
data16
rcrb
dec
sub
iret
aad
jae
jmp
push
xor
notl
jmp
push
test
xor
mov
pushl
mov
fwait
add
adc
cs
xchg
test
test
mov
add
pop
loop
pop
daa
ja
xor
and
xor
sub
loope
mov
jle
lds
movsl
stos
mov
mov
jno
inc
sbb
scas
mov
mov
ljmp
inc
inc
out
mov
xchg
dec
insl
push
fs
dec
cmp
xchg
pop
and
xchg
mov
sbb
and
lahf
sub
adc
mov
cmp
jle
dec
xchg
or
cmpsb
cmp
in
setne
std
jno
and
mov
inc
hlt
push
or
add
jo
mov
cld
nop
inc
adc
cmpsl
pop
stc
sahf
xor
or
and
xchg
jmp
dec
add
dec
fnstsw
dec
dec
loopne
das
insl
inc
push
enter
sub
insl
mov
sbb
loope
arpl
xlat
add
xchg
mov
push
mov
xlat
movsl
std
gs
lcall
xchg
arpl
push
mov
mov
fidivl
sbb
sti
aad
out
lods
sti
popf
lcall
js
push
inc
mov
lret
ret
insb
sub
pop
lods
jae
xchg
movsb
lods
inc
cmp
into
out
sbb
cmp
mov
and
jle
inc
lock
or
inc
xor
and
cmp
repnz
dec
mov
mov
xchg
xor
ret
rorl
ret
add
fildll
and
fcoml
push
mov
or
jge
ret
dec
adc
xchg
imul
lods
addr16
xor
mov
stos
es
inc
sub
mov
add
push
jmp
shlb
mov
dec
mov
inc
jg
int
lahf
sub
mov
xchg
shr
push
add
outsl
fcoms
push
jno
mov
mov
sti
daa
aas
cmc
sub
data16
dec
loop
hlt
aam
pushf
pop
mov
or
cmpl
jmp
cli
mov
push
push
cmp
pop
out
sub
dec
cwtl
out
xchg
push
mov
addr16
out
movsl
pop
rcll
insl
jne
loope
test
data16
xchg
pop
scas
mov
lock
test
cmp
or
je
xchg
sub
aas
clc
lahf
mov
push
fists
adc
rcrb
xchg
mov
xor
mov
pop
fstps
subb
std
imul
pop
addl
inc
test
rol
pop
push
xor
test
push
jns
addr16
mov
iret
icebp
jp
loop
dec
pop
mov
pushf
cs
mov
cs
mov
movsl
outsb
mov
dec
ret
dec
mov
adc
inc
fnsave
pop
ds
push
es
jne
popa
pop
cli
test
or
xor
out
loope
subb
push
hlt
sbb
push
cmp
mov
mov
das
xor
mov
mov
xor
add
cmc
or
mov
jle
cmpsl
mov
inc
mov
mov
xchg
cli
adc
dec
addr16
imul
aam
jnp
pop
hlt
jbe
xor
push
nop
mov
push
nop
imul
insl
std
je
mov
push
cmpsl
mov
cmp
jns
xchg
stos
pop
insl
or
fidivs
out
andl
jnp
fwait
xchg
mov
jnp
push
mov
xor
js
dec
iret
fimuls
rorl
adc
out
aad
sub
sbb
and
push
es
xlat
pop
xchg
lods
jmp
inc
push
loopne
stc
std
dec
rol
loop
push
ss
scas
push
add
push
push
cmp
pop
jp,pt
sbb
inc
mov
jecxz
stc
hlt
cmp
lods
mov
cwtl
xchg
call
mov
stos
shll
push
or
xorl
fcoml
movl
insb
fildll
cltd
or
bound
repz
push
sbb
fistps
xor
sbb
fistpll
push
push
insl
lret
in
fadd
aaa
dec
movsl
mov
shrb
loopne
mov
iret
insb
in
insb
cmp
sub
imul
rclb
xchg
jnp
rclb
sti
inc
ds
in
push
imul
bound
dec
adcl
push
cmp
cmp
mov
mov
lret
test
xchg
mov
or
in
subb
push
mov
dec
leave
adc
adc
in
mov
or
cmp
movsl
pop
push
pop
push
jns
data16
rcll
mov
push
jmp
shl
rcrl
popa
push
inc
js
popf
inc
dec
jp
mov
insl
lods
pop
jmp
lretw
jae
insb
mov
mov
cli
jb
pop
in
inc
sbb
ss
fcompl
ret
sub
adc
inc
jo
mov
mov
cmpsl
jg
fcmove
cwtl
pop
and
jae
add
scas
mov
outsl
push
rorl
lcall
cmp
or
in
jb
cwtl
rol
mov
and
xorl
leave
shrl
fmul
sub
mov
or
sub
scas
ljmp
fiadds
fsubl
stc
pop
push
mov
push
das
mov
aad
adc
icebp
aad
cs
mov
inc
leave
fnstcw
aas
movsb
pop
aas
jp
pop
jmp
das
mov
or
outsb
rcrl
fisubs
and
cli
jns
xchg
in
dec
test
sbb
loope
cltd
ljmp
jb
aaa
pop
loop
inc
imul
sub
pusha
ja
jae
sub
mov
icebp
push
add
mov
lods
and
dec
inc
xchg
loope
push
sbb
jae
jmp
xchg
fisubrl
cmpsl
adc
subb
cmpsl
ja
cmpsl
test
add
xor
adc
ss
jge
xchg
mov
xchg
sbb
rolb
pop
movsl
mov
add
push
push
push
cmc
mov
adc
dec
dec
jbe
nop
mov
rol
adc
testl
shrb
and
mov
xchg
icebp
xor
movsb
and
mov
loopne
push
xchg
mov
jge,pt
and
push
sub
and
cmpb
cmpsl
in
dec
or
fs
add
out
push
or
mov
mov
sub
ret
repnz
daa
mov
ljmp
xchg
or
mov
cli
inc
inc
adc
pop
xor
int
sbb
or
mov
lret
cmp
jns
add
cmpsl
dec
or
jl
dec
pop
or
pop
push
adc
subb
sub
into
xchg
test
adc
pusha
and
inc
daa
out
cmpsl
pop
arpl
pop
dec
repnz
jae
lds
scas
sbb
icebp
icebp
cltd
ret
push
xor
fs
negl
sub
rcrl
subb
sarb
jae
and
setl
mov
add
jb
xchg
cld
cmpsl
push
inc
dec
test
adc
inc
pop
outsl
ljmp
push
sub
jnp
pop
mov
stos
cmp
jge
xchg
pop
jae
ret
icebp
fisubrs
or
push
mov
mov
mov
int3
shlb
sbb
sbb
ret
mov
sub
mov
aad
dec
fnstenv
insl
pop
cmp
dec
jg
scas
shlb
jo
sub
mov
pop
xor
dec
xor
imul
mov
xchg
loope
or
fs
idivb
idivl
add
inc
push
enter
dec
inc
lret
orl
xor
jge
ret
dec
test
inc
call
mov
fbstp
into
sub
out
push
je
sbb
ret
cwtl
inc
out
outsl
lea
mov
stos
test
fsub
inc
lcall
ret
and
xchg
cltd
cmpsb
xor
push
mov
call
fidivrl
ds
enter
outsb
xor
shrl
push
hlt
pop
shrl
icebp
cmp
cld
jo
cmp
sub
or
out
test
xchg
push
in
icebp
push
pop
jmp
popf
aad
aas
push
inc
mov
push
jmp
push
fadd
roll
shlb
cld
cmp
pop
gs
add
inc
pop
std
pop
enter
out
call
and
mov
pop
mov
icebp
push
call
sarb
mov
add
push
pop
popf
jnp
dec
pop
fstps
push
clc
and
pop
mov
iret
cmp
or
test
mov
testb
test
gs
and
in
jno
shrl
adc
xlat
dec
imul
jge
inc
es
into
insb
lret
xlat
in
cwtl
mov
mov
inc
cwtl
xchg
cmc
ds
bound
aad
popa
pop
sbb
inc
or
sub
xor
cmpsl
sahf
xor
dec
mov
jns
dec
push
add
lds
jbe
sub
pop
jb
fidivrl
mov
test
stos
mov
xchg
mov
popa
xchg
or
rolb
or
adc
mov
and
fiadds
sbbb
outsl
pushf
leave
inc
js
or
sub
ficompl
inc
out
sahf
mov
jg
add
imul
adc
push
fwait
mov
movsl
push
es
fstpl
movsb
mov
daa
dec
mov
nop
stos
aam
sbb
sahf
leave
inc
jns
ds
movsl
in
dec
outsl
or
test
hlt
mov
adc
pusha
push
ja
push
aad
pop
pop
pusha
xchg
jo
call
push
pushf
nop
hlt
out
dec
cmpsl
je
in
aas
fisttps
jmp
notl
jl
sbb
pop
add
xor
and
leave
add
sbb
lods
dec
bound
and
movups
add
shlb
pushw
lods
orl
into
lahf
mov
mov
sub
jae
imul
negb
lock
lods
mov
imul
fs
pusha
sbb
aas
lret
dec
mov
pushf
push
ret
cmp
sbb
mov
cmp
pop
push
sub
cmp
cli
mov
sahf
rorb
and
lods
xchg
and
xorb
inc
cmp
iret
les
mov
push
into
movsb
icebp
push
dec
and
sbb
inc
jmp
jno
push
and
dec
xchg
jl
mov
mov
dec
addr16
mov
mov
mov
movsl
scas
scas
out
mov
dec
sbb
push
adc
sub
add
xor
inc
daa
repz
aaa
inc
loope
xchg
inc
or
mov
cmp
jns
ljmp
push
xchg
jno
push
lahf
mov
push
mov
mov
inc
sbb
push
jl
push
out
insb
int
or
lock
mov
insb
xchg
inc
mov
add
dec
push
pop
fdivs
push
iret
pop
mov
sbb
mov
inc
inc
sahf
int
hlt
insl
pushf
jmp
jg
icebp
xor
imul
notb
mov
sub
pop
aad
imul
pop
fmul
fst
or
push
jmp
jl
out
outsb
jns
cmpsb
add
in
jo
je
cwtl
in
in
mov
lods
xor
mov
mov
sbb
mov
sub
and
jb
mov
pop
hlt
mov
or
jo
es
adc
les
dec
pusha
negl
push
sub
mov
sbb
inc
cld
out
out
addl
sbb
loop
jmp
lock
leave
out
dec
sbb
pop
jg
int
inc
repz
pop
adc
xchg
orl
cmc
bound
dec
inc
mov
sbb
inc
inc
sbb
pusha
insb
clc
lret
test
stos
inc
adc
fists
lret
test
lret
aam
dec
sub
xor
jno
inc
stos
out
test
and
lret
rclb
xchg
push
inc
pop
movsl
ret
push
xchg
repnz
add
jecxz
jl
jmp
dec
mov
mov
pusha
xchg
mov
mov
push
adc
dec
call
incl
in
push
xor
pop
test
push
call
pop
and
ret
dec
xorl
leave
sbb
fidivrl
xorb
call
adc
mov
sahf
es
cmp
pop
ljmp
dec
jnp
mov
dec
add
cmp
int
imul
dec
pop
inc
pop
das
lcall
iret
xchg
pop
jl
enter
cmp
stos
in
nop
js
jbe
icebp
imul
xlat
mov
cmp
sub
or
ja
es
outsl
jg
ret
dec
icebp
or
mov
clc
xchg
enter
arpl
mov
xchg
idivl
pop
mov
icebp
or
subb
mov
call
add
aas
movsl
pop
jo
mov
call
in
inc
jmp
mov
mov
ds
out
icebp
hlt
pusha
scas
mov
mov
dec
pop
or
sbb
into
into
loope
jmp
cmp
and
xchg
aas
xchg
or
nopl
jmp
mov
or
sti
push
loope
xor
and
mov
rcll
xchg
dec
mov
add
push
cmp
inc
ljmp
cmp
xchg
or
faddl
or
mov
fldt
fidivs
je
jmp
imul
jno
sbb
pop
cmp
lahf
in
in
or
adc
mov
add
mov
mov
lock
jmp
mov
mov
pop
jns
dec
clc
mov
or
push
fmuls
xor
bnd
das
shlb
jo
cld
xor
push
sbb
and
adc
stos
xor
repnz
mov
inc
addr16
ds
gs
mov
add
xchg
std
jle
scas
push
pop
femms
inc
fistps
mov
pop
pushf
out
sbb
xchg
daa
loop
aaa
dec
or
mov
jl
jmp
mov
cmp
adc
in
cltd
test
mov
push
and
into
hlt
dec
pushf
cwtl
cmp
pop
push
fwait
cmp
mov
sub
fistpll
lock
pop
outsl
inc
adc
mov
lret
repz
loope
fnstenv
icebp
popf
repz
xchg
in
push
pop
loop
test
lret
orb
aas
mov
cltd
aas
jle
xor
call
pop
jg
fstps
lret
int3
cli
fisttpll
frstor
inc
cmp
shlb
les
pop
cmpsb
fistpl
dec
dec
icebp
pop
mov
mov
add
icebp
inc
dec
cmp
xchg
xchg
adc
imul
dec
and
mov
mov
pop
lret
add
dec
ss
adc
lods
or
stos
filds
fldenv
pop
mov
into
inc
push
call
es
leave
sbb
jmp
lcall
cmpsl
mov
idivb
xor
movsl
inc
jp
test
fsubrp
mov
lahf
pop
pop
add
pop
cmpsl
sbb
add
or
push
pushf
lock
xlat
orb
cli
xchg
xchg
fidivrs
dec
nop
push
push
movsl
push
mov
aas
ja
pop
xchg
ret
jl
push
lret
pop
bound
notb
pop
fwait
cmpsl
ficomps
test
xor
rorb
cltd
lds
lret
mov
xchg
fstl
xor
stos
jne
or
jb
cli
ds
xor
imul
mov
or
sub
cld
test
push
pop
or
mov
adc
mov
and
mov
mov
sbb
in
sbb
push
or
and
lods
pop
xor
mov
cmp
cmp
and
sub
test
sub
repz
mov
outsl
lds
outsl
daa
je
mov
iret
xchg
xchg
jnp
sub
cmp
inc
jp
xor
pop
xchg
iret
insl
ss
into
cmpsl
sarb
ficoml
mov
aas
sti
xlat
rolb
jmp
lods
xchg
insb
xor
mov
stos
jns
gs
mov
pushf
jmp
xchg
xlat
xchg
in
out
lods
push
pop
cmp
mov
and
xor
sub
lds
or
mov
and
push
xor
loope
xor
movsb
jl
jbe
scas
bound
and
jne
xchg
cmp
or
sub
or
sbb
jle
lds
dec
or
jle
addr16
mov
mov
sbb
mov
inc
repnz
push
loopne
les
add
jmp
js
cwtl
sbb
stos
adc
dec
mov
mov
sti
rcr
fldln2
in
popf
arpl
mov
dec
mov
add
orb
push
add
jge
pop
pop
adc
out
add
or
add
in
cltd
sbb
jecxz
fs
sub
inc
insl
fildl
call
mov
mov
mov
xorb
bound
stos
cmp
es
fmul
mov
ljmp
dec
xor
das
ss
sub
mov
adc
scas
add
scas
sti
fsubs
xchg
add
inc
cmc
int
cltd
cltd
stos
notl
xor
mov
pop
xor
push
inc
and
aad
outsl
inc
add
xchg
lock
jne
incl
push
jle
movsb
push
stc
and
leave
out
mov
cmpsl
push
inc
cmp
iret
cwtl
insl
xor
sub
xchg
mov
pop
inc
adc
bound
xchg
mov
pop
xchg
push
icebp
loop
adc
lcall
or
xor
pop
jge
push
insb
fdivr
pop
mov
dec
inc
mov
jne
dec
divb
orb
testl
sub
into
fisubl
dec
mov
or
push
pop
adc
mov
cmc
cmovbe
xchg
push
idiv
or
inc
cmp
pop
cmc
test
mov
flds
pushf
lret
and
add
mov
fwait
scas
sbb
incl
jg
inc
sub
mov
jnp
roll
dec
or
xchg
sti
call
stc
mov
rcrl
emms
movb
jecxz
nop
sub
cs
inc
rorl
sub
inc
sub
das
and
cmc
test
dec
fnsave
lahf
fisubrs
pop
jae
fnstsw
mov
lods
out
jno
scas
lahf
cmp
addl
scas
std
test
dec
mov
xlat
in
push
incl
cmp
cmpl
mov
scas
cmpl
sti
stos
movsl
lret
loopne
test
insb
mov
fisttps
mov
cltd
mov
stc
lret
decl
je
scas
and
pushf
dec
icebp
dec
mov
jnp
arpl
pop
dec
pop
push
cmpsb
clc
xlat
push
jecxz
dec
pop
cmp
lds
icebp
mov
push
jo
mov
jns
cmp
jle
sti
lret
enter
cli
mov
push
hlt
cwtl
xor
dec
xchg
std
push
imul
or
push
mov
pop
jnp
js
or
cmpsl
cmp
cli
fcoms
inc
dec
xor
mov
scas
mov
mov
sbb
xor
xchg
sbb
inc
push
ljmp
sarb
ret
int3
xchg
dec
insl
mov
fildll
sahf
pusha
sti
in
jb
mov
rolb
jno
fs
mov
sbb
add
or
push
or
shl
inc
mov
bound
cwtl
push
enter
leave
mov
dec
stos
cmp
mov
and
out
pop
dec
popf
xchg
cmp
lods
cwtl
pop
pop
pop
xchg
mov
push
add
jl
fs
jl
scas
jge
ret
jbe
xchg
adc
xchg
pop
mov
mov
push
adc
lock
sub
js
jae
mov
cmpsb
setle
adc
pop
fistpl
fisttps
sub
pop
inc
pop
dec
sbb
stos
mov
sbb
scas
or
adc
loopne
jle
add
mov
mov
fdiv
repnz
pushf
adc
push
adcb
and
lcall
subl
negb
aam
dec
outsl
imul
mov
sbb
dec
cwtl
in
jb
into
stos
or
sbb
ljmp
test
add
pop
lods
aad
xchg
jno
or
int3
push
mov
mov
in
test
ret
or
add
sub
lea
lcall
xchg
push
sub
xchg
add
xor
arpl
or
mov
call
icebp
out
add
shl
shrb
cmp
or
adc
xchg
jnp
sub
jp
xchg
mov
sti
test
mov
test
std
pop
nop
xor
mov
ja
icebp
sub
outsl
test
add
mov
les
pop
cli
mov
cmpsl
insb
ret
dec
mov
test
mov
movsb
or
repz
insb
inc
mov
push
stos
pop
jo
js
push
sub
push
pop
in
bound
adc
ljmp
push
fwait
pop
rcrl
iret
jmp
cmp
shll
addr16
sub
cmp
inc
out
data16
pop
jnp
insl
xchg
dec
pop
push
call
push
in
leave
stos
dec
add
xor
sbb
push
jl
in
xor
in
cmpb
mov
push
xor
sbb
repz
sub
inc
cmp
stc
aaa
xlat
jno
test
out
lret
or
mov
in
out
mov
ja
call
sbb
xlat
pop
mov
dec
dec
rolb
scas
ficomps
test
nop
and
adc
add
mov
adc
add
sub
adc
mov
add
pop
lods
add
mov
test
add
mov
sbb
adc
mov
lea
xchg
lea
add
dec
mov
push
enter
dec
out
or
lahf
icebp
xchg
mov
in
mov
aaa
jg
push
push
xchg
cmp
xchg
icebp
jp
loop
pop
test
sub
dec
dec
ss
sub
dec
in
inc
test
int3
idivb
adc
push
mov
sub
ss
in
mov
xlat
xor
inc
jg
and
std
lcall
nop
lret
addr16
pushf
and
mov
lea
fstpl
rorl
lods
xchg
xor
adc
fisubs
xchg
leave
paddsw
fwait
mov
push
in
or
or
inc
push
sbb
and
sub
add
push
push
das
rorb
mov
aam
or
int
sahf
add
shll
dec
jb
bndldx
sbb
iret
scas
ret
movsl
es
mov
xchg
dec
repz
pop
jnp
mov
test
jno
jge
sub
and
pop
adc
mov
push
or
sbb
je
lods
xchg
mov
insl
in
jne
outsb
scas
mov
aas
das
cmpsl
lock
inc
out
daa
in
inc
jp
push
and
repz
and
fisttps
andl
cmpl
ucomiss
sbb
sahf
push
dec
shrb
negl
jnp
sti
rclb
in
mov
adc
and
jae
shr
adc
mov
in
pop
or
iret
jo
int
orl
fadds
popa
xlat
daa
inc
xor
dec
sbb
add
jno
xchg
shll
sti
dec
push
cmp
scas
xor
sub
mov
dec
sbbb
push
jmp
out
mov
mov
cltd
ja
arpl
lods
jmp
lods
ss
shlb
inc
adc
mov
mov
push
mov
lret
out
int3
adc
dec
and
cmpb
mov
das
aad
sbbl
test
loop
mov
in
sub
jno
inc
mov
lret
and
sbb
and
xor
push
cmp
or
or
test
test
loop
adc
shrl
aam
or
clc
jmp
push
stc
and
mov
in
mov
mov
or
out
sbb
pop
cmp
fidivl
mov
sub
inc
dec
push
xor
and
mov
lret
jl
sub
incl
adc
mov
cmc
jecxz
pop
xor
aas
mov
mov
js
jne
xor
xchg
lock
in
in
mov
leave
out
aad
xor
ficompl
repz
mov
mov
insl
mov
rcrb
mov
jmp
mov
mov
pop
test
jp
ds
stos
add
push
inc
fdivs
jno
cmp
sbb
cltd
repnz
inc
pop
inc
sbb
rcrl
negb
addr16
test
mov
jmp
stc
dec
push
filds
mov
pop
xor
movsb
pop
lods
pop
pop
push
rorb
pop
in
setae
loope
cmc
jns
xor
mov
sahf
jne
notb
push
insl
aam
push
imul
jo
mov
imul
int3
mov
push
and
jg
aam
adc
pop
cld
fcmovbe
sub
mov
xchg
out
std
cmpsl
xchg
hlt
fdivl
xchg
in
insb
sbb
pusha
icebp
sarl
cli
jbe
out
lcall
jae
push
fcmove
mov
cmp
fs
mov
pop
movsb
pop
stos
aaa
lret
inc
mov
push
add
mov
mov
pop
jg
xor
test
dec
scas
dec
xor
lret
push
mov
jbe
and
aas
push
lcall
dec
sti
test
data16
push
sub
pop
or
push
jae
sbb
movsl
push
mov
icebp
jp
dec
add
dec
and
lods
stos
mov
mov
pop
cwtl
xor
adc
ljmp
dec
call
sub
jle
cmp
push
pushl
jge
pusha
bound
je
shll
xchg
add
popa
insl
adc
loopne
or
lcall
lcall
mov
in
aaa
push
xchg
mov
push
inc
cld
mov
mov
nop
sub
jns
jbe
add
imul
dec
push
idivb
dec
xor
push
and
dec
lea
jmp
enter
jne
test
ds
jp
xchg
int
push
pop
out
repz
xchg
jp
jmp
sahf
dec
out
lods
dec
fcoms
cmp
out
mov
data16
pop
pop
fmul
dec
jge
push
loope
out
je
mov
in
idiv
loopne
push
adc
sbb
jle
mov
cmpsl
aam
xchg
ja
outsl
add
shrl
sahf
xor
jns
jg
lods
push
in
jne
jbe
stc
xchg
add
sti
mov
imul
sbb
mov
sub
rolb
mov
mov
call
xchg
mov
xor
add
scas
add
lret
nop
xchg
mov
ficompl
add
jns
std
xor
dec
push
je
fistl
fimuls
fdivrl
sti
sahf
push
fsubrl
sbb
add
sbb
cmp
xor
jbe
jbe
out
add
in
or
dec
add
and
enter
aam
mov
push
jg
js
dec
dec
ret
cwtl
daa
push
rol
mov
mov
loope
outsl
pop
sbb
jae
stc
push
sbb
rorl
mov
dec
mov
fidivrl
loope
nop
sub
mov
and
pop
jp
sbb
and
or
nop
xchg
mov
push
in
xor
cld
insb
xor
inc
pop
in
dec
inc
mov
cs
jb
int
push
mov
cmp
in
aam
je
sahf
shrb
dec
jmp
sbb
stos
push
jo
push
std
shr
mov
xor
dec
je
pop
rolb
imul
sahf
dec
mov
leave
push
mov
pop
xchg
or
xor
xorl
mov
or
add
movb
fs
in
pop
and
add
push
pop
mov
jl
montmul
cmpsb
add
shrb
leave
ds
ficomps
fnstcw
test
mov
mov
scas
push
mov
in
out
mov
out
pop
inc
dec
or
roll
lods
mov
or
mov
in
sbb
xchg
push
xor
sub
sbb
shrl
loopne
rcrw
clc
xchg
and
loopne
sub
or
push
loop
scas
and
xchg
or
jg
mov
push
arpl
push
pushf
or
jmp
in
sahf
aas
fs
pop
daa
mov
jmp
data16
add
jmp
jb
clc
mov
jno
mov
and
decl
fistpll
xchg
lret
adc
cmp
test
push
xor
mov
push
push
daa
add
push
in
sar
fs
sarb
loopne
rorb
shl
mov
jbe
jp
mov
adc
rolb
xor
inc
sub
test
pop
inc
pop
repz
adc
outsb
out
aaa
fdivrp
in
xchg
mov
jb
mov
jge
cmc
xchg
mov
sub
leave
lret
test
scas
iret
push
xor
xchg
out
inc
dec
notl
jne
hlt
xchg
inc
mov
out
or
pop
jnp
and
push
stos
cltd
in
movsb
pushf
test
and
int
cmp
test
or
outsb
inc
mov
test
adc
aad
mov
pushf
mov
aam
leave
in
pop
into
call
shlb
cmp
jae
inc
out
orb
pop
adc
or
fdivrs
faddl
inc
mov
cmpsb
mov
out
inc
arpl
in
retw
inc
ss
daa
jmp
or
mov
cld
sub
repnz
in
insb
add
cmovo
adc
js
les
xchg
jbe
inc
bound
cmp
mov
in
das
adc
into
mov
ret
sbb
jle
add
mov
mov
jmp
jmp
movsb
insl
jnp
dec
jmp
imul
icebp
sbb
or
sub
adc
cmp
jecxz
out
hlt
inc
dec
or
fstpl
mov
jae
test
das
mov
and
enter
pushf
jae
hlt
insb
dec
jmp
fwait
or
mov
sbb
push
call
in
inc
addr16
call
sbb
jne
pushf
mov
scas
inc
pusha
stos
push
sub
cmp
in
lods
js
add
dec
sbb
pop
lsl
inc
rclb
push
rorl
add
in
mov
dec
into
lea
loop
and
or
lods
aas
mov
ror
icebp
pop
mov
cmp
push
cli
or
push
jns
mov
mov
bnd
cmc
xor
aam
add
repz
int
mov
jbe
adc
add
add
daa
pop
insb
push
aam
jo
and
mov
fisubs
mov
loope
add
pop
push
es
mov
leave
dec
xchg
mov
xchg
mov
enter
movsb
lods
mov
mov
decb
push
jns
test
loope
adc
push
rcl
mov
sub
cmp
loope
add
cli
out
xchg
push
mov
lock
jns
sbb
add
ret
negb
push
repnz
xor
int
js
mov
mov
adc
mov
cwtl
ds
mov
xacquire
sarb
xchg
sbb
out
adcl
mov
int
adc
push
dec
lock
std
mov
iret
fnstenv
add
jne
or
addb
lret
lea
pop
das
loopne,pn
sub
test
xor
inc
das
sub
les
ret
mov
or
mov
addb
mov
out
or
aas
push
adcb
xorb
jne
xor
test
dec
dec
push
loop
imul
or
jge
test
std
dec
or
xchg
lock
out
sti
nop
sub
mov
inc
dec
adc
imul
shl
test
or
jae
jnp
add
xchg
aaa
mov
es
jecxz
scas
daa
inc
sbb
pop
sbb
jge
dec
push
pop
imul
cmp
jp
call
sahf
add
mov
xchg
fnsave
rcrb
push
sbb
ljmp
xor
mov
xchg
jo
leave
pop
imul
popa
icebp
cmp
divb
inc
and
dec
mov
repz
jecxz
arpl
cmp
repnz
adc
mov
stos
fwait
mov
es
sub
faddp
fwait
push
cmp
out
or
sub
aaa
sub
mov
jl
pusha
cmp
pop
roll
jge
test
popa
and
jbe
add
xor
outsb
adc
or
lret
enter
out
arpl
add
pop
push
push
outsb
out
fs
lcall
loopne
dec
sti
adc
push
dec
cmp
call
std
sub
adc
jle
xchg
inc
mov
jae
push
inc
sub
in
jns
mov
jmp
pop
loop
xchg
ljmp
fwait
call
scas
jns
paddw
gs
loop
jo
mov
xor
jg
xchg
add
xchg
in
mov
and
into
movsb
icebp
es
adc
xchg
lret
aad
lea
push
out
push
bound
data16
xchg
out
int3
lock
repz
cli
add
lea
pushf
lods
jmp
gs
mov
mov
jnp
scas
dec
cltd
inc
jg
ljmp
fnstenv
dec
adc
test
jb
xor
lock
cmp
in
aam
test
add
mov
inc
iret
aad
dec
aam
and
std
mov
not
jp
ficompl
pop
mov
repnz
ja
push
mulb
and
outsl
xchg
add
or
lods
xor
xor
inc
ljmp
insl
and
sahf
icebp
test
jne
adc
test
push
std
cmp
subl
xor
pop
mov
push
jns
mov
cmp
lea
pop
andb
ds
sub
fs
xorb
adc
sbb
pop
sarl
lea
icebp
adc
in
std
or
addl
insb
sbb
adc
xor
xchg
and
cld
dec
cmp
rclb
int
fmuls
sbbl
das
out
mov
jnp
xchg
add
jmp
cmp
lea
andb
push
cltd
sbb
les
nop
xor
mov
mov
insl
js
mov
inc
scas
imul
cmp
leave
adcl
sbb
sbb
xor
inc
cmp
xor
outsl
divl
lds
rcr
rclb
mov
mov
in
popa
mov
nop
pop
sub
outsl
pushf
inc
push
out
pop
push
sbb
mov
mov
aas
jge
add
sbb
inc
insl
push
fdivs
push
adc
lods
lret
inc
adc
mov
outsl
std
push
not
cli
sub
into
and
adc
jb
mov
jge
mov
adc
ja
push
int3
pcmpgtd
cwtl
rclb
ds
and
adc
ret
cs
jae
insl
adc
imul
ljmp
lea
rclb
shlb
mov
cmc
mov
fmul
mov
sub
and
js
into
pop
orl
leave
xchg
fwait
push
pop
mov
cs
push
and
repz
jge
pop
repz
mov
xorl
xchg
das
cmp
push
lea
jmp
lahf
mov
lock
xchg
jno
mov
inc
mov
xchg
mov
std
jne
and
arpl
aaa
insb
dec
push
repnz
dec
jo
cmp
int
hlt
sbb
idivl
inc
push
sbb
out
scas
in
mov
push
les
in
mov
sbb
test
jnp
mov
icebp
push
push
daa
push
arpl
sbbb
js
cmp
jecxz
sti
aaa
mov
shll
loope
cmp
dec
fwait
outsb
les
mov
or
fdivrs
and
fbstp
outsb
mov
or
jmp
movsb
adc
add
pop
adc
cmp
lahf
fsts
xchg
push
and
scas
jbe
into
aam
int
add
shrb
mov
adc
add
inc
and
cmp
clc
adc
xchg
and
out
xchg
jae
movsb
and
sarb
icebp
movb
insl
xchg
inc
stos
fimuls
push
sub
lret
add
inc
xlat
out
xor
ja
cld
in
sbb
or
rorl
sbb
add
mov
lock
aad
add
and
push
cmp
sbb
sahf
ficomps
das
mov
cmp
repnz
cltd
pop
xchg
loop
sbb
pop
stos
aas
std
add
repz
mov
mov
pop
jle
add
test
dec
out
insl
dec
push
sti
ret
aam
call
cmp
popa
orb
xchg
inc
lods
out
aaa
push
ss
cmp
iret
imul
ret
ss
test
push
add
rclb
mov
pop
gs
repz
hlt
mov
adc
xchg
push
sbb
pop
cmp
es
sub
cld
in
fstl
or
cld
popf
stos
ret
vpmacsww
out
push
cwtl
es
lock
loope
popa
mov
and
fimuls
stc
push
adc
gs
ret
movl
add
std
sbb
movsl
dec
faddl
xchg
stos
enter
test
dec
inc
add
mov
push
rclb
jg
push
loopne
jecxz,pn
push
adc
xchg
xchg
test
xchg
push
stos
xor
lods
xchg
pop
or
sub
mov
bound
sbb
hlt
adcb
rorl
add
cmpsl
push
lea
das
aas
xor
cmpsb
std
mov
orl
outsb
mov
in
outsb
xchg
mov
int
cmpsl
xorb
jo
stos
sarl
push
mov
xor
and
and
leave
imul
push
or
fidivrl
les
out
pop
xchg
sub
and
js
or
dec
cmp
xor
jnp
movsb
mov
add
icebp
pop
aad
das
jle
add
dec
xchg
xchg
xor
jb
inc
add
adc
sti
lods
sub
sbb
sub
sub
repnz
and
ret
mov
stos
jmp
sbb
bnd
jge
repnz
jmp
push
hlt
mov
adc
out
push
jae
fmul
shrb
push
add
sub
jb
shll
lret
dec
mov
cmp
mov
dec
xchg
loop
pop
dec
fs
xchg
cmp
out
jge
sbb
xchg
add
shl
pushf
jp
stos
nop
ss
xor
pop
movsl
sub
xor
xlat
mov
jle
out
rorl
ret
inc
in
in
ret
push
add
daa
push
sbb
xchg
repnz
test
xor
jnp
dec
popa
cmp
xchg
cwtl
repz
and
mov
and
mov
popf
cmp
xchg
out
das
jnp
adc
fiaddl
cmc
pop
stos
lods
and
das
daa
inc
dec
lcall
pop
cmp
pop
data16
jmp
inc
xor
push
and
push
rclb
push
mov
in
xchg
fs
das
mov
movsb
lret
popa
cwtl
sbb
ret
icebp
dec
in
cwtl
inc
aad
scas
mov
mov
rorb
cs
adc
push
aaa
mov
mov
sbb
lahf
mov
js
push
push
pop
inc
fwait
sub
popa
and
addb
in
pop
xor
mov
cmp
pop
cmp
xchg
sbb
fwait
add
jae
frstor
leave
and
fsubs
jge
popf
repz
jge
cltd
dec
cmp
mov
inc
in
daa
sbb
dec
ret
stc
mov
add
xchg
jae
dec
outsb
add
xchg
sub
push
sarb
rcll
mov
adc
divl
add
in
jbe
jbe
pop
cli
scas
sub
push
inc
dec
or
push
pop
sub
jns
and
scas
pop
push
cmp
sub
and
rclb
inc
scas
repnz
es
ja
clc
psllw
adc
xchg
mov
mov
in
push
pushf
inc
push
push
mov
lods
inc
scas
ljmp
std
nop
mov
sub
int3
mov
das
inc
fstl
movsb
jmp
fcoms
jbe
mov
mov
fistl
mov
mov
push
jg
add
sbb
imul
or
roll
mov
inc
insb
add
jge
xor
imul
bound
mov
add
xchg
dec
out
push
mov
jmp
shll
stos
mov
mul
and
dec
push
inc
sbb
shlb
jl
lahf
inc
sbb
jp
xchg
cli
push
imul
xor
fistpl
xor
out
dec
aas
cmpsl
fdivr
sarl
outsb
loop
jae
jb,pt
mov
stos
iret
jp
loopne
aas
xchg
cs
popf
lret
cmp
incb
inc
dec
dec
lods
or
into
test
push
aaa
sbb
inc
push
jne
dec
popa
lret
pop
mov
mov
pushf
loopne
test
sub
push
inc
pusha
adc
cmp
sub
jp
es
cmp
out
leave
addr16
out
xor
pusha
xor
sbb
sbbb
mov
mov
or
aad
xchg
imul
data16
inc
xor
adc
or
inc
adc
jle
xor
call
cmc
lcall
loope
xchg
test
push
sbb
movl
or
mov
inc
dec
or
xor
lds
test
push
pop
jo
sbb
sbb
add
dec
adcb
ja
jbe
or
cmp
cmpsb
gs
jbe
sbb
push
jmp
dec
pop
pop
lcall
lock
push
dec
add
mov
sarl
out
push
hlt
mov
adc
jmp
in
mov
sti
mov
pop
sbb
and
hlt
jl
pop
sti
mov
mov
mov
xchg
jae
add
push
cmp
stc
xor
jae
mov
push
cltd
sbb
pop
orb
adc
ljmp
ja
mov
cmp
sbb
xchg
sub
mov
rcr
jns
mov
outsb
add
stc
cwtl
adc
lea
xchg
nop
xorl
pop
pop
sbb
pop
in
in
mov
push
cmpsb
daa
lock
or
sub
outsb
mov
mov
add
pusha
mov
pop
mov
add
test
xchg
cmp
pushw
mov
loope
hlt
pop
add
das
and
stos
jge
shll
cwtl
mov
fldl
mov
rclb
dec
inc
sub
mov
adc
loope
jbe
cld
mov
xchg
inc
fs
adc
into
cli
lods
out
xlat
aas
enter
inc
adc
fmulp
data16
pop
mov
mov
dec
je
mov
scas
pop
mov
xchg
lcall
pop
jl
pop
cltd
adc
xor
shl
pop
mov
arpl
mov
dec
stos
lahf
jl
notb
adc
out
repnz
add
or
fisubl
les
xor
lods
or
pop
xchg
mov
dec
pushf
out
lods
push
clc
mov
movsl
frstor
movb
mov
dec
xchg
fwait
inc
mov
sub
jl
xor
shl
pusha
jno
and
dec
jge
pop
mov
mov
iret
sub
addb
cmp
jns
push
repnz
aam
and
pop
mov
ret
xor
pop
xor
insb
add
and
mov
pop
mov
out
jmp
mov
idivb
push
push
les
dec
mov
sub
sub
xchg
mov
ret
sub
into
fidivrl
mov
and
fcmovnb
enter
inc
iret
inc
repnz
shll
lea
jnp
jle
in
add
adc
sahf
xchg
mov
pusha
pop
push
in
movsl
cli
icebp
xor
rolb
movsl
shll
js
lret
mov
mov
mov
mov
mov
jnp
addb
sti
daa
into
stc
loope
mov
push
cli
ljmp
or
inc
fcmovu
jno
aad
in
pop
fucomip
call
jne
mov
add
orl
sub
adc
rcrb
push
in
xlat
xchg
insb
test
mov
xor
cmp
push
cltd
adc
stos
pop
jb
jae
dec
outsb
je
pusha
incl
sub
inc
xchg
loope
lahf
lock
mov
inc
rolb
stos
jae
sti
aam
test
mov
dec
sub
sub
jbe
inc
dec
adc
data16
clc
jnp
xchg
lea
insl
das
push
repnz
inc
adc
mov
out
andb
sti
fildl
push
sbb
pop
scas
mov
outsl
pop
jno
jle
cmp
mov
cltd
or
test
loopne
loop
mov
out
into
xor
cmpsl
ds
pop
cli
movsb
ljmp
into
dec
repnz
in
ja
push
ja
out
in
pop
cmc
loop
fstpl
inc
idivl
push
je
inc
or
cmp
lret
inc
dec
adc
lock
dec
inc
dec
push
rclb
inc
test
xchg
dec
int3
scas
addb
mov
dec
cwtl
or
xchg
aaa
loopne
fstl
xor
xor
lea
test
lods
sub
cmp
insl
mov
jecxz
ljmp
pop
mov
and
xor
cmp
push
subl
cwtl
mov
xchg
cld
jmp
inc
and
xchg
cmp
dec
xchg
xor
std
fs
cli
out
push
xchg
icebp
xchg
andl
aas
inc
ficoml
stos
rorb
es
pop
aaa
jo
cvtps2pi
jle
sub
dec
xor
pop
jle
movsl
mov
rorb
cltd
ljmp
push
ret
test
scas
cld
cltd
inc
add
scas
sbb
fsubrp
hlt
in
addr16
test
loop
inc
mov
pushf
push
mov
ljmp
pusha
leave
adc
mov
sbb
imul
cmp
cmp
dec
jl
or
sbb
or
push
lret
rep
fldenv
jp
repnz
leave
or
leave
mov
in
into
ss
cmp
cmpsl
xor
pusha
sahf
jle,pn
push
xchg
int
arpl
add
adc
out
ss
fnsave
fadds
inc
jge
lahf
push
dec
lock
pop
sub
add
ss
xchg
sub
xlat
neg
lds
cmp
mov
cs
fwait
mov
fimull
cmp
into
es
inc
mov
mov
addb
sub
pop
xchg
push
mov
cmp
fsubl
lds
ficompl
dec
sbb
nop
push
fwait
push
data16
and
icebp
add
jae
pop
mov
pop
or
stos
repz
mov
cmpsb
xor
sub
cmpsb
stos
and
insb
adc
cltd
and
jl
sbb
into
or
ret
rorb
les
les
mov
jnp
ds
xchg
pop
out
lods
lret
das
hlt
push
je
sub
jmp
pop
adc
push
ja
mov
cmp
ss
and
mov
shll
cli
add
pop
lods
das
loopne
xchg
leave
and
js
pushf
fwait
adc
xor
pop
mov
sbbl
cmp
stc
fs
sbb
fcmovne
push
dec
jg
mov
add
int3
and
mov
push
scas
rclb
test
aad
daa
xchg
in
sahf
or
lods
repz
sbb
mov
dec
negb
jb
in
push
scas
movsb
pop
or
cmpsb
in
ret
jge
mov
insb
mov
fprem1
sbb
or
aad
dec
movsb
cmp
cmpsl
sbb
sub
les
and
inc
repnz
movsl
mov
push
inc
mov
lcall
ret
mov
scas
jno
stc
push
in
cs
jbe
test
adc
or
jae
and
mov
out
jnp
inc
aad
cmp
lods
inc
xor
adc
jecxz
lock
shl
add
push
cmp
mov
movsl
daa
push
mov
push
and
hlt
xchg
mov
fs
les
mov
jg
mov
jp
pusha
inc
in
dec
cmp
das
les
or
jne
out
mov
xchg
or
and
mov
xchg
int
sbb
jmp
and
xlat
out
or
clc
add
sbb
xor
daa
fwait
in
push
loop
pop
stos
push
inc
jne
in
lds
jle
dec
mov
inc
xor
pop
sahf
push
sar
pop
cld
arpl
das
aam
in
adc
mov
mov
add
data16
jl
jae
cmc
xchg
xor
mov
inc
and
cmp
lods
sub
mov
out
iret
test
mov
add
add
mov
xchg
in
shrl
in
xchg
pop
push
lret
dec
inc
scas
lock
rorb
fisttpl
mov
mov
adc
xchg
addr16
push
bound
inc
ret
push
add
xorl
sbb
and
xchg
fldenv
js
xlat
sbb
std
addr16
test
push
mov
dec
mov
pop
inc
cmpsb
aad
movsb
inc
call
xor
sub
ficoms
xor
cs
mov
adc
cmpsb
mov
loope
cmp
loopne
sub
dec
or
fs
shrl
insl
enter
movsl
xchg
rorb
rcr
xor
pop
inc
or
xchg
aaa
mov
inc
addb
xor
adc
push
lcall
pusha
das
int
sub
and
mov
pop
xchg
stc
fcoms
dec
gs
push
xchg
or
or
mov
pop
testl
push
in
inc
push
add
push
inc
cmp
out
fmul
and
mov
xor
and
inc
cmp
add
sub
cwtl
jns
int3
push
imul
or
and
loope
cmp
movsb
aas
das
test
mov
bound
cltd
ret
dec
insb
adc
adc
cli
pop
push
pop
cmp
add
dec
xor
hlt
push
mov
cltd
pop
lret
xor
mov
fs
insb
idivl
push
cli
mov
or
js
mov
movsl
mov
js
or
push
pop
stc
popf
ja
fmuls
add
pop
pushf
ss
mov
or
xor
dec
cmp
adc
pop
add
je
pop
mov
jae
test
ss
inc
dec
imul
ret
add
cmp
sub
mov
and
xchg
adc
test
je
bnd
outsl
pop
das
xor
arpl
cmp
push
push
pop
push
in
pop
leave
pop
stos
bound
das
dec
xchg
cmc
cs
or
dec
ja
mov
call
pop
leave
mov
stos
movsb
push
mov
pop
and
mov
fwait
dec
add
nop
xchg
cmp
or
pop
insb
mov
fstpt
add
leave
or
xchg
sub
aam
mov
aaa
or
push
out
mov
cli
mov
push
add
daa
push
xor
mov
mov
jge
lods
cwtl
adc
and
fmull
jp
mov
dec
leave
test
jg
loop
cmp
pop
lcall
arpl
fs
pop
mov
adc
call
repnz
jns
es
gs
sub
scas
lahf
in
mov
fidivs
push
push
sahf
jae
sub
cmp
add
pop
jnp
pop
or
xchg
dec
out
or
lahf
xchg
mov
dec
xor
push
xchg
add
mov
imul
lret
jecxz
push
repz
adc
in
loope
fisubl
faddl
in
in
dec
add
bound
repz
movsl
push
scas
test
adc
movsl
sahf
pop
fsubrl
cmpsl
jae
int
pop
push
pop
or
pop
cltd
cmp
popf
scas
test
cmc
cli
push
pop
js
adc
fsubrs
push
sti
jne
mov
aas
lock
and
ficoms
mov
sbb
ret
push
sbb
repnz
pop
sbb
pop
push
mov
adc
or
mov
xchg
add
fldl
shlb
push
fildl
ret
xor
jmp
and
cmp
leave
pusha
sub
lods
je
jbe
inc
fistpll
loop
pop
jmp
mov
sbb
ret
dec
stos
rcrb
sbb
pop
fwait
mov
hlt
xchg
test
lret
cmp
dec
adc
mov
inc
movsb
repnz
or
adc
inc
add
dec
popf
test
inc
icebp
cmc
cli
flds
test
xorl
gs
or
es
stos
nop
out
addr16
or
rcrl
insb
aam
jbe
mov
cmc
stc
adc
andl
in
pop
test
cmpsl
in
insb
in
sub
cwtl
insb
sbb
sub
adc
or
cmp
clc
xchg
notb
lahf
add
push
sbb
lea
or
daa
sbb
xor
ffreep
fbstp
roll
test
ret
inc
jns
leave
in
test
gs
jnp
mov
xor
les
scas
adc
xor
pop
push
add
add
jmp
scas
jg
and
or
stos
push
clc
sarb
dec
push
mov
not
sub
popl
inc
out
push
scas
inc
call
decb
inc
add
push
dec
inc
cmp
repz
data16
jo
inc
mov
in
repnz
scas
sub
insb
out
and
sub
cld
in
movaps
ja
add
jne
ja
in
jp
mov
fisttpl
les
leave
sbb
lods
dec
icebp
xor
xchg
xchg
xor
mov
outsl
sub
xchg
pop
add
push
mov
or
pop
push
jmp
dec
mov
sarl
pop
mov
cltd
and
pop
fwait
or
outsl
shl
mov
xchg
sbb
fdivrs
outsl
bound
aad
push
xchg
hlt
dec
daa
xor
ss
int
mov
sub
xchg
jae
cs
mov
lds
ficoml
and
les
repz
hlt
mov
dec
adc
jp
add
or
in
jp
pop
sbb
loopne
je
xchg
cld
notl
push
cli
iret
sbb
out
pop
mov
inc
ljmp
sbb
mov
or
out
syscall
int3
movsb
xor
popa
jo
aaa
repnz
xchg
push
mov
lret
cmc
ss
sbb
lods
mov
cmp
mov
mov
ja
and
outsl
stos
pop
sub
aam
mov
adc
add
enter
or
push
mov
and
jne
xor
movsl
aaa
dec
fstpl
cli
inc
push
mov
enter
mov
test
pushf
xchg
push
loop
fwait
xor
mov
aam
pop
sub
mov
adc
pop
cltd
lds
mov
xchg
fcomip
adc
rcrl
nop
das
add
mov
out
dec
mov
jmp
push
and
pushf
mov
cmp
jne
mov
call
arpl
test
outsl
movsb
movsb
fisubrl
addl
das
addl
lods
pop
and
dec
cltd
dec
das
add
xor
sbbb
in
adc
mov
fsubrs
cmpl
mov
cmp
push
iret
push
fwait
dec
dec
jl
xchg
ss
jae
inc
sti
sbbb
addr16
or
add
dec
jmp
adc
sbb
test
mov
rorl
or
cltd
push
mov
pop
add
pusha
test
es
jmp
dec
iret
shrl
xchg
lea
fisubs
lcall
stos
fwait
xchg
lock
mov
push
outsl
int
testl
call
cs
movsl
aad
add
negl
sub
push
sbb
push
stos
xor
imul
xor
sbbl
flds
pop
fiadds
inc
lock
mov
lock
call
push
rcrb
and
jg
mov
icebp
or
jecxz
xchg
out
mov
clc
adc
psrad
add
fisttpl
mov
jecxz
outsl
xor
mov
cld
xbegin
sbb
or
inc
xor
fisttpll
jo
shll
jmp
out
add
stos
xchg
dec
stc
stos
and
or
sbb
sub
sub
xchg
adc
pop
sub
pop
cltd
mov
xchg
dec
cltd
imul
outsl
cmc
fst
and
sti
xchg
movsl
mov
xchg
outsl
jnp
mov
push
push
inc
pop
cli
cmpsb
ja
jno
aad
jo
xchg
inc
out
xor
sbb
xlat
aam
mov
in
xchg
xor
pop
pop
imul
outsb
jg
mov
pop
imul
shlb
mov
das
and
add
mov
jmp
xchg
fnstcw
popf
mov
push
jp
fxch
fs
jp
push
push
ss
shlb
xlat
in
inc
sarl
jbe
lea
loopne
mov
iret
add
xchg
jmp
mov
cmp
jnp
aaa
stos
mov
pop
push
adc
mov
mov
mov
push
xchg
stos
sar
enter
popa
out
jle
xchg
aas
and
add
popa
xchg
sbb
xchg
sub
out
fildl
shll
cwtl
out
or
mov
inc
std
aaa
adcl
mov
in
mov
rcrl
movlps
and
push
fsub
out
pop
rorl
sbb
sub
cmp
cmpsb
mov
cli
fwait
movsb
jbe
subb
ficomps
aam
inc
adc
ret
xor
adc
pop
stc
push
add
jo
and
xchg
xchg
addr16
jge
out
scas
insb
inc
push
dec
sahf
outsb
mov
dec
loop
lcall
jmp
lret
pushf
jp
adc
rcrl
and
lcall
add
ja
jecxz
and
or
ret
fnsave
adc
outsl
jmp
pop
out
adc
jne
ss
test
or
mov
mov
dec
or
repnz
ss
int
push
jae
mov
push
mov
xchg
repnz
lods
jb
cmp
lea
pop
fcmovne
outsb
inc
ljmp
pop
dec
jno
aam
out
les
and
cmp
subb
shlb
stc
push
loop
jns
adc
pop
ret
mov
hlt
addr16
dec
insb
fcoml
mov
add
pop
mov
out
scas
lcall
call
xchg
fs
les
cmpsb
je
into
cmpb
cmp
push
data16
add
dec
mov
in
movsb
push
jne
popa
xchg
clc
xchg
cmp
jne
outsb
shr
fnstsw
add
sub
in
aam
movsl
mov
iret
xchg
add
inc
or
mov
mov
mov
shll
jne
out
fdivs
jbe
mov
and
cmp
std
xchg
lds
icebp
inc
lods
rorb
or
xchg
das
fwait
jae
in
jge
test
cmp
lods
cmpsb
dec
imul
pop
hlt
and
in
pop
dec
pop
pop
pop
les
sbb
sbb
ret
dec
shlb
rep
cwtl
int3
push
dec
lcall
inc
adc
xchg
cmpsb
mov
std
or
push
dec
sub
xchg
cmpsb
mov
lds
adc
xor
jo
ret
popf
xchg
arpl
aad
push
pop
pop
jno
xchg
in
daa
ljmp
cmp
imul
add
push
mov
jge
mov
or
ret
lret
fidivrl
and
loopne
mov
push
aam
cmpsl
enter
xor
cmc
popa
out
leave
mov
sub
and
sbb
and
out
pop
adcb
enter
mov
das
mov
and
add
mov
jno
mov
int3
in
pop
and
push
adc
push
ds
lea
cmpsb
pop
test
inc
lods
add
shlb
jecxz
lcall
and
xor
adc
data16
leave
adc
cmpsb
sbb
jb
jb
pop
cmpsl
lahf
loope
add
and
mov
or
xorb
mov
mov
cmp
lcall
scas
xor
adc
dec
bound
enter
or
ljmp
sub
inc
dec
adc
int3
cmpsl
add
pop
into
adc
xor
arpl
adc
push
and
ss
dec
jmp
sub
icebp
data16
adc
out
lret
inc
imull
in
jno
xchg
adc
push
dec
orl
inc
adc
cmp
pusha
mul
jmp
mov
inc
test
and
sahf
nop
das
sub
push
les
mov
test
shlb
fidivrs
imul
jnp
mov
jl
loope
mov
scas
xor
inc
xchg
outsl
fdivrp
test
lret
testb
cld
lahf
push
xlat
subl
arpl
not
jne
sub
adc
pusha
and
xchg
daa
jae
xor
int
fstpl
xchg
xchg
icebp
ja
pop
cmp
repz
std
dec
pop
xor
adc
sahf
jmp
mov
sbb
xor
int
adc
loopne
loopne
pop
lcall
jge
fstpt
and
pop
jb
and
and
dec
pop
mov
lret
stos
mov
jl
sub
test
dec
std
insb
inc
adc
jo
mov
xor
icebp
xlat
xlat
cmp
xlat
and
fsubs
fdivl
jb
xchg
mov
mov
ret
push
test
fwait
and
adc
jne
push
fcomps
and
fucomi
sub
push
int3
pop
loop
mov
and
test
push
and
adc
cmp
lcall
cmp
jge
ljmp
ss
inc
or
mov
jo
sub
lret
cmc
push
inc
or
sti
mov
jg
and
add
pop
je
cld
cmp
mov
loop
or
loop
mov
inc
xchg
hlt
loopne
inc
mov
inc
pop
sti
fidivrl
loopne
out
loopne
jle
inc
and
std
pop
dec
in
jmp
jp
mov
es
mov
jno
out
mov
push
lock
push
nop
jnp
mov
inc
mov
pop
sarb
inc
mov
mov
imul
jo
add
addl
enter
or
mov
les
lods
mov
ret
iret
insb
lahf
pop
jl
xorl
sub
jmp
loope
in
arpl
mov
pshufw
push
mov
xchg
xchg
out
push
xchg
subl
lods
jb
mov
cld
out
insb
js
stos
xchg
dec
out
outsl
test
mov
mov
addr16
cmp
les
jnp
cmp
mov
fsubp
out
cld
fdivs
push
loopne
ss
push
loopne
pop
mov
pop
and
stc
pop
adc
loope
push
xor
cmpsb
sbb
push
ljmp
in
cmp
outsb
out
movsl
add
jge
add
les
sbb
or
pop
push
pop
xor
gs
lret
ss
pop
jecxz
popf
repnz
and
add
adc
in
rcrl
stos
and
xor
dec
lcall
das
lds
fidivrs
pop
icebp
test
nop
mov
push
dec
lret
leave
or
scas
sub
dec
icebp
leave
insb
sub
mov
clc
ffree
cli
sbb
and
iret
mulb
stc
repnz
loopne
mov
call
scas
mov
repnz
outsl
and
pop
push
sahf
mov
inc
jecxz
jbe
std
dec
lret
imul
push
sbb
pop
popf
shll
mull
aam
pop
fimuls
enter
adc
or
fadds
or
cli
nop
push
dec
pushl
cld
sbb
push
insl
in
fiaddl
xor
lods
push
fstpt
push
je
add
lods
enter
and
lods
in
es
mov
rol
fdivp
cmp
and
movsl
inc
lret
mov
lods
mov
push
aas
or
jo
xchg
cld
negl
ss
mov
mov
inc
xchg
repz
cmp
sbb
mov
adc
push
xchg
mov
xor
scas
dec
mov
or
daa
pushf
ljmp
inc
xchg
in
push
out
jbe
inc
mov
pushf
dec
das
jno
mov
push
push
out
sub
pop
push
int3
jo
repnz
jl
incb
stos
insb
cli
addb
or
test
mov
loopne
icebp
and
xorl
fdivr
xchg
push
xor
mov
add
lret
pop
pop
testb
daa
cmpsb
push
or
cmp
fists
inc
mov
inc
pop
adc
jb
and
mov
call
fwait
cmp
dec
cmp
daa
jecxz
or
xlat
sarl
js
popf
adc
out
cmp
insl
popa
dec
repz
cmp
add
push
mov
ljmp
bound
and
mov
push
mov
sub
adc
or
mov
faddp
mov
mov
xchg
pushl
dec
inc
rcrb
jg
dec
insb
sbb
and
xchg
jb
in
pop
ljmp
subb
jecxz
ret
sbb
in
fsts
add
test
out
loop
push
adc
aam
lds
xchg
mov
cmc
rcrb
jne
out
rorl
mov
jp
inc
xchg
insl
fs
cmp
mov
and
dec
sbb
lods
js
mov
push
mov
cmp
jne
and
les
lret
cmp
pop
in
insl
xor
mov
leave
add
jle
pop
xchg
and
call
sub
cmpsb
iret
mov
sarl
sbb
repz
popf
stos
ss
mov
lea
sarl
mov
fcomip
or
lret
dec
out
mov
lods
fs
test
sub
lahf
mov
movsl
jmp
pop
loop
sbb
adc
xchg
aam
mov
pop
push
sub
repnz
ds
jae
ds
push
lahf
movl
mov
and
dec
cmpsb
arpl
dec
jmp
es
sbb
fistpl
cmp
call
adc
lcall
insb
fwait
adc
inc
pop
mov
lahf
push
es
int
and
repz
test
mov
leave
stos
push
dec
ror
lods
inc
and
adc
jae
jp
xor
notb
xor
pop
insl
push
pop
call
push
adc
cmp
pushf
out
or
jg
fcoml
cli
das
push
movsl
scas
stos
pop
lds
mov
sahf
xor
sbb
stos
cmpsl
mov
cmp
mov
insl
movsl
push
sbb
aas
mov
jg
incl
push
jns
scas
jnp
lods
loop
pop
mov
test
hlt
or
xchg
out
push
imul
add
jg
andb
cmovp
js
std
cltd
lods
ljmp
adc
lods
in
mov
bound
adc
popf
mov
ds
iret
mov
cmp
les
jbe
dec
shrb
xor
lret
dec
jp
popa
out
loope
pushw
jle
les
sysenter
aad
pop
pushf
hlt
add
enter
mov
js
jmp
push
inc
push
scas
bound
push
clc
or
push
fimuls
fisubl
xor
push
inc
scas
inc
sub
popf
insl
inc
adc
mov
movsl
imul
in
sub
cmp
addr16
xchg
mov
lret
adc
loopne
imul
cmpsb
pop
daa
xor
pop
push
push
stc
xorb
ret
mov
sub
xorb
shlb
ficoms
mov
cmp
push
push
jecxz
leave
sbb
xchg
scas
int3
xchg
inc
cmp
mov
rorb
pop
int
movsl
mov
rcrl
inc
pusha
inc
lahf
or
imulb
mov
cli
jle
push
pop
and
xorl
push
sbb
mov
cmc
or
cld
dec
arpl
mov
ret
in
sbb
mov
push
jo
scas
jecxz
mov
out
mov
iret
hlt
jecxz
push
in
frstor
ds
adc
mov
enter
popa
add
push
dec
xor
and
inc
sub
sbb
das
sub
aad
dec
insl
lods
aad
cs
lret
jae
xor
nop
adc
pop
fisttpl
push
sub
sub
xorl
xchg
fs
cmp
jb
and
mov
sbb
push
out
jmp
cmc
xor
and
std
push
adc
sub
xchg
inc
outsb
cmpsl
mov
mov
add
je
cs
push
lcall
push
lcall
in
push
call
enter
xchg
imul
imul
lods
fwait
into
mov
push
inc
seta
mov
sti
dec
mov
out
mov
adc
or
jg
ror
pop
cld
je
or
inc
add
fadds
pop
imul
mov
pop
push
cmp
pop
repz
out
sbb
call
leave
gs
mov
lock
and
jmp
data16
xchg
jp
insb
dec
adc
setbe
xchg
int3
mov
lret
mov
mov
and
or
cmpsl
js
cmp
pop
mov
lea
pop
cmc
xchg
jne
fcmove
sbb
mull
pop
add
or
sub
movsb
hlt
and
xchg
or
mov
xchg
push
in
test
or
cmc
jmp
pop
into
outsl
scas
rorl
mov
xchg
sub
outsb
out
arpl
inc
xchg
loop
arpl
into
ja
test
and
cmc
out
in
jns
push
or
call
cmc
movsb
loope
add
aam
push
enter
cli
clc
std
ficoml
fiaddl
test
loop
xor
cmpsb
pop
mov
sbb
lds
popa
mov
leave
in
mov
mov
dec
lods
out
imul
inc
dec
nop
adc
lock
dec
xor
inc
movsl
test
dec
lds
mov
inc
push
sti
sub
jno
cmp
pop
ret
and
int3
test
and
and
jb
sub
hlt
cmp
cs
mov
cmp
pop
mov
jne
out
fnsave
adc
mov
dec
dec
mov
or
mov
popa
sub
mov
ja
es
fwait
xchg
out
and
sti
mov
push
mov
rcl
mov
sbb
push
jne
sub
jecxz
jmp
push
mov
movsl
add
adc
out
mov
jmp
dec
mov
mov
cmp
js
fistpl
push
adc
xchg
ljmp
adc
mov
add
mov
dec
xchg
mov
push
mov
lods
mov
sqrtps
shlb
dec
xor
and
jae
aam
push
hlt
pop
popl
jle
jp
in
adc
cwtl
fnsave
popa
sbb
outsb
jnp
das
and
and
call
out
icebp
xor
cmpsb
sbb
jo
add
push
jo
push
or
or
push
cwtl
into
jno
in
inc
int
test
inc
jecxz,pn
jecxz
imul
std
adc
xor
out
adc
lret
dec
loopne
sub
pop
sub
and
icebp
sub
push
hlt
pop
xchg
popa
jns
movsl
lea
lods
orl
mov
xchg
call
cmpsl
or
lea
cmpsb
add
add
xchg
ret
sbb
test
ss
insb
stc
lret
inc
mov
push
cmp
push
add
inc
stos
movsl
dec
mov
fwait
lods
adc
xchg
jmp
xor
cmp
ror
rorl
push
or
mov
sbbl
jae
push
xor
mov
sub
lock
cli
sbb
sarb
mov
push
jae
jnp
jle
xor
loop
scas
test
inc
add
gs
xor
mov
and
loopne
and
push
cs
sbb
cmpsl
stc
xchg
xorl
or
repnz
cli
aad
mov
mov
cmc
mov
or
push
ds
ljmp
dec
or
dec
push
cwtl
push
pop
outsb
adcl
xchg
icebp
adc
dec
push
scas
jne
push
jns
jmp
mov
xor
cmpb
movsl
stos
mov
std
push
sbb
xor
leave
xor
jb
mov
test
and
cwtl
dec
stos
dec
and
xor
push
call
fisttpll
xchg
dec
dec
pushf
push
rclb
add
pop
pop
inc
cmpsl
sub
or
jnp
pop
inc
loopne
adc
inc
rorb
cmp
adc
insb
aaa
lret
fwait
sub
nop
ljmp
int
mov
shrb
xor
and
inc
xor
pop
mov
sbb
outsl
pop
xchg
inc
es
mov
insb
xor
or
cli
dec
dec
aaa
cmp
int3
in
adc
insl
inc
aas
xor
fwait
pop
stc
adc
loopne
dec
mov
push
cmpsb
arpl
mov
cmp
cmp
aam
jl,pt
call
popf
loopne
or
and
xor
xor
pop
jmp
inc
pop
lock
mov
imul
mov
sbb
and
insb
dec
dec
xchg
sbb
and
mov
add
sbb
pop
enter
adc
lcall
mov
js
int
jp
out
sbb
cmp
rcrb
mov
loopne
mov
cli
push
test
sti
out
cmp
mov
lods
jge
repnz
mov
pop
mov
jnp
lea
pop
xor
mov
adc
maxps
push
or
ljmp
icebp
jl
lcall
dec
sbb
push
sub
insb
pop
mov
pop
cltd
inc
mov
ljmp
or
lret
mov
cld
inc
stos
mov
enter
cltd
add
cmp
pop
fsts
xchg
jecxz
mov
dec
fiadds
mov
fcomip
pop
xor
and
xorl
imul
jge
fwait
imul
insl
in
xchg
dec
mov
sbb
mov
mov
xchg
mov
arpl
xchg
aam
mov
mov
in
into
test
out
jp
arpl
pusha
pop
dec
jnp
inc
jge
insl
inc
pop
xor
mov
mov
decb
fsubrl
nop
popf
inc
jb
imul
pop
cmp
movsl
in
lock
lahf
adc
push
arpl
cmc
jbe
xchg
mov
mov
add
sub
test
adc
and
sarb
scas
out
rolb
mov
test
in
nop
xchg
pop
pushf
xchg
mov
xlat
jb
jg
hlt
mov
push
xorb
cld
imul
mov
inc
jecxz
data16
hlt
cmpsl
jle
nop
cmp
inc
mov
add
movsb
stc
inc
sti
and
popa
in
testl
repz
loop
xchg
sbb
addr16
fistpl
sub
adc
movq
jecxz
nop
mov
inc
mov
sub
jae
daa
cmpsl
sub
nop
insl
xor
jmp
in
testl
bound
or
mov
jne
xor
xchg
sub
dec
aam
jg
iret
lcall
ja
push
cmp
lret
in
dec
cmp
mov
jecxz
pop
aad
stos
hlt
adc
fnstsw
cmpsb
outsl
push
mov
jo
add
sahf
movups
mov
or
addr16
mov
or
xchg
mov
add
mov
lret
aas
push
gs
je
inc
pop
adc
faddp
inc
sub
ficoml
adc
ss
loopne
jns
cmpsb
lcall
mov
scas
xchg
call
fwait
imul
add
add
js
mov
fistpl
nop
cmp
movsl
cmp
dec
sub
cmpsl
clc
test
dec
or
jecxz
or
dec
sbb
xchg
in
xlat
cmc
mov
scas
cmp
or
push
scas
test
dec
mov
daa
ljmp
sbb
jecxz
xchg
les
xchg
int
out
sbb
aam
int
sub
cltd
xchg
and
mov
movsb
lea
sub
push
or
out
ds
divl
adc
inc
adc
pop
pop
es
mov
lret
adc
xor
pop
fldlg2
cmc
inc
fwait
inc
stos
fsubrp
and
sub
inc
push
pop
cmp
or
mov
fstpt
inc
dec
mov
lcall
xor
mov
sbb
mov
mov
enter
sbb
pop
rcr
cmpsl
push
xor
enter
inc
ljmp
stos
nop
sub
repnz
dec
insl
shll
sub
andb
subb
add
xchg
jg
xor
push
mov
ja
cmpsl
lods
loope
and
in
push
es
sbb
dec
adc
fcompl
jg
out
clc
cmp
jnp
arpl
jns
sbb
jg
sub
insb
mov
xchg
mov
and
sarl
subl
dec
addr16
das
push
xchg
fsubr
call
add
fldl
jne
int
mov
sub
mov
push
mov
mov
sub
jno
cmp
incb
outsb
mov
stc
testl
jl
data16
push
mov
xor
movsl
inc
push
and
rolb
subl
insl
dec
pop
or
arpl
sub
push
mov
pushf
insl
mov
into
call
dec
mov
adc
es
sub
ss
fbld
lcall
mov
pop
mov
add
andl
and
daa
xor
mov
scas
stc
jno
cmp
adc
add
push
inc
push
inc
or
mov
push
cli
test
sbb
movsl
cli
adc
cmp
inc
aad
push
movsl
jae
cmpsl
sbb
fwait
sbb
cmp
inc
pushf
call
or
pop
dec
add
les
rol
mov
push
inc
gs
adc
les
cld
pop
rol
mov
add
pop
jne
addr16
xchg
add
and
icebp
push
xchg
push
mov
ss
insl
sarb
js
jb
fnstsw
adc
idivb
push
sub
ret
jae
jns
xor
imul
fisttpl
pop
cmp
stos
mov
inc
sbb
into
add
and
add
mov
inc
pop
push
in
adc
jno
inc
push
push
ss
leave
inc
fldenv
dec
jmp
sub
loop
inc
inc
jnp
sub
adc
pushf
decl
jo
cli
sbb
mov
mov
test
push
mov
cltd
out
adc
not
packssdw
hlt
lods
xchg
jl
popl
sub
popf
mov
sbb
lahf
inc
stos
mov
mov
push
push
inc
pop
xlat
std
sbb
or
fldenv
xchg
lea
mov
pop
lds
add
xor
push
stc
push
daa
push
add
xchg
push
outsb
test
mov
pusha
fistps
je
pop
in
rol
mov
adc
mov
jae
push
ret
in
sarl
aas
jae
ss
stos
inc
jo
cli
test
pop
lahf
mov
sbb
mov
div
or
xchg
loope
loopne
rcrb
or
lods
mov
xchg
mov
jge
ja
mov
cld
dec
fisubl
mov
push
xor
int3
inc
inc
lds
adc
adc
sbb
std
fisttpll
inc
rolb
outsl
adcl
lea
add
dec
pop
repz
xchg
imul
rclb
insb
dec
inc
in
jnp
mov
cmpsb
pop
and
push
mov
repnz
fldl
int3
test
cmp
push
hlt
mov
mov
inc
inc
dec
dec
push
dec
jo
pop
and
push
lret
mov
stos
das
loopne
dec
sub
push
faddl
push
repnz
es
repz
jl
movsl
mov
add
popf
sub
sti
test
imul
lcall
sbb
inc
cmpsl
jo
cmpsl
cwtl
fs
jbe
lcall
sub
subb
jg
xchg
outsb
imul
mov
mov
stos
pusha
add
inc
and
scas
mov
sar
cmpsb
movsl
pop
mov
xchg
shrl
or
jo
sub
jge
mov
cs
jmp
dec
lcall
in
rol
sub
js
xchg
gs
xchg
ret
jmp
mov
sbb
fwait
sub
xchg
je
cmp
dec
adc
orb
pop
fistl
or
push
insb
inc
lock
pop
mov
mov
push
jo
cmp
dec
jl
enter
dec
xchg
sub
jnp
add
imull
and
test
popa
lret
fcmove
imul
xor
icebp
aas
inc
sub
fimuls
xor
ljmp
call
jb
lcall
xchg
mov
stc
out
stos
fildl
test
mov
sbb
xor
sbb
jae
or
inc
cs
ret
je
adc
gs
cmp
hlt
fimull
xor
and
mov
pop
mov
mov
jns
dec
insb
out
inc
lods
test
cmp
jnp
iret
adc
jecxz
xor
add
pop
roll
or
or
lahf
mov
jmp
mov
jae
addr16
cmc
jle
cltd
mov
subl
sub
pop
js
adc
test
push
cmp
ficomps
sub
pop
out
cmpsb
sbbb
int3
mov
mov
cmp
outsl
cltd
push
mov
nop
lret
mov
popf
push
call
inc
or
cmp
and
add
cmpb
cld
test
stc
jnp
xor
and
cmp
insb
pop
push
adc
int
pop
mov
pop
popf
mov
je
adc
jns
inc
or
push
or
add
mov
outsl
jmp
jae
test
add
fcomps
call
push
inc
xor
xor
pop
mov
daa
fsubrs
adc
lret
movsl
dec
push
outsl
xor
or
lods
cmp
test
in
es
cs
into
sarb
rcll
xor
jbe
lahf
xor
out
pushf
xchg
fcmovne
cmc
jg
pusha
cwtl
add
call
pop
shlb
xchg
pop
mov
pop
stos
push
mov
xchg
cmp
movsl
mov
aas
adc
jle
fisttpll
inc
and
scas
fmulp
mov
adc
pop
push
mov
and
dec
int3
int
pop
push
dec
pop
sub
xor
xlat
push
jle
or
push
jmp
sti
push
loop
mov
xlat
jnp
cmp
stos
or
cltd
mov
xor
cltd
sub
xchg
add
scas
mov
insb
mov
adc
or
andl
push
je
mov
pop
scas
push
inc
shrb
in
pop
inc
scas
movsb
pop
add
sbb
addb
pop
loop
call
lret
fstpl
pop
subb
lret
mov
call
adc
call
adc
dec
cltd
push
sti
test
leave
cmc
rcrl
loopne
repnz
push
arpl
or
icebp
lods
jecxz
or
adc
dec
lods
jns
and
push
rorl
xchg
sbb
inc
add
pop
mov
cmp
mov
fwait
and
mov
testl
sub
int
push
shrl
sub
iret
aaa
adc
into
xchg
pop
jp
clc
pop
shll
dec
xchg
outsb
and
cld
rorl
sub
cmp
push
push
mov
punpcklbw
adc
xchg
aas
addl
out
mov
inc
push
xchg
pop
jns
fsubrl
dec
sbb
mov
loop
rolb
or
xchg
xor
clc
scas
arpl
call
ret
sahf
lea
and
neg
mov
pusha
orb
and
pop
dec
jecxz
mov
sbbb
pop
ljmp
in
add
daa
mov
push
pusha
xchg
fldcw
add
mov
mov
xchg
aam
popf
ss
or
or
push
insl
ret
dec
inc
scas
push
cmp
cwtl
mov
mov
lea
out
xchg
push
ret
xor
call
in
cmpsl
jne
jbe
nop
adc
sar
sbb
add
out
jle
insl
add
fdivl
ret
push
cwtl
sub
mov
inc
mov
das
push
cld
adc
mov
dec
std
popa
and
xchg
fdivs
ror
hlt
fwait
add
cmpsl
sub
lock
cmp
arpl
pop
das
dec
stos
sbb
push
xor
jl
xor
lcall
stos
push
movsb
jb
jnp
push
insl
cli
xchg
pop
sti
nop
outsl
out
shll
jmp
int
ja
inc
dec
imul
pop
sub
popf
push
pop
mov
int
dec
inc
jae
push
mov
adc
pusha
scas
push
testb
jnp
cmp
push
in
push
nop
fdiv
cmpl
aad
aam
jmp
lea
dec
sbb
loopne
pop
jecxz
cli
and
dec
imul
lahf
xchg
dec
add
mov
mov
cmp
pop
jns
jp
cmpsl
lcall
xor
imul
sub
or
movsb
adc
inc
out
xchg
rcr
add
hlt
jbe
and
dec
orl
in
in
cmpb
mov
mov
inc
pop
mov
ret
lret
mov
cmp
jp
jle
in
adc
out
adc
mov
lock
fldt
int3
xchg
inc
pop
outsb
dec
out
xor
sahf
jp
sub
xchg
nop
enter
or
push
and
xchg
mov
push
push
pop
jbe
dec
pop
movsl
addl
cmp
in
push
cmp
ja
or
cli
test
rorl
push
out
ret
nop
popa
or
push
mov
arpl
sbb
pushf
mov
push
icebp
js
pop
in
arpl
leave
jnp
ds
pop
jae
dec
je
jmp
sub
sarb
loop
mov
leave
mov
repnz
outsl
adc
mov
xor
jl
rcrl
pop
jbe
sbb
test
shl
xchg
cmpsl
out
insb
jecxz
xor
in
pop
push
shr
repz
add
xchg
imul
cs
dec
addl
or
add
rol
push
xchg
je
mov
jns
cmp
out
dec
jnp
in
fsubs
inc
cmp
out
push
jmp
nop
imul
cmp
test
loope
mov
stos
sbb
xor
cs
jmp
lods
inc
pop
mov
fdivr
stc
movsb
inc
xor
inc
data16
jns
mov
mov
ret
mov
push
in
clc
inc
or
dec
loop
ljmp
insl
scas
push
test
jl
or
std
int
mov
cld
xchg
lret
push
mov
inc
test
out
mov
mov
movl
or
dec
iret
lret
nop
ja
aad
in
loope
mov
sub
fnsave
mov
xchg
rcll
loop
xchg
inc
lock
fldl
adc
mov
mov
add
jle
mov
or
leave
mov
xor
adc
xor
sbb
lahf
sarb
ljmp
jecxz
subl
cmp
xchg
arpl
mov
cld
mov
leave
lock
ret
mov
cltd
and
pusha
xlat
out
jno
daa
test
or
sub
adc
mov
and
add
inc
imul
mov
test
sti
push
sub
out
popf
movsb
or
aas
jnp
lds
ror
jecxz
into
cltd
fidivs
mov
out
bound
into
pop
in
mov
xchg
cli
arpl
xor
mov
cmpsl
push
lods
jecxz
loopne
jg
ret
push
push
daa
add
pop
mov
movsb
shll
dec
push
mov
rolb
mov
sbb
xor
mov
cmp
mov
mov
cwtl
test
aam
push
js
ljmp
imul
mov
xor
inc
jmp
pop
jl
push
stos
jo
mov
mov
xchg
repz
mov
out
into
lret
sbb
fildl
add
stos
or
int
push
mov
mov
jbe
inc
add
leave
fcmovnbe
add
dec
dec
push
jns
mov
add
test
or
adcl
mov
divb
xchg
mov
push
psubusb
int3
xchg
sbb
xchg
ja
sbb
and
cli
and
orb
mov
push
mov
cmp
scas
fnstcw
lods
mov
imul
aad
cmp
lods
dec
mov
and
jno
sub
pop
cmp
js
pop
rorb
or
jle
or
mov
fdivrl
sub
pop
add
or
lret
or
or
in
sbb
xchg
push
mov
shl
xchg
cmp
shrb
lock
shrl
scas
sub
cmpsb
mov
sbb
adc
pop
pusha
sub
sti
jg
push
cmp
sub
test
loopne
pop
pop
fdiv
jnp
xchg
out
ficompl
push
and
pushf
imul
jae
jge
fstpl
inc
sbb
sbb
loopne
mov
loope
xchg
adc
mov
inc
lods
sbb
adc
lds
jae
insl
jbe
out
or
insb
idiv
mov
xchg
mov
add
xchg
adc
fldl
adc
jne
out
fst
mov
xchg
and
cmp
inc
add
pop
nop
or
xor
insb
jbe
aad
push
lods
out
lcall
js
pushf
btc
mov
daa
xor
add
sbb
pop
lahf
adc
mov
mov
cli
aad
insl
das
push
mov
mov
xchg
jne
cmpsb
jns
data16
test
mov
mov
cld
ljmp
mov
pop
cmp
cmp
push
jbe
xlat
insb
sbb
sarl
sub
push
inc
movsl
imul
popa
fadds
jg
in
inc
inc
mov
fistps
or
dec
or
enter
test
jl
jae
xchg
hlt
pushf
or
jle
fidivrs
test
in
adcl
stc
out
or
div
or
cmp
outsb
mov
call
cmpsb
daa
ret
je
jb
data16
std
cmp
imul
pop
pusha
push
pop
pop
nop
in
jl
cmpsl
add
sti
sub
gs
test
mov
adc
loopne
xor
stc
push
push
repz
sub
jnp
imul
shrb
es
scas
lods
cmp
add
leave
int3
in
popl
loope
dec
adc
mov
pop
or
or
sub
jb
adc
xchg
cmp
nop
mov
sub
into
and
sub
pop
sbb
gs
scas
nop
fadds
mov
pop
lcall
xchg
inc
repnz
in
pop
ret
xchg
pushf
iret
jnp
cltd
in
int
sbb
and
pop
loope
or
movsl
mov
fmull
mov
and
aas
leave
and
jns
and
push
pop
out
mov
jbe
cmp
jp
mov
les
cmp
lods
sbb
loope
xor
in
pop
nop
pusha
shl
jmp
aaa
dec
outsb
mov
into
mov
cmp
dec
pop
dec
fstl
mov
scas
sub
adc
jmp
mov
popf
shlb
arpl
add
lahf
sub
jg
mov
xchg
pushf
push
fstps
lods
sahf
xchg
cmpsl
inc
jmp
push
push
test
jp
and
in
fidivl
jbe
cltd
insb
jb
loop
mov
fwait
rcll
pop
add
dec
cmp
add
mov
pop
push
ret
and
bound
ja
dec
pop
in
mov
inc
daa
dec
push
jle
in
loope
fidivrl
into
fmuls
pop
push
pop
pusha
sub
fidivs
lods
pushf
mov
icebp
pop
xorl
sub
xchg
inc
testb
mov
mov
lock
jge
pop
in
adc
jecxz
test
cmc
push
jne
cmpsl
xor
or
mov
add
xchg
stos
aas
push
out
cli
out
fldcw
cmpsb
sbb
test
mov
xor
mov
das
and
cmp
and
or
test
xchg
fs
add
shl
inc
xor
xor
or
loop
lods
cmp
in
xor
lock
mov
and
insb
fwait
lds
je
pop
in
in
pushf
cmp
fistpl
cmpsl
bound
cmp
cmp
inc
xchg
sub
mov
negb
adc
push
lret
int
dec
cmpl
adc
add
dec
pusha
sbb
arpl
in
and
mov
stos
adc
sub
xor
mov
jge
and
mov
ja
ja
enter
xchg
jge
cmpsl
pop
dec
in
bound
insb
fbld
aas
push
jo
cmp
aam
in
bound
mov
ja
mov
je
subl
arpl
jg
add
jne
inc
jl
mov
jbe
inc
daa
sarl
mov
rol
sbb
lods
sbb
pop
js
inc
mov
mov
pop
cli
imul
mov
adc
ljmp
arpl
xchg
movsb
adc
addr16
xchg
push
data16
push
cmpl
mov
jns
imul
pop
mov
sub
movb
daa
fstpl
pop
jmp
xchg
int
and
mov
das
xor
pop
mov
xor
test
cld
dec
add
shrb
je
imul
aaa
int3
cwtl
mull
sub
dec
nop
jecxz
orb
mov
lods
insl
jbe
insl
xor
push
and
xchg
test
out
jns
leave
pop
test
ret
cmp
sahf
cld
bound
ret
popf
les
jmp
outsl
or
hlt
add
sbb
fiadds
sbb
xor
jecxz
out
outsb
fidivrl
push
and
push
dec
mov
pushw
lret
ljmpw
push
push
or
dec
int3
test
xchg
sti
xor
adc
cwtl
inc
fnstsw
roll
ds
cli
xchg
xchg
add
adc
test
arpl
add
test
xor
fnstsw
fs
call
fisttps
adc
jns
adc
shll
scas
enter
cmc
outsl
fsubp
ds
mov
loope
push
cs
pop
and
leave
clc
imul
mov
inc
std
shll
repnz
shl
hlt
fs
mov
mov
fs
mov
sti
xor
dec
rcrb
test
ss
push
push
inc
inc
test
and
push
lds
pop
pop
jle
stos
movb
bound
xrelease
shll
sub
xor
xchg
push
shlb
or
sub
pop
cs
fbstp
iret
and
nop
xor
ss
loope
into
out
hlt
push
bound
inc
rclb
jp
push
mov
adc
mulb
movsb
jne
xchg
jnp
lods
fimull
insl
sbbl
int
push
jl
mov
push
scas
adc
ss
mov
lcall
frstor
in
jbe
mov
lcall
jmp
fsubs
sahf
dec
sub
jp
shl
fcomip
adc
imul
xchg
lret
addr16
jmp
int3
and
daa
or
sub
sbb
int3
xor
movsl
mov
pop
jecxz
dec
inc
push
dec
inc
jne
dec
out
cmp
lahf
push
cltd
xlat
mov
loopne
mov
jb
insl
fnstcw
repz
sub
jecxz
xchg
shlb
call
cwtl
movsb
sbb
sarb
xor
inc
lar
repz
loopne
push
jge
jmp
sbb
push
xlat
add
xchg
and
aad
xor
push
rcrl
dec
movsl
pop
ficomps
dec
enter
xchg
clc
dec
adc
clc
cmp
scas
pop
mov
in
and
lcall
cltd
add
clc
mov
sbb
fwait
loop
dec
sub
inc
sbb
mov
mov
je
add
mov
out
jl
mov
jnp
call
cmp
into
scas
stc
lahf
ss
aaa
pushl
jecxz
push
addr16
lods
xorb
scas
fmull
mov
out
mov
and
jo
cltd
std
push
xchg
mov
xor
mov
shll
out
jo
aaa
cmpsb
out
int
add
mov
and
pop
and
xchg
inc
adc
stc
and
sub
jno
pop
jle
push
push
cmp
xchg
mov
lea
iret
sbb
stos
mov
sub
and
cmc
jle
mov
fcompl
dec
xchg
lock
test
dec
xor
fidivs
xchg
mov
dec
daa
or
and
shrb
mov
pop
sbb
add
in
adc
pop
mov
out
rorb
out
xchg
adc
mov
xor
mov
pop
inc
fnstcw
lcall
jge
test
pop
in
aad
repz
emms
jp
std
dec
push
pop
fmull
mov
icebp
aas
test
movsl
sbb
push
jle
mov
lcall
sahf
fildl
cmc
mov
and
ficoms
xlat
aam
cld
mov
ja
push
je
mov
sti
or
jns
push
lods
lea
in
mov
lds
mov
repnz
mov
sub
and
pusha
inc
add
pop
dec
or
adc
jb
push
cmpb
lea
cs
ljmp
outsl
into
mov
rcr
dec
mov
mov
mov
mov
cmp
mov
ficoms
out
loope
cmpsl
test
in
jno
lods
push
cmc
jge
mov
das
out
cmpb
popf
sub
jge
sbb
pop
negl
mov
pop
hlt
nop
test
or
mov
lock
or
push
sbb
sub
add
stos
add
ja
int3
and
loopne
lret
or
fstpl
fidivrl
cmp
call
xchg
add
lcall
jb
cs
popf
dec
jne
and
into
dec
imul
and
xchg
lcall
popf
dec
cmpsb
push
mov
sbb
stc
iret
inc
std
in
scas
es
sub
imul
lods
adc
push
mov
xor
in
mov
jno
lods
call
and
pop
ret
sti
insl
mov
sarb
hlt
push
add
sub
xchg
lcall
or
xor
or
lcall
fadd
inc
or
pop
mov
or
out
push
pop
push
js
jle,pt
nop
sbb
mov
fistpll
aaa
mov
out
mov
cltd
push
mov
push
sahf
pop
cmpsl
movsl
xor
sub
je
adc
movsl
adcb
inc
cmp
int3
in
adc
stos
lock
clc
inc
sarb
cmpsb
xchg
or
mov
stos
or
pushf
rcrb
pop
xchg
or
add
subb
xor
mov
jle
xor
mov
shl
in
shlb
xchg
iret
mov
add
xchg
mov
mov
insb
adc
and
jno
std
cld
jnp
sahf
add
mov
dec
out
adc
jo
mov
stc
mov
jns
fcmovnu
addr16
pop
pop
push
pop
repz
test
dec
pop
mov
pusha
out
imul
lret
pushf
out
push
add
inc
mov
mov
mov
test
xchg
idivb
mov
pop
loopne
pop
sar
insb
or
flds
out
cmp
pop
ss
out
fstpl
cs
mov
orl
popf
mov
outsb
das
stos
jno
stos
jb
adc
out
sub
stc
das
mov
cld
pushf
fisubl
fldcw
jmp
data16
outsb
fwait
ret
shlb
pop
cmp
jp
scas
imul
jno
out
push
scas
mov
jae
ret
xchg
sub
dec
add
aad
xor
mov
aam
pusha
cld
pop
jl
pop
mov
outsl
aad
ljmp
inc
cmc
les
push
scas
cmp
mov
fs
cmp
js
mov
xor
sub
arpl
add
mov
add
sahf
int3
xchg
mov
fwait
out
movsl
jno
push
rcl
cmpsb
cmp
or
sub
sbb
lret
aam
push
xorl
arpl
and
rclb
outsl
aas
cli
pop
mov
cmpsl
in
in
jo
std
and
mov
xor
je
pop
sbb
test
movsb
add
ds
inc
aad
or
in
and
mov
repnz
jle
loop
into
or
std
inc
das
cmpsb
aam
dec
insl
push
fisubl
jg
mov
add
and
daa
inc
ds
loope
shl
loopne
leave
xor
mulb
xchg
movsl
dec
add
iret
xchg
pop
fwait
into
je
fwait
test
test
cmp
and
stos
in
push
mov
mov
mov
leave
les
push
push
sub
or
lahf
jecxz
bound
insl
push
in
or
repz
push
hlt
popf
mov
in
push
or
movsb
andb
das
divps
dec
cmp
insl
pop
mov
xchg
mov
rorl
mov
hlt
mov
out
faddp
xchg
repz
cmpsl
adc
xchg
xchg
inc
je
hlt
in
xor
pop
push
movsl
add
negb
cli
sub
fmulp
ret
or
out
cmp
lds
pop
push
popa
dec
dec
pusha
ds
popf
xor
push
xchg
test
adc
xchg
aad
insb
jbe
loopne
jnp
pop
pop
and
xchg
pop
scas
jbe
pop
inc
sbb
data16
sbb
pusha
rcrb
loopne
testl
xchg
rorb
jg
int
popa
xchg
pop
pop
inc
outsb
push
mov
into
ja
adc
jo
in
ret
ss
dec
cli
imul
pop
dec
inc
subb
fs
dec
call
testb
bound
inc
push
test
int
push
jg
loope
xchg
mov
sahf
adc
and
in
sahf
xor
pop
cltd
pop
das
sarl
xor
loope
mov
inc
movsl
mov
imul
or
mov
ret
inc
fcmove
push
test
and
cmp
jmp
sbb
or
stos
ret
mov
mov
push
arpl
insb
pop
cmp
xchg
outsb
inc
pop
inc
push
add
push
sbb
test
cltd
popa
aad
repz
xchg
cltd
cmpsl
aam
out
pop
int
js
repz
shll
test
bound
push
cltd
sbb
icebp
xor
cs
outsl
mov
jns
mov
stos
es
sub
outsl
dec
jo
ljmp
xor
xchg
xor
ficoml
push
xlat
into
xchg
bound
sub
push
dec
sub
jb
insb
sub
add
pop
or
mov
mov
mov
fsubs
or
xchg
cltd
xor
sbb
mov
or
jge
jl
sub
cmp
inc
mov
add
in
add
xor
sub
xchg
mov
sti
pop
sub
jb
fdivr
out
outsl
push
pop
lea
cmp
xor
loope
pop
mov
lret
sub
adc
push
shlb
xchg
and
dec
mov
in
lds
add
aas
arpl
xchg
pop
push
adc
cltd
lea
xchg
repz
push
mov
cmp
bound
push
xchg
adc
mov
loope
inc
mov
cmp
int3
xchg
jns
or
movsb
dec
popf
dec
push
xchg
ja
out
pop
cmp
fstl
push
rorb
fdivrl
pop
xor
inc
stos
sub
jb
xor
jg
and
xchg
repz
cmpsl
idiv
scas
push
enter
or
sbb
scas
mov
or
call
mov
test
cld
cmp
aad
data16
pop
ja
outsb
sbb
ds
pop
loop
shr
lea
xchg
scas
cmpsl
fstl
setb
sbb
inc
mov
and
jnp
adc
pop
shll
and
and
bound
mov
test
pop
cs
in
pop
xchg
pop
ret
data16
mov
out
dec
movsb
jne
mov
mov
fs
lods
scas
lret
ja
mov
jbe
sbb
int
pushf
notb
mov
add
push
push
adc
repnz
out
mov
iret
scas
rclb
cmp
xor
mov
mov
jecxz
xchg
call
mov
sub
in
jns
cmp
movsl
rcrl
and
or
jecxz
xchg
shrl
sub
xchg
push
cmpsb
mov
pop
ds
cmp
loope
xor
ret
mov
mov
add
mov
ja
cmpsl
lds
int3
xor
or
dec
cmpsl
aad
push
shlb
testb
jnp
mov
or
jle
push
adc
jae
cmp
imul
cmpsl
out
pop
repz
psrlw
mov
stc
in
out
popf
loope
adc
mov
call
sbb
int
fimuls
xor
and
or
mov
sub
adc
mov
and
mov
jmp
int
dec
jns
xlat
pop
inc
popf
jb
mov
test
inc
sbb
jmp
jb
call
push
push
dec
jno
cltd
xor
subb
xchg
sarb
jmp
arpl
in
imul
xchg
mov
insl
shlb
das
mov
dec
ja
addr16
mov
jne
insb
in
cli
mov
das
mov
and
sbb
ss
mov
fisttpl
aaa
aad
fs
loope
std
jmp
lret
sahf
imul
rolb
das
cmp
addr16
xor
sti
mov
push
dec
incb
or
in
jmp
xor
icebp
mov
repnz
xor
repz
lret
jge
sbb
daa
sub
mov
leave
inc
add
mov
mov
sti
rorb
in
pop
mov
scas
sub
out
sti
and
out
sbb
sbb
popa
push
dec
mov
fistl
sub
ja
inc
outsl
ja
or
lret
jne
push
sbb
ss
add
push
les
into
cmpsl
in
loopne
xchg
hlt
mov
pop
test
pop
dec
repnz
movsl
clc
or
sub
add
adc
xlat
int3
int
cmp
stc
dec
popf
clc
aas
inc
call
xor
and
or
pop
fildll
add
or
int3
cmp
mov
rol
adc
push
test
pushf
jbe
mov
jnp
aaa
lcall
pusha
jo
or
sbb
add
testl
arpl
loopne
and
sub
sbb
and
mov
cmpsl
sbb
and
int3
xchg
adc
out
repnz
and
jae
lret
xor
test
icebp
sub
jmp
scas
pop
cs
jecxz
xchg
sub
adc
hlt
jl
pop
mov
sub
daa
test
cmpsl
adc
and
test
push
hlt
aam
data16
mov
sub
lcall
out
scas
push
push
or
cmpsb
movsb
mov
add
adcb
cmp
jne
and
mov
lcall
pop
jno
pop
mov
cmp
dec
or
sub
mov
or
dec
or
adcl
inc
test
sbb
push
adc
mov
xor
mov
adc
inc
fwait
or
in
lcall
inc
cmp
ret
xor
fadds
or
xlat
stos
mov
jp
xchg
xor
push
jo
sub
ficoms
and
lods
sbb
mov
cmp
shr
mov
push
lahf
cmc
popf
adc
jae
fldcw
push
aad
sbb
cli
adc
pop
les
and
mov
xor
jb
pop
cli
push
sub
rorl
jp
dec
jo
out
daa
pop
jo
lds
jbe
push
add
out
sahf
imul
pop
cmp
iret
jne
or
jae
icebp
mov
fsubr
cld
std
test
xorl
mov
push
fisubl
push
movsb
add
or
or
jns
sbb
pop
adc
push
daa
cs
into
sbb
jmp
jbe
iret
push
add
xchg
imul
mov
cwtl
pop
and
out
nop
and
push
insb
outsl
inc
inc
out
dec
push
shrb
inc
jae
adc
aam
xchg
mov
data16
mov
fistps
test
dec
adc
push
aas
imul
cld
or
popl
pusha
outsl
repnz
scas
arpl
mov
xchg
lods
push
add
idivb
cmp
mov
iret
mov
repnz
mov
xchg
add
and
push
aad
or
jae
cmp
loopne
xchg
bound
imul
mov
push
outsl
xchg
cmp
cmp
inc
in
adc
in
sub
lahf
das
xor
cmp
xchg
cld
inc
or
sub
js
xchg
std
in
sbb
or
xchg
adc
test
mov
mov
subl
xor
aam
adc
sbb
mov
loopne
ljmp
sub
mov
or
outsb
repz
dec
inc
outsl
pushf
fimuls
push
outsb
push
sbb
push
mov
cmp
add
lea
sub
dec
mov
fistpll
nop
or
mov
sbb
sbb
inc
xor
into
sub
dec
mov
cmpsb
mov
aad
xchg
mov
mov
adc
fiadds
mov
pop
out
aam
inc
jno
adcb
pop
mov
or
inc
and
add
popf
pop
adc
popa
mov
push
cltd
int3
test
loope
jns
dec
inc
dec
xchg
dec
lock
aad
mov
int3
xor
jmp
xchg
fisttps
xor
ret
add
push
ret
jmp
enter
mov
inc
jg
sbb
fadds
and
mov
arpl
int
mov
mov
test
scas
subl
pop
add
das
popf
jbe
ljmp
xor
dec
pop
add
daa
xchg
jecxz
xor
jae
sub
scas
adc
cltd
scas
mov
jmp
insl
daa
les
jmp
cmp
mov
mov
stc
sub
mov
ret
jae
inc
lcall
mov
ret
and
or
lret
dec
insb
inc
mulb
cmpsb
jnp
dec
mov
hlt
ret
movsl
push
mov
lods
cmp
or
mov
cmp
mov
sub
sti
mov
xchg
adc
stc
push
mov
inc
mov
out
and
sub
vprotb
test
cltd
scas
fstl
scas
mov
sbb
shrl
clc
sbb
cli
adc
fisttps
sbb
loop
jl
jmp
mov
xchg
sti
ja
cmpb
xchg
stos
sbb
jl
and
jge
in
pmulhw
pop
push
pushf
mov
fisubrs
push
loope
outsl
mov
loope
fbstp
cmc
sub
inc
xchg
icebp
xorl
outsb
insl
scas
mov
insb
mov
mov
dec
dec
adc
dec
mov
ss
and
pop
xor
gs
aad
ljmp
test
ja
movsl
pop
fcoml
dec
ds
addr16
js
lock
push
sub
mov
xchg
fcomps
stc
insb
mov
imul
imul
out
or
xor
mov
sahf
pop
loopne
std
hlt
and
arpl
mov
mov
loope
inc
jmp
pop
repnz
xchg
fnsave
or
in
mov
dec
and
ret
inc
test
into
mov
and
iret
popa
not
mov
out
pop
jle
pop
pop
xor
mov
and
jle
sbb
add
shlb
aad
cli
pop
aad
lahf
pop
mov
fdivrl
push
loop
sahf
cwtl
dec
sbb
lods
push
adc
or
test
and
in
stc
in
cmp
cmp
mov
outsb
mov
inc
imul
cli
fwait
xchg
ja
jl
jl
jge
push
mov
adcb
out
pop
push
jb
stc
sub
mov
and
stc
mov
dec
jno
push
testl
insl
outsb
jg
mov
fcompl
sub
out
out
jno
lds
faddl
jg
mov
stos
push
push
mov
fdivrs
xchg
sbb
data16
dec
test
mov
and
sbb
stos
and
adc
jle
ret
add
cmc
divl
push
clc
clc
sbb
pop
cli
or
mov
fildll
mov
test
pop
pop
mov
xor
mov
mov
outsb
sub
sub
rorl
iret
push
push
pusha
adc
fistpl
scas
mov
pop
and
lods
jecxz
rolb
pushf
xlat
fwait
addr16
popf
xor
outsl
cmp
cmp
pop
repnz
mov
jmp
cmpb
incl
mov
push
xor
aad
or
test
aas
dec
jne
in
cmp
xor
jle
sub
xlat
mov
rcrb
loopne
mov
loope
aas
mov
or
lods
xor
push
sub
imul
or
inc
icebp
xchg
das
add
sub
add
mov
adc
cmp
push
sbb
add
adc
jmp
lret
mov
mov
sub
inc
adc
iret
mov
fdiv
mov
or
inc
and
fwait
add
jecxz
add
inc
push
dec
adc
xor
and
jg
inc
outsb
loop
sbb
dec
mov
sub
mov
hlt
into
mov
testl
and
pop
cmp
ficoml
inc
stos
daa
mov
jo
loopne
inc
fstpt
mov
leave
xchg
jbe
daa
hlt
shlb
or
daa
insl
add
popf
dec
or
adc
jp
jp
pop
aam
das
push
xlat
and
cld
je
and
sbb
or
cmp
sub
mov
das
xor
pop
pop
xchg
pop
scas
dec
shll
mov
push
mov
loope
dec
ret
mov
mov
aad
sbb
adcb
mov
nop
pop
and
fsubs
pop
mov
iret
add
insb
ss
sbb
push
orl
jbe
fistl
fstpt
icebp
xor
or
icebp
outsl
push
inc
mov
and
es
addr16
cld
clc
in
pop
idiv
jge
xor
dec
cmp
loopne
je
or
fcomi
lods
push
jmp
xor
jb
mov
fstpl
add
and
push
inc
or
push
movsl
repnz
out
push
lahf
neg
lods
or
repz
xchg
xchg
fwait
test
out
mov
popf
adc
dec
jnp
pop
or
mov
xchg
popf
and
stos
push
sbb
dec
stc
jl
push
fst
scas
ds
out
int3
movsb
out
mov
lods
fsubrl
in
sbb
int
xor
outsl
jp
popa
pop
sahf
das
andl
insb
xchg
loopne
stos
jg
clc
jo
stos
mov
dec
jns
pop
sub
cld
and
cmpsb
or
adc
pop
mov
inc
ret
arpl
iret
and
dec
push
pop
mov
xchg
sub
lret
jb
sub
into
xor
lock
or
cmc
loopne
daa
jmp
fwait
dec
pop
mov
outsl
lock
mov
mov
ficompl
fstpt
add
scas
or
mov
push
jb
aad
xchg
outsl
sbb
mov
icebp
leave
icebp
sbbb
sbb
pop
xorl
roll
mov
mov
mov
loop
pop
jne
lea
xor
fwait
imul
pop
addr16
or
cmpsb
bound
or
sub
repz
sub
xchg
xchg
mov
mov
jo
jle
push
fs
dec
aaa
out
loope
imul
cli
je
ja
out
into
stos
xor
les
cmp
fisubrs
scas
cmp
mov
rcrb
cld
xlat
cmp
xlat
or
orb
jle
mov
sub
sbb
push
push
lret
xlat
xor
fimull
sub
mov
sub
mov
movsb
pop
jge
popa
lods
fimuls
call
mov
mov
push
sub
add
ljmp
ja
faddl
call
jecxz
cmpsl
push
add
loopne
xchg
test
jmp
pop
push
shll
sub
in
shrb
pop
mov
jg
jmp
push
mov
lret
jo
test
ret
bound
jmp
pop
inc
mov
mov
pop
dec
mov
sbb
jge
inc
and
nop
sbb
shll
lds
and
xchg
lods
mov
sahf
rcl
shlb
sbb
adcl
pop
mov
add
loope
sti
xchg
test
ss
lea
out
mov
repnz
xchg
jle
lods
sbb
in
fdivs
bound
pxor
aaa
cwtl
sub
sub
out
add
lods
fwait
sbb
sub
xchg
fwait
sub
cli
test
aad
sbb
dec
in
fisubrl
leave
shll
inc
lret
xchg
lret
lds
rolb
inc
fs
in
shr
sbbb
and
out
sbb
cmp
xchg
xchg
mov
addr16
adc
pop
sbb
push
fdivrs
ljmp
cmpsb
shlb
fcomps
sub
cmp
pop
push
add
adc
xlat
xchg
into
cmpsl
jle
lods
sub
inc
xor
lret
push
sbb
aaa
andb
cmp
xchg
imul
in
ficomps
jmp
lock
cmpsl
je
mov
inc
or
insb
cs
and
test
cli
sti
mov
andb
xor
pusha
fyl2xp1
ficoms
add
mov
lret
push
aad
pop
sarb
imul
aas
xor
ror
xacquire
xor
jne
mov
iret
jns
or
leave
adc
mov
mov
fdivrl
sti
adc
shlb
jo
cli
push
jne
jge
jns
dec
fiadds
add
xchg
in
popa
imul
pop
bound
push
xchg
inc
sub
add
mov
imul
pop
push
dec
bound
jb
add
or
js
ja
cmc
xor
dec
push
mov
cld
xchg
scas
xor
xchg
and
int
sbb
aad
int3
jle
aad
loop
leave
mov
inc
mov
stc
push
inc
push
int3
mov
mov
fs
and
and
imul
incb
jae
xor
pop
int3
and
movsb
xchg
or
movsb
xchg
pop
inc
push
iret
or
pop
popa
pusha
dec
push
nop
lock
jp
outsl
cmp
fiadds
xchg
cmpsl
mov
lods
std
mov
imul
or
icebp
mov
std
jb
xchg
sub
cmp
sbb
pop
mov
sti
sbb
lds
mov
fstpt
xchg
xor
out
cmp
push
addr16
pop
inc
les
mov
mov
push
cmp
adc
and
jne
or
je
adc
cli
fisubs
pop
pop
cmc
jg
scas
cltd
popl
adc
in
cmp
add
jge
sbb
mov
push
pushf
xchg
jo
sub
push
or
mov
xchg
das
mov
shrb
inc
sbb
pushf
and
stos
mov
sbb
test
movsb
jmp
xchg
inc
repz
imul
ret
push
push
mov
nop
aam
popa
sbb
leave
iret
xchg
xchg
adc
jl
mov
in
in
and
dec
cltd
lods
es
test
clc
arpl
cmp
in
mov
push
xchg
inc
filds
adc
cmpsb
sub
jno
jecxz
jno
fs
cmp
and
shll
loop
stos
and
fimull
push
in
aam
mov
inc
mov
les
insb
push
icebp
sbb
cmp
xchg
rol
lcall
cmc
cltd
pop
dec
jns
bound
push
iret
es
xor
stos
xor
add
push
adc
inc
roll
push
xchg
sub
xor
cmc
xor
stos
rcl
dec
inc
and
mov
aaa
addr16
sahf
aas
inc
iret
loopne
push
dec
cwtl
pop
addr16
test
sbb
imull
mov
mov
mov
loopne
adc
std
pop
cmp
lcall
je
mov
push
ds
cmp
mov
les
shl
scas
aaa
push
adc
mov
or
jge
mov
add
insl
icebp
sub
push
je
push
sub
dec
jns
sub
sbb
stos
sbb
lds
jge
sub
dec
xchg
pop
and
into
pushl
push
and
pop
fildll
mov
sub
adc
or
icebp
cwtl
pusha
cmp
add
int3
mov
sbb
xor
jb
shrl
in
or
push
lahf
icebp
jecxz
dec
movsl
push
int3
jb
das
rcrl
and
inc
xchg
xor
divl
invd
adc
test
out
mov
in
xor
je
fisubl
ja
dec
cmp
jo
sbb
fidivrl
mov
add
xor
loop
cs
mov
jbe
add
lods
push
imul
out
sarl
int3
jnp
fs
push
inc
dec
inc
loopne
clc
dec
push
mov
cmp
xor
nop
fbstp
adc
sahf
ds
lods
aaa
movsb
in
je
enter
rcrl
sbbl
outsb
pop
pop
faddl
mov
add
push
cli
fimull
mov
arpl
add
fxch
jmp
outsb
pusha
mov
leave
mov
mov
cmp
jbe
push
loop
add
xchg
or
sti
mov
mov
xchg
mov
xlat
andb
sti
cmc
pop
repnz
ds
out
and
test
dec
ja
mov
cmp
and
movsb
pop
inc
jp
xlat
mov
push
pop
adc
and
pop
in
jmp
and
icebp
mov
clc
leave
f2xm1
sbb
ja
push
and
mov
mov
je
push
cmpsl
mov
mov
adc
xchg
lcall
orl
jae
mov
outsl
popl
cmp
movsb
lret
pop
std
data16
and
push
and
test
icebp
push
gs
in
jne
jns
lods
mov
fnsave
cmp
xor
sub
imul
dec
insl
int
sahf
out
shlb
aas
cmp
cltd
aaa
cmpsb
mov
inc
out
push
push
mov
scas
stos
pop
rorl
pop
sub
mov
inc
mov
jp
lcall
sti
rcr
mov
sbb
fdivp
scas
adc
xchg
push
xorl
js
pop
cmpsb
test
cmpsb
and
pop
jge
inc
popa
xchg
pop
or
cs
lret
mov
sub
push
rorb
jo
cmpsb
insb
outsb
int3
ret
mov
cmp
aaa
or
jge
inc
mov
fstl
adc
mov
xchg
nop
test
jge
pushaw
and
hlt
fcomi
mov
jae
jp
jo
outsl
js
movsb
jno
inc
mov
push
sbb
aad
cwtl
imul
andl
ja
test
test
mov
sbb
mov
mov
popf
jno
pop
lds
add
jno
leave
pop
mov
mov
cmc
mov
js
dec
je
and
push
xor
cmpsl
inc
mov
addl
dec
ds
pop
mov
pop
fcmovu
hlt
xchg
mov
mov
fwait
xorl
mov
xchg
loope
gs
mov
idivb
mov
inc
push
jae
fistpll
add
out
clc
sub
inc
call
push
cmp
lahf
ja
jmp
imull
sub
jecxz
dec
test
inc
cmp
clc
cmpsb
cmpsb
addb
repnz
sbb
imul
push
in
xor
dec
inc
xchg
cmc
fs
xchg
mov
in
cpuid
pop
das
aaa
mov
push
fdivrl
and
pop
adc
out
cltd
test
mov
in
enter
mov
insl
mov
mov
add
jge
dec
jle
int
sub
push
jp
cwtl
inc
daa
mov
mov
bound
shll
jp
insb
loopne
enter
pop
aad
movsb
stos
dec
dec
sbb
pop
insl
aad
sbb
dec
and
mov
pop
pop
cmp
outsl
stc
stc
ret
roll
lods
daa
sarb
mov
adc
cs
out
shrb
sub
and
aam
bound
in
sarl
sbb
in
cs
call
xchg
lds
sti
popa
mov
cli
cmp
outsb
xchg
rorl
cmc
inc
iret
in
adc
xor
aaa
in
mov
enter
pushl
das
adc
shrl
jle
push
icebp
push
xor
xor
add
mov
fistps
sub
in
mov
insb
jecxz
test
inc
sbb
test
enter
mov
jae
inc
in
lahf
pusha
push
je
cmp
jns
push
andl
mov
stos
mov
flds
cmp
mov
mov
imul
je
andb
imul
mov
test
jl
xchg
leave
jae
je
cmpl
or
xchg
rorl
ss
jmp
pop
mov
ds
push
xchg
cmp
mov
inc
push
and
jo
xlat
push
push
jg
push
insl
int3
push
pop
mov
mov
lods
shrl
jmp
adc
mov
jnp
arpl
mov
std
lahf
mov
xor
loopne
dec
sub
outsl
sbb
nop
or
sbb
repnz
mov
sbb
push
outsb
enter
in
cld
cmp
xchg
adc
popf
adc
pop
sub
xor
leave
sbb
pop
or
insb
xor
in
pop
or
or
insb
xchg
fwait
add
cmp
push
fcmove
bound
inc
ret
lea
sub
mov
test
fidivrs
outsb
lods
call
push
xor
jno
sti
test
jmp
inc
inc
lahf
mov
shrb
popa
jnp
cs
dec
lods
dec
xchg
adc
pop
push
sub
xor
dec
popw
inc
lods
push
cli
jp
dec
push
jns
lahf
push
mov
dec
push
fwait
xor
mov
mov
cmp
push
mov
jne
aas
iret
movsb
lods
and
sub
dec
cmpsb
sbb
neg
and
jb
and
vpsubsw
jmp
pop
push
std
cmp
loope
xchg
and
daa
inc
sahf
pop
mov
mov
in
xlat
ffree
clc
fwait
out
cmpsb
pop
sahf
decb
dec
jnp
pusha
insl
sub
jecxz
dec
insl
daa
jge
js
cmpl
divb
cmp
adc
jge
mov
xor
popa
enter
pushf
loopne
or
in
mov
imulb
or
scas
xchg
sbb
mov
and
popl
or
pop
push
and
cmpsl
shl
in
jmp
sub
inc
popa
ja
cs
cmp
pop
mov
lods
jne
cltd
and
push
insb
testb
xchg
pusha
xchg
fs
cmpsb
rorl
fsubrs
sahf
xchg
pop
movsb
push
scas
fbld
cmp
arpl
mull
inc
lret
push
pop
sti
outsl
cmp
cs
insl
out
daa
adc
cmp
xor
test
adc
rcrb
stos
xor
movsb
test
cltd
adcl
or
jmp
fnsave
push
push
enter
add
fstpt
cmp
test
hlt
sbb
dec
dec
mov
lcall
cmp
push
pop
rorb
addr16
fs
movsl
adc
push
push
cld
cld
cmp
shlb
loop
lret
mov
dec
xchg
pop
mov
scas
orl
cmp
cmp
scas
mov
lock
arpl
and
xlat
filds
cmpsb
mov
dec
pop
pop
leave
jl
pop
jno
jns
fisttpl
mov
sub
xor
pop
lds
das
test
xor
cmpsb
inc
fisubs
bswap
mov
pop
adc
sete
repnz
ds
pushf
sarb
movsl
fsts
sbb
jno
pop
cmp
out
fsubl
xlat
pop
mov
dec
pop
or
jecxz
inc
jae
cmp
fidivrs
pop
pop
cwtl
or
cmp
push
ret
mov
pop
mov
jmp
sbb
and
cld
ja
sbb
imul
push
loop
aas
pusha
mov
out
gs
cmp
les
out
jnp
inc
mov
test
daa
xor
out
movsb
test
sbb
sbb
test
mov
aam
mov
and
test
stc
jb
push
add
dec
loopne
and
jmp
fbld
ret
gs
mov
xchg
add
mov
dec
mov
and
and
jmp
lcall
push
dec
dec
stc
sbb
or
push
pop
inc
jl
or
insl
mov
inc
xor
and
push
mov
push
lds
nopl
push
test
mov
in
daa
jno
leave
pop
dec
add
cmp
mov
ret
push
mov
pop
test
sbb
xchg
and
inc
loopne
adc
adc
call
cmp
inc
jg
jno
pop
aas
shr
enter
jo
and
pop
add
bound
dec
clc
sbb
dec
fistpll
push
cmp
mov
xchg
aas
xchg
loopne
gs
mov
dec
mov
sbb
jne
aaa
ja
ja
aas
cmpsb
repnz
subl
dec
out
add
and
jns
xchg
clc
cmp
leave
xchg
mov
rcrb
ss
repnz
cmp
les
add
cmp
mov
mov
movsl
bound
lahf
mov
hlt
or
or
mov
arpl
cmp
sarl
mov
les
dec
scas
lret
out
pop
mov
cwtl
adcb
sahf
mov
adc
jo
shlb
repnz
popf
sub
int
mov
nop
lcall
xlat
les
push
cld
sbb
mov
aam
or
or
mov
jne
cs
std
arpl
xor
mov
xchg
cmp
loopne
mov
jmp
sub
bound
sub
dec
hlt
mov
mov
outsl
mov
add
add
loope
mov
mov
add
cmp
mov
and
cmpsl
ret
into
adc
xlat
xor
xor
mov
mov
loop
sub
int
mov
xor
pushf
cli
dec
jle
xor
jnp
push
pop
aas
lods
push
test
mov
enter
in
popf
mov
xchg
jne
icebp
lock
mov
out
push
mov
xor
dec
rorl
hlt
push
jns
adc
cmp
pop
imulb
in
lea
xchg
mov
loope
jg
test
cmpsl
stos
in
pop
adcl
es
outsb
lods
jo
or
pop
sbb
sub
pop
pop
push
xor
pop
adc
ficoms
enter
test
xor
fcmovnu
add
insl
shlb
adc
movsb
loop
addps
stos
mov
les
int
cmp
shrl
lret
scas
jmp
push
inc
pop
push
sub
mov
call
popf
shlb
xor
pop
fst
xor
stc
inc
sub
insl
mov
xlat
ljmp
pushl
ja
mov
pushf
pushf
jmp
inc
sbb
add
pop
cmpsl
hlt
test
rol
lret
notl
xlat
fnclex
push
pop
sbb
int3
adc
out
in
clc
push
addl
sub
inc
xor
inc
sti
jp
movsl
rorl
push
int3
xchg
xor
inc
aad
sbb
scas
repz
mov
stos
mov
xor
in
out
xor
mov
dec
sub
xchg
xchg
mov
dec
mov
rolb
imul
mov
orb
jno
mov
out
xchg
lahf
adc
push
out
cmp
xchg
inc
mov
inc
adc
nop
frstor
std
loopne
nop
xchg
imul
lock
push
mov
aaa
sub
add
lock
sbb
leave
or
es
jne
scas
xchg
and
scas
insb
mov
add
xchg
mov
add
lahf
pop
lock
dec
push
das
pop
bound
xor
jne
mov
add
loope
push
rcl
popf
pop
imul
jle
hlt
frstor
dec
shrl
pop
inc
dec
outsb
mov
testl
js
sub
mov
sbb
inc
fs
jae
inc
xchg
sub
in
sbb
lcall
mov
adc
dec
rcll
push
movsb
icebp
popl
sbb
or
dec
xor
or
sbb
xor
lret
mov
pop
push
paddq
pop
fdivs
or
sub
in
xor
lods
std
pop
shrl
fldl
hlt
and
mov
pushf
cmp
shrb
clc
mov
xchg
mov
and
inc
inc
add
stos
push
mov
cli
dec
int
add
rcrl
sahf
stos
rcrl
out
aaa
jno
xor
insb
cs
xchg
or
mov
dec
push
lahf
inc
in
or
repz
iret
add
loop
cmp
inc
in
loopne
test
data16
sub
loop
inc
int3
rcll
adc
hlt
pop
cmpxchg
jb
ja
adc
mov
push
mov
popl
sbb
pop
in
mov
pop
xchg
test
push
inc
dec
mov
fsubl
mov
lds
pop
mov
mov
mov
cmpsb
mov
lcall
sub
aam
das
push
cmp
out
insl
lods
push
leave
adc
into
sub
sarb
mov
js
xor
out
or
push
inc
pop
sbb
ret
cli
dec
int3
push
iret
xchg
sub
sub
dec
hlt
test
out
push
push
hlt
movsb
mov
cmp
out
dec
inc
ds
ret
pop
cmp
cld
lret
orl
loop
push
aad
xchg
ret
test
pop
movsl
ss
fiaddl
sub
test
aas
insb
and
mov
repnz
arpl
repz
pop
nop
sahf
and
push
out
mov
aad
add
jne
jl
xchg
jge
arpl
or
or
call
popf
sbb
ds
cmp
divb
in
pop
lods
mov
add
xor
lods
aaa
mov
leave
mov
cmp
into
add
fstp
fbstp
push
notl
dec
pop
insl
sbbb
jecxz
inc
cmpsb
sub
mov
test
mov
stos
mov
andb
cmpsb
sbb
shl
fimuls
scas
mov
push
cmp
adc
mov
in
out
jnp
lahf
repz
ret
mov
cmp
xor
inc
and
cmp
mov
mov
or
sahf
bound
or
and
push
or
inc
movsb
dec
fists
xor
les
jg
cmp
fwait
sarl
mov
sbb
and
addr16
push
lea
sahf
movsl
pop
mov
out
sub
adc
icebp
cmp
pop
lods
mov
bound
outsb
aad
es
xor
fcompl
ret
xchg
stc
addr16
xlat
clc
push
stos
mov
call
fidivl
and
pop
mov
or
cmp
pop
mov
xor
jl
pusha
inc
add
imull
jnp
sbb
mov
mov
mov
fcmovu
ret
aam
mov
outsl
sti
and
push
sub
sbb
dec
lret
outsl
adc
leave
lock
pop
jecxz
sbb
cmpsb
cmp
test
data16
hlt
push
jecxz
cmp
and
add
dec
lcall
cmp
xor
sbb
mov
ret
imul
sbb
inc
lock
or
mov
dec
popf
adc
mov
cs
mov
inc
lahf
mov
cmp
xchg
jae
std
or
mov
sub
loopne
inc
int3
jns
xchg
and
dec
aaa
mov
dec
xchg
mov
fs
sbb
ja
popa
push
dec
sbb
and
mov
cmc
cmp
cmp
mov
adc
inc
movhps
ljmp
sbb
cmp
cmpsl
xchg
bound
aas
pop
in
cmc
icebp
test
fildll
mov
jae
and
push
mov
adc
shrl
int
ss
inc
push
aaa
xlat
adc
popa
mov
sbb
bound
imul
sbb
data16
mov
pushw
stos
sub
pusha
popa
insb
std
inc
add
mov
negb
pop
ret
in
xor
cmpsl
sub
imul
push
cmp
jne
gs
or
inc
pop
xchg
out
add
shr
jnp
ljmp
push
in
add
scas
and
push
push
mov
dec
int
cmp
cmp
stos
pop
stos
dec
into
and
push
sbb
push
out
aad
sub
sub
mov
mov
push
fsubs
mov
lods
in
mov
adc
imul
push
inc
out
idivb
mov
jo
lcall
jmp
ret
bound
fadds
lods
out
xor
out
loopw
arpl
push
repz
mov
mov
nop
out
sub
int
subl
xchg
pop
test
stos
mov
dec
xchg
es
shl
cwtl
in
pop
pop
adc
push
fbld
dec
loop
pop
je
movsb
lods
adc
push
mov
dec
cwtl
fcmovnu
enter
xchg
popf
xchg
lahf
inc
ss
sbb
mov
iret
push
aaa
gs
sub
insb
sbb
mov
pop
dec
test
cli
mov
push
pushf
repz
repz
sub
leave
cmp
adc
mov
int3
mov
in
adc
loopne
dec
fbld
ret
lods
scas
mov
xchg
sub
mov
dec
pop
ret
xchg
pop
lea
jl
clc
jo
mov
loopne
cld
and
adc
sbb
cli
lret
jg
jnp
cs
xor
xor
scas
ret
mov
ret
sub
popa
adc
fmuls
clc
cmp
vpunpckldq
out
xchg
cli
cmp
mov
subb
or
lcall
xlat
dec
jmp
push
and
xorl
mov
les
push
pop
inc
pop
lock
sbb
pop
jno
lahf
fcoml
adc
sub
jns
cmp
adc
cmp
imul
dec
in
xor
aaa
aad
and
data16
mov
cmpsl
sarb
into
ds
cmpsl
sbb
movl
xchg
sub
and
sub
pop
bound
fs
adc
mov
sbb
adc
jmp
mov
xchg
cmpb
sub
addr16
jl
fsubrl
popa
xor
testb
xlat
or
jmp
out
dec
jbe
std
mov
fwait
adc
lahf
push
shll
dec
dec
iret
inc
sub
pop
fimull
icebp
dec
aad
jnp
repz
pusha
push
xchg
lcall
ss
add
rclb
sbb
pop
sub
in
cmpsl
inc
add
imul
out
out
xor
ja
jl
daa
ljmp
aad
pusha
out
std
xchg
dec
cwtl
push
and
cltd
mov
xor
mov
pop
pop
mov
sub
aad
test
scas
xor
out
arpl
sub
mov
adc
fisubrs
xchg
add
lea
and
xlat
adc
mov
xchg
js
and
cltd
cmp
mov
push
frstor
popf
das
push
xchg
pop
pop
movsl
les
xor
dec
and
xorb
add
push
in
push
dec
xor
outsb
mov
test
loop
push
jle
fldl
bound
sub
pop
call
sti
test
dec
sub
dec
outsb
push
lods
fidivl
ss
or
push
adc
out
ret
shrl
cmp
out
push
mov
in
mov
dec
pushf
add
mov
sbb
shrb
mov
mov
mov
test
xchg
adc
ret
push
add
jge
mov
inc
mov
rcl
fstps
cmpxchg
dec
mov
testb
rcrl
and
push
fbstp
aaa
hlt
fidivs
cmp
pop
jl
mov
pop
test
ja
dec
and
adc
mov
lahf
jp
scas
mov
aaa
inc
ss
jo
insb
or
lds
jg
xor
jle
dec
mov
push
insb
data16
jecxz
inc
mov
cmpsl
ficomps
and
scas
dec
jne
mov
ud0
ret
icebp
inc
jge
adc
clc
dec
adc
push
add
repnz
out
mov
nop
adc
sub
dec
inc
cmc
daa
push
pop
xchg
aaa
notl
popf
or
pop
in
popa
fisubrl
mov
inc
xlat
enter
hlt
xchg
cmp
add
rcll
cltd
fdivrp
test
pusha
push
ficoml
sbb
das
cmp
pop
and
cwtl
or
mov
fsub
push
ljmp
popf
mov
sbb
sub
xlat
sub
enter
ljmp
mov
fadds
cmp
sbb
pop
addr16
mov
xchg
cmp
and
mov
lcall
cvtpi2ps
fdivr
xchg
aad
adc
add
mov
jb
jae
mov
jmp
push
aam
mov
rcrl
imul
pop
xor
push
or
lods
and
mov
push
fsubr
lock
sarb
add
push
xchg
xchg
scas
add
and
xchg
movsb
movsb
imul
dec
fsubr
mov
push
add
dec
lret
sub
sub
and
inc
out
cmc
fidivrl
sbb
cmp
mov
stc
sub
pop
cli
xor
out
push
lahf
jae
daa
insb
test
mov
in
cmc
std
test
cs
pop
adc
insl
cmp
mov
stos
inc
roll
add
adcl
and
xor
outsl
mull
fdivrl
pop
jp
jle
mov
push
pop
dec
lea
jle
add
inc
and
mov
add
hlt
add
arpl
sbbl
or
scas
out
or
jge
push
movsb
jg
adc
enter
sbb
inc
and
aam
pop
jl
cmp
orl
lret
data16
aam
sub
mov
xchg
xor
mov
fistpll
mov
outsb
xchg
adc
pop
pop
ja
xor
popf
arpl
inc
idivl
in
cltd
sub
pusha
rol
sbb
test
pop
fildl
ds
iret
sbb
or
cwtl
pop
lock
js
or
iret
fimuls
mov
mov
cmpsl
jb
rorb
and
xchg
push
ret
mov
daa
scas
ret
test
enter
pop
adc
mov
sbb
xchg
pop
add
fxch
mov
mov
pop
pop
push
inc
ret
insl
or
enter
xor
int
int
mov
add
inc
add
es
pop
fldcw
adc
sub
xchg
and
dec
cld
dec
scas
cwtl
loop
sub
mov
cmp
lods
in
sbb
lea
mov
sarl
orb
adc
inc
dec
push
or
test
int3
movsl
lret
ret
icebp
or
fldt
jno
inc
mov
mov
rcll
cmp
orb
add
inc
xlat
nop
int3
sbb
inc
movsl
jne
filds
in
int3
dec
mov
into
aaa
je
loopne
inc
arpl
leave
add
icebp
add
aaa
adc
addr16
daa
shll
jg
push
inc
mov
and
adc
movb
xchg
fsub
insb
lods
aam
std
leave
sub
ja
std
push
jle
dec
inc
int3
xchg
rorl
aam
sbb
cmp
mov
xor
sbb
sbb
sti
outsb
adc
mov
in
hlt
push
pop
sub
stos
jl
push
sub
sub
cli
movsl
test
es
adc
cwtl
sbb
fwait
ss
mov
mov
lret
out
subb
push
mov
lcall
pop
and
push
xchg
in
fidivrl
sub
cmp
adc
adc
loopne
push
int
cmp
jno
lret
fs
bound
shrb
lds
data16
imulb
shll
adcb
cmp
mov
enter
jne
out
inc
dec
int3
mov
cwtl
dec
ret
fcmovnb
pop
sub
cmpsl
mov
inc
push
test
cltd
les
jmp
enter
adc
pop
dec
sbb
push
stc
dec
pop
ja
test
les
push
ljmp
mov
rcr
repnz
fiaddl
jle
jle
mov
mov
fucomp
xor
mov
icebp
ds
repnz
arpl
popf
xchg
fisubrl
adc
lds
jmp
imul
aam
enter
pop
or
mov
adc
popf
cmc
inc
xchg
dec
dec
stos
pop
cmc
ficoml
test
pop
sbb
cli
fildll
dec
mov
in
aaa
imul
adc
loope
insl
outsl
call
fisubs
mov
daa
dec
lret
roll
mov
xlat
cmpsl
jmp
mov
and
stos
pop
aaa
pushf
cmpsl
inc
iret
mov
out
aam
shlb
push
add
daa
hlt
inc
repnz
jmp
inc
loop
push
cmp
das
add
xor
addl
xchg
hlt
ret
mov
in
negb
or
dec
fcoms
ljmp
insl
gs
in
mov
push
sarl
outsl
jmp
cmpsl
push
loopne
jne
xchg
ret
pop
xor
lods
shlb
pop
sahf
sbb
mov
lea
outsb
in
xor
push
lcall
xor
movb
pop
dec
xor
cmp
push
icebp
mov
jnp
xchg
ss
dec
jmp
adcl
mov
std
mov
push
jecxz
sub
pop
push
mov
add
xchg
and
dec
adc
sti
and
filds
pop
es
fistl
dec
in
pop
out
mov
mov
call
mov
scas
mov
adc
jle
pop
xchg
mov
push
loop
sub
add
outsb
outsl
push
and
sbb
xor
divb
cltd
cmp
rol
and
add
pop
inc
mov
dec
dec
cmpsl
movsb
out
push
and
adc
pop
pop
cmp
adc
xor
and
cmpsl
inc
sbb
popf
cltd
ja
xchg
das
outsl
xchg
stos
test
mov
mov
leave
movl
outsb
mov
xchg
es
jb
out
cmp
shlb
cmp
mov
push
in
xor
lret
mov
xchg
stos
out
cmpsb
jecxz
sbb
or
inc
add
adc
jnp
push
pop
xor
aad
pop
xor
stos
xchg
cltd
mov
out
rcl
push
call
sti
push
pop
add
pop
lret
dec
jmp
test
je
and
sqrtps
push
mov
lret
in
sahf
aas
nop
stos
nop
pop
leave
ficomps
stc
cmp
dec
pop
xor
add
sub
rorl
mov
sbb
pop
xchg
stos
fldt
xchg
inc
mov
test
lock
sub
sbb
push
pop
or
push
jns
mov
jne
push
cmp
xchg
or
ja
sbb
add
out
cmpl
repnz
dec
sub
lret
pop
mov
jae
mov
in
pop
mov
adc
outsb
mov
outsb
inc
fcmovnb
stos
add
int
push
add
mov
mov
add
mov
mov
mov
inc
rorb
lret
rcl
and
pop
inc
ds
stos
jb
push
adc
lods
xor
push
stos
jae
test
mov
into
out
jecxz
jg
addr16
mov
ss
scas
push
push
dec
push
mov
ja
mov
mov
sub
adc
jnp
xchg
les
xchg
add
mov
jns
push
sarl
orl
repnz
inc
sub
add
shll
jg
adc
daa
xor
outsb
mull
aaa
mov
dec
cmp
or
js
insl
xor
mov
or
cmp
jae
scas
lahf
int3
outsb
out
setp
and
rcr
push
dec
scas
and
rclb
dec
out
pop
mov
sub
or
cwtl
cs
cmpsb
push
lret
push
pop
pop
jnp
mov
sub
xchg
int3
adc
jl
sbb
orb
add
push
xchg
clc
ss
sbbb
mov
jnp,pt
shl
adc
sbb
ja
mov
add
cmpsb
aaa
shrl
aam
jg
and
push
pop
pushf
sub
add
or
pushf
add
jne
push
and
cmp
int
pop
ljmp
pop
jp
imul
xor
out
dec
aam
sbb
aas
sub
pusha
sbb
cwtl
mov
cmp
or
xor
xlat
fst
fnstsw
les
lret
scas
xlat
adc
sbb
jns,pn
mov
cmp
lds
repz
int
mov
pushf
cld
in
cmp
push
aad
loopne
mov
xchg
xor
dec
mov
imul
mov
or
add
inc
mov
cmpsl
add
scas
hlt
cmc
ljmp
stos
inc
out
mov
sahf
mov
ss
fisubl
ffreep
test
aam
xchg
insb
bnd
andl
data16
xchg
push
mov
jno
lea
rorl
xchg
pop
hlt
std
jne
mov
xlat
pop
jne
in
mov
sub
pop
sti
pop
pop
movsl
loop
push
test
inc
adc
sahf
lods
je
sbb
mov
enter
pop
loope
pop
insl
sub
test
xor
mov
mov
aas
repz
cmpsl
stc
xchg
mov
xor
xor
cwtl
sahf
inc
jo
ret
clc
std
in
or
mov
test
loopne
jp
sahf
int
dec
mov
inc
in
fidivrl
sbb
inc
cmpsl
mov
inc
lcall
ds
pop
jg
imul
add
adc
ja
pop
lahf
dec
sub
add
ds
lea
mov
out
push
paddsb
jnp
mov
rclb
cmpsb
addl
pop
adc
xchg
jg
jge
dec
jne
cmp
and
xchg
icebp
inc
and
jmp
jns
aaa
xchg
in
add
jmp
fimuls
mov
test
int3
sub
jp
and
push
dec
push
out
push
fdivs
pop
jno
mov
lock
iret
insb
mov
sub
insb
cmp
addl
js
jmp
xchg
cmp
lahf
push
rolb
inc
pop
mov
nop
sbb
jno
sub
sub
js
cmp
pop
jnp
mov
rclb
push
adc
push
mov
mov
mov
mov
call
jp
mov
push
cli
pusha
test
push
xor
fwait
insb
sub
or
pop
add
cld
bound
sbb
sbb
faddp
inc
in
inc
loopne
adc
arpl
push
inc
test
adc
daa
hlt
inc
sub
push
or
in
fsin
sub
jmp
xchg
dec
fdivrl
sub
in
and
fbld
jo
sub
dec
or
dec
cmpsl
in
xor
lcall
fbstp
test
imul
ja
sub
in
ret
adc
inc
xlat
mov
mov
std
aas
popa
sub
add
pop
lock
std
and
push
pusha
mov
dec
test
xchg
ljmp
outsl
push
mov
les
and
pop
mov
inc
jb
out
jne
fnstenv
inc
or
loop
mov
mov
clc
call
mov
fdiv
sub
jecxz
pop
inc
push
push
sbb
cltd
in
pop
dec
sub
lock
insb
inc
or
jge
dec
jo
fsubs
push
xor
mov
push
pop
push
pop
mov
jae
insl
outsb
sti
lds
mov
push
mov
jecxz
jg
jp
and
jns
movsb
xor
mov
pop
loopne
leave
in
out
mov
repz
leave
or
mov
roll
xchg
xchg
cmp
test
inc
fisttps
icebp
out
xor
and
push
mov
xchg
scas
jae
adc
xchg
add
cmp
push
pop
data16
icebp
mov
lds
pop
pop
push
stos
xchg
cmpsb
jg
push
mov
cmp
xor
mov
xchg
ja
push
mov
bswap
jge
add
sub
dec
mov
out
pop
int3
pusha
xchg
aam
ja
sbb
mov
out
fwait
add
movsb
imull
insl
addb
lods
or
push
sub
flds
mov
in
xor
mov
in
push
xor
jge
fnstcw
mov
sub
aam
clc
and
outsl
or
xor
xor
lods
dec
popf
or
lods
pop
iret
mov
popa
adc
sbb
xor
xlat
xorb
repnz
iret
daa
cmc
cs
mov
daa
stc
fisubl
not
xor
mov
add
xchg
mov
cltd
xchg
and
xchg
cmp
lcall
fimull
jb
int
cmp
clc
cmp
scas
jl
stos
aam
mov
outsl
ljmp
xchg
loopne
cmp
xchg
lods
loopne
sbb
cmp
pop
pop
orb
int
in
fisubrs
je
adc
lahf
cmpsl
lret
xor
enter
daa
shl
pop
fadds
inc
mov
mov
inc
lds
mov
or
or
xchg
fs
or
fsubp
and
ret
adc
lahf
or
push
out
rcrb
icebp
push
outsl
dec
std
out
sub
out
aam
outsl
aaa
sbbl
push
sbb
mov
fcomps
iret
mov
out
push
adc
push
mov
into
push
bound
js
sbb
in
adc
sbb
movsb
xor
stos
pushf
sbb
fists
ljmp
cmp
shlb
je
dec
rorl
mov
xor
inc
xchg
pop
mov
push
loopne
xchg
and
loope
cmp
adc
cltd
mov
adc
or
clc
jb
mov
mov
sti
push
lock
mov
sub
mov
dec
inc
sti
mov
sub
push
cmp
lahf
rorl
cmp
mov
icebp
cmp
or
test
adc
adc
cwtl
push
inc
das
mov
iret
cmp
inc
mov
adc
pusha
xor
sbb
mov
shll
int
mov
and
mov
fwait
aad
xchg
xor
sti
sbb
mov
xor
nop
jp,pn
lahf
add
xchg
data16
mov
push
int
or
cmpsl
lock
cmp
mov
mov
mov
in
dec
pop
rcrl
in
xor
mov
inc
movsb
shl
adc
pushf
pop
sbb
sarb
fisttps
mov
xchg
les
or
in
outsl
fs
cmc
dec
imul
pop
in
call
loope
pop
cwtl
movsl
lret
fimuls
jle
test
popl
jecxz
jg
nop
insl
int3
sub
cli
xchg
cmp
mov
mov
in
xlat
js
cmc
add
addr16
loop
add
xchg
xor
mov
xchg
pop
pop
add
aad
leave
pop
call
pop
nop
data16
movsb
and
sub
clc
in
lods
xchg
inc
mov
push
mov
int3
sbb
mov
cmp
xchg
insl
insb
cmp
and
or
add
aaa
cmp
and
sbb
pop
enter
xchg
sbbl
inc
cmpsl
and
call
and
loop
mov
hlt
shlb
mov
test
rorb
lcall
repnz
push
sub
mov
mov
test
orb
in
cmp
mov
repz
mov
lods
inc
lret
lret
push
or
int3
cmpsb
iret
lret
hlt
es
xor
sub
fwait
cmpsb
or
dec
test
cmpsb
dec
push
in
inc
mov
jmp
mov
sub
out
stos
jno
jo
rol
popa
xchg
call
mov
push
ja
into
mov
rcrl
lods
stos
rorl
call
mov
xchg
jp
xlat
pop
fwait
cmp
lcall
cli
sbb
mov
adc
cmp
push
xor
int3
in
movsl
xchg
pop
bound
movsb
push
cmp
cmp
push
cmp
outsl
daa
cmpsl
and
lods
push
mov
pop
push
xor
nop
cmc
daa
mov
dec
and
jecxz
aam
pcmpgtd
push
pop
lret
jecxz
fisubrl
repnz
push
int
mov
popf
push
sub
outsb
xor
jo
subl
stos
adc
jmp
mov
cs
cmp
adc
mov
xor
cmp
lods
sbb
mov
adcb
adc
mov
jo
lods
movsl
sbb
jns
test
xchg
dec
cmp
cmp
imul
jl
jge
push
bound
lcall
add
addl
mov
fsubrs
add
icebp
data16
movsl
xor
daa
mov
scas
xchg
or
fidivrl
cmp
out
sub
sbb
push
push
cld
lret
sbb
inc
out
jae
mov
arpl
mov
xlat
sti
decl
xor
divb
rorl
jo
xor
imul
jge
imul
js
lock
jne
repnz
dec
mov
xchg
xchg
sbb
mov
mov
dec
sbb
cmp
aam
mov
xor
insb
mov
mov
repnz
rorb
cmc
test
aad
adc
push
add
jmp
or
cmp
cmp
xchg
or
jo
jns
inc
dec
popa
arpl
push
sub
mov
inc
fsubl
adc
cmc
sub
cmp
dec
lock
lcall
jno
out
xchg
aam
icebp
cli
loop
in
or
sub
inc
iret
and
jecxz
nop
and
hlt
das
subl
xchg
cmpsb
mov
mov
mov
out
ja
sar
cmp
sbb
ret
mov
enter
jo
aad
test
out
into
xchg
cmpsb
inc
pop
lods
cmp
pop
je
imul
dec
fwait
pop
test
hlt
into
push
inc
js
mov
inc
xor
add
rcrl
inc
xchg
push
das
push
fstl
in
pop
out
lock
push
adc
dec
xor
xorl
sub
mov
jge
cli
js
in
dec
subb
test
pop
rorl
add
push
shll
movsl
xchg
jnp
scas
xor
popf
jge
test
jg
dec
mov
xor
call
adc
aaa
jb
xor
mov
dec
mov
arpl
ja
sub
fildll
shl
pusha
xchg
leave
les
inc
sbb
adc
add
jmp
mov
add
faddl
xlat
mov
mov
pushw
cs
adc
ror
pop
mov
ja
fsubl
dec
nop
inc
fcoml
push
inc
xorb
das
mov
jp
mov
testb
aas
xor
and
mov
gs
es
lcall
jns
jp
call
cmp
in
add
or
ljmp
arpl
aaa
decb
jp
jo
rcrl
push
leave
fs
push
add
rclb
roll
movl
dec
stos
mov
out
je
jns
dec
push
xchg
add
xor
push
pop
mov
lret
dec
or
adc
xor
sbb
mov
fsubrl
test
cltd
mov
sti
mov
cmc
jno
xor
sbb
mov
mov
push
jmp
into
push
scas
movsl
mov
inc
cmp
or
ficomps
sbb
adc
out
mov
clc
cli
dec
push
cltd
cmp
jno
in
pop
test
jbe
imul
sub
aam
adc
enter
pop
mov
ja
leave
push
adc
pop
mov
xor
mov
mov
mov
or
shlb
xor
push
inc
xchg
flds
outsl
test
rorl
cmpsb
push
cld
outsl
sub
push
stos
aas
push
push
push
lcall
inc
inc
xchg
dec
stos
or
stos
ficomps
xchg
add
mov
xchg
push
stos
add
scas
push
jns
pop
paddd
hlt
in
inc
pop
add
add
push
or
xorl
pop
imul
fadds
mov
sub
mov
push
pop
in
mov
xchg
shlb
fs
inc
add
sahf
dec
rcr
bound
mov
and
test
testb
pop
add
andb
in
mov
out
mov
xor
or
fisubs
jbe
sub
or
dec
mov
inc
jno
pop
and
jno
das
inc
ja
jb
sbb
mov
outsl
cli
sub
xchg
imul
or
sbb
pusha
sub
call
imul
adc
cmp
fnsave
aas
mov
fldcw
daa
sub
in
mov
fsubs
inc
pop
dec
xchg
sub
xor
mov
inc
clc
sub
sti
sub
adc
ret
adc
and
inc
xchg
cld
sub
jecxz
pop
dec
in
int
mov
iret
lret
cmc
xor
ljmp
repnz
stos
je
ds
movsb
inc
xchg
push
aas
mov
mov
pop
jmp
add
je
mov
push
or
adc
mov
int3
jecxz
lcall
xchg
mov
sub
fdivs
clc
jne
mov
out
xorl
push
push
cli
mov
mov
sbb
and
inc
bound
fnstcw
into
mov
cmp
pop
daa
sbb
xchg
or
or
mov
inc
jl
xchg
sahf
shrl
or
push
mov
xlat
sbb
pushf
decl
pop
sbb
mov
or
lret
es
cmp
std
mov
cmp
inc
sub
push
dec
pop
cmp
stos
ficomps
fistps
rorb
ja
lods
imul
sub
fimull
addr16
in
adc
int
adc
or
jle
push
sbb
jp
xor
icebp
les
xor
push
in
adc
in
cld
cltd
in
jmp
mov
mov
out
mov
jg
cmp
xchg
push
or
sub
cmp
out
add
jae
adc
dec
and
sbb
in
sub
add
shrb
push
ljmp
stos
xor
movsb
pop
adc
dec
dec
xchg
fstpt
pop
stc
clc
xlat
test
cmp
and
or
sbb
sbb
lcall
dec
scas
mov
and
lcall
sarl
or
cmp
xchg
mov
sbb
pop
je
sbb
clc
ljmp
push
or
push
fcmovbe
fcomps
push
xchg
pusha
sub
and
mulb
jmp
cmpsb
cwtl
xchg
mov
in
repnz
jb
cmpsl
in
xor
pushf
je
test
add
rcll
mov
or
bound
pop
pushf
repz
sbb
ss
cmpsl
test
aaa
aaa
es
das
and
fwait
jno
jbe
push
lret
lahf
or
xor
or
hlt
or
push
divb
mov
jb
js
lock
jmp
test
out
in
push
mov
shrl
aam
xchg
xor
js
push
pop
cmp
ficomps
mov
push
lock
in
cld
pop
clc
jg
shrb
addr16
imul
dec
xor
mov
mov
clc
pop
pop
std
in
stos
fidivrl
mov
mov
cwtl
fdiv
out
fxch
jge
inc
into
das
or
push
dec
ret
inc
loope
add
cmp
outsb
jbe
pushf
icebp
and
sbb
cmpsb
or
mov
into
inc
ret
shlb
decb
in
pop
sub
cmc
int3
fistl
adc
push
lret
ljmp
mov
ret
cmp
sbb
jns
faddp
pcmpgtw
ljmp
cld
fisubrl
data16
adc
cmp
or
xor
inc
sub
cmp
or
movb
fiaddl
mov
xchg
lahf
or
cli
notl
xor
addr16
push
movlps
nop
into
inc
mov
test
les
mov
inc
push
js
jecxz
push
pushf
mov
and
push
cmp
jo
and
xchg
or
sbb
sbb
inc
shll
dec
sahf
stos
push
inc
inc
push
aaa
insl
aas
adc
cmp
pop
xchg
pusha
cmp
rclb
testb
and
and
rep
lret
push
push
nop
cltd
sub
sub
sbb
inc
daa
orl
lods
or
xlat
push
pusha
and
bound
push
rcr
test
mov
inc
iret
aaa
pop
repz
sub
dec
inc
pop
pop
ds
rclb
xor
add
popf
insl
test
sbb
aaa
push
jo
bnd
jmp
hlt
gs
addb
push
jae
in
hlt
or
xorl
push
outsl
pop
pop
cmp
bound
pop
mov
adc
push
adc
scas
in
inc
and
jmp
sbb
ret
in
mov
sbb
pop
hlt
sbb
add
jmp
pop
popf
sub
mov
pop
xor
ret
mov
sub
in
jne
inc
ljmp
adc
and
mov
sbb
xor
cmp
cwtl
cmp
addl
cwtl
in
pop
cli
cwtl
sub
mov
sbb
addl
xchg
ss
mov
add
mov
jecxz
nop
lea
pop
prefetch
or
divl
mov
add
jle
cmpsl
inc
gs
lods
push
sub
ficompl
pop
mov
in
lahf
mov
sahf
leave
xor
jge
popf
cmp
std
and
xchg
ss
xchg
inc
es
js
xor
pop
js
or
xchg
scas
cltd
mov
addr16
xor
mov
jae
int3
push
add
adc
push
andb
insl
mov
fistpl
movsl
fs
popf
icebp
mov
outsl
push
cmp
cmpsb
inc
out
outsl
jne
fwait
jbe
cli
mov
into
mov
adc
and
lret
fsubs
add
or
int3
inc
dec
out
or
std
fucomip
rcll
je
or
arpl
rolb
dec
loopne
push
pop
es
or
push
pushf
xchg
jne
mov
ret
or
movsb
insb
lret
xlat
xor
push
mov
outsl
pop
int3
ret
pop
jl
inc
mov
inc
jo
sbb
ffreep
push
dec
pushf
add
or
mov
addr16
inc
jg
movsl
cmp
xchg
cmc
xor
dec
sbb
lcall
dec
mov
sti
xchg
mov
popa
pop
or
imul
sub
add
stos
imul
lods
lods
inc
mov
jecxz
pop
inc
movsl
int
shlb
arpl
pop
adc
rcrl
test
icebp
gs
xor
dec
test
out
mov
and
push
popw
pop
cmpsb
xchg
jo
fbld
xor
pop
fs
push
pop
scas
push
xor
pusha
clc
cmp
mov
adc
sub
mov
mov
mov
repz
jo
jle
sbb
inc
ss
jp
inc
out
lahf
insl
jnp
mov
mov
mov
dec
mov
jle
push
mov
outsb
and
in
sbb
insb
push
mov
out
mov
lods
ss
xorl
loopne
cmpl
jmp
divb
push
cmp
bound
div
cmc
mov
test
test
cmp
mov
dec
adc
dec
or
lret
dec
mov
ds
mov
rorl
inc
sarb
add
pop
or
pop
out
lcall
mov
repz
mov
das
cmpsl
in
jns,pn
add
int3
scas
subb
fsubr
shlb
push
pushf
mov
stc
push
enter
scas
inc
cltd
shl
fsubl
mov
push
int3
push
xchg
jno
popa
sbb
jle
dec
ror
pusha
lret
pop
xor
inc
adc
imul
mov
and
and
lret
shlb
mov
lret
popf
das
in
xor
mov
out
adc
jo
out
xorl
stc
inc
sub
or
xchg
xor
mov
cmpsb
sbb
lea
adc
pop
cmpsb
cltd
movsl
mov
push
lret
popa
jbe
jae
out
lahf
mov
mov
jno
jmp
push
pop
pop
adc
xchg
mov
ja
push
xchg
jo
fs
mov
je
roll
mov
and
pop
mov
aaa
and
mov
in
adc
jp
or
out
cmp
cwtl
inc
rcll
add
shl
sub
imul
pushf
inc
sub
xchg
lahf
pop
and
jns
xor
cmpsl
pop
pop
xchg
pop
push
ljmp
mov
dec
ja
jmp
dec
and
sbb
sub
jns
mov
enter
add
lock
adc
aad
shl
imul
or
cmpsb
cld
pop
add
ret
leave
leave
cmp
dec
out
inc
inc
shlb
jecxz
ror
bound
stc
in
dec
inc
sti
xchg
sar
jg
jecxz
jno
in
ret
fbstp
fwait
rol
jb
xchg
jl
push
aas
xor
push
negl
push
loope
jmp
out
subb
bound
int3
ljmp
rorb
add
jge
into
insl
mov
stos
and
imul
jp
outsl
sti
lds
stc
ret
mov
movsl
es
pop
sbb
icebp
adc
pop
xchg
push
xlat
stc
or
jno
out
mov
add
xor
lcall
jp
mov
push
xor
xor
dec
push
mov
arpl
ror
mov
sub
outsb
mov
paddsb
push
push
xor
sub
lret
xchg
lds
mov
std
xor
adc
lret
xor
push
rcrl
sbb
pop
sub
fs
imul
ja
daa
stos
or
mov
movsb
scas
loopne
cmp
add
int
lods
imul
sbb
jl
repz
pop
pop
loop
lods
mov
inc
mov
jns
test
adc
popf
add
dec
fwait
inc
aaa
dec
cwtl
ds
jae
mov
inc
or
jae
pop
sub
adc
pop
loop
std
int
add
push
dec
scas
xchg
sarb
popf
lea
loope
shl
cmp
aaa
inc
dec
repz
sbb
scas
sbb
inc
and
sbb
int
dec
sbb
pop
xor
xor
add
lret
ja
push
mov
and
xchg
push
add
jle
dec
inc
cmpsb
jb
imul
je
or
loopne
cmp
sub
cmp
and
jg
pop
and
aam
outsl
mov
ljmp
cld
mov
mov
push
lea
push
dec
cmp
push
xchg
ret
inc
mov
in
aad
pop
mov
imul
fidivrl
xchg
lret
add
out
pop
sbb
out
dec
orl
cld
and
mov
cltd
std
xor
ret
rorb
ljmp
lcall
pop
xchg
jnp
push
movsb
mov
inc
xor
sbb
out
fs
inc
inc
hlt
das
lcall
outsb
fdivrp
jae
aam
xor
or
int
addb
pop
push
ja
ds
sub
mov
pushf
dec
loope
negb
sub
add
push
sub
stc
mov
sbb
mov
adc
jnp
scas
mov
xchg
arpl
aas
pushf
or
sub
std
movb
leave
shlb
inc
xor
in
xor
cmp
adc
or
or
pop
pop
and
sbbb
enter
aam
into
call
repz
ds
mov
dec
jo
push
gs
stos
mov
scas
mov
aam
pop
test
shlb
enter
aad
sub
ljmp
dec
cmpsl
add
jns
cmp
or
adc
xchg
in
xchg
lret
pushf
test
movsb
fdivl
mov
popf
push
inc
repnz
ret
jns
cmc
inc
aad
lods
xor
dec
inc
mov
inc
xchg
mov
xchg
mov
jns
bound
aam
cltd
test
cs
fildll
xchg
pop
cltd
inc
push
mov
mov
rcr
inc
mov
pop
repz
pop
aaa
xchg
mov
mov
bound
and
ljmp
ss
dec
push
add
mov
mov
fisubs
or
outsb
lcall
cmc
rcrb
pop
jae
jo
lods
int
rorb
add
stos
ss
out
shrb
popa
mov
notl
fisubs
jno
push
pop
std
add
adc
lock
or
mov
movsl
int3
in
ljmp
adc
or
mov
insl
mov
or
inc
fnstsw
mov
cwtl
imul
pop
lret
test
cmp
cli
test
int3
mov
int3
lods
cmc
xor
jnp
mov
data16
mov
inc
xor
aam
fsubs
subl
xchg
cmpsb
mov
mov
inc
in
add
dec
lret
clc
and
ret
enter
in
ljmp
lret
pushf
jle
and
loopne
pop
dec
mov
jae
aas
cli
mov
push
sub
lret
aam
lret
pop
mov
insb
enter
pop
jns
or
clc
ret
cld
cmp
cmovb
jo
pop
add
in
frstor
lods
in
gs
push
pushf
xor
mov
adc
lods
push
loopne
dec
insb
test
adc
pop
adc
rcl
xlat
pusha
sub
nop
push
inc
inc
xor
popf
jne
add
jbe
fnstenv
and
int3
mov
xorl
jge
add
jnp
mov
int
or
das
pop
rorl
inc
aas
enter
and
cs
test
cmp
repnz
pop
mov
flds
cmp
aaa
cwtl
mov
mov
push
cmp
fbld
xchg
pusha
nop
lret
mov
mov
nop
mov
inc
popf
push
scas
jge
xor
and
mov
loop
lock
xorl
or
test
pop
adc
cmp
out
dec
in
or
mov
jmp
movsl
icebp
mov
and
shl
push
adc
xor
frstor
int3
sub
test
push
add
sti
mov
mov
test
adc
aad
xor
int3
mov
jno
mov
shll
push
lahf
xchg
dec
cltd
mov
icebp
in
stc
mov
jb
mov
mov
scas
andb
movsb
jo
or
push
cmpsb
ljmp
fwait
sbb
push
pop
roll
ja
jp
add
aam
xchg
pushf
sub
mov
xchg
sti
sub
fcoms
mov
jno
adc
lock
cmp
jg
dec
loopne
mov
sub
test
leave
call
inc
push
inc
push
and
lret
pushf
adc
into
lea
cmp
push
sbb
sahf
es
jg
loopne
stc
push
cmp
pop
dec
mov
cltd
mov
xchg
ljmp
movsl
in
add
or
fst
in
hlt
js
pop
shlb
rolb
es
repnz
push
jnp
xchg
mov
jge
add
sbb
push
jecxz
test
mov
cmp
cmpsb
pop
loope
out
fidivrl
pop
add
push
enter
iret
repnz
insb
das
add
addb
or
aam
sbb
cmpsb
punpcklbw
fs
lds
int3
popf
mov
xor
pop
or
call
imul
xchg
es
iret
adcl
push
vmread
leave
bound
ja
ss
pop
mov
lahf
adc
pop
sbb
add
adc
sub
dec
mov
gs
clc
xor
out
popf
leave
popa
xor
in
pop
stos
adc
adc
xchg
sti
popa
movsl
jb
dec
outsb
xor
movsb
imul
pop
movsb
xchg
dec
popf
scas
mov
mov
jmp
pop
lahf
cltd
sbbb
out
sub
std
je
and
mov
xchg
std
cld
stos
sub
sbb
iret
adc
sahf
out
sti
lock
clc
frstor
mov
hlt
jmp
xor
lds
mov
cwtl
xor
mov
pop
repz
call
shll
insl
movsb
repnz
sbb
js
fs
out
jmp
jae
and
add
sti
enter
movsl
aaa
in
cmp
out
es
test
and
pop
jnp
out
sbb
int3
js
test
shlb
mov
js
jecxz
mov
push
and
mov
test
fwait
push
pushl
jmp
lret
xchg
mov
cs
push
and
std
mov
loopne
xlat
les
fbstp
dec
sbb
xchg
rcrl
cmpsl
lods
cmp
sbb
jmp
dec
dec
jmp
shl
add
fcmovnu
sub
xlat
pushf
aad
aam
rolb
cli
cwtl
js
sub
sbb
or
dec
jbe
enter
ja
in
xchg
fs
jl
push
into
jle
repnz
jmp
add
mov
cwtl
or
or
jmp
push
test
out
add
mov
je
sub
mov
arpl
in
jbe
and
fcompl
int
and
nop
xchg
into
test
or
les
mov
lret
inc
mov
pusha
xchg
rcrb
push
xchg
cmp
inc
lock
sub
dec
jecxz
pop
mov
aaa
mov
inc
jge
mov
in
jle
or
or
mov
and
mov
mov
aaa
pop
aaa
mov
movsb
sbb
loopne
push
gs
xor
inc
adc
add
add
test
ds
test
mov
cmp
std
sbb
lods
addr16
jge
jp
adc
in
std
int3
arpl
ret
rclb
mov
xor
mov
shll
out
push
rorb
or
pushf
cli
pop
xchg
leave
aaa
iret
ljmp
xchg
inc
arpl
mov
adc
in
rcrl
cld
jge
push
xor
idivb
out
add
int3
and
xor
pop
push
shll
sbb
sti
call
sbbl
std
repz
adc
nop
out
xchg
fnsave
sub
dec
xchg
mov
xlat
push
ret
stos
dec
inc
inc
mov
pop
lcall
jno
mov
xchg
mov
dec
nop
lret
inc
dec
dec
jnp
test
mov
loopne
push
rcll
inc
inc
dec
mov
pop
repz
cld
push
bnd
out
and
orb
in
out
push
jae
or
add
inc
jle
mov
arpl
pop
shlb
aam
pop
xor
push
xchg
pop
aas
subb
mov
js
xchg
fdivl
push
fsts
js
jg
ljmp
sbb
ss
arpl
and
arpl
sub
push
idivl
mov
mov
xor
in
push
lahf
xorl
fidivs
pop
ds
inc
push
cmpsl
fwait
or
in
jg
mov
inc
decb
dec
mov
sub
add
ja
dec
jae
sub
xlat
xchg
dec
mov
data16
cltd
test
sarl
ss
pop
mov
nop
mov
lods
iret
jle
mov
mov
lcall
scas
fs
jae
pop
aas
push
or
int3
leave
pop
jmp
jbe
inc
repz
sub
xchg
dec
lods
cmpsb
adc
das
mov
pushf
fdivs
fstl
xlat
movsb
in
adc
cmp
subl
xorb
pop
push
cltd
add
mov
jb
add
add
jecxz
lock
mov
or
lods
leave
jl,pt
scas
xchg
aad
rol
fcmove
stc
lds
out
jle
jecxz
dec
push
rcr
je
ds
push
clc
out
pop
mov
pushl
and
mov
insl
out
pop
jae
pop
adc
sti
cli
inc
stos
das
jle
pop
sub
sub
icebp
mov
mov
jo
mov
lods
add
push
dec
scas
sbb
int
das
push
jne
sbb
daa
aam
pusha
loope
pop
test
into
jecxz
sub
addb
mov
dec
ret
js
push
repnz
ds
inc
cltd
sbb
mov
adc
dec
outsl
dec
dec
jb
lahf
push
sub
mov
in
xchg
popf
mov
jp
pop
data16
ss
dec
test
fcoms
xor
testl
pop
sbb
pop
out
inc
and
dec
data16
jae
mov
lock
lret
in
dec
dec
bound
leave
jnp
scas
fildl
stc
mov
push
jg
and
loop
mov
imul
les
aam
xchg
or
jnp
es
dec
fs
aam
lds
loopne
push
cmp
ficompl
push
shrb
jg
cmpsb
mov
sbb
and
aam
pop
jp
cmc
xlat
pop
sub
pop
mov
jno
pop
inc
jae
dec
lods
lcall
pop
pop
testb
xor
xor
cmp
jo
ja
adc
or
test
pop
aad
das
cmp
repz
pop
aad
fmull
fwait
call
out
sub
pop
pusha
xor
je
or
sbb
arpl
pushf
arpl
ret
insl
cmp
add
sub
ss
lea
push
in
mov
push
dec
or
out
js
push
cmc
ficompl
sbb
test
mov
pop
adc
xlat
shll
xchg
jmp
mov
outsl
cmp
call
clc
pop
adc
repz
push
dec
push
clc
mov
lods
in
mov
insb
push
mov
aas
aas
sub
mov
dec
push
outsl
push
out
in
or
mul
sub
mov
idivl
das
jno,pt
pop
xchg
repz
popf
ror
cmc
mov
dec
xor
mov
fisubrs
call
in
ljmp
or
sbb
shl
es
daa
clc
and
jno
dec
jae
aas
push
jns
adc
sbb
ret
cs
inc
jp
xchg
shr
mov
rcll
in
adc
cmpsb
xchg
xchg
imulb
es
dec
dec
les
dec
ficompl
call
or
mov
push
cmp
fbld
sarl
inc
fistps
pusha
xor
inc
mul
mov
mov
cli
xchg
in
adc
repz
cwtl
sbb
pop
outsl
ficoms
pusha
shll
popa
pusha
loop
xor
xchg
sahf
and
jb
es
xchg
leave
enter
pop
push
in
cmp
pop
int3
mov
mov
pop
mov
jp
mov
idivb
mov
adc
into
sbb
shll
loop
lock
push
push
xor
pop
outsl
fwait
bound
aas
ficompl
ret
shl
lods
sbb
cwtl
mov
test
or
inc
sub
mov
or
push
in
cmpsl
or
dec
fs
pop
sbb
popf
jge
test
mov
sbbb
lea
in
mov
shrl
jl
mov
fbld
fwait
sbb
cmpsb
push
pop
push
in
jno
js
xchg
inc
stos
jmp
xrelease
sbbb
es
cmp
cmpsl
xchg
insl
cmpsl
cld
cmpsl
sbb
js
adc
jmp
int3
mov
test
dec
scas
test
cli
dec
out
loope
psubsw
and
sub
mov
or
xor
dec
lahf
adc
push
ret
inc
je
cmp
ret
mov
cmpsb
pop
jmp
test
mov
in
daa
xchg
cs
add
mov
bnd
lds
mov
into
enter
push
pop
jbe
pop
and
and
out
pop
push
mov
leave
out
pop
xchg
sysenter
sahf
mov
or
je
imul
adc
adc
or
mov
jns
adc
sahf
out
or
aaa
es
add
xchg
bound
test
negb
out
les
aam
test
out
outsl
rcrl
movsl
popa
mov
scas
or
and
adc
push
fs
call
sahf
inc
xchg
mov
stc
loop
jns
pop
sbbl
adc
addb
xor
dec
cmp
adcb
jb
hlt
cli
shrb
pushl
outsb
jbe
sbbl
inc
je
into
pop
mov
incb
or
push
xor
insl
add
mov
or
push
jmp
mov
jae
movsb
pop
std
mov
adc
sub
add
xor
data16
xor
adc
in
dec
rorl
adc
mov
dec
enter
lret
mov
push
bound
push
adc
dec
jns
fwait
mov
jnp
in
out
test
mov
ret
iret
insb
pop
adc
mov
inc
lds
inc
push
and
pop
xchg
loope
pop
out
roll
pop
insb
lahf
dec
jge
inc
ss
loop
sub
sub
xchg
jl
lret
std
in
or
jns
movl
icebp
xor
fadds
out
shlb
rcr
lock
repz
imul
rcll
mov
sub
push
repnz
cltd
pop
push
lods
insb
sub
je
cmp
lods
cmp
mov
fstl
adc
idivl
dec
add
out
scas
stc
xor
aad
adc
lea
mov
xlat
enter
push
sbb
cmpsb
xchg
mov
ficoml
aaa
arpl
int3
inc
jbe
push
dec
out
dec
add
adc
mov
iret
sbb
iret
daa
sub
or
paddw
int3
push
cmp
test
cmp
movsl
scas
sbb
pop
mov
jecxz
jmp
jbe
fstp
xchg
insl
dec
sub
mov
inc
mov
jg
inc
mov
push
mov
cmp
jae
movsl
inc
andb
xchg
test
jb
dec
lret
test
cmpsb
mov
or
stos
pusha
loopne
jb
and
sub
or
push
mov
push
lahf
loopne
pop
fcmovnbe
jp
int3
addr16
xchg
sub
int
sbb
mov
sub
sub
gs
ds
sub
xor
and
hlt
scas
in
insl
jo
cld
call
dec
les
imul
fistps
test
push
pusha
sbb
inc
cmp
popf
cld
cmc
push
cmp
shlb
mov
cli
hlt
mov
test
sbb
aad
xchg
nop
sarb
or
jns
popa
call
cltd
pushf
sarb
leave
sub
sub
xorb
jg
pop
adc
push
mull
ss
xor
adc
add
aas
and
jo
and
mov
inc
nop
pop
ret
jmp
loopne
mov
mov
pop
lods
pop
push
fsts
add
int
dec
xor
sbb
lcall
xor
sub
and
sahf
and
sbb
sbb
lods
cmpsl
es
pop
pop
fbstp
mov
xchg
mov
add
mov
test
lahf
pusha
and
orb
aam
mov
jne
sti
lds
or
scas
or
inc
cmp
test
jne
cmpl
dec
stos
call
pop
add
stc
add
jecxz
and
imul
mov
and
mov
jmp
clc
mov
dec
fidivrl
bound
je
pop
loopne
push
dec
bound
or
repz
xchg
std
inc
out
jge
or
movsl
pusha
adc
inc
cmp
ljmp
mov
add
jl
aaa
lock
mov
push
push
and
inc
test
ds
push
out
fstpl
shrl
subl
dec
jecxz
cmp
sbb
js
hlt
imul
clc
es
xchg
out
or
daa
jno
loopne
bound
je
pop
mov
inc
or
aam
loopne
sbb
inc
push
mov
and
or
bound
sahf
xchg
mov
mov
push
pop
mov
mov
ss
scas
push
push
lods
and
mov
or
scas
sbb
sbb
lret
dec
mov
cmp
mov
jne
dec
imul
out
jle
test
fstpt
push
out
fwait
inc
push
dec
xor
mov
cmp
movsl
shl
mov
stc
sti
fstpt
mov
jecxz
pop
pop
jg
add
xchg
mov
xlat
int3
xor
sub
lds
cli
lret
int
add
pop
mov
lods
aad
dec
mov
add
mov
mov
out
adc
inc
iret
in
cmpsb
jns
mov
icebp
dec
aad
aam
std
inc
dec
dec
xchg
ror
mov
std
inc
repnz
pop
outsb
fisttpl
lea
xor
jb
shll
push
xorb
or
add
and
fldl
adc
xlat
arpl
lea
les
into
lcall
mov
adc
sbb
and
cmp
scas
in
sbb
lret
popa
sub
cmp
fldcw
jl
pop
js
movsb
popf
mov
insl
or
push
push
jns
xlat
imul
dec
sahf
scas
mov
mov
sarl
ss
jle
sarl
add
cmpsl
in
subb
popf
push
xchg
xor
gs
jno
add
xchg
cld
in
jg
dec
stos
cmpsb
lock
icebp
or
jmp
and
or
push
pop
push
mov
jno
loope
jmp
sub
dec
jae
gs
dec
xchg
cmpsl
pop
inc
mov
insb
pop
test
pminsw
test
movsl
insl
dec
mov
jno
cmpsl
repz
leave
push
clc
or
xchg
scas
aas
call
cli
pop
insb
mov
cmp
pusha
sbb
out
ret
lret
dec
jle
cmp
imul
xchg
mov
iret
xchg
mov
mov
rsqrtps
inc
sar
add
push
out
push
in
xchg
or
push
sbb
and
ljmp
jge
shr
jae
pop
or
sbb
orl
fs
xchg
mov
push
sbb
pop
cmpsb
sbbl
mov
push
in
or
aaa
iret
sbbb
pop
push
cmpsb
pop
repnz
lcall
lret
jle
push
ror
in
out
mov
movl
xchg
mov
fildll
stos
stc
cltd
outsl
mov
jge
mov
xor
mov
mov
mov
test
sub
das
mov
js
aas
stos
sahf
int
dec
add
push
dec
cltd
out
js
inc
popf
or
jecxz
mov
lcall
testl
inc
mov
xor
hlt
jo
pop
pop
inc
call
aaa
mov
jecxz
stos
mov
jae
inc
in
fldl
stos
or
fcmovne
pop
inc
add
ds
movsl
mov
out
xchg
inc
xor
mov
bound
jno
sti
add
push
sub
in
int
ror
outsb
push
test
or
cmc
test
in
fsubrp
mov
fdivl
mov
hlt
emms
movsb
insb
enter
lret
aas
jmp
jo
jle,pt
das
popa
sbb
fsubl
pop
loop
scas
lea
fsts
in
jne
push
mov
cmp
xchg
ja
shr
cmp
xchg
sub
rclb
mov
mov
mov
cmp
scas
pop
loop
mov
or
dec
mov
in
hlt
dec
push
stos
inc
inc
inc
sbb
cld
add
dec
ss
jmp
ret
xchg
xchg
add
push
add
imul
push
les
push
test
andb
out
fstpl
xor
pushf
cmp
sub
fidivrl
sub
sub
sbb
out
mov
push
push
adc
xor
inc
adc
mov
int3
pushf
aaa
inc
mov
repnz
ljmp
cmp
fmull
mov
jae
pop
adc
rol
lahf
clc
daa
mov
jp
add
lret
sahf
negl
adc
ffreep
sbb
cmc
inc
hlt
xchg
mov
cwtl
push
dec
jb
pop
aad
fldl
jg
insl
dec
jae
imul
mov
cwtl
iret
xchg
push
in
sbb
pop
sub
cmp
sub
addr16
pop
dec
and
pop
sbbb
mov
jle
push
mov
rcrb
sahf
push
inc
leave
mov
data16
mov
push
icebp
mov
mov
cmp
mov
cld
adcb
jp
pushl
jg
push
mov
dec
cs
sbb
pusha
xlat
faddl
xchg
push
jno
jl
jb
push
or
adc
adc
xchg
test
rclb
jae
ds
xor
aad
mov
test
outsl
mov
and
jae
sbb
jle
sbb
inc
add
scas
movsl
sahf
gs
adc
out
mov
roll
push
sub
push
push
fmuls
sub
std
call
jbe
imul
and
mov
push
lcall
push
push
imul
sub
and
cmp
cmp
or
and
mov
pop
ret
fstpl
mov
popa
mov
stos
in
jl
adc
and
pop
push
dec
jbe
adc
push
pusha
or
lods
push
push
adc
mov
dec
xchg
mov
add
sub
nop
sbb
or
pop
inc
das
outsb
fldl
sbb
push
cmpsl
mov
sbb
outsb
push
mov
sbb
roll
lods
rorl
xchg
test
stos
fsubrs
insb
xor
mov
cmpsl
mov
das
lods
lcall
pop
dec
push
je
cmp
pop
out
in
push
int
dec
dec
cmpsb
lret
ds
and
jge
fisttpl
scas
ss
in
out
mov
push
jae
xor
popf
shl
jns
or
mov
out
or
cld
jno
cmp
cmp
sbb
or
or
sarl
adc
adc
stos
cmp
lea
in
xchg
sarl
fs
xchg
call
push
test
clc
dec
fidivrl
pop
loope
xchg
xor
arpl
fisubrs
imul
test
xlat
cmp
mov
xchg
mov
and
cltd
jle
jns
in
push
pop
insl
xchg
ret
fs
jb
inc
mov
fdivrp
pop
insb
mov
ret
push
mov
adc
movsb
inc
or
daa
push
rol
lods
outsl
jnp
push
cmp
in
sbb
push
add
aas
xor
imul
inc
aam
adc
jl,pt
mov
jbe
icebp
enter
lds
and
in
push
lds
lcall
jno
pop
mov
repnz
mov
in
jne
pushf
popa
dec
inc
dec
enter
mov
int
dec
sarb
cmp
mov
add
jns
jae
test
sbb
sbb
mov
jp
jecxz
icebp
mov
aas
and
mov
popa
enter
jo
daa
leave
push
popa
cmp
or
fidivrs
cli
lahf
dec
cmp
test
not
sbb
fs
lea
mov
mov
aaa
enter
xchg
iret
pusha
leave
aam
pop
and
insl
xor
push
push
inc
push
out
add
add
adc
xor
out
in
sub
or
stc
xor
xchg
xor
stos
ret
xor
dec
xchg
roll
cmp
pop
data16
xchg
adc
mov
inc
cwtl
cmp
lods
mov
sbb
jne
add
mov
jg
mov
jne
lock
mov
cmp
cmp
xchg
xor
cmp
data16
sti
xchg
or
xchg
sub
sub
and
xchg
insl
xor
mov
mov
or
cs
sarl
xchg
sub
push
mov
push
daa
sbb
mov
sub
stos
test
loop
mov
add
and
imul
xchg
clc
sub
arpl
adc
xchg
jo
fidivrl
xor
jmp
adc
push
subl
xchg
orl
mov
rcll
enter
sub
lahf
xor
and
in
sub
xorb
mov
sbb
sbb
scas
cmp
lcall
mov
mov
cmpsl
inc
jnp
or
adc
popa
ror
add
cmpsl
adc
jg
imul
lahf
xor
cmpsb
pop
xchg
push
addr16
or
ja
and
jmp
in
stc
or
pop
insl
jb
call
js
xlat
mov
cwtl
movsb
sarb
mov
mul
cmc
push
hlt
ret
rolb
cmp
dec
addr16
leave
add
loope
mov
shll
mov
loopne
lods
jmp
cli
insb
in
push
scas
jg
out
pop
jne
out
popa
and
std
shl
adc
into
mov
or
dec
aaa
setnp
mov
nop
xchg
mov
mov
test
jle
cli
sub
dec
inc
mov
xchg
fdivrp
addl
jnp
dec
nop
and
cmp
push
mov
rorb
mov
xchg
or
dec
movsb
cltd
cmp
out
mov
outsb
xchg
int3
xchg
xor
in
push
inc
sahf
iret
jle
mov
ret
or
xchg
sarb
into
jmp
sti
cmp
xchg
in
jno
mov
outsl
push
addr16
sahf
adc
inc
test
dec
cmpsb
cwtl
pushf
adcb
cltd
jmp
stos
jns
pop
push
in
aaa
xlat
push
xor
imul
nop
cltd
mov
pushf
clc
fs
pusha
loopne
mov
or
data16
pop
dec
lcall
push
mov
aad
fsts
push
sub
scas
leave
xchg
mov
mov
inc
mov
pop
mov
pushf
and
or
dec
xchg
push
aad
test
mov
xchg
xchg
xchg
lock
mov
xchg
sahf
fwait
jo
pop
js
lret
adc
sub
xchg
mov
fdivs
xor
sub
pop
gs
push
pop
popa
and
stos
movsl
dec
lcall
ficoml
out
ds
xor
movl
sahf
push
xor
add
scas
dec
jns
add
xchg
xor
and
push
pop
add
je
cli
into
lret
mov
jle
ss
popf
or
in
fnstcw
dec
mov
jb
inc
mov
push
movsb
cmp
sub
aad
pop
and
in
pushf
pop
rcl
jle
dec
cmp
jl
or
dec
push
cmpsl
negl
pop
jo
cwtl
xchg
aad
pop
imul
inc
imul
out
pop
sbb
bound
or
cmp
stc
mov
or
mov
sbb
and
mov
push
cmp
fnsave
xor
xchg
xor
inc
jge
xchg
xchg
mov
shll
dec
or
push
xchg
cmp
mov
rol
or
push
fcmovne
mov
insb
jae
lock
jl
data16
push
in
jns
movsl
jp
cmpsl
jno
lds
mov
addb
jl
aas
pop
ja
popa
adcb
fcom
clc
pop
jno
lret
cld
cmpsb
cs
divl
int3
in
imul
call
jp
jecxz
out
ja
pop
leave
mov
sbb
cmp
add
mov
mov
lods
cmpsl
mov
jne
push
and
leave
dec
or
fistl
inc
push
sbb
jmp
les
movsb
std
aad
mov
xchg
and
add
fildll
push
pop
dec
mov
add
shl
mov
js
cmc
sahf
int
sub
sub
out
mov
test
jae
in
mov
test
outsl
xchg
shlb
sub
fdivrs
or
jno
div
inc
lea
aad
movsl
ret
dec
sbb
shl
or
test
pop
jbe
decb
ds
sbb
insb
inc
sarb
pop
jmp
mov
cmp
mov
add
movsl
dec
cld
inc
push
dec
movsl
int3
push
sub
fs
mov
ds
sbb
fstps
ss
mov
lods
pop
repz
xchg
inc
sub
mov
mov
mov
sub
mov
ret
sbb
add
fists
inc
testl
cmp
andb
mov
leave
jecxz
loop
xchg
loope
mov
ds
sbb
adc
mov
inc
pusha
xor
aas
sbb
hlt
or
jnp
and
call
test
ss
pop
mull
in
push
imul
stc
icebp
enter
sub
test
or
adc
sbb
dec
jne
nop
jo
int
das
and
adc
in
sbb
gs
push
imul
imul
mov
xor
sub
test
jae
int
or
scas
add
mov
inc
mov
idivl
orb
cltd
xchg
cwtl
pop
fimuls
rolb
jl
jb
movsb
stos
fdivrl
push
push
pop
inc
push
mov
in
mulb
jp
lds
int
add
loop
add
jl
in
or
popl
roll
gs
jp
add
xor
or
fs
cmp
cmp
ret
dec
inc
fnclex
aas
and
or
lods
rorl
rorl
cli
sti
call
mov
outsl
rclb
pop
jae
or
adc
fisttpll
push
addr16
jg
stc
pop
mov
xchg
dec
gs
cmp
test
sbb
push
bswap
negl
mov
flds
lock
movsl
cmp
sub
jbe
je
out
ud1
in
and
iret
flds
sbb
sbb
cmp
xor
bound
or
push
jecxz
lock
loop
cli
jno
and
fcmovu
jno
fcomi
loopne
hlt
pop
mov
xchg
inc
sub
pop
mov
push
fsubrp
adc
bound
dec
out
in
lret
pusha
jecxz
dec
fstl
xchg
pop
push
cld
clc
dec
xchg
ret
add
inc
add
jle
fwait
lods
cmp
xor
jmp
mov
push
xchg
add
in
add
xchg
mov
addr16
pmaxub
in
inc
pop
jbe
sahf
lods
mov
pop
stos
xor
xor
movsb
sarb
inc
pop
inc
add
lds
and
or
xor
mov
jo
pop
pop
imul
inc
mov
xlat
sub
out
fiadds
pushf
or
idivb
push
push
stos
or
arpl
rcrl
xchg
lds
xor
jb
mov
mov
in
adc
inc
stos
aaa
into
std
push
add
mov
cli
fisubl
pop
daa
test
push
add
lds
xchg
stos
xor
sbb
sbb
or
dec
cmpsb
iret
outsb
stc
cld
lcall
mov
sbb
aaa
jmp
in
out
std
stos
mov
pop
xor
orb
adcl
lock
mov
mov
jae
jge
dec
scas
shll
cmpsb
jmp
cmc
stos
clc
ret
jmp
daa
daa
dec
das
xor
loop
and
mov
fadds
jle
popa
jbe
adc
mov
fiaddl
sbb
imul
add
jo
mov
xchg
pop
stos
pop
lret
xor
sti
pop
fs
cmp
outsb
jnp
xchg
xor
mov
pop
and
data16
cltd
mov
sbb
aam
fildll
pop
pop
insb
ret
dec
js
out
pop
std
sbb
test
imul
jno
test
xor
add
adc
cmp
cmp
popa
int3
orb
scas
push
imul
cli
into
lock
or
out
mov
movsb
lea
int3
adc
cmp
inc
movb
flds
and
fs
jne
pop
push
sbb
dec
inc
sbb
pop
negb
or
fdivrl
mov
or
lret
xor
jne
mov
in
movsl
aam
dec
lret
shl
mull
xchg
cmc
sub
pop
add
mov
xchg
outsl
jnp
inc
mov
pop
push
cmp
jae
push
jl
xchg
lret
sti
cs
call
cmp
les
add
xchg
rclb
sub
pop
xchg
imul
xor
scas
xor
pushf
lcall
mov
inc
int3
pop
and
push
mov
pop
xor
adc
sub
repnz
jmp
cmc
lea
push
mov
and
out
cwtl
cwtl
dec
les
inc
mov
fmul
adc
mov
popa
xor
push
lret
ljmp
in
mov
xchg
imul
push
mov
pop
les
mov
mov
or
mov
es
inc
cmp
sbb
popf
test
dec
sub
fmull
bnd
fcompl
cltd
mov
mov
out
outsb
xor
sbb
negb
dec
mov
pop
inc
or
pop
pop
push
test
mov
xchg
jae
jno
xchg
pop
test
xor
stos
xchg
mov
mov
icebp
movsl
rcrb
loop
iret
and
lcall
lcall
cld
cmp
stos
adc
or
addr16
lods
rorl
lahf
and
inc
cmp
lret
push
mov
sbb
mov
repnz
mov
or
sub
mov
flds
dec
stos
lds
cmpsl
mov
enter
add
sahf
jnp
in
imul
mov
fnstsw
scas
dec
mov
movmskps
xor
inc
mov
sbb
xor
xchg
or
mov
and
mov
sub
add
sbb
stos
mov
shrl
xchg
adc
call
int
fcompl
sbb
jg
mov
fiadds
jb
flds
test
cmpsl
inc
xchg
mov
ret
das
in
insl
xchg
push
add
dec
fbstp
and
sbb
dec
push
int
adc
imul
cmovne
xchg
loopne
data16
jns
pop
bswap
movsl
pusha
clc
mov
inc
jb
fisubrs
and
stos
lret
pop
jle
ljmp
mov
sub
jnp
les
xor
jecxz
stc
jb
clc
mov
mov
cli
xchg
push
out
clc
divl
fisubs
xor
callw
mov
orb
out
jne
pop
scas
es
lcall
call
dec
sub
add
mov
sbb
cmpsb
xchg
jo
dec
lods
add
shlb
shlb
mov
movsb
or
xchg
daa
loopne
inc
inc
jns
mov
mov
ret
pop
inc
data16
dec
inc
or
das
ret
mov
pop
insl
call
enter
mov
add
cmp
pop
adc
mov
xchg
fisubrl
mov
xchg
jno
repz
lcall
ret
adc
cwtl
dec
test
pop
xor
test
fdivs
mov
cmp
add
in
fcoms
push
lods
inc
and
inc
xchg
jns
mov
or
cs
sub
test
ret
popa
and
sub
xchg
dec
mov
jb
lock
mov
xchg
aad
loop
leave
into
xchg
mov
lds
pop
clc
int
sbb
xor
xchg
fcmove
shll
mov
pop
ret
sbb
decb
jno
popf
and
or
dec
jmp
mov
movsl
rorb
in
out
xor
mov
mov
jl
out
push
add
inc
jmp
in
mov
aad
mov
aam
dec
adc
fbld
fistps
stos
outsl
dec
je,pt
movsb
lods
fcmovne
addr16
add
xor
lea
jg
lds
pop
dec
mov
push
mov
and
lea
and
insb
cmp
add
mov
js
sbb
ja
xor
pop
push
jo
mov
movntps
mov
movsl
and
ret
mov
xchg
pushf
das
push
ljmp
ja
cmp
dec
ret
pop
shll
mov
xchg
je
in
sub
mov
push
inc
sub
add
std
popa
lds
xor
lods
out
jg
pop
mov
lcall
insl
jl
mov
pop
andl
jg
xchg
mov
js
mov
out
push
test
mov
cltd
and
inc
jge
and
xor
test
mov
dec
data16
dec
stos
insl
mov
testl
outsb
out
push
cmc
leave
aas
xchg
js
pop
out
fs
es
int3
clc
xchg
sbbb
cmp
in
mov
ror
and
into
xchg
out
dec
jbe
inc
lock
insl
data16
xchg
stc
stos
sub
push
add
xchg
rcl
shrb
test
mov
aas
fadds
sahf
cmc
mov
out
or
ret
jge
bnd
lock
push
in
sbb
pop
cmpsl
std
add
push
cltd
scas
pop
icebp
lods
dec
es
xor
shl
sub
mov
psrld
call
lods
icebp
cmp
xor
add
das
testl
leave
mov
bound
add
fadd
aam
mov
call
mov
lock
clc
imull
jg
leave
stos
inc
iret
inc
xlat
mov
dec
lret
cld
and
push
jmp
mov
movsl
shlb
or
inc
mov
imulb
xor
shlb
add
pop
js
ret
and
imull
mov
push
addr16
lods
outsb
add
negb
cltd
test
aad
cmc
ds
iret
push
jno
cltd
xlat
jle
mov
rcll
cli
pop
insl
push
lods
test
pop
lds
push
gs
fldl
push
pop
cmp
dec
cld
in
fcompl
push
enter
fdiv
jo
test
pop
inc
pop
in
mov
xchg
sbb
inc
mov
jp
into
idivl
jge
mov
scas
pop
jno
push
mov
std
push
fmul
mov
cwtl
xchg
sbb
ds
jecxz
xchg
pusha
lock
shr
lcall
xchg
or
add
pop
lods
jns
xor
or
pop
insb
mov
xor
std
xchg
insb
sbb
in
test
or
pop
cmp
adc
add
cmp
push
or
lds
adc
xor
ret
dec
mov
je
xor
hlt
push
aas
sbb
jl
or
popf
outsb
lret
data16
push
lods
test
xchg
stos
lret
xorl
sbb
fs
call
pop
testl
jnp
sbb
mov
xchg
and
sub
mov
add
sub
jmp
int
gs
push
aas
scas
inc
mov
mov
enter
pusha
sbb
adc
cmp
int3
daa
jge
inc
lret
dec
xchg
ja
mov
xor
or
scas
pusha
push
xchg
fst
test
jp
movsl
dec
mov
lahf
outsb
fld1
or
roll
jmp
mov
mov
pop
jnp
cli
lcall
movsl
dec
jbe
adc
stc
loop
or
lret
pop
mov
inc
clc
mov
push
mov
mov
add
stos
jg
dec
in
imul
or
sarb
push
add
xor
xor
sbbb
mov
dec
xor
jmp
nop
sbb
xor
movsb
mov
inc
out
inc
arpl
mov
dec
and
jl
inc
loop
cmc
pop
movsl
hlt
movsl
sbb
pop
mov
add
lcall
jne
jmp
and
out
sub
leave
daa
and
fstpt
addr16
int
gs
test
in
push
or
xor
pop
pop
inc
mov
hlt
pop
insl
out
bound
jnp
xlat
mov
or
fsubrl
inc
outsl
and
shrl
shrb
ficoms
cmc
nop
shll
call
clc
lret
and
jae
push
dec
dec
mov
dec
loop
mov
and
movsb
pop
push
mov
icebp
pushf
rclb
sub
addl
push
imul
dec
into
stos
mov
jge
xchg
add
adcl
jae
loope
mov
mov
mov
cmp
js
mov
mulb
jge
fsubs
or
pop
mov
pop
push
jp
inc
or
movsl
lahf
push
cltd
mov
and
jo
sbb
in
in
push
cmp
lcall
xchg
pop
scas
mov
push
cmc
jg
xchg
dec
into
adc
stos
xchg
push
movsl
mov
insl
cltd
int
rcrb
mov
loop
cmp
mov
mov
add
sbb
les
sti
imul
xchg
jge
cltd
bound
or
loop
push
pop
mov
or
nop
fadd
insl
lcall
je
test
rcll
xor
call
movb
rclb
sahf
int
mov
inc
inc
ja
adc
insl
imul
xchg
jle
add
cltd
lret
mov
mov
sub
pop
add
fldl
push
or
pusha
xchg
mov
jge
jno
in
arpl
arpl
or
in
movsb
push
jns
es
movsl
adc
dec
int
push
sbb
and
adc
sahf
loop
out
out
add
mov
add
jecxz
fcoml
cmp
sbb
mov
mov
out
jp
push
scas
sbb
push
mov
fnstcw
sub
jg
mov
stc
sub
cmp
push
xor
and
int3
and
adc
xor
incb
faddl
jbe
push
pop
loopne
adc
pop
mov
xor
sbb
mov
ljmp
call
ds
scas
xchg
mov
mov
int
cmp
pusha
mov
mov
fcoms
mov
in
inc
ficomps
add
aaa
ja
dec
iret
mov
dec
fistl
adc
dec
xor
icebp
push
mov
xor
icebp
into
mov
sub
cld
jnp
sbb
or
and
and
scas
fdivs
or
or
jle
xorl
fbld
sbb
popa
xchg
imul
sbb
test
xchg
mov
mov
repz
gs
mov
pusha
lret
daa
daa
inc
mov
cmpsb
pop
jns
xchg
add
mov
data16
out
stos
mov
sub
push
mov
xchg
or
inc
push
mov
xor
movsl
or
daa
je
sbb
lds
popa
call
cmp
mov
pop
add
mov
dec
jecxz
icebp
push
cld
and
sub
lret
xchg
xchg
adc
out
icebp
jmp
pop
dec
cli
shll
lds
imul
inc
xor
dec
mov
dec
ret
cmc
sbbb
fisubl
out
xor
jns
mov
test
imul
mov
leave
mov
sub
int3
cmpb
dec
test
xchg
pop
sahf
sub
leave
jno
fs
xor
push
xor
ret
inc
adc
mov
mov
push
repnz
imul
stos
xchg
cli
test
add
xor
leave
movsl
mov
into
outsl
call
jp
inc
hlt
xchg
je
pushf
cmp
add
adc
je
dec
loopne
notb
xchg
pop
mov
cmp
or
sub
lahf
repnz
scas
aas
pusha
insb
jecxz
lds
loope
fwait
test
bnd
xchg
pop
jmp
jbe
fdivs
sub
stos
mov
adc
mov
jno
cmc
popf
mov
mov
xchg
push
leave
xor
int3
sahf
xchg
mov
nop
mov
xchg
lcall
sbb
dec
dec
or
lods
gs
insl
mov
dec
pushf
mov
cwtl
mov
imull
sub
pop
inc
mov
ds
testb
xchg
pusha
pop
sbb
mov
js
stos
lcall
dec
push
repz
filds
fldt
test
pop
mov
dec
aas
jl
sti
sbb
dec
mov
in
ret
popf
repz
ror
jno
pop
inc
push
fwait
or
mov
jp
or
pop
or
ficompl
jg
idivl
in
cld
sarb
leave
push
mov
push
ljmp
outsb
cltd
pop
mov
inc
in
xlat
cmp
mov
mov
push
xor
pop
cld
aaa
jmp
iret
dec
jecxz
rcrb
mov
cltd
inc
xchg
sbb
lcall
jl
push
scas
jo
dec
xor
inc
test
mov
loop
nop
ja
sbb
cmp
enter
insb
ficomps
stc
sub
sbb
insl
add
mov
insb
loopne
xchg
push
lret
lret
test
add
push
add
xchg
adc
sub
xor
jns
mov
jnp
lahf
sub
es
lret
xchg
cmp
xorb
add
xor
cli
cmc
popa
jge
test
cmp
insb
test
pop
ja
cmp
cli
xchg
cmpsl
jp
pushf
adc
or
pop
adc
mov
mov
adc
mov
sbb
fwait
add
daa
xor
bound
or
pop
mov
test
daa
cmc
mov
sub
jl
movsb
sbb
jge
add
loope
sbb
xor
idivb
decb
test
add
sbb
xchg
sub
outsl
adc
adc
and
stos
and
or
lahf
add
cmpsl
mov
mov
fstpl
lods
pop
xchg
mov
sub
xor
setns
jle,pn
int3
mov
mov
xchg
scas
dec
lahf
xchg
nop
or
pop
push
xor
fnstenv
mov
jnp
push
ficomps
hlt
cli
adc
scas
and
xchg
jle
mov
jle
add
fmul
lock
movsb
push
jge
xor
pop
cs
imul
jae
add
es
push
std
xchg
dec
fcmovnb
cmp
inc
out
push
jmp
adc
mov
cltd
mov
icebp
cld
in
test
sbbl
pop
mov
pop
daa
xor
pop
test
clc
xor
adc
leave
gs
mov
stc
imul
andl
rolb
ja
push
fs
cmp
jmp
inc
fwait
in
adc
push
loope
xchg
call
icebp
or
in
add
loope,pn
mov
sbb
dec
icebp
test
lret
scas
cltd
ljmp
in
arpl
sbb
and
mov
ror
xor
or
addl
addr16
adc
fcoml
add
xchg
das
inc
or
ret
out
adcl
pop
sbb
xlat
or
pop
fwait
dec
mov
sti
mov
test
test
rclb
inc
sub
mov
adc
mov
lcall
xor
cli
push
cltd
pop
sub
test
or
push
imul
hlt
cmc
sbb
xchg
rcrl
mov
adc
outsb
and
and
lea
lods
shlb
fisubrs
pushf
mov
jns
out
sbb
and
push
clc
cltd
lea
xchg
dec
pop
rolb
dec
cmpsl
mov
or
scas
outsb
in
in
repz
mov
test
loop
jmp
push
jo
mov
pop
add
notl
ret
xlat
xchg
cltd
adc
jle
ficompl
test
jp
ss
add
into
in
jne
std
in
ja
outsl
pop
out
mov
adc
lods
xorb
pop
pop
push
inc
mov
cmpsb
cmp
xor
mov
nop
movq
cmp
jno
jb
inc
cmp
pop
or
mov
inc
icebp
dec
in
imul
ljmp
fsubrs
je
lret
lods
fdivl
sbb
adc
daa
push
xlat
dec
push
push
push
lcall
jnp
mov
jge
cltd
pop
push
sahf
lods
hlt
inc
sub
pushf
jle
pushf
pop
pop
xor
js
repnz
xchg
lret
hlt
lahf
mov
je
cmc
jge
pop
jge
sahf
push
sub
pushf
pop
bound
cmp
call
mov
enter
int3
push
fmul
cwtl
jbe
icebp
in
imul
xchg
mov
in
gs
popl
mov
out
lods
mov
daa
or
mov
push
dec
push
sub
loop
scas
cmp
xchg
scas
mov
imul
mov
xchg
xor
fwait
and
mov
out
mov
mov
in
inc
int3
lods
push
loope
lahf
js
mov
mov
pop
pop
scas
jne
clc
xchg
xchg
lods
out
xlat
std
in
and
daa
lcall
jl
inc
jl
inc
shlb
sub
push
push
enter
cs
sbb
aad
mov
stc
movsb
out
mov
mulb
sti
rorb
lock
lods
adc
xchg
lock
call
and
dec
sbb
mov
lret
stos
xorl
xor
pop
fwait
call
and
loopne
push
rcl
loop
neg
inc
jecxz
rol
ret
jbe
and
or
pop
pop
mov
add
or
push
lods
mov
and
mov
int3
sub
lds
test
jb
loopne
mov
sbb
or
test
inc
sti
fidivs
lcall
cmp
sti
outsb
xor
sbb
clc
gs
jns
clc
iret
ja
sti
sub
sub
cmp
icebp
push
mov
xor
jne
clc
inc
cmc
fidivs
fsubr
dec
fildll
dec
jb
fs
test
int
or
out
inc
sbb
into
jns
jmp
push
lea
dec
fsubrs
jns
scas
add
ficoms
mov
es
xchg
std
or
xchg
in
lods
sti
and
sbb
icebp
scas
adc
adc
rep
test
dec
addb
fwait
push
jmp
daa
icebp
pop
jae
pushf
pop
nopl
cmp
in
jl
or
dec
pusha
test
mov
or
hlt
jge
mov
xchg
jbe
inc
lahf
fxch
mov
movl
in
negl
lea
inc
mov
cwtl
sub
sahf
sub
insb
outsl
repz
mov
pop
push
cmpsl
enter
mov
shl
cmpsb
xor
mov
xchg
cwtl
movsl
pop
inc
xor
pop
sahf
popl
test
clc
fdivrs
push
mov
jle
arpl
and
pop
adc
lods
aas
cmp
xor
sub
sub
in
push
dec
inc
jbe
inc
xchg
lret
dec
mov
push
mov
or
in
or
inc
jmp
shll
iret
and
es
stc
ds
xchg
repz
icebp
iret
cmpl
push
sbb
ss
dec
inc
shlb
lock
std
popf
inc
and
mov
adc
xor
out
lcall
mov
or
cmpsl
test
mov
inc
stc
insl
xor
dec
fs
sub
jg
sub
xchg
sub
jmp
jae
mov
and
gs
cmp
jns
imull
cmp
jns
pusha
int
iret
sub
mov
dec
mov
adc
sbb
and
insl
mov
sahf
xor
mov
das
cmp
cmpsb
daa
js
and
mov
mov
ret
fwait
idivl
sbb
test
sub
lods
loopne
jecxz
jl
fnstenv
fld
inc
pop
xor
xchg
xor
subl
aad
cmp
dec
movsl
adcl
sbb
outsl
add
fstpl
adc
shll
jno
test
call
sbb
pop
pop
adc
mov
cmp
add
pop
jg
ficomps
pop
mov
dec
push
loop
mov
jae
outsl
outsb
loope
inc
mov
in
dec
inc
sub
cwtl
outsb
mov
into
pop
or
inc
add
scas
test
or
repz
add
sarb
pop
xchg
insb
push
push
sub
mov
insb
jnp
cmpsl
xor
mov
cmpsb
lock
sahf
cmp
cmp
xor
outsl
inc
xchg
dec
mov
fwait
jmp
adc
cmpsb
das
pop
pop
sub
pop
andb
mov
jecxz
ljmp
mov
into
cltd
and
testl
adc
std
arpl
aam
cmp
jo
push
out
popf
push
mov
jb
and
in
dec
jecxz
not
push
pop
mov
xchg
out
fiadds
outsl
sub
mov
ret
add
jbe
sub
and
cmpsl
and
lcall
divb
pop
pop
aam
mov
lock
mov
jmp
sahf
clc
dec
pop
cmp
xor
iret
loopne
jp
or
rcll
ret
cmp
xchg
stc
movsl
iret
cmp
and
in
fiadds
int
push
cmp
jno
mov
fdivl
mulb
test
fwait
dec
fstl
in
inc
or
mov
das
mov
xor
mov
pop
outsb
aas
jp
sbb
jp
xchg
xor
lcall
test
pop
data16
fs
add
cmp
inc
out
xor
sbb
jmp
mov
mov
xor
in
add
shrb
push
cmp
hlt
mov
xchg
into
mov
arpl
leave
mov
fstpl
fnsave
dec
inc
xlat
pop
inc
xor
std
cwtl
pop
inc
adc
dec
pop
xor
and
in
inc
js
mov
adc
jnp
int
imul
mov
pop
mov
sub
ds
cmpsb
loope
adc
lock
pop
xor
negb
mov
adc
sub
jae
push
rep
iret
inc
dec
pop
clc
bound
inc
or
insb
push
adc
cmp
sub
mov
push
lock
cmp
imul
sub
ds
in
js
int
inc
xor
repnz
xor
ds
jns
data16
mov
aam
jno
mov
inc
mov
hlt
into
mov
outsb
dec
sbb
into
and
and
decb
mov
sbbb
bound
dec
add
pop
mov
lods
movsb
pushf
ffreep
inc
cli
out
rcl
incl
orb
dec
and
loope
pop
mov
int3
stc
jmp
lret
cmp
pop
xchg
out
adc
iret
lret
cmp
cmc
fildl
inc
test
icebp
dec
aam
adc
scas
mov
dec
or
or
out
aad
sbb
adc
pop
addr16
adc
test
rcrb
jne
dec
dec
push
pop
loope
lahf
pop
push
xor
inc
into
jg
add
jl
out
add
and
or
mov
in
inc
mov
fisubs
lcall
inc
jmp
add
jb
lods
xor
hlt
xor
stos
xlat
movsb
jns
sbb
std
and
pop
add
int3
rcrl
enter
pop
mov
jge
sub
mov
call
sub
xor
xchg
rorb
cmp
fmuls
xor
add
mov
cmpsb
xchg
pop
ret
bound
xchg
mov
pop
ret
xor
int
jo
add
maskmovq
notl
jmp
dec
jmp
loopne
mov
push
leave
int
xchg
rol
mov
dec
mov
cmp
in
sub
and
cld
insl
sbb
in
cmpsb
loopne
jbe
scas
jg
ljmp
cld
enter
xchg
enter
mov
cmpsb
push
mov
jbe
add
mov
hlt
out
or
cld
fldt
incb
jno
sbb
mov
stos
mov
sti
sbbl
adc
cltd
push
sub
jns
rcrb
push
pop
daa
dec
adc
push
orb
std
xchg
faddl
iret
into
loop
mov
mov
and
mov
and
aam
push
or
clc
sbb
lahf
or
xchg
lods
push
adc
dec
aaa
test
mov
xchg
sbb
push
push
dec
gs
fidivrs
lods
stos
mov
xor
jmp
mov
clc
fcmovnbe
jecxz
push
jno
outsl
lret
cld
mov
mov
push
nop
lods
je
push
loop
xchg
add
call
repz
push
lret
xchg
repz
std
jne
ret
cs
insb
jle
ds
ljmp
bswap
and
rorl
push
fisubrl
lcall
jecxz
and
mov
jmp
loop
cmc
or
ret
mov
cs
je
test
std
cs
or
push
in
xchg
xchg
add
gs
push
push
inc
pop
jl
insb
mull
addr16
add
xor
addr16
lea
adc
mov
bnd
js
dec
xor
jecxz
xchg
cmp
add
jp
rcrb
dec
xlat
mov
cmp
stos
sub
in
lahf
clc
dec
mov
sub
adc
or
stos
repz
shlb
mov
bound
cmp
mov
jl
sbb
lods
les
je
movsl
xor
ja
or
jge
std
mov
pushf
mov
and
cmp
cmpsb
addr16
jg
add
shrl
push
outsb
pop
loop
out
or
in
push
nop
movl
fsubs
adc
popf
js
aam
addr16
xchg
xchg
movsl
cwtl
or
ss
rorb
adcl
adc
ja
andl
mov
xchg
xchg
cmpsl
mov
fs
testl
inc
lock
jp
cmp
cmc
lahf
in
test
lahf
out
xchg
xchg
repnz
dec
dec
xor
jno,pt
inc
xlat
sbb
ljmp
shl
outsl
cwtl
imul
adc
xchg
lea
xor
ljmp
inc
and
fadds
adc
cli
sahf
popf
cwtl
clc
test
int3
xor
adc
jecxz
fsub
leave
adcb
push
pop
adc
sbb
fs
xor
add
add
es
push
lahf
fistps
add
push
sbb
pusha
ja
jb
or
inc
mov
cmpsl
enter
mov
fwait
or
lock
scas
push
or
and
mov
or
adc
jb
push
int3
insl
rcrl
dec
mov
mov
adc
lods
push
imull
mov
mov
imul
sub
cltd
or
or
fidivrl
js
jae
cmp
sbb
cmp
test
jecxz
mov
xchg
leave
jno
push
lods
pop
and
mov
mov
std
aad
mov
dec
les
repz
ds
jne
push
lds
test
loope
adc
jnp
add
adc
push
ret
lds
pusha
ljmp
imul
ja
pushf
xchg
xchg
mov
test
cmp
and
js
xor
xor
lret
pop
jecxz
std
test
mov
dec
pushf
dec
cmp
xor
or
mov
mov
pusha
fdivl
push
jb
or
pusha
mov
fstpl
pushf
iretw
sbb
mov
pop
insb
and
push
mov
pop
inc
stos
hlt
loopne
cmp
push
mov
orb
test
cmp
leave
jo
push
ds
int3
arpl
icebp
in
pop
test
in
mov
sbbb
aam
cmp
js
jmp
xchg
pop
inc
sub
insb
lcall
clc
xchg
xchg
ljmp
loope
jmp
pop
imul
fstps
divb
mov
mov
pop
dec
movsb
adc
cmc
ljmp
imul
jo
dec
sub
aas
xchg
pop
or
lret
or
insl
iret
push
dec
lock
jbe
cli
fimuls
push
lods
push
mov
push
mov
jge
pop
or
dec
sbb
out
pop
xor
sub
ja
xor
jg
xchg
xor
hlt
cmp
imul
push
bsf
dec
lcall
adc
dec
in
push
stos
pop
jbe
dec
pop
push
mov
xor
bnd
iret
jmp
out
fdivr
cmpsl
push
mov
in
movsb
pop
adc
add
push
push
rclb
into
rorl
nop
xor
pop
push
push
add
loop
and
call
pop
mov
add
xor
pop
sbb
push
sbb
cmp
ret
xor
sar
jmp
js
xor
push
xchg
push
fwait
repz
xchg
test
outsb
jmp
aad
mov
jae
out
sub
sbb
sbb
movsb
fcoml
je
sbb
adc
xor
or
cmpsb
push
xor
pop
adc
rclb
call
ret
inc
repnz
sarl
ja
std
pop
jno
pushf
shr
xchg
es
test
fs
cltd
das
sub
add
and
out
sahf
scas
add
sbb
clc
inc
add
daa
call
pop
bound
pop
sti
mov
push
or
adc
pop
iret
pop
in
sbb
sahf
lock
jae
mov
icebp
push
xchg
bound
mov
inc
sub
or
inc
out
repz
xor
lcall
outsb
mov
rclb
std
pop
dec
xorl
mov
cwtl
andl
sbb
sub
jns
add
clc
es
dec
cli
xor
in
and
push
push
sbb
mov
and
jg
movsl
xchg
mov
cmp
fildll
nop
and
jbe
and
jne
daa
movsl
daa
pop
jl
pushf
out
jae
and
insb
mov
jg
test
inc
enter
popf
into
out
mul
push
lods
fimull
xor
cld
mov
or
cmp
outsl
mov
jns
xlat
outsl
ljmp
push
arpl
adc
andb
jb
pop
mov
add
inc
xchg
lea
add
xor
cli
movsl
push
inc
mov
xchg
scas
cmpsl
lea
mov
shlb
jo
cmp
dec
adcl
inc
sahf
jb
das
shr
out
push
mov
mov
out
pop
pop
addl
loop
pop
fdiv
and
addr16
mov
xchg
movsb
xorb
imul
andb
cmpsl
inc
push
sub
das
in
mov
add
or
cmp
outsl
dec
adc
cmp
jb
out
insb
push
pop
lahf
lods
mov
adc
cmp
mov
popf
inc
cmp
test
sub
lods
mov
notb
cld
sbb
movsl
sbb
jmp
scas
aaa
push
fimuls
add
rep
jg
adc
hlt
inc
push
mov
hlt
insl
pop
dec
out
mov
mov
jmp
mov
mov
sbb
jg
les
or
pop
push
push
xlat
cmp
leave
loopne
mov
nop
mov
adc
push
mov
push
xor
ja
enter
lea
in
mov
jmp
cmp
push
rorb
jb
fwait
mov
pop
mov
ret
scas
sbb
pop
cmpsl
cs
leave
or
fmuls
mov
jo
ret
or
push
rclb
stos
rcll
nop
xchg
sbb
popa
rclb
enter
push
scas
push
and
lcall
test
xchg
add
ljmp
cmp
push
xchg
rorb
adc
scas
mov
dec
push
and
call
jl
mov
xchg
pushf
mov
ret
test
scas
ret
scas
jp
popf
idivl
inc
sbb
cli
fisubl
sbb
shll
inc
xchg
push
dec
imul
lods
das
fistpl
sahf
pop
push
out
fldenv
cmp
inc
or
stos
popl
loope
mov
dec
add
mov
jecxz
in
imul
dec
push
jmp
cmp
dec
push
shrb
sbbb
daa
fcmovnbe
stos
cmpsb
mov
je
jo
push
inc
lods
push
pop
xor
nop
add
lret
sub
inc
sahf
mov
sub
fcomps
mov
fnstsw
mov
adc
dec
scas
mov
iret
xchg
xchg
cli
push
mov
ud2
je
sbb
xchg
jl
sahf
xchg
pop
sub
push
ljmp
jbe
add
mov
sbb
xor
xor
lret
rorl
insb
mov
outsl
ds
mov
popa
repnz
cmp
sbb
mov
mov
lret
mov
int3
push
addr16
sub
loop
xchg
popa
fimull
sub
dec
mov
fcompl
sub
idivb
adc
sbbb
ss
mov
mov
roll
xchg
cmc
mov
cs
inc
inc
adc
int
aas
fs
sahf
out
jb
add
stos
pop
jae,pt
outsl
xchg
jb
icebp
inc
repnz
mov
pop
mov
inc
mov
inc
mov
xor
cld
inc
in
mov
inc
pop
fnsave
push
cmp
mov
sbb
mov
mov
or
cmp
ret
xchg
lds
add
ficomps
add
inc
xor
pop
add
pusha
ds
inc
sbb
popa
mov
stc
cltd
xchg
daa
arpl
inc
adc
negb
aas
and
push
dec
jbe
out
out
decl
mov
lret
sbb
xchg
out
fsubrl
lock
mov
stc
ror
sbb
push
and
sbb
outsb
inc
mov
cmp
jne
addb
popf
sub
mov
push
cld
sub
loope
jo
pop
cltd
ja
subl
sti
sbb
fcmove
xor
sbb
add
sub
push
sub
ds
lret
push
pop
ss
push
pop
out
xchg
mov
mov
mov
push
sarl
mov
push
dec
lcall
roll
push
cwtl
leave
mov
lock
int3
insw
outsb
cmpsl
mov
xchg
mov
pop
and
pop
or
jno
push
iret
xchg
mov
hlt
mov
dec
cmp
xor
fnstenv
ret
icebp
aaa
inc
pop
dec
aas
add
js
xor
mov
movsb
inc
fwait
out
lret
fsubs
pop
xchg
lret
and
insb
stos
fists
in
mov
fldcw
int3
js
clc
sbb
insb
movsb
inc
adc
gs
lock
test
arpl
addb
lods
sub
mov
mov
imul
jmp
or
les
addl
inc
inc
or
dec
jae
mov
fcmovnb
cltd
movsb
sti
xlat
dec
sub
fimull
gs
add
call
mov
dec
add
shll
or
jb
jbe
push
repnz
in
jge
mov
cld
lods
jg
add
mov
adc
xlat
mov
sbb
das
aas
mov
ret
pop
lcall
les
int
xor
inc
inc
mov
push
lret
xor
pop
outsb
dec
adc
dec
add
pop
mov
mov
inc
sti
lods
fbld
lret
cmpsl
jl
mov
rorb
das
out
adc
pop
push
hlt
cli
fiadds
adc
mov
cmp
cmc
scas
mov
inc
scas
cld
mov
jp
adc
and
into
orb
inc
or
inc
lret
xor
dec
repnz
xor
and
sbb
cmp
and
popf
cmp
icebp
jl
in
adc
xor
ljmp
mov
push
lds
push
mov
mov
int
lahf
fs
hlt
and
adc
cmp
gs
and
repz
fdivl
inc
gs
lahf
in
adc
out
gs
imulb
push
shl
aas
add
jbe
ja
call
sbb
aad
cli
jg
lock
addr16
dec
xchg
aam
mov
jmp
xor
inc
or
aad
test
das
int3
adc
shlb
adc
adc
jg
xchg
stos
push
push
shrl
dec
js
mov
rcr
pusha
mov
lock
or
pushf
js
pop
lods
lea
fwait
and
lods
mov
jb
int3
fisubs
into
arpl
addr16
add
push
hlt
insl
into
loope
clc
shlb
sbb
and
pop
sbbl
and
loop
outsb
lret
jmp
popa
fbstp
test
adc
mov
mov
fisubs
hlt
adc
test
addr16
mov
xchg
xor
mov
ret
rcll
sbb
inc
or
add
push
push
mov
inc
out
or
rorb
xor
cmpsl
das
push
fs
or
mov
or
adc
or
test
mov
loopne
cmp
add
dec
aaa
add
jecxz
or
cs
movl
mov
dec
imul
push
xor
cmp
pop
mov
scas
dec
aad
and
mov
hlt
insl
leave
rorb
xor
xchg
lcall
adc
ja
dec
ret
push
adc
jge
mov
sub
addr16
sub
ljmp
lock
out
add
sbb
mov
hlt
push
mov
sub
lds
cli
arpl
mov
neg
dec
jmp
dec
pop
sahf
mov
adc
jnp
sbbb
sub
mov
loopne
sub
lcallw
lcall
sahf
cltd
ret
mov
pop
popf
rcrl
loop
adc
aaa
dec
test
pop
xor
into
xor
sti
shlb
sbb
push
adc
add
pop
es
lcall
sub
pop
out
sub
or
cmp
jns
addr16
jns
mov
out
mov
add
test
outsb
cld
das
xor
jge
lcall
leave
jae
stos
fcmovne
iret
stos
aam
js
jmp
add
sbb
sub
mov
ret
push
loopne
insl
sub
pop
mov
lcall
cltd
mov
mov
cmpsl
mov
mov
sbb
mov
xchg
add
jnp
mov
das
pop
inc
gs
jne
dec
repnz
or
sahf
mov
or
inc
mov
cmp
out
and
mulb
mov
pushw
jle
mov
test
cli
loope
pushf
out
pop
inc
xchg
mov
jp
xchg
or
rcl
sbb
sub
jne
outsl
xchg
pop
jo
mul
out
inc
iret
jp
cmp
jns
pop
jmp
es
xchg
mov
sbb
test
cmp
sub
imul
shl
dec
push
mov
xor
ljmp
sub
jae
adc
pop
jo
mov
mov
insl
cmp
divb
pop
ss
ljmp
popf
aam
test
jno
push
repnz
gs
mov
in
sbb
fsubrs
mov
shll
push
dec
loopne
int3
push
or
clc
mov
int3
push
leave
div
lret
rorl
xchg
jl
loop
fnstsw
sti
mov
fcomps
mov
lds
shlb
xor
mov
inc
adc
mov
cmp
imul
insb
jmp
and
sarb
mov
push
loopne
lods
adc
call
int
dec
call
jae
inc
mov
es
cmpsl
mov
test
lods
xchg
pusha
cmp
mov
or
ss
or
outsb
dec
push
and
jno
xchg
push
shufps
pop
adc
push
sbb
mov
les
sbb
push
push
sahf
push
pushf
mov
xchg
aaa
mov
hlt
bound
pop
popf
lss
adc
adc
in
or
stc
jns
dec
ficomps
xor
sub
loope
xchg
sbb
popl
inc
inc
sub
xchg
adc
in
testb
jle
xchg
ds
xchg
xor
pushf
mov
sbb
cmc
bound
add
jbe
enter
scas
sbb
sbb
xchg
std
out
stos
je
pushf
test
addr16
xor
cltd
adc
cli
and
fwait
jl
dec
xchg
shlb
arpl
push
insb
xchg
inc
insb
lret
shl
xlat
inc
andb
ret
leave
xor
adc
cld
cwtl
repnz
out
int3
out
sahf
out
dec
sahf
cmp
enter
or
lret
pop
in
daa
sbb
fcom
mov
push
sub
orl
jmp
dec
fisttps
cwtl
or
sbb
xor
filds
push
into
xlat
xor
cmp
into
mov
call
dec
fbstp
mov
sbb
outsl
fstpl
or
mov
mov
mov
sbb
cmpsb
sbb
push
push
sub
mov
cld
jge
sbb
pop
dec
les
push
xchg
mov
xchg
das
sbb
call
sahf
cmc
incb
sub
jae
outsl
dec
mov
dec
jp
loop
push
xchg
shll
jle
inc
and
movsb
mov
and
jne
out
enter
cmpsb
mov
sub
jo
pop
fnstsw
dec
xrelease
sahf
pop
mov
sbb
mov
fdivrs
sub
sbb
jge
inc
dec
out
bound
lret
mov
jb
mov
jbe
adc
sbb
ret
stos
arpl
adc
out
loopne
outsb
push
or
xor
rorb
cwtl
rolb
pop
sbb
imul
or
addl
imul
sub
pop
mov
sbb
push
add
mov
xor
cs
pop
mov
lock
aad
and
or
test
xchg
xchg
cmc
aas
divb
and
hlt
testl
test
mov
xlat
in
mov
inc
movsl
xchg
and
push
cmp
frstor
jg
jp
mov
rorl
or
shll
fcmovne
adc
movl
shr
lret
pop
es
cmp
or
adc
mov
sti
repnz
push
clc
sub
mov
cmpsl
cmp
cld
decb
push
fucomp
mov
pop
pop
jbe
stos
mov
pusha
cwtl
stos
dec
inc
jmp
inc
push
inc
cmp
das
cmp
shlb
push
mov
xorb
push
pop
jl
xor
xchg
cmpsb
dec
push
pop
std
popf
loop
addr16
pop
repnz
inc
sbb
sub
rclb
das
pop
pop
mov
xchg
outsl
jae
loope
push
sahf
jle
orb
and
mov
jb
xchg
push
call
shrl
pop
in
add
and
iret
in
and
xor
cli
ret
cld
cmp
shll
and
je
cmpl
pop
fisubrs
aas
pushf
and
xor
cli
gs
push
decb
xchg
dec
adc
adc
dec
mov
xor
pop
jns
xor
push
dec
xchg
in
fdivrl
mov
jb
pop
imul
dec
arpl
jnp
cld
ja
cwtl
enter
sub
jno
nop
int
and
into
lds
inc
fisubrl
cmpsb
inc
push
iret
mov
dec
sbb
aaa
sub
sahf
imul
jp
flds
xor
sub
pop
data16
xchg
imul
cld
jb
push
insl
clc
or
add
out
int
jecxz
repz
inc
jnp
mov
ret
or
jp
mov
or
jge
cmpsl
push
imul
push
ret
in
pop
push
and
mov
jns
fs
mov
sbb
fdivl
ret
dec
mov
subl
test
xlat
ss
add
loope
push
xor
inc
mov
add
in
cmpsl
aaa
iret
loopne
sbb
and
push
bound
push
xchg
stos
insb
imul
lret
test
lock
mov
out
mov
push
and
pop
fs
shl
push
cltd
pop
mov
sbb
fwait
mov
mov
add
mov
add
mov
pslld
jmp
lea
mov
add
xor
or
lret
out
lret
outsb
test
sub
mov
addr16
sub
mov
repnz
movsl
test
push
sub
shl
cs
inc
popa
xor
shrl
push
cmp
mov
pop
mov
out
sbb
and
hlt
popa
mov
mov
sbb
cltd
fisttpl
xchg
xor
loop
in
out
popf
orb
rcl
cli
cmpsb
and
es
orb
daa
aaa
push
je
adc
cli
nop
leave
mov
sbb
scas
std
test
popa
sub
in
jb
mov
cmpsl
sub
sbbb
jle
mov
inc
in
sub
fildll
jge
in
sbb
imul
pop
sub
mov
sti
pop
dec
dec
sub
aam
mov
cmc
xlat
fisubrl
or
push
pushf
dec
jno
mov
ljmp
xchg
movsb
out
jecxz
pop
fcoms
xchg
and
lcall
sub
lods
int
cs
movsl
mov
push
jg
xchg
cmc
mov
mov
add
inc
mov
pop
pop
push
mov
mov
mov
pop
pusha
bound
mov
fdivl
or
icebp
and
sub
roll
xchg
xorl
adc
rcll
dec
jb
mov
ror
mov
jb
mov
jnp
rclb
pop
test
push
ret
adcl
popa
aas
pop
mov
xchg
ss
add
xchg
jns
int
xchg
xchg
stc
lods
clc
fidivrl
pop
stc
pop
adc
in
ret
ds
nop
mov
and
div
gs
add
data16
mov
mov
xchg
imul
xor
sbb
or
stos
out
lds
sub
lods
shrb
xchg
xor
xor
lret
es
xor
jl
mov
ljmp
popf
or
mov
je
into
mov
lcall
icebp
inc
int3
lret
sti
xchg
xor
mov
aas
sub
or
fs
and
jb
add
movsb
xlat
loope
mov
or
in
in
shlb
incb
and
mov
and
es
mov
cwtl
dec
mov
cmp
das
sub
xchg
cmp
or
mov
pop
incl
xor
addr16
adc
es
xchg
inc
insb
dec
mov
mov
jbe
test
mov
shll
mov
mov
ret
xor
fcmovnb
shl
int
loope
addr16
rorl
inc
sbb
push
gs
cmp
jo
dec
mov
xor
pop
dec
popf
xchg
inc
pop
push
jno
push
and
mov
shlb
shr
or
sbb
lds
std
lretw
xchg
subl
cld
jge
xchg
sahf
jp
inc
sbb
sub
imul
pop
push
cmp
adcl
inc
aaa
hlt
jg
add
dec
lods
fbstp
xor
roll
xlat
push
cltd
cmp
xor
or
andl
cmp
popf
enter
in
sub
cmpsb
xchg
push
gs
pop
loope
out
shlb
fistps
or
push
jmp
rorl
inc
stos
addr16
cmp
xor
pop
stos
test
in
daa
and
adc
cmp
stc
or
into
jns
adc
jmp
sub
fnsave
in
cmpw
pop
popf
jns
std
pop
jmp
xchg
fimuls
stos
xchg
cmp
add
andl
movsb
fistpll
mov
or
mov
imul
jae
fidivrl
xchg
mov
testb
cmpsb
jmp
dec
fisubl
push
xchg
call
and
adc
push
lahf
das
addb
popa
jle
jns
mov
lds
cmc
imul
xor
pusha
lret
ljmp
aad
clc
inc
ljmp
push
mov
push
addr16
push
cli
jecxz
je
sbb
dec
cmc
push
xchg
or
sbb
add
mov
test
push
push
iret
in
fmull
xchg
xor
jle
or
pushf
or
mov
ficoms
flds
jl
fldenv
rcrb
xor
leave
sub
xorl
ds
cmp
shrb
jae
adc
xchg
mov
into
int
bswap
ret
cli
loope
sub
shll
int3
hlt
rcrb
inc
or
jne
repz
cmpsl
lcall
popa
adc
and
add
mov
pop
pop
push
xchg
xor
inc
jb
addr16
js
movsl
push
mov
or
adc
fstl
movsb
dec
mov
pop
jle
add
push
sbb
fsts
rorl
scas
jo
std
fisttpl
fwait
mov
inc
lods
mov
and
fwait
or
mov
xchg
lcall
or
loope
adc
mov
cmpsb
fcomi
or
es
loopne
mov
lret
pop
lea
mov
test
or
mov
mov
and
jb
sahf
mov
lret
and
rorb
mov
mov
inc
les
and
mov
cmp
sbb
in
rol
mov
cmp
adc
mov
inc
mov
jge
popw
sbb
push
icebp
sub
adc
outsl
inc
inc
mov
das
sub
jns
push
inc
add
fwait
xor
lods
mov
fmulp
popa
push
lea
push
push
xor
mov
in
adc
and
add
add
or
mov
stos
ja
add
adc
inc
imul
iret
cmpsb
sub
and
dec
sti
or
movb
aas
xchg
mov
mov
clc
das
insb
sahf
mov
outsb
adc
mov
push
repz
mov
push
fstl
inc
lret
enter
insb
in
into
stos
roll
outsl
ret
add
gs
mov
bound
insb
push
out
or
mov
addb
xor
cmp
sub
int
std
mov
rcrb
mov
mov
or
scas
rolb
add
mov
mov
fiadds
out
subl
jae
lods
daa
adc
addb
out
lea
jo
pop
repnz
pushw
adc
cwtl
divl
add
and
or
push
cli
push
dec
inc
insl
lahf
rcr
pop
mov
jge
and
loope
xor
pop
xchg
sub
imul
mov
cmp
cmpsl
xlat
add
adc
lods
add
cmp
push
push
data16
xchg
jle
pop
push
push
frstor
cltd
loop
fnstsw
pop
int3
xchg
hlt
aas
fisubrs
lods
int
sti
add
loop
sub
leave
pushf
xchg
je
inc
addr16
add
cmp
mov
int3
shll
push
add
imul
sbb
push
mov
stc
addr16
xor
sbb
and
add
and
daa
je
es
inc
out
xor
sub
int
jno
mov
inc
repnz
fwait
or
int
lds
jbe
int
movsl
push
push
jle
nop
pop
popf
xor
pop
sbbl
stos
xchg
jge
jnp
hlt
jmp
and
in
leave
adc
scas
idivl
lds
jmp
or
lods
push
pop
fnsave
rol
and
test
sbb
aad
mov
nop
mov
inc
cmpsb
push
cwtl
int
out
sbb
sbb
inc
xchg
ret
pop
cmpsl
xchg
mov
negl
lahf
pop
addr16
sbb
jmp
sti
push
sbb
fwait
sbb
leave
lret
hlt
lock
test
ja
scas
loop
inc
and
cs
add
xchg
fistps
lods
jnp
lock
pop
cmpb
outsl
push
bound
jae
repz
dec
scas
dec
xchg
sbb
rcll
or
stos
scas
scas
pop
xor
int3
addr16
mov
bound
cmp
stos
lret
add
cmp
or
test
ret
rolb
fdivrs
fs
ja
iret
test
inc
nop
int
fstpt
adc
jbe
es
or
adc
push
xchg
pop
je
ljmp
int
std
and
and
xor
inc
or
xor
fcompl
enter
clc
xor
clc
jmp
sbb
or
mov
divb
js
cmp
dec
add
jecxz
push
inc
sarl
bound
pop
sub
aad
lods
dec
test
dec
out
pop
cmp
mov
sub
test
enter
cmp
test
dec
out
out
aaa
sub
insl
pop
sub
shlb
xor
add
mov
mov
dec
cmp
fmull
call
push
addr16
xchg
andl
fisttpl
jg
mov
les
out
mov
pusha
leave
mov
mov
add
pop
sbb
lahf
nop
adc
dec
testl
adc
jmp
outsb
int
aas
mov
movsl
es
lcall
cwtl
adc
jge
xchg
pop
aas
inc
xchg
and
push
mov
push
pushf
dec
add
stos
xor
mov
in
push
pop
mov
jecxz
imul
xor
xchg
xor
ss
pusha
cli
sbb
mov
xchg
xor
movsl
or
movsb
mov
movsl
push
dec
shrl
pop
jle
leave
or
lea
cmp
push
pushf
or
es
adc
in
sbb
out
sarl
sbbl
aam
mov
insb
jns
jge
pushf
xchg
mov
shll
mov
mov
sahf
clc
push
rorl
test
mov
fsubrs
push
out
xor
cs
mov
dec
adc
push
xchg
xchg
inc
gs
notb
leave
xchg
inc
jns
test
jb
aad
jb
popf
push
fcmovnbe
ljmp
pop
addps
mov
cmp
adc
push
sahf
push
push
idivb
test
pop
xchg
xchg
nop
call
cmp
inc
clc
into
pop
call
dec
adc
imul
xor
cltd
or
mov
push
popf
pop
adc
xchg
xchg
sub
in
clc
jns
aaa
inc
jl
or
xor
and
sub
cltd
sub
loope
sbb
dec
movsb
adc
jbe
test
ds
fcom
add
mov
js
adc
ficomps
adc
xchg
shll
cmp
call
aas
dec
and
sub
sbb
pop
es
sub
inc
clc
sub
shll
mov
push
or
pop
out
dec
fsubs
std
xchg
stos
pop
lock
mov
xor
pop
xchg
inc
ret
xchg
adc
hlt
outsl
cwtl
fwait
out
push
js
dec
mov
and
push
adc
test
into
xor
arpl
popa
push
stos
add
mov
scas
push
mov
mov
mov
nop
mov
pop
cltd
mov
out
jecxz
subl
gs
push
jge
push
add
jbe
push
ljmp
pop
out
test
dec
cmp
ds
cltd
stos
mov
dec
add
pop
sqrtps
vcvttps2dq
inc
rcl
insl
jle
outsb
shlb
jp
lods
mov
jae
adc
int3
shll
lahf
loop
xchg
mov
pushf
ss
add
add
lret
or
bound
adc
mov
clc
sbb
xor
xchg
xchg
xor
adc
mov
cmc
pop
lods
push
inc
mov
int3
push
pop
enter
loopne
int
inc
and
push
fiaddl
push
les
jae
cmp
rolb
mov
outsl
lods
clc
adc
inc
int3
adc
dec
xchg
cwtl
fmul
popa
or
lods
insb
adc
xchg
out
cld
mov
pop
movsl
je
or
je
addr16
push
out
scas
pop
fsubrl
fimull
outsb
or
jb
insb
leavew
in
jg
pop
lahf
mov
pop
sti
push
testl
dec
inc
push
mov
ds
xchg
xor
inc
in
stos
pop
or
add
aad
or
cmpsl
push
and
dec
cltd
mov
repz
outsb
test
aam
test
adc
inc
ror
push
push
xchg
or
mov
rcl
jmp
cmp
leave
sub
in
int
mov
push
adc
out
mov
jbe
jae
je
pushf
rol
xor
jmp
out
cmc
mov
mov
cmpsl
or
push
push
in
mov
mov
jns
sahf
imul
aaa
push
rcr
and
xchg
ss
cmp
cmpsl
cmpb
std
sarb
test
gs
sti
sbb
icebp
pop
int3
stc
inc
jge
mov
test
add
call
push
xor
out
jle
mov
cmpsl
or
cmp
daa
int
xchg
mov
or
test
lods
mov
sbb
cmpl
roll
and
inc
imul
or
or
out
daa
fcoms
cs
dec
cmp
fldenv
xchg
xchg
inc
mov
loop
out
js
scas
xchg
adc
call
xor
cmp
gs
fdivl
pop
cmpsl
ss
outsb
movb
inc
shll
cli
inc
push
cmpsl
addb
dec
sub
in
mov
negb
movsl
cltd
fcmovne
and
sub
pushf
xchg
mov
int3
and
dec
push
jbe
adc
mov
push
add
icebp
icebp
ret
sar
inc
mov
jle
cmc
imul
pop
loop
push
in
pop
jecxz
stos
pushf
add
rorl
inc
xor
out
mov
adcb
je
push
mov
stc
jp
xchg
scas
push
pop
push
or
jne
push
repz
cmp
stos
dec
adc
fbld
inc
mov
push
mov
lods
cwtl
das
nop
gs
adc
push
call
xchg
test
std
sbb
scas
loop
mov
sbb
lods
sbb
lods
nop
dec
mov
mov
mov
push
loopne
jge
scas
xor
pop
mov
push
xchg
mov
pop
and
mov
fidivrl
mov
mov
arpl
mov
insw
loope
mov
rcll
stos
push
push
mov
inc
frstor
jl
jb
sbb
cmp
pop
call
mov
in
int
sti
mov
inc
xchg
leave
mov
inc
shrb
jp
pop
push
es
fldl2e
xchg
stc
push
lods
aad
pushf
inc
add
add
mov
sbbb
es
mov
jne
cwtl
push
ljmp
mov
pop
addr16
sub
out
stos
je
jo
xor
mov
xchg
in
cltd
addb
jl
in
cld
push
add
jp
jecxz
ret
out
hlt
ror
aas
fsts
imul
mov
lock
and
push
mov
nop
xchg
aam
aas
and
dec
shl
icebp
in
test
sub
mov
mov
mov
aas
xorb
sub
jge
ds
push
mull
cmp
test
test
movsb
lcall
add
sub
and
add
push
shrl
sbb
sbb
adc
loopne
or
out
mov
and
flds
mov
cld
mov
fildl
push
clc
shl
dec
mov
xchg
push
cs
mov
dec
sarb
dec
inc
pop
mov
push
or
xchg
push
mov
mov
sbb
sbb
psubb
jns
xor
sbb
cmp
popa
popa
xchg
leave
into
jnp
mov
pop
stos
nop
cmp
xchg
lret
mov
mov
pop
lahf
xchg
push
dec
jg
push
lods
addl
xor
dec
imul
xor
add
cmp
cmp
push
push
push
push
sti
add
sbbb
lds
lds
push
gs
shrb
div
dec
sub
imul
dec
xchg
push
gs
pop
out
mov
xchg
cmpsl
adcb
ficoml
cmp
fcmovnbe
xor
pop
mov
loopne
mov
xchg
mov
add
sahf
ds
outsb
lds
ja
aaa
inc
std
pop
or
bound
subb
gs
or
and
or
popa
fldenv
shrb
lods
jo
cli
jno
aam
push
xchg
jmp
pop
test
int
fsubrs
lahf
cmp
sbbb
loop
movsl
scas
or
add
arpl
dec
mov
push
stos
iret
lds
ficoml
adc
mov
test
sub
es
cmp
sbb
pushf
pop
or
push
jb
mov
lods
iret
je
daa
mov
lock
mov
jno
sbb
add
or
outsl
mov
in
xchg
cmp
lret
aaa
cmpsb
push
scas
pop
inc
lret
nop
lret
inc
pop
cmc
les
jns
push
sub
lds
jecxz
push
insl
cmp
iret
pop
mov
sub
sub
aaa
jp
xchg
jns
xor
jp
das
cltd
testl
addr16
nop
out
push
mov
in
paddusb
mov
mov
lcall
repnz
xor
lret
pop
sub
mov
jns
lds
mov
and
hlt
jnp
movsl
inc
subl
inc
xchg
fwait
adc
jg
xor
xor
inc
pop
push
leave
lock
repz
cmpb
cltd
push
sbb
push
jae
jbe
in
shr
lock
vmovsd
mov
adc
data16
mov
inc
lcall
loop
pushf
test
shrl
into
push
push
mov
movsb
dec
gs
mov
and
mov
jmp
fimuls
ds
sti
in
push
ljmp
sub
push
mov
jl
pop
inc
jecxz
mov
mov
mov
cmc
gs
sbb
sbb
addr16
mov
cmp
rcll
sbb
jecxz
adc
shll
insl
inc
adc
sahf
push
into
ret
rol
and
dec
cmpsb
enter
xchg
aam
mov
ss
pop
inc
mov
dec
jbe
adc
adc
rorb
iret
into
loop
mov
outsb
mov
mov
pop
dec
fwait
test
xchg
mov
add
pusha
jle
sub
sub
mov
jb
in
movsl
push
std
mov
pusha
lret
mov
fcmove
mov
pusha
xor
iret
stos
and
sbb
mov
popf
mov
adc
iret
xor
cli
fimull
jb
popf
roll
test
xchg
fmul
popa
scas
sbb
push
aaa
jb
sahf
adcl
mov
sub
mov
movsb
lret
sub
xor
dec
and
addr16
stos
cmp
xchg
sbb
lahf
mov
and
jecxz
pop
nop
fwait
repz
fwait
push
add
add
xchg
icebp
fldl
mov
popf
xchg
jae
shlb
jno
lock
mov
and
movsl
push
loop
inc
bnd
mov
jne
pop
sbbb
jbe
cmp
add
mov
cmp
jl
jns
mov
pop
cmp
mov
sub
adc
mov
stos
imul
lahf
enter
pop
xchg
out
int
inc
shll
std
lcall
mov
fucomi
adc
repz
xchg
mov
sub
in
loopne
stos
repz
subl
lods
mov
jae
mov
pusha
inc
movsb
mov
loop
cmp
or
mov
pop
movsl
jl
pushf
adc
mov
or
pushf
je
jb
ljmp
insb
sub
add
add
jmp
adc
or
in
lea
jge
xchg
insb
and
lret
test
hlt
fmul
xor
pop
ljmp
add
mov
scas
cld
pop
loope
jbe
outsb
mov
add
mov
addr16
mov
mov
ficompl
shlb
mov
mov
sub
out
mov
mov
dec
adc
lods
ds
lods
add
dec
cmpsb
and
adc
pushf
mov
shll
mov
dec
sbb
pop
cld
jge
out
add
lds
lcall
adc
int
in
lods
mov
ss
movsb
pop
js
mov
iret
mov
dec
cwtl
fsts
lds
mov
stos
and
push
sbb
xor
es
int3
adc
mov
ds
jmp
mov
or
pop
std
mov
sbb
mov
or
movl
stos
inc
stc
sbb
pop
xor
lods
sbb
adcb
cmp
sbb
lods
lret
leave
fnstcw
cmp
or
sub
lret
xchg
mov
insl
dec
sbb
jmp
imul
adc
push
fsubl
mov
xchg
and
and
fs
push
inc
call
and
dec
mov
fnstsw
push
cmp
in
sarl
scas
lret
adc
fdivrl
sti
daa
sbb
syscall
mov
push
sbb
and
in
adc
adcb
cltd
sub
inc
daa
jns
mov
push
and
mov
and
int
or
dec
jne
sub
cmp
push
mov
jp
pop
add
adc
mov
pop
lret
test
mov
cmp
fstpl
mov
sarl
inc
adc
nop
repnz
cmc
mov
cmpsl
hlt
xor
pop
call
pop
cmp
data16
dec
icebp
sbb
loope
lods
lea
or
jecxz
call
rorl
clc
fmull
addr16
out
jb
das
and
repz
lods
xchg
fsubl
ja
in
pop
jne
pusha
leave
lock
and
xor
repnz
loop
mov
jmp
insb
xlat
inc
cmp
ficoml
xor
fimuls
in
mov
jns
fdivrl
daa
iret
stc
pop
jmp
clc
scas
outsb
stos
mov
ffreep
cld
ja
push
mov
outsl
sbb
mov
xor
push
fisttpl
xor
jne
xor
push
mov
loopne
push
scas
lea
scas
pushf
xchg
int3
mov
or
aas
push
fwait
dec
arpl
jmp
rcr
cmp
out
sbb
daa
int3
or
xchg
mov
imul
ja
push
sbb
imul
lcall
int3
adc
outsl
jo
pop
es
xchg
popf
fs
xchg
adc
les
test
dec
xchg
stc
mov
je
in
mov
push
into
pop
cmp
imul
test
pushf
testl
add
inc
insb
dec
aam
push
dec
mov
xchg
jne
add
jns
mov
xor
scas
jmp
push
cld
rorb
daa
or
int3
add
mov
push
dec
lea
push
push
mov
pop
outsl
sbb
adc
jb
ljmp
into
mov
adc
inc
pop
ret
rcl
mov
out
push
lahf
inc
mov
aaa
aam
rcl
stc
leave
push
pop
loopne
mov
mov
dec
dec
hlt
js
out
dec
xor
scas
ja
adc
pop
cmp
fdivr
dec
xor
cmp
imul
insl
add
fnstsw
pop
sahf
je
enter
push
sub
xor
xlat
sarl
cmp
xchg
cmp
rol
sbb
pusha
shrl
movsl
shll
add
cmp
jne
sbb
add
outsl
and
push
mov
decb
xchg
jbe
push
push
jl
push
dec
pop
insl
jmp
scas
subl
arpl
push
cmp
xlat
stc
xor
inc
mov
mov
icebp
js
fmuls
push
xor
adc
jns
add
loop
test
sahf
or
sub
ret
in
jp
lods
imul
sbb
push
fprem1
push
cmp
das
addr16
jbe
and
sahf
andb
cmpl
pop
jbe
mov
repz
push
jnp
in
mov
mov
pop
add
push
and
dec
int3
sbbb
out
or
xor
cmp
adc
jg
imul
ja
or
jge
sub
mov
xor
fsubp
and
sti
pop
movsl
push
sub
fstpl
pop
push
push
repnz
shr
aaa
dec
pop
lock
pop
xchg
lea
xchg
inc
mov
adcb
mov
dec
cmp
mov
scas
or
es
into
inc
sti
popf
xor
mov
out
inc
mov
xchg
call
push
push
or
pop
icebp
push
ljmp
outsb
popl
mov
cmp
fnsave
push
xchg
leave
sti
imul
and
and
lods
leave
lods
pop
push
inc
mov
stos
jns
aas
and
pshufw
movsb
clc
xchg
arpl
xchg
pop
ret
or
and
js
loopne
mov
cmc
adc
imul
stc
pop
ss
mov
test
jns
mov
icebp
or
cld
adc
ds
imul
or
cmp
jmp
add
mov
aaa
out
ret
test
adc
insl
adc
xorb
pop
sub
mov
inc
fdivrl
mov
inc
js
mov
js
and
adc
lret
pop
xchg
add
fsubrs
sar
adcb
adc
jo
push
inc
add
repnz
sub
insl
int3
sbb
push
xor
jl
jo
sub
adc
xchg
push
rcrl
test
hlt
and
and
ret
jg
mov
jns
dec
jge
mov
adc
les
inc
cmp
mov
jle
push
add
lret
xchg
push
push
cmp
xor
jns
lea
jae
callw
dec
mov
out
es
push
stos
dec
sbb
pop
pop
pop
fildl
jnp
loop
mov
sbb
insb
cmpsb
das
stc
int
cwtl
stos
add
xchg
xor
mov
mov
idivl
outsb
and
daa
rol
in
pop
push
cs
add
pop
mov
add
jbe
mov
adc
sbb
das
jle
adc
inc
gs
jne
fimuls
jp
iret
out
movsb
in
push
rorb
jns
adc
orl
scas
add
xor
arpl
lods
lock
xchg
jno
sub
mov
add
ds
xorb
js
cmp
push
fcmovnu
and
mov
pop
pop
sahf
mov
fmull
ret
or
ja
xchg
cmp
dec
push
sti
mov
xorl
es
or
mov
in
clc
rcrb
push
mov
cmp
mov
fildl
xchg
pop
out
xor
cs
mov
mov
in
push
movsl
dec
sahf
in
adc
xor
add
jp
jno,pt
iret
inc
push
push
push
flds
flds
push
outsl
out
ret
cli
xchg
test
into
aad
sbb
subb
ja
inc
movsb
lds
pop
or
outsl
fwait
xchg
cmp
fstl
and
and
and
sbb
push
jno
enter
inc
mov
mov
xchg
das
adc
cmp
and
mov
fcoms
mov
xor
stos
out
push
inc
mov
clc
cmp
push
adc
push
pop
push
cld
push
ret
sbb
and
stos
out
pop
inc
xor
daa
lahf
inc
sbb
jmp
pop
mov
cmpsl
jge
push
int3
sbb
js
scas
jb
cmp
jae
popa
xor
mov
out
push
ficoml
push
sbb
adc
ret
aad
idivb
mov
jb
in
or
inc
jae
outsl
aas
mov
sub
andb
mov
xabort
dec
mov
jbe
inc
add
push
packuswb
rcrl
jno
xor
fstpt
adc
fiaddl
lock
loopne
arpl
cmp
imul
cmc
ret
mov
or
lcall
cmp
iret
in
enter
push
lret
sahf
mov
push
and
jecxz
bound
sub
sarl
jnp
aaa
stos
subl
fisubrl
sbb
rorb
push
push
xlat
xor
cmp
xchg
mov
mov
icebp
out
and
xor
dec
repnz
cs
dec
pop
pop
mov
xchg
add
add
sub
xor
fists
ficoml
mov
inc
adc
or
mov
jl
mov
in
jmp
loop
es
out
xlat
pop
std
mov
or
in
pusha
fs
add
jl
fdivrl
negb
stos
ljmp
adc
pop
lahf
pop
jns
pop
fisubs
je
lock
dec
repz
and
imul
sub
mov
xchg
js
fstl
shld
push
comiss
xor
imul
pushf
push
mov
mov
jne
ja
popl
lahf
arpl
inc
lods
daa
or
fmull
dec
in
or
pop
push
dec
subb
sub
add
push
je
mov
enter
fidivrs
ljmp
and
cmp
movsl
or
fidivl
aad
movsb
sub
cwtl
or
push
mov
pop
cli
sarl
xchg
push
shl
outsl
iret
and
rcll
sbbl
in
popa
ja
popa
xchg
push
mov
and
and
xchg
shlb
cltd
es
decb
jae
fwait
psubb
pushf
arpl
mov
pop
arpl
mov
mov
icebp
rcrb
lret
into
testb
xor
jne
xchg
movsl
dec
insl
mov
insb
inc
jp
popa
call
popa
jecxz
insb
xchg
sbb
or
les
daa
sbb
repnz
inc
adc
pop
cli
pop
pusha
ret
bound
test
mov
into
sub
sahf
jo
xor
sub
lock
mov
int
jl
test
push
or
add
les
jns
scas
lods
call
pop
push
jbe
jno
dec
adc
mov
into
dec
xchg
clc
imul
je
out
push
inc
inc
ret
ret
ret
imul
add
imul
data16
in
push
ja
sbb
and
pop
sbb
js
sub
scas
or
cmc
xor
das
mov
xlat
xor
ss
sahf
cmp
mov
inc
jnp
xchg
sub
and
mov
nop
insl
adc
ja
fs
sub
xlat
and
adc
sub
pop
sub
adc
mov
outsl
inc
jle
sarb
cmp
jno
lods
push
lret
int
push
bound
addl
and
sbb
xchg
pushf
rcl
into
jne
mov
aam
lods
ret
mov
push
lds
xor
insl
mov
xchg
rorl
jns
mov
out
loop
or
jbe
flds
enter
add
lcall
jmp
mov
push
mov
int3
cmpsb
xchg
mov
cmp
lcall
xor
sub
into
xor
push
stc
cmpsb
mov
fwait
and
fisubrs
jne
call
jnp
pop
dec
jecxz
push
push
orl
test
pop
outsl
pop
inc
jge
ja
cmp
jns
push
repnz
add
les
movsb
movsb
xchg
sub
push
xor
pop
lret
mov
aaa
mov
test
add
xor
iret
iret
sbb
popf
or
push
dec
cltd
ds
inc
das
push
in
cmp
mov
xor
mov
lahf
aaa
popf
pushf
arpl
mov
inc
xor
shlb
adc
adc
jns
sbb
sahf
int3
mov
cmc
xor
stos
not
add
sbb
loope
inc
sub
insb
sub
xchg
mov
leave
dec
out
add
data16
int3
sbb
xor
lods
scas
daa
mov
popa
test
enter
insb
in
repnz
mov
inc
int3
cmpsl
sbb
inc
xor
testb
jle
outsb
scas
xchg
stos
xor
adc
faddl
xchg
jmp
mov
sbbb
cmc
xor
js
sbb
mov
dec
mov
loopne
ret
pop
sbbl
jmp
aad
loope
bound
addr16
xlat
xchg
pop
leave
cmc
jno
xor
outsb
jne
repz
in
push
xchg
lea
in
mov
icebp
loope
pop
scas
add
sub
fsubs
out
mov
loope
add
lcall
push
hlt
out
fnsave
mov
enter
hlt
pop
and
lock
sti
lahf
inc
push
sub
mov
mov
popa
je
das
cli
roll
cmp
push
push
adcb
sub
fwait
gs
andl
lret
or
sub
mov
mov
and
cmpl
push
lds
push
outsb
or
and
inc
xchg
push
xlat
adc
push
nop
add
push
push
xchg
xor
mov
sub
mov
cmpsl
pop
in
cmp
or
mov
icebp
lea
push
jle
insb
sbb
movsl
popf
inc
cld
inc
cmpsb
mov
mov
sbb
stos
cmpsl
dec
pop
pusha
cld
ret
loope
pop
mov
leave
add
adc
mov
je
jle
pop
xchg
movsl
mov
ja
in
clc
xchg
mov
cld
out
cmp
test
cmp
pop
ret
or
ds
inc
push
test
dec
in
xor
int3
addr16
jecxz
out
dec
dec
adc
dec
mov
inc
es
repnz
inc
jne
in
test
mov
clc
or
orl
filds
inc
gs
add
sub
into
jae
and
mov
sub
cmc
mov
jecxz
dec
neg
jae
or
inc
cwtl
leave
jne
rorb
xlat
push
ja
addr16
add
out
out
sbb
cmc
cli
rolb
jmp
lods
dec
rorb
incl
push
fidivs
ss
movsl
jecxz
jns
xchg
and
daa
push
inc
pushf
lret
pop
add
pop
or
inc
cli
inc
pop
pop
xchg
lret
lcall
push
adc
scas
stos
rolb
test
xchg
addr16
sbb
fs
jg
test
mov
xchg
insb
std
xor
ds
into
ret
stc
aam
jnp
push
xchg
pop
mov
rolb
sbb
pop
sub
fidivs
out
adc
repz
gs
or
add
mov
in
into
push
mov
fs
pop
mov
fmuls
test
sbb
les
ds
popf
mov
cmp
scas
pop
in
int
imulb
jl
repnz
and
pop
mov
rol
out
sub
subb
add
lahf
enter
dec
dec
mov
pop
and
pop
iret
mov
sub
pop
mov
testb
mov
or
dec
repz
mov
sti
xlat
sub
in
pop
mov
mov
iret
inc
sbb
cmp
in
xor
mov
test
push
out
into
mov
jp
pop
cmp
adc
or
loope
cmp
testb
lock
fmull
jge
mov
dec
dec
mov
lcall
pop
push
push
fmulp
sub
pop
fs
and
mov
mov
std
fldenv
outsl
outsl
fidivl
push
push
jbe
shld
cmc
mul
xchg
and
push
adc
insl
loopne
fldl
push
xor
sub
and
xor
mov
outsb
xchg
mov
outsb
into
sbb
cmpsl
push
enter
dec
mov
push
cmp
cmp
arpl
mov
add
or
arpl
fistps
xlat
fildll
aam
lahf
neg
lcall
add
in
sub
movsb
mov
movsb
ljmp
sub
testb
add
jmp
inc
out
rcrb
add
and
pop
pushf
ljmp
jl
test
repz
popa
ljmp
in
and
dec
mov
es
in
das
cmp
inc
mov
jge
dec
gs
mov
sbbb
sub
fistpll
fcoms
repnz
pop
imul
movsl
and
adc
lret
mov
push
mov
jb
dec
dec
sub
add
imul
vxorps
sbb
add
ljmp
stos
andb
dec
test
jae
pop
and
cmovg
push
and
mov
cmp
sbb
mov
test
fcoml
pop
sbb
push
xchg
cmc
pop
mov
jnp
xor
clc
push
pop
imul
xchg
adc
cmpb
add
push
adc
into
push
inc
stc
and
push
ljmp
push
or
inc
add
mov
test
out
test
imulb
sbb
movsb
or
fildll
insb
das
jns
pop
int3
ja
testb
and
and
mov
xchg
or
push
adc
addr16
fisttpll
loope
inc
sub
cmp
mov
lods
pusha
inc
add
sub
call
push
roll
gs
ja
imul
xor
sub
inc
xchg
adc
fisubrs
jno
and
and
xchg
mov
scas
jmp
adc
scas
and
aas
push
pop
pop
fs
leave
inc
pop
call
mov
fnstcw
xchg
pop
ja
adc
xchg
cmp
add
das
xor
push
sahf
js
xbegin
movzwl
xchg
test
xchg
jle
loop
mov
adc
stos
push
or
mov
mov
sub
loop
sti
test
hlt
mov
cltd
xor
xlat
jmp
xchg
lods
jb
loopne
jecxz
jns
imul
mov
push
or
hlt
or
add
inc
adc
push
pop
imul
subl
loopne
mov
push
in
and
fcomp
loopne
jg
ss
xchg
sub
dec
outsl
fistpll
jns
pop
cmp
iret
cmp
inc
or
inc
arpl
outsb
hlt
lahf
js
pushf
ljmp
push
push
fnsetpm(287
pop
and
dec
enter
inc
mov
push
jle
repnz
or
mov
mov
jle
mov
push
xor
shrb
imul
test
inc
mov
stos
mov
std
inc
jns
pop
negl
mov
or
sahf
jmp
inc
jmp
ret
out
test
outsb
inc
orb
jecxz
lcall
mov
dec
out
fwait
imul
data16
adc
push
add
nop
stos
nop
dec
pop
mov
xor
repz
inc
in
push
push
xor
xor
loop
and
sub
out
fwait
imul
sub
jb
push
or
hlt
sbb
add
dec
mov
aaa
lcall
imul
pop
adc
jno
xchg
push
mov
mov
sub
sahf
and
movsl
into
and
push
dec
xor
jmp
push
js
or
jle
pop
mov
enter
or
or
fs
das
and
inc
fnstcw
xchg
sub
pop
loopne
imulb
leave
push
loop
push
fbld
aas
mov
cli
jo
push
xorb
pop
pop
clc
sahf
cld
hlt
mov
mov
cs
mov
xor
mov
dec
iret
cmp
divb
mov
xchg
lea
ret
push
out
push
insl
cmp
fstpl
out
push
ror
mov
add
pop
push
xor
push
push
jae
or
lds
xchg
mov
in
push
push
jg
sbb
cli
mov
stos
bound
push
push
pop
mov
bound
ja
or
and
sbb
pop
cmp
fbld
shll
mov
jnp
sbbl
xchg
dec
movsb
sbbb
frstor
jle
adc
adc
adc
mov
aaa
xchg
and
mov
shl
sti
dec
inc
mov
xor
in
add
pushl
adc
dec
dec
hlt
es
and
loope
mov
mov
xchg
js
ret
stos
test
subl
mov
mov
push
nop
shll
sbb
and
stos
push
cltd
or
mov
sbb
mov
adc
push
ss
mov
je
ret
fwait
jecxz
xchg
hlt
iret
lcall
dec
adc
les
sar
hlt
add
icebp
sti
sub
xlat
mov
mov
push
jle
xor
jnp
sbb
mov
mov
sbb
mov
repnz
pushf
sbb
add
lods
push
es
xor
sub
cmp
jbe
add
in
pop
cltd
sub
sbb
jmp
xchg
xchg
icebp
cmp
ds
in
pop
mov
xor
add
shll
or
repnz
xchg
imul
stos
mov
ret
sti
stos
popa
fs
movsb
xlat
rcl
lock
movsl
into
or
ret
inc
rcrb
nop
popa
push
call
sub
lods
push
or
hlt
inc
sti
lods
leave
cmc
and
cmpsl
das
add
idivl
test
mov
sub
push
mov
push
ljmp
mov
mov
jmp
addb
lcall
repnz
mov
xor
push
xchg
mov
dec
adc
iret
cmp
mov
pusha
cmc
rcrl
pop
and
pop
loopne
iret
ja
xchg
push
cltd
jle
mov
xor
lcall
aad
test
pop
mov
stc
mov
popf
imul
cs
push
jne
fsubr
lds
cltd
cli
sbb
test
scas
in
shll
add
and
xchg
inc
pop
in
mov
lret
jae
pop
mov
or
add
mov
push
in
mov
push
neg
jl
sub
loopne
sbbl
cmpsl
cmp
push
mov
add
lret
rcr
popf
dec
lcall
sbb
jle
cli
das
xchg
imul
inc
stos
xchg
ror
xor
and
mov
inc
sub
and
or
cltd
fsubrs
mov
push
loop
and
sbbl
mov
and
pop
or
cmpsl
or
dec
pop
jmp
xchg
hlt
jg
lahf
inc
push
mov
pop
lods
sahf
or
pop
loopne
rol
je
sub
cld
inc
inc
push
mov
jmp
in
jp
insl
cmp
in
negl
enter
xchg
fistl
out
cmpsb
sbb
pop
imul
jmp
lahf
cmp
xor
loop
pop
out
fsubrl
rcrl
js
std
or
push
xchg
pop
mov
icebp
push
and
fwait
leave
sbb
jns
fmuls
jo
adc
inc
insl
cld
mov
and
mov
jl
adc
jmp
jnp
inc
pop
fcoms
mov
dec
inc
fistpl
pushf
je
lds
adc
mov
cltd
mov
cli
or
mov
inc
outsb
jle
jo
repz
jp
insb
pop
sbb
negb
fistpll
test
and
ss
xchg
lea
gs
js
lea
lea
mov
cmp
push
cld
pop
jae
jae
adc
pop
imulb
out
add
cltd
xchg
les
fistpll
movsb
xor
push
pop
popf
jl
bound
popf
imul
mov
movsl
dec
jle
bound
sbb
sub
and
popa
int3
pop
sub
sub
rcll
loop
inc
jmp
repnz
and
fwait
aad
mov
or
xchg
ret
shrb
sub
test
lret
xchg
in
jae
dec
pop
test
adcl
mov
rorl
movsl
jecxz
and
rolb
lret
clc
in
pop
aaa
ds
mov
movsl
testl
js
bound
outsb
sub
pop
mov
imul
adc
mov
leave
popf
or
xchg
pop
xlat
dec
push
test
jne
cmp
or
test
out
cmp
popf
pop
inc
mov
pop
aaa
jbe
scas
outsl
xor
inc
mov
stc
mov
popf
jae
mov
stc
dec
fcompl
mov
xchg
sbb
xchg
mov
mov
jne
jno
lahf
sub
dec
mov
cmp
push
popa
pop
jb
pusha
sbb
fidivl
dec
cmp
push
gs
mov
std
add
sti
ljmp
sub
cld
outsl
xchg
lds
and
pop
dec
push
fwait
icebp
pop
in
inc
add
mov
mov
push
ja
fldenv
pop
jo
aaa
mov
jmp
loopne
add
enter
mov
mov
lret
in
and
add
mov
lea
or
pop
xchg
xchg
fbld
es
mov
stos
int
mov
ja
sub
std
repz
lcall
cmp
push
in
dec
push
in
dec
push
lds
xchg
push
lahf
std
push
stc
fnstcw
rcrl
shr
sbb
xchg
jge
cs
cmc
mov
sbb
add
movsl
mov
cmp
jne
inc
pop
cwtl
adc
or
inc
xchg
repnz
and
movsl
mov
sbb
sbb
insb
dec
loope
sbb
ds
inc
cmp
inc
jns
sbb
shlb
mov
shlb
jp
icebp
mov
jb
mov
sub
lea
inc
fisubl
push
enter
jle
mov
sbb
or
rcrb
sub
xor
jg
loop
daa
repnz
mov
mov
cmpsb
and
adc
sbbl
push
jl
mov
mov
push
pop
fcomps
pop
cmp
xorb
aam
in
mov
ss
sub
cmc
xlat
mov
aam
arpl
cmp
dec
xor
sub
sbb
lcall
lock
hlt
and
or
insb
leave
mov
xchg
inc
sbb
das
xchg
jae
mov
loope
sti
dec
sbbl
loopne
jns
out
fcmovnu
sbb
ds
dec
out
repz
or
cmp
add
push
adc
or
xchg
adc
inc
or
inc
xor
clc
mov
ss
cmp
and
mov
mov
xchg
xor
add
stos
push
arpl
sub
bound
mov
fs
jle
bound
add
arpl
aam
fistl
cmp
fs
xchg
xchg
fidivs
int
pop
das
or
jb
push
movsb
mov
test
ljmp
xchg
cmp
cmpsb
and
sub
fistpll
jbe
pop
pop
xor
add
data16
cmp
push
cmp
push
lods
je
mov
mov
cmp
add
xor
mov
lds
adc
loop
sub
mov
and
dec
gs
in
sar
lds
dec
push
and
pushf
scas
fprem1
dec
aaa
jge
adc
dec
push
and
xor
in
popf
and
sub
or
scas
sub
mov
stos
fwait
outsb
cmp
and
pop
mov
cmpb
cld
add
pushf
les
cmp
adc
stos
mov
push
shl
mov
jnp
pushf
das
jne
inc
pop
xchg
and
mov
jge
arpl
rol
std
orl
pop
addr16
mov
push
out
daa
adc
pop
ds
pop
ja
mov
and
lcall
dec
hlt
cmp
call
sbb
inc
insl
test
mov
or
push
sar
or
mov
js
push
cmp
push
fwait
xchg
and
or
out
lret
xor
mov
jmp
clc
and
and
add
lret
sub
lret
cli
and
pop
daa
inc
mov
lea
pop
jns
call
addr16
cmpsl
inc
xchg
xabort
sbb
dec
movsl
inc
repz
or
sub
mov
sbb
sub
and
lock
popa
daa
add
call
fnsave
mov
lahf
enter
mov
add
xor
xchg
mov
scas
pushf
adc
loope
inc
cld
movsl
adc
loopne
pop
push
cmpsb
aam
cmp
lea
cmpsl
shr
jns
jo
pause
sub
ret
pop
mov
cld
xor
gs
cmp
or
mov
popa
pop
in
mov
xor
inc
lcall
out
out
pop
dec
mov
jb,pn
push
pop
and
pop
xlat
dec
rol
sbb
add
es
cmp
dec
jmp
jg
add
in
nop
repnz
mov
sub
test
push
inc
mov
xor
aam
aas
into
sub
sahf
in
jns
inc
fldl
cli
rcll
repnz
xchg
push
icebp
mov
test
cltd
sbb
loopne
imul
adc
push
pop
stos
add
daa
xor
shrb
shll
sbb
xor
xchg
inc
sbb
pop
push
jns
push
loope
stos
movsb
dec
cld
stc
jmp
fcos
out
leave
leave
mov
jg
mov
out
mov
xchg
xor
addr16
sbb
repz
xor
or
leave
dec
cmp
iret
mov
push
imul
cmp
repnz
sbb
mov
adc
flds
and
sub
into
sub
mov
add
mov
mov
mov
enter
push
inc
bound
jbe
ret
aaa
lret
push
or
mov
iret
outsl
stmxcsr
jecxz
xchg
nop
sub
imulb
jns
adc
xchg
mov
xchg
out
pop
shrb
jnp
ljmp
pop
push
loopne
pushf
out
xchg
aam
popf
push
int
ljmp
or
jl
adc
movsl
cmc
mov
inc
adc
cmp
or
and
sub
rol
popa
flds
aaa
leave
or
repz
xchg
pusha
and
ja
dec
test
mov
popa
sti
add
mov
sub
sbb
push
cld
pop
xor
sbb
cmp
inc
jbe
push
mov
mov
push
sbb
inc
mov
inc
adc
push
and
lcall
push
adc
adc
push
les
call
fsubl
jb
lahf
push
cmp
mov
shrb
lods
dec
mov
mov
bound
cmp
pop
jp
pop
or
mov
adc
jo
call
cmpsl
bound
in
ret
popf
mov
and
scas
cli
mov
test
test
add
mov
cld
cwtl
int
pop
lret
mov
clc
xor
iret
add
or
adc
fwait
dec
stc
in
lahf
call
push
sbb
lahf
mov
mov
xchg
rorb
pop
pop
mov
mov
xor
testl
jb
push
mov
mov
xor
aaa
mov
movl
dec
lcall
push
in
mov
sti
xchg
and
push
test
mov
pop
test
sahf
icebp
xchg
sbb
xchg
sbb
not
pop
inc
loop
push
or
lahf
xchg
mov
xor
shl
mov
adc
insl
jo
xchg
aaa
cmp
mov
xor
cmp
fimuls
rorl
pop
lret
xchg
inc
outsl
lods
push
xchg
jbe
or
jne
and
dec
jmp
gs
shll
lock
mov
in
adc
enter
xchg
mov
push
imul
outsb
jne
cmpsb
inc
icebp
or
aaa
inc
dec
data16
std
filds
xchg
fucomi
insl
fsubrl
jno
imul
mov
or
mov
push
out
sbb
sub
adc
hlt
imul
je
and
and
fisubs
xchg
push
dec
inc
cmpsl
into
mov
xchg
inc
jge
inc
mov
and
xchg
out
mov
mov
mov
adc
sbb
push
lds
outsl
push
or
insl
sbbl
aas
mov
jno
adc
sbb
movsb
pop
pushf
ss
sbb
jno
cwtl
xor
pop
or
mov
lret
inc
movq
scas
add
iret
cli
vpmaddwd
es
test
mov
fidivrs
mov
cmc
outsb
hlt
ja
adc
divl
call
sbb
orb
mov
pop
push
adc
xor
ja
and
es
cmp
push
and
inc
jle
out
push
daa
inc
jge
xor
into
xlat
push
or
adc
gs
lods
scas
cmc
sbb
pusha
xchg
and
jno
and
add
pushf
rdtsc
popf
loop
or
inc
loop
push
mov
imul
js
loope
xchg
inc
cmc
jae
jle
push
cwtl
mov
mov
jl
addr16
ror
and
cmpsb
inc
mov
neg
xor
in
sbb
xchg
sbb
pop
push
adc
and
sbb
sahf
gs
mov
shll
jne
adc
arpl
out
cmp
pop
leave
add
xchg
sbb
ret
icebp
push
fdiv
jo
testl
int3
jmp
push
pop
pushf
ss
pop
xchg
mov
ret
sub
pop
outsb
iret
and
sub
push
imul
and
in
cmp
xchg
repnz
and
hlt
or
mov
inc
inc
out
lock
mov
mov
jbe
push
sub
inc
dec
xlat
ret
fidivrs
test
mov
mov
adc
test
mov
xchg
lcall
xor
jmp
mov
jg
dec
dec
mov
or
imul
in
dec
imul
or
into
and
mov
insl
xchg
stos
ja
and
mov
adc
loopne
mov
insb
icebp
lahf
mov
mov
sub
orb
cmp
enter
in
int
clc
push
ljmp
mov
test
lods
mov
push
lods
outsl
jl
subl
add
lahf
mov
dec
insl
dec
stos
cmp
pop
jae
aad
sarl
xlat
imul
mov
push
in
insl
orb
xchg
jbe
in
outsl
int3
leave
sub
xchg
popf
mov
pop
stc
andl
and
add
ja
into
faddl
rcll
jge
and
nop
mov
jg
sbb
lds
mov
ljmp
push
or
push
aaa
or
lcall
jb
sahf
dec
mov
aas
mov
out
adc
sub
sub
clc
enter
sbb
out
dec
sub
rcrl
dec
rcl
and
in
xchg
inc
mov
popa
imul
sbb
cmpsb
push
clc
jg
out
ret
out
call
sti
fists
orb
and
xor
popf
shrl
popa
pop
mov
xor
dec
ficoms
hlt
mov
insb
out
cmp
mov
mov
lds
mov
jnp
aaa
repnz
adc
cmp
mov
movsb
cmpsb
push
sarl
jnp
pop
in
or
stc
loopne
inc
pop
test
mov
sbb
mull
outsb
dec
lret
popa
icebp
iret
stc
popf
aad
in
ja
jbe
ret
push
andl
mov
in
fs
mov
push
jnp
jg
pop
or
imull
mov
ficoms
dec
xor
xchg
leave
pop
pusha
jl
inc
lahf
test
cmp
ljmp
sub
sub
mov
mov
or
cmp
nop
mov
mov
sub
mov
pop
je
jl
loopne
inc
sbb
push
inc
insb
mov
flds
aam
test
or
xchg
lret
cltd
push
bound
jl
pushf
jno
out
xchg
or
lds
jns
mov
leave
cmc
into
jo
fdivl
xor
pop
cmp
js
add
dec
aad
ret
sbb
cmp
stos
sbb
inc
and
lods
shl
or
and
outsb
mov
clc
pop
aaa
pusha
insl
adc
addl
push
cmc
nop
jo
sbb
sbb
dec
daa
mov
daa
into
mov
insl
cmc
sarb
or
int3
cmpsb
fildl
xchg
nop
jl
test
mov
mov
cmp
add
sub
clc
js
aaa
fstps
insb
mov
or
outsb
es
fdivr
add
and
jge
mov
sahf
repnz
shrb
aad
inc
jmp
fdivrs
das
inc
hlt
inc
ds
adc
cmpsl
adc
jo
in
mov
mov
lock
fsubl
jl
mov
test
filds
jb
inc
jecxz
add
call
lock
or
dec
push
jbe
daa
stc
lahf
outsl
mov
lret
cli
repnz
push
cmp
cmpsb
jg
cmp
aam
in
mov
scas
ficompl
inc
cmc
icebp
push
scas
loop
rclb
and
dec
jmp
add
jle
shll
add
pop
and
push
lcall
in
jb
nop
fwait
pop
and
jle
mov
sub
lret
adc
inc
fcmovbe
and
and
fstps
icebp
mov
or
icebp
cmp
js
stos
xchg
aas
cmc
jge
sbb
repz
and
repz
xor
xlat
adc
fldt
inc
jmp
mov
push
leave
push
fdiv
fs
jnp
outsl
sub
sub
lahf
arpl
or
mov
int
and
jne
ljmp
enter
jns
aad
xchg
xchg
or
xor
push
loopne
and
in
outsb
daa
in
icebp
ret
xor
lds
xchg
mov
ret
mov
inc
sbb
outsl
and
mov
jp
adc
xchg
push
inc
insl
inc
mov
adc
push
in
popf
lock
pcmpeqw
sub
nop
xchg
lea
popf
stos
shrl
bound
mov
cmp
test
push
dec
movsl
in
fwait
clc
ficompl
out
xlat
and
push
pop
filds
lahf
orb
daa
sahf
lock
fwait
loope
cmc
mov
mov
fpatan
enter
adc
fcmovnbe
inc
je
mov
pop
cs
pop
movl
cltd
adc
mov
in
mov
xchg
pop
ds
cmp
dec
add
jmp
xor
das
cmp
jbe
je
bound
xchg
shr
xchg
bound
push
mov
insl
mov
mov
dec
mov
lock
lea
mov
jg
and
out
les
cld
mov
das
pop
fs
jno
xor
imul
sub
clc
adcl
jp
ret
idivl
lods
incl
testl
xchg
orl
imul
in
jge
inc
and
sbb
sbb
adc
pop
sbb
xchg
out
xor
mov
daa
or
ljmp
xchg
xchg
in
js
add
jb
sub
push
gs
out
sub
fnstcw
or
scas
fadd
js
lods
scas
lds
stos
call
fcom
adc
add
ds
cmp
cmc
mov
adcl
jae
jnp
enter
imul
outsb
out
test
test
xchg
push
fstl
lock
inc
popf
ljmp
add
les
jne
inc
bound
ror
fistpl
jge
cmp
test
sbb
pop
inc
jo
push
popf
cmp
dec
xchg
out
int
test
ret
pop
pop
inc
jge
cmc
dec
imul
push
pop
cmc
sbb
xor
push
loop
push
flds
inc
sub
lea
nop
push
push
mov
data16
lahf
mov
pop
xchg
pop
push
mov
push
push
std
js
dec
push
mov
mov
inc
outsl
push
test
mov
cmove
push
loopne
inc
repnz
addb
mov
mov
pop
sbb
shlb
ds
stc
mov
or
lcallw
repz
add
ljmp
inc
dec
decl
orb
sbb
sti
fstpt
mov
popf
or
add
sar
outsl
sbb
pop
add
clc
jl
mov
jecxz
mov
mov
test
mov
mov
mov
dec
push
cld
gs
jae
cmp
add
out
jne
mov
aad
jnp
jl
sub
sub
test
fnstcw
xor
or
sbb
and
hlt
orb
aad
cmp
enter
insb
icebp
dec
mov
fdivrs
jmp
dec
es
sub
pop
mov
or
cmp
mov
pop
inc
sub
jp
into
subl
hlt
cmovl
jbe
xchg
xor
add
jb
sarl
jnp
sub
and
jbe
out
clc
mov
test
lret
lret
cs
nop
xor
add
xchg
out
in
jb
cld
je
sbb
test
mov
sbb
sub
dec
pop
out
xchg
xchg
test
or
cmp
jb
cmpsl
aad
sub
cs
sub
push
pop
cmpsb
ret
mov
sub
inc
sub
jp
jl
adc
adc
jg
mov
cmp
pop
xchg
and
sbb
sub
mov
leave
or
int
or
push
mov
xor
cmp
sub
test
movsl
dec
xor
push
cmp
je
push
jl
sbb
ja
xchg
roll
outsb
mov
and
mov
cmc
out
jle
aaa
sub
xchg
lahf
pop
orl
cs
cmp
out
push
add
jnp
pop
or
ja
stos
jg
push
or
ret
xchg
out
mov
aas
dec
jo
adc
xor
mov
mov
jp
xrelease
insb
mov
dec
add
bound
hlt
lcall
sete
mov
shrb
ret
mov
jl
scas
repz
insb
mov
inc
gs
adc
and
cltd
dec
out
add
pop
xchg
sbbb
xchg
leave
xchg
or
sbb
xchg
arpl
dec
adc
out
push
and
mov
and
xor
lods
out
lods
fidivl
or
repz
mov
or
push
push
jo
push
scas
dec
cmp
pop
mov
lcall
push
loop
jge
sub
add
xor
out
lret
loop
mov
xor
sub
or
scas
lea
je
mov
rorb
sbb
mov
jne
test
sub
jae
ljmp
adc
push
pop
jmp
cltd
scas
cmp
sbb
or
movsb
rcrb
lahf
push
fiaddl
insl
enter
push
lock
ljmp
arpl
imul
mov
ds
int
arpl
xorb
and
addr16
lock
sahf
popa
shr
mov
and
das
ss
fadds
adc
sub
icebp
mov
insl
cmc
popa
int
jb
dec
pop
mov
mov
inc
xchg
outsb
mov
shlb
mov
sub
clc
pop
leave
push
test
in
stos
ds
lcall
imul
inc
cmp
imul
add
scas
pop
sbb
mov
imul
roll
and
and
sub
inc
sub
popf
fnclex
fmull
push
insl
mov
sbb
pop
andb
in
jp
or
inc
lahf
test
add
sbb
popf
test
jbe
jg
lods
jbe
mov
mov
test
or
xchg
lods
or
mov
loop
shlb
mov
pop
movsb
pop
aas
push
dec
add
xor
mov
mov
es
je
test
js
in
in
sahf
push
mov
push
shlb
xor
jb
cwtl
in
mov
jg
jle
lahf
push
jb
mul
dec
or
pop
push
stos
lcall
lea
sti
js
cmp
mov
scas
dec
enter
add
popf
sub
movsl
sbb
loopne
lcall
jecxz
arpl
mov
adc
jnp
jbe
imul
cmpl
push
iret
jns
xor
fwait
or
sbb
sub
adc
push
js
pop
or
adc
repz
and
scas
arpl
bound
dec
shr
mov
sub
inc
mov
mov
cmp
les
inc
cmc
add
push
add
insb
rep
adc
add
test
jg
xchg
idivb
push
fistpl
test
in
pop
repnz
mov
gs
aas
imul
aam
add
xchg
xchg
mov
jp
mov
mov
notb
lds
test
jno
addb
popl
pop
shlw
inc
out
jg
or
pop
push
pop
xchg
iret
xlat
pop
mov
into
cmp
repz
mov
gs
xchg
fsubs
test
cwtl
stos
cmpb
aam
std
dec
and
xor
je
push
or
mov
sbb
or
idivb
xchg
pop
push
add
xor
scas
popf
andl
sub
pop
cs
sahf
repnz
dec
pop
xchg
sbb
pop
jbe
mov
loop
pop
rolb
roll
inc
add
scas
lods
cmpsl
and
fidivl
inc
jp
pop
lods
repz
mov
xchg
iret
xlat
inc
pop
int3
or
mov
lea
add
jno
push
fucomp
fildll
sti
pop
dec
pop
popf
pusha
push
out
loope
lret
sahf
mov
cli
mov
mov
repz
loope
pop
jle
mov
adc
and
insb
dec
add
fdivrp
cmpsl
xor
cmp
dec
sbb
mov
faddl
mov
shll
scas
add
mov
scas
shl
cmpsb
jl
or
movsb
pop
push
repnz
pushl
sub
sbbb
xchg
add
scas
sbb
ljmp
mov
rorl
pop
repz
add
movsl
scas
xchg
sbb
rcr
mov
loopne
adc
gs
jge
and
mov
testb
inc
pop
jae
xor
les
sub
mov
mov
pop
lea
xor
les
jge
into
and
xchg
imul
fwait
enter
adc
bound
lret
daa
nop
adc
xchg
jle
lahf
cmp
loope
movsb
bound
scas
iret
mov
arpl
imul
ljmp
xchg
test
push
int
lods
adc
ret
repnz
stos
ret
cmc
mov
sub
outsl
and
iret
jns
sub
aaa
mov
adc
repnz
sti
test
mov
cltd
inc
cmpsb
cmp
sbb
fwait
or
xor
outsb
xchg
out
adc
cld
stc
nop
push
sbb
and
nop
das
lock
jno
popf
ficoml
je
add
std
adc
and
adc
push
push
push
out
mov
mov
andb
and
or
mov
inc
in
adc
and
dec
sbb
out
xor
loope
sub
fnstcw
cmp
fbstp
pop
stc
pop
fwait
insl
dec
enter
enter
inc
dec
aad
inc
xchg
paddq
cmp
ja
sti
sub
int
sti
mov
mov
fwait
js
or
inc
push
or
bound
xchg
add
push
out
and
pop
stc
loopne
mov
cmc
fcomps
out
sar
test
sarl
popf
cld
dec
scas
pop
adc
jle
int3
mov
sub
lcall
xchg
and
mov
cmp
adc
orl
jecxz
out
dec
mov
js
pop
sub
jae
pop
aaa
dec
scas
and
dec
fucomip
aad
dec
je
push
stc
push
push
popa
dec
push
fimuls
jmp
sbb
mov
sub
dec
and
pop
pushf
pop
push
jno
mov
inc
sub
inc
sbb
xor
scas
add
lret
jns
std
mov
push
cmp
xchg
cli
xor
ja
sahf
js
mov
clc
pop
loopne
hlt
pop
jl
out
inc
out
mov
cli
sbb
loopne
test
out
out
mov
pop
scas
repnz
stos
insl
into
adc
push
and
push
lahf
mov
mov
insl
mov
push
jnp
ds
sub
add
jbe
mov
xor
sarb
mov
mov
mov
cmpsb
adc
xchg
cmp
test
popa
cmp
mov
pushf
ljmp
sbb
test
clc
cmp
out
clc
divl
sub
cs
xor
mov
jae
xchg
push
loop
jb
sub
mov
sub
out
dec
cmpb
dec
fcmove
mov
inc
and
in
jae
jl
mov
out
and
addr16
mov
push
dec
imul
pop
push
lret
jge
mov
cmp
in
cli
sub
xor
mov
in
cltd
pop
cmpsb
jae
or
mov
jo
xor
sarl
dec
flds
fcoml
pop
outsl
push
mov
aad
push
xchg
jo
shl
sar
dec
mov
push
pmulhuw
mov
adc
pop
xchg
cmp
add
sarl
jecxz
inc
mov
mov
mov
xchg
sub
fdivr
arpl
imul
jns
xor
xchg
jecxz
out
push
xor
push
ret
add
sub
sahf
mov
enter
inc
mov
dec
mov
jge
shrl
movsl
lock
jns
int3
leave
dec
push
or
or
cmp
imul
scas
fisttpll
lock
rcrb
jl
out
add
mov
and
jle
int
mov
test
add
sub
xlat
pop
or
jo
test
pop
pop
idivb
or
add
in
jmp
mov
insb
stos
data16
jge
sti
mov
sub
lar
cmp
ret
push
loopne
add
jo
pop
imul
mul
outsb
add
xor
push
jge
add
dec
mov
xchg
test
in
movsb
or
xor
sub
adc
mov
jnp
cmpb
cmpsl
stc
insb
dec
push
push
mov
sub
les
pop
inc
mov
js
or
imul
hlt
testl
out
insl
imul
xchg
add
xorb
sarb
jno
mov
mov
shr
sti
xchg
and
xor
popf
nop
pop
pop
imul
and
push
aas
push
test
inc
mov
push
mov
sub
xor
sub
divb
outsl
and
cmp
mov
punpckhdq
or
loop
inc
adc
stos
dec
rolb
gs
jmp
fstps
jge
imul
mov
repnz
setne
push
loopne
push
or
out
mov
gs
lock
cld
jmp
dec
sbb
add
daa
mov
pop
sub
cmp
nop
ss
test
out
jge
mov
cmp
ss
stc
or
or
aas
loope
sub
shrl
cmpl
ja
cmp
xchg
mov
insb
push
xchg
inc
inc
mov
in
mov
in
adc
scas
xor
imul
in
xchg
push
dec
ret
clc
iret
aad
inc
dec
add
popf
inc
inc
sub
adc
xchg
inc
stc
pop
inc
gs
fidivs
and
inc
out
pop
sub
shll
loop
jmp
stos
add
push
push
adc
push
jmp
sub
xchg
dec
inc
adc
enter
jge
leave
xchg
jns
ljmp
out
and
mov
stos
pop
push
adc
je
xor
popa
dec
addb
mov
cltd
push
pushf
ret
jb
je
mov
dec
pop
stc
cmp
stos
cmp
out
je
test
outsb
mov
lahf
xor
sarb
out
cmp
sbb
fcmove
jns
mov
testl
stc
les
in
jns
repz
cmc
lret
js
xor
data16
sbb
jbe
rcll
jl
es
add
int3
cli
pop
or
rol
xchg
in
test
shlb
mov
pop
addr16
nop
jp
jmp
lret
ss
sbb
jo
lret
stos
and
popf
sub
stos
mov
adc
dec
out
pop
es
pop
push
mov
fstpl
inc
das
mov
and
int3
xor
push
stos
pop
push
sub
cwtl
aam
cmp
sbb
xor
test
xlat
xor
dec
mov
sub
jae
jp
cmp
adc
shr
clc
cwtl
sub
out
inc
push
test
inc
xor
mov
pop
jmp
hlt
stos
xchg
iret
lret
cltd
shrl
mov
ret
lods
psllq
mov
sub
mov
push
sub
stos
fsubrs
daa
cmp
std
inc
stos
lret
jnp
cld
push
into
inc
in
dec
mov
fldenv
popf
iret
adc
adc
dec
add
cmp
push
push
popa
ret
rorb
or
jns
pop
scas
ret
int
ret
mov
ljmp
fidivrs
cld
inc
push
cld
sub
cmp
push
dec
and
fwait
push
xor
test
adc
jb
mov
sti
and
adc
cld
call
adc
or
scas
mov
cmp
das
sbb
jp
mov
push
aaa
daa
in
xchg
and
or
arpl
mull
inc
inc
jl
iret
mov
xchg
mov
jg
mov
dec
sub
scas
cmp
mov
imul
frstor
test
dec
jp
push
mov
stos
add
xor
jg
mov
loopne
or
jecxz
addr16
fcoms
sar
and
fisubl
out
xchg
and
out
clc
outsl
pop
test
popa
push
or
repnz
sub
hlt
rcl
ss
or
cmp
pop
repz
adc
lahf
into
push
mov
popa
xor
loope
xchg
leave
ljmp
and
xor
int
das
dec
lods
call
out
inc
adc
cmp
inc
mov
adc
push
fs
imul
xor
cmp
movsb
stc
lret
insb
dec
fcoml
sbb
je
sbb
inc
lahf
and
data16
jne
out
dec
addr16
push
pop
pop
mov
adc
or
ret
outsl
xchg
adc
ds
add
outsb
lret
insl
mov
add
icebp
scas
xchg
sub
dec
cld
and
or
pop
mov
or
fiaddl
inc
mov
xchg
lds
xor
xchg
shr
xchg
adc
repnz
mov
adc
shll
stos
enter
pop
in
or
lcall
js
aaa
mov
adc
call
cmp
mov
dec
jmp
xchg
leave
scas
xchg
stos
and
in
jo
cmpl
cltd
jmp
jns
add
sbb
jge
sub
fcomp
xor
and
jnp
ds
in
sbb
mov
nop
xor
or
dec
pop
aam
and
and
mov
jp
xor
inc
push
jg
jne
mov
js
std
xchg
sub
and
fimuls
cmp
or
xorb
lea
mov
and
mov
sbb
lcall
push
imul
cli
ja
mov
mov
pop
xchg
dec
and
cmp
inc
cmpl
and
std
or
setns
loope
xor
stos
js
lcall
xchg
mov
xchg
xchg
nop
aad
mov
mov
bound
sub
scas
imul
movsb
cmp
in
outsb
push
add
sbb
dec
ret
insb
adc
xchg
loop
clc
push
aas
psubsw
pusha
sbb
stos
pop
cltd
ja
pusha
mov
psubusb
and
arpl
jns
leave
dec
dec
lods
in
pop
adc
add
testb
jge
cmp
adc
or
push
pushf
bound
jle
adc
sahf
ja
push
out
or
mov
cmpsb
clc
mov
dec
iret
outsb
xor
adc
in
outsb
adc
aad
pop
inc
push
sub
sti
sub
lods
inc
mov
movsl
mov
mov
adc
mov
test
imul
jl
jbe
popa
cltd
lahf
or
fdivr
int
shlb
call
pushf
push
icebp
lods
outsl
loop
insl
and
xchg
sub
pop
xchg
or
mov
in
out
jp
and
sbb
push
subl
ret
mov
jle
mov
inc
sub
test
sbb
test
aas
push
push
mov
lahf
xchg
and
pop
push
cmpsb
pop
cs
jno
add
inc
sub
lods
mov
pushl
out
dec
adc
enter
call
int
fimuls
adc
jmp
inc
mov
gs
jge
adc
fldl
mov
cmp
push
mov
insb
jp
mov
xor
iret
es
in
sbb
or
push
std
sbb
mov
add
int3
jno
dec
mov
sbb
xchg
cwtl
mov
jb
push
sub
fistpl
push
ja
data16
xor
cs
push
push
pop
jb
pop
push
lret
push
movsl
aam
mov
and
lahf
jp
xchg
popl
idivl
jne
fsubp
sahf
sub
fidivs
inc
cmp
in
cmp
lret
jmp
xchg
rorl
sti
mov
rclb
mov
leave
mov
push
fld
push
mov
movsl
xchg
fdivrs
inc
sbb
pop
and
cmpsl
xor
hlt
push
inc
pop
sub
add
call
sbb
jb
and
rorb
cli
xor
jbe
cmc
lods
mov
mov
inc
xor
stos
sar
arpl
in
mov
xor
pop
mov
aad
xchg
out
std
xlat
dec
adc
filds
add
fcmovnu
notb
std
lahf
out
out
and
addr16
cwtl
rorb
andl
imul
out
cmp
xchg
in
add
lahf
jns
jns
aam
movsbl
shr
cmp
fs
mov
and
int3
dec
mov
icebp
add
or
pop
rcr
and
pop
outsl
cmp
mov
xlat
call
mov
jae
mov
pop
icebp
shlb
rolb
sarb
sub
rcll
xor
imul
fwait
add
mov
pushf
mov
sub
popl
out
jae
sti
js
sbb
push
pusha
aam
inc
mov
xchg
mov
cmp
addl
cmp
pop
clc
inc
jge
es
andb
pop
stc
xor
dec
jb
rol
mov
out
cmp
rcll
dec
mov
push
jo
cs
dec
sahf
jbe
sbb
cmc
test
loope
imul
sbb
xchg
push
push
iret
xor
lods
pop
sbb
movsl
ficoml
jbe
dec
ds
mov
xor
ja
outsl
and
push
lods
pop
fistps
push
out
lret
sarb
cltd
and
je
or
imul
imul
mov
roll
adc
or
les
fistpll
pusha
aaa
cmp
cmc
lods
out
dec
popf
lods
push
ret
inc
loope
mov
jo
inc
sahf
xchg
cmp
cmp
andb
sub
mov
mov
cmp
pop
test
pusha
push
in
pop
mov
inc
gs
addr16
ja
dec
sbb
cmpl
adc
xor
jne
test
fdivl
fs
out
call
sub
or
push
or
out
shlb
xchg
jnp
addr16
or
hlt
outsl
aad
aaa
inc
pop
out
pop
xor
out
push
pop
pop
stos
mov
popf
push
popa
lret
sarb
ds
int3
adc
jns
lahf
xor
push
pop
dec
imul
stc
adc
push
mov
in
test
mov
mov
or
adc
adc
jl
xchg
jo
fstpl
cltd
mov
mov
add
outsb
add
add
adc
add
jecxz
xor
aas
aaa
add
add
add
adc
add
cmc
xor
xor
xor
