push
mov
sub
subl
add
mov
andl
mov
mov
add
mov
add
add
mov
push
lea
push
mov
mov
mov
mov
rep
mov
mov
mov
mov
add
test
sub
mov
lods
xor
stos
sub
add
add
sub
sub
ror
dec
jne
mov
sub
add
mov
imul
add
mov
mov
neg
imul
add
add
add
mov
push
lea
push
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
mov
mov
mov
mov
rep
mov
add
add
decl
mov
mov
jne
addl
subl
pop
pop
leave
ret
mov
push
cld
mov
mov
lods
mov
pop
ret
push
mov
push
push
push
pushl
mov
push
call
mov
push
pushl
call
cmp
je
cmp
jne
push
push
pushl
mov
call
mov
jmp
push
mov
push
push
push
mov
mov
call
push
push
pushl
call
xor
pop
pop
pop
ret
push
mov
sub
sub
push
push
mov
mov
push
xor
push
add
mov
call
push
call
lea
push
push
push
push
call
mov
cmp
mov
je
lea
cmp
mov
je
mov
mov
add
push
call
push
call
push
call
test
mov
je
mov
add
andl
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
mov
mov
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
push
mov
mov
mov
sub
add
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
mov
add
add
cmp
jae
cmp
jb
xor
cmpb
je
sub
cmpb
jne
push
lea
push
push
mov
call
sub
add
push
movb
call
push
call
lea
push
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
sub
push
push
xor
mov
push
call
push
call
push
push
pushl
push
call
test
mov
je
lea
test
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
lea
test
jne
push
call
push
call
mov
push
push
pushl
push
call
test
jne
jmp
xor
jmp
mov
mov
mov
mov
rep
mov
pop
pop
pop
leave
ret
push
mov
add
test
sub
xor
push
sub
cmp
push
push
jne
mov
mov
lea
push
lea
push
xor
mov
mov
movb
movb
movb
mov
call
test
jne
push
lea
push
mov
mov
call
mov
jmp
push
push
push
mov
call
push
lea
push
mov
call
mov
mov
call
add
cmp
jne
push
push
mov
call
test
je
push
push
mov
call
test
je
mov
call
test
je
push
push
push
mov
call
test
je
push
push
mov
call
push
push
push
push
push
push
push
mov
call
mov
mov
call
push
push
mov
push
mov
call
add
add
cmp
jne
lea
call
mov
xor
cmp
push
setne
push
push
push
mov
mov
call
mov
test
mov
jne
xor
jmp
mov
mov
mov
rep
pushl
pushl
pushl
push
call
mov
sub
mov
add
cmpl
je
push
pushl
push
call
mov
mov
jmp
mov
mov
test
je
mov
add
mov
push
mov
call
push
call
push
call
push
mov
call
push
call
pushl
call
mov
movzwl
lea
mov
movzwl
lea
push
mov
mov
call
push
call
lea
push
push
push
pushl
call
pushl
push
call
mov
mov
mov
sub
xor
cmp
mov
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
add
mov
push
push
push
mov
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
lea
mov
add
add
sub
add
incl
mov
cmp
jb
pushl
call
test
je
mov
mov
call
test
je
pushl
pushl
call
test
je
mov
mov
mov
andl
add
mov
movzwl
test
mov
jbe
mov
mov
addl
subl
push
mov
pop
rep
add
movzwl
add
sub
incl
cmp
mov
jb
push
push
pushl
mov
call
push
call
push
call
pushl
call
mov
add
push
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
andl
push
call
mov
jmp
mov
movzwl
imul
add
mov
inc
cmpb
jne
testl
je
push
push
mov
mov
xor
xor
mov
and
mov
pop
pop
mov
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
subl
cmp
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
push
xor
mov
mov
scas
je
sub
jmp
mov
mov
pop
leave
ret
push
mov
cmpl
jb
push
push
mov
mov
mov
add
sub
sub
mov
lods
xor
stos
add
addb
sub
sub
cmpl
sub
sub
ror
sub
jne
pop
pop
pop
ret
mov
mov
mov
mov
ret
cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
mov
sub
sub
push
push
push
xor
push
mov
call
push
call
pushl
call
mov
cmp
movzwl
lea
mov
jbe
sub
test
add
mov
mov
xor
test
je
mov
and
neg
sbb
and
sub
add
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
push
mov
call
push
call
lea
push
push
pushl
push
call
test
je
mov
movzwl
incl
sub
add
cmp
mov
jb
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
andl
push
call
push
call
lea
push
push
push
push
call
test
je
add
mov
add
add
add
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
xor
add
cmp
jbe
add
inc
cmp
jb
xor
push
add
pop
leave
ret
push
mov
add
sub
push
lea
push
mov
mov
mov
mov
rep
push
mov
push
pushl
mov
push
call
test
mov
je
push
call
mov
movzbl
lea
cmpb
jne
movb
mov
mov
mov
rep
mov
mov
mov
mov
lods
mov
sub
add
xor
cmp
stos
add
mov
rol
lea
test
jne
mov
mov
mov
movzbl
imul
xor
push
add
pop
lea
test
jne
cmp
jne
pushl
pushl
pushl
call
mov
mov
mov
rep
pushl
pushl
pushl
call
push
push
xor
push
push
mov
call
push
push
pushl
mov
call
xor
push
add
pop
pop
pop
pop
leave
ret
cmp
add
add
cli
pop
add
popa
in
dec
fdivrp
push
adc
les
pop
je
pop
push
adc
addl
daa
repz
sub
xchg
lea
aaa
std
in
jb
xor
pop
push
jecxz
jns
mov
popa
xor
xchg
xchg
jecxz
mov
push
lahf
out
das
out
pop
sti
sbb
lods
insl
das
lcall
jmp
push
int
sarb
movlps
push
push
add
ds
mov
sbb
aam
dec
aad
mov
popf
sub
jns
int3
fnstenv
mov
jmp
loopne
pop
sbb
js
in
jnp
or
lods
test
adc
mov
repz
adc
insb
arpl
pop
sub
mov
sub
das
int3
or
fbld
and
stc
out
enter
movsl
fdivp
push
leave
xchg
inc
fnstenv
dec
sub
rcll
imul
xor
jnp
push
cmp
pop
sub
pop
add
out
aad
aaa
pop
xchg
push
fsubl
subl
xchg
pusha
insl
ds
repz
push
jae
adc
fsubl
and
out
push
cld
or
mov
xor
in
lock
or
mov
daa
mov
pop
cmp
call
loop
loope
or
cmpb
inc
adc
lock
inc
mov
aam
mov
mov
ret
dec
dec
cmp
jmp
push
cltd
sbb
xchg
jecxz
push
daa
push
shr
fmuls
fildl
cmp
mov
xchg
jl
bound
xchg
sub
sbb
clc
mov
and
outsl
fdivr
pop
or
out
shll
add
fwait
push
ret
mov
dec
fadds
stos
add
movsb
xchg
sub
cmp
nop
add
push
xchg
jb
xor
in
adcb
sbb
shlb
lahf
addl
push
shrb
xorb
add
pusha
lock
popa
jae
pop
xchg
or
aad
aad
mov
push
mov
inc
pop
gs
mov
int3
sbb
aad
daa
pop
loopne
xchg
hlt
sbb
dec
inc
and
mov
mov
lahf
mov
idivl
test
xchg
mov
les
push
sbb
cmpsb
aas
adc
cmp
and
js
scas
pop
js
lock
mov
ret
insb
mov
hlt
outsb
aas
pop
jl
stos
lret
mov
pop
sbb
stos
in
jl
insb
popa
dec
std
ret
into
push
and
cmpsl
dec
xchg
jae
arpl
test
jo
out
test
rcll
movsb
das
int3
mov
xor
scas
dec
or
cmpsl
icebp
ret
ret
mov
mov
mov
imul
push
and
mov
mov
out
mov
cmpsb
dec
out
call
addr16
pushf
pop
test
jb
push
mov
mov
inc
clc
fcompl
sbb
repnz
int3
adc
call
popa
mov
mov
fyl2xp1
pop
and
cmp
xor
pop
in
push
inc
and
dec
je
jmp
cmpsb
push
or
jno,pn
mov
cwtl
push
insl
dec
push
arpl
out
cmp
mov
mov
frstor
test
mov
sahf
add
std
xchg
pusha
inc
pop
xchg
nop
dec
or
push
ret
jnp
es
icebp
jne
and
xor
sti
test
mov
sub
cwtl
push
pop
test
pop
lret
jmp
icebp
out
pop
push
sbb
movmskps
mov
repnz
pushf
inc
aam
pop
daa
bound
dec
pop
cmp
dec
fcoml
lret
add
scas
movsb
sahf
subl
orb
stos
rclb
fadds
sub
in
loope
mov
inc
in
pushf
adc
inc
aaa
outsb
outsb
fldenv
add
insl
lcall
sbb
inc
lods
mov
stos
out
sub
mov
aas
lahf
sub
es
cmp
mov
arpl
xchg
movsl
xor
pop
mov
mov
or
pop
in
mov
cs
int3
in
lock
adc
push
cltd
lods
mov
sbb
jbe
push
sbb
clc
mov
fistps
dec
inc
cmp
add
leave
push
jno
imulb
jne
ds
aam
cmpsl
or
push
sbb
xchg
xchg
sub
mov
cltd
fs
insl
xor
xchg
ss
fdivs
xchg
cmp
sbb
pusha
lods
or
cli
mov
sub
fistps
inc
lret
push
or
movsb
xchg
mov
xor
in
jno
inc
or
lret
lret
int
rorb
pop
mov
outsl
hlt
cwtl
in
sub
les
cli
mov
outsb
adc
push
adc
jae
hlt
or
push
in
sbb
cltd
imul
pushf
mov
ror
xchg
jge
ja
push
jbe
addr16
shrb
jmp
lods
push
inc
xchg
jo
push
aad
sub
jbe
in
lret
aad
lret
aam
pop
jno
scas
mov
orl
pushf
pop
inc
aam
push
fildl
call
inc
mov
mov
sti
mov
mov
inc
imul
adc
cli
xchg
push
lds
adc
jmp
mov
cmp
sbb
jae
lcall
or
dec
jge
push
dec
sub
mov
lret
or
mov
fs
xchg
enter
mov
std
push
stc
push
call
movsl
inc
add
fisttpl
cmp
nop
clc
int3
adc
fdivl
pop
stos
add
push
jnp
dec
push
dec
fdivrp
push
aas
adc
sbb
hlt
ljmp
lret
or
jmp
dec
sarb
call
fistpl
das
mov
pxor
inc
and
push
out
jp
fsubl
lret
pop
test
mov
mov
lret
mov
sbb
test
lcall
push
cltd
jl
xor
aad
xor
cmp
clc
sub
ljmp
loope
aad
pop
jne
mov
mov
add
pop
adc
jne
and
lock
inc
jnp
sub
ja,pn
rclb
pop
scas
mov
mov
div
cltd
cmp
mov
xor
mov
and
jae
lret
ret
ja
pop
push
mov
pop
add
les
adc
cmpsl
sbbl
jo
imull
fstpt
jb
push
mov
filds
sub
scas
shll
ret
clc
hlt
jo
mov
iret
fiadds
movsl
test
les
push
loope
mov
dec
sub
in
sub
pop
xorb
cmpsl
mov
in
fcompl
xor
ret
stos
inc
pop
xor
bswap
xchg
jns
leave
lds
inc
roll
mov
mov
ret
mov
mov
aas
push
mov
jbe
push
xchg
jge
adc
insl
clc
dec
dec
cmpsl
in
dec
mov
in
jo
dec
das
dec
push
stos
fwait
push
push
jp
daa
xor
or
jne
clc
sub
pusha
aam
scas
outsb
adc
xor
ret
sbb
ljmp
shlb
paddq
push
hlt
inc
and
xor
scas
sub
mov
xchg
insl
loope
je,pn
das
jo
xchg
dec
insl
push
cs
and
push
mov
xchg
lods
push
push
pushl
aas
jo
les
xor
push
cmp
cmc
das
lock
inc
pop
cmp
dec
mov
std
leave
and
or
data16
pop
int3
in
cs
xor
and
mov
loop
out
push
xchg
push
inc
repnz
daa
pop
movsl
mov
stos
jmp
std
pop
or
cltd
add
movsl
jb
jnp
incb
addb
das
out
lds
movsl
xchg
inc
xchg
cwtl
arpl
repnz
mov
addr16
loopne
push
faddl
clc
push
mov
mov
rcrb
mov
shl
das
lds
loope
sub
add
mov
mov
xchg
test
jmp
jae
adc
jns
stos
roll
push
cmc
imul
pop
mul
cmp
and
movsl
dec
movsl
mull
mov
push
ret
ret
push
push
sbb
mov
scas
fadds
inc
add
inc
aad
repnz
adc
stos
jmp
in
das
cmpsl
in
pop
sub
out
pop
mov
xchg
and
in
std
lods
repz
imul
movsl
jp
data16
nop
sahf
mov
mov
xlat
imul
imul
inc
outsb
out
icebp
cltd
xor
data16
cmp
xchg
or
imul
cld
data16
cmpsb
xchg
imul
add
je
jbe
fwait
mov
adc
test
orb
stc
push
ss
mov
push
arpl
lret
adc
cltd
add
or
scas
jl
push
sub
jo
dec
orb
cmp
out
ret
sub
mov
cmp
cmpb
clc
sub
in
adc
lcall
pop
mov
cmpsb
loope
add
xor
clc
xchg
push
lret
aas
adc
xchg
xor
add
and
jmp
je
fisubs
fistpl
cmp
dec
mov
mov
adc
loopne
push
or
dec
aas
xchg
push
cmpsl
pop
cltd
push
add
inc
nop
stos
divl
or
mov
xor
ljmp
stos
sub
mov
fs
jnp
sbb
sbb
add
movsb
and
and
out
mov
push
jns
aaa
sbb
inc
or
cld
mov
jo
and
pop
pop
and
cmp
adc
or
sub
xor
scas
cmpsb
mov
lret
push
movsl
jne
sbb
xor
mov
cli
int3
mov
or
por
leave
aas
imul
sub
les
fidivs
aaa
jg
cmp
stos
mov
jg
push
add
mov
inc
or
scas
pop
in
sbb
jp
mov
cmpsb
push
cmp
lcall
lods
mov
cmp
lahf
test
sub
dec
movsb
mov
xor
jp
mov
enter
aas
cmp
ds
push
jl
cltd
aaa
sub
jo
out
gs
aaa
jae
ficoms
cltd
leave
fistl
ja
ffreep
mov
push
js
or
out
mov
and
dec
pop
lahf
or
or
popa
std
fmuls
mov
pop
jno
fistl
adc
in
xlat
incb
mov
adc
push
sbbl
mov
stos
pusha
inc
mov
cwtl
xchg
inc
lcall
loopne
bound
ret
addb
imul
enter
or
or
adc
sahf
sub
lods
clc
inc
sub
int
ds
push
mov
xchg
mov
push
ds
mov
sub
jge
cltd
jns
push
mov
xor
icebp
mov
xchg
mov
loopne
xor
xchg
es
or
rcrb
jnp
and
dec
jbe
sbb
imul
test
mov
int
int3
and
adc
inc
aas
cmp
push
insb
cmp
shrl
adc
mov
cmp
pop
xchg
int3
pop
jge
xor
xor
enter
fldcw
leave
and
in
cmp
mov
faddp
insb
movsl
jp
and
xchg
push
pop
xor
ja
push
adc
out
ficoml
dec
sbb
call
jno
and
add
ror
add
js
dec
xchg
and
xchg
sbb
imul
pop
lcall
lret
movb
lds
sahf
lods
fmul
cwtl
shll
lcall
pop
sub
scas
test
ret
sbb
fwait
inc
inc
jno
stos
scas
aad
sub
aam
xchg
fistpl
add
imul
cmp
test
aam
call
out
or
lods
push
lahf
fucom
cmp
lret
mov
push
push
or
arpl
mov
fs
cs
mov
push
xlat
sbbl
jne
and
jae
xlat
mov
bound
pusha
out
ret
or
ljmp
or
xor
mov
push
or
dec
stos
imul
lods
inc
aaa
pop
sbb
mov
cmp
lds
pop
sub
xchg
aam
je
or
xchg
out
and
inc
mov
lods
jl
adc
lahf
add
adc
lea
add
call
notb
cmp
sahf
cltd
cmp
cmpsb
xchg
decl
test
mov
cmp
clc
popf
and
addr16
inc
in
imul
xchg
cmp
adc
sbb
mov
mov
ljmp
popa
mov
arpl
andb
je
mov
add
sub
xlat
mov
fisttpl
adc
pop
xchg
int
dec
addl
jp
popa
iret
jns
in
sbb
ljmp
lds
cmpl
movsb
xor
enter
jl
adc
inc
adc
imul
mov
lea
jo
push
cmpsl
shlb
clc
dec
jnp
mov
jns
adc
and
xchg
pop
icebp
shrl
lahf
add
push
and
ret
jns
push
movsl
or
shr
cld
pop
mov
int
dec
test
aad
push
hlt
lods
sub
dec
sbb
rol
scas
jmp
jns
js
or
sub
imul
gs
stc
jg
cmp
jp
jae
jge
xchg
js
cmp
mov
data16
mov
push
jbe
out
pop
inc
xchg
adc
movsl
mov
pop
fmuls
mov
and
add
std
cmpsb
cmp
in
inc
scas
jmp
test
xchg
std
popf
insb
cmp
adc
sti
inc
test
aaa
rep
pop
loopne
add
lret
out
pop
fstl
daa
movsl
push
push
fildl
cmp
adc
stos
lret
dec
xor
mov
lock
jmp
and
gs
pop
call
fdivp
gs
push
add
sub
push
mov
into
les
xchg
in
cwtl
or
jnp
jmp
daa
dec
int3
push
push
dec
push
imul
adc
jno
push
paddsw
and
and
out
outsl
inc
sub
add
mov
icebp
sub
leave
clc
jp
mov
fiaddl
lds
inc
pop
cmpsl
mov
les
push
adc
mov
lret
dec
or
idivb
cmp
pop
push
enter
dec
lcall
mov
fmull
stc
fsub
add
dec
in
xor
jo
sbb
inc
jge
pop
cmpsl
test
adc
movsl
push
divb
addb
mov
mov
or
pushf
inc
adc
loopne
pushf
inc
repnz
jg
push
mov
xlat
push
in
mov
scas
dec
adc
lahf
push
xor
push
pop
inc
mov
and
aas
and
or
shrb
arpl
mov
shlb
out
and
clc
add
mov
aaa
lea
in
ja
test
call
je
lods
add
mov
pop
and
jp
mov
cli
xor
hlt
iret
xor
in
fs
dec
fldt
push
dec
jnp
or
mov
dec
scas
or
in
mov
or
and
flds
imul
and
mov
mov
inc
cmp
cmpl
pop
adc
mov
enter
pop
fwait
push
dec
clc
or
pop
js
shufps
movsb
lcall
ds
inc
mov
sub
cmp
sub
pop
and
mov
sbb
mov
mov
xor
popa
dec
jno
jle
mov
scas
andb
in
out
dec
jle
test
in
fcmovnb
cmc
mov
pop
fistpl
mov
jge
adc
jl
sbb
fdivs
pop
icebp
fldl
xchg
pop
call
and
fcoms
sbb
xlat
enter
sub
adc
repz
loope
jge
inc
jb
enter
dec
mov
int
test
lods
sarl
sbb
mov
and
inc
dec
jae
and
cmpsl
dec
pop
sbb
dec
std
inc
cmpsl
pushf
mov
dec
scas
mov
sbb
in
jp
adc
call
sbb
popf
xorl
xor
cmp
cmp
je
sub
mov
lock
sub
add
xchg
cmpsb
jl
gs
jge
sbb
out
lahf
cmc
sbb
mov
lcall
lds
addr16
fbld
outsb
fnsave
pop
lret
adc
jnp
ss
in
insl
mov
mov
scas
test
sub
mov
pop
dec
mov
push
xchg
jb
call
xchg
ja
das
data16
sub
ficomps
jle
out
into
insb
loop
imul
cmp
addr16
or
test
or
xchg
loop
mov
adcb
pop
mov
je
add
js
dec
lret
or
add
popf
inc
mov
adc
addr16
xchg
stos
outsl
xor
pushf
in
ror
pusha
cs
push
cld
and
push
cmp
adc
pushf
or
adc
int3
loop
push
notl
aad
pop
adc
xorb
xchg
arpl
daa
lock
mov
dec
and
je
or
imull
or
cltd
shlb
decb
push
or
push
mov
jp
pop
out
imul
insl
adc
adc
scas
sbb
jne
stc
lea
test
jmp
enter
inc
aas
and
xor
aam
add
add
roll
hlt
into
pop
outsl
mov
bound
push
cmpsb
daa
mov
sub
dec
sbb
dec
es
sar
loopne
adc
out
icebp
jo
mov
jno
jle
push
mov
es
sahf
aas
jle
jecxz
mov
xchg
xchg
jbe
sub
mov
mov
cmp
stos
or
xor
adc
xlat
adc
inc
out
xlat
push
add
loop
jo
imul
adc
adc
cli
mov
dec
push
inc
cmp
mov
lret
or
out
pop
incl
xor
jb
out
jl
pop
dec
mov
adc
pop
push
pushf
pop
push
lcall
loop
fldcw
mov
mov
in
and
out
mov
or
loope
mov
es
pop
inc
push
in
iret
mov
jg
fdivp
lret
insb
mov
sbb
mov
mov
and
addl
testl
leave
and
pop
and
xchg
dec
mov
mov
loopne
movsb
xlat
dec
pop
sub
push
out
int3
insb
mov
cmp
call
mov
jmp
add
stos
stos
fwait
mov
push
insb
or
jns
add
or
dec
push
cld
lock
push
ja
test
lahf
xchg
mov
mov
cmp
dec
dec
lds
popf
mov
sbb
xchg
or
insl
push
mov
push
jbe
sbb
shrb
cmp
xchg
pushf
pop
and
jne
sbb
sahf
stos
push
push
fidivrl
cmp
mov
sub
shlb
mov
sbb
lock
push
repnz
xor
std
mov
jg
jl
mov
push
xor
mov
jmp
dec
xchg
addr16
mov
fdivp
xchg
aas
add
lret
mov
daa
cmp
ds
cmp
push
mov
imul
pop
inc
sbb
dec
mov
test
fadds
sahf
std
pop
aad
dec
sub
fsubrl
sbb
repnz
js
adc
inc
push
ss
mov
jb
mov
jo
push
or
mov
clc
imul
inc
push
cli
xor
fnstsw
inc
mov
sub
adc
inc
mov
int3
out
mov
mov
imul
or
mov
xchg
adc
jge
popa
sarl
ss
pop
pop
adc
and
aad
inc
lcall
cwtl
repnz
xchg
fisubrl
outsb
cwtl
xor
mov
into
jl
cmp
ljmp
sbb
test
pop
sub
add
lret
jg
mov
addr16
sar
xchg
test
xchg
addb
jecxz
mov
andw
xor
cmc
jbe
mov
pop
pop
sub
rcrl
mov
fimuls
dec
mov
dec
mov
jae
jo
dec
imul
mov
push
loopne
pop
icebp
popf
pusha
inc
ja
out
sbb
fildll
jns
loopne
push
nop
mov
and
mov
addr16
sbb
imul
icebp
push
mov
sub
out
in
jecxz
mov
mov
xor
jle
in
xchg
mov
gs
cs
push
push
and
jge
dec
ds
lock
xor
fstps
imul
int3
inc
fldcw
ljmp
cs
mov
sub
cmp
std
out
jbe
sbb
cmp
shrl
stc
or
or
mov
lods
pop
movsl
lret
les
fwait
mov
stc
dec
jecxz
sbb
bound
scas
rcrb
sarl
rcll
subl
sbb
mov
jecxz
insb
loopne,pn
xchg
jne
js
fnsave
dec
insl
in
sbb
dec
fs
mov
scas
push
imul
iret
cli
sbb
inc
jns
pop
stos
aaa
fidivrl
sahf
jae
fcmovnb
insb
divb
ja
adc
bsf
sbb
jne
into
mov
pop
lret
pop
popa
xor
popf
popf
mov
scas
lock
or
pusha
jge
or
and
out
jg
fistpll
mov
shrb
ret
xor
orl
ficoms
stc
or
sahf
icebp
jecxz
cmpsl
sbb
adc
jb
notb
or
jp
sub
iret
mov
mov
dec
dec
and
adc
sub
outsb
dec
jnp
xor
cmp
pop
adc
jnp
jno
aam
mov
shll
pop
inc
inc
and
xchg
lea
cmp
int
xor
jbe
shr
xchg
sub
sahf
xchg
jae
sbb
clc
xor
xor
hlt
adc
mov
scas
sbb
in
lea
sahf
aaa
cli
inc
jne
pop
xchg
mov
push
daa
cltd
xor
xchg
inc
jecxz
lods
ja
push
push
or
push
roll
and
mov
cmp
mov
dec
push
clc
test
inc
fmull
and
mulb
pop
dec
pop
sub
mov
mov
es
jb
jle
in
push
and
or
jno
lret
fsub
inc
in
mov
pop
pop
cli
push
add
dec
add
mov
push
fistpll
mov
lods
inc
and
mov
loop
xchg
repz
xlat
sub
loopne
lods
xor
or
fdivl
arpl
sub
rolb
test
mov
push
jecxz
jne
popa
je
mov
or
test
sub
mov
adc
xchg
xor
call
dec
inc
push
fcomps
pop
mov
stos
ret
in
pop
mov
mov
test
push
imul
cli
mov
mov
xor
decb
outsb
push
int3
sbb
mov
cs
cmp
cli
ffree
leave
pop
adc
scas
jmp
es
ret
pop
cmpsb
or
sub
inc
lods
pop
in
imul
fs
pop
jb
subl
and
pop
xchg
or
adc
dec
push
fimuls
push
shlb
adc
call
inc
aaa
jp
inc
push
dec
jne
push
dec
subl
jge
mov
or
pop
mov
inc
mov
les
out
fstl
adc
loop
sahf
cmpl
es
sub
adc
aad
xchg
cmpsl
xor
icebp
cmpsb
sub
or
bound
pop
ret
jbe
mov
and
mov
push
ret
pop
jb,pn
push
int3
mov
shlb
mov
rcll
out
inc
jae
je
fiaddl
sar
pusha
popa
popa
mov
das
repz
xchg
xchg
cmp
inc
rorb
jnp
cmpsb
gs
inc
mov
mov
popa
arpl
and
cwtl
imul
or
xor
cmp
call
pop
icebp
gs
fcoml
jo
jge
jecxz
jns
sahf
push
inc
jl
push
fistl
arpl
imul
lods
lods
stos
aaa
rcrb
into
enter
out
lcall
in
jno
in
icebp
push
jo
cmc
mov
pop
aad
out
cmpsl
sahf
push
or
push
insb
sbb
mov
jle
dec
out
clc
fwait
sub
mov
pop
fcomp
je
aad
push
lcall
and
mov
push
sub
insl
adc
aad
push
and
jmp
push
rorl
xchg
mov
dec
sub
add
ret
out
jp
les
shlb
out
loope
lahf
jo
dec
mov
mov
push
sub
fcmovbe
jns
add
push
mov
xchg
mov
sub
out
push
fs
test
sub
xchg
and
xchg
cmp
mull
add
call
inc
fistps
jb
loop
imul
jb
icebp
sub
cmpsl
bound
roll
jo
dec
into
pop
push
aas
xchg
mov
push
cmpsl
pop
cs
cmp
push
mov
cli
mov
push
outsl
jmp
mov
xchg
cld
es
mov
mov
mov
jno
scas
pushf
icebp
pop
push
mov
push
dec
in
inc
ficomps
mov
xchg
int3
inc
insb
jmp
pushf
cmp
mov
mov
xchg
out
mov
push
repz
pop
cmpsb
cld
cmp
mull
lret
dec
xchg
xor
push
xor
imul
xor
jecxz
sub
lods
mov
pop
pop
cmp
inc
movsl
mov
inc
or
or
mov
dec
fmul
or
clc
scas
cltd
xchg
or
sbb
cli
clc
dec
mov
scas
dec
push
cmc
dec
pop
dec
inc
je
dec
sbb
xor
push
ds
mov
into
daa
jbe
pushf
pushf
xchg
xor
and
jg
mov
xor
adc
xor
xor
cmp
xor
mov
in
and
cmp
cmp
mov
test
push
in
lret
pop
jns
xchg
mov
mov
nop
cmp
adc
out
pop
push
dec
test
jbe
dec
bound
fwait
mov
jo
test
jns
test
daa
push
jbe
shr
push
jns
jmp
jae
jne
xchg
fimull
nop
sbb
call
repnz
lock
into
and
dec
push
clc
movsl
and
xchg
cmp
movsb
xchg
mov
mov
ja
subl
mov
arpl
lds
xchg
mov
or
rorl
mov
ret
jae
push
inc
adc
mov
rcrl
jbe
loopne
dec
and
in
mov
leave
xor
mov
lds
mov
dec
cmp
ret
sub
std
cwtl
sarl
fs
pop
fbstp
and
and
sbb
dec
lret
cli
inc
or
pop
mov
popf
cmpsl
sbb
in
inc
out
movsl
insb
divl
jmp
pop
iret
xor
jnp
aam
outsl
mov
lret
leave
jb
or
sbb
mov
dec
mov
dec
add
add
bound
add
add
jbe
add
add
jae
add
data16
imul
add
fs
add
add
add
add
add
add
je
add
inc
outsb
add
jae
push
add
insb
add
add
data16
jb
je
jne
outsb
add
sub
add
popa
add
add
add
add
add
jbe
add
add
outsb
add
add
popa
jns
add
add
add
jb
add
dec
add
ja
imul
add
popa
add
add
outsl
add
insb
add
add
add
jns
add
jae
add
add
add
jb
push
outsl
imul
add
ja
add
dec
popa
