push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
mov
xor
mov
stos
mov
sub
sub
rorl
sub
dec
mov
jne
pop
pop
pop
ret
push
mov
sub
push
push
mov
push
mov
call
mov
xor
mov
cmp
je
mov
jmp
push
mov
call
lea
push
mov
push
mov
call
push
mov
call
cmp
je
cmpl
jne
call
cmp
jne
push
push
push
push
push
push
push
mov
call
mov
mov
mov
push
mov
call
push
call
lea
push
push
push
push
call
mov
mov
mov
mov
add
push
mov
call
push
call
push
push
push
pushl
call
add
mov
cmp
je
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
leave
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
mov
jmp
lea
mov
mov
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
lea
mov
mov
dec
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
mov
mov
push
mov
push
add
push
lea
lea
pop
call
push
push
lea
push
call
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
add
and
add
mov
mov
movl
mov
mov
lea
call
mov
mov
add
xor
add
decl
jne
addl
pop
pop
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
add
mov
mov
not
mov
add
not
shl
imul
add
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
inc
dec
jne
pop
mov
ret
xor
ret
push
mov
sub
push
push
push
push
xor
lea
push
push
mov
call
add
xor
movzbl
push
mov
call
inc
pop
cmp
jb
lea
push
mov
mov
movb
mov
movb
mov
call
mov
lea
push
call
add
pop
pop
cmp
je
xor
inc
jmp
push
push
push
mov
call
mov
cmp
je
cmp
jne
testl
je
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
je
push
push
push
push
call
push
mov
call
jmp
push
push
push
push
push
mov
call
test
je
pushl
mov
call
xor
pop
pop
pop
leave
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
mov
pop
push
rdtsc
mov
mov
test
jne
movl
jmp
mov
not
xor
ror
not
mov
movzbl
lea
cmpb
jne
push
push
pushl
movb
call
mov
push
call
push
push
pushl
mov
call
mov
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
inc
pop
leave
ret
cmp
cmc
cmp
add
add
outsb
add
fadds
jb
pop
cli
xchg
dec
bound
mov
and
mov
inc
sub
hlt
push
pop
push
push
push
xor
xchg
insb
icebp
gs
mov
lock
adc
push
fdiv
out
and
sub
push
scas
arpl
push
pop
ret
fidivrs
inc
add
add
test
sti
aad
fcompl
inc
out
xor
pop
jp
repz
out
cmp
pop
add
sbbb
les
vmread
push
add
xchg
pop
lret
mov
int
mov
mov
jp
sahf
ror
dec
push
jmp
test
arpl
push
aam
fmull
xchg
add
push
into
test
cltd
push
jae
fcmovnb
xchg
and
lret
repnz
pushf
pop
fdivl
idivl
clc
inc
pop
in
testl
notl
mov
gs
fs
mov
jbe
scas
xchg
mov
rcl
mov
sub
mov
les
inc
adc
in
dec
stos
jg
cmp
cwtl
jl
outsb
inc
inc
out
mov
mov
inc
imul
movsb
cmp
bswap
sbb
addr16
jge
subl
and
jmp
rcrl
sbb
dec
xlat
push
cmp
cmovno
das
and
or
clc
or
sub
xor
lea
mov
test
jno
nop
jae
dec
sub
or
sub
xor
add
mov
jo
xor
sub
xchg
xor
xor
mov
lahf
mov
mov
or
pop
or
incb
jbe
les
fcoms
push
loope
inc
arpl
cli
inc
sti
xor
sub
test
out
ret
jbe
lahf
mov
pop
mov
sub
int
shrl
mov
shr
jl
and
sub
iret
mov
cs
pop
mov
sub
pop
mov
enter
lea
and
or
mov
int3
pop
jmp
dec
jp
lret
dec
mov
incl
lcall
push
stc
xor
ljmp
dec
xchg
cmpsl
outsl
into
aas
ljmp
cltd
sahf
out
in
mov
pop
data16
push
sbb
pop
sub
sbb
cmp
xlat
mov
xchg
jmp
pop
repz
subb
push
mov
leave
divl
gs
xchg
test
out
cmp
lds
dec
outsl
ret
mov
cmpsl
stc
jns
pop
cmp
mov
insl
mov
imul
lret
icebp
xchg
mov
subl
sub
aam
fdiv
jecxz
dec
add
push
jg
out
xchg
out
repnz
push
lds
loopne
pop
lcall
xor
int
mov
mov
lcall
loopne
mov
das
fbstp
rcr
aaa
xchg
or
dec
outsb
repz
iret
imul
add
es
xor
push
andl
push
pop
leave
incb
stos
repz
lds
and
js
adc
in
repnz
insl
xchg
mov
push
cmp
jb
dec
loop
inc
inc
xor
cwtl
loop
pop
shrl
faddl
sub
push
outsl
es
mov
xor
xchg
adc
adcb
test
push
cmpsb
mov
repnz
xor
test
shll
xchg
aaa
enter
lret
mov
mov
dec
pop
stos
rcrb
lret
push
cmp
mov
pop
mov
mov
cmpsb
and
rcl
int3
pop
lret
cmc
lahf
cs
fcoml
or
mov
add
sbb
dec
sbb
scas
pop
mov
int3
fisubrs
cs
xchg
cmp
mov
aad
fwait
loope
xchg
idivb
or
lcall
loope
sbb
and
xlat
cmp
jns
inc
inc
cmpl
movsb
xor
sub
xchg
fcompl
mov
repz
push
and
pop
mov
inc
aaa
mov
cs
pop
cmpsl
rorl
xor
xchg
int
sbb
jne
mov
sbb
and
fcomps
ljmp
xor
inc
add
jg
clc
outsb
lret
sub
jecxz
ja
int3
adc
notb
cmp
std
inc
inc
sbb
stos
pop
jp
add
mov
out
push
arpl
mov
jne
jge
jbe
in
sub
stos
insl
std
push
mov
push
mov
dec
ficompl
lock
ja
orl
mov
mov
jo
dec
ds
lahf
addl
cmpsb
xchg
ja
mov
lcall
xchg
or
sub
fisubrl
lea
jg
pop
lret
fwait
jae
jae
jns
stos
mov
lods
push
pop
sub
mov
inc
jo
mov
xor
push
sbb
movsb
sbb
repnz
xor
in
and
inc
or
push
jmp
cmpsl
sbb
xchg
mov
push
mov
aam
scas
sbb
xchg
or
sbb
in
jmp
bound
or
in
stc
aad
scas
loop
in
pop
cmp
mov
daa
jns
mov
test
cmpsb
xor
sub
inc
stc
or
ror
fisttpll
rcll
sbb
mov
jg
mov
pop
mov
sbb
leave
xchg
shll
test
inc
sub
jmp
jb
js
lahf
xor
rolb
inc
xorb
jns
dec
inc
scas
sub
test
inc
cmp
xchg
cmpb
mov
inc
mov
adc
mov
clc
enter
bound
int
xchg
add
das
pop
or
push
stc
and
inc
aaa
fwait
loopne
xchg
jp
sub
sbb
fdivrl
push
leave
add
pop
cmp
call
dec
cwtl
xlat
sbb
sti
or
ljmp
jmp
movsl
push
out
int3
push
rcrl
mov
cmp
test
push
leave
mov
or
sub
dec
mov
fsubs
jp
aas
cmc
ret
jnp
out
fnstsw
cmp
push
sbbb
push
cli
into
dec
pop
or
movsb
insb
cmpsb
lea
adc
idivb
jbe
add
cld
test
xor
add
test
adc
xchg
push
xchg
xchg
dec
mov
sbb
lea
lods
loope
mov
sub
dec
out
lret
xchg
loop
test
jg
mov
xor
aam
mov
popf
aam
xor
jecxz
jnp
cli
xor
movsb
ds
pop
sbb
lea
inc
cmp
xor
sbb
cmpsb
jno
adc
xchg
dec
jg
dec
clc
add
xchg
test
dec
mov
and
fwait
cmp
add
sub
inc
and
rol
clc
aad
in
inc
iret
jno
std
and
jmp
mov
sahf
push
test
dec
jbe
xor
dec
cmpsb
movsb
push
sbb
iret
stos
sbb
icebp
stos
cmpsb
in
lea
sub
imul
add
loopne
adc
xchg
pop
and
lahf
pop
add
jns
ja
mov
ss
inc
adc
gs
inc
jnp
in
jle
stc
mov
mov
pop
sbb
cmp
xchg
dec
mov
and
cmpsl
mov
dec
push
lods
sbb
mov
xchg
cmp
rcrb
pop
fwait
std
movsl
pop
push
jp
cs
ds
ret
mov
movsb
push
repnz
pop
xor
cmp
xchg
into
ss
aas
into
mov
push
lods
cli
or
pop
aam
cmpsb
mov
lods
inc
jmp
rcll
pop
fmull
xor
adc
fisubl
call
ret
addb
aaa
dec
or
cmpb
xchg
or
ret
push
andb
jae
stos
cmc
mov
mov
ret
in
les
xchg
mov
out
jp
mov
pop
mov
pusha
lea
sub
daa
jge
add
fmulp
lahf
popf
lds
je
insl
pop
pop
push
ret
push
mov
add
inc
sbb
pop
xor
and
daa
fisubrs
pop
mov
and
add
ja
fcmove
xchg
pop
dec
adc
pop
imul
pop
xchg
push
mov
sbb
fistpl
clc
sub
xchg
call
out
outsl
adc
mov
pop
andb
daa
dec
dec
js
outsb
add
sub
xor
sbb
inc
mov
xchg
fwait
mov
lret
and
popa
pop
call
adc
push
gs
orl
scas
lock
aaa
test
push
mov
mov
das
das
inc
adc
cwtl
mov
and
xchg
jge
int3
pop
in
or
and
dec
outsl
xchg
xchg
aaa
shrb
das
adc
cmp
jg
jle
xchg
mov
je
pop
push
out
xchg
jg
cmp
loopne
lahf
les
add
repnz
pushf
ljmp
jmp
in
xor
push
dec
loopne
repz
cmp
mov
inc
pushf
mov
mov
arpl
mov
push
les
mov
mov
ret
push
pop
repnz
sti
pop
addr16
enter
lcall
push
cmp
leave
or
mov
shll
add
jae
bound
fwait
xchg
lods
xchg
insb
and
int3
and
push
push
mov
cmpsl
lcall
test
sub
ret
xor
push
cmp
and
xchg
gs
and
aad
fstpl
mov
jg
jae
ficomps
aas
sahf
sbb
jo
xchg
mov
xlat
out
enter
xchg
scas
fs
negl
insl
xchg
cmpl
leavew
shll
je
adc
adc
mov
aaa
ret
inc
jle
das
sub
or
jne
dec
int3
inc
loopw
pop
ret
add
or
fisubl
das
mov
out
sbbb
insl
dec
pop
sbb
or
dec
inc
mov
rcrb
pusha
arpl
xchg
mov
inc
jne
and
outsb
sub
fsubs
sub
pop
xor
xchg
cwtl
lret
push
mov
dec
add
inc
daa
mov
push
add
stc
xor
and
mov
jne
out
dec
out
jecxz
sub
les
fmul
xchg
cmp
pop
popl
sub
or
loopne
mov
mov
push
jge
ljmp
mov
inc
shl
aas
inc
leave
cmp
inc
sbb
mov
cmp
lock
fdivrl
push
jns
or
aad
adc
mov
sub
xor
cmp
push
gs
mov
fildl
je
push
loop
push
in
xor
loope
mov
call
mov
fdivs
stos
stos
mov
mov
xlat
repz
xchg
sahf
fisttpll
fisttpl
inc
add
je
lds
es
test
mov
xor
adc
sbb
or
ret
inc
loopne
data16
int3
xchg
inc
repz
cmpsl
cld
mov
scas
xchg
cmp
andb
cltd
enter
mov
out
jns
and
xor
lcall
dec
popa
fwait
pop
movsb
or
jbe
lret
fs
jle
in
arpl
or
test
stos
push
adc
jns
xchg
stos
mov
fwait
mov
jmp
arpl
shlb
jno
leave
push
jmp
pop
dec
push
loop
mov
add
xchg
pop
jnp
lea
or
test
mov
movsl
lret
pop
cmp
and
jle
cmp
xchg
inc
pusha
jnp
xchg
mov
lods
adc
movsb
or
fstps
dec
pop
adc
and
jmp
mov
inc
jae
sbb
mov
and
insl
outsb
mov
fnstenv
sbb
add
sub
push
movsl
jno
rol
dec
and
aam
repz
inc
in
repnz
pop
mov
lock
mov
mov
aam
adc
lods
sbb
dec
and
mov
test
bound
fstps
sti
mov
push
sbb
xor
sub
arpl
scas
mov
mov
or
pop
leave
add
inc
mov
into
mov
lods
push
insb
adc
call
ss
decl
mov
cmp
add
mov
push
push
inc
pop
inc
pushf
xchg
lods
icebp
ja
xchg
push
cltd
jge
push
clc
sbb
add
lret
mov
dec
or
fnsave
dec
out
lods
sbb
pop
cmp
mov
push
fdivrp
ret
sbb
std
adc
or
into
iret
adc
sar
in
lods
mull
jg
jle
mov
add
sub
xchg
sbb
jle
out
inc
bound
and
es
mov
and
jno
add
imul
and
and
stos
push
lods
bnd
testl
aaa
repz
insb
mov
popf
add
out
imul
das
rcrl
sbb
jl
jge
clc
sub
push
inc
jp
adc
jb
push
dec
adc
in
cmp
jns
in
xchg
push
out
mov
daa
adcl
cmpsb
lods
test
mov
mov
cmc
pop
fsubrs
mov
lret
push
xchg
push
inc
repz
out
push
loope
add
ror
lret
lock
mov
rcll
ss
imul
call
rcll
lods
loop
bound
stos
mov
push
mov
sub
mov
xor
icebp
inc
push
sbb
stos
jns
jne
out
shlb
ljmp
add
mov
scas
sbb
lods
add
and
push
sub
xchg
adc
rcrl
xchg
fs
inc
out
xchg
mov
cmp
inc
lods
rorb
pop
fsubs
into
cmp
jp
cmc
lods
cmp
adc
leave
dec
imul
dec
leave
adc
imul
sbb
fwait
adc
mov
jecxz
xchg
add
lods
sbb
dec
stos
out
sub
cwtl
inc
sbbb
push
aaa
adc
cmpsl
lcall
and
xchg
xchg
insb
xor
xor
cld
sub
loopne
dec
call
push
mov
cmp
mov
ljmp
xor
jl
outsb
xor
aas
andl
outsb
and
dec
and
dec
jno
mov
pop
jns
dec
lock
data16
sub
out
sub
push
outsl
sub
enter
fisubs
push
dec
sub
sub
out
fildl
add
cli
mov
fs
pop
pop
and
adcl
aaa
jne
outsl
mov
cmp
pop
inc
es
lods
or
fisubrs
stc
push
fwait
adc
push
or
jns
movsb
popa
hlt
lret
test
or
int3
fwait
jnp
enter
pusha
inc
mov
jmp
sub
inc
out
rcl
xorb
pop
ds
adc
dec
or
dec
stos
aas
pop
movb
ret
mov
add
or
mov
fsubrp
pop
mov
cli
pop
pop
out
sahf
mov
mov
pop
cs
sti
cltd
aam
xchg
adc
test
clc
ss
js
cwtl
or
jge
ja
adc
aaa
and
test
jb
test
insl
cltd
push
call
lds
cmp
test
push
in
jnp
add
lret
inc
sub
insl
dec
arpl
adc
and
push
inc
shlb
and
mov
shrl
subb
pop
ds
cmp
mov
jns
pop
addr16
jmp
pop
or
pop
in
mov
cltd
pop
push
js
mov
rcll
cmp
pop
push
lahf
push
out
ja
jbe
lahf
sarb
repnz
inc
jns
mov
mov
nop
hlt
cmpsb
push
push
dec
adc
outsl
pop
fcmovu
mov
sbb
cmpsb
in
rcr
cmp
mov
dec
pop
add
out
out
cld
mov
adc
addr16
mov
xchg
jge
mov
int3
push
inc
mov
lods
xchg
push
inc
arpl
ss
out
nop
cmc
sahf
push
ret
mov
mov
mov
jmp
sbb
push
pop
jae
sti
pusha
ds
jmp
push
pop
jmp
sbb
jecxz
rol
fnsave
cmp
push
xorl
cmpsl
xor
push
and
pop
dec
jno
jno
pop
add
or
divb
add
mov
insb
xchg
fisttpll
cltd
inc
fcmovnb
xchg
loopne
push
faddl
popa
dec
jns
lret
nop
cmpsb
xor
sbb
mov
cld
jp
mov
shll
scas
inc
dec
push
dec
stos
popa
je
push
ja
lea
xchg
sbb
movsb
jns
call
push
mov
push
and
xchg
pop
pop
pcmpeqw
push
sbb
and
cmp
mov
dec
or
cmpsb
or
pop
pop
pop
xor
jle
imul
and
add
sbb
in
dec
pop
jle
and
jbe
lret
xor
sbb
xor
push
adc
mov
popf
or
loopne
jl
stos
hlt
adc
xchg
pusha
lds
test
mov
push
pop
dec
jmp
dec
push
in
dec
std
repz
push
jno
lds
shlb
mov
cmp
or
pop
push
adc
cmpsl
fdivrp
sbbl
mov
hlt
lds
cmpsl
dec
inc
mov
mov
add
xor
addl
push
push
xor
cs
mov
call
jb
inc
and
nop
or
sahf
inc
jo
xor
sub
icebp
nop
or
or
jecxz
jae
fildll
dec
outsb
mov
cmc
repz
and
dec
and
mov
push
or
loop
in
adc
cmpsb
lcall
inc
push
sbb
mov
cmp
movsl
sbb
test
mov
inc
inc
imul
xchg
aam
cli
xorl
roll
mov
addl
inc
jne
jo
in
movsb
pop
divl
mov
aas
cmp
fisubl
xrstor
ss
lods
jge
push
jb
test
push
mov
dec
jae
aad
iret
std
mov
icebp
xchg
cmp
outsl
daa
mov
sub
jl
lock
xor
fidivrl
aad
dec
fisttpl
mov
xchg
inc
lcall
push
rcl
dec
push
mov
pop
mov
pop
fsts
int
jle
sub
insl
push
dec
ja
push
dec
dec
mov
test
in
push
xchg
fimull
mov
mov
mov
jns
jb
push
jge
sub
nop
in
fcmovu
push
hlt
lahf
fsubrl
or
xor
in
dec
mov
pop
jl
lea
push
lcall
pop
and
mov
sub
cmp
push
imull
gs
or
cld
push
lahf
push
sahf
sbb
nop
in
jle
gs
xor
fidivl
rcl
sahf
jge
xor
rol
or
aad
outsl
popf
movb
lea
loop
inc
sbb
pop
fcoml
xor
test
pop
and
fs
mov
fisubrs
fwait
and
add
push
ret
into
add
adc
movsb
mov
jno
mov
dec
cmp
sbb
or
jb
lock
testl
je
lret
arpl
xchg
push
or
fwait
pop
iret
sbb
les
dec
out
xor
pop
out
stos
mov
aas
pop
int
in
sub
sub
ss
pop
push
mov
bound
sbb
lods
jp
sbb
dec
sbb
sub
add
dec
xor
xchg
call
inc
sub
imul
enter
fcomps
mov
lds
dec
cmp
cmp
jo
shlb
xadd
mov
inc
arpl
iret
add
fwait
jne
jnp
dec
inc
scas
inc
aaa
ds
fidivrs
js
or
xor
xor
sahf
dec
jge
pop
add
add
adc
aad
inc
inc
ljmp
sti
push
jmp
jge
in
cltd
xchg
stc
xchg
dec
jge
inc
add
jecxz
and
xchg
insb
fxam
leave
cmp
push
mov
adc
jp
cmc
xchg
imul
in
enter
push
push
mov
addr16
mov
aaa
pop
push
jle
pushf
cmp
nop
dec
push
dec
mov
stos
jl
pop
xchg
mov
xchg
add
shr
and
xlat
movsl
or
hlt
mov
out
aas
adc
int
fiaddl
aas
push
mov
pop
lahf
xchg
and
and
lahf
scas
mov
cmp
push
mov
ficompl
mov
shlb
inc
mov
mov
and
cmpsl
lcall
pusha
lea
lods
mov
cmc
es
cpuid
push
inc
lahf
je
mov
rolb
rcl
and
pop
sahf
add
in
fisttps
cmp
inc
fmuls
stos
sub
inc
ja
pop
sbb
call
dec
ret
ja,pt
jge
mov
sbb
pop
cld
into
mov
loope
int
mov
or
push
adc
mov
cmp
jnp
ja
int
xchg
aaa
adc
sub
add
adc
leave
inc
cmc
jb
js
fstpl
mov
sub
test
dec
les
popf
bound
cmpsb
ljmp
stos
loopne
js
jae
dec
enter
xor
mov
sbb
adc
mov
pop
imul
mov
dec
cmp
iret
aam
lods
lods
incl
sti
mov
mov
xchg
lret
push
call
je
ret
iret
inc
loopne
dec
mov
in
in
sbb
fbstp
push
ret
mov
test
pop
and
lock
mov
mov
fstps
jecxz
mov
jne
shll
mov
mov
or
int
fwait
inc
call
mov
popf
subl
sahf
sbb
push
rcrb
xorl
adc
rcrl
inc
mov
aaa
jb
mov
lods
adc
xchg
inc
int3
sub
cmpl
pop
push
test
loop
cld
lahf
xchg
sbb
push
out
push
inc
rol
scas
cmc
lahf
mov
pop
ret
inc
ds
insl
test
sub
dec
pop
push
dec
or
dec
cld
dec
mov
test
cwtl
xor
addl
mov
scas
xor
aam
mov
pushf
cmc
mov
call
nop
shrb
dec
mov
mov
sbb
jmp
lret
mov
dec
in
das
adc
in
aad
iret
cs
test
and
push
jg
test
loope
data16
xchg
pop
jmp
or
mov
dec
inc
lods
sub
xchg
mov
jno
loope
dec
or
mov
ljmp
dec
add
jo
mov
sbb
mov
xchg
cmp
mov
mov
lds
test
xchg
dec
mov
clc
dec
loopne
mov
js
cmp
mov
popa
add
shl
pop
imul
mov
mov
insb
mov
mov
pop
mov
adc
add
fdivl
or
mov
out
aad
mov
inc
push
in
dec
adc
ret
jmp
lods
aam
fisttps
ret
xchg
mov
mov
mov
fsubrp
push
xor
popa
js
sbb
and
xlat
mov
mov
push
lcall
pop
push
insl
lret
push
je
mov
ss
and
sti
mov
stos
jnp
mov
testb
gs
cmp
std
nop
or
jecxz
or
je
jg
sbb
insl
cli
ss
mov
adc
fcmovb
aas
inc
addr16
push
sub
decb
repnz
cmp
sub
xor
int3
sub
jmp
aad
cmp
test
call
jp
rcrl
pop
cs
and
sub
adc
adc
cmpsl
dec
push
xchg
es
cld
daa
pusha
leave
push
fdiv
mov
and
jecxz
adc
lahf
mov
fidivrl
stos
fildl
ret
insl
mov
sar
lahf
xchg
ss
aad
lcall
mov
aad
fwait
pop
mov
jns
lods
je
xchg
testl
jmp
or
and
into
and
popf
sar
lahf
sbb
sub
divl
xor
movsl
add
lods
out
dec
aad
cmp
dec
adc
push
dec
popf
or
dec
sub
movsb
jae
push
push
xchg
mov
add
int
int
push
aas
arpl
mov
mov
lds
xchg
push
repnz
dec
scas
push
cs
jmp
pop
pop
loope
cmp
sbb
test
bound
iret
int3
mov
inc
call
test
push
js
fisubrs
xor
pop
mov
adc
inc
insl
and
iret
cmp
dec
xor
scas
mov
mov
mov
fcomi
sub
dec
xor
xchg
pop
jo
sbb
or
pop
and
mov
xchg
loop
lcall
in
movsb
ja
jg
das
dec
and
inc
xor
aas
leave
mov
jl
cli
in
sbb
jecxz
in
mov
cld
shl
scas
mov
es
das
xor
mov
addb
dec
cmp
dec
jno
jo
icebp
imul
dec
negl
xbegin
ja
ror
repz
andb
add
stos
stc
into
jnp
rolb
sub
fwait
lret
dec
lret
push
scas
idivl
add
bswap
mov
icebp
jg
dec
inc
imul
add
sub
dec
repz
and
mov
stos
outsb
daa
push
fidivs
and
mov
ficomps
xchg
and
idivl
push
add
test
pusha
add
leave
shl
inc
sub
rolb
sahf
mov
cmp
xchg
out
int
aad
data16
clc
test
jo
cmp
jge
xor
dec
sbbb
fs
fadd
iret
daa
in
adc
lods
pop
dec
mov
push
das
pop
xor
daa
out
push
pusha
filds
not
test
stos
pushf
mov
std
sub
mov
xor
push
gs
push
jl
into
int
xor
xchg
add
push
cli
jmp
pop
pop
or
pop
mov
ljmp
test
rorb
inc
mov
into
ret
jle
fistl
imul
int3
orb
and
enter
cmp
or
add
add
sbb
cmpl
pop
test
lcall
inc
pushf
inc
lcall
aam
fisttpl
jmp
mov
cwtl
push
sbb
test
and
aad
push
popa
rolb
cwtd
bound
pop
mov
push
inc
lock
mov
lods
pop
pusha
leave
lea
out
bound
cmp
add
xchg
xchg
sub
lret
adc
xchg
aas
ret
daa
sti
xchg
or
in
popa
sbb
ltr
scas
cmp
pop
inc
in
pop
push
jg
sbb
mov
jne
and
cmp
cld
mov
jmp
sarb
jge
int3
sub
add
bound
pop
sub
stos
or
outsl
push
cmpsl
mov
mov
xchg
mov
aaa
ss
pusha
xor
test
fstpt
sub
push
and
call
daa
faddl
mov
out
mov
xor
lock
popa
stos
div
xchg
xchg
addr16
adc
sar
cmp
aad
movsl
popa
inc
icebp
jge
aad
lcall
pushf
jge
sub
ljmp
push
das
mov
jp
mov
ret
lods
xchg
push
fldcw
rcr
test
scas
mov
lea
fcmovbe
enter
mov
into
dec
out
in
sti
pop
jecxz
aas
sub
push
jle
dec
xor
pop
stos
stos
popa
add
mov
out
xor
pop
fiaddl
cli
in
mov
jns
popf
xchg
dec
loopne
push
jecxz
add
xchg
xchg
push
imul
mov
imul
mov
cmp
outsl
out
in
xchg
jecxz
mov
and
sbb
and
out
mov
push
in
inc
ljmp
std
pop
push
jp
push
mov
add
cmc
mov
outsl
push
push
orl
mov
cmp
int
jns
mov
xor
insb
dec
div
call
imull
sub
sub
icebp
lock
repnz
dec
lret
pop
sbb
mov
add
mov
fs
nop
popf
subb
push
mov
aas
lcall
fdivs
push
inc
pushf
enter
dec
push
pop
xchg
outsb
push
jae
daa
jl
lret
pop
cmp
inc
pop
fisubl
pop
xchg
outsb
inc
das
shll
jge
inc
lret
clc
xchg
xor
mov
fiadds
sbb
je
dec
movsb
push
lock
jge
cmpsl
call
mov
xlat
mov
arpl
xor
subl
ss
addr16
sub
lds
mov
hlt
mov
cmp
cmpsl
lods
ret
dec
inc
std
int3
dec
sbb
fnstsw
mov
push
sub
pop
or
mov
xchg
cmp
lods
mov
and
dec
stos
xor
adc
inc
clc
cmpb
clc
stc
cmp
pop
sbb
mov
inc
je
xor
fsubp
movsl
push
enter
push
xchg
xchg
sbb
sbb
push
sub
js
into
cs
dec
in
inc
and
cmpsb
mov
fs
mov
and
je
pop
cwtl
pop
lret
inc
fwait
pop
add
sbb
js
enter
jge
inc
shrl
dec
jb
inc
addr16
fnstsw
fucomip
jg
ficoms
inc
sub
cmp
cmpsl
out
mov
fnstenv
xchg
fadd
mov
mov
fdivr
gs
push
out
cmpsl
int
jns
cmpl
lahf
mov
cmp
or
cmp
mov
add
inc
xchg
add
mov
cltd
dec
xor
sub
inc
lock
xchg
loope
adc
add
sub
pushf
int3
push
cmp
mov
pop
mov
pushf
sar
mov
push
inc
add
push
out
ss
adc
mov
xchg
pop
lea
xor
arpl
mov
mov
xlat
pushf
repz
push
ja
fdiv
ds
flds
mov
shll
mov
int3
or
lcall
out
fnstenv
stc
push
fldenv
mov
sub
mov
lods
sub
data16
data16
sub
push
and
inc
js
jb
idiv
testl
nop
lds
sahf
mov
jne
aas
cmpl
xor
dec
jmp
shlb
sets
jbe
leave
ss
push
or
push
lock
xor
jo
repz
imul
cmp
mov
dec
pop
mov
dec
in
sub
xor
ret
sub
mov
mov
hlt
sti
and
push
push
scas
enter
adc
sub
mulb
mov
xor
loopne
rcl
arpl
adc
add
jo
shrb
scas
adc
jne
hlt
mov
cwtl
data16
jg
inc
jecxz
fadds
push
pop
and
imul
mov
shll
loop
ljmp
cltd
push
mov
into
in
lret
push
test
inc
mov
lret
sub
subl
jae,pt
or
enter
icebp
gs
jb
inc
lds
inc
loop
push
mov
rorl
pop
in
ljmp
inc
int3
sub
rcr
xchg
imul
loopne
pop
fisubrs
sti
pop
cmp
clc
add
inc
and
and
lea
loop
jb
loope
adc
inc
mov
add
subb
popf
mov
lcall
inc
insl
shll
lcall
into
das
fmul
jne
cmp
int3
adc
aam
popf
cmp
mov
dec
popa
loop
rcll
stos
jno
cmp
and
cmp
adc
jp
pop
sbb
xor
mov
std
fldenv
ja
repnz
test
mov
test
jmp
fcomp
and
dec
imul
outsb
jnp
scas
ds
sbb
mov
adc
or
insl
shlb
dec
mov
pop
iret
cmp
aam
dec
cltd
ds
incl
pusha
cmp
push
mov
cmp
push
fstps
je
add
rcr
movl
sbb
add
and
test
mov
aam
shll
push
xchg
ss
je
fmull
out
dec
aaa
add
insb
fcompl
aaa
mov
mov
fs
and
dec
fcompl
mov
jmp
pusha
mov
mov
push
xchg
mov
in
xlat
repz
mov
push
sub
lock
push
xchg
dec
test
int
mov
sub
pop
imul
xor
push
mov
mov
jnp
imul
sub
inc
imul
and
enter
fisubrs
clc
lret
sbb
lods
das
mov
inc
aam
or
imul
dec
mov
cmp
cmp
hlt
frstor
in
pop
xchg
mov
adc
ljmp
mov
pop
sbbl
and
adcl
cwtl
cli
fimull
sarl
inc
test
push
insb
scas
mov
push
sub
and
mov
insl
gs
enter
cmp
push
ja
inc
jle
lret
mov
add
jae
lret
mov
ss
mov
add
fcmovb
push
jno
xchg
jae
ds
jns
testl
inc
jo
jns
aam
push
std
mov
dec
sbb
mov
mov
push
pop
ljmp
pop
mov
mov
mov
and
or
fsubl
test
je
push
sub
jle
add
repz
push
xchg
jecxz
sti
mov
add
jno
shlb
ljmp
std
pop
xchg
and
int
out
mov
icebp
les
mov
adc
fisubs
or
push
mov
cmp
jge
or
jo
sarb
imul
fs
sub
jl
mov
or
loope
cmp
push
mov
push
sbb
fidivs
into
jl
pop
cld
add
dec
push
push
stc
push
out
loopne
es
popf
sbb
inc
and
lahf
jo
dec
daa
addr16
push
mov
les
insl
cmc
or
sub
mov
fneni(8087
mov
stos
mov
test
arpl
call
jo
xor
or
arpl
jp
mov
iret
movsb
aad
les
cmpl
rcr
mov
sub
add
mov
xor
mov
pop
jae
sbb
shrb
jb
call
movsl
mov
int3
mov
sahf
cmp
add
bound
and
push
aam
sub
ret
dec
or
mov
push
inc
xor
test
fdiv
jno
mov
les
mull
jae
in
mov
ja
inc
aaa
ja
lds
mov
add
mov
in
push
mov
mov
iret
pop
jno
outsb
negb
mov
in
icebp
sti
insl
subl
inc
in
fistl
pop
mov
sti
mov
shr
lds
mulb
sbb
sbb
mov
jb
xchg
add
hlt
jne
insl
xchg
iret
inc
loopne
jmp
roll
or
jne
movsl
shlb
daa
sbb
inc
or
mov
ret
mov
mov
pop
mov
mov
xchg
repz
lret
sub
jl
out
push
lods
and
fucompp
aaa
out
lahf
jns
fnstsw
mov
test
mov
aaa
pop
addr16
push
pop
ljmp
adc
je
adc
mov
clc
jg
repz
xchg
test
add
out
int
cmp
cli
dec
jl
mov
add
das
cmc
push
inc
icebp
adc
dec
jmp
out
mov
and
add
enter
mov
ss
stos
pop
rcr
sbb
sub
fisubrl
ja
jge
repnz
mov
fs
xchg
xchg
dec
pop
mov
icebp
mov
in
mov
xor
xor
and
ljmp
cltd
inc
jge
cli
push
ja
stc
loope
loope
fsubs
in
mov
divl
shlb
fwait
pop
pop
test
jecxz
push
ret
sbb
pop
sar
sbb
stos
fnstcw
or
enter
jge
testb
test
stos
out
push
ja
nop
push
inc
pop
cmp
dec
jl
xchg
fildl
pop
mov
int3
sti
dec
aad
in
xor
cmp
xor
inc
in
mov
xor
sbb
mov
scas
into
insb
add
xor
xchg
adc
hlt
lret
add
outsl
aas
jge
mov
ficoms
mov
push
inc
outsl
pop
add
adc
bound
jl
iret
cmc
cmpsb
sbb
test
add
cmp
or
fists
push
cli
jne
js
pop
inc
pop
push
cmp
push
xor
xchg
mov
add
daa
xor
push
cli
paddusb
jae
outsb
aam
je
notb
repz
jmp
addr16
xlat
add
lea
call
cli
loop
aas
fcomp
push
cmp
xchg
mov
sbb
idivl
decb
mov
push
popf
out
dec
mov
mov
lcall
leave
rcll
shll
into
fs
aaa
pushf
shll
or
pop
xchg
aad
pop
or
pushf
mov
and
pop
xchg
stos
int3
jbe
add
push
movsl
dec
or
loopne
enter
xchg
test
mov
out
xchg
add
js
mov
cmp
bound
leave
pop
or
lods
sub
push
into
sub
in
gs
mov
roll
pop
lahf
inc
adc
and
in
mov
jg
mov
and
xor
bound
ret
cmpsl
rcll
dec
mov
sub
mov
movsl
or
mov
inc
push
jno
pop
xchg
out
cmp
out
adc
out
inc
call
add
aam
pop
pop
pop
jecxz
fwait
imul
mov
cmp
int3
pop
inc
adc
mov
sbb
jg
popf
adcl
nop
sahf
or
out
rclb
fbld
gs
fadds
ja
jle
push
mov
sti
adc
mov
bswap
cmp
dec
xchg
iret
jne
pop
pusha
ljmp
daa
mov
adc
dec
call
mov
out
ret
repz
fwait
adc
xchg
jnp
mov
sub
mov
in
mov
aam
sbb
dec
pusha
push
aas
loopne
lods
pop
fxch
adc
or
mov
rorb
int3
lret
mov
sub
sbb
inc
js
jo
pushf
pop
pushw
test
or
fwait
ss
push
stc
or
jecxz
bswap
stos
cmp
pop
test
repnz
rcrl
int3
pusha
aaa
push
repz
mov
fwait
push
andb
test
call
arpl
add
jg
fldl
mov
in
fldcw
ds
daa
mov
sub
stos
arpl
adcb
xchg
cmp
pushw
sti
mov
mov
cmpl
ret
dec
sub
jmp
stos
iret
jae
xchg
imul
insb
out
push
mov
inc
mov
adc
lock
stc
hlt
aaa
insl
cli
pop
adc
or
jp
outsl
dec
adc
mov
jg
push
mov
arpl
jns
add
int3
push
jge
imul
mov
xor
scas
stc
ja
repnz
mov
dec
pushf
jns
mov
push
adc
or
push
loop
xchg
mov
jae
fs
add
stc
scas
loopne
shlb
jb
jae
outsl
sbb
aaa
hlt
and
lret
cmp
jnp
dec
shll
lret
mov
test
hlt
xor
shll
in
loopne
inc
rcl
ja
movsb
outsl
addr16
push
sbb
mov
stc
mov
mov
sub
inc
sub
fucomip
lds
nop
inc
jno
jns
hlt
jl
or
mov
inc
mov
jnp
aad
inc
push
jb
pushl
pushf
pop
and
stos
push
scas
or
dec
xor
aad
pop
imul
xchg
xchg
pop
scas
iret
es
pop
mov
inc
pop
adc
mov
dec
lock
js
sahf
popf
pusha
ds
xor
es
inc
sub
cli
lods
or
das
and
inc
insb
and
dec
jnp
adcb
ds
aam
or
jecxz
sbb
rol
inc
xchg
mov
and
add
pop
pop
cmpsb
jmp
pop
cmp
add
push
daa
jl
addr16
pop
sub
shrl
cmp
les
test
cwtl
inc
pusha
sub
loopne
repnz
adc
sahf
pop
dec
mov
pop
loopne
sbb
pop
out
sub
outsl
lcall
arpl
pusha
mov
xlat
divb
test
and
scas
mov
mov
xor
cmp
hlt
add
or
adc
push
shrb
repz
nop
je
mov
cmpsl
ds
cld
cmp
cmp
shl
and
in
xchg
push
insb
outsb
outsb
mov
mov
inc
pop
adc
fwait
xor
mov
ljmp
pop
out
pop
lock
icebp
imul
pop
mov
xor
int
and
ds
mov
xlat
shrb
jno
mov
popf
repnz
fdivrl
mov
mov
out
dec
call
shll
sub
fiaddl
popa
xchg
jg
or
push
xor
in
imul
sahf
mov
sahf
aas
xchg
and
aad
cmp
es
jae
pop
push
bound
xlat
adc
xor
fcmove
xchg
les
in
pop
sub
xlat
xchg
out
dec
push
lahf
cmp
dec
addr16
insl
inc
sbb
in
das
cmp
mov
inc
dec
andl
jo
adc
pop
into
and
adc
sub
mov
cmc
inc
push
jbe
js
dec
adc
dec
jo
jl
stos
and
push
push
push
sbb
outsl
shlb
jne
mov
das
or
ret
jecxz
ret
push
jb
pop
shll
sbb
pushf
jp
mov
je
pushf
fcmove
cmp
sub
mov
sbb
lea
call
pushf
jl
mov
jmp
iret
fcmovb
jns
sub
and
shrl
repnz
sbb
lea
cmpsl
fstpt
enter
sub
loopne
pop
out
imul
mov
jns
es
mov
in
lret
cmp
xor
sbb
or
or
pop
push
cltd
mov
lret
jmp
shll
sbb
repz
mov
mov
push
inc
cld
outsl
mov
cs
xchg
dec
loopne
add
jno
sar
jmp
jne
cld
ljmp
pop
add
aaa
and
test
sbb
jl
ret
mov
fstl
mov
push
pop
pop
dec
and
sub
aas
aas
lret
jbe
in
or
xlat
adc
lock
cmp
or
insb
sub
fsts
jl
or
aad
es
pop
mov
adc
outsl
mov
ss
mov
dec
fucom
iret
repnz
addb
jns
stc
insl
adc
push
imul
ja
mov
inc
adc
cmp
push
fiadds
pop
xchg
pop
cmc
cs
mov
and
jnp
cmpsb
dec
cmp
xor
mov
scas
cmp
lcall
lcall
xor
xchg
call
cwtl
mov
lea
mov
loop
pop
xchg
cltd
cmp
cld
sbb
add
les
adc
xchg
cmp
xor
les
lret
jo
lods
and
insb
lods
popf
sub
fldl
mov
push
push
fldt
mov
je
into
xchg
pusha
add
jbe
hlt
and
ret
add
or
dec
xchg
mov
cmp
mov
lods
stos
popf
fsts
push
hlt
inc
dec
cmp
or
cmc
jg
loopne
dec
stos
pop
fiadds
subb
mov
pushf
push
cmpsb
sub
outsb
cmp
mov
aas
pusha
mov
subb
inc
imul
inc
testb
ffree
fisubrs
fildl
test
mov
adc
rcrl
mov
lds
inc
lret
cli
sbb
add
xchg
pop
sub
mov
push
sub
jb
sub
mov
jl
ret
shll
push
xchg
and
lods
insb
or
mov
scas
sbb
push
dec
outsl
inc
jmp
clc
pop
imul
pop
leave
outsb
sbb
mov
mov
faddl
pop
mov
cmp
outsl
rcrl
lods
les
mov
jae
jae
cwtl
and
shll
nop
push
pop
inc
sahf
addr16
mov
cmp
out
addl
fistpl
test
push
mov
imul
xor
pushf
sub
and
arpl
push
dec
nop
xor
jae
stos
repnz
imul
cltd
cmpsl
int3
inc
add
xchg
fcomps
add
push
aaa
jo
sub
and
gs
cld
repz
or
adc
sub
inc
in
mov
adc
rclb
xchg
pop
sar
cmp
jecxz
mov
pop
movsb
push
and
div
mov
adcb
add
lret
int3
les
adc
pushf
dec
hlt
imul
test
or
sub
insl
loopne
mov
imull
popa
rorl
frstor
rorl
sub
cmp
inc
out
jno
imul
clc
cmpsb
mov
stos
cld
mov
jae
orl
sbb
jg
cmpsb
sbb
hlt
test
fstps
mov
dec
push
push
sbb
insb
fadd
mov
movsl
pusha
in
clc
xchg
and
inc
enter
pop
mov
adcb
pop
sub
sbb
and
push
dec
inc
out
inc
add
or
inc
jl
dec
ljmp
mov
outsb
ret
enter
icebp
dec
sysret
icebp
es
movsb
push
push
adc
inc
pusha
std
mov
stos
outsb
fldcw
sbb
push
scas
daa
mov
fidivs
inc
sbb
and
into
xchg
lret
push
test
icebp
or
cwtl
fimuls
pop
cmp
or
jo
lret
add
or
hlt
xchg
int
repnz
cmp
push
or
add
int
fs
lret
jle
and
cltd
adc
in
mov
xor
pop
mov
fs
sub
les
dec
sahf
jbe
and
pop
mov
fcmovnbe
adcb
sbb
mov
nop
push
add
scas
scas
imul
lds
and
inc
sbb
and
test
sub
ja
mov
cmp
dec
cmp
inc
outsb
or
mov
rcr
in
dec
nop
sub
outsb
xorb
ja
jge
es
xor
dec
inc
addr16
mov
cmpsb
nop
xor
pop
jecxz
dec
and
sub
into
icebp
push
jo
cs
sub
add
insb
and
cmp
jecxz
inc
mov
insl
adc
popf
push
dec
dec
inc
in
shlb
lahf
dec
mov
in
mov
clc
fists
lods
mov
outsl
jp
rcll
add
fsubs
nop
mov
cmp
fmulp
es
cmp
les
subl
mov
jbe
add
adc
popf
sub
jl
lcall
jmp
mov
push
fdivrl
jne
adc
stos
clc
cld
mov
push
nop
xor
les
rcll
das
xchg
out
dec
shll
mov
cmp
es
popf
cli
jp
shrl
ret
add
cmp
xchg
mov
ljmp
leave
daa
inc
cmp
jo
adc
inc
fdivr
addr16
pop
out
loope
pop
movb
sub
pop
pop
pop
mov
inc
test
xlat
mov
dec
jnp
mov
insb
add
pop
adc
pop
mov
outsb
lock
jl
mov
daa
negl
or
xchg
xchg
cltd
add
mov
call
or
ds
mov
xor
mov
test
push
lret
mov
fldcw
sti
xor
jmp
add
mov
adc
sub
dec
stos
out
mov
or
out
fmull
cwtl
cmp
in
ss
push
and
ret
push
fmuls
daa
pop
cmp
mov
pop
cmpsl
jp
add
test
les
lret
lcall
sub
or
inc
cwtl
std
hlt
xor
cli
not
bound
mov
jne
out
cmp
scas
adc
cmp
pop
js
lret
int
cld
adc
insl
filds
jle
out
cmpsb
movsb
inc
fsub
cmp
ja
or
xor
fwait
pop
daa
sbbl
mov
xor
dec
jbe
test
das
mov
push
sbb
push
xchg
xor
sbb
sar
jnp
sbb
jbe
stos
and
inc
bound
inc
cmovg
mov
std
pop
jns
clc
ja
jmp
or
jno
pushf
pop
cwtl
mov
mov
or
dec
aam
push
repz
in
lods
xsaves
dec
mov
mov
inc
add
frstor
jnp
aaa
imul
movsl
insb
lock
and
mov
push
aad
int3
mov
mov
cmpl
mov
xchg
mov
inc
cmc
jge
in
lcall
loop
jl
cmc
out
movsb
sub
or
mov
testl
fs
xor
ds
xor
add
nop
loop
jnp
jmp
sub
xchg
mov
mov
std
loope
cmp
xchg
inc
mov
js
cld
xor
sahf
loop
outsl
aaa
inc
sbb
add
pop
push
adc
fs
das
data16
xor
pop
leave
cltd
fs
sahf
push
js
mov
dec
push
loop
cmc
cs
int3
les
rorl
out
pop
test
pop
inc
into
les
dec
mov
xor
enter
dec
loop
cmpsl
push
push
aam
lea
cmp
or
test
and
loope
mov
scas
mov
mov
pop
lods
mov
mov
sbb
popa
sbb
sbb
inc
dec
jnp
xor
mov
xchg
aam
mov
xchg
sub
mov
push
push
pcmpeqb
jne
sub
jge
ds
fdiv
dec
cmp
out
mov
adc
sbb
jle
sbb
in
test
add
pop
lret
sbb
add
cmp
jnp
ja
xchg
inc
inc
and
shlb
scas
mov
leave
mov
fs
lcall
inc
pop
xchg
cmp
add
push
mov
mov
mov
mov
hlt
mov
mov
sbb
bound
divl
and
orb
ret
and
sbb
or
pop
psrlq
sbb
cmp
inc
into
enter
iret
test
stc
mov
jb
mov
cltd
and
xor
jp
nop
sbb
add
cwtl
movsb
jbe
xor
movsb
sub
push
sahf
mov
xchg
arpl
decl
popa
xchg
pop
xor
and
push
lds
addr16
hlt
jo
fabs
faddl
adc
jmp
scas
xchg
push
ja
add
xchg
fstl
jge
mov
cmp
mov
call
xor
shl
scas
movb
push
mov
lcall
cli
xor
addl
cmp
mov
scas
jbe
ds
cmpsl
sar
inc
add
and
daa
mov
fidivl
mov
aam
ret
divl
dec
sub
dec
inc
movsb
dec
and
mov
enter
out
mulb
jge
rcrl
lds
out
jne
mov
aam
jmp
pop
hlt
out
je
jg
enter
pushf
pop
int
cwtl
sub
dec
mov
sbb
fwait
loope
xor
mov
sub
pop
loop
pop
pusha
dec
sti
mov
mov
popf
sbb
int3
fidivl
int
roll
adc
loop
jns
dec
ret
jnp
push
or
out
xchg
daa
and
mov
dec
push
mov
mov
mov
negl
mov
mov
pop
add
mov
xchg
dec
mov
ja
mov
adc
inc
xor
mov
js
stos
dec
xchg
push
mov
ja
cmpsl
adc
mov
insl
js
dec
xchg
pop
jno
and
es
cmpsb
sbb
subl
inc
in
notb
mov
daa
lcall
cli
cld
and
lods
xchg
js
popa
mov
mov
mov
dec
cli
mov
xchg
xchg
movsb
push
ljmp
push
cmc
pop
jge
jmp
gs
push
pop
ja
aas
cmp
mov
and
sti
jne
pop
js
xchg
pop
sbb
or
fwait
xchg
sbb
xchg
jg
xor
mov
inc
sbb
cmp
cltd
addr16
adc
dec
shl
mov
xor
sub
inc
stc
xchg
xlat
jp
cmp
push
call
lret
imul
je
push
dec
jg
aad
mov
lret
sahf
fsubrl
cmp
lock
clc
push
popf
jae
sub
xorb
inc
gs
decb
pop
push
arpl
push
loopne
gs
fisubrs
inc
jno
test
or
out
mov
sub
out
mov
mov
xchg
inc
push
stc
fisttpll
aad
aam
push
aas
xor
mov
mov
jae
insl
sub
xchg
and
lds
mov
lcall
sbbb
cmp
and
push
shrb
xorb
and
cmp
les
push
xchg
mov
push
push
out
pop
xor
clc
mov
fcomps
push
sti
mov
push
mov
jbe
xor
aam
ja
rol
or
pop
xchg
xor
push
lret
cmpsb
sub
es
stos
out
mov
jle
pop
and
or
jne
push
sbb
aad
mov
test
int3
fsubrl
shr
test
pop
xchg
or
add
loop
xchg
jns
adc
cld
adc
jp
mov
iret
mov
mov
xorb
daa
add
cltd
xchg
fwait
xor
fsubrl
lret
add
jmp
push
inc
mov
faddl
dec
pushf
xchg
adc
movsb
pop
test
in
cltd
xor
or
push
xor
mov
sub
pusha
jnp
push
xchg
cmpsl
or
imul
insl
mov
mov
push
stos
sub
out
aad
push
aad
roll
fcomp
pop
inc
pop
cmpsb
das
jbe
andl
push
jbe
dec
sti
xchg
lds
add
int
sbb
aad
inc
jne
pop
cld
sti
pop
mov
push
mov
xor
adc
xchg
dec
push
sti
cmpb
push
jne
std
push
sbb
popf
lahf
xor
sti
test
mov
aas
test
test
jb
imul
dec
sub
mov
adc
inc
mov
ret
in
fs
fisubrl
arpl
push
cmp
cmp
movsb
daa
jbe
pop
mov
out
loopne
push
shll
xor
sbb
divb
cmp
jnp
dec
outsl
pop
cli
jmp
lock
mov
inc
mov
xchg
lds
sub
push
cli
test
cmp
dec
lock
loopne
and
fcoml
movsb
out
aam
dec
push
jg
outsb
push
xchg
jl
je,pn
mov
data16
cmc
data16
mov
mov
imul
sarb
out
lret
aas
xor
xlat
mov
rclb
jno
sub
stos
mov
es
aas
pop
in
push
les
pop
js
xor
loopne
xchg
test
or
cmpsb
in
inc
jg
jecxz
int3
pushf
testb
filds
and
cmp
mov
add
jno
mov
xchg
jp
pushf
and
aaa
and
jns
arpl
jmp
jle
xchg
mov
pushf
stc
lcall
push
push
inc
stc
cwtl
je
cmp
pushw
es
in
scas
pop
cs
lods
jno
out
mov
add
xchg
fdivl
jp
testl
push
add
adc
test
loop
mov
push
xor
hlt
das
adc
idivb
jge
mov
cwtl
jmp
gs
movsb
ljmp
mov
push
xor
push
stos
loop,pn
call
mov
outsl
jo
or
pop
adc
sub
sbbb
in
ss
jns
call
out
les
mov
jnp
loopne
or
mov
data16
push
dec
hlt
jne
mov
pop
sbb
xchg
lods
inc
pop
repnz
shll
popa
insl
push
sarl
pop
scas
adc
add
dec
cmp
shll
cmp
mov
sub
inc
add
fadd
ljmp
mov
loope
xchg
imul
push
xchg
adc
ss
in
dec
xchg
inc
add
jecxz
in
adc
push
cwtl
push
arpl
xor
cmpsl
out
mov
inc
je
mov
jp
fisubs
rep
or
mov
mov
fwait
sbb
pop
xchg
out
frstpm(287
cwtl
xchg
aam
enter
stos
in
mov
xlat
sti
xchg
adc
jno
or
xchg
pusha
xchg
jns
adc
inc
sbb
repnz
test
clc
in
sub
imul
lods
out
add
or
cmp
or
jp
inc
not
rcrb
ss
push
dec
cmp
ret
jb
sub
add
push
pop
cs
jno
mov
imul
sub
aas
and
popf
mov
lret
bound
mov
in
clc
stos
mov
xchg
xchg
adc
add
nop
add
test
sbb
dec
cmp
pop
or
lock
push
add
inc
xor
push
mov
ficomps
pop
mov
mov
and
mov
cmp
jne
mov
jp
push
fcmovnbe
pop
push
xor
in
and
or
xor
stc
push
into
ja
jae
and
and
shrl
inc
test
mov
push
pop
cmpsl
cmp
inc
bound
add
cmp
shrl
add
and
stc
mov
xor
gs
lahf
mov
test
ret
pusha
rolb
gs
push
nop
insl
pop
push
icebp
jb
test
outsl
push
orb
jecxz
add
dec
leave
sub
push
es
jae
adc
dec
daa
pop
call
icebp
lea
xor
ja
xchg
adc
cmp
mov
jae
push
sahf
rorb
insl
dec
out
gs
xor
cltd
fstp
and
pop
orb
aam
cmp
xor
call
cmpsb
mov
iret
call
sbb
xchg
fcmovnu
xchg
rclb
iret
jns
mov
loopne
xchg
rcrb
push
imull
and
jmp
loop
mov
mov
cltd
mov
dec
in
fdivp
mov
dec
adc
fstps
push
ret
repnz
or
imul
in
cmpsb
fbld
out
addr16
imul
cmp
sbb
iret
call
rol
or
pop
inc
mov
and
jg
fwait
cmp
mov
inc
cmc
mov
cmp
adc
adc
repnz
js
mov
push
int
rsqrtps
sub
inc
push
dec
lret
iret
mov
mov
out
repz
sbb
ljmp
xchg
and
in
ret
shll
mov
jnp
iret
mov
subl
fwait
aas
inc
pop
sbb
sahf
adc
outsb
outsb
cwtl
aam
aam
iret
movsl
xor
jnp
mov
insl
fiadds
pushf
lcall
aas
mov
adc
aas
xor
mov
sti
imull
mov
xor
or
ret
jae
or
jbe
negb
repnz
push
arpl
sub
int
sbb
inc
cmp
sbb
lret
daa
ror
mov
out
mov
in
dec
mov
mov
mov
xor
dec
mov
jl
hlt
jo
cmc
fs
sbb
sbb
mov
loope
call
sub
gs
and
add
add
aad
adc
lock
mov
inc
sbb
imul
mov
gs
push
push
lcall
add
in
jmp
cmp
aaa
lods
jbe
xorb
jle
dec
mov
loop
ja
adc
lock
mov
add
jns
inc
jmp
jb
test
add
adc
fnstsw
push
or
or
mov
sub
sti
dec
mov
imull
out
mov
xchg
dec
mov
xchg
inc
mov
xor
call
aaa
jns
push
or
lcall
xchg
cltd
mov
lods
adcl
pop
xor
test
cmp
add
jg
inc
xchg
je
mov
cmp
lret
pop
pop
mov
jo
xor
in
xor
push
inc
add
dec
mov
fsubrl
scas
inc
inc
test
orb
push
xorl
add
ret
test
shll
jbe
push
je
push
out
adc
test
lods
mov
testb
fcmovb
pushl
push
inc
aad
add
fwait
lea
cltd
inc
dec
repz
xor
lahf
movsl
mov
push
cmpsb
jmp
js
jbe
push
fcmove
xchg
mov
mov
negb
xor
push
push
add
cmpsl
jle
in
out
std
xchg
dec
sub
dec
xchg
int
fwait
inc
cmp
push
out
out
scas
mov
xor
mov
pop
ds
mov
iret
es
xchg
mov
andl
push
insl
sbbb
ficoms
mov
lea
cmp
lret
les
fs
add
jmp
xchg
and
xor
les
sbb
testb
aam
jo
inc
and
jno
sub
fmull
inc
push
xor
notb
idivl
pushf
push
pushf
mov
mov
movlps
dec
and
clc
out
es
mov
add
lds
add
mov
int3
jns
dec
idivl
scas
outsb
add
cli
jp
cli
xor
mov
lret
lods
dec
enter
xor
pop
push
xchg
bound
xor
dec
je
fistpl
test
inc
dec
int
fcmovnb
or
fcmove
stc
sbb
cmc
fisubrl
into
pop
xchg
xor
out
and
inc
sbbb
mov
mov
loope
into
xor
mov
imul
mov
ret
push
or
dec
fsubr
or
icebp
sbb
and
shl
dec
xor
push
imul
mov
jbe
hlt
sub
sub
test
mov
inc
adc
jecxz
pop
popf
test
call
shr
lods
je
int3
xor
repnz
aam
cmpsb
jae
or
cmp
adc
rorl
loop
fldcw
jae
sub
adc
dec
into
cmp
gs
ja
in
stos
imul
cmp
dec
fwait
repnz
dec
xor
fsubrs
jmp
mov
es
fwait
sbb
cld
mov
stos
jae
or
das
lret
add
lods
lods
mov
shl
out
les
repnz
into
mov
sub
mov
push
and
lea
jo
out
inc
sbb
xor
popf
clc
repz
push
cmp
dec
xor
jbe
inc
inc
jmp
shr
and
mov
pop
dec
pop
popa
sub
movswl
shll
iret
mov
stc
pop
sbb
cmpsl
push
lds
fs
cmp
ds
fmul
lea
jae
xor
test
mov
outsb
stos
cltd
sbbb
sti
or
mov
and
mov
mov
adc
mov
lcall
shl
leave
adc
adc
inc
into
and
mov
sub
xchg
andb
dec
cmp
lahf
enter
jge
out
lret
cld
ret
inc
ja
push
loopne
and
mov
or
bound
jmp
xor
ss
call
and
stos
xorb
pop
sub
outsl
es
cltd
imul
idivl
xchg
push
add
cmp
scas
push
mov
xor
mov
lahf
cmp
ffree
loope
sbbl
bound
loopne
cmp
adc
jb
pop
lock
or
loopne
xorb
fwait
dec
mov
push
fsubrs
cld
lahf
insl
mov
dec
lock
mov
cmp
and
jmp
inc
loop
mov
sbb
lea
inc
rcrb
jl
or
push
xchg
lods
jp
sarl
add
ss
into
sahf
push
or
or
pop
pop
push
ljmp
xlat
fdivrs
and
insb
sti
and
mov
iret
mov
sti
icebp
cmp
int3
fimull
fwait
ret
xor
fs
mov
dec
mov
fwait
ror
int3
cwtl
cmp
inc
pop
add
fistl
xor
and
enter
jbe
jae
cmpsl
cld
ds
shlb
jle
push
out
mov
lods
imul
iret
cmp
test
mov
dec
mov
xchg
ljmp
out
dec
sbbb
add
mov
fucomi
sarl
cwtl
pop
cmpsb
xor
fstps
jle
enter
xchg
xor
mov
ds
mov
xlat
fmul
jle
add
cwtl
cmc
dec
ret
js
mov
repz
out
mov
xor
stc
psubd
sub
leave
or
mov
lret
push
mov
and
ljmp
dec
xchg
add
cmpsb
inc
out
mov
pop
cmc
arpl
cwtl
scas
cmp
mov
and
mov
jecxz
sbb
sti
push
cmp
xor
push
divb
mov
leave
gs
push
or
sub
lea
push
cmpsl
and
in
cltd
inc
pop
or
addr16
shlb
add
movsl
push
inc
or
loopne
loopne
push
dec
add
jg
jns
sti
movsb
pushf
sbb
dec
cmp
mov
outsb
jnp
or
aad
dec
lds
or
incl
push
jnp
pushf
lea
insb
subb
cmpsb
shrl
outsb
jo
jmp
int3
jge
xchg
dec
jae
mov
stos
call
push
xchg
scas
fcmovnb
outsl
add
cmc
push
mov
xchg
pop
inc
inc
mov
dec
cli
xlat
nop
xor
cmp
sbb
mov
enter
push
adc
rcrb
mov
into
pcmpeqw
cli
ja
bound
lods
jp
sbb
rorb
inc
or
sbb
insb
rcrb
lcall
mov
pop
mov
xchg
popa
mov
repz
inc
xchg
in
or
jnp,pn
lret
sbb
inc
out
add
inc
mov
mov
dec
mov
sbb
std
jb
jae
cli
addr16
mov
ss
flds
push
mov
and
add
mov
mov
test
cmp
movsl
add
jne
out
leave
lea
xchg
out
je
mov
fldl
add
and
mov
adc
pop
cmpsb
shll
mov
or
pushf
jge
and
mov
lret
jge
xchg
in
sbb
add
lahf
adc
dec
xchg
cmp
mov
cmp
sub
pop
out
mov
popf
mov
mov
and
fwait
add
cmp
das
rcr
in
pusha
sub
loopne
or
sbb
sbb
push
fimuls
xor
xchg
out
fistps
icebp
add
lea
and
mov
push
xor
dec
fwait
jae
push
xor
push
dec
adc
addr16
sbb
xchg
inc
inc
enter
xor
dec
loop
jp
movsl
dec
jl
fwait
mov
repz
jns
xchg
or
mov
shl
adc
aam
out
in
push
sahf
insl
mov
or
cmp
sbbl
fistps
jl
leave
ret
sbb
mov
mov
andl
fisubrs
cs
enter
jmp
lds
push
shlb
lods
mov
roll
in
notb
add
int
push
out
fidivrl
fcoml
ror
fs
ljmp
scas
lret
xchg
std
cld
daa
rol
add
cmp
sbb
fadds
jmp
lock
mov
mov
sub
nop
mov
iret
jo
lret
lds
cmp
mov
shl
test
push
aaa
shrb
cmp
mov
dec
xchg
adc
repnz
xor
cmc
movsl
sub
add
jg
js
aas
xor
mov
mov
in
mov
dec
andb
mov
rcrl
add
test
or
js
xor
jmp
out
adc
movsl
sub
pop
inc
arpl
data16
mov
out
jae
xchg
mov
out
movsb
roll
faddp
xchg
xor
cmp
sbb
xchg
lock
push
loopne
int
loope
mov
dec
clc
cltd
xchg
mov
jmp
ja
and
es
mov
mov
push
jmp
xor
cmp
fistps
sbb
movsb
xchg
in
sub
out
jg
or
shll
inc
dec
add
cli
xchg
mov
lods
inc
ficoml
out
mov
xor
jae
add
cmp
aas
jmp
inc
sbb
inc
es
pop
cmp
decl
sub
cmp
lret
out
into
mov
xchg
xchg
sbb
cmp
into
jo
inc
iret
jp
cmp
sti
jle
mov
insb
rol
stos
jp
imul
xchg
mov
decb
loopne
fs
xchg
xchg
cltd
testl
fidivrl
shl
scas
shrb
aas
lcall
sarl
rcrl
dec
fstpl
cmp
aad
ss
push
into
mov
inc
les
mov
cmp
lcall
std
std
in
outsl
mov
pop
frndint
and
jmp
jnp
addr16
mov
fstp
sar
sub
xor
jecxz
fisttps
cli
pop
mov
xchg
aaa
and
mov
jnp
add
loop
inc
mov
inc
mov
xchg
icebp
outsb
push
aas
aaa
adc
pop
cmpsl
clc
pop
mov
sbb
add
outsl
sbb
xor
inc
loopne
mov
out
std
sub
push
test
xor
into
pop
or
icebp
out
loopne
sahf
fstpl
popa
dec
inc
sub
into
pop
mov
sbb
aad
mov
cmp
jns
leave
sahf
fs
sbb
sti
add
les
mov
inc
mov
sbb
jp
push
ja
push
outsb
inc
fsubrp
inc
jmp
pop
xchg
jae
sbb
pop
lret
repz
je
cli
das
pop
cwtl
xchg
es
or
enter
adc
loope
pop
push
jge
ss
daa
int3
cmp
xor
outsl
mov
cmp
inc
mov
mov
daa
mov
mov
mov
popa
sub
stc
inc
inc
aas
pushf
iret
xchg
test
jb
cmpsb
addr16
or
sub
cmp
data16
or
dec
inc
lcall
sbb
call
jo
popa
push
aaa
pop
add
mov
test
scas
pop
jecxz
test
nop
pop
jl
adc
mov
cltd
das
jmp
jecxz
negb
jo
pusha
repz
ss
cmc
rorb
pop
add
xor
mov
ficoms
lret
jno
loopne
mov
in
shrl
cmc
jo
mov
pop
jns
jbe
pop
xor
sbb
aas
sbb
sub
hlt
call
push
outsl
clc
mov
cli
cld
jge
push
bound
cld
dec
push
rorb
lret
jp
fnsave
pop
inc
and
and
lock
iret
inc
sti
or
cli
dec
mov
in
xor
push
adc
mov
fbld
add
dec
lds
js
dec
or
push
arpl
aad
mov
add
sahf
in
pushf
push
adc
jle
ja
lret
rolb
sub
sti
inc
test
ficoml
popa
nop
int3
pusha
and
sub
jae
xor
iret
sub
sbb
pushf
pop
sahf
insb
inc
sub
or
test
fcomi
push
in
jnp
std
in
mov
mov
int
jecxz
lock
and
lret
pop
scas
sub
or
stos
inc
jbe
xor
fwait
mov
xor
je
push
nop
int3
cld
mov
inc
loopne
cwtl
sbbl
fcoms
lock
imul
ror
mov
jecxz
adc
fwait
cmpsb
xchg
add
into
jnp
push
push
pop
outsl
sub
pop
and
jg
out
jmp
inc
outsb
test
xchg
sti
out
pop
js
mov
sbb
mov
jbe
aam
sbb
fnstcw
pop
imul
fsubrl
fsubp
imul
mov
mov
adc
in
shlb
mov
jno
mov
inc
and
faddl
movsb
imul
adc
mov
xor
xor
shrb
out
add
jno
mov
mov
in
xor
test
jns
jae
pop
sbb
imul
jg
out
adc
push
or
push
cli
jb
dec
les
imul
sub
adc
out
in
jle
pop
push
xchg
sti
xor
or
xchg
test
cmp
clc
shll
add
add
sbb
dec
xor
fists
cmovg
mov
into
cld
rorl
sub
sahf
mov
jle
push
xchg
adc
push
cltd
push
inc
mov
lret
repz
out
rorl
dec
push
pop
insb
jge
push
add
loope
cmp
inc
dec
subb
push
sub
mov
dec
mov
and
lds
mov
repz
xchg
int
mov
mov
mov
das
fisttpll
mov
icebp
push
add
pop
adc
push
push
enter
add
pop
shr
mov
jo
imul
addr16
jl
push
or
jno
iret
loopne
jae
stc
sbbb
scas
cmpsl
shlb
adc
adc
mov
jecxz
out
fadds
inc
lret
lret
sbb
push
and
std
cmpsl
or
cmp
dec
loop
and
notb
jno
shlb
inc
scas
or
lcall
mov
add
jne
stc
mov
mov
loope
adc
sbb
paddw
jmp
ss
aad
jp
adc
ja
ret
test
faddl
push
fbld
out
int
mov
mov
sti
push
scas
pop
inc
in
repnz
jp
std
stc
sub
dec
inc
pop
sbb
cmp
pop
fdivp
sbb
ss
lahf
mov
fisttpl
divb
insl
ret
repz
repz
sahf
or
mov
cmp
nop
pop
jp
fwait
dec
xchg
test
mov
sub
mov
outsl
test
lahf
ret
cmp
fisttpl
repnz
rcrb
jecxz
dec
sub
xor
insl
cmp
jmp
xchg
cmc
xchg
xor
shrl
fisttpll
sti
dec
aam
ljmp
aas
mov
jp
icebp
lods
add
pop
test
ja
loopne
adc
sbb
test
push
rorl
jno
daa
xchg
jmp
mov
testl
shlb
add
testb
scas
pop
mov
sbb
popa
jl
imul
test
inc
cli
sub
adc
jae
sub
cmpsb
mov
fs
jg
out
push
ret
dec
add
inc
fmuls
lcall
sbb
jl,pn
mov
iret
fsub
push
das
in
cmp
cmp
rcrb
cmpb
push
sbb
xchg
or
pusha
sub
movsl
test
mov
in
test
mov
cmp
add
shlb
es
sahf
jno
mov
xchg
orb
leave
js
and
loopne
adc
pop
mov
lret
imul
rcrb
and
inc
sub
jnp
adc
test
int3
or
mov
or
cmp
jecxz
ljmp
loopne
orl
mov
loopne
xor
mov
lret
cwtl
inc
pop
loop
dec
cmp
mov
and
lods
inc
into
or
imul
cs
mov
mov
scas
aas
inc
loop
ror
or
and
and
mov
pop
adc
xchg
fdivs
stos
lds
mov
inc
cs
lds
pusha
pop
inc
push
loope
ficompl
xchg
add
mov
jmp
cltd
filds
imul
jne
inc
out
imul
cmp
sub
push
test
int
incl
es
or
fs
or
test
or
cmp
sbb
mov
xchg
pop
mov
pop
push
and
cmp
mov
add
sbb
stc
ret
xor
aas
mov
or
fwait
xor
inc
jb
sbb
into
nop
sbb
xor
rcl
aam
popf
ja
push
aas
addr16
push
mov
sti
inc
pushf
out
push
ret
xor
leave
mov
mov
xor
inc
cmp
scas
lods
jbe
pop
fdivl
sub
gs
lods
jg
jns
jl
clc
xchg
mov
xor
mov
jg
icebp
leave
dec
mov
pop
popf
mov
fdivr
mov
out
out
mov
mov
mov
inc
cli
mov
sbb
pop
outsb
lods
stc
imul
loope
popa
jge
loope
ja
and
dec
cld
ss
push
dec
sahf
lock
inc
outsl
sub
dec
or
daa
arpl
fidivrl
xchg
in
push
xchg
jb
popf
loope
xor
in
sahf
rcll
loopne
dec
mov
xor
jb
push
add
xchg
pop
jge
decb
inc
add
rclb
xchg
mov
stc
xor
sti
push
lods
ljmp
addr16
stos
adc
stos
sbb
jo
push
inc
adc
int
shrb
popa
sub
mov
ds
test
sti
xchg
cmpsl
mov
das
aaa
daa
add
cld
cwtl
pop
hlt
sbb
and
pushf
mov
movl
ss
shrb
loope
mov
add
iret
push
jae
das
movsb
pop
fcom
test
iret
or
or
xchg
inc
adc
mov
aad
adc
add
int
push
xchg
shr
or
push
dec
sub
pop
mov
icebp
push
push
pop
sub
xchg
outsl
cmpsl
enter
mov
out
adc
dec
bound
sub
xchg
aad
cmp
fistpl
inc
dec
ljmp
mov
iret
jecxz
outsb
jecxz
or
mov
or
mov
ja,pt
or
test
mov
rolb
cwtl
fisttpl
mov
loop
and
ret
jbe
les
mov
xchg
sti
pop
sub
in
mov
cmpsb
push
push
sub
and
pop
cmp
popa
divb
mulb
out
push
jae
sbb
adc
or
sbb
iret
out
inc
imul
or
pop
sub
es
pop
fistpll
gs
or
add
lret
es
in
sub
orb
jmp
mov
fsubl
cld
ret
jns
ret
test
dec
mov
cmpsb
js
sbb
push
mov
sbb
push
popf
sbb
adc
pop
mov
xor
test
mov
ret
outsb
out
and
ds
rcl
push
in
push
imul
mov
push
outsl
sub
sbb
bound
arpl
add
or
sbb
jg
adc
ljmp
mov
loope
test
xchg
mov
mov
loopne
pop
xchg
pushf
jp
xchg
mov
cli
roll
dec
sub
in
xor
sbb
test
xor
nop
mov
dec
out
jb
inc
scas
xlat
addr16
std
adc
in
cmpsb
dec
xor
sub
pop
addl
mov
fimuls
pusha
and
pop
icebp
sti
adc
mov
dec
stc
xchg
cmp
dec
dec
cmp
push
fidivrs
addl
mov
mov
add
inc
lret
in
nop
stos
dec
loop
idivl
lods
fisubs
or
mov
push
adcb
mov
mov
mov
dec
int
cmpsl
std
mov
pop
add
test
inc
adc
jp
imul
mov
mov
aam
sbb
ret
shrl
dec
insb
addr16
push
inc
mov
inc
pop
xlat
mov
in
jg
stos
push
jecxz
cld
sub
mov
and
gs
setb
cmc
inc
test
inc
xchg
dec
push
stc
xor
or
ffree
dec
daa
dec
lahf
hlt
test
addl
and
nop
mov
push
pop
sub
out
addr16
clc
xchg
push
aam
fiaddl
pop
arpl
adc
or
pop
pusha
pop
sahf
leave
insl
cmp
jae
insb
pop
add
mov
cmp
jae
imul
out
iret
insl
mov
outsb
call
sbb
push
fnstsw
stos
xlat
inc
in
pop
cs
jl
stc
mov
and
cltd
jno
inc
andb
paddq
ret
ljmp
rcll
jp
or
adc
lods
and
arpl
inc
das
or
js
aam
cli
jge
jbe
or
sbb
mov
sbb
pop
inc
sahf
adc
dec
xchg
sbb
test
mov
and
and
jl
loope
sub
pop
sbb
insl
or
mov
push
jb
xor
insl
es
mov
hlt
ret
dec
xchg
inc
adc
xchg
imul
xor
push
xor
dec
or
lret
sub
in
addr16
cmp
jne
jle
in
push
jecxz
mov
mull
mov
jge
movsb
shl
pop
inc
mov
xor
jle
hlt
out
cmpsl
or
xchg
add
jge
std
rcrl
ja
call
jecxz
enter
inc
dec
add
lea
adcb
add
mov
cmc
xlat
mov
mov
test
enter
inc
pop
rolb
ss
jg
mov
jmp
fs
movsb
mov
cmp
add
sbb
sarl
fs
mov
fisubrs
pop
push
xchg
mov
movsb
std
cmpsb
mov
shrl
dec
gs
mov
dec
push
aam
inc
mov
jle
fsubs
lret
insb
cmp
lea
inc
fsubs
mov
bound
cltd
int
pop
in
pop
sahf
faddl
and
rcrb
hlt
test
add
imulb
jno
sub
or
or
test
adc
imul
stos
xchg
pop
lock
pop
aad
stc
adc
xor
pop
push
jecxz
push
and
sarb
sbb
sub
iret
mov
cmpsl
adc
mov
dec
sub
pop
loopne
and
lods
xlat
pop
inc
pop
pop
in
dec
das
test
and
or
int
mov
pop
xor
add
add
nop
in
jl
mov
idivl
add
fdivr
inc
or
jns
in
fucom
xor
int
fxch
daa
cwtd
mov
vmread
bound
inc
repnz
or
xorb
pop
dec
inc
cmpsl
inc
or
loopne
xor
enter
mov
sub
cmp
add
jno
enter
jnp
imul
lods
sub
decb
out
icebp
and
loop
dec
add
sbb
adc
jmp
outsl
and
xor
scas
and
jl
aaa
lretw
ljmp
pop
sub
test
fisttpll
mov
xor
xchg
pop
or
out
mov
sbb
js
test
imul
jp
sbb
xchg
lock
mov
push
mov
mov
es
insl
ljmp
outsl
in
xor
inc
xchg
jo
mov
fsubrs
cmpsb
xlat
imull
mov
in
mov
adc
adc
push
sub
jno
rcrb
cmp
mov
cs
aad
shrl
ds
aas
ret
dec
arpl
insb
add
and
inc
lods
push
pusha
mov
cmpsl
std
mov
fsubs
movsl
or
xor
pop
imul
dec
int3
std
fsubr
or
stc
pop
icebp
mov
mov
jp
clc
dec
clc
pop
lea
jg
insl
stos
outsb
push
inc
jnp,pt
fistpll
sbb
inc
inc
sahf
adcb
lahf
mov
sub
in
inc
push
or
idivl
lahf
mov
je
enter
movsb
mov
xchg
mov
push
data16
sbb
jge
sub
mov
mov
pop
add
add
jle
cmp
repz
mov
mov
xchg
push
negl
fwait
xor
xor
add
fcmovne
xor
cli
mov
mov
add
out
insl
decb
ljmp
repnz
add
or
mov
idivl
and
int
stc
mov
jns
fcomps
hlt
pop
cmp
std
mov
inc
popa
mov
dec
mov
sar
and
imul
movsb
push
imul
adc
pop
icebp
sti
mov
hlt
xchg
mov
lea
adc
xor
call
jmp
jns
or
out
xlat
and
mov
repnz
sbb
xchg
enter
mov
push
ljmp
add
sub
gs
sbb
ret
ljmp
jmp
push
and
ds
lret
jle
les
xor
push
enter
scas
mov
sar
push
mov
pop
stos
cmp
mov
popa
inc
test
push
jmp
xor
call
push
xchg
pushf
test
dec
add
iret
xor
push
jns
ret
jns
mov
lcall
jb
xchg
mov
mov
sbb
mov
dec
out
aam
or
adc
mov
inc
pop
test
dec
xlat
and
adc
leave
jmp
int3
mov
mov
adc
int3
test
fucomp
push
stc
adc
call
aam
sbb
nop
cmp
mov
js
aaa
in
ficoml
cmpsl
clc
add
add
inc
push
mov
into
fucom
mov
ss
mov
xor
imul
sub
shrb
div
xchg
xor
mov
fistpl
aas
xchg
add
out
push
fwait
xchg
ret
mov
and
in
mov
jge
adc
std
mov
mov
rolb
xchg
jno
inc
mov
push
xor
pop
stos
jp
mov
add
clc
sbb
mov
cmpsl
xor
negl
sbb
xchg
mov
js
and
fadd
icebp
inc
pop
mov
xor
pop
and
test
cmp
jno
jecxz
leave
cwtl
ljmp
aam
pop
mov
nop
nop
repnz
mov
add
jb
lock
pop
out
aam
pop
pop
cmp
fmul
push
xor
mull
mov
jb
pusha
test
cmp
sbb
shrb
in
pop
adc
fmull
mov
mov
push
mov
push
mov
pushf
push
inc
xchg
sarl
pop
or
gs
in
addr16
dec
cs
or
mov
lcall
cmp
mov
int3
cwtl
jmp
imul
mov
in
and
and
push
jg
jecxz
push
mov
popa
aas
hlt
or
jg
cltd
leave
scas
rsqrtps
ljmp
mulb
out
mov
and
or
xlat
data16
loope
outsb
mov
mov
push
mov
xchg
adc
push
cs
ror
sub
add
or
movsb
mov
hlt
out
mov
movsb
cs
shrl
xchg
repz
adc
mov
mov
scas
fmull
mov
fildll
loop
inc
ja
push
pop
dec
es
enter
pop
push
cmp
sti
sub
or
lods
mov
jns
scas
xor
data16
out
iret
or
cld
adc
xchg
add
cltd
mov
push
js
cli
lock
pop
pop
adc
pusha
mov
leave
jb
mov
aas
jbe
jle
sub
subb
mov
dec
jne
lods
inc
aad
nop
and
or
add
xor
imul
or
fwait
inc
cwtl
scas
ja
addl
cmp
pop
notb
jb
das
sarb
pop
sbb
inc
repz
mov
out
cmp
ja
out
jmp
inc
enter
inc
xchg
fimull
popf
push
inc
out
in
cmc
pop
jns
cltd
ds
aaa
xchg
jae
cmp
sub
pop
dec
mov
roll
fstpt
sub
in
or
iret
pop
or
mov
lea
mov
jns
push
mov
push
xchg
sti
sahf
xor
xchg
std
cmpl
stos
stos
sbb
push
pop
pop
das
sub
ficoms
inc
mov
push
ds
pop
xor
push
fldt
shl
mov
fstpl
dec
adc
push
filds
shlb
pusha
sarb
and
jl
arpl
imul
push
movsl
add
loopne
or
rorl
into
pop
and
gs
movsb
ss
sbb
movl
xchg
mov
xor
cmp
xchg
jmp
mov
xchg
arpl
sbb
jp
shlb
jns
sbb
icebp
pop
enter
icebp
pop
xchg
insl
add
or
inc
ljmp
stc
scas
hlt
mov
arpl
add
in
lods
jnp
jb
out
test
or
andb
pop
mov
dec
jae
enter
mov
dec
cmp
fisubrl
add
pop
xor
cmp
add
push
lods
push
hlt
push
mov
xchg
mov
popf
pushf
js
leave
aaa
adc
imul
push
xchg
jo
shll
outsb
adc
loop
in
pusha
push
shl
mov
or
mov
jnp
mov
jmp
daa
inc
inc
outsb
insl
iret
out
jns
scas
inc
xor
aas
mov
sbb
in
mov
daa
push
jb
arpl
xchg
dec
ss
push
push
popa
mov
xor
mov
cmpsb
pop
fsubr
rcrb
cmc
cmp
jp
cli
add
data16
xor
cmp
or
aas
mov
fs
ret
mov
and
jge
cld
mov
fildl
loop
adc
cmc
sbb
cmp
mov
jge
pop
popa
testl
into
jnp
mov
jp
call
jae
pop
xor
jmp
fstpl
mov
mov
mov
cs
stos
fsincos
mov
cli
xorb
dec
sbb
dec
xor
add
jl
cmp
out
mov
sub
sub
dec
aaa
pop
mov
lahf
jns
cmpsb
es
mov
adc
loop
pop
daa
mov
es
jbe
aaa
adc
and
inc
mov
stc
lret
jmp
pushf
pop
jl
inc
outsl
jne
cs
and
outsb
jb
mov
dec
sub
sti
cmp
xlat
imul
aas
scas
or
inc
mov
leave
pop
std
sbb
adc
sub
push
test
adc
or
jl
mov
mov
negl
sbb
pop
or
adc
pop
cmp
iret
repnz
sub
lcall
aad
cli
mov
pop
or
popa
mov
test
dec
push
cmpsl
mov
ljmp
outsb
pusha
pop
add
aaa
mov
push
in
and
pop
mov
inc
ret
cmp
mov
cmp
dec
pop
pusha
and
pop
cld
orl
add
and
adc
fcoml
mov
fs
sbb
jns
sbb
jle
mov
dec
outsb
test
fnsave
popf
mov
arpl
lock
jg
mov
mov
pop
cli
bound
dec
test
cli
cmp
mov
mov
mov
xor
sar
inc
sbb
mov
ror
roll
cmpsb
mov
add
std
cmpsb
leave
pop
cmp
mov
push
xchg
sub
shll
xor
mov
jno
push
xor
sbb
mov
fwait
jno
cmp
push
out
cmp
mov
xchg
pop
jl
sub
je
cmp
adc
daa
mov
or
test
repnz
je
adc
neg
js
jmp
cld
imul
push
and
mov
mov
xchg
mov
out
pushf
inc
mov
pushl
jb
in
popf
jo
push
dec
int
sarb
push
and
or
das
sbb
data16
std
test
outsb
outsl
scas
push
mov
ja
in
sti
jae
sarb
das
insb
cmpsb
jg
inc
mov
stos
rclb
stos
aas
iret
push
insl
arpl
loope
lds
test
xor
ja
mov
xor
adc
das
sub
mov
xchg
gs
sub
xchg
jnp
mov
dec
enter
or
aas
dec
xor
movsl
xchg
mov
cmp
fs
lret
mov
lds
stc
mov
dec
and
cmp
lods
test
xchg
aas
xor
sbb
imul
stc
or
ret
shll
and
adc
push
sub
jmp
inc
roll
jmp
aaa
scas
int3
repz
sahf
hlt
pop
sbb
inc
iret
and
fs
aaa
lods
fcompl
push
imul
nop
xor
xchg
fstl
data16
inc
push
pop
adc
add
xchg
es
nop
cli
cmp
mov
rolb
test
jmp
iret
jmp
insb
cwtl
mov
xchg
inc
dec
aam
pmaddwd
pop
cmp
push
imul
cmp
mov
int3
push
cmp
mov
mov
xor
mov
int
sub
dec
std
cmpsb
cmp
dec
push
mov
hlt
data16
mov
fidivrl
das
mov
lret
xchg
stos
divb
jo
jmp
pop
sbb
std
mov
fnstcw
xlat
and
lret
in
enter
inc
inc
sbb
fimull
gs
push
stos
das
stos
mov
addl
and
loop
xor
mov
add
add
