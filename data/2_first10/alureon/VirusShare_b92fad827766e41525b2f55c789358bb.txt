jge
add
mov
add
test
add
mov
add
aam
add
loop
add
repnz
add
adc
add
adc
add
adc
add
add
push
adc
add
add
jp
add
mov
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
daa
adc
add
add
add
insl
adc
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
add
pop
adc
add
add
mov
add
push
out
in
pop
cld
pop
xor
and
push
mov
sbbb
xchg
fsubs
dec
and
pop
mov
add
sub
xchg
pop
push
and
ret
push
je
es
xchg
sub
inc
sub
call
ss
cmp
xor
out
movsb
push
test
js
mov
shll
dec
mov
dec
sub
inc
xchg
add
ja
fcom
jmp
inc
mov
cmpsb
bound
out
daa
and
add
idivl
pop
js
jmp
js
inc
sbb
dec
ds
movsb
or
ja
imul
push
jle
jae
cmp
xchg
sub
jecxz
movsl
mov
mov
jns
add
pop
cmp
shrl
outsl
into
xchg
cs
mov
dec
and
ja
movsl
adc
arpl
lods
fisubl
dec
lods
xor
nop
ret
mov
gs
push
cmp
cmp
mov
repz
mov
shr
out
pop
stc
aad
std
cmpsb
lods
jg
push
clc
adc
out
jno
subl
bound
jae
xor
jmp
out
popf
out
or
scas
sbb
push
rorl
mov
mov
nop
je
lods
cmpsl
dec
clc
ret
insb
and
xchg
push
clc
jne
mov
inc
dec
mov
rorb
ja
mov
xchg
push
push
aad
aaa
inc
xchg
pop
mov
insl
xchg
inc
xchg
pushf
and
aam
mov
jno
inc
test
jbe
ret
stc
loop
addl
pminsw
mov
and
ljmp
inc
mov
inc
repnz
addb
pushf
inc
adcb
jae
add
fisubrl
rcl
out
jnp
xchg
in
imul
aaa
test
sbb
xchg
dec
jbe
add
mov
in
mov
outsl
fidivrs
incb
in
loop
pop
shrb
in
movsl
scas
mov
jg
push
repz
add
pop
andb
fdivrs
mov
jb
mov
cmpsl
xchg
imul
add
cwtl
jle
negb
pusha
jecxz
aam
ret
mov
rorl
push
jecxz
shll
roll
mov
xor
push
mov
xchg
lock
movsl
arpl
add
cmp
gs
pop
cmp
fimuls
ja
jb
dec
pop
mov
pop
int3
xor
mov
jb
dec
repnz
inc
add
or
cmp
mov
sub
mov
sub
cs
mov
inc
rcll
jecxz
in
adc
sub
dec
jp
jnp
mov
jno
aad
into
popf
inc
mov
imull
addl
sbb
sub
insl
shlb
and
and
iret
add
addr16
and
mov
test
fisubrs
dec
stc
jecxz
rep
aad
movsb
cld
inc
dec
das
std
lret
das
lods
push
cmp
insl
and
ja
and
shl
dec
and
daa
jnp
outsb
fs
out
in
jae
int
and
lcall
inc
cmpl
je
sbb
out
and
adc
lcall
add
inc
cmpsb
test
xlat
sub
and
mov
scas
inc
lea
addr16
mov
sbb
lds
jbe
or
cmp
and
repz
sbb
imul
adc
and
mov
add
mov
xchg
push
jb
addr16
xor
cmc
fidivrl
pop
xchg
rcrl
mov
sbb
inc
fimuls
jmp
mov
stc
leave
cmp
cltd
int
mov
sub
or
test
ficoms
repz
mov
fs
push
xchg
fs
out
pop
inc
jae
inc
jp
mov
mov
mov
in
pop
pop
push
cs
and
push
and
loop
aam
mov
sub
shrl
inc
mov
adc
dec
gs
add
daa
or
fwait
insl
jbe
jb
or
push
inc
scas
push
push
cmpsl
jo
popa
and
jnp
cmpsb
xchg
aam
add
fstl
mov
mov
fstpl
inc
or
dec
or
call
sub
mov
call
imul
push
inc
call
add
add
sub
dec
xor
imul
call
movzbl
sub
xor
lea
dec
add
dec
mov
xor
lea
dec
lea
call
xor
add
mov
dec
call
add
and
call
inc
add
inc
movzwl
mov
imul
inc
dec
mov
pop
inc
mov
add
dec
pop
dec
inc
pop
add
mov
mov
dec
pop
lea
and
lea
add
add
xor
movzbl
inc
pop
sub
mov
pop
imul
lea
mov
imul
mov
call
imul
lea
mov
lea
ret
mov
dec
push
dec
inc
push
inc
lea
push
imul
imul
push
add
sub
push
mov
add
mov
mov
push
inc
ret
push
dec
sub
mov
mov
dec
lea
push
mov
inc
push
lea
call
pop
ret
jmp
lea
xchg
mov
inc
mov
dec
xor
dec
mov
inc
sub
inc
add
dec
dec
jne
mov
mov
mov
lea
pop
and
xor
pop
mov
mov
pop
mov
mov
lea
xor
mov
dec
mov
mov
mov
dec
lea
add
ret
push
dec
movzbl
inc
mov
sub
lea
or
sub
push
push
push
push
sub
dec
sub
push
or
dec
sub
imul
movsbl
inc
inc
sub
inc
mov
lea
push
and
add
xor
sub
add
push
lea
or
push
and
dec
pushl
mov
call
and
add
mov
lea
inc
sub
mov
dec
dec
pop
ret
mov
sub
mov
inc
dec
dec
mov
inc
dec
lea
mov
movzwl
dec
cmp
jb
inc
mov
inc
movzwl
xor
sub
or
xor
lea
pop
add
dec
test
jbe
mov
lea
mov
mov
mov
lea
sub
movzwl
dec
dec
dec
lea
mov
add
mov
inc
mov
inc
inc
add
lea
mov
mov
add
and
sub
lea
mov
inc
inc
movzbl
dec
movsbl
add
inc
lea
and
dec
dec
mov
dec
inc
mov
dec
movsbl
mov
inc
lea
mov
sub
mov
imul
inc
dec
jne
mov
mov
lea
xor
lea
imul
imul
inc
mov
dec
mov
dec
mov
imul
mov
xor
xor
dec
or
mov
add
mov
dec
add
test
jbe
mov
or
dec
and
dec
sub
lea
mov
inc
mov
mov
mov
sub
xor
add
inc
mov
inc
mov
sub
mov
dec
and
dec
mov
mov
mov
dec
movzbl
mov
sub
add
lea
xor
and
dec
mov
mov
or
sub
movzbl
mov
add
mov
dec
lea
mov
sub
sub
movzbl
sub
mov
add
mov
dec
and
imul
inc
movzbl
mov
jmp
push
call
imul
xor
inc
mov
xor
imul
inc
inc
add
dec
inc
imul
dec
xor
lea
inc
imul
dec
shl
lea
mov
xor
inc
and
push
lea
movswl
lea
call
xor
pop
dec
sub
inc
mov
inc
add
lea
movsbl
cmp
je
call
call
dec
iret
add
lea
pop
imul
ret
push
mov
inc
mov
xor
movzwl
push
dec
inc
push
sub
push
sub
push
and
sub
push
mov
dec
dec
add
inc
call
mov
push
mov
push
add
pop
mov
lea
mov
mov
lea
mov
and
or
inc
inc
dec
dec
je
mov
and
mov
inc
mov
mov
inc
mov
mov
mov
add
dec
mov
movswl
dec
inc
xor
repnz
dec
mov
add
movswl
jmp
inc
dec
inc
lea
dec
xor
sub
lea
sub
mov
inc
xor
inc
add
mov
dec
pop
pop
jmp
ret
push
inc
add
inc
add
and
inc
mov
sub
mov
inc
lea
xor
mov
add
mov
lea
inc
movswl
add
dec
add
add
mov
dec
add
dec
lea
pop
ret
sub
inc
mov
lea
lea
mov
add
lea
mov
inc
add
mov
mov
mov
xor
lea
xor
mov
mov
dec
inc
mov
or
xor
inc
mov
mov
cmp
jb
lea
push
mov
imul
push
sub
mov
push
add
mov
mov
imul
add
xor
add
inc
xor
mov
dec
xor
inc
lea
push
inc
mov
xor
add
lea
mov
inc
inc
mov
add
lea
movzbl
dec
imul
or
add
imul
imul
add
dec
sub
movzbl
and
dec
add
dec
movzbl
mov
dec
inc
imul
dec
mov
imul
dec
lea
dec
dec
xor
cmp
jb
imul
xor
sub
and
mov
sub
jmp
roll
mov
ret
and
aad
dec
mov
push
pop
call
cli
js
lret
jp
xor
insb
xchg
test
pop
arpl
push
jb
out
xor
adc
int
cltd
jle
mov
lea
fwait
jecxz
pop
add
lds
inc
test
enter
push
imul
pop
pop
out
push
sub
sbb
dec
lea
enter
out
xor
hlt
cli
add
scas
xor
leave
fld
add
sbb
insl
pop
adc
ljmp
cmc
ret
xor
mov
out
mov
sar
in
ja
push
inc
jnp
out
xchg
add
iret
mov
pop
rorl
fistl
pop
pushf
or
lcall
pusha
sbb
sub
mov
popf
xor
out
or
lods
ljmp
mov
pop
lret
jge
xchg
clc
mov
pop
xchg
icebp
jbe
fbstp
pop
inc
mov
push
xchg
cmp
rorb
add
stos
mov
cs
inc
dec
mov
jmp
mov
pop
inc
sbb
in
xor
or
dec
ss
int
jns
mov
push
out
inc
sub
xchg
gs
mov
xchg
push
push
out
xor
sarb
dec
stc
in
mov
std
push
or
ja
pop
js
jne
test
xor
scas
lret
pop
testl
mov
lret
inc
add
and
in
xchg
popf
pop
inc
cmpsl
push
pop
mov
push
or
dec
dec
push
jns
push
out
jbe
aam
xchg
lock
addl
pop
mov
push
negb
mov
mov
dec
into
scas
jnp
into
je
notb
or
mov
ljmp
xchg
popf
outsl
sub
ljmp
popf
cmpsb
mov
or
pop
pop
add
jle
cwtl
rclb
shlb
out
jb
hlt
sub
push
jmp
popf
imul
adc
aas
mov
in
pop
mov
cli
pop
sar
pop
pop
call
movsl
xlat
inc
loopne
jb
push
fistps
pop
pusha
mov
inc
add
cwtl
push
adc
cmpsb
mov
inc
roll
enter
stc
aaa
adc
add
in
pop
mov
filds
rorb
test
pop
addr16
sahf
into
pop
xchg
dec
pop
push
andl
push
addr16
fiadds
mov
lods
pop
or
fnstenv
idivb
adc
dec
pusha
shrb
dec
mov
pop
fdivs
xchg
test
sbb
sub
int
dec
hlt
lock
mov
shll
ret
cld
mov
add
cli
inc
imul
adc
fld
test
mov
pop
aad
cmpsb
rorl
sub
mov
in
hlt
sbbb
add
sub
jbe
cli
mov
stc
inc
sub
aad
dec
push
mov
sub
inc
pushl
repnz
je
insb
mov
shlb
ror
push
subl
nop
loop
adc
pushf
xchg
cld
call
or
scas
pop
insb
push
inc
stos
addr16
jo
vmovaps
and
inc
xlat
jb
sbb
jne
sub
add
adc
xchg
les
lret
jno
dec
inc
and
pop
push
jecxz
mov
xorl
sub
imul
outsb
shl
mov
sbb
call
pop
lea
aam
movsb
add
leave
mov
push
cmp
inc
jmp
inc
dec
dec
mov
into
dec
clc
ja
pop
rcrl
pop
cli
das
lret
sbb
xor
fldl
dec
lods
fisubs
pop
fdivrs
cmp
ds
xor
jns
lods
test
xor
mov
jae
cs
xlat
jl
fsub
mov
push
pop
adc
inc
mov
and
rcrl
cmp
mov
cld
inc
and
enter
loopne
cs
xor
mov
ret
push
into
mov
xor
xchg
pop
bound
push
mov
cltd
xchg
cmp
cmp
and
and
inc
mov
add
cld
inc
out
stos
cmp
shr
repz
rcrb
dec
arpl
jnp
and
sub
pusha
xor
mov
lods
pushf
in
sub
roll
sub
mov
mov
movsl
loopne
and
jmp
ja
ss
repnz
cli
std
adc
or
out
xor
adc
call
stos
jg
mov
mov
loope
call
sbb
sub
adc
fdiv
sti
std
mov
jo
adc
cmp
cmp
mov
clc
sbb
test
mov
pop
push
sub
stos
dec
xlat
jp
sbb
flds
xchg
arpl
jo
andl
addr16
push
cmpsl
sbb
cmp
xchg
or
xor
daa
je
cs
fadd
shll
repnz
leave
notb
xchg
push
jb
jb
roll
xlat
mov
movsb
jg
inc
fsts
inc
push
add
int3
push
fwait
dec
mov
add
xchg
test
dec
pop
or
aas
dec
jl
lea
xchg
jns
int3
lds
and
or
stos
dec
dec
shrb
orl
cltd
jbe
push
or
sbb
lret
sub
pop
push
sbb
pushf
and
mov
pop
xor
lahf
les
jl
repz
xchg
or
out
adc
mov
xor
jne
inc
stc
sub
mull
inc
cwtl
push
fs
subl
std
adc
dec
jns
mov
pop
scas
aam
gs
push
pop
cmc
or
push
push
popl
push
jecxz
or
ss
test
stc
mov
lds
pop
arpl
mov
adc
fimuls
aad
pop
xor
js
cmp
pop
xchg
adc
sub
out
push
sbbb
inc
push
sbb
add
push
dec
jmp
dec
sbb
icebp
xor
movb
sub
scas
lds
xor
xlat
cld
dec
cli
popf
mov
cwtl
and
movsb
push
jl
stos
leave
xchg
lds
push
sub
pop
jl
stc
cmp
je
in
daa
js
lods
scas
hlt
pop
in
push
pop
hlt
adc
and
mov
popf
iret
sub
mov
sbb
pop
sahf
testl
cmp
addr16
push
daa
in
mov
jae
pop
or
fbstp
aad
hlt
test
filds
popf
fs
pslld
lock
imul
pop
outsb
shrb
in
xchg
sub
mov
rorb
ja
movsl
push
push
jmp
xchg
jbe
xchg
jb
or
xor
dec
and
sbb
rcl
xchg
sbb
sbb
cmp
mov
cmc
xchg
sub
lds
pushf
mov
push
jne
mov
sbb
add
and
push
and
ds
push
adc
stos
push
xchg
clc
jns
das
lods
ret
lret
bound
adc
jl
jge
jb
enter
inc
sbb
insl
jge
fxch
into
mov
dec
stos
mov
xchg
movsb
in
insl
add
lcall
fs
in
stos
dec
lahf
addr16
std
nopl
divl
cwtl
into
add
jns
iret
test
imul
lods
clc
fs
xchg
ljmp
pop
mov
cmp
xchg
movsl
pop
lea
sbb
xor
cmpsl
xchg
inc
mov
stc
xchg
imul
scas
mov
cmc
mov
or
out
into
add
jmp
dec
pop
lret
call
mov
icebp
push
enter
mov
aaa
aam
fstp
mov
sbb
inc
int3
pusha
sub
cmp
insl
jnp
cli
iret
or
pushf
mov
xor
scas
cmp
jb,pt
sbb
test
cmpsl
lds
lods
nop
xchg
and
pushf
cmpsb
add
sahf
mov
add
push
pop
fldl
xor
push
mov
or
fldenv
ja
insl
mov
in
jb
or
xor
xchg
andb
jp
xor
gs
push
and
jne
rol
xor
rcrb
out
movsb
pop
sub
jb
ficompl
cmp
pushf
in
insl
arpl
mov
pshufw
lret
fnstcw
adc
and
inc
rolb
or
mov
add
adc
pop
stos
cmc
jne
mov
add
or
rorb
mov
and
pop
lods
adc
jle
lret
jg
imul
lahf
cmp
inc
scas
movsb
out
insl
adc
mov
or
repz
es
fdivrl
mov
in
int3
aad
aad
pusha
adc
je
cs
inc
and
mov
mov
mov
call
popf
popa
faddl
inc
pop
inc
mov
ds
aam
iret
daa
dec
fistpl
mov
mov
lret
jp
ja
fcmovbe
mov
mov
pop
cs
xchg
xchg
jno
test
out
out
lret
xor
das
mov
shrl
mov
dec
mov
lahf
movsb
shr
into
mov
pop
mov
das
mov
cmc
and
nop
movsb
dec
and
jae
sarl
ds
cmp
push
mov
sar
roll
jp
mov
adc
sub
pusha
mov
cmc
and
sub
mov
addl
pop
push
and
rol
jmp
test
mov
aad
xlat
aam
scas
cwtl
call
shl
pop
mov
mov
in
les
scas
inc
out
repnz
jne
inc
jne
mov
mov
arpl
in
out
push
rcrb
cwtl
sbb
movsl
fsts
enter
sarl
jmp
sub
dec
sbb
xchg
jg
out
gs
jl
inc
pop
sbb
sbb
repnz
mov
clc
stc
add
aaa
popf
sub
dec
call
orb
cwtl
test
mov
xlat
mov
add
jno
cwtl
loopne
stos
xor
add
test
shl
addr16
cwtl
mov
sbb
cmp
insl
int3
ret
push
aas
xor
push
push
jecxz
fistpl
movsb
sbb
sbb
pushf
inc
mov
add
into
in
lret
fwait
clc
xor
jge
int3
dec
adc
arpl
adc
cmc
mov
mov
xor
xor
xchg
adc
andl
inc
jg
xchg
mov
in
xlat
sti
lret
pop
clc
jb
add
stc
xchg
push
lock
xchg
push
testl
add
enter
insb
iret
mov
call
movsb
push
fiadds
lds
insb
ucomiss
lds
js
orl
and
and
cmpsb
dec
mov
loop
mov
lret
js
pop
lock
xchg
sahf
push
pop
pop
add
leave
testb
stos
jb
pop
pop
in
and
jae
inc
and
call
mov
inc
and
outsb
test
xor
dec
gs
test
std
pushf
dec
iret
mov
inc
hlt
cwtl
mov
pop
jb
push
mov
daa
lods
add
cmp
pop
mov
mov
movsb
or
lds
or
inc
les
mov
push
or
fstps
std
mov
imull
out
add
jno
fdivs
sarl
xchg
fs
mov
pop
sub
and
bound
lahf
outsb
inc
out
push
mov
cmp
imul
das
mov
xor
push
push
ljmp
aas
ds
xchg
pop
mov
and
pop
dec
dec
test
add
filds
sub
cmp
pop
dec
mov
leave
jmp
int3
or
pop
cs
mov
add
dec
fucomip
ja
sbb
fucom
xor
mov
test
ja
popa
cmp
call
jo
enter
pusha
push
and
sub
adc
aad
jo
enter
mov
cmp
daa
dec
pop
ret
pop
pushf
repnz
pop
fstpt
mov
inc
std
negb
insl
push
xchg
jmp
test
arpl
es
mov
aam
adc
jmp
out
daa
jp
shll
pop
inc
shrl
test
test
testl
lea
lock
and
mov
adc
ror
mov
or
orl
adc
add
jmp
sub
addb
dec
fs
sbb
and
mov
push
lods
repnz
sbb
in
jbe
lock
inc
stos
lret
jnp
push
and
ret
pop
movsb
pop
lcall
decl
and
ret
lock
imul
sti
mov
repz
adc
lret
cmp
sub
jmp
lcall
mov
dec
aam
dec
cwtl
cmp
or
pop
dec
jb
push
xchg
push
loope
testb
jnp
call
mov
mov
dec
push
notl
sahf
xchg
push
dec
lret
sub
jecxz
push
mov
mov
jle
aaa
add
ljmp
lcall
mov
rorl
hlt
inc
js
sbb
popf
popl
jl
rcll
dec
arpl
push
mov
rol
lock
fs
cmc
and
cmpsl
mov
bound
adc
jmp
xlat
cmp
repnz
adc
movl
lcall
int3
fnsave
sbb
sub
insw
cmp
mov
movsb
mov
dec
sub
and
cmp
jbe
sub
inc
out
insl
push
idivl
pushf
sbb
insl
push
and
fisubs
sbb
mov
test
adc
mov
adc
or
repz
cli
cltd
ret
jne
xor
or
int
jle
fld
jle
push
lds
outsb
jmp
jl
icebp
testl
push
mov
insl
sbb
daa
clc
cmp
cmpsb
push
fistpl
push
and
xor
icebp
adc
pop
cmp
insl
and
ret
jg
dec
in
sti
jg
popa
cmp
cmp
pop
inc
dec
push
lret
mov
xor
or
sbbb
sub
test
sub
cmp
das
in
xchg
pop
scas
xchg
test
rcr
insb
jle
inc
sahf
and
lods
outsl
push
inc
jmp
mov
pshufw
jl
imul
daa
sub
dec
push
jae
repz
lret
pop
lock
mov
mov
and
xor
push
ror
or
aam
jmp
mov
pop
not
sub
mov
push
fdivrp
mov
push
dec
into
or
cmpsb
ja
sbb
in
fsubrp
inc
inc
push
sub
pop
or
cmpsl
es
shll
in
popf
outsb
sbb
loopne
in
repnz
out
fidivl
js
mov
add
sbb
mov
mov
adc
lret
pop
int
cmpxchg
xchg
dec
les
mov
inc
aas
pop
ret
push
mov
jmp
sub
dec
xor
xchg
cmp
dec
xchg
mov
cs
add
cmp
out
sahf
clc
sbb
mov
sahf
aas
sarb
mov
jmp
jne
jmp
sbb
jno
push
int3
sub
sub
push
xchg
sbb
mov
jecxz
sub
mov
jg
mov
jns
jg
xchg
fnstsw
imul
pop
jmp
gs
jge
ds
ja
push
leave
test
and
outsb
call
or
shrb
mov
mov
cmp
sub
mov
out
fistps
cmpsl
dec
sbb
fwait
lods
fimuls
pop
lahf
sbbb
addr16
mov
cmpb
bnd
ret
mov
sbb
ficoml
mov
inc
in
inc
pop
jns
movsb
and
mov
rorl
scas
rorb
or
pop
stos
out
jb
dec
mov
or
cmp
and
mov
push
or
loopne
mov
cld
sbb
or
pushf
cmp
out
iret
sub
and
ja
notl
in
je
mov
movsb
fcompl
xchg
das
dec
lahf
jbe
sti
dec
icebp
movsl
in
pop
testl
les
ret
stos
or
mov
sahf
push
xchg
popa
jg
aaa
jno
inc
mov
xlat
xor
test
rolb
call
jno
hlt
enter
pushf
mov
xchg
pop
rolb
mov
aas
xor
fnstsw
xchg
fbld
or
mov
ja
es
dec
jp
sub
addr16
stos
lcall
mov
pop
movsb
rcll
xchg
adc
leave
dec
jecxz
in
lea
sbb
dec
call
shrb
movsb
xchg
xor
add
xchg
mov
sbb
or
mov
mov
sub
imul
pop
bound
cld
jnp
ret
out
fwait
inc
mov
bound
movsl
mov
xchg
push
push
mov
imull
movsl
push
shll
les
das
les
ljmp
call
je
in
add
pop
loope
sbb
addb
and
xor
mov
ljmp
adc
cmp
push
adc
inc
test
out
xor
adc
cmpsw
hlt
push
jp
mov
sbb
mov
inc
adc
cmp
js
cmp
daa
mov
pusha
fsub
push
in
sub
cmp
repz
and
mov
dec
inc
adc
testb
push
jmp
jp
insb
push
iret
outsb
in
cmp
sbb
loop
into
out
bswap
inc
out
out
call
out
js
mov
inc
insl
imul
cmpsb
divl
sbb
pop
out
sbb
xor
ret
sub
dec
dec
jno
mov
je
adc
mov
in
lret
dec
lds
lret
imul
lcall
loopne
and
cli
sbb
addb
sub
push
inc
outsl
pop
inc
jg
ss
sahf
iret
jge
inc
mov
push
dec
xchg
cmp
sbb
push
xchg
inc
push
lds
xchg
mov
mov
sbb
mov
les
xchg
decl
lahf
jmp
hlt
push
mov
sahf
shl
sbb
pop
jmp
lahf
inc
adc
int
ficomps
inc
pop
add
add
enter
mov
fdivr
jne
cld
es
push
call
inc
loop
sub
das
lods
cmp
push
call
pop
popa
dec
mov
add
es
les
mov
cmc
fucomip
mov
and
xor
es
lods
push
push
lea
xor
dec
andb
fs
clc
lods
pop
sub
mov
mulb
je
testb
mov
lahf
inc
mov
sbb
mov
mov
sbb
sti
movsl
icebp
push
dec
or
cmp
lret
jae
adc
adc
testb
mov
sub
hlt
dec
push
push
ret
outsl
fimuls
dec
js
test
inc
fbld
hlt
sbb
out
cltd
xor
repnz
jno
sub
movsl
xor
in
insl
inc
mov
gs
cld
dec
sub
mov
ja
mov
push
jmp
push
loop
inc
xchg
and
inc
or
cmp
lahf
mov
cmp
in
cli
mov
mov
add
mov
cmp
cwtl
ror
adc
sbb
mov
es
jecxz
inc
adc
stos
call
int3
xor
and
ret
xor
movsl
mov
mov
mov
daa
pop
sahf
push
inc
pusha
pop
sub
or
cmc
adc
lods
jecxz
stos
xchg
add
stos
xor
cli
out
mov
shlb
inc
sbb
cmp
mov
sbb
sbb
jnp
das
cmpsl
in
test
cmp
and
mov
stc
nop
mov
dec
mov
popf
mov
mov
aam
ja
pop
rorl
imul
hlt
lret
xor
jbe
arpl
or
repz
pop
dec
cmpsl
jecxz
cli
loopne
fidivrl
mov
or
mov
movsl
loop
mov
arpl
ret
mov
lods
outsb
jae
xchg
fmul
clc
or
pop
icebp
jns
xor
jp
scas
jle
mov
cmc
inc
nop
inc
jno
pusha
popa
ret
sbb
mov
loopne
mov
jg
cmp
xlat
insb
lret
sarl
mov
and
call
das
push
pop
cmp
or
enter
js
mov
and
sahf
jae
subl
mov
cld
popf
jne
xor
pmuludq
xchg
xor
and
test
mov
jecxz
sbb
push
dec
xor
sub
scas
shrl
mov
sub
add
cmc
dec
push
pop
pop
sbb
push
lret
mov
cld
mov
inc
cld
nop
dec
filds
scas
cmc
in
shlb
pop
icebp
movsl
das
inc
fs
cmpsb
lret
imulb
aas
clc
jbe
or
add
loopne
xchg
jb
mov
lret
cltd
fadd
aad
inc
adc
adc
imul
push
lock
jns
jmp
adcb
fstpt
stc
sbb
jb
ss
jne
or
scas
xlat
sub
dec
xor
pop
clc
sub
into
aam
pop
dec
dec
daa
scas
pushf
repz
xor
add
cmpsl
push
sti
subl
sbb
negb
bound
ret
ljmp
jge
dec
push
aas
mov
sbb
pop
imul
call
fisttps
inc
jbe
ja
xchg
dec
popa
lret
stos
sub
or
icebp
andb
xchg
cmpsl
ret
mov
in
sub
nop
or
lods
fdivr
or
sarb
xchg
and
repnz
outsb
xor
int3
iret
icebp
and
mov
repz
lods
lcall
ror
loope
sbb
loope
in
fisubl
mov
xor
andl
insb
stos
push
adc
sub
cmp
cmpsl
pop
int
lea
cmp
or
fsubrl
xor
cmp
cltd
xchg
push
ror
add
cwtl
xor
pop
cmpsb
push
stos
int
out
out
add
lret
pushf
imul
xchg
lods
repnz
ja
popa
cs
test
lea
pushf
test
and
dec
lock
xchg
or
lods
push
add
push
inc
fs
sbb
jl
pop
inc
les
mov
sbb
and
xchg
aad
arpl
fcomp
aad
pop
xchg
mov
movsb
mov
mov
or
push
in
cmpsl
fdivl
dec
stos
pop
and
sbbl
mov
inc
xchg
cmp
int3
aam
fcoml
sbb
xchg
inc
pop
inc
loopne
inc
dec
sbb
test
popf
mov
dec
int3
sub
mov
push
jne
add
cmp
sub
ret
pop
test
mov
push
test
mov
pop
cmp
fsubrs
aad
xlat
inc
out
mov
repz
ror
push
mov
cmp
pop
jnp
fsts
outsl
ljmp
cmp
cmp
cld
pop
dec
push
mov
pop
insb
lret
shlb
xorb
mov
mov
sub
xchg
shrl
sbb
pusha
aam
popa
shll
mov
sub
into
popf
jbe
fs
cmp
movsl
xor
xor
int3
cmp
dec
popa
mov
sub
xor
popa
cmc
cmpsl
dec
cmpsl
je
and
fwait
add
sub
jge
lea
pop
in
into
cld
pop
mov
jno
inc
inc
pop
addb
ds
data16
or
push
test
add
cmp
imul
call
cmpb
popf
es
aas
subl
aad
inc
in
sbb
mov
push
xchg
stc
cltd
mov
push
adcb
jno
rclb
in
repnz
std
in
repz
lret
push
std
fsts
lahf
mov
bound
flds
cltd
or
pop
fidivrs
sti
insb
sahf
push
subb
add
mov
fdivs
in
jg
lret
pop
lcall
fimull
jnp
fisttpl
cld
and
inc
sbb
sbb
xchg
stos
sti
pushf
data16
test
call
lds
sub
cmp
cmp
insl
imul
sub
jp
fisubl
mov
int3
push
pop
mov
call
js
inc
popa
lea
into
add
outsb
mov
mov
dec
xorl
sub
andb
aam
mov
shl
lahf
ljmp
mov
pop
sbb
fisttpl
outsb
jle
sbbl
popf
sub
cltd
xor
mov
adcb
or
xlat
and
int
and
jge
in
addr16
and
adc
insl
jns
jg
addb
mov
stos
jb
push
test
add
fistl
stc
mov
dec
shlb
mov
mov
pop
jecxz
dec
jg
loope
push
call
cmp
mov
pop
out
pop
xchg
or
and
btc
repz
setne
imul
mov
movsl
xchg
loop
mov
and
adc
aas
aas
mov
add
mov
outsl
jecxz
outsb
sub
faddp
cmpsb
jae
ljmp
aas
jge
mov
leave
fldl
sarl
cmp
pop
stos
test
push
dec
cmp
sbb
jmp
lock
add
push
inc
cs
xor
orb
incb
jp
pop
lock
orl
push
outsl
cmp
sub
movsl
sbb
cmp
sub
cltd
imul
cmp
and
aas
out
das
insb
xor
jge
sub
mov
or
dec
jecxz
cmpsb
lods
mov
leave
sub
mov
icebp
rcll
xchg
push
int3
repz
add
in
divb
mov
daa
push
push
in
mov
lret
frstor
xchg
mov
loopne
stc
call
outsl
cltd
pop
inc
mov
ljmp
imulb
and
in
cmp
inc
ret
push
or
add
adc
mov
cld
loope
hlt
movsl
add
dec
call
jl
push
cmpsl
jb
cli
js
int3
jnp
pop
lock
inc
sub
adc
mov
mov
fidivrs
call
fld
mov
pop
test
dec
xor
out
add
xor
xor
test
or
mov
xchg
adc
fs
scas
cmpsl
xchg
ss
fldt
mov
adc
jnp
nop
cmpsl
les
in
sub
and
daa
jne
push
imul
in
push
push
cs
jnp
pop
mov
pop
xchg
rcr
sbb
sub
xchg
fists
pop
cmp
push
lret
jg
outsb
dec
sub
ds
mov
inc
jmp
pop
sbb
dec
pop
addr16
shlb
add
sub
jb
mov
jecxz
popa
mov
call
lods
cmpsl
push
ds
idivl
mov
out
fwait
imul
xrelease
popa
loope
cmpsl
or
out
mov
cmp
movsl
lahf
or
sti
pop
push
hlt
xchg
pop
es
test
pop
stc
lahf
adc
xchg
fistl
adc
adc
mov
sbb
shr
fsubrs
mov
xchg
pusha
insl
jo,pn
and
cmpsb
arpl
xchg
cli
shll
lcall
cld
mov
sub
mov
or
mov
and
or
es
sub
cmp
xchg
dec
cmpsl
push
iret
pop
in
push
mov
xchg
lret
lahf
jnp
stos
sti
add
inc
pop
data16
fidivs
cmp
xchg
imul
dec
push
idivb
sub
cmp
imul
mov
mov
jmp
jnp
and
lock
cmp
xor
test
repz
and
inc
clc
mov
sti
loopne
popf
pop
or
adc
repz
xchg
push
push
nop
dec
fistl
in
ss
test
in
movsb
hlt
push
push
cmp
jbe
xchg
jecxz
xor
add
xlat
enter
mov
push
ret
popa
std
mov
cmpsl
dec
push
adc
mov
mov
mov
pop
or
xchg
ja
loope
cmpsb
pop
and
ja
pop
out
lret
mov
cmc
ds
xlat
cmp
lret
mov
stos
pop
lea
int3
sbb
dec
xor
pop
push
sub
or
aas
jl
mov
shrb
enter
sti
movsb
mov
aaa
add
dec
cmovs
dec
xlat
or
in
xchg
rolb
cmp
inc
push
jp
roll
addr16
shll
ret
xchg
js
xchg
cmp
inc
jmp
pop
cmp
lret
sbb
das
into
lds
mov
lahf
scas
int
xchg
rcr
cmpsb
aad
fisubrl
sbb
mov
inc
ss
outsl
jb
dec
stos
push
test
inc
or
xor
out
push
xor
dec
cs
sbb
lret
out
xlat
sub
mov
aas
pop
andl
test
rcrb
inc
lods
mov
mov
in
xchg
jnp
mov
dec
lret
sub
scas
adc
or
imul
lahf
test
mov
xchg
fisubrs
icebp
lods
jp
pop
xchg
in
mov
aaa
mov
mov
push
push
sbb
mov
imul
cltd
aam
lods
std
inc
sbb
add
bound
or
test
xor
sub
stc
lds
pusha
std
inc
or
sub
mov
lcall
daa
inc
mov
stos
in
mov
dec
inc
stos
aad
jle
pop
adc
loope
mov
scas
jge
dec
cli
add
xor
lahf
lds
xchg
cmp
insb
insl
repz
ret
jae
inc
cmpsb
addr16
or
mulb
mov
add
in
daa
jl
negb
data16
aas
push
rcll
mov
pop
mov
or
test
jge
xchg
inc
and
test
sub
pop
lcall
sbb
xchg
in
mov
lock
push
out
rcrb
or
andb
cs
repz
sbb
jnp
dec
loop
cmpsb
fcomps
xchg
ljmp
imul
sarb
push
xchg
xor
mov
xchg
pushf
jmp
inc
mov
scas
sbb
add
or
jns
test
pop
shrb
xchg
adc
cmp
lret
push
adc
fstps
sbb
lods
cs
cmpsl
mov
jmp
mov
test
sbb
sub
stos
stc
xor
lods
xchg
pushf
stos
xchg
sub
pop
movsb
pop
jmp
cmp
mov
mov
mov
xchg
shll
mov
vpackssdw
mov
xor
stos
push
bound
pop
cmc
and
movzbl
stos
dec
cmp
in
cmc
aas
fstpl
ljmp
mov
xchg
repnz
iret
adc
mov
aam
cmp
lods
icebp
adc
and
lcall
dec
call
push
lea
cmc
inc
push
fucomi
jno
les
popf
outsl
pop
popf
mov
jne
add
sarl
cmp
fmull
je
adcb
and
popf
jle
inc
dec
cmp
cli
lock
insb
sub
pop
jl
test
jae
pusha
adc
imul
push
or
cwtl
ss
andl
out
in
enter
pop
mov
add
push
xor
pushf
push
testb
pop
fwait
sarb
bound
and
fisttps
or
mov
stc
push
test
aam
out
cmp
pop
ja
popa
fldl2t
aad
jbe
mov
mov
inc
in
jle
sub
rolb
pop
cmp
pop
aas
push
xchg
leave
scas
mov
addr16
scas
xlat
lret
lret
fsts
in
mov
rcrb
dec
mov
bound
xor
pop
cmpsl
mov
push
repz
sbb
leave
arpl
pop
jns
popa
sbb
push
mov
pop
arpl
ret
gs
mov
lock
xchg
leave
sub
arpl
rcrl
add
inc
mov
push
xor
cmp
repz
adc
ljmp
out
sahf
jmp
sbb
mov
mov
sub
js
pop
add
dec
sbb
divl
xor
jo
jp
cltd
mov
add
mov
dec
add
and
lret
sbb
pusha
aad
cmp
add
clc
push
into
xchg
pop
cmp
mov
or
mov
lret
dec
xor
mov
xor
mov
xchg
push
das
inc
fsub
adc
cmp
dec
xchg
or
mov
std
mov
mov
ror
jle
daa
lods
pop
aas
ret
mov
fimuls
imul
inc
jb
ljmp
enter
xchg
sarl
test
push
data16
mov
mov
cmp
and
test
mov
popa
test
push
iret
mov
lcall
pusha
cmp
xor
scas
adc
fwait
sbb
lcall
shll
sub
aam
shrl
sub
shlb
push
sub
jns
xchg
jb
loopne
add
fiadds
pop
and
dec
cs
mov
cmc
add
jl
fwait
push
out
sahf
ficoml
scas
sahf
pop
mov
mov
mov
and
mov
aas
cmpsl
sbb
mov
jmp
push
cmp
sub
jmp
ret
and
icebp
imul
inc
roll
lods
jnp
lds
fdivrs
mov
mov
fldcw
bound
inc
push
push
fcmovnbe
aam
leave
icebp
repz
movsl
push
xlat
hlt
into
stc
std
cli
sub
pop
cmp
or
jne
inc
dec
mov
xchg
adcl
fsub
imul
das
pop
call
inc
rclb
in
jg
push
cmpsl
testl
pop
adc
movsb
inc
jns
pop
mov
popf
test
cmp
xchg
call
push
pop
xchg
lahf
scas
data16
add
pop
ror
popf
leave
nop
gs
ds
fidivs
sbb
jns
and
loopne
push
or
gs
iret
stos
xchg
mov
inc
inc
mov
mov
rcrl
dec
pusha
sub
mov
pop
movl
bound
sbb
mov
xchg
int
aaa
mov
js
mov
or
mov
push
ja
test
cs
mov
movb
repz
fwait
scas
stos
insb
mov
ret
cmpsb
mov
gs
out
cli
mov
stos
mov
lahf
jl
lods
out
jmp
nop
mov
and
xor
rcll
push
lcall
pop
ja
mov
xchg
mov
sub
mov
pop
push
mov
cli
inc
xchg
ret
inc
add
add
mov
cmpsl
imul
ss
inc
adc
test
movsb
inc
push
hlt
sbb
mov
xchg
fwait
xchg
bound
add
clc
cmpsl
mov
mov
xchg
adc
fcompl
push
outsl
sbb
adc
jl
adcb
push
fs
shll
pusha
or
cmpl
jg
fidivrs
ss
arpl
or
pop
dec
les
jg
sbb
test
lods
ret
lcall
xlat
fadds
pop
dec
jae
mov
int
mov
jl
in
xlat
aad
inc
push
or
sbb
push
pop
mov
push
add
cmp
stc
movsb
add
repnz
fs
ljmp
pop
repz
inc
fcomps
pop
mov
mov
std
push
std
out
push
push
out
test
mov
pop
pop
xchg
ss
sbb
or
jo
out
mov
mov
lahf
in
test
xor
gs
icebp
pushf
or
and
cmp
mov
sbb
negb
movsb
clc
mov
sbb
xor
adc
stc
scas
xor
insl
mov
xchg
fstpt
mov
ret
mov
lods
mov
mov
pop
add
jno
and
lods
mov
sbb
in
push
rcrb
test
and
jae
enter
mov
push
and
loopne
scas
fwait
or
and
xor
fmull
and
jmp
rcrl
mov
add
rcrl
stc
test
push
insl
cmp
jnp
test
cmp
xchg
sahf
outsl
cs
mov
ret
xchg
pusha
dec
xchg
cmpsl
dec
int
mov
mov
leave
test
bound
jb
sub
ja
sbb
mov
cmp
mov
loop
es
outsl
mov
pop
mov
or
add
xor
loop
add
or
jg
sahf
outsl
stc
sub
mov
call
pop
jns
xchg
mov
sub
pop
inc
pusha
inc
in
pop
mov
inc
xchg
xor
in
js
mov
sahf
inc
dec
or
xor
in
mov
aaa
stos
ret
mov
cltd
lods
pushf
xorb
add
or
mov
lock
add
or
inc
ss
fcompl
sbb
sub
ja
push
sarb
fwait
addr16
xchg
jle
cmp
loope
test
popa
jecxz
mov
test
sbb
sahf
push
ja
fwait
xor
ret
fcoms
push
pcmpeqb
xorb
loop
xor
loope
call
shrb
mov
jb
in
imul
mov
pop
sub
out
orb
hlt
lahf
movsb
fsubrp
bound
aad
sarb
inc
mov
loopne
movsl
fcomip
out
inc
sbb
inc
sbb
jmp
mov
loop
jp
push
fxch
mov
xchg
stos
adc
sbb
roll
paddsw
cs
adcl
aas
jo
rorb
sub
stos
cmp
js
sub
sub
addr16
cmpb
fistpl
fwait
push
repnz
call
sub
jmp
mov
mov
dec
cmp
add
js
mov
pop
mov
inc
ljmp
jecxz
enter
int
adc
mov
inc
xchg
imul
mov
mov
xchg
adc
inc
dec
add
loop
mov
or
and
mov
push
loop
xchg
mov
aas
leave
xor
xchg
mov
adc
mov
cmpsb
sbb
sbb
xchg
fisttpll
mov
mov
imul
adc
ds
loopne
xchg
cld
pop
fcmovnbe
test
cmp
scas
pop
in
iret
lods
jle
xchg
fistps
mov
or
or
cmp
lcall
sbb
add
fcmove
imul
dec
int
sub
test
pop
aad
inc
fmul
not
lea
test
jns
test
out
xor
fistpl
mov
sub
or
sbbl
fildl
add
lock
sbb
mov
xchg
orb
xlat
ja
aad
cmp
bound
insl
scas
cmpsb
addl
pop
je
sub
xchg
sbb
push
stc
xor
popf
fstl
mov
insb
add
stos
push
cs
stos
sbb
xchg
jecxz
pushf
movl
ss
jl
cmpsb
call
add
mov
mov
dec
xchg
dec
pop
cmp
ss
out
jo
xor
into
test
mov
mov
gs
mov
jl
push
movl
jno
cs
daa
jmp
mov
cmc
dec
enter
jnp
jecxz
dec
js
loope
and
ret
shll
insl
add
into
mov
adc
mov
add
xor
aam
dec
xchg
loope
lcall
cmpsb
add
push
mov
cmpsl
sti
adc
add
xor
jae
in
sbb
jne
xor
out
aas
dec
sbb
into
lcall
imul
or
xchg
imul
mov
loope
pop
xor
loop
std
push
cli
mov
push
movsl
inc
cmpl
rcr
add
mov
loopne
cltd
sti
inc
pop
jg
dec
jecxz
inc
test
mov
fsubrl
mov
je
fildl
xchg
xchg
clc
mov
add
adc
push
dec
jge
pop
pop
jns
ss
je
pop
mov
fninit
ss
jne
jne
scas
sub
popa
inc
pop
enter
in
pop
push
and
jmp
test
les
pop
and
fsubp
insl
push
jb
add
push
in
mov
sti
mov
mov
test
loop
mov
or
int3
in
ljmp
xor
clc
stos
dec
es
jae
sbb
loopne
icebp
arpl
nop
mov
ret
sbb
adc
fadds
lock
stos
xchg
xchg
in
cmp
enter
lock
push
loopne
loopne
and
movsb
and
hlt
cmpsb
cltd
and
add
lret
mov
scas
ret
sbb
scas
push
xchg
fs
xchg
mov
adc
lods
ljmp
dec
cli
push
push
push
jge
dec
or
adc
cltd
cmp
jae
mov
jl
rorb
insl
mov
arpl
or
mov
out
repz
push
push
leavew
aam
push
sub
sbb
mov
mov
stos
call
ficoms
pop
ja
mov
sub
jb
jg
cmp
sub
and
push
push
mov
fcomps
xor
loopne
inc
js
xor
xor
sbb
sub
mov
mov
roll
and
fldl
cmpsb
mov
and
shl
popf
loopne
pop
push
lods
or
lds
out
sbb
test
mov
data16
xor
pop
pop
sbb
and
sahf
pop
arpl
out
jae
int
lock
sarl
popf
cmp
push
jno
mov
movsl
add
xchg
insb
in
cmpsb
test
add
cmpl
call
lods
popf
outsb
adc
mov
or
inc
mov
hlt
or
jge
imul
lods
add
pop
jo
enter
inc
jnp
ja
cwtl
inc
clc
jne
sarb
and
xor
pop
fs
mov
dec
mov
adc
mov
ffreep
fucom
sbb
iret
icebp
add
adc
es
rol
test
sub
lods
imul
sub
shrl
ds
pop
cwtl
push
rclb
ficompl
imul
fldt
mov
xchg
clc
jmp
sbb
adc
push
les
iret
iret
push
lds
xchg
jle
lds
fnstcw
fiaddl
jbe
rep
mov
xor
and
lret
push
inc
mov
enter
in
lahf
scas
pop
mov
jns
or
dec
sbb
mov
add
xchg
xchg
mov
test
stos
gs
push
push
sbb
cmp
sbbb
and
mov
repz
push
xchg
jne
ret
fnstenv
mov
mov
dec
mov
popf
push
dec
inc
sub
ret
gs
pusha
lea
call
movsb
adc
mov
adc
fcompl
into
ja
movsb
scas
lods
data16
ret
jb
gs
xchg
sbb
jbe
pop
pop
or
add
cmpb
cwtl
repnz
cmpsl
out
cmpb
lcall
in
push
add
inc
fs
out
bound
add
push
jge
adc
cmpl
xchg
push
xchg
jmp
into
leave
fsubl
mov
sbb
aas
adc
pop
ret
nop
jg
lret
icebp
xchg
add
push
sub
scas
shrl
add
jge
lahf
add
xor
icebp
out
loop
in
inc
das
int3
les
jae
enter
dec
mov
mov
jge
sub
or
test
mov
imul
xor
dec
out
xor
cmp
mov
cmpsl
mov
stos
cmp
cmp
cwtl
leave
dec
inc
pop
pop
xchg
shl
scas
dec
cmp
in
or
mov
mov
adc
and
mov
cmp
and
add
hlt
dec
mov
shrl
out
iret
jl
xorl
mov
sbb
mov
jl
xchg
jne
inc
sub
lods
inc
or
sub
cmp
leave
ret
xchg
add
mov
push
xchg
insb
jno
dec
add
dec
lcall
xor
int3
test
cmpsl
inc
mov
out
shl
cmpl
jle
xor
sti
lret
out
push
mov
cmp
incl
jecxz
sbb
mov
pop
stc
mov
and
repnz
dec
bnd
pusha
movsl
push
cmp
loop
jae
sbb
test
adc
sub
mov
push
dec
fsubr
jae
and
xchg
loopne
mov
pop
add
int3
leave
adc
ret
outsl
push
push
into
xor
out
sub
add
add
inc
pop
jno
sbbl
sub
stos
dec
aam
outsb
lods
push
clc
cli
or
add
or
pop
lds
cmpb
insb
sbb
pop
aaa
stc
sub
adc
icebp
shrl
sahf
and
and
xor
subb
push
cmc
pusha
cltd
pop
jmp
mov
cwtl
sub
push
push
aad
and
push
pusha
lret
or
adc
xchg
xor
mov
fnstsw
int3
mov
decl
or
loope
inc
cmp
call
aad
or
cmp
out
pop
fsubl
rcrl
in
rcll
ret
test
inc
xor
lahf
call
mov
mov
mov
pop
test
push
loop
mov
cmp
clc
repz
dec
mov
jg
pusha
mov
mov
mov
or
jp
int
movsl
jmp
mov
push
sbb
pop
shrb
lds
add
bnd
pop
mov
inc
mov
adc
je
mov
stos
pop
data16
lods
insb
test
mov
test
inc
inc
fisubl
xor
mov
mov
mov
xchg
fsubrp
xchg
xchg
fldcw
xor
in
sbb
pop
xchg
test
out
andl
push
insb
rolb
inc
mov
mov
ret
and
decl
rolb
fsub
add
mov
sbb
mov
mov
push
test
pop
sbb
cmp
mov
cmp
call
lahf
loope
xor
mov
sub
cmp
rcl
sti
movsl
ds
mov
movsl
pop
pusha
xor
pop
jmp
xchg
daa
and
les
xchg
sub
mov
gs
imul
fcoms
pop
sbb
int
push
popf
in
add
push
push
idivb
xor
dec
aas
mov
push
pop
push
out
ds
xor
xchg
dec
out
sbbb
pushf
inc
push
push
sbb
cli
sbb
lret
bound
mov
cmp
lea
repnz
mov
rcrl
jo
and
dec
popa
push
mov
cs
mov
movsl
push
jl
in
pop
jae
jno
xorl
xor
mov
dec
test
test
mov
loopne
sub
js
and
arpl
add
jge
popf
lock
xor
faddl
lret
xchg
loop
jg
jo
leave
mov
outsb
add
ds
mov
mov
fidivs
andl
pop
cltd
inc
lods
xchg
lods
mov
jecxz
daa
jge
mov
scas
test
bound
popa
lock
sub
adc
jp
push
push
cmpsb
xor
dec
jne
lahf
ljmp
or
pop
sbb
adc
ficoms
rorl
adc
movsb
or
or
imul
xor
adc
out
xor
add
les
push
pop
xchg
das
and
xor
cmp
cmp
fstps
std
scas
inc
dec
jmp
in
mov
das
add
sub
nop
cmpb
ret
mov
inc
mov
inc
and
test
push
lret
mov
add
xor
jl
call
loop
add
xchg
mov
in
pop
mov
data16
mov
insb
mov
imul
mov
push
ss
sub
cwtl
jmp
movsl
adc
mov
sub
lods
mov
daa
or
call
loop
jns
adc
fistps
ss
or
clc
lret
lods
push
inc
insb
lods
js
cmp
lea
add
cwtl
adc
mov
repnz
pop
incb
inc
movsl
dec
test
add
imul
jo
push
xchg
into
popa
ljmp
xchg
xor
cmp
jmp
mov
mov
sbb
sub
repz
xor
test
dec
fs
sbb
pop
xchg
scas
shlb
lods
pop
stc
mov
cmp
loop
div
jle
repz
fisubrl
movsl
mov
lret
daa
xchg
fsub
pop
add
popf
adc
pop
ljmp
or
imul
add
mov
jge
into
cmp
inc
cmp
hlt
test
mov
adc
xor
stos
icebp
jmp
dec
fcomps
cmp
out
jo
add
shl
std
leave
cmc
je
out
inc
or
push
mov
pop
jge
in
ds
or
bound
sbb
push
in
mov
lock
pop
pop
mov
bound
mov
adc
rcll
push
dec
fistl
xlat
sqrtps
sti
xchg
test
sbb
push
enter
or
sub
leave
xchg
add
sarl
stos
test
insb
dec
dec
sub
pop
inc
test
mov
xchg
mov
out
test
in
mul
pop
or
mov
sub
shlb
jns
fidivl
and
cmpb
ds
xchg
adc
ret
sub
arpl
std
ja
or
imul
pop
ds
dec
jo
jp
cmp
inc
cmp
adc
loop
hlt
sbb
xor
adc
cmp
sahf
xlat
test
out
popa
xchg
sub
add
lcall
fmul
fisubrl
outsb
das
outsl
mov
hlt
cmp
add
in
and
inc
push
sub
push
jmp
pusha
aam
mov
cwtl
hlt
mov
push
dec
das
mov
data16
repnz
bound
dec
or
jo
cld
jo
repz
and
push
cltd
or
xor
mov
ljmp
add
cmp
dec
sbb
mov
rcr
mov
das
imul
adc
inc
add
in
jmp
pop
pandn
mov
aaa
dec
inc
xchg
clc
jb,pt
aad
xchg
idivl
cli
jae
bound
mov
lahf
xchg
xchg
cmp
jge
int3
mov
jb
pop
test
jge
out
in
add
pop
enter
jecxz
mov
loope,pn
dec
add
loopne
rclb
aad
xor
push
shr
aaa
mov
sbb
xchg
xor
out
sub
mov
mov
pushf
cmpsb
push
and
dec
je
test
sub
lret
nop
dec
sub
cmp
testl
dec
cmp
stos
push
shl
cmp
cli
out
stos
lock
jno
fcoml
nop
mov
xor
add
jecxz
mov
cmp
ss
mov
andl
int
pop
push
aas
sbb
xchg
sbb
cmc
xchg
bswap
sub
pop
xor
and
mov
inc
lret
mov
cld
leave
in
scas
into
fsubs
sbb
ds
mov
das
movsl
enter
pushf
mov
or
leave
xchg
inc
ljmp
in
xor
add
xor
out
sahf
mov
rclb
inc
add
cltd
ret
aas
xor
out
addr16
jecxz
jge
in
sub
sub
aas
in
jb
fnstsw
std
pop
jb
push
ret
pop
shrb
add
xchg
or
and
imul
mov
flds
fwait
xchg
ret
xchg
cmpl
loop
stc
out
shlb
sub
xchg
xlat
mov
jle
dec
outsl
or
xor
sti
mov
jns
data16
and
xchg
incb
imul
push
scas
push
shr
pusha
jnp
aad
lret
shll
out
pop
xor
jl
cld
jge
ds
insl
lahf
neg
add
sbb
dec
inc
dec
mov
xchg
nop
scas
jmp
adc
mov
outsl
inc
pop
ja
testb
and
js
and
xchg
adc
repnz
lret
pop
pop
cmpsb
pop
jo
mov
cwtl
in
add
push
les
pop
icebp
in
out
xor
ret
push
in
pop
mov
mov
mov
jno
mov
call
sbb
mov
mov
add
sub
cmp
enter
gs
ficompl
fdivs
mov
imul
mul
test
jbe
rcrl
repz
pop
cltd
stos
sub
enter
or
xor
adc
and
les
mov
subb
jl
flds
loope
test
and
lahf
jno
and
stos
pop
push
cmp
ds
mov
mov
xchg
imul
cli
mov
iret
sub
loop
movsb
movsl
les
repz
sbb
pop
jg
mov
adc
imul
mov
jge
mov
jmp
cmp
testb
movsl
cmp
test
sti
adc
pop
inc
sbb
dec
adc
push
or
pop
xchg
hlt
std
xor
lods
mov
pop
xchg
push
inc
test
iret
push
dec
andb
aaa
pop
mov
dec
sbb
fwait
jnp
cmpsl
sub
adc
add
fwait
sbb
sbbl
xor
in
mov
aaa
adc
cld
jb
pop
xor
mov
inc
add
inc
fwait
mov
out
or
push
loopne
cld
xchg
sbb
stc
cld
cld
in
sti
scas
movsl
clc
inc
mov
pop
cmc
xchg
xchg
ds
lret
icebp
adc
adc
pop
movsb
push
sbb
inc
and
stos
push
adc
sbbl
and
xor
and
pop
pop
dec
dec
rcr
test
or
hlt
sbb
push
lret
mov
pop
ljmp
retw
mov
pop
mov
xchg
nop
rorb
mov
mov
outsb
mov
mov
stos
jno
out
mov
xor
and
xchg
cmp
outsl
lods
sbb
sbb
in
push
push
repz
nop
pop
rcll
and
bnd
and
insb
mov
pop
cmpsb
push
mov
jo
fstpl
jb
movsl
sbb
add
inc
inc
scas
lcall
and
dec
das
ds
pop
inc
dec
mov
in
or
orl
jl
sbb
xor
dec
ret
cmc
adc
push
adc
stc
lods
or
sbb
aam
xchg
mov
or
sbb
sub
mov
or
aas
jne
dec
and
jno
aam
push
jmp
jns
lret
mov
pushl
int3
add
lret
test
aam
pushaw
pop
rclb
add
xor
mov
leave
mov
jns
xor
out
dec
push
cmp
das
adc
pop
push
icebp
call
shr
push
sbb
out
push
fwait
outsb
nop
popf
inc
push
push
mov
enter
fs
in
cwtl
adc
adc
push
cmp
xchg
icebp
pusha
dec
xchg
and
movsb
pushf
inc
out
inc
setbe
pop
mov
mov
xchg
pop
pop
pop
sub
ss
cld
hlt
pop
xlat
call
push
mov
hlt
insl
xor
mov
and
lods
add
ja
fs
add
leave
jecxz
hlt
pop
out
and
call
test
ja
or
jp
lea
sbbl
test
sub
lock
mov
mov
adc
popf
inc
or
loope
push
dec
jnp
adc
jg
lds
mov
es
fbstp
pop
fidivrl
lahf
lahf
pop
into
lock
pop
lea
fldcw
ret
cmp
fstpl
das
sarb
lods
or
cmc
es
mov
pop
sbb
cwtl
aam
cmp
test
or
fimull
mov
and
fnstsw
in
dec
adc
mov
outsl
out
and
test
or
jmp
mov
dec
push
decl
add
adc
jno
call
mov
imull
inc
ds
ror
aaa
lret
stos
inc
in
add
in
dec
lcall
dec
test
jl
push
movsl
pop
mov
xchg
faddl
testb
icebp
push
mov
cmp
inc
mov
push
fldln2
repz
outsb
mov
jno
and
inc
test
out
popa
mov
test
es
mov
sub
mov
pop
popf
int3
loope
cli
dec
pop
lcall
jge
data16
mov
popa
push
push
mov
sbb
xor
sbb
or
nop
jnp
mov
cmp
mov
outsb
jne
or
test
or
pop
sbb
insl
arpl
cltd
stc
hlt
cmp
pop
add
das
cmp
into
dec
dec
notb
adc
and
je
jge
aaa
repz
je
jb
sbb
sbb
ds
xor
sbb
popa
int
adcb
pop
sahf
mov
jns
je
mov
in
lcall
cmpsb
inc
or
and
scas
test
aam
out
incl
js
push
insb
call
push
push
fnstenv
out
xchg
mov
scas
jns
in
ret
push
jns
fcoml
lret
jge
fsubl
mov
push
pop
lret
sub
aaa
subl
hlt
jecxz
cmp
divl
fsubs
data16
dec
mov
jbe
mov
sub
xchg
sbb
ret
stos
lea
test
lret
imul
call
mov
push
mov
pop
mov
out
cmp
fcomps
add
daa
push
iret
mov
test
xor
rcrb
lea
xchg
adc
aam
cmp
aas
loope
fmull
mov
mov
mov
popa
xchg
sub
pop
cmp
cltd
hlt
stc
adc
aaa
icebp
adc
jne
dec
cmp
lcall
in
scas
jno
jmp
jecxz
push
mov
imul
xor
push
imul
iret
inc
mov
xor
ja
dec
gs
pop
rclb
and
repz
loop
and
cmpsl
jno
pop
sub
dec
lret
push
pop
mov
aaa
push
mov
ficoml
sahf
jbe
sub
ljmp
cld
outsl
aaa
pushf
cmpsb
insb
fmul
cwtl
dec
fnsave
or
adc
iret
in
mov
sbbl
or
adc
pop
jge
lahf
aaa
lods
test
lahf
lods
and
mov
adc
cld
ret
lret
push
lret
inc
or
add
mov
add
mov
cmpsl
sub
jae
mov
xchg
outsl
push
adc
xor
repz
dec
mov
inc
add
add
mov
jno
mov
lds
inc
and
pop
push
mov
imul
inc
lahf
inc
mov
push
nop
popa
dec
xor
inc
sbb
sbb
jp
popf
into
mov
mov
mov
sub
daa
int
xlat
cltd
fmulp
scas
loopne
ret
add
dec
jge
testb
or
fsts
xchg
and
dec
cli
rolb
aad
in
push
fstpt
lds
push
cmp
cmp
inc
testb
jne
js
fimull
mov
xlat
dec
outsb
jno
fdivrl
shlb
ret
xchg
cmp
fbstp
mov
push
or
stos
xor
inc
sub
pop
xor
jge,pt
push
cld
movb
std
xor
or
aam
add
mov
rcr
push
rolb
shll
cmp
add
xor
pop
ficoml
xchg
aam
or
js
xor
stos
bound
pop
int3
add
leave
std
enter
pop
pop
ss
test
pop
sub
lods
sbb
mov
adc
test
mov
jecxz
xchg
fcompl
inc
or
cltd
clc
rclb
mov
sbb
imul
inc
adc
mov
xchg
lds
pop
dec
aaa
fidivs
cmp
mov
and
loope
setb
lret
out
or
jle
dec
movsl
fsubrs
push
hlt
jno
aam
sbb
rorl
or
into
into
push
add
ret
jge
aaa
sub
test
lahf
jne
movsb
or
std
mov
scas
call
add
fists
das
adc
popf
lock
aam
adc
sti
ds
and
push
bound
scas
loopne
movsb
push
mov
push
add
xchg
rcl
mov
into
inc
add
push
fxch
inc
lret
add
les
insb
inc
push
jae
pop
insb
sub
xchg
gs
popf
sbb
cmpl
mov
jo
sub
push
pop
repz
push
jl
ljmp
xor
pusha
rcrb
fwait
push
repnz
sbb
mov
jns
xor
cmp
ret
and
fistpll
cwtl
push
movsl
xor
xlat
dec
out
icebp
xchg
xor
adc
inc
pusha
mov
cmp
test
dec
sbb
pop
adc
cmpb
push
cmp
mov
or
int3
repnz
xor
inc
add
push
int3
negb
sub
xor
xor
sub
cmc
addr16
es
mov
xchg
pop
add
popa
clc
sarb
imul
cmp
mov
mov
xor
adc
mov
xchg
push
adc
pop
push
aas
adc
repz
ret
lds
bound
sahf
sbb
pusha
cmp
mov
xchg
xchg
rcl
add
popf
jl
or
adc
xchg
rep
and
mov
out
lock
push
adc
sahf
hlt
mov
imul
or
or
push
pop
cmp
pop
sti
jo
mov
jnp
cmp
clc
dec
imul
popa
xchg
scas
mull
inc
leave
mov
mul
lahf
mov
sub
iret
xor
adc
jnp,pt
std
out
jno
test
mov
or
or
iret
inc
xor
std
mov
shrl
and
shlb
pop
scas
cmp
adc
lds
push
mov
inc
mov
mov
cmpsl
outsl
and
lock
xor
fsubrl
popa
jg
and
mov
outsb
shl
divl
cmpb
popa
jbe
dec
insl
fldenv
jbe
push
sahf
scas
fdivrp
inc
push
into
adcl
mov
movsb
aaa
and
movsb
ja
or
inc
mov
lods
ret
adc
pop
fnstenv
stos
int
jg
lcall
push
je
dec
adcl
mov
jb
rol
mov
and
mov
mov
insb
add
jne
arpl
lahf
dec
add
mov
mov
pop
aad
push
mov
scas
push
inc
adc
jae
bound
mov
push
cmp
jo
bound
pop
adc
dec
into
push
adc
in
sbb
mov
mov
mov
arpl
adc
adc
xchg
ret
dec
cld
roll
xchg
ss
leave
addl
push
inc
sbb
and
mov
jl
enter
xor
dec
cs
fisubrl
stos
push
pop
mov
jg
lods
fwait
lock
in
lea
xchg
shlb
dec
out
jmp
cld
lods
mov
rorl
mov
mov
aad
jmp
mov
mov
mov
adc
stc
adc
inc
lret
or
mov
or
cmc
arpl
sub
xorl
mov
cli
jne
leave
lret
mov
sbb
arpl
pop
pusha
pushf
data16
sub
mov
lea
pop
add
loope
mov
inc
jecxz
dec
pop
lock
adc
adc
stc
mov
jbe
lea
fnstcw
mov
out
popa
mov
sub
addr16
inc
add
out
add
leave
mov
xchg
mov
mov
test
outsb
stos
lahf
xchg
stc
xchg
xor
popf
ljmp
jb
pop
mov
outsl
add
in
dec
inc
loopne
andl
out
data16
xchg
cmp
inc
cmp
insl
jp
cmp
hlt
jp
inc
loopne
and
out
fldcw
cmc
dec
sbb
xlat
mov
dec
lock
icebp
das
dec
pusha
adc
push
std
cltd
leave
stc
push
lahf
mov
add
inc
shr
mov
addr16
aad
add
aad
rcrb
in
je
int
test
pop
in
or
lcall
int3
mov
inc
ds
loopne
mull
incl
mov
or
push
into
cmp
jno
jns
push
cmc
std
js
mov
xor
fwait
int
sti
ds
push
push
dec
or
rorl
daa
push
cmp
push
pop
sbb
xchg
outsb
dec
dec
int3
lahf
cmpsb
jo
sub
inc
out
and
pop
clc
adc
ret
jp
jno
sbb
add
sub
dec
xor
pushf
mov
pop
dec
mov
leave
xchg
imul
cmp
daa
pop
and
mov
push
cmp
push
iret
lret
insb
mov
jl
dec
lahf
dec
add
rorl
rclb
jb
and
mov
and
or
adc
or
sbb
loope
movsl
jnp
and
ror
hlt
xor
jmp
ret
push
mov
fwait
js
pop
and
inc
lods
mov
fsub
js
out
mov
bound
cmp
aam
mov
jbe
mov
and
mov
shl
imul
mov
cmp
stc
es
aas
pushf
xor
jne
xor
mov
leave
jb
sub
stos
les
pusha
inc
cs
jge
nop
and
out
stos
fsubr
xor
notl
mov
aad
in
lea
ss
data16
dec
int
push
xchg
stos
mov
insb
cli
test
adc
rol
les
lds
lsl
int3
fildll
pop
mov
sbb
ret
arpl
inc
cmc
xor
bound
push
adc
push
ret
dec
pop
inc
mov
xor
fistpl
sahf
idivb
dec
push
mov
aas
adc
out
add
or
inc
in
pop
xchg
fiadds
lcall
jns
cltd
lods
mov
inc
inc
mov
cmp
lret
push
mov
sub
leave
inc
xchg
int
sbb
mov
stos
xchg
repz
scas
mov
cld
pop
pop
xchg
out
push
test
dec
sub
mov
xor
push
mov
test
push
jmp
movsl
jmp
test
mov
jnp
xchg
sub
sub
mov
shrl
sub
xor
mov
mov
push
sahf
pop
mov
xchg
int3
sahf
aas
xchg
mov
shl
xchg
add
out
dec
jns
in
stc
or
jmp
fwait
xchg
cmp
push
xorl
or
bound
lea
or
lods
fs
mov
and
mov
test
xchg
out
mov
inc
xchg
out
pop
and
jb
push
out
sti
adc
push
rcrl
ss
jmp
lcall
sub
push
dec
mov
jmp
cmp
dec
lcall
int3
imul
or
outsb
xchg
xor
je
pop
loopne
outsl
test
cmp
pop
or
aaa
das
ja
aam
mov
mov
lret
je
ss
xchg
mov
hlt
shrl
sub
inc
xor
lods
cmp
add
mov
dec
xor
sbb
push
loopne
and
insb
lds
add
jp
out
stos
icebp
pop
insl
fsubrl
mov
jno
cld
xor
fwait
pop
std
sub
and
ret
mov
and
pop
ds
lods
jb
push
fcompl
inc
pop
es
pop
fldenv
mov
mov
xchg
dec
imul
lock
mov
pop
mov
enter
ss
jmp
xor
mov
jo
inc
int3
test
ljmp
or
aad
cmpsb
mov
imul
icebp
sarl
aad
mov
dec
dec
rcrb
bound
cmp
jnp
sub
test
push
push
jno
mov
dec
cld
xlat
adc
cmpsb
pop
stos
cwtl
mov
push
sbb
insl
ret
in
adc
mov
outsl
loop
aam
lahf
mov
test
movzbl
cld
cmp
loopne
xchg
mov
cli
jo
loop
cmpb
mov
fsubrs
mov
fcompl
aad
lds
adcl
filds
push
xorl
mov
lahf
xlat
dec
repz
xor
xor
rcrb
sub
int
cmpsl
mov
aad
lods
out
stos
das
pop
add
nop
ds
cmp
in
mov
movb
rcr
mov
clc
inc
mov
movsl
mov
jp
hlt
mov
mov
inc
mov
insl
cmp
jg
mov
add
adc
adc
pop
rorb
mov
and
xor
aaa
or
dec
or
and
insl
and
sbb
icebp
push
push
aam
lret
mov
jle
js
adc
sbb
push
std
sbb
mov
pop
rolb
xchg
xor
and
in
cmpsb
aad
leave
cwtl
subb
mov
sub
hlt
test
pop
lea
add
xchg
lods
xor
lcall
sub
mulb
test
sub
inc
cmpsb
dec
repnz
notb
xor
mov
inc
sbb
arpl
adc
adc
sbb
xchg
lods
loopne
ss
inc
pop
sbb
insl
inc
jmp
inc
cmp
mov
sbb
mov
sti
xchg
xlat
xchg
iret
push
pop
xor
inc
std
mov
sub
cmpsb
push
xchg
jl
mov
xchg
test
inc
push
push
daa
pop
cmp
repnz
inc
jl
mov
cmp
add
sbbl
jecxz
pop
repz
test
xchg
inc
xor
scas
ficompl
jmp
les
add
fcoms
pop
push
or
and
sbb
xor
jl
inc
pop
mov
lock
in
aam
pop
jne
fisubl
xchg
in
pop
and
dec
mov
decl
cmp
cmp
mull
jl
in
or
fxch
inc
xchg
pop
neg
cmp
pop
push
add
pop
sub
xor
pop
popl
add
stc
ss
lods
mov
test
sub
fsubr
ja
mov
cmpsb
dec
or
data16
stos
out
fsubp
pusha
lock
lahf
test
lods
sbb
xor
mov
push
test
lods
divl
mov
test
add
shlb
jp
mov
mov
test
cmpsb
sti
cmpsb
sbb
lcall
js
lcall
push
pusha
ret
mov
cli
mov
fcompl
sub
sahf
dec
dec
stos
push
push
cmpsb
out
dec
adc
inc
xor
pop
push
or
shll
pop
or
shll
jnp
xor
dec
fsubrs
cmpsl
xchg
in
ja
sbb
xchg
mov
adc
ficoms
jb
in
dec
lcall
jp
sub
sbb
add
test
ret
sbb
mov
pop
insb
cmp
jp
ficomps
dec
inc
cmc
cli
ljmp
arpl
or
sbb
mov
cltd
sub
es
je
mov
outsl
push
cmp
mov
clc
push
dec
add
call
shrb
xchg
popf
xor
scas
sbb
int3
jbe
fs
mov
xchg
lock
xlat
xlat
add
sub
stc
sbb
cmpsb
outsl
mov
pop
add
decl
dec
xor
cmp
pop
mov
cmp
xchg
or
inc
adc
cmp
fsubrp
ljmp
push
loope
stos
les
jbe
fsubrl
dec
sahf
enter
cs
mov
and
sub
fiadds
or
mov
fcompl
repnz
inc
nop
sbb
popa
insb
jo
in
mov
and
in
ja,pn
jmp
int
sbb
orb
pop
add
lock
es
lret
insl
out
mov
test
stc
arpl
jbe
lret
pop
xor
popf
jl
adc
cmpsl
jae
mov
mov
jo
cwtl
sbb
pop
test
out
sub
lcall
sub
enter
fs
mov
pop
xchg
sti
xchg
frndint
ret
sbb
sbb
pop
lret
inc
cmp
jbe
xor
std
pop
cmpsb
or
xchg
cmc
mov
lds
xchg
push
pop
xchg
cmpsb
ja
and
ljmp
or
mov
jle
out
jb
jl
jns
inc
dec
test
push
push
gs
insb
js
mov
or
outsb
jl
pop
sub
fs
jne
and
adc
xor
xor
fldl
mov
xor
push
inc
pusha
sbb
push
arpl
xor
push
push
pop
repz
mov
push
adc
push
mov
mov
jecxz
jbe
push
add
pop
andl
sbb
cmpsl
mov
dec
outsb
mov
insl
inc
cli
push
repnz
shlb
cli
add
scas
aas
repnz
or
adc
and
mov
pop
hlt
sub
scas
outsl
and
or
or
ret
inc
or
jb
mov
or
push
call
adc
mov
jns
mov
ret
cmpsl
ljmp
mov
imul
add
mov
mov
repnz
fmuls
sub
mov
mov
clc
nop
in
pop
call
sbb
stos
jmp
test
ss
lods
sbb
out
outsl
sbb
aam
cs
mov
or
fildll
cmp
mov
mov
sub
xor
stos
pop
clc
into
add
ja
ss
xchg
mov
dec
arpl
cli
lahf
mov
and
test
jg
in
inc
and
dec
inc
aaa
dec
gs
lods
popa
and
add
loopne
xchg
cmpsl
icebp
cli
jno
adc
ud2
xchg
xchg
pop
mov
and
pop
and
xchg
jno
adc
fld
add
cli
sub
mov
les
movsb
xor
or
stc
sbb
jmp
jno
and
fidivrl
mov
lods
mov
add
ss
stos
inc
mov
add
inc
push
insb
xlat
out
lea
pop
lea
mov
out
mov
dec
aam
fs
add
arpl
ret
pop
cmp
je
fucom
loop
or
xor
mov
sar
sbb
out
mov
xor
sub
jae,pn
adc
aaa
sbb
and
lahf
jnp
xchg
mov
jecxz
loopne
sub
pop
mov
xor
shr
push
bound
pop
sahf
mov
push
mov
out
das
fmuls
mov
popa
mov
das
add
push
div
test
or
dec
cmp
sarl
int
mov
dec
stos
jns
pop
cltd
data16
inc
insb
gs
stos
mov
xor
or
sbb
adc
shll
sbb
xchg
jmp
mov
adc
sahf
ret
push
jae
pusha
jnp
mov
add
in
shll
into
jmp
imul
aaa
xchg
and
movsl
in
mov
int
mov
loope
adc
loopne
mov
lahf
popa
and
pop
mov
cwtl
cltd
fstl
or
add
out
cwtl
mulb
mov
sbb
insb
pop
test
rcll
out
push
push
jp
or
dec
pop
jg
xorb
clc
cmp
imul
mov
test
fsubrs
dec
arpl
sbb
pop
lea
push
jae
sarb
es
jl
pusha
dec
jae
or
std
pop
rcrb
mov
rcrl
aas
aaa
test
or
sbb
orl
adc
sahf
fisubrl
lret
pop
icebp
or
out
fsubs
xor
xchg
dec
sahf
cwtl
fwait
popf
xchg
adc
shr
mov
mov
and
lcall
add
sbb
jb
sub
inc
les
add
arpl
je
iret
xchg
movsl
test
jb
mov
xor
fidivrl
dec
push
sti
test
std
mov
jne
out
ret
mov
div
or
pop
fdivrl
sbb
nop
mov
aam
sbbb
scas
mov
mov
int
in
xor
mov
aad
notl
test
fidivl
mov
adc
cld
inc
add
sub
pop
test
sub
add
jle
sub
sbb
outsb
mov
out
test
test
pop
rcl
lods
lret
in
or
pop
pop
or
fistpll
out
xor
xchg
jg
dec
push
push
popf
pusha
xlat
xchg
push
pop
mov
sub
sbb
jp
mov
rorl
mov
movb
push
rclb
lret
or
rclb
sarb
and
fcmovbe
sbb
cmpsl
sbb
addl
movsl
out
xchg
js
and
mov
arpl
aam
lds
push
dec
mov
incb
mov
mov
mov
stos
insb
shrb
jg
xchg
js
push
xchg
xor
jae
fs
lock
push
scas
cld
std
adc
jmp
or
jno
push
pushf
in
xchg
fdivr
push
push
mov
xchg
add
xor
pop
pop
imul
dec
and
stos
rcrl
lock
sub
dec
sbb
inc
push
insl
cmp
mov
mov
adc
loope
out
dec
add
jle
lods
lods
cs
popa
xor
jnp
stos
jb
adc
mov
add
ja
les
lcall
iret
or
ljmp
cli
xor
jo
lock
fdivrl
repz
dec
popf
push
sbb
push
sub
shl
sbb
xor
ret
sbb
mov
cmp
mov
xchg
mov
adc
pushf
test
dec
fdivrp
jns
inc
fwait
mov
test
addl
mov
shrb
jb
mov
and
jmp
fidivrs
in
dec
jp
roll
pushf
call
fwait
xor
jnp
mov
fidivrl
push
insl
pop
push
out
xor
outsl
and
xchg
loop
mov
xchg
rorb
xor
lea
test
js
movsl
in
xchg
lods
sbb
aas
lods
in
add
shll
lock
xchg
repnz
adc
gs
jecxz
lret
lret
or
mov
pusha
cmc
add
fiadds
lds
popf
xor
push
mov
mov
xchg
arpl
push
shrb
fstpt
push
dec
mov
test
iret
ja
sbbl
je
and
test
call
lock
insb
cmp
lret
pop
das
cmp
cmp
data16
or
cmpsl
cmp
outsb
adcb
dec
insl
aaa
mov
push
mov
fcoml
push
inc
and
xor
mov
repz
ljmp
and
jmp
add
outsl
in
loop
and
pop
popa
pusha
mov
dec
testl
ljmp
dec
xor
xor
stos
mov
loope
loopne
stos
jne
pop
mov
and
push
pop
push
imul
jecxz
test
jl
push
js
scas
aad
inc
inc
mov
mov
cli
dec
mov
jge
push
in
adc
in
sub
test
mov
hlt
stos
adcl
sbb
jl
movsl
flds
aaa
xchg
adc
lea
lcall
add
adc
push
std
dec
jmp
pop
gs
push
imul
push
mov
aaa
bound
dec
rcrb
call
cmp
in
xchg
in
fcmovnu
dec
push
and
scas
or
imul
push
jns
js
fstpl
ja
cltd
int
sbb
ret
and
ja
outsl
jp
or
jo
cmp
mov
loopne
lahf
aaa
cmp
rclb
test
sub
sub
push
sbb
icebp
stos
nop
add
cwtl
lea
and
pop
xor
pop
xor
jns
push
rcrb
out
popa
adc
push
dec
and
pop
cmp
push
sbb
mov
leave
std
xchg
daa
xchg
push
nop
or
inc
or
sar
xor
mov
mov
xor
out
fmul
xchg
movsb
mov
xor
andb
push
movsb
push
dec
int
and
popf
loope
add
jmp
sub
xor
jl
in
jae
jp
cmpsb
jmp
adc
inc
aas
cltd
mov
adc
iret
push
popf
jle
dec
xor
in
stos
outsb
add
sbb
adc
push
and
cmp
cli
sub
cmp
mov
cwtl
push
xchg
sbbb
jmp
enter
xor
insb
xlat
pop
adc
and
add
lods
jnp
xchg
and
mov
add
adc
jnp
fsubrl
add
jae
add
xchg
xchg
repz
std
leave
and
outsl
movb
lea
and
mov
in
outsl
mov
testl
xor
mov
test
mov
call
mov
push
lock
pop
mov
int3
shrl
cwtl
rcrl
sub
xor
pop
mov
addr16
js,pn
xchg
and
lret
sarl
stos
pop
pop
pop
leave
jp
or
adc
icebp
in
sub
out
jne
stos
add
loopne
arpl
stc
dec
pop
jge
ret
testl
sub
jnp
movsw
cmp
ljmp
xor
movsb
xor
sub
mov
test
cli
add
jne
inc
xor
mov
mov
out
xor
lds
test
sbb
adc
pop
push
sbb
sti
pop
sub
or
ljmp
cmc
adc
mov
gs
xor
loope
xchg
fdivl
jg
sbb
pusha
sub
jnp
xor
add
cmp
popf
xor
in
add
xor
mov
cmp
or
add
rol
in
enter
sbb
das
stc
mov
hlt
xchg
aas
call
jp
mov
aaa
add
jno
lea
xchg
xchg
ss
ret
mov
out
jle
xor
test
xor
xor
inc
cltd
adc
in
push
cmp
mull
adcl
inc
fndisi(8087
pop
mov
push
lods
xchg
test
mov
pop
push
je
jecxz
lret
lret
xchg
shl
sbb
xor
mov
in
cmp
pusha
push
mov
cli
sbb
ja
cltd
dec
fmuls
mov
pushl
pusha
or
mov
hlt
dec
jmp
imul
out
push
les
mov
adc
cwtl
pusha
and
push
jns
jl
cmpsl
lock
aam
pop
push
outsl
negb
mov
push
jbe
mov
inc
loop
loope
mov
mov
inc
bound
nop
iret
jp
fsubl
mov
mov
jecxz
xchg
in
and
mov
cmpsb
jnp
scas
jle
stos
inc
cmp
jne
cmp
pop
and
lods
sbb
sbb
mov
jge
fidivrs
mov
das
mov
adcb
jmp
popa
mov
shl
out
addr16
xor
pop
add
jle
inc
or
sbb
push
xor
inc
jecxz
inc
repz
mov
jb
out
dec
cmp
sub
xchg
sbb
xor
dec
mov
push
outsb
sbb
adc
popf
lods
jne
jecxz
and
push
mov
xor
inc
lds
xor
xchg
popa
push
jl
and
pusha
cmp
lock
push
lods
fsubrl
clc
gs
inc
sub
icebp
push
jne
dec
or
ja
gs
push
idivb
or
mov
mov
pop
imul
mov
adc
test
fsubr
xchg
cmp
rorl
fbstp
xchg
add
push
repz
sub
ret
testl
push
loop
out
js
xchg
cmp
dec
popf
ficoml
pop
dec
aam
rclb
ret
push
xchg
or
xchg
dec
adc
mov
dec
dec
cmpsl
pop
dec
fisubs
imul
idivl
or
mov
idivl
push
ror
and
fnstcw
and
mov
mov
icebp
cmp
cmpsb
jp
jb
jnp
cmpsb
leave
test
popf
mov
push
jge
pop
adc
and
aaa
imul
push
pop
sub
sysexit
test
out
iret
test
divl
test
jne
mov
aam
call
cmpsl
push
mov
outsb
mov
dec
pop
mov
ljmp
inc
pop
cmpsb
jne
test
push
cs
popa
addr16
idivl
xchg
pop
lock
or
xor
icebp
dec
enter
in
aam
test
adc
test
adcb
add
and
stos
cmp
dec
test
les
jo
outsl
pop
cmc
ret
push
jo
sbb
in
sbb
outsl
stos
ss
in
scas
sub
jg
sahf
mov
sub
sbb
jg
inc
jecxz
pop
cmp
jbe
sbb
mov
lahf
dec
xchg
movsb
inc
aad
ret
in
insl
pop
push
icebp
nop
out
xchg
imul
or
xchg
fs
jno
jmp
int
dec
mov
sbb
addr16
and
jge
push
xor
lcall
ror
rclb
lret
sbbb
call
pop
fwait
out
jge
and
nop
mov
jp
xor
mov
jl
mov
inc
call
cmpsl
sbb
mov
dec
repz
out
mov
mov
dec
lock
xlat
fidivrl
push
repnz
fildll
sbb
push
jmp
lret
mov
cmp
in
inc
pop
adc
movsb
cs
cmp
movsl
sbb
pop
orl
jb
jmp
bound
jbe
jl
data16
aas
cmp
add
insb
mov
jo
js
pop
lret
add
fcoms
jne
scas
gs
dec
jle
and
movsb
data16
inc
ss
outsl
loopne
mov
jb
fdivrs
and
lahf
scas
pop
jne
ss
pop
sarl
fnstcw
mov
and
mov
in
test
xor
mov
cld
or
dec
and
fcomi
fidivrl
popf
sbb
xor
divl
lods
push
cmp
cld
add
xor
sub
inc
arpl
insb
mov
test
pop
call
inc
add
mov
out
sub
add
pop
pop
daa
fsts
inc
outsl
xor
jae
jecxz
mov
insl
scas
add
push
in
push
and
loopne
pop
jnp
lcall
inc
dec
push
out
add
outsb
icebp
and
push
out
idivl
lods
hlt
pop
scas
mov
jo
pop
ret
add
jl
xor
outsb
aam
test
pusha
aad
dec
fwait
mov
or
rcrb
sbb
ret
fiaddl
sub
aad
jmp
pushf
dec
ds
jl
fsts
les
inc
clc
addb
jb
jo
into
sub
loope
adc
lods
pusha
das
je
fbstp
xor
scas
imul
mov
adc
pop
shrb
pop
jne
xchg
xchg
adc
sbb
inc
retw
pusha
push
xlat
mov
mov
and
pop
pop
push
call
decl
outsb
xchg
xchg
xchg
inc
test
in
mov
call
test
mov
adc
cmp
mov
mov
jp
mov
adc
in
hlt
pop
inc
insl
ja
ja
popf
pop
test
sahf
popf
jg
mov
fstl
mov
mov
lods
mov
sub
mov
cmp
dec
xchg
pop
pushf
pop
and
mov
pop
jne
out
hlt
lea
adc
jns
fs
fdivs
jne
mov
inc
je
cmpsb
fistpll
fldt
adc
imul
lds
inc
mov
sub
mov
xor
adc
lock
loope
pop
jle
adc
idivl
adc
arpl
mov
fwait
icebp
pop
and
ret
arpl
lds
pop
jp
cmp
in
mov
xor
sahf
mov
test
mov
shlb
fiaddl
aaa
dec
lret
mov
sbb
imul
adc
addb
lret
out
mov
mov
mov
es
shlb
xchg
stos
test
cmpsb
push
mov
dec
mov
ds
arpl
rclb
fcmovbe
std
pusha
jno
cmp
mov
mov
inc
xchg
popa
ja
or
xchg
cmp
idivb
lds
jae
stc
mov
cmp
jns
lock
or
rorl
xchg
mov
out
iret
stc
testb
adc
aam
mov
jmp
and
rcll
in
mov
sub
cmp
mov
inc
stc
setne
mov
repnz
sbb
inc
cmpsb
sub
mov
icebp
cltd
pop
js
jmp
cmpsl
outsl
scas
nop
add
push
loop
ds
stos
es
hlt
sbb
jle
das
ret
ss
mov
outsb
adc
int
bound
inc
or
cmp
data16
out
pop
fwait
popf
jge
xchg
xchg
jo
stc
lcall
sbb
xor
enter
xchg
push
xchg
loope
jno
dec
adc
inc
inc
xor
lcall
pop
jno
push
insb
or
movsl
ret
dec
movsl
inc
ja
inc
ret
movsl
std
push
jmp
sbb
xchg
into
out
in
icebp
into
daa
mov
addb
imul
imul
add
shrl
cmpsl
idiv
and
cmp
test
dec
sub
jmp
push
arpl
push
int3
jg
into
pop
dec
sbbb
sub
negb
test
das
jb
mov
ss
adc
mov
push
cmp
jge
add
pop
xor
adc
mov
out
pusha
pop
push
push
jmp
add
mov
in
pop
and
cmovb
jg
mov
lds
mov
adc
or
xchg
push
fdivrp
dec
loopne
insb
pop
std
mov
mov
or
lahf
jb
xchg
nopl
jae
test
dec
and
jno
and
cmc
ljmp
ljmp
jl
sub
jne
inc
cmp
jp
sub
bound
call
test
fstl
mov
negl
mov
mov
xchg
pop
sub
lds
push
push
push
aad
push
data16
jne
or
stos
repnz
sbb
popf
lahf
adc
repnz
jmp
or
mov
adc
pusha
out
and
xchg
push
ds
xchg
enter
icebp
or
mov
inc
xchg
test
add
insl
jb
dec
xlat
sbb
in
mov
sbb
mov
xlat
sub
mov
push
inc
pop
mov
repz
sbb
inc
inc
mov
jmp
lret
pop
jne
lret
jecxz
test
push
add
adc
loopne
aam
or
mov
xchg
clc
scas
add
popa
mov
pop
adc
xchg
sbb
rcll
pop
add
xchg
add
repnz
sub
mov
std
push
fidivl
testl
inc
mov
push
cwtl
cmp
mov
hlt
scas
add
sar
or
ja
leave
xchg
ds
pop
ljmp
mov
daa
and
movsb
test
loopne
mov
sbb
mov
fisubrl
cld
jecxz
dec
xchg
push
out
adcb
jge
push
fmulp
sbb
gs
cmp
movsb
out
fcmovnbe
ret
or
in
xchg
and
test
mov
je
arpl
insl
loopne
add
mov
aad
and
push
enter
cmp
sti
or
or
cli
aaa
adc
gs
lret
add
sub
xor
mov
xorl
arpl
mov
in
out
and
mov
sub
mov
and
sub
call
add
pop
iret
dec
loope
xlat
adc
mov
push
out
out
mov
mov
xchg
dec
into
mov
mov
les
int3
mov
inc
pop
push
mov
test
in
test
repz
push
andb
ss
jne
mov
jbe
inc
enter
adc
inc
in
pop
inc
jl
xor
add
rcl
mov
pop
sub
fnstcw
dec
push
cmp
push
in
xor
jno
mov
fnstsw
fimuls
sub
adc
shlb
popa
push
inc
shll
cmpsl
sub
add
jecxz
clc
lods
pop
pop
shl
or
adc
rcr
and
pusha
and
adc
jbe
int
and
or
xor
ja
ds
dec
inc
iret
xchg
idiv
rorl
out
mov
xchg
pop
bound
loop
insb
fsubrs
in
jle
dec
xchg
ficompl
sub
cld
ret
push
sub
mov
dec
sbb
pop
jns
inc
dec
movswl
sti
push
mov
sub
or
dec
push
sub
sub
out
sarb
push
sbb
push
mov
sbb
aas
fidivl
stos
gs
js
push
jg
lcall
repz
sti
cmp
shrb
test
lret
dec
ljmp
sub
mov
or
and
xchg
xor
lock
jae
dec
in
xchg
ja
sbb
stos
es
mov
jae
push
pushf
out
and
aad
sbb
dec
sub
add
xlat
mov
push
daa
push
or
addr16
jae
out
xchg
stc
aas
or
popa
pop
jnp
cmpsb
fs
out
mov
cmp
cmp
int
loop
inc
in
mov
jbe
cs
pop
sub
dec
mov
int3
testl
or
lahf
mov
iret
fmuls
out
push
jno
mov
mov
add
nop
cmp
rol
mov
push
cmpsb
aas
add
jle
movsl
out
pop
jmp
or
fbstp
or
xor
jo
add
mov
pop
js
sub
cmp
outsb
adc
and
jp
mov
loopne
out
push
inc
jecxz
lds
add
push
test
jo
std
pop
in
outsl
in
out
neg
dec
pop
pop
or
xchg
cs
mov
cmp
jmp
sti
dec
jmp
add
mov
repz
pop
mov
imul
sarl
jl
je
insb
inc
lods
push
es
cli
rorb
pop
rolb
aaa
add
add
jl
jns
add
nop
dec
pop
leave
mov
mov
sbb
adc
sbb
insb
sub
test
js
pop
dec
sub
iret
or
stos
jmp
movl
popa
jb
inc
stc
xchg
imul
inc
mov
sub
push
lods
in
cmp
or
lcall
dec
lea
push
push
in
sbb
xor
in
pop
jg
shlb
repnz
clc
test
cmp
mov
insb
rcll
push
cmp
scas
xor
mov
lods
popa
loop
adc
sbb
iret
hlt
int3
in
arpl
cwtl
lahf
push
jbe
bnd
sahf
dec
jge
mov
imul
imul
mov
jg
mov
inc
mov
pop
mov
jo
mov
or
insl
xor
fidivl
xor
adc
mul
pop
popf
inc
xchg
ds
rorb
neg
scas
and
mov
out
ret
pop
sub
in
ljmp
jb
dec
pop
scas
pop
ja
orb
dec
pop
adcb
pusha
sub
movsl
daa
faddl
dec
pop
popa
jns
or
and
cltd
dec
fidivrs
inc
ds
out
outsb
push
int3
lock
sbb
dec
add
dec
shr
sbb
fstp
sbb
call
add
xor
mov
fcmovnbe
mov
insl
sahf
popa
repnz
insl
lods
push
and
icebp
sub
outsb
or
push
mov
inc
or
sub
mov
jmp
dec
lret
jle
sub
in
insb
cmp
mov
fdivl
aas
pop
push
lods
aad
std
loopne
mov
aas
push
jge
daa
sub
mov
popf
ret
sahf
stos
xchg
insl
dec
movsl
dec
sbb
stos
add
andl
or
add
movsl
xchg
cwtl
ljmp
test
adc
add
jle
xchg
xchg
iret
fisttpl
pop
jg
popa
mov
add
or
mov
push
int
push
inc
fsub
in
push
aas
std
mov
sub
add
jle
push
sbb
cld
add
mov
adc
fcos
cmpsl
frstor
pop
dec
cmp
int
inc
xchg
sbb
cltd
mov
stos
jb
push
jno
movsl
imul
fs
sbb
or
jns
je
icebp
sahf
in
or
incl
int
cli
sbb
ds
popf
in
jno
test
sub
and
fstps
pop
int
addr16
fisubl
adc
negb
pop
in
lret
cmpsl
add
xchg
pop
jge
or
add
rcrb
stos
xchg
and
cmc
scas
pushf
and
push
add
out
orb
bound
xchg
push
sub
imul
pop
mov
xor
mov
mov
outsb
ja
xchg
push
xor
pop
lds
stos
shlb
jne
scas
daa
leave
ss
scas
inc
iret
adc
loope
xor
xchg
dec
loope
imul
int
sbb
pop
xchg
out
xchg
push
dec
inc
pop
adc
insb
inc
je
fnsave
xor
sub
pop
jl
mov
outsl
std
xor
loopne
or
shrb
dec
js
lods
ljmp
jge
sub
xchg
icebp
cld
mov
loopne
orl
imul
and
sub
mov
mov
push
in
sbb
mov
scas
mov
mov
lea
testb
xchg
xor
mov
pop
sub
cmp
int
push
fsubrl
push
adc
push
mov
data16
mov
lock
cli
inc
adc
nop
loop
add
cmp
out
push
xor
fwait
add
inc
sbb
lret
mov
out
jne
xchg
roll
jae
and
filds
ss
test
hlt
inc
das
stos
aas
jbe
push
push
add
or
data16
cli
jecxz
repz
xor
mov
out
and
lret
fldcw
int
mov
addr16
pop
sbb
mov
test
inc
test
jmp
sbb
add
and
mov
rcrl
inc
popa
insb
inc
ret
jg
mov
sahf
shrl
inc
pop
sti
pop
pop
sbb
fstpt
add
jecxz
movsb
cmc
daa
and
sub
cli
orb
push
leave
mov
and
dec
pop
cmp
sbb
xor
mov
and
push
jge
jge
inc
idiv
fnsave
cmp
sbb
enter
xchg
xchg
enter
in
push
push
push
add
fwait
jae
loop
inc
sub
out
imul
roll
cmc
loop
jmp
pop
adc
pop
pop
call
adc
mov
js
mov
sarb
sub
test
sbb
pop
ret
cli
xchg
push
adc
mov
mov
gs
shrl
cmp
decl
inc
stos
in
imul
test
in
daa
das
and
gs
js
dec
lock
xor
xor
sbb
pop
pop
lea
mov
pop
jge
das
jae
push
jne
mov
mov
fldenv
pushf
rorl
mov
fisttpl
inc
or
rcll
clc
or
mov
lea
xor
mov
inc
insl
push
shlb
pop
loopne
adc
mov
jg,pt
sbb
jbe
ret
pop
jnp
aaa
xchg
popa
rcll
dec
lock
mov
popa
pop
loop
pop
sbbl
sarl
xchg
mov
and
jb
test
push
std
rep
add
js
xchg
pop
mov
inc
xor
sbbb
push
mov
in
lcall
and
ja
arpl
lods
push
outsb
xchg
mov
push
cwtl
addr16
out
xchg
add
mov
mov
fbstp
hlt
sbb
outsl
jne
stos
and
adc
sub
and
adc
sub
mov
dec
movsb
pop
push
cmc
shl
inc
mov
imul
mov
ret
test
sub
sbb
or
sbb
mov
jecxz
bound
jb
push
xchg
adc
or
xchg
mov
insl
xchg
jne
xchg
mov
push
lret
mov
adc
mov
and
outsl
mov
clc
pop
es
dec
inc
fstps
pop
sti
cmpsb
push
repnz
orl
push
repz
fistpl
loope
push
inc
sub
and
out
mov
jne
or
add
fcmovnbe
mov
ja
xchg
mov
int
loope
inc
leave
ss
arpl
jl
jle
inc
inc
add
int3
icebp
inc
fdivp
lcall
imul
and
sub
ljmp
mov
les
mov
sub
outsl
pop
jnp
adc
mov
fwait
mov
sbb
inc
insl
jns
cmp
mov
pop
lock
xor
cs
mov
or
push
sbb
jecxz
jg
mov
cmp
mov
xchg
mov
mov
sub
jle
iret
out
mov
mov
push
bnd
aas
xchg
popf
mov
add
fwait
mov
inc
in
sbb
nop
add
mov
sti
mov
mov
adc
scas
movsl
sbb
fidivrl
cmp
push
cld
jae
push
mov
loope
and
bound
loope
out
mov
mov
push
outsl
xchg
iret
mov
xor
js
jbe
mov
sbb
inc
add
imul
xor
into
xor
adc
outsl
enter
xor
mov
add
lcall
xor
mov
ja
lea
mov
add
orb
out
add
popa
cmc
lret
push
in
lock
js
xchg
sarl
rcrl
xor
sbb
js
std
or
sti
mov
jle
jb
xchg
lret
mov
movb
cmpl
imul
mov
xchg
adc
inc
pop
push
movsl
nop
cmp
mov
das
pop
stos
pop
in
pop
xor
mov
cmpsl
out
mov
mov
or
mov
inc
push
lods
inc
sysenter
mov
or
mov
xor
cmc
lods
enter
fdivrs
jo
pop
loopne
lods
test
mov
push
mov
mov
mov
repnz
mov
in
das
cmp
outsl
dec
sub
sub
xor
fs
int3
and
iret
inc
jg
and
push
jbe
inc
sbb
push
cltd
lret
cmpsb
adc
xchg
cmpsl
mov
or
push
lcall
inc
cmp
int3
dec
int3
jo
mov
add
jo
adc
es
test
jnp
stos
push
xchg
lea
pop
fs
mov
repz
mov
inc
and
adc
inc
nop
adc
xor
push
aaa
insb
push
test
mov
loop
shlb
xchg
cmp
xchg
scas
xor
ret
addr16
sarb
adc
icebp
pop
mov
jmp
mov
cli
xorl
push
mov
stos
movsl
mov
dec
jmp
inc
pop
pop
and
loope
shlb
push
out
insb
mov
sarb
js
or
out
mov
loop
push
call
or
mov
jb
repz
dec
inc
push
pop
fs
pushf
fidivrs
cmp
scas
push
aam
push
movsl
arpl
sub
cmp
push
mov
push
and
add
xlat
fcmovb
ror
mov
fisubrl
jp
adc
cmpsl
sbb
xlat
out
adc
cmp
dec
mov
xlat
xchg
pop
rol
loop
xchg
xchg
popf
addb
ljmp
pop
out
push
xchg
jb
lea
lret
popa
dec
mov
negb
icebp
loope
sbb
push
aas
je
cmp
mov
jns
sbb
push
stos
outsl
pop
adc
outsb
xlat
mov
jmp
andb
shll
lretw
pop
push
lahf
enter
sub
orb
scas
repnz
ljmp
mov
lret
in
sti
loopew
dec
clc
jnp
or
pop
addl
sbb
mov
and
in
hlt
adc
mov
mov
loopne
scas
mov
cmp
mov
mov
dec
xor
push
cwtl
mov
fildl
mov
jge
sbb
out
mov
int
mov
sbb
push
imul
rolb
jno
cs
xchg
push
insl
aas
cs
push
rclb
mov
hlt
inc
lahf
cli
mov
fnstenv
es
push
insb
and
or
lret
daa
ds
and
aas
inc
mov
dec
sar
call
push
pop
adc
mov
inc
movsl
or
xchg
hlt
lahf
loopne
jmp
jecxz
nop
mov
cvtps2pd
lret
adc
mov
decl
push
xor
int
lds
daa
popa
shrb
cmp
dec
xchg
fs
inc
mov
mov
cmp
push
cs
push
push
jb,pt
ret
lcall
and
adc
pop
je
cli
les
pop
adc
xor
push
fdivrl
test
dec
movsb
jl
nop
arpl
pop
enter
popa
ret
in
lahf
xlat
leave
adc
sub
xchg
mov
fnstcw
lret
mov
push
push
mov
outsb
pop
or
ja
push
mov
scas
cmp
cmc
negb
cs
mov
adc
mov
cmp
jno
dec
repz
insb
lock
pop
dec
mov
push
mov
call
cmc
hlt
xchg
and
and
jno
int
inc
cld
cmp
xor
stc
mov
faddl
cld
fsubrl
ret
inc
loopne
or
xchg
sbb
sub
pop
aaa
fcoms
sbb
int3
into
les
insl
jmp
dec
inc
xor
scas
xchg
push
cwtl
pop
and
or
or
xor
mov
testl
popf
jl
and
and
add
mov
cmc
dec
sub
jne
mov
push
popa
fidivrl
imul
adc
mov
jmp
aam
subb
test
sti
jecxz
arpl
gs
aas
dec
sub
cmp
inc
mov
mov
xlat
jecxz
mov
test
icebp
xchg
adc
add
clc
inc
fstpl
daa
xlat
jae
test
pop
cld
sbb
lcall
cmp
shr
push
and
sbb
adc
pop
xor
repnz
mov
sub
jge
cmp
xor
jge
sarl
xchg
xor
clc
inc
mov
adc
and
andb
sub
sbb
movsb
add
mov
mov
fistpl
ret
imul
cmpsl
mov
push
xchg
cmpsb
xlat
test
stos
cwtl
lcall
testl
jbe
fwait
push
sbbb
mov
push
insl
pop
cmp
mov
push
push
lahf
dec
jo
add
dec
loop
jnp
aas
outsb
leave
cld
add
sub
mov
lret
adc
sbb
hlt
and
sub
push
popf
data16
xchg
inc
gs
aad
jne
cmp
xor
int
jle
add
jns
jecxz
xchg
inc
scas
push
push
ss
and
push
sbb
and
dec
add
imul
mov
lahf
push
mov
scas
xor
adcl
fsts
lahf
inc
lret
adc
mov
test
icebp
push
les
xor
sub
jg
xchg
test
inc
mov
ds
mov
push
daa
pop
fnstsw
cmp
sub
add
mov
sarb
and
sub
jl
repnz
push
mov
js
add
fadd
add
test
shlb
dec
push
pop
xchg
fs
jns
or
lods
fcomps
nop
cmp
pop
mov
sbb
std
inc
test
add
mov
jb
inc
rcrl
es
scas
inc
mov
test
jecxz
add
mov
pop
cmp
cmpsb
outsl
xchg
jo
aad
fwait
and
jae
in
add
mov
sbb
dec
pop
inc
xchg
inc
ljmp
sbb
dec
mov
stos
mov
push
push
dec
loope
inc
aas
xor
ds
inc
in
or
mov
mov
add
and
pushf
cld
mov
test
fwait
lock
loop
faddl
rcll
roll
jno
leave
out
dec
ja
jo
inc
mul
loopne
cmpsb
mov
pushf
insb
push
sbb
negl
cmpsb
repz
adc
jns
or
pop
or
sbb
add
push
adcl
or
dec
aaa
xor
loope
jbe
test
jne
paddusw
aaa
xlat
shlb
aam
jb
mov
push
stc
adc
mov
out
pop
lret
cmp
insb
jns
or
mov
mov
xchg
or
pop
mov
mov
sub
or
push
jb
or
xor
mov
push
das
orb
or
fs
into
jmp
jbe
in
mov
jbe
mov
std
adc
fstpt
xchg
frstpm(287
pop
sarl
and
lret
lods
je
les
lock
sarl
mov
scas
jo
push
pusha
sbb
xchg
mov
clc
inc
mov
sub
push
rcrb
stc
pop
dec
lds
fcmovnu
sbb
push
cmp
pop
xchg
andb
pop
xchg
cmc
add
mov
xor
loopne
pop
and
xorb
nop
das
clc
pushf
mov
cmp
dec
data16
add
push
or
mov
sub
xchg
cmovno
pop
pop
test
adc
sbb
add
mov
sahf
push
fcmovu
mov
inc
lods
sarb
jae
hlt
in
sbb
push
xor
popa
hlt
mov
out
sbb
fwait
cmp
fstl
pop
add
arpl
and
xor
push
pop
mov
add
add
dec
inc
push
cmpb
pop
sub
mov
aam
lahf
outsl
pop
or
pushf
add
inc
nop
sbb
lcall
jno
popf
movups
and
loopne
inc
jns
xchg
loopne
add
test
mov
adc
sub
mov
push
loop
cmp
jns
xorl
fmuls
add
roll
jp
mov
adc
adc
lahf
adc
mov
mov
subb
or
or
clc
ja
pop
xchg
fdivs
fistpll
rorl
dec
pop
stos
out
jb
sub
daa
mov
cwtl
mov
inc
je,pn
call
stos
call
mov
leave
pslld
adc
mov
ljmp
push
sub
push
sti
cmp
mov
add
sub
adc
cmp
mov
ja
add
pop
shrl
pop
cs
int3
lock
dec
xor
sbb
std
iret
cmp
sbb
jno
shufps
mov
lods
pop
jb
stos
jmp
xchg
lret
testb
pop
mov
sbb
sub
push
jae
ja
mov
pop
xchg
sbb
fisubrs
arpl
ss
cmp
ret
mov
fsubl
and
popf
clc
pop
sti
stc
mov
sbb
fwait
cmpsl
ljmp
jecxz
fiadds
lret
pop
cmp
lock
mov
add
or
mov
jae
adc
jl
fwait
push
gs
mov
sbb
testb
jbe
cld
outsl
mov
xorb
arpl
inc
test
jl
xor
dec
mov
daa
rorl
mov
int
inc
loopne
test
imul
dec
dec
add
and
cmp
outsb
rcr
js
mov
je
jmp
sbb
imul
call
add
jo
xchg
sbb
arpl
inc
and
test
pop
xor
out
mov
dec
mov
push
out
inc
out
dec
bound
leave
das
rep
mov
sub
inc
or
inc
enter
stc
sbb
movsl
lcall
adc
adc
jge
add
nop
xchg
sarb
dec
xchg
cmpsb
jecxz
cmpsb
lcall
inc
mov
push
mov
out
pop
jo
movsl
jl
insb
push
mov
mov
xor
stos
xorb
test
dec
fwait
imulb
add
jae
fs
loopne
mov
jno
add
mov
andl
add
dec
sarl
fwait
out
push
mov
cmp
jmp
je
inc
mov
xchg
mov
push
mov
sbb
into
ret
mov
cmc
jnp
cmc
mov
ret
movzwl
xor
jne
xchg
sahf
jno
rclb
imul
popf
jg
nop
or
mov
sbb
faddl
push
xor
lret
sbb
insb
mov
mov
mov
popa
mov
imul
rorb
push
jns
arpl
mov
adc
sub
mov
mov
lds
xor
push
andl
and
mov
xor
cwtl
fstpl
push
pushf
shl
mov
mov
lret
mov
dec
popf
jecxz
inc
mov
ret
aas
add
icebp
test
sbb
and
mov
xchg
or
popf
repz
lods
addl
ja
push
stc
cmp
rcr
and
scas
imulb
pop
into
lcall
nop
or
in
insb
inc
adc
push
pop
mov
jnp
and
pop
dec
cmp
movsl
sbb
jecxz
aaa
icebp
sub
cmpsb
or
xlat
roll
imul
aaa
insb
cmp
pop
outsl
loopne
lods
sbb
ds
dec
mov
mov
adc
or
out
arpl
sbb
push
fnstenv
lods
sbb
fwait
xor
fildl
mov
adc
les
or
loope
aaa
sbb
clc
sub
popf
int
imul
outsb
cmp
or
push
imul
inc
outsw
jle
cmp
mov
mov
mov
add
or
inc
insl
sahf
arpl
push
sub
mov
daa
movsl
inc
xor
pop
addb
mov
push
mov
lea
data16
xor
cs
inc
addr16
mov
add
enter
mov
jb
and
stc
mov
cltd
cwtl
adc
mov
je
es
mov
mov
lds
push
or
sarl
test
inc
lahf
lds
xchg
sarb
mov
push
repnz
pop
sti
std
inc
shrl
mov
inc
popa
sub
mov
inc
lods
repnz
sub
in
in
add
xchg
jns
fwait
pushl
lods
jg
stos
fstpl
push
sub
inc
sti
dec
sub
in
icebp
xlat
cmp
sti
push
sbb
paddq
or
and
pop
data16
pushf
jge
fs
sub
lret
out
cmp
test
and
iret
test
xor
sahf
or
std
mov
gs
les
arpl
loope
jns
rclb
aaa
rcrl
dec
pop
cmp
nop
in
stos
and
ljmp
mov
fisubs
adc
repnz
xor
movsb
scas
push
mov
test
mov
lret
addl
inc
imul
cmp
or
inc
stos
push
lahf
push
movsb
movsb
xor
jb
aas
cmc
dec
call
mov
hlt
mov
xor
xchg
mov
outsl
jg
into
movaps
jmp
mov
dec
jl
stc
movsb
icebp
add
int
mov
aaa
jno
push
jne
mov
in
inc
sbb
mov
sbb
rolb
sub
fisttpll
ss
mov
jg
fidivrs
cmpsl
xor
loope
or
xor
repnz
aas
cmp
mov
mov
mov
movl
push
mov
gs
fwait
sub
cmp
and
pop
cmp
pop
aam
push
inc
dec
push
jp
pop
adc
fimull
dec
adc
scas
fdivrl
pop
dec
in
push
lods
sarb
pop
cltd
lret
aas
pop
lret
inc
js
and
mov
dec
xchg
mov
loope
adc
dec
out
cmp
sbb
jmp
xchg
mov
jecxz
add
adc
shrl
inc
cmpsb
lods
sub
shl
adc
flds
repnz
cmc
in
xchg
arpl
jns
insl
iret
aam
popf
pop
sbb
mov
mov
xor
nop
push
jl
jecxz
fildl
cmp
mov
xchg
dec
fcmovnu
mull
jl
jmp
push
and
pop
sbb
bound
pop
cmp
mov
out
mov
push
dec
inc
xchg
mov
push
sahf
ficomps
adc
dec
mov
dec
cmp
fiaddl
dec
push
push
shr
push
push
adc
adc
fidivrs
test
or
fcoml
lcall
sub
add
dec
test
jp
ja
stos
shl
and
ret
sub
ret
cmp
ja
mov
ljmp
divl
mov
in
xlat
jecxz
mov
pop
push
xchg
and
add
pop
data16
mov
call
mov
pusha
hlt
mov
gs
push
lret
imul
adc
add
xlat
lock
test
int
adc
daa
popf
mulb
push
xor
test
insl
add
jno
pop
jno
out
jg
out
aam
jle
sti
pop
bound
jns
mov
cmp
insl
lods
pop
add
outsb
enter
ret
inc
push
mov
std
xor
pop
cmpsl
sub
sub
sub
xchg
pop
sbb
rcrl
inc
stos
bound
lahf
xchg
in
cmp
mov
cmpl
repz
sahf
insb
das
sub
mov
jo
lds
out
dec
test
xor
sub
adc
push
push
adc
adc
fs
add
in
inc
jge
mov
adcl
cmp
push
shrl
sbb
shrb
inc
dec
jp
xchg
outsl
lods
push
fcoml
inc
dec
pop
sub
into
mov
test
movsl
arpl
adc
jle
out
mov
inc
xchg
sub
call
jns
mov
lret
mov
xchg
push
push
cmp
mov
add
xchg
clc
or
pop
push
mov
scas
xor
scas
cvtdq2ps
dec
cmp
movsb
jne
adc
inc
out
and
fmuls
add
mov
mov
dec
sbb
outsb
rcll
or
out
rcll
out
hlt
into
inc
xlat
nop
mov
hlt
lods
outsb
lret
ss
call
sub
and
push
jb
push
pop
enter
shl
push
fs
js
lret
rcr
fisubl
pop
out
mov
fwait
and
mov
inc
sbb
std
mov
imul
xchg
fsubrl
cld
inc
imul
xor
mov
mov
xor
pop
pop
notb
inc
ljmp
fiadds
mov
mov
lcall
cmp
push
insb
lcall
mov
mulb
sub
aaa
or
or
cmp
std
dec
orb
movsl
and
or
inc
sbb
mov
sahf
xor
push
jns
xchg
inc
jl
adc
adc
scas
xor
aas
ja
mov
pop
daa
pop
sbb
out
dec
xorb
or
dec
fistps
adc
pop
out
push
jp
and
hlt
das
and
adc
scas
pushf
mov
into
divl
xchg
dec
sbb
ss
xor
cmp
xchg
scas
cmpsb
aad
push
inc
jg
mov
das
cmp
mov
mov
push
outsb
mov
push
mov
int
dec
ja
pop
outsb
cmpsl
inc
sahf
or
pushf
lds
sub
push
fldt
mov
out
ljmp
or
aam
insl
push
xchg
pop
sbb
sbb
in
testl
push
mul
bound
or
cmp
fisttpll
xchg
fwait
push
push
imul
lods
out
enter
mov
cmp
std
mov
mov
ja
jo
pop
pop
div
popf
jp
inc
xlat
xchg
cmp
enter
jle
cli
rolb
icebp
ljmp
xchg
jg
mov
push
movsl
mov
je
jecxz
gs
mov
pop
sti
adc
pop
mov
je
mov
mov
loopne
mov
jnp
das
adc
dec
xor
aaa
dec
push
pop
fidivl
movsl
lea
xchg
dec
fwait
lret
sbb
test
negl
mov
sub
gs
mov
dec
pop
jmp
add
enter
pop
mov
and
mov
clc
cmp
or
into
xchg
mov
cld
sbb
mov
pop
xchg
in
fidivs
sub
shr
fwait
divps
mov
pop
test
push
repz
icebp
cmp
add
icebp
clc
fwait
push
mull
aas
inc
sub
out
lcall
inc
pop
pop
ret
pushf
push
push
stc
inc
iret
mov
outsb
lods
jb
inc
xor
cmp
cwtl
or
cmp
cmp
xchg
ret
dec
out
js
ljmpw
jns
fwait
cmp
cmpsb
aaa
in
insl
mov
inc
xchg
lock
test
test
addr16
inc
jle
dec
sbb
test
jo
push
imul
push
add
icebp
xchg
jo
jnp
stc
ja
stos
sbb
push
pusha
in
aas
cmp
mov
nop
rclb
jmp
or
cwtl
fdivrs
repnz
push
inc
ja
inc
movsl
inc
mov
into
out
adc
fwait
dec
inc
jb
int
or
in
stos
lds
dec
push
sbb
mov
sub
push
test
int
test
jbe
fstps
mov
pop
lcall
repnz
in
imul
inc
sbb
adc
mov
loope
mov
fstpl
mov
push
inc
movsl
mov
cmp
lcall
daa
inc
divb
adc
fimuls
mov
jns
mov
cmc
xchg
dec
xor
enter
insb
adc
xchg
out
lds
and
lcall
sub
push
lods
sub
cmc
pop
xchg
outsl
insl
ja
rol
test
lods
insl
in
dec
mov
in
mov
ljmp
aam
stos
scas
fwait
ja
scas
pop
sar
cmpb
aas
ss
dec
sbb
sbb
mov
mov
jp
adc
in
cli
popf
jb
push
mov
testl
shrl
mov
and
shrl
mov
shlb
mov
push
xchg
jno
dec
or
push
pop
iret
mov
sub
push
pop
dec
adc
lds
mov
pop
mov
loop
add
jp
jmp
sbb
sbb
sbb
aam
jl
xor
sub
negl
divl
push
xchg
mov
lods
and
int
inc
fidivrl
ret
gs
or
scas
push
out
xor
fistpll
popf
ds
out
test
popa
mov
lock
xlat
jmp
daa
hlt
fdivrs
bswap
pop
mov
adc
jnp
dec
dec
test
dec
adc
dec
shlb
pushf
dec
xlat
cli
pop
faddp
dec
fstpt
cmp
cmp
push
xchg
mov
pop
lret
punpcklwd
jp
inc
cmc
inc
loopne
cmpsl
cmp
xchg
lcall
stos
mov
cld
insl
mov
mov
mov
fistpl
cmp
mov
jg
xchg
mov
lret
jno
or
jl
rorb
fimull
mov
shl
rep
pop
orl
mov
cli
push
jne
mov
push
cld
mov
cmp
mov
int
and
dec
stos
iret
jle
outsl
mov
mov
outsb
lods
into
daa
in
mov
ret
sbb
sbb
scas
out
jns
and
xlat
cmpsl
and
xor
add
movsl
mov
jbe
xchg
sbb
loop
loop
icebp
pop
outsl
sti
mov
in
loop
out
mov
daa
add
rcrl
mov
pusha
ja
push
cmp
rcll
js
and
pop
cli
adc
mov
pop
aad
dec
cmp
and
into
dec
sub
mov
test
pop
mov
imul
dec
push
inc
insb
add
push
fs
push
das
dec
inc
xchg
jmp
jns
repnz
xor
shll
sbb
cld
daa
jae
js
mov
xchg
inc
dec
adc
in
in
lock
hlt
out
jle
leave
inc
hlt
xchg
scas
mov
add
push
sti
push
xor
imul
and
cmpsl
ss
xchg
stc
mov
call
sti
lret
imul
xchg
shl
int
iret
imull
inc
jg
xlat
lret
dec
cld
js
test
stos
fidivs
loop
ja
jle
cmpsl
pop
mov
fnsave
cmp
mov
sti
in
cld
push
sahf
xchg
xchg
cmp
mov
cmp
jne
cmpsb
jno
and
and
push
mov
adc
xchg
repz
cmc
jbe
bound
in
xchg
rorl
or
shlb
xchg
mov
fs
mov
push
cwtl
mov
out
dec
push
in
roll
int3
arpl
ss
cmp
addb
imul
sub
cltd
aaa
es
mov
ss
jmp
int
or
scas
jecxz
dec
in
jle
decb
loope
scas
loope
xor
cld
or
and
sbb
movsl
lret
das
nop
mov
xchg
fidivrl
cmp
or
lcall
push
push
aam
sbb
imul
lahf
jae
arpl
inc
in
push
and
out
rcrb
push
jl
adc
js
lret
ljmp
imul
nop
fisttpll
rorb
icebp
scas
sbb
arpl
pop
insb
sbb
outsl
ja
push
ds
enter
mov
inc
pop
dec
daa
js
cwtl
jae
iret
and
inc
adc
xchg
inc
push
mov
mov
fsub
xor
rcl
pusha
lahf
int
or
xchg
xor
inc
cwtl
loop
in
mov
mov
sub
in
mov
ds
cmp
pop
xchg
adc
ror
mov
cmc
popf
lahf
in
sub
jecxz
leave
aas
mov
dec
subl
mov
and
sub
or
jl
lcall
dec
xlat
cli
outsb
out
sbb
sub
in
mov
mov
out
cld
xor
bnd
xor
outsb
ds
pushf
mov
notb
cmpsl
jo
lcall
rorb
test
in
xchg
fiadds
leave
addr16
inc
scas
out
mov
ss
insl
je
or
out
adc
push
pushf
pop
lcall
jmp
or
sbb
test
cli
add
cs
adc
mov
push
push
movsb
push
and
cld
insb
sbb
insl
inc
jmp
ljmp
mov
and
fsubs
sbb
sbb
xor
add
cmp
lcall
hlt
pop
fcmove
mov
or
imul
in
cmpsb
sbb
mov
inc
mov
inc
jne
xchg
push
negb
push
lahf
movsl
dec
daa
dec
lcall
in
cmp
loopne
cli
jecxz
cmp
push
cli
sahf
loope
dec
rorl
jne
imul
jecxz
add
sti
jae
add
and
push
ja
test
cmpsb
mov
cwtl
pop
arpl
jl
mov
imul
ss
mov
div
sbb
icebp
xlat
lret
xor
sbb
icebp
push
in
xchg
jne
imul
dec
insb
cmp
xor
ret
loope
data16
insl
sub
inc
push
icebp
xchg
sub
loopne
bound
sahf
mov
pop
jbe
mov
fwait
and
ds
xor
and
gs
and
jmp
push
fiadds
pop
pop
pop
add
lock
shlb
adc
loope
dec
xor
jecxz
leave
sub
sbb
and
dec
and
sub
stos
rclb
dec
aas
and
mov
xchg
scas
or
add
push
mov
cmpsb
mov
test
xor
je
testl
xor
push
inc
sub
sbb
lods
sbb
or
mov
loop
daa
jg
cmp
call
mov
sub
jne
test
in
xor
mov
out
or
rclb
push
sbb
cmp
sahf
loopne
outsb
es
addr16
into
sarb
jp
pop
loope
push
xor
dec
testl
inc
and
xchg
adc
adc
mov
in
push
ss
add
les
divb
inc
sub
or
les
or
daa
cltd
cld
add
insl
push
push
push
scas
xchg
and
sar
add
add
sbb
xchg
nop
mov
cmc
ret
add
jmp
aas
xchg
repnz
fdivp
shll
imul
out
pop
ja
sub
lret
jne
outsl
push
jo
shrl
mov
cmc
sbb
jmp
mov
in
mov
imul
loope
dec
sbb
les
cwtl
sbb
mov
dec
ret
and
pushf
lods
cmp
or
push
insb
cmp
mov
rolb
or
mov
subl
jbe
xor
mov
inc
stos
jmp
dec
cwtl
jb
cmp
in
std
dec
out
pop
and
add
movsb
repnz
sarl
imul
and
mov
xchg
xchg
lahf
mov
sbb
jl
xchg
cltd
cmc
jge
sub
clc
dec
icebp
and
push
div
lock
lcall
nop
inc
inc
cld
and
and
jecxz
cwtl
sub
xchg
add
mov
imul
lret
incb
mov
mov
movsl
lods
mov
cltd
sbb
js
lods
mov
dec
or
pop
jp
ret
orb
ds
sti
dec
xchg
mov
mov
pushf
jae
lods
mov
nop
mov
int3
push
xchg
stc
xor
mov
add
mov
mov
pop
cli
push
fstpt
stos
dec
loop
jno
xchg
inc
sahf
ds
outsb
adc
pop
and
loop
inc
pushf
in
cwtl
lea
out
mov
mov
mov
xor
filds
loope
dec
adc
iret
sub
stc
inc
movsl
adc
jae
pop
jmp
fildl
mov
xchg
or
scas
push
jmp
push
mov
sub
mov
pop
inc
inc
rorb
cs
mov
cmp
rol
movsl
ljmp
fisubs
cmp
push
popa
mov
shr
push
stos
cmp
pop
jo
lret
jo
ds
or
or
jne
add
jno
and
push
and
push
pop
xchg
mov
xorl
dec
scas
fnstsw
xorl
push
xchg
mov
nop
inc
into
lahf
pop
mov
mov
ds
std
jo
push
jns
out
je
jecxz
int
jp
movsb
inc
rorl
inc
fldenv
or
jle
sbb
pop
aas
mov
adc
and
aas
cmp
or
sbbl
xlat
or
push
xchg
push
xor
xchg
add
pop
add
add
or
mov
sub
das
cmp
imul
push
negl
mov
mov
mov
mov
imul
jae
pop
mov
or
out
les
push
mov
faddp
push
fiaddl
inc
xchg
jg
sbb
cmp
inc
or
ds
jmp
or
imul
pop
int3
cmp
and
add
cmp
fidivs
aam
jl
imul
aas
out
push
bound
outsl
fwait
dec
sub
shlb
in
out
outsl
cmp
arpl
sbbb
pop
push
mov
cld
xchg
rorl
scas
in
push
addr16
enter
add
dec
jmp
xchg
fbstp
cwtl
and
dec
lcall
mov
test
jl
adc
shl
mov
and
test
sbb
orb
cmp
faddp
addr16
push
sbb
ficoms
xchg
mov
and
cltd
pop
dec
and
add
mov
xor
xor
mulb
push
js
pusha
push
out
mov
xor
addr16
mov
xlat
fbstp
push
sub
pop
dec
or
rol
push
cltd
in
sub
icebp
testb
imul
je
mov
xor
data16
dec
inc
test
push
xor
out
in
dec
mov
xor
imul
fnstenv
jo
mov
push
push
dec
inc
adc
jae
and
dec
pop
mov
lcall
cmp
loop
repz
dec
or
adc
lea
daa
imul
sahf
lahf
mov
fsubrs
lods
mov
fs
push
loop
pop
test
add
add
pop
in
inc
xor
push
jnp
or
jmp
shlb
xlat
sub
int3
cmc
pop
cwtl
xchg
dec
sti
out
or
stc
inc
mov
adc
sti
xor
popf
popa
dec
imul
aas
xchg
in
adc
jns
leave
negb
lahf
in
mov
mov
loopne
adc
adc
shr
cmpsl
sti
aam
mov
ret
das
mov
or
push
jo
xchg
ret
mov
add
jae
lea
or
idiv
es
jg
iret
gs
or
sbb
sbb
mov
test
bound
stos
outsl
shr
cld
fcompl
push
cld
loope
insb
push
pop
cmc
mov
pop
daa
aam
out
mov
jecxz
pusha
test
mov
sub
push
cmp
imul
pop
aad
adc
mov
inc
lahf
mov
xor
fsubr
mov
daa
adc
mov
mov
pop
sahf
cmp
shrb
into
test
jmp
sbb
js
cmp
inc
add
and
dec
stos
inc
es
xchg
jge
mov
sti
stc
aas
cmp
pop
es
out
jge
scas
sub
hlt
mov
push
sbb
add
cmpb
ja
lcall
lcall
mov
shrl
dec
push
in
mov
push
fidivs
xchg
push
jg
dec
jne
out
mov
pop
dec
jb
out
outsb
ret
cmp
add
jge
lods
enter
pop
and
lahf
idiv
pop
es
insl
lret
dec
ficomps
cmp
mov
pop
insl
sti
or
adc
je
aad
ja
mov
cmc
outsb
mov
mov
int
popl
sbbl
dec
dec
stos
lods
xor
sahf
insb
mov
pop
xor
jne
lcall
sbb
bound
mov
out
xor
dec
mov
loopne
sub
in
cltd
pop
push
aaa
or
lods
fistpll
xchg
mov
jo
add
ljmp
pop
out
xchg
jae
jg
leave
leave
roll
dec
jmp
sbb
inc
xchg
mov
or
cmp
arpl
ja
orl
and
xor
lahf
cmp
lea
inc
movsb
adc
mov
popf
lret
mov
mov
out
mov
aaa
cmpb
std
gs
ja
dec
inc
cmpsb
aaa
shr
xor
pop
mov
fiadds
add
ret
cwtl
test
inc
lods
repz
inc
insl
push
lret
push
xchg
jmp
mov
push
cmc
inc
addl
mov
push
je
or
mov
std
stos
xchg
lds
mov
sub
rcr
aas
dec
xchg
and
adc
fnstenv
sbb
xor
sbb
mov
and
loopne
dec
inc
inc
cs
mov
inc
adc
mov
pop
cmp
jno
decl
addb
les
dec
mov
and
jmp
add
ds
shrb
out
sbb
aam
cwtl
mov
pushf
sub
insl
lret
jle
ss
jno
cmp
icebp
les
sahf
and
sub
mov
sbb
inc
sahf
movl
shr
in
jo
dec
out
sub
pop
sbb
add
arpl
xchg
mov
aaa
mov
clc
pop
sub
dec
add
xor
jo
aam
popf
dec
add
loop
lret
ja
lcall
sbbb
dec
lds
negl
lds
dec
xor
jb
cmp
inc
es
mov
mov
ds
sub
data16
or
hlt
mov
in
jb
enter
aad
lds
testb
fstpt
test
fmul
sbb
push
adcl
push
fs
in
push
xchg
and
out
cld
testl
pop
jp
push
addl
jbe
add
data16
imul
inc
ficoml
lods
out
lods
in
pop
mov
ret
lcall
adc
xchg
mov
test
mov
and
ret
enter
test
mov
jb
mov
jae
ljmp
jae
scas
mov
sub
pushf
sub
dec
pop
mov
and
mov
xor
fisubrs
jne
mov
loope
inc
mov
or
clc
and
addb
mov
add
fcom
push
mov
scas
mov
jno
inc
out
sbb
inc
fidivrs
mov
fdivr
rorl
add
mov
cmp
push
push
dec
cmpsb
addr16
inc
xchg
daa
xchg
inc
add
leave
cld
sub
adc
push
inc
xor
or
cli
fiadds
cmp
and
add
lea
mov
sbb
daa
mov
dec
mov
jns
das
ljmp
mov
mov
outsb
pop
clc
mov
sbb
xchg
pop
xchg
in
xor
sbbl
popa
enter
pop
xor
mov
push
mov
sub
rcl
mov
test
sbb
repz
mov
push
pop
sbb
cmp
mov
movsb
cli
fmull
iret
repnz
lret
inc
dec
movsl
pop
dec
repz
sbb
sbb
pop
loope
sbbl
out
jae
mov
test
sbb
sar
ret
imul
imul
dec
inc
mov
ret
test
mov
xor
fidivrs
sbb
dec
pusha
pop
shl
mov
lods
fadd
repz
rolb
inc
adc
scas
idivl
out
aaa
mov
enter
nop
cltd
sti
sub
xchg
xchg
push
mov
in
mov
and
sub
mov
mov
xor
imul
add
leave
sub
jge
sbb
shlb
movsb
mov
test
mov
pop
in
mov
jbe
inc
adcb
jae
aad
jle
xor
addr16
xchg
aaa
mov
loopne
in
test
inc
sub
pop
loop
jge
push
hlt
pop
push
dec
push
and
fcmovne
sub
inc
test
fildl
imul
cwtl
stc
lret
es
inc
cli
inc
stos
jge
mov
imul
lret
adc
pusha
or
add
out
les
gs
subl
das
arpl
inc
or
incl
pusha
andl
sbb
shr
sbb
jbe
mov
adc
xchg
jb
sub
movsb
mov
inc
lret
icebp
xor
push
lret
xor
test
sbb
xor
jo
insb
sti
lcall
inc
pop
ficoms
in
popa
mov
imul
cmpsb
jle
dec
dec
out
lahf
popa
lock
sbb
jl
pop
ja
out
out
sub
cmpsb
mov
xchg
or
and
mov
cmovl
pusha
pop
push
sbb
dec
mov
dec
out
mov
sub
stos
inc
xchg
add
stos
lea
add
fsts
repz
rcrl
jb
jmp
adc
stos
jne
jo
dec
or
xor
icebp
sub
mov
popa
mov
enter
xchg
jmp
ficoms
and
mov
lret
mov
nop
test
fisttpl
idivb
aam
sbb
mov
popf
ds
loopne
lret
add
add
fdivl
push
aaa
mov
rol
jo
dec
and
and
push
or
mov
sbb
mov
adc
add
hlt
rcrb
pop
mov
in
push
jle
or
lds
jae
jnp
ret
mov
mov
outsb
adc
inc
lcall
xchg
ja
push
or
imul
push
cli
dec
test
mov
cmp
daa
sbbb
push
mov
push
xor
mov
aad
test
xor
cmp
stos
inc
mov
inc
mov
in
inc
scas
dec
mov
faddp
inc
mov
lahf
popa
fildl
dec
shll
xchg
cmp
mov
inc
js
and
jb
fsub
mov
mov
mov
int3
mov
lods
and
mov
fidivrl
sub
xorl
aad
jne
lret
insb
dec
and
in
cmc
push
fiaddl
push
cmp
push
pop
enter
ja
dec
jns
dec
outsb
int
mov
lret
test
es
pop
sub
scas
fdivrs
mov
dec
push
push
sbb
jl
mov
sub
leave
fcomps
adc
xchg
call
iret
mov
cmpsb
iret
repnz
pop
inc
fnstsw
std
cwtl
add
shrl
ljmp
mov
pop
mov
ljmp
arpl
dec
add
xor
lahf
aas
fcmovnu
andps
sub
push
mov
adc
xor
inc
movsl
movsb
mov
jnp
or
mov
lret
loop
push
inc
cmp
enter
jnp
pusha
into
jle
adc
inc
xlat
cmp
mov
lods
adc
cmp
imul
cwtl
sbb
jbe
je
pop
inc
mov
sti
clc
push
xorb
test
sarl
stos
pop
xchg
or
fnstenv
addr16
mov
inc
imul
sbb
mov
mov
clc
icebp
xor
push
push
and
bswap
fiadds
add
push
or
jo
xchg
shlb
addr16
ret
out
pop
enter
pop
lods
add
xor
lret
cmp
rcrb
das
rol
adc
test
xchg
cwtl
sbb
mov
mov
pop
icebp
cmp
int
adc
out
mov
cs
lret
or
in
cmpsb
push
jbe
and
jecxz
cmp
cmpsb
jg
pop
add
mov
dec
fnstcw
adc
out
outsl
dec
dec
fmul
insl
out
arpl
add
push
push
dec
push
movsl
mov
mov
in
cmp
adc
dec
push
inc
sub
push
shlb
aas
scas
hlt
or
pushf
scas
sub
popa
inc
shll
cwtl
addl
lea
push
add
cli
rcrb
push
subl
lods
adc
rolb
int
scas
sub
das
cmp
loope
or
adc
jmp
and
xor
je
out
pop
inc
jecxz
outsb
pusha
js
addr16
sub
push
push
outsl
iret
mov
std
mov
jge
inc
mov
mov
cwtl
popa
negb
sahf
data16
scas
hlt
outsb
push
push
xor
push
cmp
adcl
lahf
mov
iret
addb
mov
out
and
inc
xchg
add
push
inc
xchg
mov
je
and
dec
xor
in
lock
mov
mov
jb
movsl
add
dec
adc
orl
mov
add
lods
fs
cmp
inc
mov
mov
std
sarb
dec
ja
or
outsl
jg
jle
cmc
inc
ret
out
aaa
popa
adcl
in
mov
roll
xor
jl
sub
adc
add
inc
xor
repz
rorb
xor
jns
shll
push
aas
and
cli
movsb
insl
xchg
mov
sbb
scas
mov
ljmp
lds
xchg
jge
shlb
popa
adc
scas
mov
stc
jb
or
mov
dec
sbb
jne
das
dec
push
andl
lock
jmp
ss
jo
insl
pop
dec
leave
and
mov
adc
hlt
cld
jno
fistpl
mov
sbb
dec
nop
xor
pop
add
stos
jl
loope
scas
out
mov
out
fldt
cmovnp
repnz
pop
jg
aas
lods
stos
insb
jno
ljmp
clc
push
test
inc
scas
xchg
hlt
in
ss
push
jp
sbb
rcr
je
xchg
fcoml
adcl
hlt
mulb
push
adc
into
and
sbb
lods
sub
jg
ljmp
scas
mov
sub
in
jno
xlat
dec
jnp
stc
cmp
xchg
xor
cmpl
pop
sti
sbb
sub
jg
lahf
mov
or
lret
stc
sti
shlb
mov
imul
push
push
xchg
out
cmpsl
pop
xchg
add
enter
mov
push
int3
mov
sub
or
add
ljmp
jecxz
jbe
push
pop
in
sahf
mov
lea
bswap
jg
dec
sub
jnp
leave
cmp
adc
in
in
xchg
in
movsb
cmpsb
mov
add
lds
and
inc
iret
cmpl
cmpsb
lcall
ss
das
sbb
imul
xor
sub
xchg
bound
dec
adc
jle
fbstp
and
dec
in
push
rcr
xor
cmp
shll
sub
ljmp
and
sbb
mov
test
lret
dec
inc
int
pop
xchg
pop
mov
mov
push
jge
das
xor
insb
fdivrl
push
lock
pop
sbb
inc
cmp
inc
jno
int3
mov
push
insb
movsb
mov
mov
popa
out
jae
and
mov
inc
add
stos
sbbb
cmp
lret
mov
repnz
pop
adc
xchg
clc
bound
mul
dec
idivl
push
stos
ss
xor
dec
int3
movb
fdivs
adc
lock
pop
and
fwait
mov
lds
jmp
dec
out
inc
cmp
adc
pop
jle
sti
cli
sbb
sbb
push
push
xor
arpl
adc
xchg
dec
xchg
push
lret
sub
pop
sbb
in
adc
push
mov
inc
cld
nop
mov
ja
pusha
and
push
popa
gs
fwait
iret
call
test
add
lahf
jp
inc
test
dec
xchg
adc
fdivl
mov
in
sub
out
mov
dec
push
cmp
pushf
pop
insl
mov
or
inc
shlb
push
insb
call
xchg
dec
cmpsl
jnp
in
jne
inc
push
mov
loope
and
rol
mov
shlb
xchg
repz
and
sbb
loop
out
das
jns
jmp
out
fldenv
and
and
int3
jo
cmpsl
dec
lcall
mov
pop
mov
aas
mov
mov
and
lods
sarb
pusha
jbe
or
jle
or
shll
pcmpgtb
jmp
insb
cmpsl
mov
add
cltd
push
repz
jle
aad
addl
testb
int3
pop
loop
cli
dec
inc
sub
lods
cmp
fs
push
outsl
movsb
stc
sub
insb
mov
ret
jl
cld
push
or
fdivrl
cld
adc
ds
ljmp
mov
push
mov
push
dec
pop
cmpb
mov
into
or
add
xor
inc
jg
int
push
test
lods
mov
popa
fcomp
ficomps
mov
add
and
loope
fstpl
mov
outsb
iret
xor
lods
enter
pop
pop
lahf
test
push
in
stc
inc
mov
scas
shr
out
test
mulb
js
or
scas
cmc
jae
out
mov
insl
push
sub
idivl
loopne
adc
int
push
rcrb
and
out
and
fidivl
shl
ret
lods
out
or
push
xorb
imul
mov
adc
pushl
pop
xchg
fildll
movsl
es
cmpl
mov
insl
test
inc
sahf
dec
mov
add
inc
sbb
jmp
mov
lds
sbb
add
mov
add
in
mov
enter
leave
pop
ds
mov
jb
lahf
sub
in
pop
push
push
pop
fstps
imul
mov
adc
lcall
fisubrs
js
xor
add
add
and
testl
sbb
xchg
mov
lock
in
andl
ja
sub
call
sbb
sbb
cmp
jg
pop
sbb
sbb
loop
lret
pop
test
ds
add
mov
shll
push
loopne
sbb
out
in
adc
push
adc
xorb
iret
stos
mov
jns
lcall
jmp
repz
sub
sahf
shr
adc
and
outsb
xor
mov
lods
icebp
jo
and
aam
jp
js
jns
adc
repz
stc
jecxz
in
pop
and
jno
xor
cmpsb
clc
lcall
stos
adc
mov
fisttps
push
imul
adc
les
lock
mov
mov
cmp
xor
lcall
xlat
ret
pop
pop
out
jmp
sar
test
push
sarb
mov
cs
xchg
cli
xchg
inc
fstps
scas
xchg
cmp
mov
cld
jge
fsubs
daa
out
aad
ret
in
imul
hlt
outsl
fwait
adc
push
sarl
mov
decl
adc
inc
jae
je
pop
or
jecxz
insb
mov
fimuls
push
xor
outsb
flds
sbb
jns
push
adc
test
or
push
pushf
and
adc
fstpl
inc
movsl
xchg
rcl
push
add
addl
jecxz
mov
inc
cmc
push
das
test
xchg
add
insb
xorl
xchg
test
es
stos
mov
xor
nop
nop
pop
sbbb
jns
inc
imul
les
repnz
lea
incl
daa
adc
sbb
cmp
sub
stos
out
pop
mov
xorb
stos
rorb
stc
andl
je
cmp
cmp
rolb
push
mov
mov
sbbb
cmpsl
or
stos
ret
inc
loope
and
cmpb
ss
mov
out
cld
xchg
xchg
pusha
inc
cli
xchg
int
popa
push
insb
das
fmuls
insb
iret
outsl
lcall
pushf
sub
aaa
dec
aam
cmp
cmp
nop
rclb
ss
dec
push
andb
lea
fldt
jecxz
pushf
push
pushf
push
addr16
fs
cmpl
out
xor
imul
nop
ljmp
mov
out
xchg
pop
mov
ret
mov
test
sbb
loopne
inc
dec
lcall
push
lret
idivl
mov
nop
or
lret
inc
sbb
dec
mov
cltd
pop
pop
addr16
enter
add
xor
mov
inc
xor
inc
lods
jmp
cmp
xchg
loopne
lods
das
mov
int
movb
jmp
inc
lds
in
and
lods
xorb
pusha
cmp
test
add
jae
add
add
add
inc
sub
adc
add
cmpsl
faddl
adc
mov
add
outsb
sahf
add
add
add
and
dec
fucomi
psrlw
scas
jmp
mov
adc
aad
mov
add
out
pop
in
cmpsb
cmp
add
sti
xchg
loope
aad
xchg
insb
dec
in
add
cmp
test
xchg
mov
push
xor
mov
dec
mov
stos
add
xor
data16
dec
call
pusha
add
add
dec
adc
xchg
sbb
xchg
jo
pop
lret
mov
sbb
outsl
pop
orb
ja
sub
mov
mov
sti
lods
je
sbb
mov
sbb
dec
pop
lahf
xchg
mov
jle
movsl
xor
adc
pop
mov
push
inc
out
rclb
out
mov
std
add
pop
shll
inc
es
sub
mov
les
xchg
mov
fcmove
iret
adc
jo
pop
rclb
addr16
jbe
adc
mov
pushf
jmp
mov
jmp
xor
call
and
mov
xlat
lahf
mov
jns
mov
pop
sbb
std
or
mov
jecxz
jns
jle
jle
xchg
jne
fmul
dec
lods
jnp
sub
pop
mov
add
or
mov
rolb
xchg
fisubl
cmpsb
sahf
nop
adc
push
lods
aam
pusha
sbb
mov
or
daa
std
iret
push
addr16
bound
lods
push
cmc
and
xchg
jle
sub
adc
jnp
out
inc
inc
push
adc
adc
scas
xor
ret
jbe
ret
inc
lcall
sbb
mov
int
push
and
mov
rcrb
adc
in
jmp
out
or
xorb
push
jecxz
fmuls
out
pop
imul
ja
pop
ja
pushf
cmp
xchg
sbb
int3
cmpsb
mov
and
mov
mov
mov
cli
cmc
jne
adc
push
jecxz
ret
xor
jp
int
into
dec
aad
adc
push
stos
jo
mov
add
or
fucomip
outsl
sub
dec
mov
and
push
mov
inc
add
daa
inc
mov
mov
mov
mov
out
dec
push
xor
rcrl
icebp
push
jg
cmpsl
cltd
adc
in
inc
out
push
testb
addb
shl
fildl
dec
push
shrb
fbstp
ret
or
push
filds
push
and
jb
sub
sbb
push
sbb
pop
repz
stos
mov
sbb
scas
pop
fwait
dec
push
je
insb
adc
mov
jle
pop
pushf
shlb
enter
cli
jnp
addr16
repz
addr16
push
push
xchg
xchg
push
outsl
push
xchg
push
call
fdivr
xor
jge
jbe
out
push
push
scas
add
mov
or
loope
push
inc
rcll
loope
xor
scas
in
and
xchg
dec
mov
mov
out
imul
hlt
adc
pop
pop
es
mov
dec
jmp
mov
arpl
adc
sub
xchg
in
sub
movsb
pop
sub
out
and
pop
sub
xchg
sub
dec
lods
xor
stos
pusha
xchg
std
scas
and
cs
cs
pop
mov
enter
arpl
add
pop
enter
adc
or
loope
gs
int
les
sbb
lods
dec
iret
mov
shr
divl
repnz
and
pop
popf
mov
mov
cmpsb
lret
loop
das
test
sub
out
inc
shll
shll
fwait
or
std
push
in
jmp
add
dec
hlt
ficoml
mov
out
jbe
push
inc
or
enter
insl
mov
pop
divl
xchg
xchg
mov
cmpb
pop
adc
adc
xchg
cmp
mov
cmp
pop
fldenv
fistl
inc
or
es
or
addl
loope
stos
sub
jne
jae
out
movsl
andb
cmpb
mov
pusha
mov
add
and
pop
imul
mov
ret
je
sbb
xor
adc
stos
pop
insb
fldenv
je
in
sahf
mov
mov
cmpsl
or
ret
cmpsb
idivb
dec
popf
and
pop
stos
push
sub
jl
or
ret
sbb
aas
jp
out
popa
adc
leave
ror
xlat
inc
mov
xor
sub
cmp
addr16
mov
pcmpeqd
inc
es
call
cmpsb
imul
cs
push
and
fldenv
or
mov
mov
sbb
push
sbb
aam
inc
cmp
int3
xchg
inc
ss
arpl
sbb
sarl
inc
hlt
ja
xlat
cmp
push
mov
sbb
mov
sub
adc
sahf
mov
jl
daa
mov
mov
gs
out
lahf
sbb
lods
pop
mov
loop
pushf
leave
scas
das
lods
leave
ret
and
inc
in
test
pop
jg
movsb
push
inc
sbbl
popf
mov
adc
xchg
push
jecxz
aad
nop
mov
dec
mov
or
leave
or
mov
roll
xchg
stos
fisttpll
andb
fiadds
ljmp
sub
dec
or
jo
stos
loopne,pn
fwait
mov
mov
cmp
imul
mov
fnstsw
in
call
mov
lret
lods
int3
jb
push
loope
in
adc
pop
je
clc
loope
sub
pop
dec
rclb
push
add
lock
leave
mov
lea
es
cmp
call
jb
fnstsw
or
pop
cmp
sub
ljmp
pop
test
adc
cltd
add
inc
xchg
fsts
or
leave
into
mov
push
nop
mov
sub
xchg
arpl
sub
push
mov
sub
lea
mov
cmpl
xchg
xchg
push
jle
jge
popa
jo
lret
sbb
inc
cs
outsl
orb
leave
pop
xor
orl
cmpsl
cli
or
mov
je
push
mov
out
ds
sbb
cmp
sub
outsl
pop
scas
sub
bnd
popa
cli
lret
mov
loope
and
pop
jg
jno
xchg
push
ret
cli
jle
das
iret
hlt
cmp
dec
stc
stos
rep
out
cmp
add
add
adc
outsl
jge
repnz
mov
jecxz
or
sti
fs
pop
popa
andb
loop
mov
xchg
dec
xor
mov
cmp
cli
push
inc
stos
jnp
adc
and
pop
and
inc
lods
pop
and
rorl
cwtl
mulb
sbb
loop
jns
roll
imul
fldt
loope
enter
xchg
or
movsb
shl
sbb
inc
lret
daa
int
pushf
data16
jmp
pop
aas
inc
add
add
lret
sub
dec
pusha
sbb
cmovns
inc
aad
push
xlat
add
push
mov
adc
jno
mov
jbe
sbb
into
sub
mov
popl
nop
push
cmp
pop
add
pcmpgtd
pushf
jne
push
daa
movsl
iret
aas
fldenv
xchg
psubb
sbbl
mov
sbb
pop
push
movsb
lea
xchg
bound
xlat
push
js
daa
jnp
dec
hlt
add
aad
mov
fwait
sub
into
ljmp
mov
movsl
and
arpl
imul
sbb
cmp
jmp
cld
pop
sbb
std
pop
jge
arpl
fidivrl
push
ja
shlb
push
jp
cmp
incb
pushf
std
push
fsubrs
repnz
or
sbb
adc
mov
lea
push
test
sbb
out
scas
insb
inc
cmp
push
cmp
push
mov
testl
mov
cli
pop
lahf
aaa
and
lret
mov
out
icebp
das
rcrb
mov
gs
imul
pop
lock
cmpsb
sub
mov
repz
dec
or
nop
inc
push
dec
mov
jle
popf
xlat
inc
andl
stos
lret
pop
imul
jge
dec
lcallw
mov
loopne
fidivrl
add
clc
push
cld
lock
sbbl
cltd
fucom
push
and
xchg
dec
inc
pusha
dec
push
ljmp
mov
stc
add
stos
jne
sub
inc
add
mov
pop
cwtl
gs
xor
ss
dec
fnsave
push
dec
mov
mov
or
push
pop
cmpsl
movsb
aad
pop
xor
imul
repnz
dec
xchg
or
leave
andl
cmp
pop
push
and
ficoml
fs
mov
dec
cwtl
sahf
idivl
adc
push
adcl
movsl
mov
and
jb
notl
inc
and
sub
mov
cmp
xchg
ret
out
and
sub
insl
je
lea
push
idivb
dec
pop
or
push
rcrb
roll
mov
push
cmp
fidivs
jae
frstor
outsb
mull
sti
mov
push
repnz
daa
popa
add
dec
ja
mov
fadds
xor
sbbl
int3
jns
mov
add
in
push
mov
cwtl
fildll
scas
cmp
repnz
sbb
mov
xlat
stos
sbb
imul
xor
mov
cld
nop
jmp
je
mov
enter
mov
sahf
fcmovb
cld
aaa
sub
cmpsl
xor
pop
clc
repnz
and
int3
or
cli
mov
fisttpl
loope
add
lahf
into
cmp
sub
or
inc
pop
test
mov
lds
or
mov
push
adc
leave
scas
xchg
into
imul
xchg
pop
sbb
daa
xchg
cli
inc
adc
sarl
rolb
xor
sbb
das
js
and
add
lret
loope
cmp
sahf
jae
out
int
in
aad
mov
lea
push
out
pop
or
mov
pop
and
iret
mov
aas
ret
aad
hlt
popf
cmp
push
jecxz
idivb
jl
and
icebp
lret
rcrl
loopne
mov
pop
add
fsub
outsl
fs
outsb
divb
cmp
ret
aas
dec
pop
rorb
decl
inc
inc
loopne
mov
mov
into
clc
fisubs
and
xchg
push
mov
lea
std
pusha
mov
cmpsb
add
mov
inc
inc
scas
sahf
sub
dec
subb
iret
xchg
dec
mov
addb
imul
jge
subl
mov
lahf
mov
hlt
sub
daa
jl
aaa
push
adc
mov
jbe
ss
xchg
and
aam
xor
movsb
cmpsl
sub
dec
fdivrs
incb
mov
jg
adc
hlt
inc
xchg
pop
jae
mov
addr16
loopne
clc
leave
in
fistpll
dec
aam
test
lcall
andb
les
push
aam
test
jmp
mov
adc
dec
popf
or
orl
jne
psubw
jno
adc
adc
sbb
mov
mov
sarl
out
rolb
xchg
jb
loope
and
xor
inc
pop
movsl
sahf
mov
jne
mov
mov
fwait
loopne
int3
fiadds
push
scas
cmp
sub
addr16
pusha
xor
enter
xor
sahf
ljmp
and
pusha
mov
and
or
cmp
aaa
movsl
and
mov
int
mov
mov
iret
jl
lea
jmp
je
cmp
pop
dec
xlat
mov
add
nop
fdivrs
sbb
dec
add
ror
push
cmp
lods
stos
andl
ret
fldt
mov
test
sbb
sbb
or
stos
mov
cmp
push
and
lods
inc
jns
outsb
pop
push
mov
jns
mov
jmp
test
inc
push
scas
push
pop
jne
mov
push
incl
jae
add
dec
xchg
xlat
outsb
hlt
cs
pushf
movsb
in
je
mov
jg
jb
pushf
lmsw
or
flds
daa
mov
insl
mov
adc
dec
nop
fwait
cmp
pop
pop
sbb
add
push
pop
gs
inc
imul
repnz
shll
faddl
scas
sub
push
and
imul
mov
fs
mov
out
sbb
dec
cli
lea
xor
jmp
stos
mov
fldenv
jnp
sahf
shlb
sbb
pop
testb
in
imul
test
mov
xor
fdivrp
xchg
jecxz
in
mov
cmpsl
repnz
aad
mov
xor
mov
dec
mov
loope
push
movsl
in
mov
iret
outsb
mov
stos
inc
mov
mov
sub
ja
xlat
arpl
pop
dec
inc
arpl
sbb
aam
int3
xor
inc
sub
push
inc
cmpsb
sub
sbb
movsb
and
sub
dec
jbe
sbb
sub
popa
ds
adc
mov
jl
or
push
std
mov
rorl
or
push
xor
push
outsb
ja
mov
int
push
aad
mov
sbb
mov
jne
ss
push
sbb
xchg
xor
xor
mov
in
inc
cmpsb
xchg
xchg
cmp
cmp
loope
xor
flds
jbe
fs
les
xchg
mov
or
int
inc
cmp
push
lret
fs
xor
mov
data16
push
inc
lods
scas
sbb
imulb
inc
fwait
push
cmp
sub
jmp
xchg
fadd
jne
or
dec
or
movsb
mov
mov
insl
push
ret
fsts
ret
cmp
das
fldl
or
jno
sti
clc
movsl
roll
cld
aad
loop
pop
push
mov
cmp
es
es
fst
adc
dec
fistps
push
inc
es
inc
daa
dec
and
adc
jg
imul
inc
sbb
push
fcmovb
lcall
test
xor
loop
push
xchg
xchg
sub
ja
in
repz
inc
ret
sub
fs
xlat
inc
push
aam
xor
jnp
xchg
adc
sub
loopne
insl
mov
xlat
arpl
stos
das
xchg
sub
dec
imul
dec
add
add
mov
jmp
pusha
mov
mov
and
jb
inc
push
pusha
adc
in
xor
and
cmp
add
jecxz
push
aad
sahf
into
ficompl
cmpsb
push
outsb
pop
or
or
jne
cmp
ja
mov
lret
dec
sub
pop
adc
out
mov
xor
or
lcall
out
sbb
mov
jle
inc
bound
sub
pop
and
shlb
adc
ja
test
out
rolb
xchg
loop
mov
in
dec
ss
mov
loop
into
mov
pop
or
mov
shl
aam
mov
cwtl
xchg
insl
add
mov
lcall
mov
cmp
test
and
stos
call
xor
js
jno
cmp
add
adc
outsb
out
sub
imul
lock
pop
jns
adcb
pop
adc
xor
xchg
jbe
in
push
dec
ds
and
call
inc
insb
xor
xchg
push
leave
xor
ds
cltd
flds
adc
jle
mov
aas
andb
cld
mov
sub
lret
lcall
imul
leave
je
pop
scas
lds
jae
xor
lock
add
push
arpl
decb
pop
sub
pop
movsl
cmp
mov
mov
push
test
test
xchg
outsb
call
inc
movsl
movsl
mov
sub
dec
push
ror
test
out
mov
and
outsb
inc
sbb
fdivr
stc
in
jae
ljmp
test
ljmp
pusha
pop
and
gs
popa
fmull
in
sbb
sbb
idivl
ss
into
jnp
adc
clc
sub
mov
out
out
jecxz
test
pop
mov
inc
jbe
fmull
outsb
dec
jne
lods
or
or
nop
or
pushf
adc
rolb
and
add
ss
inc
jno
add
cmp
outsl
mov
out
xchg
jecxz
and
hlt
mov
in
loopne
jo
xor
imul
add
dec
test
mov
add
inc
mov
sbb
pop
xor
data16
xchg
cmc
pop
aas
push
adc
mov
cmc
and
inc
dec
mov
ja
push
inc
ficoml
data16
loope
dec
add
push
aam
dec
dec
adc
xor
sarb
or
fmul
xor
rclb
lods
add
int
mov
cmp
push
ficompl
mov
icebp
mov
insl
add
dec
pusha
mov
lods
cwtl
out
iret
push
xor
add
sbb
ds
jb
in
test
add
mov
dec
int3
sub
jp
xchg
push
pusha
dec
ja
pop
out
fsubrs
pop
rcll
ds
out
imul
jnp
pushf
mov
popa
dec
jns
adc
pop
sub
aas
add
imul
xchg
movsl
or
in
std
ret
and
loope
cmpb
mov
sbb
mov
out
jns
mov
xchg
dec
jge
mov
or
pop
pop
mov
pop
shll
test
sub
adc
dec
sub
jmp
mov
outsl
pop
lods
stos
in
aaa
pop
pusha
stos
push
andl
sub
inc
jmp
nop
or
jl
dec
push
popa
test
das
dec
aam
and
dec
mov
sbb
xchg
mov
cli
test
cli
push
dec
loope
int
and
sub
push
push
xor
adc
lcall
sbbb
fnstenv
mov
push
xchg
pop
aas
jp
es
leave
push
shlb
dec
adc
push
frstor
aam
ja
lcall
xchg
cltd
mov
sahf
cmpsl
add
jecxz
mov
fisttpll
jge
push
xchg
icebp
stc
inc
popf
out
mov
gs
icebp
les
ljmp
xlat
jmp
lock
jbe
outsb
sahf
fisttps
mov
insl
or
inc
lcall
jl
mov
lock
pusha
mov
stos
mov
push
mov
adc
push
mov
add
int3
mov
jae
orb
lods
sahf
sbb
inc
mov
adc
mov
mov
shrl
mov
bound
push
pushf
ret
les
xchg
test
pusha
mov
lods
fwait
add
mov
push
sub
push
jae
mov
cmp
std
pop
lds
push
add
not
mov
cmp
sti
and
mov
es
push
ds
sub
or
mov
mov
inc
and
xor
int
sbb
imul
andl
push
std
sub
cmp
inc
testl
ficoml
or
push
js
cld
push
repz
stos
fnstcw
sbb
lfs
xchg
push
dec
stos
jmp
dec
idivl
push
cmp
movsb
insl
fiaddl
iret
test
mov
push
push
push
imul
cmp
sti
fistpl
cltd
js
xor
repnz
mov
dec
add
enter
lea
cmp
and
ret
sbb
push
jae
push
pop
dec
inc
mov
sbb
push
push
push
jge
dec
loope
rorl
test
into
stos
adc
nop
xlat
imul
cltd
push
mov
sbb
and
mov
mov
sub
inc
adc
or
repz
popa
sub
mov
popl
outsb
and
ficompl
mov
loop
jmp
inc
push
pushf
push
call
cmp
enter
gs
jmp
jb
jmp
aad
or
dec
mov
ljmp
lods
insb
ror
lahf
ljmp
cmp
push
cmpsb
pop
pop
addl
push
jns
lds
stos
pop
push
mov
and
pushf
decb
mov
aas
fsubrs
inc
dec
and
jle,pt
int3
xchg
inc
or
or
push
inc
sbb
and
test
pop
inc
jp
add
cmp
test
ficoms
mov
and
outsb
xchg
lds
adcb
pop
push
sub
mov
or
xchg
fnstenv
jns
dec
dec
mov
inc
mov
mov
pop
inc
mov
aam
cld
and
and
popf
cmc
fs
mov
push
mov
je
mov
inc
add
sbb
or
iret
cmp
movsb
test
cld
in
jl
cld
repz
mov
inc
push
adc
std
push
daa
loope
divb
loop
daa
jbe
cmp
cmp
fcomps
mov
pop
in
sub
ficoms
lea
jmp
test
cmp
mov
pusha
sbb
repz
out
aaa
xor
mov
push
test
data16
lret
icebp
mov
stos
loope
mov
xchg
mov
jmp
out
mov
mov
and
sti
inc
outsb
or
adc
sbb
int3
mov
js
sub
mov
ljmp
xlat
jnp
add
popa
jecxz
pop
popa
movsl
mov
jg
sub
or
mov
push
mov
mov
inc
call
das
addr16
fiaddl
push
shrl
fneni(8087
lock
mov
stc
adc
leave
in
orl
sbb
xchg
xchg
popa
push
das
mov
test
loop
loopne
call
sbb
ja
pop
add
mov
fcmove
and
movsl
orl
repz
rcll
rcr
das
outsl
jno
orb
int
jecxz
pop
xor
pop
mov
mov
mov
insl
cwtl
push
out
xor
xchg
ret
xchg
pop
or
mov
pop
and
and
fucomi
sub
loop
sbb
mov
aaa
cld
int
ret
inc
jbe
and
mov
push
and
and
sub
cld
adc
sub
pop
cvtps2pi
ror
cmp
lret
je
cltd
mov
inc
rcll
push
enter
pop
push
loop
pop
or
mov
int3
or
js
loope
sub
fbld
insl
and
mov
xchg
push
jbe
xor
das
pop
lahf
lcall
and
pop
test
addr16
adc
push
popa
adc
fsubr
ret
cli
das
xchg
sub
fdivs
push
xchg
cmp
cmpsb
pop
stos
loopne
jne
scas
jb
xchg
inc
cmp
lds
out
push
nop
cmpsb
loopne
pushf
cmc
out
dec
shlb
in
jecxz
ss
dec
xchg
call
pop
jmp
inc
adc
mov
cld
inc
xchg
dec
repnz
pusha
outsl
rcrb
inc
or
push
sarl
lock
ss
lds
jo
inc
pushf
arpl
adc
fldt
shl
popa
jae
repnz
sub
subps
rolb
fcoml
xchg
jmp
mov
in
stc
mov
or
in
ret
pop
mov
insl
push
jne
inc
call
rcrl
cmc
dec
andb
mov
je
fisubl
out
ljmp
inc
fwait
push
not
test
or
mov
mov
sbb
lahf
add
std
int3
inc
ljmp
insl
adc
shll
ja
xchg
pop
jno
pop
das
lods
mov
xchg
sub
ja
push
lds
call
xchg
add
out
clc
sbb
jnp
out
cwtl
inc
xchg
sbb
mov
adc
movsb
loopne
test
popf
jmp
mov
push
shlb
xor
inc
icebp
push
push
mov
test
repnz
adc
jae
push
stos
mov
mov
aad
loope
repnz
pop
outsl
shrl
idivb
fnsave
cltd
sub
test
cwtl
jo
adc
inc
sbb
cmp
jl
scas
xchg
rorl
test
out
pop
push
sub
mov
xchg
lahf
push
xchg
insw
lahf
dec
dec
div
xorl
cmpsl
loope
mov
ljmp
xchg
pop
xor
dec
ficompl
jge
fisubs
jmp
xor
adc
stos
arpl
pop
push
enter
je
test
pop
daa
inc
lahf
push
arpl
in
cli
cmp
imul
push
mov
jle
loopne
jne
loope
jg
xchg
in
or
or
test
sbbb
xchg
dec
sbb
or
or
add
pusha
pop
aaa
mov
fcmovb
xor
push
mov
pop
mov
sub
xor
sahf
push
adc
stos
or
cwtl
xchg
stc
outsl
aam
mov
scas
aas
es
mov
les
sbb
and
xchg
fistpll
push
aaa
lock
and
in
jbe
mov
xchg
sub
and
lret
ret
fcompp
adc
inc
mov
inc
loop
lcall
add
add
in
clc
pop
test
cmp
popf
decb
xchg
stos
xchg
xor
in
adc
imul
inc
mov
fiaddl
ss
lods
mov
jge
xor
clc
push
stos
mov
dec
pop
jmp
les
decl
and
mov
fcmovu
shr
cwtl
pop
push
mov
jg
cmpsl
xchg
xchg
inc
cmp
idiv
jg
shlb
sub
mov
sub
movsb
negb
daa
lock
std
pop
jecxz
mov
sub
ljmp
xchg
ss
adc
repz
dec
inc
mov
int3
shll
mov
mov
xchg
negb
mov
stos
test
leave
lods
xor
cmp
pusha
mov
mov
push
aad
push
outsl
push
dec
ljmp
rorb
aaa
sbb
xchg
xchg
xor
cmp
cmp
cmpsb
das
pusha
jno
fldcw
rcll
push
sub
mov
cmpsb
sub
pop
inc
mov
adc
out
pop
cmp
cmp
xchg
std
negb
iret
mov
jae
imul
lret
or
mov
and
xchg
hlt
xchg
in
int
mov
lods
mov
mov
fcoms
jge
mov
aas
mov
mov
sti
push
imul
mov
cli
repz
lret
pop
in
inc
and
es
das
test
jmp
leave
out
pop
andl
add
and
add
mov
pop
bound
ja
mov
sbb
sub
xchg
loopne
int
mov
push
dec
insb
aas
or
popw
pop
xor
inc
inc
loopne
push
insb
sub
pushf
lods
out
fistpl
in
inc
mov
inc
adc
ds
xor
scas
dec
push
cmp
jp
rol
and
adc
insb
jmp
add
cwtl
insl
lock
movb
scas
mov
jnp
cmc
shlb
aam
and
ja
lods
mov
and
adc
ljmp
rorb
das
inc
pop
clc
cmp
jne
pop
mov
or
stc
sub
inc
dec
sub
lea
pusha
sub
in
jg
iret
loop
jle
jecxz
les
dec
add
je
and
or
inc
add
inc
pusha
cli
add
loop
sarb
dec
aas
jbe
xchg
pop
and
out
dec
sahf
outsl
stos
push
dec
arpl
enter
int3
or
inc
cmpsl
push
lret
lcall
mov
mov
xabort
mov
mov
xchg
adc
vmread
jge
and
xchg
rol
jle
enter
add
ja
out
mov
shrl
test
adc
mov
dec
leave
inc
fs
xchg
xchg
addb
pop
fiadds
dec
adc
in
test
xor
sbb
cmp
mov
cld
xorb
jb
fildll
mov
dec
imul
or
not
push
enter
js
and
call
xor
pop
xchg
jo
pop
mov
jp
xor
scas
mov
jno
dec
std
aad
xchg
lahf
sbb
cwtl
pusha
xor
or
sub
fmul
lods
std
lahf
fs
mov
mov
cmp
sbb
aaa
loopne
rolb
cmp
jp
push
clc
das
add
or
stos
jmp
mov
test
arpl
mov
inc
rolb
in
mov
fisubl
aas
jns
test
cmc
out
arpl
loop
out
fldcw
mov
mov
mov
cmp
loop
sub
mov
sbb
arpl
push
jge
dec
mov
sbb
scas
lods
sti
push
inc
movsb
aas
jl
push
pop
fnstenv
cmp
fimuls
scas
or
mov
xor
inc
cmp
cmp
xorb
adc
sbb
call
xor
mov
stos
mov
adc
dec
ljmp
ja
mov
mov
leave
or
adc
push
sahf
and
mov
add
fiaddl
fldenv
xor
addr16
jg,pn
pop
test
insl
xchg
push
rclb
stos
es
cmp
dec
pop
out
mov
jg
lock
push
mov
dec
das
lret
mov
into
dec
out
xor
xchg
inc
xchg
sub
insb
hlt
test
es
shl
sub
jge
mov
xchg
popa
push
rcl
aad
repz
aas
dec
popa
and
int
test
cmc
sbb
mov
ja
stos
adc
xabort
out
flds
loop
out
push
lret
pop
cwtl
inc
gs
icebp
mov
test
inc
mov
call
inc
iret
pop
sahf
push
lret
adcb
fwait
adc
out
dec
mov
js
lea
into
scas
dec
outsl
in
cmp
je
push
out
pop
movsl
test
xchg
subl
mov
sbb
les
jb
jmp
sbb
jae
loope
imul
inc
sarb
pop
ficomps
cld
dec
xchg
mov
out
pop
loop,pt
pop
hlt
jecxz
mov
push
rclb
lcall
cvtpi2ps
daa
sbb
rcl
sub
mov
jle
out
sub
and
out
ja
xchg
jo
sbb
sbb
adc
adc
and
push
mov
xchg
jne
adc
pushf
mov
mov
in
out
ret
imul
ja
leave
or
dec
das
stc
jmp
cmpl
push
es
popf
lods
sbb
pop
add
mov
xchg
pop
mov
mov
xlat
or
or
je
mov
dec
shlb
jge
xor
push
dec
int
movsb
push
push
dec
xchg
push
stc
orl
or
lahf
jo
sub
mov
jp
cmp
cmp
mov
ja
fsubp
aaa
out
movsl
xlat
shl
dec
lds
imull
lods
testl
mov
aaa
aas
in
lock
cltd
outsb
jle
adc
lods
imulb
sub
imul
jns
pop
sbb
mov
mov
adc
clc
daa
adc
push
lods
out
test
repz
adc
xchg
repnz
fdivl
xchg
lods
jmp
into
dec
push
in
sbb
ss
inc
fidivs
mov
ret
std
int3
popa
pop
push
and
lret
cmp
daa
repnz
sarl
pop
add
insl
xchg
fs
mov
mov
lods
xor
adc
out
push
dec
imul
ret
pushf
test
into
out
mov
fldt
das
movsl
mov
popf
jno
in
add
and
xor
pop
jmp
mov
sbb
or
das
loope
inc
shll
insb
cld
mov
cmp
dec
rcll
push
or
aam
ja
jge
jns
fildll
scas
mov
inc
mov
dec
cmp
fisttps
push
gs
xor
cmp
pusha
ja
jnp
repz
test
cmp
sbb
and
jge
into
mov
xchg
push
mov
insb
shrb
stc
xor
repz
xlat
arpl
incb
and
cwtl
add
inc
pop
mov
inc
les
adc
mov
cmp
mov
in
cs
rol
cmc
mov
jg
adc
mov
mov
xor
mov
lea
call
add
push
inc
sbbb
xchg
sub
jb
push
gs
in
mov
aas
mov
xchg
mov
and
xchg
into
std
daa
rcrl
inc
mov
imul
sub
and
and
pusha
mov
pop
cltd
adc
ja
push
push
lock
and
ret
and
loope
stc
push
and
pop
dec
mov
cwtl
lods
int
loop
push
mov
loope
xor
ret
lea
repz
cmpsb
fldl2t
loopne
ror
pop
sub
inc
cmpsb
adc
mov
andl
scas
roll
cmp
sbb
lret
data16
mov
sarl
shr
stc
hlt
repz
imulb
dec
or
cmpsb
subl
inc
sbb
sti
movsl
dec
movsl
jge
mov
sbb
lahf
loop
mov
ljmp
inc
mov
int3
leave
or
add
jae
mov
mov
jmp
dec
lods
loope
fs
fimuls
decl
call
or
out
and
jns
and
imul
mov
pop
xchg
and
call
das
or
sub
stos
mov
gs
pop
inc
test
sti
in
or
mov
cli
cli
xor
mov
cmp
mov
and
xchg
lret
mov
or
out
dec
hlt
ja
stos
jne
pusha
sbb
jnp
inc
dec
jo
fistpl
mov
enter
fwait
sub
imul
add
dec
movsl
adc
inc
test
xor
jno
pop
out
fsubs
xor
inc
add
or
pop
push
sti
adc
pop
cltd
nop
mull
ret
cli
shll
dec
shll
les
mov
std
sbb
mov
mov
shrb
stos
mov
xor
sbb
mov
sub
add
scas
aas
dec
test
dec
sub
jb
push
sub
shl
xchg
aam
nop
and
stos
sub
pushf
xlat
icebp
sbb
lret
dec
cs
stos
xchg
mov
mov
adc
aad
clc
nop
cmpsb
push
cmpsl
add
out
jbe
sbb
dec
or
adc
pop
pop
mov
mov
add
enter
mov
xor
or
xor
jno
cmp
push
lret
push
sub
cs
push
xor
sti
inc
jl
outsl
stc
dec
xor
hlt
mov
cmp
fistpll
adc
in
push
bound
rcl
and
adc
in
test
out
icebp
in
test
mov
push
subl
shll
enter
jmp
lret
out
jecxz
dec
popa
jge
sub
push
sbb
imul
es
dec
scas
cld
scas
dec
decl
flds
cmp
push
jns
imul
cmpsb
pop
push
jno
bswap
inc
fidivrs
fisttps
cmp
sbb
rclb
ds
jne
arpl
fcoms
dec
push
xor
push
push
outsl
data16
es
call
out
push
lods
lea
xchg
fstpt
addl
out
adc
test
in
fs
push
fidivrl
fldenv
std
cmpsl
adc
xor
add
pop
fisttpll
or
pop
sub
sbb
xor
out
xor
popa
adc
mov
jae
dec
mov
out
loop
insb
pop
std
dec
dec
test
fdivl
bound
xor
or
inc
ljmp
mov
xchg
imul
daa
ds
mov
shl
adc
clc
mov
mov
mov
mov
inc
xor
pop
scas
sub
jmp
or
out
iret
mov
cmp
mov
fdivrs
paddw
cmpsl
or
ss
mov
repz
adc
xor
in
jo
or
xor
cmp
mov
inc
push
out
icebp
xchg
pop
push
mov
data16
add
sub
xor
ret
jne
leave
sub
pop
adc
jecxz
std
fdiv
xchg
fadds
xchg
cmp
inc
ss
lods
sub
inc
ror
pop
jo
repnz
mov
popf
add
push
xor
pop
sub
cli
and
lcall
out
int3
push
outsl
jnp
sbb
or
jb
or
pushf
into
cld
jo
sbb
out
nop
add
add
mov
xchg
jmp
testb
mov
push
cmpsb
mov
xor
pop
test
pop
ljmp
add
testl
int
fists
sub
mov
bound
stos
xchg
pop
jl
ret
dec
push
lret
jecxz
adc
sbb
jle
cmp
cmp
stos
add
mov
in
movsb
ror
sbb
out
xchg
lcall
out
xchg
inc
inc
xchg
and
aaa
lods
mov
mov
xor
nop
or
fadd
insl
mov
stos
scas
xchg
mov
shl
or
pop
aaa
inc
sub
mov
push
data16
inc
int
popa
and
mov
mov
mov
shlb
movsl
xchg
insb
imul
ret
fisttpl
jo
inc
add
mov
push
loope
imul
aas
inc
cmp
insl
mov
lahf
leave
pop
mov
push
adc
mov
ja
rorb
imull
mov
inc
push
jge
shll
movsb
xchg
mov
in
and
or
lcall
pop
das
cmp
push
enter
adc
lret
jg
jmp
rcrb
mov
push
jno
xchg
pop
jns
push
jle
cmp
and
fs
js
inc
add
test
mov
xor
mov
sahf
stos
fisttpl
and
je
dec
mov
sti
xor
xchg
push
push
mov
es
mov
fisttps
mov
insb
test
sbb
adc
adc
out
out
rorl
jl
clc
loope
jg
dec
sub
mov
iret
test
add
fists
cli
cmpsl
xchg
and
test
scas
dec
and
mov
fdivrl
inc
shrl
inc
rolb
adc
sub
jl
movsb
fwait
shlb
bnd
leave
xchg
xchg
int
int3
adc
xor
adc
sbb
js
lds
test
cltd
dec
jp
jle
fcmovb
inc
sbb
dec
cli
cmc
inc
sub
lock
imull
pop
pop
rcl
mov
jg
cmp
jae
xchg
push
pop
and
clc
jp
lret
xchg
lea
daa
and
xchg
mov
xchg
or
into
jecxz
pop
outsl
sub
andb
lret
add
in
mov
daa
stos
xor
or
push
test
push
push
arpl
mov
ror
or
aam
mov
iret
inc
push
jnp
inc
addr16
push
mov
js
mov
inc
lret
setp
mov
imul
adc
push
fsubrs
ss
inc
mov
ss
push
sbb
or
add
rcll
or
pop
ret
repnz
dec
sub
mov
xchg
dec
icebp
arpl
clc
lret
fmul
lds
stc
sbb
das
mov
into
jg
jns
movsl
jg
cli
xchg
lahf
jbe
sbb
cmp
xchg
stos
aas
lea
mov
cmovp
sahf
sbb
leave
inc
mov
pop
sub
push
xchg
jb
ret
push
mov
lcall
mov
shll
pop
pop
enter
imul
int3
jle
lret
je
bound
popa
adc
and
xor
outsb
enter
mov
cs
loopne
sbb
mov
enter
jmp
lret
lahf
sbb
jp
pop
mov
or
pop
and
testb
pop
sub
sbb
mov
jl
lock
stos
cld
insb
cmp
mov
std
sti
pop
in
loopne
mov
xor
push
cmpsb
cwtl
jnp
mov
pop
cmpsl
jb
and
push
mov
push
repnz
cmpsb
mov
out
test
clc
loop
mov
in
lods
loop
push
mov
pop
pop
fmuls
inc
xor
or
in
xchg
fldenv
push
notb
sub
add
adc
mov
sbb
xchg
jecxz
loope
fsubs
shrb
or
fiaddl
add
pushf
add
lock
lds
pop
mov
jnp
pmulhw
sub
jl
addr16
mov
push
push
sbb
lcall
xor
bound
out
dec
cmp
xor
inc
push
loop
sbb
out
inc
xchg
stos
scas
rcll
push
jbe
call
das
loop
or
test
out
repnz
into
and
roll
cmp
nop
fs
jb
fstpt
jnp
shlb
sbb
adc
mov
sbb
jmp
fldenv
jno
add
mov
addr16
cmpl
out
add
insl
mov
cld
xchg
pop
inc
lcall
pushf
adc
insb
sub
jnp
mov
or
mov
mov
mov
jb
lock
mov
add
inc
negl
and
rcll
sub
movsl
or
mov
sbb
cmp
xor
clc
jns
fwait
stos
xor
xor
fwait
dec
pushf
rol
adc
and
fdivrs
xor
push
mov
pop
and
xchg
lret
cmc
lods
sbb
jns
in
sbb
xchg
mov
xchg
mov
dec
repnz
test
fldl
stos
lods
test
mov
mov
xor
push
jne
popf
outsl
rcr
xchg
push
out
fistpll
repz
jl
imul
push
in
dec
push
pusha
popa
pop
push
or
sbb
dec
inc
pop
push
jle
lods
cmpsl
mov
xor
je
inc
inc
mov
icebp
pop
imul
xor
dec
and
mov
frstor
cmp
cmp
mov
fs
push
mov
mov
or
mov
sbb
cld
xchg
dec
jb
dec
add
sub
test
jbe
stos
mov
jmp
addr16
sahf
ja
pop
ja
inc
dec
outsb
pop
mov
and
push
sbb
sub
push
roll
add
and
push
cld
jns
lret
out
mov
sub
es
pushf
mov
jno
mov
pop
pusha
idiv
dec
cmc
sub
enter
popa
push
andb
jmp
or
or
pushf
pop
repz
imulb
sbb
enter
pop
add
jb
xlat
imul
pushf
xchg
sbb
push
pop
les
pop
adc
cli
jb
call
mov
enter
xor
sub
jns
rorb
insl
jae
lret
cli
mov
aam
sub
imul
fwait
stos
sbb
jg
in
or
jno
movsl
pop
mov
test
or
dec
adc
dec
outsl
btr
jae
out
sbb
xchg
in
frstor
outsl
out
cmc
mov
xlat
pushf
test
aam
inc
adc
mov
lods
lahf
movsl
lahf
xorps
push
and
incb
cmp
fdivrs
fldcw
sbb
or
xchg
cwtl
dec
pop
dec
or
dec
lahf
xchg
inc
adc
sub
inc
lret
leave
add
inc
or
xchg
xor
pop
jl
dec
adc
jns
inc
inc
pop
or
sbb
inc
lahf
negb
imul
jmp
lret
aas
daa
dec
push
popf
pusha
addr16
lods
xor
out
sarl
push
xchg
dec
aad
lret
cmp
inc
les
shlb
sarl
icebp
push
movl
cmp
je
mov
mov
mov
or
add
and
add
sbb
lds
sarb
fmull
pusha
pop
dec
mov
mov
pop
outsl
int
xor
jae
and
and
imul
in
test
aam
enter
sbb
xchg
push
jae
repnz
lods
and
add
es
mov
mov
add
inc
add
jo
test
sub
jb
movaps
mov
into
es
imul
sarl
stos
add
adc
ljmp
lcall
push
push
jne
adc
inc
push
fcomps
xchg
fidivs
ffree
movsl
dec
cmpsl
sbb
cmp
cmp
sarb
jg
inc
push
je
push
loop
nop
mov
stc
mov
adc
xchg
mov
loopne
sahf
xor
into
es
les
into
int
push
jnp
movsl
push
xchg
xchg
out
xor
movsb
xchg
mov
pop
ret
call
addb
imul
rorl
push
std
xchg
mov
sti
cld
call
mov
mov
add
repz
sbb
inc
push
loopne
sub
cs
mov
ret
lock
std
sbb
sahf
frstpm(287
adc
push
mov
hlt
push
ljmp
imul
loopne
xchg
addl
xchg
xchg
pop
leave
repnz
sbb
out
push
adc
add
flds
hlt
popf
roll
mov
sub
mov
dec
mov
add
add
xor
dec
cltd
fdivl
and
mov
gs
pop
in
cld
fistps
mov
imul
push
cmc
cli
out
lock
inc
andb
adc
or
inc
sti
sub
add
inc
or
sub
es
insb
push
popa
adc
ja
out
sub
and
add
jl
movsl
mov
xor
mov
ret
clc
xor
int3
pop
jmp
adc
mov
in
sub
lods
fidivrs
js
movsb
mov
pop
fstp
jmp
sbb
lea
clc
cmp
dec
inc
pop
pop
mov
and
dec
lods
cmpsb
adc
pop
xorb
sub
jecxz
icebp
lcall
jmp
popa
pop
pop
xchg
inc
mov
xadd
loop
cmp
dec
mov
mov
jmp
addl
push
xor
cmp
icebp
arpl
hlt
mov
cmp
test
ror
add
jno
lea
mov
imul
inc
imull
js
das
sbb
repz
push
mov
fildl
mov
in
jns
popf
mov
inc
jge
test
jb
cmp
cwtl
sarb
pop
dec
lahf
ja
mov
lods
mov
in
stos
mov
xor
pop
jb
aad
ljmp
inc
pop
clc
jb
xor
inc
jb
in
mov
mov
inc
xlat
into
arpl
shll
daa
loopne
or
lock
xor
add
hlt
mov
ds
test
mov
ffreep
lahf
loopne
sbb
in
in
sbb
or
inc
cmpsb
cmpsl
sub
sbb
pop
repnz
repnz
add
or
ret
mov
data16
xchg
mov
cmp
int3
imul
pop
insl
add
out
test
cmp
iret
xor
xchg
adc
jnp
push
fmul
sbb
stos
cmp
in
je
adc
dec
push
adc
sti
xor
in
shrl
sti
xor
mov
jno
xor
jl
sub
xor
adc
sbb
adcl
lea
stos
dec
test
lret
jnp
xchg
push
sub
push
inc
popa
jmp
in
dec
fldl
sub
js
sub
pop
jl
clc
sbb
cmc
subl
mov
out
pop
inc
jnp
lock
or
scas
fbstp
iret
cmpsb
jo
scas
lds
inc
add
cmp
lcall
bound
jns
xorb
es
xor
xor
cmpsl
mov
imul
fwait
pop
out
popf
jb
fstps
inc
mov
jmp
out
or
pop
jp
dec
mov
mov
cmc
mov
jle
hlt
fldl
lods
std
xchg
sub
sahf
mov
subl
lods
outsb
or
sti
or
sub
xchg
imul
in
sbb
or
mov
das
mov
sbb
rcr
or
les
insl
pop
mov
outsb
jo
aas
in
gs
les
xchg
add
leave
les
js
pop
inc
bnd
mov
pop
stos
imul
aam
enter
dec
aam
cmpsl
sti
into
aaa
lret
aas
sub
pushf
sub
popa
xor
sbb
andl
jno
mov
and
daa
jl
inc
icebp
push
xor
leave
gs
adc
cmp
pop
push
mov
sub
js
mov
lods
dec
lods
lock
repz
icebp
pop
and
push
dec
pop
mov
mov
jl
cmp
inc
loope
push
loop
xchg
xchg
xchg
inc
xor
mov
mov
out
inc
mov
push
or
insl
mov
into
clc
mov
cmp
iret
lahf
adc
add
sbb
xor
push
repz
jnp
lret
and
shll
scas
adc
lret
mov
pop
and
add
dec
cmp
inc
mov
jns
add
lea
inc
mov
cmp
jb
lock
jg
int
loopne
xor
cmp
sub
pop
push
xchg
push
dec
js
fwait
jbe
into
jnp
lahf
mov
lods
dec
mov
add
je
aaa
stc
push
or
ljmp
inc
mov
rcll
add
aad
scas
jg
mov
idivl
les
inc
add
negb
cmpsl
add
mov
in
inc
loope
outsb
fs
mov
mov
adc
adc
cmpsb
les
and
pop
lock
nop
or
push
mov
out
xchg
aaa
pop
lea
sbb
or
adc
jnp
arpl
imul
lahf
leave
add
or
loopne
sbb
stc
out
xor
clc
in
adc
shll
or
insb
sbb
and
sbb
pop
inc
sbb
sub
push
adc
jmp
andl
mov
popa
int3
cltd
adc
pushf
fldt
mov
dec
call
jne
push
inc
push
lods
stos
jbe
and
cmp
enter
push
ret
sub
fwait
mul
mov
jo
jle
daa
pop
scas
xor
loope
sarb
insb
rol
icebp
xchg
mov
pop
push
pop
orl
repnz
pop
jle
les
fcmovnu
clc
xchg
jge
repz
inc
sti
fsub
jle
aaa
test
rcrb
mov
or
sti
jb
jmp
call
lret
mov
inc
aas
jle
mov
mov
lds
aad
jnp
dec
std
sbb
popa
cmp
mov
or
stos
jge
jge
sub
ds
scas
push
popa
add
popf
out
rclb
pop
pop
loopne
int
mov
enter
nop
mov
aam
inc
sti
xor
pop
ljmp
xchg
js
je
aam
xchg
jmp
sti
xor
aam
out
adc
inc
adc
in
flds
out
and
gs
outsb
divl
xchg
ds
roll
jbe
dec
leave
jnp
pop
or
cltd
data16
outsl
xchg
mov
cld
loop
xchg
sahf
int
mov
inc
xor
in
mov
insb
pop
inc
lds
cmp
jnp
aaa
jne
pop
push
xor
out
fistpl
scas
mov
rol
cli
lea
sarl
add
mov
sub
mov
adc
jo
data16
add
pop
andb
jno
hlt
mov
push
xchg
xchg
hlt
ret
ja
and
mov
add
into
mov
out
inc
push
sub
xor
mov
aaa
inc
rcl
loopne
push
iret
mov
add
mov
cmpsl
aam
imul
subl
jns
lret
and
ret
cwtl
or
add
rcll
test
dec
dec
xchg
jb
nop
sbb
xor
arpl
lahf
fimull
jo
pop
and
lret
mov
aad
incb
popl
and
xchg
dec
lock
push
scas
jle
hlt
mov
jae
pusha
pop
mov
mov
lods
jmp
fwait
leave
pop
or
inc
loopne
pushf
add
hlt
mov
jns
adc
xchg
fwait
add
fs
fdivrl
es
int
pusha
call
jmp
pop
xchg
sub
loopne
pop
or
roll
aam
pop
pop
jecxz
out
sub
andl
cwtl
add
lret
jno
jb
jae
pop
cwtl
out
add
mov
or
in
out
fnsave
jo
lods
lret
cmp
mov
adc
out
nop
mov
notb
mov
sub
dec
fisttpll
mov
jp
aas
fsubrp
add
stos
shrl
in
mov
loopne
mov
push
inc
adc
or
xchg
add
rcrl
jge
addl
adc
or
je
push
adc
xchg
xor
sub
mov
gs
add
jmp
popa
mov
out
lea
fdivs
bound
dec
adc
jnp
jge
shr
repnz
xorl
cmpsl
fiaddl
lcall
jecxz
dec
daa
lret
in
or
iret
jge
loope
sbb
push
das
jmp
jne
stc
mov
mov
mov
adcl
or
add
loop
test
jle
ds
push
sbb
xor
arpl
ss
xlat
sub
iret
pop
inc
daa
in
mov
pop
or
rclb
cld
imul
test
jle
ljmp
xchg
and
cmp
fcmovnb
dec
mov
fisubl
lret
cmp
fsubl
ja
call
hlt
push
dec
lods
dec
jae
or
mov
movsl
movsb
pmaxsw
mov
cmp
adc
fistl
test
nop
das
lea
xlat
dec
clc
and
movsb
cs
test
out
mov
adc
ja
stos
aas
cltd
fstp
jnp
sbb
in
inc
out
adc
mov
add
pushf
dec
loopne
nop
cmpsb
imul
out
test
mov
testb
bound
mov
mov
leave
sahf
cmp
inc
mov
ds
push
fiadds
sub
mov
insb
and
fisttpll
das
sbb
sbb
cmp
push
mov
push
xlat
mov
aam
sbb
movsl
adc
stos
add
or
in
fmull
sbb
les
hlt
mov
js
pop
xchg
std
test
mov
push
fstpt
jge
cmpb
dec
lcall
and
jp
jp
das
frstor
or
aam
cmp
stc
enter
or
fildl
sbb
inc
sbb
mov
xchg
mov
jae
mov
cmp
adc
rcrl
pop
and
fstp
inc
add
fdivs
shll
push
adc
inc
jne
cmp
fcmovb
and
shrb
shlb
cli
sbb
repz
mov
pop
sbb
push
pop
sbb
in
inc
mov
ror
jae
inc
aad
xchg
push
add
pop
das
test
and
int
js
fisttpl
xchg
aam
addr16
pop
jmp
mov
ljmp
jne
adc
into
jle
add
ret
rcrb
pusha
lahf
aam
xchg
jmp
testl
ljmp
hlt
mov
ja
outsb
cmp
push
cmp
js
sub
add
push
fsts
lahf
xor
movsb
xchg
insb
out
les
push
jne
push
xor
hlt
fimuls
in
xor
adc
push
mov
out
stos
test
ret
mov
dec
push
scas
add
or
mov
sti
adc
repz
iret
xorl
mov
xchg
scas
pop
iret
movsl
fisubrs
bound
adc
pop
jl
andb
xor
mov
repnz
mov
push
mov
cld
mov
movsb
xor
mov
sbb
xor
xchg
movsl
push
push
cmc
js
push
ret
push
lret
out
test
lret
int3
cmp
shll
stos
inc
fmull
pop
adc
testb
jp
dec
bound
mov
aam
orl
insl
out
adc
jge
sahf
jecxz
xor
outsl
repz
fldenv
jno
daa
mov
add
outsb
movsl
inc
jae
aad
adc
lods
dec
xchg
sub
cmpsl
std
xchg
push
mov
stos
jne
push
mov
mov
lds
dec
fld
xchg
int3
int3
test
mov
popa
das
add
inc
xor
add
fbstp
aad
movsb
mov
adc
loope
sub
dec
adc
fdivr
mov
lcall
in
adc
comiss
pop
xchg
lds
int
push
lret
inc
or
adc
out
imul
push
and
sbb
rcrl
xchg
mov
pop
cmpsl
cmp
mov
and
lcall
shll
cld
jg
mov
push
out
jnp
lret
add
xor
xchg
loop
push
xor
bnd
mov
mov
pop
movl
jle
fstps
das
insb
int
cmp
xchg
sub
xchg
push
nop
daa
jns
lods
xchg
mov
test
push
aam
js
adc
push
adc
inc
sbb
and
mov
adc
stos
test
jbe
push
xchg
xor
cmpb
sub
lret
dec
jp
mov
cmpsb
imul
mov
or
scas
stc
outsl
es
fcomps
push
sub
js
fs
ds
cs
lahf
inc
cltd
xchg
packsswb
xchg
jl
insl
pop
cmp
push
inc
cmp
out
pop
mov
jl
imul
mov
call
aad
push
imul
mov
scas
cltd
dec
hlt
sti
mov
aaa
or
push
fwait
xor
cmp
push
sub
aad
subb
mov
mov
in
fiadds
cmp
sbb
cmp
arpl
xor
dec
mov
or
jl
rorb
push
sub
les
int
into
pop
cli
dec
fcomi
mov
gs
mov
cwtl
lret
shll
mov
sbb
test
push
pop
xchg
sub
leave
call
mov
popf
mov
adc
hlt
sarl
in
aam
stos
daa
ficomps
insl
faddp
dec
negl
pop
or
stc
pop
and
scas
aam
adc
shlb
loopne
loope
inc
into
or
out
lods
ss
mov
lret
or
lock
clc
mov
xlat
push
cmp
negb
dec
jge
pop
cmpsb
cltd
mov
mov
and
inc
inc
cwtl
inc
pusha
and
movsl
sub
jle
or
mov
fwait
xor
fwait
cmpsl
push
xchg
shll
addb
mov
sbb
cmpsl
ss
fwait
jb
mov
hlt
lods
jecxz
or
dec
mov
dec
in
enter
enter
or
jae
push
add
mov
push
push
jmp
dec
mov
mov
ss
in
push
pop
add
cs
xchg
and
jbe,pt
scas
subl
dec
jae
mov
inc
stc
sbb
xor
xchg
sbb
add
in
push
loop
int3
or
cltd
mov
pop
pop
xchg
mov
mov
jo
push
mov
xchg
test
cmp
sbb
fidivs
lods
xchg
notb
pop
fwait
cld
xor
push
cmp
xchg
and
ret
rorl
pop
sbb
cmp
mov
mov
push
and
test
add
push
push
hlt
pop
sbb
jl
gs
cmp
lods
mov
cmp
lahf
and
mov
bnd
jbe
stos
sub
add
mov
jp
sti
mov
in
insl
jle
lea
fstl
pop
cmc
loope
imul
push
adcb
inc
dec
in
imul
mov
insb
jle
stc
mov
or
js
mov
cmp
xchg
jmp
pop
xor
sbb
push
sub
cmpsb
sahf
pop
stc
mov
and
and
sti
adc
xchg
jno
flds
stos
add
cmpsb
jmp
and
icebp
out
xrelease
mov
movsl
ljmp
mov
xchg
cld
jg
gs
decl
and
sti
and
xchg
mov
pop
insl
or
dec
int3
fsubl
xlat
push
xor
jle,pt
jbe
adc
aad
or
adc
adc
mov
adc
sub
dec
loopne
stc
stos
push
int3
pushf
inc
sub
subl
enter
add
in
das
dec
jae
xor
cmp
mov
pop
xor
push
scas
jae
data16
add
xchg
xchg
in
aaa
cltd
lret
jb
or
mov
test
imul
movsb
mov
xchg
sub
iret
jb
ja
je
ja
xchg
andb
push
sti
stc
js
orb
mov
fdivr
jne
mov
ret
push
mov
fbld
in
xchg
in
jbe
add
rorl
sub
movsl
sub
test
mov
jne
outsb
pop
js
ret
cld
fwait
mov
mov
push
ds
sub
rclb
pop
fwait
imul
fcmovb
icebp
push
add
xchg
cmp
data16
add
je
inc
dec
sub
scas
dec
lock
mov
and
or
mov
fldl
mov
and
clc
aad
lcall
push
into
jno
add
mov
imul
js
and
test
mov
push
int
mov
sub
not
jne
sti
enter
lds
jecxz
inc
sbb
jge
call
pop
xor
ds
js
js
icebp
ret
ret
filds
sub
jnp
in
cltd
cmpsb
or
xchg
outsl
inc
leave
fwait
jecxz
shlb
mov
in
push
and
sbb
xchg
cld
mov
mov
call
cmpsb
movsl
pop
hlt
insl
insl
pop
xor
mov
push
cmp
sbb
ficoml
rcrb
pop
movhps
test
les
outsl
or
xchg
scas
leave
adc
and
rolb
mov
add
mov
push
jae
jbe
xchg
sub
imul
mov
add
dec
popf
push
insb
xor
repnz
dec
dec
xorb
cmp
frstor
imulb
push
stc
pop
dec
jae
xchg
sub
mov
adc
test
xor
add
loop
out
jle
jecxz
js
and
fdivl
jg
adc
gs
iret
push
out
clc
xor
rolb
add
or
insl
aad
dec
adc
rorl
cli
jns
xchg
ret
ds
inc
sbb
jmp
xchg
lods
pop
mov
jnp
in
and
pop
dec
adc
sub
push
loopne
int
aas
mov
in
and
jae
mov
jns
test
rep
out
push
fcmovnbe
dec
cwtl
mov
xor
xchg
cli
dec
iret
cs
jo
adc
inc
cmp
loope
fmull
shrb
adc
into
lahf
or
out
neg
sbb
mov
bound
ffree
cmp
insb
xchg
jge
into
xchg
pop
sub
clc
ljmp
mov
push
xchg
pop
pop
in
ret
or
pop
lds
fwait
lahf
pop
mov
lret
mov
pop
lret
xor
cmpl
loopne
add
or
push
mov
pushf
xchg
dec
das
inc
aaa
push
dec
sub
cld
pusha
js
pop
mov
ja
test
imul
xor
and
fucomip
scas
or
test
xorl
pop
dec
jne
pop
movsb
push
lds
dec
add
mov
cmp
scas
add
mov
lea
fldenv
pop
repnz
mov
jbe
and
pop
jne
push
lods
push
add
pop
mov
jbe
sar
mov
jle
sbb
adc
inc
push
jae
stos
xchg
lods
shlb
shlb
decb
repz
and
loopne
sub
fdivr
aas
sub
inc
daa
jno,pn
pop
ds
cwtl
mov
push
std
repz
mov
mov
loope
lcall
sub
sub
sbb
mov
add
jmp
sbbb
cwtl
cmp
jae
addr16
stos
shlb
test
pop
idiv
lret
push
pop
or
rcrb
ss
lcall
enter
push
stc
mov
mov
movsb
roll
mov
ret
std
mov
shl
stos
cmp
push
sahf
sub
pop
mov
mov
xor
mov
sbb
inc
mov
cmpl
mov
cli
mov
mov
mov
pop
ja
mov
jmp
xor
dec
jnp
std
lock
fcomp
mulps
into
pusha
mov
pop
sbb
adc
add
out
rorl
imul
shrl
lahf
jge
xlat
push
lods
lcall
push
add
add
jne
adcb
std
notb
mov
shrb
push
sbb
pop
jl
jns
dec
sbb
das
jo
int3
pop
imul
test
dec
loopne
test
shrl
or
arpl
sahf
cmp
lahf
pop
icebp
ds
dec
sti
rcr
add
xor
mov
mov
sub
jl
loope
jl
mov
pop
dec
jae
jb
sub
xchg
jbe
ret
xlat
jo
or
daa
test
or
inc
and
dec
push
ret
push
test
xchg
subb
adc
fdivs
or
loop
divb
es
cld
negl
push
add
into
out
fcompl
rclb
mov
add
aas
mov
icebp
outsl
push
jbe
adc
dec
in
mov
sbb
cmp
arpl
cmpsl
loop
ret
adc
lock
imul
in
mov
xchg
ss
jne
mov
adc
into
mov
dec
xchg
pushf
repnz
dec
add
fisttps
bound
or
push
stos
test
inc
scas
sub
mov
push
inc
push
mov
pop
inc
mov
sbb
mov
or
jb
xchg
dec
out
xchg
push
frstor
inc
adc
pop
lcall
mov
mov
in
adc
std
push
push
cld
fisubs
sub
jle
scas
push
dec
lret
into
inc
jmp
xchg
mov
sub
lock
jo
subps
scas
push
jp
and
mov
push
or
pop
jns
mov
arpl
fmul
leave
shlb
dec
les
inc
lret
out
sahf
mulb
std
mov
aad
test
add
mov
addl
arpl
xor
xor
call
fcmovbe
mov
icebp
cmp
add
repnz
inc
add
outsl
fisttpl
pushf
decb
lea
and
popa
cmpl
and
out
rcrb
imul
jnp
xor
es
add
call
fnstenv
fs
jb
sub
xchg
push
sub
jecxz
xor
nop
lret
sbb
repnz
stos
mov
in
push
jb
add
movsl
xor
pop
xchg
mov
inc
and
subl
outsl
sahf
lcall
loope
insl
data16
sbb
cmp
paddsb
jp
and
xchg
fs
mov
shrl
lds
push
jbe
cs
out
pop
lcall
xor
out
lcall
loope
lea
das
mov
mov
stos
add
inc
addr16
adcb
or
cli
popa
lock
decb
mov
test
mull
xor
jg
jmp
imul
fcmovnb
sub
fstpl
insb
rorl
out
mov
sub
fisttps
aas
inc
sub
mov
sbb
and
shrl
imul
outsl
lcall
mov
loope
push
mull
or
xlat
xor
jnp
add
decb
outsb
xor
lds
stc
adc
inc
cmpsb
mov
imul
fs
rclb
jge
lahf
push
es
adc
data16
cltd
mov
stc
xchg
dec
daa
mov
add
fisubs
cmp
xlat
sub
xchg
daa
jno
or
jmp
fdivrs
xor
push
divl
jg
loopne
loope
pop
adc
into
xchg
jnp,pt
lret
ds
lods
mov
dec
and
sbb
frstpm(287
test
inc
adc
daa
cli
shlb
pusha
sahf
and
xlat
xlat
in
orb
dec
jno
mov
sti
movsl
in
jge
mov
xchg
sbbl
into
push
push
cltd
jle
repz
lods
xchg
subl
jle
pop
pop
inc
insb
or
pop
push
loopne
sti
gs
dec
xchg
bound
fisubl
fmuls
int
loop
pop
subl
cmp
sub
mov
adc
mov
pop
mov
test
nop
dec
add
popa
and
cmp
jecxz
lds
call
adc
inc
notl
cmpb
loop
mov
ds
popf
inc
mov
adc
mov
js
inc
jge
imul
in
jg
or
mov
int3
xlat
cmp
push
hlt
sbb
bound
iret
adc
ljmp
push
repz
lock
or
and
mov
movsl
jecxz
movsl
xor
enter
dec
jl
push
pusha
jo
sbb
dec
ret
sbb
xchg
cs
cltd
jbe
adc
sbbl
pop
aaa
or
sahf
jp
fs
xchg
jo
push
sahf
jl
inc
jecxz
push
inc
jo
nop
gs
pushl
jmp
jb
jp
mov
jecxz
imul
jg
scas
xchg
and
push
xorb
stos
pop
adc
int3
xchg
out
ljmp
frstor
in
ror
loope
adc
test
cmp
and
pushf
jmp
loopne
jg
cld
inc
jns
enter
std
xor
mov
lret
sti
fdivl
and
pop
mov
ror
cs
push
andl
scas
inc
push
mov
jecxz
rolb
and
xor
adc
rorl
dec
popa
sbb
and
shrb
add
mov
adc
arpl
fcomip
push
push
inc
inc
sti
xchg
push
pop
cmp
pusha
dec
lret
test
inc
std
ret
cwtl
dec
push
clc
push
cmp
lcall
adc
xchg
jge
xor
outsb
pusha
lock
jl
pop
cmpsl
sub
lds
mov
or
imul
fs
mov
fimuls
jbe
inc
fimuls
cli
xchg
sub
pop
mov
mull
push
jg
loop
pop
xor
in
add
cwtl
mov
int3
jg
jmp
in
ljmp
inc
mov
sub
ficomps
stos
inc
adc
je
orl
sub
inc
xchg
shr
jnp
jo
xor
jg
cli
dec
or
sbb
jle
hlt
inc
cmpsl
scas
sub
push
aam
std
ss
stos
ljmp
pusha
int3
hlt
xlat
jns
movsl
push
and
cmp
add
jle
fidivs
adc
jl
dec
in
mov
js
xchg
xchg
stos
pop
iret
std
and
loope
das
test
pop
jae
jae
ja
adc
ljmp
pop
and
pushf
jmp
aam
adc
rolb
insb
jmp
mov
sbb
cmc
pop
fcoml
and
jnp
cmp
add
hlt
rcl
repz
lahf
cld
pop
add
into
ret
aas
movl
sub
mov
xchg
jns
ficomps
jbe
jmp
testb
and
pop
or
mov
std
adc
es
in
adc
loope
fcompp
pop
jne
xchg
rcl
dec
jmp
gs
aaa
add
js
mov
jno
jae
inc
adc
push
add
xchg
cli
arpl
enter
pushf
jnp
pop
notl
lods
sarl
sbb
mov
lcall
or
cmp
icebp
sub
or
fadds
lcall
scas
inc
sbb
push
fidivrl
aas
pusha
mov
xlat
jbe
cltd
ja
bound
test
pop
int
mov
mov
sbb
xchg
sbbl
scas
push
fildl
mov
pop
xlat
xchg
decb
lret
xchg
dec
or
in
cld
xchg
and
iretw
imull
rcrb
or
adc
lret
jno
mov
ret
lret
push
fnsave
imul
adc
rclb
test
in
movsl
sarb
pop
cmpsl
pop
mov
lahf
xor
and
mov
les
arpl
fists
mov
idiv
mov
enter
insb
add
fcomp
std
sbbb
int3
mov
adc
fldenv
popa
scas
psrld
in
mov
push
lock
xchg
aaa
xor
cmpsl
jae
ss
aaa
test
jo
mov
push
push
idivl
push
mov
loopne
das
divl
jl
mov
inc
clc
cmp
notl
jne
cld
cmc
sub
jo
mov
les
xchg
out
repnz
iret
flds
out
or
sub
rcll
add
adcl
mov
jns
mov
mov
jg
ss
cmp
int3
scas
jnp
inc
jbe
ljmp
cmpsb
arpl
push
push
and
sub
xchg
add
push
adcb
xlat
xlat
push
inc
jge
dec
pop
cmp
pushf
sahf
add
push
adc
pop
pop
xchg
bound
in
outsl
bound
push
pop
mov
inc
std
add
add
in
enter
jl
leave
cltd
movsl
sub
sbb
icebp
lahf
xchg
jmp
sub
mov
pop
ss
stos
or
or
insb
jb
ja
add
sbb
fisubl
mov
shll
and
mov
movsb
inc
pop
xchg
test
add
mov
scas
sub
sub
push
stos
pop
enter
push
orl
inc
sbb
ret
leave
push
sbb
xor
lahf
fmulp
int3
hlt
adcl
sbb
xor
xchg
dec
cld
jmp
rcrb
int
daa
push
adc
jb
and
out
push
insb
add
rorb
fucomp
es
sub
jge
or
es
lahf
xlat
popa
aas
push
outsb
clc
ja
mov
aas
adc
sub
popa
lret
fwait
sbb
mov
ljmp
pop
inc
and
push
mov
sahf
sub
std
shlb
es
inc
inc
clc
cmpsb
xchg
mov
in
jg
mov
stos
fidivl
mov
loop
scas
mov
inc
je
subl
cli
imul
inc
out
xor
cli
dec
mov
xor
jb
out
cmp
mov
movsb
jge
imul
push
ret
sbb
pop
jno
lcall
inc
inc
add
cmpsb
pop
scas
add
push
add
inc
in
bound
loopne
push
in
and
pop
mov
mov
jns
lds
icebp
das
inc
stc
popf
push
ss
sbb
mov
lret
das
push
psubb
xchg
popa
push
ror
sbb
push
push
call
ss
popf
lret
xchg
arpl
shlb
dec
sahf
inc
sub
push
or
arpl
sti
xchg
push
mov
push
mov
mov
pop
jge
add
and
sbb
inc
dec
adc
push
xor
mov
aas
rcr
push
fistl
mov
mov
xchg
xor
push
bound
sub
cmp
ret
seta
mov
push
lds
cmc
js
lahf
cmpl
and
mov
sub
mov
pop
and
int
daa
dec
fwait
fwait
je
xchg
sbb
xor
sahf
icebp
movsb
imull
enter
test
cmp
jo
icebp
mov
js
xchg
jo
adc
and
lock
adc
aad
mov
fisubrs
sub
pop
scas
cmp
mov
mov
pop
aaa
fidivl
decb
push
je
movsb
rorb
jb
movsb
in
cmp
xchg
jnp
and
dec
lods
jl
mov
lods
or
scas
outsb
pusha
mov
adc
cmp
std
cltd
nop
fsub
pop
mov
movsb
mov
jns
test
in
ret
movsb
sub
aas
js
or
push
mov
mov
outsl
push
test
dec
mov
cwtl
cmpsl
xchg
mov
imul
cld
es
or
cmp
sarb
xchg
adc
mov
jae
imul
lds
mov
lea
in
inc
les
add
les
adc
inc
pushf
lahf
lds
pop
jb
pop
push
jnp
push
mov
sbb
jo
scas
xor
pusha
fadd
push
repnz
inc
inc
xchg
out
in
inc
push
inc
xchg
push
test
aaa
shlb
add
mov
bound
inc
push
push
repz
bound
imul
push
cmp
add
sbb
xor
push
divl
pop
mov
xor
jo
add
inc
adc
push
daa
icebp
cmc
shrl
push
xchg
pop
lahf
inc
or
sahf
dec
xor
loop
cmpsl
pushl
or
jp
outsb
xchg
xlat
jae
stos
xchg
popf
push
and
es
mov
call
cli
add
jecxz
outsl
cmp
jg
jp
rclb
inc
xchg
in
mov
in
out
scas
out
xchg
pop
das
scas
adc
in
dec
cmp
mov
pop
cmc
mull
popa
sarb
push
dec
ficoms
sub
loope
lret
test
icebp
stc
std
mov
jmp
or
pop
push
inc
arpl
add
repz
xchg
xlat
sub
mov
dec
fwait
dec
push
cs
inc
jns
int
jns
add
dec
push
mov
lahf
push
xchg
cld
pop
sti
fwait
adc
cli
push
xchg
xor
pusha
aas
add
fildl
imul
or
aaa
lds
mov
mov
pop
inc
add
push
andl
incl
cmp
test
push
int
lahf
pop
or
cwtl
sbb
and
outsb
sub
jg
mov
leave
out
aam
pop
test
mov
aad
push
test
gs
rcrl
iret
in
arpl
cmp
mov
in
outsl
xchg
adc
sub
subb
mov
cmp
int3
aas
sbb
jp
add
shll
popa
add
fs
iret
test
repz
into
imul
cmpsb
mov
jl
cmp
xlat
sbb
jbe
in
out
dec
xchg
lahf
lret
pop
lret
push
lock
inc
popa
shlb
mov
mov
sbb
test
xchg
jecxz
je
xchg
adc
setg
cmp
loop
in
lds
mov
test
nop
cmp
xor
mov
jmp
lret
pop
jge
or
aaa
sbb
jne
in
addb
inc
rol
loop
adc
sbb
cld
and
push
cmp
out
stos
pop
repnz
test
or
dec
les
popa
mov
xor
add
leave
and
push
arpl
cwtl
sbb
cld
dec
inc
sbb
add
jb
aaa
cwtl
and
cmp
je
add
ljmp
xchg
lock
leavew
sarb
arpl
inc
jmp
pop
inc
popa
sbb
jae
aad
push
bound
test
dec
test
daa
jb
ret
push
mov
aam
add
push
mov
dec
gs
lock
iret
sub
sbb
dec
ljmp
xchg
mov
jno
fldpi
dec
mov
mov
push
imul
cmc
fadds
xchg
mov
mov
ljmp
adc
cmc
fwait
adc
mov
xchg
je
and
movsl
sub
icebp
xor
sti
sub
pop
insl
idivl
insl
cmp
rcrl
icebp
jp
pop
cltd
std
fdivl
adc
nop
jb
movsl
jge
push
adc
mov
xor
adc
mov
mov
sub
scas
shlb
inc
pop
cmp
jg
jp
test
enter
bound
aas
mov
out
out
or
into
jge
inc
addr16
into
jp
add
or
mov
xor
adc
or
mov
ret
and
insl
das
or
xor
adc
cmp
loopne
addl
cmp
aaa
adc
mov
lret
js
cld
xor
mov
mov
push
dec
outsl
sub
pop
xlat
loopne
fdivrp
out
push
inc
ja
xor
popa
ljmp
xchg
popf
insb
sbb
push
std
cwtl
mov
adc
in
sub
popa
test
cmp
nop
xor
mov
out
rorb
push
sub
mov
jae
js
mov
int
jg
pusha
cld
mov
mov
rcrb
mov
stos
pushf
aad
lret
mov
xchg
inc
imul
mov
cli
jnp
mov
inc
pop
cmp
mov
inc
das
rcrb
sub
outsb
xchg
sbb
mov
xorl
cwtl
sarl
inc
adc
pop
mov
xor
fcoms
push
ficoms
stc
addr16
js
adc
xchg
lods
push
mov
mov
lahf
cwtl
loope
ds
insb
mov
xorb
loop
nopl
fwait
in
sbb
xor
icebp
xlat
adc
push
pop
push
imul
js
add
insl
push
je
and
popw
in
sub
jmp
mov
loope
xchg
popa
clc
test
int3
dec
popa
or
or
adc
sbb
dec
add
neg
stc
mov
lods
jo
cmp
mov
fmull
mov
inc
cmpb
jbe
sbb
lods
push
add
ficomps
xchg
xorb
and
fnstsw
xor
cltd
adc
out
shl
test
pop
jbe
mov
shrw
cmp
enter
or
cmp
push
fisubs
lods
leave
mov
dec
cmp
pop
sbb
adc
out
pop
push
out
sub
ljmp
flds
xchg
mov
int3
orl
daa
add
xchg
cmpsb
es
inc
xchg
movsl
sbb
cmp
jmp
lea
add
xchg
pop
rclb
test
add
add
cs
adc
adc
aad
movsb
dec
cwtl
ljmp
enter
aas
es
cltd
lret
movsl
push
sub
jnp
mov
testl
bound
or
sbb
push
inc
out
pop
mov
mov
into
in
pop
lods
xchg
dec
inc
push
mov
inc
sbb
nop
adc
lea
xor
xor
cmp
iret
subl
adc
add
and
adc
addr16
pop
xor
out
sbb
fisubrl
mov
inc
dec
out
aad
popa
sahf
or
push
in
in
pop
dec
imulb
sub
inc
movsb
mov
push
xchg
and
add
scas
cmc
sbb
out
data16
mov
add
cltd
or
xlat
xor
mov
cmc
sbb
add
cltd
xchg
push
movsl
scas
lret
cmc
fimuls
xor
mov
ds
out
pop
movsb
lahf
fmul
clc
cld
mov
into
sti
mov
xchg
jo
pop
mov
andl
aad
jg
xchg
mov
les
iret
push
push
sahf
push
jmp
cmp
movsl
cwtl
xchg
ljmp
out
aaa
shr
mov
subw
aas
cltd
bound
pop
sub
sub
cld
bound
js
pop
lods
fisttpl
adc
adc
xor
add
xor
dec
lret
daa
iret
test
popa
lds
in
mov
cli
and
pop
push
out
shll
enter
fcmovb
inc
mov
adc
in
mov
ja
ja
inc
mov
xor
int
sti
pop
mov
aam
aaa
sbb
imul
in
jg
jecxz
fistps
sbb
adc
aas
dec
sahf
sti
and
sub
push
push
cmp
lods
addr16
xchg
xor
movsl
leave
or
add
js
pusha
repnz
das
nop
mov
lcall
add
or
xlat
sub
out
lea
sub
push
loopne
pop
mov
jno
aam
adc
xchg
cs
sub
xchg
test
out
test
xor
inc
mov
out
push
sbb
cmp
in
int3
push
cwtl
orb
and
cmp
bound
inc
and
jle
hlt
sbb
js
iret
adc
mov
daa
cmp
push
and
xchg
add
outsb
popa
scas
xor
mov
mov
arpl
or
jmp
xlat
lock
js
int3
adc
fnstenv
fwait
jnp
sbb
cmp
xorb
rol
cmp
jbe
dec
daa
pusha
mov
cmp
ret
xchg
add
loope
inc
in
jno
add
js
je
and
in
mov
stos
pushl
jmp
scas
cmp
pop
jbe
cwtl
test
lcall
jno
outsb
push
mov
sub
xchg
sti
arpl
pop
adc
jae
arpl
arpl
adc
scas
push
jns
lret
scas
movsl
dec
es
mov
sub
xor
mov
repnz
aam
or
mov
insb
data16
rcrl
jg
fwait
mov
stos
and
out
xor
lahf
adc
or
sbb
sub
pop
cmp
jl
or
mov
dec
fst
mov
testl
mov
idivl
jge
xchg
adc
cmp
stos
dec
add
sub
fs
or
das
das
lds
ret
scas
sbb
in
mov
jle
lods
mov
sub
dec
xor
cmp
adc
dec
loopne
imul
xor
dec
push
mov
add
mov
xor
jle
repnz
cmp
out
out
fs
inc
pop
or
stc
mov
dec
mul
xchg
pavgb
sub
xchg
lods
adc
fwait
inc
loope
sub
or
and
gs
jge,pt
daa
and
mov
sbb
test
es
cmp
pusha
ds
out
inc
lds
sbb
push
jmp
test
dec
cmpsb
jp
ljmp
jg
movsl
pop
jle
mov
xchg
jo
lock
clc
insb
gs
leave
dec
cli
repz
ljmp
mov
leave
cmp
dec
push
or
fwait
dec
scas
fadds
es
jb
and
fisubs
push
es
mov
stos
add
sbb
and
lods
scas
push
fadds
repnz
mov
or
or
sahf
or
jo
aaa
insb
mov
shlb
and
pop
and
mov
adc
push
push
pop
or
sbb
sub
add
cwtl
mov
mov
add
push
sbb
push
and
out
lcall
jnp
out
scas
movsb
clc
jno
mov
mov
pop
push
loopne
int
inc
pop
imul
push
gs
pop
push
xchg
pushf
push
out
lret
pushf
xchg
aad
in
jmp
cwtl
out
cmp
incb
add
jge
sbb
aas
imul
push
ret
in
lds
lods
lods
ja
xor
pop
mov
jmp
fwait
pusha
mov
mov
nopl
jae
xor
pusha
lods
movl
pop
dec
scas
rcrl
xor
mov
pushl
mov
pushf
mov
xchg
or
shlb
int
cmp
fidivrl
stos
ljmp
sbb
inc
cmpsl
mov
xor
lret
imull
jbe
gs
fiadds
call
stos
jns
or
cmpsl
mov
iret
push
in
jae
pop
gs
sub
jp
iret
jne
int
sar
movl
jne
jns
pop
mov
mov
xor
enter
jbe
dec
cmpsl
aaa
enter
lods
cmp
or
push
sbb
jo
arpl
xchg
and
loope
or
inc
mov
adc
push
mov
mov
and
in
stos
icebp
push
or
and
loopne
lret
inc
aaa
aaa
add
adcb
push
add
out
cmp
mov
cmpsl
push
hlt
andl
inc
dec
add
cmp
je
gs
add
scas
lds
cmp
inc
lahf
pushf
and
in
hlt
sbbl
call
mov
addr16
movsb
cmp
lret
xor
das
add
std
sub
jb
xchg
cmpb
loop
int
std
jl
dec
cli
push
xor
jbe
pop
inc
and
push
shlb
push
ss
adc
inc
sbb
cwtl
mov
lock
stc
xchg
fsub
pusha
mov
fbld
lods
fisttpll
popf
mov
addl
mov
push
or
pop
cli
into
and
and
scas
xlat
aaa
cmp
xchg
xchg
sub
fidivl
jbe
jmp
mov
xor
int
xchg
in
test
cmp
xchg
and
sub
pop
scas
cmp
and
or
insl
pop
mov
push
fisubl
daa
imul
push
pop
int
jp
mov
lahf
icebp
xor
dec
sti
xor
adc
insl
and
pushf
pop
xor
mov
outsb
mov
adc
int3
jecxz
pop
xor
and
aas
cmovle
lret
push
pop
out
and
das
ret
pop
add
adc
adcb
movl
gs
xchg
jno
movsb
aaa
or
rorb
dec
popf
push
jae
popa
push
scas
lret
paddd
mov
fdivl
addr16
mov
cmp
pop
sub
push
xchg
sub
sahf
or
cmp
and
lods
xlat
push
push
dec
fdivrs
outsb
mov
and
jge
notl
xor
outsb
fildl
push
mov
loop
leave
movsl
clc
adc
ja
or
cmp
test
ret
or
popf
and
push
shlb
cli
sub
popf
fdivl
fst
sub
xor
sub
mov
jl
sub
imul
cmp
negb
insl
lock
rcrl
fstpl
mov
mov
push
mov
mov
pop
cmp
aad
add
nop
scas
mov
aad
xchg
cmp
lods
adc
ret
jmp
bound
pop
ss
jmp
jg
les
inc
dec
mov
xchg
gs
test
out
or
fsubr
push
lock
clc
add
mov
mov
mov
stos
in
outsl
mov
repnz
pop
scas
imulb
test
leave
pop
mov
in
mov
das
lea
xor
iret
fldt
fisttpll
pop
movsb
or
jmp
int
cmp
xchg
xor
lcall
mov
ljmp
mov
jae
sbb
loope
aad
adc
inc
jne
mov
js
out
push
push
dec
inc
jns
fnstsw
ljmp
lea
aas
jb
mov
ret
test
rcrl
pushf
je
or
lahf
jecxz
or
dec
push
and
and
pop
sbb
ds
dec
lahf
loop
mov
ds
js
mov
ret
fisubrl
mov
mov
pop
sbb
aaa
xor
jle
or
inc
adc
push
movsl
nop
lock
inc
imul
sbb
nop
js
adc
mov
push
lcall
sub
pop
stos
cmp
out
leave
xor
push
jne
movsb
inc
pop
push
or
sarb
and
mov
sub
outsl
mov
cmp
lds
xchg
insl
cld
in
sub
push
xchg
mov
fists
insb
fsubl
add
stc
inc
or
push
inc
test
in
fwait
sub
and
das
iret
rolb
cltd
setle
mov
es
xor
inc
dec
mov
push
jmp
ds
inc
adc
lock
addr16
movsl
inc
ss
lds
repnz
fisttpl
add
xchg
inc
ret
jno
push
out
push
cmp
pop
stc
pop
cmp
xchg
pusha
adc
jnp
push
or
xchg
xchg
dec
add
test
data16
add
ret
cmpsl
pop
mov
pusha
sbb
adc
loope
sbb
rclb
xchg
cmp
adc
xchg
scas
lret
mov
adc
stos
mov
add
ret
and
les
test
push
out
leave
bound
and
cmp
mov
mov
dec
icebp
cwtl
stc
pop
gs
mov
cs
and
adc
lahf
rcrb
insl
pop
jg
fs
cmp
pop
pop
xchg
push
xchg
jl
bound
jnp
lahf
andb
xchg
xchg
fwait
outsl
inc
add
sbb
cltd
dec
sbb
scas
sub
mov
xchg
subb
push
jle
and
call
fsubs
cld
loopne
lret
cmp
stos
mov
sbb
cmp
aaa
aas
imul
arpl
lds
ljmp
jmp
xchg
daa
in
add
xchg
mov
arpl
out
push
mov
xchg
jg
arpl
hlt
int3
push
addr16
or
addr16
cs
lods
je
out
push
sbb
cmp
in
jle
daa
dec
jl
pop
inc
pop
adc
sub
xchg
inc
adc
fimuls
fcoms
or
addb
lock
arpl
shl
pop
test
cltd
xchg
cmpsb
jo
roll
dec
push
rcrl
lret
xor
jp
test
icebp
xor
in
lea
xor
int3
xchg
aam
clc
int
push
jp
arpl
or
mov
das
mov
or
das
add
xor
lds
push
or
mov
lahf
jne
lret
aad
jno
sub
add
add
mov
adc
xchg
rorb
sahf
jmp
gs
loopne
mov
pusha
sub
push
cmp
clc
inc
xor
or
out
frstor
mov
sub
add
inc
nop
jg
inc
dec
sarl
stc
inc
push
cs
mov
mov
sbb
or
jno
mov
mov
mov
xor
jno
xor
repnz
mov
leave
jge
inc
jae
add
add
jnp
jns
or
popl
je
clc
add
add
ja
dec
jp
or
ljmp
icebp
insl
xor
dec
jns
push
and
gs
mov
jg
ja
push
clc
pop
lock
add
sub
inc
scas
addr16
or
mov
arpl
daa
fs
cmp
test
push
inc
adc
pusha
pop
frstor
filds
mov
pop
es
xor
add
cmc
jp
fistps
pop
mov
sub
je
loopne
mov
push
dec
jno
mov
xlat
cmpsl
std
push
sbb
sub
jno
lret
in
ds
mov
inc
clc
mov
andl
or
xlat
mov
xor
bound
jbe
or
lods
jae
andb
mov
xor
ljmp
push
xchg
sub
shlb
cmpsl
movsl
in
data16
inc
xchg
and
jp
bnd
in
stc
mov
mov
ss
xorb
pop
scas
int
mov
add
icebp
push
adc
push
bound
out
jo
popf
or
mov
daa
dec
sahf
ror
inc
icebp
jle
mov
aas
mov
mov
je
in
mov
push
mov
add
cmpsl
repnz
adc
xor
dec
imulb
js
pusha
pop
mov
out
push
std
lret
xchg
sub
cmp
jle
adc
test
and
jmp
idivl
pop
mov
gs
xchg
dec
sti
lahf
cmp
or
out
lock
insl
mov
push
push
rclb
sub
outsb
xchg
scas
cmp
xchg
cli
mov
divb
fdivrs
adc
sti
jb
and
cld
inc
out
mov
scas
pop
cmpl
dec
adc
push
lahf
sbb
ljmp
mov
outsb
sub
xchg
rol
xchg
xlat
pop
loop
mov
jno
xchg
prefetcht2
rorl
std
stos
adc
dec
jae
mov
loopne
dec
scas
adc
mov
stos
or
cmp
sub
mov
xchg
mov
out
mov
roll
lcall
pop
mov
mov
test
sbb
cmpsb
push
mov
es
jmp
pop
clc
ds
dec
iret
int
add
lods
inc
pop
adc
and
push
push
xchg
call
pop
mov
jmp
leave
mov
scas
sbb
push
out
int
push
inc
adc
stos
loop
ss
cwtl
push
push
ret
scas
xchg
sbb
xchg
sbb
mov
stc
adc
and
scas
out
fucomp
adc
inc
mov
ret
stos
ja
ds
and
push
test
lods
and
in
data16
insl
arpl
dec
mov
aas
dec
xor
dec
jg
cmp
jae
jo
out
test
inc
fisttpl
out
lret
cltd
std
ss
je
ret
pop
sub
fcomp
or
mov
jmp
fwait
ss
pop
pusha
or
pushf
loop
xchg
mov
out
sbb
scas
xchg
ds
sbb
or
xorl
fisubs
shl
rcrl
movsl
or
jl
or
pushf
mov
or
outsb
sub
add
push
je
test
mov
mov
inc
sbb
lods
mov
lods
push
aam
sbb
jge
rcl
stos
aas
rolb
mov
lock
push
jp
fidivrs
jnp
int3
std
cmpsl
testb
test
or
push
inc
jp
pop
data16
xor
roll
scas
mov
sbb
mov
push
dec
lods
sarl
out
jge
test
xorb
lock
adc
sarb
sbb
xchg
xchg
pop
out
fwait
and
xchg
push
or
dec
jl
cmp
leave
data16
ret
andb
jno
or
jle
push
xor
xlat
inc
fs
stos
lahf
cmp
sbb
xchg
mov
mov
call
std
sub
js
add
int
xchg
int3
jb
xor
jbe
in
adc
mov
inc
xorl
in
aam
shll
je
into
aam
addb
int3
or
jp
sbb
mov
jo
arpl
or
mov
xor
jecxz
test
xchg
pushl
mov
jmp
daa
lahf
mov
add
adc
pop
insb
lret
out
xor
cmp
or
cmpsb
inc
in
mov
data16
mov
stc
lret
adc
out
nop
mov
pop
pop
lret
loope
subb
aad
or
inc
loope
and
adcb
xchg
jb
mov
scas
push
loopne
and
pop
testl
mov
dec
lods
push
mov
imul
mov
cmpsb
mov
inc
outsl
push
xorl
in
or
push
out
mov
popa
das
icebp
cltd
cmp
shll
sahf
cltd
push
adc
xchg
dec
scas
fsubrs
push
pop
movsb
ret
rorb
pop
insb
or
setne
shrl
aas
dec
iret
mov
ss
inc
insl
push
and
mov
adc
in
je
mov
xchg
ds
imul
xor
sub
mov
gs
jb
jmp
imul
gs
xor
arpl
push
mov
dec
add
es
dec
addb
or
jl
out
repnz
add
or
je
incb
dec
or
popf
jecxz
mov
jl
pop
fs
aas
loopne
jecxz
inc
sub
adc
sahf
xchg
inc
mov
xchg
cltd
fsubl
and
in
lods
sub
adc
jl
lds
mov
shll
enter
aas
mov
outsl
push
mov
sbb
aad
icebp
sub
ss
dec
aam
movsl
jnp
clc
dec
outsl
or
or
or
add
and
pushf
sti
ljmp
shrb
js
nop
sbbb
adc
imul
imul
push
and
bnd
gs
int
adc
adc
les
movsl
fcomi
xchg
insl
aaa
lea
ss
cld
es
push
add
int
xchg
std
adc
xchg
std
pop
icebp
out
nop
mov
mov
lret
imul
pop
jb
fdivr
shll
xor
es
add
cmp
clc
out
test
scas
or
push
or
sub
in
jecxz
jb
in
mov
mov
fs
outsl
cmpsl
aas
in
fbld
mov
xor
sbb
push
sbb
mov
xchg
aaa
cwtl
pop
fdivrs
add
jne
mov
shl
and
xchg
lcall
movsb
jle
into
test
or
mov
mov
shlb
xchg
sbb
leave
mov
mov
std
mov
mov
mov
ljmp
pop
jae
add
jnp
mov
fs
shll
aad
mov
imul
xchg
mov
adc
inc
dec
cmp
and
jo
dec
dec
xchg
pop
fimuls
pop
stc
mov
mov
mov
cmpsb
mov
xor
adc
sbb
into
add
ljmp
addl
cld
mov
jl
mov
add
sarl
and
dec
fnsave
mov
sbb
test
loopne
sti
cs
fidivrs
out
int
cmp
and
mov
incb
pop
or
jge
or
cmpsl
jnp
repnz
mov
sub
cmp
pop
xor
mov
mov
shl
cmpsl
inc
test
fdivrs
pushf
cltd
lahf
js
icebp
jp
fs
push
jl
xchg
push
in
fcoml
mov
adc
cwtl
fstpl
mov
or
mov
cmp
xchg
pop
rcrb
pop
sub
pop
jne
mov
aad
leave
mov
popa
movsl
mov
jne
faddp
nop
push
and
xchg
adc
fs
lret
dec
mov
adc
mov
add
cmp
mov
sub
int3
shlb
aaa
loop
leave
aam
sub
rorb
icebp
cmp
sarl
jge
scas
repz
in
mov
push
fcomp
gs
and
jae
outsb
mov
jge
cmp
adc
adc
or
lahf
xchg
add
jp
scas
je
out
int3
or
out
mov
scas
inc
sbb
ss
add
and
cmp
fadds
aas
and
dec
data16
or
pop
dec
daa
std
call
mov
movsb
addr16
les
mov
xor
sub
mov
push
pop
mov
push
sahf
dec
ss
pushf
dec
push
out
jecxz
cwtl
rorl
sti
push
xchg
xchg
mov
fimuls
icebp
stc
dec
repnz
fwait
pmaxub
dec
shr
jb
pop
fists
sbb
jmp
lret
dec
lret
movsb
fldenv
jnp
popa
les
mov
xor
push
call
leave
pop
adc
inc
mov
loope
and
outsb
xchg
add
cmp
flds
out
add
or
add
fstl
xor
mov
xchg
lods
je
lret
popf
cmp
pop
dec
daa
pop
pxor
mov
sub
test
mov
xchg
dec
pop
xlat
lds
push
in
mov
mov
mov
xor
add
jmp
imul
jp
pop
bnd
mov
es
add
or
nop
and
imul
ss
add
lcall
or
shr
or
mov
fidivs
sbb
daa
xchg
shll
and
dec
stos
stos
std
lods
in
jae
add
adc
pop
loope
fs
clc
stc
xchg
dec
sub
sti
insl
out
mov
or
lahf
int3
and
notl
and
ja
jno,pn
xchg
ficomps
clc
add
mov
data16
in
repz
sti
mov
jnp
jmp
push
flds
lea
mov
mov
jl
sbb
pop
inc
out
pushf
stc
mov
sbbl
movsb
test
decb
pop
cmpxchg
inc
in
mov
stos
xor
mov
rcrl
pop
xchg
ds
pop
mov
jge
mov
xchg
test
cmpb
sarl
shrb
std
ficompl
pop
sub
jns
xchg
sub
stc
xor
mov
ja
jbe
xchg
cltd
or
sub
inc
ficompl
add
mov
test
push
das
sbb
adc
push
dec
testl
gs
sbb
and
jp
in
add
scas
xor
lock
fdivs
out
in
and
or
push
pop
mov
cmpsl
data16
hlt
xchg
add
jl
pusha
inc
inc
mov
jl
icebp
mov
out
adcb
lock
xchg
in
inc
ret
push
mov
clc
push
xor
sub
das
sub
mov
lods
movsl
xchg
pop
mov
into
mov
or
mov
mov
movsb
and
dec
out
mov
fwait
sbb
add
xchg
lcall
inc
and
sbb
mov
inc
pop
sbb
jge
push
push
in
or
pop
shll
dec
cmpsb
jecxz
in
xlat
sbb
adc
sbb
xchg
pushf
std
aaa
ret
imul
inc
lods
mov
fldt
sbb
xor
pop
xlat
or
inc
mov
xor
lea
outsb
ss
and
jge
push
mov
mov
pop
xor
in
lods
les
mov
push
jnp
or
mov
sbb
in
mov
and
addr16
lea
scas
xor
xchg
jle
int
xor
repnz
pushf
test
mov
popa
add
and
hlt
and
dec
repz
jp
pushf
and
or
in
mov
sbb
fstpl
mov
outsl
dec
cs
push
push
outsl
inc
aaa
pop
pop
adc
xor
mov
fcmovu
pop
mov
adc
jb
adc
mov
daa
inc
cwtl
lcall
dec
inc
bound
hlt
iret
mov
push
dec
mov
repz
adc
push
push
add
idivb
mov
jp
ja
sarl
cld
pop
jl
mov
aad
scas
and
mov
shrl
mov
in
int
sub
repnz
aas
scas
jle
pop
aas
frstor
data16
daa
fdivs
adc
outsb
cld
push
sub
xchg
adc
pop
push
jno
stos
insb
in
add
jne
or
loopne
shlb
inc
out
pop
sub
fisubrs
xchg
mov
je
mov
popa
fnstsw
mov
ret
cmpb
fidivl
andb
rol
out
pop
xor
rcr
lcall
dec
xchg
pusha
popa
adc
ficoml
mov
push
cmp
fisttpll
das
cmp
test
cmp
adc
dec
mov
sbb
xor
xchg
add
repnz
scas
int
sbb
out
pop
or
into
out
stc
jno
cltd
xlat
aam
ret
jp
ret
jecxz
outsb
jle
dec
inc
sbbb
or
xchg
out
sub
xchg
out
int3
xchg
inc
adc
cs
ret
aam
fists
stc
inc
out
sub
fdivrs
aad
push
enter
inc
sbb
push
mov
imul
filds
push
cmp
push
cmc
sbb
xor
pop
or
mov
pop
cmpsl
mov
sbb
orl
test
sub
sbb
add
in
adc
xor
fistl
pushf
push
nop
int3
sbb
movsl
jle
sub
and
ss
push
cld
adc
push
jno
fildl
bound
rolb
inc
mov
je
push
hlt
fwait
cld
call
subl
std
sub
sub
int
sahf
cwtl
xchg
xor
pop
dec
icebp
pop
jns
cmpsb
icebp
je
xchg
jo
std
mov
lcall
in
jbe
pop
and
scas
jp
int3
dec
loopne
sbb
push
lahf
aaa
lea
fsts
mov
add
add
je
push
jne,pt
sbb
enter
mov
orb
push
stos
mov
adc
mov
loope
sbb
fdivrs
in
add
ljmp
out
adc
mov
dec
push
aam
clc
repnz
fnsave
aaa
xlat
js
mov
test
out
push
or
mov
fdivrl
out
cmpsb
sub
pop
pop
cmc
pop
adc
inc
arpl
les
mov
xchg
cmpsl
push
out
pop
xor
shrl
mov
pop
mov
ds
jl
scas
lods
dec
sub
cmp
jns
sti
push
cltd
mov
aas
fcmovne
scas
dec
cmpsb
add
repz
cmp
sub
xchg
pop
insl
gs
test
add
push
dec
jl
cmpsb
rolb
pop
cmc
add
inc
jb
je
and
fsub
arpl
jnp
push
aaa
xchg
sbb
loop
xor
sahf
xchg
dec
loop
daa
cmp
push
into
inc
pop
jns
cld
cltd
es
push
sub
adc
dec
mov
in
xor
mov
adc
out
mov
movb
pop
arpl
sub
ja
dec
fmul
xor
push
gs
pop
dec
popa
cld
in
pop
outsb
das
gs
daa
sbb
mov
nop
xor
lahf
pop
andl
push
sbb
jl
aam
push
add
or
push
data16
jl
je
and
push
jns
ret
push
jle
xchg
push
pop
gs
sub
and
cmpsb
xor
adc
ret
imul
in
data16
neg
std
inc
out
cmc
mov
movsl
pop
xchg
popf
pop
imul
pushf
or
and
jbe
cli
or
or
xor
cmpsl
imul
sub
or
outsb
dec
popf
adc
pop
stos
andb
push
pop
dec
mov
ficomps
pop
pop
sub
or
lods
adc
push
pop
push
aas
int3
push
mov
out
xorl
push
hlt
cmc
inc
sbb
mov
aad
xor
pmullw
push
or
pop
psllq
jmp
mov
loopne
sub
aad
push
lahf
xlat
inc
xchg
jnp
mov
aas
inc
pop
rorl
stc
pop
lcall
push
jge
sbb
jne
pop
and
mov
insl
adc
adc
inc
sub
insb
mov
lret
test
scas
push
xchg
mov
test
ds
cltd
outsb
loopne
nop
stos
out
pop
or
repnz
inc
add
dec
insl
push
cltd
and
in
adc
add
cmp
dec
cwtl
loop
push
jae
add
cmp
mov
or
popa
inc
cmp
inc
je
popf
in
fcoml
stc
sub
lods
push
mov
push
rcrl
dec
dec
jp
push
adc
or
mov
int3
cmp
pop
mov
bnd
sub
push
pop
fadd
dec
ret
loop
push
out
orl
mov
not
add
dec
push
es
aam
ss
repnz
sti
mov
lret
mov
sbb
pop
cmpsl
scas
shrl
cld
lea
pop
sbb
std
subb
jp
sub
push
fadds
daa
adc
call
sub
lds
pop
inc
scas
sub
icebp
push
push
jmp
cmpsl
inc
out
inc
bound
and
in
sbb
mov
aad
pop
adc
clc
mov
in
int
out
int3
mov
sbbl
testb
or
and
frstor
imul
cmp
les
gs
sub
xchg
outsl
adc
sub
std
sub
add
cmp
or
lock
test
pop
pop
jb
movl
or
inc
sub
pop
mov
stc
adc
ret
adc
sub
adc
outsb
jl
enter
ljmp
pop
mov
repnz
ss
rcrb
or
ffreep
mov
mov
clc
xor
jmp
inc
je
pop
test
decb
decl
js
pop
out
loop
adc
in
jno
fidivrs
lcall
dec
and
pop
repz
xchg
les
inc
inc
and
rcr
call
cmp
pop
push
xor
cltd
mov
test
dec
and
push
push
mov
xor
and
dec
sbb
stos
pop
sub
repz
leave
test
in
loope
lahf
orl
dec
jge
cmp
test
hlt
and
mov
das
sub
push
adc
cmp
and
mov
rcrl
call
xchg
test
mov
and
cmp
xchg
aam
xlat
push
xchg
es
fwait
sub
lahf
outsl
or
jnp
pop
loope
inc
scas
mov
loop
add
jae
lods
int3
fisubs
addl
lret
dec
mov
mov
shlb
inc
sbbl
push
xchg
push
jg
shll
fst
sbb
mov
fldl
cli
scas
jge
xchg
lods
in
fidivs
imul
outsl
inc
dec
pushf
out
pop
pop
push
dec
stos
shrl
jnp
push
out
cmpsb
cmpsl
and
in
or
scas
adc
bnd
pop
cmp
or
add
data16
outsl
mov
aad
in
adc
xor
or
jecxz
and
shlb
lds
lcall
push
psadbw
fistpl
mov
pop
lret
in
test
xor
and
xor
mov
dec
mov
or
push
stos
sti
mov
mov
out
enter
push
imul
ret
int3
dec
cltd
cmpsl
pop
scas
pop
sti
pop
push
call
mov
loope
movsl
xchg
pop
mov
insb
js
push
std
jbe
xor
and
jnp
cli
std
repnz
dec
lea
mov
inc
sahf
sub
scas
pop
sti
xor
ljmp
or
lods
bound
jnp
cmpsl
nop
scas
sub
or
lahf
push
inc
jns
fists
pop
mov
push
and
pop
dec
mov
aad
mov
pusha
cmpsl
add
xchg
xor
mov
js
leave
les
stos
inc
fs
mov
lret
adc
popa
mov
jecxz
adc
sub
cmp
insb
mov
fs
out
pop
divl
mov
xor
pop
pop
adc
and
int3
nop
sbb
cwtl
xchg
or
adc
or
out
out
add
pop
aam
and
inc
xchg
pushf
or
icebp
popf
push
out
xor
jae
sub
xlat
ret
into
lock
repz
push
mov
and
stos
outsb
jb
lea
icebp
mov
cltd
shrb
gs
cmp
dec
dec
ja
imul
jae
jge
pop
jp
xchg
sub
jp
sbb
pop
test
sahf
adc
in
scas
std
push
pop
mov
outsb
imul
cmp
popf
clc
mov
in
jne
xchg
popl
mov
inc
test
iret
ret
adc
ret
dec
jno
movsb
insl
scas
jnp
pop
inc
fldt
loopne
sbb
pop
pop
cmpsb
into
fidivs
imull
cmp
int3
ja
bound
adc
test
cmp
jecxz
adc
push
lret
xor
pop
outsb
cltd
aam
add
sarb
pop
mov
movb
mov
in
aaa
push
push
test
loop
rcr
cmp
test
pop
add
bound
xchg
jmp
nop
jg
out
testb
xor
lds
fmull
and
mov
add
pop
adc
in
les
mov
mov
sti
adc
xor
inc
adc
sahf
rcrl
xor
dec
adc
jno
fwait
insb
adc
int3
mov
or
push
js
adc
sbb
sub
lds
jle
sub
mov
scas
clc
jp
scas
and
cmp
inc
movsb
add
loop
test
inc
inc
jnp
sub
es
xchg
pop
cmp
xor
xor
sbb
frstor
jnp
arpl
call
and
mov
in
mov
in
fdivs
scas
data16
fcmove
sub
mov
ror
mov
cmpb
jge
sub
outsl
je
add
inc
pop
lahf
out
nop
mov
sub
adc
cs
hlt
push
pusha
jno
hlt
xchg
jns
mov
fadds
mov
mov
nop
mov
lcall
and
push
dec
jo
jp
sub
loopne
lcall
jmp
dec
mov
xchg
lret
es
mov
xor
lods
sahf
setbe
sbb
push
add
add
adc
in
fmul
repnz
test
xchg
jge
lds
arpl
push
mov
repnz
stc
xchg
out
andb
jmp
mov
and
push
mov
fildll
cwtl
inc
scas
pop
into
aam
sub
pop
mov
stos
adc
flds
dec
inc
mov
in
xor
leave
and
xchg
xchg
adc
inc
xchg
hlt
inc
xor
xchg
sub
mov
fcoms
jp
mov
ja
xor
add
mov
stos
andb
xchg
fs
adc
xchg
pop
inc
pop
push
cmpl
cmp
mov
push
jge
sub
lret
ret
jo
dec
imull
xor
inc
adc
and
addr16
das
and
lahf
dec
jno
sarl
in
mov
xor
mov
xor
out
dec
in
sti
test
push
jne
pusha
mov
stc
mov
xchg
mov
push
push
lret
sbb
cmc
sbb
add
test
rcll
mov
lret
mov
fcoml
jae
loop
pusha
mov
xchg
push
fwait
outsl
mov
and
gs
push
mov
mov
lret
push
push
mov
imull
xchg
push
outsb
mov
lock
nop
mov
xchg
lds
pop
das
lds
bound
sbb
jo
aaa
and
xor
lret
dec
or
push
add
dec
and
pop
add
movsl
inc
xor
outsb
sahf
cmc
out
cmc
jmp
faddl
mov
sub
mov
cld
mov
cmp
inc
xchg
js
xor
mov
jge
mov
lea
xchg
and
cmp
xchg
cmp
adc
jns
mov
leave
fldt
jae
lahf
clc
out
adc
lock
testb
fiadds
and
fstpt
jne
pushf
icebp
sbb
sbb
xchg
int3
ss
xor
add
inc
stos
movsl
sbb
fwait
mov
or
pop
add
or
push
xorb
mov
mov
add
push
sahf
mov
xlat
out
pop
inc
mov
je
and
cli
rorl
pop
sahf
lock
add
jmp
in
stos
xchg
xchg
repz
xor
adcb
inc
data16
scas
and
shll
imulb
xabort
movsl
ja
adc
rcrb
dec
jbe
cmp
pop
pop
xchg
jo
inc
pop
push
mov
jbe
cmp
loop
or
inc
mov
or
and
mov
insb
pop
fnsetpm(287
push
or
xchg
ret
xor
scas
int3
bound
push
les
cmp
jecxz
and
cmp
cmp
xchg
cmp
loop
mov
ffree
bound
mov
call
sbb
jge
xchg
pop
xchg
xchg
or
in
repz
shrl
jnp
mov
inc
xchg
mov
daa
cmp
adc
fcoml
les
ss
iret
daa
insl
mov
rclb
pop
out
ds
lret
jle
pop
stc
sub
xchg
inc
insl
pop
push
lcall
sbb
and
movsb
xorb
mov
xchg
stos
or
mov
pop
nop
add
pop
leave
jnp
lcall
int3
sbb
mov
bound
push
data16
rcrl
gs
xchg
popa
notb
xchg
xchg
jnp
add
mov
ret
imul
push
mov
cmp
sub
pop
sbb
ss
mov
adcb
adc
sub
add
push
push
or
dec
sbb
push
pop
xlat
fisubrs
ficomps
sti
jae
push
add
jge
mov
sahf
cs
xor
jne
shlb
stc
mov
fwait
mov
cmp
sbb
adc
movsl
ja
inc
stos
ret
stos
sub
mov
mov
sub
test
inc
lret
lret
adc
out
cmp
cmc
ror
daa
cmp
je
lock
or
mov
aaa
sbb
jg
es
stos
cmpsb
arpl
push
sbb
add
daa
fstp
and
and
add
mov
pop
or
xor
in
aad
sarl
or
stc
ds
or
sbb
cmp
ret
pop
xor
gs
add
out
inc
mov
add
fisubs
jmp
in
pusha
and
hlt
and
movl
or
jecxz
push
rcl
cld
mov
imul
imul
outsb
and
sbb
sbb
push
mov
sub
shll
and
xlat
gs
mov
loopne
or
jmp
add
out
ljmp
jg
adc
test
jb
nop
or
shll
inc
bound
insl
adc
adc
push
aam
cmpl
lcall
inc
push
cli
jp
cmp
xor
les
push
into
sbb
inc
xor
sbb
push
aad
sahf
jae
stos
jecxz
add
xchg
xchg
scas
test
popa
jecxz
sbb
jge
dec
pop
rorb
lock
fisttpll
xchg
inc
xchg
popf
pop
jb
sbb
movb
mov
sub
rorb
fldt
out
sub
outsb
pop
push
jecxz,pt
lds
lahf
cwtl
rorb
dec
je
nop
movsb
inc
stos
ljmp
pop
push
push
inc
xor
cmp
push
and
jb
xchg
mov
sub
mov
inc
popf
repnz
sbb
sbb
mov
out
mov
inc
jge
stos
adc
out
mov
mov
test
incl
aaa
outsl
iret
test
cmp
call
or
and
pop
mov
mov
loopne
xchg
lcall
in
icebp
cmp
jmp
loope
ss
push
sarb
mov
rcrl
mov
loop
pop
dec
xor
jg
cmc
mov
cmp
rcll
jne
mov
sub
push
and
sti
testb
adc
jae
jmp
cmp
jl,pn
sbb
test
or
test
dec
fldt
mov
jmp
push
dec
inc
in
rcll
inc
xchg
in
dec
outsl
xor
mov
in
or
mov
pop
cli
arpl
das
leave
xor
xor
ja
and
xor
xor
arpl
dec
inc
mov
nop
ret
sbb
push
push
mov
adc
mov
xor
jno
dec
lock
jns
and
addr16
shll
inc
pop
sbb
hlt
movsb
mov
aas
xchg
push
loopne
je
rorl
scas
insb
push
mov
dec
jbe
pop
push
inc
xor
roll
mov
inc
lcallw
mov
nop
scas
shrb
mov
cmp
xor
mov
push
jle
xchg
adc
mov
or
and
jg
imul
cmc
les
lock
inc
push
pop
push
jge
divl
lahf
xchg
fs
mov
mov
xor
lods
jg
fstl
in
loope
leave
mov
xchg
pop
mov
adc
in
fisubrs
push
lcall
gs
into
mov
mov
adc
mov
xchg
jg
mov
add
clc
xchg
dec
xchg
call
scas
sbb
xor
sahf
mov
inc
mov
decl
sbb
in
or
pop
cltd
add
repz
fisubrs
mov
in
dec
mov
test
imul
lahf
adc
cmp
aas
push
or
dec
out
sub
in
js
cmpsb
jl
xor
jl
test
or
sub
jne
aam
es
imul
sub
xchg
ja
jl
xchg
mov
mov
loopne
push
cmp
mov
xchg
add
clc
clc
cmp
xor
ror
sbb
mov
cmp
pop
cli
movsl
pop
pop
pop
add
fcompl
ret
out
xor
out
movsb
lcall
and
sbb
sub
jecxz
dec
sbb
pop
push
je
int
mov
fwait
lahf
repz
test
dec
jae
pop
inc
pop
shll
xchg
xchg
into
or
hlt
cmp
mov
dec
lods
or
pop
sub
sahf
jo
cmc
gs
dec
dec
mov
dec
divb
inc
jo
xchg
fildll
sarl
xchg
cmp
mov
sub
imulb
xor
mov
or
lods
dec
lods
adc
push
adc
mov
mov
movsl
cmp
push
fsubl
and
cmp
mov
inc
test
push
orb
jns
pop
mov
stos
out
test
dec
les
mov
pop
imul
rolb
add
negb
push
jnp
cmp
popf
pop
pop
sub
cs
sbb
pop
leave
std
jg
ljmp
mov
add
sahf
lcall
fidivrs
int3
icebp
insl
cmp
inc
popf
sbb
jne
clc
call
cli
aad
imul
pop
inc
push
fidivrs
mov
mov
push
ljmp
imul
imul
cmc
fcmove
xacquire
push
andb
inc
mov
fchs
mov
or
nop
popl
faddl
mov
sub
dec
fldl
jmp
ja
hlt
or
scas
mov
inc
sbb
iret
mov
mov
jge
loopne
dec
arpl
leave
fnstsw
popa
hlt
fistps
ret
pop
lods
xchg
sub
jl
xlat
fisubs
dec
dec
pop
loop
pushf
sub
sbb
push
fildl
jo
push
fistl
jg
loopne
adc
pop
xchg
cmc
mov
adc
testl
mov
je
pop
int
add
ljmp
and
mov
mov
or
mov
outsl
dec
push
xchg
lcall
lods
pushf
lds
popa
and
fcoms
fdivs
or
out
add
cmp
loopne
mov
fs
test
lods
dec
ss
and
inc
imul
iret
or
fisubrl
out
cltd
out
xor
push
dec
movsb
pop
test
adc
sub
int
push
enter
push
cs
lds
jmp
and
sbb
insb
arpl
into
movb
cli
mov
lea
loope
sbb
pop
out
aam
cmc
add
xchg
adc
inc
popa
lret
and
sbb
shlb
pause
insb
std
ret
imul
loopne
push
dec
out
lods
jle
inc
mov
mov
mov
xchg
push
mov
jp
sbb
out
jmp
mov
jns
pop
popa
pop
mov
cmpsb
pop
out
outsl
inc
cmpsb
call
insb
push
stos
xor
out
movsb
xor
call
test
sahf
add
outsl
stos
mov
sbb
xchg
pop
lea
daa
mov
jnp
out
sub
fldcw
in
mov
out
inc
cmpsl
aaa
in
test
sbb
ds
jo
fdivs
stos
mov
fldl2e
movsb
iret
aas
repz
xor
jge
std
mov
pop
jl
jae
cmc
inc
int
cltd
sub
add
ljmp
sbb
sub
test
mov
out
adc
xchg
into
add
cmc
adc
setnp
les
mov
inc
adc
pop
scas
inc
shr
or
mov
mov
push
sub
xor
int
out
sbb
jne
pop
cmp
and
mov
iret
dec
or
lods
pop
lods
cwtl
dec
mov
mov
mov
push
and
iret
mov
das
add
mov
mov
push
cmpsl
scas
xor
dec
cmpb
rorb
mov
fcmovnu
sub
fsubl
dec
loop
mov
xchg
sbb
mov
jb
jne
cmp
adc
mov
nop
mov
add
jle
add
nop
adc
inc
sahf
js
cwtl
xchg
or
sbb
lods
jle
push
lcall
mov
out
gs
pop
ret
cmp
ja
lods
pop
dec
inc
test
xchg
mov
jno
push
lret
icebp
jmp
sbbb
jl
in
rcrb
int
cmp
jp
dec
fildll
jecxz
or
mov
ljmp
adc
mov
sti
xchg
hlt
aam
jecxz
cmp
subl
pop
sub
mov
mov
lods
incb
loopne
insb
roll
inc
pop
and
sbb
adc
bound
clc
mov
add
sbb
je
jg
inc
cld
dec
push
pushf
jmp
adc
push
out
popa
add
popa
repz
lds
sbb
fisubrl
dec
mov
xor
mov
sahf
dec
jmp
pusha
jecxz
cwtl
add
into
testb
add
ja
out
outsb
dec
sti
mov
imul
push
dec
adc
imul
add
loop
lock
pop
loop
xchg
icebp
and
leave
add
loope
sub
cltd
aad
or
lcall
cwtl
inc
lret
mov
loopne
xor
lcall
jl
push
mov
mov
xchg
mov
add
dec
in
in
fldl
push
push
sbb
sbb
int
lods
sti
add
sbb
fidivrl
lock
cmpl
and
icebp
push
dec
scas
xchg
xchg
cltd
orl
and
hlt
enter
ja
inc
or
aas
mov
inc
int3
dec
stos
mov
lods
mov
mov
mov
pusha
lret
add
aas
ret
gs
adc
mov
add
orl
lea
stos
mov
dec
pop
ret
fsub
or
out
mov
lock
pop
rcll
enter
mov
pop
jmp
cli
and
sub
imul
and
test
pop
dec
jl
dec
mov
sub
jno
inc
dec
push
jae
xor
inc
mov
rorl
jo
mov
dec
jecxz
inc
subl
fidivrs
mov
xor
push
test
mov
jnp
xchg
sbb
mov
or
in
xchg
enter
jg
pushl
stos
loope
fcomp
xchg
fdivr
fadds
push
or
scas
adc
mov
push
gs
cmpl
inc
into
fidivl
sahf
hlt
repz
mov
mov
cmp
fcompl
into
leave
add
loop
test
test
xchg
pop
pusha
aad
inc
inc
enter
xchg
add
leave
pop
xchg
xorl
fwait
loop
dec
out
add
xchg
sbb
into
test
xor
inc
aas
and
inc
jecxz
cmpsl
push
popf
lods
mov
movsb
cwtl
mov
fnstsw
cltd
aam
clc
ret
cwtl
iret
lea
stos
add
or
cmpsb
jg
nop
repz
insl
arpl
cmp
or
and
outsl
cmp
mov
jp
and
inc
inc
lods
adc
push
push
ljmp
xchg
push
push
sub
arpl
fstps
repnz
inc
adc
mov
stc
xchg
stc
push
mov
mov
insb
test
test
and
pop
sbb
dec
or
or
mov
fdivs
mov
mov
rcll
pop
loopne
mov
ja
cli
data16
test
adc
shl
mov
arpl
bound
data16
decl
cmp
mov
jae
test
or
pop
cltd
pop
jl
xchg
fldenv
xchg
adc
push
push
mov
inc
pop
inc
push
ja
out
imul
jns
std
clc
mov
mov
jns
jno
test
sub
push
mov
jecxz
pop
mov
stos
lea
dec
hlt
shrl
push
jb
jno
pushf
push
cmc
xor
js,pt
mov
fisubrs
fistpll
jl
dec
push
outsl
test
aad
cli
adc
cmp
icebp
je
insl
mov
movsb
lcall
add
xlat
sbb
cs
cwtl
pop
and
xchg
in
or
jp
arpl
mov
xchg
iret
or
lahf
pop
ds
jne
pusha
jle
lock
pushf
push
fsts
xor
jg
xchg
loopne
mov
js
push
inc
lss
cmpsb
and
pop
cmp
sub
testb
ds
push
cmp
xor
lret
add
sub
cltd
and
fs
aad
pop
fwait
pop
dec
fldenv
jge
cmpsb
dec
imul
sub
lahf
mov
mov
and
xchg
sbb
lock
sbb
mov
rol
add
mov
jp
mov
xchg
in
inc
or
out
test
jnp
lret
jae
jae
mov
xchg
int3
mov
xor
mov
pop
pop
incl
sub
mov
mov
mov
mov
icebp
dec
cltd
xor
ljmp
cmp
or
or
cmp
sarb
cwtl
mov
sub
scas
lock
push
push
imul
mov
stos
cltd
add
mov
xchg
shlb
push
push
push
fstpt
xchg
cld
pop
pop
and
jp
push
sbb
outsl
std
lahf
push
shlb
jp
stos
mov
lds
and
bound
mov
out
pop
cmp
inc
dec
or
sahf
cs
mov
mov
fsts
xor
xchg
mov
repz
adc
fiaddl
fnstcw
pop
xor
inc
sub
or
or
pushf
pushf
lahf
pop
push
mov
fxch
cmpsb
or
jno
mov
lret
pop
outsl
lcall
dec
push
sub
cmp
into
pushf
xchg
sub
daa
ret
xchg
inc
mov
mov
out
mov
dec
dec
pop
push
arpl
push
cmp
xlat
adc
push
and
outsl
add
iret
std
mov
lock
mov
aam
dec
ja
mov
push
enter
dec
mov
push
pop
cmpb
imul
mov
cmp
mov
ret
pop
jmp
ja
push
movsl
xor
or
sub
loopne
inc
call
jne
lds
xor
ja
aas
int3
loop
add
mov
ljmp
and
icebp
sbb
push
xchg
or
pop
push
sub
fxrstor
or
lea
inc
scas
lods
imul
dec
in
sub
jb
xchg
xchg
out
mov
mov
xor
int
mov
inc
and
sub
pushf
jmp
leave
push
outsb
aad
dec
loopne
in
xor
bnd
cmpsl
fs
pop
jmp
cmp
sbbb
loop
sbb
adc
or
sub
sub
or
push
test
ja
sub
dec
mov
loopne
aaa
shlb
pop
cs
ret
or
or
cmc
push
sbb
mov
mov
add
in
lret
adc
aam
inc
add
inc
or
dec
cmp
ja
fdivrs
mov
pop
gs
in
and
out
insl
jmp
iret
decl
push
addr16
xchg
fisubs
xor
mov
or
or
jo
inc
adc
cmp
push
cmp
mov
dec
rcll
enter
sub
xor
aam
lret
xchg
aaa
lds
push
ja
orl
push
sbb
aam
push
cmc
popa
fistl
jnp
add
dec
cmp
sbb
sbb
sbb
movsl
jbe
movzwl
int3
xchg
inc
xchg
mov
movsb
mov
jbe
lock
xchg
dec
fs
cld
push
xchg
mov
add
es
and
xchg
mov
loop
mov
ret
cmp
scas
sahf
push
fidivs
sub
mov
fnstsw
add
adc
pushf
addr16
push
ljmp
sub
out
inc
pop
ret
sbb
adc
cmp
stos
mov
jle
out
fs
aas
sub
cmc
inc
mov
lods
mov
into
pop
sub
mov
mov
or
sbb
adc
and
arpl
movsb
sbb
mov
xchg
scas
xchg
mov
stc
sub
xor
mov
call
imul
test
cltd
mov
nop
inc
mov
je
loopne
outsl
mov
stos
cmp
dec
and
shrb
fisubs
fdivrs
and
les
or
fmuls
out
jg
pop
clc
ret
push
lods
data16
fmul
ds
pop
outsb
xlat
mov
sbb
or
incl
shlb
cld
jg
ljmp
jno
mov
inc
ret
lods
inc
jmp
inc
inc
mov
and
sub
push
rorb
ficomps
std
jo
lahf
sti
pop
aad
xchg
jle
xor
push
icebp
mov
jg
and
lret
cmc
in
adc
xor
and
sub
or
outsl
jp
sub
lds
rorl
xor
xchg
repz
jne
inc
jmp
testl
push
jl
add
jo
mov
cmp
or
outsw
out
mov
adc
push
xchg
test
dec
outsl
mov
mov
lret
stos
mov
and
pop
fcompl
jle
pop
or
popf
clc
loop
es
in
fsubs
movsl
shll
movsl
pop
ss
jae
popf
jo
cld
push
mov
inc
fstpl
dec
addl
aad
sub
mov
aas
decl
sbb
aam
xchg
popf
and
rcrl
je
inc
jle
mov
and
or
push
pusha
subb
cli
ljmp
mov
xchg
stos
jmp
lcall
cld
pop
loop
icebp
xor
icebp
mov
or
ficoml
dec
inc
and
sbb
sbb
sbb
stos
inc
push
push
dec
dec
xor
cli
ret
popa
je
jg
jg
sbb
xchg
xchg
std
lods
push
mov
or
sti
mov
push
data16
lea
insl
sub
decw
lods
xchg
mov
or
imul
jnp
ljmp
and
jnp
outsl
popa
push
pop
xchg
inc
loope
data16
add
and
mov
lds
fnsave
orps
mov
cmp
lods
fstpt
in
bound
xor
mov
ret
or
lcall
add
sbbb
xor
in
fdivs
psubsw
xchg
xchg
mov
loopne
stc
rcrb
or
push
in
hlt
mov
loop
dec
cmp
jbe
dec
mov
adc
xor
scas
mov
or
call
lods
sub
loop
jbe
xor
xor
push
aaa
lock
adc
push
out
inc
loopne
inc
in
lods
adc
dec
inc
mov
push
mov
dec
cs
in
inc
ficoml
inc
leave
lds
ret
push
fldt
pop
mov
xchg
xlat
out
sti
scas
lock
cs
xorl
pop
and
pop
lods
outsl
push
inc
test
push
stos
ss
xchg
scas
pushf
pusha
ds
cmp
lds
xchg
pop
lret
paddsw
mov
mov
add
aad
pop
fldz
mov
repz
das
inc
xor
inc
dec
in
aaa
dec
cltd
js
fcmovnb
inc
and
loop
lea
aaa
jbe
outsb
inc
xor
inc
xorl
in
bound
adc
cli
pop
jl
fimuls
sub
inc
out
fistps
mov
push
mov
adc
sbb
sbb
int3
add
push
pop
cmc
jb
xor
mov
lahf
add
mov
daa
xor
std
in
xchg
cwtl
lods
loopne
rcrb
test
xor
lcall
mov
in
ja
pop
sbb
adc
sahf
xlat
dec
leave
enter
sahf
sahf
das
inc
arpl
out
cmc
filds
and
rolb
hlt
pop
negw
rcrb
imul
xor
lret
dec
xor
sub
and
mov
addr16
jmp
push
add
arpl
outsb
pop
sub
inc
adc
in
xor
addl
outsl
gs
dec
add
aad
repnz
inc
in
test
call
xchg
test
inc
mov
xor
jno
fiadds
loope
inc
call
mov
scas
ret
pop
xchg
sbbl
adc
pop
xchg
mov
add
inc
stc
pshufw
pop
or
pop
lock
jl
and
push
mov
fnstcw
xchg
rclb
insl
pop
mov
push
outsb
sub
xor
mov
mov
pop
loope
cmp
out
add
loope
cwtl
adc
insl
aas
mov
xchg
and
xor
mov
das
shll
push
add
loop
push
movsl
iret
jo
push
sbb
aam
repz
cmp
pop
jno
ret
lahf
clc
cmp
inc
mov
xchg
sub
iret
sub
mov
sub
loop
std
push
adc
scas
pop
aad
pop
jecxz
imul
pop
ss
in
adc
mov
or
shlb
adc
fldenv
fcoms
mov
push
push
xchg
and
xor
movsl
jae
fnstsw
cmpsb
in
clc
cltd
inc
jnp
inc
pop
push
js
mov
xchg
and
popf
sti
mov
jo
scas
and
test
stc
pushf
push
xor
sub
mov
push
in
popf
jge
popf
pop
jle
cs
clc
cmp
nop
adc
inc
dec
iret
pop
sbb
inc
xchg
cmp
jmp
repnz
inc
and
lods
nop
ds
sub
pop
jp
mov
xorl
sub
mov
lods
call
ror
mov
push
fsubr
and
sbb
mov
pop
push
jmp
subl
and
scas
dec
les
cmpsb
iret
or
push
movsb
add
mov
sub
sub
mov
xchg
pop
push
jg
mov
sarb
shrb
pop
orb
test
xchg
sub
js
jns
mulb
lock
xor
xlat
mov
stc
shrl
push
or
xchg
inc
pop
pusha
fwait
add
push
adc
push
mov
incl
test
mov
rcl
int
dec
inc
sbbb
std
fucom
out
imul
cmpsb
inc
add
xchg
js
je
jb
ss
sbb
pop
int3
hlt
outsb
sbb
movl
adc
pop
inc
mov
add
push
cmpl
mov
xor
je
sahf
sbb
arpl
push
sti
cmp
cmp
lea
mov
cltd
push
stc
add
jns
jge
in
add
sub
push
add
pop
mov
fsubrs
mov
out
popf
jp
mov
fsubs
add
shll
jg
loope
cmp
out
cltd
lcall
stos
inc
xlat
cmp
pop
rol
jno
cmp
out
xchg
jnp
mov
lds
xor
and
int
or
mov
adc
dec
jmp
orb
ss
mov
dec
push
insl
int3
dec
shrl
out
add
sbb
mov
mov
cld
push
out
jecxz
lods
lods
inc
or
repnz
adc
inc
mov
dec
ret
loope
sbb
or
mov
into
ss
test
movsl
pop
and
shll
lods
dec
mov
xchg
movsl
xor
mov
popa
xchg
cmp
es
idivl
add
pop
dec
es
out
xor
mov
pop
jae
pop
cld
adc
sub
inc
xor
add
test
inc
dec
lock
xor
push
pushf
in
sti
sub
dec
mov
xor
aas
stc
lods
jae
xlat
adc
lods
lret
aas
xlat
add
sti
stc
jmp
shlb
mov
xchg
ljmp
enter
bound
movsb
dec
xchg
repz
pop
stc
aad
push
or
sahf
in
lret
mov
js
test
cmp
sub
and
jo
shrl
cltd
xchg
jae
mov
inc
loopne
sti
add
dec
sbb
and
popf
and
jae
xor
cli
add
mov
xor
or
jae
data16
mov
fwait
inc
mov
jmp
cmpsb
cmp
iret
data16
cmc
add
fnstsw
loope
std
xor
imul
dec
adc
pop
jmp
dec
fsubrs
arpl
loope
adc
cmp
adc
lods
jle
jbe
test
lods
jo
jg
stos
sub
addr16
outsl
add
ret
xchg
enter
aaa
xlat
lods
xor
popa
jnp
inc
dec
ret
les
stos
xchg
movsl
mov
sarb
mov
loope
pop
mov
pushf
loopne
cs
clc
mov
and
shl
int3
xchg
sbb
sbb
ds
lods
andl
xor
push
sar
push
adc
loopne
aas
jg
jo
test
lret
xor
enter
rol
lds
ljmp
pop
cmpb
ret
nop
jg
cli
insl
xchg
subl
cmp
out
xchg
popf
xchg
fs
jb
scas
loop
icebp
jmp
xchg
sti
cmp
ret
repnz
mov
jp
add
imul
mov
bound
add
add
sbbb
test
js
xchg
jmp
fildl
xchg
test
fcmovb
popf
insb
mov
push
mov
add
pop
bound
fsubr
push
pop
cmp
ficoml
imul
jns
cmp
cs
jmp
std
push
popa
imul
jge
jb
sbb
push
adc
lcall
jg
pop
int3
push
mov
scas
pop
lods
lock
sbb
mov
ljmp
das
jle
push
addr16
popf
and
fbld
stos
out
shrb
arpl
jo
bound
push
pop
rcrl
sbb
jno
lea
hlt
push
push
dec
and
jecxz
dec
int
cmp
add
fstps
notl
loope
pop
or
pusha
cli
mov
lcall
flds
fidivs
sbb
cld
jl
jle
jg
outsl
mov
pushf
rol
mov
pop
stos
data16
and
gs
js
pop
mov
xchg
insb
jmp
les
cmp
testl
or
jg
insl
fwait
jae
jl
lret
add
std
pop
push
push
scas
out
inc
sbb
out
xor
pop
test
inc
pushf
insb
sti
ds
movsb
clc
loopne
das
shll
or
cld
push
and
stos
iret
mov
jo
mov
pop
hlt
bound
or
mull
adc
sbb
test
dec
pop
mov
pusha
fwait
pop
sbb
push
iret
dec
push
push
ss
aaa
in
addl
cmp
movsl
dec
imul
imul
in
test
lret
mov
ljmp
mov
das
in
jbe
inc
cmpsb
and
cs
gs
xchg
sbb
lcall
iret
or
shlb
xor
pushf
dec
fistpl
test
loope
inc
ret
pop
mov
bound
xlat
add
or
pop
stc
jne
xchg
pushf
clc
mov
imul
jae
mov
repz
lds
cmp
loopne
inc
and
mov
std
pop
repnz
push
push
jecxz
mov
inc
sbb
and
pop
xchg
loope
inc
decb
cmc
mov
lods
sbbb
je
cmp
ficomps
ficoms
push
js
adc
scas
int3
adc
aas
and
dec
push
pop
cli
sub
pushf
push
inc
fidivrl
jg
mulb
shlb
shll
mov
xor
dec
or
movsl
cmpsb
sbb
mov
jmp
or
fs
xchg
and
adc
rolb
inc
push
xchg
stos
ds
inc
addb
sbb
loopne
mov
addl
xor
into
adc
sub
fwait
mov
repnz
and
adc
stos
sbb
mov
sbb
sbb
mov
aam
lret
movsl
shlb
scas
push
sub
repz
jle
or
mov
aad
int3
mov
and
aaa
sub
push
mov
lret
jnp
loope
cmpsb
mov
jns
adc
ljmp
jg
lods
cs
arpl
in
cltd
cmpsb
int
mov
shr
xchg
push
ret
adc
push
ret
cli
xchg
bndldx
push
sub
addr16
jb
insb
mov
icebp
sti
fs
xchg
dec
sbb
xor
scas
inc
jge
or
push
push
aaa
sub
pushf
jns
mov
inc
mov
ret
int
fwait
xchg
and
mov
xlat
popa
cwtl
aam
fcmovb
movsb
sahf
mov
repz
push
mov
sub
sar
pop
push
notl
movsb
mov
ror
lods
jno
inc
cmp
rcrb
repz
push
sar
dec
outsl
lods
aad
jle
xor
pop
push
mov
jg
in
test
mov
call
jno
cmp
bound
sub
inc
lret
sub
aaa
mov
dec
mov
mov
scas
cld
adc
test
or
dec
imul
inc
movl
pop
fwait
push
vcmpsd
push
call
push
test
cmp
push
xchg
jl
pop
cmp
loope
das
dec
xor
push
jle
fs
inc
das
imul
sbb
es
fnstenv
push
mov
leave
mov
xor
test
sub
shlb
sti
scas
enter
aam
mov
pop
bound
sub
or
inc
jb
pop
jg
fbstp
scas
pushl
icebp
add
add
lahf
dec
xor
movsl
push
lods
sbb
aam
push
push
arpl
or
mov
pop
orl
fimuls
xor
mov
or
mov
in
stos
out
std
inc
mov
ficompl
mov
into
pxor
bound
mov
jns
sub
ja
mov
adc
sbb
test
sub
icebp
mov
fdivl
push
mov
xchg
cmovne
xor
inc
fdivrs
inc
je
fadds
pop
in
test
inc
or
inc
xorps
clc
jl
loope
push
outsb
iret
mov
jno
outsl
scas
dec
jle
add
cmp
mov
ficomps
jo
or
adc
cmp
gs
add
cltd
cli
bts
cmp
push
nop
cld
cmc
adc
out
mov
ds
push
dec
sub
push
or
or
push
or
jmp
pop
cmpsl
push
dec
orb
test
pop
sub
mov
pop
jno
pop
mov
mov
jg
std
call
mov
movsb
std
pop
cmp
inc
in
adc
repnz
mov
mov
xchg
sub
outsb
fsubl
or
pusha
dec
nop
pop
in
jecxz
out
sbb
jg
jg
xlat
dec
fimull
addr16
cmpsb
cmp
sub
imul
or
inc
sub
pop
mov
rolb
jl
ret
xlat
ds
out
xchg
push
and
cwtl
mov
mov
xchg
cmp
loopne
iret
lea
sub
mov
sbb
mov
mov
jne
adc
dec
cmp
inc
js
call
out
xor
add
or
in
popa
push
pop
and
push
in
jnp
fcmovnbe
in
divb
lea
cmpsb
adc
stc
mov
add
flds
cli
adc
mov
pop
jae
adc
jmp
mov
mov
data16
adc
xchg
sub
add
jge
rcr
in
push
add
pop
bnd
js
inc
mov
jnp
frstor
cmp
or
fsubr
jmp
mov
sbb
cmp
cmp
cmpsl
dec
call
mov
mov
fs
shrb
out
mov
testb
divl
inc
xchg
sub
mov
jns
dec
mov
xlat
cmpsl
pop
sub
mov
jg
repz
mov
popa
mov
sub
or
mov
gs
inc
pop
ret
repz
push
and
xor
cld
add
xor
shll
inc
fs
ret
test
pop
inc
movsl
and
icebp
push
dec
add
les
in
jmp
sbb
dec
scas
sbb
or
nop
mov
shr
stc
add
inc
call
pop
repnz
inc
shll
loopne
cmp
xchg
pop
ljmp
dec
mov
lods
fists
das
pop
test
int3
addr16
popa
mov
adc
xor
adc
inc
cmp
and
sub
test
jb
leave
inc
push
lods
or
sbb
dec
mov
push
xchg
push
or
mov
psadbw
mov
test
and
dec
sub
mov
test
out
daa
jo
call
or
add
bound
lock
scas
inc
test
leave
loope
xorl
adc
inc
cmp
daa
push
aam
flds
addr16
mov
mov
in
jnp
push
or
dec
call
dec
je
arpl
ds
out
loop
gs
and
pop
aad
pop
cmp
jge
shl
test
dec
dec
sub
add
sti
sub
jge
enter
or
dec
push
dec
js
sbb
jae
inc
push
shlb
cmp
pushf
outsl
imul
xlat
dec
cmpl
subl
loope
add
outsb
inc
mov
mov
negb
or
out
xchg
les
repz
mov
call
mov
andb
jp
psubd
inc
xor
sarl
push
sti
xor
addb
pushf
or
enter
cmp
je
xor
ficoml
into
je
mov
sti
adc
sahf
sub
and
and
fiaddl
lods
mov
lock
jae
nop
mov
cmp
inc
enter
and
inc
push
pusha
inc
lea
out
sub
andb
jle
mov
mov
arpl
dec
mov
movsl
enter
and
dec
fildl
and
mov
inc
jae
clc
xlat
loop
jge
cmc
mov
hlt
rclb
add
inc
sub
mov
add
pop
movsl
add
sbb
hlt
mov
mov
into
mov
clc
xor
or
sahf
ss
jb
sbbl
add
insb
cmp
cli
add
or
mov
rcrl
stc
stc
xor
sbb
dec
pop
push
pop
hlt
lock
adc
and
inc
outsb
mov
add
lahf
aam
rorl
add
pop
and
mov
add
pop
call
xchg
pop
subb
movsb
jnp
mov
mov
sub
ret
push
mov
icebp
inc
outsb
bound
out
imul
into
jl
xchg
mov
out
pop
leave
jbe
push
cmp
cmpsl
xchg
clc
aas
in
bound
cmpsl
rorb
sarl
or
mov
rcrb
fidivl
cltd
fiadds
cli
fisubrl
in
lea
mov
movsb
jne
in
rcrl
mov
icebp
jp
aaa
inc
dec
cmp
outsl
inc
mov
mov
inc
mov
xchg
lss
js
imul
inc
sbb
lcall
push
gs
dec
std
inc
adc
add
jne
xchg
movsl
fldenv
icebp
pop
out
sbb
je
je
lahf
mov
stc
cmp
aas
push
and
push
lret
loopne
fisttps
or
insl
mov
lock
out
mov
lods
pop
xor
clc
xchg
daa
mov
inc
sub
push
inc
add
mov
push
into
mov
cltd
xchg
mov
ret
mov
pop
mov
sub
call
sub
cmp
sbb
pop
adc
xchg
sahf
bound
add
xor
xchg
mov
jns
pushf
iret
aaa
xchg
movsl
mov
cmp
lods
push
dec
dec
jb
xchg
loopne
xlat
int3
into
clc
ljmp
add
pop
out
jne
test
testl
or
inc
add
pushf
fcomps
pop
jge
xchg
loop
rorb
cmpsb
mov
xor
xchg
or
js
jl
jno
ret
mov
mov
push
cli
jnp
ret
imul
insb
sub
repnz
shll
xchg
test
push
inc
nop
inc
mov
rcr
insl
jno
mov
inc
mov
call
daa
push
adcb
inc
mov
int
out
popf
xchg
push
and
loopne
int3
in
insl
xor
pop
jae
je
mov
mov
dec
ret
xchg
push
mov
repz
mov
or
jb
inc
inc
jecxz
lock
data16
xchg
xchg
xchg
mov
mov
mov
cmp
xor
lods
mov
sbb
mov
test
jnp
sti
mov
repz
jp
dec
mov
xor
ds
int
mov
bound
movsb
dec
test
xor
adc
push
lds
jno
xchg
mov
inc
dec
mov
push
jb
jg
sbb
negb
movsb
andl
scas
out
gs
cmpsb
popa
data16
mov
dec
cmp
mov
xlat
icebp
sbb
cwtl
jb
adc
outsl
insb
int3
sbb
xlat
cmp
lock
aaa
rcl
cmp
inc
les
pop
lds
or
inc
and
pop
or
fiadds
mov
mov
jge
enter
xchg
ss
add
popf
aaa
xlat
movsl
mov
inc
negl
outsl
xchg
mov
cli
cld
pop
fs
lods
test
or
pushf
jmp
mov
aad
dec
sub
enter
add
sub
pop
pushf
outsl
insb
sub
negl
inc
mov
fdiv
or
inc
fdivs
sar
ret
cmpsb
sbb
cwtl
out
sti
sahf
pop
jge
pop
mov
je
pop
in
in
insl
iret
loop
rol
test
cltd
lcall
sbb
dec
xchg
rorl
ret
and
inc
insl
in
out
mov
mov
sbb
outsb
sbb
in
jb
arpl
test
js
in
mov
dec
popf
mov
dec
adc
addr16
and
dec
test
xor
test
test
lcall
test
push
sub
idivl
ret
xor
jne
push
xchg
insb
adc
fcmovnbe
inc
popa
or
jnp
xchg
pop
fstl
gs
and
jb
add
and
insl
dec
insb
adc
fbstp
mov
jbe
jnp
in
addr16
sahf
mov
movsl
mov
test
mov
pop
scas
mov
outsl
fistpll
dec
pusha
addr16
xchg
les
cmpsb
sbb
push
idivl
jl
push
loopne
mov
xchg
pop
loop
dec
sub
jbe
cs
mov
adc
out
sbb
mov
pop
cltd
mov
mov
out
test
adc
and
and
in
jbe
jnp
jg
lock
dec
pop
lods
adc
jmp
lcall
jl
rcrl
stos
dec
je
inc
dec
mov
call
adc
outsl
ret
mov
mov
cld
imul
out
pop
sbb
xor
sub
sti
test
sbb
iret
int
push
iret
dec
movsl
rclb
jp
mov
iret
push
sub
xchg
inc
iret
fidivl
push
popf
cmp
jnp
outsl
aaa
cwtl
cmp
insl
lret
dec
mov
lret
or
aas
or
mov
rclb
push
popa
ja
aas
inc
and
jae
stc
xchg
sbb
dec
sahf
popa
mov
daa
pop
rcl
cwtl
stos
pop
fcoml
pop
inc
out
add
call
movsl
sub
iret
xchg
stos
pop
in
testb
js
sti
fdivrl
add
mov
test
mov
or
mov
mov
in
cmp
dec
loopne
rclb
jg
syscall
cmp
clc
icebp
rcr
insb
dec
add
repz
pop
dec
pcmpgtw
scas
xchg
pop
stos
aaa
outsl
sub
insl
jle
ds
push
ds
fcompl
cltd
loop
jo
jnp
mov
cld
sar
js
mov
scas
sbb
sbb
lret
out
jns
scas
xchg
mov
sub
insb
cwtl
push
outsb
xchg
jb
lock
xor
aam
jbe
test
int
rcrl
mov
push
add
lret
lods
add
mov
lea
scas
rcrb
sbb
cmpsb
pushf
and
test
cmp
loopne
jmp
cwtl
mov
dec
cwtd
or
shl
scas
sub
mov
mov
sub
cmp
xchg
mov
pop
aas
jmp
xor
mulb
xchg
fiadds
jmp
mov
movsl
lea
mov
jo
pusha
cmp
pop
in
sub
arpl
and
dec
outsl
dec
testl
cltd
push
jne
pop
push
mov
adc
loop
inc
stos
add
mov
mov
cmp
negl
jecxz
jno
jo
roll
test
mov
add
jmp
push
jecxz
and
or
loope
sub
pushf
cmovge
std
cmp
imul
push
cmpsb
dec
add
pop
xchg
lock
xchg
cmc
sbb
mov
lds
fwait
sarl
test
rolb
add
out
push
push
enter
repz
mov
in
mov
out
mov
aaa
and
out
mov
mov
out
aas
hlt
jno
shl
add
aaa
sbb
nop
mov
lcall
in
popf
lret
xchg
scas
outsb
xlat
pusha
jl
fistpl
ds
cmpsb
loope
sbb
inc
mov
icebp
daa
icebp
outsb
aad
dec
loop
addr16
sti
loop
cmp
ds
mov
cmp
stos
mov
outsb
sbb
xchg
or
pop
cmp
cld
rorl
adc
lret
add
xor
clc
jno
data16
lock
or
fistl
js
cld
push
stos
pusha
int
ss
stc
cmp
add
cli
shrb
loopne
push
add
sbb
jp
pop
popf
push
int
ds
repnz
dec
iret
dec
push
xchg
xor
aas
push
or
pop
inc
notb
or
daa
or
ret
fnstcw
call
call
cwtl
jno
xor
mov
inc
ret
xchg
pop
test
jne
or
adc
ret
sub
rcll
enter
sub
or
pop
lahf
jl
testl
mov
sub
cmpl
xor
jo
inc
lcall
push
inc
cmp
fldl
dec
or
repnz
dec
lcall
ret
je
dec
adc
subb
cmp
frstor
add
push
pop
popf
sahf
lret
movsb
inc
dec
stos
pop
dec
sub
test
test
insb
adc
sbb
cmpsb
xchg
pop
pop
test
xchg
iret
sti
int
ret
sub
cmp
jp
nop
mov
testb
insl
mov
sub
cmc
in
loop
mov
jbe
xlat
out
push
adc
pusha
aam
popf
or
adc
addr16
mov
out
jmp
sbb
jb
pop
dec
loope
orl
insl
loopne
test
sbb
pop
push
pop
inc
sub
rolb
imul
inc
pop
cmpl
cs
mov
pop
mov
test
xor
dec
push
shlb
lods
push
lods
nop
pop
pop
out
adc
pop
lods
push
outsb
aam
sub
xchg
push
pop
loopne
insl
jle
cltd
xchg
lods
xchg
ljmp
dec
cmpsl
adc
mov
jl
dec
je
je
dec
cmp
out
jecxz
icebp
cmpb
xchg
xor
sarb
test
rolb
xchg
nop
mov
mov
xchg
les
adc
xchg
xor
fs
xor
jle
sub
add
fcos
test
pop
stc
jmp
adc
xchg
and
add
jo
dec
xchg
mov
ja
dec
xor
inc
mov
rol
pop
jecxz
hlt
pop
das
aas
nop
sbb
mov
pop
repz
filds
cmpsb
add
sub
imul
mov
mov
test
jno
aad
je
icebp
pop
xchg
ret
jmp
mov
outsl
and
rcll
or
call
xchg
int3
bound
cmp
jne
imul
jne
insl
mov
imul
jle
dec
xlat
lods
mov
push
into
loope
test
out
mov
cmp
cmp
add
sub
xchg
fwait
xor
sarl
popf
mov
cmc
jp
xchg
mov
lds
sbb
mov
pop
and
pop
mov
cmp
mulb
mov
arpl
notb
xchg
sub
ficompl
add
fwait
push
rolb
push
add
lock
int
pop
les
pop
mov
mov
mov
lea
dec
xor
das
mov
jne
subb
test
sub
repz
xchg
sub
mov
push
int3
movsb
mov
sahf
xorl
lock
and
negl
inc
mov
imul
inc
es
in
mov
cmpsb
adc
pop
add
mov
jae
js
xchg
mov
lahf
inc
push
or
sub
xlat
cs
cmpsl
adc
mov
test
icebp
push
clc
xchg
cmp
or
add
je
sbb
jmp
add
rcrb
out
mov
insl
stos
dec
je
fdivr
out
shll
out
arpl
ljmp
mov
movsb
fimull
test
adc
fwait
aam
mov
cmp
inc
ja
aam
dec
fs
add
movd
mov
sbb
sahf
pop
and
jp
mov
arpl
adc
mov
push
push
movsb
sub
movsb
int3
test
xchg
mov
cmp
clc
xor
out
call
mov
aaa
aad
lock
outsb
adc
in
mov
jecxz
xchg
mov
loope
mov
adc
int3
or
xorb
dec
outsb
push
les
fstps
dec
lahf
cli
pop
pop
roll
push
xlat
leave
cmc
dec
sahf
clc
mov
add
and
xor
nop
or
fcmovbe
test
or
cmp
rcrl
outsl
adc
adc
mov
iret
add
aad
adc
pop
mov
cltd
pop
mov
inc
sti
mov
jae
out
mov
adc
pop
mov
cwtl
mov
mov
push
mov
jecxz
mov
shrb
dec
mov
je
aad
push
mov
lcall
mov
popa
sbb
sub
leave
pop
pop
jo
and
sub
mov
stc
popf
imul
int
mov
jl
rolb
push
mov
out
mov
xchg
data16
into
jno
call
ljmp
movsl
mov
push
ja
inc
jge
je
fiaddl
xor
pop
aad
setno
xchg
xchg
cmc
in
xlat
shrl
push
pop
push
cld
loopne
addr16
cmp
clc
addr16
fs
mov
cmp
test
jmp
mov
xchg
push
push
jno
call
pop
pop
jbe
add
lock
adc
xlat
dec
mov
es
out
sbb
paddq
adcb
mov
mov
loop
les
daa
addr16
daa
pop
adc
call
call
xchg
xchg
aaa
mov
and
adc
shll
mov
pop
adc
mov
push
lahf
push
rcll
or
rorl
jno
mov
jmp
mov
mov
in
lahf
sub
jno
sub
mov
cltd
jbe
cmp
mov
jns
xor
sahf
push
sbb
dec
push
xchg
or
inc
aad
scas
add
jns
cmp
mov
int3
call
repz
iret
jne
clc
jmp
and
in
xchg
lods
or
aaa
sar
mov
ja
cmp
test
add
daa
shlb
in
fbstp
icebp
imul
xchg
adc
pop
xchg
adc
fcom
stc
leave
icebp
cli
lahf
push
mov
lea
rcll
pusha
clc
mov
jecxz
push
sti
repnz
dec
add
dec
iret
cmp
out
dec
jns
cmp
fdivs
loopne
push
and
mov
pop
out
mov
inc
gs
adc
or
imul
imul
mov
lock
cmc
mov
out
into
jle
pop
inc
fcmovne
stos
dec
push
jno
mov
addr16
xchg
push
adc
enter
cmp
add
xchg
push
adc
cmp
push
mov
xchg
xor
cmp
jecxz
and
mov
mov
dec
stc
adc
or
leave
push
mov
int
xchg
in
pop
ret
and
xlat
data16
imul
mov
push
test
mov
pop
es
sbb
cld
arpl
lret
lcall
testl
std
iret
sub
jle
test
in
nop
push
test
gs
call
or
inc
lods
hlt
inc
aas
ret
stc
mov
insl
enter
xlat
jnp
out
xchg
or
scas
les
cltd
in
lret
call
lock
setg
push
mov
mov
and
nop
sbb
je
popa
sarl
xorl
jmp
mov
imul
xor
xor
pop
sbb
dec
jbe
test
mov
test
push
inc
loope
out
loopne
fwait
jle
ss
mov
cmp
or
jbe
es
pushf
mov
dec
mov
hlt
mov
mov
fnstsw
in
inc
mov
fcoml
adc
fisttpl
test
mov
pop
push
fxam
mov
xlat
mov
es
pop
lock
and
andl
jno
fldcw
jl
arpl
negl
jmp
pop
cmp
mov
divl
in
adc
mov
enter
add
fdivp
add
pusha
xor
sub
pop
dec
pop
and
stos
jne
sub
mov
in
adc
movlps
push
ss
adc
aas
and
ss
movsb
stc
jns
lea
pop
adc
sbb
pop
mov
frstor
test
sub
insl
imul
adc
sahf
jae
cmp
adc
and
test
aaa
fwait
gs
test
mov
aaa
imul
xorl
std
and
js
movsb
jns
add
sub
js
mov
or
repnz
clc
lock
cmpsl
sbbl
mov
movsb
inc
mov
ljmp
jge
mov
popa
dec
and
pop
mov
fisubrs
sarl
shlb
add
sbb
popf
rcrl
adc
pop
cmpsb
loope
iret
xlat
push
sub
in
add
ds
insl
add
push
je
cmp
test
xlat
dec
mov
insb
sbb
stc
inc
sub
mov
dec
push
mov
xchg
pop
ja
inc
out
mov
adc
jge
push
inc
clc
cwtl
dec
mov
push
orb
mov
mov
jnp
enter
jle
xchg
hlt
dec
fdivrs
adc
mov
ja
dec
jb
cmp
push
cs
int
loop
push
or
add
xchg
mov
pop
pop
add
xchg
test
xchg
dec
add
cmp
jo
pop
pushf
pop
cmp
adc
mov
pop
mov
hlt
ret
in
outsb
or
jae
std
std
push
insl
gs
cmp
test
add
das
mov
or
push
mov
mov
gs
out
icebp
push
mov
xchg
outsl
pop
test
adc
jmp
adc
out
jg
js
push
mov
sbb
mov
fwait
loopne
dec
mov
cwtl
jnp
pop
mov
cltd
mov
adc
daa
or
outsl
pop
mov
pusha
gs
dec
push
mov
jecxz
add
jp
or
stc
insl
idivl
mov
nop
mov
mov
jmp
pop
icebp
sub
adc
and
inc
in
repz
xchg
aam
inc
filds
mov
push
shr
jae
sbb
jae
jne
fnstsw
shr
adc
sbb
fnstenv
xchg
inc
xchg
fldcw
js
outsb
sti
nop
out
and
pop
icebp
push
push
stos
xchg
frstor
iret
inc
xor
push
divl
ljmp
adc
mov
inc
pop
popa
inc
pop
mov
lea
sub
testl
ret
sbb
insl
sbb
jecxz
jbe
or
xchg
stos
dec
adc
insb
fiaddl
mov
push
popf
les
in
ss
nop
lock
shrb
xor
std
dec
xlat
push
xor
loopne
cmp
lea
rep
sub
cli
sub
pop
pusha
add
lret
fnstcw
xor
testl
pop
xor
in
add
cli
pop
hlt
xchg
mov
pushf
cmc
insl
popf
cs
mov
inc
mov
push
push
sub
fld
loop
mov
int3
in
stos
inc
outsb
inc
and
pop
mov
frstor
cltd
adc
fdivs
sub
xor
cmp
sarl
repnz
jns
std
pop
mov
lcall
jnp
rcl
imul
mov
xor
shrl
lods
fldt
lret
mov
dec
pop
xor
add
imul
sarl
gs
xchg
fstps
divb
pop
xchg
std
add
push
testl
push
nop
dec
out
shr
jne
fsts
cld
fimull
in
enter
in
jo
sbb
push
gs
out
fstl
cmpsb
mov
nop
outsl
jbe
mov
enter
outsb
lea
xor
adcb
mov
sub
stos
sub
jb
add
sub
jnp
in
ret
and
jnp
push
mov
adc
xchg
dec
pop
cli
in
loope
cmpsb
fnsave
rorl
adc
sub
cmc
arpl
or
movsb
and
mov
movl
jle
push
adc
and
in
cmp
jne,pt
out
fimull
out
xor
hlt
pushf
andb
fcoml
push
mov
cmp
mov
dec
addl
out
rcrl
add
push
call
mov
cmc
pop
sahf
je
and
rcrb
sbb
push
jns
mov
aaa
dec
mov
movsl
test
insl
in
insb
xchg
or
mov
cmpb
jne
iret
mov
pop
movsb
jmp
and
adc
jb
sbb
imul
cmp
fmull
xorb
or
fisubrl
xchg
mov
xor
cltd
clc
push
nop
fimull
jne
jl
xchg
mov
add
cmp
inc
lret
xor
push
jmp
push
dec
inc
data16
mov
or
jbe
enter
test
pushf
and
jmp
mov
fisubs
jg
sti
mov
outsl
adc
jo
scas
adc
lsl
ja
outsl
cmovae
push
int
test
daa
inc
inc
cmp
sub
addb
jne
fs
mov
out
je
inc
xchg
pop
sarb
out
jo
add
push
xor
push
adc
mov
and
xor
ror
lret
add
mov
cmp
sub
jecxz
out
xchg
imul
and
jnp
out
pop
repnz
mov
nop
xor
jmp
std
jl
aad
add
jp
mov
push
insl
shlb
xchg
mov
fs
je
outsb
xchg
mov
pop
xor
cmp
mov
mov
mov
add
out
popa
inc
es
sub
sbb
lock
movsl
pop
mov
push
aam
jb
xor
push
ss
cmpsl
es
lods
mov
shrl
mov
imul
loope
jecxz
sub
rcll
add
enter
add
rolb
shl
int
add
adc
xor
pop
dec
xlat
jmp
nopl
pushf
scas
jbe
bound
jne
das
out
xor
imul
in
cmp
mov
test
push
bound
fisubrl
icebp
adc
fstpt
xchg
sbb
pushf
cmc
sbb
sarl
das
lcall
cltd
mov
mov
cmc
out
mov
xchg
pop
dec
xchg
lret
mov
ds
aas
or
ret
sub
push
addr16
cwtl
push
jg
ds
data16
test
scas
test
insl
mov
in
icebp
mov
nop
jnp
clc
pop
add
pop
cld
in
loop
mov
and
jle
fbld
xchg
pop
xchg
dec
into
add
pop
push
scas
inc
iret
sub
pop
mov
insl
shl
cmp
mov
negb
dec
stos
add
in
insb
mov
push
mov
adc
xor
pop
jb
sbb
xor
sub
mov
int3
lock
scas
push
mov
sub
pop
jbe
push
and
jl
fisttpl
xor
push
push
into
mov
inc
call
pop
daa
mov
lret
fcmovbe
push
inc
imulb
mov
ja
call
cwtl
inc
push
enter
and
pushf
leave
inc
sti
dec
lock
bound
in
add
mov
cmc
xchg
push
sbb
push
pop
xchg
xor
les
sbb
inc
push
mov
stc
cmp
mov
pop
div
or
push
shll
in
out
movsb
mov
sbb
mov
imul
shr
xchg
ret
xor
int3
out
ljmp
cmpl
enter
repz
sahf
jno
inc
jmp
ljmp
decb
or
push
dec
test
rol
pop
shlb
and
pushl
xchg
adc
adc
xchg
mul
subb
rorb
pushf
mov
arpl
mov
sub
mov
gs
aam
xchg
push
jmp
xor
stos
das
rcrb
rol
imul
testl
xor
mov
notl
ja
add
enter
pop
fwait
pop
ret
scas
pmaddwd
test
jg
xchg
ja
pusha
sbb
mov
mov
out
call
les
push
leave
xchg
xor
push
mov
cwtl
sarl
or
js
add
adcl
cmp
sub
xchg
or
dec
int
inc
lret
mov
popf
jle
dec
mov
mov
movsl
fstpt
adc
ds
mov
mov
sub
add
fsub
adc
stos
or
in
clc
fstl
repnz
adc
movsl
filds
arpl
cltd
mov
or
and
mov
mov
pop
xchg
mov
jg
xchg
mov
mov
xor
addr16
imul
scas
inc
mov
enter
sbb
sub
xorl
add
jno
gs
setl
push
xor
imul
dec
mov
sbb
imul
lret
popf
jmp
xchg
push
pushf
data16
in
sti
sub
mov
cmpsb
jp
cmp
ss
adc
lahf
dec
into
adc
jo
xor
cmp
aaa
xor
scas
sbb
sti
xchg
js
mov
adc
gs
out
mov
ret
inc
mov
out
jg
loope
popa
clc
sub
neg
adc
pop
scas
pusha
js
push
xor
fdivl
push
out
fs
fisubrl
gs
xor
out
dec
sbb
rclb
test
popa
add
adc
sbb
mov
pop
inc
out
mov
xchg
outsl
jle
or
aam
sub
jg
ss
mov
sarl
xor
je
rclb
repz
out
lods
loop
pop
sbb
fldt
push
sbb
cmp
orb
int3
scas
mov
out
adc
imul
imul
push
or
add
fwait
loop
dec
dec
cmp
push
and
mov
aaa
mov
and
mov
outsb
int3
push
iret
push
ret
push
pop
cmp
fadd
xor
add
pop
lea
test
dec
mov
in
pop
or
into
test
js
test
add
push
and
push
imul
and
test
or
in
fildl
sub
sbbl
xchg
ficomps
ret
push
xlat
sub
daa
pop
cmc
dec
inc
ljmp
sti
inc
sarl
pop
scas
dec
aas
inc
cld
imul
dec
dec
mov
inc
gs
movsb
idivl
mov
jecxz
hlt
sbb
fisubrs
popa
das
xor
icebp
scas
dec
ror
mov
out
les
mov
outsl
sbb
lods
mov
mov
ret
mov
pop
xchg
xor
push
sahf
jge
scas
test
xchg
std
pop
lcall
jg
and
shr
jne
daa
push
ret
out
fs
in
sbb
inc
mov
mov
mov
push
add
xor
in
in
cli
jmp
fmul
fwait
mov
scas
and
jmp
or
dec
aas
adc
mov
repz
pop
sbb
xchg
sub
cmp
adc
sbb
inc
test
sbb
pop
mov
push
mov
mov
pop
mov
fistps
notl
hlt
adcb
jnp
adc
or
decl
xchg
into
insl
and
in
in
inc
sbb
xor
cli
test
dec
push
push
ss
jl
scas
inc
pushf
lea
sbb
mov
sub
adc
imul
enter
xchg
repz
adc
pop
or
sbb
push
add
jle
xchg
test
sbbl
inc
sbb
dec
insl
and
dec
lea
fidivs
fstpl
je
inc
inc
ja
ds
jbe
pop
addr16
cmp
and
push
pop
aaa
pop
std
jns
mov
add
dec
and
sub
pop
cmpsl
mov
add
cmp
xchg
pop
imul
push
clc
ret
mov
pop
ds
lcall
aaa
push
lret
nop
roll
shl
add
addr16
test
adc
dec
ret
pop
cs
ss
pusha
loope
es
imul
and
lods
add
mov
cmp
xor
aam
movsl
mov
sbbb
push
push
adc
jae
popa
sbb
push
add
add
sub
or
pop
scas
sbb
push
mov
jnp,pn
mov
rcll
add
and
fs
dec
sahf
jecxz
sahf
xlat
inc
xchg
mov
fs
mov
mov
dec
sbb
jo
sbb
loopne
xlat
popa
push
ret
xchg
cmp
test
ljmp
mov
cli
cmp
and
or
jbe
pop
or
pop
pop
es
cwtl
add
push
push
or
lret
jo
adc
dec
or
sarl
repnz
adc
fsub
jbe
shr
scas
ffreep
imul
mov
scas
sub
xor
adc
xchg
in
xchg
aam
test
mov
cltd
and
push
push
mov
cmpb
subl
outsl
jmp
pop
inc
dec
mov
clc
or
or
sub
adc
test
sbb
repz
xor
sbb
cmp
cld
jecxz
and
aaa
loopne
sbb
add
push
and
cmc
push
cmpsl
ud2
mov
xor
sbb
imul
fwait
push
sbb
ret
cli
mov
and
sbb
jbe
push
movsl
adc
inc
adc
adc
ds
fildll
xor
push
adc
ret
das
or
xor
push
sub
jne
movsb
sbbb
movl
call
jno
inc
ret
shl
outsb
test
out
lcall
dec
sbb
incl
fwait
jp
dec
cmp
dec
decl
add
mov
and
or
ja
stc
ljmp
out
scas
jp
add
and
aam
xchg
ret
add
mov
and
in
jnp
out
pop
rcll
nop
ret
cltd
jmp
mov
mov
daa
or
cmpsl
in
lods
jp
in
or
sbb
adc
test
adc
xorl
int
pop
inc
cmpsl
ret
lea
imul
pop
bound
lds
push
cs
jp
pop
aad
aas
fidivl
jecxz
sub
out
out
fildll
cwtl
mov
jmp
cmp
aas
jg
sbb
ljmp
negl
stos
popl
mov
psubusw
shll
insl
pop
pop
das
xlat
push
and
sbb
or
cwtl
fcoml
dec
push
add
cltd
fbstp
mov
out
dec
es
test
gs
es
stos
aaa
xor
outsl
mov
lret
cld
lahf
das
xor
push
jb
cmp
subl
and
mov
inc
js
dec
mov
xor
mov
pop
mov
mov
pop
arpl
dec
int
sbb
inc
push
outsl
in
mov
scas
dec
outsb
sbb
mov
push
and
call
jne
cmp
or
ja
imul
add
jl
adc
jl
fs
mov
mov
or
xchg
jle
pop
push
mov
adc
insb
push
add
fsubs
lret
mov
sbb
jnp
push
jno
adc
daa
jns
push
mov
repnz
lock
and
jg
aaa
pop
adc
mov
cmpsb
add
js
int
insl
mov
outsl
js
std
inc
dec
shrb
subb
push
test
xor
fwait
jmp
add
bound
xchg
push
push
add
arpl
ljmp
jg
fdivs
cld
mov
jo
xlat
idivl
stc
test
or
mov
xchg
mov
cmp
test
xlat
scas
lods
sbb
out
or
sbb
xchg
cmp
mov
pop
popa
sbbb
sub
jne
dec
and
arpl
fisttpl
mov
inc
lods
mov
adc
dec
fcomps
and
xor
sahf
das
shr
push
xchg
insl
dec
sub
sbb
adc
cmc
fadd
cmpsl
dec
mov
mov
fmul
xor
test
and
cmp
lods
jbe
sti
sub
xchg
sub
fildl
push
adc
out
imul
adc
sbb
push
adc
sbb
pop
mov
loop
add
add
cmp
pop
dec
sub
jmp
adc
scas
inc
std
lods
imul
pop
jecxz
lret
mov
mov
out
out
jnp
cmp
cmp
int
dec
int
dec
les
mov
ds
sbb
jbe
enter
pop
pop
lahf
stos
pop
sbbb
sbb
xor
add
push
fildl
aaa
sahf
lret
jns
cmp
mov
and
pop
popa
clc
pop
ret
ds
into
loope
pusha
inc
adc
or
rcll
push
sub
xor
sbb
sub
in
push
mov
test
lahf
or
ret
stos
js
add
test
add
cmp
inc
pop
sbb
dec
les
cmpsb
push
ficomps
adc
cs
mov
sbb
cmp
addr16
pop
jle
test
out
xchg
cmp
mov
and
or
out
push
add
adc
imul
popa
inc
pop
sbb
push
lahf
js
push
sub
fwait
dec
cmpsl
loop
push
and
push
cmpsl
or
jg
mov
mov
mov
pop
mov
push
xchg
push
scas
lahf
add
je
adc
inc
aad
add
mov
cltd
push
add
insl
sbb
pop
adc
add
xchg
nop
mov
andl
hlt
mov
mov
inc
pushf
mov
stc
jns
inc
leave
ja
adc
sbb
cmp
pusha
pop
negb
sub
hlt
mov
out
push
mov
pop
lret
push
add
pop
sub
dec
outsb
add
jecxz
jle
repz
xchg
add
fstpl
lock
sub
rcrb
fs
pop
sbb
mov
jno
ficoml
out
testl
stos
mov
jg
fstl
ljmp
sbb
and
gs
mov
ret
ss
sahf
xlat
leave
mov
scas
adc
push
and
or
bound
lods
push
mov
pushf
fldenv
dec
pushf
mov
mov
jnp
mov
fsubrl
jb
push
and
xor
mov
mov
adc
inc
mov
out
in
outsl
dec
lret
aas
pop
add
arpl
cmp
std
xor
sbb
out
jg
jg
sub
mov
xor
call
push
faddp
gs
push
or
xchg
push
setp
dec
jl
and
pop
xor
add
xchg
rcrb
inc
mov
add
pusha
cmp
pusha
dec
mov
lret
xor
mov
pop
test
outsb
add
popa
pop
ljmp
xor
gs
sbb
jb
movsb
push
pop
pop
mov
sub
fistl
mov
daa
pop
outsb
or
cmp
dec
fucomp
cli
cmpsl
lods
lret
stos
outsb
sahf
jg
pop
cld
addl
mov
mov
push
mov
ljmp
cli
aam
into
test
out
popa
dec
xor
pop
imul
mov
sub
dec
jns
popf
lahf
and
mov
mov
sub
push
arpl
arpl
dec
dec
lds
insl
rcll
dec
mov
push
dec
dec
jmp
call
clc
in
dec
or
insl
int
pusha
mov
inc
cli
ret
cmc
aad
popa
mov
outsb
ljmp
mov
cmpsl
or
mov
sbb
pop
test
xchg
icebp
xchg
jne
scas
push
push
xchg
or
sbb
pop
mov
cmp
sub
xlat
cmpsl
mov
hlt
aas
add
fimuls
cli
mov
clc
insb
lea
push
and
sub
loopne
faddp
jle
cld
test
push
test
fstps
cmpsl
ss
rolb
shl
jne
cmp
ljmpw
jge
xchg
sub
insl
and
add
int3
mov
push
sti
mov
out
xchg
pusha
sbb
lock
xchg
loope
inc
or
insl
lret
repnz
jecxz
movsl
xchg
xor
jb
xchg
fisttpl
pop
add
inc
and
out
out
inc
push
add
aad
loope
cs
cmp
arpl
test
test
or
sub
adc
mov
imul
aas
cwtl
pop
ret
loopne
dec
jecxz
mov
fwait
dec
pop
mov
mov
cltd
insl
adc
sub
pop
stc
aaa
and
pop
cmp
inc
in
mov
pushf
pop
push
xor
cmp
movsl
jns
pusha
xchg
push
mov
clc
dec
bound
push
cld
into
aad
pushf
xorb
int3
ret
data16
inc
sbb
pop
or
test
daa
je
dec
xor
jmp
dec
mov
cmp
cmc
pushf
lea
and
push
mov
dec
lods
sbb
loop
shll
cmpb
daa
push
scas
fmull
mov
jp
cmp
test
sar
pop
push
mov
cmp
mov
mov
jne
hlt
loop
ss
sbb
aaa
pop
mov
dec
movsl
xor
and
scas
mov
push
sub
lock
or
int3
imul
popa
xor
cmp
push
inc
push
and
cmc
sbb
jns
cli
daa
data16
rcrb
out
cmpsb
adc
stc
aas
dec
add
jge
fistpl
roll
mov
mov
dec
lea
or
cmp
popf
int3
adc
dec
adc
cmpsl
jnp
or
int
pushf
or
arpl
mov
shlb
cmp
pop
or
stos
rorl
and
add
cmpsl
jae
sub
inc
or
jo
call
testb
jno
mov
js
xor
gs
dec
sti
mov
jo
inc
pop
or
fwait
dec
int3
push
adc
add
daa
jnp
test
repnz
imul
mov
movsb
scas
repnz
movsl
in
sub
sbb
adc
and
addps
push
xchg
or
popf
ret
adc
enter
lods
ds
or
mov
nop
push
in
aad
dec
push
push
sub
cmpsb
repz
pop
pop
in
sbb
dec
jns
push
data16
pop
jg
sub
jp,pt
pop
mov
push
mov
leave
sbb
pop
cwtl
fcomi
out
sbb
inc
adc
in
inc
mov
inc
mov
inc
jl
push
pop
mov
imul
inc
sahf
mov
pushf
test
call
mov
in
jo
cmpb
inc
pop
xchg
loop
jecxz
movsb
popa
push
rcrl
outsb
fiaddl
in
add
loope
into
imul
dec
inc
sarb
xor
push
dec
jbe
insb
sub
cwtl
mov
mov
lcall
mov
push
loop
fsubrl
mov
or
jl
or
insb
fwait
cmc
mov
stc
push
xor
or
jbe
sub
push
sub
xchg
nop
mov
aaa
lahf
mov
mov
jg
or
pop
xchg
push
aad
pop
pop
xchg
cmp
imul
xchg
sub
push
pop
daa
xor
in
ror
inc
lahf
xor
mov
add
bound
repz
xchg
mov
fldcw
cmc
hlt
add
mov
dec
jecxz
and
incb
dec
dec
enter
dec
xchg
rcr
daa
jo
and
adc
test
inc
mul
cmp
add
xor
int3
movsb
dec
nop
idivl
in
mov
mov
and
movsl
je
ljmp
xchg
adc
ljmp
mov
sub
loop
jl
ds
xor
pop
pusha
mov
and
cmp
xor
jno
fildl
cmp
pop
js
sbb
roll
xlat
or
mov
test
push
sbb
addl
cmpsl
fisttpll
mov
jnp
dec
mov
jnp
adc
push
icebp
sbb
testl
in
pop
dec
dec
in
scas
shrb
dec
mov
mov
xchg
movsl
roll
pop
scas
mov
xchg
jb
xor
ds
test
icebp
nop
aam
js
adc
sub
shrl
cmp
adc
push
inc
push
pop
cld
rolb
push
xor
xchg
shrb
shrl
pusha
dec
rcrb
jl
in
cwtl
and
xchg
mov
inc
cmp
les
jge
rcr
pop
and
xchg
lcall
adc
sahf
fsub
aas
int
mov
outsb
imul
gs
aas
jecxz
xchg
mov
into
int3
jge
mov
mov
daa
gs
fnstsw
stc
mov
xchg
push
jge
cmp
shll
pop
movsl
jl
jmp
xchg
loopne
lds
fisubl
mov
mov
xchg
cmp
scas
ss
daa
add
ret
leave
mov
xlat
pop
aad
clc
lcall
xor
imul
sbb
push
repnz
mov
mov
xor
mov
dec
mov
jge
sti
dec
cmp
sub
jecxz
int
dec
adc
and
push
xchg
dec
in
inc
jmp
sarl
sub
les
enter
and
popa
fldenv
jb
mov
push
lret
push
cmpsl
xor
push
mov
dec
sub
lret
jl
and
dec
jg
mov
pop
fstpt
orb
loopew
jb
or
cmpsl
xor
es
and
jp
lcall
popa
mov
sub
mov
adc
mov
scas
push
out
pop
les
outsb
or
cs
rorl
adc
testl
jl
std
cmp
cwtl
scas
stc
fcmovbe
out
sub
cmovge
push
lock
stc
cmp
xor
fwait
and
lods
sbb
push
or
or
jl
mov
dec
outsl
dec
mov
or
and
xchg
xor
scas
pop
imul
mov
sbb
xlat
xchg
sub
ljmp
mov
sbb
addr16
scas
jno
loopne
stc
clc
outsb
cmp
sahf
out
movsb
xchg
in
push
sbb
in
mov
push
add
xlat
mov
cmp
sub
sbb
repnz
ret
xchg
cs
jge
sbb
ljmp
dec
data16
xchg
mov
loopne
mov
mov
std
xchg
push
push
push
push
inc
and
arpl
cmp
cltd
cmc
or
push
loope
mov
out
xor
sbb
jl
scas
gs
dec
in
dec
dec
mov
xor
sbb
popa
xor
lock
push
loope
and
xchg
mov
and
mov
ret
xor
ds
pop
pop
hlt
in
or
cmp
mov
push
fbstp
fstp
in
fcoms
mov
pusha
mov
dec
sub
mov
push
shrb
pop
fdivrs
sub
mov
fisubl
add
cmc
or
mov
adc
sub
lret
push
xor
pop
sbb
jne
or
nop
xchg
push
cmp
aas
int
popa
dec
outsl
in
clc
jecxz
lods
mov
shr
and
inc
jmp
pusha
iret
out
dec
dec
lahf
jo
ret
faddl
xor
aaa
jg
push
xchg
enter
mov
inc
arpl
sub
or
push
dec
in
push
add
sti
insb
mov
cli
push
dec
mov
stc
fildl
fcoms
fcoms
notb
outsb
nop
data16
jge
push
sbb
daa
xorl
jb
sbb
mov
cld
ret
test
xor
sub
in
cmp
inc
in
cmc
push
cmp
es
cmc
out
adc
mov
xor
cmpsb
sub
stos
fs
aam
inc
ds
mov
bound
in
std
pop
mov
or
xor
jbe
cmp
jne
ret
ljmp
dec
test
arpl
mov
sub
jns
xorl
push
ljmp
xchg
mov
and
xor
jbe
lods
sahf
push
pop
stos
mov
sbb
into
fdivr
mov
lods
popa
dec
fiaddl
jmp
mov
sti
xchg
stos
push
idivb
adc
mov
leave
fldl2e
jmp
xchg
sbb
cmpsb
adc
and
inc
rcr
adc
pop
mov
data16
cmp
cmp
jnp
add
and
sub
pop
xor
mov
push
test
cwtl
shlb
in
ja
xor
enter
adc
aam
in
pop
mov
mov
ret
insl
fsubrl
scas
ficoml
xor
cld
xchg
inc
pop
mov
mov
std
das
sub
dec
push
nop
test
sub
cmp
rclb
cld
out
add
call
pop
aaa
bound
or
neg
and
outsl
or
sbb
lahf
in
out
xchg
fucomi
cwtl
and
outsb
xor
inc
insb
out
inc
js
sub
pop
and
pushf
push
add
mov
xor
lea
pop
pop
sub
hlt
je
sbb
stos
pushf
add
xor
fstl
arpl
push
test
push
cmp
ret
mov
jno
data16
adc
test
out
xor
mov
adc
push
inc
ds
jmp
pop
mov
outsb
lea
mov
push
ficompl
mov
shrl
int
loopne
mov
mov
add
mov
ret
popa
add
sahf
shl
loopne
out
test
repz
in
ds
std
mov
add
jecxz
push
push
adc
clc
repz
call
clc
leave
pop
push
dec
mov
testb
and
lahf
and
stc
jg
out
pop
mov
push
inc
sub
pop
inc
push
jmp
push
jl
lret
insb
pop
mov
cwtl
xchg
hlt
adc
leave
mov
adc
add
dec
movl
fsubs
mov
lock
mov
inc
int
dec
mov
inc
dec
insl
lahf
shl
outsb
movsb
outsl
notb
sub
add
fucomip
sarb
insl
jmp
jns
movlhps
push
repnz
sbb
sbbl
fidivs
xchg
outsl
shlb
in
popa
bnd
rcrl
outsb
mov
andl
pop
pusha
or
jae
mov
cmp
sbb
in
cmpsb
aaa
clc
fdivl
pop
aas
popl
sbb
hlt
jns
ret
xorb
rorl
jb
mov
jl
lcall
sub
dec
sbb
mov
cmc
je
push
roll
jnp
scas
into
aad
or
in
cwtl
pop
mov
shl
or
cltd
sub
mov
jb
aaa
lds
push
cld
jns
push
arpl
fisubrs
mov
mov
shrb
je
push
lods
dec
xor
jb
addb
sarb
sbb
lock
jecxz
mov
inc
or
push
add
mov
insl
jle
mov
fwait
nop
mov
fdivrl
add
cmp
xchg
lcall
or
push
addb
mov
lds
insb
xchg
insl
outsl
pop
icebp
js
inc
mov
mov
dec
jae
push
mov
cmp
cmp
sub
or
das
in
in
and
cmp
sub
cmpsl
fs
adc
push
mov
inc
aaa
aad
repz
mov
stos
ja
roll
ss
push
xchg
pop
and
loope
out
pop
sbb
rolb
sub
sbb
daa
ljmp
sbb
inc
cli
push
outsl
mov
dec
popa
fbstp
cmp
jle
shlb
xchg
iret
lods
mov
aaa
push
ss
and
push
out
movsb
cltd
jnp
inc
ja
mov
bound
xchg
jne
sbb
xchg
addr16
addr16
dec
sub
addr16
xchg
add
pop
mov
popa
insl
or
and
fs
in
outsb
cmp
mov
hlt
out
std
cwtl
mov
jnp
idivl
adc
mov
stos
icebp
or
shlb
sub
test
inc
idiv
leave
test
stc
inc
loopne
mov
cmp
xchg
pop
pushf
fs
cmp
pop
cmp
jns
push
or
fstps
fcoml
aas
lods
jo
je
cmp
adc
push
xchg
xor
adc
pop
imul
cmp
repnz
or
push
mov
mov
cld
jecxz
fnstenv
hlt
test
insw
orl
mov
lahf
ret
and
pop
js
mov
verw
mov
jns
cltd
xchg
out
in
xchg
insb
dec
in
mov
cmc
inc
sbb
inc
int3
stc
pop
dec
and
int3
out
pop
mov
ret
jmp
and
mov
stc
ja
sahf
inc
aad
sti
and
inc
mov
fisubrl
inc
sub
ret
jp
cltd
lds
js
inc
das
jno
imul
mov
mov
orl
shl
mov
add
mov
sub
movb
mov
xor
jae
jne
icebp
in
add
xchg
push
popf
or
sbb
ret
jo
lds
xchg
dec
mov
push
scas
insl
pop
ss
jb
adc
mov
and
jmp
and
test
cmpsl
sahf
int3
jle
mov
xlat
movsl
insl
inc
jge
xor
lods
xor
aam
ss
sub
xlat
and
in
popf
cwtl
sub
mov
mov
leave
xchg
pusha
dec
lods
inc
or
sub
fists
jmp
pop
xchg
add
outsb
clc
sbb
push
adc
hlt
mov
add
mov
sti
es
dec
ret
mov
or
pop
mov
shrl
sub
aad
push
test
pop
sub
lahf
cmpsb
cltd
mov
push
int
sahf
mov
cs
xchg
pop
fwait
mov
cli
mov
mov
and
ja
gs
push
xchg
jmp
xor
jge
add
mov
push
mov
jge
and
je
add
lock
cmpsb
je
jo
xor
mov
cmpsb
sub
notl
cmc
pusha
lods
rcrb
das
out
lods
lret
xchg
or
push
loop
loope
jge
stos
inc
jae
lcall
test
add
and
jp
pop
or
nop
jb
lcall
mov
lods
lods
sarb
ja
cmc
xchg
fnstenv
inc
fsubp
ret
shll
cmp
adc
inc
adc
incl
jge
shrl
and
jp
call
insl
cld
sub
popf
hlt
or
adcb
imul
xor
out
hlt
xlat
movsb
jno
inc
clc
xchg
in
in
or
sbb
ss
jns
push
andl
lcall
inc
in
arpl
inc
dec
cmp
shr
in
in
cltd
fst
mov
adc
and
push
push
into
jp
arpl
mov
inc
ret
pop
stos
mov
sbb
test
jbe
cld
out
roll
sub
xor
dec
out
in
add
popa
rclb
bound
in
nop
sub
or
lret
mov
lea
cmpb
inc
dec
stc
mov
cmovno
push
mov
and
sub
jno
les
or
add
sbb
cmp
dec
mov
push
dec
jg
out
cmp
pop
dec
cmc
repz
test
rcrb
mov
fldt
dec
xchg
push
div
in
aam
jne
cmpsb
mov
jne
nop
sbb
mov
push
mov
cmc
in
jno
enter
xor
je
pop
out
out
sub
inc
out
add
aaa
repz
out
ficompl
addb
sub
movsb
lcall
leave
mov
xchg
cmpsb
decl
movsb
xorb
into
icebp
and
mov
jmp
mov
or
mov
jle
push
mov
pop
andb
mov
gs
loopne
shrd
sbb
sub
push
pusha
inc
mov
dec
mov
add
adc
aad
sub
jl
pushf
add
jns
jmp
inc
ss
lahf
push
add
cmpb
cmp
cmp
xorl
gs
cwtl
loopne
pop
imul
xchg
call
push
loop
mov
ja
fiaddl
jp
rolb
std
jl
xchg
or
jg
movsl
hlt
scas
cwtl
in
sahf
adc
xchg
mov
pushf
mov
scas
aas
movsb
push
pusha
ret
add
mov
das
out
andb
cmp
fisttps
add
sbb
sbb
sahf
mov
push
cmpl
pop
insl
js
cmp
jmp
xor
ffree
adc
sub
data16
dec
mov
and
sub
insl
call
add
push
push
stos
jge
pop
movsb
add
inc
sub
sub
scas
mov
push
push
je
in
dec
cmp
or
sbbl
pop
pushf
jo
push
sbb
stos
das
sbb
adc
and
test
ljmp
mov
mov
push
jnp
adc
popa
insl
dec
mov
std
cmc
sbb
mov
mov
mov
int3
stos
scas
int
cli
mov
xchg
mov
js
inc
test
add
or
push
lock
sbb
repz
jne
pop
subb
jl
enter
lcall
dec
jnp
lret
mov
adc
stos
inc
fwait
mov
mov
sbb
rclb
cmp
cld
enter
pusha
adc
push
mov
mov
or
in
jmp
lods
ljmp
adc
push
inc
inc
sbb
fwait
cmp
jnp
jbe
arpl
dec
pop
dec
push
push
fcomp
insb
jg
xchg
stc
inc
outsb
nop
jge
push
out
rorb
mov
mov
pop
pop
test
jmp
xlat
pop
mov
push
cli
xchg
std
mov
inc
faddl
add
push
sub
and
mov
xor
and
outsl
inc
lahf
rclb
aad
shll
shl
aas
sbb
mov
insb
sub
ja
xchg
xor
push
dec
arpl
clc
pop
mov
or
inc
test
pop
sbb
and
inc
xchg
aas
sbb
clc
xor
out
in
add
sbb
xchg
pop
pop
jge
mov
aaa
jns
mov
cmpsl
jg
nop
xchg
pop
mov
mov
add
mov
in
adc
add
hlt
adc
gs
inc
incb
mov
jle
fwait
out
repz
sub
sbb
fildll
xchg
int3
shr
fcmovb
dec
xor
sahf
mov
mov
xchg
adc
pop
add
pop
push
xor
int3
sub
stos
sub
or
and
push
mov
adc
mov
movsl
pop
jb
inc
mov
out
jae
ror
sahf
or
dec
add
adc
int3
jns
cmpsl
sbb
ljmp
addr16
loopne
push
cs
jecxz
inc
subb
xchg
pop
push
mov
and
ja
mov
repnz
in
mov
cmp
test
sbb
in
icebp
imul
jmp
in
test
jg
notb
xchg
xchg
shlb
sbb
pop
movsl
mov
sbb
mov
jnp
imul
push
push
shlb
sbb
push
mov
mov
jmp
mov
pop
push
sarb
outsl
xchg
pop
lds
xor
inc
fsubrp
pop
js
mov
lahf
jae
jle
mov
jge
mov
loopne
mov
fbld
jp
jne
arpl
fwait
sub
sahf
jbe
in
mov
sarl
out
sub
scas
mov
test
sbb
ret
dec
lret
out
imul
dec
lds
pop
je
cmpsl
jo,pt
cmp
aam
mov
xor
and
fisttpll
out
outsl
or
stc
call
sbb
push
arpl
jnp
mov
mull
jp
loopne
inc
mov
outsl
mov
ja
or
inc
mov
fcompl
push
nop
mov
ss
mov
push
dec
pushf
pop
pop
add
mov
adc
test
shl
xlat
ljmp
stc
or
cmp
fstl
sub
aad
sub
xchg
push
mov
pop
pop
push
xchg
aas
xor
int
enter
pop
or
scas
sbbl
es
addr16
sub
cmp
mov
pushf
mov
sbb
xchg
test
jg
loope
push
xchg
stc
adc
sbb
ss
dec
cs
rol
jle
jae
xor
cmp
jl
mov
push
adc
rcll
mov
jmp
or
das
in
hlt
sti
movsb
xchg
in
sbb
cmpsl
mov
cwtl
xcrypt-ofb
cmpsl
insl
in
sub
cmc
push
lock
in
mov
pop
dec
jl
xlat
in
cmpsb
pop
sbb
stos
xchg
arpl
dec
cmpsl
jbe
daa
imul
sahf
je
sahf
jle
pop
in
dec
dec
daa
adc
push
dec
enter
xchg
mov
mov
into
inc
mov
inc
sbbb
scas
add
mov
inc
lret
std
inc
adc
test
loop
mov
fwait
adc
sbb
sbb
sub
inc
xor
add
cld
outsb
and
shl
pop
and
push
icebp
jp
xchg
out
pop
mov
fxch
daa
lds
xor
in
jmp
gs
inc
mov
mov
cld
cmp
pop
roll
push
jmp
aam
lods
fstpl
xchg
loop
fcmovnb
jae
add
cmc
sbb
push
rorb
cmp
mov
and
inc
ret
sbb
mov
mov
cld
jne
das
mov
out
test
add
negl
add
xchg
jp
mov
outsl
sbb
xor
cmp
mov
sbb
jecxz
sbb
add
in
inc
sub
dec
push
adc
outsl
dec
out
int
xchg
gs
sahf
cmpsb
mov
push
push
xchg
cmp
fists
xchg
loop
mov
fdivs
rolb
or
cltd
add
daa
fwait
bound
lret
pop
sbb
push
rcrb
mov
into
nop
addb
fmull
or
cltd
sub
lcall
cli
adc
mov
stos
xor
inc
lods
icebp
mov
andl
mov
adc
sub
nop
movsl
sbb
mov
jle
inc
ret
addr16
out
jo
outsb
xor
sbb
jno
pop
dec
xchg
test
fdiv
test
mov
dec
push
adc
adc
dec
push
pop
cmpsl
lret
rol
xor
adc
xchg
add
xor
mov
and
xor
dec
mov
sub
decl
pop
sub
mov
push
inc
mov
in
adc
dec
cltd
mov
repz
pop
lock
add
sbb
mov
bound
xchg
inc
out
or
adc
aam
jmp
xlat
add
testl
mov
in
shr
sub
mov
lcall
sbb
daa
add
mov
dec
pop
rcrl
mov
mov
stos
mov
into
inc
cmp
xchg
dec
cs
movsb
cwtl
push
pop
adc
dec
cmp
pop
xlat
add
js
mov
jecxz
scas
daa
mov
inc
imul
dec
inc
daa
cwtl
dec
pushf
stos
sbb
popf
jmp
rcr
insb
ljmp
mov
jae
mov
push
push
fidivl
push
pmaddwd
mov
outsl
sahf
add
lea
xchg
push
inc
jnp
cld
push
inc
loopne
popl
aaa
cmpsl
fwait
xor
mov
sub
fwait
jl
jns
xchg
pusha
push
dec
test
sbb
dec
sbb
fcmovbe
ljmp
or
sbb
add
sub
sub
mov
mov
xchg
dec
mov
mov
mov
fadds
jno
xor
pop
and
xor
sub
shll
lahf
xchg
dec
push
les
mov
test
or
ftst
cmp
sahf
scas
fsubl
into
push
inc
adc
xor
or
int
lea
xor
mov
xchg
push
inc
jo
jge
cmp
cwtl
push
test
sub
data16
inc
mov
mov
iret
pop
testb
lret
inc
add
mov
pop
fldl
aaa
lods
test
mov
pushl
sbb
roll
repz
pop
imul
sbb
ja
jb
dec
push
mov
cld
push
enter
sub
push
pop
jbe
cmp
dec
cmp
or
adc
mov
dec
ror
lret
mov
fcomps
ret
and
xlat
cmpb
out
inc
mov
scas
fs
out
mov
les
jns
dec
adc
mov
dec
pop
inc
and
mov
pop
fldl
push
scas
sub
inc
push
add
mov
inc
mov
cwtl
or
add
outsl
arpl
cmp
rorl
test
sub
lods
in
pop
jmp
dec
adc
mov
scas
roll
orl
daa
mov
mov
push
sub
inc
add
shll
jle
aam
repnz
popa
inc
lods
mov
das
jbe
mov
ret
jae
push
adc
pop
pop
sub
push
hlt
cmp
pop
movsl
out
insb
repz
pop
mov
inc
andb
int3
push
jnp
lods
out
test
stos
insb
pop
jle
test
or
stos
adc
rorb
addr16
aad
push
bound
ds
pushl
mov
sub
data16
ret
jl
test
or
xchg
shlb
icebp
bound
and
cmpsb
push
and
dec
pop
leave
lods
mov
pop
mov
loop
sub
xor
inc
aaa
arpl
mov
sub
iret
lds
in
jmp
jae
sbb
or
fisubl
movsl
mov
scas
test
mov
cli
or
dec
sbb
push
fadd
mov
sbb
cmp
icebp
fs
mov
aad
pop
psllw
imul
scas
and
mov
rorb
push
aas
rclb
cvtdq2ps
imul
aad
ja
pop
idivb
test
cmpsb
pop
addl
jb
push
cmc
addl
dec
stos
sub
adc
sbb
jno
rclb
stos
or
mov
sub
mov
cmp
data16
xlat
cmp
adc
push
cmp
popl
je
push
lahf
je
push
aad
xchg
movsb
xchg
loope
into
mov
daa
and
repz
sbb
adc
jbe
popf
cmp
ss
push
movsb
inc
lods
and
push
push
jg
call
cli
inc
xor
cli
cmpsl
test
lods
adc
outsl
or
sub
mov
xchg
and
dec
pop
fisubs
xchg
in
dec
or
cmpsb
sub
gs
mov
sbb
pop
lcall
or
fiadds
cli
movsl
into
mov
mov
sub
add
into
lock
lods
dec
lahf
jnp
pop
cmpsl
daa
mov
sub
mov
sub
ljmpw
insl
negl
xchg
sub
add
push
mov
fmul
or
mov
mov
adc
cwtl
imul
inc
push
out
dec
push
in
xor
cli
cwtl
jno
sti
loope
aad
jnp
jp
xor
mov
outsb
xor
inc
mov
sbb
int
dec
cld
cmp
iret
xchg
call
lret
lret
popf
lea
or
add
adc
mov
inc
out
icebp
scas
jne
push
xchg
sbbb
je
fidivrs
xor
mov
adc
clc
stc
add
jo
mov
arpl
sti
fistps
push
insb
xor
push
scas
or
jl
mov
and
mov
mov
sbb
cmpsl
jp
mov
add
rcll
or
jb
gs
jge
cmc
dec
jp
lahf
or
push
popf
pusha
and
xchg
je
iret
sahf
inc
dec
sti
xchg
mov
mov
cmp
dec
popf
xchg
xor
stos
sahf
out
jns
stos
mov
mov
imul
adc
add
cwtl
jnp
or
pop
shl
mov
jle
dec
jb
not
mov
imul
dec
push
sahf
jmp
pop
fmul
adc
imul
push
push
mov
aam
lret
icebp
mov
mov
std
sub
mov
bound
mul
cmc
out
pop
das
or
mov
or
ljmp
lds
pop
jbe
add
or
das
pop
movsl
loope
repnz
clc
cmpsl
aas
mov
dec
push
lcall
pop
jns
xor
aaa
addr16
shll
mov
and
popa
shr
inc
xchg
cld
stc
cltd
mov
lea
push
sub
fcoml
repz
mov
es
mov
ljmp
cwtl
lret
ljmp
addr16
int
js
shlb
movsl
cltd
lods
out
addr16
in
mov
xchg
and
mov
xorb
mov
jb
and
or
jmp
shrl
mov
sub
hlt
insb
xor
das
pop
fildll
push
mov
jo
fwait
les
subl
jmp
std
fisttpl
jg
in
repz
lret
lret
lock
jle
sub
lods
cltd
xchg
inc
fmuls
or
push
shrl
stos
pop
sub
jle
add
popf
xor
xchg
dec
xchg
jmp
frstor
mov
jo
sbb
mov
sub
push
pop
sub
inc
mov
cmp
xor
xchg
ss
add
mov
stos
dec
mov
js
int3
inc
jecxz
adc
adc
out
sbb
loopne
arpl
sub
and
add
ss
xor
or
je
test
push
fwait
aaa
sbb
adc
add
les
loop
icebp
cmp
stos
xchg
cld
cmp
int3
lds
pop
xor
stc
loope
xor
fnstenv
push
xor
or
sbb
adc
xchg
jbe
inc
cmpsl
arpl
lret
int
sbb
or
repz
fcompl
xchg
andl
pop
jbe
mov
sbb
adc
outsb
scas
sbb
in
into
fiaddl
and
cmp
mov
outsb
aam
lret
mov
fs
xchg
push
loopne
notb
pop
or
push
pusha
inc
icebp
fisttpll
nopl
sub
inc
icebp
add
dec
pusha
mov
in
cwtl
sub
shl
les
test
pop
pop
push
xchg
fldt
inc
lds
cmp
pop
aaa
pop
mov
divl
sbb
push
rolb
clc
jmp
lahf
in
in
mov
xchg
repnz
lcall
loope
aam
mov
fildl
out
and
add
adc
xchg
push
out
jmp
pusha
mov
sbb
or
sti
push
jnp
shlb
mov
inc
test
add
loope
clc
mov
out
shrl
mov
mov
mov
push
mov
dec
out
dec
jge
xorl
jo
cld
ja
sbbb
pop
mov
or
in
aas
fwait
arpl
pusha
and
cmp
std
add
inc
mov
xor
xor
orb
imul
sub
data16
xchg
pop
cmp
mov
jecxz
adc
and
pop
mov
jg
mov
pop
outsb
sti
aam
ds
and
stc
inc
fs
cs
out
in
js
gs
inc
fsubp
icebp
mov
mov
dec
adc
fsubs
xchg
mov
mov
cli
sahf
push
cmp
rcrl
dec
decb
lock
jne
sbb
pop
inc
sub
xchg
pop
xlat
or
sbb
sbb
je
sarl
xlat
fisubs
out
mov
mov
cmp
ljmp
inc
icebp
arpl
push
std
xchg
pop
jnp
jne
dec
sub
ss
dec
dec
adc
mov
pop
pop
dec
subl
test
sbb
push
aam
mov
roll
jnp
arpl
push
add
stos
xchg
aam
mov
or
jno
push
movsb
dec
mov
sahf
gs
lods
scas
xchg
sub
int
lret
xor
cmp
push
mov
ja
mov
cld
addb
fidivrl
mov
xlat
xchg
sti
add
pop
fisubrl
cs
leave
les
shll
fucomp
xorb
push
push
jmp
inc
pop
fs
inc
mov
lea
out
mov
push
cmp
popa
inc
push
loope
jns
orb
je
cld
push
sub
dec
mov
cmp
loopne
xchg
mov
adc
adc
rcrl
sahf
cmp
mov
jae
aam
xchg
xor
pop
data16
into
xor
je
mov
andb
lcall
insb
lods
stc
mov
stos
xor
cmp
cmc
sub
inc
cmp
cmp
dec
push
in
jnp
out
ds
lock
or
sbb
test
and
incl
bound
jp
jbe
sub
stc
gs
arpl
clc
add
push
jnp
xchg
outsl
push
mov
and
ja
dec
inc
cmp
sbb
into
add
jg
mov
popf
mov
jge
dec
mov
popf
cli
loop
clc
push
ljmp
clc
xlat
fwait
add
ss
xchg
roll
xchg
pop
je
sbb
inc
mov
jecxz
xchg
pop
rcr
sar
and
pop
testb
imul
mov
inc
xor
pop
or
stos
sbb
xchg
pop
dec
stc
push
leave
lcall
jle
sub
cltd
xor
sub
pop
and
xchg
sub
cmp
mov
or
lret
push
mov
or
mov
scas
xchg
pop
jl
jb
mov
es
scas
cld
sbb
addr16
or
mov
adc
ret
dec
out
das
andl
dec
xor
call
in
pop
and
scas
inc
or
adc
adc
bound
push
add
hlt
sbb
mov
mov
push
dec
adc
dec
cmp
push
xchg
cmc
and
pop
fcomps
ret
push
aam
push
mov
add
pusha
lret
in
outsl
mov
dec
enter
sbb
test
cmc
dec
std
arpl
stos
add
popa
and
in
cmp
adc
lret
fadds
cmp
gs
xchg
mov
fisubl
mov
movsb
dec
lods
xor
xchg
jae
xchg
lahf
outsb
or
mov
xchg
xorl
js
adc
sub
xchg
leave
jmp
jge
rol
or
out
addb
pop
in
mov
fldt
mov
adc
shlb
fucomip
aam
sub
mov
lret
push
jne
adc
cmp
stc
rolb
clc
imul
pop
mov
call
mov
test
test
inc
dec
cwtl
fdivr
xchg
add
aad
shrb
pop
pop
push
xchg
in
pop
pop
pop
addb
imulb
pop
cmp
xor
sub
or
pop
inc
ret
pop
xor
jge
push
movsb
pop
repz
sbb
mov
ret
notl
inc
cmpsl
sbb
mov
dec
pop
ljmp
popf
push
mov
pop
repnz
cwtl
idivb
pop
sub
push
ds
mov
sub
ljmp
fdivs
cmp
sarb
adc
out
rcrl
sub
pop
or
dec
std
enter
pusha
enter
push
cmp
lret
rclb
inc
xor
xor
sub
lea
movsb
out
fists
lret
cmovns
ret
sub
ret
push
js
add
mov
in
pusha
pushf
mov
inc
aaa
jae
inc
das
pop
stos
mov
ljmp
mov
dec
jo
aad
or
arpl
xor
or
push
or
push
and
dec
insb
loope
add
inc
push
xor
cmc
mov
movsb
cltd
mov
fdivl
jne
lds
xor
rorb
fst
std
pop
outsb
addl
addr16
stc
mov
xchg
or
sub
lahf
mov
adc
fisubl
or
and
mov
mov
add
out
cmp
movb
xchg
pop
and
pop
repz
ret
into
es
add
pop
mov
outsl
rolb
sub
or
popa
lea
popf
test
add
mov
addr16
mov
inc
jno
mov
mov
arpl
add
enter
pushf
call
movsl
pushf
cmp
out
jle
ja
mov
mov
add
adc
jbe
inc
bound
ljmp
dec
bound
out
aad
out
cmp
and
aad
push
xchg
lods
mov
cs
popf
lock
shll
mov
les
push
mov
inc
and
jmp
insl
jge
and
pusha
dec
xchg
stos
push
jb
fsubs
stc
subb
andb
xor
pop
push
js
xor
sub
sub
and
sbb
cmp
xchg
mov
cmpsl
push
loop
sub
in
pop
pushf
jl
push
or
arpl
dec
jmp
test
lcall
addr16
mov
and
xor
paddd
cld
das
ret
movsl
pop
scas
or
xor
insb
dec
cs
dec
sbbb
mov
adc
out
xchg
js
push
cmc
push
jo
fadd
inc
mov
mov
add
cmpsb
fneni(8087
cmp
cmpsb
sbb
push
popf
jge
int3
fimuls
dec
ljmp
mov
mov
add
push
lods
rorb
ds
xchg
pop
xchg
fcompl
cltd
pop
cwtl
mov
lea
dec
aaa
jns
aad
push
aad
call
adcb
stos
les
push
adc
imul
jb
jnp
es
dec
push
mull
ja
lcall
or
lret
aas
cmp
pop
fistl
push
in
xchg
add
mov
jb
aam
hlt
mov
in
inc
add
sbb
sbb
aas
lods
dec
out
ffreep
ret
inc
and
dec
sub
scas
es
iret
lahf
std
mov
addr16
cmp
pop
xchg
adc
nop
sub
insl
mov
movsl
roll
push
cmp
and
dec
lds
je
xchg
mov
out
or
fisubrs
cs
dec
popf
sub
ret
loopne
mov
pop
es
rcrb
dec
mov
aad
mov
mov
subb
pop
and
adcb
inc
or
incb
inc
sbb
bound
mov
mov
and
mov
in
je
lret
fsubrs
addr16
xchg
or
xor
lock
jecxz
cwtl
in
mov
xor
push
punpcklbw
push
loope
sbb
add
jo
lret
insl
cld
sub
inc
sub
stc
mov
mov
dec
mov
hlt
mov
pop
push
adc
xchg
push
pop
je
dec
mov
jnp
addr16
daa
lock
sbb
pop
inc
inc
mov
lret
mov
xor
mov
push
inc
add
jp
shll
pop
sbb
int3
xchg
arpl
dec
pushf
fdivr
mov
adc
dec
or
sub
hlt
jns
xor
jge
add
mov
loopne
cmpsl
or
push
ss
dec
push
jmp
mov
sbb
sub
xchg
clc
loopne
stos
sar
gs
xor
dec
loope
dec
adcl
inc
repnz
pusha
inc
and
xchg
add
mov
jnp
dec
icebp
dec
sub
inc
stos
mov
mov
sahf
jmp
daa
or
pop
xor
xlat
aaa
call
adc
imul
add
call
push
int
mov
and
cwtl
dec
sub
bound
imul
cmp
repz
je
push
sti
xor
out
fisttpll
div
movsb
push
jle
push
sub
jne
out
lret
aad
mov
std
sti
inc
pop
sub
sbb
adc
sub
test
mov
mov
jecxz
mov
inc
pop
xchg
pop
mov
loopne
push
andb
in
and
push
mov
ljmp
sahf
movb
sbbb
jmp
rcr
dec
jg
and
xchg
lock
xchg
mov
pop
pop
and
mov
fidivl
out
imul
pop
sbb
and
pop
or
xor
sbb
js
sub
and
sbbl
xchg
ret
lea
jg
ss
push
fsubrp
xchg
and
jo
fnstcw
add
inc
xchg
ss
addr16
jnp
and
leave
fcompl
sbb
pushf
mov
jnp
gs
in
iret
xor
jecxz
xor
pop
int3
dec
je
cmc
pop
lock
mov
and
mov
xchg
out
loopne
fstl
repnz
cwtl
repz
test
mov
push
bound
xor
dec
or
popa
in
dec
leave
or
movsb
sub
or
add
dec
jns
daa
fistl
lods
daa
dec
add
ja
nop
outsl
xor
in
lahf
les
insb
in
add
ficomps
jp
lahf
cltd
xor
arpl
jle
jmp
add
out
xchg
sbbl
insl
mov
inc
gs
lea
mov
hlt
mov
push
data16
repz
pop
rdmsr
sbb
mov
fsts
movsl
out
pop
mov
mov
negb
repz
or
jns
inc
pop
sbb
dec
and
sahf
inc
int3
mov
lret
movsb
cmpsb
and
inc
jmp
dec
jne
dec
mov
dec
enter
loop
out
xor
sub
arpl
xor
sub
push
mov
mov
pop
out
or
frstor
xchg
in
aaa
push
in
mov
mov
add
mov
push
pop
insl
mov
or
outsb
fwait
outsb
daa
aad
sub
dec
sti
sbb
hlt
repnz
repnz
add
popf
or
sub
je
push
sub
cmpsl
pop
js
iret
or
movsl
ret
aad
mov
int
cli
xadd
loope
mul
mov
sbb
and
sub
lret
xchg
push
adc
inc
cmp
push
add
cmp
adc
xchg
cs
aad
adc
pop
ljmp
popa
lods
mov
push
clc
cmp
and
sub
fldenv
int3
mov
sbb
lret
ret
daa
jmp
xchg
jecxz
imul
jo
movsb
xchg
stos
inc
fdivr
lret
mov
mov
aas
xor
jg
mov
add
out
sbb
subl
cwtl
push
mov
sti
and
jl
lods
out
dec
es
fs
mov
shl
mov
xchg
outsl
cmp
movsl
dec
add
fwait
add
out
xchg
mov
mov
gs
movsl
daa
stos
jle,pt
fsub
and
fsubl
mov
loopne
out
mov
lds
and
and
js
push
xor
sbb
add
add
aaa
scas
cmpsb
mov
test
repnz
or
jge
or
adc
mov
fldt
and
xchg
pushw
nop
cmc
out
imul
jge
test
sub
xor
js
lods
add
es
lea
mov
mov
dec
push
stos
and
lods
fistpll
inc
sub
cwtl
out
pushf
imul
into
xor
mov
pop
cmp
inc
xchg
push
fistpl
and
jno
dec
cmp
data16
xchg
push
adc
stos
leave
cltd
cmp
cwtl
int
cmpsb
rol
int
or
or
bound
lock
jo
mov
xchg
xchg
je
xlat
sbb
inc
mov
push
icebp
push
inc
xchg
push
int
mov
cmpsl
sub
push
pop
dec
movsb
rcrl
call
adc
fs
into
inc
popf
mov
ret
dec
push
std
inc
lds
xchg
jmp
addb
dec
lret
cmpsl
pushf
mov
mov
adc
in
lret
mov
push
xchg
or
dec
and
inc
int3
and
imull
pop
les
mov
dec
or
stos
test
dec
sub
in
cmp
mov
fstps
test
dec
or
jne
cltd
xchg
call
aas
inc
fdivrs
xorb
shll
fcom
ror
adc
mov
mov
adcl
push
or
sub
xchg
bound
mov
xlat
jbe
out
mov
pusha
pop
stos
cmp
cmp
iret
data16
or
xchg
xchg
popf
xchg
adc
or
lahf
sub
and
iret
lock
jge
repnz
pop
in
push
sub
fcomp
test
cmp
jns
jmp
mov
dec
sub
or
adc
ljmp
in
inc
inc
mov
test
cmp
test
sbb
mov
imul
mul
aam
xchg
gs
mov
shlb
out
stos
mov
icebp
xchg
dec
add
xor
je
pop
scas
inc
jp
dec
mov
out
add
and
cmova
shrb
nop
inc
push
inc
out
or
mov
cmp
enter
loopne
sbb
push
xchg
pop
bound
mov
shrl
movsl
add
xchg
push
push
jnp
mov
xlat
testl
lock
mov
and
sbb
popa
and
ret
lahf
nop
mov
in
xor
scas
jno
cmp
mov
sub
lahf
mov
cld
fsts
or
push
les
lret
ljmp
iret
dec
pop
adc
arpl
pop
fdivr
sub
push
les
jecxz
pop
xor
jle
aam
and
mov
sub
fbld
divl
xbegin
hlt
cmp
inc
hlt
add
rclb
aam
inc
pop
jecxz
push
pop
pop
mov
out
push
ljmp
jb
sbb
scas
xor
sbb
sub
cwtl
add
leave
test
outsb
cmpsl
jo
and
cwtl
and
pusha
adcb
movsl
out
test
and
mov
nopl
mov
jmp
jae
mov
das
fmull
pop
lcall
popa
test
aam
aas
scas
xor
insb
and
sbb
mov
arpl
inc
jmp
cs
sar
shll
test
mov
aam
adc
cmp
fcomi
pop
pop
outsl
dec
fldl
cmp
icebp
and
cli
add
fstps
pusha
fdivp
ja
ds
xor
testl
dec
std
and
cmpsl
mov
sbb
add
aad
stc
mov
sbb
xor
iret
dec
popa
insb
clc
inc
cmp
pop
imul
jnp
mov
enter
push
aad
cmpsb
nop
scas
in
rclb
arpl
idivl
mov
dec
daa
aam
mov
pop
fdivp
push
push
cld
pop
sbb
pop
xor
test
and
insb
jns
adc
xchg
lock
fsin
outsb
addr16
mov
dec
sbb
cli
out
dec
sbb
or
sub
xlat
adc
dec
cmp
sub
sbb
jmp
add
add
mov
and
les
rorb
mov
mov
adc
mov
iret
cmpsl
pop
mov
aaa
mov
call
idivb
and
jecxz
in
imul
pop
pop
in
inc
ljmp
or
push
inc
lret
sti
and
and
fcmovbe
pop
push
jbe
fidivrl
push
mov
scas
sub
outsb
fnstenv
pop
lds
pusha
adc
push
div
addr16
jo
ja
jne
mov
iret
stc
stc
sahf
pop
dec
dec
mov
mov
dec
pushf
stos
movsl
and
sahf
mov
push
cli
sbb
test
mov
mov
out
sahf
popa
stc
shlb
xchg
jnp
repnz
xor
mov
adc
rorb
insb
sahf
clc
std
fistpll
stos
ret
xor
push
mov
sbb
cli
roll
push
sub
push
in
xor
inc
daa
and
pop
jb
push
ret
xchg
sub
adc
shrl
inc
add
cmp
xchg
or
inc
and
push
sbb
jle
push
mov
cmp
jp
pop
pop
pop
cmp
add
add
pop
fcomi
xor
lret
mov
mov
in
imul
inc
jbe
inc
outsl
dec
pop
les
sahf
mov
lret
add
add
jbe
jne
arpl
mov
fisttps
sar
mov
stc
fisubl
adc
xor
fwait
cmp
cwtl
lahf
inc
pusha
shll
sarb
jp
xor
cmp
mov
lods
or
loop
lret
fwait
push
cmpsb
pusha
std
loop
out
or
imul
add
push
and
push
xor
mov
adc
push
lret
clc
es
in
mov
divb
inc
jnp
ret
push
and
or
fwait
stc
jnp
sbb
dec
ficomps
repnz
and
negb
es
fwait
pop
inc
rcrl
in
or
pop
or
js
jbe
in
fnop
inc
addr16
jae
adc
insl
cmp
add
cmp
adc
das
xchg
dec
cmp
inc
in
push
adc
clc
fdivrl
sub
pusha
das
add
int3
aad
cltd
sub
je
icebp
sub
movsb
sbb
dec
add
add
xchg
fwait
jge
bnd
mov
js
dec
pushf
xchg
sbb
xchg
and
dec
jl
sub
sub
inc
add
gs
fcomi
mov
inc
test
dec
mov
push
add
cmp
add
daa
repz
pop
mov
aas
xchg
lds
inc
das
mulb
inc
imul
pop
pop
cmpsl
shl
test
push
mov
inc
das
lods
aam
or
icebp
bound
int3
stos
mov
pop
cltd
push
stos
inc
ret
in
sub
mov
lods
cli
hlt
push
je
jb
inc
bound
and
lahf
test
in
adc
sub
lret
dec
stc
cmpl
pop
imul
dec
dec
inc
repz
sbb
jns
cmpsb
movsl
cltd
push
adcl
ficoms
test
aam
push
les
sarb
out
sub
aam
scas
xchg
or
push
or
push
iret
loope
mov
inc
fs
pop
inc
xor
inc
lods
mov
ljmp
into
adcl
lock
ds
sub
mov
xor
addb
inc
xor
clc
pop
lea
inc
dec
sub
in
lret
and
push
loop
mov
adc
pop
in
popf
adc
in
sub
sub
mov
das
sbb
es
shr
jno
hlt
pusha
jns
jno
mov
xor
adc
xor
pop
cmp
push
test
rcll
dec
test
rclb
adc
arpl
repnz
jp
mov
jecxz
mov
and
xchg
mov
mov
fisttps
pop
loope
les
push
insl
push
and
add
cs
push
test
scas
decl
popf
mov
push
xor
insb
hlt
repz
outsl
sub
pushf
std
pop
nop
jns
cmp
mov
lock
and
mov
dec
mov
dec
add
addr16
loope
and
fucomi
imul
adc
in
nop
sub
mov
dec
adc
xchg
das
in
int3
imul
mov
mov
jge
scas
scas
popf
outsb
cmp
arpl
xchg
fdivrp
gs
mov
jbe
adc
rorb
faddl
adc
fisubs
lret
insb
jle
ljmp
mov
mov
orb
jp
lea
shrl
mov
add
add
sahf
inc
dec
fisubl
es
insl
ds
dec
dec
pop
hlt
pusha
sub
mov
dec
mov
mov
or
and
dec
adc
xchg
jae
imulb
jne
dec
sarb
jge
dec
dec
lods
cmp
jb
cmp
and
adc
cmc
mov
fdivrl
mov
adc
fst
movsl
notb
aas
idivl
mov
adcl
std
xchg
pop
push
ds
cltd
cwtl
movsl
dec
jb
push
lock
push
pop
out
fidivrs
test
cmp
cmp
call
std
iret
nop
movsl
std
sbb
jg
inc
and
jo
cmpsl
addr16
jnp
xor
popa
mov
mov
sbb
shrb
jp
mov
int
cmp
sti
mov
adc
sarb
cmp
stos
jnp
loope
out
stc
inc
cltd
mov
jo
lods
cmpsb
dec
mov
ror
add
push
scas
loope
cmpsl
inc
and
jno
and
xor
movsl
int
push
lret
loope
popa
pusha
sub
int
mov
ljmp
lea
shl
jecxz
fidivs
mov
xor
fstpl
lahf
pop
ss
es
int3
push
je
dec
mov
mov
pop
ja
push
das
adc
sub
sarl
mov
fidivs
or
sbb
neg
push
fimull
adc
test
popf
mov
es
mov
and
adc
popf
inc
lods
repnz
stos
repnz
test
ljmp
inc
adc
cld
mov
and
jns
and
js
mov
dec
add
dec
and
or
pop
adc
gs
inc
dec
ss
cmc
fnstcw
inc
mov
dec
scas
or
jnp
adc
andb
sub
dec
xchg
xchg
mov
daa
lea
jae
sub
push
lock
jmp
bnd
xor
fwait
adc
pop
cmp
aad
daa
loopne
or
iret
popf
iret
out
repz
dec
xchg
adc
cmp
shll
aam
jnp
or
or
mov
and
xchg
lock
mov
inc
sbb
sarl
decl
mov
lahf
adc
sub
pushf
and
fcompl
enter
divl
dec
sub
js
inc
icebp
mov
into
data16
cmpb
adc
rolb
out
and
jbe
movq
sub
inc
movsb
or
mov
mov
out
out
adc
pop
rcrl
cli
mov
adcl
mov
xor
movsl
sub
jo
mov
aam
cmp
pop
xchg
test
imul
and
data16
ljmp
jle
lock
ret
and
jbe
arpl
mov
inc
imul
inc
jno
mov
ret
test
adc
cmp
inc
push
or
sahf
pop
jecxz
mov
stc
call
fists
fisttpl
mov
sahf
scas
sub
leave
pop
cmpsl
lods
mov
cmpsl
dec
cmpsl
mov
iret
add
mulb
in
mov
inc
dec
addl
dec
mov
in
out
cmpsb
in
js
dec
jns
mov
push
js
xchg
xchg
std
stos
add
inc
add
cmp
pushf
cmpsl
stc
int3
call
test
or
add
jno
mov
jae
gs
jmp
shrl
push
ds
adc
xor
sbb
and
adc
xchg
cmp
and
rorl
sub
repz
andl
add
dec
scas
fisubrs
cs
stc
in
mov
dec
inc
add
or
jae
jle
outsb
push
xor
sahf
xchg
and
cli
mov
xor
sbb
add
nop
adc
pop
cmp
int
push
das
fnstcw
and
mov
pop
mov
imul
sub
out
inc
mov
xchg
xlat
daa
int3
iret
or
push
xlat
jmp
push
cld
dec
dec
out
pop
mov
mov
jne
clc
sbb
jg
lret
imul
into
and
sar
dec
xchg
insb
add
lahf
cmp
cmp
in
inc
sub
stos
push
cmp
frstor
inc
push
push
inc
rorb
fwait
mov
or
adc
sub
cld
or
iret
shll
inc
enter
scas
insl
cmp
xchg
cmp
aad
adcb
js
adc
mov
pop
inc
stc
rorl
adc
cmpsl
mov
lds
aaa
addr16
lahf
mov
and
cmp
and
ret
std
sub
inc
xor
pop
shlb
sahf
jge
sbb
mov
sbb
popa
xor
jb
mov
clc
sub
frstor
mov
sub
dec
sub
and
js
cld
ja
push
xor
out
adc
mov
lahf
call
bound
aaa
rorl
outsb
ret
frstor
or
mov
xor
sub
jo
jae
cmpsl
adc
inc
xchg
pop
dec
lods
mov
sarl
repz
push
enter
mov
cld
add
in
fmuls
out
mov
pop
and
sti
shll
aas
push
mov
sbb
and
aam
mov
or
jmp
pop
daa
mov
cmpsb
inc
popf
push
mov
data16
ljmp
fxch
cmpsb
cwtl
jnp
hlt
mov
loop
cmp
or
mov
sub
cli
movsl
mov
add
dec
lahf
adc
inc
idiv
jns
xor
mov
pop
inc
dec
or
aad
pop
int3
scas
ret
xchg
mov
or
lcall
pop
ljmp
ret
loop
sbb
adc
imul
repz
or
mov
ret
ja
repz
adc
inc
pushf
arpl
or
push
lret
xchg
insl
arpl
jge
pop
lret
jae
mov
js
add
addr16
dec
test
inc
push
cmpl
arpl
movsl
sub
out
pushf
inc
fisubl
ret
dec
stc
mov
sbbl
call
xchg
gs
push
add
jnp
sub
daa
push
push
push
pop
push
mov
lods
mov
pushf
mov
popa
sub
pop
push
divb
cmpsb
lods
cmp
scas
push
mov
in
les
or
fstpt
aam
movsl
lret
jns
push
jne
inc
adc
and
mov
lock
cltd
sti
stos
dec
or
cmp
sub
es
and
push
cltd
pop
sbb
jo
sar
test
imul
or
mov
sub
jg
dec
test
cmp
subb
popa
xchg
adc
pop
sbb
fsubrs
ret
adc
mov
pop
mov
je
sbb
loop
into
vpcomub
dec
out
cmp
out
mov
imul
sar
imul
cmpsl
ljmp
stos
sub
xchg
aad
repz
test
imul
cmp
sub
jno
pop
es
and
jecxz
inc
inc
lods
xor
cmc
dec
test
and
scas
test
push
test
cs
iret
add
jmp
ds
mov
or
pop
or
es
sub
xchg
scas
adc
and
xchg
lods
pusha
and
lret
add
mov
mov
or
xor
loope
xor
sbb
lret
cmpsl
fildll
xor
mov
sti
xor
pop
dec
inc
je
das
or
aas
cmp
cmp
xchg
outsl
or
enter
and
test
xchg
mov
xchg
mov
mov
sti
pop
mov
sub
aad
fcos
cli
pop
iret
subl
push
ret
sbb
xor
test
push
loopne
mov
xor
lret
cs
ret
add
push
sbb
ss
iret
xor
dec
xchg
push
inc
movsb
out
xchg
mov
insb
nop
inc
leave
test
adc
jno
cs
clc
or
pop
mov
cmp
mov
pop
mov
out
lds
mov
mov
stc
arpl
jmp
leave
push
hlt
sbbl
xchg
jl
mov
xchg
and
xor
dec
leave
xor
sarb
dec
mov
fcmovne
pop
and
cltd
jno
stos
push
dec
dec
mov
mov
xor
push
mov
lods
dec
inc
sbb
or
xlat
aad
fwait
aaa
cmp
xchg
popf
rolb
xor
ds
inc
dec
mov
and
push
and
addr16
sti
test
enter
pop
push
es
sbb
subb
sub
xchg
popa
fadds
mov
fincstp
mov
push
push
inc
jnp
and
addr16
ret
mov
dec
leave
repnz
lds
ficomps
jge
lock
push
stos
outsl
lods
add
cmp
pop
push
js
test
lea
mov
xor
jb
or
js,pt
or
xchg
out
loopne
pop
push
jl
jne
or
or
inc
jl
arpl
push
push
xchg
icebp
sub
or
out
pop
pop
cs
and
pop
mov
lods
std
popf
lret
into
stc
cltd
push
into
mov
scas
scas
js
pusha
jge
dec
scas
mov
add
imull
jno
push
std
jp
mov
jo
testb
clc
sbb
sub
es
scas
icebp
mov
cltd
cmp
iret
sub
xchg
loope
mov
cwtl
xor
aaa
cmpb
fistpll
cmp
fwait
shrl
cltd
in
inc
iret
pop
aas
imul
pop
xchg
lahf
and
insl
jge
or
mov
ljmp
sbb
sbb
or
adc
pushf
daa
incl
cmc
adc
jmp
test
inc
aaa
push
fistpll
mov
outsl
mov
fidivl
adc
or
and
loopne
ret
cltd
pushf
lds
leave
xor
dec
sbb
xchg
out
ja
jl
push
xchg
out
dec
icebp
and
adc
mov
lahf
addr16
adc
mov
dec
jge
pushf
jae
push
add
inc
fs
bound
insb
or
imul
dec
or
outsl
lret
aam
cmp
fstp
inc
mov
in
jnp
dec
mov
jmp
js
lods
adc
xlat
or
ljmp
push
adc
stos
data16
leave
addr16
repz
out
xchg
rcrl
negb
add
pop
js
sub
lahf
fcomi
dec
jp
subl
inc
into
adc
pop
or
cli
and
pushf
cmc
in
ljmp
jne
imul
dec
stos
cld
xchg
int
fisttpl
nop
jno
and
ret
add
into
in
xchg
mov
or
dec
sub
mov
data16
movsl
rolb
daa
js
ret
inc
jmp
lds
and
jge
cmp
iret
sbb
cmp
xor
ret
fucomi
xchg
fldt
loop
adc
inc
call
es
xchg
shrb
push
rclb
fstps
sahf
icebp
lcall
test
bound
cwtl
lock
nop
sti
push
jle
loop
and
mov
cltd
sub
fsubl
cmp
jg
out
test
adc
aad
scas
jno
cld
mov
jp
fldl
jnp
gs
rcl
inc
daa
loope
xchg
cmpl
mov
adc
pop
push
inc
inc
sbb
sub
and
mov
push
jecxz
jbe
pop
mov
lds
mov
and
sbb
scas
cmp
into
data16
addr16
xchg
dec
js
pop
sub
rclb
or
add
xor
faddp
insb
lock
cmp
out
scas
cs
gs
xchg
pop
pop
pushf
inc
insl
pushf
pusha
jl
xchg
mov
fld1
testl
mov
push
aam
stc
pop
and
lods
or
jp
shrb
movsb
cmp
push
push
loop
jg
and
add
add
movsl
sbb
rcr
adc
sub
out
iret
mov
xchg
pop
mov
popa
cmpsl
aas
jge
gs
inc
xchg
jmp
mov
mov
mov
and
mov
mov
dec
cmp
insl
imul
scas
aam
aam
push
flds
mov
lods
adc
fwait
push
sub
jmp
and
ja
add
leave
and
pushl
shlb
pop
lods
stc
or
lods
insl
mov
lods
rorl
xor
mov
add
div
mov
adc
xlat
rcll
cmp
es
dec
adc
add
mov
int3
repz
aaa
inc
aad
out
adc
aam
loope
lods
pop
xchg
xor
nop
cmp
filds
jle
int3
lods
lock
cld
sub
mov
xchg
stc
rcr
sbb
sti
fdivp
xchg
mov
arpl
jne
adc
pop
add
and
dec
adc
xlat
rcrl
jbe
xor
inc
test
cmp
push
mov
ds
and
mov
in
pop
pop
fildl
arpl
cmpsl
dec
repz
leave
addr16
or
gs
fistpl
push
nop
push
in
call
ljmp
call
jle
lret
jmp
cmp
out
mov
mov
test
pop
mov
push
push
sbb
cmp
out
movsb
out
or
pop
lret
and
xchg
insb
mov
out
hlt
sbb
xor
shrl
pop
fwait
xchg
xchg
cmpsl
lcall
nop
cmp
mov
add
push
lahf
or
cmp
lcall
imul
xchg
out
mov
push
adc
or
dec
jl
mov
in
daa
and
out
and
lahf
xor
sbb
or
mov
mov
add
xor
sub
sub
pop
cli
inc
aad
hlt
in
in
sub
in
dec
lahf
mov
loope
mov
add
loope
mov
jg
push
mov
test
dec
and
dec
and
imul
cmpsl
jnp
sub
push
xchg
mov
sahf
movsl
dec
int
mulb
aam
daa
std
inc
mov
cmc
jg
mov
dec
pop
cmpb
jb
push
mov
add
inc
enter
xor
sbb
mov
std
in
mov
dec
inc
mov
negl
xchg
and
xchg
aas
fadd
add
aaa
xlat
pusha
mov
stos
push
cmc
xchg
decb
xor
mov
adcb
popf
mov
dec
sub
nop
ljmp
sub
and
adc
repz
inc
dec
pop
dec
adc
out
lret
out
insl
push
fdivrl
cmc
ds
loope
js
filds
mov
cmp
and
sbb
movsl
jb
mov
push
int3
das
push
js
adc
mov
je
flds
pop
pop
mov
dec
mov
js
push
sahf
mov
lret
aaa
sbb
nop
popa
pop
out
jnp
adc
mov
mov
mov
mov
ljmp
ja
push
mov
shrb
in
mov
pop
push
les
out
insb
out
mov
lods
push
scas
fmuls
fwait
int
push
stos
push
test
xchg
pop
imul
iret
jae
and
cmp
lret
fistpll
negb
mov
daa
sub
mov
mov
mov
test
imul
mov
das
pop
mov
sbb
int
xor
ret
sbb
xor
pop
fiaddl
in
mov
aad
jl
out
or
jnp
fisttpll
dec
repnz
loope
lods
adc
jmp
cmpsb
cmp
outsb
jae
xor
pop
divb
add
jecxz
fstpt
or
lods
cmp
ret
test
mov
cmpsl
outsl
sbb
or
sbb
lret
in
lock
iret
stos
aas
dec
ret
stos
icebp
xchg
cmp
test
and
inc
lcall
mov
or
sti
jl
mov
subl
pop
mov
addr16
push
xchg
sub
addr16
dec
inc
mov
inc
les
mov
jns
or
bound
push
notb
lods
pushf
or
adc
jo
cltd
and
add
ret
xor
test
inc
add
aas
sub
xchg
inc
fisttpl
pop
cmp
ret
adc
inc
cmp
mov
sbbl
xchg
jns
lcall
call
mov
xchg
jns
fld
adc
daa
push
mov
cmc
xor
dec
sbb
fcoml
in
push
ror
loope
jle
movsb
into
mov
iret
cmpsb
ja
pop
push
ljmp
test
shufps
test
jl
gs
out
inc
int
in
loop
dec
ja
sbb
adc
std
fists
aaa
xchg
ja
push
orl
mov
sarb
popa
repnz
icebp
jae
jl
test
std
int
and
mov
pushf
fsubp
inc
push
clc
add
mov
arpl
in
push
je
push
icebp
lods
daa
xchg
jl
jmp
push
add
add
outsl
outsl
int3
cmp
insb
fsubl
xor
mov
sub
iret
stos
xchg
pop
out
cmp
ja
ret
and
lcall
xor
stos
and
mov
imul
iret
mov
sbb
testb
sbb
daa
xor
fstps
or
adc
dec
mov
sub
ds
and
dec
pushf
push
or
into
xor
mov
mov
or
pushf
xor
pop
xor
push
movsl
loop
mov
mov
sub
dec
push
cmp
ljmp
xchg
mov
roll
test
int3
bound
in
cli
ret
andl
inc
xchg
cmc
xor
sub
gs
xchg
in
out
sar
mov
repnz
sbb
pop
jmp
pusha
push
xor
mov
cs
and
jp
lods
inc
mov
and
sub
add
out
xchg
or
dec
and
cmp
lahf
xor
pop
mov
adc
sbb
stos
popl
mov
div
xchg
and
lahf
or
shl
insb
sbb
les
shll
in
sti
lcall
add
push
loopne
js,pn
insb
imulb
xor
adc
in
addb
test
cli
add
xchg
mov
das
fcmovnbe
pop
xchg
cltd
out
sahf
test
adc
sub
hlt
nop
mov
out
and
in
mov
pop
push
cltd
mov
aas
sbb
pop
lock
repz
add
stc
test
decl
or
xor
decb
insl
fiadds
jbe
jno
jmp
xchg
adc
arpl
inc
iret
push
cmp
out
hlt
shl
sub
cmp
or
dec
aad
shrb
pop
mov
sahf
dec
lahf
xor
jnp
add
ret
xchg
rcr
jp
push
pop
int3
push
data16
xchg
sbb
push
cwtl
lods
pop
aaa
cmp
sti
cmp
in
inc
int3
std
int3
or
mov
test
divb
push
xchg
push
jg
sti
cmp
cli
cmp
mov
add
sub
pusha
or
xor
test
rorl
adc
jl
jb
loop
mov
or
enter
addr16
sbb
es
idivl
xor
jle
jbe
jns
xor
sub
in
or
call
popa
push
sbb
or
jo
or
xchg
outsl
xor
xor
fcompl
inc
pop
test
and
push
stc
push
inc
add
adc
push
mov
sbb
or
stos
aad
cmp
rcr
cmpsl
into
and
sbb
cwtl
jp
adc
insb
cmp
cmp
ss
jl
sbb
hlt
test
sub
dec
push
test
out
out
add
sahf
or
add
dec
dec
dec
dec
and
lods
andb
les
std
mov
int
fmull
ret
jl
pop
repz
loopne
jne
add
pop
repz
pusha
idivl
pop
and
mov
push
mov
jge
cmp
out
pop
out
push
sahf
sysexit
repnz
mov
or
outsb
mov
push
inc
out
enter
ds
les
in
sub
in
movsl
into
sbb
dec
jae
mov
jae
rcrb
sbb
in
xlat
add
imul
test
mov
fdivrs
std
cmp
divl
mov
inc
and
ljmp
adc
in
clc
loop
ffreep
nop
xchg
cmp
fisttpl
into
pop
out
jmp
mov
ja
les
cmpsl
dec
mov
aam
cltd
mov
mov
cmp
xchg
xor
cmp
in
push
ficomps
aas
loopne
xchg
cld
in
push
fwait
sbb
cmc
add
push
stos
lcall
pop
jne
pop
fcmovnbe
adc
jp
and
in
out
andl
lods
cwtl
cltd
pop
mov
loope
push
or
aas
clc
mov
push
es
ljmp
and
inc
cmpsl
pop
xor
lahf
sub
test
ret
push
loopne
adc
add
leave
push
xchg
mov
sub
pop
mov
inc
repz
je
lods
xlat
mov
stos
rcll
je
outsl
incl
rcll
adc
jae
ret
dec
dec
pop
mov
sbb
icebp
out
mov
pop
and
push
cmp
inc
adc
xor
push
pop
lods
scas
std
fprem
fstps
mov
sti
bound
and
jge
dec
enter
jbe
dec
lcall
cmp
pop
jne
jp
ja
mov
mov
push
fxtract
and
xchg
das
out
sbb
push
mov
push
gs
mov
xor
xchg
popf
mov
add
jmp
and
in
iret
mov
repz
mov
dec
jmp
mov
lret
inc
adc
push
add
mov
gs
pop
xchg
daa
mov
lahf
in
or
mov
insb
out
jae
mov
bound
mov
xor
xchg
inc
push
jl
shlb
bound
mov
pushf
insl
xor
cmp
bound
ljmp
fimuls
cmp
popf
mov
mov
push
xorl
cmp
out
cmp
sarb
pop
cmc
adc
rcll
scas
jecxz
adc
or
repz
jl
add
mov
dec
or
add
rorl
les
jnp
or
aaa
push
idivb
sub
jle
inc
out
xor
data16
inc
out
ja
popa
aam
sub
cli
insb
xlat
and
shl
inc
scas
sahf
adc
stos
fisubrl
lock
imul
icebp
and
ss
and
popf
push
and
ds
movb
cmc
or
jbe
sbb
mov
ljmp
bound
push
xchg
and
xor
sbb
pushf
push
loope
imul
arpl
mov
mov
ret
out
out
clc
cmc
ss
outsb
sub
repnz
test
insl
fcmove
mov
or
push
inc
and
add
jp
mov
out
movsl
shll
push
sbb
mov
xor
daa
dec
mov
jp
push
sbb
fwait
xchg
jns
push
int
das
pop
mov
das
and
dec
pop
mov
mov
stos
mov
andl
sbb
movl
test
cmpsb
ret
xchg
or
adc
jae
mov
cmpsb
pop
or
xchg
repnz
pminub
cmpsb
mov
rorb
insl
les
movsl
loopne
mov
fwait
push
adc
bound
pop
in
cmp
in
lods
rcl
mov
pop
std
cmp
xchg
rol
mov
inc
imul
jmp
sbb
sti
fs
xor
stc
mov
inc
push
mov
lock
or
ljmp
jne
xchg
adcl
mov
add
mov
mov
fnstsw
sbb
and
jno
les
push
jno
xchg
push
or
sysexit
icebp
adc
in
add
xlat
ret
inc
pop
and
cltd
or
stc
dec
push
sbb
push
pushf
inc
xchg
loope
fsubr
out
clc
int
add
dec
ja
rorb
inc
fldt
lods
push
add
lret
push
outsl
clc
cmp
mov
and
pop
cli
mov
inc
imul
pop
xchg
sbbl
cmp
sti
push
xlat
adc
insl
push
cmp
mov
stc
popf
aas
jg
ret
add
sbb
test
add
add
addr16
clc
in
add
sub
pop
addr16
test
stc
pop
ret
test
mov
lods
in
bound
inc
pop
mull
inc
adc
cmp
outsl
outsb
push
sub
insb
fcom
out
xor
add
mov
out
js
push
or
cwtl
mov
clc
pop
testl
mov
xor
or
xchg
sbb
stc
jno
push
call
scas
out
sub
jbe
adc
test
xchg
xchg
adcl
mov
xor
add
icebp
mov
pop
in
das
insb
push
lods
out
fistps
mov
int
inc
mov
inc
add
test
xor
xlat
inc
insl
fs
int3
stos
adc
movsl
lahf
adc
inc
insb
dec
loopne
sub
gs
dec
jno
add
mov
or
aaa
pushf
shlb
iret
mov
fiadds
call
les
rcl
cmc
in
inc
add
aaa
pop
mov
call
sub
mov
xchg
daa
das
in
rorb
or
sbb
call
cli
lea
and
data16
sub
jg
popa
lds
push
mov
cmp
frstor
scas
inc
sti
mov
sub
repz
cmpsl
imul
cli
int
sbbl
out
ret
push
mov
test
lds
jne
loope
xchg
es
push
xchg
xorl
fs
adc
in
shll
fiadds
je
out
cmp
adc
out
std
add
sbb
or
mov
add
dec
inc
repnz
mov
jae
sub
lds
mov
lea
imul
jle
call
jno
dec
or
bnd
mov
pop
xor
mov
stos
and
inc
dec
movsb
aam
xor
fmul
cmp
mov
sub
outsb
mov
mov
xor
stos
push
insb
jl
lods
mov
mov
lea
mov
ds
sbb
bound
ljmp
test
adc
jne
int
lock
enter
push
adc
in
lahf
imul
adc
inc
icebp
std
rolb
insl
dec
mov
cld
pop
icebp
or
mov
outsl
jmp
iret
ja
xchg
leave
push
fmul
xchg
pop
hlt
adc
scas
ljmp
lret
sub
mov
adc
mov
addb
cmp
adc
into
in
subl
xor
lds
add
fisttpl
jo
adc
aas
xor
rolb
cmpsl
insl
cld
mov
test
movsb
mov
insl
mov
or
push
das
and
xchg
dec
xchg
lods
adc
xchg
pop
jmp
add
jmp
sbb
mov
shr
enter
into
in
mov
push
xor
push
dec
inc
push
add
mov
jne
push
inc
and
push
mov
mov
or
daa
or
pop
or
inc
xchg
push
ss
flds
xchg
jnp
cmp
and
test
clc
jl
fsubr
mov
call
aam
and
xor
shl
mov
jg
mov
add
fcom
cmp
aas
pop
jg
ds
imul
and
jne
xchg
or
inc
cmp
shll
inc
mov
add
ja
cmc
out
stos
mov
fadd
pop
push
add
test
nop
cmp
ds
lret
out
aas
cmp
pushf
xchg
add
inc
test
sub
inc
es
lret
fnstcw
cmp
add
inc
push
adc
mov
cmpsl
adc
pop
insb
jno
xchg
xchg
mov
jmp
ret
mov
fisttpl
pop
out
imul
insb
inc
and
push
shll
pop
mov
adc
jnp
jae
pushf
sbb
es
mov
xchg
in
fadd
dec
in
enter
and
push
pop
mov
xchg
dec
xchg
push
sbb
loopne
aad
pop
iret
inc
sub
jno
cli
cmp
adc
insl
rclb
outsb
and
xor
add
fcmovu
fstps
cltd
cmpsl
std
or
lcall
out
pop
enter
loop
pop
cmp
loopne
push
fldenv
cmpsb
jecxz
mov
push
add
filds
sub
jns
dec
cmc
movsl
test
cmp
rcrb
push
in
out
xor
lahf
das
ja
jns
enter
or
sbb
jp
push
adc
cwtl
in
fists
adc
cwtl
mov
ret
adc
and
mov
scas
xor
mov
push
jbe
lods
mulb
sbbb
test
dec
dec
outsl
lods
pusha
shrl
sub
inc
or
lret
popa
gs
xchg
js
enter
or
push
loopne
or
dec
out
shl
or
sbb
mov
pop
sbb
cmp
mov
push
cwtl
fldt
jne
add
cmc
push
mov
push
out
je
fst
mov
sub
sbb
mov
jg
push
xor
shlb
cmp
or
xchg
pop
in
push
sub
jp
mov
stos
xchg
fwait
sbb
popa
mov
pop
sub
pop
arpl
add
sarl
adc
jo
lret
cmp
stc
rclb
add
jp
outsl
mov
movsb
fwait
sub
push
mov
dec
xchg
or
push
pusha
mov
stos
out
xchg
jmp
mov
fsubs
sbb
sub
mov
inc
insl
lret
fcomi
negl
sub
sub
adcl
and
das
pop
dec
cli
cld
xchg
aas
insb
push
test
stos
mov
sub
pop
mov
popa
sub
inc
cmp
flds
lds
aaa
jbe
push
rcrl
or
push
shll
divl
push
push
mov
jns
movsl
adc
aaa
add
mov
es
inc
add
mov
xchg
mov
int3
js
loopne
or
and
scas
xchg
cmp
xor
dec
in
mov
and
jno
inc
out
cltd
or
push
leave
loopne
xchg
mov
cmp
pop
cld
cmp
sbb
xchg
xchg
fisubs
pop
sbb
jns
jbe
aam
in
ficompl
aad
arpl
outsl
in
and
repz
jl
nop
lods
leave
dec
mov
je
mov
add
mov
and
lret
aad
je
cld
dec
fbld
loop
lahf
sbb
lcall
jg
pop
mov
and
lret
or
pushf
mov
adc
mov
xchg
fmul
les
cmp
mov
fstp
xchg
mov
ss
xchg
les
push
lds
push
scas
leave
jmp
mov
scas
into
call
test
enter
iret
inc
sti
or
fs
push
roll
mov
and
lods
jno
inc
pop
mov
repz
call
inc
ffreep
stc
repnz
or
jmp
lahf
frstor
mov
pop
sbb
pop
popf
in
mov
loope
out
call
test
dec
int
dec
mov
sub
jbe
test
arpl
leave
xor
sti
leave
lds
xchg
es
or
mov
cltd
outsb
push
jmp
jle
jmp
or
sbb
rcrb
dec
mov
dec
call
icebp
or
pop
daa
cmp
out
lea
stos
out
pop
out
mov
outsb
mov
pop
mov
jns
jp
or
aad
xchg
dec
ss
xorl
orb
sbb
xchg
lret
cmp
sub
jae
dec
push
in
mov
jecxz
test
add
nop
lds
fwait
lret
dec
shlb
int
fwait
push
adc
ja
pop
ret
ficoml
mov
lret
cmp
insb
shll
call
adc
sub
xor
cmp
sbb
insb
jb
mov
push
int
aas
lret
adc
mov
sub
std
xchg
mov
or
sti
shlb
test
jp
sub
mov
shl
mov
call
adcl
shrb
mov
lea
adc
call
xchg
jae,pt
jbe
and
mov
decl
mov
sub
dec
test
adc
adc
inc
jecxz
xchg
ret
fwait
or
lret
mov
stc
xchg
ret
cmp
pop
dec
addr16
mov
or
jle
push
andl
ds
jbe
adc
int
bound
cld
mov
into
sub
xor
push
xor
push
inc
cmp
jle
and
jno
sbb
jmp
pop
ret
push
mov
xor
xlat
pusha
scas
pop
outsl
sub
into
xchg
mov
mov
leave
popa
std
inc
ret
movsb
mov
push
mov
loopne
cmp
gs
insl
xor
test
inc
add
cli
add
mov
xor
inc
fisttpll
jg
mov
xchg
bound
idivl
cmp
call
out
xchg
daa
adc
mov
or
mov
int
loop
mov
sbbb
or
inc
pop
in
xor
pop
sub
push
or
loopne
dec
jmp
push
or
das
xchg
add
pop
mov
cli
adc
dec
std
test
sbb
clc
rcrl
lcall
lahf
clc
outsl
mov
loopne
mov
push
push
mov
cmp
jp
push
inc
repnz
fbld
add
loopne
jge
jmp
add
dec
les
push
add
mov
inc
add
enter
das
or
jns
lret
pop
fs
sbb
sbb
jno
dec
rclb
adc
cmp
test
mov
adc
mov
int
lahf
les
pop
jecxz
dec
mov
sub
xchg
pop
sbb
popa
or
in
xchg
cmovnp
in
scas
fwait
sbb
jo
daa
xor
xchg
fs
adc
push
push
shlb
das
dec
out
mov
test
js
jmp
cltd
cmpsl
popf
cmp
lods
mov
cmp
lret
inc
xor
pop
inc
add
sbb
mov
movsb
mov
scas
mov
fistpll
insl
mov
mov
xchg
adc
push
jp
cvttps2pi
out
lret
add
lds
enter
out
or
inc
fidivrs
mulb
loope
mov
cmp
cmpsb
dec
cmp
jne
push
sbb
push
dec
rcll
test
dec
inc
or
int
add
inc
sub
pop
lods
sbb
int3
fbstp
out
outsl
push
xor
inc
mov
scas
pop
mov
movsbl
pop
rorl
add
aam
lret
pop
mov
jp
aaa
idivb
call
sbb
into
cli
jae
daa
std
ret
mov
push
pop
stos
adc
xor
repnz
int
test
push
mov
cmp
jg
push
scas
pop
dec
repnz
add
cmpsb
scas
out
cmp
negb
add
xor
sbb
xchg
mov
and
gs
push
lea
addl
into
mov
iret
ja
in
or
mov
fdivl
xlat
push
js
inc
fdiv
xor
test
and
and
add
test
sbb
jnp
push
js
outsb
js
pop
add
cmp
add
cmp
xchg
in
push
in
movsl
add
lret
es
xor
fs
dec
popf
shr
inc
mov
xlat
mov
ret
loopne
add
and
rorb
mov
testb
xlat
cli
sub
xor
push
arpl
xor
add
scas
out
aad
out
mov
rcr
cli
outsl
arpl
mov
sub
outsl
ljmp
cmc
icebp
jb
xor
sub
inc
fidivs
dec
in
sub
push
push
pop
pop
repnz
movzbl
ret
cmpsb
ret
addl
mov
jae
push
pushf
divl
inc
sbb
out
into
jecxz
gs
pop
int
sbb
outsb
or
jmp
mov
mov
arpl
jb
in
es
mov
aam
ret
out
or
adc
gs
cmpl
hlt
mov
test
in
pop
push
sub
filds
xor
xchg
push
sbb
mov
inc
mov
push
and
cld
je
mov
arpl
inc
cwtl
push
mov
jg
repnz
sbb
mov
mov
or
xchg
or
jle
xor
sub
mov
xchg
mov
sub
xor
mov
mov
dec
loopew
fadd
js
rorb
xlat
mov
xlat
sbb
mov
shlb
jle
push
add
outsl
and
clc
pop
aad
xchg
xchg
cmp
xchg
ljmp
mov
insl
fimuls
push
fldl
jl
fidivl
fucomip
leave
cmp
popa
mov
int
decl
pop
push
dec
sub
mov
cmp
xor
rol
sbb
push
loope
fbstp
test
pop
adc
inc
jb
lea
icebp
pop
mov
iret
ficomps
sbb
jo
sbb
mov
aas
inc
add
lds
xor
cwtl
mov
cmp
lock
dec
sub
fnsetpm(287
jb
rcrl
outsl
dec
and
pushf
push
jae
sbb
arpl
mov
test
jmp
push
push
imul
inc
xchg
lds
push
adc
test
repnz
xchg
cmpl
cmpsb
mov
div
dec
xchg
mov
cld
jmp
in
pop
pop
dec
sti
lcall
pop
add
mov
int
rclb
add
mov
xchg
and
into
es
cmp
jle
cmp
add
ret
pusha
xorb
and
and
lcall
jl
es
sub
mov
push
dec
enter
push
jl
lods
pop
ret
push
lock
int
xor
lods
lahf
enter
fs
sbb
xchg
movsb
mov
loop
mov
push
mov
leave
push
adc
negl
adc
loop
and
mov
dec
pop
adc
std
add
or
out
xlat
sub
mov
push
mov
add
ds
adc
cmp
mov
bound
add
es
sar
and
enter
cmp
idiv
jge
and
pop
in
pop
dec
lahf
add
xchg
jne
xchg
push
jge,pt
sarb
cmp
dec
mov
lods
addr16
ret
rorb
fildl
add
loopne
inc
insb
mov
mov
mov
xlat
in
xor
scas
cmp
outsl
sub
in
jg
add
sarb
loope
ds
jle
mov
dec
mov
int3
jb
push
push
push
jbe
add
mov
push
sar
sbb
fnsave
ret
loope
call
xor
pop
addb
adc
scas
lock
cmpsl
bound
dec
arpl
filds
push
mov
pop
out
push
hlt
pop
cs
loope
cmpb
test
add
xchg
pop
testb
pop
bound
jecxz
adc
sub
fdivs
sti
sub
jno
js
mov
loope
je
and
cwtl
or
xchg
jns
push
movsl
mov
mov
push
mov
outsb
pop
xor
jae
push
sbb
push
icebp
lret
dec
or
and
dec
scas
test
adc
xchg
pop
add
outsb
inc
adc
cmpsl
add
es
nop
in
lret
cmp
les
xchg
insl
stc
aam
jl
pusha
mov
sub
icebp
inc
cli
ret
pop
je
jl
cmp
adcb
mov
rol
in
adc
mov
jns
pop
push
xlat
lds
mov
mov
mov
call
jp
pop
jo
dec
insl
scas
lcall
fcoms
or
in
outsl
lock
rcrl
imul
jp
cmpsb
xor
or
inc
out
js
xor
in
jmp
sub
and
cmp
mov
lds
repz
sub
aam
cmp
inc
mov
mov
mov
sub
dec
dec
fisubl
xchg
jl
jns
test
add
loopne
and
faddp
cmp
jge
adc
test
fstpt
scas
pop
push
je
iret
adc
adc
scas
pop
and
push
scas
sub
jb
fidivrs
sahf
add
pop
fucomp
cmp
mov
addr16
mov
add
add
shrl
rorb
and
xchg
push
sti
test
and
loopne
mov
and
cmp
fs
sub
sbb
sarl
scas
adc
addl
mov
pop
mov
addl
aad
cmp
mov
cmp
sub
push
test
pop
mov
andl
je
cmp
cmp
mov
push
testl
out
fdivp
lods
cmp
pop
jmp
out
in
or
dec
gs
pop
xchg
xor
xor
sub
repnz
scas
xchg
add
lods
sbb
repnz
pop
jge
dec
mov
decl
or
adc
out
cs
nop
fnsave
lods
es
cmp
fidivs
cltd
inc
or
mov
int3
test
pop
aaa
fdivrs
repz
sub
ljmp
jns
mov
and
xchg
mov
icebp
jp
mov
or
dec
loope
loopne
xchg
insb
repz
inc
jne
sbb
push
sub
test
fimuls
dec
push
pop
jo
jne
aaa
std
jns
inc
out
mov
rcrb
inc
ror
mov
shrb
cmp
add
scas
xchg
jge
call
orl
loope
stos
sbb
sbb
xchg
je,pt
sub
lods
mov
movsl
lods
cmp
mov
decb
lock
cwtl
hlt
inc
and
imul
ficompl
fidivrl
jb
cld
add
stos
adc
sbb
sbb
add
ret
lock
push
jecxz
mov
pop
ja
repz
push
mov
mov
lret
xor
nop
in
ret
fnstenv
gs
fcomp
shrb
xor
shlb
imul
je
lahf
out
push
in
into
pop
clc
sbb
pop
out
push
mov
test
and
jo
mov
negb
outsb
pop
jns
roll
cmp
inc
jg
mov
mov
mov
xchg
repnz
jo
shl
mov
ss
inc
xchg
mov
testb
mov
pop
mov
popf
push
mov
daa
cmp
test
inc
xchg
fsts
inc
fstpl
fildl
mov
xor
jno
sbb
outsb
nop
jg
sbb
add
into
push
bound
cs
dec
push
xchg
pop
jne
insl
lock
xor
call
roll
fbld
mov
inc
add
pop
cmpsb
dec
add
add
repz
dec
test
fisubl
pop
xlat
daa
cmpsb
inc
decl
mov
lds
sub
les
or
cmpsb
push
in
imul
cwtl
xchg
and
adc
movsb
cmpsb
cli
xor
inc
push
lods
arpl
mov
into
mov
test
mov
out
push
xchg
xchg
jge
jmp
jo
jecxz
pop
mov
and
xor
inc
insl
cmovnp
push
orb
repnz
jge
sbb
cmp
mov
xor
mov
xor
pop
cmp
push
xor
or
xchg
aaa
xchg
lret
adc
nop
rorb
shlb
cs
js
jecxz
not
jmp
push
shrl
popa
adc
dec
int
or
out
jns
mov
fdivl
mov
outsl
aad
xchg
scas
out
ss
into
or
pusha
int3
sub
and
and
or
lret
lock
inc
cmp
or
sbb
jge
cmpsl
dec
out
push
sahf
jmp
hlt
js
sub
jecxz
pop
mov
insl
xor
dec
jo
in
insl
cld
pusha
clc
dec
bound
scas
adc
popf
inc
popf
mov
add
scas
movsb
jg
adc
mov
mov
pop
movsl
xor
divb
dec
cs
cmp
in
dec
or
sub
pop
or
dec
inc
stc
call
pushf
xchg
add
or
add
sbb
fdivr
mov
aad
cmp
push
addr16
movsl
mov
mov
roll
add
mov
int3
imul
xor
jle
loope
and
mov
jno
les
cmc
cmp
xor
mov
scas
mov
jbe
out
pop
xchg
in
flds
stc
pop
mov
adc
jno
push
mov
into
inc
aad
iret
or
ret
push
ret
loop
pusha
jecxz
or
and
jg
inc
or
dec
mov
push
stos
mov
dec
sarl
jo
xchg
inc
xchg
jg
or
nop
jno
pop
xchg
push
and
mov
inc
sbb
pop
mov
stos
fs
ret
cmc
outsb
or
push
adc
jb
mov
arpl
adc
out
cmpsb
movsb
aad
aaa
lcall
jbe
in
jmp
push
xor
cwtl
jle
adc
cmp
jbe
jmp
nop
mov
inc
ljmp
sub
inc
loop
sahf
fistpll
mov
xlat
inc
xchg
dec
fidivrs
cmpsl
psubq
dec
add
in
xchg
out
aas
add
xor
add
inc
rep
add
and
fs
repnz
sub
ficoml
fdivs
push
pop
xchg
ja
aad
addr16
add
test
or
shlb
xchg
sub
es
lods
insl
mov
pushf
mov
ja
aaa
fs
push
jle
add
mov
and
test
jbe
loop
in
aaa
movsb
int3
into
mov
dec
adc
test
les
lret
into
notl
pop
insl
sbb
lret
adc
jbe
out
sarl
inc
in
fdivrs
mov
pop
and
ffree
fmuls
inc
aaa
data16
clc
jecxz
sub
or
aad
jle
mulb
sub
arpl
lods
or
outsl
inc
icebp
pop
jp
fs
repnz
add
push
mov
pop
or
jno
jl
lcall
bound
and
add
sbb
pushf
sbb
leave
ljmp
dec
loopne
popf
or
test
std
push
out
xchg
push
sbb
inc
popa
imul
addr16
lret
std
popa
push
mov
cltd
ljmp
daa
mov
jp
notb
insl
mov
insl
lods
xor
mov
add
inc
mov
xor
push
popa
push
loope
loop
fisubrs
cmpsb
push
pop
lret
std
lcall
mov
cmp
xor
mov
sbb
xchg
imul
inc
lds
xchg
pop
or
and
cmpsl
leave
test
ss
lret
and
add
shl
inc
dec
push
xchg
xlat
jl
or
mov
xchg
jo
popa
pop
in
test
push
pop
adc
movsb
or
sti
jbe
mov
nop
and
in
add
dec
popa
sub
mov
loope
cmp
xchg
pop
sarl
cs
push
lods
daa
jno
or
divb
out
dec
pop
loope
jno
je
dec
xchg
add
iret
stos
adc
scas
dec
push
mov
mov
and
subb
scas
popa
nop
js
fimull
jbe
insb
lds
xchg
pop
test
aam
ja
sub
xor
and
bound
adc
dec
jmp
lret
scas
or
fiaddl
mov
sbb
cmpsb
adc
push
pop
popf
test
sbb
push
cmp
xor
frstor
movsb
loope
das
cmpsb
add
dec
xor
ljmp
sbb
sbbb
mov
sti
ficoms
lcall
jecxz
cmc
inc
scas
cmp
dec
and
fmull
mov
fidivl
mov
test
inc
mov
sbb
inc
outsl
pop
dec
xlat
js
ljmp
and
cmpsb
outsl
push
jbe
stos
ficoms
lret
ret
fists
shrl
jle
xor
push
repnz
mov
movsl
pop
lods
jl
sti
aad
lods
add
mov
adc
loope
mov
ljmp
mov
bound
lea
rcrb
jle
cmpsb
pop
daa
pop
mov
imul
mov
addr16
inc
cmp
loope
pop
inc
enter
mov
aad
push
or
xor
dec
and
mov
loopne
push
mov
fidivrs
jecxz
je
mov
clc
in
jmp
xor
push
cmp
mov
mov
or
leave
mov
dec
adc
add
adc
dec
adc
xor
divb
shl
loope
mov
mov
cmp
out
notb
jno
add
out
jp,pn
xchg
dec
mov
jae
mov
push
mov
mov
lret
mov
mov
nop
push
push
ret
js
dec
dec
jae
test
mov
push
loopne
sti
cwtl
iret
jmp
jmp
movsb
les
mov
and
sbb
mov
jne
pop
mov
jmp
pop
inc
push
je
mov
cli
or
pusha
pop
fs
cs
jae
inc
and
jmp
mov
lods
inc
mov
jmp
or
scas
popf
xchg
or
les
push
das
xchg
popf
insb
mov
jbe
push
flds
iret
mov
dec
pop
xchg
shr
frstor
jns
daa
cmp
adc
popf
insl
fwait
xor
lret
repz
xchg
jg
sbb
scas
pusha
push
adc
or
popf
imul
sub
or
rorb
roll
fldl
dec
and
and
movsl
xor
insl
push
and
lret
inc
scas
xor
lret
loopne
sub
addl
imull
clc
test
in
cmp
lahf
clc
ja
sub
in
push
popf
lds
add
and
jae
cltd
xchg
or
gs
filds
sbb
pop
ss
mov
xchg
in
push
jmp
in
and
loope
out
imul
fimull
scas
movsl
iret
mov
and
vpsubw
loop
xchg
ret
add
pop
dec
outsb
and
repz
imul
sbb
dec
and
aas
adc
adc
push
and
dec
mov
pusha
cmp
pop
push
out
add
push
sub
push
cli
jb
sti
fcoms
cmp
xlat
repnz
shll
add
adc
inc
inc
pop
pop
cld
ret
jb
lock
and
dec
or
pop
lds
movsl
out
jne
in
mov
pop
mov
cmpsb
and
inc
scas
sub
push
cmp
pop
xchg
jg
inc
mov
push
ds
sbb
movsb
inc
pushf
inc
int3
call
jmp
inc
in
mov
mov
xchg
xchg
mov
clc
jge
mov
cwtl
sarb
adc
mov
cmp
fadds
sarl
xorb
jl
xchg
pop
push
xchg
dec
loopne
mov
jbe
mov
fwait
sbb
and
lret
mov
dec
ja
jae
dec
jne
std
jge
xchg
addr16
dec
jmp
add
inc
dec
inc
rclb
inc
push
cmp
movsl
mov
ret
xchg
dec
inc
xchg
pop
lods
outsl
shlb
arpl
cli
aad
loopne
mov
mov
int
test
mov
ja
scas
es
mov
in
ljmp
mov
mov
enter
fisubl
ficoml
int
testb
out
fs
pusha
pop
inc
jp
ficoml
add
push
mov
fidivl
das
sub
aam
adc
repz
outsb
pop
data16
cmp
lahf
and
xchg
jb
inc
lods
insl
fdivl
fxch
inc
aaa
push
test
cmp
sbb
psubsb
mov
clc
pop
imul
mov
rcl
cmp
xor
sub
mov
sbb
jmp
mov
ss
jmp
in
lret
adc
xchg
mov
mov
dec
lods
jne
xchg
test
fucomp
push
mov
or
xor
cmp
pop
sti
cmp
imul
sti
add
movsb
sbb
imul
into
mov
fsts
test
sbb
xlat
int3
mov
mov
mov
mov
and
repnz
std
xchg
adc
xchg
xor
dec
ss
push
or
int3
jmp
xchg
fdivrl
icebp
dec
in
aam
out
xchg
sbb
jecxz
mov
sub
inc
xchg
rclb
cltd
mov
addr16
xor
insl
fisttpl
dec
inc
stos
add
inc
adc
pop
sbb
imul
inc
fbstp
mov
mov
xchg
mov
cmc
fwait
mov
leave
xchg
not
mov
out
daa
frstor
mov
pop
iret
inc
jp
punpckhdq
in
jno
fadd
pop
and
ljmp
cld
mov
jbe
add
dec
add
adc
cld
mov
mov
dec
sbb
jno
loop
mov
sbb
jne
mov
das
and
movl
fstl
xchg
rclb
out
repnz
sbb
jle
pusha
xor
inc
mov
mov
or
sarb
mov
mov
mov
lods
xchg
aad
and
inc
stc
div
roll
push
inc
xorb
scas
nop
dec
push
lcall
jnp
les
xchg
pop
mov
fsubs
push
jmp
and
add
ret
push
out
fstpt
in
iret
insl
mov
mov
adc
pop
and
cmpsl
add
pop
stos
push
jo
test
pop
movl
outsl
bound
add
fcompp
ljmp
mov
jne
pop
adc
mov
mov
xchg
sti
push
pop
fwait
mov
push
rclb
sqrtps
and
sub
pop
cmpl
push
push
adc
test
and
scas
lds
cltd
sub
jbe
shll
or
push
fldl
xchg
stos
daa
jne
fcoms
push
out
mov
mov
lahf
push
push
jl
dec
push
popf
inc
jecxz
or
adc
ja
rorl
jmp
ljmp
addr16
xor
inc
pop
xor
push
loope
mov
ja
addr16
and
pop
stos
js
pop
inc
dec
loop
mov
jp
lods
test
push
and
xchg
mov
les
jae
pop
fldenv
dec
lret
pop
mov
pmullw
arpl
sar
dec
cld
dec
pop
push
and
add
add
lahf
ret
xchg
push
mov
xchg
mov
dec
movsb
mov
stos
add
enter
in
xor
outsb
lods
push
xor
icebp
lods
test
jae
sub
popf
mov
sbb
xor
loop
mov
add
pop
je
xchg
inc
jne
cmp
push
pop
int
mov
jle
or
sbb
fsts
jne
ret
lock
inc
call
mov
loop
adc
adc
push
jb
sub
inc
mov
adc
dec
sub
popf
add
mov
jae
js
mov
xchg
imulb
test
mov
inc
out
ret
mov
sbb
adc
mov
add
cmp
aaa
jmp
fs
sbb
dec
insl
lea
dec
lret
imul
add
mov
outsb
or
pusha
jecxz
dec
xchg
scas
ffreep
cmp
mov
cmp
arpl
out
into
sbb
or
lock
inc
sub
dec
mov
and
push
daa
imul
dec
jmp
xchg
stos
fsubr
dec
xchg
jo
mov
adc
out
jg
mov
ss
push
add
mov
ss
pop
pop
adc
stos
mov
jl
and
je
cmpb
push
xor
ljmp
shll
push
mov
test
aam
xor
sub
lcall
jno
shl
jle
adc
inc
xadd
jns
xchg
into
lods
out
xchg
mov
sbb
out
leave
fcmovnbe
mov
int
pop
popa
fs
mov
push
js
das
lret
fisubrl
mul
nop
push
gs
pop
xchg
push
shll
mov
enter
dec
xchg
jae
repnz
cltd
loopne
dec
test
cmp
jle
pop
mov
cli
sarb
je
jmp
outsl
lret
aad
mov
mov
sbb
inc
mov
les
in
data16
xor
lahf
cmp
mov
inc
inc
dec
daa
cwtl
pop
mov
ss
mov
data16
inc
xchg
lret
pop
adc
mull
mov
bnd
xor
xor
stos
insl
push
sub
mov
sar
cs
adc
xchg
mov
movsb
sarl
in
pop
leave
icebp
dec
cld
dec
xchg
notl
mov
mov
sti
inc
sbbb
fsubrl
lret
pop
lds
pop
push
mov
pushf
pop
in
les
push
xor
mov
aad
stos
addr16
dec
out
add
daa
out
push
xchg
test
add
push
push
add
jne
mov
fsubs
test
mov
mov
ja
push
pop
xor
cmp
pop
pop
int
aaa
pop
clc
jno
stos
xor
arpl
and
and
jge
or
mov
mov
scas
sub
ret
cmp
xchg
dec
jge
pop
mov
sbb
std
sbb
adc
rcrb
lock
mov
les
ret
out
subb
mov
mov
push
test
adc
loope
ss
cmp
inc
loope
mov
idivb
adc
mov
fbstp
int3
and
mov
lods
adc
mov
mov
cmpsb
mov
sahf
cs
mov
pop
cmp
mov
stos
xchg
insl
nop
das
cmp
outsb
pop
daa
mov
sahf
repz
aas
xchg
or
mov
push
mov
movsl
cmp
out
push
test
aas
cmpsl
mov
enter
push
push
add
and
mov
sbb
es
fisubl
jp
fs
inc
scas
popf
mov
in
push
int
bound
fdivl
sarl
test
mov
pop
gs
push
xor
add
xchg
insb
into
rclb
mov
ret
jecxz
divl
pusha
xchg
fstpt
cmc
pop
mov
popf
cld
mov
sub
pushf
outsb
icebp
iret
add
ljmp
sbb
adc
lret
in
jno
mulb
and
shl
xlat
cmp
jb
mov
sbb
jno
out
mov
in
insl
pop
fwait
push
sbb
xchg
call
shll
lock
and
mov
jns
popf
pop
add
jae
dec
xchg
stos
and
out
add
mov
jno
out
je
enter
pushf
mov
lahf
fbstp
loope
xchg
frndint
mov
add
aas
jmp
popf
adc
mov
sbb
mov
xchg
out
enter
cmp
sti
dec
adc
cmp
bound
enter
leave
cmp
and
and
cmp
imul
or
lret
sub
out
pop
call
aad
pop
imul
pusha
fldcw
mov
mov
and
inc
aaa
cmp
ja
les
fidivl
jp
and
test
or
xor
cmp
push
int
pop
dec
adc
push
loope
es
fmuls
ret
adc
xchg
fs
sbb
inc
pop
or
sub
and
and
das
lahf
sahf
and
xchg
outsb
mov
iret
adc
adc
mov
lea
rclb
mov
outsb
imul
test
mov
xor
div
adc
test
es
sbb
cmp
and
orb
xchg
stos
pusha
xchg
pop
or
lock
stc
das
data16
sbb
inc
je
fcompl
stos
or
add
mov
movsb
cmp
stos
pusha
aam
dec
mov
insb
sub
lcall
subl
push
out
pusha
mov
xchg
in
fldcw
adc
testb
addl
andnps
add
sub
test
pop
or
jbe
and
jl
pop
and
adc
mov
push
push
mov
dec
cmp
jns
xor
ljmp
pusha
cmp
jl
out
sub
stos
push
adc
les
lods
xor
test
pop
jecxz
jmp
ja
mov
loop
dec
dec
sahf
cmp
mov
loope
loopne
mov
mov
push
jle
xchg
mov
xchg
bound
movsb
call
mov
dec
rol
and
scas
dec
jno
or
sub
out
sbb
ficoms
xchg
mov
mov
fstl
mov
xor
je
lret
mov
adc
dec
cmp
daa
jne
jae
cmovs
movsb
dec
add
and
fisubrs
mov
mov
mov
fwait
add
imul
jle
jge
jg
das
aam
mov
test
out
cmp
sbb
jnp
mov
xor
sub
jb
fwait
aas
lcall
das
mov
mov
pop
push
je
aam
dec
adc
push
sbb
xchg
popf
js
cmp
enter
es
fsubs
test
pop
pop
lret
pop
cld
xchg
outsb
dec
or
mull
xor
pusha
xlat
sub
mov
pushf
mov
lds
dec
dec
xor
push
pop
mull
mov
pop
fsubl
push
fldenv
xor
lcall
add
scas
hlt
insl
subl
sub
ljmp
and
adc
add
sahf
pop
jp
clc
xchg
mov
popa
fdivl
xchg
push
fists
inc
pop
jmp
sbb
in
notb
sub
xchg
inc
stc
dec
cmp
daa
jp
mov
mov
mulb
mov
nop
push
hlt
or
nop
fwait
inc
cmp
sbb
jno
fistps
std
ret
stos
pop
mov
jns
sub
sub
jg
int3
mov
mov
shl
pop
sarl
clc
xor
or
or
out
lret
and
jl
jmp
push
mov
add
add
shl
sbbb
imul
sbb
dec
outsb
mov
fnstenv
cmp
lahf
sahf
test
add
jl
pop
or
mov
stc
xchg
arpl
in
jmp
jnp
fistps
aas
mov
jp,pt
rolb
xchg
je
jge
or
lods
sbb
data16
mov
aad
shll
sti
fwait
pop
jno
cmp
push
push
popa
and
pushf
mov
push
sbb
sub
or
icebp
andl
mov
mov
arpl
mov
xchg
push
clc
cmpb
sbb
adc
xor
dec
sub
int
and
and
or
aam
mov
ret
dec
in
cmpl
rcr
mov
push
pushf
adc
sbb
in
ja
mov
adc
jno
xor
addr16
sbb
rolb
xor
dec
ret
mov
dec
xor
stos
xor
and
test
mov
inc
jbe
pop
scas
mov
xchg
subw
loop
jnp
addr16
test
adc
and
sahf
pop
fisttps
cmp
inc
push
popf
xchg
xchg
enter
jl
loopne
and
inc
sub
inc
jge
imul
pop
cmp
insl
out
call
lret
icebp
push
test
insl
mov
rorl
sub
adc
icebp
fisttpll
push
xchg
int
clc
enter
ss
xchg
xor
jne
inc
push
insl
xor
xor
dec
jno
sub
movsb
insb
cli
movsb
dec
and
add
repnz
xchg
dec
cld
enter
pop
movd
push
aas
mov
imul
jb
or
cmpl
xchg
jb
sahf
jno
movb
jecxz
mov
daa
push
mov
and
cmc
shufps
adc
cmp
sub
inc
mov
scas
xchg
repnz
mov
leave
decb
je
jmp
cmpsl
into
inc
jbe
int3
stos
jbe
mov
pop
fs
andb
mov
mov
sbb
jmp
jb
mov
mov
lret
xor
xchg
add
sub
in
jo
mov
sbb
dec
or
lods
ret
test
loopne
mov
hlt
jne
sbb
dec
mov
and
hlt
xor
stc
mov
mov
lods
fs
sahf
stos
lret
jmp
ljmp
jno
cld
movsl
std
orb
xchg
mov
das
sub
mov
rcrl
xlat
lock
mov
cmc
push
mov
shll
sti
repnz
dec
xchg
mov
xor
lods
sbb
out
add
addl
sahf
jno
inc
pop
sub
pusha
in
adc
pop
sbb
jno
fwait
xchg
jge
and
push
and
nop
add
pop
pop
pop
int
lretw
negl
stos
sub
mov
lods
cmp
cwtl
inc
stos
jno
xchg
outsb
inc
mov
imul
inc
push
push
add
add
cmp
sbb
xchg
mov
xchg
sub
aaa
xchg
xchg
aas
xor
pop
mov
movl
in
js
jl
or
ret
sub
pop
lahf
movsl
adc
jno
xchg
lock
stos
sahf
mov
sbb
sub
dec
jb
xchg
daa
sub
notl
movb
xor
cmpsb
sub
hlt
mov
int
push
aam
mov
call
rorb
scas
movsl
in
sub
hlt
das
inc
pop
mov
dec
lods
cmp
mov
dec
cmp
adc
lds
std
sub
fcompl
pop
cs
add
add
mov
stos
cli
in
cltd
mov
or
jg
movsl
sti
mov
pop
rcrb
and
data16
adc
in
shl
mov
daa
xor
xchg
cmp
sub
cmp
les
test
mov
clc
or
mov
mov
mov
in
ret
inc
xchg
sbb
pop
test
outsb
call
inc
jae
leave
sbb
xor
adc
pop
cwtl
sbb
jns
test
add
sarl
outsb
pushf
lea
pushf
xor
nop
cwtl
or
andb
sub
repnz
jnp
pop
sbb
xor
int
xor
sub
mov
leave
aaa
xor
enter
les
jns
mov
add
add
mov
adc
les
dec
add
mov
sbbb
mov
xchg
ror
inc
ret
jmp
icebp
add
mov
sub
mov
out
push
outsb
lock
inc
mov
stc
mov
loopne
les
pop
xor
pusha
adc
out
aam
addr16
jnp
in
cmp
jbe
test
mov
push
fiaddl
xor
dec
imulb
stc
inc
mov
mov
mov
push
mov
popl
popf
or
pop
pop
mov
cmp
mov
adc
rolb
xor
daa
jecxz
sbb
xor
jg
loop
mov
insl
sub
mov
sub
out
jo
pushf
mov
xor
arpl
es
sbb
push
dec
stos
sub
pop
or
pushf
mov
and
add
add
ss
cmp
cmp
rolb
add
add
push
cmp
cmp
cmp
cmp
cmp
