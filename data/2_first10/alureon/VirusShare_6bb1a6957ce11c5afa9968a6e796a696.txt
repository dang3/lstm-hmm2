push
mov
push
push
push
push
lea
push
call
jg
jge
popaw
popa
insb
data16
imul
arpl
bound
imul
pop
jo
jbe
push
push
pop
push
push
push
push
js
push
pop
bound
push
push
bound
jge
push
jge
pop
jle
pusha
push
popa
mov
lea
pop
pop
push
push
call
imul
jno
jae
jb
jno
jle
push
push
je
pop
pop
jb
push
push
jo
jo
push
je
jne
jo
pushw
imul
push
pop
jae
js
pop
bound
outsb
imul
push
jns
je
jb
jbe
insl
pop
jno
push
pop
push
pop
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
call
jbe
jae
jnp
popaw
push
fs
jge
pusha
js
push
addr16
push
ja
insb
pop
jne
push
pusha
pop
push
arpl
arpl
imul
addr16
outsb
arpl
imul
jnp
pop
mov
lea
pop
push
push
push
push
push
push
call
push
jne
jno
push
js
push
outsl
push
push
push
push
je
pop
jp
pop
popa
push
push
push
je
push
push
jnp
jne
jo
push
jl
jle
insw
fs
push
jbe
pop
push
outsb
pusha
bound
pop
push
jge
popa
jbe
jle
fmull
push
push
push
push
push
lea
push
lea
push
call
ja
jge
pop
jbe
data16
insb
imul
jne
jae
pop
popa
pop
push
pusha
push
je
imul
push
pop
jb
pusha
jae
jo
data16
pusha
pop
insl
push
jae
jge
bound
jg
pusha
pop
pop
jno
popa
pop
push
pop
outsl
outsb
pop
pop
push
jne
jp
jno
push
mov
lea
pop
push
push
push
call
imul
push
data16
pop
jae
push
push
gs
pop
pop
ja
jle
pop
ja
jbe
push
push
insl
popa
bound
jno
addr16
push
push
push
jno
pop
imul
jle
push
pusha
push
je
insb
push
pop
push
jns
jp
imul
pop
push
bound
mov
lea
pop
call
mov
push
lea
dec
sub
pop
mov
push
lea
push
push
push
call
jg
popa
jg
push
jnp
jnp
ja
jnp
pop
pop
push
push
pop
push
pop
jbe
jo
popa
pop
outsb
jnp
pop
pop
pop
jl
imul
imul
jnp
push
push
insb
addr16
gs
pop
ja
arpl
imul
lea
pop
add
add
push
push
push
push
push
lea
push
call
jb
jno
jae
jle
pusha
jg
popa
imul
insb
push
arpl
arpl
pop
jnp
pop
jge
insb
je
pop
insl
push
pop
push
popa
pop
jle
push
push
insb
ja
jl
jp
push
pop
pop
outsl
bound
push
push
je
js
pusha
jno
push
popa
push
addr16
jne
jp
bound
jle
pop
outsl
push
imul
popa
mov
lea
pop
mov
xor
push
push
ror
mov
sub
pop
push
push
push
call
jg
pusha
jne
outsb
imul
push
arpl
pop
push
push
insb
push
imul
bound
pop
jge
pop
push
push
jg
jg
imul
insb
fs
jno
push
pop
jo
outsl
pop
popaw
pop
pop
jl
outsb
pop
pop
bound
jo
jle
push
pusha
push
push
imul
js
push
mov
lea
pop
push
push
push
push
call
jg
push
pop
pop
pop
pusha
pop
push
jb
insl
pop
push
jle
outsb
arpl
pop
pop
imul
jno
js
jnp
jno
jg
jne
jle
jp
bound
push
outsl
popa
insl
pop
jl
jl
jne
push
push
push
push
js
pop
ja
ja
pop
pop
pop
jns
addr16
jp
aam
bound
call
push
lea
push
push
push
call
jb
pop
jne
jne
jno
imul
jo
push
push
gs
popa
push
jns
jns
imul
pusha
push
addr16
jl
insb
push
jb
push
imul
push
jne
fs
push
pop
jne
jle
jnp
jl
pusha
push
jle
imul
jno
imul
jl
popa
mov
lea
pop
mov
push
push
push
lea
push
push
lea
push
call
push
push
ja
imul
push
jg
pop
jns
pop
jge
pusha
push
pop
push
jae
jl
pop
pop
jo
pop
jns
push
outsl
ja
outsl
pop
pop
push
jns
arpl
insb
push
js
ja
push
js
jg
imul
je
outsl
pop
pop
pop
push
outsb
pop
push
outsb
outsb
outsb
jle
push
insb
fs
pusha
push
je
imul
mov
lea
pop
mov
push
push
push
push
call
push
jo
gs
pop
bound
insl
push
push
popa
outsb
jg
pop
pop
jb
pop
jb
je
jge
popa
fs
imul
push
outsl
imul
popa
jbe
jo
push
pop
jnp
jge
push
pop
pusha
jae
jnp
addr16
pop
pop
pop
push
jle
data16
jnp
jb
ja
insl
ja
insb
insb
jge
jne
jae
imul
jp
hlt
lea
pop
add
push
dec
rol
sub
shr
inc
pop
mov
push
push
lea
push
push
call
pop
imul
outsb
push
jne
outsb
push
push
pop
push
gs
jle
jb
jb
jl
arpl
push
jbe
push
push
insb
push
pop
jae
fs
data16
jae
jae
jne
push
gs
jo
ja
js
jne
je
pop
pop
jns
popa
jne
bound
push
addr16
mov
lea
pop
sub
jne
push
push
push
push
push
lea
push
call
pop
gs
outsl
jb
outsb
jo
push
pop
pop
imul
jno
outsb
jo
jo
push
push
push
push
insl
pop
outsl
addr16
jp
jb
jnp
pop
jbe
outsb
jl
push
jo
pop
outsb
push
jb
ja
addr16
pusha
pop
pop
js
jns
jo
push
pusha
js
push
fs
les
push
inc
dec
pop
pop
push
shl
pop
pop
push
push
lea
push
lea
push
call
js
jne
jl
pop
jbe
push
push
push
pop
push
gs
fs
bound
push
pusha
jne
jl
jl
push
arpl
jge
jnp
outsb
arpl
je
jl
fs
jl
pop
jg
popa
gs
jae
jnp
push
ja
jnp
jle
bound
js
insl
insb
jne
jb
pusha
pop
jg
fs
jb
jno
jp
mov
lea
pop
pop
push
not
xor
inc
inc
rol
pop
pop
push
lea
push
call
outsb
pop
pop
push
pop
arpl
fs
je
jno
popa
imul
jae
pop
jg
pushaw
je
push
bound
js
push
push
ja
pusha
jb
data16
bound
pop
push
imul
push
push
pop
jle
bound
imul
pop
push
pop
push
pop
pop
ja
ja
jge
pusha
arpl
pop
push
jge
pop
outsl
push
fmull
rol
rol
shr
add
not
pop
mov
cmp
jne
push
rol
sub
shr
shr
dec
pop
push
push
push
not
shr
mov
sub
pop
push
push
call
pop
jnp
jp
jp
popa
outsb
pop
insl
pop
pop
pop
fs
arpl
push
imul
js
pop
data16
push
jnp
fs
bound
jo
je
js
pop
gs
push
jp
outsb
jns
imul
jne
jge
js
push
pop
push
push
insl
jbe
hlt
lea
pop
push
push
lea
lea
not
sub
pop
call
push
push
shr
not
shr
dec
shl
mov
add
pop
push
xor
sub
not
sub
xor
shr
rol
mov
sub
xchg
push
mov
xor
xchg
push
push
lea
push
push
lea
push
call
push
push
push
jbe
pop
jae
outsb
imul
push
jnp
push
pop
ja
push
fs
jge
insl
push
outsb
push
push
push
outsl
insb
jg
arpl
push
pop
jge
imul
jo
pop
pop
jb
jne
insl
push
insb
push
pop
imul
data16
jge
hlt
lea
pop
push
push
lea
push
call
push
pop
outsw
jno
jle
arpl
push
push
jge
pop
outsb
fs
jo
insl
pop
push
pop
jb
js
jae
pop
outsl
insl
push
push
pop
jle
push
jae
pop
jb
pop
pop
push
push
imul
jp
pop
push
push
pop
pop
pop
pop
push
jo
outsl
jp
imul
ja
popa
push
jg
jbe
jbe
gs
addr16
push
jge
mov
lea
pop
call
push
add
xor
add
sub
not
shl
pop
mov
add
push
push
rol
shr
dec
mov
add
pop
push
push
push
push
push
push
call
bound
outsb
push
jg
jnp
pusha
insl
push
pop
addr16
jns
pop
bound
jnp
data16
push
js
pop
pop
pop
arpl
push
pop
jns
bound
jge
popa
jbe
jbe
pop
push
push
insl
jl
bound
pop
jp
push
jae
jns
jge
insl
push
push
jb
jns
push
bound
outsl
push
bound
jne
hlt
lea
pop
push
push
push
call
imul
push
push
bound
jl
gs
fs
jbe
jb
push
push
arpl
popa
push
popa
jne
jg
jp
pop
jge
push
jbe
popa
pop
jp
outsb
insl
insb
ja
jbe
popa
push
push
outsl
je
pop
jne
pop
insl
pop
pop
mov
lea
pop
call
push
push
push
push
push
lea
push
call
arpl
jle
pop
js
pusha
push
pop
push
push
je
push
addr16
pop
push
pop
imul
jg
arpl
pop
push
push
outsl
jl
pop
imul
pusha
jns
outsb
jne
outsb
insb
jns
pop
push
jae
jg
pop
jg
jb
fs
push
push
push
popa
jb
outsb
jns
gs
pop
popa
push
pop
imul
lea
pop
push
push
push
push
push
lea
push
call
addr16
addr16
ja
js
jb
pop
push
bound
jbe
push
ja
popa
pop
popa
push
pop
imul
fs
addr16
pop
pop
js
push
outsl
fs
pop
je
bound
jge
insl
jns
pop
insb
insb
push
outsb
push
imul
push
jnp
push
push
jbe
push
jne
addr16
jle
push
push
gs
lea
pop
push
push
push
dec
sub
lea
shr
mov
xor
pop
push
dec
rol
add
sub
pop
push
push
inc
not
sub
ror
shl
ror
pop
call
pop
push
push
xor
shl
ror
sub
dec
mov
sub
pop
push
lea
push
push
call
pop
js
outsb
push
jne
jle
outsb
jg
jne
jl
js
jno
pop
push
push
jae
jno
imul
gs
push
je
insb
pop
jo
jb
insl
push
jnp
pop
jns
pop
pop
insb
jge
push
push
push
js
je
addr16
bound
jg
jne
je
push
pop
outsb
push
push
or
push
call
push
add
pop
pop
push
rol
shl
add
dec
shl
pop
pop
pop
push
push
push
lea
push
lea
push
push
call
pop
push
insb
popa
arpl
pop
jnp
js
pop
ja
outsb
jns
pop
pop
jle
jg
push
push
outsl
push
insl
pop
imul
push
pop
imul
push
pusha
jae
push
outsl
pop
push
insl
push
push
push
gs
push
js
insl
push
push
data16
pop
addr16
pop
push
jbe
push
jl
push
gs
lea
pop
pop
push
dec
inc
add
shl
inc
ror
inc
sub
pop
push
push
push
push
lea
push
push
call
imul
push
insb
pop
push
jno
pop
pop
gs
jo
push
push
jg
jno
outsb
pop
jle
push
jno
pop
push
jp
pop
pusha
pop
pop
push
push
push
je
jl
jo
jp
push
push
imul
jl
push
pop
imul
mov
lea
pop
call
push
ror
not
sub
sub
rol
pop
xor
ret
push
sub
mov
sub
xchg
push
sub
sub
shr
not
add
shl
xor
pop
push
push
lea
push
push
push
push
call
jb
push
pop
outsl
push
pop
fs
jl
addr16
jle
push
pop
insl
push
jp
jp
imul
insl
jb
jl
pop
insl
push
jno
pop
popa
pop
jns
pop
jne
jp
pusha
arpl
pop
push
ja
push
jno
push
imul
jnp
insl
jae
mov
lea
pop
call
push
push
shl
pop
call
push
push
push
push
push
call
outsb
push
jns
jle
outsl
ja
pop
push
imul
pop
push
gs
jne
pop
push
popa
insb
js
pusha
pop
pusha
jle
arpl
je
js
jp
fs
jns
outsl
jnp
pop
pop
je
jg
push
push
imul
gs
outsl
mov
lea
pop
cmp
jbe
add
push
dec
not
pop
pop
pop
push
push
call
push
jnp
js
pop
push
fs
ja
pusha
pusha
data16
pop
push
outsb
insb
jns
pop
jge
pop
jne
push
ja
pop
ja
pop
je
popa
bound
popa
pop
fs
push
outsl
push
fs
jne
pop
outsb
jae
push
push
pop
addr16
data16
ja
outsb
pop
popa
jb
push
pop
pop
jo
push
pop
jno
mov
lea
pop
pop
push
rol
pop
pop
push
push
push
push
lea
push
call
jle
push
jo
jp
pop
jge
push
jbe
outsb
pusha
jb
fs
ja
push
pusha
jno
push
pop
pop
ja
jae
ja
push
push
popa
jge
imul
addr16
jno
jno
jb
push
gs
push
push
jbe
jae
hlt
lea
pop
pop
xor
push
add
not
inc
pop
ret
push
shr
add
shl
inc
pop
pop
push
push
sub
inc
shl
shr
inc
mov
sub
xchg
push
push
push
push
call
jl
push
push
fs
bound
addr16
pop
push
jae
jno
push
jbe
push
push
insl
jle
push
jl
pop
fs
push
insl
jo
jl
insb
imul
jl
push
jge
jae
js
pusha
insl
jl
jnp
imul
jo
mov
lea
pop
push
push
xor
xor
not
rol
shr
ror
pop
call
xor
push
push
push
push
push
push
call
outsl
pop
pop
fs
push
push
imul
jo
imul
jns
pop
jb
pop
push
jbe
pop
pusha
pop
push
push
jo
push
jge
fs
ja
pop
push
pusha
jb
pop
jae
insl
push
insl
jbe
pop
jge
int3
lea
pop
inc
push
rol
sub
shr
inc
pop
inc
cmpw
jne
push
rol
pop
cmp
jae
mov
push
push
lea
push
lea
push
call
pop
gs
popa
push
insl
jns
push
js
push
je
arpl
js
jnp
push
insb
jno
push
jg
pop
jle
jb
jnp
arpl
pop
push
jae
jno
jl
push
pop
jae
imul
popa
pop
pop
pop
pop
push
jge
pop
pop
imul
imul
push
push
push
pop
bound
jne
push
js
bound
outsb
push
jae
mov
lea
pop
inc
cmpb
jne
push
shl
shl
add
sub
sub
shr
pop
mov
push
sub
pop
sub
cmp
jae
push
add
shl
shr
shl
lea
pop
push
call
push
push
call
push
jb
jg
jp
data16
pop
jns
pop
outsl
jb
push
pop
outsl
jbe
jge
push
push
push
pop
jbe
jle
pop
insb
jl
jbe
outsb
push
push
jns
jg
jne
jb
pop
pop
jle
push
push
insl
ja
jnp
push
push
jno
jbe
mov
lea
pop
xor
push
push
call
push
pop
imul
imul
pop
push
push
je
ja
jp
jp
pop
jb
jae
pop
jns
push
fs
gs
pop
jne
insb
jbe
push
jno
push
jb
pop
jbe
jle
jl
pop
push
arpl
push
outsw
jns
bound
push
outsb
bound
pop
push
js
mov
lea
pop
cmp
je
push
lea
dec
not
shr
rol
dec
pop
mov
push
shr
shl
mov
sub
xchg
push
sub
xor
add
sub
pop
push
push
lea
push
push
call
push
jne
pop
imul
jge
je
jo
jbe
jae
je
jne
pop
jle
push
push
jno
pop
arpl
jno
push
jnp
jo
insb
pusha
push
jl
je
pop
jb
jbe
bound
data16
insb
jp
jp
pop
jge
jnp
jns
pop
js
ja
insb
je
cld
lea
pop
call
xor
push
inc
shr
dec
pop
sub
push
push
call
push
pop
pop
jno
pop
fs
insl
js
push
jb
jne
ja
data16
push
push
pop
pop
push
jns
jns
jne
jne
push
jae
jp
jns
pusha
pop
pop
jnp
jae
insl
push
jl
addr16
jb
pop
jle
imul
outsl
push
jge
jo
pusha
push
push
jge
push
push
outsl
pop
insl
popa
popa
pop
jle
mov
lea
pop
push
push
push
push
call
insl
insb
fs
outsb
pop
jb
pop
jne
data16
pop
jg
data16
push
push
jnp
arpl
jb
pop
push
push
push
jns
arpl
outsb
jnp
pop
pop
gs
insl
jg
jb
push
insb
push
push
pop
pop
jge
pop
jno
pusha
popa
jg
pop
jb
push
gs
pop
ja
jl
mov
lea
pop
push
push
not
not
not
not
ror
pop
xor
push
push
lea
push
call
imul
push
jns
outsl
insb
fs
push
pop
jb
jo
fs
ja
push
push
jle
outsl
fs
pop
je
pop
push
jo
outsl
jns
jne
push
pop
push
outsb
jb
outsl
jae
push
push
push
js
bound
push
jl
pop
pop
je
outsl
mov
lea
pop
jmp
or
je
push
shl
pop
xor
pop
push
ror
pop
pushl
push
push
call
outsl
bound
jb
jnp
jne
pop
outsb
js
outsb
jp
fs
jno
push
pop
push
jge
push
push
imul
jg
pop
push
jb
push
push
jle
push
jnp
pop
fs
push
pop
jg
jge
jno
jl
push
imul
pop
arpl
push
push
jae
jp
jns
jg
addr16
bound
pop
pop
push
lea
push
push
push
push
push
call
jle
pop
outsl
push
jle
push
jnp
imul
imul
jb
ja
outsl
jnp
pop
pop
gs
push
jae
jae
imul
gs
push
push
outsb
push
push
insb
push
arpl
pusha
pop
je
imul
insl
pop
push
push
addr16
push
push
pop
jge
data16
insb
jle
pop
jne
pop
gs
pop
bound
lea
pop
mov
push
ror
sub
pop
mov
push
not
dec
shr
rol
pop
mov
push
ror
sub
sub
mov
sub
xchg
push
add
sub
sub
pop
push
call
push
push
push
call
push
insb
jns
push
jp
fs
jno
push
js
popa
jg
push
pop
pop
imul
jo
pop
outsl
pop
jge
jge
jns
push
jl
insb
push
addr16
insb
pop
jbe
popa
push
insl
outsl
push
fs
gs
pusha
outsl
push
push
pop
pop
push
pop
jl
push
pop
jb
pusha
js
push
imul
ja
ja
insl
jp
jo
hlt
lea
pop
cmpl
jne
push
push
call
pop
jl
js
js
push
jge
jle
pop
push
jno
jg
push
imul
insl
jbe
jno
jne
js
push
push
outsl
popa
jl
jno
pop
fs
push
push
ja
push
jbe
pop
jb
jbe
jne
fs
jb
push
pop
jg
insb
pop
pop
mov
lea
pop
add
push
ror
not
add
add
xor
pop
jmp
cmpl
jne
push
lea
push
lea
push
push
push
call
pop
arpl
jl
insl
outsb
insl
jnp
push
arpl
jbe
insb
push
jge
jae
js
jno
bound
jnp
insl
insl
imul
push
bound
outsb
jae
pop
pop
push
data16
push
push
push
push
push
jne
js
data16
mov
lea
pop
cmpl
jne
push
dec
lea
not
inc
rol
pop
add
push
xor
xor
lea
shl
mov
xor
xchg
push
not
dec
sub
pop
push
call
push
lea
add
xor
ror
dec
ror
ror
pop
push
push
push
xor
mov
sub
pop
push
sub
sub
xor
xor
ror
pop
push
push
push
shr
shr
add
shr
add
pop
call
push
sub
pop
mov
push
push
ror
shr
pop
push
push
lea
push
push
push
lea
push
lea
push
call
pop
imul
je
pop
jp
outsl
jp
jns
insl
fs
pop
jae
imul
outsl
jns
pusha
imul
push
fs
pop
pop
js
push
pop
pop
bound
jp
ja
jbe
pop
arpl
imul
push
ja
insl
outsb
jl
push
jge
hlt
lea
pop
mov
push
lea
dec
pop
add
push
lea
push
push
push
call
popa
jle
outsb
bound
pop
pop
pop
push
push
jle
outsb
push
jl
ja
outsb
jnp
jne
jns
fs
push
jg
push
jae
push
ja
jg
ja
pusha
jno
push
pop
jle
pop
popa
outsb
jno
ja
jge
gs
jg
push
pop
jg
insl
push
pop
gs
push
imul
push
gs
js
pop
bound
push
push
mov
lea
pop
add
push
lea
push
lea
push
push
lea
push
call
pop
jbe
insl
imul
push
pop
jg
push
jg
push
bound
pop
push
fs
je
pop
jl
js
insb
jp
pop
push
outsb
pop
push
bound
pop
arpl
jne
jae
imul
push
jb
push
push
jbe
bound
bound
cld
lea
pop
mov
push
push
push
lea
push
push
call
pop
push
ja
push
bound
jne
pop
jns
insl
jge
outsl
pusha
jo
jle
popa
js
push
jno
jb
ja
push
push
pop
push
push
jnp
je
pop
jge
pop
push
push
jg
jno
je
pop
pop
pop
jo
push
jge
push
push
insl
jo
imul
pop
push
push
jl
pop
fs
arpl
push
pop
push
je
js
cld
lea
pop
xor
push
lea
push
push
lea
push
push
call
outsl
jle
jle
je
jno
push
outsl
jo
insb
ja
ja
push
push
bound
push
arpl
jnp
bound
pop
arpl
addr16
popa
pop
pop
jge
push
pop
outsl
js
jo
pusha
push
outsl
push
jnp
push
arpl
js
jae
jae
popa
push
jl
push
pop
push
jge
pop
pop
bound
pop
arpl
popa
push
mov
lea
pop
add
push
lea
push
push
push
push
call
jg
push
fs
pop
jg
ja
push
popa
popa
jle
push
push
pop
insl
pop
je
data16
js
jns
pusha
jge
jno
je
insb
jg
addr16
pop
push
pop
push
push
popa
jo
jbe
popa
pop
jns
jns
push
insb
pop
jae
outsl
push
pusha
gs
push
push
push
popaw
arpl
pusha
jp
jae
pop
data16
jo
addr16
jo
push
mov
lea
pop
add
push
push
push
lea
push
call
jno
outsl
push
jle
push
jl
imul
data16
jo
outsl
jne
jb
fs
bound
pop
jg
push
je
jle
pop
jg
js
jge
je
jl
jl
gs
push
pop
ja
addr16
push
fs
outsb
mov
lea
pop
mov
push
push
lea
push
push
push
call
push
jno
addr16
pop
push
push
jbe
insl
pop
pop
push
push
pop
pop
outsb
pop
jnp
insb
jle
push
jbe
jg
jp
pop
pushw
push
jns
jp
jne
pop
push
push
pop
push
pop
addr16
popa
pop
imul
push
pop
jbe
outsl
outsl
jae
jbe
pop
imul
push
pop
jge
je
push
jno
jg
jb
bound
gs
push
bound
pop
xor
push
lea
push
push
lea
push
push
call
pop
pop
pop
imul
ja
imul
outsb
addr16
push
push
push
push
insb
push
push
push
push
popa
pop
jge
imul
push
pop
pop
imul
imul
pop
push
pop
outsl
pop
pusha
je
pop
push
jae
jbe
jne
push
push
pop
push
imul
pop
imul
push
pop
jne
int3
lea
pop
add
push
add
xor
dec
xor
not
inc
not
sub
pop
rep
pop
push
push
push
push
call
push
push
arpl
jg
pusha
imul
pusha
fs
push
imul
jbe
gs
push
jne
jb
addr16
push
push
push
push
pop
push
imul
arpl
pop
push
jge
ja
outsb
popa
push
pop
push
jg
pop
push
jno
jg
hlt
lea
pop
mov
push
lea
push
push
lea
push
push
call
pusha
jl
pop
jne
push
outsb
gs
jg
outsb
push
jo
jbe
imul
jo
js
push
fs
pusha
popa
push
push
push
je
arpl
push
push
pop
pop
jle
jns
jnp
jae
jge
jnp
jo
ja
pop
push
push
pop
js
ja
jnp
push
mov
lea
pop
add
push
push
push
call
pop
jns
imul
push
jne
jb
push
jae
jg
push
jno
pop
jo
jge
bound
popa
push
pop
pop
insl
jns
jle
arpl
pop
imul
imul
jnp
gs
push
insl
je
data16
push
jno
push
jns
push
insl
jo
arpl
push
jp
jg
push
push
push
push
mov
lea
pop
add
mov
xor
push
lea
push
lea
push
push
call
push
data16
push
pop
jp
jnp
pop
ja
outsl
imul
push
data16
push
pop
push
gs
jb
outsl
jae
js
push
push
jo
insb
arpl
push
pop
jnp
push
push
pop
jne
imul
insb
jbe
arpl
js
pop
pop
addr16
imul
mov
lea
pop
mov
xor
push
push
push
push
call
pop
je
data16
push
imul
popa
jb
jbe
pop
js
pop
jno
imul
push
jb
jnp
pop
popa
jb
push
js
jns
push
push
jns
jno
jb
jae
pusha
jg
pop
push
pop
data16
pop
push
gs
push
jge
jb
cld
lea
pop
mov
push
push
push
push
lea
push
lea
push
call
pop
jo
data16
arpl
jno
push
arpl
pop
jne
jne
pop
jnp
jbe
jle
jns
jb
jp
pop
fs
jp
outsl
imul
pop
insl
je
pop
insb
jg
jle
bound
push
push
pop
outsl
imul
jae
push
pop
jae
popa
mov
lea
pop
xor
push
push
call
pop
pop
push
pusha
push
imul
push
insl
js
insb
popa
jle
push
pop
jle
push
addr16
pop
jbe
gs
pop
imul
pop
jp
pop
pop
ja
imul
push
pop
outsb
jle
pop
addr16
jp
push
pop
push
jnp
push
jno
push
pop
jo
jge
jo
pop
imul
insl
push
jns
imul
mov
lea
pop
add
push
xor
dec
not
pop
add
push
push
call
push
jb
jle
push
bound
jns
pop
jno
push
ja
jbe
jae
js
jb
pop
pop
outsl
bound
push
pusha
outsl
jnp
pop
fs
jne
imul
outsl
addr16
outsl
pop
fs
jle
jnp
push
pop
jbe
insb
jb
je
jle
popa
push
bound
push
mov
lea
pop
add
mov
push
push
ror
shr
shr
mov
add
pop
push
dec
sub
lea
pop
push
push
sub
dec
sub
shl
pop
call
push
push
call
arpl
pop
insb
imul
jp
pusha
popa
jbe
jbe
pop
push
popa
push
push
pop
ja
imul
imul
push
push
bound
addr16
push
ja
push
jl
pop
insb
addr16
js
addr16
jg
gs
outsl
push
jle
jae
jo
pop
jg
push
push
pop
gs
push
pop
imul
pop
outsb
imul
xor
shl
mov
xor
xchg
push
lea
push
push
lea
push
push
call
arpl
jb
push
push
pop
insb
outsb
push
push
jg
pop
bound
popa
jle
push
push
outsl
jg
outsb
push
jne
ja
bound
jp
push
insb
addr16
pop
push
jp
jp
bound
jne
jnp
push
jno
ja
jns
pop
outsb
push
jne
jl
jg
jbe
push
pop
imul
lea
pop
push
push
push
rol
rol
add
rol
dec
ror
pop
call
push
not
add
add
add
pop
mov
push
push
push
push
lea
push
push
call
push
jg
imul
push
jle
pop
pop
push
outsl
push
push
jg
push
jnp
jnp
pop
pop
pop
jnp
push
insl
jg
jle
imul
js
pop
insl
jo
push
insb
jne
pop
insl
push
pop
imul
jns
outsb
push
int3
lea
pop
push
push
ror
ror
shl
dec
pop
push
mov
push
push
lea
push
push
lea
push
push
call
jns
push
pop
js
outsb
pop
jge
pop
jle
pop
jnp
pop
pop
pop
jns
insb
jnp
insl
outsb
push
jb
imul
outsl
pop
pusha
jg
js
fs
push
jl
jnp
jb
jb
pop
push
push
je
pop
pop
ja
jbe
jg
jb
pop
jae
cld
lea
pop
add
add
push
push
call
push
pusha
jl
jbe
push
pop
pop
pop
pop
jbe
push
bound
popa
pop
ja
jns
jge
push
push
pop
jo
pop
jo
push
jle
bound
arpl
push
push
imul
ja
jg
bound
pop
push
pop
pop
pop
bound
fs
jnp
push
lea
pop
mov
push
push
push
lea
push
push
call
gs
push
pop
jo
insl
pop
jle
push
pop
insl
pop
js
pop
push
pusha
push
push
jl
pop
arpl
insb
push
jne
arpl
pop
jl
jge
jp
push
fs
push
jg
pop
push
push
outsl
outsl
arpl
jp
push
je
jge
push
jae
imul
pop
outsb
jne
pop
pop
push
outsb
jnp
jo
jns
cld
lea
pop
xor
push
push
push
push
call
pop
addr16
push
insb
jp
push
push
pop
push
push
fs
push
pop
jb
pop
push
bound
fs
bound
jbe
pop
push
pop
pop
arpl
js
insl
insl
jae
arpl
outsl
pop
push
outsb
insl
jb
insl
pop
jg
push
jge
pop
push
fs
jne
pop
push
popa
pusha
jb
jns
push
pop
outsl
jo
push
pusha
push
insb
gs
ja
outsb
pop
outsl
data16
les
les
add
push
lea
push
lea
push
push
lea
push
push
call
jp
outsl
push
push
jns
push
imul
push
jno
js
insb
imul
pop
je
addr16
pop
push
imul
push
jg
jg
ja
jne
push
jae
pop
push
insb
jno
jb
imul
pop
jb
pop
push
pop
jp
pop
insl
push
pop
popa
insl
jbe
gs
je
mov
lea
pop
add
mov
xor
push
add
inc
sub
pop
rep
push
add
add
pop
mov
push
push
push
push
call
pop
push
jno
imul
jg
pop
bound
push
push
jb
jnp
pop
insb
jg
pop
jns
imul
ja
pop
popa
jb
gs
arpl
pop
outsb
insb
pop
pop
push
pop
push
jae
jnp
jae
pop
pop
jge
push
pop
outsb
outsb
jne
jnp
push
jne
imul
popa
pop
je
push
mov
lea
pop
xor
push
push
push
call
pusha
imul
push
data16
imul
bound
jae
jns
push
jne
pop
je
jb
jb
push
push
fs
jno
arpl
imul
jns
jl
gs
pop
imul
jo
push
push
fs
fs
pop
pop
mov
lea
pop
add
push
not
add
xor
shl
inc
pop
or
je
push
push
lea
push
lea
push
push
push
call
pop
jnp
fs
jae
jns
imul
jns
push
jg
jne
js
push
ja
insb
push
jbe
push
jge
imul
jno
addr16
jbe
arpl
ja
js
insb
jae
outsb
push
pusha
jns
push
jb
jnp
push
ja
push
push
jnp
outsb
jle
imul
pop
push
jnp
fs
lea
pop
mov
push
push
push
push
push
lea
push
call
pop
jb
arpl
insb
jno
push
jp
push
pop
push
jne
imul
pop
ja
arpl
arpl
push
push
jl
pop
imul
bound
push
je
push
push
insb
outsl
popa
pop
jl
jns
insb
outsl
jbe
pop
jb
addr16
imul
js
insl
jne
jno
push
jno
jae
pop
outsb
jns
jae
ja
cld
lea
pop
xor
push
push
push
call
push
fs
jp
jle
jns
outsb
jbe
push
push
push
jg
addr16
js
js
push
js
imul
jl
pop
pop
pop
pop
jae
jnp
js
jbe
insb
jo
insl
pop
imul
pop
pop
push
pop
pusha
jno
push
popa
push
pop
bound
outsb
data16
jl
push
outsl
jg
popa
pusha
pop
push
arpl
jl
imul
cld
lea
pop
add
push
rol
rol
rol
add
pop
mov
xor
push
push
push
push
push
push
call
imul
push
pop
jb
push
pop
jp
pop
pusha
jg
jbe
popa
gs
jp
jns
push
imul
pop
pop
jb
outsb
push
jl
push
jbe
pop
outsl
jnp
pop
imul
jg
pop
outsb
jne
push
pop
push
push
pop
pop
pop
insl
jno
outsl
push
pop
pop
push
pop
je
pop
js
pop
jnp
push
pop
jge
bound
je
les
repnz
push
push
push
push
push
call
je
pop
push
pop
push
pop
insb
pusha
bound
push
jbe
push
outsl
fs
jnp
jne
jb
js
popaw
outsb
push
pop
pop
insl
jg
insw
push
imul
jno
push
jle
jno
pop
jo
imul
arpl
addr16
insl
push
push
popa
push
outsb
outsb
gs
js
jl
jb
ja
jb
addr16
lea
pop
add
push
shl
dec
lea
inc
pop
rep
mov
xor
push
push
push
push
push
call
pop
pusha
outsb
push
jle
imul
push
jns
push
pop
jle
jo
outsb
push
pop
jo
insb
push
jns
gs
pop
pusha
jns
jnp
imul
je
bound
popa
jno
pop
jg
addr16
pusha
arpl
imul
jae
pop
jnp
pop
jbe
pop
push
pusha
ja
addr16
jae
mov
lea
pop
or
je
mov
push
push
push
push
push
call
jbe
pop
jae
pop
pop
jbe
pop
pop
jge
jge
insl
js
jb
jg
arpl
popa
push
push
push
fs
ja
jp
jae
push
jno
pop
jbe
jae
push
push
push
insb
pop
pop
outsl
outsb
push
ja
jg
js
pop
push
arpl
imul
js
jge
outsl
outsb
arpl
int3
lea
pop
add
push
pop
rep
pop
push
shr
add
sub
add
mov
sub
xchg
push
push
call
push
push
pop
jnp
pop
pusha
bound
arpl
jp
pop
pop
jno
pop
pop
insb
push
je
jle
imul
pop
pop
jp
pop
insl
pop
push
bound
pop
jne
jae
js
pop
outsl
bound
jns
pop
jno
pop
pop
fs
pop
jnp
jp
bound
lea
pop
pop
push
rol
rol
pop
mov
jmp
push
push
push
push
lea
push
push
call
push
fs
insl
imul
pop
js
push
pop
jl
addr16
ja
push
insl
pop
jo
popa
fs
jae
push
pop
push
jl
push
addr16
pop
jbe
jg
push
jg
push
push
jp
insl
jno
insb
push
pop
imul
pop
pop
gs
pop
jg
outsb
fs
pop
arpl
push
jp
push
arpl
pop
push
push
shl
not
not
inc
not
dec
pop
mov
push
push
push
call
push
js
push
push
push
pop
jge
popa
pop
push
pop
jno
push
gs
push
outsl
jo
pop
jnp
push
push
jle
imul
jns
jo
jge
je
jge
push
push
jbe
ja
insl
jb
push
push
jns
jnp
gs
push
jb
jo
push
push
jb
jno
jae
data16
outsb
jnp
jg
jbe
fs
pop
jg
je
les
cld
push
inc
sub
rol
pop
push
push
push
lea
push
call
jp
pop
jne
push
jns
push
jne
push
pop
jg
pop
bound
pop
data16
jp
jp
pusha
jge
outsl
jp
pop
gs
push
insl
bound
arpl
addr16
gs
pop
insl
jno
data16
jns
push
insl
jns
pop
popa
pop
jb
fmull
push
shr
shl
rol
ror
rol
sub
pop
push
push
push
push
push
push
call
ja
arpl
pop
push
pop
bound
jge
jg
bound
je
jb
imul
fs
push
jle
insb
pop
pop
jne
imul
jge
jp
pop
jne
pop
jne
push
jae
jge
jbe
push
pop
pop
outsl
jns
push
mov
lea
pop
push
push
push
lea
push
call
push
jl
js
jbe
jge
data16
pop
jae
js
imul
pop
imul
jo
push
pop
push
fs
pop
ja
jbe
jno
fs
jns
pop
push
jp
push
jnp
bound
jl
pop
gs
arpl
push
jnp
arpl
push
jne
pop
imul
int3
lea
pop
mov
push
dec
ror
pop
mov
push
push
call
pop
insl
fs
push
jp
jno
js
pop
outsb
outsl
imul
jbe
jnp
push
push
pop
addr16
jg
jge
jg
jnp
jle
jp
pop
pop
jnp
push
jbe
outsb
gs
arpl
gs
push
js
push
push
pop
pop
push
insl
popa
jno
pop
push
jge
int3
lea
pop
add
push
lea
push
push
push
push
call
pushaw
popa
pop
pop
push
imul
jg
arpl
pop
push
gs
push
bound
push
jge
addr16
push
insb
bound
insb
push
jns
arpl
jb
jo
bound
push
jae
jnp
jp
ja
pop
push
jne
pop
pop
push
jbe
push
push
outsl
pop
jo
push
pop
jo
jle
jno
jne
pop
mov
lea
pop
mov
push
lea
sub
add
shr
sub
pop
add
push
push
push
push
push
push
call
jp
push
jge
pop
pusha
push
jae
imul
pop
pop
jo
jno
pop
push
jg
pop
outsl
pop
insl
jae
pop
jo
jl
push
addr16
push
jb
push
pusha
push
pop
insb
outsb
pusha
arpl
jne
pop
je
push
pop
pop
bound
arpl
data16
pop
pusha
jge
pusha
imul
ja
jp
hlt
lea
pop
mov
push
dec
add
dec
dec
pop
add
xor
push
sub
xor
dec
dec
lea
pop
mov
xor
push
dec
lea
sub
ror
pop
rol
push
shr
ror
add
ror
sub
pop
xor
inc
push
push
push
call
push
jl
insb
data16
pop
push
pop
pop
jns
outsl
pusha
insb
jo
imul
pusha
imul
jb
push
push
fs
arpl
push
pop
pop
pop
pop
pop
pop
jb
pop
data16
je
jo
push
pop
push
jbe
jp
pop
js
jp
pop
push
pop
push
insl
push
js
outsb
push
push
push
fs
lea
pop
cmpb
jne
cmp
je
push
lea
not
dec
lea
ror
pop
add
push
push
push
push
lea
push
call
push
jno
arpl
push
push
jl
outsl
push
insb
pop
jo
pop
jns
je
push
push
jae
jg
outsl
jl
push
push
addr16
jl
jns
fs
arpl
outsl
addr16
data16
push
jg
fs
pop
jle
pusha
pop
jnp
pop
js
push
jne
push
insb
pop
imul
lea
pop
cmpl
jne
xor
push
sub
inc
xor
pop
pop
push
push
push
call
pop
push
je
jp
jbe
jne
push
pop
fs
pop
push
push
js
jge
popa
bound
data16
jo
pop
insb
pop
pop
push
jne
jae
pop
push
insb
pop
jle
pop
pop
outsl
ja
pop
pop
jb
arpl
jl
push
outsb
jno
outsl
popa
jbe
outsl
imul
pop
push
lea
push
push
lea
push
push
push
call
jp
insb
imul
pop
pop
arpl
jne
jnp
pop
imul
gs
outsl
pop
bound
jne
push
push
jp
gs
pop
jae
push
pop
jns
push
jb
jno
push
insl
push
push
outsl
jne
push
imul
jne
pusha
jno
pop
jnp
pusha
jp
jne
jae
jo
pusha
mov
lea
pop
pop
push
push
push
call
pop
imul
fs
imul
push
pop
jae
push
js
js
jl
imul
jg
push
push
outsb
push
je
fs
pop
jb
jo
push
jp
imul
push
jb
fs
jne
mov
lea
pop
pop
push
push
push
push
push
call
data16
addr16
jg
jne
jb
push
jae
jb
gs
fs
pop
jp
push
js
push
pusha
arpl
jp
pop
jne
outsb
jne
jge
pop
gs
push
insb
pop
ja
popa
pop
pop
push
push
push
gs
pop
jae
pop
jp
imul
pop
push
sub
shr
sub
pop
leave
push
lea
push
lea
push
call
push
jbe
pop
jno
pop
outsl
arpl
push
jbe
pop
jle
addr16
outsb
outsb
jg
pusha
pop
je
push
jno
pushw
push
pop
push
ja
pop
bound
outsl
pop
jg
push
js
fs
jp
jbe
insl
popa
push
pop
data16
addr16
pop
jge
pop
popa
js
pop
push
mov
lea
pop
ret
push
push
lea
push
call
jge
jae
push
jnp
imul
pop
push
jne
pop
jns
pop
jge
pop
pop
ja
pop
push
push
push
pop
jbe
pop
data16
popa
bound
pop
data16
push
gs
jl
jle
pop
imul
push
jo
pusha
push
pop
push
push
pop
mov
lea
pop
mov
add
push
push
lea
push
call
fs
push
insl
push
insl
insb
pop
push
push
jl
push
bound
push
push
push
push
imul
outsl
jp
fs
push
jnp
push
jne
jl
push
pop
jno
je
push
push
pusha
pop
jne
outsl
jo
jbe
insb
jg
push
pop
imul
arpl
mov
push
ror
inc
shl
pop
push
push
dec
inc
xor
ror
rol
add
shl
pop
call
push
push
push
lea
push
call
imul
imul
jbe
ja
pop
jle
pop
pop
jg
outsl
push
push
jg
push
imul
jns
jp
gs
insl
jno
push
fs
push
jle
pop
push
pusha
addr16
push
jle
arpl
pop
pop
jb
gs
push
jle
jle
jg
popa
mov
lea
pop
xor
pop
push
push
push
push
call
jne
push
outsb
jno
jno
push
push
push
jp
insl
jl
push
pop
jg
pop
pusha
push
push
jbe
pusha
push
jb
jno
ja
imul
jo
jnp
je
js
je
pop
outsb
push
pop
jb
jg
outsb
bound
insb
imul
je
bound
push
pop
bound
pop
mov
lea
pop
pop
pop
push
push
push
push
lea
push
lea
push
call
outsb
insb
bound
push
popa
insb
jl
jp
je
imul
push
jbe
push
push
jo
push
js
je
gs
jno
bound
push
fs
pop
ja
push
pop
imul
pop
jl
push
pop
imul
jno
jno
js
push
jg
outsl
ja
push
pop
push
popa
jo
pop
push
pop
mov
lea
pop
pop
pop
push
lea
push
lea
push
push
push
push
call
fs
imul
data16
gs
fs
jp
jae
jns
pop
insb
pop
push
fs
jne
pop
jle
pop
push
jns
pop
jo
pop
data16
outsl
bound
jb
push
jp
pop
pop
push
push
outsl
insb
pop
imul
imul
bound
mov
lea
pop
leave
ret
push
lea
push
push
call
push
jne
jne
jnp
pop
jns
pop
pop
fs
jns
push
jns
push
pop
pop
imul
push
fs
jae
push
push
jno
pop
push
bound
jl
imul
push
outsl
jge
jae
pop
insb
push
push
push
jge
je
gs
push
jg
pop
arpl
mov
lea
pop
push
push
push
push
push
push
call
push
insl
je
bound
je
je
imul
outsb
jns
pusha
pop
addr16
pop
push
outsb
pop
jnp
jg
push
jle
bound
push
pop
arpl
jno
jb
pop
push
push
jge
jbe
push
pop
jae
jno
pop
jne
jns
push
push
gs
js
ja
bound
pop
jns
pop
pop
push
pop
jge
push
hlt
lea
pop
mov
push
shr
dec
pop
cmpl
jne
push
sub
lea
ror
add
not
add
pop
mov
jmp
push
ror
inc
ror
xor
rol
shr
add
pop
mov
push
push
push
lea
push
push
call
jb
pop
fs
js
js
outsb
jnp
js
push
push
imul
pop
pop
arpl
data16
imul
pusha
addr16
jl
insb
gs
jle
imul
fs
pop
pusha
js
outsl
arpl
insl
je
jne
outsl
pop
jnp
push
mov
lea
pop
and
push
push
push
push
push
call
jbe
insb
imul
jns
data16
imul
pop
jl
push
imul
ja
imul
jb
insb
jl
bound
insl
addr16
jae
pop
jge
bound
jbe
bound
push
outsl
pop
push
pop
pop
push
pop
arpl
jg
addr16
fs
data16
jge
push
jl
pop
pop
outsb
push
pop
outsl
insl
jnp
bound
push
jnp
mov
lea
pop
pushl
pop
push
push
push
push
push
push
call
bound
outsl
push
popa
fs
jle
gs
jl
outsb
push
push
jp
imul
push
pop
jae
push
pop
je
imul
outsb
jle
push
jae
push
push
fs
pop
push
jbe
insl
pop
pop
push
pop
pop
push
popa
pop
pop
push
outsl
push
jbe
popa
addr16
push
push
push
jne
push
jle
les
jmp
jmp
push
sub
pop
sub
push
push
push
call
jg
push
jns
jno
jbe
jg
push
jno
jns
pop
pop
popa
jns
arpl
addr16
push
push
insl
insl
jne
push
pop
jge
insb
js
push
jno
jno
jl
pop
outsl
outsb
jne
push
pusha
jno
jle
pop
insb
jle
jle
push
insl
push
outsb
push
jne
jl
push
mov
lea
pop
pushl
push
push
call
jge
jne
pop
jne
pop
insl
jbe
push
jne
popa
push
push
insb
bound
bound
push
push
pop
jns
push
jne
insb
jo
jae
pop
arpl
insb
pop
jno
push
addr16
pop
pop
jne
jl
jnp
push
pop
ja
jae
ja
jle
push
pop
pop
pop
outsl
imul
jns
pop
jae
mov
lea
pop
pop
sub
push
push
push
push
call
pop
jo
js
bound
pop
imul
push
fs
push
jae
jge
jb
push
jb
jns
push
push
push
jo
jl
jnp
pop
outsb
js
bound
push
pop
push
jle
pop
jo
push
jne
je
push
pusha
arpl
push
imul
popa
jg
imul
pop
cmp
jne
mov
push
push
push
call
pushaw
jo
pop
jno
arpl
jae
jg
pop
push
imul
outsb
push
jne
push
imul
pop
jge
pop
jnp
je
jno
push
push
ja
ja
push
push
insb
ja
jbe
outsl
jle
insl
push
arpl
jl
jae
pop
bound
je
gs
pop
pusha
push
arpl
ja
jle
push
jl
jg
imul
jns
cld
lea
pop
add
push
push
call
popa
jbe
pop
pop
data16
push
push
insb
jp
push
push
insb
ja
push
popaw
ja
ja
jp
outsb
jne
jns
jnp
outsl
js
push
je
pop
jg
fs
je
push
arpl
imul
jnp
jno
insl
pop
gs
fs
insl
jb
pop
push
jge
ja
outsb
mov
lea
pop
movzwl
push
push
push
call
ja
ja
imul
jp
jae
push
gs
js
gs
push
push
push
jnp
push
jle
insb
pusha
push
insl
js
jne
arpl
pop
pop
jbe
pusha
data16
pop
insb
jp
jo
push
fs
jns
push
bound
ja
arpl
insl
js
push
jg
fmull
jmp
cmp
jne
push
push
push
call
imul
push
ja
gs
outsl
pop
jle
ja
arpl
addr16
push
push
pop
pop
push
outsb
imul
addr16
pop
pop
jb
jnp
jo
pop
popa
jae
gs
push
jo
je
bound
push
jg
jns
push
jl
push
jge
push
arpl
push
jae
fs
addr16
outsb
pop
push
gs
pop
push
addr16
jnp
jns
mov
lea
pop
leave
ret
push
lea
push
lea
push
push
call
bound
jle
js
push
gs
imul
pop
push
push
push
pop
data16
bound
pop
jp
outsb
jnp
js
push
js
jns
push
pop
fs
pop
jne
ja
jnp
push
pusha
js
data16
outsb
jle
gs
pop
fs
push
ja
push
jbe
outsb
push
push
insl
push
jp
jbe
data16
jnp
hlt
lea
pop
push
push
add
sub
not
sub
pop
mov
add
push
rol
xor
pop
push
push
push
add
ror
not
shl
not
dec
pop
push
push
push
call
jl
push
jnp
jl
outsl
imul
pop
outsl
arpl
pop
push
js
pop
gs
push
arpl
jle
push
jno
ja
pop
fs
imul
pop
ja
push
push
push
outsb
popa
push
imul
jg
bound
jnp
jne
jns
addr16
push
push
push
jnp
push
addr16
jne
cld
lea
pop
push
push
lea
xor
pop
mov
push
rol
pop
push
push
xor
inc
add
sub
add
add
pop
pop
mov
push
push
call
jb
jns
push
pop
push
push
pop
push
gs
imul
pusha
push
push
push
jo
push
push
pop
outsb
jg
push
push
imul
jne
pop
insl
push
push
pop
pop
push
fs
popa
pop
jl
pop
jb
je
imul
jne
push
je
jns
jle
pop
pop
jle
outsb
insl
jno
mov
lea
pop
add
mov
push
push
push
push
push
call
pop
popa
je
jge
push
insb
insl
imul
push
jnp
push
insb
jns
insb
push
pusha
imul
je
imul
js
ja
popa
pop
jp
pop
pop
bound
pop
popa
jne
data16
js
outsl
pop
imul
push
bound
mov
lea
pop
add
push
sub
ror
inc
shr
sub
xor
pop
pushl
push
inc
add
inc
add
sub
pop
popl
push
lea
push
push
push
call
pusha
jb
jnp
pop
arpl
outsl
jo
jae
push
pop
bound
pop
jbe
jp
jnp
ja
push
push
jl
jns
push
outsb
imul
pop
jo
push
jae
ja
jnp
pop
push
pop
jge
jbe
bound
jae
insb
jo
pusha
pop
push
push
outsl
pop
jl
mov
lea
pop
mov
add
push
push
push
push
call
bound
pop
push
jge
push
pop
jo
data16
outsl
push
imul
pop
jb
pop
jle
jo
pop
push
push
imul
data16
jb
push
outsl
jge
jns
pop
jp
imul
jbe
pop
bound
pusha
jae
pusha
outsl
jp
jns
ja
jle
pop
jnp
push
outsl
mov
lea
pop
xor
push
sub
inc
pop
lea
push
push
lea
push
push
lea
push
lea
push
call
push
jb
je
pop
push
pusha
jl
insb
data16
pop
outsb
push
pop
je
addr16
imul
jo
js
outsl
push
js
outsl
jl
ja
addr16
push
push
imul
jne
pop
jno
push
jns
push
push
jne
insb
pop
insb
pop
jo
arpl
push
insb
outsb
addr16
lea
pop
mov
add
push
push
push
push
push
push
call
push
outsb
push
push
insb
pop
jno
pop
jge
je
data16
insb
pop
jge
push
pop
jge
pop
jae
jbe
push
push
bound
pop
pop
push
jbe
push
js
push
jns
jle
fs
jae
insl
jge
arpl
jg
jg
jb
pop
pop
pop
pusha
push
push
pop
pusha
popa
jge
pop
push
fs
jbe
pop
gs
mov
lea
pop
xor
push
dec
rol
xor
pop
rol
nop
push
push
push
push
call
bound
push
jg
push
bound
arpl
jle
pop
jp
imul
jl
push
jno
jg
pop
push
push
pop
outsl
bound
push
arpl
fs
js
fs
insb
push
pop
jbe
insb
pop
jnp
gs
imul
jno
mov
mov
lea
push
push
call
outsl
pop
imul
insb
bound
jns
jge
insl
imul
jle
popa
push
je
pop
push
insb
js
je
insb
pop
jae
jno
pop
jne
pop
push
push
jne
pop
push
jno
jg
push
jle
pop
pusha
jns
jg
push
pop
push
insl
jg
pop
imul
pusha
adc
xor
nop
push
not
xor
dec
pop
nop
push
rol
add
pop
inc
push
shl
shl
pop
nop
nop
push
push
push
lea
push
call
jno
push
pop
jo
je
pop
push
popa
jl
jg
push
js
push
imul
ja
push
push
outsl
imul
pop
push
jp
push
pop
outsb
push
jns
jnp
jg
pop
jl
outsl
imul
jno
js
jle
jns
jg
jl
push
imul
pop
jp
ja
outsb
push
pop
jle
jns
ja
push
pop
mov
lea
pop
cmpb
jne
push
add
sub
shr
shr
not
ror
sub
rol
pop
nop
nop
push
add
pop
cmp
je
nop
push
lea
push
lea
push
lea
push
push
call
fs
pop
push
insl
jb
jp
pop
jae
imul
outsl
js
pop
popa
pop
pop
push
jae
jb
push
pop
pop
pop
js
jb
fs
jg
push
outsb
pop
pop
push
jg
push
pop
ja
jbe
push
push
push
bound
jg
push
popa
jno
jo
jg
push
jo
push
pop
jbe
imul
pop
pop
jge
mov
lea
pop
nop
inc
push
add
ror
sub
dec
xor
add
pop
nop
push
push
push
push
push
push
call
jp
push
insb
jns
je
push
push
push
jl
push
push
addr16
addr16
pop
push
bound
pop
push
jg
addr16
insb
insb
pop
jl
push
pop
jb
jns
jne
push
jb
jo
insl
push
insb
jnp
imul
bound
outsb
addr16
push
jno
hlt
lea
pop
nop
cmp
jb
push
sub
pop
mov
push
lea
push
push
push
call
jle
jne
jp
outsb
jne
push
pop
push
outsl
jl
outsl
push
push
pop
jp
jno
addr16
outsb
pop
push
gs
pop
jns
popa
pop
push
pop
outsl
ja
pop
fs
pop
jne
jle
push
outsl
jns
jg
push
jo
fs
push
outsl
jg
bound
push
pop
jbe
js
pusha
outsb
jo
push
push
outsb
pusha
insb
gs
je
mov
lea
pop
add
push
shl
pop
movzwl
push
lea
push
call
pop
ja
ja
push
outsb
insb
js
addr16
jbe
pop
push
pop
pop
push
push
insb
js
push
push
jae
push
imul
push
push
jbe
je
jle
arpl
push
pop
jno
pop
ja
jge
pop
pusha
bound
jge
jg
pop
pop
jb
imul
jns
outsl
push
jl
pop
push
pop
pop
jnp
pop
pusha
js
mov
lea
pop
mov
push
push
push
call
push
jns
pop
arpl
push
pop
pop
je
pusha
js
fs
push
push
jl
js
insl
jb
insl
pop
pusha
fs
pop
pop
jbe
pop
pop
outsb
pop
insb
js
jo
jbe
push
addr16
bound
imul
jnp
outsb
jae
jp
push
jge
insb
pop
imul
fs
mov
lea
pop
add
push
push
push
lea
push
push
call
push
push
pop
ja
pop
pop
imul
outsl
push
jae
push
push
pop
pusha
data16
jnp
insb
pusha
pusha
jb
jle
jbe
jbe
push
push
pop
push
ja
jne
pop
insl
pop
push
pop
push
ja
jne
push
jge
jl
arpl
pusha
pop
je
push
bound
les
add
push
lea
push
lea
push
push
call
jbe
jge
pop
jno
pop
push
pop
imul
imul
pop
insb
outsb
imul
outsl
addr16
jp
push
js
jo
ja
imul
push
ja
pop
pop
jge
pop
bound
push
popa
fs
pop
gs
jl
pop
push
outsl
outsb
push
jo
jnp
pop
jge
pop
jge
bound
insl
pop
pop
imul
push
push
mov
lea
pop
add
push
xor
inc
dec
rol
shr
pop
pop
push
push
call
push
push
jg
jge
push
pop
jno
push
popa
push
push
jp
pop
jg
gs
jne
jb
pop
pop
pusha
pop
pop
js
insb
pop
jnp
jl
jne
push
push
imul
pop
jae
pop
bound
jns
insb
jb
jo
jb
imul
jno
pop
outsl
pusha
push
popa
push
mov
lea
pop
pop
push
push
lea
push
lea
push
call
jns
outsb
jle
pop
jo
jne
push
jge
outsl
jge
pop
push
push
addr16
jns
push
pop
arpl
jbe
pop
jb
outsl
push
push
imul
jns
js
jno
push
popa
jbe
push
outsb
push
pop
pop
push
jl
imul
insb
push
pop
jne
push
pop
outsl
pusha
outsb
jo
insl
outsb
imul
imul
lea
push
call
push
bound
pop
pop
push
pop
pop
insb
pop
push
push
jns
push
push
jae
bound
jnp
jge
je
pop
push
pop
fs
imul
pop
jae
push
je
insl
jne
pop
push
outsb
jb
push
jge
jb
jno
push
push
jl
bound
insl
push
jo
pop
jnp
push
mov
lea
pop
leave
push
add
sub
pop
ret
or
push
add
cs
add
mov
push
add
fsts
or
push
add
push
add
imul
and
cmpsl
pop
daa
aaa
mov
cmpsl
pop
cwtl
xorb
jecxz
or
mov
mov
addl
jmp
xor
in
stc
cld
fdiv
cmp
mov
in
fwait
sti
insb
xor
jne
int3
imul
push
test
cld
pop
add
gs
jp
lret
out
daa
mov
cwtl
mov
aas
xchg
sub
jg
mov
dec
cmp
rep
clc
sub
sub
loopne
inc
push
in
add
cmp
outsb
out
mov
out
pop
pop
adc
xchg
add
test
and
mov
outsb
or
movsl
movsl
and
adc
mov
mov
inc
enter
fs
jg
lea
loopne
push
imul
xchg
loopne
dec
dec
sbb
push
mov
push
arpl
in
in
aam
repnz
lcall
test
repnz
adc
ret
rcr
push
lods
mov
dec
fisubrl
mov
adc
ja
dec
js
sarb
pop
fadds
push
pop
nop
and
xchg
daa
pushf
arpl
cld
dec
xchg
in
pusha
insb
scas
sub
push
ljmp
imul
dec
xchg
ljmp
fs
ljmp
nop
adc
dec
les
sarb
pop
repz
outsb
dec
and
stos
and
jg
mov
fs
xorb
xor
movsb
scas
mov
and
shr
inc
fnstcw
fwait
lds
test
inc
sbb
xchg
push
test
jae
cmp
pop
and
sub
mov
negb
dec
mov
cltd
je
mov
repnz
mov
imul
push
jle
adc
cmc
or
xchg
test
xor
sub
in
mov
mov
and
xchg
nop
stos
cld
and
insl
add
adc
call
mov
jl
lcall
loop
sbb
mov
adc
loope
push
sbb
mov
xor
cmp
mov
imul
sbb
pop
fisttpl
lret
fstp
xlat
mov
aaa
sbb
lea
jecxz
push
nop
das
aam
lea
daa
cwtl
cmc
mov
mov
jnp
jno
movsb
and
inc
xlat
ljmp
and
outsb
scas
pop
mov
mov
aad
cli
mov
sbb
and
add
adc
rcl
push
pop
fwait
mov
lret
mov
mov
faddp
loope
cmp
and
push
xchg
add
rolb
sbb
lret
xor
cli
or
pop
mov
addr16
pushf
xchg
ss
sub
test
and
cld
xor
mov
mov
mov
xor
jle
ror
xchg
insl
mov
insl
int
push
test
ljmp
dec
fnsave
ljmp
dec
or
pop
test
mov
decb
and
mov
inc
sahf
pusha
dec
hlt
aam
ds
or
mov
mov
push
lods
es
mov
push
inc
fwait
cmpsb
sti
mov
pop
jnp
ss
icebp
xor
jmp
cld
cs
adc
hlt
mov
jno
cmp
ret
adc
sahf
inc
pop
mov
dec
cmpsb
daa
sub
dec
mov
cmp
mov
cmp
inc
push
dec
pop
pop
imul
push
dec
cmpsl
mov
xlat
jmp
std
lods
pop
sbb
push
xor
mov
sub
frstor
enter
dec
pop
xor
and
out
inc
or
ficomps
mov
ret
pop
ds
hlt
mov
in
or
lds
clc
push
jbe
mov
arpl
test
fsubrl
mov
xor
xchg
dec
jo
dec
inc
dec
push
insl
mov
das
jne
adc
xchg
xorb
cltd
and
cmc
aaa
cmpsb
sbb
jae
mov
andb
push
popa
sub
add
or
rolb
add
mov
cmp
loopne
adc
mov
sub
rorb
xor
xchg
pusha
xchg
jno
xchg
xlat
cwtl
jae
repnz
std
out
mov
inc
mov
inc
psrlq
or
and
xlat
insb
cmp
sbb
xchg
addr16
dec
icebp
and
mov
inc
jl
cmc
xchg
pusha
out
mov
out
cmp
xlat
sbb
cmp
pop
imul
xorb
and
outsb
pop
or
pop
fimuls
and
popa
sbb
testl
xchg
mov
bound
jnp
icebp
shll
push
pop
push
out
or
xor
mov
aas
jle
push
jb
aas
mov
jnp
ss
fildl
jge
push
test
js
test
push
push
pop
inc
push
insl
adc
lret
mov
imul
xchg
sbb
es
and
popa
aam
push
pop
inc
mov
mov
sbb
sbb
test
mov
adc
cmp
insl
add
test
lods
daa
mov
sbb
dec
fsin
xor
stos
push
iret
xchg
sti
bound
and
mov
adc
int3
pop
adc
inc
inc
dec
aad
pushl
call
sub
adc
pop
cltd
add
xor
mov
and
add
sbb
jo
lods
cmpsl
or
in
jmp
repnz
mov
ja
mov
bound
rorl
pop
sbb
sbb
sbb
int3
mov
int3
or
ficoml
repz
jnp
fs
call
ret
jmp
lahf
xchg
inc
dec
shll
roll
rcl
mov
fstpl
leave
xchg
das
test
jae
xor
or
in
dec
mov
data16
dec
scas
loop
cmp
jp
or
mulps
pop
jp
mov
imul
shlb
adc
scas
mov
push
or
and
mov
pop
imul
int
loop
ss
repnz
fiaddl
pop
faddl
cmp
insl
rorl
sbb
pusha
push
je
cli
sub
adc
ret
add
pop
test
push
stos
lods
xor
push
movsl
fs
insb
enter
cmpsl
lahf
push
mov
cmp
push
out
pop
or
ficoml
mov
bound
cmpsl
lret
insl
cmp
daa
xchg
pop
inc
xchg
xlat
aas
jno
into
cwtl
pop
dec
mov
and
adc
add
jne
inc
loop
xor
pop
outsl
mov
mov
repz
std
and
cmpsb
stc
mov
stc
in
test
pop
movsb
cmp
outsl
adc
stos
je
pop
enter
push
adc
mov
clc
add
sub
or
sbb
sti
mov
sbb
add
mov
mov
cmp
jo
push
jl
into
test
cmc
aam
ja
pop
dec
and
cmp
pop
das
out
push
jb
scas
xchg
lahf
mov
icebp
adc
cmp
ret
lock
fldl
cmpsl
das
pop
jno
shrl
mov
cmp
xlat
sti
repz
mov
imul
nop
adcl
in
mov
out
pop
pop
hlt
call
test
mov
mov
outsl
xor
sub
insb
push
loopne
pop
test
cmp
add
fdivr
popa
pop
add
mulb
push
mov
imul
addr16
and
stc
mov
push
mov
push
inc
mul
repz
clc
jmp
mov
jb
add
push
pop
mov
into
cmp
cmp
jg
into
dec
ds
xlat
push
movsl
push
mov
lea
mov
jl
notl
mov
mov
leave
andb
mov
fisubl
call
xchg
jecxz
flds
dec
add
cmp
xchg
negl
xor
pusha
mov
mov
mov
pop
or
fmull
sti
sub
clc
push
shll
fisubrs
mov
sub
lods
pushf
sub
lret
scas
and
add
out
popf
add
inc
cmp
stos
xor
jle
cld
jmp
stos
cwtl
cmc
adc
push
shrb
or
bnd
sbb
push
inc
and
or
data16
clc
jle
xchg
pop
adc
lahf
adc
loope
fsubl
dec
fildll
dec
clc
pop
lea
stos
rcrb
jbe
push
xchg
jne
adc
popf
pop
dec
mov
dec
mov
cs
icebp
jne
lret
push
and
mov
ss
mov
in
cmpsb
sub
dec
movsb
fiadds
inc
cmp
sbb
scas
shl
pop
adc
cmp
ret
pop
jno
pop
insl
rcrb
movsl
ds
push
xor
xor
xor
or
mov
mov
lret
inc
aad
stc
mov
and
lock
sbb
adc
xchg
scas
jb
int3
lea
mov
and
xor
lods
leave
mov
ss
out
lcall
cmp
xor
ja
imul
stos
nop
cld
mov
adc
sti
repz
xlat
jl
stos
loop
adc
cmc
leave
les
iret
jnp
sbb
push
mull
scas
popf
ret
jmp
shl
mov
jg
add
sahf
daa
test
dec
inc
fwait
out
notl
lret
in
sub
iret
loopne
stos
and
push
test
lahf
movsb
adc
test
ss
sbb
or
sub
repz
sub
out
dec
jp
das
push
stc
cli
cmp
fistpl
add
aaa
xchg
cmp
mov
jp
pop
adc
xchg
inc
andb
pop
dec
enter
mov
cwtl
dec
sbb
sub
mov
mov
add
cmp
xor
push
rorl
nop
cwtl
sarb
xor
repnz
or
xor
mov
or
mov
inc
ds
cli
jp
imul
and
ds
push
sub
mov
int
mov
mov
scas
add
lods
xor
xchg
out
sbbb
mov
pushf
mov
add
imul
inc
movsb
int3
add
push
outsl
cs
or
bound
imull
shrl
sub
adc
jg
dec
call
in
sub
es
add
ljmp
push
dec
inc
xor
dec
les
adc
jae
sarb
ss
mov
jl
xlat
xchg
mov
push
arpl
adc
adc
js
fnstsw
push
or
cmpsb
test
and
lret
bound
sbb
or
fs
mov
je
and
or
cmpsl
mov
cmpsl
push
push
inc
push
dec
adc
aam
mov
popf
es
adc
out
inc
push
mov
cbtw
sub
lret
fs
addr16
and
jp
add
leave
jnp
icebp
cs
add
es
out
push
negb
cmp
lret
or
je
adc
lcall
cmpsb
ljmp
in
gs
jge
lcall
pusha
add
adc
aas
ds
adc
inc
fcomps
adc
jg
jg
push
mul
xchg
cli
aas
push
or
jns
in
outsl
lods
lcall
cli
pop
fucomi
arpl
sbb
mov
jl
rcl
and
mov
xchg
lret
pop
ret
std
push
rcl
mov
jb
sbb
mov
mov
daa
pop
movsb
jbe
scas
xor
mov
jne
xchg
jb
sbb
popa
movsb
lcall
and
pop
sbb
les
fsubrs
orl
inc
mov
bound
adc
aas
adc
jp
adcb
in
jge
ret
fld
xchg
adc
and
nop
add
mov
mov
add
sub
popf
xchg
and
popf
pop
repnz
dec
cmpsl
dec
pop
xor
lcall
mov
xor
pop
jle
fwait
xchg
cmp
out
push
aaa
leave
adc
mov
clc
in
inc
inc
xor
fcmovnu
dec
cld
add
or
xchg
xchg
sbb
cmp
ficoml
dec
test
mull
movsb
mulb
ss
add
inc
dec
psrlq
aas
clc
push
push
out
outsb
dec
pop
add
ds
rorb
mulb
popa
push
mov
or
mov
stos
cwtl
test
lds
mov
push
push
xchg
adc
cld
push
ret
in
add
xor
arpl
stos
push
inc
cld
shll
fs
push
in
bound
fisttpll
push
js
pop
sti
push
or
or
or
es
xlat
mov
cmp
sub
orb
scas
sbb
push
mov
mov
mov
cld
xor
push
stos
cmp
stc
push
loop
pop
insl
out
sti
fisubrl
mov
daa
mov
sbb
in
jb
popa
ficomps
add
ja
sbb
leave
jp
adc
ljmp
jnp
fisttps
pop
fs
sbb
ror
lea
add
xor
sub
addr16
jecxz
out
xchg
movsl
and
in
test
jne
push
push
dec
stos
lret
xor
lret
sbb
call
ds
mov
sbb
push
leave
adc
outsl
sbb
pushf
push
roll
add
cmpsb
and
inc
adc
icebp
fcomps
movsl
add
movsb
rclb
sti
lea
jl
ret
pop
xor
popa
pop
xchg
inc
mov
jae
xchg
sbb
outsl
push
cli
fs
mov
xchg
mov
ljmp
subl
lods
xor
push
mov
xchg
xchg
xchg
mov
xlat
xor
xchg
out
jmp
inc
insl
inc
xchg
sub
push
xchg
fldenv
fs
xor
xchg
dec
or
imul
outsb
addr16
fimull
idivb
mov
jnp
inc
sbb
push
negb
or
dec
lock
insb
fnstcw
sub
adcb
lods
in
sbb
adc
fbstp
and
movsb
jno
xchg
push
jmp
fsts
dec
xchg
in
sbb
or
mov
fildll
dec
sub
bound
sub
lcall
mov
pop
pop
divb
jl
cmp
test
sar
ret
loope
mov
mov
iret
push
sbb
ds
lds
jb
sub
jb
and
out
jo
mov
xor
lcall
cmp
mov
sbb
push
ss
xchg
lds
pop
mov
test
mov
xchg
jne
jmp
lds
jg
je
jne
cmp
inc
jae
xchg
popa
fwait
mov
and
mov
add
fimull
xchg
fs
test
pusha
push
mov
lods
jne
stc
fistpl
leave
sub
adc
pop
mov
jb
insl
push
in
cmp
and
adc
pushf
fwait
sbb
push
dec
fsubs
mov
jne
aaa
dec
mov
dec
inc
add
imul
inc
add
inc
mov
movsl
mov
movsb
mov
pop
jl
test
rcrl
xor
dec
xchg
ja
shl
xorl
repz
pop
dec
movsb
in
mov
mov
test
adc
in
cmp
sub
or
cmpsl
fs
xchg
jae
cmpsb
xor
lcall
pushf
roll
cltd
test
jns
add
je
inc
cmc
xor
loop
push
pop
cmp
xlat
in
push
or
xchg
mov
fcompl
nop
mov
jmp
or
or
mov
jge
jle
lret
and
mov
lret
shlb
sbb
dec
cmp
inc
jb
popa
int
jae
rcrb
pop
adc
dec
out
pushf
pop
dec
and
pop
out
cmpsl
sub
in
inc
xchg
or
xor
mov
mov
mov
roll
sahf
xchg
ffreep
ret
pop
cmpsl
mov
enter
mulb
das
sub
inc
mov
sub
loope
or
sbb
mov
cmp
mov
mov
jns
adc
insb
pop
rcrb
or
stc
bound
push
fsubp
xchg
leave
stc
xor
jbe
adc
dec
push
or
inc
stos
push
aad
pushf
sub
inc
iret
mov
mov
outsl
push
scas
imul
adc
add
repz
inc
mov
in
testl
mov
adc
xor
xor
and
gs
dec
push
dec
mov
das
imul
push
fcomi
stos
jb
sti
shlb
rcll
das
ds
push
inc
jnp
aas
imul
insl
mov
xchg
ss
rcl
mov
pop
fldl
stos
push
mov
push
in
sub
mov
push
int
push
push
cmpl
cwtl
je
clc
outsl
adc
movsb
das
loope
test
clc
lahf
pop
stc
push
xor
lea
cli
pop
dec
cmpsb
mov
sbb
jns
mov
das
xor
sarb
invd
icebp
cmp
repz
jmp
jp
movsb
cmp
jl
pop
mov
in
aas
ret
pop
repz
movsb
inc
jg
scas
lret
mov
in
adc
pop
stos
xchg
adc
and
mov
scas
pop
jg
fldl
fiaddl
jbe
adc
pop
mov
jecxz
dec
lcall
icebp
jae
mov
nop
in
loopne
shlb
mov
push
push
cli
pop
push
icebp
xor
shll
test
inc
ficoml
nop
popa
dec
stos
inc
adc
cmpsb
cmpsb
xchg
sub
popa
push
lock
aam
mov
mov
das
lcall
out
mov
xchg
jno
dec
out
aam
lcall
loop
dec
sbbb
in
sub
mov
imul
mov
ror
repnz
ficoml
xchg
xor
and
adc
cmp
into
subl
rolb
sbb
xor
sbb
xchg
cmp
dec
xchg
jno
lea
das
mov
jns
mov
xorl
push
cmp
pop
cmp
add
xlat
test
dec
mov
or
xchg
xchg
imul
xlat
data16
mov
incb
cwtl
and
aaa
mov
popf
shlb
jnp
mov
jl
movsb
xchg
xchg
jbe
insl
jo
mov
jns
mov
cmc
and
stos
mov
mov
sbb
xchg
jns
mov
fs
or
stos
iret
mov
aaa
sub
sub
pop
int3
mov
mov
mov
push
aaa
aas
dec
xor
ja
sbb
and
es
mov
fldl
mov
je
inc
pop
rol
cld
in
lods
in
repnz
and
jo
sub
out
xor
sub
add
add
loope
sub
xchg
ficompl
cwtl
sub
cmp
xor
cld
or
jecxz
mov
sbbl
push
or
dec
or
pop
mov
cmp
leave
leave
mov
and
bnd
sbb
or
pop
push
shlb
or
add
lret
gs
mov
dec
or
add
xor
sbb
sbb
push
pop
cmp
jo
shrb
mov
push
sub
iret
fldcw
movsb
aas
popa
mov
mov
dec
dec
imul
outsb
hlt
push
inc
aaa
pop
inc
jae
mov
or
pop
popa
insl
mov
jecxz
fsubrs
test
fisttps
js
enter
adc
fldenv
inc
and
pop
dec
data16
mov
mov
cmp
push
xchg
add
insb
loope
cmc
mov
in
in
jbe
push
adc
cmp
not
mov
and
sbb
aam
dec
xor
xchg
inc
movsl
sbb
xor
sub
and
xchg
inc
daa
fnstenv
ja
rcll
jnp
cmp
sub
fnstenv
iret
cmc
in
mov
dec
jecxz
mov
scas
int3
shll
ja
fbld
dec
adc
les
jnp
loopne
adc
dec
mov
push
in
insb
rol
mov
or
sub
js
push
or
loop
xor
stc
lahf
rcrb
fisubrs
push
stos
ss
push
dec
add
pop
dec
call
sbb
sub
sbb
in
xor
mov
jb
xorb
add
lock
fisubrl
dec
repz
scas
jmp
test
xchg
xor
or
filds
sub
stos
add
pusha
je
cmp
dec
cmp
loope
mov
repz
cwtl
outsb
push
cltd
cli
mov
xchg
loop
icebp
sbb
dec
insl
arpl
adc
cmpsl
jns
push
mov
pop
rcrb
roll
sbb
mov
sbb
lods
jg
pop
cmp
cmp
jae
test
xchg
daa
sbb
inc
daa
and
adc
xor
adc
mov
mov
enter
adc
and
ficomps
lds
pop
cli
sbb
cli
adc
or
sbb
or
pop
mov
call
xchg
mov
es
xor
insl
sbb
dec
sbb
out
pop
adc
jbe
jnp
jne
add
push
lock
cmp
fbld
cmc
imul
mov
cmp
mov
dec
add
add
clc
fdivrl
loopne
cwtl
mov
popa
movsb
jo
xchg
into
cmpsl
xor
jmp
fsub
xchg
mov
lahf
dec
dec
add
fstpl
mov
jmp
loopne
xchg
xchg
aaa
ret
aad
sarb
push
dec
cmpsl
or
rcrl
cli
mov
aad
rcll
jae
mov
out
push
dec
jl
or
jo
fs
addr16
add
jmp
and
stos
xchg
pcmpgtw
movsb
fsubr
push
stos
in
hlt
pop
sub
inc
pop
pop
xchg
outsl
inc
inc
rorb
push
jp
push
dec
rorb
aam
mov
xor
lret
nop
pop
or
movsb
es
icebp
xchg
lock
mov
aad
movsl
mov
xchg
inc
int3
pop
or
and
lret
enter
clc
jg
out
xor
mov
push
pop
test
add
pop
cmpsl
lahf
lcall
lock
dec
mov
xchg
popf
movsl
sub
inc
jo
loopne
sbb
xchg
jp
xchg
loope
or
gs
shl
add
loopne
push
imul
jp
push
sub
cmpb
push
sbbb
insb
sbb
les
ljmp
add
mov
stos
rolb
inc
and
stc
negb
in
pop
xor
jo
mov
movl
dec
mov
bound
in
lret
dec
xor
mov
cmp
push
aam
push
ljmp
test
stc
xor
rcr
xor
jae
push
inc
mov
das
out
repz
icebp
pop
xchg
enter
dec
vpermi2w
cmp
push
cld
xchg
fcoml
dec
push
or
inc
sbb
and
mov
jne
out
inc
inc
xor
inc
or
lods
xchg
out
mov
pushf
int
mov
mov
ljmp
dec
jecxz
repnz
out
sub
sub
sub
jg
repnz
xchg
cmp
sbb
xchg
fcomps
js
cmpb
jo
sbb
sbb
jle
popf
bnd
sub
push
test
push
subl
mov
out
stc
rorl
mov
movsl
pop
sbb
cs
mov
pop
jmp
pop
fmull
sbb
cwtl
roll
stos
addr16
sti
and
inc
lea
sbb
dec
add
enter
pop
mov
mov
in
inc
mov
mov
mov
data16
dec
into
outsb
enter
jb
test
mov
jmp
inc
mov
scas
and
out
adc
pop
mov
outsl
or
lea
xchg
sti
inc
fdivrl
dec
sar
push
insl
cltd
mov
inc
or
or
dec
mov
rol
mov
jmp
sbb
iret
sub
je
fcmovnb
mov
fbstp
push
roll
jl
daa
sub
in
push
loopne
add
ror
pop
add
push
cmc
xlat
testb
mov
pop
and
lods
mov
pop
das
pop
and
out
cmp
xor
lods
sbb
adc
imul
and
xchg
mov
push
hlt
push
aaa
push
mov
jg
push
and
je
inc
add
cmp
and
dec
dec
dec
hlt
pop
testb
push
pop
decb
hlt
inc
or
andb
ljmp
pop
sbb
iret
mov
push
jmp
jae
inc
aam
adc
insl
cli
out
js
test
nop
jo
xor
lods
les
outsl
sub
std
mov
cmp
sub
pop
inc
or
adc
jg
add
pop
dec
addl
aas
dec
addb
add
mov
daa
nop
xchg
sub
rcll
lret
and
aas
pop
outsb
or
aad
push
or
test
dec
lahf
jmp
stc
jmp
mov
out
aam
mov
and
push
in
cmp
cmpb
dec
or
xchg
sub
jne
lods
lds
leave
xor
test
fnstsw
rorl
cs
dec
out
push
or
loopne
cmp
enter
jae
adc
lret
or
mov
mov
dec
fwait
dec
or
nop
out
lahf
pop
cli
sub
or
xchg
adc
mov
push
fldcw
push
pop
sub
lcall
mov
and
dec
not
movsb
fisubl
fsubrs
adc
push
and
das
cmp
fdiv
inc
movsb
stc
and
add
mov
xchg
sbb
fdivrl
adc
dec
mov
lret
repnz
push
cmp
add
mov
inc
push
or
repz
imul
movsl
in
dec
jno
rcr
and
adcb
bound
pop
daa
cltd
sti
repz
cld
xlat
inc
add
dec
and
repz
inc
cs
arpl
cwtl
enter
mov
push
mov
and
aad
sub
jmp
imul
jae
sub
jbe
cwtl
movnti
movsb
xor
xor
shl
push
bndstx
xchg
out
incl
xor
push
sbb
or
pop
ss
xchg
dec
push
add
in
dec
push
lods
mov
add
inc
lret
jnp
mov
mov
push
sub
cmpsl
call
icebp
les
mov
sbb
or
xchg
in
mov
fsubl
data16
push
negb
inc
mov
call
jmp
pop
pusha
sub
in
mul
cmp
or
jae
mov
andl
addr16
psubsb
push
sub
inc
pop
ret
adcb
mov
inc
or
xlat
add
or
mov
or
sbb
call
add
les
jle
dec
mov
mov
pop
out
in
dec
iret
jl
sub
mov
lods
mov
pop
or
xchg
fstpt
addr16
aas
cmc
pop
dec
xchg
loopne
pop
pop
adc
mov
scas
mov
inc
lock
out
cmc
clc
mov
sbb
lods
sti
roll
and
xor
mov
or
inc
dec
dec
out
stos
bts
xor
xor
mov
sbb
subl
jl
inc
push
aam
fmul
sub
rol
mov
pop
and
xchg
lods
addr16
shlb
adc
xor
add
sahf
mov
out
icebp
popf
mov
aaa
out
popa
ljmp
cwtl
xchg
dec
add
push
test
cmpsl
or
and
xchg
fimull
repz
daa
push
dec
inc
push
pop
hlt
lds
insb
cli
rorl
xchg
sbb
push
ss
fwait
sti
jne
mov
adc
fldenv
mov
in
sahf
movsl
mov
in
mov
xor
jb
push
push
fucomip
xchg
push
call
dec
xchg
enter
lret
lods
and
testb
cmp
push
daa
mov
push
sub
aas
sti
jo
fwait
inc
addr16
add
xor
jnp
pusha
out
mov
dec
push
add
cmpsb
xor
sub
sarb
daa
cmpsl
pusha
push
aad
add
orl
test
jecxz
cld
cmp
aas
scas
lea
je
sbb
jge
jle
sahf
xor
bound
jmp
mov
fwait
nop
mov
lret
sub
cmpsb
arpl
sti
jecxz
aas
rorb
outsb
adc
push
lock
pushf
adc
daa
sti
add
jge
call
sbb
sub
jmp
sub
cs
icebp
inc
stos
pop
cmc
and
xchg
mov
fwait
jne
clc
xor
sbb
xchg
insl
pop
outsl
aaa
mov
outsb
inc
jo
pop
jmp
sbb
cmc
push
rorb
stos
xor
outsb
loope
push
cmpsl
add
adc
aam
sarl
shlb
cs
adc
insl
je
xchg
push
pop
ret
cmp
cli
xchg
in
std
lret
cmc
push
pop
and
inc
xchg
fmull
cmpsb
sbbb
dec
test
hlt
mov
mov
mov
inc
fisubs
push
jmp
iret
adc
dec
cwtl
push
das
iret
fwait
cmp
es
lsl
fldenv
clc
int
pop
jo
add
mov
int
push
mov
jge
enter
loop
push
or
in
add
insb
jb
xchg
mov
xchg
sbb
ret
cmp
sub
call
lods
addr16
or
jne
je
mov
outsl
fsubs
imul
add
aam
sti
loopne
and
push
btr
sub
push
and
out
mov
lock
or
inc
cmpb
cmp
lret
popl
and
rcl
ss
xchg
fnstsw
cmp
shll
jg
cmp
cmc
sti
inc
cld
data16
bound
scas
push
scas
or
pushf
push
or
sahf
data16
mov
add
xor
xor
jae
push
shr
pop
inc
or
xchg
jns
inc
ret
call
adc
enter
inc
orl
jp
push
dec
and
mov
outsb
xor
out
clc
push
pop
mov
xor
inc
pop
add
mov
icebp
sub
sub
pop
dec
add
cltd
adc
insb
xchg
pop
cld
mov
clc
jle
and
xor
cmp
std
mov
arpl
mov
dec
cld
xchg
cltd
add
sbb
xor
out
pop
push
mov
xor
aas
dec
mov
jp
xor
sti
mov
xlat
add
add
popa
repz
pushf
fistps
icebp
inc
lret
movb
jmp
mov
pop
push
pop
sub
sub
aam
jl
push
sbb
jnp
or
test
out
xchg
mov
and
call
lahf
cld
rorl
xor
sbb
aam
mov
mov
sub
stos
sbb
test
sub
pop
in
addr16
mov
shl
aaa
mov
sarl
inc
outsb
jmp
test
aad
loope
dec
ds
daa
jecxz
xor
sbb
and
call
sub
jl
add
lahf
out
xor
xchg
push
mov
mov
imul
into
shlb
ficoml
jnp
mov
fdivs
dec
dec
mov
mov
jp
mov
popl
sarb
push
scas
ret
dec
mov
xchg
movsb
xchg
sbb
inc
cld
pop
and
adc
xor
sub
out
jno
xor
mov
sbb
pop
aam
pop
lret
in
stos
jmp
aam
push
lods
rcl
fmul
in
mov
mov
or
leave
adc
and
mov
push
mov
std
shll
sub
rcrl
push
jns
outsb
xchg
fisttpl
pusha
enter
es
test
sbb
sub
lock
jl
jo
adc
mov
stos
cmp
in
cmp
enter
mov
sbb
call
or
inc
adc
sbb
sub
cld
cmp
out
adc
aas
jmp
ss
int
pop
pop
mov
pop
sbb
test
inc
add
cli
clc
add
repnz
push
jg
jl
xor
mov
int
test
scas
dec
jnp
cmp
xor
in
push
cmp
jns,pn
les
fsubrp
int3
fdivr
fcomps
sub
mov
popf
mov
je
cmp
fwait
dec
bound
or
xchg
jno
and
xlat
pop
loop
lret
push
loop
shl
push
fildll
xchg
lods
je
les
sbb
mov
or
cmpb
addb
pop
cmpsb
dec
cmp
adc
pop
insb
and
lds
test
pop
icebp
fs
inc
cmp
popa
cmpsb
xchg
rcll
in
cmc
push
pushl
mov
jne
lcall
in
out
out
mov
sub
mov
dec
flds
out
mov
hlt
fidivl
stos
out
add
xchg
jecxz
pop
outsb
pusha
das
ljmp
jl
mov
in
movsb
and
add
cs
aam
outsb
clc
jnp
mov
pop
mov
sub
stos
jp
mov
xor
cmp
mov
add
lods
fldt
gs
adc
push
mov
rcll
ret
sub
xor
or
ret
in
adc
ds
cmp
jl
imul
mov
push
shl
cmp
into
xchg
mov
jne
mov
cmp
cmp
ja
aas
in
nop
fidivrl
cld
lcall
inc
dec
inc
mov
std
imul
test
adc
aam
mov
pushf
pop
mov
fidivrs
cwtl
add
jb
dec
xor
push
or
ss
dec
frstor
jo
movsb
jne
add
adc
add
mov
test
nop
mov
xchg
gs
lret
subb
xor
add
sahf
xchg
pop
and
jmp
ljmp
aad
xor
jmp
fcmovne
dec
mov
or
js
adc
fs
insb
and
lods
inc
push
jp
ret
shll
movsl
mov
in
popf
pop
inc
add
repnz
mov
push
lods
cmp
and
shl
stc
ljmp
js
repz
insb
mov
mov
pop
bound
dec
fadds
sarb
push
outsb
mov
call
andps
push
mov
add
insb
mov
popa
test
lcall
std
add
cmc
pop
and
fdiv
ret
fisubrl
pop
in
mov
das
fs
repnz
lcall
inc
negl
push
sub
ret
int3
pop
in
mov
and
out
int
fstpt
movsb
pop
xchg
mov
outsl
jo
outsb
popf
push
loopne
out
jle
and
stos
sbb
test
cld
mov
in
out
sub
mov
hlt
and
cli
or
add
frstor
popf
cmp
cli
mov
mov
call
fs
push
repz
icebp
push
lock
and
data16
mov
sub
dec
enter
cs
xor
ret
adc
lret
xor
in
movsl
adc
adcl
xchg
dec
mov
loopne
fists
movsb
or
fiaddl
imul
ss
jno
adc
out
outsb
jmp
in
adcb
leave
test
or
xchg
xchg
loopne
jmp
xor
imul
pushf
leave
insl
pop
adc
out
sbb
adc
dec
xor
aam
pop
int3
mov
sub
xor
sub
test
push
clc
pop
or
cmc
data16
pop
pminub
cmpsl
mov
imul
xchg
ret
mov
dec
push
dec
ss
xchg
push
andnps
in
test
add
cmpsb
leave
data16
roll
stc
or
sar
mov
fisubrs
cmp
int3
leave
and
jne
hlt
mov
popa
lahf
outsl
add
mov
out
jbe
loop
adc
out
sub
fisttpl
pop
jp
popa
dec
cmpsl
subl
and
divl
popa
pop
leave
jnp
test
cld
pop
lcall
push
rorl
cmpsl
and
mov
pop
mov
mov
xor
jge
jmp
add
cmp
mov
and
outsb
push
mov
inc
outsl
iret
mov
inc
jg
xor
push
cmp
rclb
sbb
sub
xor
arpl
push
xchg
add
loope
negl
xor
dec
jl
mov
aad
dec
fwait
js
cmp
cmp
data16
jb
mov
aaa
stc
fisubl
scas
loope
aam
xlat
lcall
test
adc
nop
test
scas
xor
mov
andb
hlt
popa
push
pop
lcall
cmp
ja
test
mov
mov
loopne
xor
loop
mov
fmuls
or
insl
sbbb
push
lret
fisubrl
xchg
xchg
in
pop
sub
int3
lock
loop
xchg
rcrb
dec
jmp
mov
cmp
cmp
inc
lcall
lods
cld
sahf
fsubl
orb
jns
dec
mov
jbe
mov
fidivl
xor
shlb
cwtl
movsb
rcl
add
cltd
loop
mov
sbb
inc
sbb
pop
add
or
xchg
in
mov
jge
cmp
xlat
out
les
xchg
jmp
in
das
adc
dec
leave
iret
dec
adc
or
lods
jnp
xor
mov
sti
lds
sub
xchg
aam
sbb
pop
movsb
mov
cmc
and
mul
cmp
mull
mov
adcl
inc
lds
cmpsb
movsb
xor
xlat
and
cmp
jo
repnz
and
cmp
inc
and
outsb
mov
fsubr
push
sahf
dec
scas
cld
mov
push
lea
cltd
fs
aam
mov
pop
cli
cmpl
cmp
inc
sahf
cmpb
sub
std
jnp
inc
push
jecxz
into
decl
jle
vmread
in
cmpsl
sub
notb
loopew
cmp
pop
dec
bound
lock
xchg
pop
or
add
xor
add
call
or
sbb
inc
pop
insb
call
dec
add
mov
xor
cltd
xchg
mov
int3
add
ret
movsl
test
aam
mov
jb
movsl
xchg
mov
xchg
loope
jecxz
mov
movaps
nop
pop
inc
xchg
add
imul
xorl
jns
nop
xor
and
ret
in
mov
ja
ret
cmp
cltd
jbe
xchg
decl
xchg
iret
nop
dec
out
xchg
cld
mov
addb
push
push
xor
fldenv
mov
outsb
xor
sahf
aas
sub
pop
lods
les
pmulhuw
outsl
sub
adc
push
cmp
outsb
lds
imul
call
fcomp
or
push
ja
out
jno
xchg
mov
outsl
xor
jl
sbbb
outsl
scas
faddl
std
dec
call
mov
xlat
pop
int
stc
lret
dec
pop
mov
leave
xchg
add
jnp
push
pushf
insl
cmp
cmp
sub
pop
mov
push
test
jg
xor
cmpsl
push
cmp
stos
scas
inc
jns
insl
jno
mov
push
ret
aam
popa
insb
adc
mov
aaa
fdiv
pop
repnz
mov
ss
jp
out
mov
inc
inc
movsl
adc
notb
mov
xor
in
mov
xor
mov
das
fwait
lcall
cmp
add
push
cmp
cmp
pushf
pop
push
xor
pushf
dec
mov
adc
add
push
aam
adc
and
iret
gs
jl
xchg
mov
xor
jb
test
xor
pusha
ret
sbb
lds
mov
push
out
add
jbe
je
pop
lods
test
in
push
pop
xchg
ret
xchg
inc
fnstcw
mov
push
and
push
mov
loope
pop
xor
movsb
add
addl
enter
jp
sbb
stc
inc
out
scas
out
mov
mov
mov
arpl
jg
jg
lret
lcall
and
push
in
mov
imul
fdivs
cmp
in
imul
loope
outsb
rcl
je
mov
cmp
xchg
dec
cld
fdivrl
pop
push
jge
stos
mov
push
dec
cmpsb
sahf
or
or
or
test
sbbl
jae
or
fs
roll
dec
loopne
mov
inc
cs
mov
xor
loop
push
and
jmp
arpl
push
adc
repnz
subl
xlat
xchg
outsb
insb
jbe
pop
ss
jmp
in
adc
lret
cltd
test
adc
pop
lret
test
sbb
dec
gs
or
and
xor
out
mov
cmpsl
cli
js
adc
jecxz
inc
jae
shlb
dec
lds
outsb
sub
xor
cmp
mov
es
pop
push
sub
mov
fdivs
push
sub
loop
shr
mov
call
mov
hlt
rorl
xchg
inc
int
jecxz
and
in
add
addr16
fstpl
add
cmp
adc
jp
mov
mov
inc
push
sbb
sbb
dec
push
mov
adc
and
out
bound
popa
pop
sub
add
fwait
stos
and
cmpsl
cmpsl
pop
cmc
pushl
pop
lahf
frstor
cmp
hlt
ds
std
dec
dec
out
ljmp
pop
inc
std
lcall
mov
inc
cld
xchg
in
or
mov
jnp
pop
arpl
xorl
or
add
testb
dec
mov
xchg
xlat
cmp
daa
dec
mov
cmpsl
insb
or
jo
out
cwtl
sahf
lock
sbb
outsb
or
adc
es
rorb
sub
push
jns
or
cld
out
xchg
sbb
jmp
lods
sbb
mov
pop
push
int3
mov
aam
pop
lret
mov
out
scas
xor
sub
jle
push
pop
fcoml
push
pop
mov
lds
mov
xor
add
scas
xor
addr16
add
adc
jmp
loope
jb
pop
sub
and
aaa
jmp
stc
int3
sbb
test
pop
and
testl
insb
pop
cmp
push
clc
insb
mov
fisttpll
jne
jae
test
cmp
jnp
cwtl
pusha
push
por
insl
push
lock
call
pop
shll
or
pop
orl
adc
dec
push
cmp
loopne
sub
pop
jne
jnp
mov
add
cwtl
lods
inc
scas
ret
lcall
test
pop
mov
ret
gs
mov
jecxz
mov
or
mov
jmp
and
repnz
add
and
xchg
in
adc
xchg
mov
push
hlt
repz
fcmove
outsl
decl
push
mov
dec
decl
into
xchg
addr16
lahf
sub
xchg
xchg
pop
scas
sub
mov
inc
aam
enter
mov
push
call
sbb
add
repz
xor
mov
addb
arpl
adc
xchg
movsl
sbb
icebp
jnp
cmc
dec
xchg
or
mov
cmp
mov
pop
or
cwtl
pop
xchg
lahf
or
add
pop
hlt
int3
dec
xor
pop
lock
movsl
mov
sbb
btl
sahf
test
jl
and
imul
cmp
movsl
pop
pop
leave
jae
aad
bound
popf
sub
stos
mov
jmp
lods
mov
clc
ja
or
mov
call
and
xor
jg
bnd
pop
inc
pop
mov
loopne
popf
adc
xchg
lods
inc
dec
mov
sub
lahf
outsl
sub
xor
outsl
mov
mov
shll
hlt
data16
lock
scas
inc
jg
repnz
push
mov
stos
mov
mov
pusha
sub
test
jb
repz
cmp
mov
mov
push
jmp
repnz
cmpl
sub
sub
repz
and
popf
ret
arpl
sub
adc
dec
dec
and
cltd
dec
and
mov
prefetchw
or
mov
sub
cmp
xorl
xor
ret
jo
aad
inc
out
mov
and
pop
ja
mov
insb
mov
sarl
loop
push
and
cs
cmp
scas
int3
lods
negb
ss
jecxz
rorb
shlb
mov
int
add
xorl
stos
in
repnz
das
outsl
out
mov
ret
pop
lcall
inc
es
cmc
ret
jne
cld
xchg
cld
mov
cli
sbb
jmp
addr16
mov
rclb
push
imul
adc
inc
dec
outsb
mov
jno
mov
xchg
sub
add
fistpll
mov
xchg
push
int
fnstsw
pop
pusha
cmp
mov
lret
fisubl
adc
jp
in
fdivr
adc
mov
mov
cmp
or
lea
push
shll
mov
enter
sbb
js
xchg
sti
fdivl
std
jb
pop
jnp
ljmp
hlt
filds
mov
xor
and
imul
xchg
inc
lods
cmp
movsb
jb
test
xor
sub
jle
push
das
sbb
and
sbb
lret
imul
ds
xor
dec
stos
and
add
mov
xor
out
inc
sbb
mov
loopne
xchg
ficoms
and
sbb
das
movntq
and
dec
dec
mov
and
fdivs
insl
test
lds
fisubs
jne
out
out
rcll
scas
push
push
jl
mov
test
xor
adc
inc
cmpl
scas
mov
in
lcall
jmp
fbstp
adc
push
mov
cli
jecxz
int
pusha
or
loopne
lcall
cmp
gs
mov
push
adc
dec
notl
or
and
cs
and
jle
leave
jg
lds
pop
js
mov
ret
das
mov
in
cwtl
push
pop
out
js
sub
inc
mov
jns
cltd
sbb
enter
adc
mov
subl
xlat
jnp
imul
ficompl
bnd
add
aaa
je
inc
cmp
pop
cmp
pop
lcall
xchg
scas
cwtl
es
icebp
cmp
mov
dec
mov
pop
out
lea
je
pop
xor
jmp
lea
clc
out
mov
add
or
pop
ss
cmpsl
inc
imul
inc
xor
inc
adc
in
lea
cmp
xchg
cmp
sub
adc
push
clc
cmpsl
popf
xor
push
int
hlt
lods
inc
adc
jp
mov
lret
or
stos
fstpt
push
adc
dec
aas
arpl
adc
rolb
cmp
aad
sub
clc
sub
lock
pop
jg
iret
imul
imul
repnz
push
adc
shrl
and
outsb
xor
push
xchg
add
inc
adc
push
pop
pop
in
xor
adc
xor
adc
negl
mov
and
sbb
imulb
fwait
ret
or
pop
sub
pop
push
push
cmp
icebp
insl
aam
and
int
mov
stc
adc
mov
sub
sub
sbb
ss
iret
jno
into
jp
gs
cmp
push
jmp
and
enter
sbb
push
cmp
je
add
sub
cmp
inc
je
add
pusha
nop
inc
sti
ret
xor
pop
std
fsubrs
or
rorl
mov
dec
push
adc
xchg
andb
xchg
push
and
imul
mov
ds
and
jecxz
and
loope
cltd
jbe
dec
push
repz
pop
repnz
pop
je
shll
push
adc
fsts
xchg
leave
dec
sti
sub
pop
add
dec
das
pop
or
cmc
stos
or
inc
push
fcomi
sub
rolb
ljmp
rcll
daa
or
sub
jg
pop
adc
mov
hlt
pop
inc
dec
rol
inc
add
cmc
mov
stc
and
mov
pushf
loope
and
in
xor
jo
sub
lcall
inc
jle,pt
xorb
xchg
stos
pop
ljmp
popf
jo
movsl
fisttps
lahf
repnz
dec
add
xlat
pop
sbb
cld
pushf
cmpsb
sub
mov
dec
jbe
imul
je
push
subb
dec
or
adc
lock
dec
subl
loope
cmp
or
addl
pop
xor
xchg
adcb
filds
fwait
mov
xchg
mov
mov
adc
or
jp
cmpsl
mov
dec
jno
push
or
out
cltd
popa
es
in
pop
insl
sbb
pop
mov
fcomps
rol
mov
mov
inc
mov
jge
fdivl
out
sub
mov
in
int3
cmpsb
bound
out
add
or
xor
cmpb
add
push
jo
mov
mov
pop
in
add
movl
aas
ret
inc
lock
ret
movsb
mov
xchg
popa
lret
mov
out
std
mov
add
mov
xchg
mov
cli
or
sub
cmp
sub
int3
or
outsb
push
sbb
daa
das
out
enter
adc
icebp
jge
mov
adc
loop
les
popf
jp
cli
stc
vmovaps
lock
pop
lret
cld
fucomip
xor
cmp
negb
dec
popf
cmp
pop
enter
mov
into
mov
les
mov
outsl
xchg
shlb
les
mov
pop
ljmp
add
shrl
sub
pop
xor
xchg
cmp
cmpsl
incl
inc
int
sub
fwait
adc
stc
mov
insl
jae
pop
dec
das
mov
ret
je
cld
add
repnz
scas
mov
and
lds
xchg
sbb
in
sub
test
inc
xchg
sub
and
mov
ljmp
mov
sbb
ret
inc
leave
jb
je
lods
outsl
push
bound
sti
outsl
jnp
outsl
adc
dec
imul
adc
xchg
mov
imul
xlat
xchg
xlat
ja
mov
js
add
les
in
mov
ret
jae
sbb
stos
lds
call
out
loopne
and
and
mov
shlb
or
arpl
in
loop
repnz
dec
pop
mov
sbb
xchg
mov
cmp
jns
test
gs
inc
aaa
scas
sbb
sbb
rcll
push
add
jle
mov
adc
test
lret
cvtps2pi
ja
loope
fs
xlat
and
jmp
repnz
test
test
xchg
call
popf
adc
add
xor
jb
inc
mov
mov
ja
jmp
daa
xchg
rclb
xchg
sub
xchg
mov
mov
jl
cmc
in
add
loope
cmc
xchg
mov
aad
pop
repz
in
mov
ljmp
xchg
adc
data16
ret
shll
pop
call
and
loopne
gs
cmp
mov
mov
into
xchg
nop
shl
dec
cld
mov
lahf
rcrl
test
das
fbstp
aam
popa
int
nop
dec
mov
fwait
lret
sbb
xchg
jecxz
or
mov
stos
mov
sti
lahf
cmpsb
in
xchg
xchg
movsl
xlat
add
add
jmp
movsb
flds
pop
incl
adc
out
mov
test
in
cli
std
pop
xor
sbb
mov
xor
jae
mov
xchg
xor
xchg
cmp
fstp
sub
cs
cmp
into
scas
dec
sub
mov
dec
scas
or
dec
jns
outsb
jmp
repz
mov
mov
jbe
jle
pop
mov
mov
aas
push
jl
push
jnp
jmp
in
call
mov
cmp
dec
mov
stos
daa
int3
testl
fmull
and
fcomps
jo
inc
testl
mov
cs
insb
loop
cld
xor
orl
imul
jne
push
mov
mov
push
nop
jl
subb
test
das
fwait
popf
movsl
mov
mov
repnz
fstp
cli
pushf
xor
or
cwtl
into
fs
stos
lahf
push
sahf
pop
mov
inc
mov
fldcw
lret
jns
jmp
cli
cmpb
movsb
push
mov
cltd
sub
sub
adc
in
js
enter
cmpsl
std
das
inc
add
dec
push
and
out
add
stc
adc
aas
pop
out
dec
xlat
inc
out
push
jb
and
lods
push
andb
scas
xchg
das
or
pop
mov
add
cld
or
sub
cmp
cld
and
cmp
dec
jns
mov
xchg
mov
pop
gs
inc
lahf
dec
push
lret
add
stos
pop
loopw
js
inc
pop
mov
pusha
insl
pop
cltd
test
lock
in
push
cltd
outsl
dec
test
dec
mov
das
pop
xchg
std
shlb
arpl
ret
xchg
dec
hlt
shrl
out
sbb
mov
adc
sub
aas
mov
test
cld
sbb
int
mov
jge
lahf
jne
lods
fistl
lea
popf
xor
sbb
adc
mov
xchg
dec
mov
lret
aaa
inc
fsubrl
clc
jle
mov
in
ljmp
fcoml
pop
in
inc
cs
and
inc
sarl
lcall
leave
push
jnp
or
push
inc
cmp
pop
scas
loop
enter
rol
push
push
push
cmp
data16
mov
call
jg
imul
in
enter
pop
add
lods
push
adc
ds
xor
stc
push
cmp
pop
fiaddl
inc
loope
inc
in
jp
push
jbe
pushf
ret
ret
imul
sti
inc
sbb
out
sbb
lds
sbb
mov
push
or
mov
and
add
mov
inc
xchg
sbb
test
jp
mov
push
or
popf
mov
aam
mov
lret
inc
pop
mov
rcll
aad
inc
sarl
into
stos
cltd
int
sbb
dec
xchg
fwait
or
pop
lods
faddl
sahf
sub
sub
addr16
cmpsb
outsb
bound
jns
push
daa
xchg
ja
arpl
sahf
test
jns
xchg
loope
mov
test
lcall
les
pop
popa
aaa
mov
cli
scas
mov
faddl
test
aas
sbb
mov
rol
xchg
lods
pop
jge
in
in
and
jae
call
lret
out
adc
sub
int
addl
mov
cmp
pop
mov
and
dec
mov
lods
pop
sbb
jae
je
sub
lret
repnz
sbb
sub
cwtl
mov
out
scas
xor
jl
push
xor
push
push
mov
mov
jge
push
cmp
mov
aas
imul
out
fs
xchg
inc
mov
lods
sub
dec
xchg
fsubs
or
loopne
cmp
jecxz
and
and
inc
fs
es
pop
popa
and
xor
imul
adc
test
sub
mov
cmpsl
repz
cmp
outsb
xchg
jb
lods
jmp
and
mov
dec
jns
adc
push
xchg
xchg
inc
fadds
das
jne
jno
sub
sub
jge
sub
sahf
inc
add
pop
mov
cmc
aam
in
movsl
mov
stos
rcll
cmp
jmp
push
fdivrl
sub
jle
xor
jg
mov
mov
loopne
mov
ja
push
cld
scas
stos
in
shlb
push
insb
std
das
ss
pop
pop
sahf
pusha
sub
sub
sbb
pop
sub
imul
into
xchg
roll
mov
xor
into
or
mov
mov
mov
inc
pop
shl
and
mov
mov
clc
cltd
dec
subl
ds
js
or
sahf
push
out
sarl
sbb
fists
cltd
hlt
cltd
stos
sbb
pop
cmpsl
fstpl
pop
ss
pop
enter
sub
fwait
cmc
jmp
and
or
push
inc
repnz
insb
repz
push
loope
fidivs
mov
adc
aas
int3
mov
sbb
cmpsl
cli
mov
mov
adc
aaa
and
sbbb
orl
xchg
imul
adc
inc
decl
mov
xor
mov
cmpsb
testb
js
xor
cli
mov
jg
jmp
imul
mov
sub
mov
cmc
jns
fwait
lret
fldt
movsb
adc
fdivl
pop
jae
roll
mov
xchg
mov
jmp
mov
push
mov
mov
out
movl
cmpsb
and
ds
and
lcall
call
test
std
jge
stc
cli
sbb
outsl
std
into
mov
ffreep
incl
add
jg
add
scas
addl
or
shll
stc
insb
ja
fidivl
leave
fiaddl
jecxz
adc
inc
mov
and
lods
lret
pop
add
adc
xor
repnz
div
out
popf
mov
xchg
loopne
and
stc
pop
popf
sarl
in
fwait
jbe
test
mov
cld
inc
add
adc
lcall
pop
addr16
sub
hlt
mov
std
insl
inc
pop
jecxz
lcall
aad
ljmp
sbb
arpl
push
mov
inc
fisttpl
mov
mov
sub
fistpll
fstps
cmp
xor
cmp
dec
loopne
fistps
or
bnd
jae
or
jge
and
adc
or
fsubp
jnp
dec
jge
mov
cwtl
scas
cmp
sub
mov
add
jmp
mov
dec
mov
inc
shrb
mov
adc
mov
push
cld
cli
popf
sbb
cmp
xor
scas
dec
pop
mov
pop
std
aam
lea
mov
lahf
fmuls
je
xchg
xlat
mov
pop
fiadds
push
xorl
fisttps
idivb
pop
sbb
aad
push
sub
mov
mov
divb
sbb
mov
aad
cs
aas
call
mov
pop
pusha
seta
add
xor
imul
xchg
inc
cwtl
pop
mul
or
test
xor
mov
cld
test
dec
lret
subb
mov
pop
sbb
cld
pop
push
cld
jnp
jae
add
shll
xor
jo
test
push
roll
aaa
xchg
mov
jae
cmp
dec
daa
in
push
imul
xor
cmpsb
insb
int
cmc
and
nop
mov
xchg
aaa
adc
je
shll
mov
enter
xchg
cmp
mov
push
lods
sub
jp
pop
cmp
into
stos
stos
push
rclb
outsl
fucom
xor
push
arpl
incl
into
adc
cltd
push
add
inc
dec
jge
pop
push
xor
mov
mov
pop
xchg
sbb
ja
mov
icebp
inc
daa
test
dec
jb
xchg
dec
out
loop
adc
es
push
xchg
push
fidivrl
int3
cmp
test
mov
mov
ds
jns
sub
pop
dec
xor
cli
sub
lret
and
mov
inc
jb
xchg
push
daa
fwait
push
mov
mov
popf
inc
pop
fstpl
jae
adc
and
daa
loope
repnz
cmp
mov
lods
mov
bound
cmpsb
pop
pop
lret
xor
pop
adcb
hlt
lahf
pusha
push
cmp
dec
mov
ljmp
outsb
add
sbb
adc
push
in
test
jo
dec
adc
inc
mov
leave
pusha
or
xchg
mov
ja
push
push
cld
es
pop
std
jno
sub
pop
add
mov
aad
loope
adc
arpl
scas
loopne
mov
add
xchg
mov
xor
jnp
gs
jecxz
mov
out
arpl
insb
pop
inc
or
mov
lahf
gs
push
mov
clc
daa
jns
lock
pop
fadds
in
push
out
dec
pop
pop
mov
pop
icebp
dec
ljmp
inc
mov
leave
sbb
stos
or
inc
dec
mov
idivl
fisttpll
xchg
lock
or
mov
pop
xchg
push
lods
add
lods
ljmp
xchg
sbb
pop
xchg
subb
push
jge
mov
mov
and
xchg
inc
mov
mov
jno
push
in
fdivrl
jbe
ljmp
add
mov
outsb
test
jecxz
loopne
mov
and
scas
lock
push
mov
hlt
insl
xchg
mov
jp
jp
inc
dec
insb
dec
mov
xor
mov
dec
push
xor
mov
push
test
xor
fidivrl
repnz
movsb
cmc
imul
sub
out
ja
cwtl
inc
decl
mov
mov
adc
aam
and
cltd
dec
mov
andb
scas
decb
loop
roll
or
outsb
jno
js
sahf
xchg
subl
fdivs
mov
fldcw
or
mov
cmpsl
push
xchg
xchg
arpl
jno
lods
addr16
push
sti
xor
int3
cwtl
enter
call
std
lock
or
pop
fmuls
popa
flds
in
push
mov
lcall
or
insb
ds
mov
jbe
imul
enter
mov
shlb
mov
clc
popf
sub
ds
fildl
repnz
mov
cmp
pop
mov
mov
arpl
aad
inc
ret
lods
xor
pop
sbb
jb
std
lahf
inc
js
xchg
cmp
fimull
pop
aaa
arpl
clc
xlat
int
jg
lahf
push
fcomi
adc
jg
je
ret
test
loop
aaa
adc
les
mov
adcb
adc
adc
out
scas
lcall
cmpsb
lcall
dec
and
jg
cmpsb
pop
shll
xor
xchg
adc
dec
inc
xchg
test
jb
inc
pop
push
clc
mov
int
hlt
inc
pop
cltd
inc
jle
ljmp
mov
lock
std
lcall
sub
pop
inc
jnp
push
out
iret
in
jecxz
sahf
pop
xchg
sub
js
dec
dec
test
in
pop
xor
mov
dec
aas
cmp
adc
push
mov
rcr
mov
orl
test
cmc
ljmp
push
and
out
jg
adc
ja
or
int
sahf
sahf
hlt
cmp
xchg
in
movsl
int3
int3
and
fs
mov
mov
mov
shrb
cmp
xor
jb
xchg
lcall
mov
inc
xchg
out
adc
bound
lock
add
sub
jecxz
dec
loop
in
mov
sbb
pushf
sti
xor
loope
div
cmp
in
cwtl
push
add
shrb
mov
push
sbb
dec
or
push
inc
daa
and
cmp
xor
enter
fndisi(8087
aad
dec
xor
cld
fwait
and
jnp
mov
dec
sbb
adc
addr16
jmp
jecxz
xlat
idivl
leave
dec
icebp
push
sbb
insl
stos
xchg
inc
inc
xchg
pop
mov
out
fcmovu
pop
xlat
add
adc
xchg
push
mov
in
xorb
popa
or
cmp
jmp
mov
xor
pop
ret
inc
int
xchg
or
data16
addr16
add
sarl
pusha
sbb
int3
mov
pop
or
les
inc
fcmovu
jbe
insb
cmp
stos
mov
inc
data16
es
jnp
repz
fdivrl
test
inc
fdivr
jle
test
movsb
iret
mov
cs
inc
gs
or
xorl
fcomps
hlt
fs
xchg
scas
fdecstp
mov
xlat
sarb
push
jo
les
inc
adc
mov
inc
or
push
cmp
pop
sub
out
pop
xor
out
dec
mov
pop
lret
xchg
add
sub
loope
cmp
stos
adc
inc
das
mov
cmp
das
dec
jmp
jg
shlb
ret
in
mov
pushf
in
int3
sbb
test
mov
data16
pop
inc
addr16
pop
push
insl
push
call
xor
sub
push
dec
xchg
inc
outsb
cltd
daa
mov
shll
push
mov
loop
jp
popa
loopne
shl
outsb
in
ja
dec
pop
popf
rorl
lods
mov
mov
test
cld
frstor
or
sahf
lock
mov
pop
mov
sub
test
add
and
loope
lret
js
ret
cmp
jmp
push
add
add
cmp
nop
leave
jo
cwtl
cs
popf
ror
push
aas
outsl
cmp
adc
icebp
dec
jecxz
sbb
cmp
xor
sub
out
addr16
mov
int3
divl
mov
pop
mov
cmp
fwait
lds
jle
pop
pushf
pop
fwait
cmp
pop
adc
mov
dec
cmp
rcr
lock
push
ret
add
negb
jb
lods
mov
cmp
and
mov
sub
mov
mov
sbb
sbb
push
sub
pop
pop
mov
lret
mov
xchg
hlt
or
test
stos
dec
xor
mov
movsl
pop
in
cmp
adc
xor
jp
inc
fildll
push
jbe
sarb
jge
popa
jno
ret
neg
push
mov
jmp
popa
xlat
push
mov
xor
cs
push
push
adc
inc
out
inc
cmp
jnp
mov
and
cwtl
xor
lahf
and
cmp
fucom
adc
xor
outsb
dec
inc
popf
push
dec
cmpsb
add
fdivrl
dec
icebp
lcall
mov
ret
popa
leave
mov
rcll
cmc
push
mov
test
adc
cmp
lock
daa
mov
jnp
jnp
fwait
pop
rorb
out
ss
mov
repnz
insb
out
xor
test
adc
jo
xor
mov
sbb
or
mov
loopne
mov
jge
repz
mov
mov
in
sub
jns
inc
push
loop
cld
inc
inc
cld
mulb
and
pusha
mov
andl
and
aad
dec
xchg
cmc
xchg
inc
out
sbb
and
das
xchg
into
mov
adc
add
testl
imul
mov
ss
adc
adc
jo
mov
add
mov
jae
sbbw
pop
outsb
inc
fsubl
cmp
lock
mov
cmpsb
xorb
jge
adc
jb
jg
xor
pop
inc
and
out
pop
test
fstpl
sbb
dec
cli
xchg
lea
jne
mov
call
inc
jo
push
sub
and
imul
dec
mov
in
lds
mov
ret
pop
fsubrl
lahf
sbb
mov
in
inc
sub
repnz
jmp
inc
mov
subb
stos
dec
inc
jmp
stc
jg
mov
lock
dec
sub
scas
pop
add
cmc
or
cmp
add
jnp
pop
lock
dec
outsb
push
xchg
insb
mov
testb
fldlg2
cmp
dec
and
fildll
arpl
fists
pop
mov
pop
lds
or
call
jle
or
cmc
cmp
mov
or
mov
lds
pop
stos
pop
and
push
adc
push
lcall
sbb
jne
mov
jmp
stc
in
lahf
sub
mov
sbb
jmp
pop
andl
pusha
push
xor
test
dec
xchg
shlb
cmp
sbb
mulb
sbb
jno
cltd
mov
mov
not
xacquire
mov
adc
push
cs
insb
inc
out
sti
cmp
or
cmpsl
cli
lods
mov
rcrl
ja
outsb
xchg
adc
ljmp
jg
xor
mov
mov
jne
xchg
mov
fcoms
insb
sub
jne
or
nop
inc
jno
into
shl
inc
aaa
dec
pop
jl
xor
mov
mov
xchg
dec
xor
scas
or
dec
jae
push
in
xchg
push
nop
xchg
push
repz
loopne
push
popf
insl
mov
adc
daa
pop
cld
in
mov
dec
pop
aad
ja
stc
adc
aam
ja
lea
dec
out
sbb
iret
xchg
addr16
divl
sbb
xor
jno
subl
clc
and
faddl
mulb
jb
ljmp
fsubl
mov
cmc
mov
cwtl
in
gs
je
sahf
or
mov
fadd
jbe
push
leave
push
lahf
or
orl
enter
add
nop
jmp
repnz
out
imul
das
flds
xor
popf
cmp
fs
inc
sub
push
mov
jo
enter
repnz
cmc
sub
sahf
inc
mov
lods
int3
push
pop
push
clc
in
cmc
mov
mov
repz
or
mov
mov
push
mov
testb
xor
inc
mov
dec
bsf
lds
lcall
sbb
insb
lahf
mov
push
int3
ret
mov
pusha
popa
or
or
pop
pop
mov
push
jnp
adc
imul
push
es
or
sub
and
std
ja
test
sub
and
out
mov
stos
rcr
loopne
dec
pop
repz
fs
or
adc
push
xor
lea
push
push
loop
cmpsl
int3
sub
ret
xor
pop
test
call
mov
shll
and
popa
dec
pusha
cmp
jge
cmp
add
pushf
xlat
push
cwtl
lods
or
or
aam
mov
xchg
scas
push
aaa
fnstenv
icebp
imul
and
push
xor
cmpl
cmp
test
xchg
pop
div
movsl
xor
adc
popf
ret
stos
cmp
push
lock
pop
dec
lcall
adc
lods
imul
inc
mov
stos
jo
outsb
dec
pop
mov
jns
pop
and
popa
pop
mov
test
popf
ljmp
pop
imulb
jo
cld
sub
xor
pop
aad
addr16
dec
jns
fnsave
lds
in
clc
hlt
mov
push
pop
lcall
mov
or
push
out
jae
aam
jmp
mov
xchg
daa
fwait
xor
and
cmpsb
and
jl
lcall
lods
out
mov
or
sbb
mov
pop
mov
sahf
ret
int3
fcmovb
divb
imul
inc
mov
pushf
enter
pop
test
pop
add
shrb
push
arpl
test
jecxz
sbb
jo
xchg
outsb
lea
call
scas
je
lock
das
jnp
aam
add
mov
popa
sti
shl
cld
scas
adc
idivl
pop
jge
add
pop
push
in
or
and
mov
add
aas
inc
push
jle
jbe
mov
ss
jne
imul
sahf
aam
adc
pop
idivb
xchg
int
clc
std
jp
inc
cltd
push
stos
fisttpl
repnz
mov
sub
lods
mov
sbb
add
adc
out
out
mov
push
out
in
sbb
mov
ss
sub
aam
jecxz
clc
shlb
clc
cwtl
inc
outsl
es
or
test
xchg
or
sub
adc
test
fsts
xchg
mov
dec
shr
out
push
jne
inc
push
pcmpeqw
adc
ss
cmp
cmp
ret
push
pushf
cmp
fcomip
mov
push
in
out
or
sbb
mov
pop
push
push
popf
and
and
mov
add
je
xor
sbb
xor
and
xchg
xor
mov
sbb
adc
jnp
mov
dec
xchg
and
mov
and
xchg
jp
inc
jecxz
jp
aam
inc
mov
push
or
xor
and
sub
stc
popa
add
mov
mov
inc
fildl
cvtps2pi
shlb
add
aad
xlat
fs
mov
inc
cmp
xchg
in
adc
or
imul
addl
enter
or
fstps
stos
test
jbe
cmp
lods
xchg
lcall
sub
and
mov
and
inc
dec
imul
loope
mov
daa
inc
pop
sar
dec
push
cmpps
cli
mov
scas
xchg
xor
imul
inc
xchg
jbe
jbe
jnp
sub
fcmovb
cmc
cli
shlb
push
sub
pushf
data16
jne
add
lods
rorl
mov
dec
lds
pop
xor
insb
xor
sbb
mov
push
push
cmp
shl
push
jle
das
jae
pop
and
push
add
lret
scas
std
or
or
out
movsl
leave
jae
mov
popa
dec
lods
pop
lret
cs
mov
pop
sub
rolb
in
jle
push
fistps
jge
sarl
les
fchs
popa
loope
sub
lock
ret
lock
ds
push
jns
xor
push
pop
js
push
int3
push
aas
inc
aad
xchg
cmpsb
push
lahf
push
mov
fdivrp
movsl
loopne
gs
xchg
fmulp
loope
jns
cwtl
sub
in
lahf
xor
and
inc
addr16
and
out
movsl
stc
or
lcall
dec
push
loopne
mov
mov
out
stos
jle
out
mov
lcall
push
pause
xor
ljmp
jnp
jmp
adc
sub
data16
cltd
in
push
dec
inc
xchg
mov
xor
in
dec
leave
test
xor
inc
rcrb
icebp
sbb
or
inc
lcall
jns
sbb
cmp
hlt
icebp
inc
insb
push
popl
pop
cmp
loopne
sbb
jbe
dec
or
inc
cwtl
xlat
insb
push
sahf
mov
fsubrs
pusha
fnstsw
push
rcll
fsubrl
xchg
outsb
mov
jl
and
add
mov
lcall
test
or
jmp
subl
imul
mov
or
mov
fdivrs
daa
and
lds
push
xchg
sub
pushf
pop
flds
pop
adc
rolb
xchg
outsb
mov
push
out
aaa
pop
cmpsb
pusha
cmpsb
ljmp
inc
imulb
std
push
es
test
adc
pop
mov
out
jle
push
out
xchg
xchg
or
xor
push
clc
inc
imul
fwait
push
fisttps
mov
sbb
out
lods
mov
cmp
push
sub
mov
mov
mov
mov
jbe
push
add
cmc
mov
push
adc
stc
in
jmp
jbe
in
loope
nop
repz
fldl
mulps
lds
lods
lea
mov
and
icebp
js
iret
jecxz
les
fsubrs
add
xlat
sbb
orl
mov
xor
cltd
fistpl
jne
xchg
jae
mov
cmp
out
mov
out
nop
aas
popa
repz
ffree
clc
push
jg
jle
jge
mov
enter
inc
mov
insl
mov
clc
add
xchg
mov
xor
add
rcrb
popf
adc
mov
mov
cmp
call
inc
xchg
test
sub
orl
mov
sbb
rorb
ret
cld
out
cs
daa
jne
aas
divb
or
scas
lods
ss
test
stc
aas
sar
outsb
loop
fsubrs
clc
xchg
xor
fdivrl
mov
mov
mov
ret
repnz
js
xchg
adc
and
jo
sbb
cs
js
mov
lahf
aaa
push
mov
out
inc
pop
mov
cltd
andb
sub
fimull
fwait
leave
das
lods
mov
xor
shrb
test
cmc
push
test
or
xchg
pop
out
push
test
xchg
repz
arpl
std
scas
cmp
push
cmc
mov
mov
xor
jecxz
add
shrb
imul
mov
imul
push
fmulp
inc
or
call
adc
bnd
and
jnp
jl
cmp
fsubl
addr16
pop
add
fisubrs
adc
adc
push
es
into
cmp
pop
sti
or
push
and
stos
cmpxchg
jbe
enter
and
push
xlat
vmovq
adc
jecxz
jle
les
ret
andb
inc
push
push
mov
jle
mov
xchg
jno
stos
adc
xor
lods
jecxz
inc
mov
cltd
and
or
test
xorl
adc
jmp
arpl
in
jbe
rorl
sti
push
shll
mov
xor
jb
xlat
jmp
cmp
pop
lods
sub
sti
test
push
testl
test
bound
xchg
lcall
cmp
stos
stos
jne
push
pusha
scas
sub
or
xchg
sahf
outsb
leave
xchg
cmpsb
or
loopne
nop
cmp
inc
loop
cwtl
xchg
xor
or
call
nop
pop
pusha
mov
scas
push
and
push
jle
xor
popa
ret
push
negb
push
or
icebp
loopne
loop
adc
sbb
xchg
jns
fnstenv
jne
dec
setbe
jle
jno
sbb
lds
cmp
push
add
sahf
shlb
fwait
inc
aam
das
mov
dec
dec
je
std
divb
mov
inc
jecxz
cmpsl
jo
cltd
xchg
add
or
rorl
jp
dec
mov
xchg
sub
pop
inc
adc
jg
std
xor
or
cmp
cmp
scas
fisttpl
pop
dec
dec
movsl
inc
add
cld
sbb
sbb
mov
add
cs
mov
or
scas
add
inc
sbb
subb
xchg
jbe
sub
nop
ror
loop
mov
bound
outsb
or
add
push
dec
jae
xor
mov
pop
add
dec
sub
and
mov
int3
lock
dec
sub
jg
cmpsb
or
sub
pop
insb
mov
and
cmpsb
adcl
enter
cmp
in
mov
and
std
cli
push
sbb
push
mov
sub
sarb
fisubrs
arpl
cld
cmp
xor
xor
push
cltd
std
dec
aaa
icebp
xor
ss
outsb
mov
mov
out
xor
lahf
lahf
out
cmp
sub
sbb
imul
leave
cmp
mov
hlt
stc
cltd
in
xchg
insl
fstpl
adc
dec
out
test
fildl
lahf
mov
cmp
pop
dec
jne
fnsave
test
lahf
rorl
imull
push
inc
mov
popa
dec
aas
pusha
fwait
jmp
arpl
repnz
seta
ret
test
pop
insl
cwtl
scas
rorb
inc
inc
xchg
into
fisttpl
fsts
gs
inc
loope
xchg
hlt
cmp
stc
test
sbb
push
inc
shlb
xchg
fmuls
inc
imul
jbe
in
jno
fistl
cmpsb
push
lret
mov
pusha
adc
jmp
repz
divb
pop
ror
inc
addr16
push
push
int3
sti
pop
mov
fdivrl
fs
shll
and
xor
stos
adc
xchg
xchg
jo
sub
push
adc
lds
cmpsl
test
ror
dec
mov
sarl
adc
or
cld
outsl
cmpsb
pop
jl
in
ds
push
arpl
icebp
sub
xor
mov
clc
sbb
outsl
repnz
call
push
xor
or
xchg
icebp
aaa
xchg
fisttps
rorb
mov
mov
out
inc
jbe
push
mov
cltd
dec
dec
roll
lock
pop
sub
icebp
inc
pop
pusha
cmc
cmp
add
std
loope
sub
sbb
cmp
into
jne
xor
clc
adc
lods
jp
clc
inc
inc
push
lret
ret
aas
hlt
lods
test
mov
loop
mov
fistpll
popa
insl
cmc
adc
lods
test
sub
cwtl
icebp
cmp
push
iret
mov
mov
push
push
mov
inc
leave
ret
inc
roll
aaa
imul
bound
xchg
sub
add
push
enter
push
push
and
pushf
dec
fcmovbe
cmpsb
movsb
in
jb
scas
in
and
imul
jns
mov
loope
add
mov
xor
fisubs
aam
dec
add
rcrl
aad
loopne
xchg
sub
push
add
test
fmuls
in
rorb
sub
adc
mov
testb
sti
mov
icebp
movsl
adcb
imull
mov
ret
or
xchg
inc
jne
stos
inc
shll
mov
addb
loope
shlb
out
push
cmpsb
popa
pop
push
stos
adc
mov
fs
out
lcall
popl
or
adcb
test
sbb
repz
push
add
push
jo
push
xor
jl
cmc
aam
subps
shll
fisubl
out
fldenv
xchg
mov
aas
loope
jecxz
lods
loopne
stos
pop
fwait
test
fldt
loopne
pop
imul
ret
hlt
jg
jl
cs
jbe
dec
je
mov
out
test
mov
adc
rorb
xchg
mov
xor
push
jp
lret
ds
jo
push
js
inc
lret
pop
fcmove
push
sub
ret
dec
mov
ljmp
jns
inc
fists
add
inc
fld
test
das
jbe
das
mov
test
sbbl
nop
dec
mov
mov
pop
arpl
cld
popa
inc
adc
xor
fnstcw
push
aaa
out
ret
mov
icebp
add
mov
lret
es
std
sub
fnstenv
or
lcall
mov
lock
loop
pop
sub
outsl
lret
mov
mov
xchg
push
and
add
and
cmpsb
repnz
jle
ja
inc
out
mov
or
jge
enter
and
pop
icebp
and
xchg
cs
and
scas
inc
dec
mov
lret
loop
fisubs
and
out
mov
mov
add
je
incl
lahf
cltd
xchg
sbb
add
cmc
mov
push
pop
or
push
mov
in
sub
xor
out
test
in
add
inc
pop
gs
mov
dec
mov
add
pop
lahf
mov
push
mov
xor
push
pop
pop
and
sub
iret
dec
cmp
dec
mov
les
fucomip
xchg
repz
imul
xchg
gs
lret
inc
imul
aad
test
fldcw
mov
xor
inc
dec
jmp
adc
aaa
lock
dec
mov
jecxz
das
mov
jl
jae
mov
mov
outsb
notl
mov
sahf
sbb
xchg
xchg
pcmpgtd
bound
mov
add
and
insl
xchg
mov
fiadds
dec
shl
daa
push
pop
or
mov
testl
mov
int
jae
mov
mov
aam
sub
ss
mov
mov
jo
arpl
andl
fucomi
sub
cld
push
or
rcll
lahf
xor
nop
push
das
int3
fdivrl
cmp
inc
fsub
sub
jmp
cmp
cltd
mov
test
adc
dec
cwtl
das
popf
lods
cwtl
mov
push
or
xchg
push
scas
or
lcall
xchg
sbb
pushf
cmpb
mov
add
fmull
fists
sahf
les
add
lcall
int3
jne
pop
bound
pop
push
ret
push
jo
test
lcall
mov
push
pop
test
jno
cld
xchg
cld
adc
and
xor
addl
add
jae
dec
and
mov
or
mov
test
stc
cli
movsl
subl
sbb
dec
mov
out
out
adc
ds
xchg
inc
xchg
loope
push
stos
push
jnp
pusha
cmp
jne
push
xchg
nop
insl
or
lods
leave
push
inc
cmc
xor
add
cmpl
mov
imul
test
in
jbe
xchg
jmp
pmaxsw
dec
dec
call
daa
adc
ret
sbb
pop
dec
shrb
inc
mov
arpl
repz
ss
cwtl
aad
sub
push
hlt
mov
shlb
lcall
mov
cmpl
fdivl
sbbb
pop
mov
xor
leave
daa
in
push
int3
test
insb
int
cmc
jo
call
xchg
xor
notl
inc
in
std
adc
lods
jne
push
add
popa
push
inc
pop
adc
das
mov
lcall
jbe
hlt
mov
add
test
inc
int3
cmpb
fildll
mov
inc
iret
sub
add
push
push
dec
ret
call
jle
pop
dec
lods
in
pop
jg
xchg
mov
sbb
sub
mov
jno
test
sarb
jae
into
lds
jle
rcll
lret
les
sub
jno
std
into
pop
stos
pushf
xor
aaa
add
add
push
stc
stos
loope
stc
mov
pop
lret
and
shll
fstpl
xchg
and
push
call
sub
repnz
pop
idivl
data16
fwait
stc
push
push
stos
cmpb
lcall
outsb
and
jmp
test
mov
stos
outsl
pop
dec
shl
inc
fsts
pop
dec
inc
fldcw
mov
lds
add
repz
insl
xchg
out
outsb
push
mov
push
jbe
xchg
popf
mov
xor
rcrl
scas
pop
out
mov
pop
std
xchg
mov
mov
add
mov
mov
rcll
inc
std
push
inc
cmp
test
push
cmp
sub
xor
lret
sbb
pop
add
ficomps
pop
sti
push
mov
sbb
mov
or
inc
sbb
imul
inc
and
mov
mov
leave
shl
fstpl
ds
mov
dec
fsubr
xor
sub
sub
jle
and
mov
pop
xchg
iret
outsb
test
xchg
sbb
ficoml
inc
pop
popa
dec
xor
shlb
stos
cmp
fmulp
cmp
add
inc
daa
lea
xorl
jbe
fsubr
or
lock
lds
daa
sti
es
and
xchg
sti
enter
je
mov
and
inc
mov
dec
inc
pop
inc
adc
add
add
leave
clc
sti
or
add
dec
ret
sbb
cmp
sbb
pop
lahf
shrb
mov
lcall
mov
ds
cmp
pushf
mov
out
sbb
sarb
inc
icebp
push
and
xlat
mov
ss
je
scas
in
lock
pop
test
mov
jmp
leave
popf
cmp
xchg
inc
cmp
int
pop
xor
fnstcw
and
std
incl
rol
push
adc
loop
push
divl
cmc
push
and
jo
cmp
js
dec
push
cmp
jo
mov
dec
inc
jp
push
and
add
sub
jno
stos
fisttpll
jp
clc
cmp
cmp
mov
mov
push
adc
xchg
stos
xorl
adc
and
fwait
add
mov
movups
adc
addr16
sub
shlb
popa
clc
out
xor
push
in
fstpl
push
or
lret
jmp
jo
or
enter
cmpb
pop
or
movsb
cmp
in
ss
in
jg
xchg
inc
hlt
ss
arpl
inc
xchg
sti
sbb
mov
xor
cwtl
and
and
jecxz
aad
xchg
pop
sti
test
inc
xor
cmp
rcrl
or
cmp
or
sbb
out
mov
jnp
ds
subl
negl
and
cld
out
or
mov
roll
push
es
cwtl
add
push
popf
push
or
adc
or
xchg
movsb
jle
xlat
sar
fstps
xor
mov
adc
mov
dec
or
loope
xor
mov
adc
icebp
arpl
adc
mov
fists
xor
lds
xchg
iret
xor
sub
scas
push
bndstx
mov
xchg
es
cmp
les
js
jns
jg
jb
or
sub
xor
mov
push
pop
stos
mov
into
pop
jo
mov
mov
pop
dec
pop
mov
cmc
mov
add
pushf
fs
lea
push
in
sahf
sahf
mov
adc
stc
outsb
ljmp
push
decl
mull
ss
out
add
mov
mov
lea
and
mov
jns
repz
xchg
ret
inc
sbb
sbb
out
inc
movmskps
loopne
xlat
push
lahf
enter
arpl
xchg
or
adc
dec
xchg
sub
lahf
popf
push
cmp
decb
rcll
shr
stos
daa
inc
jbe
dec
cs
mov
test
cmp
leave
inc
lea
pop
mov
mov
outsb
loopne
sub
mov
mov
mov
enter
xor
call
ret
fs
adcl
mov
xor
xchg
add
jmp
test
mov
dec
or
les
stos
test
mov
jne
jbe
cmp
insl
cmp
stos
rcll
xor
les
push
sbb
push
mov
jns
inc
xchg
jl
cld
jp
and
pop
lds
push
outsl
ljmp
out
addr16
lcall
sbb
out
pusha
mov
arpl
outsb
mov
jne
add
jp
lret
add
xchg
es
jge
jns
xchg
iret
cmpsb
fnsave
lods
loope
test
in
aad
push
insb
mov
mov
or
sarl
sti
and
jo
jmp
sbb
repnz
adc
dec
popa
mov
push
popf
dec
adc
and
dec
cltd
xchg
test
pop
push
inc
lcall
aas
push
inc
fildll
lock
daa
popa
mov
mov
mov
orl
and
insb
mov
push
aam
pop
outsl
inc
arpl
mov
jns
rcll
das
popa
sbbl
repz
pop
jl
stc
mov
jle
dec
mov
ds
pushf
sbb
fnstenv
sub
fnstcw
imul
add
adc
or
mov
inc
pop
loop
gs
mov
bound
xchg
or
in
mov
pop
stos
push
push
or
inc
sbb
imul
inc
adc
jns
inc
cmp
fs
scas
mov
jnp
dec
cltd
lds
or
xchg
xor
mov
lds
int3
mov
pop
add
cltd
lret
xchg
int
repz
cs
mov
ret
int
pop
fsubrs
inc
test
xor
sarl
inc
testb
les
repnz
cmpsl
rorl
xchg
inc
imul
cmp
mov
stos
mov
int
out
popa
cmp
and
test
aam
xor
popa
dec
daa
sub
lcall
jge
dec
dec
and
ja
xor
aam
lods
add
out
add
mov
xchg
shl
xchg
xor
pushl
mov
out
mov
inc
pop
lcall
jecxz
and
daa
jno
mov
adc
add
xor
cmpsb
outsl
xchg
or
lods
ret
mov
push
sahf
add
mov
pop
xor
fnsave
arpl
and
pop
mov
sbb
ffreep
inc
jns
sarl
push
mov
out
out
int3
fiadds
and
aam
mov
push
in
fwait
add
scas
add
stc
mov
cmp
xor
xor
data16
pop
mov
sti
movsb
rolb
jle
jge
clc
xor
dec
or
pop
add
cmpb
inc
out
mov
sub
insb
jge
imul
idivl
sub
outsb
sarb
cs
orb
jmp
mov
cmp
cmp
test
dec
in
pop
sub
lret
xchg
push
sbb
mov
leave
push
sbb
pop
aas
call
mov
and
add
stos
cmp
repnz
pushf
mull
into
inc
aad
dec
xor
add
push
scas
sub
repz
lock
fwait
ljmp
fistpll
loop
js
adc
xchg
and
add
mov
jb
mov
inc
mov
test
lret
pop
in
fndisi(8087
aam
jmp
scas
rolb
cmp
sbb
lea
test
inc
pop
push
or
xchg
mov
jo
xchg
xchg
mov
xchg
mov
lret
adc
sub
addb
scas
insb
mov
or
mov
mov
mov
add
fldl
jae
aad
sub
mov
adc
adc
push
adc
cld
js
hlt
repz
push
aaa
lahf
sbbb
add
lret
cwtl
repnz
enter
ljmp
imul
stos
test
add
scas
xchg
mov
jns
and
jp
push
mov
and
xor
scas
test
sbb
sbb
mov
cld
push
mov
in
imul
xchg
jp
clc
mov
and
mov
scas
push
mov
push
sbb
mov
push
jo
add
iret
cmpsl
pop
out
popf
mov
ja
out
gs
mov
mov
mov
dec
ja
xchg
int
mov
pushf
or
pusha
es
sbb
inc
loope
cltd
sub
lret
fidivrl
ss
stos
inc
out
mov
stc
nop
sub
push
adc
mov
scas
lahf
test
jbe
mov
sbb
or
push
lret
sub
jmp
or
sbb
sar
arpl
push
pop
mov
cmp
pop
dec
pop
fistps
push
stos
movsb
stc
cmp
push
jg
fdivr
scas
push
cwtl
cmp
or
jle
hlt
imull
rcr
adc
aas
movsl
or
xchg
pop
xchg
mov
sub
in
daa
pusha
sbb
and
add
mov
shrl
and
mov
icebp
dec
insb
adc
dec
and
stos
ds
mov
test
pusha
scas
idiv
sbb
fnstenv
loope
das
inc
imul
mov
into
ficompl
out
push
xor
jmp
mov
lods
lea
xchg
insb
aaa
sub
mov
mov
xchg
push
in
xchg
iret
sub
sub
jno
outsl
insl
lahf
xchg
loopne
adc
shrb
hlt
push
ret
fwait
pop
mov
pop
pop
xchg
fs
jo
gs
fdivrl
lcall
sub
not
push
mov
push
jp
call
mov
in
add
repz
sbb
sbb
enter
pop
cld
scas
mov
jnp
xor
pop
repz
cltd
dec
cmp
movsb
lret
movsl
icebp
dec
cmpsl
test
arpl
movsb
jge
test
mov
sub
outsl
sbb
xor
mov
jo
xchg
sub
sbb
and
inc
stc
ret
mov
jo
jp
les
mov
xor
in
sub
shrl
jmp
shlb
cld
or
mov
or
mov
sub
jmp
repnz
add
or
mov
nop
movl
mov
repnz
adc
ljmp
inc
sbb
dec
jnp
in
ficoml
xor
and
mov
mov
lea
adc
and
or
aad
jp
daa
sub
rorb
push
dec
dec
pop
sbb
and
adc
jns
clc
jl
push
jb
out
ja
and
imul
jne
data16
sahf
jl
sbb
jmp
loop
clc
add
test
or
xor
orb
call
mov
xor
mov
push
jae
pop
insb
jnp
mov
jecxz
fwait
push
enter
sti
insb
imul
jecxz
inc
or
cmpxchg
frndint
dec
fistpll
es
dec
daa
jge
jmp
mov
mov
and
sub
shld
aad
sbb
add
jmp
push
lret
fstpl
jl
lds
pop
test
in
icebp
and
xor
jne
xor
scas
adc
cmp
test
repnz
xchg
pop
sti
sti
test
decl
mov
sbb
jmp
scas
mov
mov
scas
mov
lods
dec
aas
hlt
shll
push
les
out
int3
repnz
jle
arpl
mov
idivb
cmovs
sbb
cmp
sub
sti
stc
push
adc
shl
jl
sti
data16
xor
movsw
jp
pop
jbe
pushf
js
insb
test
sbb
imul
pop
cltd
mov
sub
out
mov
sbb
or
test
or
dec
iret
cmp
scas
repnz
enter
lds
outsb
jnp
jo
jnp
xor
test
aad
scas
lods
adc
pop
pop
or
jb
sub
loopne
push
xlat
ret
ficomps
adc
and
mov
xchg
pop
push
cs
aaa
add
mov
daa
mov
fisubs
dec
aas
inc
dec
test
nop
inc
mov
pop
dec
dec
dec
pop
repz
jne
dec
call
dec
idiv
int
lahf
mov
xor
mov
ficoml
or
ljmp
sub
cmpsb
mov
repnz
and
imul
icebp
mov
test
pusha
xor
mov
loop
xor
mov
push
fwait
cmpl
adc
sbb
movsb
push
ds
add
out
mov
lods
es
popa
scas
bound
mov
xor
test
mov
sub
inc
sub
roll
lock
ss
and
and
popa
mov
mov
adc
in
mov
out
gs
xchg
inc
adc
jmp
mov
sub
fnsave
xchg
sbb
int
stc
mov
xchg
push
lcall
rclb
std
popf
jge
pop
sbb
mov
or
jbe
dec
rclb
leave
add
mov
cmp
adc
mov
push
mov
std
push
add
lret
mov
add
mov
push
and
adc
add
add
xor
adc
pop
orps
jle
adc
test
leave
fstpt
inc
int3
dec
cmpsl
in
fldl
fistl
pushf
push
mov
cmc
cmp
fwait
cmp
jle
xor
mov
inc
arpl
push
xor
fldt
lret
sbb
xchg
adc
lret
push
sbb
cmp
push
jmp
lock
enter
mov
mov
jb
mov
divl
pop
pop
push
icebp
xchg
push
lcall
and
fiaddl
fsts
in
lds
or
pop
sub
int
pop
xlat
out
lea
loope
std
mov
in
jmp
fstl
ljmp
rorl
mov
daa
or
mov
std
sbb
lods
xchg
sbb
push
xlat
pop
xchg
mov
and
push
inc
call
lret
fists
jb
shrl
add
mov
jp
stos
mov
sbb
jne
mov
imul
mov
scas
and
sub
or
shlb
adc
sub
dec
insb
jns
xor
mov
loope
dec
icebp
jmp
hlt
pop
std
xor
mov
jae
cmp
mov
pop
addr16
push
fmuls
jp
or
fcoml
or
mov
shrb
divps
incl
push
mov
bound
arpl
pop
das
add
push
aaa
fcomps
push
lret
lods
add
leave
sbb
cmpsb
out
sbb
inc
mov
cld
xor
jmp
cli
cmp
scas
cmpb
lahf
or
out
movsb
adc
arpl
scas
test
and
cli
fnstenv
out
push
sub
cs
out
sbb
pop
ror
sahf
sub
sbb
inc
popf
cmp
shrl
daa
push
flds
scas
cwtl
ds
call
pop
jns
repz
add
insl
scas
xchg
adc
sub
jg
pop
mov
flds
js
jg
push
movsb
repz
push
adc
or
mov
loope
lods
cmp
sub
movsb
push
sbb
test
jecxz
jns
xchg
jmp
jb
aas
out
adc
out
out
outsb
fsts
mov
dec
test
pop
enter
mov
test
mov
js
ja
loop
or
sbb
cltd
push
cmp
jb
fstps
ljmp
cmp
mov
cmp
cwtl
cmp
rcrb
loope
cmc
iret
repnz
mov
pop
xor
dec
sbb
jmp
pop
lret
int3
push
xlat
ret
ljmp
adc
pop
jp
xchg
je
shll
pop
mov
push
das
add
jne
mov
add
sub
mov
mov
inc
or
and
sub
sub
jecxz
add
inc
movsb
dec
lds
subl
push
pop
push
shl
push
adc
test
out
aas
je
add
inc
sti
fdiv
push
and
adc
mov
loop
orl
cmp
xor
insl
sub
push
psllq
push
into
jne
in
or
add
jae
ficoml
ret
es
fstpt
addr16
lahf
xor
scas
divb
jg
add
test
loopne
in
leavew
push
fwait
sbb
mov
xchg
sbb
data16
dec
add
test
pop
sub
pushf
loope
fistl
sub
push
jno
fucom
lods
and
mov
cld
ss
shl
aad
jecxz
add
int3
and
imul
and
flds
lret
or
cmp
test
cli
ss
fsubs
and
jmp
icebp
movl
dec
test
mov
push
stos
adc
cmp
mov
das
outsb
enter
and
jnp
in
rclb
out
loopne
test
jb
cmp
int3
cmp
hlt
push
in
addl
xor
mov
cmp
scas
mov
add
movsb
lret
ror
test
sub
or
repnz
in
cmpsb
jae
push
fstp
xchg
cmp
ss
out
loop
dec
test
jno
outsb
push
repnz
into
in
cli
test
sbb
jno
imul
subl
test
popf
sbb
cli
cmp
idivl
sub
inc
mov
mov
ret
ss
aaa
fimull
and
xor
push
or
pop
mov
mov
inc
inc
xor
fst
mov
int
sbbl
movsb
pusha
repnz
loop
xor
test
cltd
or
push
cmpsl
mov
push
xchg
add
lret
aam
xor
pop
mov
fstl
adc
call
loope
jl
fcom
das
mov
xchg
int3
movsl
push
test
ljmp
mov
dec
movsb
popa
jne
hlt
inc
and
cs
in
lock
cmp
into
inc
jnp
dec
mov
xor
inc
dec
dec
nop
lret
negb
adc
mov
fwait
push
mov
dec
imul
inc
sub
cmp
sbb
jb
sahf
mov
dec
movsb
repz
xor
outsl
mov
sub
movsl
pop
nop
nop
adc
sarb
sahf
clc
adc
je
gs
pop
jae
mov
pop
adc
pop
mov
out
insb
pop
or
mov
mov
sub
lcall
dec
lret
mov
or
clc
sbb
imul
cmp
scas
mov
shl
or
ss
pop
inc
mov
add
jnp
out
cmp
lds
pop
fcoms
xchg
dec
xchg
jmp
and
insl
outsl
test
mov
pushw
push
inc
pop
mov
jp
mov
mov
xor
mov
lods
andb
cmp
dec
daa
sub
pop
mov
xchg
out
push
adc
inc
pop
fadds
mov
jmp
pop
or
icebp
into
ret
xchg
cmpsl
add
push
cmp
shl
or
scas
jbe
mov
xorl
mov
add
dec
mov
xor
mov
mov
lds
cmp
leave
ds
fstp
jne
mov
movsb
pusha
lret
stos
cmp
cmpsl
inc
jbe
sbb
inc
das
bound
in
ja
mov
fwait
push
mov
mov
inc
cmp
mov
ret
adc
fdiv
adc
pop
jbe
jnp
mov
les
sbb
sub
xchg
cs
es
jl
pop
xor
aam
xchg
add
inc
jno
mov
lods
stos
sub
xchg
mov
stos
fiaddl
and
jl
cmp
and
test
xchg
mov
aaa
inc
add
pop
icebp
scas
inc
cwtl
xor
push
mov
or
mov
inc
test
ljmp
mov
dec
lahf
in
sbb
jne
add
imul
loope
es
mov
mov
rorb
arpl
dec
or
xchg
loope
dec
cmp
jle
les
jg
fsubrl
dec
push
movsl
jge
es
xchg
mov
jmp
mov
jp
xchg
mov
pop
push
push
add
inc
aad
js
cmpsb
push
sbb
cwtl
outsb
stos
xor
sub
clc
cmc
in
std
cmc
xchg
adcb
jo
ret
or
adc
push
and
mov
lds
jl
xor
aaa
loopne
mov
dec
xor
cmc
mov
data16
sbb
adc
or
xchg
arpl
in
push
dec
pop
and
inc
mov
lock
lods
cmp
dec
mov
ja
nop
roll
cmp
mov
dec
aad
je
pop
repz
outsb
or
mul
inc
mov
stos
xlat
sbb
and
add
pop
test
inc
mov
add
sub
push
adc
sbb
test
mov
adc
outsb
in
fistpl
adcb
cmp
add
popf
bnd
in
xor
scas
cmp
out
mov
mov
sbb
cmp
cmpsb
insl
sub
dec
fisttpl
popf
sbb
pop
es
sbb
inc
mov
repnz
movsb
out
xchg
jg
mov
jae
mov
xor
loop
add
push
pop
pop
pop
cmp
cmpsb
mov
adc
mov
sti
fcomps
rol
mov
lret
sub
cltd
lods
jmp
or
std
icebp
pop
fcoml
fbld
outsb
lret
lahf
loopne
sbb
jns
inc
mov
and
orl
inc
sub
gs
stc
xor
scas
and
jg
mov
and
das
mov
dec
sahf
shrb
insl
into
addr16
arpl
mov
xor
add
pop
push
push
pop
sbb
out
push
add
cmpsb
popf
test
push
test
jno
xchg
call
pusha
cmp
adc
sbb
imulb
pop
xchg
arpl
dec
sbb
sbb
mov
mov
mov
movsl
imul
das
pop
stc
sbb
in
outsl
inc
fildl
das
in
shll
xor
std
loope
adc
imul
dec
sbb
sub
mov
xorb
inc
or
pop
scas
push
loop
pop
loop
mul
data16
fmull
cltd
sub
clc
pop
dec
mov
idiv
fistpl
mov
jb
xchg
inc
stos
pushf
sti
adc
in
and
divb
test
insl
push
cmc
test
andb
xchg
adc
inc
mov
or
xor
in
add
inc
out
outsl
leave
mov
or
xchg
mov
jnp
decl
pop
pop
sbb
bswap
test
outsb
repz
adc
mov
shrb
pop
or
or
fadds
movsl
lahf
and
ror
fadds
sub
call
mov
aam
imul
or
pusha
lea
aas
or
adc
push
jmp
iret
inc
jbe
jbe
pop
rcll
lea
mov
xchg
pusha
mov
orb
jle
imul
iret
sbb
mov
cmp
mov
pop
jb
xchg
inc
lret
xor
push
xchg
popf
test
pusha
outsb
or
xchg
jge
jae
lret
mov
enter
movd
fistl
xor
into
das
mov
je
jns
outsl
inc
cwtl
repz
mov
lret
sbb
daa
cmc
cmp
popa
outsl
test
shlb
push
call
sub
push
imul
xor
insb
push
push
mov
hlt
shlb
pushf
adc
adc
dec
jle
push
test
cltd
jmp
push
mov
dec
sbb
or
jle
daa
or
and
call
push
push
mov
fisubs
ficompl
mov
fsubrs
sti
lahf
mov
pop
and
ss
jb
lret
xchg
xchg
rclb
mov
aam
fnstenv
sbb
jnp
loope
sbb
loop
push
and
cs
mov
fld
les
push
popa
push
ja
adc
fs
loop
inc
scas
loope
insl
pop
sub
addr16
lret
pop
stos
test
and
insb
cmpsb
lods
cmpsb
pop
lods
or
clc
push
mov
out
push
movsl
pop
adc
clc
push
or
std
jmp
jae
mov
ror
mov
sbb
jecxz
xorb
addr16
push
ret
xor
cld
ljmp
fwait
call
pop
sbb
push
ret
jae
lret
pop
jmp
enter
or
in
mov
xor
mov
xor
sti
xchg
xor
adc
mov
pop
mov
push
std
push
imul
testl
scas
pop
push
enter
sbb
add
dec
and
scas
dec
stos
sub
mov
xor
out
sbb
mov
into
gs
roll
dec
dec
sbb
mov
and
out
push
out
sbb
jns
sub
and
sarb
or
ljmp
mov
add
sbb
lods
arpl
adc
addr16
sti
sbb
pop
inc
jo
adc
int3
faddl
pop
orl
lea
leave
sbb
mov
jb
mov
adc
inc
stc
loop
sub
into
or
sbbl
mov
bound
das
xor
jl
inc
xchg
xchg
xchg
jae
mov
vaddsubps
popf
cmc
arpl
mov
and
pop
out
sub
adc
mov
dec
adcl
jb
push
mov
test
pop
fwait
mov
lds
mulps
xchg
das
outsl
in
mov
pop
xchg
call
add
dec
cs
or
sub
pop
dec
pop
mov
mov
test
adc
jle
lods
sti
jns,pn
jb
mov
cmc
jle
test
scas
jl
fcmovu
scas
push
mov
addr16
das
xchg
pop
ficoml
adc
jne
jo
sbb
enter
pusha
aaa
xchg
lods
jg
in
rcrl
lds
clc
adc
bound
adc
mov
mov
fstpl
or
cmp
sbb
icebp
out
ret
fs
xor
add
ja
xor
mov
test
or
sahf
jecxz
js
into
clc
mov
fnsave
push
out
sub
sbb
or
addr16
pop
xor
jne
dec
jecxz
movsb
mov
xchg
add
leave
scas
xchg
mov
arpl
lcall
and
adc
orb
repz
and
sahf
push
or
in
jle
mov
jmp
mov
fcmovbe
sub
movsb
je
dec
in
xchg
repnz
mov
lock
sbb
pop
push
mov
ret
inc
jp
sub
lods
xor
fisttpl
xchg
shll
jmp
dec
sarl
add
jg
mov
push
iret
sbb
cwtl
dec
fisttpll
jbe
mov
into
fldt
clc
data16
mov
sub
xor
xchg
mov
mov
mov
dec
sbb
scas
jae
sbb
into
into
cld
rcll
fildl
sub
inc
mov
push
fisubl
leave
pop
shrl
mov
dec
dec
push
mov
adc
mov
cmp
push
pushf
int3
aam
mov
xchg
push
aad
pusha
mov
push
mov
xor
stos
inc
pop
imul
bound
push
mov
dec
rcr
test
mov
sbb
and
insl
arpl
xor
mov
test
addb
inc
call
or
pop
scas
lods
loop
dec
jae
scas
xor
jae
push
mov
loopne
sahf
xor
cmp
pop
lods
test
roll
nop
lcall
std
imull
aas
xchg
outsl
shlb
mov
mov
loope
mov
xchg
inc
loop
xor
mov
mov
stc
mov
pop
cwtl
mov
dec
out
cli
int
mov
lcall
jmp
mov
add
test
lea
adc
adc
adcl
dec
sbb
xchg
jae
push
das
daa
test
bound
ss
insb
fcmovnu
and
adc
mov
inc
in
jo
loopne
sarb
ss
js
pop
mov
imul
and
ret
sub
sbb
jnp
dec
jl
ret
push
jge
xchg
sbb
add
add
jle
inc
pop
sti
addr16
test
mov
cmc
sarl
test
aas
mov
scas
adc
mov
and
loope
dec
mov
lahf
call
and
int3
sbb
bound
xchg
dec
push
sbb
xchg
imul
mov
xchg
jle
into
mov
dec
mov
mov
jmp
sub
sbb
lcall
mov
out
movd
fsubrp
aam
add
mov
fcoml
sbb
cmpsl
fimuls
push
inc
and
xor
xchg
roll
cmp
popa
insl
imull
fisubrs
popa
xchg
push
stos
adc
xchg
scas
push
ss
xchg
pop
cmpsl
repz
mov
mov
sbb
testb
mov
xchg
data16
push
cmp
lds
aad
cs
stos
mov
and
pop
in
adc
cmp
movsl
stc
mov
jl
in
mov
es
addr16
sub
mov
pop
pop
jno
scas
rcrl
fists
dec
mov
and
jg
fwait
das
pusha
dec
adc
out
mov
lods
push
inc
push
jo
mov
mov
pop
xchg
push
cmpsb
adc
add
scas
xlat
inc
mov
add
test
inc
jmp
or
sti
and
and
adc
pop
aam
mov
clc
into
mov
jns
aas
inc
arpl
das
lea
cmpsl
and
jp
adc
pop
jne
pop
addr16
push
aad
loope
adc
mov
mov
rorl
or
xchg
je
imul
sub
pop
xor
push
fldenv
add
mov
fistps
sbb
aam
imul
fcmovu
popa
int3
into
xchg
or
fmull
sbb
inc
jns
pop
or
lcall
test
sbb
cmpsb
xchg
cltd
xor
cmpsb
mov
mov
sbb
ds
in
add
shll
stc
mov
fs
stc
call
cs
xor
dec
inc
push
andl
add
cmc
mov
sub
xchg
dec
outsb
js
das
pop
jg
push
test
out
adc
fs
jl
inc
or
out
xor
mov
sub
xlat
mov
push
mov
sti
fwait
iret
subl
je
stos
and
clc
add
jne
out
dec
adc
leave
das
mov
mov
dec
test
dec
fwait
mov
xor
flds
or
xor
pop
push
push
sti
lock
pop
jns
mov
and
pop
dec
xchg
orl
popa
cmp
sub
lret
fidivrs
aad
inc
jno
lahf
es
push
add
inc
mov
xchg
and
fwait
call
cmpsb
rcl
xchg
inc
dec
xchg
repz
dec
xor
cwtl
jl
sbb
xor
mov
out
loope
dec
mov
out
sbb
adc
mov
popf
cmp
mov
add
repz
cld
dec
hlt
fstpt
and
jge
xlat
xor
ljmp
in
dec
adc
mov
mov
testl
in
sub
filds
lret
dec
mov
and
push
mov
scas
jecxz
sbb
push
movsb
push
mov
cmp
shlb
xor
cmp
incl
sbbb
jmp
xchg
xlat
mov
test
pop
loop
adc
loop
vpmulhw
out
cmpb
hlt
bound
cld
dec
scas
push
in
iret
or
jecxz
jl
adc
pop
jae
lods
arpl
cmp
arpl
xor
mov
gs
rcll
adc
mov
ret
mov
paddusw
movsb
cmp
push
in
out
hlt
shr
mov
add
gs
rorb
test
out
int
shll
call
sub
int
popf
push
jmp
je
jae
jbe
in
fbstp
xor
push
mov
or
in
mov
pop
inc
pop
dec
sbb
push
imull
insb
cs
dec
push
pop
loope
gs
xchg
pop
idivl
cld
js
cmp
in
dec
jle
int3
add
mov
mov
out
inc
icebp
mov
aad
or
jno
or
popa
fwait
pop
pop
cltd
test
inc
jo
push
in
mov
roll
data16
jnp
pop
push
fsubrp
dec
lock
xor
bound
jl
add
jo
fwait
jns
inc
sub
or
jg
add
pop
mov
mov
shl
shll
mov
inc
and
shll
daa
lret
adc
jle
push
xor
mov
fidivrs
push
mov
sbb
dec
xchg
iret
inc
es
daa
pop
fidivs
in
pop
in
mov
std
and
je
clc
iret
sub
fnstenv
mov
mov
call
push
fildl
imul
bound
fidivrl
lahf
sub
pop
sub
add
cltd
push
cmp
test
addr16
fbld
cmp
mov
outsb
sarb
dec
hlt
dec
je
fwait
stos
sub
sbb
ja
sarl
das
inc
and
sbb
arpl
mov
into
add
leave
movsb
inc
int
iret
push
ret
fwait
bound
scas
or
repnz
push
inc
scas
scas
jecxz
popa
xchg
dec
repz
sub
mov
data16
push
lods
xchg
jbe
mov
mov
lds
cmp
mov
jmp
jle
fs
xchg
push
es
jecxz
cmp
sub
out
push
ljmp
jmp
xlat
andb
pop
in
jmp
add
call
or
stos
xor
mov
pop
lods
xor
jle
mov
mov
cld
orl
pop
repz
inc
xor
inc
popa
mov
ljmp
sbb
into
jo
hlt
sbb
pop
leave
enter
mov
sub
push
xor
imul
sti
xor
repnz
lock
cmp
sub
xorb
pop
mov
ret
into
cltd
sbb
sbb
mov
mov
dec
xchg
sub
mov
jle
pop
enter
and
pop
adc
mov
pop
nop
lods
mov
enter
or
fwait
and
xchg
call
and
lahf
lock
or
sub
or
jmp
daa
sbb
cmpsb
mov
adc
mov
inc
popf
sti
push
std
shll
js
cmp
adc
mov
xlat
std
ret
jle
out
inc
and
and
mov
sbb
jno
xor
xchg
jne
mov
cmp
push
dec
inc
ljmp
dec
fs
pop
dec
pop
outsb
push
dec
xor
fs
pop
mov
cmp
mov
cmc
imul
in
dec
sti
mov
jae
test
push
push
mov
jns
ret
lock
and
xchg
bound
mov
push
daa
mov
adc
mov
repz
inc
out
mov
sub
xchg
das
sbb
shll
js
addl
push
pusha
push
xor
push
mov
add
jb
int3
lret
in
cmpsl
into
pop
adc
popa
dec
ret
pop
scas
inc
mov
add
fistl
xlat
sbbl
imul
outsl
adc
inc
xchg
mov
pushf
filds
lcall
test
hlt
dec
aaa
movl
adc
mov
push
xlat
cmp
jmp
and
ds
add
inc
insb
stos
pop
insb
inc
aad
jmp
dec
xchg
fwait
cmpsl
push
rorl
scas
pop
or
cmp
arpl
sarl
fsts
lods
adc
xlat
add
add
jp
inc
push
pusha
inc
add
inc
fwait
mov
xor
inc
pop
xor
div
mov
mov
out
mov
fwait
cltd
sub
sub
outsb
inc
test
push
lret
add
mov
ljmp
xlat
addr16
jmp
shl
push
outsl
mov
cmp
mov
jns
ds
dec
push
xchg
inc
movsb
mov
out
add
fdivrs
add
jmp
mov
mov
jbe
loope
push
mov
push
jne
subl
jbe
mov
insb
sti
test
addl
adc
xor
loope
or
stc
loope
mov
insb
jb
sub
xchg
orl
arpl
jg
scas
out
pop
xor
jge
pop
or
jecxz
push
jmp
inc
jmp
addr16
dec
repz
push
push
and
jo
pusha
test
lcall
mov
fsubrl
jl
dec
in
out
adc
fldenv
in
jb
mov
scas
add
fldl
add
jne
or
pop
inc
shl
test
ret
jo
pop
cmp
pop
adc
jecxz
jnp
stos
into
push
sbb
xor
xor
push
xchg
mov
jnp
add
xor
outsl
fdivrl
push
fmuls
imulb
adc
adcl
aaa
jno
jmp
int
scas
add
push
ror
notb
pop
push
test
add
in
mov
sbbl
test
xchg
int3
stos
inc
bound
scas
insb
pop
sbb
fdivrs
and
int
mov
mov
int3
mov
int3
sbb
mov
xor
jl
sbb
or
fwait
je
mov
xchg
rcr
push
ja
int
stos
inc
cs
xchg
nop
pop
fs
pop
fadds
push
dec
popf
pop
and
pop
pop
xor
xchg
adc
mul
test
test
xor
cli
stos
add
cmp
sarl
and
or
sti
jnp
mov
adc
aad
cmp
jo
fs
push
jg
push
dec
lods
insl
nop
jo
fs
dec
ret
mov
rclb
jno
push
jnp
call
leave
push
ret
jg
mov
rolb
stos
iret
fisubs
lcall
inc
jecxz
sub
sub
ret
mov
dec
xor
jle
in
fwait
sti
into
add
mov
cld
nop
jno
daa
lret
cmp
stc
fnstenv
outsb
dec
popf
xchg
mov
rcll
xchg
fldl
cmp
xchg
imul
out
push
sub
and
test
mov
leave
or
or
rolb
jae
add
or
into
in
jle
and
mov
std
loopne
push
sahf
fistl
and
fcmovu
lcall
test
mov
lods
out
xor
lcall
sub
scas
mov
andl
mov
sbb
add
rcrb
cs
add
pop
push
loope
fcmovu
aas
mov
pop
lcall
lock
js
xor
push
pop
pop
pop
jge
scas
push
enter
mov
mov
nop
filds
add
hlt
call
sbb
sbb
pop
pop
enter
nop
xor
sbb
mov
xchg
cmpsl
add
clc
ss
mov
pop
mov
mov
jle
pushf
and
ljmp
cwtl
sbb
jno
insl
add
inc
sub
loope
xlat
gs
sahf
jb
loope
lock
inc
adc
fyl2x
xor
or
ss
cltd
pop
ret
mov
out
xchg
mov
imul
pop
mov
xchg
sbb
dec
into
xchg
in
xchg
notb
les
push
out
std
loopne
repnz
loop
cli
sub
add
xchg
xor
mov
and
mov
gs
fs
inc
xchg
sub
xor
movsb
dec
pop
adc
jmp
xchg
dec
ljmp
hlt
sbb
in
test
cmp
cmp
adc
sub
push
xchg
xchg
arpl
into
dec
pop
add
pop
lea
and
mov
test
xchg
mov
mov
pop
js
ret
inc
mov
sbb
mov
std
rolb
popa
mov
mov
add
jmp
pop
inc
popf
mov
popa
cmp
mov
dec
or
jmp
fistps
je
repz
out
imul
pop
dec
sub
and
std
cmpsb
cs
or
cli
xchg
rclb
cmp
lea
mov
aaa
inc
jnp
rolb
jb
test
inc
out
sub
cltd
les
jne
adc
les
push
hlt
fdivrl
dec
pop
jno
outsl
xchg
mov
iret
pop
loopne
add
sbb
pop
xchg
xchg
pusha
dec
add
mov
fadds
scas
jl
inc
pop
lea
mov
xchg
lds
mov
and
or
pushl
fcmovnbe
jmp
dec
js
pop
jg
fwait
aam
mov
insb
insb
pushf
xchg
mov
pop
insb
jecxz
jb
mov
inc
cwtl
sub
pop
xor
inc
jp
sbb
loope
xchg
imul
fnstenv
xchg
rcr
clc
pop
int3
and
push
inc
xchg
jne
pop
out
jp
mov
or
adc
bound
das
idivl
js
addr16
arpl
aam
bound
xchg
add
jmp
sbb
push
out
out
and
cmpb
movsb
cmpb
sahf
std
push
call
inc
jbe
fiadds
jecxz,pn
inc
add
outsl
sbb
bound
pusha
into
lret
in
xchg
cmp
inc
adc
jae
xchg
pusha
pop
dec
mov
stos
out
jns
cs
push
adc
aad
lock
or
xlat
cmc
std
lea
dec
fcoml
dec
pop
mov
inc
ja
cmp
out
xchg
leave
int3
lods
push
fiaddl
imul
and
mov
dec
sbb
jbe
cld
aam
stos
xchg
out
or
imul
das
add
sub
imul
push
ficoms
xchg
cwtl
outsl
lret
jge
push
lds
pop
sub
xchg
idivb
leave
fwait
jno
std
lret
dec
clc
mov
add
loopne
and
data16
sub
xor
fsincos
imul
jbe
call
dec
ss
jne
rcl
xor
push
lret
jne
inc
push
jmp
in
pop
xor
mov
sahf
inc
mov
stos
sbb
dec
or
jbe
pop
lods
pop
ss
jo
mov
shlb
shr
fnstcw
mov
and
lret
mov
movsl
pop
fsubs
jbe
dec
inc
cmp
sbb
test
insb
or
addr16
rol
js
mov
outsl
loopne
lods
mov
dec
add
popf
sbb
lret
or
aam
xor
ret
and
pop
xchg
sbb
loope
add
enter
fcoml
and
mov
mov
or
fidivs
loop
and
dec
pop
ja
jp
outsb
subl
inc
sbb
add
pop
into
fildl
push
movb
subb
add
xchg
add
mov
loop
imulb
sbb
cwtl
and
sbb
mov
mov
mov
jae
insb
mov
add
dec
cmpsl
repz
leave
mov
jl
adc
repnz
add
add
incb
mov
into
inc
call
mov
sub
inc
sbb
dec
pmaxub
aam
push
fwait
sbb
lock
mov
mov
inc
mov
sbb
fldlg2
imulb
mov
mov
fwait
mov
jp
mov
push
leave
lret
xor
sbb
ret
xchg
testl
push
imul
vaddss
cmp
adc
and
popa
sub
mov
xor
out
adc
hlt
jge
push
pop
js
clc
inc
sub
inc
xchg
shll
test
cwtl
jecxz
aad
mov
lahf
sub
fsubs
cmpsl
adc
add
and
adc
xor
pop
rcl
rorb
mov
lock
adc
lds
lea
sub
dec
movb
mov
ljmp
mov
in
sti
jns
or
aam
ja
adc
ljmp
jl
pop
negb
outsb
or
cltd
xchg
addl
xchg
pop
and
in
xor
fimuls
es
sub
add
push
inc
jl
in
jb
and
shll
push
xchg
dec
pop
mov
scas
jecxz
xchg
add
push
insl
call
fidivrl
shlb
icebp
sub
int
lret
daa
lock
arpl
dec
outsl
fsubrl
jo
pop
mov
shrb
mov
sub
outsb
add
or
and
bound
adc
std
mov
mov
ljmp
pushf
mov
mov
pop
into
pop
in
ja
fisubrl
clc
mov
xchg
cmp
roll
mov
xchg
imul
mov
and
inc
xor
test
shlb
xchg
sub
out
mov
shr
addr16
jge
mov
loope
mov
jno
cmp
fildll
dec
xor
jmp
out
movsb
lds
lock
ficomps
fbld
cmpsb
pop
loop
mov
or
cvttps2pi
and
push
insb
dec
sub
iret
icebp
subb
test
std
push
cwtl
sbb
out
xor
dec
or
pop
pop
in
xchg
iret
sti
push
push
and
data16
dec
aas
mov
and
adc
lods
es
mov
and
addl
test
jg
push
xchg
sbb
aad
dec
lret
mov
sbb
jno
dec
cmp
imul
push
jle
mov
mov
outsb
int3
add
adc
ss
push
inc
inc
sarb
dec
iret
push
push
xor
jg
int
test
push
adc
cs
jl
negb
xchg
gs
jae
push
divb
push
jge
or
cli
sbb
jmp
push
jle
and
and
lahf
sbb
add
dec
jle
mov
outsl
and
nop
push
xchg
cmp
mov
jo
cmp
js
sahf
pop
and
xor
mov
mov
fisttpll
pusha
cmpl
push
aam
into
and
mov
push
dec
cmpsb
dec
push
stos
xchg
andl
stos
adc
iret
mov
inc
incl
sub
fisttps
lea
lea
ret
cmp
fistpl
scas
inc
fwait
xchg
leave
bound
ret
lods
pusha
out
add
dec
outsl
jo
iret
out
mov
das
jmp
add
scas
sti
adc
enter
dec
cmc
cmp
push
icebp
and
push
sbbb
cwtl
and
jne
shll
imul
bound
fistps
nop
dec
mov
jae
shrl
pop
test
insl
imul
mov
sub
gs
fidivl
push
xchg
inc
insb
mov
rcll
out
xchg
xchg
inc
sub
mov
xor
in
mov
push
pop
mov
sbb
outsb
test
push
and
jbe
pop
stc
dec
push
addr16
lea
in
aas
in
cmpsl
sbb
jns
xor
pop
push
leave
rorl
pop
mov
cmp
out
divl
xor
scas
cmp
inc
add
es
push
cmp
pop
fbstp
add
inc
nop
mov
dec
addr16
or
das
mov
dec
mov
je
xchg
stos
mov
aam
inc
sub
call
xor
mov
push
jo
lea
cmp
jno
fbstp
stc
imul
sbb
and
add
negl
aam
dec
enter
add
mov
fisttpl
mov
fimull
enter
loop
jp
fadds
pusha
fwait
jne
and
repnz
int
repz
enter
pop
sub
ja
sbb
dec
push
and
adc
shl
and
or
sub
stc
and
mov
mov
pop
les
fcmovnu
or
xor
cmp
cmp
ffreep
add
ja
shr
addr16
inc
inc
push
jg
pop
inc
shll
sbb
xor
repz
popf
push
xor
insb
das
loopne
cwtl
cmp
nop
inc
vpcomw
stos
xchg
loope
sti
fidivl
xor
jns
cmc
outsl
in
sbb
push
xchg
cmp
cmp
mov
mov
cmpsb
frndint
jns
and
mov
xchg
popa
mov
adc
inc
and
data16
jbe
jecxz
insl
inc
pop
call
xchg
push
adc
mov
repnz
sbb
cmpsl
out
lret
mov
push
dec
loop
mov
xor
pop
mov
or
mov
in
cmc
mov
xchg
jp
repz
jne
xchg
sbb
sahf
mov
aad
jg,pt
xor
adc
gs
std
fldcw
push
push
mov
add
and
sub
and
cmp
inc
xor
cmp
pop
dec
cmpsl
jbe
nop
into
mov
mov
lods
cmp
sarb
mov
cmpsb
out
pop
jp
icebp
xor
loope
pop
popa
lea
enter
pop
sub
jmp
or
mov
dec
sub
cmp
stc
dec
mov
das
pusha
dec
ja
adc
adc
xor
subb
jp
inc
lea
xor
and
mov
adc
popa
ja
into
cmpsl
jae
aaa
sbbl
mov
clc
pop
ds
mov
push
addl
std
lahf
sbb
jbe
les
popf
mov
inc
fdivrl
mov
in
leave
test
ljmp
jo
cmpsl
push
ljmp
shll
pop
pop
testl
dec
mov
rcr
ret
in
cmp
insb
or
dec
lret
lock
fcomps
subb
test
pop
rcrl
rcll
cwtl
repz
andb
add
or
xor
adc
jp
int3
icebp
out
ja
push
addl
and
mov
int3
push
xchg
iret
mov
icebp
adc
lea
add
mov
pop
adc
out
test
in
data16
loop
iret
inc
insl
enter
cmpsl
mov
inc
and
sarb
test
mov
push
inc
pop
loopne
adc
test
xor
sbb
ror
dec
inc
cmp
scas
push
mov
fst
push
in
lods
push
mov
aad
mov
fldl
mov
mov
mov
dec
lret
ljmp
in
mov
push
out
or
add
lods
sub
dec
insl
jg
cmpsl
stc
sti
movsl
or
int
movsb
fcomps
insb
mov
xchg
xor
test
or
mov
arpl
jp
pushl
test
fwait
push
push
insb
xor
das
pop
xor
ss
xchg
shrl
sub
dec
jg
push
mov
or
rcrl
scas
addr16
mov
mov
fisttpll
shrb
cmpl
aam
lahf
mov
xchg
lea
jne
nop
out
adc
mov
fwait
sti
sti
jo
addr16
jno
add
pop
pop
push
pop
pop
cltd
inc
test
add
aam
arpl
sti
mov
fldcw
out
xchg
hlt
int3
jbe
aas
and
mov
repz
addr16
test
sahf
or
sub
clc
fwait
add
mov
mov
imul
ljmp
mov
dec
and
subl
cltd
dec
add
and
cmp
rcrb
xor
int3
jnp
test
ret
add
pop
jae
mov
add
sbb
mov
add
aam
outsl
sahf
inc
and
movsl
inc
test
mov
out
push
jecxz
outsb
add
push
sbb
sub
nop
pop
imul
or
ja
jg
mov
push
xchg
mov
loopne
mov
xor
push
mov
les
mov
insl
push
push
stos
inc
inc
mov
cmpsb
mov
lock
add
mov
mov
jne
cmpsl
enter
add
gs
arpl
fwait
daa
lahf
sub
lahf
iret
lcall
xchg
insl
mov
gs
mov
xchg
mov
push
mov
jnp
lahf
cmp
or
lret
jmp
adc
mov
pop
add
cltd
cli
test
xchg
scas
push
pop
int
mov
cmp
push
mov
in
push
jnp
jbe
out
sarl
andl
cs
inc
ja
xor
lret
push
jge
pop
les
test
jl
jge
xor
jo
jno
std
mov
lods
jns
popf
ds
aaa
sub
mov
xor
mov
pop
aad
jno
aaa
scas
cs
jecxz
popf
jp
sar
xchg
je
lret
push
jge
jb
imul
or
movsl
out
fnstcw
cmc
inc
jmp
inc
sti
pop
mov
pop
or
inc
shll
inc
mov
xor
sbb
jne
js
mov
pop
cld
cmpsb
xor
sub
mov
scas
and
iret
hlt
dec
mov
shrl
mov
adc
arpl
sbb
outsb
pop
lret
shr
push
adcl
addl
cmp
dec
arpl
push
pop
push
ja
sub
cld
sarl
mov
fidivl
cmp
sbb
adc
fwait
mov
adc
lret
ss
hlt
jp
mov
imulb
cmpsb
arpl
test
lock
and
movsl
loop
cltd
jne
jne
inc
mov
mov
aas
xchg
cmp
cmp
cmp
fstpl
or
mov
imul
pop
test
xchg
int3
aad
dec
jl
ja
push
xchg
mov
mov
xchg
jecxz
sbb
outsl
mov
mov
adc
addb
cwtl
and
sub
shll
out
adc
lret
dec
cli
jbe
push
mov
loope
fs
fwait
aam
imul
fs
bound
xchg
jp
aaa
setbe
and
xor
mov
dec
adc
cltd
testl
lret
gs
sub
mov
and
aas
insb
jp
adc
shl
sbb
pop
push
xchg
cmp
int3
xlat
jge
xorb
xor
fldt
jecxz
pushf
mov
in
push
adcb
mov
jnp
mov
mov
mov
adc
sub
mov
sbb
or
repz
dec
jbe
sub
or
daa
sub
outsl
in
fdivp
ja
rcr
lcall
push
mov
lea
adc
sbb
fisttps
notl
lods
outsb
mov
inc
mov
and
and
sar
inc
stos
dec
dec
add
enter
add
mulb
pop
aas
jge
xor
jbe
outsl
je
xor
cmp
lock
sub
aaa
mov
out
fisubrl
sub
lahf
xor
add
lret
jp
push
cmp
lret
adc
insb
dec
dec
aad
fsubp
sbb
lret
fwait
aaa
cmpsl
test
aas
jae
push
mov
pop
push
sbb
in
jne
mov
dec
mov
rorl
push
int3
lds
mov
pop
push
cmp
cmp
jle
mov
cmp
and
or
daa
loopne
dec
jno
push
jl
daa
out
cmp
ja
lahf
push
ret
outsb
pop
inc
insb
cmp
xchg
clc
mov
xchg
or
pop
jno
jno
pavgw
mov
les
sub
rcrb
jno
sub
pop
sub
mull
stos
mov
loopne
mov
mov
xor
and
push
push
popa
and
xor
pop
adc
in
jne
out
sub
mov
push
sub
or
leave
dec
es
in
test
testb
adc
dec
out
and
insl
xor
xlat
outsb
pop
push
lret
rcrl
enter
push
cmpl
add
mov
cltd
xchg
xchg
add
imul
cmpsb
push
pop
xchg
push
sbb
lock
fwait
sbb
cltd
out
repnz
mov
movsl
lock
divb
sub
lret
or
inc
add
enter
or
inc
mov
fs
loopne
in
inc
cmp
shlb
imul
loope
mov
stc
nop
adcl
out
pop
cmp
stc
mov
int3
sahf
inc
dec
adcb
clc
pop
mov
sbb
mov
sub
jo
sbb
ljmp
xchg
shl
lret
jns
icebp
shll
sti
lods
scas
xor
and
out
mov
ds
adc
push
bound
xchg
jl
xchg
fidivs
das
mov
dec
idivb
scas
and
loopne
movsb
lea
data16
scas
dec
pusha
mov
test
xor
fdivrp
aam
andb
push
int3
cmpb
dec
jo
shlb
inc
lret
mov
jmp
movsb
call
mov
cld
mov
in
into
js
arpl
dec
cwtl
enter
inc
lret
push
insl
or
or
adc
in
xlat
mov
imul
outsb
fildll
cmp
dec
fwait
mov
mov
add
mov
into
xchg
or
and
jbe
sbb
xor
scas
in
loop,pt
js
and
xchg
popa
cmc
mov
call
mov
mov
call
cmp
jns
sub
cwtl
movsb
cwtl
outsl
in
add
test
jno
sti
fidivrl
add
jae
push
sbb
adc
adc
xchg
xchg
cmp
test
out
aam
int3
movsb
in
out
mov
xchg
call
leave
xor
or
dec
scas
pusha
cmpb
mov
aaa
roll
cltd
lret
xlat
test
fbld
or
iret
mov
into
sbb
js
jno
mov
mov
sub
pop
sub
in
ss
ja
insb
fwait
inc
jge
sbb
pushf
adc
mov
xor
sbb
orl
jp
loope
inc
fwait
shl
lahf
pop
mov
lods
lea
or
mov
shlb
push
fidivs
fsubl
fs
js
fcoms
lret
jle
leave
adc
mov
fsubr
mull
bound
loope
jnp
gs
inc
bound
lods
add
push
shlb
adc
test
sarl
in
hlt
sub
sbbl
dec
popa
add
es
adc
or
xchg
clc
out
mov
pop
ret
dec
test
mov
cmp
lcall
iret
dec
and
sahf
jb
pushf
sub
fadds
pop
add
inc
aaa
dec
prefetch
cli
push
sbb
cwtl
pop
mov
daa
adc
movsl
add
cmp
lcall
add
xchg
push
adc
inc
add
shlb
pusha
mov
stos
cli
sbb
lods
dec
sbb
jl
push
inc
jp
insl
int3
push
dec
out
cmpsb
jne
mov
enter
fidivrs
rolb
ret
inc
fldl
adc
mov
movsl
cmpsb
fisttpll
mov
mov
cmp
inc
testl
jmp
sub
sahf
jecxz
lahf
xchg
push
pop
fistl
pop
mov
cwtl
sub
ja
sbb
xchg
push
je
insb
cs
jno
imul
sub
shrl
lea
jnp
in
mov
lret
mov
or
xchg
fnstsw
hlt
xchg
xchg
mov
loop
cmp
mov
lds
sub
lock
in
ret
adc
add
dec
cmp
push
aam
jae
and
into
mov
xchg
xor
shlb
lcall
fstps
orb
xchg
sbb
mov
xor
adc
sahf
sub
ret
out
cmp
push
xor
xchg
sar
scas
pop
push
pop
add
xchg
call
add
dec
nop
divl
roll
test
jecxz
sub
int3
das
mov
dec
jle
xchg
cmp
movsl
sbb
bound
sbb
jg
jnp
loope
ficompl
sbbb
dec
cmp
pop
jae
xor
mov
adc
pop
mov
std
aam
push
lret
in
mov
les
sbb
push
mov
sahf
sub
or
mov
cmp
push
inc
dec
ret
addb
iret
or
cmc
je
jge
pop
inc
jns
pop
xchg
addr16
xor
out
push
aas
aaa
pop
mov
js
dec
mov
scas
jl
jno
sbb
out
mov
xchg
pop
mov
and
shrl
lods
test
mov
loopne
adc
loopne
jo
arpl
inc
loopne
sarb
adc
insb
xchg
test
jg
stc
pusha
call
jge
pop
fsubrl
test
loope
push
jne
mov
xchg
mov
jbe
or
lds
lods
sub
sub
jmp
inc
or
or
std
iret
pop
mov
outsb
push
jbe
test
mov
push
jno
movsb
dec
test
cmp
clc
enter
loop
sbb
sbb
in
enter
mov
pop
lods
sub
jbe
das
fisttpl
sahf
pop
aad
in
xchg
pop
loop
sbb
aas
mov
ficomps
xorl
cltd
push
fwait
inc
je
pop
pop
sub
xor
jnp
mov
jbe
movsb
nop
inc
pushf
mov
addr16
add
xchg
xchg
outsl
add
aad
push
sbb
movsb
scas
xor
dec
cltd
and
pushf
pop
ja
mov
sub
inc
ds
arpl
clc
adc
movsb
jno
jne
jecxz
shlb
jle
das
adc
mov
movsb
mov
movsl
ja
add
xchg
sbb
jb
int3
cltd
and
mov
inc
outsb
inc
negb
lcall
inc
mov
mov
imul
rcll
test
xor
lret
jns
fldl
fs
ret
add
imul
bound
mov
ret
sub
test
rorl
das
pop
push
jp
loop
pop
and
and
adc
cmp
ret
test
and
push
in
aaa
mov
icebp
xor
movsl
push
mov
push
fistpl
stos
jp
or
and
jg
faddl
pop
xchg
cmpsb
cmpsb
pop
cs
jnp
add
popa
push
mov
fsts
sub
je
mov
mov
xchg
mov
pop
push
lret
cmpsb
pop
arpl
sub
mov
sub
add
cmpsl
push
aam
mov
push
out
rcrl
test
push
dec
inc
sbb
negb
cli
jno
pop
rcll
xorb
fdivrs
xorb
filds
add
xorl
mov
arpl
mov
jp
adc
shll
jg
xlat
lea
or
mov
mov
mov
lds
sbb
push
add
imul
lods
xchg
pusha
xchg
daa
jecxz
lcall
dec
lea
jge
sbb
aam
mov
shll
lock
cmp
dec
fadds
push
scas
or
es
daa
ficoml
inc
fwait
in
inc
das
ret
int
mov
inc
stc
adcb
test
push
subb
icebp
mov
cmp
iret
addb
sbb
jb
dec
push
xlat
sahf
insl
je
inc
std
or
cmpsl
add
in
jns
pop
inc
pop
xor
sub
cld
dec
cld
popa
mov
cmpb
mov
notb
cltd
jbe
mov
xchg
jle
loopne
loope
or
mov
hlt
sbb
cmp
nop
push
call
lahf
jno
cltd
xor
push
out
sub
inc
dec
and
adc
rcrl
and
scas
add
or
aad
fwait
sti
and
aaa
test
mov
cmpsl
frstor
inc
pop
outsb
sbbb
jle
fisubrs
in
in
add
sbb
in
and
push
int3
adc
mov
or
out
aam
jl
shl
inc
clc
jmp
aam
stos
mov
fimuls
adc
pop
mov
pop
dec
adc
jl
ljmp
mov
cwtl
push
mov
push
in
dec
mov
addr16
and
ret
or
or
mov
push
popl
mulb
pop
lods
mov
insb
fildll
or
cmc
fmuls
xor
cmpsl
int
xor
sub
xor
add
dec
inc
test
inc
jnp
cmp
testb
mov
enter
cltd
bound
and
out
popf
sub
cmp
aas
mov
outsl
and
aas
enter
or
sti
adc
js
clc
xchg
adc
mov
mov
call
mov
mov
rcll
push
push
cmpsl
add
sub
or
dec
jmp
push
mov
repz
dec
cwtl
and
fcoml
ret
jnp
add
les
xchg
into
stos
sub
pop
sub
frstor
pop
data16
cmp
ficompl
stc
fimull
or
mov
pop
test
scas
ljmp
xchg
lea
int
mov
xlat
jg
jns
sub
sbb
mov
sbb
gs
lea
mov
das
jb
das
pop
ss
add
pusha
pop
stos
inc
push
jmp
jge
fwait
mov
call
mov
decl
mov
add
xchg
lods
addr16
pushf
xor
adc
xchg
out
and
bound
shll
mov
xchg
cld
sbb
xor
cmp
pop
mov
enter
xor
and
lret
inc
mov
push
dec
fcmovnbe
jmp
jge
clc
adc
js
je
xor
add
les
aam
xchg
dec
mov
xor
out
lret
ds
fmull
sub
add
sbb
adc
leave
lock
fidivl
rcr
nop
push
loopne
xchg
pop
je
cmp
xor
push
xor
mov
cltd
addl
or
jo
lds
and
loope
fisubrl
sub
in
push
pop
add
test
xor
aaa
xchg
cmc
dec
popf
sahf
insl
mov
rolb
sbb
aad
and
pop
sbb
ficompl
pop
sub
mov
sub
in
jge
aaa
jno
mov
fwait
nop
out
lcall
cld
fwait
inc
lods
insb
xchg
sti
adcl
int3
lods
dec
xor
iret
movsl
inc
clc
inc
fcoms
in
lea
lods
mov
xor
xchg
and
jae
and
and
jnp
mov
pop
xor
sbbl
ror
sub
sbb
jno
mov
sub
cmp
xor
into
add
add
mov
popa
jno
and
xchg
imul
aam
push
mov
cmpsb
aad
jmp
xor
mov
cmp
aad
int
or
adc
ficomps
push
push
int3
arpl
push
sbb
mov
out
pop
and
push
or
aam
jmp
in
divl
mov
sub
adc
xchg
pop
outsb
add
arpl
out
inc
push
or
stos
add
push
pop
sub
fidivrs
jne
mov
mov
xchg
xchg
shl
jns
mov
pop
dec
adc
add
push
jg
lea
sahf
jb
xchg
fistps
inc
dec
lcall
mov
xlat
dec
movsl
jg
cmp
rcrl
push
add
aad
pop
pop
cmp
push
pop
push
pop
pop
mov
push
pusha
push
mov
dec
addr16
mov
dec
mov
test
mov
or
sub
inc
inc
sub
lret
mov
and
add
inc
pop
fwait
std
dec
movsl
adc
test
xchg
xor
lcall
stos
pop
stc
pusha
add
sub
jmp
shl
outsl
or
bound
sub
loope
adc
push
push
into
cmpsb
mov
mov
inc
adc
outsb
mov
movsb
lret
cmp
aas
mov
sbb
mov
cmpsl
leave
jb
in
cmpsl
mov
add
incl
mov
lods
aas
xor
pop
mov
cmp
xchg
push
int3
das
xor
pusha
add
repz
xchg
jbe
dec
xor
cmpsb
sbb
or
scas
or
pusha
adc
repnz
sti
cmp
pop
test
cs
mov
rcll
mov
jle
dec
cmp
inc
xchg
out
imul
adc
cwtl
inc
xchg
inc
imul
in
lea
scas
sbb
push
jp
ror
jae
sub
or
insl
mov
sbb
in
mov
jecxz
aaa
ljmp
xor
adc
mov
xchg
push
push
or
or
test
inc
out
pop
cmpsl
add
cmp
jne
cmp
cmpsb
into
push
push
xor
test
mov
ficomps
sbb
add
mov
cwtl
and
cmp
in
inc
ret
lods
js
lods
shll
sti
ja
mov
mov
xor
sahf
sub
add
push
cmp
push
push
xchg
test
call
into
mov
loop
loop
les
repz
das
mov
int3
cmp
ss
mov
insl
xor
push
js
fisubrl
int3
dec
or
add
daa
cmpsb
lods
add
lret
pop
movsb
mov
adc
lret
cmp
dec
add
pusha
je
sbb
arpl
or
movnti
xor
icebp
xchg
rcll
pop
iret
adc
mov
mov
sub
jns
sarb
push
adc
lret
push
incl
xchg
cltd
test
leave
in
pop
loope
daa
xchg
cwtl
and
aad
xchg
xor
gs
jle
pop
lds
adc
xchg
testb
clc
mov
cmp
cmp
inc
inc
mov
test
bound
stc
mov
cwtl
mov
push
andb
dec
je
and
inc
das
and
jmp
jmp
sub
mov
iret
mov
inc
loopne
insl
cwtl
adc
sub
rorb
mov
in
inc
out
sub
cmp
fdivrs
shl
push
xchg
xor
fisubrs
jbe
dec
lahf
test
outsl
dec
cmp
outsl
inc
push
push
inc
mov
xor
inc
pop
es
loope
mov
fisttps
xchg
jbe
cld
pop
add
cmp
aas
pop
push
sub
rol
inc
movsb
in
xchg
data16
pop
push
cmpsl
pop
and
xlat
xor
jb
dec
pusha
or
and
in
cmp
cmpsl
pushf
xor
sbb
cltd
enter
push
sbb
jns
ret
aam
enter
cmp
jl
imulb
sbb
out
and
pop
lock
add
adc
inc
lahf
xchg
sub
mov
arpl
ds
xor
add
test
jmp
xor
cmp
cli
jns
subl
sbb
in
test
pop
int3
fstps
jg
mov
xchg
jle
cli
push
incl
inc
mov
es
jmp
fldl
dec
jns
mov
mov
sbb
repz
and
test
lock
xchg
xchg
cld
lods
fstp
cwtl
pusha
mov
xor
jge
rcrl
adc
jp
sbb
inc
mov
pop
gs
das
mov
xor
pushf
mov
js
sub
test
imul
outsl
loop,pt
aas
mov
hlt
shlb
loope
and
aas
jo
lds
add
out
mov
dec
shrl
mov
push
add
test
dec
and
fcomi
and
imul
test
cmp
mov
insb
cmpsb
sub
cmp
jno
push
out
popa
int3
jo
mov
xchg
out
imul
mov
pop
push
shrl
mov
fwait
push
cmpb
fstpl
int
mov
mov
mov
pop
lret
inc
jne
int3
lock
inc
cli
add
lahf
push
and
mov
mov
fs
xor
cmp
les
mov
leave
push
xchg
and
push
fs
mov
cmp
sub
jmp
jnp
pop
pusha
mov
jne
mov
lret
mov
sbb
bound
gs
nop
stos
sub
xor
mov
cli
cmp
icebp
push
in
push
pusha
int3
es
rcr
mov
movl
xor
cmpsb
sbb
dec
repz
and
or
sti
mov
or
repz
bound
jbe
sub
sti
and
lods
xchg
dec
xchg
mov
or
out
jle
xchg
jnp
in
sbb
outsb
mov
data16
jecxz
add
loop
sub
mov
mov
jg
stc
imul
xlat
fwait
mov
xor
mov
in
aaa
rolb
lret
sub
test
shll
sub
clc
test
xchg
inc
inc
ja
mov
mov
in
stos
out
aam
jge
sbbb
sti
push
cmp
shl
mov
lret
and
xor
imul
popa
sti
xor
xor
cs
data16
push
negl
sbb
xchg
cmp
fs
push
movsb
cmp
mov
add
lahf
push
add
push
mov
push
insb
pop
pop
aad
das
leave
xchg
ret
out
frstor
add
inc
sub
xor
insl
or
enter
rcr
iret
je
jnp
fbld
mov
or
pushf
and
pop
inc
outsb
xchg
cmp
iret
ret
loop
jnp
leave
sarb
inc
scas
inc
and
lods
xchg
mov
xchg
push
and
add
inc
into
push
jo
push
sbb
jmp
popa
fwait
ljmp
mov
out
call
out
add
cmc
push
js
add
sbb
out
out
aad
sbb
mov
xlat
sub
andb
movl
pusha
sahf
out
int
test
shll
pop
adc
ret
push
hlt
sahf
inc
ljmp
daa
rorb
fidivl
shl
add
outsb
pop
cmc
mov
into
subl
adc
lret
pop
das
cmpsl
and
shr
stos
repnz
or
mov
ss
jge
jle
mov
sbb
leave
ss
es
gs
or
mov
inc
add
stos
mov
inc
das
jb
and
push
imul
sti
int
xor
imul
sbb
movsb
dec
call
mov
mov
shrl
call
popa
xchg
aas
movsl
add
loope
leave
dec
mov
lcall
outsb
in
in
jg
sub
cmp
mov
inc
daa
push
inc
cwtl
adc
arpl
mov
fsub
push
or
shlb
idivl
rorb
les
daa
int
test
aaa
rolb
fcoms
dec
push
ret
push
out
inc
mov
inc
in
inc
and
out
ficoms
in
push
pop
sbbb
and
in
test
sub
push
mov
mov
mov
pop
jno
cmc
outsb
xor
cmpsb
lock
xchg
pop
lock
scas
fsts
aas
enter
fidivl
xor
ja
sub
aad
pop
push
mov
sbb
pushf
ljmp
cmc
fimuls
sbb
push
pop
out
pop
in
xor
cltd
xchg
inc
mov
jne
jnp
fstpt
cmp
dec
mov
imulb
pop
jg
js
in
out
cltd
xor
incb
push
inc
pop
push
dec
out
insl
mov
stc
xchg
icebp
ss
jae
xchg
pop
dec
lea
push
dec
leave
mov
int
in
ficomps
pop
jno
movsb
mov
out
cmc
flds
repnz
cmp
cmc
outsb
popa
xchg
push
or
pop
fidivrs
push
repz
jge
dec
mov
rcrl
scas
adc
fidivl
inc
insl
add
aaa
fneni(8087
ret
cmp
test
add
push
lahf
jge
or
pop
pusha
mov
ja
mov
repnz
or
outsl
cmpb
adcb
jmp
xor
inc
adc
test
dec
dec
xchg
sub
mov
cmp
xor
shrl
push
dec
iret
in
xchg
stos
push
rol
js
mov
hlt
ja
sub
arpl
iret
lahf
dec
mov
mov
adc
mov
xchg
in
fiaddl
sbb
mov
call
test
lea
into
ds
xchg
mov
sbb
sti
xor
ljmp
jge
jnp
push
in
dec
shr
rcll
sbb
mov
scas
and
push
xlat
lock
xor
jne
mov
repnz
hlt
jne
repnz
out
dec
es
mulb
jo
push
push
clc
pushf
push
dec
dec
jbe
jmp
sbb
arpl
cmpsl
fwait
xchg
xor
insb
fwait
scas
aam
jl
fwait
leave
lcall
sbb
shrl
mov
add
inc
leave
cmp
jb
xor
shlb
hlt
mov
add
imul
adc
int3
push
mov
jae
sbb
sub
xchg
mov
xchg
inc
cwtl
cwtl
ljmp
and
xchg
icebp
xor
sbb
roll
mov
sub
stos
scas
and
popf
adc
sub
inc
mov
sbbb
cmpsb
mov
xor
push
ret
push
jle
pop
xor
jb
lret
popf
outsl
dec
lods
pop
jl
mov
pop
ret
pop
outsl
gs
push
rcrl
lret
mov
jb
jno
fnstenv
push
fiaddl
sbb
leave
dec
add
lcall
or
ret
out
push
adc
js
fcoms
movsb
out
mov
xor
mov
in
test
cmp
movsb
mov
aas
xor
pop
cmp
fsts
cmpsb
cmp
mov
add
or
cmp
mov
jb
lds
lret
insb
int3
mov
loope
mov
es
add
mov
mov
in
cwtl
movsl
xchg
or
std
fdivrs
cmp
leave
mov
ret
mov
js
testb
xchg
adc
mov
js
aas
sub
xor
and
sqrtps
pusha
inc
insl
push
fs
mov
pop
stos
imul
cmp
icebp
sbb
inc
xchg
lods
in
or
mov
lock
inc
xchg
cmp
lods
push
clc
mov
push
in
cmpsl
scas
rcrb
popa
popa
adc
jno
dec
adc
loop
pushf
mov
ss
inc
push
out
xlat
pop
push
jb
or
shrb
setae
lret
or
mov
in
rorb
push
dec
sbb
xor
stc
fcoms
fistl
adc
sbb
mov
divl
movsl
fisubrs
jmp
xchg
push
roll
jno
xor
cmp
out
xchg
bnd
adc
jge
jle
xchg
xor
cmc
ja
repz
sbb
push
mov
jnp
cwtl
test
cmp
cwtl
xchg
jmp
sbb
rcrl
and
insb
mov
sbb
cmp
decb
sbb
orl
sbb
sub
push
int
clc
jns
jmp
test
sahf
cmpsl
sbb
popf
sbb
push
xor
or
pop
jle
mov
or
jae
dec
pop
push
cmp
ja
jnp
push
push
xchg
push
adc
mov
or
sbb
pop
shrl
xlat
inc
mov
dec
test
jecxz
ret
push
scas
mov
push
xchg
mov
xor
in
jp
sub
js
add
repz
in
push
in
in
dec
adc
hlt
push
ret
lret
push
ret
sbb
mov
mov
sub
imul
mov
ljmp
fistps
iret
mov
push
outsb
out
sub
jecxz
and
and
testb
xor
xchg
imul
adc
pop
mov
cmp
pop
or
jno
stos
imul
outsb
pusha
jno
mov
add
outsl
add
adcb
scas
pop
dec
fidivl
lock
pop
mov
in
mov
mov
fwait
outsl
mov
lea
or
cltd
imul
insb
leave
xor
repz
mov
inc
mov
shl
push
xor
xchg
mov
lret
xchg
fistl
call
inc
popa
ds
add
dec
gs
push
push
enter
inc
stc
or
into
mulb
push
arpl
hlt
popf
in
fcmovnb
adc
mov
mov
aas
cmp
push
xor
mov
pushf
push
cmp
es
fiaddl
int3
sub
xchg
popf
fidivrs
fsubrl
jo
insb
das
inc
jecxz
push
jg
lret
mov
mov
fnstenv
inc
add
cmp
jl
cmpsl
mov
dec
mov
mov
cmpsl
sub
shl
xlat
pop
push
prefetch
push
mov
sub
push
dec
addl
jae
push
leave
pop
sbb
sbb
jno
ljmp
lds
repz
loopne
jecxz
xchg
les
sub
add
mov
ret
adcl
test
ficoml
and
add
jmp
cmp
mov
rolb
add
pushf
arpl
clc
cltd
rorl
popf
stos
and
pusha
idivb
in
sbb
scas
mov
lcall
push
cld
movsb
mov
call
mov
jns
gs
aas
mov
xchg
jl
call
sbb
loopne
push
pop
push
xor
and
sti
mov
movsb
mov
or
pop
push
adc
mov
test
cmp
pop
mov
adc
mov
out
dec
rclb
sub
adc
lods
push
in
fdivrl
mov
sbb
sub
arpl
xchg
or
jne
and
arpl
add
cmpsb
cmc
jne
rep
jnp
in
bound
fsubrs
in
andb
mov
cmpb
or
cmpsl
enter
or
dec
xor
sbb
fstp
out
push
sbbl
inc
sbb
jl
icebp
les
mov
in
ja
insb
scas
xchg
push
dec
sqrtps
push
mov
testb
push
test
dec
pop
outsb
pop
mov
fdivs
sbb
xchg
mov
out
inc
cmc
or
fdivs
std
das
push
in
scas
sub
cmp
mov
pop
cld
sbb
jl
std
sbb
push
dec
nop
mov
jecxz
movb
xchg
and
xchg
imul
test
sbb
sarb
dec
sti
jl
loope
mov
xor
stos
loope
cmc
pop
mov
mov
xchg
lahf
ficompl
jl
xor
dec
out
inc
xchg
movsl
adcb
outsb
mov
dec
mov
or
or
int
hlt
or
or
xor
xor
xlat
and
leave
xlat
lods
inc
stos
mov
mov
cmpsl
popa
xor
sub
aad
inc
test
fcmovb
jmp
test
or
outsl
stc
add
hlt
jle
mov
addr16
pop
in
inc
sub
push
sbb
jg
leave
repnz
scas
loopne
pop
fnstcw
inc
inc
push
loope
stc
mov
push
repnz
mov
sub
ljmp
pop
mov
fs
ljmp
fsubrl
sahf
fcomip
jb
fildl
pop
dec
daa
sbb
pop
push
dec
jl
adc
lcall
xchg
lds
xor
xchg
dec
pop
sti
cmpsb
test
orb
mov
repz
xchg
xor
mov
mov
adc
mov
mov
xchg
hlt
out
xor
hlt
and
pop
and
aaa
sbb
pop
out
out
popa
dec
cmp
out
push
shll
pop
dec
push
sbb
xor
add
pop
enter
sbb
sbb
insb
repz
test
sub
xchg
int3
pop
jno
jp
aaa
les
bound
cmc
sbb
orb
in
or
cmp
movsl
lds
fst
sbb
out
add
pop
mov
sub
ret
mov
sahf
xchg
and
aam
sub
xchg
hlt
and
hlt
fisttpll
add
movsl
inc
add
popf
mov
inc
and
pop
pushf
pop
xlat
fdivrl
shlb
cmp
push
sar
mov
ljmp
push
jnp
push
add
mov
xchg
dec
add
mov
vaddsubpd
mov
sahf
fidivl
js
pop
mov
ds
push
or
jnp
sub
outsb
pop
push
sbb
fwait
adc
jnp
out
aad
stc
push
fcmovne
popf
dec
mov
jge
jne
mov
aam
cmpsl
mov
jne
xchg
adc
fnop
cmp
jp
sbb
popa
test
or
xchg
cmpsl
and
pop
xchg
dec
jg
fsts
mov
mov
mov
mov
fstpt
repz
loope
cmpsl
sub
mov
out
push
inc
jg
jge
mov
adc
in
jnp
in
iret
push
pop
or
mov
jge
mov
pushf
mov
addr16
push
std
mov
xchg
fldl
clc
scas
inc
cltd
lret
xchg
push
rep
xor
inc
xlat
int
push
cbtw
mov
in
popa
setne
adc
dec
fistpl
mov
push
gs
iret
nop
xor
aam
lahf
push
jle
lods
test
int
pop
imul
push
mov
jmp
cld
xchg
pop
inc
sbb
testl
xchg
cmp
out
sbb
xchg
cmpsb
sub
cld
lcall
inc
sub
mov
xor
jg
out
xchg
in
movsb
dec
fldl
test
stos
cmc
jl
lods
pop
push
dec
dec
test
push
les
sbb
mov
mov
and
mov
jmp
xchg
aad
push
call
lock
cld
js
mov
mov
in
sub
cltd
xorb
fcoml
sbb
je
rcrb
ds
std
idivb
test
shll
idivl
jae
add
rcl
inc
addr16
push
xor
js
iret
push
mov
and
mov
push
jbe
loope
push
jns
js
adc
fistps
mov
jno
sti
or
imul
pop
in
sarl
inc
sub
mov
insl
sti
out
rcr
lahf
or
pop
mov
adc
lahf
mov
imul
loope
fildl
das
sub
adcb
dec
xorl
cmp
subb
bound
mov
imul
xchg
into
and
int
add
jo
xchg
jne
je
mov
add
add
mov
dec
cs
sahf
das
scas
inc
out
iret
or
cmp
hlt
popl
jns
pop
adc
movsb
or
test
sub
sti
mov
xor
aad
fdiv
cmpb
leave
push
pusha
mov
imul
push
bnd
mov
mov
aad
cwtl
repnz
mov
lret
loopne
or
iret
mov
bnd
test
xor
mov
cs
cmc
xchg
fildll
inc
xchg
push
mov
push
adc
mov
addb
pop
push
enter
iret
test
mov
jl
scas
push
push
add
push
push
adc
push
dec
sbb
jno
idiv
cmp
sub
mov
lods
and
cmp
cld
aad
xor
imul
or
cmc
xlat
xchg
mov
outsl
jle
out
xor
sub
xor
and
mov
xor
push
mov
inc
push
daa
adc
jae
in
jle
sub
mov
adc
and
sbb
inc
rcl
jle
test
gs
cmc
and
push
pop
icebp
mov
adc
adc
testl
mov
fcmove
in
ljmp
mov
dec
aaa
xor
js
dec
fsubl
xchg
jle
test
or
push
xlat
add
jbe
inc
xchg
cmp
push
dec
push
lret
jo
cmpl
in
dec
sahf
pop
addr16
add
movsb
inc
push
and
xchg
add
lret
mov
cmp
pushf
andb
sub
jg
in
and
mov
mov
fsubp
push
xor
pushf
movsl
insl
sahf
xchg
rolb
push
sub
out
iret
cmp
mov
mov
nop
cmp
adc
mov
mov
or
or
leave
adc
out
int
push
jno
das
dec
pop
out
mov
jge
test
pop
mov
lret
inc
popa
divb
fistpll
mov
adc
mov
clc
popa
lock
lahf
lock
or
push
mul
mov
fisttps
xor
sub
and
loopne
out
clc
mov
mov
cwtl
push
cmp
or
fnsave
inc
dec
mov
lods
sbb
adc
xor
cmpsl
fs
xor
sub
jbe
xchg
fnsave
xchg
rcll
fs
xchg
mov
sbb
js
test
cli
in
fcoml
xchg
sub
mov
ret
das
xor
gs
jle
cli
or
xor
dec
and
inc
pop
push
push
inc
and
outsb
mov
mov
and
clc
popa
pop
add
test
jo
inc
or
or
sahf
mov
cwtl
call
fs
mov
cmp
push
pushf
or
fldl
adc
movups
scas
lcall
or
fdivs
arpl
incb
iret
jb
dec
rcrl
cmp
mov
stc
aaa
add
adc
mov
inc
arpl
mov
stos
inc
int
ficompl
icebp
sbb
scas
pop
test
xlat
adc
xor
mov
popa
sarl
sahf
filds
push
ds
lods
out
adc
mov
jns
loope
and
mov
xchg
fmuls
or
or
mov
inc
push
sarb
mov
mov
inc
xor
fs
xlat
in
jb
xchg
inc
in
jge
sub
push
xchg
insl
lret
and
js
je
popf
stos
movsb
clc
popf
mov
arpl
xor
mov
jo
scas
out
or
or
rcr
mov
sbb
sbb
pop
dec
push
aas
xor
loop
mov
inc
mov
inc
js
push
push
rol
adc
cmp
mov
ja
cld
xor
test
mov
mov
fmuls
repz
addb
rcrl
dec
lock
jae
stc
jg
adcl
cmpb
and
stos
sbb
in
inc
aad
jae
int
rcl
dec
xor
clc
inc
ss
dec
je
pop
cmp
or
scas
add
fs
add
mov
cmpsb
adc
cmp
sbb
jmp
jg
adc
mov
out
das
mov
andb
insl
xlat
ret
incb
mov
dec
mov
pop
lock
mov
fbstp
scas
mov
lahf
ret
mov
or
dec
jle
mov
add
sub
stos
js
mov
mov
xor
push
loopne
jbe
lcall
clc
dec
xchg
mov
jg
iret
and
pop
jg
out
les
stos
pusha
and
ss
repnz
jae
ds
mov
dec
inc
push
mov
mov
lock
mov
ljmp
imul
call
xor
popa
test
sub
add
mov
dec
popf
cld
sub
adc
push
jp
push
rcrl
mov
mov
mov
dec
pushf
daa
xchg
sub
mov
sub
fucomi
mov
aaa
filds
mov
dec
insb
xchg
addb
mov
xor
lcall
repnz
mov
push
icebp
mov
xor
sub
js
xor
pop
movsb
pop
sti
pop
dec
cmp
iret
mov
bound
cs
daa
mov
cmp
cmp
jmp
lds
fwait
int3
icebp
lret
and
xor
cmpsb
push
sti
and
push
es
dec
int
daa
rcl
xchg
mov
cmp
daa
add
repz
dec
dec
subb
or
enter
jae
adc
dec
ret
lret
inc
jno
jo
xchg
or
call
sti
push
xorb
pop
jb
fucomip
pop
sub
push
cmpl
dec
and
andb
jns
mov
adc
out
int
aas
repz
sub
cmc
jmp
push
lcall
cltd
out
hlt
imul
les
cmp
inc
or
das
sub
cmpsl
divl
or
push
xor
mov
xor
das
pop
sub
xchg
ljmp
sub
cmp
sarb
push
sti
mov
pop
jbe
js
imul
sub
orb
std
das
mov
inc
ret
dec
cmp
adc
mov
test
sub
sub
cmp
mov
fidivl
pop
cmpsl
daa
scas
fsts
int3
inc
stc
adc
cwtl
popa
push
in
stos
fmul
fadd
mov
enter
or
les
sub
stc
movsb
mov
rorl
inc
lret
and
ss
mov
push
dec
jg
idivl
daa
mov
sbb
insl
mov
das
inc
xor
xchg
mov
adc
mov
push
loope
pop
fwait
jmp
fcmovne
loope
out
dec
add
mov
xchg
cmp
xor
add
or
and
xlat
push
ret
pushf
fs
sub
or
int
cmpl
push
fsubrs
adc
push
sub
into
shll
shrl
stc
xor
xchg
push
pop
adc
pushf
nop
push
jnp
xor
jne
push
xor
lods
jns
dec
ss
outsb
or
and
clc
or
xchg
rcrl
dec
jo
push
testl
add
in
adc
xchg
cld
mov
mov
sub
cmpsb
xchg
pushl
push
dec
jo
inc
push
push
xor
daa
pop
movsl
mov
bound
push
cli
dec
fwait
add
es
sahf
enter
fsubrs
dec
push
rcl
cmpb
test
cwtl
jnp
jbe
pop
xchg
lahf
adc
aam
inc
lock
xchg
add
loope
or
xchg
mov
adc
into
ficomps
adc
and
in
test
adc
push
jle
xchg
adc
and
in
push
inc
sbb
mov
mov
pop
mov
sarl
mov
push
jnp
cltd
fucomp
sbb
jge
das
jo
jne
loop
dec
adc
pop
xchg
sbb
push
or
or
enter
out
into
popa
xlat
lea
imul
int
mov
das
pop
sub
idiv
push
sbb
xor
mov
sti
leave
movl
aaa
mov
cli
adc
jmp
xor
adcl
xchg
dec
out
mov
test
cltd
scas
inc
test
mov
cmp
loop
loope
cmp
insl
push
add
and
fidivl
scas
jp
add
ljmp
sub
cwtl
lods
leave
jecxz
jg
fisubs
mov
loope
push
cmpsl
mov
repz
fstpt
dec
lods
jg
pop
sub
jbe
mov
dec
xchg
loop
sahf
fsub
cmp
xlat
or
mov
pusha
ret
jno
cmp
js
lret
mov
cmpsl
mov
sbb
push
xchg
aas
inc
subb
mov
xchg
pop
in
roll
inc
adc
nop
dec
mov
mov
lea
xchg
rolb
fcom
fimuls
test
push
js
movsb
xchg
repnz
ror
mov
nop
hlt
add
mov
fucomi
sub
xchg
mov
aas
and
mov
sbb
pop
mov
jmp
lock
adc
xchg
or
ret
dec
jb
shrl
orl
jmp
test
and
add
sbb
xchg
pop
mov
inc
mov
or
mov
cs
add
jge
cmp
and
leave
push
pushf
jne
sbbl
movsl
pushf
in
adc
cld
pusha
ds
add
arpl
repnz
out
leave
pop
cmp
dec
push
mov
mov
add
ljmp
xchg
xchg
insb
cmc
insl
cmp
mov
mov
mov
bound
test
in
in
ret
jno
sub
clc
or
lock
jmp
xchg
lret
add
sbb
sub
xchg
dec
pop
sbb
mov
cmpsl
outsb
mov
mov
in
push
xchg
bnd
push
and
ret
sub
xorl
xchg
sub
inc
jo
add
out
mov
imul
dec
mov
ss
xorb
xchg
int
jbe
sbb
gs
movsl
mov
add
mov
addb
lret
push
loopne
mov
bound
jbe
lret
mov
fnstsw
jcxz
adc
loope
ret
daa
jl
mov
xor
es
mull
fprem
ss
lahf
fdivl
inc
sub
ja
jecxz
xor
mov
out
lret
cld
rclb
lods
mov
xor
pop
decb
insl
jnp
fwait
pop
sahf
pushw
sbb
xchg
and
nop
cmp
or
add
push
sbb
or
push
sub
lcall
add
scas
dec
jae
xor
mov
pop
hlt
inc
data16
insl
ret
fxam
data16
inc
cmpsb
in
mov
xlat
and
sbb
cli
aaa
fcom
stos
fidivs
subb
dec
addr16
xor
fmulp
in
and
adc
sub
pop
dec
in
mov
jae
nop
lds
xor
sbb
mov
ss
or
dec
or
pop
imul
and
loopne
jl
out
repnz
jg
dec
adc
or
dec
push
sub
into
mov
inc
rcrl
push
mov
pop
adc
sahf
lahf
stos
push
push
jecxz
xchg
es
xchg
in
cld
ror
mov
or
adc
cmp
fs
xor
cmovl
inc
es
push
scas
inc
jb
aad
sti
sub
mov
das
out
mov
stos
test
push
push
jge
ja
outsb
cmp
lret
subb
jne
cmc
xor
inc
xlat
jg
xchg
sub
adc
dec
sbb
test
sub
lock
loopne
xchg
lcall
push
sub
in
push
sbb
jnp
jbe
fdivr
rcrl
scas
push
jno
and
scas
mov
andb
add
loope
xorb
push
jbe
mov
aaa
lahf
imul
cmpsb
or
xchg
mov
sbb
jl
jp
jp
daa
xchg
lods
mov
jge
pop
mov
rdpmc
mov
cld
push
sub
clc
adc
jmp
in
fwait
inc
repnz
add
sbb
aad
sbb
ds
and
testl
and
insl
lcall
push
sbbb
into
push
mov
arpl
or
adc
xchg
pop
sub
adc
icebp
mov
cs
cmp
pop
in
xor
add
mov
jp
lea
sbb
test
test
mov
xor
push
loopne
ret
sub
lods
imul
cmpl
dec
push
or
addr16
fisttpl
and
jge
nop
loope
test
fwait
jmp
jb
dec
int
rolb
loope
dec
push
or
cli
adc
in
add
or
pusha
stos
dec
aas
sub
xor
stos
in
aas
jmp
out
ret
mov
jl,pn
mov
rcll
adc
ljmp
push
xchg
test
in
sti
es
sarl
cmp
lock
sub
dec
inc
inc
push
lahf
je
dec
add
xor
outsb
loope
insb
or
sub
mov
xchg
movsb
dec
mov
int3
jnp
rcll
adc
cwtl
mov
xchg
add
repz
sbb
rorb
push
ja
push
pop
sub
or
in
mov
and
adc
push
jno
xchg
imul
js
das
mov
insl
and
sbb
fimull
xchg
mov
mov
mov
xchg
int3
sub
cltd
decb
jns
jo
loope
mov
xchg
lcallw
imull
jne
test
push
data16
test
nop
lahf
push
or
or
adcl
add
popf
testb
push
aad
loope
xchg
cld
cltd
sbb
add
sub
pop
pop
jp
mov
adc
inc
pop
mov
mov
or
mov
sub
push
shlb
repnz
loope
lret
lea
mov
mov
pop
jns
adc
jo
test
mov
cmp
and
int
and
jmp
bound
mov
dec
mov
lret
add
in
pop
daa
jmp
into
dec
xor
cmc
jge
mov
dec
xchg
push
outsl
or
mov
out
ret
jne
inc
mov
mov
aad
cmp
dec
fwait
xor
jp,pt
xchg
inc
int3
jg
lock
push
inc
mov
loope
cs
fcmove
dec
jecxz
cltd
cwtl
jp
lods
jne
fcmovnu
ja
je
arpl
xor
xchg
or
mov
adc
cs
sbb
pushf
mov
das
clc
scas
daa
adc
pop
xchg
sti
add
popa
cmp
cli
subb
mov
mov
inc
scas
lock
mov
cmpsb
mov
scas
push
call
push
lea
and
push
shlb
mov
test
aad
out
testb
cmpsl
fcomi
test
cs
push
imul
jns
inc
adcb
or
add
push
fidivrl
sub
dec
pop
stos
dec
cld
push
fdivrs
pop
xor
cmpsb
mov
lahf
xchg
and
rcr
ret
scas
jb
sub
mov
xor
mov
jno
outsl
and
in
jo
stc
test
mov
push
stos
push
mov
or
sub
mov
sti
dec
sbb
mov
xor
les
addb
rcl
inc
sbb
stos
xchg
add
cmpsb
push
cld
xchg
test
sti
pop
and
mov
cmp
ja
or
aaa
cltd
dec
jl
fldcw
pop
jp
or
fnstenv
fnstenv
fsubs
cli
push
sub
movsb
mov
pop
mov
mov
mov
imul
fldt
loop
into
adc
push
lret
je
and
sub
subl
andl
pop
ret
mov
aad
negl
cltd
imul
inc
cmpsl
popf
push
inc
outsl
mov
pop
jge
jp
data16
sarb
ljmp
out
dec
fmul
mov
rcll
iret
cmp
or
push
int
or
pop
rcll
nop
lret
sahf
xchg
sub
sbb
sbb
add
pop
mov
fimull
dec
mov
cltd
orl
xchg
mov
frstor
xor
movsb
scas
mov
shlb
adc
test
loopne
cmp
mov
or
mov
xor
mov
push
lock
stos
cmp
mov
jns
add
add
popf
mov
lcall
jle
je
jecxz
jns
out
add
test
adc
inc
or
jns
jne
cld
cmpsb
or
mov
ljmp
in
sub
call
test
js
sahf
repnz
dec
mov
inc
or
jae
jl
cmp
ja
xor
adc
mov
arpl
pushf
mov
sar
repz
push
andb
cld
push
rcrb
adc
and
repnz
sahf
mov
je
push
outsb
mov
imul
arpl
daa
or
pop
pushf
out
cmp
and
arpl
test
xlat
negl
mov
jmp
xorb
pop
add
jae
shlb
not
dec
into
cmp
es
and
lods
adc
test
xchg
popa
push
in
lcall
and
in
jl
in
xchg
jge
bound
jmp
cmpl
aaa
sbb
fcom
inc
sub
sbb
aam
cmp
rcrb
adc
fdivp
frstor
imul
je
jecxz
add
mov
push
cmpsb
jmp
cwtl
js
cmp
cmp
call
or
xchg
test
jp
jmp
frstor
out
jle
or
stc
das
out
cld
push
cmpsb
les
test
mov
mov
pop
xchg
ljmp
mov
lret
insl
jns
mov
mov
popa
int
in
rcrb
sbb
jnp
shlb
and
sub
test
sbb
sub
test
push
or
scas
jb
lds
insl
add
jg
cwtl
mov
sbb
mov
pop
fabs
inc
pop
xchg
mov
push
inc
fisttpll
out
fnstcw
outsl
out
mov
push
lds
sbb
xchg
mov
adc
rclb
mov
ss
sub
xorb
ljmp
pop
pushf
js
adc
dec
ljmp
fbld
lcall
mov
mov
negl
dec
add
xchg
lahf
mov
shlb
js
cli
sub
push
aas
add
pop
popf
xor
aad
xor
jo
pop
pop
cltd
pop
xor
add
xchg
jecxz
mov
fstl
je
inc
dec
ljmp
add
lods
sbb
push
test
fildll
sub
pop
sbbb
std
divb
mov
je
sti
cmp
fnsave
lea
je
repz
or
lret
and
scas
jmp
or
mov
lcall
mov
addr16
inc
cli
data16
xchg
xchg
mov
out
ds
mov
xlat
pop
cs
les
mov
pop
pop
je
adc
addr16
and
ror
pop
adc
sbb
call
xchg
xorb
fldl
and
loop
sub
inc
cmp
inc
inc
ja
add
dec
ss
inc
movsb
sbbl
test
popl
mov
pop
inc
das
cltd
cs
mov
push
fnstcw
push
clc
sarl
cmp
adc
dec
sbb
jnp
iretw
ja
pop
push
cmp
pop
jp
fcomip
fdivl
and
stos
insl
xor
repz
cmc
and
sub
filds
xor
mov
cmc
dec
aad
cmc
push
dec
xor
push
mov
stos
leave
sub
stos
cmp
xchg
outsl
cmp
xlat
jae
jmpw
fstpt
stos
or
and
cmpsl
mov
cmpb
xchg
sub
inc
adc
lds
sub
push
fs
mov
mov
movsl
xchg
ror
add
add
lret
or
push
and
mov
xor
je
pop
test
mov
rorb
outsb
fwait
jae
mov
int
and
cmpsl
push
nop
xchg
xchg
mov
and
out
jp
jno
push
repnz
sub
xlat
hlt
lds
sbbb
stos
pop
in
popa
popf
subl
daa
pop
sti
push
sub
aas
lods
push
cld
icebp
sbb
mov
add
pop
push
cli
xor
dec
jns
ss
push
test
inc
add
test
push
push
push
xor
ds
clc
fadd
pop
sub
arpl
roll
gs
fnsave
xchg
pop
andb
jge
sub
sub
sub
mov
dec
outsb
mov
cmp
int3
stos
lcall
and
push
inc
mov
mov
xchg
inc
pop
les
mov
stos
in
mov
adc
lods
call
mov
pop
je
cmp
add
out
std
mov
jecxz
push
in
mov
nop
xchg
add
loop
ret
push
insl
and
mov
daa
rcl
stc
leave
jbe
dec
jecxz
loop
ret
call
aas
dec
nop
dec
popa
or
jmp
add
xchg
xor
repz
adc
cmpsl
mov
pop
ljmp
pop
or
jno
fcmovu
mov
out
fcmovu
xchg
dec
lock
sbb
mov
cmp
dec
enter
out
sbb
mov
js
fwait
sub
or
xor
push
jmp
repnz
jb
mov
inc
loop
pop
fldl
xchg
add
jle
jbe
sub
jle
xchg
fsubrs
mov
xchg
push
clc
aad
cmp
xchg
jae
insb
push
rcrb
sbb
inc
lods
fcmovbe
push
iret
pop
push
cld
stos
dec
xchg
int3
cld
fs
mov
xchg
pop
fst
inc
xchg
mov
cmp
int
std
lods
mov
lretw
mov
subl
aas
pop
aad
pop
xor
push
js
inc
lret
pop
and
in
loopne
std
push
mov
sub
orb
jge
lcall
insb
movb
mov
test
mov
mov
fnstenv
cld
dec
imul
or
scas
add
enter
push
mov
gs
sub
sbb
jge
mov
add
andl
enter
push
pop
push
addb
in
mov
inc
into
cmp
js
xchg
and
fwait
xor
or
mov
adc
inc
jne
cmp
mov
cmp
push
shlb
inc
daa
xor
loopnew
aad
popa
popa
ror
mov
and
xlat
outsb
cmp
insb
fldl
mov
add
pusha
mov
and
or
aam
mov
sub
add
enter
xchg
or
shl
addr16
adc
outsb
and
shll
push
cli
xor
fisttpl
pop
inc
add
add
lret
mov
push
xor
add
and
cmpsb
ret
lret
shlb
xchg
push
pop
in
in
cld
pop
lret
jbe
dec
insb
out
adc
push
pop
into
popa
fcomps
test
push
pop
push
jl
mov
pushf
cmc
fldt
fdivp
mov
sub
sbb
push
mov
pop
popa
imul
push
dec
pop
imul
out
lret
mov
lret
andl
or
jbe
and
dec
pop
xchg
iret
jl
push
xor
lret
scas
ds
sub
sti
ror
jmp
mov
add
rorl
aas
in
push
mov
push
sbb
test
mov
xor
add
idiv
popf
clc
fcompp
sub
popf
sub
aad
push
je
or
imul
in
pcmpgtb
dec
and
pushf
sbb
cltd
out
lret
add
mov
cmp
and
data16
adc
lea
and
jg
out
idivl
test
loope
repz
mov
outsb
or
push
test
pop
pop
mov
inc
into
out
clc
adc
jno
add
inc
ljmp
jle
mov
lcall
mov
adc
xchg
pop
mov
stos
jecxz
ljmp
rcll
lods
les
fidivl
mov
xchg
jmp
add
and
jb
das
mov
ret
push
test
sub
inc
cli
and
das
inc
xchg
jle
addb
stos
pop
push
les
mov
mov
test
lods
lret
inc
out
xchg
add
into
pop
fsts
jnp
vmovapd
xchg
add
mov
lret
or
sub
cmp
mov
adc
movl
pop
push
xor
pushf
aaa
repz
shlb
jge
test
js
push
dec
insl
inc
les
add
mov
cmp
scas
xchg
push
mov
xchg
fildl
jns
into
inc
addr16
xchg
fdivs
ret
xor
gs
mov
imul
mov
xor
je
push
sub
cli
icebp
xlat
mov
add
mov
sub
das
cmp
rorl
test
push
dec
adc
pop
repz
xor
xchg
loop
xchg
in
repnz
xor
leave
imul
push
inc
push
repz
arpl
mov
enter
xchg
jecxz
adcl
outsl
push
inc
mov
popf
rcl
shll
cmpsl
xchg
movsb
sbb
add
mov
jb
xchg
out
insl
sbb
jno
and
inc
imul
jns
or
adc
or
dec
mov
mov
outsb
mov
push
mov
xchg
jne
mov
jecxz
jg
xchg
dec
mov
sub
mov
pop
and
test
fucomip
push
dec
aaa
mov
mov
not
fcmovbe
xchg
add
mov
adc
pop
not
xchg
or
out
xchg
mov
and
pop
ret
inc
scas
inc
addr16
xorl
aas
push
and
je
jg
vpunpckhbw
dec
std
pusha
mov
hlt
add
pop
inc
mov
sbb
push
push
ss
jo
loope
je
jp
or
xor
or
inc
fistl
jnp
adc
out
sbb
add
das
mov
adc
add
pop
jno
add
dec
or
pop
sbb
bound
jno
push
out
push
sub
aas
fwait
stos
rcrb
movsl
inc
pop
push
pop
ds
ljmp
loop
adc
mov
lea
cmp
outsb
push
sbb
adc
mov
sti
sbb
bound
sub
dec
mov
shrl
pop
stos
scas
out
pop
sub
adc
mov
lret
mov
leave
lods
adc
xchg
insb
lds
mov
or
cmc
inc
pushf
jnp
pop
sbb
mov
push
test
pushf
call
pop
sbb
jle
mov
dec
dec
sbb
add
fcmovbe
loope
adc
jns
test
jl
lds
lods
orb
rolb
outsb
shl
cli
mov
outsb
push
lds
repz
test
lret
or
adc
xchg
xchg
sub
xchg
test
xor
xchg
jl
dec
imul
jle
pop
stc
sbb
sbb
add
adc
fbstp
adc
mov
sub
dec
pop
cltd
out
pushf
xchg
cltd
sub
in
mov
adc
xchg
mov
mov
leave
adc
or
cld
jmp
lea
mov
int3
jecxz
lret
mov
cmp
or
je
mov
xlat
mov
out
aaa
iret
cld
cmc
push
loopne
pop
mov
xchg
test
pop
jb
into
loop
dec
jnp
and
mov
enter
cld
enter
mov
inc
push
iret
mov
test
icebp
rcll
jae
sub
rcrb
arpl
mov
cwtl
hlt
enter
dec
xor
xchg
test
cmp
mov
mov
sub
mov
shlb
movsl
rcl
push
int
and
or
mov
add
lods
fwait
push
and
in
push
test
popf
xlat
call
sahf
push
or
ret
cmp
lret
test
push
sbb
mov
add
loopne
test
movsl
or
or
cmp
dec
mov
mov
push
jp
inc
into
jecxz
shlb
dec
loopne
xchg
pop
mov
cmc
inc
push
cmp
push
jo
cmp
es
fimuls
leave
pop
in
dec
pop
sbb
cli
and
int
jns
add
add
stos
xchg
cs
jge
jnp
shlb
popl
cmp
mov
lods
jle
fbstp
cmp
sbb
aaa
and
ud0
sbb
imul
mov
xchg
mov
add
pop
mov
aaa
into
jns
cld
sahf
jge
xchg
test
add
sub
je
push
pop
data16
ret
jecxz
mov
ffreep
adc
sbb
gs
dec
add
xorl
cs
jmp
sbb
lcall
add
cmc
pop
add
fildl
je
push
icebp
and
ja
or
ret
mov
fs
fmulp
jp
scas
mov
push
sub
ret
daa
scas
stos
or
sbb
cmpsb
in
dec
push
enter
xchg
xchg
mov
jp
clc
rolb
mov
cmp
lock
addr16
push
jmp
repnz
insb
lahf
leave
and
daa
pop
stos
aam
inc
push
lock
dec
ret
mov
xor
dec
or
mov
ljmp
int
fidivrs
pop
push
fistpll
jo
popa
xor
xchg
int
push
push
std
into
ret
sbb
mov
out
mov
sahf
xor
xchg
sahf
pushf
dec
insb
lods
shrl
rcrl
les
mov
cmpsl
cwtl
fcoms
pop
xlat
jecxz
lea
sub
pop
test
pop
xchg
sub
addr16
push
enter
and
mov
cmp
in
cmp
add
and
xchg
jb
lret
andl
fldcw
pusha
and
adc
xchg
and
mov
pop
scas
xor
subl
xor
ds
mov
add
gs
ljmp
jb
int
push
mov
out
sbb
or
and
and
dec
inc
sub
addb
mov
and
inc
push
out
sub
in
popf
xchg
shlb
je
pop
popa
and
lret
imul
sub
add
insb
ret
cmpsb
dec
rolb
or
add
cmpl
lret
insl
insb
inc
hlt
jne
mov
mov
leave
call
cmc
in
mov
mov
rol
cld
jg
mov
push
mov
into
lcall
fcoms
mov
add
inc
out
jp
ret
or
test
add
adc
pop
call
or
loope
test
and
imul
fwait
test
push
test
movb
push
add
ljmp
stc
inc
jno
add
sbb
cwtl
xlat
in
push
jbe
sahf
inc
fidivs
fwait
inc
jecxz
insb
pop
lds
popf
and
orl
mov
lods
test
jp
sub
int3
ja
mov
lds
fists
sti
inc
insl
push
notb
imul
or
sbb
push
daa
sub
pop
mov
fst
jae
cmpsl
push
fisubrs
fcoml
add
push
push
les
aad
sub
inc
enter
xor
ds
cmp
gs
les
out
iret
mov
out
pushf
push
sub
pop
out
jle
cwtl
or
push
sbb
jo
data16
arpl
clc
jns
adc
mov
mov
sbb
pushf
out
filds
insl
std
divb
pop
iret
repz
sub
add
pop
popf
lea
repnz
mov
lds
pop
cltd
into
and
movsb
es
xor
xchg
cltd
inc
mov
or
pusha
das
xchg
push
cltd
rorb
mov
std
setl
rorb
adc
push
test
jge
imul
cmp
sub
xor
pop
sahf
jo
add
ja
xor
jmp
fisttpl
sti
mov
lret
nop
int
sbb
mov
std
pop
xor
adcl
push
sbb
test
rcll
cmpb
or
push
mov
out
insb
mov
scas
data16
leave
add
push
imul
aas
sbb
mov
jmp
inc
cmp
flds
insb
adc
aas
sahf
scas
flds
lcall
and
test
sarl
mov
das
sahf
jbe
push
push
popf
dec
ret
cmpl
xchg
mov
push
mov
inc
cmp
cs
imul
cmp
adc
in
sbb
sbb
inc
test
aam
pusha
popa
add
ret
mov
test
sub
xor
movsb
xor
mov
std
cmp
test
xor
stos
arpl
and
sbb
das
sahf
jp
out
jp
jne
dec
jo
adc
jle
pop
push
jmp
out
enter
outsb
rcll
cmp
imul
lret
popa
popa
jo
mov
loope
pop
xor
jo
imul
xorl
orb
sbb
movsl
or
faddp
dec
subb
mov
mov
mov
imul
int3
push
lea
stc
xor
jl
lcall
loop
push
pusha
out
add
sub
and
sbb
mov
fnsave
roll
jge
pop
lods
fcmovnbe
fdivs
out
and
and
jp
and
scas
aam
pop
addl
jb
notl
jbe
fsubr
mov
dec
mov
imul
jo
add
mov
dec
fs
fldcw
ss
imul
mov
inc
repz
ret
dec
add
scas
pop
ret
or
xchg
notl
scas
mov
inc
jle
lahf
jae
setg
cltd
js
push
sbb
cmpsb
or
sti
cmpsb
out
mov
rorb
jg
pop
imul
idivl
rclb
push
sub
and
add
cmp
and
pop
in
inc
cmc
pop
pop
xchg
mov
ret
and
and
imul
mov
les
test
cmpsb
jmp
fldcw
out
push
lods
dec
adc
movsb
sti
dec
or
push
mov
std
rcrb
idivb
iret
add
int3
imul
shlb
fs
decl
mov
fistl
pop
aam
mov
jp
sbb
mov
jecxz
shrb
xorl
mov
add
sarl
rcrb
mov
jns
add
das
nop
cld
dec
stos
imulb
mov
inc
and
fistl
fcom
mov
ret
sub
nop
cld
rolb
je
movsl
mov
and
clc
push
push
pop
shlb
gs
or
loop
orl
xor
imul
xchg
cli
lret
popa
sahf
xchg
mull
int3
sbb
out
cmp
pop
fcoms
int3
xor
dec
clc
add
out
mov
push
incb
fiaddl
daa
mov
jbe
shr
repnz
lret
leave
lods
mov
outsb
imul
in
outsl
cmpsb
jp
aam
mov
or
or
mov
mov
inc
rolb
cmp
in
cmpsb
jge
push
ja
sub
std
stos
cmpsl
dec
out
sbb
popa
out
or
pop
lea
cld
fcmovnbe
into
and
xchg
mov
sub
fadd
adc
mov
shrl
and
std
lahf
js
fs
ret
out
daa
in
in
mov
adc
jo
mov
mov
or
xor
sub
add
icebp
mov
out
fildl
imul
pop
jb
nop
rorb
mov
loop
mov
enter
in
lock
mov
push
adc
push
popa
in
test
rcrl
jl
add
lret
sahf
sub
inc
out
sbb
or
and
jbe
pop
les
ja
imul
je
mov
adc
enter
mov
dec
sbb
test
pop
or
dec
or
std
popa
or
pop
dec
stc
call
repz
pop
call
dec
loop
sarb
stos
daa
mov
inc
dec
xchg
call
inc
lds
dec
xchg
stc
out
adc
ljmp
les
scas
enter
loop
xchg
shl
and
cltd
add
xchg
int3
dec
inc
xlat
sub
aad
into
pop
aas
cmc
jle
push
push
xor
aas
cmp
inc
adc
jle
int3
pop
mov
ret
or
push
push
and
cltd
dec
xor
sti
adc
ss
sub
sbb
lret
mov
mov
fadds
jnp
and
ret
add
out
bound
and
or
repnz
lods
mov
mov
xor
or
jne
lcall
in
and
mov
or
in
mov
cmp
mov
sub
push
xchg
mov
push
shl
pop
arpl
neg
mov
add
cmpsb
push
js
dec
rorl
nop
xchg
cmpsb
mov
pop
divl
jl
cmp
enter
addr16
inc
stos
jno
mov
mov
jmp
xchg
pop
jne
aad
push
sbb
inc
jno
mov
push
and
lods
cwtl
pop
or
or
add
movsl
scas
ds
mov
jle
dec
mov
cltd
nop
mov
nop
mov
das
jmp
fistpll
sub
xor
sahf
cltd
data16
aaa
and
pop
xchg
push
jg
jnp
pop
mov
in
push
mov
xlat
xchg
jp
mov
loope
xchg
aam
scas
dec
and
sbb
aaa
xchg
out
mov
jne
inc
imul
out
and
dec
jg
and
imul
stc
mov
dec
into
sbb
adc
in
mov
into
aad
test
lret
aaa
lret
pop
dec
sbb
out
push
aas
mov
in
stos
jb
dec
push
sub
jl
jle
jmp
jmp
adc
fstps
sbb
xorl
aas
lcall
pop
ja
cmc
lret
cmc
pop
orl
mov
or
shl
mov
insl
adc
pushf
mov
jl
adc
test
mov
cmp
push
xchg
push
test
or
jne
sub
testl
pop
xchg
adc
xchg
test
sub
mov
jl
fs
mov
dec
dec
inc
xor
scas
pop
push
push
movsl
push
mov
xchg
int3
mov
cmpsb
and
ficoml
aad
add
xorb
adc
push
mov
cs
sbb
adc
jne
ss
pop
inc
jg
cmp
xor
les
movsl
jae
cs
sub
jnp
mov
jle
xchg
push
cltd
xchg
fimull
cmp
and
shlb
jns
sbb
dec
sub
xchg
mov
outsl
ret
jmp
loop
ret
inc
imul
scas
mov
push
ficomps
sub
mov
push
adc
mov
scas
movsb
js
push
mov
subl
iret
mov
and
lods
popf
adc
popa
test
cs
mov
out
mov
es
xchg
out
jo
cwtl
js
jne
and
adc
daa
xchg
ja
adc
loopne
cmp
lea
and
ljmp
pushf
inc
and
jbe
cmpsl
fisttps
dec
pop
scas
addl
test
scas
jmp
test
sbb
mov
mov
and
xor
out
movsl
aas
das
in
add
xor
and
cli
sub
xor
orb
xor
mov
mov
mov
mov
repnz
dec
ss
inc
leave
add
sbb
outsl
test
and
sub
dec
hlt
jae
jl
add
out
pop
lock
into
gs
int3
cltd
call
call
int3
sbb
add
ret
int
mov
loope
mov
in
ret
sbb
bound
lret
push
xchg
xor
dec
lea
into
jl
mov
push
fistpl
jnp
push
in
cltd
inc
in
push
pop
cli
lods
out
or
ret
xorl
out
pop
shrl
and
popa
jge
inc
fsubl
out
or
cmpsb
repnz
repz
push
sub
test
jae
mov
sti
sub
out
adc
lret
ficomps
push
js
gs
jnp
outsb
clc
aam
xor
les
decb
push
mov
pop
leave
pushf
xorl
dec
pop
ljmp
movsl
jo
enter
sbb
fwait
addb
aas
ja
and
cmp
fiadds
xchg
sbb
or
lock
rcr
cs
jecxz
push
andb
out
and
aaa
leave
ret
stc
jno
xchg
mov
inc
loope
enter
sub
inc
xchg
shll
push
idiv
imul
repnz
ljmp
push
ret
xor
ds
mov
dec
stos
add
test
cmp
loop
cmp
pop
out
hlt
pop
sub
ja
sub
jae
std
scas
popa
dec
imull
ret
jno
sahf
inc
aas
cmp
imul
stos
popa
add
js
push
dec
and
and
orb
sub
xor
xor
and
cmp
and
pop
les
push
sub
mov
inc
xchg
mov
cmpsb
out
std
insl
inc
lret
jl
icebp
insl
loopne
iret
mov
outsl
sub
and
cmp
in
lar
dec
ja
inc
sub
inc
fs
jno
stc
sbb
lock
pop
ljmp
cmp
mov
cwtl
jg
and
or
adc
mov
shlb
loopne
xor
and
in
ja
pop
shl
rcpps
cmp
dec
in
pop
mov
loope
aaa
ret
stos
or
xor
lea
xor
scas
shrb
rcrl
jmp
mov
fnstsw
cmp
xchg
ret
push
aad
xchg
push
mov
lods
insl
mov
test
leave
adc
test
add
cli
idiv
and
in
clc
cmp
decb
push
add
sahf
jecxz
aad
xchg
add
call
xchg
jnp
xchg
jb
xchg
or
pop
and
cmp
jae
fimull
cwtl
mov
loop
pusha
test
mov
orl
xor
xchg
test
js
cmp
bound
negl
mov
jne
cltd
nop
mov
ds
xchg
add
push
js
jnp
loopne
or
mov
imull
adc
fistpll
add
push
sbb
shll
xchg
push
xor
dec
dec
les
fwait
popf
xchg
add
xor
into
sar
movsb
lods
hlt
cltd
gs
in
nop
add
cmp
push
jl
mov
test
arpl
cwtl
xchg
and
loop
inc
lcall
fcmovu
adc
dec
jge
jecxz
pop
fldcw
into
mov
and
lret
clc
and
inc
or
adc
icebp
inc
sub
inc
addl
sbb
test
pop
mov
aaa
test
inc
push
pop
sahf
in
jge
pop
adcb
insb
add
mov
adc
and
movsl
inc
mov
int3
and
jmp
jmp
fdivrl
sbb
push
in
fstl
popa
das
xor
shrd
lods
pop
roll
jmp
ss
adc
popa
stc
dec
lds
xchg
rorl
dec
xchg
and
repnz
ss
out
mov
add
mov
push
enter
sub
sub
mov
mov
mov
scas
and
test
imul
in
loope
xor
fimuls
mov
mov
pop
pop
je
mov
outsb
cmp
cwtl
jl
sbb
sub
jp
pop
sub
fwait
add
bound
imul
cmp
into
call
push
decl
cld
mov
xchg
pushf
adcb
test
xor
out
aam
and
push
sub
xchg
cmc
xlat
loop
sbb
nop
movsb
iret
pop
scas
inc
sbb
subb
fisttps
mov
test
cmp
sub
subb
push
in
lods
push
je
pop
sub
lods
adcl
jae
in
sbb
and
or
into
jp
mov
and
in
cmp
out
inc
add
fwait
lret
jb
outsl
sahf
mov
out
outsb
test
adc
lcall
pop
in
ja
lret
cli
sub
add
cmp
add
add
and
push
jp
pop
pop
test
add
xchg
add
cmp
das
cmp
xor
pop
dec
mov
mov
mov
pusha
mov
or
popf
jl
push
in
stc
dec
push
shrb
dec
mov
out
mov
cmp
sub
inc
xchg
ljmp
cmp
cmp
sbb
mov
jnp
lea
arpl
push
es
sbb
fdiv
xor
cs
dec
shrl
and
fcmovnu
mov
cli
pop
and
aam
mov
inc
pop
testb
nop
ljmp
lds
mov
leave
dec
adc
mov
dec
aad
cmpb
imul
xor
stos
loop
dec
insb
adc
add
push
sub
pusha
clc
dec
fidivrl
adcb
mov
push
out
inc
cmpsb
pusha
ror
test
int3
clc
xor
mov
decl
pop
in
gs
and
imul
adc
push
rcrb
int3
mov
les
stos
inc
sbb
jo
imul
test
divl
sub
inc
int3
push
ret
push
cltd
rcl
scas
jbe
jle
adc
insl
arpl
fldt
aaa
dec
popa
lcall
add
rorb
mov
add
imul
sub
mov
adc
mov
adc
xor
lock
dec
push
cmp
or
cltd
pop
stos
pop
xchg
hlt
sub
icebp
shlb
mov
sbb
lahf
xchg
lahf
ret
mov
pop
andl
sub
cmp
out
sahf
sub
divl
cmpsl
lods
sub
imul
cmp
orb
xchg
gs
adc
cmp
pop
mov
std
sub
mov
ja
jae
dec
mov
out
addr16
cld
ret
add
mov
ror
sbb
rcrb
les
les
jno
xchg
daa
sub
mov
inc
inc
push
out
cltd
dec
call
or
adc
jmp
mov
push
and
sub
popa
loopne
xchg
ret
clc
iret
les
je
mov
loop
xor
mov
insb
hlt
test
xor
fcmovbe
push
call
xchg
jp
push
cmp
adc
leave
pop
inc
and
insl
das
dec
mov
lock
or
inc
mov
pusha
xor
les
mov
jae
in
adc
psrlw
aas
outsb
out
ss
bound
jb
enter
mov
adc
mov
pusha
cmp
adc
fiadds
mov
ficoms
dec
add
mov
stos
ss
or
hlt
