int
outsl
rclb
sahf
outsb
add
movl
test
push
pop
adc
cmp
mov
jb
dec
pop
leave
mov
push
lret
popa
loop
int
mov
orb
adc
les
cmpsl
insl
xchg
and
addb
dec
cmp
push
addr16
jno
pop
fidivl
adc
ret
clc
xchg
or
inc
xorb
inc
scas
enter
dec
sub
push
jecxz
push
xadd
cs
mov
fnstenv
xchg
mov
loope
pop
fbstp
movsl
dec
lds
leave
push
stos
mov
frstor
inc
outsb
addr16
sub
imul
test
add
xchg
mov
sbb
mov
movsl
adc
fiaddl
mov
mov
push
leave
sti
in
push
movsl
lods
testl
pop
aas
lods
mov
xor
inc
cmp
dec
ficompl
cwtl
loopne
fists
add
mov
rol
vmread
inc
mov
fs
icebp
push
jg
rcrl
test
jo
and
repnz
jle
mov
test
das
pop
jae
mov
cwtl
adc
movsl
bound
hlt
fstps
pop
or
aad
cwtl
addr16
sbb
mov
pop
and
push
outsl
sbb
les
mov
dec
test
enter
insb
adc
cmpl
sbb
cmovge
inc
push
xchg
or
rcrb
lret
lret
mov
inc
dec
jne
cmp
inc
pop
jno
and
call
repz
in
movsl
adc
and
push
adc
cmpsl
dec
addl
mov
sahf
inc
pop
jle
and
and
sub
or
pop
pop
cmp
jle
leave
dec
icebp
adc
xchg
dec
fisubrs
jecxz
mov
push
push
aas
sub
push
rorb
stc
jmp
mov
fwait
push
fxrstor
pop
bound
lock
cmp
pop
cli
push
ds
rolb
inc
and
stos
mov
bound
cltd
fldcw
rcll
iret
pop
and
pop
in
inc
inc
lea
mov
sub
fsub
mov
js
inc
mov
mov
jbe
addr16
jae
ret
inc
and
int3
push
punpcklbw
test
pop
lock
cmp
inc
sbb
es
shrl
in
add
pop
jmp
das
inc
inc
push
cmp
call
mov
dec
jb
adc
sbbb
stc
cmp
sahf
int3
inc
sahf
mov
pop
pop
mov
lret
aas
and
shll
xor
push
mov
sbb
dec
mov
sarb
bnd
adc
or
xor
mov
jp
sti
arpl
xorb
or
sti
aas
inc
cmp
movsl
ret
sub
dec
xchg
mov
jb
push
cmp
sbb
mov
sub
mov
and
add
sub
imul
and
iret
push
fs
loope
aas
mov
dec
fs
cmpsl
mov
xor
pop
inc
xor
mov
lds
jo
in
xchg
fwait
outsl
push
jo
js
sbb
cmp
or
ljmp
iret
scas
outsl
add
stc
rcll
mov
mov
ja
xor
gs
xorb
pop
rolb
leave
fs
jecxz
test
jecxz
inc
mov
mov
lods
fisubrl
cmp
cli
push
jmp
hlt
jne
push
or
std
sbb
xor
cs
cmpsb
or
mov
sarl
xor
lds
sub
jne
scas
fs
das
add
in
test
pop
movsl
arpl
push
add
ja
pop
push
jecxz
mov
sub
fldl
jae
daa
add
ja
lods
lret
mov
mov
shufps
ficompl
rorl
mov
jnp,pt
hlt
pop
negl
xor
imul
sub
inc
pop
fstpt
lret
incl
inc
mov
jmp
push
xlat
addb
adcb
push
dec
test
or
xor
icebp
add
and
xchg
fistps
mov
lods
adcl
out
in
and
lea
call
adc
xor
mov
loopne
leave
inc
loopne
mov
jo
rol
movsl
dec
inc
fsubl
xlat
repz
mov
aam
push
mov
imul
fcmovnu
adc
lcall
mov
and
mov
mov
inc
sbb
adc
jb
sub
frstor
and
leave
mov
andl
adc
dec
sbb
xchg
or
push
out
sahf
or
stos
mov
sub
out
adc
mov
imul
sahf
sub
mov
into
xchg
addr16
sub
in
push
mov
xchg
imul
xor
xor
xchg
sbb
add
cmp
popa
add
inc
sbb
loop
xor
add
cltd
fcoms
or
dec
push
or
jg
sub
and
adc
movb
jle
jecxz
sub
add
push
mov
xchg
nop
xchg
jmp
dec
sub
jo
jae
xchg
or
sbbb
cmp
push
in
push
mov
jae
out
sahf
cmp
push
sti
mov
scas
xor
pop
cmp
divb
lret
ljmp
cmp
mov
adc
test
add
mov
fstl
rcll
push
lods
into
roll
adc
popf
inc
ficoml
mov
sahf
sub
fsts
inc
ss
cmpsb
pop
pop
icebp
adc
inc
and
or
int3
out
test
pop
pop
dec
psubsb
cmp
pop
push
shlb
or
mov
adc
call
mov
lods
fidivs
and
mov
dec
push
fimuls
push
loopne
pushf
xor
push
cli
sub
pusha
pop
or
pop
pop
aaa
movsl
aad
mov
jl
popf
push
enter
sbb
push
mov
cmp
xor
adc
dec
rorl
mov
push
das
lret
seto
das
push
jge
lea
mov
add
cmp
je
pop
test
xchg
clc
mov
lods
mov
mov
push
adcb
sub
ljmp
jb
xor
aaa
lods
mov
cmp
loop
gs
fcomip
pop
jne
fisttpl
dec
jge
xor
xor
cmp
fdivrs
cmp
ljmp
cmp
mov
cmp
xor
sbbb
lcall
xor
into
mov
mov
repz
aad
cmp
push
push
out
test
pop
stc
sbb
dec
je
jae
adc
lds
std
lahf
jecxz
jnp
and
adc
dec
ret
iret
sbb
outsl
hlt
dec
inc
arpl
adc
imul
outsb
add
testb
push
adc
ffreep
add
mov
pop
mov
ret
lea
movb
outsl
and
sahf
nop
sbb
dec
setnp
scas
add
mov
inc
icebp
dec
aad
ss
rcrl
push
push
ret
pushf
sbb
mov
ja
mov
outsb
pop
mov
int3
inc
arpl
in
mov
sbb
hlt
cmp
add
mov
pop
mov
out
loopne
lds
lods
push
lahf
jp
pop
inc
sub
jne
add
sub
cmp
in
mov
jb
clc
inc
into
repz
das
push
xchg
dec
mov
ljmp
ret
cmc
push
shl
mov
mov
es
cmpsl
subl
xchg
pop
rcr
jg,pt
mov
cwtl
rorl
ficomps
jnp
hlt
mov
sbb
and
in
sbbb
shl
pop
push
mov
fwait
stos
pusha
std
jmp
push
js
cmpsl
test
sbb
xchg
mov
xor
xchg
sub
and
hlt
or
inc
cmc
imul
aas
add
pop
stos
cmp
dec
dec
sti
ja
loopne
fnstcw
repz
add
js
sub
movsl
pop
mov
sbb
xchg
xchg
mov
insb
pop
mov
xchg
aad
das
test
sbb
add
and
mov
sbb
movsb
out
ret
jo
pop
shl
mov
push
jno
sub
pushl
out
jmp
mov
aaa
loope
xchg
jge
dec
les
pop
mov
xchg
aad
mov
dec
mov
pop
sub
outsb
fwait
cld
icebp
mov
jg
popa
cmpsl
sub
inc
fidivrl
mov
subl
sti
in
xor
pop
clc
popf
xchg
add
and
pop
pushf
out
jge
imul
imul
test
shl
mov
xchg
lret
jbe
xchg
lret
stos
ss
aad
lcall
dec
dec
or
mov
jno
and
fwait
nop
hlt
shlb
dec
arpl
mov
out
xor
lret
mov
fwait
repz
push
mov
testl
fsubrs
pop
jns
pop
jl
xor
test
repnz
lods
fs
mov
addb
cs
push
cmp
cmp
in
stos
bound
test
xchg
xor
aaa
fld
into
movsl
dec
mov
insl
push
xchg
je
push
sub
aam
rcrb
cmp
in
sbb
add
and
cmp
dec
dec
call
add
mov
call
mov
push
sub
call
movzbl
sub
inc
mov
xor
inc
call
inc
xor
mov
mov
and
xor
inc
mov
dec
mov
add
mov
lea
call
mov
add
sub
dec
mov
call
dec
lea
call
dec
imul
sub
inc
or
inc
dec
dec
xor
pop
add
imul
add
imul
pop
mov
mov
pop
lea
or
mov
inc
pop
inc
mov
mov
imul
xor
imul
movsbl
imul
pop
xor
sub
pop
lea
imul
mov
mov
sub
call
mov
dec
add
lea
ret
dec
imul
push
add
inc
push
sub
dec
push
dec
movsbl
push
lea
sub
push
mov
add
mov
xor
sub
push
dec
ret
push
add
dec
lea
mov
add
imul
dec
push
inc
inc
add
call
pop
ret
jmp
add
mov
imul
inc
movzbl
lea
mov
add
imul
xor
and
mov
mov
movzbl
inc
mov
xchg
inc
mov
sub
inc
xor
mov
mov
lea
mov
inc
dec
sub
dec
jne
dec
mov
or
lea
pop
movzbl
imul
pop
or
add
pop
dec
and
xor
movzwl
inc
sub
inc
add
or
mov
add
add
ret
push
add
or
sub
sub
lea
dec
add
dec
push
push
push
push
add
xor
mov
push
inc
add
sub
inc
mov
inc
movzbl
xor
lea
mov
inc
push
mov
imul
xor
add
sub
push
inc
xor
push
dec
add
pushl
sub
call
inc
add
movsbl
mov
dec
and
add
dec
dec
pop
ret
movzwl
mov
inc
lea
or
lea
mov
imul
cmp
jb
movsbl
xor
lea
inc
mov
add
inc
mov
mov
movswl
inc
inc
dec
sub
imul
dec
movzbl
mov
mov
xor
cmp
jb
inc
pop
inc
movswl
mov
imul
movzwl
and
inc
dec
lea
add
lea
lea
or
xor
and
xor
inc
sub
mov
mov
and
test
jbe
inc
mov
or
mov
inc
inc
lea
lea
imul
and
or
and
inc
lea
mov
sub
mov
movzbl
dec
add
lea
or
and
lea
mov
imul
lea
mov
lea
inc
mov
mov
add
mov
mov
sub
lea
movsbl
and
dec
jne
dec
mov
or
dec
imul
dec
movzbl
inc
imul
inc
dec
lea
mov
inc
inc
add
mov
inc
sub
mov
sub
mov
sub
inc
test
jbe
inc
mov
lea
mov
mov
dec
add
lea
imul
dec
add
mov
imul
or
add
inc
imul
add
add
add
movswl
add
and
xor
dec
mov
or
mov
movzbl
inc
dec
add
sub
movsbl
and
add
imul
mov
mov
mov
movzbl
lea
add
mov
dec
jmp
push
xor
mov
mov
inc
dec
dec
inc
add
mov
and
or
inc
sub
inc
inc
dec
add
and
imul
or
movswl
inc
imul
inc
mov
dec
movsbl
dec
dec
dec
dec
imul
mov
mov
mov
dec
inc
dec
sub
cmp
je
call
call
dec
imul
mov
inc
dec
imul
inc
xor
mov
lea
sub
dec
add
inc
call
call
add
ret
mov
inc
pop
movzwl
ret
push
dec
inc
inc
mov
add
push
mov
mov
push
inc
push
movzwl
push
sub
and
mov
imul
sub
imul
dec
dec
mov
call
dec
push
dec
push
movswl
pop
add
lea
mov
dec
lea
mov
mov
lea
inc
xor
mov
dec
je
dec
add
lea
imul
mov
add
mov
dec
movzwl
mov
dec
inc
mov
lea
lea
add
dec
repnz
xor
mov
add
movsbl
jmp
mov
mov
jmp
sub
dec
xor
dec
inc
imul
imul
sub
mov
mov
lea
inc
or
inc
pop
pop
ret
push
inc
and
xor
mov
inc
add
add
add
inc
dec
dec
add
mov
dec
imul
sub
dec
inc
add
sub
lea
xor
add
mov
or
lea
pop
ret
sub
or
mov
add
dec
mov
and
dec
mov
movsbl
dec
mov
and
dec
xor
dec
add
mov
imul
lea
inc
dec
imul
inc
add
sub
lea
cmp
jb
dec
push
mov
dec
push
add
inc
push
add
lea
xor
inc
imul
xor
add
mov
xor
add
lea
push
inc
mov
mov
add
lea
xor
xor
lea
mov
mov
mov
sub
dec
movzbl
add
imul
mov
inc
add
sub
movzwl
add
mov
add
movzbl
dec
imul
imul
movsbl
dec
imul
add
sub
inc
mov
jmp
call
ds
fdivr
movsl
iret
decb
mov
insb
push
mov
je
xchg
shll
mov
sbb
ss
jg
es
mov
mov
push
mov
pop
cmp
and
ret
aas
call
lahf
sub
xchg
mov
std
fstpl
sub
jmp
scas
in
in
inc
fstps
cmpsb
lahf
lea
fcoml
lods
daa
pop
popa
out
cltd
fists
pop
lcall
aaa
out
in
mov
ret
fmul
inc
insb
movl
mov
push
inc
test
lcall
or
fdivrl
xor
push
adc
fidivrl
add
das
les
dec
iret
xchg
jecxz
mov
xchg
mov
inc
mov
insb
fsts
aas
push
dec
outsl
push
lods
sbb
lret
out
mov
mov
inc
stos
adc
icebp
mov
dec
daa
or
add
and
dec
cmc
add
outsl
popa
and
dec
insb
outsl
xor
in
push
imul
insl
int
mov
inc
mov
adc
cld
gs
jle
out
es
pop
ret
out
ss
jae
jbe
imul
push
movsl
jbe
clc
xor
jnp
bound
mov
arpl
adc
jno
lds
loop
lret
mov
popa
fs
shll
ljmp
xlat
aad
sbb
pop
cmp
push
add
sub
outsl
pop
push
ret
mov
cmpsb
int
icebp
cmp
mov
mov
inc
mov
jge
je
or
sub
push
addr16
ret
arpl
fsubrl
jbe
xchg
lds
sbb
pop
nop
fbld
cli
imul
std
and
shlb
jnp
ljmp
push
mov
and
lcall
cmpsl
cli
adc
push
lods
jo
in
push
int3
jo
inc
and
int3
lea
inc
iret
or
dec
ss
addr16
scas
xchg
sbb
das
in
push
xchg
loop
sbb
data16
sub
dec
mov
adc
pusha
js
pop
repz
lcall
int
cmp
movsl
push
mov
jo
or
sar
jg
pop
xchg
or
loope
add
bound
cmp
fdivs
out
xchg
ficomps
xchg
ds
or
sti
arpl
int3
push
outsb
pop
out
loop
call
ret
in
mov
xlat
ss
je
arpl
push
push
or
test
or
ss
sub
cltd
or
lock
insb
das
mov
imul
add
sti
rcll
insb
push
xchg
pop
pop
stos
mov
ja
aas
xlat
scas
iret
pop
inc
xchg
mov
ljmp
dec
dec
loop
shr
scas
in
pop
lea
cmc
fs
daa
and
jo
js
fs
xchg
sub
mov
out
sarb
xchg
jp
jge
ret
dec
or
imul
add
dec
popf
movb
add
push
add
pop
push
pop
les
or
sbb
xor
add
insb
dec
jecxz
shl
cmc
rcl
test
je
cmp
pop
push
inc
sarb
xlat
or
ret
xchg
sbb
adc
sahf
cmp
adc
pop
jecxz
adc
hlt
clc
enter
push
adc
add
or
push
cmpsl
iret
divb
subl
sbbl
mov
sub
ds
les
repnz
ds
aam
sub
lods
arpl
pop
cmp
sub
cmp
outsb
pop
cmpsl
test
jle
aad
xchg
arpl
iret
jl
dec
rorb
lock
sti
xor
arpl
or
pop
mov
std
int3
sbb
jmp
repz
mov
icebp
xchg
data16
ret
stc
jmp
jb
cli
ljmp
fs
xchg
mov
jge
fwait
test
ret
lret
xchg
in
cmp
sub
out
divb
jno
pusha
xchg
test
mov
out
add
nop
roll
stos
push
add
cmp
into
out
addb
adc
lret
pop
mov
pop
psubusw
inc
loopne
xor
lret
jbe
sbb
fldcw
cmp
std
iret
ss
sbb
test
int3
xchg
fildl
xchg
fadds
lds
les
idivb
int3
lret
dec
inc
test
lods
out
into
xor
outsl
sub
imull
ds
shlb
or
outsl
fcoms
push
xor
or
out
xchg
xchg
stc
jle
stos
inc
fs
sub
inc
and
or
jnp
bound
jae
jne
mov
into
adc
mov
dec
movsl
mov
out
sbb
mov
pop
je
mov
and
cli
cmp
pop
or
ljmp
orl
pushf
mov
ret
adc
in
in
or
push
sbb
inc
cmp
shll
push
loop
mov
jb
or
enter
push
out
sub
pop
dec
and
repnz
xor
loop
cltd
lret
lret
cwtl
or
xorb
iret
sti
and
aas
xor
daa
ret
mov
stc
scas
pop
popf
mov
xchg
mov
mov
xchg
cmp
mov
mov
ja
stos
pop
mov
jnp
xlat
pop
jbe
loopne
loope
and
or
xchg
push
les
repz
dec
popf
jae
insb
lds
lahf
or
pop
ja
xor
mov
dec
push
push
int3
adc
mov
bound
lds
fcmovnbe
lcall
popf
and
push
push
pop
mov
push
jp
das
pop
adc
imul
imul
push
and
movsb
rcl
arpl
and
in
lret
lret
inc
jnp
leave
outsl
test
orb
inc
call
add
pop
jno
cmc
jo
movsl
pusha
out
dec
jb
aad
sbb
lds
iret
je
mov
call
pop
cmpsb
rclb
ds
jno
mov
pop
dec
shr
push
jle
jge
mov
aam
jae
fwait
and
add
dec
sbb
cld
adc
xor
sbb
fstpl
add
sbb
push
jb
imul
push
es
dec
dec
aad
enter
cs
mov
adc
mov
lea
scas
das
mov
cs
fsubrl
push
add
push
sbb
jmp
incl
int
sbb
outsl
bound
mov
movb
pop
and
jo
fbstp
out
dec
aaa
enter
add
es
sbb
xor
pop
pop
mov
aam
pop
jp
out
into
sbb
call
push
sbb
pop
jae
or
or
out
mov
ss
xor
sbb
push
movsb
mov
sub
xchg
mov
mov
fs
insb
mov
xchg
push
fcoml
lcall
ja
sub
sarl
sbb
pop
xor
adc
jle
xchg
or
xchg
or
mov
movb
xchg
ffree
or
mov
sub
rcl
loopne
mov
arpl
pop
dec
inc
iret
mov
insl
es
data16
pop
ljmp
repnz
mov
push
pusha
lods
xor
stos
mov
pusha
nop
xchg
imul
add
rclb
sub
jmp
adc
sbb
ss
mov
aam
xchg
inc
rcl
push
test
mov
pop
out
gs
jmp
insb
push
cwtl
or
add
scas
loop
jno
add
adc
jb
loope
lods
xchg
ja
loope
int
dec
movsl
scas
test
sub
in
xchg
outsl
cmc
fdivl
lcall
lods
pop
mov
jecxz
inc
sti
or
cmc
xlat
loope
insl
scas
cli
sbb
push
jb
test
pop
xchg
enter
leave
inc
je
push
lea
out
stos
das
loop
fs
icebp
cli
mov
push
js
pushf
pop
rclb
lret
mov
jno
lods
or
jmp
daa
test
in
inc
sbb
pop
ds
and
js
push
dec
fdiv
stc
insb
push
roll
fimuls
mov
jg
push
xchg
popfw
pop
mov
je
out
pop
xchg
out
mov
xor
pop
jb
mov
jns
sti
inc
mov
add
movl
pop
dec
insb
addr16
outsl
push
adc
aam
xchg
or
mov
enter
rorl
aam
jmp
sbb
in
je
jp
loop
repnz
cmpb
daa
nop
std
out
std
bound
inc
push
fimull
daa
cmp
xor
push
adc
mov
je
repz
stc
push
xlat
in
add
fwait
data16
aaa
sti
mov
shlb
jnp
js
stos
xor
sbb
or
adc
lds
add
dec
inc
cmp
add
cmc
outsl
jg
mov
add
js
cmp
pop
inc
test
inc
dec
mov
pop
xlat
lahf
arpl
or
xlat
sti
out
jmp
push
pop
adc
mov
push
enter
jl
mov
out
sarl
mov
pop
inc
mov
fstl
and
and
imulb
pop
ss
insb
adc
jle
xchg
cmp
rcrl
xor
lds
adc
nop
add
cmp
cltd
aad
xor
lds
test
daa
add
push
jg
xor
push
mov
mov
repnz
sbb
push
into
xchg
jnp
dec
jae
and
xchg
fs
lahf
jg
aam
push
sbb
and
outsl
cmpl
shlb
xor
mov
arpl
cli
jne
push
in
jmp
pushl
jg
push
sub
xor
scas
icebp
add
push
mov
mov
add
cltd
and
mov
mov
ss
pop
dec
and
jae
jle
out
xor
out
cli
lret
xchg
jp
add
je
jne
insb
mov
movsb
jae
lock
mov
xorb
dec
jo
out
gs
sbb
bound
scas
mov
and
addb
fstps
mov
xor
sub
call
mov
push
aaa
inc
outsl
ret
imul
enter
hlt
and
push
pop
inc
lcall
fildll
shll
lcall
lock
jns
lods
shrl
std
jp
inc
and
ret
mov
push
push
push
test
mov
jb
cmp
stos
push
adc
mov
int3
push
xchg
hlt
mov
movsl
inc
xor
scas
add
lret
pop
roll
mov
pop
jecxz
lret
ds
xor
mov
sbb
sbb
rcll
push
cmpsb
add
add
cmp
push
push
mov
pop
cmpsb
insl
mov
je
ja
dec
ljmp
pop
cmp
mov
jb
jle
fadds
jmp
push
dec
ja
sbb
jne
push
fbstp
stos
sub
scas
idivl
mov
sbb
les
push
mov
or
in
or
fsubl
pop
mov
push
ret
fcompp
fisubrl
imul
popa
mov
leave
mov
lock
pop
out
shrb
cmc
and
jbe
xchg
cwtl
mov
jg
sub
in
cmpsl
jmp
fldt
loopne
push
add
icebp
movsl
cs
mov
or
mov
adc
cltd
jbe
call
leave
and
mov
sub
loop
push
xchg
dec
mov
add
mov
ret
incb
sbb
mov
jl
outsb
es
mov
aam
fwait
sbb
shr
or
testl
movsl
test
shrb
stos
cmpsl
es
fidivl
and
xor
fdivs
add
ror
pusha
pop
fwait
pop
scas
push
add
clc
xor
dec
fisttpl
dec
or
ja
cmp
mov
inc
sbb
mov
in
jmp
push
mov
pop
fwait
or
push
xor
jecxz
xchg
xor
xlat
mov
cmp
inc
sbb
aaa
inc
scas
test
cmp
sbb
popa
adc
dec
mov
jo
xchg
mov
pop
aam
lock
inc
fldcw
sahf
lock
enter
out
xor
jno
mov
xchg
xor
cmpsb
pop
call
clc
jl
int3
ds
insl
lcall
loopne
lods
cmpxchg
addr16
je
arpl
pop
btc
push
sub
jp
sbb
push
jecxz
lcall
jmp
sbb
test
scas
stc
jb
push
jne
je
mov
or
jp
shrl
repnz
cmp
xor
sbb
loopne
mov
mov
cld
add
stc
add
pop
jbe
cs
xchg
mov
ja
les
test
jno
mov
aad
cmp
mov
mov
sub
mov
adc
mov
pop
je
out
adc
mov
aaa
sti
test
cltd
xchg
fmull
cmp
push
add
or
mov
xlat
ret
jns
pop
nop
pop
sarb
enter
rorl
aas
jne
fidivrs
pop
movsb
sub
lods
pop
int3
fistl
loop
loopne
sbb
std
aad
mov
adc
divb
lods
sbbl
cmpsb
sbb
lret
adc
pop
sbb
divb
lret
pop
add
inc
pop
dec
das
outsl
lds
in
in
mov
xor
xchg
into
fs
mov
dec
cmp
arpl
lods
daa
mov
pop
faddp
pop
pop
fcoml
jl
scas
lods
in
sbb
je
je
dec
pop
out
ss
xchg
das
fwait
mov
ja
pop
jnp
cmp
cmc
dec
sbb
sahf
sub
jge
lcall
out
jns
call
fisubs
lock
fcmovbe
jnp
repnz
mov
stc
and
xchg
dec
lret
mov
xor
pop
jmp
addr16
lret
jmp
fcoml
inc
add
sbb
pop
test
cmc
int
xor
sub
insl
mov
lods
adc
cmc
addr16
push
jb
inc
pusha
in
ret
mov
dec
scas
mov
mov
inc
test
mov
pop
sub
jecxz,pn
mov
xor
lds
iret
lret
call
call
aaa
mov
je
mov
pusha
pop
and
rclb
and
inc
lock
ret
cli
repz
mov
push
pushf
test
repz
and
test
or
in
cmp
es
in
mov
movsb
jge
pusha
add
jno
cmc
nop
pop
loop
sti
pop
cmp
jle
dec
adc
or
shr
mov
jmp
arpl
imul
gs
pusha
ljmp
sub
adc
sbb
sbb
cmp
loop
popa
pop
push
fs
fidivl
mov
xchg
aad
and
fisttpll
push
jae
lods
cwtl
xchg
pop
xchg
out
xchg
mov
mov
ljmp
out
xchg
mov
movsb
lods
push
or
xlat
cwtl
rolb
mov
mov
mov
mov
sub
popl
in
or
mov
dec
mov
test
test
test
cmp
push
aas
xor
outsl
sub
pop
pop
mov
outsl
mov
pop
movsb
jns
jecxz
add
mov
out
les
xchg
add
adc
movsl
pop
cld
into
jmp
test
sbb
cmp
mov
roll
pop
lret
rorl
mov
lods
stos
addr16
push
inc
in
inc
lock
pop
or
dec
sbb
push
sbb
mov
sahf
mov
xor
icebp
scas
cmp
jae
adc
and
shll
mov
mov
jbe
mov
jbe
xorb
shlb
gs
xchg
leave
pop
pop
sarb
jnp
or
fucom
shlb
aas
rcll
and
sub
push
loopne
es
outsb
dec
add
inc
adc
out
xor
mov
fs
push
or
mov
fadds
and
movsl
push
insb
cltd
mov
out
or
outsl
mov
pop
push
hlt
xor
xchg
push
pop
cmp
mov
cmp
push
cmpsl
jecxz
cmp
mov
ja
sub
scas
scas
xchg
jle
mov
push
push
fcompl
push
lcall
adc
call
push
sbb
js
add
lcall
push
mov
xor
push
ret
xor
es
cmc
out
mov
add
adc
movsl
dec
mov
sbb
fldl
lahf
adc
pop
jns
mov
inc
push
movsl
outsl
sahf
xor
in
mov
mov
je
push
dec
aam
dec
int3
sbb
std
or
dec
jb
cltd
loopne
fcoms
xchg
mov
rcrl
aam
add
sbb
rclb
xlat
mov
jno
andl
emms
xor
or
and
cwtl
mov
fsubs
xchg
and
mov
cmp
cvtps2pd
cmc
fildll
data16
push
mulb
mov
mov
insl
mov
pop
sbb
ret
pop
xor
inc
jae
popf
sbb
inc
sbb
mov
mov
dec
sarl
dec
pop
outsl
out
mov
xor
mov
mov
aad
fists
ss
cmp
add
pop
lcall
mov
shrb
adc
cmp
xlat
test
jno
mov
push
mov
xchg
out
sub
sub
jle
sbb
mov
dec
pop
ret
mov
dec
push
mov
cwtl
jb
sbbl
xor
sbb
aad
movsb
cmp
mov
addr16
and
mov
pop
cltd
out
aam
in
lret
dec
std
mov
cmp
xchg
pop
add
jo
inc
xchg
movsb
and
cmp
data16
inc
mov
out
push
xor
mov
or
jae
dec
test
dec
fstpl
xor
loope
push
push
repnz
sbb
fldenv
pop
sti
sbb
mulb
ljmp
repz
arpl
stc
insb
inc
mov
daa
mov
sub
lock
insb
dec
leave
lcall
jecxz
xchg
push
and
push
leave
das
popf
dec
sbb
sub
push
mov
jb
mov
xor
push
je
jmp
adc
pop
pop
cli
lea
xlat
add
and
dec
xchg
adc
inc
push
gs
cmp
add
roll
mov
addl
mov
fldenv
and
xor
hlt
scas
notl
add
or
in
sub
sbb
adc
xchg
mov
push
add
xchg
jmp
sub
adc
xchg
jmp
xchg
cmp
sbb
push
sub
shll
ror
and
fidivl
stos
push
sbb
lcall
mov
enter
inc
std
push
or
lea
addr16
cmp
jbe
xor
lds
dec
pop
cld
out
pop
push
rcl
imulb
sbb
ss
ja
push
push
mov
mov
mov
mov
xchg
inc
push
pop
repnz
inc
mov
and
jle
es
loope
mov
mov
in
mov
jp
repz
mov
xor
fnstenv
aam
jo
and
ficompl
jnp
scas
add
mov
out
std
mov
pop
jg
lret
mov
dec
push
mov
mov
mov
pop
fs
xchg
adc
outsb
cli
sbb
inc
sbb
cmpb
arpl
nop
push
inc
sbb
xchg
jnp
pushaw
sub
sbb
mov
jmp
push
sbb
cmpsb
cli
out
cmp
pusha
dec
fisubs
movsb
dec
mov
pop
fldl
inc
test
mov
add
mov
cmp
lock
fnstsw
shll
outsb
jecxz
push
in
mov
adc
rorb
imul
pop
divl
xchg
enter
sbb
leave
and
std
in
cmp
cmp
daa
jno
mov
cli
popf
jmp
sarl
jecxz
ss
lret
frstor
jae
cwtl
int
xor
adc
and
ret
pop
and
inc
ror
lods
cmp
lea
jno
insb
pop
mov
cmp
repnz
mov
repnz
out
jl
pop
test
cmp
pop
jp
jo
jg
fstpl
jecxz
stc
cli
je
les
cmc
inc
pop
xor
mov
jp
divl
pop
je
ror
push
mov
cmp
xchg
add
icebp
fwait
sub
mov
jns
mov
adc
mov
movsb
mov
fabs
aas
cmp
xchg
cwtl
lea
scas
adc
jno
imul
push
sbb
sbb
aad
scas
xor
cmp
cmp
pushf
cld
mov
mov
sub
test
mov
es
pop
cltd
and
xchg
scas
mov
mov
fldcw
sbb
jmp
aam
push
fwait
cwtl
push
push
sbb
test
mov
fidivl
iret
aas
sti
or
jnp
dec
test
scas
xchg
inc
jge
es
out
push
jecxz
outsb
enter
mov
pop
and
inc
shll
and
dec
push
push
mov
test
lcall
cmc
fstps
scas
and
add
and
adc
fisubrl
sbb
dec
add
mov
std
pop
adc
stos
je
repnz
lods
loop
jns
or
lahf
lcall
pause
jle
xor
sbb
cmp
push
enter
add
xor
push
adc
arpl
orl
xor
inc
jne
add
xchg
iret
cmp
cmp
sbb
fcomps
adc
int
push
jb
pop
cmp
enter
dec
lock
ret
scas
cmc
repnz
movsl
pushf
mov
lret
ret
mov
adc
fnsave
xchg
stc
shll
mov
call
lahf
stos
cmp
fwait
hlt
cwtl
inc
push
imul
addr16
enter
inc
mov
mov
js
mov
popa
sub
aas
scas
push
adc
cmp
dec
dec
stc
jmp
add
lds
pop
pop
faddl
pop
mov
jg
psrld
stos
jo
or
pop
fdivl
xchg
cli
mov
icebp
inc
and
rorl
daa
pusha
and
xchg
roll
push
mov
adc
outsb
push
nop
xchg
sbb
inc
es
testb
lods
add
mov
jp
lret
fldl
bound
sarl
inc
cmp
ljmp
xlat
mov
push
aas
add
sbb
mov
sbb
pop
xchg
pop
add
pop
lahf
cmpsl
imul
dec
popa
sub
xchg
lcall
sarb
jge
inc
push
dec
adc
inc
adc
and
aaa
test
sbb
in
pusha
jle
fwait
and
mov
sahf
aaa
lock
and
jmp
insb
gs
cld
das
adc
pop
jge
mov
or
aaa
push
aas
xchg
lret
push
xor
imul
outsb
and
addb
or
fcmovne
mov
ljmp
jmp
inc
inc
nop
int
sub
sub
inc
mov
ljmp
ds
orl
add
insl
cmpsb
xchg
mov
out
test
push
or
sub
test
sub
loop
stos
pop
scas
in
mov
sbb
mov
lcall
loopne
mov
mov
mov
dec
mov
clc
movsl
jne
push
pusha
xchg
mov
push
sub
sbb
and
mov
jo
rcll
ja
jmp
fadds
faddl
push
fmul
jnp
push
dec
mov
aaa
or
in
sbb
add
cmpsl
and
sub
shll
sub
add
stos
jnp
cmpsl
cld
incl
je
lods
push
outsl
and
sub
adc
loopne
inc
push
mov
xor
jge
pushf
iret
sbb
cld
push
rorb
test
inc
mov
cmp
sbb
mov
or
or
sbb
push
jl
je
pushf
movsl
and
xchg
mov
ja
mov
push
adc
pop
push
jg
lret
pusha
jns
mov
mov
je
lret
mov
inc
ret
stc
xor
cmp
test
cmpb
pcmpeqb
cltd
call
and
inc
pop
and
jge
imul
in
inc
lea
push
mov
stos
cmp
pushf
dec
out
and
or
dec
daa
stos
xchg
mov
mov
jl
jo
mov
sub
stc
pusha
outsl
fsubs
and
stc
xchg
push
xor
cld
aad
mov
pop
int
mov
xchg
dec
lods
faddl
xchg
loope
repz
cmp
mov
aad
cmp
jae
rcl
mov
push
push
and
ret
cmp
fiaddl
in
mov
test
sub
aam
mov
rclb
enter
mov
xchg
push
dec
test
ret
jne
cld
stos
and
xor
xor
mov
js
movsb
in
ss
mov
int
push
mov
stos
mov
mov
jle
xchg
mov
imul
sub
jnp
lret
cwtl
xlat
jp
add
add
and
xchg
and
cmp
sbb
in
mov
mov
shrl
mov
mov
lds
fisubs
movsb
pop
sub
inc
jno
lds
test
mov
cmp
dec
add
and
je
lock
mov
sarb
test
cmp
imul
sarl
jmp
mov
aas
mov
mov
and
popf
cmp
adc
out
test
out
mov
adc
pop
mov
or
jnp
fstps
fdivrl
lock
xor
daa
out
gs
pop
fwait
xor
xchg
in
sahf
or
decb
xor
inc
jmp
lods
in
ja
ss
sahf
sub
arpl
imul
mov
dec
cli
outsl
xchg
jmp
sbbb
ljmp
in
psadbw
cmp
mov
ja
adc
or
shr
mov
int3
mov
jb
jnp
cwtl
xchg
sub
or
insl
outsb
mov
adc
aad
ret
push
inc
call
inc
addr16
jg
rcll
jecxz
mov
movsb
sbb
add
leave
cld
pop
ss
and
ss
xchg
ret
ja
mov
jb
push
fimuls
mov
sbb
cmp
mov
shrb
sub
pop
add
jmp
mov
push
dec
mov
stc
das
or
sbb
xchg
out
sub
fcmovu
or
test
sub
cmp
cmc
popf
mov
add
fbld
pop
add
push
insb
pop
jb
leave
or
lret
xchg
push
setnp
mov
cmp
repnz
mov
and
lret
repz
mov
or
dec
cmpsb
stc
and
jb
pushl
xor
sbb
cmp
inc
out
mov
fs
shl
or
adc
adc
ss
es
cmp
add
out
icebp
xchg
inc
leave
cmp
jb,pt
xchg
fdivrp
sbbb
clc
add
cli
mov
shlb
cld
idivb
je
stos
xlat
or
lcall
inc
jbe
leave
add
and
mov
inc
shrb
cwtl
andl
xlat
out
lret
int
in
adc
pop
cli
sub
push
jo
ja
mov
push
adc
in
and
lret
jle
ja
cmc
das
jno
pop
leave
jb
pop
push
mov
or
xchg
adc
fdivs
sbb
shrl
dec
inc
shrl
ja
mov
pop
push
pusha
dec
push
out
fbstp
data16
rcr
jbe
lods
sub
inc
arpl
gs
sub
jge
sbb
aam
mov
movsb
sarl
cmc
fistl
jnp
cmc
repz
out
fists
cmc
daa
sbb
test
lock
pop
cmp
out
insl
xor
push
pop
push
popf
push
push
adc
push
mov
cld
in
sahf
sbb
lcall
pop
jae
xchg
sbbb
mov
mov
mov
push
xor
or
clc
call
lods
jae
push
xchg
push
adc
cwtl
lret
cmp
js
sbb
xchg
fwait
pop
mov
imul
loope
sub
cmp
mov
je
mov
jns
fldenv
dec
test
jmp
sbb
push
or
adc
sbb
out
and
mov
xchg
jbe
cs
ffreep
cmp
add
lcall
mull
mov
mov
dec
and
jne
in
mov
mov
mov
inc
inc
dec
jge
lret
dec
mov
sub
jnp
xchg
inc
les
add
mov
mov
inc
scas
xchg
sbb
aas
mov
mov
mov
lret
fsubr
lock
mov
xchg
cli
jge
push
lock
rolb
mov
xlat
push
sub
adc
mov
fninit
in
movsl
adc
call
test
ja
dec
fwait
test
popa
pop
jnp
lret
or
leave
mov
fwait
data16
mov
adc
sub
shr
pop
cld
mov
sub
stos
sahf
inc
sub
fcompl
adc
and
add
jp
mov
lock
cs
stc
mov
inc
jge
xchg
sub
rcll
scas
in
imull
es
shrb
add
lods
xor
or
addr16
pop
xor
inc
cmp
imul
mov
pop
dec
inc
cmp
push
clc
adc
imul
mov
rolb
sbb
push
inc
shl
mov
mov
sbb
inc
pop
cmc
jecxz
push
sbb
test
sbb
lds
aas
mov
or
xchg
adc
scas
mov
pop
fidivrl
shl
push
rorb
fstp
test
into
jb
jae
inc
es
jge,pt
lret
mov
call
mov
inc
push
popa
jecxz
jmp
into
les
mov
mov
cwtl
mov
push
or
push
push
push
xchg
movq
fiadds
push
mov
outsl
sarb
addr16
adc
out
andb
test
adc
jecxz
repz
mov
cli
in
jo
fcoms
ret
push
push
mov
mov
into
test
inc
add
cld
rolb
dec
mov
aas
flds
and
incl
pop
add
lods
test
ret
push
mov
sbb
push
sarl
push
call
pusha
in
test
xchg
xor
dec
mov
aas
inc
xchg
jle
xchg
bound
out
cwtl
and
add
fsts
xor
jmp
gs
cltd
test
adc
movsb
or
and
in
lahf
sti
hlt
js
push
shrb
fisubrs
cs
test
mov
ss
jb
ret
and
push
repz
std
in
pop
sub
mov
in
xchg
fcompl
ret
mov
jae
cmc
test
and
push
sti
cli
gs
push
shrb
mov
dec
inc
sub
iretw
inc
loop
cmovb
xlat
pusha
cwtl
sbb
popa
jne
aad
and
mov
mov
mov
mov
pop
rol
inc
mov
inc
push
or
inc
xor
and
mov
or
mov
stc
push
js
lock
or
sub
lods
in
pop
pop
std
pop
aad
out
xchg
mov
mov
cmp
dec
insb
in
lods
mov
add
lds
add
push
push
cmp
sti
addl
sub
or
push
lods
cltd
ret
mov
cmp
icebp
adc
mov
inc
push
adc
mov
and
fstpt
push
pop
inc
mov
dec
out
arpl
sub
sahf
push
cwtl
adc
sub
push
test
pop
mov
iret
movsb
iret
cltd
mov
pop
and
mov
fisubrs
add
stos
or
pushf
adc
out
xchg
sub
sbb
mov
cmp
sbb
ffreep
mov
int3
pusha
les
adc
mov
dec
mov
mov
jne
jp
push
iret
fisttpll
faddl
bswap
arpl
mov
scas
ds
arpl
scas
push
js
mov
push
and
sar
pop
outsb
push
lcall
data16
cmc
mov
adc
push
cmp
call
dec
dec
loop
cmc
jo
inc
outsb
aam
pop
xchg
push
sbb
addr16
fists
int
push
sbb
jl
loopne
leave
mov
out
jl
inc
ret
aas
mov
xchg
inc
dec
dec
roll
or
daa
daa
xor
aas
cs
mov
pop
xchg
push
shlb
dec
or
add
imul
xor
fdivrp
je
mov
jg
sub
mov
in
xchg
push
es
clc
cs
negl
or
shll
mov
mov
jae
and
out
jb
cltd
sbb
jbe
cmc
es
push
js
pop
pop
lea
ret
inc
lods
add
insl
mov
out
dec
in
mov
out
pop
mov
in
imul
adc
leave
push
jl
jnp
fldl
aas
push
mov
lock
je
jbe
and
lods
push
xchg
movsb
outsl
in
dec
lock
es
inc
push
adc
or
adcl
leave
push
push
fdivs
adc
xchg
out
mov
inc
inc
fisttps
pop
pop
dec
nop
fwait
daa
leave
push
mov
dec
jbe
push
hlt
sub
push
xchg
addps
push
xchg
mov
pusha
mov
cwtl
out
mov
adc
jo
adc
push
dec
in
or
xchg
cwtl
imul
jne
aad
mov
xchg
sub
call
add
mov
int3
sbb
mov
popf
cmp
loopne
jbe
cmp
jl
or
pop
jnp
rclb
xor
adc
pop
incl
adc
hlt
mov
push
aaa
push
or
aaa
into
jno
insb
cld
sbb
xchg
xchg
rcr
pop
movlps
cltd
dec
out
jg
shll
or
cmp
jge
ret
add
addl
mov
jb
and
mov
es
jns
test
add
adc
stos
add
mov
jb
jecxz
arpl
popf
mov
adc
xor
adc
jbe
or
insl
int3
cmp
or
mov
lret
jle
add
test
out
xor
movsl
cmp
lds
and
hlt
push
push
dec
cmp
push
mov
loop
pushf
dec
xchg
push
aam
js
pop
adc
adc
test
imul
imul
or
and
outsl
xchg
fs
in
inc
ljmp
jg
and
ror
sbb
cmp
jb
lret
mov
mov
sti
repz
add
mov
js
push
add
or
xchg
bound
stos
scas
mov
ret
and
push
fucomi
test
fsubl
popl
roll
cld
out
mov
loopne
add
mov
xor
pop
inc
ljmp
scas
loopne
add
mov
pop
xlat
int3
lock
cli
std
stc
mov
aad
mov
int3
inc
fwait
test
push
dec
mov
shlb
mov
aas
enter
loopne
sbb
lods
adc
xchg
test
pop
mov
in
xor
lock
xorb
sub
lods
imul
in
push
in
pop
aam
xor
gs
mov
out
imul
inc
push
and
aad
xor
lahf
inc
jno
cmpsl
daa
adc
in
inc
sub
inc
push
gs
jae
mov
sub
push
xchg
xor
out
xchg
out
jg
xchg
sub
inc
ret
sbb
cmp
push
sbb
push
mov
mov
leave
push
mov
cmc
int3
push
cmp
hlt
mov
xchg
xor
fwait
lahf
xchg
xorl
sbb
mov
ret
test
outsb
mulb
lahf
outsl
and
test
pushl
dec
ror
add
fcoms
aad
insl
pop
sub
sub
mov
mov
insl
xor
jmp
int
andl
sub
nop
inc
imul
clc
daa
adc
out
mov
enter
lock
repz
xor
fildll
xor
mov
int3
xor
pushf
jg
mov
and
icebp
lret
dec
loope
clc
out
fadds
add
ja
jae
in
jmp
xchg
push
aas
and
ds
mov
pop
fwait
ss
pop
cmpsl
inc
lahf
hlt
sbb
stos
push
cwtl
mov
cvtps2pi
pop
xor
in
inc
shlb
push
clc
xor
push
or
mov
add
mov
or
mov
jno
and
movsl
out
adc
jge
mov
sbb
sub
ss
icebp
gs
pop
aas
or
ss
mov
repz
mov
and
mov
das
mov
fmull
testb
inc
imul
dec
sub
push
pop
mov
lahf
and
out
sbb
aas
leave
mov
rcll
cs
push
sahf
aam
dec
push
cld
out
pop
push
gs
xlat
mov
cmp
sbb
cli
cmovae
add
out
outsl
std
cmc
arpl
test
or
shll
ja
jle
jp
and
adc
test
jae
dec
iret
mov
scas
inc
sub
inc
andb
lcall
inc
jg
push
sbb
sbb
in
adc
add
pusha
repnz
test
mov
cmpb
movsb
sbb
push
push
lret
dec
and
sub
jbe
movzwl
cmp
in
addr16
push
out
stc
ss
push
bndstx
sub
imul
xor
fs
sbb
frstor
xchg
jmp
lea
es
adc
jae
cmp
dec
mov
or
mov
xor
ja
in
pop
xchg
push
dec
sub
push
jmp
cmp
inc
aad
dec
xrelease
mov
pop
sub
loop
test
jmp
ret
into
mov
clc
cli
inc
sub
es
add
mov
mov
pop
ficompl
aaa
in
mov
inc
or
icebp
push
add
clc
cmp
cltd
cmp
jge
hlt
insb
movsb
adc
jnp
jns
mov
lock
jo
mov
shlb
fbstp
add
lea
jno
xor
inc
lods
je
hlt
fs
shrb
mov
mov
loopne
cmp
aad
clc
lahf
roll
xor
inc
and
jg
jp
not
in
push
ljmp
dec
pop
enter
mov
flds
jae
inc
cmpsb
mov
in
lret
stos
add
fwait
push
push
pop
inc
aad
xlat
jb
add
aas
jecxz
stos
lds
push
test
adc
ficompl
or
shrb
pusha
enter
xchg
xor
rorb
and
add
fucompp
adc
repnz
xchg
adc
and
xchg
adc
in
stc
jle
mov
shlb
popa
and
pop
ljmp
and
inc
xor
mov
mov
and
cmc
mov
pop
dec
mov
popf
jns
cltd
ds
lahf
arpl
orb
in
ffree
push
arpl
int
xchg
xchg
test
icebp
jl
push
cmp
icebp
pop
mov
jb
sahf
inc
sbb
aad
loopne
push
es
jb
mov
addb
mov
into
loop
cmp
xlat
cmp
clc
sub
xchg
ja
jnp
xor
jmp
rcr
rol
and
lock
adc
ret
test
mov
sub
and
loopne
out
shrb
std
aad
sbb
xlat
pusha
in
jp
aas
in
xchg
pushf
cmpb
xor
clc
adc
roll
loop
push
cmp
pop
and
decb
ss
rcl
mov
xor
stos
cmp
sub
pop
xchg
cmpb
iret
cli
mov
and
jl
or
xor
test
dec
adc
pop
mov
test
mov
pop
mov
sbb
inc
loop
inc
testb
std
loope
sub
pop
lods
sahf
cld
add
pop
push
lock
cmp
stos
pop
mov
outsl
jae
fisttps
jo
xor
push
movsb
or
sub
cwtl
inc
and
test
dec
icebp
xchg
and
aad
pop
out
and
xlat
push
test
and
mov
add
out
inc
inc
cli
lea
sub
xchg
mov
dec
hlt
mov
mov
outsb
xor
and
pop
fcmovne
or
jo
ljmp
lock
idivb
lcall
fildll
and
mov
lcall
fidivrs
je
mov
jmp
adc
and
pop
inc
sbb
jns
call
or
into
cmp
imul
mov
and
cmp
cmovnp
sbb
add
dec
iret
jg
aad
and
fstl
cmp
arpl
loopnew
lcall
ret
fwait
mov
out
sti
fisttpl
out
cli
xchg
mov
jae
movsbl
js
mov
cmpsb
pop
repnz
pop
fcmovnu
jno
pop
sbb
xchg
jle
ja
cmp
jecxz
rol
add
cmp
popa
sahf
xchg
stc
jns
jae
pop
adc
jno
movsl
mov
mov
sbb
data16
outsb
jmp
jbe
xchg
add
inc
inc
loopne
mov
fs
xchg
mov
addr16
jno
xor
pop
sbb
mov
xchg
jl
lret
int
adc
ds
cmpl
scas
xchg
ja
push
and
mov
lret
cmpsl
dec
and
subb
pusha
sbb
dec
xor
loopne
stos
jo
mov
sbbb
xor
cmp
mov
pop
and
xchg
or
js
pop
cltd
jbe
int3
jae
push
inc
fdiv
inc
insl
lods
das
mov
sub
cs
out
aam
or
add
aam
iret
jae
cmp
mov
dec
sub
fsts
xor
cmp
mov
xor
inc
insl
testl
sub
shll
aas
ja
imul
mov
mov
outsl
fldt
mov
cmp
adc
idivl
sbb
add
int
adc
pop
pushf
add
sub
pop
or
rorb
ja
jb
gs
mov
xchg
repz
pop
ds
or
mov
sub
andl
mov
loop
test
adc
in
int3
aaa
and
aad
data16
push
pop
jp
addr16
add
inc
and
xor
in
call
jmp
sub
iret
outsb
roll
popf
mov
mov
ficoml
sbb
xor
ss
xor
pop
mov
pushl
mov
outsl
mov
test
adc
test
inc
push
cmp
mov
sahf
cmp
repz
cld
push
lret
xor
mov
add
jl
cwtl
mov
mov
pop
adc
icebp
aaa
repnz
movsl
push
nop
inc
and
xor
xchg
xchg
or
aas
pusha
dec
jmp
imul
addl
jb
mov
inc
dec
lret
sub
xchg
or
lret
fadds
ds
jg
daa
pop
fnstenv
lret
fsubr
cmc
push
dec
out
mov
adc
inc
inc
sbb
inc
inc
jne
shr
ja
inc
popf
mov
pop
xchg
mov
outsl
stc
mov
bound
and
pop
push
push
mov
loopne
push
std
jmp
jnp
or
and
sbb
push
xchg
imul
insb
aam
pusha
dec
jmp
push
sarb
outsl
xchg
xchg
or
mov
cltd
les
lods
or
repnz
xchg
mov
jb
fbld
dec
pop
bound
loope
add
add
adc
inc
scas
aaa
sub
dec
add
imul
pushl
jge
or
inc
jp
jg
mov
push
scas
loop
cmp
insb
inc
xor
inc
and
dec
es
aam
or
and
inc
mov
data16
ret
or
xchg
xor
pop
mov
sub
scas
xor
popf
cmc
jge
inc
dec
inc
dec
stc
ficomps
pushf
pop
jmp
fidivrs
rclb
inc
jg
xor
cmp
jnp
leave
pop
and
jae
imul
push
inc
mov
cwtl
int
sar
and
loopne
mov
dec
sbb
and
push
mov
mov
clc
outsb
push
jae
mov
cwtl
out
pop
mov
stos
lods
pusha
ror
cld
or
pop
ret
or
sbb
cmp
ret
mov
out
push
subl
xor
scas
xor
pop
jecxz
xchg
aas
shrl
cmp
leave
push
rorb
es
in
dec
lods
outsb
pop
shl
repz
jecxz
in
mov
lret
jp
xchg
jmp
xor
mov
pop
add
mov
mov
fnstenv
mov
sbb
das
iret
mov
int
fmuls
push
dec
in
add
sbb
mov
ss
xor
or
cli
inc
or
leave
aas
push
xchg
popa
dec
push
add
ficoms
push
hlt
aam
clc
push
add
in
sbb
mov
mov
cld
push
inc
les
sti
lock
ud0
and
or
call
ljmp
sub
jb
inc
sahf
mov
imul
push
sarb
mov
das
xchg
adc
fldcw
addr16
insb
inc
add
mov
xchg
outsb
aas
cwtl
std
div
and
hlt
adc
adc
add
into
ss
lret
adc
xchg
out
imul
and
insl
pop
inc
mov
dec
inc
rclb
js
or
adc
dec
and
ror
push
int
mov
adc
out
gs
adc
jle
push
add
mov
in
fidivrl
nop
stos
adc
lock
and
jl
cmp
repnz
mov
ds
pop
fnsave
or
loopne
stos
pop
mov
ss
cmp
cli
jge
dec
fsts
push
insb
inc
xor
xor
push
sbb
xor
jns
jle
repz
cmc
jecxz
mov
sub
lret
negb
rorb
pop
pop
cmpsb
xchg
jmp
jge
pop
aam
push
bnd
out
push
sbb
xor
lea
pop
cmpsb
mov
jecxz
or
sub
add
xor
mov
aaa
loope
scas
popf
scas
sub
sahf
fs
lcall
sbb
jge
mov
cmpsb
jne
cmp
adc
xchg
pop
ljmp
lods
test
test
push
adc
pop
int3
in
popf
inc
jae
mov
sarl
pop
adc
fsts
es
push
aam
scas
xchg
and
into
xchg
lret
pushf
xorb
inc
mov
dec
mov
mov
jle
nop
add
loopne
std
inc
push
push
sbb
in
cmp
insb
pop
push
dec
sbb
pop
jbe
inc
arpl
test
repnz
push
stos
cmp
sub
push
adc
pop
dec
xor
mov
xlat
stc
jmp
or
mov
or
xlat
dec
dec
or
movsb
jne
mov
repz
pop
pusha
add
mov
cmpsb
pop
cmp
jge
mov
jle
pop
mov
aam
pop
adc
ret
loope
or
lcall
or
sbb
bound
lock
xchg
insl
sbb
lret
or
mov
mov
pusha
push
add
stc
cld
dec
dec
inc
loop
in
sbb
mov
pop
add
dec
dec
imul
jbe
jnp
cltd
es
pop
popf
jo
dec
xchg
jl
dec
out
push
xchg
mov
out
pop
push
and
pusha
loop
mov
xchg
dec
pop
daa
mov
leave
mov
push
pop
add
push
jo
push
pop
xchg
dec
sahf
test
pop
sub
popa
mov
shl
ds
or
push
aaa
popl
je
inc
xor
cmpsl
or
pop
sbb
pop
inc
testb
loopne
popf
xor
mov
jnp
cmc
out
andl
jmp
xor
jmp
cmpsb
pop
pop
sbb
lea
mov
nop
pusha
cwtl
call
mov
out
jmp
or
dec
mov
add
xchg
test
pop
les
subb
sub
pop
pop
pop
in
mov
loopne
mov
sar
xchg
mov
sub
lock
inc
dec
shlb
popf
iret
push
addl
add
mov
and
pop
sub
push
mov
sbb
push
push
mov
jl
cld
push
stos
stc
dec
addr16
inc
mov
sub
into
mov
popf
imul
fcmovb
adc
cmp
insb
js
adc
xorl
pop
inc
sub
stc
cmovge
lock
les
jne
lods
cmpsb
fcom
mov
sbb
adc
push
sub
mov
jl
fnsave
mov
repnz
negl
lds
arpl
insl
lret
push
add
dec
mov
insl
lahf
xchg
sub
pusha
lds
cld
sbb
ret
pop
ds
les
arpl
xor
scas
inc
pop
daa
mov
xor
and
dec
in
stos
popa
pop
dec
mov
test
xchg
jno
mov
mov
gs
sub
sub
fldcw
jl
cmp
push
jno
push
test
das
jge
mov
inc
lock
xchg
jecxz
sbb
ret
dec
sbb
fs
pop
sub
cmc
cmp
roll
jecxz
pop
xor
cltd
pushf
pop
gs
add
cmpsb
jp
jbe
pop
adc
or
aad
pusha
icebp
repnz
out
lea
xchg
lahf
sub
popa
outsl
mov
jno
cmp
sbb
sbb
pop
sbb
push
or
rclb
push
les
lahf
xor
gs
ret
mov
mov
andl
mov
xchg
or
mov
xorb
pushf
mov
push
add
xlat
rolb
xlat
xor
js
loope
and
or
inc
aad
lods
dec
js
mov
pop
or
pushf
fucomip
cmpsl
dec
ja
shrl
insl
pop
jle
jp
cmp
xor
mov
cmp
stos
xchg
out
pop
icebp
fisubrs
fisttps
adc
stos
mov
imul
lods
dec
clc
push
or
xor
mov
push
mov
addb
orl
bound
outsb
sub
push
icebp
xlat
clc
or
lret
fmull
mov
dec
in
and
adc
dec
mov
mov
movsb
xchg
jo
mov
rclb
imul
shrl
fcoms
xor
movsl
push
imul
pop
sbb
xor
and
pop
sbb
subb
scas
ret
or
stos
imul
sub
push
cwtl
push
lds
dec
cmp
push
pop
pop
cmp
ja
in
ja
ret
arpl
sbb
sarb
mov
jl
lahf
sbbl
or
popa
push
push
dec
test
ja
sub
ss
cs
push
or
stos
dec
imul
xor
xchg
ds
js
fisttpl
cmc
mov
add
out
push
flds
or
ret
and
loope
in
shr
cs
xor
aaa
xchg
clc
dec
pop
stos
je
fsubl
rclb
ret
daa
inc
lcall
outsb
inc
jle
mov
sbb
shlb
mov
dec
push
jb
popf
cltd
jle
lret
cmp
ljmp
pop
lcall
xchg
fs
dec
shrb
adc
sub
xchg
mov
ljmp
rolb
mov
shrb
inc
jle
lcall
fcomps
jl
jbe
mov
and
push
cld
rorl
mov
jns
shll
repz
inc
aad
adc
xchg
in
jb
xor
xlat
lds
jge
dec
dec
lret
inc
lods
pop
dec
or
fs
pop
sub
xchg
push
stos
pop
inc
out
mov
sub
add
lahf
pushf
mov
inc
das
mov
jns
push
outsb
xchg
adc
cmpsb
xchg
jnp
fsubs
push
mov
into
adc
mov
dec
iret
jo
add
loope
mov
insb
call
insl
test
and
and
jbe
jg
mov
aam
popa
add
adc
hlt
lahf
arpl
fadds
int3
mov
jo
add
pop
pop
lcall
cs
leave
ret
call
pop
xchg
mov
rcrb
cltd
bound
lods
jg
subb
mov
insb
push
cld
cmp
es
jns
lret
or
arpl
mov
sti
sub
jo
shlb
testl
or
lds
and
icebp
pop
jg
inc
sub
and
cwtl
add
sbb
fsub
jmp
mov
mov
sbb
and
loope
loop
xor
leave
dec
ds
cli
inc
sbb
call
xor
gs
jnp
ret
push
jmp
movl
xchg
test
and
les
stc
mov
repz
fists
lcall
js
xor
dec
dec
sub
je
cmp
pop
jle
cmpsl
cwtl
xchg
lret
jl
sahf
mov
jns
lret
jle
loop
xchg
clc
mov
subl
inc
mov
lahf
bound
stos
xchg
mov
test
push
fcmovne
aad
cmp
or
pop
cltd
add
mov
fidivl
hlt
xlat
gs
test
and
mov
dec
in
out
or
xchg
and
adc
cwtl
or
ret
push
test
sub
ljmp
adc
jo
jmp
mov
push
dec
setg
test
pop
ds
cli
comiss
sub
mov
sub
pop
loope
imul
test
shlb
add
dec
add
dec
dec
in
fmul
imul
mov
xor
push
scas
push
shll
lock
fwait
mov
add
ja
fildl
nop
xchg
pop
inc
dec
mov
fistpll
insl
push
jmp
inc
das
mov
pushf
inc
mov
ret
lahf
cmp
mov
cmp
test
js
test
loope
push
fstps
jl
mov
js
fisttpl
xor
std
adc
ss
inc
cs
and
scas
arpl
cmp
pop
or
or
cs
ja
pop
dec
cltd
sbb
push
scas
fwait
popa
frstor
jo
dec
sbb
inc
out
sahf
negl
inc
inc
adc
add
lret
pusha
ja
push
mov
cmpsb
cmp
push
jl
lods
and
sti
jne
fcompl
das
in
mov
dec
test
or
dec
loop
lahf
gs
int3
dec
ret
lret
cmpsb
loopne
and
cmpsb
inc
lods
sbb
dec
push
ds
inc
xchg
push
add
bound
loope
dec
push
xor
shr
lock
out
inc
lods
xchg
dec
xchg
in
popa
jo
pop
mov
fs
mov
mov
ljmp
lcall
fisttpll
push
cld
mov
sbb
cmp
or
cmp
outsb
cmova
or
pop
aaa
scas
or
mov
or
or
or
int3
inc
cmc
adcb
pushf
sub
cmp
mov
dec
jl
dec
xchg
cld
inc
shlb
xchg
out
movsb
jge
pop
test
lock
push
incb
ljmp
sbb
subb
adc
and
push
imul
aas
push
inc
mov
stos
std
xchg
repnz
imull
loop
and
xor
jle
mov
outsb
lcall
xchg
in
mov
pop
mov
fiadds
fsts
imul
xor
scas
pop
repnz
add
lods
cltd
mov
shr
in
push
ret
mov
mov
inc
dec
data16
loopw
aam
push
fldenv
cmc
mov
enter
dec
mov
inc
sbb
jbe
in
in
gs
and
fs
dec
pop
int
sbb
dec
shl
test
test
pop
jmp
scas
int
cld
loop
dec
cmp
push
mov
iret
pop
in
lods
sbb
push
or
xor
popa
aas
jne
cmp
loope
je
test
int
push
or
jne
or
call
lods
dec
sub
shlb
outsl
dec
xchg
std
sub
mov
and
push
inc
sub
sbb
insb
das
inc
and
sub
cs
or
pop
mov
pop
push
adc
cmc
push
sbb
sub
lock
mov
or
js
mov
dec
cmp
sahf
pop
cmp
adcl
mov
aad
pop
fdivs
dec
divl
or
or
cli
cld
fsubrl
aas
sub
loope
cmpsb
push
or
jnp
in
daa
jp
cmpsl
sub
lret
jl
pop
mov
cmc
jnp
lcall
and
mov
mov
jne
and
cmp
data16
and
jmp
sarl
add
pusha
call
mov
ss
adc
fdivrs
cs
inc
pusha
leave
fs
cmp
jge
inc
stos
and
stc
xor
sub
sub
xorl
dec
mov
mov
mov
xor
leave
leave
xchg
mov
iret
sub
mov
rcrb
lods
and
scas
cmp
and
sbb
enter
mov
mov
imul
jae
add
jns
loop
jmp
pop
cmp
subb
rcrl
mov
loope
fwait
inc
dec
ja
test
sub
or
sub
cltd
pmaddwd
push
cmc
mov
xchg
push
or
adc
les
cld
rol
stc
xchg
or
scas
adc
mov
iret
jae
loop
mov
data16
negl
pop
shlb
pop
in
cmp
xchg
dec
bound
add
das
cmp
adc
xchg
fsubrl
sbb
inc
test
jecxz
lock
adc
or
jmp
push
hlt
push
xor
ja
int3
out
cmpb
cmpsl
ljmp
fsubs
mov
in
shlb
mov
xchg
popa
mov
inc
cwtl
in
ds
cli
enter
sbb
sbb
bnd
shrb
mov
sbb
sub
xlat
mov
divb
sub
cli
repz
jg
ficompl
adc
fmuls
sahf
rcr
add
mov
out
mov
lock
pop
pop
jbe
jbe
push
in
andl
inc
push
sti
outsl
stos
les
dec
addr16
jle
pop
loop
mov
add
divl
loope
clc
ret
icebp
xor
xchg
jmp
add
fmull
lea
adc
xchg
inc
mov
fst
inc
pop
loop
and
adc
sbb
nop
test
gs
ds
inc
scas
push
out
jno
mov
std
add
fwait
js
lahf
bound
leave
mov
jbe
mov
cmp
sub
lods
into
insb
pop
fdivrl
lahf
xlat
iret
sbb
stc
mov
jle
lods
loope
scas
cmpsl
push
mov
fwait
adc
sub
test
xor
push
das
clc
in
fs
fistpl
jnp
subb
scas
out
sub
mov
cwtl
test
notb
push
imul
repz
sub
fs
lcall
xchg
andl
lret
pop
clc
cmp
xor
dec
and
stc
dec
and
pop
cmp
or
testl
cmpl
pusha
subl
popa
dec
mov
xor
and
mov
jb
push
pop
adc
adc
pop
flds
inc
sbb
mov
mov
cmp
leave
pop
or
mov
adc
ss
and
out
pop
xchg
or
addr16
sub
add
bound
mov
cld
shrb
popa
pop
mov
rorl
test
and
je
call
test
lods
shlb
or
fs
mov
lds
mov
into
mov
jecxz
xor
push
cmpsl
dec
cld
fistpll
loop
fnsave
mov
movsb
call
ds
fisttpll
inc
xor
mov
xor
mov
faddl
cld
and
or
cmp
mov
push
lds
sub
ss
add
dec
sub
push
dec
add
mov
and
xchg
insb
in
fcompl
call
add
mov
jnp
add
push
pop
jns
push
jae
mov
mov
sub
mov
popf
jmp
and
push
js
inc
repz
lods
mov
int
stc
jo
xor
outsl
mov
test
cmp
xchg
mov
xor
and
imul
cmp
mov
ficoms
jmp
or
lahf
andb
inc
cld
enter
dec
push
clc
mov
rcll
out
nop
test
mov
insl
cmp
or
stos
pop
sbb
ss
test
pop
jecxz
into
xor
add
mov
insl
aad
sub
dec
mov
xor
adc
das
lcall
and
ret
push
jg
int
dec
cltd
fidivrs
xor
pop
sbb
inc
jae
stos
in
ret
repz
jno
xchg
les
jnp
shll
fs
lsl
pop
jno
fs
out
jle
push
jecxz
adc
loope
or
sbb
sar
outsl
cmpsl
pop
sbb
fstl
ds
jns
sahf
push
mov
pusha
lahf
inc
leave
idiv
cld
pop
fldcw
outsb
xorb
fnstenv
mov
mov
push
dec
outsb
ja
test
sbb
iret
aam
std
rep
out
scas
fiadds
jecxz
jmp
adc
ret
add
cmp
ja
rcrl
jne
sub
jbe
insl
push
sub
imul
push
dec
mov
dec
mov
movsb
xchg
shl
lock
push
jmp
sbb
and
iret
movsl
push
cmpsb
sbb
jle
and
xchg
lods
cmovp
movsl
hlt
rcr
xor
mov
and
insl
out
xor
and
shr
inc
punpcklwd
repz
fcoml
pop
push
lret
scas
mov
int3
mov
or
mov
std
mov
cmp
sub
arpl
push
jnp
mov
in
out
orb
mov
pop
inc
outsl
fadd
jnp
pop
push
out
jle
mov
nop
int
fsub
out
lea
out
loope
pop
inc
mov
test
and
or
cmp
rorb
nop
mov
jecxz
outsb
push
les
call
shlb
xchg
pop
out
lahf
dec
add
rcl
mov
stos
xchg
sub
xchg
xchg
push
inc
lods
add
mov
dec
dec
add
inc
clc
xchg
loopne
inc
loope
push
xchg
adc
sbb
xor
cmpb
or
push
xchg
rclb
ret
inc
jne
outsb
inc
sbb
into
cli
cs
cmp
cmp
and
sti
xchg
inc
push
pop
lock
jae
dec
imul
push
sbb
shl
scas
out
rcll
mov
sub
jae,pt
lock
and
test
jge
inc
push
es
add
test
sti
adc
popf
test
mov
iret
and
cwtl
out
mov
push
ficoml
aas
sub
lcall
jp
ljmp
push
xchg
cvtdq2ps
js
imul
push
push
xchg
and
mov
xchg
jmp
xor
pushf
mov
xchg
pop
mov
dec
xor
xor
in
mov
push
cltd
int
lahf
cmp
add
rcrb
push
arpl
fisttpll
and
sub
ret
push
xchg
mov
test
push
mov
jnp
or
flds
cltd
and
in
pop
jmp
call
mov
and
in
sbb
shrb
ja
in
or
xor
shrl
and
mov
dec
push
jge
sbb
inc
bound
dec
mov
push
int3
int3
es
dec
test
lcall
iret
jge
sub
add
ret
hlt
fadds
jno
sbb
dec
test
jl
mov
fsub
lret
adc
divb
sbb
ds
and
sub
enter
push
arpl
rcll
mov
fcmovu
outsb
sahf
sub
das
das
sub
mov
and
push
or
out
cmp
es
ss
jecxz
mov
int3
test
popa
imul
push
test
jmp
jbe
fisubrs
jge
pmaxub
adc
or
icebp
jge
xchg
loope
mov
in
or
xor
sub
mov
pop
dec
in
cld
inc
jge
mov
pop
sub
push
mov
mov
add
sub
gs
lods
inc
mov
loope
fst
jo
cmpsl
scas
out
and
inc
sbb
push
dec
lcall
je
movsl
mov
dec
test
xchg
pop
sarl
mov
in
mov
and
imul
pop
pusha
mov
and
or
test
or
jno
imul
pop
iret
ss
mov
mov
push
jp
repz
dec
idiv
movsb
or
lds
mov
pop
add
mov
mov
popa
cmpsb
lret
xchg
stos
fxch
in
ror
inc
jno
adc
cmp
mov
mov
fimuls
add
andb
fdivp
pop
jle
ret
mov
sarb
and
mov
xlat
ja
dec
jmp
or
lahf
in
push
repz
cmp
lea
fnstsw
bnd
scas
test
xor
mov
xchg
rclb
in
lret
add
jge
add
mov
movsb
subb
testb
pop
fwait
cmpsl
inc
xorb
std
adc
mull
pop
dec
imul
xchg
stos
pusha
sbb
repnz
inc
daa
inc
ljmp
data16
pop
xchg
rolb
xor
int3
movsl
jo
push
fsts
imul
outsb
pop
roll
inc
jb
or
jne
xor
cmpsl
dec
xor
stos
int
cs
mov
dec
xchg
cltd
xchg
imul
mov
cmc
xlat
fisttpll
in
cli
pop
push
pop
push
jae
inc
cmp
push
lret
pop
adc
inc
push
shl
push
sbb
pop
sub
mov
cmpsb
adc
inc
jns
jns
adc
testb
fisubl
stc
dec
fidivs
stos
cwtl
mov
ljmp
or
jge
dec
push
rorb
cmp
int
bound
pop
out
adc
and
rcll
shrb
in
es
shr
cld
cmp
pusha
daa
dec
push
cmp
xchg
cld
decb
xchg
sbb
adc
push
dec
jns
pop
and
sti
mov
lret
mov
dec
insl
nop
out
xchg
test
loop
jns
repnz
test
xchg
dec
daa
cmp
push
test
push
sbb
insl
icebp
testb
fldenv
cmp
ret
dec
jg
rorl
mov
inc
lods
mov
or
int3
mov
pop
sub
das
jne
leave
mov
repz
mov
xor
mov
xchg
mov
or
and
mov
and
mov
inc
icebp
cmp
sbb
outsb
inc
mov
mov
inc
mov
xor
arpl
dec
out
push
dec
daa
lock
add
cmpl
hlt
cmp
out
mov
outsb
les
scas
leave
addr16
jp
mov
lret
aam
push
pop
fstpl
sub
xchg
push
js
stos
mov
movsl
scas
push
mov
lock
mov
addr16
inc
xor
cmp
popf
jl
sbb
notl
es
mov
fcoms
nop
jg
fstps
inc
inc
pushf
sahf
out
pusha
mov
dec
pop
pop
mov
popf
sti
loop
push
sbb
dec
ret
jno
imul
mov
xorb
aam
and
rcr
or
dec
xchg
xchg
clc
clc
add
or
pop
jne
sub
push
dec
adc
int3
mov
push
push
loop
pop
outsl
inc
sub
shl
cmpxchg
and
jne
out
inc
sbb
or
xchg
aam
psubsb
push
int
cmpsl
cmpsl
cs
adc
xorl
xchg
jp
ljmp
mov
xchg
sub
mov
sarb
shr
or
fstl
mov
fldl
inc
and
cmp
addl
xlat
and
out
cmpsl
jecxz
adc
mov
fstpl
cmp
xchg
and
push
lods
push
add
fidivrs
mov
adc
push
fs
add
dec
stos
or
lea
popa
cmp
in
pop
movsb
data16
test
cmp
bound
data16
fnstsw
in
xchg
fcmovb
adc
sbb
sub
arpl
adc
cmpsb
dec
and
ret
mov
and
or
pop
shll
out
sbb
lcall
cli
cmc
cs
push
cmp
dec
adc
sbb
add
mov
ret
mov
sub
or
jg
lods
loope
jns
int
inc
dec
push
add
jo
aas
stc
sar
cmp
mov
pop
lret
out
mov
jo
fwait
sub
fcmovbe
mov
xor
shll
or
or
add
cwtl
iret
push
adcl
cmp
xchg
daa
inc
push
sub
push
scas
xchg
aas
inc
fisubrl
and
sub
das
or
test
and
stos
outsb
std
dec
add
or
or
cmpsb
sbb
sub
cmc
in
int3
dec
pusha
or
lods
mov
push
iret
jbe
mov
xor
jns
fldcw
call
lods
xorb
fistpll
and
push
pop
xchg
push
sbb
add
repz
rolb
loopne
ja
call
das
rolb
push
lret
mov
lock
mov
mov
mov
xlat
jbe
in
mov
insl
nop
pop
sbbl
xchg
aad
dec
or
out
jg
mov
cmp
add
std
mov
xchg
mov
add
mov
stos
add
stos
cmpsb
pop
add
sub
addb
call
sbb
push
imul
jmp
pop
sbb
xchg
in
sub
xor
pop
mov
sahf
pusha
adcb
bound
mov
push
test
push
inc
hlt
xlat
movsb
jne
mov
and
adc
jne
cmpsb
xor
mov
lret
fidivrl
sub
ss
jno
inc
dec
mov
adc
add
call
mov
jns
or
dec
sbb
mov
mov
int3
cld
insl
xchg
fisubl
pop
mov
xor
dec
xchg
pop
pop
cmp
out
lret
dec
jecxz
jnp
xor
scas
icebp
push
sub
pop
ja
adc
jns
push
add
pop
loopne
jmp
pushf
mov
test
cld
out
aaa
mov
push
repz
xor
js
std
fwait
cmp
cmp
mov
cs
pop
popf
pop
pop
xor
dec
repnz
cwtl
leave
inc
jl
js
jbe
and
test
sbb
lret
roll
into
ja
or
stos
lcall
fistps
cmc
arpl
aam
inc
mov
jecxz
and
movsl
into
mov
roll
or
scas
push
adc
cmpl
inc
mov
adc
dec
pop
ljmp
jns
push
inc
push
aas
dec
jecxz
ret
adc
fistpl
sub
lcall
cwtl
not
inc
insl
add
fisubl
or
rolb
test
insl
and
lret
enter
add
decb
cld
cmp
lock
mov
adc
fldcw
jns
inc
cwtl
cmp
mov
insl
inc
cmp
xchg
stc
sub
jl
ds
imul
aam
xor
lods
push
xchg
sti
dec
adcb
sub
jle
jmp
int3
sbb
adc
sbbl
and
mov
add
aad
daa
or
mov
shll
push
adc
je
mov
popf
and
mov
mov
mov
mov
fldcw
adc
cmp
in
dec
imul
scas
and
outsb
sbb
cmpsb
jecxz
sub
fsubs
pop
lods
sbb
imul
and
into
int3
sahf
lods
mov
mov
addb
mov
sub
jnp
mov
ret
jle
cli
dec
fldcw
pop
iret
inc
dec
pop
xchg
aam
fcmovnbe
xchg
mov
sub
lahf
lods
jle
adc
mov
cmpsl
nop
sarl
and
arpl
mov
mov
hlt
mov
pop
pop
cmp
movl
cmp
movsl
jp
fwait
out
or
lods
shld
testb
sbb
in
push
ret
adc
push
inc
out
push
fwait
pop
sbb
push
hlt
cld
adcl
mov
jae
dec
in
es
adcl
icebp
xorl
pop
inc
div
aam
std
rcll
inc
mulb
push
cmp
mov
outsl
sub
aaa
pusha
and
fcmovnbe
xchg
hlt
cli
cmpsl
rcrl
jns
jecxz
sub
sbb
inc
scas
hlt
sbb
mov
divb
sub
push
sbb
lea
sbb
mov
jnp
add
pop
fnstsw
fwait
mov
jmp
mov
nop
dec
lods
outsb
cmpsb
sti
mov
addr16
fists
ja
pop
or
imul
insb
adc
movsl
sti
push
mov
pop
sbb
cmc
stc
rcl
das
jg
add
sub
repz
adc
lock
jno
cmp
or
or
out
divl
fwait
dec
dec
inc
mov
sahf
popf
and
pop
add
inc
test
push
repz
jmp
cmp
out
push
adc
rclb
addr16
pop
xchg
jns
xchg
sahf
jnp
mov
setg
or
shll
mov
mov
test
push
jbe
jl
jmp
fwait
test
push
sub
jg
imul
pop
aam
mov
adc
mov
cmp
movsb
mov
mov
xchg
aas
sub
in
mov
jp
imul
xchg
int
push
lods
xor
sti
mov
xchg
leave
movsb
lea
test
jle
xchg
dec
mov
mov
sti
stos
or
loope
gs
mov
xchg
imul
scas
stc
inc
loop,pt
push
push
fs
xchg
mov
dec
mov
cmc
stos
inc
mov
notb
std
add
cmpsb
xor
inc
xchg
xlat
sub
dec
jae
mov
sbb
mov
in
cmp
das
dec
jnp
leave
jb
sub
pusha
imul
mov
sti
cli
pop
or
rorl
xchg
push
repnz
xor
int
movsl
or
fwait
push
incb
jnp
jmp
ret
adc
jle
and
lcall
sbb
xchg
pop
dec
push
mov
ss
xchg
pause
or
dec
out
jmp
out
cmpsb
inc
sbb
dec
jp
scas
sub
test
stos
mov
xor
adc
push
imul
push
aas
shlb
sbb
mov
incb
sahf
sbb
je
and
in
data16
xor
bound
in
lock
inc
mov
pop
add
ror
push
clc
sbb
mov
adc
aaa
xor
in
inc
sbb
movsl
cmp
mov
fmul
xor
inc
push
pop
ret
lods
push
lds
mov
push
jmp
jl
add
jecxz
popa
int3
pop
in
std
idivl
in
pop
mov
mov
jb
add
mov
or
pop
out
loope
test
mov
adc
cmp
jle
in
ss
mov
inc
jo
adc
pop
sbbl
xchg
lds
dec
subb
push
lcall
stos
pop
lret
jb
mov
jns
jge
in
pop
jo
movsb
adc
dec
aas
mov
push
mov
mov
mov
mov
orl
xor
fistpll
imul
fwait
adc
shl
jecxz
test
inc
jae
cmc
pop
je
adc
add
mov
fnsetpm(287
mov
clc
ljmp
daa
mov
ret
push
dec
adc
push
xchg
pop
and
dec
inc
mov
lds
adc
ljmp
pop
incb
insb
xor
jmp
mov
add
mov
inc
dec
into
cwtl
mov
mov
adc
xor
or
sub
inc
xor
push
subl
jecxz
shlb
in
nop
push
sub
dec
fld
and
test
jne
mov
imul
dec
mov
stc
sbb
and
dec
mov
cmpsb
dec
cli
fs
lret
icebp
mov
push
mov
sbb
inc
sbbl
hlt
ja
fidivl
cmpsl
dec
cmp
scas
mul
mov
test
or
pop
ret
and
sbb
xchg
and
mov
sub
jne
ljmp
fcoml
xchg
aas
push
xlat
in
sahf
mov
or
lods
pop
xor
leave
add
or
pop
and
push
gs
push
xchg
push
xlat
fdivrp
push
imul
or
jle
xor
orl
push
inc
les
ljmp
dec
jne
aas
in
and
push
sbb
push
je
dec
decb
mov
pop
xor
gs
andl
aas
sbb
int3
inc
xchg
sub
sub
into
sahf
rcll
je
out
addb
add
out
mov
sub
mov
lds
mov
daa
sahf
sbb
mov
rol
bnd
and
xchg
xor
aam
adc
rclb
outsl
mov
jns
dec
addr16
jecxz
mov
lods
out
jae
mov
push
cwtl
out
xchg
out
add
loope
les
jge
leave
jge
add
sahf
movsb
xor
insl
mov
or
inc
adc
data16
pop
mov
insb
popa
mov
imul
xor
sub
cmp
inc
bound
neg
sub
test
mov
cmp
cwtl
icebp
mov
cmp
lea
rcll
cmp
add
sub
inc
jl
call
add
cmpsb
out
hlt
and
lahf
scas
sti
enter
jmp
into
dec
mov
push
dec
test
repnz
ss
adc
pop
jns
cltd
xchg
or
lcall
xchg
lahf
mov
popa
out
fwait
or
ret
popf
xchg
incl
int3
int3
cmp
aaa
cmp
decb
and
push
add
fs
jmp
jmp
adc
in
push
cmp
enter
dec
mov
outsb
or
aam
dec
sub
sti
fwait
stc
fnstenv
mov
sti
mov
pop
mov
xor
iret
xor
push
test
sub
adc
lods
addb
mov
sub
cmp
das
xlat
je
mov
loopne
xchg
aas
push
jne
lods
push
je
sbb
mov
pop
mov
sar
in
imul
je
out
je
popf
add
movsl
xor
add
test
or
push
adc
sbb
or
mov
ret
sub
sbb
mov
dec
cmpb
jle
pop
icebp
sub
das
xchg
or
in
ret
mov
xor
cmpsl
ds
jge
push
push
xchg
and
add
lods
cmc
sbb
cmpsb
push
stc
sarl
out
call
push
push
cmpsl
loope
add
push
sbb
push
cmp
mov
arpl
imul
decb
lahf
ret
push
fistpll
cmpsb
sbb
data16
lods
aad
nop
inc
sub
outsl
push
dec
fiadds
sub
mov
ss
cmp
mov
push
jge
ja
adc
lret
es
xor
mov
mov
shrl
pop
je
add
sbb
mov
mov
adc
adc
pop
jl
sbb
into
out
cltd
jnp
dec
pop
fidivrl
pusha
ja
sbb
dec
mov
cld
sub
xor
mov
and
lock
cmp
pusha
stos
sbb
add
adc
pop
pop
mov
and
jae
rcll
xchg
and
dec
test
xchg
push
mov
xchg
xor
cmp
push
or
cwtl
mov
pop
popa
pop
pop
push
push
add
clc
testb
add
ss
in
in
jp
pop
rcrl
adc
adc
sti
in
sub
and
jo
arpl
sub
pushf
bound
sbb
jb
in
pop
popf
ljmp
ret
lods
cmp
pop
pop
cmpsl
push
gs
lods
mov
in
std
and
push
arpl
in
testl
or
ja
out
into
mov
mov
sti
enter
dec
lcall
pop
mov
into
mov
fbld
xchg
push
mov
lcall
movsl
jle
gs
sbb
cs
out
adc
fisttps
sub
sub
dec
fwait
cmpsl
fs
std
mov
sbb
mov
xchg
push
lret
mov
mov
gs
shl
sbb
xchg
ss
mov
insb
mov
mov
fdivl
shlb
fwait
ss
fimull
aad
out
sub
inc
imul
sbb
cmp
pop
jecxz
sub
or
add
jge
mov
std
hlt
mov
jecxz
test
sub
pmaddwd
sbb
in
icebp
ja
jne
stc
negl
xor
mov
ret
cmp
push
sbb
out
cmp
mov
sub
out
jle
xchg
cmc
bnd
in
mov
push
scas
adc
jbe
rolb
scas
and
cmp
cmp
inc
pushf
and
es
fst
jle
sub
pop
and
sbb
and
rcrl
popa
fsubrl
jnp
aas
inc
int3
inc
cmp
xor
faddp
std
loop
out
cmp
fisubs
daa
or
sub
pop
fs
push
dec
push
pop
and
jmp
into
sub
adc
mov
mov
xchg
fstpt
or
xchg
xchg
pop
fidivl
dec
mov
ja
sbb
bound
popf
insb
xchg
mov
insb
sti
sub
dec
mov
or
mov
aad
mov
cmc
mov
dec
cmp
xor
inc
push
dec
lea
jge
rep
push
push
add
jnp
popf
xor
cmp
xor
push
push
cmp
popa
std
mov
pop
mov
clc
inc
rcrb
pop
rorl
jg
lea
cmp
sbb
dec
adc
repz
jne
dec
jo
and
cmp
fneni(8087
push
adc
nop
mov
push
xchg
fidivrl
mov
fimull
pop
add
sti
inc
jl
add
imul
push
iret
icebp
sub
adc
jno
imulb
and
into
es
cld
sbb
mov
xchg
sub
movsl
repz
mov
mov
jo
cld
cmp
mov
inc
mov
insl
dec
mov
insb
fs
mov
fbld
pop
inc
out
xor
les
sbb
ljmp
mov
outsl
cmc
push
ret
dec
mov
pop
jnp
mov
sbb
lds
pop
jno
inc
test
ficompl
je
cs
aaa
in
movsb
ljmp
in
and
jae
xor
cmp
push
xor
out
xor
jmp
in
aam
shll
mov
shl
dec
out
shll
lret
mov
add
and
adc
je
bound
lret
xchg
sti
sbb
add
mov
xchg
fbstp
sahf
ds
xor
dec
fnstcw
lret
repz
imul
cs
adc
pusha
cwtl
dec
mulb
cwtl
int
stos
bound
sbb
int3
lods
add
cmp
fcmovnu
outsl
popa
inc
sbbb
xchg
mov
mov
js
repz
out
pop
cmpsl
shll
shl
pop
mov
and
mov
fldl
inc
fdivrs
sbb
cmp
ds
fidivrl
lods
repz
cld
pop
xchg
and
movsb
test
inc
ja
mov
fistl
data16
roll
xor
push
or
ficoms
cmp
lret
js
repz
cwtl
push
pop
sbb
push
and
ret
imul
cmc
fwait
sbb
and
lds
jl
dec
ret
aad
out
push
loope
inc
mov
test
out
out
pop
xchg
jno
aam
ds
xchg
jmp
and
mov
mov
push
jne
call
test
cld
loopne
arpl
mov
inc
daa
sbb
std
xchg
das
push
xchg
pop
xor
mov
jae
xor
jo
in
sbb
roll
dec
xchg
frstor
rcr
mov
das
xor
sbb
pop
les
out
test
cli
ret
ret
jmp
and
out
mov
mov
mov
mov
jl
dec
scas
mov
repz
aam
fnsave
in
jmp
test
insl
lahf
or
adc
or
jl
add
int3
inc
mov
cld
xchg
scas
pop
mov
mov
fstl
jnp,pn
out
arpl
jg
int3
out
imul
mov
mov
ja
into
mov
inc
xlat
out
cmc
cld
push
enter
lods
xchg
inc
scas
jo
lret
movsl
lods
mov
repnz
aaa
add
mov
loopne
outsl
movsb
cltd
mov
invd
mov
jbe
sub
cwtl
cli
pop
cmc
push
sahf
sarb
jmp
scas
test
and
inc
sbb
icebp
sbb
add
ljmp
dec
insb
jecxz
cmpsb
dec
ja
cmp
dec
xchg
inc
push
sub
cmpsl
pop
pop
sbb
push
jmp
mov
lods
imul
cmpsl
mov
nop
adc
xchg
or
inc
and
sub
test
push
pop
xchg
popa
call
push
cld
push
ljmp
sbb
insl
push
cmp
mov
stc
and
rolb
push
das
idivb
andb
pop
cli
sbbb
popf
ror
fwait
add
inc
in
xor
inc
fmull
js
dec
cmp
and
mov
daa
mov
in
imul
icebp
leave
lock
mov
xor
ss
fstp
push
mov
sub
pop
les
dec
loopne
xchg
lods
adc
mov
cmc
mov
mov
cmc
xor
sub
sbb
sub
mov
push
and
in
ljmp
mov
sub
imul
mov
out
and
inc
or
out
fcoml
fisubl
ret
and
lods
jo
lahf
test
call
jne
addr16
mov
adc
push
loopne
dec
cmp
stos
push
int3
ret
stos
int3
dec
jae
lcall
inc
sti
jno
add
sub
xor
jecxz
loope
sbb
clc
lds
inc
out
gs
xchg
add
cmp
in
popf
out
jg
mov
xor
mov
scas
aas
add
imul
enter
daa
data16
into
xchg
sahf
sti
das
ret
into
sarb
xchg
cmp
hlt
xchg
das
xchg
or
mov
ds
mov
xor
fwait
ja
sub
jmp
sbb
pushf
das
lret
repz
adc
jge
jns
pop
mov
cmp
adc
and
xchg
xchg
cmpsl
cmp
gs
mov
jmp
sahf
or
icebp
push
faddl
test
jno
xorl
push
and
pop
jcxz
jbe
push
arpl
jmp
push
jnp
bound
add
les
lods
xor
adc
rcrb
cmpb
xor
and
ficoml
ss
sti
out
lret
es
xchg
cmpsl
and
iret
dec
sbb
vsubps
adc
jne
ljmp
in
pop
xlat
bound
ljmp
dec
pop
sbb
mov
and
push
or
mov
push
mov
les
scas
mov
add
cmpsb
mov
xor
cld
repnz
mov
xchg
mov
mov
outsl
mov
outsb
jp
and
mov
mov
pop
hlt
fidivrl
xlat
mov
lds
scas
inc
inc
hlt
jge
sbb
shlb
sub
jg
stos
xor
dec
and
jp
rolb
mov
and
ljmp
dec
mov
pop
xor
pop
mov
pushf
lea
sarl
out
cltd
add
xor
and
pusha
loop
mov
jns
add
outsl
aam
sbbl
mov
xchg
aad
scas
or
and
movsl
sub
pop
ret
sbb
lcall
test
xor
jnp
fadds
aas
or
mov
cltd
xchg
insb
mov
add
cmpb
push
in
ret
mov
xchg
inc
ljmp
dec
lods
movsl
adc
rolb
xor
mov
xor
push
cmpsl
jno
shlb
loope
test
das
mov
gs
ret
inc
pushf
jnp
out
cld
jno
mov
sub
or
jp
lret
jnp
mov
and
xchg
cmp
inc
mov
popa
mov
fwait
mov
fcmovbe
arpl
les
dec
adc
vmptrst
mov
ret
add
vmread
aam
iret
lds
mov
sub
or
ds
sub
dec
insb
loop
mov
cli
and
xchg
adc
test
sarl
push
fimuls
popa
fwait
mov
out
mov
repz
ja
pop
and
stos
jmp
add
cmp
mov
imul
dec
bound
mulb
addr16
sub
loop
test
nop
adc
cmp
jne
inc
cli
repz
mov
mov
lods
add
testb
aad
popf
push
pop
xchg
xchg
add
pop
mov
xchg
jmp
push
loopne
mov
jno
mov
cs
cmpsl
shl
jg
fimuls
in
cs
add
les
test
sub
jb
mov
lahf
sbb
imul
and
mov
or
adc
mov
stos
and
iret
and
sub
xchg
push
loop
idivl
mov
rolb
add
ss
gs
or
stos
xor
mov
cs
sahf
mov
or
je
mov
lret
cmp
push
xor
aad
cmp
leave
ja,pn
adc
push
ror
fildll
fwait
mov
or
pop
in
pop
mov
jo
jp
fwait
mov
fs
mov
push
mov
stos
mov
rolb
pop
jl
inc
rep
xor
lods
scas
push
and
leave
aam
sarl
jp
sub
int
jne
arpl
adc
xchg
in
mov
dec
hlt
pslld
inc
add
mov
push
flds
sub
sti
imulb
arpl
shll
pop
mov
dec
mov
sbbb
push
dec
or
fcoms
addb
xchg
repnz
loop
sahf
arpl
pop
pcmpeqw
js
adc
mov
and
out
inc
xchg
psrad
push
push
loop
lock
cmp
leave
add
fidivs
xor
cltd
fidivl
xchg
mov
push
push
jmp
sub
rcrb
leave
and
pop
mov
out
fimull
jmp
mov
adc
xchg
mov
leave
mov
addr16
loopne
dec
inc
pop
and
lret
out
jbe
cmpsl
xor
pushw
jp
sub
in
inc
je
jecxz
mov
orl
and
mov
jae
popa
aas
out
lret
shlb
fs
dec
mov
stos
repz
dec
mov
call
out
lcall
sbb
or
ret
inc
adc
scas
pusha
adc
mov
mov
jmp
push
xchg
push
sub
add
outsb
fimuls
xchg
es
setle
jle
test
fsubs
test
scas
pop
nop
pop
jae
test
cmp
mov
out
cltd
je
add
jg
add
mov
incb
negl
or
pop
into
jo
lahf
inc
inc
push
and
in
bound
lea
and
xlat
xchg
mov
mov
pushl
hlt
mov
jae
mov
fwait
xor
lcall
jmp
push
push
fwait
gs
imul
pop
jge
inc
or
push
sbb
pop
movsb
push
mov
jnp
jne
xchg
mov
aaa
push
sbb
out
jge
in
out
cmp
fsubl
loope
shl
bound
add
mov
mov
outsb
enter
cmpsb
aas
bnd
movsb
dec
loope
pop
popa
fisttpll
jg
xchg
enter
int
hlt
movsb
flds
cmp
inc
pavgb
xchg
sbb
or
xor
ret
inc
insl
xorl
fdiv
xor
add
sti
xor
mov
repnz
scas
adc
inc
outsl
pop
loop
push
pop
fnstsw
leave
out
add
push
mov
xor
xchg
and
adc
insb
mov
movsl
outsb
dec
xchg
sbb
aas
and
or
ret
fistps
jmp
xchg
es
push
mov
inc
test
mov
inc
xor
xchg
outsb
sub
out
rclb
and
add
in
xlat
sbb
or
sarl
pop
ss
push
fsubl
add
test
add
cwtl
and
cmp
adc
add
xor
cmpsl
sbb
mov
fcmovu
out
mov
mov
roll
push
mov
push
ret
aas
pop
jp
jge
movb
pop
xchg
push
adc
and
dec
push
imul
xchg
iret
iret
xor
dec
push
adc
pusha
ss
jb
push
dec
jle
out
jno
add
bound
inc
add
mov
rcll
cmp
sar
xor
repnz
xchg
and
into
sbbl
cmpsl
add
mov
mov
cwtl
pop
int
pusha
inc
movsb
push
shl
les
stc
orb
jns
inc
out
add
imul
iret
xor
dec
inc
daa
cmp
and
pusha
orl
std
mov
push
pop
dec
out
jge
sbb
rcr
cmpl
mov
daa
fisttpll
iret
test
dec
and
daa
mov
xchg
mov
shrl
mov
cmp
xchg
sub
xchg
mov
in
pusha
fiadds
out
mov
outsb
xchg
out
fsubr
inc
xlat
movsb
and
out
and
inc
lcall
aas
push
inc
ds
jp
cmp
mov
and
aad
stc
sbb
add
mov
mov
clc
dec
pop
int3
pop
mov
jnp
rcll
pop
ret
data16
adc
leave
addb
mov
sub
dec
mov
mov
mov
xor
pop
gs
push
mov
shlb
cli
icebp
shr
sbb
and
xor
jmp
and
rcll
in
mov
push
dec
adc
xchg
icebp
shlb
push
add
dec
icebp
mov
xlat
inc
fcomps
cld
mov
mov
mov
add
fs
ret
mov
dec
or
mov
in
cmpsl
icebp
dec
movsl
pusha
mov
inc
arpl
lahf
push
shlb
fnsetpm(287
scas
lahf
lret
jbe
mov
xchg
xchg
pop
call
movsl
or
mov
or
mov
orl
push
jmp
stos
fcoml
mov
push
xchg
add
xor
cmp
les
pop
pop
in
sub
push
push
cmp
loop
and
nop
push
scas
test
mov
mov
adc
insl
mulb
mov
loop
rolb
sub
inc
sub
jbe
jne
jmp
push
dec
lods
jmp
hlt
lahf
negl
or
imul
push
push
push
mov
rorl
dec
push
xacquire
and
pop
movsbl
add
xor
repz
xchg
std
repnz
inc
inc
sub
mov
int3
es
xlat
in
ljmp
fwait
cmp
push
inc
test
mov
lds
cmp
adc
jl
fmul
or
ljmp
mov
jno
push
shlb
shrb
je
add
jne
sub
scas
and
hlt
add
cmp
mov
dec
fiadds
push
dec
test
add
push
les
sub
sub
ret
sbb
test
bswap
mov
imulb
and
xor
bnd
enter
add
jns
xchg
mov
push
push
popa
push
cmp
mov
and
pushf
scas
shr
xor
or
out
ret
jb
mov
mov
dec
push
shl
and
xchg
ljmp
les
inc
hlt
sbbl
adc
and
cs
scas
cwtl
sub
fadds
push
sbb
sub
or
pop
cmp
fs
inc
adc
or
mov
cs
mov
fucomi
jnp
dec
imul
xlat
add
fcompl
jecxz
add
pop
push
es
sbb
pop
cmp
mov
lods
js
mov
test
movsl
xchg
scas
cmp
pushf
pop
or
in
addb
clc
sub
sarl
pop
cld
jno
leave
mov
pop
mov
ja
sbb
mov
sub
fwait
inc
pusha
ljmp
mov
loopne
cmp
mov
test
out
push
jp
hlt
add
outsb
in
sub
push
mov
pop
lock
sbb
sbb
imul
les
add
xor
mov
nop
dec
jecxz
xlat
movntps
jnp
and
jne
jmp
adc
ss
adc
push
ja
pop
jnp
outsl
dec
in
fnstenv
inc
xor
and
dec
outsl
loop
addw
in
or
int3
fcoml
jae
push
arpl
sub
fwait
add
jbe
cmp
fs
add
push
ret
subl
outsl
mov
push
daa
sbb
adc
rcrl
and
imul
mov
xor
mov
cmp
xchg
sbb
rorb
pop
xchg
fs
xchg
rcll
fdivl
push
das
sub
cmp
popa
leave
mov
iret
sbb
sub
data16
pop
sub
ret
lods
dec
lahf
ljmp
fcomi
mov
and
and
sbbl
shrb
cmp
dec
loopne
xchg
lcall
outsl
pushf
js
mov
sub
xor
push
push
pop
push
add
addr16
or
ret
jp
pop
stc
mov
std
push
out
test
sub
out
lea
jae
subb
jno
addr16
test
inc
int
fwait
inc
lret
mov
inc
stos
mov
cmp
or
sub
stos
stc
insl
pop
fcmovu
mov
push
jnp
lds
js
adc
sub
movsb
jns
mov
movsl
xor
add
or
lea
jge
out
jns
jbe
xor
bound
imul
addr16
pop
and
inc
jno
jecxz
rorl
xchg
sbb
cltd
mov
pop
ljmp
dec
xchg
lods
ret
inc
int
jno
roll
lods
and
cmp
jns
int3
lret
fmul
push
stc
jge
es
add
jmp
orb
cmp
adc
or
inc
and
mov
scas
push
dec
mov
dec
mov
ss
xchg
pop
rcrl
mov
mov
or
jno
clc
xor
fwait
outsb
repz
clc
mov
or
pop
jmp
stc
inc
popa
add
lahf
push
jg
sub
rcll
repz
cld
push
inc
push
testb
sub
cmp
or
in
lret
adc
js
nop
sbb
in
add
cmp
lods
inc
adcl
xchg
gs
out
xor
idivb
int
pop
dec
pop
lret
loopne
pop
fcoml
call
insb
cmp
sub
pop
mov
mov
ja
dec
ret
push
push
inc
icebp
pop
addr16
ss
mov
mov
mov
addl
inc
cld
inc
mov
sbb
sub
pushf
pop
cmpsl
jecxz
insl
dec
mov
int
mov
enter
cmp
jp
out
or
xchg
adc
mov
xchg
decb
jne
inc
sub
mov
pushf
mov
call
dec
loopne
or
mov
or
lahf
lcall
push
mov
in
xor
in
in
popf
in
aas
out
fdivrl
ss
fsubs
adc
sbb
jae
inc
jb
inc
cmp
pusha
call
push
push
in
aaa
xchg
sbb
dec
cmp
popf
pop
rcr
inc
push
inc
xor
arpl
lcall
push
sub
ja
mov
sub
mov
xor
arpl
mov
or
dec
das
cwtl
inc
cmp
leave
xchg
fldenv
jg
pop
stc
imul
xchg
adc
jo
bound
and
xor
out
push
ret
pop
stc
cmpb
loope
mov
lret
jno
sbb
pusha
push
or
ret
and
jg
leave
push
sbb
daa
push
and
divb
push
fwait
lock
mov
sahf
inc
pop
mov
call
test
cmp
data16
or
xlat
push
cmp
repnz
cmp
or
adc
inc
fldt
lahf
das
ret
mov
mov
xchg
add
mov
ret
sbb
hlt
test
and
push
jmp
int
cli
pop
bound
shll
loopne
mov
xchg
mov
std
shlb
push
push
jo
push
mov
mov
int
push
in
subb
int3
fisttps
dec
sahf
add
cs
push
cltd
add
xchg
pushf
mov
fwait
lods
adc
cmc
in
xchg
sub
ja
push
xchg
push
jae
push
cmp
adc
inc
outsl
mov
mov
pop
jle
call
rclb
out
inc
xlat
fst
fdivrl
lahf
imul
jmp
jbe
push
adc
inc
nop
mov
je
fistpl
scas
bound
sbb
cmp
xchg
into
push
mov
inc
pushf
cltd
dec
add
cs
cwtl
sub
fucom
pop
movsl
push
and
cmp
out
or
dec
sub
fsub
sbb
mov
or
adc
lret
adc
mov
mov
xchg
out
pop
push
les
mov
lock
loop
imul
push
std
dec
pop
mov
cmp
mov
loop
or
sbb
dec
sbb
popa
out
outsb
xor
pop
dec
push
aaa
push
cmpsb
mov
mov
xchg
jnp
inc
test
cmpsb
jmp
cmp
pop
cmp
inc
push
movsl
sbb
xlat
sbb
ja
cmp
out
test
xchg
push
test
popa
pop
jbe
call
inc
stos
mov
jae
jge
addb
notb
lret
dec
inc
cmpsb
jne
pushf
in
fs
and
loopne
push
mov
dec
dec
stos
imul
lds
dec
roll
jne
or
xchg
push
add
xor
insb
fsubr
cwtl
add
xor
cmp
mov
popl
es
mov
jne
roll
cmpsl
jne
add
push
test
mov
or
sbb
into
int
or
jg
and
mov
insb
mov
xchg
mov
cmp
cmc
movsb
pop
sub
incl
inc
movsb
add
xchg
push
mov
in
xchg
cmp
pop
out
inc
rcrb
ja
repnz
leave
jno
push
jle
jmp
lods
pop
popf
jmp
stc
fsubs
sub
ficomps
lret
mov
jp
cmp
aas
je
mov
cmp
jp
sarb
fnstenv
xchg
jb
xchg
shr
in
cmpsl
fwait
push
add
pop
mov
jo
add
xor
sbb
add
iret
fs
adcb
cmp
ficoms
cld
sub
popa
and
xchg
rorl
xor
cltd
xchg
xchg
jnp
adc
push
pop
jns
int
mov
out
adc
jbe
pop
les
dec
xchg
mov
cmc
sbb
pop
push
cpuid
mov
pop
or
adc
inc
or
jmp
repnz
icebp
iret
jb
stos
cmpsb
or
lahf
push
cmp
dec
xor
inc
int
jge
push
cmpsb
push
jg
xchg
mov
in
hlt
pushf
mov
inc
jge
push
pop
out
push
sbb
jecxz
and
push
scas
jge
push
push
jbe
jmp
repz
mov
push
pusha
push
cld
sbb
inc
mov
adc
or
sub
shrb
loope
xor
addb
icebp
sbb
enter
or
jns
cmc
fldcw
mov
push
lret
xchg
sub
fs
jb
int
jp
std
inc
and
int3
pusha
add
mov
and
fs
bound
dec
rep
test
mov
clc
ret
movsl
stc
cltd
xchg
repz
push
leave
lret
in
aas
dec
in
dec
jg
bound
in
ljmp
mov
xor
out
push
push
mov
pop
aaa
push
pop
mov
mov
stos
fimuls
fwait
pop
or
sbb
mov
adc
pop
add
inc
jns
cmp
js
jb
dec
int
push
fadds
iret
loope
loopne
inc
test
cmpsl
test
lret
imul
ret
mov
mov
xchg
push
stos
enter
call
nop
pop
xchg
aaa
cld
stos
icebp
lcall
loopne
push
adc
repnz
nop
mov
or
enter
pop
push
and
lea
push
jge
dec
mov
adc
cwtl
scas
pop
jae
adcl
popf
cli
sbb
mov
fucomi
lahf
movsb
sub
std
cltd
popa
dec
and
dec
stos
gs
dec
add
xchg
loop
dec
insl
pushf
dec
std
cltd
mov
fists
int
arpl
add
imul
and
mov
imul
fsubs
nop
in
imul
decb
mov
out
inc
lock
js
or
or
jno
jbe
jg
add
jne
mov
lea
pushf
dec
push
es
adc
jne
cmp
sub
inc
adc
test
pop
jnp
icebp
inc
push
mov
jbe
inc
lahf
loop
popf
mov
popa
addr16
adc
sub
jmp
dec
mov
notl
out
and
loopne
jae
cmp
dec
mov
mov
mov
mov
pop
pop
fyl2xp1
test
lock
test
adc
push
fwait
xchg
in
test
dec
cmpb
inc
xchg
lods
inc
mov
and
push
xchg
push
stos
pcmpgtw
ja
out
add
repz
mov
mov
xor
xor
mov
add
icebp
sub
lds
lret
mov
push
adc
lods
sbb
push
mov
inc
pusha
adcl
sub
int3
add
cmp
call
imul
lea
mov
movsb
cmc
xor
mov
add
mov
push
ret
hlt
shlb
enter
rcll
inc
lods
iret
sub
and
es
mov
filds
xchg
xchg
out
addl
fimuls
pop
cli
leave
sahf
push
cmpb
jne
mov
cltd
jns
xor
test
xor
push
mov
mov
push
inc
jo
add
push
leave
dec
lcall
fists
data16
cmpsb
jbe
add
xchg
pop
loop
mov
push
lret
mov
and
sahf
aad
ret
sub
inc
mov
mov
adc
negb
pop
je
cld
mov
test
jb
pop
jmp
mov
mov
outsb
mov
push
and
dec
sub
lret
xchg
cmpsb
dec
sahf
push
mov
ja
jno
mov
mov
dec
jae
in
cli
or
shl
mov
or
adc
cmp
adc
das
fisttpll
sub
xchg
mov
arpl
add
jecxz
lret
cld
dec
out
sbb
iret
adc
cmpsb
test
ficoml
fs
jmp
dec
loope
jle
sub
aas
cmpl
or
add
dec
push
push
pop
push
inc
mov
cmpsl
or
add
das
mov
test
mov
jo
adc
inc
sub
cltd
pop
daa
inc
rorb
push
testl
lahf
or
punpcklwd
and
or
push
jp
sarb
sarl
jp
subb
lock
pop
inc
rcll
mov
cld
lds
mov
fdivr
sahf
iret
les
ret
cs
xchg
jl
scas
movsl
outsl
mov
fwait
mov
jge
jns
loop
sbbl
mov
clc
cli
orb
push
xor
cmp
push
jno
ss
push
stc
decb
sbb
inc
mov
jae
mov
jnp
push
cltd
mov
test
mov
rclb
jb
out
mov
push
loope
jae
xor
imul
adc
test
xor
arpl
mov
xor
push
jo
dec
lret
or
and
int3
jb
testl
loope
add
test
dec
lcall
out
out
cmp
ljmp
shll
mov
add
xor
movsl
je
sub
fwait
arpl
mov
inc
mov
mov
divb
fyl2x
test
je
adc
jnp
popa
push
jbe
rcll
dec
fs
sbb
enter
push
xor
cltd
cmp
sbb
int3
insl
xor
jp
or
cld
and
aas
cmc
test
sbb
sbb
mov
xlat
and
inc
xor
mov
lods
sbb
mov
int3
inc
imul
movsl
mov
leave
subb
test
jmp
and
call
lret
in
cmp
fnsave
outsb
lret
xchg
das
out
fcmovbe
push
or
shl
dec
mov
sub
imul
movsb
push
jne
sbb
pusha
inc
xchg
test
xchg
leave
add
cmc
xchg
arpl
repz
mov
dec
jl
xchg
pop
xchg
outsb
mov
sbb
fs
sub
or
cmpb
sbb
hlt
test
roll
mov
sub
sbb
cwtl
je
push
mov
in
jmp
in
rcrl
test
loope
cmp
and
out
hlt
dec
int
push
mov
cmp
pushf
cmpsl
cmp
mov
mov
mov
push
cmpl
es
push
mov
cld
sbb
jo
lcall
dec
popf
insb
out
or
mov
nopl
sahf
adc
xchg
mov
imul
out
mov
sbb
imul
icebp
mov
pop
outsl
mov
xchg
mov
mull
fisttpl
loop
jmp
bound
inc
stos
sub
inc
ret
push
mov
loope
icebp
push
cmpsb
or
divl
cmp
out
scas
inc
ret
mov
stos
mov
rorl
jnp
xor
mov
xor
xorb
cmp
gs
jae
sub
pop
mov
test
and
rcrl
or
cwtl
fbld
aas
ss
add
clc
adc
or
xchg
lods
cmp
sti
int
pop
notl
xlat
and
in
idiv
cld
movsl
or
in
sbb
popf
test
and
inc
push
sbb
push
jb
fsubl
xor
jb
push
pop
ljmp
or
jns
pop
push
enterw
bound
js
fdivs
lock
ret
mov
call
dec
and
cmp
or
cmpsl
add
cli
pop
loope
lods
sub
push
or
adc
xchg
dec
es
sbb
mov
rcll
gs
aam
add
push
cmp
xchg
roll
push
mov
and
push
jg
movsb
cltd
add
or
dec
and
jns
jb
imul
inc
data16
xchg
xchg
arpl
pop
mov
pop
adc
mov
pop
inc
stc
add
dec
cmp
xor
mov
mov
sbb
pop
and
inc
or
sbb
xchg
sbb
roll
popf
js
pop
leave
cmpsl
push
scas
mov
push
lods
cmp
fsts
add
sets
call
jnp
call
data16
sbb
xchg
sbb
and
lods
jmp
jno
cmp
pop
cmp
dec
mov
stos
pusha
push
mov
push
insl
rorl
push
repnz
jmp
dec
pop
mov
roll
push
add
lock
fnstsw
cmc
mov
add
mov
movsl
add
pop
jmp
jp
js
daa
enter
test
xor
pop
xchg
xor
leave
in
mov
icebp
cs
test
nop
fisubrs
les
sub
cmp
pmulhw
stos
xchg
test
push
sbb
scas
shlb
mov
fwait
or
mov
and
fmull
add
in
aaa
inc
add
adc
add
xor
incb
add
mov
add
add
sub
add
out
out
mov
mov
mov
jg
push
mov
scas
ljmp
insl
mov
imul
scas
mov
add
lret
and
mov
mov
shll
sti
pop
cmpsb
or
sarl
das
or
mov
rcrb
enter
mov
out
cmp
mov
and
jecxz
mov
outsl
mov
dec
fsubr
mov
xor
push
loopne
fmuls
pop
outsb
jmp
leave
insl
gs
adc
rclb
sbb
imul
divb
ja
test
mov
movd
inc
push
dec
movsl
adc
adc
insl
rorl
neg
mov
jno
test
mov
push
xor
loop
cmp
loop
shll
pop
pusha
rcrl
in
lea
push
fdivrl
jae
cmpsb
sbb
loopne
cmp
mov
test
aad
push
dec
in
push
mov
scas
scas
lods
lret
das
mov
cwtl
add
mov
inc
inc
cld
cmpsl
xchg
addr16
add
sbb
adc
pop
sbb
lret
adc
mov
pop
aas
add
daa
lods
mov
divb
cmp
adc
push
xchg
sbb
dec
adc
cmc
or
stos
dec
mov
mov
mov
adc
cmpsl
stc
jns
or
and
pop
and
or
xlat
cmpsl
ja
ret
xlat
push
lcall
dec
imul
out
push
push
popf
js
cltd
mov
in
mov
jnp
push
fidivl
add
and
adc
test
cmp
pop
pusha
test
push
mov
adc
and
in
cmpb
cmp
dec
pop
repz
insl
outsb
dec
xlat
push
mov
push
xor
aaa
pop
push
stos
pop
loopne
jecxz
jmp
sub
dec
pop
rcl
xchg
arpl
jae
add
inc
rcrl
push
inc
shll
rorl
lock
jno
xor
mov
mov
cmp
iret
mov
stc
and
stos
push
rorl
in
out
rolb
sbb
repz
xchg
into
xchg
ljmp
mov
xor
imul
push
xor
lret
xlat
je
dec
ja
out
xlat
lcall
subb
in
mov
sahf
xchg
xchg
dec
add
sub
aam
sub
icebp
mov
imul
sarb
mov
adc
stc
push
and
pushf
loopne
inc
push
sub
mov
pop
inc
in
push
ret
xor
in
jle
adc
rorl
daa
dec
jl
mov
lret
fwait
mov
cmpsb
pop
push
in
jno
flds
sbb
rcl
jbe
shll
adc
movsl
aas
sub
aad
shlb
xchg
pop
daa
and
loope
push
loope
shlb
sub
in
pop
sti
mov
ret
mov
int
imul
jp
shrb
fwait
fwait
add
push
xchg
std
jns
dec
fcmovnb
cmp
mov
mov
shrb
loope
mov
xor
or
cmpsl
loope
mov
push
dec
call
push
lods
repnz
in
inc
orb
dec
jbe
push
and
scas
pushf
adc
int3
xchg
ja
stc
call
sbb
outsl
adc
pop
cwtl
push
pop
lods
je
push
insb
pop
cmp
rorl
mov
cmp
mov
jmp
and
xor
xchg
iret
inc
cs
scas
and
dec
pop
mov
nop
add
mov
xchg
js
rcll
iret
sub
stos
push
inc
test
sub
xor
fcoml
add
mov
and
jo
test
mov
out
inc
xchg
xchg
jns
push
loop
les
pop
jle
int3
mov
sbbb
jl
push
fwait
sub
sti
pop
mov
sub
mov
pop
mov
pop
xchg
mov
mov
sbb
gs
pushf
arpl
fcoms
ss
gs
ret
outsl
xchg
inc
dec
sbb
daa
jno
xchg
ret
sarb
mov
adc
loop
leave
jmp
int3
sub
xchg
aad
mov
divb
stos
loopne
das
pusha
or
shrb
mov
ss
and
push
add
lea
sub
pusha
fisttpl
rorb
cmp
mov
jecxz
xchg
addl
push
cmp
or
dec
loop
jbe
movsb
test
and
add
call
xchg
outsb
cwtl
or
add
dec
and
xlat
add
cmp
popa
xor
inc
mov
pop
jmp
mov
out
outsb
add
lods
out
and
add
aas
lahf
xlat
ljmp
stos
mov
pop
addr16
jg
or
add
inc
mov
cs
in
sbb
cltd
gs
ficoml
mov
jecxz
scas
pop
shll
ljmp
mov
cmp
ljmp
sbb
pop
add
mov
or
daa
jne
jno,pn
dec
lret
mov
pop
pop
dec
addr16
rcll
sub
dec
push
push
mov
xchg
or
nop
stc
fs
mov
es
test
xchg
add
or
adc
inc
push
mov
push
in
xchg
adc
int
cmp
fwait
ret
adc
sbb
dec
cmpsl
mov
addl
jo
mov
jbe
mov
cltd
cmp
jbe
or
pop
sbb
ja
int3
test
mov
mov
outsl
pop
jae
xchg
or
xchg
rolb
inc
add
add
pop
insb
in
cmp
mov
test
push
shrb
dec
nop
data16
dec
outsb
and
movsb
cld
cmpsl
aad
jg
lret
into
mov
xor
push
test
mov
in
jnp
mov
flds
sub
dec
inc
scas
insb
dec
icebp
cli
sbb
sbb
sti
in
add
sub
cmpsl
pop
pushf
js
push
xor
aaa
jg
imul
and
ja
or
outsb
sbb
test
out
pop
add
add
aam
sahf
cli
pop
nop
das
cmp
sbbl
xlat
mov
sti
and
xlat
cmpsb
pop
xchg
jecxz
dec
sbb
ret
xor
popa
dec
and
push
je
lahf
or
fdivs
lahf
lcall
jno
jno
out
movsb
int
out
fcmovu
clc
and
or
mov
push
sahf
fistl
aaa
push
cs
div
into
sbb
flds
or
lret
les
mov
jno
mov
push
mov
pop
mov
push
inc
xchg
dec
jno
cmpb
fdivs
shll
add
insb
or
cmp
mov
and
gs
icebp
xchg
mov
imul
cmp
cli
or
shrb
roll
cld
inc
sbb
mov
es
cmp
inc
movsl
das
inc
adc
subb
test
cmp
pop
ja
pop
imul
ret
push
or
cmp
sbb
push
fldcw
inc
dec
jl
int3
xor
mov
into
sti
push
outsb
and
rorl
cmp
fcoms
cwtl
jl
lret
mov
mov
mov
push
mov
and
xor
fs
test
inc
dec
decl
shlb
and
mov
jae
push
hlt
stos
adc
arpl
outsb
dec
sub
jmp
mov
jbe
pop
xorl
inc
or
insl
dec
and
cmp
test
pop
add
insb
testb
mov
pop
add
lret
sbb
add
pop
aad
dec
insl
pop
mov
test
loop
das
mov
xor
mov
cmp
sarl
push
jecxz
lock
mov
add
sahf
cmpsl
push
push
cmp
dec
push
scas
loop
mov
or
cmpsb
add
mov
rorb
mov
mov
xchg
sub
xchg
dec
cmpsb
inc
cmp
ljmp
lods
scas
out
cmp
sbb
pop
gs
xor
cmpsb
sub
sub
cld
stos
into
jb
dec
je
inc
and
nop
pop
mov
lret
pop
mov
out
or
scas
inc
cmp
popf
insb
jae
adc
pop
aaa
rclb
inc
pop
adc
jne
sbb
push
lahf
xchg
push
push
inc
je
call
and
pop
xorb
jl,pn
mov
call
sub
mov
sbb
jecxz
imul
push
xchg
popa
ret
xchg
roll
repz
add
ljmp
ss
mov
push
mov
rcl
clc
push
ljmp
sub
shll
mov
xchg
stos
fildll
mov
addr16
popa
sub
jmp
mov
jnp
jnp
loop
lods
xchg
lcall
sti
push
sub
ja
mov
adc
add
inc
and
pop
aas
rcll
cltd
adc
je
clc
inc
and
lcall
mov
mov
rcll
mov
idivb
push
pop
test
loopne
leave
mov
mov
xor
pushw
push
rcrb
arpl
jge
add
sbb
outsb
movsb
aad
das
or
adc
outsb
gs
mov
xlat
inc
bound
fistl
sbb
mov
sbb
data16
mov
movsl
dec
xor
pop
sbb
jo
xor
hlt
or
add
mov
push
sarl
sbb
cmp
ror
clc
fs
arpl
invd
int
xor
xchg
imul
inc
in
xchg
xor
dec
mov
sbb
stc
rorl
out
lret
sub
inc
or
cmc
hlt
pop
and
into
push
int3
jle
into
mov
xchg
pusha
inc
or
fidivrs
out
jp
inc
dec
jmp
rorb
mov
sbb
or
cwtl
adc
push
push
ror
fnstsw
sub
ja
inc
cmpsl
jnp
dec
jmp
jmp
jno
or
push
or
repz
mov
clc
cmc
out
das
inc
and
mov
jae
or
in
lods
mov
mov
jns
dec
pushf
and
pop
leave
enter
mov
push
ficomps
dec
add
out
cmc
insb
lret
pop
outsb
aad
or
xor
xchg
out
fstl
cmpsb
mov
fs
push
mul
or
cwtl
cmp
cltd
sbb
xchg
test
pop
dec
xchg
inc
fldt
mov
stos
mov
jmp
or
in
ja
cltd
or
xchg
mov
cld
xorb
sub
push
fidivrl
sbb
repnz
imul
mov
iret
xchg
xchg
mov
test
xchg
cs
or
xchg
or
mov
imul
cmp
adc
fnsave
mov
xchg
mov
cwtl
mov
push
and
ficompl
adc
fldt
jbe
jnp
mov
es
inc
popa
aad
mov
stos
in
cmp
xor
dec
mov
adcl
fsubs
addr16
mov
cmp
push
push
pop
outsl
push
negl
push
push
mov
pop
sbb
cmp
dec
fisttpl
mov
test
sti
sahf
sti
ret
pop
mov
ss
aam
inc
add
call
dec
fwait
nop
popf
js
or
fmul
xor
in
enter
cs
mov
ja
cmp
out
hlt
cmp
aam
sbb
or
xchg
cmp
loop
sbb
xor
fadds
popa
jns
jae
lds
push
pop
andb
jle
popa
in
or
push
mov
dec
ja
jmp
lret
out
cmpsl
inc
adc
push
and
xor
lock
addr16
jbe
loope
bound
or
and
mov
xchg
in
pop
pop
mov
addr16
pop
add
adc
shrl
cmp
test
xor
sbb
sbb
or
aad
lret
ds
sbb
or
dec
pop
fcoml
dec
iret
sub
add
xchg
xchg
aaa
rol
adc
mov
imul
mov
sub
fists
mov
enter
and
sub
bound
hlt
lods
filds
push
mov
xorl
scas
adc
and
pop
pop
sub
aam
lcall
push
jb
sub
jge
insl
xchg
lea
sbb
fistl
add
cld
es
dec
mov
jns
mov
sahf
jb
repz
out
add
jecxz
loopne
inc
pop
mov
sbbl
inc
sub
aad
sub
inc
stos
lods
mov
add
aas
sub
adc
xchg
inc
in
stc
mov
pop
xlat
test
sub
dec
adc
scas
mov
dec
mov
lods
addr16
in
movsb
dec
adc
and
movsb
push
daa
jmp
jp
or
pop
imul
fimull
rorb
fwait
cltd
fsts
sbb
fdivr
xor
sub
cmp
pop
daa
push
inc
inc
sar
cld
fldcw
xor
pop
aad
jecxz
andb
push
dec
lcall
rolb
jmp
fucomi
stos
movsb
mov
jb
mov
in
xor
sbb
sub
addr16
das
sbb
jp
rolb
rcr
in
xlat
dec
xor
in
outsl
aam
int
mov
leave
test
mov
ret
std
jmp
scas
pop
or
or
leave
pop
ljmp
repz
push
sbb
inc
jns
dec
mov
pop
out
push
mov
push
or
xor
pop
inc
mov
pop
int
dec
adc
adc
int3
mov
xlat
int3
loope
sub
cmp
jg
cwtl
dec
mov
call
out
mov
and
adcl
je
jl
lods
mov
ljmp
testb
xchg
dec
xchg
mov
call
sub
cmp
cmp
data16
xchg
das
cmp
mov
mov
sbb
shr
fs
push
or
ss
xor
and
push
xor
push
js
xchg
int
jns
in
and
movsb
jne
and
lahf
cmpsb
xchg
mov
push
push
aad
xchg
shll
pop
or
mov
add
lock
nop
xchg
ljmp
adc
xor
or
mov
push
jl
arpl
movsb
push
push
lods
and
xchg
cmc
mov
inc
add
cld
xor
repz
pop
adc
loopne
test
mov
out
ja
dec
cld
pusha
pushf
mov
hlt
inc
hlt
xchg
jne
sub
pop
jmp
jp
popf
sub
pop
inc
clc
xchg
push
push
imul
jno
fnclex
pop
fs
out
jecxz
sub
xor
insb
sub
xchg
push
insb
cli
cmp
repz
fs
popl
mov
int3
pusha
add
and
lret
jp
mov
sti
clc
mov
mov
push
lcall
mov
inc
negb
into
pusha
subb
sbb
dec
push
jns
aaa
iret
scas
movsb
jg
fisttps
mov
call
and
cwtl
xor
fstps
add
and
nop
cmc
adc
or
xor
dec
fcomps
enter
mov
xor
paddsw
jge
pop
sbb
aaa
test
push
xor
leave
lds
outsb
sbb
xlat
jno
push
outsb
add
cmp
xor
xchg
js
and
lock
nop
mov
push
int3
mov
sbb
jae
jb
iret
loopne
icebp
jns
arpl
das
fsubp
push
sub
add
andb
xchg
mov
and
push
push
mov
jae
popa
adc
inc
dec
push
sub
mov
xlat
sbb
push
mov
stc
jbe
push
pop
mov
cmpsl
add
enter
mov
and
or
push
arpl
push
cmc
addr16
imulb
movsl
inc
fcmovu
adcb
ds
es
out
sarb
sbb
mov
fucomi
bound
pop
add
jmp
mov
shrb
fwait
shlb
mov
dec
andl
sub
aam
mov
adc
pop
loopne
es
ljmp
and
inc
jle
or
repnz
xchg
je
or
push
in
mov
cwtl
mov
pop
lods
inc
jns
sub
xor
mov
iret
aaa
icebp
lret
pop
push
shlb
cwtl
popl
mov
lret
into
cmp
out
xchg
iret
or
imul
and
scas
add
mov
push
push
push
xor
cld
stc
test
aam
lods
loope
xchg
add
movsl
stos
xlat
push
push
dec
out
add
dec
sbbl
and
shlb
or
enter
and
xchg
and
cmp
je
lds
or
jnp
out
sbb
mov
call
dec
xlat
and
mov
bound
or
push
ss
and
lahf
and
loop
inc
or
cmp
xor
lcall
add
xor
loopne
jge
and
mov
mov
or
xchg
pop
cmp
popf
loop
enter
mov
sub
adc
adcb
test
lods
popa
jo
sbb
push
repz
stos
push
xor
or
push
and
fidivrl
jle
adc
in
inc
fdivrs
dec
mov
scas
or
xor
in
fiaddl
nop
lahf
xchg
icebp
push
jo
sub
fwait
xlat
cmpsb
push
lods
fcmove
dec
mov
bound
adc
xchg
sub
outsl
ds
xchg
and
cmp
dec
outsb
inc
movsb
pop
jns
lock
daa
lea
sub
add
cmp
jg
mov
ss
js
dec
jp
js
in
sbb
inc
inc
enter
fisubrs
sub
adc
jecxz
push
mov
sub
jmp
ffreep
aas
or
xchg
mov
xlat
aaa
outsb
xchg
mov
aas
lahf
imul
mov
add
push
dec
mov
mov
push
in
mov
mov
imul
and
push
jb
addr16
fisttpl
iret
adc
pop
adc
icebp
ljmp
push
dec
divl
or
and
and
push
pop
test
xor
and
pushf
cmp
das
mov
cmp
cmp
xlat
push
push
push
jl
dec
inc
lret
adc
imul
jns
dec
cwtl
push
subb
and
mov
int
xchg
popa
sbb
fisttpl
jae
push
mov
mov
repnz
push
pop
cli
add
adc
push
fsubr
daa
mov
popa
aaa
aad
xchg
mov
int
es
aaa
shlb
sub
mov
or
mov
cmpsw
mov
xor
outsb
ss
ss
cmp
repnz
mov
test
pop
jge
test
sbb
mov
lret
imul
arpl
sub
sbb
push
stc
sbb
ret
cmp
xor
mov
push
pop
addl
pop
cwtl
adc
push
dec
jmp
add
out
mov
div
js
int
jmp
sub
mov
mov
cs
sub
xor
sti
mov
inc
inc
in
out
and
pop
iret
mov
inc
fidivrs
inc
out
dec
or
xor
shlb
jle
inc
xor
icebp
cmc
mov
pop
ret
and
pop
out
jp
dec
data16
addb
pop
xor
movsb
inc
outsb
mov
mov
mov
jge
inc
fwait
nop
mov
push
je
push
xor
insb
daa
lock
mov
dec
daa
push
ds
xor
and
xchg
fsubl
cwtl
gs
mov
jecxz
and
insl
in
add
or
or
pop
xchg
xor
loop
mov
xor
mov
dec
mov
je
cmp
jmp
xor
mov
pop
lods
test
insb
lods
notb
xchg
dec
scas
dec
and
mov
fcmovne
push
add
and
clc
cmp
mov
pop
push
cmc
dec
jle
in
xchg
inc
mov
ds
fwait
mov
bound
das
fldl
mov
dec
push
xchg
adc
imul
das
adc
dec
arpl
push
mov
fmul
movb
mull
sti
push
mov
cmp
inc
shrb
repnz
imulb
cmp
sbb
mov
mov
dec
mov
popa
push
cmp
xor
ss
or
or
sbb
ss
xchg
fadd
mov
push
js
sbb
fcom
xchg
lret
lret
mov
jl
jg
adcl
or
stos
jns
imull
enter
fldln2
and
add
fisubrs
aam
jp
lea
sub
fildl
jns
sbb
jp
mov
adc
push
scas
les
pop
js
xlat
jno
adc
lods
mov
push
outsl
push
test
cmc
push
add
lods
nop
add
mov
push
mov
icebp
cwtl
jl
enter
je
roll
jnp
mov
lahf
mov
cmp
or
lahf
push
cmp
ljmp
test
sub
sub
dec
pop
jge
mov
adc
cmp
pop
mov
mov
mov
cld
add
xchg
or
fcmovnbe
insl
sbb
cli
aam
divb
jg
xor
out
ficompl
fldt
mov
mov
jecxz
push
js
push
mov
cmp
aas
xlat
ret
in
jg
negb
cmp
fwait
outsb
mov
scas
mov
mov
sub
ds
outsl
int3
lcall
les
xchg
sbb
je
out
out
push
je
pop
sub
cmp
dec
loop
adc
sub
mov
push
jg
sbb
ret
sub
cmpsb
jmp
cwtl
push
loop
out
leave
jge
into
repz
lods
ss
and
sbb
aas
pop
cmc
xchg
sti
mov
and
cmp
xor
loopne
ss
push
imul
leave
lods
pop
sbb
or
dec
rcl
scas
mov
in
loopnew
fdivrl
inc
icebp
test
jge
push
fdivrp
adc
jp
js
fdivl
lahf
sarl
into
xor
jbe
call
mov
cltd
adc
xchg
or
decl
jl
dec
mov
aaa
fs
push
test
jecxz
sub
jg
movsb
push
flds
push
out
inc
sbb
into
out
sub
pop
push
adc
aad
popf
jle
js
and
shlb
mov
insb
jp
pusha
fistpl
add
cmp
xor
lea
push
into
mov
lock
lret
lds
dec
mov
dec
es
and
nop
pop
das
adc
sbb
add
js
aam
adc
mov
out
pop
in
or
mov
dec
data16
imul
ds
adc
jne
cld
in
clc
cmpsl
dec
lcall
cld
cmc
and
pop
jmp
out
sbb
jb
nop
ror
sbb
and
sub
shll
mov
fimuls
repz
insb
out
test
fdivrl
cmpl
subb
push
and
xchg
pop
je
ljmp
sub
mov
add
fcmovbe
je
in
inc
jb
hlt
and
jmp
leave
outsb
or
lret
fisttpl
lahf
shrl
sub
adc
mov
dec
pop
dec
inc
imul
es
xlat
out
and
ret
mov
mov
push
lods
mov
filds
cmp
jnp
inc
out
cmp
ja
or
push
jno
repz
fdivp
sub
imul
xor
bound
in
mov
jnp
lock
daa
inc
push
mov
in
sti
stc
fucomi
lods
popa
leave
or
dec
ja
stos
or
jg
jb
or
lret
lahf
pop
cmove
push
mov
lods
notb
sbb
pop
dec
xor
out
mov
dec
or
mov
lods
cs
mov
gs
push
mov
sub
leave
out
jle
imul
jb
sub
bnd
gs
push
xlat
jae
push
inc
out
jo
or
inc
popf
cli
cmp
xor
push
push
jno
enter
inc
add
out
repnz
int3
ja
mov
mov
mov
aad
push
or
aad
in
cmpsb
mov
je
add
xchg
std
and
loop
jmp
ret
sub
inc
pop
jmp
lea
popf
pop
jne
flds
or
arpl
sbb
jmp
and
sbb
movsb
sahf
gs
push
pop
lret
cmp
and
inc
popa
cmpsb
nop
push
inc
mov
loope
inc
jmp
mov
inc
pusha
mov
lcall
cs
shlb
mov
das
mov
cli
cltd
or
movsl
jb
mov
sbb
and
mov
in
nop
jae
mov
int3
adc
nop
cwtl
sub
adc
mov
xor
arpl
mov
sbb
mov
jb
mov
push
stc
push
into
xor
sti
lcall
pop
shlb
lret
insb
cmpsl
dec
sbb
cmpsl
int
jns
loope
jg
fwait
lcall
or
pop
mov
lret
addl
mov
fstps
mov
mov
movsb
add
or
mov
push
add
jo
lret
test
out
adc
stc
int3
test
out
or
or
movsb
repnz
inc
int3
mov
inc
mov
inc
fistl
pop
iret
popa
mov
push
jno
shll
adc
xor
lock
ficomps
cmpb
and
shll
stos
cmp
fstpl
leave
mov
lods
mov
xchg
outsb
lods
mov
and
nop
xor
mov
mov
lods
out
ret
dec
cmp
and
inc
insl
mov
dec
or
in
push
push
leave
popf
lock
aam
cmp
mov
xchg
jne
dec
dec
mov
cwtl
loope
xchg
fs
push
lret
js
adcl
xor
cltd
pop
gs
jg
xor
pop
rcrl
in
xchg
cs
dec
mov
inc
cld
outsl
imul
lret
cmp
sahf
push
test
inc
mov
pop
jne
add
sbb
xchg
out
dec
leave
xchg
xchg
xchg
or
jne
push
push
pop
pop
sbb
movsl
jne
inc
jno
pop
dec
adc
pushf
outsb
mov
xchg
mov
es
leave
cwtl
jl
xchg
fidivrs
repz
adc
jno,pt
push
les
push
or
cmp
jno
push
xchg
dec
fs
dec
jecxz
sub
cmp
pop
ljmp
dec
or
jmp
es
in
adc
dec
add
lcall
or
push
gs
movsb
cli
mov
movsb
test
sahf
out
jecxz
leave
sahf
icebp
cmp
leave
push
xchg
mov
xchg
inc
add
inc
xchg
xlat
push
ljmp
test
xchg
fwait
sarl
fwait
sub
popf
in
cmp
mov
dec
or
cmp
insl
xchg
inc
sub
or
rorl
mov
fldln2
popa
dec
fbld
imul
sub
inc
cmp
cmp
add
dec
pushf
jl
ret
or
hlt
jle
sbb
sub
mov
enter
or
inc
xchg
and
lret
or
push
sub
pop
or
push
pop
inc
dec
push
sahf
sarl
adc
shll
cmp
sbb
sbb
jp
dec
add
or
or
dec
pop
stos
insl
fisubrl
mov
shrl
adc
jmp
cmpsl
push
ja
adc
test
xor
sbb
pop
sti
jle
std
and
inc
outsl
rcrl
andl
je
fwait
insl
js
pop
xlat
sbb
cli
jmp
jmp
and
xchg
pusha
das
inc
inc
mov
push
push
enter
inc
clc
or
nop
shl
fldenv
mov
mov
adc
cmp
pop
enter
adc
sub
mov
jge
sbb
mov
outsb
popa
mov
pusha
fs
cmp
mov
or
test
stos
or
inc
mov
push
shlb
into
mov
jnp
jae
cmpsb
icebp
stc
les
inc
inc
mov
and
sbb
idiv
pop
inc
xor
das
mov
mov
push
fsubl
movsb
pop
push
pop
shll
jge
dec
or
push
adc
mov
push
push
mov
fistl
fnstenv
fistpl
outsb
pop
and
pop
repz
sti
pusha
in
ja
sub
ficoms
pop
jg
adc
adc
sub
es
jle
xchg
int3
pop
add
fisubs
and
daa
push
mov
inc
cli
repnz
lods
inc
dec
les
xor
and
and
leave
out
ret
adc
lods
mov
sbb
outsb
lods
vpandq
aad
fmul
sub
enter
adc
pop
cld
push
add
int3
sahf
adc
hlt
adc
push
cmp
jno
xchg
pusha
jae
cltd
repnz
sahf
out
sub
mov
xlat
fnstsw
xlat
pop
xor
cmpsb
repz
and
jg
jbe
sub
pop
mov
mov
jae
imulb
sub
sbb
cmp
lahf
mov
cltd
push
mov
or
mov
adc
sbb
add
daa
sar
addr16
daa
push
shlb
fnstenv
rcrl
shlb
pop
roll
lock
test
sbb
mov
scas
loopne
push
sbb
mov
cld
ljmp
push
dec
stos
ror
jmp
daa
ficoml
call
les
push
es
repz
inc
dec
and
fsubrp
dec
ret
stos
push
ret
mov
mov
dec
loop
inc
fdivrl
jecxz
sub
movsl
in
xor
xchg
jb
sbb
cs
inc
pop
inc
mov
xor
sti
add
inc
xchg
lea
pop
xchg
je
xchg
push
cmp
inc
adc
ds
dec
outsb
sahf
cmp
in
jmp
aad
push
xchg
roll
mov
mov
inc
jnp
xchg
push
and
scas
push
xor
adc
push
push
in
mov
pusha
iret
jne
in
stos
dec
cli
gs
mov
mov
xchg
sbb
lds
sbb
dec
push
sbb
xchg
or
xchg
insl
or
add
push
mov
outsb
lret
popa
pop
fs
mov
movsl
push
cmp
jg
setnp
push
adc
jl
inc
push
fmul
mov
shufps
jp
dec
adc
pusha
dec
out
ret
mov
mov
ret
mov
pop
inc
cltd
lods
scas
cltd
rclb
dec
adc
test
pop
jp
cs
ljmp
lcall
std
js
mov
xor
push
into
adc
imul
mov
mov
in
cmp
pop
xor
ljmp
mov
mov
cmc
inc
xor
int3
fldenv
and
mov
jae
sbb
push
inc
cmp
popf
loop
add
jns
inc
xor
mov
sbb
jo
outsl
shl
xchg
je
jns
lds
shll
lcall
mov
fnsave
enter
js
jle
in
adc
xchg
out
lret
loopne
rclb
mov
add
mov
addr16
and
popf
imul
shlb
addr16
adc
out
loopne
push
sbb
xchg
int3
push
mov
jecxz
pop
adc
sbb
outsb
rorl
push
repnz
repz
and
xor
push
fimull
insl
mul
jo
inc
pop
add
lret
test
fsts
mov
pop
xlat
out
test
lods
mov
movsb
ficompl
rcrl
dec
dec
fstps
movsl
mov
push
shl
cmpl
add
inc
ret
fldenv
jo
stos
mov
loopne
je
ss
stc
jo
orb
out
jecxz
sub
xchg
cwtl
sti
pop
push
rorb
mov
pop
mov
out
xor
sbb
mov
mov
fstl
pop
dec
loop
adc
jecxz
nop
push
aaa
test
loope
dec
mov
xor
lds
cmpsl
incl
push
daa
cld
nop
sti
movsl
mov
int
jns
andl
xchg
aas
adc
pusha
int
jae
scas
je
aad
lods
scas
test
jno
inc
jp
clc
adc
dec
out
mov
jecxz
ret
xlat
daa
adc
inc
pop
xchg
mov
push
inc
inc
fsubrs
imul
add
jne
sub
fisubrl
outsl
jge
ficompl
jg
stos
and
mov
pop
mov
sahf
pop
mov
loope
pop
or
jns
fisttpl
lahf
xchg
mov
jb
push
lock
fwait
mov
popl
mov
imul
aaa
aad
mul
cmpsl
stos
pop
in
add
popf
mov
xor
pop
sub
inc
cmp
jecxz
mov
js
pop
jge
dec
data16
movsl
xor
pop
push
sbb
iret
push
lods
or
aad
jmp
push
lock
pop
ds
decl
fs
or
out
mov
es
test
pop
inc
jns
mov
daa
mov
test
in
pop
insb
dec
push
dec
xchg
xor
out
fildll
sbb
xchg
inc
outsb
loopne
xor
mov
jnp
scas
cmp
out
mov
or
movsb
aas
push
push
mov
iret
jp
mov
cwtl
pop
sub
mov
mov
neg
cmp
mov
fsub
sbb
outsb
pusha
mov
cmc
insl
decb
xor
in
popf
cmp
sbb
stos
mov
add
out
addr16
popf
xchg
mov
fstl
sub
cmc
mov
jns
sbb
lahf
push
int3
push
in
hlt
ret
test
fstpl
arpl
inc
and
sub
sub
xchg
roll
mov
push
adc
sub
lret
mov
xlat
and
into
in
sbbl
jno
mov
jno
mov
ljmp
pop
mov
jbe
mov
jb
pop
lahf
sti
xor
iret
repz
pop
push
fadd
loop
push
das
sub
lcall
add
mov
mov
ja
cmpsb
pop
mov
mov
ja
addr16
cmp
inc
mov
xlat
jmp
lahf
mov
mov
stos
add
xchg
lods
cmc
inc
pop
xchg
lea
icebp
mov
mov
rcll
or
je
lret
js
inc
rorb
xchg
into
cmp
cmpsb
loopne
imul
je
push
das
adc
inc
icebp
aad
sbb
cmp
cmp
pop
cmp
push
sub
or
dec
icebp
adc
jne
sbb
add
xlat
jp
mov
jecxz
jae
insl
xchg
or
jnp
push
std
mov
adc
cmpsl
out
jle
push
adc
jne
push
aad
fwait
adc
dec
mov
scas
stos
loop
cmpsb
dec
adc
push
ss
leave
push
jnp
sub
dec
cmp
mov
or
xchg
lret
push
pop
and
lahf
lret
adc
mov
ds
cmp
xor
or
leave
rcrl
das
adc
mov
jo
outsb
lcall
mov
inc
mov
cmp
jns
pop
fldl
cltd
fcoms
jecxz
pusha
xchg
scas
adc
cld
sti
scas
mov
push
mov
into
mov
pop
rcll
xchg
xor
xchg
or
push
sahf
pop
test
push
lret
inc
or
mov
push
jmp
test
aas
lods
lds
xor
movsb
mov
or
lods
lahf
lock
aaa
cltd
mov
mov
add
rol
lret
iret
scas
sti
mov
fisubs
push
stc
outsb
lods
dec
xor
inc
fimull
mov
mov
pop
data16
movsb
xor
pop
sub
sub
or
dec
cltd
xchg
adc
in
pushf
fnsave
and
mov
mov
ret
adc
push
jnp
dec
cmp
dec
pop
pop
cld
xchg
sbb
mov
ffreep
xor
push
sahf
fimuls
dec
inc
js
and
jb
loopne
and
bound
and
sahf
cmpsb
lock
dec
testb
cld
xor
push
mov
into
jecxz
mov
or
dec
and
subl
fs
cli
and
push
fisubl
xlat
sbbb
add
xchg
xchg
push
mov
sub
mov
mov
adcb
push
outsl
out
mov
pop
insl
cwtl
cmp
inc
popa
repz
ds
gs
rcll
pop
pusha
sub
xlat
mov
std
sbb
dec
shl
movsb
movsb
mov
je
jbe
mov
inc
jg
sub
jmp
sbb
sbb
xor
lods
mov
cmp
sbb
sahf
pand
lea
push
and
scas
sarl
popf
push
add
je
nop
xchg
mov
outsl
lods
sub
and
sbb
push
push
fadds
xchg
pop
xor
das
subl
sub
inc
mov
inc
push
outsl
sbb
fmuls
and
leave
fsubrl
mov
xor
roll
movsb
enter
add
lahf
mov
sub
outsb
mov
mov
add
std
jno
inc
mov
lods
iret
xor
ja
dec
inc
mov
push
movsl
xor
and
scas
stos
dec
inc
jne
xchg
test
dec
pop
mov
lret
rcr
imul
pop
mov
filds
outsl
xchg
sbb
addb
hlt
jp
test
clc
add
lret
outsl
stc
xchg
sub
loop
fdivrs
push
jb
cmp
jmp
pusha
aaa
test
sbb
lods
loopne
inc
in
jle
xchg
outsb
and
inc
mov
addr16
jl
mov
ja
lds
or
adc
addr16
or
rorl
fdivs
cmpsl
or
fimuls
push
inc
test
fwait
setae
mov
fsubl
lcall
sbb
xor
or
adc
testl
push
out
mov
jmp
mov
lea
mov
outsb
jb
leave
sub
xor
and
xchg
ret
and
dec
xchg
mov
mov
adc
sbbl
stc
popf
xlat
or
mov
xchg
lahf
shll
mov
out
xor
jmp
aaa
into
fstpl
daa
sbb
pop
sub
mov
cs
inc
xchg
push
mov
dec
push
mov
stos
gs
cmpsb
insl
popf
jmp
mov
stos
clc
jns
out
mov
aad
movsl
lods
jp
popw
jmp
adc
and
xor
push
out
in
dec
rorb
mov
adc
cmp
lds
add
push
test
xor
mov
xor
inc
pop
jae
test
cmpsl
rol
test
mov
mov
mov
mov
add
dec
stc
jo
jge
repnz
stc
add
mov
add
mov
idiv
mov
lret
sarl
repnz
xor
and
andb
push
sbb
std
xor
popa
inc
paddsb
ret
xor
pop
imul
in
xchg
mov
js
lds
jmp
fstl
nop
out
mov
jecxz
sub
mov
jnp
jb
in
out
stc
js
push
jb
xlat
mov
dec
stos
test
sahf
outsb
sbb
jnp
or
enter
sub
sbb
or
push
lcall
rcr
daa
aad
loope
inc
shlb
lods
pop
jge
or
push
outsb
leave
xchg
pop
xor
les
iret
mov
sbb
ret
roll
icebp
imul
jae
jecxz
les
daa
cld
sarl
hlt
lods
sbbl
loope
xchg
outsl
inc
pop
mov
mov
mov
pushf
aaa
pop
in
insb
aas
in
add
sbb
sub
lret
hlt
jp
push
ljmp
sbb
in
push
cmp
fcom
pop
hlt
js
scas
mov
loope
insl
in
and
shll
stc
bound
call
inc
push
and
filds
pop
dec
sub
jge
fisttpl
cld
dec
add
sub
sub
aas
adc
loop
adc
cld
mov
add
ret
push
jno
insl
in
movsb
inc
jg
xchg
inc
int3
loopne
xchg
xor
xchg
jns
inc
sbb
js
cmp
xchg
adc
adc
pop
idivb
shlb
daa
push
sub
mov
or
mov
repnz
stos
movsl
mov
scas
das
les
lret
les
loope
mov
cmpb
pop
subl
fmull
push
in
movsb
xchg
mov
mov
jo
xchg
rcr
mov
mov
add
pop
push
stos
pop
out
cmc
les
jnp
sub
outsl
sbb
jno
lods
sub
jl
ret
pop
out
xchg
jg
enter
pop
icebp
jb
loope
cwtl
push
cmpl
xchg
xor
outsb
hlt
popa
mov
sub
mov
lcall
es
mov
add
xchg
mov
test
sahf
test
stos
push
dec
out
call
test
cltd
mov
clc
cltd
inc
adc
mov
jb
push
adc
xchg
mov
mov
push
mov
hlt
rcll
cli
jno
pushl
cmc
cmp
cmc
cmp
pop
test
fidivrs
and
test
cmovge
fmul
in
mov
out
xchg
xor
adc
jns
pusha
ret
jmp
dec
cmp
popa
lret
sbb
test
lret
stc
fadd
jmp
movsb
mov
ds
mov
cmp
add
inc
inc
loopne
add
push
xorb
test
jae
pop
test
inc
mov
repnz
sbb
jmp
push
popf
ja
pop
out
aad
cld
lcall
rorl
test
mov
xor
xor
pop
jmp
jo
ss
mov
cmp
arpl
inc
sbb
iret
hlt
jnp
arpl
jbe
and
mov
sub
sub
gs
test
ret
jle
add
mov
jno
lods
icebp
and
fndisi(8087
cmp
dec
inc
out
arpl
dec
stos
pop
pop
inc
test
pop
add
xor
mov
mov
adc
mov
xor
xchg
xchg
repz
std
sub
xlat
fidivrl
test
flds
or
scas
ret
and
xchg
les
int3
ftst
mov
xor
mov
in
cltd
das
fidivl
cmc
pop
aas
fildll
inc
dec
xchg
mov
ss
idiv
pusha
std
jb
pop
push
lds
jo
sbb
pslld
inc
sahf
cltd
popf
cmp
out
pop
mov
mov
mov
xchg
nop
or
inc
sbb
shr
call
out
push
dec
and
jp
inc
fidivl
mov
rolb
mov
pop
andl
xchg
mov
lret
arpl
mov
std
sub
jecxz
in
mov
sub
or
cmp
scas
popf
fst
mov
scas
or
xchg
or
fiaddl
adc
xor
push
mov
lret
xor
loope
fwait
ds
repz
dec
jge
icebp
dec
jmp
pop
inc
push
add
sub
mov
adc
cwtl
fs
mov
or
and
daa
sub
fcmovnbe
repz
lcall
dec
fs
xchg
fsubrp
jmp
aam
xchg
pop
incb
out
icebp
cltd
lods
mov
inc
jne
or
lock
cmp
iret
hlt
xchg
test
or
jns
ds
push
jno
mov
push
xchg
sub
pushl
nop
stc
push
pop
dec
test
cmpb
adc
cmp
pop
mov
lea
adc
mov
movsl
ljmp
test
sub
lcall
add
pop
mov
rclb
sub
repnz
xor
pop
loopne
push
inc
ret
mov
inc
xlat
and
push
shrb
push
rorl
iret
mov
cld
sub
push
cli
fldl
popa
in
adc
ljmp
loope
fcmovbe
rorl
jne
push
shrl
repnz
xchg
pop
rcl
add
daa
push
mov
mov
repnz
mov
mov
divl
fbstp
adc
lahf
jmp
inc
jns
lds
lock
add
lret
or
dec
push
cwtl
fcoms
fsubl
lret
movsb
js
cwtl
ljmp
mov
inc
xchg
scas
je
lods
ds
out
incl
cwtl
mov
lret
mov
repz
mov
dec
movb
pop
mov
das
cmp
sbb
mov
pop
mov
adc
loop
adc
lahf
mov
xlat
and
std
pushf
addb
sub
jmp
vpaddusb
pop
cmp
das
and
imull
fs
cmp
lods
cmpl
lods
cs
jle
iret
jbe
lahf
cltd
xor
sub
adc
fcmovu
jb
icebp
lock
and
sub
sbb
aas
xchg
out
mulb
aas
and
mov
dec
pusha
pop
mull
sbb
dec
loop
xchg
jno
push
ffreep
ret
push
push
mov
jnp
or
jp
mov
rorl
and
jp
filds
pusha
fucomip
aaa
shl
jne
mov
in
or
jb
fldenv
xor
xchg
lret
call
lock
insl
lods
xor
dec
xchg
add
mov
lcall
mov
loope
loopne
jge
cwtl
jge
dec
cld
les
test
dec
mov
dec
sub
nop
loopne
dec
pop
cmp
into
out
inc
jbe
xchg
ror
aam
outsl
es
in
out
mov
cmpsl
dec
jne
xchg
pop
or
adc
scas
ret
cmp
dec
test
mov
rcrb
sub
clc
xchg
xchg
pop
in
loopne
xor
adc
bswap
mov
testb
push
inc
stos
cwtl
push
and
jle
sub
repz
push
mov
sbb
insl
xlat
je
cs
aaa
lcall
jl
testb
cmp
jmp
mov
loop
iret
or
sbb
lcall
mov
jecxz
cltd
imul
test
sub
test
fwait
in
lods
outsl
or
xor
bound
pop
pop
xchg
scas
in
inc
cmp
pop
cld
stc
mov
stc
mov
sbb
jbe
xchg
dec
call
adc
das
or
push
cmp
fsub
inc
xchg
jbe
mov
iret
pop
adc
ja
inc
adc
pop
jecxz
pop
out
insb
and
adc
insb
cs
js
xchg
mov
jno
sbb
push
pop
sbb
leave
dec
xchg
addb
fs
jg
fstpt
sub
lea
mov
jmp
testb
mov
add
xor
cmp
mov
xchg
iret
mov
into
pop
out
pushf
popa
push
cmpsb
push
push
cmp
je
int
mov
rcrw
scas
fs
mov
popf
int
movsl
movsl
mov
add
push
xchg
das
push
xor
dec
sub
pop
stos
pop
fwait
jl
xchg
mov
inc
cs
int
cs
adc
iret
stos
sbb
leave
push
imulb
call
imul
adc
aaa
sbb
push
mov
mov
dec
cmp
fdivrs
in
bnd
and
or
push
mov
adc
cmp
test
shr
lret
not
into
jmp
xor
arpl
inc
pop
cltd
adc
add
adc
mov
or
test
outsb
enter
nop
addr16
xlat
pop
xor
sbb
cmp
mov
cmp
mov
fdivs
adc
ss
fdivp
sub
mov
jb
inc
and
sbb
push
test
xchg
jmp
push
mov
sbb
inc
jg
sub
in
std
cmpsl
sub
xorb
mov
fcompl
cld
mov
popf
insb
push
pop
xchg
sub
and
mov
cmp
pop
cli
mov
push
test
add
stos
das
inc
sub
push
out
stos
sbb
ror
decl
lcall
push
stos
inc
aam
shll
sub
add
pop
aaa
test
add
sub
lods
sahf
sar
repz
xlat
pop
cmp
bound
fistps
or
sub
cmpl
testl
or
lock
xor
sub
xor
imul
cmp
adc
js
leave
xchg
add
and
out
scas
pop
mov
out
stos
lods
push
jb
cwtl
xchg
negl
and
cmp
loope
dec
cld
sbb
outsl
nop
aas
les
out
call
out
enter
sti
mov
adc
add
cld
stos
cmp
pop
loope
cli
dec
test
dec
into
cli
flds
add
sbb
jl
mov
ret
jge
jb
xchg
pushf
stos
lods
test
sbb
negb
test
sub
sbb
cltd
push
sbb
sbb
popa
push
jbe
cltd
movsb
fadds
bnd
or
bound
xchg
aad
bswap
sbb
pop
fs
xchg
andl
loop
xchg
inc
xchg
clc
push
jl
mov
scas
mov
sbb
mov
dec
out
xor
pop
mov
out
in
iret
icebp
data16
mov
std
adc
mov
mov
fcompl
or
xchg
jle
add
cwtl
mov
jb
movsb
arpl
gs
fwait
rcll
je
scas
enter
hlt
scas
mov
adc
add
addb
popf
add
pop
and
xchg
mov
xchg
push
lahf
dec
sbb
lds
or
sbb
test
sub
push
adc
and
ret
das
ljmp
dec
pop
aas
pop
adc
lahf
pop
xor
xor
xchg
dec
aad
loopne
jecxz
out
ret
push
add
sti
add
jecxz
or
sub
jge
xchg
push
cmp
push
out
mov
xor
cli
mov
xchg
ds
push
inc
inc
mov
xchg
fwait
in
ljmp
jno
or
sahf
mov
or
lock
push
pop
dec
add
dec
dec
outsb
fisttpl
push
adc
nop
std
sub
aas
mov
aaa
and
push
adc
call
jno
sbb
jmp
xchg
out
xchg
and
and
xchg
push
daa
dec
fmuls
test
push
push
pop
sbb
rolb
fsubrs
mov
pop
cli
push
into
jae
test
js
inc
cs
jmp
int
sub
iret
testb
xor
sub
jp
pop
mov
test
xlat
movsl
add
push
stos
icebp
push
cmp
dec
pop
add
mov
fs
mov
mov
aas
ljmp
addb
jmp
or
push
pushf
das
loop
je
dec
cmp
addl
fmull
lods
xor
test
in
mov
loope
enter
jno
xor
lock
pop
sbb
in
sub
lods
cmp
sbb
mov
xchg
add
arpl
cwtl
mov
mov
pop
fxch
or
jmp
mov
or
imul
enter
mov
fs
lds
ret
xorl
fcoms
repnz
into
and
bnd
xor
out
or
cltd
push
call
rcll
jp
ds
fmull
jno
sbb
seta
mov
sbb
hlt
and
pop
outsb
jae
and
cs
aas
push
in
das
mov
mov
pop
cmpsl
divb
or
push
sbb
push
pop
loopne
outsl
out
jo
sbb
mov
jmp
xor
inc
data16
add
push
roll
push
sub
adc
sub
xlat
xor
cmp
and
shrb
aad
popf
sbb
mov
mov
mov
insl
std
add
mov
xchg
add
pop
fwait
mov
mov
outsb
lcall
and
in
pop
rorb
add
ljmp
adc
jg
jbe
imulb
add
mov
nop
xchg
insl
adc
je
jo
fldt
and
xchg
hlt
mov
and
insl
stos
and
xchg
ret
xchg
insb
sub
pop
in
jmp
mov
je
addl
movsb
shl
cmp
push
lods
mov
push
fistl
lock
pop
or
and
sbb
push
dec
dec
adc
xlat
sub
mov
jo
in
movsb
arpl
xchg
mov
xor
les
je
ret
sbb
in
sub
test
push
jge
push
add
mov
imul
div
jp
dec
mov
inc
lods
pop
xchg
sbb
cmp
jno
inc
jecxz
push
sahf
xorl
mov
adc
ljmp
pop
repnz
sub
cmp
pop
test
fwait
jle
adc
pop
xchg
sti
pop
sbb
aam
in
sub
mov
push
lcall
sub
lds
loopne
cli
outsb
scas
push
jae
imul
dec
cmp
mov
xchg
push
outsb
push
shll
pop
jb
xor
imul
shlb
fisubrl
jae
jmp
dec
jnp
push
mov
lds
and
daa
repz
xorl
cmp
sbb
subb
mov
mov
pop
push
orb
inc
inc
pop
leave
push
pop
pop
int3
mov
ja
inc
rclb
jg
jnp
or
fimuls
into
test
mov
mov
into
dec
cmpb
dec
add
add
push
cmp
aaa
pushl
insl
adcb
repz
pop
pop
test
in
adc
and
inc
shrl
mov
xchg
shlb
pop
mov
push
rorb
jmp
test
bound
inc
rorl
cmpsb
outsl
dec
jb
out
sarl
mov
fadds
filds
arpl
fs
jmp
mov
out
loope
sub
andb
popf
cmpsb
inc
shr
scas
bswap
testb
jge
iret
popa
stos
pusha
ljmp
loopne
cmpsb
les
cmpsb
lds
pop
add
mov
fs
mov
inc
cmpsl
xchg
bound
xchg
cmp
aas
push
dec
mov
pop
mov
and
orl
enter
push
pusha
push
inc
xchg
aad
push
adc
shrl
imulb
push
xor
in
and
loop
stos
cwtl
or
cwtl
push
jo
incb
mov
mov
lock
ja
and
or
xchg
repnz
or
xchg
inc
enter
dec
inc
repz
adcl
mov
roll
stos
mov
loop
xchg
add
or
cltd
inc
sub
rclb
int
sbb
add
dec
das
push
jmp
or
cmp
jp
fildll
push
fisttpll
dec
mov
inc
repnz
aad
notl
mov
push
and
push
mov
fsubrl
cmpsb
adc
or
mov
enter
test
mov
inc
mov
inc
lcall
int
pop
push
adc
outsb
lcall
test
lds
aad
cld
jno
popl
cmp
push
and
imul
lods
inc
sub
mulb
push
mov
insl
mov
inc
mov
out
dec
cmp
adc
adc
cmpsl
dec
mov
jp
lds
lods
mov
push
mov
insb
out
ffreep
aad
out
out
inc
add
add
stos
jo
adc
subl
subl
sub
sub
sbb
mov
mov
fldenv
out
pop
sub
cmp
dec
add
cmp
push
insb
jo
in
call
nop
fisubl
xor
xchg
xchg
adc
arpl
adc
jns
es
fdivl
push
lods
clc
lock
scas
dec
inc
jge
push
xchg
int3
pop
test
lods
mov
jne
adc
movsl
std
cmpsl
cli
sbb
push
or
sbb
popl
xor
jmp
fiadds
ret
mov
scas
sahf
add
xchg
or
pop
in
pop
je
or
notl
dec
adc
ljmp
movsb
pushf
xchg
and
dec
jae
movsl
pop
cmp
aad
sub
insl
jo
pop
mov
add
cmp
imul
dec
loop
les
filds
lahf
inc
push
fildl
out
and
mov
sub
xchg
testb
dec
aas
mov
movsl
inc
dec
loopne
mov
mov
lock
cli
jns
jp
pop
imul
mov
push
fisttpl
out
roll
xchg
aas
orb
repnz
dec
push
fmuls
aad
xor
mov
outsl
mov
jmp
and
add
cmp
subl
mov
lds
in
sbb
jo
aam
mov
les
sbb
dec
xchg
xchg
cwtl
je
lahf
mov
stos
mov
ret
out
inc
andb
cmp
jo
stos
xchg
dec
sub
xor
dec
in
sbb
mov
je
pop
xor
mov
leave
inc
cld
jge
pop
xor
mov
mov
adc
ljmp
jae
sti
cmp
pop
mov
xchg
inc
addr16
out
adc
fstl
and
xor
and
cli
or
jbe
cmpsl
test
shl
cmp
sub
aas
test
ret
test
aam
mov
or
scas
test
and
popf
xor
dec
cmp
shrb
and
inc
xchg
mov
inc
mov
dec
add
movsl
push
mov
repnz
sbb
aam
push
and
or
inc
repz
pop
push
test
enter
jo
xchg
pop
add
push
sub
mov
lret
sub
shrb
stos
lods
inc
adc
loop
movsl
mov
push
popa
mov
or
mov
lahf
roll
das
js
sbb
popf
aas
push
shrb
xchg
push
and
flds
xchg
push
ss
lret
inc
ds
or
int
sub
test
call
repz
jp
adc
mov
popa
push
jae
pop
scas
push
xor
xchg
repnz
and
push
dec
mov
push
scas
sbb
xchg
mov
jbe
pop
pop
popf
loop
push
or
or
loop
add
daa
dec
shrl
jp
push
and
xchg
cmp
push
inc
fists
iret
ret
into
push
aad
cmp
dec
adc
arpl
push
cmp
gs
or
dec
cltd
popa
mov
pop
jecxz
jp
mov
sarb
sbb
add
inc
pushl
movsb
jns
mov
fwait
dec
xor
and
mov
addr16
mov
xor
mov
inc
mov
inc
movsb
dec
mov
cmp
fistpl
xchg
mov
mov
fcompl
sub
imul
mov
xor
inc
adc
daa
push
insl
mov
xor
sbb
pop
inc
sbb
mov
inc
jns
push
sub
adc
data16
in
bound
cmp
xrelease
fldt
jne
mov
jo
rcll
cmp
jecxz
or
sub
cmp
xlat
inc
adc
xchg
nop
cmc
popa
jae
roll
aaa
jge
xchg
loopne
test
ja
and
stos
inc
xlat
call
sbb
mov
push
lods
popl
mov
adc
in
test
dec
pop
lods
sbb
stos
xchg
rcll
dec
test
ret
cmp
mov
iret
and
add
fadds
lea
push
cmpsl
lahf
adc
ljmp
add
add
gs
movsl
popf
inc
loope
jge
push
shrb
cmp
mov
insb
ffreep
fcoms
jecxz
jg
or
fmuls
mov
pusha
fs
dec
aad
fidivs
stos
cmpb
sbb
push
lret
xchg
hlt
mov
std
daa
dec
mov
lea
add
outsb
mov
xchg
inc
movsb
rorl
fbld
outsl
and
jecxz
outsl
jo
xchg
std
xorl
pop
shrb
fstpl
ret
xorb
cli
rcll
stos
push
pop
mov
fcomps
inc
aam
mov
mov
loopne
outsb
loop
je
and
push
lahf
dec
xor
inc
popf
cmovae
xor
mov
pop
data16
push
sbbl
pop
sarl
std
mov
pusha
jbe
filds
mov
pop
dec
gs
insl
dec
add
xchg
xchg
adc
das
or
pop
mov
mov
lahf
dec
outsl
push
stos
clc
leave
ret
mov
adc
mov
pop
sub
pop
stc
adc
push
xchg
sbb
scas
dec
subb
ja
mov
jmp
pushf
pop
mov
dec
loope
and
icebp
mov
sub
xchg
lahf
mov
cwtl
mov
pusha
loop
push
je
aaa
dec
mov
mov
jbe
es
mov
icebp
enter
cmp
jae
pop
das
in
xor
mov
push
insb
outsl
ret
dec
xor
mov
sbb
sbb
pop
in
test
es
lea
adc
shl
jae
int3
loope,pn
ror
xchg
cmpb
fistps
push
fbstp
aad
inc
xor
sahf
cmp
xorb
in
inc
ljmp
pop
arpl
xor
aaa
push
mov
xor
mov
aad
push
mov
xchg
xor
push
add
ss
cli
into
push
xor
cs
cmc
jg
out
xchg
dec
cli
mov
push
pop
mov
sahf
xor
inc
lea
mov
jl
dec
sbbl
sbb
nop
mov
sbb
xor
sbb
int
cmp
mov
loope
imul
dec
addr16
jb
das
sbb
ljmp
jecxz
sub
lahf
movsb
test
jne
push
mov
xchg
decl
bound
sbb
dec
outsl
je
fstpt
subl
in
daa
sbb
js
pop
inc
call
inc
cmp
dec
add
dec
stos
cmpb
xchg
pushf
scas
into
push
loopne
adc
sub
sbb
nop
xchg
xor
inc
addb
and
jge
inc
fucomi
lret
scas
nop
push
inc
mov
sti
std
cmp
aas
adc
push
roll
test
pop
sub
imul
xor
out
pusha
adc
popf
or
push
push
lcall
rolb
lea
dec
push
insb
add
pop
sbb
mov
dec
sub
mov
aaa
jo
cmp
dec
xor
pusha
iret
in
fmuls
cld
push
mov
test
xlat
xor
sub
int
push
cmp
mov
fadds
int
cmpsl
addl
movsl
enter
sbb
stos
or
data16
sub
mov
enter
inc
scas
loopne
and
jmp
sub
int3
and
adc
cld
pushf
into
leave
decb
ret
mov
or
jae
repz
mov
mov
bnd
mov
fwait
push
pandn
aad
enter
xchg
add
fldenv
or
pop
cmp
sub
adc
fsubp
jae
dec
push
sbb
jno
push
jg
pop
push
arpl
sub
movsl
icebp
imul
fs
or
das
sub
mov
fld
adc
out
sbb
or
popa
xchg
inc
mov
mov
fstpt
add
test
inc
or
mov
fadd
mov
sbb
or
bound
and
lods
push
js
addb
mov
or
push
bound
nop
push
out
sub
cmpsb
inc
fstl
or
sbbl
dec
ss
jle
mov
jp
mov
inc
dec
loop
aas
sbb
shll
aas
std
xlat
cmp
xchg
out
adc
ss
iret
bound
adcl
sbb
leave
sub
out
dec
and
mov
nop
add
repnz
mov
sbb
fs
push
addr16
jns
outsb
call
push
aad
add
adc
dec
stos
stos
sbb
lcall
push
and
js
dec
out
mov
sbb
imul
dec
cmpsb
sahf
fstl
sub
or
sub
aam
cmp
sbb
testb
es
and
add
sbb
imul
dec
sub
jae
cmpsl
jmp
mov
sti
rorb
stos
int
rcr
and
mov
mov
push
ja
or
ror
shrl
ja
sub
movsb
adc
and
xor
mov
fcoms
jo
jbe
repnz
stos
repz
mov
inc
loopne
in
daa
xor
push
fs
aad
mov
je
or
outsb
test
fstps
adc
pop
push
pop
jge
fs
jg
sarb
jl
pop
or
xchg
push
sub
enter
inc
test
cmp
pop
lcall
aad
shrl
cmpsb
jnp
insb
sub
jl
cld
cmc
mov
xor
fidivl
dec
xor
lods
xor
shlb
and
cmp
add
inc
mov
lods
add
lds
out
xor
shll
pop
jp
mov
and
xchg
repz
sar
scas
inc
rcl
aaa
mov
sub
push
aas
test
jae
push
dec
mov
sub
jbe
adc
out
inc
xchg
leave
js
mov
ficoms
lret
mov
das
sbb
xor
and
rolb
sbb
dec
mov
push
pop
push
pop
les
popf
mov
ja
pop
sub
aad
js
mov
rorb
lds
xchg
xchg
jne
and
shrl
dec
mov
jnp
mov
pusha
pop
push
scas
xor
popf
sbb
es
cmp
pop
fs
jp
mov
shll
divl
adc
or
or
sbb
repnz
cld
in
jne
gs
out
cmp
or
cs
mov
call
mov
test
and
adc
add
andl
push
mov
addr16
push
adc
pop
push
xor
xor
fcoms
pop
call
lock
arpl
popf
cmp
test
and
jg
cld
pop
sbb
push
in
pop
loopne
hlt
dec
scas
lret
and
jg
sub
rolb
mov
or
or
mov
mov
xchg
pusha
insl
jnp
lret
or
es
inc
shll
lea
mov
mov
sub
sti
fdivrs
arpl
mov
sbb
out
sub
insb
andb
addl
adc
dec
call
insl
lret
leave
or
repz
cmc
add
lret
iret
inc
sub
and
test
adc
jp
inc
dec
sbbb
testl
jge
mov
stos
ss
andl
push
icebp
mov
fbld
aaa
and
js
add
bound
cmp
ret
cmp
inc
shr
shrb
sub
fdivr
xor
ret
or
pushf
orl
mov
ds
xchg
mov
pop
enter
ficomps
popf
sub
add
push
movsl
mov
cmpsl
add
jmp
sarl
pop
jl
xor
loopne
and
cmp
xchg
dec
out
lret
push
jmp
jg
andl
mov
jae
stos
sub
pop
and
push
jns
icebp
scas
adc
outsl
inc
adc
cmp
push
mov
stc
pop
adc
movsl
xchg
mov
loop
shlb
addr16
mov
inc
orl
mov
or
and
mov
adc
xchg
imul
pushf
inc
and
pop
sbb
push
mov
mov
dec
and
in
push
out
mov
cwtl
push
pop
xchg
xchg
add
add
mov
mov
xchg
jo
cmpsl
push
icebp
or
in
bound
mov
mov
sub
mov
loope
shrl
add
inc
cmp
int3
mov
test
fs
popa
cmpsl
cmp
stc
sbb
popf
sub
decb
lock
mov
or
or
frstor
dec
pop
jmp
fldl2t
inc
icebp
lcall
cld
jmp
push
add
pusha
dec
stos
popf
leave
adc
push
jl
rcrl
and
cmp
shll
pusha
dec
sub
add
jo
or
push
or
inc
dec
pusha
mov
add
push
add
nop
imul
arpl
ss
or
cmpsb
movsl
push
sbb
sub
pop
mov
or
test
data16
cmp
jmp
ljmp
out
pop
mov
lcall
sbb
outsb
sarl
sbb
mov
shlb
fstpt
ret
xchg
jae
cli
nop
sbb
add
daa
or
sbb
mov
test
je
in
outsb
leave
sbb
lcall
sti
outsb
aam
mov
xchg
fidivl
out
cs
rol
mov
or
out
dec
loope
mov
repz
enter
std
int3
add
int
mov
aad
mov
xchg
and
mov
add
mov
enter
imulb
cmp
test
jle
jl
fst
jp
xchg
sarl
rcl
pop
jmp
jge
cwtl
popf
out
repnz
inc
sub
and
mov
mov
loop
xor
repz
pop
rcrb
push
jne
cmp
roll
rol
sbb
inc
jg
pop
shrb
pop
push
mov
xchg
dec
xchg
jmp
jae
add
or
mov
popf
push
mov
ret
hlt
adc
into
jge
and
cmpsb
push
int3
loopne
jnp
add
and
inc
addr16
repz
adc
out
repz
jne
jl
popf
aas
std
stos
cmpsl
enter
pop
cmpsb
bound
lret
xchg
sbb
fisubrs
push
xor
mov
comiss
inc
lea
mov
roll
loope
aam
outsb
pop
scas
jmp
xchg
sbb
int
mov
mov
sub
xchg
stos
stos
fcompl
lock
sahf
es
imul
pop
or
xor
jnp
add
lret
cmpsb
scas
mov
xchg
popa
or
dec
dec
push
adc
push
jl
pop
lods
mov
mov
in
std
xchg
push
cmp
jmpw
nop
icebp
lret
dec
or
lret
add
jg
xlat
cmpsl
jle
jae
inc
daa
and
in
and
adc
jmp
je
scas
jnp
call
stc
xlat
test
es
push
push
lock
into
hlt
push
mov
sub
popa
cmp
or
push
je
hlt
xchg
xor
jbe
in
lock
mov
jno
mov
mov
mov
push
xor
int3
push
sbb
sbb
es
rclb
add
es
out
lods
mov
sub
xchg
pop
xchg
mov
sahf
das
scas
cmpsl
imul
xor
repz
pusha
pop
aas
add
loop
mov
xor
int
movb
decl
aaa
sahf
iret
rcrb
xlat
lock
push
xchg
and
aam
lahf
outsb
jmp
inc
xor
mov
les
push
fs
inc
lea
fcoml
pop
fst
cmp
xor
data16
jne
out
loopne
in
cmp
js
sbb
mov
insb
ja
outsb
pop
std
cmc
push
jp
cmp
popa
mov
test
ljmp
cmpsl
maxps
scas
xor
rolb
daa
pop
push
sub
lahf
fisttps
or
sub
mov
stos
sub
mov
arpl
dec
in
push
and
cli
xchg
icebp
inc
cmpsb
add
fimuls
sbb
push
fwait
add
in
or
lahf
dec
mov
mov
call
mov
mov
mov
push
daa
mov
adc
fsub
add
xchg
imul
gs
jmp
inc
cmc
sub
dec
in
lret
inc
in
push
jns
loope
xchg
loope
test
push
ret
push
stos
flds
mov
or
mov
xor
cli
sbb
xor
mov
sahf
xchg
add
or
cmp
mov
insb
jne
jnp
xor
xchg
add
lahf
lods
push
lcall
filds
arpl
xlat
movsb
dec
loopne
sahf
jge
and
push
clc
xchg
sbb
dec
pop
shl
pop
je
or
scas
imul
aaa
dec
ficoms
mov
jne
mov
cmp
arpl
mov
sub
cmp
add
push
mov
mov
stos
iret
fisttpl
or
in
pop
imul
das
imull
sub
aas
add
inc
stos
push
xchg
shll
movsb
mov
add
pushf
cmp
cwtl
or
mov
sbb
data16
dec
popa
add
inc
xor
push
adc
testl
cmp
mov
insb
cli
int3
mov
sbb
sbb
test
popa
in
mov
xchg
xchg
leave
iret
shl
jle
xor
cli
mov
fdivs
pop
data16
jnp
stos
repz
jno
rorl
into
and
adc
shr
push
or
lcall
dec
pop
bound
cltd
mov
aaa
in
mov
adc
jb
mov
int3
ja
popa
insl
adc
xor
push
outsb
jno
out
jne
inc
mov
pop
push
stc
inc
adc
mov
out
pop
sub
outsb
jb
test
subb
das
aaa
sbb
pop
stos
pop
fcmovnu
push
nop
enter
mov
cwtl
mov
add
xchg
mov
lods
mov
or
mov
stc
adc
inc
push
xchg
addr16
add
xor
sbb
jl
sbb
sti
imul
shl
into
insb
cmp
sti
inc
jo
insl
enter
add
loopne
cltd
inc
ss
sub
sarl
push
je
in
lds
jnp
into
sbb
inc
or
cltd
movsb
test
stc
cs
mov
rcrl
out
dec
adc
cld
clc
sbb
add
jmp
imul
lahf
mov
lods
push
sbb
inc
xchg
jge
xchg
mov
out
mov
out
cmp
mov
inc
aad
es
lcall
lods
sar
dec
ret
fistpl
fiadds
xchg
add
test
inc
imul
sub
add
popf
xchg
inc
pop
loop
xor
push
xchg
inc
mov
inc
push
push
aas
ja
xor
mov
dec
cli
lods
dec
sub
cld
mov
ret
shrl
adc
inc
adc
in
adc
ret
adc
pop
jle
arpl
jl
in
add
sbb
frstor
mov
lds
xor
inc
push
sbbl
push
lahf
and
outsl
push
lret
rorl
out
repnz
mov
out
cs
bound
scas
in
fadds
mov
xchg
adc
lods
fwait
cwtl
imul
jae
or
arpl
and
hlt
xlat
mov
lods
test
dec
pop
scas
mov
push
sbb
pop
outsb
rorb
inc
rorl
insl
jno
into
adc
nop
addr16
add
xchg
je
into
fcmovne
xlat
push
pop
push
dec
jg
push
cmp
ret
data16
jbe
adc
or
pusha
jecxz
inc
fists
cwtl
mov
pop
fidivl
adc
cmp
push
sarl
fldt
add
jbe
pop
dec
pop
and
imul
pop
jecxz
xor
sub
lcall
incl
std
shl
mov
out
std
xchg
lods
stos
cmp
inc
inc
cs
xor
inc
pop
lcall
add
dec
sub
xor
outsl
xchg
push
xor
jmp
cmp
push
lods
push
rcl
mov
popf
orl
mov
mov
or
aas
jo
adc
mov
push
arpl
fists
lret
cs
sbb
rcrl
sub
ret
in
mov
inc
add
adc
cmp
ja
aam
push
iret
mov
aad
xchg
cmp
xor
inc
outsl
jo
cmp
push
add
cwtl
cwtl
dec
and
lret
test
sbb
bound
inc
scas
sarb
mov
push
gs
fcmovb
inc
sti
mov
xchg
mov
incl
lret
xlat
jno
popf
add
bnd
xchg
lret
sub
inc
cwtl
inc
movzwl
cmc
xlat
les
cmpsl
lea
sbb
xchg
adc
scas
fadds
xchg
push
arpl
jnp
cmp
test
xor
inc
sbb
cmp
cmp
imul
xor
mov
pushl
stos
add
xchg
movsl
push
and
fnsave
mov
cmp
mov
sub
fwait
aam
dec
dec
in
pusha
jno
push
subl
add
lods
movsb
adc
mov
daa
call
movsl
xor
inc
movsl
xchg
gs
leave
call
pop
push
fs
aad
add
aam
divb
ss
imulb
loopne
cld
sub
lret
xchg
scas
shll
jl
out
loopne
movsl
out
stos
pop
mov
dec
inc
cmp
fs
xor
les
loopne
fldt
inc
ds
push
xchg
les
std
xchg
xor
imul
xor
ss
lea
pop
xlat
js
xchg
dec
sbb
in
mov
adc
dec
int
test
cmp
fstpl
jmp
filds
les
sahf
mov
and
cmovns
push
pop
clc
cmpsl
repz
inc
and
mov
movsl
add
pop
xchg
stc
repz
fimull
and
mov
xchg
lcall
outsb
in
mov
sti
pop
xchg
push
jae
xchg
inc
cmpsb
sbb
shr
loop
cmp
xchg
jnp
test
je
jmp
xchg
mulb
pop
sbb
repnz
hlt
repnz
ret
pusha
lock
dec
pop
xchg
lock
cld
imul
inc
xchg
icebp
lahf
test
cmp
ret
test
cltd
sbb
aas
inc
imul
ret
frstor
jg
sbb
jmp
xchg
aas
popa
mov
cli
sti
movsl
adc
fsub
leave
ja
push
lcall
mov
lds
rorl
clc
notl
outsl
add
pop
aaa
adc
fucomp
shr
cmp
mov
hlt
sahf
and
shll
xchg
dec
jae
into
shl
loopne
je
loope
sub
dec
mov
das
and
jae
mov
std
inc
mov
cmp
inc
insb
push
adc
mov
aaa
pcmpgtb
inc
stc
pop
nop
jbe
or
adc
fwait
or
in
movsl
fs
xchg
jns
mov
int
mov
cmp
pop
mov
fnstcw
xor
ss
scas
sbb
inc
or
movsl
imul
sbb
or
push
scas
or
or
jbe
call
sbb
test
popa
jp
ffreep
jbe
cmp
and
sqrtps
jg
fiaddl
mov
repz
push
aad
or
jo
xchg
pop
dec
push
jle
or
push
cld
pop
movaps
mov
pop
data16
adcl
adc
std
fs
pop
in
mov
cmc
fsubrl
push
sti
adc
mov
pop
popa
jns
das
gs
out
leave
out
loopne
out
inc
and
mov
cmc
movsb
out
mov
leave
jns
dec
cmp
mov
aas
loopne
int3
aaa
blsfill
out
and
hlt
and
sub
push
adcb
loope
push
fdivr
cmp
mov
loope
fucomp
cmp
add
test
mov
jo
movsl
xchg
int
jbe
mov
dec
hlt
notb
shll
test
xor
cmp
fisttps
fidivrs
mov
rolb
pop
jle
pop
shr
jge
jge
xlat
scas
out
jmp
out
mov
and
mov
or
and
lods
cmc
mov
mov
mov
outsl
cli
sbb
rcrb
ds
call
inc
cld
ret
xchg
jg
mov
call
mov
rol
and
add
std
xlat
cmp
pusha
test
push
mov
inc
shl
lods
xchg
sbb
pop
inc
inc
adc
fsubl
sbb
pop
mov
lahf
cmp
xchg
adc
cmpsl
mov
push
lcall
orb
push
out
popaw
mov
cwtl
mov
stos
pop
popf
sbbb
addr16
in
dec
push
sub
pop
popf
sbb
pop
mov
push
inc
incb
das
cmpsb
fiadds
and
push
movsb
sub
pop
sahf
lock
outsb
adc
icebp
jp
mov
and
les
mov
mov
dec
xlat
cmp
cltd
stos
inc
imul
sub
rcr
push
movsb
movsl
inc
testl
jne
pop
out
or
xchg
add
dec
mov
xor
inc
jle
int3
add
dec
cld
lahf
sub
clc
stc
add
ja
adc
xor
sbbl
arpl
fiaddl
mov
or
add
dec
fwait
icebp
jne
sbb
or
icebp
pop
push
stos
in
or
lcall
mov
xchg
cmpsb
push
aas
jl
lcall
fsubrl
cmp
mov
sbb
mov
pop
mov
mov
scas
sub
jle
aam
jecxz
mov
xchg
movsb
sarl
adc
sbb
ret
mov
push
push
fdivs
pop
jp
mov
mov
xor
movsl
inc
dec
jecxz
out
sbb
mov
jbe
inc
and
adc
test
and
xlat
clc
cmpsb
sub
mov
sbb
xchg
scas
inc
dec
fmuls
call
stc
into
fucomp
sub
stos
mov
sbb
clc
test
inc
fwait
pop
add
inc
xchg
syscall
movsb
in
dec
adc
scas
adc
cmp
dec
imul
hlt
dec
cltd
and
or
aam
nop
push
dec
rorl
jo
inc
or
mov
add
xor
in
aam
xchg
pop
lahf
pop
sbb
push
cmp
movsb
or
push
testl
imul
loopne
rolb
inc
iret
xchg
ss
mov
pop
xchg
fucomp
xchg
clc
aad
or
and
incb
fsub
mov
adc
gs
xchg
lcall
xchg
stos
cli
inc
or
add
xlat
inc
cmpb
int
and
mov
dec
mov
ret
sbb
mov
dec
inc
lea
mov
cs
aaa
das
pop
testl
popa
jg
arpl
stos
adc
mov
loopne
icebp
in
xor
inc
jne
fcmovbe
std
mov
add
push
fadds
scas
jg
js
shl
std
push
pop
aad
sub
jns
enter
mov
test
aas
sahf
mov
test
lods
ss
iret
fmul
jmp
aam
pop
mov
clc
aam
sbb
outsl
inc
mov
cmc
icebp
pop
cmp
add
sub
imul
sbb
repz
push
shl
ret
test
sbb
push
call
roll
mov
es
pop
add
aaa
sub
xor
cli
out
rclb
fsubrl
cwtl
push
mov
lods
mov
add
adc
imul
pop
fldcw
dec
xchg
test
jecxz
scas
repz
test
xchg
jnp
mov
loopne
test
cmp
add
jne
sbb
mov
and
mov
stos
pop
adc
and
sbb
js
inc
xchg
push
repnz
movsl
aam
push
inc
sub
inc
fdivrs
pop
cld
cltd
add
ljmp
pushf
ret
mov
jns
xor
pop
lahf
call
and
icebp
out
repz
or
popa
or
insb
and
inc
xchg
xor
leave
mov
xchg
js
shrd
pop
adc
shrb
int3
in
mov
or
sbb
popa
std
cmp
stos
fs
or
loop
pop
jae
test
rorl
lahf
mov
stos
pop
mov
pop
insb
dec
in
je
mov
pop
jno
mov
xchg
in
cmc
jle
push
inc
sarl
testb
lock
data16
ss
mov
pop
hlt
xor
rorb
add
dec
shll
cwtl
push
dec
mov
sub
mov
sti
dec
mov
je
mov
jb
lods
es
mov
lea
xchg
add
pop
adc
out
push
movsl
cwtl
lcall
rclb
dec
fsubrl
cmp
sub
decl
inc
cmp
sub
mov
jno
imul
sbb
ret
cmpsb
js
push
test
xchg
fisubl
cmpsb
inc
cltd
ss
pop
lcall
clc
mov
pop
mov
mov
rclb
imul
addr16
push
xchg
dec
mov
std
enter
and
aam
out
push
jnp
mov
shrl
jnp
pop
or
std
mov
inc
inc
mov
mov
sub
loop
sbbl
jbe
sbb
cmp
push
mov
jnp
xchg
mov
pop
rcr
test
js
aas
leave
add
ljmp
scas
inc
adcb
sbb
fwait
jmp
clc
jne
rolb
sti
mov
jge
mov
fidivrs
into
pop
cmp
jns
loop
ret
dec
cs
inc
inc
movsl
in
xlat
sti
and
ret
bound
movsb
xchg
movsb
adcl
xor
push
daa
in
jmp
inc
cwtl
or
mov
shrl
pop
xor
lds
andb
and
sahf
cmpsb
cmp
push
pop
test
mov
ret
push
int
shlb
aaa
repz
jns
ds
pop
stos
jno
add
sbb
popl
cmp
fcmovb
rcrb
pop
nop
in
fisubrs
cli
mov
cli
inc
jne
pop
pushf
dec
pop
sub
push
pop
stos
jp
icebp
sbbb
fwait
mov
pop
add
adc
loopne
add
mov
shrb
iret
insl
test
gs
push
lea
or
imul
jae
iret
push
pop
jae
in
test
fsub
push
and
sbb
in
insl
mov
je
cmp
dec
add
cmp
mov
jbe
inc
iret
xchg
cwtl
or
popa
pop
pop
pop
lret
stos
inc
add
mov
movsl
sub
mov
inc
mov
shrb
inc
sub
dec
inc
pop
mov
xor
sarb
jbe
popa
insb
and
lret
movsb
cmp
push
jnp
loopne
shrb
adc
push
out
adc
rolb
push
jmp
pop
push
outsb
mov
jp
lds
loop
and
adc
xor
mov
fcompl
push
adc
dec
mov
xchg
nop
ss
pop
and
add
lds
xor
lds
push
cmpsl
leave
xor
dec
pop
pop
cwtl
adc
daa
lods
push
or
daa
xor
repz
int
loopne
in
cmp
imul
adc
sub
jmp
push
dec
in
insb
int
push
stos
inc
add
jge
xchg
xor
rcll
cmpsl
mov
je
mov
lock
loope
lret
sbb
ds
sub
lret
movsb
mov
and
push
out
in
xor
adc
aaa
mov
adc
mov
mov
mov
cld
rcrl
push
adc
dec
out
out
flds
inc
inc
dec
fdivrs
sbb
fcompl
lcall
jle
loop
testb
mov
mov
ss
bound
sbb
lahf
xchg
stos
mov
dec
mov
nop
xor
int3
nop
xchg
pushf
clc
and
in
jnp
push
aaa
push
out
cmp
xor
push
sbb
cli
jae
xchg
pop
jno
add
xchg
loope
mov
iretw
mov
movsl
xor
stos
adc
sti
mov
jo
in
imul
mov
pop
add
xchg
out
loope
data16
push
js
jo
popf
sbb
add
mov
inc
pop
shlb
cmp
push
and
jne
cmp
lahf
imul
adc
add
pop
and
xchg
add
dec
mov
subb
push
ret
in
mov
test
lods
scas
push
fisttpl
call
push
sbb
sbb
pop
lret
inc
pop
in
push
jl
cli
jl
jl
shr
gs
and
insl
jg
push
fcoml
cmpb
lods
or
cmp
pusha
xlat
addr16
xchg
sub
mov
out
fdiv
out
and
bound
inc
jecxz
add
aas
fwait
mov
cmp
stos
cmp
ret
mov
jg
sbb
hlt
cmp
repz
iret
and
push
mov
call
test
push
cs
js
mov
ret
sar
jbe
in
std
inc
out
pop
or
inc
mov
lds
movsl
and
loopne
lods
mov
or
fsubrs
out
in
mov
and
mov
add
or
dec
cmp
in
dec
inc
sbb
repnz
pop
leave
mov
jge
mov
adc
aas
add
jns
sbb
ret
jg
lods
pop
ficompl
xlat
lret
push
repnz
mov
fsubrs
xor
jno
sub
xchg
iret
jge
outsl
mov
inc
loope
addr16
mov
xchg
push
sbb
shl
fcmovbe
shrb
and
lret
in
pop
stc
sub
or
mov
sbb
cmp
adc
push
xor
or
repnz
pop
loop
clc
push
cmp
xchg
sub
and
pushf
lock
cmp
into
in
inc
sbb
adc
jne
ds
fiadds
bound
cmp
push
jne
jg
add
mov
mov
cmp
lret
or
ss
cmpsb
sub
insb
fwait
add
jbe
and
clc
repnz
shl
jmp
andb
mov
jns
stos
cmc
sbb
or
test
loope
insl
dec
mov
sbb
fwait
mov
or
mov
mov
lock
rclb
incl
popaw
hlt
call
mov
ret
rorb
es
jo
ljmp
push
mov
lret
int3
add
repz
jl
insb
mov
push
adc
push
sbb
cmp
inc
mov
scas
dec
fistpl
cmp
pop
inc
scas
loopne
adc
lcall
aas
lock
xor
clc
popf
jbe
xchg
shrb
sbbl
loope
daa
in
lds
xchg
fnsave
cs
movsb
test
lcall
movsl
addb
lods
sub
inc
push
push
jb
mov
cwtl
das
mov
or
pop
mov
ret
leave
adc
rcr
dec
nop
or
jae
fnstsw
xchg
cmc
pop
out
enter
arpl
sbb
xor
sbb
fmul
lahf
lock
lods
push
out
in
js
popf
push
pop
sbb
and
add
sti
xchg
or
in
xor
cli
fsub
adc
mov
ret
mov
stc
sub
call
in
xlat
mov
pop
daa
or
jno
lock
xchg
outsl
sahf
fstps
aas
shlb
fimuls
shl
es
lock
push
or
negb
fs
jns
test
xchg
cmp
in
cmp
lahf
sub
bound
ljmp
sbb
jae
sub
addl
addl
mov
pushf
rcr
lea
xchg
inc
mov
inc
ss
jbe
ficoml
cmpsl
mov
jnp
stc
outsl
or
mov
jle
mov
mov
fcompl
insl
or
icebp
jno
mov
jbe
jle
repz
push
popa
xor
and
out
inc
mov
jbe
sub
or
push
cltd
mov
adc
das
jno
mov
mov
dec
xor
or
lret
mov
cmp
cmp
scas
xchg
and
jb
leave
cmp
or
scas
outsb
push
loope
sbb
cmc
xor
sbb
clc
mov
push
sti
cmpsl
aam
pop
int3
push
push
arpl
jae
adc
jb
pop
and
push
add
aad
lods
ret
mov
push
push
inc
and
cwtl
jle
push
bound
in
cmpsl
scas
dec
mov
scas
sbb
mov
mov
bound
jg
and
sub
adc
adc
mov
les
sub
adc
les
jns
mov
outsl
jnp
inc
popf
jmp
cwtl
sarl
inc
in
inc
add
flds
inc
int3
fdivrl
jle
mov
rcrl
aaa
mov
mov
inc
test
cwtl
sub
je
push
or
mov
cld
mov
xchg
push
add
push
xchg
sbb
lds
adc
jnp
cmp
xor
sbbl
sbb
aam
fbstp
lds
xchg
int
out
push
nop
lods
cmp
insl
push
cmp
push
daa
adc
adc
repnz
mov
push
loop
sarl
inc
pop
add
inc
inc
cmp
xorps
or
dec
insb
pushf
push
and
ret
imul
negl
sarl
pop
cmp
mov
test
cltd
and
sub
mov
cmc
inc
sbb
mul
pop
mov
mov
and
mov
insb
push
int3
cwtl
ret
pop
das
das
xchg
or
add
je
add
xchg
insl
pop
xchg
fadds
mov
and
mov
sarl
mov
outsl
inc
cmc
push
sub
fistpll
scas
mov
and
pusha
fisubrs
mov
cmp
push
pop
pop
stos
fsubrs
out
mov
test
jmp
fstl
pusha
or
gs
mov
sbb
xlat
int
push
lods
pushf
out
xchg
and
mov
fsubrl
jg
pop
jne
mov
push
adc
inc
mov
add
jae
gs
sti
inc
in
adc
xchg
mov
cmpsl
decl
mov
jmp
sbb
xchg
imul
in
xlat
push
mov
cmp
mov
nop
into
mov
mov
mov
js
dec
adcb
into
ret
addl
mov
pusha
movsb
loop
lds
add
inc
xchg
negl
mov
sbb
mov
mov
xorl
mov
mov
pop
cmp
xor
int
pop
push
call
push
jg
cmc
scas
ljmp
push
pushf
dec
cmp
dec
pop
mov
or
fs
daa
popf
lods
sub
lock
cmp
out
sub
addr16
pop
stos
jmp
push
pop
jo
and
mov
dec
stc
leave
mov
mov
lcall
cltd
out
adc
mull
push
fwait
xchg
iret
je
das
jp
add
xor
loope
mov
ds
cmp
movsb
push
ss
xchg
or
fisubl
sbb
sub
movb
xor
lods
mov
shl
xor
mov
jg
inc
dec
dec
cmp
stos
dec
sub
scas
ljmp
pop
push
pop
loopne
insl
into
daa
test
cmp
lea
or
inc
outsb
stos
sbb
rcrl
cmp
and
jecxz
jnp
mov
push
ror
in
mov
cmp
scas
add
pop
shlb
jge
ss
in
out
daa
loope
daa
inc
shll
lret
lods
and
pop
lcall
gs
scas
testl
mov
or
dec
aas
out
sti
xor
jbe
mov
imul
in
adc
ffree
mov
arpl
divl
inc
lcall
in
push
icebp
adc
mov
test
orb
mov
dec
sub
adc
cmp
and
xchg
test
adc
adc
mov
or
sbb
clc
js
mov
ds
in
scas
ret
pop
scas
push
imul
jb
adc
adc
pushf
push
jle
add
popf
fcompl
aaa
std
icebp
ret
out
loope
cmpsl
aaa
mov
mov
mov
jbe
insb
div
adc
repnz
sti
aam
and
add
jbe
sbb
cmp
or
rorl
or
mov
xor
les
sbb
loopne
or
or
cmpsb
mov
sub
push
dec
fcomip
inc
mov
push
xor
xchg
pop
lock
cld
mov
jl
xchg
jnp
cmp
std
push
jmp
aam
mov
mov
xchg
mov
xor
cmpsb
vmread
pop
add
out
stos
imul
test
daa
cmc
adc
mov
dec
push
loop
fdivr
cmp
jge
fidivl
dec
jle
aam
ret
fcmovne
cmp
jge
mov
lods
pusha
xor
js
add
sbb
mov
adc
les
dec
mov
mov
push
mov
add
rcrl
or
cmp
or
jg
das
xchg
imul
cld
add
daa
sub
cmpb
or
cltd
push
insb
lret
jns
jb
out
sahf
push
add
xchg
mov
out
repz
frstor
or
xchg
neg
out
dec
and
inc
mov
fisubrs
leave
in
mov
mov
push
or
xor
cld
xor
andb
sbb
sub
jle,pt
mov
out
stos
jmp
std
sbb
repnz
ror
enter
mov
ja
cmpsl
rorb
cmp
ss
xchg
pop
jl
and
iret
shl
dec
dec
mov
in
icebp
mov
je
pop
jecxz
dec
push
jecxz
push
cmp
cmp
popa
int
ucomiss
popf
sub
out
sub
xchg
cmp
jb
sbbb
fistpl
cli
movsb
add
xchg
cmp
hlt
xchg
dec
sbb
and
or
aam
add
jnp
test
std
hlt
xor
mov
pop
or
sbb
test
inc
inc
push
inc
pop
sbb
je
cwtl
cld
scas
jbe
sbb
inc
sub
mov
mov
xchg
lock
sub
cmp
cld
sub
out
mov
scas
into
xor
xchg
cmpl
movsb
or
pushf
mov
push
push
mov
sbb
jp
pushf
wrmsr
lods
shlb
rcr
les
jle
push
icebp
sahf
gs
or
loope
into
and
in
popa
cwtl
jg
and
push
outsl
jae
insl
mov
fistpl
sti
rcrb
and
inc
pop
and
xor
aam
cmpsb
sbb
mov
movsb
inc
mov
inc
scas
sub
stc
mov
dec
push
test
xor
push
imul
cmc
shrl
shrl
int
fisubs
shrb
jle
cmp
subb
movsl
or
sahf
push
and
jg
pop
mov
lret
dec
mov
pop
mov
jae
repnz
mov
xchg
inc
adc
jnp
imul
jl
lcall
ret
xorl
in
push
or
pop
jle
divl
scas
cli
addr16
outsl
jns
pop
mov
or
mov
cmpsl
mov
sbb
jecxz
ret
sub
aad
test
mov
jnp
mov
or
mov
or
insl
jmp
jl
mov
sub
jecxz
dec
cmp
ds
pop
xor
imul
popf
or
daa
cs
mov
add
lret
stos
mov
jae
lock
nop
jecxz
xchg
xlat
inc
int3
jl
aam
sti
xchg
std
or
add
cwtl
adc
idivl
es
sub
call
popa
repz
ret
pop
in
xchg
pop
pop
fbld
cmp
mov
test
or
push
cmpsb
aaa
les
cmc
mov
test
inc
jp
in
mov
cmpsl
lcall
pusha
in
jb
stos
push
xchg
sbb
loopne
dec
push
lock
mov
lods
fpatan
push
add
xor
aam
mov
sbb
add
inc
xor
mov
stos
int
xlat
inc
adc
dec
sbb
push
push
pusha
dec
sbb
in
cs
push
insb
imul
mov
inc
mov
add
jnp
or
mov
push
pop
jg
mov
jp
inc
jbe
shrl
jle
in
add
icebp
add
dec
fwait
in
mov
pop
xor
sub
lea
mov
cmp
cli
jp
out
fists
mov
jl
rcr
pusha
outsl
fs
pop
xchg
loope
daa
movsb
mov
imul
xor
leave
ds
shll
out
movsb
lret
mov
xor
shlb
mov
xchg
cmp
jae
ret
add
mov
sub
adc
dec
ret
push
mov
sub
leave
int3
out
adc
cwtl
aad
loope
dec
mov
ss
jnp
mov
inc
mov
lods
insb
filds
push
xlat
nop
pop
cli
leave
or
jecxz
mov
loopne
cmp
mov
rolb
fnstenv
mov
xor
dec
mov
inc
fimull
sti
cmp
fisubrs
insb
jae
jbe
push
cli
jg
ljmp
fnstcw
iret
in
popf
xor
fdivl
jmp
ror
popa
inc
clc
test
xchg
clc
adc
push
adc
or
int
lcall
outsb
jnp
xchg
pop
and
inc
not
aad
ss
inc
push
push
dec
cltd
cmp
mov
cmp
pop
loop
mov
test
jge
aam
add
pop
push
imulb
inc
cmp
in
daa
add
pop
fcmovb
pop
mov
mov
lcall
push
fists
jns
mov
sbb
add
and
stos
imul
dec
ret
adc
bnd
cltd
adc
xor
aad
push
add
lcall
xchg
push
mov
cmpsl
shrl
pusha
pop
push
adc
inc
xchg
xor
xchg
inc
inc
test
push
sbb
mov
outsl
xor
inc
dec
adc
xor
jbe
out
pop
cmc
xchg
clc
cmpsb
sbb
loop
dec
xchg
aaa
decl
enter
aad
std
repz
pop
and
and
mov
rorb
ljmp
add
dec
test
orb
pop
or
cld
jae
test
leave
jne
xchg
xor
movsb
sub
cmp
loopne
dec
daa
fmulp
push
popa
sti
cmpsb
cmpl
xchg
mov
pop
daa
nop
fwait
pusha
jp
sbb
aaa
xchg
aad
mov
fistpl
sbb
xchg
shl
push
rcl
jae
xor
pop
xlat
scas
pop
insl
jg
hlt
pop
fildll
mov
cli
xchg
mov
dec
pop
pop
or
fs
push
hlt
lock
repnz
cmp
pop
add
enter
xchg
in
roll
cltd
fildl
jg
add
pop
ret
xchg
mov
imul
call
cld
in
xchg
call
stc
negb
xchg
addl
sahf
mov
sub
pushf
repnz
sub
out
lret
nop
dec
mov
adc
pusha
sbb
or
std
xchg
aaa
and
adc
push
xor
xchg
movsb
leave
sahf
ja
add
imul
fcompl
scas
in
mov
lods
mov
fdivrs
sbb
mov
lea
test
sub
pop
jp
cmpsb
stos
jmp
xchg
insb
cs
call
push
sbb
mov
adc
lock
mov
pop
test
push
pop
dec
pop
adc
rcll
and
xor
clc
or
loop
adc
mov
cltd
cmp
test
xchg
jg
sti
popf
xchg
pop
fidivrs
insl
push
stc
xchg
mov
negb
xchg
shll
sub
xchg
xlat
push
push
cmpsb
in
inc
jge
xor
mov
jbe
je
ja
jl
rcll
adc
stos
jge
into
cmpsb
into
cmp
dec
insl
jns
fldt
stc
decb
jns
add
fcmovu
inc
pop
lods
in
xchg
rcrb
and
jle
xchg
leave
push
and
adc
jbe
test
aaa
jg
pop
dec
add
out
push
stos
ffree
in
xchg
mov
int3
pop
out
adc
adc
shlb
jb
ror
jns
and
jg
fnstcw
push
pop
shl
jnp
add
inc
adc
xchg
jo
sbb
push
cs
cmpsl
pusha
lcall
js
add
sub
add
sbb
or
inc
fstpl
test
push
lret
scas
outsl
dec
adc
or
sahf
icebp
push
pop
mov
loope
jno
stc
pop
mov
js
cmp
in
aam
jne
xchg
icebp
sub
mov
jb
push
cmp
adc
pop
sbb
inc
xor
rcrb
movsl
mov
insb
pop
ja
std
jle
and
pop
decb
inc
push
fsub
sbb
push
sbb
xchg
rcll
inc
push
pop
or
sbb
xchg
lods
inc
movsb
xchg
ret
cltd
ds
xlat
lret
aam
jecxz
cld
xor
mov
or
adc
cmp
push
ljmp
fmull
loope
lahf
subb
pop
adc
dec
inc
push
sub
xor
test
add
iret
jns
and
mov
call
xchg
aaa
stos
test
std
jle
add
jp
jecxz
in
sbb
and
test
scas
add
ficoms
in
sub
dec
sub
inc
or
stc
mov
movsb
test
in
mov
mov
lods
ret
divb
pusha
adc
mov
insb
fcomip
sahf
mov
adc
in
std
sbb
call
mov
mov
jmp
or
xchg
xor
iret
sub
test
out
pop
and
jne
ja
test
sbb
jecxz
adc
jge
push
ret
sub
xor
push
adc
mov
aam
cmp
jle
sbb
pop
repnz
xor
aaa
rorl
sbb
cmp
out
cs
nop
push
sub
mov
movsb
aas
int3
mov
pop
test
mov
leave
addr16
push
xor
xor
cmp
ljmp
scas
xchg
jp
xchg
push
ret
notb
pop
in
fcmovu
mov
out
or
add
enter
mov
sbb
mov
xchg
in
mov
sub
xchg
ljmp
mov
push
sub
xchg
push
movsl
enter
bound
fs
ja
sahf
dec
enter
bound
cmpsb
popf
lods
push
mov
mov
inc
ss
sbbl
xor
scas
leave
xor
fistpll
cli
and
pop
aaa
adc
and
fisubrs
jb
sub
int3
add
push
xor
les
es
mov
rcll
imul
dec
xchg
lods
pop
cs
mov
cmovge
clc
jne
ror
mov
jno
imulb
inc
in
jbe
daa
lahf
loop
aaa
sub
pop
aas
adc
add
xor
stos
popf
dec
roll
imul
divb
jbe
mov
in
int
ss
mov
xchg
std
cmp
jnp
jmp
and
jae
inc
inc
push
jl
mov
mov
sub
sbb
mov
inc
pop
adc
loopne
push
rolb
aad
jmp
test
and
sub
sti
push
sbb
fldcw
icebp
dec
arpl
sti
add
or
dec
add
aas
mov
ret
mov
dec
mov
dec
push
ja
xchg
push
xchg
jbe
leave
sar
dec
jbe
outsl
jp
dec
push
adc
push
inc
cmove
lods
fimuls
outsl
ss
xor
xlat
mov
jne
and
inc
mov
push
push
jnp
inc
lods
adc
pop
test
cli
repnz
insl
nop
sahf
scas
lea
inc
jg
sbb
sub
cmp
pop
test
movsb
xchg
push
cltd
jp
cmpsl
pop
cli
adc
testb
pop
pop
jmp
testl
xor
fbld
stos
add
in
adc
pop
into
into
mov
ds
les
fimuls
jmp
in
push
lea
sub
jecxz
jp
rcr
and
iret
shr
inc
ret
aam
rclb
and
add
pop
test
dec
outsb
sbb
lea
inc
xor
int
cmpsb
psrlw
lods
mov
lahf
xchg
sbb
shl
movsl
add
push
mov
inc
dec
add
mov
jo
dec
cltd
mov
adc
jns
subl
stc
cmc
rcll
and
inc
popa
sbb
mov
lahf
mov
add
xorl
xchg
dec
push
jge
es
insl
xchg
std
rclb
fisttpll
lret
je
mov
add
xchg
mov
std
cmp
out
xor
jl
mov
fcmovnbe
mov
fstl
movsl
pop
orb
jbe
dec
out
fdivl
push
call
sbb
in
xchg
int
leave
xchg
push
push
and
pop
ret
call
push
popf
cmc
push
xor
mov
inc
fstl
roll
and
imul
mov
cltd
testb
jnp
inc
imul
jb
stc
inc
mull
xchg
ret
shr
push
dec
jns
sbb
dec
jge
imul
dec
cld
icebp
push
and
cmp
cwtl
fsub
mov
jecxz
insl
nop
pop
les
dec
mov
bound
rcrl
push
rolb
mov
cmp
xor
fadds
sub
adc
xor
ss
nop
xor
sbb
loop
test
lea
or
pop
subb
adc
or
add
xlat
sub
sbb
lret
loope
add
loopne
add
subl
mov
clc
jmp
dec
or
stc
mov
fwait
sub
arpl
test
mov
or
hlt
or
lret
push
mov
adc
cmp
sub
xor
bound
fidivs
in
dec
adc
pop
lea
xchg
xor
subl
dec
mov
cmpsl
xor
cmc
outsb
paddd
lods
sub
lods
in
insl
lods
sbb
test
mov
gs
ja
mov
xor
and
add
out
xchg
je
inc
xchg
dec
notb
popa
mov
mov
xor
and
and
adcb
into
mov
jbe
rorb
mov
pop
cmpsb
add
push
orb
sbb
leave
insb
pop
and
cmp
add
outsb
test
jl
cmp
test
push
pop
jnp
filds
push
jno
adc
outsb
addl
xchg
cmp
jo
dec
or
or
rclb
mov
fxch
mov
inc
dec
sbb
loop
cmc
pushw
mov
addb
add
in
mov
mov
out
add
setl
addr16
adc
test
add
mov
adc
sbb
sahf
xchg
push
cwtl
xchg
add
dec
clc
push
xor
aaa
or
jle
int
fstpl
adc
add
add
lock
js
mov
mov
cmp
test
sti
pop
cmp
insb
repz
jle
aas
mov
ret
cs
push
je
repnz
sbb
insl
jae
fstl
xchg
pop
js
add
xbegin
movsb
xchg
mov
fwait
stos
pop
pusha
xchg
cmp
pop
sub
push
mov
xor
and
sar
rclb
std
jmp
pop
push
jae
push
pushf
rol
push
xor
mov
sub
scas
and
movsb
pusha
jns
pop
push
or
insl
jbe
sbb
and
lahf
and
add
mov
cmp
xlat
xor
jecxz
sbb
sub
and
adcb
out
xchg
js
or
int
dec
pusha
pop
mov
lea
test
cmc
filds
clc
xchg
cwtl
mov
ffree
sbb
xchg
sbb
imul
popf
fldcw
movb
xchg
call
push
xchg
pop
fildll
sbb
repz
mov
mov
jge
enter
lea
lea
lret
xchg
loope
jmp
hlt
rcl
adc
test
in
fstpl
lret
cli
mov
xor
mov
cmc
pop
pop
dec
dec
cmc
mov
xchg
scas
rcll
nop
push
test
je
sarl
test
imul
add
inc
xor
ss
movl
pusha
cld
stos
inc
pop
and
lock
hlt
addr16
inc
mul
mov
fs
daa
fiadds
pop
stos
pop
ds
aas
mov
inc
inc
sub
mov
xchg
shr
lret
jae
push
sbb
sar
lahf
dec
or
adc
icebp
mov
call
cld
divb
mov
addr16
fistps
int
cmp
shlb
sub
clc
add
insb
xor
cli
or
dec
lahf
mov
sbb
cmp
xor
jmp
mov
stc
and
clc
and
jl
sbb
dec
jecxz
inc
js
test
movsb
xchg
pminub
ret
in
jo
inc
cltd
mov
lea
das
fmull
hlt
loop
ret
data16
inc
aad
js
jmp
dec
test
pop
mov
ja
mov
cli
shl
fsts
in
cmp
rcll
dec
xchg
je
mov
cltd
movsl
add
cmp
push
push
jne
and
shll
sbb
dec
pop
int3
mov
scas
cmovg
stos
js
push
in
ret
add
aad
mov
xchg
fxtract
fiaddl
sub
fisttpll
jnp
sbb
push
aas
or
jmp
jnp
jmp
popf
mov
xor
mov
add
cmp
dec
arpl
xchg
rcl
imul
imul
add
or
test
pop
cmp
xchg
out
mov
fcomps
jp
popa
sub
loop
ja
dec
or
test
orl
add
sub
push
fiadds
inc
mov
dec
ficoml
int3
js
rorl
inc
push
sbb
pushf
popa
sbb
xchg
xorb
addr16
mov
out
mov
inc
push
mov
dec
add
popa
xchg
jp
divl
sub
cltd
lods
test
xor
fcoms
scas
neg
push
xor
iret
mov
test
add
ss
xor
fists
ficoml
iret
int3
jl
push
into
xchg
dec
xor
dec
test
mov
xor
negl
stos
stc
fucomp
jo
jge
repnz
hlt
mov
cmp
sbb
in
xchg
mov
iret
dec
out
add
jl
jbe
rorb
xchg
jge
xchg
cmp
pop
jle
in
into
xor
inc
aaa
cld
dec
lahf
or
and
out
xchg
dec
movsl
push
sarl
jno
push
les
aad
ficomps
cmpsl
inc
lea
lret
pop
jns
cli
int
mov
lret
fdivp
movsl
mov
xchg
roll
out
pushl
aad
or
or
mov
xchg
scas
mov
xchg
aas
movsb
xchg
or
mov
jmp
pop
push
ja
or
fsubr
mov
lds
stos
cltd
sbb
loopne
fldcw
mov
out
dec
pushf
cmp
xchg
arpl
lods
xorb
jns
adc
outsb
dec
adc
pop
and
xor
pushf
test
dec
xor
loope
mov
call
iret
sub
in
mov
sbb
inc
testb
jne
fldcw
xor
popf
jmp
adc
sbb
mov
add
shlb
popf
jp
daa
xchg
outsb
mov
lods
jecxz
movsb
inc
je
sarl
nop
data16
pop
das
loopne
dec
jge
push
jmp
outsl
inc
invd
shll
add
mov
xlat
scas
jns
pop
jecxz
jbe
mov
mov
add
dec
mov
cwtl
push
fsubl
pushl
inc
clc
arpl
das
data16
out
repz
lret
sbb
aam
outsl
inc
mov
out
and
mov
xchg
gs
scas
sbb
add
and
adc
pop
adc
fisttpl
xchg
pop
in
mov
mov
fadds
pop
sub
mov
cmp
xchg
cmp
jp
inc
shll
in
and
imul
dec
mov
inc
add
and
loopne
pop
daa
leave
xchg
push
fisubl
gs
out
jg
mul
fldl2t
or
push
adc
mov
jge
mov
mov
add
or
das
jle
push
loope
mov
lahf
jecxz
jp
mov
repnz
adc
inc
lret
ja
xor
frstor
mov
xchg
stos
jno
mov
stos
push
cmp
scas
dec
roll
aas
xchg
int
push
int
test
bound
dec
incb
fucomi
test
test
in
jge
xchg
aam
std
lcall
mov
insl
cltd
or
xchg
mov
xor
ficoms
dec
jbe
mov
stc
cmp
movsl
addr16
cmc
sarl
bound
sub
popf
inc
arpl
jg
inc
cmpb
lahf
call
and
mov
sbb
pop
and
jnp
push
xchg
out
jne
adc
fdiv
inc
icebp
pop
mov
in
mov
lock
adc
fimull
sti
or
int3
leave
xchg
adc
mov
js
adc
push
push
test
xor
and
insb
stos
jne
inc
inc
pop
decb
aad
addb
pop
mov
add
ja
aas
nop
xchg
adc
es
testl
sbbl
fstpl
sbb
aam
and
mov
inc
gs
mov
sahf
inc
or
sbb
div
xchg
or
or
mov
fldcw
in
push
jmp
xor
xchg
dec
addr16
push
addr16
imull
jmp
scas
push
mov
into
test
mov
pop
stc
clc
sbb
jmp
mov
mov
xor
dec
cmp
jbe
imul
push
mov
xor
xor
mov
mov
icebp
ret
stc
lret
sbb
fldenv
jo
nop
cs
fidivrl
scas
cmp
insb
pop
inc
fsubl
jb
hlt
fs
or
arpl
push
imul
push
add
dec
out
sub
lds
push
test
into
leave
jg
pushf
push
in
or
lahf
rcrl
out
cmp
mov
cmpb
mov
push
lea
cld
dec
jmp
sbb
sbb
jae
push
imul
push
mov
clc
std
mov
adc
icebp
jmp
movsb
jns
andb
je
pop
movsb
sbb
inc
les
sbb
insb
rcrb
cmp
icebp
mov
negb
jp
fs
jb
mov
mov
imul
pop
cmpsb
add
inc
jecxz
push
test
push
mov
sbb
dec
cmp
push
mul
gs
shll
adc
xor
pop
pushf
ljmp
xor
xchg
mov
cmp
push
test
test
gs
pop
sub
into
decb
subl
mov
clc
cmp
or
add
sarl
sub
jbe
jbe
test
dec
adc
outsl
je
leave
dec
stc
xor
jmp
aad
mov
or
push
push
inc
das
and
rcl
fsubs
xlat
mov
and
enter
pop
jmp
and
cmc
nop
dec
aam
cmp
cwtl
mov
sub
loope
out
loop
aam
fcomi
xlat
or
jae
mov
jl
pop
aam
arpl
insl
cli
out
dec
dec
int
scas
cmp
push
cltd
xor
stc
or
mov
cli
dec
divl
jns
movb
out
cmp
cld
in
inc
add
bound
lcall
cwtl
sbb
or
sub
aam
dec
xchg
lods
xchg
or
mov
fidivrl
scas
push
fstl
hlt
cwtl
mov
movsl
xor
stos
or
add
jo
or
inc
lds
push
mov
fsub
push
pop
jno
sub
and
pushf
pop
je
lds
mov
js
iret
orl
shlb
insl
lret
aam
pop
lods
jae
in
inc
or
sbb
std
nop
pop
ds
mov
xor
lcall
pop
fidivrl
cmpsb
pop
mov
and
cmp
add
or
fcompl
fcompl
sub
outsb
shlb
insl
push
push
aam
fsubrl
mov
adc
mov
dec
or
notl
mov
stos
dec
lea
nop
bnd
jge
ret
sub
outsl
jae
test
in
lods
les
test
jne
enter
and
mov
mov
repnz
jns
mov
mov
mov
in
loop
frstor
sub
insl
fsub
cmp
bnd
mov
jge
inc
pop
es
mov
inc
insb
mov
jmp
sub
ljmp
fwait
inc
fwait
xchg
test
les
ret
push
push
fdivrl
jecxz
out
ficoms
pop
test
mov
imul
daa
mov
loopne
loope
or
adc
push
loopne
mov
sbb
test
xchg
sbb
shl
lods
les
cmpsb
jmp
rep
test
mov
jbe
push
int
adc
push
call
xchg
test
pusha
or
fs
push
adc
neg
mov
mov
cmp
sub
jecxz
push
out
daa
and
cmp
test
pop
xchg
sbb
test
inc
mov
jns
imul
movsl
push
aaa
mov
inc
xlat
dec
scas
push
inc
jecxz
jnp
xchg
jno
pop
cli
cmp
icebp
sub
and
inc
dec
leave
aad
out
dec
and
fdivrs
xchg
cmp
cmp
mov
repz
in
ja
int
xchg
fstps
sti
jmp
iret
xchg
test
ds
rorl
sti
sbb
outsb
inc
adc
rcl
add
sbb
pop
sbb
xchg
xchg
adc
or
enter
adc
push
push
lds
cmp
or
sub
or
jl
xor
cmp
dec
fsubp
ror
clc
test
xor
bts
or
cmp
mov
mov
jle
mov
xor
lea
hlt
adc
and
daa
loop
adc
loop
push
shll
lds
mov
and
fstpt
test
int3
leave
mov
cmp
add
adc
in
dec
jg
lcall
popf
jle
gs
aaa
jg
pusha
lea
pop
inc
ja
mov
push
loopne
inc
scas
fcomps
push
jge
daa
scas
pop
es
loope
jp
nop
mov
movl
stos
mov
push
inc
fistps
cwtl
cmp
dec
stc
pop
xor
mov
addr16
stc
mov
in
pop
aas
fcompl
movsb
enter
sahf
repz
cmp
aam
jg
out
lret
dec
into
out
andb
rclb
shrl
mov
pushf
inc
adc
int3
adcb
jne
xchg
pop
cmp
scas
cmp
sbb
mov
xchg
mov
mov
les
sub
popa
or
ljmp
mov
mov
lock
mov
ror
cmp
std
adc
sub
cld
and
add
cmp
adc
in
inc
pop
pop
lods
cmpsl
sbb
das
mov
pop
xor
dec
lcall
movsb
cmp
nop
js
adc
cmc
adcl
or
jbe
fidivrs
scas
aad
mov
push
add
mov
or
ret
repnz
cmp
nop
rol
rol
xor
lock
inc
bts
lods
pusha
fisubrs
adc
sbb
jmp
ljmp
daa
std
push
pushf
xor
mov
dec
in
andl
in
push
mov
adc
mov
and
sbb
rol
or
lods
and
and
sub
rclb
cmp
pop
push
add
xchg
sub
xor
adc
in
pop
mov
mov
es
pop
mov
bound
xor
in
lret
scas
lds
test
roll
or
sub
mov
sbb
and
mov
cmc
and
mov
and
sahf
mov
or
loope
imul
insb
adc
push
adc
cmp
inc
mov
dec
mov
rcl
inc
cwtl
mov
scas
test
clc
hlt
push
test
stc
cmc
js
push
cli
adc
sbb
call
pop
and
popf
or
shlb
lds
sub
xchg
push
lods
xor
dec
or
mov
mov
mov
scas
lret
cmp
lods
sarb
mov
sti
xchg
loope
add
cwtl
scas
dec
cmc
xor
nop
push
add
stos
cmpsl
lods
pop
cltd
das
inc
cmpsb
in
mov
inc
aaa
xchg
sbb
mulb
popl
push
shrl
lods
iret
pop
ss
or
mov
jb
loope
ljmp
jecxz
jge,pn
std
cmp
imul
dec
sbb
push
mov
in
shlb
cli
pop
lcall
sub
mov
sbb
pop
repz
pop
je
push
lds
mov
adc
mov
push
aas
pop
std
inc
cmpsb
dec
push
lcall
lret
cmp
popf
push
and
fsts
jbe
xor
js
ret
pop
dec
shll
cmc
lea
test
add
push
dec
sbbl
shll
leave
mov
lds
and
out
fcmovnbe
cmp
xor
out
aaa
adc
popa
or
xchg
adc
xlat
push
sbb
loope
xor
and
imul
xchg
mov
jnp
inc
adc
test
fcomp
pop
je
pop
xlat
bsr
xor
xor
mov
mov
mov
sub
xchg
fnstcw
test
inc
dec
jno
cs
lret
rcrl
pop
shlb
xor
mov
ljmp
bound
popa
popa
mov
fbstp
jns
lret
notl
call
and
dec
and
das
and
stos
dec
add
fidivrs
test
push
jb
inc
pop
mov
sbb
jl
push
cmp
in
call
arpl
jecxz
adc
mov
rcll
setae
push
enter
inc
xorb
xor
push
mov
fdivrs
iret
repnz
outsl
scas
push
punpcklbw
mov
ret
fsubrl
xor
push
sub
lods
push
fldenv
sbb
mov
mov
sahf
jns
out
add
inc
and
call
subb
lcall
jp
in
ret
xchg
jb
mov
push
jns
dec
push
repz
xchg
out
adc
or
int
into
rcrb
into
xor
xlat
movsb
iret
sub
cmp
jle
push
adc
dec
repnz
test
or
pop
dec
jle
outsb
cmp
mov
aam
std
dec
aaa
push
push
inc
jmp
mov
mov
sbb
xchg
stc
and
std
jns
sbb
jge
jl
subl
cmp
in
aad
mov
loopne
insl
pusha
mov
rcll
ret
jg
inc
mov
rcr
dec
mov
pop
lcall
or
cltd
sub
ss
shlb
fstpl
fs
ret
mov
pop
mov
mov
sti
add
test
add
mov
std
add
mov
lods
mov
cltd
sbb
jecxz
xlat
jp
out
add
push
rorb
sbb
in
mov
push
add
and
adc
dec
pushf
movsb
mov
jecxz
cmc
add
js
inc
out
pop
fadds
out
cmp
jle
je
cmp
dec
cmc
clc
push
mov
or
sub
mov
loope
inc
mov
ljmp
ret
jno
dec
cmp
stos
cli
iret
adc
inc
and
inc
js
popa
icebp
mov
fs
addb
aas
scas
stc
cmpsl
add
pop
jbe
int3
adc
int
pop
cmp
xchg
or
push
sti
stos
out
das
mov
sbb
push
or
mov
out
out
xor
mov
hlt
xor
rcrb
aad
fbstp
mov
jae
inc
push
mov
ljmp
and
mov
add
cmp
add
adc
loop
cltd
cmpsl
add
cwtl
aad
mov
push
pop
cmc
jno
push
hlt
and
jb
or
jmp
cmc
out
sbb
xchg
shll
cmp
cmpsb
mov
add
sti
push
mov
popf
or
stos
movsb
add
cmp
or
popf
adc
jmp
es
aas
push
daa
xchg
or
in
xchg
push
repz
xchg
or
sbb
mov
out
jb
dec
xchg
mov
lock
shlb
shrb
mov
mov
sub
or
jle
jecxz
adc
jge
outsl
int
xchg
ds
pusha
es
bound
adc
add
or
xchg
mov
iret
sub
ds
xchg
sbb
xor
cmp
add
push
jne
xor
rcl
adc
pop
cmp
mov
daa
sbb
in
fcomi
enter
imul
addr16
es
or
sbb
divl
adcb
adc
cmp
jl
mov
xchg
mov
sbb
andb
and
xchg
lret
xchg
xlat
cli
movsl
movl
test
cmp
hlt
xor
push
push
enter
andb
cwtl
pop
and
pop
xchg
cwtl
mov
imull
push
push
sbb
cmp
ss
pop
and
dec
scas
cltd
hlt
xchg
cmp
lcall
lock
pushf
pop
shll
jo
dec
xchg
xor
mov
jns
jb
mov
or
mov
sbb
in
hlt
xchg
fisttpll
pop
scas
jecxz
enter
test
jmp
dec
std
fildll
fisttpl
and
stos
push
pop
lcall
push
xchg
sub
imul
push
dec
xor
lahf
mov
or
mov
in
jnp
out
lods
outsl
sub
in
push
mov
aad
xor
es
xchg
pushf
ret
cmpsb
push
fwait
xchg
inc
jecxz
adc
gs
out
in
pop
dec
cmc
inc
hlt
sub
pusha
sti
aam
pushf
lret
push
pop
and
adc
or
stos
hlt
lcall
mov
fmuls
faddl
jge
mov
lret
mov
push
cmp
fdivl
push
out
adc
jo
dec
xchg
out
push
js
and
or
sub
jp
xchg
cs
rclb
lods
push
je
fucompp
dec
inc
xor
xor
in
mov
mov
ficoms
push
jo
arpl
cmp
mov
xor
fbstp
test
adcl
fmul
mov
jle
pop
loop
mov
xchg
std
pushf
xor
gs
jno
aas
jle
dec
dec
sub
pop
out
mov
pop
insl
pusha
or
mov
mov
adcl
or
adc
push
and
inc
fdiv
adc
jne
xor
or
scas
sbb
lods
xchg
das
add
and
dec
stos
incb
les
mov
add
and
xorb
test
pop
leave
or
pop
inc
ret
dec
inc
and
push
mov
js
ss
jno
popa
aad
out
popa
and
jg
sub
dec
pop
rcl
and
cs
cwtl
stos
push
inc
fcom
xor
jge
mov
cmp
std
fwait
sub
cmp
insl
xor
pop
cmc
sub
jb
aaa
xchg
jnp
mov
aad
sub
mov
mov
xor
dec
dec
sarb
dec
bt
cwtd
pop
xor
lcall
cs
ljmp
inc
pop
jl
in
pop
fisubrl
lahf
out
aad
jl
nop
cmpsl
daa
fmul
inc
repz
push
sbb
arpl
mov
xchg
dec
pop
adc
sub
in
and
out
jb
aam
sub
icebp
aad
lods
or
gs
xchg
mov
shlb
dec
push
xor
sbbb
je
xchg
imul
jbe
pop
pop
mov
xchg
jb
adcl
cmc
mov
fdivs
pop
mov
out
cli
pop
imul
cltd
push
fadd
call
pop
cmpsl
push
mov
cmp
xchg
popf
sub
mov
xor
adc
test
sbb
xchg
jg
inc
stos
jmp
pop
das
dec
inc
pusha
jnp
xchg
loopne
or
add
jns
ss
imull
iret
out
xchg
ret
mov
mov
mov
mov
cltd
and
stc
dec
xlat
mov
fldcw
lcall
mov
test
sbb
imull
sti
pop
pop
fnstenv
and
cli
mov
call
icebp
cmpsb
add
pop
lahf
or
jns
fiadds
jne
sub
mov
push
mov
aaa
sub
add
cmpsl
pushl
mov
mov
cmp
mov
rolb
pop
pop
hlt
mov
mov
repnz
inc
dec
mov
or
cltd
iret
jmp
fwait
push
int3
in
shlb
imul
dec
ret
xor
out
scas
xor
fsubs
clc
loope
pop
and
cli
mov
popa
lret
mov
mov
push
cmp
test
mov
xor
add
scas
fisttpll
test
push
dec
lret
xchg
sbb
cmp
inc
fldl
out
popa
xor
xchg
popa
mov
inc
push
shl
push
inc
roll
fwait
cmpsl
adcb
js
or
popf
mov
je
sub
cmp
cmc
adc
push
mov
daa
out
out
mov
inc
push
mov
negb
dec
das
sub
jp
jo
stos
popf
mov
mov
push
mov
int
jg
fst
jnp
inc
mov
xchg
insb
jae
sub
jmp
cmp
imul
push
mov
cmp
std
cmp
jecxz
es
divl
scas
cltd
fwait
cmp
hlt
out
and
mov
scas
add
jecxz
sbbb
adc
fldl
mov
jnp
sti
orl
inc
icebp
xchg
pop
loop
jns
dec
mov
fists
mov
sub
mov
inc
test
addl
ss
sahf
push
dec
fisttps
icebp
jl
push
inc
scas
push
insl
mov
jp,pt
fbstp
add
mov
adc
jmp
inc
xlat
xchg
ja
popl
dec
pushf
sub
lea
cmpsl
pop
outsb
mov
pop
sub
jns
xchg
lods
or
and
mov
push
cmp
jmp
adc
imul
jp
insl
fiadds
shl
mov
jne
inc
push
arpl
xchg
jo
imul
xchg
push
icebp
pop
cmp
cmp
jne
sbbl
pop
mov
or
mov
pop
lds
sub
movsl
push
xchg
imul
int3
or
cmc
fadds
push
add
pop
and
push
jg
cltd
mov
adc
stos
xchg
stc
scas
sbb
dec
sub
push
sub
add
jle
stc
add
ljmp
jnp
dec
fldenv
jno
adc
lds
daa
addr16
xchg
sysexit
mov
cmp
popa
ss
xor
inc
or
push
add
ljmp
mov
mov
xorb
test
pop
xor
xor
mov
add
jp
adc
out
mov
jae
push
cli
rolb
in
stc
mov
mov
mov
push
jae
lret
mov
shl
dec
push
pop
mov
lods
fwait
xchg
adc
fidivs
imulb
aaa
or
xchg
scas
lods
sti
into
sbb
mov
push
in
mov
mov
pusha
mov
test
movl
js
mov
addb
js
jnp
jl
cltd
xlat
pop
ja
sub
jno
pop
je
inc
push
inc
shlb
pop
sub
fdivrl
jecxz
xor
mov
jnp
dec
imul
jbe
addps
push
or
jg
mulb
mov
or
cs
push
mov
or
popa
stos
mov
in
out
xor
fwait
leave
rcrl
movsb
fisttpll
sbbl
jns
in
or
and
shl
xchg
test
repz
in
pop
cmp
insl
add
inc
xchg
pop
popa
push
jg
out
cmp
adc
adc
aas
hlt
sbb
mov
mov
cld
pushf
cli
lods
in
and
ds
push
rolb
ljmp
sbb
loop
cwtl
cs
add
add
push
cmp
test
in
leave
dec
pause
cmpl
in
lahf
lea
sub
xor
push
gs
and
lret
cmpsl
mov
cld
fnstsw
jbe
jle
inc
cmpsl
xchg
repz
dec
loop
lret
or
dec
jl
jg
divl
mov
jns
or
xor
xor
ret
cltd
pop
cmp
sbb
mov
sbb
or
sbbb
xorl
jo
cmp
add
stos
add
xchg
or
pop
dec
rcrl
outsl
test
int
jmp
add
push
push
in
inc
lret
or
adc
cmpsb
xorb
mov
fwait
push
pop
push
popa
push
ljmp
call
mov
and
mov
movsl
je
push
lods
out
add
xchg
mulb
dec
xlat
jo
xchg
push
lea
inc
sub
inc
inc
es
test
jb
faddl
cmp
arpl
in
push
push
adc
aaa
shrl
mov
push
aas
loopne,pt
push
mov
mov
sbb
cmp
mov
xchg
cwtl
inc
addl
ficomps
lock
dec
fs
jmp
lods
push
pop
sub
sahf
enter
call
add
mov
insb
hlt
mov
pop
inc
insb
data16
jge
xchg
dec
or
fsub
jbe
int3
cmpsb
aad
inc
or
push
out
pop
shll
lcall
ret
add
xor
jg
sahf
pop
cmp
add
adc
cltd
jmp
pop
and
fwait
inc
mov
fs
subb
pop
es
call
pop
shr
adc
shrb
fnstsw
cmp
int
lcall
test
mov
divl
mov
mov
push
popa
adc
dec
shlb
xchg
mov
cmpsb
lods
movsb
out
imul
popa
inc
pop
mov
and
or
jne
mov
ret
insl
dec
sbb
add
jg
in
sbb
test
cltd
andl
js
dec
cmpsl
push
test
sbb
push
cmp
fisttpll
imul
xlat
mov
rcr
sub
sub
stos
mov
pop
mov
jb
mov
aam
shlb
sbb
xor
ljmp
mov
push
cltd
fcomps
pop
scas
mov
dec
or
frstor
jp
in
xor
mov
sbb
in
data16
xor
mov
data16
lret
into
jae
xchg
lcall
int3
aad
scas
loope
aam
adc
xchg
sub
in
in
hlt
push
push
mov
les
outsb
add
sub
pop
in
sub
enter
xchg
add
out
dec
scas
jne
pop
outsl
iret
jmp
aas
test
shll
or
pop
sbb
or
mov
mov
cld
rorl
icebp
popa
std
loopne
jmp
pop
sbb
sub
push
add
int
cld
mov
push
out
fnstsw
sbb
xchg
mov
cmpsl
test
mov
mov
cmp
and
test
inc
out
sete
xor
scas
imul
mov
mov
or
aad
mov
test
mov
mov
loop
fisttps
cmp
mov
xchg
adc
mov
dec
gs
jbe
xchg
pop
imul
mov
popa
arpl
cmp
sub
into
cwtl
sbb
sahf
scas
push
mov
loope
leave
mov
mov
xor
push
mov
jb
in
mov
xor
rclb
pop
adc
xchg
orl
ret
inc
in
fstpt
cmp
mov
or
push
jae
jg
das
fstp
inc
aaa
int
mov
sti
lock
pop
fcoml
inc
inc
sub
fistpll
mov
sub
in
and
popa
push
pop
push
clc
dec
mov
inc
mov
cmp
dec
test
pop
mov
je
cmpl
mov
dec
aad
ret
sub
loop
push
inc
fidivrl
mull
jp
adc
mov
addr16
clc
ljmp
adc
rolb
fldl
hlt
jge
inc
push
mov
fiadds
dec
rolb
out
and
clc
pop
lret
mov
pop
mov
test
pop
mov
subb
xchg
or
sbb
jp
dec
pop
nop
pop
sub
push
mov
push
sub
mov
std
push
sbb
add
or
mov
test
mov
adcl
mov
dec
dec
sub
mov
fmull
cltd
xlat
xlat
mov
sbb
shl
repnz
add
enter
mov
lods
bound
popa
push
and
popa
or
mov
iret
jne
stc
out
or
in
push
in
stc
hlt
insb
lahf
push
pop
nop
lahf
js
jg
imul
pop
inc
xchg
std
mov
add
pushf
pop
ret
repz
adc
dec
mov
mov
mov
lar
hlt
cmp
movsb
mov
daa
xorl
mov
cli
push
xor
jno
mov
sarb
inc
and
mov
int3
cmp
mov
fnsave
lods
push
jno
adc
icebp
hlt
add
dec
or
sbb
in
fwait
xchg
mov
in
call
inc
lret
xlat
je
fwait
in
inc
adc
fstps
sub
cs
pop
lds
rcl
stos
jle
divl
and
add
push
xchg
adc
fcmove
pushf
xchg
in
std
lea
push
cwtl
mov
fsubp
fwait
sbb
in
lret
jae
js
mov
cmp
imul
int3
inc
xor
xchg
dec
rol
jno
mov
fidivs
mov
sbb
in
fnsave
sbb
ds
cwtl
dec
push
pop
or
pushf
hlt
push
adc
daa
imul
push
std
data16
push
inc
dec
and
in
cli
xor
cwtd
fsts
pop
sub
scas
ljmp
test
xor
popa
jp
cmova
outsl
inc
hlt
enter
rcrb
mov
cmp
rclb
mov
aaa
or
add
std
xor
mov
sbb
add
cmp
test
mov
fiaddl
jge
xchg
js
mov
mov
in
xchg
sub
mov
cmp
testb
aad
lock
or
dec
xlat
or
sub
mov
shlb
lock
xor
cmp
xchg
repz
mov
and
cmp
mov
and
adc
adcl
and
dec
mov
mov
jo
xor
or
mov
inc
mov
push
ret
inc
rorb
in
jb
sub
fadd
pop
pop
and
jl
mov
xchg
mov
insb
inc
scas
cli
mov
bound
mov
repnz
xor
jne
data16
dec
sub
ljmp
das
sbb
inc
fwait
mov
mov
inc
mov
cmp
mov
test
test
mov
xchg
sub
hlt
jl
loope
mov
mov
jne
push
lds
in
sub
dec
dec
mov
push
jecxz
pop
cmp
insl
mov
lods
lret
jge
repnz
lret
sbb
mov
jnp
clc
in
mov
test
mov
inc
adc
clc
push
pop
mov
xor
lahf
pop
ficompl
push
sar
mov
int3
imul
mov
add
mov
and
jecxz
add
sbb
pop
hlt
call
addb
mov
inc
scas
jbe
pop
imul
int3
loop
push
pop
cmp
adc
inc
out
fs
jecxz
or
out
xchg
fs
xor
out
jbe
dec
pop
sbb
inc
out
hlt
cmp
sti
sti
mov
mov
ret
imul
cli
mov
lret
and
inc
sub
add
mov
loop
lods
inc
outsb
add
mov
mov
and
fdivrs
call
sub
dec
imul
fildl
adc
lret
test
and
and
scas
mov
das
in
xlat
mov
fcmovbe
push
fisttpl
adc
pop
mov
fwait
cmp
pop
popf
add
fisttpll
mov
inc
pop
sahf
mov
pusha
sub
clc
lea
call
xchg
push
mov
out
pop
push
lcall
testb
mov
mov
das
adc
xchg
sub
dec
nop
push
jg
or
push
aad
mov
mov
iret
jno
faddl
daa
inc
roll
sbb
enter
jmp
mov
lea
lahf
in
xchg
dec
aam
fcomip
js
into
insl
dec
inc
int3
mov
xor
dec
ret
jg
adcb
repz
dec
pop
and
fs
inc
jg
sbb
cltd
mov
ja
push
add
xchg
sub
hlt
scas
movsl
xchg
jmp
adc
jae
insl
cmpsl
ds
inc
mov
dec
xchg
xchg
cmp
jb
mov
mov
outsl
ret
cmp
cmp
pop
mov
in
std
cs
inc
cmpsl
mov
nop
enter
xchg
push
hlt
cmp
movsl
adc
stos
xor
sbb
mov
sbb
outsl
add
xchg
jbe
stos
push
fwait
mov
and
mov
in
cltd
xchg
loop
pop
push
ltr
imul
add
xor
popa
xor
jmp
mov
movsb
jge
adc
hlt
lcall
or
cld
add
push
add
outsb
dec
rol
jns
ljmp
inc
pop
std
test
cmp
sbb
orl
pop
arpl
bound
test
loopne
fstpt
cli
stos
iret
les
mov
xchg
je
mov
jns
add
dec
fstpl
push
inc
mov
mov
aaa
xchg
aaa
mov
pop
fimull
jmp
or
mov
popf
out
testl
pushl
push
add
dec
mov
adc
jg
jns
pop
ds
jle
jge,pt
ds
xlat
adc
push
add
aam
into
test
les
aaa
jl
mov
inc
jno
scas
fs
icebp
sbb
mov
push
or
mov
sti
rcll
ret
push
sbb
lret
cmp
cmp
repz
sbb
dec
stos
mov
add
sbb
jp
cmp
adc
cmp
mov
ss
ret
aas
cld
inc
in
push
dec
mov
in
in
mov
stos
cmp
repz
in
stos
enter
cmpsl
add
cmpsl
jmp
in
fmull
mov
dec
add
movsl
xchg
jmp
insl
lds
in
add
xchg
and
push
or
and
imul
or
imul
outsl
rol
sbb
addb
call
jnp
leave
sub
mov
add
xor
lock
cmp
mov
cmp
mov
jbe
push
cli
pop
inc
push
xchg
roll
outsl
std
xchg
and
lcall
popa
inc
fldt
jg
xchg
xchg
mov
push
mov
inc
imul
cltd
push
add
xchg
mov
push
test
mov
mov
xchg
cmp
pop
push
fldenv
add
test
mov
mov
jmp
dec
jo
das
popf
mov
test
and
loope
mov
lods
push
daa
popf
mov
repnz
xor
xchg
addl
push
sti
push
test
xchg
fs
int
repnz
mov
add
outsb
jb
push
push
add
shll
mov
outsb
inc
cwtl
dec
and
or
inc
jg
into
jmp
inc
push
mov
out
pop
add
jecxz
fldenv
scas
dec
dec
push
sub
xor
repz
mov
pop
sub
xchg
icebp
lcall
aam
insl
fdivs
jge
jo
jp
mov
mov
pop
sbb
xchg
stos
repnz
pop
mov
xchg
push
ljmp
imul
and
outsl
inc
pushf
pop
jl
jo
and
incl
mov
dec
mov
popa
leave
movsl
fadds
pop
dec
jecxz
hlt
jle
cmp
sbb
sbb
or
out
jno
shll
pusha
add
xorb
nop
mov
gs
rcl
dec
loope
das
add
cli
cmp
scas
adc
jp
jbe
jns
inc
out
in
ret
pop
dec
aam
jge
mov
adcb
sbb
mov
lcall
shr
mov
das
fdivs
pop
xchg
push
int
inc
cmp
mov
es
push
scas
fdivs
inc
ljmp
inc
push
xchg
adc
mov
push
stos
or
in
dec
push
xlat
rcrl
cwtl
popf
pop
idivb
test
jge
fwait
cmp
cmpsb
jns
movaps
fistpll
xor
loopne
xlat
xchg
push
cmp
cmp
fnsave
enter
add
popf
or
or
popf
xchg
aad
or
and
ret
outsl
pop
xchg
out
push
xchg
lret
mov
jecxz
gs
adc
xor
xchg
dec
imul
hlt
lods
loop
xchg
out
mov
or
xor
mov
sub
mov
inc
ss
sahf
nop
inc
sbb
cmpsl
xor
les
mov
and
loope
in
mov
lcall
xchg
pop
ffree
adc
or
jmp
jg
lods
sub
fstl
mov
push
aas
or
pop
pushw
or
mov
xor
jns
jmp
rcr
aaa
cmp
test
call
push
add
cmp
loop
sbb
popa
mov
jne
dec
push
mov
or
mov
movsb
or
xor
mov
sahf
es
push
cmp
gs
sub
jo
jmp
sub
fcomi
adc
pop
fdivl
jo
lods
into
jmp
push
adc
dec
xor
lds
push
lds
sbb
mov
bsf
xchg
jbe
mov
lcall
jle
std
xlat
or
xchg
fildll
dec
sub
jae
sbb
inc
inc
pop
push
push
fidivl
sbb
mov
adc
mov
push
stos
in
pop
lret
dec
sbb
xchg
mov
cwtl
or
cmp
mov
lds
nop
scas
inc
mov
push
pop
loope
das
mov
pop
add
push
inc
jp
out
notb
shrl
mov
addb
or
ss
xor
mov
out
add
mov
xchg
ror
xchg
pop
fistl
jno
scas
cmpsb
mov
adc
inc
sub
pop
jecxz
mov
push
movsb
lahf
shr
xor
js
xor
inc
orb
and
fucomip
cmpl
icebp
push
lcall
imul
cmp
adc
mov
adc
xlat
mov
popf
xchg
push
sti
mov
stos
test
cwtl
cwtl
pop
push
jb
mov
pushf
sti
dec
test
and
sbb
mov
les
mov
test
xor
xchg
roll
nop
inc
rorl
lahf
out
mov
es
aad
sub
ss
mov
lds
int3
fsubl
sbb
xchg
xor
sub
bound
cltd
scas
scas
pop
test
mov
xorb
pop
cmpsb
icebp
jo
inc
movsl
cwtl
cmp
pop
data16
lea
sub
push
lock
fidivl
push
and
ret
dec
iret
pop
out
test
movsl
fwait
in
movswl
mov
sbb
inc
pop
push
das
push
pop
addb
adc
mov
mov
cmpsl
jle
mov
lret
jmp
sub
xor
mov
jmp
jae
dec
push
jae
inc
out
shll
push
jecxz
fdiv
xor
mov
mov
out
sub
ret
rcll
jmp
mov
add
clc
inc
pop
adc
mov
xchg
cmpsl
add
sub
push
dec
dec
push
push
das
and
lods
cmpb
test
mov
adc
lock
or
pop
jg
add
mov
add
pop
and
fwait
rclb
lret
xor
mov
ds
cli
pop
mov
movsl
in
inc
mov
lcall
lcall
sub
adc
jmp
push
xchg
cmp
adc
dec
xchg
mov
jnp
or
cwtl
andl
push
in
sub
xor
mov
jns
rcr
pushf
rcr
jecxz
xchg
mov
ret
inc
mov
imul
mov
aaa
and
insb
shrb
sub
ja
insl
daa
imul
pop
cltd
push
pop
push
jo
jmp
test
hlt
sub
cld
shl
mov
cltd
call
jp
sbb
push
add
lea
lock
add
cmp
ja
shrl
int
and
cmp
pop
lret
lds
repz
mov
mov
jo
xor
js
xchg
sub
fdivl
or
pop
jp
mov
lahf
cmpsb
clc
add
jnp
cmp
jae
movsb
cmp
ds
aam
dec
lahf
push
sbb
inc
pusha
rcr
test
xchg
movsb
nop
sub
pop
jle
inc
out
lret
jg
mov
cmp
cmp
mov
pop
adc
je
jmp
mov
rcrb
or
pop
mov
outsl
and
mov
stos
xchg
inc
mov
cli
jns
push
sahf
pop
lods
loop
lods
push
mov
lods
in
cmp
rcll
push
adc
mov
in
xchg
mov
ds
mov
mov
or
mov
ret
mov
lock
sub
adc
fisubl
lea
test
push
daa
scas
xor
bound
xor
mov
mov
in
iret
jbe
call
hlt
xor
popa
push
pop
push
mov
addr16
xchg
sub
in
xor
pop
inc
aam
fdivl
ss
adc
jo
out
adc
jno
mov
aad
push
jns
mov
js
into
sub
daa
sub
subb
or
push
xor
je
rcrb
xchg
sbb
loopne
add
pushf
xchg
inc
or
mov
adc
fiadds
out
xorl
in
into
push
popf
jnp
adc
test
lcall
xchg
mov
fnsave
mov
iret
sub
stos
sub
and
fisubrl
movl
ljmp
inc
je
mov
xchg
sbb
stc
cmp
xor
add
adc
add
jnp
hlt
pop
mov
pop
or
dec
jg
fdivrl
xor
imul
push
mov
ja
pop
cmp
lret
pop
and
int3
rcl
mov
jg
ffree
addr16
dec
add
push
nop
repnz
adcl
ja
xchg
bnd
inc
pop
add
xchg
xlat
lock
je
push
mov
add
popf
pop
sub
mov
pop
addl
test
pop
xchg
test
es
das
pop
add
sub
rcll
pop
pushf
pop
mov
sti
pop
dec
fstps
pop
jae
jg
and
out
mov
and
cli
mov
fld
je
cmp
xchg
jp
pop
and
mov
test
mov
dec
lret
imul
pusha
sub
cmp
push
insl
jl
fcmovne
loop
incl
test
dec
jbe
and
cmpsb
xchg
jo
sbb
movsb
fcomi
imul
icebp
in
insb
add
out
sbb
dec
and
sbb
movsl
in
out
push
je
roll
mov
bound
inc
xor
jae
inc
pop
fs
cmpsb
sub
push
or
mov
or
push
adc
dec
jl
pop
mov
add
dec
mov
jne
nop
jne
call
ss
enter
mov
mov
or
test
and
in
aad
cli
jle
nop
mov
repz
les
xlat
add
inc
mov
push
xchg
mov
mul
add
in
test
xchg
mov
mov
push
pop
jp
xor
jbe
mov
sbb
xor
adc
jne
ss
push
adc
sbb
mov
adc
fadds
pushf
add
jge
fdivrp
movsl
xchg
xor
adc
push
add
dec
inc
repnz
outsb
xor
jno
in
dec
pop
in
leave
pop
icebp
sub
imul
js
dec
pop
sti
ljmp
rclb
int3
cltd
inc
sarb
int3
fneni(8087
test
adc
xchg
dec
inc
lock
lods
jge
inc
inc
imul
sub
lcall
pop
rorb
rcll
es
jp,pn
test
cmp
add
test
dec
inc
mov
fistpll
push
out
ja
mov
out
insl
mov
xchg
pusha
pop
add
outsb
add
dec
mov
adc
cmpsl
or
mov
int
pusha
mov
addr16
sub
js
ja
cmc
es
js
popa
sbb
movsl
shll
movsl
push
add
sub
sbb
in
cmp
jo
filds
sub
cmp
clc
dec
push
lret
scas
and
jnp
pop
je
inc
out
mov
fnsave
repnz
loop
mov
mov
sbb
inc
loop
mov
push
insl
inc
mov
iret
fsubrl
lods
dec
xchg
push
jg
mov
and
jb
fidivl
add
enter
das
stc
jb
or
mov
xchg
jl
sbb
cwtl
sub
mov
pop
in
jle
sub
add
sub
sub
xor
mov
sbb
push
adc
mov
js
sub
xchg
jg
sbb
pop
dec
ljmp
cltd
pop
shl
sub
xor
jmp
rcr
pop
jecxz
sahf
jae
and
cmp
dec
leave
sbb
xchg
push
in
addb
popa
inc
push
pop
ret
jo
pop
ret
mov
sub
push
mov
mov
cmp
push
push
mov
outsb
addr16
xchg
cmpsl
movsb
cmp
popf
push
jmp
or
or
das
push
mov
jg
xchg
jae
rcrb
dec
shl
jmp
jl
jg
sub
in
pop
xor
dec
fcoms
lcall
sbb
xchg
adc
add
cmp
cmpsl
add
lock
pop
xor
pop
push
xor
or
push
in
push
jg
mov
xchg
lcall
cmpsl
aam
addb
pop
cmp
movsb
outsb
sbb
fadd
adc
dec
movsb
outsb
and
mov
cmp
or
negl
pop
dec
fmuls
add
loop
sbb
mov
and
cmc
scas
clc
rcrl
out
jmp
shlb
into
repnz
cmp
cmp
jae
aam
xor
push
pop
adc
or
or
imul
imul
add
lods
mov
lea
push
mov
adcb
in
sub
stos
mov
clc
or
pop
cmp
pop
dec
shr
xor
sub
or
leave
cmp
insl
fcomps
push
adc
jle
insb
push
nop
jg
daa
pop
ret
push
or
pop
adc
and
addr16
setg
rorl
in
lds
lods
movsl
push
daa
out
sub
mov
pop
hlt
push
sahf
push
scas
mov
addr16
lret
loop
out
jne
xor
int3
add
jle
lcall
int
sub
aas
add
into
lock
mov
rol
ss
adc
or
loopne
repz
pop
sub
xchg
or
lret
bound
shrb
and
addb
jb
xchg
xor
enter
sahf
out
pop
push
mov
mov
sub
idivl
push
adc
xorb
sti
mov
addr16
addr16
cmp
pop
in
pop
fidivrl
js
mov
xor
xchg
stc
ret
fsubr
push
sbb
enter
outsl
out
movsl
mov
and
lahf
test
xorl
cmp
jmp
mov
cmpsb
sbb
cmp
and
push
xchg
es
sub
and
mov
sbbl
ss
call
cmp
jp
inc
cmpsb
push
mov
loopne
mov
sbb
lock
aaa
aas
cmp
popa
mov
movsb
mov
push
rclb
stc
xchg
incb
xchg
out
jmp
and
add
test
xchg
movsl
jno
mov
inc
stc
inc
xor
das
adc
lahf
fwait
push
mov
mov
mov
lret
push
add
insb
sbb
mov
ds
sbb
insl
in
pop
sub
outsb
mov
test
adc
sbb
pop
decb
pop
push
shr
dec
push
test
sahf
inc
adc
arpl
add
clc
insb
mov
icebp
subl
add
les
inc
int
inc
cli
lea
mov
add
fiaddl
and
int
arpl
jl
movsl
movsl
imul
test
aad
pop
jns
push
push
add
rep
in
jp
outsb
sarl
movsl
xchg
movsl
pop
into
jb
cwtl
das
mov
aam
mov
cmpl
sub
mov
data16
dec
pop
xchg
xchg
pop
jmp
inc
das
xchg
and
scas
mov
mov
stos
and
cmp
ja
and
ret
push
adc
icebp
push
cli
shrl
addr16
push
add
mov
xchg
imul
sub
and
mov
gs
mov
lock
in
aaa
cmp
and
cmpl
fsubp
jle
fdivp
lret
sub
lret
adc
dec
call
xchg
jmp
pop
lahf
subb
insl
nop
inc
imull
pop
test
leave
repnz
js
cmp
clc
xor
ror
cld
test
dec
sbb
push
sub
pcmpeqw
aad
adc
dec
push
rcl
gs
pop
pop
xor
out
dec
jnp
adc
sbb
adc
add
scas
aaa
das
dec
js
shrb
fwait
jbe
push
push
push
xchg
jle
test
ret
dec
test
inc
andb
ret
out
mov
ljmp
inc
push
fildl
jmp
loop
xchg
notl
jp
enter
push
mov
push
jns
sti
daa
sbb
in
xor
mov
xchg
pop
fsub
loope
mov
add
jnp
and
cltd
bound
in
xchg
arpl
jne
jecxz
jle
loope
or
mov
pop
repnz
cltd
add
or
iret
mov
push
rolb
push
dec
pop
das
add
and
push
mov
pop
push
adc
lahf
jmp
dec
test
xchg
out
sub
out
pop
sbb
pop
mov
scas
adc
leave
fninit
mov
js
sahf
mov
jl
sub
fs
stos
std
lods
lret
dec
ljmp
lret
jp
mov
lret
xor
add
std
inc
mov
inc
out
or
das
jbe
dec
das
ret
jle
sub
test
push
push
in
push
sub
sub
mov
inc
inc
stc
cld
add
inc
adc
xor
lods
pop
inc
jns
mov
jl
roll
adc
mov
mov
pop
jne
fwait
jno
das
div
cld
mov
fs
mov
or
nop
jo
les
daa
push
mov
inc
fwait
mov
sti
enter
or
ljmp
lret
fidivrs
pop
aaa
fwait
adc
je
push
jne
inc
std
int
push
inc
and
push
cltd
sbb
ss
je
ds
mov
mov
lock
insl
dec
sub
cwtl
pop
jmp
push
rcr
lock
fs
inc
jl
shlb
aad
jno
sbb
popf
pop
jl
loope
dec
xchg
faddl
movsl
jle
mov
jns
mov
mov
or
adc
je
mov
pusha
sahf
push
int
pop
iret
mov
enter
xchg
jle
dec
inc
pop
xchg
stc
dec
jge
dec
push
notb
aas
sub
jmp
jb
adc
orl
add
fs
push
test
xor
sub
nop
mov
dec
fsubrs
and
imul
popa
mov
bound
mov
push
shlb
enter
sbb
sbb
jbe
inc
push
xor
sti
fucomp
aad
scas
sbb
fisubs
mov
push
rcl
and
pop
outsl
xchg
push
inc
cltd
cmp
popf
test
push
mov
mov
pop
and
cmp
sbb
jg
cmp
addl
jno
push
out
icebp
pushf
icebp
adc
aaa
push
xor
popf
fdivrs
mov
add
lret
and
std
movl
inc
mov
push
pop
mov
push
mov
movsl
and
mov
mov
xchg
xchg
notl
add
sub
mov
mov
and
mov
dec
call
push
sbb
je
lods
pushf
inc
push
mov
pop
xor
mulb
dec
sbb
pop
cmpsl
lahf
and
adc
mov
jmp
test
cmpsl
scas
push
or
mov
cmp
sbb
adc
lcall
lret
sbb
es
mov
cmp
cmp
outsb
pop
loope
lahf
mov
and
or
push
xchg
in
cmp
cmpb
xlat
dec
outsl
and
push
xchg
mov
mov
xchg
mov
jno
push
popf
push
xchg
push
sbb
repnz
sbb
popf
cli
and
mov
pushf
mov
dec
jno
shrl
cmc
add
or
pop
and
mov
repnz
sub
dec
cmpsl
jno
add
fs
mov
mov
dec
sub
test
inc
test
ficomps
scas
popf
xor
mov
pop
lea
mov
push
push
int
daa
mov
push
sti
xor
pop
pop
mov
mov
sbb
lods
mov
inc
jmp
inc
test
lods
sbb
mov
dec
adc
push
adc
jg
and
into
or
lahf
dec
adc
jl
sub
mov
mov
add
pop
mov
ljmp
test
add
in
icebp
inc
shr
icebp
cmp
sbb
test
xor
aaa
pop
sub
xor
or
pop
lock
out
or
stos
lods
mov
sbb
push
cld
pushw
into
mov
adc
xor
dec
adc
outsb
lcall
jecxz
outsb
call
xchg
orl
xchg
incl
sub
inc
cmc
cmp
data16
pop
test
xor
sub
and
xchg
push
and
pop
inc
dec
mov
push
cwtl
or
imul
movsl
mov
stc
sbb
incl
and
loop
push
xchg
int
aam
faddp
mov
dec
inc
push
fstl
push
outsb
in
test
sub
xlat
mov
sbb
leave
mov
int3
imul
sbb
nop
aaa
pushf
icebp
pushf
shrl
bound
dec
rol
jnp
int
sub
lea
insb
subps
or
loopne
mov
test
pop
movsl
imul
lds
add
mov
or
pop
aas
cltd
aas
loope
inc
and
pop
aam
dec
movsl
mov
xchg
ss
into
xchg
cmp
aam
sub
iret
push
xlat
test
pop
pop
sub
xchg
int
mov
fcmovb
xchg
mov
push
pop
sub
cmp
sahf
pop
ret
push
pop
jl
mov
incb
xchg
or
mov
imul
and
mov
dec
jbe
sahf
and
jl
shl
enter
sbb
push
sarl
inc
out
jmp
and
mov
mov
mov
ret
or
jmp
or
and
cmp
mov
xor
gs
mov
jg
push
xchg
pop
scas
std
popa
xchg
fwait
pop
fs
sub
loope
add
mov
add
lea
clc
inc
aam
inc
pop
xor
xchg
outsb
pop
sub
mov
popa
cmp
dec
insb
sbb
pop
jns
cmp
cmpsb
leave
mov
cmp
mov
pop
jo
movb
sbb
adc
push
xchg
sahf
data16
and
mov
call
push
mov
ja
xchg
or
and
aam
sub
neg
adc
out
cltd
inc
cmc
xchg
shlb
adc
push
sbb
out
cmpsb
jp
xchg
movsl
mov
lret
insb
int
jle
jp
imull
loope
mov
loope
js
mov
cld
or
das
sub
pop
pop
add
add
cli
sbb
xchg
sti
adc
pop
scas
ds
loopne
scas
ficoml
add
pop
in
sbb
std
popa
aad
test
loop
mov
jnp
pop
adc
aaa
cli
lods
xchg
or
iret
push
ret
add
push
mov
or
adc
push
jge
push
int3
daa
sub
xchg
sbb
daa
pop
nop
insb
sbb
mov
jne
mov
mov
call
cmp
pop
cmp
pop
test
push
icebp
xor
jne
cmpsl
dec
out
sbb
mov
movl
test
cmp
push
sbb
lahf
insb
std
scas
push
lods
adc
imul
mov
mov
rcrb
sub
fstps
loop
sbb
les
jge
loope
repnz
ret
stc
dec
xchg
outsl
lcall
lods
lahf
xor
call
lret
hlt
repnz
mov
jo
adc
sahf
and
add
xchg
dec
pop
adc
fsubs
mov
xorl
and
testb
inc
lahf
jecxz
add
adc
repnz
jle
or
jge
add
lret
je
loopne
mov
inc
addr16
int
cwtl
jno,pt
jo
xor
in
fwait
ret
sub
adc
cmp
cmp
push
imul
xchg
ja
inc
pop
xor
and
icebp
pop
jmp
pop
and
xlat
push
inc
lods
orl
and
or
mov
pop
inc
jle
bound
jne
push
mov
nop
mov
fwait
cmpl
fdivs
pop
or
arpl
stc
fxch
pop
xor
test
cli
or
sbb
pusha
stos
pop
cmp
popf
jae
andl
inc
push
insb
ss
fimuls
aas
out
outsb
mov
push
incl
ljmp
pop
pop
ret
addr16
leave
adc
pop
lcall
popf
jae
daa
add
movsl
xchg
xor
stc
mov
sbb
hlt
cli
andl
fldl
lcall
mov
std
inc
pop
push
loope
cmp
adc
incb
sbb
xchg
shr
hlt
sub
jmp
inc
aas
adc
add
aam
jg
cmp
dec
pop
dec
jge
mov
lret
mov
cmpsb
fsubr
pop
cmp
lret
push
cmp
popf
pop
pop
jle
mov
pop
into
jmp
mov
sub
cmp
popa
scas
jmp
dec
int
xor
cmp
mov
jns
xchg
leave
out
push
mov
xchg
push
jae
mov
lret
add
jns
or
mov
mov
nop
flds
movl
imul
xor
xchg
sub
andl
add
mov
int3
mov
insb
mov
rclb
inc
cwtl
aas
addr16
loopne
mov
jb
aad
aaa
lock
dec
sub
out
push
adcb
loop
fsubs
push
xlat
push
cmp
les
inc
fstpl
mov
cmp
imulb
dec
push
repz
push
or
mov
xchg
jno
outsl
ss
pop
sub
scas
and
mov
fldcw
push
jns
ljmp
jne
and
dec
aas
push
add
cli
inc
jmp
sub
mov
xchg
jl
mov
scas
imul
xchg
or
out
sub
test
push
ret
mov
mov
icebp
xchg
mov
frstor
test
fstl
sbb
push
pop
cli
sti
pop
fcoms
stos
push
pcmpgtd
stos
xor
out
lods
mov
bound
sti
fdivp
and
sbb
add
cmp
pop
ret
or
imul
out
int
sub
mov
iret
adc
pop
aad
pop
loopne
ja
gs
push
fsubl
lea
int3
cmpsl
test
insl
cmp
loopne
and
ret
rclb
cmp
mov
pop
or
push
out
inc
pop
lods
scas
sbb
andl
mov
int
iret
push
dec
clc
int
div
cmpsb
arpl
addb
shlb
mov
lods
jmp
mov
js
and
adc
out
cmp
mov
xor
jp
push
xor
dec
inc
ret
aad
mov
js
jbe
data16
sbb
inc
xor
push
stos
or
out
mov
and
mov
adc
dec
loope
add
in
xchg
mov
jo
and
xor
jge
pop
pop
cmpsl
pop
or
pop
add
lcall
out
or
and
sub
mov
push
fdivs
cmpsl
out
xchg
xchg
sti
gs
or
push
movsl
clc
xor
in
push
fmuls
out
cmp
xchg
mov
fsubs
dec
push
push
cmp
dec
and
cmc
mov
push
pop
std
xor
loope
js
bound
cs
int
adc
out
xchg
pop
add
dec
jbe
mov
adc
push
and
sub
fidivs
fwait
in
in
loopne
inc
fisubrs
cli
push
add
adc
cmpsb
or
ret
insb
push
pushf
adc
xchg
push
mov
sbb
sahf
mov
pop
adc
xor
out
inc
jmp
mov
or
xor
rorl
add
je
push
mov
or
roll
in
mov
jge
mov
fsubrl
cwtl
fisttps
inc
dec
jge
dec
cld
jbe
dec
fwait
aas
dec
roll
fcoms
test
adc
adc
divb
outsl
fcomip
mov
or
pop
popa
or
adc
mov
leave
push
std
jbe
out
sub
imul
fs
adc
popf
dec
test
xchg
hlt
mov
sahf
fldt
push
push
loop
lock
scas
in
adc
and
and
add
repz
cmp
fdivl
insb
das
iret
adc
sarb
push
sub
fsubs
jae
sti
push
push
imul
mov
ja
mov
sub
pop
int3
test
push
mov
sti
test
pop
or
xor
adc
pop
arpl
je
fisubs
sbb
fwait
dec
xor
cmp
xchg
in
push
pop
daa
cmp
inc
inc
lock
fadd
lds
mov
scas
push
pop
add
stos
out
mov
arpl
sbb
mov
lock
jmp
inc
jecxz
and
lfs
pop
int
mov
xchg
mov
dec
js
nop
aaa
jae
outsb
loope
mov
cmpsb
pop
mov
adc
shrb
ficomps
xchg
insb
mov
pop
adc
movb
pop
mov
and
mov
mov
jecxz
gs
pop
pop
push
and
inc
xor
test
fstl
into
and
mov
test
lret
push
js
movsb
lods
rcr
imulb
fdivrs
cmp
pop
mov
divb
scas
in
pop
mov
scas
pop
xchg
fidivl
xor
ds
fsubrl
or
nop
mov
sahf
mov
xchg
inc
popf
in
xor
xor
jle
ret
or
inc
xchg
lock
popf
mov
add
mov
test
enter
sub
mov
sub
leave
int
ret
cmc
mov
cmpsb
xor
push
pop
mov
jecxz
sbb
int
loope
loop
movsb
test
inc
enter
outsb
movsb
adc
in
leave
mov
iret
hlt
pusha
cmp
sub
out
sbb
dec
jp
xor
add
adc
loope
push
outsb
insl
sub
xor
dec
pusha
mov
mov
mov
ja
dec
sub
inc
or
inc
sub
jb
cmp
shrb
or
mov
inc
shll
cs
in
testb
movsb
add
je
xor
in
mov
pop
or
inc
test
push
cmp
and
mov
mov
push
mov
push
sub
push
and
aad
add
testb
jno
in
repz
test
push
push
inc
daa
mov
in
mov
sub
stc
sbb
int3
sbb
mov
sub
enter
xor
dec
mov
in
jnp
lods
mov
scas
jecxz
inc
pop
sbb
popa
dec
jge
cmp
lds
inc
fcoml
icebp
mov
arpl
arpl
mov
jmp
iret
nop
xor
icebp
xlat
pop
iret
push
mov
or
loop
jl
loope
sarb
xchg
mov
popf
out
ret
inc
mov
in
ret
and
jnp
mov
jp
push
incb
jecxz
lcall
xor
pop
push
dec
and
filds
xor
mov
xchg
daa
dec
push
stos
daa
xor
push
das
int3
test
int
call
popa
jp
int3
sub
cmpsb
ret
and
dec
jae
popa
in
sbb
mov
rol
shrl
popa
or
and
in
adc
sub
push
aaa
lock
and
sub
lahf
mov
dec
popa
push
push
lahf
cmp
sub
push
or
xchg
mov
loopne
adc
jbe
sbb
bound
adc
js
and
push
addr16
in
mov
repnz
mov
xchg
xchg
fnstenv
leave
mov
mov
xchg
adc
in
sbb
mov
jmp
xchg
cmp
mov
aam
cmp
sbb
inc
into
addr16
cmp
addb
lahf
gs
and
push
jecxz
rorb
xchg
mov
aaa
dec
jb
xchg
pop
pop
out
cmp
sub
sub
test
int
lret
mov
sbb
or
loop
cli
or
leave
fbstp
and
jne
sub
mov
test
adc
cmp
faddl
mov
fnstcw
pusha
lds
fs
push
das
push
scas
cs
add
jae
push
fwait
sub
sub
push
popa
or
fs
sub
icebp
lods
inc
ds
dec
int
sbb
or
in
dec
fdivrs
fisubrs
pop
pop
dec
sbb
inc
jmp
mov
insb
imul
inc
es
jl
pop
test
lea
push
mov
ret
test
xor
mov
inc
enter
js
and
enter
inc
fldcw
mov
fcmovnu
and
cmc
or
jo
hlt
divb
push
mov
xchg
mov
mov
or
fisubs
jbe
inc
push
jns
adc
jae
fsubrl
adc
out
lods
sub
out
hlt
dec
sub
inc
sub
out
lea
mov
lahf
cmp
dec
or
dec
fwait
mov
loopne
cmp
sti
and
and
or
mov
xor
shrl
add
jbe
lret
ljmp
sbb
arpl
imul
int
lds
dec
ljmp
mov
arpl
sti
fsts
lahf
and
js
xor
jbe
sub
movsb
cld
fcmovnu
arpl
jno
jne
out
mov
adc
mov
sub
jl
nop
scas
push
lock
lret
xor
popa
ds
jp
lods
xchg
pop
jnp
orl
push
rolb
jbe
dec
rcrl
daa
scas
adc
cmc
lock
loop
jb
pop
cmp
lods
pop
adc
cmp
mov
call
lods
enter
add
add
ljmp
mov
ljmp
jno
dec
sub
jle
and
test
scas
jge
rep
imul
jne
pop
mov
aam
cmp
mov
pop
sbb
jecxz
outsl
xchg
aas
xchg
xchg
xlat
jl
sti
addl
sbb
arpl
pop
test
push
cmp
dec
loopne
test
stos
aas
sbb
pop
xchg
stos
jmp
testb
sbb
in
pop
adc
dec
cmpsb
add
push
jae
jno
loopne
dec
ret
pop
push
dec
push
insb
pop
add
leave
insl
out
sbb
push
dec
sub
arpl
les
jl
fcomip
aam
lea
mov
fisubrl
hlt
cs
cld
stc
out
shl
sub
idiv
testl
fldl
xchg
mov
inc
stos
jle
fbstp
leave
std
sub
mov
push
in
cmp
out
rcrl
cmp
cld
fadds
sahf
cmp
jl
xchg
scas
imul
mov
mov
popf
xlat
sub
cmpsb
push
dec
sub
sub
sub
sub
pusha
pop
subb
aaa
and
repz
xchg
xorl
jg
jl
hlt
fsubl
cli
std
sbb
inc
ds
add
loope
push
out
mov
lcall
cmpsl
adcb
cmp
mov
xor
push
test
repz
pushl
stc
dec
and
jmp
idivb
iret
push
arpl
ja
sahf
jp
jae
or
cmp
cmp
ljmp
out
sbb
cwtl
mov
mov
aad
enter
nop
fdivrl
add
xchg
jmp
add
cmpb
mov
mov
stos
mov
inc
inc
mov
mov
xor
repnz
mov
inc
clc
test
adcb
mov
and
jo
js
icebp
add
pop
iret
cld
push
sarl
fwait
test
sub
cmpsb
sarl
xchg
mov
inc
cmp
sbb
lea
xchg
cmp
or
sub
mov
and
ret
pop
dec
pop
js
mov
dec
es
mov
lds
inc
dec
mov
out
adc
daa
cmp
ja
jmp
sbb
ja
jb
push
ret
mov
sbb
push
mov
ljmp
bound
adc
add
or
adc
mov
sbb
xorb
pop
or
mov
jmp
adc
push
xor
sbb
adc
sbb
xchg
xor
mov
dec
es
ficoml
inc
adcb
jbe
mov
jbe
add
cli
push
push
sbb
and
sbb
mov
fsubrs
out
cmp
sub
into
insl
fmull
add
push
sub
mov
xor
repz
rorl
sub
jp
sbb
daa
bound
or
fcmovnu
out
sub
mov
repz
mov
jnp
lret
int3
ja
pop
adc
daa
rcrb
arpl
mov
xchg
cmpsb
in
cmp
adc
ljmp
int3
jb
daa
mov
ret
lea
rcll
fsubrl
and
pushf
outsb
dec
pop
sbb
sbb
jmp
mov
mov
lcall
js
scas
fucomip
in
add
fldt
sbb
xchg
arpl
and
add
mov
or
ljmp
cmc
push
scas
sub
call
inc
xor
mov
mov
push
add
in
in
jbe
jb
out
xor
mov
insb
or
rolb
pop
test
jge
pop
add
pop
filds
das
jnp
inc
clc
ss
xlat
loop
dec
ljmp
iret
xchg
cmp
xchg
mov
stc
js
sub
cmp
iret
popa
scas
insl
out
jb
in
cmp
sbb
push
jecxz
popa
add
add
inc
jp
fcoms
sub
imul
pop
mov
out
dec
dec
xor
sub
adc
mov
pop
dec
xchg
xchg
xchg
mov
inc
aad
adc
fs
sbb
ljmp
ja
rcl
cli
adc
vpsraw
stc
loop
test
dec
test
ret
loope
insb
inc
sub
rorb
xchg
jns
pop
pop
push
fisubrl
lret
jae
popf
sub
in
aam
inc
push
jle
nop
push
aaa
or
ljmp
xchg
in
mov
aas
loopne
cmp
mov
and
dec
rclb
or
add
in
je
xor
lea
nop
outsl
cltd
and
xor
gs
lds
imul
cmp
add
fistps
cmp
xchg
jl
xlat
xchg
arpl
arpl
rorb
pop
add
std
rclb
sub
repnz
iret
repnz
mov
loopne
and
aad
sbb
pop
mov
pusha
stos
mov
or
sbb
mov
fdivs
ja
mov
arpl
or
inc
cmp
gs
jmp
lods
xor
divb
jmp
mov
mov
xchg
lods
mov
scas
pop
loope
mov
sbb
rolb
pop
cmp
jcxz
sub
out
repz
xchg
cmp
leave
jae
fwait
xor
adc
aam
jb
push
mov
test
mov
xor
xlat
xchg
sub
or
test
jo
lds
neg
xor
push
mov
lock
or
dec
sti
inc
push
and
aas
mov
dec
xor
cmp
mov
xchg
push
or
popf
xchg
imul
int3
movsl
dec
xor
xor
jb,pt
cmc
cmpsl
aaa
mov
out
xchg
inc
in
jle
aad
test
aas
bound
sbb
adc
push
and
mulb
outsl
cwtl
aas
add
imul
jl
test
cmc
jo
xchg
das
scas
lea
out
aaa
jns
leave
sbb
lods
pop
rolb
lcall
lods
jmp
out
data16
pop
lcall
in
pop
and
sbb
push
push
push
push
addr16
jmp
jo
fdivs
out
int
cwtl
ss
pop
pusha
or
jne
cmp
push
cli
cmp
jae
cltd
mov
es
jo
cmp
pop
outsl
iret
ficoms
shll
call
stc
cmpb
xor
pop
and
pop
fimuls
into
xchg
inc
enter
xlat
cmp
scas
xchg
aam
out
adc
xor
inc
gs
icebp
xchg
sbb
cwtl
mov
lcall
iret
jae
pop
pop
fisubrs
dec
movsb
rol
xchg
inc
out
add
lods
std
inc
lds
dec
outsb
aaa
aaa
mov
loope
out
jne
dec
fnstcw
mov
jmp
inc
xor
iret
repz
xlat
sbb
adc
lcall
jnp
call
jg
fnstsw
out
push
repnz
mov
mov
sbb
sbb
or
jns
test
les
jmp
movsl
mov
xor
pop
js
cmpb
scas
shlb
dec
fists
mov
cmpsb
fsubl
and
xor
add
hlt
scas
test
jp
lret
mov
data16
cmp
sbb
or
push
in
mov
pop
ret
sub
or
push
lret
mov
or
dec
in
movsl
mov
xchg
inc
mov
push
movsl
cld
mov
wbinvd
jnp
dec
mov
mulb
mov
add
sahf
cmp
sti
es
jb
iret
push
inc
mov
push
jb
cmp
push
call
cli
mov
pop
jp
mov
ret
or
xchg
add
pop
cmp
adc
fxch
dec
sub
insl
outsb
stos
xchg
les
gs
sub
push
cmpsb
lret
repnz
cwtl
in
xor
test
loopne
jne
dec
push
movsb
dec
push
pop
js
push
mov
push
add
sbb
into
mov
andl
mov
or
adcl
into
xor
pop
adcl
cmp
in
movsl
dec
sub
dec
ds
call
mov
ret
dec
popf
cmp
insb
ret
add
pop
call
int
push
jno
xlat
add
in
push
ret
mov
shr
pop
in
je
outsb
movsl
sahf
jb
sub
orb
or
or
out
pushf
cld
cmp
outsl
mov
xchg
mov
imul
fdivrs
int3
add
xchg
or
cli
shl
sub
lret
pop
je
and
std
mov
cmp
adc
lods
push
outsb
outsl
adc
push
in
mov
pop
pushf
out
rcll
pop
mov
outsb
or
fwait
pushf
jb
sub
push
movsb
sub
neg
daa
cs
cmc
xchg
xor
mov
cmpsl
out
loop
dec
jmp
inc
lods
sbb
sbb
lcall
clc
lock
gs
jo
xchg
sbb
inc
push
inc
pop
sub
mov
jle
cltd
mov
xchg
or
sbb
test
enter
cmc
aam
int
pop
jno
in
inc
test
jb
stos
in
push
dec
mov
fwait
cwtl
mov
pop
pop
inc
inc
dec
addr16
shr
ret
fcompl
mov
roll
jge
mov
shll
push
add
add
xor
mov
inc
cmpsl
pushf
pop
shlb
dec
test
enter
rolb
sbb
jmp
push
cld
bound
mov
mov
dec
sti
push
xchg
sahf
cld
cmp
jne
imul
mov
sbb
into
pop
push
cmpsl
mov
cmp
xor
or
js
sbb
lods
popa
addr16
data16
sub
leave
lock
imul
inc
mov
xchg
pop
or
fimull
push
sub
nop
sbbb
push
neg
add
push
movsl
xor
push
or
jmp
adc
adc
mov
sbb
dec
cltd
imul
push
iret
lea
push
gs
mov
pop
push
flds
xor
mulb
insb
add
mov
popa
xor
cmc
add
mov
jmp
pusha
test
inc
inc
lea
mov
stos
sub
ret
xchg
push
cmp
push
dec
ret
jns
adc
xor
cmp
fs
imul
push
jbe
out
lret
insb
imul
push
and
aaa
les
std
jmp
jns
push
jecxz
imul
inc
pop
clc
scas
adcl
out
subb
xlat
mov
test
xchg
hlt
xor
testb
lods
scas
loopne
add
or
icebp
fistl
add
sbb
inc
loope
inc
dec
jge
mov
mov
xchg
shll
int
mov
je
or
dec
std
pushf
xor
adc
mov
js
fbstp
jne
js
pop
push
xchg
loope
jl
inc
mov
xor
jnp
sbb
inc
int3
and
jne
jbe
stc
jge
cs
jle
dec
cmc
or
pop
jle
leave
xor
fs
jle
jle
jge
ret
cmc
gs
inc
mov
jp
lret
jmp
mov
mov
add
xchg
lahf
int
push
or
jmp
xor
cmp
fs
jne
rcrb
adc
mov
daa
lods
xchg
dec
mov
fs
jo
jle
push
mov
push
js
pop
repz
xor
and
add
jne
sbb
scas
fs
xor
sub
add
aas
les
stc
sbb
mov
xor
sbb
shll
push
push
psllq
lea
jge
mov
shl
dec
ret
lds
neg
inc
inc
int3
mov
gs
xchg
ja
out
cli
add
faddl
std
sahf
mov
jnp
test
jae
mov
icebp
repz
stos
popf
pop
cmp
xor
in
cmp
test
lcall
dec
push
xor
or
cmp
scas
or
inc
jmp
push
add
and
test
sbb
jmp
aas
jg
enter
pushf
cmpsl
rcll
dec
xchg
adc
mov
divb
outsl
sub
ss
jmp
cld
lea
jo
cmp
ss
popa
ret
inc
insb
add
pusha
add
add
test
mov
mov
out
sub
mov
fsubr
inc
adcl
inc
or
pop
inc
dec
sahf
sub
jb
xchg
cli
or
lret
dec
xor
push
xchg
loopne
negb
xchg
jae
dec
js
sbb
loop
dec
dec
int3
cmc
stos
and
std
in
ret
push
jnp
inc
dec
in
loop
jp
and
inc
xor
lods
dec
ja
ficomps
mov
test
mov
mov
lock
sub
mov
adc
or
and
and
xor
xchg
push
add
and
push
adc
sub
sub
stos
incl
cmpsl
push
and
fbstp
stc
in
js
dec
in
xor
test
ret
push
inc
sbbb
jmp
push
xchg
cmp
out
xlat
cli
cmp
dec
jg
lods
pusha
mov
ss
xor
push
push
insl
int3
pop
loopne
fwait
mov
and
or
sbb
aas
or
fdivs
xchg
sub
mov
xor
insl
out
xor
mov
fiaddl
inc
cltd
and
daa
xchg
jecxz
in
or
mov
sarb
aad
xchg
inc
movsb
add
xchg
pop
jl
jo
scas
lods
mov
sbb
mov
out
shl
fs
mov
test
rorl
lods
push
jne
sub
call
jno
xor
adcb
push
jp
cmpsl
xchg
sbbl
mov
mov
call
mov
jp
push
in
test
repnz
incb
jae
daa
dec
pop
popa
xor
jbe
hlt
fwait
arpl
xacquire
iret
stos
pop
xor
sub
jae
mov
mov
addr16
stc
adc
inc
hlt
mov
jle
lahf
mov
dec
ret
adc
pushf
imul
sub
add
xor
mov
gs
sbb
ljmp
adc
mov
in
je
stos
pop
fiadds
pop
fldt
push
jne
inc
or
popf
mov
push
mov
imul
clc
pop
push
dec
call
jge
and
les
iret
push
dec
push
test
movl
sbb
pop
fs
cmp
push
dec
inc
sbb
dec
call
sbb
pop
push
adc
jb
sbb
in
jb
jmp
sub
cmpb
cmpsb
xor
clc
mov
out
jb
nop
jno
call
add
jno
loope
xchg
mov
flds
mov
mov
dec
cmp
pop
jnp
je
xor
incb
jno
inc
outsl
dec
mov
sahf
dec
mov
lods
sahf
pop
hlt
and
cli
cmpsb
aas
mov
cmpsl
or
mov
insl
cli
xor
out
scas
shlb
push
fidivs
aad
repz
sub
ficoms
xchg
data16
rcl
lcall
std
scas
or
mov
test
inc
cmpsl
push
xchg
gs
jnp
dec
adc
cld
cmc
rolb
aas
xor
test
push
cmc
in
sti
add
fstl
add
push
fucomip
xchg
imul
mov
push
std
xor
enter
push
add
aas
mov
std
mov
inc
cli
cmp
mov
push
mov
in
jbe
xor
mov
cmpsl
fnstcw
shrb
jg
cmp
and
int
and
xchg
push
pop
jl
rorl
stos
sub
ljmp
fisubs
cmc
lods
mov
inc
les
inc
js
dec
scas
mov
insl
jge
test
pop
test
cmp
clc
add
sub
loope
int
gs
popa
out
fstps
and
ss
inc
xorl
dec
push
in
push
adc
lahf
repz
pop
xchg
mov
bound
outsl
pop
push
out
sub
adc
sbb
mov
jmp
shlb
in
mov
adc
out
cltd
inc
xchg
lret
xchg
mov
scas
adc
cmp
rcrl
loope
jns
lcall
sbb
movsb
pop
jns
fwait
incl
daa
ljmp
adc
push
push
jl
jl
inc
adc
jae
in
push
xor
in
adcb
jbe
out
test
cmp
scas
sbb
fcomp
pop
popa
pop
cld
sbb
lods
and
into
inc
add
pushl
adc
xchg
xlat
jl
faddp
pop
es
jl
cld
out
mov
cmpsb
push
in
mov
mov
outsl
push
incb
add
fs
out
push
cmpsb
xor
mov
lea
aad
in
movsb
ret
orl
sbb
jb
jno
push
jl
lods
ret
mov
mov
push
mov
mov
cmpsl
std
xchg
in
out
push
repnz
out
mov
ljmp
mov
iret
lds
jne
pusha
outsl
pop
lea
dec
int3
xchg
fldcw
imull
or
orl
je
sahf
mov
xchg
es
pop
sbb
jmp
pop
push
inc
test
adc
imul
jle
inc
scas
xchg
lods
push
xchg
call
dec
sub
sahf
xorb
or
divb
push
pop
adc
aad
inc
mov
in
test
sbb
fs
insb
and
adc
cmp
insb
pop
jg
mov
mov
push
pop
leave
pop
ficoml
call
dec
push
pop
stos
dec
and
mov
push
stos
rclb
popa
into
loope
das
dec
das
pop
repnz
dec
and
pop
adc
jnp
jp
lods
daa
xor
outsl
xchg
mov
ss
mov
push
jge
aas
mov
fwait
push
iret
data16
sbb
mov
cmpsb
jp
dec
shll
insb
xor
add
or
or
or
sahf
mov
mov
pop
stos
mov
lods
push
xchg
push
imul
insb
ja
or
int3
mov
dec
mov
inc
pop
fisubrs
ror
ljmp
addr16
cmc
jecxz
rolb
cmp
lods
fisubrl
clc
aad
iretw
enter
cli
int3
out
add
mov
xor
sub
cmpsl
jg
mov
push
jae
clc
outsb
xchg
cmpb
scas
jo
adc
pop
arpl
enter
adc
xchg
pop
in
iret
mov
cmpsl
pop
adc
outsb
fs
dec
jae
push
insl
mov
adc
and
inc
dec
cmp
mov
add
adc
inc
pop
pop
xchg
fisubrs
pop
add
mov
fisubl
mov
and
imul
inc
fiadds
lock
adc
jecxz
mov
add
mov
inc
pop
fnstenv
push
or
lret
jle
shlb
cmp
inc
bound
mov
sbb
scas
ljmp
scas
mov
cld
movsl
mov
movsb
enter
cs
or
adc
dec
cmp
rolb
sub
mov
neg
shrb
mov
xor
adc
dec
pop
outsl
jns
xlat
or
and
and
nop
mov
insl
jns
mov
lods
jmp
test
rclb
mov
aam
bound
jne
dec
mov
xchg
shll
add
push
or
ja
push
aas
ret
push
int
fsubrs
xor
mov
fisubrl
mov
mov
divl
sub
subb
lods
imul
dec
test
lds
xchg
cmpsb
in
imul
movb
ds
inc
lret
or
mov
test
sub
dec
sbb
or
rcl
sbb
call
icebp
xchg
repnz
insl
inc
inc
inc
xchg
aam
fdivrs
jbe
andl
cmp
iret
and
cld
pop
in
fdivrl
insb
imul
adc
push
cmp
arpl
in
mov
cltd
dec
lahf
cmp
imul
adc
or
jo
add
cld
mov
test
in
movsl
test
mov
jne
into
sbb
adcb
or
pop
in
andl
jge
das
dec
jnp
fs
adc
mov
cwtl
iret
cmp
push
pop
or
jns
push
gs
popl
mov
adc
fnstcw
or
cmp
push
pop
push
addr16
add
xor
sub
pop
scas
fistps
jb
sub
xchg
jae
and
pop
sbbl
mov
xor
stos
jp
or
aaa
lcall
and
in
and
sub
fsts
pop
cwtl
cld
and
mov
scas
pop
imul
int
pop
clc
jl
mov
data16
mov
sbb
scas
mov
orb
xor
sbb
in
out
mov
inc
xor
cmp
xor
lods
or
and
cmp
push
xor
lret
mov
sarl
xor
pop
hlt
adc
fs
fdivrl
dec
fisttpl
jl
outsl
jecxz
jg
and
mov
sub
pop
loopne
xor
cmp
jns,pt
xor
sub
cmc
movsl
sar
mov
sbb
nop
rorb
cmp
lcall
fsts
sbbl
sbb
call
loop
push
adc
push
jb
or
ret
jp
mov
inc
in
sub
add
lods
cltd
scas
fldcw
pop
pop
mov
in
sbb
xchg
inc
push
test
sbb
sbb
in
pop
jecxz
sbb
daa
push
lret
lea
jb
cli
imul
ja
xorl
out
pop
rcrl
jb
pushf
hlt
out
fcomip
pop
popa
call
jecxz
pop
inc
mov
fwait
cmp
ljmp
nop
mov
ds
test
pushf
popa
xor
sub
push
cmpsb
out
rol
into
mov
loopne
jno
int3
push
aaa
push
dec
or
xchg
sub
mov
fs
jle
xchg
cmpsl
fldcw
jle
and
and
icebp
ljmp
jp
lcall
jecxz
popa
dec
loope
out
jo
adc
in
js
fdiv
loop
in
dec
repnz
xchg
and
mov
in
sahf
jb
fwait
pop
rcll
lret
fs
out
dec
jmp
xor
mov
mov
fs
mov
stc
out
loope
stos
inc
add
enter
inc
xor
mov
lcall
mulb
cmp
pop
mov
xor
ja
cmp
mov
mov
push
int
je
popf
roll
addr16
mov
data16
arpl
in
daa
aaa
push
es
jg
mov
js
arpl
push
das
mov
add
or
inc
ljmp
inc
arpl
ret
cmp
sub
popa
sbb
leave
or
test
cli
xor
and
push
xor
insb
outsl
mov
movsl
cmp
outsb
cs
pop
mov
mov
and
mov
movsl
cld
ds
sbb
push
xchg
inc
out
es
pop
ret
jns
pop
xchg
dec
mov
inc
inc
mov
push
fs
js
cmp
insb
cmp
inc
das
push
sahf
mov
dec
sbb
and
arpl
adc
setle
les
adc
cmp
pop
inc
sbb
out
adc
push
popf
sub
dec
mov
mov
mov
dec
insb
lods
sbb
xor
inc
push
test
push
mov
enter
jbe
js
pusha
mov
mov
mov
xchg
inc
add
mov
pop
mov
sub
adc
inc
ds
arpl
lea
insb
int
cld
lahf
add
sbb
cmp
mov
xor
push
adc
mov
pop
es
xchg
inc
loope
int3
orb
mov
and
test
mov
mov
push
mov
dec
negb
insl
stc
arpl
andb
cmp
adc
daa
sbb
call
shrb
shll
aaa
cmp
nop
and
cmpsl
ret
jo
pop
test
gs
mov
ret
pop
mov
inc
push
shlb
clc
test
cmp
jno
sbb
or
xchg
xchg
test
popf
jge
mov
push
jae
fcompl
push
out
es
test
ja
ds
jne
gs
xor
insb
jmp
mov
add
jmp
push
sbb
xchg
dec
push
sub
xor
stos
pop
jne
sub
test
sub
popf
enter
loope
cli
ss
push
fstpt
lahf
nop
nop
pop
add
xor
cmp
push
jno
shlb
dec
aad
jg
xor
dec
push
sti
daa
call
movsl
pusha
std
xor
inc
aad
and
add
add
push
roll
test
loop
push
xlat
jg
mov
repnz
mov
mov
mov
adc
fsts
js
dec
loope
loop
es
push
dec
jecxz
push
cmpsb
es
add
jo
mov
pop
sub
ljmp
ds
inc
aad
cmpl
or
cli
movsl
int3
adc
or
jne
fiadds
dec
add
xchg
push
add
movsb
rorb
popa
jecxz
ja
in
push
add
aaa
arpl
add
inc
or
jo
testb
jnp
mov
push
dec
shlb
cs
fists
push
and
mov
pop
inc
dec
inc
pop
ljmp
fs
mov
mov
stos
or
xchg
jg
inc
mov
subl
adc
sti
mov
clc
push
xor
loopne
jp
rdmsr
fildll
inc
out
mov
or
fisubs
out
push
add
and
lret
mov
pusha
pop
pop
push
mov
aaa
push
sub
scas
daa
mov
and
outsb
xor
cltd
stos
std
ficompl
pop
or
iret
mov
or
in
fs
adc
cmp
or
fsubs
push
arpl
cltd
mov
fwait
repz
push
stos
stos
out
gs
mov
and
icebp
rcrb
dec
jae
mov
cwtl
ss
xor
mov
int
jle
rolb
icebp
rcll
mov
lods
aas
icebp
loope
xchg
jae
jno
xor
cmpsb
dec
mov
gs
push
std
and
testl
sbb
jno
rolb
pop
jae
xchg
arpl
adcl
add
mov
scas
fwait
sbb
fldt
jbe
and
dec
out
jl
cld
mov
sbb
int
fcmovb
push
xor
push
and
shll
cmpsb
mov
jecxz
jle
xlat
and
xor
mov
inc
mov
fisubs
xor
shrl
pop
sbb
xchg
add
sbb
mov
jo
and
xchg
mov
cmp
lcall
loopne
xor
clc
ja
in
push
add
xchg
adc
test
xlat
cli
xor
adc
data16
push
insb
fdivrs
push
lret
lock
movsl
test
stc
fists
mov
std
dec
push
mov
mov
les
ret
adc
or
int
pop
loope
jge
cmc
xor
incb
cmp
and
jb
mov
test
pop
sarb
lcall
in
sub
int3
mov
mov
outsl
cmc
sbb
fimuls
out
push
xchg
adc
inc
push
and
lcall
aaa
jnp
jg
push
mov
or
mov
in
push
arpl
mov
jle
jae
in
and
jbe
je
jecxz
mov
cs
enter
in
insb
pop
jmp
pop
jb
lods
add
lods
add
dec
pop
sub
out
jmp
push
jbe
push
lea
test
pop
adc
mov
daa
xchg
mov
test
xorl
inc
or
stc
pop
mov
pop
movsb
mov
or
pusha
mov
xchg
test
and
std
or
pushf
mov
out
add
push
gs
inc
mov
dec
mov
clc
rcrl
dec
inc
or
out
gs
cmp
ljmp
scas
out
dec
call
and
test
inc
add
sti
xchg
jb
mov
pop
fs
mov
and
out
pop
push
sbb
mov
mov
mov
movsb
and
mov
mov
es
mov
and
fs
push
ja
jo
push
dec
push
mov
mov
orb
inc
sbb
xchg
lcall
hlt
mov
pop
mov
mov
sub
push
mov
add
repz
push
dec
fimull
push
decb
bound
push
and
cmp
je
pop
in
insl
lods
mov
pop
sbb
cmp
dec
popa
jg
jecxz
inc
popa
lcall
mov
xor
mov
decl
dec
pop
inc
mov
sub
scas
fstpt
stc
sbb
sbb
fidivrl
xor
pop
push
cmc
mov
jle
sub
out
out
mov
pushf
sub
add
sahf
mov
iret
out
insl
pop
push
mov
cmp
lea
adc
les
mov
add
jmp
push
lret
loopne
jmp
cld
out
mov
mov
jb
sbb
dec
xor
decl
shrb
jmp
adc
inc
dec
leave
xor
lret
cld
xor
pop
andl
fs
into
das
add
sub
popf
es
rcrl
pusha
xor
sub
jne
jo
xchg
cld
dec
pop
xchg
ret
movsl
arpl
ret
pop
sbb
mov
sub
arpl
push
adc
add
add
and
pop
lahf
dec
jb
jne
adc
lahf
inc
rcl
push
rcr
lahf
xor
ret
push
cli
xlat
xchg
shrl
sarb
lret
leave
lret
inc
data16
adc
repz
shrb
mov
pop
dec
mov
jle
jb
mov
negl
aad
outsl
mov
push
xor
mov
lret
lcall
lahf
add
cmpsb
imul
inc
stos
pop
stos
fwait
aam
pop
or
adc
cld
dec
or
pop
or
sub
fcmove
leave
out
cld
xchg
pop
and
or
cmp
test
out
xor
mov
or
lret
fdivl
test
add
cmp
mov
add
xorb
dec
mov
orl
sbb
or
fiadds
out
insl
pushf
imul
mov
lcall
jecxz
hlt
bound
lahf
loope
push
jne
cs
push
scas
and
scas
dec
sbb
outsb
and
mov
sub
ret
adc
cmc
dec
movsl
daa
scas
jmp
add
mov
pop
popa
xchg
scas
xchg
enter
and
and
xlat
ljmp
and
pop
mov
pop
rcrb
test
fwait
add
lret
rcr
pop
test
cmp
and
push
jbe
sar
or
xor
iret
cmp
int3
dec
scas
cs
mov
sti
jl
dec
repnz
pushf
xor
imul
in
inc
ds
adc
push
xchg
cwtl
fwait
adc
outsb
out
repnz
insb
and
jmp
lahf
inc
nop
mov
xchg
push
pmaxub
sahf
lret
cmp
dec
jmp
push
iret
cld
sarb
pop
push
test
mov
dec
test
je
mov
orb
pop
pusha
mov
dec
aad
adc
xlat
jae
sbb
out
cmp
sbb
iret
pop
sub
mov
pop
call
pop
mov
push
movsb
icebp
jnp
pop
mov
int
mov
or
cmpsb
push
jae
xlat
cmp
push
mov
push
push
loope
xor
add
jnp
dec
testl
pop
in
in
or
out
in
cs
pop
add
std
mov
add
nop
pop
adc
fbstp
push
push
imul
xor
out
les
lahf
loopne
push
jecxz
fs
sbb
into
xlat
fisubs
add
pop
mov
ret
out
cmpsb
jmp
lds
hlt
sbb
xor
cld
jb
ret
aas
push
mov
test
popf
rsm
inc
cmpsb
add
imul
sbbb
cmp
dec
mov
cmpsl
lea
ja
fmuls
loopne
and
jl
and
jb
arpl
xor
sbb
and
jbe
filds
shll
mov
cwtl
cltd
dec
aam
movlhps
cmpsl
orb
cmpb
outsb
mov
cld
in
adc
inc
mov
or
roll
jle
lahf
pop
pop
and
jecxz
sub
dec
xchg
inc
xor
push
cmp
sub
jb
out
jg
mov
mov
jo
mov
xchg
es
mov
pop
add
mov
or
inc
shrb
test
adc
dec
inc
shll
pop
mov
jne
mov
xchg
nop
test
sub
dec
out
popf
sbb
pop
push
mov
cltd
jbe
mov
mov
icebp
and
push
cwtl
xchg
pop
xchg
jns
sbb
stc
fstl
idivb
imul
push
push
pop
mov
cmp
and
stc
subb
mov
cmp
mov
mov
jnp
push
ret
xchg
dec
leave
mov
jle
sbb
fs
and
divl
inc
push
clc
mov
scas
and
hlt
xchg
pop
pop
cmp
sbb
ret
stc
and
adc
aam
negl
inc
js
push
push
jle
dec
ret
mov
shll
add
and
add
or
xchg
jecxz
sbb
or
sub
lahf
jge
div
cli
mov
jb
and
sti
lds
lods
cmp
sysenter
imul
test
and
push
mov
add
mov
sbb
aas
mov
inc
or
adc
and
pop
pushf
out
int
xchg
push
xchg
fcmovb
mov
iret
dec
out
jns
push
pushf
out
lahf
roll
jo
test
cmp
into
mov
mov
dec
sti
lret
adc
loopne
mov
js
mov
fnstcw
mov
sti
sbb
mov
aas
arpl
lret
sbb
xchg
mov
cmp
inc
mov
daa
push
pop
or
sbb
xchg
scas
jle
dec
sbb
cld
enter
jp
sub
xchg
pop
mov
notl
and
push
sub
js
cltd
mov
jl
je
pop
jl
out
inc
repz
mov
dec
mov
rorb
mov
stos
daa
int3
ret
jne
rolb
jmp
jp
sbb
cwtl
sub
aaa
push
fwait
mov
add
push
iret
fisubrl
mov
sub
cmp
pushf
sbb
call
shrb
sbb
scas
inc
stc
cmc
ja
push
dec
mov
stos
fcoms
std
fbstp
xor
jecxz
dec
add
sub
leave
movsb
sub
and
repz
cld
xor
and
jl
sbb
jle
mov
mov
loope
xor
test
xor
call
add
rcrb
adc
mov
and
mov
js
push
or
daa
call
fcmovnbe
or
rclb
lahf
adc
push
jg
xlat
sub
divl
shlb
and
arpl
fcoml
imul
cmp
div
shll
bnd
pushf
dec
jl
mov
push
pop
dec
sbb
xchg
mov
mov
mov
rcll
arpl
jp
inc
scas
and
mov
sub
mov
lret
stc
int
dec
inc
push
sbb
xor
mov
cltd
lods
loop
pop
dec
jae
dec
out
push
das
push
shl
orb
mov
addr16
mov
sti
cltd
hlt
leave
push
or
jae
pop
or
pop
popf
mov
inc
scas
cwtl
dec
mov
pop
sbb
xor
mov
add
aam
push
dec
loope
iret
aas
cmc
test
xor
mov
sbb
and
add
pop
xor
and
call
out
addl
jl
popf
or
dec
sbb
cmp
in
fildll
ss
int3
in
aaa
mov
lds
rclb
cmc
xor
out
push
ds
cltd
xchg
orb
jns
movl
insb
fsubrl
adc
repz
mov
fdivp
push
loop
lret
sbb
push
xchg
inc
jg
push
push
mov
push
div
cmc
mov
xchg
mov
push
xchg
int3
adc
loope
adc
adc
inc
xor
jb
and
pop
sub
stc
xchg
leave
mov
sub
and
shlb
add
dec
shrl
mov
lsl
repnz
cmc
into
outsl
mov
inc
adc
add
xchg
mov
mov
jge
fptan
leave
cmp
sbbl
fildl
gs
mov
add
andl
rcrb
popf
incb
jmp
dec
inc
cli
pop
pop
adc
push
dec
adc
mov
cmp
dec
mov
les
inc
out
jge
jle
xchg
cmc
cmc
dec
xchg
das
aaa
sbb
pop
and
cwtl
pop
into
sbb
pop
mov
cmp
sub
cmp
sbb
mov
push
dec
cltd
sbb
lock
jo
cmp
insb
aas
dec
outsb
pop
add
and
sbb
xor
out
mov
mov
mov
je
outsl
dec
sbb
xchg
std
dec
jb
negb
ljmp
test
push
jl
cmp
adc
sbb
jb
push
repz
imul
pop
and
dec
imul
aas
cmp
cwtl
popf
movsl
sar
cld
jp
adc
cwtl
nop
test
stos
jecxz
mov
dec
and
fsts
xlat
loope
inc
xchg
mov
lret
stos
addb
sbb
cli
mov
jge
lahf
dec
push
out
or
pop
inc
outsb
sub
push
cld
sub
test
lcall
aam
stos
shlb
es
lcall
shl
jge
mov
xlat
ret
test
jg
mov
mov
push
xchg
dec
ficompl
fwait
cmp
arpl
lahf
xchg
mov
ficompl
dec
adc
add
arpl
sbb
jne
ljmp
jl
das
mov
scas
cmp
dec
jmp
ds
fnstcw
fxch
adc
lcall
mov
mov
xchg
fs
dec
inc
mov
pop
fistps
mov
jmp
aas
dec
xlat
fsubs
push
mov
mov
in
addr16
and
lret
out
sbb
aad
inc
sbb
iret
adc
xchg
mov
sub
scas
into
mov
cmpsl
repz
into
adc
repz
lds
icebp
clc
push
loope
mov
lods
jb
jmp
outsl
ret
pop
ss
stc
dec
aam
xor
es
mov
inc
pop
inc
xchg
subb
xor
mov
gs
ljmp
enter
insb
loope
xor
das
and
test
xor
outsl
mov
mov
nop
dec
adc
push
xor
imul
push
lods
xchg
movsb
xor
fistl
and
test
test
jp
push
shlb
mov
scas
push
es
xor
mov
pop
lahf
aad
dec
and
jno
gs
in
or
lret
mov
bound
cmpsl
add
or
ljmp
mov
test
aad
push
rorb
pushf
dec
shll
sub
mov
iret
mov
lret
push
xchg
lret
mov
xchg
movsb
inc
adcb
ljmp
xorl
dec
aam
loop
or
aam
mov
push
inc
inc
sbb
or
dec
inc
mov
sahf
or
cmp
sbbb
lods
adc
sub
subb
lea
ret
jecxz
xor
pusha
and
lcall
pushf
lds
pusha
push
std
push
loop
push
xchg
paddsb
mov
pop
loopne
fimull
stc
arpl
inc
divl
cmp
test
pushf
mov
and
dec
push
add
inc
test
mov
bound
rcrl
jl
fisubs
pop
iret
pop
mov
aas
aad
add
lcall
mov
xlat
in
rcl
loopne
rcrb
jmp
sub
ret
add
xchg
jbe
loop
or
inc
lret
adc
addr16
jp
lods
outsb
arpl
mov
or
jnp
cmp
rcll
xorb
enter
cltd
cld
in
xchg
cmovae
lret
mov
popf
int
mov
insb
sahf
stc
lahf
mov
push
sub
cmp
mov
stc
xchg
daa
test
call
imul
xor
or
jecxz
fildl
loop
pop
pop
sub
and
add
mov
pusha
mov
mov
ds
pop
push
mov
jp
stos
ret
icebp
inc
into
xchg
lds
fwait
inc
scas
aam
lods
xlat
rcl
leave
xchg
pop
fcoml
mov
repnz
sub
mov
dec
inc
fstps
cltd
sbb
je
dec
sbb
loop
stc
pmulhuw
xor
mov
xor
mov
sbb
aas
sub
idivb
xchg
popa
mov
sbb
jmp
and
sub
jnp
leave
sub
mov
addr16
imul
sub
fdivl
push
inc
and
xor
adcl
push
sbb
movb
inc
loopne
subb
sbb
rcr
test
insl
repz
scas
mov
xlat
add
fidivs
shr
xor
inc
enter
aam
test
mov
and
adc
cmp
pop
cmp
out
xor
jmp
cmc
popf
mov
mov
ljmp
daa
fistps
sti
jno
cs
dec
ds
call
dec
mov
jp
insl
sbbb
push
xlat
adc
or
jb
dec
ljmp
ljmp
daa
out
inc
pop
xchg
push
lcall
push
cmpsl
lds
test
push
ds
repz
cmp
lcall
popa
test
sub
out
scas
or
dec
push
stos
xchg
inc
movsl
imul
xchg
inc
test
in
and
and
and
push
mov
cmc
std
inc
push
inc
pop
leave
jb
xor
lret
cmpsl
clc
mov
pop
cmpsb
js
das
jg
and
shrl
movsl
inc
mov
or
mov
or
mov
arpl
out
cltd
jg
test
mov
jne
adc
fistl
fstps
pop
pop
incb
daa
ljmp
xlat
ljmp
jno
adc
add
push
cmp
jmp
jne
popf
xchg
nop
icebp
push
and
cmp
test
imul
jae
pop
jg
mulps
fdivrl
lock
xchg
dec
jmp
test
into
mov
cmp
mov
push
adc
mov
sbb
jns
shll
xor
pushf
pop
aad
enter
add
mov
scas
shll
mov
out
sub
cli
pushf
xor
xchg
hlt
sub
inc
insb
dec
push
in
dec
or
inc
mov
mov
mov
shrl
pop
and
xchg
fidivl
mov
push
inc
aad
stos
cmp
jl
add
push
cwtl
out
dec
outsb
pop
inc
daa
jne
mov
daa
jle
adc
dec
pop
push
jmp
out
call
jmp
mov
lock
sbb
insb
push
dec
mov
fisubrs
cmc
xchg
jns
mov
adc
xor
push
pop
and
pushf
pop
sub
mov
stos
pop
jmp
mov
pushf
and
cmpsl
cs
out
mov
pop
cmp
or
cli
stos
mov
repnz
in
adc
cs
dec
pop
and
call
adc
in
test
sub
mov
inc
mov
push
xlat
cmp
and
adc
jp
jecxz
aas
mov
ja
xor
push
xchg
call
int3
std
lods
mov
sbb
sub
xchg
std
xor
pop
jbe
xchg
adc
or
sbb
sub
sub
or
in
mov
popf
sub
leave
imul
add
outsb
jo
fs
push
or
lea
fdivrp
push
jp
cmp
or
inc
outsb
push
push
mov
pop
shr
into
imul
mov
rorl
shlb
lcall
or
insl
repz
outsl
jnp
in
stos
inc
in
push
in
jae
push
dec
cmp
jae
test
sbb
int3
std
cld
sahf
fisttpl
jns
mov
je
dec
shll
xor
sbb
jmp
mov
mov
mov
sti
fstps
icebp
sti
inc
lea
fistps
cmc
sub
adc
mov
cmp
sahf
jbe
or
mov
aaa
add
scas
jno
dec
mov
mov
out
popf
scas
cmp
mov
stc
xor
aad
sub
mov
mov
dec
test
sbb
mov
or
call
and
mov
add
adc
mov
insb
mov
sbb
xchg
adc
cwtl
shrb
adc
mov
pop
xorb
loopne
mov
sti
mov
test
dec
sahf
sub
fwait
les
pushf
jb
cltd
movsb
push
and
inc
lcall
loop
stos
testl
inc
fsts
jb
cmc
lret
dec
jmp
imul
pop
lods
gs
loope
xor
mov
xor
jl
and
jnp
xor
imul
seta
test
dec
push
and
mov
js
insb
std
mov
ljmp
fadds
lea
add
xchg
aas
mov
mov
xchg
loopne
aas
fwait
pop
cmp
cs
scas
mov
jno
mov
dec
cmp
insb
lds
jl
pop
pop
loopne
insb
lret
jns
mov
pop
inc
fstl
add
adc
cld
mov
sub
pop
cmp
jo
shlb
mov
jmp
movsl
sbb
mov
jle
xchg
lret
or
xor
sahf
mov
cmpsb
mov
fildll
lock
scas
mov
or
push
sbb
repz
xor
vsubps
adc
or
xchg
orl
mov
adc
dec
ss
stos
fdivl
cmp
iret
and
sarl
addl
ss
or
lock
mov
push
sahf
mov
sub
add
js
popf
lds
xchg
mov
sub
insl
decb
sub
push
clc
repz
cmp
push
jo
jmp
lcall
mov
sbb
ret
stos
pop
mov
scas
out
sub
add
and
clc
stos
nop
loopne
mov
push
add
sub
sub
xor
subl
sub
jae
ljmp
dec
or
or
jae
and
out
adc
jp
lret
xor
cmp
or
push
and
push
sbb
ficoml
rcl
std
mov
sbb
es
sbb
fs
mov
pop
adc
add
dec
inc
pushf
jp
lea
sbb
popf
das
stos
inc
add
cwtl
push
inc
sub
inc
xor
shlb
addr16
sbb
push
cld
jl
xor
mov
or
cmpsl
cltd
imul
push
cmp
popf
or
cmp
je
inc
aam
inc
dec
xor
and
jecxz
xchg
fildll
aam
cmpb
lods
mov
imul
sub
aam
mov
push
out
jb
pop
push
lcall
imul
sbb
bound
mov
lcall
jo
jecxz
and
or
sbb
push
cmp
rcll
fildl
aas
pusha
in
mov
cmp
scas
imul
add
in
add
les
lret
cs
mov
sub
mov
adc
mov
xchg
scas
es
lea
inc
and
ret
mov
ja
das
lcall
fadds
jmp
mov
cmp
cld
mov
mov
jge
movsb
xchg
bound
comiss
push
pop
sbb
sbb
push
lret
dec
push
mov
pop
xchg
lock
in
or
and
test
mov
outsl
cmp
adc
dec
sub
mov
mov
jecxz
jno
mov
dec
mov
and
cli
pop
ljmp
xchg
push
dec
les
out
rcl
xchg
jmp
enter
add
sahf
repz
sub
jo
and
cwtl
ds
bound
sti
mov
sbb
leave
aad
mov
and
dec
sub
mov
xchg
dec
jns
sbb
xlat
in
and
lds
xor
jmp
jo
cmc
js
pop
pusha
jmp
jb
sub
ret
lret
push
cs
bnd
and
out
inc
add
dec
fdivr
sarl
cwtl
push
mov
fdivr
leave
pop
insb
arpl
in
push
and
mov
xchg
inc
xor
pop
idivb
push
jno
enter
nop
aaa
ljmp
dec
dec
cmp
sub
dec
dec
mov
sub
xchg
imul
xchg
push
les
mov
xor
cld
addr16
lock
adc
push
push
mov
cwtl
mov
xor
dec
inc
aam
mov
jno
and
repz
sbb
imul
fdivl
pop
add
pop
jbe
dec
fstpl
cmp
pop
adc
in
push
xor
mov
mov
ficomps
ret
outsb
xor
xchg
and
out
loop
lock
leave
mov
dec
stc
pop
xor
rolb
sbb
loope
xchg
mov
mov
inc
lods
adc
inc
imul
imul
xchg
movb
jp
shll
insl
out
or
adc
mov
jo
add
fbstp
fldcw
rclb
jbe
xlat
sbb
dec
and
and
pop
fnstenv
adc
das
test
sbb
gs
pop
adc
ficompl
dec
sub
es
leave
imul
sarb
xchg
hlt
fmuls
or
inc
add
adc
add
mov
icebp
jecxz
fs
out
pusha
mov
mov
mov
mov
mov
sub
mov
push
ljmp
and
sub
inc
es
movsb
rcl
sub
adc
jnp
mov
add
inc
jne
mov
cmp
insb
fsin
lea
jae
xchg
adc
cmp
sahf
cwtl
sub
xchg
sbb
negl
ret
and
mov
out
repnz
lahf
sub
lods
pop
mov
adc
adc
test
inc
xor
dec
ror
push
xlat
mov
mov
dec
push
fincstp
mov
testl
jo
push
dec
out
das
mov
mov
mov
mov
js
in
push
push
xor
pop
mov
psubb
faddl
xchg
cli
jge
lret
out
mov
jle
adc
in
mov
aad
mov
scas
jle
dec
pop
mov
test
cmp
cmpsl
cmp
or
push
pop
and
sbb
adcl
and
or
lret
dec
lahf
mov
xchg
inc
int
xchg
inc
nop
cmp
mov
int3
mov
or
lods
mov
add
in
ret
xchg
or
inc
xchg
xchg
sbb
addr16
jl
add
mov
lret
rcrb
cmp
cmp
xchg
ret
sbb
out
mov
xor
adc
lods
mov
cmp
jbe
std
xor
mov
push
jmp
push
icebp
push
xchg
xchg
lahf
outsb
cli
ficoml
sub
pop
dec
and
ss
jo
imul
lret
ror
std
gs
or
jg
loope
in
inc
test
clc
push
push
repz
xor
or
sub
cmp
cld
add
aad
mov
mov
jp
and
cmp
add
inc
mov
lods
mov
adc
stc
scas
xlat
out
xchg
pop
pop
or
out
jle
dec
mov
subb
aad
popf
mov
inc
loopne
dec
movsl
outsl
mov
adc
mov
call
mov
xchg
jmp
jg
lret
hlt
sbb
pop
sub
es
dec
fildl
mov
lds
mov
cmpsl
cld
pop
aam
ficomps
sbb
data16
and
push
orl
inc
or
das
aam
xchg
xlat
sub
test
popa
aam
out
call
cli
push
scas
or
fsubl
call
testl
cwtl
pushf
dec
mov
out
inc
ljmp
fwait
cld
pop
or
inc
xchg
push
dec
xor
or
mov
mov
cmp
xor
cld
pop
sbb
cli
mov
aam
rclb
add
imul
test
or
mov
pop
sub
cld
cmpsb
sahf
cmp
xchg
jbe
adc
int3
fimuls
ljmp
inc
jecxz
cwtl
test
push
insb
sub
xchg
popa
shlb
cmc
add
inc
mov
mov
push
dec
xchg
orb
ja
pop
pop
cmp
or
scas
scas
xor
out
jecxz
lea
mov
mov
loopne
sahf
xor
movsl
cltd
cmpsb
fdivr
or
stc
inc
jl
dec
mov
jg
sbb
mov
mov
push
loop
mov
ret
out
push
pop
pop
mov
stos
ja
rcr
or
aam
xchg
add
xchg
pop
inc
sub
sarl
jmp
jne
mov
lret
adc
mov
mov
aaa
scas
mov
jl
push
or
dec
ret
cmp
inc
mov
popf
movsl
sub
inc
inc
pop
and
nop
inc
pop
in
cmpsl
test
out
cmp
mov
repnz
js
mov
jnp
inc
int
xchg
jmp
loop
mov
xor
fstl
jle
dec
sbbl
inc
add
ja
lods
inc
ss
leave
sahf
and
push
mov
movsl
out
dec
pop
lds
lahf
xor
lds
ficoms
pop
out
add
or
sti
loope
dec
inc
fdivrl
inc
and
pop
loop
movsb
pop
movsl
inc
imul
loopne
push
sub
enter
ficomps
fldenv
sub
or
xor
ds
mov
or
mov
xchg
sarb
int3
cwtl
sbb
add
pop
jle
jo
mov
scas
insb
shr
mov
push
int
and
push
cltd
jbe
pop
imul
adc
cltd
lods
ret
and
adc
cltd
adc
push
aam
jbe
sub
and
push
repz
and
aas
pushw
sub
adc
mov
scas
sbb
xchg
pop
clc
cmpsl
into
cmpsl
fcoms
mov
mov
mov
mov
shll
loop
mov
imul
ss
mov
mov
cmp
pop
fidivl
mov
or
lret
dec
jge
loop
cmp
sbb
imul
test
popa
aad
or
aaa
mov
cltd
sbb
fidivrs
add
sahf
stos
andl
mov
adc
adc
jle
push
xlat
cwtl
pop
jecxz
or
addl
push
push
movsb
sub
clc
push
out
insl
lods
insl
sbb
rcrl
and
fisubrs
movsl
or
aad
std
lods
xor
xor
inc
les
mov
pop
ja
jae
sbb
jnp
ja
fiaddl
dec
iret
out
jne
cmpsl
int3
mulb
out
outsl
sti
outsb
divb
cmpb
outsl
addr16
or
mov
jns
lock
iret
adc
inc
inc
sbb
rcl
clc
pop
sahf
clc
add
iret
out
mov
xor
push
popf
jp
mov
fs
dec
mov
sar
and
test
shrl
sarl
shrb
mov
iret
pop
hlt
pop
xchg
jno
or
fildll
mov
xor
into
cmp
lret
ljmp
pop
sub
xchg
inc
clc
pop
in
sub
shl
push
mov
mov
test
cmp
movsl
push
fdivrl
fdivr
shll
mov
cmpl
push
sub
cs
xchg
cmp
sub
in
es
inc
cmc
add
ret
adc
repz
lret
cli
pusha
or
sbb
push
sub
push
mov
lods
adc
and
std
adc
xchg
cmp
jb
xchg
popf
out
incb
pop
sub
pop
insb
div
loopne
lahf
push
icebp
pop
lods
sbb
dec
lods
rcrb
andb
fsubrs
xchg
push
mul
outsl
js
test
mov
orl
adc
mov
les
in
or
lret
outsl
dec
stos
mov
adc
adc
loope
das
in
inc
dec
jb
mov
out
jge
cmpsb
sahf
pop
aaa
jo
outsb
xlat
or
xchg
mov
xchg
clc
sti
dec
ja
loopne
sub
fnstsw
lods
xchg
cmp
testl
dec
iret
fildll
mov
stc
insl
scas
in
mov
and
mov
fimuls
clc
mov
push
inc
cltd
int3
adc
sbb
mov
or
stos
inc
data16
jl
mov
scas
xchg
test
or
sub
sbb
int
test
mov
arpl
orb
inc
sbb
pop
inc
dec
sbb
ret
mov
mov
andl
das
or
gs
pop
mov
popf
push
out
mov
fwait
push
hlt
sti
adc
bound
stos
xor
adc
imul
cmpsl
das
mov
dec
pop
lea
push
inc
les
nop
or
and
xchg
xor
ljmp
cmp
adc
mov
adc
mov
pushf
sbb
mov
cld
xlat
lods
jne
or
jnp
in
and
mov
xchg
popf
data16
inc
adc
shrl
push
adc
loope
xchg
cmp
mov
mov
or
xchg
aad
and
jbe
push
xlat
cltd
mov
mov
orb
xor
outsb
dec
inc
in
sbb
sub
cltd
xor
test
mov
sub
aam
stc
test
add
int3
movsl
and
movsl
xor
cmp
out
adc
xchg
sahf
sbb
sahf
call
movb
int3
and
sbb
outsb
dec
lcall
jne
cltd
pop
clc
mov
cmp
add
inc
add
xor
ret
and
out
cmpsb
iret
pop
popf
arpl
push
adc
pop
or
inc
cmpsb
dec
in
cld
adc
adc
test
fwait
cld
inc
shl
push
std
insl
insb
and
and
push
mov
dec
adc
adc
xor
sbb
cmpsl
xor
dec
ret
fneni(8087
bound
inc
fsts
lods
in
jle
nop
pop
push
roll
fs
and
xchg
xchg
fsubrs
push
aad
fsubs
or
pop
mov
ja
in
gs
or
sbb
mov
cmp
dec
mov
push
icebp
mov
cmp
shrb
xor
nop
loop
inc
add
pop
mov
test
mov
faddl
gs
lock
adc
jae
divb
pop
or
push
popa
stos
aaa
jne
mov
jg
test
mov
in
xchg
or
andl
out
insb
dec
aam
imul
xchg
mov
in
into
ret
loop
cmp
stos
mov
pop
das
cmpsb
mov
add
adc
movsb
push
int3
xor
insl
imul
std
xor
jae
cmp
mov
or
mov
sbb
push
nop
es
out
loop
mov
lahf
daa
xor
jp
test
mov
gs
cmp
xchg
movsl
lret
jne
pop
xchg
mov
andl
sbbb
das
std
fisttps
sbb
jmp
sti
pop
scas
xchg
in
push
pusha
cmp
dec
jp
js
cld
test
mov
push
mov
fistl
aad
aam
pop
arpl
lea
lcall
xchg
stos
mov
dec
or
push
lcall
jmp
pushf
mov
das
jbe
sub
outsb
les
imul
popf
outsb
stos
lcall
pop
repz
mov
xadd
xchg
scas
aaa
sahf
sub
orl
arpl
sbb
jmp
je
cmpsb
int
repz
enter
push
test
sub
or
jbe
dec
sbb
pop
xor
mov
arpl
adc
push
adc
mov
je
inc
scas
jnp
frstor
inc
pop
mov
adcb
pop
push
clc
in
pop
inc
mov
push
sub
call
lahf
out
xor
and
lret
jmp
in
sbb
pop
mov
cmp
sbbb
ret
sahf
adc
add
sbb
sub
test
cli
add
icebp
les
sub
jmp
add
cmpsl
ror
outsl
test
and
loopne
or
in
das
jg
jg
or
cmp
adc
add
jno
fisubrs
test
clc
in
dec
adc
pop
mulb
xor
out
dec
aas
and
call
idiv
mov
and
jb
adc
inc
mov
into
and
jno
pop
repnz
push
xchg
out
mov
movsb
test
or
add
xor
add
enter
insl
cmc
pop
enter
jb
mov
mov
movsl
or
pop
and
loopne
jmp
push
sbb
ret
or
add
and
lahf
and
xchg
adc
or
repnz
sub
subl
xlat
cmp
inc
outsb
addr16
movsl
add
xchg
xchg
test
pop
imul
outsl
pusha
dec
or
test
jle
add
dec
pop
daa
lret
jbe
push
inc
adc
fimull
mov
cmp
pushf
sbb
shll
push
mov
repnz
and
outsb
imul
inc
or
ja
bound
mov
icebp
mov
or
adc
dec
daa
jg
and
mov
xchg
push
jg
rorb
fisubs
mov
call
sbb
xchg
in
inc
fcoml
xchg
nop
jbe
dec
mov
lcall
and
pop
pusha
mov
xchg
fisubs
sbb
or
jae
ljmp
out
add
xchg
daa
jg
pushf
jae
mov
jp
add
flds
and
jp
lcall
arpl
into
jno
add
imul
push
fmull
sahf
ljmp
add
loope
fwait
jl
scas
dec
adc
jmp
into
loop
and
cmp
jmp
push
mov
cld
rorb
sub
push
test
testl
dec
or
mov
and
xlat
div
cltd
cltd
ljmp
jge
dec
dec
jae
pop
sbb
mov
or
xor
jnp
xor
inc
test
call
mov
insb
lea
ds
sub
inc
inc
mov
cld
push
std
mov
loop
xchg
inc
jo
xor
sub
aad
push
xchg
xchg
pop
and
inc
lock
xchg
push
std
push
lahf
cmpsb
xor
leave
int
dec
popf
and
enter
pop
cmp
scas
test
mov
aas
inc
xchg
cmpsb
pushf
dec
je
and
movsb
test
std
mov
int
inc
sbb
add
xor
mov
pop
daa
sbb
lret
sub
dec
inc
pop
adc
push
int3
push
loop
cmpsl
pop
push
inc
imul
divl
cltd
nop
pop
lods
and
int
cs
mov
adc
leave
sti
popf
adc
fldt
push
fisubrs
jp
lea
dec
rcr
fsubrs
rcll
pop
icebp
xor
dec
call
mov
jecxz
cmp
jb
hlt
cmpsb
jl
insl
jns
sbb
int3
gs
movsl
push
jl
jle
inc
mov
push
addr16
fdivr
les
xchg
stos
in
adc
lret
add
jmp
xor
ds
mov
outsb
push
or
jge
jge
cmp
in
aas
inc
push
xchg
push
lahf
dec
fdivrp
inc
jns
jb
sahf
or
add
mov
aam
aas
xor
xor
je
sub
mov
add
xor
or
xor
stc
inc
mov
jle
into
mov
sahf
lds
cmp
cmp
addr16
mov
int3
jns
incb
push
popf
outsl
in
dec
push
mov
in
or
dec
in
jp
adc
stos
dec
and
test
pop
stos
ljmp
mov
jle
xchg
fldt
push
xchg
xchg
inc
jae
or
clc
scas
dec
mov
pushf
js
repz
dec
dec
inc
mov
jbe
push
shrl
lock
clc
loop
or
dec
outsl
jae
sti
fildll
lahf
pop
leave
xchg
pop
lea
data16
lcall
fdivr
std
imul
or
fisubl
outsl
jp
leave
sub
and
fwait
cmpb
mov
lret
sti
mov
cmp
insb
mov
cld
lcall
adc
fsub
or
xor
stc
sub
jne
add
sub
push
pop
xchg
ljmp
push
cmp
stos
fsubp
xchg
stos
and
out
cltd
js
sbb
fwait
punpcklbw
jp
aaa
jecxz
cs
xchg
fsubrs
fwait
jo
outsb
std
cmp
aam
jne
dec
gs
pop
add
and
adc
sub
xor
