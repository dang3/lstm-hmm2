push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
xor
mov
movl
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
mov
xor
add
incl
mov
push
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmp
je
mov
jmp
push
call
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
cmp
je
push
call
mov
push
push
call
mov
call
add
cmp
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
push
call
pop
ret
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmp
jb
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
push
lea
push
push
call
lea
push
push
call
add
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
or
lods
dec
xchg
das
sub
adc
leave
jno
sbb
adc
dec
adc
and
and
jno
test
in
fisubs
mov
ret
sub
inc
aad
mov
jle
dec
jns
xor
test
mov
jg
dec
enter
xchg
ss
leave
in
mov
and
adc
test
dec
sub
push
dec
fnstsw
add
inc
lea
sbb
fisubs
repnz
push
cmc
xor
xlat
inc
add
mov
pop
jo
cltd
sbb
push
push
adc
in
in
add
dec
mov
stos
lahf
loope
add
dec
aad
pmaxub
sub
dec
repnz
lock
jle
cmpsb
xchg
push
dec
and
mov
test
pop
inc
mov
lds
outsb
int
orb
hlt
or
rclb
or
stos
sub
add
mov
stos
dec
xor
xor
push
add
stos
pusha
addr16
outsl
repnz
cmp
mov
dec
mov
xor
adc
mov
pop
fwait
xlat
scas
sbb
xchg
xchg
and
add
dec
mov
push
faddl
scas
stos
inc
mov
sbb
aam
xchg
faddl
popf
out
pop
lea
arpl
xchg
sub
pop
add
and
sti
sub
jne
es
lock
mov
adc
outsl
jle
cwtl
add
jmp
lods
sub
jge
xchg
xor
adc
out
pop
xorl
jp
stos
sub
add
mov
clc
xor
ret
mov
shlb
mov
loope
add
sbb
lret
lods
lods
pop
sub
sub
fadd
sahf
mov
je
sub
js
fucom
cmp
repz
jo
sub
test
imul
stos
inc
jmp
mov
sahf
push
cwtl
popf
out
repz
jmp
xor
push
inc
sahf
dec
jg
outsl
outsl
jne
mov
fadd
inc
cmpsb
nop
xchg
mov
fcompl
pop
aam
push
ds
std
outsb
andb
jnp
scas
mov
mov
insl
xchg
fildl
scas
in
loope
push
out
bound
dec
sbb
cli
sti
sbb
add
loopne
push
outsb
pop
mov
bound
in
xor
fcoms
loope
pop
in
das
jb
imul
mov
gs
xor
in
jne
mov
ret
sbb
dec
arpl
xchg
jns
scas
in
loope
dec
pop
lock
push
cmp
insb
das
and
mov
push
push
arpl
into
push
jecxz
fistl
adc
ds
xor
jne
mov
dec
mov
daa
sub
jl
jge
data16
gs
dec
orl
aad
popl
push
pcmpgtw
rcrl
or
add
add
sahf
and
cs
mov
xchg
sub
mov
nop
xchg
testl
jnp
inc
out
mov
jb
inc
daa
sub
xor
pop
ss
nop
jo
inc
cli
pop
mov
ret
pop
inc
mov
add
insl
aam
ds
pop
lahf
sti
cmp
loope
mov
mov
add
out
lret
in
jo
dec
dec
xchg
push
ret
and
add
pop
adc
lahf
push
mov
fdivrp
dec
inc
add
add
add
jmp
jl
push
push
stos
sbb
daa
out
xchg
dec
mov
adc
into
mov
mov
fiaddl
loop
pop
xor
xchg
pop
mov
cld
out
adc
enter
int
loop
aas
out
call
dec
movl
pop
enter
cmpsl
xchg
mov
test
mov
movsb
sub
jge
clc
gs
pusha
in
mov
inc
into
pop
pop
out
dec
roll
jecxz
mov
dec
and
fistpl
cmp
add
cmp
xchg
jp
xchg
fnsave
mov
testl
enter
xchg
inc
dec
std
dec
dec
loopne
leave
ja
sarl
jnp
mov
mov
sbb
mov
sub
add
inc
out
sub
push
out
fs
lods
clc
push
je
cmp
xchg
dec
scas
add
test
das
cmpb
pop
dec
mov
mov
cs
pop
lret
xchg
or
rcll
shr
outsl
add
ja
imul
sub
jns
xchg
push
mov
test
push
bound
or
push
ljmp
add
add
adc
or
shll
rcrl
je
jl
in
jne
sub
les
mov
adc
xchg
jnp
ljmp
imul
cmp
inc
mov
out
lea
aas
mov
pop
test
cld
cli
push
addr16
sub
into
jnp
in
cmp
clc
sbb
rorb
pushf
or
std
les
or
pop
push
push
mov
push
xor
cmp
push
cwtl
sbb
pop
dec
ja
pop
and
mov
cmpsb
sbb
xchg
sbb
aad
pop
icebp
fsubs
or
and
add
mov
lcall
mov
and
inc
enter
cli
sbb
xchg
cmp
test
xchg
mov
push
loope
shlb
pop
mov
inc
idivl
push
xor
addb
sub
add
mov
fnstsw
fwait
pop
lret
push
inc
or
xchg
pop
ss
xor
cld
jmp
and
imul
icebp
mov
inc
test
cmpsb
adc
jnp
or
daa
movsb
mov
adcl
dec
push
jne
ljmp
shrb
push
xorl
xchg
cmp
push
test
add
add
mov
sub
int3
loop
xchg
or
xchg
mov
sub
icebp
icebp
jns
push
ret
sub
out
not
nop
jno
pushf
xchg
leave
stos
cmc
mov
and
pushf
jne
and
subl
in
cmpsb
adc
mov
cmpl
out
mov
rclb
sbb
nop
rcll
pop
adc
jg
pop
add
push
jo
or
jl
cs
pop
pop
int3
sarb
jg
pop
lret
cmp
les
cli
outsl
xchg
fldenv
add
jge
xor
cmovno
adc
jg
nop
jp
sub
jp
fdivl
mov
and
fmull
outsl
cmp
arpl
fstl
fimull
push
jg
xchg
pusha
push
cmc
cmp
insb
mov
dec
js
rcrb
or
loopne
xlat
fisubrl
inc
ret
sub
jo
sbb
pop
out
fistl
jecxz
adc
iret
mov
incl
add
mov
xor
mov
adc
cmp
adc
push
jo
les
nop
ficoml
cli
jg
call
clc
cld
lahf
cmp
stc
xchg
imul
movsb
jo
loop
lahf
mov
shlb
mov
test
int3
ret
test
jmp
mov
mov
das
andl
xchg
jecxz
mov
cmp
pop
popl
in
and
xor
insl
dec
sub
stos
test
les
jmp
add
pushf
mov
cmp
mov
das
imul
sbb
push
xchg
call
jb
arpl
arpl
fwait
shl
jmp
mov
lds
dec
ja
dec
pop
xchg
sub
and
out
pop
rolb
inc
outsb
sbb
or
jns
fnsave
data16
iret
xor
lea
xorl
cmp
and
in
dec
nop
xchg
push
jg
adc
mulb
mov
xor
into
sbb
mull
mov
push
popf
cltd
std
pushf
push
inc
in
jmp
mov
pushf
insl
push
fiaddl
mov
mov
imul
cmp
fldl
sub
enter
jecxz
pop
dec
les
sub
test
xlat
mov
and
inc
sub
sti
cs
lds
lods
sahf
lods
add
into
dec
loope
mov
xor
push
fndisi(8087
cmpsb
cmp
jae
cmp
mov
sbb
add
fwait
cwtl
and
out
mov
popf
insb
jne
xor
mov
pushf
jbe
mov
mov
xchg
xchg
pop
pushf
xchg
das
leave
ljmp
adc
clc
lds
cmp
add
add
insl
push
in
and
sahf
sbb
mov
iret
cmp
cmp
fwait
ret
sbb
mov
aaa
leave
push
mov
ficompl
jl
call
sub
xchg
push
ret
jno
pop
add
dec
iret
fdivs
pop
cmpsb
inc
lods
fcomps
loop
push
xchg
icebp
cmpsb
cmc
xor
int
add
js
sbb
push
adc
pop
dec
inc
scas
sbb
inc
sub
inc
out
hlt
in
in
in
aas
ds
jle
dec
das
mov
push
dec
loope
je
outsl
jmp
outsb
sbb
mov
dec
call
add
add
mov
push
movsl
mov
add
cmp
mov
or
lods
mov
out
fists
cwtl
jno
scas
cmp
mov
add
ret
in
inc
in
cmp
pop
enter
and
mov
cmp
stc
test
xchg
pop
flds
push
mov
out
loope
int
mov
adc
pop
icebp
insl
je
mov
icebp
add
lret
dec
jns
fildl
loop
insl
push
mov
sub
shlb
jb
adc
aaa
das
mov
cmpsb
lock
add
nop
push
sar
xor
adc
mov
mov
inc
nop
mov
push
repz
mov
dec
adcl
and
mov
mov
dec
adc
mov
push
jecxz
push
push
mov
inc
sub
adc
fidivrs
adc
inc
xor
in
push
xor
adc
lcall
jmp
loopne
fs
lahf
dec
movsl
rcl
movsl
fs
add
test
dec
pop
mov
inc
sub
sub
mov
pushf
shrb
movsb
leave
mov
dec
adc
dec
mov
push
cmp
repnz
fdiv
movsb
divb
push
stos
shll
add
out
mov
and
inc
and
pop
jl
add
dec
outsb
push
push
jns
push
movsl
inc
hlt
jp
xchg
pop
xor
jnp
sti
shr
inc
cmp
push
jne
and
mov
mov
rcrb
push
loop,pt
adc
push
mov
js
shrl
mov
dec
and
hlt
pop
adc
cmpsl
add
push
and
xor
add
add
add
mov
int3
movsl
aad
fwait
and
cs
pop
inc
add
jp
push
pop
imul
cld
push
dec
mov
jo
cmp
jg
loop
ret
popf
add
xchg
xor
sbb
or
add
or
in
add
push
or
fsubrl
aaa
pop
test
mov
xchg
fnstsw
test
fiaddl
aam
lret
movsl
mov
ret
hlt
push
addr16
xor
sub
rcll
sahf
les
add
sar
outsl
fwait
push
xlat
movb
dec
jp
fadds
cmp
out
cli
xchg
lcall
mov
xchg
fucomip
in
mov
aaa
push
dec
cmp
out
cmpsb
fsubrl
cmc
sub
cmp
jno
negb
dec
stc
xor
dec
imul
xchg
icebp
out
pop
jp
sub
mov
movsb
sub
lret
pop
gs
popa
je
inc
push
mov
decb
fbld
pushl
pop
pop
jg
sbb
fwait
aad
sub
sbb
adc
dec
lods
push
mov
cmpl
cwtl
jge
jne
jecxz
sbb
xor
push
and
imul
sahf
and
jp
push
xchg
mov
cmc
dec
vpsllw
push
push
mov
sbb
data16
or
mov
or
xchg
mov
and
movsl
or
es
insb
loopnew
cs
movsl
push
lods
sahf
int3
jb
popf
push
sbb
or
mov
les
in
inc
clc
ljmp
stos
cmpsl
inc
test
aad
xchg
out
ret
inc
mov
dec
mov
mov
xchg
add
mov
shlb
jnp
mov
mov
ja
dec
xchg
cld
pop
add
pop
aaa
pop
insb
mov
fistpl
fisubrs
call
mov
pop
out
into
jge
jge
and
lds
aaa
inc
mov
enter
rcl
sub
and
loope
push
cmp
mov
shrl
pushf
fwait
jg
cmpsl
pop
xlat
loop
popa
shll
in
pop
popfw
xchg
adc
mov
cmpsl
cmp
ret
jnp
es
inc
pop
fstl
and
das
or
mov
xor
and
aad
xor
push
jge
push
loope
jae
in
dec
push
into
pop
pusha
lds
js
mov
std
mov
jecxz
les
jns
in
ficompl
add
rorb
aaa
icebp
mov
pop
mov
fmuls
outsb
gs
push
pop
push
adc
xchg
jb
sub
in
xchg
les
rorl
pop
pushf
xor
into
adc
inc
pusha
adc
inc
scas
mov
jo
addl
or
or
cmpsb
lds
jno
cld
and
adc
sbb
stos
pop
mov
push
xor
xor
pop
xlat
inc
jg
movsl
push
mov
inc
jge
faddl
push
add
jge
jnp
in
add
adc
insb
adc
rorb
aaa
mov
and
pusha
push
in
into
xchg
shll
pop
dec
cwtl
outsl
in
clc
out
sbb
push
pop
lahf
pop
test
test
nop
xchg
xor
in
push
push
or
jp
fs
add
loopne
in
mov
aad
dec
test
icebp
ljmp
sub
cmc
mov
sbb
shll
ret
cvtpi2ps
mov
mov
sub
lcall
andb
inc
inc
add
xchg
mov
inc
xchg
ret
imul
add
add
icebp
addr16
lret
inc
sahf
pop
dec
push
or
lock
das
movsb
in
fidivl
cltd
sbb
sbb
inc
mov
leave
and
jle
fcomps
aaa
pop
sbb
fcoml
jle
js
dec
fsubrl
cmp
js
mov
subb
mov
adc
ret
incl
mov
and
adc
push
push
rclb
int3
shll
add
mov
or
cmp
pop
xchg
loop
add
cmc
test
push
mov
pop
push
push
inc
mov
and
movsb
out
test
push
ljmp
sub
movsb
hlt
sub
xchg
dec
fucom
loope
dec
pop
lret
lret
insb
or
aas
shlb
pop
inc
xchg
xor
hlt
int3
mov
jp
add
fs
inc
je
inc
inc
cmp
shlb
fisttpll
aas
pusha
mov
jb
adc
ss
out
stc
xor
lret
aad
test
push
mov
mov
in
cmp
loop
pop
mov
xor
in
ljmp
iret
xor
xchg
arpl
shrb
lret
jnp
cmc
cld
shr
out
push
stc
ss
add
add
jbe
fwait
movsl
xor
lcall
dec
inc
mov
jg
hlt
adc
mov
pop
xchg
inc
sbb
into
adc
nop
mov
shl
jl
in
pop
xor
mov
pop
loope
add
fwait
cli
inc
subl
and
iret
test
outsl
in
addr16
aad
mov
and
inc
jbe
pop
out
sub
dec
pop
xchg
mov
lret
test
das
mov
movsl
sbb
data16
jecxz
xor
xor
bound
add
mov
lds
adc
dec
divl
hlt
jno
xor
outsb
jae
and
movsb
jge
popf
mov
xor
dec
lds
jns
mov
ljmp
rclb
xor
fisubrs
aas
rcrb
push
jg
pop
shr
leave
xor
lahf
dec
mov
pop
xor
add
cmc
sub
cld
dec
push
leave
fnstenv
mov
rcrl
mov
into
cwtl
or
pop
ror
pop
adc
jge
add
add
loope
test
ret
cs
xor
loopne
and
mov
scas
inc
dec
xor
inc
and
adc
sahf
xchg
adcl
cmc
arpl
dec
dec
sahf
aam
loop
sub
fs
xchg
xchg
subl
dec
sbb
pop
and
dec
fcomps
call
xor
dec
xor
xchg
mov
mov
ret
xchg
rolb
xchg
fdivrl
inc
rorb
and
jmp
push
dec
xchg
dec
xor
fcomp
sbbl
or
mov
add
push
push
push
mov
pop
lret
pop
fdivl
in
sub
sbbb
sub
mov
sti
ret
dec
cmp
mov
sub
in
pushf
xor
mov
insl
subl
jmp
mov
inc
insb
fidivrl
xor
loop
dec
push
sub
lahf
scas
ja
xor
ss
jae
and
ss
cmp
js
mov
cmc
ja
dec
xchg
pop
mov
mov
js
insb
inc
or
into
outsl
stos
lahf
cmp
dec
in
sub
test
add
pop
sbb
test
mov
mov
jecxz
or
bswap
dec
dec
sub
loopne
dec
int
dec
push
test
inc
jno
xchg
out
jle
cmpsb
fildll
jbe
xchg
cmp
xor
sbb
add
test
xchg
push
mov
pusha
sbb
add
repnz
out
leave
aam
cltd
out
outsb
out
sub
ja
pop
jnp
outsl
das
sub
ljmp
enter
testb
sub
xchg
mov
aaa
mov
jmp
sub
add
fs
cwtl
call
or
push
and
or
inc
push
inc
leave
sbb
adc
lcall
bound
mov
and
dec
mov
pusha
add
insl
xor
out
jns,pt
mov
dec
jne
test
inc
dec
jecxz,pt
stos
arpl
test
xor
pop
dec
push
adc
sbb
outsl
jecxz
mov
stc
pop
and
and
clc
in
ja
lods
lcall
cmpsb
xor
std
dec
push
ja
push
lcall
sub
in
mov
cmp
aas
insl
std
movsb
repnz
jb
xchg
jl
jno
jnp
cmp
mov
std
loope
or
rcrb
push
lcall
jo
xor
pop
ds
les
imul
jle
stc
stc
add
pop
int
cmp
add
fisttpll
push
cmpsl
adc
inc
shlb
ficompl
mov
xchg
push
movsl
mov
sbb
inc
icebp
cmc
mov
clc
pop
enter
fimuls
movsb
xchg
or
ret
loop
adc
test
lea
add
jp
ss
lock
jno
rcrb
repnz
push
cli
or
testb
mov
int
and
push
stc
repnz
into
and
cmp
shlb
push
xor
scas
and
leave
adc
cltd
mov
iret
repz
push
dec
cltd
cld
out
xor
jmp
iret
inc
fcoms
aaa
dec
xorl
mov
movsb
pop
and
outsb
inc
adc
out
scas
inc
popf
int3
leave
push
ss
imul
or
das
xchg
decb
add
push
push
add
push
cli
cmovns
ss
loopne
rcrb
jmp
push
xchg
dec
daa
outsl
mov
and
dec
cmp
dec
jg
add
popa
jns
xchg
push
sub
mov
push
mov
test
ss
push
mov
xor
pop
sbb
ljmp
call
cs
sbbb
mov
pop
int3
inc
movsl
pop
loope
mov
cmc
repnz
nop
push
and
push
in
pusha
push
inc
pusha
xor
mov
mov
mov
and
mov
and
inc
repnz
xor
out
rolb
add
add
push
add
sbbb
pop
jae
stos
mov
insl
ljmp
outsl
dec
pop
popa
outsl
daa
js
adc
or
cmp
push
fs
lods
pushf
push
jl
fcmovbe
adc
xchg
adc
mov
sbb
ret
adc
in
xchg
not
loope
push
jo
in
jl
push
xlat
push
roll
scas
push
add
and
out
mov
adcb
les
pusha
sub
notl
pop
jp
iret
push
outsb
push
pop
add
aas
lock
push
gs
sub
shrl
movsb
xor
jg
add
add
sub
jo
adc
enter
jnp
xor
mov
pop
adc
loopne
sbb
fiadds
out
loope
sbb
repnz
pop
push
push
or
mov
and
aaa
adc
inc
and
aas
loope
push
loopne
stos
mov
test
js
cwtl
mov
or
xchg
push
mov
jg
sub
jmp
cwtl
aad
mov
jae
xor
mov
sub
loope
cld
test
js
fdivrs
jle
xchg
fs
in
cs
test
hlt
push
mov
shll
pop
jb
pushl
lret
int
out
adc
xchg
mov
into
mov
rcrb
imul
das
xor
pop
xor
stos
lcall
dec
push
fcoms
jno
cmp
jns
push
scas
test
ljmp
je
lds
idivl
sbb
fsubrl
xlat
push
repz
int3
lock
pop
or
xchg
into
xchg
lea
inc
fs
mov
mov
xchg
sub
pushf
mov
mov
sahf
mov
icebp
dec
cmp
xor
dec
jbe
pop
in
scas
adc
dec
push
lcall
test
xchg
jnp
mov
inc
mov
cwtl
cmp
mov
lcall
cmp
add
shll
mov
hlt
jmp
pop
cld
push
xor
mov
loop
add
out
xchg
cmp
fistpl
mov
cmp
cmp
stos
outsb
add
outsb
mov
lret
ret
inc
mov
cs
add
add
jmp
scas
stos
negl
sbb
repz
mov
stos
cltd
in
and
imul
xchg
outsb
push
jge
imul
je
adc
cmp
xchg
lret
pop
jnp
gs
repnz
inc
or
pop
cmp
scas
dec
loope
lret
rorb
cmp
test
xor
ljmp
mov
loope
loop
mov
jbe
enter
fcomp
cmc
inc
or
lret
pop
push
lahf
sub
push
xor
push
jno
out
into
sti
xor
push
pop
xchg
pop
mov
movsl
inc
bound
and
nop
xor
xor
inc
lods
or
dec
adcl
dec
pushf
sub
call
pop
or
xchg
testb
call
fwait
xor
mov
into
and
jp
jno
cmp
ds
rorl
pop
mov
add
xor
out
imul
loop
fldt
mov
lcall
aas
divl
and
mov
pop
ja
add
stos
sbb
mov
lcall
or
icebp
push
sbb
jnp
xor
incl
out
push
sbb
pusha
filds
add
hlt
inc
insl
jne
arpl
sbb
mov
pusha
adc
fucom
data16
je
ljmp
jb
jl
bound
mov
scas
jle
pop
jne
xor
inc
sti
lahf
popf
pushf
push
fs
rorl
inc
push
mov
aas
sbb
ss
sub
jle
dec
inc
mov
jbe
in
loopne
jb
movsl
int
sub
pop
hlt
cs
push
enter
cltd
inc
sbb
add
mov
dec
pusha
add
lea
xor
unpckhps
addr16
inc
pushf
cmp
enter
xchg
dec
fldt
fidivrs
mov
jno
shll
pushf
inc
jnp
scas
push
jbe
dec
xor
icebp
and
es
mov
pushf
sbb
fdivl
nop
in
add
jl
cmpsb
dec
xor
lea
xchg
mov
pusha
xor
jnp
or
lea
jle
push
dec
sbb
mov
sub
inc
sbb
mov
aad
cltd
sar
push
cli
daa
cmp
stos
add
pushl
lds
pop
ja
xchg
dec
mov
jl
mov
notl
loop
gs
xlat
mov
imul
pushf
into
pop
mov
push
pop
adc
fdivr
popf
sub
add
sbb
xchg
std
lods
fistpl
daa
adc
and
add
lods
mov
testb
enter
inc
cli
ret
xchg
int
out
test
push
inc
lcall
inc
inc
nop
pop
cmp
sub
nop
mov
out
fcmovb
les
int
addr16
loop
movsl
lcall
mov
inc
dec
sti
scas
stos
popf
xchg
je,pt
outsb
lds
scas
pushf
test
out
data16
nop
pop
aad
fisubrl
testb
test
call
fcoml
dec
dec
xchg
jo
push
scas
and
dec
stos
add
pushf
lret
iret
lret
fmull
rep
test
in
imul
mov
call
pop
popa
repz
add
mov
pop
xchg
and
dec
push
verr
insl
mov
mov
scas
and
xchg
rcrl
dec
je
js
fsts
add
inc
xor
gs
loop
mov
jmp
jns
ret
lods
std
les
pop
loopne
bnd
xchg
pop
cmp
pop
or
insb
dec
sbb
adc
enter
shr
ret
loop
lods
lahf
cmp
rol
ja
das
pop
adc
pop
test
imul
cmp
sub
pop
insb
mov
inc
iret
arpl
test
jge
lahf
adc
cld
mov
sub
pop
shll
faddl
fdivrs
stos
xchg
out
add
add
ret
jbe
jnp
mov
cli
enter
cmp
and
mov
sub
sbb
sbb
lods
movsb
sub
push
cmpsl
xor
cwtl
mov
ret
test
ret
sti
lcall
fstl
xor
pop
push
add
sti
push
mov
dec
movsb
std
les
push
mov
lods
jecxz
dec
add
loopne
xchg
loope
xchg
mov
or
decl
fnstsw
enter
inc
mov
xor
xor
push
pop
rclb
ud1
out
mov
test
int3
lods
mov
jnp
mov
gs
jo
jle
out
dec
mov
mov
pop
test
add
push
xor
ret
sbb
imul
stc
push
repz
fldl
xchg
dec
dec
sbb
sbb
cmp
mov
es
outsb
or
daa
mov
or
in
sub
in
test
mov
adc
out
jae
add
pop
mov
addr16
pop
xchg
dec
add
test
dec
cmp
and
and
imul
int3
sbb
insb
xor
mov
adc
add
mov
jge
stc
test
daa
or
enter
repz
cmpsb
mov
test
cltd
fnstsw
pop
and
fnstcw
jns
and
push
pop
pop
icebp
push
mov
adcl
rcl
cwtl
pop
ljmp
aam
push
jbe
cmp
mov
aad
mov
pop
sub
jmp
mov
dec
into
mov
shl
adc
test
addr16
inc
fwait
roll
imull
gs
mov
xchg
sarb
test
push
ss
js
add
outsl
stc
add
lods
or
add
add
mov
imul
sbb
mov
xor
xchg
jne
lret
xchg
push
lods
xor
mov
les
mov
adc
ja
adc
ljmp
lahf
outsb
xchg
scas
sub
or
and
popa
inc
lcall
jne
repz
and
lods
cmp
jnp
or
das
or
fisubrl
push
jecxz,pn
cmp
daa
mov
mov
and
lock
or
icebp
lret
jnp
sub
dec
into
ret
cmp
stos
ffree
popa
mov
add
clc
arpl
imulb
adc
push
or
mov
jo
std
xchg
nop
in
adc
ljmp
xchg
ret
pop
push
cmp
cmpb
mov
dec
mov
js
mov
push
in
push
xchg
lock
dec
jl
xchg
xchg
mov
inc
sbb
cltd
sti
lea
rclb
movsb
outsb
dec
and
gs
outsb
pop
in
cmpsb
jnp
jo
lret
out
push
les
inc
inc
cmpsl
jmp
adc
jle
je
push
rclb
mov
loope
dec
sub
insl
xacquire
dec
mov
xchg
aas
mov
mov
sarb
inc
repz
aad
lea
sbb
pop
loopne
jno
pop
sbb
mov
daa
pop
jne
jbe
and
inc
xchg
pop
adc
