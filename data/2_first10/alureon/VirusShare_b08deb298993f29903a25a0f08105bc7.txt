push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
mov
imul
sub
push
mov
mov
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
mov
mov
ror
xor
imul
add
mov
divl
mov
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
je
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
mov
push
push
call
pop
pop
test
je
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
push
mov
lea
sub
nop
lea
mov
push
mov
inc
pop
cmp
jb
pushl
lea
push
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
mov
push
call
pushl
mov
push
call
lea
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
cmpl
jne
xor
jmp
push
pushl
call
pop
lea
push
push
call
mov
test
je
pushl
push
call
mov
pop
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
sub
push
push
push
mov
call
lea
push
push
movb
call
mov
push
push
push
call
add
push
call
test
jne
mov
mov
lea
push
push
push
push
push
call
test
jne
lea
push
push
lea
push
push
push
pushl
movl
movl
call
test
jne
push
push
push
call
add
mov
call
pushl
call
jmp
mov
call
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
movl
test
je
mov
mov
jmp
push
call
mov
mov
mov
push
push
push
push
xor
push
inc
push
call
mov
mov
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
lea
push
push
pushl
call
mov
imul
add
imul
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pushl
push
call
mov
push
push
push
push
call
mov
add
lea
add
mov
pushl
lea
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
jmp
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
push
mov
mov
mov
mov
sub
test
jne
inc
jmp
andl
push
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
push
lea
push
push
add
call
mov
add
test
je
mov
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
test
jne
mov
and
push
call
test
pop
je
mov
ret
push
push
call
pop
test
pop
lea
jne
lea
ret
mov
push
mov
mov
push
mov
andl
mov
call
mov
mov
pop
pop
ret
push
mov
push
cmp
jb
push
lea
xor
movl
test
je
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
imul
xor
mov
mov
sub
mov
mov
inc
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
push
mov
pushl
pushl
push
pushl
call
pop
ret
push
mov
push
push
push
movl
mov
mov
lea
push
call
dec
jne
testl
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
push
add
mov
int3
and
dec
cmc
repnz
dec
cli
pmaddwd
insb
mov
cmpsb
lahf
fwait
jecxz
in
mov
cmpsl
nop
push
jp
push
mov
push
xchg
xchg
scas
nop
fucomip
cmp
mov
aad
push
add
mov
int3
and
dec
cmc
repnz
dec
cli
pmaddwd
insb
mov
jno
cmp
push
lds
mov
test
push
imul
sub
rorb
iret
addb
imul
pop
dec
into
add
sub
mov
in
inc
addb
push
cwtl
mov
out
sub
out
int
push
test
fnsave
inc
inc
inc
pop
nop
movsb
jno
mov
sub
mov
ret
fsub
sbb
scas
in
jg
cmp
dec
mov
and
cwtl
leave
push
repnz
adc
add
pusha
xchg
out
sub
xchg
or
sub
mov
sub
cltd
rorl
mov
pop
sbb
jl
xchg
hlt
test
insl
xor
jo
cmp
repz
std
decb
cmpsl
inc
adc
cmp
push
leavew
lahf
cmc
testb
jo
xor
stos
rcrl
in
fwait
push
ret
add
fcompl
xor
sbb
sbb
iret
movsl
fcompl
fdivr
jns
movsl
insl
roll
xor
fildl
add
add
sub
gs
adc
scas
cmp
pushf
leave
es
stos
push
cwtl
add
jl
mov
pop
in
fdivl
repz
aas
insb
jne
mov
stos
xor
xchg
cmp
pushf
into
xchg
xor
and
cmpsb
mov
aam
jnp
push
mov
add
pop
cmp
inc
mov
and
pop
jg
shlb
test
mov
scas
mov
ret
insb
fsubrs
adc
insb
into
add
pop
add
mov
adc
xchg
push
mov
sahf
jecxz
nop
mov
icebp
cld
outsb
mov
ljmp
jnp
ret
xchg
mov
dec
jbe
or
and
imul
call
dec
xor
inc
mov
lret
push
mov
jo
pop
push
or
dec
jmp
jbe
pop
shlb
rorb
xchg
movsb
inc
jmp
pop
cmp
xchg
outsl
test
scas
add
add
out
popa
fwait
cs
aam
dec
xchg
lahf
dec
xchg
sbb
lret
add
cmp
jp
js
test
push
jns
mov
jp
out
mov
movsl
jbe
jnp
sub
mov
subl
jp
loope
lahf
mov
pop
les
xchg
jnp
cmp
add
lret
and
ljmp
pop
jle
xor
lahf
mov
cmp
xor
sbb
xor
cmp
xchg
or
mov
lahf
dec
outsb
pop
por
scas
out
pushf
mov
sub
xorl
pop
int3
gs
stos
add
addl
popf
pop
movsl
cmp
jg
jnp
jnp
adc
xorl
out
mov
mov
pop
rclb
add
cld
mov
mov
add
or
mov
add
cmp
inc
rorb
cmp
lea
pop
popa
push
pop
xchg
sarb
push
movsb
scas
inc
inc
xchg
rolb
stos
std
ja
inc
shlb
js
and
add
insl
ljmp
sub
mov
xchg
cmp
and
add
xor
jb
lcall
sbb
addr16
adc
add
cltd
rcrb
xchg
aad
leave
mov
lcall
cmc
mov
into
arpl
fisttps
cmc
xor
repnz
push
addr16
es
clc
inc
jge
add
adc
lds
lahf
dec
imul
dec
int
xorb
in
cmp
sub
xchg
sub
fucomi
xchg
into
bound
hlt
xor
add
js
rclb
sub
ljmp
adc
inc
adc
or
lock
testb
in
sti
xchg
jge,pn
imul
imul
call
inc
mull
call
pop
and
dec
fwait
sbb
outsb
jge
ljmp
lcall
add
jmp
dec
cld
in
or
push
aaa
or
cmovne
mov
lea
xor
jecxz
stos
repnz
divb
jg
sti
imul
mov
pop
aas
js
int
push
or
popf
mov
add
mov
leave
aaa
xor
call
push
adc
and
les
fildll
outsb
stc
dec
hlt
xchg
adcb
inc
cmp
push
and
je
sub
adc
movsb
out
in
jge
iret
add
jnp
pop
inc
sbb
sub
les
es
jecxz
jp
adc
iret
mov
inc
pop
sbb
fisttpl
cwtl
fildl
push
adc
lahf
ja
into
mov
fimull
cs
inc
insl
mov
mov
aas
mov
mov
sti
imul
sub
xchg
mov
sbb
add
je
imul
in
sbb
and
lds
sub
jle
xchg
mov
jge
push
icebp
xlat
jge
mov
mov
scas
adc
lock
add
sbb
mov
sbb
push
xchg
lods
cmp
pop
xor
test
mull
scas
das
sub
dec
stos
lods
mov
push
out
inc
mov
push
mov
je
loop
mov
sbb
test
xor
jl
mov
imul
sahf
sbb
sahf
ljmp
mov
out
or
xor
jge,pn
int3
es
add
in
xor
movsl
xor
sub
add
jne
cltd
push
lea
ja
xor
mov
test
xchg
sbb
dec
clc
mov
fstl
pushf
lret
mov
fisubrs
orl
sbb
pop
imul
adc
popf
add
push
fsubrl
mov
out
or
mov
in
xchg
scas
cmp
and
mov
arpl
enter
mov
ljmp
in
or
xchg
dec
or
cmp
clc
mov
fs
cld
jl
fdivr
pop
cmpsb
xchg
lret
aad
mov
pop
mov
mov
and
adc
outsb
mov
mov
mov
cmpsb
pop
not
int3
lea
jle
add
and
push
xlat
dec
xchg
fstpl
sbb
fstp
pop
inc
push
rol
mov
push
aaa
es
mov
jge
push
cmp
add
cmp
cld
jb
cmc
lea
hlt
enter
xor
sbb
push
push
hlt
out
fdiv
mov
adc
pop
mov
lods
and
mov
stc
push
xor
pop
mov
aas
cmc
pop
addb
add
idivb
ret
sub
add
lds
and
scas
mov
hlt
push
shll
cmp
or
push
jo
js
repz
fistpll
dec
popf
imul
xchg
loopne
aam
mov
cmp
in
or
js
lds
ret
or
pop
outsl
dec
test
stc
xor
lock
rorb
cmp
or
addr16
xor
fucomi
and
xchg
icebp
cmpxchg
jg
jmp
xchg
outsl
mov
cmc
out
xchg
out
add
adc
repz
cmp
or
push
dec
pop
cmpsl
lock
pop
dec
pop
push
subb
xchg
inc
ret
pop
arpl
inc
and
add
loop
stc
int3
dec
pushf
sub
adc
mov
inc
jbe
jl
pushf
mov
jg
add
push
fs
icebp
mov
je
mov
xchg
jo
std
ficomps
cmpsl
mov
jge
lods
fcmovb
mov
sub
lds
loope
adc
iret
cmp
jb
dec
dec
add
ret
sbb
pop
aad
cmp
add
mov
pushf
inc
adc
inc
sub
xchg
je
bound
enter
inc
push
xchg
inc
dec
lret
std
push
mov
out
std
xchg
gs
sub
xchg
pop
push
decl
pop
popa
push
xlat
add
hlt
dec
xor
in
pop
inc
imul
in
sbb
movsl
jae
out
rorb
jp
xor
push
push
insb
sub
xchg
mov
rcrl
dec
mov
outsb
sbb
pushf
mov
aam
or
push
imul
jns
test
xchg
cmp
mov
jne
mov
sub
movsl
loopne
or
cmpsl
int
add
add
outsl
outsb
or
int
dec
cmp
js
rcll
push
pop
sbb
or
sbb
inc
mov
and
lock
lods
cli
notb
jo
mov
xchg
or
popa
pop
mov
dec
push
xchg
mov
iret
push
add
and
faddl
add
jp
divps
push
aad
push
mov
sahf
clc
divb
in
in
cmp
sbb
clc
xor
lcall
sbb
adc
inc
pusha
sbb
call
push
or
scas
pop
leave
pop
out
xchg
ret
ffree
popf
dec
int
sbb
dec
pop
out
mov
add
jns
js
pop
pusha
jecxz
aas
push
add
enter
push
sbb
adc
cmp
add
lret
aad
lahf
and
push
jbe
lcall
mov
jge
fsubrl
push
insb
add
pop
cmpsl
sub
outsb
pop
mov
aas
loope
push
dec
pop
repz
add
add
or
push
int3
mov
xchg
jne
fldt
push
cld
lods
insl
xor
push
in
shr
add
adc
add
add
adc
fadds
add
xor
adc
pop
mov
ds
add
cmpsb
rcrl
repz
inc
xchg
std
sub
das
jmp
subb
int
pushf
imul
cmp
mov
jnp
in
aaa
in
test
pop
jmp
sti
in
int3
test
xchg
scas
push
dec
mov
push
sbb
mov
mov
xchg
test
push
push
jnp
xor
movsl
push
cmpsl
cmpsb
hlt
and
xchg
xchg
mov
rclb
in
xchg
imulb
mov
sbb
adc
scas
pop
movsl
fcompl
cmp
xor
aam
mov
int
adc
adc
das
jb
and
pop
sti
jbe
add
add
popa
inc
sbb
pop
adc
or
xchg
fs
nop
cmpsl
sbb
pop
jge
scas
sahf
sbb
pop
outsb
fwait
repnz
mov
add
mov
sbb
ja
xlat
adc
cmp
push
iret
mov
push
jb
arpl
adc
into
aas
xchg
jbe
mov
dec
test
sub
fyl2x
mov
call
adc
push
mov
xor
and
mov
adc
add
mov
push
and
aas
pop
add
add
pcmpgtw
sbb
insb
xor
lret
outsb
imul
in
push
dec
seto
and
pop
sbb
jecxz
int3
adc
xchg
jmp
icebp
jne
jmp
pop
cmp
je
fistpll
cmp
hlt
outsl
pop
fbld
mov
add
les
push
rcrl
cmpb
add
add
and
fldt
adc
out
add
pop
mov
loopne
nop
aas
xlat
add
aam
loope
dec
lahf
fidivrl
mov
pop
in
pop
mov
fadds
mov
cwtl
aas
jbe
pop
inc
push
sbb
jg,pn
mov
insb
inc
inc
ljmp
push
sar
mov
mov
test
ss
popf
jnp
and
adc
lahf
mov
xor
xor
and
int
xchg
fistps
test
rcr
and
shll
add
pop
mov
push
daa
cmc
push
cld
popf
cld
std
jae
dec
shrl
aaa
pop
mov
lock
mov
std
xor
sbb
push
cmp
sbb
push
pop
popf
xchg
jno
in
xchg
sbb
sbb
ja
subl
xchg
insb
test
cmp
sarb
adc
pop
mov
add
lcall
lds
jo
adc
test
data16
jo
addl
mov
add
in
jb
mov
stos
dec
xchg
loop
in
mov
xor
scas
jl
pop
mov
pop
arpl
adc
out
in
jl
aam
mov
lds
mov
lret
add
xchg
xor
fildll
shll
loopne
add
test
scas
and
int3
pop
orb
push
outsb
cmp
jb
arpl
fcoms
mov
xor
nop
mov
rorb
sbb
repnz
rcrb
cmp
inc
lahf
push
popa
ds
jg
sub
mov
mov
jp
mov
aaa
out
pop
fstpl
cmp
add
add
jl
xor
cmp
test
fs
lcall
fcomps
stos
int
lods
cltd
scas
cmp
ficoms
out
jmp
lods
adc
or
mov
das
lods
sbb
cmp
dec
ret
pop
cmp
mov
pop
cmp
sub
in
mov
dec
pop
les
adc
push
cmp
mov
push
cmpsl
inc
dec
faddl
add
add
mov
insl
aaa
inc
xchg
or
stos
push
inc
inc
jl
inc
mov
das
std
test
inc
and
clc
scas
mov
stos
std
shrl
dec
inc
std
gs
je
das
addr16
daa
sbb
or
xchg
and
nop
xor
push
cmp
clc
xor
xor
jae
pop
jg
add
add
jbe
gs
ficompl
popf
sub
cmpsl
aad
mov
pushf
adc
lods
movsl
dec
in
enter
add
add
and
cmc
dec
das
adc
mov
pop
addr16
xchg
sahf
or
out
loope
mull
lea
and
repnz
jge
or
fiadds
xchg
pop
jae
stos
dec
scas
add
fdivl
mov
pop
fistpll
ljmp
add
roll
stc
sahf
cltd
shr
pop
movsb
mov
inc
fsub
arpl
in
lret
lret
or
fcomps
sub
aam
add
stos
sbbl
in
mov
arpl
xchg
cmp
mov
stc
jmp
dec
or
mov
mov
mov
clc
dec
leave
xor
push
cmc
mov
mov
and
fdivs
push
pop
fcomp
pop
call
fwait
add
add
dec
pop
pop
dec
out
xor
pxor
or
lea
testb
popf
and
fbstp
mov
in
icebp
inc
jae
and
xlat
xchg
mov
inc
loopne
js
mov
addl
cwtl
mov
cmc
icebp
incb
push
add
enter
out
mov
fildl
int3
and
sub
out
push
movl
push
jge
dec
iret
mov
mov
cli
jns
and
enter
mov
dec
jmp
nop
rcr
mov
adc
sahf
call
icebp
add
sbb
stc
push
insb
test
lods
movsl
inc
pop
xchg
mov
insl
pop
xor
int3
mov
mov
stos
mov
add
add
mov
jecxz
adc
pop
aaa
outsl
cmp
dec
pop
push
sbb
push
mov
das
aam
mov
xchg
out
add
lcall
shll
rorl
scas
fldcw
cmp
pop
cmc
insb
jae
push
sti
stos
sti
pop
jge
jmp
lret
add
scas
loop
sub
leave
test
push
cmpsb
pop
adc
and
ds
popf
add
add
mov
ficoms
loop
push
jp
fs
stos
inc
jl
push
and
pop
dec
sahf
adc
push
ret
inc
lds
clc
pushf
repnz
cmc
mov
mov
cli
sub
adc
pop
std
xchg
iretw
pushl
mov
loop
pop
or
insl
mov
xchg
jge
add
repnz
mov
sbb
test
dec
imulb
lods
sbb
jae
stos
lods
adc
incb
sub
dec
cmp
test
push
les
xchg
ficomps
cmp
insb
pop
jp
add
jp
ret
mov
fstp
sahf
adc
mov
shrb
andl
adc
imul
add
adc
or
rcl
mov
jmp
sub
cmp
les
cmp
jns
push
mov
scas
xchg
outsb
gs
mov
mov
jns
popa
dec
push
jle
fidivrs
dec
leave
pop
xchg
xor
cmpsb
enter
mov
jnp
fs
push
or
hlt
je
movb
add
fwait
lret
sti
or
aas
and
mov
sub
and
iret
and
movsl
iret
sahf
ficompl
xor
les
mov
push
and
add
lds
and
and
std
lahf
jge
loopne
mov
mov
mov
jle
mull
pop
ficomps
in
stos
mov
mov
ljmp
leave
and
sbb
add
add
add
adc
cld
or
cmp
cmp
in
movsb
pop
stos
xorl
lret
mov
sub
sbb
repnz
or
loop
imul
in
xlat
and
and
dec
nop
jne
jl
ja
ljmp
lods
fimull
movsl
xor
bound
dec
enter
inc
cwtl
hlt
cmpsb
xor
xchg
clc
push
orl
adc
mov
jp
cmp
add
mov
pop
xchg
cltd
add
xchg
mull
data16
xor
and
inc
mov
adc
scas
or
shlb
cmpsb
adc
aad
lods
jmp
dec
xchg
mov
cmc
pop
mov
and
push
ds
in
scas
jle
sbbl
stc
xlat
inc
pop
xor
insb
imul
and
scas
and
sub
mov
aad
ret
aam
into
enter
add
rcrb
adc
xor
dec
in
iret
pop
inc
sub
in
push
lcall
imul
jge
mov
ret
adc
push
stos
pop
not
pop
into
xchg
push
jbe
jno
xchg
test
lret
jne
outsl
in
push
pop
in
adc
lret
fs
loope
or
cmp
in
jmp
push
pop
mov
mov
insb
inc
popa
iret
hlt
jmp
push
jge
adc
std
adc
mov
mov
mov
out
xor
lods
int3
lret
xchg
ret
mov
push
jmp
rcr
inc
ds
insb
scas
aas
stos
cmpb
cmpl
call
sbb
mov
pop
xor
js
clc
out
sub
mul
andb
adc
das
cmpsb
push
mov
lahf
mov
add
adc
xchg
adc
xchg
pusha
jmp
stos
pusha
adc
lock
in
lods
mov
mov
std
imul
stos
out
icebp
pop
lods
ss
mov
inc
adc
inc
and
cld
loopne
jmp
stc
aad
add
out
mov
shrl
push
std
cmpsb
xor
clc
out
gs
and
repnz
sub
cmp
jg
jle
lods
jnp
pop
cmp
nop
sbb
pop
push
ret
dec
lea
mov
add
movsw
mov
or
mov
mov
push
mov
loopne
daa
cli
insb
inc
and
mov
stos
dec
mov
jbe
pop
pop
shlb
cs
lret
push
sti
sbb
shrl
and
or
loope
cmp
int3
fildll
mov
or
arpl
mov
add
mov
jne
movsl
mov
and
cli
mov
sbb
mov
push
popf
push
aaa
mov
cli
and
inc
out
pop
loope
movsl
es
lods
test
xchg
push
mov
dec
push
jae
or
sub
mov
jno
shll
jno
jmp
mov
mov
movsb
or
cs
loop
call
mov
mov
stos
xchg
pop
in
sub
mov
adc
pop
add
or
add
or
sub
push
mov
add
or
aas
cmp
hlt
mov
shll
adc
popa
xchg
in
jmp
push
lret
icebp
mov
cmp
adcl
inc
movsl
inc
enter
aas
pop
jp
hlt
mov
adc
pop
xor
mov
pop
iret
pusha
push
movsl
mov
nop
mov
dec
movsb
mov
repnz
aaa
sqrtps
out
inc
in
addr16
add
pop
lret
lods
push
aas
xor
sbb
adc
repz
bound
and
inc
shlb
out
inc
push
sbb
adc
movsl
in
xchg
jne
les
jp
or
mov
js
shll
cltd
inc
or
cmpsl
fbstp
and
dec
cmp
add
and
or
dec
shrb
jnp
movsl
ljmp
jg
add
add
clc
cmp
and
xchg
icebp
dec
lods
dec
lcall
jmp
add
stc
loop
xor
fstl
push
decl
pop
sahf
xchg
add
add
in
inc
addr16
insb
lret
pusha
add
cld
dec
adc
xor
rep
adc
pop
lret
testl
push
xor
rol
sbb
add
add
add
push
cmp
int3
jecxz
jl
mov
fldenv
pusha
mov
fstps
mov
out
outsb
jnp
data16
or
cmpb
daa
clc
repnz
pop
xchg
cmp
in
mov
pop
sbb
into
cld
fidivl
ja
push
ret
sub
jae
jnp
dec
aad
jle
adc
cmp
pop
mov
sub
sbb
adc
pop
bnd
leave
test
add
mov
push
xchg
not
out
flds
lods
mov
iret
daa
xchg
test
pop
pop
mov
cmc
and
lcall
scas
jns
jns
adc
add
in
loop
jne
insl
in
or
das
xlat
das
shll
xchg
sub
les
leave
cmp
pop
inc
mov
push
mov
xchg
nop
lods
or
push
out
jae
fwait
dec
add
cmp
shll
xchg
test
repnz
idivb
test
push
jl
push
icebp
stos
add
fcomi
mov
xchg
incb
sub
xor
sub
in
jo
test
call
cmpsl
fiadds
aam
or
add
xchg
cs
cli
add
add
jns
in
mov
mov
lahf
ljmp
jle
inc
in
scas
push
aam
ja
popa
mov
stos
dec
inc
test
mov
imul
dec
cmpsb
arpl
cmp
mov
mov
in
pop
push
scas
fwait
xchg
xchg
arpl
mov
call
dec
das
inc
or
divb
jecxz
jb
insb
jp
outsb
jge
lock
xor
inc
gs
fld
xchg
pop
mov
xor
ja
dec
std
gs
or
add
add
mov
cmpsl
lock
pop
or
subb
scas
xor
push
movsb
test
les
fs
sbb
mov
jb
pop
sbb
das
jg
imul
mov
mov
incb
aad
outsb
setne
pushf
jno
stos
mov
das
pop
xchg
dec
rcrl
xor
and
mov
ss
sahf
mov
test
add
cmp
outsl
dec
mov
xor
ljmp
loope
push
icebp
mov
mov
in
out
inc
sub
out
jg
pop
adc
insl
xor
imull
xor
or
cmpsb
mov
push
xor
push
cld
xor
dec
dec
in
cltd
out
dec
lds
stos
dec
cmp
addl
add
add
sbb
cmp
mov
loop
xchg
mov
jp
xor
out
push
into
adcb
movsl
shrb
add
in
cltd
insb
ret
push
push
into
jo
jl
pop
outsb
adc
sub
iret
das
repz
inc
mov
scas
or
sbb
sub
or
in
inc
fcoml
cmp
add
add
popf
cwtl
push
push
aas
xlat
jge
dec
pop
js
push
sbb
jbe
sbb
jmp
ljmp
repz
add
jecxz
lea
jno
add
lea
adc
pop
push
shr
lds
pop
cmp
inc
clc
xchg
cltd
ja
movl
ficompl
cmp
test
push
cmp
jl
xchg
dec
jle
add
add
in
outsb
sbb
and
cld
stos
mov
mov
xchg
push
inc
mov
imul
scas
stos
js
cmpl
les
lods
addr16
sub
cmpsl
lret
pop
popf
add
imul
dec
add
cmp
sub
js
sbb
and
gs
xchg
xor
es
jmp
popf
mov
aad
mov
stc
push
push
negb
add
add
cmp
repz
stos
lods
sub
add
iret
dec
in
nop
lret
xor
cmp
je
aas
stos
scas
cmp
jge
adc
js
arpl
mov
add
pop
xor
cld
cmp
leave
pushw
dec
pop
rol
clc
push
jmp
pop
movsb
icebp
imulb
flds
mov
in
jecxz
pop
jle
adc
push
adc
fistpll
mov
push
bound
hlt
es
pop
lods
mov
dec
test
add
jmp
add
daa
nop
jge
hlt
idiv
loope
xchg
fwait
push
aas
stos
push
xlat
out
popa
aad
repnz
popf
fidivs
icebp
push
and
lods
xchg
dec
dec
out
dec
ja
or
and
cld
ds
lock
cwtl
test
push
cwtl
leave
fildll
popa
mov
jo
xor
jmp
std
pop
dec
push
testb
or
or
or
int3
pop
es
call
cmpsl
sti
cld
dec
insb
push
fisubrl
lcall
add
add
fdivs
xchg
stos
mov
fisubrs
test
adc
repnz
popf
push
iret
sub
aam
sub
sub
dec
xor
imul
mov
dec
gs
jns
mov
call
jno
dec
cmc
add
sub
popa
mov
loopne
adc
cmc
push
and
mov
add
push
sub
sub
scas
stos
push
jae
cmp
outsl
xor
xchg
mov
mov
sub
stos
dec
cli
test
mov
mov
ljmp
jge
ss
addr16
mov
lahf
sub
rclb
xchg
shl
or
xorl
mov
inc
insl
mov
fdivl
pop
pop
dec
mov
push
test
add
mov
push
add
das
enter
push
pop
rcll
dec
sbb
pop
pop
pop
jne
iret
jle
xchg
lods
mov
shll
push
movsb
icebp
xchg
sub
test
jns
add
sub
daa
add
xor
stc
jmp
mov
movl
shr
aas
mov
xor
jno
mov
sub
lods
add
inc
dec
mov
mov
xorl
push
out
cs
dec
inc
arpl
adc
loopne
mov
or
inc
mov
add
lds
ja
sbb
aas
leave
pop
mov
dec
insl
or
mov
or
out
jne
testb
xchg
dec
mov
fisubs
or
add
mov
or
daa
and
adc
mov
pop
jg
jp
icebp
xor
xchg
mov
and
movsb
mov
mov
stos
inc
jbe
lcall
add
icebp
int3
ss
data16
repnz
gs
pop
ljmp
sub
cwtl
jb
xor
adc
insb
daa
adc
dec
push
pop
inc
std
daa
pop
or
mov
cmp
gs
mov
iret
mov
pop
or
scas
stos
add
dec
mov
pop
addr16
roll
cmp
sbb
ret
mov
insb
ljmp
fcmovnbe
mov
cs
popa
mov
mov
dec
push
ja,pn
inc
push
jl
mov
shrb
add
add
dec
frstor
jns
cltd
mov
pop
lds
adc
cmp
xchg
fmulp
mov
add
andl
in
movsb
cmp
inc
out
scas
push
inc
adc
cwtl
dec
aas
jbe
add
pop
push
js
test
xchg
stos
cmp
arpl
fsts
xchg
sbbl
loope
xor
in
shlb
rcr
scas
mov
jbe
out
dec
lret
mov
xor
push
icebp
sub
sbb
push
dec
adc
data16
out
lret
fwait
inc
inc
loopne
xchg
mov
pop
jp
mov
pushl
inc
cli
mov
add
pop
jnp
cs
dec
icebp
sarb
dec
cmp
add
repnz
insl
int3
lret
xchg
cmp
sbb
mov
inc
push
mov
jb
mov
or
inc
stos
pop
insl
and
mov
imul
mov
push
inc
xorl
adc
mov
sub
lret
lret
loope
imul
inc
and
inc
cwtl
adc
adc
outsl
loopne
jle
xor
mov
add
mov
and
dec
mov
adc
jne
mov
jb
mov
fistpll
imul
movsb
lahf
shl
je
push
push
sbb
mov
daa
jae
dec
inc
sbb
xchg
cmp
fnstcw
movsb
out
or
inc
push
and
pop
add
add
addr16
cld
icebp
sbb
jns
into
adc
scas
scas
loopne
xchg
sub
fldl
or
mov
push
jmp
jl
adc
mov
mov
dec
scas
or
lds
nop
imul
mov
ret
cmp
mov
pop
roll
add
addb
lea
into
sbb
fnsave
leave
repnz
test
mov
out
div
frstor
mov
mov
or
mov
pop
fimuls
sub
cmpsl
adc
xchg
sbb
or
je
in
pop
in
sahf
or
ficomps
lds
add
cmp
xchg
hlt
hlt
in
adc
xchg
rep
jne
popf
cmp
add
cmpb
sbb
mov
aad
in
jl
xchg
jae
mov
je
dec
cmp
es
jbe
aaa
jb
fldcw
sbb
xchg
cmp
ja
ljmp
in
adc
adc
push
clc
cmp
mov
mov
pop
lahf
pop
cmp
loopne
lcall
mov
scas
shl
arpl
push
adc
cmp
add
jg
movsl
inc
inc
nop
outsb
pop
jae
add
std
clc
cld
movsb
cwtl
in
inc
cmc
or
inc
pop
out
imul
pusha
xor
sub
outsl
pop
aaa
xchg
jg
subb
add
cmp
cmp
add
cmpsl
jg
sub
sahf
popf
mov
sti
mov
mov
loop
popa
add
cmpsb
popf
clc
mov
add
aas
movsb
sbb
je
push
sbb
call
sbb
test
dec
sahf
jg
das
negb
mov
lea
ss
pop
mov
stc
je
xor
cli
cli
pop
pop
gs
insb
insb
and
and
lock
movsl
and
push
in
repnz
xorl
daa
adcl
int3
xchg
push
fcomi
les
pushf
sub
imul
repnz
int3
pop
pop
inc
mov
loopne
add
je
out
ljmp
jbe
xor
repz
pop
movsl
sub
pop
int
cli
ljmp
pop
lods
xchg
aas
pop
mov
out
loope
jae
ja
lock
jo
mov
idivl
int
push
mov
cmp
xchg
pop
jns
xor
lods
and
addr16
add
out
mov
pop
mov
pop
sbb
repz
pushw
outsl
push
jge
jecxz
and
add
add
or
push
sti
test
xor
andb
imul
dec
scas
inc
cmp
insb
cmp
jae
xor
enter
mov
scas
or
push
jnp
jae
into
add
aad
popf
pop
jp
ljmp
xor
cli
add
stc
aam
sub
xchg
outsl
stos
jno
jbe
jp
inc
lcall
mov
insb
repnz
cmp
rclb
fisubl
pusha
es
xchg
cwtl
mov
inc
mov
sub
push
ret
push
adc
sbb
arpl
jne
mov
jnp
xor
movsl
and
call
inc
push
xchg
cmp
mov
mov
lcall
ljmp
fsubl
lods
aaa
or
flds
leave
pop
xchg
mov
sub
dec
mov
ljmp
mov
add
popa
mov
loopne
pop
xor
outsb
stos
mov
push
dec
mov
pop
sti
ror
sub
pushf
push
cwtl
adcl
cmc
aam
