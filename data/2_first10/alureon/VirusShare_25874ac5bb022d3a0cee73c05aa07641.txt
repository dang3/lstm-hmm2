mov
mov
and
mov
std
sbbb
into
dec
and
sbb
jae
popa
sbb
jmp
mov
lea
nop
aad
add
mov
out
pop
xor
adcb
jp
ficoml
pop
xor
xchg
sete
add
call
or
inc
aam
xchg
les
les
adc
in
pop
out
mov
push
xchg
xor
dec
arpl
dec
cmpsb
int
cmp
notb
adc
lock
jp
cld
sbb
inc
mov
xor
scas
mov
add
mov
out
lods
fdivrl
hlt
jg
cmc
sbb
or
test
ret
ret
dec
ds
push
cmpsb
jmp
dec
int
es
cmp
das
adc
lcall
jno
inc
leave
nop
out
mov
inc
cltd
pop
jge
pop
mulps
pop
fstpt
jbe
sub
or
xchg
xor
mov
xchg
dec
mov
push
sub
push
lods
sbb
pop
inc
jl
pushf
js
repnz
incb
iret
into
mov
movsb
stos
mov
xor
xchg
add
cli
cmp
rcrb
enter
sarl
or
daa
and
jmp
mov
and
cs
fcmovbe
loope
inc
shll
dec
imul
movsb
cmp
adc
leave
and
ret
xor
lahf
pop
mov
or
jp
xorb
sbb
imul
imul
mov
pop
jbe
movnti
int
push
subl
adcl
xchg
add
iret
xor
jge
addr16
dec
test
lds
test
cmpsl
and
adc
cmp
mov
inc
insl
or
out
aas
idivl
pusha
push
jnp
fsubs
push
pop
or
insl
mov
dec
xchg
cmpsb
clc
iret
test
pop
cmp
pop
sbb
mov
pop
les
popl
cs
xchg
test
idivl
mov
push
sbb
add
push
sub
ret
stc
repz
cmp
stos
mov
sub
adc
aad
cwtl
add
add
jecxz
test
or
cmp
dec
or
mov
adc
jge
xor
or
cltd
es
add
fdiv
movsb
ja
repnz
clc
mov
idivl
or
mov
push
jge
mov
psrad
pop
add
cli
push
push
mov
jne
movsl
leave
out
mov
fisubrs
add
dec
jae
inc
ljmp
lds
jo
enter
je
mov
out
or
or
jne
and
or
mov
outsl
push
imull
jge
movsl
cmpb
aas
inc
insb
inc
fadd
mov
outsb
jecxz
mov
mov
xor
cvtps2pd
stos
and
test
dec
cmp
sbb
cld
mov
cli
mov
jp
push
push
mov
cmp
adc
gs
in
pop
cmc
test
test
adc
mov
sub
cmp
pop
leave
inc
outsl
repnz
cmc
push
sbb
dec
js
popf
xor
popl
setl
cmp
mov
or
in
scas
sbb
rcl
fcompl
inc
jle
inc
pusha
ss
negb
adc
into
mov
push
adc
lods
dec
cli
sahf
mov
mov
mov
mov
outsb
sahf
cmp
cmp
mov
xchg
xor
and
jnp
andl
push
adc
mov
jns
xor
fmul
jp
sahf
mov
sbb
push
mov
popa
es
loopne
out
push
cmp
sbb
push
test
cmp
xchg
repz
aaa
sbb
push
add
sbb
cmp
inc
cli
mov
stos
cmp
mov
adc
ret
fisttpl
andps
jecxz
or
stos
pop
iret
dec
aaa
sub
push
dec
lods
in
or
arpl
hlt
inc
mov
das
data16
jno
hlt
lods
inc
cmpsb
add
stos
imul
mov
jno
movsb
mov
enter
pushf
cmp
xor
pop
sub
push
push
or
jecxz
sub
push
fdivs
push
xor
lods
ss
pop
mov
xor
mov
mov
jmp
or
jecxz
jne
jnp
int3
dec
or
and
sub
jne
scas
fldl2t
ficompl
sub
insl
ret
xchg
aas
mov
jnp
pop
dec
stos
dec
cld
add
cmp
sub
push
mov
outsb
inc
xchg
dec
ljmp
loope
sbb
xchg
ja
fdivrs
cmpl
mov
lahf
inc
addb
popf
adc
repnz
ja
out
in
mov
ret
nop
ret
imulb
xchg
out
stc
ds
dec
inc
add
orl
lcall
shll
pop
mov
xchg
std
pusha
sbb
mov
mov
pop
movzwl
xchg
bound
lahf
das
rcrb
faddp
stos
test
pop
jg
jle
lea
sbb
adc
outsb
jns
jno
lcall
add
mov
fwait
and
sbb
and
cmp
add
jno
xchg
xor
stos
mov
xor
mov
clc
jne
call
add
cld
pop
sub
sbb
cwtl
mov
xchg
jb
orb
in
int3
mov
in
pop
push
test
jns
in
ljmp
xchg
xor
or
aas
out
dec
loop
call
pop
mov
out
subl
testl
sarl
scas
test
mov
shlb
sbb
add
sub
sahf
xchg
sbb
insb
sbb
pop
xor
xor
js
xor
std
mov
stc
xchg
ja
imul
aas
xor
outsb
js
jg
mov
jecxz
test
dec
es
sbb
js
adcb
xchg
movsl
addr16
push
push
loopne
push
test
mov
insb
lahf
adc
cli
jo
dec
dec
pop
xor
jle
push
ret
cmp
test
push
test
out
xchg
jnp
and
push
jmp
or
fdivr
test
seto
mov
push
js
outsb
out
or
outsb
sub
jl
shll
mov
test
push
xchg
mov
xlat
inc
mov
fwait
and
inc
sub
xchg
cs
aam
mov
jno
insl
push
mov
sub
pop
adcl
ss
cmp
orl
fstpl
dec
push
jne
call
outsb
lock
fnsave
xor
cmp
push
pop
mov
lock
cmp
adc
inc
mov
jmp
cs
add
and
xor
mov
aam
cs
xor
mov
xor
test
push
add
and
jae
or
dec
jae
xor
orb
rclb
mov
in
sub
inc
mov
iret
jge
jb
sub
repz
sub
mov
cmp
jle
cmp
bound
ret
xchg
jno
sbb
cs
or
ret
or
cmpb
test
or
popa
xor
orl
lea
cli
add
jne
sbb
jmp
inc
sub
imull
sbb
leave
and
xor
pop
or
clc
dec
ja
xchg
xor
int3
mov
ret
push
push
cmp
loopne
xor
push
js
std
sub
imul
push
inc
pop
xor
in
xchg
and
imul
daa
xchg
pop
jo
cltd
call
fldl2e
or
push
repnz
clc
fsubs
inc
imul
mul
shll
testl
aas
cmp
lea
fmulp
mov
test
xor
mov
repnz
insb
sar
stc
test
or
enter
xchg
xchg
xor
cmpsb
mov
das
fidivrl
xlat
enter
jle
je
stos
mov
inc
iret
ss
pop
subb
std
xchg
mov
test
insb
pop
pop
cld
xchg
bound
rclb
fiaddl
cmp
in
mov
xor
jp
fidivrs
call
cmpsl
dec
pushf
adc
cmc
mov
enter
sbbl
mov
popf
faddl
inc
repz
repz
lcall
leave
scas
lds
and
jle
or
or
fidivl
push
add
int
test
mov
adc
jmp
das
jne
mov
ret
dec
inc
scas
insl
cmpsl
pop
out
sub
cmp
lods
test
in
lret
lods
outsl
sbb
xor
loope
sub
loopne
inc
mov
bound
rorl
test
mov
mov
add
addr16
adc
fldcw
cld
or
dec
addb
pop
add
shlb
jl
cmpsl
inc
mov
es
push
dec
or
sbb
cmp
ss
xchg
sbb
jge
xchg
je
fldenv
out
mov
negl
stc
loop
fisubrl
jecxz
pop
sti
dec
enter
lahf
dec
push
call
or
adc
inc
sbb
mov
imul
mov
mov
mov
xor
or
push
shll
adc
dec
fwait
out
and
adc
movsb
loope
cmp
xlat
cmp
sub
movsb
xchg
add
push
xchg
jp
xor
sbb
jns
ljmp
mov
or
fmuls
xchg
fcmovnb
pop
lahf
std
or
addr16
sbb
pusha
jle
stos
or
add
fcmovnu
mov
xchg
xchg
xor
fwait
pop
andb
and
mov
mov
cs
adc
mov
loope
loopne
insb
mov
test
push
xor
cltd
jno
xchg
dec
xchg
dec
xchg
ret
adc
fwait
mov
aas
div
or
and
xor
mov
arpl
pop
sub
xor
jno
lahf
jge
ficoms
jae
sarl
push
mov
lock
repz
outsl
mov
ror
xchg
sahf
sbb
js
sti
and
shrl
cmc
jae
mov
insb
jp
in
fwait
xor
jmp
sub
pop
or
mull
lahf
insl
adc
cwtl
rcl
add
push
mov
adc
inc
push
call
mov
sti
jmp
ret
imul
xchg
outsb
jns
dec
push
jb
in
push
cltd
dec
fnstcw
test
sbb
shl
scas
arpl
sahf
mov
inc
mov
xchg
inc
inc
mov
cs
imul
repz
cmc
xor
imul
push
push
xor
jno
test
out
das
repz
mov
jnp
test
jbe
cmp
lea
xlat
jecxz
xor
mov
out
cs
push
or
add
repnz
scas
mov
ret
pop
dec
xchg
fsubr
add
inc
loope
sbb
cmp
push
into
lahf
push
xchg
loope
loop
lahf
and
repz
shr
adc
mov
adc
loopne
ja
popw
loope
push
notb
pop
sarb
in
jne
or
out
pop
test
mov
loope
mov
pop
xchg
mulps
xchg
test
fdivs
mov
in
inc
idiv
jno
xor
mov
cmpsl
jmp
dec
sbb
push
sub
lret
je
jo
pusha
push
jne
sub
xor
sub
jle
mov
add
fcmovu
push
sub
dec
stc
or
and
in
inc
dec
rorb
push
je
jns
loop
sub
mov
jmp
jb
imul
leave
jmp
cmp
int3
leave
std
into
pop
scas
cmp
fnstenv
stc
fildll
inc
mov
xchg
inc
add
inc
mov
ss
fnsave
pop
push
lds
je
adc
adc
cwtl
fcmovb
loopne
cmpw
push
orl
popf
dec
test
sahf
push
xchg
pop
push
mov
in
stc
add
les
jecxz
out
or
dec
scas
out
es
mov
push
cmc
stos
inc
data16
mov
pop
push
repnz
sbbb
push
mov
roll
jecxz
movntps
daa
in
adc
jmp
outsb
jge
mov
out
jl,pn
mov
jbe
push
fs
ja
mov
and
adcb
sub
pop
xchg
inc
sbb
repnz
push
shlb
jmp
std
pop
adc
adc
xor
ss
daa
and
jl
xchg
xor
or
leave
pop
push
test
mov
into
popf
jbe,pt
cmp
rorl
fmuls
ljmp
mov
jp
xchg
int3
push
sub
cli
jne
adc
sbbb
movsb
not
arpl
in
inc
sub
push
sbb
inc
mov
mov
arpl
mov
cmc
pop
lock
or
in
in
fisubrl
movsb
mov
cmpsb
jge
jbe
xor
int
into
es
pop
add
icebp
loop
pusha
jae
repz
and
jbe
in
mov
mov
mov
and
cmpsb
ljmp
dec
daa
and
sub
les
lea
dec
pop
mov
and
popf
xor
insb
dec
push
call
mov
cli
fildll
jmp
pop
in
inc
mov
push
into
ficompl
push
add
push
sbb
xor
scas
push
mov
movsb
fldt
les
adc
fucomi
xchg
dec
xchg
es
sbb
adc
lods
cmp
jp
adc
adc
dec
in
lcall
aaa
push
in
shrb
data16
inc
jg
push
xchg
addr16
mov
or
fneni(8087
mov
add
cmp
pop
push
mov
in
addl
push
add
mov
and
dec
jae
mov
mov
outsl
xchg
sub
aam
shll
mov
and
out
lcall
test
loopne
loopne
inc
sbb
daa
mov
inc
sbb
jge
lea
leave
mov
push
inc
adc
adc
push
xchg
fs
inc
das
jo
fstl
push
xor
pop
repnz
mov
fwait
or
lds
notl
pop
nop
test
sub
rolb
addb
sub
dec
pop
cli
xchg
dec
inc
fwait
add
sti
mov
mov
dec
mov
sbb
xlat
fcompl
test
pop
rcr
shr
in
or
stos
add
scas
dec
cmpsb
daa
cmp
and
lods
test
pushf
test
ret
in
adc
xchg
rorb
data16
cli
iret
fsubrs
cld
fwait
jno
or
sbb
clc
andl
mov
pop
jg
stc
fistl
sbb
xor
sbb
sti
enter
je
inc
and
fsubr
pop
sub
popa
iret
leave
jecxz
flds
nop
inc
xlat
mov
fnstcw
testb
dec
pop
jg
test
mov
jns
inc
pop
inc
flds
aas
xor
or
inc
jmp
adc
mov
jmp
stos
xor
push
sarl
pop
adc
cmpsl
repz
and
xlat
bound
or
loopne
xor
add
mov
xchg
sbb
xor
inc
into
inc
mov
popa
arpl
cmp
inc
cmpsb
scas
outsl
sbb
inc
loopne
les
fnsave
inc
and
pop
sub
jae
mov
sahf
push
rorb
leave
jl
imull
sbb
push
mov
cltd
cltd
jno
xchg
inc
push
jno
je
and
outsb
inc
addr16
movsb
adc
popf
xchg
popa
gs
sti
popf
ret
sub
into
orb
xchg
push
in
pop
push
loopne
jmp
sub
inc
xchg
pop
inc
mov
push
mov
imul
fiadds
fsubs
outsl
pop
dec
sbb
repz
push
aaa
imul
fildl
repz
je
mov
arpl
inc
ljmp
jl
sahf
sbb
stos
add
insb
les
cmp
mov
ss
insb
aaa
adc
xor
scas
repz
inc
dec
mov
jecxz
adc
xchg
cltd
jbe
into
js
ret
inc
imul
sarl
jl
cmpsl
enter
xchg
adc
mov
cmpl
jne
push
in
add
bound
xchg
cmc
push
lret
aas
sti
ja
or
ret
cs
adc
hlt
pop
sbb
in
outsl
mov
mov
cli
leave
mov
fmull
push
cmpl
xchg
repz
aaa
and
adc
les
push
xchg
daa
scas
fdivrp
fs
scas
lds
lods
cli
test
xlat
out
clc
pop
or
mov
sub
jnp
ljmp
sub
push
sahf
xchg
mov
or
sbb
addr16
sti
pavgb
mov
mov
outsl
xchg
jnp
into
enter
rcll
mull
movsb
outsb
inc
sbb
test
repz
test
stos
orb
int3
jns
push
daa
sub
mov
xor
mov
ror
lahf
adc
or
mov
scas
test
stc
pop
jl
in
leave
pop
push
inc
push
gs
pop
jns
sbb
mov
out
or
add
lret
pop
fisttpl
je
ficoml
cmp
jmp
add
aas
mov
out
fstpt
divl
aam
aad
mov
cmc
pop
addr16
push
scas
push
xchg
imul
rcll
adc
sub
fcompl
lret
pushf
xchg
hlt
push
sub
adc
inc
sbb
cld
inc
sbb
adc
pop
in
mov
add
adc
movsb
jmp
mov
pop
push
iret
test
fnstsw
in
inc
dec
and
jg
inc
shl
lods
sub
pushf
xchg
jns
sarb
lods
mov
fcomps
sarl
or
mov
lahf
mov
in
fcmovne
lock
cmp
and
ds
cmpl
pop
pushf
mov
and
mov
pop
inc
in
cs
sub
cmp
outsb
and
or
addr16
loop
inc
int3
inc
mov
pop
lret
inc
jbe
mov
mov
rolb
cmp
or
pop
pop
iret
cmp
fs
jmp
inc
xor
fimull
repnz
jle
jecxz
xchg
test
mov
jp
ss
adc
sub
jmp
adc
js
and
mov
adc
pop
xor
cmpsb
adc
insb
mov
mov
mov
cmp
sbb
das
shrl
mov
andl
in
cmp
test
jge
enter
push
das
jl
shl
jnp
dec
push
movb
test
adc
bound
outsb
inc
jb
lret
sub
out
adc
jecxz
outsl
jmp
cmc
sbb
repnz
std
movl
lods
ja
je
test
notb
fwait
pop
jl
dec
fiadds
sbb
ja
lahf
cmp
xchg
int
xchg
cmp
jne
out
insl
pop
dec
test
aam
push
scas
cmpsl
idivl
jbe
imul
xor
rcrl
sub
jmp
je,pn
out
dec
pop
sbb
lods
cs
mov
xchg
cli
lret
pop
dec
sqrtps
lcall
int
xchg
and
outsl
sbbl
fisubrl
stos
sub
inc
insb
jno
xor
jge
lcall
es
pop
fwait
mov
inc
sbbb
cwtl
call
cmp
jne
jp
cli
pop
int
mov
ret
mov
decb
leave
hlt
enter
pop
outsb
in
and
xlat
out
dec
fbld
adc
jecxz
lods
xchg
push
sub
mov
hlt
xchg
scas
cltd
mov
push
int
and
scas
scas
mov
add
mov
ja
xor
xchg
movsl
dec
inc
mov
imulb
sbb
enter
into
fisubl
mov
iret
mov
scas
xor
repnz
out
xchg
js
inc
dec
ss
lods
and
shl
cmp
jb
dec
pusha
in
in
inc
push
pop
ds
inc
adc
into
rcrl
and
xchg
mov
mov
jnp
add
sahf
loop
add
jecxz
arpl
adc
lcall
add
dec
push
or
cmp
mov
mov
add
lret
sbb
pop
lret
add
pusha
scas
xchg
mov
insl
shlb
and
adc
fstpl
sti
int3
sbb
ss
jns
shl
jg
cld
ficoml
or
inc
add
loop
mov
sbbl
inc
sahf
sub
or
or
and
and
ss
test
push
jae
adc
mov
imul
xor
mov
xchg
adc
shrb
addl
xor
inc
insl
outsb
push
add
popa
out
insb
cmpsb
ret
inc
mov
mov
aaa
jl
int
xor
xor
cmp
ret
add
cwtl
aam
mov
mov
xchg
movsl
sub
adc
pop
pop
sub
sbb
data16
mov
ret
pop
push
jb
jmp
cmp
outsl
xchg
rcrb
clc
add
mov
hlt
movsl
into
insb
test
jnp
fsubrp
gs
dec
mov
addb
jo
pop
ror
add
cmp
les
ret
addr16
ljmp
cmpb
mov
fs
std
jmp
inc
gs
fdivrl
div
mov
mov
xchg
jnp
xchg
lcall
pop
jne
fildl
insb
xor
ret
enter
dec
xor
pop
jmp
test
aam
xor
outsl
dec
pop
fwait
imul
int
movsb
pop
int3
dec
addr16
xchg
sub
aaa
jb
out
push
dec
xchg
add
dec
in
out
dec
ja
xor
inc
and
pop
pushf
cli
dec
xlat
xor
inc
mov
jae
adc
jnp
adc
in
jl
pusha
lea
test
ds
out
out
clc
es
jae
loope
inc
rorb
lcall
jbe
int
jno
sub
cmp
mov
sub
mov
and
aas
movsb
aaa
mov
movsl
push
test
test
cli
outsb
lock
adc
and
ds
jl
jle
popa
insb
popl
lds
iret
sub
jae
movsl
shlb
lock
sbb
jbe
add
mov
mov
jno
fs
push
sbb
push
mov
adc
cmpl
sbb
xor
js
mov
outsl
mov
cmp
mov
cmpsb
stos
lahf
lret
mov
jns
ss
xor
mov
fmul
jno
ret
inc
xchg
popf
ljmp
cmpsl
popf
cs
pop
fstpl
stos
repz
sub
cltd
insb
dec
push
pop
test
ret
out
aas
push
or
push
pop
jge
mov
sbb
enter
sub
dec
sub
out
shl
jns
movsl
rclb
or
mov
repz
in
or
movsb
lret
jl
adc
pop
mulb
pop
dec
ficomps
hlt
sbb
add
mov
cs
dec
mov
mov
bound
aas
icebp
loope
daa
add
sbb
xorl
mov
cmpsl
sbb
add
inc
jo
std
rclb
adc
mov
lret
scas
xor
pop
or
mov
mov
fs
lahf
std
xchg
aaa
push
pushf
movd
in
pop
fwait
addl
les
lret
in
jns
fistpll
scas
or
adc
sbb
and
call
insl
lds
testb
fstpt
dec
imul
dec
lds
dec
jno
enter
jo
push
pop
cmp
push
cmp
xchg
imul
setno
sub
fnstcw
jle
dec
rclb
xchg
mov
out
jg
jp
add
lods
fistpl
sub
xor
lret
rcrb
data16
fidivrl
data16
out
push
jne
shl
push
xchg
mov
xor
scas
push
xor
mov
xchg
ret
sub
jge
mov
jo
into
cld
fisttpll
sbb
pop
mov
jns
push
inc
xchg
add
adc
xchg
into
pop
adc
mov
mov
sbb
push
jg
cmpsl
jno
adcb
pop
gs
mov
dec
test
push
push
jbe
pop
movsb
mov
addr16
inc
mov
dec
mov
pop
mov
adc
jnp
pushf
adc
cs
push
clc
aas
je
fmuls
fildll
out
jp
dec
arpl
mov
or
movsb
lds
je
adc
fistpll
nop
xchg
fists
mov
xorl
push
cwtl
mov
sbb
arpl
mov
jmp
outsl
pop
mov
enter
daa
and
scas
cltd
pop
pop
fwait
dec
mov
xor
pop
stos
arpl
dec
imulb
ficomps
xchg
idivb
lahf
add
pop
and
xor
mov
je
mov
push
xor
pop
push
pop
cmpsb
js
inc
xchg
xchg
outsl
in
pop
clc
push
sub
leave
out
pushf
mov
rorl
divb
loopne
or
loopne
jmp
outsl
mov
add
mov
ja
xorb
dec
push
jmp
mov
xchg
test
cmp
and
into
mov
inc
push
adc
inc
daa
lea
adc
pop
jne
mov
mov
enter
sti
scas
icebp
push
clc
dec
jb
arpl
subb
lds
or
fiaddl
fldl
fsqrt
inc
push
inc
lea
sub
loopne
mov
xchg
push
pop
gs
mov
pushf
mov
and
adc
or
popf
cmp
loopne
mov
cmp
test
movsb
dec
push
lcall
mov
fwait
ja
mov
sti
fbld
xchg
movsl
flds
orl
jae
lret
mov
pop
and
jl
cli
inc
push
and
dec
sub
mov
stc
inc
dec
adc
mov
subb
repnz
jp
cld
bound
test
std
and
sub
out
fwait
icebp
fs
mov
cltd
loope
test
xor
out
out
lds
dec
out
xchg
push
jle
sti
dec
icebp
pop
or
frstor
lea
shlb
xchg
or
xchg
pushl
repz
std
sub
mov
or
stos
lods
dec
jae
lret
cmp
jne
repz
inc
cs
mov
jno
jns
inc
popa
xor
scas
adc
inc
data16
and
daa
inc
mov
or
and
arpl
pop
jmp
insb
repz
rclb
xchg
xchg
test
xor
ret
mov
movlps
jmp
mov
bound
and
mov
sbb
ja
xchg
fimull
mov
hlt
loop
jmp
add
iret
in
rolb
xor
addr16
dec
loopne
mov
dec
jns
clc
dec
push
mov
lods
mov
inc
mov
lret
icebp
std
call
add
fs
push
fistl
xchg
icebp
outsb
push
fdivrl
pop
roll
inc
inc
or
and
sub
xchg
inc
test
jne
or
dec
or
iret
fnstenv
mov
mov
mov
mov
xchg
xlat
test
cs
jge
mov
lret
loopne
sub
imul
pop
push
mov
or
bound
sub
and
xor
cs
out
scas
fisubrl
jge
lds
or
pop
ss
nop
hlt
sub
add
je
lcall
sbb
cmp
rorb
fucomi
pop
inc
shll
es
stc
sahf
sar
lods
lds
fidivrl
loopne
movd
adc
lcall
dec
imul
jne
jecxz
clc
jg
scas
ret
sbb
pop
and
pop
cmp
xchg
js
jg
pop
push
pop
sub
sub
and
push
push
lahf
in
pop
inc
mov
in
scas
dec
leave
lds
leave
or
paddsw
mov
dec
jb
inc
movhps
xchg
push
mov
or
outsl
je
xor
cmpsb
adc
xorl
fcoml
cmpl
cmpsl
imul
clc
loopne
adc
int
aad
int
sub
pop
movsb
mov
jp
adc
popa
pop
shrb
or
mov
jno
xor
orb
push
repnz
xchg
lea
sahf
pop
cmp
cmpsb
mov
mov
lea
mov
sti
fnstenv
cs
adc
stos
test
ret
cltd
pop
sahf
xlat
insl
jp
sbb
icebp
int
sub
add
xor
push
in
enter
pop
cmp
xor
pop
push
xchg
push
movsb
shr
push
js
inc
cmpsb
idivb
in
inc
and
jg
pop
stos
cltd
push
scas
test
jge
pop
lea
inc
enter
lret
test
mov
adc
ds
les
fisubs
and
fnstenv
dec
es
xor
fisttps
mov
test
cmp
js
jg
and
push
and
repz
pop
cli
scas
out
loop
mov
clc
imull
cmp
cltd
sbb
push
ss
arpl
fdivp
cwtl
mov
sbb
adc
sbb
lds
and
sti
lock
cmp
push
xchg
pop
mov
int3
out
sub
aam
xchg
into
adc
mov
xchg
into
pop
and
popa
mov
sbb
inc
out
add
push
lock
sub
add
mov
fadd
call
aaa
sar
jl
addr16
call
es
xor
cmpsb
les
imul
daa
cs
repz
mov
jne
sahf
std
leave
fidivrl
nop
shl
bound
jp
mov
mov
inc
rcll
leave
sahf
lret
mov
into
adc
add
pushf
push
jp
cmp
jmp
pop
insl
outsl
inc
add
testb
je
adc
cmp
cld
mov
jbe
aam
xor
push
dec
dec
pop
mov
push
sub
das
cmp
rcl
xlat
insb
das
mov
dec
sub
pop
dec
mov
sbb
fimuls
jno,pn
imul
dec
popf
and
pusha
cld
push
mov
xchg
xchg
aad
xor
inc
negl
test
pop
push
insb
data16
cmp
mov
jo
push
push
lods
cmp
loop
test
lret
pop
cmpsl
popa
push
aam
push
in
insb
fstpl
dec
mov
out
repnz
mov
push
in
push
xchg
lea
test
popf
out
pop
cmp
inc
mov
shr
inc
pop
out
inc
cmp
in
cltd
mov
sbb
dec
imul
scas
outsb
dec
pop
jo
jg
pop
xor
dec
mov
xchg
ss
mov
pop
cmp
xor
std
or
ja
fs
xchg
sbbb
add
ds
push
out
jno
mov
mov
sti
fsubrs
pop
ds
pop
pusha
sbb
sub
mov
mov
adc
sbb
stc
jo
push
sub
push
and
jl
pushf
lock
and
push
shrl
cmpsl
sbb
insb
fcoml
push
mov
cmc
int3
push
mov
push
or
push
add
jl
cmp
ds
mov
lods
pop
outsb
sub
fnstcw
daa
icebp
call
xlat
and
jb
int3
xchg
mov
test
cmpl
mov
in
cmovae
aam
xchg
jle
inc
pushf
test
adc
loopne
out
out
jmp
jb
dec
add
call
std
cmpsb
cld
aad
jnp
push
les
xor
sbb
xorl
icebp
lcall
repz
jne
decb
insb
xorb
mov
pop
sarb
movsb
xchg
push
sbb
sbb
mov
pop
js
enter
mov
dec
mov
add
cmp
xor
daa
jmp
push
lret
add
xlat
in
scas
mov
inc
sbbl
popf
dec
add
pop
in
mov
cld
inc
bound
mov
fcoml
cltd
push
lahf
jl
dec
imul
xchg
ret
and
sub
or
or
adc
mov
test
mov
cmp
iret
cltd
roll
jmp
scas
fdivl
inc
sti
int3
pop
es
fcompl
loope
leave
cmp
or
mov
and
fucomip
pushf
rol
out
imul
cmc
lret
cmp
pop
cs
cmpsb
popa
push
std
mov
imul
fsubl
mov
add
sbb
movsl
pop
dec
sti
js
xor
xchg
xor
lcall
iret
cmp
and
rorb
fisttps
inc
xor
or
inc
sbb
decb
inc
xor
cld
leave
mov
es
and
dec
dec
dec
and
and
pop
mov
jl
push
inc
cmc
rolb
push
inc
and
push
scas
cmc
sub
xchg
test
mov
loope
mov
out
out
or
mov
push
jmp
cmp
pop
pop
adc
pushf
notb
sub
push
lods
adc
or
push
lods
rcll
mov
add
shll
fiaddl
push
cmpsb
imul
or
xor
int3
sub
out
int3
cmp
aad
pop
loope
push
and
les
push
mov
jecxz
decb
enter
cli
add
xor
jne
fs
pop
or
or
mov
and
mov
cmc
push
filds
cltd
clc
cwtl
outsl
xor
mov
adc
ret
dec
lret
inc
adc
arpl
rolb
xor
cs
loope
mov
lret
xor
cmpl
xchg
pushf
in
int3
cmp
push
test
shrl
cmc
push
pop
jge
mov
jmp
psubusb
push
or
mov
data16
test
scas
adc
inc
jl
dec
pusha
icebp
pushl
mov
stos
sbb
push
push
int3
adc
xor
xchg
outsb
mov
sub
cltd
in
sbb
cltd
inc
test
lods
jl
pop
mov
test
xchg
rcrb
cmpsl
inc
cld
push
pop
or
aaa
int3
xor
push
aas
mov
dec
adc
xlat
dec
cmp
loop
dec
aaa
pushf
fadds
sub
repz
sbb
xchg
fnstsw
and
sub
cmpb
inc
adc
into
mov
inc
ljmp
cmp
xor
xchg
xor
cmpl
dec
mov
mov
or
sbbb
imul
xchg
aaa
je
inc
inc
lcall
add
mov
mov
xchg
std
or
xor
add
xchg
jo
cmp
hlt
xorl
adcb
ss
pushf
ffree
insb
popa
and
sub
and
aam
enter
aaa
outsb
sbb
idivl
fs
cmp
mov
aas
cltd
adc
enter
jmp
mov
ret
mov
jo
imulb
adc
dec
and
scas
mov
xchg
aaa
inc
jne
lods
push
dec
or
mov
sub
xchg
push
mov
jo
push
das
pop
sbb
bswap
shrl
fcoms
std
es
xchg
add
xchg
fists
orb
or
orl
xchg
jae
cmp
adc
push
cmc
push
in
shll
aad
adc
adc
fisubrs
push
and
mov
pop
xchg
mov
stos
je
fidivrl
jmp
xor
sbb
cmp
mov
cmp
inc
jmp
arpl
mov
fwait
mov
pop
and
outsb
stos
mov
mov
cmp
dec
or
ljmp
bound
rcll
jb
lock
ljmp
scas
sahf
or
sub
lret
inc
jno
mov
push
ja
and
je
sar
mov
push
stos
jb
pop
sahf
iret
clc
hlt
mov
bnd
in
int
popf
repnz
test
scas
aaa
mov
sbb
mov
outsl
inc
pop
adc
fnsave
jno
cmp
or
xchg
cmp
fcomp
outsb
or
pop
jae
lods
or
xchg
jbe
adcb
loopne
push
test
push
add
add
mov
rcll
loop
lea
sbb
adc
loopne
jae
cmp
jbe
rclb
xor
mov
mov
dec
leave
mov
xchg
outsb
std
stc
inc
pop
clc
and
push
pop
sbb
loop
jmp
gs
xchg
test
jno
inc
insb
pusha
sahf
and
lahf
sbb
cmpsl
cmc
aad
mov
inc
popa
push
ss
ljmp
dec
xorl
sahf
jl
call
jno
gs
stc
sbb
imul
fwait
arpl
inc
in
dec
data16
sbb
dec
fs
js
mov
loopne
cmp
js
iret
fildll
iret
push
mov
sbb
pop
jg
nop
pop
mov
mov
inc
xchg
push
aam
jns
push
dec
outsl
arpl
xor
pop
je
fildl
and
pop
stc
scas
movsb
adc
clc
jge
gs
mov
jl
cli
dec
inc
lret
int
sbb
lods
jle
cmp
mov
pop
icebp
jo
cli
test
insl
cmp
cmp
push
iret
iret
int
jmp
mov
test
fcmovu
lahf
inc
jno
mov
inc
push
icebp
and
push
aad
addr16
fs
cmpsl
mov
adc
stc
jne
or
xchg
sbb
mov
std
xchg
jnp
and
ret
add
lret
jg
fs
inc
das
jns
in
cmp
mov
push
ljmp
add
sbb
fdivrs
jne
and
mov
or
mov
rcl
dec
cmp
aam
dec
mov
mov
cmp
loop
push
dec
sbb
stc
add
aaa
jecxz
cli
in
fldcw
xlat
cs
fbstp
es
or
movsl
jecxz
sub
jae
mov
sub
mov
mov
mov
mov
cmpsb
outsl
mov
dec
fdivrs
add
adc
mov
lcall
mov
int3
addr16
shrb
shl
test
dec
aam
ss
sti
pushf
out
aas
or
mov
push
rorl
repnz
mov
inc
ds
call
in
clc
mov
fsubl
pop
add
icebp
inc
jge
fcmovu
dec
scas
sub
lods
mov
pop
or
push
mov
pusha
inc
mov
jae
adc
mov
pop
jge
test
stos
andb
mov
cmp
lahf
mov
or
stc
sbb
out
pop
pop
xor
xor
data16
mov
dec
dec
cmpsl
idivb
aas
adc
std
shrl
outsb
cmp
pop
loopne
add
movsl
push
dec
test
cmp
push
adc
push
xchg
pop
or
gs
movsb
aas
addr16
test
mov
and
push
sbb
std
scas
cmpsl
pop
stc
push
jmp
cld
jne
push
sub
lock
sub
mov
cmp
in
pop
aam
divl
or
lods
pushf
aaa
pop
push
mov
jae
outsb
fiadds
push
sti
ljmp
jle
arpl
movsb
sbb
sub
data16
sahf
dec
mov
out
pop
dec
jle
adc
push
xor
mov
imul
fstpl
xor
fbstp
xor
cwtd
pop
lret
dec
sbb
pop
insl
dec
fdivl
loopne
mov
mov
xlat
adc
enter
pop
stos
pop
inc
pop
int3
sub
in
lods
roll
or
lret
xchg
pop
rcl
jmp
in
call
add
jge
push
cmp
mov
aas
repz
rcll
inc
jo
adc
xchg
lahf
cmpsb
inc
pop
sahf
jp
jno
add
jge
mov
inc
pop
push
xchg
inc
xchg
pop
test
into
clc
scas
clc
dec
mov
mov
iret
jnp
out
push
ja
popa
push
jl
icebp
mov
xchg
dec
arpl
and
imul
addl
enter
sbb
test
push
push
cmp
fstpl
fcomi
rcr
mov
xor
cmp
push
xchg
mov
mov
mov
aam
push
jae
mov
test
aad
out
addr16
shlb
out
cmp
sub
mov
ret
inc
add
test
mov
iret
and
leave
sahf
inc
pop
sbb
js
mov
jle
mov
pop
mov
xchg
movb
enter
pop
pop
push
in
cmp
mov
rcrb
xchg
sub
pop
inc
js
jmp
stos
push
or
xor
or
cli
icebp
pop
cmpsl
nop
pop
jae
sbb
insb
sbb
sahf
push
pop
aam
imul
jns
shlb
stc
lahf
and
icebp
add
movsl
fsts
inc
jb
aaa
mov
test
ja
enter
stos
out
or
mov
sub
fisubrl
nop
jns
fnstcw
loopne
repz
push
test
movsb
std
jmp
and
cmp
cmc
cld
sahf
mov
aas
sub
stc
push
ja
in
sbb
mov
adc
test
cmpsl
stos
adc
and
pop
jmp
push
enter
dec
imul
mov
lods
cmp
aam
xor
mov
and
or
mov
mov
stos
jmp
out
ja
mov
jl
or
cs
cmp
rorl
in
test
jns
mov
adc
dec
mov
or
and
pop
fcomps
pop
mov
jae
xchg
xor
or
jge
je
push
cmc
int
push
aam
fimuls
add
add
sub
outsl
mov
cli
sti
pop
add
ja
out
push
push
add
xor
adcb
daa
test
mov
jmp
ret
jg
mov
imull
fmul
repz
jnp
push
and
jp
icebp
lea
pushf
dec
xlat
dec
jbe
inc
fsubp
push
movsl
mov
scas
xchg
jae
mov
xor
adc
pop
or
xorb
or
iret
mov
mov
movsl
in
repz
lea
inc
test
push
jns
jbe
stos
ret
arpl
push
mov
fwait
cmpsb
sar
lret
in
jle
pop
pop
ljmp
push
call
movsl
xchg
popl
mov
aas
inc
cvttps2pi
sbb
and
and
dec
lods
xchg
xlat
push
pusha
mov
adc
add
scas
push
test
std
lea
dec
mov
or
fimull
adc
les
pop
sub
shlb
pop
push
popa
scas
adc
ljmp
ret
adc
arpl
lret
jo
inc
sub
jmp
jo
mov
test
and
insl
mov
lret
cs
stc
xchg
push
lea
push
stc
mov
push
jno
push
dec
popf
jmp
cmc
mov
test
test
adc
mov
and
lods
pop
out
ficoms
cwtl
int3
in
out
xchg
pop
sbb
rclb
insb
and
push
push
mov
out
mov
out
popa
jecxz
in
mov
leave
cmp
adc
mov
addb
jo
cmp
cmp
pop
xchg
push
ss
imul
and
ret
inc
push
push
movsl
ja
pop
inc
ss
push
in
inc
xchg
loop
dec
xor
jmp
xsha1
cmpsb
mov
cmp
mov
in
stc
adc
jne,pn
fwait
loopne
jae
fs
cltd
or
xchg
xchg
mov
inc
jecxz
imul
cmp
push
rcr
call
out
xchg
xor
fstl
mov
add
cmpsb
movsl
fwait
mov
pop
push
mov
adc
adc
cmp
into
inc
or
and
cs
and
adc
pop
in
cmpsl
fldcw
inc
popf
cmc
into
test
dec
cmpsb
stos
add
rcrl
icebp
pop
insl
xchg
outsl
daa
xchg
push
dec
push
push
movnti
mov
cs
inc
dec
dec
jp
sbb
xchg
mov
cwtl
dec
ffree
popa
mov
aad
jbe
xor
jne
mov
cmp
shll
mov
add
adc
jl
ret
add
lods
aad
sbb
mov
and
mov
push
lret
mov
mov
push
push
jb
stc
mov
lcall
push
pop
call
and
jae
mov
mov
or
arpl
adc
adc
jge
popf
or
movsb
inc
jne
in
shll
push
in
ficoml
and
mov
pop
pop
and
push
in
xchg
push
mov
cs
and
xchg
popf
arpl
push
sbb
xorl
cli
xor
je
scas
pop
fdivp
enter
adc
jae
outsl
fcoms
push
pop
fmull
mov
call
cwtl
shl
call
rorl
aam
iret
cmp
bound
add
inc
lds
clts
push
mov
mov
and
sarl
les
pop
imul
pop
mov
lret
mov
dec
lea
scas
fs
pop
movsb
push
loopne
insb
test
scas
dec
filds
stc
sub
mov
sub
xchg
icebp
xchg
out
es
sahf
mov
nop
push
mov
lcall
shr
jp
stos
jge
les
lods
imul
dec
mov
rorb
dec
push
fwait
lock
sub
arpl
push
and
je
ret
jle
je
inc
cwtl
mov
cmp
adc
sarb
jo
sub
mov
xor
pop
xor
insw
jge
sbb
sbb
push
sub
lods
cmpl
jno
mov
inc
jne
std
ror
xchg
sub
outsb
or
insl
in
push
out
inc
xchg
fdivrl
sub
pop
dec
push
scas
test
movsl
cmp
in
sub
popf
mov
fisttpll
lds
dec
popf
outsb
loop
sbb
repnz
fisubrs
loope
cmp
pop
cmp
lea
lods
or
mov
jno
sub
rcll
jecxz
outsl
addr16
xor
jmp
hlt
mov
pop
xchg
out
loopne
xor
iret
mov
inc
xchg
jb
orl
jmp
lods
push
jns
movsb
sub
test
mov
insl
loopne
mov
nop
ds
jnp
pop
sbb
mov
cltd
rol
cmpsl
loope
enter
push
mov
stc
out
xchg
imul
ret
data16
rcl
das
bound
inc
scas
jno
ljmp
insb
test
cld
scas
ds
js
mov
aaa
cmpsb
lret
mov
mov
stc
sbb
cld
out
jmp
push
cmpsb
enter
or
mov
sub
lods
mov
xchg
sub
imul
lock
fcompl
sub
pop
dec
pop
inc
mov
inc
mov
adc
out
js
dec
mov
pop
push
test
add
mov
jbe
push
xchg
jp
jae
inc
loopne
jae
icebp
xor
xchg
push
xchg
int3
mov
inc
and
cltd
adc
das
pop
jns
xor
cmp
sahf
inc
and
dec
cltd
popf
test
popf
pop
test
sbb
or
mov
pop
hlt
jl
adc
into
pop
jns
test
clc
mov
pop
cmpsb
mov
flds
cwtl
or
aad
arpl
int3
test
adc
mov
adc
mov
jns
je
fwait
aaa
imul
inc
popa
shl
lcall
lahf
and
mov
dec
insl
add
insl
xor
mov
inc
sbb
stc
in
insl
sub
fwait
mov
adc
adc
rcrb
lret
mov
out
leave
mov
cmpsl
cmp
std
ret
dec
ljmp
and
pop
mov
int3
repnz
arpl
loopne
sbb
push
and
add
out
cld
xchg
fisubs
xrelease
push
adc
jle
jnp
jmp
ret
push
lds
dec
pop
hlt
adc
pop
inc
adcl
nop
adc
mov
lods
mov
adc
icebp
scas
aas
popf
imul
sbb
leave
dec
addl
push
cwtl
das
inc
xchg
sub
pop
in
call
stos
lahf
jae
xchg
and
mov
out
or
pop
sub
xchg
fs
and
dec
data16
add
xchg
ret
out
mov
add
jno
rorl
dec
repz
shrl
dec
push
fimuls
or
jp
int
cmpsb
push
scas
fimull
xchg
in
add
dec
leave
and
mov
sbb
lcall
jne
mov
movsb
hlt
mov
pop
sbb
lcall
gs
push
sti
bswap
mov
jae
add
and
and
adc
mov
mov
sbb
jno
pop
xchg
sbb
fcmovbe
pushf
sub
xor
ljmp
or
mov
push
add
jb
into
and
dec
das
loop
ljmp
dec
sti
inc
jp
dec
push
add
fadds
shl
sub
mov
inc
push
mov
dec
cmp
mov
adc
insl
mov
mov
sbb
add
push
pop
lret
inc
or
call
in
out
ljmp
mov
sub
mov
fdiv
test
mov
outsl
mov
xchg
xchg
pop
sbbl
or
pop
cmc
sbbl
inc
pop
loop
mov
enter
popf
add
xor
cwtl
ficoml
mov
cmp
aas
loop
and
add
pop
jl
cmp
sbb
nop
jo
mov
leave
scas
pop
fwait
inc
leave
pop
insl
call
pop
jmp
in
lods
outsb
shr
inc
in
les
dec
bound
xchg
in
out
jae
dec
push
xchg
fcmovnbe
dec
out
bound
lahf
jmp
lea
js
add
aas
rcr
in
bound
xor
xchg
sbb
adc
loop
shrl
and
pop
sahf
xchg
dec
add
push
push
das
in
push
adc
shl
adc
jmp
arpl
pop
mov
std
rcrl
inc
icebp
stos
xorb
sbb
lods
subl
into
out
sbb
in
mov
leave
fnstsw
lahf
xchg
fwait
jge
lret
adc
adc
mov
push
rorb
insb
in
dec
dec
mov
pop
and
inc
jge
aad
pop
loop
daa
push
mov
test
nop
push
cs
push
aas
push
subl
mov
cmpsb
pop
test
sbb
fmuls
dec
dec
and
mov
stc
lret
or
mov
mov
push
ss
lds
pop
int
loopne
jae
push
xchg
mov
inc
jbe
imul
xchg
movl
aam
stos
dec
sub
inc
xchg
cwtl
cmpsb
add
inc
aam
insb
or
inc
pop
jae
es
xor
fwait
jmp
add
lret
mov
xor
or
xor
hlt
or
test
stos
sub
stos
dec
mov
mov
jo
cld
lea
cmp
popf
sbb
mov
ljmp
pop
cmp
mov
js
jb
fidivs
pushf
dec
ss
sbb
pop
test
mov
ret
mov
leave
std
testl
lods
mov
sahf
sub
sub
add
mov
cmp
xchg
je
jae
xor
adcl
bound
or
mov
ficoms
inc
inc
add
mov
cmp
mov
inc
cmp
lods
xor
xchg
add
inc
push
lods
cld
call
nop
lods
jb
loopne
jp
and
sub
mov
xor
in
popf
or
andl
scas
adc
jmp
cmpsl
push
movsl
lods
call
into
pop
sub
in
daa
sub
add
scas
daa
sti
cli
xchg
sbb
and
or
andl
nop
ljmp
lret
repnz
mov
inc
xor
movl
shrb
lret
popf
leave
ror
rorl
loop
lods
add
movsl
mov
cmpsl
aam
dec
xchg
or
cmp
jbe
dec
cwtl
stos
scas
mov
iret
sbb
cli
inc
fstl
stc
mov
lea
mov
call
data16
pop
xchg
popa
lret
mov
insb
mov
and
imul
jo
jl
mov
out
stos
jle
imul
pop
mov
sub
test
sbb
test
or
cmp
ret
push
sarb
push
jo
push
call
mov
out
fdivrl
stos
pushf
ja
jg
idivl
or
cmpsl
subb
ds
les
inc
sti
push
lds
andb
inc
int
xchg
mov
lock
out
or
mov
dec
dec
or
cli
xor
ljmp
xchg
cmp
lret
xor
loope
mov
inc
stc
jp
xor
testl
xchg
sbb
dec
or
push
adc
inc
mov
jnp
out
add
mov
aad
sti
sbb
addl
mov
and
adc
xor
sbb
popa
shl
xor
in
lock
mov
rcr
mov
push
js
inc
std
mov
aaa
fcomps
lods
xor
push
gs
arpl
cmp
call
incb
adc
and
outsb
negl
int3
pop
fstpt
icebp
les
sbb
fdivl
jge
adc
or
std
or
pop
outsb
adc
aaa
mov
idivb
sbb
ljmp
pop
pop
lahf
call
sbb
mov
jle
jno
and
neg
xorl
cmpl
lds
pusha
add
pop
and
inc
jmp
jmp
iret
les
adc
sbb
cmp
pop
out
fwait
inc
xchg
xor
in
mov
cli
xlat
push
rolb
loope
ljmp
sbb
icebp
aam
pop
add
push
cmp
adc
std
ljmp
lret
push
adc
int
sarb
push
lea
push
inc
sub
mov
cmpb
jg
imul
orl
aaa
call
daa
add
nop
mov
fbld
mov
dec
and
dec
jno
mov
in
push
cltd
cltd
decl
insl
cmpsl
pop
jno
mov
cmp
and
cmp
das
pop
imul
xor
inc
inc
mov
and
std
bound
mov
inc
sbb
lea
cmp
int
dec
std
push
fadds
mov
xchg
inc
pop
loop
or
or
push
andl
adc
xchg
or
inc
cld
int3
ret
enter
shl
dec
sbb
cmpsl
xor
aaa
add
cmpsb
int3
out
int3
ds
and
xor
pop
test
or
and
sbb
push
sahf
xor
dec
xlat
lock
mov
mov
push
mov
icebp
jbe
in
cmp
dec
neg
cmpsb
cmp
lret
sub
adc
sbb
sbb
adc
push
sbb
xchg
push
mov
mov
mov
enter
cli
xchg
adc
sbbl
push
pop
dec
testb
iret
and
lret
push
sbb
test
cmp
pop
xor
cmpsl
mov
pop
dec
xbegin
imul
dec
enter
sub
jbe
sub
jno
imul
stc
sub
mov
ja
cli
xor
mov
mov
int3
and
xor
fnstsw
mov
adcl
loope
repz
cmc
mov
in
cmp
fidivs
lret
jne
add
jge
ret
adc
inc
cmp
cmc
aaa
rcr
jnp
test
not
icebp
inc
repnz
sbb
incb
shlb
shrb
dec
repnz
xchg
push
xchg
popa
pop
out
push
mov
fs
cmp
insb
mov
add
bound
mov
out
xchg
push
add
push
push
jo
mov
jbe
pusha
aaa
pop
mov
out
sbb
sub
sbb
add
jnp
dec
icebp
aas
pop
dec
das
fsub
add
aaa
in
push
and
fists
cli
jecxz
mov
arpl
fdivr
rcr
push
push
jnp
push
repnz
ds
jge
scas
stos
inc
je
xchg
gs
jnp
stos
adc
mov
push
orb
sti
test
mov
rcll
cmp
cwtl
mov
mov
daa
push
int3
sub
mov
sbb
mov
dec
push
js
cmc
xor
clc
sub
or
lea
or
repnz
sub
sbb
mov
sahf
push
leave
bswap
and
mov
addl
and
jne
push
or
mov
push
pop
xchg
cmpsl
add
icebp
inc
push
inc
add
push
or
jg
pushf
iret
fstps
xchg
ds
aam
in
pop
add
xor
pop
into
xor
adc
xchg
jge
cmp
nop
xchg
adc
mov
xchg
aam
popa
lock
sub
jl
xor
jmp
cmp
nop
pop
cwtl
scas
mov
adc
enter
xchg
pop
gs
inc
std
repz
cld
and
in
leave
cmp
jge
out
adc
xor
cmp
add
test
xchg
adc
pop
inc
sbb
inc
dec
lock
pop
arpl
loopne
lcall
int3
lea
mov
xor
mov
loope
mov
inc
push
mov
jb
int
sub
mov
addr16
lret
sub
loopne
nop
sub
inc
mov
add
ficoml
sbb
jbe
mov
dec
sbb
mov
mov
ljmp
mov
sub
xchg
cld
outsb
mov
hlt
cmpsl
sarb
imul
jp
shll
sub
sub
ret
ss
fsubrl
lods
daa
fisubrs
xor
adc
mov
mov
int3
mov
dec
jge
jae
mov
arpl
repnz
lods
mov
sub
jmp
les
leave
ljmp
hlt
push
lret
lods
lods
stc
add
repnz
or
andl
fnsave
cmp
flds
or
dec
pushf
push
mov
int3
cltd
lods
mov
push
das
dec
xchg
ss
adc
jle
out
aaa
pop
adc
sub
push
lahf
loope
adc
and
loopne
mov
or
mov
inc
or
or
cmc
adc
jnp
popf
adc
pop
sub
jno
adc
add
test
faddl
ljmp
jp
push
sbb
push
adc
or
sahf
ffreep
aaa
mov
imul
out
clc
mov
dec
push
jae
and
std
sbb
pop
ret
int3
popa
and
fnstsw
lods
xlat
xor
repz
push
outsb
push
push
and
xchg
imull
or
and
idiv
sbb
jae
fisttpl
sbb
dec
pop
bnd
cwtl
hlt
ror
rcll
imul
sbb
jmp
pop
std
icebp
adc
jnp
iret
lcall
jae
xor
cli
in
and
js
cmp
sbb
add
orl
lds
fnsave
add
xchg
les
and
sub
shrl
jns
in
adc
inc
sbb
mov
popa
les
pop
cmpsb
out
inc
dec
inc
push
in
xchg
pop
stos
dec
lea
jns
test
pop
movsb
mov
out
rcll
xor
outsl
pop
lea
test
push
push
mov
test
add
dec
clc
jne
and
and
mov
lock
cs
cmpsl
xor
negb
in
inc
pop
pop
inc
xchg
and
push
in
cmp
xchg
cmp
imulb
or
and
cmc
or
mov
imul
and
or
jge
loopne
push
shlb
clc
push
jge
in
lahf
mov
jnp
cwtl
inc
icebp
je
roll
mov
mov
add
xor
add
push
pop
imul
cmc
jmp
or
pop
cmpsb
pop
push
pop
push
xchg
or
sti
pop
jp
out
fists
push
icebp
int3
cld
daa
mov
sbb
xor
ret
pop
in
mov
mov
or
in
dec
mov
imul
popf
mov
punpckhbw
pop
ljmp
repnz
push
int3
jl
mov
mov
aas
jb
sub
mov
aas
inc
pop
dec
js
add
data16
jns
stc
sub
dec
jno
dec
mov
mov
push
push
ret
fsubp
adc
cli
push
push
jecxz
and
mov
xor
sbb
test
gs
mov
pop
cs
sbb
das
sub
orb
dec
xchg
sbb
jne
cmp
test
jmp
int3
test
cmc
mov
mov
stos
movsl
or
jb
into
in
sub
adc
call
mov
and
in
jle
jbe
mov
jmp
mov
in
stc
push
sbb
sbb
mov
bound
fadds
pinsrw
in
adc
into
lds
clc
add
outsl
and
repnz
jno
mov
es
pushf
pop
fwait
sbb
cmp
loopne
xor
into
cmp
fsts
cmp
int3
out
addl
add
and
aas
sbb
mov
loopne
out
xor
icebp
mov
dec
push
fwait
or
and
in
test
fs
xchg
ret
dec
mov
and
or
aam
mov
lock
loopne
orb
in
mov
cmp
xor
and
and
sarb
inc
mov
cmp
or
xchg
adc
xchg
aam
push
inc
and
clc
rcrl
cvtps2pd
push
popa
or
js
in
mov
cmp
test
and
xchg
pop
mov
loop
cmp
xlat
aad
xor
jnp
dec
add
and
cmp
nop
lock
in
xchg
push
aas
inc
add
fcmovnu
jmp
xor
std
cmp
add
mov
lret
out
rcll
push
pop
pop
test
cmpsb
jne
pop
cmc
sub
aaa
sub
divl
imul
data16
adc
jo
out
jp
xorb
push
and
in
mov
mov
aad
mov
pop
scas
and
mov
outsb
rorb
inc
push
pusha
popa
mov
push
dec
xchg
push
es
xchg
push
je
jmp
lahf
mov
push
in
mov
mov
xor
push
mov
sahf
mov
enter
std
mov
fmulp
adc
je
xor
jg
cmpb
push
addr16
pop
sub
jae
lods
add
les
sbb
push
mov
dec
js
cwtl
es
int
mov
out
sti
cltd
fists
andb
mov
sbb
cwtl
jb
cmpsb
dec
aad
inc
jo
push
sub
mov
push
sub
fidivrs
push
mov
push
xchg
lret
lret
adc
test
shlb
ret
sub
sub
mov
pop
cltd
stos
push
pop
movsb
mov
xor
dec
push
lret
scas
dec
fidivl
pop
insb
bound
outsb
test
jae
push
sbb
rorl
ja
imul
or
pop
cmpsb
jno
cwtl
jb
test
push
push
ret
lds
leave
xchg
jp
pusha
jno
enter
addl
fsubl
pushf
js
mov
sbb
inc
inc
ret
lods
lahf
xchg
out
jo
call
pop
push
roll
inc
mov
leave
nop
ljmp
fwait
push
add
pop
daa
fidivs
mov
clc
lock
cmp
outsl
out
scas
stos
loopne
test
sbb
adc
popf
sub
adc
test
aas
push
fcompl
push
and
out
push
dec
xchg
imul
mov
popa
push
jl
sub
cmp
or
mov
jo
cmp
push
test
das
push
clc
mov
pop
pop
lcall
mov
rclb
insb
addr16
or
xor
rclb
xor
cmpsl
sbb
sub
adc
mov
lret
mov
inc
mov
ret
notl
repnz
sbb
pop
pop
dec
push
or
es
add
add
out
mov
pop
aas
cmpsb
mov
fwait
popf
std
pop
mov
std
insl
int3
inc
inc
lods
cmp
xor
push
cmp
push
in
cli
adcl
cmpsb
jp
pop
aad
mov
icebp
sbb
inc
call
in
push
lds
lea
flds
push
repz
xchg
mov
pop
mov
daa
hlt
sub
pop
fwait
push
or
negb
xor
call
popa
int
push
inc
xorb
push
popa
addl
mov
push
in
insb
outsb
adc
inc
cmp
fdivr
hlt
popf
pop
gs
mov
inc
fwait
test
lret
rorl
add
and
out
orb
clc
inc
push
rcll
clc
cmp
jae
ja
jecxz
arpl
pop
jno
gs
jbe
mov
adc
nop
pop
cmp
movsl
in
test
cmp
mov
sbb
push
fimull
mov
push
int
xor
outsl
imulb
dec
push
sub
xchg
dec
out
aam
mov
pop
lock
or
imul
mov
jecxz
cwtl
adcl
inc
jnp
std
mov
sbb
or
gs
xor
rol
lahf
out
fnsave
mov
pop
jo
das
pop
mov
sub
mov
and
test
dec
cmpsb
out
sub
enter
dec
jbe
xchg
or
bound
nop
rcr
aas
xor
das
aam
xor
or
sub
in
repnz
mov
inc
clc
mov
jge
leave
cld
or
xlat
lods
cld
add
mov
lods
or
and
mov
mov
push
and
test
jg
mov
sahf
fistpl
cltd
das
push
dec
sub
aas
or
inc
and
hlt
leave
cmc
sbb
or
adc
insl
les
mov
dec
mov
xor
push
dec
rcrb
insl
enter
inc
dec
xchg
pslld
push
divl
movsl
fdivr
xchg
mov
hlt
push
sahf
mov
cmp
push
rorl
sub
and
outsl
lods
mov
or
aam
mov
xor
mov
push
test
jecxz
mov
leave
mov
or
mov
xor
pop
out
xor
lods
bound
mov
pop
dec
stos
inc
loopne
pusha
in
inc
xor
ret
mov
fsts
inc
cmc
dec
pop
lcall
push
aaa
loopne
clc
cmpsb
sbb
dec
and
out
cld
jmp
jge
push
ja
push
jp
mov
aas
push
or
jnp
sbb
rcl
stos
sub
dec
push
adc
cltd
icebp
fisttpll
loop
nop
xchg
icebp
or
in
scas
push
sbb
andb
mov
or
adc
push
daa
lret
lods
or
dec
jb
inc
pop
cmp
leave
mov
jb
rcrb
loope
stos
enter
or
mov
enter
repz
add
insl
mov
jmp
pusha
sbb
push
pop
lcall
pop
in
fcoms
cmpsb
pushf
adc
mov
stos
cli
jge
sbb
or
mov
fbstp
jp
push
sub
ror
dec
xor
jge
dec
in
aam
jg
cmpsb
cmpsl
roll
repz
mov
sbb
jp
sub
call
pop
call
addb
fbstp
pop
loope
mov
fidivs
lret
sbb
in
mov
or
call
jno
mov
push
mov
and
xor
cmp
lret
and
insb
jno
jl
fs
xlat
and
popf
push
lock
scas
xlat
cmp
inc
iret
jmp
lods
add
lret
jb
fldenv
negb
mov
loopne
aam
test
mov
mov
push
test
mov
mov
xchg
xchg
inc
and
popf
jne
data16
add
push
push
mov
adc
mov
arpl
mov
xchg
push
daa
xchg
dec
and
add
and
or
or
lret
push
push
out
mov
pop
add
xor
fcomps
jne
call
adc
add
pusha
push
mov
lahf
pop
push
mov
arpl
mov
cli
insl
pop
inc
xchg
cmpxchg
sti
cmpsl
lds
cmp
mov
out
inc
push
add
sub
mov
xchg
and
pushf
push
sarb
out
inc
cmp
pop
call
lods
push
repnz
scas
mov
ret
out
dec
icebp
lods
loopne
mov
cmpsl
out
data16
inc
push
inc
mov
mov
sbb
push
das
fs
jno
xorl
repnz
in
rcll
out
push
xorb
pop
jb
test
cmp
movl
addr16
sub
push
pop
jmp
mov
push
lahf
std
in
fldenv
cmp
push
sbb
mov
add
hlt
mov
xchg
dec
lahf
xor
inc
mov
pushf
daa
or
test
mov
data16
fsubrl
out
cmp
lods
dec
repz
mov
sub
or
sbb
add
imulb
aad
cli
inc
fwait
popa
fisttpl
fsubrs
pop
test
in
ss
pop
int3
enter
push
mov
repz
addr16
sub
repnz
aam
mov
and
push
and
mov
inc
daa
jne
lods
push
mov
addr16
mov
lods
lahf
adc
and
and
arpl
mov
xchg
jp
jecxz
rcr
aas
adc
dec
xchg
ljmp
mov
ret
jg
xchg
cli
sbb
push
jmp
pop
mov
cmpsb
add
inc
dec
push
les
adc
sti
test
scas
mov
jae
leave
pusha
test
addr16
cmp
add
mov
ss
dec
sbb
jae
pop
mov
lock
xlat
and
push
int
dec
bnd
in
or
dec
sbb
xor
data16
add
or
dec
aas
insb
or
adc
cmp
dec
sbb
adc
sub
daa
inc
imul
mov
xor
adc
arpl
lret
jle
mov
orb
adc
cli
sar
jne
and
xchg
dec
es
inc
mov
or
das
xchg
je
add
or
xchg
popf
bound
lods
fmul
sbbl
test
call
adc
adc
xchg
repnz
icebp
jmp
cmp
push
add
pop
or
mov
adc
cmc
mov
ret
icebp
ss
sbb
inc
outsl
dec
stc
xor
push
cmp
fldcw
xchg
push
rorl
sti
adc
xchg
lret
lahf
sub
xchg
mov
pop
sbb
imul
xchg
dec
push
sub
or
divb
out
imull
out
movsb
fiaddl
insl
lea
mov
jb
cmp
leave
jne
loope
not
pop
in
and
cmp
mov
jecxz
hlt
rcr
stos
sub
inc
pushf
repnz
mov
imull
sbb
jnp
push
leave
inc
hlt
shrl
push
cmp
mov
pop
jecxz
fisubl
xchg
jmp
pop
into
addr16
push
cmc
mov
hlt
adc
xor
jp
pop
cli
fimuls
lods
xor
loope
icebp
mov
mov
sbb
cltd
pop
sahf
ret
icebp
jle
pop
call
cmpsb
daa
scas
xor
icebp
hlt
orl
add
rcr
xor
jecxz
movsl
or
mov
mulb
divl
pop
and
cmp
sbb
arpl
mov
fnsave
xchg
stc
mov
or
or
cwtl
sahf
mov
mov
mov
xchg
mov
int3
push
sub
mov
repz
jne
push
sbb
cmp
shll
fildll
pop
movl
in
outsl
sbb
pop
movnti
repz
xchg
into
dec
std
mov
loope
or
stos
sti
mov
pop
cmp
out
mov
or
sbb
jge
bound
mov
adc
leave
mov
into
je
xchg
push
lds
popf
pop
cmpsb
push
and
cmp
int
lods
imul
insb
or
cmp
push
dec
adc
add
out
movsl
lods
jg
mov
xlat
xchg
mov
fcmove
cwtl
rorb
ret
xchg
jp
adc
mov
jo
out
jns
shll
ds
push
or
in
ds
mov
iret
push
sahf
pop
sub
je
pop
aas
or
jo
push
jb
inc
push
repnz
jle
insb
mov
in
xchg
sbb
fs
jns
adc
push
int3
mov
or
xchg
repz
dec
push
and
pusha
sub
ret
mov
out
and
cmpsl
adc
in
out
lods
inc
test
xor
add
gs
jo
sarl
bound
sbb
sub
jge
jnp
int3
push
shrb
dec
xor
test
sub
pushf
jo
xor
push
xchg
cmp
lret
fstpl
scas
adcl
lods
pop
fcmovb
andl
rorb
lods
mov
cmpsl
fimuls
mov
sbb
loop
lcall
mov
xorl
mov
sbb
popa
into
dec
sbb
cmc
inc
iret
test
js
aaa
adc
pop
pop
cwtl
add
cmpsb
mov
push
bound
rorl
pop
push
mov
mov
loope
test
fisubl
pop
cmpb
cmp
movl
test
jp
xchg
js
fiaddl
adc
inc
lahf
imul
or
cs
sti
sarl
fnstsw
aam
shll
mov
xchg
adc
jecxz
sub
dec
cmp
jle
push
or
data16
mov
cmp
fbld
testl
sbb
gs
add
cmp
fdivrp
stos
call
dec
push
dec
push
stos
ret
add
sbb
mov
insb
imul
adc
lods
xchg
int
rclb
add
cltd
mov
iret
jle
cmp
movsl
push
and
sti
push
mov
out
hlt
pusha
int
cmp
bound
inc
xor
mov
loop
xchg
lock
push
dec
cmp
imul
lahf
push
ffree
jmp
test
push
iret
lds
push
aas
aas
pop
jmp
dec
ret
add
dec
int
in
test
sub
xchg
sub
lds
icebp
sbb
mov
push
rorl
addr16
push
aam
mov
in
sti
jo
fcompl
cmp
mov
xchg
stos
jmp
adc
pop
call
pop
mov
insl
xchg
xor
push
out
jne
lock
jns
sub
sbb
or
pop
jge
dec
push
shll
fisubs
mov
aad
push
pop
sbb
mov
int3
adc
cmp
sbb
rcll
mov
dec
les
roll
lret
js
jno
lcall
jg
xor
mov
jle
or
lahf
subb
xchg
nop
xchg
pop
cmp
fadds
or
push
sbb
lock
jg
pop
mov
lds
rcrb
outsl
inc
mov
sti
int3
push
adc
setno
jmp
xor
ret
nop
gs
std
orl
in
das
fisubrl
cmp
dec
mov
repnz
out
ds
test
add
sub
jno
inc
mov
test
neg
filds
sub
adc
les
or
ljmp
push
add
lret
push
stc
adc
xchg
out
push
mov
sub
loope
jbe
or
pop
std
cmp
jmp
mov
stc
hlt
mov
sbb
inc
mov
inc
ret
imul
loopne
and
xor
shlb
loopne
pop
das
sub
mov
outsl
jp
ret
in
jnp
test
lcall
xor
sbb
sti
xchg
jmp
ss
cmp
repnz
mov
xchg
or
imul
mov
int
cmp
mov
lahf
notl
cmp
rclb
dec
jo
xchg
adc
cmc
jle
stos
movb
repnz
xor
lret
push
mov
xor
jbe
lret
adc
bound
pop
outsl
testl
repnz
lcall
xlat
xchg
stos
cmp
gs
int3
dec
nop
xor
sbb
cld
xchg
lock
addr16
add
fwait
stc
mov
cmp
rcr
add
mov
xor
mov
imul
fwait
clc
inc
cmpsb
cmp
jecxz
pop
scas
lock
and
cmp
dec
sub
movsb
push
add
dec
cmp
movsl
pop
cli
in
fidivl
rorb
dec
sti
xchg
std
hlt
jl
xor
popa
popf
test
test
or
fcomi
mov
ja
jns
pop
stc
jp
xchg
or
inc
outsl
insb
and
into
in
sbb
test
or
js
movsb
loopne
dec
icebp
aad
fwait
push
lret
and
stos
clc
je
imul
rcl
jae
and
je
push
orb
adc
push
cmp
cmp
xor
jbe
pop
or
rorl
mov
dec
fidivs
lds
adc
push
jg
mov
mov
jb
adc
mov
or
xchg
cmp
inc
lgs
mov
xlat
or
subb
insb
sbb
int3
loop
adc
adc
testl
iret
lcall
test
aad
divb
iret
pop
push
sbb
mov
cmpsb
out
lea
inc
aas
test
or
xor
lock
mov
mov
lock
cli
insl
and
insl
lcall
add
leave
ret
imul
nop
adc
inc
sub
lret
popf
jecxz
cmc
add
cli
jns
add
ja
es
fsubrp
xorl
ja
in
clc
jb
add
mov
out
out
xor
aaa
cmp
or
pop
mov
fists
xchg
inc
in
outsb
fucom
mov
cmp
aas
xchg
sbb
push
sub
ljmp
lcall
xlat
push
pop
jge
gs
fbld
scas
movsb
xor
mov
mov
lods
into
push
sbb
push
fwait
aaa
pop
rcll
pushl
pop
out
lods
fidivrl
dec
dec
dec
push
sbb
pop
cmp
and
sub
sub
and
cs
test
mov
repnz
in
add
lahf
mov
mov
cltd
cmp
addb
cmp
and
movsl
insl
mov
mov
mull
nop
loope
fidivs
pop
sbb
test
fdiv
stos
jg
hlt
adc
jb
or
imul
sbb
in
push
dec
and
cmpl
xchg
jl
mov
gs
pop
push
jp
arpl
lcall
dec
int
xchg
add
fisttps
mov
enter
mov
mov
mov
frstor
in
push
mov
addr16
lock
cltd
inc
dec
xchg
imul
ljmp
fstl
push
outsb
push
insb
adc
mov
adc
aaa
movsb
or
dec
mov
ljmp
cltd
jge
cwtl
xor
dec
xchg
adc
fidivrl
gs
pushf
mov
dec
lret
inc
mov
cmp
arpl
rcrl
xchg
jae
sub
scas
add
cmp
pop
stc
inc
ljmp
mov
mov
mov
inc
ret
in
sbb
out
cmp
cmpsl
add
mov
xchg
sbb
fnstcw
adc
fiaddl
or
cmpsb
inc
mov
inc
cmp
shlb
or
inc
inc
push
jns
sub
loopne
call
sub
dec
cmpsl
mov
or
mov
adc
pop
out
popf
addr16
insb
jle
clc
push
clc
cmpsl
sub
lret
ret
loope
addl
iret
add
or
xchg
sahf
loopne
jo
testl
push
mov
adc
ss
cmc
adc
inc
push
or
mov
dec
sti
bnd
pop
out
mov
mov
cld
jge
pop
jecxz
adc
and
sub
pop
loope
add
push
xor
lret
pop
icebp
mov
xchg
leave
cmp
sub
mov
push
int3
push
pop
inc
and
jl
icebp
insb
adc
loop
outsb
fdivrs
sub
std
icebp
jg
sti
push
or
ja
aad
pop
xor
add
cmpsl
fs
cmp
cld
ret
push
push
int3
mov
sbb
clc
jg
sub
adc
stc
add
or
out
push
cmp
js
cmp
pushf
pop
add
loop
xorl
popf
pop
ret
add
mov
push
mov
xor
or
lds
jl
imul
xorb
out
mov
xor
sbb
jmp
jo
adc
cli
push
sub
adc
pusha
cmp
mov
dec
jae
lahf
lea
pop
pop
mov
inc
sub
inc
mov
cld
ds
gs
call
jno
leave
dec
inc
xchg
insb
push
sbb
dec
out
sbb
xchg
push
stc
in
lahf
xlat
dec
mov
cmp
ret
fwait
lea
enter
fistpll
adc
xchg
inc
push
add
fdivs
pop
xor
push
fmuls
cmp
cmp
push
rorb
divl
lods
lds
add
jge
scas
xor
lods
dec
xchg
pop
ucomiss
lahf
fldl
jl
pushf
loope
cmp
bound
cmp
loop
push
sbb
rorb
jne
sbb
movsb
repz
sbb
orb
lret
cwtl
add
xchg
stc
fdivrl
das
mov
movsl
test
and
mov
test
adc
mov
jnp
rclb
push
fidivrs
mov
imulb
sub
loop
xchg
lods
stos
or
jno
push
fsts
data16
cmp
test
sbb
stos
cli
sbb
jecxz
and
adc
xchg
jnp
push
inc
sti
into
adc
add
lea
inc
push
lds
inc
inc
adc
sub
aas
and
adc
add
mov
mov
adc
test
xor
mov
fdivl
adc
jecxz
addl
push
inc
fnstcw
fisubl
pop
jnp
or
sbb
imul
loopne
ficoms
dec
pop
mov
lret
add
sti
push
adc
neg
sbb
fisubl
add
push
out
pop
add
inc
jmp
fistpll
push
outsb
jecxz
and
inc
in
xchg
mov
inc
jg
stc
xorb
call
cmc
ja
cmpsl
jl
inc
jl
dec
fmull
scas
sarb
hlt
xchg
xor
les
in
repnz
cltd
and
add
jb
les
test
or
enter
inc
cmp
leave
xchg
jno
fstl
repz
lock
mov
pushf
dec
add
ljmp
sbb
xor
jae
mov
and
test
aad
or
in
sahf
cmpb
and
cmp
iret
js
jg
clc
cmp
ss
sub
mov
sarb
in
dec
out
adc
mov
xor
add
popf
cmc
int3
mov
dec
mov
adc
fs
jns
fildll
daa
movsb
cwtl
test
movsl
insl
ljmp
scas
mov
cs
mov
cmp
pop
mov
add
push
xor
out
xlat
xor
insb
jae
jg
and
movsb
sbbl
pop
inc
jns
test
push
test
mov
outsl
icebp
div
fnstenv
dec
in
adc
jp
and
incb
leave
iret
xor
mov
aas
and
sub
jge
inc
push
fmull
pop
xor
mov
or
subl
hlt
pop
jg
gs
jg
hlt
in
jecxz
push
push
cld
push
mov
roll
cli
scas
push
adc
imul
jmp
loope
xor
inc
jge
aas
xor
xor
mov
jle
je
and
push
cmpsl
dec
ss
xor
cmp
js
fdivrl
mov
std
outsl
mov
dec
cltd
add
sub
mov
ficoml
add
inc
pusha
enter
pushf
pop
pop
fwait
add
call
out
mov
imul
inc
pusha
das
das
pop
js
pop
pop
out
aaa
in
inc
adcb
scas
dec
push
addr16
in
jecxz
adcb
inc
jns
pop
iret
std
fiaddl
outsb
sbb
cmpsb
call
sub
shr
or
jnp
push
loopne
jge
cltd
shlb
dec
xchg
add
mov
sbb
jb
xchg
nop
movsl
or
testb
xchg
or
push
insb
mov
push
fstl
sbb
test
paddd
mov
popa
popa
pop
pop
mov
out
loopne
or
xlat
movsl
aad
aad
mov
xor
xchg
xchg
cmpsl
fs
imul
sub
sbb
mov
pusha
add
fs
dec
imul
and
sub
mov
or
push
fisttps
mov
mov
mov
addb
pop
ja
sub
lds
add
cwtl
push
adc
jo
loop
jo
inc
or
out
push
fdivrl
adc
or
add
stos
mov
mov
enter
cmp
jns
mov
pop
and
fstps
shrl
inc
loop
mov
jp
jb
dec
sti
xchg
push
dec
push
test
cld
call
sub
or
out
sbb
xor
call
loop
pop
je
into
pop
das
ljmp
push
pop
iret
or
inc
sub
mov
ret
fistpl
into
js
xor
rcll
in
lods
rcll
adc
mov
lea
in
ja
ja
or
test
mov
jno
pop
dec
mov
sub
and
mov
std
nop
fldl
dec
push
push
xor
fiadds
pop
popf
mov
adc
into
mov
stos
sti
call
sbb
dec
inc
mov
fldl
loopne
xchg
push
or
lods
mov
and
ds
mov
mulb
popa
cld
popa
jae
mov
mov
mov
mov
js
xchg
data16
sbb
pushf
fstpt
sub
cmp
push
arpl
scas
in
jb
dec
dec
and
adc
mov
shll
scas
sub
push
pop
pop
mov
loop
sub
iret
push
stos
test
cltd
inc
xchg
adcl
mov
test
std
pop
clc
scas
loope
cmpl
fmuls
insb
cmp
push
orb
jns
inc
lahf
cli
pop
add
pop
xchg
dec
bound
mov
rcll
fimuls
mov
insl
or
jns
push
pusha
sbb
push
out
in
rcrl
sbb
ss
mov
cwtl
sbb
adc
dec
leave
ljmp
dec
xchg
out
icebp
popa
mov
adc
frstor
and
xor
mov
xchg
into
test
add
lahf
stos
push
fwait
lahf
cmp
jmp
jcxz
or
mov
sbb
xlat
pop
pushf
pop
sbb
in
and
js
mov
dec
sbb
push
xlat
fsubrp
mov
mov
stos
and
jne
dec
dec
cs
aas
and
sub
mov
mov
inc
jbe
lret
lcall
icebp
mov
daa
ljmp
aad
sbb
rorl
cmc
pop
mov
leave
or
rorl
or
movsb
fcmovu
test
lods
in
pop
popa
mov
mov
sbb
push
pop
lret
popf
imul
mov
gs
ljmp
call
js
test
mov
repz
shl
in
cmc
and
pop
hlt
addr16
jmp
mov
std
call
xor
orb
into
mov
xor
clc
jno
pop
and
sbb
repnz
test
sti
dec
sbb
lret
movsl
pop
sub
pop
mov
dec
pushl
std
test
add
mov
popf
and
mov
cli
das
adc
and
repz
push
pop
mov
lret
inc
cmpsb
inc
int3
push
pop
push
adc
push
push
mulps
out
mov
mov
inc
ss
and
mov
xchg
dec
xchg
pop
mov
jno
jge
mov
inc
cltd
mov
cmp
mov
pusha
fdiv
xchg
sub
add
mov
lea
xchg
cmp
clc
adc
push
int3
mov
shll
rorl
adc
popa
lods
aas
pop
xor
fs
addl
std
leave
sahf
loopne
stc
std
inc
mov
div
loop
movl
pusha
pop
dec
int
jmp
out
in
nop
add
lret
mov
testl
cld
pop
adc
imul
xchg
lcall
movsb
mov
out
rclb
in
daa
loope
pusha
fstps
jns
and
enter
pop
ds
test
movd
sbb
sti
jecxz
jecxz
dec
mov
dec
aam
lods
jp
repz
sbb
aad
pop
rclb
outsl
pop
test
orb
out
xor
and
rolb
jge
jp
add
push
test
cmp
divb
sub
jg
dec
push
mov
mov
lret
fisttps
dec
stos
xchg
scas
push
cmp
test
push
mov
sti
or
jo
enter
aad
mov
mov
shrl
mov
in
sub
sahf
adc
aad
add
cli
push
and
dec
ss
rorb
jp
leave
or
dec
lahf
sub
fnsave
pop
sbb
mov
dec
jae
and
adc
sub
neg
xchg
pop
fs
push
outsl
jbe
mov
into
xor
sub
popf
sbb
dec
pop
sarb
fsubrp
mov
or
ret
sahf
and
xchg
cmp
out
cwtl
repz
sbbl
call
adcb
fstl
int3
sbb
sbb
dec
mov
inc
out
mov
cmp
xchg
aas
xor
popf
out
fimuls
adc
xor
test
mov
jl
fcompl
bound
mov
dec
dec
ljmp
inc
push
ret
dec
push
mov
pop
cmp
cmp
dec
jb
push
cmp
pop
loop
sbb
repz
movsb
fnstsw
add
jl
lods
mov
dec
cmpsl
cld
push
stos
ret
mov
mov
jl
insl
inc
mov
loope
push
cmp
js
jl
lods
cmc
sbbl
fs
mov
into
fsubs
mov
aam
xchg
rcl
pop
roll
repz
add
lock
mov
out
lods
mov
adc
outsl
scas
jne
and
adcl
jns
stc
test
stos
shrb
shrl
testb
adc
repnz
cmpsl
cmp
pop
js
and
jp
fwait
andb
out
cmp
mov
dec
scas
add
in
push
push
jmp
adc
nop
or
adc
adc
mov
addb
jb
cs
ja
mov
inc
fwait
and
fmull
mov
ret
ss
mov
sti
lret
leave
test
orl
fmul
push
dec
adc
inc
rcll
mov
mov
andl
xchg
pop
stc
in
mov
and
sub
out
cmp
or
xchg
rcrb
jmp
push
dec
adc
fdivl
push
gs
and
mov
cmp
jp
mov
add
mov
push
cli
mov
ja
mov
inc
sahf
cltd
icebp
repnz
mov
subl
jae
and
decl
or
sbb
sbb
jo
inc
movsl
xor
std
sub
or
cli
jge
out
clc
stc
sbb
pop
fnsave
aas
pop
push
cld
adc
test
insl
pop
aas
icebp
adc
out
inc
aad
cltd
mov
mov
add
dec
jmp
push
and
pop
mov
inc
rcll
or
clc
sub
fs
repnz
mov
push
lods
mov
icebp
push
xchg
sub
and
clc
clc
push
sub
popf
mov
mov
mov
sbb
test
jecxz
inc
das
or
shl
inc
jbe
fs
jp
xchg
test
xchg
add
lods
mov
popa
and
mov
cmp
fwait
sbb
cmp
mov
mov
out
pusha
inc
pop
xchg
or
mov
imul
cwtl
sti
inc
sub
xchg
ds
jp
inc
lods
fwait
jmp
add
outsl
xor
jl
sbb
sahf
inc
dec
inc
aas
jp
cli
mov
mov
or
das
inc
dec
pop
ret
loop
adc
mov
std
mov
sbb
cltd
fistpll
js
xchg
faddl
ficompl
jecxz
xchg
bound
scas
bnd
push
imul
fcoml
mul
test
push
xchg
fldenv
xchg
in
xchg
push
xor
daa
sbb
sub
fisttpll
mov
into
fldcw
mov
adc
cmpsb
push
cmp
in
push
aam
shlb
imul
loopne
or
xorl
dec
out
inc
sbb
in
mov
pop
test
scas
jg
aas
dec
hlt
mov
and
mov
and
xchg
push
in
lahf
fs
aad
sub
xchg
insb
sub
lea
mov
cmc
adc
pop
mov
cmp
mov
mov
test
aas
pop
push
aam
or
mov
mov
scas
movsl
loope
jmp
idivb
or
jbe
jg
es
jbe
je
and
cmpsb
rclb
mov
jmp
movsb
std
xor
popa
xchg
sub
xchg
mov
and
test
cmp
xchg
neg
shr
aad
repz
pop
cmp
inc
cmp
out
sub
push
sbb
data16
bswap
lcall
loope
ljmp
push
call
mov
call
cli
adc
cmp
stos
mov
rcl
ret
data16
test
decb
stc
sub
clc
mov
scas
xor
repz
lahf
or
jo
stos
jae
les
les
pop
int3
mov
mov
sbb
sbb
or
mov
inc
push
lcall
lcall
scas
adc
daa
and
decb
sub
sbb
in
sahf
push
xchg
add
xchg
out
sub
stc
sbb
stc
les
repz
dec
imul
daa
push
scas
out
mov
xchg
test
insb
aaa
pop
xchg
push
orb
es
out
popa
clc
jbe
jg
movsl
aad
addr16
sbb
push
mov
imul
adc
xchg
dec
xchg
push
add
push
dec
mov
in
adc
out
arpl
jl
aaa
dec
mov
mov
bound
or
fcmove
xor
cld
pop
lds
jae
lret
dec
loopne
push
lods
jns
filds
scas
xchg
add
int3
add
or
pop
rcll
jb
fstl
test
sbb
in
mov
sbb
jle
and
std
sti
xor
stos
push
imul
in
cmpsl
adc
sub
repnz
rcrb
mov
mov
cld
repz
push
pop
jb
mov
fisubs
testl
adc
jns
push
sub
mov
push
leave
dec
mov
rol
and
les
lods
cmp
cmp
scas
xor
dec
pop
jg
sub
and
jnp
popa
clc
xchg
enter
js
adc
push
push
out
fdivs
cwtl
mov
adc
sahf
add
or
add
xchg
pushf
xchg
cmp
outsl
or
sub
xor
setns
jg
popf
cmp
sub
lcall
rclb
dec
cmp
dec
xchg
push
xor
pusha
adc
ds
hlt
mov
daa
pop
enter
jb
mov
xor
outsb
in
inc
push
lock
stos
jecxz
fsubl
sbb
lea
leave
push
pop
paddsb
push
call
repz
xor
add
data16
sarl
jge
dec
test
cld
ret
pop
ret
iret
pop
fwait
dec
xlat
mov
es
mov
das
enter
cmc
inc
sub
ret
ret
dec
std
ret
js
push
mov
insl
mov
int3
imul
enter
out
stc
clc
inc
inc
mov
test
js
addr16
jnp
aad
stc
adc
xchg
fistpl
xchg
stos
pushf
fwait
adcb
bound
fiaddl
mov
and
cmp
mov
cmp
lds
cmpsl
cltd
mov
jmp
sub
inc
mov
lods
aam
push
test
andb
sahf
push
dec
packuswb
add
add
push
push
mov
outsl
inc
push
aas
adc
ss
jbe
cmp
rcl
add
cmpsb
push
xchg
add
xchg
pop
sub
cmpsl
inc
cli
push
jmp
pushf
mov
daa
lock
mov
lcall
test
or
pop
fidivrs
add
push
xchg
inc
jmp
test
lods
pop
test
mov
aas
xor
sbb
stos
stos
cmp
mov
inc
repnz
push
in
pop
pop
xor
add
push
inc
mov
ret
sub
cmp
rcrb
mov
cltd
es
jne
pop
jnp
sub
imul
fnsetpm(287
loope
lods
fcompl
repz
insl
loopne
jb
pop
rcrl
xchg
xor
jno
lods
call
mov
popl
push
and
test
adc
push
or
fstpt
mov
or
mov
push
fs
aaa
out
mov
cld
mov
pop
dec
inc
shl
adc
aaa
jae
push
xchg
cltd
or
inc
aam
pop
out
insl
or
xor
frstor
add
jne
stos
pop
adc
js
test
cmpsb
loope
mov
leave
mov
repz
ret
dec
mov
xor
adc
sub
push
lcall
adc
cmp
das
mov
lea
pushf
popa
sti
sub
fidivs
and
xchg
fs
ret
int
insl
mov
scas
push
push
cmp
das
and
das
popa
cmc
popf
pop
cmp
fists
testb
add
cmp
int
mov
lret
inc
insb
cmp
cmp
rolb
outsl
popf
sbb
cmpsb
pop
std
sbb
xorb
mov
cli
int
adc
incl
or
lods
cmpsl
int3
stos
int
xlat
xchg
ror
mov
mov
jle
mov
imul
popl
imul
cmpsb
xchg
movsl
stos
inc
jmp
lea
mov
mov
xchg
icebp
jae
jo
xchg
aaa
in
cld
or
sbb
sti
jp
test
sub
cmp
sbb
cmp
push
mov
pop
out
sti
mov
pop
enter
je
ss
sub
rol
out
pop
jge
jp
sub
cmp
xor
data16
xor
sbb
lods
sbb
lret
imul
sbb
call
sub
cmpl
bound
inc
inc
pushf
mov
fisttpll
jmp
mov
and
xchg
mov
mov
mov
add
sarb
pop
and
and
incb
cli
cmpsl
movsl
xchg
dec
add
scas
fidivrl
mov
or
jl
push
cmp
cmp
mov
mov
inc
loopne
sub
and
lds
in
or
mov
mov
hlt
push
mov
test
cmpsl
aaa
mov
mov
aam
xchg
push
lcall
jl
test
shll
es
dec
cmpsl
aaa
mov
mov
xorb
xor
adcb
lock
lock
fwait
ss
in
pop
clc
mov
xor
cmp
xor
mov
inc
sub
xor
xlat
mov
fidivrl
inc
add
int3
xor
ficompl
push
popf
add
push
gs
adc
mov
add
push
pop
xchg
int3
add
ffreep
loop
rcrb
xchg
je
jns
push
push
fistps
mov
cmpsl
dec
sub
fisubrs
lock
adc
push
and
sbb
jmp
pop
and
test
and
mov
push
sub
leave
popl
push
cmp
cld
cmp
jle
aam
pop
mov
pop
xchg
and
xchg
cmp
movsb
in
ret
insl
data16
mov
mov
je
notb
call
out
aam
sub
aam
cmp
data16
test
adc
pop
mov
or
pop
int3
into
fistpl
sbb
and
in
hlt
movb
fwait
jno
enterw
dec
mul
pushf
pusha
enter
sub
inc
dec
frstor
xor
cmc
mov
adc
add
addr16
outsb
sub
sub
repnz
sbb
clc
test
jbe
repnz
movsl
lahf
pop
je
dec
jge
int
dec
dec
pop
nop
ud2
dec
cmpsb
idivl
push
sbb
lret
sub
stos
lods
test
pop
jns
movsb
mov
idivb
sbb
and
sbb
out
mov
or
loop
mov
mov
jno
mov
cmp
xchg
mov
hlt
add
aad
xchg
sbb
scas
mov
cmp
mov
inc
scas
jbe
add
adc
lahf
inc
and
push
sbb
and
sub
bound
lds
imulb
sbb
js
test
pop
fidivrs
push
or
outsl
pusha
push
stos
int
add
cmpsb
and
lods
and
ret
cmp
mov
repnz
xor
xor
cli
pop
lock
pusha
xchg
and
icebp
ss
jnp
dec
cmp
out
arpl
fadd
lcall
adc
scas
int
vmovaps
inc
int
xor
cs
dec
mov
pop
fistpl
jnp
cmpsl
test
pop
jg
orb
aaa
sbb
imul
aas
hlt
cmp
addr16
and
jl
push
xor
loop
stc
xchg
add
mov
les
sub
add
leave
mov
sbb
pop
mov
pop
je
inc
adc
mov
int3
pop
mov
and
and
sbb
mov
inc
lcall
inc
mov
push
in
mov
ljmp
pop
push
sbb
and
and
sbb
mov
push
jecxz
jl
mov
xor
jecxz
mov
jle
or
push
mov
and
lock
xchg
push
shlb
dec
aas
les
outsl
fcmovnu
out
add
pop
and
inc
lock
adc
in
daa
jns
dec
inc
push
lret
and
in
hlt
loopne
inc
ficompl
inc
f2xm1
movsl
dec
cmp
lcall
out
std
popa
adc
adc
fstl
loopne
fcoml
in
jb
adc
nop
adc
dec
iret
mov
mov
aad
xor
sbb
into
xchg
and
jle
sub
mov
fwait
xchg
hlt
push
jne
cli
mov
sbb
jne
in
mov
rcll
or
movsb
subl
pop
icebp
jbe
pop
mov
dec
int3
pop
mov
mov
roll
adc
or
stos
fistl
jnp
pop
test
push
dec
jge
cmp
or
mov
nop
mov
add
push
sahf
xor
add
mov
loope
xchg
jo
or
cli
jo
je
or
cwtl
jmp
pop
add
cld
scas
arpl
inc
xlat
jl
test
pop
vmread
inc
sbb
scas
fisubs
cmpsl
sub
ret
push
pushf
das
pop
mov
cmpsb
mov
sub
in
or
pop
jle
outsb
xchg
popl
mov
sbb
in
push
xchg
stos
loopne
mov
ret
jno
fs
ljmp
xorl
aaa
lret
mov
jle
add
pushf
loope
adc
cmp
aam
push
out
mov
hlt
iret
mov
repz
sbb
das
int3
mov
xchg
rcrb
pusha
fwait
scas
jo
xchg
sbb
sub
adc
dec
jecxz
fsubr
cmp
int
std
sub
insl
shll
ret
setb
dec
xchg
or
push
xlat
sti
cmpsb
inc
mulb
mov
stos
int
fsubr
int
pushf
jmp
xchg
ljmp
pusha
or
dec
jno
adc
orb
ja
sarl
mov
adc
out
add
mov
int
movsl
cmpsl
jl
sub
int
push
outsb
push
xchg
lahf
mov
pop
fists
or
and
imul
or
out
mov
mov
mov
adc
inc
filds
cmc
sub
in
sbb
jb
mov
sub
lahf
and
out
mov
cmc
dec
mov
scas
shr
mov
adc
mov
dec
ja
movsb
scas
arpl
push
add
lcall
add
dec
mov
call
sbb
pop
lods
pop
leave
jp
clc
or
shrb
adc
addb
or
insl
mov
loop
mov
sti
jbe
or
adc
cmpsl
xor
test
mov
fldcw
xchg
mulb
mov
jp
push
addr16
scas
loope
xchg
lea
mov
sub
mov
push
push
mov
pop
mov
lcall
aad
adc
pop
dec
insb
push
inc
cld
scas
lahf
sub
call
mov
ror
shll
lret
test
stos
mov
mov
ret
outsb
out
clc
mul
lcall
jne
fmulp
je
mov
or
jbe
cmp
adc
mov
aas
jno
adc
ret
int3
or
jb
jns
sub
addr16
rcrl
jae
test
lahf
dec
pop
mov
gs
repnz
cmp
mov
dec
in
iret
push
pop
cli
addr16
ds
xchg
mov
subl
sub
sbbb
scas
push
cld
add
mov
xchg
mov
shrl
sbb
or
stc
push
mov
lret
pop
xor
mov
jno
mov
js,pt
mov
stc
shrl
andl
adc
inc
xor
ret
push
popf
dec
adc
fisttpl
adc
push
jl
pusha
fdivl
or
in
mov
cmp
xor
mov
les
push
cld
xor
xchg
fcomps
ret
add
jo
and
in
xchg
sbb
out
ljmp
je
or
aaa
dec
mov
pop
notl
add
push
aas
loopne
mov
adc
add
pushf
pop
xor
call
jnp
sbb
stos
xor
push
aam
fstps
mov
or
dec
rolb
pop
in
jae
stos
enter
sub
insb
cmp
clc
int
pop
inc
ljmp
jnp
pop
push
hlt
ljmp
xor
in
into
outsl
cmp
movsb
sti
sbb
repz
sub
adc
xlat
inc
decb
jl
pop
rcrl
filds
add
mov
xchg
xlat
mov
aaa
mov
jmp
mov
push
dec
adc
push
xchg
sub
jmp
mov
jp
addb
sub
adc
mov
jbe
or
pop
call
add
test
repnz
mov
pop
mov
mov
test
mov
lcall
lods
cltd
jmp
scas
ljmp
inc
gs
mov
ljmp
push
dec
push
jbe
or
sbb
in
xchg
fcmovb
dec
pop
jle
out
inc
xor
insb
jl
sub
jne
mov
xchg
lods
or
jo
aas
pop
inc
ss
fcomps
popf
sbb
outsl
dec
cmp
roll
jecxz
cmp
sbb
repnz
jl
or
cs
add
popf
pop
movl
inc
push
push
aas
cmpsb
sub
push
loop
xlat
lods
rcrb
je
add
mov
mov
xchg
test
xor
xor
lahf
cmp
test
jae
js
lods
xor
movsl
loope
cld
movsb
repnz
hlt
or
imul
rcll
arpl
mov
jo
sti
in
mov
add
lret
and
les
sti
mov
xor
ja
ds
imul
fdivp
imul
pop
mov
stc
push
movsb
out
mov
sarb
movsb
add
jbe
cld
jnp
stos
fmul
add
jns
les
insl
fucomip
xor
mov
push
jecxz
loopne
xor
gs
inc
es
cli
in
jmp
lahf
decl
fildll
pop
mov
loop
add
pop
out
lds
mov
lea
rcrl
xor
loope
inc
xchg
inc
mov
xorl
add
arpl
lret
dec
sbb
mov
loop
scas
test
sub
and
and
ret
add
push
pop
stos
repz
inc
xchg
or
ds
inc
jle
js
or
xchg
mov
fsubr
pusha
js
gs
sbb
insl
clc
adc
clc
daa
inc
faddl
ja
repnz
les
jbe
and
pop
adc
and
enter
notb
lods
mov
push
jns
leave
and
xor
pusha
cmp
loope
das
add
inc
aad
js
xchg
sarb
popa
lret
loopne
add
inc
stc
dec
ret
cwtl
mov
mov
mov
xchg
fs
cltd
mov
add
xchg
add
xchg
in
xlat
sub
gs
int
add
adc
mov
lcall
mov
jl
pop
arpl
movsl
cmc
cmp
lret
pusha
sbbb
rdtsc
mov
xchg
cld
lcall
push
inc
dec
mov
aas
sub
fmul
jne
std
dec
pop
sbb
pop
mov
add
mov
out
mov
jmp
dec
mov
mov
or
mov
rorl
icebp
lods
inc
dec
mov
into
into
std
cltd
mov
cs
mov
lret
add
lret
movsl
jae
outsb
sahf
rcr
sbbl
pop
push
jle
sbb
push
inc
mov
mov
xchg
gs
adc
mov
or
push
jle
adc
out
sahf
dec
subl
mov
sub
jo
inc
imul
xlat
test
add
xor
inc
aas
call
adc
lret
mov
xchg
xor
jo
stc
dec
fs
in
mov
enter
mov
fisttpl
hlt
xlat
les
repnz
mov
daa
hlt
cmp
fwait
cmc
xor
rcl
adcl
jb
test
repnz
cs
add
ljmp
or
bound
sbb
add
inc
push
in
mov
lods
mov
add
int
in
shlb
mov
loope
xor
out
push
xchg
xor
dec
flds
xchg
fdiv
adc
or
push
push
out
xchg
xorl
cli
or
mov
adc
mov
mov
cmpsl
jns
fs
icebp
stos
lret
or
and
popf
push
aad
jg
clc
gs
cli
dec
scas
sti
fcoms
ss
cmc
mov
fcoms
xchg
clc
mov
iret
push
push
movsb
jne
add
out
mov
xchg
or
rorb
fildll
bound
lret
repz
adc
pop
and
sub
add
sbb
fadds
mov
jb
out
int
adc
adc
les
and
bound
popf
faddl
fisubl
sub
mov
in
push
and
fmuls
xchg
sti
sub
in
jle
inc
iret
pop
bnd
ret
push
lret
icebp
jl
shrb
xchg
into
xchg
and
movsl
lret
add
aas
jb
movsb
sbb
lea
ja
adc
jg
xor
adc
push
fisubl
mov
xchg
dec
cli
cmpb
pusha
scas
rclb
std
shrb
out
ss
lret
insl
int
int3
jbe
mov
sbb
pop
xchg
inc
sti
popa
pop
adc
stc
dec
rorb
xor
loope
xchg
test
mov
in
pop
fistpl
addr16
mov
inc
call
adc
mov
int
nop
xor
mov
ret
sbb
in
push
adc
ja
fcmovu
loop
dec
xor
push
testl
sbb
jbe
loopne
cmp
test
das
dec
sub
call
cmp
cmp
mov
dec
jecxz
dec
fcmovbe
xor
mov
xlat
dec
aaa
adc
push
jg
inc
addr16
sahf
mov
loope
notb
adc
rclb
out
dec
fwait
das
fsub
aam
clc
pop
out
pop
frstor
mov
mov
shlb
imul
xchg
pushw
scas
jp
adc
mov
shl
vpmullw
bound
dec
into
int
int3
adc
sbb
mov
movsl
pusha
dec
fwait
xor
jne
sti
aad
fisubs
icebp
dec
xlat
inc
xor
mov
inc
fdivp
orb
fwait
cmp
sbb
lods
pop
push
push
sahf
cmp
movsl
lds
sbb
iret
xchg
sub
jb
xlat
int
and
sahf
es
xchg
mov
jecxz
push
pop
call
outsl
cmc
or
xchg
pop
stos
xchg
pushl
xchg
mov
xchg
and
lret
fs
sbb
xor
mov
xchg
ds
jnp
aad
unpckhps
adcb
xor
cmp
mov
mov
mov
cmpl
jae
mov
sahf
loope
mov
dec
in
ljmp
mov
sub
push
cmc
push
mov
repnz
inc
xchg
push
jae
loop
repz
loopne
rorb
fistpl
movsl
repnz
sbb
outsb
sub
nop
xor
ret
adc
fisubs
mov
push
loopne
in
in
adc
icebp
pop
cmp
icebp
pop
std
mov
out
pop
push
mov
push
int
out
addr16
mov
pushf
mov
aas
xor
inc
dec
mov
outsb
push
mov
mov
xchg
dec
jg
jmp
push
xchg
xlat
outsl
jae
sbb
mov
divl
popf
lret
repnz
adc
out
call
add
lcall
cmp
aas
mov
push
popf
pop
hlt
xchg
mov
je
popf
in
lcall
jnp
lods
subl
dec
push
jne
jne
mov
scas
xchg
xchg
and
outsb
lods
fisttps
push
xchg
cmc
cmp
add
fwait
dec
repz
and
push
gs
mov
mov
push
jmp
out
sub
mov
rorb
push
jl
je
sarb
add
es
int
stc
addr16
xor
lea
xchg
pop
or
int3
adc
adc
mov
in
call
dec
pop
movsb
mov
jne
add
pop
outsb
std
stos
cmp
jge
sbb
mov
xchg
lret
adc
cmp
adc
lds
popf
xor
jbe
fists
and
out
hlt
sbb
cmc
ret
sbb
inc
xchg
ss
in
add
xor
dec
faddl
outsb
ja
mov
call
cltd
cmp
movsl
out
aaa
xor
std
add
in
dec
fsubp
clc
push
jg
in
into
loope
lock
push
mov
sbb
dec
pop
mov
push
adc
mull
sar
dec
inc
je
xchg
cmp
mov
jge
fsubrp
cmp
jno
jnp
fidivrs
xor
in
adc
stc
iret
pushw
iret
ljmp
add
in
bound
jb
xchg
pop
insl
mov
repz
xchg
or
inc
lock
lret
movsb
es
scas
jnp
add
cld
fldcw
and
out
or
lcall
sbb
mov
cwtl
in
mov
sub
fnop
sbb
sbb
sub
or
or
test
scas
and
jmp
in
lcall
pop
int
enter
sub
dec
std
popf
rcll
dec
pushf
cmc
dec
test
xchg
xchg
dec
sarl
mov
dec
add
jne
sbb
data16
fcomip
popa
fistpl
sbbl
testl
and
and
stos
dec
sub
flds
int
add
jge
pop
sub
lods
stc
dec
daa
push
scas
bnd
daa
inc
lock
sbb
imul
dec
adc
or
add
int
xchg
push
arpl
xchg
mov
aaa
call
xor
mov
hlt
mov
mov
arpl
or
stos
repz
rcll
nop
sahf
out
mov
jcxz
out
ss
inc
shlb
xor
imul
adc
notl
fsubl
stc
test
scas
aaa
es
jbe
notl
mov
adc
es
jns
out
add
fiadds
negb
lcall
or
sbb
mov
movsbl
and
xor
add
lea
aaa
movd
dec
mov
jnp
mov
in
loope
fisttps
and
aaa
mov
das
mov
fcmovu
add
ret
jnp
pop
fwait
cwtl
aam
mov
mov
push
fidivrs
pop
out
fdivrs
cmp
fcomp
movsb
imul
fs
mov
bndldx
xor
pop
es
fsubr
xlat
jl
ja
out
mov
lahf
popf
imulb
mov
jle
push
fidivs
xor
std
or
enter
jecxz
inc
mov
cmpsl
jb
fnstsw
adc
sub
repz
jbe
adc
adc
sahf
divb
push
pop
cmp
jb
xchg
sahf
adc
lods
les
xor
loop
sti
and
imul
out
xchg
jne
add
xor
cmpsl
mov
jmp
mov
jmp
mov
pop
lret
cld
lock
ret
xchg
shll
mov
fs
jl
int
lods
and
push
dec
js
ret
push
adc
fisttps
mov
das
fucom
mov
sbb
icebp
jge
mov
rorl
cltd
cs
outsb
jp
push
push
arpl
mov
mov
mov
xchg
adc
xchg
out
dec
cmpsb
xchg
repnz
xchg
fs
in
cmp
inc
xchg
fisubrs
fiaddl
pop
mov
dec
std
sarl
add
xlat
mov
push
in
push
xor
cltd
ficoms
repz
lock
shll
movb
icebp
jo
stos
mov
std
out
add
sbb
lret
jns
in
dec
mov
mov
mov
cmp
js
arpl
iret
sub
mov
cmp
into
mov
out
and
mov
xchg
push
add
dec
aam
fst
cmpsb
inc
idivb
mov
test
fbstp
out
outsb
jo
and
mov
shl
pop
cmpsb
jb
scas
mov
cmp
pop
fildll
mov
jp
add
lret
cs
sbb
outsl
jl
aam
mov
add
sbb
jmp
les
mov
xor
jno
fwait
push
cmp
iret
out
mov
fwait
out
push
stc
jl
xchg
enter
inc
jbe
ret
ret
dec
out
xor
xchg
scas
cmc
fcomp
add
ficoml
sub
mov
shlb
adc
jp
pusha
fistl
bound
and
jae
jl
jge
movsl
movsb
lret
in
shll
outsb
xchg
je
leave
inc
pop
mov
mov
add
mov
mov
movsb
scas
sarl
mov
sub
ret
jo
call
dec
dec
shll
fs
cwtl
roll
lcall
fs
sbb
xchg
mov
push
roll
popa
cmpsb
xorl
add
jecxz
mov
sbb
loopne,pn
xchg
xchg
scas
aam
fcompl
leave
and
pop
mov
pop
es
or
pop
xor
dec
push
mov
pop
xorb
jae
sbb
cmpsb
xchg
sbb
adc
push
or
xor
jle
cmc
add
or
sub
xchg
mov
negl
les
xor
xchg
iret
sar
pop
sub
shlb
icebp
pop
es
push
fwait
add
out
jge
aad
movsb
movsb
xchg
xchg
ret
mov
js
lea
sbb
inc
js
repnz
lea
and
aas
mov
and
dec
js
jns
movsb
mov
ret
jge
dec
orl
fists
adc
fdivrs
mov
mov
loopne
sbb
les
mov
dec
nop
icebp
shlb
hlt
shrl
or
es
lods
int3
mov
lret
rol
and
cs
repz
and
test
mulb
test
out
adc
inc
jge
mov
mov
bswap
inc
stos
mov
sub
js
stos
jbe
mov
add
sub
push
aas
les
sbb
lock
js
vpsllq
dec
cwtl
sub
cs
rorl
test
mov
mov
mov
mov
lcall
shrl
sub
je
sub
cwtl
mov
mov
inc
pop
adc
sub
inc
and
mov
mov
mov
jl
cmp
into
mov
rcl
adc
lea
xor
imul
pop
lcall
pushl
out
addr16
xor
fdivr
imul
jb,pn
test
and
add
int
out
xchg
jmp
push
arpl
lret
inc
cmp
fmulp
jae
data16
repz
jecxz
pop
sahf
dec
cmc
adc
jb
jecxz
jmp
lds
jg
mov
cld
mov
jle
push
out
adc
pop
jge
cmpsb
cmp
or
mov
mov
pop
mov
xchg
and
clc
ret
sbb
jne
push
or
pop
mov
popf
rol
fstps
fsubrp
mov
jnp
push
sti
add
lahf
jp
dec
mov
sub
mov
enter
xor
push
daa
je
sbbl
outsb
and
pop
add
xor
pop
jbe
mov
leave
sub
mov
pop
inc
into
sbb
mov
popf
sarb
ret
idivl
ficoml
pop
push
inc
lods
pop
test
adc
inc
or
inc
clc
pop
imul
scas
or
xor
std
mov
dec
pop
sub
daa
xchg
pop
js
test
mov
mov
fimuls
mov
fldcw
jns
mov
mov
pop
in
cmpsl
rcl
sub
xor
mov
mov
cmc
outsl
rcr
inc
adc
mov
push
icebp
data16
mov
sub
adc
movsl
cmp
xchg
add
ret
mov
mov
push
call
out
das
mov
xchg
sbb
repz
push
out
mov
jp
mov
jnp
pop
xor
leave
xchg
loope
stos
out
or
cmpsl
cmp
push
jmp
xchg
and
mov
pop
iret
leave
mov
aad
push
jnp
xchg
in
ja
sbb
stos
xchg
pop
lahf
fwait
sub
cmp
pushf
dec
xlat
push
test
shrl
adc
mov
in
cmp
in
lock
xor
mov
jle
inc
xlat
jle
jb
xor
cmpsb
mov
out
push
cmpsb
inc
jl
insb
lods
mov
inc
mov
push
pop
aaa
lret
mov
sub
mov
sti
aad
xor
cmp
jbe
add
adc
int3
cmc
rol
mov
sahf
out
or
cli
stos
fistpl
jge
mov
icebp
popw
mov
shlb
sbb
mov
add
mov
lcall
sbb
and
and
add
inc
or
xor
xchg
push
adc
insl
mov
rorl
rcll
call
mov
pop
add
push
push
sub
aas
les
push
mov
fcompl
and
rorl
seto
pop
mov
stos
stos
fbld
lret
push
aaa
pop
lock
mov
dec
xchg
add
js
movsl
xor
sbb
jp
fwait
adc
arpl
dec
mov
cmp
fwait
test
add
std
data16
inc
ret
sbb
adcl
jno
cmc
in
iret
lret
subps
js
nop
mov
mov
mov
lods
inc
inc
pop
pop
jae
stos
testb
shrl
ds
inc
pop
pusha
stos
cmpsb
inc
push
xor
jl
fsubs
xchg
xor
movsl
pop
cmp
jp
add
fbstp
xchg
add
daa
add
pop
gs
xchg
push
mov
push
mov
xchg
dec
fdivr
cld
lret
orb
ljmp
mov
data16
xlat
and
jbe
das
cmp
add
outsl
xor
shl
cmp
rol
jmp
mov
add
gs
cmpsl
sbb
and
shr
inc
imul
jmp
jbe
repz
xchg
ss
imul
fucom
ficomps
xchg
inc
cmpsl
daa
add
or
lds
sub
scas
inc
xor
sahf
sbb
sbb
sub
sub
clc
ja
cmp
and
cld
dec
and
out
cld
aas
jbe
add
mov
or
xchg
mov
jg
inc
jge
aad
dec
push
in
scas
dec
pop
inc
xchg
xor
sti
jbe
js
icebp
ljmp
outsb
test
adc
mov
jg
mov
fmuls
leave
mov
dec
repz
sbb
dec
call
iret
in
mov
pop
adc
nop
imul
add
repnz
rep
push
xor
sbb
and
cld
adc
popf
icebp
mov
add
xor
mov
pop
and
and
imul
add
xchg
sbb
movsl
xor
jecxz
mov
dec
add
push
add
fwait
loop
int
sub
dec
dec
mov
in
aam
cmpl
and
cld
pop
sbbl
loop
push
dec
out
jo
jbe
inc
pusha
inc
mov
push
cli
je
fwait
pop
dec
push
sbb
out
pop
adc
mov
add
mov
ret
mov
aam
push
and
pusha
cmpsl
xchg
scas
test
mov
test
in
push
fcomps
ret
ja
pop
enter
push
into
jbe
popa
enter
push
sub
inc
push
outsl
push
test
cmc
mov
xchg
inc
es
nop
rclb
fs
aam
mov
sub
sbbb
add
or
stos
dec
jbe
add
out
push
pop
push
sti
stos
add
je
dec
cmp
cmp
pushf
or
adc
cwtl
rorl
fidivrs
add
mov
lock
pop
dec
jbe
lea
cmc
pop
int3
faddl
das
jge
cmp
lahf
stos
xchg
nop
pop
daa
xor
dec
ficoms
into
jg
clc
shll
push
pop
sub
insl
or
mov
pop
test
pop
scas
icebp
mov
xlat
and
int
xchg
mov
ds
inc
xchg
jmp
aam
inc
pop
push
xchg
jbe
adc
addl
scas
out
mov
cltd
fdiv
sub
mov
sbb
popf
push
xor
sti
adc
cmp
dec
and
pop
push
incb
lods
call
mov
in
fnsave
rcr
fs
pop
adc
addr16
jecxz
scas
pcmpeqb
pop
sbb
mov
mov
add
pop
mov
mov
mov
push
incl
xor
pop
bnd
mov
out
jge
cmp
cmp
sti
test
or
adc
xor
xchg
shll
jo
mov
mov
xor
pop
out
in
cmp
decb
xchg
gs
pushf
add
push
mov
test
stc
jle
es
xchg
xor
sub
loope
rcll
mov
push
push
sahf
push
cmc
push
add
add
jno
ret
mov
out
call
outsl
or
lock
lret
stos
daa
cmp
out
clc
mov
pop
pop
adc
mov
insl
loope
mov
inc
mov
add
shrl
mov
or
int3
jge
scas
les
shll
rcr
test
sub
cmpsl
xor
inc
stos
stos
cmpsb
daa
pop
imul
lods
sbb
dec
arpl
loopne
push
ret
sub
pusha
dec
arpl
mov
or
add
adcb
adc
ret
xchg
push
pop
jmp
jg
popa
jb
inc
mov
pop
jecxz
aas
mov
mov
dec
mov
sahf
enter
cwtl
adc
insl
mov
scas
and
lds
add
inc
cwtl
imul
outsb
mov
popa
cwtl
lods
icebp
adcl
add
cmpsb
push
mov
std
sbb
ss
fildll
lahf
test
pop
xor
jmp
test
mov
hlt
movl
dec
pushf
xor
stos
pop
mov
and
or
lds
cwtl
lds
test
iret
imul
mov
inc
jecxz
or
xchg
mov
sub
push
hlt
leave
mov
adc
call
mov
fwait
and
mov
xor
nop
jno
mov
add
jl
xor
cli
add
or
add
mov
sub
stc
mov
xchg
jecxz
mov
inc
and
jb
xlat
dec
pop
call
cmc
sbbl
mov
pop
fidivs
jo
pop
lahf
sbb
test
add
sub
stos
push
pop
mov
adc
fisttpll
out
xor
adc
sub
xor
jmp
cli
stos
mov
hlt
out
and
daa
sbb
xor
bound
js
push
fldt
lcall
pop
add
mov
xchg
ret
dec
sbb
lcall
inc
test
lods
aas
lcall
add
mov
and
cli
jl
cmc
fdivrs
lcall
xor
ret
mov
popf
pop
jge
mov
dec
daa
mov
stc
test
bound
push
arpl
lret
sbb
f2xm1
push
mov
mov
pop
mov
testl
mov
push
out
pop
add
sti
and
mov
cmc
jl
arpl
cmp
push
push
sbb
jae
mov
xchg
sbb
mov
push
sub
jl
dec
push
xor
cmpsl
fistps
stos
lret
flds
lods
and
fldcw
mov
sbb
adc
ret
xor
test
rcll
arpl
push
pushf
xor
jl
add
xor
pushf
mov
adc
rcl
mov
cli
sub
adc
xchg
sahf
pop
daa
or
push
and
cli
add
mov
insb
test
es
pop
jl
addb
jbe
dec
xchg
mov
xor
cmpsl
mov
inc
repnz
pop
jbe
out
sahf
sahf
adc
popf
inc
pop
cwtl
and
lea
adc
xchg
push
ret
hlt
mov
pusha
cmp
lahf
aam
push
movd
test
gs
push
xchg
arpl
inc
dec
lods
cltd
gs
or
xor
sub
roll
movsb
adc
or
arpl
mov
sbb
jmp
fsubs
jne
aad
loop
sbb
lret
cmp
daa
pop
pop
mov
sarb
test
shrl
pop
dec
pop
push
popa
push
mov
sbb
mov
rclb
fwait
cmp
sarb
or
sbb
out
in
sub
loope
fiaddl
shll
xor
mov
test
cmpsl
shll
hlt
imul
loopne
inc
das
xchg
loope
jge
sarl
test
pop
jne
fs
cmp
sbb
in
xchg
in
or
into
mov
outsl
xchg
xor
jecxz
mov
xor
pop
rorl
adcb
jnp
add
addl
mov
mov
leave
imul
add
movsl
rolb
ss
stos
rcrl
pop
cld
test
data16
filds
enter
je
js
lea
popa
mov
xchg
and
dec
jmp
mov
inc
push
out
pop
fwait
movsl
pop
mov
in
mov
bnd
mov
dec
icebp
jmp
jecxz
dec
repz
movsl
pop
lods
jmp
jns
inc
lods
enter
divl
push
loopne
xlat
iret
in
mov
cltd
mov
mov
fwait
clc
xor
lods
stos
inc
imul
int3
push
popf
jg
sub
add
dec
or
mov
pop
jbe
test
adc
or
jge
rclb
inc
mov
lcall
mov
negl
sub
idiv
bound
dec
lods
aas
fstl
cmpsb
pop
jae
sbb
pop
jmp
xchg
stos
push
ss
outsl
or
test
aaa
and
inc
ret
xchg
lret
sar
out
mov
scas
dec
or
sbb
mov
push
fstpl
xorb
sub
mov
add
popf
add
stc
xor
call
and
cld
loope
cltd
dec
jnp
shll
rolb
push
out
test
call
cmp
ljmp
pop
inc
scas
popw
push
into
jbe
mov
fmul
sbb
cmp
xor
pop
cmpsl
in
mov
movsl
subl
test
xor
push
shrb
pop
cmp
xchg
mov
xor
jecxz
cwtl
call
xchg
fnsave
xchg
imul
adc
xchg
xorb
sti
repnz
js
adc
pop
or
inc
outsl
or
imul
aam
cmpsb
cmp
enter
mov
or
xor
mov
lret
jae
add
and
stc
repz
mov
push
into
pop
sahf
mov
sbb
and
xor
xchg
add
movsb
jp
pop
addr16
popa
mov
jno
mov
fildl
outsb
mov
xchg
sahf
xchg
push
sub
adc
aam
movsb
jno
xchg
lds
out
dec
jp
pop
jle
mov
test
data16
lock
mov
jae
cld
cwtl
push
xchg
and
sbb
or
int3
adc
stos
or
jg
lahf
or
lea
popf
mov
outsb
rorb
push
push
pop
ja
test
xchg
xor
sub
jl
mov
jne
mov
sbb
rol
sub
insb
repz
inc
ja
or
ds
cli
das
sbb
cmp
add
sub
out
sahf
pop
popf
dec
jo
cmc
dec
xchg
fwait
cli
rcrl
test
stos
inc
jno
lret
inc
add
lea
inc
dec
outsl
xchg
and
add
rorl
push
sti
and
in
or
pop
add
cltd
mov
mov
aad
enter
out
xchg
dec
inc
push
mul
dec
sub
lahf
inc
js
in
repz
lea
cmc
sti
jl
inc
ljmp
aam
push
je
cmp
pusha
int3
sub
pop
mov
icebp
xor
jge
jbe
or
inc
fcomp
dec
cli
cld
inc
arpl
je
xchg
out
jmp
inc
fmuls
fwait
decb
pop
jecxz
stos
mov
ljmp
jg
push
and
pop
pop
in
negl
movsb
rorl
xchg
aam
movsb
cmp
xchg
test
dec
sub
aaa
adc
cmp
add
in
adc
push
jmp
clc
pop
pop
stos
dec
daa
push
sbb
cmpsl
mov
cmp
loopne
repz
rclb
pop
pop
mov
xor
xor
stc
imul
insl
scas
or
jne
cmpsb
or
sub
push
mov
inc
frstor
subb
insb
jmp
cmp
pop
adc
out
add
shlb
pop
inc
jbe
addl
rclb
lock
psubusw
dec
out
fldcw
repz
cmp
xor
js
shlb
adc
outsl
fs
mov
test
cli
xchg
push
pop
fcomps
pop
idivl
lods
add
sbb
dec
imul
push
push
jp
ds
jmp
and
xchg
jns
fstps
cli
mov
mov
sbb
cltd
cmp
adcl
cmc
jae
mov
sbb
sti
ret
data16
inc
cwtl
pop
inc
icebp
fimull
jecxz
iret
popa
add
les
mov
xchg
ret
cmp
sub
ljmp
test
hlt
xor
inc
mov
in
das
sub
jmp
jnp
xor
repnz
shrb
push
popf
xchg
or
jge
inc
int3
iret
jbe
cmc
aam
lods
loopne
shlb
cwtl
jbe
addl
inc
inc
xor
andl
test
lcall
jne
js
shlb
int3
cmp
xlat
imulb
push
cmc
rcrb
push
test
ds
jne
ds
in
pop
xchg
jb
and
jl
aaa
adc
inc
imul
dec
push
adc
push
sahf
sub
xchg
mov
cmp
mov
mov
and
push
pop
idiv
fiadds
idiv
mov
xorl
ret
xchg
inc
cmp
aam
or
mov
clc
and
adc
lock
mov
add
cmp
jle
aad
ss
out
jmp
stos
mov
sub
mov
push
xchg
leave
pop
cmp
fsubrs
lcall
shll
pop
loope
mov
pop
out
cmc
push
mov
mov
adc
mov
xchg
xchg
mov
jnp
pop
pop
movsl
daa
test
stos
loop
movsl
or
lcall
lods
jl
pop
jge
xor
clc
xor
add
adc
cmp
fildll
cvttps2pi
mov
and
stos
mov
dec
cs
xor
popf
push
and
or
sub
cmp
out
shlb
or
xchg
sahf
pop
pop
xor
fcomps
or
xor
xor
inc
jecxz
sub
dec
incb
mov
lret
and
pop
in
in
ret
scas
jno
push
ds
out
cltd
ret
push
dec
dec
and
xchg
inc
clc
shrb
sub
repnz
data16
fisubrl
sbb
mov
or
jl
sub
push
fisubrl
jnp
sahf
int
enter
and
clc
or
xor
je
pushw
push
xor
pop
adc
repnz
lock
inc
jge
xchg
dec
push
sbb
pop
xchg
test
dec
add
std
lahf
dec
sub
add
rolb
imul
add
mov
or
dec
or
sbb
pusha
pop
fsubp
inc
mov
or
cmp
mov
addr16
sbb
adc
push
lahf
mov
fcmovnb
imul
cmpb
inc
mov
imul
lods
inc
mov
push
adc
imul
add
jnp
sub
add
add
xchg
inc
rcr
jnp
popa
daa
call
jge
jle
push
mov
outsb
push
adc
xor
insb
dec
sub
sub
cmpsl
shlb
sti
in
pop
jp
jecxz
add
lcall
dec
insl
mov
js
lahf
xor
xchg
cmp
les
arpl
pusha
dec
inc
aaa
out
pop
ljmp
adc
mov
in
add
shrl
add
mov
test
jp
mov
inc
bound
iret
stos
lret
add
pop
insb
pushf
cmp
push
sti
sbb
fidivl
cmp
cmovle
mov
add
scas
mov
rorl
mov
jb
pop
jns
jno
xor
filds
fmull
push
loopne
dec
mov
dec
rol
testl
sbb
lock
loope
das
fld
data16
xlat
xor
sub
push
mov
pop
jmp
push
pop
sbb
out
and
dec
xchg
iret
or
mov
jge
or
nop
jnp
sahf
mov
dec
in
cld
test
dec
enter
push
pop
fnstenv
adc
roll
cwtl
or
into
pushf
jae
fwait
push
daa
pop
imul
jmp
adc
dec
je
add
cli
insb
xor
add
add
test
dec
movsb
inc
imul
mov
in
sub
repnz
sbb
pop
in
adc
add
out
jle
cmpsl
iret
and
push
inc
adc
and
lcall
inc
inc
data16
xor
test
sahf
dec
les
mov
leave
push
subl
mov
push
or
lods
mov
adcl
out
xor
mov
jne
popf
and
test
jmp
pop
leave
outsl
loope
cmp
lods
ss
xor
jecxz
xchg
sub
movsl
scas
push
aas
sti
mov
imul
addr16
mov
bound
insl
push
add
imul
ret
jecxz
ret
cmc
push
xchg
jo
daa
pop
ljmp
adc
dec
cmpsl
mov
loopne
pushaw
rclb
pop
xor
shl
push
xchg
sub
cmp
jne
ss
cltd
ljmp
movsl
je
std
xlat
int
push
push
lds
mov
arpl
jmp
inc
daa
mov
adc
mov
cwtl
pop
mov
cmp
dec
loope
jge
cld
adcb
sbb
ret
call
pop
rcl
jp
daa
std
jge
outsb
out
xor
int
imul
jo
fldenv
insl
adc
mov
pop
popa
pop
outsl
xchg
ss
clc
jno
fdiv
inc
sbb
dec
jle
jge
outsb
stos
mov
ljmp
leave
lret
arpl
inc
jbe
cmc
movsl
jnp
daa
mov
dec
xlat
mov
cli
outsb
sbb
xchg
push
xchg
inc
sbb
adc
mov
lds
aam
xlat
mov
sbb
jno
push
lods
cmpsl
push
inc
lds
sbb
sbb
push
std
jmp
jmp
popa
push
inc
nop
or
dec
inc
pushf
divb
pop
pop
pusha
dec
sbb
sub
xchg
xor
add
mov
sbb
cmc
in
jne
out
addb
sbb
push
pop
es
out
xor
xor
mov
repz
sbbl
cltd
dec
or
push
inc
jmp
mov
sbb
lods
loopne
pushf
push
cmpsl
xor
movsl
push
or
push
lods
lds
addr16
in
sti
mov
imul
pusha
inc
cmp
jl
clc
and
rolb
fstps
insl
pop
repz
or
mov
in
idivl
adc
mov
fisttpl
cmp
pop
imul
enter
xchg
in
push
shlb
loope
loopne
pop
out
mov
xor
js
xchg
cwtl
repz
outsl
push
pop
fcoml
pop
shlb
dec
xor
mov
rclw
mov
jns
push
fs
sbb
mov
mov
lds
call
out
mov
lea
mov
sti
sub
mov
and
mov
fidivrs
mov
movsb
or
push
mov
cli
lock
fsubrp
mov
cmp
jno
push
mov
das
inc
and
cmp
es
cltd
adc
leave
jbe
arpl
ja
xchg
inc
add
int3
test
xchg
hlt
scas
scas
stos
xor
xor
cmp
xchg
cmp
jnp
lods
popa
mov
fs
sbb
filds
clc
iret
sahf
and
push
pushf
dec
leave
add
orl
stos
ret
shlb
lods
or
fwait
sub
add
cmp
adc
stos
inc
dec
jnp
mov
jo
inc
mov
addl
ss
pop
mov
sub
sub
mov
pushf
addr16
ljmp
popa
inc
leave
mov
in
dec
cltd
xor
into
in
imul
or
fldt
lea
out
call
and
inc
pop
lods
sub
idivb
cs
dec
dec
popa
inc
jecxz
loope
fs
rol
cmpsl
sub
mov
sub
into
mov
jne
inc
or
jb
push
mov
sub
push
jne
dec
lds
dec
inc
ljmp
xchg
je
xchg
loope
in
mov
incb
ss
add
or
cmp
push
push
pop
imul
fcmove
inc
mov
push
fldcw
sbbb
aaa
inc
push
paddq
out
mov
test
jg
mov
pop
movsl
dec
jo
sbb
mov
jl
jb
imul
fcom
mov
out
cmp
pusha
stc
sbb
jo
mov
mul
imulb
fisttpl
add
add
cs
das
dec
fs
and
pop
enter
dec
sbb
bound
in
sahf
lods
daa
jle
clc
pushf
dec
mov
jge
and
data16
mov
mov
imul
or
into
and
cltd
fisttpl
imull
push
int3
into
xchg
or
out
scas
add
xchg
sub
call
cmp
mov
test
mov
movsb
cmp
push
or
ss
les
inc
cltd
mov
mov
push
nop
fldt
ds
xchg
push
aad
out
shr
push
stos
addr16
xor
pop
mov
in
gs
xor
inc
xor
xor
xor
inc
fldcw
cmp
or
nop
sarl
hlt
ja
xchg
daa
test
mov
or
add
mov
push
push
xlat
std
dec
movsl
scas
js
cmpb
lret
fcoms
in
aam
mov
xor
je
sbb
pop
add
mov
mov
push
pushf
into
and
xchg
insl
and
inc
aam
xor
mov
sahf
cmp
fildl
fsub
mov
sahf
or
push
psrad
pop
jg
sbb
iret
sti
mov
int
fistl
enter
shll
fisubrs
call
xor
jnp
sti
sub
and
jle
ficoml
out
fldenv
out
push
xchg
mov
jno
mov
add
cmp
or
sbb
rorb
mov
sbb
ss
or
xchg
jnp
aas
or
and
xor
icebp
div
push
push
add
push
xchg
hlt
push
lds
xchg
ret
das
jecxz
aaa
cli
shrl
sarb
bound
mov
xchg
mov
sbbb
enter
repz
mov
lds
clc
cltd
mov
cmp
repz
xchg
mov
bound
lahf
push
xor
shll
pop
dec
ret
or
ss
push
sbb
loop
add
cmp
ror
and
cltd
cmp
xor
out
inc
movsl
cmp
in
sub
repz
sub
push
clc
repnz
popf
scas
sbb
mov
or
push
test
jb
cld
xchg
daa
cmp
cld
icebp
lock
fisubrs
sbbl
and
push
stos
in
ret
jb
popf
pop
test
jnp
cmp
scas
loopne
ljmpw
jb
sub
test
xchg
in
inc
push
lods
xchg
fimuls
in
fldt
out
movsb
mov
xchg
sub
cmp
mov
ficomps
pop
pop
mov
outsl
jle
sbb
idiv
or
icebp
aam
call
xlat
or
inc
aam
cmp
call
push
bound
std
xchg
outsl
in
mov
test
mov
adc
inc
cmp
push
mov
sbb
or
subl
mov
inc
pop
adc
xchg
dec
pushf
loopne
mov
dec
push
aam
hlt
cmpsl
or
insb
adc
mov
fimull
out
cmp
and
andb
pop
sub
fadd
inc
fmuls
jl
push
testb
out
movsb
scas
push
fwait
sbb
fldenv
add
adc
dec
mov
jl
les
popf
mov
rorb
orl
imul
rclb
negb
mov
sbb
add
cmp
sbb
push
rorl
xorl
push
push
sahf
in
add
sahf
cs
jle
xchg
out
lds
and
lods
xchg
and
inc
mov
psubd
ss
popf
xlat
jnp
cmp
dec
ja
rcl
ret
sub
sbb
xchg
jns
fidivrs
jmp
mov
pop
xor
jle
mov
jno
out
mov
sbb
pop
push
add
sbb
or
repz
mov
pop
movsb
push
ja
cmp
sti
js
lret
add
lret
in
clc
pop
mov
std
fwait
out
in
jp
mov
jle
inc
push
negb
xchg
arpl
pop
push
mov
dec
insl
dec
mulb
popf
ds
pop
lea
int
push
bound
daa
or
adc
mov
or
sarl
adc
ja
popa
aad
xchg
movsb
dec
cmp
loope
sar
xor
inc
push
jl
jge
mov
sub
mov
push
dec
mov
push
push
mov
fsub
jl
rcrl
fsubrl
ljmp
mov
jno
out
xchg
xchg
mov
sbb
lods
loope
aam
mov
ret
push
jl
or
call
jmp
push
std
stos
adc
out
lret
xchg
addb
test
fs
adc
mov
pop
add
push
fwait
cmpl
ja
test
or
dec
push
scas
cltd
sbb
lret
loop
jge
sub
js
xchg
xchg
in
and
cmpsb
add
stos
lret
mov
pop
loope
call
mov
mov
mov
loopne
lods
push
imulb
cmc
adc
shlb
les
addl
xor
dec
imulb
dec
fisubrl
xchg
lret
out
jmp
imul
jle
sbbb
das
js
aad
xchg
push
xlat
add
jnp
cmp
ljmp
ds
or
dec
cmp
sbb
and
jge
xor
sahf
test
add
push
fimuls
add
cmpsl
mov
xchg
stos
jmp
mov
jb
fimull
sub
mov
jb
in
adc
jbe
pop
pop
pop
cmp
jp
pop
push
push
jle
inc
push
ljmp
inc
out
ss
ja
fadds
jg
test
cs
mov
jae
dec
add
sub
inc
stc
dec
ds
push
pop
iret
clc
pop
out
or
dec
jp
adc
sbb
sahf
mov
xchg
loop
dec
negb
lret
sbb
xchg
inc
jmp
inc
ss
fwait
sbb
add
roll
sub
mov
or
call
loopne
xlat
shrb
das
in
repz
push
popf
jmp
pop
enter
lds
and
pop
test
ret
adc
leave
nop
mov
leave
fnstcw
test
cmc
and
popf
rclb
outsl
push
loope
sbb
push
pop
sbb
or
pop
add
add
jns
ss
hlt
mov
inc
and
and
push
mov
int
imul
sbb
leave
cmp
jge
lret
stc
scas
or
mov
xchg
jne
mov
incb
xor
add
push
lret
push
mov
out
frstor
dec
dec
mov
stc
and
es
or
out
mov
daa
hlt
out
je
push
call
fmull
arpl
sti
dec
and
or
and
in
jno
adc
pop
sbb
not
xchg
push
mov
das
dec
test
xchg
push
mov
outsl
dec
inc
cmpsl
and
fisubrl
adcl
mov
ret
pop
inc
push
call
loopne
push
xor
or
sub
ret
inc
add
gs
das
call
negl
xchg
jg
ffree
int
sub
mov
lretw
mov
test
mov
lods
in
xor
pop
pop
fwait
clc
xchg
or
cmp
pop
out
push
sbb
push
adc
stos
and
pop
inc
in
frstor
std
std
lea
mov
or
jns
lea
ljmp
sbb
icebp
lds
cmp
inc
icebp
add
les
xor
icebp
movsl
xor
add
push
mov
xchg
adc
orl
lret
push
lcall
xchg
push
xor
or
sub
pop
inc
push
out
loop
loope
pushf
fwait
push
adc
test
scas
sbb
pop
jb
dec
dec
sti
inc
sbb
fsubrs
pop
scas
adc
mov
xchg
sub
dec
mov
arpl
cmpsl
stc
adc
xchg
or
mov
lret
aad
dec
sub
pop
lds
outsl
xchg
fistpll
out
out
add
push
mov
movl
dec
sub
cwtl
bnd
jl
mov
pop
and
adc
ds
sub
mov
jp
not
fnstenv
enter
push
mov
sub
les
jp
mov
xlat
xchg
mov
pop
cmpsl
jge
mov
mov
mov
sub
cmp
test
push
mov
into
dec
fmul
rolb
inc
add
xor
cld
out
dec
sahf
add
sbb
les
mov
fbstp
lods
ret
popa
clc
mov
adc
lret
pushf
add
and
mov
inc
clc
pop
sbb
or
push
jmp
or
xor
mov
jbe
fmull
mov
dec
mov
inc
in
cmp
cmpl
xchg
dec
mov
ja
add
out
stos
inc
xchg
das
sub
aad
lret
rsqrtps
outsl
das
sbb
xor
lods
aam
sub
sarl
push
xor
fbld
jnp
xchg
mov
jo
lret
adc
ljmp
mov
aas
lea
lods
fldt
jecxz
aam
push
shl
int3
cs
sbb
and
sub
jne
sub
push
mov
inc
inc
int
mov
hlt
push
mov
lods
icebp
adc
and
pop
lea
push
xchg
test
imul
lahf
jno
push
shll
ja
pop
and
cmp
jb
loopne
mov
pop
mov
xor
aad
lret
or
jmp
cmp
sete
pop
and
jecxz
mov
pop
sti
mov
ljmp
ret
cmpsl
and
loope
int3
cwtl
bound
in
cmp
inc
inc
pop
insb
lods
push
jmp
sbb
xchg
imul
cmc
movsl
or
jnp
mov
aad
mov
adc
sbb
cltd
loopne
jle
mov
cld
dec
xor
int3
dec
add
cmp
push
mov
jbe
cmp
mov
cmp
int
data16
mov
aad
outsl
xor
loope
add
repz
adc
sbb
lcallw
pop
adc
cs
rclb
lock
rcll
adc
int
ret
or
repnz
icebp
lods
jp
xor
sub
xchg
jge
dec
call
push
out
cmpsb
bound
push
xchg
sbb
pushf
mov
xorl
cli
pop
cltd
sub
xlat
pusha
jmp
bound
cmpsb
xchg
mov
out
in
sbbb
jno
sbb
xchg
ds
in
inc
mov
jns
cs
adc
add
jbe
shl
fsubrl
mov
and
clc
dec
loopne
mov
sub
sub
ja
pop
push
mov
neg
testb
adc
fsub
push
jg
inc
lock
int
shrl
sub
popf
pop
sub
adc
repnz
sbb
aad
sbb
adc
or
aaa
mull
xor
add
addr16
adc
clc
imul
push
xchg
cmp
aad
cs
inc
jmp
mov
mov
out
pushf
and
movhps
xchg
pop
fwait
psadbw
addb
mov
xor
or
or
je
mov
icebp
and
mov
mov
hlt
add
inc
sbb
popf
dec
push
mov
ljmp
or
xor
loope
notb
xchg
flds
mov
jecxz
dec
loop
mov
fadds
push
fs
out
clc
push
aad
adc
scas
ret
push
pop
push
push
stc
mov
cltd
adc
xor
push
inc
mov
ljmp
jnp
mov
cmp
loope
fldt
xor
jle
rcrb
scas
lretw
pop
repnz
and
inc
push
push
or
adc
fs
push
push
add
fs
popa
mov
push
push
mov
dec
xchg
in
push
iret
stc
xor
sub
mov
dec
jge
add
lahf
mov
inc
inc
lods
adc
out
push
jge
mov
icebp
cli
cmc
mov
sbb
mov
mov
cli
mov
or
inc
push
sub
pop
fcoms
sub
sarl
stos
mov
mov
dec
xchg
stc
fisubl
xchg
les
push
adc
xchg
sub
xor
sub
lods
mov
jmp
cmp
sbb
sub
cmp
pusha
arpl
push
addl
in
mov
fstpt
mov
adc
shrl
js
add
insb
lds
in
shlb
out
movsl
aaa
loopne
in
and
stc
sbb
xchg
gs
pop
mov
movsb
sub
and
in
cwtl
sbb
stos
mov
in
cld
movsl
inc
test
mov
jge
sub
sbb
mov
xchg
into
mov
dec
add
stos
repz
mov
fbld
jecxz
je
jecxz
jae
dec
rol
aas
mov
push
pop
insb
pop
or
call
jo
inc
dec
outsb
data16
fcompl
imul
or
daa
outsl
mov
hlt
inc
and
icebp
fsts
sub
je
cmpsl
iret
outsb
sarl
cmp
dec
adc
in
divb
cmp
xorl
adc
push
inc
and
xlat
sub
out
lods
subb
xor
cltd
leave
lods
cmpsb
xchg
mov
mov
xchg
xchg
cmp
movsl
fldl
pushf
test
adc
inc
jl
fisttpl
imul
jl
and
jle
int3
loopne
nop
push
inc
shlb
test
nop
rorl
in
fucomip
insl
fmull
pop
cmp
dec
mov
inc
mov
negb
arpl
xor
mov
xor
mov
lds
push
out
daa
icebp
cmp
stos
xlat
mov
mov
mov
scas
lds
popa
mov
mov
mov
sti
sbb
inc
rcl
cmpsl
lahf
sbb
out
xor
imul
stos
pop
mov
mov
aas
pusha
test
cmc
mov
pusha
js
insl
mov
jge
pusha
call
pop
adc
lahf
mov
jmp
and
faddl
out
adc
jg
push
sub
std
pop
fimuls
inc
add
sbb
push
xor
fwait
sbb
jg
shll
iret
sbbb
lock
sarl
data16
xor
dec
and
dec
xor
rorl
int
cmp
ret
inc
repnz
adc
cmp
inc
mov
das
jecxz
test
xor
icebp
adc
push
add
fldcw
dec
ret
popf
sub
dec
cwtl
cwtl
sub
fdivrs
mov
and
sub
cmp
inc
inc
cmp
jo
out
xor
cmpsl
add
and
mov
in
fstl
outsb
cmp
dec
insl
gs
add
aas
shrl
lock
xor
adc
adc
cmp
xchg
push
loop
pop
pop
jnp
iret
adc
pushl
out
push
dec
inc
cmp
sub
xchg
aaa
pop
iret
repz
test
add
push
in
fmull
mov
pop
movsl
addr16
fbstp
out
movb
push
add
imul
in
pop
mov
mov
xchg
orb
cmp
push
inc
mov
pop
in
pushf
or
lret
xchg
sbb
insb
aaa
das
mov
jno
es
xchg
cmp
popf
and
push
mov
push
xchg
and
xchg
adc
addr16
es
sub
scas
stc
fstpl
mov
popa
xchg
bound
lods
mov
mov
in
or
scas
scas
in
ja
dec
bound
ficompl
xchg
fwait
in
fwait
xchg
push
jle
jg
ret
repnz
push
xchg
mov
sbb
insb
cmpb
nop
cld
dec
imul
inc
clc
ljmp
mov
dec
mov
add
test
pusha
test
sbb
shl
jae
push
pop
insb
cmp
frstor
adcl
divl
sbb
pop
mov
lahf
inc
mov
rcll
pop
or
adc
jbe
mov
lret
arpl
insb
add
jge
push
mov
incb
push
adc
in
sub
mov
or
lret
xor
js
jg
insb
inc
ret
test
push
mov
or
or
inc
sub
lcall
pop
sbb
dec
mov
push
fcompl
pop
stc
cmp
loope
shll
lock
lods
xchg
jne
out
repz
test
cmc
cmp
les
mull
dec
mov
pusha
fcoms
cmp
dec
gs
mov
add
jg
mov
pop
and
inc
or
std
or
test
es
fs
js
popf
arpl
mov
mov
gs
mov
bound
das
sub
iret
test
cmp
xor
xchg
imul
emms
dec
pop
xchg
mov
sub
push
inc
push
pop
out
mov
sbb
and
jecxz
loop
aad
into
dec
aas
xor
leave
sub
sbb
push
mov
mov
ljmp
cmp
dec
imul
or
push
pop
xor
xor
jle
leave
sbb
xor
pop
inc
cmp
shll
aam
out
push
inc
loopne
xor
jbe
inc
icebp
cmp
icebp
mov
add
dec
enter
pop
mov
ret
cmc
mov
sahf
mov
inc
test
sbb
sar
bound
adc
repz
inc
inc
and
inc
mov
enter
fistps
cli
and
dec
cs
inc
out
popa
pop
and
mov
and
sub
std
mov
loopne
cltd
sysret
jne,pn
inc
mov
push
lds
fucomp
adc
jae
test
pop
ret
nop
mov
out
insl
scas
adc
pop
mov
sbb
xor
out
jecxz
js
cmp
pop
xor
in
sub
or
add
mov
repnz
and
ja
push
pop
mov
les
nop
sahf
enter
jecxz
xlat
inc
inc
adc
lea
or
or
fnstsw
repz
daa
adc
bound
enter
xchg
cmp
sbb
sti
inc
popa
or
rolb
fcoml
xchg
out
dec
mov
xchg
popa
adc
mov
in
adc
in
hlt
add
add
jo
cmc
movsl
rcrb
jg
jo
dec
add
jecxz
mov
ljmp
or
jecxz
aad
pusha
jmp
call
and
inc
dec
push
push
add
mov
lods
jae
dec
xor
jge
dec
dec
mov
int
fucom
insl
fmuls
xor
sarb
mov
add
in
imul
outsb
fimull
ja
arpl
scas
test
fldl
dec
xchg
or
into
addr16
and
push
fiaddl
std
test
and
loop
outsb
lret
mov
mov
mov
aam
fadds
inc
xchg
fwait
push
sbb
xor
insb
paddb
adc
aas
push
dec
enter
cmp
mov
movsl
arpl
xor
push
lods
int3
jne
cmp
test
lcall
arpl
cmp
sub
cmp
mov
jo
cmp
inc
aas
inc
mov
js
ljmp
pop
cmp
in
mov
gs
sti
hlt
arpl
and
pop
scas
in
dec
add
push
add
addr16
sahf
clc
pop
stc
mov
into
mov
imul
inc
push
mov
lds
mov
loope,pt
sbb
xchg
add
mov
sbb
shlb
clc
jmp
jno
aam
mov
cmp
icebp
movsl
sbb
and
movsl
push
sub
xorl
loope
or
mov
sub
fnstcw
int3
inc
xchg
popl
mov
divb
sub
inc
push
cmp
xchg
das
lds
fcoml
push
lcall
mov
std
add
daa
xchg
cmp
mov
push
pop
sub
mov
in
pusha
dec
adc
stos
lret
mov
scas
es
addr16
aas
inc
lods
out
xchg
fcoml
or
lcall
xchg
push
pusha
pop
xchg
shl
mov
hlt
add
xchg
add
dec
inc
push
pop
sbbl
mov
loopne
mov
jle
dec
xchg
imul
pop
test
int
ret
fidivl
testb
scas
mov
and
sbb
cmp
jns
push
xchg
shll
pusha
arpl
xor
out
out
mov
fsubrs
std
cmp
popl
cmp
insb
add
outsb
mov
xlat
pusha
and
adc
pop
pop
sbbl
sub
dec
push
dec
sahf
mov
add
xchg
cmp
lods
push
imul
pushf
ss
lcall
loop
ds
imul
psraw
es
das
cli
dec
jle
sbb
mov
dec
push
inc
or
bound
sub
jne
push
adc
dec
xchg
jo
jecxz
addr16
imul
or
lods
ja
sbb
xor
fadd
mov
ja
fistps
sarb
fsubs
shl
xlat
mov
popf
daa
sbb
test
jmp
lods
add
ficomps
cmp
dec
rorb
inc
pushf
bnd
jg
mov
fs
and
imul
fsubs
mov
pop
stos
lret
dec
insb
test
filds
adc
es
fidivl
std
mov
les
jg
push
dec
scas
pushf
xchg
mov
mov
mov
es
dec
jg
push
aas
pop
or
mov
dec
push
adc
adc
fwait
mov
roll
test
movsl
push
outsb
push
mov
hlt
iret
nop
jp
adc
add
xchg
mov
movsb
cli
shl
stos
ljmp
mov
sbb
pop
shll
adc
jb
mov
cmp
jb
add
daa
add
jae
fwait
xor
or
icebp
xor
sub
dec
mov
and
cmc
dec
lcall
xor
xchg
mov
inc
mov
jg
into
inc
ja
mov
leave
lret
sub
inc
movsl
popa
aam
jle
jnp
or
push
bound
nop
in
fcoms
imul
push
loope
fwait
mov
ret
ret
rorb
jne
inc
cmp
pushw
xchg
fisttpll
xchg
push
jge
sub
into
dec
mov
jno
dec
fldcw
pushf
nop
popa
fldenv
push
dec
stos
mov
add
les
sbb
cltd
lock
mov
pop
xchg
pop
pop
or
cmp
fsubp
mov
xlat
xchg
orl
push
dec
jbe
jnp
xchg
stos
idivb
mov
jle
inc
rorl
dec
or
das
pop
ja
data16
popf
mov
ss
lea
xor
mov
arpl
adc
jmp
inc
jo
mov
aad
pop
jne
iret
and
push
push
mov
sbb
add
sahf
pop
mov
dec
and
loope
xchg
shr
mov
push
and
and
test
inc
stos
ja
mov
jecxz
mov
mov
test
mov
filds
inc
xchg
jno
xchg
jns
mov
fsubrl
xchg
push
in
lds
inc
mov
sub
sbb
pop
jne
hlt
out
or
push
sub
mov
and
pop
sub
mov
fistpl
and
mov
arpl
push
lods
out
repz
pop
lahf
ljmp
sbb
mulb
lods
and
in
ja
rcr
rcrl
jg
mov
dec
lea
mov
add
addr16
in
hlt
les
dec
into
sbb
outsl
fisubl
cs
sub
sub
sub
or
sub
xlat
lahf
daa
orb
xchg
lcall
loop
jg
shl
mov
hlt
mov
or
and
aas
pop
mov
clc
out
outsb
es
cltd
ljmp
mov
ret
fcomip
sbb
std
mov
js
enter
sub
xor
addb
shrl
cli
clc
jl
sub
addb
fisttpll
sub
data16
lea
les
outsl
int3
movsb
sub
rcl
push
pop
inc
push
ja
ds
jns
push
adc
int
insb
mov
out
int
fistps
mov
pop
adc
dec
and
ds
div
pushw
dec
pop
sub
xchg
adc
xor
aaa
mov
cmpsl
adc
fisttps
and
jmp
pushf
push
rolb
or
dec
adc
jne
pop
add
push
sbbl
loop
mov
loope
push
push
xlat
aaa
stos
test
pop
enter
cmc
push
cs
mov
or
dec
mov
jle
popa
adc
sbb
mov
clc
xor
mov
push
aaa
scas
push
mov
mov
dec
xchg
outsl
or
xchg
sbb
jmp
add
mov
pop
aaa
and
xor
es
dec
cmpsl
call
aad
mov
push
xlat
xchg
lret
cmp
in
ds
dec
cmp
push
ds
xor
dec
lds
jg
sti
imul
cmp
pop
mov
iret
cmp
inc
ja
xor
shlb
cmc
add
jbe
mov
xor
rol
push
ret
adc
sbb
xor
mov
clc
into
add
and
es
fsubrp
aad
adcb
ret
inc
lret
lret
stos
sub
sbb
sbb
mov
mov
cmp
dec
lcall
fstpt
ret
jecxz
inc
aas
mov
push
das
jmp
mov
add
pop
cmp
lahf
arpl
mov
in
insb
das
xor
aas
cmpsb
fs
ss
xlat
stos
adc
xor
imul
aam
mov
jmp
mov
popl
mov
subl
and
jmp
bound
mov
add
nop
inc
cs
shll
outsb
jo
or
push
mov
ss
push
xchg
xlat
xchg
mov
cmp
popa
mov
add
jecxz
xchg
mov
and
popa
xchg
lret
pop
lds
ds
testl
mov
insb
mov
jecxz
dec
int
cld
sub
jge
adc
cmp
pop
mov
or
add
loope
into
mov
mov
push
aad
push
fimuls
inc
shlb
je
pop
cs
and
and
fwait
addr16
sub
aam
jns
pop
sub
lea
mov
nop
imul
pop
int3
stc
mov
in
lret
enter
adc
mov
sbb
mov
or
dec
loope
mov
into
aam
xchg
and
inc
filds
mov
roll
inc
ret
pop
rolb
cld
js
pushf
stos
cs
ljmp
pop
mov
and
dec
ss
or
lea
add
inc
sub
rolb
ret
inc
into
std
pop
xchg
sub
imul
mov
rolb
cld
jg
pop
mov
or
xchg
dec
scas
aam
movsl
loop
leave
add
addb
cmpsb
sub
repnz
movsb
push
cwtl
xchg
push
iret
aaa
mov
arpl
cmp
test
cli
in
mov
mov
inc
loop
xor
adcl
jge
jo
mov
cmovo
stc
rep
dec
cmp
xchg
mov
hlt
xor
jg
out
dec
sbb
push
add
enter
cmp
rcr
insl
lcall
iret
pop
cmc
adc
cmp
inc
mov
xor
mov
popf
cmp
xor
inc
mov
and
mov
sarl
or
pop
cmc
xchg
mov
xor
js
fisttpl
fs
pop
pop
enter
mov
xor
sub
cmp
mov
push
and
mov
outsl
and
pop
jmp
add
xchg
inc
sub
mov
cli
adc
dec
dec
xorl
test
and
jbe
popa
inc
lcall
adc
mov
or
das
push
je
and
sar
pop
xor
sub
nop
inc
loope
andb
fs
xchg
jp
out
nop
pushf
xchg
cld
xchg
sub
jmp
sub
rcrl
gs
cli
add
jmp
or
pop
imull
les
mov
pop
mov
push
test
mov
cwtl
dec
mov
push
call
outsb
icebp
pop
sub
mov
and
out
adc
mov
into
sti
sbb
and
nop
dec
adc
les
sub
mov
inc
out
and
cmc
push
fisttpll
pop
mov
sbb
dec
mov
in
fdivrl
test
mov
sub
or
nop
mov
pop
jle
dec
in
out
mov
add
jl
and
scas
in
dec
movsb
scas
pop
jo
mov
pop
call
les
xchg
adcb
pusha
jnp
dec
fnstenv
add
nop
in
ficoms
stos
mov
sub
add
fldl
shlb
pop
or
out
mov
int3
cmp
jo
scas
popf
dec
dec
mov
inc
push
imul
jp
popf
mov
and
cmp
outsb
dec
movsb
shrb
inc
dec
jmp
imulb
jmp
sub
pop
popa
insl
cmp
es
stos
stos
push
adc
pushf
imul
popa
xchg
add
mov
fdivs
jne
pusha
stos
cmp
cmpsb
jmp
cmpsb
adc
pushf
adc
mov
test
xchg
xchg
adc
cmp
pause
push
ficoms
jl
std
aam
test
or
mov
rcr
out
adc
cli
adc
mov
sti
je,pn
push
mov
das
sub
mov
jecxz
dec
imul
int
mov
inc
adc
push
jb
ljmp
cltd
jmp
or
test
sub
or
pop
push
xchg
or
gs
xchg
mov
add
loope
insl
inc
sub
inc
push
mov
js
inc
sub
and
cltd
roll
sahf
mov
push
or
jl
pop
scas
icebp
xor
dec
xor
bound
dec
xchg
add
out
cmovge
insl
dec
add
cld
sti
nop
mov
incb
cmpsb
sub
cld
cs
push
es
xlat
cmp
lret
push
push
adc
add
loop
jmp
pop
mov
les
add
movsb
and
sub
test
or
movsb
pop
mov
lds
outsl
insl
add
js
pop
aaa
inc
xor
leave
daa
cld
sub
fisubs
lret
sbb
out
push
push
sub
fsubr
jl
dec
insl
xor
mov
add
loope
lret
xchg
or
sub
pop
fwait
sub
insb
jns
repz
rcr
ljmp
loope
pop
push
fdivrs
sarb
js
or
movsl
pushf
xor
clc
ret
fldl
sbb
ljmp
jle
and
push
addr16
lahf
movsb
and
fisubs
and
outsb
and
shl
sub
arpl
fucomp
pushf
lcall
inc
hlt
mov
or
rcll
aad
mov
jecxz
and
mov
aaa
mov
cltd
imul
adc
mov
sbbl
das
pop
xor
cmp
push
lods
mov
jl
mov
xchg
xchg
jne
test
inc
dec
inc
sub
jae
adc
mov
out
cld
adc
pop
cli
add
sbb
popf
adc
ja
stos
ret
js
dec
dec
sbb
lret
insb
in
pusha
mov
pop
dec
out
jg
push
sti
mov
sub
pusha
je
pop
aad
sub
dec
pop
xchg
iret
xchg
scas
inc
mov
jbe
cmp
loopne
daa
ds
lods
cwtl
out
notb
xor
pop
mov
insl
inc
out
sub
cli
int
test
sub
pop
or
mov
scas
repnz
sti
mov
cs
int
and
push
fsubl
fucomip
push
aaa
test
rcrb
cmp
sub
in
cltd
repnz
repnz
sbb
movsl
mov
icebp
xor
xchg
dec
xor
xchg
sub
imull
sti
add
dec
push
add
jmp
xchg
jecxz
adcb
xor
rclb
popa
mov
mov
pop
fcmovu
inc
push
adc
sub
push
fstl
mov
push
subl
mov
sbb
adc
int
sub
mov
push
sbb
xor
add
and
mov
mov
mov
cmp
jle
icebp
dec
add
mov
dec
insb
inc
sbb
aam
add
cmp
test
leave
jns
imul
dec
loopne
xchg
sub
xchg
xchg
inc
shrb
cmp
push
out
mov
fwait
and
sbb
loopne
icebp
insl
lahf
fxch
imul
fisubrl
xlat
fcmovu
jp
mul
xor
stc
fsubl
adc
sbb
or
lret
popf
pop
add
xchg
xchg
mov
popa
push
pop
jno
mov
into
test
dec
inc
mov
fwait
stos
xchg
cli
push
sbb
mov
xchg
xchg
outsb
mov
hlt
fwait
pop
stos
into
sub
enter
jle
pop
xchg
movsb
or
or
xchg
mov
out
add
xor
cwtl
idivl
ljmp
add
mov
in
pop
fisttps
cmc
mov
and
adc
jne
and
mov
fistps
sub
repnz
and
cmpsl
dec
cwtl
sbb
mov
mov
dec
arpl
xchg
cmp
aas
ficompl
push
mov
aam
stos
mov
jnp
jle
mov
std
mov
push
jp
ret
loop
loop
adc
pusha
dec
popa
mov
xchg
hlt
aas
add
aad
dec
bound
mov
pop
mov
fmuls
mov
std
ret
mov
outsb
sbb
in
hlt
push
adc
ret
cmpsl
dec
test
movsb
cmp
xchg
cs
mov
pop
aas
jle
lock
loop
ss
rclb
mov
add
lods
out
mov
ret
push
out
inc
dec
lahf
cmp
roll
aaa
nop
inc
pop
xchg
fsubr
fstpt
jns
fidivl
sbb
outsl
mov
ds
inc
sbbl
xchg
jg
shr
popa
fwait
add
in
jecxz
sub
fidivrl
inc
stc
pushf
scas
cs
ja
sbb
push
inc
mov
in
pusha
push
fsts
cs
mov
adcb
jge
sbb
and
lods
cmp
jmp
in
dec
mov
sub
jg
add
push
mov
dec
or
and
fnstenv
adc
nop
repnz
add
ret
xor
popf
pop
cmp
mov
aaa
cmp
mov
outsl
cmp
sbb
push
test
xchg
in
push
mov
arpl
sbb
xchg
mov
fmul
out
inc
push
test
test
sub
testb
loope
leave
sub
mov
add
inc
pop
jl
jmp
es
arpl
nop
pusha
add
in
add
cmp
sbb
mov
dec
lret
stos
sbb
mov
ja
sbb
or
imul
mov
cmp
jge
in
mov
ds
daa
inc
test
push
setne
jns
outsb
stos
mov
xchg
in
popl
inc
xor
push
aas
pop
es
pop
mov
mov
cmpsb
xchg
cmp
xlat
jo
rorb
ds
mov
aaa
push
xchg
inc
and
push
fildl
inc
xchg
or
mov
pop
mov
adc
mov
mov
jb
push
sahf
jae
iret
push
ljmp
push
jp
sub
shl
dec
aaa
imul
arpl
pop
fmuls
mov
mov
fdivs
mov
xor
mov
push
sbb
jb
push
loop
cmp
icebp
cmp
repnz
pop
push
pop
mov
or
add
xchg
dec
clc
xlat
inc
cmp
mov
push
xlat
inc
adc
mov
push
scas
or
xchg
lods
dec
dec
test
out
add
cli
loopne
pusha
sub
dec
pop
jmp
xchg
push
arpl
cli
xchg
sti
or
mov
rorl
xor
mov
xor
movsb
xchg
cld
sub
add
int
cmp
adc
push
xor
aaa
lahf
outsb
mov
ljmp
sbb
arpl
int
shrl
dec
stos
daa
mov
call
rclb
test
mov
adc
fs
ret
popa
jge
mov
push
cmp
bound
shrl
push
jcxz
ljmp
cmpsb
inc
xlat
push
mov
mov
sub
pop
xchg
xor
cmpsb
inc
adc
dec
icebp
adc
fstl
cld
pop
xor
fucomp
or
and
push
push
adc
sbb
inc
into
repz
in
cmp
push
lods
cmp
jmp
iret
add
jns
loop
inc
insl
popa
hlt
addr16
in
mov
add
bound
pop
iret
loope
pop
mov
xor
pop
adc
mov
shlb
add
add
das
test
ffreep
loopne
mov
and
adc
orb
daa
dec
xor
mov
arpl
xchg
test
mov
cmp
mov
push
pop
out
cmp
cwtl
lods
enter
mov
xor
mov
icebp
sbb
lret
pop
push
or
rorl
and
xchg
inc
std
mov
push
lcall
aad
fiadds
inc
xchg
sbb
mov
fiaddl
mov
lahf
pop
pop
enter
out
enter
dec
dec
xlat
add
nop
shl
pop
adc
xorl
pop
jg
adc
sbb
sub
pushf
adc
aas
add
pushf
rorb
xchg
arpl
das
mov
outsl
inc
cmp
filds
outsl
mov
gs
clc
cmp
std
mov
cmp
loope
sub
gs
cmp
sbb
shl
inc
in
add
cmp
or
push
mov
dec
mov
ret
xchg
push
scas
xchg
mov
out
push
mov
push
aas
adc
int
ret
ds
adc
scas
int3
jmpw
fdiv
sarb
std
es
leave
xor
mov
out
pop
pop
cmpb
cltd
xchg
rcll
test
mov
push
mov
lahf
or
scas
push
pop
pop
sbb
insl
aad
mov
repnz
sbb
imul
aam
in
shrl
movsb
sti
xchg
sbb
and
notb
movsl
or
xchg
aad
imulb
jae
repnz
divb
fcomi
jae
out
shrl
out
cmp
and
add
pop
cmp
mov
cmp
mov
std
ret
insb
out
loope
hlt
inc
pop
jecxz
jb
shlb
sub
lcall
mov
and
lds
add
roll
pusha
cmp
sbb
daa
out
shll
mov
sbb
mov
xor
fcoml
cmp
arpl
fstl
sub
mov
mov
and
pop
push
xor
insl
fs
into
fists
or
cmpsb
call
push
lods
xor
out
jl
mov
jnp
gs
das
sahf
lcall
jno
int3
out
scas
movsl
fwait
or
push
dec
in
test
add
cmp
outsb
mov
inc
pop
jl
adc
cmp
xor
loope
and
sbb
lods
or
ret
xchg
jne
push
xchg
push
or
ja
cwtl
sbb
jle
jge
xchg
testb
push
mov
adc
mov
mov
insb
push
leave
rclb
sub
inc
or
xor
lret
pop
lahf
add
inc
sub
insl
jns
xchg
mov
int
xchg
jo
call
lods
fstpl
lahf
sbb
pop
das
dec
sti
push
loopne
mov
rol
pop
mov
sub
sbb
faddl
lds
or
pop
cmc
pop
or
stos
add
ja
jns
inc
cwtl
jmp
adc
sbb
sub
dec
adc
out
test
cmp
int3
dec
sub
xor
xchg
mov
scas
sti
sbb
fsubr
adc
sbb
dec
lea
jl
insb
add
andl
aam
hlt
lea
inc
popa
mov
pop
loope
lods
shrl
pop
ja
cmpsl
addl
or
add
leave
jne
shll
loope
sbb
jp
mov
mov
mov
jns
orb
out
inc
mov
or
dec
inc
inc
sub
cs
mov
fucom
lret
iret
cmp
dec
andb
pushf
mov
aad
jg
xor
or
mov
scas
imul
jbe
inc
aaa
mov
or
loopne
in
lds
into
xchg
dec
mov
fildll
addr16
inc
or
xchg
push
in
push
push
out
in
fs
jns
xlat
or
jmp
mov
in
adc
js
adc
in
lods
ret
add
xchg
dec
push
lret
shll
mov
ja
xchg
xlat
mov
inc
push
cmp
push
mov
jae
pop
mov
jno
addb
stc
scas
stc
inc
les
jnp
jp
xchg
mov
jnp
loop
or
cwtl
ja
jnp
adc
mov
inc
mov
mov
jg
inc
call
xor
imul
out
mov
sarl
mov
int3
dec
test
fldenv
insb
into
std
repnz
cmp
xchg
fmul
pop
and
and
push
cli
popf
aam
leave
sti
sub
inc
mov
xchg
jb
cmp
cmp
loope
inc
lods
stc
cwtl
in
pop
pop
jmp
or
sub
jp
popl
outsb
leave
xor
dec
xchg
mov
loop
sbb
cmpb
push
inc
lcall
out
sbb
push
fs
sbb
leave
mov
sbb
fcmovbe
addr16
jmp
xor
sbb
stc
cmpsb
pushf
ficoml
nop
fstl
sbb
movsl
testl
in
mov
fidivrs
adc
divb
jb
popa
ja
fisttpl
shlb
mov
or
mov
add
cltd
dec
mov
dec
dec
lret
mov
dec
test
test
aad
push
outsb
jl
add
movsb
or
adc
lods
jns,pn
rcr
data16
sub
inc
in
pop
push
pminsw
scas
lret
loop
in
xor
stc
ljmp
lret
movb
imul
push
adc
cmp
out
add
mov
addr16
inc
mov
push
lcall
jge
mov
insb
cld
adc
repz
ficoms
or
rcll
xchg
out
cmp
shll
cmp
repz
mov
in
imul
out
xlat
inc
js
or
popl
xor
and
mov
mov
aas
fisttpll
push
and
cmpsb
je
roll
clc
cmp
shrl
bound
rorb
jecxz
jno
cmpsb
adc
jl
pop
inc
fcomps
jno
inc
mov
mov
adc
roll
sahf
add
test
hlt
imul
sub
cmp
mov
sbb
add
mov
cmpsb
fbstp
dec
imul
out
outsl
mov
imull
lea
in
popf
lahf
in
dec
cmp
ret
scas
push
jle
xchg
sub
test
aaa
mov
jno
cs
jecxz
test
mov
mov
pop
pop
xlat
mov
cmp
xchg
push
pop
cltd
les
rorl
pop
add
test
fstpt
or
aad
and
mov
mov
insl
xor
sub
adc
add
movsb
dec
inc
das
dec
mov
dec
xchg
push
aaa
psubd
or
mov
clc
pop
mov
mov
je
pcmpgtd
sbb
jle
loope
mov
and
xchg
ja
mov
popa
shll
dec
subb
in
adc
sbb
push
push
daa
int3
or
cs
mov
adc
out
or
fldl
in
sub
inc
icebp
push
sti
fstpl
insb
imul
pop
mov
push
ss
xor
push
jl
arpl
aam
inc
xor
mov
push
pop
rclb
cmc
repnz
push
divb
sub
mov
aam
shrl
jnp
ja
adc
rol
adc
loope
movsb
mov
es
adcb
sbb
fs
mov
mov
daa
cli
jno
bnd
cmc
orb
frstor
test
std
mov
shll
insb
in
sub
call
inc
push
sub
shll
cltd
and
mov
cmp
stos
ljmp
dec
test
inc
xor
lods
movsl
push
mov
push
test
mov
repnz
fstl
mov
and
imul
fidivrl
dec
jns
dec
inc
xchg
jbe
xor
lock
dec
jne
add
adc
inc
sub
subl
lret
jbe
xchg
adcb
and
lds
cvtpi2ps
cmp
dec
js
or
dec
or
mov
mov
or
cli
cli
push
inc
nop
mov
inc
xchg
sub
fldenv
outsl
sub
lods
enter
push
add
sbb
mov
lock
push
outsl
and
pop
mov
addr16
pushl
jg
adc
cmpl
mov
adc
or
jns
inc
std
ficoml
data16
cmpsb
pop
adc
lea
jae
bound
lret
rcrb
in
lock
iret
jl
outsb
sbb
push
popa
and
arpl
loope
mov
aaa
sbb
xchg
mov
aad
cld
xor
out
xchg
adc
xor
stos
mov
dec
loope
pop
push
sub
insl
loopne
loopne
loop
jne
mov
cld
jbe
movsb
in
inc
arpl
aad
pushf
dec
imul
or
rcrb
push
movsb
fs
int3
popf
mov
mov
repz
cld
vphaddubd
xchg
movsb
inc
imul
arpl
das
push
cltd
xchg
mov
or
mov
or
std
ljmp
inc
mov
cmp
not
sbbb
add
ret
dec
leave
cmp
rclb
pop
xor
jl
out
pop
jmp
ret
or
push
fstpt
popa
lds
int
or
add
daa
xor
mov
add
fs
testl
aaa
mov
dec
xor
jle
pop
clc
lods
push
testb
xchg
pop
fnsave
pop
jbe
mov
jns
call
jge
mov
rol
pusha
cmpsl
jg
mov
mov
repz
push
or
popa
cld
addr16
and
xchg
cld
xchg
mov
inc
mov
dec
stos
mov
ds
outsl
into
xor
sbb
mov
shlb
push
lock
sti
sub
push
pop
jmp
rorb
mov
incl
sub
jp
pop
insb
push
inc
pop
dec
jb
cmpxchg
jg
xchg
pop
js
add
and
scas
pop
popf
and
push
mov
lock
sbb
inc
or
dec
dec
xchg
cld
cs
jge
fstpl
dec
jnp
popa
push
call
xchg
mov
fdivp
and
test
mov
cli
push
jg
mov
stos
ss
lret
cmp
xor
xchg
in
nop
popf
cli
sub
sbb
scas
mov
das
or
jns
mov
in
sti
mov
cwtl
sbb
imul
lret
ja
rol
imul
cmpsb
xchg
vmread
or
sbb
roll
adc
xor
roll
or
mov
shl
push
mov
push
adc
sbb
sbb
pop
dec
or
test
pop
adc
adc
pop
jle
and
dec
xlat
sub
and
ja
cmp
or
or
sbb
int
inc
jne
pop
aaa
pop
ja
push
pop
cmpl
dec
fs
push
inc
cld
push
js
mov
mov
adc
ret
ja
jg
icebp
roll
ja
cmpsb
dec
shl
or
shr
inc
adc
mov
ret
jno
lds
xchg
in
mov
imul
inc
mov
js
push
mov
dec
push
lea
add
mov
xchg
cltd
and
push
or
out
adc
iret
pop
idivl
and
add
cs
adc
or
add
scas
cmp
push
fistl
inc
jl
jb
dec
push
stc
data16
adc
fnsave
xor
pushf
movsb
sub
or
cltd
movsb
mov
sarb
jge
mov
adc
loop
sbbl
ds
cwtl
sub
adc
mov
repz
sahf
mov
scas
adc
les
icebp
jnp
jg
insl
inc
je
lods
dec
xorb
xchg
popa
mov
push
out
and
jno
or
sub
or
adc
mov
xchg
jp
call
mov
jecxz
popa
push
dec
lcall
hlt
sub
movsb
and
outsl
push
mov
mov
jmp
in
in
out
fbstp
pop
lock
xchg
jg
sub
sti
cltd
int
push
mov
or
popa
lds
mov
pop
inc
sub
lcall
xchg
xor
pop
ficoml
sbb
cmp
push
pop
clc
sbb
fimuls
push
lods
xlat
test
sub
cmp
mov
daa
outsl
fcmovne
sub
dec
xchg
in
daa
stc
pop
lcall
rolb
mov
xor
addr16
lret
pop
mov
inc
gs
pop
fcompl
sub
jl
stos
addr16
xor
cs
pop
inc
cmc
roll
pop
dec
mov
push
and
inc
cmpl
stos
dec
cmpsb
push
cmpb
xlat
mov
mov
ja
xor
push
fwait
sub
outsb
scas
jp
push
adc
ja
out
cmp
cmp
cmpsl
adcl
clc
inc
std
xchg
in
dec
push
fadd
cltd
sub
add
sub
xor
lock
les
movl
dec
or
add
push
or
and
sub
addr16
pop
jnp
js
test
mov
aas
addb
xchg
sti
sub
cmp
fisttpl
xchg
adc
push
sbb
mov
mov
cmc
push
stos
fadds
daa
pop
and
jl
add
jo
push
mov
out
aaa
jno
jbe
stc
fs
stos
sbb
movsb
sub
std
lods
sub
fcoml
xor
mov
inc
inc
sti
dec
or
pushf
subl
inc
rclb
pop
mov
mov
fsubrl
cltd
pop
test
lea
mov
into
adc
xor
add
insl
sub
stos
sub
pop
push
adc
dec
pushf
or
xor
xor
mov
mov
shr
movsl
jmp
jb
xor
cld
adc
push
sbb
cmp
push
add
fdivs
add
xor
xor
cs
dec
mov
jnp
sbb
ljmp
lahf
vdivps
inc
aas
xchg
mov
cmp
push
rcr
pop
xor
repz
fwait
jle
sub
lods
jmp
clc
xlat
lea
fldt
movsb
mov
pushf
xchg
cmc
int
push
xchg
pop
inc
popa
lret
inc
xchg
xor
mov
ret
jl
pop
xchg
repz
je
mov
jecxz
dec
outsb
lret
pop
jns
mov
out
lds
dec
dec
lock
adc
push
das
test
imul
scas
popa
movsb
fstp
and
add
adc
dec
jns
sub
and
test
test
cld
loop
outsb
push
xor
in
push
mov
loop
jmp
push
out
out
lahf
or
test
and
or
outsb
aaa
adc
mov
pusha
add
xlat
ss
ja
sub
test
pop
cmpsl
jl
repz
cmp
mov
mov
addr16
push
add
in
mov
lds
ficoml
jp
add
shlb
or
xchg
mulb
int3
mov
cmp
adc
cld
add
shlb
jg
or
dec
add
xchg
lret
and
push
cmp
adc
mov
imul
push
stc
jmp
ljmp
shl
flds
cld
sbbb
fstps
add
test
jnp
aaa
dec
inc
or
std
movsl
lods
xchg
push
out
adc
lods
inc
das
testb
add
lret
roll
and
jo
hlt
sbb
mov
out
cmc
sbb
jg
outsb
push
mov
test
ret
outsl
fstpl
jp
adc
push
out
push
mov
hlt
mov
pop
out
dec
in
sub
fwait
nop
mov
jge
les
mov
gs
test
xchg
add
shrb
pop
frstor
push
xor
push
hlt
sahf
push
jno
push
js
aam
inc
fistps
dec
popa
jnp
loop
push
jb
stos
insl
imul
subb
stos
jbe
inc
fcomps
sbb
jnp
cmp
mov
add
jb
cmp
xchg
ret
int
xchg
mov
out
aad
cld
fnsave
xor
gs
mov
cld
mov
cmp
mov
jle
sar
cwtl
cmp
mov
jbe
mov
loopne
out
icebp
dec
je
inc
adc
ljmp
insb
dec
enter
sysret
arpl
fwait
sti
pop
nop
pop
and
test
mov
xor
or
iret
ljmp
add
ljmp
cwtl
xchg
mov
mov
mov
ret
ftst
or
mov
ret
pop
pop
sub
jbe
or
jge
sahf
cld
fisubs
push
push
mov
push
shrl
fidivl
and
lea
fildl
jmp
sbb
fs
popf
mov
jmp
xchg
imul
jo
inc
sti
pusha
mov
jge
lret
inc
pushf
decb
daa
lds
xchg
je
dec
lcall
test
mov
xchg
adc
adcb
inc
mov
push
aad
fidivrl
push
imul
dec
dec
int
xor
sbb
adc
mov
cmp
sbb
shrl
stos
or
jno
std
lods
loopne
pop
jmp
xchg
sub
xchg
cwtl
jmp
clc
sbb
int3
fcompl
aaa
inc
scas
or
xlat
cs
push
lods
inc
vcvtsi2sdl
push
scas
push
cmp
cmp
or
ret
out
cmpsl
incl
outsl
loop
pop
imul
add
pop
addr16
or
inc
mov
xchg
add
sub
mov
xchg
insl
pop
rcll
negb
sbb
mov
pop
jge
aam
shll
xchg
lods
dec
and
leave
mov
lods
dec
aad
lret
xchg
sbb
dec
jne
int
aad
jae
xor
dec
push
mov
and
sub
sbb
adc
mov
ret
rcl
out
mov
adc
pop
cmpsb
adc
and
mov
adcb
das
imulb
test
jg
out
mov
rclb
mov
shrb
lock
push
inc
lock
cmp
xchg
in
pusha
lock
stos
cli
pop
mov
scas
jne
and
out
cmp
add
mov
scas
or
daa
push
sbb
mov
cmc
push
sbb
mov
movsl
rorl
jne
and
jnp
push
pop
dec
add
movb
sub
ret
std
clc
stc
cmpsl
imul
cmp
fwait
ljmp
sahf
pusha
ja
insb
pop
fdiv
scas
cmc
in
or
xor
jge
jge
jp
cmp
sbbl
inc
xchg
push
lcall
mov
imul
jp
sbb
adc
sub
xchg
in
and
fs
pop
jp
loop
out
aad
lcall
xor
push
cmp
jns
pop
repz
mov
cmp
xor
jle
in
enter
dec
pushw
jge
andl
pushf
clc
loopne
into
sbb
lods
and
jecxz
sbb
int
push
cmpsl
adc
or
ret
ror
jmp
roll
xor
mov
jbe
daa
std
sti
fs
sarb
xlat
push
xor
sub
subb
jbe
and
sbb
pop
scas
and
mov
mov
fstps
lret
out
inc
orl
movl
mov
les
ja
adc
scas
js
cmp
jecxz
mov
bound
or
push
insb
mov
push
xchg
loope
mov
pop
orl
lahf
push
or
push
js
xorb
push
lods
cld
bound
mov
jp
dec
ljmp
outsl
int
lcall
adcb
dec
xchg
add
fnstsw
ror
sbb
test
or
jne
inc
fiadds
fwait
adc
js
lret
or
jl
fcomi
mov
roll
jp
test
cli
jg
sbb
or
arpl
and
aam
cli
cli
xlat
jge
into
repz
pop
fidivl
ds
js
movsl
push
ss
or
or
push
movsl
inc
cmp
leave
les
and
or
sub
pop
iret
idiv
xchg
push
sub
hlt
pop
leave
cmpsl
stos
ja
jns
cli
adc
jne
bnd
arpl
xor
xchg
ror
testb
in
repnz
push
mov
sbb
lods
aad
dec
enter
cmp
jl
xchg
push
lcall
xor
jno
sbb
xor
in
out
xor
jns
mov
fisttps
fistpl
sub
cld
loopne
es
inc
outsl
imul
mov
cmpsl
mov
lcall
lcall
cmc
and
fldt
xchg
jg
xor
pop
aam
fs
call
inc
sub
ret
mov
adc
call
aam
jge
push
fdivl
cmp
rcrl
push
movsb
pop
aam
ss
adc
xchg
dec
js
iret
mov
imul
inc
ja
arpl
ror
popa
xchg
fstps
movsb
pop
mov
je
in
arpl
dec
jo
jmp
sub
push
aad
xchg
xor
scas
adcl
push
sub
bound
mov
les
outsl
leave
lcall
adc
inc
cmp
xchg
outsb
out
push
in
outsb
in
dec
fcompl
adc
inc
stos
out
in
pop
or
xchg
jno
mov
pop
subb
jbe
mov
adc
xor
jne
sbb
lods
pop
xchg
into
push
add
into
xor
jb
pop
lahf
notl
xchg
inc
icebp
pop
gs
enter
pop
jg
pop
push
push
ljmp
jg
stos
inc
mov
shll
aam
and
enter
mov
mov
daa
int
fbld
pop
bound
add
pop
add
loope
dec
xlat
push
sub
pop
sbb
lahf
xchg
in
cmp
cld
mov
popa
popf
adc
xor
mov
cmp
aaa
insl
in
lods
sbb
es
enter
pop
sub
mov
out
aas
je
jno
inc
or
mov
enter
lds
xchg
fwait
push
cmpsb
outsl
adc
xor
aas
jbe
scas
loopne
ja
xor
sub
dec
jmp
mov
xlat
out
cmc
es
sub
outsb
sub
and
push
pop
and
push
jno
jnp
dec
or
repz
jp
pop
popa
inc
lods
sub
ret
lret
test
mov
aas
xchg
dec
lods
in
lret
mov
mov
lock
rcl
pop
shlb
ds
add
cmp
xorb
xchg
xor
shll
lds
or
and
sbb
mov
shrl
add
inc
out
sti
jno
ret
mov
adc
loopne
mov
enter
lahf
jns
cmc
cli
out
inc
mov
outsb
mov
mov
dec
mov
in
popf
push
sbb
dec
aaa
pop
icebp
js
and
shrl
adc
mov
mov
nop
mov
mov
jl
jmp
ret
xchg
out
movsl
data16
push
xor
jmp
jl
pop
nop
lret
int
cmp
or
xchg
es
jmp
sub
sti
lods
sub
inc
add
lret
and
fwait
in
test
mov
out
fsts
sub
dec
xchg
dec
outsb
dec
and
imul
dec
mov
mov
mov
lods
cmc
pop
testb
mov
fisttpl
negb
in
push
mov
std
js
push
enter
adc
xchg
lahf
fisubrl
sahf
sti
mov
pop
loope
stos
mov
sbb
cmpsl
dec
push
cltd
sbb
sbb
sub
ror
movsl
xchg
or
outsl
push
fldlg2
push
jecxz
mov
sti
xor
mov
add
push
into
sub
je
repz
enter
sub
pop
sbb
popa
js
add
in
in
daa
adc
jge
dec
lods
decl
xor
xorb
adc
jne
lret
push
ljmp
or
mov
out
push
sbb
insb
rcl
outsl
shlb
mov
push
in
sub
and
inc
pop
sub
push
lock
cwtl
imul
and
or
dec
adcl
xchg
jb
push
insb
push
roll
jnp
cmp
popf
aaa
movsb
clc
cmpsb
xchg
jae
sbb
push
ja
popa
pop
loop
mov
push
jecxz
mov
mov
and
mov
test
jbe
popa
and
xchg
xor
pop
ja
pop
rcrl
or
nop
lret
xor
sub
or
dec
xor
jmp
push
mov
jae
pop
mov
push
lret
out
cwtl
mov
lahf
sub
jb
outsb
aad
into
pop
dec
xor
out
mov
aad
into
xor
aam
cmp
rcr
cwtl
pop
lret
adc
add
fisubs
cs
stos
cld
lret
fstpl
cmp
pop
bound
shrl
or
dec
inc
imul
pop
sbb
cld
sub
jg
push
insb
xchg
pusha
hlt
clc
xchg
insb
jge
jne
push
or
cs
out
icebp
rcrl
pop
out
and
cmp
and
adc
add
lahf
rorl
stc
and
sub
or
xchg
xor
int3
and
and
mov
out
cltd
cltd
dec
pop
fistpll
add
outsl
jl
cmp
push
pop
test
cmp
adc
xlat
mov
adc
ds
fisubl
addr16
jecxz
and
push
pop
and
dec
mov
cli
cmp
pop
cmp
stc
repnz
push
cli
popl
popf
mov
movb
cmc
pop
pop
lahf
into
lods
xchg
mov
sbb
inc
lock
jmp
lcall
adc
push
push
arpl
inc
cs
bound
mov
jno
jmp
push
and
and
sbb
sub
int3
aaa
jno
jne
pushf
imul
into
test
mov
push
jg
gs
add
lret
js
lcall
movsl
addb
cmpsl
jo
add
rorb
in
xchg
adc
jno
dec
push
scas
cmpsl
aad
adc
mov
into
jne
inc
lcall
repnz
jnp
mov
inc
clc
fsubr
iret
pop
jb
mov
outsl
pop
lea
addb
sbb
lcall
lret
and
test
and
pop
mov
lahf
add
not
pop
cwtl
out
insl
insb
leave
pop
cmp
mov
in
daa
popf
mov
loope
xor
sbb
popl
jecxz
pop
dec
sbb
cmp
xlat
xchg
and
mov
scas
aad
adc
pop
ds
sub
in
int3
imul
std
std
div
andb
loope
push
adc
fwait
sub
sbb
je
bound
les
aas
fisttpll
sbb
sbb
mov
imul
ret
jb
inc
xorb
leave
push
mov
loope
in
lock
std
add
daa
fbld
jg
xchg
sub
dec
stos
ljmp
dec
stc
in
jg
test
movsb
pop
sbb
sbb
lret
stos
inc
mov
cmpsl
out
dec
int3
lahf
in
rol
cmp
scas
mov
rolb
shr
aam
gs
sti
sub
and
mov
xchg
int3
push
pop
sti
add
mov
inc
sbb
push
mov
jnp
pop
mov
or
mov
test
imul
xlat
es
es
mov
or
adc
lock
cmp
xor
mov
int
mov
aam
jmp
mov
out
inc
in
sti
sub
incl
loop
ds
adc
push
flds
cmc
pushf
in
cmc
xor
jecxz
mov
leave
mov
addr16
push
ljmp
pop
push
jns
jbe
mov
pop
adc
push
add
ds
out
imul
mov
sti
aas
push
cwtl
lea
push
xchg
xchg
sbb
loopne
mov
int
mov
xlat
adc
xor
mov
cs
xchg
out
sbb
in
lds
dec
push
xor
mov
sub
fistps
test
jmp
push
call
cmp
xor
xor
arpl
mov
cwtl
fiaddl
jecxz
in
push
mov
out
jge
or
jb
divb
ret
add
sub
pushf
xor
lret
lahf
ficoml
sbb
movsb
lds
jnp
lahf
cmp
sub
loope
negl
dec
add
mov
jnp
inc
sar
mov
jp
dec
popa
clc
inc
inc
mov
add
fildl
repnz
or
or
movb
lods
pop
jns
in
out
shr
and
punpcklbw
insl
mov
and
pop
scas
mov
outsb
lds
pop
pop
lock
mov
and
bound
sub
add
jo
push
mov
shrb
add
out
jp
movsl
mov
lret
loop
xor
cmpsb
xor
sub
cld
clc
pop
scas
ljmp
pop
in
imul
pop
mov
sahf
xchg
insl
mov
jg
js
ss
mov
mov
or
sub
xchg
decb
ds
pushl
sar
mov
int3
ljmp
sbb
ficoms
add
jns
xchg
lcall
imul
sub
push
sub
mov
sahf
outsb
mov
and
je
insb
sub
bound
dec
cmp
or
fistpl
sbb
into
lcall
shl
pop
popf
fucom
xor
xlat
movsl
xlat
add
pop
int3
xchg
dec
rclb
ficomps
xchg
push
and
fcmove
mov
pushf
mov
mov
lret
scas
mov
adc
adcl
lret
cmp
pop
inc
push
push
dec
sub
gs
into
xor
jo
inc
add
jb
jp
add
or
pusha
mov
push
xchg
insl
fdivs
fs
loop
inc
sbb
loopne
jo
popf
scas
mov
pop
dec
dec
pusha
jmp
xchg
jno
pop
pop
ret
test
mov
rclb
inc
into
scas
scas
xor
jl
mov
dec
lahf
ds
jle
scas
bound
xchg
push
mov
dec
lea
dec
dec
jbe
cmc
sti
mov
add
dec
pop
jb
or
test
ret
mov
pop
cmp
push
jg
mov
jnp
stos
fcomp
push
mov
ss
rcll
icebp
jge
rorb
xchg
pop
loope
cmp
mov
add
push
cld
addr16
sub
mov
cmp
push
cmp
test
sahf
pop
xor
rorl
subb
pusha
imul
fcoml
testb
and
jge
xor
cld
stc
xor
out
jnp
les
data16
int
mov
sbb
jg
je
clc
or
or
out
lahf
mov
adc
pushf
fisubl
pop
imulb
stc
xor
jecxz
shll
inc
fwait
jns
dec
loop
test
adc
push
cltd
cltd
inc
aaa
xchg
xchg
outsl
andl
data16
mov
fs
mov
dec
fildl
and
adc
insb
mov
icebp
clc
cmp
filds
adc
fldl
inc
cmp
mov
stc
aad
jecxz
mov
push
jno
and
fcoms
lret
ret
jp
fadds
mov
aaa
mov
lods
adc
inc
sahf
ficoml
loope
int3
iret
cmp
int
fwait
shrl
push
arpl
pusha
iret
addr16
push
inc
mov
divb
xchg
imul
mov
jge
mov
mov
mov
inc
in
or
dec
pop
xor
add
lahf
adc
enter
push
call
in
stos
addr16
shll
rcrb
mov
xor
sub
push
cmp
inc
mov
adc
pop
ret
or
xor
mov
inc
pop
mov
pusha
mov
push
in
jbe
movsb
cs
sub
mov
fistpl
repnz
std
out
es
sbb
cmp
push
ss
mov
add
dec
ljmp
mov
sahf
imul
xchg
in
popa
testl
arpl
mov
pushf
lahf
cmp
imul
ds
pop
loope
in
nop
mov
jnp
cmc
pop
out
dec
mov
lahf
xor
shll
dec
adc
or
jo
cmpsb
ror
add
sub
dec
fidivrl
mov
and
mov
sbb
lock
and
dec
inc
xlat
insl
mov
adc
pusha
push
or
loop
fistpll
cmp
adc
sub
jg
add
push
xchg
call
popf
clc
or
xchg
outsl
and
xchg
sub
and
jmp
sub
sub
fiaddl
out
ja
or
push
fs
mov
push
cmpsl
push
or
xchg
out
cli
icebp
cld
call
je
and
xchg
aad
in
mov
jo
pop
sti
insl
insb
psubq
loope
sub
inc
fisttpl
cmp
xchg
call
lret
push
pop
addr16
aad
lret
sub
cmc
pop
shl
push
xchg
jmp
ffreep
into
sub
mov
lret
sbb
adc
pop
lds
repz
test
cmp
dec
rol
or
std
nop
xchg
mov
pop
or
lcall
xor
add
pop
jg
loop
xor
pop
jecxz
addb
lret
inc
les
insb
fadd
sbb
jmp
xchg
push
call
aas
mov
pusha
sbbl
dec
daa
xchg
fisttpl
insb
repz
pop
xchg
aas
cmp
arpl
addr16
sub
lods
insl
dec
sbb
lret
push
dec
or
movsb
jp
shl
daa
cmp
sbb
mov
fsubs
lcall
jae
pop
das
rcrb
lret
in
pop
clc
xor
cmpsb
ss
mov
mov
cwtl
xor
scas
imul
and
xor
in
mov
loopne
imul
inc
lcall
cltd
and
mov
bound
xorl
lcall
pop
pushf
cmp
cld
push
jp
gs
xor
jb
insb
out
inc
sti
and
lret
dec
or
mov
inc
mov
inc
hlt
jns
cmp
sahf
add
lret
jno
dec
cmpsl
mov
jle
or
sarl
jmp
fsubr
lea
push
pusha
mov
fwait
jmp
je
stc
sbb
sti
xor
mov
getsec
and
xchg
mov
xor
movsb
loop
pop
outsl
enter
je
or
inc
and
jl
mov
mov
pop
call
pushf
ja
mov
cltd
jnp
int
or
and
icebp
aam
ds
pop
or
bound
lds
test
mov
mov
ljmp
roll
xor
pop
sub
lds
out
jge
push
mov
divl
subl
sti
cmpsb
push
mov
fdivr
adc
imulb
fcmovnu
or
outsl
sub
or
xor
aaa
sub
mov
cld
sti
pop
mov
xchg
stos
jg
insl
test
mov
mov
add
mov
sbb
inc
push
fstpl
lock
cmpsl
out
mov
clc
pop
ret
jbe
incl
pop
push
dec
sub
xor
jns
adc
gs
mov
and
cmpsl
pop
mov
lds
xor
sarb
out
out
sbb
jns
mov
fisttpl
gs
dec
or
push
cli
sarl
orl
stos
push
gs
mov
iret
ss
iret
into
fwait
jns
aad
mov
xor
lret
mov
and
ljmp
mov
leave
loope
push
lods
add
movsl
pop
push
mov
add
pop
and
sbbl
mov
and
dec
adc
mov
sbb
into
out
adc
in
and
shl
dec
push
and
into
clc
dec
jmp
dec
jb
xor
out
xlat
daa
push
lea
addr16
hlt
cmp
in
popf
arpl
push
mov
inc
stc
inc
adc
mov
ds
lock
mov
lock
aad
push
pushl
popw
pop
cmpsl
enter
mov
pusha
adc
cmp
lret
imul
push
adc
cmp
rcl
fadd
cli
xchg
cmp
add
jg
push
hlt
adc
xlat
dec
dec
push
cmc
inc
dec
loopne
and
pop
sub
test
std
incb
cmp
mov
and
fcmovu
je
movsl
inc
cmp
mov
xor
adc
push
into
outsl
in
cmp
int3
push
pop
jns
and
xor
out
sub
int3
outsb
rcll
clc
cmp
cwtl
pop
mov
mov
outsb
or
push
mov
jl
mov
lods
daa
movsb
movsl
xchg
in
lock
add
push
push
mov
lea
int3
loope
mov
mov
fwait
push
int
ss
fldcw
xorl
or
es
icebp
test
add
add
jp
dec
xchg
xchg
or
testl
inc
sbb
ljmp
sub
icebp
cltd
out
outsl
mov
arpl
jnp
mov
ja
ja
push
xor
imul
stos
hlt
iret
inc
xor
pop
mov
push
outsl
sbb
in
push
inc
xchg
and
mov
cmpsb
jb
icebp
xchg
inc
mov
mov
dec
mov
mov
cmc
dec
pop
lods
sub
and
push
in
cld
pusha
or
dec
mov
mov
out
mov
pop
mov
pop
mov
shlb
jl
xor
shll
jg
dec
jae
push
or
popf
popa
ret
stos
ficoml
out
test
leave
std
mov
data16
ljmp
dec
lahf
lcall
fistpll
mov
andl
cli
mov
mov
xor
mov
int3
in
push
push
mov
aaa
cmpsb
mov
dec
insl
mov
jbe
cmpsb
adc
popf
sub
cmp
les
repz
push
xchg
adc
shr
cmp
lcall
rcrb
pop
mov
inc
sub
subb
nop
xchg
add
mov
mov
int3
jp
fistpl
push
das
mov
sarb
xchg
xor
test
push
cmp
movsb
mov
les
inc
mov
xor
out
in
dec
test
or
sbbb
in
js
and
fdivrs
sub
jl
lock
sbb
je
and
xor
aas
stos
sub
lret
sti
inc
je
sub
add
scas
and
xchg
loope
ficomps
out
icebp
xor
inc
inc
dec
xorb
sub
pushf
pop
roll
pushf
or
cmp
sbb
xor
outsb
xor
ljmp
push
jnp
xchg
imul
mov
cs
sub
pop
gs
xchg
cli
cltd
movsb
sub
pop
addl
jne
je
test
jno
outsb
push
aas
rorl
inc
out
add
xchg
mov
xchg
pop
daa
frstor
test
pusha
mov
sbb
das
pop
add
pop
pop
mov
jae
adc
cmp
mov
push
xor
and
fcoml
cmp
lods
iret
cs
iret
sarb
push
out
dec
adc
mov
pop
mov
xor
aad
std
insb
mov
sub
fbstp
aam
loope
push
testl
xor
mov
pop
jge
sub
gs
jmp
fbld
and
xchg
enter
outsl
pop
rcrl
mov
push
ds
push
ret
lock
loope
pop
jecxz
and
js
cmc
in
outsl
push
jbe
xchg
hlt
roll
into
dec
and
add
or
add
rsqrtps
scas
loopne
sub
ret
mov
xor
mov
mov
daa
cmp
mov
sbb
stos
mov
xchg
push
inc
imul
mov
add
adc
pusha
adc
xchg
pop
icebp
mov
subb
shll
add
scas
gs
jp
xchg
enter
mov
js
dec
in
xchg
jae
mov
sub
cs
out
rolb
flds
decb
add
push
pop
xor
adc
pop
push
outsb
pop
insl
pop
add
mov
sti
iret
sub
dec
push
les
xchg
rcrb
and
int
dec
mov
mov
xor
adc
xor
out
mov
mov
xchg
leave
insl
or
fcomps
mov
sub
lods
mov
add
push
xchg
jbe
xor
xchg
add
xchg
adc
mov
mov
nop
sbb
mov
dec
inc
mov
xchg
lcall
fistpl
dec
fsubrs
push
mov
mov
clc
ss
aaa
jmp
xor
icebp
mov
jle
push
and
movsl
inc
std
jmp
dec
pop
repnz
scas
or
jge
fisubrl
xchg
mov
sub
pop
mov
push
xchg
or
out
mov
push
push
lods
mov
icebp
xchg
sbb
fldl
sub
inc
pop
add
shll
mov
cmp
out
scas
mov
sbb
inc
std
icebp
jecxz
sbb
mov
sub
mov
out
jne
aaa
ret
xor
fsubrl
mov
data16
int3
push
push
cmp
or
sbb
jmp
cmp
iret
rorb
popf
in
sbb
xor
and
test
mov
out
testb
push
iret
xchg
sbb
aam
cmp
dec
or
aaa
mov
ss
sbb
inc
jns
or
fs
iret
stos
aad
mov
ja
frstor
sub
pop
sbb
inc
aaa
js
mov
mov
and
movsl
mov
or
test
xor
pushf
jl
out
pop
popl
or
and
mov
mov
out
sbbl
loopne
shrl
or
mov
lea
stos
ss
dec
call
pop
push
les
xchg
dec
push
into
jae
lahf
punpckhdq
xor
push
pop
cli
inc
push
sbb
sahf
ret
decl
ret
mov
mov
xor
rolb
mov
shll
adc
in
jl
adc
inc
outsl
add
adc
cmp
imul
pop
lret
adcl
jne
test
mov
scas
lcall
push
mov
cmpb
out
adc
fiaddl
or
popa
push
outsb
cmpsl
inc
mov
or
lret
pop
ror
scas
sbb
push
bound
aam
mov
push
std
fldcw
movsl
and
test
scas
loope
andb
mov
pop
lret
int3
std
and
jge
daa
jp,pt
xchg
add
mov
jbe
sub
push
sub
addl
mov
nop
repz
repz
inc
ljmp
icebp
mov
insb
sbb
lods
mov
insb
mov
xchg
dec
mov
jne
adc
into
pop
imul
jg
fcmovnb
add
cmp
imul
mov
inc
pop
lret
into
es
filds
ret
sub
cmpsl
inc
aaa
dec
pop
or
jne
ss
mov
and
cmpsl
in
xchg
movsb
movsl
fmull
adc
enter
popa
rolb
jmp
lds
pop
and
inc
insl
mov
dec
cwtl
pop
push
cwtl
push
ljmp
lods
std
subb
and
adc
test
enter
rorl
dec
push
dec
inc
jo
sub
outsl
insl
mov
cmp
movsb
fldcw
subl
popa
cmp
mov
cld
icebp
aam
ljmp
xchg
or
xchg
sbb
sub
push
jg
jmp
mov
mov
arpl
mov
movsl
fists
jbe
pop
mov
pop
mov
push
push
xchg
int
js
jnp
sti
jne
scas
sahf
jns
add
fcomi
xor
or
inc
test
std
cmp
mov
in
inc
les
addr16
in
mov
orb
daa
rclb
sub
cmc
pop
jno
push
dec
fistpll
js
and
ljmp
xor
cli
mov
xor
xor
pop
lock
xchg
movb
push
xchg
outsb
xor
mov
mov
fisttps
movsl
std
push
nop
adc
idivb
and
outsb
xor
xchg
addb
aad
xchg
lcall
add
gs
js
test
scas
lret
adcb
xor
test
pop
enter
xchg
add
aam
jnp
icebp
xor
inc
jge
std
test
decb
pop
pop
loopne
inc
xor
mov
pop
arpl
ds
sub
sub
stc
sti
add
shrl
les
add
and
push
ds
test
inc
xor
repnz
in
and
cld
and
mov
adc
mov
sbb
mov
push
and
or
ljmp
ja
xorb
fstpt
push
and
push
mov
or
push
aaa
mov
mov
hlt
int3
rep
cld
xchg
inc
inc
xor
inc
cmp
cmp
cld
mov
repnz
test
outsb
pop
lds
jecxz
sahf
pop
lock
dec
xor
push
or
fisttps
dec
jp
pop
fcomip
mov
push
fstpl
out
push
pop
or
xor
xchg
loope
and
pop
and
jo
insl
cli
les
sbb
lahf
stos
pop
inc
ret
xlat
repz
ljmp
out
xlat
addr16
jg
add
ret
adc
sbb
cmp
or
push
mov
repz
lahf
lea
jmp
daa
mov
lds
sub
xchg
pop
mov
pop
inc
mov
add
leave
mov
movsl
imul
sarb
mov
and
inc
repz
xchg
cld
jne
ss
dec
jle
xor
in
stc
dec
psubd
pop
mov
hlt
in
cmpsl
popa
pop
mov
xchg
in
scas
xor
rolb
insb
imul
jp
mov
jbe
mov
fidivrl
mov
push
les
es
add
call
jnp
xchg
jns
inc
outsl
incl
or
int
mov
cmpl
mov
popf
pop
cmpsl
lods
ss
ficompl
mov
push
ret
xlat
push
testl
in
addr16
adcb
jg
aam
push
or
out
mov
lods
popf
push
xchg
and
push
sbb
xchg
shll
cmpl
push
popa
mov
or
or
out
adc
add
sub
ror
roll
hlt
jnp
xchg
adc
inc
mov
inc
push
std
inc
es
enter
les
jl
inc
or
inc
cmp
push
jp
mov
inc
pop
mov
out
out
je
cmp
xor
xchg
sub
insb
mov
fdivr
inc
nop
out
mov
gs
mov
repz
xchg
xor
mov
insb
idiv
fstl
aam
dec
xor
loope
dec
pop
mov
xchg
fsubrl
push
cs
fiadds
mov
dec
push
cltd
dec
clc
dec
sub
rorb
mov
rorb
mov
lea
dec
aad
pop
ljmp
mov
push
mov
inc
fwait
iret
xor
dec
inc
mov
push
dec
adc
pop
pop
jb
dec
cld
das
or
push
jg
in
arpl
pop
xchg
xor
stos
or
push
fwait
rcrb
inc
pop
cld
and
test
jae
cmp
scas
repz
out
int3
jmp
dec
bound
gs
div
push
imul
lcall
mov
int3
xor
xchg
loopne
or
pop
pop
fcomip
scas
jns
and
jg
push
arpl
xor
outsb
pop
xchg
or
push
mov
shrl
xchg
xchg
aaa
sbb
push
call
pop
mov
leave
ds
jae
iret
leave
dec
jno
mov
xor
xchg
pop
sub
cmp
mov
fistl
push
inc
xchg
sarl
mov
lods
iret
jno
mov
sahf
mov
outsl
imul
pusha
std
mov
and
std
pop
aam
test
call
sbbl
xor
or
fisubrs
mov
callw
inc
arpl
cwtl
or
sub
call
dec
out
xor
stc
scas
sub
cwtl
dec
out
fidivl
repz
out
xlat
cmpsl
mulb
xchg
xor
test
es
mov
cld
test
ficomps
inc
inc
mov
sbb
es
cwtl
enter
test
jg
xor
sbb
push
sbb
jne
leave
adc
divl
iret
mov
sbbb
jg
repz
test
jl
je
or
dec
in
pop
jp
jmp
push
das
push
dec
in
inc
dec
ds
loope
cmpsb
or
mov
loop
lahf
addr16
mov
or
and
leave
jecxz
insb
inc
jne
movsl
icebp
cltd
xlat
mov
xchg
push
negb
dec
gs
sbb
inc
mov
popf
cmp
loop
pop
scas
outsl
rclb
inc
xchg
in
cs
test
or
cmp
jecxz
xor
sub
scas
call
add
add
popf
cmpsb
shlb
int
in
cmp
mov
or
inc
xchg
xchg
enter
push
inc
mov
stos
lret
sub
xor
pop
sti
addr16
aaa
out
fiadds
xchg
add
xor
mov
adc
fldt
lds
lret
push
popf
sub
mov
jne
push
pop
dec
push
test
mov
pop
ss
dec
popf
addr16
lods
flds
pushf
inc
fwait
lahf
inc
cmp
inc
lahf
mov
mov
push
out
js
cs
mov
icebp
shrb
fucomi
jnp
orl
stos
pop
dec
sti
jecxz
jb
dec
push
jae
xchg
clc
sar
xchg
ljmp
fadds
test
push
jg
jle
or
add
bound
cwtl
outsb
andl
ja
pop
pushf
sub
xchg
pushf
pop
xchg
ret
push
and
push
lods
cmpsb
dec
mov
pop
push
mov
cmpsl
sbb
insl
aam
mov
aas
inc
and
pop
test
js
hlt
jbe
and
and
jecxz
add
stos
insb
sbbl
mov
mov
call
nop
and
dec
mov
or
fmull
in
movsb
nop
push
push
jecxz
and
repz
xor
sub
lock
sub
mov
mulb
push
daa
and
push
inc
pop
sbb
xor
roll
out
scas
in
mov
imul
inc
ja
out
inc
int
sbb
jne
arpl
mov
jge
cs
dec
aad
pop
jae
aad
xchg
popa
cmp
jle
cmpsb
cmp
push
insl
sbb
mov
out
mov
sub
mov
push
aas
cmp
and
add
push
xor
pop
imul
fsts
aad
arpl
aad
shl
bnd
or
sub
lds
imul
int3
lods
pusha
inc
pop
mov
mov
jle
out
mov
dec
dec
mov
ret
and
cli
fisttpll
dec
daa
push
pop
xchg
pop
lods
mov
adc
loope
rorl
bound
dec
pop
enter
pop
pop
and
dec
jecxz
push
mov
jno
adc
or
pop
jne
ret
pop
fisubs
mov
cmp
inc
popa
repnz
mov
ja
sub
scas
stos
and
movups
int
ds
inc
scas
add
mov
lret
pop
and
mov
lret
aad
jg
add
pop
ja
jnp
or
jle
dec
in
fidivs
adc
dec
jnp
icebp
sbb
pop
lahf
ds
call
pop
pushf
push
inc
add
pop
test
add
shll
je
pusha
add
cmp
sbb
or
insb
push
jnp
or
mov
popf
cld
inc
imul
push
repnz
out
les
and
les
decb
xchg
testl
fcoml
cli
add
push
pop
push
or
pop
mov
sub
or
adc
cmpsb
ret
cs
sub
and
scas
rcrl
imul
mov
shrl
mov
sub
data16
cld
lods
xchg
out
add
xor
dec
sbb
jnp
pop
in
jb
xor
mov
or
mov
addr16
fldcw
jg
add
pop
inc
mov
pop
jg
xor
sbb
and
clc
xchg
jge
add
push
sub
icebp
rcrl
push
fcomi
mov
pop
pop
xchg
jnp
lcall
das
or
insb
shrl
pop
ljmp
mov
sub
xchg
ja
inc
loop
xor
pop
cs
out
scas
aas
fnstsw
mov
std
in
cmp
mov
loope
sub
inc
loopne
xchg
pop
lods
sti
or
jp
jle
imul
push
xchg
pop
mov
push
aam
int
out
sbb
sub
push
dec
insl
dec
aas
push
jp
mov
jns
iret
jb
jge
pop
inc
test
push
lds
insb
dec
adc
js
push
sub
sti
imul
jae
scas
mov
aam
mov
push
ret
push
jnp
inc
mov
test
sbb
arpl
jmp
lcall
cmpsb
pop
in
fimuls
lahf
mov
xor
cmpsl
lret
out
add
jns
lock
mov
mov
loop
sub
dec
fidivrl
add
rolb
xor
or
sbb
mov
insl
divb
or
lret
roll
mov
xchg
sti
stos
push
ss
test
je
iret
insb
lea
pop
mov
ret
adc
mov
test
adc
push
fcoml
pushf
js
movsl
or
sub
mov
dec
test
hlt
loope
adc
sub
mov
sub
daa
adc
mov
int
mulb
sbb
jg
and
mov
xchg
rcll
cmc
subb
xchg
movsl
jl
sub
adc
cmpsl
mov
add
cwtl
test
pushf
movsl
cmpsb
or
adc
aaa
fnstsw
rorb
test
icebp
adc
pop
push
rcl
dec
fmul
andl
push
push
imul
call
pop
dec
lea
addb
mov
aad
dec
repnz
pop
cmp
sarl
mov
adc
jp
fadd
sub
jae
xchg
sti
lret
inc
ds
std
in
jbe
fs
in
push
lret
push
andl
pop
pusha
and
xorb
stos
mov
push
sbb
aas
xchg
jno
dec
scas
aad
sub
lods
mov
mov
sub
int
xchg
push
lcall
add
mov
push
push
adc
and
outsb
add
mov
icebp
pop
sbb
pop
mov
mov
dec
mov
or
inc
in
lahf
ja
fisubs
xchg
sbb
dec
pop
inc
mov
rcrl
inc
pusha
lea
scas
loope
fldcw
insl
ds
push
push
addr16
mov
xor
cmpsb
inc
imul
orb
gs
jne
mov
sbb
and
mov
push
jns
adc
movb
mov
or
decl
enter
pop
jle
pop
pop
mov
dec
sbb
lret
fisubs
and
lcall
test
xlat
push
xlat
mov
cmc
mov
out
fs
xchg
fmull
jl
loope
addr16
add
mov
out
js
pushf
jg
dec
adc
xchg
xchg
pop
test
lea
add
jbe
sub
sub
test
adc
notb
pop
fnstcw
xchg
mov
and
push
xchg
in
adc
lock
aad
mov
and
adc
je
hlt
cmp
jns
rorb
orl
mov
mov
in
movsl
in
andb
push
mov
nop
imul
mov
lods
mov
gs
push
icebp
addr16
inc
rcll
and
add
pop
ljmp
cld
pop
inc
imul
sub
mov
mov
mov
stos
test
xlat
xchg
xchg
lret
enter
ret
or
dec
inc
aad
outsl
lock
bound
popa
jno
sub
push
mov
loopne
stos
dec
aad
rorl
add
xchg
push
ja
xchg
pop
jo
clc
pop
dec
in
in
pop
inc
sti
sub
jmp
rcrl
add
jb
orb
loopne
and
loopne
push
cmp
int3
xchg
bsr
mov
es
sti
int3
pop
test
and
xchg
jp
push
jmpw
xchg
roll
xchg
adc
and
push
xchg
xor
neg
sbbl
adc
mov
mov
push
into
jb
sub
mov
mov
in
fldl
iret
jbe
js
pop
frstor
xchg
in
and
or
stc
sub
dec
xchg
xchg
movsb
repnz
jnp
inc
loopne
add
test
and
jne
std
push
lods
adc
adc
or
push
es
or
xchg
xor
jmp
xlat
add
sti
inc
mov
sbb
fistps
pop
mov
cli
xorb
xchg
loope
repnz
pop
push
push
je
cltd
test
add
push
mov
in
enter
push
scas
cs
sahf
lcall
scas
stos
inc
cld
dec
cmpsl
popa
movb
sbb
mov
cmp
mov
test
or
jp
stos
or
xlat
push
leave
out
test
pop
repz
data16
jnp
cld
arpl
ss
xchg
adcb
pop
or
xorl
or
lahf
cmp
jb
notl
mov
pop
ds
xor
repnz
and
gs
fwait
daa
lods
or
decb
int
test
inc
fadds
ret
ret
insb
mov
mov
mov
adc
cld
test
sub
repnz
or
or
test
adcb
int3
inc
xor
mov
pop
xchg
xor
sub
pop
sarl
les
lcall
cmp
ret
jmp
push
cmp
mov
cld
aaa
pop
aad
xchg
xchg
and
push
adc
xor
jp
mov
mov
enter
adc
mulb
les
popf
dec
mov
adc
mov
frstor
pop
push
add
sarb
and
movsl
mov
dec
leave
fsubrs
xor
outsl
roll
adc
lods
cmpsl
cmc
cmovbe
data16
mov
cli
xchg
pop
fstl
daa
movsl
insb
sarb
mov
sbb
dec
xchg
fs
loop
inc
mov
nop
cmp
fisttpl
mov
sub
test
cmp
lea
xlat
push
pop
jp
out
xchg
jae
cmp
cs
xchg
sub
dec
dec
cmpsl
dec
mov
outsb
pop
bound
cmpsl
int3
add
pop
xor
std
mov
push
push
popf
sbb
stc
or
mov
mov
insl
bt
shrb
lods
sbb
loop
adc
mov
sbb
lock
jnp
mov
and
shll
daa
sbb
cmc
shll
jns
mov
movsl
pop
scas
xchg
xor
adc
mov
add
mov
hlt
jle
iret
jg
ja
ror
xor
or
jecxz
sbb
loop
imul
mov
scas
add
pushf
mulb
jle
pusha
inc
out
shrb
pop
inc
mov
xor
xchg
fcmovnbe
js
xchg
xor
jg
sub
out
jns
inc
int
rcrb
pusha
test
js
jmp
jns
mov
repnz
lea
push
inc
ret
pop
xor
jne
pusha
stos
jp
mov
cltd
sti
int3
lcall
outsb
push
push
sahf
cmp
loopne
xchg
fidivrs
and
data16
jae
loopne
pop
mov
mov
xor
negl
lahf
in
mov
push
sub
adc
arpl
out
dec
sbb
xchg
xchg
xchg
insb
les
ljmp
jmp
xor
cld
insb
jmp
popa
sub
push
mov
gs
xchg
sahf
pushf
jne
imul
and
push
sbb
jae
mov
mov
pop
ja
aad
sbb
xorb
xchg
or
icebp
imul
mov
jl
pop
mov
popa
or
movb
mov
cmp
ja
inc
add
mov
mov
rcrl
lea
leave
jmp
fildll
adc
mov
fidivs
pop
loopne
cmp
fs
imul
inc
fwait
adc
outsb
and
xchg
jo
clc
in
test
lods
pop
mov
aaa
or
adc
repnz
into
rcrl
cmp
dec
pop
mov
ret
lock
test
and
adc
rolb
in
stc
sub
adc
sbb
scas
jb
xorb
mov
xchg
pushf
fmul
inc
popa
pop
jle
movl
push
fmuls
jo
pop
fdiv
pop
adc
inc
sub
push
test
ret
pushl
iret
das
cld
cs
mov
xchg
and
shrb
imul
jmp
pop
js
jo
hlt
adc
cli
iret
mov
stos
inc
add
shlb
test
in
lods
cmp
jno
jno
pop
pushf
mov
inc
cld
hlt
jbe
xchg
stc
scas
sbb
mov
das
push
mov
icebp
mov
ljmp
nop
adc
sbb
mov
outsb
push
or
aam
shr
cmp
mov
jg
ljmp
pop
cmp
or
xchg
fldl
cld
add
cwtl
pusha
sbb
mov
in
aam
fnstcw
xchg
lods
out
insl
test
inc
test
cltd
in
std
cmp
lods
insl
sub
xchg
cmp
mov
push
mov
or
divl
test
pop
ds
adc
fs
sbb
icebp
xor
js
mov
das
xorl
nopl
jg
inc
pop
jmp
cmpsb
icebp
push
lret
scas
fstps
sbb
mov
adc
dec
push
xchg
add
fxch
movsb
call
lods
shr
hlt
lds
mulb
loope
inc
push
in
inc
cmpl
sarl
movsl
cmp
test
stc
push
test
dec
jp
mov
test
clc
mov
mov
insb
push
jns
xchg
in
jae
sub
cli
xchg
cmp
ljmp
jl
popa
xchg
ficompl
out
outsl
or
popa
push
sub
sbb
movsl
jmp
push
imul
hlt
xchg
ljmp
cmpsb
scas
xchg
add
pusha
sahf
loopne
fptan
pop
mov
cld
fidivl
cmp
mov
mov
pop
lock
sti
pop
mov
jp
add
lret
lret
ds
lods
aaa
je
mov
push
jg
ds
and
lcall
aad
dec
jb
jl
pushf
dec
scas
fsubs
inc
mov
insb
mov
adc
and
mov
pop
fstpl
jl
adc
pop
push
test
test
jno
jno
lods
push
adc
iret
daa
repnz
mov
jno
mov
xor
ljmp
lret
mov
es
fidivrs
in
pusha
pop
pop
xchg
mov
mov
xchg
ret
inc
negl
push
or
inc
jl
lods
test
inc
push
mov
dec
shr
pop
mov
push
jmp
ret
cmpsl
ret
fchs
pop
jbe
out
or
xchg
inc
flds
repz
bound
and
and
xor
data16
cs
xor
xor
rorl
bound
dec
insb
rcrb
loopne
imul
in
popf
sahf
cmpsb
bound
mov
out
or
or
test
sub
inc
jb
jl
loopne
out
sti
cmp
xor
xchg
sti
xor
mov
mov
lods
pop
fwait
repnz
out
aad
cmp
xor
aas
insb
loop
shl
add
mov
scas
out
popa
push
jg
jno
fs
dec
movsl
xor
out
pop
push
dec
and
push
pop
fimuls
test
xor
lahf
jns
test
popf
push
jns
push
xchg
dec
or
push
inc
jb
in
xchg
insb
xlat
and
jle
fidivl
imul
xchg
fs
shll
and
lea
push
je
jne
sarl
xchg
int3
sahf
int
loope
lds
and
cmp
addr16
sub
nop
jo
and
in
out
xorl
orl
lcall
xor
push
jns
ds
rep
fistl
xchg
lods
out
mov
jo
inc
dec
aaa
xchg
mov
mov
xlat
mov
rcrl
js
stc
psubw
arpl
add
fcmovnb
outsl
lcall
cmp
lods
mov
mov
movl
xchg
out
xchg
out
mov
xor
add
adc
movsl
mov
orb
mov
movsl
push
xlat
repz
mov
pop
movsb
inc
movsl
jbe
pop
jp
or
lock
dec
xchg
ja
stc
call
movsb
leave
movsb
fwait
jae
call
cmpsl
lods
stos
jecxz
jp
jmp
jle
stos
fistpll
loop
mov
pushf
or
das
mov
mov
jl
sarb
fsub
jb,pt
repnz
std
add
scas
out
mov
xor
push
repnz
in
hlt
mov
mov
out
add
xor
inc
push
push
pop
lea
std
xchg
inc
pusha
xorb
lret
scas
ljmp
mov
xchg
je
rcll
movsl
lahf
scas
mov
and
mov
xchg
ret
je
xor
testb
into
aad
and
fidivl
push
cmpsl
xchg
movsl
mov
stos
inc
jno
fdiv
aaa
lds
mov
mov
inc
cmp
push
dec
enter
lock
lods
push
loop
mov
mov
movsl
mov
lcall
mov
loope
mov
push
dec
jne
aad
sub
es
loope
dec
and
jl
sub
pop
push
or
mov
inc
mov
in
cmpl
jl
cld
bound
pop
mov
std
jnp
cmp
popf
lock
mov
fadds
cmp
cmpsb
into
xchg
movsb
jle
loope
mov
xor
dec
xor
mov
xor
pop
addl
dec
ret
or
lods
fcompl
dec
mov
stos
out
jbe
dec
dec
adc
dec
rclb
push
add
stos
xor
push
sar
shl
mov
jmp
testl
repz
and
push
add
push
rclb
test
push
add
stos
in
popf
and
push
jae
loope
hlt
mov
stos
das
into
outsl
fadds
push
jb
lods
add
sbb
mov
lret
adc
dec
mull
mov
mov
adc
mov
test
adc
sbb
mov
int
fbstp
cli
pop
mov
mov
jg
arpl
mov
out
mov
orb
mov
adc
test
mov
xchg
push
popa
inc
mov
movsb
xor
add
ds
xor
add
subb
adc
add
cmp
and
mov
les
mov
lds
mov
mov
nop
ja
mov
sub
or
in
lret
xchg
ret
fmull
arpl
push
adc
cmp
jnp
out
jp
aam
mov
jg
fcoml
stos
addr16
push
imul
fwait
outsb
sbb
sbb
jle
negl
jmp
push
je,pt
pop
mov
iret
cmp
mov
sub
ja
imul
mov
or
cld
inc
shl
pop
mov
arpl
cmpsb
into
cmp
insb
pushw
xor
scas
inc
mov
fmuls
lea
lea
adc
rcr
shl
dec
pop
aaa
adc
cs
fdivl
dec
mov
pop
popf
mov
insl
out
cmp
pop
enter
imull
xchg
aad
outsb
lock
xlat
imul
cmp
fld
popf
inc
loope
adc
scas
push
jne
push
push
lret
sub
js
dec
mov
pop
adc
aad
push
out
adc
lods
ds
iret
xor
sub
sub
lods
xchg
cli
shl
add
rorb
int3
push
inc
jmp
mov
cmpsl
dec
lock
cli
cmp
or
and
pop
insl
inc
test
add
mov
scas
dec
inc
mov
imul
insb
das
mov
fidivrl
push
int
push
push
mov
lods
mov
lds
fistps
repnz
imul
jno
in
lea
pop
lret
cmpsb
icebp
adc
cld
outsl
aam
xorb
enter
pop
jbe
add
lret
pop
clc
or
and
es
cwtl
sbb
push
mov
lods
lds
mov
or
or
fxch
dec
inc
movl
out
sbb
fdivrs
mov
xor
adc
imul
sbb
lds
aaa
and
xchg
xor
dec
in
add
sar
cmp
sub
pop
dec
dec
sar
int
shlb
xor
cwtl
inc
lds
mov
pop
in
leave
stos
mov
jmp
jp
out
nop
or
pop
repnz
xlat
daa
stos
xchg
mov
hlt
mov
aas
dec
mov
pop
sub
popa
mov
mov
or
dec
out
out
iret
pop
push
addr16
or
mov
test
dec
fwait
sbbl
fsts
xor
stos
gs
jle
inc
fldenv
sbb
scas
cmp
out
pop
mov
movsl
pop
fwait
pop
mov
lret
fs
jb
inc
idivl
mov
dec
arpl
dec
cli
dec
negl
adc
mov
add
sbb
inc
jl
sub
mov
bound
sub
mov
xor
out
outsb
push
dec
pop
xchg
xchg
shl
add
adc
push
outsl
pop
cld
pop
xlat
mov
dec
and
lods
setb
add
push
movsl
shll
jb
fidivl
icebp
in
pop
push
cltd
imul
data16
pop
leave
mov
or
jo
inc
inc
pop
in
add
pusha
lcall
dec
push
stos
scas
dec
mov
jno
mov
mov
cmp
and
fdivr
or
or
negb
jns
push
cld
add
adc
jge
sbb
loope
pop
jl
test
pop
or
ds
out
jg
dec
movsb
add
aad
push
add
leave
dec
sub
icebp
pop
inc
lret
leave
dec
fnsave
nop
add
jl
add
ja
inc
insb
daa
in
adc
aam
fwait
push
adc
pop
mov
mov
inc
inc
leave
testb
xchg
xchg
jae
mov
pop
add
aad
pop
fwait
inc
mov
cmp
inc
pop
mov
aaa
mov
mov
test
hlt
movsl
pop
add
out
sbb
add
daa
adc
cs
xlat
push
add
xchg
insb
mov
in
test
xor
sub
cli
cmp
stos
popf
mov
enter
ret
and
jecxz
jnp,pt
lret
mov
mov
mov
adc
lods
push
lret
lcall
adc
sahf
or
mov
jg
mov
jp
ss
addr16
jecxz
pop
xor
jb
out
jno
inc
xchg
xlat
mov
movsb
mov
int
xor
das
hlt
xchg
int3
sub
xchg
adcl
push
mov
leave
pop
mov
cmpsl
mov
push
jle
jmp
inc
ficompl
push
mov
sub
rclb
mov
xchg
push
mov
add
inc
push
adc
mov
add
and
out
movsl
xchg
mov
xor
push
dec
mov
in
sbb
sub
cltd
testl
movsl
lret
sbb
pop
std
pop
push
jmp
les
lret
lods
loopne
mov
xor
mov
mov
add
xchg
fwait
adc
cld
ss
addr16
loope
push
inc
nop
hlt
movsb
scas
push
leave
stc
inc
icebp
inc
fwait
mov
adc
sbb
fnstenv
mulb
push
lret
stc
push
mov
popf
mov
mov
pushf
mov
in
cmp
imul
and
lods
stos
mov
jbe
and
sar
and
add
nop
jge
testl
enter
jmp
add
dec
push
incb
insb
das
ja
inc
scas
dec
jbe
sub
or
xchg
inc
jp
addr16
sbb
cmpsb
pop
sub
arpl
aad
jl
int
dec
es
xchg
cmp
cmp
cmpsb
out
dec
lcall
outsb
std
inc
adc
jb
popf
les
xlat
pop
loopne
push
sarl
lret
dec
mov
dec
sub
scas
pushf
and
xchg
and
lds
pop
xlat
arpl
mov
addr16
add
and
lret
ret
in
neg
xchg
adc
xchg
lds
lods
lea
jge
and
cmp
lea
lret
jmp
or
int
lods
mov
xor
fldt
sub
aad
jge
jmp
imul
jmp
pop
fcmovne
dec
jp
bound
xlat
roll
sbb
fwait
movsl
mov
xchg
fmul
mov
arpl
lods
add
push
dec
pushf
dec
ds
xor
xchg
out
cmpsb
outsb
cmpsb
jno
mov
sbb
dec
pop
fmull
lret
sub
jbe
xor
scas
push
xlat
mov
mov
stos
push
cwtl
das
rclb
push
mov
or
pop
pop
sub
mov
lods
out
aad
cs
jne
loopne
sbb
inc
and
sbb
in
andl
mov
jmp
adc
push
add
mov
fiaddl
cltd
jbe
xor
xchg
dec
icebp
cmp
jnp
in
lock
cmp
enter
dec
lcall
jno
pop
pop
daa
test
mov
ret
lea
rorb
xchg
popf
lcall
andb
jo
mov
pop
cwtl
mov
cmp
loopne
dec
mov
or
xchg
dec
mov
mov
cmp
push
push
mov
addb
add
mov
rol
push
mov
inc
cli
sub
sub
push
pop
addr16
rclb
cmp
fbstp
outsl
popa
aaa
sahf
mov
inc
xor
aas
in
and
jbe
je
out
push
xchg
call
insb
inc
jne
iret
stc
cltd
or
shlb
mov
inc
hlt
jb
loope
loopne
cwtl
fyl2xp1
or
fadds
movsb
sub
mov
xchg
fcmovnb
fistl
push
test
lock
std
mov
jae
add
sbb
sub
in
jmp
iret
shll
mov
gs
and
push
pop
daa
jle
pushf
cs
fnstcw
jbe
enter
cmpsl
outsb
sub
sbb
je
inc
div
mov
jp
adc
fcom
dec
mov
insl
fdivr
inc
lret
insb
mov
sbb
cmp
ret
sbb
xor
enter
cmp
pop
es
dec
xchg
xacquire
cli
push
inc
inc
fadd
mov
or
mov
push
sti
ret
pop
dec
jnp
pop
mov
gs
mov
fsts
cmp
stc
ret
insl
sbb
xchg
in
je
dec
test
add
stos
mov
pop
jp
cmp
push
aas
push
inc
jge
imul
cmc
sarb
xchg
jo
bound
sub
loopne
pusha
ret
stos
add
cli
aas
add
or
out
into
inc
cli
add
mov
push
shlb
stc
jnp
js
and
loop
bound
add
pop
mov
adc
scas
lods
and
pop
adc
shrb
notl
pop
idivl
push
push
push
cmpsb
outsb
add
rcll
fisttpl
mov
xchg
cwtl
mov
mov
icebp
cmp
test
dec
push
cmp
sbb
aaa
popa
adc
lahf
aaa
pop
fs
mov
test
dec
cmp
fs
rorb
xchg
mov
rcll
pop
icebp
mov
sub
std
inc
arpl
xor
jns
fsubl
mov
or
stc
mov
sub
movsb
jg
mov
sbb
push
int
lahf
fisttpll
add
mov
dec
xor
adc
mov
sbb
lds
mov
in
jae
pop
pop
sbb
test
icebp
mov
push
iret
cmc
inc
aad
cli
or
xlat
scas
push
xor
push
push
mov
xchg
jge
test
shlb
xorb
fistps
mov
push
fsub
shl
inc
push
cmp
or
iret
scas
imul
cmp
xchg
cmp
push
aam
mov
pop
insb
nop
jmp
movsb
xchg
xor
mov
sbb
in
std
add
inc
add
dec
push
xchg
cmpsb
cs
and
mov
pop
loope
ljmp
rclb
mov
movsl
or
xchg
adc
divb
adc
aas
xorl
lock
push
mov
dec
sahf
hlt
outsb
add
out
sub
xchg
mov
xchg
fcoms
std
inc
sub
pop
or
aad
pop
xchg
sbb
insl
ror
imul
dec
mov
mov
cmp
lods
add
mov
dec
xchg
loopne
imul
push
jnp
push
fwait
out
push
cmc
repnz
fnsave
arpl
mov
xor
inc
into
stc
leave
jns
sbb
cli
sub
pusha
xor
pop
push
popa
jg
push
push
mov
and
pop
xor
xor
rcr
push
jae
sub
jbe
push
fs
sbb
lret
outsb
insb
scas
iret
repz
mov
cmpsl
sbb
push
data16
pop
notb
jge
icebp
adc
xor
dec
jg
ja
popa
loopne
adc
lcall
mov
aaa
push
adc
dec
adc
sbb
sbb
inc
add
sub
inc
and
or
xchg
arpl
repnz
repz
aam
addr16
outsb
mov
lret
gs
out
or
je
pop
inc
xorl
fldl2t
fmuls
andl
aas
call
mov
fs
jmp
repz
aad
xchg
jp
adc
mov
jl
mov
fwait
jg
jmp
dec
into
pop
mov
inc
lds
sbb
add
pop
andl
adc
fdivl
add
dec
cmpb
shlb
add
cs
es
pop
inc
add
cmpsl
sarl
mov
jle
je
popf
adc
push
rcrb
fiadds
addr16
inc
inc
jmp
adc
jo
neg
inc
mov
mov
inc
sub
imul
mov
test
push
inc
repnz
popf
fs
adc
mov
cmp
xor
push
xor
fwait
xchg
iret
test
ror
or
scas
out
mov
and
aad
xchg
mov
pop
stos
pop
stos
jp
or
in
xchg
imul
sub
ret
mov
std
pushf
jo
sbb
jbe
loope
adc
sub
clc
push
mov
movsb
fstl
movsl
and
orb
push
jecxz
dec
xchg
icebp
or
mov
jnp
pop
xchg
das
cmp
ret
jnp
cmp
push
js
inc
or
cmc
push
loopne
jge
sbb
jg
loopne
insb
shlb
xor
lods
dec
pop
inc
mov
outsl
js
fisttpl
ja
push
test
or
test
mov
arpl
int
cld
stos
data16
xchg
data16
pop
and
dec
mov
das
popa
cmp
xlat
and
mov
test
das
stc
stos
loopne
sbb
mov
mov
jg
arpl
pop
data16
fcompl
rorb
adc
xchg
pop
pop
out
shrl
inc
push
and
pop
adcb
loop
cmpsb
loopne
dec
rolb
jg
adc
insb
sbb
rorb
mov
push
fsubs
mov
cld
outsl
sub
repnz
movsl
pop
dec
mov
dec
ljmp
jge
fisubs
cmc
mov
mov
imul
add
pop
jmp
stos
out
in
in
into
or
idivl
leave
imul
arpl
in
sti
lret
leave
aad
incb
pushf
ds
in
ret
or
jecxz
jge
arpl
lret
dec
lds
popf
lds
adc
sub
fldcw
xchg
push
lds
out
pop
inc
xor
xor
jnp
cmp
jecxz
aam
mov
push
dec
xor
iret
xchg
pop
mov
movsl
xchg
shr
and
inc
loope
or
nop
pop
sbb
cmc
xchg
mov
in
xor
jb
fmuls
mov
stc
mov
decb
xor
jl
lret
push
ret
sub
gs
cmp
add
clc
fwait
call
pushf
sub
inc
cwtl
faddl
pusha
mov
loop
mov
cmpsb
adc
mov
inc
lcall
fsubs
and
mov
push
lret
and
je
sti
or
push
push
in
sti
stos
jbe
das
testl
ret
adc
jnp
push
stc
mov
std
into
frstor
lds
add
rolb
cmp
cmc
in
sbb
fnstenv
jp
test
insb
test
add
nop
call
ret
jnp
sbb
mov
clc
and
inc
sub
pop
cld
ja
mov
adc
fsts
push
in
inc
js
hlt
data16
mov
mov
cltd
int
std
sub
icebp
jns
push
dec
bound
ror
jle
lea
xor
and
xor
xorl
ljmp
fidivrs
sbb
cltd
add
jp
enter
or
je
divl
xor
aad
shlb
mov
js
cmc
inc
sbb
mov
mov
shl
imul
sbb
rorb
arpl
es
rcrl
mov
aam
lret
daa
sub
mov
popa
jmp
sub
jno,pt
ret
dec
or
pop
mov
jae,pn
rclb
enter
inc
or
out
jl
icebp
stos
decl
ss
lcall
int3
stos
fsubp
aad
xchg
or
mov
in
sbb
sub
loope
inc
xchg
ja
mov
dec
ss
xchg
jg
mov
push
cmp
jle
or
push
xchg
push
enter
jecxz
pop
pop
clc
cmpsb
cmpsb
pusha
xchg
icebp
push
imul
xchg
mov
out
aas
shrb
cmp
jp
push
pop
jae
or
or
sti
sahf
push
es
popa
fcompl
xchg
pop
adc
mov
lcall
cld
shlb
dec
mov
mov
jp
mov
or
lret
push
and
movsl
push
mov
call
ja
into
std
mov
ss
dec
ljmp
inc
pop
mov
mov
out
cld
sbb
movsl
jno
imul
loopne
inc
mull
lret
cwtl
pop
push
sti
adc
push
xor
add
out
push
push
pushl
call
les
pop
movsb
fisubl
cmp
jmp
or
test
mov
loop
cmp
jl
push
subl
dec
adc
or
pop
mov
fwait
lods
popf
push
xor
mov
jl
push
dec
mov
jp
push
inc
loope
inc
jecxz
loopne
xchg
leave
jge
nop
jne
lahf
mov
jmp
mov
mov
int3
bound
dec
test
xor
jmp
mov
inc
jecxz
and
imul
xchg
pop
add
and
and
or
bound
in
call
lret
mov
cwtl
mov
adc
aas
mov
in
fsubrl
leave
mov
inc
mov
cmpsl
out
sub
add
inc
bound
cmp
or
into
out
das
mov
repz
into
jne
lret
jle
jns
inc
aaa
xor
jecxz
into
adc
xchg
in
call
and
fxch
push
mov
div
daa
cmp
in
inc
jb,pt
gs
sub
sbb
pushf
add
lret
pop
and
test
lahf
fldt
dec
mov
in
mov
mov
jmp
ds
push
test
pop
xlat
test
cmp
je
lds
out
or
popf
add
mov
xor
mov
addr16
mov
stos
mov
sbb
adc
repz
out
fidivrs
pop
hlt
mov
ret
jle
or
shl
into
mov
adc
jecxz
mov
cs
push
insb
ja
enter
hlt
sub
je
or
into
lret
dec
jne
inc
push
jle
cmp
cmp
sar
mov
lods
sti
mov
and
rol
sahf
sub
mov
adc
arpl
mov
xor
popa
mov
or
push
dec
cmp
xlat
ja
inc
mov
inc
jb
jae
shll
jp
mov
lcall
push
xlat
cmp
or
mov
movsb
pop
inc
xlat
pop
mov
mov
adc
xor
sahf
inc
cmc
stos
aad
test
sbb
lret
addr16
idivl
and
xor
xorl
leave
ljmp
pop
jae
daa
adc
scas
cmp
jne
in
pop
push
pop
fidivrs
or
sbbb
jmp
push
std
push
out
mov
inc
or
je
jno
adc
mov
pop
mov
out
fsubrs
lcall
pop
loopne
inc
mov
pop
scas
test
test
add
mov
push
rcrb
push
push
outsb
stos
fstpl
push
push
push
xor
pop
add
pop
rorl
into
mov
xor
pop
xor
mov
sar
jge
xchg
lret
stos
xor
xchg
pop
cld
jb
out
xor
xchg
push
xor
mov
inc
rclb
cmp
dec
pop
inc
jae
jle
int3
cmp
push
mov
repz
xor
pushf
movsb
mov
insl
inc
pand
xchg
adc
lret
mov
out
dec
les
inc
inc
cmpsb
adc
sbb
popf
jg
lahf
xor
mov
mov
dec
hlt
daa
add
mov
mov
in
pop
movsb
subb
out
imul
dec
push
push
mov
inc
mov
dec
jmp
cwtl
cli
push
xor
repnz
lods
aam
test
insl
lods
push
or
xchg
cmp
rorb
shr
pop
leave
push
or
in
jae
outsl
add
aaa
rcl
rcr
mov
mov
out
mov
jle
mov
lods
jb
pop
stc
stos
fimull
iret
test
cmp
jbe
adc
pop
cwtl
repz
mov
adc
mov
clc
js
cld
mov
lock
inc
dec
imul
sub
sbb
insb
or
ja
push
push
adc
push
inc
jnp
or
lods
inc
mov
dec
lods
xchg
xor
adc
outsb
ret
andnps
push
scas
jae
mov
aad
inc
jno
push
xchg
xchg
sub
mov
test
pop
sub
push
js
push
dec
add
jns
rorl
int3
daa
xor
test
xor
data16
cmpsb
xor
xor
les
iret
inc
mov
mov
xor
cmp
pop
add
testl
repnz
rorl
hlt
mov
iret
push
popa
mov
sbb
jne
into
cwtl
idivb
push
loop
out
nop
aas
sub
mov
popf
jmp
or
or
mov
bnd
jnp
xchg
or
mov
jne
jb
sub
dec
ss
xchg
arpl
and
int3
mov
add
dec
pop
pop
testb
mov
xchg
xor
cs
push
rcrl
lcall
iret
mov
lock
cmp
ss
xchg
mov
mov
iret
fdivr
cmpsl
dec
sbb
mov
add
xor
and
cmp
mov
pusha
mull
adc
sbbb
pop
movsb
jns
cs
inc
into
or
lock
and
cmpsb
xchg
and
jno
out
push
push
inc
out
push
in
cli
cwtl
mov
aas
sbb
jne
mov
or
sti
stos
mov
test
ljmp
ljmp
cmp
dec
pop
enter
mov
imul
enter
call
push
and
sbb
outsb
out
adc
rcrb
pop
sub
push
adc
hlt
pop
clc
ret
mov
add
cmp
mov
sbb
incl
xchg
scas
outsb
je
add
rorl
xchg
cmp
mov
pop
cmp
pop
inc
jae
jecxz
jl
dec
mov
and
iret
inc
lods
cmp
popa
in
adc
inc
mov
shrl
ficomps
daa
cmc
test
insl
jl
popf
sahf
es
xchg
test
mov
add
jg
loop
fistpl
inc
outsl
add
pusha
lea
xchg
sub
inc
adc
sbb
mov
pop
in
jne
or
lods
rolb
in
sbbb
sub
jne
xlat
mov
and
mov
mov
fisubl
cltd
movsl
cmp
mov
aam
dec
push
dec
stos
and
mov
add
mov
rorl
sbb
outsb
retw
and
fstpl
push
data16
push
ljmp
aad
sti
or
adc
xchg
mov
insl
xchg
dec
loop
push
mov
mov
mov
mov
scas
int3
adc
sub
in
push
sbb
sub
fistpll
add
fs
pinsrw
jo
fucom
add
fiaddl
push
cmpb
sahf
lods
cmp
jl
pop
dec
sub
cmp
andb
mov
pop
jbe
sahf
in
inc
lds
jb
arpl
aas
mov
inc
add
push
jbe
gs
iret
jle
mov
jecxz
mov
jmp
or
ret
add
test
pop
jecxz
jmp
add
xchg
cmp
popf
mov
cmc
int
xchg
or
push
mov
xor
mov
sti
mov
mov
xchg
mov
test
xor
in
pop
rcr
jns
sbb
sub
imul
jp
and
push
mov
xchg
or
dec
mov
add
es
js
mov
cmp
out
inc
frstor
sahf
cmpsl
adc
and
cmpsl
cld
jmp
addr16
xchg
push
jcxz
push
inc
popf
popf
scas
pop
sti
aaa
stc
pcmpgtb
lods
cmpb
hlt
xor
imulb
mov
pop
roll
in
adc
lods
lret
lahf
push
pop
pusha
fisttpl
cmp
push
or
mov
std
mov
jl
sbb
stos
fs
je
mov
in
push
imul
push
adc
in
rorl
sub
inc
je
rcrb
ret
mov
arpl
pop
fisubs
mov
or
push
stos
pop
in
jns
and
jae
int3
lods
enter
pop
aaa
xchg
jg
inc
xchg
mov
shlb
cmc
stos
nop
xlat
dec
out
xor
sub
mov
sub
mov
sub
xchg
mov
aad
jp
pop
sarb
inc
mov
inc
sbb
int3
aas
add
and
jecxz
lods
in
jmp
sbb
lock
mov
and
add
inc
mov
fdivrp
or
mov
jge
fsubl
les
and
mov
shll
jge
sarl
adc
dec
je
sbb
fstpl
int
rcrb
cli
sub
mov
sub
jmp
dec
push
lods
sbb
push
cmp
pop
push
aas
sub
inc
xchg
rolb
leave
into
xlat
xchg
jmp
jb
mov
aam
mov
popl
mov
mov
xchg
mov
cs
int
sbb
in
add
pushf
or
fidivl
inc
rclb
push
xor
bound
mov
pop
jo
ret
jle
push
jg
fidivl
and
xchg
jmp
shl
in
push
pop
adc
lret
loopne
aam
clc
mov
sbb
shrl
flds
test
outsb
mov
pop
add
push
push
test
fldl
fwait
pop
dec
xchg
lods
sarb
dec
loope
pushl
push
ffree
ret
loop
pushf
pushf
sti
and
enter
or
aas
xchg
sbb
mov
popf
or
or
imul
or
cmc
pop
popf
push
rorb
outsl
xor
cmpsl
pop
xorl
jbe
xor
dec
mov
mov
or
push
bound
jmp
pop
mov
lcall
repnz
push
xchg
mov
int3
add
cwtl
mov
pop
fdivl
cmp
pop
xchg
adc
aaa
xchg
in
and
push
stos
mov
mov
jae
or
clc
mov
xchg
loope
imul
sbb
cli
int
dec
shlb
mov
mov
jne
sbb
sbb
and
roll
jne
push
mov
sub
or
addr16
mov
enter
inc
sub
out
dec
pop
sub
mov
pusha
pop
push
in
xchg
stos
mov
rclb
sub
js
repz
pop
sub
adc
xchg
addl
mov
mov
pushf
or
or
inc
loop
mov
cmpsb
ljmp
jno
shr
xchg
xorb
mov
movsbl
jo
xchg
cmc
incb
out
jb
rcrb
outsl
jge
das
mov
int3
out
pushf
out
adc
sub
outsb
sbb
cmp
repnz
or
cli
movsl
dec
lea
xchg
cltd
cmc
sbb
lods
cmpsb
aad
push
jo
push
inc
push
pushf
shlb
dec
pop
sub
cmpsl
cltd
cmp
sarb
pop
push
add
sub
and
jnp
ljmp
out
xor
negb
pop
inc
sbb
sbb
test
add
sub
lgs
or
movb
bound
xor
inc
add
ljmp
rolb
outsl
or
bnd
aam
sti
scas
testb
and
out
cmp
jne
adc
pop
insb
and
push
scas
cs
addr16
pop
lret
pop
push
dec
ja
xchg
sbb
jmp
sahf
pusha
lcall
mov
std
je
cmp
stos
cmpsb
sbb
sbb
lods
jno
xchg
ret
das
push
mov
in
dec
in
jg
inc
xor
pop
jo
sub
add
mov
mov
jmp
jo
push
nop
cmp
push
test
jae
sbbl
and
mov
add
jo
ss
and
sbb
inc
out
das
lret
test
xor
jno
adc
xchg
aad
sbb
shll
loopne
addl
fisubl
mov
mov
pop
das
jmp
inc
inc
xchg
dec
mov
std
int3
jns
mov
sti
add
cmp
lods
or
pop
out
js
mov
pop
push
inc
push
shll
jae
dec
and
mov
rcrl
push
xchg
aam
jbe
cmc
cltd
repz
xor
inc
and
push
push
mov
and
lcall
inc
ret
and
out
push
fldl
loope
push
les
imul
dec
push
adc
add
sbb
lods
mov
sub
int
mov
dec
adc
scas
out
adc
push
lcall
cltd
sbb
scas
sbb
pusha
or
pushf
ret
pop
mov
xlat
cld
push
imul
push
outsb
xor
mov
sbb
mov
push
mov
cmp
xchg
mov
jecxz
insl
xchg
jmp
ja,pt
push
addps
jl
or
scas
ret
jp
push
popa
ds
shl
data16
hlt
jmp
call
cwtl
mov
repnz
icebp
pop
pop
pusha
out
les
mov
das
js
fdivrs
repnz
test
dec
js
aam
pop
sub
std
xor
xlat
adc
add
stc
stos
adc
call
sub
pop
fistl
inc
repz
push
inc
sub
test
push
aad
xor
mov
jae
push
pop
sub
mov
mov
jne
mov
mov
mov
adc
add
orb
loopne
addr16
adc
pop
xlat
les
jno
daa
xchg
or
mov
inc
pushf
mov
push
imul
adc
sbb
lret
xchg
nop
and
mov
sbb
dec
or
lods
fstps
rcll
das
addr16
data16
iret
mov
lcall
pushf
mov
pop
inc
sbb
sub
and
insl
aad
sarb
sbb
pop
jmp
jns
cld
ret
mov
outsb
clc
test
jae
ds
adc
add
iret
test
jg
push
add
sbb
and
mov
fmul
adc
mov
mov
mov
push
test
fwait
clc
shrl
lret
cmp
dec
nop
push
xchg
ljmp
fisttpl
inc
mov
aas
arpl
cld
imul
jge
lods
mov
and
fs
cmp
push
test
loop
push
js
mov
add
pop
mov
jge
xchg
fidivrs
add
pushfw
push
je
dec
mov
add
pop
test
push
sbb
mov
mov
out
in
and
mov
pop
sbb
dec
pop
adc
push
lods
fimull
mov
xchg
xor
mov
sbb
fs
adc
or
js
mov
shrl
icebp
xchg
adc
stos
test
fsubrs
fidivs
fcmovu
inc
lods
fdiv
cld
pop
fstpt
add
loop
xor
mov
jno
stos
test
xchg
pop
pop
xorb
pop
jbe
xchg
or
repnz
jge
mov
rcrb
sbb
ljmp
cmp
lds
push
shrl
lahf
movsl
mov
dec
dec
mov
aas
jg
iret
aas
or
leave
fucomi
jns
imul
mov
nop
jo
shlb
jns
jg
jp
push
fcoml
in
pop
mov
dec
pop
fisubrs
pop
ficoml
jns
jecxz
cmp
sbbl
lret
in
ret
sub
jno
loop
jle
fistpl
divl
push
stos
es
dec
sbb
pop
cmp
in
mov
adc
xchg
jbe
ret
jl
fnstsw
cmp
or
sbb
add
cmp
out
stos
push
jg
cmpsl
in
cmp
ret
int
or
xor
ljmp
mov
pop
int3
pop
jae
add
xor
xchg
nop
enter
jo
leave
push
mov
mov
mov
or
adc
add
mov
push
pop
lds
jb
in
cld
mov
popf
xor
mov
mov
inc
mov
les
inc
mull
in
scas
xor
rorl
or
icebp
sbb
iret
inc
insl
repz
jmp
stc
lret
out
lds
pop
fwait
jl
fisubrs
sbb
xchg
xor
gs
dec
xor
push
data16
bound
inc
mov
jae
lcall
push
stos
xor
int3
arpl
dec
loop
mov
lret
dec
aad
cmp
sbb
iret
lret
mov
fcmovu
jecxz
sub
cltd
sahf
and
loope
imul
sub
fmuls
outsl
jecxz
fxch
ret
fldt
sbb
mov
stos
int3
jmp
mov
or
cwtl
ja
dec
cld
cwtl
mov
loope
imul
pop
rolb
fsts
sti
mov
pop
xchg
je
sbb
les
pop
pushf
cmc
sub
pop
shl
push
and
call
les
cmp
jb
leave
testl
scas
pop
push
shll
loope
xchg
outsb
test
add
jb
fisubrl
fldl
ret
push
sbb
rcrl
ror
xchg
dec
insl
dec
sub
inc
sbb
pop
mov
lea
orl
sbb
mov
cmp
das
in
subb
jp
jae
inc
imulb
cltd
enter
xchg
int3
pop
jle
fidivrs
call
shrb
jmp
clc
and
push
aam
cmp
sbb
push
push
int
add
ss
int
adc
mov
mov
lock
jbe
and
mov
and
fiadds
adc
es
testb
movsl
push
mov
add
mov
stos
and
ficoml
sbb
adc
fmull
in
pop
sub
and
inc
pop
adc
sub
movsb
lods
mov
in
lcall
pop
sbb
icebp
pop
je
movsb
addr16
sbb
sub
loopne
push
test
push
loopne
fwait
sub
cmp
inc
inc
insb
add
cli
in
jle
lods
daa
push
out
repnz
xchg
call
pop
test
shrb
and
mov
jns
outsb
cs
push
js
shrl
pop
mov
mov
sub
in
aam
aad
sbb
test
fmull
push
sbb
cmp
pop
add
sahf
fwait
jo
shll
scas
pop
clc
pop
insl
xor
or
pop
push
sbb
lahf
jge
adc
aam
or
bnd
bound
mov
or
push
stos
pusha
leave
fcmove
mov
fistpll
aam
jns
clc
sbb
jnp
lret
imul
outsl
outsl
leave
xor
lcallw
xchg
insb
rolb
adc
arpl
adc
xchg
jo
xsaves
mov
xchg
mov
inc
pop
xchg
lods
hlt
int
rcrb
int3
push
pop
jecxz
es
mov
ficompl
mov
es
das
push
push
push
pop
stos
sbb
movsl
mov
rcrb
sbb
nop
addr16
adc
push
xor
add
ret
mov
rclb
repnz
mov
push
xchg
jle
adc
cwtl
fdivrl
push
jle
xor
fld
into
xor
push
idiv
es
loop
sub
fstps
xchg
push
jbe
jnp
pusha
mov
adc
stc
or
pop
pop
movsb
pop
test
fstpt
lahf
lret
and
vsqrtps
mov
jle
popf
adc
xor
sbb
push
loop
add
inc
rcll
mov
xchg
bnd
mov
jmp
sbb
dec
mov
insl
or
pop
mov
leave
pop
loop
mov
movsb
adc
movsl
in
movsb
adc
out
pusha
es
mov
xchg
lahf
pop
fsubrl
bnd
mov
xchg
dec
jne
cmpsl
and
xchg
dec
lea
aad
je
cli
dec
mov
lods
pop
lock
pop
pop
ds
adc
or
loopne
sub
scas
add
add
outsl
insb
sub
lds
mov
fbld
sub
push
repnz
adc
pop
imul
cli
std
xchg
xor
cmc
cmp
fsts
notl
jbe
repnz
xor
shlb
cmc
sub
sbb
icebp
xchg
aaa
push
add
incl
dec
ret
mov
xchg
adc
lahf
cmpb
jmp
mov
cmpsl
out
cltd
mov
jno
dec
ss
in
jge
cli
lock
hlt
mov
adc
cs
popf
mov
test
data16
aas
lret
sbb
lret
out
add
imul
xchg
inc
push
sub
dec
shlb
jecxz
sub
dec
pusha
fs
dec
mov
iret
popf
pusha
repnz
addr16
dec
js
xchg
stc
mov
arpl
xlat
xchg
pop
je
out
mov
in
push
aam
pop
pop
and
xchg
decb
fsub
shl
xchg
shl
lock
mov
repnz
pop
daa
cmp
add
out
xor
inc
jecxz
idiv
mov
sub
or
jp
or
enter
adc
jne
pop
and
icebp
dec
scas
fs
je
cld
sub
pop
fwait
xor
outsl
aam
lods
jecxz,pn
pop
xchg
sbb
jmp
or
pusha
repz
mov
inc
lds
icebp
jb
and
stos
xor
les
call
test
out
mov
add
mov
mov
mov
daa
pop
dec
popf
and
fs
jae
repz
sbb
jns
sbb
in
aad
mov
mov
push
stos
shll
pusha
int3
push
xchg
insb
mov
in
out
clc
cmp
jno
fwait
pop
pop
imul
mov
mov
addl
arpl
lock
imul
insb
pusha
xchg
sbb
test
aas
lret
mov
ss
inc
in
push
cltd
and
push
or
cmc
ja
test
shr
push
jo
and
gs
pop
shll
lds
or
mov
sbb
dec
xchg
imul
adc
mov
outsb
jp
sub
or
push
ljmp
je
ss
rorb
push
sub
out
adc
fdivrl
popa
xrelease
adc
in
adc
adc
test
bound
add
daa
xchg
lds
insl
dec
les
add
stos
add
cs
aas
and
imul
mov
bound
outsb
push
mov
adc
lret
cli
jecxz
xor
mov
shrd
das
outsb
jnp
push
mov
icebp
pop
cmp
lock
add
push
or
fists
mov
lahf
adc
sti
imul
mov
lcall
addr16
sub
bound
enter
out
adc
iret
fisttpll
outsb
push
sarl
mov
xchg
int3
mov
push
push
dec
movsb
dec
lret
push
ret
aas
stc
movsb
xor
sbb
cmpsl
or
xchg
xchg
jmp
add
xchg
mov
and
xor
js
or
and
jmp
add
dec
pop
test
aas
mov
popl
and
mov
out
pop
jmp
inc
jmp
mov
cmp
and
xor
push
xlat
loop
and
push
or
jp
ret
mov
and
bound
fistps
jnp
push
xlat
js
push
pop
loope
pop
push
repz
sbb
pop
bound
fidivrl
mov
mov
cmpb
jnp
push
xor
mov
push
pushf
bound
jl
imul
push
iret
jp
cli
xchg
pop
clc
xchg
iret
bound
or
leave
jg
or
test
sbb
shrb
add
jge
lock
jns
mov
xchg
lock
mov
into
xorl
shlb
lahf
arpl
imul
in
fsts
push
xchg
mov
push
push
dec
pushf
xchg
enter
popf
mov
push
adc
pop
xchg
sub
outsl
sub
lds
leave
popf
testl
mov
aas
adc
cmp
xor
stc
jb
mov
inc
repnz
pop
and
jmp
repz
cli
or
xor
in
inc
les
adc
out
add
out
sub
sbb
cmp
xor
mov
js
cmp
jae
addr16
sbb
shll
mov
cmc
xchg
jb
cmp
cmp
int
into
pop
pop
shll
dec
sbb
test
aaa
pusha
dec
outsb
int3
cmpsl
ds
sbb
or
xchg
in
cmpl
push
ret
jg
insl
or
inc
imul
xor
dec
or
cmpsb
push
nopl
mov
pop
or
push
push
stc
data16
mov
inc
das
orl
rcr
pop
das
mov
out
icebp
in
add
xor
push
jno
jbe
loop
inc
xchg
adc
imul
mov
add
mov
inc
push
outsl
mov
mov
cmp
push
jns
lods
bound
leave
pop
push
fwait
cmp
daa
xchg
aaa
xor
fs
mov
xor
and
out
int
and
lods
jnp
push
jle
jmp
sahf
pop
sbb
mov
iret
add
xor
movsb
mov
fldl
or
iret
fbstp
pushf
xchg
cmp
loopne
addr16
jo
gs
adc
sub
pop
mov
dec
out
mov
clc
sub
or
rcll
pop
push
sub
sub
mov
std
jno
ficoms
jle
cmp
jns
inc
clc
aas
sbb
cmp
fsubrs
das
hlt
jo
ljmp
mov
cltd
adcb
pop
cmp
jo
imulb
insb
cmp
js
ret
into
lret
xchg
push
out
sub
push
cli
loop
adc
call
imul
mov
into
mov
lds
leave
clc
lcallw
fildll
outsl
pop
sub
inc
loopne
xchg
hlt
arpl
shlb
rorb
and
cmp
jp
mov
inc
jp
mov
shl
jne
popa
mov
jmp
add
fnstcw
xor
xchg
ftst
xchg
pop
ja
jl
push
daa
negl
push
imul
dec
jbe
pop
jo
pop
jo
adc
jmp
out
push
sarb
push
hlt
xchg
push
lcall
dec
popa
fwait
push
nop
push
adc
mov
inc
sub
cmp
leave
mov
test
fidivs
adc
cld
pushf
shl
ficomps
cmp
inc
fcompl
into
xchg
fisubrl
loope
and
inc
pop
add
dec
in
jno
pop
mov
dec
xchg
cmp
dec
add
jl
push
daa
insl
lcall
cld
loope
lods
mov
inc
fwait
pop
mov
push
jno
and
out
decb
imul
push
subl
inc
packssdw
ret
or
cltd
negb
jmp
outsb
jbe
repz
mov
xchg
dec
push
fistpl
pushaw
aad
cmc
fcoml
shlb
cmp
mov
lds
jbe
pop
mov
or
fsubr
pop
cwtl
jnp
pop
inc
jno
mov
and
xchg
sub
cld
push
test
xor
mov
out
pop
pushf
push
cmp
popa
sub
and
fiadds
sbb
cmp
sbb
rorb
and
cmpsb
add
ret
loop
push
adc
xchg
dec
lret
or
ficoms
pop
ja
in
inc
lret
cs
cli
sub
in
xchg
jno
sub
dec
ljmp
les
jnp
mov
sti
lods
pop
cmpsl
test
mov
pusha
push
mov
repnz
cmpsb
mov
inc
mov
fisttpll
cmpsb
fdivp
jnp
std
push
ds
push
movsb
mov
cmpb
push
out
add
insl
dec
xor
out
pop
pop
in
and
stc
inc
insl
mov
or
xchg
ret
psubq
xchg
shll
and
bound
ljmp
mov
lock
push
in
out
xor
adc
sub
clc
and
sbb
xchg
aaa
mov
mov
inc
jo
inc
fnstsw
pop
xor
hlt
in
mov
cltd
addl
cs
xchg
jnp
mov
pop
or
and
sub
mov
sbb
lds
and
pop
mov
lahf
push
pop
adc
sbb
xor
inc
and
mov
mov
jg
and
and
pop
popa
sub
sub
imulb
mov
jo
flds
das
inc
push
push
pop
and
push
adc
dec
mov
pop
adc
jmp
xchg
cmp
sbb
in
hlt
push
data16
sti
outsb
out
or
inc
daa
aad
testb
jae
jne
cld
lods
icebp
adc
test
push
jp
pop
pushf
adc
nop
shrb
dec
inc
pushf
mov
fwait
popf
mov
xchg
andl
sbb
and
sti
mov
xor
scas
loopne
repz
negb
es
xorb
xor
xor
daa
sbb
inc
sarb
and
mov
xchg
mov
pop
mov
jle
jle
dec
jmp
sbb
jle
inc
clc
or
add
and
lds
pop
outsl
mov
xchg
cmp
mov
pop
mov
arpl
addb
dec
popa
rol
jmp
addb
jge
pusha
imul
test
adc
les
xor
jae
leave
movq
inc
inc
fcmove
pop
in
xor
ret
ret
cmpsl
stos
hlt
pop
mov
icebp
cwtl
dec
loope
incb
ret
les
and
aad
subb
fwait
cwtl
or
inc
faddl
popa
mov
movsb
pop
pop
sbb
and
push
cs
fnstenv
fiaddl
ficompl
jne
sbb
lods
inc
imul
mov
jno
pushf
add
lods
gs
aad
repnz
sbb
adc
xlat
xchg
jno
pop
pop
hlt
push
xchg
mov
sahf
cld
lds
pop
les
mov
jns
popa
leave
pop
loop
stc
jmp
test
mov
xorb
xchg
sub
das
pushaw
xchg
shlb
and
test
loopne
inc
cmp
ja
sti
jne
push
in
cli
mull
xor
mov
jl
sub
ja
inc
mov
pop
mov
adc
dec
lds
insl
push
xchg
andl
and
ret
adc
pop
leave
or
aaa
or
popf
xor
lahf
sbb
or
inc
and
lods
xor
insb
int
in
and
mov
fnsave
data16
xchg
in
ljmp
shr
pop
dec
addr16
mov
pop
cmp
push
loopne
dec
mov
jle
sbb
xor
push
cwtl
movsb
scas
add
pop
or
addr16
out
mov
leave
call
pop
xor
loop
sti
add
andb
arpl
andb
and
stos
add
fildl
in
mov
sbbl
xchg
jmp
and
sbb
out
leave
xchg
pop
incl
lds
cmpsb
rorl
dec
out
mov
xchg
and
sbb
mov
shrl
inc
lcall
cmc
rcll
mov
sub
push
jbe
stc
sub
test
xor
jne
xchg
imul
lret
scas
pop
pop
jmp
sbb
lret
popa
iret
adc
mov
scas
addr16
frstor
mov
and
repz
mov
dec
in
aas
sub
pop
push
sub
push
sub
negb
das
lcall
popf
inc
cmp
fs
int3
repnz
movsb
lds
pop
push
or
mov
adc
xchg
int
mov
mov
dec
fnstenv
push
fwait
cwtl
and
cltd
push
push
cwtl
pop
jbe
xchg
lcall
dec
jb
lcall
mov
test
fists
pop
out
fistpl
ja
loop
lret
mov
and
push
mov
mov
faddp
sbbl
mov
pop
mov
dec
lahf
out
mov
les
sbb
xor
sub
sbb
push
test
or
and
out
outsl
jl
pop
pushf
test
mov
out
popa
and
arpl
sbb
jno
mov
push
mov
aad
dec
imul
mov
mov
dec
daa
lds
cs
in
mov
es
xchg
push
outsb
add
out
xchg
sbb
adc
enter
inc
jns
fstp
sbb
xchg
loopne
test
pusha
xor
jg
nop
add
jmp
sti
movsl
ds
cmp
inc
cmp
xchg
addb
ret
mov
stos
sub
pop
stc
mov
stc
xchg
lcall
aas
aad
and
lret
sbb
stc
mov
arpl
inc
and
js
xchg
xor
loopne
popa
cmp
jecxz
fistpl
jmp
aaa
movsb
jmp
loop
je
dec
adc
jle
cltd
dec
or
inc
lea
mov
jg
in
sbb
fsin
movsl
ret
sbb
adc
outsl
sub
ljmp
roll
and
ficoml
out
push
inc
xchg
sbb
or
sbb
lea
cli
sbb
add
leave
cmp
mov
push
repnz
adc
sub
xlat
cs
sub
mul
test
cmp
pop
jae
outsl
imulb
lret
mov
inc
or
ret
or
ret
test
rorb
xorb
sub
hlt
enter
or
popa
cmc
bound
fcmovb
add
aaa
gs
clc
dec
or
addr16
pushf
bound
sub
and
jg
fbstp
xlat
outsb
pusha
or
ret
ficoml
xor
cwtl
inc
in
mov
mov
imul
or
mov
in
mov
xchg
or
dec
mov
fidivs
mov
mov
xchg
mov
push
mov
inc
aad
pop
ss
int3
sbb
fs
push
mov
in
out
pop
mov
mov
sbb
xor
rcrb
xor
bound
fstp
fbstp
mov
roll
roll
inc
xchg
and
outsb
scas
xor
xorl
shl
mov
mov
fcompl
aaa
xchg
and
or
inc
and
mov
mov
es
pop
mov
push
test
xchg
push
scas
adc
out
and
pop
int
das
mov
aam
mov
inc
push
lods
pop
xchg
fistl
jo
inc
adc
xchg
mov
push
inc
sbb
fldpi
gs
mov
pop
iret
fsts
push
sbb
or
fwait
jo
stos
cmp
dec
push
mov
inc
mov
in
ret
sub
add
pushf
pop
pxor
add
cmp
in
decl
dec
adc
pushf
dec
icebp
mov
jne
inc
adc
clc
push
test
scas
leave
pop
pop
adc
xchg
push
cmc
adc
dec
movsb
push
cmp
sub
out
mov
ror
mov
scas
outsl
jle
rcrb
shrl
addb
xchg
scas
cmpsl
push
fisttpll
jecxz
cmp
xchg
xchg
arpl
mul
dec
insl
das
mov
jae
into
inc
and
xor
sbb
imul
popl
js
inc
adc
iret
fdivrl
xor
rcll
cld
inc
or
add
lcall
xor
in
adc
adc
clc
aas
sbb
mov
jge
idivb
mov
lahf
adc
je
jno
imulb
ret
mov
xchg
les
lods
das
adc
add
pop
jge
and
xor
mov
inc
hlt
in
insl
mov
aam
mov
jmp
push
or
movsb
jns
fnstenv
or
inc
xchg
xchg
jp
xor
aad
dec
cs
outsl
cmp
push
jo
cld
scas
ss
dec
iret
inc
jp
dec
xchg
xor
adc
jbe
mov
inc
cmpsb
mov
lods
in
mov
in
cmp
clc
inc
movsb
test
mov
mov
sub
mov
sub
jmp
mov
mov
ffree
mov
jo
and
fcoms
mov
insb
pop
lods
arpl
ja
cmp
mov
xor
fstps
divb
jmp
ret
sub
cmp
add
shrl
xlat
lahf
sti
outsl
xchg
mov
mov
xor
stos
out
mov
lahf
sbb
stos
sbb
push
dec
sub
add
lea
xor
imul
pop
add
mov
pop
or
add
ljmp
pop
imul
xor
sbbb
fidivrl
in
pusha
test
es
fwait
inc
mov
adc
sahf
cld
ds
sub
xorl
clc
test
xor
jb
and
stos
sbb
mov
xor
cld
repz
mov
mov
sbb
sbb
or
xchg
rcl
cmp
outsl
bound
inc
cltd
fmull
pop
mull
or
sarl
stc
out
xor
in
or
push
push
rorl
cmp
inc
mov
stos
push
or
aam
adc
xor
test
int
aam
xchg
test
mov
inc
push
popa
adc
gs
sub
mov
xor
push
insb
and
xchg
cmpsl
push
adc
and
or
dec
xchg
aaa
and
mov
mov
add
push
inc
lds
xlat
or
jp
jp
bound
mov
daa
cltd
and
push
adc
push
stos
popf
lahf
push
adc
add
add
outsl
mov
outsb
mov
mov
ret
out
imul
stc
and
test
adcb
stos
hlt
dec
cs
jae
xchg
pop
push
stos
push
mov
gs
xchg
ja
bound
cmp
in
pop
popf
popa
dec
mov
testl
ror
sbb
test
inc
push
nop
ficoml
inc
int3
push
loopne
jne
pop
out
push
dec
sbb
subb
lret
hlt
sub
push
pop
movsl
pop
xchg
gs
rep
add
jle
sbb
lods
jno
cmp
aam
mov
adc
jmp
cmp
inc
mov
inc
mov
jmp
imul
in
imull
mull
pop
hlt
dec
jae
sbb
scas
call
jp
adc
out
mov
movsl
sub
cmp
xchg
push
sub
jbe
imul
mov
jge
outsb
push
outsl
out
stos
add
jmp
jae
xor
aad
cld
mov
cmp
cltd
push
outsb
pop
hlt
jle
mov
add
ret
jecxz
inc
mov
cld
adc
ljmp
fld
outsl
in
hlt
jge
les
andl
loopne
fisubl
inc
aas
push
jnp
insl
inc
scas
fimuls
mov
mov
add
in
add
fwait
mov
add
xor
sti
test
xchg
repz
leave
xchg
int
inc
mov
cmpsb
jo
sbb
lods
pop
xchg
inc
test
dec
add
js
or
jmp
mov
int
push
lcall
in
rorb
insb
mov
in
xor
mov
xor
lcall
lea
pop
or
scas
shrl
out
fdiv
jp
and
rolb
fmul
popa
ds
cld
ja
xor
clc
fldl
loope
dec
or
adc
orl
scas
add
pop
jnp
mov
mov
xchg
fmul
dec
sub
ror
mov
jne
das
sub
sbb
add
insl
dec
mov
jmp
adc
or
mov
inc
and
das
sbb
jne
ret
mov
aam
mov
sbb
pop
pop
mov
lock
mov
aam
pop
repz
sbb
std
cs
stc
dec
push
mov
adc
cmpsb
cld
xchg
das
stc
inc
aas
pop
xchg
rolb
cmpsl
aad
roll
xor
test
mov
push
int3
adc
in
pushf
pop
jl
mov
cmc
xor
stos
mov
cwtl
ja
sti
imul
pop
std
xchg
into
fldl
pusha
or
xor
mov
xor
mov
sub
cli
je
sbb
inc
mov
or
jp
mov
sub
or
lcall
or
cmp
jbe
loopne
mov
inc
movsb
es
or
sbb
inc
add
cmc
into
faddp
shrb
std
icebp
sub
rcr
mov
dec
frstor
ficoms
cmpb
pushf
hlt
arpl
movb
push
movsb
jb
xchg
movsl
inc
cwtl
jo
xchg
mov
adc
mov
pop
gs
adc
jno
xchg
mov
pop
out
jb
inc
das
pop
test
sub
push
xchg
jne
mov
sbb
cld
dec
add
adc
pop
xlat
inc
in
bound
leave
icebp
mov
sub
mov
and
mov
pop
cmp
stos
pop
jmp
push
test
cmp
xor
enter
rorb
les
into
push
repnz
loopne
push
sub
psrlq
or
lods
popf
cmp
pusha
pop
pop
pusha
xchg
or
popa
add
and
sbb
je
clc
or
sub
orl
mov
xor
sbb
mov
stos
xor
inc
xor
dec
mov
inc
sbb
cmpl
mov
in
lods
and
sub
pop
inc
mov
mov
add
adc
mov
push
enter
cmp
fwait
sahf
aam
mov
cmpsb
movl
push
sti
xor
push
ds
std
mov
roll
fld
add
stos
fisttpl
mov
xlat
iret
inc
jmp
cmp
popa
fcmovne
xor
std
or
inc
int3
xchg
data16
fldcw
and
adc
or
sub
or
sbb
cwtl
sbb
jecxz
mov
cmp
pop
nop
cmp
clc
jl
ljmp
mov
push
call
mov
mov
cwtl
outsb
in
adc
in
iret
imul
fistps
icebp
lods
mov
mov
and
orb
loopne
sahf
jg
fdivs
lods
lea
cli
jae
imul
xchg
roll
ja
adc
fisubl
mov
fwait
mov
jno
mov
mov
mov
xor
xlat
fstpl
cmp
jns
sbb
pusha
pop
inc
cmp
iret
sbb
cmp
jns
sar
cltd
imul
jle
push
xchg
pop
cli
mov
fnstsw
out
xchg
add
clc
and
rcrl
xchg
cmpsb
fisubrl
fisubrs
adc
loopne
or
out
adc
and
dec
and
mov
cli
jbe
cltd
mov
push
mov
jmp
push
jmp
jne
jno
and
pop
or
negl
std
push
mov
mov
or
sub
or
add
out
jl
inc
fmull
push
inc
and
nopl
xlat
push
outsb
sar
fldcw
ja
outsb
lods
add
jge
stos
jbe
mov
andnps
pop
sbb
xchg
pop
mov
lds
stc
pop
test
test
and
pusha
jmp
movsb
and
fbld
xchg
or
movl
mov
vprotd
test
call
xor
fdivrl
inc
push
push
dec
es
pop
adc
jno
jg
and
fdivp
sbb
mov
aas
jns
jmp
push
xor
and
les
xor
negl
mov
dec
mov
cwtl
rclb
ja
cmpsb
out
xor
pop
mov
xchg
mov
hlt
imul
stos
stos
in
cmc
xchg
adc
push
jmp
stos
in
mov
imul
mov
jnp
adc
push
jns
push
ss
out
mov
dec
leave
sub
or
cld
adc
sbb
jnp
out
in
out
mov
pusha
xchg
mov
fdecstp
dec
outsb
dec
pop
sbb
sbb
clc
sbb
rorb
test
adc
mov
shr
cmp
daa
add
dec
aas
xchg
ret
jge
push
sub
dec
cmp
lahf
jae
pop
dec
xchg
cmp
test
mov
adc
mov
jecxz
in
jo
pop
testl
dec
mov
jbe
imul
test
mov
outsb
ret
fists
out
add
mov
jl
js
mov
aam
popa
cmp
lea
cli
push
dec
mov
push
in
ret
adc
inc
xchg
push
imull
mov
or
lahf
out
jmp
repz
xchg
dec
ja
shlb
imul
js
rclb
in
insb
cmp
mov
cmp
ss
add
loop
je
das
inc
out
adc
addl
push
cmp
inc
cmp
scas
lea
out
or
cmc
jmp
mov
dec
rclb
outsl
pop
inc
pop
add
pop
std
test
sub
sbb
wrmsr
push
imul
jns
pop
int3
mov
push
imul
addr16
cmp
in
mov
cld
adc
or
mov
enter
stc
cwtl
es
sub
popf
or
xor
dec
std
push
addr16
adc
fldt
ds
stos
xchg
aad
pusha
adc
add
popa
cmp
mulb
rcll
jle
stc
adc
das
jmp
repz
loop
in
mov
jecxz
dec
xor
pop
mov
imul
add
sbb
jns
fcoml
aas
adc
jp
mov
fbstp
cs
or
inc
sub
sub
cmpsb
pop
or
push
in
cmc
loop
mov
mov
pop
mov
in
jl
mov
xor
out
loop
pop
cli
xor
fs
notl
push
fsubr
dec
movsb
repnz
and
or
pop
pop
stos
test
add
mov
inc
lcall
loop
pop
push
icebp
jecxz
mov
jno
cltd
add
cwtl
jno
jg
hlt
jg
das
mov
mov
ja,pn
xchg
push
sbbl
test
jge
out
in
mov
es
mov
cmc
mov
sbb
lret
mov
test
pop
push
lahf
mov
fs
in
sub
aaa
mov
jl
push
rcrb
push
aaa
adc
das
les
sbb
push
into
into
rclb
dec
push
sub
movsb
xlat
push
push
xchg
jns
sub
lcall
popa
ret
add
push
fs
into
or
adc
in
push
mov
in
fsubrp
repz
popf
sbb
lret
cmp
xchg
pop
inc
sbb
adc
loope
call
mov
jmp
loope
mov
adc
ret
push
lret
test
jno
mov
sub
or
mov
cmp
mov
xchg
mov
lcall
or
ljmp
jge
shlb
test
ror
jns
xchg
jecxz
mov
pop
in
movsb
scas
movsl
jno
bswap
jno
andb
add
call
cmp
fimuls
push
mov
mov
test
jo
cmpsb
inc
arpl
sti
and
or
int3
or
out
mov
fcoms
sub
pusha
jp
data16
shll
or
ret
loop
inc
jge
notb
add
mov
xor
push
mov
imul
push
leave
mov
imul
inc
cwtl
das
xchg
sbbb
dec
stos
in
and
in
xor
arpl
jmp
inc
ss
mov
mov
dec
cli
jo
and
in
sbb
test
cmpsb
mov
aaa
mov
leave
xlat
push
mov
sbb
lods
loop
inc
insl
mov
mov
into
and
add
xor
lret
and
stos
stc
fldt
ret
inc
pop
xchg
ja
lock
mov
nop
lea
pop
imul
adcb
outsb
jae
add
sub
jg
inc
lods
pop
jno
aam
pop
xchg
in
mov
test
xchg
js
mov
and
adc
inc
jl
and
fwait
inc
or
popf
insb
jnp
mov
mov
mov
stos
insl
sbb
mov
pop
lcall
in
insb
sub
jne
enter
pop
pop
push
sbb
test
mov
jnp
out
pop
test
scas
pushf
cltd
sub
cmp
adc
imul
aaa
fdivs
xor
mov
xchg
cltd
or
jge
movl
bound
xor
outsb
mov
pop
frstor
mov
fmuls
jno
int3
adc
shll
bound
jg
repnz
mov
push
test
jo
xlat
jae
loop
jmp
aad
pop
pop
inc
mov
jecxz
push
imulb
and
cmpsl
xor
adc
cwtl
sarl
cwtl
sbbb
jo
add
cltd
push
push
dec
add
jne
dec
mov
adc
lret
bnd
sarl
rorl
ss
mov
xor
aad
lods
pop
mov
in
outsb
test
lea
sub
pop
pop
cmp
into
or
or
pop
imul
enter
dec
sub
mov
scas
push
stos
pop
push
push
fucomp
repnz
mov
cld
add
cmp
nop
xlat
mov
cmp
data16
sti
lds
popf
lods
rcr
popa
inc
aaa
int
mov
repnz
mov
fwait
test
dec
jbe
fnsave
popa
dec
pop
aaa
les
call
arpl
outsb
fsubs
dec
xor
popa
mov
mov
iret
pop
in
sahf
cmp
adc
je
outsb
lahf
outsl
imul
ds
mov
or
stc
pop
xlat
pop
repz
loop
movl
mov
scas
nop
repnz
jno
int3
lea
loope,pn
ja
test
mov
mov
subl
jo
push
mov
cmp
insl
dec
lahf
and
pop
mov
ja
loopne
in
jge
fimull
leave
inc
xchg
fwait
mov
sub
and
es
mov
mov
mov
jle
lods
data16
movsb
xchg
cld
mov
lahf
fldcw
xchg
filds
mov
insb
fs
out
mov
aam
sti
cmpsl
add
add
push
sti
mov
scas
mov
fisttpl
fbld
mov
mov
push
sbb
mov
or
cmovle
mov
dec
cmpsl
adc
inc
lcall
sub
fsubrs
aas
bound
inc
push
and
xchg
loope
stc
pop
rcll
sbbl
mov
jns
cmc
mov
and
xchg
rclb
popa
mov
mov
les
pop
inc
jnp
jbe
ljmp
and
mov
sbb
into
mov
cmc
dec
lret
nop
adc
or
inc
adc
xchg
xor
dec
and
jmp
push
filds
loop
jmp
cwtl
out
mov
or
leave
jne
pop
test
mov
jmp
sub
add
dec
jno
ss
in
lcall
adc
lock
rol
out
xchg
fs
pop
cmc
out
mov
sbb
inc
mov
xchg
jbe
out
repz
or
and
mov
dec
and
cwtl
mov
lock
push
push
jmp
sbb
fisubs
mov
jns
in
sbb
xchg
in
sub
jo
adc
pop
push
icebp
aad
mov
push
aad
leave
imul
outsl
cmp
movsb
pop
mov
push
xchg
stos
adc
push
jae
sub
or
int
out
sbb
mov
mov
data16
test
std
cmp
pop
xchg
pop
xor
outsb
pushf
cmp
xchg
mov
incb
cltd
js
xorb
inc
mov
fdivr
cmp
cmp
xor
or
sub
stc
int3
std
adc
mov
jle
call
push
pop
dec
lcall
push
scas
push
out
loopne
std
push
in
cmp
pop
mov
daa
ror
in
jns
mov
mov
or
fisubs
mov
imul
shlb
add
test
and
xchg
cli
mov
push
inc
jbe
cmp
out
jle
mov
rolb
jecxz
jb
rorl
push
xchg
cmp
xchg
mov
rcrl
ret
leave
dec
lret
and
repnz
xor
js
mov
jb
sti
mulb
push
mov
dec
outsb
push
shll
int3
push
pop
jae
pop
test
sbb
xor
incl
cwtl
inc
or
andb
aas
push
dec
cmc
into
xor
jbe
sbb
in
sarb
addr16
mov
mov
mov
sub
daa
test
int
xchg
fdivr
xchg
stos
push
mov
jge
into
lret
lods
sbb
pop
popa
leave
xor
pop
adc
adc
ja
ss
sub
cmp
leave
dec
scas
adc
pop
push
jl
into
cmp
insl
dec
mov
inc
les
mov
call
and
clc
outsl
aas
fcomps
jns
lds
insl
aaa
mov
inc
pop
pop
and
push
jp
mov
mov
leave
arpl
lcall
movsl
dec
scas
in
cmp
cld
pop
jo
hlt
add
xchg
rcrl
jmp
jae
mov
jge
mov
imul
sub
jnp
lea
pop
nop
lods
mov
xor
cmp
loope
dec
ret
adc
mov
iret
and
inc
movsb
push
je
imul
xlat
mov
xchg
and
data16
fdivr
enter
in
ss
inc
and
stc
add
and
mov
sbb
call
fwait
and
test
outsl
adc
cs
cmp
shll
sub
mov
outsb
mov
xor
fidivs
pop
testl
fstpt
push
sub
out
adc
mov
mov
stc
jno
mov
cmpl
in
jecxz
or
xor
lds
xor
cmp
push
ja
add
popf
or
inc
cmpsl
inc
sbbb
test
mov
xor
jle
addb
lock
sahf
push
iret
cld
scas
push
les
xor
sbb
xor
sahf
fldt
jnp
push
cmp
xchg
xlat
sub
mov
push
daa
dec
mov
cmp
push
xchg
or
cmp
mov
int
mov
dec
pop
cmp
sub
cmp
or
sahf
xchg
jp
cmp
stos
outsb
fistl
test
sub
or
lahf
je
sbb
mov
popa
fdivrl
mov
lock
jl
pop
xchg
or
lods
pop
notb
mov
jmp
and
aad
xor
xchg
pusha
aam
push
cltd
test
pushf
pop
mov
cli
int3
cmpsl
push
mov
sti
fdivrs
inc
xchg
cmp
leave
nop
adc
push
mov
sbb
inc
test
lea
add
mov
int3
movsl
or
fld
jle
mov
test
sti
int
push
pop
pop
rolb
into
cmp
dec
testl
gs
mov
adc
mov
cwtl
adc
jp
adc
push
push
mov
push
sbb
aam
addr16
pop
aad
pop
dec
leave
pop
les
or
ljmp
test
push
stos
dec
xor
ss
leave
sarb
rcl
mov
push
sub
aas
test
fcmovne
or
mov
sbb
and
mov
adc
jbe
mov
add
pop
lds
pusha
cmp
dec
lret
sub
aam
addr16
movsb
lds
jl
jae
imul
xchg
fadds
scas
pusha
mov
jge
data16
mov
or
mov
shr
inc
pop
fisttpl
dec
cmc
scas
ficoms
outsb
xchg
and
rcr
ss
adc
push
jle
lcall
lods
test
in
xor
sar
ror
push
daa
mov
xchg
dec
pop
jmp
pop
aad
shlb
add
sub
and
aad
in
insl
push
clc
cmc
mul
pop
int3
xchg
ljmp
add
mov
lods
jmp
call
fwait
imul
stos
enter
jle
loopne
jnp
fistps
xchg
lds
out
mov
push
pop
mov
push
out
push
and
pop
inc
mov
imul
mov
cmp
push
rorl
mov
sahf
shrl
sbb
divb
adc
fimuls
ds
dec
mov
cmc
xor
fdivl
add
sar
test
jecxz
jl
fistl
and
jecxz
jno
sbb
or
dec
neg
or
insb
mov
aad
dec
mov
jge
cmpl
push
sbb
negb
cmc
lahf
pop
addr16
faddl
popf
out
lock
test
ret
jecxz
jb
mov
cmp
cmp
xor
sbb
pop
js
es
sbb
adcb
jno
mov
sbb
bnd
mov
mov
pushf
aam
movsb
popf
jnp
mov
push
repz
mov
test
push
sub
cld
jl
jle
mov
insb
dec
lcall
out
inc
inc
push
or
mov
jp
outsl
stos
add
push
xor
adc
je
cwtl
in
sbb
div
dec
ja
aad
nop
das
outsl
jg
pop
int
mov
xor
icebp
xchg
jne
add
shlb
sub
sbb
iret
inc
mov
jg
lcall
dec
data16
inc
cmpsl
adc
xchg
lcall
push
push
jb
jecxz,pn
dec
mov
mov
insb
xchg
into
in
stc
popf
inc
daa
imul
xchg
in
outsb
inc
add
les
out
repz
fsubrl
fs
xor
popl
pop
xchg
sbb
sub
cld
sar
andl
pop
mov
std
jns
insb
fcomip
pop
test
lcall
leave
push
mov
sbb
les
lcall
andl
andb
int
pushf
sbb
imul
lds
fsubrs
mov
mov
lock
fildl
add
mov
ss
popl
inc
aaa
lock
xlat
insl
mov
ja
stos
out
and
mov
js
repnz
dec
adc
loope
xor
stos
adc
inc
mov
dec
jl
shll
pushf
int
aas
cmp
xor
dec
push
mov
push
inc
imul
inc
std
or
push
sbb
xor
je
push
xchg
pop
rcr
dec
dec
pop
jle
fsts
rorb
enter
mov
mov
add
call
xor
lret
lods
sbb
and
test
inc
add
push
push
jns
mov
data16
xchg
jp
jg
repnz
fs
push
fwait
stos
and
insb
lahf
inc
leave
mov
xchg
movsb
scas
mov
dec
push
jne
adc
cmp
jnp
mov
loope
inc
push
fdiv
int
popf
cmp
sub
sub
inc
lds
mov
aad
and
imul
inc
inc
loope
xchg
scas
xchg
int
mov
mov
jns
pop
sbb
fbstp
fucomip
or
jle
fstpl
mov
and
jle
inc
mov
es
idivb
adc
jae
cmpl
xor
dec
push
adc
mov
incl
xor
fistps
lret
push
lret
loop
inc
add
dec
adcb
lahf
dec
push
mov
cmpb
in
mov
mov
push
mov
push
cmp
in
cmp
xchg
dec
sub
pop
jo
mov
cwtl
mov
or
cmp
cmc
sbb
jnp
xor
sti
rorb
jnp
shrb
sub
jl
sahf
xchg
sub
mov
aas
cmp
sub
into
cmp
mov
loop
orb
in
sti
loope
arpl
sbb
cmp
cld
shl
js
pop
sbb
cmp
inc
jnp
mov
cs
mov
mov
sahf
das
or
movsb
scas
sti
test
lcall
mov
and
jmp
mov
data16
sbb
jne
mov
mov
imul
ficompl
mull
lret
dec
aaa
movsb
or
mov
mov
rcl
push
cmc
iret
mov
xchg
stos
inc
add
push
iret
push
dec
push
adc
sub
and
stc
add
cmp
dec
and
cmp
ja
lret
and
add
insl
adc
outsb
inc
out
out
sbb
xchg
arpl
jbe
jg
ds
or
les
imul
fidivrs
xor
repnz
xchg
ss
jbe
xlat
fnstenv
cmpsb
push
jp
test
push
pushf
pop
repnz
in
jge
jne
sbb
add
test
lods
inc
add
jae
outsb
pop
push
or
bnd
ret
lods
and
cltd
mov
cli
fdivs
pop
mov
fwait
pop
mov
std
lods
int3
add
mov
imul
xorl
js
mov
jnp
ljmp
or
in
sbb
jge
mov
fidivrl
fdivrp
sbb
or
lock
adc
test
and
add
mov
das
sbb
sub
sti
jl
imul
stc
ret
sahf
xchg
ja
sti
repz
add
xor
inc
cmpsl
ss
mov
mov
pop
add
aaa
pop
mov
test
test
sahf
loop
pop
js
stos
ret
sbb
sub
rcll
mov
out
adc
loop
into
je
test
test
xchg
mov
ret
or
sub
aas
lahf
vdivps
mov
aad
sbb
test
inc
mov
leave
out
in
mov
cli
or
xchg
icebp
adc
jecxz
xor
loop
jecxz
cmp
movsb
negl
or
imul
lds
cmp
cmp
out
push
push
adc
add
jno
test
rcll
cmc
dec
leave
dec
sahf
jl
inc
lods
and
inc
out
sbb
xchg
fistl
nop
neg
sahf
adc
je
pusha
or
sub
mov
aam
stos
cltd
jns
enter
arpl
mov
movsl
sahf
dec
add
das
pop
fimuls
call
adc
and
sbb
and
aaa
pop
data16
les
js
les
xor
ret
mov
imul
adc
pop
imul
pop
iret
jbe
xchg
pop
or
shlb
xor
icebp
xchg
xor
int3
xchg
xor
or
inc
xor
outsl
mov
mov
sbb
and
or
rorl
subb
or
int
fistpll
sar
mov
fwait
sbb
jp
insl
lock
popf
ret
movsb
cmc
loope
mov
insl
fsubr
iret
pop
xchg
repz
or
fidivrs
into
lds
pop
cmpsl
enter
lahf
jmp
pop
sbb
sub
mov
sarl
mov
jae
pop
sarb
dec
fildl
loop
scas
push
jmp
call
out
subl
xchg
iret
fs
cmc
dec
mov
xor
push
out
into
arpl
in
das
call
mov
movsl
arpl
sbb
js
mov
cmp
add
negl
sub
inc
xor
std
cmp
xchg
popf
pop
int3
out
aas
insl
adc
or
cmp
fmuls
jmp
pop
adc
dec
push
adc
sti
push
adc
xchg
pop
mov
jbe
cltd
dec
lcall
mov
lds
nop
loop
cmp
in
leave
jbe
iret
push
jnp
imul
les
ljmp
adc
dec
push
pop
js
insl
mov
mov
inc
inc
les
daa
cmp
movl
jne
shlb
fcompl
lods
adc
xor
fadds
sar
scas
fistl
movsb
in
mov
jmp
cltd
jge
push
rcrl
data16
inc
hlt
mov
xor
jle
inc
add
imul
dec
das
into
xor
push
mov
inc
pusha
pop
rcr
mov
jb
jne
int3
xchg
dec
mov
sub
scas
dec
jmp
mov
cwtl
sahf
enter
lcall
ficomps
jmp
fcoml
xchg
pop
fistps
push
aaa
and
cmpsb
ljmp
lahf
adc
push
or
scas
xchg
push
mov
cwtl
repz
cmp
cmp
sahf
es
pop
jle
mov
stc
in
jno
lock
jmp
lods
mulb
fwait
cs
outsb
cmp
jns
into
mov
sbb
sbb
repnz
push
out
outsl
ljmp
aad
ficoml
clc
mov
pushf
sbb
out
aas
pop
fwait
gs
mov
out
cmc
push
mov
test
xchg
pop
and
push
ss
xor
push
pop
mov
stc
das
mov
sbb
repz
lock
xor
sbbl
shll
jecxz
sbb
add
mov
adcl
nop
xchg
push
mov
scas
cmc
std
add
xor
or
and
jbe
jae
pop
inc
xchg
push
out
cmp
sub
jbe
pusha
rolb
mov
ror
jbe
outsb
ds
adc
mulb
jg
das
movsb
sub
and
xor
cltd
mov
cs
sbb
insl
and
imul
mov
outsl
mov
inc
add
imul
daa
xlat
cmp
sub
sbb
mov
mov
popa
cmp
xchg
push
popf
fsubrl
cmp
shrl
test
repz
enter
imul
jne
sbb
pusha
sbb
iret
popf
xor
lods
mov
es
inc
adc
negb
daa
add
sub
add
mov
mov
mov
xor
in
aad
xchg
fs
movl
add
bound
dec
mov
mov
pop
pop
dec
nop
jecxz
repz
test
movsl
xchg
push
outsb
bnd
push
or
inc
into
and
test
pop
bound
dec
repz
test
insb
or
inc
ljmp
mov
dec
xchg
jg
repz
fstp
lcall
mov
mov
cmp
jmp
mov
int3
dec
in
dec
fnsave
dec
mov
push
hlt
enter
sti
jecxz
mov
xchg
out
ss
into
into
ljmp
or
clc
js
cltd
pop
mov
ror
cmp
push
fxch
xor
mov
aas
mov
push
rorl
cmp
mov
in
test
fdivl
js
cld
mov
dec
rsm
cwtl
xor
sbb
xchg
xor
out
fcmovb
js
icebp
pusha
ds
mov
sbbb
mov
in
inc
loop
xchg
xchg
add
cmpl
add
sbb
es
shrl
insb
lea
sub
mov
out
pushf
fisttps
pop
pop
cmp
jl
xlat
std
dec
outsb
jbe
sub
mov
sbb
aam
rcrl
les
jae
pusha
mov
mov
push
inc
cli
jno
pusha
addr16
in
and
pop
push
nop
arpl
sbb
repnz
sarl
subb
cmp
movsl
das
jg
push
lret
xchg
scas
and
sub
cmc
sbb
popa
sbb
pop
adc
sbb
popa
lret
xor
pushf
pop
fimull
mov
in
mov
mov
sub
cltd
pop
dec
fldl
cmp
dec
xorb
jge
push
int3
andb
jmp
lcall
loope
mov
add
jns
lret
cmp
mov
pop
out
jle
xchg
add
or
pushf
leave
xchg
or
mov
pop
popf
ss
sbb
mov
loopne
imul
mov
dec
adc
xchg
adc
ja
mov
sbb
jnp
mov
outsb
aas
sbb
mov
and
jle
arpl
rorl
fisttps
push
rclb
mov
cmp
cmp
lret
sub
lea
leave
adc
mov
cmp
rolb
and
es
and
repz
xor
es
mov
popf
xor
dec
sub
das
sub
dec
lcall
and
hlt
call
lea
mov
jmp
add
sub
mov
mov
sbb
test
push
sbb
dec
es
fs
loope
lods
js
cmc
pop
mov
sub
jge
bound
imul
loop
movsl
and
jno
je
out
test
cmpsb
lret
pop
sarl
and
jnp
neg
ret
ret
fmull
xchg
shrb
jo
or
lods
jle
jmp
cli
xor
mov
call
mov
aaa
mov
fucompp
xor
cmp
xchg
cmpsb
sub
jecxz
push
sub
jle
adc
inc
pop
ja
cmp
orb
dec
cmp
pushf
jecxz
cs
addl
push
jae
push
pop
mov
pop
les
adc
in
stc
xor
das
pusha
aas
dec
enter
or
adc
stc
dec
pop
js
mov
andb
jmp
test
divb
mov
lods
mov
jnp
loop
jns
fwait
ss
rcrb
cmc
pusha
lods
icebp
pop
loop
mov
bound
mov
sbb
mov
jns
scas
push
inc
jle
inc
mov
lcall
mov
fwait
push
mov
sbb
pop
addr16
mulb
sahf
adc
mov
dec
inc
adc
jno
inc
pushf
push
lods
fistpl
adc
xchg
repnz
fildl
inc
mov
push
pop
cmp
adc
fistl
mov
mov
adc
adc
bound
outsb
movsb
mov
mov
dec
shr
clc
iret
mov
jno
bound
sarb
mov
mov
push
cmpsb
push
shlb
adc
sub
push
sahf
movsb
cmpsb
mov
xchg
jecxz
cmp
fbld
movsb
stc
pop
xlat
popf
insb
mov
shll
daa
fldt
mov
and
inc
mov
dec
ret
adc
icebp
jae
hlt
cmp
mov
inc
out
xchg
jbe
pop
nop
adc
fidivrs
xor
mov
gs
ret
jae
inc
lcall
inc
jo
xlat
mov
lea
out
addr16
loope
xor
filds
scas
mov
scas
aas
push
aad
sub
jno
ret
xor
sbb
and
daa
mov
call
daa
out
or
sbb
movb
sbb
in
jge
dec
mov
nop
cmp
xchg
lret
into
addb
imul
into
in
enter
dec
pop
je
sbb
push
shll
aam
sub
xchg
xor
sbb
cs
mov
out
mov
nop
fisubrl
lds
and
push
inc
rcr
push
stos
dec
imul
mov
mov
or
inc
js
dec
sahf
int
xor
pop
rcrb
push
cs
jne
or
cld
movsb
or
mov
dec
pusha
jg
frstor
push
ret
cmpsb
sbb
push
int
push
imul
dec
aad
test
inc
or
cltd
fs
mov
in
jecxz
mov
fcomps
fwait
sarl
outsl
xchg
std
adc
rcr
aam
lret
lea
idiv
sarl
je
rcll
arpl
mov
fidivl
jmp
mov
mulb
xor
imul
sbb
test
inc
loopne
loop
lret
adc
sub
push
add
add
mov
push
aam
fldl
aas
dec
push
out
jo
jns
dec
dec
addl
pusha
enter
xor
mov
push
inc
imul
xor
stos
and
adc
mov
stos
cmp
push
xor
pop
test
inc
scas
mov
adc
sub
adc
and
xchg
lahf
lods
push
pop
jb
orl
cmp
in
jae
fld1
das
cmp
inc
clc
test
and
mov
mov
es
loope
push
jbe
shll
ja
add
cwtl
inc
mov
lcall
in
sbb
mov
pop
pop
xchg
ficoml
into
mov
sub
les
nop
sbb
add
je
push
inc
decl
and
test
jmp
lcall
lret
sub
mov
bound
inc
jmp
xchg
cs
jmp
shll
mov
xchg
cmpsl
fsubs
pop
sub
mov
insb
out
xor
subb
shr
out
xchg
aad
clc
loope
les
mov
sbb
inc
mov
repnz
dec
ficoms
push
lahf
cmp
test
xor
sub
cld
inc
add
inc
cmpl
jbe
dec
cmc
inc
addr16
insl
mov
fiaddl
fisubrs
sub
sub
dec
inc
imul
fldenv
loope
loop
je
xchg
sub
neg
ss
outsb
dec
mov
imul
mov
out
mov
fcomp
inc
sbb
ljmp
ret
cmpl
add
cmpsl
les
sti
sub
xchg
or
jg
add
dec
ljmp
lcall
rclb
add
and
out
add
mov
call
ret
stos
test
dec
sub
jge
inc
mov
or
jl
dec
xor
shl
adc
rcl
mov
sub
push
sbb
sub
adc
lds
lods
jp
in
sbb
jg
hlt
sbb
cmpl
pop
mov
dec
sub
lock
es
andl
inc
jns
popf
xor
or
insl
movsl
jg
inc
inc
daa
xor
int
push
subb
cvtps2pi
lret
sub
or
mov
inc
pop
push
cmp
ret
pop
xor
sbb
or
clc
test
enter
mov
ror
push
jno
out
mov
jg
xchg
sbb
sub
icebp
dec
lods
loope
mov
add
fstl
movsb
negb
pop
stos
push
xchg
cmpl
adc
pop
mov
sub
fmuls
sbb
insb
jg
jmp
sti
test
aas
dec
xchg
pusha
sub
je
fmull
mov
sub
mov
jp
movsb
mov
and
and
insl
flds
jb
shl
mov
pop
mov
push
sbb
sbb
loopne,pt
sub
adc
mov
jge
dec
sbb
and
pusha
adc
jno
in
adc
push
inc
cmp
repnz
mov
test
int
addr16
sbb
and
les
enter
dec
repnz
stos
cli
stos
xor
aam
sbb
aas
adc
mov
mov
ficoms
insb
mov
adc
jno
fldenv
mov
stos
ja
mov
fldenv
inc
in
loopne
fsubs
sbb
rcr
stos
add
mov
cs
aad
out
mov
loope
arpl
jg
mov
enter
insb
pop
rcl
test
hlt
push
ret
ja
inc
repz
push
rcrb
sub
sub
mov
shrd
cmp
enter
stos
mov
push
repz
fisubl
popf
add
inc
gs
inc
cltd
xor
xchg
daa
hlt
lahf
mov
popa
sub
xchg
mov
repz
inc
cli
mov
pop
xor
or
cs
inc
loop
daa
mov
mov
and
dec
out
cltd
push
test
mov
rcrl
sti
fistpll
jbe
pop
fcomps
bound
sbb
pop
call
jns
push
adc
aas
out
jl
stos
je
cli
scas
int3
fs
mov
inc
pop
inc
add
mov
jp
push
sbb
add
xchg
dec
into
adc
pop
xor
cmp
repz
dec
std
fcmovnbe
int3
push
jle
lret
sbb
sub
or
jo
xchg
push
out
sbb
faddl
push
push
cmp
push
and
rcrb
dec
or
in
pushf
in
sti
mov
add
enter
cmpsb
mov
fdivs
xchg
or
jae
sub
popl
aas
sahf
sub
jo
push
sub
inc
mov
mov
jne
mov
push
sbb
in
andl
scas
mov
daa
movsb
and
or
pop
pusha
iret
lret
les
mov
test
sub
movsb
rcr
movsl
mov
loope
cmpsl
scas
pop
lds
or
sbb
jl
dec
inc
push
cmc
in
mov
mov
cmpb
sub
push
xor
mov
addr16
or
mov
lahf
in
pop
pop
mov
aam
mov
mov
mov
insl
mov
cmc
or
push
mov
mov
add
test
xor
mov
inc
repnz
xchg
pop
scas
adc
sbb
jbe
or
and
fisubrs
add
inc
xchg
je
cmc
lods
push
pop
add
mov
and
ret
hlt
jmp
ljmp
sub
loopne
xchg
push
mov
dec
jb
es
mov
ret
or
mov
dec
push
pop
jg
xchg
inc
in
mov
inc
sbb
ret
negl
mov
std
cmp
pop
and
cmp
aam
xchg
mov
jae
add
or
adc
out
mov
jl
inc
mov
sti
inc
sub
gs
ljmp
mov
cmp
dec
mov
jo
daa
cmp
mov
nop
push
ss
mov
rorb
xorb
stos
dec
lcall
pusha
add
and
iret
dec
mov
shll
xor
cmp
xor
cmp
das
inc
push
xchg
loopne
or
adc
sbb
sahf
pop
sub
jle
in
add
lret
or
adc
add
shlb
ret
int
iret
sbb
out
outsb
sub
shlb
jge
pop
mov
mov
dec
or
sbb
cmp
xor
les
lcall
mov
or
ljmp
fwait
aam
add
insb
mov
loop
lods
in
pop
xor
cmp
and
repnz
cs
mov
xchg
push
sbb
jge
and
cmp
add
mov
mov
test
fsubrp
popa
push
sbb
push
fcomip
sub
mov
lock
aad
mov
std
sub
mov
loope
mov
push
xchg
pop
imul
mov
adc
pop
pop
xlat
neg
push
cmpsb
xorb
clc
sbb
scas
and
js
xchg
jge
repnz
or
sbb
cmc
and
push
dec
test
test
out
mov
clc
lock
and
scas
mov
subl
pop
xor
ffreep
mov
jns
hlt
mov
xor
sub
in
xor
shll
std
pusha
ficomps
cmp
pop
xor
mov
clc
clc
dec
inc
jbe
cmp
mov
pop
mov
fstps
inc
push
xchg
fldenv
rcr
fs
xchg
leave
push
leave
mov
lahf
mov
imul
xlat
fldcw
or
scas
dec
fucomip
lods
ds
add
and
cwtl
aas
xchg
das
addr16
lea
jl
xchg
inc
lret
jle
or
popf
push
sahf
sbb
mov
out
mov
dec
inc
mov
fldl
mov
sbb
cld
or
mov
mov
cld
inc
push
fldt
pop
out
notl
lcall
test
icebp
lds
and
sbb
mov
mov
lret
repz
inc
daa
shl
mov
jl
data16
cltd
push
das
shll
fisttpll
sub
cs
jle
adc
int
and
and
outsb
in
orb
sbb
test
mov
cmp
out
je
int
dec
fcomp
lock
sbb
or
sub
sbb
jo
push
fildl
xor
popf
fcomps
mov
jae
fstps
jb
dec
and
cltd
test
mov
push
int
dec
jb
gs
jb
jne
inc
sbb
pop
sub
lock
movsl
ja
imul
pop
shl
mov
bound
dec
adc
stos
dec
insb
jne
out
fdivrs
jmp
add
jae
mov
fsub
bound
adc
adcl
add
arpl
addr16
jp
add
notb
shlb
std
int3
lcall
sbb
repz
gs
push
std
scas
mov
test
into
inc
bound
xchg
movsl
xchg
fwait
jb
inc
lret
pop
jle
nop
int3
rclb
gs
lret
xchg
dec
fisttpl
mov
cmp
gs
jge
cs
rorb
rorb
mov
push
or
fst
and
or
cwtl
push
mov
std
js
and
cmpsb
xor
xchg
pop
sbb
jne
xchg
call
add
jg
in
into
mov
fiadds
inc
js
push
les
mov
xchg
pushf
mov
notl
inc
mov
inc
inc
shlb
push
stos
js
test
incl
dec
dec
mov
dec
lock
test
jnp
pop
inc
inc
cmpsb
adc
int3
pop
int
xchg
stc
jb
pop
movsb
insl
adc
idivl
xor
cmp
add
jne
xor
mov
jmp
adc
inc
push
push
xor
and
adc
rolb
mov
mov
add
adc
xchg
mov
es
mov
inc
dec
mov
mov
scas
mov
mov
insl
xchg
in
push
cmp
add
mov
pop
sbb
push
push
jmp
cmpsl
lcall
push
add
cmp
fisttpll
leave
mov
mov
stos
out
mov
es
mov
lcall
pop
and
xchg
push
imul
movsb
ja
xor
dec
ficoms
xchg
stos
fisubrs
les
fsubr
int
jne
fdivrl
mov
inc
cmp
xlat
jb
cmp
mov
ret
add
xor
es
xchg
and
lret
mov
pop
and
fisubs
aas
dec
stc
shll
and
out
loop
mov
hlt
pusha
repz
push
sbb
daa
dec
mov
bnd
jmp
ljmp
xor
sti
sbb
push
fcomps
pop
jns
insl
lods
jp
iret
pop
addr16
pop
pop
inc
lahf
in
fmuls
xchg
cltd
repnz
rcrb
cmp
loopne
loopne
js
lock
or
call
subl
inc
cmp
aaa
mov
ret
xchg
jne
cmp
out
pop
xlat
jne
and
in
xchg
pop
sub
dec
cmp
out
adc
and
pop
pop
test
adcl
out
jl
insb
nop
notb
js
dec
push
or
mov
push
add
pop
popf
dec
sbb
hlt
cmp
lock
out
push
and
inc
pmaddwd
jmp
adc
fmuls
stos
loopne
jns
jbe
mov
cli
popa
iret
fsubrl
push
xor
outsl
data16
in
in
sub
mov
out
pop
xchg
add
mov
or
sahf
fdivrl
fmul
sbb
out
dec
or
mov
mov
push
sbbb
dec
sbb
iret
test
mov
mov
inc
jg
mov
bswap
cmp
add
inc
push
popf
adc
xor
pop
fdivr
sbb
cmp
inc
add
cmp
nop
ljmp
mov
jno
andl
ja
fdiv
sbb
mov
xlat
xchg
fnsave
push
cmp
stos
js
insl
mov
xor
add
cmp
sbb
popf
movsl
loop
popf
int
mov
dec
sbb
je
sub
xor
jnp
aam
mov
push
sbb
rcl
fists
cld
ljmp
mov
jb
shll
imul
fcomps
sbb
sub
xlat
lahf
xor
rol
mov
rcll
andl
leave
mov
lods
adc
adc
mov
cmpsb
call
popf
mov
test
jmp
inc
push
sti
dec
dec
mov
in
neg
loopne
jne
jns
mov
sarl
jb
popa
fwait
push
mov
xchg
call
inc
out
fnsave
cmp
mov
lds
ja
add
ljmp
cmpsb
inc
fnstenv
cwtl
gs
mov
inc
pop
mov
aad
lods
sti
mov
ret
enter
dec
sbb
xchg
push
push
jl
ljmp
cmp
dec
add
insb
sahf
shl
inc
popw
cld
pushf
cmp
lea
cmc
leave
mov
push
out
pop
lds
loope
scas
fs
jecxz
int
push
cltd
ss
xor
and
mov
jo
ds
stc
ret
sbb
sbb
pop
stos
loopne
xchg
sarl
clc
jns
fildll
mov
repz
jb
outsb
lcall
lock
pusha
sbbl
test
jo
mov
dec
test
cmpsl
repz
push
aad
movsl
addr16
inc
fdivrl
and
xchg
xor
aad
lcall
das
xorl
adc
xchg
std
inc
insb
inc
outsb
jg
fwait
mov
adc
roll
movsb
add
les
push
into
inc
or
xchg
int
sbb
call
insb
xorl
nop
dec
and
mov
or
xor
lea
xchg
mov
in
insb
inc
bswap
ret
int3
rclb
loopne
repnz
sti
and
shlb
mov
xor
aad
add
fisubrs
cmp
cld
sahf
aaa
and
aam
xchg
ror
or
loopne
into
jns
pushf
xchg
aam
pop
mov
in
data16
loopne
mov
sahf
cs
jge
inc
mov
std
jg
cmc
out
addr16
cmp
mov
rcll
in
cmc
jecxz
insb
andb
push
lret
jle
and
inc
dec
pop
add
leave
add
pop
lock
or
jecxz
adcl
mov
push
ja
adc
or
mov
mov
testl
add
out
mov
inc
mov
or
push
mov
inc
imul
pop
pop
mov
icebp
aam
jb
enter
fnstenv
test
mov
imul
shl
xor
outsl
and
pop
andl
lock
dec
add
jle
add
xchg
xor
mov
sub
or
push
iret
ljmp
mov
jl
adc
mov
xlat
mov
cmpsl
fmull
fsubl
mov
data16
in
cmpsb
push
lret
and
cmp
cmp
rcrb
jp
mov
adc
jl
ljmp
mov
es
mov
fidivrl
subl
adc
inc
inc
adc
pop
popa
push
ljmp
adc
popa
js
pop
cld
pushf
dec
pushf
sbb
pop
pop
ss
push
sbb
rcll
push
jne
jb
push
ja
push
rep
mov
test
or
sub
daa
rcrb
mov
pop
sbb
sbb
and
push
sub
mov
mov
dec
inc
push
push
add
das
pop
stc
cmpsl
cmp
nop
repz
mov
xchg
data16
xchg
adc
jnp
add
inc
dec
mov
mov
incb
push
je
add
jecxz
shll
bound
daa
popf
cwtl
out
flds
jae
push
sbb
mov
ss
sub
xor
jecxz
icebp
mov
aam
sti
lods
dec
push
pop
pop
or
int3
xor
fldl
test
cmpl
pop
add
std
test
cli
aaa
ffreep
adc
or
and
add
mov
imul
xor
cmp
or
add
fs
fmuls
jg
movl
mov
pop
add
jl
iret
cmp
das
dec
jmp
inc
stos
mov
in
xchg
dec
pop
sub
add
out
call
outsl
imul
pushl
inc
mov
popa
dec
aam
fwait
sub
aaa
in
add
insl
xchg
jne
mov
ret
test
jmp
or
negl
mov
pop
push
inc
xchg
sbb
xor
push
xchg
daa
xchg
pusha
repz
mov
sarl
test
mov
pop
ljmp
popf
scas
mov
stos
nop
and
nop
arpl
jmp
rclb
sbb
in
clc
addr16
repz
es
imul
stc
or
pop
lret
shrl
shl
insb
pop
pop
popf
std
ret
rcrl
add
sbb
rorb
fistl
jae
sarb
lods
mov
test
xchg
cmp
sub
out
dec
pop
jl
and
mov
mov
dec
jmp
pop
add
ja
and
aam
int
daa
loop
shr
and
mov
pop
lods
sub
xchg
and
jb
add
in
mov
lret
sbb
adc
dec
das
sti
test
xchg
mov
mov
inc
icebp
adc
sbb
xchg
je
cmp
in
popa
xchg
and
jae
movzbl
mov
inc
testb
jl
int
mov
dec
cmp
mov
lret
sub
xor
push
mov
cmp
pop
sub
cmp
fstpl
aad
gs
lock
jmp
adc
scas
fsubs
test
lcall
orb
jecxz
mov
sub
xor
cmp
jp
lock
jno
lods
nop
sub
adc
imul
mov
adc
pop
roll
std
test
arpl
sub
lock
mov
loop
xchg
or
dec
and
push
xchg
test
jbe
pusha
jmp
repnz
lock
add
ja
pop
fbld
sbb
jns
enter
push
mov
cmp
fmulp
jo
push
stc
sbb
inc
lea
push
pop
mov
push
in
lock
pop
jne
jno
andl
arpl
sub
jge
mov
lods
pop
mov
mov
fildll
jbe
out
pop
or
sub
cld
xor
xor
push
in
sbb
sub
pcmpgtb
add
dec
jg
lods
cmc
add
out
cltd
mov
cmc
dec
or
divb
xor
add
sub
inc
add
out
sub
mov
xchg
jae
pop
cwtl
adc
jno
push
or
lds
and
ret
mov
in
ret
cs
cmc
arpl
test
mov
xor
shrb
inc
lahf
or
dec
int
stos
icebp
dec
push
vpshad
add
mov
sub
sahf
add
sub
cltd
mov
pusha
ss
and
mov
and
xchg
cmp
cmp
push
xor
roll
cmc
pop
push
dec
lds
aaa
xchg
pop
mov
mov
out
cltd
push
xor
pop
mov
push
push
aam
mov
shrb
adc
mov
or
lock
adcl
jl
in
dec
es
push
rcrl
dec
sub
in
add
jge
xchg
adc
mov
push
das
aam
xchg
cmp
mov
pop
mov
xor
mov
test
cmp
adc
ljmp
clc
aad
ljmp
jbe
in
jb
rclb
rorl
lods
cmp
idivl
xor
out
dec
jp
mov
lea
xor
data16
dec
outsl
mov
pop
scas
mov
sbb
push
out
sbb
shld
cmpsl
add
adc
push
mov
outsb
fistps
xchg
pop
xlat
inc
mov
lcall
int
in
lea
addr16
int3
aaa
lods
jo
jb
test
scas
add
push
pop
arpl
mov
shl
ret
or
shl
jae
pusha
sub
push
mov
fs
test
mov
fsts
xchg
sub
out
shr
loop
mov
cmp
mov
mov
jge
pop
fcmove
aas
pop
mov
cmp
lret
and
inc
sbb
subb
jecxz
mov
jnp
and
dec
mov
add
cmp
orl
les
sub
pusha
adc
mov
inc
jae
fstp
es
mov
lcall
pop
lods
mov
push
bnd
cld
into
aas
inc
inc
and
and
loopne
stc
stc
add
cmp
stos
in
out
jp
shll
or
pop
aaa
shl
inc
fdivs
push
pop
stos
pop
push
pop
ss
inc
rol
cmpsl
mov
out
jmp
insl
loop
mov
jmp
xchg
out
nop
dec
int3
sub
dec
mov
xlat
xor
mov
xor
xchg
in
mov
jb
push
repnz
stos
xchg
fcom
mov
adc
xlat
out
jns
sub
mov
in
sbb
cwtl
testb
mov
inc
cmp
pop
cmc
ss
dec
std
mov
es
cmp
arpl
inc
push
mov
mov
add
cmp
and
movsl
jns
jns
pop
push
pinsrw
pop
add
adc
mov
mov
outsl
jecxz
fisubs
stos
insb
scas
in
sbb
inc
test
dec
sbb
mov
sub
mov
pop
mov
out
pusha
popa
cmp
sbb
adc
dec
nop
nop
loop
jle
lea
aad
mov
mov
das
mov
jae
push
adc
xor
mov
jns
jnp
imul
and
pop
jae
outsl
cmp
mov
aaa
and
jg
mov
mov
shlb
das
iret
push
int3
int
inc
adc
test
jbe
inc
xchg
cmpsb
cmpsl
ret
mov
dec
jmp
push
dec
xchg
loope
xor
mov
pop
faddl
push
jecxz
test
fadds
dec
push
xchg
push
testl
daa
xchg
dec
inc
es
mov
and
pushf
negb
xchg
stc
pop
popa
push
add
and
cmp
mov
nop
adc
stos
cbtw
inc
les
mov
pop
dec
xchg
and
and
jne
dec
xlat
jo
push
enter
orb
fucomip
rcrb
dec
pushf
sbb
inc
cmp
data16
push
pop
mov
scas
into
repnz
cs
iret
and
cmpsb
mov
jl
xor
out
mov
loop
sbb
lahf
or
adc
loopne
pop
jb
sub
sbb
loop
repnz
add
icebp
in
mov
cmpb
loopne
mov
andl
cli
fsts
aas
pop
push
pop
cli
mov
cmp
cwtl
loop
fdiv
lret
testb
outsb
out
sbb
fisubl
inc
stc
add
popf
test
scas
daa
cs
mov
xor
push
ss
push
jb
sti
add
addr16
mov
jg
out
ficoml
cmp
ret
jle
repz
xor
scas
jne
xchg
inc
pop
outsl
dec
popa
pop
insl
jb
lcall
shll
cmp
pushf
push
lods
dec
dec
hlt
cmp
insb
dec
cmpsb
xor
mov
xor
xor
dec
sbb
push
pop
aaa
aas
mov
mull
adc
cmpsl
push
dec
push
cmp
inc
cmpsb
icebp
stos
sahf
mov
inc
rcr
test
fldcw
and
cmp
jp
andb
mov
sbb
jo
insl
ret
xchg
cld
xchg
sub
lret
push
std
cmp
push
mov
xor
xor
es
cmpsb
jb
and
and
adc
push
hlt
scas
cmp
pop
adcl
cwtl
jle
lods
shl
roll
jne
sbb
xor
pop
jmp
sahf
xchg
nop
divl
jae
adc
ret
out
call
movsb
mov
jmp
xchg
cmpl
or
sbb
mov
ficoms
push
iret
outsb
fwait
je
add
stos
test
ret
divb
xchg
negb
and
test
cs
lahf
mov
ret
xlat
jbe
cmp
imul
pop
inc
jns
fdivs
insl
add
cmp
push
xor
jnp
xor
inc
jb
push
jge
jae
dec
shll
subl
xor
push
mov
pop
xor
and
in
mov
inc
mov
pop
mov
shrl
pop
xchg
sub
and
movsl
adc
popf
push
jmp
sub
jno
ret
pop
and
sbb
loop
flds
adcb
mov
lcall
and
add
jnp
or
cmp
adc
outsb
rclb
andl
dec
sbb
or
and
mov
cmp
jmp
pop
pushf
fwait
mov
pop
dec
xchg
fstl
fisttps
mov
fsubrl
dec
mov
mov
test
ficoml
aas
jae
js
imul
and
mov
in
sub
mov
test
data16
and
jge
test
std
mov
pop
or
pop
add
add
addr16
iret
stos
pop
in
and
test
fchs
jecxz
pushf
cmpb
mov
pop
in
ret
xor
mov
pop
jl
std
xchg
subb
ret
addr16
xchg
cmp
inc
scas
and
andl
dec
sysret
cmc
test
and
ja
lret
or
lds
pop
int
lock
clc
or
enter
adc
je
mov
xchg
xor
and
bound
scas
mov
jne
repnz
orl
mov
cltd
movsl
sub
pop
mov
test
out
add
pop
xchg
clc
pop
mov
adc
push
cmp
and
sub
add
or
ret
and
jl
mov
xchg
inc
gs
inc
andb
xor
bound
out
stos
xchg
or
xor
sti
loopne
negb
jge
fistpl
sub
hlt
ljmp
ret
pop
out
sbb
xor
cmc
clc
xor
leave
clc
movsl
lret
mov
and
popl
cltd
mov
dec
popf
fsubrl
in
push
cmp
bound
loopne
insl
adc
mov
jb
les
push
pusha
ss
add
shrl
loopne
inc
loopne
stc
es
dec
lcall
loopne
pop
ja
sarl
rcrl
mov
ds
scas
push
xchg
fidivrs
or
xor
and
jle
xlat
fistl
inc
out
or
test
aas
insl
jp
icebp
sub
adc
jo
cltd
insb
push
sbbb
or
push
jns
sbb
inc
into
mov
adc
cmp
lahf
pop
adc
lods
mov
cld
xchg
test
cs
stos
push
test
add
fisttps
pop
jo
or
mov
sbb
mov
pop
dec
fldt
jbe
xor
adc
sub
and
or
jns
adc
ret
hlt
and
cmpsb
sbb
aas
adc
loop
xlat
cmp
xchg
ja
push
push
xorb
loopne
shll
in
inc
sbb
cli
stos
cli
adc
pop
xchg
mov
ret
mov
or
cwtl
sub
pop
mov
cld
pop
adc
ds
pop
popf
inc
mov
push
fdivl
inc
sub
cmp
push
xchg
xchg
pusha
cmp
outsb
or
test
shll
mov
mov
mov
icebp
dec
out
push
int3
dec
mov
cmc
lock
in
push
outsl
jbe
insb
stc
stos
mov
adc
in
mov
xlat
adc
jae
cwtl
movsb
add
lds
mov
cmp
pop
xor
jno
shl
xchg
out
stos
mov
jb
gs
and
xor
jne
sbb
mov
jb
and
sub
push
sbb
repz
test
lods
outsb
adc
and
adc
mov
adc
push
std
mov
in
xor
test
movsl
mov
loope
xlat
dec
push
ret
fdivrs
adc
mov
imul
sbbb
cli
popf
pop
shlb
in
mov
pop
push
and
xlat
pop
and
lds
mov
jmp
out
loope
inc
mov
stos
push
cmp
mov
xchg
xchg
lret
add
xchg
or
add
xchg
cmp
push
imul
mov
inc
jb
cmp
dec
push
bound
xchg
jns
push
fdiv
lcall
and
out
stos
clc
imul
xorl
or
imul
mov
dec
xor
xor
das
jo
fdivrl
ds
dec
push
push
mov
ret
xchg
adc
jl
sbb
push
daa
sti
jl
nop
dec
outsb
and
push
fdivl
notb
ss
dec
or
xor
jmp
xchg
push
pop
ret
loop
faddl
dec
leave
je
inc
mov
shl
outsb
cmpsl
mov
and
aaa
outsl
fcoml
rcrl
sub
mov
push
push
xor
pusha
adcb
and
mov
push
in
test
xor
pop
pop
add
jge
sbb
cmp
lods
jp
xchg
jae
pop
add
push
add
fs
sbb
jle
cmp
dec
jnp
mov
cld
push
dec
sbb
sub
mov
cmpsl
adc
push
les
sti
mov
push
mov
pop
ljmp
mov
xchg
dec
aad
dec
sbb
loop
or
hlt
mov
lds
adc
mov
jl
fidivl
xchg
ret
rclb
jmp
cld
aam
shr
push
inc
hlt
enter
repnz
js
fwait
aad
ret
push
jnp
sub
clc
negb
aaa
push
mov
bound
fstps
repz
mov
sub
mov
inc
cmp
push
mov
push
mov
call
aam
mov
out
or
sub
mov
out
ret
add
xchg
insb
insl
pusha
mov
mov
xchg
fisubrl
int
adc
jo
sub
mov
pop
fistps
pop
sub
aad
or
mov
bnd
rorb
sub
xchg
rorl
lret
test
outsb
mov
cmp
stos
fnstenv
int3
sbb
jge
notl
cli
pop
inc
pop
cld
clc
ljmp
lret
and
xchg
pop
stos
enter
test
inc
mov
push
add
pop
loopne
fwait
insl
cmp
pop
subl
mov
jb
sub
cmp
movsb
dec
xchg
decb
push
ss
jmp
push
dec
nop
stos
jno
adc
js
sahf
cmc
fists
sbb
xor
mov
push
inc
and
pop
mov
ret
aaa
pushf
inc
mov
loope
xor
xor
popa
stc
xchg
xchg
add
xchg
mov
and
inc
test
push
mov
addl
dec
mov
loop
fnstenv
imul
mov
push
out
stos
sbb
addl
cmp
roll
push
cmp
fldenv
je
shlb
jle
mov
mov
xor
lds
cmp
repz
in
xor
addr16
sub
push
popa
adc
adc
out
lret
mov
adc
test
lods
push
xchg
sti
or
stos
cmp
fcoml
movsl
fwait
lahf
aam
inc
sub
cmp
jle
mov
fs
in
and
ds
sub
sub
jae
shrb
dec
sbb
in
ljmp
mov
dec
hlt
pop
movsb
or
es
enter
scas
fstl
xchg
inc
sbb
mov
or
xchg
fwait
cmc
stos
sbb
sbb
adc
xor
jmp
jle
mov
dec
jl
cmp
xor
insb
mov
pop
xor
dec
push
pushl
ljmp
jge
or
loopne
push
daa
dec
lock
inc
pop
ja
loop
adc
inc
sub
and
xchg
add
lods
and
adc
pop
cwtl
xor
mov
jns
lods
jnp
mov
leave
insl
xor
scas
xor
fmuls
ss
cmpsl
ror
mov
inc
in
sub
into
loope
iret
inc
call
insl
icebp
mov
or
js
cmp
dec
push
xor
test
pop
pop
jg
pop
outsl
lcall
dec
add
or
or
mov
aas
rcrl
mov
adcb
jne
cmp
icebp
jmp
mov
xchg
out
push
pop
mov
and
push
vzeroall
push
aam
inc
fisubrs
jecxz
push
cwtl
hlt
in
lods
jge
push
lods
mov
icebp
ljmp
fisubs
setge
arpl
xor
mov
and
test
push
sbb
push
add
in
or
stc
rcr
mov
jb
iret
xchg
scas
roll
js
adc
push
inc
lods
imul
cli
and
mov
int3
sub
gs
test
jnp
cmp
sbb
mov
inc
sub
jbe
fidivrs
mov
push
cmp
mov
shlb
in
sti
shl
cmp
adc
aad
aam
inc
insl
sti
imul
sbb
mov
ret
test
shrb
hlt
and
jb
dec
imul
push
in
jbe
loopne
push
loop
aam
mov
dec
test
mov
jae
inc
mov
push
jp
sar
call
mov
insl
fcompl
push
dec
pop
xchg
xchg
xorb
inc
mov
adc
and
inc
fdivl
sbb
lock
jae
add
inc
sbb
iret
xor
add
xor
or
test
adc
and
pop
sbb
mov
push
push
xor
mov
insb
ret
clc
mov
mov
pop
testb
test
frstor
ljmp
imul
sbb
add
mov
pop
mov
inc
mov
mov
mov
adcl
cmp
inc
inc
adc
cmc
insl
gs
pop
xlat
lret
mov
test
push
rsm
sub
incl
add
inc
mov
movzbl
xor
movsbl
xchg
mov
inc
inc
lea
xor
add
inc
sub
or
inc
inc
mov
dec
jne
imul
mov
dec
mov
pop
sub
sub
pop
dec
add
pop
inc
sub
add
dec
inc
lea
movzwl
add
lea
dec
mov
add
ret
push
push
imul
add
push
movzwl
mov
dec
xor
dec
sub
push
mov
inc
mov
dec
push
xor
mov
inc
add
add
inc
lea
push
inc
mov
lea
push
mov
add
xor
lea
inc
push
lea
or
push
inc
add
pushl
imul
call
inc
add
xor
imul
mov
dec
dec
or
movzwl
pop
ret
add
add
cmp
jb
dec
xor
dec
imul
mov
and
dec
mov
imul
movsbl
inc
and
dec
inc
inc
or
mov
add
add
cmp
jb
lea
pop
xor
add
add
inc
add
inc
xor
lea
inc
dec
lea
dec
sub
xor
inc
lea
xor
dec
inc
mov
add
inc
test
jbe
mov
inc
sub
inc
add
inc
dec
add
dec
imul
xor
and
and
imul
dec
mov
mov
mov
movzbl
dec
inc
add
add
lea
and
and
add
mov
dec
mov
mov
inc
mov
mov
inc
mov
lea
dec
lea
mov
and
dec
jne
add
mov
mov
lea
mov
movzwl
dec
mov
lea
inc
inc
mov
mov
lea
dec
add
add
lea
mov
lea
mov
or
lea
test
jbe
xor
xor
add
mov
and
add
mov
inc
mov
dec
inc
add
dec
mov
lea
inc
dec
inc
add
inc
dec
mov
and
dec
xor
mov
mov
dec
movzbl
inc
sub
add
lea
movswl
and
lea
and
mov
lea
imul
movzbl
lea
sub
mov
sub
dec
mov
mov
inc
movzbl
dec
mov
add
dec
jmp
push
add
movzwl
mov
lea
dec
mov
dec
add
mov
movsbl
inc
mov
add
inc
add
lea
lea
dec
dec
dec
mov
mov
inc
mov
sub
sub
mov
inc
add
add
mov
or
movsbl
imul
or
mov
add
dec
mov
cmp
je
sub
dec
lea
push
or
call
call
dec
add
call
call
mov
inc
lea
mov
sub
add
mov
ret
add
mov
pop
sub
ret
push
imul
inc
inc
movzbl
inc
push
inc
add
push
inc
push
inc
push
movzbl
mov
inc
dec
xor
call
mov
push
mov
lea
xor
xor
sub
imul
neg
inc
mov
add
add
inc
or
mov
inc
movswl
mov
add
mov
inc
mov
dec
dec
je
dec
mov
add
mov
lea
xor
mov
imul
inc
mov
imul
repnz
mov
inc
add
mov
jmp
mov
inc
inc
mov
mov
mov
inc
sub
sub
mov
inc
inc
movzwl
sub
jmp
xchg
sub
cmp
sarl
sti
adc
mov
lods
fsts
sub
inc
cmp
movsl
hlt
sbb
daa
mov
pop
fcoms
adc
pop
cmp
sbb
test
mov
add
adc
cmpl
mov
jno
jg
xchg
hlt
loopne
ret
xor
mov
push
push
mov
out
mov
andl
mov
mov
or
shl
mov
add
or
sub
loopne
sahf
dec
jp
cwtl
pushf
or
inc
inc
cltd
pop
loop
shr
shlb
push
mov
and
sub
rcrl
jg
mov
or
fstl
inc
cltd
mov
sub
nop
xchg
addl
xchg
out
mov
insl
flds
sbbb
or
mov
fistpll
imul
cmpsb
mov
and
or
icebp
roll
cmc
aad
test
in
push
fidivrs
and
adc
pop
insb
inc
inc
ror
pop
xchg
push
fimuls
pushl
outsl
mov
push
pop
sub
xor
push
xor
lods
ret
sub
scas
jmp
and
inc
lds
ja
push
rol
mov
cmp
dec
movsl
xchg
sub
cmpsl
mov
in
jb
jae
mov
pop
outsl
dec
inc
dec
lock
push
jb
lods
push
ja
arpl
popf
les
jg
mov
mov
adc
pop
dec
sub
test
add
mov
ja
xchg
in
testl
xchg
addr16
mov
fimull
cmpsl
aam
inc
rcr
pop
out
fidivs
cwtl
push
aad
mov
or
xor
jle
addr16
rcll
or
lds
lods
mov
bound
dec
rolb
pusha
and
flds
pop
inc
icebp
mov
enterw
repz
cli
lods
adc
xchg
dec
iret
dec
mov
pop
cs
dec
cli
gs
mov
outsl
mov
icebp
cwtl
and
mov
mov
adc
or
or
cltd
aad
data16
sbb
cmp
loope
out
jne
inc
out
sbb
gs
add
push
sbbb
push
sti
divb
push
jo
mov
jle
hlt
stos
jbe
cmp
cmp
rclb
scas
push
xchg
pop
jnp
push
jge
into
fldl
je
or
std
add
dec
dec
cmpsb
gs
and
mov
andl
lcall
aam
int3
mov
imul
xchg
xor
mov
or
add
push
bound
inc
inc
push
mov
xchg
jbe
push
xchg
and
sahf
dec
cmpsb
insb
in
pop
inc
push
icebp
jmp
push
js
and
gs
and
push
push
daa
push
push
inc
dec
imul
add
aam
pop
loop
mov
add
ljmp
div
push
mov
jne
sbb
outsl
mov
ss
pop
ret
xchg
xor
pusha
jp
hlt
fidivrs
addr16
cld
or
rolb
adc
push
mov
nop
ret
cmpsb
jnp
jo
test
inc
pop
mov
das
and
sbb
push
shr
pushf
mov
fistpl
pop
in
jp
mov
xor
fiadds
dec
ds
stc
mov
ljmp
add
mov
inc
sub
fs
mov
mov
cld
les
and
out
aaa
rcrb
xchg
jne
add
mov
ss
add
pop
jnp
js
rcl
cmpsl
add
mov
pop
push
dec
dec
cmp
cmp
lahf
mov
cmp
enter
xchg
and
add
sti
mov
mov
rcr
pop
xlat
out
in
lret
mov
mov
in
xor
mov
sbb
rcr
out
roll
test
cmp
adc
inc
bound
mov
lods
push
enter
les
sbb
lret
mov
sub
std
dec
mov
outsl
xchg
xchg
xchg
xor
jnp
scas
outsl
call
aas
mov
mov
mov
dec
cli
daa
sub
and
aam
repnz
mov
inc
mov
sub
xor
jg
xor
jns
fcom
lcall
inc
sbb
pop
lret
test
or
hlt
jne
loope
or
dec
mov
lock
or
xchg
stos
sbb
in
and
pushf
dec
vprotw
repz
loope
mov
mov
jo
sub
loop
out
mov
ds
adcb
xor
lahf
jmp
aas
mov
or
repz
xchg
inc
fnsave
xchg
jbe
adc
pusha
scas
mov
pushf
xchg
cmpsl
mov
out
aaa
repz
dec
std
mov
and
xchg
lods
pop
and
inc
fdivrp
ja
xchg
push
inc
leave
inc
cltd
xchg
rcrb
sti
dec
lahf
popa
ret
adc
adcl
mov
lds
arpl
adc
stos
je
push
push
sub
js
rcr
lea
jns
cmp
jmp
bound
xorl
mov
jae
add
pop
call
inc
inc
mov
mov
jecxz
xchg
test
sbb
fiadds
movsb
clc
mov
outsl
jno
and
pop
xchg
addr16
jmp
icebp
lds
sbbl
rcrb
push
and
cs
lret
jnp
push
int3
pop
adc
pop
or
xor
mov
jp
fmull
add
jge
or
fnstcw
sub
and
mov
out
pop
push
xchg
mov
xchg
jb
add
mov
dec
mov
lahf
out
sub
pop
dec
fs
mov
ficompl
out
out
cmp
int3
mov
in
xchg
scas
or
addr16
mov
fcomps
push
jl
aam
std
dec
pop
mov
xchg
or
dec
rcrl
pop
dec
enter
add
jle
out
or
loop
sbbb
cmp
nop
adc
es
push
sti
or
inc
xchg
stc
add
fwait
sbbl
mov
push
mov
lds
repz
ds
add
cwtl
mov
lret
xlat
xchg
push
lods
bswap
sub
in
push
push
xchg
ror
mov
adcl
pop
push
mov
testb
mov
pop
jb
pop
into
xor
iret
sbb
push
mov
into
jle
mov
lcall
jle
sti
addl
jle
les
ljmp
pop
xchg
and
outsl
push
imul
jmp
lds
mov
pop
fstl
sti
rcll
and
dec
mov
xor
mov
mov
nop
repnz
mov
jp
xchg
fcmovb
adc
fwait
xor
mov
mov
and
dec
repz
repz
enter
xchg
mov
insb
ds
cwtl
push
push
setp
cs
pop
jae
cmp
dec
mov
push
or
mov
sbb
dec
pop
jmp
pop
adc
and
add
movsb
mov
pop
ss
jecxz
cmpsl
pop
mov
mov
dec
call
sub
sbb
out
out
loopne
inc
clc
stc
dec
jecxz
sbb
inc
mov
jecxz
jbe
frndint
sbb
cltd
xchg
jl
addr16
jle
repz
pmaxsw
pop
adc
cmp
dec
rcrl
jecxz
mov
das
jns
dec
dec
dec
pop
mov
fidivrl
pop
popf
xor
pushf
jg
stos
aam
cwtl
dec
jg
in
setnp
sbb
js
jecxz
sbb
dec
cmp
push
jmp
xchg
or
jp
sub
cmp
xor
lahf
adc
sub
shrb
sbb
jecxz
push
pop
mov
inc
lods
mov
popf
popa
and
test
jg
or
insb
sarl
or
add
xor
jne
fstl
lret
and
out
sahf
fimull
out
inc
data16
cmc
clc
lods
test
ficoms
loopne
fsub
sub
mov
xchg
mov
out
fsubl
movsb
pop
or
stc
clc
lods
sbb
push
neg
jnp
dec
cli
mov
mov
lock
gs
aas
lods
push
mov
adc
mov
xor
mov
mov
pop
lds
out
fcoml
out
lcall
fisubs
mov
mov
inc
pop
in
faddp
test
test
lds
cmp
add
jno
lahf
mov
dec
bnd
inc
xor
lods
outsb
and
sbb
xchg
cs
mov
testb
aaa
pop
jmp
fwait
mov
test
cli
mov
jns
int3
lahf
xor
push
mov
adc
or
xor
movsb
imul
cli
ret
lcall
adc
and
inc
mov
cmp
cmpsl
lea
mov
pop
jge
scas
addr16
cs
mov
or
into
dec
push
orps
mov
bound
out
loope
jmp
mov
cld
push
jns
addl
lahf
mov
aaa
inc
dec
cmp
out
inc
mov
fdivl
jno
rcrl
inc
pop
mov
repz
lahf
arpl
push
pop
dec
or
notb
sbb
cmpsb
pop
mov
cmp
pusha
mov
icebp
leave
fsubrs
jl
std
push
xor
sub
out
js
ds
pushf
mov
call
lods
add
mov
sbb
test
or
inc
das
movsl
mov
call
pushf
stc
pop
and
dec
in
xor
push
jecxz
andb
xor
iret
mov
push
icebp
call
in
das
lcall
pop
insb
add
dec
ljmp
xchg
pop
inc
int3
mov
push
mov
fildll
mov
pop
imul
xchg
ret
loope
lock
mov
sub
push
or
push
push
and
jl
cmp
rcl
xchg
xchg
daa
xor
mov
mov
insb
adc
inc
push
push
or
clc
mov
clc
push
sub
xchg
imul
lret
and
aas
jb
add
fst
inc
mov
test
push
adc
dec
loop
sbb
cmc
nop
iret
and
or
push
inc
lock
and
call
pushl
push
push
ds
sarl
xor
dec
fidivrl
lock
lcall
and
es
pusha
fistpll
jg
into
mov
push
xor
and
int3
sbb
insl
aam
icebp
cmp
lcall
jo
xor
decb
inc
nop
jno
out
lcall
sbb
pop
in
ret
sbb
mov
push
sbb
push
push
test
iret
dec
imul
inc
sbb
and
shl
inc
add
push
xor
das
andb
mov
and
xchg
cs
negl
insb
in
jmp
stos
insl
cmp
jae
mov
into
pop
pop
add
mov
es
mov
fneni(8087
shll
jmp
ss
jnp
jb
xor
stos
sub
mov
aam
lret
cmp
xchg
pop
fcoms
adc
add
jbe
jl
outsb
test
xor
jmp
mov
popa
xor
xor
sbbb
rcrl
dec
dec
xor
cmpsl
inc
sbb
popl
inc
mov
out
fs
mov
pop
adc
mov
inc
pusha
xchg
add
mov
leave
xor
cmp
xchg
xchg
xlat
fiadds
pop
test
andb
repnz
sub
cmp
sub
pop
push
jb
jo
in
push
sub
pushf
cld
subb
push
pxor
imul
push
inc
fcoms
ds
mov
push
sarl
sahf
stc
cltd
mov
jecxz
dec
inc
aam
nop
shl
push
dec
mov
mov
and
xchg
and
xor
inc
mov
xchg
xor
cli
mov
nop
xchg
pop
inc
jne
mov
rcrb
scas
push
cmc
cltd
sbb
cmp
pop
adc
shr
mov
push
push
sti
mov
sbb
iret
mov
aaa
int
mov
inc
mov
sbbl
ret
adc
sub
add
out
scas
mov
iret
cmpsb
ret
and
dec
cmp
jecxz
or
imul
sti
das
pop
cmp
dec
xchg
notl
clc
mov
add
lcall
or
mov
inc
out
aam
nop
test
fildll
lcall
jg
in
xor
pop
mov
in
pusha
mov
ljmp
dec
hlt
pusha
or
mov
jg
pop
mov
roll
push
sub
sarb
sbb
pop
loopne
mov
push
add
jmp
and
sub
adc
iret
les
pushf
xchg
sahf
sarb
mov
pusha
mov
push
xchg
dec
nop
mov
fadds
scas
out
and
xchg
cli
das
rorb
xchg
fmuls
xchg
or
ss
mov
nop
sub
je
lret
and
and
mov
or
lea
fmul
push
and
in
aam
out
xchg
ja
pop
push
out
fnstcw
mov
jae
mov
and
fldt
pop
xchg
sbb
clc
and
sub
pop
icebp
xorb
addr16
leave
xor
hlt
and
ret
sbb
imul
loopne
cmp
sub
inc
repnz
faddl
js
stos
iret
mov
jmp
or
js
dec
lret
inc
cltd
pop
rclb
cmc
push
pop
jg
mov
fmuls
movb
and
mov
pop
int3
pop
lcall
leave
mov
icebp
lcall
or
pop
dec
pop
lret
add
je
in
cli
adc
or
out
add
aam
popa
or
in
inc
and
call
dec
dec
call
movswl
push
lea
call
and
lea
inc
movzwl
lea
mov
call
inc
imul
imul
mov
add
movsbl
sub
inc
inc
mov
sub
sub
lea
dec
call
add
inc
dec
mov
call
add
lea
call
mov
or
dec
mov
imul
lea
dec
pop
inc
mov
add
add
xor
pop
mov
and
pop
dec
lea
or
sub
pop
lea
dec
imul
add
sub
dec
mov
dec
pop
dec
dec
pop
dec
inc
mov
mov
dec
call
mov
lea
movswl
and
ret
mov
xor
push
add
imul
push
imul
push
inc
add
push
and
inc
push
inc
movswl
mov
mov
mov
push
dec
ret
push
inc
push
dec
sub
add
sub
push
dec
inc
add
call
pop
ret
jmp
dec
inc
pop
pop
ret
push
mov
dec
movswl
mov
mov
dec
mov
lea
lea
add
mov
imul
dec
mov
mov
xor
inc
and
imul
lea
add
sub
inc
add
imul
dec
add
dec
pop
ret
sub
sub
mov
add
and
mov
xor
mov
mov
lea
imul
mov
mov
sub
xor
inc
movswl
mov
inc
inc
inc
dec
dec
sub
sub
dec
add
cmp
jb
mov
push
mov
add
push
add
mov
push
and
and
xor
imul
xor
xor
movswl
lea
xor
sub
mov
push
sub
mov
push
dec
dec
pop
dec
inc
dec
xor
mov
mov
inc
dec
dec
inc
xor
mov
lea
mov
imul
inc
mov
sub
lea
movzbl
movswl
or
imul
inc
add
sub
dec
add
dec
inc
movzbl
movswl
lea
and
or
lea
mov
inc
sub
inc
add
mov
mov
dec
imul
mov
jmp
add
inc
add
add
add
adc
add
and
adc
inc
add
lcall
les
add
xor
mov
aas
pop
sahf
mov
adc
je
scas
mov
imul
jmp
addl
aam
ret
add
jo
std
jbe
jnp
mov
pop
push
inc
lahf
aas
pmulhuw
xchg
sahf
cwtl
jp
push
cmp
add
mov
jae
cltd
inc
cmp
test
cwtl
push
pop
push
cmp
cmp
push
jns
mov
sub
outsb
fstpl
push
push
fildl
inc
mov
pop
cmpsb
and
aaa
sarl
mov
mov
data16
fsubrl
xchg
push
xchg
jnp
shr
dec
jg
movsb
xchg
mov
mov
popf
aas
mov
inc
cs
dec
add
push
jmp
js
addl
hlt
mov
stos
xchg
and
sbb
pop
pmovmskb
dec
lret
jo
or
xchg
lds
nop
enter
lods
pop
push
jmp
ljmp
faddp
cmp
cmp
outsl
adc
mov
push
push
mov
cltd
das
sbb
adc
adc
insb
push
repz
jno
daa
jge
xor
lahf
mov
add
pop
dec
mov
sub
ss
push
xor
xor
sub
sbb
add
cmp
jp
sbb
pusha
xor
mov
ljmp
movsb
mov
lods
fildl
int
pop
aam
cmp
dec
mov
xor
pop
test
push
jne
call
inc
xor
inc
sub
add
xchg
aam
mov
jle
hlt
sarl
jp
sbb
or
repnz
pop
jno
cmp
sub
fcomps
out
xchg
jle
xchg
lret
rolb
outsl
pusha
fsubrs
jp
shufps
jl
imul
mov
mov
mov
add
or
and
cmp
pop
cmp
mov
sbb
in
scas
push
movsl
dec
je
dec
add
push
cmp
iret
jle
hlt
adc
adc
dec
push
ret
inc
inc
pavgb
adc
imul
mov
sub
cmp
imul
pop
nop
ret
hlt
mov
fisubs
xchg
lret
fwait
out
data16
and
sti
mov
sub
xchg
push
mov
jp
mov
outsb
test
or
mov
jecxz,pt
ljmp
push
add
cmp
or
sbb
pop
xchg
into
std
and
lea
lret
pop
rcll
and
stc
test
add
push
in
adc
add
sahf
mov
mov
sbb
and
icebp
stc
movsb
adc
divb
push
dec
loop
sub
jecxz
mov
sbb
lods
cmpsl
ficoml
icebp
in
popf
xchg
or
inc
jns
cmpsb
dec
sahf
nop
int
es
scas
dec
sbb
int
xchg
xor
mov
mov
ljmp
push
je
fsubs
fsubrl
enter
pop
jl
jno
ds
lock
jbe
jl
xorl
daa
dec
inc
or
cmc
inc
dec
mov
cmp
clc
push
add
bswap
in
cmp
jle
shlb
popa
sbb
fucomip
es
outsb
inc
pop
fimuls
cmovge
push
adc
pop
arpl
mov
dec
dec
loope
decl
in
popf
iret
mov
jmp
dec
pop
and
in
jl
test
pop
jne
pop
pop
lds
jg
mov
jae
test
int3
movzwl
fisubrs
adc
xchg
outsb
mov
xchg
fs
jnp,pn
nop
and
sbb
jne
mov
pop
and
test
mov
pop
dec
sahf
js
mov
out
in
fstpt
out
idivb
fcoms
xchg
pop
movsb
andl
sbb
jae
mov
pushf
adc
pusha
sbb
mov
fsubrs
pop
outsb
jae
cmp
xor
inc
cwtl
icebp
call
cmp
and
mov
sub
pop
xchg
xchg
xchg
nop
jae
rol
lods
dec
and
cmp
icebp
test
fld
nop
xchg
xchg
mov
mov
roll
movsb
dec
sub
sti
movl
test
push
lds
into
and
ds
rcl
dec
das
adc
roll
mov
loop
pop
pop
mov
insb
loopne
lods
add
and
adc
sub
push
aad
jl
je
or
cmp
icebp
sub
xchg
bound
adc
insb
popa
repz
mov
push
jmp
aaa
std
jb
mov
pop
out
cmp
stos
imul
jb
fcompl
cmp
loop
gs
mov
faddl
imul
mov
addr16
cs
movsb
in
into
push
cwtl
out
dec
int3
jp
add
push
pop
testl
movsl
dec
xchg
fldl
dec
add
imul
imull
sbb
and
inc
test
outsl
or
jb
jle
mov
js
pop
out
sarb
jg
mov
jmp
arpl
ret
adc
es
pop
pop
cmp
leave
loope
xchg
mov
or
dec
xor
pop
xchg
iret
push
or
lea
jl
idivb
push
loopne
xchg
push
fxsave
icebp
xchg
push
addr16
scas
pusha
cmp
add
jnp
cwtl
cmp
scas
push
jp
adc
cltd
pop
out
or
adc
lret
push
jmp
jne
jnp
push
mov
mov
sbb
pushf
jne
lods
inc
inc
pop
or
enter
iret
push
bound
outsl
adc
je
mov
fsubp
scas
insl
adc
and
xchg
push
inc
iret
dec
fdivp
xchg
andb
xchg
inc
dec
inc
xchg
dec
adc
test
jae
fisttpl
not
aam
mov
insb
push
stc
cwtl
mov
je
arpl
rclb
sub
mov
stos
adc
xor
adc
fldcw
or
scas
js
mov
mov
movsl
add
mov
lret
and
sbb
lods
daa
inc
sub
mov
addb
push
cmp
and
mul
pop
sub
movl
aas
in
movsb
scas
mov
pusha
ja
js
in
cli
mov
div
popa
aad
mov
cmp
pop
cwtl
rclb
mov
lea
xchg
loope
ljmp
stc
sbb
addb
mov
dec
sti
pop
ljmp
leave
fwait
loop
push
in
icebp
int3
dec
cmpsl
or
std
xlat
cli
add
push
sub
sbb
lret
sar
stos
cld
inc
xchg
rorl
push
mov
xchg
test
in
rcr
cld
cmp
adc
sub
shrl
push
dec
insl
sarl
aam
lds
cmp
or
js
loopne
adcb
lock
mov
add
push
fwait
ss
pop
sahf
add
leave
xchg
cwtl
jle
in
in
jno
sti
std
xchg
repz
es
dec
xor
sub
ljmp
dec
aam
push
movl
lock
scas
mov
adc
stos
jno
inc
dec
xchg
jno
mov
inc
xlat
fld1
sub
or
jno
sub
mov
cmp
xchg
mov
lret
cmpl
add
icebp
pop
dec
xlat
cmp
mov
and
mov
test
fsubl
sub
insb
shlb
sub
sbb
jmp
cmp
push
push
mov
inc
and
repz
adc
mov
ret
mov
aad
popa
xor
sub
and
pop
push
popa
lock
and
sub
sub
cmp
bound
shrl
jnp
outsb
jno
stc
xchg
sub
push
addl
or
fstpt
cmpsb
xchg
icebp
popf
mov
adc
or
jo
popf
repnz
jmp
or
roll
and
sti
cltd
repnz
hlt
dec
pop
jo
xor
ret
insb
add
gs
inc
sub
addl
lods
lods
repz
rorb
mov
std
push
fiaddl
lcall
inc
mov
and
push
dec
and
or
jns
test
nop
cmp
loope
stos
lret
mov
adc
lds
into
ljmp
jns
popf
aas
dec
lods
pop
xchg
out
test
into
fwait
or
push
pop
outsl
or
jmp
mov
cwtl
adc
pop
std
clc
or
and
pop
bound
repnz
or
lahf
cld
or
mov
xor
fcmovnu
rcl
xlat
shl
fsubrp
lods
inc
mov
xor
and
push
and
sub
inc
jbe
or
sbb
mov
dec
fmuls
or
sti
sub
test
xchg
mov
sub
or
adc
fisubl
inc
add
lahf
out
mov
push
test
test
dec
inc
lds
fs
mov
xchg
das
and
bound
mov
clc
ljmp
ja
aas
je
out
add
movsl
dec
lock
daa
nop
fsubrs
xchg
adcl
rclb
or
jge
pop
sub
insb
jnp
lcall
adc
jo
mov
loopne
jns
mov
js
jns
push
push
xchg
insl
push
incl
jle
push
fnsave
add
cli
push
adc
cmp
dec
xchg
je
clc
adcb
xor
pop
je
mov
xchg
xor
mov
dec
push
mov
or
fucomip
orb
jae
out
jbe
fcoml
in
cmp
push
nop
and
iret
pushf
test
cmp
inc
xchg
sub
inc
mov
sbb
adc
nop
mov
and
lcall
jmp
cmp
dec
mov
js
cmpsl
xchg
rcrl
jge
jo
adc
out
mov
jo
add
jg
adc
add
mov
sahf
test
std
mov
adc
icebp
adc
outsb
mov
mov
dec
push
out
dec
shl
clc
and
mov
jge
adc
push
notb
cmpsl
divl
sarb
inc
push
push
movsl
std
jns
lea
fistpl
fidivrs
push
mov
das
std
pop
sbb
xchg
xor
bound
test
imul
hlt
pop
scas
outsb
pop
jo
addb
notl
dec
test
imul
xlat
dec
imul
shl
mov
push
push
xlat
xor
hlt
inc
or
scas
aad
push
movsb
aam
mov
div
outsb
and
lods
aaa
add
jp
sar
shl
add
or
mov
outsl
std
movsl
dec
xchg
inc
out
mov
and
shrb
ret
mov
std
jno
std
sar
mov
aaa
inc
cmp
adc
popa
lods
adc
lahf
ja
nop
popf
push
mov
popf
lods
push
rcrl
popf
xchg
sti
xor
mov
jnp
adc
mov
push
fcoml
cli
lds
fwait
loopne
mov
out
mov
adc
cmp
mov
rolb
inc
push
aad
push
inc
mov
cmpsb
inc
xor
in
lods
insb
ret
popf
push
pop
sub
cli
int
xor
rolb
hlt
mov
mov
mov
mov
lods
sub
mov
fidivrs
inc
adc
xchg
aad
in
jo
std
mov
sub
cmp
dec
cmp
int
jo
jb
pop
cmpsl
test
pop
jmp
xchg
addr16
stos
add
pop
jne
pop
mov
sti
in
std
movsb
sub
test
cltd
fdivl
push
jg
aaa
inc
cmc
ja
pusha
std
cwtl
stos
aas
stos
gs
mov
sub
xchg
pop
ljmp
add
stc
pusha
or
mov
xor
mov
push
mov
jp
xor
fldl
arpl
fildl
jl
loope
cmc
and
xchg
sub
cmp
test
add
xchg
std
outsl
mov
sahf
add
inc
imul
fldt
cltd
push
into
lret
xorb
outsb
fisttps
inc
loopne
inc
inc
jecxz
cmpsl
or
and
jo
lcall
push
xchg
and
fwait
xchg
mov
mov
shlb
xchg
lahf
mov
sub
add
clc
sub
add
mov
fwait
movsl
lock
mov
and
push
mov
mov
or
jp
loop
ds
sub
xor
mov
push
mov
add
inc
loope
pop
fs
lds
mov
iret
jbe
push
stc
ljmp
lret
out
lock
stc
stc
popa
sub
inc
inc
cmp
dec
or
and
inc
pop
sub
xor
xor
stos
pop
mov
adc
inc
xchg
and
ds
jbe
gs
or
imull
mov
sub
add
adc
push
xchg
mov
xor
addr16
shlb
pop
adc
dec
push
pop
xor
inc
adc
popf
out
pusha
fwait
sbb
mov
or
dec
pushf
jle
sub
jns
fs
cld
cmp
xor
mov
pop
test
adc
lret
test
add
push
call
mov
orl
add
pop
loop
jecxz
pop
test
xor
mov
dec
lods
pop
adc
sub
xchg
clc
pop
and
xchg
and
mov
xor
or
mov
cmp
sbb
insl
lahf
pop
out
pop
cltd
xchg
rclb
xor
mov
push
jnp
mov
popl
add
jle
mov
imul
xchg
pop
dec
cmp
adc
xor
xchg
insl
lds
mov
clc
dec
lahf
pushl
leave
push
lock
mov
inc
push
dec
xor
cmp
sbb
fadds
lcall
xchg
aas
or
je
xor
cld
pusha
add
mov
fucom
aam
and
jno
or
push
in
cmp
inc
inc
push
inc
imul
or
or
andb
mov
mov
pop
xor
bnd
sbb
pusha
sbb
xor
rcll
lcall
cmc
push
cmpsb
mov
out
and
dec
test
or
inc
push
jl
sti
or
or
push
push
adc
sahf
cmp
insl
dec
dec
negb
in
adc
inc
add
adc
mov
lahf
cwtl
stos
add
xchg
aad
fidivs
add
mov
lods
mov
jae
cltd
imul
std
adc
push
xor
fsub
addr16
loope
add
lea
insl
mov
in
loop
ret
mov
mov
fwait
cmp
pusha
xor
add
ret
cmp
scas
insb
nop
add
in
add
cmpsb
or
jge
movsl
pop
jmp
into
lea
push
add
mov
or
arpl
xchg
outsb
sbb
jo
xchg
loopne
sub
inc
or
lcall
sub
out
and
lock
enter
and
adc
lret
jg
inc
push
lret
xor
subl
push
aas
dec
add
dec
jecxz
sbb
sarl
lahf
xor
clc
sahf
js
hlt
das
and
les
popa
andb
in
push
fldt
imulb
or
data16
inc
es
int3
dec
fildl
pusha
xchg
cmp
shl
adc
sbb
dec
jns
xor
mov
push
jo
ds
pop
jae
cmp
add
xchg
mov
stos
and
mov
dec
pop
stos
push
imul
test
xchg
xchg
outsl
sbb
aas
sub
sub
pop
or
dec
jecxz
dec
pop
adc
das
fwait
rcrl
xor
cmp
lcall
fdivl
fs
insl
cs
ror
mov
seto
imul
mov
mov
and
cmp
pop
pushf
xchg
fisttpl
pop
sbb
call
and
call
bound
ficompl
mov
xor
in
jbe
xchg
xchg
sbb
cli
xor
mov
jno
jno
sub
addb
loop
inc
mov
inc
or
xchg
mov
or
shl
inc
mov
fs
int
cld
mov
mov
nop
pop
xchg
jp
dec
xlat
sub
or
es
mov
sub
and
pushf
mov
mov
shl
push
add
sbb
mov
int
ror
out
dec
jbe
cmpsl
push
xchg
les
xor
lcall
fsubs
and
cmp
mov
loopne
inc
cmpl
mov
loop
subb
lea
jge
js
andb
push
ret
add
shl
insl
push
ds
adc
adc
and
sarb
sbb
mov
incl
xchg
and
adc
mov
push
sub
mov
adcl
dec
pop
pop
dec
dec
xor
mov
fadd
adcb
dec
std
clc
pop
and
adcl
xlat
ret
or
or
mov
lret
jg
jp
add
or
cmp
sahf
and
or
in
sbb
adc
stos
dec
cld
nop
mov
movsb
ljmp
and
or
cli
mov
jno
es
inc
test
jb
jbe
mov
movsl
and
dec
jle
and
mov
mov
xor
hlt
jbe
and
out
push
loope
fsub
inc
out
dec
cmp
sub
xchg
inc
enter
popf
rolb
into
xor
dec
lock
mov
pop
add
sbb
insl
sbbl
push
cmp
dec
rcrb
insl
push
loop
mov
lea
repz
scas
adcl
or
pop
jecxz
rclb
addr16
add
call
xchg
shr
in
cli
add
cwtl
jae
cwtl
add
inc
add
push
or
sub
lcall
xor
pop
inc
shl
jmp
rcl
scas
insb
fsubrs
cmp
cmc
lods
movsb
fldz
push
fst
mov
pop
les
mov
inc
sbb
shll
in
popa
ja
jbe
insb
fucom
and
xor
adc
ljmp
mov
add
shll
call
inc
cwtl
xchg
adc
out
outsb
sbb
insb
push
mov
cmpsl
stos
ja
push
inc
shlb
xor
in
decl
inc
mov
mov
outsl
jecxz
dec
fists
push
out
mov
jne
sbb
fistps
xchg
xchg
scas
xor
mov
pop
cmpb
push
or
idivl
xchg
push
ret
test
cmp
lods
or
push
adcb
fidivrl
pop
ljmp
sahf
sbb
hlt
test
jge
leave
aaa
rcrb
test
push
add
adc
ret
add
inc
or
jge,pt
stos
ds
call
call
lcall
jmp
std
shlb
push
pop
add
add
xor
sti
in
bound
insb
cmp
push
les
pop
notb
inc
add
rolb
inc
sub
lea
hlt
inc
movsl
adc
test
div
pop
cmp
jae
xor
dec
aam
mov
pop
sbb
adc
fwait
inc
or
lret
push
ljmp
cmp
shll
xchg
xchg
rolb
xor
icebp
jg
shll
movsb
mov
cli
out
cltd
call
mov
into
mov
popf
sub
andb
imul
outsl
dec
and
mov
jge
xchg
ficoms
aaa
dec
inc
adc
sub
int3
sub
addr16
lods
insl
push
push
outsb
pop
loope
mov
add
shll
repz
add
sbb
or
gs
lock
nopl
shll
aam
fwait
add
and
adc
jecxz
icebp
mov
pop
int3
xchg
xchg
in
iret
cmpsb
lods
mov
mov
fs
jbe
lea
es
icebp
push
adc
or
sbb
stos
xchg
clc
idivb
mov
lods
dec
sub
hlt
lret
xlat
cli
sbb
sahf
mov
into
xchg
lods
nop
xlat
movsl
pop
adc
or
nop
adc
jp
es
das
xor
movsl
xchg
out
pop
stos
push
xchg
clc
jmp
icebp
mov
iret
or
das
sub
rcr
and
pop
daa
mov
dec
popf
call
cltd
je
push
mov
popa
test
not
push
or
dec
push
mov
dec
repnz
xor
addr16
cltd
mov
push
push
loop
daa
dec
or
jmp
jp
lahf
cmp
mov
sahf
xor
mov
inc
call
fcoml
jns
add
mov
fwait
scas
cmp
inc
cmpsl
push
aas
ror
sub
jns
pop
dec
js
push
out
in
ja
add
cltd
push
movsl
sub
fcoms
clc
fisttps
mov
push
jg
sub
jge
pop
cmp
lahf
adc
je
fmulp
mov
jns
rcr
mov
sub
js
fwait
mov
cwtl
test
or
jge
xor
nop
xchg
pop
fsubr
shll
inc
in
and
or
adcb
sub
bt
sti
cmp
nop
out
in
and
sbb
movsb
push
lret
lret
add
jp
lods
sub
jmp
in
pop
and
xlat
stos
push
cli
stc
mov
jbe
fwait
mov
xor
leave
sub
adc
xor
mov
push
or
into
js
int3
mov
mov
push
adc
mov
push
push
jl
push
pop
mov
lahf
xor
imull
push
in
pop
mov
popa
loopne
stc
mull
cmc
xchg
iret
div
in
lahf
lcall
faddl
lea
nop
enter
cmp
jecxz
mov
arpl
xchg
inc
das
loopne
mov
dec
xor
outsb
shl
sub
mov
xchg
mov
add
js
push
mov
push
sahf
sbb
mov
in
mov
push
adc
cmp
insb
mov
mov
mov
je
loope,pt
adc
add
and
mov
add
add
push
adcb
push
jge
lock
dec
int
adc
adc
in
into
sub
mov
jge
or
cmpsb
ret
shll
ss
push
mov
adc
push
hlt
cmpl
xchg
movsl
inc
dec
cmp
and
pop
push
or
jecxz
inc
jecxz
cmp
outsb
xor
stc
add
mov
lods
mov
in
jns
or
mov
mov
add
mul
xchg
sub
out
jb
jnp
frstor
sahf
test
jne
lods
leave
mov
popf
ret
cmpsl
mov
out
xor
in
add
insl
jno
jbe
daa
cmp
test
adc
pushf
rcrl
test
movsl
xor
das
adc
sbbl
pop
loop
pop
push
xchg
cmc
jge
into
adc
xor
iret
mov
mov
mov
scas
add
fs
jmp
leave
lcall
pop
xchg
push
les
js
mov
xchg
loopne
push
or
mov
xchg
mov
sub
jle
xchg
data16
daa
fisubs
mov
pop
popa
lods
add
xchg
sbb
ds
mov
inc
cs
cmp
lods
mov
xor
ret
adc
pop
xchg
xor
movsl
movsl
and
lcall
mov
test
repnz
ss
jbe
inc
int3
aaa
aad
or
pop
sti
addb
in
push
in
insb
cmp
jne
xor
mov
adc
sub
js
imul
add
hlt
sub
or
mov
int3
sub
jge
dec
popa
sub
pop
or
mov
negl
cmc
push
add
insb
cmp
cmp
data16
xor
out
in
mov
sbbb
or
pop
push
adc
in
icebp
pop
out
dec
mov
inc
push
insl
jb
mov
imul
mov
or
ljmp
and
mov
iret
push
loope
ret
jnp
cmp
xchg
mov
je
mov
in
jmp
fdivs
xchg
fldenv
addr16
sub
push
dec
imul
or
sub
inc
jp
sub
sub
and
clc
xor
and
cmp
in
insb
rorb
xor
cmp
shlb
ret
je
sbb
into
push
les
and
add
fwait
inc
mov
cmc
fldcw
adc
inc
jecxz
jg
mov
mov
cli
cmpsb
aam
xchg
mov
xchg
push
sahf
adc
and
add
mov
int
cs
in
jp
xchg
or
arpl
out
sub
jbe
xor
gs
jl
nop
xlat
dec
loope
loop
sub
faddl
jbe
adc
push
sbb
mov
fldenv
sbb
dec
mov
jne
insl
or
imul
pushl
cltd
jno
pop
dec
sti
inc
xchg
out
push
lods
adc
add
adc
sbb
mov
and
lods
jmp
shl
jnp
dec
jnp
jmp
and
enter
push
pushf
jge
orb
cmp
lods
jno
les
pop
pop
imul
jl
adc
pop
sbb
mov
dec
inc
fwait
adc
int
addr16
cmpl
jno
fnstsw
test
sbb
mov
mov
inc
stos
jnp
pop
push
or
notl
ss
stc
push
dec
insl
jo
int3
mov
loop
int
jmp
push
add
mov
mov
cmp
iret
fdivrl
cwtl
mov
push
add
mov
lret
sbb
in
mov
push
inc
dec
aad
xor
out
mov
xor
popf
fdivrl
mov
pop
mov
cmpsb
lds
test
mov
push
xor
cmp
add
pop
jmp
stos
sbb
push
mov
dec
cmp
not
add
enter
cmp
ja
test
das
scas
jecxz
data16
aam
or
cltd
mov
aaa
inc
es
fnstsw
or
ja
and
std
nop
push
pop
test
mov
and
out
pop
hlt
insl
inc
scas
mov
cli
movsl
and
mov
aas
in
fldcw
nop
hlt
mov
xor
pop
data16
outsl
xchg
mov
push
test
icebp
hlt
fldenv
cmp
and
add
stc
xor
lods
cmp
test
or
push
cltd
push
js
sbb
pop
adc
push
mov
xchg
or
xchg
inc
mov
out
adc
pusha
mov
pop
pop
dec
jne
imul
mov
push
mov
dec
push
mov
sub
pop
iret
mov
lds
adc
xor
jae
or
inc
push
outsl
lods
lea
clc
cmpsl
xor
outsb
cmp
into
mov
std
sbb
sbbl
loop
loopne
adc
scas
cmpsb
fsubs
sub
hlt
mov
fstps
mov
mov
and
popf
dec
out
xor
sub
push
jno
mov
push
pop
ljmp
pushf
jne
inc
cmp
lds
and
jns
mov
insl
bnd
xchg
loop
popf
filds
aaa
xchg
jmp
push
jbe
cmpb
cltd
pop
sbb
push
sub
dec
xor
movsl
in
sub
lods
push
fsubr
sub
dec
lret
shll
in
and
sbbb
aam
push
push
mov
push
mov
or
addr16
daa
inc
lahf
and
std
mov
sub
cmc
pusha
mov
fdivrl
mov
loopne
inc
aam
mov
in
push
dec
aam
mov
mov
enter
jp
bound
sub
sbb
aas
hlt
call
je
or
test
push
mov
cld
das
jge
sbb
mov
jl
aas
xchg
push
xor
xchg
negb
andl
cmp
or
and
add
and
mov
jae
xchg
sbb
lods
sub
dec
inc
mov
clc
cwtl
xchg
jecxz
xchg
arpl
inc
or
lock
or
pop
das
ljmp
nop
ljmp
xchg
insl
push
lcall
fimuls
jmp
mov
inc
fstl
add
ret
fwait
movsl
inc
mov
scas
pusha
cwtl
cli
fistl
fwait
into
cmp
sbb
shl
cli
into
aam
fstpt
xchg
inc
push
in
sahf
inc
mov
clc
pop
out
xor
mov
rolb
ret
out
pushf
fistpll
lds
insb
mov
dec
out
adc
sub
shlb
in
jae
lock
into
js
xor
sbb
jle
cmpsl
and
push
cmc
fimull
adc
enter
dec
in
and
push
divl
adc
pop
xor
adc
imul
pop
lods
cmpb
sarl
fidivrl
outsl
dec
lea
inc
sti
jo
js
push
add
repnz
dec
decl
xor
xchg
aad
push
fidivrs
fidivs
pop
cs
pop
or
inc
lods
jg
std
lea
test
push
pop
jbe
fcmovnu
fs
add
dec
dec
adc
pop
pop
test
test
sbb
xchg
cmp
mov
add
pop
ret
xchg
sbb
cmp
ss
pop
inc
adc
dec
adc
and
inc
xchg
mov
shlb
dec
pop
mov
fnsetpm(287
sbb
xchg
adc
andl
xlat
das
sub
fs
out
je
dec
int3
mov
jb
sarl
addb
or
ljmp
sbb
aad
adc
mov
orb
fistps
mov
xlat
mov
in
loopne
mov
lea
decb
adc
sbb
adc
sub
mov
loope
test
push
je
ja
cmp
lock
lods
inc
inc
js
outsl
mov
pop
scas
add
sbb
dec
sti
cmpsb
cmpsl
add
sbb
mov
sbb
and
hlt
pop
push
dec
scas
das
mov
idivb
arpl
xchg
orl
in
jp
rcrb
data16
insb
push
imul
dec
cmp
aas
inc
or
pop
clc
movsb
cs
ret
mov
add
rolb
jns
sbb
shr
xor
mov
fsubs
pop
adc
mov
cmc
push
xchg
fwait
adc
push
cmp
scas
hlt
pop
mov
add
inc
pop
shrl
enter
inc
push
mov
out
ret
jae
nop
adc
nop
mov
or
lods
push
sub
dec
push
xlat
roll
imul
adc
mov
jle
insl
pop
inc
std
lret
mov
scas
lcall
out
xchg
in
gs
lret
cmp
or
and
pop
or
cs
mov
psubusb
mov
popa
cmp
in
xchg
loope
pop
das
stc
mov
cwtl
std
cmp
nop
mov
pop
pop
sub
fists
aam
push
out
stc
mov
cmp
incl
push
add
test
dec
jno
lea
xor
jae
pop
xchg
stos
xchg
nop
iret
addl
cmc
and
xor
fidivs
loop
addb
adc
lahf
fisttpll
and
fwait
add
jnp
cmpsb
rclb
sbb
mov
push
dec
pop
pop
test
ror
fnstenv
pop
jecxz
inc
fdivl
or
push
ror
cmp
and
push
cmpsb
xchg
mov
push
mov
add
xorb
ss
orb
ss
mov
sbb
jg
movsb
mov
and
pop
into
test
popa
lea
mov
add
mov
and
adc
aam
fistpll
xor
fnstcw
out
push
enter
outsl
mov
lahf
xor
mov
sarb
mov
enter
ret
pushf
in
sub
pop
les
add
leave
aam
loop
jbe
ljmp
mov
inc
icebp
sbb
push
pop
jge
mov
inc
cmp
jne
sysret
out
clc
enter
ja
imul
lock
mov
push
movsb
popa
jg
push
xchg
es
aam
and
mov
stos
jecxz
and
fucomi
std
mov
and
xor
push
mov
xchg
pop
cmpsb
xlat
lcall
xchg
je
inc
inc
push
repz
in
push
xchg
xor
cmc
push
xchg
cmp
xor
test
or
and
pop
in
push
insl
lds
push
and
push
and
in
fwait
push
xchg
ss
pop
xchg
and
movsl
cwtl
lret
xchg
push
imul
xchg
inc
jp
shl
daa
adc
shr
cmp
push
movb
xor
shlb
mov
push
fsts
adc
es
lahf
fnstsw
int
leave
adc
or
dec
addr16
ret
xor
arpl
shrb
mov
add
movsl
divb
mov
and
adc
xor
ja
movsl
loopne
sub
popa
orb
push
mov
bound
jae
lahf
push
pop
add
movsl
mov
xchg
jge
xlat
imul
inc
jg
xchg
pop
cmp
pop
subl
shrl
or
sbb
addr16
gs
fldl
adc
rcrl
cmpsl
dec
lds
jns
gs
mov
inc
and
insb
sbb
frstor
fsubrl
repz
push
lods
cmovno
nop
xor
clc
lds
add
scas
xchg
es
mov
scas
xchg
insb
sar
or
jns
jns
add
loopne
lret
and
cmpsl
cmp
adc
testl
ret
pop
sahf
scas
stc
insb
loope
jp
les
sbb
dec
fidivrs
pop
nop
lds
xchg
lcall
jle
imul
cmp
jo
test
pop
hlt
sbb
pusha
push
rol
and
and
pop
lods
pusha
fisttpl
xchg
xchg
add
push
cmp
ds
movsb
xchg
push
jecxz
push
or
push
sti
xchg
and
dec
fisubl
adc
repz
xor
add
push
dec
hlt
addr16
fistl
mov
test
dec
shl
lds
push
stos
fcmovb
lds
int3
adcb
or
repz
mov
xorl
loop
mov
aaa
mov
je
dec
jo
insl
fsubl
xor
int
jno
and
cmp
insl
jb
iret
dec
scas
pushf
repnz
subb
push
ja
xor
push
adc
jle
lret
cmp
cs
sti
mov
ss
add
loopne
mov
dec
loop
out
mov
sbb
out
dec
movsb
nop
sub
imul
sbb
fwait
jne
cli
scas
ljmp
pusha
stos
mov
shrb
frstor
shlb
xor
push
jns
loopne
mov
and
mov
sub
sub
or
sub
xchg
xchg
cmpl
pusha
mulb
loopne
and
cmp
out
xor
and
jg
hlt
hlt
sbb
xchg
out
xchg
fwait
adc
fcomi
int
xchg
out
pop
nop
mov
rorl
movsb
mov
inc
pop
sub
lock
or
lcall
popa
fidivs
cmc
xchg
mov
loopne
enter
xchg
aaa
mov
mov
lcall
out
sbb
loop
add
jecxz
in
jbe
lods
cwtl
outsl
adc
int
sbbb
or
daa
or
aad
pusha
and
xchg
pop
negl
lret
in
dec
jne
fs
lods
push
lahf
or
sbb
imul
bound
xor
mov
pop
xchg
ret
cwtl
nop
ljmp
shll
test
in
jne
iret
imul
mov
mov
inc
push
add
lcall
cltd
or
pop
jne
or
xchg
xlat
mov
mov
lds
mov
les
imul
push
cmp
ret
popf
jp
std
mov
lock
xchg
int
sub
ret
js
push
fmull
inc
fidivrl
test
fidivrl
movsl
sub
jbe
adc
lret
mov
stos
cmp
stc
lock
lea
inc
pop
inc
adc
out
cwtl
je
test
and
ss
cmc
icebp
pop
mov
cmpsl
sub
enter
dec
inc
pop
push
movsb
inc
js
xchg
nop
sbbl
lea
lret
or
or
mov
sbb
test
push
mov
jg
adc
aam
inc
lret
pushf
int3
sbb
aam
jae
cmp
fwait
scas
loop
into
aaa
insb
dec
adc
lock
dec
cltd
into
dec
insl
test
lret
mov
movsb
mov
inc
xor
push
out
push
cltd
in
pop
pop
popf
shll
lods
repnz
and
mov
in
and
data16
and
sub
int
incb
mov
insb
mov
es
ss
jge
xchg
xorl
jns
call
adc
aas
adc
movsl
cmp
sbb
divb
dec
pop
mov
data16
or
shl
sub
imul
popf
lods
stos
or
xchg
mov
xchg
add
idivb
inc
cmc
and
insl
sub
cmp
add
js
cmp
or
fwait
sahf
sbb
jbe
mov
pop
lcall
in
cmp
dec
sahf
pop
mov
inc
psubw
int
test
addr16
pop
icebp
sahf
mov
sub
inc
jns
pushf
adc
xchg
dec
hlt
dec
sbb
inc
cwtl
sub
push
jge
mov
outsl
cmp
cmp
test
insb
stc
dec
cmp
int
loopne
negl
lret
pop
faddl
ret
push
xchg
xchg
orb
ficoml
adc
repnz
mov
popf
sbb
xchg
and
push
orl
test
sbb
jmp
cmp
push
sbb
jmp
test
out
stos
xchg
pusha
mov
and
iret
push
mov
add
bound
in
xor
sub
sbb
popa
lcall
mov
call
nop
nop
out
sub
fprem
and
pop
push
push
fwait
adc
scas
movsb
mov
adc
lock
lret
cld
mov
subl
push
movsl
lock
push
and
push
mov
and
mov
jae
daa
inc
jg
sbb
sub
adc
flds
jge
out
pop
inc
adc
icebp
cmp
pusha
rcr
test
addr16
cmp
fnstenv
or
aas
adc
or
pop
add
fs
adc
and
adc
fildll
scas
icebp
cmp
and
pusha
popa
es
push
mov
test
cli
pushf
lcall
adc
mov
pop
in
jl
cmp
xor
jle
outsl
icebp
scas
lret
adc
lcall
cmpsb
sub
jnp
mov
dec
cmp
or
dec
xlat
leave
mov
mov
movsl
xchg
pop
int3
subb
mov
movsl
add
mov
adc
or
or
mov
scas
jl
jle
xchg
mov
insl
jnp
push
test
ja
cmc
fs
mov
mov
icebp
aaa
jp
mov
and
mov
add
pop
out
in
jns
js
out
mov
cld
call
mov
jnp
jmp
ss
hlt
sahf
cwtl
pop
push
jnp
in
arpl
push
jl
pop
push
add
jb
rcll
jp
and
fdivrp
sub
pop
rcrl
push
popa
testb
inc
es
out
test
fsubs
xchg
pop
dec
xchg
lods
fcom
js
xor
imul
mov
loopne
cmpsb
out
dec
adc
outsb
push
adc
xor
mov
xchg
cmp
cmpsb
lcall
sti
push
and
xchg
jno
dec
xor
scas
xchg
push
mov
or
shlb
push
xchg
jmp
in
hlt
std
jl
cmp
pop
sub
or
mov
hlt
inc
es
xor
mov
mov
pop
mov
lods
dec
icebp
and
push
out
mov
mov
fimull
test
fidivs
fistl
movsl
pop
jbe
adc
pop
es
fdivr
adcb
cmovbe
shll
insl
out
inc
mov
inc
add
xchg
mov
pop
mov
test
cmp
arpl
dec
ds
mov
and
aam
push
cs
hlt
inc
mov
xchg
nop
add
mov
and
jge
mov
ljmp
inc
mov
push
fldt
adc
movsl
test
push
test
inc
scas
out
dec
mov
jne
lods
nop
bound
xchg
add
xor
fstpl
xor
pusha
lret
les
lahf
daa
lods
mov
loop
hlt
mov
movsb
movsl
inc
cmp
imul
stos
fildll
in
cmpsb
call
jno
pop
mov
insb
ds
xchg
mov
out
mov
fnsave
in
push
mov
cli
push
js
orl
inc
loopne
jb
in
mov
add
mov
and
icebp
stos
loopne
adc
pop
and
bound
mov
cwtl
and
sbb
fucomi
push
mov
dec
jg
fisttpll
int
xchg
js
ret
mov
outsl
or
mov
sbb
sbbl
enter
arpl
test
mov
adc
mov
popf
dec
std
push
cmp
int
fbld
xchg
push
mov
out
pop
popa
leave
mov
and
xor
scas
ret
pop
xor
cmp
jne
orb
cwtl
mov
shlb
mov
jns
stos
ljmp
rcr
inc
test
sbb
jl
push
cmpsl
into
inc
adc
aad
sti
loopne
jnp
mov
in
bnd
outsl
push
and
out
aam
lret
cmpsb
xchg
push
aaa
or
xchg
mov
mov
outsb
mov
xchg
pop
mov
icebp
insl
jg
test
lock
call
icebp
sub
insb
shlb
out
cmp
loope
inc
lret
iret
stc
jmp
inc
into
sbb
aas
neg
mov
test
popa
sub
rolb
aaa
nop
inc
mov
adc
sbb
mov
sbb
cmpsl
push
mov
mov
mov
mov
int
insb
out
add
int
xor
mov
push
je
data16
mov
movsl
pop
cwtl
std
nop
rcr
repz
xchg
mov
int
ljmp
rcll
sbb
add
mov
xchg
mov
int3
lret
inc
cmpsb
mov
jle
stos
cmp
outsb
jbe
jg
and
cmc
nop
push
add
sbb
lcall
push
xor
negl
shl
inc
pop
dec
or
mov
jle
lea
movsl
jae
sahf
cs
xor
or
inc
mov
cmp
test
xor
dec
dec
cmpsl
adc
sbb
push
lahf
jl
and
jge
xchg
arpl
pushf
in
lret
pop
push
repnz
movsb
movsb
adc
scas
jmp
inc
in
dec
adc
sub
dec
arpl
and
mov
add
push
push
mov
mov
xchg
out
xchg
sub
mov
push
stc
movsb
ret
pop
jp
ljmp
or
arpl
and
dec
dec
int3
dec
pop
inc
pop
stc
mov
cmp
xor
mov
mov
in
ret
xchg
imul
nop
pop
mov
xlat
xchg
mov
and
mov
and
icebp
call
sbb
or
push
dec
xor
push
mov
inc
les
rcl
test
adc
adc
in
aam
mov
repnz
and
xchg
stos
ret
ret
aam
aaa
adc
ret
mov
js
sub
jns
adc
cmp
push
lock
mov
subb
fdivrl
movsl
xor
lock
jle
clc
inc
jg
ret
popf
mov
nop
mov
in
test
insl
in
jno
aam
movsb
aaa
lods
test
jns
es
lods
ret
outsb
pop
outsl
dec
cmp
fisubrs
xchg
aam
adc
pop
dec
popa
rcrl
push
push
and
lods
push
cmp
cmp
lock
hlt
out
enter
lret
jl
nop
in
bound
das
add
sbb
js
push
stos
cli
jl
mov
mov
cmp
sub
shl
xchg
movsl
pop
repz
ret
ret
adc
push
xor
dec
jle
iret
adc
popf
fdivr
pop
dec
add
iret
jl
jb
cmpsl
ja
mov
inc
stos
rol
sahf
xorl
dec
push
jecxz
push
pop
out
fdivrs
data16
fisubrs
inc
nop
icebp
pop
jmp
stc
or
or
jl
dec
lcall
xor
gs
and
adc
jmp
imul
adc
add
jge
lods
out
in
rorl
push
sub
faddl
imul
cwtl
push
idivb
loopne
mov
dec
ljmp
sub
lret
jge
mov
out
mov
pop
shl
in
outsb
inc
adc
sub
movb
sbb
scas
mov
sbb
scas
ds
push
popf
pop
fadds
adc
mov
outsl
sub
scas
cltd
xor
jmp
pushf
in
add
mov
daa
cwtl
push
lcall
movsb
add
xchg
gs
xchg
inc
arpl
mov
cmpsb
lret
loope
add
testl
cmp
cs
outsl
rcrl
cli
cmp
mov
xchg
shr
out
push
sbb
dec
jmp
mov
mov
sahf
xor
mov
aas
mov
xor
fisubrs
pop
lret
int
xor
xchg
sbb
mov
xor
mov
in
loope
test
or
adc
adc
ret
loop
jbe
sbb
sub
mov
sub
dec
testb
or
xchg
cmpsb
push
jo
inc
fs
popa
pop
sub
xchg
jno
adc
bnd
push
mov
pop
mov
jecxz
add
sahf
xor
int3
sub
imul
loope
aam
xor
push
mov
and
push
and
sbb
pop
out
call
push
push
jb
jmp
dec
movsb
mov
and
out
and
insb
enter
mov
cwtl
adc
sbb
push
les
push
push
jle
and
adc
cmovl
jp
sub
nop
daa
in
sbb
pop
rcll
adc
test
jne
out
sub
xchg
xor
movsl
data16
jmp
paddq
int3
pop
sub
fs
pop
sbb
subb
cmpsb
ljmp
ror
jg
cmp
pop
aam
dec
cmpsb
jne
dec
xchg
loop
pop
push
dec
add
cmp
push
fdivl
mov
pop
repnz
lretw
mov
mov
and
fisubs
clc
lahf
xor
ret
xorl
add
mov
lret
jae
arpl
testl
ss
cld
push
movsb
mov
xchg
pop
frstor
lds
push
leave
je
lea
xchg
push
mov
push
stc
into
push
xchg
ljmp
push
incl
lea
sub
fstps
or
inc
lea
mov
sbb
sub
out
je
cli
cltd
ret
xchg
sub
test
lods
xchg
pop
gs
pop
gs
repnz
mov
scas
mov
or
mov
push
jae
pop
in
add
lahf
push
es
ljmp
push
loopne
cld
adc
push
cmc
add
cmc
arpl
out
jno
xchg
add
int3
fistl
jge
pop
shrb
mov
das
and
shlb
add
ret
and
inc
pop
push
and
fsubl
sti
pop
fs
js
out
and
fidivrs
aas
xor
push
dec
outsb
mov
mov
mov
sub
xchg
dec
into
mov
xchg
clc
adc
dec
mov
call
push
sub
add
cltd
dec
dec
xchg
pop
dec
adc
sub
jecxz
jl
icebp
and
xchg
mov
and
dec
and
test
sub
rolb
mov
fwait
or
aas
iret
popf
sti
mov
fadds
mov
dec
pop
mov
incb
lret
leave
stc
or
add
fcmovbe
test
jne
rorb
sahf
xchg
add
aaa
pop
adc
cmp
hlt
and
hlt
in
mov
pop
out
call
rol
mov
lods
xchg
sbb
int
xor
cs
aas
cmp
xor
pop
fistl
mov
pop
fldcw
pextrw
cmp
push
dec
pop
sarl
pop
out
ret
pop
andl
gs
shll
lret
add
nop
cmc
rcrl
adc
sub
mov
fwait
mov
ljmp
roll
dec
lea
addr16
addr16
shlb
push
inc
into
mov
cmp
and
add
mov
in
push
mov
addb
int3
sahf
xchg
movsb
inc
fdivrl
stos
adc
xor
ss
mov
or
lods
data16
addl
jl
popf
jg
lea
js
in
xchg
sub
mov
push
dec
adc
movsl
adc
xor
sub
iret
stc
adcl
jge
sub
cwtl
dec
cmp
cmp
jmp
mov
add
ret
add
pusha
cli
mov
mov
jne
push
insl
jns
add
mov
cli
add
adc
jns
cli
mov
cli
ds
fdivs
inc
enter
sbb
mov
inc
xchg
xor
addr16
push
mov
jle
loop
fucomi
lods
pop
ret
mov
sbb
sbb
icebp
fbld
imul
hlt
xchg
test
addr16
and
pusha
ljmp
stos
jecxz
out
test
fsubrl
push
mov
enter
jl
pop
sub
insl
test
lcall
dec
cmp
mov
and
cltd
rolb
sbb
sbb
mov
xchg
add
pushf
xor
loope
cmc
pop
test
jns
cmpsb
cmp
or
adc
stc
mov
fcoms
aaa
xor
stc
loopne
aad
movsb
jnp
sbb
fistps
jnp
mov
enter
pop
mov
addr16
movsb
xchg
dec
lret
dec
mov
sbb
mov
and
dec
rcll
mov
fs
sub
loopne
in
adc
sbb
or
mov
insb
inc
mov
pcmpgtb
ret
ror
int3
xchg
sbb
cmpsb
jl
dec
and
sbb
push
int
xchg
mov
out
dec
adc
movsl
xlat
add
dec
pop
fs
stos
outsl
jg
push
or
xor
jg
sti
lods
imulb
mov
in
ja
stc
std
dec
mov
pop
stc
mov
jbe
cmc
aad
add
loope
push
cmpl
jo
push
jecxz
mov
jp
mov
jmp
mov
scas
mov
mov
loopne
pop
aas
push
pop
jnp
popa
cmp
cmp
mov
xor
xchg
lahf
fsub
movsb
cmp
in
gs
leave
fists
out
xchg
push
push
mov
sbb
mov
sbb
mov
outsl
mov
jns
fwait
xchg
scas
dec
push
popf
data16
ret
fldt
xor
mov
out
pop
stos
dec
sub
rcrb
sbb
cwtl
mov
fcoms
outsb
sbb
push
mov
sahf
pushf
stc
and
outsl
popf
mov
sbb
cmpl
mov
adc
aad
clc
lock
or
dec
mov
cmpsb
lcall
iret
jp
add
mov
mov
xor
inc
adc
cmp
inc
add
dec
mov
mov
lahf
popf
or
ja
loopne
jle
mov
mov
push
push
shll
inc
pop
nop
inc
pop
popf
push
loop
sti
jo
cltd
cmpl
pusha
cs
mov
mov
mov
je
ljmp
push
hlt
stos
xor
in
or
lahf
mov
xchg
mov
xor
mov
push
in
dec
adc
cmp
mov
and
xlat
ja
or
out
loope
xor
decl
fcoml
cmp
loope
addr16
lods
mov
xor
shll
mov
mov
aad
adc
inc
outsl
stos
mov
mov
cmpb
xor
inc
sub
jmp
mov
inc
cmpb
add
andl
dec
sub
push
or
jb
xor
pop
mov
jb
clc
pop
mov
or
mov
cmp
push
ljmp
adc
push
fists
sbb
pop
mov
or
orb
push
stc
push
jns
shlb
mov
in
push
dec
mov
mov
loop
push
push
adc
pop
sub
push
repz
or
jge
fsub
shlb
notb
stos
xor
fdivl
sub
or
cmpsl
lcall
xchg
ffreep
jp
xchg
sbb
lods
popf
insb
mov
xor
mov
xchg
scas
push
fcoms
xor
adc
pusha
mov
lods
clc
or
js
fs
or
jns
dec
enter
out
bound
dec
dec
pop
stos
ljmp
in
jne
ja
jp
je
ficompl
rol
cmp
add
cmpsb
icebp
scas
mov
repz
sbb
call
ljmp
mov
jns
int
pop
fildll
xor
shll
cmp
dec
sbb
cwtl
add
xchg
nop
test
or
aam
aas
sub
mov
pop
xor
mov
add
arpl
sub
in
dec
incl
movsb
jmp
inc
jne
in
ret
add
and
test
inc
cmpl
adc
idiv
out
fs
inc
dec
loope
dec
imul
mov
int3
mov
pop
xor
in
jp
adc
stc
pop
push
pop
adc
adc
mov
lds
stc
adc
mov
sbb
cmpsb
and
pop
cmp
addr16
js
test
scas
inc
jmp
jbe
mov
cmpsb
sbb
rol
popf
jo
mov
roll
dec
fstpt
inc
enter
push
pop
imul
adc
out
mov
je
pop
xlat
fs
jne
sub
fwait
data16
jge
test
or
or
jge
test
pop
pop
insb
kunpckwd
iret
maxps
jns
add
adc
cmp
xchg
aaa
xor
ds
mov
out
mov
lahf
mov
aad
out
sbb
jbe
adc
mov
push
jmp
mov
dec
pop
xor
mov
mov
outsb
mov
aas
xor
push
fistpll
outsb
jns
fcmovb
lds
lcall
jbe
dec
negb
and
std
lods
lods
or
sbb
mov
dec
add
subb
sbb
cmp
dec
stos
repnz
stc
dec
pop
stc
jl
pusha
je
fildl
cmp
push
jge
rcr
push
pop
mov
push
xor
dec
or
inc
hlt
add
jg
jle
and
fs
movb
sbb
cs
out
je
inc
leave
ds
mov
add
stos
adc
lods
pop
cmp
dec
mov
loopne
test
mov
js
or
lea
sub
pop
sbb
gs
filds
aad
jno
xor
out
rcrb
ja
mov
ret
in
iret
dec
stc
fs
movsb
sub
int
pop
pop
mov
mov
inc
sbb
fldl
loope
inc
mov
dec
arpl
dec
imul
add
leave
stos
shlb
arpl
mov
jb
xchg
lods
adc
push
dec
lods
mov
fcoms
lea
faddl
inc
inc
dec
sbb
pop
stos
add
ss
jnp
cwtl
xchg
pop
adc
cli
sbb
lret
mov
push
shr
mov
add
leave
pop
imul
mov
orb
jns
mov
dec
push
push
movsb
das
dec
add
pop
testb
aad
scas
jno
pop
out
xor
scas
insb
jb
pop
orb
push
je
dec
imull
into
dec
mov
jns
pop
aad
mov
addl
lds
inc
stos
sbb
fmull
out
cli
int
out
lods
int
and
nop
pop
js
stos
dec
xchg
mov
xlat
sub
inc
mov
enter
sub
outsb
jp
inc
sbb
bound
popf
cltd
aam
push
ret
sub
cmp
lahf
jl
pop
popf
mov
inc
fstps
pusha
fldt
jbe
fwait
xchg
lods
fmull
push
les
bound
xchg
mov
repz
xchg
mov
xchg
inc
push
scas
movsb
cli
out
adc
neg
jecxz
notl
imul
lcall
aad
in
cltd
gs
mov
sbb
adcb
inc
jne
mov
jp
fldl
shll
aam
xor
out
jno
movsl
and
inc
xor
xchg
clc
je
mov
imull
cmp
push
arpl
imul
flds
jmp
sahf
gs
jnp
cmp
pop
push
out
aam
push
sub
shll
mov
jae
addl
stc
dec
sub
insl
pop
clc
int
stc
inc
mov
in
pop
mov
mov
or
or
adc
push
mov
pop
mov
in
pop
dec
js
cltd
pop
in
push
leave
loope
dec
or
sbb
cmp
xchg
mov
pop
mov
mov
cmc
jae
repnz
mov
cmp
xchg
dec
leave
jle
mov
bound
cmpsl
ret
push
imul
sahf
pop
rep
pop
sub
ljmp
jecxz
out
ror
pop
xor
dec
dec
mov
addb
notl
das
out
stc
dec
mov
jp
jp
inc
rcrl
sar
sbb
sub
fdivrl
mov
adc
aas
or
outsl
es
push
add
mov
pop
jo
xor
adc
pop
movsb
in
or
in
and
jmp
pushf
or
fwait
jl
loopne
cli
push
jecxz
push
xchg
jns
loope
in
movsl
fwait
arpl
repnz
sti
sbb
ss
adc
jnp
loopne
mov
scas
mov
ret
jbe
js
cmp
movsb
add
imul
mov
and
sbb
or
clc
adc
fdivs
cs
cmp
pop
enter
hlt
pop
lock
lcall
or
clc
js
push
mov
mov
mov
leave
and
and
mov
sub
xor
je
mov
lock
xor
icebp
aam
hlt
dec
out
jge
hlt
repnz
xor
adc
add
and
xchg
adc
sub
mov
mov
adc
jle
ja
inc
ja
call
push
data16
and
and
pop
arpl
xchg
mov
jae
inc
lahf
lret
jo
inc
lcall
xor
insl
push
fs
into
repnz
pusha
hlt
out
sub
pop
or
sahf
xchg
and
mov
inc
lcall
jl
xlat
push
test
pop
xor
test
mov
xchg
pop
int3
fildll
or
lcall
decb
sti
jmp
jp
popf
sbb
test
push
test
hlt
int3
push
cmc
pop
lret
push
ds
xor
stos
mov
push
bound
cmp
inc
xor
fisubrl
jg
xlat
addb
or
sub
fidivrl
mov
test
mov
dec
mov
les
imul
jb
or
jbe
push
je
pop
xchg
lret
mov
xchg
push
lods
ret
and
repz
jo
sbb
xorb
mov
movsl
outsb
je
stos
mov
aaa
lods
cmp
sbb
mov
mov
fisubs
push
cmpsl
sarb
jmp
sti
clc
aaa
sub
pop
and
sub
jge
fiadds
mov
sbb
inc
ss
or
mov
add
xor
in
xor
mov
das
das
adc
xchg
ret
test
xchg
pop
xor
xor
jp
jne
dec
push
fs
cmp
lret
cmp
jae
shl
mov
sbb
daa
xor
scas
stos
mov
jl
test
outsb
ljmp
jmp
jae
adc
cld
jno
insl
inc
cmp
mov
xchg
xchg
xor
loopne
loope
mov
mov
jmp
movsl
fcompl
mov
mov
jnp
xchg
insl
add
rolb
std
adc
jnp
ds
out
inc
shl
jp
insl
pop
icebp
js
pop
fs
lods
lret
sub
loop
dec
dec
call
jo
roll
clc
cli
pushf
enter
push
mov
mov
push
stos
sbb
daa
pop
cmp
aad
push
mov
push
pop
inc
cli
mov
mov
addl
shl
sub
jb
sbb
pop
xlat
add
add
mov
pop
push
shl
aas
ret
cmp
mov
lret
jo
pusha
test
mov
xchg
mov
lret
cmc
iret
push
push
cmp
push
mov
pop
fnstenv
xchg
or
mov
inc
adc
or
adc
pop
dec
rclb
scas
or
andb
inc
popa
or
cltd
mov
xchg
out
add
lock
pause
cmp
xor
fucom
mov
and
jl
mov
outsl
push
and
in
xchg
pop
mov
adc
jb
jae
push
jg
xchg
fwait
clc
jl
cmp
mulb
pop
andb
pop
imul
pop
sarb
pushf
mov
push
pop
inc
mov
sbb
sub
push
mov
xor
outsl
iret
rclb
pop
push
mov
jg
cld
shlb
jp
add
jl
pop
xor
and
jbe
mov
shl
xchg
jg
xchg
in
push
xor
int3
or
fwait
mov
xor
fwait
and
add
adc
out
xchg
lods
cmp
outsl
xor
xor
sbb
cmpsb
or
test
test
xor
outsb
das
test
rolb
popl
orl
dec
mov
push
jb
fsubrs
mov
leave
xor
dec
lods
sbb
lcall
jmp
ret
inc
rorb
bound
sti
cmp
fmul
into
ljmp
aas
pop
push
pushf
rcll
jno
outsb
xlat
shll
jno
add
adcb
insb
sub
leave
inc
mov
mov
dec
jp
adc
gs
ror
sbb
aam
or
js
xlat
ficomps
int
pop
sbb
dec
mov
mov
cltd
xor
sub
cmp
mov
push
imul
pop
pop
bound
cli
push
addr16
inc
pop
dec
or
pop
mov
scas
dec
loopne
xchg
scas
sub
pushf
mov
adc
test
lods
daa
xchg
mov
dec
test
add
sbb
fstpt
mov
add
mov
flds
ret
mov
cmp
lock
jle
bound
js
subl
xchg
fsubrs
lea
scas
ljmp
xchg
stos
out
sub
sub
cld
cmpsb
and
add
inc
sub
in
push
sub
cltd
xchg
jge
and
sbb
cltd
jg
push
shll
movsl
nop
sub
loop
loop
xor
ljmp
psubq
cmp
frstor
outsl
mov
outsb
repnz
stos
xchg
shlb
xor
lret
jno
xor
enter
xchg
enter
sbb
inc
test
mov
fsub
cmc
scas
push
movsb
xchg
jg
adc
push
and
std
negl
mov
scas
dec
add
popf
adc
xchg
jmp
into
sub
adc
negb
shll
or
cmp
ret
or
imul
pusha
mov
mov
push
loopne
inc
sbb
test
xchg
xchg
clc
int
fsub
imul
and
repz
andb
mov
xchg
sub
dec
imul
cmp
repz
mov
in
mov
ja
lcall
ja
inc
subl
mov
sub
mov
sub
imul
pushl
fadd
fs
std
rcrl
ja
fcmovne
pop
fisubl
inc
pop
bound
add
lcall
xorb
out
aas
push
cmp
push
decb
dec
xchg
fsubr
push
dec
fidivrs
push
xor
leave
stos
inc
dec
mov
mov
mov
push
push
sarb
fstl
jle
add
lods
push
and
data16
xorb
pop
jb
ja
aam
xchg
xor
fiaddl
into
cmp
mov
sahf
and
jb
inc
push
adc
jns
js
xchg
cmp
gs
movsl
add
fcmovnb
adc
nop
popa
cld
mov
ljmp
sahf
movlps
roll
xor
cwtl
lret
mov
shll
aas
nop
cmp
jns
stos
add
pop
xlat
ds
cs
push
dec
xchg
clc
scas
push
pop
test
icebp
cmpsl
mov
pop
pop
or
xor
sahf
xor
pop
repnz
stc
add
sbb
and
jmp
push
fsubs
lock
xchg
iret
dec
mov
adc
push
xchg
pusha
inc
in
int3
sbb
xor
shl
fsubrs
in
inc
outsl
xor
std
mov
add
loop
cmpsb
push
adc
cld
bound
enter
hlt
mov
or
mov
pop
and
pop
pop
sbb
addr16
adc
fs
cwtl
or
test
clc
xor
cmpl
xchg
test
pop
mov
add
or
scas
test
dec
add
cs
push
sub
or
pop
jge
xor
out
sbb
pop
sub
shrb
xor
sub
cmp
test
sbb
and
adc
aaa
adc
inc
and
mov
mov
and
sbb
cmpsl
pop
adc
and
jmp
popa
xlat
add
or
pop
aas
out
jae
notb
jge
sti
mov
test
test
jo
jns
hlt
movsb
mov
repz
jb
sbb
test
movl
cltd
mov
in
aad
jmp
jle
not
ja
pop
outsl
enter
mov
inc
jne
cmp
cld
add
and
or
push
cmp
addr16
lret
cmp
xchg
pushf
mov
andb
fistpll
ss
xchg
cmp
imul
mov
jno
pop
jbe
shr
adcb
loope
mov
cmpxchg
jp
cwtl
pop
nop
insl
stos
jmp
je
push
mov
pop
mov
pop
xchg
cld
ret
decb
push
dec
aam
xor
sbb
xchg
pop
xchg
sbb
lret
enter
cmp
jnp
fimuls
mov
dec
cmpsl
arpl
stos
xor
js
sub
inc
cmp
stos
gs
xchg
jmp
mov
pop
sbb
cltd
popf
ret
iret
mov
push
xchg
dec
jne
shll
lods
btr
js
jne
in
push
jg
fnstsw
movsl
sub
addr16
mov
mov
jg
inc
das
pop
sbb
cs
lods
scas
xor
push
xor
jbe
rol
push
insl
and
sub
insl
cld
fst
xchg
adc
repz
dec
std
or
and
mov
shll
add
xchg
pop
stos
sbb
jmp
mov
imul
lahf
fcmovbe
or
ffreep
stos
pusha
jae
cmpsl
mov
mov
test
pop
or
sub
in
aas
scas
shll
jg
mov
pop
gs
mov
lods
sub
sbb
xlat
ret
jl
daa
inc
adc
idivb
mov
cwtl
inc
lahf
aad
pop
mov
roll
dec
decb
cmpsl
mov
sti
gs
pop
pusha
push
cmp
pop
sbb
jmp
dec
xor
mov
xchg
sti
pushl
in
inc
xchg
scas
loop
es
fidivs
mov
dec
mov
or
inc
int3
cwtl
pop
ja
cs
push
cmp
push
test
xchg
insl
dec
lock
add
ja
inc
pop
insl
or
xchg
clc
aam
adc
pop
inc
dec
loop
lret
aaa
add
cmp
cmpsb
adc
mov
insb
pop
dec
stos
roll
das
xor
push
test
mov
addr16
enter
ret
push
sub
pop
sbb
sti
es
xor
push
xor
idivb
pop
mov
dec
test
and
push
aas
insb
loope
mov
push
add
xor
xchg
push
xor
into
jp
nop
mov
adc
or
lea
mov
dec
rep
jnp
test
shl
xchg
wrmsr
push
jns
cmp
loope
mov
xor
mov
stc
and
xor
fiadds
test
push
jnp
into
xchg
push
cmpsb
lahf
les
jle
mov
push
into
in
dec
popa
or
loop
mov
xchg
not
xchg
push
pop
mov
clc
dec
nop
xor
scas
adc
fs
push
cmpsl
movsl
push
mov
inc
xchg
out
xor
arpl
push
aas
je
nop
xchg
add
lcall
int3
mov
or
inc
jnp
nop
decl
lret
sbb
sar
mov
sub
repz
mov
add
push
inc
cmc
mov
sub
pop
jo
pop
rorl
xlat
mov
aas
or
jne
insb
pop
je
mov
cwtl
and
fidivrl
and
notl
push
and
jmp
jecxz
rcll
in
rcrb
dec
xchg
mov
pop
push
and
and
ds
push
ret
movsb
jne
dec
stos
movsl
sub
imull
mov
imul
dec
xor
lock
adc
xchg
int
jmp
push
fdivrs
push
jle
push
sbb
loope
add
cltd
jl
push
lahf
jb
add
divb
pop
pushf
and
sub
addr16
lea
push
sub
or
add
rolb
push
mov
push
jge
stos
jbe
push
rcrb
sahf
inc
xchg
jne
jp
out
xor
pop
test
jne
loop
sub
mov
push
cmp
xchg
jle
mov
mov
inc
aas
bound
xchg
cmp
xor
adc
sub
xchg
popa
in
inc
jmp
xor
cli
jnp
xlat
imul
xor
test
sarb
arpl
ficoms
int
and
adc
mov
shll
lock
dec
sub
adc
das
rorl
aad
stos
ret
pushf
jecxz
push
gs
in
in
dec
shll
mov
fbld
ds
xor
adc
in
adc
adc
loopne
sub
in
inc
push
push
cmp
sub
xchg
fcoml
fcomp
int
in
incl
pop
in
push
ss
cmpsl
cmp
cmp
dec
scas
in
lahf
push
fcomps
or
enter
cmp
loopne
enter
leave
out
adcb
shrb
std
das
fwait
cmp
xchg
or
frstor
jecxz
js
aam
je
cmp
mov
dec
cmp
jbe
push
inc
sub
out
packssdw
cmp
and
xchg
insb
int
outsb
adc
js
ficoms
xor
cltd
or
xchg
adcb
shl
xchg
mov
or
ja
xlat
test
push
xchg
cld
out
pop
test
rclb
xchg
push
ret
mov
pop
add
imul
fisubrl
ss
nop
in
fwait
mov
arpl
inc
xchg
or
jae
aam
in
xlat
sbb
imul
int3
add
adcl
mov
into
out
outsb
mov
test
jecxz
hlt
cmc
pop
xor
adc
dec
mov
js
out
cmpsb
or
jge
lds
pop
xchg
popf
cld
pop
push
pushf
inc
push
add
loopne
les
or
xor
cmp
push
dec
movsl
rol
xchg
pop
test
fmull
int3
rclb
bound
int3
lret
push
dec
mov
jbe
inc
cld
cs
out
loop
sbb
lods
xlat
inc
dec
sub
push
adc
xor
jmp
cmpsl
pop
adc
inc
push
out
sbb
add
or
push
lret
sub
cwtl
adc
ja
iret
xlat
push
jns
out
scas
insl
jae
dec
sbb
mov
push
fimuls
mov
dec
outsl
mov
push
push
xchg
push
call
push
adc
dec
pop
ficoml
dec
aad
je
dec
test
mov
jns
push
outsl
pop
in
inc
inc
aam
lods
cmp
adc
and
or
lock
push
repz
mov
das
jp
xor
add
push
mov
jge
in
sbb
or
inc
mov
lret
aam
call
mov
add
pusha
inc
in
test
mov
sub
iret
pop
cli
in
filds
bound
jns
xor
inc
sub
xchg
outsb
jge
ja
scas
push
fsubrl
sbb
stos
imul
sarl
mov
enter
lods
cmp
aad
fxch
dec
aam
loop
icebp
sti
adc
clc
faddl
imul
sub
push
cmp
xor
mov
and
sub
cld
or
and
fs
xlat
push
sub
cli
cmp
xchg
push
jl,pt
mov
fwait
jns
inc
jle
bound
pop
stos
add
out
enter
stos
adc
adc
or
push
push
cmpsb
fstpl
mov
outsb
fwait
pop
inc
push
mov
inc
pop
jb
dec
andb
inc
pop
inc
and
and
test
push
mov
shll
adc
mov
add
mull
or
pop
aam
jge
lods
push
ljmp
adcb
lahf
xchg
lock
aam
xlat
cs
rcrl
loop
add
out
sbb
jae
xor
mov
push
cmp
dec
pop
or
xlat
add
cmp
insb
dec
push
mov
cmp
dec
xor
inc
data16
lret
dec
gs
adc
movsl
fs
inc
rcr
inc
push
cmp
mov
bound
sahf
ljmp
popa
inc
adc
imul
int3
push
fs
or
jl
dec
jo
ss
mov
mov
mov
aam
mov
ljmp
mov
cmp
mov
movsl
enter
ja
xor
xchg
aas
iret
jle
cli
fisttpl
pop
lods
cmpsb
cmp
cmpsb
pop
push
xchg
fs
mov
fsubrl
push
inc
cltd
pusha
scas
les
fcomi
test
pusha
lret
stc
pop
jp
addr16
adc
or
dec
fisubrl
fisttps
out
sub
cmovp
bound
std
adc
mov
cltd
mov
shll
inc
mov
addr16
lret
fcomp
push
adc
fildll
mov
arpl
test
push
xor
jno
iret
inc
stos
push
jg
add
push
inc
cmp
loopne
pusha
andb
jb
rcrl
push
into
cltd
fcoms
push
lcall
push
pop
or
mov
jecxz
fs
inc
and
fcmovnu
lods
int3
test
sub
jg
mov
add
inc
cmp
andb
repnz
std
fcmove
cmp
mov
shrb
cmp
cmp
sub
test
subl
push
xchg
xor
xor
cmp
cmp
sbb
adc
movups
and
lods
addr16
insl
test
pop
mov
and
add
frstor
push
aas
dec
jl
sbb
sbb
or
cmp
adc
lea
icebp
fnstcw
scas
ds
pop
out
dec
mov
fcom
cmpsb
mov
add
dec
mov
mov
movsl
jae
inc
cld
mov
sti
sub
push
sbbl
jle
into
pop
scas
icebp
sarb
fwait
and
neg
mov
push
mov
jg
shrb
sti
jecxz
mov
xlat
lds
mov
adc
lcall
rorl
sbb
mov
rcr
arpl
push
mov
xchg
pushl
lock
cmpsb
sub
mov
loop
in
insb
and
ljmp
dec
cmpsl
and
cli
pop
cmpsb
aaa
repnz
push
jne
xchg
mov
lret
jne
mov
fcmovne
cwtl
xchg
int
xchg
aad
cmp
mov
popa
imulb
rolb
lcall
dec
add
adc
push
push
mov
fnop
push
ljmp
vcomiss
push
mov
lods
jae
inc
inc
mov
hlt
cltd
insl
mov
test
test
adc
push
jp
pushf
mov
cwtl
and
dec
in
lock
dec
imul
cltd
push
jl
aaa
push
jns
int3
out
mov
or
xor
push
outsl
lods
adc
cld
in
sbb
loopne
add
ds
in
mov
cltd
add
imul
or
loopne
sahf
pop
ret
idivb
es
in
imul
shll
mov
pop
and
lea
ja
movsb
sbb
pop
inc
mov
inc
or
jg
xor
dec
pop
nop
or
add
xchg
lods
xchg
sbb
fucomp
into
xor
mov
js
inc
iret
cmpsb
loope
fstps
das
pop
add
mov
sbb
cmpsb
sbb
jo
sbb
shrl
mov
add
xchg
jmp
mov
cs
roll
dec
out
test
xchg
add
fdivl
jmp
xchg
ss
in
mov
imul
mov
out
je
pop
sub
in
bound
adc
ret
lods
or
out
fucom
dec
ret
jg
adc
add
sbb
push
inc
imul
addb
pop
inc
insl
ret
mov
cmpsl
fstl
test
fsub
fildl
outsb
xor
pop
push
cmp
xchg
cmpsb
dec
push
ret
xor
in
mov
mov
loopne
test
in
push
adc
push
jb
outsl
adc
xor
aad
sbb
pop
fdivs
adc
gs
mov
aam
test
lods
stc
scas
ljmp
jb
dec
adc
fldt
sti
xchg
adc
jmp
ret
sbbb
and
mov
cmp
xchg
lds
testb
or
lcall
lret
mov
inc
mov
test
mov
sub
add
xchg
sub
inc
adcb
xchg
popa
dec
jbe
stos
stos
push
sti
aam
rolb
mov
add
xchg
loope
and
jmp
lret
xchg
push
loop
popf
mov
cmpl
sbb
int3
mov
das
xor
jp
mov
xchg
inc
and
xor
mov
pop
lahf
hlt
pmulhw
mov
lcall
push
push
xchg
fisubl
lret
xor
pushl
xchg
or
add
mov
out
pop
mov
pop
div
aaa
push
lock
lock
addr16
lods
jle
dec
push
hlt
fsubs
movl
insb
xchg
fwait
jno
xor
xchg
add
cmc
adc
or
mov
add
jle
mov
xor
ret
pusha
add
add
dec
adc
stos
jecxz
lds
sbb
xchg
lahf
sbb
or
fsubrs
aas
movsb
sbb
adc
xor
cmp
lock
cltd
xor
jbe
mov
pop
fiadds
jle
add
loopne
mov
lcall
xor
jnp
mov
roll
jo
push
pop
inc
out
push
cmc
inc
sti
je
add
adc
imul
insl
xchg
sti
call
xchg
dec
leave
lcall
jmp
xchg
shrb
inc
xchg
mov
mov
push
dec
push
pop
push
and
or
decl
movb
mov
lods
xchg
popf
cmp
jne
pop
fcomps
and
adc
fs
xchg
hlt
cmp
jo
outsl
nop
mov
mov
popa
mov
lock
rorl
inc
xor
out
and
movb
inc
loopne
sub
jl
sub
addl
mov
aas
enter
mov
fnsave
loope
mov
js
jb
push
xchg
ficomps
ret
bound
sbb
and
push
fisubrl
out
or
jnp
sub
xor
arpl
daa
and
add
in
dec
adc
mov
mov
mov
in
inc
sub
mov
pop
jle
loope
xchg
jg
pusha
sub
sbb
loopew
push
xchg
out
lcall
arpl
inc
aaa
stos
jno
pop
jne
xor
cmp
sub
out
push
mov
pop
lahf
lcall
out
lods
inc
sub
mov
insb
iret
xchg
dec
and
enter
push
stos
in
or
scas
push
sti
push
xor
out
movsl
lcall
push
cmp
mov
insl
cli
dec
jno
sarb
jae
sar
xor
jae
icebp
dec
sbbb
push
dec
mov
mov
adc
push
add
test
stc
out
clc
jb
imul
aas
popa
inc
or
inc
jbe
pop
setle
dec
ljmp
aad
stos
mov
push
jl
idivl
cli
sti
pushw
sahf
test
fistpl
bound
repnz
pop
pop
fwait
or
frstor
push
pop
daa
imulb
mov
test
fwait
les
cs
ljmp
pop
imul
push
mov
lcall
cmp
jb
stos
sub
testb
jno
push
insb
repz
xchg
rcrl
mov
dec
test
bound
mulb
mov
icebp
xor
xchg
cmp
popf
in
sbb
aas
dec
mov
pop
pusha
cltd
and
and
notb
mov
mov
add
jae
or
scas
inc
dec
add
jp
vmwrite
aam
adc
and
push
sbb
and
cmp
daa
dec
shll
aas
lcall
push
jle
dec
push
xlat
lods
pop
loop
xor
push
fstpl
cmp
pop
cli
mov
add
sub
xchg
jl
sahf
sti
loope
stos
scas
sbb
xchg
sub
out
cmpb
ret
shrl
insl
inc
mov
insl
cmpsl
ret
fisttpl
aam
lret
pop
sbbl
mov
shlb
outsb
pop
arpl
aas
and
or
adc
int
push
push
repnz
adc
adc
dec
sahf
movsl
lea
loope
dec
sbb
cmp
cmpsb
jecxz
dec
mov
test
into
mov
ret
mov
sub
popf
adc
cs
xor
les
hlt
inc
fnstenv
add
xchg
es
jne
ljmp
or
mov
inc
aam
shll
das
lea
ret
imul
call
jno
nop
mov
fnstsw
push
add
mov
shrb
sub
sub
xchg
sub
lcall
stos
rcll
add
loope
clc
or
outsl
jp
mov
jl
int
sbb
push
jnp
je
jno
dec
mov
mov
ljmp
mov
loope
pusha
add
fldcw
dec
mov
sbb
subl
mov
mov
push
cltd
fidivl
cmp
xchg
test
loope
mov
orl
mov
sub
into
pop
cmp
cmpl
fcmove
dec
pop
cmp
mov
fcmovb
xor
cmpsl
adc
out
sbb
and
cmp
outsl
push
lcall
roll
enter
push
cmp
push
movsb
mov
jmp
stos
push
xchg
pop
orb
dec
out
inc
cltd
jbe
xor
arpl
xchg
pop
or
xchg
iret
sbb
inc
add
js
push
lahf
sti
fadds
push
mov
mov
stc
adc
mov
push
dec
pop
loop
out
bound
dec
stc
les
into
dec
xchg
in
ja
add
pushf
aaa
push
xor
cmc
adc
dec
imul
int3
jb
hlt
in
xchg
gs
shrl
mov
pop
outsb
mov
mov
pop
scas
jnp
xchg
outsb
add
and
sahf
cmp
out
xchg
mulb
aas
sbb
xor
cmpsb
jl
dec
jmp
mov
mov
movb
mov
xchg
lret
and
xchg
clc
fldl
ljmp
dec
xchg
xor
push
sub
imul
das
sbb
clc
addr16
pop
ja
dec
scas
mov
dec
and
pusha
pop
fs
nop
sub
insb
dec
push
pop
ss
sub
sahf
lds
insb
or
and
mov
xor
ds
inc
sbb
jmp
pop
add
sbb
das
test
sti
xchg
push
jb
nop
test
push
mov
test
adc
cmp
in
add
das
jbe
inc
mov
pop
dec
mov
lret
imul
and
faddl
push
and
ss
stos
fwait
das
lods
mov
fmuls
fldenv
push
cmp
inc
pushf
pusha
lcall
subb
negb
idivb
adc
pusha
cmpl
mov
and
daa
jno
cld
loope
loope
sbb
mov
out
and
pop
push
push
ret
cmc
lret
sbb
test
or
jns
push
lds
lret
mov
dec
cmpl
xchg
arpl
pop
test
icebp
pop
xchg
notb
inc
xchg
cmp
cmp
or
mov
scas
push
inc
loope
je
cli
mov
sbb
sbb
call
decb
or
jecxz
pop
nop
loop
xchg
lcall
pop
mov
leave
pop
aas
dec
imul
insb
cmp
movsb
addr16
pop
adc
push
sub
int3
jge
stos
add
pop
adc
popf
xchg
sub
ja
fsubrl
paddb
push
push
dec
dec
xchg
ret
fstpt
in
mov
enter
cwtl
or
in
in
add
push
cmp
outsl
outsl
dec
dec
xor
adc
cwtl
sbbl
mov
jmp
out
das
sub
gs
sarb
data16
inc
jecxz
jns
cmp
xlat
scas
mov
push
xchg
inc
pop
dec
loop
scas
push
cmp
pop
leave
dec
jle
mov
inc
aad
dec
test
cmp
lods
mov
push
nop
or
xchg
lret
inc
int3
mov
mov
mov
decl
and
insl
arpl
push
pop
mov
jecxz
aaa
dec
cmp
stos
daa
sti
push
push
cmp
lods
into
jle
pop
lods
outsb
inc
ljmp
imul
and
push
or
pusha
scas
stos
test
insb
dec
jo
in
leave
test
mov
out
imul
sub
in
sahf
sub
mov
pop
and
xor
jae,pt
bound
inc
cmp
stc
lock
xor
push
mov
dec
test
lds
mov
mov
mov
rcl
push
xchg
adc
mov
dec
pushf
cmpsl
add
jle
adc
add
mov
xchg
out
sahf
sub
cmp
in
mov
mov
ret
sti
insb
inc
in
fcoms
push
inc
fistl
jmp
mov
jmp
stos
lcall
wrmsr
cs
fwait
add
int
lea
sbb
nop
push
pop
xchg
lods
je
xchg
sbb
pop
dec
pop
add
jp
xchg
int
movsl
add
ds
stc
cmpsl
mov
xchg
cmp
out
stos
sub
aad
dec
loop
test
xchg
pop
jp
lret
dec
lahf
rcrb
inc
mov
out
sub
mov
jnp
ss
sbb
push
je
jp
inc
adc
ret
dec
int
out
push
out
iret
xor
es
movsb
ficomps
push
mov
lods
cmpsb
or
xchg
xchg
mov
ljmp
mov
sbb
imul
add
pop
sti
sbb
inc
cwtl
dec
inc
shlb
jns
xchg
addr16
push
pop
loope
shlb
inc
sbb
adc
shlb
ljmp
stos
sub
gs
mov
pop
adc
and
pusha
add
jg
fsubl
mov
cmp
je
mov
xchg
jnp
clc
inc
rclb
lods
loopew
cmp
out
cmp
cmp
pop
sub
push
inc
nop
inc
and
cltd
ret
aad
fstpt
lahf
les
negl
mov
inc
inc
ljmp
mov
dec
inc
ret
push
loope
lods
mov
fisubl
fnstsw
adc
pop
and
push
mov
lret
push
or
pop
sub
test
js
jmp
outsl
arpl
mov
repnz
ss
insl
lret
in
adc
pop
pushl
add
mov
dec
adc
notl
ss
pop
aaa
movsl
inc
push
rclb
scas
push
xchg
fwait
mov
roll
rorl
dec
mov
xchg
mov
add
add
outsb
repz
in
je
in
jb
out
out
xlat
pop
and
aad
repz
lahf
jbe
mov
aas
push
call
in
mov
dec
cs
sbb
les
mov
and
mov
jbe
jmp
fwait
enter
jg
mov
cmp
lods
fwait
imul
mov
int3
cmc
fisubs
adc
out
clc
ret
addr16
sub
pop
jp
inc
sub
data16
cmp
adc
clc
xchg
xor
ljmp
cmp
or
mov
repz
xchg
out
push
in
data16
push
mov
iret
inc
mov
and
and
adc
or
sub
mov
cltd
or
testl
add
or
pop
xor
gs
fwait
scas
fmuls
xchg
lods
mov
mov
in
add
pop
xor
jns
mov
and
mov
in
bound
lds
imul
daa
pop
call
xor
pop
dec
shrl
adc
lock
mov
inc
ljmp
pop
sahf
es
data16
mov
xchg
hlt
shll
or
push
inc
xchg
push
xchg
bound
mov
fs
aas
ret
or
sub
fistps
jmp
jg
xchg
das
jmp
xchg
pop
dec
das
scas
fisttpl
inc
sarb
jg
lea
scas
mov
mov
fmull
inc
insl
add
gs
test
xchg
mov
sbb
daa
sbb
loop
or
pusha
lret
mov
mov
jae
into
imul
fisubrs
or
aaa
mov
fdivl
inc
add
xlat
pop
or
stos
mov
out
add
clc
sbb
jecxz
fdivl
sbb
pop
rorl
lret
rorb
hlt
and
lcall
arpl
nop
and
xchg
lock
mov
xor
rorb
sub
hlt
mov
ret
cmc
adc
push
cltd
shll
push
jns
lea
fdiv
pop
mov
notl
jmp
mov
je
mov
call
xchg
in
pop
movsb
test
push
movsb
fadd
pop
push
adc
imul
mov
lods
adc
inc
pop
fisttpl
xchg
fmull
cltd
inc
outsb
icebp
arpl
pop
subl
pushf
dec
inc
mov
ja
test
lahf
jge
out
ret
loop
es
dec
lahf
outsl
mov
fucomp
and
sbb
and
xor
xchg
in
daa
and
jb
pop
mov
sbb
mov
rorb
adc
xchg
dec
mov
out
nop
jl
cmp
in
pop
std
dec
inc
and
stos
pop
rorl
ret
arpl
dec
push
loop
xlat
jmp
xchg
inc
pop
jns
shlb
inc
roll
xchg
ds
push
mov
pusha
mov
fiadds
lret
fdivrs
rorb
jnp
and
cmp
fisttpl
mov
jae
xchg
outsb
add
fidivrl
cli
inc
adc
xchg
mov
inc
arpl
xchg
stos
inc
mov
push
lret
movb
push
enter
mov
shll
mov
dec
xlat
scas
sbbb
fnsave
scas
popa
adc
mov
add
arpl
lods
add
cli
in
enter
mov
shlb
fistl
int3
mov
pop
mov
outsb
push
cltd
push
test
pusha
inc
mull
xchg
in
mov
xor
enter
mov
pop
add
fsubrl
mov
inc
and
leave
push
lret
xor
cmp
sbb
imul
xchg
out
aad
cmp
push
push
xchg
add
dec
sub
sbb
stc
jo
lcall
and
pop
out
xor
js
sub
push
scas
scas
cmp
ds
hlt
jle
sbb
fucomip
sub
add
cwtl
out
aad
fildll
xchg
mov
or
arpl
mov
lock
xchg
dec
mov
loope
jb
mov
inc
jnp
movsl
mov
cmp
cwtl
fadd
cmpsl
jecxz
lahf
push
iret
adc
inc
les
add
int
stos
mov
pop
push
sub
sbb
popf
aaa
test
add
scas
neg
mov
mov
imul
dec
popf
and
sub
cld
popa
data16
push
push
sub
mov
ds
int3
sar
mov
xor
lock
stos
mov
cltd
and
loop
inc
loop
ljmp
and
or
jp
rorl
test
cltd
cmpsl
inc
xchg
lret
jo
pop
inc
add
int
or
filds
ficoms
in
inc
ret
movsl
rclb
inc
dec
sub
jnp
cwtl
mov
mov
and
lods
stc
pop
outsl
js
or
mov
imul
test
pop
fwait
dec
ret
mov
xchg
imul
jl
adc
cmp
lahf
cmc
imul
push
push
mov
and
sahf
xor
pop
cltd
xor
popf
ljmp
lahf
mov
outsb
fs
lahf
loop
sahf
adcl
lret
data16
test
fcom
dec
inc
xchg
sbb
inc
je
xchg
ret
cli
xchg
cmp
sub
cmp
pop
pop
je
xchg
fbstp
stos
iret
clc
fwait
cmp
push
dec
mov
dec
outsb
add
inc
aam
rcrb
dec
xor
icebp
stos
mov
pop
lock
pop
imul
subl
inc
fistpll
stos
gs
and
mov
insb
in
push
jmp
adc
in
out
scas
aaa
stos
jg
xlat
or
cmp
sti
filds
jecxz
cmp
mov
cmp
cld
hlt
lods
adc
test
adc
or
sti
clc
mov
pop
xchg
in
cmp
xchg
loopne
and
fbstp
and
popl
or
sbb
sbb
roll
popf
mov
jge
test
lret
test
addr16
jb
std
and
jge
xor
or
shrb
cmp
mov
in
push
inc
lods
test
fld
fbstp
cmp
adc
xchg
sbb
adc
and
pop
push
in
sbb
pop
xor
pop
popa
loope
mov
sub
lret
pop
jmp
cli
cmp
mov
mov
and
loop
sbb
lcall
and
in
mov
aas
insl
aaa
jp
outsl
lods
mov
cld
mov
ficoml
dec
es
and
popf
testl
sub
lea
push
cltd
jae
and
test
or
sub
leave
fiaddl
or
into
mov
mov
push
jecxz
enter
adc
dec
insl
call
and
fs
les
push
shlb
add
out
int
clc
pop
xor
movsl
std
fidivl
test
jl
add
insb
pop
lahf
pop
lcall
inc
dec
push
scas
subl
je
add
aaa
inc
out
fsubrl
mov
or
test
cmp
test
loop
jl
mov
lea
stc
pop
ret
repz
mov
out
mov
test
test
and
rcrl
adcb
enter
les
jecxz
mov
xor
cmova
jl
mov
stc
push
dec
jo
dec
mov
sbb
sbb
test
jecxz
pop
inc
mov
jne
fdivrl
outsl
mov
test
popa
xchg
incb
jb
xchg
inc
mov
push
iret
push
mov
and
add
enter
xchg
sub
jge
test
inc
push
popf
pop
mov
xor
xchg
icebp
popf
mov
sbb
mov
sbb
or
je
ficoml
rcrb
iret
adc
mov
lods
push
jo
nop
adc
pop
xor
mov
mov
pop
shlb
inc
sub
lahf
ljmp
int3
mov
mov
mov
adc
or
add
pushl
pop
sub
jl
nop
clc
xor
mov
mov
decb
jge
push
sbb
sub
mov
mov
lock
add
lret
rorb
add
ds
xchg
jo
int3
jge
pop
xchg
xor
pop
and
test
inc
xchg
and
scas
icebp
out
faddl
mov
sbb
mov
push
in
out
cmp
fsubrp
cmpsl
test
sub
push
mov
jno
scas
mov
jae
or
gs
dec
loopne
sub
jnp
test
mov
cld
out
pop
push
aaa
insl
mov
push
dec
insl
mov
sahf
shlb
aam
add
xchg
clc
jge
mov
sub
mov
sahf
push
pop
push
in
dec
sub
popa
pop
jecxz
cld
rclb
add
sbb
push
sub
sub
dec
jg
call
adc
xor
xor
lret
andl
dec
push
popf
out
jmp
push
sub
orl
push
in
push
in
nop
fs
push
notb
push
sarl
jecxz
int3
cld
adc
addl
add
or
ds
stos
sub
cmpsl
mov
xor
jp
loopne
in
iret
in
loope
jbe
xchg
jle
mov
hlt
mov
push
xor
push
fmull
mov
daa
aaa
sbb
ds
pop
mov
add
ret
addr16
xchg
call
push
pop
mov
and
jae
scas
fucomip
mov
test
leave
mov
mov
dec
popf
ret
nop
mov
jnp
in
mov
jle
fstl
notl
clc
push
lret
in
push
pushf
xchg
aam
and
mov
xchg
xchg
push
icebp
inc
mov
or
and
mov
ja
sub
lods
and
mov
js
lods
sub
pop
fs
js
xor
lcall
fsts
mov
inc
mov
and
inc
jno
pop
push
addr16
or
clc
xlat
or
movsb
lret
cmp
aad
mov
fsubrp
inc
iret
inc
ret
xchg
sbb
mov
xlat
pop
mov
adc
mov
pusha
scas
les
into
cmp
adc
lods
pop
xor
mov
cmpsb
xchg
ja
cmp
stc
lea
jne
bound
push
mov
mov
mov
xlat
test
xchg
jno
cmp
and
test
xchg
jle
aam
add
jo
dec
nop
hlt
mov
fcmovbe
mov
cmp
pop
enter
push
push
jne
daa
jae
mov
stos
mov
push
xor
cmp
outsb
dec
push
loop
orl
faddl
mov
call
shlb
cmpsb
fstl
adc
loopne
insl
mov
mov
inc
das
jmp
cli
shlb
push
or
nop
adc
cmp
pop
int
ret
fisubs
ja
jns
dec
sti
add
in
or
mov
lret
in
ret
mov
and
sbb
or
jecxz
inc
lods
aaa
add
stos
repz
dec
call
stos
ficoml
shlb
mov
or
or
xor
adc
gs
call
addr16
mov
cmc
cwtl
inc
int
mov
add
push
jle
sbb
sub
aam
sub
jle
mov
rcrb
movsl
and
je
xchg
xchg
pop
ds
mov
and
mov
aad
ja
stos
test
xor
sti
ss
aas
sub
pop
imul
test
and
daa
lock
mov
dec
mov
inc
ds
ror
mov
stc
in
adc
mov
sbb
jecxz
xchg
sub
mov
aam
cmc
hlt
out
sbb
mov
or
cmc
ret
fnstcw
popa
imul
lock
cmp
pop
sbb
inc
xchg
fstps
out
push
jns
add
fstps
stos
push
clc
mov
inc
inc
cmp
mov
fisubl
adc
add
add
int3
lret
mov
gs
addr16
cltd
sahf
jne
stc
xchg
xchg
fimull
fisubrl
aaa
xchg
nop
mov
testl
es
inc
sbb
daa
clc
addr16
dec
xchg
test
mov
jno
insb
out
jae
aas
sub
hlt
dec
inc
das
into
sbb
add
inc
sbb
cs
mov
push
out
aad
push
jg
ja
jmp
and
std
inc
dec
mov
rorl
sbb
test
lcall
jecxz
inc
lret
dec
dec
lret
mov
pop
test
shll
or
and
dec
cmpsb
pop
push
arpl
scas
mov
jle
mov
mov
sub
pop
jle
cmp
adc
adc
mov
repz
fmull
sbbb
xchg
jnp
mov
pop
sarl
jmp
add
loope
movsl
sub
fwait
lods
sbb
mov
rorb
fmulp
mov
and
mov
cwtl
xor
inc
aas
or
inc
repnz
xchg
insb
movsb
pop
out
mov
lret
cmp
push
push
sbb
pushf
jl
mov
xor
push
cmp
and
fimull
inc
addb
push
pop
cmpsl
cmp
lods
cmp
pop
xor
loop
adc
inc
push
push
test
and
pop
mov
inc
mov
jb
in
shll
gs
int3
and
and
jmp
mov
cmpb
int3
clc
mov
js
xor
int
cmp
and
ret
popf
scas
mov
sub
xorl
mov
xchg
jae,pt
sub
sub
dec
arpl
pusha
std
idiv
mov
sbb
jae
cli
sbb
sar
call
sbb
dec
jecxz
ret
pop
push
cwtl
jp
cmp
addl
sahf
push
mov
jl
popa
add
ljmp
insl
insb
jo
repz
pop
in
mov
leave
cmp
and
popf
gs
push
xchg
add
mov
es
push
jne
int3
addb
jne
gs
jmp
sbb
out
cmp
or
sahf
mov
or
in
cmp
aaa
cmp
jo
xor
fsubrs
sbb
into
pop
fimuls
and
sbb
push
or
stos
mov
jle
mov
sbb
gs
adc
mov
sub
ja
mov
sarb
cmpsb
sti
add
movsl
xor
sbb
push
xorl
out
mov
pop
mov
xor
pop
leave
call
xor
dec
std
inc
shlb
add
jne
inc
adc
push
movsl
in
add
push
loop
sbb
xor
shrl
popf
xlat
adc
jge
adcl
cmp
out
inc
call
mov
push
dec
les
xchg
and
cwtl
into
jbe
je
imul
or
in
cmp
push
and
xchg
loope
ret
mov
push
mov
pop
jecxz
xchg
loope
cmp
out
adc
divb
add
movsb
in
adc
or
adc
dec
xlat
popf
in
or
and
out
push
outsb
dec
pop
push
jp
sbb
xor
adc
out
and
add
clc
inc
lods
fcoml
fmuls
pop
dec
lret
js
out
outsb
call
pop
mov
adc
ret
cltd
iret
aam
add
push
aam
loope
mov
xchg
jae
and
lret
lea
sbb
mov
data16
mov
in
xchg
cmpsb
jge
ljmp
xchg
xchg
adc
pop
nop
mov
add
inc
cmp
movl
sbb
mov
cmp
add
adc
insb
jl
clc
xchg
test
out
mov
and
add
inc
fstl
sub
fldl
lcall
push
mov
pop
outsb
mov
shl
sbb
rcl
jb
into
lock
lea
outsb
int
add
fisttps
popf
xchg
dec
xor
std
lock
pop
outsb
and
sbb
out
xchg
mov
les
mov
push
fcomp
fnstenv
imul
shlb
xor
shlb
roll
sub
mov
repnz
lods
popa
cld
cmpsb
and
cmpsl
fisttps
mov
ret
pop
lods
sub
insw
or
lock
inc
xor
lret
stos
cmp
mov
jmp
cli
je
aas
jmp
ffree
shl
mov
fwait
xchg
jle,pn
push
loope
and
dec
repz
les
loopne
pcmpgtb
and
push
jns
call
outsb
push
lds
push
sub
mov
jb
pop
icebp
daa
sbb
imul
push
mov
jo
test
cmc
xor
mov
lret
push
xorb
sbb
out
sbb
aaa
scas
fsts
cmp
mov
xchg
xor
fs
sbb
mov
imul
or
add
out
pop
mov
pop
jmp
mov
pop
pushl
jp
sbb
iret
in
inc
lea
fsts
decl
dec
das
adc
xor
inc
rol
inc
and
mov
push
lret
js
stos
dec
mov
cld
xor
sbb
movsb
mov
mov
pop
cwtl
add
and
fisubrl
add
and
lds
dec
jbe
gs
sbb
nop
data16
add
test
xlat
pushw
das
xor
mov
cltd
rcll
dec
js
and
xlat
jnp
jns
retw
jl
cmp
loope
push
addr16
add
or
pop
dec
scas
inc
xchg
mov
fcompl
cltd
jmp
icebp
push
aaa
bound
xor
movsl
pop
cmp
sbb
lcall
cmp
mov
xor
mov
mov
jns
mov
nop
ljmp
lods
std
stos
loopne
arpl
out
fadd
add
xchg
adc
sbb
popf
adc
dec
shrl
pop
xor
jmp
cmpsb
lds
in
mov
sbb
jnp
ror
cwtl
rorl
repnz
sub
sbb
mov
xchg
adc
inc
test
lahf
repnz
rclb
enter
movsb
lcall
mov
lret
mov
adc
mov
out
lods
push
es
pop
jecxz
adc
jp
sub
pop
jb
inc
or
sahf
lods
jle
pop
out
shlb
iret
fs
in
pushf
adcb
lock
xor
mov
mov
jl
lods
dec
cmp
cmp
add
orl
push
sbbb
movsl
fimull
pop
loope
mov
lret
mov
cmp
fildll
pushf
xchg
mov
stos
fildl
daa
mov
mov
nop
nop
add
hlt
pop
jne
rol
add
adc
xlat
in
push
negb
lret
mov
pop
inc
dec
inc
fs
jo
jge
fimull
inc
jle
dec
xchg
popf
push
adcb
std
shlb
insb
adc
test
psubq
jns
inc
or
call
jmp
leave
sub
int
aam
repz
gs
jbe
and
movsb
cmc
repnz
xchg
incl
add
lods
or
out
push
xor
mov
bound
cmpsl
and
xchg
adc
addr16
js
js
and
mov
mov
movsl
negl
inc
mov
fsub
pushf
sbb
jmp
and
pop
jne
repnz
scas
dec
pop
fimuls
inc
add
push
leave
addr16
lds
xchg
sbb
sub
xor
push
popa
iret
sbb
in
jmp
jmp
loope
adc
clc
ss
xorb
mov
adc
bound
xchg
repz
cmp
cld
cmp
sbb
lods
xor
or
cmp
adc
jecxz
pop
daa
mov
fdivs
xlat
push
adc
jg
cld
xlat
xchg
and
inc
add
inc
lcall
jb
idiv
cld
and
clc
pop
and
movsb
sub
aad
pop
shll
gs
rcrb
inc
insl
cmpl
xchg
ss
int
lock
shrl
and
stc
and
repnz
lret
pop
sbb
add
mov
jge
mov
lahf
in
ret
add
scas
loop
gs
sub
gs
jmp
stc
pop
sub
lds
aam
push
dec
fistpl
loop
lret
lret
decb
push
inc
mov
push
and
push
hlt
cmp
imul
sar
ret
xor
test
insb
outsb
clc
or
add
adc
or
test
les
das
les
push
in
std
jbe
adc
sbb
mov
and
je
sub
xor
pop
mov
dec
mov
mov
fnsave
cli
adc
push
sbb
loop
add
adc
cmpsl
pop
xchg
arpl
int3
mov
push
addb
sub
mov
mov
jbe
out
ret
and
mov
mov
mov
adc
mov
mov
cwtl
mov
jae
clc
das
call
jb
pop
test
push
les
sarb
stos
cmp
inc
dec
enter
movsl
cmp
dec
sbb
out
mov
arpl
add
fwait
xchg
jne
outsl
jmp
xor
stc
cmp
sbb
push
subl
ficoms
xchg
sub
dec
bound
std
fisubs
aaa
imul
cmp
or
aad
ret
aad
in
addl
mov
stos
jg
faddp
les
jo
jo
stos
out
jne
fisubs
inc
outsw
push
mov
mov
push
scas
push
push
movsl
inc
push
mov
ret
in
roll
push
xor
test
mov
fistpl
notl
xor
jmp
out
mov
jg
dec
test
sti
out
cmpsl
in
and
xor
int
ss
movsl
cmp
fcos
fcmovbe
inc
xchg
sbb
test
mov
push
mov
cmp
shlb
ret
jle
adc
into
jmp
mov
adc
and
adcb
lock
lds
or
dec
notl
push
in
add
test
dec
cld
lret
push
push
cmp
sbb
cmpl
cltd
test
inc
sti
xchg
movsl
mov
push
stos
fcmovb
adc
or
test
adc
loop
imul
or
lods
aas
mov
aam
out
adcb
pop
mov
aaa
xchg
lret
sub
cmpsb
jno
xor
push
pusha
xlat
jb
sbb
fldenv
and
and
jnp
nop
aas
add
dec
jge
lds
daa
dec
repz
mov
sahf
adc
cmpsb
pop
icebp
setle
stos
jb
test
lock
popf
cmp
sub
clc
add
aaa
mov
cs
xchg
arpl
sbb
insb
aam
add
mov
and
stos
dec
mov
inc
jae
or
scas
pop
add
fs
scas
mov
jle
imul
add
adc
ds
pop
jg
cwtl
push
shlb
movsb
or
push
leave
cld
ret
pop
add
and
sarb
mov
int3
popf
out
into
jmp
testb
push
or
repnz
and
jno
jno
jl
push
sar
jmp
inc
lods
lahf
repz
or
mov
out
or
xchg
xchg
pop
xor
insl
inc
sbb
xchg
cld
inc
pushf
jl
push
movsb
cwtl
cmp
mov
cmp
lcall
rolb
test
mov
inc
adc
xchg
mov
adc
out
popf
das
cmp
fcmovb
push
call
sub
push
loopne
mov
call
adc
dec
mov
xor
fcompl
flds
imul
mov
iret
mov
jl,pn
mov
cmp
push
pop
xor
adc
cltd
ret
clc
imul
jg
xor
cli
scas
cli
add
add
cli
mov
sbb
aaa
es
push
mov
stos
mov
inc
stos
adc
jmp
fnstsw
int
fildll
dec
fwait
loop
mov
js
inc
adc
pop
jb
sbb
push
inc
bound
dec
out
loopne
nopl
gs
or
pop
or
push
sub
fwait
lea
fldcw
sbb
push
and
ds
jle
sub
push
sub
outsl
inc
xor
movsb
jbe
repz
xchg
daa
push
loopne
out
adc
out
cmpsl
jne
fcomps
xchg
pop
sub
xlat
cmpsb
dec
fcoms
imul
cmp
inc
pop
lret
rclb
or
mov
out
test
out
sbb
sbb
dec
lahf
repnz
pop
pop
xor
pop
cmp
ret
sub
sub
inc
les
es
push
jo
and
and
sub
jb
sbb
sbb
inc
fmulp
sub
and
xchg
inc
loopne
out
mov
sub
mov
mov
sahf
rcrb
xchg
mov
inc
test
fs
sbb
test
addl
test
fs
insb
int3
xlat
shr
jns
dec
out
adc
fidivl
push
rolb
cltd
dec
lret
xor
mov
inc
jle
or
push
ret
sub
ljmp
rol
and
xorb
cmpsl
fsubs
pop
xor
fdivs
xor
push
and
enter
ds
cmc
or
or
jne
test
dec
xor
mov
mov
and
je
frstor
aas
mov
popa
mov
mov
mov
icebp
cmp
sub
stc
mov
arpl
and
push
adc
mov
xchg
popf
stos
pop
push
xchg
xor
mov
aaa
scas
scas
fdivs
rcrl
es
adc
aam
dec
cli
mov
or
gs
notl
mov
xchg
mov
aad
add
jle
push
push
dec
adc
les
sub
repz
mov
daa
adc
xchg
add
push
popa
repnz
fsubrs
jmp
inc
aas
lods
aaa
xchg
lret
adc
leave
dec
arpl
and
stos
sub
dec
add
inc
pop
sub
jae
cld
adc
inc
mov
scas
sar
cld
mov
in
out
mov
inc
dec
xor
inc
mov
inc
dec
lods
mov
xchg
cmp
cmp
out
outsl
in
or
lret
push
xor
das
je
xchg
fdivrl
sub
push
xor
fcmovb
int
push
pop
add
add
or
sbb
and
jb
cmp
roll
subl
push
rol
loop
aam
out
sarl
mov
mov
repz
sub
add
cld
adc
pop
outsb
call
mov
lret
js
pandn
js
lds
fmull
ja
or
fistps
mov
jnp
sbb
sub
test
cmp
push
cld
imul
or
shll
pushl
inc
pop
stos
je
cs
cmc
daa
jns
fcmovne
cli
bnd
inc
frstor
testb
xchg
jne
push
ret
xor
xlat
ljmp
lea
add
and
in
or
jns
mov
add
xchg
pop
fwait
rclb
sbb
imul
xor
push
or
iret
mov
xchg
push
push
xlat
sarb
mov
negl
clc
mov
sarb
and
ror
in
or
fbld
cmp
test
sub
sub
xchg
push
mov
xchg
and
int
dec
dec
in
popa
adc
inc
mov
shr
mov
imul
sbb
and
or
into
push
dec
mov
xor
inc
lret
jle
mov
or
push
xor
add
mov
lock
lods
add
pop
push
sbb
push
push
packsswb
dec
mov
add
fs
adc
shll
xor
les
adc
mov
xor
fwait
out
subl
dec
movsl
repnz
xchg
mov
mov
cmp
mov
lret
dec
and
mov
pusha
and
adc
cmp
add
fadds
xor
jg
lcall
lcall
imul
sarl
mov
popl
adc
sti
into
ljmp
ret
sub
jbe
mov
sub
jne
push
adc
fs
sub
add
jae
pop
cmp
int
stc
mov
dec
inc
xor
add
sahf
pushf
shlb
cmpsb
sbb
push
sub
xchg
add
jmp
pop
mov
or
cmp
in
movsl
js
subb
movsb
inc
xchg
xor
or
jecxz
dec
push
mov
arpl
add
push
jns
test
out
xor
daa
pop
xor
jp
fxch
mov
mov
push
xchg
pop
lcall
clc
mov
push
lds
mov
xchg
enter
and
sub
das
sbb
sub
faddl
out
mov
adc
cs
shlb
out
add
in
push
mov
ss
and
and
xor
pop
ljmp
sbb
enter
jno
mov
cmpsb
cmpb
inc
in
jmp
add
mov
sub
add
out
xchg
popf
mov
stc
sub
out
jge
cmpsl
mov
iret
inc
jnp
je
sbb
dec
inc
xor
cmpsb
xor
cltd
and
adc
shlb
aaa
ror
mov
cltd
adc
adc
xchg
sbb
lea
sbb
shrl
stos
cwtl
verw
lods
lea
es
dec
stos
or
arpl
lahf
or
mov
xorb
in
adc
loop
fistpll
outsl
fimuls
sub
insl
cmpsb
repz
cmp
icebp
xrelease
dec
dec
movsb
les
out
push
mov
popf
into
inc
ret
lods
cmp
inc
repz
dec
lea
stos
pop
adc
bound
mov
in
sti
addr16
add
sti
arpl
cmp
leave
jo
mov
jns
sub
pop
add
pusha
jns
testl
out
push
ret
pop
sbb
aaa
mov
in
inc
sub
repz
ljmp
add
add
cs
pop
stc
loopne
lahf
leave
xchg
imul
aad
mov
insb
cmc
cmc
push
and
jo
pop
lea
mov
xchg
fcmovne
cmp
sbb
aaa
sahf
jo
iret
cmp
mov
add
rorl
push
out
add
sub
mov
loop
mov
stos
test
add
inc
jns
hlt
push
ret
jne,pn
xchg
ss
pusha
sti
add
ret
in
shlb
cli
std
sub
jne
sub
push
rcll
xor
stos
jne
sbb
push
out
pop
out
in
hlt
aaa
ret
mov
xchg
push
mov
mov
add
ljmp
pop
cmp
push
jl
les
lock
xor
or
pushf
data16
dec
cwtl
mov
or
push
xor
cmpsb
rcrb
jbe
adc
dec
scas
test
xor
jmp
repnz
push
negl
repz
cmp
jecxz
mov
mov
dec
mov
cs
ficoml
mov
xor
and
stos
test
outsl
add
inc
stos
sbb
mov
dec
xchg
sbbl
sub
or
popf
xchg
ja,pn
add
or
push
mov
mov
cmp
inc
rorl
mov
pop
pop
cmp
fistl
fdivl
lods
pop
jnp
push
adc
frstpm(287
out
stos
push
sti
jp
push
push
xchg
and
fwait
cmp
dec
clc
sbb
sub
xchg
adc
xor
jge
jbe
cmp
aas
dec
cmpsb
jae
mov
insl
inc
cs
mov
xchg
push
adc
nop
sub
pop
lea
test
dec
mov
ja
mov
stos
stos
push
test
cmovne
ret
adc
xchg
cmp
xchg
cmp
dec
pop
and
nop
adc
das
pop
cs
fwait
push
push
xor
or
es
xlat
insl
push
adc
jo
or
pop
xchg
adc
xchg
xlat
jl
into
xlat
and
insl
aam
mov
dec
subb
push
mov
pop
xchg
jbe
dec
orl
push
mov
popf
lcall
test
stc
jno
mov
and
adc
xchg
rcrl
loopne
out
decl
fldlg2
xor
and
stc
xchg
cmpsl
lahf
es
mov
mov
hlt
lds
in
dec
rol
xlat
xor
cld
pop
jp
mov
data16
adc
cmp
mov
xlat
cmp
ljmp
arpl
inc
insb
cld
adc
xchg
pop
rep
ret
stos
addr16
push
scas
jnp
adc
mov
mov
add
push
sbb
sub
int3
mov
jmp
push
inc
scas
test
sbb
jmp
daa
add
in
in
aad
ds
ds
pop
js
lock
lods
jp
sbb
pop
adc
push
ja
and
int3
movsb
pop
xor
sbb
jle
jp
push
pop
adc
pop
icebp
mov
js
pop
and
mov
ds
and
mov
fiadds
cltd
cmp
xchg
js
cmc
jne
insl
dec
jo
arpl
xor
pop
xor
xor
sbb
mov
roll
jmp
sbb
cwtl
xchg
insl
pusha
cmpsb
pop
pop
sbb
push
movsl
push
xchg
xchg
popl
jmp
add
int3
mov
mov
neg
xchg
clc
lahf
dec
sub
push
xchg
cld
inc
xchg
cwtl
in
les
jmp
insl
sbb
mov
pusha
stc
or
ficomps
sbb
push
or
cmp
sbb
out
out
fidivrs
and
fcmovnb
jno
cmp
mov
fwait
jae
xchg
imul
mov
push
pusha
push
daa
sub
inc
xrelease
xchg
outsb
pop
bswap
xor
add
inc
mov
jno
ds
jl
popf
push
les
rcrb
rolb
hlt
sti
test
mov
out
xlat
pop
and
rorl
fisubs
mov
adc
test
mov
movl
inc
or
xchg
or
mov
pusha
push
lea
popa
pushf
sub
sub
test
stos
or
sar
fcoml
add
jo
and
into
add
adc
or
mov
cmp
inc
push
sub
inc
lcall
cwtl
add
popw
mov
sub
push
cltd
sti
push
adc
sbb
pusha
js
sub
sbb
push
jecxz
out
std
arpl
les
rclb
sbb
js
xlat
iret
in
mov
mov
mov
test
pop
cld
push
lahf
pusha
out
pop
pusha
add
jae
add
and
out
outsb
dec
lock
popf
or
ljmp
repz
cmp
lcall
stos
cwtl
into
mov
mov
xor
int3
jns
inc
adcb
push
mov
inc
addr16
icebp
dec
loop
cwtl
add
inc
and
jge
cmp
mov
aas
xor
test
addb
imul
xchg
push
dec
iret
mov
inc
stos
mov
add
insl
fnsave
sub
add
dec
cmp
xlat
out
push
sbb
or
fcompl
adc
xor
jnp
in
cwtl
push
push
sub
ja
lds
test
lock
push
adc
inc
push
jle
push
mov
aad
pop
mov
mov
mov
jecxz
mov
mov
sti
lret
cmp
dec
ljmp
mov
add
xor
push
xchg
sub
outsl
into
jge
je
in
sbb
xchg
dec
and
jbe
add
xchg
int3
push
mov
mov
aas
and
inc
pop
jae
es
and
adc
pop
push
cmp
dec
lock
insl
ret
push
cs
dec
jae
mov
inc
sarl
xor
sarl
xchg
ror
jns
outsb
sbb
call
cmp
xlat
addb
xor
jno
pop
jecxz
jns
and
aad
pop
shll
fidivrs
scas
addl
mov
icebp
cmp
subb
das
jno
dec
pop
adc
xchg
xor
jae
xor
inc
push
cmpsl
xor
loopne
stos
hlt
push
or
cltd
and
cmp
mov
cld
call
pop
mov
mov
xchg
sub
fwait
jno
inc
pusha
subb
scas
lret
mov
inc
jmp
dec
fnstenv
fadds
sub
ss
mov
repnz
inc
and
push
dec
sbb
pop
adc
and
stc
mov
lods
cmp
mov
jmp
out
ljmp
xchg
movsl
xor
jbe
movsl
arpl
dec
ljmp
cmp
push
xchg
mov
test
out
mov
loope
pop
mov
daa
pushf
cmp
xchg
mov
frstor
xchg
sub
pcmpeqw
jo
fucomp
xor
mov
cld
sti
pop
in
lods
jmp
mov
in
adc
sbb
push
push
sarl
out
pop
inc
arpl
je
pop
pop
mov
xchg
imulb
inc
xchg
in
dec
sub
out
push
ljmp
pushf
jnp
mov
aad
out
scas
dec
sub
out
xor
dec
js
sub
mov
mov
mov
fisubl
sbbl
cvtps2pd
pushf
cltd
cwtl
clc
adc
lea
jno
jmp
mov
xchg
iret
mov
mov
cmp
mov
sub
add
dec
incl
pop
or
dec
or
xrelease
dec
cmp
insl
mov
ja
or
jmp
rorl
and
jp
pop
add
xlat
icebp
jnp
mov
cmpsl
xchg
lods
adc
in
inc
jae
testb
pop
aad
push
mov
stos
jecxz
jg
xchg
mov
sbb
ljmp
aaa
daa
or
pop
jle
rcrb
lds
and
mov
pop
cmp
push
xchg
add
insb
lds
js
ficomps
xor
pop
mov
mov
outsl
addb
adc
shll
pop
pop
xor
popa
xor
xchg
add
js
lods
pop
push
push
insl
mov
repz
imul
js
outsl
das
aad
pop
mov
inc
jl
push
sub
aas
xor
in
push
or
mov
sub
push
sub
sahf
dec
sbb
clc
mov
pop
xchg
frstor
mov
jmp
pop
and
pop
pop
adc
sub
mov
adc
test
add
icebp
or
adc
xchg
out
aaa
rorb
cltd
les
jmp
mov
push
sub
es
fsubrs
mov
push
fdivrl
and
mov
dec
mov
mov
fists
shl
pushf
mov
push
loop
push
xchg
mov
jmp
subb
jl
lcall
sar
mov
out
divl
inc
repz
jl
mov
test
jns,pt
and
fists
sti
cmp
and
les
in
add
ljmp
cli
add
dec
push
rcl
std
cmpsl
push
mov
adc
clc
leave
mov
in
fisubl
push
cli
sub
ja
jl
in
mov
movsb
xchg
icebp
jmp
cmp
add
jb
add
and
mov
xor
data16
lret
dec
movsb
lahf
sbb
fcmovne
call
daa
mov
sub
adc
xchg
jnp
pop
mov
fimuls
adc
pop
jb
and
lret
das
push
add
fisubl
xchg
mov
lret
shlb
enter
cmp
jmp
loope
sub
push
scas
mov
or
inc
es
sbb
aas
jl
sub
xchg
add
push
mov
jb
push
mov
dec
mov
or
jecxz
inc
cltd
xor
push
clc
xchg
adc
cmpsl
out
in
jbe
addr16
cmc
dec
mov
cs
lock
pop
sbb
test
dec
jae,pn
pop
fildl
sbb
xlat
push
pop
lahf
jb
add
pop
xchg
jb
add
shlb
hlt
mov
nop
or
push
jns
jp
mov
mov
sbb
push
jno
xor
clc
sbb
pusha
fldenv
in
ja
ss
les
xchg
xchg
xchg
in
cmpsl
lock
jne
lods
mov
mov
push
scas
inc
xchg
bound
aad
push
pop
lods
dec
lock
repnz
mov
movsb
push
aad
dec
pop
mov
scas
in
pop
sarb
adc
add
jle
mov
mov
fdivs
aaa
mov
aam
in
pop
xchg
nop
aaa
daa
fisttpl
jmp
and
inc
fnsave
mov
and
sti
imul
out
nop
sahf
dec
repz
inc
cmp
shlb
xor
icebp
insb
mov
out
inc
xchg
lea
push
lock
test
mov
cmp
fsubrl
jb
js
cmp
cltd
xor
mov
lret
xchg
mov
pop
sub
xor
add
leave
pop
inc
adc
pusha
in
dec
or
cwtl
xchg
test
scas
cltd
aas
test
fisubrl
imul
cli
pop
push
push
clc
ljmp
insb
loope
imul
push
mov
pusha
popf
inc
inc
bound
pop
xchg
lret
loopne
inc
andb
out
add
sub
out
into
mov
bound
shlb
jmp
ljmp
jle
fadds
call
lods
pop
cmp
mov
and
ja
gs
push
mov
divl
das
aad
mov
aaa
idivl
fcmovnb
inc
push
jae
sub
cmp
pop
dec
ret
mov
xchg
mov
jg
hlt
dec
xchg
cmp
jge
sub
nop
mov
cs
clc
fmul
pop
loope
cwtl
push
nop
mov
xchg
in
pop
jbe
pusha
dec
jg
mulb
or
mov
cmpsl
add
js
xchg
rolb
sub
xchg
xor
mov
xchg
sahf
xchg
push
mov
mov
pop
push
sbb
jne
adc
mov
mov
imul
mov
or
mov
movsl
or
pop
fwait
pop
sar
mov
pop
cmp
jmp
and
out
ja
mov
scas
dec
shll
es
fisttps
dec
add
lcall
cmpb
sbb
stos
cmp
mov
push
fadds
fnsave
xchg
xchg
add
cmc
in
mull
pop
inc
inc
mov
out
inc
mov
cld
out
mov
js
pop
ds
push
cmpsl
sub
push
dec
dec
or
jnp
sti
out
sub
pushf
cmp
movsl
jb
sbbl
and
sub
imul
inc
jno
mov
push
test
jbe
mov
dec
mov
test
adc
or
dec
aaa
fidivrs
xor
push
ds
mov
add
je
ss
orl
lods
cli
push
mov
push
je
or
and
cmc
aaa
sub
jmp
leave
outsl
pop
movsl
loope
sub
dec
adc
or
inc
aaa
mov
movd
xchg
andl
es
or
pop
and
push
es
inc
or
push
xor
fistpll
fisubrs
and
lock
jne
mov
fisttpl
test
dec
and
cmp
or
ljmp
mov
mov
jge
fiadds
loop
xchg
adc
outsl
fs
iret
add
lahf
or
or
test
sub
lcall
pop
pop
push
pop
push
sub
test
sbb
push
ss
lret
test
roll
out
or
cli
out
jae
mov
inc
clc
jno
orl
rol
mov
daa
mov
fbld
data16
testb
lds
dec
je
addr16
repz
bound
sub
rol
popa
mov
mov
lds
rclb
je
pop
nop
lods
and
cmp
rcll
add
push
fidivrl
mov
lret
in
pop
js
aam
scas
ret
sahf
dec
lcall
mov
in
arpl
fdivl
cwtl
cmpl
clc
hlt
mov
cmp
test
jl
pop
fsubr
in
outsl
repnz
outsb
fwait
lret
in
xchg
in
xchg
loope
sbb
and
shlb
sahf
xchg
aad
mov
sub
inc
sbb
addl
adc
pop
outsb
cmp
loopne
lock
sbb
call
xchg
aaa
std
sub
sbb
or
sub
ljmp
nop
stos
jo
push
or
jnp
cmpl
aad
js
ret
data16
insl
xor
int3
add
jnp
stc
inc
push
cmp
or
cmc
imul
push
stos
or
inc
jbe
call
add
setno
loopne
pop
cs
adc
lock
cld
jmp
jns
xchg
les
enter
mov
rcll
gs
pop
xchg
mov
cwtl
data16
pop
sub
insl
rol
adc
js
in
inc
and
pop
jno
inc
sti
or
scas
ja
mov
call
sub
jae
xchg
subb
mov
jl
dec
add
cmp
dec
jle
xchg
sub
sbb
nop
fcompl
pop
xlat
xor
mov
jmp
inc
pop
push
fnstcw
sub
inc
les
popa
loop
fdiv
jne
lret
ficoms
xchg
test
inc
inc
or
push
jle
jp
push
into
or
jbe
jns
lock
pop
jecxz
enter
xlat
jne
mov
push
clc
scas
test
loope
sbb
pop
sub
or
adc
dec
xchg
popa
testb
les
inc
iret
jo
lock
jg
lret
xchg
or
pop
pop
inc
insl
hlt
mov
test
movsb
or
push
das
or
pop
inc
jecxz
popa
cmp
aas
or
xor
lock
xchg
repz
mov
pop
push
xor
testb
mov
gs
sahf
cmp
fistpl
in
lret
push
loopne
repnz
test
mov
mov
jecxz
dec
cmc
lock
lcall
js
fisubl
loopne
inc
ja
inc
out
outsl
out
add
sub
pushf
dec
inc
xchg
cmp
mov
nop
aad
pop
push
add
mov
pop
add
lds
push
lods
sbb
hlt
dec
or
mov
cmp
sbb
mov
push
scas
dec
sub
dec
push
cltd
or
mov
pop
pusha
repnz
mov
dec
push
or
repz
inc
push
sub
cmp
push
and
je
sub
mov
hlt
jne
cmp
cmp
dec
sbb
pop
loop
push
add
fidivrs
out
std
hlt
arpl
sahf
push
nop
cmp
jbe
or
mov
xchg
and
sar
xor
mov
mov
adc
add
cmpsb
cwtl
jle
ret
push
jmp
mov
lret
lahf
das
cmp
xor
iret
xchg
fsts
fbld
and
pop
data16
and
aaa
and
pop
das
rcrl
lds
shll
cmp
xor
cmpsl
ret
inc
mov
inc
cld
test
sub
jnp
orb
pop
mov
fcmovnbe
cmpsb
shlb
pop
std
inc
ja
mov
pop
or
xchg
or
scas
mov
popf
xor
or
mov
inc
arpl
fs
sbb
or
stc
pushf
adc
or
lea
stos
rorl
xchg
pop
sbb
jne
dec
add
mov
repz
fs
jecxz
movsb
popf
mov
push
and
mov
push
insl
test
xchg
leave
push
dec
rcrb
imul
outsl
pop
lock
sbb
mov
data16
cwtl
push
popf
outsb
ja
je
ret
ljmp
mov
inc
lods
dec
dec
out
sub
test
mov
loopne
xor
jmp
or
xor
in
mov
scas
push
push
pop
xchg
and
lods
pop
outsl
cmp
pusha
pop
jno
jmp
push
bound
jno
aad
data16
add
repnz
and
dec
inc
lds
fiaddl
xchg
mov
and
out
nop
cmc
push
mov
xchg
xor
js
cmpb
sub
cmpsb
loopne
insb
push
jnp
popa
outsl
jmp
push
mov
xor
push
imul
lock
inc
popf
jo
and
fwait
sti
out
pop
mov
xchg
mov
and
daa
xor
sbb
push
rorl
sbb
rcrl
insl
cmp
sub
dec
sbb
jno
or
cmp
jge
movsl
out
fadd
gs
clc
lahf
or
test
lods
jns
cmpsb
andb
in
mov
fcmovne
repz
add
mov
test
ret
stc
mov
mov
mov
cmpb
jns
repnz
dec
and
arpl
mov
and
movsl
adc
mov
lcall
add
xchg
adc
das
ror
pop
cmp
aaa
inc
jae
inc
aaa
roll
sbb
lock
popa
sub
addr16
mov
adc
lahf
outsb
xchg
dec
sub
or
pop
push
test
aaa
mov
pop
aad
xchg
daa
jecxz
pushf
jb
push
inc
mov
dec
enter
data16
mov
push
cmc
je
lcall
push
outsl
push
xchg
pop
into
mov
lds
sub
test
pop
push
and
loope
pop
jp
dec
sarb
iret
inc
ret
cmp
dec
fisubl
leave
lea
and
stc
decb
xchg
push
xor
mov
inc
scas
push
aad
cmpsb
leave
insl
gs
xor
ret
aas
imul
arpl
mov
gs
and
dec
dec
das
cwtl
sub
pushf
jne
mov
mov
lret
xlat
inc
dec
xchg
mov
cmp
push
jne
sub
arpl
mov
or
jo
in
cmpsl
xor
scas
xor
mov
je
sub
push
stos
cmpsb
pop
bound
enter
pop
cmp
xchg
pop
lods
pop
test
jb
loop
movsl
xchg
iret
xor
outsl
pop
imul
in
imulb
mov
imul
and
cwtl
loopne
adc
jae
sbb
out
arpl
mov
cwtl
loope
pop
aas
out
sub
sarl
inc
sbb
lret
ljmp
shr
adc
fidivs
xchg
and
mov
mov
je
dec
xor
outsl
jb
es
aas
add
enter
lea
into
xor
cmp
jp
cwtl
decl
inc
in
jge
cmp
rorb
xchg
roll
test
mov
testl
faddp
int3
sub
inc
sbb
mov
fcomi
cmpsb
jae
ja
push
ljmp
sahf
faddp
test
fwait
xchg
pop
shrl
cmp
test
push
push
inc
pop
xor
lea
ja
mov
push
add
jb
mov
push
ja
adc
jmp
sub
icebp
outsb
bound
imul
gs
sarb
fsubl
repz
sbb
in
insb
push
jl
lock
bound
loope
jge
mov
stos
cmpsb
sub
pop
pushf
popf
mov
hlt
add
mov
outsl
stos
mov
mov
lret
fsts
scas
mov
je
inc
popa
sbb
xor
cmpsb
push
out
inc
aaa
pop
xor
cmp
movsb
sub
or
in
add
clc
lcall
test
jbe
xchg
ret
mov
and
xchg
test
fimull
lds
into
adc
fstpt
test
stos
add
jnp
sub
push
test
pop
dec
int
in
lea
pop
xor
jg
lcall
sub
rcrb
loope
and
clc
leave
iret
lret
rcrb
sbbb
adcl
or
cmpsb
mov
out
fs
push
and
enter
cmpsl
das
dec
in
sbb
inc
iret
andl
popf
imul
insb
xor
data16
xor
inc
femms
xor
fstpt
dec
and
or
xchg
pop
mov
mov
cs
pop
scas
call
push
dec
call
mov
loopne
push
pop
mov
sbb
push
push
jbe
xlat
mov
mov
ss
insl
lcall
lock
jnp
or
leave
pop
movsl
je
push
mov
mov
cmp
lahf
in
mov
mov
ret
ds
adc
xchg
mov
subl
mov
sub
lret
mov
dec
out
cs
int
add
jno
mov
adc
fisttpll
mov
or
or
mov
dec
inc
ret
and
add
sbb
xlat
aas
mov
jmp
out
mull
das
testb
lret
bts
movsb
fidivs
sbb
ret
aaa
fcmovb
jmp
cld
ret
insl
les
in
mov
fadds
pop
sbb
mov
pusha
mov
jns
jb
jge
cmp
mov
fstpt
out
hlt
and
sbb
in
mov
ret
mov
dec
les
les
hlt
sti
rclb
ret
adc
test
int3
xor
rclb
pop
hlt
insl
lret
fimuls
addr16
std
mull
je
fnstsw
inc
into
out
jg
fwait
dec
xor
test
mov
test
in
dec
cli
mov
xchg
enter
into
cli
fwait
cmpsb
lea
or
ret
aam
jle
insb
aas
stos
cs
mov
insl
aam
cmp
movsb
and
mov
mov
repnz
jge
lods
movsb
bound
dec
pop
leave
xchg
es
mov
leave
insl
bound
adc
lcall
sub
push
cwtl
int3
sbb
mov
mov
leave
pop
pop
int3
xor
xchg
outsb
bound
fisttpll
inc
daa
pop
mov
push
bound
pop
mov
sbb
idivb
sub
test
rolb
cltd
jae
mov
mov
jb
xor
scas
jecxz
add
jg
xchg
pop
into
jmp
adc
inc
adc
adcl
int
xchg
mov
test
loopne
fcompl
les
jmp
shr
push
bound
xor
insl
fimull
pop
push
adc
hlt
xchg
sbb
inc
hlt
xchg
test
sub
xchg
cwtl
and
xor
push
mov
mov
mov
mov
cmp
inc
out
movsb
cmpsl
sbb
inc
cmc
jecxz
jg
test
inc
shl
and
lret
rorl
cmp
fs
xchg
cmp
mov
fisubl
jo
packssdw
loopne
xor
sahf
or
xchg
push
mov
popf
dec
into
pop
cmp
scas
jnp
daa
hlt
std
inc
xchg
test
das
sbb
shrl
mov
mov
inc
repz
xor
add
pop
stos
out
dec
sbb
sbb
push
es
cmpsl
in
pop
adc
inc
sbb
mov
push
jp
mov
push
lret
pop
jge
pop
push
aaa
test
jo
rcrb
ret
push
subl
arpl
fidivs
mov
sub
imul
inc
mov
stos
sbb
call
rep
push
and
xchg
push
push
ds
aad
das
into
sbb
fistpll
lcall
mov
push
mov
out
pop
insl
xchg
xchg
push
fwait
or
cmp
je
or
inc
push
loop
cltd
inc
lret
lcall
sub
jo
push
inc
pushf
adc
ds
in
repnz
mov
mov
daa
jnp
shlb
inc
es
add
loop
xor
jmp
jne
jno
test
outsl
pop
adc
test
std
loop
add
mov
fisubrs
mov
pop
sbb
inc
fbld
xor
outsb
jge
int3
sub
ffreep
lahf
mov
xlat
enter
dec
mov
mov
mov
je
add
or
pop
out
mov
sbb
scas
xchg
lret
mov
push
inc
adc
lahf
stos
or
xor
imul
push
int
adc
mov
aaa
and
in
loopne
jge
sub
sub
dec
push
push
movsl
xchg
bnd
dec
es
fsubl
rcrl
and
dec
jne
js
jmp
imul
shlb
xor
push
sub
mov
lds
fisubrs
jle
pop
int
and
loopne
gs
out
iret
jp
jnp
sub
sub
and
movups
fst
cmp
pop
cltd
add
mov
or
inc
xor
xor
imul
loopne
and
mov
sti
int
test
sarb
mul
sbb
xlat
mov
jns
pop
mov
addb
in
pushaw
inc
imul
sbb
add
push
lods
cli
cs
scas
add
add
inc
sbb
mov
cli
addr16
js
dec
outsl
add
adc
scas
jns
cmp
push
adc
cltd
imul
cmc
stos
bound
or
std
push
fistpll
iret
push
or
popa
fsubrs
out
push
ror
jecxz
out
jg
mov
addb
in
inc
stos
jne
adcl
movsb
pop
fucomi
adc
mov
into
loop
mov
push
cmpsl
mov
sbb
divl
adc
fsubrl
fbld
stos
cmp
icebp
or
insl
xchg
mov
nop
sub
lock
notl
push
add
mov
dec
outsb
repz
and
push
mov
lret
xor
add
push
xchg
cwtl
pusha
stos
xchg
shll
ljmp
lods
mov
out
and
inc
loope
stos
mov
mov
imul
out
addl
fsub
or
push
mov
movsb
test
fwait
negb
fisubl
nop
dec
add
fmuls
gs
mov
jae
stos
ljmp
jnp
pusha
mov
dec
nop
stos
gs
cmp
mov
mov
lds
xchg
dec
jno
sysexit
jmp
ja
cli
jne
dec
ja
pushf
sti
mov
test
dec
inc
push
andb
or
imull
in
adc
mov
mov
bound
or
mov
mov
mov
xchg
mov
ss
outsb
add
fcmove
fwait
dec
nop
push
adcb
les
mov
push
out
push
je
icebp
adc
int3
out
dec
mov
xlat
dec
add
push
push
idivl
jmp
mov
hlt
outsl
jae
mov
cltd
push
aas
dec
scas
sub
iret
cmp
lds
or
sbb
ret
lock
or
inc
cmp
repz
mov
testl
mov
sbb
push
xchg
mov
into
ret
cmp
push
cmp
aas
push
adc
jl
inc
xchg
popa
pop
xor
jno
les
dec
xor
repnz
in
jbe
or
lods
pop
xor
iret
or
xchg
lret
fisubrl
xor
scas
mov
cmp
pop
insl
inc
or
andl
mov
push
fnstenv
ss
push
ljmp
jne
push
and
mov
stos
xchg
cmp
mov
jne
shr
ljmp
dec
xchg
das
and
roll
mov
jmp
pop
out
cmp
popa
insl
mov
jmp
repz
xor
jmp
xchg
mov
scas
cmp
jmp
movlps
gs
mov
mov
pop
pop
les
pusha
or
dec
push
xor
negb
out
pop
cmp
inc
fidivrs
push
icebp
clc
mov
sub
mov
pop
sub
pusha
add
or
pushf
movsb
cltd
xchg
and
mov
xchg
push
adc
xorb
cmpsb
test
cmpsb
or
iret
in
loopne
rclb
repz
and
stc
in
push
hlt
adc
jne
cmp
orl
std
pop
push
test
cmp
sarb
cs
ja
cmp
or
inc
cmc
inc
insl
les
xlat
mov
cmpsb
push
cwtl
push
ret
mov
sub
ret
inc
arpl
adc
push
es
and
push
lahf
pop
out
cmp
movsb
inc
enter
imul
and
movsl
push
popf
pop
cmp
mov
xchg
lea
cmp
adc
mov
pop
aam
movsl
mov
jae
xor
dec
bnd
jae
and
xor
jecxz
cmp
inc
push
mov
lods
push
or
lret
aad
imull
jle
movsl
dec
add
xchg
addl
lret
mov
xor
adc
push
fists
int3
and
cmp
push
in
call
pop
and
xor
insb
sets
in
xor
rcll
mov
les
mulb
xchg
or
sti
test
dec
jg
std
and
jb
leave
or
lret
jae
mov
lock
sbb
xchg
ror
cmpsl
mov
jnp,pn
or
ljmp
js
sub
jp
mov
into
hlt
xor
and
dec
dec
add
cmp
fcoms
cmp
movsl
andb
cwtl
or
lahf
call
fisubl
mov
xchg
ficompl
pop
icebp
pop
mov
jnp
je
mov
imull
scas
data16
pop
or
movsl
mov
cmp
xchg
sub
or
mov
xor
lret
scas
jmp
xor
rorb
ljmp
cmp
into
pop
xchg
push
popfw
popa
jmp
pop
incl
test
pop
pavgw
adc
xchg
shll
or
xchg
pop
and
int
in
jb
jg
fucomip
xor
testb
inc
mov
out
dec
pop
xor
repnz
jne
or
ds
loop
stos
pop
test
push
sahf
insb
out
mov
gs
hlt
mov
fstpl
inc
push
mov
mov
je
mov
mov
xchg
mov
add
aad
inc
and
add
shrd
loope
rep
adc
fildl
mulb
inc
inc
test
pop
cmpsb
and
jl
in
inc
iret
lcall
and
test
stc
or
cmp
aaa
and
adc
pop
sti
sub
mov
test
push
sub
mov
adc
pop
or
pop
fwait
dec
xor
jnp
dec
mov
add
ret
lods
mov
imul
and
pop
xlat
pop
and
mov
push
out
or
ds
fstps
ss
iret
xchg
xlat
ss
add
bound
inc
push
or
into
pushf
jl
call
push
lock
jne
adc
stos
std
push
test
sbb
mov
or
xor
mov
push
popf
sub
and
lret
xlat
out
into
loopne
testb
lea
adc
xor
lret
xor
sahf
dec
push
xor
add
jg
gs
fldt
in
mov
cld
stos
pop
ljmp
gs
adc
subl
xor
movsl
pop
adc
pop
add
dec
mov
and
mov
xchg
and
cltd
mov
hlt
das
jge
lea
or
mov
test
mov
xchg
xchg
fmul
enter
stos
loope
ljmp
mov
rclb
sub
cli
sub
sbb
dec
fcomps
imul
in
dec
adc
stos
ret
popf
sbb
xor
mov
jmp
mov
push
outsl
cmc
mov
and
std
les
push
inc
push
xor
aad
imul
add
test
lds
jl
dec
mov
fisubs
scas
movl
fwait
push
test
test
aam
inc
mov
hlt
mov
lret
pusha
pop
sub
jecxz
jno
dec
mov
sbb
mov
and
cwtl
cmpsb
mov
scas
out
adc
lds
push
in
cmp
adc
int3
cmp
in
or
or
jge
jae
mov
shll
fwait
sti
in
xor
iret
addl
or
jg
test
xchg
sub
aaa
int3
enter
jecxz
ja
fwait
jge
mov
pop
sub
add
add
mov
jge
loop
out
adc
mov
test
daa
jo
mov
dec
and
ret
mov
lock
clc
jl
roll
jo
aad
test
mov
and
repnz
pusha
je
cmp
leave
incb
cmc
cmp
incl
into
pushw
and
lods
push
mov
out
adc
ljmp
gs
mov
das
mov
fnstsw
imul
cltd
adc
or
pop
jle
push
mov
popf
cli
and
loope
test
dec
es
and
fdiv
sub
leave
lcall
int
adc
mov
lret
mov
push
xor
in
mov
jne
sub
push
cmc
test
fcmovnb
mov
mov
dec
aad
and
sarb
adc
inc
pop
dec
push
popf
in
pushf
test
inc
push
sarb
ret
mov
lahf
sbb
pop
bts
add
cmpsb
test
loopne
aad
sub
inc
mov
pop
pop
jecxz
pop
popa
popf
mov
icebp
clc
xor
pop
cli
and
cmpsb
arpl
jmp
pop
and
fistps
sub
push
repnz
ja,pt
jo
adc
mov
jae
push
or
pushf
fcomps
lcall
rorb
aad
cmpsb
subl
push
repz
add
jne
hlt
push
cli
jge
fisttpll
jbe
test
dec
and
test
fcoms
cld
cmc
arpl
repz
dec
xor
cmp
inc
insb
dec
pushf
xor
test
aad
ss
fadds
movsb
jle
mov
or
ja
push
jl
lea
aam
jno
outsb
fsts
aaa
lds
xchg
and
xchg
xor
arpl
add
jne
jnp
inc
sub
mov
outsl
jo
adc
adc
cmp
bound
cld
xchg
jb
lret
xchg
xchg
sub
fsubl
insb
aad
sbb
into
add
repz
adc
xor
push
imul
movsb
gs
adc
shll
or
lods
jl
out
and
push
movsl
in
outsl
sysexit
xchg
ret
mov
mov
lods
push
mov
and
inc
xchg
xchg
push
cli
cmp
mov
inc
popa
outsb
inc
pop
mov
rcll
lea
cmp
cmp
inc
xchg
mov
out
fnstcw
dec
mov
mov
mov
dec
xor
mov
pop
pop
leave
popa
lret
push
popa
out
lea
les
mov
decl
ret
add
into
mov
and
add
ret
jo
cltd
ds
add
fsubr
insl
cmp
pop
dec
lock
and
dec
jmp
fdivrs
fcmovnbe
pop
pop
scas
out
insb
xorb
or
nop
loope
data16
mov
push
fcoml
ret
pop
inc
movsb
jmp
pushf
imul
push
dec
pop
setbe
insb
pop
ret
sbb
ja
dec
call
sub
pop
sbb
sbb
lcall
shl
imul
cmp
push
fucomi
xchg
stc
mov
imul
daa
add
loope
mov
fs
jnp
sbb
and
int
fstpl
lock
jbe
sub
out
jns
mov
and
or
xor
pop
adc
out
mov
adcl
inc
jne
in
icebp
pop
mov
int
cmp
daa
mov
cmc
testb
ret
dec
js
sub
test
sub
dec
and
test
or
pop
out
bound
push
gs
scas
xlat
push
add
sbb
mov
test
imull
insb
sbb
loope
in
scas
icebp
mov
ret
jecxz
cmp
cmpsl
pop
dec
jge
xor
cmpsb
loop
mov
iret
dec
dec
test
adc
cmpsb
mov
adc
loopne
adc
lock
push
jo
popa
std
out
out
cmp
sub
daa
sub
rcll
jns
jnp
sbb
xchg
ds
shll
sub
fcoms
rcrl
mov
stc
pop
mov
lods
cs
sbb
inc
mov
lods
cld
imul
pop
stos
sbb
mov
out
test
cmc
mov
cmp
rclb
lods
rclb
xor
dec
lret
dec
loop
ret
adc
aas
dec
push
mov
and
test
push
sbb
pop
stos
shll
outsl
jne
inc
mov
mov
and
mov
stos
dec
es
push
sbb
cvtdq2ps
jbe
xchg
dec
inc
pop
out
loop
inc
push
adc
push
sbb
add
lcall
test
cltd
es
xchg
or
es
push
xor
call
and
pop
imul
loop
dec
xchg
or
sbb
popa
or
out
mov
fmull
jg
imul
xor
add
xor
mov
jle
in
pop
lret
push
pop
and
inc
or
in
xchg
sub
cmp
mov
pop
mov
mov
fistpl
fcmovu
movsb
jno
outsb
bound
jae
ss
mov
dec
frndint
adc
mov
in
xchg
loop
dec
jnp
sti
jnp
aam
jle
cld
mov
mov
xchg
fxtract
dec
hlt
frstor
mov
push
aad
cltd
rcll
mov
pop
jnp
or
inc
bound
rclb
mov
sub
mov
or
xchg
movsb
sti
out
idivb
dec
sub
int3
jecxz
cmp
xor
jg
mov
test
mov
mov
cli
cld
in
or
mov
sub
cltd
adc
pop
out
fs
subb
mov
das
cmp
xor
xchg
cwtl
test
icebp
mov
mov
imul
inc
inc
xchg
lcall
fbld
add
push
shrb
loopne
cmp
cmpsb
or
in
pop
stos
int
cmp
mov
add
in
xchg
inc
push
ret
ljmp
mov
in
test
jbe
pop
neg
movsb
sahf
into
push
aas
lea
int
repnz
insl
mov
push
push
dec
outsb
repnz
int3
daa
rcrl
mov
scas
cld
cmp
push
adc
lret
lods
xchg
mov
mov
mov
sbb
fsubr
test
dec
dec
and
jecxz
aad
pop
jae
mulb
jmp
pushf
movsl
sahf
scas
and
cmc
fisubl
and
sarl
xor
mov
cli
sbb
and
rclb
in
push
mov
fdivrl
rorb
mov
mov
jg
jecxz
loopne
lods
shll
arpl
jge
es
ss
xchg
outsl
out
int3
jns
pop
arpl
into
bnd
decl
test
xchg
fistpl
inc
into
andl
mov
inc
xlat
xor
fsubrl
push
push
fcom
out
lods
lret
lcall
pop
sub
mov
test
or
daa
cmp
xor
adcb
mov
cli
lret
sub
cmp
stos
and
repz
mov
push
pop
out
sbb
cmpsb
xor
fs
mov
in
cwtl
inc
push
xlat
jnp
loopne
test
or
movsl
out
push
dec
insb
cwtl
xor
sbb
jne
cmpsl
loopne
popa
rorb
mov
insl
inc
and
pop
rol
xor
ja
loopne
fcomps
dec
ret
jp
or
add
dec
inc
mov
adc
jnp
fpatan
mov
jg
jns
leave
cmp
sbb
inc
mov
dec
jno
inc
xlat
pop
hlt
cmp
inc
mov
dec
jecxz
out
inc
bound
movsl
mov
xchg
jbe
sub
lods
inc
sbb
lcall
loopne
fwait
movsl
inc
or
ret
int
addr16
jb
out
adc
lods
xorl
mov
push
lock
lods
popa
jmp
xchg
mov
adc
es
fidivs
insb
clc
cwtl
push
inc
and
pop
out
int
rclb
fstps
popf
xchg
push
xor
pop
or
push
fwait
test
cmp
repnz
aad
mov
xchg
mov
adc
leave
or
int
mov
inc
xchg
movsb
xor
es
inc
in
inc
xor
subl
mov
bound
sarb
push
imul
sbb
ja
push
sbb
clc
push
xor
mov
dec
dec
mov
int
or
mov
pusha
adc
mulb
xchg
insl
jno
jge
mov
pop
cwtl
inc
rorb
push
shl
pop
enter
or
inc
int3
jne
je
cmp
xchg
sti
mull
pusha
push
xchg
push
shr
movsb
push
aaa
subl
xor
fsub
mov
insb
cmpsb
imul
test
and
repz
lods
push
ds
lock
pop
pop
sahf
rclb
push
push
and
jae
push
rolb
gs
push
mov
stos
iret
mov
and
push
adc
test
out
jbe
cs
mov
imul
cltd
ret
outsl
dec
cli
xor
and
adc
jno
je
mov
or
mov
fstps
cmp
repz
mov
in
pop
movsb
fs
add
dec
xor
inc
sub
aaa
push
ljmp
aaa
and
jne
out
push
cmp
sbb
push
add
bound
adc
push
push
jo
xchg
add
addr16
scas
mov
js
int
mov
cmp
mov
test
xor
and
in
lret
xchg
or
arpl
adc
stos
stc
stos
popa
sub
pop
aas
mov
mov
mov
push
add
pop
outsl
push
mov
loope
popa
xor
cmp
icebp
push
push
popa
ds
mov
stc
or
sub
lods
enter
inc
xorb
and
sahf
sub
dec
cmp
sti
outsb
repz
cmp
notb
pop
xchg
mov
pop
pop
sub
mov
repz
bound
inc
mov
mov
mov
pop
push
push
movsl
test
add
mov
sahf
adc
mov
mov
inc
mov
fsubrs
mov
in
mov
scas
mov
imul
and
fucomip
sub
rcrb
mov
cmp
mov
dec
scas
rolb
cmp
and
aad
mov
data16
fstp
jp
shrl
xchg
dec
jl
mov
arpl
xor
cmovle
std
sub
adcb
movsb
xor
xchg
ja
or
cmp
xorb
aad
sbb
cwtl
mull
lods
xor
mov
inc
pop
sbb
dec
adc
pop
jnp
adc
cwtl
pusha
push
icebp
pop
pop
stos
inc
es
mov
out
push
ds
enter
aam
icebp
cmc
adc
jmp
push
clc
cmpsb
das
aad
sub
inc
dec
insb
xchg
and
sti
stc
fstl
adc
ror
shll
mov
stos
fsubrl
lahf
adc
jg
and
add
addr16
mov
jns
and
push
push
fsubr
sarl
out
pop
bound
pop
inc
aad
idivb
in
sub
daa
inc
xchg
push
xchg
inc
and
or
outsl
add
imul
and
cltd
lcall
sub
sub
sbb
cmp
jmp
jge
std
adc
jg
addr16
ficoms
push
add
xchg
lahf
mov
xchg
shll
cmc
xchg
out
repnz
sub
jno
popa
sbb
in
ja
push
xchg
and
clc
arpl
push
shl
dec
scas
and
es
adc
xor
dec
insb
aaa
xchg
sbb
mov
cmp
mov
jo
xchg
movsl
jb
dec
in
mov
mov
sub
or
into
lock
arpl
dec
pop
mov
mov
cwtl
jle
pop
push
je
test
ss
sbb
in
mov
pop
inc
dec
add
xchg
icebp
sub
xchg
pop
add
lcall
lcall
aad
jge
jbe
jo
inc
mov
in
add
cmpsl
mov
sbb
push
xor
xor
jge
sbb
mov
pop
cs
and
lods
inc
pop
into
inc
dec
and
mov
jne
not
movsb
xchg
push
mov
fnsave
lret
and
mov
ljmp
popa
addr16
test
stos
scas
insb
imul
inc
mov
inc
je
mov
dec
les
cmc
cmp
push
xchg
mov
lret
sub
inc
adc
jo
mov
and
jecxz
dec
pop
in
rcll
addr16
cld
mov
rorb
inc
in
pop
rorb
push
add
in
jp
mov
popa
inc
in
xchg
sbb
push
sbb
dec
lcall
inc
fisubs
rcrl
out
cmpsb
out
outsl
inc
int3
or
vpsllw
inc
cmp
sbb
and
fstpt
push
add
jecxz
adc
inc
imul
mulb
outsl
dec
jae
cmp
jno
testl
test
mov
xchg
repz
dec
sub
jp
ja
jg
xchg
jno
mov
cmp
loop
mov
sub
mov
shl
dec
jae
jns
lahf
jbe
inc
test
ret
and
mov
lret
jmp
cli
lods
sbb
ja
sbb
mov
out
sbb
es
cli
or
mov
push
lea
lcall
push
jo
test
movsl
jl
adc
cmp
mov
into
pop
mov
dec
je
ret
jbe
adc
pushf
shll
mov
mov
dec
cmp
dec
sbb
mov
pop
hlt
jbe
or
pop
je
xor
lock
jb
notb
push
vxorps
mov
cmp
xchg
cmp
test
fucom
lods
pushf
jns
lods
mov
add
ja
cmp
add
in
mov
xchg
fildl
jg
shrl
lods
lock
je
xlat
mov
mov
test
mov
psubsb
test
jb
popa
xor
bound
les
test
in
adcb
mov
push
movsl
mov
mov
popf
ret
insl
adc
adcb
cwtl
popf
push
mov
out
sbb
mov
cs
xchg
or
dec
loopne
movsb
stc
stos
rcl
mov
add
mov
test
pop
in
inc
in
xor
sbb
push
cmp
jno
cli
adc
enter
add
xor
dec
add
insl
jo
mov
dec
pop
jnp
mov
enter
sub
mov
inc
pop
scas
movsb
mov
loop
jo
sbb
stc
mov
scas
sahf
clc
mov
push
out
xchg
dec
lock
out
lea
outsb
scas
inc
cmp
cmp
sub
sti
fstpt
imul
xor
sub
ds
daa
bound
js
lret
ss
lods
adc
cmc
les
sub
inc
xor
mov
ss
jbe
mov
or
add
add
mov
cmp
lcall
jns
subl
hlt
and
mov
mov
test
bound
add
add
pop
aas
in
mov
test
ficomps
hlt
sbb
pop
imul
adc
leave
dec
test
pop
xor
scas
mov
fistps
shll
dec
mov
nop
in
jecxz
inc
cmc
mov
xchg
adc
aam
mov
imul
xchg
mov
repnz
cmp
or
sti
jge
pop
scas
fcmove
sbb
jno,pt
and
jmp
inc
movsb
adc
sarb
out
xor
jbe
adc
mov
out
jp
mov
push
push
cmc
pop
push
dec
subl
mov
xor
jmp
xor
lea
and
dec
pop
push
loopne
imul
insb
std
js
jg
dec
dec
mov
shr
lods
or
push
mov
mov
sbb
inc
jmp
int3
lods
mov
subl
cli
out
imul
cltd
cmp
cmc
ret
mov
fldt
or
in
outsl
mov
jmp
jl
mov
popa
pop
mov
xor
scas
call
out
adc
dec
popa
scas
out
aam
xchg
push
mov
mov
push
daa
cmp
stos
xor
xchg
lahf
jle
sub
push
mov
jae
test
rcll
mov
pop
xor
lahf
inc
jb
das
xor
xor
push
movsb
sub
lods
div
fldt
push
xor
cmpsl
daa
jns
gs
add
inc
ret
out
pop
lret
xchg
push
xchg
lret
mov
mov
or
jno
jo
test
adc
pushf
cltd
fs
add
inc
iret
dec
jno
in
and
aaa
je
dec
mov
inc
stos
mov
test
and
cmpsb
jno
fsubrs
mov
pop
xchg
out
in
adc
cltd
inc
mov
rclb
mov
push
jmp
jp
xor
fcomps
pusha
mov
xlat
sti
in
jae
push
lcall
movsl
lea
adc
jg
mov
fistpl
fwait
push
and
fiaddl
push
push
jecxz
pusha
in
jo
test
jo
cmp
cmpsb
mov
mov
inc
mov
dec
gs
pop
pop
adc
rorb
dec
fs
push
fimull
fnstsw
data16
mov
adc
out
jg
addr16
add
and
add
popf
sahf
push
aaa
mov
repnz
and
xchg
pop
xlat
push
pop
jno
add
ficomps
lds
or
addr16
lret
div
cmp
rolb
jecxz
sub
or
cs
in
mov
js
imul
test
push
pop
add
repz
sbb
pop
movb
pop
call
es
int
mov
xor
pop
mov
mov
mov
mov
addb
lret
inc
insl
mov
push
es
adc
das
fstl
dec
xchg
pop
int3
pop
addr16
sbb
sub
addl
mov
push
cs
cmp
mov
jmp
mov
inc
movsl
ret
lcall
into
xor
dec
dec
add
sbb
das
or
cmc
xor
xchg
sub
or
into
ror
orb
dec
ljmp
sbb
popf
pop
aad
cmpsl
lahf
push
js
xchg
add
test
or
loopne
add
mov
aad
adc
sub
sub
repnz
jb
cwtl
aas
mov
in
cmp
lds
push
jno
aas
mov
cmp
stc
test
jb
testl
adc
sbb
sub
cmpsb
dec
mov
xchg
pop
adc
outsl
cmpsb
fisttpll
leave
andnps
jge
pusha
fisubrl
jle
stc
pop
aam
clc
das
test
sub
dec
pop
hlt
mov
push
lods
loope
cmpsl
test
test
xchg
testb
dec
mov
in
mov
push
jmp
jo
test
or
cmp
dec
mov
in
sbb
jbe
ds
xor
popf
lcall
xor
and
mov
insb
pop
rcr
sbb
cmp
push
clc
int
shr
adc
add
into
fstl
rol
adc
dec
xchg
inc
int
rcrl
cli
jne
add
std
or
jbe
std
inc
push
shlb
not
test
stos
cmp
xchg
cmpsb
arpl
into
aad
jmp
in
pusha
sbb
sarb
ljmp
mov
pop
popa
fstps
mov
cmc
cmp
dec
aaa
add
es
pop
jne
dec
sub
rolb
in
mov
dec
popf
mov
outsb
loope
xor
sbb
fadds
out
add
outsl
pop
es
lahf
into
lahf
cmpsb
scas
insl
jno
repz
out
push
or
mov
or
hlt
xor
test
sub
or
cmpsl
dec
js
frstor
xor
ret
sbb
pushl
adc
scas
pop
mov
mov
mov
xchg
clc
and
jb
jo
cmp
aad
cmp
mov
popf
frstor
in
jecxz
sub
stos
xor
ss
xor
push
pop
cmc
cmp
lret
mov
mov
mov
push
sub
test
xor
cmp
nop
xchg
lock
leave
in
dec
aad
shrw
lods
push
mov
sub
test
scas
pop
adcb
or
jbe
rorl
std
sub
pop
jecxz
in
inc
mov
xlat
scas
or
iret
jle
rolb
outsl
fisttpll
and
push
fs
aam
fistpl
jbe
pop
xchg
lret
dec
fnsave
aas
ljmp
in
add
fadds
push
mov
xchg
loopne
xor
push
add
xchg
mov
xchg
icebp
sub
xchg
xchg
mov
repnz
inc
stos
xchg
test
dec
push
xor
repz
push
lds
sbb
clc
rdtsc
in
sub
imul
sbb
jae
idivl
int
jmp
mov
je
or
mov
sbb
mov
int3
and
and
jnp
pop
mov
jb
dec
sbb
mov
inc
lea
loopne
mov
icebp
xlat
les
sub
push
mov
movsb
mov
sbb
daa
pop
xor
arpl
lcall
fnsave
sub
in
mov
dec
popa
adc
and
mov
xchg
scas
xchg
data16
ss
push
clc
xchg
ret
arpl
insb
inc
pop
lahf
push
nop
pushw
out
sub
lods
into
adc
pop
ret
add
cltd
test
shrl
je
shrb
scas
push
xor
mov
cmp
mov
inc
movsb
push
cmc
cmp
dec
mov
data16
fbstp
int3
fdivl
sub
cmp
ljmp
fisubrs
leave
mov
std
loopne
stc
mov
inc
and
mov
in
jmp
sub
loope
in
inc
inc
stos
data16
jnp
add
test
stc
and
rorb
jp
xor
leave
seta
push
fdivr
out
jmp
mov
inc
xor
int
scas
gs
test
xorb
xor
cmp
cmp
imul
sub
fistl
cmp
mov
ud0
cmp
inc
adc
xor
mov
mov
in
jo
loopne
add
in
jge
mov
test
jecxz
or
hlt
mov
xor
inc
pop
popa
cs
faddl
jp
xchg
or
dec
loop
jno
dec
sahf
jbe
lcall
jae
push
adc
jmp
push
incb
call
lcall
and
adc
xchg
dec
jno
mov
sysret
and
xchg
push
cmpsb
cmpsb
in
and
cmp
addl
lret
gs
test
dec
inc
fimuls
xor
dec
scas
cld
add
jl
xlat
jmp
shll
mov
cwtl
push
and
lods
pop
inc
movsb
bound
imul
ds
call
mov
hlt
scas
stc
xor
xor
mov
add
xor
mov
daa
mov
add
xchg
mov
shl
pusha
ret
inc
cmp
imull
dec
sahf
shrb
cmpsl
lock
pop
add
into
repnz
pop
lods
push
xchg
jl
sub
imulb
mov
ds
fisttpll
pop
add
call
repnz
cmp
cmpps
aas
rorl
push
and
inc
outsb
and
xchg
and
pop
pop
sub
cmpsl
lods
stos
ror
dec
push
int3
pop
cli
cmc
cs
pop
icebp
mov
fs
mov
pushf
or
fwait
fwait
enter
lcall
jo
jnp
ljmp
xor
repz
repz
mov
push
enter
cld
or
add
imul
mov
jle
xchg
flds
incb
sti
clc
jb
and
or
stos
or
test
jge
das
cmpsl
fs
sub
cmp
ret
or
movsl
xchg
enter
cwtl
xchg
sub
xchg
push
push
fdivrl
mov
sbb
lock
lret
in
sbb
mov
pop
mov
xchg
xchg
test
inc
mov
push
popa
popf
dec
fstpl
adc
push
jo
scas
and
ficoml
daa
and
loope
add
mov
sahf
das
mov
inc
lret
scas
fsts
pop
jno
leave
in
dec
adc
pop
loop
mov
pop
call
fcmovu
pop
test
cli
cmpsl
aad
jle
jns
push
pop
pop
inc
push
into
jne
enter
mov
lods
xchg
jns
testb
xchg
mov
lock
bound
push
fstpl
push
dec
pop
pop
or
ror
push
mov
push
movsb
dec
ss
inc
loope
mov
mov
int3
in
test
gs
dec
or
push
dec
lods
mov
arpl
adc
test
rolb
data16
repz
dec
add
lret
cli
jle
test
fcmovnb
mov
shl
mov
pop
repz
daa
cmp
int
pop
rorl
mov
add
pop
fidivs
xchg
cmpsl
push
fidivrl
and
icebp
xchg
insl
lret
negb
movsl
mov
bound
fadds
sub
mov
mov
into
pop
mov
inc
pop
imul
cmp
cld
stos
out
mov
orb
push
cmp
movsb
enter
adc
lds
cmp
imul
mov
cmp
mov
fstp
aaa
call
lea
fcoml
mov
and
enter
lds
test
sub
mov
adc
sbb
sahf
dec
jno
dec
movsb
mov
jo
xchg
aad
inc
mov
adc
aaa
add
mov
and
jbe
jmp
sub
jl
xchg
or
push
popf
xorb
pop
loope
leave
cmp
add
fnstenv
fistl
sti
jno
xor
lret
and
mov
ret
mov
and
pop
adc
ret
rolb
mov
dec
mov
pop
mov
insl
and
loopne
icebp
jecxz
shl
mov
ds
loopne
push
jno
pop
fsubrl
jns
jno
xchg
pushf
ret
nop
mov
sbb
or
push
aad
rcl
jno
mov
movsl
fisubrl
push
xchg
push
push
push
cs
pop
xlat
jle
mov
movsb
scas
jnp
or
out
loopne
add
sbb
and
mov
iret
imull
jmp
ss
rorl
adc
cmpsl
xor
and
js
lock
movsb
test
push
in
or
pop
ret
adc
mov
sub
sahf
ljmp
or
ret
in
es
xchg
dec
gs
dec
cmp
pusha
mov
jnp
mov
leave
popf
ret
mov
mov
jp
je
push
movsb
ret
mov
mov
sbb
ds
rclb
inc
or
ljmp
jbe
iret
jecxz
jl
addr16
cmp
sbb
jb
mov
addl
lea
outsl
jne
pushf
mov
lock
sub
enter
cmp
mov
jge
lcall
rclb
pop
inc
outsl
je
sbb
cmp
rcrb
mov
insl
adc
add
loope
fucom
subl
cmpsb
xchg
and
or
dec
mov
cli
jne
aad
repz
popw
inc
loopne
mov
out
hlt
movsb
js
adc
std
mov
dec
jmp
push
stc
int3
or
clc
fiadds
int3
fcmovnbe
insl
aad
enter
test
push
jnp
adc
or
lock
loop
fbstp
call
push
les
imull
in
pop
mov
sbb
adc
push
mov
dec
cmp
sbbb
cmp
inc
or
cmp
out
outsl
xchg
xchg
mov
inc
inc
sub
pop
add
mov
outsl
jp
add
pop
mov
pop
adc
cmpsl
xlat
fmuls
iret
ficompl
addr16
mov
cmpsl
jl
cmp
pop
jl
cmpb
adc
inc
rcll
xchg
popa
iret
lods
scas
pop
jge
loopne
add
mov
and
xchg
jb
or
out
in
inc
scas
pushf
xchg
icebp
xor
mov
adc
jns
cmp
mov
es
fcmovu
arpl
jae
stos
jae
mov
imul
aaa
rcrb
jo
scas
jp
mov
pop
inc
or
movsb
cmp
xchg
mov
in
paddusw
mov
and
out
sti
sub
xchg
flds
sbb
sub
adc
sahf
pop
sbb
and
add
subb
fdivr
cwtl
add
sahf
js
loope
cmp
pop
add
lods
addb
mov
pop
sahf
add
inc
inc
mov
mov
sub
adc
xchg
sbb
mov
scas
push
or
stos
pop
scas
stos
pop
ljmp
push
xor
test
xor
bound
in
pop
xchg
std
cmp
shrb
out
and
sbb
out
and
sub
cltd
cs
stos
jne
push
xor
fistpl
and
mov
and
call
xor
lahf
aaa
jg
sbb
aam
fwait
add
sbb
xor
xor
loopne
fistpll
ljmp
push
xor
lret
inc
push
inc
fdivrs
xor
repnz
movsb
cli
daa
xchg
outsl
jge
push
sub
sub
lods
ret
movl
je
pushf
fisubrl
mov
fdivrs
arpl
loopne
stos
xchg
cmp
lock
xlat
pushf
enter
int
or
add
mov
lret
jmp
add
aad
sub
add
test
pushf
xor
mov
sbb
sbb
cld
pop
repz
fdivl
ror
jo
push
loop
xor
inc
insl
test
push
xchg
icebp
mov
movntq
out
push
ret
and
inc
inc
push
je
cli
fadds
adc
pop
test
movsb
lcall
fucomp
int3
mov
sub
add
fmul
push
dec
sub
icebp
push
pop
aam
js
jp
push
mov
jmp
ja
cmpsl
inc
lds
add
mov
nop
dec
mov
les
int3
loop
xchg
add
addr16
cltd
push
or
stos
das
and
xor
lret
pusha
mov
add
in
mov
hlt
or
int3
adc
aam
fcoml
jecxz
xchg
mov
mov
clc
cmc
or
repz
mov
pop
add
mov
or
xor
cltd
jmp
jmp
or
mov
subl
cltd
inc
scas
push
lock
sbb
or
mov
push
cmp
add
jp
adc
hlt
cmp
iret
into
inc
and
jecxz
aaa
adc
imul
arpl
test
shl
test
stc
popa
pop
xor
push
inc
xchg
xchg
fimull
xor
lahf
arpl
rolb
or
jb
loop
xorb
ljmp
jge
and
push
sti
xlat
test
hlt
imul
sub
popa
inc
shlb
adc
lahf
push
and
push
mov
dec
sub
jb
and
push
pushf
fists
out
mov
add
shl
or
mov
test
into
scas
out
scas
xchg
sub
movsb
sarl
divl
pop
xchg
inc
adc
cs
jecxz
pop
cmp
pop
mov
repnz
inc
cmp
cltd
sbb
and
pop
stos
dec
mov
mov
in
gs
mov
lock
and
fs
fsubl
int
inc
lods
imul
push
rclb
js
arpl
jp
add
and
mov
pop
dec
cltd
subb
sub
dec
lret
pop
sarb
push
cmpsl
clc
xchg
mov
mov
test
mov
and
mov
mov
bound
ret
pop
mulb
push
sbb
push
stos
inc
fwait
out
and
jno
pop
jecxz
mov
cmpsb
add
rcrb
daa
aas
xor
push
cwtl
inc
shrl
pop
jo
push
inc
adcb
mov
sbb
int
push
ficomps
cmc
mov
cs
popf
rcll
xchg
sbb
fs
enter
test
adc
or
iret
fwait
mov
ficoms
lds
into
jne
push
push
cli
subl
mov
in
cmovs
adc
ja
lock
call
inc
jne
loope
xchg
mov
cwtl
rcrb
mov
lds
push
xchg
cmp
shlb
xor
leave
ss
add
loopne
xor
lea
adc
lock
je
xor
lahf
dec
inc
mov
stos
ljmp
mov
or
mul
adc
mov
rcrl
adc
or
cmp
fsubrs
hlt
loop
je
lcall
mov
jb
cli
fcmovu
push
jnp
dec
sub
push
loopne
subl
cmp
add
xor
in
seta
xor
add
out
jnp
ret
inc
push
insb
add
loop
sbb
fadd
lods
lock
jns
cmp
or
rorb
call
xor
stos
out
shlb
add
lret
popf
mov
insl
rcr
and
ds
mul
subb
sub
shlb
inc
das
lock
xor
jae
mov
mov
pop
shlb
pushf
scas
nop
imul
incl
test
sbb
cmp
adc
imul
ljmp
pop
dec
sarb
test
xor
scas
jo
sub
or
adc
loop
outsb
pop
xchg
out
div
push
das
sbb
in
jmp
and
dec
mov
aad
pusha
cmp
inc
cld
scas
pop
and
jecxz
pushf
inc
lock
bnd
cli
shlb
or
aam
out
test
vpmovmskb
call
inc
jne
test
stc
mov
stc
mov
push
insb
stos
shlb
or
mov
aaa
mov
mov
stos
xchg
xchg
dec
in
jecxz
nop
pop
aam
dec
out
adc
inc
loopne
es
imul
nop
out
mov
lea
sbb
in
xor
mov
inc
cmp
inc
xchg
inc
mov
mov
pushl
pop
push
mov
ja
movsb
adc
and
and
add
in
mov
in
rcll
mov
andb
gs
jo
add
cltd
jp
scas
mov
adc
and
mov
fstps
inc
mov
insl
add
sbb
cs
jae
lds
lods
xor
push
int3
daa
adc
mov
adc
pop
pop
mov
sahf
mov
mov
sub
lock
cmp
mov
mov
hlt
mov
cmp
dec
push
jmp
inc
pop
daa
repnz
scas
dec
or
loope
stos
in
ficompl
loope
ja
push
jmp
notl
mov
adc
dec
and
cli
enter
sbb
and
and
bound
pop
in
out
inc
scas
xchg
add
ja
mov
push
mov
imulb
movsb
pusha
sub
sbb
and
and
jno
enter
push
lahf
inc
pop
in
decl
jmp
stc
inc
add
fsts
push
subl
cwtl
pop
paddd
jbe
dec
pop
jne
popf
pusha
sarl
lahf
jmp
mov
stos
pop
aam
xor
sub
lcall
lods
mov
cmp
or
sarl
push
mov
lods
lahf
cmpsl
sarb
cmp
and
xchg
pop
pusha
pushf
mov
sbb
xor
cs
insl
int3
xchg
inc
xchg
mov
and
cli
add
xchg
mov
sub
or
shlb
mov
cs
xchg
push
pop
enter
mov
jmp
mov
pop
push
jno
movl
cmc
rcrl
cmpsb
inc
jp
shlb
mov
push
mov
adc
push
push
nopl
pop
push
rcl
push
paddq
fcmovne
cmpsb
stos
mov
pusha
mov
clc
sub
aas
repz
fisubl
inc
jne
cltd
mov
and
daa
mov
adc
inc
push
lods
aam
adc
cld
fidivs
add
dec
mov
xor
adc
and
cmpsl
shrb
xor
fwait
rcl
mov
lods
rolb
in
inc
adc
cmpsl
add
lcall
add
shl
je
mov
sub
cmpsl
pop
and
rcrb
inc
popf
add
mov
lret
insl
loop
jecxz
mov
cmpsb
test
mov
call
icebp
cmp
inc
mov
xchg
enter
sbb
sbb
movsb
xor
xlat
mov
bound
add
sbb
and
xor
push
cmp
fs
js
mov
sbb
ja
or
mov
fstp
cmp
push
dec
sub
push
inc
inc
fsubs
adc
xor
sbb
shrb
cmp
in
xchg
imul
pop
lods
jecxz
add
xor
negb
inc
jmp
icebp
cmp
lds
and
mov
sti
cmp
xchg
sbb
aad
fdivrp
in
jmp
mov
mov
stos
popa
cmp
and
pop
push
loope
push
stos
outsb
push
adc
fwait
add
daa
sub
call
xor
mov
es
stos
scas
cmpsb
lods
leave
lret
pop
inc
mov
jne
icebp
mov
xchg
inc
nop
push
sub
xchg
in
lahf
fnsave
ds
lret
xor
mov
xchg
mov
lret
js
jnp
mov
repnz
dec
sbb
insb
movsb
sbb
pop
shl
arpl
pop
sub
mov
ds
and
popf
cwtl
in
scas
mov
push
clc
or
dec
push
inc
push
sbbb
fbld
in
xor
rcll
jbe
pusha
xorb
in
orb
call
xchg
test
push
bound
out
sub
jl
and
lret
sbb
das
rolb
sub
mov
out
mov
ret
push
sahf
inc
mov
pushf
fmull
loope
adc
pop
pop
push
add
roll
sbb
inc
xchg
outsb
mov
sbb
dec
mov
push
cmp
les
mov
ret
add
fsub
and
adc
adc
icebp
rcr
push
xchg
mov
repz
stc
mov
dec
mov
pop
cwtl
cld
adc
xchg
push
cwtl
les
sub
or
aaa
je
or
fisubl
xor
adc
pop
cltd
push
out
dec
dec
xchg
or
aas
lods
test
sub
sbb
push
lds
and
adc
jg
sub
push
lds
outsb
dec
stc
loop
xchg
test
pop
test
inc
fucomip
addr16
xchg
hlt
int
jne
or
icebp
push
fidivl
xor
xor
pop
loop
cmc
jge
push
ror
sbb
cmc
or
dec
xchg
scas
add
pop
ja
lahf
pop
mov
aam
push
dec
xlat
jl
inc
sub
inc
mov
jge
cmpsb
or
mov
xor
push
std
mov
mov
lcall
out
push
int
inc
push
ret
sub
dec
mov
jmp
mov
pop
les
fnstsw
movsl
push
dec
nop
fmuls
inc
cld
sti
cmp
push
aad
cs
sub
sub
cmpl
xchg
mov
ret
cmp
adc
adc
cmp
out
jge
add
jne
lret
ss
xlat
scas
int
mov
es
pop
push
insl
dec
dec
adc
mov
loop
cmpsb
leave
in
push
mov
cmp
mov
mov
pop
or
mov
cmpsb
dec
iret
mov
out
cwtl
test
je
arpl
pop
rcrb
or
adc
mov
ss
mov
sbb
sbb
orl
jae
and
outsb
mov
inc
lock
nop
sub
jle
cld
mov
pop
mov
or
ja
les
test
xchg
roll
test
loopne
dec
push
mov
out
in
aaa
xchg
add
pmaxub
rolb
push
loopne
mov
xlat
test
jne
enter
les
mov
push
and
lods
ds
orb
pop
adc
add
lahf
into
test
lds
adc
jl
js
lock
and
lret
divb
push
fnstenv
mov
je
push
cmpsb
loop
mov
sub
dec
shlb
adc
sbb
lret
test
popf
inc
rcr
movsb
push
adc
jge
sbb
cld
jno
mull
pop
imul
xchg
ret
and
cltd
popa
and
mov
pop
andb
hlt
push
daa
icebp
add
cs
jno
lods
push
push
mov
outsb
cmp
cmpsl
mov
pop
pop
or
cltd
xor
pop
ljmp
pop
and
mov
xor
xchg
mov
and
cs
adc
mov
aas
mov
and
add
movsb
adc
addb
mov
mov
adc
in
sbb
mov
mov
lret
push
insl
cld
lods
femms
dec
pop
xor
push
adc
lods
push
mov
mov
movl
xor
dec
pop
mov
sub
inc
cmpsl
add
icebp
dec
cmc
not
jne
inc
sub
push
inc
aaa
sub
dec
stos
push
adc
jae
xchg
bound
std
sbb
lods
fsubrl
pop
rclb
pop
lods
into
jp
sub
push
dec
pop
movsb
push
fucom
pop
push
cmp
cmp
addr16
addb
es
ret
les
movsb
arpl
popf
inc
sub
popa
inc
fadd
add
xor
lea
pop
lcall
fdivr
in
sbb
mov
loope
jl
pusha
mov
fsubrs
rcrl
ljmp
dec
movq
lahf
cmp
jae
or
push
test
add
cmp
stc
aad
jge
xor
mov
add
jbe
jmp
and
jmp
test
cmp
test
adc
add
jbe
jl
or
aaa
push
cmpsl
mov
addr16
les
inc
jns
mov
dec
gs
negl
jne
ret
in
shrb
inc
lods
pop
jp
data16
mov
sbb
clc
and
or
test
test
insl
outsl
push
push
ret
shll
icebp
andl
pop
mov
sbb
int
jns
inc
jae
repz
xchg
decb
out
adc
outsb
xchg
or
mov
add
fcmovnbe
popa
sbb
shrl
sub
scas
xchg
mov
and
or
and
nop
ret
cld
stc
inc
rorl
clts
mov
iret
xchg
dec
data16
sbb
xor
in
cli
jg
scas
test
and
sbb
out
aaa
mov
test
jae
jecxz
arpl
mov
mov
scas
sti
mov
in
or
and
jmp
sarb
dec
gs
imul
and
push
mov
jg
add
test
outsb
scas
push
ffreep
sub
dec
mov
mov
sbbb
rcrl
cmp
or
cmp
push
adc
sub
shl
xlat
cli
aas
sub
sub
dec
fistps
push
mov
aam
jmp
arpl
xchg
push
lods
cmp
ja
movsl
cmp
or
mov
ficoml
inc
push
ret
jecxz
addr16
and
sub
ds
ret
xchg
imul
in
js
aad
ljmp
jnp
in
cmpsl
and
add
pop
sub
mov
scas
mov
shll
int
pop
sub
mov
movsl
sbb
push
pop
rcl
insb
mov
mov
mov
pop
lea
inc
jmp
sub
sub
and
aas
insb
test
dec
rorb
mov
jb
inc
and
dec
jle
pop
gs
mov
push
jne
les
aas
movsl
mov
mov
and
scas
int3
xchg
outsb
jnp
cld
arpl
aaa
movsl
test
loop
popf
push
inc
aaa
lds
arpl
insb
cmpb
sbb
enter
push
dec
loope
pop
divl
jge
sub
push
xor
push
jns
loope
add
add
in
cwtl
mov
imul
test
notl
fsubl
inc
icebp
mov
movsb
mov
out
dec
push
mov
iret
mov
ds
mov
scas
imul
add
int
add
inc
frstor
inc
pop
or
push
lds
inc
add
mov
cmpsl
push
fdivp
fisttps
hlt
ret
pop
pop
mov
jns
push
rcrl
or
sbb
cmp
mov
cmp
inc
cvttps2pi
push
inc
loop
movsb
xor
lret
mov
cmp
sub
push
addr16
xor
push
sub
gs
lret
mov
aas
and
out
mov
jecxz
xor
xchg
push
jge
test
call
mov
bound
dec
and
pop
test
jnp
xor
je
xchg
jae
clc
dec
pushf
pushf
aam
xchg
adc
stc
int3
or
and
xor
cmp
aaa
or
jle
shrl
add
lods
call
test
fdivrp
mov
enter
inc
je
test
and
cmp
jne
xchg
test
mov
and
aaa
inc
call
and
je
loope
fdivl
orl
andl
mov
xchg
mov
mov
fmul
mov
imul
pop
push
fistpl
movsl
push
or
pop
sbbb
lea
pop
or
imul
es
stos
push
pop
sahf
js
test
iret
outsl
push
jle
jo
outsl
data16
mov
or
xor
mov
dec
pop
popa
and
std
lods
adc
or
push
mov
sub
aaa
ja
sbb
pop
movl
jge
push
out
mov
out
xor
out
frstor
fmul
nop
mov
or
add
cs
pop
add
mov
loope
jmp
mov
adc
sbb
mov
insl
pop
sahf
jns
into
push
xchg
cli
hlt
mov
shl
mov
push
adc
xchg
adc
pop
repz
sub
dec
jp
add
or
add
dec
dec
or
sub
jl
push
xchg
daa
cmp
and
repnz
ret
cmp
inc
aam
repnz
enter
lret
inc
lds
mov
jg
cltd
cli
hlt
pop
data16
cmp
push
scas
jl
or
int3
imul
stos
les
pop
cmpsl
in
adc
cli
test
stos
jg
icebp
rcl
fsub
repnz
xchg
add
inc
mov
insb
or
sbb
and
push
and
add
mov
lret
inc
lds
inc
les
in
jae
inc
pop
movsl
xchg
lea
push
jbe
repz
cmp
in
stc
insb
dec
or
or
int
push
adc
test
lcall
hlt
neg
jnp
lahf
dec
das
int
enter
pusha
jmp
lahf
loopne
sbb
pop
mov
repnz
sahf
insb
idivb
inc
pop
cmp
imul
push
mov
mov
lret
aad
push
mov
popa
xor
dec
mov
xchg
push
sahf
test
mov
icebp
ds
add
aaa
bound
mov
mov
add
sbb
pop
cmc
mov
sbb
or
imul
in
in
xchg
aad
push
and
neg
cmp
lods
idiv
xchg
and
or
cmp
push
out
daa
mov
xchg
ficoml
adc
cmp
jne
and
sbb
add
pop
jns
test
xchg
sub
xchg
fwait
test
fildl
aas
adc
xchg
inc
insl
or
pop
in
xchg
out
aaa
flds
sbb
sahf
mov
cmp
in
addr16
test
sub
jne
flds
pop
and
je
aaa
data16
adc
inc
mov
mov
movsb
xor
inc
sahf
fisttpll
enter
xlat
cmp
dec
jbe
das
cltd
clc
pop
mov
xchg
push
ds
sub
push
pop
rcl
js
push
inc
jmp
adc
or
sbb
mov
jp
push
fldl
adc
repnz
xchg
mov
mov
fdivrs
sbb
punpckhwd
aad
and
adc
pushl
or
cmp
loope
adc
add
rcrb
push
outsb
sub
fimuls
sbb
hlt
xor
test
leave
data16
fisttps
stc
not
fdivr
adc
add
add
inc
sarb
stos
mov
lds
add
gs
cmp
rorl
sub
lcall
pop
xchg
push
out
aad
cmp
adc
xchg
in
pop
pop
or
push
les
arpl
out
inc
pusha
jl
inc
push
out
push
or
push
popl
adcl
or
inc
sub
sarb
pop
jg
cmp
inc
fdivrs
ljmp
iret
inc
mov
xor
negb
pop
inc
cwtl
dec
mov
push
sub
repnz
add
or
out
adc
pop
stos
fdivs
or
mov
popa
xor
jecxz
jle
loop
imul
mov
test
lds
std
insl
or
and
xlat
xchg
inc
lds
inc
dec
push
fs
xor
iret
mov
cmp
rol
aad
rclb
and
lock
sub
mov
call
push
ja
mov
xor
sub
cltd
out
mov
mov
cmc
push
std
add
xchg
fs
or
movsb
int
mov
es
cmpsb
cmp
imul
out
testb
dec
jne
lret
sbb
stos
fnstenv
dec
fisubrl
mov
mov
gs
mov
aam
shlb
pusha
test
sbb
mov
scas
dec
inc
je
fwait
sub
loop
stos
or
mov
add
insl
stc
insl
lea
adc
fwait
dec
not
adc
movsl
adc
cmp
mov
adc
insl
lahf
scas
xchg
movsb
ret
and
mov
sub
test
jne
push
and
mov
pusha
jle
xchg
xor
lret
loope
loope
mov
add
mov
cmpsb
dec
mov
adc
dec
xor
sub
fiadds
and
and
fnstsw
add
mov
inc
mov
xor
mov
add
aas
mov
imul
mov
dec
push
xchg
lcall
loopne
mov
sbb
jg
add
fcoml
imul
js
mov
sbb
jle
loopne
cmp
sbb
or
in
aad
repz
iret
jmp
cmp
cmp
outsl
mov
dec
hlt
mov
jge
adc
xor
pusha
sub
popf
mov
xor
fsubl
pop
in
or
inc
jmp
jno
mov
jg
movb
mov
xchg
sub
push
mov
std
xorb
jle
nop
xlat
pop
les
jmp
jns
ds
fs
fmuls
add
cwtl
push
pop
dec
adc
jle
mov
pop
insl
jae
addl
add
es
inc
cmp
mov
push
adc
ss
lods
dec
js
test
shrl
dec
mov
cmpsl
dec
outsb
pop
or
xchg
and
call
mov
cmp
fcomp
test
and
les
and
xlat
ret
jg
decb
mov
xchg
stos
lret
repz
imul
cmp
inc
popa
sbb
jne
fsubrl
or
pop
cmp
push
sub
mov
fldt
push
rcll
cwtl
xchg
and
sbb
popa
adc
inc
jns
or
pop
lea
test
movsb
push
popf
mov
mov
cmp
mov
inc
dec
or
xchg
or
addr16
lods
push
aam
sbb
pop
jl
repz
nop
cli
lock
or
dec
cmpsl
ret
pusha
sbb
and
lods
add
icebp
lret
nop
sbb
stos
mov
inc
lods
add
data16
and
jae
xor
lods
test
mov
iret
and
out
scas
popf
insl
lret
fs
inc
cmp
xor
mov
inc
inc
lods
call
sbb
dec
sahf
xchg
dec
dec
lock
mov
adcl
or
xchg
mov
in
mov
pop
jg
iret
test
sbb
sub
push
jp
test
stos
pop
aam
imul
lods
out
in
xor
xchg
jp
sarl
inc
add
pop
test
jmp
add
out
xchg
lods
pop
xchg
hlt
cld
push
enter
adc
inc
test
imul
pop
sub
fsubr
adc
arpl
mov
sub
and
mov
sbb
lea
and
push
jmp
movsl
jb
pop
addr16
pop
ja
xchg
inc
cmpl
dec
adc
and
arpl
inc
cmp
aad
mov
push
pushf
xchg
icebp
ficoms
dec
nop
xchg
cmp
sbb
ret
in
or
or
shrb
adc
mov
inc
out
js
add
jb
pushf
sub
sbb
fwait
and
jmp
pop
jmp
cmp
enter
jle
and
pushf
fwait
add
sub
mov
lds
cmp
sbb
inc
add
push
mov
jno
xchg
mov
cmpb
cltd
xor
sbb
bound
xchg
xor
jbe
negb
mov
ljmp
ficoml
push
and
ljmp
ljmp
dec
lret
cmp
jne
fdivp
scas
sub
jmp
outsl
stc
mov
iret
adc
xchg
dec
mov
xor
stos
mov
jmp
sbb
dec
pop
pop
inc
not
ss
lret
sub
call
pop
or
call
inc
cmc
popaw
ret
xor
push
lock
add
outsb
loope
fisubrl
scas
xor
xchg
mov
adc
idivl
enter
sbb
bound
insl
push
lods
addr16
repz
adc
dec
pop
repz
aaa
mov
mov
shr
xchg
jne
rclb
mov
sub
movsl
xchg
test
std
popa
sub
mov
test
push
fcmove
and
add
arpl
push
clc
or
mov
jg
filds
ret
repnz
pop
cli
insb
gs
mov
lock
sbbl
cmp
and
xchg
std
cmovs
add
hlt
insb
inc
adc
ss
loope
or
out
jo
es
or
mov
je
sbb
push
jecxz
fs
mov
jb
insl
aas
adc
cmp
inc
outsl
outsl
arpl
cmc
push
out
es
mov
repz
loop
pop
inc
sbb
ss
add
sub
imul
dec
hlt
pop
push
push
jle
in
cmp
fiadds
mov
loop
jl
call
cmc
mov
notb
xchg
push
mov
out
aaa
sub
nop
jae
push
and
mov
ret
loope
sub
mov
push
cmp
and
inc
orl
cmc
arpl
inc
dec
sub
or
mov
int3
repz
std
dec
push
subl
test
addr16
in
fidivrs
xchg
out
fs
pop
pop
aam
arpl
mov
or
lock
dec
lds
and
movl
out
sub
push
pop
mov
stos
lds
loop
or
test
jp
or
fistpl
jge
notl
movsl
popf
lret
divb
jl
dec
in
sbb
int
mov
mov
jmp
and
sbb
int
dec
xor
cmpsl
bnd
adc
lea
in
inc
ljmp
lock
inc
jbe
inc
adc
test
jno
int3
xchg
xchg
mov
add
sahf
hlt
lock
notl
sbb
cmp
les
insl
xor
pop
outsl
lcall
das
insb
cwtl
dec
and
popf
adc
inc
call
jae
lcall
fsubl
stc
sbb
sbb
out
dec
push
imul
insb
and
loopne
add
jge
and
aam
enter
test
push
mov
push
adc
dec
push
repnz
push
dec
pop
mov
push
fidivrs
imul
imul
hlt
stc
outsl
int
lods
pop
out
call
mov
lods
push
adc
mov
cmc
sub
jg
dec
adc
int
ss
jle
cli
dec
out
aad
sub
inc
and
lds
roll
sub
lods
cltd
or
lods
sti
push
sub
push
outsb
mul
sub
jno
push
push
loop
imul
xlat
movsl
std
cltd
dec
push
push
adc
dec
push
fnstcw
sbb
xorb
mov
addr16
popf
jbe
call
jnp
out
sub
imulb
pop
xchg
lock
mov
into
movsl
rclb
test
sub
test
rcr
xor
push
or
inc
out
int
mov
lcall
insb
jl
mov
inc
in
adcl
outsl
pop
fisubl
or
cltd
xor
pop
jmp
and
sbb
inc
pop
and
or
sti
mov
je
add
pop
mov
cmp
sarl
lds
pop
mov
outsl
pop
sbb
rcl
and
push
pop
out
sahf
test
das
push
clc
pop
pop
add
fs
loopne
mov
ja
lcall
push
dec
mov
call
test
sub
andl
call
ja
sbb
loopne
shll
sti
mov
pop
adc
call
insl
sbb
scas
sti
push
icebp
cmpxchg
int
ljmp
adc
or
adc
and
ss
popf
cmp
mov
push
jp
ds
push
inc
push
test
xchg
rolb
fmul
popf
xor
dec
sub
xlat
mov
lods
imul
idiv
xchg
pop
jp
cmp
loop,pt
sbb
mov
xorb
lods
or
fs
dec
xchg
sub
or
or
mov
inc
stos
adc
call
adc
clc
int3
les
sub
nop
mull
lods
mov
in
inc
dec
mov
xchg
jo
mov
pop
push
inc
jno
mov
or
mov
int3
push
loope
add
rorb
xchg
pushf
xor
mul
es
mov
enter
or
or
roll
inc
jmp
cli
cs
and
xchg
cmc
sarl
push
and
push
addb
lods
popa
int3
ja
cmc
dec
push
jne
xor
and
jnp
arpl
cmp
test
inc
sbb
lock
adc
xor
test
fsubr
or
pushf
cmpsb
or
cmp
in
cmp
popa
decb
inc
outsl
dec
jo
add
fisttps
shll
enter
inc
pop
nop
outsl
jo
leave
sub
or
aad
cmp
pop
sbb
pushf
jo
insb
in
push
lahf
repnz
cmpsb
nop
xchg
pusha
inc
add
and
sbb
push
mov
out
jl
xchg
aad
test
lods
mov
push
jb
add
addr16
pop
or
js
mov
imul
inc
or
hlt
xchg
pushf
popa
mov
movsl
xor
mov
xchg
adc
int
mov
pop
push
mov
adc
cmpsb
mov
sarl
cwtl
inc
popa
js
je
xchg
add
xor
sbb
inc
data16
inc
jo
or
jno
xchg
das
inc
xor
cmpsl
fcoms
repz
sbb
hlt
sub
das
or
cmp
push
pop
and
shll
xchg
push
xor
sub
popf
adc
int
jp
push
addr16
pop
and
test
lods
inc
cwtl
movsb
jg
mov
lea
pop
sub
aad
mov
jbe
and
pop
push
mov
adc
pop
jg
cmc
cmp
dec
or
arpl
cmp
and
xchg
pop
aad
sbb
mov
or
lock
xor
popa
xchg
lret
es
jmp
cltd
ljmp
test
out
arpl
add
pop
xchg
cmpsb
call
mov
xchg
dec
or
xor
jo
inc
cs
aaa
jl
loop
sbb
cwtl
mov
repnz
sbbl
jg
dec
lods
insl
lcall
cmp
mov
mov
leave
rolb
inc
ds
test
test
cmc
bound
cmp
cmc
dec
lock
mov
mov
sbb
pop
sub
scas
shll
mov
or
pop
cltd
or
leave
cmpsl
movsb
or
aad
mov
lock
cmc
xchg
icebp
fmulp
movsl
stos
or
nop
dec
out
in
insl
in
push
ljmp
or
loope
mov
jbe
daa
sbb
or
aam
cmp
dec
mov
xchg
fwait
push
into
push
xor
test
jbe
jge
jecxz
cmp
cmpsb
aad
push
jno
sbb
jb
dec
dec
outsb
loope
pop
add
adc
ss
mov
stos
stos
mov
push
aad
pop
or
or
xor
add
aam
outsl
in
int3
inc
mov
inc
xor
push
addr16
je
ret
or
cwtl
dec
stos
loope
cmp
ds
popf
shrb
repnz
pop
xor
xchg
movd
shrl
pusha
jne
mov
ss
mov
jp
dec
ja
ss
jge
shll
aas
xor
test
add
jmp
cmc
mov
jle
fs
add
xor
clc
mov
movsl
inc
ds
cli
in
inc
push
cmpsl
scas
cmp
dec
dec
xchg
sbb
jl
into
push
xchg
mov
outsl
ja
es
lods
adc
push
leave
es
ljmp
cmpsb
rcll
and
add
jmp
xor
pop
or
push
sbb
in
nop
leave
push
add
push
imul
pop
ljmp
nop
push
incl
mov
jge
xacquire
mov
xor
test
jg
jg
daa
and
mov
jns
adc
outsb
ss
mov
mov
rcrl
in
ret
mul
cld
push
repz
lds
sbb
jnp
mov
ret
dec
mov
test
push
xchg
and
mov
xor
lods
dec
adc
pop
divb
jno
pop
pop
fldz
mov
lahf
dec
scas
mov
jbe
addb
xchg
leave
cmc
mov
xchg
dec
lahf
imul
cmpsb
push
xchg
push
push
movsb
sub
jle
out
xchg
outsb
add
test
ss
adc
adc
enter
test
scas
out
add
es
sbb
or
xor
adc
shrl
es
and
fyl2x
sbb
xchg
ljmp
inc
aaa
xchg
std
jle
ror
rorl
pop
push
loop
fidivs
aas
test
insb
int
adcb
push
mov
out
sbb
cmc
xor
xor
andb
pop
xchg
jnp
pop
outsl
jno
leave
jb
pop
cwtl
in
int
mov
loope
enter
adc
test
sub
loop
adc
jo
pop
jne
ds
sub
mov
lds
cld
in
lods
pushf
pop
inc
movsb
add
decb
sub
jno
stos
cld
and
and
pop
test
cmpxchg
mov
dec
rcrb
shll
add
sbb
lea
mov
add
xchg
xchg
dec
mov
arpl
xor
lahf
addr16
and
std
push
lock
lds
leave
dec
mov
cltd
into
dec
inc
add
dec
mov
mov
xorb
jbe
cmpsl
jno
nop
pop
pusha
sti
dec
sbb
xor
imul
mov
movsb
xchg
clc
pop
nop
in
faddp
xor
push
or
clc
xchg
pop
sbb
das
mov
mov
sbb
aad
fidivrl
ja
mov
mov
adcb
outsl
mov
inc
lret
lahf
fldt
iret
add
jl
mov
lea
test
xor
lea
fs
add
inc
dec
or
test
cli
fists
out
or
push
das
fisubrs
mov
xor
loopne
cmpsl
or
lds
mov
insl
fdivr
dec
jmp
enter
mov
scas
cmp
or
add
dec
xor
sub
mov
pop
movsl
in
sbb
jmp
pop
jle
jle
jl
xlat
pop
mov
jb
jp
lds
mov
insb
inc
dec
and
pop
not
cmp
fistl
push
push
inc
add
xchg
dec
inc
or
jge
and
inc
jnp
int
jl
mov
xor
mov
faddp
and
sbb
inc
inc
aas
fucomp
xchg
sldt
dec
jno
sub
in
rorl
xchg
addb
jno
xor
pushf
inc
out
inc
inc
sub
inc
cmp
fwait
sub
jbe
adc
ljmp
push
push
mov
test
pop
or
mov
push
or
jno
out
movsb
int3
mov
icebp
test
icebp
fstpl
pushf
lods
test
add
pop
pop
mov
jno
xchg
ja
push
aam
cltd
insl
into
test
mov
sbb
xlat
xchg
ret
xor
iret
jl
lds
rclb
in
popa
cli
jmp
jns
insb
add
int
stos
ss
int3
movsl
xor
jl
jbe
jge
fsubrs
pop
inc
mov
inc
jmp
testl
adc
jge
and
jmp
daa
sub
scas
data16
and
adc
popf
add
jl
pop
stos
mov
out
lock
cmp
xchg
movsb
jmp
inc
xchg
inc
lods
fildl
cmp
dec
call
and
and
cmp
xor
cmp
sbb
push
daa
rcrl
xchg
in
in
call
out
lods
sbb
gs
add
sbb
and
loope
sub
shrl
cmp
xchg
es
xchg
std
or
mov
stc
loop
scas
lret
xchg
insl
shll
adc
or
mov
pop
mov
stc
mov
aad
ret
lahf
cmp
aam
mov
or
daa
pop
mov
lret
jl
ss
into
sbb
ss
or
in
sahf
mov
xor
push
in
sub
mov
popa
inc
lret
jp
js
mov
ljmp
shll
dec
dec
dec
inc
test
mov
xchg
aaa
mov
in
cmp
test
push
lods
mov
das
mov
imul
out
arpl
pop
mov
inc
inc
divl
pop
pop
push
and
adc
mov
jbe
pop
xor
out
mov
pusha
dec
jge
inc
inc
fimull
add
add
out
fistl
pop
out
les
in
out
mov
cmp
push
xchg
lock
stos
pushf
push
push
fst
xchg
popa
inc
xchg
in
xchg
movsb
xor
int3
and
xchg
jmp
sarl
es
in
mov
cs
jae
xchg
clc
in
jae
mov
aas
popf
lods
pop
mov
ret
mov
ficoml
clc
mov
scas
dec
cmc
fisubs
pop
scas
ja
cmp
mov
push
sarb
pop
xchg
dec
imul
inc
mov
cs
jle
das
dec
and
and
out
pop
sarb
mov
jmp
mov
pop
jne
mov
test
stos
mov
and
ds
cmp
pushf
loope
pushf
mov
lock
call
mov
pop
out
xchg
int
call
jns
rcll
mov
imul
or
cmp
xor
sub
ret
sbb
sbb
adc
or
dec
sbb
pop
fildl
jbe
and
adc
and
jo
test
sub
pop
cmp
lods
bound
lret
lods
cltd
pop
or
dec
cltd
cmp
mov
mov
outsb
add
dec
ljmp
and
add
outsl
paddsb
mov
push
incb
sub
cmp
and
sbb
add
lcall
fwait
in
dec
xchg
xor
inc
icebp
add
push
fwait
pusha
pop
dec
xchg
scas
lret
jns
dec
adc
pop
push
cltd
ljmp
aam
popf
bound
popa
fildll
add
std
jg
les
or
inc
xchg
jo
mov
dec
insb
idiv
shlb
jbe
mov
adc
mov
test
je
test
pusha
xchg
or
push
pop
pop
pop
push
sbb
cmpsb
pop
pop
pop
rolb
and
pop
adc
or
push
cmpsb
jl
push
sahf
dec
pop
mov
sahf
pop
add
mov
fs
sbb
lock
ficomps
cli
jo
add
cmp
and
in
in
or
lret
jne
lret
in
out
pop
jno
clc
jl
pop
pop
sar
add
jbe
repnz
cmpsb
and
mov
jbe
xor
rorb
mov
ret
mov
inc
mov
jg
iret
jle
push
stc
mov
cmpsb
cmp
pop
jge
inc
sub
subb
jmp
mov
pop
xor
es
and
xchg
iret
sub
adc
pop
imul
mov
pop
adc
push
dec
nop
add
mov
test
das
mov
dec
mov
loop
mov
insb
pop
or
jg
lret
xchg
dec
lret
xchg
outsl
pop
les
or
aas
dec
in
mov
cmpsb
sarb
inc
xchg
fidivl
cmp
xor
mov
push
xor
test
jnp
mov
inc
cs
push
mov
aam
pop
movsl
pusha
push
adc
xchg
mov
pop
inc
sub
jl
sarl
sub
sbb
xor
hlt
out
jge
push
js
sbb
out
out
shl
or
in
clc
movsl
cs
xor
psraw
stos
jecxz
test
nop
cli
gs
mov
adc
aaa
adc
and
lahf
adc
clc
mov
fimuls
mov
js
fsubrs
or
mov
das
in
pop
fsub
sarb
test
lea
aam
mov
adc
je
inc
lcall
sbb
add
adc
je
mov
push
mov
dec
shll
cwtl
repz
sbb
dec
cmpb
lret
and
or
rcr
cli
mov
cmp
imul
jnp
xor
sti
leave
nop
inc
mov
fldcw
cmp
and
xchg
pop
ret
shrb
fstpt
jno
ds
nop
mov
fcomi
cmc
movsl
scas
int3
test
pop
js
cmpsl
pusha
sbb
add
jg
cmc
xor
add
mov
add
lea
flds
sub
in
rcr
repz
mov
gs
aas
imul
mov
out
or
xlat
or
and
mov
aad
mov
int3
test
push
outsl
push
jge
in
xor
dec
les
inc
mov
gs
sub
into
out
sbb
ljmp
mov
add
push
sbb
adc
fnstsw
inc
insl
push
ret
dec
das
ss
js
cwtl
and
lds
and
test
sti
mov
push
data16
adcl
je
out
outsl
jle
xchg
in
jl
out
int
dec
sub
test
and
xchg
mov
fimuls
or
sarb
js
rclb
in
pop
and
cmp
add
or
inc
jnp
mov
mov
lret
inc
pushf
rcl
loopne
insl
xor
mov
hlt
mov
int
pop
sub
imul
mov
stos
jns
inc
into
shlb
into
push
push
xlat
jg
push
adc
jge
inc
mov
dec
daa
cmp
cld
add
js
sbbl
cmp
pop
js
stc
adc
sbb
push
adc
daa
pop
sbb
loop
fxam
jno
pop
ljmp
in
adc
push
xchg
pop
mov
cmpsb
add
loop
nop
incb
movsl
mov
lahf
ret
test
pop
jnp
clc
mov
inc
fdivrs
pop
xor
adc
mov
cmpsl
popa
and
leave
fnstcw
jnp
push
dec
fs
imull
sbb
lahf
sti
add
or
cli
inc
dec
adc
or
push
xor
inc
data16
leave
add
cmp
adc
jb
aaa
mov
dec
insl
repz
adc
inc
mov
push
lods
jae
out
loop
push
cmp
mov
movl
adc
lret
push
out
fisttpl
inc
push
adc
xor
pop
fisubs
stos
sub
sbb
sub
xchg
out
gs
test
mov
shrl
cwtl
add
rcrl
iret
gs
pushf
icebp
out
test
xchg
or
or
mov
lahf
mov
in
stc
sar
mov
lods
bound
dec
pushf
sti
adc
xchg
fldenv
ja
sbb
inc
mov
xchg
sbb
adc
adc
andl
pushf
push
xchg
mov
and
in
pop
loopne
pusha
mov
add
mov
mov
ds
xor
jo
or
aad
bound
pop
push
cwtd
call
ret
jg
xor
xor
cli
or
ja
mov
hlt
xchg
jp
mov
sub
xchg
xor
xchg
and
sbb
or
mov
sub
ds
stos
lods
inc
xchg
pop
push
pop
push
aam
fdivl
jnp
adc
fnstcw
xor
outsb
and
push
and
dec
cwtl
fnsave
pop
icebp
test
pop
cltd
cmp
cmp
test
dec
xchg
adc
cmp
fistl
or
sbb
cmp
jl
sub
sbb
inc
popa
fisttpll
inc
adc
xchg
xor
gs
arpl
add
mov
sub
xor
adc
push
jmp
aas
mov
jmp
push
dec
ds
xchg
mov
cmp
pop
and
push
xlat
xlat
inc
mov
test
push
mov
sub
xchg
add
add
nop
enter
lds
out
add
lret
jl
stos
push
push
push
dec
mov
mov
call
lea
sbb
mov
sub
lds
inc
mov
and
inc
cmc
mov
aad
pop
jnp
ror
test
jmp
jmp
cmpl
fbld
pusha
push
xor
out
ljmp
pop
je
xor
insb
inc
out
jmp
mov
into
jbe
pop
pop
xchg
stc
push
lock
dec
rorb
xchg
mov
ljmp
pusha
stos
data16
or
mov
cmpsl
dec
sti
sbb
shll
jge
or
lcall
xor
fwait
xstore-rng
cmpsl
xchg
xor
mov
aaa
cmp
test
sbb
mov
jmp
outsl
pop
hlt
sbb
inc
scas
add
mov
imul
into
cmpsl
mov
sub
mov
xchg
mov
mov
pop
and
js
cmp
mov
in
lds
imul
sbb
or
xor
dec
pop
mov
iret
push
jge
mov
lret
rcrl
sarl
popf
arpl
pop
out
pop
cltd
cmp
out
pop
inc
xchg
xchg
aad
xchg
fisttpll
xorb
popf
insb
imul
pop
sarl
bound
notb
mov
jae
xchg
mov
cmp
push
pop
and
or
addr16
mov
shr
shlb
mov
mov
daa
inc
mov
test
adc
daa
dec
mov
in
cmpsl
je
movsl
or
pop
xor
xchg
test
pop
aam
and
sbb
nop
jecxz
dec
fstl
into
es
cmp
push
pop
dec
call
or
mov
shr
xchg
mov
sbb
loop
cmp
jecxz
inc
pop
mov
cmc
out
lret
jmp
jmp
jecxz
mov
iret
add
mov
fs
jne
push
add
xor
pop
test
mov
mov
jle
cld
push
sar
inc
mov
inc
testl
repz
aad
and
mov
test
dec
push
insb
xchg
and
arpl
xchg
lds
stos
popa
add
aad
sbbl
pop
cs
subl
jg
ret
cmp
inc
dec
mov
cmp
cmp
out
pusha
or
xor
imul
cmp
cmp
dec
aad
jp
xor
push
xorl
xor
mov
jno
mov
sub
lea
mov
imul
mov
mov
loopne
or
or
sub
pop
inc
or
es
addr16
dec
in
js
mov
mov
cmp
leave
lds
int3
pop
xor
inc
pop
bound
stos
in
cld
pop
adc
jns
stos
pop
inc
out
or
dec
lods
and
push
mov
inc
sarl
inc
ror
test
lahf
jbe
movsl
mov
mov
mov
test
andb
sub
sub
movsb
xchg
into
sub
cmp
mov
les
pop
adc
lcall
sbb
add
pop
lcall
jbe
test
push
xor
shlb
xchg
cltd
fnstcw
mov
cmpsb
and
xchg
repz
adc
lods
pop
or
jg
mov
cwtl
pushf
or
cli
ja
sbb
push
jno
or
pop
inc
test
fcomps
pop
or
enter
or
jno
sti
mov
loope
adc
negb
xchg
into
into
negl
mov
movsl
jl
mov
jo
pusha
pop
jne
sub
test
fstpt
ljmp
and
mov
xchg
jecxz
leave
sbb
mov
cmpsl
xor
cld
test
add
jl
lods
stos
add
repz
push
dec
jne
jl
enter
sbb
test
dec
cmp
cmpsl
rorb
mov
bound
shrl
rorb
pop
sub
mov
and
add
insl
mov
dec
mov
ror
xchg
js
xchg
lock
in
mov
out
adc
jp
xchg
test
or
cmp
xor
fbstp
int
scas
dec
int3
daa
push
sarb
push
outsl
cs
sub
push
mov
je
push
sub
fstpl
rcll
test
push
sbb
and
mov
lcall
cmpsb
sub
or
data16
mov
outsl
cmp
divl
jge
pop
inc
shl
sub
jo
jnp
sub
sbb
xchg
jge
push
cmc
test
mov
pop
cwtl
cltd
fwait
dec
pop
and
repz
mov
adcb
pop
and
push
inc
aaa
dec
addr16
and
jp
js
pop
pop
push
jbe
pop
inc
jecxz
mov
outsl
sbb
adc
sub
fs
mov
mov
cmp
sbb
aam
fistl
cmp
add
nop
mov
xchg
andb
jmp
xlat
stc
outsl
mov
roll
jg
shrb
insb
lods
loopne
out
xchg
fisttpll
inc
mov
lds
push
mov
add
imul
shrb
sbb
sbb
inc
xlat
cmpsb
lock
sti
inc
mov
xchg
xchg
sbb
popa
pop
dec
scas
andb
pop
pop
sbb
data16
dec
cs
xchg
mov
xchg
int
cli
jno
dec
js
bound
scas
insl
das
fnstsw
imul
call
ss
pop
add
ljmp
sbb
mov
push
addb
mov
imul
dec
push
jb
mov
cltd
das
mov
cmp
xchg
cmpsl
push
cmp
fs
enter
addr16
pop
aaa
push
xor
dec
adc
and
insb
lds
ret
cwtl
xlat
or
mov
mov
cmpb
cld
aam
mov
inc
sbb
mov
fidivs
xor
out
sar
or
mov
adc
mov
sarb
cmp
stos
xchg
sahf
mov
pop
xchg
ljmp
cmpsl
je
roll
shrb
add
jl
iret
cmp
sbb
or
arpl
and
xorb
push
aaa
test
rol
dec
mov
mov
fsub
rclb
shlb
imul
negb
or
jns
xor
lret
dec
adc
fmuls
mov
cs
jp
repnz
clc
sbb
jae
xchg
fcmovne
push
in
push
outsb
shrb
je
add
scas
lahf
scas
xchg
dec
xor
cmp
jmp
sub
mov
icebp
add
and
cli
fs
pop
clc
fsts
xor
stc
and
or
cmp
push
leave
test
sbb
fst
scas
shl
xor
inc
fld
mov
into
aaa
nop
jo
rorl
inc
out
cltd
in
int
xor
daa
icebp
mov
adc
mov
stos
or
and
dec
rclb
cwtl
out
test
xchg
rcrl
mov
lcall
inc
bnd
jmp
mov
in
int
int
pop
inc
aaa
or
push
lcall
fldt
out
and
push
pop
xorl
xchg
and
jle
mov
jae
fwait
cli
dec
xor
mov
add
push
outsl
iret
sub
in
pop
out
xchg
loope
in
test
insb
cmc
xor
rcrb
push
add
ret
enter
out
mov
pop
or
lods
sbb
pop
mov
pushf
data16
scas
int
repnz
loop
xchg
into
mov
cmp
dec
stos
scas
inc
pop
pop
cwtl
or
leave
insl
inc
sbb
pop
lods
mov
and
negb
and
repnz
inc
sub
int
mov
pop
mov
cwtl
pop
dec
mov
data16
mov
stos
es
xchg
sbb
jo
mov
sbb
push
bound
push
lret
test
gs
enter
mov
fsts
dec
popf
or
fldcw
addl
or
dec
or
jmp
jmp
lds
es
loope
cs
insb
jmp
adc
stos
popf
lods
call
mov
mov
flds
sbb
aaa
jmp
pop
lds
sub
idivl
mov
insb
cld
jg
dec
jg
dec
test
push
sub
in
aaa
sbb
out
out
pop
add
cmpsl
and
pop
mov
inc
adcl
xchg
xlat
jno
ljmp
in
xlat
movsl
sub
dec
push
insb
mov
and
test
aaa
pop
scas
scas
outsb
in
jb
cltd
mov
jge
mov
and
mul
or
sbb
arpl
btl
lock
pop
leave
sbb
ja
lods
xchg
sub
and
mov
mov
cmp
cmp
scas
jmp
ret
adc
adc
adc
inc
cmp
data16
test
jmp
xchg
shl
cltd
fidivrs
mov
push
pushf
xchg
or
cmp
into
scas
jbe
dec
lret
or
adc
jb
dec
lcall
push
lcall
test
rorb
sub
imul
adc
xor
in
jns
adc
into
stos
leave
cmc
jp
pushf
sbb
push
shll
out
clc
xchg
add
mov
inc
test
sbb
sti
adc
shrl
outsl
cmp
js
das
dec
ja
inc
xor
std
pop
dec
shlb
sbb
xchg
sti
mov
sbb
and
cli
nop
inc
inc
pop
enter
push
xchg
xchg
dec
mov
inc
pop
pop
scas
adc
aam
cmp
inc
pop
negb
gs
push
icebp
inc
jle
shrb
inc
imul
adc
dec
rorb
sub
icebp
jo
and
imul
cmp
loop
or
push
hlt
int3
jb
mov
xor
xchg
jno
and
sub
js
mov
test
or
leave
fisubrs
adc
jle
ror
mov
push
clc
xchg
add
scas
mov
mov
mov
push
decb
cmc
bnd
mov
mov
push
ret
aaa
cmp
or
in
cmpl
ds
ja
test
enter
ja
mov
mov
leave
loop
out
mov
pop
mov
mov
sub
das
iret
or
xchg
cltd
xchg
je
mov
std
ficompl
decb
out
xchg
pop
scas
jg
xlat
adc
inc
push
aas
std
subb
mov
je
mov
ljmp
pop
jge
ficomps
mov
mov
mov
jle
adc
xchg
push
outsb
xchg
dec
jno
mov
adc
rcrb
pusha
mov
xor
pop
hlt
pusha
mov
in
xchg
mov
repnz
mov
cwtl
ficoms
mov
mov
lods
cmp
cmp
jnp
arpl
pushf
jno
pop
sub
push
aad
pop
push
idiv
rcrb
out
fcmovb
pop
in
in
cmp
add
into
mov
push
or
push
std
pop
hlt
or
iret
jmp
aas
out
xor
fdivrs
mov
add
loope
repnz
clc
arpl
mov
inc
cs
das
sti
and
adc
decb
test
daa
std
arpl
mov
filds
inc
jb
nop
movb
sub
jns
dec
orl
jle
and
adc
jo
insb
push
and
aam
mov
dec
fcoms
add
leave
lcall
dec
scas
mov
mov
inc
cltd
lock
sub
bound
popa
inc
inc
dec
lcall
addl
shl
pop
mov
popf
int3
mov
pop
pop
sub
lret
fstl
jmp
mov
mov
roll
mov
and
fidivs
adc
out
push
push
fwait
lods
cmp
jge
inc
mov
andb
push
xor
xchg
mov
lds
ss
sub
adc
mov
cmp
xor
out
test
adc
test
push
sub
jge
mov
push
popf
pop
stos
inc
inc
std
mov
ror
mov
scas
and
push
je
in
lcall
jg
add
rcrl
mov
enter
mov
into
sti
push
sub
addb
lds
lea
bound
neg
cwtl
pop
push
adc
jp
mov
adc
inc
out
sti
xchg
xchg
out
aaa
fwait
push
lret
stos
fstpl
pop
fidivrs
sarb
jnp
push
cwtl
or
xor
cmp
push
xor
adc
ret
mov
mov
mov
cmp
orb
jb
pusha
add
in
aaa
fiaddl
push
sub
int3
xchg
xchg
loop
lods
push
sub
push
movsl
imul
jg
jmp
ja
leave
inc
mov
jbe
mov
aam
popa
gs
test
popa
xor
add
dec
fisubrs
test
cld
mov
cmp
xor
daa
fprem
imul
xorb
negl
sub
push
mov
and
cwtl
adc
jb
cwtl
adc
and
pop
repz
outsl
inc
jmp
xchg
push
mov
push
xchg
call
lahf
sbb
js
punpckldq
pop
addr16
imul
mov
jnp
cmp
adc
push
mov
lds
cmpsb
std
jns
imul
mov
mov
inc
scas
ret
mov
inc
dec
dec
dec
addr16
xor
adc
push
push
and
icebp
dec
xchg
sbb
lods
fs
mov
xor
ja
pop
or
in
outsb
mull
or
lds
jnp
dec
testl
sbb
fwait
mov
mov
xor
mov
mov
dec
call
addb
imul
stos
pop
and
adc
lret
push
pop
stc
ja
divb
xchg
jae
rorb
stos
push
out
pop
adc
es
push
popf
rcrb
push
rorl
push
jl
insl
cmpb
push
dec
fcomps
dec
lods
mov
stos
in
mov
inc
shlb
xor
mov
jecxz
jo
xchg
mov
dec
insb
push
fbstp
mov
clc
xchg
andb
sub
imul
pop
ljmp
std
add
int3
dec
cmpsb
sbb
pop
cltd
sahf
mov
sar
fidivs
in
xlat
pushf
adc
rcrl
cli
dec
cmp
in
movsb
outsw
lret
cmpsl
or
sbb
repnz
sbb
es
daa
and
addr16
cld
repz
loope
fsubl
add
mov
and
mov
lahf
add
xchg
xchg
xchg
or
inc
mov
pop
mov
and
xlat
dec
fcomp
sub
out
ss
jbe
xchg
mov
xchg
icebp
sub
sbb
iret
repz
pop
es
pop
jnp
sub
push
movsl
jecxz
jg
jg
les
js
jnp
bnd
aaa
xor
mov
push
lods
mov
ret
lock
out
aam
mov
inc
les
inc
push
jnp
jns
lock
stc
xor
pop
int
adc
mov
lds
enter
xchg
cmp
cmc
sbb
clc
subl
movsb
stc
popf
or
test
xchg
data16
das
int
sub
xor
mov
mov
addl
add
repz
in
sahf
js
stos
mov
rol
push
clc
pop
daa
mov
out
int
testl
or
xlat
mov
pop
aas
inc
mov
incl
mov
push
or
lock
aaa
inc
cmp
cltd
fstpl
inc
mov
sbb
in
mov
xchg
mov
orb
or
or
sar
jg
aas
movsl
test
int
outsb
dec
push
aam
adc
sub
int3
mov
mov
test
mov
test
hlt
cmp
xor
mov
stos
pop
fs
inc
pusha
cs
xchg
ds
imul
mov
jp
icebp
adc
sub
test
sbb
loop
cmp
movsb
in
rcl
sbb
hlt
in
inc
jmp
push
cmc
and
ds
scas
out
push
fisubrl
mov
test
in
lock
orb
fistps
stos
repz
cmp
sarb
xor
cmp
clc
lret
or
xchg
outsl
xor
dec
mov
cmpsl
aam
dec
cs
inc
mov
or
or
test
mov
fldt
mov
popa
out
out
sbb
pop
xchg
mov
and
testb
loope
ljmp
ja
lahf
repnz
xor
xor
mov
arpl
inc
cld
in
adc
inc
mov
shlb
mov
dec
and
mov
adc
insl
lea
pop
push
shr
mov
mov
jno
xor
mov
rcl
inc
jg
iret
lcall
mov
cmp
inc
dec
sbb
iret
popa
sbb
arpl
fadd
scas
and
cmp
je
ret
inc
jae
mov
jbe
cmp
xchg
pop
test
js
loop
cli
aam
aas
jns
in
loope
imul
xor
call
cwtl
cltd
jg
mov
mov
ss
push
dec
push
or
inc
sbb
and
jae
cwtl
insl
sahf
sub
mov
in
nop
xchg
xchg
in
test
ror
sbb
adc
xchg
das
and
xchg
xor
sbb
mov
outsl
push
dec
xor
sbb
fucom
or
outsl
imul
dec
jnp
and
and
pop
sbb
pop
sbb
mov
imul
ds
fbstp
in
negb
lahf
das
nop
rclb
mov
les
cld
rclb
or
pusha
jle
xor
adc
dec
movl
mov
fs
mov
inc
loop
stc
push
dec
jecxz
repz
enter
mov
pop
jp
iret
fldcw
out
sti
shlb
push
xorl
cs
xchg
xchg
orb
ret
or
mov
inc
mov
jmp
cltd
lds
lea
stos
push
dec
rcll
push
aam
push
aas
xor
or
dec
jnp
sbb
aad
jp
ficompl
add
js
adc
lret
mov
cmp
inc
in
rorl
ss
mov
jae
fisttpl
mov
insl
in
inc
jbe
push
icebp
in
cwtl
cld
js
scas
mov
loope
pop
orl
test
rcll
sub
movsb
addr16
bound
test
test
xor
cmp
flds
stc
mov
sub
xor
adc
push
cmpsb
aad
push
negl
rorl
inc
aas
mov
add
stos
rol
test
lea
js
ss
cmc
cli
push
push
mov
ret
push
pop
xchg
ret
dec
push
xchg
mov
sbb
test
push
add
or
dec
mov
fdivrp
and
test
mov
and
popa
jg
fbld
insl
int3
xchg
loop
dec
gs
fnstsw
rcrl
pusha
mov
repnz
cmp
mov
std
dec
mov
xor
lret
imul
adc
add
in
ficoml
mov
xor
cld
dec
ljmp
cmp
jae
or
cwtl
sbb
ja
add
rorb
out
cld
ljmp
cwtl
push
insl
stos
cmc
sahf
xlat
xchg
mov
lds
sti
insl
das
mov
push
sbb
xor
sub
iret
dec
mov
mov
scas
aaa
inc
and
out
dec
push
mov
mov
xchg
cmp
pop
mov
mov
test
movsl
and
push
mov
and
mov
add
mov
aaa
push
ss
rcrl
pop
sub
cwtl
nop
mov
adc
or
push
pop
sub
mov
test
mov
cli
insb
or
ret
cmp
adc
dec
dec
das
gs
in
lds
xlat
push
movsb
push
push
jmp
dec
jg
and
rclb
mov
add
or
dec
push
inc
mov
sub
inc
and
xlat
push
mov
nop
jb
pop
and
js
cmc
addr16
pushf
cltd
out
filds
push
stc
test
cltd
pushf
addr16
lods
mov
mov
push
enterw
mov
outsl
loop
shrb
inc
stos
repz
jg
leave
insl
dec
push
aaa
sbb
hlt
out
fidivrs
mov
stc
adc
repz
sbb
jno
mov
xor
add
push
leave
pop
xchg
sarl
adc
mov
mov
push
cmc
push
xchg
add
and
xlat
es
push
outsl
lea
pop
mov
test
ret
jp
stos
shr
xor
ds
stos
sub
cmpsb
pushl
ret
push
cmc
sub
jae
push
add
jge
fldenv
pop
jbe
fldenv
cltd
ljmp
imul
xor
add
lds
fimull
int3
daa
xchg
add
lret
lahf
mov
es
adc
sti
out
bnd
lret
cmpsb
jns
mov
dec
mov
icebp
sub
xor
out
sbb
cmp
adc
dec
stos
mov
aas
stc
mov
aam
fildl
dec
cmc
lret
popf
xchg
inc
pop
test
mov
and
mov
popf
dec
jecxz
adc
and
mov
negb
ds
ja
sub
out
mov
mov
add
or
push
rorl
jbe
shll
or
inc
test
cmpsb
dec
fsubl
mov
xchg
leave
pop
mov
cmp
idivb
mov
add
push
pushf
cmp
cmp
jl
shlb
or
mov
jb
push
xchg
cmp
shll
mov
aam
mov
pop
iret
gs
and
mov
xorl
pop
lods
bound
lods
jne
lods
shll
xor
lds
jmp
mov
mov
or
inc
mov
and
repnz
imul
adc
jbe
mov
xor
icebp
int
adc
pop
add
fldcw
fdivrl
enter
jle
mov
mov
dec
sbb
adc
sti
clc
inc
and
repz
rol
dec
inc
int
xor
hlt
loop
adc
xchg
test
mov
or
sarb
out
inc
push
mov
pop
jmp
sti
xor
mov
jno
mov
and
and
gs
aas
lret
fsubr
stos
sbb
into
mov
fdivrs
das
add
or
xchg
filds
pop
xor
shlb
pop
aam
pushl
test
bound
xor
sbb
pop
arpl
repz
inc
fstl
xor
mov
mov
push
inc
mov
jg
shl
cmpsb
lcall
mov
adc
fbld
jp
or
sub
xorl
dec
loope
cmpsb
add
mov
xchg
daa
jbe
jne
cs
ficoms
cmp
and
mov
sub
pusha
xchg
lock
loope
or
lcall
dec
scas
xchg
jnp
lcall
jp
add
clc
in
jecxz
lds
stos
lahf
add
dec
arpl
push
in
lods
and
push
push
mov
in
lods
ret
pop
adc
cs
adc
loop
sub
push
pushf
sbb
cmp
testl
mov
imul
addb
cmp
cmp
mov
es
arpl
xchg
inc
pusha
mov
jb
and
gs
out
mov
rorl
stos
add
adc
push
inc
mov
xor
mov
sub
testl
ss
ret
jo
in
sbb
mov
idivb
rep
fsts
les
mov
mov
cmp
cmp
pop
jnp
sub
or
pop
js
shll
inc
cltd
imull
cltd
mov
add
mov
push
mov
mov
movsl
lret
jo
xchg
lods
insb
jb
mov
jae
sbb
dec
sub
aad
shll
push
jp
pop
mov
sub
jl
mov
or
data16
stc
std
mov
and
or
lea
pushf
and
jns
cs
adc
je
xor
testb
into
insl
ficoml
dec
push
mov
fcompl
adc
pusha
clc
pushf
jp
lods
add
add
adcl
xlat
inc
ljmp
test
add
mov
lahf
popf
inc
jae
adc
adc
testb
adc
movsb
mov
outsb
in
sbb
lea
cli
mov
loopne
jo
mov
clc
pusha
fsubl
dec
imul
sub
cmp
xchg
test
xor
lahf
es
mov
push
mov
pop
jmp
sbb
push
nop
mov
ja
jp
xlat
repnz
push
loop
sahf
mov
dec
mov
out
lcall
xlat
or
mov
jbe
jae
adc
call
mov
insb
in
cmp
mov
mov
xchg
cmpsl
pop
mov
mov
jne
inc
fisttps
mov
sahf
out
popa
xchg
xchg
cwtl
push
add
xor
stos
xchg
jns
sbb
sbb
aad
adc
test
lea
in
jo
lret
cltd
jecxz
mov
hlt
into
in
aas
cmp
hlt
inc
mov
xor
ss
loope
fildl
pop
sbb
mov
sbb
ror
mov
popa
cli
outsl
mov
xor
mov
jecxz
push
lds
mov
lds
roll
push
cwtl
add
mov
push
ret
add
fs
push
or
sub
aaa
adc
lcall
stos
aaa
iret
ret
test
sbb
jne
popa
cmp
aam
mov
cmp
fstps
push
fidivrl
push
movsb
cmp
pop
sbb
push
push
ret
in
out
pop
lock
jbe
sbb
cwtl
inc
or
xor
cld
push
adc
addr16
in
outsl
lods
xchg
stos
and
fdivrl
xor
jo
push
repz
cmp
dec
insl
dec
rorl
lahf
xor
xor
mull
pop
dec
cwtl
xchg
int3
lods
vmovdqu
lret
or
test
pop
cmpsb
sub
aaa
sarl
in
test
cmp
inc
in
pop
mov
nop
sti
ja
cmp
pop
dec
insl
in
fsts
mov
repnz
les
in
xor
outsb
inc
dec
iret
inc
int
push
inc
ja
mov
jo
mov
mov
inc
and
loop
push
mov
and
pop
cld
hlt
das
jle
ret
pop
orb
mov
rolb
cmpsb
test
ret
sahf
add
add
and
jg
cmp
inc
push
mov
sar
inc
pop
and
xchg
std
mov
push
mov
push
data16
mov
jb
imul
mov
add
stos
std
mov
mov
in
add
inc
or
sbb
repz
and
and
and
insb
jge
cwtl
movsb
cmp
aaa
and
pop
xor
fwait
xor
scas
scas
in
jle
jnp
call
mov
rcl
add
mov
ret
inc
adc
in
cltd
jp
add
icebp
lea
and
and
push
rcl
or
mov
rclb
insb
push
adc
stos
test
push
popa
dec
popf
test
add
adc
xchg
dec
adc
clc
test
repnz
push
mov
fisttpll
jl
mov
pop
repz
es
outsb
push
push
or
push
scas
adc
add
pop
outsb
out
ret
add
push
js
adc
fnstcw
and
xchg
mov
jg
jp
sub
ret
out
mov
ljmp
mov
outsl
scas
int3
jge
dec
addl
rorl
ja
pop
in
repz
cmp
out
sub
aas
icebp
arpl
popa
inc
push
sahf
call
clc
inc
popf
mov
fwait
testb
fdivrs
test
pusha
sbb
push
es
jnp
dec
mov
arpl
fs
fs
cmc
push
dec
andl
adc
lods
fidivl
mov
sub
jle
cmp
ret
inc
stos
pop
jecxz
iret
push
out
sbb
je
push
mov
pop
push
jne
leave
lock
push
jne
mov
call
cmp
pop
lods
in
inc
jae
adc
adc
cli
push
cwtl
or
rolb
xchg
inc
sbb
push
rolb
fmulp
ds
das
cmpsb
test
negb
dec
push
movsb
orb
mov
push
fists
lods
or
xlat
pop
mov
adc
jle
cmp
lock
rcll
jge
dec
test
mov
dec
cmp
ret
outsb
cmpsl
jb
orl
clc
fwait
mov
inc
mov
cmpsb
lods
cmp
lret
data16
and
rol
cwtl
dec
push
loope
ficompl
rorb
mov
aaa
xor
fwait
cltd
jo
arpl
cltd
jp
cmp
sbb
fstpl
mov
ljmp
int
arpl
arpl
xchg
pusha
cmp
lock
lahf
and
andnps
push
outsb
pop
push
int3
cmp
mov
ljmp
xorb
adc
xchg
or
inc
add
lea
sub
cmp
dec
insl
in
addl
test
out
ljmp
andb
mov
iret
cmpsb
rorl
out
and
stc
out
fwait
mov
int3
dec
mov
mov
jecxz
mov
xchg
mov
mov
jnp
pop
mov
faddp
insl
xor
int
sub
dec
cwtl
incl
dec
fsubrp
pop
jb
add
out
cli
ret
pushf
pop
mov
stos
loope
dec
adc
fdivp
and
je
fucom
call
sbb
lock
ret
lret
loopne
or
mov
popa
pushf
push
clc
jb
dec
xor
mov
mov
inc
mov
addr16
xchg
add
jl
and
negb
inc
out
out
pusha
push
pop
pop
inc
mov
out
aas
sub
mov
dec
push
out
mov
xchg
adc
cltd
jmp
sub
in
lcall
xchg
jmp
int3
adc
popa
in
mov
cmp
cmp
imul
fnstcw
cmpsl
test
add
mov
in
call
popf
xchg
lahf
and
sub
inc
loopne
lock
adc
stc
jmp
daa
jg
lret
frstor
insb
mov
mov
out
mov
scas
mov
sub
sbb
jg
repz
int
repnz
xchg
call
pop
leave
jecxz
xchg
fcoml
jbe
and
xchg
mov
ss
push
pop
push
out
xchg
ja
std
movsl
adc
bound
rolb
jge
push
ror
mov
lcall
mov
xchg
or
jp
cmpsl
xor
outsb
mull
push
xchg
cmp
inc
popa
ja
mov
or
popa
mov
push
adc
in
hlt
sub
sahf
faddl
sbb
outsl
clc
and
add
sub
jl
sub
popa
rol
adc
inc
inc
sub
sbb
cwtl
faddp
fadds
lds
shrl
stos
cli
cli
pop
out
adc
push
fildl
add
add
jg
lret
pop
loope
lret
sbb
jo
xor
mov
cmpsb
xchg
pushf
jmp
xchg
sub
pusha
dec
nopl
lret
insb
cmc
sub
lcall
rcrl
lret
xchg
gs
scas
int
rcr
and
jo
adc
sub
sbbb
jp
je
and
fimull
cmpl
mov
fwait
aas
mov
imul
stos
mov
xchg
dec
hlt
xchg
sbb
insl
sub
cmp
jo
lods
xchg
and
inc
add
imul
fwait
or
xlat
push
pop
daa
or
inc
rorb
sti
mov
add
sbb
shlb
aad
roll
daa
xchg
cltd
bound
inc
jo
stos
mov
cmp
test
aaa
jne
rclb
dec
pop
stos
add
cli
loope
adc
jmp
mov
mov
pop
lods
mov
ret
clc
xchg
sbb
cmpsl
add
push
loopne
testb
xchg
dec
mov
add
fld1
xlat
mov
out
pop
sbb
idiv
push
add
inc
loopne
fwait
or
inc
lcall
out
mov
sub
in
inc
ja
sbb
sahf
js
int3
nop
jge
rclb
out
mov
cmp
pop
lock
mov
ret
aaa
push
xor
pop
lcall
cltd
add
aaa
xchg
inc
dec
roll
adc
pop
imul
or
dec
fdivr
mov
pop
pushf
sbb
dec
shll
cmp
inc
paddd
rorl
call
shll
and
mov
mov
cmc
pop
movsl
cmpsl
orl
cmc
mov
outsl
ljmp
cmpsl
ljmp
push
mov
data16
mov
jnp
cltd
add
stos
xchg
sub
ds
mov
mov
mov
cmp
gs
mov
sbb
cltd
jmp
imul
or
jne
fs
xlat
add
or
cmp
jno
dec
jo
cmpsl
jecxz
lahf
popf
out
insb
call
sbb
ss
cmp
fimuls
and
ficompl
add
dec
hlt
jmp
push
mov
and
in
mov
enter
xchg
sub
pop
faddp
jnp
sbb
or
mul
stc
mov
scas
push
in
add
aaa
add
inc
lcall
shrb
push
cmp
or
inc
fcomi
pop
mov
pop
mov
sub
dec
mov
xchg
xor
ret
orl
dec
sti
inc
and
xchg
push
fnstsw
mov
pushf
dec
cld
mov
or
mov
bound
insb
aaa
adc
lods
cmp
pop
dec
mov
mov
enter
test
fildl
push
adcb
aad
xchg
loopne
sti
mov
loopne
push
fcomp
and
or
call
pop
or
pop
mov
push
cmpsl
cmp
mov
insl
outsb
push
inc
lock
cmp
and
xchg
divl
test
fbstp
cmpsl
test
loop
loopne
mov
pop
insl
fildl
jle
int
fwait
jae
fnstenv
es
lds
rorl
pop
xlat
movsb
cli
loop
add
out
sub
jp
sarb
cmp
mov
dec
clc
hlt
inc
jg
sub
and
mov
lock
lcall
lahf
inc
hlt
xor
mov
cld
pop
shrb
cmpsl
mov
and
shl
lahf
sub
in
and
adc
pop
add
sahf
stos
sbb
sbb
stos
adc
repz
test
lods
cmc
add
push
repnz
sbb
mov
lahf
cli
push
dec
in
clc
sbb
lcall
push
in
movsb
imull
pop
fmul
cmp
lret
dec
and
jle
pop
shl
cli
stos
add
cmpsb
repz
hlt
xchg
fwait
shll
jne
movb
pop
fistpl
push
mov
in
xor
out
mov
lds
sbb
push
aad
xchg
arpl
aaa
pop
xlat
push
adc
jo
out
xor
pushf
jl
dec
imul
stos
imul
mov
jge
pop
dec
cmpsb
inc
and
add
xchg
jb
mul
push
pushf
push
inc
add
xchg
aaa
xchg
in
test
adc
jae
movsl
cld
mov
mov
data16
cwtl
loopne
jnp
jmp
je
push
push
sbb
inc
push
mov
push
xchg
aas
xchg
push
push
lock
enter
je
outsl
push
sbb
andl
xlat
jns
scas
js
sbb
sar
mov
push
das
sti
bound
adc
cmpsb
imul
sar
hlt
sub
sbb
inc
mov
test
mov
mov
inc
mov
add
ds
push
sbb
cmpsl
sub
test
aam
xchg
mov
xorl
andl
mov
dec
push
and
ret
dec
or
sbb
sbb
lret
ret
xchg
and
std
mov
mov
jg
les
lahf
xchg
fnstcw
in
xchg
lock
xor
lods
imul
scas
add
add
and
or
cmpb
inc
mov
xchg
jge
lods
cmpsl
cwtl
mov
es
fsubs
call
test
push
outsl
aam
mov
stc
loope
inc
mov
in
addr16
rorb
out
rorl
xor
mov
cmp
sbbb
loopne
setbe
repz
outsl
xor
mov
jl
je
cmp
mov
mov
loop
mov
pop
fucom
add
mov
jmp
push
jbe
pop
pop
mov
and
lret
les
lcall
call
dec
push
cmp
or
mov
push
cmp
loopne
pop
mov
jecxz
lret
aam
push
popf
mov
es
sar
lods
cmp
jecxz
hlt
mov
push
rolb
fistpl
cmova
adc
adc
or
es
mov
push
pop
pop
sub
mov
sub
mov
adc
or
insl
iret
jecxz
mov
cwtl
xchg
cmp
mov
cmpsb
sbb
jae
push
popf
or
test
cmc
mov
cmpb
pop
fistpll
sahf
loop
scas
test
mov
cmp
push
adc
loop
push
test
rcr
cli
dec
lahf
aaa
push
scas
xchg
xor
cmp
loope
sbb
dec
imull
fistps
mov
clc
scas
xchg
push
sbb
stos
loope
pushf
movsl
mov
je
xorb
nop
jge
mov
es
inc
cmp
es
repz
fdivl
out
add
or
pop
push
xor
scas
addr16
xchg
xchg
mov
loop
sub
cli
inc
adc
pop
mov
or
mov
enter
cld
and
sbb
test
pop
sbb
das
push
inc
sub
push
inc
scas
gs
jns
enter
push
or
ds
xor
scas
out
push
push
mov
fiadds
repz
testb
push
shll
in
mov
sbbl
and
pop
jb
xor
imul
cmp
in
repnz
sbb
hlt
xor
inc
aad
insb
into
or
enter
test
jne
addr16
push
testl
test
jge
pop
pop
mov
mov
lods
lock
lds
loop
adc
mov
and
inc
icebp
insl
sub
pop
add
cs
mov
jae
data16
popa
and
push
jl
xor
sbb
test
lcall
lcall
mov
adc
pop
or
mov
adc
fcompl
adc
xchg
pop
push
popf
data16
xchg
loop
mov
cmp
adc
push
dec
cli
fs
filds
inc
repz
jno
xor
and
or
jecxz
push
adc
cli
mov
bound
stc
nop
pop
ss
push
test
mov
push
mov
jle
int3
inc
push
int3
xchg
cld
xor
push
dec
lea
outsl
xlat
inc
inc
mov
xor
sbb
iret
fistpll
out
lods
in
dec
sti
addb
cmp
out
cwtl
mov
sub
sbb
aad
lahf
cmp
nop
mov
inc
sub
pop
xlat
daa
sbb
xlat
hlt
pop
pop
cwtl
push
mov
stc
mov
push
outsl
or
out
cmp
and
les
or
das
inc
add
mov
inc
add
loope
jmp
inc
out
roll
test
cmp
mov
insl
cmp
xchg
ljmp
jns
fdivrs
sub
andl
fistpll
add
out
lcall
dec
sbb
jmp
fcmovne
xor
lods
fmul
pop
cmc
mov
sub
push
fsubl
das
inc
inc
out
jp
jg
pusha
insb
add
idivl
pop
add
jbe
push
lds
pushf
loop
xchg
lcall
addl
jp
jmp
cmp
mov
fsubrp
dec
add
fmuls
pop
sahf
in
mov
shrb
inc
pop
mov
inc
jnp
push
push
scas
pop
into
cwtl
add
das
cmp
xchg
pop
adc
adc
push
cmpl
inc
in
je
push
lods
scas
and
out
xor
into
int3
cmpsb
mov
mov
inc
aaa
das
cs
pop
and
inc
fwait
pop
mov
sub
xor
mov
shl
push
jmp
std
push
sub
jo
mov
nop
xor
iret
arpl
scas
xchg
out
js
popa
jb
mov
cmp
add
xlat
repz
jno
mov
enter
ror
iret
push
pop
mov
negl
or
adc
loop
push
pop
sbbl
pop
outsb
in
cmp
or
sbb
andl
sti
pop
fmuls
clc
inc
dec
inc
loopne
or
rcr
and
or
jl
push
fwait
jae
orl
std
loopne
pop
xchg
and
xor
popa
push
scas
mov
lret
andb
cmp
fsub
insb
sub
mov
xor
cltd
popf
push
xchg
adc
push
das
adc
cmc
jp
js
mov
adc
jp
jb,pt
clc
leave
popf
aas
push
in
mov
mov
mull
cmp
sub
mov
test
push
loope
push
outsl
bound
pop
mov
xor
pop
fsubl
push
repnz
sub
int3
dec
push
mov
loop
push
pop
adc
xchg
fidivrs
nop
scas
aaa
ljmp
xor
rcl
dec
adcb
xorb
jb
and
sbb
cmp
iret
mov
sub
sarl
call
jbe
push
dec
sbb
pop
pop
adc
sub
lret
ret
sub
aaa
push
jge
pop
fimull
xor
dec
xchg
iret
mov
loop
mov
inc
fwait
sub
mov
ret
ljmp
lods
push
insb
mov
push
mov
pop
scas
mov
adc
cli
out
incl
cwtl
xlat
ljmp
jns
sub
repz
js
cmp
fidivl
inc
fstp
lret
in
dec
pop
mov
clc
aas
ljmp
mov
cwtl
mov
jae
in
cltd
in
sbb
inc
ja
xlat
mov
mov
dec
sbb
jo
dec
cld
imul
loop
loop
movsb
arpl
inc
fcoms
mov
fstps
clc
in
imull
mov
fyl2x
sbb
fsubrl
ljmp
xchg
sbb
dec
fcoml
sub
mov
repnz
andl
sbb
and
ljmp
inc
add
das
int3
ja
stos
leave
fisubrs
mov
mov
inc
xor
lcall
cmp
ucomiss
subb
jmp
out
fwait
shll
xor
ja
gs
lret
flds
or
sti
xor
popf
sub
inc
cmpsb
mov
push
lock
mov
stos
cs
int3
test
movsb
stos
jge
jmp
xor
pop
sbb
call
cmp
lahf
fists
in
inc
sub
es
inc
leave
je
pop
push
add
outsb
cmp
fwait
ja
bnd
jo
nop
imul
add
push
pop
push
jbe
test
ljmp
push
push
imulb
clc
mov
in
iret
adc
in
aam
or
push
stos
adc
mov
rcrl
sbbb
fnstenv
and
fwait
in
jmp
add
dec
repz
pop
push
cs
mov
sahf
pop
sub
xor
pop
xchg
icebp
addr16
addl
das
shrb
sbb
int
leave
fcomi
sub
mov
cmp
mov
mov
mov
into
xchg
push
sahf
dec
addr16
ja
xchg
jns
fnstsw
scas
fadds
add
add
in
stos
into
mov
loope
xor
mov
inc
xor
or
insl
in
fbld
fadds
mov
push
sbb
ja
not
sub
inc
les
outsb
ret
mov
fwait
mov
push
jnp
sbb
mov
cmp
mov
mov
out
or
sbb
xchg
in
pusha
cmp
ljmp
addb
cs
xor
std
lock
jnp
xchg
outsl
loope
insl
dec
fdivrs
testl
jne
push
push
adc
jnp
jp
sbb
adc
test
and
test
lahf
and
push
scas
lcall
sbb
test
mov
mov
dec
ret
pushf
ror
xchg
imul
aaa
popa
mov
jl
stc
in
fnstenv
or
jae
or
mov
dec
icebp
or
pop
push
shll
xlat
scas
ret
pop
cmpsb
cmp
insl
add
add
xor
pop
test
inc
insl
xor
mov
notl
shrl
and
jl
in
and
test
jns
mov
pop
adc
ficomps
and
in
inc
lock
lods
cmpsl
sbb
fstp
dec
ret
out
add
into
lock
cs
mov
lods
shl
in
xchg
jle
int3
sti
mov
adc
sbb
xorl
mov
and
fnstenv
stos
xchg
loopne
xchg
js
cmp
lahf
cs
addb
add
js
sub
ljmp
sbb
dec
add
inc
jnp
scas
xor
inc
pop
sbb
pop
aam
inc
lcall
lds
leave
or
mov
inc
cmp
xchg
mov
push
inc
sarb
push
lods
shll
push
xchg
dec
mov
push
add
push
xor
lcall
mov
mov
inc
mov
add
arpl
jnp
jne
cmpsb
jl
dec
or
movsb
mov
lahf
mov
jae
sti
in
mov
push
and
inc
loope
cmp
sbb
pop
or
jle
or
pop
mov
cltd
add
lcall
mov
loopne
xor
jno
cmp
mov
push
xchg
cmp
or
cltd
clc
sarb
mov
fidivrs
mov
inc
push
jg
rolb
ret
dec
sbbl
jecxz
mov
lret
pop
inc
mov
xor
jnp
jnp
cmp
sbb
xchg
dec
cs
and
cmpsb
aaa
dec
sub
inc
xor
clc
dec
icebp
adc
sub
push
or
repz
into
mov
pushf
mov
xor
or
gs
pop
inc
and
into
int
das
pushf
push
sbb
nopl
ss
xor
mov
cmp
mov
cmp
repz
fimull
arpl
sbb
adc
jb
push
dec
dec
push
mov
xor
mov
repnz
fwait
xchg
add
sub
mov
lock
arpl
pop
lret
fisubs
xchg
les
inc
adc
pushf
dec
jnp
shrb
mov
fwait
inc
popf
loope
add
repz
bound
es
sub
push
pusha
rolb
cmpsb
push
dec
ret
xchg
cld
pop
mov
stos
das
subb
in
cld
pushf
mov
xlat
push
cli
mov
repz
lds
aad
adc
divl
and
dec
clc
dec
lods
mov
pop
jecxz
pop
addb
bound
pop
add
pop
mov
sub
bound
mov
into
pop
inc
push
into
sub
lcall
cmp
aaa
mov
fisttpl
cmc
and
mov
or
lea
mov
stos
push
fstpl
dec
daa
repz
or
in
in
jg
js
adc
mov
out
adc
std
ret
jg
mov
jmp
test
xchg
xchg
test
lahf
in
mov
xor
add
jg
inc
mov
add
push
inc
push
pop
push
mov
jb
ja
pushl
add
cltd
sub
push
ds
inc
ja
mov
daa
or
aam
dec
ret
scas
xor
mov
neg
jmp
push
out
jmp
outsw
mov
pop
es
or
insb
gs
mov
xor
push
lcall
mov
mov
add
scas
or
mov
je
mulb
jge
cs
int
adc
daa
mov
mov
loop
aaa
sbb
and
cli
pop
lret
popf
mov
mov
popf
outsb
flds
jnp
je
inc
xor
jle
adc
stos
ret
mov
dec
stos
sti
outsb
jmp
mov
jns
add
shr
xor
ja
or
xchg
push
xor
pop
ds
xor
ljmp
dec
sbb
stc
nop
mov
aaa
jnp
out
stos
leave
out
inc
cmp
leave
add
push
xchg
movsl
jecxz
dec
fadd
lds
cmp
in
testb
movsb
arpl
cmp
cltd
sub
adc
sub
mov
pop
jo
mov
andl
sub
dec
or
sbb
test
or
sbb
cmp
sbb
pop
inc
insb
test
jo
add
add
dec
out
dec
orl
icebp
jno
cmpsl
test
daa
idivb
fmuls
jg
xlat
test
mov
adc
cli
sti
pop
pop
fwait
in
xchg
ret
mov
mov
sub
cmp
fdivr
jmp
xchg
out
jl
add
insl
and
test
cmc
inc
sub
sbb
hlt
mov
adc
jbe
and
add
or
cltd
push
test
repz
les
xor
jecxz
xchg
mov
jne
pop
movsl
ja
add
jmp
pushaw
add
inc
data16
lds
arpl
push
or
rorl
xchg
mov
jb
sbb
call
jno
lods
push
sub
push
adc
jl
scas
aad
test
jbe
aam
xchg
enter
filds
or
icebp
dec
jbe
mov
jne
ds
jecxz
jmp
pop
les
sbb
jg
sarb
mov
dec
outsb
jnp
insl
clc
adc
loop
xchg
cwtl
jl
stos
add
fldcw
pop
xor
dec
hlt
and
int
stos
repnz
add
push
add
data16
imul
aad
pop
dec
test
iret
scas
dec
sbb
movsb
arpl
inc
push
mov
and
xor
cmpsl
aaa
mov
jle
ja
lds
mov
fisubl
mov
sub
add
ficomps
cmp
adc
rcl
call
xor
mov
push
in
stc
dec
mov
cwtl
lret
jmp
dec
push
cli
adc
out
xchg
out
xor
cli
test
shlb
xor
test
insl
jb
jno
add
pop
sbb
je
pop
mov
pop
sub
inc
call
fwait
mov
negb
in
orl
out
pop
sub
stc
loope
pop
and
sbb
stc
pop
bound
or
or
mov
sub
pushl
sub
cmp
and
push
push
inc
cmp
clc
add
mov
mov
inc
push
rorl
cmp
push
es
insb
jbe
or
hlt
jns
sub
mov
frstor
cli
add
enter
dec
scas
cmp
inc
adc
dec
mov
sti
xchg
dec
jnp
pop
movsl
mov
jle
pop
or
mulb
jge
pusha
cltd
pop
sub
lds
jb
les
mov
out
add
ret
movsb
jnp
rolb
js
repnz
xchg
add
popa
mov
movsl
arpl
mov
and
stos
mov
movsb
mov
sub
push
xor
loop
movsb
test
fstpt
dec
fdivp
int3
sbb
jo
fwait
ret
and
popa
add
xor
xor
or
mov
pop
xchg
fs
out
lcall
mov
orl
sbb
ret
ljmp
stc
push
jns
sbb
ret
das
lcall
xlat
insl
outsb
and
nop
popl
sarb
testl
cmp
mov
enter
pop
mov
sbb
and
push
push
push
bound
mov
in
push
add
sub
jge
pop
pop
icebp
icebp
xor
xorl
out
pop
pop
fcoml
sub
sub
adc
dec
fwait
lds
lret
jmp
xchg
dec
sub
cltd
pop
push
addr16
cs
jp
mov
mov
cmc
leave
jns
push
mov
xchg
dec
jbe
decb
sbb
and
fwait
lea
push
cld
lods
cmp
pop
movsb
dec
or
pop
sub
popf
xchg
xlat
jbe
lahf
mov
js
insl
sbb
cmpsl
clc
xchg
nop
adc
xchg
rolb
sbb
pop
loope
jbe
imul
out
shl
xchg
mov
and
adc
nop
cmp
push
loopne
fimull
and
fwait
inc
add
push
lea
shrl
ja
push
mov
sbb
pop
sbb
push
ss
and
push
pop
lods
adc
jecxz
or
cmp
pop
inc
jo
sub
loop
js
sub
cmc
ljmp
test
inc
jp
adc
pop
inc
fldt
dec
ljmp
mov
mov
jne
and
xchg
inc
sbb
dec
push
push
imul
sbb
enter
ror
pop
cmc
inc
adc
pop
or
jbe
or
pushf
daa
mov
dec
sbb
popa
lods
pop
loop
stos
scas
ss
mov
add
fstpl
add
out
lret
mov
out
in
sbb
orb
int
push
int
inc
add
and
fildl
inc
mov
aaa
pop
xor
stc
ja
pop
repnz
loop
mov
mov
jp
cs
cmp
in
sbb
xor
mov
lods
and
jb
mov
xor
add
inc
loopne
mov
imul
or
mov
cmpl
sti
dec
inc
inc
repz
loop
rep
je
je,pt
loopne
in
imul
sbbb
icebp
mov
sbbb
sub
mov
mov
cmp
ja
mov
mov
mov
rcrb
neg
fcoms
ret
add
xchg
scas
scas
das
ja
jbe
aas
adc
dec
lret
jae
adc
sbb
jae
out
insb
in
mov
jo
fs
jl
gs
rcl
sub
fcmove
aam
insb
cwtl
pop
sub
jnp
xchg
cmp
jbe
gs
popl
imull
mov
adc
sahf
jmp
mov
movsl
daa
pop
xor
pop
insb
push
dec
ja
mov
xchg
rolb
push
repnz
pcmpgtd
jmp
sbb
cwtl
insb
loope
or
scas
xchg
push
push
imul
add
or
and
mov
mov
addb
pop
dec
and
and
sub
mov
xchg
inc
cmpsb
lahf
enter
mov
outsb
jns
or
sbb
adc
dec
inc
in
mov
scas
mov
ret
inc
outsb
push
test
cmpb
fstpl
arpl
sbb
fs
out
scas
xchg
jmp
je
xchg
and
inc
sub
pushl
sub
push
inc
in
pop
movswl
xor
jle
xchg
lcall
movsl
inc
int3
outsl
xor
cmp
push
int
ret
inc
insl
test
mov
xor
fs
cwtl
fists
or
or
dec
data16
test
lret
jmp
call
inc
push
aaa
cmp
mov
jp
je
adc
cmp
stos
rcl
lret
push
jnp
div
lret
je
cmpl
fdivrs
lods
por
xchg
push
inc
fdivrl
jge
xchg
dec
outsb
fsub
fmull
pop
pusha
mov
sub
push
mov
xor
lahf
out
cltd
cmpsb
jp
jmp
in
jg
lahf
inc
fucomi
inc
xchg
sub
xchg
xor
in
push
dec
dec
popa
hlt
shrl
imul
ss
mov
std
or
fldt
or
jae
in
push
xchg
xlat
jmp
out
and
stos
mov
sti
sub
repz
pop
xchg
fisttpl
in
in
sbb
mov
fistps
inc
mov
and
add
ret
adc
dec
dec
mov
orl
fs
pop
aad
push
divl
aas
lods
ja
ljmp
xlat
xor
popa
add
pop
lods
out
sbb
push
popf
neg
sarl
xchg
push
stos
jmp
mov
sub
add
roll
stos
sub
cmp
cmp
subb
sarl
xchg
mov
cs
repz
jge
insb
mov
xchg
adc
xchg
int
mov
mov
int
add
and
ss
push
pushf
lods
dec
test
add
mov
mov
test
insb
shr
and
testb
push
inc
xchg
pop
pusha
sbb
mov
aam
popa
out
mov
stos
nop
mov
leave
imul
out
mov
lret
loopne
mov
sbb
ret
xor
adc
cmp
popl
adc
lahf
aam
in
cmp
into
pop
daa
cmp
jmp
stos
outsb
out
leave
fmul
fdivs
fdivs
mov
mov
pop
sub
scas
push
int
jb
out
ss
or
test
xchg
jmp
shrb
mov
push
lret
xor
inc
inc
cmp
pop
and
or
add
push
push
dec
loopne
ret
pop
roll
and
push
xchg
xor
shrb
cwtl
push
mov
or
insl
ds
cli
clc
stos
out
xchg
sbb
xchg
sub
daa
push
and
cmc
push
and
mov
xchg
cmp
cmp
lcall
roll
insb
ret
and
jg
mov
imul
xchg
xchg
scas
lret
and
and
rorl
and
test
xor
into
out
inc
lock
mov
xor
sahf
pop
add
or
imul
jnp
xlat
stos
test
stos
cmpsl
mov
test
pushf
lret
adc
stos
jb
cmp
or
mov
stos
jmp
out
fsubs
pushf
mov
mov
xchg
xchg
iret
inc
dec
sub
pusha
js
fwait
adc
mov
and
movsl
int
inc
mov
or
sub
int
roll
sti
xchg
add
aas
jae
push
mov
in
js
adc
ret
sub
pop
pop
mov
xchg
je
dec
xor
xchg
mov
test
loop
jns
jae
loope
pop
fsubrl
ljmp
push
into
fisubrl
int
push
loop
in
and
in
push
mov
es
xchg
out
or
pop
xchg
dec
jb
cmovno
rclb
sarb
adc
and
je
jmp
adc
jb
push
js
lcall
int
sbb
fiadds
dec
jg
jl
cmc
push
mov
mov
lahf
and
nop
cmc
pop
adc
jl
xor
mov
jnp
mov
and
jbe
cmpb
add
xor
mov
jne
and
daa
ficoms
add
mov
aaa
push
sbb
mov
sbb
leave
lock
clc
and
and
xor
mov
xchg
cltd
lret
outsb
inc
pop
mov
fwait
in
and
jge
lahf
fcmovbe
lret
sub
fisubrs
add
testl
jnp
daa
hlt
hlt
fldcw
pop
push
aad
xor
call
dec
pop
test
and
jae
or
sbb
aam
jge
xchg
in
iret
xsavec
movsl
scas
mov
data16
push
outsb
mov
jle
mov
int3
outsb
imul
ljmp
inc
out
arpl
mov
daa
and
xchg
push
jno
fldt
sub
jb
aam
lcall
lcall
fisttps
aas
jo
xlat
into
inc
push
sti
mov
fs
bound
imul
or
xchg
mov
test
arpl
jnp
or
mov
das
xchg
ret
or
ss
mov
cs
push
sbb
ljmp
xor
into
mov
insl
dec
pop
adc
push
pop
arpl
adc
adc
cmp
ret
push
xchg
xor
inc
movsb
add
and
mov
test
sub
popf
add
testb
pop
rcl
cmc
ds
in
adc
mov
sbb
xor
fimull
ret
inc
mov
sbb
call
xchg
jae
adc
repz
fldl
push
xchg
xchg
add
int
mov
push
xor
adc
int
mov
inc
jl
add
ds
pop
jb
rcll
loop
stc
int3
pop
sbb
push
push
sub
pop
dec
testl
xchg
repnz
push
mov
sub
push
push
cmp
jnp
dec
jp
lcall
jns
fstps
cmpsl
add
dec
cmp
add
mov
push
sub
add
movsl
icebp
jnp
push
iret
fcom
cli
sub
cltd
je
int
mov
cltd
xchg
mov
pusha
loope
push
hlt
lcall
pop
movsl
hlt
in
ds
pop
aas
in
mov
xor
pop
data16
js
cs
decl
xchg
mov
mov
jnp
inc
movsb
mov
arpl
in
loopne
jmp
push
out
mov
inc
dec
cli
dec
sahf
int
mov
lret
and
sbb
or
or
insl
xchg
fisubs
cs
daa
xchg
push
sahf
arpl
jl
and
or
pusha
enter
daa
mov
mov
xor
or
jb
divl
out
add
jno
subb
js
mov
mov
popf
repz
outsl
or
jae
sbb
pop
sbb
push
jmp
push
and
lds
jp
iret
adc
enter
mov
mov
pop
jae
in
jne
divb
fsubrl
xchg
sub
jl
in
ja
push
call
repz
push
sbbl
xchg
mov
xor
lods
mov
adc
cmp
mov
lahf
push
stos
xchg
xchg
and
jb
bound
ja
cmc
stos
inc
jmp
loope
mov
mov
lock
jg
ret
cmpsl
stc
shlb
in
or
enter
in
lods
cmpsl
dec
je
jo
mulb
ljmp
adc
jb
sub
inc
loopne
in
mov
scas
or
out
je,pn
inc
mov
data16
xchg
xchg
mov
or
push
mov
cltd
out
cli
in
sahf
and
fisubl
icebp
mov
and
test
out
cli
push
xchg
inc
push
ror
test
xchg
movsb
mov
icebp
xchg
in
out
xor
dec
lea
mov
int3
add
lds
ret
sbb
repnz
incl
mov
sahf
imul
stos
nop
push
mov
clc
mov
jl
push
sbb
dec
out
sbbb
mov
addr16
mov
push
pop
dec
mov
push
and
push
mov
inc
add
mov
das
insb
adc
fidivrl
xchg
add
imul
mov
add
mov
movsb
lea
mov
sub
lahf
mov
cmp
sahf
jne
cltd
imul
or
sti
xor
test
sub
aam
sub
dec
cmpb
mov
push
sarl
adc
lods
mov
pop
sbb
pop
xchg
das
push
add
loop
push
xchg
fucom
cmpsb
iret
sti
push
scas
and
add
into
jmp
adc
aas
xlat
cmpsb
js
lds
pop
mov
stos
idivb
lea
xor
notb
test
sbb
movsbl
outsl
cmp
jno
xor
fsubs
rcrl
cmp
pop
enter
lea
or
xchg
inc
ret
das
lret
mov
repnz
ret
pop
sbb
sarl
jnp
std
cld
and
lea
pop
sub
mov
and
adcb
stos
imul
addb
adc
movsb
rcl
arpl
inc
cwtl
pusha
in
pop
pop
cmpsl
or
mov
int3
mov
add
sbb
js
mov
call
das
xor
or
inc
test
sti
scas
cmc
cmc
cmp
enter
jecxz
or
adc
int3
test
xchg
stos
fildll
imul
fistps
push
mov
ss
mov
dec
push
jp
not
xchg
add
fdivl
pusha
pop
adc
mov
inc
movb
jb
jp
rcrb
push
loop
test
cmp
mov
nop
enter
movsl
jo
hlt
ljmp
das
mov
stos
mov
xchg
imul
xchg
ljmp
pop
add
clc
pop
out
lret
mov
xchg
lret
bound
xchg
repnz
mov
push
inc
mov
add
xor
add
adc
mov
push
call
xchg
stos
cmp
fdivp
in
ds
mov
lret
jbe
in
mov
dec
and
fmuls
jge
aas
add
arpl
mov
iret
cmc
dec
jns
bound
sub
out
mov
mov
cltd
in
cmp
stos
xchg
mov
cwtl
pop
push
stc
or
sbb
int3
mov
mov
js
les
adc
push
lahf
vphaddubw
mov
cmc
je
or
call
mul
push
cli
rcrb
mov
lahf
sbb
roll
iret
jecxz
jae
fldt
push
gs
inc
cmp
inc
test
push
lret
lret
cltd
loop
pop
adc
xor
mov
mov
adc
out
aaa
mov
jmp
or
cwtl
cld
lret
jne
xchg
pop
popf
push
jge
cwtl
push
add
adc
jge
or
mov
mov
jno
pop
cmp
loop
mov
dec
cmp
arpl
gs
cmp
sahf
inc
jp
sbb
mov
fnstcw
shl
pop
cmpsl
test
daa
mov
xchg
imul
push
jle
cwtl
popf
outsl
das
mov
ds
adc
gs
aam
int
into
es
mov
mov
cmpsb
xchg
jge
jle
push
outsb
lds
pushf
dec
aaa
ret
aad
pusha
lret
ja
aas
mov
push
sbb
jns
jne
cld
rclb
dec
loopne
mov
ja
mov
popa
add
lea
ret
iret
or
adc
in
and
inc
add
stos
cld
adc
data16
jb
add
or
push
cmp
std
xchg
inc
mov
dec
dec
mov
addl
subl
jp
mov
push
jle
jmp
movsl
and
out
sbb
xchg
jl
dec
adc
push
or
inc
lea
fnstcw
clc
test
lret
xor
jb
mov
out
dec
jae
sub
mov
jb
xor
ficoml
les
out
das
scas
dec
daa
dec
movsl
or
xor
arpl
addr16
cmp
sbb
movsl
or
stos
jg
cmp
fildll
into
mov
adc
push
pop
jg
cmp
fdivl
cmc
ljmp
sti
ret
mov
nop
je
sarb
jns
push
cltd
push
pop
inc
sbbl
js
shll
or
and
pusha
mov
movsb
shl
cmp
xor
daa
cld
xchg
les
out
push
xchg
gs
test
pop
inc
sbb
sahf
cmc
scas
xchg
dec
push
out
std
jnp
loopne
fisubs
mov
xchg
enter
xchg
aaa
fucomi
jl
out
mov
js
scas
dec
loopne
subl
orb
jbe
rorb
xor
ret
scas
repz
cli
adc
jmp
jae
insb
sub
shll
sub
fdivrs
jp
mov
push
adc
xor
sbb
scas
sub
mov
out
es
mov
mov
push
add
ljmp
aad
test
rcll
add
shll
sbb
mov
cmp
mov
cmpsl
mov
mov
loop
decb
mov
das
mov
adc
jne
mov
pop
sbb
jnp
and
in
fists
mov
pop
lret
sarb
inc
gs
mov
pop
fs
fstl
cs
rorb
imull
pop
insl
lcall
jns
ljmp
xchg
in
mov
nop
lock
into
imul
xor
lods
inc
sub
mov
dec
sti
loop
aas
jno
add
mov
test
mov
xor
ret
das
or
cs
aam
cmp
in
push
cltd
add
inc
xor
das
jns
cmp
movsl
insl
mov
sub
mov
xchg
or
std
cmp
cmp
mov
sti
mov
sub
cmp
jl
pop
add
loop
cmp
cmp
in
cltd
lcall
mov
jmp
adcl
cltd
insb
inc
divb
nop
cmpsl
push
pushf
inc
je
push
cmp
jne
aas
insl
xor
ds
adc
dec
jmp
fiadds
and
rep
cmp
mov
repnz
xchg
fsubs
insl
stc
adc
cmpsb
sbb
and
pushf
insb
enter
xlat
adc
sbb
xor
adc
pop
fimull
sub
lret
insl
addr16
inc
xchg
es
add
into
adc
lea
push
adcl
addl
and
jecxz
mov
push
in
jb
sti
int3
sbb
test
inc
rol
fadd
aaa
jp
sub
mov
bound
mov
or
stc
jb
scas
into
pusha
adc
aam
xor
adc
aaa
out
dec
sub
lcall
sub
das
inc
aam
dec
pop
scas
sarb
in
mov
dec
mov
inc
insl
pop
inc
mov
push
shlb
mov
and
jle
fstpt
dec
outsb
push
adc
mov
pop
lods
pop
mov
scas
int3
and
or
into
pop
pop
popa
das
sar
dec
into
imul
pop
icebp
cs
inc
add
rorl
cwtl
imul
out
pusha
adc
mov
in
popa
jecxz
movsb
sub
inc
pop
push
into
or
sub
popa
push
sub
cmp
jg
rolb
mov
jg
sub
mov
jae
aaa
mov
fbld
out
push
in
fmuls
repnz
xchg
jns
mov
stc
jnp
sbbl
loope
sub
sarb
sub
loopne
xchg
aad
imul
in
push
sarl
jl
insb
imul
pop
fildl
add
arpl
repz
pop
es
popa
xlat
fs
lea
jecxz
pop
int3
ficomps
fs
test
jns
nop
pop
push
inc
jle
push
lcall
mov
mov
insl
in
popf
inc
stc
xchg
sub
xor
dec
pushf
adc
mov
mov
xchg
mov
inc
mov
inc
cmp
fdivrl
and
pop
aam
pushf
cpuid
dec
outsl
sub
adc
or
repnz
dec
push
mov
mov
xchg
cmp
dec
xor
xchg
or
cmp
ja
inc
nop
mov
push
sbb
fistpl
lcall
push
sbb
leave
cmp
fstpl
cmp
dec
dec
dec
cmp
std
add
add
outsl
insl
and
into
mov
es
shrb
push
lcall
or
push
test
fwait
pop
inc
xor
or
inc
push
clc
xchg
lcall
xchg
add
jno
insb
push
and
call
fsts
jbe
add
pop
stc
xor
sarb
leave
sbb
dec
mov
push
loop
loopne
dec
xor
cmc
mov
in
outsl
sbb
jnp
xchg
lds
imul
push
lahf
fcomi
add
and
out
call
pop
mov
cmpsl
pop
xor
movsl
enter
jmp
inc
xor
cltd
sub
fnstcw
js
imul
mov
out
add
movsl
or
jge
xor
or
xchg
daa
sbb
pop
lea
loopw
jecxz
cmp
sub
or
sbb
pop
xchg
mov
jmp
rcrl
mov
xor
xchg
jb
mov
push
mov
xor
jl
shl
pop
sbb
sub
adc
xor
daa
fistps
cmp
cltd
sahf
mov
xchg
ja,pn
xchg
push
xor
cmc
pop
mov
sbb
fldenv
mov
push
out
aas
fstpl
nop
fdiv
ret
jne
adc
and
das
mov
mov
int
icebp
jns
int3
push
inc
adc
pop
pusha
dec
test
xlat
iret
adc
loope
cmpsb
sbb
clc
lret
ds
inc
jns
adc
xor
sub
in
pushf
cmpb
jns
lret
and
data16
and
js
mov
mov
and
add
notl
or
pop
inc
iret
lret
repz
cwtl
push
cmp
pusha
jb
cmp
in
xlat
dec
pop
push
into
push
cwtl
test
cmpsb
in
stos
mov
hlt
or
outsl
mov
push
push
test
jne
addr16
xchg
addr16
inc
xor
fidivrl
cmpsb
or
pop
xor
shll
imul
pusha
imul
inc
arpl
sub
or
stos
rolb
fwait
push
pop
je
adc
cwtl
add
jns
or
aas
frstor
pop
adc
aaa
or
movsl
loopne
repnz
iret
adc
add
push
sbb
fcmovb
add
push
dec
pop
test
xor
add
add
in
mov
or
mov
dec
fcompl
lret
popl
ljmp
xchg
pop
sbb
and
mov
pop
mull
jmp
and
pop
out
shrl
or
outsb
jecxz
ret
pop
stos
test
cmp
out
ficompl
outsb
pop
pop
leave
mov
mov
jae
inc
imul
ds
or
pop
and
dec
insb
ds
and
push
push
lock
arpl
not
incl
jne
lods
std
jno
shl
xchg
outsl
popf
ljmp
xchg
ja
or
mov
ret
test
adc
xchg
ja
outsb
sbb
loope
xor
lods
and
sti
push
ret
cmp
cwtl
flds
fbstp
adc
sbb
sub
cld
out
enter
fsubrs
jp
ds
adc
adc
call
pop
rcr
int
popf
lods
or
lret
or
insl
add
xor
stos
sub
sbb
mov
lret
dec
or
inc
cmc
scas
sbb
into
push
ljmp
pop
repz
pop
cmp
add
jge
test
mov
loop
test
mov
sub
mov
pop
xchg
sahf
test
jmp
fmuls
mov
mov
push
jb
push
out
pop
aam
jl
push
test
or
sbb
ret
xor
xor
sarl
xchg
dec
dec
mov
test
insb
or
jge
movsl
hlt
push
dec
lods
ss
inc
or
dec
cmpl
pop
mov
roll
movsb
jno
pop
nop
mov
jecxz
mov
mov
jle
test
push
jecxz,pt
xor
mov
std
ret
clc
lcall
insb
enter
mov
mov
sub
bsr
aam
sbb
or
add
inc
pop
jnp
pop
cs
sbb
mov
push
dec
sub
sbb
sbb
out
pusha
jle
push
sbb
inc
ss
xchg
shrb
lea
xor
inc
ror
out
or
prefetchwt1
jb
popf
push
jecxz
lahf
inc
pop
dec
das
ja
sub
jo
mov
xchg
out
shl
into
fsts
add
leave
inc
cmp
xchg
roll
xor
cmp
es
inc
cli
cmp
cmp
sahf
scas
test
cmp
or
lret
xchg
mov
pop
cmp
lods
ficoml
je
lods
mov
adc
dec
adc
das
insl
cmpsl
or
in
mov
bound
jge
mov
pop
lret
mov
jne
sahf
shlb
popf
pusha
lods
mov
btsl
jae
lret
sarb
mulb
repz
lret
pop
test
pop
push
inc
enter
clc
das
out
push
mov
sbb
lods
mov
fsubs
ret
sbb
lret
out
js
inc
in
jo
icebp
mov
testb
notb
sub
sub
lds
mov
shrl
push
shrl
mov
mov
nop
and
xor
push
add
xchg
push
aaa
jle
xchg
adc
xlat
mov
dec
insl
je
into
rorb
fisubrl
mov
cmp
push
mov
aad
das
adc
adc
aad
dec
push
adc
in
and
lock
cmpsb
pop
push
ret
das
adc
fmul
cmp
xor
in
mov
addr16
rol
push
mov
ljmp
dec
jns
xchg
out
add
inc
js
xor
mov
push
push
sub
sub
add
hlt
push
out
outsb
test
sub
addr16
or
ret
inc
out
insb
ret
gs
daa
pusha
mov
mov
dec
adc
mov
dec
dec
popf
cmp
sub
movb
jle
lret
mov
fdivl
iret
ret
add
push
cltd
enter
popa
bound
pop
hlt
in
loope
jb
adc
movsl
push
popa
inc
jae
data16
loopne
xor
rorb
lcall
xchg
scas
popf
repnz
gs
pop
push
xor
lea
hlt
xor
push
jl
mov
xchg
enter
adc
adc
or
ret
ret
mov
jl
sbb
fnsave
mov
stos
sub
inc
outsb
popa
and
mov
and
pop
andl
lds
mov
fwait
cmpsb
sub
shl
mov
inc
cmpsl
push
aaa
into
add
pop
xchg
sbb
aam
mov
jg
cwtl
dec
lods
sub
mov
dec
cmpsb
add
jecxz
ss
sbb
sub
testl
fldl
es
fiaddl
dec
rol
inc
insl
imul
jmp
test
or
adc
pop
repz
add
mov
scas
xadd
stos
xchg
and
xchg
jns
xchg
jp
scas
xor
scas
mov
sub
leave
mov
cmp
add
adc
rcl
mov
and
mov
aam
cmp
fwait
aas
data16
ja
fists
dec
call
mov
loope
and
loopne
testb
adc
xchg
push
sar
ficomps
test
enter
jmp
mov
add
movzwl
sub
adc
shl
cmp
arpl
popa
and
hlt
pushl
inc
enter
push
pop
add
pop
pushf
sahf
dec
test
dec
shll
arpl
adc
cli
movsb
xchg
xchg
test
mov
and
loope
dec
ja
out
int
cltd
lea
lcall
cltd
sub
std
pusha
pusha
pop
cmpsb
add
add
lahf
pop
fwait
push
les
sub
sub
pop
aam
inc
repz
jno
popa
rorb
and
int3
xchg
rcll
sahf
js
sahf
lret
adc
pop
int3
out
mov
and
xchg
sbb
adcb
pop
les
and
push
aas
push
je
xchg
sub
pop
std
lods
push
mov
je
cmp
xchg
imull
sbb
sbb
mov
in
adc
and
mov
pop
jns
sub
xorl
xchg
fcomps
insl
cmp
arpl
jle
out
cmp
imul
fimull
inc
sub
xor
nop
xlat
int3
insl
lods
and
xchg
push
push
std
xor
sar
ret
out
icebp
imul
fwait
int
cmpsb
loop
pop
mov
xor
arpl
and
test
mov
outsl
lods
dec
in
outsl
dec
sarl
imull
xchg
inc
dec
or
or
pop
mov
adcl
insl
daa
sbb
mov
mov
or
mov
pop
popa
sbb
dec
shll
push
dec
pop
gs
mov
test
cmp
in
addr16
rolb
hlt
imul
push
stos
and
movsb
xchg
fstpl
cli
lret
jl
cmp
add
inc
rolb
stos
xor
es
push
sbb
jno
imul
cltd
stos
out
push
loop
sub
into
in
jns
lea
inc
sub
xchg
outsb
jnp
mov
aaa
mov
push
pop
stc
jno
imul
mov
and
add
movsl
in
sti
fnstsw
sbb
std
pushf
mov
or
cmp
mov
aas
fnstenv
out
test
push
mov
insb
sub
adc
add
push
or
jg
sub
pushf
insl
pusha
jne
sub
xchg
xor
lret
shll
sahf
cmc
sub
jmp
out
mov
subb
mov
jns
pop
pusha
repz
cmpl
insl
cwtl
pushf
push
xor
fidivrl
ret
fisubrs
push
xor
stos
sub
mov
cmc
xchg
or
inc
push
mov
mov
inc
fiaddl
dec
push
cmc
mov
sub
mov
dec
loopne
test
test
dec
fs
pop
xor
sbb
cs
mov
sbb
bound
fisubs
xor
int
xchg
outsl
shr
jne
inc
out
or
xor
or
xchg
aaa
ret
sbb
add
xor
flds
xor
jmp
mov
data16
movsl
xor
push
sti
fwait
rcll
aaa
xlat
out
mov
gs
jne
and
jb
test
xor
mov
inc
lods
enter
ss
jnp
stos
cwtl
stc
pop
lods
sbb
and
inc
loope
sbb
rcrb
fcmovnbe
sbb
enter
adc
push
and
pusha
xchg
mov
mov
add
xchg
mov
out
or
out
jg
cmpsl
xor
jg
scas
push
push
pop
jmp
repnz
mov
lock
mov
sbb
insl
repz
aas
pusha
xorb
mov
fsubl
rep
mov
pop
movsl
xor
xchg
pop
push
ljmp
js
mov
loop
cmpsl
ds
in
xor
sbb
movsl
das
lods
in
mov
push
push
push
fisttpl
negl
div
sti
mov
dec
pop
daa
dec
daa
faddp
push
jg
pop
and
lea
adc
dec
cs
stos
and
push
push
adc
repz
adc
inc
cmpsb
cwtl
popa
mov
xlat
push
inc
inc
std
cmp
test
test
sub
in
cld
cmp
jnp
jmp
lods
lods
jmp
mov
popa
jge
lds
sub
sbb
loope
loopne
loop
test
pushf
lds
mov
cltd
sbb
xchg
data16
xchg
push
mov
ds
aaa
or
xor
jae
js
leave
jb
lods
outsb
cltd
cmp
repnz
mov
inc
arpl
fs
or
ds
pop
add
clc
pop
mov
sub
in
popl
lcall
fs
pop
pop
dec
mov
xor
mov
push
jo,pt
push
jne
enter
rolb
data16
repnz
xchg
mov
insl
ds
inc
loope
cmpsb
in
or
cmp
xchg
xchg
clc
add
iret
cmp
stos
or
xchg
icebp
xchg
scas
add
movsl
shl
imul
test
dec
pop
xchg
cmp
or
mov
cmp
xchg
movsb
mov
sbb
inc
lock
outsl
pop
adc
inc
or
xor
jb
sub
mov
int3
sub
test
xchg
add
roll
outsb
pushf
cs
xchg
or
inc
roll
loope
cmp
or
ficompl
xchg
daa
test
and
clc
movsl
lea
xchg
scas
jne
cmc
pop
cmp
mov
xchg
pop
cmp
pushf
push
jns
data16
inc
fwait
inc
das
cmp
and
pop
fidivrl
add
cmp
xchg
sti
fldt
int3
in
repz
dec
shl
or
aas
popf
jle
sub
pusha
lods
xor
lcall
mov
lahf
cmp
cld
enter
mov
push
cwtl
pop
ds
xchg
lahf
cmp
sbb
sar
outsb
ret
ds
xchg
fidivs
dec
stos
mov
dec
in
cmp
sbb
mov
daa
js
jecxz
mov
aam
inc
pop
data16
add
mov
jno
xchg
xor
cmp
push
or
inc
lea
xor
mov
popa
pop
hlt
sub
popa
enter
xor
push
std
mov
test
popf
arpl
cmp
or
pushf
shll
mov
loopne
sbb
jno
into
xchg
ret
pop
cmpsl
or
ss
ret
ret
inc
insb
lahf
out
inc
xor
cmp
das
cmp
xor
pop
adc
les
shlb
jbe
out
push
cmpb
int
int
cmp
ds
scas
or
lcall
and
pusha
push
daa
dec
rcrl
jle
lahf
or
adc
out
fcmovnbe
mov
jg
fs
movsb
subl
cs
mov
jge
sbb
adc
push
add
mov
pop
push
mov
xchg
xchg
and
shl
data16
pop
or
int3
mov
cmc
test
shrl
rorl
xchg
insl
iret
dec
add
mov
mov
xchg
xchg
xchg
mov
iret
sub
pop
add
sub
out
mov
jo
pop
sub
enter
cmp
sub
testl
lahf
inc
das
jo
and
inc
or
mov
divl
mov
push
data16
clc
cmp
js
cmp
mov
arpl
lods
push
andps
mov
sbb
xchg
inc
adc
push
jge
mov
sub
rorb
inc
cmp
xor
ds
cmpsl
jl
test
sahf
cli
lods
pop
adc
in
mov
repnz
rorl
xor
cmc
xor
imul
push
and
adc
repnz
aaa
stos
pop
pop
cmp
int
and
jg
inc
movsl
xor
mov
cmp
mulb
mov
fcmovnb
stos
adc
mov
cmpsb
add
pop
dec
pop
popf
repz
loopne
mov
lods
cs
mov
repz
arpl
pop
jle
scas
lods
jae
in
or
pushf
add
add
andb
fxch
mov
add
rcl
pushf
movb
inc
call
mov
test
pop
adc
inc
popf
mov
cltd
jae
mov
xchg
push
pop
adcb
sub
mov
test
push
sbb
pop
leave
cmp
pop
outsb
shrl
sbb
and
dec
dec
xchg
dec
lock
pop
call
out
xchg
jmp
pop
xchg
mov
das
fwait
push
mov
fisubrl
sub
sub
push
mov
addl
cmp
add
ror
sbb
ja
mov
mov
pop
stos
mov
sbb
outsb
out
mov
xlat
jmp
xor
daa
and
notb
ret
aam
xchg
push
lret
aam
clc
or
mov
cltd
fnsave
jb
lret
cmp
ss
push
mov
xchg
adc
std
xor
leave
int
es
outsl
hlt
add
out
aaa
mov
cli
adc
adc
gs
and
shlb
cld
loopne
inc
mov
das
mov
sbb
jae
cmc
mov
jmp
addb
call
rcl
jae
mov
cld
rclb
loopne
add
push
mov
dec
cmp
and
rcl
sbb
jno
push
and
ljmp
pop
rcrl
into
fildl
add
cmc
mov
mov
jge
pop
mov
cmpsl
xchg
sub
mov
xor
mov
jl
jns
out
adc
fiaddl
movsl
jmp
test
push
add
loop
push
out
sbb
xlat
inc
test
push
dec
int
adc
repz
stos
sub
push
pop
or
in
jb
push
das
out
nop
in
mov
pop
mov
jnp
aas
mov
xchg
in
dec
orl
pop
add
nop
fsubr
aaa
sbb
repnz
enter
mov
enter
pop
fadds
mov
negl
dec
loope
push
pop
lahf
cltd
rcl
and
clc
clc
fimuls
aad
aam
idivb
imul
pop
or
stc
ljmp
cwtl
push
fs
fdivrl
cmp
xor
mov
loope
xor
push
adc
push
push
into
and
out
mov
mov
aas
jae
mov
sub
aas
push
sbb
fbstp
mov
enter
movsl
mov
addr16
mov
sub
data16
insl
hlt
push
lcall
das
lods
ss
adc
scas
xchg
pop
mov
sub
pop
and
stos
add
mov
sub
or
lret
xor
mov
das
xchg
bound
lret
adc
push
mov
cld
xor
mov
sahf
jecxz
mov
mov
stos
dec
push
push
push
js
aam
pcmpeqb
push
mov
test
imul
subb
ret
xchg
rcrl
mov
mov
cmp
vcvtdq2pd
loop
mov
mov
adc
addl
ret
sub
dec
push
push
aad
xlat
cmp
inc
stos
jl
pusha
rcrb
xor
xor
das
sbb
and
xor
aad
push
scas
and
lock
and
lcall
xchg
push
dec
loopne
sbb
mov
lods
push
xor
scas
adc
sub
out
pop
movsl
lcall
loopne
cs
push
sbb
jne
dec
and
lret
out
push
sbb
sub
sbb
pop
and
cli
cwtl
imul
fs
mov
push
inc
inc
shll
and
cli
mov
leave
loope
inc
or
jg
insb
adc
xchg
mov
mov
sub
adc
mov
divl
pushf
mov
outsb
inc
inc
in
shl
fstpl
fwait
in
fnstcw
push
jl
cmc
fadds
andb
rorb
sub
jmp
loopne
lahf
dec
flds
and
mov
xchg
sub
xor
lock
fiadds
and
enter
btc
push
cmp
mov
ja
das
incb
icebp
add
je
jnp
les
pop
mov
add
lock
out
fwait
sub
lret
test
loopne
sub
lods
xor
jns
lret
pop
jl
ds
iret
or
mov
cmpsb
leave
mull
dec
jge
outsl
neg
insb
out
movb
repz
sahf
mov
xcrypt-ecb
cmpsl
mov
xor
ljmp
repz
outsl
lock
pop
stos
xchg
ret
lods
dec
jmp
mov
popf
jecxz
in
pop
mov
insb
sbb
push
jnp
jmp
push
dec
mov
cli
mov
xlat
imul
dec
sub
adcb
iret
and
fstpl
inc
lret
addr16
notl
ds
in
adc
js
les
fdivrl
bound
in
or
cmp
sbb
in
pop
pop
mov
cmpsl
aad
inc
push
fsts
cmpsl
iret
int
inc
cli
and
daa
mov
in
or
rcll
fwait
pop
loope
sbb
sub
sbb
xchg
dec
nop
sbb
inc
jecxz
push
add
cmp
jg
movsl
sbb
pop
mov
daa
cmp
mov
test
fwait
lds
pop
adc
add
rcrb
inc
movsb
jbe
sbb
ss
cld
insl
dec
inc
jge
mov
pop
add
in
dec
pop
sbb
pusha
push
subb
into
ss
add
fnstenv
lods
subps
in
lcall
into
adc
out
adc
lahf
push
je
jne
outsb
adc
xchg
push
fldt
cmpsl
or
xchg
test
mov
test
outsb
adc
loopne
lcall
in
adc
out
loopne
push
sbb
dec
in
push
lea
daa
in
cmp
xor
pushf
push
fcmove
int3
in
push
pop
divb
xor
out
iret
jp
pop
ret
or
shrl
aam
and
out
add
in
loopne
faddl
lods
hlt
xchg
mov
cmp
fucomp
iret
pop
mov
adc
lods
sub
adc
xchg
repz
push
and
rorb
jns
pop
leave
pop
out
jae
ds
or
mov
cwtl
sub
ss
adc
cs
add
shlb
inc
stos
pop
jb
sbb
leave
cmp
pop
xor
fcoml
sbb
add
mull
cmp
in
lahf
das
mov
jb
jne
mov
sub
insb
adc
call
lahf
mov
and
jb
je
sbb
popf
roll
lret
loope
lock
nop
es
nop
jecxz
int
sbb
std
adc
cmpb
dec
mov
cli
movsl
cmp
inc
lods
iret
call
jecxz
adc
aas
sub
ficoml
pop
cltd
pop
les
test
mov
imul
shl
cs
jae
xchg
ss
lret
pop
mov
into
push
sub
jg
int
pop
popa
jle
imul
dec
inc
int
sbbl
enter
pusha
sbb
pusha
movsb
jbe
lds
cmp
add
xchg
inc
shll
jnp
insl
pop
jle
in
push
fwait
scas
inc
movsl
dec
bound
orb
imul
jmp
fidivl
into
call
pop
sub
imul
fwait
xchg
clc
mov
jbe
lods
ds
xor
call
outsb
in
es
ja
jno
adc
cmp
stc
sbb
mov
mov
mov
insb
test
pop
fsubrp
pusha
cli
test
sbb
dec
cmp
les
andl
mov
std
adc
xchg
pusha
loop
sbb
pushf
daa
test
rorb
pop
leave
lret
fiadds
and
sti
aaa
pop
fwait
lret
jmp
aaa
stc
jb
xchg
cmc
push
mov
inc
jns
fisubrs
inc
jae
sub
arpl
pop
mov
sbb
add
les
sub
mov
cld
or
mov
in
ficoml
pop
jo
cmp
aad
jp
je
test
lock
loopne
inc
add
xchg
idivl
add
and
xchg
sbb
add
mov
mov
mov
adc
mov
xchg
outsb
dec
loope
daa
mov
int
je
les
imul
repnz
inc
fdivrp
movsl
inc
dec
ud0
movsb
mov
leave
jnp
nop
int
xchg
pop
adc
orb
pushf
push
mov
mov
push
and
pop
mov
adc
cmp
cmc
lock
xor
mov
repnz
or
mov
xchg
mov
outsl
sbb
mov
jp
push
data16
stos
add
inc
inc
mov
mulb
cmpsl
sub
jne
jnp
loopne,pn
mov
sub
push
pop
rorb
adc
mov
call
aad
in
je
push
fnstenv
daa
xor
imul
out
jl
popa
dec
or
mov
ss
jne
sahf
mov
dec
shl
or
xorl
out
pop
jl
sbbb
int3
gs
shrl
outsb
sar
insb
push
lock
mov
sbb
int3
jns
jno
daa
aaa
add
mov
movsl
push
pop
jmp
push
aaa
lods
or
shr
stc
popf
and
xchg
mov
push
sbb
clc
mov
mov
rcr
dec
xor
or
jg
dec
push
mov
and
clc
popf
jae
outsb
mov
rcl
mov
das
push
addb
mov
jns
lea
lret
inc
popf
dec
mov
int
mov
fnsave
test
lds
mov
pop
aas
dec
shl
popa
test
add
xchg
inc
xchg
xor
push
insl
sub
fmul
mov
xchg
jns
data16
pop
jg
inc
jl
fldenv
mov
mov
cltd
ljmp
int
ljmp
fdivr
mov
or
and
jne
imul
push
pusha
sub
mov
mov
add
add
imul
push
inc
add
sub
pop
gs
fucompp
out
imul
xchg
repz
push
out
arpl
loopne
sahf
mov
insb
xchg
mov
jp
insb
inc
push
xchg
jecxz
xorl
out
dec
push
adc
arpl
push
sarl
pop
pop
lcall
jp
sub
push
aam
repnz
cmp
pop
pop
xor
and
out
mov
mov
add
or
jno
sbb
dec
lea
fstps
movsl
loopew
xchg
or
fs
push
popa
adc
cmp
mov
fcoml
or
adc
sbb
add
dec
ja
lea
rcrb
std
das
mov
pop
out
cmp
divl
cmpsb
sti
add
lcall
dec
in
pop
cmp
lahf
pop
rorl
xchg
stos
filds
lods
push
mov
movsl
push
or
xor
mov
cwtl
push
lret
movsb
push
mov
adc
or
loope
not
xchg
lea
dec
sbb
push
mov
in
jo
xor
xor
sbb
adc
inc
xor
mov
pop
mov
dec
pop
add
and
xor
add
pushf
sub
lahf
mov
dec
cmpsl
xor
xor
sbb
or
and
push
sbb
aad
mov
inc
js
adc
in
loop
mov
stos
mov
rcrb
and
cmc
and
push
cmpsb
popf
push
xchg
jno
je
daa
fiaddl
cmp
lahf
jae
cmc
call
les
ja
push
xor
inc
pop
out
jnp
mov
cld
cmp
rcrl
popf
dec
popf
aas
jbe
loopne
cmp
push
ficoml
mov
cld
jecxz
mov
cmp
rorl
cmpsl
ds
add
push
push
pop
in
pushf
out
cmp
sbb
xchg
int
aas
or
lret
popa
mov
in
sbb
nop
push
sti
pop
movsl
cmp
mov
lret
imul
test
cmp
pop
push
cs
xchg
xchg
cmc
repz
clc
and
fcos
mov
js
shll
dec
sbbb
shll
orb
cmc
or
gs
mov
pop
jg
mov
cmp
cmc
xchg
je
jb
and
dec
cltd
xor
mov
leave
sub
mov
insl
out
xor
imul
add
sbb
sbb
jge
mov
jae
sub
lret
mov
jb
lds
xchg
push
jmp
jnp
cmc
ds
and
pushf
adc
mov
push
add
and
fisubs
mov
outsl
xchg
xchg
movsl
loopne,pn
into
xor
dec
xor
out
fmuls
in
pop
icebp
pop
mov
pop
jl
add
enter
and
sahf
and
xor
insl
inc
xor
mov
adc
sti
cmp
aas
fcmovu
push
xor
pop
cmpsb
shlb
mov
aaa
int
push
cld
bound
add
test
mov
cmpsl
push
cmc
int
jmp
movnti
repz
sub
xchg
jle
rclb
mov
push
add
pop
popf
cmp
cli
mov
dec
jns
jnp
sub
orl
pop
mov
push
addr16
mov
sub
inc
mov
and
cmp
sub
test
xor
lcall
xor
dec
dec
sahf
mov
pop
gs
arpl
push
mov
in
int
movsb
nop
dec
xchg
stc
or
inc
inc
mov
dec
inc
cmp
push
add
add
and
mov
sbb
pop
int3
dec
fdivl
lea
mov
adc
sbb
test
hlt
jae
imul
stos
and
icebp
leave
jecxz
dec
inc
push
adc
incl
mov
std
ss
xor
jle
sub
pop
out
orl
mov
subl
popa
adc
insl
filds
call
cmp
out
jns
sbb
sbb
movsb
dec
out
int3
test
adc
int3
mov
test
push
sub
push
add
aam
loopne
or
adc
sahf
loop
fadds
lret
inc
sub
jne
cmp
sub
jo
pop
sahf
jl
pusha
pop
and
or
sbb
subb
mov
sahf
xor
mov
sub
nop
rorb
push
adc
xor
jo
mov
ds
test
push
daa
sbb
mov
les
inc
pop
pop
jle
cwtl
mov
jnp
lret
outsl
fdiv
popa
xchg
insl
adc
out
pop
and
shlb
test
xchg
mov
mov
add
lds
call
popf
rorl
in
mov
fdivrl
push
cmp
sahf
mov
push
jp
sti
inc
insb
adcl
cwtl
mov
ret
adc
add
ljmp
or
popf
mov
adc
hlt
dec
and
lret
hlt
mov
jmp
in
lcall
lea
divb
insb
push
jecxz
adc
fwait
in
push
mov
les
ljmp
pusha
adc
xor
popf
dec
mov
push
aaa
in
push
pop
stc
xchg
ds
mov
into
adc
cmp
pop
clc
cwtl
int3
repz
cltd
daa
jnp
add
stos
ljmp
mov
daa
insl
jae
pop
or
mov
js
cmp
mov
jnp
inc
xlat
gs
xor
stc
imul
push
pop
mov
je
in
pop
mov
sbb
dec
sub
xlat
or
pop
aaa
jns
sarl
push
into
addr16
popf
add
fstpl
test
or
les
addr16
xor
scas
sbb
sahf
and
cmp
xchg
inc
sub
pushf
insb
mov
arpl
mov
fwait
xchg
in
or
add
cmp
pop
mov
sub
sbb
cmp
mov
lcall
cmpsl
adc
insl
pop
std
xchg
and
in
std
xchg
xchg
fs
xchg
jl
ja
std
out
xchg
test
clc
cmpsl
mov
inc
imul
push
cmpsl
push
out
addr16
cmp
sbb
and
fwait
push
mov
loop
sub
cs
in
inc
icebp
pop
and
adc
inc
add
int3
subl
sub
ret
cmp
in
shlb
sub
enter
add
scas
dec
and
lea
or
adc
leave
pop
inc
leave
in
inc
out
add
mov
into
shlb
jno
sbb
sub
repz
inc
cmc
mov
sub
scas
aad
and
insl
xlat
and
add
pop
stos
pop
cmp
gs
push
mov
int3
dec
das
sub
in
push
xchg
dec
ret
cmp
outsl
sub
jne
cmpsl
ret
mov
loope
outsl
fcomps
loop
and
cltd
call
repnz
add
ret
xorb
out
out
in
adc
cmpsl
popf
lahf
gs
sub
aad
call
loopne
inc
mov
lahf
std
pop
xchg
ret
adc
stc
jle
adc
popf
daa
lds
test
jo
add
mov
xor
xchg
inc
mov
insb
mov
test
movsl
dec
xchg
and
add
ret
aad
pop
lret
test
push
adc
push
jmp
andl
scas
lock
mov
fisttpll
imul
mov
sub
loopne
adc
inc
mov
adc
leave
in
ja
pop
inc
ret
xchg
add
hlt
lock
mov
xlat
add
lret
dec
shlb
ss
and
push
inc
ja
adc
jo
inc
imul
inc
sub
stos
mov
fst
in
jecxz
aam
mov
push
push
mov
fdivrl
cmpsb
push
das
jo
shrb
popf
cmpsb
mov
xchg
xor
mov
ret
pop
out
jo
mov
and
cmpsl
push
xor
dec
push
negb
pop
sbb
fwait
js
mov
fists
popf
rorb
sub
sub
addr16
mov
adc
adc
loop
lods
pop
and
adcb
jmp
leave
adc
ficompl
lcall
xchg
insl
das
mov
in
jne
popf
roll
xchg
cs
sbb
jb
aam
jecxz
cli
mov
scas
pop
push
flds
stos
add
xchg
xor
mov
lods
dec
cltd
mov
fs
mov
fdivp
scas
adc
test
cmp
push
lock
test
lods
in
ljmp
sti
add
pop
add
jb
pop
ljmp
repz
clc
out
sub
inc
test
leave
es
inc
jo
inc
mov
pushf
dec
aaa
rcrl
pushl
or
int3
mov
push
pop
mov
rcl
cmc
hlt
jbe
pop
mov
inc
imul
int
je
bt
xor
daa
sub
pop
pop
sbb
jl
fsubl
insl
mov
sub
jmp
sti
add
or
rol
jmp
call
add
arpl
call
mov
pushl
add
mov
inc
pop
scas
push
pop
mov
jmp
sbb
int3
lahf
pop
jmp
popf
movsb
jne
test
lock
lods
jl
cs
push
or
stc
mov
pop
sti
leave
ja
in
inc
rolb
notl
xor
mov
out
ret
push
or
and
aas
iret
movsl
pop
adc
pushf
pop
scas
push
mov
jnp
fdivp
lret
lods
mov
sbb
sbb
jecxz
and
adc
data16
icebp
out
lods
test
mov
in
daa
outsb
fldl
sbb
out
insb
inc
bnd
pop
mov
dec
jl
fisubrl
es
sub
add
jl
je
adc
out
icebp
stos
xchg
jl
rcrb
and
bound
xchg
push
jmp
rcl
cmp
dec
popf
neg
adc
push
test
call
sbb
mov
pusha
js
jnp
mov
imul
scas
cmp
sbb
test
push
dec
pop
in
cmp
icebp
jbe
pushf
mov
enter
xorb
add
and
xchg
adc
push
and
mov
inc
fcoms
sub
cwtl
fisttps
mov
mov
inc
shrl
ret
mov
mov
fcompl
jge
sbb
hlt
jno
adc
adc
jl
repnz
adc
imul
mov
movl
jbe
push
push
add
push
in
cmpsl
pop
mov
lock
mov
mov
rolb
shll
cld
pop
push
mov
pop
mov
inc
loopne
mov
push
popa
push
push
lock
push
std
and
push
lods
scas
sbb
ljmp
pop
xlat
pusha
mov
push
mov
neg
xor
adc
hlt
rcll
roll
mov
mov
scas
clc
xor
filds
fmuls
mov
enter
jbe
cmp
int3
push
ss
cmc
call
mov
sbb
cmp
test
adc
xchg
dec
icebp
out
ret
mov
mov
cmpsb
sbb
je
lcall
and
sub
sbb
fldenv
int3
icebp
xor
mov
pop
into
push
jle
inc
test
movsl
rorb
xor
lret
mov
movsb
ficoms
int3
sbb
sahf
dec
pop
jo
gs
dec
adc
iret
testb
leave
sub
jo
jo
andb
pop
js
arpl
adc
pop
repz
test
sbb
xor
xor
xor
mov
inc
inc
sahf
out
fcomip
roll
test
out
jb
rep
lea
inc
loope
jne
adc
sbb
jne
mov
xchg
out
mov
xor
mov
jae
cltd
and
stos
jae
push
data16
mov
stc
lret
mov
jnp
loope
dec
in
cmp
mov
adc
pop
movsb
adc
pop
jl
ja
lahf
mov
clc
in
ficompl
les
mov
mov
xor
test
in
ret
inc
mull
cmp
leave
sbb
std
jnp
rcrb
bound
sub
pop
mov
clc
inc
popa
cwtl
mov
lret
bnd
push
jns
inc
or
jle
jno
in
sbb
adc
pushl
push
lret
cmpsb
movsb
ret
std
test
lods
gs
aam
inc
push
xor
jb
mov
cmp
stos
clc
push
mov
orl
or
subl
lods
or
xchg
fildll
pop
mov
iret
dec
jae
or
fisubrs
loop
out
add
push
or
cs
push
push
insl
out
jb
int
mulb
add
sub
push
add
fdiv
das
and
stos
leave
ret
jno
imulb
push
adc
add
fnstcw
xor
add
stos
mov
jp
arpl
ds
rorl
jae
or
pop
inc
xor
sbbl
pop
pop
fwait
inc
inc
lods
icebp
mov
out
rcrb
and
push
leave
scas
test
int
sub
mov
push
js
adcl
cmp
adc
sbb
nop
inc
jae
je
jo
mov
sub
jmp
dec
fwait
adc
lea
jmp
sahf
dec
pop
aas
push
clc
adc
loope
out
in
xchg
mov
mov
cs
fwait
pop
xchg
adc
inc
aad
in
nop
push
jmp
iret
mov
aad
movsb
push
js
jae
popf
fwait
das
pop
jmp
andb
add
out
dec
push
push
cmp
jbe
add
jle
mov
imul
cmp
sub
push
ret
out
and
fcomip
sub
jno
push
fcomip
jo
stos
and
inc
mov
mov
incb
andl
sub
add
mov
hlt
push
out
mov
fs
imul
fs
sbb
mov
xchg
inc
les
mov
add
cld
add
push
push
xchg
lods
pop
fisttpl
push
inc
aad
or
stos
push
and
mov
cmp
add
cltd
adc
dec
mov
mov
subl
dec
push
mov
xor
mov
sbbl
mov
dec
js
or
testl
cli
ret
into
fs
cmp
dec
fildl
mov
xor
ret
mov
ret
xorb
adc
ret
ss
leave
xor
mov
in
pop
jge
add
cld
pop
arpl
sbb
dec
xchg
lret
into
fcmovb
push
aaa
out
sti
adcl
mov
jne
repz
cld
out
jecxz
rorl
enter
mov
or
lret
adc
dec
fldcw
sbb
push
or
cltd
out
cmpsw
mov
jo
out
adc
dec
mov
fdivrl
and
pop
inc
imull
pop
pop
je
mov
mov
mov
outsb
iret
fnstcw
outsl
mov
in
and
clc
incl
call
out
mov
sbb
and
enter
or
ljmp
jno
inc
jecxz
clc
mov
std
mov
jae
out
std
sub
notb
xchg
stos
xor
loop
push
loope
jmp
int3
cmp
iret
movsb
mov
out
mov
push
xchg
mov
ja
scas
mov
xchg
mov
jae
jae
dec
add
cmp
scas
jbe
lea
push
ja
leave
xchg
outsl
divl
sub
cmp
xor
leave
xchg
fidivrl
inc
or
add
push
das
ret
mov
mov
inc
cmpl
pop
sub
ret
dec
add
mov
and
enter
xchg
cmp
dec
arpl
lods
lret
popa
dec
sbb
inc
xchg
mov
sbb
fs
sbb
cmpsb
notb
pop
or
jne
ljmp
jle
or
mov
data16
push
cld
addr16
adc
and
fldcw
in
xor
popa
add
aaa
sub
rclb
jl
mul
fcomip
mov
fdivs
adc
ret
repnz
pushf
inc
mov
dec
out
repz
xor
push
jne
dec
push
jno
add
cmpsb
sbb
fistpll
aas
out
iret
inc
mov
nop
js
rcll
int3
cltd
icebp
pop
leave
mov
add
and
insl
mov
pop
arpl
pop
scas
lods
jne
les
clc
and
adc
mov
cmp
push
adc
popa
shrb
arpl
push
test
sbb
add
bts
mov
daa
es
aas
sbbl
mov
or
repz
movnti
daa
adc
cmp
fistpll
or
adc
negb
cmpsb
int3
pusha
add
pop
or
fidivrs
sbb
pop
jp
adc
daa
sub
out
adc
insb
sub
sub
shrd
dec
inc
inc
dec
push
lret
fwait
mov
and
xor
mov
and
sti
adc
sbb
lods
rclb
cmp
pop
ds
pop
pop
aam
mov
mov
ror
pop
jns
or
daa
insl
mov
dec
bound
andl
cld
rcll
ss
popf
mov
fdivl
lods
dec
cld
fdivs
pop
pop
fwait
iret
movsl
gs
pop
mov
sub
outsb
cld
pop
test
ss
mov
faddl
jle
rcl
jmp
adc
push
fisttpl
cmp
or
or
push
pop
aas
mov
or
leave
cld
js
stos
and
popf
mov
or
push
inc
and
xor
leave
stos
les
cwtl
sub
cmp
insl
and
dec
or
clc
mov
push
sub
push
sbb
xchg
cmc
push
data16
cmp
push
das
cmp
xchg
jle
mov
dec
into
xor
mov
aas
push
push
inc
add
sti
mov
sbb
jne
fdivrl
dec
adc
pop
addr16
add
gs
rorl
aam
iret
sub
shrb
test
jp
mov
orb
aaa
jmp
outsb
je
mov
int
pushf
test
jp
xor
xchg
scas
mov
fistl
mov
xlat
pop
jecxz
pusha
inc
or
leave
sbb
mov
xchg
adc
dec
pop
daa
fs
xchg
shll
dec
loope
movl
jbe
jo
mov
outsl
aad
cmp
mov
sarl
scas
mov
std
cmp
mov
add
addl
adc
shll
cmpsb
in
sarl
jne
stc
xor
ds
int
popa
pop
hlt
sub
cmpsb
inc
bswap
mov
aam
add
loop
jno
loopne
jae
dec
gs
bswap
xchg
sbb
or
mov
dec
test
clc
arpl
lea
jnp
mov
jmp
mov
xor
pushf
cmp
sub
cmpsl
ss
or
lock
or
inc
stc
jmp
cwtl
ljmp
mov
push
mov
mov
pop
mov
out
push
mull
adc
sub
jg
movsb
dec
mov
mov
push
jp
cmp
mov
sbb
or
sbb
and
sub
adc
cmpsb
pusha
int3
loop
outsb
pusha
inc
push
add
rep
inc
sbb
mov
jg
sbb
insb
mov
sub
xchg
push
imul
mov
leave
mov
mov
fs
lahf
je
lahf
push
cmpsl
lahf
mov
and
xor
push
or
push
jge
mov
pop
cmp
repz
scas
jmp
insl
movsb
scas
cmpsl
pop
aaa
fdivrs
ret
rol
or
jle
aas
cli
jecxz
cli
pop
out
sbb
into
xchg
inc
lcall
mov
dec
stos
mov
fisubl
lahf
sbb
clc
inc
nop
imul
dec
jno
or
jle
aam
cmp
rcrb
imul
pop
mov
stos
daa
sahf
sbb
cmpsb
test
popf
mov
xchg
mov
lahf
les
cmp
in
pop
dec
mov
lea
cmpsb
sbb
cltd
jge
in
sub
push
pop
pushf
leave
cmp
mov
rcl
in
sti
inc
sub
mov
adc
inc
sbb
xchg
push
shlb
call
sar
loop
ficompl
push
hlt
push
arpl
xchg
test
or
hlt
jns
mov
stc
pop
sahf
nop
out
je
jg
aam
sbb
ror
popf
push
repnz
test
orl
push
push
dec
ret
stos
adc
fsubr
movsl
cmpl
adc
into
dec
xlat
jmp
ds
dec
fmull
dec
mov
pop
add
pop
lret
loop
ret
out
jnp
ret
hlt
fsubl
cmp
pand
mov
cmp
xchg
adc
call
push
dec
shll
jb
movsl
in
xor
test
pop
incb
xor
cld
pop
ss
aad
cmp
pop
mov
sbb
mov
push
jno
fldl
dec
mov
add
jmp
add
incl
dec
ja
sub
and
js
jg
cmpsb
and
add
jns
mov
phsubsw
testb
cld
push
iret
out
jp
iret
pop
popa
add
aad
pushf
mov
xchg
cs
push
stos
jnp
pop
mov
cmp
ret
out
jle
xor
ds
cmp
aad
xor
outsl
ds
fcmovb
fbstp
mov
pop
inc
gs
xchg
dec
xchg
lahf
mov
insb
scas
test
adc
aaa
popa
lea
aam
jmp
push
and
pop
cmp
stc
mov
gs
ds
scas
lds
jae
sbb
jg
les
lock
addr16
insb
jecxz
test
stos
dec
mov
call
ds
sarl
push
fcoml
push
wbinvd
adc
sahf
ds
sbb
in
loope
bound
test
rorb
pushf
dec
je
pusha
mov
add
leave
push
lods
mov
adc
testb
icebp
sahf
pusha
pop
adc
enter
push
cmp
mov
mov
mov
rclb
xchg
lock
pop
inc
mov
decl
std
ds
aaa
push
mov
cmp
mov
jmp
addl
lock
movsb
jnp
shrb
pop
cmpsl
pop
pop
shl
jo
adc
inc
inc
mov
mov
add
scas
out
loopne
pop
pop
xchg
add
cwtl
inc
addb
scas
mov
dec
inc
cmp
or
shrl
xchg
stos
sub
mov
xor
pop
and
xlat
pop
int3
nop
mov
add
andb
orb
inc
mov
xor
and
aaa
xchg
cmp
shrl
and
jge
mov
fstps
xlat
out
setg
xchg
cmp
shlb
push
jb
xchg
or
movsl
fwait
pop
and
inc
daa
movsl
mov
mov
or
out
mov
pop
cltd
jae
fs
and
pop
add
and
out
push
test
jmp
test
leave
cmp
pop
mov
jge
cmp
rol
mov
call
mov
jmp
testl
jne
insb
push
push
sub
jle
inc
or
fistl
sbb
aam
add
inc
xchg
int
cwtl
insb
repz
in
je
mov
cmpsb
stc
pop
daa
cwtl
aam
push
jle
xchg
xor
push
cmpsl
divb
mov
jbe
imul
jg
lret
xor
push
pop
std
mov
push
dec
test
mov
sbb
ficomps
dec
xor
rcrl
sarl
inc
addr16
imul
outsb
sar
into
or
fwait
dec
adc
mov
jno
fwait
add
out
pop
mov
daa
or
mov
outsl
scas
jle
popa
bound
pop
dec
pcmpgtd
dec
enter
cmc
fisttpl
mov
sbb
push
int
xor
mov
dec
inc
push
lea
arpl
out
aam
bnd
daa
jno
mov
and
jne
dec
xchg
jns
or
push
mov
push
inc
or
cmp
repnz
push
push
xor
loope
adc
ss
pop
popa
adc
out
jb
xchg
jb
lods
sub
cmpsb
cmp
bound
pop
or
jno
xchg
and
push
xor
in
mov
stc
dec
fisubrs
addr16
out
and
jno
dec
xchg
std
sbb
data16
jecxz
jno
repz
sti
ror
cld
sarl
cmp
pop
adc
lret
mov
push
negb
or
adc
and
insb
cmpsl
roll
jle,pt
mov
cs
mov
xchg
jmp
mov
enter
shll
mov
arpl
and
cs
adc
lcall
inc
dec
in
jecxz
aam
sub
push
loop
fcom
xchg
and
outsl
mov
cmp
or
mov
xor
mov
inc
cmp
dec
hlt
mov
cmp
shll
xorl
mov
jbe
aad
fcomp
adcl
and
lcall
dec
xchg
mov
lods
shll
xchg
dec
push
fcompl
into
cmp
fmuls
mov
sub
cmp
dec
jge
popa
jl
dec
inc
xchg
lret
enter
loope
jp,pt
out
sbb
or
cmp
add
ljmp
xor
sti
pop
ljmp
jmp
aad
aaa
ret
fs
adc
sub
xchg
and
stc
aam
cmp
hlt
mov
cmp
shll
enter
mov
or
aaa
jno
add
leave
repz
sbb
int3
sbb
sbb
iret
repnz
adc
adc
shr
pop
push
jbe
and
or
lds
push
or
inc
pop
xor
imul
test
jbe
add
xor
ret
inc
push
cmovge
and
mov
cmp
pop
inc
or
inc
push
adc
mov
repz
dec
sarl
cmp
adc
sbb
cmp
sub
test
je
ljmpw
gs
pop
fistpl
add
imul
lret
fwait
mov
mov
in
xchg
std
xor
subb
push
lods
jo
mov
dec
mov
sbb
int3
lds
xchg
sub
lret
mov
pop
jb
imul
subb
sub
mov
out
scas
mov
push
jnp
movsb
xor
cmp
mov
shll
or
xchg
sub
daa
movsl
imul
test
scas
shl
stc
mov
sarb
xor
pop
adc
inc
aaa
push
or
out
frstor
cmp
lods
sbb
mov
and
sub
sub
xchg
pop
imul
sub
mov
and
inc
fadd
out
addl
std
jbe
fwait
test
cs
or
ljmp
test
mov
mov
mov
push
xchg
jg
sbb
adc
or
mov
mov
aaa
fisttpl
or
push
mov
xchg
dec
mov
mov
cmp
adc
std
cld
adc
mov
cltd
stc
add
ret
mov
fdivs
pop
xchg
jne
adc
in
xlat
xor
inc
ljmp
mov
inc
lea
fcoms
and
sbb
mov
es
enter
imul
dec
jb
fsts
pusha
frstor
push
aad
mov
pop
das
addr16
mov
pushl
xchg
pop
inc
pushf
pop
dec
xor
aad
jb
test
or
movsb
pop
fistpl
dec
xchg
jne
out
out
pop
ja
xor
cmp
cwtl
xor
mov
push
std
or
into
cmpb
je
pop
fcoms
leave
movl
inc
mov
mov
add
add
clc
test
shlb
into
jmp
fcom
outsb
fs
mov
fimuls
push
cli
cmp
or
dec
int3
addb
dec
out
lcall
mov
aad
cmp
fstpl
loopne
ret
mov
mov
stc
jge
xchg
mov
imul
cmp
hlt
outsb
push
ret
aaa
nop
cwtl
enter
lahf
and
and
mov
dec
filds
rcrl
cs
cmpb
push
jae
fnstsw
push
xor
push
sub
sub
xlat
mov
aaa
jbe
add
mov
jmp
cmpsb
mov
sbb
jo
es
idivb
sahf
dec
jp
adc
push
cltd
inc
in
shr
pop
mov
hlt
les
dec
pop
cmpsl
mov
insl
mull
ljmp
add
cwtl
lret
pop
test
sarb
adc
jbe
sbb
imul
push
ror
popf
lea
lock
js
push
jno
xchg
mov
xchg
or
add
lahf
jb
pop
out
ret
push
les
clc
cwtl
jge
cmpb
mov
pushf
push
jno
sbb
jo
dec
xor
std
push
lret
xchg
sti
cmpsl
mov
frstor
jge
cmpsl
mov
mov
cmp
mov
dec
push
in
in
fcoml
mov
add
fadd
dec
add
mov
sarl
mov
data16
popw
frstor
insl
ljmp
bound
pop
sbb
adc
pop
in
push
pop
and
lods
cmc
jbe
or
sub
xor
cmp
test
inc
mov
cld
adc
out
adc
jne
sbb
lcall
sub
mov
xlat
mov
cli
lods
insl
mov
mov
push
pop
cmp
int3
ret
popa
dec
and
push
adcl
push
in
sub
stc
pushf
dec
out
pop
inc
sbb
adc
and
rorb
dec
fs
mov
or
das
push
ret
mov
fcoms
push
mov
decb
stos
test
es
adc
inc
outsb
daa
pusha
adc
mov
mov
mov
mov
shlb
cmp
push
mov
pop
pop
push
lahf
mov
mov
int3
fcmove
mov
fidivrl
fcmove
cmp
neg
sub
add
fldl
xchg
test
jno
adc
fcomps
sahf
outsb
jbe
xor
sub
daa
jb
int3
push
es
cmp
dec
cli
mov
jae
lock
xchg
into
pop
sbb
sbb
sbb
cmc
inc
jl
shlb
lock
sub
sbb
aad
push
push
pop
lock
sub
jae
int
xor
inc
jg
xchg
clc
les
test
test
jge
lret
xchg
add
mov
movsl
pop
jnp
sub
fidivrl
mov
and
in
fdivl
or
pop
jecxz
repnz
into
sbb
jl
or
ja
mov
inc
dec
cld
adc
aam
push
testb
sbb
add
mov
arpl
xchg
in
rep
ljmp
ljmp
sbb
mov
pop
outsb
mov
mov
or
ds
cmc
add
rorl
sbb
adc
lods
outsl
pushf
sub
fs
xchg
sbb
push
push
test
mov
and
fidivs
add
ja
add
dec
push
or
aam
mov
pop
sarb
pop
lahf
data16
xchg
mov
jmp
es
dec
or
inc
sbbl
out
out
xchg
loope
cmp
clc
or
sub
idivl
in
pop
push
inc
enter
mov
aad
lcall
clc
or
test
push
pushf
insb
lret
xchg
and
mov
or
repz
jecxz
sub
cmc
jne
mov
notl
sbb
pop
lea
sbb
adc
pop
cmp
popa
sbb
dec
fcoms
movsl
inc
inc
ja
sbb
sbb
rsqrtps
dec
cld
sbb
fldenv
ss
addl
scas
jmp
sbb
lods
cmpb
or
add
inc
je
iret
lea
fcomps
repnz
push
add
pop
jecxz
into
ds
fs
mov
or
jge
xchg
pop
add
sbb
jg
outsl
sbb
fidivrs
test
stc
pop
daa
push
popa
add
and
mov
jge
insl
in
out
out
jne
push
aam
rclb
and
insb
stc
pop
ret
movsl
test
data16
stc
mov
xor
int
mov
cmp
inc
leave
test
cli
mov
lea
iret
jl
mov
sub
dec
mov
loope
add
out
or
xor
mov
cli
dec
cli
out
or
and
mov
pop
push
lock
and
jmp
sub
int3
add
cmp
push
sahf
mov
shrl
mov
cmp
bndstx
or
add
cltd
andl
out
jecxz
jle
xor
in
rolb
pop
or
mov
add
pop
cmpsb
mov
cmpsb
lret
cmpsb
hlt
repnz
push
adc
cmc
jle
lret
cmp
xchg
sbb
cmp
cmp
sbb
sbb
subb
outsb
orl
imul
outsb
lahf
inc
iret
jno
into
lcall
lods
dec
mov
andl
fstl
in
inc
stos
cmpsb
out
inc
notl
sbb
test
xorb
subb
jne
ja
sub
in
lcall
dec
test
jns
sub
rcrl
jge
mov
lea
sub
popa
or
add
pop
pop
cmp
nop
pushf
int
loope
imul
or
cmp
hlt
inc
adc
rol
out
or
fstpt
jb
leave
push
cmp
cmp
test
adc
pop
mov
xchg
pushf
lock
xlat
das
mov
ljmp
mov
in
in
lds
adc
pop
push
in
popf
fimuls
mov
cld
orl
pop
nop
lock
inc
dec
into
dec
xchg
xchg
aad
into
adc
enter
push
fwait
jl
dec
loop
gs
dec
xor
fildll
test
or
imul
sbb
gs
dec
xlat
imul
adc
movsl
lock
cmp
pop
mov
jae
mov
inc
iret
insl
into
lds
or
dec
out
negb
ds
sahf
std
std
dec
jl
inc
in
jmp
shr
xor
and
pop
gs
pop
adc
mov
dec
rcl
sbb
jbe
xor
ret
das
push
test
jnp
push
mov
or
xor
mov
loopne
mov
pop
imul
mov
inc
xor
pop
xor
enter
rorb
fbld
dec
jbe
pop
xor
fldenv
cmp
into
imul
or
jo
lods
jle
in
dec
repnz
jbe
inc
inc
pop
push
dec
inc
jle
arpl
pop
loope
fwait
lods
or
xchg
sub
lretw
pop
into
xor
ja
sbb
cwtl
test
mov
fisubl
mov
nop
mov
lods
pop
cs
jecxz
dec
out
ljmp
arpl
loope
aad
out
iret
inc
sbb
mov
adc
sub
xchg
ret
or
cmp
sbb
push
cmp
xchg
gs
add
dec
pop
popa
stc
mov
sbb
sti
mov
inc
lcall
adc
roll
dec
repnz
cmp
sub
notl
jno
out
movsb
adc
scas
inc
test
out
mov
pop
aad
xor
pop
cmp
cmp
sbb
js
adc
pop
shlb
dec
int
and
mov
cli
add
fistpl
cwtl
in
loope
pop
inc
repz
and
insb
mov
enter
rol
jp
imul
lahf
mov
repz
xchg
sbb
add
push
scas
ffree
mov
xor
dec
and
movb
pop
insb
sahf
mov
mov
in
loopne
dec
pop
mov
test
adc
hlt
add
pop
and
clc
jg
out
xlat
jle
nop
pop
jp
shr
data16
pop
pop
mov
inc
rcll
adc
icebp
adc
push
clc
nop
and
xchg
xor
lods
xlat
int
movsb
dec
mov
push
test
sbbb
mov
stos
repz
mov
test
adc
mov
or
xchg
cwtl
les
mov
cli
push
movsb
and
sbbl
andb
nop
mov
xor
in
dec
bound
inc
cmp
jge
lods
sbb
lods
sbb
test
fistpll
hlt
pop
les
xor
rolb
ret
repnz
adc
dec
repz
or
fistl
mov
add
cs
rorl
ret
sbb
sub
outsl
xchg
repnz
jbe
insb
mov
pop
test
sub
jg
fistps
fimuls
dec
pusha
jl
dec
or
outsb
gs
movsb
mov
popa
jnp
dec
out
mov
and
or
rol
faddp
rorl
adc
std
mov
aas
push
push
lods
add
mov
adc
insb
outsl
push
mov
into
jg
pop
lret
and
aam
pop
adc
xchg
les
add
sbb
lret
mov
sbb
das
add
xchg
push
mov
mov
imul
inc
das
xchg
pop
sub
or
sub
data16
xor
mov
mov
jb
mov
out
out
js
js
shlb
cli
or
and
fisubrs
sbb
push
mov
ret
inc
pushf
push
cmp
fwait
lea
jge
scas
scas
sbb
pushf
or
in
and
jbe
xchg
mov
xchg
ljmp
add
ror
jle
ljmp
lret
dec
out
xor
lods
sub
enter
jg
popf
les
inc
and
arpl
xchg
clc
xor
lods
test
negb
mov
aaa
or
das
fstpt
in
mov
adc
hlt
cmp
ret
fisttpll
cmp
cmpsl
lahf
and
rorl
xchg
or
shll
jp
inc
mov
aaa
decb
jbe
fisttps
in
scas
xchg
pusha
jg
and
push
fs
fs
jb
std
fiadds
xchg
add
mov
jns
lret
ja
push
push
push
mov
xor
jb
dec
iret
lcall
jbe
push
sub
xchg
ror
call
pop
notl
add
jp
mov
in
into
cmpsb
mov
cmp
xlat
pop
pop
jb
lock
movsb
mov
adc
aaa
adc
testl
pop
xchg
loop
loope
push
add
xchg
imul
mulb
cmp
cmpsb
fdivr
stos
fdivrs
mov
callw
sub
vphsubdq
sub
lret
jne
fsubr
add
outsl
out
cmp
into
ret
and
pop
and
lods
jle
pop
jl
pop
jae
xchg
adc
scas
jmp
movsl
mov
and
cltd
sub
add
jne
or
jp
push
or
push
and
xor
stos
addr16
mov
pushf
pop
jecxz
xchg
cwtl
scas
fwait
ljmp
test
cltd
mov
enter
aad
sub
or
popf
push
roll
adc
jns
insb
je
adc
xor
cmp
fisubl
mov
push
lock
jo
add
push
xchg
shr
mov
dec
lods
adc
cld
int
cmp
add
pop
push
cmpsl
aas
test
ret
test
inc
push
add
jp
cwtl
out
out
fcmovbe
addr16
scas
cwtl
cmp
dec
test
xchg
pop
cli
cmp
outsb
dec
jnp
ss
das
jo
jb
je
call
xchg
add
inc
adcb
adc
dec
adc
sbb
xlat
popa
xchg
xor
lret
mov
movsb
packsswb
mov
test
push
loop
cld
call
out
mov
dec
js
jge
daa
mov
ss
and
call
pusha
mov
xor
decb
js
pop
mov
scas
add
out
lcall
out
les
dec
ficompl
add
xor
mov
jo
mov
jmp
xor
sbbl
add
adc
jbe
push
pop
inc
pop
mov
mov
mov
pop
imul
add
fdivrs
fdivrl
add
cmp
jmp
mov
dec
pop
dec
daa
cmp
xor
sbb
jecxz
push
cmp
sub
dec
ret
mov
xor
cmp
and
pop
sbb
xor
mov
ja
mov
xchg
jnp
ret
outsb
addr16
xchg
pop
xor
mov
icebp
in
or
cmc
std
mov
push
imul
mov
dec
pop
push
call
mov
cvtps2pd
mov
cmp
rcll
inc
insl
push
jle
bound
pop
ret
pop
push
jb
pop
insb
into
mov
mov
mov
pop
push
int3
popf
add
addb
icebp
addr16
lods
xchg
add
or
jg
repz
push
push
popf
xchg
xchg
cmc
jle
lods
cli
test
lock
push
and
cmp
mov
mov
arpl
mov
jnp
out
popf
mov
mov
imull
mov
outsl
out
cs
or
mov
and
dec
jne
dec
popa
mov
pushf
jle
mov
inc
psubsb
push
lock
mov
andl
adc
fnstsw
imul
jl
in
mov
push
fdivp
pop
or
dec
and
orl
or
stc
pop
je
ret
xchg
xlat
iret
or
sar
outsb
sub
pop
std
test
imull
ds
imul
and
out
and
sbb
jne
movsl
adc
xchg
xchg
cmp
mov
in
cmp
cmpsl
in
ud2
jle
cmp
ss
mov
sbb
test
cmpsl
ss
into
or
pop
dec
and
aad
mov
xor
je
movsb
push
dec
lea
mov
xchg
cld
add
pop
ss
mov
jae
push
fiaddl
pop
add
pop
jb
popa
inc
sahf
sahf
pop
sub
push
jbe
lret
jnp
rcr
xchg
inc
idivl
sbb
stc
dec
xlat
mov
cmpsb
outsl
mov
cwtl
mov
jo
ja
sbb
jecxz
icebp
adc
push
push
pop
shll
cmp
sbb
sahf
ljmp
aam
jge
leave
pop
mov
mov
int
push
sub
xor
adc
add
mov
cmp
sti
es
cmp
movsl
cmpsl
push
aam
cmp
fcmovb
cmp
incb
xchg
lods
mov
js
mov
movsl
and
daa
xor
data16
sub
insb
push
cmp
add
jl
scas
dec
mov
push
data16
xchg
mov
lea
pop
shlb
repz
xchg
jmp
in
out
jns
ret
mov
add
push
int
or
packuswb
cltd
fmull
or
push
lahf
ja
jo
or
movl
jno
xchg
pushf
aam
dec
test
mov
bound
mov
nop
jns
jae
mov
mov
xchg
mov
mov
mov
jbe
std
idivl
add
pop
cmp
mov
aas
pop
imul
adc
je
sub
xchg
test
sarb
mov
push
adc
pcmpeqb
scas
stos
cmpsb
nop
dec
xor
call
dec
jno
sti
lods
dec
iret
es
sahf
push
lcall
imul
out
iret
sub
arpl
xchg
in
repnz
add
lahf
pushl
pop
stc
and
out
dec
sub
aam
mov
cmp
add
push
jg
aad
or
mov
xchg
mov
scas
mov
std
or
cmp
fucomp
int3
cmp
faddl
jb
mov
insl
out
sar
jns
add
aad
push
add
outsl
dec
fisttpl
jnp
xor
subb
push
mov
push
jge
loopne
mov
ja
fdivrl
mov
pop
sub
push
in
adc
pop
push
cmp
push
stc
mov
mov
mov
ret
test
std
add
dec
rol
out
clc
shl
jecxz
mov
imul
jmp
xchg
aas
jp
int3
mov
pop
pop
movsb
out
scas
sbb
fsubr
sub
pop
jge
ljmp
push
enter
jns
mov
cmc
movsb
popa
dec
insl
cli
movsb
push
push
subl
xor
and
fs
lods
push
lret
data16
cmpsl
rcrb
popf
push
outsl
daa
pop
mov
neg
rcll
ds
out
push
aad
and
jno
and
and
add
lock
jnp
mov
cmp
jnp
divl
ficoml
inc
sbb
dec
je
push
stc
lds
sbb
fistl
mov
xor
insb
loop
lea
inc
cmc
ror
and
leave
roll
loop
ror
ret
lcall
inc
loop
lods
push
repz
inc
and
dec
pop
sbb
mov
cmp
push
and
pop
imul
fbstp
and
lock
mov
outsl
mov
pop
xchg
flds
mov
or
sbb
in
adc
xchg
cmp
js
and
push
aam
add
sbbl
xor
or
shlb
in
sub
and
push
dec
push
and
push
cmc
cli
pop
sbbb
mov
jle
repnz
lahf
loop
ror
or
cli
xchg
les
adcb
cmp
int
dec
cmc
push
push
cmpsl
outsl
sbbb
and
cmpsb
popa
cmc
cmp
cmpsl
decl
jle
mov
aaa
and
or
pop
xchg
xchg
or
inc
mov
aad
lds
push
mov
pop
sbb
mov
pop
aam
arpl
insl
and
cmp
cld
xchg
jo
dec
add
in
jns
in
outsl
mov
pop
sbb
cmp
ja
adc
imul
xchg
push
mov
clc
outsb
fcmovb
dec
ret
add
call
lea
jns
push
ja
in
mov
pop
mov
test
xchg
rcrl
push
jae
inc
shll
shll
in
inc
and
in
outsl
out
xchg
fdivrl
inc
out
push
pop
scas
xchg
push
push
adc
add
push
lock
insl
mov
sbb
inc
outsb
inc
outsb
ret
cwtl
sbb
mov
ljmp
mov
movsb
xchg
arpl
jb
cmp
iret
loop
mov
jle
jno
ror
stos
cmp
outsb
cmp
fldt
ljmp
cmpsl
and
add
mov
stos
imul
rcrl
lret
test
test
lret
pushf
fldcw
mov
mov
mov
push
aaa
bound
mov
insb
add
and
adc
sub
stos
xchg
xchg
daa
mov
dec
sbb
test
sti
popf
adc
mov
cli
lret
sbb
inc
lret
inc
pop
or
dec
fwait
iret
lock
aad
mov
push
pop
scas
pop
idivl
mov
or
mov
int
add
mov
jbe
aas
imul
cmp
inc
add
in
add
jge
insb
sub
scas
rcll
cs
rcr
adc
inc
pusha
fdivrs
or
pusha
stos
dec
xor
orl
ror
sarb
call
xchg
inc
jae
nop
pushf
ja
add
pop
mov
icebp
sbb
mov
xchg
mov
xor
sbb
ja
cmp
dec
icebp
aam
mov
mov
jbe
lods
dec
xor
lea
pop
push
imul
inc
mov
stos
addr16
adc
push
dec
sahf
sbb
xchg
sbb
inc
jae
push
int
and
inc
adc
stos
adc
xlat
shrl
xchg
jge
add
stc
adc
repnz
sbb
inc
mov
movsl
lods
stc
dec
jo
nop
clc
push
imul
loop
or
adc
fwait
rorb
stos
sub
inc
in
mov
shll
mov
sarl
mov
mov
sbb
and
mov
pop
add
mov
jnp
frstor
outsl
xchg
xchg
cmp
lret
aad
mov
jecxz
mov
push
or
jb
sbb
xchg
mov
cli
push
lret
cld
adc
leave
adc
je
mov
adc
push
xchg
xchg
mov
vfixupimmsd
inc
aam
data16
ret
and
movlpd
int3
cmp
xor
cmp
scas
dec
pop
push
xchg
jbe
jno
movsb
arpl
inc
decl
mov
push
clc
cld
push
xchg
xchg
imul
adc
pop
ss
std
push
cltd
aaa
into
inc
insl
xchg
jge
ds
cltd
std
sahf
sub
lret
fistpl
and
jl
add
xchg
xorb
push
ret
push
add
lods
sbb
xchg
cmc
push
sub
pop
repnz
outsl
popf
lret
inc
push
aad
ljmp
push
or
inc
ss
cld
fstps
fwait
xlat
cld
inc
push
pop
jns
or
call
or
outsl
sub
mov
cwtl
add
ljmp
jnp
gs
adc
push
add
hlt
mov
adc
jae
cmp
dec
fdivl
add
fcomp
jbe
mov
xchg
inc
dec
push
or
cli
repnz
sahf
dec
js
mov
insb
xor
push
pusha
mov
and
adc
or
std
jne
mov
xchg
dec
mov
xor
mov
cli
add
xlat
mov
or
in
pusha
icebp
and
loope
fprem
xchg
and
xor
push
mov
jns
and
cmc
scas
push
rcr
popf
cmp
xchg
pop
jbe
jns
adc
cmpsl
add
fs
dec
cmp
dec
fucomip
mov
sub
iret
push
testb
loopne
sbbl
movsl
popa
and
cmc
inc
les
xor
in
outsb
jmp
movsl
andl
sbb
jp
sarb
in
dec
enter
pop
sub
stc
xor
lea
ret
jo
leave
pop
sub
jge
inc
xchg
push
adc
rcl
popa
sub
cmp
mov
adc
fsubr
mov
int
dec
dec
jbe
ficompl
xchg
adc
rcrb
mov
mov
cmp
add
in
adc
or
mov
fwait
dec
pushw
sub
iret
push
sbb
push
in
sbb
scas
je
aam
and
mov
mov
xor
subl
add
inc
jns
pop
fyl2x
rorb
cltd
test
add
cmp
pop
mov
ret
cmp
fiaddl
push
ret
jae
or
clc
and
stos
sbb
sub
adc
lea
lret
jmp
cmc
lds
jecxz
sbb
hlt
inc
jb
dec
loope
insl
test
gs
mov
popf
aam
movsl
ss
jns
sbb
fbld
or
cmpb
cwtl
gs
fnsave
mov
scas
ret
xchg
dec
pop
jno
or
cmp
mov
adc
sbb
insb
or
stos
decb
push
call
pop
mov
xchg
mov
mov
popa
shll
iret
dec
je
mov
fisubrl
dec
sti
xor
mov
sti
lea
jns
jns
ds
dec
and
pop
addl
mov
add
nop
les
adc
pop
xor
pop
int3
jge
rcr
cs
clc
mov
dec
fsubrs
scas
inc
push
js
fwait
jle
std
int
in
mov
pop
in
jmp
mov
mov
ljmp
adc
adc
std
mov
inc
mov
or
push
addb
xchg
cmp
cld
push
sbb
gs
jle
lock
mull
mul
sub
sub
mov
add
mov
dec
aaa
jno
repnz
pop
fdivs
mov
shll
push
clc
fldenv
ja
xor
jp
das
jbe
jo
adc
mov
ds
movsb
add
push
fwait
mov
pop
inc
sbbl
adc
movsl
xor
test
xor
fnsave
lea
fists
das
mov
fdivl
xor
lock
xorl
into
sarl
call
mov
and
je
in
push
push
fwait
cmp
daa
cmp
push
lds
pop
mov
xor
dec
test
mov
ss
insl
sub
iret
mov
push
cmpsb
rorl
std
mov
iret
out
repz
push
inc
jbe
mov
mov
mov
gs
xlat
jnp
mov
lret
int
aad
sub
and
pop
das
sbb
adc
popf
ret
faddl
fdivl
out
mov
orl
push
pop
imul
mov
mov
in
mov
dec
jnp
push
mov
mov
fwait
dec
scas
cmp
push
je
xor
or
mov
adc
lock
mov
xor
and
adc
dec
ret
fcmove
dec
pop
lea
scas
hlt
xchg
addr16
or
and
or
dec
loop
sub
sub
outsl
add
inc
push
or
outsl
pop
sbb
out
dec
inc
and
dec
xor
jns
jp
dec
mov
sbb
orb
adc
sbb
jb
andl
or
out
cmp
in
pop
popa
jno
jp
inc
lcall
xchg
jb
movsl
adc
adc
mov
adc
mov
xchg
and
sbbb
or
jo
or
dec
push
ljmp
pusha
push
mov
iret
lods
ja
out
mov
xor
jle
sub
inc
xor
movsl
aaa
jne
es
sbb
sub
dec
lds
dec
xchg
pop
movsb
outsb
adc
neg
pop
add
out
mov
dec
mov
mov
inc
lea
dec
sbb
shll
jg
insb
cltd
aam
cmc
pop
stos
inc
cmp
call
movsl
xchg
jnp
jp
stos
jmp
adc
scas
mov
sub
sbb
test
fdiv
pop
add
in
cmpsl
test
sti
mov
xorl
jb
and
jb
adc
pop
pop
sub
jl
pop
mov
sbb
mov
sub
mov
or
paddusb
cmpsl
xor
leave
dec
adc
inc
faddp
xor
jp
cmpsl
push
movsl
lds
repnz
jecxz
cmp
or
dec
jbe
mov
mov
adc
pop
and
jne
shlb
sbb
outsl
pop
add
out
fmul
loopne
xlat
cwtl
cmp
mov
notl
mov
push
daa
mov
rcrb
cmp
mov
mov
dec
inc
pusha
pop
cltd
insl
movsb
sbb
in
fisubl
cmp
dec
test
and
xor
add
jle
pop
mov
and
dec
adc
enter
mov
or
scas
cmp
lcall
push
mov
mov
decb
popf
fadds
fcmovb
loope
outsb
dec
test
dec
xor
mov
imul
addr16
jne
daa
push
sub
test
cltd
sub
jl
std
mov
shl
jmp
popf
adc
fldt
dec
xchg
push
and
xchg
push
sbb
xchg
add
push
push
xor
popf
gs
test
xchg
cmp
push
jb
sbb
movsl
push
and
sbb
sub
push
mov
fwait
mov
jge
bound
sahf
fs
push
add
push
hlt
sub
add
or
shrb
ja
stos
push
inc
cs
xor
xchg
orl
cmc
or
mov
outsb
mov
aam
pop
repz
aam
sbb
loope
daa
and
jp
mov
add
das
aaa
fwait
addr16
bnd
sbb
ja
mov
stos
sub
mov
cwtl
arpl
in
mov
icebp
call
adc
nop
rclb
in
xchg
xchg
cli
lods
test
ret
mov
ds
sarb
pop
mov
jnp
lds
call
mov
sub
sub
nop
and
fnstenv
push
pop
sub
nop
mov
inc
icebp
cli
mov
and
mov
frstor
add
add
sar
add
aaa
adc
jge
push
jno
dec
jl
jo
xor
cmp
mov
cmpsb
test
int
mov
pop
push
scas
jg
jns
stos
sub
pop
adc
dec
adc
mov
and
pushf
movsb
fwait
mov
int3
inc
lahf
mov
aas
pusha
sub
sub
mov
mov
mov
sti
sbb
ljmp
lods
xlat
add
xchg
or
lock
test
dec
push
sbb
gs
loopne
loope
adc
into
adc
jmp
lcall
test
xchg
outsl
cli
sbb
jg
mov
lcall
adcb
or
push
push
push
xchg
sub
adcl
cli
scas
aas
xchg
sub
adc
insl
push
and
test
shlb
jnp
nop
test
pop
test
js
in
jno
push
mov
loopne
adc
push
xor
adc
sbb
sub
inc
mov
inc
and
xchg
test
orb
stos
in
mov
fwait
mov
mov
and
inc
stc
dec
inc
fwait
or
shr
xchg
jno
adc
cmp
push
in
inc
dec
mov
in
inc
bound
lock
arpl
lcall
les
pop
pop
sti
gs
jns
sub
and
popa
idivl
xchg
ss
std
shrb
sbb
mov
sbbl
sbb
inc
rcrb
ret
loope
test
lcall
mov
ljmp
or
adc
sahf
sub
xor
xor
and
movsb
lret
adc
stos
mov
jmp
push
lret
lret
xorb
idiv
mov
pop
adc
adc
imul
sbb
inc
lods
andb
add
dec
fcmovbe
mov
pop
mov
imul
lea
dec
cmp
jbe
sbb
mov
sub
enter
sub
das
sub
adc
adc
or
dec
mov
xor
imul
imul
mov
es
push
imul
js
sbb
mov
cmpsb
mov
test
push
stos
inc
cmpl
iret
lods
xchg
sahf
push
lret
pop
pop
jo
ret
pop
dec
rolb
fistpl
ret
or
or
popa
push
lock
subl
out
hlt
mov
fstp
mull
movsl
xchg
and
cs
sbb
leave
jle
mulb
cwtl
rcrl
scas
push
lret
jns
mov
xchg
mov
fbld
sbb
ret
ret
loope
inc
and
pop
jbe
jmp
ss
cmp
mov
imul
sbb
mov
int
outsl
xchg
scas
fistps
or
mov
arpl
mov
fidivs
insb
mov
lahf
cmpsl
insl
sbb
out
gs
inc
xlat
mov
enter
mov
jae
or
push
or
mov
leave
enter
testb
or
hlt
xchg
mov
dec
leave
push
nop
sbb
lock
push
mov
jg
adc
lods
mov
jl
jp
daa
pop
aaa
and
pop
sbb
arpl
lcall
push
sub
js
mov
cld
xor
cmp
rcll
and
vmovlps
mov
loopne
out
popa
lock
xor
pop
pop
je
test
or
inc
lods
lahf
sbb
add
cmp
ljmp
movsw
or
out
cmp
shr
jno
cmp
mov
cmpl
sub
inc
mov
imul
ror
out
sub
mov
ret
jae
ja
in
repz
jge
inc
loope
test
push
or
cmp
lea
jbe
jbe
push
idivl
int3
push
dec
mov
sbb
imull
or
or
xchg
mov
and
push
loopne
cwtl
pop
add
mov
or
inc
cltd
outsb
dec
in
sub
push
fisttpll
mov
add
sbb
imul
jo
xor
pop
fbstp
in
mov
dec
jge
jge
ja
xchg
xor
mov
loop
xor
push
in
fmull
or
lcall
shrb
xor
xchg
pop
mov
cmp
dec
mov
xorl
subps
push
into
jae
ret
xchg
mov
mov
cmpsl
jp
xchg
xor
clc
push
ret
rcll
sti
adc
jmp
xchg
mov
push
out
test
std
aaa
adc
aam
cs
insb
pop
push
es
push
mov
xlat
popf
adc
aas
ja
dec
xlat
mov
jae
xor
adc
insl
xchg
lods
cmpsl
call
inc
stos
xchg
imul
sub
or
fs
int
pop
jge
imul
xor
fldcw
outsl
into
rcr
dec
xlat
loop
jle
dec
lret
les
fst
and
testb
adc
push
push
popf
out
mov
rol
sbb
fstps
xchg
insl
movsl
and
aam
sub
out
and
rorb
out
cmpsb
aas
add
pop
lcall
xlat
sbb
pop
pushf
or
and
aad
bound
sub
xchg
pop
ljmp
mov
clc
mov
ret
and
jp
pop
roll
xchg
xchg
subb
int
or
pop
push
pop
cmp
sub
adc
adc
push
xor
dec
ss
mov
xor
test
add
ss
xchg
pop
xchg
xor
inc
dec
ret
fisttpll
add
pop
fcmove
mov
int
aas
loop
lret
aaa
cmp
push
cmp
jp
dec
and
inc
test
xchg
cld
loope
lods
xchg
sti
aas
loopne
loope
cltd
mov
cli
cltd
inc
jnp
and
imul
and
or
mov
or
or
jge
rclb
sbb
ret
shr
cmpsb
ss
jp
add
jmp
shlb
mov
dec
push
jg
sbb
inc
aas
stos
inc
mov
out
mov
fsubr
jmp
fucomi
subb
shll
push
xchg
js
mov
lahf
outsl
pop
jbe
xor
call
lea
xchg
in
sub
push
stos
mov
mov
and
add
insl
sub
clc
jg
mov
xor
shrl
fwait
push
and
add
push
xchg
inc
sub
push
in
xor
stc
cld
jo
icebp
push
enter
test
dec
cmp
push
add
popf
lcall
nop
dec
mov
xor
dec
dec
sbbl
inc
aad
or
mov
mov
stos
cmp
add
scas
popa
cltd
rcll
dec
sub
or
stc
aad
test
dec
or
jle
xchg
cwtl
add
jl
push
xor
add
scas
add
xor
out
mov
cmp
in
mov
arpl
data16
outsb
adc
mov
push
ss
nop
loopne
xor
add
out
jne
or
pop
movsb
test
sbb
pop
in
mov
rorl
sub
repnz
gs
dec
cs
jmp
sbb
push
xchg
test
mov
in
xor
ficoms
pop
or
in
roll
jae
jo
les
xor
rorl
xor
cmp
mov
and
and
in
sbb
push
cmp
dec
xchg
dec
int
xchg
jle
xchg
pop
aaa
test
sub
add
jae
pop
mov
cwtl
jecxz
test
dec
xor
xor
xlat
add
bound
das
sub
mov
js
ja
sub
aas
lods
scas
and
cmpb
mov
test
insl
xchg
adc
push
push
out
adc
xor
aaa
scas
cmp
pop
std
fidivrs
rcr
test
lea
pop
popl
xor
stc
clc
pop
test
das
int3
jmp
sub
fcompl
pop
mov
scas
adc
fwait
movsb
scas
lock
int3
sub
fs
sbb
and
mov
or
lret
and
mov
gs
jne
stos
xor
rcrb
scas
mov
cmp
jae
inc
scas
mov
xchg
hlt
mov
enter
out
inc
pop
cmp
and
xor
out
jno
push
outsl
mov
xchg
cli
add
ds
clc
rcrb
inc
jecxz
inc
dec
jl
add
sbb
data16
mov
outsl
shrb
jo
push
ds
sub
push
lock
enter
add
icebp
repz
aas
push
fdivrl
mov
mov
shl
in
fldz
nop
popf
mov
enter
push
leave
iret
fs
movsl
sahf
enter
stos
in
int
or
mov
jp
lods
stc
xor
add
aam
jbe
addr16
pop
add
int
test
jl
das
ret
aas
cmp
mov
cmp
mov
clc
inc
push
jecxz
test
cpuid
in
test
push
mov
daa
inc
xchg
ret
out
dec
daa
in
icebp
enter
add
push
addr16
push
push
mov
pop
fwait
push
aad
push
push
push
xchg
cmp
scas
inc
orl
sbb
sub
lcall
inc
clc
inc
sbb
insl
add
and
std
cli
fs
xchg
ss
fisubrs
jno
imul
cmp
into
iret
mov
fistps
jbe
push
or
out
iret
lret
hlt
inc
or
nop
fstl
addb
sub
push
or
ds
pop
addr16
mov
int3
pop
popl
xor
mull
divb
mov
pop
adc
mov
add
cmc
aas
imul
xchg
sbb
cmp
gs
xchg
int3
xchg
movsl
lret
mov
outsl
mull
cmp
xchg
dec
cmp
cmc
es
inc
ljmp
lahf
sbb
out
int
icebp
xor
out
incl
cs
add
jge
mov
movsb
cmpsl
xchg
xchg
imul
aas
cmp
stc
clc
ficoml
dec
mov
push
mov
fldl
push
sbb
dec
fdivr
mov
mov
pusha
flds
mov
jle
mov
mov
ss
pop
stos
add
sbb
cmp
xor
sti
pop
sbb
sub
std
mov
mov
dec
nopl
div
sub
shlb
dec
sbb
data16
aam
lret
pop
mov
pop
xchg
xor
cld
jecxz
push
mov
dec
xor
call
xchg
call
in
daa
push
adcl
mov
and
loopne
pop
sti
mov
mov
push
pop
insb
fwait
stos
adc
push
add
pop
repnz
pop
jb
fcomp
sbb
out
in
xchg
lods
xrelease
pop
iret
push
lods
cmp
repnz
mov
jle
jae
pop
lret
pop
mov
adc
mov
add
cmp
pop
cmp
in
cmp
xchg
cmp
lods
pop
arpl
ja
fdivrs
sub
loop
inc
add
cmp
stos
ljmp
mov
insb
mov
cmpsl
rcrb
in
mov
adc
call
inc
xchg
arpl
jecxz
ds
daa
cli
add
xchg
add
out
int3
int3
push
inc
push
inc
inc
cld
aam
sbb
xor
popf
lea
jg
pop
mov
mov
cmc
mov
into
adc
push
jp
mov
outsl
pop
mov
cmp
xchg
and
cmp
jecxz
dec
push
daa
pop
stc
stos
insb
test
push
cmp
or
lds
cmp
adcb
jp
mov
inc
repnz
fmuls
je
shlb
inc
jl
add
add
xchg
daa
jg
jg
jns
and
fdivp
in
mov
stos
add
sbb
mov
jb
pop
daa
fildll
adc
repnz
mov
mov
pop
sub
pop
and
jg
idiv
aam
idiv
cld
pop
or
repnz
jb
jae
xor
popa
mov
add
iret
push
lods
cmpsb
gs
mov
ja
adc
in
cltd
dec
rcll
cmp
ret
push
movsb
test
ljmp
outsl
inc
or
pop
adc
mov
sbb
test
push
je
mov
notl
lcall
gs
inc
cmc
hlt
sbb
ds
and
push
xor
mov
cs
mov
fpatan
sbb
adc
shrl
fnstenv
ds
es
loopne
outsb
test
jnp
jmp
cmp
jmp
cmp
call
in
out
sahf
fbld
push
push
test
pushf
sahf
jns
dec
ret
dec
and
in
shll
jg
and
add
and
jmp
fmul
pop
jmp
or
sub
sub
add
enter
and
aaa
pop
out
inc
push
jno
iret
iret
loopne
fnstsw
sbb
inc
mov
in
sbb
mov
push
loopne
insb
cmp
icebp
shll
mov
aam
jne
ret
and
outsb
sbb
ror
nop
rclb
and
dec
add
test
lret
xchg
inc
add
xor
lock
mov
int
push
push
push
lds
loope
mov
cmp
mov
fisubrl
leave
push
or
dec
movsb
sbb
pop
outsb
xorl
lahf
pcmpgtw
adc
mov
incb
jne
test
sub
dec
dec
and
sub
popf
pop
imul
lcall
mov
out
mov
sti
push
cmp
repz
ficompl
cmovbe
pop
xor
add
int3
cmpb
cmp
mov
fdivl
out
lods
push
and
mov
xor
sub
stos
jbe
mov
loopne
das
aaa
push
mov
test
das
sbb
dec
sahf
lret
xlat
in
mov
scas
fsubl
push
lods
nop
enter
jne
jl
gs
dec
outsl
ljmp
jl
repz
mov
and
pop
and
and
in
xchg
jg
push
aas
cmc
pop
or
stos
or
mov
inc
jge
mov
pop
insl
add
push
sbb
imul
mov
mov
fistpl
call
adc
sbb
jns
jb
mov
imul
shll
ss
outsb
xor
xor
sub
push
push
jmp
cltd
jle
push
cwtl
adc
xor
mov
mulb
jb
xor
push
or
dec
xor
and
popf
shlb
outsb
add
shlb
dec
add
lcall
fdivl
loope
jl
ds
mov
mov
sub
repz
pop
fwait
sub
les
pop
not
fsubl
jecxz
cmp
sbb
imul
loopne
iret
xchg
insb
das
dec
pop
xor
cmp
mov
std
mov
sbb
mov
push
mov
and
or
test
mov
ljmp
push
push
js
jl
jg
rdtsc
sbb
sbb
pop
push
sahf
lret
jp
test
imull
cmp
hlt
mov
stc
stos
cmp
xchg
iret
movsl
stos
lret
mov
jae
xchg
mov
popa
xchg
ret
cmpsl
ss
mov
ljmp
jno
dec
out
scas
sarl
push
jo
xchg
sahf
call
out
and
or
es
arpl
xchg
xchg
mov
or
out
lods
iret
pop
int
dec
and
imul
movsb
jns
cmp
cli
or
js
mov
jnp
push
arpl
xlat
pop
dec
xor
xchg
aad
mov
out
je
add
dec
adc
out
cltd
cmp
pop
lods
shll
int
outsl
push
roll
dec
adc
aad
xchg
push
sub
pop
push
dec
in
mov
sbb
mov
mov
lret
push
shlb
scas
jns
dec
leave
sbb
xor
aam
pusha
aas
push
dec
jae
fwait
jo
mov
es
lea
call
fadds
out
ds
rcrl
jae
xchg
xchg
popa
int3
stos
dec
dec
imul
jo
inc
sbb
out
pop
in
sub
and
std
mov
jp
stos
xchg
dec
outsl
push
sub
popf
add
fstl
arpl
sbb
push
fildl
loop
mov
mov
sbb
mov
mov
pop
call
fimull
dec
sahf
xchg
mov
mov
xchg
sbb
fcompl
nop
or
dec
popa
test
fsubl
shrb
adc
aam
push
and
adc
ss
mov
xor
stos
dec
add
jecxz
les
push
paddb
hlt
mov
pop
dec
notl
lret
push
rcr
in
ret
shr
stos
push
loope
mov
enter
xchg
mov
sub
inc
imul
js
pop
pushf
and
ds
repz
pop
dec
add
adcb
mov
cmp
xor
hlt
test
add
stc
data16
add
lock
fildl
sbb
dec
mov
sbb
adc
lods
sbb
pushf
scas
daa
cld
mov
lret
nop
in
jle
or
insl
in
dec
ffreep
lods
in
mov
jle
xchg
adc
mov
stc
gs
xlat
mov
inc
mov
xor
or
insl
hlt
pop
les
stos
add
inc
jge
push
fwait
sbb
std
test
hlt
inc
icebp
stc
dec
mov
xchg
loop
jbe
pushf
shrb
dec
xchg
push
outsb
sbb
ror
cmp
es
fimull
push
xorl
mov
mov
push
push
and
or
jge
push
lds
ja
dec
orl
push
xchg
push
hlt
mov
dec
xlat
mov
push
cli
add
jne
jle
sahf
mov
adc
sbb
ja
leave
lea
adc
mov
int3
jo
iret
sub
dec
hlt
cmp
cwtl
mov
aam
or
mov
push
sub
xor
andb
and
fcmovnbe
insb
popf
rcrb
jbe
lcall
push
mov
or
shlb
cmp
or
jp
data16
test
sahf
inc
push
dec
xchg
inc
mov
mov
rol
dec
gs
rolb
pushf
lcall
outsl
pop
adc
jge
mov
dec
cs
sub
pop
mov
js
mov
push
adc
stos
add
mov
bound
dec
aaa
lret
movsl
fs
dec
repnz
pop
stos
movsl
or
je
adc
dec
sub
loopne
imul
cmp
into
pop
outsb
sbb
xchg
jb
adc
lock
into
dec
out
add
adc
and
adc
push
repnz
cmpsb
das
arpl
test
lods
fnstenv
fistpl
test
decb
mov
jne
xchg
xor
pop
adc
sbb
push
int
subl
xlat
ret
or
jl
imul
mov
cltd
test
xor
aas
mov
es
and
cmpsb
ss
push
sbb
addr16
test
lea
mov
testl
adc
mov
xchg
jge
fs
inc
mov
pop
ljmp
aas
stos
rcl
jae
das
sbb
int
push
es
push
arpl
mov
ret
mov
mov
cmp
das
xchg
pop
or
aaa
inc
xchg
test
push
outsb
lods
call
bound
mov
int3
test
jns
cmp
pop
inc
je
into
mov
pop
fs
xor
jno
cli
lret
push
jno
mov
enter
addb
jge
fcoms
lret
pushl
andl
mov
bound
mov
jne
in
sub
mov
sbb
lret
jae
pusha
add
xchg
xchg
inc
jb
xchg
xor
shlb
movl
jno
and
xchg
inc
jo
dec
inc
mov
push
in
jns
adc
xlat
pop
cvttps2pi
sbb
les
push
fcmovnu
mov
sub
xor
mov
enter
cmpsl
dec
into
jae
jp
mov
roll
js
scas
fs
inc
xchg
stc
sbb
mov
mov
mov
bound
add
add
add
or
cmc
lea
clc
popf
cmp
aaa
repz
call
xchg
aam
in
xchg
lea
xor
cmp
pop
mov
fld
mov
call
lcall
pop
fstpl
mov
daa
or
lret
and
fnclex
test
clc
fistl
movsl
pop
dec
loope
push
mov
sbb
push
subb
pop
test
mov
test
fisubl
out
and
xchg
mov
pop
arpl
jmp
pop
jb
lods
xor
pop
push
jnp
push
shl
in
lods
pop
push
jmp
cld
out
iret
mov
int
and
test
mov
cld
xchg
mov
in
push
aaa
cmp
cs
dec
mov
into
ljmp
shll
mov
jp
jnp
aaa
mov
outsb
push
scas
into
mov
rcrb
imul
in
mov
fstpt
dec
xchg
pop
and
jg
and
mov
fidivrs
je
mov
add
and
in
jle
dec
dec
pushf
xor
aas
imul
out
mov
out
fwait
push
mov
jnp
dec
ss
adc
push
mov
push
outsl
inc
mov
stos
or
pop
dec
outsl
gs
shlb
xchg
or
fcoms
andl
sbb
cmpsb
mov
andb
add
mov
aam
push
cmp
mov
pop
pop
xchg
lahf
lods
and
mov
testl
xchg
lds
jg
nop
jns
push
scas
fdiv
ljmp
inc
mov
int
push
cmp
in
pop
je
es
sub
and
sub
dec
neg
mov
sub
jmp
lcall
hlt
adc
rcll
xchg
jge
xor
js
test
mov
ja
outsl
fdivl
push
push
add
mov
mov
pop
sub
aam
push
sbb
jecxz
xor
aas
dec
cs
sub
ljmp
arpl
fnsave
push
sti
xchg
into
addr16
out
pop
rorb
cmp
add
stos
jecxz
jns
xchg
sub
push
cli
push
daa
jae
out
push
jp
mov
cltd
or
aad
stos
aad
xchg
test
rorb
outsb
xchg
negb
jle
pop
aas
or
call
lret
cmpsl
rorb
js
pop
pop
inc
fidivrs
test
cmp
mov
push
imull
mov
nop
sbb
xchg
mov
dec
mov
jg
mov
jl
pop
add
pop
loop
xor
pusha
lret
jbe
fnstenv
leave
mov
ljmp
mov
loop
sub
movsl
jo
iret
scas
pop
int3
repz
cmp
sub
push
fstpt
fcoms
insb
int
xchg
movsb
mov
shlb
jnp
mov
mov
in
scas
lret
cs
mov
incl
roll
add
fmull
sbb
cltd
aad
dec
movsl
inc
push
into
shll
std
xchg
sbb
dec
test
push
pop
test
push
add
or
pop
sbb
loop
push
testl
dec
dec
dec
rorl
push
xchg
arpl
push
repnz
inc
dec
xchg
mulb
or
push
sbb
addb
mov
lret
dec
xor
cmp
mov
faddl
pop
inc
push
fs
pop
push
bound
es
cld
pop
cltd
int
call
push
imul
into
aam
and
adc
mov
movsl
fstp
ds
cld
call
mov
shll
push
xchg
adc
dec
repnz
in
dec
shl
push
fsubrs
ret
mov
inc
push
jno
pusha
enter
shll
inc
shrl
lea
mov
inc
fwait
call
fistps
xlat
out
rclb
test
enter
xchg
div
jnp
sahf
or
stos
aam
xchg
negb
loope
nop
std
sbbb
lds
dec
adc
dec
out
lea
fidivl
mov
and
sub
in
and
bswap
sub
mov
cwtl
inc
dec
jnp
push
or
push
push
cmp
in
and
ja
and
mov
or
xchg
in
call
mov
int3
pop
xchg
or
jge
call
adc
sti
in
inc
imul
sarb
xor
xchg
call
outsb
pop
jmp
xchg
mov
push
shl
cmpsl
mov
add
xor
and
lods
sub
push
mov
mov
scas
addr16
lods
inc
sbb
pop
xchg
add
and
test
and
xor
enter
xchg
push
loop
jmp
nop
das
data16
pop
jg
or
mov
xor
ret
fisubrs
pop
in
inc
mov
roll
sbb
xor
sbb
push
push
aam
add
push
fcmovnbe
out
xchg
hlt
mov
clc
inc
je
sbb
push
icebp
xor
dec
adc
jne
arpl
xchg
push
ja
out
out
or
notb
pop
scas
lock
jecxz
movsl
sub
cld
dec
dec
jno
mov
in
cmp
stos
mov
pushf
out
in
idivb
inc
push
lea
xchg
mov
ljmp
nop
push
js
xor
pop
mov
mov
shll
adc
out
leave
lcall
pop
xchg
mov
inc
icebp
push
cmp
or
movsb
sbb
in
jmp
test
loopne
subb
rcl
mov
out
xchg
push
mov
fwait
iret
arpl
sbb
in
mov
sub
testl
xlat
mov
lret
dec
loope
sub
inc
mov
gs
je
jno
sarb
jo
dec
lods
nop
rorb
shll
bound
pop
pop
cmp
aad
push
sahf
sub
cmp
or
fstpl
sbb
cmc
adc
aas
fsub
repnz
ror
pop
mov
fwait
xchg
xorb
arpl
lds
fs
mov
clc
mov
fisubs
xchg
pop
cwtl
sbbl
ja
cmp
fs
sbbb
xor
xchg
movsb
popa
xchg
jmp
enter
inc
cmp
mov
cmpsl
inc
mov
cld
in
inc
into
movsl
aam
into
into
mov
adc
in
sahf
stc
out
cmp
push
cli
xchg
cmp
scas
xor
push
cmc
mov
mov
mov
push
idivb
adc
imul
sub
nop
fdivs
fisubl
dec
mov
fsub
push
sbb
xor
mov
jg
mov
mov
push
leave
or
dec
jmp
and
or
scas
mov
push
aad
mov
ja
push
jbe
adc
shlb
ljmp
pop
icebp
cmp
imul
insl
jp
imul
nop
add
test
mov
inc
sbb
fstpt
jb
cwtl
cmp
dec
xor
jno
mov
inc
dec
cltd
adc
mov
ret
out
or
iret
inc
and
stc
mov
stos
flds
js
push
cld
mov
cld
cmp
mov
dec
test
les
pushf
imul
mov
cmp
outsl
xor
add
hlt
repnz
jp
mov
jge
shr
std
push
popa
mov
fcmovne
xor
inc
cmpsl
xor
mov
cmc
cmc
rorl
mov
jmp
fucom
out
loop
sub
icebp
scas
adc
outsb
popf
adc
add
pusha
push
dec
sub
cld
adc
and
jl
jecxz
jbe
push
jne
subb
mov
mov
outsb
mov
subl
js
cmp
mov
sbb
lods
dec
push
lret
outsl
inc
pusha
imull
out
push
sbb
add
xchg
jb
push
fcoms
call
int
lods
cld
xor
idivl
push
outsl
scas
loope
scas
out
or
jmp
jne
push
jle
movsl
cld
addb
notb
cmp
loopne
clc
test
and
push
cmp
stc
sbb
int3
rorb
adc
out
fnstsw
fwait
daa
jno
add
jno
negb
push
xchg
dec
jbe
ret
or
cmp
bound
push
mov
mov
and
pusha
test
mov
stos
sub
adcl
sbb
or
inc
inc
push
jnp
dec
dec
mov
inc
in
lds
pop
lcall
es
and
dec
pop
in
xchg
subb
ror
adc
iret
stos
jns
clc
jge
pop
aaa
adc
test
in
fcoms
test
push
out
sub
lret
out
fmulp
push
pop
mov
lock
mov
cltd
add
repnz
fdivl
lods
mov
in
push
mov
dec
test
xchg
aam
xor
leave
jg
stc
pop
cmpsb
test
out
roll
xchg
lods
sbb
xor
jnp
fucomi
xchg
stos
xor
jmp
and
out
pop
psllq
mov
inc
stos
repnz
in
dec
xchg
test
or
add
es
ret
jecxz
xchg
inc
inc
cli
cld
dec
dec
lds
pushf
sbb
fisttpll
dec
dec
fwait
sub
lret
xor
bound
lock
cltd
daa
pop
mov
mov
das
jno
inc
iret
idivb
scas
sbb
fidivrl
add
jg
sbb
mov
xor
and
daa
mov
mov
stos
filds
pop
movsl
adc
lcall
out
rclb
stos
js
fadds
adc
lea
imul
jbe
imul
jecxz
mov
or
imul
xor
or
push
test
loopne
push
lds
sbb
repnz
fdivr
mov
push
dec
adc
add
pop
fisubl
fcoml
push
stos
test
rolb
jb
addb
jecxz
popf
lods
std
leave
fdivrl
scas
jbe
es
imul
push
sbb
insb
test
cwtl
sbb
inc
sahf
loopne
clc
repz
push
or
pop
mov
imul
sysret
inc
push
mov
push
mov
outsb
imul
inc
pop
aam
ss
inc
sub
mov
mulb
daa
sbb
jmp
and
adc
pop
in
pop
or
ss
loop
movl
mov
mov
sbb
rorb
dec
stc
in
push
mov
inc
jae
out
popf
sub
mov
int3
repz
dec
mov
cwtl
fcompl
xlat
adc
cmpsl
sbb
nop
insb
jp
cmpl
xlat
cmc
dec
icebp
mov
out
sbb
sti
imul
fdiv
or
cli
iret
jle
push
jg
jmp
insl
mov
push
pop
pop
sub
cli
lret
inc
testl
dec
pop
cmpsl
sbb
out
test
mov
pop
lret
ret
and
mov
push
lds
stc
stos
clc
scas
xchg
jns
lds
adc
adc
in
clc
out
fisubrl
adc
sbb
mov
adc
pop
repz
cmp
hlt
and
push
test
dec
clc
icebp
add
pusha
mov
lcall
pop
pop
adc
mov
mov
mov
mov
cld
out
jecxz
shll
in
xchg
popf
ja,pn
pop
out
push
adc
ffreep
hlt
rcl
xor
or
sbb
lcall
cmp
dec
addr16
fidivl
mov
stos
adc
mov
push
adc
cld
mov
test
dec
dec
xlat
xchg
jns
sbb
xchg
push
fyl2x
call
gs
inc
sbb
iret
nop
fs
mov
pop
test
xor
sbb
popf
cld
repz
mov
mov
in
jp
and
or
xchg
lods
test
mov
cmp
xor
int3
mov
icebp
pop
pushf
xor
sti
daa
nop
xchg
rcrl
movsl
xchg
outsl
imul
mov
jle
xor
test
repnz
xchg
fstpl
call
push
cmp
test
mov
pusha
or
cmp
mov
leave
leave
shrl
fsubp
add
lret
sbb
xor
loopne
inc
rcl
mov
shll
push
cmp
mov
fisubl
push
push
cli
mov
jg
pusha
sarb
repnz
adcb
mov
mov
and
gs
fildll
pop
or
push
fs
xorl
push
pusha
dec
push
mov
cmp
loop
push
call
insl
xchg
jge
mov
shrl
push
out
xchg
and
pusha
xchg
outsl
out
pop
mov
and
mov
lret
add
xchg
xchg
sahf
pop
in
js
sahf
xchg
mov
rcll
mov
loope
outsb
mov
ret
mov
sbb
push
and
or
movsl
mov
mov
ret
mov
loopne
mov
popa
shl
jae
sbb
into
and
push
jnp
test
add
or
mov
jp
in
adcb
xor
mov
add
fcoms
fildl
cmovl
adc
dec
fisubl
popa
andl
mov
sbb
enter
jne
in
int3
out
scas
iret
cmp
inc
cmp
mov
pop
outsl
test
scas
ds
cmp
jle
lods
push
movsl
notb
int
test
fs
es
add
jmp
mov
lock
push
cmp
not
adc
sti
leave
scas
into
mov
sub
adc
imul
ljmp
dec
fs
mov
or
xchg
in
clc
mov
ficoml
ds
xor
adc
pop
movsb
icebp
dec
inc
sbb
scas
fstps
aas
push
dec
orl
cmp
push
loope
mov
push
iret
aas
cmpsb
sbb
arpl
ficomps
lods
fwait
std
dec
loop
aaa
bound
ret
leave
sbb
lahf
cld
xchg
mov
pop
cmpb
adc
xor
daa
xchg
out
repnz
ja
sub
mov
cs
orb
mov
dec
loopne
or
test
cmp
aas
mov
je
ret
pop
ja
push
xor
out
orb
scas
std
out
out
push
mov
mov
cmp
sbb
out
pop
or
mov
jp
xchg
test
cs
mov
iret
or
shll
mov
je
xor
adc
jg
cwtl
push
sub
jne
in
push
icebp
ljmp
ja
adc
bound
cmp
sbb
pop
sub
insb
js
sti
sub
fld
push
pop
int
or
shll
enter
out
repnz
jmp
mov
int3
jmp
cwtl
testb
pop
mov
test
stos
je
cltd
and
dec
jnp
aad
loope
jle
cmpsb
outsl
mov
dec
outsl
cmp
test
shll
jnp
or
push
xor
outsb
jmp
xchg
pop
jl
bound
js
divl
xchg
add
mov
add
mov
cmp
lret
or
icebp
xchg
aam
lret
or
lret
fstpl
pop
jno
mov
mov
aam
iret
or
clc
rclb
popa
xchg
or
mov
jo
addr16
out
es
dec
cmp
pusha
inc
fldt
lcall
cli
jae
int3
mov
shll
fcomip
nop
inc
inc
rorl
jno
cwtl
stc
dec
out
dec
jbe
das
xor
adc
je
ja
loope
aaa
notb
scas
clc
xchg
mulb
insb
cmp
cmpsb
in
popa
dec
das
pop
push
clc
imul
push
jb
adc
rolb
stos
addr16
es
push
enter
cmp
fisttps
ljmp
ss
int3
mov
and
push
xor
lods
mov
pop
out
ss
dec
dec
in
xchg
cs
cmp
faddl
jbe
ljmp
mov
xor
adc
bound
inc
sub
repnz
inc
adc
movsb
addb
data16
add
fs
cmp
and
nop
call
mov
xchg
scas
mov
idivb
std
add
fs
pusha
inc
rcrl
cmpsb
mov
insb
loop
pop
ss
push
imul
ret
fiadds
andl
fdivs
jno
mov
fildll
mov
popa
lock
xorps
xor
mov
xchg
rcr
sbb
arpl
enter
cmp
aad
jmp
out
lahf
lcall
aam
fisttps
aaa
imul
jnp
roll
notl
iret
les
and
mov
out
xor
rcl
push
test
pop
mov
into
loope
lahf
cwtl
pop
rcrb
call
lock
call
xor
pop
push
xchg
or
out
aam
lods
das
or
dec
jbe
cmpl
outsb
jns
mull
cmp
pop
xchg
cld
out
scas
imul
int
inc
cltd
sbb
fildll
loope
add
inc
test
filds
fbstp
add
push
mul
movsl
mov
mov
xor
pop
jl
int3
jle
pop
or
loop
roll
bound
cltd
or
mov
add
shll
push
add
mov
xchg
mov
xor
icebp
dec
mov
push
mov
add
arpl
xor
add
inc
sarl
and
xchg
push
pop
cmp
pop
pop
jb
pushf
mov
pop
jnp
jle
jecxz
cmc
imul
cmc
inc
or
xor
mov
stc
pushf
dec
sarb
or
xlat
xchg
hlt
je
push
in
sbb
out
lret
ja
inc
mov
cli
xlat
jg
inc
popf
xchg
jno
call
adc
into
aaa
enter
jl
mov
lock
dec
sbb
ljmp
ss
xchg
xchg
cs
add
inc
xor
stc
inc
mov
test
cmp
dec
and
push
cmp
inc
cmp
pop
loope
lock
iret
gs
pop
lret
out
cld
movsl
sets
mov
pop
dec
sub
fsts
nop
pusha
add
les
lcall
push
pusha
dec
mov
inc
mov
pop
in
jl
pushf
add
ljmp
lcall
xchg
adc
cmp
dec
jne
dec
dec
or
sti
jle
pextrw
outsb
enter
cld
adc
xor
outsl
mov
xor
adc
mov
and
test
pop
dec
sbb
loopne
xlat
cmpsl
push
outsb
stc
icebp
push
jp
jae
fxch
jle
jnp
mov
push
mov
lock
pop
adc
retw
xchg
test
iret
mov
rcr
fstps
outsl
sub
gs
fldl
scas
outsl
push
xor
divb
xor
adc
add
sbb
subb
xorl
pop
sti
push
hlt
cmpsb
adc
decl
test
jnp
jae
cmp
xor
pop
sub
jge
dec
shll
fcoml
jae
cmp
jmp
adc
push
xchg
sar
pop
jecxz
outsl
cmp
pop
es
or
outsl
scas
adc
mov
xor
adc
lods
aas
pop
push
jle
push
add
movsb
cmp
xor
lods
shrb
mov
dec
cli
push
mov
mov
jne
sbb
mov
and
out
inc
filds
andl
pop
jne
loopne
jl
stc
cmpsb
shrl
sbb
in
shl
jge
xor
dec
jae
fcoms
clc
ljmp
subb
out
mov
cs
ds
xchg
sti
aas
movsb
fistpl
push
imul
xor
scas
std
aad
popf
andl
xchg
cmp
or
fisubrs
jl
inc
pop
loop
cwtl
sahf
pop
mov
sub
inc
xor
push
stc
popa
pop
mov
loope
push
sti
mov
mov
cmp
jnp
xor
aaa
out
add
loope
dec
nop
mov
mov
popa
cmpsl
insb
cli
mov
cmpsl
js
insl
das
movl
jge
or
xchg
mov
orb
jge
fnstcw
push
or
in
jmp
xor
adc
add
push
pop
fldl
add
adc
add
sarb
push
shl
jl
scas
jne
cmc
sub
or
sbb
or
loopne
scas
adc
inc
cs
fdivl
lcall
clc
sbbl
push
push
je
out
mov
roll
inc
cmc
xchg
jmp
or
lret
stc
hlt
mov
fcomi
cmpsl
test
xchg
jae
call
sbb
aam
stos
jl
popa
push
or
cltd
lahf
xlat
xchg
test
insb
out
mull
jmp
jnp
mov
sub
lret
dec
aam
cld
mov
add
pop
inc
inc
sub
test
and
sbb
adc
cmp
lahf
test
add
or
push
jg
push
jo
sbb
mov
push
es
jle
push
mov
cmp
lock
rclb
pusha
or
mov
mov
sahf
pop
in
inc
cmp
jns
push
lods
lcall
test
stos
in
mov
mov
shlb
inc
jbe
fsubs
dec
push
jl
fldt
mov
faddp
or
mov
das
pop
mov
stos
dec
push
imul
cli
pop
dec
jp
mov
or
popf
xor
scas
xchg
stos
shlb
std
adc
movsl
inc
mov
and
filds
int3
and
or
stc
push
cmp
sarl
mov
mov
or
jbe
cwtl
jno
fimuls
in
sbb
insl
mov
lcall
addr16
mov
or
loop
xchg
rsm
push
xor
dec
pop
lret
sbb
lock
jl
xor
loop
xor
popa
xchg
mov
inc
jge
movsb
out
adc
leave
and
mov
lds
adc
and
das
fbstp
lret
lret
push
mov
jge
dec
pop
adc
mov
xor
movsb
pusha
ficompl
repnz
int
add
xchg
mov
scas
cmpsb
jns
pop
xlat
add
leave
out
out
jb
std
adc
jbe
into
dec
mov
lods
mov
pushf
dec
mov
cmp
jg
ds
andl
call
jbe
and
adc
sbb
imul
bound
or
daa
sbb
decb
or
sti
push
mov
in
out
pop
mov
jne
mov
inc
mov
sti
jo
inc
add
adc
xchg
xchg
inc
stos
jns
cmp
loope
xchg
cmp
xchg
test
gs
std
xchg
adc
pushf
mov
out
loop
mov
xchg
movsl
mov
lock
int
pop
dec
xlat
mov
jns
cltd
dec
mov
icebp
loope
push
daa
xchg
xchg
mov
jne
rcr
adc
push
dec
fisubrl
jbe
dec
xor
adc
dec
xchg
les
mov
outsb
jle
imul
mov
out
sbb
cmc
rorl
and
aad
xor
les
mov
push
rorb
aas
jbe
fdivs
rcll
push
cmp
out
xor
cmp
inc
pop
leave
adc
cmp
jbe
leave
bound
mov
xor
test
mov
jne
sbb
ljmp
push
xchg
mov
jae
or
loopne
pusha
cmp
loopne
loopne
pop
subb
push
scas
and
daa
rorb
cmp
push
out
jb
push
adc
icebp
pop
mov
add
xor
repnz
hlt
mov
mov
jg
mov
test
push
les
cmp
push
pop
pop
daa
aam
push
pop
daa
loope
dec
and
sbb
sti
nopl
jmp
adc
arpl
imul
inc
subb
or
bound
push
mov
or
xchg
pop
fdivs
add
pop
popa
xor
pushw
push
lods
jno
jns
test
sbb
xchg
lods
jno
fldl
dec
and
dec
pop
stos
xchg
pop
out
mov
bound
inc
js
in
cmp
push
out
and
es
cmpsb
adc
cld
sarb
xchg
xchg
icebp
push
dec
mov
push
mov
clc
push
or
inc
pop
lahf
int
rcll
aad
out
addr16
sub
push
mov
push
mov
mov
dec
dec
test
adc
sbb
stc
push
frstor
loopne
nop
sub
je
sub
dec
es
push
xor
mov
pop
sbb
mov
dec
mov
std
mov
or
lea
mov
and
dec
test
test
add
push
stos
dec
jecxz
pushf
mov
mov
sub
add
or
jnp
aas
mov
jno
or
sahf
notl
fidivrl
dec
lahf
jp
cmp
or
push
aaa
xchg
add
rcl
xor
inc
repz
jnp
inc
ja
mov
aad
xor
imul
js
sub
inc
imul
mov
iret
shlb
adc
jnp
cmp
adc
dec
mov
arpl
mov
jle
or
fnstenv
xchg
andl
sbb
scas
adc
out
aas
inc
push
lods
call
aaa
cmp
outsl
dec
jno
jns
loopne
mov
std
dec
cmpsb
lcall
aaa
test
gs
push
mov
fsub
in
insb
int3
xor
aad
sub
mov
ss
ja
push
fstl
outsl
mov
push
mov
xor
mov
xchg
mov
mov
cli
jge
push
cltd
stos
hlt
jae
fsubrs
dec
mov
das
nop
aaa
mov
add
cmc
jnp
push
lcall
cs
adc
mov
and
mov
mulb
adc
repnz
inc
push
and
sahf
push
ss
clc
pop
pop
mov
hlt
enter
fists
clc
subb
or
lods
xchg
cmpsb
imull
jle
insl
xchg
loop
fnstcw
out
cmpsl
xchg
leave
inc
push
add
jp
lret
scas
fiadds
add
mov
insl
stc
xchg
out
mov
imul
xchg
lret
rorl
movsl
test
pushf
cmp
mov
pop
enter
outsl
xor
cli
push
lcall
popa
and
daa
inc
mov
mul
in
pop
fsubs
mov
dec
sub
adc
dec
cli
push
push
and
daa
xor
jb
mov
insb
movsl
adc
daa
jmp
in
lea
inc
jo
adc
mov
xchg
test
inc
in
xor
cltd
inc
mov
fdivrl
cmp
pop
pop
test
inc
mov
cmpsb
lret
rorb
sar
lods
loope
rorl
call
jge
jge
stos
pop
stos
mov
sub
add
inc
xchg
aaa
cld
cmpsl
fdivl
nop
xchg
pop
cmc
shlb
lods
cmp
aam
push
gs
mov
xlat
fs
lods
and
ss
shrb
int
xor
push
pop
daa
lcall
and
loopne
aaa
jb
hlt
fsubs
sub
loope
sbb
mov
add
out
mov
sti
in
add
inc
mov
std
mov
enter
add
test
jae
pushf
psllq
cmpsb
and
out
out
push
xchg
fwait
shll
imul
shrb
add
in
dec
daa
es
sbb
pop
pop
mov
mov
cs
ror
in
ret
or
jmp
add
aam
pminub
loope
and
adc
inc
pop
or
xchg
mov
dec
incl
push
adc
out
fbld
mov
repz
jbe
rorl
in
loope
mov
lods
push
jne
cmpl
mov
int3
cmpsl
jp
mov
add
ret
jo
imul
lret
push
add
pushf
aaa
sub
sti
outsb
jae
dec
das
xor
int3
ret
xor
sub
and
lret
das
xor
sbb
iret
addr16
in
jo
mov
push
addr16
mov
jno
jecxz
jg
mov
pop
hlt
ljmp
js
mov
pop
notb
sbb
jmp
cmp
jo
mov
inc
mov
mov
mov
and
pop
out
sub
mov
xlat
shlb
xlat
mov
mov
jno
mov
nop
xchg
aas
pop
mov
scas
mov
cmp
pop
es
add
and
fs
clc
call
mov
divb
push
dec
fmulp
cmp
and
xchg
mov
push
cmp
and
cld
outsl
xor
lret
inc
jno
rorl
and
cld
mov
in
push
sbbb
daa
xchg
cmpsb
push
xchg
in
iret
fwait
mov
mov
cmp
lahf
int
cmp
daa
push
scas
pop
lods
xor
das
mov
and
lock
pop
xor
xor
ret
push
cmpsl
sub
sub
pop
cmpsl
cs
cwtl
repnz
sbb
adc
aas
or
fst
or
setp
fiaddl
mov
push
sub
scas
and
sub
mov
adc
fcoms
aaa
aam
inc
or
js
inc
sbb
mov
cmp
push
jae
outsl
and
add
xchg
mov
and
inc
inc
and
daa
and
mov
int
xor
roll
stos
add
scas
mov
fildll
jno
push
adc
jns
or
fadds
mov
dec
or
pop
jmp
xlat
orb
icebp
mov
add
xlat
popf
repz
mov
fdivs
scas
sub
jnp
adc
add
pop
add
xchg
mov
das
mov
dec
mov
mov
sub
dec
ds
fnstenv
sar
cwtl
sub
mov
jbe
dec
mov
ret
jl
cmp
sbb
aas
mov
jbe
mov
or
push
ret
jae
or
dec
fldt
rorl
sbb
and
bnd
mov
repz
lods
mov
aam
in
pmaxub
adc
sbb
dec
dec
shlb
ljmp
mov
adc
pop
sub
adc
fwait
dec
cmp
mov
xor
movsb
movsl
nop
mov
mov
cmpsl
cltd
adc
jle
or
add
mov
inc
nop
jge
pop
lret
lahf
fcmovbe
outsb
sbb
or
xor
dec
cmp
cltd
jo
ret
xchg
mov
xchg
lret
mov
das
repnz
sbb
sbb
dec
xchg
sahf
stos
dec
and
xchg
lods
sbb
mov
not
in
cmp
add
cmp
inc
add
popa
aad
shl
out
out
sbb
push
in
ret
bsr
jne
jmp
sub
into
xor
fcoml
in
mov
jne
and
mov
sahf
mov
dec
mov
call
outsb
cmp
inc
cmp
jne
jg
add
sbb
cmp
test
out
or
mov
int
test
pop
aad
and
insl
xor
mov
and
mov
stc
rclb
int3
ror
mov
in
push
pop
or
aad
gs
cs
popa
xor
xchg
mov
push
sahf
out
sbb
inc
lret
dec
push
sbb
iret
aaa
mov
mov
fistl
add
or
leave
fstl
in
add
fldl
and
jp
push
adc
pop
addr16
jl
fwait
cwtl
xchg
sub
andb
and
outsl
das
daa
dec
rcrl
lods
or
or
loope
sub
mov
out
xchg
fucom
xchg
cmp
jge
push
mov
mov
sbb
ret
mov
jo
push
mov
paddusw
rcll
mov
stos
aam
lret
outsb
or
mov
mov
sbb
xchg
mov
sub
dec
mov
cwtl
mov
sub
pop
sahf
inc
cwtl
fdivs
fildll
jp
nop
fldl
pusha
inc
stc
stos
loope
shl
cs
mov
push
pop
mov
xchg
insl
xor
dec
jo
adc
cmp
lock
push
cmp
dec
inc
pop
push
inc
xchg
repz
or
mov
xor
and
test
js
popf
daa
mov
push
adcb
das
add
add
repnz
push
iret
stc
loopne
cltd
es
xchg
mov
leave
scas
mov
ljmp
addr16
dec
inc
repz
lret
icebp
push
lret
dec
xor
mov
inc
sub
in
cmp
sahf
inc
sarb
add
roll
in
jmp
stos
enter
sub
dec
aaa
out
daa
dec
out
or
ret
ret
push
sarl
cmp
leave
pop
jae
inc
in
loopne
les
in
shlb
xchg
jb
data16
inc
stos
adc
pop
add
pop
xchg
mov
pop
push
repz
and
or
mov
data16
push
add
jle
xchg
cli
adcb
inc
stos
jecxz
data16
int3
mov
pusha
sub
pop
inc
lods
fnstenv
jle
dec
imul
xchg
lods
push
sub
stos
or
adc
rcrb
loopne
dec
mov
int
dec
arpl
cltd
push
push
sbb
or
cmpsb
idivb
insb
xchg
in
push
es
or
mov
xor
push
push
mov
add
jnp
imul
pop
loopne
jbe
push
mov
dec
es
cmp
je
jmp
push
loopne
cmp
jae
loopne
je
cmpsl
push
push
mov
xchg
push
mov
or
add
nop
out
cs
leave
cmp
not
nop
insl
ljmp
in
bound
xchg
stos
daa
je
xchg
das
lea
shlb
mov
movsl
xchg
or
or
mov
sub
cmc
rolb
ja
push
dec
aas
lret
stos
cmp
aam
test
insl
addr16
mov
adc
aam
push
ret
mov
mov
stc
xlat
int
jg
iret
push
inc
xchg
fidivs
sbb
movsb
or
xlat
lods
cld
repnz
dec
bound
fxch
mov
push
pop
lret
mov
pushf
mov
dec
loope
add
adc
bound
xor
ficomps
xchg
xor
mov
imul
sbb
mov
int
sub
push
dec
sub
cltd
lods
into
push
std
add
dec
adc
mov
cld
pop
gs
imul
sub
bnd
sbb
fucom
jbe
lret
push
jo
cwtl
fildl
mov
ds
xorb
mov
mov
push
inc
and
mov
mul
sbb
mov
mov
push
jle
arpl
mov
sub
jg
xor
xor
add
cmpsb
pop
test
movsb
je
xchg
sub
lret
sub
cmp
stos
lahf
lret
inc
dec
loop
jbe
les
push
ja
or
jmp
sbb
ljmp
mov
call
clc
orb
test
ficompl
and
loopne
mov
sub
push
sbb
jno
sahf
mov
lods
orl
icebp
mov
fstl
addb
cld
sbb
xchg
scas
mov
mov
lock
or
push
pusha
scas
adc
sbb
xor
jecxz
ja
cmpsb
xchg
je
jg
in
cmpsl
cmpsb
in
mov
std
jns
in
and
scas
repz
lret
inc
mov
and
lods
test
std
ret
loop
jbe
scas
repz
stos
lret
fdivrs
rcll
push
and
bound
mov
out
ds
data16
ds
dec
jae
test
mov
shr
dec
nop
sub
ret
dec
mov
icebp
pushf
imul
fmul
add
mov
xchg
pop
hlt
or
int
adc
mov
lock
mov
ss
iret
push
cmpsl
pop
add
test
pop
mov
fcmovne
adc
pop
gs
jae
shrd
sbb
xor
sub
mov
push
xchg
pushf
lds
mov
push
imul
popw
xor
push
fdivl
mov
mov
popa
popa
sub
mov
sbb
clc
add
or
ds
inc
dec
stc
pushf
or
adc
out
dec
dec
leave
dec
jne
mov
mov
pop
add
or
mov
lret
mov
mov
and
mov
test
xor
adc
sbb
fisttpl
cmp
out
xchg
dec
hlt
leave
push
inc
add
jecxz
pop
test
pop
test
mov
test
mov
aam
sbb
imulb
mov
push
jp
adc
sbb
adc
jne
lods
add
xor
sub
mov
pushf
rclb
cmp
jl
push
addr16
pop
sub
adc
xor
pop
dec
outsb
xchg
mov
js
test
negb
filds
sub
cmpsb
mul
cmp
cs
pop
and
fmulp
lea
dec
mov
or
and
ds
loope
addb
mov
jp
test
std
lahf
xchg
sbb
inc
pop
push
mov
stos
into
mov
push
cli
mov
xor
jmp
jnp
nop
movsb
repz
dec
ja
and
movsl
xlat
fdivl
pop
aad
sub
ds
or
jnp
sti
push
aad
mov
mov
and
lcall
js
inc
das
dec
mov
adc
push
rorb
jg
ss
dec
sub
fucomi
mov
mul
inc
push
xchg
hlt
push
out
xchg
xchg
popf
pop
stc
push
rorb
lcall
mov
faddl
adc
idivl
mulb
push
cltd
frstor
and
addr16
xchg
pusha
mov
inc
in
mov
adc
mov
cmp
sbb
or
pop
stos
inc
dec
shl
ficompl
imul
rorl
and
cmp
ficoms
xor
lods
push
aaa
es
xor
fsubrl
dec
xor
push
and
lods
fcomip
dec
in
test
mov
test
shrl
cmp
outsb
iret
sbb
mov
adc
insl
enter
add
stos
push
pop
ficoms
cmp
pusha
inc
sbb
hlt
mov
loopne
icebp
sub
enter
jns
test
mov
dec
mov
sti
inc
cmp
cmpl
pop
rcl
sub
loop
add
loop
andb
jae
mov
faddl
mov
pop
lahf
repz
lret
sub
jl
cmp
xor
xor
xor
sub
inc
cwtl
shll
loop
push
mov
dec
ljmp
jl
bound
add
je
lcall
cmp
xor
adc
jb
js
fistl
popa
sahf
push
push
cwtl
xor
push
mov
sahf
xor
imul
xor
inc
sbb
sbb
jecxz
testl
and
jmp
inc
pop
xlat
jecxz
xlat
cwtl
ja
imul
jge
jo
rolb
clc
xor
adc
push
mov
cmc
mov
orb
loop
int
inc
fdivs
sub
push
jmp
sbb
mov
and
fnsave
sub
inc
pop
and
push
fisubrs
jg
aad
xor
add
mov
mov
xchg
inc
loop
jbe
xor
cmc
out
cltd
adc
pop
mov
jle
addb
test
negb
mov
lcallw
ficomps
mov
jge
aas
mov
mov
test
inc
out
negb
dec
xchg
xchg
bound
shl
aam
sub
pushf
movl
xchg
push
mov
and
out
repz
add
xor
stc
test
cli
insl
adc
add
into
movsb
mov
mov
adc
lock
sub
mov
stos
push
and
push
in
jae
sub
enter
inc
push
xchg
enter
imul
sub
dec
or
sub
in
xor
xor
adc
mov
xchg
sbb
pop
inc
test
lcall
cld
jae
shll
jnp
movsb
aas
and
mov
out
xor
out
push
dec
xor
push
push
mov
adc
imul
sahf
cmp
aad
mov
jns
imul
rcrb
aad
stos
fcomp
jo
xchg
insl
pop
mov
test
sbb
int3
movsb
lods
std
or
sahf
adc
jge
xchg
sbb
sbb
jmp
cmc
xor
stos
sbb
mov
pop
push
or
jp
push
jge
daa
repz
inc
sti
jmp
jg
xchg
loopne
mov
or
decb
lock
cmp
push
out
push
lea
test
push
je
mov
xchg
outsb
stos
popf
call
xchg
mov
sub
mov
sti
insb
mov
pop
and
or
jl
rclb
movsl
frstor
imul
xor
dec
push
stos
lods
mov
int
mov
int
outsb
sub
push
scas
mov
sahf
data16
into
sub
out
lods
cmp
popf
imul
imul
loope
js
or
cmp
test
bound
mov
cmp
sbbb
mov
mov
mov
imul
adc
rcll
sub
mov
int3
bound
sbb
in
or
pop
cmp
cmpsb
test
pop
mov
or
xor
push
out
add
sarb
pushf
add
xchg
jle
xor
push
loop
test
mov
jp
jmp
cwtl
outsb
pop
add
push
cmp
es
add
adc
mov
cwtl
or
sbb
jb
rcrl
jno
xor
idivl
lcall
faddl
aam
repz
loopne
jb
sub
sbb
mov
and
mov
or
mov
fisttpll
push
or
lret
sbb
sbb
decb
cmp
in
rolb
pop
into
in
pop
jmp
sub
cmpsb
inc
mov
inc
cmc
aad
loop
iret
sbb
mov
pop
xchg
dec
add
aas
test
shlb
xchg
cmp
nop
mov
outsl
mov
dec
or
out
ja
jb
stc
fsubrl
jmp
lds
daa
add
pop
mov
pop
adc
jae
add
loop
jecxz
je
fidivl
cs
adc
push
add
sub
cltd
pop
hlt
xor
out
aam
xchg
dec
push
jo
addl
stos
xor
loopne
call
nop
sar
pop
cmp
xchg
scas
xchg
jge
out
and
out
push
cmp
mov
push
xchg
test
mov
stos
out
push
jmp
and
inc
daa
andl
add
mov
jb
dec
gs
sbb
jns
in
lds
or
lret
jb
sarb
and
sbb
aaa
stos
aas
add
iret
cmpsl
adc
lds
aam
out
xchg
dec
arpl
data16
mov
and
or
cmove
sbb
and
cs
add
pop
xchg
mov
or
jo
mov
lods
and
push
addr16
inc
inc
xchg
test
mov
and
imul
sub
push
mov
loopne
gs
mov
add
dec
xchg
out
shrb
rorb
xor
enter
cmp
jg
jle
test
es
jno
into
jl
arpl
push
pop
mov
stos
push
ja
sbb
sbb
lcall
jb
jle
ret
test
dec
adc
cs
mov
sub
adc
aam
push
insb
sbb
dec
jae
xchg
add
rep
in
aas
addb
push
js
mov
sbb
push
fsubrl
pop
popf
fnsave
int
fcmovbe
test
movsb
inc
icebp
sbb
adc
mov
addb
shr
nop
mov
out
mov
dec
pop
xchg
add
mov
push
in
mov
mov
lret
or
cltd
icebp
inc
je
and
pop
mov
inc
out
lods
fisubs
sbb
cmp
jne
shlb
orl
ja
jo
ret
pop
pop
test
repnz
mov
imul
and
sbb
xchg
mov
sar
or
adc
arpl
jne
push
xchg
pop
pop
jae
sub
ds
stos
jo
xor
sub
jns
push
rep
das
sbb
cltd
movsb
jo
aad
jp
xlat
test
fcom
divb
sub
test
ret
ss
sbb
cld
mov
mov
sbb
call
mov
mov
es
hlt
jl
xchg
jle
xor
int3
lds
enter
dec
mov
jmp
mov
push
mov
arpl
cltd
pop
xor
out
out
xor
scas
mov
shll
ret
test
ja
ret
and
jle
icebp
and
push
inc
in
repnz
iret
push
jg
and
dec
inc
sub
inc
lods
test
repz
mov
aas
xchg
loop
imul
lahf
xchg
mov
fcmovne
push
push
or
xlat
out
xor
imul
hlt
aad
ret
clc
mov
push
xor
loope
lret
mov
inc
push
push
xor
test
movsl
jbe
stos
jno
adc
pop
inc
pop
out
mov
shll
xor
push
dec
in
inc
test
aaa
jns
sti
lds
xchg
testb
enter
addb
adc
call
stc
iret
pusha
in
and
xor
and
repnz
push
imul
dec
cld
jg
cmp
mov
sbb
ret
cmp
and
add
in
sub
pop
into
in
iret
xor
push
cwtl
popl
cli
outsb
and
xchg
mov
mov
push
and
psadbw
push
test
inc
sbb
adc
fmul
or
fmuls
sub
imul
xor
stc
stos
cmpsl
xor
in
iret
sub
mov
or
nop
mov
aam
or
cli
sahf
sahf
fmul
jmp
outsb
ja
in
sub
out
jg
fsubrs
pop
push
xor
pop
pop
data16
clc
inc
roll
jae
loope
push
mov
xor
nop
push
jbe
mov
push
xchg
sub
sub
loopne
inc
mov
pop
into
push
lcall
notb
mov
dec
ss
divb
das
icebp
clc
jnp
or
icebp
mov
inc
pop
add
lret
cmp
out
adcl
sarl
sbb
xor
mov
push
mov
adc
adc
push
pushf
adc
pop
inc
adc
addl
popf
aaa
insb
inc
inc
das
add
inc
cld
dec
cld
adc
shrb
in
imulb
js
sub
mov
jo
sbb
lock
cmp
shr
mov
xor
push
popa
pop
mov
pop
test
mov
and
std
mov
arpl
push
mov
xchg
cmp
dec
mov
enter
jb
pop
sbb
sbb
pop
mov
fs
addl
andl
dec
sahf
imul
rcr
outsb
adc
dec
mov
push
pushf
rorb
cmp
push
aaa
push
daa
jno
ret
sbb
inc
pop
dec
dec
xor
add
les
or
data16
cs
lret
adc
sti
jg
add
push
in
call
sahf
fildll
add
push
push
cmp
pop
shrb
xchg
mov
mov
fnstcw
jne
xor
xchg
dec
aas
in
jb
jo
xchg
pop
arpl
cmp
stc
push
xor
ret
mov
cltd
dec
push
in
test
add
add
mov
jne
fs
leave
les
out
ud1
loope
sbb
push
fildl
loopne
xchg
mov
out
cmpsl
enter
lret
and
popa
push
dec
mov
or
lods
xchg
out
mov
mov
fwait
sti
sti
test
mov
fadd
jmp
add
jmp
mov
sbb
or
mov
aas
jge
dec
mov
mov
in
mov
push
out
pusha
mov
nop
ss
fidivl
jecxz
push
ret
dec
xchg
std
adc
jp
push
es
inc
push
push
dec
and
pop
aad
push
mov
pop
cmpl
sbb
jo
cltd
nop
inc
mov
jns
leave
sbb
mov
xlat
popf
add
mov
fsubrp
sti
sbb
jns
pop
and
out
mov
jnp
movsb
dec
addb
out
out
stc
pop
aaa
aas
sub
xlat
mov
mov
subl
das
addr16
cmp
xlat
sbb
xchg
adc
vorpd
test
in
dec
xor
cmp
mov
ds
push
nop
cmp
adc
cmp
aad
insb
pop
xor
sbb
int3
sbb
ret
bound
out
inc
add
adc
mov
xlat
inc
hlt
daa
lcall
cmp
std
shll
loop
out
pop
clc
jb
mov
pop
je
iret
sub
pop
pop
dec
xchg
fbstp
jo
mov
xchg
push
adc
ret
repz
or
push
shl
mov
and
mov
pushf
jno
push
test
jle
inc
fldt
das
sub
inc
and
mov
push
mov
push
inc
loop
scas
mov
rcrb
sub
and
std
jmp
mov
fstpt
cmp
sahf
outsb
sti
cld
mov
mov
incb
leave
mov
dec
cmp
mov
ret
int
pop
aam
aam
xchg
mov
aad
adc
mov
pushf
outsb
pop
fucom
scas
xchg
pushf
ss
lods
cmp
idivl
sbb
daa
int3
data16
and
jne
and
and
cmp
popf
xor
push
cmpsl
out
or
mov
daa
mov
daa
or
xorl
andl
pop
insl
dec
push
in
fsubrs
rcl
lcall
loope
aas
add
pop
sub
push
sbb
fmul
jne
jle
pop
push
addl
int3
cmp
and
repnz
cmp
jne
dec
jnp
sahf
dec
in
or
jne
hlt
sti
jno
fcmovu
push
sub
imull
adc
cmpsl
or
enter
pop
xor
lods
jns
lds
in
mov
pop
and
out
mov
in
mov
imul
pusha
xchg
aam
or
lret
sbb
jle
push
xlat
mov
hlt
mov
mov
mov
push
push
jge
dec
pop
adc
xor
and
bound
sbb
push
into
std
xor
test
bound
mov
pushl
sub
loopne
jbe
fistl
insl
mov
ds
cs
lds
in
ljmp
mov
cmp
fsub
repnz
push
div
jl
jnp
mov
movsb
dec
in
lcall
mov
test
sub
push
push
es
icebp
je
cld
repnz
das
mov
cmp
jmp
xchg
iret
push
mov
pop
mov
adc
sbb
xchg
pushf
aad
sub
bnd
ds
cli
in
pushf
addr16
in
clc
xchg
mov
rcrl
jl
lahf
jmp
stc
jge
andl
sub
pop
rcll
loopne
add
test
and
adc
inc
bound
in
lock
mov
xor
and
js
sahf
mov
in
std
inc
movsb
push
cmp
repz
lret
fstps
sahf
or
popf
das
lcall
mov
sub
add
out
aam
pop
pop
mov
mov
push
mov
daa
pop
cmp
jle
stc
pushf
ljmp
fcoms
push
inc
imul
adc
inc
pusha
push
add
hlt
or
and
movsb
into
out
cmpsl
ficompl
push
jns
enter
mov
fsubr
icebp
ljmp
out
xchg
mov
adc
sbb
pushf
fadds
sub
lea
dec
lock
sub
bound
ja
loop
add
sub
add
mov
xchg
bound
jl
mov
and
push
fbstp
pop
mov
popf
loope
add
dec
xor
jmp
jecxz
aad
xlat
pop
pop
shll
or
adc
cmc
add
jmp
sub
repz
mov
ss
ror
mov
push
and
xor
stos
mov
dec
mov
and
sahf
mov
jg
xor
std
cs
in
into
sub
and
dec
orb
cmpsb
fadds
dec
push
cmp
gs
cmp
lock
arpl
xchg
gs
push
push
push
test
xchg
cltd
jge
cmp
and
mov
xchg
data16
jg
mov
add
into
test
jno
lahf
mov
push
test
ret
loope
mov
scas
je
push
dec
lock
lea
push
inc
inc
mov
push
mov
movsb
adcb
cmpsl
and
aas
xor
push
call
jl
jo
push
jecxz
xchg
mov
sbb
cmp
pop
xchg
pop
inc
dec
aam
stos
sarl
stos
jbe
test
inc
into
and
inc
je
cwtl
xchg
jmp
jge
inc
mov
clc
mov
insl
jmp
jae
andb
call
out
mov
sub
andb
test
xor
pushf
jnp
or
mov
icebp
sbb
cld
mov
in
pop
outsl
jnp
jbe
xorb
popf
stos
add
jne
lret
scas
push
sbb
in
push
pop
inc
or
push
loop
add
inc
aas
fidivrs
sub
pusha
cld
enter
mov
loope
lods
adc
lock
add
lea
jnp
cmp
jp
lret
xor
push
dec
repnz
out
lods
and
fdiv
pop
pop
mov
fdivr
cmpsl
mov
popf
push
std
les
std
jl
aam
lods
mov
adc
pop
jle
addr16
fucomi
push
imul
cmp
jl
shlb
addb
daa
jge
dec
and
jle
daa
test
loopne
mov
push
jbe
pushf
sub
insb
mov
shll
adc
xchg
or
dec
pop
adc
lret
rcl
fistl
push
xchg
cmp
lods
cld
std
push
jo
push
popa
ja
aaa
jbe
inc
or
lcall
xchg
pop
repnz
cmp
notb
stos
xchg
mov
xchg
icebp
js
js
xchg
xchg
mov
mov
sbb
sub
lahf
fiaddl
fmuls
jecxz
int
je
rcl
int
or
js
test
ret
or
popf
sbb
xor
into
jae
mov
imull
or
test
nop
lcall
shll
insb
test
pop
and
sub
fdivrl
call
loope
xlat
out
jecxz
clc
insl
sub
jmp
popf
push
push
sub
mov
push
in
mov
add
jo
into
sahf
test
sub
mov
aam
mov
push
rol
and
cltd
ds
dec
mov
push
pushf
out
loope
mov
cmp
add
cmp
pop
cmp
in
shlb
jo
popa
orl
cmp
shrl
insl
rcl
pop
es
std
or
sbb
xor
mov
cmpb
ljmp
jg
xor
xchg
jo
mov
mov
int3
scas
adc
inc
sub
push
call
les
dec
sub
cmp
nop
dec
jg
push
data16
xchg
jbe
xor
dec
xor
sub
inc
push
push
mov
stc
aaa
inc
scas
cmpsl
sbb
xchg
lods
ja
idiv
or
push
aas
push
ffree
test
xor
sbb
or
mov
test
test
sahf
aam
sub
jg
testb
lret
orl
sub
push
addr16
sbb
pop
mov
pop
mov
pop
movl
ds
mov
inc
jnp
push
and
emms
leave
hlt
pop
cmp
dec
jge
push
cltd
bound
pushf
jae
ret
mov
lahf
movsb
lahf
repz
mov
push
stc
or
movsl
ret
ljmp
xchg
pop
mov
and
int
pop
hlt
sbbl
notl
lods
jb
adc
jge
mov
loop
inc
sub
and
add
aas
nop
dec
std
mov
roll
push
test
or
ds
and
mov
mov
out
shlb
ljmp
xor
cmp
cltd
mov
jae
fs
rorb
js
ljmp
sbb
mov
insb
push
xchg
push
push
xchg
imul
loop
mov
xchg
mov
add
xor
fstpl
cmpb
clc
lretw
test
les
pop
add
mov
enter
inc
cmp
xor
sbb
jns
cmp
adc
stos
push
push
iret
sub
fsts
inc
push
push
outsl
in
movsl
mov
jnp
dec
pop
xchg
jnp
es
cld
loopne
or
dec
jle
adcb
aaa
and
dec
cs
out
in
in
ljmp
call
flds
jle
mov
or
mov
dec
sbb
cmp
sahf
pop
sbb
lret
sahf
push
push
sub
mov
imulb
jmp
ljmp
mov
sbb
pop
dec
lods
inc
shll
lcall
mov
inc
inc
ja
jbe
mov
lret
cld
inc
jne
popf
sbb
test
xchg
stos
enter
fidivrl
cli
dec
arpl
jo
cmpsl
call
jge
test
pop
sbb
hlt
mov
pand
or
jle
leave
mov
fisubrs
mov
lahf
push
loop
test
jp
or
pop
add
in
out
addl
fisubs
mov
add
gs
inc
and
xor
or
idivl
scas
in
xchg
lret
and
test
arpl
rclb
xchg
cmp
jge
push
or
or
pop
adc
mov
idiv
outsb
aaa
psrlq
push
scas
test
fwait
gs
xlat
or
or
xor
es
jae
nop
adc
mov
jbe
lea
movsb
pop
subb
arpl
dec
iret
repz
js
ret
xchg
dec
cmp
lock
cmp
cmp
pop
daa
push
daa
in
in
movsb
push
leave
dec
mov
sbb
rcll
sbb
cmp
pushf
jge
push
inc
sub
push
shl
test
cmpsb
pop
dec
xchg
mov
adc
loop
into
lds
out
shrb
pop
fnstcw
fimull
ss
dec
add
cmpsb
mov
subb
cmp
and
add
popf
mov
addr16
sbb
clc
dec
xchg
scas
cmpb
stos
outsb
or
pop
notl
jl
pushf
adc
jle
lahf
xchg
imul
mov
cmpsl
mov
mov
aas
jae
xor
xchg
mov
hlt
push
cmc
fisubrl
mov
ljmp
jl
scas
and
sahf
pop
incb
mov
sub
add
je
sbb
outsl
mov
ret
lret
les
rolb
jo
mov
jns
daa
daa
push
xchg
mov
dec
cmp
or
cmp
pusha
bound
xor
nop
or
add
xor
jp
addr16
push
aas
push
mov
ds
jb
hlt
aaa
stc
xchg
mov
jg
out
sbb
negl
in
adc
call
fnstenv
xlat
dec
adc
cli
jl
cmp
sbb
lret
test
daa
ret
jge
in
in
pop
xlat
adc
push
xchg
or
inc
jecxz
adc
xor
dec
cmp
testl
sti
lods
ss
stc
sbb
push
or
ja
cmp
jp
fdivr
or
popa
mov
mov
rcll
arpl
push
add
cmpsb
dec
mov
test
mov
adcb
add
push
loopne
in
arpl
push
shr
push
mov
sbb
orl
push
sbb
cld
push
outsl
push
sub
add
cltd
cwtl
push
push
fdivl
jl
test
test
xorl
and
dec
inc
mov
test
cld
scas
push
cmpsl
inc
jp
mov
filds
push
imul
pop
sarb
or
outsb
mov
xchg
xchg
and
addb
xor
push
mov
mov
jg
push
cmp
pop
xchg
jno
int3
les
addr16
sbb
sbbb
xor
fimuls
pop
insb
add
push
imulb
pusha
sbb
sti
cmp
lcall
mov
addr16
sbb
and
inc
mov
dec
outsl
mov
jo
fildll
adc
jne
cmp
pop
aad
jns
es
push
sbb
add
add
shll
divb
dec
dec
in
scas
xchg
scas
xor
in
adc
mov
pop
cmp
mov
mov
sub
pop
in
xchg
cmp
inc
pop
or
mov
fwait
push
dec
js
das
xchg
call
cs
aas
lret
cmpsl
ds
hlt
ja
iret
cmp
iret
lods
lods
es
add
fsubl
fmull
cmp
add
aam
jno
push
ja
arpl
inc
dec
add
xchg
jge
push
mov
or
ret
and
and
out
mov
std
lret
xchg
scas
out
test
inc
mov
lcall
je
repz
mov
add
bound
mov
out
fs
xor
sub
mov
repnz
fsubrs
pusha
jecxz
inc
test
nop
leave
sub
aam
lds
int
test
stc
nop
ja
nop
lods
adc
std
jne
fwait
jnp
lea
and
xchg
nop
insb
fwait
push
stc
repz
ss
add
iret
pop
popa
vmread
in
inc
mov
mov
das
jno
and
insl
adc
daa
dec
sub
and
adc
insb
jbe
in
lret
repnz
mov
fisttps
loopnew
sbb
loop
int3
sub
jno
gs
cmp
daa
cmp
xor
mov
jge
shl
dec
fwait
movb
mov
icebp
jb
insb
lret
test
rcr
adc
lds
mov
sub
adc
adc
test
push
mov
in
aas
icebp
out
add
insl
mov
sahf
mov
mov
ds
mov
dec
push
sahf
xor
roll
inc
sub
js
xor
movl
push
lods
sbb
in
push
xchg
cmp
cmp
into
xchg
inc
cmc
outsb
jmp
push
inc
stos
mov
mov
gs
lds
movsb
sbb
mov
movsl
cmp
dec
fdivs
or
les
or
scas
mov
cld
and
testl
inc
jns
lods
movsl
push
dec
fildll
mov
push
cmp
pop
stc
pop
adc
mulb
mov
add
xchg
lods
pop
rolb
pop
xor
inc
dec
popa
and
stc
imul
push
leave
mov
addr16
jl
xchg
inc
test
xor
test
cli
ret
test
iret
fisttps
sbb
add
mov
pusha
scas
call
popa
mov
call
fsubs
pop
std
mov
pop
addr16
push
mov
and
fwait
bound
pop
loope
lret
test
mov
mov
mov
sti
fidivs
push
addb
or
stos
push
pop
aam
dec
mov
xor
subl
aam
aam
fiaddl
hlt
in
pop
sahf
in
jbe
pop
inc
pop
push
adc
call
xlat
mov
and
call
adc
jge
loope
xor
mov
imul
sbb
mov
sbb
out
jno
inc
mov
jp
add
incl
dec
or
aaa
or
cltd
lcall
xlat
cs
push
enter
addr16
lcall
xchg
test
ja
or
cld
lock
into
pop
cli
push
and
or
or
pushf
push
push
pop
mov
jp
mov
mov
pop
or
mov
and
sub
or
dec
inc
lock
cmpsb
xchg
scas
mov
pushf
or
aas
fisubrs
and
subb
sub
fwait
notl
call
sub
mov
ja
iret
jle
out
mov
sbb
jbe
pop
xor
pop
movsl
in
pop
inc
lret
cmp
jbe
add
push
movsl
fcmovb
mov
jae
xchg
pusha
fistpl
mov
dec
xor
jne
cmp
daa
pop
mov
inc
stc
inc
sahf
je
leave
mov
clc
mov
arpl
lods
int3
imul
jb
cmpsb
scas
mov
and
scas
cmp
jmp
jo
pop
ficoms
mov
inc
xchg
into
gs
pop
jge
add
sbb
dec
insl
jb
adc
jecxz
mov
fisttpl
fwait
xor
or
arpl
pushf
lea
mov
iret
movsb
mov
stc
testb
xor
cmp
test
push
jg
xchg
outsl
ret
xchg
inc
inc
test
dec
jmp
popa
mov
dec
sub
lret
mov
inc
jae
int3
out
mov
dec
in
lret
add
and
mov
out
scas
mov
pop
mov
test
cmp
lret
iret
incl
cltd
add
int3
add
or
push
and
mov
adc
mov
repnz
lcall
fimull
xchg
jmp
fwait
imul
in
stos
pop
cmpsb
push
shlb
cmpsb
mov
xchg
sbb
pop
cmpsl
mov
or
dec
addr16
cwtl
add
in
test
enter
push
ds
loopne
pop
fwait
jo
movsl
leave
cmp
push
ret
xchg
mov
loope
xchg
clc
mov
mov
pop
mov
nop
cs
sub
in
js
mov
jle
outsl
xchg
movsl
cmp
push
sbb
pop
rclb
outsl
or
sbb
add
outsb
xchg
mov
xchg
pop
lcall
lds
sub
mov
mov
iret
scas
mov
clc
add
jne
insb
fs
out
call
clc
sbb
aas
jbe
inc
out
cwtl
add
or
es
xor
mov
dec
movsb
pop
aam
dec
xchg
or
aas
jg
cmp
scas
jl
or
push
test
jne
cmp
and
test
jnp
fnstenv
sbb
in
movl
outsl
iret
jmp
xchg
ljmp
pop
insb
jne
add
call
jp
sub
pop
in
inc
jne
test
outsl
push
cmp
fdivrs
sub
xchg
xchg
es
into
dec
out
mov
cltd
mov
push
fcoms
inc
xchg
repnz
push
out
out
inc
dec
arpl
ficomps
jg
push
sbb
test
rcll
pop
aaa
cwtl
lret
lods
cmp
and
sti
das
or
sbb
xor
xchg
adc
shl
shlb
add
mov
inc
adc
loope
outsb
les
arpl
mov
mov
leave
sub
cwtl
mov
add
scas
mov
out
or
int3
or
rcrl
jge
cltd
xchg
xor
inc
stos
daa
xor
jne
push
fneni(8087
xor
jbe
lea
pop
loop
mov
jne
in
sub
clc
cmp
test
je
call
stos
xchg
sub
or
scas
xchg
jns
ljmp
addb
xchg
arpl
data16
mov
sahf
aas
mov
push
mov
or
rolb
ds
into
syscall
push
mov
mov
cmp
ss
adc
push
in
pop
xor
mov
movsw
add
inc
adc
xor
jg
pushf
push
repnz
mov
dec
aaa
jmp
add
insl
daa
call
mov
mov
jl
cmpsb
push
inc
stos
ror
das
in
mov
call
or
inc
sub
adc
in
orb
outsb
push
jg
imul
pop
leave
or
adc
lahf
testb
xchg
or
outsl
in
mov
enter
cltd
xor
mov
in
pop
repnz
cli
or
in
sbb
push
jnp
or
and
jb
aam
rorl
sub
push
xchg
seta
dec
sub
fisubs
jg
imul
xchg
imul
popf
fs
pop
sub
jp
ret
mov
imul
push
aad
xchg
pop
aaa
and
add
inc
and
jae
mov
pushf
out
loop
movsl
jmp
fiaddl
ss
jns
sti
or
mov
dec
sub
es
shr
cmc
testl
adc
std
outsl
sbb
fs
fcoms
lods
sub
inc
or
cmp
out
cmc
in
add
in
mov
or
inc
sub
cmpsl
pop
adc
and
cmpsl
cmc
or
mov
cmp
ljmp
jp
mov
mov
mov
mov
loopne
ds
mov
lcall
inc
and
mov
xorb
in
jns
fmuls
call
adc
out
popa
dec
push
xchg
xor
pop
fsubs
je
jbe
xor
popf
push
pop
ror
jne
insb
nop
stos
repz
pop
push
popf
mov
std
or
decb
je,pn
and
cmp
fidivrl
cmc
into
les
test
push
out
xlat
push
cld
fcmovb
sub
sub
shl
xor
arpl
sub
insb
or
inc
addr16
inc
pusha
sysenter
add
stc
cmpsl
mov
shrb
arpl
inc
into
xchg
lds
mov
out
movsl
inc
xchg
inc
pop
cmp
jae
xchg
inc
mov
lea
lret
pop
sarb
sbb
pop
insl
or
jnp
xor
cmp
mov
test
jns
cmp
jae
stos
sbb
aad
mov
and
jo
mov
inc
xor
mov
push
subl
xor
or
jmp
pushf
mov
mull
scas
mov
std
ljmp
inc
mov
mov
aam
out
int
clc
shr
std
adc
sbb
inc
mov
adc
dec
pop
movsl
lcall
aaa
mov
aaa
jg
pop
jae
jae
push
cmp
das
lods
stc
dec
in
int
aaa
test
popf
sbb
mov
xor
inc
xchg
jo
movsb
sub
cli
pop
add
lret
fildl
hlt
pop
fwait
inc
sub
mov
imul
and
imul
std
andl
pop
or
ds
and
lds
rcrl
test
pop
mov
loop
fwait
lods
xchg
mov
or
iret
div
es
test
fstps
call
mov
cmpsb
jmp
sub
add
dec
xor
and
xchg
cmp
mov
push
push
jmp
adc
pusha
nop
nop
ss
pop
mov
jo
push
and
cmpb
dec
iret
push
cmc
xchg
jmp
xchg
rcll
mov
ss
sbb
lahf
rcr
leave
jae
pop
dec
xor
inc
xchg
loopne
mov
mov
mov
data16
mov
adc
pop
mov
in
lret
jae
add
sti
mov
lock
xchg
pop
pusha
cmpsl
pop
adc
push
jb
xorb
mov
mov
jg
mov
xchg
push
aam
push
je
cmp
sbb
push
sbb
aas
lret
sbb
fmuls
inc
in
xchg
fstpt
cmp
int3
mov
ja
leave
sbb
leave
sbb
mov
mov
push
inc
cmp
addb
and
cmp
repz
xor
out
pop
daa
xor
repz
push
jl
mov
sbb
mov
sti
sbb
outsl
outsb
sbb
pslld
cmp
pop
rcl
jge
or
mov
sbb
or
or
lret
or
std
or
sbb
sbb
imul
pusha
pop
or
arpl
das
mov
sub
cmp
out
outsb
cltd
sub
lock
mov
jmp
es
mov
addr16
mov
adc
mov
add
and
test
in
stc
fidivrs
jmp
xorl
std
jge
in
imul
cmc
pop
adc
sub
cmpsl
mov
jb
mov
add
add
sbb
ds
aaa
jb
inc
in
pusha
decb
lret
adc
and
cltd
imul
les
xchg
out
or
xchg
ja
cwtl
cmp
popf
js
xchg
repnz
xchg
aam
jb
push
push
aas
rcrl
iret
jge
scas
movsb
lret
dec
fs
ja
mov
int3
iret
and
sub
into
xchg
jae
repnz
sbbb
mov
sub
sahf
push
lcall
jmp
jo
dec
mov
addb
xchg
in
inc
mov
push
mov
pop
into
je
jns
jge
jno
mov
cmp
cld
out
loope
movsl
pop
add
add
outsb
popf
push
call
dec
cmpsb
es
and
xchg
insl
insb
je
pop
pop
test
mov
out
fsubr
test
cli
pushf
xchg
jle
xor
dec
je
iret
add
hlt
imul
mov
les
das
jbe,pt
in
dec
pushf
mov
repnz
pop
stos
addb
js
xchg
cmp
lea
add
aas
fmuls
test
mov
sbb
mov
push
scas
adc
mov
jmp
jne
inc
cmp
addr16
mov
mov
lcall
out
out
inc
std
fisubrs
mov
mov
jle
testl
inc
scas
inc
mov
in
inc
adc
je
xor
mov
cs
test
popl
cmovo
mov
insl
cmpsb
pop
xchg
jb
adc
cmpsl
sbb
jg
icebp
fimull
adc
mov
sbb
repnz
nop
xchg
gs
aaa
xchg
jno
sub
sbb
jge
cmp
mov
dec
dec
xchg
sbb
dec
mov
mov
pusha
sub
mov
jne
hlt
outsl
loop
fildl
aad
adc
enter
pop
pop
loope
pop
mov
dec
xor
adc
cmp
out
mov
cmp
xchg
popa
mov
xchg
push
sbb
mov
movhps
stos
pushf
lods
mov
push
daa
inc
dec
dec
pop
jbe
test
and
fcomip
out
sbb
mov
and
or
outsl
je
or
fbld
stos
sub
mov
shrb
mov
mov
sub
sub
add
fsubl
jne
fwait
jnp
fwait
ud2
push
lret
popa
xchg
push
jae
add
mov
or
cmp
or
into
lods
int3
pop
push
and
orb
mov
pop
movsl
dec
divb
in
dec
cmp
pinsrw
or
ja
add
imul
dec
int3
or
add
stos
stos
lret
add
xchg
loop
sbb
cmp
xchg
cmp
popa
sbb
pop
pusha
mov
int
jno
adc
push
aam
movsl
push
xor
jg
and
repz
jno
rcl
mov
mov
in
sub
ret
in
leave
xchg
lcall
out
das
in
add
xchg
test
pop
sub
shr
addl
aaa
mov
xor
and
mov
inc
pop
xchg
pusha
addr16
cmp
repz
push
jle
ficoml
lret
pop
or
and
mov
lods
add
push
and
xor
ud0
mov
push
fidivs
les
stos
ret
jmp
lret
jmp
test
push
ficoms
sbb
aam
pop
lods
jns
lock
test
cmp
jbe
in
je
push
sub
ja
nop
inc
push
fwait
push
popf
test
pusha
push
push
xchg
aam
fwait
push
pop
adc
movsl
cmp
cmpsb
sbb
cwtl
push
pop
mov
dec
sarl
lods
insl
or
es
jne
daa
cmpb
sub
lret
add
aas
jp
xchg
aaa
test
les
xor
insb
mov
xchg
imul
mov
sti
sub
and
out
stos
sub
mov
xlat
inc
jecxz,pt
lock
imul
pop
dec
mov
call
jnp
mov
or
dec
sub
xor
mov
push
xor
int
je
test
decl
out
adc
mov
loop
nop
pop
addr16
test
mov
sbb
imul
dec
loope
inc
push
clc
jg
jns
cmc
mov
mov
xor
shlb
leave
mov
in
mov
inc
mov
dec
movsb
mov
das
mov
int3
pop
mov
aam
xchg
loopne
add
mov
pop
mov
andb
mov
xchg
cmp
shl
call
ret
lock
lock
or
mov
andl
ret
lock
xchg
leave
cmp
mov
test
push
fnstenv
loopne
cmp
sub
es
and
shl
ds
mov
sub
cmpsb
adc
loope
or
loop
mov
xchg
cmpsl
movsb
xor
adc
test
add
cwtl
inc
cmp
jle
ljmp
shll
mov
sub
push
add
mov
xor
cmp
dec
add
sahf
add
pop
ret
cmp
icebp
repnz
lret
iret
inc
mov
inc
movb
push
sbb
and
pusha
add
mov
icebp
mov
xchg
lret
pop
lods
and
cmp
jl
out
outsb
or
jne
enter
shrl
sbb
jne
fmull
push
push
leave
pop
es
popf
scas
fbld
outsl
imul
test
xchg
dec
sbb
mov
push
jns
test
gs
sub
movsl
outsl
jge
dec
mov
push
ret
fdivl
test
dec
mov
jle
shlb
ljmp
add
pop
dec
lahf
mov
daa
pop
je
mov
adc
loop
cmpsl
test
dec
adc
movsb
mov
sub
or
popf
int3
imul
push
inc
pop
mov
test
xchg
movsb
xlat
pop
mov
orb
cwtl
xchg
fstl
jo
ds
lods
pop
mov
push
xchg
popl
les
sbb
mov
cmpsl
pop
and
test
fs
insb
das
mov
mov
and
or
and
lea
xchg
pop
xor
popf
stc
scas
sub
xchg
xchg
test
pop
aaa
test
fldt
test
mov
fwait
insb
sbb
test
test
fs
test
jge
pop
push
sub
xchg
pop
insl
nop
jae
stos
adc
sub
lahf
adc
pop
xor
fisubrl
lret
int3
bound
push
add
inc
jns
leave
cmp
jbe
push
or
scas
jnp
test
movsbl
jo
push
inc
push
jno
iret
xchg
pop
mul
das
cli
cmpsl
mov
push
rcl
jmp
fs
dec
or
test
mov
sub
mov
movsl
xor
leave
sbb
into
xor
fldcw
cli
ret
test
xchg
lcall
outsb
lret
mov
gs
ljmp
mov
mov
aam
test
inc
ret
das
dec
outsl
push
push
cld
fmul
sahf
and
mov
xor
repz
cs
adc
sbb
iret
sarb
jmp
lea
mov
add
aaa
stos
insl
mov
xor
ret
mov
jecxz
xor
xchg
es
sbb
mov
mov
iret
les
jg
mov
xor
leave
push
subb
ja
inc
adc
jae
cmp
jl
xor
out
insl
jo
pop
fdivl
pop
fcmovb
cmc
inc
shll
and
sbb
cltd
dec
pop
inc
out
jg
mov
out
sub
nop
shlb
xchg
popf
cmp
stc
pushf
into
jge
shrl
rclb
inc
mov
cmp
mov
leave
mov
repnz
sbbl
push
icebp
fmulp
in
push
or
lock
and
popa
xchg
xorl
lcall
xorb
rorb
adc
sub
rolb
xchg
notl
push
mov
sub
dec
xor
jb
pop
or
in
loop
data16
or
or
xchg
and
sub
sbb
cwtl
mov
sbb
in
jnp
xor
xchg
cld
push
icebp
cmp
dec
sub
sbb
jae
add
pop
call
adc
and
dec
das
in
pushf
lea
xlat
movsb
insb
mov
sti
arpl
fisttps
cmc
xchg
mov
imul
push
iret
dec
mov
cwtl
add
push
pop
sbb
std
fs
inc
mov
adc
dec
or
pop
sub
js
mov
out
mov
jmp
stc
sbb
nop
xor
ljmp
dec
es
lods
add
sbb
jnp
xor
push
pop
dec
inc
aas
fdivl
imul
adc
inc
test
jmp
cmpl
js
cmp
fimuls
xchg
repnz
push
imul
and
cmpsl
dec
scas
push
dec
dec
fdivs
mov
jo,pt
jb
fs
in
xor
sbb
out
js
xor
aad
testl
lods
xchg
sahf
adc
daa
test
icebp
cmc
repz
int
lcall
loope
arpl
cmc
pusha
add
add
jo
inc
lret
xchg
xor
jecxz
xor
mov
and
std
sbb
shlb
sub
test
add
testb
ror
popa
push
xchg
out
insl
lret
aad
adc
sahf
gs
jno
xor
cmpsl
pop
arpl
adc
inc
cmp
mov
insb
popa
fsts
xor
adcb
mov
or
inc
ds
mov
sub
sub
sub
mov
jo
inc
cmp
test
arpl
adc
add
out
fs
mov
push
dec
rolb
dec
lahf
aad
or
mov
push
pop
jmp
cmpsl
sub
pop
adc
add
imul
xor
mov
push
out
mov
cmp
xor
daa
outsl
dec
out
add
lods
fnstenv
popa
and
xor
into
or
push
mov
xchg
lods
or
repz
push
pop
push
inc
repz
mov
cs
sub
adc
aaa
int
enter
leave
dec
lea
ja
fstp
add
mov
cmp
xchg
jno
xor
inc
int
andl
and
or
sti
divb
fsubr
insl
add
pop
push
imul
jge
and
sbb
mov
adc
pop
pop
shrb
out
scas
leave
fcompl
xchg
pushl
push
stos
inc
cltd
mov
sbb
out
hlt
cld
imul
push
sub
test
mov
mov
out
push
psllw
rol
xor
fs
imulb
xchg
mov
mov
stos
sbb
xor
pushf
cwtl
cmp
pushf
cltd
add
loop
inc
xchg
test
dec
push
and
pop
int
adcl
sub
es
ror
js
mov
and
xchg
punpckhdq
iret
int
adc
xor
insl
push
xchg
inc
insb
cmp
fucom
leave
sub
int
push
ret
into
and
pusha
xor
mov
dec
je
cmc
enter
outsb
pop
add
push
cld
push
pusha
repnz
sub
js
sbb
out
test
out
push
push
sbb
test
sbb
mov
fwait
inc
fisubrs
fnstenv
sbb
xor
sub
ss
and
sub
rorl
stos
je
lahf
sub
std
push
fdivs
inc
adc
or
jl
hlt
subl
or
loop
push
call
pop
in
pop
fwait
out
xorl
xchg
ret
push
adc
in
jg
loopne
inc
cmp
adc
cmpsl
nop
add
push
pop
cmpsb
or
clc
mov
jne
decb
js
aam
int3
clc
add
or
cld
mov
or
out
out
int
inc
imul
test
xlat
icebp
fs
sbb
sub
loopne
push
jbe
outsl
dec
mov
pop
loop
sub
into
shl
mov
insl
mov
rorb
or
mov
daa
cmp
sbb
xor
popa
xchg
clc
adc
sbb
popa
pusha
imul
clc
jns
cld
inc
or
mov
cli
add
test
pop
lahf
icebp
adc
xor
jne
orl
pop
repnz
je
shl
call
add
sub
adc
dec
lock
out
or
add
xor
mov
pop
scas
hlt
pop
mov
sub
inc
outsl
sub
scas
sub
lcall
aas
and
fsubrs
adc
inc
mov
add
xor
and
push
test
dec
stos
test
cld
rcll
imul
or
popf
add
enter
mov
scas
mov
test
int3
xchg
insb
orl
inc
inc
loopne
popa
jge
sahf
add
lret
and
loope
fsubrs
movsb
cmp
sahf
cmpsb
ja
lret
inc
mov
mov
and
mov
push
jb
call
add
dec
movsb
pop
loope
cmp
mov
jl
or
xchg
out
xor
xchg
pop
xor
mov
movsb
popa
mov
fnsave
repnz
mov
psraw
mov
or
push
jne
and
pop
inc
faddl
mov
cs
mov
mov
push
stos
jae
sub
popf
pop
mov
xor
imul
outsb
sbb
pop
ljmp
in
icebp
es
pusha
aaa
pop
jl
stos
sbb
ret
or
cmpsl
out
sahf
mov
xor
push
in
jecxz
dec
sub
dec
pop
bound
mov
or
fidivl
test
pusha
test
bnd
lods
test
adc
mov
push
mov
inc
out
and
pop
push
sbb
ror
jne
mov
mov
jle
loop
cmp
jmp
mov
xchg
jns
jmp
pop
stos
ret
ficoml
cmpsl
dec
push
imul
push
iret
adc
and
mov
scas
xchg
or
mov
stos
jae
shrb
and
xchg
adc
or
pop
cmpsb
lods
cmp
pop
push
outsb
addr16
cli
je
sbb
adc
push
push
loopne
pop
cmc
jl
and
in
push
push
test
faddl
xchg
inc
arpl
sbb
mov
push
gs
das
sbb
lods
jbe
call
sti
mov
add
pop
and
imul
outsb
jl
fistl
dec
scas
jge
in
cmp
out
pop
push
pusha
sbb
dec
and
hlt
in
test
mov
cmp
mov
dec
mov
xor
add
cmp
or
ds
mov
jb
jecxz
jbe
jmp
lcall
cltd
scas
fstpl
mov
and
fsubrs
test
mov
cmp
test
and
push
in
mov
cmp
pushl
loopne
xchg
fucomip
fucomp
xor
loopne
out
inc
enter
fwait
dec
les
adc
xchg
popf
add
xchg
jnp
leave
movsl
sub
jmp
jg
inc
or
pop
cmp
popa
mov
xor
int
and
or
fs
psrld
cmp
jb
out
cmpsb
jecxz
addr16
fadds
shrl
js
bound
jbe
bound
rcrl
iret
push
jecxz
sub
stos
pusha
push
add
adc
mov
loopne
repnz
pop
sbb
ret
js
dec
mov
into
xchg
xor
push
clc
rcrl
out
stc
mov
or
sub
mov
mov
fsub
cmpsl
adc
shll
repnz
and
arpl
repnz
push
or
in
pushf
ja
in
sub
rorl
roll
cs
push
mov
push
sar
inc
adc
jecxz
icebp
mov
popa
cwtl
daa
cmp
fsubp
add
push
outsl
adc
jne
iret
shlb
pop
imul
fucomi
in
cmpb
jns
dec
jns
dec
jo
xor
fwait
aas
hlt
iret
pop
pop
pop
cli
cwtl
or
outsb
pop
fmuls
jae
sahf
add
jno
and
or
jmp
stos
test
in
rcrl
loope
push
in
pop
push
cmp
mov
mov
stc
sub
pop
sti
rep
mov
aad
and
add
pop
push
push
das
fimull
in
mov
mov
sbb
sbb
push
inc
insl
test
sbb
sbb
repz
dec
scas
sub
das
push
jecxz
addl
movsb
mov
call
dec
iret
jge
popa
fsubrs
les
push
aas
mov
movl
je
out
xchg
repz
and
xchg
mov
cmp
call
mov
or
jae
daa
mov
mov
arpl
push
ljmp
rcll
sub
lcall
idivl
push
sbb
test
jmp
pushf
mov
in
je
push
enter
loop
test
outsl
inc
mov
aad
add
pop
imul
out
faddl
int3
dec
cmp
jge
cmp
dec
fcmovu
jmp
inc
cmp
mov
cmp
aad
fdiv
mov
fcompl
mov
and
ror
lock
push
scas
mov
or
fcomps
cmc
pop
test
sahf
in
std
mov
dec
in
push
push
lock
decl
sub
sub
mov
arpl
mov
mov
fldenv
cmp
sbb
mov
xchg
fistpl
mull
cmp
mov
outsl
fidivrs
push
nop
insl
jl
jecxz
cmpsl
sbb
jne
and
ja
or
cmp
xor
cmp
popw
mov
out
lods
cmc
loop
mov
push
adc
cmpsb
pop
xor
or
adc
sbb
push
or
mov
xchg
mov
loope
mov
and
pushf
ljmp
pop
cli
shrl
imul
test
inc
push
mov
pop
ss
or
js
mov
ret
cmp
fisttps
mov
jbe
je
in
call
push
xor
cli
mov
or
in
pop
cli
and
pop
xchg
or
shr
fcmovnb
bound
xor
mov
sti
in
pop
lret
cmp
mov
out
jns
sti
sub
mov
rclb
mov
xor
test
cli
cmp
cmp
sbb
push
clc
lock
jnp
out
pop
push
nop
repnz
jo
push
ror
sti
in
test
jmp
or
imul
pop
or
shll
lods
sub
sbb
xchg
push
clc
imul
mov
cltd
mov
repnz
add
in
add
insl
pushf
sbb
push
pop
inc
jmp
icebp
aaa
xor
ret
popa
das
lret
inc
jo
jnp
loop
dec
xchg
dec
aam
sbb
shlb
sahf
mul
cmpsl
fmuls
iret
stos
sti
lret
cmc
jne
sub
adc
and
mov
out
loope
mov
fisttpl
inc
pop
mov
lahf
add
sbb
mov
push
jnp
xor
push
xor
loope
shrl
aas
push
aas
push
jbe
sub
add
in
out
sub
scas
outsl
jbe
test
pusha
dec
aam
ret
sub
xor
stos
or
sbb
sub
rcll
xchg
xor
mov
add
std
shrl
lods
jno
hlt
ja
gs
xlat
data16
aas
pop
int
movsb
sahf
adc
sub
movsl
cmpsb
test
int
popa
pop
xchg
adcb
pop
out
clc
pop
divb
mov
nop
push
push
pop
sub
or
add
int
lods
rolb
add
stos
adc
sar
std
mov
jbe
push
arpl
or
ret
pop
outsl
xor
xchg
scas
pop
test
push
mov
stc
addr16
es
pop
push
sti
mov
xchg
stos
fdivr
mov
ljmp
inc
jle
sub
lahf
mov
cltd
dec
push
push
es
pop
add
cmpsl
in
dec
cwtl
mov
pop
lods
pusha
cmp
push
dec
stc
lret
rorl
jecxz
push
ja
stos
mov
call
mov
fiadds
cmc
or
mov
xchg
sub
cmp
jae
pop
pusha
shlb
xor
enter
mov
xchg
and
pusha
push
mov
mov
mov
mov
jmp
sub
pop
cmp
enter
push
sbb
test
mov
repz
enter
addr16
pop
jne
xor
mov
mov
hlt
fimull
loop
dec
rcrb
mov
iret
arpl
xor
push
sbb
pushf
icebp
xchg
arpl
in
stos
std
sbb
out
pop
lods
xchg
ja
jg
pop
cmpsb
sub
pop
push
cmp
es
xor
insl
pop
hlt
sbb
push
cmp
call
inc
aam
jmp
jg
movsl
cmpb
insl
das
jb
mov
addr16
ss
push
pop
cmp
sub
and
aad
out
hlt
test
inc
leave
into
cmp
ja
in
stc
push
out
or
in
in
push
cmpsl
not
sub
arpl
rorl
leave
ss
push
inc
arpl
rorw
xlat
popa
int3
sbb
inc
cmp
push
push
int
pusha
test
into
jno
inc
cmpsb
xchg
mov
jle
pop
and
dec
das
in
adc
arpl
cli
imul
cmp
adc
dec
out
mov
popf
push
push
add
out
xlat
loope
mov
ficompl
lret
sti
gs
std
testl
mov
xchg
lods
mov
mov
mov
jno
inc
mov
in
adc
sbb
std
or
movsl
sbb
xchg
ret
stos
pop
jp
push
and
pop
stos
mov
out
imul
push
arpl
in
adc
orb
and
data16
add
xor
rolb
sbb
mov
pop
or
xlat
pop
lock
bound
sbb
ror
xchg
ret
data16
adc
out
pop
loope
sbb
lahf
stc
mov
aas
cltd
xor
mov
mov
xor
sub
pop
sbb
lahf
test
xchg
push
xchg
lods
outsb
shlb
xor
mov
rcr
or
int3
aas
adc
pushf
add
dec
or
adcb
mov
xchg
or
xchg
dec
mov
inc
add
xor
xchg
scas
je
lods
mov
call
fdivrs
sbb
jb
or
push
or
loopne
inc
pop
lret
cmc
xor
adcl
jno
fbld
push
cli
negl
and
add
mov
xchg
in
sbb
dec
movsl
mov
ss
ds
ficompl
sahf
xchg
dec
add
aas
pusha
mov
xor
enter
loop
lea
adc
inc
insb
lcall
inc
adc
lcall
jns
mov
movsl
sub
scas
das
clc
mov
ja
hlt
mov
add
sub
loopne
movsl
mov
cmp
and
jne
mov
pusha
sbb
mov
add
and
or
int
in
ja
sub
cmp
cld
rolb
arpl
inc
mov
and
pop
lea
arpl
lahf
mov
out
jge
movsl
adc
insb
xchg
loopne
adc
mov
lcall
cwtl
and
sbb
mov
testb
xor
lret
lods
add
imul
jecxz
cltd
test
test
cmpl
mov
sahf
mov
mov
or
scas
adc
andl
clc
jmp
fmull
outsb
test
es
les
fnstsw
cmp
xor
repz
jo
std
andl
ss
sub
outsl
mov
scas
aaa
dec
mov
pop
add
push
dec
mov
push
sub
scas
jns
sub
lods
adc
dec
in
push
push
jbe
rcrl
push
pop
sub
rorl
popa
je
addb
cmpsl
jns
add
xorb
in
ret
dec
push
popf
es
shlb
call
sbb
push
push
add
adc
fldenv
xor
fmuls
repz
xchg
daa
test
in
and
push
jge
lods
add
cmp
inc
scas
aad
dec
push
pop
add
mov
js
out
push
ljmp
aaa
xchg
mov
sbb
or
xchg
ja
out
push
add
jns
movsb
push
or
sub
das
movb
fldcw
mov
mov
adcb
lock
movsl
dec
dec
lock
or
fsubl
enter
pop
sbb
icebp
add
lods
inc
xchg
sub
cld
jmp
push
jmp
lcall
loop
cmpsb
je
push
lahf
idivl
in
push
pop
lods
mov
xor
dec
sub
lcall
jo
cs
add
and
lock
mov
pop
mov
jle
faddl
outsl
test
popa
outsl
sub
inc
xchg
mov
mov
and
iret
pushf
adc
mov
pop
mov
aad
sahf
cld
gs
or
xchg
sub
mov
lahf
mov
icebp
xchg
dec
sub
xchg
aam
jecxz
xchg
arpl
lods
add
push
insb
fisttps
sub
sbb
lds
lea
lret
mov
push
pop
loope
jb
cld
enter
sub
dec
pusha
mov
mov
dec
pop
sbb
and
ficompl
sub
les
or
add
jl
mov
mov
lock
mov
push
adcb
test
pusha
jle
je
jbe
xor
mov
gs
test
lcall
sbb
jl
mov
jl
jo
imul
daa
shrl
negl
mov
loopne
mov
jecxz
fsubrl
cli
push
loop
xchg
xorb
in
in
in
mov
or
jecxz
mov
lahf
mov
out
loop
sub
sbb
out
ret
push
mov
jge
cs
inc
pop
mov
fucomi
addr16
xlat
mov
cmp
dec
sti
lret
repz
lods
imul
imul
test
lea
outsb
xchg
mov
cmpsl
adc
jge
in
jmp
or
push
test
dec
iret
icebp
daa
in
loop
int
push
sbb
fsubp
ja
xchg
mov
add
sti
ljmp
loop
adcl
mov
lret
inc
leave
push
js
or
pop
cmp
pop
add
mov
sub
test
jne
or
dec
xchg
daa
nop
pop
sysexit
and
fstl
popa
cld
lods
andl
shll
xor
lods
jmp
jae
mov
xchg
jp
pop
push
pop
or
test
push
out
clc
scas
adc
cmpsl
xchg
mov
mov
jg
adcl
cmpb
xchg
je
xor
push
lret
scas
add
jne
pushf
add
flds
adc
xchg
mov
outsl
test
lcall
dec
mov
movsl
mov
dec
dec
rcll
adc
sub
and
xlat
and
lret
jns
test
sub
in
pop
cmp
outsb
testl
xor
std
push
nop
pop
mov
jecxz
jno
sbb
jge
outsl
mov
rcrl
sbb
xor
ret
push
incb
lea
lret
sbb
lea
repz
fs
xchg
daa
mov
jle
sbb
or
ret
scas
cmp
in
jo
lret
pop
add
loope
lahf
push
sbb
loope
addr16
or
jmp
cmpsl
leave
fcoms
int
jl
sbb
pcmpeqd
cltd
inc
mov
pusha
push
repz
inc
push
mov
pop
cld
pusha
ljmp
scas
imul
xchg
in
arpl
push
in
sti
dec
inc
orb
insb
imul
xor
test
gs
rcl
ja
xchg
cwtl
pop
push
dec
jp,pt
scas
lock
mov
and
mov
out
mov
idivl
dec
fadds
dec
fs
pusha
jp
lret
mov
add
jbe
into
jl
push
mov
push
mov
mov
js
or
xchg
stos
mov
je
lret
cmp
movsl
cwtl
jg
xchg
inc
and
and
mov
dec
mov
lcall
add
stos
iret
nop
mov
cmc
lea
popa
stos
shlb
movsl
int3
jge
add
in
or
nop
jnp
add
iret
imull
movaps
push
push
fs
jmp
aas
in
popf
xchg
sub
add
jnp
push
jl
insb
xor
xlat
int3
xchg
adc
pop
mov
sub
in
int
mov
mov
inc
xor
and
iret
mov
ret
push
push
pop
adc
stos
imul
movsl
rorb
sbb
pop
cmp
pop
mov
xchg
xchg
fcmovu
cmp
test
mov
sub
roll
cmp
xor
lds
scas
xchg
mov
popa
int3
jae
xchg
and
testb
mov
push
shrb
push
add
xchg
mov
imul
int3
xor
cmp
lods
ds
xchg
test
jmp
in
insb
push
xchg
dec
sub
sarl
inc
call
and
sub
adc
jg
push
and
out
inc
jns
ret
or
mov
movb
jae
pushf
popa
js
add
test
dec
push
fs
fs
outsb
in
inc
mov
adc
mov
dec
inc
jbe
ss
movsb
das
in
movsl
mov
int
xacquire
fucomip
scas
jg
mov
inc
dec
xchg
inc
cmc
arpl
mov
sahf
jae
cwtl
sub
and
lds
push
ljmp
mov
mov
int
inc
hlt
addr16
inc
sub
mov
jno,pt
ss
aad
cmp
jns
stc
jne
arpl
jnp
jno
mov
jb
cltd
icebp
ret
cmpsl
lret
or
pop
mov
push
and
sub
inc
les
lret
or
out
jge
xor
jge
movsl
outsl
fnstsw
imulb
jo
or
rorb
gs
aad
pop
movsl
test
add
ret
movsb
push
jle
shl
mov
divl
lret
sbb
add
fmull
lock
mov
sub
insb
in
pop
inc
outsl
mov
das
push
loopne
or
out
push
into
adc
popa
dec
cmp
out
xchg
mov
xor
lea
sbb
lahf
cmp
repz
mov
sub
pop
inc
lock
fwait
push
add
mov
jge
jecxz
dec
add
out
sbb
mov
xor
stos
cwtl
cmp
or
sbb
js
cmp
mov
enter
dec
sbb
xchg
repnz
imul
insl
lds
sahf
cs
pop
and
ds
jg
icebp
sub
sbb
in
sub
push
arpl
sbb
insb
call
icebp
scas
push
sub
jo
sti
arpl
push
mov
jbe
mov
jbe
jg
mull
xchg
in
xor
scas
sbb
sbb
aad
cmc
push
aas
iret
mov
pop
cwtl
sti
std
pop
mov
push
and
add
rorb
push
shl
cmc
mov
xchg
int
jle
dec
insb
jg
add
dec
lds
mov
sbbb
sub
mov
cmp
push
mov
mov
leave
mov
fisubl
aaa
ss
in
xchg
imul
inc
and
loop
es
push
nop
push
cmpsl
int
push
imul
lods
mov
ja
negb
dec
fstpl
mov
fstpl
push
shrl
rcl
lods
mov
push
inc
mov
jbe
and
in
das
in
and
push
ret
cmp
bound
enter
inc
push
aam
cmp
call
stos
cwtl
dec
pop
xchg
sub
xor
push
fbld
in
cwtl
pop
sbb
popf
push
aam
sub
in
mov
sbb
fwait
sti
fisttpl
scas
mov
xor
push
jl
pushf
xor
jp
fimuls
xor
pop
inc
sti
rcrb
mov
mov
mov
push
ljmp
jg
fmull
ja
mov
lock
arpl
push
xor
in
cmp
addl
mov
push
fldln2
jge
xchg
loop
sbb
fmul
sub
sbb
loope
xchg
jg
daa
test
test
faddl
repnz
mov
xlat
xchg
sub
clac
push
in
cmp
cmp
xchg
in
dec
icebp
adc
and
dec
pop
cmpsb
sub
adc
test
mov
lcall
fs
enter
push
add
adc
sti
sub
add
pop
mov
into
add
idivl
or
outsl
mov
data16
and
ret
and
push
pop
add
jbe
scas
lcall
sbb
and
dec
addr16
dec
dec
xchg
int3
insb
leave
pushf
test
lods
push
ret
arpl
or
roll
lea
andb
jg
fsubr
pop
lock
lock
jecxz
xchg
rorb
xchg
scas
adc
push
jmp
loope
cli
mov
nop
mov
mov
inc
jle
sbb
sbb
ficoml
fdiv
ljmp
jae
mov
dec
lods
dec
inc
or
pop
daa
hlt
adc
jge
test
mov
mov
mov
push
fistl
jae
imul
aaa
push
enter
out
aaa
addr16
sbb
adc
lcall
lcall
add
or
cmp
pop
jno
scas
and
cmpsb
addr16
or
shl
iret
pop
xor
out
pop
and
pop
subl
pop
ret
pop
adc
nop
cmp
xchg
lahf
cltd
ds
popa
xchg
add
xor
lret
jno
stos
addb
and
test
jmp
jno
mov
aaa
mov
out
jnp
xchg
int
add
push
dec
mov
imul
popa
fildl
jo
adc
sub
or
fsub
call
xchg
adc
test
rcrb
lea
inc
hlt
ljmp
push
jge
test
call
jmp
add
mov
jp
jb
mov
mov
bound
fdivrs
xchg
xor
jnp
scas
fcomps
pop
cltd
loope
lcall
dec
out
jo
aad
inc
in
pop
fsubp
cmp
cmpsl
mov
push
daa
mov
fsubrp
lea
das
adc
icebp
sbb
adc
mov
jl
leave
push
in
cmp
lcall
pop
lret
add
dec
movb
sub
faddl
sub
in
xchg
imul
cmp
loop
jl
adc
stos
jmp
push
popa
mov
fisubrs
rolb
mov
xchg
mov
push
stc
inc
icebp
fimull
lods
mov
addr16
and
ja
or
jg
cmp
dec
mov
xor
pop
adc
out
push
sub
or
and
sub
not
xchg
ret
shrb
xchg
ss
mov
bound
aam
lret
sbb
movsb
das
fstl
daa
lods
shlb
insb
mov
ficoml
push
mov
add
sbb
clc
ljmp
and
ss
pop
aas
ja
xchg
mov
mov
adc
movsb
dec
jo
or
ja
or
jnp
sbb
cwtl
and
jp
xchg
sub
mov
push
xor
xchg
fcomps
xlat
lods
ja
out
mov
cmpsb
aaa
dec
aas
imulb
sarl
mov
xor
cld
pop
std
sti
pop
rclb
sbb
mov
push
sbb
lds
and
xor
xor
orb
leave
jno
out
rcll
in
lea
or
jb
xchg
mov
mov
xor
mov
call
jb
pop
cs
std
sahf
fsubp
lahf
int
int3
out
int
xchg
int3
dec
cld
or
push
or
sub
mov
inc
add
enter
loope
mov
outsb
outsb
mov
aam
mov
push
stc
mov
push
add
lock
data16
loop
lds
imul
xchg
dec
mov
ss
push
and
negb
and
and
xchg
std
aas
add
ds
jne
ja
mov
aas
mov
mov
out
outsl
mov
cmp
lods
push
inc
clc
testl
cld
sub
inc
jge
sub
dec
mov
pop
lds
cmp
mov
loope
inc
jae
shlb
inc
pop
or
dec
mov
divl
fldl
dec
clc
sahf
or
das
dec
pop
mov
jl
lea
adc
rolb
addr16
jle
sbb
push
outsb
add
subb
jle
jle
aas
xor
dec
mov
xor
jg
popa
sbb
push
xor
iret
mov
inc
ret
xchg
cmpl
inc
push
jmp
xor
or
data16
movsb
push
mov
mov
push
jge
jbe
xorl
lods
adc
xchg
jb
inc
xor
in
ficoml
push
xor
mov
xor
rcrl
xchg
ds
mov
xor
arpl
pop
int3
out
mov
pop
and
pop
dec
adc
fwait
dec
jmp
mov
std
nop
repz
inc
ss
mov
repnz
fbld
insl
sbb
cld
mov
gs
iret
fiaddl
stos
sub
mov
popa
xlat
loope
repnz
inc
xor
xchg
and
cwtl
xor
push
cmpsb
sub
pop
jns
mov
mov
pop
mov
fistpl
cmpsl
jge
fldenv
pop
pop
jno
pop
movsb
in
add
loopne
scas
ja
or
sti
and
xor
push
out
xor
stos
fimull
pop
enter
mov
out
outsl
and
mov
ret
mov
outsl
sbb
outsl
pop
popa
cmpsb
cld
or
sti
cmpsl
jbe
inc
jg
pop
ret
ret
mov
popl
add
dec
add
inc
imul
outsl
popf
mov
clc
dec
cmp
push
pop
sub
enter
mov
xchg
shlb
jb
add
popf
mov
mov
dec
xchg
jge
push
push
icebp
scas
test
leave
or
cld
pop
xchg
xchg
fucom
mov
sti
lds
fimuls
aad
shld
pop
hlt
test
imul
pop
and
and
enter
movsl
mov
pop
cld
ror
sarb
xchg
outsb
sti
pop
and
xchg
aam
repz
xchg
ret
fdivrl
xor
pop
aam
insb
push
push
insb
jp
and
cmp
push
mov
jb
pop
out
ficomps
sub
mov
xor
in
mov
out
xor
gs
sub
fs
loopne
dec
ds
sub
dec
pop
ret
int3
daa
mov
in
popa
popl
xchg
add
leave
jg
pop
push
lret
mov
fmuls
gs
xchg
in
sbb
mov
sub
in
sub
jae
std
sbb
push
jp
sbb
and
ret
pusha
jnp
lds
mov
bound
call
mov
pop
push
mov
loope
xchg
loopne
sub
add
adc
sub
mov
std
mov
test
out
aam
add
fmuls
pop
enter
jb
iret
ds
call
shrl
xchg
or
adc
add
xchg
fldt
cmpsl
cmp
fisubs
testl
mov
ret
and
adc
add
sub
push
and
hlt
jns
and
popa
repz
stos
shrl
xchg
adc
out
dec
sarb
xor
pop
ja
loope
mov
ja
xchg
push
adc
jl
sbb
sbb
fucomi
and
xchg
sti
mov
cmpsb
sub
inc
mov
push
dec
pop
mulb
xor
test
jne
dec
push
mov
bnd
dec
fstps
int3
push
cmc
pop
pusha
cs
cld
push
rclb
dec
int
testb
mov
into
push
adc
in
mov
ficomps
inc
in
sub
and
adc
push
fdivrl
xchg
push
pop
lret
jp
xor
loop
mov
cmp
aaa
adc
cs
rol
jno
add
jae
fs
ja
lods
jns
mov
sub
mov
jp
push
xlat
imul
jnp
mov
test
out
xor
jbe
in
lock
inc
in
push
jecxz
enter
xorl
lods
and
and
add
fidivs
movsb
aam
mov
cltd
scas
pop
hlt
hlt
mov
test
jle
mov
mov
push
in
aaa
loopne
decb
stc
xor
and
xor
push
xor
pushf
jo
sti
insb
dec
call
les
add
adc
mov
sti
sub
out
dec
add
aad
pop
popa
insb
dec
dec
xchg
ret
int3
ljmp
adc
push
sbb
cli
push
xorb
push
js
fsub
add
sahf
scas
or
fadds
push
out
notl
jmp
cmp
psubsb
not
test
mov
jnp
jno
and
mov
adc
ja
mov
daa
push
sbb
stos
cmp
inc
clc
mov
push
jnp
insl
add
push
inc
sbb
cmp
dec
jecxz
loopne
imul
cmc
pop
xchg
mov
jnp
out
enter
inc
repnz
insb
jno
add
stos
jg
pop
mov
mov
imul
push
repnz
mov
cmp
popf
lock
call
dec
jne
lea
shr
inc
lock
mov
dec
and
sub
mov
xor
inc
and
or
shrb
cld
push
cwtl
pusha
frstor
and
jle
sub
push
jb
jae
repz
andl
mov
scas
xor
mov
add
inc
movsl
iret
mov
ljmp
test
xchg
push
movsb
scas
cwtl
iret
std
cwtl
pop
out
cmpsl
fistpll
mov
je
jmp
repz
dec
imul
or
adc
mov
inc
sahf
mov
jg
pop
adc
mov
pop
xlat
cmp
fistpl
jo
das
lret
push
jbe
push
imul
sbb
call
mov
shlb
das
repnz
testb
aad
mov
rcrb
cmpsb
ficoms
out
jmp
add
lea
and
add
jmp
jno
pop
popa
in
in
shr
mov
pop
add
aam
sub
rcrb
add
lds
mov
sahf
mov
ds
xchg
jno
dec
and
jae
dec
outsb
leave
aas
outsl
rolb
add
pushf
cmp
and
fsubl
int
mov
iret
mov
call
add
out
jle
dec
add
cmp
inc
mov
loopne
xchg
xchg
or
cltd
mov
jle,pt
sbb
sub
jno
mov
cmp
inc
sub
xchg
ds
adc
jg
sub
rorl
cmpsl
adc
jo
cmc
jp
jns
xor
jg
xor
insl
and
xchg
pop
pusha
sbb
ret
xlat
pop
mov
ret
loopne
sub
fisttpl
jae
orl
xor
xchg
jmp
in
imul
jecxz
insb
pop
lcall
xor
jg
ja
jbe
sbb
fmul
sub
mov
pushf
repnz
pop
sti
mov
dec
inc
rolb
mov
daa
enter
mov
mov
fldl
jb
jl
push
adc
jle
ja
mov
adc
dec
xchg
in
cmp
push
and
int
out
pop
mov
add
sbb
sub
in
push
jg
or
lea
dec
add
js
push
or
add
gs
loop
pop
test
or
mov
jb
mov
adc
in
mov
cmc
mov
sbb
mov
mov
repz
leave
mov
dec
xchg
stos
leave
jns
push
sbb
and
cmp
jbe
pop
jne
cmp
pop
fcom
or
loop
dec
bound
pusha
sbb
push
rcr
jg
sbb
test
fsubrs
mov
push
mov
xchg
add
je
mov
sbb
cltd
shll
leave
mov
in
jne
mov
pop
pop
movsb
xor
repnz
cmc
into
pop
lcall
mov
jp
push
push
push
repz
mov
adc
add
add
lock
cmp
mov
xchg
ret
or
fs
and
push
shr
rcr
pop
daa
ret
xchg
je
sub
fildl
movl
jb
mov
test
push
ret
pusha
lea
fwait
outsl
sbb
out
pop
sahf
add
movsb
mov
push
call
xor
xor
arpl
rorb
ret
ljmp
ret
and
cmp
xchg
mov
daa
pop
dec
cmp
sbb
stc
dec
pop
aad
mov
mov
mov
jo
xchg
divb
cld
pop
insb
cmp
push
je
inc
je
cmpsl
popa
rcrl
xchg
mov
ret
mov
outsl
push
pop
and
lret
dec
test
popa
outsl
js
cmp
xor
mov
mov
outsl
pushf
lods
repnz
out
cmpl
mov
movsl
es
imul
dec
xorb
jnp
mov
add
scas
insb
ja
imul
add
jmp
add
popf
xor
sub
cli
mov
scas
shlb
mov
testb
out
xor
out
inc
test
push
jno
subb
test
in
sub
xor
mov
sub
inc
push
push
iret
push
mov
add
lods
lods
dec
xor
es
icebp
pop
mov
jl
fistps
mov
xor
out
jae
cmpl
aam
ja
dec
jge
jo
ficoml
testl
cmp
stc
lds
adc
jge
cli
xchg
decb
xchg
dec
mov
mov
mov
cmp
es
pop
sbb
mov
inc
sbb
jns
lds
pusha
add
push
in
mov
in
add
cmp
jmp
popa
test
push
jno
cltd
and
lock
cmp
inc
mov
cmp
inc
sbb
xor
inc
and
dec
imulb
pop
pop
js
in
push
iret
adc
jb
sbb
adc
shrb
fstpt
out
cmc
in
inc
dec
inc
cli
and
or
sub
mov
lcall
push
jmp
xchg
push
push
fsubl
inc
shrl
push
sub
mov
shl
movsl
pushf
mov
sti
imul
test
ds
jle
add
jno
and
dec
push
mov
popf
repz
sub
and
in
cmpsb
inc
test
mov
repz
sahf
mov
lds
push
xchg
or
ljmp
or
ret
fmuls
imul
sbb
mov
clc
add
je
mov
js
jns
les
mov
push
out
ficompl
pop
mov
call
mov
dec
add
jl
scas
mov
rorl
jae
lahf
test
movsl
xor
call
or
fsubrl
fs
paddd
subl
sbb
dec
push
stos
pushf
movsb
movsl
lds
dec
fwait
lods
sbb
int3
jae
cmp
ljmp
and
gs
and
loopne
mov
pop
adc
adc
enter
out
frstor
ret
scas
jns
dec
rcrb
ja
mov
in
mov
ljmp
jp
clc
adcb
cmpsl
je
push
orb
dec
pop
jb
sbb
jae
lea
or
xchg
ljmp
imul
std
ds
push
pop
lock
jmp
stos
leave
xor
xlat
andl
xchg
pop
mov
enter
push
add
int
stc
or
test
les
subb
push
xchg
loope
aaa
or
adc
movsl
out
inc
mov
mov
dec
lahf
mov
pushf
leave
jbe
mov
push
sahf
adc
test
mov
and
jmp
dec
sub
sub
xor
jb
mov
popa
aas
cmpsb
lret
xor
mov
xor
jmp
insb
jns
cld
add
aam
xor
inc
loope
push
data16
gs
fildll
jne
test
mov
xor
pusha
fildll
xchg
xor
jmp
aad
xchg
rcl
lahf
xchg
adc
je
jnp
aas
or
and
push
jb
lock
pop
stos
push
movsl
lcall
jle
rclb
push
pop
ljmp
push
push
dec
fwait
push
adc
mov
push
pop
push
das
icebp
mov
push
adc
mov
ds
out
xchg
fdivp
and
repnz
add
in
push
add
mov
out
pop
and
daa
xchg
mov
aaa
mov
addr16
js
lcall
clc
add
adc
adc
ret
mov
adc
sub
movsb
in
inc
popl
dec
cmpsb
fwait
pusha
hlt
into
shr
outsl
pop
or
jne
dec
sub
dec
mov
sbb
bound
mov
sub
inc
jecxz
flds
adc
hlt
mov
adc
lahf
push
shll
and
int3
pop
jecxz
cmc
in
outsl
push
sub
push
dec
stos
int3
int3
dec
jnp,pn
iret
sarl
ljmp
ret
lret
xchg
or
lock
push
push
add
jne
cld
sti
inc
and
rcll
sub
insl
add
and
sub
jnp
loop
test
lods
dec
mov
xchg
push
dec
add
and
inc
mov
stos
add
rcrb
add
or
sub
pop
std
push
stc
sti
lret
push
sbb
out
xor
int
cmp
adc
fcos
lods
lods
notb
and
sub
clc
mov
xchg
fcom
pushf
lahf
gs
fwait
add
pop
imull
gs
ds
shlb
or
enter
cmp
dec
mov
inc
lret
dec
sub
gs
mov
pop
adc
jl
rclb
jl
sub
cmc
hlt
or
cli
pop
je
cmp
push
int
xor
add
int3
add
scas
pop
mov
outsl
mov
mov
adc
mov
fs
push
outsb
push
push
sub
ret
out
cmp
dec
les
sti
jecxz
push
test
adc
hlt
dec
arpl
shl
or
pop
sbbl
pusha
sbb
into
dec
mov
jb
sub
xchg
jmp
ds
mov
sbb
lock
popf
imul
aas
mov
pop
stos
sub
mov
push
mov
push
lcall
andl
and
rorb
mov
adc
insb
fadds
lcall
in
sbb
outsl
orb
inc
pop
sbb
dec
int
rolb
popa
pop
dec
bound
mov
mov
and
cltd
outsl
roll
and
adc
xor
dec
popa
add
or
into
iret
pushf
repnz
pop
rolb
call
repz
inc
add
ret
adc
imul
xchg
mov
shrb
mov
sbb
mov
mov
cltd
mov
sbb
out
je
es
out
mov
les
iret
pushf
insl
rcrl
dec
pusha
adc
inc
aam
addr16
clc
sbb
pop
test
in
mov
data16
cmpsl
ror
or
sbb
cmpsb
sub
aam
dec
add
mov
out
sub
out
jge
leave
pop
sbb
cmpps
push
les
or
lods
iret
mov
and
movsb
pop
xchg
std
daa
lahf
push
jns
pop
in
jle
and
aam
repz
movzwl
ret
and
xor
loopne
cld
stos
push
xchg
hlt
jmp
je
repnz
push
xorl
dec
pop
stos
xchg
push
clc
pop
out
push
xor
inc
test
xchg
mov
ss
cmp
dec
jle
filds
xrelease
pop
mov
mov
cltd
push
fmul
or
outsb
dec
aaa
and
cwtl
lret
jp
out
pop
xor
gs
lahf
or
imull
scas
mov
into
inc
push
sub
inc
and
aam
pop
out
pushf
outsb
mov
nop
test
hlt
outsl
mov
rcll
cmp
mov
dec
jp
mov
mov
into
push
in
subb
jb
out
aad
rorb
das
jg
mov
inc
outsb
bsf
mov
cmp
aad
fisttpl
mov
adc
mov
mov
fwait
push
shll
xlat
lods
out
push
jnp
adc
sub
add
data16
adc
shlb
bound
adc
inc
repnz
add
repz
sbb
add
add
aam
movsb
adc
adc
adc
or
testb
popf
pop
lods
fimull
pop
gs
pop
pop
push
jns
push
dec
jae
icebp
rcl
stc
rcrb
jno
mov
call
jne
xor
into
mov
push
inc
rcl
test
outsl
lds
pushf
mov
addr16
jnp
addl
mov
pop
cmp
jecxz
lds
lcall
jmp
dec
movsl
sbb
test
lcall
nop
lds
aaa
stos
scas
mov
jne
mov
and
shrb
fdivrl
repnz
ds
out
or
ss
push
cmpb
pop
dec
lods
or
mov
fucomip
ds
std
pusha
push
xchg
insl
negb
jp
rolb
push
xor
adc
int
inc
add
sbb
mov
dec
movsl
xor
sbb
sbb
shl
lea
pusha
add
adc
insb
lods
mov
lret
and
in
and
jle
dec
push
lds
jb
inc
push
sbb
fdivl
sbb
mov
addb
cmpb
icebp
out
dec
xchg
xchg
sub
popa
jmp
jnp
lea
dec
sub
loopne
subl
movsl
cltd
pop
sub
lret
sbb
cmp
fsts
lret
jle
dec
out
fs
aam
cmp
push
jns
repnz
roll
aaa
jae
stc
mov
js
outsb
sub
xchg
out
repz
or
jb
pxor
cwtl
adc
sub
jns
divl
insb
or
int3
cmp
xor
mov
sub
loop
xor
testl
cmp
mov
sbb
cmpsb
out
mov
aaa
lods
xor
jge
in
lret
mov
xchg
jl
mov
push
adc
mov
dec
popf
cmc
fs
cmpsb
loopne
and
adc
pop
xor
mov
popa
xchg
cmp
xchg
mov
loopne
in
bound
xchg
pop
xor
ja
jmp
lret
push
jo
mov
imul
ljmp
sbb
cld
pop
scas
mov
roll
or
std
pop
mov
test
mov
pop
fsubrp
mov
sbb
movsl
inc
fistpl
mov
cmpb
jle
add
sahf
and
fiaddl
pop
fs
or
and
push
sarb
jae
mov
or
movsb
in
adc
push
neg
pop
jl
sbb
dec
push
inc
mov
in
subl
inc
lds
push
jno
inc
fdivrs
fisttps
pop
jge
fwait
xchg
jbe
test
sub
sti
lret
lock
pop
enter
xchg
inc
stos
aad
sahf
outsl
xchg
pop
ljmp
das
psubw
pop
inc
add
outsl
add
sub
sahf
jge
adc
out
adc
aas
lods
lods
or
adc
or
adc
cltd
push
xor
pop
sbb
cmp
aaa
fisubrs
clc
cmp
xor
adc
ljmp
ds
out
xchg
xor
mov
insl
aaa
rcl
mov
add
mov
jle
fsubs
test
jne,pt
test
pop
jl
pop
cwtl
es
jmp
test
call
add
pop
mov
xlat
and
push
mov
push
xor
dec
push
or
xor
adc
test
pop
adc
sub
mov
enter
loop
sahf
lahf
in
push
in
cmp
inc
inc
push
popf
sbb
fnstsw
xchg
mov
fistl
cltd
sti
fs
sbb
xor
lods
sbb
inc
lret
shrl
ficompl
aas
divl
mov
outsb
jp
mov
jle
outsl
arpl
inc
lea
fsubl
repz
pusha
xchg
jmp
fbld
dec
jae
xchg
ret
in
pop
mov
dec
cmp
inc
sbb
mov
dec
mov
in
cli
or
pop
sub
jge
imul
fiadds
cmpsl
insl
sub
insb
mov
jmp
lahf
pop
mov
inc
fucom
fs
lcall
sub
lret
pop
lock
xor
mov
dec
or
adc
push
out
add
dec
repnz
jno
lds
fsubp
fs
sub
pusha
int
mov
sbb
adc
ret
sti
ss
push
outsb
cmp
sub
dec
mov
dec
movsb
cwtl
cltd
cmp
add
and
js
leave
lods
ss
loopne
mov
lods
adc
nop
pop
jecxz
out
int3
inc
fdivs
adc
adc
xchg
push
jnp
in
cmp
mov
xchg
sbb
jo
stos
lcall
repnz
mov
testl
cmp
sub
movhps
outsl
mov
cmpsl
push
stos
inc
jp
jae
movsb
push
jo
cmp
add
cmp
sub
lea
and
testl
dec
mov
and
inc
fwait
mov
nop
ljmp
daa
or
out
lds
sub
shrl
arpl
inc
dec
sub
xchg
xchg
sbb
add
jb
dec
cld
subl
cmp
mov
xor
andl
insl
xchg
aad
cltd
lock
inc
mov
enter
insl
into
mov
cmp
in
fidivl
mov
aam
adc
adc
ja
inc
sbb
mov
inc
movsb
das
xchg
stos
mov
dec
aaa
mov
and
hlt
fsubrs
add
mov
ja
outsb
test
insl
push
push
sbb
xchg
into
push
xor
popa
jo
mov
sbbb
sysret
jmp
dec
mov
fstl
mov
cmp
jp
repz
xchg
pop
imul
jecxz
xchg
repnz
xchg
into
or
ds
pop
iret
mov
mov
in
jecxz
mov
adc
sub
sbb
jbe
mov
inc
mov
inc
orl
test
ja
pusha
cld
dec
xchg
sbb
cmp
scas
in
int
sub
gs
popa
repz
test
jg
mov
clc
out
ja
push
cltd
rorb
popa
clc
aas
insb
addr16
jle
in
mov
xchg
cmp
mov
jmp
sbb
repnz
pop
pop
push
pcmpgtd
and
sarl
int
adc
in
jbe
or
filds
je
clc
stos
dec
mov
les
mov
jne
pusha
mov
xor
add
cmpsl
cmpsl
adc
jae
pop
rorb
and
stos
jmp
mov
jne
cmp
sub
lods
xor
xchg
mov
mov
or
cmpb
jmp
or
stc
adc
adc
sub
mov
jno
lods
sbb
xor
push
mov
jae
hlt
ffreep
subl
push
movnti
into
int
fcomps
push
fs
push
inc
aam
js
xor
mov
xchg
movsl
inc
stc
out
fnstcw
mov
sti
les
gs
or
jl
iret
sub
pop
xchg
addr16
cmc
mov
sti
lret
jmp
pushf
pop
ret
iret
addl
ret
mov
stc
sbb
je
mov
out
mov
and
and
fldt
in
jns
lret
adc
adc
mov
lahf
imul
shll
repnz
incl
popf
lods
pop
je
adc
xor
cmp
fistpl
insb
cmp
jp
into
jne
icebp
pushf
mov
pop
fisttpll
addb
pop
xchg
rcr
xchg
and
or
dec
arpl
shlb
pop
and
inc
cld
add
cmc
cmpb
repz
shll
mov
imul
or
lock
mov
fadds
daa
es
call
or
clc
lcall
stos
sub
xchg
insl
mov
jb
stos
mov
jmp
mov
dec
lret
in
mov
notl
xchg
pop
dec
sahf
movsb
js
ja
xchg
fisubs
stos
xchg
enter
dec
sbb
mov
out
pop
icebp
push
inc
sbb
add
pop
xor
dec
repz
insl
jnp
cmpsl
gs
popa
adc
or
clc
mov
test
dec
out
mov
cmp
or
shlb
xchg
test
aad
pop
mov
test
dec
arpl
jg
jbe
sub
xorl
cwtl
pop
gs
outsb
xor
pushf
lcall
mov
push
icebp
sub
test
push
mov
rolb
pop
lds
bound
in
jnp
inc
gs
je
shrl
sub
neg
xor
shl
orl
shll
loopne
out
loopne
ret
adc
jmp
mov
and
cmp
sbb
jmp
imul
sub
inc
pop
out
sbb
push
sbb
cmp
sbb
push
lcall
pop
dec
jg
or
lds
mov
out
jg
xor
int
push
loope
sbb
je
sahf
popf
dec
lods
cmp
sti
call
sub
pop
and
inc
mov
inc
cmp
or
dec
or
inc
sub
stos
inc
pop
or
dec
jb
das
pop
mov
cmpsl
psubusw
lods
gs
sarl
lea
dec
ljmp
dec
in
sbb
pop
mov
out
cmp
dec
push
inc
push
rolb
fcom
lods
push
jbe
mov
jge
cltd
es
adc
sahf
xor
and
and
push
gs
arpl
cltd
xchg
sub
and
ljmp
repz
imul
test
sbb
sbb
aam
in
inc
mov
outsl
popl
and
mov
cmp
cli
push
test
std
and
lcall
ret
loopne
or
push
jp
push
jmp
mov
mov
daa
sbb
rcrb
ss
pop
loop
mov
clc
rclb
jge
mov
cmp
mov
mov
pop
mov
enter
inc
in
jo
pop
out
mov
add
inc
sbb
cltd
testl
push
and
push
dec
shlb
sbb
in
jl
adc
push
mov
cld
call
andb
xor
and
nop
stos
pusha
arpl
jo
xchg
sub
shl
inc
or
cltd
ja
in
data16
jo
or
test
call
lods
jl
push
fsubs
cwtl
inc
fmul
xchg
mov
pop
cmp
sbbb
inc
loop
gs
jnp
gs
adc
lret
inc
mov
push
cmp
aam
cs
pop
mov
xchg
jb
sub
jnp
jp
cltd
negb
lret
jns
adc
jb
scas
inc
popa
cld
fisttps
stos
mov
jecxz
sbb
add
inc
cmp
dec
and
rol
xchg
cmpsl
sahf
popa
mov
out
mov
clc
mov
shrl
cmpb
xchg
push
adc
fistpl
ja
mov
fxtract
or
fs
lret
add
pop
mov
sub
and
jmp
gs
adc
sti
jne
cmpsl
ss
cli
jmp
add
mov
nop
and
es
aaa
in
xchg
sbb
test
and
clc
sub
imul
out
out
popf
push
jle
jmp
imul
cmp
mov
lcall
je
ja
jecxz
sbb
jo
out
adcb
push
aaa
mov
js
push
pop
int
ja
pop
ficomps
mov
adc
paddq
imul
push
push
outsb
push
xor
pop
push
mov
cmp
mov
cmp
inc
inc
mov
jae
dec
mov
xchg
mov
fldl
sahf
and
pop
jo
sbb
enter
test
fwait
mov
cli
in
mov
movsl
xchg
ja
jmp
emms
lds
inc
sbb
nop
cmp
push
add
pop
push
pop
data16
cmc
push
xlat
fnstsw
mov
ss
cmp
dec
add
std
stc
and
lea
push
aam
push
pop
push
sub
aas
jae
sbb
sbb
enter
and
aaa
pusha
sub
mov
stc
fistpll
nop
mov
xor
push
xchg
stc
lret
or
aaa
lds
and
inc
inc
sub
mov
fimull
xorb
cmp
xchg
xor
fildll
push
push
ds
int3
lods
lods
dec
cwtl
bound
dec
pop
jecxz
ficoms
arpl
or
ljmp
push
inc
lods
outsb
push
mov
push
mov
in
popf
mov
mov
sbb
pop
movsl
or
add
sarl
adc
push
loope
inc
imul
pop
xchg
call
out
adc
js
arpl
cld
stc
or
jo
js
repz
stos
push
rcr
lods
negb
fcoms
cli
jl
lret
pusha
pusha
xchg
push
in
mov
fbstp
cmpl
dec
in
push
aas
aaa
ss
dec
push
mov
xchg
push
dec
aam
push
cmpsl
stos
sbb
int
insb
mov
leave
js
stc
lcall
sbb
push
mov
xor
jp
inc
into
or
push
xchg
enter
mov
gs
lret
test
mov
jo
mov
outsb
outsb
in
repz
cmp
hlt
pop
mov
lret
sbb
inc
push
sbb
jl
xchg
jns
jg
test
inc
mov
orl
inc
add
or
pop
mov
dec
lods
mov
xorb
and
xchg
mov
fs
jmp
push
cmpsb
jae
cli
cmp
cmp
les
or
or
cmp
mov
data16
and
push
negb
in
dec
aas
loope
push
out
mov
test
in
push
inc
jl
repnz
inc
cmpsl
or
mov
shlb
mov
enter
sub
outsl
sub
aaa
repnz
repz
jle
iret
jae
push
cmc
sti
sub
sar
imul
loop,pt
xlat
push
push
or
repz
das
push
lds
push
xchg
ret
xor
pop
dec
pop
test
fsubl
int
loope
mov
repz
inc
and
negl
mov
data16
icebp
js
cs
or
add
cmp
mov
sub
das
lods
jmp
adc
inc
mov
push
sub
cs
dec
mov
cmpsb
dec
mov
dec
addl
dec
idivl
push
lret
adc
xchg
push
addb
cmp
fidivl
scas
inc
and
sbb
ds
out
jb
cmpsb
and
data16
jns
inc
gs
pop
cwtl
and
clc
and
aas
fs
mov
mov
rorl
jge
push
jns
and
mov
mov
and
sbb
pusha
mov
xor
popf
xor
fsubl
js
popf
shlb
aas
and
sbb
daa
popa
arpl
mov
aas
std
std
mov
sub
adcb
cmc
ret
push
mov
mov
dec
dec
cmpl
mov
sub
je
popa
jp
inc
aad
decl
cmp
loopne
sub
std
rorl
inc
add
sub
inc
xchg
sbb
xor
ret
ficoml
add
orb
ret
arpl
test
pop
mov
das
ret
sub
jp
aas
mov
out
mov
rcll
outsl
adc
mov
cmp
decb
data16
sbb
mov
mov
push
lods
dec
dec
pop
outsb
jb
movntq
out
sub
mov
or
or
pop
iret
jmp
jg
addr16
arpl
mov
jae
in
jg
add
neg
les
dec
dec
leave
cmpsl
daa
sbb
push
inc
mov
add
jecxz
mov
mov
pop
es
mov
imul
add
xchg
gs
ds
fisttpl
pusha
pop
mov
inc
and
aad
ds
jle
shlb
inc
pop
mov
push
outsb
leave
push
stos
lret
or
movsb
push
lods
outsl
std
cmovb
nop
mov
xchg
jns
iret
jmp
or
lods
aas
xchg
dec
push
ja
jnp
pop
and
gs
pop
movsl
xor
sbb
sahf
adc
push
scas
xchg
xchg
jno
fnstsw
jl
rcrl
insl
les
inc
pop
ss
push
add
rcll
pop
sub
jecxz
xor
lahf
mov
adc
jo
ds
cmp
test
fcomip
dec
gs
daa
adc
pop
adc
and
js
movsb
pop
mov
push
push
xor
sbb
mov
xchg
push
mov
and
rcrl
orl
cmpsl
sbbb
aam
and
xor
hlt
flds
inc
rorl
inc
push
mov
and
pop
add
jnp
xchg
mov
and
fwait
adc
or
icebp
dec
and
adc
fprem
or
mov
jle
inc
inc
out
xor
adc
push
out
out
ss
loop
test
xor
jge
mov
cmc
mov
insb
jns
push
test
jb
sahf
pop
mov
adc
inc
xchg
push
sub
in
inc
icebp
sbb
loope
jne
test
pop
and
fwait
xchg
outsl
xor
test
loop
jmp
out
and
cmp
jmp
push
out
repnz
lea
or
push
xor
adc
jbe
clc
adc
daa
or
aas
or
inc
loop
add
jb
xchg
scas
fcomi
das
out
fcmovne
cltd
xchg
pop
sub
addr16
pusha
out
mull
and
dec
sub
into
inc
addr16
leave
aaa
js
cs
jp
push
ljmp
sub
and
dec
inc
sbb
or
roll
lret
cli
inc
push
mov
inc
out
adc
mov
adc
pop
pop
and
bound
cmp
dec
clc
and
jecxz
inc
or
jbe
sbb
xor
mov
and
vprotw
inc
hlt
push
xchg
hlt
xchg
pop
mov
push
jb
dec
jo,pn
sti
pop
call
jp
mov
dec
bound
adc
addl
movsl
mov
rcrb
mov
jmp
xor
aaa
ret
mov
fimuls
push
ret
rorb
push
add
pop
and
xchg
xchg
mov
repnz
loopne
or
fnstcw
iret
push
push
mov
fistpl
repnz
xor
daa
fstpt
ja
int
push
data16
mov
pop
adc
xchg
mov
push
ret
push
stc
lahf
fbstp
icebp
dec
jl
mov
jb
std
mov
sub
dec
das
lods
mov
ljmp
movb
pop
addr16
jnp
push
pop
adc
xor
and
pop
jnp
cmpsl
pushf
pushf
or
in
cwtl
push
cmp
je
cmpsb
cmc
nop
pop
and
push
stos
mov
cltd
sub
xlat
and
jmp
leave
mov
pop
cs
pop
jo
mov
in
adc
cltd
sahf
leave
sub
in
or
adc
xchg
insb
dec
push
xchg
incb
addr16
out
inc
mov
pop
mov
inc
push
add
lcall
ja
fcomp
or
sub
daa
test
test
dec
jmp
cmp
cmc
add
cmp
adc
xor
mov
loop
daa
test
cmp
jnp
rcrl
jecxz
fisttpll
xchg
nop
adc
sbb
add
aas
clc
xorb
mov
push
pop
inc
cmp
mov
mov
xor
add
mov
mov
sub
cmp
and
sbb
movsb
pop
push
int
shl
nopl
xchg
ret
mov
fsubs
cli
sub
mov
out
sub
ds
pop
scas
jmp
arpl
cmc
in
xor
mov
xor
int3
fstl
decb
cwtl
stos
cmovne
push
inc
push
jle
icebp
leave
icebp
add
loop
push
jp
cmpsl
pop
mov
stc
ret
pop
mov
push
xchg
nopl
popf
std
jmp
insb
adc
sbb
cmp
les
mov
push
xchg
and
jle
adc
dec
ljmp
push
add
mov
mov
stos
outsb
pop
jb
data16
jle
aas
lds
inc
lods
pop
es
xchg
not
fdiv
jnp
cld
int3
mov
rcrl
push
adc
jne
test
sbb
mov
xor
cmp
cmp
jle
cmp
jl
mov
jb
mov
sti
fs
addr16
sbb
test
xchg
and
inc
enter
sbbl
inc
into
push
fwait
mov
sbb
call
iret
jne
sti
push
sarb
pusha
nop
sbb
shl
lods
shll
push
in
jns
mov
cmp
mov
loope
xchg
fmuls
dec
xor
sub
fsqrt
mov
sub
cltd
ss
mov
pop
dec
xchg
aad
lret
push
arpl
inc
movsb
fidivs
adc
mov
scas
push
fdivrl
mov
out
cmp
mov
xchg
or
pop
push
arpl
imul
cmp
mov
clc
lods
idiv
aad
mov
clc
test
push
scas
jecxz
xor
jnp
sahf
cmc
mov
std
or
dec
mov
popf
cld
inc
mov
jle
dec
pop
insl
push
pop
and
and
out
fs
sub
je
pop
inc
lret
mov
and
inc
dec
arpl
lods
inc
xchg
pop
into
pop
xor
jns
mov
dec
jnp
sub
push
and
aaa
scas
lret
cmp
xchg
add
mov
push
insb
push
pop
cmp
lret
xchg
mov
cwtl
mov
ss
scas
adc
pop
lods
push
xchg
pop
pop
jae
pop
lods
ret
add
or
dec
dec
jae
xor
cmp
test
icebp
mov
jge
inc
jns
jmp
pminsw
adc
xor
push
mov
enter
cmc
outsl
nop
xchg
xor
movsl
dec
andl
dec
movsl
iret
inc
sub
mov
rcl
mov
pop
sti
jmp
push
cmc
jg
sub
adc
jo
in
sahf
aas
xor
mov
test
sub
daa
cwtl
repnz
cmp
pop
lds
xchg
repz
adc
iret
inc
gs
push
cmp
popf
fwait
add
sub
xor
sti
cmp
mov
repnz
jg
pushf
mov
push
leave
pop
adc
mov
inc
mov
fisubrl
mov
mov
cwtl
mov
xor
stos
pop
jb
dec
cmp
mov
loop
fists
hlt
mov
daa
lret
xchg
ljmp
outsl
inc
out
mov
ficoml
push
add
cmpsl
bound
fidivs
test
les
int3
xor
sbb
loop
fstps
and
ret
inc
mov
mov
sub
aaa
fldt
and
out
mov
arpl
call
jb
pop
fidivs
fcmovb
jp
mov
xchg
mov
lcall
add
lahf
cltd
nop
adc
pop
add
cli
jl
cmpsb
mov
push
dec
repnz
popf
call
imul
fisubs
int3
mov
lea
into
push
pop
push
and
jae
ret
ffreep
daa
rol
sub
movsl
lods
js
push
push
dec
bound
sti
mov
pop
int3
push
sahf
mov
push
shr
test
inc
imul
jae
shr
rorl
mov
mov
push
push
add
scas
mov
lea
ficomps
mov
pop
or
out
mov
xor
mov
xlat
stc
adc
dec
in
sub
or
mov
sbb
sub
das
ljmp
ret
adc
in
inc
imul
push
lea
xchg
or
scas
mov
loop
mov
xor
and
xlat
imul
jbe
adc
sbb
repnz
ja
dec
sahf
js
lahf
negl
mov
xchg
sbb
xchg
addr16
loop
xchg
cmp
xchg
pusha
mov
aad
fs
dec
stc
mov
inc
jne
xor
addl
jl
arpl
imul
mov
push
loop
clc
xor
push
lret
sub
adc
mov
adc
mov
in
push
jae
subl
inc
add
shlb
outsb
mov
push
inc
inc
out
loope
pusha
les
lret
and
xchg
cltd
or
stos
sbb
push
mov
and
int
or
test
loope
push
lock
loopne
push
mov
outsb
jg
cmpsl
ficompl
dec
rol
cmpsb
dec
or
lods
xchg
incb
psubsw
and
mov
add
sub
jl
idivb
xor
les
cltd
ja
dec
loope
ljmp
add
and
add
iret
imul
sub
jns
dec
out
filds
insl
and
iret
fistps
movsl
cwtl
lret
jnp
fidivl
pop
inc
and
stos
pusha
jns
push
jge
insl
fadd
or
fiaddl
in
and
and
push
sahf
cwtl
inc
cs
push
clc
adc
inc
sbb
in
xchg
sahf
pop
mov
sarb
sbb
sub
js
xchg
xor
jmp
and
test
stos
pusha
adc
and
inc
xlat
ficoml
hlt
adc
sbb
in
aad
movsb
pop
out
aam
mov
sbb
mov
inc
xor
call
dec
and
xchg
xchg
push
sbb
add
xor
fidivrs
or
aaa
jo
adc
les
movsb
loopne
dec
and
shl
xchg
xor
pushf
mov
cwtl
aaa
or
fsubs
sub
mov
inc
sti
imul
adc
lods
sbb
in
in
adc
sbb
sbb
add
in
push
fdivs
cmc
ret
scas
test
and
add
dec
in
into
dec
lods
test
clc
scas
aaa
push
jbe
cmc
sub
idivb
int3
sbb
test
jb
inc
fucomi
push
inc
or
in
data16
movsb
orb
mov
mov
jno
out
jp
or
clc
lods
jne
fldenv
pop
push
inc
push
les
arpl
cld
xor
sub
int
sar
pop
movsb
push
in
sub
cmpsb
stos
mov
jnp
mov
cmpsb
movsl
adc
mov
mov
or
sbb
or
jb
fbstp
xchg
jg
xchg
jecxz
add
xchg
in
insl
movsl
ljmp
mov
into
shlb
inc
adc
pop
nop
pop
fs
js
and
jno
mov
movsb
rolb
cld
and
or
and
adc
xchg
push
sub
adc
sti
sbb
test
cmp
scas
ss
out
nop
jmp
inc
jae
xor
ja
dec
push
inc
add
cli
jae
into
mov
divb
sbb
sbb
mov
inc
fucom
lods
xchg
sbb
pop
cmp
fisubrs
jmp
cwtl
pop
ret
xor
xchg
into
jle
add
daa
jbe
push
hlt
lcall
leave
jecxz
insb
flds
sub
aas
mov
adc
cmc
daa
iret
push
or
inc
test
repz
fiaddl
std
or
je
stos
incl
mov
fsubrl
daa
fiaddl
mov
push
adc
pop
scas
push
mov
sub
adc
xor
outsl
or
lea
pop
mov
push
bound
pop
out
lret
ja
mul
nop
mov
sbb
adc
test
cmp
loope
ss
inc
sub
lret
jbe
xchg
sub
dec
sarb
fst
or
adc
sbb
call
push
push
push
dec
outsl
lahf
xchg
lea
and
cmp
test
mov
insl
dec
cmp
xchg
in
mov
test
aad
xor
adc
mov
cmp
addr16
loop
clc
subb
es
xchg
in
xor
cmp
das
icebp
sub
testb
cmp
out
sbb
jns
rclb
in
call
rcrl
enter
test
fs
sbb
loopne
xchg
in
jmp
rclb
jecxz
iret
jge
jnp
out
mov
push
sub
dec
or
in
pop
pop
aaa
and
movsl
movl
mov
subb
insl
sbb
movsb
inc
js
fidivl
adc
ja
pop
repnz
xchg
int3
xchg
xchg
xor
add
aam
or
adc
insl
dec
pop
add
test
xchg
jnp
sub
lahf
ret
jo
sti
nop
adc
jae
fnstenv
andb
and
sbb
sahf
sub
insb
or
out
dec
hlt
sbb
mov
add
mov
movsl
xchg
xchg
fdivrl
lods
daa
lret
dec
cmp
jmp
dec
push
mov
pushf
out
cltd
cli
sbb
in
pop
push
jae
int3
lret
xor
sahf
push
fwait
arpl
int3
sub
or
movsb
add
add
adc
daa
sbb
pop
sub
sbb
push
int3
movsl
adc
mov
xchg
mov
or
clc
dec
inc
lret
fsub
cmp
out
cmpsl
xor
add
test
and
cmp
jnp
inc
mov
and
jno
mov
dec
mov
test
jmp
jo
mov
sbb
lods
repz
ret
xchg
aaa
or
aaa
mov
sbb
mov
sub
jp
subl
imul
notl
jle
mov
arpl
mov
sbb
sub
xchg
jo
repnz
jle
insl
xchg
mov
ljmp
sub
mov
jbe
loopne
add
cmc
aas
sbb
imul
nop
loope,pt
es
pop
imul
xchg
in
jbe
in
mov
in
cli
int
test
outsl
xchg
testb
pop
jnp
flds
inc
push
pop
jo
inc
stos
add
mov
gs
dec
cmp
dec
scas
sbb
outsb
cmpsb
sub
or
rolb
mov
clc
jp
mov
inc
es
daa
inc
in
sub
popf
outsl
das
aaa
ret
pushf
or
movsl
cs
cwtl
push
loope
repz
mov
pop
add
stos
out
mov
dec
jns
sbb
xchg
adc
cli
mov
dec
xor
imul
add
frstor
mov
dec
push
or
inc
xchg
push
xchg
fistl
mov
mov
xor
xchg
lds
scas
rcrb
fnstcw
aam
out
and
mov
imul
adc
dec
sub
outsb
mov
gs
notb
xchg
mov
jge
sbb
roll
imul
mov
mov
mov
jb
dec
mov
mov
cvtdq2ps
push
pop
cmpsb
dec
test
sbb
test
jo
add
addr16
xchg
cmc
inc
aam
sahf
das
imul
fs
push
push
jle
sbbl
xchg
cltd
jp
cmp
pop
mov
add
inc
add
xor
leave
add
sub
inc
add
scas
enter
mov
mov
ja
imul
nop
pushf
xor
xchg
add
decl
cmc
dec
cs
pop
shll
mov
xchg
jecxz
sbb
pushf
push
ret
cmc
mov
xchg
ja
push
jl
jmp
test
hlt
aas
insb
je
add
aad
pop
add
pop
adc
add
push
adc
fdivrs
cmc
or
jp
or
jne
out
pop
cmpsb
js
jecxz
sub
push
push
jnp
sar
das
pushf
pop
ret
push
mov
inc
mov
add
loopne
mov
leave
push
scas
inc
and
push
mov
xchg
stos
data16
test
cs
fdivrs
dec
pop
movsb
ficompl
icebp
sarb
cmpl
dec
xor
or
idivb
sbb
cmp
cmpl
mov
fucom
popf
movl
stos
negb
ficomps
rol
imulb
inc
push
and
inc
imul
mov
push
movsb
jge
loope
inc
xor
inc
orl
cmpsl
or
popa
icebp
jo
lcall
jecxz
shll
lock
js
cmpsb
xor
in
pop
out
mov
cwtl
sahf
jae
and
into
sahf
xchg
fcoml
add
push
pusha
divb
mov
cmc
shlb
mov
jmp
cli
ljmp
fdivl
xor
int3
movsl
push
mov
leave
sub
mov
and
sbb
xor
push
pop
mov
jmp
lea
xor
loope
aaa
neg
push
and
pop
cwtl
inc
jns
inc
and
push
nop
push
idivl
out
repz
subb
in
fcom
rorl
mov
mul
or
clc
scas
or
scas
xchg
jnp
pop
sbb
xor
inc
scas
loope,pt
imul
nop
fiadds
push
cmp
xchg
mov
gs
std
cmpsl
jl
or
inc
sbb
and
icebp
shll
add
mov
pop
shrb
and
pop
xchg
lahf
jg
fcom
xchg
fidivs
icebp
outsl
std
jmp
iretw
flds
or
fimuls
add
xor
lock
xchg
add
jno
add
sub
jg
mov
loop
inc
outsb
ds
mov
sub
and
test
cltd
pop
stos
cmp
cmp
test
push
xlat
mov
popa
les
aam
int3
pop
mov
dec
push
mov
rol
push
mov
push
cmp
repnz
or
push
mov
out
pop
xor
add
aaa
and
inc
jae
adc
ret
inc
mov
clc
outsb
sbb
mov
xor
test
shlb
dec
sub
loope
add
adc
imul
xor
push
cmc
or
sahf
aaa
cmp
stos
adc
and
pop
jns
int
adc
pusha
outsb
imul
sahf
dec
xorb
aas
imul
mov
or
shll
hlt
mov
sbb
sbbb
cmp
xchg
inc
inc
test
xchg
clc
mov
cmpsb
pusha
in
ss
xor
xorb
lock
aam
mov
adc
lea
push
pop
int
dec
das
lcall
fs
pusha
aad
shlb
mov
xor
dec
je
call
fabs
stc
call
jno
push
popa
mov
scas
dec
int3
insl
jne
je
sbb
sbb
inc
and
es
popl
fsts
mov
pusha
int3
outsb
rorl
lods
test
xchg
or
sarl
sbb
stc
xchg
ret
repnz
hlt
mov
jmp
ljmp
mov
or
sub
jno
xlat
cwtl
or
lahf
arpl
xchg
jl
aad
and
jne
xchg
sub
fcomps
sti
pushl
cmp
popf
push
xlat
arpl
ret
jbe,pn
jno
pop
jmp
and
loopne
or
dec
xlat
les
push
scas
dec
mov
and
cs
xchg
jb
push
jge
jle
stos
pop
lods
mov
gs
jo
gs
add
dec
push
loopne
jae
outsb
minps
insb
mov
repz
ljmp
in
loopne
dec
sub
ret
adc
jo
pushf
imul
lods
imul
mov
bound
xchg
inc
outsl
imul
jle,pt
pop
lret
icebp
add
dec
mov
cld
jecxz
inc
movsl
mov
arpl
outsl
test
shrb
xor
jnp
or
in
and
push
inc
sbb
sbb
push
xchg
or
mov
test
push
dec
test
pop
mov
push
ret
push
inc
idivb
adc
dec
mov
sbb
fs
jmp
sbb
outsb
mov
scas
cmp
mov
cmpsl
xor
add
xor
aad
fsubl
mov
xor
cwtl
stos
sbb
icebp
into
push
cmp
push
outsl
add
push
aas
cmp
rorl
xchg
fmull
xchg
into
stos
mov
imul
push
jno
dec
and
mov
and
mov
mov
inc
dec
pop
iret
in
rorb
fadds
mov
aad
mov
lret
test
push
lret
dec
cmp
fisttps
and
jg
mov
and
outsb
jg
cmp
mov
xchg
inc
push
lods
sub
lcall
fnstenv
mov
and
xchg
icebp
xlat
int3
lahf
addr16
mov
inc
jbe
xor
in
push
mov
aam
mov
inc
in
leave
mov
nop
je
sbb
inc
ret
cmp
int3
cmpb
ficompl
dec
mov
gs
pushf
ret
das
mov
clc
pop
mov
mov
in
out
push
repnz
rcrb
push
inc
out
cwtl
xchg
shl
in
or
fldl
xor
push
lds
jbe
xor
out
or
cld
sbb
cmp
push
cmp
cmp
jmp
test
dec
aas
jl
push
jbe
test
jmp
pop
fildl
push
pop
adc
repnz
mov
rolb
in
push
cmpsb
insl
mov
mov
mov
and
test
hlt
xor
lret
mov
inc
scas
mov
mov
leave
mov
mov
aaa
nop
fsubl
jg
jns
std
lods
xchg
or
mov
or
scas
jecxz
add
repnz
adc
jo
mov
leave
fcmovb
adc
jp
addb
in
in
aas
sbb
sahf
mov
nop
mov
out
mov
dec
and
mov
icebp
in
mov
leave
dec
dec
arpl
bound
pop
push
cs
dec
hlt
xorb
dec
enter
sti
mov
fisttps
nop
test
pop
adc
jl
outsb
repz
fwait
xchg
mov
cmc
add
jbe
jb
xchg
lods
lds
push
sub
pop
orb
and
pop
ss
mov
pop
lret
lahf
mov
jne
add
sub
mov
xchg
aad
out
stc
cmp
mov
xor
dec
fidivrs
ljmp
outsl
inc
push
and
sub
pop
and
lcall
pop
mov
xchg
notb
inc
sub
adc
xchg
pop
adc
mov
and
sbbl
jl
dec
add
sub
addl
mov
and
mov
xor
push
jg
pop
adc
js
dec
and
movsl
loopne
pop
jb
or
mov
xor
gs
pushf
out
adc
fiadds
into
es
pop
lods
es
and
int
fdivl
push
or
and
xlat
lods
add
loopne
jecxz
aas
sahf
das
xchg
shlb
jl
hlt
cmpsl
add
ds
push
and
shrb
movsb
fidivl
or
push
inc
dec
push
add
add
aas
sbb
sub
fistpll
xchg
sbb
mov
out
cwtl
ficoms
lret
xlat
mov
sub
adcb
aas
int
insl
and
or
push
fcomp
mov
sub
mov
xchg
negb
adc
xchg
cwtl
cli
mov
mov
inc
pop
stos
xchg
aaa
pop
mov
cmp
icebp
rorb
idivb
mov
mov
jo
hlt
and
lahf
jb
or
in
ljmp
dec
dec
fidivs
lods
jmp
jae
xchg
cld
fcoms
adcl
into
sub
push
cs
in
push
inc
sahf
in
jmp
test
push
xchg
mov
rcl
rcll
sbb
mov
das
in
fxch
xorb
into
inc
in
sub
ljmp
add
add
xchg
xor
outsl
shrl
mov
cmc
jl
inc
lea
mov
mov
push
pop
pop
cld
push
push
std
dec
arpl
sub
jbe
test
out
fcompl
std
pop
push
aad
rorb
popa
jp
sti
out
fs
xchg
js
xor
inc
xchg
mov
loopne
jecxz
pop
fisttps
idiv
sbb
push
cmp
jmp
jbe
and
and
inc
out
lods
filds
divb
pop
lds
call
fs
mov
jg
fwait
adc
sub
adc
ss
repnz
mov
subb
test
or
lods
mov
sbb
ret
lret
xchg
or
in
fidivrs
in
cmpsb
cli
mov
js
xor
jbe
jbe
mov
pop
pop
leave
inc
outsl
mov
inc
scas
popa
pop
push
dec
xchg
adc
inc
push
pop
push
ffreep
fwait
add
xchg
and
arpl
aam
mov
addr16
inc
dec
test
pop
and
imul
mov
mov
mov
imul
inc
lea
sbb
sub
das
fadds
test
daa
inc
adc
sbb
nop
push
mov
aas
xchg
int3
jb
scas
lret
in
in
xchg
jge
adc
je
sub
or
jmp
lds
ljmp
inc
test
repz
lret
leave
inc
cli
push
ds
insb
sbb
jle
jnp
repnz
dec
xor
in
dec
sbb
xchg
das
and
push
mov
aam
shlb
xor
dec
and
dec
dec
test
mov
sub
mov
ja
or
movsb
daa
push
jae
shll
movsb
add
iret
xor
cmp
lahf
jp
adc
ds
sbb
add
leave
ret
test
jg
ljmp
ja
adc
cld
pop
jmp
adc
pushf
jb
push
outsl
cmp
dec
movsl
or
push
inc
mov
aam
dec
sahf
mov
ja
jbe
xchg
in
scas
test
sub
and
aaa
cmp
mov
call
or
pushf
pop
pusha
ljmp
test
xchg
mov
mov
mov
cmc
jns
test
mov
pushf
dec
jo
push
xor
xor
clc
daa
xor
in
je
xor
sti
push
xor
pushf
pop
cltd
fnstenv
stos
mov
and
add
icebp
jmp
mov
xchg
in
and
or
inc
xchg
sbb
rcll
mov
sub
dec
lret
ret
out
push
or
loope
sub
das
xchg
xor
push
sbb
stos
sub
fs
test
insb
pop
xor
sbb
ret
push
inc
dec
aad
lahf
push
xor
lahf
loop
ret
jne
sarb
clc
xlat
movsl
lret
adc
cmp
adc
enter
dec
push
imul
lret
mov
fwait
negb
fidivrl
push
cmp
mov
and
jmp
in
cli
cmp
ret
mov
in
jb
sub
and
and
xchg
and
lret
inc
xor
dec
fisttpll
andb
jp
cmpsl
fs
mov
in
inc
ret
pop
mov
out
lds
dec
out
sahf
in
pop
pop
xchg
dec
fidivs
xchg
push
push
clc
in
clc
mov
cmpsb
cld
mov
jmp
in
push
adc
inc
xor
inc
dec
inc
sbb
sahf
and
mov
mov
cmp
push
add
lea
sbb
jecxz
cmp
jp
dec
and
enter
std
and
ljmp
in
je
add
notl
cmp
inc
sbb
ljmp
lcall
jo
mov
pop
and
push
xchg
xchg
jb
sahf
lods
xlat
sub
es
jle
sub
aaa
or
push
add
je
mov
sbbl
adc
mov
dec
or
mov
ret
push
xchg
cmp
or
popa
sbb
sbb
sub
cli
lock
inc
jg
call
adc
mov
lea
pop
xchg
jbe
mov
inc
push
cltd
pushf
lea
pop
in
push
pop
sbb
add
popa
mov
iret
jns
pop
and
mov
cli
sbb
arpl
nop
xlat
mov
push
xor
xchg
sbb
push
aam
int3
or
cmp
call
xor
fidivrl
jp
test
in
mov
rcll
mov
imul
sub
inc
int3
in
xorl
les
mov
pop
scas
sub
xor
ja
cwtl
xorb
loope
bnd
and
push
dec
ret
sub
ljmp
sub
or
aam
and
dec
loop
fidivl
jnp
shrl
ljmp
dec
xor
ret
fimull
add
add
pusha
daa
pop
out
stc
sbb
test
imul
lods
cmp
sbb
push
daa
insl
or
test
push
xor
aad
aas
or
ds
es
mov
iret
xchg
das
cmpsb
pop
sahf
push
mov
movsl
xchg
adc
add
ret
and
cmp
sbb
pushf
cmp
push
gs
jp
in
dec
push
sub
in
hlt
cmc
sbb
sbb
in
fisubrl
mov
arpl
xchg
bound
push
xchg
ja
mov
test
inc
jns
push
into
mov
xor
in
sbb
mov
fldl
jnp
aas
sub
xor
lea
out
mov
rcrl
add
mov
xor
rclb
xchg
mov
sarb
loop
leave
xchg
lea
arpl
jle
fisubl
cmc
jae
pop
sub
es
pop
cmp
jnp
sub
mov
jns
ja
dec
pop
scas
test
scas
xchg
scas
sbb
fnstsw
stos
cmp
dec
dec
sub
jb
cmc
in
mov
clc
fsubl
xchg
icebp
addr16
jno
xor
fnstsw
sub
inc
inc
dec
lahf
xor
sub
add
push
mov
xor
pop
mov
fwait
inc
mov
xchg
sbb
vfrczsd
sbb
cmp
stos
scas
jg
ds
sub
or
xor
jo
je
lods
lods
pushf
pop
sub
or
cltd
movsl
mov
jne
mov
sbb
push
sub
push
cmp
std
fsts
ss
clc
mov
dec
jmp
dec
jmp
imul
out
scas
dec
in
clc
cld
sbbl
xlat
and
pushl
sbb
sbb
mov
mov
or
jbe
test
inc
in
adc
sub
jne
cmp
cmp
sub
lret
test
out
mov
insb
fdivr
cmpsl
jb
sarb
lods
xchg
das
scas
int3
mov
jnp
test
ret
pop
add
mov
push
xor
fs
cmp
shll
cmp
xlat
jg
in
gs
mov
mov
pop
outsb
insl
add
jp
fcoms
fcoms
inc
mov
add
inc
ficomps
js
sub
in
gs
stos
test
push
sub
mov
shrb
nop
icebp
sbb
inc
xchg
das
enter
ds
cmp
or
clc
mov
cmp
push
addb
mov
cli
cmp
aad
leave
sbb
sub
pop
out
pushf
xchg
hlt
insb
jnp
or
pop
inc
jnp
xchg
lods
dec
xchg
dec
sbb
dec
stos
fwait
dec
mov
test
gs
mov
loopne
xchg
cmp
lret
jno
pushf
mov
adc
addl
and
mov
jo
push
hlt
sub
mov
sub
cmp
fsin
sti
movsb
sub
leave
sub
pop
jo
pop
insb
sub
jecxz
loop
das
sub
movsl
sti
push
pop
sub
js
in
inc
mov
les
cmc
adc
jmp
fwait
icebp
mov
or
test
jle
push
push
jae
and
and
shlb
or
negl
cmp
mov
xchg
fstl
cltd
outsl
cld
add
sub
enter
in
mov
dec
outsl
leave
adc
dec
cmp
int
sbb
inc
mov
js
jp
idiv
addr16
out
imul
and
outsb
repz
imul
cmp
dec
mov
rorl
lret
mov
cwtl
in
sti
dec
mov
mov
inc
rorl
dec
ja
pop
sub
add
fwait
sbb
jge
gs
jno
xchg
cmp
insl
subb
mov
mov
pop
and
push
aam
ffreep
or
gs
mov
pop
data16
addr16
aaa
or
add
imul
sub
jge
shrl
scas
push
dec
out
add
and
cli
lods
sahf
ficoms
pop
adc
js
pop
and
mov
ja
popa
divb
xor
xchg
loope
out
inc
call
jae
ss
push
sbb
sarl
push
inc
push
sbb
negb
jo
sub
int
mov
sbb
adc
xor
sbb
ret
fiadds
mov
cmpsb
pop
adc
or
jnp
mov
mov
outsb
in
stc
out
fwait
mov
pop
in
hlt
lods
test
jnp
leave
insb
mov
adc
push
mov
lret
daa
mov
jbe
in
in
dec
or
adc
loopne
data16
sub
fisttpl
out
dec
pushf
xor
mov
xchg
rcl
rcr
mov
aaa
or
cli
pop
jl
sar
sub
jp
gs
cltd
xor
bound
inc
jae
dec
xor
sar
scas
xor
and
cmp
sbbl
xor
adc
inc
pop
int3
xchg
loope
mov
push
in
test
sub
pop
add
lret
sbb
xlat
push
ds
mov
and
negl
or
loopne
inc
popa
add
cmp
es
pushf
stos
fistps
sti
arpl
xchg
rol
fbstp
mov
jg
cli
jae
xchg
or
icebp
lahf
mov
jl
add
movsb
cli
lret
xlat
xchg
sbb
ljmp
or
inc
addl
shl
fsub
lahf
stc
hlt
fadds
outsb
fnstcw
scas
out
xlat
cltd
and
sbb
add
data16
loop
popf
stos
loop
fs
iret
jnp
jle
cmp
inc
into
movsl
mov
sub
push
outsb
jg
cmc
xchg
test
push
adc
popa
or
xchg
adc
mov
outsb
pop
out
push
mov
or
lea
push
int
mov
ret
test
aaa
jb
daa
pushf
fidivrl
mov
movsb
hlt
sbb
ficoms
or
push
or
shll
xlat
sub
sbb
fsubl
pusha
sbb
scas
adc
in
jbe
pop
loop
shl
lods
mov
cmpb
out
fs
mov
pop
repnz
xchg
cmp
jae
ss
outsb
mov
inc
lock
test
dec
test
sbb
xorl
popa
aas
mov
inc
lret
add
mov
lds
push
inc
sbb
xor
inc
xchg
mov
inc
dec
or
cmp
sbb
rorl
sbb
aas
xchg
xchg
adc
dec
fildll
mov
ds
jge
and
ret
mov
sbb
push
xchg
rorl
sbb
mov
rcr
mov
jno
mov
inc
subb
mov
ret
push
adc
jp
inc
xchg
jae
enter
sahf
xchg
lods
mov
outsl
sub
and
sbb
mov
decb
push
sbb
ret
leave
jb
lock
adc
pop
dec
inc
test
pop
jnp
mov
das
addr16
pop
jge
mov
fcomp
sti
dec
cmp
movsb
cltd
popf
and
in
push
sarl
stos
jge
xor
jecxz
dec
push
negl
dec
ljmp
dec
das
std
sbb
add
std
rclb
sub
fisubs
dec
jno
mov
addr16
fwait
or
test
cmp
add
jo
insb
adc
out
or
mov
inc
out
pop
xor
mov
mov
dec
gs
ret
fdivl
push
das
dec
push
mov
outsb
pop
int3
sub
dec
sub
outsl
mov
and
je
loop
repz
loopne
xchg
sbb
mov
xor
cmp
sbbb
sbb
push
jne
aas
push
int
mov
jb
scas
push
and
out
mov
out
and
movsb
jecxz
adc
mov
sub
adc
lods
aam
lahf
shll
sub
lock
jns
jp
stos
jecxz
movsl
lods
sbb
ret
aad
fs
add
es
inc
jae
sbb
xchg
mov
mov
leave
push
pop
iret
sbb
testb
mov
pop
push
push
rclb
lods
aam
hlt
cmpsb
cmp
pop
jmp
and
addr16
mov
into
mov
push
fildl
xor
xor
xor
push
insb
mov
lds
xor
sub
js
stos
aad
lret
push
cmp
sub
adc
negb
arpl
cltd
add
sbb
mov
popa
or
out
jns
add
jg
xchg
jb
push
cwtl
je
jbe
mov
je
popf
mov
dec
rcrl
shlb
xor
cmp
mov
inc
icebp
daa
pop
aad
dec
outsl
insl
mov
and
jb
mov
inc
xor
dec
ret
mov
je
lcall
call
lock
xor
push
cmp
ljmp
xor
popa
jno
loope
ja
test
push
scas
aad
arpl
xor
cmp
aam
cmp
adc
push
into
pop
adc
scas
movsl
jns
call
lret
pop
push
xor
xchg
loop
in
push
lock
imul
fwait
addr16
inc
dec
js
adc
pushf
inc
mov
pop
scas
in
das
lret
lock
aas
mov
das
xor
add
pusha
cltd
pop
inc
das
mov
mov
inc
scas
xor
sbb
icebp
sbb
mov
fsubr
stc
pop
add
bound
add
sbb
pushf
jl
cs
and
xchg
sub
inc
mov
outsb
inc
outsl
test
lock
sbb
xor
inc
cmpsb
mov
fistps
pop
add
or
xchg
imul
xchg
fdivr
cmp
hlt
mov
mov
scas
or
mov
lea
aaa
repnz
xor
scas
popf
mov
or
inc
and
jno
pop
inc
and
jb
dec
adc
inc
ljmp
xor
xlat
bound
fnsave
add
daa
adc
icebp
shll
cmp
repnz
jmp
pop
xor
cmp
flds
cmp
lret
inc
sub
push
addr16
int3
mov
cmpsb
testl
jle
jbe
out
test
sub
dec
push
arpl
mov
and
repz
push
inc
sbb
xchg
jo
xor
or
push
popf
push
arpl
inc
inc
lods
lcall
les
add
jp
and
mov
dec
mov
pusha
imul
add
aaa
adc
stos
ja
cmp
dec
mov
jmp
xor
aad
mov
cmc
fdivs
jle
add
adc
xchg
add
mov
mov
mov
rcrl
lods
and
sarb
xor
mull
inc
add
bound
imul
adc
push
sbb
int3
test
cwtl
mov
push
add
ret
lock
dec
or
popf
and
pop
cmp
sub
sub
shll
out
mov
push
inc
xchg
pushf
xchg
loopne
push
and
test
add
pop
xchg
lds
xchg
or
stos
addb
stos
push
cmp
pushw
loop
cld
outsb
xchg
and
mov
push
xchg
lret
out
xchg
and
loope
jnp
inc
sub
ror
hlt
test
movsl
add
scas
and
loop,pn
mov
jnp
leave
xchg
xor
rorl
xchg
dec
mov
lea
add
std
mov
das
push
mov
js
adc
push
xor
dec
mov
gs
sbb
inc
mov
mov
stos
and
jp
mov
cs
loope
pushf
test
cmp
push
shl
sub
and
out
lcall
mov
aaa
pop
movl
xchg
popa
xchg
fwait
syscall
fiaddl
lds
jg
testb
mov
test
jb
fldenv
in
xchg
leave
xchg
outsl
les
iret
cmp
or
cmpsb
ficoml
push
jecxz
xor
xor
cmp
jae
sbbl
dec
je
inc
in
cmc
pop
sub
dec
sub
popa
mov
mov
xor
inc
or
js
or
adc
into
out
mov
xchg
fisubs
clc
push
push
sub
js,pt
iret
popa
pop
mov
je
cltd
mov
mov
lock
jno
xor
fdivrl
insl
add
mov
inc
cmp
xchg
stc
stos
aad
rcr
fistpl
xchg
push
insl
cmpsb
iret
gs
jno
jb
icebp
fidivl
push
inc
imul
mov
sub
std
arpl
dec
cwtl
mov
add
and
out
jb
rorb
cmpsb
icebp
dec
cmp
mov
xor
cmc
dec
cwtl
sbb
jecxz
popa
push
out
repnz
or
imul
jl
test
mov
push
popw
sbb
and
cmp
push
jmp
cmpsl
mov
xchg
popf
xor
in
lods
call
push
scas
dec
mov
add
push
push
or
mov
iret
push
push
jle
stos
sbb
cmpsl
loope
and
xchg
dec
stc
scas
mov
test
fs
pop
cwtl
mov
mov
in
sbb
test
pushl
xor
js
addr16
push
pop
outsl
sbb
call
mov
xchg
idivb
std
cld
cmpsb
jno
xor
push
clc
sahf
cmpl
in
hlt
je
add
stos
jl
loope
mov
or
ficompl
pop
shrb
out
jl
push
jle
cmp
lea
and
inc
xchg
dec
mov
ret
and
test
arpl
mov
jge
lret
pop
lcall
dec
rcrl
xchg
scas
xchg
int
pop
sub
popa
scas
dec
adc
push
loope
loope
sub
mov
orl
xor
sub
sub
or
xchg
pop
jecxz
popa
xor
vaddss
pop
mov
movsb
mov
jl
int
sbb
inc
adc
pop
jle
lea
aad
ja
jo
pop
les
loopne
aad
insl
lods
imulb
cwtl
leave
fwait
xlat
outsb
xchg
sbb
and
arpl
in
or
mov
push
fisubrs
lret
xorl
rclb
xchg
and
clc
cld
lret
imul
mov
nop
add
and
push
mov
iret
data16
mov
cmp
imul
adc
jbe
xor
shll
aad
movsb
hlt
lock
jnp
sub
fwait
subl
mov
add
adc
sti
inc
movsb
leave
lea
sbb
xorb
xchg
mov
push
stc
and
repnz
mov
push
jp
or
and
enter
adc
inc
and
jae
jno
push
mov
mov
ret
in
test
mov
xchg
shrl
sbb
xor
cmp
jnp
cs
ss
add
fldl
lahf
cwtl
dec
lahf
cmc
leave
pushf
push
lahf
aas
aad
add
xchg
pop
std
iret
jae
out
sbb
and
push
add
mov
and
jbe
es
push
xor
popa
mov
mov
inc
mov
sub
pop
and
enter
cmp
loop
inc
dec
aas
test
sbb
pop
mov
mov
inc
lds
sub
fdivs
xor
pop
mov
sub
sbb
mov
notb
sti
jne
jae
ss
mov
clc
inc
push
int3
lcall
outsb
lret
call
push
fcomps
push
adc
shll
push
push
pop
repz
and
sbb
icebp
pusha
ljmp
aaa
lods
aam
sub
sub
pop
into
daa
adc
stos
pop
xchg
or
xchg
adc
jnp
shll
fsubrp
shll
xor
rcll
movsb
fs
pop
mov
and
gs
ret
and
shr
mov
mov
ret
in
aam
cmpl
out
nop
icebp
orl
in
inc
mov
xchg
fmul
sub
mov
aad
dec
and
push
or
insl
xor
movsb
mov
sbb
rcpps
add
adc
stos
test
mulb
testb
js
cwtl
inc
cmp
mov
cmpsb
dec
cmpsb
jns,pt
gs
clc
mov
mov
repnz
xchg
fcoml
fmulp
fadds
mov
inc
mov
jns
mov
je
add
es
nop
add
aad
ret
into
or
mov
xchg
jb
cmpsb
pop
data16
jo
mov
dec
cltd
hlt
loope
out
shrl
cmp
out
arpl
inc
cwtl
dec
mov
enter
lcall
fildl
inc
and
jle
xor
mov
hlt
cmp
pushf
add
pop
int
adc
xchg
sub
xor
inc
mov
je
jae
pop
arpl
stos
sub
push
in
jmp
gs
imul
inc
sbb
repnz
xor
enter
int
ficoms
dec
shll
inc
daa
sub
or
sbb
shll
movsb
scas
inc
shr
mov
scas
dec
scas
jae
std
and
rolb
add
imul
push
in
shll
jns
repnz
and
cmp
pop
hlt
mov
push
pop
in
xor
push
gs
adc
test
hlt
cwtl
pop
pavgw
je
sub
movsl
mov
push
jns
push
mov
jle
add
pop
in
inc
mov
out
js
sbb
and
gs
ja
dec
adc
aas
sarb
dec
pop
push
inc
sub
je
or
fsubrs
adc
cld
mov
inc
adcl
sub
ss
adc
sahf
and
xor
add
pop
std
cmp
mov
push
icebp
mov
cltd
loop
inc
and
xor
rcr
ja
and
test
dec
dec
lods
cmp
ret
arpl
fldl
int3
ret
repnz
sahf
movsl
sti
lret
and
xchg
rcrl
cwtl
rcrb
push
outsl
repz
fimuls
movb
test
int
push
mov
fildl
mov
cwtl
xchg
in
jmp
subb
or
jb
jmp
push
icebp
mov
stos
je
dec
sbb
lea
and
and
jns
push
fwait
pop
cli
in
xlat
stos
lahf
dec
adc
inc
push
insb
nop
rcr
mov
out
stc
xorl
test
das
icebp
stos
gs
dec
stos
mov
mov
xchg
std
mov
jmp
inc
loopne
pop
addr16
pop
out
adc
out
cmp
cmc
cmp
sbb
sbb
pop
repnz
fcmovnu
pusha
lods
outsb
mov
push
push
repnz
push
enter
or
cltd
adc
push
rorb
ja
lods
sbb
inc
out
inc
push
inc
xor
mov
rcll
sahf
xor
mov
insb
int
fimuls
sti
movsb
xchg
push
mov
ljmp
inc
mov
add
or
bound
pop
xorl
pop
mov
rclb
push
out
aaa
scas
inc
sub
inc
adc
adc
imul
xchg
cltd
or
mov
adc
inc
mov
cmp
cmpxchg
fcoml
psubusw
insb
mov
mov
cmpsb
or
pop
clc
push
popa
or
shll
rol
ret
es
out
movsl
cmp
push
xchg
lock
test
jnp
mov
imul
inc
pop
out
ljmp
js
out
add
sbb
mov
daa
outsb
mov
inc
jl
sbb
sbb
adc
imul
jae
sbb
jl
sbb
stos
add
mov
int
insb
cmc
mov
push
std
jae
and
or
mov
lds
sbb
jnp
out
jp
mov
push
inc
arpl
lret
pop
dec
and
testb
mov
stc
aas
mov
add
adc
sbb
xorl
sarl
push
cmp
insl
sahf
sbb
dec
inc
xor
ret
xor
stc
xchg
and
and
outsl
dec
fmuls
mov
aad
adc
push
push
fcmovu
pop
push
jbe
adc
iret
std
aam
rcll
xchg
dec
lret
vmulps
fs
mov
or
cmc
jns
xchg
jbe
negb
test
xor
es
subb
fstl
fwait
cmpsl
shr
xlat
and
aam
daa
dec
xchg
mov
ss
stos
jno
popf
add
mov
mov
pop
xchg
loopne
clc
cmp
xchg
fmull
mov
aaa
loopne
ret
lret
mov
pop
adc
push
jnp
out
adc
stos
test
rolb
push
sbb
js
or
fldl
push
pusha
inc
xchg
mov
jns
gs
lahf
sub
push
enter
cmp
jge
xor
pop
dec
pop
sti
jmp
add
xchg
test
xchg
jmp
pop
add
addr16
cwtl
pusha
aas
fstpl
das
hlt
enter
sbb
push
gs
jmp
scas
out
push
faddp
pop
pop
outsl
sub
idivl
test
repnz
jmp
flds
mov
popa
hlt
jmp
push
push
lea
insl
dec
dec
push
lahf
sarb
repnz
rcrl
insb
daa
jnp
aam
aad
cmp
inc
cmp
adc
push
mov
mov
clc
cmc
pushf
scas
addr16
fisttpl
cmc
fsubp
scas
or
push
fucom
movsb
mov
cli
mov
ret
xchg
hlt
add
inc
sub
push
mov
lock
mov
fidivl
ljmp
adc
xchg
adc
inc
cwtl
pop
out
mov
lods
jo
push
shrb
fsubr
movmskps
into
sbb
lahf
jno
inc
xchg
shlb
xchg
adc
clc
rcrb
xchg
xor
mov
sub
mov
xor
jecxz
sarb
loope
dec
and
addr16
fldl
insb
pushl
inc
int3
and
push
leave
test
into
mov
int
cld
jno
icebp
adc
dec
cmp
sub
mov
mov
and
ljmp
stc
fldenv
pop
xchg
push
enter
dec
out
jbe
div
sbb
mov
or
int3
das
and
inc
push
lahf
fnsave
aas
in
shrl
icebp
jge
adc
add
cs
and
das
or
test
loope
pop
repnz
test
jg
or
cmpsl
scas
cmp
xor
mov
mov
pop
cmp
mov
sbb
mov
addl
mov
push
fwait
xchg
iret
sub
out
sbb
push
xrelease
fcomps
add
add
pusha
movsb
mov
sti
pop
lds
push
cmp
xorl
inc
xchg
aas
push
cmp
and
pop
imul
fcomps
push
jle
pop
mov
push
shl
test
sbb
dec
pop
pushf
nop
xchg
xor
mov
stos
xchg
sub
jle
js
inc
arpl
test
out
addl
and
dec
adc
inc
clc
xlat
mov
in
out
inc
shrl
mov
addr16
dec
dec
stc
sti
cli
xlat
jno
xor
jp
fldl
mov
cli
sub
adc
mov
into
xchg
or
xchg
or
adc
int3
fisubrl
jmp
dec
mov
cmc
push
xlat
jmp
or
lret
pop
pop
in
push
mov
jnp
adc
pop
or
cmpl
mov
clc
cmc
sub
sub
movsl
lea
and
mov
add
cmpsl
popa
fadds
repnz
aas
lret
je
jne
and
call
pushf
in
cmpsb
xchg
mov
inc
mov
adc
stos
mov
cmp
push
cmp
aad
jp
jno
mov
pop
mov
xorl
bswap
js
dec
mov
ds
mov
lret
stos
imul
and
sub
mov
mov
jnp
mov
rolb
and
add
xchg
mov
cmp
les
lock
jno
mov
fildll
mov
fs
xchg
sbb
add
xor
cwtl
testb
cmpsl
sbb
out
lret
daa
lea
in
push
xchg
jmp
cmp
test
xor
int
iret
js
aaa
fwait
les
push
push
fnstcw
mov
ljmp
xchg
addb
jns
mulb
mov
repz
das
xor
inc
stos
pop
pop
invd
mov
adc
outsl
mov
popf
adc
and
jmp
pop
loope
sub
inc
sub
mov
imul
jmp
xchg
dec
sub
and
push
leave
enter
in
lcall
enter
mov
gs
sub
and
xchg
inc
mov
out
test
adc
cmc
xor
insb
mov
pop
mov
dec
jno
ljmp
andl
inc
scas
movsb
daa
fadds
lahf
fldt
jo
loop
mov
inc
aaa
pop
mov
cmp
sub
jp
inc
push
push
lcall
sbb
pushf
push
mov
sub
ja
xor
xchg
std
push
in
add
stc
xchg
or
xor
mov
dec
push
repnz
hlt
xchg
add
mov
popa
test
push
pop
arpl
push
pop
outsl
lods
or
push
push
cltd
rorl
ljmp
in
pop
cli
push
notb
pop
mov
and
mov
xchg
js
cmp
push
cltd
add
jns
adc
cltd
in
int3
jo
or
out
pop
mov
fbstp
fcoml
xchg
cmpsl
inc
sub
and
ds
xor
stos
popa
jno
fsubrs
lods
add
dec
lcall
dec
mov
aaa
xchg
adc
mov
clc
into
mov
ror
arpl
clc
icebp
adc
or
mov
jo
lods
gs
adc
mov
mov
enter
sarl
xor
ret
and
sub
xchg
mov
movsl
repnz
stos
cmpsb
sbb
jne
iret
push
gs
into
cwtl
sahf
xchg
sbb
push
in
insl
or
rcr
jecxz
imul
outsl
mov
adc
inc
mov
mov
jecxz
outsl
mov
push
dec
cmp
std
sbb
inc
sub
add
dec
xchg
push
xorb
mov
mull
mov
ret
sbb
in
sbb
lea
pop
and
mov
sub
testb
inc
fisubs
mov
es
call
add
add
xchg
xchg
in
lret
inc
fdivp
push
mov
dec
imul
push
ss
mov
cmp
jle
push
push
loopne
mov
lds
jmp
fwait
jae
insb
sahf
lods
pop
cmpsb
or
or
mov
shrl
loop
scas
pop
js
loopne
add
cld
out
push
adc
js
adc
mov
push
xor
int3
inc
rolb
sub
jg
inc
mov
mov
hlt
int3
bound
jmp
in
int3
jmp
js
push
jge
or
loop
into
ret
push
sbb
jl
cmp
int
js
sub
sahf
xlat
in
push
lock
addr16
push
inc
mov
bswap
pop
mov
outsl
sahf
das
mov
jbe
cvtps2pd
jg
rcrb
dec
or
xchg
lock
stos
or
insb
mov
dec
pusha
adc
dec
stc
fstp
lret
ja
jl
push
aas
rorl
push
imulb
jno
sub
push
cmp
sbb
jae
repnz
ret
inc
pop
pop
sbbl
pusha
fisttpll
scas
call
popa
flds
sbb
pop
daa
adc
les
and
sub
test
int
pop
sub
fmuls
test
mov
sub
mov
dec
push
enter
lcall
jae
mov
divw
cmp
mov
std
jp
xchg
add
loopw
out
push
mulb
mov
jg
repz
xchg
add
daa
fsubrs
movsb
or
jg
push
sbb
gs
in
test
jmp
mov
and
or
ret
mov
cmp
aad
and
dec
dec
cli
adc
inc
dec
in
test
mov
frstor
insb
pusha
ret
xor
xor
sub
movsl
inc
adc
imul
sbb
outsb
push
clc
jns
mov
jp
jl
repnz
push
in
pop
jb
inc
jecxz
mov
imul
xchg
cwtl
daa
imul
mov
inc
add
sub
sbb
loop
push
imul
cwtl
sub
popa
sbb
xor
jnp
jo
mov
inc
orl
jne
sub
pop
fcoml
jg
stos
mov
pop
xchg
and
and
mov
loope
imul
xor
pusha
add
pop
xchg
ss
ds
push
cltd
inc
ja
mov
fwait
divb
mov
rcll
cmpsb
add
dec
js
in
cmp
and
imul
incb
jne
inc
js
sub
mov
mov
mov
cltd
psllq
dec
fwait
in
call
push
ss
iret
jl
mov
aaa
mov
push
stos
mov
insl
out
push
xor
pushf
sarb
jge
rol
aad
dec
decl
xchg
cltd
adc
add
cmp
movsb
jp
out
mov
fsubr
lds
lods
xchg
clc
and
mov
call
scas
adc
mov
inc
mov
adcl
fists
dec
dec
pop
add
loop
xchg
out
sbb
sub
xchg
pop
inc
daa
loope
xchg
adc
mov
push
stos
xchg
mov
sub
mov
pusha
imul
sub
jge
pop
test
rcrl
and
in
shrb
ret
adc
fstpt
adc
or
dec
cld
mov
jnp
imul
gs
cbtw
cmp
mov
jl
inc
decb
cmc
inc
rorb
pop
fwait
push
call
nop
pusha
sarb
rolb
pop
sub
xchg
and
xchg
inc
je
insl
cwtl
push
outsb
out
lods
xchg
adc
icebp
out
aam
adc
dec
dec
jo
rclb
dec
outsl
cmp
lods
lods
rclb
je
int3
dec
jns
xorb
aas
inc
jge
notb
and
jp
sbb
movsb
divl
mov
mov
dec
popf
stos
jno
in
fsubrl
cmpsb
add
pop
sahf
in
lds
push
out
xchg
andb
adc
cs
adc
xchg
aam
mov
cli
cmp
jbe
sbb
jle
inc
xlat
insl
xor
push
mov
sbb
pop
cmp
out
xor
cmp
and
fisttps
xchg
lahf
cmpsb
lods
or
enter
cmpsl
cltd
ret
push
and
fs
and
aas
fidivrs
sub
inc
mov
add
mov
dec
xchg
dec
ss
add
rorb
adc
cmp
mov
xchg
add
add
fwait
out
inc
jmp
mov
xchg
mov
mov
cmp
out
jmp
dec
int3
mov
cmp
and
fisttpl
mov
ja
lods
pop
fimuls
mov
sarb
or
cmc
leave
shlb
inc
in
fnstcw
push
xchg
jmp
loopne
wbinvd
push
mulb
test
xor
mov
fsubrs
cmp
add
inc
sbb
shlb
xor
xor
movsl
mov
inc
cmpsl
lret
mov
cmp
mov
pop
scas
test
sub
add
jbe
push
insb
ljmp
mov
mov
xchg
pop
mov
out
lret
add
lret
mov
daa
push
and
push
adc
cmp
mov
pop
in
push
pop
in
adc
stos
cmp
popf
stc
pop
jle
sub
mov
ficoml
shlb
movsl
xchg
xor
and
jo
out
rol
int
or
xorl
jb
sbb
push
jg
arpl
ja
loope
imul
mulb
cmp
movsl
cmp
orb
xlat
jnp
adc
cltd
jmp
imul
das
adc
xchg
push
ss
gs
jmp
les
lods
cmpsl
popa
lahf
push
loop
pusha
mov
and
cmp
gs
push
jg
in
loop
mov
jnp
hlt
fwait
xor
dec
pop
jecxz
repz
xchg
xchg
jb
mov
sub
insb
outsl
movsl
test
mov
popa
dec
scas
mov
dec
incl
mov
or
add
and
pusha
inc
sub
jmp
jnp
aaa
pop
push
mov
pop
fistpll
scas
or
pop
mov
enter
dec
rorl
add
dec
mov
add
cmc
inc
dec
cli
pusha
adc
mov
sub
subb
int3
adc
xchg
arpl
push
xchg
idivl
xor
iret
nop
pop
dec
lahf
fcomip
pop
iret
fisttps
cmpsb
out
lds
subb
mov
mov
adc
mov
cmpsb
js
xchg
xchg
aas
cli
inc
xor
dec
add
xchg
popa
mov
mov
cmp
stc
xor
xor
rorl
hlt
pusha
add
jl
mov
mov
out
add
cmp
test
or
sbb
mov
nop
add
sub
scas
xor
add
outsl
test
pop
cmp
inc
pop
leave
pop
popa
and
ds
or
dec
out
xor
jg
fsubrl
pop
and
mov
and
jmp
dec
sub
jne
notb
push
pop
mov
sbb
test
inc
testl
xorl
mov
dec
lret
fwait
jo
xchg
add
push
mov
jecxz
dec
lahf
rorl
push
cld
stos
mov
js
xchg
and
mov
bnd
lea
inc
adc
and
xchg
inc
daa
or
lar
fldcw
jbe
adc
xchg
aam
pop
mov
sbb
xlat
pop
mov
js
lret
js
xor
dec
int3
cmp
imul
or
nop
jo
notb
negl
ficoms
jecxz
sbb
shl
sahf
add
lods
in
mov
into
mov
scas
pushf
pop
push
in
pop
pop
push
adc
sbb
fldt
inc
ret
jae
mov
xlat
bound
xchg
push
movsb
xor
cmpsb
int
leave
fprem
sub
and
mov
pop
aad
xor
cmpsb
repnz
imul
cmp
cmp
dec
or
fs
fdivrs
xlat
inc
or
xchg
mov
hlt
decl
sub
xchg
and
int
nop
jecxz
cmpsl
dec
mov
jne
fadd
test
out
jmp
adc
repz
pop
sub
mov
insl
add
aam
outsb
jl
mov
test
jl
xor
jle
mov
mov
jne
and
stos
xchg
sti
add
lret
push
lods
js
dec
or
add
iret
pop
mov
in
or
push
dec
ljmp
adc
xlat
xor
rorl
xchg
cmp
push
xchg
mov
and
adc
mov
cmpsb
in
mul
stos
in
xor
jae
mov
movsl
jmp
inc
push
les
cmpb
fdiv
cmp
push
sbb
cmp
jle
adc
dec
push
shll
xchg
fs
or
jae
sahf
adc
xchg
xor
daa
mov
jne
mov
cmp
mov
push
mov
sub
jbe
fs
cmp
aad
xchg
icebp
out
mov
mov
cli
cmp
and
mov
xchg
dec
fcmovnbe
leave
cmp
jmp
xor
mov
in
xlat
pop
add
mov
jnp
mov
push
cmpsb
add
add
or
sub
test
sub
mov
mov
jle
inc
inc
mov
inc
mov
pop
enter
mov
sbb
and
mov
sub
movsb
roll
loope
pop
imul
and
lock
leave
add
scas
pop
fidivrl
xor
xorb
jp
ds
mov
pop
pop
test
shrb
mov
xor
dec
lcall
pop
cmp
push
shrl
push
lea
adc
mov
cmp
push
or
ds
ja
sbb
adc
fldenv
xchg
push
sahf
cltd
cmp
cmp
jl
push
pushf
mov
aam
lods
adcb
inc
es
xor
sahf
out
push
pop
sub
or
xchg
call
jae
pop
ljmp
test
sub
mov
or
cmp
mov
cmp
stos
add
sub
fbld
les
in
repnz
into
hlt
add
fistps
dec
das
fdivs
jo
push
cld
fistps
mov
cli
ficoml
pop
inc
shl
pushf
div
fs
insl
js
ret
mov
jae
cmp
dec
mov
dec
mov
push
sbb
mov
sti
push
push
out
jne
sbb
std
mov
fidivs
inc
xchg
xchg
mov
pop
das
aas
mov
or
sbb
movsb
shlb
xchg
sbb
mov
lret
mov
ljmp
mov
adcb
jl
lods
andl
les
xchg
testl
pop
sbb
out
jno
insb
cwtl
lcall
leave
pop
bound
inc
test
dec
lahf
out
or
xor
test
pop
enter
test
add
ljmp
pushl
push
cli
dec
mov
cwtl
loope
aam
imulb
ret
pop
in
jo
clc
adc
mov
mov
xor
movsb
in
xchg
inc
repz
clc
cli
nop
or
xchg
xchg
adc
ret
jne
jmp
lds
fwait
int3
xor
insl
imul
inc
dec
rorl
andl
lods
jg
mov
int3
mov
testl
stos
pop
aam
setg
cwtl
xor
shlb
imul
gs
xchg
lret
idivb
push
sub
fnsave
jge
cmc
cwtl
addl
add
bound
cmp
jmp
xor
rolb
lds
mov
decb
cmpsb
xor
pusha
lock
into
sbb
inc
dec
insb
test
mov
pusha
and
jle
sbb
xlat
lods
loopne
lret
shlb
outsb
movsl
ja
out
pop
pop
insb
test
movsb
fdivrl
mov
xor
in
nop
pop
aas
lock
imul
mov
lods
push
or
xor
ss
test
ds
and
and
mov
push
leave
sub
xchg
cmp
jns
and
xchg
and
lock
jb
std
cmpsb
test
xor
mov
rol
icebp
pusha
pop
push
mov
adc
pop
dec
stos
sub
xor
mov
ja
mov
in
or
hlt
mov
leave
pop
push
fs
shll
jno
mov
mov
sub
dec
aaa
xor
add
cmp
hlt
cmp
jmp
out
inc
int3
inc
push
popf
xor
loopne
push
dec
push
ficoml
lcall
xor
jns
add
sbb
cmp
leave
mov
leave
cld
xor
push
dec
je
pop
cmpsb
dec
push
ret
fcmovnbe
sub
dec
pop
and
push
scas
cmp
in
sub
jno
jno
std
cwtl
push
daa
insb
jbe
fisttpl
push
jno
hlt
jg
xchg
scas
mov
push
mov
xor
fidivrl
ja
adc
mov
fstps
xchg
xchg
mov
insl
pop
lcall
push
insb
pushf
ds
test
xor
sbb
sub
mov
xchg
or
mov
and
pop
or
and
ss
cli
andb
dec
rorb
or
xor
adc
iret
enter
mov
ljmp
loop
add
mov
adc
add
lret
mov
jb
popf
inc
jnp
mul
mov
idiv
lock
out
push
push
add
out
xorl
enter
decb
mull
pop
inc
fisttpll
push
or
xlat
sbb
mov
mov
nop
outsl
ds
cwtl
sub
ss
das
mov
outsl
inc
push
and
xchg
sti
scas
in
mov
mov
xor
fs
scas
jb
cltd
push
sub
dec
mov
dec
mov
push
ja
inc
xor
sub
xor
mov
fs
add
loop
xor
loope
into
mov
mov
dec
ret
push
cmp
push
outsl
leave
mov
sub
push
es
push
push
add
and
aad
push
xchg
jecxz
xchg
jno
fwait
xlat
dec
ret
frstor
aas
jne
sti
dec
fdivs
les
call
icebp
aad
cmp
cmc
clc
xor
add
xchg
cmp
in
clc
mov
scas
pop
push
or
les
xlat
lods
adc
xchg
lods
in
cmp
popf
idivb
insb
push
arpl
ret
lcall
stc
adcb
loop
aad
xlat
jmp
adc
pop
cmp
dec
insl
pop
fidivs
push
and
jo
imul
mov
jnp
jg
shr
sub
xchg
test
jg
adc
xchg
aam
sbb
mov
xor
addb
dec
mov
out
push
xchg
popa
xor
fisubrl
clc
lcallw
add
scas
push
sbb
or
cld
adc
imul
sbb
cmp
jns
sbb
mov
pop
xchg
fucom
dec
in
ds
mov
mov
movsl
call
sub
roll
ficoml
dec
xor
dec
cld
xchg
jp
sbb
cld
push
test
xchg
aaa
mov
dec
addb
aam
ljmp
pop
ja
jns
rorb
in
mov
sahf
cmc
pop
stos
add
cmpb
push
cmp
ds
mov
adcb
les
gs
in
outsb
add
mov
xchg
scas
or
dec
inc
outsl
sbb
iret
sahf
sbb
push
cmc
cli
enter
sarb
pop
les
shll
mov
jo
xor
shr
loopne
cli
mov
lods
cmp
jo
cmp
rolb
fnstenv
fwait
push
nop
add
pop
or
movsb
fstps
std
sub
push
xor
test
orl
ds
pushf
les
pop
imul
mov
mov
lds
addr16
mov
test
je
mov
iret
sub
pop
stc
jecxz
outsb
movsl
jg
es
in
push
call
loope
or
clc
xor
pushf
ljmp
push
ret
cmp
jae
ds
test
xchg
cld
in
xor
add
mov
sbb
add
imul
xor
push
inc
movsl
cwtl
push
pop
or
popf
jmp
in
call
cmp
call
jge
mov
xchg
jp
mov
pop
push
bound
and
jecxz
fisubl
dec
xor
idivb
sub
mov
xchg
in
dec
push
daa
es
cwtl
dec
dec
into
outsb
lods
je
imul
add
aam
xchg
fdiv
xchg
in
jo
mov
xlat
inc
cmp
lea
adc
lret
xchg
dec
xor
sub
sbb
push
mov
mov
jecxz
icebp
pop
hlt
xchg
mov
sbb
sbb
push
xchg
adc
cmp
outsb
in
push
xchg
hlt
inc
xor
adcl
push
adc
and
mov
cmp
mov
xchg
and
loope
insb
pusha
mov
and
enter
mov
dec
and
sbb
mov
and
in
stos
lret
add
cwtl
or
lret
scas
loop
mov
in
mov
inc
mov
ret
orl
sub
and
repnz
lahf
test
jmp
xchg
movsl
push
popa
jae
adc
mov
je
push
inc
push
out
out
or
xchg
ret
outsl
push
fwait
sbb
jne
ret
hlt
call
sub
in
ret
sahf
cmp
and
sub
icebp
xor
jle
out
jne
mov
and
jmp
lahf
mov
dec
jne
imul
cmpsl
ficoml
in
out
sub
lcall
cmp
xchg
ljmp
cmp
dec
and
mov
pop
pop
cmp
xchg
pop
scas
xadd
mov
sub
dec
jo
xor
mov
lds
shlb
lret
shrb
add
sbb
cmpsb
js
inc
sub
test
mov
push
leave
ret
jmp
pop
or
lret
add
push
lret
addr16
outsb
or
out
fmul
fwait
cmp
fcoml
lcall
cltd
les
adc
mov
adc
out
popf
pop
lahf
in
cltd
push
inc
sti
cmpsb
sbb
das
gs
out
xlat
sbb
mov
lret
or
cmp
inc
sub
adc
and
adc
mov
sbb
fs
sti
addr16
cld
js
push
cmp
fcomip
rcrb
lds
subl
mov
pushf
outsb
xor
xchg
stc
sub
jp
mov
mov
and
and
rorb
scas
es
dec
mov
pusha
xchg
sti
jo
test
fcompl
cmpsl
std
in
fstpl
push
jp
jecxz
and
in
scas
fwait
ljmp
pop
repnz
test
xchg
aam
stc
notb
sub
addr16
outsl
sbb
mov
out
sbb
mov
mov
adc
out
push
call
out
mov
test
xchg
stc
shl
lret
xchg
sbb
xchg
in
ljmp
aam
int3
out
hlt
incl
mov
and
xchg
inc
mov
adc
inc
ret
mov
cli
pop
mov
je
hlt
mov
dec
fxam
scas
sbb
mov
mov
lret
jae
mov
push
test
and
jle
pusha
push
subb
pop
jae
outsl
add
pop
lods
mov
sub
popa
jle
or
loope
cmpsb
repnz
stc
popf
std
jge
rcrb
repz
adc
push
hlt
fcmovnbe
sahf
outsl
push
push
outsb
sarl
xchg
int3
pushf
lahf
inc
or
mov
push
adc
inc
xchg
jne
dec
imul
push
xor
nop
sti
jl
push
mov
call
jbe
es
sahf
adc
decb
or
mov
movsl
hlt
inc
xchg
lods
or
popa
jae
fs
or
mov
inc
sub
mov
js
stos
stos
ds
mov
jle
adc
push
fcomps
push
fsubr
out
imul
clc
fmull
fstps
pop
or
cmpsb
jmp
gs
adc
push
dec
and
ficompl
test
fnstenv
in
rcrb
xchg
or
push
arpl
or
jecxz
xorl
int3
sub
adc
ret
sti
dec
add
rolb
out
dec
rcrl
push
test
mov
mov
dec
adc
inc
cmc
inc
mov
imul
aam
push
lahf
addr16
inc
dec
popf
mov
mov
xchg
cltd
add
js
movl
mov
jge
sub
daa
clc
push
jb
fisttps
pop
mov
int
inc
cmp
jnp
ret
pushf
push
sti
stos
js
push
mov
aas
inc
pop
dec
insl
into
je
pop
pop
jl
jae
jnp
ret
and
sbb
xor
int
dec
adc
dec
jmp
push
scas
inc
jecxz
inc
xchg
andl
mov
cmp
lea
mov
mov
lahf
mov
push
or
mov
sbb
shl
adc
push
jmp
lea
add
in
add
mov
add
and
ret
jno
or
aam
and
dec
ret
inc
ljmp
add
push
cmp
push
push
inc
sub
cld
or
hlt
add
sub
divb
push
inc
pusha
mov
loop
mov
mov
aad
cltd
xchg
popa
les
aaa
and
pop
inc
mov
call
pop
mov
ja
mov
imul
out
mov
pop
jmp
sti
insb
add
std
and
nop
stos
pop
mov
adc
inc
inc
sub
inc
mov
aas
dec
jmp
je
inc
xchg
pop
decb
cmp
push
test
mov
sti
fdivrs
insl
push
cltd
sbb
add
inc
iret
mov
in
lds
mov
arpl
in
cmc
das
fcmovne
dec
jae
lea
rcll
jmp
pop
incl
inc
push
jns
jb
jecxz
xchg
notb
cmpb
jmp
out
insl
sbb
push
in
mov
or
mov
mov
mov
popa
cli
pop
push
dec
pop
mov
pop
movq
jmp
imul
nop
add
xor
mov
int3
mov
int3
mov
or
xor
aas
mov
adc
mov
std
in
jbe
inc
pusha
adc
cmpl
daa
add
ror
mov
push
mov
mov
sbb
xchg
pusha
sub
clc
sbb
leave
fisttps
stc
jle
and
arpl
push
or
movsb
inc
or
adc
int3
inc
xor
enter
push
leave
xor
lcall
or
add
mov
fisubl
jbe
cld
enter
jns
mov
scas
ficoml
int
lods
adcl
xchg
mov
mov
add
push
push
in
add
xor
pusha
or
mov
jg
sahf
pop
icebp
cmp
push
pusha
xor
push
mov
dec
or
out
pushf
jae
aas
push
sbb
add
loope
les
pop
jae
mov
mov
jo
ret
jle
ss
add
pop
aad
xchg
add
inc
scas
pop
orl
sub
cmpsb
and
lods
pop
sbb
xchg
inc
sub
and
jb
mov
jo
testl
cltd
inc
mov
dec
mov
roll
call
movl
popf
into
jae
sbb
psrld
cmp
jbe
stos
cli
xchg
push
aaa
out
call
dec
sbb
jno
xchg
sub
das
sbb
fidivrs
in
push
iret
mov
xor
xchg
sbb
and
sbb
adc
outsl
test
push
and
popf
cmp
jno
adc
mov
and
adc
loope
cld
jae
xchg
imul
jmp
ret
pop
and
cltd
mov
cwtl
cmp
mov
call
xchg
fdivrp
pop
xor
jmp
inc
sbb
xor
stos
or
adc
and
push
and
outsl
cmpsl
div
inc
pusha
in
push
les
dec
add
imul
nop
arpl
cmp
inc
add
movsb
stos
pop
add
or
dec
push
push
fwait
xchg
jg
sub
dec
xchg
xor
mov
sub
sub
cltd
jmp
cmp
cmp
sbb
dec
xchg
in
jl
push
mov
pop
or
or
inc
gs
aam
jg
jge
adc
data16
sti
es
cli
pop
push
outsl
jnp
pop
inc
int3
mov
sarb
adc
xlat
inc
push
xchg
mov
sub
orl
mov
out
sub
decb
xor
push
jnp
imull
sub
loopne
out
and
mov
mov
add
cmpsl
push
jmp
push
cltd
mov
stos
adc
pop
stos
cmp
bnd
insb
gs
xchg
stc
and
add
sarl
mov
hlt
test
mov
xchg
add
and
or
mov
popa
inc
xchg
mov
push
ret
mov
pop
pushf
sub
mov
cmpsb
insl
outsb
test
and
or
pusha
xchg
ret
pop
decl
xor
jecxz
ret
adc
ret
outsb
sbb
xor
mov
pop
jns
pop
mov
dec
jnp
dec
daa
shlb
movq
mov
dec
xchg
jecxz
and
xor
fadds
rcrl
test
and
sub
jmp
pop
rcll
es
aam
cmpb
rcll
push
dec
push
cmpsb
and
leave
inc
sub
clc
mov
insb
sub
add
lahf
cmc
sbb
scas
rcrl
call
pop
faddl
cmc
pop
adc
fnstenv
out
int
dec
loop
pop
addr16
mov
fbld
loope
sbb
stc
mov
sbb
adc
lods
ret
pusha
adc
jge
adc
dec
shrl
mov
fbld
faddl
call
mov
fists
pop
lahf
fnstsw
add
popl
in
rcrl
mov
ljmp
rcl
mov
adc
and
scas
mov
stos
call
xor
cltd
mov
pop
iret
mov
inc
lds
nop
adc
mov
enter
mov
and
sbb
leave
inc
pop
inc
mov
je
mov
cmp
dec
insb
scas
or
xchg
out
mov
das
nop
bound
in
mov
movsl
divl
out
pop
and
jp
test
ss
jmp
mov
pop
dec
rclb
int
subb
xor
sahf
xor
push
aam
outsb
dec
or
sbb
add
sub
in
in
jmp
inc
clc
jmp
in
sahf
mov
das
sub
inc
insb
sub
inc
addr16
pop
and
pop
aad
jle
mov
test
sbb
pop
mov
sub
push
inc
lods
cmpsb
pop
mov
cmpsl
insb
cmp
add
mov
jo
stc
or
fadd
push
jbe
jns
out
ja
aad
js
mov
loop
pushf
dec
or
scas
lods
jb
imul
xlat
mov
sbb
xchg
mov
scas
aas
iret
xchg
nop
inc
out
lock
jg
xor
sti
fidivrs
out
jbe
push
inc
imul
jae
cs
or
hlt
xchg
lds
push
jmp
lret
xchg
inc
fnstenv
jg
cmpsl
cwtl
mov
aas
push
xchg
sti
mov
mov
jno
xor
mov
int
push
xor
ljmp
or
push
mov
fadd
pushf
mov
mov
cmp
push
fimuls
iret
xchg
aad
jg
xchg
rclb
rcrb
lahf
and
cli
ror
dec
lods
repz
int3
jnp
out
cli
push
fbstp
dec
mov
mov
add
cmpsl
aaa
inc
fildll
mov
int3
jns
inc
push
add
inc
dec
push
in
jb
sub
sbb
jl
pushf
stc
in
dec
dec
mov
ds
cmp
mov
aas
in
push
aas
inc
rcl
icebp
ret
ss
loope
movb
jle
sub
ret
rorl
xchg
testl
sub
fidivrs
or
aam
mov
outsb
jg
cmp
mov
mov
inc
push
fisttpll
notb
cmc
loopne
xor
sub
rol
leave
push
cmp
adcl
or
out
add
ja
lcall
dec
aad
cmp
mov
mov
sub
mov
call
pop
jb
mov
ret
setb
or
push
mov
lahf
popf
mov
pop
outsl
pop
fimuls
rcrb
add
push
iret
sti
loope
sti
jge
mov
enter
popf
int3
pop
or
lods
movsb
adc
dec
fwait
rcll
enter
cmp
das
jae
fadds
loopne
fcoml
adc
pop
mov
pusha
scas
sti
ret
mov
mov
repnz
dec
sub
incl
nop
adc
push
insb
hlt
push
pop
and
jle
xchg
dec
mov
adc
repnz
jnp
mov
inc
sbb
rcrb
and
sbb
daa
fdivrl
pop
fs
xchg
cli
loopne
xor
mov
jbe
jnp
test
cmp
pop
add
in
test
xor
stos
fdivr
push
jne
dec
sub
mov
sub
lcall
es
xlat
lret
stc
cltd
pop
ficomps
fldcw
mov
dec
cltd
jne
loop
arpl
loope
mov
hlt
mov
lods
sbb
out
dec
test
addl
cs
pusha
and
xchg
sbb
popf
in
push
dec
xchg
jmp
jb
aam
cs
pushf
adc
sbb
cmp
and
add
loope
pop
mov
int
pop
out
loope
sahf
out
mov
loop
loopne
fisttpl
lds
ret
jp
sar
stc
jno
in
inc
in
mov
cmc
repnz
inc
ret
pop
or
out
sub
shr
aam
js
jns
ret
sub
adc
icebp
cmp
stos
mov
or
test
sbb
enter
xchg
sbbl
insb
xor
xlat
out
sbb
or
fisttpll
jne
das
cltd
dec
xor
push
aas
jmp
add
lds
in
bswap
jno
xchg
mov
sub
leave
out
jne
dec
adc
add
aaa
dec
orb
lock
and
mov
xor
ret
inc
ljmp
xchg
clc
aad
jne
jmp
xor
in
popf
cmpsl
cmc
sbb
dec
popf
pop
btr
sub
push
push
out
mov
test
hlt
sarl
ljmp
xchg
push
push
xor
mov
aam
stos
out
clc
push
xchg
bound
out
push
imul
in
lahf
int
in
inc
dec
sub
adc
xchg
push
push
jg
aas
test
jecxz
faddl
push
cwtl
rcrb
xlat
popf
jl
sbb
or
mov
cmpl
fcomps
pop
aam
shll
mov
xor
jb
pop
or
xchg
mov
push
or
inc
mov
or
mov
call
loope
jg
mov
xor
xlat
push
lahf
add
adc
jl
pusha
dec
cmp
dec
cmp
mov
jb
push
jp
out
aad
fcmovnbe
mov
dec
in
mov
je
inc
mov
outsb
enter
sti
out
test
xchg
cltd
ss
insl
and
cmp
inc
fwait
std
add
clc
xchg
mov
xchg
notb
lea
sbb
daa
lods
in
movsl
stos
je
jecxz
pop
xor
and
jo
jmp
dec
scas
xchg
movsb
xchg
pop
lcall
adc
pop
les
nop
ja
jecxz
mov
aad
aaa
sbb
xchg
in
icebp
aaa
mov
and
push
push
cmpb
jae
dec
cmpsl
pop
lret
setnp
jmp
sub
and
cmp
aam
loopne
mov
mov
add
dec
mov
dec
push
jbe
adc
push
and
xchg
xchg
mov
xchg
lods
int3
pusha
push
mov
fildl
fldl
mov
cmp
fwait
js
mov
rclb
xor
xlat
and
or
fcoml
cmp
lods
jns
xor
mov
mov
jno
cli
add
sub
pop
rep
sub
push
sub
push
mov
push
mov
dec
imul
ror
jnp
outsl
lods
lret
setns
jp
mov
mov
mov
aaa
fxch
cmp
repnz
aaa
mov
arpl
int
sub
pop
rcr
ss
aad
int3
in
aad
mov
mov
outsb
push
mov
lahf
and
pop
sub
pop
je
xchg
push
aam
out
mov
mov
adc
xor
push
cli
mov
imul
ss
sbb
mov
loope
daa
pusha
jbe
mov
dec
imull
adc
nop
mov
pop
fsubrs
enter
ret
or
add
jp
or
lret
inc
std
push
icebp
leave
add
or
out
mov
loop
aad
imul
add
fsubp
icebp
leave
fisttpll
in
adc
cmp
ss
dec
rolb
and
sub
pop
adc
xchg
push
lret
jno
js
xchg
cltd
cltd
int
lds
or
test
test
leave
sbb
push
sbb
jns
xor
jno
dec
call
sub
out
mov
test
inc
cmp
adc
lahf
mov
lret
adc
pop
pop
cld
cmc
bound
push
jbe
fsub
mov
stos
fadds
sbb
ret
test
jle
inc
lret
cmp
addr16
ja
sbb
mov
jmp
pop
scas
jge
incb
flds
adc
popa
sbb
lcall
sbb
fcoml
insb
std
pop
xchg
jmp
fldl
jnp
xchg
outsb
jp
cld
leave
repz
lret
clc
inc
cmp
dec
mov
xorb
push
jb
inc
xchg
es
inc
jns
cmp
leave
or
cmp
sub
out
xor
dec
enter
or
jle
movsb
or
lret
and
xchg
push
sub
aas
push
or
jae
mov
xchg
aas
and
mov
je
fcmove
ja
mov
mov
xchg
adc
dec
notl
jl
icebp
dec
pop
shl
gs
jecxz
lcall
mov
ds
loopne
add
subl
xchg
subb
sahf
or
ljmp
addb
pop
push
fildll
scas
jne
mov
jl
popa
pop
mov
push
cmp
sahf
fadd
sbb
mov
das
loopne
xchg
cli
xchg
jns
cltd
mov
and
lods
pop
mov
adc
xor
xchg
mov
jno
test
and
shrl
push
lahf
test
sbb
daa
push
subb
xlat
and
lret
and
leave
and
adc
lods
or
push
mov
add
dec
loop
clc
pop
scas
dec
fisubs
popf
aas
inc
je
push
stos
mov
outsb
sub
sub
mov
adcl
inc
push
or
xlat
nop
mov
push
lds
mov
ret
mov
cmp
ja
addr16
push
mov
jnp
cmp
sub
mov
or
xor
sbb
mov
insb
stos
fsubl
int3
lret
mov
cltd
sub
mov
jp
mov
scas
std
mov
jg
jnp
push
bound
dec
es
inc
sub
aas
sbb
push
std
or
test
mov
shlb
popf
mov
popa
sti
mov
cmc
inc
cli
push
xchg
into
xor
jnp
cmc
dec
pop
mov
js
push
test
push
push
icebp
movsb
mull
mov
jne
icebp
xor
push
scas
loop
notb
push
push
sub
inc
add
andl
loope
jmp
and
xor
cltd
hlt
popa
jl
push
jg
push
push
out
xor
dec
mov
and
push
pop
and
mov
jle
pop
mov
adc
mov
cld
pop
aad
xchg
sahf
pop
inc
dec
mov
or
mov
lods
xor
movsl
mov
add
mov
push
rorl
ds
outsl
scas
fwait
sbb
scas
lods
mov
xor
ret
rcrb
add
fs
test
nop
cmpb
push
in
out
jmp
jnp
xor
add
insl
mov
push
mov
test
or
test
mov
inc
add
movsl
xchg
xor
fsubs
sub
cmp
sar
cmc
orl
addb
xchg
push
dec
xchg
icebp
movsb
cmpb
mov
sub
mov
adcb
jbe
orb
stos
jno
incb
and
pop
jb
lret
gs
xchg
lcall
hlt
incl
sub
subb
imul
int3
sbb
clc
rclb
cmpsb
jae
or
dec
or
ret
orl
push
and
movsb
lret
push
fmull
cltd
scas
insl
mov
jl
xchg
xchg
dec
xchg
mov
add
xor
adc
rcll
or
arpl
ret
mov
test
inc
cmc
mov
add
outsb
inc
jno
mov
mov
into
push
shll
xorb
cmc
pshufw
sbb
jle
aaa
cmp
ret
in
dec
sbb
leave
jae
jno
into
adc
ss
pop
lret
jmp
dec
cwtl
xlat
rolb
adc
pusha
mov
sub
fsts
xor
cltd
es
mov
sub
das
into
push
xor
or
out
mov
imulb
lods
or
fcoml
lcall
dec
or
inc
fwait
push
mov
cli
adc
sub
push
aas
lods
pop
imul
mov
fiaddl
mov
inc
sub
xchg
mov
fists
dec
mov
dec
cmp
test
repnz
dec
sub
movsb
sbb
inc
xor
ret
iret
push
and
mov
pop
loope
xor
jge
sub
test
in
lret
cltd
out
shrb
and
int3
mov
push
or
add
mov
jnp
xchg
outsb
out
cmpb
and
add
xchg
mov
imul
dec
xchg
js
sub
mov
push
rolb
aam
data16
mov
pcmpgtw
mov
cmpsl
mov
cwtl
imul
je
pop
inc
mov
cwtl
insb
shrb
add
push
xor
adc
subl
dec
mov
pop
jmp
jmp
orl
push
cwtl
iret
aas
inc
add
mov
adcb
ds
in
cmp
imul
mov
out
cs
cmp
cmp
orb
cli
lds
int
movsb
repz
ljmp
arpl
pop
dec
cli
mov
adc
xor
pop
xor
xchg
jb
ret
xorl
rcll
dec
vpcmov
push
das
es
pop
aad
out
ficoml
inc
push
sahf
push
cmp
clc
cltd
cmpsw
fisttpl
or
ss
sarb
test
fdiv
pushf
fbstp
jp
mov
les
pop
aas
nop
js
iret
xchg
jbe
adc
lea
sbb
enter
std
fistpl
pop
popa
into
pushf
push
fidivs
das
add
add
sbb
daa
sbb
int3
in
sub
mov
icebp
mov
jecxz
xchg
arpl
test
subb
and
mov
fimuls
cmp
sub
js
faddl
lea
jne
adc
pop
mov
sub
aad
pop
xor
dec
push
sti
shrl
sbb
adc
pop
int3
inc
ret
test
add
in
and
cmc
in
cmp
in
nop
cmp
jle
mov
or
fstl
ja
es
cs
outsl
dec
lahf
je
shll
mov
push
int
xchg
jne
mov
pop
jecxz
jns
inc
push
testb
xchg
cld
xchg
addr16
push
sub
lods
push
sbb
imul
adc
xor
lock
and
test
stos
add
jo
jmp
hlt
mov
into
mov
inc
loop
push
add
xor
jg
lret
jmp
dec
mov
in
cmp
pop
mov
xor
jo
and
adc
xchg
leave
push
pop
pop
outsb
in
icebp
iret
subb
sbb
xor
in
and
in
fwait
push
dec
and
leave
jmp
cmc
test
test
stc
ret
or
mov
mov
pop
ss
shll
push
adc
cmp
iret
mov
fsubrl
dec
or
xor
sub
repz
js
jno
adc
jmp
les
mov
pop
add
inc
stc
inc
or
js
ss
mov
in
mov
lcall
movsl
test
mov
push
mov
les
and
xor
add
lcall
jle
test
push
movsl
sbb
push
xchg
sbb
xchg
lahf
push
cmp
push
and
sub
outsl
scas
mov
jle
push
add
adc
fsubp
cwtl
xchg
shrl
aad
mov
icebp
mov
out
sbb
std
mov
pusha
sub
repz
outsl
adc
pop
ja
daa
add
outsl
pop
sub
cmc
out
in
repnz
xchg
les
mov
insl
mov
xlat
cmp
in
shrb
rolb
inc
adc
pusha
sahf
fwait
roll
mov
ret
stos
adc
push
jp
sbb
popf
mov
and
sub
xchg
or
insl
outsb
repz
cld
inc
or
vpaddusw
pusha
jl
shlb
mov
in
mov
cmp
mov
roll
in
data16
int3
jns
js
adc
or
lret
and
xor
xor
fwait
push
push
clc
daa
mov
or
push
imul
inc
dec
dec
mov
arpl
dec
out
ds
fadds
outsl
pop
outsb
test
aaa
and
and
xor
mov
aam
mov
jae
lock
mov
xor
xor
dec
add
push
jg
mov
shrb
mov
stos
mov
lea
jbe
rcrl
dec
mov
or
out
mov
fcoms
and
jne
ficomps
insl
add
loope
imul
or
ret
jns
add
insb
shl
cmp
fadd
std
call
push
rclb
out
aaa
daa
inc
bound
gs
lcall
shrl
or
out
jge
push
mov
fnstsw
mov
push
lcall
mov
cmp
cmp
mov
sarl
popf
and
sub
adc
or
xor
adc
xor
into
mov
cld
fiadds
mov
dec
and
lea
jb
cld
adc
jns
xchg
or
dec
sub
fdivrl
xor
jbe
data16
int
or
pop
rolb
jg
pop
and
into
jl
cmp
fbstp
idivb
mov
shrb
sarl
jno
sub
sti
jae
sti
in
es
or
sbb
movsl
hlt
fnstenv
jg
out
or
jle
nop
cs
xor
cmpsl
pop
fidivrl
and
dec
clc
outsl
mov
pop
jne
jns
es
enter
data16
fsubrs
pop
and
jecxz
shrl
test
test
outsl
call
cmp
push
cmp
gs
aas
jo
popa
movsb
dec
in
imulb
cld
lahf
in
loopne
aaa
pop
adc
rorb
insl
mull
insb
add
fs
flds
loopne
imul
lds
cld
fisubl
jle
fisubl
and
inc
movsl
out
mov
outsl
sbb
add
jae
inc
in
pop
sbb
mov
mov
adc
jae
push
mov
mov
sarl
cmp
mov
xchg
aas
or
dec
test
inc
movsb
clc
sahf
cmove
loop
stos
jns
sub
pop
sbb
call
and
pushf
data16
add
jne
popa
popf
sub
testb
mov
stos
enter
and
mov
adc
push
xchg
or
lds
out
sub
scas
push
insl
cmp
add
int3
jp
mov
jno
lds
int
mov
iret
push
stc
incb
das
popa
shlb
jae
jge
inc
jp
jne
mov
lds
xor
cmc
sub
lret
mov
xor
lea
clc
daa
pop
and
mov
shll
push
aaa
fnsetpm(287
fwait
sub
inc
mov
jae
jg
and
inc
loopne
add
jg
fcompl
mov
pop
es
out
loop
out
xchg
ret
mov
add
xor
pop
ret
push
add
lret
mov
push
stos
sahf
repnz
loop
sub
mov
sbb
imul
xor
mov
xor
out
fsts
and
fiadds
out
test
cmp
push
scas
push
jg
or
mov
inc
push
and
cmpsl
xchg
into
ret
xchg
cmc
cmp
or
fcomip
xchg
mov
imul
out
lods
jp
pop
jb
jnp
ds
jbe
fld1
or
push
dec
dec
pop
mov
lret
sbb
pop
xor
mov
dec
xchg
jnp
jnp
pop
push
enter
mov
jne
or
or
or
xchg
aas
jne
call
xchg
inc
daa
xor
out
mov
addr16
sub
cli
in
mov
sbb
jp
mov
and
or
cld
pop
stc
loope
xchg
adc
inc
xor
jbe
sub
pusha
mov
movsl
das
call
and
aam
movsb
adc
sahf
or
push
add
into
push
mov
out
daa
and
das
xor
jno
mov
ljmp
jge
lock
xchg
mov
in
add
int3
xchg
test
inc
es
inc
xor
sahf
xchg
push
aas
push
push
sahf
jb
pop
mov
adc
outsl
outsb
je
mov
xor
jmp
or
imul
sub
aad
andb
lret
add
sbb
cmp
mov
repz
in
aas
inc
nop
push
outsb
out
lcall
lods
popf
add
rorl
movb
adc
pop
sbb
xor
xchg
roll
dec
cmp
adc
mov
and
shll
int
mov
cmp
push
sbb
movb
clc
out
inc
add
lcall
jmp
insl
ret
push
shr
or
aaa
pusha
mov
stos
lahf
jae
cltd
stos
xor
int3
push
add
int3
mov
adc
cld
popf
xor
adc
bound
mov
sub
push
dec
cli
into
push
or
stos
popf
or
cmp
xchg
adc
pop
sub
mov
shr
addr16
loop
inc
int3
call
out
mov
sub
test
daa
lock
push
sbb
mov
pop
mov
jae
mov
adc
bound
sub
sbb
imul
sti
xor
testb
shrl
out
push
push
or
fcompl
repz
jle,pn
xor
aas
sahf
in
in
and
push
in
mull
inc
add
mov
aas
add
jmp
cmp
fldt
pop
pcmpeqb
filds
jo
or
loopne
fadds
scas
xchg
push
sub
jo
sub
mov
sbb
inc
lock
sarb
movsl
adc
bound
arpl
push
rcll
or
outsb
or
pop
shrl
jb
mov
cmp
xor
mov
xor
mov
bnd
xchg
aam
arpl
inc
sub
outsl
inc
and
gs
call
test
inc
incb
dec
mov
mov
lock
or
pop
adc
imul
push
dec
roll
test
lret
je
dec
daa
mov
sub
rcl
out
inc
aad
dec
mov
inc
and
pop
cwtl
jb
in
sti
fcomip
ss
pop
pop
xorb
cmpsb
sti
add
sbb
push
or
cld
lods
loope
inc
cmp
mov
mov
mov
xor
xchg
xor
sub
das
mov
pop
xchg
sbb
sub
adc
shl
add
push
push
inc
sub
repz
aad
out
lea
fwait
in
addr16
add
repnz
mov
pop
scas
mov
stos
dec
sarb
or
mov
call
out
out
inc
push
sub
sub
insb
push
ret
push
aas
out
iret
cltd
out
hlt
mov
les
mov
mov
out
ss
movsb
cmp
inc
popa
fcmove
push
bound
test
pop
pop
mov
dec
inc
xchg
xchg
mov
push
adc
hlt
mov
cltd
out
and
cmp
in
mov
loope
sbb
mov
lcall
and
outsl
ret
mov
mov
inc
mov
aas
adc
negl
sub
sub
mov
push
daa
aam
lret
js
inc
insl
xchg
sub
out
mov
mov
pushf
xor
xchg
js
and
pop
jmp
and
fisttpl
cmp
neg
dec
cld
mov
pop
fildl
call
jae
and
rclb
sub
movsb
aas
mov
xchg
loope
mov
pop
mov
fisttps
adc
pop
fmull
lret
lods
inc
pop
jns
jecxz
cmc
jge
cltd
out
push
int3
or
fisttps
adc
and
push
adc
xor
sahf
jp
pop
fldl
adc
enter
push
cmp
or
hlt
jp
mov
push
cmp
insl
mov
pop
pusha
push
xchg
xchg
inc
dec
jo
xchg
xor
xor
push
push
or
sarb
sub
mov
inc
xor
pop
test
lret
mov
sub
imul
inc
aaa
icebp
adc
and
clc
xor
call
inc
and
push
jo
dec
dec
push
scas
pop
int3
iret
add
imulb
cmpsl
ljmp
xchg
jb
xor
jg
addr16
dec
popa
push
subb
ljmp
mov
in
shlb
loope
out
shrb
or
push
addr16
int3
mov
pop
push
aas
xchg
hlt
cmc
clc
mov
repz
dec
in
pop
ret
xlat
and
cmpsl
stos
xor
into
xor
ljmp
cmp
mov
fisttps
adc
mov
popf
mov
or
push
mov
push
mov
sbb
push
hlt
ds
sbb
and
pop
test
mov
sbbl
repz
dec
pmaxub
in
pop
dec
call
xchg
pop
sub
xchg
jle
mov
pusha
ljmp
xchg
ds
push
mov
test
popa
cltd
xchg
in
pop
sub
aaa
sub
clc
and
mov
out
push
jb
sub
pop
push
idivl
mov
and
ljmp
xor
cmp
dec
inc
cmp
js
aad
add
decl
fbstp
lds
ss
xchg
mov
fs
mov
push
mov
xor
mov
test
jmp
inc
pop
inc
cmpsb
mov
fs
xchg
push
jge
xor
ret
shll
div
dec
or
push
adc
xor
sbb
loop
in
je
xor
dec
sbb
sbb
mov
mov
mov
lret
pop
inc
xchg
lret
push
mov
pop
jo
mov
xchg
xchg
rcr
out
push
dec
sbb
mov
outsl
mov
inc
rolb
add
icebp
cmp
jno
dec
mov
and
push
idivb
test
or
mov
cmp
pop
mov
aas
sub
stos
test
or
xchg
add
jp
pop
sti
cmp
ret
xor
cvtps2pi
shlb
xchg
or
and
jge
lea
aam
hlt
or
aam
inc
pusha
adc
fildll
in
les
mov
adc
iret
xchg
jbe
jno
jb
bnd
pop
testl
lcall
jo
or
cmp
cmp
or
pushf
cmp
push
push
add
fs
xchg
push
dec
sbb
mov
jmp
seta
in
jno
jmp
cmc
addr16
test
mov
cmp
adc
inc
mov
sbb
pop
clc
pop
sbb
leave
pop
sub
js
xchg
mov
jmp
inc
dec
mov
mov
xchg
nop
sbb
xchg
pop
sub
rcrb
add
xor
xchg
xlat
mov
data16
daa
lock
push
and
lahf
aaa
push
mov
rorl
fmull
cmp
pop
shrb
adc
and
repz
js
test
rorl
and
xchg
jge
iret
dec
mov
gs
push
test
inc
mov
mov
in
add
cwtl
sbb
jecxz
repnz
xor
scas
cmp
jbe
aas
sbb
push
add
je
add
cmp
decb
pop
movsl
inc
outsl
test
or
pop
mov
fidivl
sbb
fs
mov
insl
cmpsl
outsb
push
add
inc
imul
push
add
cmp
mov
shll
push
aad
adc
mov
sub
mov
fld
fcomps
xchg
inc
das
int3
sub
fiadds
mov
sub
sbb
mov
dec
lahf
adc
outsl
fnstsw
lret
outsb
cmpsl
mov
into
xchg
mov
int3
mov
and
enter
add
aam
pop
inc
lret
fnstenv
test
in
enter
jno
adc
xchg
popf
sub
lock
jmp
xor
mov
fs
scas
and
fdivrs
shlb
es
or
and
mov
dec
mov
pop
mov
inc
mov
xchg
icebp
xchg
adc
sbb
or
arpl
ret
mov
jno
sti
fldl
inc
das
bound
les
sub
aad
filds
cmpsb
mov
and
dec
xor
sbb
out
xor
into
loope
jae
dec
pop
mov
lcall
ja
dec
fidivrl
rcrb
mov
adc
enter
inc
gs
cmp
sahf
push
sub
lret
mov
jp
push
lock
sbb
pusha
cmp
fimull
mov
and
xor
fmuls
jge
sub
push
scas
sub
adc
lods
movsl
dec
mov
cs
out
test
in
jl,pn
xchg
adc
pop
jp
push
lods
insb
movsb
js
pop
imul
outsb
cmc
pop
sbb
filds
pop
mov
jl
stos
repz
out
mov
adcl
pushf
mov
xor
sub
out
sub
pop
mov
mov
fcmovu
pusha
push
push
gs
out
pop
es
xchg
jnp
ljmp
inc
aas
pop
fimull
lret
mov
xor
lods
mov
outsl
into
in
jecxz
mov
aaa
xchg
add
sub
aas
repnz
xlat
dec
pushf
insl
mov
or
scas
push
mov
push
lret
or
repz
cmp
ret
mov
std
cwtl
notb
clc
cmc
in
ret
push
movsb
mov
xchg
lcall
mov
cmp
mov
fisubrs
mov
jns
inc
scas
inc
lea
xchg
xorb
lcall
cmp
enter
cmp
mov
mov
push
mov
inc
int3
out
push
sub
xchg
cld
decb
fisttpl
bound
pusha
add
movsb
mov
push
push
or
jmp
popa
push
adc
idiv
push
sub
jl
pop
xchg
adc
icebp
sbb
inc
lods
mov
dec
inc
bound
enter
cli
sub
mov
jns
test
int
or
mov
push
aam
add
add
ds
xchg
enter
test
sbb
xor
out
mov
add
pop
cltd
jecxz
push
cmc
and
inc
push
repnz
sub
ss
cmp
mov
lds
shlb
jle
filds
cmp
push
dec
add
pop
or
jmp
cmp
inc
cmp
pop
and
mov
mov
repz
xor
divl
fnstenv
pop
loop
sbb
push
xor
mov
aad
mov
punpcklbw
bound
inc
and
pop
mov
pop
mov
ja
dec
repnz
dec
rorl
orb
pop
jne
std
jb
mov
xchg
sub
repnz
adc
fcomi
movsb
xor
out
test
test
xor
les
mov
jmp
movsb
and
mov
xchg
or
or
or
add
add
cli
jns
and
or
je
cmpsb
stos
adc
jbe
mov
nop
mov
rcrl
sbb
adcl
gs
pop
jb
gs
test
hlt
add
inc
cli
enter
pop
mov
rolb
aam
dec
add
cmp
jg
aaa
dec
rorl
cmp
or
pop
lods
or
or
test
mov
fwait
jecxz
or
aam
push
int3
mov
inc
loopne
dec
and
push
sbb
movsb
inc
pop
add
sbb
sti
sahf
pop
mov
cmpsb
mov
inc
mov
xor
push
movsb
push
jo
cmp
fisttps
cmc
pop
mov
ljmp
adc
mov
or
cmp
or
mov
cmp
enter
cwtl
xchg
push
dec
lock
mov
xor
cmpsb
sbb
cwtl
es
aaa
dec
fnstenv
push
mov
testb
ss
add
into
cmpsb
jecxz
push
push
mov
add
push
iret
inc
je
test
stos
lods
xchg
cmp
pushf
repz
idiv
stos
scas
pushf
xchg
leave
in
cmp
adc
ret
repnz
cmpsb
jecxz
in
repz
pusha
movsb
repz
adc
int
jae
or
rcll
fwait
add
popf
hlt
xchg
mov
dec
jge
mov
imul
push
push
cwtl
cmpsl
outsb
jge
dec
insl
icebp
hlt
lock
inc
out
mov
cli
gs
sub
mov
ds
dec
xchg
repnz
and
loopne
scas
cmpsb
int3
adc
gs
jl
loopne
and
vpmaddwd
and
mull
push
in
push
cmpsl
shll
ror
mov
mov
xor
cmp
pop
mov
jle
shll
bound
lcall
cmpsl
inc
cmp
cmpsl
sti
stos
sbb
icebp
mov
or
push
dec
add
jl
sub
mov
aam
pop
dec
sbb
gs
test
mov
cmp
divb
adc
pop
push
dec
jg
sub
ljmp
iret
pop
sbb
out
imulb
lcall
or
loopne
popf
gs
cmp
stos
cs
mov
adc
loop
dec
inc
call
movsb
js
das
mov
stos
lret
clc
insl
roll
mov
cld
loope
xchg
jo
cmp
pop
ljmpw
mov
in
rolb
aad
out
nopl
mov
cmp
push
lods
aad
cmp
bound
mov
pop
test
sbb
inc
mov
stc
or
stos
in
jno
pop
nop
sbb
cmp
jae
adc
cmc
pop
cmpsb
call
sbbl
in
xor
cs
sub
push
lahf
stc
out
data16
or
outsl
mov
inc
scas
test
or
and
add
jl
sub
xchg
or
mov
outsb
xchg
pop
ret
ds
jle
outsb
mov
mov
lock
jecxz
cmpsb
daa
sti
pop
xchg
jb
ret
sub
outsb
jne
mov
mov
push
mov
xchg
cs
jb
add
xchg
mov
gs
cs
push
cmpsb
fwait
dec
mov
add
inc
std
pop
call
lret
mov
sbb
daa
add
out
jnp
mov
mov
lcall
lahf
sub
mov
lret
sbb
add
lds
mov
or
psubsw
das
fldcw
icebp
stos
out
xor
jo
fnstsw
pusha
sbb
out
outsl
jmp
sti
daa
cltd
add
ret
xlat
gs
dec
aam
or
je
lahf
dec
mov
sbb
insb
clc
push
sarb
in
push
ljmp
add
jno
inc
scas
xchg
fst
data16
lds
das
mov
jmp
movsl
inc
push
cmp
loopne
jbe
and
jno
movsl
aas
lahf
repnz
jae
out
into
cli
dec
notb
sarl
out
mulb
jmp
std
xor
fsubrs
je
lahf
fidivl
ret
adc
or
and
sbb
jb
dec
push
mov
jl
in
jno
cmp
int
or
js
mov
jne
sbb
fwait
dec
or
xchg
aaa
cmc
xchg
sbb
out
push
addl
and
xchg
cmp
repnz
inc
cmc
in
cmp
std
aam
testb
hlt
or
aad
popa
xor
push
stos
xchg
shl
outsb
or
ja
out
inc
cmp
mov
mov
push
dec
add
mov
and
cmp
out
push
outsl
roll
sbb
dec
inc
ficoms
rolb
adc
jae
lcall
lds
loope
out
sbb
fs
loop
lea
mov
xchg
mov
pop
inc
popa
pop
ret
mov
jne
fdivs
pop
or
push
or
mov
ds
daa
xchg
decl
jbe
test
mov
mov
scas
pop
or
xchg
js
inc
stos
dec
and
add
jg
inc
arpl
in
shll
xchg
cli
xor
jmp
out
loopne
sub
sbb
ror
ret
ljmp
pushf
push
sti
and
andb
push
mov
mov
cli
dec
fnstenv
aam
in
inc
dec
jmp
jno
jns
xchg
cltd
xor
dec
jns
pop
ss
mov
aaa
push
mov
mov
or
xor
in
dec
inc
pusha
mov
scas
fs
and
inc
sub
adc
into
popa
xchg
jmp
bound
shlb
enter
out
daa
rorl
jmp
stc
or
test
ror
sar
idivl
icebp
nop
mov
adcb
dec
std
test
cmp
push
cmp
add
lea
and
mov
sub
jg
sti
push
mov
adc
popa
xchg
lds
xchg
sub
dec
push
les
imul
fsubrl
es
jecxz
sar
xor
push
mov
inc
int
decl
sub
push
pusha
mov
mov
ljmp
out
adc
fs
movsl
jg
test
adc
sahf
in
or
push
out
jnp
pop
mov
jl
test
ficoms
jmp
gs
test
scas
repz
fwait
int3
mov
xchg
add
and
test
xor
ret
and
or
inc
dec
adc
jl
push
lcall
add
out
aad
int
shrl
dec
lret
cmpsb
sub
add
aas
dec
mov
push
mov
mov
popa
nop
ja
clc
jl
adc
push
shll
mov
sub
mov
daa
mov
or
mov
adc
out
cmp
and
arpl
ret
sbb
mov
pop
jnp
cmpsb
add
jmp
jbe
sbb
jne
xchg
sub
das
add
pop
push
lahf
add
jns
xor
mov
sbbb
mov
pushf
stos
data16
or
scas
sarl
pop
ds
mov
ss
aas
inc
movsb
mov
gs
push
aad
sbb
out
cmpsb
pop
sbb
lahf
xchg
mov
and
insl
popa
jg
stos
push
lods
pop
scas
sub
pop
sub
test
movsl
or
sti
mov
or
or
insb
push
xchg
jecxz
inc
or
inc
mov
out
jp
xor
cmp
popa
xor
ja
stc
or
sar
imul
ret
cli
sbb
lahf
xchg
pop
xorl
cmp
call
sub
xor
pop
fildl
xchg
mov
or
inc
icebp
shlb
jo
loope
jo
daa
xor
cmpsb
fwait
loope
enter
push
pusha
inc
addr16
sbb
mov
stos
mov
jns
sti
inc
out
test
or
stos
xor
subl
cld
mov
je
jae
repz
add
cmp
lds
adc
inc
bound
clc
pop
rcl
cs
mov
cltd
jne
and
push
cmp
test
cld
lcall
out
jmp
push
insb
enter
lods
pusha
jnp
decl
cmp
fstpl
lret
pop
cld
sub
in
add
in
xchg
mov
ret
loop
inc
scas
cmpsl
aaa
sub
xchg
or
sub
pop
scas
fcomi
test
mov
sahf
mov
mov
stos
mov
sbb
std
jo
leave
sbb
mov
mov
xchg
imul
mov
sbb
ret
lahf
cmp
ret
aas
movsl
xchg
outsl
out
inc
das
jo
dec
leave
iret
jnp
or
fs
xchg
pop
mov
adc
dec
cmpsb
adc
push
jp
iret
sbb
test
and
mov
push
and
jecxz
mov
sbb
and
loopne
push
mov
sbb
in
incb
testb
imul
fst
xchg
xor
fsub
pop
xor
xchg
out
enter
stos
inc
faddp
xchg
icebp
movsb
xor
jbe
sub
lods
js
xor
fldcw
lcall
mov
test
jp
jp
adc
fdivrp
aas
insl
imulb
icebp
insb
add
data16
jbe
test
fcomip
nop
lock
mov
outsb
pop
lret
aad
push
sbb
or
mov
fidivrs
leave
iret
add
pushf
fiaddl
je
mov
add
in
push
inc
jbe
add
mov
cmp
sti
mov
cmp
jno
hlt
sti
push
divl
lods
clc
pop
push
int
cmp
or
in
aad
gs
mov
mov
mov
into
leave
fistpl
addb
rorb
outsb
test
in
add
xchg
cmc
lahf
sti
int
push
lahf
enter
sub
xchg
pop
push
call
mov
clc
ss
gs
xchg
mov
mov
sti
cltd
jecxz
cld
push
jle
loopne
add
bnd
in
push
push
push
cmp
sti
ljmp
xor
cltd
adc
or
sub
push
push
cltd
xor
cmp
sub
in
cmp
push
pop
imul
sbbl
pop
enter
pop
dec
xchg
or
inc
mov
scas
push
or
sub
or
sqrtps
jne
sub
lods
icebp
or
js
adcb
mov
stos
dec
cmp
fidivl
out
add
insl
mov
aaa
or
stos
lcall
popa
cmp
adc
adc
push
dec
jp
test
mov
stos
adc
pop
mov
mov
sbb
ljmp
outsl
repz
addr16
js
idivb
jns
das
or
fcompl
inc
push
insl
mov
lahf
mov
call
cld
or
xchg
push
push
dec
inc
jns
rcrb
mov
pop
ror
pop
enter
inc
mov
cld
xorb
lret
dec
fs
outsl
mov
pop
imul
pop
add
int
cmp
lret
jle
sub
into
mov
and
jmp
pop
sbb
fcmovnu
cwtl
pushf
lret
mov
xor
push
sub
adc
roll
jl
fidivl
sub
xchg
sahf
cld
enter
xor
wbinvd
add
xchg
dec
leave
orl
cmp
scas
adc
mov
dec
fistpl
jmp
call
sub
ljmp
pop
fs
sti
andl
push
pushl
sti
push
mov
sub
mov
jmp
push
insb
jle
or
mov
push
inc
or
or
and
inc
bound
or
push
push
mov
outsb
fwait
add
mov
push
push
or
clc
loop
sbb
adc
insl
mov
sbb
or
cmp
arpl
inc
xor
sbb
shrl
in
iret
lock
call
xor
mov
add
aam
xor
xchg
lret
ljmp
movsl
pushf
jl
cmp
mov
fists
clc
lods
sbb
push
pop
dec
adc
loope
xchg
adc
mov
data16
cwtl
lods
mov
sbb
push
push
das
and
xor
inc
xchg
loopne
xchg
xchg
aad
push
sub
ljmp
jp
pop
test
ss
push
test
jne
jnp
adc
xchg
pusha
cmc
mov
mov
and
in
pop
stos
addr16
push
dec
sbb
pop
cwtl
xchg
aas
or
jp
dec
xlat
sar
pop
fmull
jmp
arpl
and
adc
inc
mov
xchg
and
pop
sbb
rorb
xchg
push
jns
ret
or
aam
pushf
std
jo
ljmp
and
mov
stos
cmp
enter
add
mov
out
out
bound
jne
xchg
stc
jg
outsl
imul
rol
shrl
stc
xchg
push
mov
xor
mov
xor
jo
push
fbld
jo
rolb
iret
jge
sub
dec
jnp
mov
cs
call
cmpl
arpl
xchg
xor
bound
ljmp
jae
cmp
rcl
mov
mov
or
pop
out
mov
out
sbb
jp
pop
cli
ficompl
adc
daa
js
push
es
test
fstpt
ret
hlt
dec
leave
sahf
xlat
popa
mov
inc
dec
dec
mov
cli
xchg
cltd
pop
testb
or
mov
mov
push
rcl
mov
rcr
outsb
pop
cli
stos
ss
out
movsl
rorb
mov
iret
imul
bound
shll
das
subw
push
and
insb
mov
std
sar
cmpsb
sub
jge
xor
push
sahf
clc
scas
jecxz
fnstcw
ret
pop
or
mov
jmp
pop
pop
mov
insb
nop
xchg
dec
xor
dec
mov
scas
or
out
imul
fsubr
ljmp
xor
cmpsb
add
stc
xchg
gs
cmc
jecxz
mov
mov
push
orl
jnp
inc
pop
dec
push
push
mov
sbb
pusha
outsb
inc
dec
test
add
je
dec
push
jne
call
imul
push
out
movsl
lds
shll
pop
fstps
das
mov
std
sub
mov
xchg
lods
add
inc
fisttpl
mov
dec
jbe
arpl
dec
pop
sub
sub
repz
insl
into
je
aas
movb
pusha
sbb
push
cmp
sub
fnstcw
sub
mov
hlt
fwait
in
lret
push
push
idivl
arpl
icebp
xchg
out
xchg
sub
mov
mov
les
sub
push
ret
jnp
shll
xchg
or
ja
xor
lahf
mov
ficompl
xor
xchg
or
mov
in
fsts
jns
call
iret
es
fsubrs
stc
dec
dec
mov
mov
inc
ds
mov
cltd
mov
jmp
jmp
clc
jle
mov
lods
mov
xchg
shrl
mov
rcl
iret
xchg
sub
in
inc
enter
push
cmpsb
lea
ror
ficomps
dec
cltd
in
int3
shlb
mov
enter
xchg
sub
out
or
lcall
adc
pushf
add
aam
stos
sahf
push
cs
js
das
sub
mov
jmp
xor
xchg
bound
sti
xlat
lods
xor
mov
andl
js
rcl
aas
mov
cwtl
sub
in
push
push
imul
fcompl
xchg
jns
cmpsl
cmpsb
test
pop
sbb
jle
jo
faddp
imul
roll
fwait
cld
leave
dec
jmp
hlt
mov
or
add
pop
mov
mov
xchg
in
inc
cwtl
ret
sub
ret
lret
inc
push
jbe
sbbl
mov
push
shll
or
aaa
jp
adc
pop
out
push
fwait
mov
in
jns
in
adc
or
sub
push
fisubrs
push
dec
xchg
mov
test
xor
or
in
imul
out
push
outsb
inc
iret
bound
shlb
loop
mov
les
fmul
fwait
in
lcall
in
cwtl
mov
pop
jmp
jno
xor
mov
in
push
lret
mov
mov
imul
lahf
out
insb
mov
gs
std
int3
out
fstps
pop
xchg
sub
cmp
sub
sbb
pop
xor
adc
js
sbb
loopne
inc
jl
add
je
mov
add
and
add
or
imul
fisttpl
call
test
das
sahf
aaa
sub
mov
sahf
jecxz
repz
dec
lret
js
cmpsb
push
add
aad
sub
inc
dec
ret
inc
cltd
int
fistpll
popa
mov
jg
mov
jne
sbb
inc
sbb
sub
stc
movsb
cmp
outsb
data16
insb
xchg
jns
dec
incl
push
pushf
inc
mov
push
imul
push
outsb
push
ret
pop
divl
push
or
scas
cli
xchg
mov
push
adc
ret
leave
push
sti
leave
lds
gs
aam
push
rcrl
dec
hlt
ja
fidivl
in
aad
adc
jbe
inc
add
scas
movsb
pushf
js
or
push
fs
pop
lcall
mov
pop
or
addb
icebp
xchg
pop
hlt
out
xlat
xchg
ss
test
mov
sbb
mov
das
add
cmp
jmp
pop
push
jmp
inc
mov
insb
test
add
fisubl
movsl
dec
fadd
mov
imul
dec
mov
fidivrs
push
and
xchg
pop
test
push
mov
fldt
inc
daa
popf
test
mov
push
mov
inc
rcrb
mov
cmpsl
jns,pt
arpl
out
and
dec
sbb
inc
mov
lgs
cmp
fsubrl
pop
jo
cmpb
sbb
push
testb
sbb
xlat
repnz
cmpsb
xlat
movsl
mov
movsl
fbld
aas
xor
xchg
in
sub
das
sub
mov
xchg
pop
pusha
stc
test
movb
adc
into
call
adc
shlb
dec
mov
mov
cmp
fwait
or
fstpt
pusha
inc
arpl
cli
nop
inc
lods
mov
ljmp
cltd
jl
hlt
dec
inc
js
dec
push
das
int
negl
cltd
dec
xchg
fmul
or
ret
lds
mov
ja
inc
cli
out
xchg
push
mov
sahf
sbb
add
mov
push
lret
sub
push
rcrl
daa
cwtl
out
sbb
icebp
cmp
movsb
and
jecxz
rorb
sbb
or
pop
inc
jge
cmpsl
cmc
xor
stos
fiadds
pop
pop
outsl
push
js
and
ss
aas
cmp
cmc
testl
cmpsl
stos
sbb
dec
les
pop
fwait
int
inc
sete
jo
leave
jp
dec
imull
jp
fnsave
mov
or
jb
push
test
jnp
int
push
cwtl
mov
and
xorl
push
cltd
shl
sbb
mov
movsb
cwtl
cmp
repnz
adc
push
mov
xor
stc
notl
jb
mov
mov
loop
push
or
and
xchg
mov
cld
mov
push
cld
dec
sbb
adc
inc
push
pop
rclb
jns
mov
imul
xchg
mov
mov
out
pushf
add
pop
mull
or
mov
insl
add
pop
add
fs
mov
dec
mov
daa
dec
push
bound
insl
outsl
ficomps
aad
push
xchg
les
jecxz
stos
cs
mov
into
or
cmc
mov
mov
mov
inc
outsb
jecxz
aas
xchg
and
idivb
faddl
fdivp
jb
sbb
icebp
or
test
repnz
sub
cld
out
popf
cwtl
test
jo
idivl
in
mov
mov
out
xchg
aam
or
push
xor
xor
popl
xchg
sbb
pop
jmp
aas
mov
movb
or
out
or
mov
ficomps
mov
dec
cwtl
dec
sub
fnsave
out
sub
pop
and
pushf
imul
jl
test
enter
jp
cmpsb
arpl
xchg
mov
cmp
and
dec
sub
sahf
xchg
rorb
mov
pop
ds
das
push
mov
ss
cli
and
inc
notb
scas
ja
loopne
jge
sbb
jge
pop
mov
adc
sbb
push
fbstp
popf
mov
push
mov
mov
stos
outsb
xchg
stos
out
xchg
sub
cltd
inc
xchg
out
cmp
and
clc
andb
mov
mov
std
pop
sbbb
jle
dec
in
es
or
jb
fcmovu
fs
pop
jle
and
sub
test
cmp
sub
nop
add
popf
or
in
cmc
sub
or
cmpsb
mov
add
xchg
sub
xor
mul
jno
sahf
mov
pop
in
pop
inc
sbb
push
push
cltd
inc
add
lcall
cmp
jns
sbb
or
repnz
pop
rclb
cltd
in
lods
xor
jns
fbld
inc
jp
lock
ret
out
aas
call
dec
fstpl
mov
jnp
aam
cmpl
shlb
fwait
mov
pop
loope
dec
jb
lret
jae
call
cs
xchg
hlt
imul
test
sub
pop
dec
sarb
jae
test
cmpxchg
test
add
ds
jbe
nop
jns
and
incb
mov
sbb
icebp
jnp
sub
cmpsl
add
test
das
movsb
and
cmp
adc
xorb
lods
arpl
jne
push
mov
fwait
push
jns
hlt
mov
lea
add
out
in
adc
stos
mov
xchg
inc
sbbb
and
shrl
scas
xchg
xor
movsl
je
mov
jg
les
sub
outsb
cld
jno
xchg
pop
mov
push
inc
inc
pop
fidivl
mov
xor
mov
mov
push
negl
lret
push
loope
jmp
push
dec
jg
xor
mov
xor
adc
adc
fwait
sbb
ret
out
nop
push
jg
push
or
add
jno
sbb
jg
loope
int3
cmp
pop
andl
call
int3
test
xor
mov
adc
faddl
scas
jl
lahf
outsl
sbb
loope
push
mov
inc
cld
pop
insl
dec
bound
mov
add
push
or
pop
insl
sarb
hlt
jae
pop
das
pop
xchg
cmp
daa
stos
push
or
inc
ds
stc
mov
pop
push
fldt
test
mov
or
cmp
xor
filds
push
xchg
popa
flds
fldl
push
int3
shrb
movsb
sbbl
add
adc
sub
test
pop
mov
je
xor
push
push
dec
leave
inc
shlb
shll
insl
inc
jmp
cld
xchg
in
flds
incl
xchg
cmp
movsb
inc
or
xchg
cmp
sarb
cmp
adc
mov
inc
mov
fmul
or
jl
jge
dec
mov
and
pop
mov
cli
pop
cmp
icebp
xor
pop
cltd
fwait
testb
cwtl
pop
xchg
xchg
mov
push
lock
cmp
or
jo
decl
das
js
ret
or
xchg
mov
push
mov
mov
les
sbb
mov
setg
xchg
lret
fidivl
sub
push
inc
fwait
cltd
pop
test
adc
fbld
insl
cmp
test
pop
test
mov
xchg
iret
sbb
out
data16
push
pop
fildll
es
insl
cmpl
insb
sub
test
xor
testb
mov
stc
inc
bnd
inc
or
or
cmp
int
push
fwait
rorl
fcoml
xor
rorb
or
and
xchg
ljmp
jns
mov
jbe
jp
popa
outsb
stos
insb
cmpsl
push
push
mov
test
jne
scas
push
jne
cmp
faddl
insb
dec
sub
andnps
getsec
xchg
enter
lock
jge
push
inc
xor
dec
cmpsb
daa
push
scas
and
push
loope
aas
jns
stos
sub
out
mov
in
sub
adc
and
add
xor
xor
movsl
lret
lds
out
add
cmc
mov
scas
pop
mov
xchg
stc
mov
sbb
mov
xchg
mov
lea
bound
mov
ds
or
imul
cmp
leave
rcrb
notb
and
imul
addb
inc
rcr
stos
jl
mov
loopne
sub
ss
add
aaa
js
add
inc
or
push
xor
inc
pushf
sbb
dec
neg
push
mov
mov
mov
pop
xlat
pusha
jp
int
shl
ret
xlat
int
lcall
sub
mov
jp
out
imul
int
lea
aad
push
add
int
or
push
or
dec
iret
and
fcoms
flds
ret
mov
pushf
mov
cmp
mov
cwtl
sub
fdivp
sub
mov
push
cmp
push
daa
ftst
inc
insl
sti
dec
push
dec
in
sub
dec
cmp
jbe
sbb
sub
lds
je
repnz
cmp
sub
jnp
push
pop
out
out
push
loop
mov
jae
int
xor
and
jle
in
pop
sub
add
aaa
arpl
jne
jne
jge
mov
insb
xor
lahf
popf
pop
mov
adc
xor
xchg
sub
cmp
inc
cmp
test
inc
loop
mov
mov
pop
std
jecxz
push
out
mov
mov
iret
sti
fisubs
mov
mov
mov
adc
mov
in
popa
inc
xchg
sub
push
mov
xor
mov
test
or
mov
aas
dec
xchg
mov
mov
mov
xchg
dec
push
xor
mov
hlt
mull
cli
es
jne
inc
adc
mov
loop
mov
xorb
mov
cmp
lods
sub
sbb
rcll
inc
xchg
push
and
aad
orl
ficompl
mov
je
call
jecxz
loope
or
aad
push
lret
cmp
mov
and
xchg
or
xchg
inc
mov
cmp
push
mov
mov
movsl
cmp
cmp
adc
sub
add
mov
sbb
divl
push
jb
xchg
sbb
sbb
mov
pop
test
call
mov
shll
or
add
gs
xchg
dec
push
sub
pushf
ret
and
mov
testb
mov
xchg
and
mov
lcall
lret
sub
xchg
loope
adc
push
fwait
jne
fimuls
jl
xchg
ja
xor
test
and
mov
ret
lret
ds
je
pop
xchg
in
mov
dec
out
sub
insb
push
xor
xchg
mov
pusha
push
loopne
cli
or
stos
dec
in
and
stos
in
jmp
jmp
sbb
push
inc
pop
jmp
shrl
repz
in
mov
hlt
idivb
test
mov
fwait
and
adc
pusha
push
push
xor
mov
mov
sbb
push
mov
xchg
bound
push
imul
sub
pop
fsts
sub
add
dec
mov
pop
xor
movb
push
cmp
xor
movsl
jmp
and
ficompl
in
mov
in
cmp
sub
lret
xor
les
adc
mov
leave
daa
mov
xchg
mov
das
or
int3
imul
outsl
fidivs
clc
inc
xchg
jnp
lods
cld
xor
dec
and
inc
xor
test
mov
arpl
aam
xor
mov
mov
mov
jne
ret
mov
pusha
pop
xor
or
loopne
pop
inc
orb
hlt
test
aas
xor
sbb
mov
mov
fdivrp
scas
mov
cmp
test
cmp
xchg
pop
and
jne
mov
push
ss
lahf
push
pop
jbe
push
cmp
shll
dec
cmp
jne
mov
pop
mov
mov
mov
mov
and
dec
push
lods
mov
add
push
ljmp
ret
cmp
xchg
inc
jl
movsl
push
and
mov
lcall
mov
inc
test
test
int
je
pop
ss
or
adc
mov
call
mov
test
int3
pop
and
dec
pop
leave
sbb
mov
xor
inc
stc
sbb
insl
cli
mov
add
push
and
mov
test
fldl
rol
fdivrl
loope
sub
dec
push
mov
jecxz
cmpsb
lcall
out
ss
xchg
lock
or
add
dec
xchg
pop
fcomp
mov
aam
mov
pop
fldl
add
jns
inc
add
push
int3
xor
data16
dec
sub
adc
pop
jg
pop
dec
mov
mov
push
jl
ficoms
adc
push
and
mov
mov
adc
xchg
fstpt
fsubp
pop
xchg
sarl
mov
sub
jns
scas
adc
rcll
loopne
lds
jbe
xchg
das
dec
cmp
xorl
repnz
sub
jb
or
js
adc
inc
lods
mov
add
outsl
pop
ljmp
mov
or
sbb
pop
mov
cwtl
loopne
xchg
aad
out
jae
pusha
or
mov
out
jns
push
sbb
and
or
mov
in
lret
cmp
pop
sbb
cmc
mov
xchg
and
sti
roll
popa
icebp
xor
push
xchg
ljmp
dec
dec
push
ret
nop
shll
popf
push
movsb
sti
pop
fwait
jb
and
and
loop
dec
xor
mov
push
ret
dec
push
ss
jecxz
jbe
int
cmp
shll
and
cmp
mov
cmp
iret
sub
sub
into
mov
imul
xor
out
inc
call
sub
sub
jp
mov
mov
adcl
bound
into
or
jp
inc
jo
mov
fwait
add
pop
hlt
dec
mov
int
sbb
in
call
push
xor
push
rorl
fmul
push
mulb
outsl
xchg
cmp
inc
int
cmpsl
fadds
stos
pop
and
jo
jo
cmp
add
jnp
or
mov
adc
and
adc
push
pusha
mov
push
sysret
sub
cwtl
jmp
cmp
call
scas
mov
push
test
or
pop
jb
pop
jb
insb
std
rcll
sub
lcall
fisttpll
nop
negb
cmpsb
xchg
cmp
sar
xchg
xchg
sub
in
out
std
ret
xchg
xor
inc
insb
xlat
iret
data16
shrl
rcl
cmp
mov
mov
movsb
adc
cmp
hlt
mov
mov
jns
and
xchg
and
lahf
cmp
rorl
fdivp
mov
in
add
add
ret
ret
std
pop
push
fstps
fwait
je
stos
cmp
sub
xchg
fistps
das
popf
sub
iret
dec
push
sub
lret
fcomps
mov
sbb
mov
sbb
push
sbbb
std
mov
mov
xor
aaa
mov
and
fnstsw
push
inc
das
cs
or
nop
fisubrl
stc
out
or
jl
test
pop
xor
cli
xchg
iret
js
push
jle
imul
aas
dec
xor
scas
lahf
xor
mov
sarl
loopne
in
pop
push
movsb
fs
ja
call
dec
sbb
repnz
push
nop
and
cmp
fdivl
daa
mov
add
or
ret
testb
jbe
imul
mov
pop
mov
inc
sbb
xlat
cmpsl
push
ja
ljmp
push
mov
arpl
in
push
popf
imul
mov
and
jg
mov
mov
mov
mov
movsl
dec
lret
xchg
and
and
fcoms
jbe
xchg
ss
mov
dec
in
pop
arpl
pusha
push
cmp
js
int3
jp
mov
and
bound
dec
push
push
pushf
adc
push
mov
inc
adc
inc
xchg
and
imul
adc
outsb
sbb
mov
adc
pop
mov
jle
mov
xor
dec
adc
insb
xchg
xlat
ljmp
jnp
jb
mov
gs
pop
push
adc
adc
in
fwait
pushf
xor
mov
cmp
push
mul
sbb
std
or
mov
in
sbb
fldt
jo
dec
imul
xchg
std
or
mov
rcrl
adc
addr16
ds
sbb
push
loop
test
xor
sbb
mov
sub
stos
es
jae
pop
ljmp
mov
cmp
stc
xchg
push
lret
arpl
or
cmp
out
pop
sbb
popa
loopne
negb
ret
lahf
push
dec
dec
push
cmp
clc
stos
stc
sub
xor
add
sbb
lods
imul
rcr
xchg
mov
pop
sarl
adc
xchg
movsl
lcall
jno
xchg
xchg
or
lret
push
pop
ret
sbb
adc
pop
hlt
or
aas
js
imul
lahf
frstor
mov
mov
mov
jb
push
popa
push
mov
div
out
pop
sti
push
dec
stos
hlt
pop
lods
jge
xor
jns
popf
sbb
mov
aas
cmp
or
scas
dec
mov
test
stos
test
lahf
leave
das
scas
scas
jmp
mov
rol
scas
mov
cmp
sbb
out
cmp
cmpsl
ret
fsubr
stos
and
pusha
pop
ds
in
mov
shrb
mov
sbb
pop
fnstenv
cmp
add
lret
add
stc
popf
inc
cmpsl
push
popf
pop
test
bound
jae
pop
xor
cmp
push
cli
pop
int3
lods
mov
sub
sub
xchg
adc
xchg
jne
icebp
xchg
sti
dec
sbb
hlt
cltd
pusha
fsubrs
or
shr
jecxz
ja
lods
xchg
push
and
sub
lret
and
or
ds
mov
xor
xchg
orb
xorb
mov
out
jnp
cmp
adc
clc
bound
push
imul
dec
adc
iret
fisttpl
out
shr
repnz
lods
imul
cmp
xor
sbb
jg
enter
pop
popa
adc
cs
xchg
in
icebp
xchg
call
push
jbe
and
push
aam
and
decb
dec
cli
mov
adc
aam
mov
fidivs
fcompl
pop
and
xchg
sbb
mov
repz
and
xor
das
inc
adc
mov
push
or
mov
stos
sub
aad
push
leave
nop
stos
pop
test
mov
pop
xor
stos
and
in
xchg
rcr
test
inc
sbb
aaa
or
and
cmp
scas
mov
test
lock
sbb
arpl
imul
push
sarb
xlat
jo
mov
flds
add
or
pusha
fwait
sbb
aad
shlb
fisttpl
fstps
jns
cmpl
xor
inc
arpl
ret
jg
into
arpl
fsubs
pop
mov
hlt
push
lock
jns
jge
lahf
cmpsb
push
adc
rcll
jg
or
dec
out
mov
pop
imul
mov
dec
xlat
icebp
push
xorb
sub
sub
aad
and
sahf
ja
fmuls
mov
mov
fidivl
adc
lcall
ret
cld
and
dec
push
out
push
lcall
cmp
mov
dec
pop
aaa
or
push
aam
sbb
sub
bound
and
push
ret
jmp
adc
imul
sub
push
push
decl
sbb
inc
mov
frstor
mov
loop
xchg
int
popf
icebp
data16
adc
push
out
inc
pop
xchg
lds
ret
outsb
mov
fcoms
mov
in
in
popf
or
xor
push
sarl
inc
mulb
adc
das
jecxz
nop
and
add
loop
mov
adc
adc
push
xor
pop
stc
jbe
mov
and
jle
lret
adc
pop
loopne
enter
loope
ret
lret
ja
dec
jo
call
shr
jle
push
movl
js
pop
sub
jae
jmp
jae
test
xor
repz
dec
jnp
xchg
mov
mov
dec
fists
cs
cmp
cld
je
pusha
mov
xor
notb
std
xor
add
fadds
xor
sbb
push
ds
xor
jecxz
fs
insl
lret
mov
add
andb
imulb
outsl
cs
xchg
add
leave
push
inc
js
and
add
jns
mov
stos
push
jnp
movsl
jae
cmpl
jge
cmp
xchg
push
testl
xchg
pop
mov
jae
xor
push
lds
mov
out
lret
mov
popa
ja
pop
cli
dec
adc
pop
add
aas
aas
ja
xchg
sbb
fwait
data16
jne
mov
sbb
inc
sti
dec
push
jo
mov
lods
sbb
lret
fdivrl
les
lds
imul
jae
inc
sar
setl
mov
jl
or
add
lods
psrld
lret
loopne
je
cmp
jge
lcall
add
pop
adc
pushf
lods
sarb
adc
loopne
xor
loop
repnz
js
cwtl
push
cmp
dec
mov
mov
pop
or
jecxz
lods
out
mov
outsb
fmul
adc
fisubl
nop
cmp
roll
push
push
xlat
mov
dec
xchg
or
pop
ds
test
dec
dec
les
int
sbb
pop
adc
and
xlat
sahf
jmp
popl
lods
testl
inc
jae
pop
dec
into
push
aas
mov
xchg
cmp
pusha
xor
testb
cmp
sbb
or
mov
inc
cld
icebp
cwtl
cs
js
dec
loope
std
adc
add
popf
mov
push
aad
jl
outsb
cmp
aaa
dec
popf
pop
mov
xchg
and
adc
repz
ljmp
mov
or
dec
das
addr16
movsl
xchg
js
rolb
or
subl
and
or
add
stc
shlb
inc
sbb
out
jae
push
mov
scas
mov
xchg
adc
push
in
pop
xor
mov
cltd
lds
jge
fldt
lcall
sahf
jge
lret
xlat
jmp
ljmp
jmp
push
jnp
mov
mov
adc
cmp
or
jl
jle
popf
je
stc
pop
cltd
imul
inc
fwait
xor
lds
jae
loope
iret
push
mov
mov
sbb
lahf
pop
sbb
addl
and
lcall
mov
neg
idiv
push
dec
mov
mov
xchg
cmc
lcall
stc
lds
insl
iret
js
je
jno
jle
hlt
sub
test
push
inc
cmpsl
mov
movsb
mov
lahf
sbbb
sbb
lds
inc
mov
sub
fdiv
aam
ret
aad
pusha
scas
ret
xor
dec
dec
or
cmp
pop
adc
dec
loope
pop
inc
roll
mov
lods
and
sub
arpl
mov
leave
xorb
out
and
iret
or
call
and
push
push
fsubrl
mov
stc
sbb
pop
pop
push
call
notb
dec
andb
add
xor
dec
lods
hlt
rcrl
push
mov
add
and
dec
jbe
inc
pop
out
popf
cli
xchg
cmp
std
lahf
mov
sub
mov
push
push
outsl
cs
loope
push
lahf
xor
xchg
outsb
mov
mov
mov
xor
dec
cmpsl
xlat
and
je
loop
fmull
es
or
cmpl
xchg
jnp
mov
xor
pop
push
pop
mov
insw
pop
mov
jnp
dec
cmp
inc
add
xchg
negb
jp
add
test
repnz
jle
repnz
mov
dec
dec
push
shlb
mov
sar
imul
data16
sbb
mov
in
arpl
pop
mov
and
lcall
sbb
push
or
in
roll
cmp
rcrb
clc
add
loop
jg
aad
xchg
add
sti
cmp
icebp
in
subb
in
cmp
lahf
jne
xchg
test
inc
inc
jbe
adc
outsb
xor
sbb
push
aam
clc
pop
sub
pop
shrl
aaa
pop
adc
adc
fldenv
cld
jl
jns
cld
cld
mov
xor
sti
xlat
fists
scas
lcall
dec
sbb
or
push
pop
adc
call
inc
orl
mov
daa
cmc
int
mov
outsl
dec
movsb
ljmp
sub
or
xorb
test
mov
xor
scas
sbb
or
shlb
jl
nop
cmp
xor
neg
push
subl
sub
dec
in
scas
mov
push
sub
xor
rcrb
pop
jne
rcrl
dec
jb
fstpt
xor
dec
daa
shrl
push
adc
les
call
nop
test
add
hlt
mov
fwait
jb
shrb
adc
cld
push
loopne
ss
push
sbb
adc
dec
and
push
push
mov
aaa
push
cmc
mov
out
lret
ljmp
jle
dec
sbbl
out
imul
sbb
leave
cmp
mov
dec
push
xchg
sub
mov
push
sub
into
jns
ret
sbb
jae
fmull
cmpsb
daa
fstps
xor
clc
mov
or
lds
sbb
les
mov
adc
push
mov
sub
mov
jo
jne
or
mov
jne,pn
sti
push
inc
jae
mov
sbb
jb
sahf
lcall
pop
rolb
inc
fists
jo
dec
push
cmp
mov
test
jge
lret
inc
push
dec
push
mov
pop
imul
mov
add
jg
ja
fs
push
dec
cmp
mov
outsb
divb
push
and
xor
inc
jbe
ss
jne
xchg
cmp
pushf
fstpl
rorb
pop
adc
dec
in
or
push
lret
mov
xchg
testb
andb
mov
push
xorl
mov
sub
inc
pop
scas
or
fmuls
mov
leave
mov
xor
fisttps
popa
aam
cmp
sarl
push
and
lea
xchg
repz
adc
and
loop
xor
scas
movsl
add
not
shr
adc
cmp
inc
rolb
sti
mov
scas
leave
enter
fsubrl
sbbl
and
xchg
loope
mov
pop
out
sub
js
mov
cmp
fdivrl
pop
jmp
push
push
add
jne
test
lds
das
push
rcll
arpl
push
int3
jns
xlat
loop
mov
push
inc
mov
sbb
aaa
jl
ss
fwait
stos
andb
ss
sub
pop
push
xchg
fwait
sbb
jge
mov
les
mov
cmp
mov
mov
rorl
pop
sub
cmp
jne
ficompl
fildll
loop
mov
call
js,pn
dec
sub
pushf
jg
je
mov
adc
xor
and
pop
sub
cmp
stos
lods
push
lds
dec
or
pop
mov
aam
mov
push
out
mov
je
xchg
mov
jae
insb
outsl
pop
pop
mov
mov
movl
icebp
iret
add
ja
aas
data16
lods
cmpsl
dec
mov
fisttps
pop
adc
or
rcrb
push
mov
mov
std
cmp
das
rcl
fmull
lods
push
mov
pop
sbb
ss
cmp
inc
mov
js
or
mov
sub
sub
push
sbb
fldl
cmp
pop
rclb
xor
jnp
push
xor
adc
lahf
test
sub
ficoml
out
es
xchg
inc
imul
out
push
sub
and
loopne
pop
cmp
fiadds
mov
xchg
cmp
sbb
mov
pop
adc
pop
jno
mov
sahf
lret
adc
mov
push
push
orb
aad
mov
mov
jo
xchg
test
mov
sub
xor
iret
sti
lahf
mov
cmp
adc
clc
lods
jge
stos
fcomps
clc
push
stos
inc
cs
out
sub
fldcw
pop
stos
or
cmp
and
test
lret
aas
aaa
andb
std
cmpsl
outsl
cmp
or
xchg
shll
repnz
mov
and
dec
popa
in
push
mov
subb
cwtl
lock
clc
loop
pusha
out
xchg
bnd
mov
lret
and
fsubrs
cmp
sub
lahf
dec
in
addps
mov
cs
cli
push
sub
xchg
adc
inc
adcl
push
sti
not
push
jo
fcoms
test
aas
xor
lret
cmc
cmp
adc
shll
and
xor
imul
cs
fstl
adc
dec
fdivrs
ja
mov
and
sbb
push
jge
jno
ds
pop
mov
mov
out
jns
fldl
jno
cs
sbb
add
mov
mov
dec
xchg
sub
push
cld
inc
into
xchg
cmp
andb
leave
pop
xlat
adc
xchg
sbb
fwait
pop
add
jo
mov
mov
addb
stos
dec
scas
icebp
jg
add
pop
or
inc
loopne
ret
in
sahf
mov
rcrb
xor
lret
cmp
arpl
xor
xchg
cli
xor
cld
sub
sbb
test
dec
outsl
stos
xchg
adc
inc
out
scas
mov
inc
stos
in
dec
int
sub
cmp
mov
mov
lret
mov
icebp
pop
cmpsl
pusha
pop
sti
lret
sbb
xchg
rolb
dec
clc
pop
dec
stos
out
fcmovbe
cmpsb
adc
inc
cmpsb
fldl
mov
ljmp
cmp
dec
insl
push
sbb
push
sbb
in
pop
jge
sub
mov
and
mov
sbb
push
pushf
into
lret
or
lods
in
push
cmpl
pop
scas
dec
mov
xchg
push
push
pop
fldcw
out
shlb
out
mov
gs
mov
daa
dec
cmc
addb
and
pushf
mull
lahf
imul
stos
and
decb
gs
jns
std
mov
in
scas
dec
ret
ss
lcall
loopne
cmp
cmp
cmc
stc
push
dec
mov
scas
js
inc
pop
cld
pushf
ret
and
add
gs
in
push
push
sub
fwait
xchg
push
imul
and
loope
inc
insl
xchg
and
and
in
hlt
xchg
jb
stos
or
jne
sbb
ret
add
push
std
jbe
das
popa
mov
sub
dec
or
out
aam
push
mov
clc
dec
insl
test
rclb
adc
mov
int
idivl
sahf
fildll
in
mov
rcrl
xor
add
jl
xchg
mov
out
inc
jne
mov
xchg
mov
mov
into
sbb
or
fsubrl
xchg
das
leave
xchg
mov
mov
into
pop
xor
add
and
mov
mov
shl
jnp
mov
mov
mov
inc
aam
mov
push
fcomps
lahf
adc
call
xor
push
test
incl
stos
push
sbb
shll
call
fstpt
push
clc
push
add
push
adc
xor
cli
lds
rorb
mov
inc
cmp
cltd
fwait
inc
adc
ss
pop
or
popf
jl
add
mov
cmp
lret
pop
sub
push
mov
pop
scas
hlt
fs
pop
and
ret
nop
push
mov
sbb
stos
lds
add
dec
insl
add
mov
rdmsr
mov
cmp
sbb
mov
fiaddl
jne
test
pop
aas
cmp
pop
pop
push
sbb
jl
and
subl
test
cmpsb
das
xor
shr
dec
and
mov
cmpsl
and
jnp
xchg
sti
cmp
mov
mov
xchg
fsubrl
xor
popa
and
xchg
js
in
std
aas
xchg
fildl
fbstp
mov
and
sbb
in
ljmp
test
push
xor
lret
mov
pop
or
fcomi
pusha
cmpsl
pop
in
mov
aaa
or
cld
push
jecxz
std
pop
out
popa
loope
nop
push
lret
add
leave
shll
std
lods
into
xor
out
push
inc
adc
jecxz
ds
mov
popf
and
js
icebp
cmpsb
dec
cs
std
cld
push
sbb
aas
mov
shll
push
cmp
or
cmp
fidivl
xchg
or
rclb
xchg
add
les
mov
mov
cld
negl
mov
je
les
orl
pop
popa
int
pop
mov
subb
nop
lds
fcmovne
scas
ret
ljmp
shll
icebp
mov
rcrl
out
push
mov
ljmp
xchg
cmp
test
mov
mov
shll
jo
bound
repz
mov
cmpsb
sbb
pop
pop
in
add
xchg
dec
out
fidivs
inc
seto
and
push
push
adcl
cmp
dec
lret
jecxz
ljmp
mov
lret
cmp
mov
fldt
push
cltd
mov
icebp
lahf
imul
shl
or
adc
outsl
xchg
mov
push
jne
and
inc
pop
dec
push
das
test
cli
inc
adc
addb
addl
pop
in
outsb
xor
ds
sti
int3
push
pop
cmp
hlt
sbb
icebp
daa
stc
xor
pop
lret
or
loope
int3
inc
jg
xlat
mov
into
sbb
mov
mov
pop
lret
jbe
cmpsb
imul
cmpb
push
xor
or
and
xchg
inc
mov
ljmp
push
sbb
mov
mov
sbb
shrb
sub
add
and
iret
inc
mov
mov
punpcklbw
lods
xchg
imul
mov
xchg
loop
leave
fiadds
test
mov
dec
sbb
mov
pop
pop
rcrb
xchg
adc
sbb
test
xchg
fldt
mov
mov
sbb
dec
mov
out
fstl
mov
and
sbb
jb
pop
push
scas
adc
lods
adc
pop
repnz
push
test
incl
mov
lock
or
jno
mov
jp
loopne
divb
fcom
mov
sub
and
mov
movsb
test
cmp
fs
mov
rep
push
and
push
pop
inc
push
add
dec
dec
stos
fisubl
popa
adc
test
xlat
mov
adc
push
cli
pop
cwtl
inc
ja
fs
loope
fnstenv
inc
jne
add
orl
or
out
das
or
fwait
xchg
addl
cmp
inc
add
mov
adcl
lock
push
pop
lret
cmp
mov
pop
push
popf
in
jbe
add
mov
shl
sbb
out
in
lock
ja
lods
push
cmp
pop
and
fisttpl
or
add
sbb
jns
xchg
push
lods
mov
add
xor
movsl
imul
push
xor
jnp
adc
outsb
sub
stos
dec
mov
ja
sahf
repnz
mov
lock
fcoml
mov
aas
xor
mov
sti
mov
ds
xchg
int
sub
jbe
lahf
dec
push
push
add
push
popa
dec
mov
mov
ds
iret
or
mov
fcmovnu
pop
push
xchg
dec
jns
js
sbb
sbb
aas
rcrl
sub
loopne
add
int3
mov
inc
mov
das
test
inc
test
movsl
pop
or
mov
mov
xorl
fisttps
notb
das
dec
jl
arpl
push
out
pop
sbbb
or
mov
xchg
out
or
bound
jl
leave
loope
test
std
jns
test
ds
imul
mov
add
cwtl
jecxz
mov
add
arpl
scas
mov
lahf
negb
pop
mov
inc
mov
js
enter
pusha
adc
inc
in
fistl
lcall
ss
xor
jb
fadds
or
jb
or
xor
jecxz
shl
leave
mov
je
roll
push
pop
test
mov
dec
cltd
incb
push
and
cmp
cmp
sti
lock
and
icebp
add
ret
clc
mov
pop
lea
hlt
xchg
into
push
daa
ret
and
popa
inc
jecxz
repnz
aad
mov
js
je
mov
add
jbe
int3
pop
jg
incl
adc
push
mov
xorb
jmp
mov
sarb
shrb
jl
or
mov
and
cmp
sar
cltd
push
outsb
inc
mov
inc
pop
repz
jge
dec
mov
add
repnz
add
shrb
jp
int
push
xchg
pop
cmp
jae
setnp
loop
or
mov
push
xor
pop
fsubl
and
push
lods
loopne
sbb
dec
cli
xor
movsb
adc
mov
push
xor
dec
flds
int
xchg
xchg
cmc
xor
or
std
shr
adc
cltd
push
sti
stos
cwtl
lret
cltd
orb
out
lods
ficompl
cmpsl
aas
mov
bnd
hlt
std
cmp
nop
loope
leave
loope
jb
ljmp
push
subl
stos
mov
aam
aad
addr16
fdivrl
jb
push
mov
les
add
add
pop
imul
xchg
add
mov
repnz
xor
dec
pop
mov
inc
push
push
sti
sbb
les
pop
jecxz
lahf
addr16
cmpsl
je,pn
xchg
cltd
fs
ret
cmp
or
inc
mov
pop
dec
jg
pusha
pusha
dec
out
testl
sub
inc
xchg
outsl
cs
lds
lret
inc
aad
and
insl
mov
adc
aaa
in
push
adc
xchg
jb
sub
push
cwtl
gs
jnp
xchg
cmp
mov
add
sarl
stos
in
sbb
lock
popf
and
push
push
push
xor
cmp
fsubrl
sub
push
stc
leave
mov
repnz
shll
or
inc
ss
xlat
jnp
jecxz
pop
jmp
add
hlt
mov
cmp
sbb
in
aas
dec
xchg
cli
rorb
and
mov
xchg
in
push
cmpsb
pop
cmp
sahf
mov
pushf
xchg
lods
scas
adc
and
push
adc
sub
lret
cmp
cltd
roll
out
sbb
cltd
xorl
or
pop
mov
push
xchg
loopne
loop
pop
xchg
cmp
adc
nop
popf
into
sti
sbb
ljmp
loop
mov
movsl
fcoml
rcll
sahf
inc
xchg
adc
cmp
lea
dec
xchg
dec
std
ljmp
sbb
and
xor
jns
push
mov
pop
es
push
mov
mov
lds
jae
inc
daa
call
sub
test
aam
xchg
shr
xor
inc
outsb
pop
push
add
and
xchg
mov
test
xor
mov
mov
dec
clc
push
cmp
fs
test
dec
adc
push
popl
and
cli
int3
sub
outsl
mov
cmp
dec
outsb
aas
incl
mov
add
pop
popa
push
in
arpl
jne
jp
add
in
in
insb
mov
pushf
or
mov
popf
into
dec
rcrl
mov
daa
call
lea
test
cli
sbb
sahf
ret
pusha
leave
mov
js
ljmp
data16
sub
or
mov
lcall
push
test
and
sub
stc
mov
gs
jg
loope
xrelease
xchg
sarb
inc
in
lcall
mov
loop
aas
dec
test
jne
mov
gs
mov
pushf
fstpt
lret
jnp
dec
pop
sbb
mov
movsl
mov
xchg
test
pop
mov
cmp
data16
and
pop
movsb
call
and
jge
xlat
insl
mov
outsl
mov
push
adc
movsb
sar
ret
outsb
lcall
jnp
sti
out
fidivrs
jge
sbb
xchg
imul
into
and
lea
sbb
push
and
je
sub
out
in
and
std
add
stos
inc
mov
das
sub
or
mov
flds
push
cmp
push
inc
pop
cmp
xchg
mov
nop
mov
pop
xor
mov
cmp
pop
ljmp
mov
rcr
xor
js
test
scas
loope
idiv
xlat
int
sub
lcall
scas
arpl
fisubrs
sbb
