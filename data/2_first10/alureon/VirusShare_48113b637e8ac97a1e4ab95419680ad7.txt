push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
add
adc
jp
repz
orl
ss
mov
fistps
gs
std
cld
or
pop
mov
loope
fimull
mov
sub
pop
clc
fisttps
pop
daa
and
leave
push
fimull
mov
cmp
add
or
insl
xor
cmc
je
lods
push
icebp
icebp
icebp
es
xchg
dec
push
in
add
push
push
lret
iret
orb
and
imul
xchg
imul
jno
mov
imul
add
mov
sub
arpl
sbb
decl
jle
fcoms
test
ds
leave
stc
or
cwtl
dec
stos
fdiv
push
cmp
icebp
pop
or
ror
addr16
push
rorl
call
cmpsb
pop
cmp
sub
xchg
xor
scas
es
or
loop
pop
and
mov
orl
cwtl
mov
push
vmovupd
in
xchg
mov
cmpsb
aaa
sbb
fadds
mov
hlt
fwait
jb
or
lcall
cwtl
ja
in
inc
cmp
dec
mov
xchg
jg
adc
fsubrl
push
shrl
pop
shl
mov
inc
or
and
mull
jns
shl
dec
sbb
xchg
fisttpll
cmp
or
pop
out
mov
jnp
pop
dec
sbb
cld
xchg
cwtl
inc
sarl
or
shr
fadds
in
or
jg
add
add
insl
mov
movsl
insb
hlt
jle
jae
xlat
inc
stos
ja
sbb
das
pop
mov
push
jg
ds
into
das
sahf
mov
add
push
mov
pop
adc
cld
pop
dec
jmp
dec
cmp
jmp
nop
sbb
out
ds
insl
cwtl
sbb
mov
dec
dec
cwtl
pushf
cmp
push
insb
lods
adc
in
mov
mov
fcompl
hlt
inc
outsb
push
pop
fdivrs
dec
mov
out
sahf
mov
shr
inc
fsubl
mov
cmp
int
and
mov
orl
pop
test
xchg
out
mov
jp
jno
sbb
lret
push
add
sbb
aam
jo
test
loopne
add
add
mov
pop
xchg
mov
cmpsb
leave
out
sti
fistps
jl
push
mov
mov
jnp
test
add
jne
stos
dec
or
xchg
shrb
shll
outsl
mov
inc
mov
sbb
push
into
sub
jg
mov
ret
mov
pop
clc
cltd
pop
cmp
cwtl
aas
repnz
shrb
lock
lret
out
mov
xchg
data16
mov
fwait
sahf
pop
sbb
push
test
test
cmp
pop
jns
pop
jns
outsb
int
add
je
cmp
push
fstps
mov
push
inc
test
add
add
mov
xchg
repz
out
jo
xchg
mov
pop
sub
push
es
nop
pop
dec
mov
clc
mov
pushf
mov
loope
int3
xchg
aaa
popf
cs
je
mov
insl
push
ljmp
mov
mov
push
pop
pop
andnps
lock
ss
mov
shll
andb
mov
push
xchg
xchg
and
pop
inc
adc
adc
jnp
ljmp
out
jl
ljmp
fwait
mov
mov
cmpsb
cwtl
push
ds
pop
cmp
cmpl
add
jno
sbbl
jp
js
aad
lock
dec
mov
call
xchg
inc
inc
add
je
push
movl
insl
and
cld
jae
decl
rolb
dec
ret
pop
push
and
in
cmp
push
and
lds
insb
cmc
cmp
push
in
lds
les
in
lret
mov
adc
xchg
fs
pop
out
mov
mov
mov
jnp
int3
sub
xor
cld
aaa
flds
cmpsl
jmp
xchg
jns
sub
std
sbbl
pop
sub
arpl
int
shl
int
add
add
push
mov
push
mov
popf
pusha
out
leave
xchg
andb
ja
lods
mov
repz
jnp
mov
int
jno
repz
out
sbb
xchg
fidivl
cld
mov
imul
fstpl
nop
sbb
cmp
xor
push
push
daa
rorb
xor
sbb
or
xor
hlt
xor
add
pop
shlb
xchg
push
icebp
or
push
xchg
mov
push
loopne
jns
into
cmp
adc
js
jne
lcall
mov
loope
ficompl
orb
movsl
xor
add
ljmp
lret
sbb
test
mov
mov
popa
aam
imul
and
rcrl
outsb
loope
add
aam
loope
or
inc
sar
add
sub
fsubl
dec
leave
push
jbe
test
jge
lds
cmc
push
cmp
ja
aaa
or
rcll
or
jge
out
insb
xchg
and
sub
mov
pushw
int
push
mov
dec
xor
es
loop
repz
fsubs
xchg
cmp
mov
cwtl
pusha
fnsetpm(287
out
fisubrl
pop
test
add
cmp
filds
mov
push
adc
out
sbb
and
mov
mov
dec
pop
fdiv
ljmp
sbb
fdivrl
mov
cmp
shlb
jmp
bound
cltd
xor
scas
inc
cmpsl
dec
inc
dec
pop
dec
push
mov
xchg
adc
jne
int3
data16
pop
add
fdiv
shrb
lock
dec
test
jns
pusha
pop
xor
aaa
test
dec
add
inc
jb
mov
dec
xor
xchg
mov
sub
ficompl
cmc
adcb
or
jae
mov
iret
jo
addr16
aaa
lret
shrd
jle
lds
imul
mov
add
xor
mov
lcall
inc
sbb
add
adc
lcall
dec
mov
pop
je,pn
mov
xorl
in
cmp
outsl
ret
loopne
pop
rclb
jmp
cvtdq2ps
jle
xchg
incb
xor
mov
jle
ljmp
mov
mov
xlat
aam
xchg
fdivs
add
fldcw
push
xchg
sbb
lea
in
pop
xchg
imul
and
jle
mov
adc
and
lcall
xor
sbbb
mov
lret
fsubrs
add
aas
fmuls
xchg
xchg
xchg
dec
out
pop
add
and
in
add
lea
xor
test
add
and
mov
sbb
xchg
js
mov
aad
sbb
mov
pop
adc
stos
lahf
pop
popf
cmp
vunpcklpd
mov
xchg
in
jnp
mov
into
mov
inc
pop
fdivl
xorl
hlt
shll
cmp
jmp
mov
sub
mov
js
ja
cltd
dec
in
fidivrl
lret
xchg
jns
adc
or
mov
sbb
lret
xchg
pop
call
ror
dec
xchg
jne
mov
out
cmp
dec
js
mov
xor
or
add
stc
sbb
jb
pop
lods
mov
mov
insb
or
aam
xor
xlat
cli
xor
xor
add
in
or
in
mov
xchg
push
push
mov
loopne
ss
cmp
mov
xor
mov
sarb
ret
sub
fstps
mov
mov
inc
adc
dec
dec
shll
inc
jl
sbbl
add
lret
inc
add
and
fisttps
imul
adcb
out
je
mov
gs
sti
out
fwait
jmp
fisubrl
daa
outsl
mov
test
adc
pop
hlt
and
jne
pop
xor
lds
xchg
pop
popa
cmp
daa
inc
mov
ret
repnz
cltd
mov
sub
inc
in
adc
inc
mov
rolb
dec
push
mov
dec
sbb
add
add
inc
inc
mov
xchg
clc
cli
mov
xchg
popl
rclb
imul
clc
adc
shlb
mov
pushf
xchg
jl
test
xor
cmpsb
das
and
aas
jo
inc
xchg
repz
push
and
lcall
jg
push
dec
les
test
adc
adc
cmp
cmp
mov
fwait
cltd
xchg
mov
add
sahf
pop
mov
clc
clc
out
in
adc
insb
in
sub
lret
mov
xor
sbb
or
stos
out
cs
pop
inc
jl
divb
push
mov
xor
lcall
cmp
mov
and
maxps
cmp
cmp
pop
jae
ss
or
fisubrs
lret
sbb
out
cmp
stc
lret
and
jns
mov
adc
inc
inc
add
call
jg
divb
stos
adc
inc
lcall
stos
push
cmc
jne
pop
dec
cmp
adc
jmp
iret
stc
jno
lock
pop
enter
dec
cmp
fndisi(8087
adc
aas
aad
clc
bound
jmp
aaa
repz
fbstp
adc
sub
int3
add
add
add
dec
mov
pop
mov
repz
ja
mov
push
movsl
les
fldcw
inc
test
orl
sbb
mov
inc
rclb
mov
insl
test
adc
dec
cld
mov
sar
shrb
push
divb
divb
cmpl
add
xor
outsl
xchg
cmp
outsb
push
insl
iret
dec
test
pop
fcomps
add
sbb
cmp
pop
lods
enter
fsubl
js
in
dec
movsl
ja
ja
enter
jno
aam
shll
and
fwait
dec
mov
test
dec
pop
jns
mov
jns
mov
gs
and
cmc
outsb
dec
cmp
sub
sub
sub
aaa
push
and
jge
out
aad
or
ds
add
movsb
daa
iret
push
jnp
inc
bnd
xor
in
mov
mov
cmp
mov
dec
mov
into
dec
push
addr16
xlat
std
lcall
dec
fcmovu
dec
dec
lods
dec
adc
sbb
mov
lods
fs
fistps
lahf
jae
shl
mov
lds
je
js
and
test
imul
es
movsb
add
loop
mov
loopne
and
xor
lahf
cld
outsl
rol
or
in
push
movl
cmpsl
dec
outsl
add
push
add
cli
xor
data16
rorl
out
shll
mov
sarb
push
cmp
pop
in
or
out
daa
clc
cmp
push
dec
sub
stc
mov
lea
pop
lods
daa
push
inc
cli
xchg
xchg
jnp
addb
movsl
mov
add
xlat
loope
pop
mov
fsubrs
in
mov
out
je
dec
rcr
adc
shlb
push
hlt
xchg
in
pop
mov
jge
fdivrl
jmp
lds
addb
rcl
cmp
and
xchg
xchg
cmp
mov
insl
outsl
and
ret
cwtl
jbe
jp
adc
lret
pop
add
jbe
mov
mov
inc
and
add
dec
fisubl
or
adc
stos
cmp
bound
in
pusha
dec
loopne
pop
pop
fldl
icebp
imulb
mov
xchg
frstpm(287
icebp
sbb
cmp
adc
xor
sub
or
jnp
ds
cwtl
js
sub
imul
movsb
mov
pop
or
ljmp
stos
test
mov
out
into
scas
sub
add
sbb
dec
push
cltd
or
mov
xor
test
sub
and
aam
pop
sbb
out
mov
lret
jmp
or
call
addb
in
stc
sarb
into
pusha
jb
mov
jnp
lods
test
sbb
imul
addr16
and
stc
pop
jecxz
inc
test
sahf
cmpsb
push
into
dec
dec
cmp
roll
xor
inc
or
or
loope
gs
xchg
sbbl
int3
sbb
pop
pop
xchg
dec
aas
leave
test
insl
pusha
pop
pop
outsb
push
add
pop
inc
shrb
xor
ljmp
fwait
adc
cmp
sbb
je
ljmp
jmp
iret
xorb
mov
rcr
push
pop
lods
push
mov
push
cli
stc
jg
xchg
mov
jp
xchg
pusha
fstl
leave
inc
mov
out
adc
mov
arpl
aad
jb
xlat
adc
daa
push
mov
cmp
push
inc
add
add
adc
hlt
lds
add
push
repnz
shll
aad
lds
lcall
aaa
dec
mov
xor
push
xor
ret
or
addr16
lcall
jle
and
mov
jl
jmp
sbb
sbb
repz
js
adc
movl
arpl
imul
aaa
loope
dec
push
es
inc
mov
mov
pop
sbb
or
add
add
lds
gs
adc
insb
jno
test
je
sbb
jbe
lock
cmp
xor
dec
stos
mov
popa
dec
jb
outsb
mov
dec
rcll
or
ss
ret
shlb
decb
rcrb
mov
sbb
cmc
stc
mov
pushf
pop
xchg
bound
sbb
es
inc
push
sarb
jl
push
mov
or
orl
arpl
dec
pop
dec
adc
add
mov
loop
int3
pop
repz
push
push
inc
and
sar
in
mov
mov
and
test
in
adc
add
testl
addb
xchg
inc
outsb
sub
pop
push
mov
aas
adc
cmp
mov
rcrl
arpl
xor
jns
call
pop
iret
and
add
sarb
js
mov
hlt
xchg
addr16
sbb
out
or
insb
test
mov
xorb
lds
add
faddl
xorl
add
sti
loop
cmc
loopne
jp
sub
cmp
pop
fmull
les
xchg
dec
loope
jge
cmp
cwtl
jnp
or
enter
aad
push
imul
add
lahf
push
adc
imul
add
xor
adc
mov
cmp
cmpsl
push
inc
cmc
lods
jecxz
loope
imul
or
cld
js
mov
xor
shrb
mov
dec
lea
sub
push
lcall
repz
test
or
loopne
and
fstcw
nop
and
test
pop
xchg
fists
xchg
mov
subl
add
fwait
pop
lods
add
subb
stos
or
mov
add
cmpsb
fucom
fisttpll
push
mov
mov
cli
lret
stos
jb
mov
mov
ficomps
lret
pop
popa
mov
aad
jle
ja
lds
icebp
push
imul
ret
ja
pop
out
add
imul
push
jae
pop
dec
subl
pop
add
add
cltd
push
cmp
adc
sub
sarl
or
adc
mov
mov
ror
outsl
mov
fisubrl
roll
stc
rolb
cmp
movsl
adc
repz
jmp
xchg
pop
add
sub
ret
ja
repz
scas
outsl
xor
or
lret
mov
sub
xorl
clc
call
pop
add
add
jbe
mov
jg
aas
popa
data16
xchg
test
es
mov
mov
dec
mov
jns
repz
cwtl
push
clc
pop
push
jbe
cli
xor
lea
ret
repz
ljmp
ljmp
xchg
xchg
aad
jnp
loope
and
dec
jmp
adc
pop
adc
adc
stos
cmp
bound
imul
movsb
repz
xor
dec
mov
sub
mov
adc
aaa
out
sub
cmp
arpl
add
lea
add
dec
or
add
xor
cmp
cmpsl
das
dec
test
cmp
and
popf
jne
lret
repnz
mov
dec
stos
rolb
cmpsl
movsb
sbb
lahf
sbb
xlat
vpmulhw
sbb
inc
or
repz
cmp
ljmp
or
test
cmp
in
dec
mov
jle
xchg
nop
dec
add
mov
xchg
dec
dec
ds
push
faddl
sub
sub
ljmp
lahf
inc
dec
xchg
mov
imul
inc
pusha
mov
je
mov
jp
out
adc
mov
mov
sbb
push
jp
pop
lods
xchg
cmp
push
rcll
cmp
pusha
push
mov
addl
push
lahf
in
mov
rcrb
popf
inc
ss
dec
ret
cmp
jmp
dec
movsb
pushf
add
pop
mov
in
jns
jge
ja
popf
int3
jns
ss
in
xchg
mov
mov
cltd
cmp
aam
jle
push
addl
leave
pop
daa
scas
xchg
xor
mov
rclb
lods
test
and
popa
dec
popf
insb
fcompl
xchg
xor
mov
mov
js
jl
sbb
cmc
cmpsb
and
pop
mov
lret
test
stos
orl
clc
fists
cmc
pushf
in
nop
or
fcomi
or
stos
push
mov
mov
cmpsl
jl
inc
push
sbb
xchg
jg
in
aaa
loope
xor
sbb
lock
push
call
mov
imul
inc
dec
jl
and
pushf
loop
outsb
jbe
mov
add
add
mov
add
jp
xlat
inc
adc
imul
sbb
mov
pushf
adc
insb
pop
fwait
repnz
loop
and
push
xor
adc
adc
movsb
add
cltd
inc
and
pop
adc
mov
loopne
jns
dec
int
xchg
push
or
dec
and
xchg
mov
mov
cli
icebp
mov
inc
jno
jbe
fwait
lock
fimull
in
jmp
test
test
orb
pop
cmp
test
scas
cli
sarb
dec
pop
sbb
jl
add
std
aas
adc
nop
pop
xchg
or
imul
lock
mov
stos
mov
clc
sub
cmc
lds
pop
sbb
and
or
dec
sbb
mov
jmp
jp
insb
inc
rorl
push
adc
jae
ljmpw
cs
bound
pop
sub
clc
pop
mov
cmpsb
stos
or
outsl
cld
cmp
push
stos
sti
dec
sti
add
and
jo
adc
aaa
adcl
or
jns
cmp
jecxz
ja
test
ss
jbe
aas
aaa
in
fcoms
pop
mov
les
lock
jmp
lret
lea
cmp
cmp
andb
mov
cmpsb
dec
les
mov
adc
jl
push
in
ret
mov
insb
add
mov
js
loopne
jl
mov
jle
out
cmp
lods
leave
inc
ja
jl
shlb
rclb
pop
pushf
cmpsb
jmp
push
lahf
lods
add
mov
pop
ss
iret
dec
test
inc
repz
imul
xor
mov
jne
mov
daa
test
xchg
aas
lods
add
dec
cmp
add
sub
popl
add
mov
inc
cli
inc
bound
xchg
adc
mov
jb
mov
mov
or
aam
and
out
xchg
xor
xchg
aas
mov
sub
std
or
stos
mov
xlat
ja
adc
jmp
adc
ret
mov
pop
and
jnp
jecxz
loope
xchg
pushf
sarb
xchg
out
scas
imul
es
js
jg
cld
mov
dec
roll
das
lret
adc
push
xor
es
cmp
das
mov
dec
push
stos
clc
notb
movsb
mov
push
mov
fistpl
sbb
inc
lcall
stos
lahf
faddl
int
daa
leave
int3
icebp
push
inc
jle,pt
sbb
jmp
push
inc
arpl
lods
push
cmc
ljmp
xchg
lods
out
loope
dec
ljmp
cmp
sub
mov
push
cwtl
addr16
xchg
test
das
xor
jnp
outsb
adc
out
gs
and
dec
mov
imul
xor
ja
cld
cmp
xchg
dec
or
fisubrl
push
cmp
sub
aad
mov
pop
mov
addr16
das
xlat
xchg
insb
or
lea
fnstcw
fnsave
dec
jl
hlt
pop
sub
aaa
add
fstpl
iret
jge
xchg
mov
sbb
pop
jp
les
push
or
fdivl
ja
lret
fwait
leave
pop
mov
mov
xor
out
callw
cmp
fwait
ljmp
cmp
das
sub
sub
adc
xor
jg
adc
sbb
cmpsb
stos
dec
fwait
push
mov
cmp
loope
in
sahf
inc
fsubr
and
jge
cmp
movsb
inc
outsb
fs
mov
int3
cmp
sbb
and
or
pop
sarl
push
in
jne
xchg
xor
xchg
push
repnz
sbb
adc
int3
jmp
mov
stos
clc
jge
jecxz
mov
lea
xchg
lds
ret
lea
lcall
into
dec
add
mov
lea
rol
dec
mov
add
adc
rcrl
call
jg
data16
inc
or
adc
mov
popf
add
jbe
out
adc
push
movsl
push
xchg
cmp
aad
out
sti
jmp
cli
pop
mov
push
cmp
dec
lret
rdtsc
rcrb
fists
jle
and
xchg
jle
out
cmp
gs
enter
lret
sub
adc
pusha
lea
stos
or
sbb
add
jo
imul
outsl
ljmp
or
sub
loop
inc
loop
lea
jmp
aas
in
aas
inc
aam
pop
jg
push
and
sbb
inc
push
mov
pop
pop
jl
jl
xor
in
mov
sub
cltd
adc
push
or
xor
repnz
shr
mov
js
lods
iretw
fstl
adcl
push
or
in
scas
inc
pop
xor
add
cwtl
or
adc
add
imul
cltd
cwtl
sub
popl
jae
jnp
push
sub
shrl
pusha
push
stos
mov
pusha
test
xchg
push
fwait
cmc
test
int3
pop
sti
cmp
jne
int
shll
popa
push
xchg
push
aam
jno
lock
ret
dec
loope
nop
dec
int
out
daa
test
bound
mov
cmpsl
ds
push
mov
sub
dec
add
add
add
cwtl
mov
divb
inc
push
mov
mov
andl
fucomi
pop
pop
arpl
les
loop
lret
int
push
in
mov
sub
xor
and
sub
xchg
sbbl
arpl
dec
andb
xchg
sbb
lods
dec
cmp
iret
xchg
test
lds
outsb
test
xchg
jg
leave
mov
mov
and
scas
mov
pop
xlat
add
add
lods
test
mov
pop
mov
or
xor
cmp
inc
popf
pop
xor
xchg
movsl
mov
push
mov
fistps
jns
push
sbbb
arpl
mov
aad
jecxz
jge
dec
roll
inc
inc
lods
and
lret
lret
out
outsl
mov
mov
and
and
lret
mov
aam
adcb
nop
in
lea
in
sahf
ljmp
lods
add
add
in
cmp
icebp
ljmp
adc
push
ret
fs
pop
xor
mov
into
xchg
lahf
xchg
pop
stc
out
pop
push
push
push
insb
inc
dec
or
and
jno
push
xchg
jns
in
mov
sbb
xor
int
or
jecxz
mov
pop
mov
pop
gs
je
xchg
cmp
lahf
cs
ds
xchg
cli
pusha
shl
and
mov
jb
xchg
inc
sub
mov
in
test
jae
arpl
mov
mov
dec
push
les
movsb
add
jmp
stc
test
pop
in
pushf
mov
sub
xchg
jbe
je
inc
insl
inc
gs
lcall
ss
fcmovne
ret
stos
rorl
jmp
mov
icebp
cmpsl
push
jmp
cltd
or
mov
cwtl
xchg
mov
and
adc
pusha
ret
sub
jl
rcrl
push
push
push
xchg
xlat
xor
mov
and
sahf
outsb
pop
cmp
rcrb
data16
lods
pusha
push
ror
lret
adc
and
rcrl
adc
clc
loop
ss
xor
mov
enter
adc
mov
jb
inc
xadd
and
or
sbb
cmp
jl
inc
sbb
std
das
addps
cmp
adc
xchg
enter
loope
das
iret
scas
in
je
sbb
loop
add
add
mov
mov
dec
inc
push
gs
mov
or
pushf
push
es
popl
sub
imul
mov
xlat
mov
jmp
loopne
sub
inc
add
nop
mov
pop
adc
push
out
cmp
add
push
lds
imul
jg
popf
jge
cltd
cmp
es
sbb
cmp
mov
fmuls
mulb
push
cmp
popa
xor
mov
stos
ds
test
mov
push
cli
add
aas
mov
daa
mov
mov
shrl
inc
scas
pop
adc
imul
je
inc
sahf
dec
lret
mov
add
jb
mov
addr16
jp
dec
inc
push
sub
ficompl
ja
cmp
stc
xor
lds
jns
dec
lret
and
mov
movsl
shll
xchg
bound
mov
and
add
mov
inc
lcall
push
stos
rcll
cli
out
pop
fucomi
sbb
cli
adc
sahf
jnp
fwait
in
add
sti
mov
ret
in
icebp
cmp
xor
and
push
scas
test
xchg
sbb
pop
or
stc
imul
aad
leave
rcr
push
sbb
or
jae
out
or
push
outsl
pushf
add
mov
es
lcall
sbb
push
xchg
scas
pusha
pop
dec
adc
jb
cmpsb
jecxz
sahf
dec
out
inc
jl
jo
std
insb
stos
mov
loopne
push
les
repz
add
add
xchg
lret
mov
mov
inc
mov
mov
inc
xchg
fstp
xchg
inc
pop
lahf
incb
mov
and
shll
add
push
push
sbb
adc
inc
or
or
jp
gs
xchg
call
loopne
sbb
push
jae
jae
pushf
aam
loop
dec
enter
or
dec
pop
and
pop
dec
add
ja
xchg
or
enter
push
ljmp
hlt
into
int3
xlat
dec
adc
lret
cmpsl
jmp
adc
imull
or
dec
sub
insl
and
lock
clc
nop
dec
sbb
mulb
outsl
mov
popa
sub
hlt
std
int3
fdivl
xor
shlb
mov
lods
xor
in
sbb
repnz
jno
loope
orb
push
cmp
add
lods
mov
dec
les
je
roll
lret
jnp
fistpll
and
lret
es
mov
sahf
jg
stos
clc
imul
mov
fistl
outsb
int
shl
sahf
fsubrs
pop
mov
ds
push
pop
stos
icebp
scas
sbb
mov
adc
in
inc
mov
push
cmp
add
test
test
inc
enter
add
leave
dec
fidivs
std
imul
insl
pop
xchg
mov
js
and
mov
fnstsw
fldl
xor
out
mov
mov
pop
imul
adc
mov
lret
adc
xchg
lret
aaa
cmp
push
decl
idiv
sub
movsb
ljmp
add
dec
and
imul
mov
lods
pop
clc
lods
xchg
cmp
and
fiadds
dec
movb
out
movsb
xchg
mov
addl
xchg
insl
sahf
add
jbe
pop
mov
inc
sub
adc
jb
imul
fwait
arpl
push
push
cmp
sgdtl
add
and
push
daa
adc
ret
lock
ja
xchg
mov
cmpsl
jp
push
enter
cld
lret
push
dec
fisubrl
cmp
cmp
int3
dec
mov
out
fcoms
imul
idivb
stos
adc
mov
test
mov
add
cmc
fs
jae
and
in
push
les
mov
cwtl
ljmp
push
cmpsb
push
jle
xor
mov
das
icebp
sub
lea
shlb
