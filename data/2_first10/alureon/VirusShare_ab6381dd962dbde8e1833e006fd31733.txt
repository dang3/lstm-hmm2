push
mov
mov
mov
sub
cmp
add
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
lea
test
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jb
push
push
mov
mov
mov
add
sub
mov
lods
xor
stos
sub
sub
sub
test
add
add
rol
lea
test
jne
pop
pop
pop
ret
push
mov
sub
sub
sub
mov
add
mov
push
xor
cmp
mov
je
add
sub
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
add
jmp
cmp
je
push
add
pop
mov
test
jne
jmp
lea
push
push
lea
push
push
mov
mov
call
mov
mov
mov
add
subl
sub
cmpl
jne
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
add
cmp
jb
mov
add
xor
cmp
jbe
add
sub
cmp
jb
pop
pop
xor
inc
ret
push
mov
sub
add
lea
push
mov
mov
mov
mov
rep
push
push
pushl
mov
push
call
test
mov
je
push
push
call
mov
movzbl
lea
cmpb
jne
movb
mov
mov
mov
rep
mov
mov
mov
mov
lods
sub
add
mov
add
sub
xor
add
cmp
sub
stos
cmp
add
sub
sub
sub
mov
add
sub
rol
push
add
pop
jne
mov
mov
mov
movzbl
imul
xor
push
add
pop
sub
jne
cmp
jne
pushl
pushl
pushl
call
mov
mov
mov
rep
push
push
pushl
mov
call
xor
pop
push
add
pop
pop
pop
leave
ret
push
mov
sub
add
push
push
mov
call
test
pop
jne
push
mov
call
test
pop
jne
push
push
mov
call
pop
xor
push
push
push
mov
call
push
xor
pop
movl
lea
rep
lea
push
mov
call
cmp
pop
jne
cmpl
jae
movzwl
test
jne
push
pushl
pushl
call
jmp
push
push
push
call
ret
jmp
push
mov
call
pop
mov
call
xor
push
add
pop
pop
leave
ret
cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
push
xor
mov
mov
scas
je
lea
test
jmp
mov
mov
pop
leave
ret
push
mov
sub
sub
push
push
xor
mov
push
push
pushl
mov
push
call
test
mov
je
sub
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
lea
test
jne
mov
push
push
pushl
push
call
test
jne
jmp
xor
jmp
mov
mov
mov
mov
rep
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
jmp
mov
movzwl
imul
add
mov
lea
test
cmp
jne
testl
je
push
push
mov
mov
mov
sub
add
xor
xor
mov
sub
cmp
add
and
mov
sub
cmp
sub
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
push
mov
xor
add
mov
cmp
movzwl
push
lea
mov
jbe
lea
mov
xor
test
je
mov
and
neg
sbb
and
add
add
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
lea
push
push
push
push
mov
call
test
je
movzwl
incl
sub
addl
add
cmp
jb
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
mov
add
cmp
sub
mov
andl
mov
mov
add
mov
sub
addl
add
mov
push
lea
push
mov
mov
mov
mov
rep
mov
mov
mov
mov
add
sub
sub
mov
lods
xor
stos
sub
cmp
sub
sub
add
add
rol
add
jne
mov
sub
add
mov
imul
add
mov
mov
neg
imul
add
add
add
mov
push
lea
push
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
mov
mov
mov
mov
rep
mov
add
add
decl
mov
mov
jne
addl
test
addl
pop
pop
leave
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
push
push
push
push
push
pushl
mov
push
call
mov
push
pushl
mov
call
cmp
mov
mov
jne
cmp
jne
push
push
push
mov
call
xor
push
push
pushl
call
mov
pop
pop
pop
ret
push
mov
add
test
sub
push
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
test
mov
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
add
push
push
xor
cmp
push
je
mov
jmp
push
mov
call
cmp
mov
je
cmpl
jne
lea
call
push
push
pushl
mov
push
call
mov
test
mov
jne
xor
jmp
mov
mov
mov
rep
pushl
pushl
pushl
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
pushl
push
call
mov
test
mov
je
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
pushl
push
call
mov
mov
sub
xor
cmp
mov
je
mov
cmp
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
add
test
add
mov
mov
mov
add
addl
addl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
mov
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
movzwl
xor
test
mov
jbe
mov
mov
mov
addl
addl
push
pop
rep
mov
add
add
add
mov
movzwl
add
cmp
jb
push
push
pushl
mov
call
mov
mov
mov
push
pushl
add
pushl
pushl
call
pop
pop
pop
leave
ret
pop
popa
add
inc
inc
add
in
inc
add
jns
sub
sahf
inc
into
in
ja
cld
xor
jle
movsb
std
mov
mov
xchg
jnp
push
out
dec
faddl
and
fldt
xlat
cmc
mov
orl
sub
xchg
pop
scas
inc
outsl
loopne
xor
mov
in
pop
out
scas
pop
mov
sbbl
mov
enter
loopne
or
pop
loope
test
int3
cmp
ret
mov
fidivl
jmp
lds
xchg
cmp
fidivrl
fisubrl
dec
jp
les
inc
pushf
fisubs
pusha
push
sbb
shlb
repz
fildl
dec
ss
mov
jb
add
or
jb
cmp
lods
sahf
nop
inc
mov
les
repz
repnz
aad
mov
sbb
mov
lds
imul
push
fdivr
ror
cmpsl
jle
jl
out
leave
nop
push
fstpt
movsl
repz
shl
cld
mov
ret
and
jge
lods
sbbl
jno
jecxz
arpl
xchg
xchg
rcr
loopne
insl
inc
pop
loopne
pop
outsl
pop
and
daa
leave
xor
pop
sub
loop
popa
jae
add
inc
outsb
addr16
popw
lods
mov
jmp
mov
sti
stos
jecxz
jmp
mov
aaa
out
mov
pop
fnstcw
mull
xchg
adc
movsl
sbb
mov
add
pop
dec
ds
pop
movsl
pushl
adc
les
scas
mov
xchg
stos
cmp
sbb
jne
testb
jae
xchg
popf
ljmp
and
lods
mov
mov
pop
and
push
fs
mov
inc
xchg
aaa
fwait
dec
or
xchg
lods
into
mov
add
mov
cltd
pop
stos
lods
scas
lods
jp
fbld
fbstp
pop
jae
sti
ss
bound
mov
jo
mov
jle
leave
stc
sub
es
cwtl
mov
mov
fmuls
imul
repz
sub
jno
jae
or
sbb
mov
push
aam
ja
test
xor
wrmsr
repnz
test
je
mov
test
fisubrs
add
jbe
inc
mov
int3
shlb
and
enter
pop
jecxz
loopne
cmp
mov
shr
testl
daa
adc
xchg
mov
cmp
add
ljmp
mov
outsl
inc
aaa
xor
fiaddl
sub
jnp
dec
lret
leave
add
cmp
shlb
push
fdivrs
movsb
and
enter
xchg
jl
or
loope
aam
lock
sub
popa
stos
inc
aad
cltd
out
rclb
jne
icebp
adc
dec
test
cmp
les
repnz
dec
sbb
mov
popf
lea
into
fwait
pop
std
das
cmp
out
jb
js
cwtl
sub
xor
lahf
pop
push
movsl
mov
sahf
mov
popa
in
aad
test
in
popa
add
fidivs
push
rolb
and
incb
adc
out
aaa
test
lods
mov
sbb
and
hlt
fstps
inc
cmp
mov
out
shll
mov
xchg
cvtps2pd
je
and
aad
push
fisttpl
std
and
cmp
push
xchg
push
in
loopne
leave
add
inc
mov
push
or
insl
test
sti
xchg
fimull
mov
jno
daa
mov
ss
jb
jb
xchg
jbe
dec
or
aaa
std
clc
push
sbb
ja
mov
in
rcrb
into
aas
pop
push
push
repnz
ljmp
cltd
ds
ss
cmpsl
mov
inc
push
gs
or
les
repnz
mov
out
dec
add
lret
fsubrs
cmc
outsb
xor
jge
andb
sar
xchg
sub
jle
xor
std
gs
or
pop
enter
inc
cmc
fwait
jp
dec
out
lock
cmpb
fdivrs
adc
sub
shl
push
repz
jns
xor
js
cmp
arpl
and
sub
bound
dec
pop
xor
mov
aaa
in
repz
aam
scas
xchg
cmpsl
xor
xchg
cmpb
pushf
push
imul
xor
jg
bt
out
pop
gs
push
push
push
dec
lcall
and
test
clc
notl
in
sbb
adc
mov
inc
dec
out
push
adc
insb
and
lds
pop
xor
repz
and
ljmp
ret
ror
lea
jo
dec
icebp
addb
idivl
std
subb
jp
mov
push
dec
outsb
push
xor
fstp
mov
std
cmp
xchg
sbbl
popf
mov
ljmp
dec
ja
pop
dec
sarb
mov
mov
cmpsl
out
mov
lods
mov
test
pop
cmp
fwait
test
idivb
movsl
mov
out
pop
inc
dec
out
sarl
scas
fisubl
fildll
scas
jg
addr16
arpl
and
add
std
stc
scas
and
push
fdiv
sub
insb
loopne
hlt
pop
mov
xor
outsl
sbb
jae
imull
mov
shlb
push
jnp
sub
pop
push
add
cld
call
cmp
pop
ret
cmpsl
ficoml
shrb
mov
outsb
out
mov
adc
adc
jle
addb
stos
shll
jae
in
pop
je
sbb
or
cs
mov
repz
xchg
inc
cwtl
stc
popl
or
jns
xor
mov
mov
jo
push
nop
je
xchg
xor
push
rcrb
inc
roll
cmp
in
cmp
pop
jbe
lret
int
pop
mov
ret
clc
mov
iret
xchg
push
cmp
sbb
fsubl
inc
adc
lcall
mov
ss
aad
mov
jge
fisubs
inc
std
arpl
xchg
into
aas
mov
std
sbb
add
mov
popf
outsl
adc
push
lret
xchg
dec
lcall
sub
xor
negl
test
add
fsubrl
and
stc
scas
sbb
insl
in
aas
lds
leave
les
push
mov
xorb
ret
pop
cmp
cltd
inc
data16
add
aaa
pop
mov
mov
dec
faddp
cmc
and
movsl
adc
insb
outsb
sbb
shl
mov
jb
ss
sub
xchg
popa
andl
mov
test
int3
and
sub
and
jae
jge
dec
ja
jnp
iret
push
push
mov
shll
ja
daa
jg
or
sub
out
in
into
mov
insb
xor
cmp
es
sbb
mov
jnp
fdivrs
cmp
stc
xchg
aaa
push
xor
adc
lock
mov
push
insb
xchg
cmp
add
mov
out
xor
ret
rcrb
inc
mov
jle
cs
add
lahf
adc
xchg
pop
hlt
adc
jo
aas
mov
push
cmp
cmp
cmp
xchg
pop
push
ja
adc
cs
shr
cmc
insl
daa
push
imul
hlt
cmc
les
stos
shll
je
push
data16
repz
pop
pop
fsubrs
mov
aaa
orl
mov
dec
cmp
js
sub
movsb
cs
dec
cli
nop
das
mov
cmpsb
mov
sarb
daa
shrl
imul
int
faddl
movsb
sbb
nop
imul
and
aad
fwait
les
sbb
mov
push
mov
outsl
rcll
pop
das
pop
dec
mov
kmovb
orb
ljmp
hlt
and
popf
xor
sbb
mov
add
andb
dec
mov
cmpb
ja
cmp
push
stos
add
scas
test
mov
sbb
iret
ret
and
cld
jno
cmp
push
stos
pop
mov
jmp
add
jb
mov
scas
sar
sti
lock
in
inc
sub
sub
std
repz
fisubrl
push
xlat
push
movsb
jne
sbb
insb
cwtl
and
or
cmpsb
in
into
aaa
inc
fimuls
shrb
cmp
ljmp
push
popa
test
repnz
xchg
mov
pop
std
jae
pop
into
jp
xchg
xchg
push
imul
and
arpl
mov
push
divb
inc
lret
xchg
cltd
testb
in
sbb
es
sbb
cmp
xchg
mov
mov
mov
jg
leave
xchg
mov
js
mov
out
in
popf
call
push
stc
sahf
push
leave
imul
push
int3
fwait
sub
cwtl
jne
sub
mov
loope
or
jmp
lret
mov
scas
mov
push
shrb
mov
inc
scas
cmpsl
inc
or
sbb
mov
rclb
sbbl
push
in
push
fwait
mov
stos
xor
pop
cmp
frstor
mov
adc
inc
lea
popf
cmpb
mov
jl
in
sbb
and
adc
out
mov
enter
dec
and
in
or
mov
test
cmp
lods
cmpsl
mov
cmpsl
xor
dec
push
add
jle
test
ja
xor
cs
jb
lret
add
arpl
mov
jge
sbb
cltd
cmp
push
lret
outsb
push
and
adc
daa
movsl
cmp
fwait
bound
lcall
and
mov
dec
cmpb
sarb
or
mov
imul
clc
scas
popa
mov
mov
inc
pushf
inc
inc
dec
roll
sbb
mov
movsl
inc
daa
cmpsl
enter
movsl
adc
lods
push
pop
or
out
inc
test
mov
xlat
loope
xchg
cmp
sti
sbb
dec
cs
xor
xor
add
mov
dec
mov
xchg
push
adc
jo
ds
fs
jge
popa
loop
jno
or
divl
imul
sbb
sti
xchg
stos
adc
mov
into
xor
pop
add
push
push
lods
jecxz
adc
inc
push
jb
bound
push
pop
jecxz
xchg
hlt
aas
lods
mov
inc
mov
ss
xchg
xor
shll
rol
mov
or
test
int3
std
insb
add
and
or
notl
adc
cmpsl
or
negl
nop
mov
add
dec
fdivl
or
add
inc
popf
ret
xchg
mov
scas
jle
cmpsb
or
dec
or
test
int
xchg
addr16
sti
ljmp
cmp
or
sbb
inc
daa
mov
lea
push
pop
sub
jnp
xchg
mov
lret
mov
lock
je
add
leave
aad
imul
outsb
sub
loopne
xor
ja
les
into
add
lock
sbb
and
mov
lock
xchg
add
repnz
sub
push
jb
bound
mov
xchg
ret
jno
inc
fnstenv
pop
fidivs
cmpsb
push
loopne
pusha
mov
aam
enter
lods
pop
inc
cmp
xchg
or
scas
shrl
je
pop
xchg
fistpll
add
jle
dec
xor
leave
mov
sarl
sub
cmp
sbb
mov
dec
jle
or
mov
cmpsl
sub
xchg
clc
imul
fcmove
mov
in
mov
mov
mov
push
insl
dec
cmp
mov
pop
ljmp
push
xchg
mov
mov
stos
addl
push
movsb
pop
fsubl
jb
push
dec
loop
imull
out
xacquire
loop
add
dec
cld
push
testl
mov
cmp
mov
jmp
ja
add
scas
or
push
mov
adc
push
push
rol
mov
sti
dec
sbb
fnstsw
xchg
cmp
or
pop
cmpxchg
gs
jns
ja
sbb
adc
mov
jae
xor
inc
imul
mov
iret
stc
mov
fs
aam
dec
mov
adc
or
dec
stc
xchg
ja
mov
or
or
cwtl
lds
rcll
inc
stos
das
imul
or
ret
loope
lods
shll
lahf
repnz
adc
sbb
in
mov
xor
mov
stc
dec
jo
xchg
push
test
rcl
je
scas
mov
lods
cs
sbb
mov
sbb
in
into
xchg
rcr
mov
sti
iret
inc
daa
bswap
add
jp
into
cmp
cmc
cltd
loope
ja
sub
clc
sub
ret
mov
test
dec
sub
mulb
xchg
inc
stc
mov
cli
stc
cmp
cltd
push
dec
adc
ljmp
adc
and
mov
ds
repz
push
jae
mov
or
fiadds
push
xor
enter
pushf
xchg
inc
mov
inc
or
addr16
lock
mov
aam
cmp
popa
mov
fsubrs
mov
orl
ret
test
ret
shll
es
mov
mov
shr
int3
fdivr
lret
sub
xor
mov
fimuls
not
pop
mov
shlb
xchg
mov
stos
jle
les
xchg
shll
imul
add
add
cmp
fsubr
sub
outsl
inc
stos
xchg
cmp
sub
mov
daa
popf
popa
pushl
lret
lea
mov
push
push
mov
or
jl
mov
add
dec
xor
call
or
insl
not
jne
dec
sub
adc
and
pushf
data16
cmp
and
fadds
negl
aam
repz
mov
adc
adc
sbb
sarb
sub
fidivl
lods
mov
mov
xlat
aam
or
jne
or
sub
cmp
adc
lret
jo
cmp
cltd
xorl
cmpsb
inc
jae
xor
sahf
jle
arpl
mov
stos
adc
fidivrl
add
mov
ficoms
mov
and
pop
sub
mov
mov
push
outsb
push
sub
aas
faddl
mov
adc
or
mov
inc
cmp
inc
scas
mov
in
mov
scas
xor
test
pop
mov
mov
adc
add
loopne
sub
std
shll
daa
scas
mov
loopne
js
jp
inc
and
fisubrl
ret
jmp
imul
sub
pop
orl
into
out
jae
lock
pop
sub
push
cmp
cmpsb
loope
in
fistpl
imul
pop
mov
add
lock
inc
in
roll
icebp
sub
mov
aaa
push
in
xor
sub
fdivl
and
inc
mov
sbb
fcompl
cld
sbb
outsl
mov
xlat
cli
test
mov
mov
xchg
xchg
sub
das
sub
sbb
jne
mov
arpl
lcall
ss
pop
lcall
lods
fistpll
inc
fwait
push
jmp
adc
push
mov
aam
mov
jl
out
jno
cmp
ss
dec
mul
out
cltd
clc
loope
loop
add
arpl
mul
pop
mov
or
std
mov
cwtl
dec
sbb
stos
and
cmc
imul
divb
mov
aad
orb
fcomip
or
lret
and
ss
roll
jg
inc
popa
and
push
ds
mov
jb
ret
mov
nop
xor
mov
xor
push
jmp
cld
xor
std
inc
jecxz
jno
pop
mov
and
mov
jl
mov
push
dec
sbb
mov
add
orb
push
aam
mov
jbe
sbbl
in
mov
push
loop
je
push
popf
das
sub
stos
dec
bound
rcll
mov
push
add
scas
pushf
ja
repz
jle
loop
leave
sub
push
mov
in
adc
dec
lods
and
xor
dec
mov
jb
and
stc
fwait
mov
stos
ret
mov
clc
push
xor
daa
mov
test
mov
adc
stc
mov
push
pop
call
jg
sbb
jge
cld
pop
inc
add
psllq
outsl
mov
loope
or
es
and
fs
cwtl
sbb
adc
rcll
adc
xlat
les
pusha
xchg
dec
or
xchg
lods
dec
sbb
int
jne
test
gs
xchg
adc
cs
test
dec
aaa
pop
mov
inc
and
and
ret
mov
gs
rorl
cli
test
sbb
cmc
inc
mov
push
out
cmpsb
test
fsubs
leave
dec
cmp
mov
xor
push
mov
in
insl
inc
jnp
mov
das
fsubl
dec
int3
xor
mov
ret
pop
inc
jnp
cmpsb
jecxz
insl
mov
fsubrl
loopne
sarl
xchg
push
fcmovnu
dec
lds
shl
insl
xor
adc
cmp
mull
scas
fwait
enter
cli
aam
in
add
xchg
pushl
imul
push
mov
test
add
out
mov
inc
lcall
movsl
fldcw
push
sarl
adc
aas
mov
fisttpll
outsl
pop
inc
sub
push
sahf
xor
cmp
jne
outsl
js
sbb
repz
cwtl
sbb
scas
in
cmc
imul
lea
mov
push
jae
dec
pop
call
fcmovbe
mov
mov
test
movsl
test
out
out
adc
push
pop
xor
mov
dec
std
stos
jnp
movsb
pop
xchg
xchg
movsb
popf
inc
sub
scas
outsb
clc
jb
push
xor
pop
aaa
test
adc
dec
or
outsb
fisttpll
mov
mov
jmp
sbb
or
ficoml
jnp
sbb
enter
xor
dec
lds
mov
std
mul
push
cmp
or
jnp
out
xor
scas
xor
cmp
lcall
mov
xor
push
test
stc
roll
fnstcw
and
orl
divl
xchg
mov
das
lds
les
pop
mov
repnz
xchg
push
jecxz
lcall
enter
push
push
faddl
and
jo
mov
cmpsl
pop
and
loopne
and
dec
aad
rorb
pop
pusha
movsl
push
pop
in
cmpsb
mov
push
ret
arpl
xchg
in
fdivl
jmp
divb
shrl
xchg
int
int3
dec
ss
mov
scas
imul
mov
les
fldenv
lret
cmp
sub
mov
enter
aad
push
imul
xchg
divb
aam
bound
jb
pop
fnstsw
loope
popa
popa
popa
pop
xchg
inc
pop
lods
ret
out
movsl
test
out
xlat
sbb
mov
and
xchg
sti
loopne
cmpsl
mov
push
mov
movsb
nop
aaa
xchg
add
pop
xor
jbe
pop
xchg
mov
dec
or
icebp
sub
xchg
mov
inc
push
mov
pop
popf
push
dec
imul
push
enter
xchg
jmp
js
xor
ficompl
pop
fucomp
dec
enter
mov
jb
ret
les
test
out
add
xlat
cmc
adc
sub
divb
orl
pop
les
orb
lods
idivl
inc
leave
mov
pop
lods
mov
jbe
int3
into
push
mov
adc
xchg
fnclex
jge
ja
mov
test
cmp
xor
sbb
cmp
xchg
sub
mov
pop
pop
andl
adc
scas
add
aam
pop
cmp
dec
xchg
in
les
subl
lcall
pop
xor
aam
pop
scas
cmp
or
sarl
xor
pop
push
and
or
adc
test
mov
xchg
andl
and
mov
jb
dec
sub
cmp
jge
stc
das
ds
push
dec
out
lods
jb
adc
daa
lds
push
mov
les
dec
add
pusha
dec
mov
fstpt
out
and
and
rorb
sbb
xchg
cmpsl
out
hlt
lcall
es
lret
or
ljmp
das
fisubrl
fdivrl
pop
popa
test
mov
nop
cmpsb
mov
inc
and
mov
push
insl
dec
sbb
sbb
push
jl
gs
ret
lods
mov
and
mov
ret
outsb
pop
adc
cmpsl
outsl
dec
xor
or
jmp
push
jne
xchg
popa
in
leave
push
cs
lods
in
jae
clc
push
aaa
mov
jp
loopne
mov
out
ret
and
or
je
in
pop
call
dec
aas
inc
push
inc
jmp
ret
sbb
popf
adc
or
pop
sub
xchg
push
sub
add
mulb
adc
add
testl
or
mov
inc
iret
inc
mov
lahf
faddl
sub
mov
in
jae
gs
mov
je
sti
into
xchg
enter
hlt
inc
loope
mov
aas
lods
shlb
lahf
add
lret
pushf
mov
mov
xor
aad
imul
pop
out
fincstp
or
call
imul
fidivl
call
jno
loope
es
dec
push
lock
cmc
frstor
mov
sbb
mov
xchg
mov
inc
xchg
add
sbb
and
mov
jbe
push
ljmp
sub
popa
stos
pop
cmp
and
popf
test
sahf
fisubl
mov
xchg
sub
cwtl
or
xor
push
mov
imul
test
pop
cld
xchg
jmp
mov
inc
pop
cmpsl
adc
int3
aad
adc
cld
push
enter
jno
jbe
or
sbb
into
ss
xchg
sub
lock
cmp
ss
lcall
out
ror
adc
fistpll
cmpsl
daa
xchg
popf
pop
sbb
mov
xchg
fnstcw
lcall
or
adc
adc
mov
cmp
mov
cmp
scas
shlb
ljmp
cwtl
mov
add
sbb
or
push
mov
add
jo
mov
inc
mov
cmp
or
xchg
int
push
mov
and
in
in
ret
ds
lods
jne
out
cltd
nop
cmp
scas
pop
rcr
pop
aas
push
sub
jne
pop
aaa
sbb
xchg
or
or
dec
dec
mov
xchg
cwtl
addr16
movsl
test
adc
imul
addr16
xchg
repnz
call
pop
std
js
ljmp
loop
pop
mov
aas
test
xchg
outsb
inc
rol
and
push
push
pop
and
push
fisubs
push
imul
arpl
inc
mov
inc
pop
push
pop
or
out
jne
and
cli
fs
and
clc
out
push
popa
cmp
and
and
push
stos
push
xlat
loop
mov
sub
fsubp
xor
inc
push
imul
ja
sbb
mov
rcrb
pop
negl
bound
mov
das
imul
int
add
testb
pop
push
xchg
aad
push
jl
test
add
xchg
or
pop
fimuls
pop
lds
sti
xor
sar
leave
jmp
scas
int3
mov
pop
add
es
aam
fcoml
repz
fwait
sub
jmp
and
out
jne
andb
cwtl
inc
enter
pop
xchg
adc
xchg
or
sbb
push
subl
out
rol
jl
mul
idivb
cmc
mov
sbb
addr16
filds
or
mov
hlt
negb
and
leave
fiadds
fldcw
divl
out
dec
jmp
mul
push
add
scas
pop
cs
and
jmp
mov
lahf
push
push
inc
lods
adc
and
mov
mov
dec
mov
mov
or
popa
add
int
aad
sbb
push
scas
idivb
push
sbb
aad
fwait
cmp
push
das
push
mov
dec
push
push
adc
mov
or
push
sub
inc
fstps
mov
cmpsb
jle
sub
mov
sbb
arpl
fildll
and
roll
mov
xchg
out
iret
inc
test
add
sbb
cwtl
test
mov
mov
cwtl
mov
cmp
pop
push
and
push
sbbl
lods
movsb
or
or
push
ja
dec
gs
popa
clc
push
jbe
xchg
in
mov
enter
cmp
int
push
push
push
and
xchg
cmp
xor
cmp
insb
out
int3
outsl
inc
jbe
or
add
xchg
lahf
pop
ss
rolb
dec
scas
mov
inc
fisubs
daa
jge
mov
shll
mov
jg
sub
mov
push
push
dec
push
dec
mov
jmp
push
dec
sbbl
ret
in
push
cmp
cmpsb
sbb
cmp
mov
ja
sarb
jmp
pop
sahf
jmp
mov
cltd
xor
fsubs
dec
xlat
outsb
cld
mov
mov
call
push
sarl
push
out
icebp
add
mov
and
jge
mov
test
idivl
push
flds
imul
jmp
mov
bound
out
outsb
xchg
aad
popa
lods
mov
loopne
push
in
and
leave
push
mov
sub
shr
je
sarb
push
xchg
mov
mov
jp
jbe
loopne
mov
or
data16
lret
jle
orl
push
stc
mov
fidivl
push
inc
xchg
adc
adc
cwtl
insb
cmc
cmp
mov
cli
cld
arpl
sbb
imul
sub
cmp
or
xor
mov
dec
xchg
dec
addl
iret
mov
cmpsb
sbb
push
add
mov
adc
xor
mov
mov
mov
and
repz
xchg
std
mov
push
sub
das
pop
ja
push
mov
mov
add
lock
sbb
fnstcw
cld
pop
sbb
je
cs
not
adc
add
cli
lods
out
jp
push
popa
nop
dec
and
aad
test
lret
mov
fdivrl
loope
pop
mov
adc
shl
fsubr
mov
cli
cmpsb
rcl
adc
mov
fs
add
cmp
cli
push
bound
pop
xchg
call
sbb
lcall
pop
int3
call
leave
test
popa
ds
cmp
orl
call
and
loopne
cmc
mov
pop
adc
jae
lcall
adc
adc
outsb
jb
lret
mov
test
sbb
push
adc
mov
adc
xchg
dec
cmp
cmp
mov
jno
push
jo
fcoms
xchg
xor
mov
enter
sub
mov
fcomps
bound
push
xlat
call
add
dec
xchg
pop
dec
iret
ret
push
inc
enter
iret
ss
loopne
mov
and
int
out
jg
jp
xchg
sub
cmp
mov
xor
ud0
mov
addr16
idivb
fwait
loopne
fimuls
lret
cmp
jge
aas
dec
sub
mov
stos
sbb
sbbl
mov
jle
in
stos
jne
push
cltd
into
andb
stc
cmpsb
jle
sbb
ret
test
sti
pop
hlt
cld
push
xor
pushf
es
dec
icebp
filds
cltd
xchg
jge
mov
add
adc
iret
jmp
cmp
and
pop
ret
fdivl
outsb
mov
mov
gs
aad
mov
push
lahf
loopne
loopne
out
adc
mov
add
rol
scas
mov
add
mov
xchg
sti
add
mov
das
pop
add
lock
jns
adc
cld
xchg
ret
stc
mov
lock
cmp
xlat
cmp
call
sbb
and
mov
dec
sub
test
xor
scas
cmpsb
es
jbe
sbb
push
in
iret
push
sub
xchg
xchg
ret
sbb
repz
in
inc
shll
shll
mov
or
push
add
or
inc
pushf
std
je
mov
mov
gs
or
lods
cmp
sbb
pop
repz
fwait
mov
loop
inc
xor
adc
and
push
data16
ds
xor
ret
shrb
mov
dec
inc
inc
jge
pop
rcll
cli
in
jbe
aaa
dec
addl
xchg
mov
mov
pop
jb
cmc
sbb
loop
aad
jnp
adc
mov
and
sub
pop
pop
push
pop
ds
cmp
adc
lahf
pop
in
cmp
int3
dec
ficoms
or
es
and
in
scas
stos
sub
imul
orb
mov
xor
pop
ficomps
repnz
xchg
mov
sub
sbb
sbb
int
sbb
mov
popa
xchg
data16
sub
mov
mov
arpl
mov
test
imul
or
pop
test
pop
xorl
adc
jecxz
mov
xchg
jp
inc
and
lea
mov
das
push
push
sbb
stos
lds
sub
and
mov
push
pusha
inc
fisttpll
hlt
jnp
mov
mov
shlb
sbb
fbstp
jecxz
dec
mov
lds
loope
mulb
into
je
sbb
xchg
insb
jmp
pop
out
push
negb
test
xor
mov
inc
cwtl
insl
test
roll
mov
fnsetpm(287
inc
shll
dec
mov
fisubrl
sub
sub
jmp
out
pop
mov
out
andb
xlat
jo
pminub
out
dec
es
mov
and
es
repz
rorb
gs
ds
jnp
adc
inc
and
or
stc
mov
pop
push
cwtl
sub
and
jp
cli
ds
test
inc
jg,pt
and
pop
out
mov
lds
mov
mov
sub
nop
loopne
xor
lods
into
es
aaa
or
out
sbb
scas
enter
icebp
xchg
push
inc
mov
adc
inc
je
arpl
je
xchg
imul
xchg
xlat
pop
xchg
in
aas
xor
inc
jp
imul
loop
pmulhw
popa
lods
lret
mov
and
daa
mov
jmp
sarb
or
and
addr16
movsb
pop
arpl
jno
lret
scas
add
jbe
push
push
xchg
mov
rcll
in
mov
xchg
stc
pop
lods
push
or
or
push
xor
ss
daa
shrb
mov
cmpsb
push
pusha
sbbb
xchg
xor
add
mov
les
loopne
adc
gs
or
insb
test
push
add
dec
dec
xchg
jge
push
ret
popf
call
adc
sahf
inc
lahf
fildl
loop
push
and
roll
xchg
sbb
pop
pop
xchg
rorb
xor
ret
push
pusha
dec
fwait
add
xor
aaa
jecxz
dec
repnz
mov
xor
sub
jne
ja
push
std
out
sub
popf
repnz
mov
fiaddl
xchg
xchg
inc
pop
inc
add
or
fsubrl
push
fstpl
bound
cmp
jbe
mov
dec
test
sbb
inc
iret
imulb
negl
stos
popa
sahf
jmp
rolb
pop
dec
sub
add
xor
bound
or
lret
in
fnsave
in
out
push
test
xchg
paddusw
pop
dec
negb
fldl
loop
cmp
hlt
pop
sub
adc
jmp
popa
test
jmp
int3
icebp
push
dec
sub
lahf
icebp
push
imul
mov
inc
jp
pop
popf
out
cwtl
and
add
test
scas
xchg
fsubrs
adc
orl
xor
cmp
stos
xor
fcmovb
movsb
pushf
mull
mov
testl
xchg
popa
enter
add
leave
das
jo
clc
ret
ja
sbb
push
cltd
push
inc
inc
push
xchg
outsb
out
adc
loopne
pop
cli
sub
mov
or
icebp
fdivs
or
mov
mov
imul
cmp
cli
mov
ret
dec
cmpsl
xor
shll
bnd
add
mov
in
jge
jo
rolb
jg
xchg
into
outsb
mov
pop
iret
in
jle
test
push
adc
push
out
cmp
lret
and
idivl
ja
cmp
fwait
cmpsb
cmp
adc
out
icebp
nop
cmpsb
loop
data16
xchg
dec
mov
sbb
pop
adc
pusha
imul
dec
xchg
push
dec
shlb
inc
and
cmpsb
test
fmul
jbe
pop
out
mov
fcomp
cmp
call
xchg
mov
dec
frstor
arpl
insb
fmull
mov
aam
je
sbb
mov
push
jl
stc
movsb
nop
les
fwait
mov
inc
stos
sbb
icebp
cmc
popf
cs
insw
icebp
lret
jae
xchg
fisubl
cli
out
ret
cmpsl
sbb
call
or
je
pop
inc
or
sbb
add
rcr
or
xchg
je
add
pushf
jg
xchg
and
sub
jle
jecxz
stos
incb
ror
and
push
jle
cmp
enter
data16
scas
inc
test
fidivs
stc
aam
pop
sub
shrb
nop
or
popf
sbb
sbb
xchg
add
lcall
inc
push
movsb
cs
hlt
lods
mov
test
jmp
adc
mov
popa
fistpll
sbb
andl
inc
xlat
ffreep
jp
fimull
and
ljmp
adc
hlt
adc
or
dec
scas
enter
movb
or
cs
and
aaa
inc
dec
sub
scas
into
push
test
or
loopne
or
add
xchg
test
cmp
fs
in
imul
and
mov
sbb
sub
xchg
cmpsl
pop
lret
mov
cmp
lret
int3
out
xor
push
mov
push
push
push
ret
mov
dec
jo
jp
outsl
push
inc
lahf
adc
and
lahf
fisttpl
test
dec
dec
notb
jo
xchg
test
mov
and
daa
push
insl
pusha
pop
sub
cmpsb
cmp
jns
jnp
ror
xchg
adc
pop
das
jbe
adc
dec
mov
xchg
call
xor
test
jge
or
xor
sub
mov
xor
cltd
mov
mov
data16
adc
jl
es
xchg
pop
sarb
add
mov
clc
mov
sahf
xchg
ljmp
aaa
in
sarl
mov
cmp
inc
lea
fcomps
xor
mov
mov
cmpsl
inc
sarb
lods
dec
xchg
adc
lahf
lods
int
arpl
insl
jmp
insl
pusha
fadds
jo
mov
jmp
adc
sub
inc
xchg
je
jne
pop
xor
adc
mov
cmovp
mov
pop
mov
xchg
lret
negb
movsb
rorl
sarl
test
je
push
mov
mov
jb
jno
popf
push
fisubrs
adcb
insl
ljmp
cs
jle
in
mov
in
mov
orl
push
add
push
clc
or
xchg
jge
jae
xchg
xor
jmp
push
cmpl
movsl
sbb
outsb
fs
mov
jmp
andl
and
orb
data16
mov
notb
inc
inc
dec
jl
fstps
pop
jp
xor
pop
cmp
pop
add
push
inc
lock
dec
and
mov
icebp
mov
mov
inc
mov
jne
dec
in
ljmp
add
divl
test
lret
in
movsl
inc
out
addr16
in
or
inc
pop
and
out
cmp
repnz
jno
adc
push
jle
ret
mov
xor
xchg
addl
mov
xor
test
or
out
sub
dec
xor
outsl
push
fucomi
out
push
js
daa
orb
push
icebp
add
rclb
or
sbb
sbb
loope
scas
mov
stc
add
clc
and
test
cmp
std
arpl
xchg
mov
stos
adc
cld
and
inc
pop
loop
fsubr
lcall
ljmp
inc
mov
shlb
pop
jp
lods
pop
mov
and
das
mov
test
and
andb
jb
lret
pop
push
dec
mov
data16
jo
jnp
mov
adc
mov
aam
push
push
shrl
std
mov
jo
or
fstp
xor
pushf
dec
lock
pop
push
lahf
adc
cmp
int
pop
rcrb
push
imul
pop
pop
jne
pop
cmp
clc
inc
mov
adc
jge
add
adcl
jne
sbb
sub
jmp
adc
loop
fbld
mov
jp
mov
dec
or
xor
ret
push
leave
sbb
test
repz
repnz
inc
cmp
xchg
or
cmpsb
xchg
sub
xchg
jns
pop
or
push
cwtl
rcrb
cmp
jl
jne
inc
fmull
scas
push
xchg
sbb
cli
push
pop
or
jno
adc
pushf
jb
int3
hlt
adc
pop
stos
outsb
push
out
jae
mov
cmpsl
mov
and
inc
mov
cmpsl
out
stos
jno
pusha
ret
jp
in
dec
pop
mov
jbe
pushf
xchg
jns
mov
add
xchg
pusha
lcallw
mov
pop
or
lahf
cld
cmp
dec
mov
bound
and
pop
es
cltd
icebp
cmp
push
das
dec
mov
je
and
and
stos
or
jp
cltd
xor
mov
imul
fnsave
pushf
enter
mov
aas
mov
in
in
call
enter
sub
addb
xor
div
inc
rolb
adc
repz
push
dec
sub
pop
loopne
push
and
in
or
andb
clc
dec
cmp
pop
rcl
jo
bound
xchg
push
cmp
and
xor
imul
cmp
mov
push
scas
cmp
enter
or
adc
inc
fstps
enter
jmp
ljmp
iret
pop
pushf
mov
mov
jbe
jnp
or
cmp
imul
jno
fistps
iret
cmp
andps
addr16
push
and
push
cmp
fsubrl
ret
lods
fs
rcrl
sbb
pop
mov
int
dec
lret
sbb
fwait
lret
add
cltd
and
xor
push
fdivrs
add
adc
mov
inc
sbb
sub
pop
bound
jnp
inc
sti
test
int
fdivs
aad
push
sbb
int
sbb
dec
adc
inc
push
int
dec
aam
adcb
scas
in
sbb
cmp
xchg
jo
stc
into
mov
gs
push
lahf
add
adc
loope
bts
inc
jecxz
fwait
lock
ret
pop
scas
ret
xorl
scas
add
int
jecxz
fisubs
aad
andl
pop
fcoms
xlat
jle
int3
jp
je
jb
test
pop
xchg
les
mov
xchg
sub
pusha
je
jge
pop
shrl
push
or
and
lret
jge
jo
xchg
leave
icebp
mov
lds
divl
xor
fs
xchg
pop
clc
jmp
roll
xchg
lock
dec
mov
test
popf
xchg
jg
jns
icebp
loope
ret
in
dec
inc
in
sbb
pop
push
loope
in
adc
xor
loopne
shr
inc
gs
or
loopne
sub
out
dec
ja
cli
push
mov
add
or
cmp
cmp
insl
fimull
xchg
loope
pop
mov
lahf
mov
das
mov
push
xor
divb
lods
mov
push
in
outsl
loop
add
stos
js
add
and
sarb
xchg
sub
cmp
inc
loope
daa
test
adc
jb
dec
push
lds
out
push
hlt
lret
xor
out
in
ret
orb
or
jmp
jne
std
cltd
std
xchg
scas
shrb
int3
push
xchg
in
mov
jecxz
add
xchg
mov
in
inc
mov
orb
fmull
mov
arpl
xor
scas
popa
sub
pop
xor
adc
sub
pop
lock
es
pop
cmpsl
js
jo
stc
ja
lret
inc
incl
jb
jo
adc
xchg
pusha
inc
jg
fs
enter
or
xchg
xchg
cmc
push
stos
pop
cmc
movsb
adc
sbb
xor
jmp
add
mov
xchg
enter
rorb
mov
mov
scas
inc
js
loop
in
std
sub
btrl
jo
xor
inc
nop
push
in
hlt
pop
imul
mov
sub
into
test
and
mov
jp
jb
jle
es
jg
mov
call
push
subb
mov
cmp
push
pusha
aam
sbb
mov
sub
jg
pop
fisttpll
iret
mov
adc
mov
adc
or
push
loopne
enter
dec
aad
insl
popf
dec
daa
jl
call
repz
jmp
jge
jbe
stos
inc
jp
push
rcrb
imul
sbb
psllw
dec
jb
inc
xor
pop
daa
inc
xorb
into
sti
cmp
push
adcl
test
sbb
mov
pop
insl
call
mov
sub
pusha
sarl
lcall
and
fsubrs
dec
inc
cmp
mov
adc
arpl
lahf
push
xchg
sbb
xlat
mov
les
arpl
mov
xchg
ds
in
ficoml
test
and
jbe
jb
mov
pop
jns
jecxz
shll
and
test
mov
cs
mov
adc
xor
push
mov
jne
call
mov
xchg
lret
ret
dec
adc
push
mov
jge
sub
and
outsl
dec
or
movsl
outsl
fstl
mov
cmp
dec
iret
call
push
lods
movsb
test
outsl
repz
addr16
scas
inc
call
or
xchg
push
push
out
jmp
adc
inc
das
daa
lock
into
sbb
or
jl
cmp
jbe
xor
add
lock
ss
repnz
jmp
insl
push
mov
scas
scas
sbb
jp
xchg
jno
mov
cmp
add
test
mov
popf
xchg
divb
popf
dec
into
repz
mov
sub
jge
and
add
xchg
mov
iret
adc
rcr
jge
adc
adc
icebp
jae
cltd
dec
cli
mov
das
cmp
imul
ret
cmp
ss
or
push
xor
push
dec
sub
pop
jae
push
fucomi
mov
mov
sub
inc
mov
xchg
push
xchg
scas
jmp
loop
lods
jge
out
pop
fdivrs
sub
fists
xchg
add
push
push
sahf
add
out
mov
pop
imul
mov
loope
cmp
jo
lahf
xor
push
or
imul
cmp
sbb
int
test
jl
dec
out
inc
jne
aad
mov
cmc
repz
out
loopne
mov
mov
dec
xor
pop
xlat
inc
cld
dec
sub
sar
adc
shld
pop
mov
lahf
sarw
jbe
gs
push
pusha
pusha
mov
sahf
jnp
lods
xchg
sub
out
pushf
lock
scas
push
jecxz
mov
pushf
jle
iret
pop
lds
fwait
jbe
adc
dec
push
lea
jg
daa
in
add
pushf
mov
cli
movsl
or
mov
mov
sub
add
pop
loope
outsb
shlb
add
jmp
xchg
cltd
psubw
sub
ljmp
ror
push
mov
cmp
test
and
jg
loope
movb
les
or
push
cmpsl
jae
dec
xchg
gs
lcall
in
xchg
push
mov
test
mov
mov
inc
adc
stc
popf
hlt
sbb
xchg
inc
xchg
jne
loope
mov
mov
dec
dec
inc
repz
call
jno
lods
sbb
or
in
dec
add
loop
cwtl
jo
sbb
mov
mov
gs
ret
mov
lcall
jecxz
sbb
jne
pop
shlb
lret
add
add
push
sarb
mov
push
scas
pop
not
loope
mov
cmpsb
lret
adc
lret
mov
test
popf
push
mov
sub
jns
pop
aad
xchg
sti
faddl
xchg
cmc
xchg
inc
and
sahf
mov
jp
subl
rorl
rcl
shl
pop
int
es
shl
xchg
cmp
push
mov
outsb
inc
mov
sub
outsl
jne
ss
adc
clc
jge
xor
xchg
xchg
jmp
repnz
lea
mov
mov
pop
dec
xchg
lahf
insb
int
add
mov
inc
inc
push
popa
mov
xor
int
sbbb
test
inc
adc
pop
insl
dec
lahf
jno
gs
xor
pop
xor
push
push
dec
fimull
mov
cmc
dec
mov
lret
cmpb
insl
pop
xchg
xor
int3
xor
pop
or
sbb
icebp
dec
and
sbb
loopne
lock
sbbb
xchg
mov
inc
push
sub
xchg
fsubs
std
fiadds
fucomp
mov
mov
xor
xor
adc
sbb
je
inc
xlat
mov
mov
test
cwtl
fcmovnbe
nop
inc
mov
movsb
imul
and
ds
lea
out
scas
rolb
pop
fstpl
daa
adc
mov
mov
xchg
arpl
lea
clc
adcb
jle
dec
call
and
and
aas
sub
insb
scas
aas
imul
std
scas
insb
out
int3
imul
mov
ja
dec
fstpl
push
lcall
leave
outsl
lea
or
xchg
and
in
icebp
jmp
and
mov
loopne
mov
sahf
in
fcomps
push
push
xchg
cmp
cli
xchg
aaa
popf
jp
push
jmp
lret
inc
cmp
xor
cmp
push
lret
cmpsb
punpckldq
mov
iret
loopne
fistl
out
jbe
int3
push
lret
cli
stos
dec
popl
push
pop
repz
daa
pop
jp
imul
push
outsl
jbe
imul
and
and
sarl
pop
dec
push
jb
add
sahf
jnp
or
das
dec
das
jl
push
pusha
test
test
leave
adc
add
and
mov
mov
ss
jb
mov
inc
fildl
xchg
stos
xchg
mov
fidivl
xchg
push
mov
jge
shll
pop
shlb
cmp
popl
xchg
and
into
xchg
pop
iret
push
dec
mov
sbb
ljmp
sbb
jno
ror
xchg
lds
jnp
int3
loopne
sbb
out
fwait
sti
paddd
movsl
mov
daa
xchg
and
jl
jmp
fcoml
fldt
ljmp
in
push
leave
adc
aas
mov
mov
imul
push
ljmp
ficoms
or
inc
stos
into
addr16
imul
xlat
and
test
lods
cmp
pop
mov
shll
test
iret
mov
pop
pop
test
xchg
pop
xchg
inc
lahf
mov
jge
shll
inc
shl
popa
sbb
sub
sub
mov
ja
jl
lret
ss
in
sbb
push
std
outsb
mov
push
jbe
mov
js
cmpsl
dec
xchg
push
int3
lea
or
sahf
push
imul
je
mov
lea
push
aas
movsb
ret
sar
js
aad
mov
arpl
les
xchg
stos
fcoms
or
jmp
gs
fcoms
pop
jp
xchg
jo
xor
es
rol
or
imul
xchg
push
hlt
mov
dec
aam
leave
addl
mulb
sub
lea
in
mov
sub
bswap
loopne
cld
jns
mov
mov
dec
shll
rcrl
in
mov
xchg
rcr
xchg
addr16
xchg
xor
jg
pop
into
sbb
dec
orb
fwait
repz
stos
and
mov
mov
js
js
pop
scas
cmpsl
popa
pop
or
xor
mull
nop
lods
mulb
lea
cmpsl
in
push
shl
adc
xlat
ljmp
add
jns
cmp
push
imul
dec
sbb
ljmp
test
push
fisttps
adc
clc
xchg
jnp
fnsave
sub
sub
pop
test
test
jns
or
inc
arpl
cmp
xor
add
inc
daa
ret
mov
push
pop
xchg
iret
cmp
and
sub
cltd
loope
in
imul
cli
mov
xchg
mov
icebp
add
dec
push
lods
adc
outsl
sub
bound
push
popf
push
and
pusha
jb
icebp
cmp
pushf
push
int3
sub
bound
in
cmp
mov
jae
mov
fcoml
fldenv
rcll
bound
jns
inc
xorl
pop
loop
lods
push
icebp
lahf
pop
jno
adc
jbe
std
das
adc
cs
push
mov
pop
cmpsl
loope
push
dec
lahf
hlt
and
jmp
idivb
jne
addr16
pop
and
mov
cs
test
add
int3
add
mov
pop
cmp
ret
cld
iret
xchg
pop
jns
ss
out
inc
cmc
daa
ljmp
scas
ljmp
push
push
push
fstl
movsl
and
lds
fcmovu
add
shlb
or
iret
cmp
mov
into
scas
add
jmp
pop
cmpb
lcall
cmp
and
mov
insb
or
das
xor
sbb
loop
and
lcall
xor
pop
nop
jno
pop
xchg
or
sbb
in
dec
sbb
lock
rclb
xor
xchg
test
loop
rolb
int3
sbb
or
ss
sbb
inc
and
cli
fpatan
loopne
ss
nop
enter
mov
inc
mov
add
fs
js
fldcw
dec
cmc
ret
arpl
xlat
push
loop
lcall
push
nop
cmpsb
cmc
negl
rcrb
testl
mov
mov
in
mov
mov
hlt
das
mov
mulb
cs
sbb
inc
aad
data16
scas
mov
lret
xor
mov
sbb
xchg
lods
xchg
mov
lods
push
mov
dec
sub
iret
jecxz
das
fmuls
jae
mov
dec
jg
sub
dec
or
stc
mov
or
test
jb
in
loop
ret
add
inc
or
dec
ficomps
inc
ret
inc
push
lret
xchg
dec
pop
mov
jl
inc
cmp
lret
andb
lret
add
in
mov
sbb
ja
inc
mov
addb
pcmpgtb
inc
lea
jno
ss
and
push
pop
mov
lds
xchg
fisttps
js
clc
lods
cmp
inc
xchg
xchg
fs
popf
aad
mov
popa
in
fiadds
pop
pop
and
xchg
xchg
shrb
je
add
mov
ljmp
xchg
xchg
xchg
and
mov
mov
stc
dec
push
enter
cltd
fisubrl
cmpsb
xor
ljmp
pop
ljmp
cmp
decl
in
in
stc
push
pusha
inc
push
pop
jns
clc
dec
stos
mov
stos
into
mov
les
sub
xchg
dec
inc
push
lret
sub
fwait
cwtl
pop
and
mov
sub
cmp
filds
xchg
push
adc
sbb
int
jnp
incl
sbb
xor
dec
fmul
mov
ds
or
sahf
xchg
outsl
cmp
orl
pop
hlt
push
push
int3
rorb
movb
scas
mov
and
gs
mov
adc
mov
mov
mov
dec
adc
mov
test
sub
mov
and
fucom
and
movsl
shrb
repnz
pusha
fsts
mov
ljmp
cmp
stc
test
jns
pop
inc
jae
shrb
ja
push
imul
mov
mov
fwait
mov
in
ret
sbb
sbb
inc
push
push
jne
cmc
scas
mov
fmulp
mov
les
pop
out
imul
aas
repz
push
inc
rclb
sbb
addr16
jbe
rolb
ja
lock
sub
mov
sti
dec
pop
jno
and
ror
cmpsl
das
leave
mov
out
pop
cmp
lods
testl
xor
sbb
xorl
mov
xchg
xchg
xor
or
jb
orl
daa
or
clc
jg
add
cs
xchg
out
imul
sub
cmpsl
lods
adc
jmp
daa
ja
pop
fcmovnb
cmp
aad
scas
dec
push
dec
fcom
push
push
scas
xor
insb
mov
sbb
lds
xor
popf
jp
push
lret
ret
pop
push
or
test
push
pop
mov
lods
push
cli
cmp
subb
and
stos
and
cmp
mov
adc
xorb
jle
out
mov
xor
xchg
adc
or
sbb
orb
jnp
mov
pop
or
inc
push
cs
in
test
sub
mov
les
sti
shl
mov
cld
ljmp
popf
sub
mov
mov
arpl
cmpl
add
fimuls
jb
push
inc
mov
xorb
data16
sub
inc
sbb
rol
pop
outsb
mov
jno
fisubrs
push
aas
lret
jmp
call
mov
popf
js
or
inc
xor
aaa
insb
imul
stc
repnz
ret
and
je
cmc
jns
push
mov
rclb
insl
adc
rcrl
lcall
mov
mov
or
pop
imul
inc
mov
adc
imul
xchg
mov
and
shll
mov
xor
outsb
add
loope
mov
xchg
arpl
mov
jmp
push
test
gs
xchg
ret
jg
xchg
dec
adc
shlb
xchg
movsb
cmpsb
int
xlat
mov
cmpsl
repz
lret
les
and
pop
or
xor
jo
out
inc
gs
enter
ret
cmp
dec
mov
lcall
mov
lods
lods
add
shrl
cmp
dec
cs
in
pop
insb
clc
lahf
popa
into
sbb
stc
ret
push
sbb
push
sub
push
iret
cmp
mov
negl
addb
mov
mov
xor
inc
iret
sbb
repz
push
pusha
adc
subb
icebp
addr16
mov
add
popa
add
add
dec
add
dec
add
dec
add
inc
add
add
popa
add
add
add
outsl
outsb
addr16
add
popa
add
add
jne
je
add
add
je
add
outsl
add
jae
arpl
imul
arpl
add
add
jae
outsb
je
add
bound
jne
je
add
insb
add
je
add
gs
jb
imul
je
add
outsl
data16
add
add
add
outsl
add
add
add
add
add
add
add
add
jns
outsl
add
jb
data16
add
add
add
outsb
add
jb
add
je
add
push
outsl
add
jb
je
push
add
popa
add
add
add
je
push
add
