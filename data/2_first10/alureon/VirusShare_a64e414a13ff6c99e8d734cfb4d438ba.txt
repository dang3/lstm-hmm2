sub
outsl
loop
shll
dec
inc
pop
mov
add
aaa
loope
mov
push
lret
in
lahf
add
pop
mov
sbb
inc
mov
daa
out
adc
sbb
loop
or
cmc
testl
test
mov
js
xor
icebp
fadds
add
cmp
sub
mov
mov
les
add
nop
movsl
adc
jle
in
repz
mov
mov
rol
mov
inc
jl
shll
jge
in
jno
imul
gs
jecxz
orl
cwtl
add
lock
and
shlb
pop
add
inc
lret
adc
in
xorb
sbb
inc
cwtl
add
xchg
or
test
xchg
and
dec
ret
jl
adc
in
arpl
sarb
dec
adc
xchg
jp
fnsave
lret
mov
sbb
ret
adc
mov
jns
or
sub
addr16
xchg
dec
loope
fsubs
dec
xchg
sbb
xchg
jp
andl
sbb
call
popa
xor
cwtl
testb
out
pop
or
xchg
pop
add
mov
lahf
aad
cmp
push
xchg
inc
cmpsl
xchg
xchg
mov
push
mov
push
fidivl
idiv
test
cmp
cmp
add
pop
xchg
fiaddl
imul
pop
fs
out
and
xor
insb
fists
addr16
xor
xchg
les
jecxz
push
rolb
sbb
cltd
xorb
mov
int
cmpsl
dec
dec
out
fildl
and
movb
pop
dec
jl
push
push
movsl
daa
mov
sbb
xor
and
xchg
sub
inc
test
shll
dec
std
aam
push
push
outsb
jno
mov
jg
push
xor
push
lcall
rcrl
sahf
cmp
pop
mov
int
js
xchg
subl
mov
add
cmp
leave
add
je
and
bnd
dec
aas
pushf
jge
xor
repz
pushf
jnp
add
sub
xor
and
movsl
jnp
imul
push
ja
movsb
xor
mov
xchg
rcr
loope
xlat
or
mov
or
jmp
cli
test
mov
popa
in
push
sahf
enter
pop
movb
mov
pushf
mov
jb
rcr
repz
mov
jne
ss
sub
aaa
and
pop
xchg
lock
cmp
jmp
cli
xchg
push
cld
test
out
sub
jns
mov
ja
sahf
nop
orl
sbb
or
scas
mov
push
in
mov
fiaddl
hlt
rorb
mov
cmp
gs
les
inc
jmp
sbb
dec
adc
rcrl
imul
rcrb
add
jecxz
subl
sub
lods
out
imul
ret
aam
shll
push
out
adc
lock
pop
xchg
adc
and
and
lods
cmp
testb
test
sub
sar
mov
repz
dec
cmp
and
rolb
bound
fdiv
inc
sahf
outsb
test
dec
into
ret
mov
test
es
fbld
loopne
dec
add
mov
fimull
sub
adc
ret
xor
sarb
movsl
bound
pop
pop
push
repz
adc
jge
jg
fwait
xchg
dec
add
je
outsb
mov
adc
mov
pop
mov
orl
lods
shrb
adc
and
push
mov
outsl
outsb
mov
or
jg
sub
pusha
cwtl
jecxz
das
aas
sbb
scas
arpl
daa
dec
or
jns
add
adc
mov
les
fists
lcall
loop
sub
dec
jmp
out
into
pop
and
mov
inc
jno
inc
in
sbb
xchg
push
imul
add
xlat
mov
stos
test
rol
and
or
dec
test
and
jns
dec
mov
mov
push
icebp
std
das
or
or
in
stc
jne
les
mov
jmp
sub
push
mov
movsb
dec
dec
out
movsl
sub
dec
leave
hlt
adc
rorb
or
cli
adc
into
inc
popf
pop
jnp
sub
pop
aam
xchg
out
clc
inc
sbb
loope
bound
or
cwtl
cs
shlb
pop
mov
mov
sub
xchg
aas
inc
lods
sahf
cmp
and
scas
rcrb
les
sahf
inc
andb
push
pusha
adc
mov
push
mov
into
icebp
gs
push
cmp
sbb
subl
sub
rcrl
add
repnz
sbb
or
xor
in
test
adc
ret
sub
scas
sbb
int
scas
addr16
pop
and
faddl
cmp
push
clc
arpl
and
and
call
mov
push
bound
imul
cli
repz
fdivrs
cmp
xchg
cmp
bound
mov
inc
or
rorl
jbe
dec
adc
push
mov
enter
aam
and
out
scas
call
lahf
mov
pusha
inc
sub
leave
xchg
jmp
mov
popl
and
adc
adc
fidivrs
fiadds
addr16
inc
inc
stc
addb
pusha
loope
addr16
mov
jle
dec
insb
mov
mov
jmp
or
xchg
jns
mul
popf
rcr
push
pop
and
xchg
add
imul
and
pop
in
inc
pushf
call
loope
sub
sub
ret
stc
jo
rorl
pusha
sub
loope
mov
out
test
pop
cli
shlb
xchg
or
test
outsb
xchg
inc
dec
sbb
push
fbld
jae
push
lret
stos
mov
dec
adc
adc
or
mov
js
mov
sub
les
push
push
jg
inc
mov
or
cli
and
daa
push
mov
sub
idivb
cmpsb
jno
inc
movsl
or
jmp
mov
bound
insl
xor
pop
cltd
xchg
jnp
add
sbbl
ljmp
and
aaa
inc
std
test
rorb
mov
inc
test
rcrl
lds
lret
sub
xchg
jbe
inc
shll
sahf
fdivrp
fwait
or
lahf
jne
inc
add
and
xchg
xorb
ljmp
in
jno
fwait
cltd
jle
hlt
xchg
mov
adc
insb
incb
mov
out
xchg
cmp
in
or
jle
subl
andb
xor
xor
es
cmc
test
js
out
es
test
inc
js
mov
inc
out
push
inc
testb
pop
cmp
push
dec
aas
ret
stos
cmp
es
jns
aad
jecxz
mov
lcall
jmp
pushl
mov
mov
roll
lds
pop
into
mov
mov
inc
pop
cmc
adc
es
push
push
cmp
add
arpl
fbld
pop
jbe
mov
adc
pop
lret
mov
xchg
cmc
dec
mov
dec
movsl
mov
jns
rolb
int
mov
outsb
test
lods
jae
lret
mov
and
bound
jb
insb
sub
mov
mov
jno
cmc
mov
loopne
mov
sub
es
lods
fcomp
sub
jecxz
pop
arpl
cwtl
aas
cmp
sbb
cmp
or
mov
inc
aaa
clc
je
and
cmp
pushf
sbbb
mov
dec
mov
inc
lcall
jecxz
jbe
xlat
mov
xor
sbb
imul
aaa
lods
pop
inc
or
adc
shll
sub
push
es
pushf
aam
sbbb
ret
rorl
inc
lcall
cmc
cmpsl
out
fs
loope
fidivs
fsubs
shlb
jbe
add
dec
push
ja
bound
mov
sbb
jmp
inc
js
inc
sbb
pop
negl
mov
pop
into
mov
bound
adc
push
add
mov
aas
pop
subl
inc
dec
int
jg
shl
aaa
sub
inc
add
pop
xlat
and
and
aam
pusha
pop
xchg
add
lret
xlat
notl
je
mov
xchg
fwait
xor
repz
inc
test
dec
push
xlat
fistps
push
rcr
int3
push
sarl
adc
pushf
lods
adc
and
mov
in
sbb
repz
cmp
xchg
fdivs
je
icebp
sub
xchg
xlat
iret
pop
ja
dec
adc
outsb
sbb
lret
mov
inc
and
cmp
mov
push
add
push
aam
imul
push
mov
jne
sbb
fdivs
inc
or
ss
inc
jle
mov
ss
inc
dec
stos
mov
lret
cli
or
inc
je
mov
mov
cmpsl
and
testl
sub
mov
inc
cs
inc
xchg
dec
negl
outsl
stos
mov
add
icebp
das
clc
pop
in
stc
mov
mov
repz
nop
test
push
adc
movsb
aas
sbb
fnsave
dec
mov
inc
mov
popa
sub
and
les
sub
daa
sbbl
xchg
gs
fcompl
stos
movsb
fiadds
mov
cs
out
psubusw
mov
mov
or
call
pop
mov
loopne
cmp
xor
mov
shrb
insb
insl
jno,pt
xchg
jae
jb
lcall
xor
push
mov
lock
popa
cmpsl
ret
mov
hlt
outsb
dec
cmc
outsl
mov
lret
xchg
jno
lret
dec
daa
and
out
inc
dec
fnstenv
in
ss
ds
pop
rcrl
mov
insl
fcomps
pop
arpl
inc
imul
popa
mov
and
call
xchg
pop
pop
stc
xchg
and
mov
loopne
fistps
push
dec
pop
rcrl
out
outsl
cmc
jp
mov
into
call
in
xchg
sub
gs
adc
out
pop
movsl
imul
std
inc
pextrw
lea
je
out
xor
std
test
insl
outsb
and
dec
mov
int3
push
insl
inc
mov
repz
jae
mov
sbb
call
adc
ds
sbb
lea
jle
test
lods
add
pop
outsb
xchg
mov
push
xor
pop
mov
insb
sub
cld
add
adc
loope
call
xchg
into
lods
adc
inc
sub
jecxz
adc
or
sbb
loope
push
test
sti
cli
subb
loop
cwtl
std
cmc
fbstp
cmp
push
add
lea
mov
mov
lods
pop
idiv
call
sub
mov
sub
les
inc
sbb
inc
lds
in
sahf
and
pop
pop
clc
movsl
push
mov
loopne
adc
clc
mov
mov
add
leave
mov
mov
cmpb
mov
arpl
mov
scas
xor
out
jno
stc
add
push
int3
in
sbb
pop
in
ret
mov
or
fucomp
mov
sbb
fistpl
bound
push
scas
push
outsl
pop
data16
leave
push
cmp
in
cmpsb
repnz
add
adc
repz
rorl
sti
shl
ja
pop
mov
xchg
scas
mov
add
pop
mov
or
sub
sahf
mov
adc
loop
jno
inc
pop
xchg
repz
mov
xchg
shlb
inc
adc
icebp
mov
aas
or
test
into
mov
insb
out
loop
push
incb
repz
dec
addb
mov
rcrl
aad
mov
mov
fisubrs
jae
mov
fstpt
inc
adc
or
xor
leave
sbb
push
mulb
inc
xchg
inc
les
sbb
outsb
aaa
mov
sti
push
lcall
lcall
outsl
imul
xchg
add
test
or
cmp
ror
and
jbe
insb
hlt
sub
nop
repnz
inc
xor
jle
je
mov
xor
lds
popf
fdivs
add
dec
popf
imul
pop
arpl
pop
nop
jns
push
in
sub
or
gs
div
push
ja
addr16
mov
outsb
jl
push
mov
leave
js
sub
icebp
decb
out
lea
das
mov
dec
and
aaa
cmp
lahf
rolb
in
fs
mov
fstl
jo
jnp
pop
add
fidivl
mov
pop
sbb
mov
or
je
outsl
mov
out
daa
xchg
fs
xor
lret
in
es
mov
dec
negb
sbb
xchg
xor
stos
sbb
mov
adcb
and
xor
xchg
data16
fcompp
in
xchg
jns
mov
lds
and
or
lods
fisubs
sarb
movsl
cmp
sbb
adc
or
adc
mov
in
jnp
or
mov
dec
jnp
sti
bound
les
cld
fistps
sub
push
push
inc
mov
pop
mov
call
mov
xchg
xlat
push
movsl
mov
stc
cli
in
test
inc
sub
rorl
loope
data16
jmp
add
in
cltd
test
test
sub
and
cmp
mov
into
lds
xchg
sbb
and
xor
mov
cwtl
push
cmp
enter
or
pop
sub
hlt
xchg
outsl
rcll
loop
scas
push
arpl
jmp
insl
xor
and
imul
adc
es
sub
adc
cmp
xlat
dec
push
sub
lret
mov
push
call
mov
jmp
lods
push
repz
insl
mov
dec
stos
or
xchg
cs
pop
lds
leave
int
xchg
cltd
push
adc
xchg
or
or
fs
int
into
inc
std
sbb
adc
lods
mov
jge
add
ficoml
lcall
push
adc
outsb
xor
xchg
and
mov
mov
jp
mov
mov
movsl
or
movsb
cmp
jns
cmp
inc
push
xor
in
jp
not
sub
push
mov
push
mov
push
icebp
cmpsb
imull
test
lods
inc
xor
fstpt
scas
adc
jl
outsb
dec
jecxz
inc
fadd
jp
push
decb
jo
mov
inc
mov
out
outsb
daa
cld
mov
dec
shl
xchg
inc
adc
sbb
aad
mov
xor
sub
call
lods
lods
inc
cld
add
aaa
push
sub
addr16
inc
loopne
and
daa
movl
sub
xor
jg
jb
inc
mov
adc
loopne
dec
inc
sarb
outsl
and
or
adc
popa
jl
leave
xor
in
out
cmc
outsb
cwtl
mov
out
sub
push
ficoms
inc
mov
add
inc
mov
aas
scas
jmp
mov
mov
iret
and
inc
cwtl
femms
xor
xor
cmp
insb
xchg
dec
rcrb
pusha
jg
rcl
shrd
repnz
js
pop
sarl
outsb
xor
sahf
imul
sbbl
xor
mov
addr16
or
arpl
out
jmp
sub
shrb
testb
push
fnstcw
movsl
dec
sar
xchg
scas
inc
adc
rcrl
mov
mov
add
fildl
imul
xchg
dec
mov
sbb
pop
out
rcll
ret
loope
xor
testl
cmp
xor
xlat
addl
rorl
sub
dec
mov
jp
lret
fcompl
scas
adc
testl
popf
and
xor
sbb
mov
movsb
push
sbb
out
and
add
in
test
out
mov
sub
jge
mov
jmp
lret
int3
xor
and
mov
xchg
adc
lods
jle
mov
lock
and
aaa
movsb
xlat
shrl
fsubrs
out
bound
cmpsl
and
sbb
push
jecxz
xchg
inc
sbb
push
test
lahf
pop
into
sub
loope
aam
jg,pn
data16
xchg
sub
mov
push
mov
xorl
cmpsb
pop
and
jecxz
xor
pop
push
int
std
mov
iret
lods
call
add
sbb
iret
fnstenv
pop
mov
inc
inc
jno
movsb
out
daa
loop
add
dec
inc
into
adc
insl
rorl
lock
popa
ss
imul
lahf
movsb
jo
add
pop
sub
ficompl
sub
jae
add
test
arpl
mov
enter
fstl
xchg
sbb
in
in
repz
jbe
mov
cwtl
lds
jae
in
add
ljmp
in
adc
push
jnp
or
fisttpl
scas
jo
movsl
outsl
loopne
adc
sbb
push
jns
lock
add
stc
clc
and
cmpb
repnz
push
out
cli
ss
jle
mov
cmp
xchg
adc
stc
mull
add
mov
fstl
in
mov
mov
adc
push
lret
jle
call
js
repz
jmp
mov
cmp
adc
je
push
dec
xor
xchg
out
jb
add
mov
aas
bound
call
out
and
lahf
mov
stos
xchg
xchg
loope
mov
ja
xchg
add
and
ljmp
cmp
add
adc
mov
adcb
fbld
aam
icebp
pop
push
dec
jmp
ss
stc
mov
xchg
enter
sbb
push
out
push
fcmove
addb
loopne
mov
in
ljmp
xlat
sub
add
pop
adc
lea
sti
pop
xchg
test
cmpsb
mov
adc
and
push
imul
rcll
mov
jbe
shll
dec
lea
push
enter
sti
pop
push
hlt
push
pop
jno
in
in
sti
add
xchg
faddl
ja
xchg
adc
clc
insb
mov
xor
xlat
jb
sub
jnp
bound
xchg
ret
dec
loope
dec
in
lods
rolb
and
fnsetpm(287
fucom
lds
fldenv
cmp
bound
inc
fidivl
divl
sub
inc
and
push
jno
test
push
cmp
jmp
xchg
adc
adc
sbb
sahf
cmp
outsb
sti
mov
stos
xor
xchg
movb
fcoml
movsb
jmp
loopne
and
xor
inc
in
in
cmp
and
cmp
fwait
dec
lcall
inc
pusha
dec
sar
xchg
push
lock
or
dec
xlat
add
mov
xlat
stos
popa
sti
movsl
dec
in
pusha
xchg
mov
push
push
divb
xchg
xchg
or
dec
and
push
dec
cmp
stos
jecxz
xchg
xor
inc
push
test
mov
stos
fxch
jne
sub
insl
push
add
xchg
inc
xor
cs
jbe
xor
mov
fimull
or
daa
cmp
adc
dec
inc
mov
lods
in
shl
xlat
sbb
push
cmp
daa
sbbl
xor
aaa
outsb
daa
jge
cmp
fsubr
imul
push
xchg
cmp
into
jbe
aam
xchg
cmp
or
lret
adc
push
stos
jae
mov
bound
mov
xor
movsb
or
adc
int
inc
rolb
sbb
pop
test
dec
adcb
mov
sub
imul
inc
loopne
loopne
jmp
jbe
xchg
or
or
imull
mov
pop
xchg
xchg
popa
stos
dec
or
push
cld
dec
fimuls
incb
jle
dec
or
jl
mov
xchg
rorl
pushl
adc
sub
mov
cmpsb
mov
sbb
outsl
cmp
push
push
pushf
fisttps
shlb
adc
sub
xchg
int3
sub
dec
pop
movsb
sbb
sub
inc
jle
jp
add
xchg
pushf
ja
aad
pop
push
fs
mov
sbb
out
repnz
stos
mov
mov
mov
or
xchg
push
mov
in
popl
aas
xchg
xlat
adc
jle
adc
inc
inc
cmp
sub
sarb
hlt
mov
lods
xchg
aad
scas
js
lock
mov
out
sbb
outsb
push
ja
xor
repnz
mov
sahf
ffreep
bnd
or
adc
and
mov
aad
push
in
push
push
jo
push
test
or
or
mov
into
cli
mov
ss
cmc
inc
popa
lahf
xor
repz
andb
out
sbb
mov
jge
cmp
adcb
int
pop
pop
dec
add
dec
jecxz
cmp
adcb
nop
sbb
dec
mov
mov
aad
sbb
and
lret
sbb
or
aam
jg
rorb
dec
test
rorl
push
ja
jns
pop
xor
sub
inc
sar
sub
sub
mov
sbbl
lock
cmp
dec
je
xor
push
addr16
gs
jp
xor
cmc
or
pop
fistl
lods
out
pop
lds
inc
inc
xor
sbb
lret
xor
push
lods
scas
sub
imul
arpl
insb
dec
mov
add
jbe
sti
or
ret
mov
ret
repnz
arpl
pusha
rcl
je
mov
xchg
xchg
idivb
push
or
arpl
movsl
rorb
mov
xchg
les
dec
iret
cmp
test
pop
pop
sbb
jnp
sbb
xchg
movsb
xor
std
stos
ds
sub
hlt
imul
neg
pop
fs
pop
inc
fcomip
xor
pop
sbb
inc
jbe
dec
mov
push
inc
lods
pop
fninit
call
test
movsb
push
gs
int3
sbb
test
fs
sbb
punpckldq
pop
popf
fnstcw
in
ret
jle
xchg
jnp,pn
inc
std
inc
or
pop
fistps
dec
pop
mov
outsb
mov
mov
ss
push
add
dec
imul
movsl
lock
or
aam
push
ret
in
push
and
cli
je
adc
cltd
int
cmc
stos
inc
xor
sub
push
aam
rcrl
dec
adc
inc
shrb
push
cltd
fimull
push
jmp
mov
aad
cwtl
cld
mov
push
mov
iret
insb
sub
out
jns
fnstenv
push
movsl
scas
popf
loopne
aaa
push
loopne
outsb
cmp
mov
lret
and
xchg
inc
dec
mov
jns
call
push
stos
adc
adc
sti
gs
decb
dec
mov
bound
int3
shll
fcomi
adc
and
loop
rcl
or
cmp
js
ret
lods
int
mov
fldenv
gs
leave
sbb
out
loopne
in
lret
loop
xchg
dec
loop
fdivrl
pop
stc
fdivs
insl
pop
pushf
pop
das
les
hlt
add
divl
out
push
scas
jne
jnp
sbb
inc
or
push
aaa
in
outsb
nop
lret
mov
mov
in
and
arpl
cmovs
sbb
or
xchg
sub
aad
fidivrl
inc
mov
out
stc
fisubl
jae
xorb
add
xlat
icebp
push
bnd
sbb
outsl
cld
int
outsb
addl
loope
loopne
imul
cltd
shll
and
dec
xor
pop
pop
test
push
or
insb
and
dec
mov
adc
test
cld
into
icebp
es
jae
dec
xchg
stos
ret
aam
cmp
mov
or
add
xor
dec
pusha
daa
out
in
or
jne
push
push
cmpsb
rorl
sbb
repnz
xlat
and
ret
push
and
xor
sbb
stos
scas
movsb
mov
test
pop
or
cmp
push
push
xor
inc
cmpsl
test
jb
xchg
rclb
and
in
adc
cmp
fcompl
insb
jnp
insl
mov
testb
in
inc
cmp
js
test
jg
leave
lock
cmp
sbb
pop
test
add
rcr
out
adc
add
insb
es
mov
push
ret
sub
rcrl
arpl
icebp
jle
mov
out
push
xchg
sbb
sbb
sub
and
pop
clc
jne
sbb
jb
in
aaa
aas
xchg
out
mov
mov
pop
cmpsb
outsb
add
push
into
aas
push
xchg
mov
cli
mov
fdiv
mov
mov
pop
repz
adcl
ds
xchg
imul
sahf
sub
shrl
or
fdivr
jmp
push
jne
add
add
repnz
ja
hlt
cmpsb
shlb
xor
psrad
cmc
aam
push
cmpsl
mov
jge
sub
sbb
std
imul
mov
hlt
addr16
mov
pop
adc
fsubp
and
and
cltd
xor
das
jne
sahf
in
mov
xchg
mov
xchg
daa
je
pop
mov
cmp
mov
sbb
dec
aaa
jne
dec
dec
jne
inc
xchg
sahf
adc
xor
jge
loopne
mov
test
in
fst
je
pop
pop
rcr
jl
add
lock
add
rcll
stc
pushf
test
dec
icebp
popf
xlat
mov
stos
mov
mov
call
in
lcall
jae
adc
cmp
cmc
out
cli
fdivr
gs
sarb
mov
sti
jp
push
or
or
and
jne
mov
les
subl
inc
mov
cli
inc
xor
lock
shr
jge
pusha
cmp
and
add
cltd
xchg
push
in
push
sub
bound
xor
std
imul
call
sub
mov
je
stc
xchg
notl
xchg
pop
add
xchg
mov
push
xor
mov
mov
dec
sub
fsubrs
push
sub
sarb
movsl
stc
mov
rcl
push
adc
je
movsl
fcoml
mov
call
pop
add
fdivrl
pusha
cmpsb
push
sahf
leave
xor
xor
jne
fs
rcrb
pop
sbb
cmp
mov
mov
cmc
sub
xor
lret
mov
mov
int
sti
dec
test
push
mov
inc
push
xor
mov
xor
ret
mov
sbb
xor
sub
pop
pushf
lods
jae
xor
ja
test
pop
push
xchg
bound
out
dec
jmp
test
jecxz
push
inc
inc
inc
scas
jle
stos
sahf
dec
xchg
dec
cli
mov
pop
test
sbb
jnp
aaa
jg
aam
dec
pop
aad
cld
xchg
xor
xor
mov
adc
cmpsl
pusha
out
mov
sub
xor
rcrl
lods
sahf
in
fldenv
xor
and
cmc
sbb
aaa
xchg
mov
test
call
flds
inc
lret
jo
push
dec
and
ds
shll
mov
js
out
xchg
fists
cmp
inc
enter
jns
lahf
pop
xor
int3
addr16
fadds
jl
adc
in
add
pop
mov
mov
mov
call
call
jno
adc
leave
mov
or
dec
xchg
adc
adc
insl
fsubrp
test
mov
dec
sub
mov
sbb
xchg
js
add
pop
lcall
lcall
mov
std
subl
scas
je
xor
add
cmp
out
in
xchg
rol
pop
mov
lahf
mov
bound
jge
push
pop
fstl
xchg
mov
ds
xchg
dec
mulb
sub
int
xchg
adc
push
shll
mov
pop
test
ret
enter
inc
rolb
test
sub
xchg
aaa
iret
aam
je
bound
fnstcw
lock
popf
xchg
dec
and
fsubrl
ja
adc
lods
cmpsl
sub
mov
bnd
call
sub
mov
movb
imul
rclb
mov
pop
gs
pop
rcll
aas
inc
in
loopne,pn
lock
scas
fadds
xchg
clc
fsubl
mov
sub
mov
in
xchg
fnsave
fcomip
sbb
bound
jl
stc
out
and
or
rolb
pop
mov
bswap
sbb
sahf
lcall
and
bnd
dec
cltd
pop
fdivs
pop
xchg
in
mov
push
sti
lds
mov
jnp
fs
stos
pop
push
test
es
call
xlat
aas
push
pop
push
cmpsl
cmp
aas
mov
iret
rep
xor
xchg
lock
sub
test
pop
int3
cmp
mov
mov
cmc
addl
mov
add
pop
in
pop
inc
mov
inc
mov
imul
adc
xor
aaa
mov
dec
push
push
rol
mov
ds
out
into
daa
loop
lea
xchg
fadds
lods
sahf
dec
std
rcrl
loop
cs
pop
mov
movsb
pop
add
mov
xchg
outsl
shr
xchg
popl
shlb
and
mov
jecxz
mov
xchg
mov
xorb
jns
dec
sbb
ja
pop
call
push
hlt
add
stos
mov
inc
mov
mov
test
and
xchg
mov
pop
lds
jne
push
mov
sub
test
fwait
pop
int
sub
mov
cmpsb
sbb
mov
push
test
dec
ss
cwtl
inc
cmp
sub
leave
lahf
mov
cs
xlat
shll
addr16
push
lds
push
popa
gs
and
lods
fldcw
adc
adcl
pop
pop
pop
xor
xchg
inc
adc
inc
rorb
ret
jge
sbb
xchg
scas
mov
dec
vunpckhpd
mov
test
mov
inc
or
lret
sub
icebp
outsb
loop
sub
xchg
call
cmp
repnz
xchg
inc
mov
push
inc
repz
jmp
test
xchg
movsl
and
cmp
xchg
rclb
ljmp
std
movsb
ja
scas
out
sub
pop
cmp
dec
ret
insb
lahf
icebp
jp
inc
pusha
insl
scas
and
xlat
test
repnz
addr16
mov
stos
repz
pop
add
lea
inc
jns
push
dec
sub
cmpsl
js
cltd
aam
je
jno
sub
bound
gs
xlat
insb
test
fwait
ret
add
jns
stos
pusha
push
popa
xchg
mov
jmp
stos
sti
mov
push
xorl
sub
test
aad
xor
pop
jb
jnp
cmp
jns
xchg
push
ficoml
es
mov
xorb
mov
leave
js
and
orb
sub
dec
sub
inc
jo
sahf
icebp
lods
mov
mov
or
shll
and
mov
or
sbb
jae
ljmp
hlt
xor
cs
rorb
push
test
imul
scas
outsb
in
aaa
cld
cltd
leave
stos
cmp
add
addr16
push
arpl
push
inc
add
test
add
and
aam
jo
lret
xor
pusha
popf
cmc
cs
notl
adc
dec
bound
push
mov
lods
jl
aaa
jp
dec
scas
cmc
dec
ljmp
adc
fs
in
ret
cmp
out
inc
push
ja,pn
lods
cld
mov
into
mov
cmpsb
and
lahf
inc
push
daa
pop
repnz
in
pop
pop
imul
andb
test
pop
ficoms
xchg
sub
popa
addr16
into
jl
fdivrl
jne
mov
mov
xor
jbe
xchg
sub
sbb
icebp
jmp
and
mov
inc
insl
mov
dec
dec
pushf
sub
stos
rolb
jae
bound
jmp
push
pop
rol
mov
ljmp
and
cmp
pop
subl
cmp
scas
sbb
xchg
out
push
jle
cmp
adc
jl
cwtl
vprotq
xor
or
outsl
push
aas
call
xchg
jg
mov
roll
andl
aam
shrl
pop
push
adc
adc
pop
loopne
pop
inc
loopne
cmp
dec
jns
leave
out
add
sbb
sahf
aam
jmp
loope
out
bound
mov
popa
sbb
sub
pop
lods
rcll
lahf
ret
pop
inc
cmp
ret
adcl
inc
sub
add
mov
mov
std
cmp
dec
enter
cmp
pop
aaa
cmpsb
jno
pushf
xor
int
cli
mov
sub
cwtl
fcompl
fisubs
adc
pop
fisubrl
xor
adc
push
add
push
loop
add
mov
inc
jmp
mov
mov
call
not
js
mov
push
aad
out
inc
mov
xchg
movsl
aas
fwait
mov
push
cmp
mov
imul
dec
sub
clc
jns
std
js
lods
scas
aad
ja
imul
mov
pop
mov
vandnps
push
inc
vmaxpd
jl
fcoms
lret
pusha
pushl
shl
adc
sti
push
mov
inc
faddl
imul
inc
out
hlt
ss
and
pop
fsubr
fcom
cwtl
gs
pop
lret
add
jns
sub
push
sbb
pop
add
fsubp
mov
mov
aad
lock
adc
mov
mov
dec
cmpsb
jbe
in
and
ljmp
add
mov
sar
mov
outsb
test
rclb
repnz
cli
push
xor
jbe
into
cmpsl
ljmp
arpl
jnp
mov
xchg
and
and
sbb
iret
test
mov
int
mov
push
cmc
shrb
sbb
adc
mov
lods
add
mov
repz
add
ror
push
stos
cld
xchg
or
mov
mov
mov
sbb
adc
sti
cs
pushf
add
adc
lods
mov
dec
dec
aad
add
gs
and
or
adc
add
ss
leave
into
imul
pop
in
mov
ja
push
mov
mov
inc
mov
mov
cmpsb
aam
inc
xlat
sub
out
mov
push
sbb
xchg
sbb
xchg
adc
push
mov
bound
pop
int3
notb
fistpll
push
mov
xchg
je
lcall
mov
lea
or
mov
test
jmp
pop
mov
jb
add
xor
mov
sbb
aam
mov
hlt
int3
arpl
push
mov
xchg
shll
or
jbe
mov
add
inc
nop
movsl
xchg
dec
stc
cmp
jle
cmp
pop
xor
xchg
repz
in
nop
ror
and
xchg
add
es
jecxz
and
and
jbe
iret
inc
push
stos
or
cli
in
or
jo
lea
xchg
mov
mov
sbbb
imul
sbb
ret
test
lahf
mov
cmpsb
stos
sub
mov
mov
push
cli
mov
call
and
sbb
rcrl
testl
jecxz
jnp
push
loope
or
jb
out
dec
inc
aas
icebp
sub
jmp
inc
mov
cmc
push
jl
mov
xchg
ss
shlb
test
ret
cmp
xor
fs
fistl
imul
out
cmp
mov
cmpb
je
ds
xchg
inc
cmpsl
add
sbb
inc
mov
inc
pushf
push
jo
xor
in
jbe
mov
lret
scas
inc
sahf
xor
and
jmp
test
xchg
lret
lock
pop
adc
negl
jl
pop
rclb
and
addr16
sarl
insb
inc
xchg
mov
mov
icebp
add
mov
imul
mov
subb
cmc
pop
push
divl
push
sub
xor
out
add
push
stos
and
xor
push
inc
std
jb
and
cmc
mov
pushf
jg
mov
in
insb
mov
push
dec
jle
pusha
adc
jg
jno
test
dec
jne
mov
push
popa
sbb
mov
jmp
jecxz
cmp
lcall
mov
inc
cmp
push
jbe
push
sbb
cmp
mov
es
jno
mov
jmp
jp
or
pushf
or
mov
push
lods
stos
cmp
imul
pushf
ja,pn
dec
sbb
loopne
je
jno
in
fs
adc
jne
cmp
rcl
in
xchg
sbb
stos
jbe
mov
adc
pop
fcomps
jle
lret
push
jge
cwtl
sahf
stc
stos
cmp
sbb
in
insb
or
cmp
sbb
sbb
loop
shll
lcall
xor
jno
imul
mov
mov
leave
push
xorl
pop
push
js
cmp
add
xor
std
jmp
xor
repz
icebp
int
jo
loopne
out
sti
and
fmull
cli
lahf
cltd
mov
test
dec
imul
pop
in
in
add
push
data16
dec
ss
mov
insb
xchg
mov
or
inc
mov
pop
or
jnp
inc
adc
test
add
sbb
push
cmp
shl
out
mov
inc
sbb
and
decb
adc
pop
subl
in
imul
test
scas
lahf
nop
ljmp
mov
sub
push
rcll
out
outsb
adc
lahf
jno
iret
inc
cltd
add
icebp
ja
rcrb
push
pop
or
sub
mov
clc
bound
repnz
adc
fldenv
insl
cmpsb
jp
add
push
das
in
inc
stos
push
nop
jns
stc
dec
test
xor
jbe
jmp
insl
sub
sub
xchg
or
pop
in
pop
ret
out
inc
sti
adc
movsb
sub
aam
push
addr16
scas
loop
cld
mov
sub
inc
mov
mov
aaa
adc
mov
or
fs
nop
mov
pop
push
mov
insb
jne
push
jl
fs
loope
adc
jge
daa
out
and
clc
ss
fidivrs
and
adc
aad
adc
in
mov
xor
movsl
xchg
imul
or
lcall
pop
insb
arpl
ret
sub
ror
jnp
js
inc
adc
mov
mov
aaa
nop
outsl
shrb
mov
xlat
lret
sub
mov
mov
pop
fstps
clc
lahf
add
stos
loopne
mov
jge
mov
je
push
fisubrs
jo
jg
push
out
fwait
adc
dec
cmc
cmp
leave
insb
push
enter
ficoml
and
fwait
push
mov
inc
xor
shrl
ljmp
aaa
push
dec
subb
cmp
js
jmp
cmp
cmp
inc
jb
fstpl
dec
push
cli
aad
add
jb
mov
sarl
out
cmp
imul
fnstcw
mov
adc
test
jnp
or
jo
pop
push
pusha
enter
jle
add
push
mov
xlat
mov
jp
aas
sub
jo
xchg
stos
out
fstp
pop
sarb
adc
xchg
imul
movsl
jnp
adc
out
sub
in
andl
mov
shlb
mov
testb
outsb
xlat
ret
adc
repnz
or
push
xchg
hlt
sub
insl
push
lahf
shll
ss
add
pop
testl
sub
lcall
pop
dec
movsb
jne
sub
dec
enter
mov
je
and
ret
cmpsl
jp
xchg
jmp
rcll
int3
loop
adc
xchg
clc
xor
loop
inc
cld
rcl
int
out
xchg
mov
mov
leave
jb
or
imul
dec
je
fidivs
jg
sbb
popa
daa
jns
or
xchg
xlat
cmp
adc
fwait
ds
fists
in
push
mov
nop
jo
mov
aaa
lods
cmpsb
call
loopne
popf
xor
jno
mov
push
loope
mov
mov
mov
adc
cld
xchg
arpl
cmp
mov
sub
lea
jle
lahf
adc
sahf
scas
es
cmp
out
testl
js
jnp
add
aam
mov
mov
mov
fcoml
adc
lods
or
sub
mov
jmp
dec
insb
mulb
fisubs
inc
push
icebp
or
xor
and
iret
aad
movsl
sti
jecxz
fadds
xorb
ss
add
pop
xchg
nop
clc
scas
aas
icebp
xor
insl
jle
push
xchg
xlat
xrelease
xor
push
mov
push
and
lods
xchg
sub
aad
jb
dec
pushf
flds
ret
jnp
mov
mov
pop
xchg
pop
xchg
and
es
add
rorl
jo
sti
stc
lods
scas
cmp
mov
xchg
pop
jmp
scas
xor
pop
outsl
push
sbb
sbb
and
adc
adc
aas
sbb
mov
popf
int3
jbe
aaa
pop
mov
and
mov
mov
pop
adc
ss
ljmp
rclb
aas
cmc
cmp
sub
lds
test
stos
adc
shrb
mov
scas
mov
xchg
inc
sub
inc
arpl
pusha
loope
jmp
cmpsl
mov
pop
imul
and
mov
jmp
fwait
scas
dec
movl
ret
out
add
sahf
pop
dec
push
subb
sbb
shrl
dec
fidivs
sti
dec
in
adc
and
mov
lock
rol
sub
push
jl
popf
jnp
icebp
push
dec
pop
and
cli
clc
and
std
aad
arpl
lods
sub
push
lds
xchg
xchg
pop
jbe
jae
sbb
mov
loopne
fidivs
xor
inc
imulb
mov
aam
in
xor
mov
xchg
sbb
stc
jne
xor
push
mov
jg
cmpl
fstl
sbb
mov
scas
or
sub
jle
je
xchg
sub
repz
sbbl
sub
push
ja
in
or
mov
imul
pop
add
idivl
xor
icebp
lea
lret
sub
mov
vphaddubw
mov
popf
dec
in
jg
adc
xchg
scas
cli
pop
mov
lret
into
push
sbb
dec
icebp
in
push
mov
dec
in
out
xor
cmp
daa
xlat
inc
pop
cld
add
insw
out
in
inc
cmpsb
add
or
xchg
pop
xor
movsl
dec
inc
data16
test
outsb
jns
sbb
sbb
xchg
in
pop
fsubr
cmp
jecxz
lds
or
js
loopne
enter
sbb
xor
dec
jl
cmp
push
fsubs
pop
adc
mov
push
aad
pop
addr16
pop
add
out
cmp
clc
insb
add
les
in
int3
out
jo
mov
sti
fisubs
fmuls
push
push
std
aam
insb
shl
xchg
shl
scas
inc
sbb
arpl
shrl
or
shl
loop
fbld
and
fstps
cmp
sub
loope
jnp
add
ret
nop
and
lret
push
in
jle
filds
aas
icebp
in
shll
jne
dec
in
cmp
fsubrp
dec
out
scas
inc
dec
mov
dec
fwait
inc
mov
cmc
jnp
pop
lret
std
lahf
nop
push
in
inc
test
pushf
js
lds
clc
int3
stc
mov
sbb
fimull
inc
enter
adc
jmp
fwait
add
jge
out
xor
ja
cmp
jmp
jnp
push
mov
icebp
xor
les
or
stos
adc
mov
in
and
popa
add
lret
test
fnsave
leave
cwtl
fists
repnz
lcall
xchg
jge
xlat
scas
and
lret
push
enter
mov
cli
mov
mov
adc
mov
push
mov
int3
adc
add
lods
stc
fmull
xor
fstpt
pop
movsb
fbstp
jnp
lahf
fwait
jo
cmpsl
fistpl
cmp
cmp
mov
mov
sub
sub
adc
push
lcall
subl
push
or
iret
mov
sub
stc
scas
loop
jmp
fiaddl
or
hlt
mov
inc
cltd
or
test
insb
js
adc
dec
jmp
dec
sub
outsl
lds
leave
popf
cmp
pushf
es
pusha
push
in
mov
movl
aad
stos
push
rolb
add
mull
push
mov
mov
inc
and
mov
pop
cs
bound
popf
loope
mov
lea
negl
enter
mov
pop
icebp
jo
iret
jns
jns
pop
cmp
xchg
jmp
sti
dec
in
or
mov
xor
jle
int3
sub
dec
jmp
rcrl
leave
xchg
dec
add
mov
cmpsl
dec
js
mov
mov
ds
pop
std
jmp
aad
adc
add
dec
popf
int
addb
movsb
and
sub
push
outsl
in
mov
dec
and
test
fwait
jb
bound
in
pop
leave
int3
xchg
pop
pop
jle
mov
nop
mov
popf
lea
fs
mov
jb
out
addr16
jns
mov
xchg
add
xor
xchg
ja
push
rcl
sub
cs
hlt
xor
add
push
dec
leave
xor
outsb
mov
dec
cmp
pop
xor
push
mov
loope
and
mov
in
sbb
cmpl
jnp
incl
mov
cmp
inc
push
push
mov
cmp
push
je
rcll
xchg
cmp
data16
mov
jmp
ret
adc
movsb
add
test
into
push
push
shr
out
xor
mov
popf
cmp
mov
xlat
fnstsw
inc
cmp
sti
xchg
iret
xor
and
sbb
dec
lea
jno
sbb
jns
push
inc
nop
test
jbe
mov
push
pop
and
ds
sbb
test
mov
hlt
ss
adc
sub
xchg
adc
hlt
sub
lods
test
mov
popf
push
data16
ret
out
add
jns
je
or
mov
lcall
sbb
shll
jnp
fisttpll
xchg
xlat
sub
imul
jl
scas
and
es
sbb
cmpsb
insl
xchg
pusha
lahf
insb
stc
cmpl
sarb
sbb
cmp
inc
pushf
dec
xchg
or
xchg
mov
pop
loope
sub
lea
cmc
xor
flds
aas
mov
pop
fsubs
fbld
jg
jo
pusha
pop
add
push
adc
mov
fldcw
xchg
jge
andl
and
aaa
jmp
addb
jl
fwait
scas
nop
pop
fisubs
fwait
adc
mov
stos
pop
je
sub
leave
adc
ret
xchg
push
cwtl
sbb
lods
cmp
sub
loop
out
or
add
stos
adc
stos
cmpb
js
pop
jge
dec
adc
pop
int3
cli
scas
test
lods
mov
fsubrl
loopne
call
arpl
push
int
pop
cmp
outsb
stos
ja
push
imul
push
lock
out
in
inc
sbb
lods
add
ds
int
mov
jmp
fcmovu
push
jbe
and
call
xor
repnz
adc
cmp
repz
lock
xchg
out
dec
adc
scas
into
ss
int
dec
dec
jbe
fs
sub
dec
dec
sahf
and
repnz
mov
xchg
ja
mov
cmpsb
cli
call
mov
dec
rolb
mov
lds
movsl
cmp
push
or
pop
xor
scas
fcmovbe
jo
ret
imul
lea
inc
sti
dec
dec
adc
test
pop
pop
push
jmp
mov
or
orl
adc
adc
gs
pcmpgtw
xchg
das
fnstcw
dec
dec
arpl
xor
leave
les
push
jne
divb
sub
xchg
out
adc
jae
aaa
mov
cwtl
jo
dec
sbb
fwait
and
pop
push
lret
cmp
pop
xchg
or
sbb
gs
stos
jae
lahf
push
mov
pop
ss
add
adcb
or
call
dec
or
cmc
xchg
dec
lcall
jae
jg
imul
mov
cmp
popf
inc
mov
scas
icebp
in
jmp
mov
aaa
pop
sbbl
cmpsl
shrl
push
js
mov
pop
mov
imul
xchg
add
popa
and
dec
sbb
ja
and
xchg
add
out
ljmp
pop
push
cld
adc
out
adc
jl
sub
add
call
mov
loope
jo
lret
std
out
xchg
push
cmpsb
fldcw
cmpsb
jbe
imulb
mov
fdivrl
or
test
xchg
mov
cld
dec
push
mov
enter
mov
push
ds
jb
test
aas
jbe
data16
mov
mov
hlt
or
scas
in
popf
jmp
lods
cmp
sub
stos
inc
push
mov
and
mov
fs
insl
jmp
rolb
scas
ficompl
int
fldt
xchg
or
or
add
xchg
scas
push
inc
pop
mov
xor
int
std
aas
or
ja
outsb
std
push
xchg
push
pop
ret
stc
ljmp
insl
repz
into
insb
mov
add
test
dec
jb
shld
or
sbb
adc
repnz
les
pop
sti
dec
sar
insb
ja
mov
rol
outsl
add
mov
jg
xchg
cs
and
cmp
mov
sbb
sub
jnp
repz
pop
cmpsb
ret
std
ror
arpl
adc
std
add
lock
fs
cltd
in
lret
jge
pusha
add
or
jb
cmp
out
cltd
dec
or
lret
nop
or
test
mov
push
movsl
repz
cmp
lea
sub
ss
push
cmp
or
push
out
mov
sbb
stos
shlb
ficoms
lcall
add
lods
mov
cld
adc
sbb
outsl
aam
js
pop
lret
pop
lock
fldt
inc
outsl
incb
jae
ret
cmp
in
shll
das
sbb
inc
xor
cmc
je
sbb
gs
mov
fidivrs
pop
push
push
adc
pop
xorb
mov
pop
push
rcl
lds
add
cmpsb
add
addr16
pop
ja
and
push
and
inc
negl
std
movlps
cmp
jb
mov
pmuludq
cmp
mov
movzwl
sub
dec
mov
pandn
fwait
jb
faddl
adc
mov
cmp
mov
push
cmp
dec
aam
jp
lods
hlt
cltd
addr16
clc
bound
jb
dec
aad
int
je
dec
pusha
les
adc
out
pop
sub
sbb
mov
sub
sbb
pop
insl
dec
jl
adc
push
clc
repz
cmpsb
cwtl
jl
rclb
add
into
out
mov
fdiv
mov
sub
test
icebp
add
popf
inc
rsqrtps
xchg
mov
dec
dec
sbb
out
jbe
dec
test
push
mov
xchg
in
dec
xchg
jno
fsubrs
and
ret
jnp
aas
jne
pop
aam
jp
fwait
sbb
mov
in
icebp
shl
mov
mov
add
cld
mov
push
lret
mov
pop
insb
insb
push
ljmp
int3
push
movsl
ja
repnz
pusha
loop
pusha
fiaddl
es
in
les
popf
cli
and
out
xor
adc
sub
mov
sub
es
xorl
add
mov
rclb
sahf
adc
push
dec
sahf
jb
loopne
mov
sbb
jo
or
lcall
pop
lcall
scas
sbb
mov
leave
xor
addl
xor
cmp
addl
jle
iret
out
sub
cmp
sub
xchg
lahf
cld
rorl
int
clc
ss
in
sbb
test
outsb
arpl
in
xchg
mov
repnz
dec
rcll
test
popa
push
pop
cmpsl
cmp
push
and
cmpl
lods
nop
push
xor
mov
adcb
arpl
jmp
push
imul
ljmp
out
shrl
xor
add
out
inc
add
and
in
cmp
and
pushf
test
jge
lret
push
xchg
nop
mov
fisubrl
sbb
fnstcw
aam
insl
mov
adc
sbb
jmp
sub
cld
lods
dec
dec
aam
iret
fcmovnu
dec
and
idivb
push
or
xchg
out
int
repz
dec
pop
add
ja
in
fists
adc
xor
jecxz
mov
push
xor
jl
popa
jae
mov
ror
rcrl
ja
xlat
mov
adc
jmp
dec
daa
lods
repz
xor
pop
mov
and
cltd
es
jnp
pop
cltd
out
outsb
mov
push
push
into
rcr
lcall
mov
pusha
mov
das
insl
push
das
sbb
enter
frstor
cmp
jg
and
adc
loopne
push
mov
std
mov
mov
jl
jae
push
mov
push
push
xorb
mov
std
movsl
xchg
xchg
cmp
sub
push
jmp
push
into
in
sbb
cmp
cmpsb
push
movsl
push
xor
loopne
cs
sub
mov
xor
out
in
cli
adc
ret
shrb
adcb
insb
rcrl
std
push
repnz
sbb
notl
lret
iret
adc
jbe
sbb
fwait
add
bound
ljmp
add
or
push
xchg
aas
std
jmp
pop
ja
sbb
mov
pushf
push
movsl
insl
mov
fistpl
sbb
add
addl
lock
lock
pop
lret
adcl
pop
jb
or
xor
jbe
inc
fs
scas
jp
xor
in
mov
cmpsb
and
dec
xor
dec
fsubr
cltd
popf
loopne
pop
das
inc
inc
lret
cmc
dec
popa
rcll
call
fdivp
mov
imul
test
rcrb
pushf
pushf
lods
clc
jp
loop
jo
jno
stos
es
test
loop
dec
leave
test
jb
mov
dec
repnz
and
mov
or
imul
scas
jo
in
push
mov
jg
and
xchg
xor
mov
pop
xchg
fistl
xlat
or
xchg
push
fldl
adc
out
pop
sbb
mov
push
jb
mov
mov
xchg
mov
scas
dec
and
dec
sbb
idiv
lds
add
jno
inc
in
xchg
jmp
enter
mov
xchg
inc
mov
mov
mov
pop
pop
add
insb
es
pop
clc
lock
stc
dec
out
adc
in
jl
into
cmp
popf
sbb
push
test
mov
ret
cmp
lret
mov
sub
loope
into
lret
daa
out
std
in
add
or
inc
xchg
dec
cld
pop
imul
and
sahf
fisttps
enter
jae
cmp
jecxz
mov
lahf
lods
imul
mov
in
sbb
push
jnp
and
adc
fmuls
and
imul
out
sbb
test
out
mov
and
xchg
jne
ja
bound
iret
movsl
sbb
test
lret
lret
pusha
inc
adc
mov
loope
inc
and
repz
lret
or
scas
cmp
mov
mov
inc
pop
cli
cmp
push
push
stc
test
add
sbb
adcl
lods
pminub
test
lea
loopne
cmp
cwtl
inc
movsb
cli
push
fdivs
sbb
lock
push
cmp
jg
imul
cmp
in
xorb
add
int
iret
arpl
pop
imul
mov
sub
xor
push
inc
dec
test
lcall
sbb
pop
or
cmpsb
and
push
sbb
out
lret
inc
je
popa
rorb
scas
loop
call
jle
out
lahf
pop
shlb
pop
xchg
psrlw
push
push
lds
cmp
cmp
test
adc
adc
push
jmp
js
lret
push
jne
scas
and
adcl
cmp
movsb
bound
inc
sahf
stc
mov
popa
mov
mov
pop
lock
mov
scas
mov
ret
jp
out
gs
shll
dec
in
jmp
nop
mov
mov
movsl
incb
shll
call
mov
aam
ss
mov
dec
movsb
stos
mov
icebp
aad
out
sub
hlt
call
scas
mov
push
sbb
inc
dec
shl
femms
daa
fdivs
xchg
push
jg
xlat
or
mov
cmp
xchg
stos
cmp
mov
pop
mov
aam
sub
sbb
dec
call
cmc
cli
jge
xchg
jmp
cmpsb
pop
fistpll
inc
sbb
sbb
imul
adc
sub
call
fwait
cmp
aas
adc
cmp
cmp
xchg
test
inc
sub
sub
lods
sub
push
adc
scas
imul
mov
and
out
or
adc
mov
cmp
push
es
push
pop
adc
sarb
cmpsl
loope
ja
mov
stos
insl
jo
xor
mull
xchg
xorl
jne
lcall
test
pop
in
push
xchg
push
in
sub
in
push
mov
mov
jg
aaa
enter
dec
jecxz
push
mov
movsb
xor
cmp
sbb
xor
ja
mov
sub
movsb
movsl
into
int
add
notb
add
test
lods
icebp
push
aaa
iret
sbb
call
lea
mov
sbb
push
cmp
jne
insl
pop
mov
xchg
lods
movsb
xchg
shll
mov
pop
lds
cltd
sahf
ja
xor
mov
xor
push
sub
cmp
jb
out
pusha
or
and
xor
lret
int
lcall
lret
fildl
ljmp
fs
mov
and
adc
lods
or
push
add
mov
rcrb
imul
lahf
mov
cmp
lahf
xchg
repz
bound
sti
shrl
popf
inc
aad
loop
xor
cltd
jge
xchg
push
dec
mov
sub
xchg
sbb
sti
subb
mov
jno
cmp
push
mov
lea
inc
stos
add
jmp
out
mov
mov
enter
pop
or
push
add
adc
ja
and
mov
cmc
mov
xchg
cmp
mov
xchg
push
pop
jb
and
clc
dec
mov
sbbl
add
or
or
pop
jg
sub
adcl
popa
imul
pushf
mov
pop
push
test
sub
add
push
je
push
push
in
or
lahf
inc
stos
push
iret
jmp
pop
or
push
pop
add
mov
leave
adc
aas
dec
ja
pop
and
xor
add
mov
jb
push
pop
xor
mov
inc
sbb
sub
or
and
imul
mov
popa
jecxz
adcl
das
adc
add
pop
lahf
cmp
pop
push
ficompl
jns
jle
inc
lock
ljmp
pop
data16
adc
cmp
inc
adc
inc
push
push
pop
pop
mov
push
cmp
ret
lds
lock
test
mov
mov
out
xchg
ret
jb
mov
mov
fwait
inc
imul
xchg
cli
sbb
fmull
cmpsb
adc
pop
imul
adc
es
or
cmpsl
sahf
xchg
sub
pop
and
mov
mov
jge
lock
pop
xchg
test
or
fdivrl
stc
in
xor
stos
fidivs
pop
ret
test
mov
ficoms
addr16
or
movsl
stos
clc
mov
into
cmp
cmc
xlat
shrb
inc
mov
and
mov
stos
mov
or
insb
and
cmpsb
ficomps
inc
stos
dec
mov
push
add
scas
cltd
cmp
inc
sub
aam
jmp
sbb
cmc
adc
into
movsl
das
aas
adc
ds
push
dec
adc
or
add
jge
mov
cmp
sahf
jmp
loope
aam
push
mov
mov
addr16
je
push
xorl
jne
cmp
int
or
aaa
dec
cmp
pop
outsl
js
cwtl
sbb
sub
push
push
sub
xor
mov
cli
mov
cmp
imul
inc
lret
aas
jl
bound
mov
das
dec
lods
xlat
adc
dec
pop
push
mov
push
push
dec
testb
roll
sbb
push
sbb
inc
jbe
out
dec
test
scas
fdivrl
jne
in
cltd
adc
shrb
insl
ja
test
shll
ss
fdivrs
cmp
std
fdivl
xor
jmp
int3
xor
mov
pop
inc
outsl
push
cld
popa
jl
xchg
push
stos
fsubrl
popa
movsb
mov
fwait
ja
clc
cmc
cmp
sbb
sub
scas
sbb
lret
xor
in
and
push
mov
mov
iret
or
addr16
outsl
fwait
cmp
lret
jle
jnp
jo
testl
adc
xor
xchg
jecxz
inc
outsl
fucomip
ljmp
mov
iret
icebp
fldt
mov
fs
or
sub
jle
jae
stc
inc
or
in
and
loop
add
mov
subb
adc
adc
movsb
mov
jbe
pop
pop
popa
lret
pop
mov
leave
ror
and
mov
jl
jge
inc
aaa
aam
les
dec
or
sub
jne
call
lock
mov
stos
repz
ret
je
mov
sbb
or
push
push
cmpsl
xor
add
insl
pop
add
xchg
xchg
pop
adc
imul
das
insl
xlat
sti
es
icebp
pop
cmc
mov
jbe
stos
out
cmpsl
cs
popa
shr
push
aad
cmp
loopne
lret
push
jecxz
hlt
jbe
cmpl
ret
fistps
cmp
add
inc
dec
arpl
lds
enter
adc
or
cmpsl
lds
add
ljmp
mov
mov
pop
rep
mov
fnstenv
sub
dec
cmp
cld
in
lea
adc
push
push
cs
scas
ret
pop
popl
sbb
jo
in
xchg
jne
pushf
mov
cmpsl
xchg
out
xor
frstor
push
ja
popf
aaa
fs
push
dec
mov
mov
lret
xorl
pushf
cs
or
fstps
adcl
bound
andb
imul
das
ja
jecxz
sbb
rolb
nop
in
push
jge
loopne
or
in
mov
inc
arpl
xchg
sub
jle
push
xchg
clc
jbe
push
sub
and
bound
out
pop
or
out
int3
sub
xor
inc
mov
inc
jge
pop
sarl
cmp
xchg
dec
test
sbb
lea
adc
mov
out
lock
mov
sub
sti
xor
jae
fcoms
cmpsb
fisttpll
mov
sbb
inc
enter
add
shlb
push
mov
or
dec
addr16
xor
out
sub
idivl
nop
jecxz
add
push
movsl
and
hlt
adc
test
fcompl
dec
faddl
push
add
pop
sub
iret
mov
lret
dec
mov
out
mov
or
je
test
movsl
jp
mov
mov
das
loopne
push
sbb
outsl
sbb
inc
pop
add
adc
cli
sbb
cwtl
sbb
addr16
xlat
imul
adc
flds
repnz
inc
ja
clc
xchg
mov
lahf
inc
xorl
sub
mov
test
int3
xchg
mov
sub
fidivrs
xchg
js
ret
fwait
addr16
xchg
or
sbb
addb
add
int
inc
xchg
andl
mov
lahf
test
shll
mov
es
adc
pop
mov
cmp
pop
imul
jae,pt
lcall
test
add
cmp
mov
movsb
xor
lret
stc
mov
repz
pop
pop
cld
sub
jp
add
int
xchg
lret
in
scas
roll
stos
push
cvttps2pi
push
nop
arpl
cmpsb
mov
mov
iret
call
sub
sahf
inc
das
out
scas
push
scas
mov
stos
jb
sbb
lcall
aas
push
add
imul
mov
ss
push
cmp
xor
adc
jno
sbb
inc
divb
xor
out
adc
arpl
jge
in
cmp
ljmp
outsl
sub
cmp
adc
outsb
popa
mov
xchg
pushf
imul
cmp
je
pushf
push
call
xor
xchg
pop
and
adc
and
aaa
lea
mov
xorb
paddusw
imul
sub
leave
ljmp
arpl
xchg
cmp
add
inc
xchg
xchg
ret
add
pop
lahf
xchg
jo
adc
popa
pop
nop
lock
fwait
or
pop
sub
cmpl
or
jo
insb
inc
insl
adc
xchg
scas
shll
push
sbb
lret
sub
dec
sub
sbb
pop
jl
inc
mov
mov
push
sub
jge
mov
xchg
divb
jge
and
cmp
shll
mov
lahf
push
and
mov
test
test
in
mov
inc
dec
mov
iret
and
cmp
shlb
mov
mov
les
adc
dec
mov
push
outsl
cmp
xchg
lcall
out
cmpsb
or
ret
mov
pop
mov
and
jle
add
sub
bound
in
lahf
in
push
mov
push
push
scas
rcrb
sub
sub
cs
lret
mov
add
aas
inc
and
mov
dec
scas
fbstp
iret
loopne
mov
cmp
cli
rcll
adc
cwtl
pop
xor
mov
add
xor
or
mov
pop
dec
hlt
cmp
les
outsb
mov
jp
xchg
ja
icebp
push
jb
fisubs
or
fiaddl
lcall
or
jmp
arpl
sub
cmp
aaa
or
jns
sub
lret
adc
jg
inc
out
inc
adc
int3
das
in
js
push
inc
into
xchg
and
imul
add
test
addl
pop
inc
stos
ljmp
sbb
xlat
fisubs
lods
iret
lret
data16
mov
mov
lcall
jne
pop
inc
fcmovne
inc
push
cli
ret
mov
dec
and
jno
movsl
mov
push
cmp
jbe
lahf
mov
xor
out
push
xchg
sub
cmp
cmpsl
fsubp
pop
scas
mov
icebp
xchg
pop
mov
andl
adc
inc
mov
daa
pop
popf
adc
stos
clc
dec
sbb
pop
cmp
sbb
xchg
xlat
or
push
sbb
jo
mov
int
rol
or
test
xor
ret
not
sub
shlb
fucom
ret
xor
insb
add
jmp
test
xchg
movsb
cmp
jecxz
scas
jecxz
and
xchg
das
xchg
fiadds
fistpl
inc
jb
mov
cmp
outsb
outsl
sub
pop
xchg
js
add
ljmp
fs
xchg
insl
mov
imul
negb
push
icebp
cmpsb
ror
cmp
pop
in
fimull
mov
jno
insb
repnz
ret
les
jl
aas
in
jle
pop
je
hlt
dec
scas
loope
cmpsb
arpl
andb
adc
adc
cmc
pop
mov
out
int3
ret
repz
fs
ja
mov
sub
add
xchg
push
fsubrp
push
lods
dec
lock
cmp
mov
inc
xrstors
add
push
pop
das
dec
sarl
lods
fnstenv
mov
push
test
inc
into
dec
ret
cmp
mov
cmp
adc
jno
mov
adc
cmc
imul
rcrb
or
jge
mov
adc
pop
xor
xor
and
popl
aaa
mov
loope
decb
mov
inc
test
or
push
mov
mov
mov
xchg
dec
push
mov
mov
xchg
outsb
cmp
push
mov
fcmovnb
xchg
hlt
jns
add
cmp
cmp
in
lock
scas
repz
cmpsb
loop
cli
arpl
mov
cmp
out
mov
hlt
cmpl
and
popf
dec
movsb
jo
push
idivb
add
push
arpl
push
xor
repz
pop
pop
test
or
cmpsl
pop
out
mov
outsb
cs
loopne
or
cwtl
shll
jmp
mov
mov
scas
ret
jl
inc
and
out
dec
ficompl
adc
stos
mov
push
mov
lods
setg
pop
sub
popf
cld
inc
inc
jbe
xor
fimuls
add
jb
idiv
inc
sbb
lods
lods
je
ret
mov
nop
mov
fsubs
pop
or
adcl
jns
push
inc
inc
call
nop
xor
mov
xchg
xchg
jno
sub
enter
lahf
adc
loop
mov
cltd
dec
xor
mov
mov
mov
sub
cmc
ret
repz
push
lods
xchg
and
inc
push
xchg
fildll
sbb
xchg
xchg
lcall
adc
mov
in
cmc
sub
je
mov
or
mov
ja
inc
rcrl
adc
repz
lcall
inc
incl
jns
je
loopne
cmp
sbbb
stos
mov
sbb
sbb
cmp
xor
xchg
xchg
mov
aaa
push
dec
or
push
outsb
fbld
js
mov
lcall
rcl
pop
cmpsb
mov
lods
imull
repnz
add
adc
lods
shlb
mov
cmpsl
mov
xorb
xor
jne
fsubrl
js
lret
sahf
jmp
xchg
jne
fstps
sti
pop
test
sub
mov
mov
add
jb
inc
test
stc
cmp
pop
ja
mov
lds
and
cmp
add
cmpsl
cs
imul
ljmp
loop
push
scas
dec
adc
jge
adc
dec
sbb
mov
pop
iret
mov
xchg
pusha
ljmp
sti
xchg
dec
outsl
in
add
jno
cmp
sbb
xor
std
cli
mov
pop
push
mov
lret
rclb
call
jb
lea
shll
stos
lret
mov
iret
fldt
movsb
pop
jnp
lahf
lret
mov
mov
stos
mull
jmp
mov
push
outsb
rcrb
dec
shrb
dec
jp
daa
add
cmp
ja
inc
stc
je
inc
sbb
xchg
sbb
mov
out
push
lods
add
out
ret
jmp
mov
sar
or
rcrb
xor
push
in
sbb
cmp
aaa
dec
out
mov
add
fidivrl
cmp
mov
cmpsl
neg
sbb
lret
enter
and
pop
push
jmp
loopne
sbb
mov
sarl
jnp
nop
rcl
mov
push
popa
mov
test
fdivr
out
add
jne
in
push
mov
mov
pop
pop
inc
in
nop
cmp
ja
stos
sub
cmp
inc
test
arpl
negb
inc
fisubs
leave
shll
push
lds
aad
xor
int3
or
movsb
pop
scas
inc
adc
adc
imul
fwait
test
sbb
and
jmp
lret
sbb
data16
std
sbb
dec
mov
movsb
lods
aad
ror
pop
inc
addl
or
ds
outsl
into
leave
push
sub
mov
enter
sub
imul
ret
add
adc
pop
stos
inc
leave
add
xor
dec
push
sbb
pop
rorb
movsl
pop
mov
push
leave
xor
repz
dec
js
cltd
ja
xchg
rolb
loopne
add
cmp
daa
and
and
pop
out
into
sub
in
jnp
fsubl
shrl
dec
push
sbb
leave
xchg
push
or
roll
iret
scas
push
mov
sbbb
xlat
inc
pop
imul
fsub
jns
cli
aad
stos
movsl
xchg
cmpl
jo
daa
outsl
pusha
ret
lret
jae
push
sub
mov
jge
loop
stos
hlt
int
xor
int
mov
xor
mov
adc
xchg
and
add
fidivrl
andb
je
roll
push
push
lock
faddl
mov
loope
popa
mov
or
mov
push
negl
dec
movlps
loopne
xor
add
xchg
in
xor
adc
insl
push
inc
xor
lods
lock
xchg
mov
lcall
push
imul
pop
adc
inc
fnstsw
aad
xchg
test
test
imul
sub
push
pop
add
rorb
xchg
cmp
clc
popf
mov
pop
adc
out
cmp
xor
or
dec
jmp
lock
call
pusha
and
xchg
push
cld
mov
lcall
fidivrl
arpl
mov
mov
es
jns
fisubrl
ja
out
xchg
shll
ljmp
cltd
sbb
movsl
enter
in
testb
into
pop
and
add
outsb
mov
mov
dec
jb
sbb
enter
mov
stos
xchg
cmp
lock
iret
fcoms
ja
mov
and
add
shll
inc
cmpxchg
adcl
cmp
fbld
push
mov
push
adc
test
fwait
jno
shl
in
shl
cmp
shl
mov
iret
or
pop
push
and
adc
mov
cs
inc
leave
test
cwtl
out
adc
aaa
xlat
mov
in
out
push
mov
cwtl
xchg
aaa
and
out
loope
ds
loop
int
push
push
inc
or
jge
sub
hlt
add
pop
fsubs
mov
and
cltd
lods
xchg
push
cmp
xchg
push
jl
cmp
add
push
sbb
add
jecxz
fwait
testb
rcrb
leave
xchg
scas
push
mov
das
xchg
por
lds
shll
xor
cmpsl
test
roll
mov
loop
mov
pusha
cs
lods
add
sbb
cmp
insl
jmp
cltd
aas
adc
lock
popa
je
icebp
das
push
lahf
cs
enter
lret
and
ret
fs
test
adc
mov
push
mov
jno
fwait
and
outsb
jae
call
fdivrs
fnstsw
inc
mov
inc
cmp
jl
dec
lcall
dec
ret
push
mov
dec
xor
push
sub
scas
andl
xor
mov
int
ds
pop
scas
mov
into
daa
jecxz
add
mov
fistl
xchg
icebp
fimull
cltd
fwait
aaa
cmpsb
cs
mov
scas
addr16
fst
mov
sbb
fistps
int
in
aas
mov
push
jns
gs
push
enter
jae
adc
mov
out
repnz
je
movsl
jns
fcompl
add
adc
xchg
stos
out
out
xlat
in
adc
mov
add
push
pop
xlat
jmp
mov
in
adc
movsb
movsl
not
add
sbb
subb
mov
jns
lods
pop
lods
lea
adc
xchg
ja
or
inc
ret
xchg
aas
jmp
push
imul
fcoms
adc
popa
and
push
adc
add
call
imul
inc
jae
dec
jmp
add
xor
lods
shl
dec
test
pop
mov
or
daa
push
arpl
js
into
jp
jge
jecxz
add
adc
addb
add
cmp
cmp
push
push
test
push
sub
sub
inc
xchg
or
xor
clc
push
cmp
cmp
cmpsb
fisubs
push
jb
cmpsl
out
insb
inc
mov
mov
and
lods
pop
push
push
imul
idiv
mov
test
mov
bound
int
xchg
dec
dec
popf
lret
pop
imul
xchg
sub
jmp
cmpsl
aam
pop
inc
repnz
out
inc
jl
push
cltd
adc
sbb
pop
mov
popf
data16
lret
mov
mov
pop
ret
addr16
and
mov
lods
push
inc
rcll
lret
pop
mov
sbb
sub
xchg
inc
iret
jns
push
push
dec
jg
icebp
xchg
hlt
insb
mov
movsl
ss
out
add
mov
imul
ret
aaa
out
xchg
jg
cltd
aas
out
mov
pop
ret
or
mov
dec
pop
sub
push
les
into
mov
and
dec
pop
sbb
inc
pop
adc
xchg
lret
adc
jp
cmp
clc
jb
arpl
adc
out
pop
into
ret
xchg
into
mov
jne
mov
jp
jne
add
shlb
outsb
imul
dec
rcrb
leave
add
mov
dec
jle
jmp
pop
stos
lcall
pop
push
add
add
adc
mov
jno
repnz
lods
cmpsl
and
xchg
push
movsb
shll
cwtl
sub
push
mov
sub
repnz
inc
jbe
sbb
ss
jecxz
inc
loope
sti
inc
test
push
fcmovnbe
or
xchg
lds
outsb
clc
mov
and
scas
pusha
dec
dec
pop
mov
or
xchg
mov
fmuls
cld
fildll
or
add
outsl
dec
mov
xlat
sbb
add
mov
lods
idivb
pop
jmp
xor
sbb
fidivrl
jge
mov
ret
fcomps
lret
arpl
fidivl
pop
adc
xchg
xchg
popa
bound
mov
mov
push
xchg
in
and
fimuls
cld
fmuls
insb
addr16
dec
fdiv
arpl
xchg
ds
mov
pop
cmp
ret
inc
adc
sbb
cmp
xchg
fwait
popf
inc
mov
repnz
nop
lret
xor
mov
fsubrl
sub
mov
xchg
notl
sub
jecxz
outsl
and
inc
jo
inc
in
cmp
aas
push
jno
fldcw
enter
loopne
or
mov
fs
xchg
inc
mov
sbb
xchg
in
sbb
aaa
jnp
dec
xor
lods
sti
xor
pop
sub
push
insb
imul
push
lcall
inc
fisubrs
and
cmpsl
repz
call
divl
inc
negb
dec
pop
jecxz
cs
mov
insb
mov
mov
jg
fisttpll
ss
test
pop
ficompl
insb
cwtl
sbb
call
jnp
adc
cli
push
mov
mov
in
mov
sub
les
out
addb
fadds
inc
pop
enter
pusha
loope
sti
mov
add
aad
scas
mov
dec
and
es
fnstenv
pop
int3
jo
pop
in
repz
sub
xor
lods
ss
pop
pop
adcb
cmpsl
xchg
mov
push
ret
xchg
ja
mov
xlat
fsubrl
push
hlt
in
jge
shrl
or
nop
in
mov
cmp
mov
outsb
mov
adc
push
jle
xchg
xor
and
sbb
cmp
js
mov
or
xchg
je
insl
lods
sub
pusha
out
outsb
jnp
push
scas
sbb
jmp
sbb
repnz
pop
lret
enter
sub
or
xchg
psubb
jo
leave
adc
or
lods
cmp
push
stos
or
ljmp
mov
inc
mov
adcl
push
or
test
test
mov
push
imul
iret
jl
push
mov
out
andl
incb
mov
adc
cmp
lret
movsl
pop
xchg
enter
and
mov
xor
aaa
or
push
mov
je
dec
jmp
sbb
mov
mov
es
movsb
jo
sub
push
pop
pop
pop
inc
stc
xor
or
jae
xlat
jg
sbb
ds
cmpsb
decb
hlt
cmp
jbe
cmp
add
push
pop
push
pop
jo
mov
popf
aam
sub
and
mov
xchg
mov
outsb
fcoms
inc
xchg
je
das
push
pop
jecxz
sahf
in
lock
or
cmp
dec
jno
sbb
imul
inc
vpermilps
pop
jo
shr
test
mov
out
jmp
cmp
xchg
push
jge
stc
mov
xor
push
and
mov
data16
dec
or
cli
std
push
stos
inc
cmc
int
pop
lahf
imul
cld
inc
mov
sti
gs
push
cmp
xchg
negl
mov
push
or
push
pop
mov
adc
in
lock
lahf
das
and
dec
xchg
and
jno
or
movsb
jae
lods
mov
and
ss
xchg
xchg
push
leave
add
adc
jmp
rcrl
test
addb
sbb
push
mov
lret
add
cs
mov
push
jmp
xchg
push
pop
jle
enter
xchg
jmp
std
jmp
xchg
icebp
test
xchg
cld
mov
add
nop
push
lahf
mov
fisubs
incl
stos
dec
push
xor
mov
sub
arpl
ss
dec
lea
mov
in
add
insl
scas
dec
pop
stos
xchg
dec
inc
bound
stos
xor
jae
mov
or
push
popa
jns
into
int3
mov
out
mov
inc
sub
sbb
mov
sbb
ljmp
ss
stos
and
aaa
popa
pusha
int3
repz
cmp
scas
xchg
or
out
test
push
cwtl
jbe
insl
sbb
push
lock
adcl
enter
clc
cmpsl
push
pop
imul
inc
jnp
cld
mov
dec
xchg
loop
cmp
mov
mov
ljmp
mov
sub
push
mov
mov
imul
aam
mov
lods
pop
fs
in
mov
int3
mov
add
out
jne
mov
sub
ret
jl
dec
fsubr
out
add
je
inc
hlt
mov
sub
ss
adc
ret
dec
pop
mov
adc
ror
add
lea
fstpt
dec
mov
scas
and
sbb
sub
mov
or
add
jbe
shlb
jl
es
ret
sbb
and
xlat
ljmp
mov
sbb
outsl
ss
adc
stos
ror
daa
add
jne
popa
mov
fdivrl
call
jmp
arpl
fsubl
pusha
jne
imul
add
pop
fistpll
addr16
adc
mov
sbb
data16
adc
sahf
push
cwtl
add
repnz
bound
mov
data16
push
rcrb
pop
mov
out
imul
mov
add
adc
idivb
fsubl
lea
push
xor
movq
subb
aam
inc
sbb
es
out
mov
test
das
gs
inc
sub
and
mov
mov
jmp
movsl
xor
mov
cmp
mov
pushf
mov
fwait
sub
or
push
cmpsl
inc
adc
mov
fwait
cmp
inc
popa
les
mov
shlb
loopne
xor
mov
pushf
pop
int
adc
inc
jp
sti
pop
pop
mov
sub
das
lret
sub
adc
push
mov
icebp
mov
jmp
mov
push
push
sahf
or
xchg
int
cmc
mov
inc
pushf
in
or
push
inc
mov
xchg
in
insl
movsb
roll
xor
stos
inc
sbb
leave
or
mov
sbb
call
and
arpl
cwtl
inc
iret
lahf
out
jge
cli
pop
xchg
popf
and
mov
daa
and
push
stos
pusha
dec
hlt
jne
push
jae
push
pop
fildll
cltd
or
aaa
xchg
mov
loope
jecxz
xchg
pop
push
or
mov
mov
sbb
add
mov
ljmp
add
sbb
outsb
cli
lret
adc
stos
sbb
cmp
cltd
cmc
mov
cmpsl
inc
stos
ljmp
sti
add
sub
mov
mov
in
inc
and
or
aad
mov
push
adc
mov
clc
and
dec
rol
out
out
and
or
add
xor
test
mov
mov
testb
or
cmp
sbb
push
cmc
jge
sar
fldenv
mov
mov
movsb
mov
add
mov
scas
ret
loopne
movsb
enter
xorb
xchg
or
pushf
lock
sub
pop
test
loop
jp
sbb
data16
mov
sbb
fimull
cli
sub
xchg
mov
or
add
fadds
push
mov
ret
ja
xchg
or
es
imul
test
or
xlat
xor
lea
mov
repnz
rclb
insl
jecxz
ja
pop
mov
pop
mov
into
negb
add
cmpsl
shl
cmpsl
mov
daa
pop
jecxz
sbb
imul
ljmp
add
test
pop
cmp
pop
or
sub
test
jmp
scas
jns
stos
mov
fbstp
mov
or
ret
sub
and
in
sbb
and
imul
int3
loopne
mov
lahf
movb
jg
jnp
and
xorl
les
add
mov
xor
mov
xor
test
sti
psubsw
fidivrs
or
lcall
sub
cmp
cmpsl
popa
loopne
aaa
test
imul
jl
or
xchg
js
mov
test
add
add
sbb
mov
jp
shl
imulb
arpl
jecxz
int
ret
idivl
scas
or
sbb
adc
mov
xchg
push
cmpsb
cmp
das
pop
aad
pop
add
shrl
xor
sarb
sahf
and
jb
in
xlat
in
sbb
add
inc
outsb
enter
ret
pushf
dec
jmp
ljmp
iret
rol
or
xor
mov
lds
cmp
icebp
adc
mov
sbb
and
and
je
xor
std
call
push
scas
dec
add
stc
jae
repnz
pop
mov
xchg
jp
sub
and
mov
or
or
push
or
fistps
push
pop
jns
pop
push
shr
or
aam
xor
ds
xor
test
pop
pop
out
mov
and
cmp
mov
add
jne
lods
or
dec
xchg
push
pop
mov
xchg
push
call
repz
int
sub
call
mov
fbstp
push
dec
movsl
sbb
popf
jp
test
jnp
sub
clc
mov
inc
test
popa
dec
lock
addr16
test
vpminsw
adc
push
je
shrb
xchg
out
cli
data16
mov
cli
push
fnstcw
add
sbb
inc
sub
adc
and
or
aad
jge
lds
in
lahf
dec
push
cmpsb
and
std
push
xor
scas
or
mov
dec
insl
sbb
jecxz
or
mov
push
cmp
cmpsb
pop
cmp
or
mov
mov
mov
push
push
mov
push
subl
mov
cmp
jg
call
cmc
push
sub
inc
ret
dec
push
push
bound
xchg
push
ss
push
mov
pop
jo
jns
pop
bound
ljmp
push
sti
and
stos
cmp
jp
pushf
stos
movsb
icebp
xchg
fistpl
sti
push
flds
mov
js
js
xchg
cltd
mov
nop
jmp
xor
cmp
sub
insb
das
mov
cmp
out
hlt
imul
shlb
mov
jns
mov
orb
repz
daa
xchg
mov
lcall
inc
bound
dec
outsl
jl
je
insb
xchg
push
dec
ret
mov
dec
adc
pop
in
xchg
jnp
jae
dec
cwtl
mov
enter
mov
jae
fsubp
and
fs
lcall
lret
lret
jg
loopne
pop
and
add
into
fs
add
fistps
cmpsl
push
je
and
test
adcb
mov
mov
scas
adc
loop
lcall
ret
frstor
xor
mov
out
mov
jbe
add
int
mov
jecxz
out
sbb
test
jb
push
and
mov
xor
pusha
jecxz
repnz
lock
mov
ja
pushf
fistl
mov
cmp
push
inc
pop
or
mov
cmpsl
out
repnz
loope
shll
add
cmp
and
add
stos
mov
mov
ret
sbb
test
adc
mov
add
lret
add
xlat
and
call
aas
aam
pusha
xchg
dec
imul
adc
or
mov
add
aas
pop
mov
repnz
or
cmovns
add
es
mov
pop
dec
xor
cmp
mov
pop
inc
call
das
mov
aaa
mov
in
sub
sub
andl
xor
stos
sbb
jl
push
hlt
xchg
jp
sub
fisubrl
adc
and
adc
mov
xor
mov
mov
stos
xchg
popa
call
adc
add
mov
rclb
daa
mov
clc
push
pop
ljmp
xor
cmp
loope
lahf
mov
test
sub
inc
das
push
dec
push
addr16
testl
stc
pop
sbb
mov
xchg
iret
pop
push
sbbb
xlat
push
inc
mov
push
xchg
xor
mov
push
and
out
mov
lock
sbb
in
test
clc
cmp
ret
in
xchg
xchg
shlb
inc
inc
inc
lods
insb
adc
cli
dec
pop
adc
cmp
mov
sbb
jp
inc
pushf
adc
adc
cmp
lock
loopne
mov
sub
or
mov
xchg
or
lret
neg
xchg
pop
pop
out
cmpsl
dec
or
sarb
jns
xchg
lcall
xchg
jbe
mov
addr16
inc
add
les
lds
test
sbb
insl
pushf
pop
jl
imulb
cmp
loop
or
mov
je
cmp
fs
dec
push
cmp
test
adc
roll
insl
lea
push
popf
cwtl
inc
ja
jmp
lods
iret
das
jge
and
xchg
jne
mov
jbe
fsubrs
jmp
ja
push
out
jmp
fwait
dec
test
fsubrs
icebp
mov
cmp
cmp
in
sbb
add
ljmp
jnp
xor
push
mov
cmc
xor
mov
push
dec
sbb
cli
mov
int3
jae
xor
nop/reserved
leave
out
fs
fisubrs
subl
pusha
fsubrp
shrb
xor
mov
popa
sbb
pop
adc
inc
int3
mov
mov
sbb
add
cmpsb
xchg
jns
inc
cmp
adcb
sub
xchg
xor
repz
dec
cmp
and
inc
aaa
pop
and
push
jbe
push
jecxz
fcoms
mov
hlt
push
jg
fwait
movsb
pop
inc
in
out
in
in
inc
xchg
mov
sar
pop
test
jno
data16
jle
shl
sbb
and
pop
sub
fs
push
jmp
jae
std
ja
dec
inc
stos
pushf
ret
mov
repnz
pop
shlb
jg
outsb
test
inc
pop
pop
and
loop
mov
out
push
push
jns
insl
cld
jecxz
cmovg
or
pop
lds
loop,pt
xor
test
pop
in
repnz
jne,pt
add
dec
pop
jecxz
fnstsw
mov
dec
cmp
popf
mov
jg
ds
sub
test
repnz
and
push
mov
iret
ret
sub
and
mov
inc
and
mov
fwait
imul
repz
cld
rcrl
insl
jne
mov
inc
pop
rcrl
or
mov
in
xor
ret
jmp
call
sbb
and
jg
xchg
sahf
popa
jl
loop
dec
mov
mov
and
mov
jecxz
ja
shr
adc
xor
mov
popf
xchg
adc
sbb
sahf
xor
fs
sub
stos
pushf
xchg
pop
sarb
outsb
js
mov
popf
xor
dec
pop
push
xor
jle
push
mov
fwait
xchg
shlb
adc
dec
xchg
andnps
mov
jo
and
stos
je
push
inc
bound
jns
int3
data16
rcll
rorb
mov
sub
xchg
clc
mov
lret
and
xchg
inc
push
or
and
ss
mov
add
mov
xlat
jl
xor
movsb
insl
cli
push
rclb
dec
nop
aad
imul
jge
imul
scas
scas
dec
push
sbb
int
push
scas
mov
fsts
mov
mov
inc
xchg
insb
jae
sub
sub
cmp
mov
jecxz
rclb
xchg
xchg
or
sub
xchg
lret
mov
fsubl
cwtl
shll
std
jp
sub
jnp
jl
pop
jp
fisubrs
shrl
xchg
fimull
mov
sub
insb
sub
shlb
push
ds
mov
push
push
dec
mov
sub
jg
subl
stos
and
jae
sbb
mov
hlt
pop
sbb
mov
jno
rolb
jp,pn
dec
bound
call
imul
lcall
add
in
push
sbb
cmp
cmp
cmpsl
rcrl
lcall
rorl
jno
pop
add
stos
cmc
gs
push
fwait
into
repnz
jae
addb
jmp
push
push
repnz
or
ss
sub
in
fwait
mov
bound
xor
cmp
cmp
pop
lahf
popa
mov
repz
lret
mov
stos
pushf
lods
push
ds
pop
outsb
fdiv
outsl
push
adc
mov
xchg
sarl
jae
mov
sarb
add
push
loop
pop
or
lock
sub
idivb
outsb
and
lretw
loope
idivl
sahf
mov
xor
jns
mov
cmp
ljmp
xchg
pop
cmp
mov
xchg
imul
mov
pop
cmpsl
xor
fwait
mov
inc
mov
test
mov
lods
xor
les
jns
pusha
movsb
cmpsb
aam
jle
mov
in
xor
nop
jmp
mov
shlb
fnstsw
sbb
jo
or
lret
repz
push
mov
inc
adc
cli
mov
sub
movzbl
daa
inc
inc
mov
cmp
jmp
jge
lahf
jbe
test
arpl
pusha
insb
int
stc
push
sbb
or
inc
dec
ret
test
and
add
and
inc
icebp
push
push
sarb
dec
xorb
ficoms
arpl
pop
test
jnp
pop
pop
repnz
out
mov
cld
scas
add
cmp
push
lock
adc
cmpsb
cmp
xor
fs
in
dec
mov
sbb
imul
sub
pop
outsb
cmpsb
add
es
shlb
rcrb
sbb
mov
and
and
push
shlb
push
imulb
or
or
mov
negb
lahf
cmp
in
test
dec
das
lock
rol
in
or
xorb
call
mov
int3
fistpll
aad
xchg
add
aas
lock
fcoms
push
xchg
pop
scas
lods
aas
jge
add
sub
pop
out
lock
mov
sbb
ret
inc
push
movsb
stos
arpl
xchg
dec
in
jbe
cmpsl
sbb
mov
or
pushf
mov
push
push
lods
pop
enter
adc
and
repz
push
add
xor
pushl
and
cmpsl
xor
and
sar
rol
mov
testb
aad
or
mov
add
lahf
mov
jb
mov
or
and
push
sbb
jbe
and
pop
pop
out
jle
mov
pop
mov
lods
mov
or
adc
ja
enter
cmpl
pusha
movb
adcl
mov
xchg
or
mov
jp
pop
sbb
sti
movsb
xor
fdivl
leave
mov
jecxz
in
adc
jge
mov
pusha
mov
nop
fstps
jmp
mov
push
mov
std
and
mov
movsb
movsb
mov
scas
jg
gs
sub
lea
das
aad
daa
ljmp
mov
jns
sub
cmp
test
mov
sti
lds
outsb
push
test
sbb
sbb
dec
dec
cmpsl
fwait
movsl
xor
inc
popf
jg
decb
mov
dec
test
cmp
movsl
sarl
loopne
push
fstl
mov
shr
and
in
sub
shll
jmp
mov
sbb
sarb
and
push
sbb
xlat
sarl
or
cld
inc
mov
jecxz
mov
mov
lahf
std
add
mov
cmp
push
cmp
inc
mov
pop
cmp
sub
and
sahf
bound
js
mov
test
int
fs
daa
mov
addr16
sub
and
addr16
dec
xchg
mov
add
insl
movsb
push
sbb
sarl
hlt
mov
pop
push
lret
add
cwtl
mov
lahf
into
das
or
mov
xchg
fscale
add
jl
test
dec
cwtl
and
xchg
stos
push
out
or
adc
test
adc
into
sub
cltd
lret
fldl
mov
push
popa
iret
fcoms
sub
jmp
mov
ja
jne
pop
scas
cs
xchg
mov
xchg
stos
popf
sbb
fildl
lock
mov
aam
and
xchg
movl
mov
cmp
cmp
xchg
fmull
push
push
jae
push
sub
cmpl
stos
push
aad
out
sbb
imul
pushf
sbb
xchg
jno
jge
scas
cmpsb
cmp
and
and
dec
dec
cmp
shrl
aas
cmp
ficoml
or
push
popa
xor
and
sbb
daa
sbb
push
dec
nop
and
lds
mov
pop
hlt
fistpll
sahf
cltd
pop
out
inc
pop
adc
sbb
fstl
sub
jne
lcall
push
mov
mov
jne
adc
add
dec
and
mov
sub
pop
call
out
mov
mov
ljmp
xor
cld
xchg
or
icebp
pushf
cmc
adc
jbe
mov
cmpsl
or
in
rcr
xor
nop
jge
push
stos
das
mov
out
out
fsubl
les
inc
mov
xchg
out
aaa
hlt
je
enter
enter
scas
stos
cmpl
push
in
fildl
mov
rorb
cld
lock
adc
popf
out
test
jbe
mov
mov
inc
repnz
mov
scas
xchg
inc
inc
sbb
clc
mov
mov
nop
push
xchg
xor
aaa
jg
loope
xor
cmc
das
lahf
fcomps
fisubl
shlb
pop
pop
pop
lods
xchg
leave
pop
sbb
xor
das
sarb
lock
add
pop
mov
int3
sub
les
pop
xor
inc
dec
and
rcrb
call
popf
cltd
sahf
adc
and
std
test
js
enter
sub
movsl
lret
daa
inc
daa
sbb
jmp
fcoms
pop
and
in
inc
loopne
xor
or
stos
call
or
sti
push
sbb
loopne
incl
mov
into
jmp
mov
fs
jbe
cld
sbb
fmull
subb
mov
add
lret
dec
dec
pushf
add
outsl
out
bnd
aaa
sahf
rolb
inc
dec
test
loope
movsb
cmp
cmp
shll
dec
ja
cmpb
enter
push
cmp
xor
mov
ljmp
push
imul
es
cmp
mov
mov
mov
out
popf
jnp
cmp
xorb
mov
rcll
aam
inc
jg
mov
js
scas
dec
mov
pop
repz
xor
dec
clc
xchg
sarb
sahf
jmp
lcall
leave
loope
stc
cmp
fisubrl
mov
cmc
xchg
in
pop
aaa
js
les
inc
mov
test
jae
imul
pop
push
insb
imul
xor
and
inc
in
xchg
dec
test
mov
pop
mov
incb
xchg
andb
aam
int
mov
add
aam
mov
pop
out
in
aam
jbe
xlat
mov
or
adc
mov
xor
and
mov
mov
fwait
in
pop
pushf
add
ljmp
std
in
add
pop
mov
adc
lcall
pop
aam
xor
aam
sub
jae
imul
adc
sarb
lods
lods
cltd
nop
jno
dec
scas
mov
ret
mov
or
roll
lods
rorb
jl
cld
jmp
outsb
mov
mov
call
adc
nop
leave
cmp
fistpl
or
push
stc
jl
jmp
push
jmp
mov
negb
cld
adc
and
aam
mov
mov
testb
xor
or
xchg
dec
sub
adc
outsl
repnz
mov
mov
pusha
aaa
mov
loopne
leave
mov
pop
iret
sbb
mov
sbb
shlb
push
testl
sahf
cld
rol
and
les
mov
xor
lods
cmp
xchg
inc
and
jns
adc
fildl
dec
sahf
pushf
and
call
aad
ret
bound
inc
in
jg
and
cmp
roll
lods
push
jle
fs
or
pop
out
in
bound
push
jle
pop
fwait
lds
stos
pop
imul
cli
cli
mov
clc
or
dec
xor
mov
push
dec
xchg
ja
hlt
call
sbb
inc
add
mov
dec
sub
aad
rclb
dec
mov
pushf
jo
cwtl
fstpl
daa
mov
xlat
es
mov
insb
imul
cwtl
movd
test
test
mov
mov
idiv
push
cmp
faddp
iret
es
aaa
mov
subb
lods
xor
push
mov
mull
adc
jp
shll
decl
dec
dec
mov
inc
adc
movl
ret
inc
aad
and
insb
adc
std
jg
jno
repnz
les
ja
rcll
mov
je
stos
xor
scas
out
ja
xor
sahf
mov
inc
out
out
cmp
inc
lret
test
outsl
xor
je
or
aas
inc
cmc
xchg
sbb
loop
xor
repz
push
and
cmp
scas
or
pop
pop
sub
push
jno
mov
testl
aaa
inc
xlat
push
arpl
pop
pop
xchg
jbe
or
cmp
pop
push
ret
fsubrl
mov
stos
jns
push
xor
push
jne
push
pop
inc
cmpsl
sbb
add
xchg
push
cmp
mov
or
push
imul
add
scas
sbb
sbb
repnz
xor
cmc
jns
push
imul
lcall
shr
inc
adc
push
jl
in
or
adc
test
jecxz
sbb
and
in
std
popa
jp
fs
cwtl
decl
jp
data16
imul
movsl
dec
pop
mov
orb
pop
iret
or
ljmp
inc
mov
pushf
push
and
push
add
lea
sbb
ret
pop
popa
cmc
fldenv
ja
pushf
aam
lcall
ja
pop
rclb
into
hlt
xchg
xor
repz
fstl
jp
or
mov
stos
fsts
jg
ljmp
jb
lahf
cwtl
out
popl
mov
push
jae
in
nop
mov
inc
into
addr16
enter
mov
fidivrs
scas
rcll
popa
xor
and
jecxz
and
cld
xchg
and
mov
ret
sub
jb
sbb
sub
in
shlb
inc
or
add
dec
or
push
sbb
jo
xor
aaa
loope
sti
ss
insl
xchg
mov
lea
mov
dec
jb
and
push
push
sbb
xor
outsl
xor
add
jbe
scas
fnsave
std
sub
inc
jno
dec
mov
fcmovnbe
ret
scas
out
lret
jnp
cmp
sbb
pop
hlt
inc
inc
add
mov
fwait
xor
sahf
or
xchg
xor
fbstp
stos
rorl
pop
mov
loop
xor
jg
mov
mov
pop
popa
loope
andl
outsl
aaa
xor
cmc
ljmp
sbb
mov
pop
outsl
adc
inc
sub
enter
jo
xorb
push
add
in
mov
aaa
stos
das
pop
sub
jmp
sbb
push
jl
mov
mov
cltd
clc
add
aas
jae
push
fnstcw
popf
cmc
dec
test
es
sbb
test
loope
out
aam
fsubrs
push
mov
adc
fwait
xchg
data16
out
cmpsb
fwait
mov
fsubs
roll
inc
jl
ja
xor
jecxz
mov
xlat
addr16
mov
insb
scas
scas
push
sbb
push
jbe
daa
lret
push
adc
test
xlat
inc
shrl
scas
pop
sub
add
pop
mov
add
loopne
cmpsb
cmc
rol
fdivl
or
push
add
jb
pop
sbb
push
push
xor
addr16
mov
out
pop
sbb
aam
mov
jp
or
mov
pop
pop
std
repnz
pop
fwait
dec
mov
aaa
lock
push
test
add
mov
xlat
lea
out
sub
jle
push
arpl
lahf
sbb
mov
pop
int3
aaa
movsb
sbb
sub
sub
insl
mov
mov
das
add
dec
xchg
xor
xchg
sbb
jbe
cmp
dec
out
xchg
cmpsl
xor
data16
sub
cwtl
push
xchg
inc
jmp
stc
adc
aas
movsb
jecxz
cmp
imul
sub
sbb
lcall
fisubrs
lcall
cwtl
das
sub
jecxz
push
cltd
jge
call
in
daa
inc
leave
and
rorl
test
pop
mov
insl
test
aad
iret
lock
adc
outsb
js,pn
cmc
imul
int3
push
jne
mov
out
and
xchg
faddl
xor
and
fcomip
call
repnz
scas
nop
stos
in
push
sub
dec
dec
rorb
bswap
mov
repz
push
arpl
dec
fcomps
lods
push
xchg
ja,pn
ret
js
mov
adc
lahf
out
push
das
pop
cli
or
jecxz
lret
add
add
jg
and
or
mov
movsl
push
rclb
cld
cmc
fisubrs
out
push
data16
fsts
sbb
das
sub
mov
aaa
xorl
pop
shll
pop
lret
call
push
adc
lahf
adc
lock
xchg
popf
dec
cli
adc
push
bound
xchg
iret
pop
repnz
or
mov
dec
xlat
and
fildll
mov
and
xchg
jb
js
and
push
fwait
das
addr16
fnstcw
sti
xor
test
loop
stc
mov
push
sub
dec
pop
pop
out
or
imul
fistpll
test
fucom
mov
push
pop
std
mov
call
add
pop
aam
data16
pop
pop
fdivs
cwtl
inc
int
cmp
fimuls
out
inc
adc
mov
pop
data16
mov
repnz
mov
iret
lock
push
mov
or
add
jmp
shrb
repnz
aas
and
and
arpl
push
cs
xchg
test
cmp
fstpl
icebp
es
popl
leave
mov
mov
mov
fldenv
xorl
lahf
scas
sub
xchg
mov
roll
xor
jnp
add
jp
mov
aad
pop
sbb
addr16
pop
xor
mov
inc
idiv
xchg
or
push
dec
movsb
loop
cltd
jb
dec
cmpsl
jmp
push
or
ja
jns
pop
mov
enter
adc
xor
pop
in
cli
push
outsb
push
icebp
aaa
cmp
push
or
xor
loop
imul
and
sub
test
pop
xchg
mov
scas
ror
and
mov
jge
inc
push
sub
adcl
pop
lcall
mov
xlat
repz
pushf
sbb
stos
leave
orb
mov
xor
movsl
jecxz
mov
movsl
jle
mov
and
hlt
lods
ja
xchg
mov
dec
inc
shlb
les
xchg
add
or
lea
xor
test
jo
popf
dec
mov
cmp
iret
push
ja
ja
sahf
sti
xchg
insb
xor
push
push
pop
jo
rorb
and
scas
bound
lods
lret
mov
scas
cmpsl
dec
xlat
fistl
ret
dec
mov
ret
sbb
or
inc
rol
test
push
cli
jmp
add
lea
add
outsb
push
sarb
jo
shlb
mov
fcompl
inc
dec
into
decl
shl
push
mov
pop
jp
adc
pop
adc
push
fistpll
mov
arpl
icebp
cmp
in
cmp
dec
aad
pop
rcll
js
es
test
and
call
bound
xchg
fsubs
subb
xor
push
ss
mov
rclb
std
or
nopl
cmc
cltd
add
mov
or
pop
loope
orb
cmpsb
inc
out
aad
clc
je
mov
les
mov
or
jmp
inc
loop
mov
and
dec
scas
push
jo
lret
push
and
add
lahf
xchg
pop
cmpsb
xchg
fidivs
sub
dec
sbb
scas
popa
mov
and
movswl
fdivl
cmp
outsb
mov
jp
arpl
fucomi
into
sahf
out
cmpsb
dec
roll
xchg
in
jecxz
sub
loop
mov
int3
lods
sbbb
xor
iret
int3
insl
sub
cmp
sbb
orl
outsb
sarb
dec
xor
inc
cmc
ljmp
or
inc
rol
jae
and
dec
or
ficoms
push
fwait
jae
mov
dec
out
fs
idivb
push
fldl
or
push
popf
inc
and
je
das
push
xchg
popa
mov
xchg
inc
stos
icebp
dec
pusha
outsb
adc
dec
cmp
psraw
jg
aam
andb
cmp
jno
popf
movups
jb
xor
lahf
or
push
lcall
cmp
inc
and
subl
add
mov
pop
int3
movsb
push
aam
inc
pop
bound
mov
mov
mov
cmp
xor
rcrl
dec
push
add
fidivrs
jge,pn
mov
mov
mov
xchg
sbb
int3
mov
cmpsl
hlt
std
inc
mov
adc
addr16
dec
dec
xchg
sti
repnz
sbb
cs
jae
sub
xlat
jo
mov
rol
push
pushl
std
mov
outsb
mov
sub
mov
xchg
mov
xchg
out
fidivrl
pusha
inc
mov
inc
ret
sub
dec
out
xlat
shl
ljmp
test
push
loope
cmp
push
ja
stos
mov
or
or
shll
into
dec
jge
lcall
test
dec
hlt
inc
icebp
cmp
repnz
mov
dec
mov
in
loopne
cs
fwait
sub
sarl
cs
cmp
or
imul
hlt
and
mov
shll
fistl
adc
mov
loop
dec
sbbl
inc
ss
shlb
int3
dec
xchg
inc
sub
gs
jnp
fsts
pop
inc
xchg
or
xor
lods
andl
cmpsb
mov
adc
sub
add
cmp
or
mov
dec
outsb
pop
pop
das
mov
mov
or
in
fucom
out
data16
loop
mov
in
rorl
je
ds
push
ljmp
cmpsl
jae
sbb
xchg
lcall
cmp
cwtl
enter
xchg
cli
inc
inc
add
dec
mov
jbe
jbe
sbb
sub
aad
clc
adc
cld
xchg
adc
jne
push
lret
xchg
xor
call
notl
mov
jb
or
pop
sub
mov
pop
popf
je
popa
jmp
jo
jb
lret
push
mov
or
test
pop
push
enter
xor
insl
pop
fdivp
call
pop
test
cmp
mov
add
imul
mov
cwtl
popf
fdivr
push
jne
fadd
and
das
cmp
add
add
xchg
iret
mov
fwait
jno
dec
data16
outsl
or
cmp
xor
cmpxchg
push
adcl
adc
bound
mov
filds
xchg
sbb
ret
jecxz
dec
aas
dec
jo
leave
into
sub
negl
repz
jl
mov
add
popa
jno
lds
stos
lcall
in
cmp
fstpt
loop
jecxz
sub
inc
cld
lds
pop
cmpsb
cmp
movl
pop
jmp
std
clc
or
and
inc
rol
adc
mov
stos
pop
fs
and
mov
lret
dec
cmc
je
ret
xchg
insl
mov
jle
insb
lds
fdivs
jl
mov
cli
stos
or
lock
mov
mov
scas
pop
scas
jmp
mov
mov
enter
neg
adc
jb
mov
xchg
js
ret
dec
loop
dec
cmp
dec
or
flds
into
popa
test
in
outsl
jl
lods
mov
cmp
daa
cmpl
cld
inc
and
sub
adcb
icebp
dec
xor
addr16
jmp
inc
mov
pushf
out
mov
outsb
in
inc
cmp
cmp
lds
stos
xor
jg
mov
fcoms
jg
mov
adc
ret
outsl
push
daa
jp
shlb
push
cmpsl
jb
inc
data16
out
imul
or
lock
cmp
lcall
loopne
cmp
xlat
insb
dec
and
fldl
divb
ss
insl
pop
mov
rcl
and
push
clc
sub
cmp
cwtl
rcll
mov
cld
xchg
mov
lods
out
inc
and
mov
divl
cmp
push
mov
xchg
jl
adc
or
das
xchg
and
xchg
ret
les
add
in
in
xchg
test
push
fs
sub
sub
and
and
or
add
mov
scas
sub
mov
jns
repz
and
ja
jle
xchg
dec
fs
sbb
int3
test
daa
das
aad
cs
xor
aaa
shl
insb
jnp
mov
lea
pop
scas
jae
out
orl
or
xchg
ljmp
std
xlat
rorl
cmc
cs
fs
jo
std
and
sub
nop
xchg
xlat
mov
cwtl
jne
mov
jge
test
pop
movsl
lcall
push
pop
fidivrl
adc
push
scas
rol
add
xor
mov
mov
mov
fisubl
inc
dec
and
ljmp
add
loope
cmp
lret
mov
movsl
std
stos
pop
fildll
cli
jnp
aam
jns
cltd
int3
add
fucom
dec
repnz
ja
jae
jo
mov
popf
movsb
movsb
fstpl
sub
leave
mov
shr
ja
data16
in
les
out
sub
stos
test
pop
xchg
push
pop
data16
push
pop
je
call
jbe
flds
inc
cmp
pop
sbb
jno
out
xor
mov
jg
mov
js
pop
jnp
jns
loope
mov
aam
xor
dec
jle
mov
das
mov
lds
dec
repz
imul
hlt
cmp
outsl
lret
int
in
cmpsl
jle
lock
push
in
mov
shlb
xlat
les
fidivrl
fiaddl
push
roll
std
es
dec
es
and
xchg
lret
xchg
ja
xchg
js
mov
daa
cmp
jns
insb
mov
sub
mov
push
int
sub
pop
add
or
out
mov
add
and
movsb
rcrb
movsl
subl
and
mov
mov
push
jmp
pop
jb
jmp
arpl
mov
dec
add
imul
shl
or
xor
or
cmp
cmp
data16
or
pop
xchg
dec
push
sbb
popf
mov
push
insl
jbe
mov
push
push
dec
sbb
mov
mov
xchg
push
loope
aad
sti
pop
stos
sub
push
or
push
repnz
les
icebp
fidivs
xor
xchg
mov
push
aaa
lock
into
xor
pop
mov
pushf
insb
push
sbb
mov
je
cmpsb
scas
andb
out
test
xchg
rcrl
divl
ret
jo
pop
cmp
pop
mov
xchg
dec
add
outsl
jp
cli
xor
je
ficoms
pop
ret
dec
movsl
fldt
push
mov
cmp
push
pop
into
mov
pop
sub
in
sub
or
dec
stc
cli
inc
sahf
fucomip
imul
add
cmp
pop
mov
test
imul
add
cmp
test
fstl
ret
pop
fwait
std
iret
mov
loope
push
dec
or
shlb
dec
leave
test
cltd
out
mov
int
mov
jge
xchg
pop
push
leave
pop
call
inc
dec
pop
loop
popf
jmp
pop
lgs
sub
outsl
add
clc
dec
or
call
mov
leave
sub
or
test
xchg
lret
sub
inc
and
xchg
push
pop
push
pop
ss
ja
test
std
sbb
jp
cmpsl
and
fcmovnb
insl
lds
out
lock
pop
or
stos
pop
jle
clc
sti
push
pop
lahf
inc
jo
rorb
ret
push
xchg
dec
outsb
jl
xchg
test
std
mov
push
adc
cmp
fisttps
cld
xchg
test
xchg
pop
lea
les
ret
outsl
ficoml
psubsb
out
pop
xor
jmp
imul
mov
mov
pop
or
xchg
adc
dec
cltd
cli
and
jns
push
sti
adc
orb
bound
push
fbstp
pop
xlat
pop
adc
int
sti
push
xor
mov
mov
fdivl
sbb
nop
mov
int
mov
imulb
add
ss
aaa
push
out
xchg
xchg
sbb
fs
sti
dec
xor
das
inc
aad
lock
cmp
mov
jb
cmp
data16
add
js
adcb
lds
sub
fsubp
jb
jle
scas
add
push
movsb
sub
das
cltd
fdivl
jo
in
in
and
int
push
inc
mov
xchg
jns
push
jp
lock
pop
cmp
out
xor
ja
lret
ss
jl
adc
cmpsl
sub
jb
pop
xchg
pop
sahf
mov
jp
movsl
jmp
outsb
xchg
cmpb
scas
inc
hlt
pop
mov
aad
loopne
cli
stc
sub
jno
stos
mov
scas
push
insl
scas
and
clc
push
std
out
scas
es
imul
sub
addr16
enter
addb
ds
push
cmp
dec
or
dec
inc
lcall
sbb
jb
sub
cmpb
jecxz
pop
cli
dec
inc
and
sub
jle
pop
das
pusha
push
xor
push
bound
daa
or
pop
push
subl
or
add
inc
mov
push
repz
push
repnz
pop
mov
jnp
mov
sub
pop
add
cmpb
ffree
pop
out
and
js
popa
push
cmp
jae
pop
stc
add
sahf
inc
lock
jl
jg
xchg
mov
mov
shr
pop
clc
jmp
test
jge
dec
ret
jp
cmp
sbb
push
jb
lods
xor
jns
sbb
mov
ja
pop
add
dec
in
push
sub
adc
cmc
icebp
xchg
dec
push
cmp
into
mov
loop
push
pop
pop
and
mov
xchg
std
jle
cltd
outsb
pop
mov
aas
pop
or
sbb
in
inc
push
and
enter
pop
xor
ret
and
and
mov
xorb
and
dec
xor
adcl
out
xchg
jb
outsl
sbb
pushf
mov
add
mov
cmp
xchg
jg
dec
jl
mov
out
es
adc
ja
rclb
and
mov
ret
xchg
int3
clc
mov
popf
in
and
cmp
aas
mull
mov
repz
cmp
push
sahf
jne
loope
les
adc
xorl
adc
inc
pop
adc
cltd
push
pop
mov
mov
mov
lock
fisubs
and
push
push
jmp
ret
mov
push
pop
adcb
jnp
aaa
xchg
dec
inc
push
dec
adc
out
ja
lock
and
lock
xor
pop
mov
jns
cli
out
dec
repz
test
cld
shlb
xchg
xchg
mov
push
inc
adc
fsubrs
jp
enter
xchg
icebp
cmp
cwtl
pop
test
push
jbe
enter
test
xchg
mov
aam
mov
mov
cmp
popa
popf
push
cs
adc
xchg
int
int
ja
mov
popa
pop
adc
dec
std
mov
and
rorl
or
dec
inc
adc
jle
add
ror
aam
pop
loop
leave
lea
test
dec
cmp
jg
icebp
mov
mov
inc
loop
stos
push
sbb
inc
inc
inc
mov
pop
sbb
fstl
stos
out
pop
inc
adc
arpl
mov
push
xchg
jne
stc
out
xor
mov
pop
xlat
movsb
lock
imul
xchg
jb
xchg
pop
cld
mov
adc
xchg
lods
xor
xor
jecxz
leave
mov
mov
aad
popa
adc
lcall
loopne
dec
add
ds
jns
addr16
dec
out
xorb
insb
and
into
daa
aas
repnz
into
mov
jbe
push
out
addr16
sub
sub
daa
jg
cld
and
mov
cmp
mov
shrb
in
outsb
jge
test
mov
jg
fidivs
pushf
cmp
push
or
mov
pop
xchg
daa
jg
lret
in
leave
add
add
aam
cmpsb
lcall
lock
lret
fisttpll
lea
imul
adc
out
mov
mov
cwtl
into
sbb
fstp
mov
sbb
xchg
mov
pop
adc
xor
pop
cld
pop
sbb
xchg
mov
pop
push
or
xchg
js
aas
lahf
or
jb
dec
outsl
ljmp
or
pop
cmpsl
or
inc
shll
das
pop
inc
std
mov
jecxz
ss
inc
pusha
fistl
out
scas
mov
xor
rclb
aas
sbb
fdivrs
mov
lahf
and
mov
in
in
cmp
mov
mov
test
fadd
rcll
adc
shr
rcll
mov
mov
dec
adc
sahf
mov
sbb
cmp
js
mov
js
jbe
loopne
and
sub
sbb
jle
out
rcll
enter
loopne
xchg
sub
push
lret
or
out
sbb
mov
enter
ret
sbb
popa
sub
imul
mov
xchg
cvtps2pi
ds
pop
rorb
fstps
mov
lret
adc
lods
lahf
push
mov
mov
lcall
or
xor
inc
lahf
ret
fimull
int3
psrad
push
sub
gs
xor
neg
lea
aam
minps
aam
and
cmpsb
jmp
xlat
cmp
sbb
test
aaa
das
jmp
push
or
mov
mov
push
inc
and
cmp
cmp
inc
dec
pusha
mov
rolb
mov
and
jl
addr16
push
pushl
pushf
mov
test
leave
mov
aaa
adc
insl
imul
cwtl
xchg
xor
pop
test
pop
push
les
lods
cmc
lcall
sbb
loop
xchg
mov
ret
mov
jg
ljmp
fstpt
movq
imul
daa
sti
adc
sub
popl
push
pop
stos
rorb
test
and
push
shlb
loopne
pop
pop
or
xor
popa
aam
mov
jge
mov
popa
mov
out
call
mov
cmp
dec
js
dec
mov
mov
insl
or
push
push
imulb
xchg
mov
cmp
cltd
sub
inc
je
in
roll
mov
xor
inc
scas
lahf
lds
xor
arpl
add
nop
jnp
lahf
jg
or
sbb
sub
in
jmp
lea
scas
jns
inc
cmp
subl
sbb
sub
jae
in
push
jno
xor
sbb
or
mov
pop
push
movsl
sub
daa
gs
push
fisttpl
fisubs
outsb
sbb
ss
sarl
pop
pop
pop
rcl
xor
lock
lock
pop
xchg
pop
cmp
aam
pop
pop
mov
inc
shll
inc
lea
lcall
movsb
and
push
jb
mov
sub
xchg
pop
push
mov
pop
ds
fisubrs
xchg
lock
push
rclb
movsl
int3
dec
jno
or
popf
mov
xchg
xor
sub
sub
incb
mov
jecxz
mov
jge
mov
dec
leave
int3
leave
arpl
inc
push
pop
fwait
cmp
mov
stos
jmp
xchg
outsl
out
fstl
add
dec
ret
fbstp
pop
push
ret
fdecstp
inc
into
pusha
xchg
pop
mov
cmp
lods
fiaddl
inc
jmp
and
lret
test
push
mov
ds
sahf
lcall
mov
and
push
sub
or
pop
je
push
scas
fwait
mov
add
sub
xchg
add
xchg
loop
sub
cli
jae
shrl
xor
pop
loope
jmp
sti
push
sbb
insb
dec
sahf
mov
mov
mov
fs
mov
dec
js
cltd
les
jb
cmp
jmp
dec
test
std
popa
inc
and
imul
dec
xchg
sbb
push
ret
xchg
xor
mov
xor
push
pop
enter
dec
dec
lods
push
fistps
insl
insl
inc
pop
pop
sub
add
inc
dec
outsl
mov
xchg
arpl
xlat
pop
aam
int3
dec
adc
ljmp
xor
stos
xchg
or
cmp
movsl
in
push
pop
jmp
scas
sti
xchg
and
mov
cmp
das
or
cld
push
loopne
or
jns
and
bound
scas
je
dec
sbb
insl
xchg
andb
iret
sahf
xor
xor
out
xchg
sub
out
loopne
xor
movsl
mov
pop
daa
dec
jae
std
lret
cli
and
divb
sti
lods
js
das
out
test
sbb
xchg
sbb
mov
add
mov
jg
subb
test
pop
pop
xlat
imul
gs
push
add
sahf
cld
sbb
ret
inc
stos
lss
pop
sub
xor
push
fisubl
cmpsb
and
clc
aaa
cmpsb
cld
mov
mov
flds
mov
iret
sub
dec
jno
sub
push
dec
orb
in
adc
add
pop
cmp
mov
sub
or
pop
or
aaa
repnz
jo
shlb
push
arpl
test
dec
js
dec
push
fisubrs
push
xor
sub
inc
das
dec
cmpb
xorl
lahf
sbb
adc
dec
loope
gs
aas
outsl
cs
insl
ss
add
fwait
aam
mov
sub
mov
dec
lcall
addb
imul
sbb
xchg
sub
dec
out
cmp
loope
jno
enterw
or
cmpsl
sbb
mov
mov
in
div
aas
jle
lods
dec
mov
xchg
aam
pop
jne
dec
mov
inc
cmpsl
rcr
push
add
sub
pusha
ljmp
frstor
inc
or
push
inc
push
into
sbb
je
jnp
imul
popf
decl
hlt
das
int3
pop
out
stos
sbb
mov
popf
outsl
xchg
enter
pop
orl
xchg
insb
dec
idivl
sub
or
arpl
inc
icebp
leave
sub
daa
loopne
cmp
lea
ficompl
dec
mov
sti
push
and
lds
pop
mov
sub
sbb
sahf
add
xor
inc
adc
xchg
mul
sbb
xor
mov
sub
jbe
jne
cmp
test
arpl
imul
fidivrl
mov
mov
inc
inc
call
and
sbb
pop
cltd
xchg
mov
or
pop
xchg
sub
aaa
sub
arpl
xor
pusha
dec
into
lret
pop
mov
jmp
dec
fwait
and
ffreep
test
shll
sbb
jo
psraw
call
mov
lret
je
pop
sarb
adc
lock
fsubr
jg
pop
jmp
div
std
add
dec
jge
mov
insl
mov
shlb
je
jge
test
rcl
mov
jo
add
arpl
mov
mov
sarl
out
mov
xor
adc
movsl
or
out
popf
imul
ret
sub
and
xchg
rolb
jno
adc
dec
fdivl
dec
dec
sub
js
popa
orb
mov
xor
scas
fimull
sbb
addb
int
adc
or
pop
mov
stc
cs
push
cld
imulb
aad
adc
push
pushl
pushl
jno
loop
in
cmc
xchg
jbe
lret
sub
jns
outsl
icebp
inc
mov
cltd
int
test
scas
add
clc
cmp
jmp
xchg
mov
mov
mov
aad
pushl
clc
sub
rolb
jecxz
xor
ljmp
sub
lahf
aad
arpl
dec
lock
mov
ss
adc
adc
xchg
lret
pushf
push
xor
int3
cmpsb
pop
stc
int3
inc
sbbb
inc
bound
mov
push
adc
int3
pop
jnp
es
addr16
sbb
outsb
mov
inc
rcll
pop
adc
imul
pop
or
pop
cmp
adc
rol
addr16
add
shlb
rcrb
cmp
jbe
push
sub
and
add
xorb
in
repnz
in
mov
lods
sarb
sbb
jmp
jbe
scas
jns
cli
data16
pop
aam
and
ret
push
sbb
dec
sub
and
sub
sub
adc
packssdw
test
inc
int
or
ja
xchg
out
out
test
lcall
bound
mov
mov
xlat
inc
adc
int3
sub
or
mov
repz
push
jns
add
push
add
inc
inc
repnz
cmp
xchg
cmp
clc
push
fldenv
xor
mov
push
jecxz
and
and
fisttpl
dec
and
xor
inc
inc
xor
lea
xor
xor
test
mov
inc
iret
insl
jge
jecxz
push
gs
repnz
jne
cmpl
in
ret
xlat
sub
repnz
add
push
add
push
es
push
or
lods
push
or
push
adc
ret
pop
cmp
mov
movsb
cmp
mov
xor
sub
movsl
xchg
pop
in
xor
lret
leave
outsl
pop
sbb
mov
es
jle
repnz
pop
outsb
xchg
inc
jbe
xchg
adc
mov
fiaddl
push
push
dec
mov
mov
test
add
jbe
lret
xchg
pusha
push
movsb
out
call
int
dec
sub
jecxz
xchg
sbb
sbb
repz
pop
insl
jmp
leave
call
mov
pop
jecxz
into
scas
mov
loope
repz
or
aad
push
mov
shlb
pop
call
in
mov
lods
repz
lds
dec
inc
push
subb
inc
es
mov
and
hlt
push
cld
pop
mov
push
lret
in
stos
inc
fcoms
xchg
loope
daa
scas
push
sbb
stos
lret
inc
icebp
add
jnp
push
sar
test
lds
les
aas
lret
ficoms
xchg
mov
lahf
test
int
pop
call
push
or
enter
cltd
add
adc
sub
adc
imul
fnsave
jno
xchg
clc
xor
mov
jge
jmp
jp
in
push
jle
cmp
push
gs
push
xchg
out
fcmovbe
push
lea
aaa
dec
xor
outsl
rcl
loop
and
inc
cmp
movb
and
adc
fsubs
lea
rcrl
repnz
push
xor
incb
aaa
xchg
das
and
sbb
push
fldl
nop
push
push
flds
cmp
and
jecxz
rcl
pushf
mov
lret
jae
fdiv
jmp
stos
fwait
stos
or
xchg
fs
add
lea
sbb
sbb
fdivs
cmp
cmp
jo
adc
aam
push
popl
mov
fcoml
push
xor
mov
scas
rorl
jbe
inc
pusha
xchg
dec
adc
nop
test
or
popf
sbb
lea
add
test
dec
nop
js
mov
mov
inc
scas
add
sahf
cld
xlat
mov
sub
mov
adc
or
aas
push
test
mov
ffreep
pop
pop
jecxz
sti
fildl
or
repz
mov
inc
popa
and
adc
or
or
out
movsl
subb
rcl
lds
iret
stc
cmc
data16
mov
xchg
mov
dec
jnp
in
add
sti
gs
insl
scas
std
jbe
sbb
pop
adc
rcll
mov
add
xchg
std
sbb
ja
ja
xor
xchg
shr
inc
push
dec
mov
pop
shrb
mov
jecxz
ret
sub
cwtl
mov
sbb
and
dec
push
pop
sub
int
push
sub
les
xor
mov
adc
test
icebp
jmp
xor
aas
decb
jae
aam
or
repnz
cmpl
out
pop
movsl
xchg
adc
ss
pop
mov
stos
sbb
add
jl
fwait
ljmp
cmp
and
stos
pusha
out
mov
sti
cld
pop
lret
int
test
fs
xor
daa
imulb
cmpsb
sbb
std
dec
mov
call
push
jb
or
lea
mov
out
sbbb
lea
jge
xchg
xor
jge
jecxz
or
mov
or
daa
add
in
push
cltd
nop
dec
mov
push
jns
push
out
push
ds
dec
lcall
add
bound
dec
and
push
movsl
mov
adc
cli
or
fsub
test
sbb
mov
inc
lret
xor
lahf
hlt
in
sbb
je
xor
ret
call
or
jae
fisubrl
lahf
sarb
ljmp
mov
pop
add
fisubrl
sarb
or
mov
dec
out
push
inc
sahf
insb
into
lock
push
and
daa
scas
cmp
es
stos
mov
lea
addr16
mov
pop
fisubrl
ror
add
mov
aad
push
data16
push
int3
aaa
jno
sbb
nop
jo
xchg
loope
cmpsb
nop
call
xchg
into
push
outsb
add
ds
xchg
pop
loopne
loope
push
jne
popf
dec
imul
sbb
adc
jge
sti
leave
mov
mov
pop
pushf
mov
aam
sbb
lds
aam
cwtl
lock
lcall
jmp
sub
pop
cmp
test
enter
mov
in
cmp
jnp
and
dec
pop
adc
mov
sub
loopne
xor
dec
push
xchg
aaa
shr
mov
adc
arpl
iret
xor
int
idivl
orb
loopne
push
mov
addb
and
mov
xchg
add
mov
leave
dec
add
mov
out
xchg
sarl
sbb
xor
dec
cs
push
icebp
fs
test
push
lfs
add
loope
je
ja
or
sbb
repz
cmpl
sbb
cmp
repz
mov
daa
jns
push
addr16
popa
sub
dec
sub
into
jo
call
and
loopne
cmp
dec
sub
xor
jge
arpl
movsl
cmp
pop
sti
mov
mov
mov
movsl
mov
sbb
jle
inc
pop
mov
leave
mov
es
in
popf
xchg
sbb
fimull
lahf
jle
cmp
mov
lods
es
push
ret
sbb
inc
cmp
pusha
mov
divl
xchg
add
pop
push
lods
pop
push
fisubs
dec
fbld
lock
lret
pop
iret
fcoms
xor
scas
lcall
hlt
inc
dec
scas
xchg
nop
cmpsl
out
jg
or
test
ret
pusha
pushf
int3
ss
cmc
aaa
or
inc
mov
add
pop
xor
ja
xor
mov
pop
sbb
mov
bound
imul
nop
jmp
cltd
sub
add
adc
incl
es
jle
dec
sub
aad
sbb
push
imul
inc
and
and
rorl
cwtl
mov
sub
xor
hlt
pop
fbld
xchg
rcrl
aad
xor
insb
mov
pop
jecxz
daa
jl
or
sub
xchg
lea
popf
mov
push
inc
outsb
mov
or
push
fimuls
jnp
xor
jb
gs
popf
xchg
mov
into
and
mov
adc
test
cmp
not
mov
out
ljmp
bound
fucom
pop
ja
pop
sub
dec
add
sub
xchg
jb
xor
repnz
cmp
inc
aas
cmc
fsubs
into
loope
nop
jno
and
and
xchg
rorb
xchg
movsl
test
lret
jae
push
push
inc
jg
add
lods
mov
xorb
insl
sub
aas
leave
sbb
daa
jnp
outsl
pop
adc
aam
inc
subb
js
imulb
xchg
pusha
or
out
pop
pop
pop
sub
cmpsl
and
mov
cmp
rcl
or
pushf
lahf
jno
mov
xor
cli
or
out
jp
movsb
pushf
mul
push
xchg
loope
and
rcrl
dec
andl
inc
es
push
leave
ds
jnp
call
cs
addr16
cltd
ret
cmp
xchg
jo
repz
iret
lcall
mov
gs
movsl
fildl
sub
xchg
test
dec
or
cltd
movsb
test
dec
addr16
aas
rolb
xchg
xor
stos
or
filds
into
jae
pop
pushl
cwtl
das
pop
stos
fistpl
ss
sub
jle
cs
lret
insl
clc
push
xor
imul
dec
out
scas
and
mov
mov
outsl
mov
pop
push
fstpt
add
adcb
cmpsl
or
ror
bound
xchg
lahf
lcall
and
call
cli
mov
scas
lods
adc
das
stos
mov
je
inc
rclb
mov
shll
xchg
outsb
inc
mulb
call
mov
lods
push
fs
bound
mov
and
cmp
xchg
in
stos
inc
xchg
inc
mov
cmpsb
inc
imul
cli
cmp
push
inc
mov
sbb
xor
lret
mov
insb
add
cmpsb
adc
sbb
jno
push
mov
cmp
sahf
push
push
test
push
cltd
jl
sbb
mov
mov
push
jne
pushf
out
dec
in
repz
push
movsl
ret
cltd
repnz
in
fldt
fsubl
mov
mov
xor
mov
popa
cmp
int
sub
sbb
dec
in
lea
xchg
and
test
mov
push
outsl
lret
arpl
ds
push
push
adc
adc
ficompl
xor
mov
push
pop
xchg
pop
in
jne
addr16
leave
ja
ljmp
adc
fmul
or
ja
adc
dec
pop
dec
mov
test
cs
ljmp
or
sahf
inc
sbb
xchg
or
xchg
nop
popf
cmp
aam
jecxz
adc
test
test
jle
push
sub
push
dec
mov
shrb
cmp
pop
pop
frstor
cmp
push
xchg
mov
mov
or
add
cmp
in
lea
das
mov
aad
mov
mov
aad
sahf
dec
adc
scas
es
sub
into
sahf
pushl
sarb
xor
mov
inc
fidivrl
daa
xchg
and
das
fisttps
and
push
add
dec
insb
or
cmpsl
xchg
push
outsb
inc
push
push
xchg
push
cwtl
pop
xchg
push
cmc
mov
ds
inc
outsb
or
push
iret
inc
jb
je
int3
sbb
testl
hlt
xor
pop
out
sarb
popl
int
lret
jle
mov
xchg
out
fisubrl
mov
jne
popa
mov
pop
fwait
andb
lods
pop
fmul
add
repnz
inc
inc
daa
and
sub
stc
cld
outsl
lret
loopne
cmpsb
inc
sbb
lret
push
pop
fwait
pop
inc
xchg
test
mov
adc
xor
iret
mov
add
pushf
xor
imul
ror
push
std
int
cmp
dec
cmp
add
fs
inc
mov
loop
push
lock
jg
int
inc
or
mov
sti
ficompl
rorl
push
pop
xor
xlat
mov
and
adc
cmpsb
jmp
jae
or
mov
lods
ret
cmp
xchg
stos
sahf
or
pushf
out
mov
cli
pop
ja
andb
aam
pop
add
pop
xchg
mov
mov
mov
data16
adc
ret
pop
sub
ret
scas
cmc
or
arpl
mov
pop
and
mov
adc
fisubl
adc
add
jno
xor
pop
jmp
push
mov
mov
nop
push
lds
jb
outsb
mov
loopne
sbb
shrl
pop
jge
jecxz
xchg
es
sub
pop
adc
imull
mov
sar
divl
leave
leave
fbld
push
shrl
push
repz
out
cmp
icebp
and
jnp
xorb
movsb
lcall
inc
jle
push
test
push
jo
xor
jne
popa
jae
sbb
add
dec
adc
repz
push
dec
pop
push
jo
jns
or
pop
ss
int3
stos
lods
adc
lds
loope
push
push
fwait
out
mov
sub
push
mov
cmp
addr16
mov
sahf
dec
out
jl
mov
cli
jmp
jle
lahf
cmp
or
cmp
push
or
sti
arpl
xchg
lds
xchg
shll
in
pmaxsw
add
fdivl
dec
cmpb
add
jl
xor
add
jno
inc
addl
ljmp
je
jle
add
cltd
jge
jo
jns
mov
jns
pusha
call
aas
fdivp
mov
push
fldl
aad
sbb
fcompl
stos
pop
pop
sbb
add
jmp
mov
popf
lods
adc
inc
outsb
dec
fs
enter
call
push
pop
jb
and
call
pusha
in
dec
insb
mov
jb
sti
pop
iret
testl
mov
push
aas
inc
addr16
sbb
das
lret
adc
jmp
adc
das
hlt
inc
inc
shlb
dec
fnstsw
sbb
lret
mov
push
xor
xchg
shrl
mov
lds
std
push
imul
jno
xor
lods
int3
mov
add
adc
daa
sahf
sbb
sub
mov
jmp
xchg
das
in
add
test
xor
dec
leave
test
inc
jecxz
es
xchg
icebp
xorb
leave
cltd
cmpsb
pop
jb
test
repz
popa
repz
out
jecxz
dec
mov
pop
cmp
mov
mov
and
fcomps
mov
push
lret
mov
outsb
adc
out
pushf
and
mov
std
lret
sub
push
shl
push
loope
push
imul
adcb
push
jl
movsb
sbb
mov
rorl
sbb
lea
push
les
mov
jle
xchg
stc
dec
inc
clc
push
push
shr
lock
jns
sub
xchg
lcall
test
fs
cltd
fwait
and
jb
divl
sub
dec
pop
comiss
cld
fmull
daa
cmp
popa
fwait
pop
filds
push
mov
lret
in
push
sbb
sub
cld
mov
enter
mov
std
inc
mov
mov
arpl
lock
inc
mov
popa
fisttpll
imul
push
gs
in
mov
pop
xchg
adc
cmp
test
pop
je
sbb
fwait
mov
mov
and
add
adc
mov
mov
sub
mov
inc
ljmp
xchg
inc
mov
mov
jo
dec
mov
xchg
out
adc
movl
sub
scas
mov
mov
cltd
insb
fiadds
fdivrl
out
dec
outsl
out
subb
fwait
xor
or
mov
mov
sub
inc
jb
testl
inc
daa
mov
dec
cmp
movsl
mov
lret
or
clc
ficompl
fnstcw
add
sarb
mov
jb
xor
xor
stos
pop
fwait
mov
xchg
cmp
stos
add
insl
push
ds
add
ds
ret
push
pop
andl
fidivl
test
xor
pop
mov
stc
popa
xchg
lret
xor
cli
cmpsb
icebp
outsb
mov
dec
fsubs
test
sbb
movsb
hlt
cwtl
lret
std
jl
mov
out
adc
test
jle
int3
inc
fnstsw
xchg
repz
mov
jnp
lret
clc
jne
sbb
ret
jle
sub
or
xor
lods
addl
mov
jbe
jge
xchg
rol
faddl
loopne
outsl
dec
mov
jmp
pop
shlb
dec
jno
mov
movsb
jns
das
mov
scas
mov
cwtl
jmp
jmp
push
push
add
stos
mov
sbb
std
or
leave
and
imul
pusha
test
repz
and
jnp
cld
mov
push
shrl
in
call
or
push
clc
in
mov
int
inc
sahf
xchg
test
mov
mov
xchg
xchg
mov
stos
in
cmp
lods
adc
and
cmpsb
sbb
out
inc
pop
lods
pop
aaa
push
xor
outsl
cmp
push
xor
push
dec
ljmp
xchg
jp
pusha
fcmovb
dec
iret
and
jnp
dec
jo
and
in
jnp
push
mov
out
pusha
mov
and
iret
xor
out
cld
and
or
push
cli
lahf
ja
mov
adc
inc
cmp
test
call
fs
jne
mov
mov
cmc
mov
cmc
jl
lret
xor
cmpsb
mov
repz
int3
jg
repz
adc
xor
mov
add
fsubs
or
in
mov
add
imul
fidivs
jge
pop
pop
mov
in
mov
sbb
fisttps
adc
or
out
add
xchg
js
cmpsl
xor
js
xor
out
sbb
mov
mov
xlat
insl
dec
jle
dec
push
adc
addr16
add
pop
insl
or
clc
cmp
addr16
cwtl
mov
jmp
rcrl
mov
dec
mov
adc
jg
pusha
pop
ret
pop
mov
in
loop
in
pop
adcl
ds
push
rorb
pop
sub
jo
cmp
jns
negb
hlt
cli
in
mov
xchg
push
mov
dec
movsl
add
inc
mov
lret
imull
je
andl
cs
mov
cmc
pop
mov
movsl
mov
outsl
xlat
out
sub
xchg
jmp
jbe
mov
imul
and
mov
dec
push
inc
sahf
lahf
cltd
aam
ja
movsb
push
jl
clc
mov
stos
push
popa
pop
xor
in
cmpsl
inc
andl
lahf
push
fistps
test
popf
mov
xchg
lds
nop
adc
add
xchg
xchg
in
popf
xor
pop
and
inc
decl
add
decl
xor
jne
dec
bound
inc
pop
lcall
cmp
gs
insl
lods
or
ret
adc
test
push
adc
clc
aad
sarl
out
and
push
xor
push
fdivs
scas
adc
stos
push
dec
xor
call
stos
divl
push
mov
pop
out
mov
add
mov
lds
pop
das
push
aas
dec
fcmovnb
pop
sub
adc
adc
jnp
mov
leave
fsub
mov
fdiv
mov
or
sub
lock
ljmp
jbe
and
push
mov
pop
dec
cmp
mov
cmp
js
cmp
testb
and
and
and
in
setle
iret
pop
mov
mov
adc
lods
mov
xor
xchg
dec
jle
outsb
or
dec
push
dec
push
mov
xor
fnsave
ret
lock
and
dec
xlat
xchg
pop
ljmp
xchg
xchg
adc
jae
jo
jb
pushf
call
cld
push
ss
pop
arpl
lea
and
dec
adcb
xor
adc
icebp
mov
inc
movsb
dec
mov
ja
jmp
aad
add
stc
jae
lret
or
jns
inc
movsb
xor
mov
div
popl
andb
imull
sub
cli
adc
add
xchg
fsub
imul
les
inc
xor
aas
pop
aad
and
ds
ds
hlt
jmp
daa
lock
dec
clc
xchg
lods
sub
or
add
iret
cmp
inc
ret
pop
mov
cmp
lret
cmp
fisttps
mov
inc
adc
add
loopne
addb
outsb
repnz
sbb
or
repz
jmp
cmp
scas
repz
daa
ret
cs
push
cmp
sub
iret
jmp
outsl
pop
mov
sub
je
jbe
lahf
movsb
or
adc
ss
mov
or
aam
out
lods
jnp
pxor
outsl
or
adc
jae
loopne
xchg
out
push
xor
sub
mov
xchg
dec
jo
loopne
pop
push
dec
std
dec
shlw
push
add
mov
repnz
jl
jnp
fwait
push
xor
lret
orl
push
mov
cmpsl
icebp
and
aam
cmp
dec
xchg
rcrl
gs
ret
dec
dec
divl
fisubrs
sub
inc
mov
enter
lahf
icebp
lret
stc
les
xor
jg
mov
cmp
out
push
push
scas
test
cmp
pop
jg
push
js
jg
mov
and
lods
jmp
call
cmp
out
mov
lods
mov
imull
mov
mov
push
int
mov
int3
mov
sbb
cld
mov
mov
stos
aam
inc
sbb
stos
push
pop
popa
shl
or
mov
adc
pop
pusha
pop
or
dec
push
mov
and
mov
mov
xor
dec
into
sbb
mov
pop
pop
sti
adc
pop
aas
push
xorl
call
scas
pop
and
and
jnp
arpl
shrb
repz
xor
fdecstp
xchg
insl
nop
xchg
jb
clc
or
rcl
in
lcall
inc
push
sar
test
popa
dec
mov
fmull
jge
xchg
pushf
jecxz
fwait
aam
and
inc
or
inc
sub
call
xor
fistpl
xor
stc
cmp
insb
mov
mov
pop
cltd
cmpsb
ss
cmp
test
test
push
stos
cmpsl
jnp
and
daa
xchg
adc
ljmp
push
sub
xchg
lds
das
into
jle
mov
ja
adc
mov
test
jo
dec
subl
in
imul
movsl
mov
cli
sub
push
loop
out
jg
sahf
jl
lods
cmp
sub
pop
scas
out
pop
scas
data16
sbb
filds
mov
cmp
sbb
add
inc
nop
mov
inc
mov
sub
dec
adc
test
iret
adc
jl
mov
mov
dec
adc
jns
loop
push
fucomi
cmp
add
in
jmp
adc
sbb
aas
sarl
mov
push
psraw
xchg
xchg
inc
xchg
cli
aaa
les
jno
jp
add
loope
jo
xchg
add
xchg
xlat
mov
jnp
dec
mov
mov
pop
xchg
xor
or
push
sbb
loope
mov
sub
push
aad
add
hlt
insl
test
adc
je
es
fcmovne
test
clc
mov
ficoml
sahf
cwtl
xlat
rcrl
jge
xchg
or
or
mov
mov
jbe
mov
fs
jecxz
push
sahf
dec
xchg
mov
call
pushl
sbb
adc
shll
mov
inc
test
out
rorb
loope
inc
fdivl
rcr
test
mov
or
cmp
orl
xchg
cmpsb
insb
pop
mov
mov
aaa
fs
sbbb
jg
jl
pop
inc
cmp
fcomip
repz
sub
dec
cmp
icebp
add
mov
mov
cmp
push
push
adc
mov
sbb
sbb
std
cld
je
pushf
cli
xor
push
xor
cmp
stos
mov
xchg
inc
popa
mov
mov
lret
decl
shrl
loope
shrb
leave
test
and
and
bound
or
pushw
insb
arpl
into
ja
adc
leave
fisttpl
cmc
jo
sub
push
xor
insb
mov
inc
je
adc
movsb
js
mov
popa
and
and
in
cmp
mov
adc
pop
call
add
xor
sub
add
add
and
test
fwait
add
dec
cld
or
in
outsl
jl
add
pusha
or
outsb
and
icebp
fisubrl
pop
mov
repnz
lds
xchg
cmp
stos
out
or
inc
xor
nop
dec
cmp
push
push
xchg
jae
or
lods
push
xchg
add
mov
xchg
xchg
loop
sarl
test
adc
repnz
lret
jecxz
imul
imul
ret
cwtl
arpl
rcrl
insl
lret
clc
mov
sahf
push
jmp
test
popa
loop
insb
into
loop
loope
and
in
or
push
pop
aas
hlt
cmp
cli
aas
cli
in
jo
mov
js
enter
rcrb
icebp
in
push
out
aaa
out
sub
inc
and
daa
pop
mov
jae
clc
ljmp
dec
fcmovnu
inc
add
ss
mov
and
rol
andb
je
or
adc
push
jmp
das
decb
push
lcall
add
sahf
out
push
and
mov
scas
sub
dec
les
int3
push
movb
test
and
loopne
mov
dec
mov
mov
dec
and
sbb
adc
popa
loop
push
icebp
fisubl
cmp
jmp
jle
push
inc
loop
int
dec
test
fsubrp
or
push
pop
sub
int3
xor
nop
mov
push
lods
fwait
outsl
pop
in
je
xor
imul
jbe
or
sbb
jmp
pop
mov
icebp
or
arpl
test
dec
mov
mov
and
lods
adc
sub
aad
push
sti
lods
and
adc
inc
jo
dec
mov
imull
ds
fdivp
jmp
call
xchg
sbb
lahf
das
cmp
repz
inc
arpl
mov
mov
push
fldcw
sub
jecxz
inc
push
inc
in
and
stc
icebp
xor
in
jp
jp
andl
js
jnp
fcoml
faddl
shrl
ds
fdivrl
xchg
mov
jnp
dec
subl
pop
xchg
xor
lods
lret
enter
fwait
dec
add
movsb
test
jmp
outsb
bound
jb
imul
insb
mov
push
lret
mov
or
lret
jl
xchg
imul
xor
fstl
xor
lret
mov
repnz
push
and
pop
fwait
aad
xor
ss
jmp
ret
fcomip
jecxz
mov
ss
cltd
ds
add
mov
lods
sbb
addr16
scas
ljmp
xlat
out
in
test
shll
push
jb
pop
repz
aas
movsl
mov
mov
xchg
or
lcall
sbb
int3
adc
pushf
jge
adc
lock
mov
push
jl
add
xor
and
adc
dec
cmpsb
xchg
cmp
orb
xchg
jo
fdivl
es
hlt
daa
push
fdivl
jge
dec
std
clc
les
lret
cmpsl
fmuls
xor
jb
imul
xor
lods
aam
daa
xor
faddl
sbb
mov
xchg
push
lahf
fs
jge
push
dec
cmpsl
and
aas
add
popa
shll
cmc
adc
roll
repz
push
jmp
fst
add
push
roll
cmpsl
sub
in
pop
shll
nop
lods
insl
jecxz
pushf
loopne
xchg
sbbl
jle
pop
adcb
int3
cmp
rcrl
adc
xchg
push
sbb
imul
int3
mov
cwtl
or
mov
xor
pop
sarb
mov
inc
adc
xchg
mov
inc
lea
add
xor
imul
mov
repnz
sti
inc
xor
sub
stc
dec
pop
inc
mov
repnz
push
bound
jns
in
clc
dec
sbb
xchg
cmpsb
add
dec
adc
fisubl
mov
rorl
ds
call
jmp
xchg
push
out
or
mov
lods
dec
loope
js
shll
fcmovu
rcll
and
lahf
push
adc
pop
xorb
repz
adc
inc
test
xchg
rcr
or
add
add
fstpl
lcall
stos
push
xchg
mov
rcrl
adc
xchg
xor
lods
jne
cmp
sub
cmc
js
and
ja
push
lahf
jmp
pop
in
cs
mov
frstor
stos
ja
inc
pop
in
sbb
or
dec
inc
xor
daa
ja
jle
push
out
jo
mov
xchg
or
jae
add
or
and
test
ror
std
mov
imul
pop
leave
popf
lods
data16
push
push
fwait
pusha
int
movsb
mov
nop
hlt
add
fwait
cmp
cmpsb
mov
cmp
fildll
xchg
cmp
out
cld
xchg
cs
rcr
add
dec
pop
lods
mov
mov
in
xlat
push
jp
negb
and
pop
mov
xchg
push
pop
fwait
lods
lock
or
pushf
fwait
adc
or
out
jle
stos
cmp
jb
pop
lock
mov
clc
or
cmp
xchg
int
hlt
inc
call
pop
shrw
ljmp
ja
sub
jl
lods
cld
sbb
add
cmp
dec
mov
mov
sti
scas
sbb
mov
push
loop
mov
subb
or
fisubrs
push
push
subl
push
rcrl
sbb
xorb
sbb
xchg
xchg
push
xlat
push
dec
xor
call
pop
mov
in
dec
mov
pop
cltd
test
int3
in
jecxz
out
into
jo
dec
mov
inc
js
xorl
dec
cmp
aas
rolb
lods
cmp
cltd
push
sbb
cs
dec
and
dec
xchg
mov
popf
inc
pop
roll
stos
jmp
mov
push
sbb
movsl
jnp
sti
push
insl
jle
in
je
bound
pop
xor
push
or
sub
add
mov
or
popf
pop
and
test
sbb
mov
rcrl
dec
sbb
ja
jl
ret
cmpsl
xchg
inc
in
xchg
jae
mov
test
arpl
lret
fsubrp
xlat
adc
jae
xchg
stos
mov
adc
ljmp
or
adc
outsl
fisubrl
mov
mov
movsb
lods
dec
movsb
clc
icebp
enter
or
pop
adc
js
and
clc
cwtl
aam
sub
cmp
pushf
cmp
in
loop
ret
sbb
icebp
cmpsl
inc
jae
ficompl
sub
xor
lret
mov
push
and
test
jne
mov
add
add
sub
jne
out
test
xchg
lods
lcall
mov
add
out
into
pusha
repz
jo
jne
jno
and
xchg
loop
outsb
ds
enter
mov
mov
out
adc
cs
mov
jo
lea
call
xchg
fbstp
cmpsl
stos
or
icebp
jg
mov
push
aad
xchg
and
sub
add
lcall
call
into
dec
and
xchg
lea
sub
dec
xor
pop
mov
mov
mov
jg
repnz
aad
rcrb
pop
mov
mov
cmpsl
or
adc
nop
jp
jmp
imul
mov
out
in
jle
sub
loopne
lods
scas
add
mov
std
imul
fimull
or
call
popl
adc
not
lcall
hlt
dec
xor
test
insb
jae
jnp
mov
mov
sbb
push
inc
mov
je
nopl
mov
es
int
xorb
jb
jle
jl
insl
ficoml
sbb
dec
mov
cmpb
inc
test
push
popa
xchg
jl
sbb
xor
mov
test
dec
sbb
mov
cmp
xchg
jp
xchg
into
insb
or
dec
push
ficoms
rclb
mov
push
add
pop
cmp
or
fs
gs
push
int3
dec
aam
sbb
icebp
sbb
in
or
or
or
aas
or
or
imul
out
jecxz
shll
scas
push
lret
add
repnz
rolb
lock
push
ljmp
test
cmp
cmp
adc
mov
xor
test
mov
fidivrs
adc
aad
rorb
push
in
jle
sbb
pop
dec
test
mov
mov
lahf
ret
lahf
xchg
sub
jae
pusha
or
mov
inc
or
sub
add
lret
repnz
mov
pop
mov
lea
sub
call
push
aam
rcrb
inc
jge
adc
mov
repnz
push
or
mov
cmp
repnz
cmpsb
or
push
dec
cli
enter
lcall
adc
das
addr16
xchg
int
pop
sub
sub
adc
mov
xor
icebp
mov
sbb
testb
add
xor
addl
jbe
test
fsubs
dec
jg
mov
or
aad
mov
push
pushf
enter
sub
jge
in
mov
mov
inc
cmc
sbb
sub
mov
test
add
mov
xchg
enter
xor
jb
sbb
mov
icebp
inc
mov
lahf
mov
addl
or
push
xchg
cltd
or
mov
mov
imull
push
sub
jp
repnz
adc
mov
stc
and
fimull
loope
xorl
test
lds
loope
leave
inc
adc
popa
ljmp
push
cld
mov
or
sbb
ds
gs
or
cs
insl
int
insb
clc
testb
mov
movsl
gs
xor
gs
dec
xchg
adc
frstor
cmp
or
mov
cmpsb
pop
je
inc
jmp
xchg
pushf
test
jbe
cli
dec
cmp
xchg
sti
fwait
adc
movsl
xlat
out
jmp
pop
jo
repnz
bound
jae
xchg
fs
sti
xchg
aad
std
push
movsb
add
shlb
and
ljmp
test
cmp
push
fldl
inc
sub
jg
mov
arpl
jnp
lods
movsb
cld
add
or
test
mov
jle
and
andl
leave
sbb
sub
mov
ret
in
jle
inc
fildl
dec
inc
pop
jge
dec
scas
sbb
mov
push
mov
xorl
dec
fcoml
das
test
inc
mov
cmp
lahf
mov
push
adc
pop
loope
icebp
mov
xchg
icebp
aas
scas
lret
loop
and
dec
notb
mov
cltd
mov
push
or
xor
aas
mov
jno
cwtl
clc
sbb
adcl
outsb
add
adc
ss
popa
dec
inc
mov
outsb
sub
pusha
xor
ret
shll
push
mov
mov
jnp
jl
xor
ljmp
out
scas
push
ret
shlb
xchg
ret
sbb
loopne
out
call
push
rorb
xchg
push
repnz
pop
jecxz
negb
fisubrs
inc
in
mov
aaa
cmp
scas
xor
sti
dec
inc
or
imul
pop
popa
sbb
xor
push
adc
popa
addr16
push
xchg
or
xchg
aaa
in
mov
jo
xor
into
or
movsl
dec
out
pop
je
in
sub
movsl
movsb
js
or
jmp
adc
mov
ljmp
jns
mov
lods
mov
call
pusha
jo
cmpsl
in
shrl
cmp
adc
mov
int
sbb
and
xchg
testl
adcl
or
out
sbb
xadd
adc
into
mov
aam
iret
leave
sub
mov
roll
sub
pop
xor
or
xchg
pop
scas
jne
test
add
cld
negl
je
xor
in
aad
in
mov
hlt
repz
push
data16
lret
jo
or
xor
mov
dec
sub
mov
cwtl
movsl
lods
adc
ficoms
pusha
lods
lea
int3
mov
pop
xchg
hlt
mov
jne
cwtl
cmp
rol
cwtl
sub
data16
sbb
sbb
dec
adc
sbbl
sarb
adc
pop
fsubrl
popa
sbb
adcb
repz
into
push
aaa
dec
or
aaa
outsb
scas
jno
xchg
addr16
out
fld
ret
push
insl
dec
add
out
mov
repz
int
fisubrl
outsl
mov
xchg
out
mov
pop
mov
add
push
nop
xchg
xchg
mov
xor
pop
stos
int3
les
cwtl
sub
push
in
stc
imul
call
into
cmp
std
lea
inc
vmulsd
add
pushf
xor
push
loop
add
dec
xor
inc
outsb
mov
int3
js
or
dec
mov
cli
mov
pop
xor
fisttps
ret
add
inc
jne
mov
clc
or
shrb
push
xor
ret
sub
popa
insl
mov
jp
or
pop
jl
fninit
out
movb
mov
movzbl
xchg
dec
push
sub
nop
incb
bound
xchg
sbb
and
xor
mov
xor
push
or
inc
add
lret
dec
mov
shrb
cmp
ss
xor
movsl
and
pop
lea
jo
mov
ficompl
call
out
ljmp
pop
xchg
fidivrs
push
push
test
stos
and
fbstp
push
mov
mov
adc
addr16
mov
xchg
adc
push
adc
sub
inc
dec
popl
std
lea
incb
pusha
sub
adc
pop
xlat
leave
imul
aad
jne
jle
and
xchg
dec
inc
ja
inc
fidivl
fisubrl
mov
mov
push
clc
scas
jg
adc
pop
or
xlat
jns
xor
and
jecxz
sub
adc
pop
shlb
popf
lock
insb
mov
loopne
js
add
leave
dec
loope
adcb
in
xchg
rclb
cltd
push
arpl
xchg
xchg
push
notb
or
or
aaa
testl
fcmovnb
pop
std
lret
mov
sbbb
xchg
loope
jnp
xor
aaa
mov
xchg
cmp
mov
outsl
test
call
repnz
cmp
xchg
cmp
mov
mov
xchg
popf
mov
push
mov
jmp
inc
inc
fwait
stc
rolb
xchg
and
inc
ret
jno
iret
stc
jnp
out
pop
mov
test
pop
aam
icebp
adc
cmp
cld
pop
lock
scas
sub
push
loopne
call
mov
fs
mov
mov
clc
je
mov
enter
mov
in
push
hlt
cltd
mov
mov
jae
int3
lcall
out
adc
sub
testb
decb
cmp
lahf
lods
inc
cmpsl
sub
dec
nop
jne
push
stos
add
imul
outsb
pop
pop
shl
jb
fucom
in
and
icebp
ljmp
pop
mov
and
mov
push
icebp
lds
sub
aas
sbb
xchg
iret
mov
aam
arpl
push
xchg
or
int
jno
mov
test
mov
cmpb
jmp
push
sub
mov
icebp
xchg
test
notl
push
cmp
lods
xchg
ffree
add
pop
pop
test
mov
test
out
inc
and
rol
jbe
or
mov
gs
xchg
mov
iret
out
adc
xlat
mov
push
std
inc
cmc
outsl
js
push
cwtl
cmp
fnstcw
and
pusha
sbb
loop
orb
jb
pop
inc
mov
xchg
movb
jb
int
cwtl
mov
out
ja
insl
sbb
bound
mov
jae
lret
add
jbe
cmp
into
enter
pop
stc
sub
adc
add
mov
add
xor
push
jae
adc
cwtl
cmp
mov
sbb
inc
loop
movsl
or
pop
jbe
xlat
dec
lret
sbb
fdivl
fidivrl
cld
insb
jne
mov
leave
mov
jecxz
xor
and
aas
rcll
mov
iret
mov
ljmp
pushf
ds
shll
lock
sti
outsl
jo
jge
insl
jl
lret
mov
dec
add
and
fnsave
repnz
pop
outsb
sbb
sbb
xchg
cmp
mov
pop
adc
cmp
test
test
sub
mov
fs
pop
hlt
push
fwait
pop
pop
jg
call
cli
scas
push
roll
and
mov
push
stos
mov
xchg
int
sub
ret
scas
mov
ljmp
push
rcrl
mov
in
or
sti
or
out
push
mov
insl
push
pop
mov
data16
push
ja
dec
leave
mov
mov
or
mov
leave
inc
pop
mov
sti
jnp
outsl
push
dec
lret
add
aas
push
add
fcmovnb
addr16
and
adc
adc
push
enter
ret
and
arpl
adc
sbb
jno
pop
repz
cmpsb
popa
fwait
dec
jmp
stos
cwtl
dec
popa
loope
insb
fadds
das
adc
lahf
lods
imul
mov
push
mov
xchg
sub
fcompl
stc
pop
inc
sub
xchg
rclb
in
in
jge
mov
dec
aam
xchg
add
cmpsb
in
lods
nop
pop
jbe
loopne
testb
add
mov
int
test
pop
sbb
lcall
in
and
or
pop
outsl
mov
fistpll
scas
lea
mov
push
fnsave
test
mov
sub
ret
aaa
add
in
jb
mov
insb
test
fwait
out
out
data16
dec
inc
xor
arpl
test
dec
fs
lds
sub
cmc
scas
cmp
and
or
xchg
aad
lods
shr
pop
xadd
lahf
fcmovnu
lcall
xchg
das
cltd
ror
sbb
es
scas
fisttps
adcb
lahf
xor
sbb
inc
int3
dec
dec
sti
mov
sbb
adc
jmp
xor
nop
lods
ret
repz
fistpll
sub
fdivrl
addb
push
outsl
cmc
rcll
divb
jns
fsubr
pop
xchg
push
sbb
or
call
jge
adc
cmp
sub
sbb
shrb
xchg
flds
jne
testl
mov
daa
mov
jp
shl
dec
test
xor
outsl
js
imul
sbb
loope
adcb
cmp
push
shr
cwtl
xchg
mov
jmp
jp
nop
mov
repnz
mov
stos
cmpsb
ja
rclb
and
add
push
ja
dec
test
testb
insl
add
movsb
decl
cmc
insl
cmp
out
or
stos
stc
bnd
das
xchg
cld
adc
movsl
fadd
in
insl
mov
cmp
dec
cmp
fimull
or
je,pt
dec
xchg
lea
cli
in
lahf
mov
outsb
in
mov
cltd
test
pop
cmpsb
dec
insl
fdivr
xlat
push
out
xor
aad
mov
and
jge
fs
outsl
pop
push
dec
mov
and
pop
daa
stos
push
cmpsb
and
mov
sbb
ja
pop
mov
int3
sub
or
std
ljmp
xchg
adcl
pop
ljmp
mov
into
push
sub
xchg
ss
ds
xor
push
xchg
lods
dec
insl
or
sub
mov
std
xchg
sbb
movsb
ja
cmp
jno
push
test
movsl
rorl
in
mov
xchg
mov
xchg
fdivrl
dec
ficoms
out
imul
mov
jmp
mov
outsl
daa
jge
cmp
fwait
mov
xchg
push
aad
mov
mov
mov
js
mov
ja
mov
mov
insb
mov
push
push
int3
mov
inc
out
inc
scas
mov
loop
pop
cld
xor
dec
aam
push
dec
xor
xchg
sbb
stos
outsl
cmp
cmp
add
sub
int3
mov
insl
fcoms
cld
mov
or
enter
add
lret
cltd
pop
lock
xor
out
inc
popf
mov
sub
mov
cmp
lods
movb
jecxz
inc
fcmovnbe
fucompp
stos
ret
mov
adcb
adc
insb
es
mov
mov
cmp
inc
jecxz
mov
xchg
out
mov
jno
jge
mov
lahf
addr16
out
pop
mov
out
shlb
push
mov
adc
xchg
mov
cmp
mov
pop
pop
dec
sub
push
xor
pop
das
xchg
push
cs
imul
jbe
lret
aad
lret
vpunpckhwd
or
push
das
xchg
es
jmp
xor
clc
cmc
cmp
inc
add
mov
outsl
pop
push
mov
add
mov
jmp
in
push
ret
test
aad
std
fisttpll
into
mov
mov
pop
and
loop
mov
mov
lcall
xchg
dec
or
xchg
sbb
push
adc
jns
sbb
into
test
mov
dec
lahf
jns
cli
movsb
std
jb
hlt
push
vandpd
pop
insb
test
lcall
sub
das
or
jb
movsl
jp
shll
jne
mov
push
repz
fcmovb
jle
loope
xchg
std
push
mov
bound
sahf
xchg
fildl
push
mov
inc
sti
dec
mov
shll
mov
sbb
repnz
adc
test
xchg
add
insb
hlt
loope
pop
inc
loop
jmp
test
pop
dec
dec
nop
sub
push
dec
sub
fidivrs
repnz
call
xchg
pop
xchg
lret
jl
push
or
fldenv
outsl
cmp
lds
les
mov
repnz
pop
aas
push
lds
cmp
repz
hlt
inc
fists
in
in
cmc
js
sbb
popa
std
and
mov
mov
cmp
cld
filds
xchg
sbb
and
scas
pop
dec
idivl
stos
mov
test
push
nop
shlb
movsb
ror
out
push
out
into
mov
cmp
xor
or
pop
jmp
and
inc
jnp
mov
pop
xchg
dec
xchg
xor
in
jg
hlt
fs
xchg
rorl
ret
xlat
cld
inc
xor
out
gs
add
lds
and
lea
lea
movzbl
imul
sub
xchg
mov
movzbl
mov
mov
xor
or
dec
sub
inc
inc
dec
mov
dec
jne
add
mov
add
dec
pop
lea
add
pop
mov
dec
pop
inc
dec
inc
mov
lea
mov
xor
dec
xor
lea
inc
add
ret
push
push
add
dec
push
or
add
mov
dec
movzbl
mov
push
add
xor
mov
lea
push
dec
inc
mov
mov
lea
inc
mov
push
dec
mov
inc
push
mov
mov
xor
imul
lea
push
dec
add
push
mov
movzbl
pushl
or
call
dec
add
mov
lea
mov
add
imul
sub
add
pop
ret
sub
sub
dec
cmp
jb
sub
xor
add
xor
mov
mov
movzwl
mov
movswl
inc
imul
mov
inc
lea
mov
inc
and
cmp
jb
lea
pop
imul
lea
mov
inc
imul
imul
lea
add
mov
dec
add
mov
xor
xor
imul
xor
inc
mov
inc
or
test
jbe
add
mov
mov
add
inc
sub
xor
mov
or
dec
add
and
add
inc
mov
dec
inc
movzbl
sub
inc
add
mov
add
and
add
mov
imul
mov
imul
sub
mov
mov
inc
mov
lea
imul
dec
mov
add
inc
dec
jne
inc
mov
mov
and
add
or
sub
movswl
sub
mov
inc
mov
inc
mov
inc
mov
movzbl
inc
and
sub
mov
mov
movsbl
test
jbe
mov
dec
inc
mov
dec
mov
inc
mov
imul
sub
add
add
inc
mov
or
inc
sub
movsbl
dec
movsbl
add
dec
and
add
mov
mov
lea
imul
movzbl
lea
or
add
mov
add
and
sub
mov
mov
dec
dec
movzbl
mov
lea
mov
mov
dec
mov
movzwl
lea
movzbl
lea
mov
add
inc
jmp
push
dec
dec
mov
mov
mov
movzwl
dec
add
sub
xor
or
dec
imul
dec
mov
mov
inc
mov
sub
mov
add
dec
mov
dec
dec
inc
inc
mov
mov
add
mov
movsbl
mov
mov
imul
mov
dec
mov
mov
cmp
je
sub
mov
mov
push
dec
call
call
dec
mov
call
call
mov
sub
add
sub
inc
dec
add
ret
sub
mov
pop
mov
ret
push
inc
add
inc
lea
add
push
inc
add
push
dec
push
mov
push
mov
mov
movzbl
mov
dec
call
dec
push
mov
sub
xor
lea
sub
movsbl
neg
xor
mov
add
add
mov
movsbl
mov
xor
mov
mov
lea
dec
inc
add
lea
dec
je
inc
mov
mov
mov
lea
dec
mov
dec
sub
mov
add
repnz
mov
imul
add
lea
jmp
mov
inc
lea
mov
movzbl
inc
mov
sub
inc
dec
mov
mov
add
add
jmp
test
addr16
sbb
sbb
mov
fstpl
pop
push
sahf
cmp
lds
cmp
mov
out
xor
push
popf
sbb
sub
or
mov
out
cmpsl
jno
xchg
ret
mov
xchg
loopne
or
nop
cwtl
sub
cmp
xchg
dec
out
dec
mov
sahf
xchg
test
inc
das
lret
ja
cmp
and
and
cs
cltd
bswap
fldl
inc
pop
outsl
mov
push
in
pop
nop
sbb
add
sbb
pop
shlb
mov
inc
xchg
dec
les
into
sub
or
xchg
mov
mov
xor
mov
scas
dec
xorl
jbe
mov
leave
sbb
pop
xor
inc
roll
and
test
cltd
xchg
das
clc
fstpl
sbb
repnz
xor
int3
and
add
xchg
cs
loop
xchg
mov
dec
orl
dec
int3
in
fs
inc
adc
xorl
push
add
loop
pop
int3
jg
mov
xchg
into
das
xchg
sbb
mov
outsl
scas
sub
div
xlat
xchg
dec
mov
push
sub
inc
xchg
rorb
cmp
into
repz
ss
loop
mov
cmp
fdivl
add
arpl
pop
push
jb
arpl
cmp
cltd
sbb
call
add
daa
fbstp
push
imulb
or
pop
std
fcomi
fimuls
pop
cmc
ja
push
mov
addr16
aas
repz
enter
push
pop
xchg
sub
xor
sbb
pop
cmp
dec
ljmp
mov
cmp
push
jge
pushf
int
sarb
jmp
sti
movsb
aad
cmc
cmp
in
test
pop
sti
pop
fucomip
xchg
test
mov
popa
jb
imull
mov
mov
mov
stos
cmpsl
sub
xor
or
mov
loope
dec
jne
xor
roll
ss
push
movsl
mov
outsl
cli
dec
in
outsl
clc
popa
mov
icebp
xchg
mov
rcrb
mov
cmp
cltd
cmpsl
pop
xchg
jle
xchg
sbb
sbb
xor
adc
push
inc
in
or
cmpsb
pop
pop
inc
jmp
into
lret
cmpsl
outsb
mov
adc
mov
cs
sub
push
gs
xlat
cmpsb
scas
fadd
lahf
inc
iret
xchg
inc
dec
mov
cs
pop
clc
dec
mov
adc
insl
fldl
cmp
mov
cmc
iret
lahf
shrb
jo
repnz
sarb
mov
es
pop
push
sub
push
dec
adc
add
cmp
dec
movb
jnp
jp
pop
enter
and
xlat
addr16
or
cmc
mov
jns
or
fmull
pusha
mov
cmp
inc
inc
rcl
mulb
shll
sti
sub
mov
pop
push
std
jl
mull
jge
and
inc
xor
and
pop
add
ljmp
dec
mov
inc
nop
sbb
cli
push
loopne
sbb
inc
sbb
mov
mov
sub
inc
add
data16
mov
inc
or
mov
inc
pop
pop
mov
data16
rep
push
sbb
jg
mov
mov
sbb
das
insl
sbb
adc
and
imul
xchg
jne
inc
push
and
in
or
out
mov
dec
fdivl
pushf
xchg
aam
jge
pop
fdivl
jl
sub
push
cmp
lods
inc
fnsave
xchg
add
and
sub
xlat
mov
imull
aad
enter
cs
and
adc
lods
in
jmp
inc
sbb
jl
mov
cmp
sub
dec
sbb
lods
sub
insb
imul
push
inc
ret
xchg
adc
aaa
ss
outsb
sahf
inc
xchg
fisttps
cmp
xchg
jecxz
sbb
test
ja
push
adc
aas
lret
out
push
fimuls
xlat
cs
mov
inc
jno
pusha
aad
xchg
push
add
mov
enter
mov
icebp
cltd
repnz
sub
ljmp
in
xchg
enter
data16
mov
push
add
test
repnz
push
loopne
or
stc
fmul
out
hlt
push
cs
jb
in
int3
dec
and
sti
clc
ja
jo
mov
mov
lea
idiv
mov
enter
dec
daa
loop
sub
lret
xchg
jmp
xor
int3
fdivrp
adc
in
dec
in
add
enter
out
pop
inc
lea
out
das
sbb
ret
inc
out
adcl
stc
pop
mov
sub
jmp
add
adc
stos
sub
add
scas
sahf
xchg
mov
lds
icebp
xor
divl
dec
xor
fstps
mov
push
movsl
mov
push
aas
mov
xor
jmp
mov
push
scas
out
jne
fdivs
lock
jo
ljmp
xchg
sub
pop
xchg
aad
int3
xor
xchg
jl
dec
outsl
popf
test
mov
movsl
jg
jno
cmpsb
xchg
jg
imul
push
adc
xor
mov
cmp
pop
xchg
add
mov
sub
and
das
push
arpl
pop
ret
outsb
clc
adc
sub
jle
adc
sub
fnstcw
bswap
and
sbb
jecxz
cmp
aad
pop
add
jnp
or
sbb
mov
xchg
push
or
in
sub
add
into
push
mov
test
mov
add
cli
fnsave
bound
out
push
insb
dec
sub
mov
xlat
cwtl
mov
pop
xchg
jg
adc
cmp
ss
ja
xchg
mov
cmp
or
and
cld
sub
cwtl
xlat
pop
sti
inc
mov
inc
lds
dec
into
push
mov
adc
cmpb
sub
sub
ss
and
pop
aas
xor
ss
xor
adc
jge
jbe
cmpsl
test
jle
rcr
push
xchg
movsb
or
jns
gs
addr16
imul
xchg
imulb
sub
mov
outsb
cmp
mov
dec
jae
ret
mov
dec
dec
aaa
bound
push
fwait
mov
ficoms
push
imul
into
jl
jle
fstpt
je
mov
dec
inc
in
inc
xchg
das
mov
jle
shl
test
pop
imul
in
fcoms
ja
jp
mov
pop
arpl
lea
mov
lds
in
fnsave
jns
sbb
inc
sbbb
cltd
repnz
sub
fcomps
push
sub
pop
xchg
ja
aaa
pop
lods
cmp
rcrb
ret
adc
imul
test
in
fs
mov
push
mov
mov
or
mov
lret
in
sahf
pop
adc
or
jb
push
inc
mov
pop
sub
cmp
addr16
and
add
mov
jge
and
test
inc
inc
mov
add
lea
int3
mov
jo
movsb
push
ljmp
jno
mov
arpl
and
push
lret
fists
and
or
push
in
mov
lret
fnstcw
push
into
xchg
in
mov
rolb
aad
rcrb
sbb
stc
xor
aad
outsl
cmp
imulb
dec
cmp
push
jg
sub
jb
mov
ret
sub
jmp
test
aas
or
dec
imul
sub
pop
pop
jnp
call
jns
pop
bswap
ljmp
mov
pop
xchg
jbe
movsl
inc
repz
sahf
jp
mov
roll
sub
xchg
daa
mov
push
sti
shlb
shlb
inc
xchg
insb
pushf
sbb
push
je
or
popa
or
adc
and
mulb
lods
lock
inc
scas
push
je
mov
jo
iret
mull
dec
jo
in
pop
jbe
xchg
mov
xchg
outsl
sbb
mov
sub
jb
push
popfw
lahf
je
jb
les
adc
dec
lcall
cs
out
mov
call
xor
push
jmp
imul
pop
inc
fldt
dec
sbb
and
push
inc
adc
push
lods
nop
adc
add
jnp
push
adc
and
mov
inc
add
mov
mov
rcrl
and
or
andl
arpl
mov
js
jb
mov
mov
int
cmp
pop
int
icebp
push
adc
stos
jl
int
nop
arpl
jge
hlt
in
or
push
rorl
jo
fcomi
jae
xchg
cmc
mov
push
js
mov
push
sbb
cmp
sbb
loop
hlt
sbb
cmpsb
pop
shl
push
and
test
jno
cwtl
sub
mul
test
cmp
push
cmp
movsl
cmp
push
push
popf
scas
xor
push
dec
cmp
dec
subb
shr
jne
jno
mov
movsb
inc
inc
pop
sbb
ss
adc
repnz
push
enter
cmp
jns
out
cli
add
add
lock
add
subl
fwait
lcall
xor
add
cmp
sub
pop
or
cwtl
test
cli
push
lahf
negb
jle
ljmp
sub
pop
js
jg
popl
movsl
loope
popa
mov
or
inc
test
push
int3
in
jnp
fistps
iret
sarl
fwait
mov
cmp
adc
stos
adc
mov
sub
sub
xchg
dec
dec
xorl
daa
outsb
jo
mov
pop
jge
xor
loop
sub
popf
jg
lock
push
or
inc
icebp
js
mov
lods
int
jbe
and
int3
inc
rcl
mov
loopne
adcb
adc
xchg
xchg
jle
packuswb
cmp
push
xchg
std
into
cmp
or
rcll
jp
mov
adc
in
fmull
pop
xchg
bswap
mov
sub
cwtl
cltd
mov
loop
xor
dec
pushf
fwait
loop
sbb
leave
lret
insl
addl
stc
inc
mov
cmpsb
jae
jns
add
shll
or
sarb
cld
bound
les
stc
cld
fnstcw
movsb
fwait
and
ds
xchg
xor
enter
in
loop
xor
cwtl
jmp
xor
stos
ss
arpl
jmp
call
hlt
outsb
sub
fs
mov
inc
and
sbb
sar
cmp
adc
sbb
jmp
sbb
fmul
dec
movsl
test
adc
rolb
adc
pop
ss
loope
in
sbb
mov
and
jg
ret
std
push
daa
enter
mov
mov
pop
lcall
lcall
and
sbb
dec
adc
out
cs
ljmp
repz
sbbl
je
incl
inc
push
imul
cwtl
pop
sarb
in
cld
sbb
push
pop
push
jo
xchg
in
jbe
das
jge
rorb
sti
fcomps
out
or
dec
adc
cmp
sbb
das
push
lods
xchg
or
movlps
test
push
inc
pop
and
jmp
nop
int3
jo
jns
or
scas
xchg
adc
xchg
push
sar
ret
ficompl
into
xor
xlat
xchg
add
pop
enter
sbbl
xor
scas
in
fst
fdiv
pushf
loop,pn
push
sbb
or
iret
adc
and
jb
sub
and
xor
adc
popf
imulb
jnp
es
cmp
pop
ja
into
das
in
and
fidivrl
popf
xor
out
sti
xor
push
jle
lahf
xor
mov
and
dec
or
mov
sub
aam
movsb
es
fiadds
insl
ss
rclb
shll
adc
mov
out
mov
daa
inc
mov
shlb
testl
xlat
in
mov
xchg
cmp
es
push
test
loopne
pop
outsb
in
in
stc
or
cwtl
aaa
rcll
ret
mov
sub
mov
psubw
mov
icebp
inc
cmpsb
cmp
leave
or
jo
inc
enter
xor
mov
mov
jge
es
mov
lret
cmpsb
xorb
dec
jne
test
daa
cmp
dec
sbb
jne
add
jnp
hlt
and
push
mov
jp
lods
jp
xchg
mov
outsb
xchg
mov
mull
push
sbb
pop
jle
push
lcall
in
clc
stos
or
or
push
mov
data16
push
call
lods
loopne
xor
sbb
je
or
or
dec
sbb
jnp
push
shrb
xor
jecxz
xchg
pusha
jne
sbb
stos
push
imul
rcr
repz
cmp
out
push
pop
mov
adcl
or
pop
mov
ret
push
pop
add
adc
mov
sub
sti
inc
iret
xchg
push
push
sbb
mov
jb
sar
fadds
lds
fisubrs
pop
fistps
test
add
sub
adc
cwtl
shl
out
or
leave
jle
xchg
dec
pop
inc
ds
cmp
shrl
xchg
imul
out
std
mov
insl
aam
cmp
cwtl
mov
pop
mov
mov
jns
jbe
out
mov
in
test
fidivrl
icebp
mov
push
sub
push
shr
add
jp
cmpsb
xlat
mov
pusha
stc
dec
dec
jle
adc
add
sub
loopne
jle
cltd
test
or
and
xchg
data16
sahf
bound
mov
aas
loopne
dec
jne
out
mov
and
lods
or
testb
jb
test
mov
push
mov
movzwl
add
call
inc
add
call
imul
push
dec
call
movswl
sub
or
dec
dec
mov
call
mov
lea
inc
mov
xor
inc
dec
dec
or
inc
inc
sub
call
lea
add
and
dec
call
add
imul
call
mov
inc
xor
mov
imul
movsbl
dec
sub
sub
pop
inc
dec
dec
add
add
pop
mov
lea
pop
mov
dec
add
sub
pop
mov
mov
dec
sub
mov
inc
mov
add
pop
lea
mov
pop
mov
movzbl
mov
dec
or
call
or
inc
inc
movzbl
ret
imul
mov
push
inc
mov
push
dec
inc
push
inc
movswl
push
mov
movzwl
push
add
lea
mov
lea
lea
push
add
ret
push
mov
push
imul
mov
imul
push
inc
dec
dec
call
pop
ret
jmp
inc
xor
pop
pop
ret
push
lea
inc
imul
lea
movsbl
movzwl
dec
dec
lea
add
mov
dec
xor
lea
inc
mov
sub
dec
dec
and
add
inc
dec
mov
imul
pop
ret
sub
mov
mov
movzbl
lea
mov
lea
add
mov
inc
dec
mov
lea
add
xor
dec
mov
mov
mov
add
inc
mov
imul
mov
movzbl
inc
mov
cmp
jb
or
push
add
dec
push
sub
dec
push
and
xor
xor
mov
and
xor
add
mov
xor
add
sub
push
and
mov
push
mov
add
pop
imul
mov
lea
add
mov
mov
imul
inc
dec
xor
movswl
add
mov
add
xor
mov
inc
dec
movzbl
add
mov
lea
and
add
movzwl
add
or
add
movzbl
dec
and
add
mov
sub
dec
inc
xor
sub
mov
dec
and
dec
jmp
add
inc
add
add
jno
inc
add
adc
add
inc
add
add
add
add
cltd
leave
inc
add
add
add
jne
in
mov
pushf
xor
pop
sti
and
cmpl
adc
loopne
lods
cwtl
push
movsl
and
mov
bound
aad
movsl
xor
pop
xor
mov
test
leave
into
xchg
aaa
jle
hlt
pop
push
rcll
mov
insb
in
push
imul
jb
pop
out
sub
pop
push
in
fwait
or
xchg
dec
mov
xor
mov
adc
mov
arpl
test
mov
xchg
into
jb
stc
hlt
or
in
dec
lcall
test
scas
subl
pop
sbbl
andl
inc
fildll
fdivs
and
cmp
int
cmpsb
outsb
fdivp
stos
pop
out
mov
icebp
xchg
pop
mov
das
in
std
cmp
dec
insl
push
lret
jl
sar
into
pusha
push
testl
xchg
and
icebp
data16
aad
dec
xor
dec
cmpsl
je
loopne
xchg
xor
mov
sbb
fwait
inc
das
xchg
nop
sti
daa
pop
adc
jbe
imul
fucomip
shll
idiv
aaa
loope
push
xlat
lcall
push
insl
inc
enter
lret
jns
xor
in
add
jnp
push
lds
and
xor
jno
ss
test
sbb
repz
loope
repnz
stos
fstpl
cmp
add
into
inc
fwait
add
and
sahf
andb
fstpl
lods
xchg
xlat
or
int
andb
pop
xchg
pop
adc
movsb
nop
fistps
and
sub
repz
fstps
enter
sbb
subb
and
pop
add
std
or
push
movsb
arpl
pop
push
test
outsb
leave
jge
daa
jns
les
std
int
cmp
push
xchg
xchg
je
ret
testl
movsl
sti
leave
loopew,pt
enter
mov
xor
jmp
aaa
das
pop
pop
cmp
int3
sets
das
fidivs
push
ret
xor
hlt
dec
arpl
pop
dec
aaa
xchg
insb
mov
or
repz
int3
xor
sbb
sti
dec
push
aam
cwtl
push
sub
daa
xor
sbb
popl
sub
mov
clc
neg
sahf
scas
lahf
mov
cmp
mov
out
insl
dec
mov
loopne
jmp
adc
push
arpl
mov
pop
daa
jae
cmp
aam
sub
xchg
mov
adc
dec
fsubl
mov
dec
add
or
xchg
pop
popf
int
sbb
enter
pop
sub
inc
dec
enter
inc
jg
stc
sub
dec
dec
pop
shl
push
adc
cwtl
ret
xchg
xchg
xchg
shrb
das
and
cmp
repz
sub
xchg
fadd
loopne
cli
push
push
int
push
xor
fstps
sti
gs
outsl
orb
push
add
movq
xor
jne
pop
mov
insl
rorl
mov
push
mov
test
dec
loope
mov
xchg
inc
push
mov
data16
mov
jmp
adc
adc
scas
iret
repz
lretw
ret
push
daa
dec
ss
jbe
mov
movsl
out
test
and
mov
pushf
shlb
outsl
mov
repnz
in
xchg
inc
xor
push
movsb
or
sub
add
or
xchg
sbb
push
xchg
pop
test
int
push
dec
xchg
into
mov
aad
dec
mov
inc
lods
and
outsl
push
mov
ffree
or
aad
repnz
loopne
or
jl
lea
push
adc
xchg
inc
cmp
mov
mov
lret
cwtl
push
call
mov
pop
scas
mov
xchg
mov
lds
mov
ret
mov
jns
ja
pop
xchg
cmovnp
xchg
test
jns
fidivl
mov
xor
fsubrl
pop
sub
test
mov
and
jecxz
push
iret
test
loope
add
into
pop
mov
adc
xor
push
or
inc
dec
jl,pn
mov
cmpsl
lock
fwait
cmpsb
lret
fwait
pop
addr16
pop
dec
pop
push
stc
adc
out
push
sbb
out
lret
decb
push
cmp
ret
fidivs
sbb
stos
xorb
mov
pop
sahf
in
pop
xorl
adc
gs
push
frstor
jecxz
xchg
fnsave
int3
pop
into
pop
mov
dec
movsb
lret
popa
in
jecxz
sbb
pop
push
jle
push
repnz
jle
mov
imul
inc
aad
data16
ja
cmpb
or
std
mov
lds
mov
jecxz
mov
add
and
repz
and
jge
xchg
jbe
icebp
lret
push
and
shll
sbb
cmpsb
xchg
jle
jbe
insb
jp
or
sti
and
stos
lret
or
or
sub
subb
leave
mov
cmpsl
mov
pop
or
mov
test
push
insb
daa
adc
jmp
adc
fdivs
fwait
sarl
sub
sbb
sarl
push
inc
ljmp
out
and
push
or
dec
cli
lods
xchg
cmp
add
outsl
stc
call
bound
jo
push
mov
mov
ss
or
mov
inc
ss
mov
jmp
xchg
pushf
xlat
out
cs
cwtl
pop
cmp
stos
shlb
lods
bound
mov
jno
add
push
lods
push
aas
mov
xchg
lea
cmp
push
aas
mov
rcr
cmc
cmp
repnz
ss
testb
jge
sub
add
dec
jge
fcmovnb
dec
das
bound
call
pusha
lcall
sbb
push
xorl
int
gs
arpl
sub
cmp
sahf
pop
rorb
and
cltd
adc
add
popa
pop
push
cmpsb
hlt
cmp
xchg
jnp
lcall
pop
pop
mov
inc
xchg
in
lahf
inc
loopne
andl
ljmp
shll
rorb
cwtl
out
jb
cmp
xchg
add
jle
cld
sbb
or
addb
lahf
out
ret
lock
mov
setge
rorb
pusha
inc
push
jbe
sub
out
and
nop
lahf
hlt
mov
jae
hlt
add
mov
sbb
dec
into
imul
lods
subl
mov
sbb
xlat
push
je
xlat
jp
push
add
aas
gs
lret
sub
cwtl
out
loope
out
jo
sahf
outsl
or
dec
pop
ljmp
ret
loopne
in
clc
test
adc
cltd
mov
andb
mov
sub
jbe
clc
mov
cmc
and
js
mov
jge
std
pop
cli
inc
jg
int
or
and
sbb
and
jp
sarb
pop
jmp
sbb
imul
loope
xchg
ja
stc
dec
call
arpl
sbb
xchg
bound
push
rcl
push
jno
mov
mov
cmp
aam
subl
jno
xor
sahf
add
test
add
inc
stos
jmp
addr16
test
sbb
das
outsb
jge
inc
loope
bound
dec
fdivrl
and
add
or
adc
jb
add
push
xor
mov
nop
or
pop
jl
rol
or
fcmove
enter
fs
dec
and
jle
or
test
mov
je
sub
call
lret
lcall
in
mov
xchg
push
mov
or
mov
jae
xlat
add
pop
mov
and
sub
and
in
jmp
stc
adc
jmp
cld
add
pushf
pop
or
mov
cmc
and
push
aaa
mov
mov
fldl
add
inc
addr16
or
cmp
inc
test
movsl
in
push
or
adc
div
imul
jbe
insb
loopne
dec
leave
push
lret
push
imul
out
lods
xchg
pop
add
jo
and
pushf
xchg
or
or
inc
pop
sbb
mov
mov
pushf
push
cmp
and
mov
mov
inc
out
movsl
xchg
dec
lahf
jnp
cwtl
dec
cld
bound
jae
pop
mov
das
loop
lret
pushf
ljmp
aam
fwait
js
xor
push
inc
lret
cmp
jecxz
xor
xchg
lods
xor
cli
push
dec
add
mov
push
into
xlat
test
adc
mov
mov
subl
inc
cmpsl
out
call
jp
pop
cmp
je
enter
aaa
rolb
or
and
enter
xchg
mov
push
sbb
xor
cwtl
jb
outsb
cld
cmpsb
mov
jmp
add
hlt
pop
sbb
pop
in
hlt
lahf
imul
cwtl
xor
les
lods
lcall
in
jo
xchg
fdivp
in
movsl
mov
xor
insl
je
repz
xchg
or
jmp
rcr
insb
and
lcall
jl
pand
orl
push
sbb
fdivrl
call
cmp
add
mov
pop
xor
pop
in
bound
and
lods
imull
imul
mov
mov
sti
ret
mov
lcall
jns
inc
sub
lret
mov
xor
inc
and
mov
das
add
pusha
and
pop
std
sti
into
gs
in
mov
and
mov
inc
sbb
mov
jnp
push
xor
daa
and
push
sub
mov
jb
mov
mov
mov
int3
sbb
adc
sarl
and
inc
int
insl
push
fstps
int3
sub
mov
jae
sub
cmc
pop
testb
hlt
add
add
push
fidivrl
or
adc
push
lock
mov
push
inc
insl
fdiv
xor
fistps
lods
push
scas
jmp
and
orb
loop
sub
cwtl
iret
inc
sbb
and
je
jbe
push
push
sbb
sbb
out
inc
jo
in
or
dec
add
mov
pop
shrl
je
jle
inc
jnp
cs
cmpsl
dec
jg
cmp
aad
adc
jo
dec
lahf
pusha
mov
and
xlat
add
jmp
cmp
and
ljmp
add
ret
clc
mov
scas
jl
mov
mov
push
js
sbb
xor
filds
ss
ja
lock
scas
xor
mov
sbb
out
mov
mov
imul
rolb
mov
pop
dec
rcrb
xor
int
push
xchg
addr16
loop
rcrb
push
inc
inc
lods
pop
push
sub
adc
cmp
add
out
imul
push
sbb
popf
js
pmaddwd
cmpsl
imul
in
adc
in
shlb
jne
xchg
jecxz
xor
negb
jge
imul
push
xor
fisttps
pop
lods
mov
in
and
jmp
data16
pop
cmp
cmp
sahf
pop
std
ret
dec
fnstcw
mov
neg
pusha
je
xchg
lods
push
cmp
cld
add
xchg
inc
test
int
je
mov
icebp
scas
push
pushf
xlat
fstl
dec
arpl
outsb
push
arpl
push
je
add
jp
hlt
enter
movsb
call
mov
sbb
inc
xor
dec
pop
sub
xchg
mov
fldcw
inc
and
sbb
mov
mov
sar
cmp
cmpsb
stc
cmp
xchg
or
movsl
push
mov
subl
mov
sbb
mov
inc
lea
sub
cs
mov
push
dec
lret
fisttpll
pop
xchg
in
jl
idiv
xor
ja
push
std
mov
popf
pshufw
rcl
out
push
jnp
scas
push
bound
in
dec
add
mov
jecxz
aam
mov
jo
mov
ror
adc
std
sbb
push
add
lahf
rcrb
inc
or
or
cmc
inc
xor
sbb
outsl
loopne
test
imull
lret
loope
jle
xchg
aam
add
xor
mov
inc
int
or
cli
int
mov
insl
lret
inc
lcall
bound
jmp
cmp
mov
lcall
sbb
sar
pop
xchg
aad
aas
repz
push
jmp
sub
xchg
orb
mov
shr
sarl
dec
jno
push
push
aas
inc
xchg
and
mov
lds
clc
das
loop
out
add
cmp
and
xchg
sbb
mov
enter
or
or
int
jge
rolb
or
dec
mov
adcb
enter
fsubrl
sbb
push
push
and
sub
push
je
push
sbb
add
das
and
loop
pusha
mov
mov
cli
push
mov
or
aaa
je
jbe
out
leave
aaa
aas
jne
incl
adc
cmp
fsubrl
jecxz
scas
dec
fstl
loope
sub
jno
xchg
dec
sbb
sarl
cmp
jb
jmp
cmp
jnp
push
popf
pop
fwait
mov
and
dec
int3
addr16
imul
mov
lret
call
and
xor
dec
mov
adc
dec
shll
rorb
leave
in
lret
aaa
mov
xchg
fdiv
mov
lret
cltd
out
fldl
push
stos
mov
orl
leave
stos
or
adc
jne
jns
ja
inc
fistps
or
dec
pop
and
out
pop
add
ss
mov
in
mov
daa
subl
or
jmp
in
testl
and
lret
cmp
stos
lock
daa
shll
js
lret
jl
inc
mov
mov
mov
or
sub
mov
add
adc
or
icebp
sub
stos
xor
and
adcl
dec
in
xchg
sbb
mov
inc
daa
cltd
das
pop
ret
pop
stos
addr16
int3
sub
decb
pop
repz
push
mov
dec
sbb
call
push
pop
sub
data16
shlb
jp
mov
test
call
adc
lods
popa
aad
add
sub
pop
pop
ficoms
enter
sub
inc
push
cmp
test
or
int
jle
loope
test
pushf
outsb
mov
repnz
ret
std
mov
ljmp
pop
mov
add
dec
hlt
xor
ficoml
push
je
jmp
je
xor
push
pop
outsl
jmp
call
mov
imul
pop
int3
hlt
pop
push
fildl
jecxz
popa
stc
call
push
inc
leave
mov
xor
lret
das
mov
hlt
mov
and
dec
mov
sbb
notb
das
daa
pushf
pop
stc
aad
nop
mov
gs
in
outsl
add
ja
test
popa
bound
fcomip
imulb
cmp
in
icebp
fiadds
movl
inc
subl
or
stos
js
xchg
push
push
shl
addl
out
mov
insl
jl
inc
adcl
rol
test
push
mov
add
cs
test
stos
data16
jb
dec
push
stc
and
inc
movsl
mov
and
jl
test
jp
push
push
pop
es
dec
fstl
mov
sbb
mov
push
mov
or
add
stos
dec
sti
jle
sti
repnz
cmpsl
fimull
sub
test
insl
lcall
adc
pop
sbb
push
sti
xor
pop
xor
jg
cmp
sub
and
rcll
push
int3
adc
inc
sbb
add
or
cs
decl
hlt
mov
pop
and
and
movsb
aad
inc
dec
or
sbb
cltd
loopne
repnz
adcb
or
and
loop
xchg
out
loope
fs
jnp
movsl
mov
lcall
js,pn
jle
enter
outsl
insb
mov
and
je
pushf
push
sbb
cmp
in
dec
ret
nop
pop
lods
les
sbb
cltd
popf
mov
das
clc
shl
into
add
xchg
xor
outsl
pop
pop
adc
iret
and
lods
sbb
std
push
in
pop
lock
popf
pop
inc
xchg
sub
xchg
and
dec
push
movsb
add
adc
push
mov
sub
sbb
jne
daa
or
fldl
decb
test
sbb
push
mov
iret
call
push
fsub
xchg
lock
xchg
push
mov
gs
pop
sub
call
push
or
testb
mov
iret
std
int
lods
lret
or
out
loopne
into
mov
jp
hlt
sub
jb
mov
lret
jb
push
lcall
jbe
fnstsw
cmpsl
aaa
push
adc
mov
stos
cmpsl
int
test
stos
rorl
xor
int
fninit
icebp
roll
sbb
dec
jbe
dec
cltd
imul
nop
jl
mov
mov
cld
lea
int
pop
sarl
addr16
jle
cwtl
xchg
jnp
in
jbe
aam
les
push
mov
mov
mov
fdiv
mov
sbb
adc
nop
lcall
sbb
lret
sub
and
or
dec
scas
icebp
jns
dec
repz
cld
les
adc
mov
mov
dec
sub
mov
xor
pop
mov
mov
imul
cmp
sub
nop
imul
popl
mov
mov
and
sbb
xchg
arpl
scas
and
pop
inc
cmp
sbb
rorb
mov
cmp
add
jns
addb
lods
inc
pushf
out
stos
cmp
mov
add
xchg
adc
jl
cmp
push
iret
xor
rorl
je
adc
imul
jnp
cmp
ret
xlat
in
shr
cmp
and
dec
cmp
adc
sbb
jno
rolb
arpl
mov
mov
test
fcom
mov
xor
jne
add
or
mov
scas
pop
push
rcll
xor
icebp
hlt
push
adc
mov
out
lock
faddl
push
fidivs
jp
xor
sbb
add
pop
jge
clc
dec
fistpll
cmp
mov
enter
mov
dec
push
add
mov
dec
xchg
imul
nop
out
mov
fdivrp
cmpsb
jg
aam
lret
vandps
outsl
repnz
cmp
js
push
pop
imul
jp
sbb
and
xchg
xchg
add
ja
mov
inc
sbb
lods
fucom
inc
add
lock
stc
cwtl
daa
mov
jne
lret
mov
sub
sbb
or
inc
nopl
mov
test
sub
pop
xchg
dec
shr
mov
data16
movzwl
jno
sub
push
in
stc
pop
add
xor
ret
push
in
or
test
cmp
mov
xlat
pop
add
adc
inc
pop
push
sbb
adc
out
cmc
fnstcw
mov
jg
pop
add
arpl
fwait
les
cmp
or
repnz
aaa
decb
mov
popf
lret
xor
test
imul
inc
movb
enter
rcrl
int
loop
stc
fldcw
fnstsw
inc
xor
out
js
ret
sub
rolb
adc
jbe
sub
mov
jl
push
cmpsb
shrb
scas
sub
sbb
jb
adc
test
pop
mov
sarl
subl
xor
push
adc
jae
mov
lods
inc
rcll
into
aaa
test
jb
out
dec
add
xchg
mov
add
sbb
lret
fcmove
xchg
jae,pn
out
and
push
sbb
mov
xor
ljmp
mov
cmp
adc
xor
fbstp
pop
pop
xchg
test
daa
cmpl
aaa
pop
and
iret
mov
or
mov
loopne
mov
outsb
and
test
xorb
push
arpl
mov
adc
pop
sub
cmp
pushf
sysexit
adc
mov
xchg
outsl
pop
and
mov
loop
clc
cmp
and
mov
mov
imul
outsb
sub
ss
stos
mov
mov
pop
push
push
out
jmp
inc
add
pop
adc
dec
cmp
push
and
insl
and
jnp
loop
test
sbb
push
jne
cmc
inc
xchg
or
leave
stos
pop
movsl
test
xor
and
cmp
shrl
sbb
or
fdiv
cltd
mov
rorb
mov
hlt
mov
adc
iret
lcall
lds
shl
leave
int
cltd
jae
add
lods
jo
fisubl
cs
fidivrs
sub
jnp
and
enter
inc
sub
xor
ret
push
cmp
add
xlat
and
out
cmp
jecxz
dec
xchg
xchg
call
sbb
sub
fwait
cmp
jns
sahf
icebp
pop
mov
shlb
sub
pushf
sub
movb
inc
lock
mov
mov
aaa
rcr
push
jno
or
decb
mov
lcall
pop
movb
mov
inc
cmp
inc
push
leave
jg
mov
add
mov
aam
mov
or
dec
cmpsl
inc
outsb
mov
sbb
out
mov
mov
ds
aas
movsl
daa
push
dec
jle
nop
add
stos
dec
and
xor
and
icebp
nop
rcrb
inc
push
repz
jecxz
add
pushf
push
cwtl
add
mov
sub
sbb
pop
std
scas
add
mov
adc
xchg
jns
adc
dec
rcrl
jns
popa
repz
xchg
arpl
mov
repnz
jle
rorl
cmc
shll
mov
mov
fcoms
sub
jo
pminub
shrl
data16
orb
mov
mov
add
jge
jle
out
ret
repz
sub
dec
sbb
sub
popa
roll
pop
test
fsts
test
sbb
into
dec
xchg
xchg
out
idiv
xor
jecxz
fimull
rolb
lret
sbb
or
push
push
ds
repnz
xorl
out
fidivrl
fs
sbb
icebp
mov
xor
sti
pop
push
leave
mov
mov
pusha
in
filds
lods
popf
movsl
push
out
inc
jmp
jbe
dec
fsubrp
xor
and
xlat
fcomp
in
pop
pop
xchg
ret
mov
add
test
pop
mov
pop
jo
sbb
xor
xor
outsb
jl
push
mov
add
shll
jle
mov
inc
aas
cmpsb
ss
movsl
adc
sub
pop
push
adc
sbb
repnz
mov
mov
call
adc
jb
rdseed
js
je
push
shr
int
cmc
xchg
adc
push
sbb
mov
ljmp
cli
ret
adc
es
lods
dec
addr16
lahf
arpl
mov
cld
test
stos
cmp
fsubs
mov
mov
or
in
push
and
das
sbb
sub
cmp
fs
mov
push
xor
ss
push
sub
ret
pop
push
pop
lods
mov
adc
add
pusha
xchg
mov
mov
add
and
pop
adc
mov
outsl
add
testb
xchg
inc
inc
stos
cmp
mov
push
pushf
arpl
cmp
push
out
inc
fsubp
sub
or
jge
add
in
in
and
dec
jge
jae
cmpsl
into
aad
gs
push
nop
sbb
mov
and
jp
arpl
repz
dec
push
imul
xor
les
shlb
adc
popa
xor
xchg
mov
dec
addr16
clc
sub
sub
push
push
andl
jp
mov
out
lea
inc
pop
sub
or
nop
test
sbb
call
xchg
push
or
ja
dec
les
lea
xchg
xchg
mov
lea
mov
sahf
ret
mov
insl
std
jnp
sub
xchg
jne
cmp
movsb
dec
fldpi
cmp
cwtl
add
mov
fisubrl
rolb
int3
jp
outsl
gs
lret
sbb
mov
test
xor
sbb
imul
adc
inc
sti
inc
jmp
or
sbb
adc
test
loop
aam
incb
ljmp
call
je
lods
std
dec
xor
adcl
frstor
and
xchg
idivl
xchg
notb
movsl
xorl
adc
xor
nop
andb
mov
lods
xchg
mov
out
dec
lds
popa
push
cs
inc
xchg
in
adc
sarl
rorb
data16
test
les
xlat
std
jns
jb
cltd
cwtl
data16
sub
in
sub
iret
adc
out
pop
leave
sub
add
pop
jno
idivb
ja
mov
cmpsl
stc
push
js
lret
inc
enter
xor
xchg
inc
or
sub
dec
jmp
jmp
bound
mov
xchg
mov
mov
mov
rolb
loop
mov
push
jb
sub
xchg
test
xlat
lcall
je
in
sarb
outsl
pop
mov
cmp
xor
cltd
and
les
xor
push
clc
pop
mov
push
mov
dec
pop
mov
mov
lods
rcll
es
lret
lock
int3
cld
jno
inc
enter
roll
cmc
sbb
lcall
out
in
and
into
cmpsl
adc
xchg
fmuls
pop
push
jns
int
push
sbb
cmp
sbb
add
pop
mov
test
ret
or
push
scas
jmp
xor
pop
sarb
stos
inc
jecxz
and
xor
popa
jnp
mov
cwtl
rcll
outsb
add
jge
das
adc
rcl
adc
push
clc
cmpl
bswap
cltd
mov
lret
aad
jo
rorl
or
lea
mov
into
mov
enter
adc
fldt
push
rcrb
lret
xchg
dec
movsb
pop
test
andb
or
adc
cmp
dec
es
mov
adc
xor
pop
jp
cwtl
xor
add
ret
shll
jl
arpl
dec
mov
dec
ds
outsl
mov
mov
rorb
ds
dec
pop
lods
xchg
imul
inc
dec
and
rcr
inc
lock
adc
pop
inc
cli
xchg
mov
out
stc
dec
faddl
jmp
mov
sar
imul
mov
or
jmp
push
into
mov
jb
mov
lea
ja
rcrl
lahf
cld
inc
pop
out
jl
adc
jmp
pop
mov
into
faddl
test
xchg
clc
cltd
fsubs
jmp
fs
dec
scas
adc
jle
hlt
jae
fs
or
pop
lahf
xor
mov
jbe
xor
cs
lods
fdivs
addb
fnstsw
por
popf
lcall
jl
jecxz
push
scas
in
fwait
push
push
lods
test
pop
bound
sub
sahf
repnz
push
jb
fstp
cmp
in
mov
fimull
pusha
leave
sbb
out
xchg
repnz
in
xchg
mov
pop
adc
mov
std
shrl
lahf
xor
lea
adc
jmp
jle
es
xor
mov
lahf
mov
push
xchg
out
in
xchg
aaa
add
daa
dec
jecxz
pop
dec
push
daa
or
jl
repz
pop
lcall
cmc
addr16
fldt
pop
xor
ror
aas
outsl
jl
pop
and
jns
lcall
xchg
hlt
xchg
or
insl
lret
adc
xchg
pop
push
rol
ja
scas
xor
scas
mov
icebp
push
mov
aas
pop
ja
lahf
icebp
add
leave
int
imul
mov
pop
xchg
adc
xlat
fidivs
jl
jne
dec
adc
mov
leave
loop
inc
mov
mov
outsb
xchg
mov
popf
test
icebp
mov
movsl
aam
movsl
xchg
dec
pop
repz
push
jg
mov
lret
imul
cmp
testl
popf
inc
inc
cmc
and
or
jae
xor
xchg
mov
push
fsubs
adc
jbe
out
dec
int
xlat
dec
xor
in
mov
or
repnz
add
fwait
cmp
inc
jo
mov
and
fimull
pop
lods
xchg
or
push
inc
add
add
rclb
cltd
mov
cli
lds
mov
stc
adc
sub
adc
mov
push
sub
in
xchg
inc
sub
and
imul
pop
dec
shrb
or
jno
pop
mov
cwtl
xlat
add
mov
fcomp
xor
adc
repz
mov
test
dec
xor
jle
pusha
lods
cmp
mov
push
popa
pushf
leave
xor
cli
mov
aaa
push
adc
into
push
jo
stos
mov
sahf
inc
imul
iret
insl
mov
sbb
sub
xchg
out
outsb
dec
mov
lcall
mov
dec
test
push
or
dec
lds
sub
fisttps
jmp
lret
inc
sub
push
inc
bound
adc
push
inc
lds
sahf
lds
or
pop
sub
sbb
stos
dec
loop
leave
push
add
imul
aad
nop
ds
imul
inc
ljmp
ss
mov
cmp
incb
enter
scas
sub
pusha
dec
add
cmp
pop
sub
mov
ljmp
mov
jne
jae
aaa
jl
loop
pop
mov
push
je
push
aam
bound
bswap
subl
pusha
xchg
aad
stos
sub
xchg
iret
std
sbb
lcall
sub
mov
out
xchg
jp
cmp
ja
jno
jmp
ret
and
xchg
outsb
lret
xor
cs
movsl
pop
test
iret
stc
push
or
xor
mov
xchg
adc
out
sub
out
loop
leave
inc
or
movsw
jge
xor
stos
pop
dec
mov
pushf
adc
es
cmp
popf
sti
mov
inc
fs
and
pushf
sbb
xchg
jnp
test
mov
cwtl
popa
scas
aad
test
or
mov
xor
xlat
sbb
loop
jb
dec
stos
int
add
xor
repz
inc
cli
arpl
adc
les
add
and
cwtl
ja
xor
fstpt
fadds
cltd
mov
mov
xor
adc
ljmp
sub
icebp
sbb
sub
pop
xchg
cwtl
nop
xor
test
sub
fistps
xchg
mov
lcall
mov
pop
lahf
mov
cs
mov
push
sbb
nop
insb
ret
stc
and
cwtl
inc
test
sub
clc
adcl
insb
lret
sarb
pop
inc
adc
int
adcb
adc
push
data16
dec
push
in
inc
xchg
adcl
je
mov
rcll
jg
fidivrs
mov
mov
ficoms
in
mov
rclb
into
insb
mov
lods
popf
dec
inc
and
push
mov
pop
push
mov
mov
jecxz
cmp
jecxz
and
nop
add
push
inc
push
mov
lret
mov
add
add
mov
movsb
sub
lahf
and
pavgb
fwait
mov
dec
ret
mov
add
sbb
cld
mov
cmc
jno
loopne
push
repnz
das
mov
pop
orl
loop
push
imul
es
mov
inc
ljmp
cmpsl
leave
cmp
out
dec
or
mov
or
add
sub
push
fs
mov
sbb
dec
js
leave
adcb
and
xchg
in
inc
mov
ficoms
xchg
and
inc
aad
lret
mov
mov
jo
dec
mov
sub
pop
scas
outsl
fs
add
mov
cld
pop
xchg
fistpl
shll
add
sti
sub
mulb
iret
fsubrs
bound
test
stc
push
insl
cltd
or
xchg
jge
inc
mov
mov
dec
adc
inc
sub
in
xor
xchg
jbe
and
or
arpl
and
lds
adc
loope
jnp
jnp
and
rolb
xchg
shlb
jbe
cmp
rorl
out
filds
imul
lods
outsb
xchg
inc
dec
xchg
pop
sbb
pushf
sbb
add
adcl
jo
cmp
ds
sbb
aam
leave
mov
add
push
pop
dec
push
cwtl
jmp
sahf
mov
fisubrl
jle
test
push
ret
jns
fiaddl
mov
and
out
inc
shlb
and
jmp
jns
lds
or
cmpsb
xchg
xlat
push
jle
add
sbbb
jg
cmp
jmp
nop
adc
inc
rcrb
mov
xor
mov
cmp
adc
rorl
ret
pop
lods
cld
sub
pop
test
add
mov
or
test
mov
push
pop
sar
mov
adc
pop
int3
xchg
jnp
lcall
jmp
cwtl
or
mov
mov
in
jmp
repz
sbb
sti
xor
sub
ljmp
out
stos
dec
enter
repz
add
out
jo
push
adc
xchg
icebp
sbb
push
mov
xchg
rcrb
pop
dec
in
movsl
cli
iret
inc
test
push
push
pop
or
loop
or
dec
mov
mov
test
mov
cltd
push
cld
add
cmp
pop
scas
jb
sub
out
fs
fwait
sub
push
jo
sbb
sbbb
aas
enter
jb
scas
sub
xchg
adc
call
clc
movsb
jbe
pusha
hlt
or
mov
xor
fwait
mov
cli
jae
xor
cmc
hlt
mov
stos
call
add
mov
ret
mov
mov
cmpsl
sti
xor
inc
movsl
lcall
lods
lahf
sbbb
imul
fs
mov
and
jle
add
jae
push
pop
pop
mov
js
or
mov
cmp
cmc
lret
add
dec
push
aaa
and
movq
cmp
mov
xchg
cmpl
imul
das
adc
push
or
jns
or
andb
adc
push
out
aam
ja
femms
dec
jmp
xchg
jle
push
mov
sbb
inc
lahf
aaa
test
dec
push
mov
jno
adc
add
daa
adc
outsb
stos
pop
daa
mov
dec
jge
add
add
sbb
insl
fimuls
mov
arpl
inc
aaa
jmp
sarl
mov
mov
lret
rcr
iret
fldcw
jo
pop
pop
ss
lret
jmp
je
pop
cltd
jne
mov
out
aam
clc
pushf
lock
out
xchg
cmp
push
cmpl
pop
xor
and
daa
repz
add
cmp
fnstcw
push
xchg
jns
fmull
pop
clc
jp
dec
mov
jp
fwait
jle
jge
into
aaa
pop
mov
pop
inc
jp
mov
subb
in
cmp
xor
outsb
inc
shl
mov
cwtl
loope
pop
mov
leave
mov
pusha
lahf
fstl
in
pop
sub
pop
push
mov
lock
movsb
jle
call
sahf
or
and
mov
insb
jmp
add
roll
es
jecxz
or
and
add
sub
lret
hlt
pop
repnz
clc
mov
iret
mov
les
repz
push
xor
movsl
jae
inc
sti
adc
xchg
sub
jle
inc
mov
inc
push
insb
pop
cmpsl
sbb
add
lock
jnp
xor
and
addr16
xchg
outsl
cmc
dec
mov
push
pusha
or
mov
dec
call
lock
clc
jle
shlb
pop
in
loop
inc
add
pop
les
popf
imul
mov
and
and
mov
cmp
push
in
cltd
dec
outsl
xchg
jb
cmp
daa
out
daa
nop
mov
mov
xchg
nop
sbbl
xlat
pop
add
jmp
pop
movb
mov
sub
mov
mov
mov
shl
and
sub
jnp
lods
mov
xlat
add
cmp
in
sarb
push
adc
mov
shrl
cmp
clc
aas
les
fbld
shrl
adc
sbb
popa
mov
xorl
daa
cmp
rcrb
stos
enter
aas
outsb
lock
insb
outsl
cwtl
pop
test
cmp
cli
lods
imul
xchg
mov
rclb
test
mov
lea
jns
xor
push
jle
pop
test
sbb
bnd
lcall
lea
fldt
add
mov
pop
int3
pop
mov
gs
inc
mov
call
push
jnp
pop
mov
hlt
mov
inc
xlat
dec
bound
aas
test
mov
fisttpll
icebp
out
mov
inc
loopne
repnz
lods
bnd
push
shll
jmp
jb
jae
push
jp
add
pushf
mov
pushf
pop
fwait
sub
ret
or
int3
fs
cmp
push
fs
pop
adc
jo
inc
fwait
js
jge
sbb
imul
or
mov
pop
pop
mov
ja
pop
pop
lds
aam
fisttps
in
xor
pop
stc
cmp
add
push
imul
push
cltd
push
mov
xchg
mov
cwtl
lods
cmp
lds
or
cs
in
push
mov
xchg
movsl
jge
or
adc
fldl
and
xor
ljmp
inc
add
cli
xor
dec
cwtl
ficompl
cwtl
push
outsl
pusha
lods
das
jno
test
dec
dec
cmp
arpl
jmp
sbb
cwtl
cmp
cs
cmp
imul
test
cmp
mov
xchg
pop
add
arpl
pop
pop
shll
enter
or
cli
popl
lods
rorb
decb
sub
int3
xor
mov
xchg
ljmp
shll
cmp
out
push
int
imul
inc
cmp
and
cmp
mov
xchg
mov
push
jmp
push
pop
xchg
mov
dec
sbb
in
lcall
into
cs
scas
and
fmuls
jl
xchg
adc
cmp
mov
pop
xchg
aad
xor
cmp
xor
ret
out
xor
scas
in
mulb
jns
xchg
mov
imul
mov
push
jbe
mov
pop
sbb
jne
das
jb
cwtl
mov
push
pop
dec
data16
cltd
into
out
xlat
mov
or
cltd
sbb
mov
add
inc
cld
inc
inc
aaa
xor
mov
sbb
xor
hlt
dec
jbe
les
xor
push
mov
stos
and
aad
jle
mov
sbb
movsl
je
shlb
jg
out
inc
leave
sbb
ds
add
mov
inc
stc
or
fs
movsb
jb
mov
fistpl
pop
scas
fcoms
pop
pop
out
push
int
sbb
icebp
cwtl
inc
or
in
sub
jp
stos
adc
data16
jl
mov
mov
or
fdiv
cs
mov
cmp
adc
sbb
push
gs
rclb
mov
pop
inc
xlat
sbb
mov
xchg
jbe
push
roll
push
xchg
and
xchg
dec
sbb
dec
stos
es
pop
cmp
add
in
mov
xchg
fisubrs
seto
rcl
in
repz
xchg
decb
jns
mov
pop
imul
mov
mov
mov
ljmp
xchg
dec
repnz
cmp
outsl
in
repnz
mov
mov
add
push
adc
rorb
xor
in
dec
mov
and
aad
lock
jmp
or
jp
cmp
mov
mulb
mov
mov
push
xor
pop
mov
jl
mov
jmp
ja
xchg
inc
dec
dec
xor
lcall
push
cwtl
mov
cmp
pushf
je
mov
test
pop
sub
mov
or
cmpsl
fcomps
or
cmc
sub
loope
push
repnz
push
iret
lods
jg
xor
nop
xor
dec
push
xor
dec
bound
mov
daa
gs
mov
mov
jp
jp
not
subl
fidivrs
das
and
sub
es
testl
movsl
xchg
jmp
mov
push
push
lods
out
pop
adc
cld
les
lods
hlt
xor
add
lock
xchg
xor
or
in
rclb
cmp
jae
cmp
pop
jb
and
aad
adc
lods
arpl
fbstp
mov
aam
ret
dec
frstor
jg
jp
pop
cmp
mov
cmpl
xchg
popf
fiadds
xorb
and
push
or
jp
inc
sub
inc
int3
mov
pushf
cmpsb
dec
cmp
test
ret
aaa
insl
mov
and
adc
push
cmpsb
adc
imul
cld
imul
dec
mov
sarb
or
cmpsb
fwait
out
lahf
cmp
pop
mov
push
mov
cld
retw
jnp
push
and
mov
push
mov
xor
xor
lret
subl
push
ss
adc
in
les
or
in
int
insb
jmp
mov
aas
cmc
add
jne
inc
nop
test
insb
call
imull
mov
lods
pop
jmp
andl
cwtl
popf
jp
jo
and
out
push
aam
in
roll
sysexit
mov
sbb
jbe
dec
adc
scas
fxch
sub
repnz
scas
enter
jecxz
popf
je
ss
pop
xchg
jbe
add
xchg
dec
xchg
lret
pop
sub
int3
testl
or
popa
sub
dec
movsl
arpl
xchg
sub
decl
push
sub
test
add
xchg
and
push
addr16
cmp
sahf
out
fcmovnu
fisubrl
cmp
add
mov
sahf
enter
mov
call
inc
loope
sti
sub
sbbb
jbe
xchg
jmp
fisubrs
insl
mov
ja
lret
push
mov
inc
leave
add
std
sahf
inc
pop
repnz
ja
push
repnz
mov
ja
fstps
in
shr
mov
jle
cmpsb
jns
mov
dec
test
xchg
je
fsubrl
push
dec
cmc
sbb
lea
loopne
push
cltd
fiadds
xchg
sbb
lds
addl
dec
fstpt
jecxz
pop
sar
ds
push
push
mov
orb
mov
cmp
mov
lods
jae
xorl
or
xchg
mov
movsl
pop
adc
adc
out
dec
pop
ss
xchg
xor
pop
addr16
icebp
outsl
test
dec
mov
sbb
jle
mov
out
test
leave
imul
daa
jle
sub
insl
dec
leave
jl
pop
pop
or
push
or
xor
dec
js
sbb
mov
dec
push
rorl
imul
xchg
and
es
jns
int3
sbb
xor
sti
aas
lock
cmp
cltd
inc
stc
aaa
jb
mov
out
mov
mov
xchg
or
cmpsb
xchg
mov
out
fbld
add
test
sbb
cld
inc
mov
cmpsl
sysenter
jle
add
mov
scas
add
lods
ja
dec
sahf
xchg
sbb
outsl
cmc
in
pop
sub
xchg
loope
addr16
pop
into
jbe
jl
loopne
mov
in
dec
fcomps
stc
neg
mov
and
out
push
inc
mov
dec
sub
repnz
add
fstl
ds
data16
popf
fcomi
aaa
mov
mov
push
insb
ljmp
pushf
or
xchg
push
rcrl
add
jge
jmp
test
jno
add
lea
test
in
arpl
and
pusha
insb
cmp
out
xchg
push
jbe
add
ror
repz
jle
lock
repnz
mov
push
xor
mov
imulb
pop
and
or
ja
adc
jl
lods
xchg
fildl
mov
leave
iret
aam
out
aaa
jo
push
push
call
cmp
push
sbb
pop
sbb
push
call
push
pop
outsb
jl
leave
test
les
aam
call
fldl
cmpsb
inc
pop
fiaddl
cmp
fidivs
jmp
sahf
jnp
in
and
or
mov
mov
rcll
aaa
sti
rol
mov
jge
inc
fisubl
pop
pop
inc
sbb
fdivrp
cmp
imul
jmp
ljmp
and
mov
es
xlat
xchg
lret
shrl
sbb
adc
les
mov
or
imul
aas
addr16
lea
jmp
and
std
sub
push
popa
aam
inc
add
push
aad
pop
imul
xor
jns
jl
mov
scas
xorb
push
sahf
ffree
pop
pop
sbb
mov
inc
clc
cmp
dec
lock
mov
xor
lds
stc
loope
pop
push
cmc
imul
push
or
inc
inc
jg
lods
mov
jge
cs
or
aam
inc
aaa
in
cltd
xlat
adc
test
and
fcomps
cltd
lds
mov
ficomps
sahf
push
testl
mov
add
pop
mov
push
scas
jmp
ja
loop
or
push
dec
movsl
int3
mov
out
jmp
pop
jnp
mov
cmpl
mov
fwait
sahf
test
sbb
arpl
or
orb
shll
sub
xor
pop
movsb
sub
aaa
bound
sbb
xchg
push
xchg
push
adc
pop
out
dec
sbb
xlat
adc
mov
loop
rcll
bswap
scas
jp
xchg
aas
cld
repnz
stos
imulb
inc
adc
add
call
loope
in
jb
pop
mov
sbb
mov
mov
mov
or
aaa
sub
data16
sbb
xchg
add
lea
and
mov
jbe
inc
insl
add
mov
pop
loopne
cmp
lods
cli
mov
and
mov
cmp
enter
mov
ficoml
popf
nop
push
in
xor
pop
inc
shlb
stc
aam
in
mov
cwtl
popf
push
fdivp
xchg
xchg
sbb
pop
into
dec
and
mov
fistl
test
inc
loop
xchg
pop
cmp
test
test
scas
lods
cs
mov
sbb
push
popf
int
and
movsl
mov
cmp
jp
mov
scas
loopne
andl
ja
push
mov
ja
popf
sbb
and
cmp
repnz
divl
jns
adc
cmpsl
mov
enter
and
or
loopne
dec
lcall
loope
fwait
jmp
xor
leave
arpl
js
sub
or
arpl
fiadds
pop
leave
xchg
mov
jae
shl
fstps
scas
jne
mov
mov
fwait
cmp
pop
pop
popa
push
mov
xor
xor
fmull
xor
and
test
jb
sbb
test
cmpsl
sub
add
mov
inc
and
adc
fiaddl
push
and
adc
sub
insl
dec
lret
adc
mov
sub
lods
sub
outsl
sbb
rcll
xchg
hlt
mov
inc
pop
aaa
mov
cmp
pop
ds
xchg
in
sbb
mov
testl
push
std
jg
js
mov
fdivrl
enter
repz
sub
jle
jns
lcall
adc
xchg
fs
sub
jmp
divb
jo
inc
dec
sbb
mov
mov
pop
or
inc
adc
xor
sub
push
stos
shll
and
bound
mov
xchg
mov
jle
mov
push
and
out
push
insl
in
hlt
and
jne
xchg
xor
pop
aam
or
stos
xor
mov
mov
test
adc
ret
subb
push
loope
enter
pop
pop
call
push
mov
dec
ret
pop
pop
jb
std
out
fnsave
mov
xchg
lahf
inc
jo
int3
cld
test
rcr
rcll
repnz
lret
loop
or
cmp
dec
insl
cmpsb
ret
outsb
test
xor
lock
jbe
lea
or
int
in
or
adc
push
arpl
in
mov
cwtl
in
inc
int
and
aam
mov
xor
ret
pusha
pop
mov
inc
rclb
pusha
cmpsl
add
push
xor
mov
shrl
xchg
cmpsl
out
cmp
mov
sub
inc
mov
stos
dec
mov
inc
cmp
pusha
out
ljmp
sahf
inc
sbb
test
repnz
mov
and
repz
rcrl
roll
in
pop
pop
sub
sbb
cmc
stos
dec
mov
jbe
or
icebp
jbe
adc
push
jns
sbbl
pop
test
cld
pop
pop
test
jbe
lret
fs
mov
test
into
cli
popa
push
cld
rcrl
in
sub
testb
dec
aam
mov
adc
and
cmp
filds
aad
lea
mov
fidivrs
push
push
rolb
lock
xor
mov
dec
pop
pop
adc
xlat
mov
push
jne
in
inc
sub
testl
lret
jnp
test
sbb
fdivs
sti
enter
ret
cs
inc
mov
mov
sbb
sar
dec
mov
mov
dec
inc
leave
pop
movsb
mov
test
pop
pop
mov
cmp
icebp
dec
mov
pop
popa
pop
inc
fidivrl
xchg
push
mov
jg
outsl
enter
push
dec
aas
fwait
adc
pop
leave
add
sub
and
dec
icebp
in
jle
inc
das
in
push
jnp
test
aad
xchg
push
inc
cmpsb
and
sub
lods
enter
dec
push
cld
lahf
sbb
call
sub
xor
iret
popf
rcrb
outsl
mov
adc
mov
adc
mov
pop
jo
mov
mov
fxtract
outsb
or
and
rcll
insl
jns
push
and
ret
push
jp
sub
mov
xor
sub
push
sarb
sti
adc
stos
rcrb
insl
out
pusha
or
scas
mov
xchg
xor
push
push
mov
ror
mov
mov
mov
fcmove
pushf
lock
mov
mov
imul
out
push
jmp
lock
xchg
or
inc
jb
push
sub
in
repz
sub
aad
jnp
jae
mov
cli
add
loopne
add
rcll
adc
jmp
mov
nop
fldt
aaa
daa
mov
iret
fs
add
rcrb
pop
mov
into
push
insb
lods
mov
xchg
fisubl
and
mov
push
sbb
mov
mov
inc
pop
out
mov
out
xchg
arpl
bound
or
mov
daa
xchg
push
jns
out
inc
arpl
pop
push
dec
jecxz
xor
loope
jmp
imul
stos
cmpsl
lods
imul
mov
leave
xchg
movsl
dec
ljmp
adc
scas
scas
or
lea
xchg
adc
mov
push
xor
dec
cs
enter
lahf
inc
xor
sbb
jge
outsb
fimull
in
in
test
mov
push
mov
mov
mov
imul
xchg
jb
or
enter
jge
adc
push
inc
xchg
sub
dec
js
shrl
daa
loopne
push
push
pop
rorb
inc
pop
jne
push
js
pop
pop
cmp
mov
ret
leave
xor
xchg
jmp
sub
xor
lret
dec
aaa
shrb
mov
mov
rcl
inc
iret
inc
sahf
and
subb
fs
mov
sar
xchg
pop
js
aaa
enter
jecxz
mov
sbb
pop
stos
pop
ds
fsubl
sbb
stc
sbb
fcomps
loope
js
adc
jmp
cmp
sub
in
in
jae
jge
adc
sti
enter
out
sbb
push
inc
xbegin
pop
enter
inc
mov
cmpsb
lds
lret
fucomp
test
int
out
lret
decl
mov
xchg
imul
clc
jecxz
daa
add
movups
xchg
test
dec
outsl
lods
mov
pop
dec
in
lret
mov
out
imul
aas
repnz
or
sbb
das
lods
mov
sarb
and
xor
dec
loop
les
adc
or
jns
mov
ja
dec
or
insl
hlt
stos
fldl
jns
popa
push
mov
int
sbb
inc
mov
enter
out
mov
rcl
push
decl
cwtl
sub
insb
jg
pop
push
inc
mov
mov
sub
or
cmp
xor
int
mov
add
cltd
lret
dec
movsl
mov
inc
stc
inc
cld
mov
fldcw
sub
popa
sbbl
fldenv
stos
push
mov
mov
fmulp
mov
cmp
mov
or
jnp
lds
jne
stc
dec
inc
sub
xchg
lock
orb
and
lret
dec
pop
jae
or
cmc
xor
lock
xchg
loope
cwtl
sub
jecxz
sub
in
mov
sub
xchg
or
push
repz
xor
push
add
inc
arpl
scas
mov
sub
out
rcrb
insb
out
imul
pop
jle
sahf
jg
lret
pop
shlb
dec
mov
or
jge
jecxz
iret
nop
and
mov
jnp
dec
mov
push
jne
lret
pop
fninit
loop
mov
loop
mov
jbe
push
pop
adc
mov
fs
and
andl
mov
mov
push
or
xchg
and
icebp
fdiv
das
addr16
inc
rcrl
pop
aaa
int3
or
and
or
xlat
call
mov
mov
jns
lds
ret
jp
xor
scas
ficoms
cmpsl
jmp
cmpsl
mov
sub
cmp
loop
hlt
out
aaa
test
mov
push
cwtl
test
lret
mov
decb
cmp
aad
inc
movb
push
je
dec
and
xlat
test
jl
pop
loop
leave
ret
jno
dec
sub
jae
aad
adc
mov
dec
ret
add
jmp
jp
testb
dec
in
sbb
out
out
push
aad
and
sbb
dec
sub
push
fdivrl
adc
jae
mov
es
pop
aad
mov
inc
movsl
jbe
jne
stos
fidivs
fmul
lret
dec
push
arpl
dec
xchg
fwait
notl
mov
pop
dec
icebp
ss
mov
dec
mov
aas
shrl
adc
enter
cwtl
xchg
add
lods
push
call
enter
and
inc
test
or
cmp
scas
das
sbb
and
jne
in
ret
sahf
iret
adc
and
pop
adc
mov
jno
mov
stos
jecxz
adc
sbb
or
lods
mov
cmp
mov
in
push
js
mov
mov
loopne
pop
mov
sub
mov
insb
repnz
adc
xor
push
mov
cmp
and
pop
daa
pop
mov
push
in
aad
insl
sub
pop
cld
repz
loop
ss
test
jge
lea
mov
or
arpl
sbb
shll
cmp
push
push
cmc
fs
jnp
in
add
dec
lods
sub
jns
cmp
push
mov
mov
andl
loopne
test
xchg
fwait
cs
cmp
movsb
insb
push
sbb
rclb
jle
mov
jbe
mov
adc
push
adc
sub
out
sub
and
inc
push
in
jns
ljmp
loop
imul
add
jb
cmp
sbb
push
lods
or
jecxz
pop
and
fs
in
imul
mov
loopne
inc
or
fbld
insl
in
addr16
dec
out
mov
xchg
pop
jno
out
repz
adc
popf
xchg
or
mov
addl
fmuls
jmp
fstps
pop
mov
sub
dec
jae
lcall
in
ljmp
xchg
call
lds
cltd
pushf
mov
hlt
or
sbb
insb
popf
or
int
ret
mov
ds
jnp
es
mov
pop
and
pop
es
es
jl
daa
rcr
push
sbb
sbb
shl
mov
fucomp
xchg
or
gs
and
dec
outsl
fwait
scas
idivb
mov
and
add
mov
pop
mov
ret
jb
inc
popa
xor
inc
xlat
lahf
imul
mov
mov
test
leave
test
push
cmp
add
stc
fmull
arpl
int
add
or
idivb
subl
lods
dec
in
pop
xchg
inc
das
cli
aam
adc
test
cmpsb
roll
ss
or
fimuls
mov
cmp
out
pop
lods
adc
mov
test
imul
sbbb
push
int3
insl
or
or
adc
mov
mov
push
mov
jbe
and
dec
jbe
scas
xor
pop
fdivrp
sub
in
pop
inc
rcr
into
ficompl
jg
test
fcmovu
iret
lret
in
daa
and
fidivs
out
data16
imul
pop
lods
nop
fdivrs
sbbl
xor
push
and
imul
cmp
sub
inc
dec
sbb
xchg
jne
inc
xor
jl
sub
aam
and
stc
cmp
jo
dec
scas
push
lods
xchg
xor
sbb
or
scas
sbb
jo
leave
sbb
push
mov
sbb
push
pop
aas
fcoms
jg
push
dec
sub
adc
push
scas
aam
sub
cmpsb
int
add
jecxz
scas
nop
roll
xchg
add
add
mov
push
cmp
mov
sbb
pop
mov
jo
jmp
lcall
ret
xchg
mov
fs
pusha
add
ret
sub
pusha
sti
imulb
jnp
stc
xchg
jmp
pop
jo
add
imul
fimuls
scas
adc
or
lock
cmpl
mov
jae
mov
mov
cmp
add
idivb
pusha
adc
lock
xchg
roll
push
add
daa
add
mov
mov
inc
cmp
outsl
xor
scas
stos
jge
cltd
xor
or
or
jecxz
adc
fisttpl
mov
xchg
cld
jo
insb
imul
or
idivl
pop
ret
dec
and
ja
jbe
data16
cmp
add
pop
mov
mov
jbe
adc
sub
xor
cmc
mov
mov
sub
mov
jns
dec
js
pop
cmpsl
mov
add
andb
popa
jmp
hlt
mov
cmpsl
int
loope
outsl
jecxz
shll
js
enter
lahf
sahf
mov
push
jbe
mov
xor
nop
aam
loopne
cmpsl
pop
test
fwait
push
lea
dec
cmp
and
mov
out
and
adc
mov
cld
sbb
sarl
pop
aad
pop
sbb
aaa
xchg
sarl
push
jo
cmp
adc
adc
inc
or
clc
loope
push
fimuls
mov
mov
stos
mov
lret
mov
test
cmc
cltd
mov
test
ffree
scas
sub
in
lret
fldt
pop
pusha
mov
or
cmc
or
ljmp
hlt
xor
dec
iret
repnz
loopne
or
mov
in
js
je
arpl
cmp
jge
mov
mov
out
sarb
sbb
and
or
aad
popa
or
out
xor
dec
out
lahf
stc
sbb
pop
aad
xchg
cwtl
shlb
push
arpl
or
fucom
dec
data16
das
cwtl
jmp
sarb
testl
enter
pop
imul
mov
pop
xchg
scas
fiadds
ret
xor
cmp
gs
add
loop
fdivrs
rorl
push
ljmp
movsb
pop
scas
push
and
outsb
xlat
or
cld
jecxz
pop
and
test
adc
aas
addr16
and
add
pop
pop
repz
mov
push
test
xor
lods
lods
inc
jge
dec
negl
jmp
hlt
push
mov
xchg
ret
ljmp
in
or
pop
jle
inc
push
push
mov
push
js
rcrb
roll
aas
push
and
shlb
push
js
dec
mov
push
dec
cs
mov
mov
mov
test
or
mov
fdivrl
imul
loop
and
add
insl
ret
cwtl
stos
loop
mov
inc
test
imul
xchg
mov
jns
cmp
dec
jbe
scas
mov
test
dec
or
push
movsb
inc
adc
mov
pop
jg
push
adc
fwait
pop
pop
enter
sahf
pop
vmovq
sarl
lcall
xchg
jae
jp
sarb
dec
jno
out
dec
addr16
add
adc
enter
jbe
jl
mov
pmovmskb
repnz
sub
dec
jge
cmc
sub
xchg
mov
shl
xchg
and
int
push
cltd
mov
pop
jne
and
leave
lcall
movsb
bound
fs
sbb
xchg
push
ret
sbb
xchg
mov
dec
das
add
lds
nop
call
test
test
cmp
test
pop
les
xor
outsb
xchg
dec
imul
sahf
add
jmp
cmp
sbb
sbb
mov
adc
and
adcb
jmp
or
mov
dec
xchg
fnstsw
or
enter
sbb
mov
cs
add
pop
fadds
inc
dec
add
dec
lret
hlt
pop
stos
mov
repz
pop
test
into
mov
filds
fwait
outsl
mov
call
int
ss
gs
fsubrl
aaa
pusha
adc
test
fsubr
call
adc
cmp
sbb
push
xor
add
test
clc
je
stos
aam
xor
sbb
cmc
cld
sub
or
jl
mov
mov
daa
jle
xchg
mov
pop
cmp
repz
adc
or
adc
leave
int3
lret
jne
insb
sub
adc
fcomi
movsl
lds
xchg
or
pop
xchg
or
aam
add
repz
nop
fstpt
mov
nop
mov
es
fdivp
and
push
inc
jo
in
out
push
xchg
out
lahf
xlat
xlat
dec
xchg
mov
mov
insl
pop
emms
enter
sub
push
icebp
pop
hlt
scas
cmp
mov
inc
insl
xchg
lret
dec
cmc
add
xchg
int
mov
imul
addr16
and
xchg
and
sub
ds
mov
mov
jp
xchg
dec
xchg
adc
jne
mov
xchg
push
bound
dec
sub
inc
mov
cmpsl
icebp
cmp
adc
mov
lahf
setp
call
test
imull
mov
jne
js
cli
scas
lcall
in
pop
rcll
add
inc
sub
jbe
pusha
gs
add
xchg
pop
mov
data16
xor
mov
ret
hlt
lds
mov
jmp
or
jae
fstpt
pop
mov
jle
push
sub
icebp
stos
adc
mov
test
iret
out
dec
mov
lret
iret
adcb
and
jmp
jno
mov
es
insb
mov
call
xor
es
mov
sub
pop
lds
fistps
lret
xor
int3
add
mov
dec
pop
jb
or
dec
add
xchg
das
push
jg
push
sbb
rcl
add
jmp
or
xor
inc
dec
out
push
fidivrl
cmpsb
cs
insl
inc
mov
cmc
sub
mov
jecxz
or
das
movsb
enter
popf
xchg
outsl
out
dec
jp
inc
cmc
push
and
inc
into
in
aas
out
xchg
adc
cmp
or
or
fsubrs
inc
fdivs
dec
xlat
fs
es
lret
sti
daa
xchg
outsb
lods
aaa
xor
sub
adc
jge
je
sbb
dec
aam
sbb
add
and
ds
mov
pop
xchg
cmc
test
fdiv
mov
or
ds
pop
idivl
in
loop
inc
pop
jns
lcall
mov
repz
cmp
imul
hlt
aaa
outsl
jnp
imul
mov
cmpsb
and
pusha
int3
jns
pusha
mov
jno
mov
pushw
jbe
loope
cmp
pusha
shrd
push
test
shll
cmpsl
sub
push
mov
bound
aas
jmp
outsl
mov
rolb
xchg
lahf
aad
jb
das
jmp
push
cmc
xor
je
clc
cmpsb
xchg
mov
push
addb
mov
aad
jns
mov
in
xor
loop
insl
int3
inc
test
mov
test
adc
jle
mov
decb
add
xchg
enter
sbb
sub
ljmp
mov
push
push
fcomps
sub
sbb
xchg
dec
jb
lea
sti
faddp
inc
sbb
jle
fnstenv
pop
and
push
subb
insl
xchg
movsb
ja
pusha
loop
sbb
push
test
popa
cmp
mov
push
xor
aaa
mov
in
outsl
outsl
cltd
lock
sbb
out
add
out
fstpt
out
jp
mulb
sub
subl
loop
xchg
and
cmp
cmp
jns
or
sbb
andl
sub
sahf
cs
aam
aam
enter
imul
popa
fiaddl
in
testb
insb
ret
cmp
cmp
jae
and
lods
push
xchg
mov
arpl
in
cld
lods
mov
jne
addr16
mov
in
popf
ja
test
add
mov
testl
lds
lret
adc
mov
cpuid
add
xstore-rng
cmpsl
pop
adc
loope
insl
and
xchg
sub
int
or
repnz
or
add
mov
fists
jns
jg
mov
jl
lock
andb
mov
repz
push
inc
or
insl
sub
push
inc
jl
jmp
mov
into
inc
or
out
fcompl
fcmove
pop
mov
cmp
in
sub
cmc
daa
xor
mov
cld
mov
iret
int3
lcall
xlat
scas
adc
insl
xchg
out
clc
hlt
out
sub
cmc
push
mov
sub
sarb
push
es
loopne
into
mov
xchg
mov
jmp
pop
dec
shl
loope
lret
xor
jle
add
inc
push
pushf
mov
mov
call
inc
ficoms
pop
into
mov
sub
mov
aad
jno
jmp
vmovupd
fsubs
movsb
push
or
js
mov
jne
sbb
aaa
or
mov
mov
stc
js
popa
sbb
fscale
push
imul
dec
aas
xor
scas
xor
mov
jle
xor
lret
dec
fiadds
xchg
loop
sbbl
pusha
xchg
mov
push
cmp
and
jle
clc
out
in
jne,pn
inc
inc
mov
fstps
jg
inc
pop
in
push
out
scas
jnp
in
push
xchg
mov
enter
push
ror
test
repnz
push
lret
xchg
mov
add
cmovs
adc
dec
xchg
leave
jle
fcoms
mov
subl
and
outsl
popf
test
push
cmp
call
mov
mov
jae
pusha
test
inc
jecxz
scas
jecxz
mov
dec
cmp
cmp
cwtl
test
mov
cwtl
mov
push
xchg
into
dec
test
inc
popw
and
pop
stc
cmp
xor
inc
sbb
fld
sub
into
cmpsb
rolb
or
outsb
mov
pop
mov
dec
dec
adc
int
push
xchg
xor
jle
dec
scas
insl
cmp
negl
insl
fcoml
mov
insl
pop
fisubl
inc
movsb
inc
adc
fwait
fs
dec
mov
push
loopne
hlt
mov
adc
out
mov
push
loope
sub
push
push
loope
adc
xor
cmc
test
pop
sub
mov
fildl
xor
cmp
dec
pop
leave
inc
fwait
jle
mov
xlat
dec
adc
inc
fbstp
dec
cmp
movsl
dec
xchg
arpl
mov
les
mov
ret
pop
cmc
movsl
mov
ret
out
je
xor
add
cmp
push
cmp
insb
cmpl
pop
clc
adc
addr16
cmp
ss
mov
xchg
neg
inc
and
movl
fstpt
dec
sahf
in
subl
add
jne
mov
jp
cmp
mov
mov
or
adc
pop
icebp
jmp
or
pusha
ret
sub
shlb
js
clc
cmp
adc
adc
fstpl
in
rclb
or
pop
cmp
lods
inc
cmpsb
lret
dec
and
jl
test
jno
sbb
jno
mov
lods
outsl
setle
pop
sbb
mov
sbb
push
imul
add
fdivp
movsb
sub
vcomisd
pushf
jg
out
lret
js
sub
mov
pop
jmp
int3
shrb
and
inc
cmp
mov
test
in
jle
and
inc
push
jno
mov
ja
rcrb
xchg
pop
sub
shl
jbe
and
mov
mov
or
push
sub
aad
mov
adc
sub
sbb
outsb
adc
mov
push
adc
fsubr
adc
cmp
es
aam
xchg
jno
into
lahf
inc
pop
gs
mov
imul
lcall
or
inc
dec
testb
jmp
dec
nop
jl
inc
adc
popa
xchg
push
adc
call
insl
fisubs
pop
mov
xor
lahf
adc
mov
repnz
mov
stos
pop
cltd
aad
cmp
loop
jbe
lds
nop
add
dec
mov
push
push
fwait
xchg
cmc
aaa
fs
subl
fwait
xchg
cmp
push
ja
test
mov
imul
fidivrl
add
dec
loop
mov
rcrb
lret
scas
insb
jae
clc
pop
into
lods
mov
aaa
mov
dec
cs
mov
mov
add
ss
sahf
pop
and
fstpl
bound
xorb
scas
lods
fs
xor
int3
and
dec
ret
inc
jecxz
popa
jnp
add
mov
clc
sar
sbb
cmp
lcall
xchg
cmpsl
ret
clc
jne
dec
iret
cwtl
cmp
outsb
push
sbb
movd
sarb
xor
adc
out
pop
mov
and
movsb
rol
mov
sbb
lock
imul
ss
outsb
push
sbb
adc
jbe
imul
xor
dec
xor
inc
mov
loope
fcmovu
xchg
test
lcall
adc
jecxz
flds
xchg
xor
cmpsl
int3
lods
inc
inc
dec
xchg
inc
popf
dec
sahf
inc
or
and
sahf
lahf
cwtl
add
es
jae
mov
cmp
jbe
mov
jg
dec
mov
nop
push
mov
inc
dec
ficoms
mov
in
push
shlb
sub
fiadds
jne
mov
xchg
mov
push
mov
adc
shlb
add
imul
imul
mov
pop
dec
pushf
mov
mov
xor
mov
aam
out
ja
sbb
cmp
xor
aam
jmp
add
icebp
imul
push
orb
xor
lcall
addr16
lcall
xchg
test
stos
movsl
or
gs
dec
pop
repz
in
scas
mov
js
xor
push
ja
jmp
scas
mov
pop
daa
bound
jge
pop
clc
xchg
imul
mov
je
hlt
getsec
xchg
jmp
arpl
xchg
mov
push
rorl
loope
jo
mov
test
cmp
add
xchg
cmp
push
stc
adc
insb
cmp
lea
push
lock
push
aaa
sbb
pop
call
xor
and
mov
xchg
stos
push
mov
in
mov
pop
mov
pop
lock
and
push
fwait
or
ficompl
push
add
testb
lret
cmp
test
mov
inc
xor
out
std
sbb
jecxz
cltd
add
or
gs
dec
or
adc
je
rorb
pop
arpl
faddl
xor
jne
fidivl
push
daa
inc
push
and
lret
sub
sbb
mov
stos
out
and
in
adc
mul
aaa
xchg
xor
xor
fs
mov
xchg
adc
mov
adc
cmp
and
jb
push
punpckldq
jo
lcall
sbbl
xor
pop
pop
in
cmpsl
in
ret
and
stc
lcall
aam
push
xor
adc
mov
fsubr
jbe
test
xchg
loopne
xchg
repz
mov
arpl
out
mul
sti
and
mov
add
mov
fisubrs
shrb
in
mov
cmp
mov
pop
hlt
test
add
sti
dec
push
call
rorb
es
or
bound
mov
sbb
xlat
push
pop
fldl
rcrl
pop
adc
rcr
cmp
inc
dec
adc
push
jge
and
fsubl
pop
fsubs
aas
loopne
sahf
inc
mov
and
shll
xchg
add
dec
movsb
outsl
xchg
cmpsl
add
lods
push
pop
dec
jae
cmp
shl
cmpsl
mov
mov
gs
pop
xorl
mov
dec
stos
enter
add
lds
into
jbe
je
aas
push
popf
iret
pop
mov
pusha
imulb
dec
pusha
jge
xor
xchg
aam
repnz
leave
enter
out
les
icebp
aam
into
mov
jp
les
mov
jle
sbb
sbbb
mov
adc
jbe
rorb
test
dec
cld
xchg
fildl
das
mov
test
sbb
mov
fildl
inc
xor
xor
ja
push
clc
in
movsl
pushl
or
rcrl
dec
sarb
stos
pop
loope
in
mov
pop
outsl
jmp
mov
stc
aam
bound
loope
and
push
xor
icebp
jl
mov
push
adc
ds
sub
scas
sbb
push
inc
out
jg
leave
push
inc
aam
sub
sbb
rcrb
or
push
mov
mov
jl
cmp
rcll
enter
mov
pop
mov
fadd
adc
sub
mov
pop
outsb
xor
xchg
jns
pop
imul
fisttpl
mov
pop
or
fs
push
in
adc
nop
dec
dec
add
push
test
sub
stos
test
add
sub
mov
loope
and
js
dec
movsb
sbb
dec
fistps
call
push
and
mov
inc
inc
test
leave
ret
notb
fwait
les
and
jno
je
cmpsl
fnstenv
sub
mov
xchg
xchg
mov
arpl
sub
jecxz
shll
into
js
pushf
push
cltd
pusha
jmp
dec
scas
xlat
inc
and
pop
sub
xchg
pusha
fwait
push
xor
sahf
xchg
es
hlt
ja
lret
fnstcw
jmp
stc
rcr
adc
loope,pt
aas
and
lcall
popf
insb
int3
fsubs
xorl
mov
mov
jge
clc
adc
inc
lock
mov
clc
dec
push
push
and
int
push
sarl
pmaddwd
in
jno
jbe
pop
add
repnz
pop
push
xor
movsb
in
cmp
add
xor
in
or
dec
out
neg
aad
jno
sbb
pop
pop
cmp
and
mov
lds
or
addr16
cmp
nop
sub
inc
jmp
dec
push
jp
repz
cmc
xor
jg
pop
mov
orl
jb
jb
add
enter
mov
mov
incb
pop
and
and
xor
mov
jp
lret
push
test
test
lods
cmp
xchg
xor
ret
push
adc
xchg
xorl
pop
je
add
mov
int3
mov
push
lret
ljmp
or
pop
jl
sarl
xlat
push
adc
adc
call
dec
rcl
sbb
lret
cld
adc
pop
cs
xor
mov
xchg
and
loope
leave
push
aaa
sub
mov
mov
cmpsb
inc
js
push
push
pop
fdivl
or
and
pusha
je
jle
ljmp
jecxz
xor
jp
cmpsb
hlt
test
add
sti
movsl
rcrl
jmp
movsl
adc
sub
lds
out
in
fwait
cmp
rcr
push
mov
sar
sbb
scas
jmp
lret
pavgb
pop
js
push
push
sbb
mov
test
mov
sbb
stos
push
mov
or
jl
ljmp
arpl
push
popf
aas
ret
clc
lcall
inc
cmp
int3
and
and
jp
enter
imul
setno
movsl
push
xor
loope
int3
in
outsl
add
jbe
mov
and
aad
es
xchg
cli
cmp
mov
call
popf
pop
sbb
dec
fcmovbe
adc
addr16
mov
push
push
and
xchg
aam
cld
movsl
mov
jle
data16
pop
add
mov
inc
sarl
ja
movsb
inc
sbb
xchg
sarb
xorl
and
fistl
xchg
push
rclb
stos
cld
jle
and
and
push
loope
adc
pushf
xchg
adc
push
and
es
xor
xor
add
push
popf
and
fs
mov
das
sbb
stc
in
xor
outsb
into
mov
adc
lret
pop
stos
mov
and
lahf
sbb
sti
insl
lret
imul
lods
jg
mov
push
lret
movsl
push
out
or
shlb
dec
mov
lea
sub
add
clc
jge
shrl
fs
fldenv
dec
xchg
inc
clc
lcall
loopne
xor
dec
rcll
loope
testb
and
or
push
mov
rclb
stc
loop
cmc
movsb
popa
add
cmpsb
cmp
clc
insl
js
or
pop
fdivrl
inc
movsl
pop
mov
and
push
in
decl
add
push
aaa
js
mov
jmp
out
jns
test
aaa
xchg
outsb
gs
ret
rcr
push
adcb
jo
pusha
mov
scas
sub
outsb
in
test
adc
in
fcompl
icebp
rol
insb
repnz
cmpsb
sub
iret
jne
xchg
loop
rorb
push
dec
insb
jae
cs
test
aas
cmpsb
adc
mov
mov
jne
pop
dec
mov
or
sbb
sbb
xor
test
test
dec
and
and
jmp
push
mov
mov
scas
insl
dec
lret
pop
lret
push
les
gs
lea
call
dec
cs
or
lock
mov
push
mov
push
sti
push
mov
outsb
in
js
rclb
push
and
mov
dec
pop
pcmpeqw
ljmp
lret
adc
fisubrl
xor
popf
pop
fwait
add
dec
xlat
mov
loop
adc
xor
add
sub
loop
xchg
push
test
repnz
mov
mov
mov
adc
lds
cmp
xorb
lds
adc
sub
cmp
imul
fidivrl
stos
sbb
inc
aam
cli
and
sub
daa
sub
cmpb
movsb
enter
push
pop
mov
inc
jg
ret
test
push
aaa
outsl
mov
push
and
out
ret
fwait
orl
ljmp
popf
loope
imul
adc
movsl
fbld
fldcw
xchg
sahf
add
cmpsl
js
dec
add
pop
jg
adc
push
sub
xor
out
xchg
jae
test
pop
add
or
inc
adc
dec
cld
cmc
mov
or
arpl
iret
popa
cmp
jnp
push
push
dec
pop
adc
jp
mov
xchg
push
hlt
or
pop
stos
scas
dec
xchg
xor
adc
mov
sub
pushf
and
dec
push
loope
imul
mov
mov
icebp
xchg
sbb
or
insl
dec
out
and
jb
pusha
int
push
fwait
sub
inc
jo
mov
or
sbb
adc
dec
lds
test
and
movsb
les
pop
jle
adc
test
data16
sbb
scas
lret
in
negb
sbb
popf
pop
jp
es
xor
cmovae
sbb
add
cli
lds
or
mov
mov
mov
jno
inc
xchg
push
loopne
mov
push
pusha
cmp
add
sub
mov
adc
mov
inc
push
xchg
cltd
cmp
push
sbb
cmp
pop
jecxz
lahf
or
push
sub
add
adc
aad
inc
push
in
push
jb
push
mov
adc
fsubr
jae
pop
stc
ss
xor
fcompl
pop
rcrl
and
dec
dec
xor
add
xorl
rorb
dec
ljmp
outsl
mov
and
iret
mov
pushf
push
inc
ja
jnp
cmp
jb
pop
test
sbb
dec
jle
fs
dec
fsub
popf
popa
pcmpgtd
lods
ds
subl
fldcw
cli
fnstsw
cld
xchg
cmpsb
std
sbb
sub
cs
aas
jns
xchg
mov
and
fisubl
inc
mov
cltd
push
repnz
jo
add
call
cmp
outsb
or
jne
inc
push
mov
scas
mov
addr16
stos
ret
cmp
test
jb
cltd
xor
jae
mov
les
scas
mov
imul
ret
mov
lcall
jmp
xchg
mov
cmp
pop
inc
lret
push
xor
push
loope
sti
push
cmpsb
inc
out
stc
orl
sbb
cmp
nop
add
fadd
movsb
pop
dec
dec
push
jno
jb
or
out
pop
imul
popf
and
cmpsl
in
pop
jmp
mov
idivb
inc
fidivl
leave
jns
lock
cwtl
mov
loopne
jge
icebp
fbld
lock
outsb
jne
xor
jno
inc
cmp
push
xchg
add
xchg
mov
ficoms
mov
scas
cmp
add
loopne
jmp
lret
rorb
dec
adc
aas
push
in
dec
mov
out
mov
es
cmc
push
fists
mov
add
jmp
inc
nop
call
lea
pop
out
push
cs
mov
repnz
loop
dec
jle
roll
aas
lods
and
pop
adc
jg
cmp
jae
popf
cwtl
jns
nop
sahf
in
cmp
iret
bound
bound
dec
fucomp
movsb
das
inc
pop
mov
pop
dec
in
es
mov
sub
xchg
outsl
add
in
cmc
notb
lods
push
ficomps
dec
pop
ds
jb
scas
das
adc
fildl
fldenv
push
dec
xor
idiv
xor
ljmp
movsb
sbb
cli
cltd
jge
dec
add
sahf
mov
and
inc
clc
into
mov
dec
mov
push
add
mov
lods
xor
pop
in
inc
movl
xor
mov
adc
pop
js
bound
js
xchg
pop
cli
push
mov
sbb
mov
or
adc
push
loop
shll
leave
mov
lock
movsl
push
xchg
fisubrl
or
jae
je
nop
std
sbb
jne
lar
movsb
xchg
scas
xor
pop
pop
jns
lret
sub
shrb
daa
mov
frstor
iret
xchg
dec
stos
jae
cmp
lds
adc
xor
in
jo
push
xor
ds
scas
ficompl
iret
insb
mov
sbb
fistpll
push
xor
xlat
push
int
ds
xchg
jb
inc
cmp
enter
sub
lds
mov
xchg
xchg
les
jae,pt
mov
push
jle
push
gs
dec
movsb
push
pop
pop
push
push
mov
imul
pushf
inc
pusha
mov
sbb
jge
outsl
adc
lds
rcrl
jg
loop
cltd
fwait
sub
jge
pop
jle
icebp
jnp
pop
mov
push
test
mov
lods
mov
andl
loop
xchg
inc
inc
xchg
sti
jne
sarb
xor
add
fmull
fs
aam
xchg
mov
jno
xor
adc
cvttps2pi
jecxz
insl
mov
in
mov
loopne
andb
aaa
jmp
cs
xor
mov
popa
adc
pop
scas
dec
imul
jae
jle
mov
iret
xor
loope
test
imul
sub
fwait
ja
mov
dec
ret
lds
add
and
inc
ds
mov
or
stc
nop
fs
ficoml
push
xchg
mov
sbb
xchg
add
aam
out
mov
cmp
insb
arpl
adcl
or
out
rep
inc
ljmp
add
lret
test
xchg
lahf
sub
and
adcb
jnp
into
inc
divl
repz
dec
fmull
mov
aam
pop
outsb
shrl
jmp
add
and
in
fisubs
cmpsl
cli
dec
stc
fildl
pop
pop
push
add
stos
ffree
repz
pop
out
mov
fstpt
mov
lahf
xor
sub
aas
sbb
xchg
cmp
cmp
mov
arpl
aad
ds
imul
sub
movb
and
mov
fstpt
scas
pop
adc
rolb
cmpsb
jnp
sub
mov
sbb
cld
push
daa
cmpsb
adc
ret
repnz
mov
iret
ret
jp
aam
lcall
jg
or
or
hlt
insl
sti
loop
sti
imul
fstpl
adc
stos
repz
jne
aas
and
repnz
inc
ds
js
sub
out
enter
call
call
add
mov
loop
test
mov
sub
mov
mov
rcr
test
add
jge
lock
mov
pop
stos
out
in
mov
adc
push
in
xchg
or
adc
mov
mov
shll
je
into
mov
jg
cmp
fwait
imul
or
inc
xchg
stos
xchg
pop
jo
inc
push
or
cmp
rcrb
and
mov
cs
mov
sub
adc
pop
xchg
fisttpll
hlt
test
pusha
js
stc
sbb
adcb
sub
adc
mov
shlb
sub
pop
sbb
mov
movsl
jo
sbb
mov
mov
sub
dec
jle
push
lret
pop
xchg
mov
xchg
andb
stos
mov
lcall
pop
jo
adc
movsb
jp
nop
hlt
ljmp
xor
adc
gs
lret
jns
xlat
cmp
lock
test
dec
push
and
xchg
dec
lods
rclb
cmp
hlt
sbb
xor
push
andb
and
sub
mov
ja
dec
jp
jo
lds
and
or
xchg
pop
int
dec
adc
pop
add
in
push
mov
jge
and
lock
int
iret
sbb
sbb
mov
gs
or
mov
sub
cmp
cwtl
lds
notb
mov
mov
aam
adc
cmp
int3
lcall
jae
test
in
sub
popf
or
in
aas
mov
jae
sbb
xor
sbb
lret
xorl
adc
push
xchg
sub
xchg
lods
int
sub
inc
fisubs
sbb
cmp
cltd
aam
adc
inc
mov
mov
push
xchg
adc
push
outsb
and
int
jmp
mov
fstpt
mov
icebp
andl
movb
add
mov
fwait
pop
lods
ss
push
dec
pop
inc
cltd
inc
inc
test
pop
and
xchg
push
inc
sbb
mov
inc
pop
pop
test
out
sub
xchg
loope
aad
or
pop
cli
add
xchg
pushf
addb
dec
adc
xlat
add
js
lods
pop
adc
sbb
sub
mov
xchg
mov
sahf
cmp
cltd
daa
subb
negl
ret
in
jle
nop
fstpt
xchg
ss
in
fstps
inc
xchg
dec
or
addr16
mov
popf
es
mov
jne
lds
cwtl
xchg
inc
sub
std
bound
push
add
es
mov
lods
mov
mov
movsl
sbb
lret
and
mov
lcall
scas
dec
xor
fnstenv
cmp
jmp
push
mov
push
and
dec
movsb
adc
mov
jnp
mov
ret
push
sub
ljmp
rorl
popf
xchg
pop
in
adc
or
mov
mov
shll
cld
out
mov
pop
cmp
lock
jns
into
cmp
int
jecxz
inc
ret
loope
movsb
or
jecxz
xchg
lock
push
jne
or
icebp
or
mov
daa
sbb
out
xor
cmpl
adc
xchg
out
das
push
insl
lds
xchg
jmp
aas
orl
sbb
pop
jle
pop
mov
push
leave
inc
push
pop
or
in
insb
cwtl
sti
push
or
leave
inc
jnp
fs
inc
mov
repnz
fbstp
pop
movsb
sbb
add
and
mov
enter
int3
addl
call
repnz
mov
and
pop
push
in
fimull
inc
ja
sbb
inc
lods
popf
daa
movsb
or
sbb
test
inc
xchg
push
lock
enter
and
adc
popa
push
adc
jmp
jecxz
leave
lcall
inc
js
lret
scas
fmul
loopne
shl
movl
call
insb
add
jo
xor
adc
cmpsl
inc
cld
push
jmp
clc
add
rorb
daa
push
jl
mov
fsubrs
f2xm1
sbb
idivl
xlat
inc
mov
cmc
push
mov
push
push
aaa
scas
movsb
dec
push
sbb
push
popf
adc
push
cmpsl
and
sub
jmp
add
jecxz
pop
push
or
out
ret
mov
fnsave
pop
subb
or
leave
fimuls
lods
mov
lods
inc
mov
push
imul
xor
or
and
sub
sbb
sub
int3
idivl
mov
mov
bound
and
cmp
in
xor
lds
test
or
shrl
loope
nop
cmp
loopne
xchg
xorl
xchg
lock
mov
imul
test
movsb
mov
lock
cli
xchg
xchg
nop
mov
dec
lret
cmpsl
mov
aas
gs
jae
lcall
idiv
mov
into
inc
in
and
add
xchg
jle
push
jg
addb
mov
outsl
jno
pop
fmull
sub
mov
daa
mov
lahf
pop
sub
pop
cmp
jbe
das
lods
adcl
dec
call
add
iret
daa
pop
out
push
push
pop
jns
pop
and
pop
mov
pop
cmp
loop
mov
add
addr16
stos
xchg
stos
imul
sub
push
jmp
fs
cmp
dec
add
mov
sub
dec
xchg
jb
arpl
pushl
enter
aam
or
mov
push
movsl
pushl
cbtw
ljmp
add
dec
mov
cwtl
clc
ja
movsb
add
mov
and
xor
xchg
call
les
lret
outsl
rcrb
pop
add
push
xchg
pop
mov
sub
inc
mov
pop
ret
mov
outsl
out
iret
fldl
sub
fldl
mov
fidivrl
test
push
nop
jg
mov
or
add
pop
movb
nop
mov
loopne
hlt
cli
push
mull
insl
lahf
lret
jbe
xor
out
std
jecxz
loop,pn
pop
lahf
jp
and
movsb
inc
mov
test
sub
mov
pop
rolb
out
insl
push
enter
mov
test
jmp
mov
lcall
test
dec
cmp
cltd
dec
pop
in
shlb
movsb
dec
cmpsb
pop
loope
xor
or
loopne
sub
push
mov
jo
rol
sub
dec
xchg
adc
xchg
lret
cmc
or
xor
or
sbb
jge
add
push
test
jb
int3
ja
sub
xchg
or
adcb
xchg
jae
mov
jge
stos
scas
xor
bound
xchg
pop
pop
test
pop
pop
call
stos
jmp
rcl
gs
xchg
adc
adc
sub
fbld
mov
cmp
sub
jbe
or
mov
mov
mov
adc
mov
out
repnz
push
cld
test
jbe
sbb
mov
out
mov
outsb
enter
xchg
pop
mov
inc
js
cmp
in
push
jnp
jg
push
mov
adc
not
cmp
gs
inc
in
cmpsb
cmpsl
cld
arpl
in
or
cmpsl
ljmp
mov
repz
icebp
push
jbe
mov
addr16
fstl
pushf
sti
jle
pusha
lds
lcall
movsl
shrw
adc
test
ficoms
sbb
dec
cmp
sub
ret
dec
pusha
mov
mov
mov
mov
lahf
cli
jo
sbb
xchg
in
cwtl
outsl
sbbb
jae,pn
pop
dec
cmp
rcll
inc
daa
adc
inc
daa
lods
rcr
test
lcall
xchg
xchg
and
mov
sarb
js
out
mov
enter
loop
into
cmpsl
pop
xlat
adc
sub
add
pop
xchg
lock
je
fmuls
enter
aaa
sub
cwtl
jl
les
repz
lock
jb
aad
push
mov
push
pop
cvttps2pi
pop
daa
sbb
in
hlt
mov
cmc
in
out
fldl
mov
fdivr
stos
jne
lds
rcll
inc
mov
push
sub
jae
out
fwait
mull
cmpsb
enter
jbe
mov
aas
aad
cmp
push
lret
inc
ljmp
aas
std
test
cli
sub
cmp
push
iret
lods
out
fs
xchg
pop
sar
mov
iret
cld
cwtl
sbb
xchg
stc
mov
insb
and
push
icebp
test
cwtl
subb
dec
leave
pop
inc
out
ljmp
inc
push
rcrl
pop
and
in
aaa
cli
push
and
adc
outsl
outsb
arpl
mov
dec
xchg
mul
out
in
test
imul
dec
out
or
ret
rcrl
sbb
pop
adc
sub
sbb
mov
lcall
mov
add
cld
xor
jnp
std
add
sub
jge
xchg
bound
jg
push
les
ds
fistl
imul
imul
ljmp
popa
sub
lahf
shl
or
and
and
push
push
push
test
cmp
outsl
jl
push
jnp
es
outsb
clc
xor
push
add
inc
pop
cmp
inc
testb
and
out
xor
cmpsb
stos
cmp
arpl
sub
cmp
and
jge
mov
ret
sbb
push
cli
jo
dec
sub
pushf
mov
loop
or
and
setl
bound
add
jmp
cmp
stc
call
ja
daa
pop
jnp
mov
call
mov
outsl
mov
mov
lcall
dec
sub
aad
subl
fiaddl
xor
fidivs
xchg
pop
adc
dec
rcr
push
xor
in
fisubl
mov
xchg
ret
call
fisubs
push
dec
mov
into
testb
mov
jge
popf
pop
fildl
out
daa
mov
std
xor
loopne
lds
out
neg
push
aad
and
or
cmp
aad
fs
jns
ficoms
jp
mov
push
pop
add
mov
sub
out
bound
cmp
popa
mov
ret
dec
lods
mov
cmp
push
sar
jnp
push
dec
std
adc
out
lods
jo
pop
mov
js
test
lret
scas
and
into
sbb
outsb
or
out
mov
mov
sti
pop
lret
loop
out
push
pop
jmp
mov
adc
incl
inc
popf
mov
push
mov
popl
xor
sbb
lock
cmp
jp,pt
pop
int3
jno
adc
data16
xor
pop
es
inc
lcall
movsb
jo
jge
push
or
sbb
leave
or
cld
out
mov
adc
inc
js
cld
dec
mov
and
add
dec
push
or
pushw
xor
lds
shr
sub
mov
xchg
mov
jmp
iret
xchg
xor
in
in
iret
xor
xchg
xchg
fdivp
mov
mov
lahf
cmp
or
out
xor
fstps
out
push
mov
fldcw
hlt
repnz
loope
insb
fwait
repnz
adc
jnp
mov
js
cltd
add
xor
or
roll
jge
out
sbb
stos
addr16
insl
xor
fnstcw
movsb
jmp
or
lods
mov
ss
mov
sub
cmp
shlb
into
lcall
mov
and
scas
repnz
nop
test
daa
imul
sbb
xor
sub
mov
jmp
std
sbb
xchg
cmp
or
iret
out
ret
dec
mov
fsubrl
out
jo
stos
mov
mov
mov
mov
lret
sahf
lahf
push
test
scas
dec
mov
cwtl
lret
dec
dec
jmp
adc
repz
jp
mov
cmp
sbb
push
fbld
push
push
jecxz
pop
adc
mov
jb
mov
fmuls
add
cmc
das
sub
std
dec
pop
inc
add
adc
mov
mov
jmp
add
int
or
mov
addr16
data16
pusha
ror
leave
inc
lahf
mov
test
sar
popf
push
pop
popf
or
mov
pop
mov
pop
stos
sub
fstl
fmuls
pop
mov
mov
call
mov
imul
testb
dec
ss
cmpsl
fistl
ja
out
jae
push
mov
mov
sub
mov
call
arpl
pop
adc
jmp
xor
je
sbb
adc
mov
inc
push
cmp
adc
aas
push
add
cmp
shlb
add
fbstp
xchg
loop
lea
sub
ret
cmp
or
imull
clc
jp
add
imul
pusha
mov
ljmp
lahf
mov
inc
stc
inc
ret
adc
adc
push
fdivs
sbb
fnstsw
cmp
xchg
stos
mov
adc
jne
ss
cwtl
jg
xchg
and
and
data16
mov
js
mov
cld
or
jmp
ds
sub
lods
into
loopne
sbb
movsl
mov
loope
sbb
jmp
mov
arpl
inc
dec
inc
and
int
lock
add
stc
pop
sahf
aaa
push
sbb
lret
mov
ljmp
sub
lock
loop
and
cmp
aam
aas
xor
pop
sbbl
ret
push
movsl
xchg
adc
test
pop
mov
cld
dec
loop
repnz
nop
cmp
sar
pop
mov
jbe
xchg
pushf
mov
fisubrs
pop
pop
mov
push
ja
push
mov
lods
into
dec
and
rcrl
jae
xor
push
dec
inc
mov
punpckhdq
out
sti
mov
ret
cmp
cmp
pop
fisubs
test
add
cmp
adc
gs
scas
lods
shll
test
or
stos
fsubl
mov
mov
aas
add
cmp
cmp
push
xchg
dec
sbb
lcall
adc
dec
imul
mov
in
nop
leave
pop
inc
lods
repz
repnz
mov
jle
mov
mov
mov
fs
cmc
push
adc
push
pop
pop
sbb
jo
dec
stos
sahf
jge
inc
xor
js
xchg
ret
je
push
int3
cld
or
push
fst
mov
xchg
lahf
push
shlb
cltd
sahf
jns
jb
lods
in
cmp
lock
cmp
mov
fdivr
lds
mov
xor
rcrb
ja
rcrl
stc
movl
or
sbb
icebp
imul
push
aas
loop
gs
stos
pop
push
pop
orl
inc
mov
cmp
fucomi
fnstsw
loop
ja
pop
not
in
add
mov
and
mov
mov
inc
imul
stc
out
inc
xlat
jb
ret
xchg
in
push
inc
fst
out
repnz
rcll
or
add
xchg
fldl
pop
push
cmpsb
jnp
push
insb
or
jl
repnz
ljmp
cmp
gs
adc
mov
mov
mov
xchg
jne
push
xor
outsl
mov
stos
in
push
loopne
xchg
sarl
adc
es
mov
push
jns
hlt
fstp
push
fcmovu
push
xchg
div
sbb
icebp
jns
jmp
popf
sub
add
cmp
adc
pop
xlat
das
xlat
ret
inc
pop
push
add
out
cmp
cmc
dec
or
xchg
out
xchg
mov
mov
scas
ds
in
shrl
adcb
dec
lock
idivl
sbb
cmpsb
jp
dec
push
xchg
dec
pop
mov
xlat
mov
lds
iret
or
inc
pushf
daa
xstore-rng
mov
std
mov
xor
outsl
pusha
sbb
mov
mov
das
push
daa
loop
neg
sbb
pop
push
mov
insb
mov
loop
sbb
xchg
das
sbb
dec
aaa
xor
decl
sbb
stc
rcll
das
mov
push
adc
dec
js
sbb
jae
adc
loopne
test
dec
das
sub
mov
or
lahf
movsl
adc
adc
sahf
mov
ja
lahf
mov
push
cld
shll
imul
fnstsw
aas
lcall
mov
sahf
pop
sbb
sbb
sub
push
push
adc
out
xlat
pop
cmova
in
push
outsl
stos
jg
fistps
xchg
je
scas
je
cmp
stos
movsb
push
stc
inc
and
xchg
in
xor
or
popf
push
aas
pusha
jecxz
popa
pushf
mov
dec
inc
or
xlat
cmpsl
imul
inc
sbb
push
int3
mov
ret
add
insb
add
jne
es
enter
add
xchg
mov
or
fdivp
mov
pop
add
sub
and
dec
mov
pop
mov
inc
mov
xchg
dec
int3
sbb
xchg
out
jg
xor
fistpl
nop
aad
subl
xchg
shlb
fsub
out
shrl
mov
decb
test
xor
xchg
jg
jecxz
enter
mov
dec
xchg
leave
pop
ja
xchg
in
mov
xchg
mov
mov
popf
aas
jl
aad
xchg
addb
adc
xchg
dec
sbb
int3
push
pop
xchg
or
xchg
inc
stc
jb
fwait
inc
and
hlt
test
mov
fldl
lret
adc
comiss
inc
scas
mov
mov
or
pop
jbe
sbb
int
adc
jb
sbb
mov
test
sub
xor
inc
adc
arpl
sti
mov
fcoms
push
push
mov
inc
divb
dec
xchg
insb
inc
pop
das
js
jg
jl
or
orb
push
cmp
mov
xlat
pusha
test
pop
inc
push
jbe
add
daa
fnstenv
inc
push
pop
mov
xor
jo
xor
cs
add
arpl
mov
push
and
test
pop
mov
fiadds
pop
in
insb
aam
ret
iret
jle
adcb
adc
mov
cwtl
cmp
iret
xor
jnp
pop
jle
jg
add
ljmp
std
xor
and
inc
push
popa
cmpsb
mov
pushf
cs
lds
xchg
sahf
sub
add
push
cs
bound
xchg
dec
arpl
jmp
or
and
dec
and
test
cmpsl
repnz
jg
mov
pop
add
icebp
and
test
ljmp
mov
xchg
aam
push
adc
cli
push
jnp
pop
and
scas
imul
push
das
ds
pushf
inc
out
mov
and
repnz
or
sub
xchg
mov
and
out
outsb
cmp
fdiv
scas
aam
rcr
ja
jb
mov
fistps
pop
fwait
xor
sub
ret
push
icebp
mov
aas
pop
mov
mov
mov
fcoms
outsl
xorb
dec
cmp
push
lcall
push
and
sub
inc
ret
imul
mov
jp
cmp
cmp
insb
mov
lods
loopne
mov
dec
pop
inc
out
mov
addr16
pop
out
push
outsl
movl
dec
in
lds
cwtl
xchg
jbe
fwait
insl
lock
ret
and
aam
aam
cld
ljmp
jg
sub
es
leave
sbb
jp
mov
mov
mov
scas
daa
sbb
sub
mov
jns
mov
pop
push
lahf
cmp
push
mov
outsb
add
xchg
jmp
sbb
cmpsb
ljmp
mov
adc
std
gs
dec
mov
sub
fistl
jne
iret
inc
pop
loop
fwait
cli
stc
push
and
lea
imul
dec
jp
mov
mov
cmp
cld
out
mov
mov
pushf
jb
frstor
out
int
sbb
jl
icebp
mov
push
int3
leave
data16
inc
arpl
jecxz
xchg
rclb
xchg
add
scas
pop
sub
xchg
jle
fmul
inc
scas
add
mov
pop
push
clc
xor
dec
std
jbe
cmp
loop
jl
std
mov
pop
daa
pop
pop
sbb
pop
rcrl
mov
push
pop
cmpsl
push
sbb
xchg
fcmove
jno
loopne
push
scas
mov
or
push
jge
dec
inc
je
mov
daa
and
andb
jnp
jmp
cmc
ret
jl
lods
cmpsl
mov
cmp
out
xchg
xor
mov
pop
je,pt
negl
mov
sbb
movsl
cmp
aad
dec
jmp
cmp
adc
jno
mov
and
lret
adc
jmp
addl
dec
outsl
js
or
and
pop
popa
mov
jne
fldt
lea
aas
cmp
int
xchg
jo
test
dec
adc
js
push
gs
fdivs
or
sti
push
jg
jae
push
rcrl
mov
icebp
xor
xchg
mov
mov
into
cmp
out
cli
arpl
or
lock
push
push
out
dec
adc
cmc
jle
xchg
pop
inc
xchg
fstpt
dec
or
call
cld
ret
popf
jg
in
pop
pop
inc
and
imull
adc
rcrb
notb
jp
adc
pop
mov
jecxz
mov
mov
shlb
ss
in
shrl
mov
test
rolb
xor
ret
xchg
cwtl
mov
mov
dec
ss
leave
adcb
xchg
mov
lock
cmpl
shll
and
sub
push
out
sbb
loopne
out
xor
out
dec
enter
xchg
movl
ret
aas
mov
sub
push
je
pop
pop
pop
mov
add
sbb
or
mov
int
jb
sbb
nop
movsb
clc
jb
js
movb
adc
jmp
dec
sub
dec
jl
xchg
inc
lar
mov
xchg
push
bound
mov
jmp
jp
fistps
stos
movsb
mov
xchg
xchg
mov
cmp
dec
fwait
hlt
mov
outsl
cmp
push
ja
jp
mov
dec
pushf
gs
iret
das
mov
sbb
push
jbe
stos
push
pop
pop
imul
std
mov
push
xchg
gs
mov
cltd
and
sbb
pop
sbb
daa
dec
test
push
xor
and
mov
push
or
bound
pusha
and
mov
or
jle
pop
mov
mov
adc
xchg
mov
fadd
lods
sbb
out
rorl
mov
nop
dec
ret
aam
xor
pop
adc
sbbl
outsl
mov
test
xor
mov
add
pop
leave
jbe
out
sbb
shrd
sub
cmp
xorb
pusha
mov
jp
aas
fldenv
xchg
pop
mov
dec
cmp
outsl
mov
mov
aad
pop
cwtl
enter
mov
cs
pop
jbe
aad
cwtl
jmp
mov
scas
cmp
js
loope
xchg
rcrb
fs
dec
roll
xchg
inc
jns
in
pop
lret
pop
orl
jno
or
pop
mov
outsl
insl
cmc
inc
ss
lea
into
push
cwtl
outsb
mov
push
jno
scas
aaa
shrl
rol
mov
xchg
out
push
or
aad
or
and
xor
test
sbbb
sbb
fcoml
clc
push
push
sbbl
lock
aas
cmp
and
cltd
test
mov
or
out
je
in
rorl
test
lods
inc
mov
cmpsb
adc
cltd
or
mov
or
jecxz
popf
mov
pop
ret
jns
outsb
js
xchg
out
int3
pusha
sarb
call
xor
mov
stc
sahf
inc
and
int3
inc
add
pop
pop
fwait
mov
mov
movsb
push
pop
xchg
int
xor
jl
faddl
adc
and
hlt
sbb
pop
dec
dec
mov
gs
push
imul
push
ja
dec
outsl
pop
sub
xor
mov
in
jp
cmpsl
mov
sbb
in
inc
mov
es
mov
movsb
fsubl
jp
rol
mov
push
testl
cmp
inc
sahf
jge
or
jp
pop
push
mov
mov
mov
fdivs
jns
push
sbb
mov
fs
bswap
add
movsl
mov
testb
cmp
clc
mov
mov
scas
js
push
adc
ja
xchg
sbb
xchg
mov
popa
cli
movsl
int3
jp
push
in
or
aaa
mov
pop
insb
mov
fnstsw
in
xlat
testl
cmp
inc
sub
pop
mov
mov
stos
test
sub
sbb
mov
js
rcll
jle
adc
inc
shrb
push
arpl
aaa
and
adc
xchg
fcompl
addr16
hlt
sbb
adc
cmp
push
gs
out
adc
stos
mov
adc
xor
ret
xlat
and
adcl
cmp
rcrl
push
imul
mov
repnz
adc
add
cld
mov
das
sbb
ror
push
mov
insb
dec
dec
cmc
sbb
rorb
fs
or
xchg
subl
mov
sub
stc
pop
or
push
push
subb
in
outsl
jp
outsl
inc
out
gs
jb
dec
stc
ja
jle
mov
jns
mov
sahf
mov
subl
and
add
lcall
bound
mov
fxtract
mov
fstpl
add
loopne
adc
int
repnz
fnsave
dec
pop
inc
popa
jge
lods
mov
aad
mov
jle
jnp
call
sbb
dec
test
adc
das
xor
cmp
sub
in
sti
insl
mov
jne
add
mov
pop
mov
lret
out
adc
add
punpcklbw
push
or
stos
inc
dec
add
dec
enter
outsb
sub
mov
out
dec
jns
out
mov
imul
out
or
cmp
sbb
push
vcvtpd2dqx
or
inc
movsb
sar
fbld
das
pusha
pop
xchg
hlt
add
test
outsb
cld
cmp
bound
adc
js
cmp
mov
jmp
out
pop
add
scas
push
jno
dec
aam
push
inc
xchg
pusha
lods
cmpsb
ja
loope
mov
xchg
rolb
mov
sub
rol
mov
js
push
popf
inc
xchg
test
push
aad
jle
decb
inc
jle
jb
inc
test
fcoms
imul
aas
out
jno
incl
xor
pop
fs
arpl
das
sti
inc
xchg
daa
adc
mov
pushf
adc
push
clc
adcl
ret
or
cld
loopne
adcb
pop
pop
aaa
inc
sbb
and
lret
scas
sbb
push
ss
pop
js
lods
cmp
pop
adc
and
jae
stos
xchg
mov
stos
mov
mov
loopne
ret
push
push
sub
jle
mov
adc
add
push
push
lcall
std
nop
in
lea
lahf
aaa
pop
xchg
rcrl
insl
test
push
xor
ss
pop
stos
mov
dec
xacquire
inc
frstor
incl
and
push
push
idivl
push
mov
mov
gs
lds
mov
dec
xchg
push
mov
jl
pop
cmpsl
jp
insb
imul
lea
xor
movsl
cld
and
rclb
addb
fdivl
mov
adc
add
jne
xor
cwtl
mov
popa
stc
imul
cs
cwtl
pop
lahf
xchg
jno
adc
adc
cmc
mov
or
sub
mov
adc
pop
movsl
dec
fadds
out
clc
adc
inc
or
inc
add
sbb
sbb
push
push
inc
or
fcompl
lods
mov
sub
jge
mov
mov
jg
addb
enter
lods
sbb
out
dec
daa
arpl
xchg
adc
adc
mov
lds
push
mov
sbb
movsl
cmp
xchg
and
xlat
add
stos
inc
cmp
movl
dec
mov
xchg
aad
inc
scas
ss
in
orb
repz
dec
lea
shll
inc
ror
mov
add
push
inc
jecxz
repnz
inc
push
xlat
fisttpll
data16
sub
dec
lcall
ret
mov
inc
movsb
cmp
addr16
sub
xor
jne
pop
ret
xor
mov
jl
xchg
int
mov
push
or
fistpll
add
lods
sub
pop
cmp
pusha
push
mov
mov
cmp
repz
jg
repz
add
inc
push
cmpsl
in
in
shlb
je
jns
in
cmp
push
mov
inc
lods
dec
mov
add
jp
sub
sub
jg
in
xor
jns
in
push
dec
aaa
mov
aam
sbb
and
jp
inc
mov
es
filds
test
mov
xor
in
and
sub
popa
ret
aam
gs
jge
aam
jmp
push
and
and
push
cmpsb
test
cli
inc
jae
xchg
push
ljmp
dec
repz
pushf
bound
fwait
ds
pop
sti
xchg
jb
filds
cmp
and
push
cld
cmpb
pop
or
mov
cmpsl
je
xchg
aam
sbb
mov
sbb
xorl
les
jno
int3
cltd
push
les
push
and
bnd
bound
mov
dec
repnz
xor
sti
mov
mov
orb
adc
adc
pop
gs
lods
xlat
shlb
fcomps
test
inc
popf
sahf
les
cmpsb
inc
mov
cmp
sarl
rcll
repz
adc
xor
xchg
lahf
fwait
mov
pushl
jns
into
sahf
sbb
pop
and
inc
jecxz
mov
pop
shll
sbb
mov
cmp
sti
xchg
aad
daa
stc
xchg
icebp
movsb
mov
jg
test
aam
sub
pop
sub
scas
fildl
mov
inc
jmp
and
dec
dec
shll
sub
push
mov
imul
inc
xrelease
dec
fistps
loopne
push
aaa
divb
add
mov
cmc
xchg
shlb
cmp
daa
ss
and
pop
and
inc
push
pop
or
pop
fidivl
jl
pop
icebp
inc
outsb
pop
push
mov
outsb
jne
jge
sahf
mov
in
lret
call
in
out
mov
out
push
dec
cmc
aaa
iret
push
cmp
xchg
mov
push
jnp
idiv
fistps
push
sarb
out
jne
fbstp
lods
popf
sbb
sub
outsl
push
and
outsb
out
xor
dec
ffree
and
lods
iret
xchg
mov
mov
aaa
jmp
mov
lods
fsubrl
stos
mov
icebp
lock
add
pop
push
fwait
jnp
clc
adc
mov
sbb
data16
loop
xor
mov
jno
je
jmp
cmpsb
enter
dec
div
outsb
clc
rorb
js
roll
gs
mov
ja
imul
out
sarl
fwait
adc
mov
imul
xor
outsl
dec
jle
mov
push
roll
inc
xor
nop
adcl
es
sbb
ficompl
dec
je
fidivl
pop
cmp
rorb
fstl
scas
jnp
mov
xchg
mov
add
stos
cli
push
inc
mov
dec
sti
sbb
sbb
ja
hlt
pusha
inc
bound
into
call
divb
gs
cltd
ret
jmp
mov
xor
aas
or
jmp
adc
and
iret
jle
adc
inc
or
xor
imul
insl
sub
es
mov
loope
inc
push
das
jg
mov
mov
sbb
negl
push
mov
jmp
push
cmp
outsl
mov
push
dec
leave
ffreep
inc
push
rcr
gs
or
push
xlat
out
paddd
pop
sti
inc
add
push
xor
lret
loop
mov
std
push
jo
sbb
loop
xlat
iret
int
push
push
stc
lahf
icebp
std
pop
rolb
scas
popf
xchg
in
lock
sbb
cmpsb
icebp
addb
cld
test
or
mov
loop
dec
scas
sbb
dec
pop
jns
or
mov
sbb
repnz
adcb
stos
xchg
jbe
clc
dec
dec
adc
adc
pop
pop
push
cmp
clc
sub
fld1
mov
sbb
inc
add
into
push
movsb
lock
imul
inc
fcmovnbe
adc
push
mov
int
xchg
loopne
out
mov
xchg
stos
in
inc
lods
and
jne
fsts
mov
lahf
cmp
pop
pop
add
inc
aad
js
out
dec
mov
rol
or
xor
daa
in
cltd
fisttpl
in
jno
in
sahf
cmc
mov
fnstsw
xchg
mov
cmp
repz
movsb
pop
cmp
sub
pop
sub
imul
sub
xchg
push
lds
inc
push
dec
jp
roll
adc
stc
add
lret
push
jo
pop
mov
shll
xlat
xchg
rol
push
out
gs
push
call
xor
add
das
popf
and
pushf
repnz
mov
int3
loop
mov
cmp
pminub
js
fidivs
cld
jg
ja
xchg
adc
lret
int
jno
sbb
jne
push
mov
push
cmc
lds
or
dec
mov
push
cli
sub
xchg
pop
call
imul
push
sbb
jl
inc
mov
sbb
cmp
fsubs
mov
push
or
or
sbb
enter
cmp
xor
arpl
mov
shlb
sub
clc
lahf
idivb
or
sub
jmp
sbb
sarb
add
add
fldt
decb
mov
or
sub
fucomi
sub
cmp
ret
adc
cmp
jno
fnsave
loope
scas
xchg
pushf
inc
clc
push
sub
rcll
iret
xor
lea
inc
scas
loop
sub
mov
aad
rclb
fs
pop
add
ljmp
pusha
lret
gs
popa
mov
mov
and
push
cmp
or
aad
shl
pop
pop
fisubrl
pop
lcall
daa
jno
cmpsb
sbb
test
sarl
xchg
inc
aas
pop
int
int
fisubrl
ja
mov
sti
movsb
int
push
data16
pusha
fisubrl
xchg
jno
aas
or
mov
out
ret
stos
lea
or
lret
shll
jmp
int
lcall
pop
mov
jecxz
rclb
mov
and
add
mov
loopne
clc
cmp
in
jl
pop
fildl
pop
or
xchg
nop
int3
mov
inc
aam
xchg
cmpb
add
stc
and
push
insb
sub
jmp
into
xor
sub
out
jg
sbb
fidivrs
mov
cs
popf
cmpsl
mov
pop
hlt
cmp
in
arpl
out
add
xchg
das
jbe
mov
daa
push
idivl
or
loopne
jno
loopne
lret
stc
xorb
mov
add
lods
sti
and
jns
rcrl
cmp
dec
xor
xor
sbb
ja
cmp
lods
pop
leave
rcrb
cmp
and
pusha
ljmp
xchg
out
lds
pop
jp
je
xor
lods
xor
lret
dec
aam
out
out
inc
das
aaa
add
rcrl
push
out
add
pop
mov
pop
and
addr16
mov
lret
setno
cmp
pop
push
popf
in
pop
imul
inc
aaa
ja
popa
mov
imul
and
fsubs
scas
stc
xchg
lret
nop
setbe
lods
inc
dec
lea
aaa
xchg
call
cltd
cmpsb
notb
sub
cmp
notb
or
mov
sub
xor
mov
jle
pop
lea
cld
loopne
test
inc
push
cwtl
cmp
in
jmp
inc
test
mov
movsl
lods
sti
mov
pop
xchg
scas
aad
stc
loope
cmp
dec
xor
cmpl
push
fisubl
out
hlt
mov
outsl
sbb
out
push
or
sbb
and
mov
xor
lock
cltd
xorb
sbb
cmpl
jecxz
mov
sahf
xchg
pop
jns
mov
xorl
adcl
sub
push
jbe
push
xor
cli
fsubs
pop
push
xor
lock
sbb
jecxz
shll
outsl
inc
or
pop
dec
orb
xor
push
xchg
inc
les
sub
movsb
jmp
cmp
cmp
pusha
jnp
mov
roll
mov
lret
jl
ds
je
ror
sub
in
ljmp
popf
gs
ret
add
push
test
xchg
cs
repz
lds
sbb
add
xor
mov
aad
pop
outsb
sbb
adc
sahf
jg
sti
adc
es
out
inc
xlat
push
aaa
rcr
arpl
sub
gs
mov
mov
outsb
push
js
inc
dec
loope
repz
xchg
out
xchg
movsb
negb
les
push
call
pop
inc
rcrl
add
arpl
mov
dec
sub
add
adc
cltd
jne
js
jno
lret
pop
mov
pop
jne
lahf
ds
fnstcw
mov
jb
dec
aas
jne
mov
mov
pop
stos
loope
sub
leave
dec
loopne
push
sub
add
gs
add
insl
sbb
jg
jb
cmp
stc
fwait
je
xchg
pushl
fwait
dec
ret
aad
rcrb
sbb
sub
jp
mov
nop
test
sub
jnp
push
adcb
pop
add
outsl
cmp
cmp
push
mov
std
or
jp
fistpll
mov
scas
sbb
and
scas
loope
mov
add
sub
aaa
cmp
xchg
pop
pop
cs
lcall
int3
ljmp
lcall
fwait
mov
xchg
lret
cwtl
sbb
loop
lea
jne
clc
lahf
iret
pop
push
lds
stos
adc
push
imul
into
loop,pn
clc
pop
mov
inc
mov
mov
in
mov
pop
sbb
cmp
xor
shl
sub
sarb
dec
fxch
out
outsb
jecxz
dec
nop
jae
inc
adc
filds
out
iret
add
stos
mov
add
filds
mov
sahf
xor
sbbb
lcall
pop
cmc
clc
in
inc
outsb
xchg
pusha
xor
lods
sub
mov
int
movsl
cmp
inc
ret
inc
dec
xor
fildll
leave
scas
push
fadd
leave
mov
jns
enter
xor
movsb
lods
sub
jnp
enter
int
cld
pop
add
cmpsl
cmp
stos
rclb
dec
cmp
std
pusha
inc
mov
mov
mov
mov
pop
dec
std
cwtl
lret
shrb
lahf
jae
jmp
dec
push
adc
test
mov
rcl
insb
sub
mov
in
push
icebp
pop
clc
test
movsl
sbb
stos
jmp
cmp
imul
adc
fcompl
sub
scas
adc
add
cmp
push
test
in
pop
inc
mov
pop
cmc
fsubrp
sbb
or
adc
dec
jecxz
jbe
dec
add
sub
inc
mov
int3
mull
test
cs
or
insb
sub
sub
or
into
in
dec
pop
or
loopne
xchg
jmp
mov
push
insb
cld
iret
int3
jmp
sub
dec
inc
leave
pop
mov
cmp
fistl
call
mov
repz
mov
in
movd
xchg
decl
mov
xchg
lods
lock
cmp
xchg
cli
push
ljmp
xlat
fcmovb
xchg
pushf
es
jmp
das
cmp
xlat
dec
dec
adcl
fdiv
loope
inc
sarl
inc
fisubrs
dec
hlt
dec
adc
push
in
mov
adc
mov
test
iret
shrl
dec
sbb
mov
mov
xchg
mov
jecxz
xchg
movsl
xchg
ljmp
fisubl
jle
push
paddsb
ret
add
push
mov
out
sbb
inc
mov
cmpsl
push
cmpsb
pop
aam
jecxz
das
xchg
mov
mov
add
imul
mov
pop
enter
test
rclb
adc
ret
sub
dec
jns
stc
push
test
sub
das
pop
and
les
rol
mov
cmp
push
into
push
int3
sbbb
xor
js
sub
cld
jmp
sbb
ret
jns
xor
jno
mov
sub
or
mov
sbb
or
es
mov
push
out
add
adc
pushf
in
xor
push
addr16
mov
out
ret
pop
sub
jge
and
scas
xor
push
cld
inc
outsb
mov
test
dec
insl
das
int
jle
mov
sbb
cld
or
daa
in
repnz
jecxz
jns
fldt
mov
js
xchg
fcmovnu
or
fs
mov
push
aad
test
xchg
lods
mov
lea
mov
pop
clc
pop
ret
cmp
fisubl
xchg
jl
lea
jge
std
mov
mov
push
lods
imul
arpl
pop
mov
std
rcrb
pop
int
inc
adc
xchg
mov
cmp
push
jle
and
push
pop
pop
fsubl
mov
push
in
ret
fmulp
in
adc
imul
call
xor
lret
inc
stos
imul
lret
and
mov
dec
loop
sbb
and
or
xchg
std
scas
orb
add
inc
repnz
loopne
into
inc
mov
loopne
xchg
sbb
push
mov
in
das
xlat
out
or
cld
shlb
pop
mov
jle
jbe
sub
mov
ret
stos
lods
inc
push
dec
and
inc
ret
lods
cmpsb
pop
cltd
ror
pop
cmp
dec
push
loopne
repnz
jae
loop
in
jle
pop
inc
lods
dec
pop
mov
ljmp
mov
xlat
fbstp
lds
out
stos
lret
pop
cltd
and
dec
outsl
and
pusha
mov
lods
sub
sbb
int3
test
cmp
adc
xchg
int
lea
adc
dec
xchg
sahf
push
xlat
fimull
jns
test
lods
xor
xchg
fldl
cmp
or
lahf
int3
jl
jo
dec
cmp
mov
pop
das
and
loop
pop
mov
adcl
bound
shrl
mov
gs
movsl
setns
psubd
lods
inc
scas
adc
and
xor
call
stc
stc
hlt
enter
popf
add
insl
test
add
xchg
aaa
jg
adc
pop
jge
mov
faddl
dec
pusha
call
les
push
dec
rorl
shlb
pop
hlt
xchg
mov
mov
in
add
mov
faddl
out
lods
idivb
xlat
pop
sarl
jb
rorb
out
add
fcomps
lods
cld
adc
add
cmpsb
in
mov
or
push
jae
pusha
icebp
inc
fmull
roll
popa
sub
xor
and
rorb
and
adc
mov
stos
loope
adc
xor
mov
arpl
pop
aas
add
pop
mov
imul
or
add
subb
and
imul
bound
ficoml
cmp
xchg
stos
add
adc
push
xor
sbb
xlat
mov
js
sar
sbb
jecxz
mov
lods
ret
out
xchg
dec
loope
mov
mov
xor
fdivrl
ds
jmp
daa
stos
sbb
daa
ficoms
dec
popa
jmp
push
pop
in
dec
clc
dec
or
insb
pop
mov
push
mov
xorb
pop
push
out
adc
push
sub
dec
xchg
in
mov
subl
cmp
and
dec
int3
call
vpslld
inc
cmpsl
and
and
and
mov
outsb
call
int
bound
imull
into
ds
neg
xor
lcall
cli
not
push
push
mov
jb
imull
negl
lods
fwait
popf
cli
pop
xor
inc
aaa
xorps
or
mull
pusha
jmp
cmc
pmulhw
mov
aam
shll
pop
pop
cs
pop
adc
movsb
test
jg
add
push
movsl
mov
inc
ret
pop
cmpsl
rorl
aaa
jae
sbb
fs
and
inc
ljmp
decl
repz
movsl
jecxz
call
out
sbbb
jns
dec
test
outsb
std
jne
sbb
dec
in
outsl
push
mov
std
hlt
mov
mov
stos
mov
inc
adc
mov
dec
nop
push
push
dec
subl
inc
inc
xor
pop
and
pop
mov
jecxz
fildll
mov
mov
xchg
mov
loop
movsl
jno
sub
lret
fisttps
push
mov
xchg
js
enter
mov
sti
sub
mov
mov
stos
popa
nop
mov
add
das
xchg
adc
scas
gs
mov
in
daa
cmp
mov
sbb
and
sbb
rcrb
clc
pop
lods
popf
ret
add
insl
push
comiss
std
pop
test
ja
sub
arpl
xchg
insb
dec
inc
sbb
sub
mov
movsl
push
and
lods
aas
dec
les
dec
mov
or
arpl
pop
jecxz
rolb
lods
jbe
inc
sub
das
testl
add
dec
adc
aad
inc
les
movsb
test
aad
inc
movsl
test
pop
jmp
pop
push
loop
subl
push
arpl
out
imul
es
mov
lret
fimuls
stc
sub
and
lret
jne
es
adc
dec
mov
mov
lcall
push
mov
xor
inc
cld
test
dec
and
out
addl
jecxz
xor
rcll
imul
shlb
ljmp
adc
rcr
adc
add
sarb
out
imul
push
mov
push
pop
out
lea
xchg
cmpl
stc
cmpsl
add
mov
mov
jae
pop
add
sbb
fwait
adc
das
jne
pop
sub
push
push
bound
ret
xchg
shll
xor
aam
ja
lea
add
or
les
movsl
pop
out
test
xchg
lret
leave
mov
sub
ds
cmp
xchg
mov
pop
jno
pushf
mov
fwait
mov
test
dec
out
out
or
pusha
loop
fisttpl
adc
sbb
mov
pop
int3
lock
cwtl
push
jecxz
inc
add
cltd
leave
cmp
mov
jb
ds
loop
pop
mov
addr16
loope
pop
mov
je
mov
stos
mov
jmp
push
adc
jno
das
pop
push
shlb
rcrl
testb
mov
add
xchg
push
add
mov
push
add
mov
jbe
sub
inc
xor
mov
mov
out
daa
xorl
es
inc
pop
adc
lret
mov
and
inc
push
fstps
push
mov
dec
imulb
cli
inc
pushf
repnz
sbb
pop
xor
sub
pop
sarl
or
pop
and
loopne
imul
fs
or
jns
stos
cmp
insl
lret
popf
push
imul
inc
mov
orl
les
imul
arpl
pop
add
mov
aad
ret
aad
lods
int
sbb
pop
in
cmpsl
dec
call
clc
mov
jg
adc
and
addr16
shrb
hlt
dec
icebp
and
jne
and
lock
xchg
jmp
pmuludq
mov
xchg
mov
clc
and
cwtl
cmp
lret
dec
jnp
jb
jg
in
and
repz
jp
mov
sti
add
xchg
jo
das
xor
pop
lahf
xchg
mov
mov
push
dec
imul
push
xchg
sub
and
xor
jae
pop
sub
inc
add
cmp
xchg
push
mov
cmpsb
popl
rol
int3
shlb
out
hlt
jae
cli
and
and
mov
js
pop
arpl
inc
and
xchg
shl
dec
cmp
push
fucom
push
imull
out
mov
push
cmc
pusha
xchg
test
nop
or
add
test
enter
cli
repz
sbb
clc
test
je
sub
xchg
enter
dec
gs
out
js
mov
mov
mov
or
push
imul
aas
ficoms
cmp
inc
mov
aad
and
jmp
shr
and
xchg
inc
and
fs
mov
jbe
repnz
sub
jnp
push
ljmp
dec
pop
fstps
mov
fcmovnu
mov
add
shrl
aaa
cmp
or
cltd
jae
mov
and
cmpsb
sub
into
int3
pop
ret
popa
loope
and
out
xor
imul
ficomps
aad
mov
inc
push
shr
dec
bound
in
pusha
outsb
stos
xor
jge
push
mov
das
aad
add
xor
dec
xlat
jge
mov
outsb
test
xchg
sub
push
pop
repz
fsubrl
sub
fistps
pop
cmp
adc
imul
jae
mov
push
xchg
bound
mov
mov
jne
shrl
cmp
scas
shrb
negl
loopne
jne
sbbb
push
jne
jbe
adc
packssdw
rcll
adc
andb
xchg
xor
enter
xchg
and
sub
clc
cmc
adc
cmp
xor
inc
mov
xor
inc
fdivr
ret
cmc
test
inc
jnp
and
int
cwtl
xchg
aaa
ljmp
dec
inc
mov
popf
cltd
in
arpl
sar
lds
xor
cmpsb
add
add
and
mov
push
inc
xchg
cmp
cwtl
std
into
dec
sub
shrb
xor
js
cltd
mov
sbb
dec
data16
mov
sub
push
andl
cmp
popa
xor
or
jge
xchg
loop
cld
adc
shrl
push
fsubr
std
sub
sub
pop
out
cmp
add
xor
xchg
cmpsb
data16
xchg
jle
xchg
rcrl
mov
dec
iret
add
ds
movsl
bound
fnsave
and
int3
or
mov
shlb
xor
rcrl
inc
mov
sbb
fwait
sub
dec
xchg
ror
test
in
adc
sub
mov
pushf
cmp
inc
cmp
xchg
add
or
rolb
fstl
imul
dec
and
sbb
jmp
out
cmpsb
mov
hlt
jle
cli
mov
mov
jns
xchg
lret
mov
sbb
xchg
outsl
sar
sbb
jb
cwtl
enter
stos
into
leave
pop
push
sahf
jo
fs
scas
lods
jno
loop
mov
pop
cmpsb
adc
mov
jp
lcall
xchg
fdivrl
sub
pop
sbb
and
dec
push
js
sbb
xchg
xchg
aad
mov
and
aaa
mov
add
aas
scas
jecxz
xchg
ja
outsb
aas
sbb
iret
pop
xchg
xor
and
orl
aaa
insl
popa
into
xor
cld
adc
sbb
mov
inc
addr16
sbb
orb
loop
fcomps
jbe
out
add
adc
outsb
clc
inc
pop
sub
lahf
sbb
add
fiadds
fnstsw
mov
dec
mov
sbb
imul
test
or
xor
or
push
mov
xchg
add
call
icebp
jle
adc
jno
cmpb
fisubs
xchg
fwait
mov
mov
inc
and
jge
push
push
push
sbb
imul
mov
inc
or
clc
or
xchg
jae,pn
sbb
cmp
adc
js
xor
and
lods
mov
rcrb
es
popa
hlt
adc
dec
xchg
sbb
mov
lock
mov
xchg
movsb
ss
test
hlt
cltd
xchg
fstpt
aam
inc
sbb
cmp
outsb
loope
mov
pop
mov
inc
jge
inc
inc
push
xchg
lock
leave
push
enter
and
int3
daa
xchg
add
outsb
mov
pop
add
pop
xlat
pop
jns
cmpsb
or
test
out
or
mov
mov
fucom
test
dec
push
sbb
cmp
fnstenv
test
shll
or
adc
aam
xor
xor
int3
mov
add
push
cmc
jo
sbb
mov
ror
in
adc
push
jmp
adc
jb
adc
lret
pop
aas
and
loopne
aad
mov
mov
enter
push
daa
lret
sub
jle
mov
jg
hlt
andl
cmc
enter
ljmp
pop
popa
loopne
fs
pop
mov
in
enter
xchg
mov
adc
ret
jno
adc
mov
outsl
pusha
push
pop
hlt
test
mov
xchg
leave
aam
loopne
jbe
scas
cmpsb
sbb
sarl
inc
shrb
xlat
and
xchg
xchg
dec
push
test
xchg
xor
bound
cmp
push
rcl
dec
xchg
inc
push
and
xchg
imul
cld
and
push
xor
fadds
shll
ja
sti
and
sahf
dec
mov
bound
or
lods
sbb
push
xchg
out
xchg
or
subb
std
push
mov
jnp
jg
and
adc
popa
add
xchg
movsl
pusha
dec
shrl
mov
sub
xchg
inc
nop
shl
inc
bound
fs
std
inc
jno
add
test
aam
in
pop
lods
fcmovne
lods
in
pop
dec
imul
je
or
icebp
jno
sub
aam
mov
xor
sar
push
ss
jns
sub
dec
int3
sbb
jle
jp
mulb
aas
jo
ret
push
cmp
add
sub
mov
pop
mov
mov
mov
mov
fstpt
loope
frstor
mov
sbb
popf
cmp
ss
pop
mov
jmp
xor
sub
or
arpl
and
in
add
fdivrp
mov
jle
out
cmp
int3
or
xchg
sti
jae
out
js
sahf
xchg
loopne
loop
clc
push
roll
cmp
lret
lahf
inc
xor
loopne
std
push
push
addr16
in
xor
popa
adc
xchg
sarl
sti
roll
pop
data16
les
jae
sti
mov
pop
inc
and
stos
mov
mov
push
adc
push
pop
jae
adc
mov
test
sbb
jnp
push
sahf
incl
cmp
and
cld
pusha
scas
cmp
mov
dec
push
and
cmpsb
or
sbb
mov
int3
xchg
cli
fbstp
push
mov
stos
outsb
sti
sbb
dec
mov
orl
mov
int
jmp
mov
loop
push
fwait
jb
popf
icebp
lock
gs
in
loopne
fidivs
jnp
inc
sub
loope
xchg
cld
daa
mov
cmp
loopne
cmpl
lods
lds
cmpsb
repz
jnp
push
imul
ja
mov
inc
cmpsl
mov
jne
out
rcr
pop
mov
insb
test
leave
les
adc
out
sub
popf
mov
out
adc
int
enter
cmp
add
aaa
adc
jmp
xor
sub
wrmsr
dec
mov
or
pop
rorb
add
test
les
shlb
loope
ss
sbb
mov
aad
ja
dec
xchg
xchg
cmc
aad
xor
sarb
cmc
test
xchg
push
scas
out
jb
fmuls
push
xchg
xchg
jmp
pop
vcvttpd2dq
add
push
push
punpckldq
xlat
sub
fcomip
inc
insl
js
or
or
xor
inc
enter
je
dec
inc
aaa
je
incb
dec
xchg
aaa
insb
in
adc
xor
inc
and
jne
test
adc
sub
push
fimuls
sub
test
push
aaa
pop
les
add
cmpsl
ds
pop
pop
sbb
jb
icebp
cwtl
aam
popa
xlat
shlb
sbb
push
dec
push
xchg
adc
dec
fdivs
or
sarl
int3
push
mull
lret
sub
mov
test
mov
jns
inc
cltd
dec
idivl
in
aad
rolb
pop
push
or
stc
shl
dec
fistps
dec
shlb
xchg
loopne
fcompl
xchg
rcrl
and
xlat
fwait
ret
adc
jnp
mov
cwtl
sti
pop
mov
cmp
adc
cmp
add
vpcmpeqw
sub
movsl
mov
cld
iret
push
mov
cli
iret
pushl
in
inc
xchg
mov
push
push
inc
jno
sbb
add
jo
out
and
out
test
shlb
leave
inc
shll
into
jmp
jl
int
cwtl
jg
movsl
hlt
mov
adc
shlb
sarb
mov
inc
jbe
movsl
adc
mov
in
addr16
imul
push
ja
sbbl
in
popf
cli
aad
dec
xchg
ret
je
mov
inc
push
out
cmpsb
repz
xor
adc
mov
push
std
cmp
fdivl
jbe
pop
push
xchg
mov
cli
xorb
mov
cmpsb
mov
stc
iret
cmp
pop
adc
aas
push
mov
pmaddwd
xchg
repz
std
andb
add
cmp
sahf
sbb
sub
mov
mov
add
leave
mov
cltd
inc
mov
arpl
ret
cmp
jmp
fwait
jae
popa
xor
ja
data16
in
imul
pop
mov
jns
cmp
sysret
xor
jecxz
xchg
push
repnz
out
push
inc
out
push
ja
cmpsb
daa
sub
in
aas
rorl
pop
das
add
jl,pn
push
mov
pusha
adc
data16
or
test
arpl
jnp
into
fstl
sub
add
shrb
out
and
fisubrs
test
add
mov
testl
sahf
test
and
xor
add
or
cmc
ja
push
std
imul
add
jecxz
into
xlat
mov
mov
dec
cmpsl
int
cmpsb
xchg
popa
mov
pop
out
fimull
pushf
xchg
mov
xlat
pop
or
mov
aam
xor
and
jno
mov
dec
lcall
ffreep
xor
enter
repnz
lods
mov
mov
add
dec
mov
dec
popa
xchg
lock
push
dec
sbb
inc
andl
lods
push
cmc
xchg
mov
push
pop
add
mov
lret
in
daa
gs
mov
dec
outsb
pop
imulb
jmp
pusha
icebp
push
rclb
out
popf
push
cmp
testl
fs
adc
ss
jnp
stc
bound
lcall
jo
das
push
lock
xor
ret
dec
mov
mov
mov
fwait
inc
cld
test
inc
mov
ret
xchg
lahf
push
and
cmp
or
sbb
bound
out
mov
clc
jne
pop
jae
jp
es
aas
push
mov
loopne
movsb
mov
inc
leave
gs
lock
shrl
lds
sbb
pop
dec
ret
sarl
loopne
add
cli
adc
push
and
adc
xchg
adc
jnp
in
cwtl
lods
inc
push
jp
dec
mov
jle
dec
into
pop
test
sbb
mov
mov
and
pop
loope
cmp
inc
pop
bswap
lret
sti
mov
dec
daa
fcompl
xchg
fcoml
aad
dec
out
pop
gs
ret
lds
or
repz
test
push
or
xchg
dec
sbb
stc
xor
inc
fnstcw
fnstenv
xchg
lods
add
scas
in
cmp
mov
sbb
insb
xchg
fsubrl
ficoms
mov
mov
std
in
in
in
roll
add
xchg
popf
stos
xchg
scas
xchg
jns
mov
push
ljmp
add
jmp
pushf
pop
test
inc
in
pop
imul
xchg
and
in
data16
add
lcall
loopne
jle
scas
test
je
jne
jae
cwtl
js
test
fidivrl
xchg
lods
xor
sar
ljmp
test
std
inc
insl
les
jmp
out
push
push
stos
adc
push
pop
add
les
xchg
dec
push
rolb
iret
sbb
dec
fisubs
dec
sbb
mov
mov
dec
mov
jl
pop
test
pushl
xchg
icebp
add
inc
daa
pop
mov
dec
stc
scas
leave
out
cmpsl
pop
inc
or
mov
mov
lea
jae
outsb
jno
or
jmp
movl
les
loope
int
aad
add
movsb
sub
adc
jg
add
jecxz
cli
sub
rcl
int
and
sub
mov
push
out
insl
into
movsb
and
test
cmp
xchg
dec
mov
test
cmp
mul
cmp
xchg
mov
add
adc
inc
cs
inc
push
ss
rorb
outsl
lods
insb
sarl
xchg
loop
jecxz
sahf
jb
inc
adc
xchg
sub
mov
or
nop
lret
pop
into
insb
scas
stos
inc
ljmp
and
dec
and
jge
or
mov
xchg
aas
shll
jbe
fucomip
scas
ss
in
shll
or
andl
out
xor
dec
mov
mov
jmp
shll
loope
mov
sbb
fs
in
dec
imul
je
xchg
xchg
rorb
out
adc
lahf
stos
ds
push
mov
lock
jge
enter
xchg
mov
lahf
outsl
push
mov
pop
out
lret
sbb
cmpsb
popf
xchg
mov
shll
mov
xchg
stos
mull
jb
adc
mov
shl
leave
adc
clc
add
mov
mov
or
pop
ljmp
cmp
shll
mov
mov
dec
pop
cwtl
outsl
into
popf
jge
inc
lea
leave
and
mov
roll
mov
aas
loope
mov
out
jl
mov
pop
add
inc
fbstp
mov
add
ja
je
sbb
sub
cmp
mov
test
dec
movsb
nop
push
jno
push
stos
jb
and
mov
pusha
gs
push
sbb
popf
loop
scas
xchg
testb
outsl
popl
adc
mov
sub
mov
enter
fcmovbe
testb
mov
xor
aam
or
add
push
arpl
into
xor
xchg
xor
add
scas
mov
pop
hlt
push
xchg
into
xor
mov
ret
fdivrl
mov
rcr
out
loop
mov
xchg
adc
cmp
out
iret
jg
fcomps
enter
fimull
sbb
int
push
push
insb
lds
jbe
rcr
outsl
and
mov
xor
push
sub
aad
aam
jae
and
in
ja
sbb
cmp
mov
jo
xchg
idivl
pushf
into
mov
dec
insb
cmp
mov
inc
xor
add
xlat
pop
add
loop
out
dec
and
inc
cmp
sub
push
fidivrs
icebp
std
or
pop
sub
add
pop
insl
fsub
outsb
or
stos
dec
mov
jnp
dec
dec
mov
imul
loope
lcall
xchg
sti
scas
ss
dec
hlt
push
dec
faddl
xchg
inc
push
lcall
int
push
cmp
and
fdivp
in
mul
insl
add
enter
js
int
mov
in
jp
add
mov
adc
xchg
in
adcb
sbb
sti
ljmp
cmp
sub
das
sub
mov
push
xchg
das
imul
jb
add
push
test
pop
imul
mov
mov
lea
outsb
pop
lahf
dec
cld
push
xchg
jae
frstor
fldenv
ret
jbe
enter
jo
stos
data16
in
lret
mov
insl
cmpb
clc
pushf
ret
les
xchg
loop
and
decb
inc
xor
rcll
test
sub
scas
sub
push
outsb
inc
cmp
dec
movsb
xor
test
test
cltd
mov
imull
sub
fwait
into
aam
pop
in
jo
inc
add
stos
decb
cld
sbb
iret
or
aas
mov
mov
mov
loopne
test
insl
sbb
mov
clc
fildll
lret
enter
popf
and
lea
lds
call
lret
clc
les
mov
sbb
push
adc
cmpsb
bound
shll
mov
cli
xchg
xchg
xor
scas
or
xchg
dec
dec
cli
jnp
pop
pushf
outsb
pop
xchg
cmpsl
addr16
pop
xchg
lock
in
loop
or
in
lods
jmp
jo
mov
loope
pushf
push
add
arpl
and
push
add
push
xor
and
dec
adc
and
mov
xchg
lahf
sbb
lock
lods
fcomps
add
mov
push
lahf
dec
mov
mov
ss
clc
mov
divb
inc
popf
jo
sbb
xor
jg
es
add
adc
pop
lea
popa
cmp
dec
outsl
add
in
mov
mov
notb
add
adc
adc
mov
cmp
sbb
sbb
lock
adc
repnz
adc
idivb
les
or
jb
mov
ja
in
loopne
hlt
or
pushf
movl
sub
hlt
adc
mov
push
xor
mov
cmp
andb
xchg
lret
fbld
pop
sbb
fcmove
mov
enter
jno
xchg
imul
icebp
lock
iret
xor
cld
mov
imulb
inc
sub
cmp
or
mov
and
call
lds
and
scas
mov
add
xchg
xor
jmp
rcrb
lahf
scas
divb
sub
lahf
pop
test
idivb
leave
xchg
fwait
push
arpl
bound
add
pushl
inc
cmpsb
enter
mov
fcomps
gs
aad
dec
scas
jb
xor
adc
jnp
nop
xor
add
jmp
or
aam
cmc
inc
and
pop
cli
addr16
mov
in
mov
sub
inc
jmp
pushl
pop
jno
push
add
cmp
shll
sub
data16
int
mov
xor
int
fst
dec
mov
clc
adc
mov
pop
push
repz
dec
add
negb
pop
mov
dec
mov
xor
mov
orb
movsl
or
icebp
adc
fistps
repz
lcall
sub
std
ret
into
xor
cmp
push
insb
js
inc
cmp
push
push
pop
leave
lock
xchg
pop
push
or
inc
xor
lods
inc
js
pop
pop
xor
dec
jno
insl
cmp
sbb
cltd
bnd
sub
daa
mov
sbb
pop
mov
mov
jbe
test
xchg
jnp
addr16
mov
and
mov
jge
mov
loope
xchg
xor
add
je
jle
cmp
push
mov
mov
mov
ljmp
fnstsw
sbb
inc
in
imul
xchg
pushf
sub
nop
push
lahf
xor
aas
dec
mov
imul
int
or
cmpsb
lea
xchg
lea
imul
jno
sbb
out
adc
repnz
inc
jl
sahf
sub
xchg
cmpsb
int3
xor
mov
pop
sub
mov
cld
cld
push
imul
sub
imul
pop
sbb
clc
je
pop
repnz
mov
jl
pushf
test
pop
pop
das
mov
push
imul
lods
xorl
inc
mov
sarb
ljmp
in
adc
push
cmp
inc
mov
cwtl
lds
call
mov
test
dec
rclb
dec
repnz
loope
js
fwait
je
stos
xor
mov
or
jmp
inc
je
pop
loopne
aam
cs
cmp
sub
sbb
add
sbb
cld
mov
push
pop
in
ja
sbb
jl
adc
loop
ja
and
insb
lahf
movsl
mov
and
dec
leave
cld
dec
shl
sub
jne
aam
and
jae
xor
jo
jmp
xlat
pop
dec
push
lea
repz
cwtl
mov
lret
push
aam
int3
push
add
pop
dec
aas
int3
or
jae
call
push
aas
xadd
imull
iret
push
sbb
and
add
and
dec
out
xor
roll
xor
jne
lret
adc
mov
add
fsts
shl
add
jae
lods
jg
add
je
ja
xor
pusha
enter
mov
and
in
xor
je
cld
test
xchg
insb
sbb
push
cmp
pop
cmp
mov
push
mov
adc
sti
push
icebp
and
stos
pop
or
lret
and
mov
xor
jmp
insb
push
call
pop
sbb
and
push
mov
dec
mov
sbb
pop
gs
fimuls
in
mov
adc
addl
cmpsb
jbe
addr16
scas
dec
mov
sub
ja
push
mov
gs
movsb
daa
push
jae
dec
cmp
scas
and
rclb
jg
pop
mov
mov
ljmp
pop
pop
and
scas
xor
xchg
out
jnp
xor
or
lods
pushf
inc
jo
push
mov
lahf
out
mov
dec
bound
popf
hlt
test
xchg
out
mov
je
fsubs
xor
call
push
gs
imul
shrb
ljmp
and
xor
push
adc
or
push
inc
sbb
lret
pop
insl
in
fidivrs
in
call
insb
xchg
cmp
sbb
adc
sbb
aad
lahf
lahf
std
stc
test
push
das
fcmovb
dec
mov
sbb
fiaddl
xlat
aam
ja
js
push
xchg
pop
int3
or
cli
mov
cli
sbb
sbb
fiadds
mov
add
add
out
mov
xchg
sub
xchg
cli
add
xchg
in
insl
dec
push
push
dec
dec
push
add
fs
pop
lock
lcall
lret
fnstenv
xor
add
in
ss
mov
test
xor
mov
stos
adc
test
ds
notl
idiv
outsl
call
test
fbld
mov
xor
icebp
dec
and
movsl
mov
adc
xorl
es
or
fildl
push
xor
pop
mov
and
ljmp
sbb
dec
bound
paddsb
xchg
pop
int
nop
popf
insl
icebp
cmp
sbb
insl
jae
jp
push
lret
and
imul
add
ficomps
add
pushf
push
push
jp
out
out
fs
mov
dec
sub
lock
push
xchg
das
scas
mov
push
dec
shrl
cwtl
mov
pop
and
test
push
jl
sbb
pop
or
inc
pop
and
xchg
mov
mov
cli
stc
rcrb
rorl
rolb
cmp
mov
fsubl
test
loope
lods
jns
sbb
add
hlt
scas
and
or
adc
es
mov
mov
flds
cltd
mov
mov
pushf
cmpsl
scas
xchg
mov
enter
and
xchg
cs
mov
shrb
and
dec
orb
es
out
xlat
mov
sub
mov
scas
sub
daa
int
xchg
loope
mov
scas
decb
xchg
cltd
aas
fmull
xor
sarl
jmp
int3
dec
testl
mov
notb
icebp
mov
push
aas
jns
xor
mov
inc
push
pop
addr16
mov
or
mov
fistps
pop
pop
test
cmp
js
dec
stos
xchg
mov
jecxz
mulb
int3
xor
imul
lods
mov
fcoms
push
iret
shr
mov
mov
jbe
jno
rep
cs
dec
iret
scas
lods
test
add
inc
cmpsl
sub
inc
pop
scas
cmp
jb
outsl
or
loopne
fbld
pop
jecxz
xor
fcompl
aas
sub
push
outsb
popf
aad
iret
pop
push
inc
or
push
mov
xchg
push
mov
ja
jb
cld
lahf
clc
cmpsb
in
ds
aas
ficompl
cmpsb
pop
repz
xchg
xchg
movb
psubd
add
mov
mov
xchg
fadds
sbb
inc
mov
xor
test
mov
adc
mov
dec
popa
mov
push
pop
push
adc
xchg
and
icebp
xchg
int3
dec
jne
data16
jle
scas
test
fistl
mov
cmpsb
sahf
adc
push
and
fcoms
dec
mov
pop
cmpl
xchg
cs
cli
loopne
mov
pop
mov
scas
lods
sub
sahf
inc
daa
in
not
push
jmp
ss
inc
rol
and
sbb
sub
add
fmull
lcall
xor
push
lds
push
and
sarb
push
add
add
mov
rcrb
mov
fs
aad
adc
sub
outsl
mov
outsb
inc
and
std
in
sbb
in
push
sbb
jae
inc
aam
cld
lahf
clc
adc
into
sahf
adc
mov
aam
das
adc
lahf
or
add
and
sbb
sahf
arpl
pop
pop
jo
push
xor
fwait
iret
mov
xchg
lahf
shrb
pop
sub
sub
push
mov
loope
xor
jbe
mov
adc
sbb
xor
call
mov
add
ss
fbld
sbb
rorb
ljmp
jae
ja
jno
je
push
repz
adc
pop
xchg
loope
sub
je
xor
sub
lock
lahf
or
xor
mov
cs
addr16
movsb
ja
loope
jge
xor
test
fiaddl
xchg
popa
mov
or
add
scas
mov
or
xor
mov
add
lock
call
shr
cmpb
lret
test
push
mov
sbb
cli
repnz
das
out
mov
mov
xorb
fldcw
push
je
push
mov
outsb
xor
repnz
stos
inc
pop
push
mov
xor
cmp
ljmp
sahf
repz
pop
aad
popf
mov
lcall
int3
mov
or
ss
nop
rolb
xchg
jmp
sbb
dec
iret
jle
xchg
daa
mov
frstor
outsl
mov
lcall
xor
insl
push
cmc
icebp
mov
jno
mov
movntps
jecxz
divl
cmp
jg
push
imul
sub
push
ds
sahf
mov
push
adc
test
xchg
mov
fs
inc
std
pop
shl
int3
push
shll
fildll
and
add
mov
ss
pop
add
cli
or
xor
dec
fsts
cmp
sbb
mov
cli
cwtl
and
sbb
xlat
pushf
adc
or
xchg
rolb
int
push
jnp
cmp
ficompl
push
mov
cld
cmp
fs
pop
xor
clc
jle
adc
ss
mov
dec
gs
inc
loop
xor
and
mov
mov
je
cmp
movsb
imulb
or
and
stc
clc
ja
popa
jne
outsb
pop
xchg
iret
cld
fwait
icebp
xor
add
subl
leave
mov
insb
sub
mov
fwait
inc
cmp
and
inc
mov
cmpsb
insb
ljmp
and
stc
push
sbb
loopne
add
sbb
xlat
cmp
addr16
sub
aas
sub
and
mov
cmp
fwait
jg
pushf
int3
mov
das
mov
pop
dec
fnstcw
pop
ret
pushf
mov
mov
mov
add
cmpl
sub
xor
dec
mov
pushl
or
xor
and
add
rcll
xchg
in
iret
in
xchg
sub
push
aad
push
out
pushf
not
cmp
jg
fnsave
push
xor
sub
jae
or
icebp
sub
mov
sub
dec
and
dec
andl
and
push
jg
push
push
outsb
jg
push
push
ret
jmp
cli
roll
push
stos
add
pop
mov
loopne
loop
cmp
popa
mov
mov
lret
xchg
jle
mov
lcall
jne
sub
call
fldl
stc
inc
sub
inc
or
out
push
mov
push
gs
add
movsl
lret
test
std
cmp
pop
cwtl
cmpsl
fs
mov
test
fnsave
fnstenv
test
je
mov
mov
mov
imul
js
sahf
sub
cmpsb
adc
inc
push
test
jmp
jmp
or
incb
add
xchg
outsl
dec
add
bound
pop
fistpll
outsl
inc
sti
cmpsl
fsubrs
enter
js
cmc
lods
or
loop
sub
sbb
fbld
inc
lret
loopne
jbe
into
sub
xor
iret
jnp
rcrl
mov
mov
dec
sub
pop
ss
lret
sbb
or
stos
mov
sbb
push
push
mov
xchg
dec
inc
mov
mov
iret
sbb
push
and
shrb
xor
shlb
push
xchg
loope
mov
sarl
test
xorl
hlt
cmp
addr16
lret
fildl
es
clc
insl
lods
fwait
jg
mov
lret
mov
mov
or
addr16
aaa
xchg
pop
sub
mov
sbb
jns
fucom
add
dec
push
jbe
push
stos
sub
or
loop
aad
push
add
pushf
dec
xchg
popa
inc
lds
pop
in
sbb
lahf
ljmp
inc
push
and
or
mov
je
decl
cld
std
ljmp
into
lds
mov
add
sbb
std
ret
push
pop
dec
ss
lods
xor
cmp
pop
pop
stc
inc
int
cmc
add
ret
cltd
outsb
mov
jbe
in
mov
mov
cwtl
xor
sbbb
add
popa
lds
mov
inc
push
push
out
int3
push
xor
pop
cmp
mov
jecxz
jne
mov
pop
mov
pusha
mov
outsb
and
fldt
icebp
test
movsb
pop
mov
xor
daa
dec
or
repz
outsl
xor
es
outsl
leave
mov
cmpsl
aaa
sbb
push
mov
push
shll
bound
jns
iret
paddusw
add
test
jecxz
cwtl
mov
xchg
sub
mov
fsubs
add
jmp
fwait
xchg
mov
jns
hlt
loopne
test
cmp
push
inc
icebp
shr
adc
ror
insl
fsubrp
sbb
cli
popf
fisttpll
xlat
sahf
std
xor
mov
mov
or
xchg
push
in
fists
out
xlat
mov
int3
lock
push
mov
mov
and
and
lea
jg
push
cmc
mov
fdivs
jg
mov
mov
xor
mov
add
decl
sub
rcrl
ja
aaa
xor
jno
push
mov
jno
sub
lret
sbb
sbb
gs
out
xchg
mov
imul
out
adc
fldenv
orb
xchg
xor
push
mov
and
and
movsb
in
push
or
aad
sub
ds
popf
dec
dec
mov
add
cmp
stos
inc
arpl
or
sub
pop
adc
leave
jns
jmp
dec
mov
jne
mov
cmpsl
push
out
dec
data16
push
add
or
and
bound
stos
push
or
fiaddl
push
outsb
ja
jmp
and
dec
jle
jge
roll
cli
jae
mov
mov
push
lock
movsl
cmpsl
jle
xlat
int3
in
jmp
cmp
fcompl
sub
or
sub
out
out
cwtl
lods
xlat
repz
daa
jge
rolb
movsb
push
ljmp
mov
push
sbb
jns
dec
jmp
sub
pop
out
js
mov
pushf
fldt
xchg
rclb
xchg
dec
dec
ds
mov
cwtl
out
das
add
in
mov
push
mov
ret
sahf
fistl
outsb
lahf
xchg
ret
notb
pop
ljmp
cmc
arpl
rcll
ss
roll
pop
push
jo
jnp
xchg
jo
cmc
jp
aaa
or
aas
cli
test
ret
push
cmp
repnz
mov
rorl
xlat
mov
adc
imul
lods
sub
push
sub
dec
mov
pop
mov
pusha
inc
lret
dec
int
and
push
mov
cmp
inc
lds
outsb
scas
test
into
xor
or
cmp
cmp
lret
jbe
add
xlat
cmpsl
pop
fcmovu
pop
sub
mov
std
out
shll
int3
sub
mov
popf
ret
lret
sub
xor
inc
cmc
hlt
stos
mov
aam
mov
popf
data16
mov
cld
sahf
add
push
and
sbb
mov
repnz
sahf
hlt
imul
loop
lods
and
xchg
jo
push
mov
push
je
sahf
push
stos
scas
pop
out
shll
xor
pushf
in
popa
or
test
pop
cli
and
lret
data16
cmpsb
sbbl
daa
pop
sub
repz
cmp
loop
cld
push
inc
stc
test
sarb
mov
icebp
faddl
iret
sbb
ret
mov
dec
lock
fcoml
cli
mov
filds
aaa
out
cld
scas
jb
dec
imull
addl
jmp
imul
xor
call
inc
sbb
cmpl
pop
pop
es
sub
cmpsb
pop
push
dec
fnstcw
mov
arpl
in
jg
setae
mov
sub
cmp
and
jb
push
dec
insl
push
rorb
lea
jbe
dec
and
hlt
and
pusha
lds
lock
arpl
inc
es
std
lds
je
push
push
cmc
pop
mov
jmp
fnsave
cmp
das
or
ret
fwait
or
mov
outsb
jb
push
push
inc
dec
xor
inc
sub
dec
jnp
push
negl
cmp
xchg
das
cmp
jo
xchg
lret
push
loop,pt
mov
lock
sbb
stos
insb
outsl
mov
bound
aad
arpl
push
fdivl
les
fisttps
addr16
jge
push
inc
push
notb
dec
pop
push
das
pop
mov
push
fwait
sub
daa
insb
sti
sub
into
adcl
sub
into
xor
in
cmp
shrd
test
mov
test
push
leave
aad
pop
scas
xchg
sbb
xor
loopne
sahf
jle
mov
test
inc
inc
les
or
sti
pop
daa
push
push
fdivrl
mov
faddl
hlt
pop
hlt
cld
push
daa
imul
dec
lret
mov
inc
fcmovnu
ret
cmp
or
in
dec
jg
jns
ret
jecxz
test
into
cmp
push
mov
dec
xor
iret
pop
cld
pop
pop
nop
and
mov
pop
xchg
push
pop
stos
sahf
fnstcw
loope
in
popf
sub
jmp
pop
mov
lret
cld
push
and
push
jle
cmpsb
imul
push
pop
jne
jno
and
ficompl
ds
outsl
lea
in
cmc
push
addb
sbb
lcall
nop
push
cmp
pushf
fwait
mov
add
push
mov
push
add
fucomip
fsubr
mov
notl
xchg
fdivrs
inc
xchg
test
leave
sub
add
scas
and
sub
test
mov
push
aaa
les
jge
sub
add
out
sbb
adc
mov
mov
mov
pop
roll
xchg
ror
add
pusha
jl
add
push
aas
and
mov
repz
pop
or
je
pop
mulb
aas
out
mov
repz
jnp
bnd
sub
pop
aam
sub
cltd
cmpsb
dec
mov
popa
leave
mov
cltd
je
out
add
lea
cld
jp
into
xchg
pop
mov
inc
subb
lret
bound
je
push
and
test
ja
adc
in
sbb
sub
mov
sbb
fimuls
pushf
inc
mov
pop
add
and
insb
loope
lods
pop
sbb
push
jbe
mov
int
dec
lcall
out
push
pop
fsubr
cmp
sbb
test
cmp
pop
nop
xchg
stos
mov
dec
xchg
xchg
jae
cmpsb
cmp
pushf
push
dec
lods
not
adc
les
mov
inc
imul
sahf
mov
inc
ret
hlt
cmp
and
push
outsb
shl
xor
mov
add
test
xchg
lahf
pop
mov
iret
push
jp
mov
mov
scas
xchg
and
xorl
into
adc
in
movsl
add
push
aas
popf
push
pop
pop
pop
addr16
and
in
xchg
push
das
mov
mov
movsb
sbb
cmp
dec
inc
cmp
test
andl
js
pop
pop
push
mov
xchg
adcb
and
mov
scas
xor
loope
and
xchg
data16
out
inc
arpl
daa
mov
stos
pop
mov
and
aad
push
xor
sti
or
push
movsl
mov
aas
out
stc
xchg
jae
fs
addr16
and
fistl
aad
push
fs
mov
outsw
sbb
add
stos
imull
cmp
in
daa
sahf
sahf
add
adc
sbb
mov
repnz
sub
push
xor
and
pop
scas
mov
outsl
fistl
push
xlat
repnz
sahf
adc
divl
pop
push
mov
add
enter
xchg
hlt
xchg
jmp
xchg
jo
daa
xchg
xlat
lock
cltd
push
lea
cmp
xchg
loop
adc
xor
inc
arpl
das
pop
cmc
int3
sahf
and
sub
mov
leave
clc
push
shl
sbb
aas
ds
fsubl
xchg
dec
sub
adc
push
xor
inc
jbe
test
push
sarl
test
in
dec
ja
int3
andb
repnz
mov
lahf
cmp
add
lds
int3
les
sub
repnz
es
cmp
mov
jb
inc
mov
xor
stos
lds
push
dec
pop
and
mov
in
roll
scas
repnz
int
aam
jle
mov
lahf
lcall
cmp
mov
stc
dec
in
movsl
xor
inc
xor
jge
int3
stos
pop
stos
mov
pop
xchg
cmpsb
ljmp
aas
insb
or
pop
insb
jne
clc
incl
outsb
jnp
cmpsb
dec
popf
loopne
push
xchg
xor
lret
idivb
ret
popa
jb
lock
shlb
mov
jb
xor
roll
out
push
cwtl
mov
daa
cmpsl
pop
mov
aad
test
xchg
sub
mov
ljmp
addr16
scas
out
divb
imul
in
xchg
je
mov
shr
cmp
dec
mov
xor
mov
cmp
fwait
sbb
push
cmp
jg
sub
fwait
inc
mov
push
mov
and
mov
popf
jns
movsb
pop
cmpsl
mov
mov
jnp
add
es
hlt
and
dec
movsl
das
mov
and
cli
out
add
add
mov
add
jnp
sub
pop
fildl
imul
js
mov
mov
mov
cmp
sub
fdivs
push
gs
movsb
test
and
scas
xchg
out
shlb
nop
cmp
sbb
or
dec
fsubs
leave
das
sub
inc
sub
insb
sub
adc
lret
aam
inc
hlt
jmp
dec
inc
insb
inc
jb
inc
rolb
or
aaa
adc
cmpsb
frstor
test
adc
in
cltd
sbb
add
sbb
addb
push
dec
stos
xor
frstor
stos
and
outsb
sub
test
in
mov
pop
test
or
inc
push
add
test
cmc
fwait
mov
and
mov
inc
pop
jg
dec
rolb
add
jne
shrb
xor
mov
and
orb
aad
push
mov
mov
dec
jno
or
xor
in
fadds
scas
xchg
jns
mov
pop
cmp
jl
mov
mov
dec
mov
gs
xchg
cmpsb
sub
pop
cld
inc
sbb
in
push
leave
int
bound
dec
inc
movsl
leave
repnz
mov
and
xor
imul
mov
pop
and
pushf
fwait
stc
xor
lods
mov
cmp
xchg
and
lods
add
ja
mov
jle
fsubr
ret
pop
pop
fdivrl
les
sti
or
push
xchg
mov
outsb
mov
cld
test
mov
sbb
mov
inc
xchg
mov
nop
fwait
dec
cmp
outsb
arpl
pop
loope
cmp
pop
cmp
and
mov
dec
lret
hlt
scas
fisubrs
iret
add
and
cltd
pop
jb
dec
add
jp
cli
xchg
dec
adc
in
and
int
xchg
or
add
in
dec
pop
dec
rorb
mov
push
mov
xor
movsl
sub
jmp
mov
jo
ret
cltd
pop
les
mov
push
leave
test
out
insb
mov
mov
inc
adc
cmpsb
les
pop
pop
push
pop
iret
dec
adc
xchg
mov
es
rclb
sub
outsb
and
cmpsb
in
insl
xchg
mov
in
sub
imul
mov
stos
sub
addr16
fadds
arpl
stos
mov
adc
pop
pop
and
stc
xchg
xchg
pop
mov
insl
push
imul
or
jecxz
mov
and
pop
and
dec
or
pop
shrl
pop
adc
pop
inc
adc
xchg
add
push
outsb
das
or
scas
mov
xor
sub
je
ret
int3
cli
movsb
out
add
repz
in
or
sub
push
jbe
popf
ficoms
outsb
enter
pop
lret
jae
cmp
pushf
dec
in
daa
inc
lret
addr16
inc
and
mov
add
dec
push
mov
or
das
cmpsb
notl
test
xchg
imul
xchg
ljmp
lcall
dec
inc
or
frstor
cltd
mov
pop
xchg
mov
stos
cmp
in
pop
pop
in
cmp
inc
lds
or
sub
mov
je
inc
je
sbb
xlat
call
jle
ficoml
lods
cmp
jns
sub
mov
pop
xchg
lods
std
xchg
and
xor
loop
jle
sbb
mov
xchg
sbb
or
subl
dec
jo
push
inc
lret
sarb
arpl
icebp
call
or
sbb
out
pop
pushf
and
xlat
dec
sbb
sub
shll
jl
push
xchg
push
sahf
xor
inc
es
pop
push
mov
cltd
push
les
jbe
dec
fidivrs
aas
mov
out
adc
cmpsl
icebp
fdivrp
adc
out
xor
stc
mov
repz
popf
stos
repnz
jnp
not
xorl
test
mov
mov
popf
jle
pop
xor
pop
jbe
xchg
xchg
cmp
dec
popf
jmp
cmp
lahf
fadds
jbe
call
xchg
push
pop
lcall
adc
iret
mov
inc
jmp
pop
call
testl
pop
andb
push
push
xchg
dec
fdivrs
dec
mov
adc
xor
sub
mov
dec
lret
lea
mov
std
and
jg
pushl
adc
shrl
pop
loope
add
scas
jae
ret
xlat
je
adc
dec
push
cmp
mov
aam
and
inc
gs
or
mov
mov
data16
mov
jns
lock
and
aaa
pop
testb
into
scas
daa
imul
in
outsl
pop
jle
test
push
push
jp
inc
loopne
cmp
iret
lahf
imul
icebp
aam
sti
add
dec
and
inc
add
mov
fldl
call
in
xchg
mov
in
mov
int
clc
inc
xchg
cld
xor
jno
nop
lret
adc
ljmp
jg
xchg
or
loopne
clc
fsub
mov
sbb
add
lret
sub
sahf
es
sbb
js
or
rol
loope
dec
add
and
les
inc
and
xor
xchg
dec
call
rorb
insb
push
xor
xlat
mov
and
mov
daa
notb
push
in
popa
push
icebp
and
push
xor
mov
cmpb
sub
mov
int
popa
pop
xor
bound
cmp
adc
xor
popf
cld
mov
mov
test
sbb
nop
loopne
mov
dec
xor
and
mov
test
or
sahf
sahf
inc
mov
pop
repz
pop
mov
and
mov
ss
pushf
pop
repz
adc
les
jl
fisttpl
sbb
mov
and
xchg
inc
gs
outsb
stc
jbe
jmp
int3
sbb
inc
dec
inc
in
mov
xor
jae
in
add
adc
jge
or
mov
rcll
xor
subb
dec
pop
lret
sbb
divb
cli
loop
jg
jge
mov
push
sbbb
and
and
sarl
push
lret
cmp
sbb
push
or
add
push
adc
add
pop
shrl
and
mov
mov
lcall
inc
add
je
lret
sbb
adc
cmp
mov
mov
nop
xchg
in
sahf
jne
pop
add
mov
ds
cmp
cmpsb
xchg
sbb
and
and
or
cld
xchg
push
aaa
mov
xchg
jecxz
jmp
jl
push
repz
repnz
xchg
out
dec
mov
incl
xlat
outsb
mov
mov
mov
in
insb
int3
pop
xchg
sbb
and
jge
pop
test
dec
push
aam
into
sub
decb
lea
mov
scas
pop
enter
inc
les
aam
xchg
rcrl
pop
shll
fs
xor
pop
xor
rcll
jne
test
int
jnp
mov
ret
sub
notb
cmc
in
mov
inc
mov
test
repnz
sub
sbb
subb
es
sarb
pop
stos
adc
adc
sub
js
mov
pop
pop
jbe
xor
fbld
cld
jl
inc
std
sbbb
mov
sbb
fst
xor
or
pop
or
lods
incb
ret
xchg
mov
idivb
mov
scas
in
icebp
mov
pop
icebp
out
dec
pop
and
in
jecxz
jno
cmpsl
std
int3
mov
push
rcr
rorl
lret
mov
cmp
push
loopne
jl
sbb
jns
lds
cs
mov
mov
loop
repz
dec
mov
movsl
icebp
dec
xor
jo
push
xchg
jns
in
mov
cmc
or
ja
push
scas
pop
mov
push
lods
pop
pop
scas
dec
es
out
inc
jge
lret
push
das
into
mull
xchg
cmpl
enter
mov
outsb
xchg
out
push
inc
xchg
imul
lea
insb
dec
inc
mov
xor
mov
scas
push
jne
xor
pop
roll
xchg
ljmp
dec
and
rcrl
int
loope
loop
popa
jmp
xchg
outsb
or
add
mov
push
inc
add
test
xchg
mov
mov
out
insb
xor
iret
sti
push
adc
cmc
arpl
sbb
mov
jbe
into
cs
aam
ss
xchg
mov
mov
cs
inc
daa
cmpsb
std
es
int
push
jae
mov
loopne
call
dec
xor
inc
test
les
incb
pop
jmp
xchg
repz
xchg
and
push
or
xor
test
cld
jge
xor
mov
mov
in
out
push
cmp
das
lods
push
pushf
aaa
add
sbb
jge
movl
int
adc
or
cs
mov
das
gs
pop
ljmp
fbld
lock
out
add
iret
fsubrl
mov
pop
insb
rcrb
xchg
sarl
loop
inc
mov
out
cs
popa
pop
cmpl
xchg
fidivs
out
push
and
stos
and
pop
stc
iret
sbb
lahf
add
add
sub
pusha
out
arpl
jb
cli
sbb
adc
movsl
cmc
insl
xor
pop
pop
test
mov
cmp
push
mov
clc
gs
dec
jge
push
sub
sbb
push
fcmovu
je
fstpl
idiv
into
jecxz
or
and
clc
push
ss
gs
push
mov
xchg
sub
std
pop
sbbl
int
and
xor
mov
addb
pop
in
sahf
mov
sarb
addl
in
sbb
add
inc
bound
push
pop
xor
jge
mov
mov
ret
scas
ljmp
pop
movsb
push
outsb
shll
pushf
iret
jns
pop
pop
adc
or
jnp
or
add
xlat
iret
cmp
push
rolb
and
lret
rcll
or
out
hlt
xchg
add
pop
cwtl
outsl
sbb
movsb
jecxz
pushl
xlat
bound
dec
adc
stc
sbb
out
daa
inc
sbb
cmp
push
push
aad
xor
enter
sbb
mov
dec
mov
xlat
shlb
mov
and
lea
push
pop
mov
sbbb
ja
jbe
ror
clc
jae
pop
testl
jb
add
les
jp
cltd
aad
clc
pop
shll
stos
adc
iret
jge
fildll
dec
push
and
scas
arpl
jnp
push
mov
je
nop
aaa
add
add
stc
stc
out
insl
int3
mov
sub
in
and
vmulps
scas
gs
sbbl
insl
xchg
mov
xor
push
call
shll
int3
mov
mov
push
push
adc
je
imul
push
test
mov
addr16
out
pop
jmp
mov
and
pop
xlat
out
add
sub
jg
ss
push
mov
js
int3
mov
mov
xchg
mov
push
add
hlt
mov
fwait
xchg
cmp
stos
xor
in
cmp
jns
fstpt
dec
pop
mov
mov
fiaddl
xor
jne
jne
xchg
cmp
popf
shll
lret
dec
push
pop
repz
movsb
nop
into
sub
roll
je
sbb
fcom
jge
outsl
and
push
mov
sbb
mov
or
cmpsb
icebp
out
and
mov
popf
outsl
loope
xor
or
mov
mov
inc
add
push
add
outsl
adc
clc
jns
sbb
jbe
dec
inc
cmp
mov
mov
mov
lds
test
push
and
xlat
pop
bound
out
popf
and
imul
mov
fsubs
inc
scas
in
sbbl
sti
and
push
jne
xor
mov
mov
xor
popa
imul
hlt
loop
data16
sub
testl
adc
rol
xchg
lret
dec
ucomiss
or
mov
lods
add
fadds
mov
popf
jae
mov
ret
push
xchg
mov
rclb
in
cmp
popa
mov
lahf
dec
fnsave
test
or
xchg
and
mov
add
jno
inc
and
je
hlt
mov
pop
cmpsl
ljmp
pop
enter
mov
popa
std
xchg
xor
loopne
iret
push
mov
push
iret
js
add
or
mov
daa
xor
xchg
leave
cmp
mov
ret
push
icebp
mov
mov
mov
xorl
cmp
xor
out
lahf
mov
add
outsb
stc
scas
cmp
pushf
mov
lods
outsb
fwait
imul
je
xchg
pop
into
fdivrs
mov
mov
dec
dec
int3
mov
push
xor
xchg
stc
add
or
frstor
adc
out
ljmp
arpl
xchg
leave
js
out
dec
cmpsb
inc
je
mov
inc
setle
lds
cld
pop
mov
scas
cmp
adc
sbb
aad
sub
add
xchg
lods
jns
iret
repnz
dec
add
aam
dec
lods
mov
leave
and
xor
jl
insb
inc
int
mov
and
dec
cmp
push
mov
mov
fisttpl
mov
dec
int
cli
les
cwtl
lds
inc
or
push
dec
pop
adc
shlb
ret
push
ss
mov
jno
repz
cs
jmp
xorb
test
loop
push
push
in
sbb
pop
jbe
out
pop
mov
stos
stc
insb
mov
jmp
inc
inc
test
mov
scas
mov
mov
popf
adc
or
in
daa
repnz
inc
or
jns
cld
sbbl
jb
lcall
int
lds
ret
xor
mov
test
ljmp
test
movsb
push
and
ret
aam
xchg
les
aaa
sub
stc
scas
xchg
push
xor
dec
add
mov
fs
out
imul
arpl
add
cmp
out
push
xchg
xor
data16
fstpl
ret
nop
inc
loop
fcmove
rcrb
insb
ja
std
xchg
outsb
int3
xchg
je
jge
push
call
dec
xchg
stos
fwait
mov
out
or
or
int
adc
pop
jbe
xor
pop
outsb
aaa
sbbb
inc
push
icebp
scas
lahf
sub
mov
push
jbe
je
ret
mov
sbb
decl
and
shll
xor
in
in
int
xlat
cltd
cmpsb
mov
js
jbe
ja
pop
xchg
and
push
cmp
mov
pop
mov
sarl
cld
xchg
cltd
test
fiaddl
mov
or
rol
cmpsl
add
cmp
jp
sbb
fiadds
or
es
andl
in
jle
iret
mov
pop
movsb
in
fs
mov
jne
shl
push
lods
xor
gs
ret
dec
adc
cmp
push
lcall
adcl
push
fisttpll
pop
fcmovu
aaa
fcoml
or
fidivrl
rcrl
in
shrb
popa
dec
out
hlt
into
push
mov
insl
sub
mov
int3
sub
xchg
clc
or
and
mov
mov
fwait
sbb
rcrb
jne
jp
cmpsl
jns
pop
adc
push
mov
idivb
pop
push
push
and
mov
mov
repz
jmp
shll
add
jae
add
mulb
imul
popl
scas
xchg
push
out
cmpsl
ror
fidivl
cs
pop
add
orb
das
cltd
cmp
jl
outsb
sub
adcb
std
add
ret
repnz
mov
into
sarl
ret
add
loop
out
mov
xor
add
cmp
and
lea
out
scas
push
shll
pop
mov
pop
mov
imul
nop
ret
popf
fdiv
xchg
fiaddl
sub
and
js
inc
jae
ficoms
shlb
or
out
add
mov
inc
xchg
out
push
flds
xor
cwtl
inc
aas
jnp
cmp
std
int3
push
fsubr
and
pop
cltd
jl
out
dec
inc
xchg
dec
xchg
gs
and
cwtl
mov
ret
std
pop
rclb
out
and
and
xor
jo
jno
mov
les
popl
fsubrs
popa
ljmp
dec
nop
mov
xor
sbbb
inc
pop
jl
cmpl
cmp
pop
inc
xor
inc
or
lea
out
lock
loop
aas
popf
xchg
add
inc
jl
or
call
cmp
sub
mov
xchg
stos
pop
sti
xchg
xchg
xor
test
add
push
mov
es
jg
add
sbb
xor
fsubl
and
fmuls
in
add
jns
dec
fs
ret
xchg
jge
pop
jno,pn
mov
mov
sub
jno
js
mov
sti
xchg
mov
pushf
jg
mov
cmp
lea
push
mov
mov
gs
dec
mov
cmp
lods
inc
inc
fldenv
sub
cmp
ss
push
mov
hlt
mov
stos
test
rol
shlb
leave
inc
sbb
sub
push
hlt
or
sub
lcall
xchg
bound
sbb
loopne
nop
pop
fldenv
scas
dec
pushf
cmp
jns
adc
aad
cmp
dec
mov
mov
orl
insb
fcompl
mov
or
daa
pop
add
in
cld
and
inc
add
cmp
sbb
sub
xchg
inc
dec
mov
lcall
adc
mov
dec
fwait
arpl
dec
adc
inc
mov
mov
sbb
and
mov
ds
in
jg
je
mov
xor
fs
mov
test
cmp
mov
mov
orl
insl
adc
fbld
mov
pop
inc
mov
or
repnz
push
inc
xor
jae
movb
jl
cmp
xchg
mov
fisubl
dec
cmpsl
lahf
jnp
mov
or
pop
jl
cmc
inc
mov
out
je
sub
xlat
data16
test
mov
int3
mov
inc
lods
xchg
fwait
sbbb
clc
mov
insl
cmp
add
mov
push
adc
in
mov
mov
sub
into
mov
lods
bound
adcb
scas
repz
stc
pop
jle
push
or
icebp
iret
inc
icebp
dec
mov
roll
add
jbe
sbb
pop
sub
jne
xchg
cmp
std
jnp
lods
pop
mov
imul
jo
mov
xchg
or
lahf
enter
pop
out
lods
call
rclb
add
scas
adc
adc
bound
fwait
pop
gs
xchg
push
push
push
xor
sbb
xchg
addr16
addr16
mov
xor
lret
xor
sti
into
rclb
in
pop
es
mov
arpl
pushf
pop
cli
inc
stc
ffree
loopne
pop
sub
leave
adc
in
repz
outsl
popf
jne
pop
sub
dec
bound
push
pop
jbe
lea
rolb
lods
arpl
out
ds
cmp
adc
push
dec
xlat
inc
adc
iret
cmpsl
xchg
sbb
aad
pop
fcoms
or
pop
adc
push
gs
jns
xchg
cwtl
xor
xor
ja
inc
lret
or
inc
sbb
ss
push
shll
jns
pop
inc
ss
dec
shll
in
dec
pop
andb
fisttpl
push
sbb
lret
add
push
int
cli
gs
and
js
adc
add
jg
mov
cli
incl
fisubrl
in
outsl
decl
pop
mov
ret
push
push
pop
push
inc
repz
adc
repnz
add
push
test
leave
mov
imulb
dec
test
or
mov
jae
out
test
fdivl
sub
jle
jo
lods
enter
dec
jnp
ljmp
mov
xchg
xor
or
xchg
addr16
mov
mov
out
push
dec
aas
push
xchg
xchg
dec
xchg
inc
out
test
fadds
loopne
or
mov
sub
mov
xchg
imul
lret
arpl
test
fiaddl
mov
dec
outsl
cwtl
imul
inc
sbb
inc
xchg
gs
adc
arpl
insb
pop
inc
aas
lahf
xor
nop
inc
pushf
outsl
decl
lahf
dec
scas
cld
gs
xchg
and
or
scas
shlb
aaa
xchg
add
or
in
scas
aad
scas
fsts
xchg
jne
cmp
push
fidivl
inc
cmpsl
cmp
inc
fcomps
push
inc
inc
loop
xchg
pop
xlat
jns
pop
leave
mov
icebp
in
mov
sarb
lea
aad
mov
xchg
push
jle
inc
mov
sbb
sub
mov
cmp
xchg
add
fcomps
mulb
cmpl
xchg
add
push
xor
lods
ret
ss
fldl
lahf
and
mov
stos
mov
jecxz
fwait
jecxz
das
inc
jmp
enter
lret
pop
popa
cmp
xor
out
xor
mov
fsubrl
dec
ja
dec
xor
xchg
lods
xchg
add
inc
lods
cmp
test
xor
or
xlat
push
mov
ja
jnp
xchg
dec
scas
rclb
pop
mov
cltd
add
mov
int
push
jl
push
push
arpl
jne
push
cltd
test
mov
imul
pop
sbb
jge
cwtl
fistpll
aas
int
push
mov
iret
cmpsl
incl
loope
bnd
outsl
sti
repnz
inc
and
outsl
xchg
or
clc
xor
mov
test
xor
adc
sub
movsl
xchg
push
sahf
flds
mov
iret
mov
rol
mov
xor
mov
neg
cmp
outsb
fcmovu
loope
sub
xor
lea
stos
fistpll
lret
repnz
inc
push
stos
pop
lcall
adc
subb
xlat
ret
push
mov
sub
cmp
push
xchg
cwtl
sbb
xor
sbb
shrl
int
mov
inc
imul
shr
out
dec
jecxz
cld
jge
pop
sub
into
in
lods
pop
lock
dec
mov
push
xchg
jg
cli
cmp
cld
xchg
sub
insl
aad
clc
jle
cltd
xchg
xchg
sub
std
bound
scas
adc
pop
mov
push
loope
ret
pop
orb
mov
sbb
and
or
add
jmp
sbb
cwtl
xchg
test
pop
adc
pop
jg
flds
in
hlt
mov
push
and
sar
shrb
lcall
lods
inc
pushf
iret
mov
lock
pop
pop
enter
mov
je
xor
in
out
cmp
adcb
test
insl
jle
mov
jmp
adc
cli
or
cmpsl
cmc
rclb
sub
repz
lea
add
xlat
fdiv
xchg
mov
addb
pop
inc
xchg
out
and
sub
lret
int
das
shlb
jbe
inc
shrl
adc
popa
pop
inc
ja
call
pop
je
lcall
notb
stos
test
dec
sbb
push
lods
test
rol
loope
ret
cmp
fwait
lret
lret
jnp
in
test
movsl
movsl
sbb
cmp
adc
iret
rol
cs
jle
cmpsb
es
fcomps
mov
dec
outsl
lahf
out
sub
fimull
jne
ljmp
aam
in
shr
inc
mov
iret
push
inc
push
dec
push
jns
sbb
in
mov
into
cmp
scas
movsl
fidivl
sub
iret
mov
adc
test
or
outsl
cmc
cmp
jbe
xchg
scas
add
leave
mov
out
or
fnstenv
dec
add
push
jecxz
into
inc
in
cmp
pop
fincstp
pusha
push
mov
clc
iret
sub
rolb
mulb
push
mov
and
les
or
dec
xchg
les
movsl
sarb
imul
jae
lcall
sbb
jmp
rcr
xor
inc
cmpsl
loope
xor
pop
sbb
and
aaa
frstor
stc
fbld
aas
or
jne
xchg
sbb
je
mov
push
in
cli
in
cwtl
jge
out
bnd
push
push
fwait
out
adc
xchg
sub
adc
sbb
fdivrs
xor
dec
push
in
mov
lret
das
es
inc
dec
push
xchg
out
out
loop
and
jb
mov
push
pop
inc
cmp
imull
mov
dec
fisttpll
mov
xchg
add
xchg
lock
push
scas
cmp
repnz
or
les
mov
loopne
adc
repnz
frstor
xchg
dec
adc
call
mov
pop
push
fistpll
or
or
popa
fists
dec
stos
daa
cmp
jbe
cmp
or
out
nop
stos
dec
mov
scas
pop
push
loop
pop
lods
jle
dec
mov
push
adc
mov
inc
pop
rcl
mov
cs
sbb
ds
cmpsb
fldcw
inc
xchg
jae
mov
inc
jmp
and
mov
cmpsl
cwtl
fisttps
in
pop
xchg
cmp
iret
pop
push
test
ficomps
xchg
pop
adc
cmpsl
mov
and
lock
pop
push
push
js
out
out
lcall
mov
adc
in
lods
frstor
mov
jg
or
fisubs
aad
cltd
pop
cmc
pop
jg
addr16
out
loop
jle
jbe
subb
sbb
leave
addr16
loop
add
xchg
cmpl
inc
fsubs
cmpsl
vandnps
sti
cmp
sub
loopne
fiaddl
hlt
aaa
sub
daa
mov
mov
and
sbbb
shlb
adc
mov
aas
or
push
or
aaa
and
xchg
hlt
push
rcrb
stos
cli
cltd
sub
pop
push
cmp
clc
ds
lock
mov
adc
xchg
or
loopne
or
push
dec
xorl
cmp
mov
dec
cmp
jmp
lahf
xchg
movsl
push
scas
push
add
pop
jae
stos
stos
add
ja
mov
cmp
cmp
pop
cld
and
jb
roll
into
push
xchg
or
add
imul
sub
xchg
inc
cs
push
js
add
scas
and
xor
push
in
lock
xor
and
xor
out
inc
mov
fstpl
call
or
push
loop
je
cs
jmp
adc
jl
shlb
sub
adc
add
mov
mov
ret
adc
cmpsb
add
push
mov
xchg
add
pop
nop
cmpsl
nop
jg
mov
dec
fildl
jbe
cmp
shll
scas
jp
mov
roll
popa
out
icebp
test
aas
fs
xchg
out
arpl
call
or
arpl
cwtl
pop
jno
mov
mov
sbbb
rol
cmpsl
cmp
jmp
jae
and
inc
adc
enter
mov
mov
mov
sub
pop
mov
pop
cmp
cmp
mov
neg
pop
scas
imul
xchg
push
sub
pop
enter
lahf
xor
shlb
mov
push
sub
dec
lahf
shll
out
movsb
push
add
mov
add
clc
fstp
mov
dec
je
ret
pusha
faddl
ret
mov
add
push
inc
int3
jmp
pop
scas
mov
pusha
nop
scas
xor
inc
hlt
add
adc
pop
cmp
loope
test
mov
imul
repnz
mov
std
imul
jae
lahf
xorl
insl
mov
jnp
daa
mov
pop
popf
mov
sub
add
and
fmuls
out
jmp
rclb
jo
dec
popa
xchg
in
and
jne,pt
mov
rep
sbb
mov
lds
push
add
jne
fcoms
rcr
push
mov
pop
pop
inc
jmp
rcrl
cli
mov
fimull
inc
outsb
mov
pusha
jb
mov
xchg
test
xor
cmpsb
inc
push
cwtl
inc
dec
out
mov
mov
and
je
push
repz
rcl
andb
lahf
sub
mov
je
cli
test
xlat
push
repnz
das
mov
push
dec
pushf
fmul
pop
pop
jmp
cwtl
mov
iret
in
mov
in
pop
xor
sub
mov
mov
jecxz
out
cmp
mov
jl
lods
sub
jbe
jge
pop
lds
and
test
dec
push
sahf
xor
and
push
imul
cli
push
ret
outsl
sub
arpl
stc
pop
loop
pop
rorl
ds
sahf
mov
mov
add
push
xchg
mov
outsl
jg
and
push
cld
mov
lock
out
mov
imul
outsb
and
xor
mov
cmp
pop
fidivrs
mov
test
dec
cmp
and
es
dec
loope
pop
lock
mov
lcall
ret
push
sub
push
jecxz
fisubl
mov
jg
jp,pt
cmpsb
dec
dec
nop
pop
mov
mov
and
js
repz
out
cltd
xchg
fidivs
xor
xchg
and
aas
lret
mov
mov
jae
xor
je
lds
andb
lcall
stc
shll
xlat
add
sub
je
cwtl
shl
stc
gs
push
cltd
push
cltd
xchg
dec
adc
in
sarl
into
cmpsb
mov
sbb
mov
or
pop
xchg
scas
xchg
inc
jo
les
mov
stc
ret
pop
das
cmpsl
cwtl
divl
aas
dec
ficoml
loopne
dec
lock
mov
rolb
addl
nop
aad
or
pop
stc
adc
or
and
xor
mov
mov
ljmp
jp
jle
xor
lea
dec
stos
add
pop
cld
ja
push
xchg
mov
ret
jne
enter
sub
mov
aaa
imul
mov
xor
and
outsb
or
cmp
fyl2xp1
add
or
push
mov
int
addr16
out
sbb
cs
pop
imul
fs
or
dec
and
aad
sub
or
lea
pop
incb
mov
rorb
test
sub
cmp
std
or
add
mov
andl
mov
sbb
sub
push
or
cmpsl
daa
mov
pusha
es
mov
rcrl
mov
test
dec
aad
or
pop
cwtl
outsb
lods
and
in
xor
jmp
and
es
sub
cli
sahf
jp
push
lods
mov
mov
cmp
dec
cmpsb
mov
sub
jae
rcll
repnz
jle
lock
jmp
movsl
ficompl
popf
shll
ret
test
push
lods
mov
adc
cmpsb
mov
mov
xchg
sub
out
test
dec
scas
sahf
mov
inc
fmuls
lds
dec
aam
jp
fisttpll
and
out
mov
hlt
repz
and
arpl
xor
lods
xor
dec
jbe
mov
lcall
mov
test
fsubrl
mov
add
mov
lods
push
mov
push
mov
out
ljmp
adc
inc
jne
inc
sub
mov
rorb
ret
call
sub
pop
lret
jb
cmp
test
andb
fsubr
sub
sub
mov
sbb
flds
jge
jae
stos
inc
sub
fs
push
or
xchg
inc
mov
add
cmp
dec
lods
test
mov
shlb
cmp
jne
daa
push
imul
xchg
es
stos
xor
cmp
sbb
shll
dec
push
test
jno
jo
xor
popf
jne
js,pn
mov
negl
and
adc
mov
out
lods
roll
scas
push
inc
mov
outsl
jl
xchg
pop
jge
xchg
lahf
cltd
iret
mov
int3
inc
mull
adc
loop
jne
fists
popa
insb
push
bound
imul
inc
dec
jl
sbb
add
daa
les
or
dec
mov
jge
or
rcrl
mov
inc
sub
push
push
negb
or
add
scas
cs
jmp
jno
mov
cld
das
pop
pushf
movsl
sub
stc
jecxz,pn
pop
fstpl
xor
mov
mov
or
out
xchg
test
in
xchg
and
jbe
inc
push
imul
add
fs
ds
pop
sbb
in
mov
sbb
mov
sub
cltd
fwait
out
cmpsb
leave
iret
inc
enter
aam
loop
mov
mov
loopne
push
or
add
mov
insl
test
inc
shl
incl
dec
testl
sub
lret
insl
inc
sahf
xchg
cwtl
sub
jo
mov
mov
adc
lret
jo
xchg
dec
test
pop
mov
sub
dec
mov
jmp
movsl
mov
cld
mov
ss
out
mov
push
fdivr
dec
movsl
mov
jecxz
pop
dec
or
outsl
add
out
xchg
push
push
ljmp
xor
fnstsw
jge
addr16
and
jp
pop
push
jb
scas
jmp
dec
sbb
jp
adc
pop
cltd
ds
jmp
lret
jb
mov
stos
ss
and
push
test
testl
vmovups
adc
les
xchg
xchg
test
pop
push
jne
xchg
xchg
arpl
push
and
push
in
incl
mov
shrb
and
in
lods
push
test
shll
jno
sbb
ds
je
stc
out
and
mov
inc
int3
xor
adc
xchg
pusha
data16
and
movsl
push
and
les
mov
cmp
adcl
ficompl
xchg
sbb
pusha
add
cld
pop
leave
xchg
lock
jbe
xor
xchg
mov
lea
aas
das
daa
xchg
int3
or
icebp
ja
cmp
lea
into
dec
lds
add
xlat
pop
mov
fisubrs
or
mov
sbb
rolb
scas
cmp
fadds
std
dec
sbb
adc
scas
sbbb
xor
dec
inc
push
movsl
pop
mov
inc
adc
and
stos
jbe
std
jb
push
outsl
inc
xchg
sub
sahf
aas
sbb
push
cmp
repz
mov
inc
and
push
mov
ds
push
jno
dec
imul
and
add
cmc
sahf
pop
cmp
cmpsb
scas
push
out
pushf
test
xchg
xchg
push
push
rcrb
loop
aas
sarl
push
cmp
lcall
fdivr
mov
or
inc
fbstp
fisubrl
cltd
or
sti
jg
shlb
int3
push
hlt
xor
sahf
aas
loopew
ss
sbb
shrl
adc
add
xchg
dec
lahf
lods
bound
mov
fisttpll
ljmp
js
loope
and
mov
and
nop
xor
mull
inc
lock
add
mov
push
enter
lods
mov
cmc
insl
xchg
adc
mov
testl
int
and
pop
jg
scas
fadds
into
fsubs
xor
mov
inc
subl
and
add
pop
clc
jle
fistps
push
sub
sbb
es
aam
cld
mov
jmp
push
fstpt
movsl
pop
and
call
pop
negb
inc
clc
addl
inc
jg
adc
sbbb
int3
pop
stos
test
or
ljmp
fisubs
jge
out
push
scas
sti
jmp
add
and
jae
xchg
and
lods
inc
fsubr
divb
mov
jg
std
xor
add
push
aad
mov
insl
and
or
loope
cwtl
sbb
xchg
cmp
loop
in
push
ja
and
repz
xchg
push
xchg
daa
xchg
mov
bound
mov
jae
and
and
push
dec
js
inc
rolb
inc
cli
xor
icebp
and
sbb
mov
out
js
xor
pop
push
push
subl
cmp
stos
xchg
mov
cld
psllw
adc
inc
cwtl
and
imul
add
lret
das
jnp
dec
and
loope
inc
mov
test
cmc
sub
push
push
push
dec
adc
and
fs
fsub
std
cli
pop
ljmp
or
jmp
sub
scas
stc
fsubr
push
inc
adc
or
push
sbb
mov
push
gs
sub
cmpsb
sti
dec
xchg
pusha
in
xchg
and
les
aad
adc
and
stos
push
and
or
xchg
iret
lea
loop
jp
arpl
inc
pushf
mov
cmp
jo
insb
js
js
scas
push
fidivrl
sub
lcall
xchg
pushf
sbb
xor
lea
int3
xchg
loop
xchg
push
inc
xor
mov
cmp
xor
push
jecxz
fbstp
mov
cs
imul
xor
jno
and
pop
fsubrl
and
inc
sub
push
push
insl
ret
test
ret
jne
and
push
movsb
jmp
mov
cmpsl
lods
insb
add
out
cmp
xchg
inc
adcb
jbe
stos
jg
fidivrs
sbb
dec
int
adc
orl
or
mov
adc
push
mov
push
ss
mov
mov
movsl
loopne
dec
or
inc
out
jb
std
insl
jb
xchg
leave
stos
jmp
fs
mov
push
dec
cmc
and
dec
fcmove
lahf
and
ret
les
mov
mov
push
fisubrs
and
pop
fbstp
cmp
xchg
push
jecxz
leave
fmull
es
hlt
into
ss
xchg
mov
arpl
enter
jmp
xor
xor
jb
push
or
shrb
mov
popf
sti
xchg
cmc
xchg
inc
push
fs
lea
jge
mov
push
cmp
fcoml
add
sti
stos
pop
cs
cltd
or
shlb
and
nop
mov
xchg
dec
pop
or
sbb
adc
jae
idiv
xchg
fnstsw
cmp
mov
in
mov
sbb
pop
add
aaa
call
mov
mov
push
jmp
ljmp
sarl
fsubrl
push
cmp
cmp
fxch
xor
cmpsl
dec
add
je
fisubl
test
jecxz
cmpl
out
sbb
rolb
mov
add
inc
inc
dec
or
dec
scas
pusha
xchg
loope
jmp
mov
ficompl
or
orb
mov
mov
shl
notl
sbb
fsubl
mov
xlat
cmp
push
xor
lret
xchg
mov
movsl
mov
loopne
mov
aas
iret
inc
adc
test
lcall
pop
pop
leave
arpl
push
sub
push
push
sbb
pop
inc
jae
jmp
xor
orl
test
adc
add
xor
and
test
sbb
fs
push
or
outsl
test
stos
xchg
imul
lds
mov
aas
lods
cmp
xor
push
das
loope,pn
icebp
dec
push
and
leave
mov
ret
popa
imul
out
mov
pop
mov
jnp
test
int3
jecxz
rcl
dec
scas
dec
nop
loope
pop
int3
sub
jbe
mov
or
mov
aam
or
dec
js
mov
hlt
stc
dec
push
xchg
xor
jge
mov
jge
push
out
sbb
pop
mov
imul
pop
clc
ss
mov
int
and
pop
inc
iret
xchg
mov
xor
mov
inc
mov
sbb
pop
inc
lods
fdivrs
das
ret
mov
mov
push
sub
cld
mov
pop
push
dec
aam
mov
les
subl
loop
push
test
roll
lds
dec
xor
push
inc
aad
out
cli
js
cmp
stc
in
xchg
xchg
cwtl
cmp
pop
and
jg
stos
scas
cmpsl
lret
sbb
cmp
bound
and
in
xor
pusha
mov
xor
jmp
ret
add
lcall
lds
loopne
shrb
xor
dec
xchg
mov
fs
lret
add
jge
test
test
pop
push
iret
out
test
out
mov
test
pop
push
lds
ljmp
je
dec
leave
lds
pop
mov
add
sub
sbbl
lods
dec
jge
and
or
mov
cmp
mov
or
push
stos
es
rorb
cmpsl
inc
fiaddl
push
arpl
mov
sbb
je
push
mov
call
lea
in
int3
inc
pop
mov
inc
mov
cmp
mov
push
stos
mov
push
mov
imul
dec
inc
movsl
push
rcrb
dec
incl
scas
cwtl
dec
xor
sahf
gs
lock
scas
cmp
sub
pop
push
jge
inc
adc
xor
sub
test
mov
sub
mov
push
les
xchg
std
cmp
xchg
jns
jo
aad
arpl
ss
inc
jae
mov
imul
movsl
leave
fisubrs
mov
int
xchg
fidivrl
mov
lock
push
xchg
jnp
mov
mov
cltd
mov
arpl
push
adc
sbb
mov
add
cltd
sbb
mov
aam
dec
loopne
mov
mov
sub
int3
shll
push
mov
or
sbb
nop
xchg
movsl
add
rcll
popf
mov
xor
inc
jecxz
int
xor
mov
ja
insb
push
adc
lods
sti
and
cs
fdivs
cmpsl
xchg
mov
insb
jecxz
adc
push
cmc
ret
mov
xor
mov
cmpsb
and
fmuls
pop
dec
mov
loope
cs
cmp
aaa
cmc
jno
faddp
fists
fdivs
int
inc
insb
xchg
push
cmp
inc
lret
gs
mov
call
out
mov
add
je
lods
or
pop
push
xchg
stos
xor
fsts
dec
xchg
cmp
out
adc
iret
sbb
or
cmc
imul
in
push
mov
xor
lea
jnp
nop
andl
jp
push
dec
test
repz
int
movsb
psubw
push
lods
clc
sub
loope
jmp
mov
cltd
push
lahf
adc
sbb
cs
push
out
lret
rorb
rolb
cmp
jns
inc
push
push
dec
cmp
push
xchg
push
pusha
pop
enter
pushf
movsl
jge
outsb
int
adc
and
jle
inc
gs
pop
push
push
icebp
int3
test
sbb
movsb
and
xchg
fistps
pop
in
push
add
adc
pop
lret
lock
mov
mov
sub
mov
jmp
pop
repz
mov
sbb
xchg
loopne
cmp
in
js
sar
out
testb
loopne
dec
adc
lds
xchg
cmp
push
rcrl
jbe
iret
and
imul
mov
and
test
pusha
jnp
cmp
sbb
decb
outsb
lret
adc
cmc
xor
rcl
repz
mov
adc
clc
adc
sub
push
je
jns
add
lahf
lsl
xor
test
push
je
mov
cmp
sbb
mov
fiadds
pop
adc
imul
neg
daa
jg
out
sub
imul
sub
push
jne
scas
mov
cmp
sub
int3
movsl
adc
loop
push
push
xchg
mov
inc
or
andl
in
mov
scas
mov
pop
or
int3
xchg
ret
push
shll
test
or
jl
lcall
xor
cli
lcall
lret
mov
popa
cmp
pusha
lods
pop
dec
lcall
inc
sbb
adc
dec
enter
mov
adc
xchg
jg
int3
test
into
mov
shlb
in
add
insb
sbb
cmp
xchg
jnp
sub
out
ror
cmc
int
sub
push
mov
jl,pn
repnz
mov
in
xchg
add
cmpl
sub
xor
fdivl
lcall
and
mull
sbb
pop
jecxz
mov
mov
inc
cmp
test
faddl
mov
cmpsb
mov
repnz
fsubs
testl
jnp
scas
sbb
push
add
dec
pop
pop
xchg
lods
jle
xchg
xor
fcmovnu
dec
sahf
or
xchg
leave
mov
mov
bound
push
or
pop
adc
js
sub
rclb
loopne
imul
dec
xchg
and
inc
mov
faddp
mov
pop
addl
js
add
mov
mov
inc
flds
lret
adc
loope
test
and
into
ss
sti
das
or
jp
push
cmp
inc
pop
sub
fwait
popa
sbb
jne
cs
xor
cmp
test
fwait
and
pop
lds
sub
dec
mov
cli
or
dec
xchg
in
imul
cmp
repz
outsb
enter
pop
mov
cmp
dec
pop
xchg
push
out
fimuls
jmp
cmp
cmp
cmpsb
lea
inc
or
cmp
sti
add
dec
add
shrb
ret
jg
inc
cmp
jl
loope
cld
imul
jl
pop
lea
push
jbe
scas
xor
mov
inc
pop
cmpsl
xor
adc
xlat
in
fwait
mov
ljmp
sub
fisubrs
das
mov
inc
push
lock
movsl
sbb
xchg
push
arpl
shll
mov
and
lret
inc
incl
cmp
out
jnp
and
shl
mov
sbb
push
adc
fistpll
inc
arpl
in
test
or
dec
mov
pop
cmp
loop
sub
ds
outsb
push
ror
loope
dec
adc
dec
or
arpl
inc
sbb
sbb
cmp
cmp
shll
jp
imul
jne
jl
es
js
das
xchg
sub
mov
xor
icebp
sub
and
xchg
lds
cmpb
or
cmp
jmp
sbb
sub
mov
test
imul
std
or
js
jo
add
int3
mov
or
fsub
push
fiaddl
jge
cmp
stc
mov
shl
xchg
ss
push
pop
ds
xlat
in
call
xor
cmp
lods
sti
outsb
add
in
xchg
movsl
and
push
add
bnd
or
shlb
pop
jmp
inc
nop
cmp
dec
pop
xchg
andb
add
shll
inc
loopne
xor
jge
and
pop
xor
div
sbb
subl
gs
add
cmp
ljmp
leave
leave
jno
ficoml
cli
adc
idiv
push
and
jp
lods
push
mov
and
sar
dec
pop
fstpt
test
add
xlat
in
and
aaa
adc
push
inc
push
mov
loopne
inc
iret
mov
scas
inc
inc
in
and
inc
loop
xchg
dec
lcall
add
dec
repnz
dec
mov
fists
pop
sub
add
into
call
mov
xchg
gs
or
sbb
push
mov
inc
insb
aam
test
dec
pop
xchg
dec
add
and
mov
mov
shlb
push
iret
xchg
dec
out
shlb
gs
cmpsl
lsl
movsb
gs
pop
outsl
push
cmp
mov
in
data16
clc
dec
xchg
aad
fistps
push
out
add
xlat
js
jbe
sti
dec
test
das
das
cmpsb
mov
jne
imul
add
xchg
sub
stos
js
call
comiss
mov
repnz
cwtl
rcr
adc
push
mov
jbe
jp
push
and
mov
icebp
xorps
jae
dec
jle
stc
push
imul
dec
scas
mov
jmp
jmp
inc
add
jle
jle
jno
lods
sbb
fistpll
mov
stc
xor
popf
movsb
pextrw
add
ljmp
sahf
test
push
lock
pop
mov
ljmp
outsl
insl
cwtl
leave
cmp
xor
pop
push
jb
dec
lahf
mov
data16
inc
jnp
popf
test
data16
sub
lret
mov
in
mov
cmp
cmp
data16
and
fcoml
cmpsl
shrl
inc
push
adc
and
xor
hlt
xchg
call
mov
xlat
inc
dec
xchg
and
iret
test
add
lds
aad
pop
push
cmp
fimull
test
dec
jle
xor
fdivl
hlt
push
bound
cmpsb
mov
cmp
inc
and
and
ljmp
push
pop
sbb
sahf
add
mov
lcall
das
dec
std
inc
pop
push
mov
ret
mov
xchg
jmp
mov
mov
mov
dec
jecxz
mov
insl
xor
and
mov
in
push
imul
cs
adc
outsl
and
add
in
and
add
adcl
andl
xchg
jl
jg
jae
popf
cld
xor
push
out
pop
shll
cli
cmp
push
lods
out
pop
sub
sahf
push
pop
mov
notb
sub
cltd
xchg
sub
pop
jo
or
out
aam
ljmp
fs
dec
into
mov
jae
sti
push
mov
mov
rcrb
lods
jle
inc
add
jnp
xchg
iret
lahf
or
cli
xchg
xchg
inc
pushf
jbe
test
gs
fidivl
lds
call
sbb
test
movsl
gs
sbb
sub
pop
cmp
sub
enter
xchg
xchg
fcoml
mov
xor
cmp
lret
and
lods
out
les
inc
inc
mov
aaa
sti
cmpl
addr16
fcmovnb
push
fnstcw
inc
mov
cmpsl
push
pop
mov
adc
lret
shrb
jmp
sub
jno
jno
xlat
xor
test
in
lock
sub
push
inc
lret
sbb
out
sub
aam
push
lret
xor
push
push
inc
inc
mov
jecxz
add
sbb
repnz
mov
orb
ret
push
cwtl
push
cmp
xchg
lds
xchg
fsubl
setle
mov
mov
jg
pop
adcl
std
ret
push
int3
inc
sub
data16
les
lcall
mov
outsb
mov
lret
pop
mov
or
sti
cli
inc
in
sbb
inc
cli
mov
decb
cld
or
jg
ret
aam
bound
xor
int3
sbb
adc
push
ret
fildll
call
and
into
aad
push
adc
sti
addr16
adc
xchg
rcll
pusha
xchg
jns
mov
adc
push
mov
ss
jg
push
shlb
inc
add
adc
pop
xor
lret
aam
jae
or
mov
mov
std
sbb
pop
cltd
mov
test
call
out
sti
cltd
and
hlt
int
add
or
mov
push
mov
add
ret
shll
test
movsb
lock
repz
adc
and
shrb
bound
push
push
aas
jge
cltd
xor
or
cmpsb
mov
addr16
popf
out
inc
call
cltd
jg
adc
out
mov
xor
add
out
cmp
dec
aas
pop
std
ljmp
mov
adc
cli
xor
lods
adc
mov
pop
cmpsl
movsl
mov
cltd
adc
in
pop
iret
sub
nop
sub
adc
mov
mov
stc
repnz
xchg
pop
jae
js
in
xchg
ss
icebp
inc
sbb
sbb
popf
cmp
jns
dec
cmp
and
mov
xor
dec
jmp
movsl
adc
imul
stos
iret
incb
shlb
xchg
adc
gs
mov
cmc
loope
jmp
and
cmp
and
sahf
movl
leave
ret
mov
xor
and
jae
shl
xor
iret
andb
mov
push
pop
fidivrl
push
jne
inc
jg
fucomip
xor
jbe
fisubl
or
enter
pop
jmp
xor
daa
aam
cs
push
shll
pushf
mov
pop
fwait
jmp
in
das
into
sti
clc
cwtl
pop
push
cmpsb
test
stos
mov
xchg
jecxz
jp
jb
inc
in
push
test
out
mov
mov
xorb
mov
pop
jp
popf
sti
addr16
loope
mov
and
fwait
sub
jl
mov
into
fucomp
lds
pop
test
xchg
bound
or
fldt
in
cmpsl
xchg
cmp
roll
sub
iret
out
lret
jns
iret
jle
mov
jnp
clc
arpl
or
inc
pop
lock
fcom
loop
mov
xchg
out
fdivrl
jmp
shrb
fdivs
scas
and
pop
cmp
push
sbb
lods
mov
loop
pop
int3
pop
push
pop
sahf
aam
xchg
dec
cli
mov
mov
in
lahf
or
push
push
stos
clc
aas
jp
shll
push
mov
jle
sbb
sarl
jb
cmp
inc
inc
mov
fwait
mov
test
inc
dec
ret
rorb
xchg
mov
adc
push
ljmp
insb
jg
pop
nop
jns
adc
xor
jg
jmp
mov
lods
or
int3
hlt
popa
cmp
testb
and
lock
dec
aas
mov
jbe
lahf
clc
jmp
or
mov
jmp
xor
cmp
stc
jae
fdivr
cmp
mov
or
cmp
or
subps
cmp
jb
pop
fsubrs
adc
xchg
xor
jo
rorb
cltd
xchg
shlb
mov
sbb
dec
sahf
aam
push
or
push
cli
xchg
mov
and
sbb
jno
gs
push
test
mov
loopne
pop
jo
mov
pop
sbb
and
sub
mov
stc
pop
scas
cmp
pop
xchg
lock
arpl
add
mov
out
imul
mov
and
adc
jno
rcrl
mov
push
scas
ja
and
rol
aam
daa
pop
aas
mov
cmp
mov
arpl
pop
push
das
or
mov
cs
fcmovnbe
lahf
pop
lret
adc
adc
pop
shrb
rcrb
out
push
insl
push
cld
test
mov
and
mulb
inc
or
imul
fisttpl
aad
bound
mov
int3
popf
dec
inc
loope
call
sub
ficomps
into
dec
out
mov
fidivl
xlat
jl
dec
inc
outsb
test
loope
pop
mov
xchg
mov
xchg
push
jns
pop
lret
mov
dec
out
pop
in
add
mov
dec
pop
mov
lea
push
dec
mov
mov
ss
gs
xor
aam
sbb
sub
mov
mov
lods
jbe
out
lods
test
loop
jbe
add
cmp
lcall
and
cmp
jecxz
push
add
xlat
pop
cmp
fcomi
xchg
jno
add
bound
shrl
or
mov
fcompl
pushf
inc
dec
gs
adc
into
rcll
int
or
out
addb
dec
stos
push
loopne
lock
jne
out
je
out
enter
jmp
lea
dec
js
or
mov
aaa
adc
scas
xchg
push
gs
push
inc
repz
push
scas
lret
pop
pop
xchg
push
dec
orb
mov
jnp
mov
out
push
shr
mov
and
jmp
push
cmp
imul
rol
sahf
dec
ror
sub
xchg
stc
icebp
lods
sub
js
cs
sbb
in
cmc
ljmp
imul
pop
ucomiss
js
pop
mov
pushf
jne
rol
push
xor
iret
add
pop
inc
jp
push
lahf
dec
push
mov
rcl
mov
clc
in
in
arpl
test
mov
jp
sbb
lahf
lahf
int3
popa
xlat
cmp
rolb
dec
rcrl
jo
xorb
sbb
mov
movsb
fstps
faddl
sub
add
and
imul
mov
aaa
inc
mov
lea
mov
sbb
imul
sbb
outsl
and
and
push
or
test
push
scas
mov
jecxz
js
cmp
add
ss
mov
daa
cmp
cmp
mov
sub
ds
stos
aaa
inc
out
jecxz
xor
mov
movb
push
jmp
scas
inc
jae
lret
xor
inc
inc
les
test
push
popa
mov
and
ss
push
inc
adc
aam
lods
xchg
pop
push
imul
dec
adc
jecxz
mov
cli
addr16
shl
push
mov
cmpsl
inc
lcall
cmp
out
cld
sbb
insl
loope
aaa
movsl
mov
xlat
sbb
cwtl
xor
dec
push
adc
push
adc
scas
jnp
loopne
js
fdivrl
cmpl
movb
loopne
xchg
lea
mov
inc
mov
cmp
sarl
xchg
lock
mov
mov
aaa
mov
inc
inc
fstpl
lods
sub
insb
adc
ret
or
clc
cmpb
rcr
mov
nop
xchg
xchg
xchg
cmp
adc
pop
pop
dec
mov
or
xor
sbb
shrb
test
push
dec
push
push
adc
xchg
sbb
ss
sbb
push
dec
sbb
push
les
mov
jnp
push
pop
int3
movsb
out
adc
xorb
mov
out
mov
xor
mov
subl
adc
dec
into
or
les
cmp
sti
sub
or
lret
aam
mov
xor
jae
sub
jns
mov
pop
pop
sbb
lods
dec
jbe
xorb
addr16
xchg
mov
sub
xchg
mov
pop
mov
mov
sub
or
outsl
pop
test
jle
les
dec
inc
add
lods
sahf
sahf
inc
fldcw
xor
or
pop
outsb
add
pushf
test
ja
out
pop
lods
andb
sbb
fld
lods
add
push
into
and
jle
mov
shlb
sahf
mov
pop
fcoml
jmp
mov
push
enter
imul
jbe
shll
xor
and
call
fstpt
cmp
pop
or
cmp
ret
das
cmp
jo
icebp
verr
dec
push
xchg
shll
pop
loopne
sarl
rorb
das
dec
pop
cmp
inc
addl
lea
cli
cmc
mov
pop
push
insb
pushf
lock
sub
dec
lcall
and
cmp
push
call
cld
insl
rorl
inc
mov
bound
call
std
call
es
dec
repnz
js
cmpsb
imul
inc
adc
test
xorb
xor
jnp
aas
jne
mov
xchg
outsb
pop
rolb
cli
into
sub
pop
int3
jae
scas
mov
faddl
out
or
aaa
loope
cmp
push
inc
pop
adc
jmp
sarb
fs
pop
jnp
icebp
les
out
pop
cltd
popa
shr
mov
repz
icebp
add
outsb
les
push
mov
jae
xchg
mov
and
add
mov
int3
or
or
pop
mov
sbb
mov
rorb
mov
mov
mov
imul
inc
or
scas
xor
xor
sub
ds
stos
nop
add
xor
sub
das
xor
sti
adcl
push
mov
jb
pusha
rcrb
cmp
or
sarl
xchg
push
faddl
lret
inc
loope
or
or
or
jg
jmp
pusha
lea
inc
loopne
lock
dec
jp
scas
push
fldt
or
aas
sbb
jne
mov
mov
sahf
int3
loope
jle
jge
pop
pop
mov
jae
jg
sbb
mov
stc
mov
sub
and
or
sub
jl
pop
aam
ds
pop
cmp
aaa
test
pop
jns
cmp
lahf
dec
sub
notl
bound
std
xchg
mov
loopne
sbb
imul
lahf
test
adc
mov
das
ljmp
mov
mov
sbb
popf
xor
inc
dec
add
outsl
test
mov
shlb
dec
mov
sbb
int3
stc
pop
movsb
adc
shrl
fwait
jns
dec
movsb
sbb
and
hlt
in
and
sahf
dec
sbb
jne
add
ret
mov
out
pop
mov
add
fs
mov
pop
pop
sub
cmp
ss
jmp
adc
hlt
xor
mov
inc
ret
scas
ss
and
mov
mov
jns
aaa
incb
imul
push
xor
push
out
rcrb
cmp
cmp
inc
dec
sub
pop
addl
aad
pop
fidivl
mov
mov
lahf
les
btrl
dec
xor
stc
jl
scas
testl
ja
xchg
imul
pop
nop
or
and
mov
scas
fcmovbe
mov
dec
adc
inc
movsl
sbb
sbb
jle
rclb
hlt
mov
xlat
out
mov
test
dec
pop
mov
aaa
lea
pop
push
fs
or
sbb
nop
pop
aam
add
cld
pop
testl
lret
inc
mov
sub
adcb
pop
nop
clc
jns
fisttpll
mov
or
and
rorl
fbld
mov
lret
sahf
mov
pop
sbb
sub
push
enter
and
xor
gs
xor
pop
dec
adc
jbe
lcall
in
data16
fistpl
mov
test
popf
mov
lods
cmp
or
or
adc
cmpl
daa
outsl
add
outsl
movsb
pop
and
mov
xlat
dec
movsl
and
arpl
sahf
pop
repz
out
jge
xchg
cmp
and
mov
icebp
outsl
jp,pt
mov
push
push
and
cmpsl
inc
xchg
les
sub
xchg
mov
pusha
sbb
dec
mov
ret
cs
notb
scas
jae
out
test
mov
lods
inc
jne
cmp
or
mov
out
fidivrl
push
jge
ret
inc
or
adc
in
xlat
mov
or
sub
pop
testb
movsl
in
push
notb
push
das
mov
pop
iret
fldt
fbstp
sti
inc
cmp
mov
dec
imul
ds
call
adcl
jge
add
enter
add
loopne
inc
sbb
push
or
lods
dec
xchg
adc
xchg
xchg
adc
daa
shll
sti
sub
imul
mov
sti
icebp
out
dec
dec
mov
pop
loopne
fs
scas
mov
sub
add
mov
xor
jmp
iret
mov
loop
dec
mov
sub
xor
sbb
shll
push
jno
leave
stos
xchg
xor
pop
aam
jnp,pt
mov
fistl
dec
dec
or
dec
scas
loopne
mov
cmpsl
add
or
pop
mov
in
xor
add
or
and
addr16
xchg
jae
lea
push
xor
mov
jle
inc
andl
add
test
push
in
mov
lret
jnp
mov
lds
push
daa
jge
fiadds
add
xor
or
mov
aas
data16
inc
ret
inc
cmpsb
cmp
and
icebp
ret
adc
or
jg
out
test
iret
fcmove
out
lcall
pop
mov
lret
inc
jae
gs
enter
mov
rcl
jg
insl
xor
fwait
sub
jle
dec
hlt
xor
mov
daa
aam
outsl
int
aam
mov
pop
and
push
ret
and
push
adc
cmp
sub
nop
jno
jo
inc
jmp
scas
je
cmp
pushf
sbb
mov
lds
inc
es
iret
or
insb
movsl
mov
lds
mov
lods
rcl
lock
test
subl
add
add
or
outsl
ret
mov
loope
sub
or
mov
adc
mov
mov
inc
xchg
mov
inc
test
and
xchg
mov
jecxz
mov
mov
push
dec
jmp
stc
imull
and
pop
jmp
fildl
sub
clc
xchg
ret
orl
jl
and
or
outsb
aad
jecxz
pop
leave
mov
in
pop
aaa
aas
push
mov
test
mov
sbb
dec
mov
lret
mov
or
cmp
xchg
les
add
inc
gs
or
add
fcmovnu
push
inc
sub
je
fnstenv
mov
std
stos
xchg
xchg
xchg
test
inc
sub
popf
and
jnp
ja
addr16
mov
pushf
jge
adc
push
lods
gs
cltd
pop
outsb
xor
sub
pop
mov
and
cmp
xchg
jg
imul
push
add
enter
f2xm1
es
out
sub
dec
loopne
cmp
cltd
jecxz
rcrb
popa
jle
mov
test
in
jae
movsb
push
push
mov
xchg
lahf
sbb
pop
jnp
arpl
std
cwtl
insl
pop
pop
cli
loop
mov
mov
cmp
pop
add
jmp
ljmp
mov
test
pop
sub
add
push
mov
adc
data16
mov
dec
inc
jl
mov
into
inc
xchg
movsl
imul
or
cli
cmp
xchg
mov
mov
leave
xchg
call
ds
xcrypt-cfb
cmpsl
arpl
or
jecxz
mov
xchg
or
test
cmp
push
js
pop
mov
mov
cmp
fwait
inc
fs
dec
cmp
les
outsl
test
push
nop
stos
data16
inc
test
in
push
imul
push
test
inc
dec
fwait
rorl
aas
mov
push
cwtl
jecxz
mov
fcomps
aad
jle
and
cli
repnz
data16
push
mov
mov
pop
aas
sahf
cmp
scas
cwtl
movsb
jns
push
mov
inc
mov
and
jp
sar
dec
or
jl
imul
inc
mov
or
push
inc
push
pop
dec
out
ja
xor
or
inc
pushf
add
push
add
ret
mov
cmp
pop
popf
iret
mov
lods
test
fstps
das
mov
call
aaa
jno
mov
sbb
fwait
or
mov
test
outsb
cpuid
popf
insl
adc
mov
sbb
xor
dec
mov
cmp
shr
add
pop
vpshufd
xchg
sbb
rolb
movsl
xchg
pop
outsb
pushf
cmc
and
push
scas
inc
jno
shlb
xchg
repz
jns
xor
push
mov
in
call
mov
dec
xor
cs
xor
sub
test
nop
adc
adcl
sub
popf
mov
jb
pop
jb
and
js
mov
and
fnsave
sub
inc
xor
ffreep
test
cmpl
mov
mov
and
and
xor
xchg
andb
xor
jmp
mov
scas
cmp
cli
dec
test
cmpl
les
xor
adcl
lret
ljmp
xchg
lcall
xlat
inc
clc
rcll
insb
lahf
imul
fst
dec
nop
add
pop
sub
dec
cwtl
inc
jne
jmp
jae
mov
xor
sub
loopne
inc
mov
mov
sbb
push
sbb
adcb
lret
push
and
fdivs
xchg
cwtl
fldcw
jge
test
sbbl
movsl
shrl
out
std
movsb
lods
and
loope
pop
sub
mov
mov
mov
arpl
int3
and
iret
push
rorb
gs
popa
in
in
clc
mov
xchg
jae
add
pusha
dec
insb
xor
jl
mov
movsl
pop
adc
mov
mov
sbb
outsl
imul
mov
test
cmpsl
sbb
dec
jecxz
aam
push
stos
inc
popa
xor
leave
ret
gs
cltd
push
inc
imul
fildll
xchg
insl
inc
mov
lock
pop
ljmp
or
push
imul
lds
in
xor
xor
add
data16
mov
jmp
lea
daa
aam
stos
sub
cltd
loopne
sub
ror
loopne
cli
into
cld
test
fsubs
outsl
push
test
sub
icebp
pushf
pop
or
add
jo
and
scas
cli
or
jle
enter
sbb
notl
sarl
addl
xchg
aam
mov
xlat
sbb
das
scas
mov
mov
xor
subl
in
jnp
notb
push
popf
cli
mov
out
pop
cmp
mov
mov
add
xor
pushf
push
inc
sbb
xlat
add
add
dec
loop
pop
push
mov
mov
incl
xor
mov
sub
movsl
jmp
aad
jp
mov
pop
jg
dec
movsb
mov
lds
push
imull
cmpl
mov
into
cwtl
add
mov
in
aad
decb
out
sahf
xchg
test
test
push
xchg
jo
or
in
imul
push
sti
jge
les
ja
jl
imul
xor
cwtl
cwtl
jp
mov
jle
shl
jge
lahf
xchg
xchg
jno
mov
or
bound
into
and
shrl
pop
sbb
es
xor
jmp
rcrb
out
adc
pop
aas
lods
mov
icebp
pop
insl
push
stos
dec
xchg
jmp
and
inc
loopne
stos
add
stos
mov
jecxz
cmp
movsb
movsl
aad
and
jl
outsb
aaa
push
inc
jge
pop
addl
sarl
orl
enter
out
test
leave
cltd
sti
faddp
ret
lods
sub
movsb
adc
fistl
sub
mov
in
push
lret
mov
push
cwtl
xor
mov
dec
mov
jne
in
sub
cmp
sub
aaa
and
dec
mov
mov
fidivs
clc
imul
repnz
xor
dec
int
xor
xchg
inc
clc
stos
xor
leave
dec
mov
lret
inc
fmulp
nop
jo
add
cli
cli
das
xchg
dec
pop
std
mov
dec
lods
add
test
mull
inc
movsl
xor
std
addb
loopne
sub
and
and
lret
or
ss
fcompl
inc
pusha
and
stos
lock
push
mov
mov
pop
pushf
sbb
pop
fbstp
inc
into
sbb
insl
icebp
push
dec
pop
adc
mov
pop
adc
jge
xchg
push
aaa
aas
mov
cmpb
push
mov
sbbb
adc
enter
gs
cmp
mov
fstpt
imul
imul
je
dec
stc
js
adc
add
jecxz
repz
ljmp
push
jnp
fwait
dec
xor
fwait
shl
pop
mov
iret
out
jnp
insl
lods
jbe
inc
fidivrl
xor
cmp
sub
cld
cmp
fdivrs
jno
jge
ror
ds
dec
aas
pusha
pop
lret
js
pushf
maxps
js
or
aaa
dec
ret
inc
lock
xchg
mov
call
in
push
loope
daa
iret
cwtl
pop
fidivrl
sbb
mov
jnp
adc
enter
mov
lret
ficomps
pop
pop
or
jmp
and
out
sub
xchg
movsl
inc
in
cmpsl
rcr
hlt
add
sbb
popf
js
adc
pop
cmp
insb
push
jo
sub
pop
mov
and
stos
xchg
and
jbe
xchg
repz
jns
jno
test
loopne
dec
or
adc
outsl
daa
jno
iret
jge
add
les
dec
fmull
shlb
inc
inc
nop
mov
or
push
lcall
xchg
mov
frstor
pop
daa
jbe
mov
sahf
and
out
lcall
in
stos
fsubl
fistps
fsubp
hlt
inc
inc
sub
fsubrp
ret
add
adcb
pop
or
xor
xchg
cmp
idivl
divb
out
enter
push
pop
xchg
mov
add
outsb
imul
addr16
sbb
dec
stc
shlb
or
aas
stos
inc
fstps
pop
lret
enter
cmpsb
aad
mov
add
mov
mov
jno
test
aaa
xchg
aam
or
xor
and
test
test
nop
js
call
mov
daa
jl
leavew
sbb
cmovp
sbb
adc
push
jns
or
stos
ret
push
outsb
sbb
aaa
insb
cmp
mov
outsb
push
insl
stos
movsl
ds
gs
adc
xor
adc
or
dec
jp
or
adcb
data16
mov
mov
pop
mov
or
dec
out
testb
pushf
xor
inc
cmc
inc
xorb
faddl
pop
pop
add
inc
sbb
mov
movsb
jb
pop
and
inc
cmp
negl
movsl
sti
cld
push
ljmp
pop
movb
int
push
push
popa
lea
out
and
test
clc
sarb
les
mov
xor
xchg
ljmp
dec
test
fdivl
push
in
or
aam
and
test
pusha
dec
int
cmp
sub
and
stos
test
cmc
jmp
aas
into
or
mov
xchg
jne
sub
add
jle
pop
sahf
push
cmp
pusha
lret
cmpsl
mov
sub
sar
xchg
mov
into
or
mov
push
dec
and
mov
leave
int
out
xchg
mov
and
add
int3
sbb
pop
mov
test
call
movsb
arpl
fs
cmpsl
pop
adc
adc
clc
push
std
pop
fs
outsb
iret
add
cmp
push
or
pop
mov
scas
add
aam
scas
and
inc
les
pop
xor
in
popf
xchg
lcall
clc
fists
scas
inc
push
int
not
cmp
fmuls
adc
test
dec
push
xor
jp
les
xchg
in
push
dec
iret
in
and
inc
cmp
fmulp
pop
in
rclb
mov
pop
dec
and
push
mov
jne
xor
push
lahf
lret
or
sbb
cld
push
xor
fwait
adc
cwtl
add
sbb
mov
scas
xorl
mov
pop
pop
dec
incl
cmpxchg
pop
add
add
ficoml
mov
loope
or
rcl
jae
pop
and
icebp
mov
push
sbb
jo
mov
fadds
pop
or
cmp
or
pop
mov
adc
and
pop
jnp
fidivl
mov
xor
mov
inc
pop
sub
jb
sbb
aad
jae
push
loop
xlat
outsl
mov
xchg
mov
inc
cmpb
rcr
cmp
mov
or
cmpsb
stos
jb
cld
mov
mov
test
sbb
or
push
cmp
nop
sti
push
stc
dec
loop
mov
adc
ficompl
jne
jns
inc
je
imul
dec
xchg
xchg
repz
push
fsubs
mov
cmpl
and
jae
lret
out
cmpsb
push
xchg
lret
rcrb
ja
cmp
pop
mov
jno
add
jecxz
imul
sahf
cwtl
out
cmp
push
shrb
lea
int3
push
inc
outsb
push
cmp
xor
dec
dec
jge
nop
mov
and
adc
fstpl
or
out
dec
push
lods
bound
out
mov
daa
in
push
mov
test
mov
inc
mov
imul
ret
xchg
movsl
mov
hlt
xchg
push
mov
das
or
nop
dec
mov
popf
ret
leave
popa
cmp
shlb
adc
leave
int
es
mov
xchg
cmp
jns
test
push
scas
sahf
sarb
xchg
jb
lods
ja
lea
xor
mov
gs
jne
xor
loopne
loopne
lock
lahf
fisubl
jmp
add
movsl
cmpsl
testb
cmpsb
dec
add
sub
lret
push
lcall
xor
test
sahf
cmp
adc
sub
push
stos
xchg
loope
xchg
xchg
imull
ja
mov
jl
mov
icebp
and
push
xchg
sub
pusha
imul
cwtl
sbb
xlat
in
cmp
adc
popf
push
or
jmp
cmp
xchg
pop
fsqrt
outsl
aad
cmpsl
and
sbb
jo
testb
nop
sub
xor
lods
push
imul
outsl
fcmovnbe
and
lea
sub
fldlg2
enter
mov
xchg
adc
hlt
inc
jnp
inc
in
pop
fsubl
mov
mov
adc
jne
xchg
outsl
shll
xchg
pop
push
pop
jp
inc
int3
lahf
mov
cmp
pop
gs
sbb
shlb
or
xor
xlat
nop
mov
pop
insl
fildl
and
cs
xchg
out
fwait
mov
lea
hlt
call
push
es
cmp
add
cmp
hlt
push
fcmove
pusha
insl
mov
xchg
repnz
int
imul
adc
sbb
cwtl
daa
and
scas
or
pusha
sub
xor
gs
rclb
jo
mov
push
arpl
sbb
call
rcll
movsl
out
jp
aas
in
test
enter
adc
fs
out
loop
test
mov
mov
out
push
aaa
sub
jbe
jo
stos
ljmp
dec
test
aad
adc
lods
insb
notb
or
mov
jg
sbb
nop
cmp
inc
bound
cli
push
lods
pushf
add
mov
dec
lds
sbb
sub
arpl
in
or
sub
or
mov
fiaddl
cmpl
out
sahf
push
or
out
xchg
lock
divb
lds
aam
ret
and
dec
or
push
or
loop
int
pop
push
push
and
test
lea
movsl
fcom
idivl
test
jg
mov
dec
mov
cltd
mov
xor
lock
lods
fstpl
clc
sbb
or
daa
std
push
lret
jle
call
mov
outsb
fldl
ss
ljmp
int3
cs
adc
dec
inc
jne
fcompl
sar
jecxz
add
mov
mov
test
das
out
pusha
sub
xor
int
in
gs
jns
jb
dec
mov
imul
fimuls
rcr
testb
rclb
paddb
jmp
mov
cmpsl
mov
fdivrl
or
xchg
pop
aad
pushf
cli
or
lock
repz
xor
xor
push
inc
xchg
jge
fmuls
dec
xchg
mov
out
and
neg
add
into
push
sti
mov
lret
sub
dec
push
jne
out
enter
pop
es
add
cli
add
insb
sub
je
or
pusha
icebp
pop
add
sbb
jnp
cmp
shrb
fbld
dec
mov
outsb
in
or
mov
xchg
rolb
repnz
out
add
dec
fwait
mov
jmp
xor
fwait
xor
les
mov
pop
dec
sbb
push
out
xchg
rolb
sti
add
pavgb
cmc
or
pop
xchg
fnstenv
push
js
mov
add
insl
iret
add
rcr
pop
popa
lea
push
mov
or
cmp
shlb
loope
iret
sbb
xor
xlat
test
and
ret
popa
mov
iret
xchg
cmp
jle
mov
loope
pusha
mov
push
fbld
cld
xchg
stc
mov
mov
push
push
cmp
add
outsb
cmpsb
adc
adc
push
fbld
xor
pop
cmp
xchg
mov
ja
std
lcall
xchg
inc
cmp
push
pushf
push
loopne
dec
repnz
cld
mov
repnz
xchg
inc
call
fdivr
fdivrs
popf
and
adcl
and
out
shll
push
sarl
mov
test
add
iret
js
out
cltd
jo
lods
test
mov
out
mov
or
sbb
jecxz
mov
mov
in
ret
dec
mov
inc
mov
cmp
push
jb
adc
dec
push
cmp
into
dec
adc
iret
mov
fiadds
popf
loop
fdivs
add
adc
fdivl
cs
in
lret
jb
or
test
sub
out
out
movsl
les
jno
or
test
push
aad
sub
and
inc
sub
ret
clc
ror
mov
leave
lret
test
adc
adc
out
and
or
inc
adc
add
lcall
dec
outsb
cmp
imul
push
pop
popf
xlat
das
in
xor
ds
push
push
ret
jne
cmpsb
push
push
into
outsb
xchg
call
lock
xor
jno
js
dec
das
adc
xor
test
sub
lds
mov
mov
popa
loope
push
mov
inc
cmc
testb
test
aaa
pop
scas
dec
mov
faddl
dec
xor
shll
mov
fsubr
cld
inc
lcall
in
pop
loope
add
in
incl
adc
pop
fwait
sub
sbb
mov
jmp
rorb
adc
inc
jp
data16
mov
out
xor
dec
test
and
add
dec
mov
jle
idivb
in
jnp
xor
ficomps
add
inc
mov
adc
in
out
xlat
cmp
hlt
cmp
lock
push
fbstp
sbb
xchg
das
and
repz
xchg
fidivrl
xchg
out
insb
addb
inc
stos
test
cmp
xlat
cmpsl
mov
mov
cltd
mov
sbb
mov
and
loop
jnp
mov
lcall
fldenv
sbb
int3
ljmp
rclb
push
cmc
dec
movsb
jg
mov
lods
hlt
push
test
mov
dec
cmpsb
pop
les
repz
or
sbb
das
mov
cld
addr16
adc
push
add
mov
inc
sbb
test
jno
sbb
in
orb
mov
xlat
loope
inc
xor
inc
pop
and
jle
xchg
cmpsb
jecxz
jmp
add
mov
mov
repz
xchg
out
jge
int
mov
cwtl
movsl
arpl
stc
or
or
dec
push
mov
lea
mov
stos
in
sub
or
jne
in
stc
cwtl
pop
rolb
mov
mov
xor
adc
iret
je
not
mov
add
shlb
jnp
cmpsb
in
jle
idivl
sti
aad
mov
mov
jmp
or
mov
pop
sbb
imul
and
test
data16
jp
icebp
cwtl
xchg
mov
clc
sar
jnp
movsb
std
jb
xchg
fwait
clc
es
pop
fbld
fisubrl
cmp
dec
shlb
xor
mov
xor
pop
lret
clc
and
jbe
arpl
outsb
daa
and
pop
lea
stos
xchg
push
das
sub
pop
mov
lret
mov
in
sbb
dec
push
popa
or
xchg
fdivs
sbb
mov
daa
pop
pop
pusha
add
sahf
sbb
lcall
sub
pop
nop
jnp
fcmovnb
push
dec
cmp
fistpll
xor
ret
inc
repz
fistpll
into
mov
pop
mov
push
rcr
test
xchg
lcall
sub
repnz
mov
jae
push
jg
test
push
inc
repz
pop
pop
incb
test
out
shll
jo
aas
fstpl
mov
adc
jge
test
cs
xlat
mov
lret
lcall
jp
dec
xchg
cli
or
fmull
das
mov
push
push
dec
push
mov
mov
jmp
sbb
or
bound
jae
mov
xchg
int
xchg
sarl
jge
sbb
hlt
faddl
adc
pop
subl
incl
cmp
sub
ss
add
pop
and
and
lahf
gs
pop
add
lods
outsl
dec
aam
outsb
xor
rcr
mov
or
or
dec
int
pop
mov
mov
lds
subb
into
mov
imul
cmp
cmp
mov
out
xchg
popf
pop
cmpsb
lea
adc
imul
xor
sbb
add
adc
into
pop
jmp
ss
shlb
mov
movsb
repnz
push
cmpb
decb
pop
or
lds
mov
pop
cwtl
jg
cmpsb
pop
pop
adc
pop
and
xor
pop
mov
dec
adc
testl
mov
fistps
sub
pop
jmp
xchg
stos
push
in
enter
test
push
psllq
iret
out
lods
pusha
out
pop
icebp
jmp
aaa
mov
mov
xor
loope
mov
and
aad
data16
sbb
popf
call
and
stos
not
ja
inc
xor
enter
shrb
lods
rol
mov
push
jns
scas
jae
test
xor
dec
lcall
stos
cmpb
cmpb
or
rclb
inc
aad
imul
es
cs
and
mov
mov
sub
jg
xor
loopne
andb
adc
dec
xchg
adc
mov
pop
data16
insl
cmp
cmpsb
lock
and
mov
sbb
sbb
lret
or
imul
sub
pop
or
fsubr
lods
dec
mov
addr16
or
inc
jl
push
push
push
xchg
out
cmpsl
iret
int
notb
outsb
jmp
in
adc
adc
cltd
mov
jno
dec
shlb
adc
sarb
mov
jb
enter
sbb
mov
shrl
adc
in
and
cs
and
mov
mov
mov
fs
lcall
inc
cmp
jns
or
in
mov
jae
sbb
les
add
test
daa
xchg
js
es
sub
pusha
sbb
lcall
add
adc
add
outsb
push
sbb
mov
sbb
xchg
inc
xor
mov
xchg
gs
and
aas
xchg
mov
cmpl
pop
lcall
xor
dec
rolb
jg
in
movsl
lret
xchg
mov
push
enter
mov
ds
sub
loop
push
adcl
jne
inc
aam
mov
aam
fcmove
fadds
cmp
getsec
and
test
push
stos
xchg
push
insb
cmp
rorl
ficoml
loope
mov
mov
aam
pop
lcall
xor
mov
sbb
or
sbb
in
in
pusha
ret
stos
jae
rcl
clc
dec
test
pop
lea
jns
adc
rclb
ror
push
inc
mov
adcl
dec
dec
lahf
dec
mov
dec
das
jecxz
cmp
mov
imul
data16
js
shll
cli
pop
mov
inc
frstor
push
dec
out
and
out
mov
scas
data16
jnp
or
mov
xchg
sbb
outsl
jnp
ret
fdivp
lds
stos
out
pop
mov
lret
ret
mov
pop
mov
mov
cmp
stos
dec
insb
loopne
sub
sub
sbb
sbb
int
xor
add
push
or
sub
popf
jg
add
andl
mov
popf
and
ja
add
jp
pop
inc
cmp
test
mov
xchg
cmp
scas
dec
pop
inc
jno
dec
ffreep
and
xor
push
mov
sub
in
pushf
xlat
sahf
push
in
pop
adc
es
jle
out
pop
lret
mov
mov
add
filds
xor
ljmp
imul
mov
frstor
mov
mov
adc
stc
jns
imul
out
rcll
xor
lds
mov
ftst
or
out
fwait
push
mov
xchg
inc
pop
jge
push
or
jno
dec
push
push
in
or
and
and
inc
adc
push
sub
xchg
std
into
lods
sarb
push
push
sbb
mov
sub
mov
arpl
in
sbb
cmp
xor
sub
hlt
inc
dec
push
cmc
int3
clc
mov
out
sbb
mov
adc
jle
in
pop
mov
cmp
out
insb
loope
repnz
mov
push
push
push
mov
inc
mov
stos
imul
xchg
lods
fcoml
jbe
jle
jl
jecxz
cmpsl
inc
insb
mov
mov
cmpsb
mov
mov
les
ja
or
mov
inc
lret
fdivl
daa
jb
sbb
sti
add
add
rcrb
dec
dec
lret
in
mov
icebp
pop
lods
stos
test
pop
push
clc
mov
push
movsb
cmpsl
inc
or
mov
and
loope
mov
xchg
or
sahf
int
outsl
pushf
fwait
std
xchg
fsts
into
and
dec
dec
fwait
orb
aas
clc
add
and
adc
or
notl
add
push
cmp
int3
daa
cmp
repnz
sbb
jge
js
lahf
pop
pop
jmp
fisubl
int
pop
inc
adc
loop
nop
jo
pop
or
in
mov
rolb
push
sbb
mov
rcrb
cmpsb
hlt
fcomi
divl
push
push
pop
or
sub
fld
cmpsb
dec
scas
xchg
repz
xor
push
call
inc
mov
mov
cmp
xor
inc
shll
cld
inc
jbe
xor
icebp
movsb
scas
jmp
or
pop
sub
lret
pop
push
mov
jecxz
inc
mov
test
repnz
icebp
mov
or
dec
scas
push
and
das
test
and
lcall
adc
icebp
jl
cmp
aaa
bound
stc
test
jno
xchg
jb
dec
aam
jmp
popa
push
cwtl
xor
pusha
dec
lock
push
fwait
xchg
jae
jo
adcl
mov
and
jns
add
adcb
adc
stc
jecxz
pusha
test
rcll
sbb
xchg
ljmp
insb
test
or
fdivs
clc
outsl
inc
xor
xchg
and
lock
lahf
loop
jno
rcl
cmp
dec
lods
xchg
cli
arpl
mov
outsb
lea
insl
mov
push
aas
push
adc
xchg
mov
cmp
cmpsb
je
push
scas
mov
bound
mov
mov
push
lret
mov
movsl
out
xor
lahf
je
jbe
mov
adc
pop
ljmp
pop
mov
pop
cmp
mov
mov
dec
push
scas
inc
xor
xchg
std
and
pop
jbe
in
ficompl
aad
mov
lods
testl
enter
add
out
and
mov
mov
arpl
into
pop
cmp
imull
je
lea
fistps
jp
mov
into
std
jae
jbe
mov
pop
pop
mov
cld
sbb
xchg
clc
pop
aad
mov
push
mov
pop
ds
jmp
into
mov
imul
fsubl
or
in
cwtl
lcall
push
stos
fwait
add
arpl
repnz
pop
out
jnp
xchg
cwtl
push
xor
mov
out
clc
mov
jl
stos
adc
into
addr16
push
lock
pop
cmp
aam
mov
aaa
dec
icebp
xor
fsts
nop
dec
stos
sti
or
dec
aad
fildll
adc
rcr
outsl
pusha
pushf
pop
cld
pusha
inc
sub
jno
outsl
push
fistpl
notb
addr16
xchg
clc
out
in
or
add
jns
aam
in
sub
insl
or
xor
stos
adc
sbb
shll
jg
mov
mov
les
jno
pop
lds
aas
xor
mov
and
mov
pop
fnstenv
xchg
hlt
into
stos
or
fwait
push
insl
or
in
je
sarl
sarb
lcall
sahf
jo
jg
add
inc
mov
inc
cmc
lret
ficompl
cli
in
leave
test
pop
int3
adc
and
jns
popf
pop
mov
into
andb
ja
fldl
insl
out
mov
push
popf
mov
cli
or
jecxz
sbb
mov
xor
mov
cmp
cmp
jbe
imulb
out
mov
insl
jnp
sbb
subl
and
pop
dec
addl
nop
or
dec
xchg
push
cmp
andb
lret
iret
pop
aad
push
or
decb
mov
fmulp
rorl
stos
pusha
arpl
adc
xchg
xchg
xor
in
mov
cmpb
xchg
push
sbb
xchg
dec
sbb
cmp
push
and
push
arpl
data16
mov
cmp
aaa
test
into
inc
push
and
or
mov
and
pop
adc
pop
pop
push
scas
scas
shll
mov
mov
sbb
pop
jl
out
xchg
fidivrl
outsl
fsts
in
out
lds
xchg
ficompl
mov
mov
mov
aaa
out
inc
shrb
in
movsl
sbb
xchg
addr16
out
mov
dec
dec
jae
sbb
icebp
mov
sub
push
dec
icebp
cmpsl
das
pop
xor
movsl
sarb
fistl
jne
fidivrs
sub
pop
ss
insb
jbe
imul
sub
pop
mov
jo
mov
shlb
mov
mul
iret
push
sahf
cmp
testl
push
fcom
pusha
lds
push
icebp
sub
scas
sub
in
adc
cli
sub
xchg
sbb
pop
test
pusha
xor
sbb
std
push
in
mov
add
mov
add
fimull
dec
std
sbb
mov
scas
out
ficoms
pop
mov
outsl
sub
mov
mov
scas
loop
pop
mov
cmp
int3
jge
fadds
insb
aad
subl
pop
lahf
mov
and
inc
mov
or
es
or
sub
int
or
mov
mov
mov
imul
mov
int3
lods
out
xchg
ffree
test
mov
lods
pop
fists
pop
inc
add
in
xor
or
fidivl
push
lahf
subb
aaa
dec
sbb
push
inc
mov
sbb
stos
inc
xchg
mov
jne
mov
xchg
arpl
mov
or
sbb
pop
inc
loop
lock
int
mov
cmp
add
xorl
test
bound
cmp
call
fst
sub
jae
imul
rorb
xchg
push
sbb
daa
mov
mov
ljmp
inc
repnz
jnp,pt
clc
sub
gs
in
sarl
jns
jns
and
imul
cs
ror
addr16
jnp
add
aam
cmp
aad
divl
xor
sbb
mov
lods
inc
xchg
sub
inc
movsl
aaa
inc
scas
mov
push
fwait
scas
cmc
mov
cmp
clc
mov
dec
ret
bound
das
xor
push
ret
pop
adcl
sbb
call
jle
xchg
idivb
ret
mov
cmp
aas
push
stos
out
subl
test
mov
pusha
mov
push
psrad
jg
test
sti
lods
xchg
xchg
cmpsl
jp
mov
pop
mul
push
rcll
imul
jns
and
movsl
xor
stos
cld
ss
lods
insl
sbb
adc
clc
or
lods
add
daa
pop
push
gs
mov
loop
out
sbb
mov
es
stos
hlt
xor
push
lea
stc
add
cmp
push
aam
ret
pop
adc
lahf
mov
in
push
std
xchg
push
lahf
inc
mov
ljmp
lcall
mov
sub
add
aam
push
dec
push
scas
outsb
aaa
in
in
and
test
xor
push
cvttps2pi
inc
inc
daa
or
push
movsl
mov
into
mov
lods
adc
sbb
inc
pushf
push
xlat
subl
mov
mov
popa
cltd
mov
inc
and
adc
mov
adc
cmc
or
test
push
jb
imul
movsl
insb
and
mov
cmp
lds
cld
pop
sbb
in
mov
inc
xchg
adc
sbb
xor
xor
test
xchg
out
rdmsr
lret
or
lret
cmp
add
jmp
lcall
scas
lds
ret
sub
ret
add
ret
xor
and
enter
out
cmp
or
add
das
aam
outsb
lods
jp
dec
test
jmp
sub
imul
out
hlt
mov
lahf
mov
cwtl
and
jb
outsb
call
xor
push
mov
dec
jg
xchg
and
mov
xchg
dec
inc
adc
pop
cmpsb
xchg
inc
es
ss
add
sub
fldl
push
inc
lds
fldl
jle
daa
in
scas
out
mov
insb
jle
pop
test
cmp
in
into
in
push
stos
shll
popa
xor
inc
pop
cltd
clc
icebp
ret
sti
shl
and
xchg
ljmp
push
dec
mov
sub
ret
insb
inc
sbb
loop
sub
jle
push
dec
leave
mov
push
fs
data16
dec
aad
mov
pop
sub
fiaddl
popa
inc
out
popf
pushf
mov
insl
orl
movsl
stos
aad
add
sbb
pop
movsl
and
call
jo
movsl
idivb
mov
pop
push
dec
or
call
movl
add
lret
mov
fists
jg
iret
enter
add
jnp
inc
jp
add
jae
pop
stc
cwtl
shlb
jb
push
aaa
loop
repnz
cmpsb
mov
cs
int
inc
addb
sbb
push
sbb
cmc
adc
sbb
mov
mov
fwait
jae
jecxz
cmpsl
div
nop
fisubrs
stos
sarl
imul
jge
and
xlat
sub
stos
popa
mov
jecxz
push
mov
test
push
pop
inc
pop
push
ret
rclb
adcl
repnz
sbb
pushf
dec
inc
data16
aam
scas
cmpsb
scas
popf
fnstsw
lret
jb
add
inc
add
rolb
sub
gs
cwtl
mov
xchg
movsl
pop
test
xchg
stc
xchg
scas
mov
arpl
insl
mov
loopne
cmp
aas
aam
xchg
sbbb
ljmp
outsl
aam
outsb
aam
dec
fdivrl
mov
movsb
nop
or
fimuls
mov
mov
test
mov
add
mov
cmp
xchg
insl
cwtl
cmc
push
mov
cmp
ss
ss
lock
xor
sub
int
adc
or
push
mov
iret
sub
lahf
dec
rol
push
or
jne
mov
sub
inc
xor
inc
loope
aad
popa
xor
pop
bound
mov
ret
ret
xchg
sahf
jmp
xor
mov
lods
add
jbe
ja
std
dec
lret
imul
icebp
iret
js
cmc
mov
bound
fwait
mov
out
cmp
push
packssdw
sar
push
cmp
inc
pop
push
fmull
icebp
insb
cmc
lods
mov
sahf
cmpsl
pop
sbb
dec
enter
push
insb
jb
mov
out
insl
add
fistl
sti
mov
xchg
mov
xchg
test
jecxz
xlat
mov
into
out
mov
push
xchg
inc
movsb
jle
in
clc
mov
jb
pusha
mov
test
popf
fcmovnbe
ljmp
test
xor
mov
stc
adc
scas
dec
inc
mov
movsb
xlat
cmc
test
js
out
pop
pop
xchg
mov
mov
mov
adc
xor
daa
popf
or
out
loopne
mov
cmpsl
xor
hlt
je
xor
push
dec
cmp
inc
loope
pop
add
add
dec
sub
insb
inc
jg
mov
test
cmovae
rcrl
les
fiaddl
jge
fnsave
aas
inc
mov
or
push
inc
sarl
pop
in
push
movsl
scas
mov
bound
shlb
in
and
in
call
push
ljmp
out
aaa
mov
xor
rcll
bound
pop
out
adc
mov
jb
push
push
fmuls
hlt
test
hlt
xchg
subl
loop
int3
sbb
out
pop
outsb
fdivr
pop
daa
push
orl
add
cmp
xchg
movsl
stos
mov
mov
push
repnz
pop
in
sub
cld
sub
xchg
shrb
ljmp
dec
and
les
xor
sbb
adc
cmp
pushf
movsb
call
cld
es
rorl
and
and
fldt
xchg
fs
jno
pop
addb
inc
imul
xor
mov
cs
mov
adc
push
add
xchg
mov
out
push
xchg
fsubl
movsb
sub
scas
test
mov
pusha
inc
xchg
cmp
pop
pop
xchg
xchg
mov
push
test
fadds
fcoms
and
loop
mov
lret
xchg
stos
jge
add
rorb
or
xor
gs
cli
mov
daa
pop
in
mov
xor
mov
adc
xor
rcrl
sbb
sub
mov
test
loopne
fidivrs
adc
daa
push
cmpsl
jg
lcall
mov
add
addl
mov
fidivs
int
call
jmp
or
xchg
sub
mov
je
fstpt
xchg
xchg
cwtl
push
mov
enter
ljmp
mov
imul
lret
sub
nop
lcall
pop
mov
xor
inc
mov
leave
fcompl
or
mov
fadds
pop
lret
cmp
inc
cmp
xchg
ljmp
mov
pop
minps
mov
lret
push
in
lock
divl
inc
in
xor
nop
cmp
jge
sub
outsl
xchg
enter
push
mov
adc
mov
adc
lahf
dec
push
clc
lods
sbb
loopne
sub
inc
adc
inc
adc
rcrl
idivb
mov
and
push
pop
push
cmp
ret
ja
inc
lcall
std
loope
adc
std
ja
ja
repnz
je
jmp
push
pavgb
scas
adc
pop
cmpsl
sbb
xchg
fidivs
scas
fiaddl
ds
xor
mov
push
pusha
gs
sub
loop
inc
adc
cmp
je
es
mov
hlt
loopne
push
mov
mov
lods
insb
sbb
and
mov
cmpsb
leave
rcl
hlt
add
or
mov
stos
or
adc
outsb
fcoms
cmp
loopne
stos
loope
push
das
daa
lds
adc
in
daa
incl
lock
cmp
push
out
bound
inc
out
movsl
fldl
mov
or
lods
jno
fidivrs
cmp
dec
push
sbb
xlat
xchg
mov
push
fsubrp
lret
push
xor
mov
fs
pushf
dec
scas
push
testb
icebp
cmpsl
or
sarb
in
jecxz
xchg
jecxz
in
imull
mov
jne
in
sub
lds
aad
cs
in
cmp
insl
push
popa
outsb
cs
sbb
sbb
jmp
mov
ret
lods
pop
lret
test
stos
dec
test
mov
sub
adc
mov
les
je
aad
cli
inc
add
lret
mov
xchg
and
clc
ljmp
imul
lea
stos
in
jl
hlt
add
adc
cli
pop
movsb
js
inc
out
push
fwait
add
dec
std
les
popa
nop
lods
shlb
add
adc
fwait
xchg
mov
insb
jne
stos
mov
mov
and
jecxz
mov
rolb
shll
mov
notl
les
cmp
jmp
mov
and
aaa
or
sub
bound
mov
jge
add
in
leave
jg
imulb
divl
mov
cs
js
shrl
inc
out
lock
test
or
jg
xchg
aaa
sub
xchg
call
dec
inc
pop
iret
mov
xor
xchg
mov
outsb
add
repz
inc
adc
inc
mov
outsb
sub
xchg
sti
divb
cmp
xchg
jnp
pop
ljmp
pop
popf
pop
outsl
mov
pop
mov
add
leave
inc
pop
cli
int
xchg
ss
jnp
or
sub
add
fisttpl
inc
ficoml
pop
push
rolb
mov
adc
push
mov
mov
jmp
gs
sub
fadds
cwtl
add
dec
mov
or
loope
sub
or
enter
cmpsb
fimuls
sbb
andl
mov
jb
jl
idivb
bound
push
insb
fnsave
lea
inc
jmp
loopne
rcl
push
cmpsl
cmpsb
ror
cmpsl
outsb
out
mov
int
roll
out
lcall
repnz
cmpsl
imul
lds
fcomp
mov
rolb
adc
jmp
les
sub
add
xor
push
or
dec
jne
xchg
add
cwtl
lock
sahf
cmc
insb
push
push
pop
faddl
sub
stos
out
ds
clc
push
aad
jle
fidivrs
fldenv
movsl
jne
or
pop
popf
insb
jnp
add
addr16
faddl
jne
repnz
cltd
test
lods
jecxz
sub
fnstsw
roll
call
xor
in
cmp
pop
and
testl
mov
fcoml
jae
xlat
gs
jmp
mov
mov
xchg
mov
add
decb
out
cltd
lods
lds
lret
xchg
push
lods
jp
cltd
pop
repz
pop
inc
stos
test
cmpsb
xor
imul
mov
or
pop
fists
jg
pop
xchg
mov
stc
fwait
pop
xor
pop
cs
scas
inc
fwait
popf
sti
jge
pop
jae
xor
cmpsl
sar
pop
adc
lret
dec
lods
mov
into
inc
movsb
push
out
xchg
fldenv
and
mov
push
mov
ljmp
jmp
xchg
sbb
pushl
mov
push
dec
xor
jbe
sbb
cmpsl
mov
lods
push
lods
sbb
fwait
pop
inc
and
out
loopne
scas
jnp
fistpll
es
mov
mov
jno
out
xor
loopne
ret
xchg
int
inc
loopne
test
cmc
imul
push
jecxz
xor
mov
jae
jae
sahf
inc
mulb
inc
jns
pop
dec
dec
ss
mov
inc
pop
inc
xchg
arpl
in
mov
insb
nop
movsl
pushf
clc
cwtl
xor
movl
fcoms
sub
je
xchg
mov
dec
xchg
je
rcrl
mov
mov
aam
jbe
test
in
lock
mov
cmp
inc
jo
sbb
mov
movsl
mov
int
out
fimull
pop
add
loopne
std
xchg
pop
mov
adc
cltd
add
mov
pop
inc
dec
push
cli
aas
and
inc
popa
fs
mov
add
xorl
jmp
aaa
mov
mov
dec
or
push
scas
imul
mov
je
mov
rorl
fisttpll
jp
stc
push
rcrl
mov
mov
cmpsb
mov
notl
cld
fdivrp
xor
mov
jb
stc
push
repz
lods
cmp
lods
and
lea
inc
fwait
mov
dec
pusha
jne
jmp
stos
or
sahf
incl
mov
mov
jge
mov
inc
nop
arpl
jl
and
mov
fistl
loop
outsb
mov
aaa
inc
xchg
xchg
or
jno
mov
je
mov
inc
lcall
mov
sti
lods
adc
fs
shll
adc
jbe
std
pop
inc
nop
push
stos
movb
idivl
xchg
sbb
hlt
dec
add
xchg
ret
jne
roll
mov
adc
push
clc
lods
cmp
inc
icebp
dec
xor
lds
add
or
popa
xchg
and
loop
mov
mov
popa
mov
ljmp
lret
mov
fcmove
xor
pop
ret
mov
pop
xor
mov
sbb
jg
cs
push
adc
and
sub
fisubrl
mov
mov
mov
shlb
je
cltd
stc
add
xor
adc
push
cwtl
or
jno
mov
push
xchg
fldl
fcomps
out
int
mov
sarb
out
cmpl
push
jmp
in
outsl
ds
dec
loop
fmuls
xorb
loop
mov
inc
out
push
repz
popa
pop
aaa
xor
es
pop
sarl
mov
push
mov
lea
push
je
nop
or
orl
popf
sti
xchg
mov
popf
fdivp
cli
ret
out
sub
stos
inc
pop
mov
stos
sahf
and
add
in
aad
lea
bound
in
cs
sub
mov
cmpsl
lahf
or
dec
leave
cmp
and
dec
and
jb
xchg
loope
decl
jle
jnp
sbb
ja
cwtl
sbb
loop
adc
jae
lahf
dec
or
xchg
cmp
int
aas
xlat
lcall
inc
sbb
das
stos
rep
mov
inc
or
pop
clc
and
inc
dec
popa
sar
or
pop
jl
fstps
jg
testl
mov
lea
cmp
cmp
mov
push
insb
movhps
pop
pop
sub
or
aas
adc
outsl
bound
mov
and
jmp
xchg
stc
xchg
popf
in
push
sub
mov
mov
imulb
push
pop
dec
mov
mov
mov
in
out
fs
orl
jns
ss
mov
into
fs
add
sub
pop
pop
push
inc
clc
in
leave
adc
call
mov
add
jl
cmpsb
xchg
sbb
lret
ret
xchg
cmpsb
inc
cmp
cpuid
data16
fidivs
push
int
stc
and
dec
fimull
popa
insb
cld
dec
mov
lret
mov
cmp
xor
scas
cmpsl
lea
push
lahf
stos
mov
cld
lock
mov
add
dec
inc
inc
mov
mov
std
push
or
inc
pop
sar
sub
inc
out
into
and
xchg
stc
cmp
aaa
jle
jge
push
add
fnstsw
lods
xchg
test
std
dec
in
inc
loope
mov
push
add
ljmp
int3
sbb
xchg
jno
idivb
cwtl
push
aaa
dec
int3
outsb
jb
in
scas
and
mov
cmc
xchg
add
inc
into
je
int3
add
pop
stos
fildl
push
ror
dec
xor
mov
arpl
std
fcmovbe
xor
bnd
test
out
decb
daa
addl
pop
sub
ljmp
xor
and
inc
insl
leave
cmp
sub
sub
push
clc
push
push
jg
inc
push
add
ja
iret
mov
mov
mov
adc
adc
push
xchg
inc
xorb
or
add
dec
fs
mov
movsb
pop
test
rol
lcall
push
sbb
sbb
jno
fdivr
xchg
pop
shlb
nop
cli
inc
sbbl
jbe
jno
fiadds
shll
mov
mov
inc
mov
cmp
pop
sbb
cmp
pusha
popf
aaa
dec
push
adc
aad
cli
rorl
ret
inc
test
sbb
aaa
aas
mov
outsb
aam
scas
stos
and
xchg
add
cmpl
pop
lea
ret
add
mov
inc
dec
repz
rcll
or
mov
jb
add
ret
xor
xor
mov
mov
add
and
or
jge
cs
pop
leave
pop
add
popa
test
fs
push
or
std
orl
pop
subb
sbb
test
iret
insb
mov
and
loopne
lock
inc
fsubs
or
sarl
sbb
hlt
es
bound
add
fsubr
roll
andb
aam
sbb
addr16
cld
jnp
mov
mov
jl
push
popf
push
mov
cld
mov
leave
mov
inc
out
pop
out
xchg
push
in
mov
pop
and
std
mov
xchg
lret
add
sbb
das
das
into
sub
sbb
mov
rorb
loopne
dec
fisubl
fstpl
imul
adc
mov
neg
xor
rorb
aas
lock
pusha
sbb
into
ds
je
inc
dec
insl
mov
fsubs
stos
mov
dec
lods
bnd
pop
js
sub
push
adc
pushf
mov
dec
jmp
or
and
push
mov
pusha
push
mov
mov
mov
mov
mov
pop
push
xor
and
mov
adc
dec
mov
jno
mov
lret
mov
int3
mov
sbb
pop
push
sbb
lahf
jns
pop
or
icebp
cmpsl
inc
jns
mov
scas
aam
xchg
js
dec
xor
dec
scas
call
push
or
jge
adc
mov
jl
cs
inc
sub
mov
cmc
roll
jle
push
cmp
jnp
xchg
fnstenv
mov
insl
sbb
push
das
lret
pop
in
cmp
shll
push
and
dec
loopne
adc
cs
mov
cmc
sbb
jne
ja
pop
mov
xor
sub
push
divl
xchg
adc
stos
mov
or
je
fcmovnb
shll
cltd
cltd
pop
mov
ljmp
fsubrl
fs
adc
mov
sbb
dec
ss
adc
push
test
jb
xchg
sbb
fs
sub
xor
dec
ljmp
inc
and
push
shrb
outsl
and
sub
jns
inc
jge
adc
mov
clc
xchg
and
cmpb
pop
cmp
inc
addr16
pop
ss
cmpsb
xadd
jle
insb
mov
mov
shr
out
dec
or
adcl
push
adc
push
outsl
ret
js
cmp
call
xchg
rclb
adc
mov
adcb
xchg
pop
dec
pushf
push
call
js
rcrb
add
orb
mov
inc
mov
mov
arpl
push
js
ljmp
cld
faddl
and
mov
test
in
jle
adc
das
xchg
pop
mov
sbb
rclb
out
pushf
push
xor
add
dec
dec
and
sub
adc
mov
push
mov
mov
jb
or
xchg
xor
aas
ror
enter
jmp
jb
addr16
jbe
xchg
stos
out
adc
and
testl
mov
ret
xorb
fistpl
mov
mov
or
scas
out
xchg
adc
repz
test
mov
or
and
ret
loope
mov
pop
repz
xor
test
movsl
mov
inc
testl
jbe
sbb
or
ja
pushf
je
xchg
mov
lock
popf
call
mov
pop
dec
in
ret
mov
cltd
jp
cmpsb
sahf
daa
pop
inc
xchg
push
xlat
stos
inc
jge
roll
popa
xchg
rcl
sub
addl
push
fstps
pop
mov
fadds
sbb
mov
iret
lcall
mov
add
nop
or
out
icebp
xor
mov
ficoml
jg
add
ficoms
dec
dec
or
xor
scas
jne
xor
or
dec
fwait
int
sbb
dec
nop
loop
mov
xchg
pop
xchg
mov
stc
xchg
adc
subl
mov
inc
adc
pop
dec
lahf
and
mov
cmpb
and
jbe
aaa
xchg
add
xor
inc
adc
imul
and
fistps
jne
es
call
jb
jae
mov
mov
loopne
or
jge
adc
shrl
incb
mov
je
dec
inc
dec
std
jle
testl
xor
iret
fcmovnb
test
push
sahf
rcrb
add
test
cmpsl
ja
pop
lods
data16
cmp
sub
pop
push
cmp
pop
mov
cmp
shll
pusha
xchg
mov
cmpsl
outsb
fxch
xor
hlt
or
ss
xlat
jbe
loope
mov
mov
add
mov
add
inc
mov
iret
int3
xchg
lods
fcompl
das
and
pop
rcrl
push
add
and
js,pt
xor
data16
sub
inc
stos
inc
add
lock
test
mov
dec
loope
mull
mov
add
mov
inc
imul
test
dec
jle
sub
pop
movsbl
ds
mov
cmp
rcrb
pop
or
insb
test
adc
cmc
sbbl
and
mov
xor
pop
loopne
mov
ja
test
pop
and
iret
xchg
sub
pop
orl
push
dec
push
adc
pusha
les
lods
push
xor
fs
mov
jle
scas
hlt
aaa
or
push
pushaw
ja
xchg
neg
fwait
sbb
insb
sub
inc
push
xchg
mov
scas
fnsave
sbb
mov
cwtl
xor
ja
cmc
inc
jo
sbb
lahf
mov
repz
mov
xchg
or
fisubrs
xchg
mov
add
je
packuswb
jo
fsubr
rcrl
ja
cmp
jno
mov
scas
arpl
movl
cmpsb
dec
jge
dec
dec
aas
sbb
jb
jb
imul
mov
mov
xchg
stc
mov
rcr
mov
daa
push
shrl
add
cmp
xchg
out
in
pusha
pop
add
push
mov
in
inc
imul
fwait
out
jno
vpcmpeqd
jb
add
test
insl
cmp
sub
aaa
loopne
mov
adc
lea
leave
sbb
fcmovnu
mov
xor
lods
ds
popa
out
fwait
push
imul
std
nopl
dec
jge
jo
ja
mov
xor
add
mov
add
xchg
xlat
lods
push
push
mov
sub
loope
loope
push
xchg
fcomps
leave
push
mov
sbb
dec
adc
sbb
push
cmp
add
test
xchg
rolb
inc
dec
outsb
or
test
daa
out
inc
inc
inc
jae
cli
jne
lods
and
inc
lods
mov
mov
in
dec
mov
rol
sbbl
and
mov
push
or
ljmp
inc
adc
add
fisubrl
adcb
sub
adc
adc
fnstenv
xlat
cmpsb
aaa
ror
add
ret
in
sub
mov
icebp
roll
cmp
insl
out
fcmovne
mov
mov
out
in
mov
jge
shl
adc
cli
scas
push
scas
jno
or
js
dec
inc
push
aas
lcall
lea
loopne
lods
and
xchg
push
popa
lret
mov
imul
filds
cwtl
pop
inc
jns
inc
and
lahf
xchg
std
fistps
outsl
inc
push
pop
mov
sbb
sbb
not
inc
inc
mov
adc
and
inc
push
enter
nop
das
ret
jmp
mov
sbb
push
xor
cmpsl
repz
xchg
push
arpl
leave
loop
jb
lahf
xchg
cwtl
jne
jg
xchg
sub
sbb
xor
popf
cmpb
sbbl
xchg
dec
adc
sub
aaa
in
imul
into
sbb
mov
xor
js
outsl
or
mov
fdivr
shlb
mov
out
pop
out
pop
xchg
loope
xchg
push
in
fcoml
cmpsl
mov
and
xchg
jbe
pop
clc
mov
xchg
movsb
int
xchg
cmpsb
scas
lea
xchg
mov
xor
push
or
lods
push
movsl
mov
inc
xchg
ficoms
call
repnz
mov
leave
xorl
pop
shrb
test
fs
xchg
jle
and
loopne
outsb
inc
enter
or
lods
jge
sbb
cmp
pop
cmpsb
sbb
xchg
push
xchg
mov
clc
mov
add
sub
test
or
pop
add
aaa
popa
popa
xchg
push
test
lcall
mov
mov
daa
sbb
mov
inc
mov
or
push
xor
paddusw
sbb
xor
repz
push
imull
mov
mov
jbe
xor
sub
mov
and
mov
jle
sub
and
mov
adc
call
dec
adc
dec
shll
jmp
popf
imul
sbb
adc
cmpsl
fildll
xchg
jne
cmp
push
and
int3
dec
and
sbb
mov
dec
mull
cmp
pop
and
xchg
or
mov
mov
mov
insb
sbb
jnp
into
out
push
lahf
enter
xchg
ss
ja
xor
add
mov
repnz
push
das
jae
rol
pop
xor
data16
and
in
in
cli
mov
cmp
xor
outsb
imul
les
fnstenv
push
stos
mov
dec
nop
mov
inc
loop
fcoms
push
dec
inc
sub
sbb
mov
or
mov
xchg
cmp
xorl
stc
jl
outsb
mov
mov
leave
xchg
dec
ja
pop
inc
sub
dec
out
cmp
addl
push
cmpsl
or
adcb
xchg
mov
xor
ret
mov
lret
gs
sub
jns
add
js
rol
push
sub
xchg
mov
call
cmp
mov
int3
sbb
or
lea
in
aaa
stos
ljmp
xchg
fs
jge
xor
lods
stos
insl
loope
flds
or
fwait
jecxz
and
into
xchg
mov
xchg
push
push
repnz
lds
push
push
nop
jo
notl
inc
jecxz
pop
repz
pop
pop
iret
test
test
fcoms
xchg
sub
xor
push
jmp
pop
enter
pop
and
aas
addr16
jb
call
xorb
jo
addr16
lea
rclb
inc
std
es
call
cmpsb
add
call
adc
pusha
imul
adc
sbb
sub
clc
div
mov
outsl
mov
out
sbb
icebp
lret
mov
cmp
ljmp
scas
ja
push
xor
lret
inc
lds
or
pop
cmp
mov
lods
jbe
movsb
shrb
cmpsb
adc
inc
das
setne
mov
xchg
jecxz
add
arpl
xor
mov
sbb
scas
inc
test
adc
sub
pop
mov
addr16
push
add
xchg
mov
cmp
sub
fbld
pop
xor
sahf
cmp
add
popf
add
xor
imul
push
mov
add
or
incl
jne
push
mov
movsl
mov
ror
mov
cmp
dec
mov
movsl
ret
popa
and
outsl
nop
lods
mov
push
shr
fs
fdivl
jg
outsb
imul
je
jmp
stc
cmp
fistpl
mov
cmpb
push
fiadds
xchg
inc
in
shll
and
mov
lcall
adc
sub
push
add
repz
xor
pop
cmpsb
inc
ds
dec
fdiv
int3
inc
push
outsb
mov
ja
xbegin
out
or
mov
int3
inc
xor
mov
fs
and
pop
push
adc
mov
or
jns
inc
je
push
xor
pop
cltd
in
insl
test
or
push
pusha
dec
sahf
sbb
push
mov
loopne
mov
cwtl
adc
jl
cmp
imul
lcall
mov
pusha
jle
sbb
push
mov
sub
mov
jge
add
mov
ss
adc
cli
sti
negl
rcrl
pop
jle
push
push
clc
scas
jl
ret
adc
pop
rcl
jnp
cltd
insl
lret
movsb
sahf
sub
pop
rolb
sbb
scas
mov
movsb
lret
xchg
cwtl
lret
cli
cmp
aad
add
pop
clc
into
add
sub
mov
loopne
mov
test
insl
pop
mov
jge
push
data16
pop
loope
daa
pop
pushf
mov
cltd
popa
jg
sarl
lds
push
scas
daa
ds
push
aad
decb
jp
sub
push
addr16
bound
or
or
inc
in
jp
push
xchg
in
xchg
out
fisubl
shrb
add
aaa
dec
dec
movsl
sub
pushf
inc
mov
mov
cmp
dec
mov
mov
inc
aad
sbb
or
faddl
push
dec
fs
shl
dec
add
iret
test
inc
in
popf
testb
push
sahf
repnz
ljmp
pop
mov
fstl
dec
mov
imul
cmc
mov
fisubrl
out
mov
or
stos
movsl
mov
int
and
mov
mov
inc
dec
cmp
jnp
xor
mov
add
add
pusha
push
lahf
in
fsts
cmp
sbb
xor
cmp
fs
out
dec
out
mov
movsl
sahf
mov
push
mov
add
scas
jnp
add
mov
push
mov
test
sbb
stos
hlt
dec
cmp
scas
imul
sbb
add
insl
pop
outsb
fimull
and
cmp
push
fcmove
lcall
or
dec
int3
xchg
or
pop
and
cs
mov
enter
imul
mov
inc
jbe
mov
fucomip
ja
add
imul
jnp
imul
push
push
je
cmp
dec
jle
into
fwait
push
mov
xor
mov
hlt
pop
in
mov
loopne
fidivrs
mov
js
jns
xchg
icebp
lea
pop
mov
pop
push
ret
insb
test
push
cmp
inc
lcall
add
ss
scas
and
ljmp
and
testl
scas
int3
pxor
jno
nop
and
mov
jne
lods
cmp
test
lock
roll
or
or
mov
gs
pop
adc
mov
pop
xchg
cmp
cltd
sbb
mov
jnp
xchg
mov
inc
jno,pt
int
mov
repnz
stos
inc
xor
std
and
fdecstp
std
pop
adc
aam
dec
xchg
pop
and
mov
leave
xchg
sub
dec
add
cli
jno
sub
insl
sbb
fwait
rol
daa
shlb
xor
or
lret
shrl
das
cmpsb
mov
jne
dec
ss
es
mov
fmuls
pushf
jle
push
push
xor
xchg
xchg
sbb
xor
sub
lahf
and
xor
enter
dec
iret
inc
sbb
mov
adc
push
imulb
cmp
xor
mov
in
pop
decl
stos
jbe
and
sub
rclb
fldt
inc
dec
fbstp
dec
fwait
mov
jle
fidivl
stos
clc
enter
mov
mov
xchg
inc
ds
pop
add
imul
adc
sar
es
andl
jle
cltd
xchg
divl
aaa
xor
popa
lods
in
xor
xchg
fstp
pop
hlt
iret
push
scas
call
clc
mov
sbb
mov
mov
pop
std
movsl
repz
add
aas
inc
jns
push
mov
outsl
cmp
pushf
pushf
loopne
jo
sub
pop
mov
jecxz
sub
push
push
xor
inc
cmp
out
cmp
pushf
lahf
loop
mov
into
test
adc
sbb
sbb
test
sahf
dec
dec
add
sub
jecxz
insb
and
clc
aaa
outsb
insl
lods
imul
cmp
lods
lock
cmp
xchg
fimuls
push
xor
stc
lods
fcomp
dec
lods
lods
dec
jns
jno
xor
cli
addl
iret
cmp
add
lods
mov
mov
not
or
fidivrl
lods
stos
pop
mov
mov
xchg
outsl
sbb
add
xchg
adc
push
sarb
icebp
push
pop
iret
pop
bound
std
ja
push
sub
test
mov
dec
mov
loop
sbb
aaa
rcrl
shrb
scas
pop
xchg
xchg
push
loopne
sub
clc
push
push
outsl
test
fwait
pop
and
es
dec
mov
retw
arpl
cmp
ja
rcrl
xchg
inc
adc
inc
cmp
ljmp
fisubrl
lods
insb
fnstsw
fiadds
loop
pop
sub
nop
inc
cs
mov
pop
outsb
in
insl
cwtl
xchg
int
jbe
out
imulb
rcll
es
leave
jp
fs
and
pusha
mov
xchg
push
lcall
xor
ds
les
ss
push
arpl
jecxz
mov
pop
hlt
mov
adc
xorb
sub
test
adc
or
aas
inc
xor
incb
shrb
aam
test
inc
or
mov
movsl
xchg
cld
lcall
jo
or
or
push
lahf
pop
ficoml
add
lea
mov
xchg
ficompl
test
mov
addb
xchg
repz
sub
shlb
or
ret
mov
pushf
int
and
and
mov
out
mov
js
pop
ds
mov
sbb
in
push
inc
and
push
xadd
fdivrs
jp
int
adc
lods
fdivs
or
rolb
icebp
mov
fldenv
pop
fdivs
sub
fnstcw
sub
js
push
cmpsb
jns
leave
sbb
lahf
dec
jecxz
cmp
push
nop
dec
clc
inc
aam
pop
sbb
lret
movsb
push
dec
out
movsl
mov
jb
inc
or
mov
enter
arpl
push
and
add
imul
in
inc
ljmp
out
test
xchg
les
aam
sarb
cwtl
in
test
fmul
jno
dec
mov
and
jp
adc
sub
not
mov
in
dec
add
jnp
addr16
scas
cwtl
nop
mov
mov
jp
out
adc
xor
xchg
mov
call
hlt
fnsave
imul
pop
or
pop
mov
es
jge
pop
dec
push
sbb
mov
push
test
sbb
insb
and
lahf
and
outsb
pusha
mov
aad
loop
mov
or
adc
fldt
adc
jg
inc
pop
jae
shrb
xchg
pop
ja
inc
push
mov
lods
or
adc
cmp
add
outsl
imul
cmp
pop
add
mov
pop
clc
inc
testl
xchg
ljmp
sub
adc
jmp
or
pusha
stc
mov
lea
imul
test
mov
inc
cwtl
dec
jge
loopne
out
mov
sbb
sub
roll
inc
mov
mov
rcll
aaa
sub
jl
add
lods
jmp
loop
or
rclb
mov
stc
imul
popa
cmp
jle
in
jge
and
mov
mov
mov
dec
ljmp
popf
dec
xlat
jbe
lock
in
sahf
cmp
dec
inc
je
xchg
xor
lcall
pop
in
ficomps
les
out
mov
lahf
jp
or
out
sbb
mov
in
sbb
outsb
inc
sbb
sub
ss
xchg
jle
cmpsb
cwtl
add
out
addr16
nop
push
movsl
ljmp
push
lods
inc
push
test
sub
cwtl
stos
push
cmp
cmp
inc
cmp
cmp
cmp
mov
push
inc
mov
dec
pop
mov
arpl
and
mov
mov
push
and
leave
jle
add
roll
popf
cmc
mov
ret
aad
lea
mov
adc
ljmp
cmp
fdivp
dec
mov
cmp
adc
push
mov
dec
insl
mov
lahf
dec
xchg
cmp
jbe
adcl
xor
je
stos
cmpsb
mov
mov
loope
dec
pop
mov
xchg
fwait
ret
pusha
mov
sbb
mov
lods
jnp
push
xchg
fsubrs
mov
jbe
xlat
lock
bound
push
push
pop
or
inc
cltd
xchg
jle
mov
subb
and
mov
int
adc
shll
pop
rorl
dec
pop
lea
cli
testl
adc
andb
push
aas
in
mov
cmpsl
arpl
push
mov
push
ja
dec
loopne
loope
or
cmpsl
pop
and
out
cmc
xchg
cs
xchg
cltd
inc
push
loope
in
sbb
call
or
mov
xor
sbbb
or
adc
or
xor
pop
jbe
es
insb
fstpl
data16
aam
xchg
imul
sahf
xor
test
ds
lcall
sbb
fidivrs
jbe
mov
xor
or
xchg
or
flds
cmpsb
push
ret
aad
pop
mov
lods
rcr
jne,pn
dec
inc
inc
stos
jbe
or
int3
test
nop
push
inc
out
imul
in
loope
adc
es
out
ja
incl
mov
out
pop
test
xchg
rcrb
jp
sbb
scas
lock
cwtl
adc
daa
sbb
loopne
ret
js
cltd
sub
add
ret
fiaddl
xchg
or
pop
cwtl
sub
test
xchg
aam
sbb
adc
add
push
ljmp
push
roll
mov
and
mov
lret
imul
mov
pop
lahf
leave
lcall
push
or
fstl
rcll
fxam
dec
and
js
push
mov
add
adc
lahf
push
mov
pop
and
addr16
jge
dec
test
inc
xor
loop
mov
push
stc
push
push
rclb
les
xchg
mov
std
jl
jb
mov
loop
xor
loope
sbb
subl
imul
inc
sub
cmpsb
fstpl
aad
outsl
loop
push
and
ficoml
rcl
mov
pop
pushf
repnz
adc
or
sub
dec
sub
sub
sub
mov
pop
inc
mov
stc
cmp
pop
inc
scas
inc
rol
sbb
jl
insl
jae
into
daa
xchg
lea
imul
jno
push
shl
jo
ss
dec
inc
push
xchg
mov
movsl
dec
push
xchg
in
lret
mov
test
repz
iret
mov
fsubrl
lods
cld
mov
pop
test
push
inc
xadd
sar
dec
fidivs
xor
int
mov
sub
add
cmp
jmp
jns
loope
clc
shl
mov
cmp
in
ja
mov
mov
pop
cmpsl
jb
push
sahf
mov
scas
or
inc
xchg
outsb
cmp
inc
lods
jnp
jno
add
inc
jnp
cmc
cmc
cli
mov
sub
sbb
inc
call
lds
pushl
jbe
cmpsl
mov
and
adc
fisttps
sbb
out
popf
pushf
imul
pop
addr16
pusha
and
jl
mov
shl
jg
and
xchg
es
fwait
inc
cmp
ja
fsubs
aad
adc
xor
int3
scas
cmc
dec
hlt
push
fwait
ja
jb
mov
scas
add
and
divl
test
dec
addr16
scas
or
push
sbb
stos
inc
cmpsb
roll
testb
inc
aam
push
mov
test
aas
adc
adc
xor
dec
gs
aas
rcrb
sbb
mov
mov
ja
bound
xlat
fwait
pop
popa
sub
mov
aas
xorb
add
repz
cmpsb
push
enter
fmuls
fcomps
xchg
add
adc
adc
sbb
es
adc
xchg
push
inc
xchg
data16
lods
enter
in
adc
push
je
add
pop
mov
lcall
jne
cmpsl
rorl
xor
add
ret
lret
jne
pop
pusha
xor
mov
sbb
popl
dec
int
outsb
repnz
push
jnp
imul
int
dec
mov
rclb
repnz
pop
pop
test
cmp
pop
pop
cmp
cs
mov
fwait
dec
mov
insl
lret
arpl
push
xor
jns
cwtl
nop
sub
insl
and
mov
loope
xor
add
inc
fisubs
xchg
fiadds
sbb
xchg
jmp
jge
sub
ret
sub
fadds
cwtl
aad
mov
pop
xchg
pop
gs
je
lahf
cmpsl
aaa
loop
test
add
sub
test
push
xchg
in
and
xor
jg
fwait
subl
inc
sub
push
andb
and
cmpsb
mov
sbb
inc
dec
in
mov
mov
cli
xchg
jae
pushf
sahf
adc
lea
xor
daa
xchg
stos
and
cwtl
lock
call
std
xor
jmp
sub
xchg
lcall
lea
in
inc
iret
mov
in
pop
add
mov
pop
arpl
fimull
sbb
mov
in
aaa
enter
mul
sub
shr
sub
xchg
cmpsb
popa
jo
test
sahf
ss
mov
testl
call
mov
imul
scas
xor
cld
stos
arpl
loopne
adc
lock
fistpl
in
cwtl
faddl
dec
shrl
pop
movsl
sub
mov
or
or
iret
aad
pop
test
outsb
push
test
in
push
adc
test
arpl
js
sahf
push
cmp
mov
mov
inc
and
test
xchg
cwtl
inc
mov
xchg
clc
cwtl
shl
cmp
das
xor
jae
adc
inc
mov
mov
cmc
push
push
addl
movl
ss
shrb
push
shrl
jecxz
fisttps
xlat
aaa
jge
insl
fmull
in
cmpsl
notb
jno
dec
xchg
push
call
push
mov
adc
stos
cmp
mov
out
je
loope
mov
and
jo
clc
stos
std
je
pop
std
movl
sbb
shlb
cmpps
dec
stos
pop
pop
push
xchg
jl
ret
or
mov
pusha
push
mov
rcrb
dec
jno
push
inc
push
sbb
mov
ss
pop
inc
shrl
sahf
cmp
hlt
sub
arpl
xor
fsubl
movsb
in
sub
rcll
out
mov
pop
fildll
xor
je
lcall
test
push
or
jle
push
add
push
arpl
ss
bound
icebp
lret
add
adc
cmp
mov
ret
mov
cmp
add
clc
pop
push
sbb
lds
nop
lahf
mov
stos
jno
movsl
push
jmp
scas
sysretw
cmc
jns
lea
or
and
dec
add
test
ds
jecxz
cli
lret
push
xor
xor
xor
clc
fsts
addl
stos
fs
fistpl
mov
mov
sbb
dec
repnz
insl
sti
adc
cvtps2pd
adc
cmpb
sub
jae
imul
cmp
push
repnz
sub
shll
jle
xchg
aas
xchg
out
lahf
dec
push
xor
pushf
mov
jae
mov
xchg
sub
cmp
repnz
sbb
sbb
aaa
out
mov
adc
in
jnp
in
jg
aad
add
xchg
jnp
repnz
add
jp
or
cmc
sahf
xor
or
repz
sbb
inc
add
fisubl
add
cmpsb
sub
jo
inc
out
xchg
es
xchg
dec
inc
mov
loopne
sub
stc
dec
ret
mov
mov
lahf
cld
sbb
xor
xchg
lahf
test
and
outsl
pop
add
dec
dec
dec
sbb
or
mov
push
jmp
sbb
push
pusha
cld
dec
popa
jne
in
jecxz
test
pop
xchg
in
mov
mov
dec
xchg
icebp
out
mov
xlat
loop
cs
sbb
out
or
mov
dec
mov
inc
jnp
mov
mov
sbb
icebp
sbb
aaa
or
pop
lods
ds
xor
leave
sub
add
popf
cmp
in
test
ljmp
jmp
out
cmpsb
loope
pop
fwait
rorb
std
fs
fidivrs
fldenv
mov
mov
push
cmc
mov
or
xchg
push
mov
je
push
dec
lret
mov
adc
nop
jmp
cli
aam
jecxz
xchg
sub
arpl
sbb
test
lock
fs
push
xor
into
dec
add
xchg
mov
inc
mov
loop
daa
inc
sbb
out
xchg
pop
inc
sub
dec
inc
je
sbb
fidivrl
or
sarl
clc
out
mov
stos
ss
add
adc
scas
add
mov
mov
dec
and
pop
and
pushf
loop
xlat
test
sbb
adc
dec
jae
lret
mov
dec
cmp
or
pop
lea
mov
cmp
xor
xchg
push
adc
fidivl
movsl
xor
push
pop
push
dec
mov
jno
and
pop
push
xor
fldt
cmpsb
mov
adc
aas
push
push
jns
addps
and
lahf
push
ja
out
andl
sbb
dec
and
imul
repnz
mov
stos
dec
jle
inc
pop
shll
popf
push
aaa
out
cmp
inc
sub
or
fisttps
cwtl
and
lods
adc
push
sub
lods
leave
clc
fs
push
jno
mov
add
sbb
and
xchg
push
shrb
je
mov
aam
jb
jns
filds
mov
fwait
lds
bound
lcall
popf
test
cmp
cmp
popf
ror
dec
mov
stc
fsubrl
pop
rcr
lods
xchg
stc
jmp
dec
dec
cmp
push
je
test
scas
mov
lcall
xchg
fwait
dec
sbb
shrl
cmp
rcl
out
cltd
xchg
inc
xor
in
lahf
adc
inc
xchg
test
jl
cmpsl
das
cwtl
add
aam
sbb
hlt
pop
out
mov
xchg
lret
cmpsb
outsl
sbb
pop
mov
shl
sbb
xor
pop
arpl
xchg
or
inc
push
iret
mov
sbb
pop
cmp
in
xchg
dec
es
xlat
pop
push
int
inc
add
push
sub
test
lret
mov
imul
cmc
jne
jmp
loope
cmpsb
cmp
lret
int
mov
push
xchg
sbbb
jmp
out
hlt
sub
imul
pop
xchg
pop
sub
leave
pop
pop
pusha
push
lcall
leave
andl
pop
dec
sbb
dec
cld
inc
pop
out
pop
fists
fistpl
xlat
cwtl
mov
jmp
cmp
sbb
lret
dec
cmp
ret
fildll
bound
dec
mov
cmp
xor
mov
negb
cmp
repz
jecxz
addr16
jl
in
and
fstpl
xlat
jmp
dec
push
jns
cmp
add
mov
je
or
mov
xor
lret
push
xor
pop
xchg
xor
xor
xor
jmp
out
pop
push
dec
mov
jle
sub
dec
jb
int
adc
je
pop
pop
decb
cmp
loop
cmp
push
adc
aad
inc
test
pop
rcr
mov
mov
shr
or
mov
stos
add
xchg
push
fcomi
push
jecxz
pop
out
add
int3
inc
jo
jp
mov
lahf
inc
sbb
outsb
push
inc
test
aaa
sbb
sbb
or
sbb
fwait
inc
sarb
lret
fisttpll
pop
pushf
and
push
decb
xchg
or
add
data16
inc
cwtl
int3
jmp
test
popf
icebp
and
jbe
sub
dec
imulb
jp
adc
in
cmp
mov
jo
dec
orb
or
and
lea
lods
xchg
and
xor
pop
jg
xchg
popf
inc
jl
jae
pop
adc
xor
add
xchg
jnp
xchg
in
push
int3
cmpsl
pop
cld
rcrb
aad
or
sbb
out
push
cmp
mov
cli
pop
dec
push
sti
mov
push
imul
sub
jp
in
inc
and
loop
imul
sarl
xchg
dec
les
cli
add
or
idiv
cmp
pop
jne
movl
inc
int3
xor
xor
xor
lock
out
and
test
cmp
sub
rcrb
mov
fsqrt
jns
mov
jnp
pop
lahf
orb
std
sbb
lock
sbb
cmp
fldt
cmp
fwait
dec
xlat
cmp
lds
pop
sub
jb
aad
adc
pop
jle
subl
js
lcall
inc
repnz
jo
stos
lret
xor
push
and
sbb
mov
inc
out
jge
daa
movsb
test
lret
lcall
mov
pop
and
das
or
outsl
push
xchg
idivl
lret
xchg
inc
inc
shl
or
les
int3
pushf
or
das
sbb
add
ds
dec
movsb
out
add
pop
lret
lods
orb
pop
jp
mov
mov
fidivrs
xchg
add
push
sub
lcall
dec
xchg
fsubl
test
adc
fisttpl
mov
iret
sbbb
divl
jmp
pop
sub
std
stos
jne
xor
mov
ret
into
repz
inc
ss
sbb
aad
repnz
mov
pop
mov
inc
mov
js
jns
bound
push
inc
xchg
add
jmp
jle
insl
lret
jae
jbe
mov
add
sbb
pop
out
aam
mov
cmp
enter
inc
sub
xor
ss
pop
inc
pop
dec
add
xchg
fldt
jns
sbb
pushf
in
dec
xor
mov
dec
bswap
out
or
dec
subl
mov
imul
sub
arpl
inc
push
gs
xor
xor
cmc
push
rorb
loopne
dec
pop
push
imul
adc
js
sub
adc
test
jl
xchg
loop
ds
jmp
jae
sub
xor
sbb
es
je
push
ret
push
pushf
jno
dec
sbb
or
dec
pop
mov
mov
cmp
mov
addr16
lea
push
movsb
fs
or
push
repnz
jb
inc
outsl
mov
jbe
mov
lret
mov
xchg
or
test
xchg
cmp
mov
and
dec
stos
adc
xor
loope
sbb
dec
inc
and
repnz
or
or
adc
mov
xor
push
stc
xchg
mov
out
lcall
int
cmp
subb
cli
scas
arpl
xor
jne
xor
aaa
ficomps
call
nop
stos
adc
stos
sbb
xchg
dec
aad
push
sarb
popf
out
scas
std
xchg
cmp
xor
jns
fcomps
divb
rol
dec
adcb
ret
addr16
cmp
mov
mov
int3
push
jo
int3
inc
scas
fisttpl
mov
in
movsl
clc
push
movb
and
inc
popa
xchg
add
pushf
jp
dec
mov
ret
rorl
jle
dec
rorl
pop
jns
in
cltd
adc
popf
lods
cltd
lock
xchg
jp
push
cmp
stos
hlt
dec
xchg
es
mov
cmc
es
jp
dec
pop
jmp
jmp
xlat
in
sub
or
pop
arpl
aas
fnstcw
mov
out
inc
and
dec
pop
jne
lock
jnp
xchg
out
int
sbb
or
fisttps
test
mov
testl
fists
in
push
jmp
inc
andl
cmc
push
cmp
enter
loope
xchg
mov
lea
mov
dec
loope
sub
cmp
mov
jmp
xchg
or
inc
or
fucomip
xchg
daa
jb
mov
ret
ret
cmp
lock
fwait
adc
jge
mov
push
enter
or
push
push
js
xchg
ljmp
xor
and
dec
mov
ss
mov
push
push
sub
mov
mov
mov
pop
or
movsl
jecxz
leave
pop
enter
sub
xor
daa
stos
shl
test
and
pop
out
dec
adc
sub
pop
ja
out
les
std
cmpsl
or
mov
mov
shr
movsl
mov
or
jno
dec
das
adc
jb
fs
sbb
shr
inc
push
comiss
cmp
shll
lock
addr16
adc
jb
out
repnz
pop
movsl
imul
mov
mov
push
fmuls
lcall
dec
out
cmp
sub
outsl
sbb
xlat
data16
jns
jg
pop
pop
pop
pop
cmp
movsl
dec
xor
push
in
mov
out
imul
and
jne
fcompp
test
cmp
test
push
sub
mov
and
cli
inc
lds
enter
fisttpll
rcll
inc
dec
xor
imul
cmpsl
xchg
push
sbb
push
inc
lahf
jl
mov
pop
mov
mov
inc
cmpsl
fs
mov
pop
pushf
cmpsl
sub
mov
aaa
shl
in
xorb
aas
dec
sub
mov
hlt
mov
pop
cwtl
inc
xor
jnp
mov
lcall
ficoml
jnp
test
mov
mov
add
movsl
xchg
sub
jmp
lcall
cld
xchg
jg
or
ss
adc
jae
push
cmc
mov
mov
xor
and
sub
xchg
jle
xlat
loopne
xadd
sub
xor
fildll
mov
adc
out
cld
lret
push
fs
pop
dec
push
out
sub
lds
xor
vmovlps
mov
mov
int
shrl
js
jmp
pop
inc
jmp
cmp
ljmp
fiadds
inc
jnp
movsl
movb
loopne
stos
add
xor
test
and
and
out
mov
addr16
inc
aad
mov
in
jp
imul
enter
pop
inc
pop
pushf
int3
negb
andl
mov
out
jp
adc
aam
lods
xchg
aas
fs
pushf
mov
test
bound
es
push
xor
orb
jnp
stos
jp
jb
and
pop
jge
iret
ret
pusha
jle
xor
or
jmp
mov
mov
jnp
and
dec
enter
out
cltd
cmp
fbstp
lods
sti
cli
xor
cltd
mov
pop
inc
add
cs
jo
fdivp
in
stc
jnp
sbb
stos
or
not
mov
xchg
jp
pop
cld
fbld
js
add
cld
aas
mov
cmpb
lds
jb
pop
push
or
stos
push
std
ss
jno
add
and
in
mov
ljmp
xor
or
lea
xor
sbb
shlb
adc
or
outsl
or
xchg
stc
pusha
in
das
pop
out
cmp
add
jl
xor
int
push
ret
adc
jo
shrl
sti
out
pop
adc
in
sti
cmp
pop
jl
outsb
gs
dec
ffreep
cmp
and
mov
insl
cltd
testb
lret
mov
xor
lods
mov
cmp
das
mov
por
popa
and
push
je
mov
nop
pushf
jp
inc
mov
sbb
shrb
ror
or
and
sub
push
pop
repz
dec
push
shll
imul
jmp
arpl
adc
cltd
mov
popf
jg
ja
xor
mov
cwtl
jnp
pop
inc
les
in
jmp
fsubrs
jp
and
cli
add
dec
add
ret
cmp
xor
or
test
fidivrs
insb
add
out
testl
call
test
inc
or
inc
outsl
jne
inc
xor
pop
lea
adc
sar
xchg
les
stos
and
mov
pop
lods
pop
jno
sub
inc
iret
stc
sub
jno
sub
cmpsb
push
shrb
fstps
adc
cmpsl
sub
mov
rcll
sub
ret
cltd
arpl
je
pop
mov
shll
inc
xor
in
fs
bound
mov
or
xor
cmp
adc
les
jns
cmp
out
jae
cmp
sbb
dec
and
dec
repz
int
mov
out
push
mov
push
add
xor
mov
inc
pop
cmp
pop
loope
mov
ja
test
jmp
mov
and
movsl
pop
cmpsl
jg
mov
ljmp
push
orl
movsb
sub
adc
xor
fnsave
pop
leave
lods
mov
xchg
movsl
mov
in
cmp
jo
add
mov
mov
mov
ret
imull
jo
mov
outsb
imul
outsl
xchg
movsl
add
jg
lea
mov
mov
lcall
sub
cmpb
jmp
sbb
jo
push
adc
es
inc
iret
cs
dec
push
xchg
jae
and
insl
mov
imul
fsubrl
das
pop
shrd
push
lret
ja
mov
pop
mov
jns
mov
lods
inc
jmp
jge
or
pop
and
repnz
push
nop
outsb
mov
lds
sbb
dec
add
push
inc
cld
iret
xchg
jnp
sub
insb
push
jae
xlat
push
cmp
aam
push
sti
cmp
aam
scas
nop
inc
sahf
adc
jecxz
insl
pop
lock
insl
jmp
mov
push
mov
mov
adc
es
bnd
mov
fdivl
inc
jmp
xchg
inc
pushf
stc
negl
ja
sub
push
dec
faddl
sub
outsb
inc
dec
mov
outsl
push
mov
mov
push
shl
mov
dec
adc
mov
out
inc
mov
fs
push
mov
pushf
notb
mov
outsl
cmovge
js
cmpsl
ljmp
popa
adc
push
add
pop
je
cs
dec
xor
add
jge
clc
mov
aaa
mov
pop
and
pop
out
aaa
sbb
test
dec
subl
nop
fstpl
pop
outsl
mov
mov
mov
and
test
and
cmp
iret
xlat
and
pop
shll
icebp
into
sub
popa
out
jo
aaa
sbb
mov
jbe
jp
outsb
fisubl
cs
adc
in
sub
pop
xor
mov
popa
ret
inc
jg
rcr
mov
or
sbb
sub
pop
and
pop
fistpll
xchg
xor
test
pop
pushf
dec
out
pop
sbb
push
dec
sbb
xchg
jle
test
sbb
push
ret
mov
push
mov
nop
pop
jle
bound
jmp
pop
rclb
push
sub
dec
mov
lret
xchg
les
arpl
adc
out
and
bound
rorl
gs
movl
testb
out
hlt
or
pop
mov
pusha
adc
out
leave
aas
sub
mov
in
gs
shrl
and
cltd
pop
jecxz
ljmp
mov
aaa
mov
aam
dec
xchg
sub
jnp
adc
xchg
das
push
inc
mov
sub
xchg
mov
fimull
jge
sub
xchg
adc
test
lods
xor
mov
popf
cmp
loope
or
insl
je
mov
in
pusha
dec
sub
mov
in
out
popf
mov
and
loope
jnp
enter
test
mov
movsl
pusha
jno
or
rcll
inc
xor
popf
test
pop
cli
pop
sub
add
jnp
adc
daa
xchg
mov
pop
daa
jno
lds
ja
idivl
adc
inc
imul
push
pop
cmp
jle
inc
adc
push
int3
je
test
cmp
adc
add
add
ret
les
fbld
ficomps
mov
cmp
push
lods
cmc
les
sti
fs
lret
add
xchg
addr16
sub
pop
cli
test
rolb
popf
das
and
roll
dec
mov
lods
aad
push
mov
mov
jo
inc
cld
inc
mov
ds
cmp
sbb
xchg
sub
lcall
in
fmull
test
les
dec
mov
xchg
insl
lret
aad
xchg
mov
sbb
aaa
xorb
and
test
or
pop
ja
das
push
jge
xchg
dec
in
mov
outsl
dec
fnsave
in
mov
sarb
test
enter
xor
into
lods
jl
inc
pop
xchg
lods
das
data16
or
out
pop
inc
jns,pn
popa
sub
push
sahf
or
and
call
aad
inc
mov
mov
scas
xor
loope
dec
jmp
push
xor
scas
dec
in
loop
cmc
jmp
es
ficoml
sub
sti
xchg
sub
mov
dec
fisubrs
aam
in
push
dec
lcall
mov
out
outsl
mov
xorl
jmp
dec
pop
dec
aas
pop
ss
insb
fs
cwtl
dec
int
lret
cmp
mov
dec
iret
les
jno
sbb
test
loope
mov
out
mov
add
mov
sub
xor
shrl
ret
scas
mov
bound
cmp
push
or
fsubl
outsb
xchg
push
in
mov
aas
int
ja
or
sbb
cmpsb
sbb
pop
cmpsb
and
enter
rcrl
loope
mov
adc
mov
fsubrl
xor
push
ljmp
add
inc
sub
pop
popa
not
add
out
lahf
mov
rolb
out
cwtl
sbb
xchg
mov
inc
mov
lcall
int
pushf
stos
in
int
out
xchg
xor
movsl
mov
popa
sbb
int
sbb
and
mov
or
mov
ret
mov
adc
movsl
or
lahf
mov
or
push
add
jl
cmp
xor
xlat
inc
sbb
jge
pop
subl
mov
sbb
shll
in
sub
cmpb
adc
sub
sahf
or
inc
add
test
out
cld
dec
push
outsl
sti
pusha
inc
in
fmul
imul
mov
inc
aaa
push
sbb
xor
sbb
add
icebp
icebp
sbb
fisubs
jns
inc
rcrb
and
pop
and
insl
fadds
cmp
cmp
cmp
rol
call
or
cmp
lock
imul
inc
fwait
nop
push
nop
or
jbe
fistps
ficomps
sbb
addl
bound
jmp
cli
stos
dec
test
orl
xor
mov
mov
push
loopne
hlt
dec
in
cmp
jae
mov
adc
sahf
test
in
into
pop
dec
lods
pop
adc
hlt
dec
scas
pushf
outsl
mov
cld
dec
sub
mov
sub
in
insb
xor
jmp
mov
xchg
mov
or
dec
out
and
jmp
in
das
pop
push
sub
pop
and
cmp
std
test
lcall
sbb
mov
mov
popa
jo
imul
daa
dec
inc
xchg
inc
out
inc
popaw
imul
cmp
dec
pop
push
fs
push
mov
push
iretw
jne
lret
push
pop
mov
imul
mov
pushf
cmp
or
hlt
sub
sbb
ja
or
mov
ret
pop
push
push
pushf
jmp
or
mov
mov
mov
mov
mov
cmpb
mov
push
movsl
cld
sub
pop
mov
pop
sahf
cmp
cmpl
into
fisttpl
test
out
stos
out
lcall
cmp
push
out
fwait
jno
xchg
mov
dec
sbb
faddl
rcrb
dec
sub
xchg
add
pop
fiadds
int
sbb
push
bound
mov
ljmp
loope
stos
subb
js
add
adc
inc
jle
inc
add
jae
push
xchg
sub
mov
adc
outsb
and
xor
arpl
ds
push
adc
mov
inc
sub
loop
pop
adc
cmp
sahf
rcr
outsb
test
jg
cmp
scas
jmp
mov
jne
aas
xor
scas
adc
jge
add
fsubrs
insb
hlt
pop
sub
and
shlb
inc
repnz
nop
lock
jns
push
or
sub
sarb
fisubl
xchg
add
jo
push
das
lock
les
sbb
xor
arpl
js
xor
mov
xchg
cli
add
mov
aam
aad
imul
pop
pop
out
inc
sub
addr16
xchg
into
adc
pop
incl
iret
ds
rorl
fstpl
jp
xchg
in
jne
cltd
loop
test
int3
outsb
enter
mov
dec
sbbb
mov
fldl
pop
inc
sub
xrelease
movsl
lret
out
lods
movsl
jae
insb
test
popa
rcrl
adc
or
outsl
rolb
xor
mov
jp
std
xchg
adc
mov
adc
dec
cmp
movsl
or
nop
xor
lahf
xchg
imul
adc
aas
mov
jp
fists
push
inc
insb
xor
cld
out
orl
dec
mov
loope
pop
mov
insl
leave
xchg
sar
push
ret
dec
scas
mov
mov
mov
mov
test
xchg
scas
jp
aas
sub
mov
add
mov
jmp
lods
aas
push
lods
lret
add
mov
mov
je
pop
sahf
dec
js
clc
pop
lds
fldt
mov
and
adc
shrb
push
xchg
jnp
push
cli
aad
mov
sti
mov
or
popf
sarb
mov
xor
add
clc
inc
fstps
ds
sbb
popf
push
cmpsl
insl
mov
xor
in
iret
es
dec
sub
jne
mov
inc
daa
repnz
icebp
fnstenv
fs
xchg
inc
adc
xchg
fisubs
sbb
jno
mov
or
push
pop
fs
push
and
shr
cwtl
mov
jnp
add
lret
add
loope
dec
push
inc
mov
test
std
fadds
xchg
xchg
imul
jo
inc
cmp
shl
ljmp
dec
add
jmp
fisubrs
loope
cltd
sub
sbb
inc
sbb
dec
ss
test
shll
mov
sbb
dec
pop
push
fldenv
and
mov
mov
mov
orb
in
loopne
addr16
pop
sbb
lea
jg
push
stos
cmpsl
xor
or
mov
std
pop
push
adc
or
sbb
sub
popf
aam
inc
sbb
and
add
insl
std
push
insb
mov
mov
out
adc
jno
sub
sahf
pop
push
mov
scas
or
xor
cmp
push
imul
xchg
pop
cli
insb
jo
mov
mov
mov
es
jnp
mov
xor
or
sub
pop
test
mov
cmp
cmp
in
pcmpeqw
mov
or
movsb
sbb
sub
mov
test
fs
or
sbb
cmpsl
popa
fisubs
mov
fucomi
fs
lods
fwait
sub
iret
xchg
pop
sub
mov
stc
inc
mov
inc
roll
sub
cmpsb
pop
in
dec
cmp
daa
mov
adc
push
push
test
insl
xlat
clc
dec
dec
imul
inc
mov
inc
mov
cmpsb
ja
pop
inc
add
sti
inc
into
mov
xor
pusha
jmp
sub
mov
inc
fmulp
es
fld
push
shl
out
repnz
jmp
jmp
lret
push
sub
push
push
jne
jno
jecxz
adc
add
mov
add
imul
xchg
sub
aam
andl
dec
sub
inc
mul
mov
or
aad
cmp
mov
inc
das
movsb
xchg
fwait
pop
pop
movsl
pop
out
mov
ja
out
ds
sahf
add
push
movsl
jnp
enter
push
scas
dec
pop
lcall
jg
adc
xchg
ret
jne
sbb
mov
push
lds
xorb
in
mov
mov
jbe
fstpt
add
les
pop
add
xor
imul
mov
xlat
jnp
sahf
cmp
mov
pop
lret
sub
sub
jbe
and
xchg
mov
sub
int
fisubl
xor
out
add
shll
out
or
stos
fwait
js
xchg
orb
out
popa
in
in
pop
mov
iret
mov
sub
inc
sub
in
test
inc
lea
test
sbb
xchg
adc
inc
sub
sti
mov
mov
dec
pop
mov
aad
jbe
and
sbb
filds
sub
add
stos
outsl
aaa
incb
jae
cs
std
adc
mov
push
inc
mov
dec
mov
sub
test
sub
fwait
pop
negl
push
inc
jmp
test
mov
js
jae
or
pushf
sbb
and
call
fs
repz
mov
cmp
xchg
pop
or
cld
das
push
gs
pop
dec
jb
nop
sub
movsb
mov
push
xor
aad
sub
lret
dec
mov
shl
in
into
dec
in
fldenv
mov
rcrl
cmc
push
push
xor
xchg
popa
lds
pop
movsl
in
ljmp
jp
loope
in
nop
ds
insl
cmpl
mov
sbb
sbb
mov
repnz
pop
mov
aam
sbb
xchg
push
jg
addr16
stos
es
sub
fldcw
in
xchg
xchg
xchg
mov
sbb
arpl
jecxz
aas
push
dec
or
out
or
insl
repnz
pop
addr16
push
lcall
push
je
lret
loope
jns
xor
or
inc
jb
movl
lock
mov
fistpl
inc
mov
xor
jo
push
loope
test
bound
test
push
adc
sbbb
and
int3
xchg
mov
pop
mov
push
ds
adc
push
out
fdivl
aas
in
add
adc
sub
jb
hlt
lods
mov
clc
mov
sbb
jp
xchg
mov
out
cmp
cmp
out
ss
lea
pop
pop
jle
cmp
push
and
jbe
ds
mov
ja
dec
in
mov
ret
pusha
inc
mov
add
cmp
xchg
inc
imul
xchg
push
ret
pop
xor
jbe
jle
sbb
cwtl
hlt
xchg
inc
and
adc
aaa
ret
call
mov
adc
out
mov
stos
cmp
out
cld
mov
popf
sub
jne
adc
mov
push
les
sub
mov
push
mov
dec
jmp
fisubs
and
cltd
pop
cmpsl
add
jb
fidivs
inc
stos
or
pop
lods
daa
fidivl
cmp
int
dec
sub
adc
outsl
adc
dec
cmp
mov
mov
cwtl
push
jne
rorb
call
insb
lods
fistpl
out
lods
and
icebp
pop
add
cmc
push
xchg
mov
or
loope
xchg
idivb
pop
lret
rolb
fidivs
jns
test
dec
push
xchg
pop
mov
popf
xchg
fldenv
inc
cmp
idiv
jns
mov
push
lret
add
pop
mov
in
data16
pop
push
push
or
or
and
pusha
jge
jb
int
jg
mov
mov
out
cmc
ja
push
cmp
std
loopne
rorb
jb
leave
xor
lea
ror
in
aas
leave
xchg
dec
int3
jo
fsts
rorb
add
mov
sub
lods
mov
cmp
xchg
mov
psllw
insb
js
inc
mov
inc
mov
push
in
mov
sbbl
jbe
mov
stc
and
jmp
outsl
std
faddp
clc
ds
ss
lds
scas
xor
and
pop
adc
movsb
sub
inc
subl
inc
and
fwait
scas
ret
push
dec
scas
lock
jmp
andl
xchg
ret
xor
inc
push
add
jns
and
jbe
jno
sub
mov
aaa
fnstenv
lea
loop
mov
mov
sbbl
cmpsb
xchg
jmp
jge
or
cwtl
movsb
sbb
jb
outsl
xchg
faddl
mov
adc
ss
jp
hlt
push
pop
ret
add
inc
push
xchg
fnsetpm(287
jp
lret
cmpl
lods
adc
mov
pop
mov
xchg
jbe
cmp
enter
ljmp
or
sub
pop
test
popf
pop
filds
xchg
pop
jmp
sub
adc
mov
sub
addl
rep
and
cmp
sarl
mov
cli
lcall
sub
adc
ret
cmp
cwtl
push
test
leave
hlt
add
loopw
je
ljmp
pop
xchg
lret
push
pop
and
ljmp
push
aaa
popa
jmp
jmp
sbbb
nop
pop
sub
cmpxchg
cmpsb
and
into
pop
jp
cmp
jne
jbe
xor
push
push
adc
outsb
push
shlb
adc
pop
jns
cmp
pop
pop
xor
lods
loopne
adc
fiaddl
fldz
pop
mov
fadds
inc
int
imul
test
lret
cmp
ljmp
jb
inc
sbb
pop
sub
mov
push
shlb
pop
jp
xchg
int
xchg
cwtl
and
cmpsb
mov
mov
cmpsb
nop
pop
ror
repnz
or
and
xor
xlat
mov
fcoms
or
repnz
test
push
aad
xor
push
mov
hlt
cmpl
add
sbb
rcrl
in
stc
clc
fmull
adc
rcrb
gs
scas
add
sbb
lret
jbe
mov
fwait
adc
imul
dec
data16
dec
jb
movsl
xor
dec
mov
sub
ljmp
add
mov
les
mov
mov
fnstenv
and
fwait
loopne
cmp
sahf
sbb
mov
mov
jo
inc
sub
add
push
outsb
push
xchg
ja
jecxz
sarl
jg
inc
add
cmpsb
fistpll
not
jge
fldl
add
mov
fwait
mov
push
ja
push
inc
cmpb
mov
add
mov
hlt
inc
int
in
sbb
mov
add
sub
popa
out
popa
dec
push
add
pushl
xchg
les
jno
push
jb
call
les
cmp
rclb
cmp
pop
dec
mov
push
lods
xchg
inc
dec
jge
lret
aam
mov
test
jge
mov
int
sbb
lea
push
stos
mov
imull
in
fisttps
push
shll
pop
in
and
mov
inc
movsb
lods
pop
adc
cmpsb
lods
cmp
imul
push
cwtl
cltd
push
loope
jbe
pushf
loop
mov
lds
mov
fwait
dec
clc
int
cmpsl
lock
in
aas
mov
daa
popf
imul
mov
scas
nop
inc
cmp
out
xor
adcb
sbb
mov
mov
andb
sub
jns
jb
inc
push
nop
xacquire
xchg
dec
sub
adc
mov
xchg
push
shrl
sub
ds
scas
push
stc
jl
int3
sbbb
stc
push
cmp
mov
in
test
sub
xor
dec
add
loope
das
sti
cmp
push
add
inc
sbb
out
inc
ret
jge
sub
pop
sub
pop
imul
rcr
push
pushf
shll
pop
js
mov
cmp
jmp
fcmove
add
mov
xchg
xor
loope
xchg
outsb
fidivrl
jne
xchg
das
rcrl
cmp
push
jmp
iret
in
ja
cwtl
inc
popf
test
push
sbb
sbb
xlat
cmpsl
call
and
push
xlat
sbb
jmp
cwtl
sbb
movsb
cld
xor
insb
sbb
sub
rorl
jne
push
adc
jmp
jl
pop
repz
inc
pop
or
xchg
neg
xchg
xchg
xor
add
jbe
lods
in
fsub
mov
stos
int
loop
test
xor
inc
ss
shlb
sub
loop
lods
push
xchg
ret
ret
sub
mov
mov
in
sbb
shl
pop
dec
xchg
add
xchg
pop
push
adc
pop
mov
xchg
out
mov
leave
mov
in
push
mov
ss
push
sti
popf
mov
adc
movl
adc
adc
bound
cmp
lret
loopne
or
mov
lods
mov
xor
push
adc
out
lahf
add
mov
cmp
or
jl
lcall
jl
into
nop
scas
cmp
fnstsw
sbb
enter
lods
sub
lods
inc
adc
sub
fildl
mov
push
xor
and
fbstp
mov
loopne
sub
cmpb
ret
jb
imul
dec
push
addr16
or
pop
cli
fldenv
adc
xchg
jg
and
js
mov
mov
pop
jle
cmp
jo
and
push
sbb
dec
mov
push
pop
bound
xor
outsb
rolb
je
cmp
jae
ja
adc
mov
sub
lods
out
in
icebp
or
das
js
jne
adc
jbe
cltd
push
out
push
push
pop
jae
cs
inc
jp
sub
mov
mov
mov
cwtl
adc
xchg
cmp
add
lret
cmp
shrb
xlat
mov
dec
jb
mov
inc
xor
pop
add
xor
hlt
xor
xchg
inc
jp
aad
stc
sbb
push
inc
movsb
daa
or
imul
fcoms
sub
sub
out
lahf
or
clc
fstpl
daa
mov
inc
data16
out
pushw
rcl
lods
xchg
mov
dec
mov
mov
xchg
sbb
fptan
gs
inc
loopne
xor
cld
mov
enter
loope
int3
orl
jecxz
dec
in
movsl
inc
jbe
mov
fbstp
and
mov
mov
int3
push
mov
sub
aas
fisubrl
ss
dec
sub
xchg
jecxz
mov
into
cltd
movsl
lret
out
daa
sahf
mov
out
xchg
ljmp
pop
inc
xor
fnstsw
inc
pop
sub
xor
jge
jp
xor
negb
adc
cwtl
fdivr
aad
testl
cmp
add
cmpsb
lret
arpl
and
pusha
punpckhbw
inc
loopne
add
pop
jb
pop
lcall
pop
push
scas
int
sbb
ljmp
jl
mov
pop
sbb
jbe
push
dec
inc
out
test
es
push
das
les
stos
incl
lcall
ret
inc
cmp
lock
inc
aad
adc
out
sub
xchg
inc
xchg
repz
jle
loop
pop
scas
mov
mov
sti
sbb
dec
pop
lret
sub
jecxz
dec
jbe
inc
pop
cmc
movsb
jns
mov
imul
stc
lea
pusha
or
mov
ds
pushf
fs
pop
mov
test
mov
mov
adc
xor
pop
mov
inc
mov
popf
xchg
daa
ljmp
add
sbb
cmp
dec
jne
loop
or
push
mov
movsb
xor
fdivr
add
loope
xor
mov
icebp
dec
addb
xor
push
cld
mov
sub
sti
or
sub
pop
fcmovnb
jnp
enter
dec
int3
daa
loopne
sti
test
sbb
sub
xor
jle
sbb
pop
lods
jp
or
inc
cltd
pop
mov
mov
dec
jae
mov
popa
jae
add
lock
aas
pushf
cmpsb
jecxz
das
out
push
mov
add
shrl
sbb
lcall
nop
leave
sarl
mov
in
pop
cmp
lret
push
das
lods
rolb
sbb
push
inc
xor
out
dec
push
ss
bound
cmp
sub
jl
inc
ljmp
dec
insl
inc
shl
orl
ljmp
and
dec
mov
jb
jle
jnp
sbb
mov
adc
adc
add
ja
lock
das
dec
xchg
sbb
dec
inc
or
pop
dec
xor
push
inc
dec
mov
ffreep
pop
dec
mov
lods
push
mov
mov
mov
and
ljmp
xchg
sti
insb
inc
sub
jbe
xor
mov
push
les
int3
imul
or
pop
pop
loope
jno
mov
dec
ret
mov
rcll
inc
sbb
test
sub
es
push
jmp
popa
push
fmuls
imul
push
xor
loope
and
mov
repz
mov
xlat
les
je
xor
adc
adc
jb
arpl
decl
inc
jbe
ja
xor
jae
cs
ja
mov
bound
pop
andb
xchg
sti
stos
dec
jne
push
test
push
scas
sub
nop
roll
mov
enter
jne
call
mov
ret
sbbb
xchg
shll
adc
jo
stos
inc
add
push
pop
push
pop
inc
add
rcrl
dec
xchg
lahf
push
xor
xchg
mov
lcall
iret
mov
add
mov
xor
mov
mov
dec
inc
out
mov
pop
sahf
les
arpl
xlat
sub
cld
push
jne
xor
mov
les
jmp
mov
es
pushf
jmp
xchg
adc
cmp
xchg
sbb
lret
push
icebp
adc
push
sub
lahf
les
dec
sti
les
jmp
pop
loope
bnd
push
outsb
es
push
divb
sub
ds
fisttps
adc
divb
in
sub
and
or
sub
sbb
aad
cld
jns
mov
lock
cmp
in
jl
je
scas
pop
cmc
pop
jge
vpor
xor
inc
pop
rcll
sahf
in
adc
xor
adc
xchg
pop
idivl
jae
jb
cmpsb
imul
into
cmp
pop
in
push
inc
fistpll
inc
les
lret
mov
data16
testl
jne
mov
repz
loope
mov
fists
mov
xchg
sub
daa
call
inc
xchg
cltd
movsl
or
cmpsb
das
mov
int3
bound
ja
xor
cmp
jns
popa
mov
sub
or
pop
xchg
out
cli
mov
aaa
fnstenv
gs
jg
iret
in
mov
fdivs
out
push
jno
push
lods
xlat
insl
adc
add
sub
