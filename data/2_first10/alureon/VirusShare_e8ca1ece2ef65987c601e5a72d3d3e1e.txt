mov
xor
adc
xor
push
xor
lea
mov
jmp
and
mov
rol
neg
neg
xor
rol
shl
lea
lea
xor
jmp
not
movl
mov
not
not
adc
and
mov
lea
xor
add
and
rol
mov
neg
rol
mov
lea
lea
push
push
pushl
pushl
call
jmp
xchg
neg
mov
xchg
rol
rol
mov
lea
xchg
xor
lea
not
rcl
jmp
mov
mov
xor
lea
xchg
mov
not
not
mov
xor
rcl
adc
lea
jmp
xor
not
adc
mov
lea
xor
add
xchg
cmp
je
xchg
mov
xor
jmp
push
mov
sub
push
push
push
xchg
rol
xor
add
neg
xor
push
mov
mov
jmp
rcl
ror
lea
not
neg
lea
lea
xor
pop
pop
pop
leave
call
call
mov
jmp
mov
xor
xor
not
mov
mov
shr
jmp
mov
add
shl
mov
mov
not
mov
decl
jne
mov
xor
jmp
mov
mov
lea
lea
ror
popl
and
xor
jmp
xor
lea
lea
mov
mov
xor
mov
push
call
mov
xor
lea
xchg
xor
neg
jmp
shl
mov
neg
adc
ret
xor
mov
lea
add
lea
not
mov
not
xor
jmp
add
xor
adc
xor
movl
lea
jmp
mov
xor
neg
and
push
call
push
xchg
ror
mov
pop
ror
shr
cmp
je
neg
shr
neg
jmp
mov
lea
mov
xor
neg
not
mov
add
shr
rcl
xor
mov
rol
and
jmp
adc
ror
mov
shrl
not
rcr
mov
jmp
cmp
filds
push
pop
hlt
sbb
lds
pop
or
push
cs
xorl
pushl
cmp
mov
cs
cmp
dec
dec
ja
jnp
cmp
and
add
dec
ficompl
clc
jmp
push
jge
decb
ss
jb
pushf
pop
jg
push
lods
ret
in
inc
xchg
ret
std
push
stos
adc
jnp
pop
imul
sahf
xlat
adc
jp
es
in
movsl
push
lds
mov
cs
fimuls
ja
sub
inc
int
jp
je
movmskps
push
popf
sbb
or
jo
rclb
scas
pop
push
pop
dec
or
add
sti
lret
push
test
les
or
push
rcrl
inc
lar
push
mov
insb
movsl
mov
testl
jns
je
xlat
mov
test
or
cmpl
sub
roll
ret
cwtl
mov
shlb
jbe
lcall
sub
data16
mov
movsl
xchg
dec
add
xchg
mov
sub
xor
jle
and
jbe
or
xchg
sub
fidivl
les
jp,pn
pop
xor
pushf
jne
mov
pop
pop
add
outsl
lret
popa
jp
je
mov
sbb
je
jp
mov
jp,pn
lahf
push
pushfw
pop
aaa
movsb
mov
out
lcall
cs
mov
jp,pn
jle
xchg
or
divb
das
sub
addl
cmp
cmp
xor
shrl
pushf
leave
test
pop
mov
pop
lahf
std
push
pop
stos
adc
jnp
pop
imul
mov
ljmp
xchg
je
test
scas
inc
cli
cs
jns
lahf
fcomip
bnd
jp
je
sti
fwait
push
xor
divl
add
jp,pn
lcall
divl
dec
push
outsb
adc
push
cs
jns
jae
adc
dec
std
imul
je
pop
dec
jmp
mov
add
stc
outsl
outsb
jp
xchg
mov
jp
sbb
divl
fs
test
and
pushl
jp
adc
divl
filds
enter
dec
mov
jne
pop
sub
mov
sub
pushf
mov
insl
outsb
jp
icebp
cmp
je
sub
dec
dec
lods
inc
scas
xor
jne
ja
jp
jnp
cmp
movsl
cmp
ljmp
std
outsl
push
mov
adc
dec
dec
icebp
cmc
bound
mulb
aaa
inc
ja
inc
fnsave
testl
sub
dec
rolb
mov
mov
addr16
shlb
inc
mov
ret
pop
outsb
cmp
xor
and
push
jbe
cmp
icebp
hlt
dec
data16
cmp
jg
js
mov
sarl
ds
leave
js
or
ja
mov
jo
jno
int3
mov
add
adc
push
sbb
roll
mov
cs
sar
mov
mov
jns,pn
jl
or
ja
jb
sbb
pop
xor
aam
mov
jno
add
mov
dec
mov
icebp
test
fnstcw
jl
pop
mov
push
pop
jg
xor
cmp
es
fisttps
inc
xchg
je
pop
stos
lods
mov
loop
movsl
daa
mov
daa
sbb
out
and
aam
cs
notl
jp
dec
movsl
movswl
fidivl
ja
jb
cmp
stc
pop
jl
xchg
push
push
adc
mov
pop
jb
mov
jp
jne
inc
push
lcall
mov
jns,pn
shrb
jp
dec
fimuls
jge
movsl
mov
jmp
je
jns
jl
xor
pop
and
jbe
jg
negl
push
or
cwtl
dec
mov
icebp
stc
jo
je
mov
push
mov
cs
loope
jmp
jp
inc
movsl
leave
ja
jp,pn
add
icebp
sarl
ret
popa
xorl
jns,pt
jl
adc
jl
stos
lahf
lds
push
inc
jp,pn
ljmp
cmp
and
ljmp
mov
jae
jp
cmp
cmovae
jne
mov
es
push
out
ja
sub
je
mov
or
cli
dec
je
ja
js
jge
test
int3
in
jmp
xor
outsl
jno
daa
mov
xorb
das
ss
jp
fiadds
push
je
push
inc
sbb
aam
inc
gs
add
sbb
fndisi(8087
psubsb
inc
jl
cmp
mov
inc
push
rcrb
repz
jne
push
enter
fwait
sub
movsb
imul
adc
add
xchg
push
lods
sub
pop
inc
repnz
clc
jp
out
push
ss
and
sub
sub
mov
pusha
push
scas
scas
es
xchg
xchg
mov
jbe
cmp
adc
ljmp
ret
jne
hlt
adcb
imul
jne
gs
pop
pop
iret
mov
mov
cmp
jae
or
adc
daa
xchg
daa
sub
pop
mov
pop
push
fmull
mov
push
push
sub
mov
dec
bound
add
icebp
repz
sub
movsl
sub
dec
scas
outsl
inc
sahf
push
ret
and
ss
push
push
jb
mov
shlb
jne
pop
xor
ret
xchg
mov
cmp
ret
cmp
sti
dec
fs
jge
lods
lods
mov
adc
mov
or
cli
jnp
jne
gs
les
or
mov
and
add
add
lea
insl
sbb
out
imul
ja
or
testl
test
inc
roll
pop
add
mov
jle
jp,pt
subb
push
jae
add
dec
pop
and
or
push
scas
xor
jns
push
cld
test
mov
loope
js
hlt
cld
jno
in
js
icebp
jno
xchg
cmp
cli
out
inc
or
adc
out
dec
add
mov
mov
adc
push
repnz
jns
in
bound
xlat
fwait
sub
or
mov
call
sbb
lret
dec
inc
jmp
jl
and
aas
test
std
dec
mov
pushf
push
add
insl
jp
pushf
cltd
test
jg
sti
mov
jp
mov
testl
loopne
div
js
out
jns
lret
and
jecxz
sbb
xor
js
cwtl
pop
mov
mov
mov
and
sarl
xchg
jge
jge
mov
cmp
cmp
inc
sub
push
jbe
jnp
stc
imul
nop
inc
pop
push
pop
lahf
aaa
sahf
cmc
incb
jo
pop
scas
add
dec
and
lahf
inc
ret
pushl
jp
mov
std
jns
jge
jl
arpl
and
xchg
push
je
jne
imul
push
shl
jb
ljmp
or
and
mov
in
jl
and
outsb
out
lcall
sub
jnp
sub
mov
cmp
cmpsb
pop
sbbl
out
mov
sbb
dec
into
pop
call
lock
inc
xlat
stc
dec
inc
aas
sahf
and
pop
jge
test
cmp
sbb
fnop
xor
rclb
jp
xor
push
mov
inc
adc
pop
jno
jns
mov
outsl
and
jmp
lock
add
dec
pop
dec
jae
sti
sub
arpl
jmp
cmc
sub
sub
xchg
clc
fnsave
popa
insl
add
jno
sub
cmc
inc
dec
add
shr
dec
in
popa
repnz
inc
xor
out
aam
jle
test
scas
xor
jle
and
cmp
and
push
out
mov
cmp
fst
pop
mov
out
cmp
dec
movsl
xor
jp
push
jno
or
jo
sti
leave
int
jmp
dec
jb
cmp
sbb
adc
pop
femms
xor
outsl
xlat
mov
add
mov
push
inc
rclb
sahf
inc
es
mov
cmpsl
inc
incl
mov
pop
ja
repz
xor
ss
aas
inc
push
call
aad
movsl
add
dec
sub
push
mov
stc
ljmp
lret
pop
mov
xor
cli
jno
inc
rep
and
xorb
push
jnp
or
jbe
fisubrl
xchg
xor
pusha
sub
ss
divl
pop
mov
xchg
out
cmp
or
fwait
mov
stos
sahf
pshufw
xlat
xchg
jae
test
hlt
fcmovnbe
mov
xchg
push
pushf
dec
fistl
cmp
pop
fildll
jl
stc
push
jo
and
jl
hlt
xchg
mov
or
push
or
pop
jno
jl
icebp
push
mov
mov
xchg
push
ds
and
sub
ss
pop
jae
add
jmp
xchg
xchg
jge
rcrb
adc
ret
adc
std
sbb
push
xchg
imulb
pop
pusha
dec
in
sarl
mov
sub
gs
lock
mov
mov
lods
dec
jg
mov
xorb
enter
and
xor
ss
jb
pusha
mov
out
shrl
mov
jnp
jno
or
jns
cltd
push
fisubl
xor
repz
sub
sbb
xchg
loop
mov
scas
cmp
cmp
stos
xchg
mov
and
aaa
and
lcall
cwtl
out
cmp
sub
imul
js
enter
arpl
aad
ss
js
jno
mov
pop
xchg
data16
out
into
aaa
icebp
cmpsl
aaa
push
cmpsb
pop
pop
scas
jp
xor
outsb
scas
rorb
and
add
jo
daa
adc
sub
cmp
and
mov
aam
mov
insb
daa
cmovbe
inc
lahf
inc
pop
out
ret
fidivrs
jle
stc
mov
dec
jmp
bound
mov
stc
mov
inc
clc
or
loope
or
mov
or
mov
jbe
sbb
pushl
and
inc
lock
fsub
ficompl
jl
and
add
mov
cmp
jmp
data16
mov
test
ret
cmp
pop
lds
frstor
inc
xor
out
scas
add
xchg
mov
pop
pop
sub
pusha
out
mov
cmp
sarl
push
outsb
test
les
div
xor
inc
cli
jae
inc
and
aaa
ret
xchg
pop
and
dec
mov
mov
outsb
aas
popf
js
js
sbb
fdivp
adc
and
jae
sbb
test
sahf
lea
dec
in
cmp
xlat
fs
jmp
test
jmp
cmp
montmul
cmpsb
add
push
pop
lret
jo
sub
and
jb
cld
or
xor
or
lret
dec
lods
push
sub
mov
jb
dec
movsl
add
fs
add
out
adc
or
std
xor
call
adc
int3
repnz
lods
cmpb
or
lret
mov
shl
cmp
cmp
aam
jmp
pop
mov
pop
add
bound
dec
cmp
and
js
idivl
jo
dec
in
ret
cli
cmpsl
sbb
scas
or
pop
js
dec
in
push
cmp
popf
mov
push
les
into
ss
sahf
hlt
or
ljmp
ja
push
in
jg
lret
test
ret
test
jg
lahf
jp
adc
pop
sbb
jo
push
es
inc
dec
mov
xchg
add
cmp
ds
daa
cmp
addr16
mov
fdivp
xlat
cmc
call
lret
sti
push
cmp
jg
xchg
outsb
mov
adc
rcr
and
aas
add
pop
xchg
in
repnz
fsub
bnd
adc
mov
cmpsl
inc
popf
mov
mov
out
imul
scas
out
and
bound
ss
mov
jb
xchg
push
add
cmp
cmp
cmp
mov
xchg
mov
jecxz
out
or
dec
in
data16
xchg
pop
sub
pop
cld
ds
xchg
pop
xor
jae
jb
sahf
mov
inc
pop
jle
insl
sub
mov
jle
jp
cmp
test
pop
sbb
in
mov
dec
or
cmc
or
mov
gs
ss
loop
jmp
push
pusha
stos
popf
stos
mov
cmp
test
ljmp
filds
jb
pop
push
jge
jo
in
inc
push
xor
pop
movsb
icebp
mov
pop
jb
test
repnz
insb
push
push
daa
lods
dec
pop
push
push
or
xchg
pop
addb
dec
sub
test
jp
jg
daa
cmp
push
ljmp
rcll
out
dec
pop
or
mov
jle
insl
mov
sub
inc
jno
adc
push
mov
test
sbb
pop
sub
xorb
repnz
push
into
inc
aas
xchg
addr16
jle
int3
mov
dec
push
dec
insl
sub
pushw
lock
repz
testb
sbb
push
and
shl
stos
hlt
fbld
dec
inc
xor
xor
mov
dec
cmove
pop
mov
cli
mov
imul
das
push
sbb
scas
pusha
lds
inc
out
or
pop
xchg
jl
sub
push
pop
or
in
clc
sti
movsl
push
ss
inc
push
xchg
out
in
inc
gs
test
repz
inc
mov
int
sbb
mov
xor
push
fimuls
out
lock
mov
data16
rolb
bound
mov
rclb
mov
rcrl
gs
shrb
rolb
mov
lods
xorb
sbb
pop
jnp
pop
movsb
cmp
add
mov
imul
jns
out
cmp
and
mov
and
jp
sti
pop
ss
push
dec
repnz
and
in
aas
fistl
divb
sbb
out
test
and
mov
std
cmp
clc
sub
and
jle
xchg
cwtl
movsl
stos
adc
in
cmp
jl
cmp
inc
out
out
test
xchg
loop
shl
mov
push
shl
pop
jg
dec
xchg
mov
outsb
dec
sbbl
push
in
pop
shll
repnz
pop
lock
push
test
pusha
dec
in
mov
pop
jo
scas
imulb
pop
scas
cmpsb
jno
mov
mov
jnp
and
adc
push
push
mov
xorb
es
pop
sbb
mov
jl
xchg
or
movsb
ljmp
mov
xchg
jo
xor
xor
ds
clc
xchg
loop
shlb
enter
scas
repz
popl
xor
sub
push
cmp
xchg
lock
es
pushf
orb
scas
out
gs
jl
aam
shll
mov
add
dec
jae
std
adc
push
sub
pause
ljmp
mov
jp
sbb
shlb
shrb
arpl
aam
int
int
adc
fldcw
iret
add
push
fadds
es
leave
adc
jl
sti
pop
inc
pop
adc
es
mov
mov
scas
xchg
mov
mov
push
adc
sbb
xor
xchg
inc
int3
hlt
sbb
into
fidivrl
or
push
xlat
xchg
vpunpcklbw
pop
pand
push
xor
push
cmp
mov
add
adcl
add
lds
mov
rol
dec
push
aaa
add
xor
adc
int
jne
mov
mov
mov
imull
cld
aaa
push
jp
adc
adc
push
mov
lcall
add
add
push
lds
inc
dec
out
out
sbb
xor
push
sbb
adc
sbbl
sub
pop
push
or
pop
inc
or
pop
mov
xchg
jb
pop
mov
adc
notb
in
jo
sbb
dec
out
fcomps
stos
jo
and
xor
push
dec
mov
adc
pusha
mov
pop
js
push
aam
push
data16
movsb
pop
xchg
pushf
push
sub
pusha
out
es
xchg
xchg
pop
mov
or
fwait
pop
cmp
lahf
movsb
cmpsl
mov
adc
es
adc
repnz
sbb
dec
aad
jg
pop
mov
jne
stos
mov
xor
jle
pop
inc
loop
cmp
xchg
adc
mov
out
push
sbb
xchg
adc
and
or
jo
loope
jp
fdivrl
add
flds
or
cmc
stos
mov
mov
mov
jbe
aam
sbb
jp
insl
or
sub
mov
add
popa
aaa
fucomp
mov
adc
insl
jnp
aam
and
das
inc
pop
cli
adc
or
bswap
cld
xchg
rorb
xchg
xor
push
and
push
xor
cmp
push
jg
pushf
ffreep
push
or
cmp
jle
push
xor
cmp
xor
jge
sbb
jmp
sub
int3
xor
pop
push
cmpsb
dec
fbstp
cld
and
adc
sahf
dec
cmp
scas
inc
jae
aaa
es
push
bound
and
xor
xor
and
dec
jnp
push
or
in
push
xor
adcb
add
loope
into
inc
sbb
pop
cmp
repnz
in
fcoms
xor
iret
add
inc
cli
jns
lcall
aas
and
shrl
push
cmp
mov
or
dec
sub
ret
lret
jge
int
cmp
push
adc
aaa
cmc
popf
adc
mov
repz
in
cld
cmp
aad
cwtl
mulb
sub
addb
insb
add
and
data16
mov
sub
scas
mov
dec
in
push
outsl
aaa
mov
popa
in
std
out
ja
movsl
pop
ss
outsl
or
mov
imulb
sub
dec
fidivrl
out
sbb
cmc
lcall
jmp
jp
fistpll
mov
divb
cmp
test
ja
or
cltd
jg
data16
fidivl
xor
stc
adc
lahf
push
push
xor
bound
cmp
ret
inc
stos
sti
push
gs
pushf
mulb
xchg
mov
jge
comiss
bound
mov
das
sub
adc
iret
aas
jb
xchg
xor
jge
popf
pop
int
es
sbb
scas
xor
mov
in
adc
fiadds
jp
xor
outsl
xchg
xor
xor
test
dec
pusha
stos
test
frstor
mov
xor
mov
fs
sub
out
cmp
jnp
cmp
cmp
or
jae
fwait
xchg
pop
push
test
sub
mov
lods
fs
inc
dec
pop
mov
std
sub
and
out
jne
ljmp
insl
je
ret
lds
loope,pt
cmp
push
popa
and
out
mov
sub
pop
push
out
loopne
icebp
outsl
pop
mov
and
xor
jo
add
sub
aad
or
repnz
xor
data16
in
jmp
adc
jne
pop
xchg
test
cs
sahf
cs
and
in
jp
xchg
mov
push
jns
mov
push
cmp
movsl
orl
jns
jmp
dec
lock
jle
and
mov
je
cmp
adc
mov
ret
xchg
jnp
sbb
sbb
push
inc
sub
inc
lcall
test
and
int3
cli
jl
dec
into
xor
pop
mov
adc
outsl
mov
or
xchg
xchg
inc
jbe
mov
ror
ljmp
or
sub
sahf
push
xchg
and
jno
sbb
and
jo
arpl
sbb
jp
pop
imul
mov
es
sahf
and
jns
je
loopne
filds
imul
jne
aas
cs
jecxz
sbb
cmp
pop
inc
movsl
jp
ss
sti
repnz
ss
inc
sub
out
sahf
test
xchg
jp
fistpl
add
in
outsl
xor
bound
or
aaa
cs
adc
push
insl
decb
pushf
adc
fs
mov
dec
leave
jnp
inc
or
testb
sub
nop
loop
cmp
adc
mov
mov
jmp
ja
jbe
xchg
in
dec
hlt
bound
ss
pop
mov
push
pop
mov
cmp
mov
mov
movsl
cli
aad
aas
cmc
je
call
xchg
dec
das
lret
and
mov
jge
cmp
sub
jo
sub
aam
dec
sbb
sbb
adc
pop
add
fsts
pop
jp
add
int
push
pop
mov
push
cli
imulb
std
aas
std
movsb
icebp
cmp
das
hlt
cmp
call
cs
mov
aaa
and
cli
mov
in
popa
repnz
mov
ja
mov
fs
loope
test
mov
cs
sub
mov
ljmp
mov
mov
std
sbb
iret
divb
je
les
icebp
jl
add
cs
les
jp
cli
mov
scas
decb
std
dec
je
xlat
push
add
loopne
sub
das
popf
aad
jg
outsb
mov
sub
dec
icebp
push
push
arpl
mov
push
adc
into
je
cmp
cmp
lret
add
add
pop
jp
inc
dec
or
dec
jo
or
push
cmp
ss
jp
xor
pop
cmp
xor
clc
and
sub
and
pop
xchg
sub
repnz
es
jl
pop
cmovb
movsl
pop
and
push
push
stc
es
gs
in
das
std
mov
sub
mov
mov
lahf
fcoms
mov
lahf
rcll
xlat
sbb
sahf
lret
idivl
cltd
ljmp
lds
in
mov
jo
out
jl
pusha
jp
mov
mull
imul
leave
xchg
pop
sahf
lds
inc
test
mov
mov
xlat
orb
dec
mov
jnp
ja
jg
jae
jb
jle
jbe
jp
jp
gs
mov
insb
aaa
pusha
lods
push
push
pop
xchg
push
or
push
cs
sahf
pop
add
ds
jp
pop
adc
mov
inc
mov
pushl
xor
cmp
push
jg
mov
push
dec
adcb
mov
jno
out
dec
pop
cld
mov
push
test
and
fwait
int3
pop
adc
ljmp
mov
jle
xchg
fcoms
xchg
rcll
ret
jp
inc
sbb
dec
shrb
inc
pushl
cs
xchg
jae
pusha
bnd
icebp
push
ljmp
and
test
mov
and
jnp
aas
test
cs
imul
inc
stos
stc
jg
scas
inc
fwait
out
fcomip
dec
xor
ffreep
cmp
xchg
jnp
add
and
pop
mov
sub
add
daa
add
add
sbb
sub
jg
sbb
outsl
cmp
cs
or
or
adc
lret
ret
jg
lods
adc
dec
cmovb
cmp
aas
mov
sbb
push
xchg
pop
dec
in
loop
cmp
cmp
idivb
mov
jns
fwait
stc
and
and
inc
pop
push
out
push
jge
dec
flds
mov
xor
nop
hlt
cmp
push
lahf
icebp
test
fsubl
add
xor
xchg
pushl
mov
loope
sub
push
mov
xor
inc
or
jp
fcmove
adc
out
testl
int
lret
orb
js
mov
push
xor
and
fldt
bound
std
inc
or
push
js
lret
rcr
roll
addr16
cmp
cwtl
add
subb
and
fldcw
sub
ret
cmp
sbb
divl
iret
jg
notb
mov
mov
dec
popa
les
cs
pop
aaa
inc
jb
add
mov
mov
cwtl
mov
ljmp
lods
mov
push
inc
wrmsr
dec
out
test
push
mov
mov
inc
xchg
mov
mov
inc
mov
fwait
fs
mov
sbb
je
out
outsb
pop
adc
mov
xor
ja
push
mov
or
shlb
outsl
fidivrl
pop
jp
cmp
outsb
dec
popf
push
push
mov
xchg
pushf
cli
mov
xlat
and
dec
and
idivb
mov
ret
jnp
in
add
int
repz
mov
ret
std
jp
pop
pushf
das
jg
movsb
out
stos
lock
aam
test
mov
lret
jecxz
scas
je
std
pop
std
enter
xor
pop
and
ret
pop
fwait
pcmpeqb
shlb
fisttpll
mov
inc
dec
sbb
aam
je
push
int3
push
imul
sub
mov
cld
imul
sbb
adc
and
jae
add
xchg
fldl
inc
jmp
pop
jp
add
subl
mov
fwait
xor
pop
arpl
pop
cmpsl
dec
dec
xorl
into
jmp
push
pushf
aaa
adc
mov
add
pop
cs
inc
pop
push
mov
mov
test
mov
pop
xchg
scas
lods
mov
dec
cld
stos
lock
lods
or
test
clc
stos
sbb
cs
sarb
jp
shl
fwait
adc
pop
mov
xchg
push
push
adc
aaa
leave
je
or
mov
adc
cs
subb
push
dec
inc
cld
sub
je
loope
insb
test
into
repz
and
mov
xor
fsubr
in
test
fstl
jp
std
addb
lret
jl
cli
outsl
xchg
in
dec
or
inc
std
push
sarb
pop
notl
xorl
jecxz
push
addr16
push
push
ljmp
cld
je
sbb
push
cli
sub
cs
repz
jp
pop
fidivs
and
pop
mov
stos
scas
sahf
xlat
loopne
aaa
xchg
je
cmp
add
aam
pop
sub
adc
dec
mov
aaa
rcll
inc
mov
ds
dec
push
push
ja
or
repnz
dec
xorl
mov
xchg
dec
pop
ss
add
pushf
das
add
lret
sbb
xor
leave
cmpl
jae
ja
test
in
adc
das
pushf
sbb
insl
mov
shl
jne
sahf
pop
dec
pop
mov
mov
outsb
jno
inc
ret
mov
pop
jle
jmp
mov
jno
sahf
pop
cmc
add
xor
dec
cs
out
je
mov
jp
repz
inc
mov
leave
mov
das
sbb
mov
pushf
outsl
push
mov
jmp
cmp
jns
in
or
and
jae
ljmp
and
das
mov
popf
add
cli
rcll
jmp
mov
adc
jae
je
pop
adc
gs
jno
cmp
sub
cmp
dec
jno
popf
je
inc
lahf
cld
sub
lret
out
push
out
jnp
push
shll
dec
jo
push
jns
pop
adc
cs
clc
mov
sub
shll
push
inc
unpckhps
cwtl
hlt
enter
or
adc
mov
out
or
pop
cli
xchg
pop
lds
xchg
mov
lcall
outsb
ffree
lds
cmpsb
mov
addr16
push
or
pop
andl
add
fs
cs
jecxz
jo
lcall
std
mov
pop
sub
xchg
aad
fmuls
mov
or
icebp
lock
out
mov
mov
je
push
xlat
in
mov
xchg
inc
ret
mov
mov
rclb
pop
sbb
into
and
movsl
shlb
fcompl
jg
and
loope
ficoms
mov
pop
cmp
rcrl
push
jmp
inc
sahf
and
rorb
in
daa
xor
insl
je
xchg
nop
imul
mov
mov
adc
data16
xchg
jbe
in
popa
and
ret
ja
hlt
arpl
cwtl
cpuid
jg
jae
adcb
sbb
jp
sbb
sbb
cmp
xchg
mov
mov
jnp
ffreep
in
pop
in
and
jecxz
lods
xchg
cmpsb
insl
fdiv
pusha
jle
sbb
out
dec
cmp
dec
cs
or
xchg
jae
das
dec
lds
je
pushf
adc
sti
std
ret
movl
aad
jb
mov
das
test
shlb
data16
jo
je
dec
lock
rcrb
fidivrs
mov
shlb
lahf
mov
wbinvd
aam
xor
lret
add
inc
je
fsubs
cmp
jp
loopw
mov
jge
in
js
fiadds
cmpsl
popa
jnp
in
fldenv
mov
mov
pop
add
jge
les
mov
ret
cmovbe
fisttpl
gs
pop
in
jg
rclb
xor
sub
hlt
and
lods
cmp
adc
inc
bound
dec
sarb
cltd
imul
pop
mov
dec
inc
and
mov
jns
insb
mul
je
cwtl
out
mov
mov
cld
sahf
jl
movsl
push
pushl
push
sub
arpl
ja
mov
jnp
push
dec
mov
sarb
push
dec
or
jp
xor
add
inc
mov
inc
push
cmpsl
and
jns
rcll
dec
cmpsl
sti
shrd
ja
imul
ja
dec
mov
add
pop
cmp
test
bound
push
xor
lret
test
mov
test
lods
dec
popa
repz
jnp
push
sub
pop
jle
sahf
out
std
out
mov
sbb
jp
jl
push
mov
xchg
pop
dec
xor
inc
xor
pop
mov
mov
mov
lods
and
cs
adc
inc
adc
adc
ret
sarb
loop
je
jg
xchg
repz
ljmp
and
stos
mov
je
push
dec
adc
hlt
sbb
jne,pn
jo
dec
dec
incl
in
mov
int3
clc
mov
xor
cmpsb
inc
je
pushf
ljmp
outsl
xchg
and
push
cmpsl
clc
scas
xor
jbe,pt
les
ds
les
in
loope
add
add
sub
out
sti
pop
pop
mov
and
jle
rcrl
mov
fstl
jae
pop
jns
into
sub
movsl
or
lods
push
shlb
cmp
das
je
icebp
scas
aam
enter
dec
inc
scas
cwtl
cs
lock
lcall
out
cwtl
divl
call
or
xchg
aam
daa
ret
outsb
cltd
jp
lahf
pop
scas
mov
out
out
jbe
jnp
push
fcoml
xchg
ficoml
mov
sbb
pop
roll
xchg
iret
jecxz
dec
mov
ficoml
cmp
mov
popf
add
data16
cmovle
and
push
outsl
inc
dec
pushf
add
mov
jp
push
popa
cmp
mov
adcl
lods
pop
adc
gs
cmp
sbb
repnz
mov
fildll
repz
je
mov
fistpll
loopne
jns
js
mov
mov
sbb
mov
jp
mov
pop
adc
test
outsl
or
sub
and
or
mov
rcr
or
imul
jne
outsl
cmpsb
xor
mov
cmc
dec
adc
pusha
dec
mov
or
test
mov
aas
and
fimull
test
imul
pop
sub
scas
push
movsl
xor
or
sub
cmpb
sbb
cmp
jecxz
das
stos
sub
repnz
stos
xor
inc
mov
in
inc
jle
popl
or
loopne
dec
inc
lea
lock
inc
dec
pop
gs
movl
icebp
addr16
out
div
jle
and
cmp
xor
daa
nop
not
sbb
mov
std
repnz
arpl
mov
ucomiss
add
adc
inc
inc
test
adc
test
popf
cmp
loop
jg
stos
jp
push
icebp
call
and
fidivl
and
cmpsb
and
in
into
ss
or
push
pop
daa
sub
je
dec
out
inc
sub
pop
mov
mov
ret
mov
outsb
push
or
imul
jb
roll
sub
inc
cmp
jmp
into
adcl
cs
mov
jecxz
xchg
jp
cltd
orb
test
or
ljmp
test
xchg
dec
mov
in
add
fildll
jae
je
xchg
cwtl
lods
inc
ljmp
popa
xchg
mov
pop
arpl
adc
xchg
mov
ss
mov
mov
dec
or
fwait
inc
xchg
sub
in
mov
mov
fimull
dec
sub
cs
lret
rclb
gs
into
mov
or
pushf
mov
xchg
mov
push
mov
mov
adc
cmpl
jp
dec
leave
push
push
inc
fdivrs
mov
jle
inc
xchg
int3
sbb
sbbb
ret
and
xchg
out
push
fsubrs
push
push
ficomps
xor
cltd
test
mov
cmc
aam
mov
xchg
sub
push
test
sbb
mov
mov
inc
je
add
and
and
mov
cmp
je
fstpl
dec
mov
jl
adc
mov
das
adc
aas
je
loop
mov
and
js
shl
pop
outsb
mov
xor
inc
mov
dec
fsubrs
inc
adc
push
repnz
dec
lea
fs
jae
in
jp
add
inc
mov
xlat
jp
jle
dec
int
aas
ret
push
mov
jg
fwait
inc
xchg
stos
mov
adc
loop
add
push
pop
out
adc
jp
cmp
ret
icebp
je
mov
jmp
mov
je
lret
pop
enter
cmp
xor
iret
insb
cmp
mov
cwtl
mov
add
popf
jl
out
mov
jmp
sub
jp
gs
push
arpl
xorb
cmc
out
nop
cmpsl
jne
pop
lret
inc
add
stos
adc
fwait
aaa
loop
cs
jns
jb
cmpb
xor
lea
push
pop
popf
je
jg
cld
push
add
sub
shlb
push
xlat
out
dec
in
je
in
push
fs
mov
je
sub
sub
pop
into
cmpsb
mov
stc
addr16
fidivs
shll
cld
push
push
inc
subb
ret
inc
test
push
sbb
sbb
xchg
adc
sahf
jg
xchg
xor
js
iret
cwtl
scas
and
jp
xor
cmpsl
jg
pop
xchg
mov
jp
xchg
cli
sbb
adc
xchg
adc
jp
sbb
cmpsl
cmp
mov
jl
push
call
int3
sbb
xor
mov
dec
jns
dec
jp
mov
stos
or
and
mov
test
outsl
rcll
push
lds
xor
out
xor
lahf
insw
xlat
lods
mov
mov
ljmp
pop
push
popf
fildl
mov
out
arpl
mov
push
inc
pandn
je
pop
push
push
jb
dec
mov
mov
sub
dec
je
shlb
fwait
cld
insb
ljmp
insl
dec
test
sahf
xor
jecxz
mov
mov
iret
mov
push
js
lods
mov
adc
add
pop
add
inc
sahf
xchg
loop
outsb
int
mov
cs
in
pop
stos
les
push
popa
repz
ljmp
inc
in
shll
sub
add
cmp
pop
je
and
dec
mov
push
or
test
aad
xor
mov
inc
inc
and
bound
jge
dec
ret
mov
stc
call
pop
je
rcll
add
mov
mov
insl
push
push
dec
jp
or
insl
ljmp
cmp
ljmp
and
ret
and
dec
or
xor
test
je
cli
test
dec
fcmovnbe
xor
mov
cs
mov
push
or
in
loopne
ret
jo,pn
xor
les
jp
add
and
adc
int
imulb
in
push
fisubrl
add
outsl
lcall
add
push
bound
aam
xchg
mov
das
fcoml
ror
adc
dec
and
xor
cmp
fmul
push
mov
mov
cwtl
ja
push
je
xchg
xchg
test
arpl
cmp
pop
xchg
mov
jp
push
push
je
sub
stos
mov
movsl
cs
cmp
ret
cmp
jp
xchg
push
movsb
add
pop
cmpsl
mov
cld
or
xlat
data16
jnp
jp
repz
lock
sub
out
imul
mov
in
jns
cli
loop
lret
mov
rcrb
lods
jbe
inc
xor
xor
cs
cmpsb
or
and
sbb
mov
xchg
stos
xchg
push
mov
push
decl
lds
jae
or
les
aas
push
mov
in
xchg
imul
cmp
jno
pop
orb
scas
ret
adc
mov
inc
and
mov
mov
jae
mov
xchg
inc
mov
shlb
fdivs
aas
das
loope
jge
mov
test
jne
mov
push
add
xchg
fstl
ss
jne
mov
mov
pop
movsb
cld
add
xchg
stos
aaa
sbb
jl
aad
xor
push
or
push
stos
aas
lea
dec
das
je
jge
pop
in
mov
rdpmc
mov
pop
jnp
xor
mov
mov
std
pop
pop
push
jp
mov
xor
mov
imul
shll
mov
cs
ds
outsb
stos
add
fnstcw
enter
ret
pop
xchg
ja
gs
sub
in
push
and
adc
push
mov
lods
hlt
pusha
mov
les
inc
mov
inc
je
pop
mov
rol
pop
sub
sub
fdiv
and
fdivl
out
mov
sbb
dec
scas
jp
and
mov
leave
das
mov
test
punpckhdq
lahf
icebp
jae
mov
ret
jnp
andb
mov
pop
add
and
dec
jl
pop
jbe
push
or
adc
loopne
data16
into
adc
jne
mov
inc
loopne
jl
clc
mov
shll
aam
xor
jnp
push
dec
stos
or
fiaddl
push
movsb
test
xor
add
in
rcrb
in
adc
ficoml
jge
mov
out
push
pusha
xchg
das
ljmp
cmc
popf
cmp
sub
ja
loop
inc
je
in
imul
fcomps
inc
fwait
shrl
outsb
arpl
mov
push
int
mov
js
cmp
sbb
cmp
daa
rorb
mov
loope
scas
or
ds
jp,pn
pop
cltd
or
aas
cwtl
scas
call
out
inc
scas
adc
jecxz
jmp
aaa
cmc
push
loopne
fldt
gs
out
adc
jmp
movsb
clc
mov
dec
sbb
je
add
sbb
add
adc
sub
jns
js
xchg
push
insl
and
or
cli
dec
cmp
lods
stc
xchg
jp
sbb
jae
mov
xor
dec
movsb
sub
mov
inc
jg
mov
int
add
das
mov
dec
push
cmpsl
pop
push
in
jne
out
dec
inc
pushl
mov
ret
mov
in
lods
insb
or
mov
adc
movsb
and
jne
jb
adc
xchg
jae
cs
mov
out
je
leave
cmp
push
int3
cmp
push
stos
fmuls
jp
stc
fidivrs
xchg
or
mov
sti
or
cltd
imul
aam
ds
dec
sub
lds
cmpsl
or
mov
mov
lahf
hlt
ljmp
mov
ret
mov
sbb
into
je
mov
mov
cltd
push
xor
xor
jle
push
scas
je
arpl
adc
push
cs
mov
dec
jp
lcall
mov
hlt
push
out
fdiv
fildll
pop
fstpl
jle
inc
push
sbb
les
inc
rorl
jnp
scas
dec
mov
or
jg
mov
dec
inc
push
outsb
jmp
test
stos
sub
test
xor
sub
sub
mov
je
je
insl
jns
mov
out
pop
mov
arpl
dec
hlt
sbb
xor
outsb
jb
sarb
jle
addb
out
xchg
cs
sbb
dec
adc
ret
sub
stos
dec
ss
pushf
jle
push
inc
lds
jge
movsb
fs
loopne
mov
xor
pop
js
call
bound
je
das
inc
push
mov
jp
movsl
scas
sub
mov
fdivl
xchg
lods
add
test
cld
int3
mov
add
pop
movsb
ljmp
pop
pop
cmp
scas
cmp
mov
lgs
cmp
cli
mov
jns
adc
in
imul
xchg
fwait
stc
mov
scas
jnp
les
aas
dec
add
shl
pop
push
sti
fs
jb
and
jp
ljmp
incl
jns
insl
pop
push
aaa
add
nop
jp
xor
mov
sti
sub
mov
sbbb
mov
jg
je
sarb
and
jecxz
mov
das
sahf
mov
cmpl
xchg
jno
mov
mov
inc
mov
int3
hlt
leave
mov
jo
sub
dec
sub
mov
les
mov
push
xchg
mov
test
xor
jle
mov
cs
inc
shlb
pop
lds
shll
pop
mov
mov
js
xor
adcl
and
loope
push
jae
ja
dec
inc
aam
cld
clc
pushf
je
jbe
daa
mov
xchg
and
xorl
int3
xor
and
outsb
jb
cmc
sbb
jge
hlt
aas
bound
xchg
mov
mov
or
enter
jp
mov
inc
data16
cmp
dec
jp
mov
dec
cmp
dec
lods
push
xchg
mov
mov
fildl
ljmp
in
scas
je
addb
xor
mov
fcmovu
cli
ljmp
outsb
push
cmp
shlb
sbb
faddl
cmp
push
add
je
mov
push
jge
sub
jns
push
lret
or
aas
pop
mov
push
ret
pop
pop
mov
loop
and
or
or
aaa
popa
xchg
rolb
adc
mov
cwtl
mov
jg
add
xlat
mov
call
xor
jp
popa
and
ja
or
or
je
lahf
frstor
popa
sahf
das
xchg
outsb
test
je
das
fbstp
mov
mov
xchg
out
lahf
jl
lods
mov
outsb
mov
test
xor
push
outsb
xchg
fwait
adcl
hlt
and
jns
xor
je
sub
pushf
cs
sahf
xor
adc
movl
inc
subb
push
es
adc
pop
fstpl
lcall
das
xor
je
mov
add
pop
mov
jg
je
arpl
jmp
inc
mov
leave
call
stos
cltd
ja
out
xchg
pop
pop
daa
nop
dec
aam
stos
xchg
std
dec
add
jg
fdivp
jns
jp
xor
push
mov
scas
loopne
sub
in
and
sahf
bound
mov
js
popa
inc
out
mov
jle
fistps
jnp
jl
adc
pushf
ljmp
mov
or
and
jp
mov
push
inc
mov
addl
je
repz
iret
cmp
and
stc
inc
pop
fnstenv
mov
push
aam
mov
aaa
and
jne
stos
fdivl
cmp
lret
dec
lahf
cs
mov
and
nop
xchg
pop
mov
mov
pop
push
inc
and
jno
loop,pn
cmpb
dec
inc
lahf
mov
ret
out
cs
xchg
add
popa
sar
ja
jo
ret
mov
mov
repnz
adc
or
adc
push
lea
cmp
lods
mov
and
xchg
and
jo
arpl
je
cs
cs
fs
cs
inc
mov
nop
aaa
or
iret
add
sub
sbb
jp
xor
inc
jp
enter
mov
jne
lcall
je
dec
cwtl
mov
sub
or
aad
sbb
inc
fistpll
repnz
mov
mov
sarl
jnp
push
jp
cwtl
test
ss
cld
xchg
mov
pushf
push
mov
jbe
repz
popa
mov
stos
scas
aam
mov
out
cmp
xor
sbb
mov
cvtps2pi
shr
aam
int
cmpsb
add
jae
mov
fs
lcall
sbb
mov
cwtl
call
jge
in
adc
dec
mov
rdmsr
sbb
and
adc
mov
or
rclb
aaa
test
jecxz
je
lock
cs
lret
popf
fsubl
push
cmp
dec
and
sub
mov
hlt
cmp
mov
in
push
push
sbb
sarb
leave
in
fimuls
repz
stos
mov
fldl
sbb
test
test
mov
stos
loop
addr16
call
dec
adcl
sbb
xor
insb
lods
lds
aaa
push
fimuls
and
jp
mov
mov
repz
mov
lret
leave
imul
sub
lret
loop
fdivrl
iret
rol
or
shrl
adc
mov
lods
mov
sub
mov
scas
sbb
jno
jne
fwait
bound
sbb
mov
ficompl
pusha
das
loope
arpl
mov
sub
push
cs
or
js
pop
bound
push
daa
add
jge
xchg
cs
mov
fidivrs
dec
mov
cmpsl
mov
pop
ficomps
adc
aam
mov
cmp
insl
lahf
in
in
nop
addr16
cli
inc
aaa
dec
fwait
cmpb
ret
push
arpl
flds
shr
jns
stc
aas
mov
shlb
sahf
adc
out
movsl
aam
jp
loopne
cmp
leave
fistps
xor
cwtl
in
jnp
gs
ss
jno
rcr
rclb
jns
sahf
adc
loope
mov
in
and
mov
lcall
mov
fsubrs
repz
test
out
xchg
jno
dec
push
push
cmp
roll
mov
sbb
push
cwtl
jp
cmp
std
jmp
jne
mov
pop
hlt
out
out
fldt
pop
sub
and
in
jl
dec
outsb
jne
js
dec
insl
rclb
and
fiadds
int
xchg
dec
js
cs
pusha
sbb
lret
ret
inc
cs
imul
or
inc
mov
xchg
and
mov
mov
bnd
ljmp
pop
add
mov
popa
mov
fdiv
fwait
adc
pop
inc
pop
outsl
or
xchg
jbe
ljmp
sti
xchg
mov
jp
test
xchg
or
xchg
fcomps
mov
mov
push
or
out
fucomip
mov
out
ret
push
sbb
shrb
xor
adcb
or
jp
push
nop
jp
add
jg
aam
test
inc
mov
jp
pop
outsl
bound
mov
mov
pusha
pop
or
xor
daa
push
lods
jmp
lock
test
hlt
push
fdivl
jne
sbb
std
adc
imul
or
sub
popa
cmpsl
mov
data16
stos
mov
shr
bound
jp
inc
in
cli
call
mov
insb
mov
jmp
lcall
bound
mov
pop
cmp
cmp
iret
push
xchg
data16
jmp
loop
push
testl
out
ss
cmc
xor
sbb
stos
mov
dec
pop
addr16
stos
je
jno
out
or
push
mov
movsb
inc
stc
ret
das
pop
dec
push
idiv
gs
inc
nop
and
fmulp
and
xchg
lret
jp
sbb
popa
loope
mov
cmp
mov
adc
mov
fldenv
mov
scas
int3
pusha
stos
mov
mov
loop
scas
sbb
ss
bnd
or
lock
rcr
mov
mov
sarl
jno
push
notb
xchg
je
or
dec
ret
lret
out
test
lods
je
mov
insl
out
outsb
sub
ret
cli
test
fsubl
shl
int
jne
pop
pop
inc
fisubs
mov
cli
and
aad
inc
ljmp
jae
or
repz
jne
test
cmc
pop
in
mov
inc
cs
adc
sbb
repnz
dec
shlb
sub
or
push
loope
leave
ficomps
fs
cs
xchg
jl
mov
imul
jbe
xchg
repnz
dec
cmpsl
jp
movb
mov
out
xor
outsb
push
jl
hlt
das
sbb
push
add
mov
mov
int3
dec
push
je
idivb
dec
adc
xlat
cs
out
jp
mov
or
lock
imul
adc
mov
xchg
out
lods
ljmp
loope
repnz
fs
push
je
inc
repz
mov
pushl
mov
stc
sahf
pop
jnp
push
mov
jns
lock
fdivp
mov
mov
jle
pop
mov
mov
add
test
jae
pop
sti
bound
fwait
rcrl
sub
roll
pop
push
fidivl
jnp
adc
je
pop
xchg
xchg
js
push
outsb
sub
xchg
out
push
pextrw
jp
mov
fsubl
mov
pop
test
cmc
mov
jne
subl
mov
mov
inc
lods
cmp
mov
ja
mov
inc
pop
add
xchg
xor
xor
pop
mov
jg
cs
jnp
test
movsb
daa
int
mov
cmp
cmp
cmp
mov
and
cmpsb
clc
push
arpl
mov
pop
cmp
pop
and
adc
dec
xchg
and
sti
pop
cli
fprem
stos
jne
add
mov
std
xchg
mov
je
xor
cmc
xlat
sub
mov
js
sbb
push
cmp
clc
fldcw
push
cmp
mov
sbbb
ret
pop
jne
push
xlat
dec
pop
lods
pop
adc
xchg
sub
cltd
vprotb
adc
or
stos
jp
push
add
insb
shlb
subb
out
xor
mov
jl
ljmp
cs
popf
push
in
ja
ret
fdivrl
mov
dec
pusha
adc
push
cmpsl
pop
loope
jp
cld
sub
sahf
arpl
lds
push
add
push
lock
push
cmp
dec
fbstp
out
mov
sbb
mov
and
in
scas
subb
cld
cli
aaa
scas
stos
cli
cld
scas
push
cmp
dec
mov
push
test
hlt
add
and
sub
roll
sub
je
cli
sub
mov
sub
lds
test
sbb
jno
or
add
push
dec
or
daa
mov
jmp
push
cs
and
loopne
das
sbb
and
jmp
xor
jb
jge
loopne
jno
in
jg
cli
pop
push
dec
mov
jns
inc
mov
or
push
into
jge
push
sbb
inc
popf
outsb
ss
push
and
test
mov
cmp
jg
insb
cmp
mov
jp
mov
lods
out
lahf
jns
mov
dec
xchg
cmpsl
rolb
inc
mov
repz
mov
cwtl
repz
test
mov
pop
dec
mov
cli
jmp
jecxz
clc
push
je
fisubrl
xlat
add
fsubl
repz
leave
cltd
fnstenv
mov
shlb
jmp
aam
fdivl
je
repnz
out
jmp
cmpsb
shrl
movsb
int
sbb
xor
inc
or
movsbl
iret
adc
test
das
push
xor
cld
lds
testb
jp
xor
repnz
sbb
push
arpl
or
or
or
inc
dec
lock
push
cs
test
inc
mov
or
nop
jecxz
jp
js
fs
ja
addr16
jbe
or
sbb
repz
test
xor
pop
out
mov
xchg
jne
.byte
.byte
