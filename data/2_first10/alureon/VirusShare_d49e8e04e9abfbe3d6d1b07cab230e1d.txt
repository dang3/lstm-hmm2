pushf
mov
xor
sbb
imulb
pop
lahf
ja
xchg
fildll
mov
ret
ret
scas
data16
push
xchg
inc
arpl
pop
pop
je
sahf
jp
push
sub
fstpt
testb
sbb
sbbb
aad
mov
std
xchg
push
push
ljmp
sbb
fcomps
xorl
push
lods
adc
sahf
mov
andl
mov
xor
ret
out
sbb
inc
lods
push
fnstcw
pusha
mov
adc
add
xchg
xor
addb
loopne
scas
adc
popa
icebp
ljmp
dec
or
aad
cmp
sti
or
cmp
mov
pop
adc
mov
sub
enter
dec
insl
aam
mov
mov
mov
pop
jl
ja
or
mov
shrb
fwait
mov
movsb
and
sbbb
adc
lock
cmpsb
dec
jecxz
clc
pop
stos
xchg
push
adc
pcmpeqw
leave
push
stc
imul
pushf
inc
xor
add
icebp
adc
or
getsec
adc
insl
call
sbb
fcoms
push
sahf
stc
adc
jae
scas
mov
cmpsl
gs
adc
add
clc
fcomps
lahf
inc
pop
imul
sub
mov
call
lods
and
shl
xchg
xor
cmpsb
lahf
pushf
adc
jns
inc
bound
jmp
out
imul
lahf
out
mov
rcrl
fcom
cmp
push
test
dec
dec
pop
adc
insb
lahf
fistl
test
fldt
test
stos
push
and
push
add
in
and
sbb
push
in
xor
mov
outsb
mov
movsb
lret
jb
ja
lds
iret
push
faddl
or
mov
pop
pop
dec
frstor
push
sarl
dec
and
sbb
lock
test
ds
shll
dec
addr16
jae
ss
push
or
rcrl
fbstp
push
mov
popa
sbb
jb
mov
and
fs
pop
outsl
cli
xchg
cmp
pop
xchg
pop
mov
add
fcompl
push
ret
out
or
outsl
cmp
mov
aas
daa
sub
jg
cmp
xchg
loope
repz
add
mov
test
sub
testl
outsl
sbb
cmp
stc
xchg
addr16
adc
and
fistl
fisttpl
mov
ds
bound
xchg
adc
ds
aam
insl
jns
mov
jp
inc
inc
lods
xor
je
mov
rorl
mov
dec
xchg
dec
mov
js
push
hlt
test
mov
popf
nop
push
popf
imul
pop
adc
pop
xchg
lods
jmp
cmc
imul
pushf
xchg
cmp
adc
pop
jp
fists
pop
imul
fbstp
pusha
sbb
fwait
adc
pusha
add
mov
adc
sub
dec
and
cmp
insl
in
inc
xchg
add
add
fmulp
bound
fsubr
or
adc
push
pop
ror
stos
or
mov
sub
ffreep
jno
iret
push
insb
sbb
pop
enter
jbe
lods
mulb
xchg
xor
adc
aam
rcrb
sub
cmpsl
fstpl
pusha
fadds
ss
mov
lods
adc
inc
pop
xchg
cmpsl
imul
jp
xchg
sbb
sub
adc
xchg
adc
test
sbbb
aam
shll
insl
push
les
test
dec
and
pop
adc
lock
push
cmp
cmp
sbb
push
pop
lods
inc
pop
push
loop
jmp
aad
cmp
call
add
repnz
dec
push
pushw
mov
push
mov
inc
inc
call
dec
sub
call
mov
push
inc
call
inc
mov
sub
or
imul
sub
call
mov
dec
lea
xor
add
and
lea
dec
or
lea
lea
mov
imul
dec
call
mov
add
dec
add
call
mov
call
movsbl
inc
movzbl
dec
dec
mov
imul
movsbl
xor
pop
lea
movzbl
mov
add
inc
pop
inc
lea
pop
imul
add
movsbl
imul
pop
mov
mov
lea
dec
sub
mov
add
lea
pop
add
mov
pop
lea
mov
mov
mov
dec
call
dec
sub
dec
dec
ret
dec
add
push
xor
mov
push
imul
lea
push
lea
push
inc
and
push
mov
add
mov
or
or
push
movzwl
ret
push
add
sub
mov
dec
lea
dec
push
inc
dec
sub
call
pop
ret
jmp
add
mov
inc
add
movzbl
lea
sub
add
mov
dec
and
imul
and
movzbl
add
mov
xchg
add
mov
mov
lea
xor
imul
xor
add
movzwl
inc
dec
mov
dec
jne
add
mov
lea
inc
pop
imul
mov
pop
add
add
pop
mov
add
dec
add
imul
inc
mov
add
mov
inc
mov
add
ret
push
add
movzwl
imul
mov
add
or
lea
add
push
push
push
push
inc
add
mov
push
add
inc
add
imul
add
or
inc
inc
dec
mov
inc
push
sub
mov
xor
dec
dec
push
inc
inc
push
inc
inc
pushl
add
call
xor
add
mov
lea
add
mov
mov
mov
sub
pop
ret
mov
add
imul
imul
add
imul
cmp
jb
lea
xor
inc
lea
mov
inc
lea
mov
mov
inc
movswl
add
lea
lea
add
mov
dec
cmp
jb
and
mov
sub
lea
xor
imul
inc
xor
inc
lea
pop
inc
imul
test
jbe
add
inc
mov
inc
and
mov
add
inc
sub
xor
mov
imul
dec
inc
lea
sub
imul
inc
inc
inc
sub
and
dec
lea
and
imul
mov
lea
sub
movzbl
sub
dec
add
imul
and
and
movzwl
xor
mov
mov
sub
mov
xor
mov
mov
movsbl
dec
mov
mov
dec
mov
mov
movsbl
lea
dec
jne
mov
mov
dec
mov
mov
mov
dec
mov
movswl
lea
mov
lea
mov
add
dec
lea
mov
inc
movzwl
mov
mov
mov
test
jbe
add
add
mov
xor
inc
dec
lea
add
lea
mov
lea
movzwl
mov
dec
mov
inc
sub
add
inc
dec
mov
movzbl
and
add
dec
mov
lea
movzbl
movzbl
mov
or
add
mov
mov
and
dec
and
mov
add
lea
movzbl
dec
mov
mov
mov
jmp
push
lea
dec
xor
and
movswl
mov
imul
mov
imul
imul
dec
dec
lea
imul
dec
sub
dec
dec
lea
dec
inc
dec
dec
dec
lea
dec
inc
mov
inc
dec
or
inc
mov
xor
lea
mov
inc
mov
lea
cmp
je
call
call
dec
or
inc
mov
lea
or
mov
imul
inc
add
add
add
lea
add
call
call
lea
ret
movswl
mov
pop
movzbl
ret
push
sub
dec
mov
sub
add
push
lea
add
push
dec
push
mov
push
dec
inc
inc
add
add
dec
dec
imul
mov
call
inc
push
mov
push
and
pop
inc
inc
mov
add
mov
mov
add
imul
inc
inc
inc
dec
je
dec
inc
imul
imul
imul
inc
lea
dec
imul
mov
sub
mov
mov
dec
or
dec
movsbl
repnz
mov
inc
add
add
jmp
inc
inc
jmp
imul
mov
sub
mov
dec
dec
imul
dec
dec
dec
lea
mov
inc
inc
pop
pop
ret
push
movswl
sub
lea
add
imul
mov
lea
sub
imul
mov
lea
sub
mov
dec
mov
add
mov
lea
and
add
dec
add
mov
imul
dec
pop
ret
sub
mov
mov
inc
mov
mov
mov
add
mov
lea
or
mov
dec
imul
xor
imul
lea
mov
and
mov
inc
sub
inc
mov
inc
movzwl
and
cmp
jb
inc
push
inc
dec
push
movzbl
imul
push
inc
lea
mov
or
and
xor
inc
imul
xor
mov
movzwl
xor
inc
push
add
xor
inc
dec
mov
dec
mov
inc
movzbl
mov
or
xor
add
lea
lea
add
movzwl
xor
movzbl
dec
inc
lea
dec
add
or
add
inc
add
jmp
in
leave
inc
mov
add
or
mov
arpl
push
call
adc
ds
clc
inc
xchg
lret
movsl
xchg
mov
mov
pushf
xor
cmp
sub
cmp
lea
sbb
inc
popf
cmp
stc
mov
jp
sahf
pop
mov
icebp
inc
js
or
inc
sub
cmp
lods
xor
in
loop
negb
cli
xchg
push
adc
pop
add
adc
mov
jae
shl
xchg
adc
mov
cmc
fldt
mov
sub
imul
imul
and
in
int3
dec
inc
push
or
stc
push
out
push
lods
popf
cli
rclb
xlat
outsl
xor
cmpsl
mov
call
and
push
pop
cli
inc
jns
xchg
cs
and
pop
fwait
add
and
push
dec
clc
pop
inc
lret
pop
lret
mov
loope
decb
hlt
dec
sbb
fsubr
and
cmpsl
repz
mov
jecxz
mov
push
mov
sti
sar
mov
xchg
mov
iret
or
imul
sti
mov
dec
out
mov
push
mov
push
inc
inc
das
fistps
aam
xchg
mov
mov
aaa
stc
fisttps
pop
enter
jmp
jmp
mov
inc
in
dec
inc
dec
inc
xchg
xchg
test
lret
dec
pop
push
sub
lods
inc
rolb
imul
pop
jb
xchg
xchg
mov
dec
adc
inc
movsl
js
add
call
fidivs
xchg
std
leave
addl
sbb
mov
push
rorl
pop
or
and
ss
push
add
dec
sbb
jl
pop
scas
call
jle
aad
sub
mov
lods
ret
enter
idivl
sub
dec
cmpsl
mov
sub
cwtl
test
in
or
ds
push
sbb
xor
frstor
dec
cli
popa
mov
dec
mov
cs
lret
jbe
imul
cmp
sub
mov
cmc
sub
enter
pop
lods
push
xor
jne
aam
jb
ds
mov
dec
pop
push
dec
push
jb
sbb
cwtl
in
subl
xchg
fnstsw
jg
xchg
inc
sub
xchg
lods
lds
adc
dec
popa
clc
add
mov
nop
fildl
pushf
push
out
sub
inc
or
ljmp
xchg
bound
movsb
mov
vpsubq
imull
scas
dec
pushf
xchg
int3
shl
jae
add
mov
jne
push
frstor
shlb
lcall
push
cmp
cmc
pop
mov
add
xchg
dec
fildl
mov
loope
in
mov
mov
xorl
jge
mov
cmpsl
inc
mov
mov
in
lods
mov
mov
movsb
push
movd
mov
sbb
movsl
and
and
je
clc
xor
test
inc
loop
mov
es
xchg
popf
stc
in
mov
aaa
cmp
loop
or
sbb
pop
push
add
sbb
lock
adc
jne
cmp
imul
sbb
ljmp
pop
push
ljmp
sub
and
push
xchg
fstps
push
fsubs
mov
xor
push
sbb
lcall
inc
lods
fisubrs
pop
pop
adc
push
xor
mov
rclb
jne
mov
cld
out
movsb
lcall
insb
imull
loopne
pushf
test
add
xor
cmp
ljmp
xchg
xchg
jmp
sti
mov
mov
mov
xchg
mov
and
out
push
iret
gs
dec
ss
add
cmp
inc
mov
sub
pop
jecxz
mov
xchg
outsb
pop
ret
mov
ds
mov
xchg
xor
loop
sub
add
cmc
mov
jae
add
loop
add
scas
fstpl
xor
imul
xor
fnstcw
imul
hlt
pop
out
xchg
rol
mov
jbe
mov
or
xchg
dec
sub
push
mov
jg
lds
pop
fistpl
pop
cltd
leave
mov
adc
ljmp
movsb
cmp
int3
xchg
inc
cmp
sahf
pop
xchg
mov
cmp
mov
and
int3
pop
adc
lret
ja
lods
stos
mov
sbb
push
repnz
or
or
fisubl
rolb
shll
data16
addr16
roll
fsubp
movnti
mov
mov
clc
lods
and
scas
sub
or
cmp
fwait
push
sbb
dec
jne
add
mov
inc
stos
adc
mov
int
lret
xor
ljmp
ja
in
pop
add
int
mov
lods
dec
adc
fsubrl
lret
outsl
sbb
insl
inc
xor
inc
sahf
jle
test
jb
and
jno
add
aam
jne
aad
add
stos
cmpsb
push
or
cmpl
out
repz
test
sub
ljmp
fsubr
out
lret
push
pop
xchg
js
insl
dec
insl
xchg
test
sbb
inc
push
or
xor
out
xchg
pop
seto
push
adc
add
lahf
cmpsb
stos
dec
push
sub
jl
imul
aaa
out
dec
jp
gs
jnp
inc
dec
lods
call
jnp
xchg
into
icebp
add
test
addl
test
cmp
add
dec
dec
inc
stc
pop
js
iret
adc
push
mov
hlt
and
rcll
sub
push
mov
clc
test
or
faddp
pop
mov
aad
into
jecxz
addr16
shrb
xchg
out
xor
inc
jmp
xor
rcrl
cltd
sub
mov
cmp
xchg
dec
xorb
fcmovnu
cmp
inc
loop
addl
push
addr16
add
push
repz
loop
int
test
je
cmpl
pop
add
mov
shrl
adc
in
xor
jecxz
cld
mov
fsts
out
in
int
in
cmpsl
enter
xorb
movsb
adc
mov
cmp
add
movsl
cld
lea
call
xchg
fdivs
fistl
jl
scas
pop
cmp
adc
out
push
cmc
popa
jl
psraw
ja
repnz
imul
push
imul
sbb
push
mov
mov
lock
pop
ficomps
push
lret
push
test
pop
pusha
cli
in
adc
mov
pushf
sbb
adc
int3
call
inc
add
cmp
pop
sub
add
jmp
push
data16
in
pop
mov
or
or
push
test
scas
dec
scas
cwtl
in
pop
inc
sub
push
loop
mov
or
sbb
push
pop
or
nop
ret
repz
daa
insl
pop
scas
xor
add
bound
scas
lock
xlat
ja
or
lret
lret
xchg
mov
mov
mov
rcrb
dec
std
iret
cli
inc
pop
cmc
test
mov
out
roll
pushf
mov
das
imul
sbb
hlt
mov
stos
jecxz
sbb
pop
xor
enter
pop
cld
and
push
aaa
aam
push
cmpb
jb
dec
loope
cmp
in
in
loop
push
push
sbbb
jno
adc
push
pop
mov
repz
sub
mov
rcr
and
pop
push
xchg
cmpb
inc
cmp
lock
pusha
push
adc
inc
mov
movsb
das
fcmove
jmp
dec
sub
inc
inc
int3
loope
leave
xchg
fiaddl
repz
xorb
push
xchg
push
jmp
dec
clc
das
jns
and
and
push
scas
pushf
fcom
mov
loope
jne
icebp
test
inc
mov
into
inc
aas
adc
pushf
fstl
sarb
push
out
mov
cmp
fdivs
lods
loope
daa
adc
outsb
js
xchg
loopne
test
xchg
pop
hlt
or
int3
enter
popf
cltd
lcall
into
iret
or
mov
pop
xchg
pop
mov
jb
punpckhwd
mov
js
xchg
les
ja
jae
xchg
cmpl
mov
dec
adc
cmp
jp
lods
bound
test
out
sub
or
dec
inc
addl
sbb
sub
outsb
in
mov
fisubrs
loope
xor
push
pop
repnz
addl
jle
sbb
adc
enter
xchg
cltd
push
rcrl
es
dec
and
cmp
aas
push
add
lds
xchg
insb
mov
mov
lahf
adc
lret
xchg
xor
sbb
movsb
sbb
iret
xlat
sahf
or
jg
xor
ljmp
jb
fisubrs
adc
mov
sub
add
lods
mov
test
dec
cli
pop
loope
pop
add
clc
adc
das
shrb
xor
cld
fincstp
jns
pop
xor
addl
jg
jp
int3
and
inc
outsl
int3
mov
aad
adc
sub
testb
test
fstpt
popa
or
ret
or
or
divl
ja
sub
and
or
lds
or
push
or
mov
xchg
imulb
les
dec
adc
and
xorb
stos
mov
xchg
sbb
or
mov
xor
push
cmc
shl
jge
mov
jmp
out
adc
test
ret
push
shl
pop
cmc
pushf
mov
cmpsl
cltd
push
into
cmpsb
pop
arpl
in
insb
cwtl
jno
js,pn
pop
xorl
xchg
insl
jecxz
jmp
mov
inc
aad
cmp
xor
fldenv
cmp
xor
lock
push
pusha
dec
push
insl
xchg
out
ret
lods
fwait
pop
addr16
out
out
out
push
or
mov
mov
jno
out
lds
sti
push
nop
xchg
mov
push
jp
xlat
into
aas
test
push
pop
xchg
call
icebp
jae
popf
icebp
inc
jae
rorl
xlat
faddl
xor
jne
mov
mov
mov
inc
sub
iret
sub
and
mov
jl
pop
xlat
sub
repz
mov
xchg
fwait
in
xor
jle
dec
mov
jbe
jnp
imul
outsb
mov
push
dec
push
jg
mov
jo
jbe
sar
mov
and
fdivs
and
dec
mov
lods
nop
inc
ljmp
enter
or
xchg
test
pop
push
add
fisubs
icebp
xchg
dec
daa
mov
and
xor
rcll
fnstcw
xor
cmp
adc
jp
rclb
dec
out
cmp
ss
push
icebp
sub
inc
and
scas
sti
dec
es
rorb
in
dec
sbb
xchg
std
andl
mov
loopne
out
loope
sbb
xchg
fstps
mov
dec
sbb
sbb
mov
or
and
lret
jae
cmp
jmp
inc
mov
mov
cmpl
sbb
ljmp
xchg
push
pop
jno
scas
into
sbb
or
push
ljmp
repnz
xor
add
mov
fidivs
fimull
test
add
ficoml
hlt
enter
xlat
sub
pop
in
jmp
pop
imul
cmp
movsl
imul
pop
sbb
jne
cmp
jmp
mov
or
pop
fistpl
cmp
xlat
stos
scas
adc
cld
push
xor
push
jne
cmp
cmc
pusha
mov
sbb
inc
jne
shr
dec
jle
or
xor
sarl
mov
scas
je
mov
or
xchg
add
jecxz
jecxz
mov
dec
and
subb
scas
leave
jnp
int
incl
clc
push
imul
stos
leave
inc
inc
mov
add
jecxz
fdivrs
xchg
movsb
add
outsl
jg
shr
or
bound
mov
jo
mov
jge
push
mov
fcmovbe
adc
ljmp
je
fildll
fdivl
stos
xchg
aas
pop
pop
outsb
and
pusha
sbb
add
add
mov
rorl
inc
xchg
inc
jmp
xchg
adc
jecxz
adc
adc
repnz
lahf
mov
cmp
dec
scas
mov
popf
fs
jg
push
cmpb
push
pop
dec
sbbl
stos
lods
dec
push
inc
pop
lea
push
inc
rorb
repnz
loope
ljmp
pop
inc
icebp
jb
scas
fldcw
movsb
mulb
outsb
test
cmp
lret
add
loopne
fstpl
and
stos
aam
cmpb
das
cmpsl
xor
jg
sbb
ficompl
dec
pop
cwtl
mov
jns
movsl
and
fldl
mov
jno
xor
cmc
mov
je
cvtps2pd
jmp
arpl
imul
or
imull
jecxz
sbb
sub
incb
or
in
dec
dec
or
add
add
outsb
xor
enter
sub
mov
sbb
inc
jno
mov
sub
jge
pop
adc
adc
insb
sbb
mov
imul
pop
popf
jnp
push
inc
push
xor
mov
lahf
addr16
push
bound
push
and
scas
movsl
sahf
dec
jae
rcr
and
movsb
mov
enter
pop
pop
inc
test
adc
repnz
aad
jge
in
or
fmuls
mov
xor
lods
xlat
mov
inc
ret
sbb
call
mov
aas
dec
pop
std
inc
mov
and
mov
pop
cmp
mov
inc
fs
jnp
pop
mov
pusha
xchg
sub
jb
xchg
stc
sti
jbe
sbb
and
mov
ja
pop
out
adc
mov
sahf
push
or
into
and
pop
sbb
sti
push
shlb
or
insb
fistpll
repz
fcoml
in
out
sbb
stc
push
in
hlt
xorl
pop
xor
inc
jno
fs
add
roll
jp
lret
adcb
jb
xor
xor
sbbb
das
and
insb
xchg
mov
popa
sbb
pop
aaa
adc
mov
rorl
cli
mov
xlat
ljmp
xlat
mov
xlat
decb
lret
iret
mov
fs
pop
push
ret
insl
lret
fdivrs
cmp
mov
outsb
push
test
lods
mov
jecxz
fcmovnbe
aas
mov
iret
fdivp
xchg
popa
and
insl
gs
in
pop
pop
fs
sbb
jg
push
dec
push
inc
in
push
dec
invlpg
fistps
inc
pop
iret
mov
shrb
iret
inc
in
ljmp
jo
pop
incl
inc
outsl
and
sbb
sub
ljmp
sahf
adc
jge
or
fisttps
cli
test
and
push
insb
mov
sarb
repnz
or
stos
fdivl
xchg
stc
loopne
int3
mov
pop
jb
cmpsl
das
jecxz
js
xlat
call
jns
xor
dec
ret
jecxz
xor
in
hlt
inc
andl
lea
pop
mov
sub
out
mov
jne
mov
les
jecxz
bnd
int3
and
mov
xchg
fwait
imul
stos
aam
sub
pop
pop
into
push
test
push
jle
push
loopne
test
aam
xchg
aad
pop
aas
cwtl
xchg
mov
add
cmp
pusha
jbe
xor
mov
mov
cli
mov
mov
repnz
cld
push
sarl
shl
out
fimuls
test
cmp
push
xor
dec
shl
xorl
inc
add
lock
mov
and
inc
or
movq
insb
ret
jmp
roll
xor
xor
mov
fsubrl
jecxz
cmp
or
xor
mov
fwait
push
pop
arpl
sarl
xlat
and
mov
pop
fisttpll
push
fidivrs
loopne
add
push
ja
lret
mov
inc
ret
sbbl
jnp
mov
sub
dec
fwait
xlat
cmp
jmp
cld
cmpsl
clc
cld
les
cld
xchg
lret
mov
mov
cmp
add
add
push
mov
push
scas
adc
jb
mov
adc
xchg
mov
inc
jg
lea
shlb
dec
out
push
ja
scas
inc
push
push
push
pop
in
ret
ret
lret
test
cmpl
sbb
lds
push
dec
aam
inc
lods
mov
rorl
adc
jae
shl
daa
add
in
dec
mov
jmp
addr16
jge
push
lahf
sbb
leave
popf
iret
mov
dec
inc
les
dec
in
mov
mov
sbb
pop
cmp
push
mov
pop
add
sub
test
aaa
dec
sbb
adc
lcall
push
out
testb
xor
jo
xchg
jno
pop
ss
in
cmp
xchg
sub
jns
je
insl
icebp
mov
pop
lds
fcmovu
faddl
dec
adc
test
cld
and
push
shlb
xor
leave
cmp
cmc
hlt
adc
ret
aad
iret
inc
out
pusha
push
xchg
sub
imul
imul
rcrb
xorl
sbb
xchg
iret
inc
mov
add
mov
xchg
or
cltd
mov
xor
sub
sub
dec
sbb
pushf
sbbl
iret
and
pop
adc
xor
jecxz
inc
mov
outsb
push
les
pop
out
sub
subl
sub
lods
filds
inc
fisttps
das
push
inc
sub
sti
jl
mov
ja
out
ror
cmp
call
mov
jnp
mov
adc
dec
or
push
dec
push
sbb
roll
mov
repz
xchg
in
sub
cmpsl
daa
shrl
cmc
repz
push
sbb
jecxz
sbb
mov
hlt
xor
cmpb
and
scas
pop
add
mov
call
jmp
pusha
in
xor
jmp
sub
or
sub
cltd
ljmp
jns
mov
dec
xchg
mov
push
push
mov
popa
sub
xchg
out
push
loope
lds
clc
push
jle
jmp
hlt
mov
aaa
loope
or
xor
mov
popf
std
jbe
pop
mov
add
pushf
cli
shrb
gs
cmovge
shr
push
add
push
sub
cmc
dec
jecxz
or
xor
add
xchg
movsb
es
or
js
dec
push
rorl
xor
cmp
fidivs
sub
inc
mov
push
enter
mov
add
mov
sbb
jmp
call
std
dec
aam
sub
in
js
jnp
jae
lret
test
push
mov
addr16
addr16
inc
and
jmp
adc
jb
mov
aaa
ds
aaa
mov
inc
adc
xchg
pop
xchg
inc
xchg
add
aas
or
pop
inc
sub
xchg
push
adc
outsl
or
ret
push
or
in
inc
push
test
in
mov
sbb
das
int
addr16
fsubrl
mov
cmp
jecxz
cmp
loopne
psllq
dec
sbb
addb
mov
xchg
popa
test
mov
mov
mov
cmpsl
rcr
or
and
pop
in
js
jp
rcr
push
dec
pop
cmp
push
bound
imul
mov
push
jae
pop
mov
stos
mov
cmc
ds
add
jmp
xchg
dec
pop
lods
sbb
mov
cld
push
lods
sbb
inc
pop
jno
mov
inc
push
es
cld
unpcklps
pop
mov
bnd
nop
push
mov
dec
inc
cmpsb
leave
addb
jg
mov
movsl
push
push
addb
int3
sub
lds
jle
push
out
inc
ret
add
inc
push
pop
mov
stc
addr16
out
adc
sub
lds
sub
sbb
es
or
shl
xor
xor
xchg
int3
add
adc
je,pt
cmp
jns
and
ret
adc
jns
mov
mov
xchg
mov
xor
hlt
push
mov
stc
sub
jge
aam
push
push
pusha
mov
mov
loope
push
or
jns
sbb
xchg
enter
push
dec
jle
mov
repz
lods
jp
dec
mov
xlat
call
ret
aad
xor
xchg
je
cmc
lcall
xor
dec
dec
push
ds
cmp
data16
xchg
xlat
fimull
jmp
xchg
imul
mov
js
mov
mov
mov
js,pn
fwait
fs
cld
sub
or
inc
fidivrs
je
pop
jecxz
sbb
popa
sbb
fsubl
cmp
imul
jl
push
and
lds
rcl
cld
dec
stc
aas
pop
fldt
sbb
push
inc
jl
out
cmp
jb
fdivr
jecxz
repz
icebp
in
dec
pushf
cmpsl
es
lcall
and
mov
mov
repz
out
insl
or
js
pop
shrl
mov
and
mov
dec
or
scas
dec
mov
int3
inc
leave
add
cmp
dec
xchg
and
mov
inc
dec
cmp
stc
mov
test
pop
fxtract
or
mov
lcall
pop
or
aaa
sbb
test
adc
in
cmp
pop
or
scas
inc
popa
xor
imul
sub
mov
jmp
pop
mov
pop
xchg
pop
negl
bound
mov
ficompl
leave
sbb
lahf
iret
ljmp
test
pop
hlt
out
dec
sub
subl
push
pop
loop
or
xchg
das
ja
dec
lods
ja
push
ds
inc
add
dec
sbb
ds
xchg
inc
sub
dec
icebp
fcmovnu
mov
cmp
and
shrb
daa
scas
sub
push
cmp
shrl
xor
pop
add
mov
sti
pop
dec
xchg
popf
dec
pop
dec
jge
test
xchg
enter
fsts
je
shll
or
or
fwait
popa
mov
jnp
mov
jo
or
lret
nop
push
stos
out
mov
mov
call
daa
ret
enter
lret
mov
add
push
idiv
push
ret
inc
aaa
jecxz
outsl
or
cmpsb
sub
aad
insb
push
icebp
xchg
inc
mov
lock
not
inc
xor
jge
test
xor
jne
pop
out
cmp
jne
ja
pop
cld
daa
inc
xor
sti
and
and
dec
dec
and
mov
mov
push
pop
mov
cltd
out
jb
jl
mov
aaa
sbb
das
pusha
and
jl
ljmp
inc
enter
shrl
imul
add
aas
bound
call
lea
js
mov
jbe
insl
cltd
add
push
jno
int
dec
imulb
enter
movsb
cld
call
shll
jnp
sub
sub
or
ficompl
popf
lds
iret
jno
mov
into
popa
incl
mov
push
push
ljmp
sub
adc
les
fxch
cmpsl
add
sbb
in
rcr
jbe
xchg
inc
repz
lret
icebp
mov
adc
jge
rclb
sbb
mov
stos
push
push
stc
push
pop
sbb
imul
add
dec
lret
loope
inc
mov
pop
shlb
aas
sbb
cmp
cmp
or
and
xor
scas
cmpsb
dec
adc
pop
sbb
mov
xchg
jg
jb
ljmp
rcrl
mov
jae
or
in
xor
mov
jbe
or
xor
mov
sub
test
pop
dec
adc
cmp
mov
mov
sbb
jnp
std
ljmp
or
int3
stc
aam
subb
je
push
cmp
insl
jns
mov
ja
pop
and
pop
lods
std
sbb
notl
iret
aam
mov
add
sub
mov
stos
xchg
lret
std
fldcw
cs
xchg
sub
movsl
sub
sbb
add
mov
inc
call
inc
test
pop
cmp
xchg
xchg
lds
xchg
jmp
xlat
negb
and
jne
aad
int
sbb
leave
lds
fwait
sbb
inc
mov
and
pop
ja
out
loope
mov
mov
fbstp
xchg
mov
rcrl
ljmp
lret
push
dec
push
xor
fists
lds
jo
jo
cmp
aaa
insb
mov
xchg
push
lock
jmp
fisubs
fistpll
test
sarl
mov
cmp
mov
loop
ret
icebp
test
and
mov
out
jns
fidivs
mov
and
push
adc
xor
jle
sbb
test
mov
jl
inc
data16
repnz
jbe
loop
test
sbb
arpl
push
pop
shrb
xor
sarl
shll
inc
cmp
and
arpl
fdivrs
and
inc
push
jae
call
xchg
pusha
out
out
cmpsl
xchg
mov
inc
xor
mov
in
aaa
cmc
push
fdivs
out
cmp
lea
push
stos
push
lahf
test
movsb
lahf
xor
popa
fdiv
jl
sub
mov
adcb
pop
in
pop
ja
data16
push
push
inc
movsl
cmpsl
xchg
js
js
repz
lret
add
jle
xor
mov
push
ss
loop
popa
mov
inc
repnz
xor
adc
in
xlat
fisubrs
lcall
push
xchg
push
push
and
mov
insl
mov
adc
addb
jbe
ja
ret
dec
cmp
orl
mov
mov
aad
xchg
ljmp
cs
inc
add
xchg
sbb
mov
adc
movsl
bound
mov
xchg
fs
mov
addl
pop
rorw
mov
mov
inc
scas
adc
inc
xor
pop
or
outsl
iret
pop
fcmove
out
mov
aaa
mov
jge
xchg
inc
fs
inc
loop
cmp
jne
push
inc
fisttpl
cmp
push
xchg
call
rclb
mov
xlat
and
movsb
sub
sub
lret
xchg
lods
sbbl
inc
test
cltd
and
cmpsb
inc
push
cmp
adc
pushf
mov
adc
scas
arpl
imul
int3
clc
pop
push
fildl
xor
mov
jp
inc
inc
jb
lahf
mov
lods
sub
adcl
idiv
lahf
sub
pop
pushf
jns
sbb
cwtd
jnp
and
mov
repz
sub
push
mov
fistps
jmp
fs
and
fldl
sbb
push
loop
std
push
mov
popf
pop
lea
jecxz
cmp
fwait
mov
pop
jle
add
xor
mov
jecxz
in
inc
addl
inc
popa
rcll
xchg
scas
mov
jecxz
mov
mov
mov
jne
adc
jle
or
xchg
neg
xor
dec
fsubl
sub
lock
sub
push
mov
add
insl
mov
pop
inc
inc
xor
xor
pop
daa
xchg
adc
sbb
scas
mov
shr
fldt
ja
xorl
out
add
adc
dec
jno
arpl
repz
gs
data16
xor
insl
cmpsb
jnp
shl
bound
lret
aaa
rcrl
call
xchg
xchg
mov
fbld
sub
pop
mov
jnp
bound
sub
jmp
repz
iret
jle
pop
inc
add
mov
icebp
femms
dec
mov
dec
mov
cmpsb
mov
add
mov
fnstsw
jae,pt
mov
push
fadds
push
cmp
in
sbb
xchg
inc
xlat
mov
xchg
cld
xchg
jge
dec
ficoms
out
inc
fcmovbe
and
xor
cmp
xor
mov
int
and
and
dec
sbb
cltd
out
aaa
lret
lcall
pop
sbbl
xor
negb
fnstenv
loopne
jp
sbb
icebp
aaa
imul
imul
jns
movsb
cmp
mov
jb
cmpsb
inc
push
cmp
in
jp
sti
xor
push
arpl
pusha
sub
xor
xchg
enter
ss
jnp
leave
popa
fidivrl
or
imul
jp
insb
cmpsb
xlat
test
adc
lea
mov
mov
inc
insb
xor
outsl
pusha
jle
push
dec
ljmp
mov
and
jb
cld
not
sahf
dec
cmp
loope
inc
adc
adc
xor
sbb
lret
pushf
shll
fwait
in
call
xchg
or
mov
adc
mov
push
and
sbb
leave
sbb
inc
add
xor
sbb
fbld
inc
push
sar
jge
insl
adc
xor
push
mov
iret
scas
add
dec
cmc
and
pushf
and
push
outsl
xchg
mov
leave
punpckldq
notb
add
test
test
outsl
mov
and
cltd
sbb
cmpsb
fists
rcrl
sub
add
inc
fists
mov
stos
add
sbb
nop
jp
jns
lods
je
push
repnz
xchg
in
fadd
hlt
jmp
jge
or
in
xlat
sbb
pop
outsl
call
xor
push
sti
inc
mov
inc
daa
mov
cmp
sbb
into
add
cld
jge
movb
xchg
mov
inc
inc
jecxz
lods
call
xor
movb
mov
fcomip
aaa
popf
pop
add
lods
clc
out
fdivp
mov
lret
daa
and
fsubp
push
fmull
xchg
hlt
mov
mov
lcall
fs
call
sahf
push
aaa
sahf
dec
outsl
cmp
xchg
loope
xchg
sahf
jp
sbb
outsl
out
dec
rcl
and
push
mov
enter
sbb
jp
int3
dec
call
mov
or
clc
mov
add
test
aaa
mov
push
jno
int3
jecxz
xchg
add
nop
mov
dec
dec
xchg
or
jge
cmp
or
and
hlt
add
jecxz
or
stc
stos
xchg
rcl
push
dec
jo
mov
push
pop
inc
pand
push
cmc
and
stos
adc
sub
loopne
mov
arpl
xchg
push
sbb
dec
pop
fcmovbe
xchg
or
mov
sahf
xchg
jl
es
popl
sbb
cld
jge
data16
add
add
dec
and
sbb
js
sub
std
rcrb
xrelease
gs
call
cmpsl
pop
push
jnp
and
jns
leave
enter
jg
jb
repnz
jns
jg
jecxz
insl
repnz
sbb
iret
mov
pop
mov
push
ja
jmp
sahf
psubusw
in
jmp
std
mov
adc
xor
xor
dec
stos
in
jno
fsubs
push
or
jnp
xchg
sti
and
xchg
mov
daa
cltd
mov
jae
sub
mov
in
mov
xchg
mov
sbbl
cmp
inc
negb
and
adc
and
iret
sbb
push
cmpl
xor
pushf
sbb
xchg
shr
ja
push
fcomp
into
pop
and
dec
pop
mov
clc
or
aam
mov
icebp
testl
pusha
inc
sub
ret
sub
xchg
mov
iret
add
ret
out
pop
insl
dec
mov
xor
jmp
loopne
sub
mov
and
mov
out
or
imul
cmp
ljmp
arpl
hlt
jae
pushf
lods
adc
orl
xchg
cwtl
insb
stos
outsl
adc
adc
mov
rolb
xor
test
int
subb
pop
add
add
jle
pop
or
push
sub
adc
jge
out
jmp
cmp
xlat
call
mov
das
cli
inc
in
out
pop
add
in
outsl
je
cmc
in
xor
xor
addr16
mov
bound
xor
cmc
adc
dec
dec
mov
ret
add
ret
lods
insb
push
mov
dec
pop
insl
mov
or
jle
sbb
cmp
xor
icebp
xchg
mov
in
addr16
mov
jb
or
inc
push
push
jbe
jns
or
mov
outsb
rclb
add
stos
or
mov
shl
imul
pusha
cmp
cld
imul
aas
jns
pop
xchg
add
add
cltd
dec
out
mov
mov
insl
cmc
push
fidivs
xchg
hlt
pop
leave
stos
push
mov
xor
test
xchg
or
cmp
mov
mov
fdivrl
mov
add
pop
add
pop
aas
jecxz
out
xor
fwait
enter
ret
sahf
inc
rorl
cmp
push
add
lds
xchg
out
mov
aaa
testb
cmp
push
xchg
hlt
jecxz
mov
mov
dec
pop
out
jg
jl
jecxz
adc
xchg
mov
stos
adc
outsl
enter
int
xlat
xchg
pop
rcrl
jbe
movsl
lret
clc
adc
shrb
adc
fdivrl
in
pop
pushf
test
nop
fwait
cmp
cli
add
push
sti
mov
addl
add
inc
iret
mov
out
hlt
dec
sub
sbb
in
lret
sti
xor
movaps
jbe
inc
aad
add
mov
cmc
mov
inc
sbb
push
inc
enter
cld
stos
dec
dec
div
lahf
push
add
cmp
sbb
adc
xchg
jecxz
mov
mov
inc
int3
push
popa
pcmpgtb
inc
mov
std
dec
pushf
add
adc
push
cmpsb
in
idiv
out
sbb
in
pop
in
adc
jle
mov
loop
rcr
movsb
push
mov
leave
jae
repz
aad
xchg
mov
mov
mov
jecxz
add
cmp
adc
loope
push
cmp
xchg
xchg
mov
or
sub
push
int3
or
popf
and
in
dec
push
scas
dec
push
or
roll
dec
orps
sub
gs
xchg
cmpsl
push
aaa
xchg
adc
ljmp
push
inc
add
inc
ret
or
mov
lahf
sahf
jnp
vmaxpd
in
jp
rorb
push
cmp
lahf
je
test
mov
xor
dec
adc
and
mov
push
adc
test
fildl
jno
loop
or
xorb
gs
ficompl
out
jae
ds
stc
jo
or
aaa
adc
in
add
jns
fwait
pop
pop
pop
in
push
add
inc
jl
pushf
adc
mov
sbb
fistpl
in
jbe
jp
movsl
out
push
int
dec
xorl
arpl
das
out
int
xchg
int
insb
dec
mov
xchg
cltd
popa
es
enter
cmp
rolb
daa
and
test
mov
dec
and
fisttpl
das
insl
mov
and
hlt
mov
ljmp
pop
jbe
mov
add
mov
icebp
lods
add
sbb
mov
xor
jae
mov
fidivrs
mov
leave
mov
pusha
dec
shlb
fcoml
jns
mov
and
fsub
push
jge
ja
test
sub
sbb
adc
pop
popa
pop
call
pop
lahf
jle
in
mov
or
cmp
adc
adc
int
sbb
mov
cmp
decl
push
out
int3
gs
popa
fnstenv
mov
jle
aaa
clc
xor
dec
iret
and
mov
jo
icebp
jnp
pop
movsb
mov
loop
into
add
sub
cmpsb
out
mov
mov
es
mov
insl
fisubrs
lock
cmp
adc
movsl
sarb
xchg
push
leave
jg
repz
ficoml
aad
orl
fcompl
ljmp
int
or
xchg
pop
nop
pop
mov
sbb
and
test
push
adc
sti
cmp
cmpsl
inc
sahf
mov
out
insb
les
jl
or
cwtl
mov
ds
sti
test
and
dec
rcr
bnd
rclb
insb
cs
ja
fidivs
mov
repz
jnp
adc
bound
pop
add
jno
fnstsw
cmp
dec
test
add
stos
out
mov
or
mov
loopne
test
mov
fwait
imul
aaa
mov
xor
mov
or
push
pop
mov
lahf
dec
rcrl
xchg
jns
ds
dec
fbstp
mov
ret
imul
and
jle
test
cs
fidivs
adc
mulb
jns
fnstcw
call
push
pop
bound
xlat
or
sbb
and
lods
gs
test
pop
cmc
sub
repz
rorb
add
dec
or
popa
pop
adc
das
add
mov
bound
insb
inc
cmp
xchg
pop
cli
mov
and
adc
xlat
mov
loop
mov
andb
inc
cmp
push
fsubl
lret
out
pmuludq
enter
mov
push
adc
clc
call
push
pop
cmp
xchg
scas
clc
sbb
mov
sub
jp
mov
xchg
pop
mov
dec
push
repnz
inc
xor
cmpb
pop
xchg
pop
dec
pop
jmp
xor
movsl
ficoml
push
mov
xor
scas
adc
cmp
add
scas
insb
mov
cwtl
mov
fcompl
jne
push
lret
rcr
mov
mov
gs
mov
adc
jge
push
cmp
mov
test
loopne
jno
xchg
das
xor
pop
fmulp
jmp
jle
push
and
ljmp
adc
mov
mov
xor
xchg
pop
imulb
pop
filds
nop
push
jno
inc
iret
out
enter
xor
pop
mov
out
inc
push
push
sub
jnp
jmp
cmp
pop
popa
int
pop
jmp
or
pop
js
subl
sbb
dec
addb
popf
addb
test
sbb
inc
cs
mov
ret
ja
sbb
cmp
movsl
and
shrl
jmp
out
push
sbb
dec
adc
int3
repnz
push
dec
lock
lock
adc
mov
lods
addl
hlt
pusha
xchg
or
out
idivl
cmp
mov
sbb
xchg
fwait
jnp
lahf
mov
rorl
cmc
pop
mov
mov
das
test
cmp
add
mov
inc
rcrl
insb
pop
mov
lds
movsl
out
pop
aaa
test
aad
in
rcr
push
lret
jb
mov
dec
in
mov
mov
and
es
dec
in
popf
mov
and
mov
push
test
lret
or
or
sub
imul
cmp
rclb
loop
repnz
iret
dec
addr16
ja
call
xchg
nop
dec
sub
cld
inc
movsl
adcl
adc
push
xlat
out
jecxz
div
aam
push
inc
insb
mov
lods
mov
in
jl
jle
cmp
stos
mov
adc
mov
jge
movsb
mov
fs
flds
xchg
cltd
push
push
mov
mov
pop
ljmp
dec
add
pop
xor
inc
mov
adc
fstpt
lds
push
lea
mov
pop
jge
insl
fmuls
daa
es
jno
int
adc
lock
or
das
cwtl
mov
popf
lret
fwait
pusha
ds
push
xor
sbb
inc
ss
push
sub
and
sub
hlt
pop
mov
xchg
sbb
xor
cmp
cltd
push
mov
push
in
popf
fs
sbb
or
inc
dec
xor
aas
shrl
cmp
push
or
pop
dec
mov
test
ja
jmp
inc
adc
dec
push
movsl
pop
mov
add
mov
insl
jae
sub
inc
mov
sbb
xor
jnp
mov
les
test
cli
cld
les
sbb
jns
mov
jne
push
adc
out
pop
sub
scas
pop
push
or
xor
add
faddl
mov
shll
lret
mov
xor
movsl
ret
repz
mov
gs
movl
cmp
shll
shll
testb
icebp
shlb
mov
inc
inc
incl
mov
jmp
call
jns
fbstp
subl
pop
in
in
movsb
sub
add
xchg
lock
cli
imul
xor
xor
or
into
popa
stos
dec
mov
mov
push
push
in
insb
sarb
xor
pop
ret
into
cltd
pushf
jmp
lret
push
xchg
add
xchg
cli
sub
dec
mov
hlt
mov
mov
ficompl
mov
cmp
push
repz
jg
and
comiss
out
daa
pop
and
cmp
pusha
repnz
out
inc
loope
gs
inc
mov
sub
mov
fisubl
addr16
mov
cltd
insl
lret
ljmp
sbb
xchg
sti
sub
mov
mov
pop
and
jge
scas
jno
leave
test
jne
in
imul
int
or
jnp
dec
sub
arpl
sbb
test
jae
push
lds
test
bswap
and
stos
mov
xchg
inc
out
sbb
out
jmp
js
jmp
mov
push
mov
aad
sbb
cltd
insl
dec
cmpsl
lock
xchg
jecxz
sub
pop
test
rclb
movb
mov
adc
pop
xor
lret
imul
xchg
ljmp
cmp
cmp
cmpsl
sub
inc
adc
jno
movsb
imul
loopne
jbe
mov
inc
fcomip
lock
sbb
mov
adc
stos
lret
cmpsb
push
stos
ret
xchg
push
out
xchg
loope
lea
popa
push
or
sti
cmp
jnp
bound
sbb
or
inc
mov
mov
loope
push
pop
sub
pop
stos
sub
es
sti
cli
loope
mov
mov
es
pop
daa
add
jmp
repnz
add
movsb
sarl
jae
repnz
cli
in
insb
stc
data16
or
sbb
cmpsb
ret
inc
mov
adc
sub
mov
jo
mov
nop
pop
lahf
rcrl
cld
loop
fists
cltd
lahf
test
jg
jo
xchg
pop
addr16
adc
sub
sub
add
fcmovnu
dec
iret
cmp
pop
out
je
jb
xor
pop
xchg
push
mov
test
inc
mov
or
cli
ret
add
mov
aad
mov
cmp
pop
inc
repz
sbb
std
cmpsl
bound
movsl
subb
jne
fdivs
xor
jl
int
pop
mov
sub
ret
mov
into
jecxz
add
and
cmp
cmpb
cltd
push
adc
std
mulps
sbb
rolb
and
sub
int3
adc
sub
and
adc
sbb
aam
adc
sub
popa
mov
mov
mov
sbb
repnz
xchg
jbe
mov
pop
loop
cmpsl
cmp
lods
mov
sub
test
aad
pop
or
cwtl
fldenv
scas
xchg
sti
mov
sub
push
sbb
xchg
xchg
push
popf
jge
jno
repz
and
jle
sbb
mov
adc
movsl
or
test
cmpsb
js
xor
dec
xor
push
cmp
jb
mov
sub
sub
pop
and
cmp
jae
fwait
or
xor
arpl
add
mov
pusha
add
jae
cmp
jl
fbstp
push
and
int
shl
andl
cwtl
xchg
adc
xchg
xchg
cmp
mov
mov
dec
out
mov
outsl
test
mov
test
mov
icebp
lds
outsl
mov
mov
int
filds
and
pusha
xor
sbb
adc
xor
push
fld
dec
dec
ffreep
jl
mov
inc
lcall
pop
mov
push
jle
mov
jno
adc
adc
dec
leave
mov
bound
inc
pop
loopne
or
call
insb
loop
mov
adc
sub
dec
hlt
jnp
lahf
jno
mov
jae
push
sub
pop
test
jnp
stos
mov
inc
mov
mov
in
adc
and
daa
shlb
pop
stc
dec
jno
test
inc
jb
jecxz
dec
mov
inc
insb
rcl
jbe
clc
stc
and
add
mov
sub
sub
sub
lds
lea
inc
sbb
add
add
cmp
dec
sub
popa
push
lods
scas
adc
fiadds
rcrb
pop
fcmovnbe
cwtl
clc
mov
addr16
pop
mov
div
enter
sub
loopne
sbbb
pushf
push
jl
imul
lds
nop
adc
pop
testb
mov
insb
xor
mov
into
sub
sbb
imul
hlt
mov
loopne
shll
popf
mov
addb
lret
sarb
xlat
fcomps
or
xchg
addr16
push
mov
xchg
push
mov
movsb
jmp
cmpsb
lods
fdivs
sbb
pop
dec
sbb
pop
sub
cmp
sbb
cmp
push
pop
sbb
filds
cltd
cmp
cltd
ret
test
loope
push
mov
sarl
call
sbb
shr
fsubrs
push
xor
out
jge
pop
jmp
outsb
bswap
fidivrl
push
mov
sub
push
jae
test
fld
cmpsb
rorl
cwtl
dec
jecxz
jle
mov
dec
jno
ds
dec
xchg
repz
push
pop
push
fisubrs
arpl
or
je
xorb
int
fdivrp
dec
sarb
hlt
mov
ljmp
sar
lcall
pop
push
adc
xor
or
dec
into
jmp
adc
dec
fistl
push
push
cmpsb
cld
mov
push
std
mov
mov
inc
mov
fisttps
adc
xchg
jnp
cmpsb
outsb
mov
jae
icebp
jp
pop
pop
cmc
push
push
fdivrs
cmp
lods
push
mov
fidivrs
test
sbb
dec
push
push
es
adc
lahf
dec
jle
adc
jbe
insl
sub
int3
xor
add
jle
mov
xchg
sub
inc
leave
iret
into
xchg
add
lock
ljmp
lds
inc
test
jo
dec
sti
lods
out
std
add
push
loopne
frstor
loopne
pop
dec
ss
mov
push
adc
mov
stc
push
adc
cld
sbb
jno
mov
cltd
ficoml
dec
lcall
jle
sbb
jl
jns
push
fcoml
pop
mov
sbb
test
rcr
mov
sub
inc
pushf
subb
out
inc
insb
loope
xor
inc
aad
jecxz
mov
pop
stc
rolb
mov
xchg
js
dec
and
xor
inc
push
xchg
or
and
das
xchg
jle
adc
lock
lods
enter
cwtl
sub
inc
pop
into
rorb
andb
add
and
ret
cmp
mov
mov
out
mov
dec
jmp
cmpl
vcvtps2pd
or
dec
adc
jp
adcb
repz
sbb
and
sbb
fwait
xchg
and
pusha
push
sub
sti
mov
add
xchg
cwtl
test
fsubr
scas
ss
mov
sbb
aaa
outsl
stos
movsb
loopne
loope
cld
pop
jo
adc
jb
rolb
adc
repnz
sbb
push
cli
lcall
clc
sbb
push
jnp
dec
cwtl
adc
arpl
push
push
jmp
pop
sarb
sbb
std
mov
mov
sbbl
jmp
add
mov
fwait
movsl
xchg
xchg
lea
mov
cltd
imul
mov
or
jp
mov
adc
cmpsb
mov
inc
jne
add
or
push
stos
mov
sbb
stos
sub
mov
test
das
xchg
mov
or
jp
in
cs
and
fwait
imul
jecxz
iret
hlt
jg
aas
scas
mov
sub
push
fistl
mov
push
sahf
inc
roll
or
add
lret
adc
repz
enter
into
lret
test
out
jns
sahf
les
subl
dec
icebp
inc
sub
outsl
adc
daa
in
add
push
jge
lea
or
leave
mov
and
scas
rclb
fimull
lds
jle
mov
in
cli
in
add
lods
out
jg,pt
cmp
cli
mov
and
cmp
cwtl
leave
fildl
ds
inc
push
out
shll
pop
and
pop
jmp
cmp
divl
pushf
push
movsb
mov
jg
daa
and
inc
leave
lcall
and
sbb
or
sbb
adc
jbe
xchg
mov
xchg
mov
or
xor
rcrl
shlb
xchg
in
dec
adcl
sahf
sbb
fstps
inc
cmpsb
hlt
mov
mov
xchg
sub
popf
lcall
pop
mov
scas
fmuls
add
mov
jmp
fsts
or
sub
mov
movsb
lds
dec
incl
sti
rcr
in
imul
ret
fiaddl
pop
loop
adc
lods
inc
out
and
mov
out
jg
xor
and
pop
and
ja
outsl
push
loopne
push
dec
push
xchg
popf
xchg
xchg
mull
push
in
and
aad
jnp
mov
mov
mov
iret
xor
out
mov
in
push
fistl
in
repnz
nop
push
aam
les
pop
mov
dec
push
inc
inc
lods
hlt
sahf
movsl
cmp
pop
lds
orl
es
repnz
loop
mov
xchg
out
or
cmp
lds
mov
lahf
pop
inc
push
cmc
xchg
mov
dec
dec
movsl
lahf
nop
test
mov
mov
sahf
ret
daa
mov
or
lret
and
sub
sbb
hlt
popf
mov
pop
lods
jl
push
test
cmp
aaa
in
lret
adc
data16
jns
das
xchg
sub
or
inc
clc
dec
xchg
add
test
loope
sub
int
pushf
and
mov
adc
repnz
stos
shrl
int3
and
shll
xchg
aad
pop
cwtl
sahf
mov
loopne
ljmp
ret
cmp
cmp
push
pop
and
std
mov
pusha
adc
cmp
testl
int
mov
push
lock
loopne
cmc
and
jmp
sub
mov
xor
add
pop
sbb
pop
and
push
cmp
pushf
cltd
out
dec
fistpl
notb
sbb
jge
jb
xor
jno
pop
push
cmp
data16
and
clc
mov
call
in
adc
fs
stos
mov
pop
xchg
adc
ja
pop
fcompl
rolb
cmp
daa
add
cmp
cmp
pop
and
sbb
pop
mov
adc
or
ss
int3
xor
and
push
scas
mov
call
rclb
xor
ljmp
pop
pop
xchg
test
mov
sahf
in
ss
inc
sub
aaa
dec
sub
pop
ficoms
add
leave
mov
test
sbb
xchg
xchg
std
cwtl
ret
fiadds
out
inc
sbb
add
mov
mov
cmp
ret
dec
mov
clc
sti
lods
pop
push
push
dec
mov
subl
fcmovbe
in
mov
dec
arpl
in
pop
enter
xor
gs
jmp
and
movsl
aad
push
dec
jmp
fwait
pop
insb
fsubl
je
mov
mov
lods
cmp
ljmp
pop
lea
in
imul
movsb
xor
insl
lods
shll
push
imul
xchg
mov
cmp
pop
cmp
nop
mov
scas
lods
xor
push
test
sub
fcomps
sbb
sbb
movsl
sbb
pushf
sub
or
fidivrs
mov
jbe
dec
flds
icebp
int3
dec
scas
outsb
add
nop
outsl
mov
sub
dec
cwtl
push
jg
or
mov
adc
loope
and
lods
orb
insb
pop
add
mov
adcb
mov
lcall
and
cmp
inc
jo
mov
aaa
das
and
mov
loopne
cmp
and
pop
sbbl
sub
loopne
int3
jg
cltd
ja
ss
test
cmp
mov
test
dec
add
cmp
pop
movsl
jne
gs
xor
lcall
movsb
push
imul
mov
jo
cmp
dec
jp
mov
pop
aas
or
ss
gs
iret
popa
dec
daa
dec
ret
repz
fwait
das
jne
jg
add
gs
mov
dec
in
lret
std
outsb
inc
fs
daa
cld
push
cmp
mov
inc
roll
cld
mov
mov
sti
fwait
std
aas
xor
in
jp
dec
adc
stos
push
add
xchg
stos
pushf
adc
adc
mov
nop
cli
mov
or
push
and
bound
pop
notb
push
push
les
fstpt
mov
and
xchg
sbb
out
fsubrl
in
adc
xchg
fnop
cmp
xchg
inc
xor
scas
push
rcll
dec
cmpsb
push
xor
insb
ret
mov
sbb
xor
and
out
dec
hlt
pushl
icebp
stc
push
xorl
push
lahf
ss
cltd
bound
das
inc
imul
outsl
cltd
fdiv
mul
imulb
adc
bnd
cwtl
inc
lods
es
stmxcsr
aaa
pop
lock
cmpb
jg
push
loope
sub
jb
add
push
negl
mov
jle
or
push
imul
notb
pop
dec
cmc
div
cmc
mov
lock
mov
fisubrs
sub
push
jo
sbb
sub
in
pop
fisubrs
sub
xor
jp
pushf
jle
mov
lods
popf
shrb
lret
scas
dec
pushw
aaa
testb
movsl
ja
sbb
xor
inc
lret
xlat
bound
cmp
shlb
dec
push
test
push
dec
lret
cli
and
add
daa
pop
sbb
jp
sub
push
popa
mov
insb
shlb
scas
mov
mov
mov
rcrl
roll
movl
and
sbb
push
xor
xor
jae
push
mov
out
popa
or
clc
mov
and
cmp
subl
mov
sub
mov
inc
lds
or
scas
sbb
jns
jg
mov
fildll
xchg
scas
ja
jmp
icebp
rcl
and
jg
cltd
mov
sahf
xchg
adc
aad
lret
cld
test
mov
loope
cs
inc
xchg
push
adc
push
pop
push
and
call
loop
adc
cs
push
jge
leave
leave
faddl
enter
and
fstcw
pusha
sub
xor
xor
pminub
mov
sarb
and
push
sbb
adc
pop
int
jne
neg
cs
rcrb
cltd
sti
jns
pop
testb
mov
testl
jle
mov
push
sub
lods
push
jnp
sarl
push
popw
mov
and
dec
pop
test
das
xor
rcrb
add
inc
bound
test
jns
or
sarb
jecxz
adc
mov
lahf
mov
mov
pop
sar
adc
mov
cmpsb
sub
inc
test
sub
push
sbb
data16
sbb
jp
inc
sbb
adc
ds
pusha
inc
ja
or
xchg
shrl
ja
cltd
repz
mov
push
out
cmp
divb
loopne
xchg
pop
js
mov
push
outsl
jo
xor
push
scas
test
jmp
mov
sub
xor
stos
lret
in
mov
adc
pop
cmp
int3
out
push
mov
sahf
iret
push
jnp
sub
or
inc
mov
stc
mov
xchg
cmp
lret
aad
inc
mov
imul
or
jmp
adc
icebp
push
stc
imul
rolb
in
pop
xor
outsb
inc
and
and
pop
push
shlb
sub
push
fidivl
adc
rorl
inc
je
mov
pop
popa
stos
std
outsl
sarl
xor
in
jns
cld
subb
scas
mov
or
add
xchg
jmp
dec
test
cmp
call
xor
jne
or
xlat
aaa
enter
inc
clc
adcl
stc
inc
into
and
hlt
dec
jo
out
cmp
rorl
out
stc
sub
test
mov
lods
cmpsl
test
test
inc
fcoms
and
sub
inc
inc
adc
arpl
inc
repz
ret
xchg
push
or
ffreep
cld
out
test
je
dec
pop
leave
and
adc
inc
add
mov
aad
icebp
lods
ss
jno
push
test
xor
xorl
xchg
cmp
add
int
push
mov
test
push
cmp
test
or
repz
cmpsb
aam
out
loopne
sti
sbb
mov
stos
push
addr16
pop
daa
in
pop
es
bound
pushf
scas
andb
out
adc
mov
adc
mov
lea
xor
int
xchg
push
rcl
sti
xor
clc
and
iret
push
pop
mov
sahf
mov
in
jecxz
push
scas
adc
mov
movsl
enter
daa
cmp
jbe
jae
ljmp
jae
push
imul
jge
test
push
into
push
lcall
daa
jnp
jle
int3
mov
xor
sub
mov
xchg
mov
jl
loopne
lods
repnz
dec
pop
lds
lcall
test
pop
sbb
ret
mov
fildl
jmp
inc
adc
rorl
cmp
stos
fwait
xor
imul
aam
pop
sar
repz
dec
rcll
mov
mov
dec
leave
inc
ret
xchg
cltd
cltd
sub
or
movsb
jb
loop
mov
inc
insl
xchg
cwtl
imul
aam
dec
jmp
das
xchg
pop
in
lahf
sarb
stc
mov
int
test
hlt
cmp
popa
inc
and
pop
cmpsb
or
adc
push
mov
or
xchg
in
test
xor
ret
mov
inc
rol
int
sbb
sbb
cmc
movsl
mov
leavew
rcrl
and
dec
imul
xchg
dec
std
mov
mov
ds
fcmovbe
sbb
mov
das
mov
adc
mov
inc
inc
repz
sub
sbb
into
xor
jp
mov
cmp
dec
fisttpll
cmp
movsb
mov
loopne
ds
jmp
movsl
pop
sub
add
lds
dec
mov
aad
mov
int3
adc
push
add
xchg
daa
push
enter
jnp
and
dec
ljmp
lods
xchg
insb
scas
leave
shll
lret
mov
push
call
jnp
rcll
mov
cs
jae
mov
push
mov
pop
adc
pop
clc
inc
dec
jg
and
push
fisubs
pop
sbb
adc
sbb
jmp
call
sub
and
dec
int
pop
pop
push
sbbb
fisubrl
je
xor
pusha
sahf
mov
jb
std
sub
addr16
xor
add
out
das
jecxz
mov
mov
andb
int3
rcll
cmp
adc
push
das
pop
stos
jle
popf
aad
movsb
sub
data16
leave
push
pop
repnz
imul
movsl
arpl
std
mov
jp
mov
mov
jg
jo
cli
xchg
pop
test
push
decb
pop
loopne
xor
xorb
push
aam
sbb
leave
or
cmp
mov
scas
xchg
shrl
push
xor
sbb
pop
sbb
xchg
mov
add
enter
enter
iret
movsb
lcall
js
push
arpl
addr16
aas
aas
xor
call
lods
ret
mov
push
inc
add
sub
shlb
push
cmp
jno
pop
movsb
rolb
pop
cltd
popf
cmp
mov
cs
mov
mov
inc
jne
add
scas
les
fbld
mov
jo
jmp
cmp
stos
int3
sub
jo
jne
inc
mov
fdivs
dec
jg
adcb
repz
jmp
idivl
call
lcall
testl
movsl
pop
jge
adcl
addr16
mov
cmc
xchg
mov
add
and
lret
popf
sbb
mov
xchg
push
inc
inc
lock
ds
mov
or
pushf
sbb
adc
rcrb
cmc
dec
iret
fsubrp
addb
jle
jg
inc
xlat
pushf
xchg
jg
jmp
fdivrl
mov
lahf
popa
push
aad
and
into
mov
cmpsl
fs
cli
xor
push
push
mov
mov
sub
in
inc
pop
pop
xchg
cltd
subb
mov
and
add
cmp
hlt
adc
cmp
out
push
dec
and
les
loope
jle
dec
out
lahf
loope
clc
xor
lods
dec
push
xor
cwtl
jp
nop
fwait
sbb
dec
ret
lret
push
or
sahf
xchg
nop
pop
sarl
inc
aaa
std
lcall
fnstcw
mov
xor
dec
sbb
mov
push
in
aad
lods
adc
cmp
inc
outsb
add
pop
mov
sbb
pop
push
in
pop
popa
sub
push
inc
adcb
mov
push
xor
into
lods
add
repnz
stos
xchg
sti
or
rcll
imul
into
xchg
int
push
pop
inc
repz
jae
xchg
loopne
cld
mov
mov
xchg
sarl
popl
jecxz
sub
add
push
pop
sbb
hlt
dec
ds
push
gs
jp
or
push
rolb
push
and
nop
push
test
dec
xor
and
add
inc
sbb
call
jbe
push
cmpsb
cmp
xor
jp
mov
int
inc
or
xchg
or
push
mov
inc
xchg
mov
je
push
or
into
cmpsl
push
pop
xchg
inc
sbb
je
or
sbb
jno
pop
inc
imul
xchg
in
pop
mov
push
cmpsb
mov
leave
adc
pop
fwait
cwtl
jae
xchg
sub
push
sbb
ljmp
xor
jmp
mov
test
shll
sahf
aas
pop
add
jle
mov
inc
sub
jb
shrl
cwtl
pop
or
jno
mov
dec
and
out
pop
xor
cmp
mov
lock
smsw
pop
in
inc
mov
push
gs
mov
pop
cltd
push
pop
inc
sub
and
add
js
cmpb
testb
call
ficoml
ja
cltd
jbe
movsl
add
inc
out
outsb
xor
sahf
push
int
sub
fwait
sub
ds
or
cmp
out
push
outsb
sar
xchg
jl
cmp
hlt
push
cmp
fwait
sbb
movsb
and
subb
call
adc
sbb
jb
mov
lods
in
in
hlt
push
jmp
popa
nopl
in
push
adc
shll
fldcw
cmpsb
adc
mov
call
xchg
enter
ds
int
sub
adc
mov
xor
and
pop
sub
je
jmp
push
aaa
jecxz
ds
iret
sub
adc
stos
mov
ja
sub
ljmp
call
nop
lret
push
add
inc
sub
shr
rol
mov
std
xor
xor
add
js
mov
jo
stos
xor
daa
cmc
popf
adc
or
push
icebp
adc
add
mov
jae
sub
sahf
xchg
hlt
cmp
loop
pop
xchg
dec
cli
ja
rorb
loopne
rcrb
push
imul
pop
iret
or
or
nop
popf
mov
cld
cmp
fadds
mov
pop
mov
lock
test
cmp
inc
push
xchg
sub
mov
inc
dec
mov
sub
scas
xchg
adc
ffree
scas
pop
shll
popf
repz
enter
jge
out
pop
push
add
or
sbb
and
jl
jbe
mov
fwait
outsb
dec
repz
inc
pusha
inc
push
jo
jo
pop
pop
lcall
jnp
cmc
pop
dec
sbb
dec
mov
ret
xchg
in
xchg
push
push
pushl
sbb
aam
aaa
ja
push
js
mov
cmc
int
pop
push
mov
xchg
rclb
popa
dec
jle
in
lods
rorl
lahf
jae
add
movsb
sub
mov
adc
cmc
mov
andl
lods
jmp
leave
std
and
mov
sub
add
jge
mov
jle
fsubrs
test
xorl
fs
insb
outsb
stos
movsb
dec
pusha
lods
add
push
xlat
cltd
pop
inc
pop
xorl
sbbl
xchg
adc
mov
push
lods
bnd
xchg
push
enter
or
cs
adc
test
ret
mov
ret
out
cwtl
or
push
mov
or
xor
xorb
inc
or
pusha
movsl
jg
jg
imul
cltd
jecxz
imul
xchg
and
mov
cltd
testb
or
mulb
pop
scas
sbb
xchg
jge
fucomp
push
sti
sub
cmp
cmp
cmp
loop
loop
out
push
loope
sbb
sbb
icebp
bound
ljmp
pop
hlt
enter
lret
mov
adc
cmp
out
jmp
scas
lret
xchg
pop
push
mov
loope
dec
call
push
call
xor
test
ss
push
push
loopne
xchg
mov
outsb
mov
imul
or
sbb
test
xor
lods
pop
stos
das
test
mov
imul
sti
pusha
ret
adc
xchg
add
aad
das
test
mov
enter
sub
and
add
fsubrl
cmp
mov
dec
fmull
iret
shll
gs
mov
ja
aas
mov
or
adc
test
shrl
fimull
fiaddl
gs
or
push
pushf
dec
inc
mov
mov
jmp
mov
mov
outsb
aaa
aas
jns
jnp
js
insl
lahf
dec
sub
and
sub
fiaddl
inc
dec
lea
pop
push
jno
push
aad
sahf
sbb
loope
icebp
aad
cld
add
lock
mov
mov
repz
cmp
jns
clc
imul
scas
dec
sarl
cmpsb
or
ljmp
in
popa
cmp
and
jg
mov
and
pop
jmp
sbb
cs
xor
cmpsb
enter
adc
and
enter
pop
push
arpl
mov
into
insl
or
out
bnd
mov
mov
leave
cmp
xchg
test
lahf
pop
cld
xorl
xchg
js
cmp
jo
cmp
push
clc
hlt
and
mov
scas
pop
ja
leave
sbb
jbe
mov
cmp
idivl
fnstenv
addl
mov
push
push
cmp
xor
lcall
and
jno
orl
shr
add
cmp
xlat
jle
frstor
push
adc
loop
cmp
es
xchg
xchg
mov
mov
fnstsw
int
mov
xchg
cmp
mov
push
hlt
ud2
in
or
jle
inc
inc
pop
mov
or
mov
lret
stos
data16
xchg
js
and
push
push
push
mov
sub
not
icebp
sti
enter
mov
sbb
bound
shrb
push
xchg
leave
sub
lahf
insb
pop
xchg
seto
lret
arpl
xor
punpckhdq
sub
push
stos
gs
mov
mov
sbb
aam
out
imul
cmp
cmc
test
popf
jmp
dec
sbb
cmp
test
xchg
mov
add
cmc
aad
lahf
adc
sub
cmp
mov
movsb
aaa
mull
xchg
int
add
daa
push
adc
jle
popa
int3
sar
xchg
xchg
xlat
in
call
std
cmp
lea
add
pop
inc
dec
aas
cmc
push
rorl
dec
pop
in
sbb
mov
cmp
mov
xor
add
cmp
ret
in
mov
mov
lcall
std
and
jo
imul
mov
sbb
adc
mov
inc
inc
out
xor
pop
imul
push
enter
sbb
movsb
cmp
fldcw
arpl
scas
aad
mov
cld
inc
arpl
fwait
mov
or
dec
out
push
inc
mov
mov
sahf
ret
gs
xlat
loop
jmp
mov
xchg
push
jg
push
lea
add
dec
pushf
cmp
mov
add
rolb
addr16
mov
mov
sbb
and
inc
push
xor
mov
mov
stc
cmp
shl
and
outsl
add
cmp
jmp
dec
in
push
push
xchg
in
adc
lods
jge
clc
into
pusha
sub
ljmp
lods
xchg
int
or
imul
sbbl
add
xor
xchg
imul
call
ss
cmp
mov
mov
push
push
ret
xor
inc
cs
mov
scas
push
rorb
jbe
sbb
xchg
push
inc
add
and
ldmxcsr
jle
inc
sub
out
add
push
push
push
stos
sar
int3
cmpsl
mov
clc
lret
insb
sub
loope
fimull
out
dec
pop
fisttpl
sub
dec
es
inc
in
push
stc
outsb
sbb
sbb
aad
jo
in
jne
adc
pop
fsubrs
pop
andb
loope
dec
insb
inc
push
das
pushf
adc
mov
mov
je
adc
mov
xchg
cmp
dec
cmp
in
pop
insl
popf
cmp
cmp
daa
mov
scas
mov
scas
sbbb
xchg
je
xchg
enter
repz
int3
insl
mov
and
cmp
test
jno
aas
push
pop
rclb
xor
std
ds
in
jo
sbb
fldt
ss
call
adc
mov
cmp
jae
and
frstor
cmp
rdpmc
sbb
sub
mov
negb
imul
popl
popa
push
movsl
inc
call
out
xchg
gs
adc
mov
mov
xchg
sbb
xchg
mov
lock
xor
and
in
lods
xor
test
pop
aas
mov
outsb
mov
push
mov
enter
das
aam
arpl
xchg
out
fisubrs
and
lea
xor
js
stc
adc
push
xchg
adc
xor
aas
add
or
xor
mov
shrb
fstps
mov
sbb
mov
dec
aaa
cmp
mov
jl
sbb
inc
bt
lods
cld
mov
mov
push
subb
std
add
add
sbb
loope
stos
js
stos
js
fiaddl
fstl
imul
in
ret
sbb
jns
repnz
movsl
adc
jo
mov
adc
orl
mov
aam
outsb
add
lahf
adc
ret
lcall
and
add
insl
clc
popa
js
test
aas
sbb
push
call
push
aad
movsl
dec
cld
shr
jb
xchg
addr16
out
ljmp
sub
rolb
cmp
cwtl
cwtl
sbb
fisttpll
jecxz
xor
xor
enter
mov
inc
in
popa
pop
fnstsw
cmpsl
and
jbe
mov
repnz
jmp
add
into
fs
sar
test
and
add
add
mov
or
lods
mov
mov
scas
sbb
addr16
pop
andl
popl
cmp
sub
lods
orb
add
sub
cmp
add
insl
lcall
push
stos
xchg
mov
cmp
mov
popa
mov
int3
mov
sti
aad
add
popa
test
mov
cs
hlt
mov
adc
fs
out
add
or
mov
or
push
out
mov
pop
dec
jg
aam
push
cli
pop
and
into
mov
iret
pop
out
cmp
stos
xchg
sub
das
test
fsubl
bound
or
inc
pop
dec
mov
repz
cmc
stc
pop
fisttpl
pop
das
mov
pushf
xchg
dec
inc
push
out
xor
jecxz
testb
shr
stos
inc
mov
out
shlb
sbb
shll
push
mov
mov
je
inc
mov
out
rclb
imul
and
hlt
jnp
shlb
aaa
jns
loopne
dec
mov
cltd
ja
cmpsl
fimuls
adc
pushf
iret
dec
add
subl
push
jnp
int3
jo
adc
pop
push
sbb
sbb
stc
test
inc
add
jp
into
mov
nop
js
dec
and
mov
and
jo
repnz
pop
insl
cli
cld
in
xor
in
add
add
sbb
push
cli
mov
sbb
fsts
xchg
orb
sbb
pop
lret
lahf
and
pop
es
push
paddw
cltd
test
dec
fstl
adc
cmp
sti
pop
mov
mov
incl
fsub
mov
out
add
push
mov
and
adc
mov
je
int3
mov
lock
mov
test
push
mov
xchg
rcl
aam
xor
ljmp
mov
ljmp
cmpb
sbb
jmp
rorb
jl
mov
call
jae
or
scas
int
add
or
call
push
adc
push
lds
cmp
cmp
loopne
dec
shlb
mov
iret
push
and
or
inc
push
jb
jbe
mov
arpl
jo
add
and
scas
or
inc
insl
das
inc
out
dec
jbe
rcrl
ja
or
dec
popa
arpl
lret
xchg
jnp
mov
inc
mov
xchg
lea
fdivp
test
cmp
jge
mov
add
pop
clc
shl
pop
push
ret
or
pop
dec
imul
lds
xchg
mov
and
pop
fcmovb
mov
shll
mov
sarl
sub
inc
or
sbb
icebp
sub
inc
dec
stos
xchg
popa
sbb
pop
push
int
pop
push
addl
mov
mov
clc
sbb
popf
mov
dec
jmp
cmp
cmp
inc
lret
mov
sahf
gs
imul
push
rcrl
subb
jbe
shrl
xor
lock
mov
dec
mov
in
mov
mov
push
pop
mov
mov
and
cmc
pop
in
test
and
test
movsl
test
sub
pop
mov
fsub
sub
je
mov
pop
push
int
sub
jo
xchg
push
mov
lcall
inc
adc
push
mov
dec
push
je
or
into
sahf
data16
mov
gs
mov
daa
xor
sub
std
shlb
cmp
rcl
push
fs
or
cmpsb
cmpl
and
mov
leave
nop
jbe
pop
push
add
inc
movsb
and
ds
push
rcl
lods
les
pushf
ds
sbb
lret
add
adc
out
insb
jae
xor
xor
jb
mov
pop
and
movb
adc
lods
lret
test
sbb
push
cwtl
cwtl
sbb
rcrl
fstl
stos
mov
bound
bound
fisubl
outsb
or
cmpsl
mov
jmp
imul
xor
sub
inc
adc
push
cld
loopne
adc
jbe
push
bound
hlt
mov
pop
push
push
lds
das
xor
mov
cli
divl
leave
nop
push
sbb
xor
inc
add
jbe
mov
roll
jge
push
and
imul
ret
call
jl
jg
mov
push
in
pop
push
icebp
xchg
fstps
ret
fwait
inc
ret
and
jg
lods
test
addr16
popf
pop
push
stos
aad
loope
pusha
sbb
push
mov
pop
iret
add
push
seta
push
xor
push
lea
jno
out
mov
xchg
push
push
decb
mov
int3
aaa
jo
aam
aam
jecxz
jb
push
sti
mov
pop
out
cltd
adc
mov
scas
sbb
ret
dec
mov
or
push
cmp
sarb
int3
in
pop
ljmp
xchg
adcl
and
fidivrl
mov
mov
jo
xchg
pop
cmpsl
inc
enterw
flds
pusha
xchg
leave
lret
or
aad
movsb
sbb
lcall
roll
punpckhdq
out
inc
xchg
in
ja
insb
push
cmp
xor
cmp
cmp
outsb
gs
movsl
push
cltd
pop
dec
ret
push
dec
mov
adc
inc
push
sbb
and
sub
movsb
and
lods
mov
nop
cwtl
out
and
sbbl
or
push
adc
xor
sahf
movl
fists
dec
lods
dec
or
xor
dec
iret
adc
pop
ja
sbb
add
test
mov
jge
mov
sub
js
lret
add
jno
sbb
pusha
pop
lret
jge
pusha
in
cmp
sub
loop
gs
fmulp
out
dec
pusha
sahf
imul
push
lahf
test
xor
out
lods
pop
adc
push
into
push
jo
mov
cmp
fistpl
or
imul
mov
xchg
sub
or
or
adcl
lcall
xchg
mov
out
orb
ss
pop
or
inc
insl
inc
inc
xchg
mov
out
push
movb
in
pop
push
imul
jmp
xchg
hlt
push
movsl
push
insl
jo
jle
mov
mov
mov
jo
enter
push
mov
xchg
outsb
dec
mov
addl
out
mov
xchg
orl
adc
adc
rcr
sbb
dec
cli
xchg
mov
das
add
divb
fmull
adc
push
enter
movsl
fidivrs
or
fwait
stc
or
cltd
sub
sbb
push
cltd
cs
inc
xchg
jo
xchg
imull
sub
lcall
lcall
rorl
jle
movsb
adc
adc
out
inc
mov
push
jo
out
inc
mov
sbb
and
mov
mov
fsts
add
xor
xchg
dec
bnd
ljmp
add
or
aad
inc
pop
stos
push
mov
enter
dec
ss
rcrl
out
bound
scas
sub
js
add
sub
aaa
insl
adc
jns
shr
xchg
xchg
fldenv
addr16
rorl
mov
gs
je
js
inc
negb
mov
jb
add
jg
cmp
andl
lcall
lea
xchg
jae
xchg
pop
test
inc
mov
in
adc
push
mov
pop
pop
sub
ljmp
popf
mov
nop
push
mov
or
pop
into
or
sbbl
adc
aad
fmull
pop
inc
sti
inc
sahf
pop
adc
aas
adcb
subl
push
push
xor
jne
out
push
lds
popa
insb
or
shll
stc
shlb
std
jmp
imul
adc
pop
mov
lret
imul
jge
mov
xor
hlt
out
mov
push
out
loop
xchg
adc
and
adc
loop
stos
fists
jle
mov
nop
out
fildl
rorb
es
shlb
jns
mov
jp
adc
xor
cwtl
sbb
sbb
adc
sub
inc
inc
rcll
and
or
push
dec
jbe
cmp
clc
imul
pop
repnz
in
push
dec
divl
fimull
inc
ds
sub
sbb
xchg
add
ja
fldl
push
pop
sarl
ss
pop
out
xchg
ret
pop
les
gs
jmp
cmp
lods
push
sti
je
ficoms
adc
icebp
shll
sarb
ds
adc
in
test
lock
ror
jge
bound
sub
adcl
add
mov
in
mov
sub
leave
xor
cmp
dec
sti
into
jns
jo
push
push
add
movb
xchg
mov
aaa
mov
inc
or
xor
sbb
int3
xchg
add
or
stos
gs
jne
mov
fadds
sahf
push
add
or
mov
movsb
out
and
jecxz
imul
imul
and
adc
fisubrl
mov
mov
aaa
shrb
inc
lods
mov
sub
push
xor
out
popf
sub
nop
stos
pop
adc
adc
xchg
loope
sub
pop
jae
add
sub
push
or
xor
cld
lret
xor
sbb
dec
jmp
sbb
cmp
leave
test
xor
lcall
scas
hlt
jmp
pushf
jb
jge
mov
mov
loope
fstpt
mov
repnz
outsl
cmp
dec
fnsave
and
ret
rcll
mov
push
std
dec
mov
lods
sbb
pop
enter
xchg
pop
jg
arpl
sbb
jno
sbb
mov
mov
sti
xchg
add
push
and
dec
icebp
lods
adc
adc
rcll
insl
int
inc
arpl
pop
arpl
test
cli
fldenv
sti
mov
add
stc
out
push
leave
ret
push
ds
sub
sub
mov
das
add
jbe
out
mov
push
add
sbb
pop
inc
mov
ljmp
fs
cmpsl
xchg
das
aam
push
es
mov
pop
xlat
std
xlat
mov
push
cmpsl
lds
push
jne
add
test
ret
orl
cmp
lock
xor
rolb
addr16
das
pop
stos
jle
sarb
mov
jg
lahf
aad
cmp
push
das
lods
aad
sbb
push
lahf
daa
dec
xchg
or
pop
ja
andl
popa
mov
inc
icebp
fcoml
and
push
lret
ja
jo
xorb
sub
stos
in
dec
mov
push
pop
ja
mov
push
sbb
outsl
sbb
pop
sub
js
inc
shl
mov
or
iret
add
lds
and
mov
test
cmp
in
sahf
adc
aam
pusha
and
jmp
and
ja
loop
sahf
lds
push
insb
inc
in
xchg
in
push
enter
add
dec
adc
xlat
es
shlb
jo
mov
dec
jmp
imulb
cmc
adc
cli
sub
sahf
pushf
xchg
jmp
push
push
xor
fnstsw
lret
lods
xchg
scas
negl
mov
add
cmp
adc
pushf
das
jmp
lret
or
into
jnp
adc
cwtl
dec
push
mov
jae
pop
aad
xchg
test
insl
popf
lods
push
cmp
lret
xor
sub
sub
xchg
mov
enter
fpatan
je
dec
cmp
repz
lods
insb
mov
enter
orl
out
mov
jne
fsubs
gs
fsubp
push
cli
adc
insb
aam
les
dec
shll
mov
out
cmp
or
test
add
ret
lds
movsb
rol
ret
movsb
pop
and
or
mov
scas
jmp
loopne
and
lods
sub
test
sti
sbb
leave
xor
repnz
les
dec
lock
scas
icebp
push
pop
aaa
jg
fdivrl
sub
adc
mov
add
fstpt
xchg
pop
adc
into
adc
sbb
int
lods
xlat
leave
incl
jg
adc
cld
stc
out
jle
roll
adc
cmp
xchg
repnz
push
jbe
mov
xchg
insb
loopne
ja
leave
and
repz
dec
int
push
jl
inc
mov
xor
mov
lret
mov
sub
jne
jge
pop
xchg
je
and
scas
xchg
or
fstpl
lds
push
inc
add
rcrl
pushf
inc
mov
push
enter
imul
push
push
inc
and
add
xchg
idiv
mov
outsb
mov
dec
adc
test
jecxz
data16
aas
sbb
xor
sahf
jno
dec
sbb
sbb
and
imul
xchg
into
push
sti
imul
lret
scas
push
jnp
mov
push
mov
and
imul
jno
lahf
stos
repz
stos
fs
les
mov
stos
sbb
pop
or
pop
or
int
cmp
cmpsb
fwait
adc
clc
xor
xchg
into
push
cmp
inc
orl
jmp
mov
decl
ret
out
sti
pop
lock
das
dec
rcpps
cs
push
or
mov
cs
loopne
push
mov
pushf
adcb
sarb
outsb
or
sub
mov
add
mov
dec
loope
roll
jo
or
mov
insb
pop
push
mov
mov
leave
fwait
jle
cmp
icebp
adc
arpl
les
adc
ss
push
cmpsl
bound
push
mov
xor
test
xor
mov
mov
mov
pusha
inc
repz
aas
pop
inc
insl
mov
les
lret
ficoms
inc
cltd
sbb
repz
addb
cld
orb
mov
jns
lret
pop
add
imull
push
arpl
or
xchg
mov
sbb
xchg
and
xor
lock
call
scas
sub
push
mov
in
aas
jno
repz
cmpsb
adc
lret
loopne
icebp
ja
cmp
cmc
into
lods
sbb
add
lods
nop
movb
mov
or
imul
rcrb
xor
jbe
outsb
xor
xchg
fldenv
mov
enter
les
xchg
idiv
data16
gs
cmp
inc
adc
xchg
and
jp
mov
test
mov
cmc
cmp
jp
xchg
icebp
sub
jl
mov
pop
fdivrl
add
loope
std
fadds
faddl
push
sub
sub
insl
cwtl
imul
fistl
pop
push
xchg
rorl
inc
jno
rcr
fnsave
mov
inc
ds
add
das
inc
mov
repnz
add
inc
cmc
and
sbb
mov
xchg
lds
push
xchg
iret
mov
push
insl
mov
mov
mov
jp
js
lods
in
and
test
popa
and
inc
scas
mov
add
cwtl
jge
out
xchg
pop
mov
xor
fildll
int
fs
lret
or
xor
dec
jae
fwait
xchg
xchg
call
imul
push
adc
mov
cmp
test
xchg
mov
int3
aaa
ficomps
aam
negl
les
xchg
and
sub
sbb
jbe
mov
js
out
xor
divb
sbb
lret
sub
jg
shlb
inc
xlat
aad
movsl
sahf
add
daa
inc
jmp
call
fildl
and
jns
lods
mov
loop
clc
or
aas
hlt
xchg
adc
cltd
pop
sbb
jecxz
jge
in
mov
xchg
std
repnz
ret
mov
adc
pop
jle
sar
mov
popa
or
push
outsl
cltd
jge
stos
pop
sub
sbb
cld
dec
mov
mov
les
in
icebp
in
mov
cmp
mov
mov
nop
inc
cmc
sbb
sbb
sbb
dec
add
mov
dec
sub
push
mov
or
fildl
add
loopne
fcomps
subb
js
push
xor
hlt
js
dec
push
mov
push
push
lock
mov
int3
scas
nop
xchg
popf
pop
inc
xchg
push
pushf
inc
mov
xor
sbb
sub
pop
jecxz
sub
lods
dec
bound
shlb
sbb
xor
dec
inc
push
jl
lcall
jl
loop
mov
clc
mov
out
jge
sbb
adc
in
jmp
jo
sbb
or
and
ljmp
mov
outsl
adc
add
push
outsl
imul
popa
rclb
mov
pop
rcrl
cld
mov
lahf
sbb
xor
xlat
jo
sub
and
pop
lahf
into
xor
inc
cli
out
adc
jno
adc
cmp
cmpsl
fwait
pushf
mov
roll
popa
and
xor
iret
enter
or
aam
jns
addl
mov
out
repnz
xchg
adc
mov
mov
dec
xchg
cmpsb
int
fistps
sti
je
and
or
cmp
test
add
repz
add
and
sbb
iret
mov
dec
unpcklps
fistl
test
sbb
xor
sbb
dec
inc
push
andb
mov
gs
push
or
cli
je
xchg
orb
jecxz
ja
cmp
jno
in
mov
jle
adc
aas
mov
mov
jbe
je
int
scas
cmp
loop
in
mov
mov
xchg
ja
add
cmc
mov
int
add
loop
inc
add
dec
sbb
insl
or
enter
js
adc
dec
cmp
sahf
or
push
cli
dec
mov
jb
hlt
icebp
xchg
dec
sub
push
ret
mov
push
insl
sbb
scas
jmp
mov
and
std
loope
movsb
in
adc
mov
mov
mov
push
mov
and
sarb
pop
dec
jge
outsb
and
pop
dec
inc
ret
icebp
loop
and
dec
pop
mov
insl
sub
popa
js
cmp
into
add
mov
cmp
inc
leave
sub
mov
xor
mov
jb
mov
addr16
inc
dec
sarl
add
fdivrl
xchg
mov
cli
dec
dec
lea
mov
popf
xor
mov
scas
add
jno
push
push
lods
and
pushf
pop
repz
dec
and
and
jnp
push
jns
sub
addb
aad
mov
jl
xchg
jnp
lahf
loopne
push
and
fmull
mov
mov
setnp
jb
pop
mov
stos
leave
dec
mov
mov
leave
test
inc
sub
inc
std
cli
xchg
test
rorl
jle
pushw
rcrb
enter
sbb
xchg
or
je
mov
jmp
fadds
out
cwtl
fdiv
jle
outsb
xchg
fcomip
popf
adc
fs
xchg
stos
leave
push
lcall
and
ret
jbe
mov
addb
jmp
push
mov
stos
mov
and
jp
ljmp
xor
xor
outsb
sub
je
addr16
je
lret
dec
sub
fisubl
xor
mov
jmp
shll
int
push
adc
mov
add
xchg
mov
xor
aam
jno
sbb
flds
pop
stos
pop
cltd
ret
and
push
xor
adc
fildl
inc
jbe
mov
jne
arpl
adc
cmp
testl
or
loop
jb
lea
pop
mov
stos
inc
lds
push
in
out
jecxz
and
mov
sbb
sbb
test
cmp
bound
es
loope
mov
out
or
rcrb
int3
repnz
out
ljmp
cwtl
test
or
fldt
pop
mov
mov
sub
loop
adc
xor
pop
popf
movsb
dec
fdivrl
mov
dec
cmpsl
mov
popf
sbb
insl
sbb
inc
adc
push
mov
aaa
test
jle
mov
test
mov
stos
jl
xor
pushf
out
add
jne
cmpsl
xchg
les
adcb
push
dec
mov
inc
or
clc
out
inc
xchg
pop
mov
lods
test
pop
jne
add
or
pop
xchg
pop
xor
sub
sub
inc
rol
sbb
mov
and
add
cmpsl
mov
cmpsl
or
jno
mov
imul
cmpsl
imul
sub
jg
add
and
ret
nop
inc
mov
adc
gs
adc
arpl
hlt
cmc
xchg
das
inc
loopne
cmpsb
jp
lea
lods
aaa
jl
std
loopne
imul
push
test
sub
sub
jb
std
sti
dec
pop
lret
sub
jmp
push
pop
test
mov
sahf
inc
and
mov
mov
pop
jecxz
sbb
push
adc
cmp
jo
das
xor
stos
shrl
aaa
rorl
rclb
mov
inc
xchg
mov
cmpsl
insl
mov
pop
jbe
pop
xor
jae
add
flds
imul
nop
pop
push
aaa
mov
cli
sub
adc
inc
adc
sbb
loope
lods
mov
xchg
idivb
aad
push
cmpsb
sbb
push
add
mov
icebp
jecxz
inc
inc
adc
stos
mov
movsb
cmp
lahf
push
pop
out
negl
cmp
jl
fwait
in
iret
mov
stos
jmp
shll
mov
or
push
push
addl
adc
in
dec
sub
jo
fildl
xor
push
test
lea
les
jmp
jns
push
lock
ja
or
call
pop
sbb
jnp
sti
jns
sub
leave
inc
shll
inc
outsb
out
inc
pop
cmpsb
jno
jns
cwtl
pusha
ljmp
iret
in
rcll
or
je
test
std
leave
add
in
jno
imul
sub
jge
fisttps
or
cmp
pop
insl
leave
test
ja
jns
mov
sbb
mov
push
jge
sbb
sbb
push
out
or
xor
xchg
es
movsb
or
xchg
imul
push
xchg
add
pop
or
cmp
jns
jecxz
push
jne
dec
negl
jg
lods
mov
test
decl
mov
sbb
shrb
pop
ror
add
jbe
loope
aas
mov
or
push
pop
cld
sbb
fnsave
mul
mov
push
xchg
inc
or
mov
adc
sub
shr
add
fs
pop
leave
mov
cmp
sub
jne
call
das
clc
aaa
fstpl
inc
dec
dec
and
daa
mov
or
sbb
mov
cmc
and
roll
mov
repz
repnz
dec
mov
scas
lret
cmp
adc
movsl
xchg
mov
inc
and
jbe
inc
dec
inc
in
mov
not
push
fadds
jecxz
out
daa
xlat
daa
orl
sub
out
shll
and
and
mov
incb
fwait
dec
scas
or
fstps
out
push
jle
xor
and
jb
cli
and
xchg
pop
mov
shlb
insb
mov
mov
andb
icebp
dec
mov
inc
add
xchg
int
or
imull
mov
push
mov
sbb
or
xchg
enter
sbb
repnz
clc
add
push
repnz
mov
xchg
jl
add
add
adc
repnz
inc
and
mov
rorb
jmp
movsb
mov
pusha
stc
shrl
xlat
and
dec
add
jl
mov
dec
enter
je
pop
lea
jbe
add
jne
lcall
scas
scas
and
push
add
cmpsl
repz
jge
dec
cmpsl
out
mov
jp
cs
jl
in
sbb
out
in
push
mov
add
sti
lret
xchg
gs
mov
in
mov
insb
lods
fiadds
push
stc
stos
fimuls
mov
pop
lock
jno
fwait
add
lock
pop
aas
xor
pop
push
fistl
jmp
imul
pop
popa
sub
mov
je
sub
neg
cmpsb
mov
inc
jo
xor
shl
mov
sbb
adc
fnstenv
pop
dec
mov
dec
lods
jg
loopne
adc
icebp
jl
jne
outsb
inc
push
cmp
ret
mov
pop
lcall
int
lret
icebp
jbe
sub
iret
shrl
cmp
adc
repnz
cmp
dec
jno
inc
or
lcall
fxch
fnclex
sub
fucomp
outsb
test
xor
pop
in
add
gs
mov
push
sbb
mov
mov
jle
mov
push
je
xchg
push
int3
jbe
push
movsl
and
inc
imulb
repnz
ljmp
mov
fisttpl
mov
es
mov
inc
scas
mov
ret
jns
pop
fidivl
sahf
das
mov
add
ss
shl
ja
jne
jno
lock
jg
mov
xor
push
daa
adc
dec
or
push
cltd
cmpsb
stc
dec
lret
ds
and
adc
je
or
pop
movsl
out
rclb
movsb
xor
xor
popa
fiadds
or
sub
jo
mov
adc
xor
xchg
mov
push
outsl
pop
mov
cmpsb
push
data16
ljmp
mov
aam
inc
out
insl
adc
and
cmpsb
pop
imul
jo
call
mov
sub
iret
adc
mov
fildll
dec
dec
subb
movb
int
sbb
decl
outsb
loopne
jb
movsl
aas
mov
xchg
imul
jo
cmp
and
les
cmp
push
out
fadds
enter
mov
and
push
and
mov
sub
cmp
xchg
mov
jne
clc
int3
hlt
add
cli
aad
pop
call
mov
push
out
mov
stc
xchg
jae
jge
mov
and
js
orb
stc
cld
mov
xchg
bound
fsts
sub
cmp
jnp
cmp
int
ret
or
inc
cmp
pop
cmp
push
xor
and
push
adc
or
scas
ljmp
cmp
repz
xchg
xchg
fwait
xchg
cmp
sub
test
jns
jg
sub
mov
fadds
call
mov
sbb
push
loope
fwait
jo
scas
dec
sbbl
push
in
push
xor
adc
push
mov
psrlq
scas
xor
mov
or
mov
aad
sub
out
mov
jno
dec
pop
outsl
xchg
inc
mov
and
dec
mov
fs
int
in
adc
fs
pop
lds
and
fwait
cmp
or
mov
cmp
rolb
jne
cmp
bound
and
xchg
sti
xor
pushf
jecxz
inc
mov
je
lods
cmp
ljmp
mov
fs
scas
or
test
inc
jg
cmc
xchg
jmp
sub
inc
mov
push
pop
cmp
adc
js
leave
push
xchg
ret
rcll
fwait
cmp
mov
daa
jmp
lret
movsl
popa
mov
mov
dec
cwtl
inc
push
lea
jp
add
arpl
scas
sub
pop
push
xor
cld
or
jo
pop
mov
xor
mov
popf
adc
fs
ret
aaa
jno
or
xor
and
mov
aas
mov
mov
jecxz
sub
and
das
push
outsl
add
push
and
loopne
loopne
testl
and
mov
adc
xor
add
xchg
sar
nop
rep
insl
negb
aam
aad
out
in
pop
aaa
cmpsb
and
inc
ficompl
stos
mov
jp
orb
xchg
lcall
fisttps
inc
mov
pop
repz
sub
inc
mov
aam
fstps
fs
loopne
jnp
mov
inc
in
push
cmp
add
aaa
insl
push
dec
xor
cltd
fcomi
pop
jmp
xchg
or
sahf
push
mov
dec
clc
xchg
push
xchg
repz
cmp
sub
movsl
push
pusha
dec
nop
mov
shlb
loop
in
cmp
cmpsl
xor
push
mov
mov
ja
mov
aas
pop
adcl
out
lret
neg
mov
add
mov
pop
inc
dec
add
adc
into
fstl
int3
mov
call
nop
jno
dec
mov
nop
and
mov
xor
cmp
mov
into
jle
jp
inc
sub
xor
aam
xor
mov
mov
jecxz
scas
fidivl
ja
mov
and
inc
push
mov
sbbb
les
push
leave
xor
sub
cmp
sbb
sbb
pop
mov
rolb
sub
inc
fstp
dec
mov
loopne
jb
testl
stc
mov
lods
aam
pop
add
imul
mov
inc
jne
adc
push
push
testl
jbe
push
in
mov
mov
cmp
nop
js
inc
out
insb
stos
rorb
scas
cli
nop
inc
xor
inc
push
inc
imul
sbb
pop
mov
fistpl
pushf
gs
or
sarb
push
xchg
pop
and
insl
mov
jbe
sub
cltd
mov
call
int3
and
aaa
jp
cmp
in
and
sarl
decb
adc
mov
arpl
adc
int
ret
imulb
pop
jg
and
stos
test
cmpsl
out
xor
sbb
pop
lods
mov
hlt
rcr
movsl
xor
and
sahf
sub
jne
leave
mov
sbb
cmc
inc
mov
jmp
mov
out
add
sub
test
mov
jg
testb
dec
pushf
test
aad
pop
stos
adc
pop
std
shlb
xor
adc
js
push
mov
mov
subb
sarb
in
inc
call
jno
cmp
cmp
loope
out
mov
jne
clc
insb
out
cltd
cmc
sub
xchg
dec
aas
mov
mull
dec
loope
fwait
in
sbb
push
xor
out
mov
and
push
in
xchg
pop
shl
mov
pop
in
dec
xor
inc
aas
pushl
sbb
das
mov
in
lret
fimuls
inc
scas
sub
es
dec
xchg
ficoml
sub
adc
cmpsl
xor
in
repnz
cmc
std
insb
mov
push
shll
inc
pop
add
mov
or
in
mov
ficoms
aad
cmp
rcl
jne
rclb
jecxz
pop
xchg
hlt
insb
mov
in
sbb
sbb
fprem
pop
rcll
hlt
cmpsb
ret
xchg
push
sbb
xchg
insl
std
mov
mov
test
adc
or
mov
aaa
lcall
fnstsw
insb
loope
aas
push
dec
iret
aas
mov
sarl
je
aam
mov
mov
aam
outsb
and
xchg
dec
lret
push
rorl
push
movsb
jp
cmpsb
pop
test
jmp
mov
and
pop
inc
cltd
mov
push
aas
mov
test
cmp
mov
sbb
notl
nop
ljmp
add
adcb
stos
sub
inc
aam
fdivrl
mov
xchg
lret
mov
push
mov
aad
fsubrl
call
aam
mov
je
fisubs
arpl
mov
push
mov
sub
or
push
jle
shl
mov
sbb
xchg
xchg
xchg
inc
lcall
mov
int
inc
and
cltd
sbb
xchg
sub
jl
sub
or
sbb
xchg
or
sub
cmc
push
repz
jmp
adc
mov
fisubl
int3
nop
jno
mov
lods
or
repnz
mov
xor
push
add
mov
clc
out
flds
ret
cltd
fwait
mov
aas
xchg
xor
add
imul
addr16
mov
jl
imul
ds
bound
mov
add
pop
call
enter
mov
aaa
add
dec
es
data16
and
mov
aam
lret
cmp
nop
push
pop
out
xor
add
inc
pop
jl
xor
mov
xchg
push
xor
int3
pop
xor
rorb
cmpsb
xor
mov
mov
and
nop
aam
adc
add
mov
lds
mov
cmp
loope
into
sbb
iret
and
mov
cmpsb
addr16
es
jmp
dec
inc
mov
decb
inc
xchg
into
pop
cmp
ficoms
jle
cmc
ret
mov
ss
dec
push
mov
into
arpl
lret
mov
repz
incb
sbb
cwtl
pushf
sti
addr16
xchg
aas
stos
lods
in
je
cmp
scas
adc
pop
jecxz,pt
inc
insb
lret
mov
pop
push
stc
and
sahf
enter
imul
push
xchg
jge
pop
stc
pop
fsubrs
movsb
imul
mov
out
movsl
pop
fucom
push
ret
pop
je
push
cwtl
mov
rcrb
mov
insb
or
xchg
push
push
xor
lods
fdivs
test
rcll
add
mov
sbb
insb
dec
jb
sbb
in
cmp
sub
jo
fcmovne
add
decb
mov
movsl
sbb
cwtl
lea
dec
ficoml
mov
lahf
fiadds
ret
mov
loop
int
cltd
xor
inc
xor
aad
fsts
mov
repnz
fists
mov
push
lahf
sub
or
and
sub
inc
push
dec
xchg
sbb
and
arpl
push
push
or
inc
mov
inc
xchg
inc
pop
add
inc
scas
aad
cld
cmpsl
jl
mov
mov
cltd
cmp
xor
xorb
data16
jge
xlat
shlb
rolb
stc
scas
out
dec
sahf
jmp
or
adc
mov
xorb
add
cli
fs
push
mov
mov
in
lahf
pop
pop
sbb
fdivrl
imul
fildll
jb
stos
or
mov
jmp
int
add
mov
inc
rolb
scas
cld
fistl
in
imul
aas
xchg
xchg
aam
jecxz
or
pop
or
mov
add
inc
add
add
add
das
inc
add
adc
add
sub
hlt
jl
add
inc
add
sahf
inc
add
add
jne
cmp
and
mov
dec
sub
or
mov
mov
aad
pop
add
popa
mov
cmp
sub
stos
inc
mov
imul
mov
repz
test
sub
adc
icebp
bound
out
xor
mov
mov
adc
in
call
mov
inc
aam
shl
or
lret
push
jae
lds
push
pop
mov
addr16
ret
jbe
xchg
pop
test
mov
test
adc
mov
add
cmp
nop
mov
or
mov
cltd
jno
pop
jnp
lahf
adc
push
adc
sbb
sub
xchg
ss
push
mov
or
dec
js
test
mov
xchg
jge
xchg
sub
pop
cmpsl
adc
jg
sarb
bound
shll
push
jl
xchg
mov
mov
mov
ja
fcomi
push
cli
add
rcll
jp
cmpsb
push
mov
sbb
mov
popa
mov
lret
mov
fcoms
bound
mov
stc
cmpsl
sbb
loope
inc
xchg
xchg
pushf
dec
loop
mov
pop
loope
push
out
mov
popf
scas
pop
std
fsubrl
movsl
ss
adc
push
mov
xchg
stc
rcrl
rcl
mov
cmpsl
daa
call
and
push
cmp
push
scas
add
xor
cwtl
push
mov
xchg
sub
mov
pop
in
addl
std
mov
pop
rcll
mov
dec
inc
test
outsb
push
sahf
mov
cltd
aam
dec
out
fstpl
mov
sub
outsl
mov
stos
nop
jle
aam
movsb
std
in
pop
add
jb
and
leave
inc
and
dec
movsl
adc
std
pop
xchg
adc
jge
dec
enter
mov
outsl
jle
ret
mov
push
or
xchg
dec
cmp
xchg
fwait
or
mov
cmp
pop
aaa
xchg
mov
xchg
rclb
jbe
sahf
daa
in
jno
and
rclb
push
mov
jb
sub
cmp
ret
fstpl
cltd
or
cmpsl
or
fdivrl
mov
sub
cs
iret
popf
subb
mov
fiadds
push
test
testb
dec
js
push
inc
orl
jno
mov
adc
xchg
adc
aad
push
ret
mov
cmp
pop
jecxz
jmp
scas
shrb
mov
stos
int
cli
ds
xor
mov
jbe
aaa
inc
popf
or
mov
mov
lods
fidivs
push
mov
int3
out
inc
insb
cmc
sbb
rcll
addb
cltd
leave
imul
es
in
leave
sub
in
mov
cli
mov
sbb
sbb
hlt
repz
push
lahf
loope
roll
mov
movsb
inc
sbb
imul
xchg
dec
jne
xchg
jne
mov
inc
outsb
pop
fwait
jae
add
enter
clc
call
add
aaa
mov
sarl
sub
cmpsl
out
lret
test
and
sbb
scas
push
out
loope
lods
mov
cmp
fwait
xchg
lcall
cltd
xor
aaa
dec
stc
lcall
insb
loopne
and
mov
rcr
cmp
icebp
adc
sbb
pop
test
jnp
jnp
adc
je
mov
pop
pop
adc
ds
adc
iret
rcll
popa
mov
sub
lds
jb
jb
jge
push
jmp
mov
sub
incb
movsl
xor
lret
mov
pop
jge
or
xchg
xchg
stos
jg
in
std
pop
movsb
mov
icebp
popf
incl
push
cmp
mov
dec
sub
sti
shlb
jmp
fwait
notl
adc
popf
jnp
mov
mov
cmc
jo
push
jbe
pop
in
xchg
ja
push
push
scas
or
cs
es
push
mov
lret
pop
in
das
mov
jbe
test
std
pop
sarl
addl
test
mov
and
jecxz
out
add
sub
cmp
mov
sub
int
les
mov
jbe
or
mov
ds
mov
inc
dec
jae
mov
pop
lds
xor
sahf
adc
loopne
lahf
and
jmp
sub
in
cwtl
pop
js
inc
adc
ds
test
lock
rolb
and
les
or
cmp
addr16
xor
sbb
repz
sub
adc
add
jnp
push
pop
cmpb
push
inc
cmp
push
pop
sti
in
sub
daa
cmp
mov
cmp
or
inc
cmpsl
gs
pushf
jmp
sahf
sub
iret
lahf
push
mov
dec
scas
cmp
je
cwtl
aad
cs
mov
insl
insb
fsubrs
adc
jmp
ret
shll
cmp
lahf
movsl
andl
sbb
leave
lock
add
cltd
sub
int3
jl
inc
ja
add
int
and
dec
xorw
xchg
imul
mov
sti
sub
sbb
ror
jo
sbb
fildll
repnz
dec
shrl
push
iret
pop
inc
pop
push
enter
shl
and
scas
lds
in
pop
or
cmp
mov
out
add
cltd
cmp
mov
imul
cmc
lds
orl
jmp
fs
iret
adc
test
jecxz
shrb
popf
pushf
mov
xchg
mov
lods
ja
cmp
imul
outsb
mov
fwait
inc
push
std
mov
sub
cmp
les
mov
mov
sahf
data16
stc
fistps
xchg
out
cmp
sar
mov
push
mov
or
inc
cmp
stos
mov
shrb
push
stos
out
jp
sub
mov
pop
imul
sub
pop
xor
push
dec
stos
and
jmp
pushf
mov
ds
out
inc
je
mov
mov
fcom
push
mov
es
and
das
rclb
mov
xchg
sub
test
repnz
push
fucomp
aam
incb
fisttps
cwtl
pop
xor
sub
xchg
pop
call
fmuls
pushf
inc
insl
sub
movsl
rcrb
sub
aas
dec
nop
push
and
out
rorl
popf
mov
mov
pop
mov
popf
sahf
push
mov
mov
xor
sbb
ret
dec
in
xchg
xchg
cmp
mov
inc
adc
push
mov
push
leave
xchg
dec
sbb
mov
pushf
add
les
or
pop
jl
call
lods
out
cli
xchg
mov
fcoms
push
inc
repz
ljmp
test
fnsave
arpl
in
cmpsl
ss
push
xor
mov
iret
fdivrl
pop
or
dec
mov
jns
clc
and
inc
fsubr
jne
adcl
add
pop
movsl
insl
sahf
iret
or
std
lock
das
arpl
fs
sbb
or
int3
adc
sub
dec
pop
arpl
xchg
mov
nop
arpl
xchg
push
in
add
push
rcrb
nop
mov
addl
outsl
fcomps
ljmp
mov
xchg
adc
add
incb
add
mov
and
push
fcmovnb
jns
mov
or
outsl
and
fbstp
inc
mov
jno
loopne
imul
xchg
enter
roll
and
jl
push
cmp
rolb
sub
and
xchg
enter
loop
xor
in
test
jbe
push
daa
push
clc
loopne
sbb
popf
add
inc
shll
sbb
pop
sarb
popa
jns
enter
mov
scas
sub
or
mov
das
fnsave
pop
fmull
int3
push
mov
dec
jle
or
cmp
pop
sbb
mov
outsl
adc
cmpsl
shlb
ds
and
mov
iret
cltd
inc
cwtl
xor
mov
lret
and
icebp
mov
cs
xchg
stc
cmpb
adc
mov
divb
icebp
in
ljmp
mov
jbe
sub
into
jb
fisttpl
add
mov
add
inc
sub
iret
add
cmp
subl
dec
mov
loopne
in
or
jo
scas
pop
dec
adcb
fdivs
jmp
loop
mov
xchg
repnz
xor
hlt
push
mov
cmp
pop
stos
jo
adc
loope
imulb
push
mov
jno
sarb
adc
loop
xor
xchg
das
aas
lret
mov
sub
insl
push
and
mov
inc
cli
lahf
sbb
xchg
test
imulb
in
inc
fs
mov
hlt
hlt
ret
ljmp
clc
xor
mov
sbb
test
adc
ret
dec
cmp
lret
mov
aam
lods
call
test
adc
adc
sbb
xor
call
fwait
and
daa
fwait
int
loop
push
adc
dec
lret
sbb
popf
addr16
inc
adcl
das
insb
xlat
loop
dec
ss
out
pop
push
add
mov
mov
add
and
pop
dec
mov
fidivl
daa
dec
aad
icebp
xor
pop
cli
lea
pop
cmp
daa
and
pop
or
push
int3
sarl
out
rol
fldcw
adc
or
stos
xor
add
xor
dec
adc
and
and
inc
add
dec
mov
lods
or
ret
test
cmc
roll
pusha
mov
arpl
aam
cld
mov
scas
or
jb
inc
pop
sbb
adc
icebp
and
add
icebp
fistpl
inc
xchg
cmp
mov
mov
sar
sbb
sub
add
mov
ret
and
jge
jb
mov
loopne
sub
add
hlt
sbb
push
xchg
fnstcw
lea
push
mov
adcb
mov
and
sbbl
lds
pop
daa
nop
sti
mov
jmp
cwtl
cmpsb
cwtl
loopne
out
cmpsb
imul
fisttpl
sbb
out
inc
daa
pop
mov
cmpsb
pop
js
out
jb
cmc
inc
and
push
aas
insb
mov
adc
pop
inc
cmp
imul
dec
cmp
out
and
rcll
mov
bound
mov
push
dec
aas
loop
scas
lods
sbb
addr16
fldl
int
cs
mov
push
jecxz
dec
and
dec
call
ficomps
cltd
call
adc
iret
xchg
cmpsl
or
or
int
popa
sub
testb
lods
cwtl
xor
and
icebp
sbb
lret
push
or
adc
jl
mov
push
lock
mov
mov
rorb
mov
dec
std
push
adc
in
cmp
push
andl
jp
push
pop
mov
jmp
or
jmp
jp
xor
outsl
xor
adc
mov
scas
fucomi
sbb
xorl
js
fdivrp
mov
mov
jbe
dec
mov
pop
mov
adc
insb
cld
out
push
idiv
mov
xor
jo
fsubrl
inc
mov
sarb
inc
in
or
mov
xchg
dec
adc
imul
mov
dec
xor
xor
imul
negb
aad
ja
sbb
fiaddl
jmp
insl
pop
sub
cmp
push
add
dec
aas
xchg
sti
push
and
lock
push
mulb
and
aam
aam
mov
fildl
test
loopne
xchg
addl
movl
and
sbb
jns
add
push
and
lock
enter
xchg
lods
fisubs
push
cld
and
add
xor
or
cmpsl
out
das
mov
adc
cwtl
mov
mov
jae
adc
lods
das
mov
aad
loop
or
push
and
and
mov
or
jno
push
push
arpl
out
adc
xchg
or
pop
pop
pop
jnp
pop
jae
out
lods
mov
mov
popa
pop
inc
jp
outsl
push
dec
sub
sub
mov
loopne
js
test
xchg
idivl
sbb
xchg
and
adc
inc
jno
xchg
mov
dec
mov
andb
stos
je
ffreep
aam
pop
stc
pcmpgtw
popf
cmp
mov
xchg
frstor
sub
imul
lret
imul
push
cmp
mov
imul
mov
jns
fadds
push
sarb
xchg
pop
dec
mov
sbb
mov
shrl
test
adc
data16
std
xchg
data16
sbb
out
add
stc
stc
dec
ss
lret
sahf
add
mov
jp
into
div
imul
subb
mov
dec
mov
add
dec
dec
push
in
mov
jno
rcrb
jge,pn
xlat
xor
adc
jmp
dec
pop
pop
xchg
call
les
test
out
jae
push
lods
jecxz
push
mov
sub
int3
ljmp
lods
sbb
push
in
or
cmpsl
out
dec
mov
subl
inc
mov
call
adc
in
lea
repnz
int3
xchg
add
ret
div
inc
pop
mov
mov
hlt
lods
mov
test
ss
xchg
pop
popf
orb
bswap
in
cmp
push
dec
push
leave
xor
jns
or
mov
xchg
fcom
les
sbb
int3
and
cmpsb
std
into
test
sbb
cmp
movsb
sub
mov
loope
mov
push
cwtd
push
imul
inc
shrl
xlat
addr16
daa
mov
push
outsl
adc
lods
imul
movsl
sbb
push
int3
adc
push
and
fadds
inc
push
insl
daa
scas
aas
add
cs
jmp
cld
scas
mov
cmpl
lea
data16
pop
cmp
fistl
push
pop
sbb
fdivrs
lret
outsl
in
mov
cli
add
sbb
mov
sub
pop
mov
stos
mov
fdivrl
shrb
adc
lock
outsl
jge
bound
and
outsb
data16
lods
xchg
mov
inc
aas
mov
es
sbb
mov
push
pop
leave
add
push
hlt
js
sub
dec
mov
js
cltd
ret
push
sbb
dec
xor
loopne
aam
xor
jbe
mov
std
add
rolb
testl
les
fildll
and
add
sub
inc
mov
jmp
sub
adc
add
xchg
add
shll
out
mov
movsb
push
mov
enter
jp
cmp
sbb
dec
xchg
or
inc
dec
cwtl
mov
pop
dec
movsl
xlat
xor
push
xor
push
cwtl
and
orb
into
jb
popa
jl
popf
mov
xor
push
jb
xchg
pop
pusha
mov
sub
aad
out
lret
jl
icebp
pusha
inc
ret
jge
add
push
or
lds
pushf
pop
mov
aam
les
sahf
rcll
inc
gs
pop
ret
adc
mov
cmp
push
cmp
inc
jne
mov
push
test
add
push
xchg
adcl
adc
and
sbb
inc
and
xor
mov
jg
int
in
stos
sti
stos
fdivp
test
inc
push
movsb
cld
mov
ss
insl
dec
pop
lods
out
xchg
sti
loopne
es
gs
push
mov
repz
lds
xchg
mov
ss
lret
ss
and
gs
cmp
fdivrl
cmc
cmp
das
mov
pop
pop
mov
iret
jns
shlb
dec
xchg
cmp
fildll
mov
divb
out
mov
test
ja
mov
push
fnstenv
sub
dec
mov
out
push
mov
fisubrs
bound
repz
xchg
push
xor
push
mov
or
jo
aad
dec
cmp
rcl
out
mov
out
mov
cmp
in
inc
cmp
adc
push
gs
ss
sub
rcrb
fwait
inc
pop
adc
mov
enter
dec
fcmovnb
and
and
ret
rolb
pop
mov
popa
and
mov
aad
in
sub
dec
and
leave
test
lods
mov
sarl
insb
test
fcomps
add
jmp
mov
outsl
testb
inc
cmp
sti
movsl
push
xor
aad
dec
jp
pop
pushf
jnp
xor
insb
or
clc
sbb
xchg
sub
inc
inc
les
dec
inc
xor
nop
stc
add
adc
in
or
pop
and
shrb
xchg
jo
dec
nop
mov
imul
test
repnz
pop
dec
es
ja
bound
xor
cmpb
or
push
dec
lcall
aam
insb
test
fbstp
xlat
fildl
cmp
sub
shll
mov
fstpl
mov
xchg
dec
push
aam
loopne
daa
cmp
es
ficompl
in
data16
or
pop
shlb
push
dec
outsb
cld
inc
ljmp
push
xchg
xchg
pop
rep
hlt
insb
jle
mov
ror
cs
in
jnp
dec
shl
hlt
mov
addr16
mov
dec
xlat
mov
lods
sub
push
adcl
test
xor
sbb
mov
testb
jp
inc
aad
nop
pop
pop
stc
xlat
mov
cmpsl
or
decb
lods
mov
xchg
push
add
push
test
xchg
cmp
mov
pop
movsl
sbb
xor
lea
scas
cld
rcrl
ret
mov
das
subl
lock
pop
lods
stos
fwait
or
pop
jle
xchg
xlat
and
into
cmpsb
std
pop
incb
dec
xor
icebp
rcll
shl
sbb
cmp
xorb
fildl
mov
aam
lretw
pop
push
sbb
std
mov
les
shll
adc
adc
iret
and
out
jnp
rol
add
push
push
adc
addr16
ret
mov
inc
dec
bound
in
ss
mov
nop
aaa
inc
sbb
push
sub
jno
test
adc
add
movsl
popf
int3
or
pushf
mov
outsb
sub
sub
enter
dec
adc
xchg
mov
loope
mov
mov
pop
dec
cmp
adc
and
sbb
lods
push
stos
push
rclb
adc
cwtl
inc
imul
pop
push
and
mov
mov
decb
push
sub
pop
fsubl
cmpsl
add
testb
or
ja
lods
and
push
enter
clc
add
pushf
fbld
mov
sahf
inc
pop
or
sti
out
hlt
out
lahf
rclb
jmp
lea
pusha
shl
in
cmp
arpl
ret
in
jle
and
in
fstpl
lahf
movsl
mov
mov
mov
pushf
incl
pop
es
js
xchg
lret
mov
jae
push
mov
les
add
inc
inc
ljmp
mov
testl
int3
pop
sub
fsubr
mov
mov
aad
clc
pop
jb
or
pop
cmpsb
add
dec
sub
ja
les
test
pop
call
xor
fisubs
movsb
cmp
jle
or
inc
mov
push
pusha
je
movsb
pop
or
add
add
sub
pop
int
mov
mov
cwtl
enter
xor
enter
mov
lods
mov
pop
jo
mov
mov
or
push
push
jo
fildll
test
inc
or
mov
mov
adc
fs
mov
xchg
aad
mov
pushl
mov
and
out
and
imul
inc
xor
fs
dec
shll
mov
xchg
std
outsb
mov
mov
and
lea
test
sbb
arpl
stos
mov
or
lock
dec
dec
xor
ret
int3
xchg
fstpt
mov
pop
mov
push
loopne
and
repnz
jb
sub
in
lds
pop
push
cltd
loope
test
repz
and
sbb
xchg
mov
jmp
out
add
fsubr
jg
lret
and
jae
int
ficoms
icebp
scas
pop
dec
pop
mov
ror
mov
cltd
notb
jo
xchg
mov
xorl
dec
pop
cmp
in
fistpll
xor
movsl
adc
std
and
push
pop
repnz
inc
sbb
sbb
pop
push
fcomip
daa
fbld
sbb
xchg
test
jmp
addr16
mov
mov
jno
cwtl
add
xchg
and
add
sub
dec
pushf
aas
or
hlt
mov
push
push
and
adc
repnz
sbb
push
in
mov
mov
pop
roll
shl
loope
xchg
cmp
mov
push
sbb
daa
and
movsl
fxch
jne
mov
mov
repz
xor
sub
jle
pop
test
xchg
fldt
adcb
xchg
test
jno
pop
pushf
lret
push
iret
mov
sub
scas
out
fucomip
and
xor
test
xchg
outsl
jecxz
out
scas
xchg
sub
rcrb
imul
mov
nop
bound
adc
sbb
fistl
xor
popa
xchg
jg
mov
sbb
call
xor
pop
repnz
lea
sahf
push
cmp
scas
push
les
mov
mov
ljmp
jne
cmp
pop
and
mov
mov
and
add
out
ss
mov
push
pop
out
shr
and
hlt
aam
xor
scas
in
jp
in
or
fldcw
mov
adc
xor
mov
cmp
cmp
and
in
pop
mov
shrl
fdivrp
add
jo
sbb
pop
xchg
aam
and
scas
fdivs
pop
lret
mov
mov
cmp
dec
fldpi
xchg
lods
sub
sbb
pushf
icebp
roll
sub
out
sti
call
jg
mov
hlt
pop
mov
xor
cli
or
sub
stos
rorl
xchg
dec
push
push
push
fistl
fistpll
cwtl
ljmp
pop
or
add
fsubl
ret
aaa
add
cmpl
push
mov
add
lods
push
int
insb
inc
sbb
out
insl
pop
add
je
cmpl
fidivrl
xchg
push
add
pop
mov
cmp
loop
sahf
cmpsl
es
push
test
ret
mov
movsl
stos
mov
jg
test
subl
cwtl
mov
mov
cmp
movsl
mov
push
push
in
cmp
lds
int3
fwait
pop
mov
cmp
into
outsl
push
test
jp
sbb
mov
fidivrl
cltd
popf
sbb
insb
lcall
int3
test
insb
lock
push
fidivrs
pushf
push
xchg
bound
out
cmp
jo
out
add
adc
push
add
imul
int3
cmpsb
mov
xchg
inc
push
inc
mov
pusha
cmp
cwtl
orb
addl
lcall
sarb
mov
subl
sbbl
jle
sti
jno
call
inc
xorl
mov
mov
mov
dec
and
cld
mov
repz
sbb
das
cmc
jns
jp
jne
cmp
xor
out
sarb
lcall
inc
pushf
add
ret
jp
jo
xor
fidivrs
arpl
into
add
mov
ret
ds
adcl
mov
add
sub
repz
dec
sub
testl
in
sbb
lahf
sbb
enter
not
xor
sbb
push
mov
sbb
mov
into
and
das
sub
jecxz
mov
sbb
arpl
setae
jae
icebp
inc
sbb
test
loope
or
dec
ljmp
repnz
aam
pushaw
or
cmp
popf
pushf
sub
les
sub
sub
mov
jae
and
push
dec
imul
mov
push
sub
pop
jae
in
lcall
aam
xchg
fstp
ret
inc
repz
ja
adc
out
leave
cmp
adc
jne
bswap
mov
je
and
in
adc
addr16
movsb
mov
sbb
pop
aad
hlt
pop
dec
pop
adc
add
leave
fdivrs
and
mov
lods
stos
or
mov
sbb
sbb
ret
sarl
inc
test
loopne
testl
decb
pushf
negl
sbb
test
repz
negl
ljmp
loope
mov
mov
pop
movsl
jne
and
add
decb
mov
cmp
xchg
bound
inc
sbb
mov
cmc
mov
lea
cmp
jno
xlat
cwtl
test
jae
mov
and
test
jl
xor
adc
sbb
sbb
mov
and
iret
sbb
xchg
das
mov
jge
fiadds
pop
loope
mov
mov
jg
adc
xor
gs
add
insl
test
sub
mov
sbb
xor
fxam
dec
adc
cmp
test
test
outsl
dec
add
ret
sahf
lahf
popf
jge
pop
imul
sbb
loop
and
sarl
fiadds
sub
es
imul
and
push
dec
sub
xchg
imul
xchg
ja,pn
leave
add
incl
loope
hlt
mov
sahf
lcall
adc
dec
test
stos
push
cmc
adc
cmpsl
sub
adcl
jg
pop
push
lahf
mov
enter
in
cmp
rcl
inc
js
loopne
dec
mov
iret
or
or
movsl
aam
je
push
cld
pop
fwait
sbb
movsl
cmp
push
jp
inc
or
sbb
loopne
call
ror
cmc
mov
fwait
cs
out
lret
add
cmpb
or
adc
in
cmp
test
xchg
push
sbb
cwtl
add
loopne
int3
insl
in
cli
dec
in
fcmovnb
daa
push
es
cmp
push
insb
push
mov
jo
cmc
mov
out
repnz
add
cwtl
sbb
test
out
jae
scas
and
mov
mov
out
fwait
adcb
cmc
dec
inc
es
test
scas
icebp
xor
push
or
adc
xor
fisubl
jmp
stos
push
lcall
mov
adc
repz
imul
jp
dec
sub
aaa
jmp
shl
pop
hlt
xorl
popa
xchg
movsb
inc
lock
sub
rorb
cwtl
lods
lock
add
frstor
xor
adc
mov
push
xchg
nop
jns
stc
sbb
mov
push
mov
popa
pop
xchg
loope
jo
jnp
fs
jecxz
mov
inc
enter
cmp
aad
sahf
ljmp
js
mov
ffree
mov
inc
dec
scas
push
or
out
xor
push
into
aad
dec
sarl
add
xchg
xchg
pop
insb
lods
idivl
fistps
popa
int
divl
xchg
sub
ljmp
pop
dec
sahf
sub
sbb
fists
hlt
repz
std
mov
ret
es
fldln2
mov
jae
jno
xor
xor
stc
call
push
out
loop
xchg
or
fistps
stc
mov
sbb
stos
and
and
aam
ror
jne
hlt
cltd
mov
ret
mov
or
cmpl
repz
push
ret
stos
adc
dec
gs
xor
sub
insl
aaa
cld
pop
xchg
ja
in
and
aam
dec
enter
and
movsb
dec
loopne
mov
pop
fimuls
popf
adc
sahf
add
jne
lock
stos
xchg
jl
sbb
mov
out
add
daa
imul
pop
mov
cmpsl
pop
jb
xchg
xor
cmpsl
dec
mov
inc
mov
inc
pop
mull
inc
call
ss
mov
and
data16
mov
pop
jne
push
in
mov
inc
out
sbb
incl
test
adc
xor
cmpsb
mov
ja
and
inc
push
js
fwait
push
mov
inc
mov
push
push
sahf
mov
dec
and
jl
aas
mov
cmp
scas
mov
cmp
lds
jnp
insl
aaa
les
pop
mov
test
stc
pop
push
test
lea
xor
adc
scas
add
inc
cmp
xor
mov
imul
and
cltd
mov
out
and
fstpl
sub
daa
inc
xchg
or
into
in
or
mov
dec
mov
stos
mov
lock
daa
jg
mov
mov
das
jge
push
jne
mov
pop
pop
xchg
inc
and
pop
out
pop
fwait
mov
xchg
sti
mov
sahf
scas
orb
dec
adc
fcmove
push
rcl
jle
pop
lahf
push
xor
test
mov
movsl
adc
xchg
xor
pop
je
and
insl
sarl
sub
cmp
xor
jle
sbb
mov
std
xor
test
orl
xor
lods
pusha
arpl
fnsave
sub
mov
pop
cmp
lea
jo
sbb
lret
pop
repnz
or
add
dec
dec
xchg
mov
adc
or
push
xchg
pop
fcoml
scas
push
stos
mov
inc
stc
pop
bound
xchg
dec
push
popa
cmp
sub
xchg
sub
xchg
dec
inc
jb
cmp
out
test
test
push
pop
hlt
mov
adc
pushf
je
in
cli
jmp
daa
mov
cmpsl
jp
scas
sbb
inc
bnd
pusha
push
mov
lcall
or
lahf
mov
scas
dec
add
aad
sbb
cmp
test
sub
xor
jo
outsl
inc
cwtl
jecxz
pusha
out
jne
leave
xchg
ficoms
sub
stos
je
pop
cmp
popa
dec
test
je
sub
divb
mov
mov
fldl2e
mov
lahf
mov
dec
inc
add
mov
xchg
mov
paddsb
jo
pop
cmp
sbb
jge
movsl
jmp
pop
push
iret
enter
ret
out
xor
pop
adc
jb
jbe
dec
cmpsb
push
or
test
xchg
mov
adc
nop
int3
sub
cmp
aam
movsb
in
inc
lods
jp
ljmp
mov
das
icebp
sbb
mov
pop
mov
jl
sbb
pop
pop
jbe
cmpl
nop
push
sbb
icebp
dec
iret
lcall
lret
bound
adc
arpl
repnz
or
icebp
mov
xchg
ret
das
pop
jns
test
ficomps
andb
mov
mov
cwtl
gs
sub
push
xlat
nop
adc
pop
mov
ret
mov
cmp
fmul
movb
cs
mov
adc
in
push
lods
fnstcw
test
hlt
faddl
dec
sbb
push
mov
out
addb
in
adc
and
lahf
sbb
pop
hlt
stc
mov
mov
lods
outsl
jno
lea
mov
push
sti
mov
mov
or
jae
or
pop
sbb
or
cmpsl
imul
sahf
push
push
gs
lret
iret
repnz
in
jnp
fwait
push
xchg
fcoml
sub
rcll
pop
mov
sbb
idivl
cmpsl
bound
jne
fucomi
adc
push
xchg
inc
lods
pop
mov
push
add
or
into
mov
lea
imul
popa
mov
sbb
mov
ret
aas
xor
enter
inc
in
test
movl
daa
mov
ja
sarb
pop
ret
sbb
fs
insb
inc
sbb
scas
pop
sbb
mov
mov
bound
lock
imul
mov
dec
mov
daa
arpl
xor
mov
xchg
movsl
sbb
push
mov
xor
mov
xor
stos
mov
aam
pop
sahf
or
xchg
add
sub
mov
and
roll
pop
repnz
pop
cs
popf
mov
push
rorl
mov
adc
mov
mov
push
faddp
sahf
fs
push
call
shrl
insl
jge
dec
adc
cld
push
enter
pop
push
and
mov
into
adc
push
mov
out
inc
mov
jo
sbb
call
inc
mov
jl
adc
repz
ret
pop
psrlq
sub
sbb
fdivrl
push
pop
mov
push
cwtl
enter
es
loopne
testl
dec
shlb
adc
mov
data16
testl
addb
mov
push
cmp
ja
out
in
scas
and
xor
sub
jl
pusha
stos
jmp
pop
xchg
outsl
cwtl
jle
add
dec
out
adc
adc
push
mov
xor
sti
jno
pop
xchg
aam
shr
into
cmp
imul
lahf
es
push
dec
pop
dec
in
ret
sub
add
ffreep
ja
je
pop
or
stc
bound
repz
and
jbe
dec
out
pop
dec
lea
or
and
scas
std
mov
in
and
mov
rol
test
dec
test
fsubrs
adc
in
js
mov
sbb
enter
xchg
addr16
rcrl
and
add
push
imul
pop
add
scas
clc
jo
hlt
lahf
push
fucomp
pushf
dec
jmp
mov
jg
fimull
into
cs
jge
js
add
sbb
aam
outsb
xchg
xor
loop
sbbl
dec
sbb
xchg
dec
sub
test
test
inc
fcmovbe
adc
and
sub
push
or
icebp
add
in
ja
pop
or
sub
pop
and
pop
cmpsl
lock
movsl
iret
cmp
xchg
in
fisttpll
cli
loope
xor
cld
movsl
push
lahf
mov
xchg
andl
sbb
push
xor
and
cmp
sbb
xchg
sti
fisubrl
rolb
and
jbe
fsubrp
mov
aas
or
sbb
dec
insb
push
les
lods
cmp
pop
cmc
jae
loopne
addl
jl
dec
jl
cmp
pop
pop
rorb
daa
sahf
push
sbb
adcl
cwtl
inc
pop
addr16
mov
cmp
sahf
imulb
fs
insl
aam
das
fucomp
pop
inc
leave
mov
es
stos
gs
inc
dec
and
les
scas
mov
loop
push
sub
inc
jne
std
arpl
jecxz
mov
adc
sbb
push
sub
into
mov
ret
aam
cmp
in
adc
imul
adc
xchg
fwait
sub
iret
or
push
pop
or
sbb
xlat
nop
add
and
pop
push
xor
scas
cmp
mov
cld
movb
push
shll
jmp
sti
les
mov
fstpl
cmp
int
cltd
dec
test
xor
jle
cmp
sub
fiaddl
pusha
xor
mov
out
push
outsb
popf
fcomps
add
xlat
dec
push
mov
mov
pop
iret
xchg
add
and
push
xor
mov
sar
sbb
adcl
mov
repnz
shr
jecxz
jp
and
test
leave
call
add
out
outsl
and
mov
ret
pop
fucomip
mov
jmp
test
scas
cmp
mov
js
jge
imul
cmpb
jge
ror
mov
in
adc
jb
lock
cli
les
lock
or
jmp
fsubrs
cmpsl
insb
rcrl
mov
sub
orl
sub
dec
addr16
in
sbb
lret
fdivr
out
cmp
shr
fsub
cwtl
imul
dec
test
jbe
jecxz
adc
mulb
mov
sbb
xor
aaa
fs
das
addr16
or
aaa
add
insl
xor
push
jnp
sarb
pop
ja
jb
push
enter
jg
sbb
punpcklwd
fsubrs
adc
sbb
fbld
sub
push
xchg
or
imul
and
inc
xor
cmp
adc
int
pop
xorps
sub
cltd
pop
pop
xor
inc
popa
mov
popf
inc
movsb
mov
sub
jl
loopne
fsubs
xchg
sahf
mov
mov
cmp
adc
push
mov
iret
push
add
mov
cs
test
std
jecxz
cwtl
stos
repnz
imul
scas
negb
out
jl
mov
xorps
pop
sti
jns
adc
cmpl
cs
arpl
mov
xchg
mov
fcompl
sub
mov
sub
data16
inc
shlb
pop
rcrb
or
in
out
pop
enter
jo
add
jle
and
stc
dec
mov
imul
and
ds
push
pop
insb
sub
cmp
jg
jg
jmp
lahf
ss
push
add
dec
xchg
pop
jns
es
mov
jmp
ljmp
push
cmp
push
or
xchg
lods
adc
repnz
fmul
add
imul
idivl
sub
xor
adc
cld
data16
pop
pop
dec
adc
sbb
mov
ds
inc
mov
mov
cwtl
fistpll
bound
xchg
pop
ret
mov
insb
jne
cmp
loopne
xchg
cmp
xchg
push
jae
push
mov
insl
das
xor
popa
loopne
xchg
and
adc
cld
cmp
inc
lea
jns
xor
pop
gs
or
lock
dec
sti
sahf
jmp
or
mov
and
les
in
cld
ljmp
jne
push
sbb
mov
lods
jo
jns
push
fs
jmp
mov
push
or
cli
mov
jecxz
fldt
outsl
inc
xchg
sub
loopne
push
dec
nop
lgs
in
or
nop
cmp
ljmp
mov
xchg
aaa
inc
lret
cmp
addr16
push
out
imul
pop
fwait
mov
xchg
das
adc
aad
cmp
icebp
xchg
aad
jae
and
sti
outsl
fldt
jno
mov
loope
pop
scas
test
mov
cmp
imull
test
ljmp
in
out
mov
int
imul
out
xor
test
rclb
xor
je
ret
xchg
mov
dec
xor
inc
das
sahf
fidivrs
mov
andb
movsb
and
jns
pop
sub
mov
mov
xchg
cmp
push
addb
andl
mov
pop
jmp
rorl
fisubl
or
cltd
add
xor
adcw
fwait
movsb
xor
fstpt
arpl
je
popa
movl
pushf
ret
loope
jmp
xchg
adc
add
jecxz
push
fidivl
dec
push
pop
xchg
sub
nop
dec
ja
mov
lahf
jp
insb
and
dec
or
mov
in
cmp
imul
pop
xchg
or
das
and
dec
or
xor
out
fs
scas
mov
pusha
and
push
push
in
inc
les
adc
out
sbb
xchg
dec
dec
jp
push
push
scas
xchg
into
cmp
pusha
dec
sub
stc
dec
jne
nop
cltd
xor
hlt
ja
xor
enter
jns
popa
inc
shl
add
sub
pop
inc
or
bound
cmpsl
mov
jge
and
dec
adc
sbb
loope
loope
push
and
push
mov
pusha
insb
cld
cmc
dec
adc
and
jp
inc
mov
ds
pop
inc
lods
xchg
inc
imul
sbb
inc
out
dec
mov
in
cmp
int3
repnz
and
sub
rorb
fmuls
jecxz
mov
in
xchg
lret
adc
arpl
loop
arpl
push
jbe
xor
out
divb
imul
push
or
sub
lret
loope
in
jb
mov
lea
insb
adc
pop
lods
sbb
or
test
pusha
clc
lcall
inc
aaa
mull
inc
es
sbb
add
je
stos
es
cmp
popa
lret
jle
jno
int
cld
scas
xchg
inc
xchg
xor
mov
and
cltd
xchg
dec
ret
mov
dec
pushf
xchg
sbb
push
rol
xor
in
or
cmpsb
repz
jp
mov
lods
mov
out
inc
cwtl
leave
scas
cmp
test
std
pop
cmpsb
pop
jmp
scas
push
lcall
mov
testl
pop
movsl
movsb
add
inc
pop
push
jg
push
mov
and
ljmp
xor
mov
jns
mov
push
or
mov
jg
and
in
scas
test
scas
sub
pop
dec
faddp
mov
jl
call
xchg
ret
pop
sti
roll
rcll
mov
in
jne
sar
add
mov
inc
or
ljmp
pop
inc
and
mov
xchg
mov
adc
pop
gs
hlt
ds
mov
cmc
sub
out
adc
pop
ss
push
sti
call
fnstenv
repz
lods
cmp
leave
decl
cmp
into
adc
pusha
inc
pop
cmp
leave
dec
and
loopne
and
xor
mov
mov
ljmpw
mov
sub
sbb
pop
add
mov
lods
in
loop
xor
pop
daa
fcoms
xchg
sbb
std
mov
pop
frstor
test
cmp
dec
icebp
imul
cmp
in
or
mov
jl
lret
enter
lret
js
mov
out
xor
xlat
push
leave
push
ja
dec
jg
cmp
pop
mov
out
insb
notb
pop
out
rorl
sbb
mov
push
sbb
loop
mov
mov
push
cwtl
pop
mov
add
sbb
add
aad
jl,pn
sahf
outsb
leave
enter
push
stos
push
mov
pusha
lret
sub
out
sti
sbb
push
mov
cmp
pop
out
shr
add
pop
lods
add
enter
daa
pop
cmp
in
push
insb
das
mov
call
fistl
cmp
lret
or
out
xchg
jnp
and
xchg
lcall
scas
in
aaa
or
add
jb
dec
xchg
cmp
scas
je
xlat
pop
adc
pop
sbb
and
cmc
cmp
add
adc
lods
and
cmpsl
es
out
dec
pop
icebp
in
inc
rolb
jle
icebp
aas
dec
cld
cmpsl
jns
call
jmp
sbb
cltd
and
dec
pop
push
cli
dec
pop
lret
inc
mov
jno
jae
fs
pop
mov
mov
inc
fcmovne
cmpsl
mov
mov
push
lret
fisubs
sbb
push
mov
dec
sub
cmp
aaa
or
mov
fcoms
lahf
imull
es
mov
js
leave
sbb
add
mov
sub
pop
insb
mov
les
daa
and
ljmp
imul
cmp
jg
add
dec
pop
sbb
out
movsl
aad
bound
inc
std
inc
int
popa
dec
jecxz
and
out
mov
scas
xor
pop
cmp
jnp
adc
int
xchg
push
hlt
test
test
lret
jno
xchg
aas
inc
pop
cmp
jo
jbe
and
into
sbb
pop
xlat
and
jne
xchg
sbb
outsl
mov
subb
dec
mov
mov
mov
fcomps
in
lahf
jae
les
mov
pop
lret
dec
push
test
cmc
fiadds
clc
bound
adc
arpl
or
cmp
inc
ja,pn
pop
ds
in
sub
int3
pop
mov
cmpl
adc
xchg
js
shll
push
jo
nop
in
cmpsb
xchg
mov
out
and
scas
xor
adc
mov
rcl
pop
mov
mov
push
lea
and
jmp
int
cmc
add
mov
add
lock
hlt
nop
stos
cmpsb
push
dec
xchg
fidivl
mov
cmp
pop
repnz
testb
shlb
je
into
sbb
ja
lock
xchg
jbe
repnz
in
popa
xor
scas
cmc
icebp
adc
push
repz
pop
fwait
shrb
xor
call
sbbb
or
clc
jno
fbstp
and
daa
mov
cmpsl
popa
lock
cmc
mov
jo
pop
mov
pop
or
mov
ja
pop
cli
ret
add
mov
cmp
jns
dec
jle
sbb
pop
xchg
xor
xchg
sahf
cmp
movsl
test
push
jle
out
clc
sbb
push
sbb
add
fsubl
addl
inc
cmp
push
int
jnp
jle
jno
inc
mov
mov
inc
enter
adc
popf
push
ljmp
dec
mov
mov
push
sahf
ficoml
fsubrs
fstl
mov
rorl
stc
in
test
push
jno
es
lods
pop
movsb
imul
xchg
ret
ljmp
mov
cwtl
ja
loopne
imul
sarl
dec
sub
xor
stos
fdivl
ds
lods
push
and
mov
inc
sub
sbb
mov
rorl
jp
jecxz
pop
push
xor
xchg
and
jno
sbb
inc
xchg
add
ds
lods
pushf
or
jo
insb
fdivrl
call
stos
fldt
pop
lcall
test
int3
xchg
jg
mov
fadds
ja
mov
ja
xor
inc
mov
bound
inc
je
in
inc
push
ret
dec
xor
push
dec
daa
sbb
mov
aaa
xor
adc
shl
push
addr16
je
pop
or
mov
sbb
out
adc
inc
mov
lock
pop
and
pop
test
mov
fstl
adc
and
adc
ss
mov
inc
and
adc
sahf
cwtl
and
sub
fiaddl
jae
ret
in
inc
es
das
and
insl
push
xchg
mov
jle
rcll
enter
fcoml
lret
inc
out
jb
mov
mov
ds
enter
test
ret
fidivrl
cwtl
test
scas
and
sub
int3
ret
mov
cmp
add
imul
shll
pop
clc
inc
sbb
fiadds
scas
xor
popa
outsl
subb
in
ret
jmp
xor
cmc
xchg
mov
mov
dec
pop
scas
mov
ds
jnp
daa
adc
aam
jns
pop
lret
sbb
sarl
cmpsl
sbb
cmp
sbbl
loop
push
jp
in
mov
sub
mov
adc
and
xchg
mov
sub
xchg
stos
xor
ja
pop
repz
pop
push
push
adc
sub
sbb
xor
lock
lods
xor
shl
loopne
sub
push
gs
mov
dec
pushf
xchg
sub
in
fistpl
mov
mov
outsb
cli
pop
fs
add
pop
lret
push
add
mov
xor
jge
je
sbbb
cmp
cmpsb
mov
repnz
or
and
andl
repnz
ss
ja
sbb
into
cld
dec
dec
jmp
sbb
in
sub
test
mov
icebp
pop
pop
cmp
shrl
stos
inc
lahf
orl
cld
xchg
bound
mov
fwait
stos
jmp
or
mov
stos
subb
inc
xor
arpl
jp
pop
jae
loope
pop
rcrl
jns
mov
cmpb
in
pop
xor
dec
mov
rcrb
sar
inc
jecxz
adc
aas
test
adc
pop
add
into
jb
clc
jl
or
pop
scas
enter
dec
data16
cmc
dec
jmp
lret
sarb
mov
enter
loope
push
mov
sub
sahf
popfw
jno
xor
xchg
jmp
test
xchg
out
mov
imul
adc
push
insl
je
lods
adc
lcall
ljmp
inc
mov
in
js
mov
fmuls
cmpsb
aaa
xor
cmpsb
xchg
adc
mov
and
test
push
shll
mov
jne
pop
scas
pop
push
out
push
aaa
insb
adc
pop
mov
mov
call
dec
add
mov
adcl
ss
or
enter
cmp
dec
insl
mov
xor
movsl
fs
pmulhw
shl
xchg
cld
sbb
add
jge
jno
mov
sbb
adc
jne
xchg
cmp
mov
ja
in
clc
nop
into
mov
in
sahf
insl
sbb
xchg
hlt
mov
push
js
inc
popf
scas
leave
mov
push
stc
test
xor
pusha
inc
mov
pop
or
fcoms
and
adc
divl
jbe
pop
sbb
shll
push
jbe
test
xchg
mov
adc
ret
jne
jne
sbb
divb
mov
loope
adc
repnz
xchg
push
icebp
cli
ret
fcompl
leave
aas
mov
xor
dec
xor
and
xor
iret
pop
rolb
dec
jnp
sbb
mov
das
pop
cmp
and
push
cmp
push
xlat
test
inc
loope
jae
add
xor
adc
mov
inc
xchg
sbb
sti
pop
mov
cld
sar
es
ror
xlat
mov
out
mov
pop
xchg
movsb
pop
mov
pop
arpl
std
ss
loope
stos
jle
aad
mov
dec
push
or
dec
xchg
bound
and
jno
iret
dec
adc
cmpsl
lods
aaa
ljmp
inc
add
xlat
inc
jp
dec
mov
nopl
mov
cmpsl
cmp
and
or
addr16
xchg
xor
call
push
mov
movsb
dec
push
cmpsl
pushf
je
pop
imul
xor
mov
fs
nop
and
test
mov
cmp
jge
lahf
leave
sub
jmp
dec
xchg
mov
and
mov
mov
popf
mov
mov
dec
cmp
pop
adc
and
lret
mov
cmp
pop
sub
hlt
jbe
bound
cmpsb
out
fmuls
pop
lret
add
sub
inc
adc
and
jmp
push
imul
xchg
fstpl
xchg
add
imul
push
mov
jp
jne
je
aad
popf
add
jo
jmp
push
push
pushf
fisttps
jecxz
pop
cmp
ja
cmc
outsb
fsubrl
cmp
push
mov
xchg
mov
sbb
clc
dec
mov
jnp
pop
hlt
std
sub
mov
push
ret
cmc
mov
pop
xor
outsb
jl
scas
arpl
mov
icebp
xchg
imul
dec
push
push
je
mov
add
outsl
bound
in
aaa
test
inc
jl
mov
js
xchg
outsb
decl
xor
mov
mov
outsb
divl
orl
add
cmp
adcl
xchg
xorb
mov
mov
mov
dec
pop
imul
icebp
dec
mov
loope
imulb
lds
pop
and
in
addr16
xchg
call
push
xchg
arpl
cmpsl
loope
imul
pop
in
inc
sub
sub
or
mov
jne
pop
and
popa
dec
sbb
in
xchg
sbb
pop
aad
mov
jne
cmp
ret
cs
call
aad
mov
pop
jecxz
icebp
shll
pushf
push
insb
jbe
pop
aaa
xor
popf
and
outsb
and
frstor
repnz
fxam
pop
cmpsb
sbbl
pop
sbb
adc
mov
ret
dec
pop
pop
jb
rol
imul
inc
mov
inc
outsl
ljmp
insl
int
xor
jae
adc
enter
les
insl
icebp
xchg
test
xchg
das
imul
outsb
lods
jmp
cmp
mov
add
in
jne
xchg
testl
push
jle
push
addr16
mov
into
xchg
cmpsb
dec
push
ja
movsl
scas
lcall
out
push
addl
or
push
mov
or
cmp
fidivrl
and
xor
dec
cmovae
jne
insl
cwtl
aam
pop
dec
pop
inc
ror
or
jbe
lret
stos
mov
push
jge,pn
lods
mov
pop
push
add
cmp
and
andl
daa
mov
xlat
lods
push
cmp
sub
xchg
and
call
movsb
or
jge
stc
in
jno
jge
dec
add
mov
jb
or
dec
mov
jne
xchg
pushf
pop
bound
pop
cs
outsl
jle
push
and
mov
add
in
loope
in
xor
pop
bound
dec
jp
popf
wbinvd
xchg
xor
dec
fldenv
dec
imul
das
or
and
std
sub
dec
add
fcompl
rcll
dec
pop
and
pop
dec
dec
ficomps
adc
cli
mov
sbb
mov
shl
leave
ljmp
add
ds
filds
sub
js
int
push
xor
ljmp
push
jle
jae
in
enter
lock
popf
xor
sbb
jle
popa
pop
inc
sbb
lea
insl
rcrl
jne
stos
xor
adc
and
pop
out
cmp
inc
mov
movsb
add
jle
inc
lret
lea
dec
xchg
lret
loopne
jo
out
outsb
jae
push
notb
xchg
jp
movsb
sbb
ret
cmp
sub
adc
sbb
fidivrs
pop
mov
adc
addr16
dec
movsl
subl
test
pop
popw
jnp
adc
or
xchg
ljmp
jmp
das
dec
pushf
shr
xchg
rorl
in
dec
sub
jae
sbb
or
in
push
push
imul
out
xor
pusha
mov
hlt
loope
out
arpl
das
jnp
xor
push
jnp
adc
adc
xor
mov
and
mov
mov
add
ror
leave
movsl
xor
mov
in
xchg
xchg
pusha
mov
push
testl
mov
shll
push
add
xchg
pop
xchg
adc
repz
iret
test
pop
add
xchg
out
test
lret
mov
mov
push
js
jmp
imul
shll
outsb
mov
push
mov
shlb
out
add
pop
and
jp
jge
dec
sub
in
fdivr
mov
fdiv
inc
outsl
aad
mov
in
rorl
out
adc
std
out
stc
es
dec
imul
add
data16
ret
lds
cwtl
pop
xor
int
mov
xor
dec
mov
xor
into
movb
std
scas
loopne
les
mov
sub
ljmp
aad
popf
mov
xor
hlt
add
call
lods
lds
sti
xor
je
xchg
push
mov
lahf
subl
cmp
sbb
subb
dec
adc
dec
sar
cmpl
into
jle
mov
and
inc
je
mov
scas
scas
popf
loop
jmp
jns
xchg
lea
pop
fadd
ret
mov
sbb
bound
sbb
xchg
test
mov
jmp
arpl
fwait
push
xchg
and
jae
jmp
data16
sub
dec
lret
popf
sub
cs
mov
test
outsb
adc
fcoml
mov
and
adc
sbb
xchg
inc
adc
jo
scas
xor
ret
mov
cld
push
or
mov
ljmp
jmp
ljmp
in
test
jle
test
shl
rorb
and
or
inc
jecxz
push
jg
int3
nop
jne
mov
or
lahf
dec
test
push
out
popf
cmpsl
es
jle
stos
jns
aaa
notl
cmp
popf
dec
lcall
fisttpl
add
lcall
mov
jl
dec
dec
pop
gs
fnstsw
lcall
repz
mov
xor
jmp
in
inc
subb
sbb
xor
mov
mov
and
lods
mov
je
push
push
add
lock
add
ror
addr16
jb
fcomi
outsl
mov
cli
mov
fisubrs
adcl
mov
sti
xchg
jb
adc
xor
jmp
or
ret
repz
sub
cmp
cmpsb
mov
adc
enter
test
ror
sbb
sub
cmpsb
dec
adc
xchg
lea
jge
in
daa
pop
cltd
mov
in
test
test
cwtl
loopne
add
fnstsw
imul
test
inc
xchg
push
add
insb
shll
lods
sbbb
pop
cmpsb
mov
add
or
ljmp
fstpt
popf
push
cmp
ja
mov
jp
mov
jge
rol
sbb
lock
jns
dec
cld
leave
add
sub
mov
push
and
std
xchg
mov
jmp
xor
das
ja
shlb
adc
push
adc
xchg
outsb
orb
insb
lahf
xchg
add
add
insb
push
xor
fldl
lods
movsb
cs
xchg
pop
add
jae
out
xor
jge
pop
jle
ds
in
mov
push
int
outsb
in
fisubrl
cs
iret
shll
sti
xor
andb
xlat
mov
popf
mov
jnp
sbb
lea
inc
inc
and
cmp
and
sbb
ret
dec
sbb
mov
sub
lret
int
xor
test
jge
loopne
xchg
mov
fadd
mov
lea
add
cmpsb
les
cmp
dec
imul
add
outsl
dec
xchg
pop
jbe
and
cmpsl
mov
stos
addb
pop
ret
add
jae
iret
mov
imul
sbb
popf
roll
mov
fnstcw
lods
xor
leave
adc
cwtl
dec
pop
subb
mov
cmp
fwait
jmp
jns,pn
jg
push
cmp
and
jno
sahf
and
popa
in
cmp
inc
stos
jle
jmp
pop
movsb
xchg
shlb
and
lahf
jne
xorl
pop
fsub
adc
cwtl
testl
loop
sbb
hlt
push
bound
inc
xor
loop
or
mov
aad
mov
in
fists
fidivl
inc
cwtl
subb
jle
push
negb
xchg
jp
jo
jnp
out
aas
xor
jne
inc
in
add
rcrb
jg
jp
cwtl
rolb
xor
or
stos
out
adc
shll
movsl
enter
les
shll
aaa
and
mov
dec
mov
xor
inc
stc
lods
outsl
cmpsb
mov
cmp
push
sbb
xchg
imulb
push
sti
or
outsl
orl
test
push
out
mov
jg
stos
stos
pop
repz
dec
test
mov
xchg
call
push
leave
iret
aas
ret
push
xchg
mov
daa
mov
pop
enter
cmp
jo
xor
xor
mov
xchg
inc
xor
mov
pop
mov
lret
into
mov
in
jmp
outsb
fdivr
fchs
sbb
add
add
push
pop
mov
movsl
frstor
or
jns
in
or
pop
push
pop
cmp
and
int
movsb
imul
test
inc
sbb
dec
sub
xchg
fldenv
or
into
inc
jb
add
iret
int3
mov
sub
mov
adc
sub
add
push
cmp
add
mov
add
xor
int
les
and
lods
pop
cmp
aas
les
xor
jno
inc
pop
lahf
mov
dec
jbe
pop
adc
inc
and
mov
inc
xor
jmp
cmp
inc
hlt
fstpl
mov
repnz
rcl
sub
call
sbb
mov
and
fisubrl
lds
imul
push
mov
pusha
xor
push
scas
pop
or
adc
fiadds
mov
dec
adcl
das
adc
adc
mov
xchg
push
cmpl
test
fwait
mov
or
push
mov
dec
dec
sbb
stos
mov
in
icebp
rorl
andl
push
xchg
repnz
rcrb
add
jg
enter
test
mov
mov
mov
dec
out
pop
cltd
addb
mov
sub
sbb
les
add
js
out
or
sub
mov
pop
mov
shlb
test
call
scas
sahf
dec
pop
cmp
push
jge
out
loope
and
movsb
mov
pop
sbb
mov
xchg
or
cmp
pushf
mov
fsubr
aam
mov
addr16
push
mov
mov
jns
adc
movsb
mov
mov
jmp
out
out
add
add
cwtl
aaa
icebp
sub
test
inc
mov
mov
sub
sbb
push
push
pop
cmp
ljmp
pop
cs
mov
fnop
lahf
xchg
pushf
cmc
push
mov
mov
and
lret
sti
ds
popf
push
inc
jle
out
dec
push
push
push
rcl
repz
xchg
shr
sub
mov
mov
scas
jne
into
pop
aaa
xchg
stos
popf
stc
or
bsr
call
pop
jo
jae
pop
push
popf
lods
je
cld
cmc
inc
scas
xlat
xor
mov
mov
pop
outsl
or
fisubs
cli
or
imul
inc
mov
in
gs
cli
stos
jl
mov
cmp
pop
pop
sub
jmp
xor
pop
inc
cli
call
cmp
or
dec
sub
adc
cmp
fs
das
cltd
fidivrs
sub
pop
jo
mov
sub
into
cmpsb
push
sub
mov
jle
roll
cmp
test
sbb
fcoml
rcrl
call
sub
ds
mov
push
or
loop
data16
jle
inc
cwtl
out
scas
dec
jb
xchg
mull
sbb
inc
and
push
add
cmpsl
inc
nop
lods
pop
jae
xor
outsb
addr16
dec
out
xor
push
xor
mov
mov
pop
inc
push
jb
add
push
sti
xchg
out
shll
outsb
aaa
out
push
and
inc
add
dec
and
ret
in
mov
arpl
test
jne
jb
push
lret
xchg
call
jb
movsl
ljmp
mov
push
inc
out
in
xchg
insb
jae
adc
push
push
inc
fdivrs
sbb
bound
adc
fisubs
add
in
sbb
mov
aad
lds
aam
clc
xchg
sub
pop
mov
test
dec
and
mov
mov
in
mov
stos
mov
pop
imul
sti
or
movsb
rclb
pop
sub
xchg
les
mov
mov
cmpsl
jmp
and
jmp
xor
int3
adc
je
sarb
cld
mov
xchg
inc
fwait
xchg
inc
inc
ds
loop
shlb
daa
push
xchg
xchg
add
orl
cmc
mov
push
adc
arpl
and
push
push
loopne
leave
popf
lret
insl
sub
mov
adc
sbb
pop
jl
xchg
pop
enter
dec
faddp
mov
outsl
or
sub
sub
add
fcoms
mov
cmp
fbld
ds
fwait
or
inc
sarl
std
into
das
pop
cmp
xor
sbb
ret
jp
mov
cmpl
insl
jmp
push
fidivrs
inc
xchg
mov
adc
pusha
fs
add
nop
push
call
icebp
fmuls
push
ss
pop
adcl
hlt
ret
aas
cmc
lahf
and
movsl
pop
dec
push
jle
int3
jmp
rclb
cli
push
or
xchg
cmpsb
cwtl
rclb
inc
pop
hlt
inc
cmp
cmc
test
scas
push
into
jge
test
push
loope
neg
mov
jge
adc
and
imul
inc
xchg
cli
or
scas
cld
out
test
pop
scas
lea
fldt
dec
and
adc
push
cmp
dec
jg
pop
in
imul
scas
cli
ss
xor
ret
push
lcall
pop
xchg
inc
pop
arpl
mov
xlat
push
lods
inc
mov
test
dec
adc
push
inc
enter
add
fildll
lds
aaa
mov
adc
pop
aaa
push
clc
orl
leave
ds
inc
or
mov
pop
lock
stc
sbb
cs
gs
jl
xchg
mov
mov
sahf
repz
cmp
es
jg
sub
pop
loopne
adc
jl
sbb
mov
and
and
xorl
cmp
outsl
mov
mov
fldt
or
mov
pop
movsl
jp
repnz
popf
dec
test
xchg
pop
mov
loopne
dec
pop
mov
insb
xchg
into
je
addl
push
pusha
mov
inc
sar
pop
sub
jg
das
jge
push
aad
ja
inc
add
add
and
pop
scas
mov
add
push
push
push
push
sti
mov
sysexit
jg
mov
enter
or
adc
jbe
inc
xchg
push
jecxz
sub
lds
add
push
sarb
add
pop
popf
call
sbb
xchg
stos
push
cmpsb
call
je
push
inc
adc
std
lret
jns
lods
fsubs
cld
or
arpl
add
stos
push
sbb
repnz
js
scas
mov
mov
addr16
roll
inc
in
inc
pop
inc
pop
or
jl
sbb
fnsave
out
adc
ret
jg
neg
std
adc
mov
aam
pop
pop
nop
les
and
jbe
xchg
mov
addb
cltd
cwtl
xor
in
add
aam
sbb
push
or
out
mov
jmp
iret
mov
pop
shl
or
xchg
mov
dec
stos
clc
dec
adc
fld
pop
or
and
mov
sub
lea
ja
mov
lcall
xchg
add
pop
xlat
sub
sarb
sbb
fwait
and
pop
cmpsl
xchg
push
hlt
inc
push
and
xchg
inc
cltd
push
rcrl
cmp
add
movsb
dec
mov
cmp
sub
int3
xorl
dec
lods
leave
bound
cld
adc
scas
es
jle
jg
push
cmp
ss
out
mov
or
leave
fists
cmpsb
cld
xor
jnp
andb
mov
outsl
sub
int3
fucomp
jp
out
dec
inc
jnp
into
and
pop
sbb
out
mov
sbb
xor
xor
outsb
mov
xchg
xchg
daa
aad
idivl
push
inc
lret
cmpsb
mov
mov
out
lea
xor
out
imul
mov
mov
adc
adc
movsb
ja
loop
rcrb
jns
jno
push
mov
movsl
sub
mov
jb
sub
cmc
fsub
lret
imul
js
sub
xor
dec
adc
mov
inc
mov
push
mov
adc
lods
inc
push
sub
lret
test
decl
icebp
std
shll
dec
mov
shll
pop
std
nop
mov
pop
jae
int
fbld
add
cmc
and
mov
and
fsubr
iret
or
outsb
fimuls
lods
and
shlb
sti
mov
push
das
rcrb
or
or
add
movsl
push
orl
daa
call
popa
mov
gs
je
test
aas
jnp
xchg
div
jl
cmpsl
stc
sbb
xchg
cs
stc
and
sub
pop
out
adc
jmp
mov
outsl
mov
shlb
orb
push
mov
xchg
adc
rolb
fbld
jl
inc
mov
cmp
out
popl
mov
pushf
or
jnp
and
lods
sub
dec
ds
xchg
xor
aam
outsl
fstps
and
adc
or
ljmp
push
clc
shrl
sar
jmp
and
mov
add
mov
push
in
pushf
ret
dec
jnp
popa
ret
loopne
sub
pop
mov
aad
scas
and
imul
jge
xchg
cltd
out
adc
add
loope
test
push
xchg
sbb
dec
sub
sbb
je
mov
mov
mov
in
mov
fidivl
inc
inc
sub
icebp
xchg
pop
sub
sbb
mov
push
xchg
mov
mov
fnsave
js
cwtl
dec
sarb
into
pop
jl
cmp
cmp
ljmp
push
xorb
lea
pop
sub
jo
cmp
xchg
pop
inc
dec
fstpl
jg
pop
and
out
mov
call
out
lods
ror
or
or
aas
jb,pt
in
bound
sub
call
shr
repnz
ret
mov
jle
pop
test
adcb
push
sub
dec
divps
xor
or
je
mov
cmp
aam
mov
push
shrb
into
xor
enter
xchg
aas
mov
and
popf
scas
add
dec
jg
imul
stos
dec
ljmp
stos
filds
pop
addl
movsb
sbb
or
fstps
sub
xor
pop
cmp
lret
inc
and
push
iret
cmpsb
add
fs
std
dec
pop
add
fnstcw
movsb
inc
pop
loope
test
inc
dec
xchg
mul
out
iret
ss
ficomps
outsb
pop
fsubr
subl
push
shll
call
dec
inc
sub
jmp
mov
dec
and
sbb
ffreep
xchg
lods
mov
scas
pop
inc
mov
dec
xchg
ret
inc
scas
sahf
shll
add
push
dec
jbe
rcr
dec
or
push
shrl
loop
bound
dec
sub
iret
dec
test
pop
mov
jle
sar
jecxz
dec
cmpsl
dec
scas
push
xchg
outsb
lahf
sbb
sub
fxch
mov
and
int
shrb
icebp
stos
in
imul
inc
bound
insb
movsl
cmp
xchg
push
fistps
mov
std
shrb
jg
int
mov
jle
fmuls
aad
inc
dec
loop
sub
xchg
sub
aad
ficomps
aas
subl
pop
outsb
dec
mov
push
sbb
jmp
scas
faddl
push
mov
in
imul
inc
test
mov
push
sbb
and
sbb
leave
shrl
leave
cld
xor
and
mov
xor
cmpsb
or
add
and
shlb
pop
inc
dec
aad
push
and
inc
lea
mov
pop
std
icebp
mov
jnp
std
into
and
js
in
adc
nop
xchg
cmp
mov
xchg
das
xor
push
cs
and
xor
dec
pop
lds
test
jb
pop
int
daa
testl
push
mov
or
jmp
cltd
dec
sti
je
lods
cmpsb
and
rcrb
mov
adc
push
cld
mov
push
repz
pop
cmp
cmp
inc
into
aas
testl
pop
mov
push
push
mov
lock
out
sub
std
push
mov
dec
xchg
lcall
lods
mov
xrelease
inc
rorl
movsl
shl
test
je
sbb
enter
pop
pop
faddl
pop
mov
xchg
mov
sbb
dec
test
jg
loope
ret
push
xorb
aas
mov
push
pop
xchg
inc
adc
sub
jl
jbe
inc
ss
inc
into
pusha
xor
lahf
fistps
pop
loopne
mov
mov
pop
dec
ret
loopne
or
jp
mov
shl
mov
repnz
outsl
iret
xchg
dec
lahf
xchg
cmp
and
adc
hlt
inc
adc
rcrb
push
stos
or
pop
push
fisttps
cmp
jg
jle
out
or
cltd
xor
test
mov
xor
add
mov
sub
jl
cmp
mov
mov
hlt
sbb
cmpsl
sbb
push
cld
sti
outsb
shll
mov
pusha
in
repnz
out
daa
movsb
push
pop
cmp
xor
push
adc
xchg
outsb
addr16
and
dec
popa
pop
aad
dec
push
xor
jle
lret
sbb
loop
movsl
loope
sbb
cwtl
loopne
mov
js
leave
loop
cwtl
imul
xor
sbb
xchg
mov
ret
push
subb
scas
add
rol
es
mov
mov
rolb
insb
mov
add
adc
xchg
sahf
js
inc
out
gs
rcr
cs
movsl
push
lds
jns
sub
push
and
outsl
rolb
leave
push
and
loop
add
lds
push
hlt
add
push
xor
in
push
sub
in
inc
inc
leave
out
andl
push
push
xor
inc
inc
jno
push
or
push
jecxz
pop
xor
cmp
and
imul
adc
repz
sbb
xchg
jle
out
sbb
mov
fsub
sub
xchg
pop
out
inc
mov
mov
mov
adc
cmp
popf
and
dec
cmp
push
imul
push
int3
pop
pop
or
push
sbb
sbb
cmc
dec
hlt
int3
sub
fst
push
into
loopne
lcall
pop
push
aas
xor
pop
jnp
or
jmp
stos
push
scas
mov
push
xor
xor
push
imul
stc
and
push
out
ret
push
sbb
ucomiss
sub
add
hlt
push
in
lods
aaa
cmp
mov
jg
jne
pop
movsl
fsubrl
lret
cmp
test
lock
aam
leave
aaa
pop
movsb
or
cmp
icebp
mov
adc
push
adc
stos
je
and
mov
xor
sbbl
jle
iret
xlat
test
nop
mov
gs
pop
ss
push
cmp
xor
sti
xor
je
jno
clc
mov
xchg
sbb
inc
stos
sub
push
and
sub
inc
test
sub
sbbl
aaa
pop
mov
in
push
xor
dec
xchg
out
adc
and
sub
lret
xchg
mov
js
std
ror
adc
xchg
shll
enter
mov
adc
fnstenv
xchg
pop
fcomip
pop
fidivl
stos
dec
pushf
sub
stc
out
icebp
dec
xchg
outsl
gs
rcll
cmp
fimuls
dec
lret
adc
and
loope
push
jne
cld
dec
and
inc
inc
jns
and
out
jns
out
mov
inc
push
inc
arpl
ret
nop
inc
lds
call
leave
pusha
dec
imulb
aaa
dec
inc
ds
out
adc
mov
and
and
or
call
and
cmp
shll
repz
call
cmp
lahf
or
or
mov
aad
inc
push
jne
insb
ja,pt
pop
sub
xlat
rol
dec
out
pop
cmp
roll
jnp
int
lret
jae
adc
or
push
jg
lret
out
cmp
repnz
adcb
int
pop
xorl
pop
or
cmp
xlat
push
or
out
dec
iret
mov
and
addr16
scas
clc
inc
cli
lods
pop
mov
push
cmpsb
decl
in
lock
int
mov
gs
mov
decb
push
ret
inc
call
adc
std
push
mov
add
shrb
outsl
mov
pop
push
insb
sti
jecxz
orb
and
fldcw
push
das
rolb
jge
lret
popf
mov
icebp
push
loope
stos
xor
cmpsl
subb
lret
xor
aad
je
aad
loop
mov
fidivrl
test
cmpb
xchg
xor
dec
cwtl
dec
adc
xor
repnz
cmpl
xor
das
xor
mov
mov
lcall
xor
xor
inc
lods
daa
pop
setg
pop
dec
mov
mov
mov
xor
shrl
scas
adc
iret
cmp
cmp
sub
jb
subl
cmpsb
mov
jmp
call
pop
out
leave
jecxz
inc
push
push
xor
xchg
dec
pop
lcall
test
addr16
fdivrs
mov
lcall
fprem
pop
sub
mov
and
cli
rorl
xor
lods
add
mov
sbb
dec
roll
shll
xchg
test
push
inc
addr16
xchg
lock
test
rol
lret
js
cwtl
mov
aad
pop
popf
push
or
lea
lcall
pop
xor
scas
inc
push
pop
cmc
pop
inc
add
mov
repz
sbb
push
cltd
ret
dec
sbbb
rclb
push
cmp
mov
inc
das
mov
rcl
dec
daa
cli
push
rcr
imul
cmp
daa
fwait
fwait
cld
xchg
mov
jnp
ss
inc
test
push
cwtl
rcr
adc
mov
or
in
push
repnz
mov
sub
outsl
call
xchg
cmp
test
pop
sub
in
add
or
pop
or
pop
xor
loopne
iret
jae
adc
dec
movsb
adc
mov
push
das
cli
jmp
icebp
pop
icebp
pop
xor
dec
sti
push
xor
pushf
mov
sub
scas
mov
inc
repnz
enter
mov
pushf
fwait
adc
add
dec
add
mov
mov
xchg
scas
mov
out
insl
mov
mov
adc
adc
jno
stos
mov
pop
mov
lcall
movsl
mov
and
out
roll
leave
xchg
cwtl
scas
mov
and
adc
aam
mov
mov
out
adcl
mov
xchg
pop
add
out
pop
jnp
cmpsl
and
push
ret
jmp
xchg
ret
or
sbb
xor
or
ror
xchg
aad
test
mul
mov
lods
mov
lds
mov
testb
push
pop
in
cmp
xchg
pop
out
fisttpll
stos
push
roll
pop
xchg
rolb
leave
cli
shrb
xchg
and
cmp
mov
dec
shlb
ds
xchg
outsl
mov
xchg
fs
in
lret
idiv
loopne
sbb
sahf
mov
dec
sub
dec
jg
cmp
mov
push
std
lret
dec
int
mov
popf
push
dec
stc
lea
mov
andb
xchg
pop
push
and
test
and
sub
sub
mov
ljmp
xchg
xor
testb
arpl
les
xchg
cmp
cmpsl
dec
rcr
xchg
test
and
and
dec
nop
or
jo
or
test
scas
jge
push
fistpl
cli
orl
inc
and
inc
subl
inc
repz
sarl
ret
sbb
test
jae
addr16
push
xchg
rolb
and
pop
xchg
fs
and
mov
fsubrl
les
cmpsl
pop
test
out
adc
inc
lea
cmp
jo
aaa
xlat
mov
std
add
addr16
bound
add
in
iret
pop
adc
cmp
jecxz
cmp
and
cmpb
fwait
dec
add
test
or
int3
jecxz
aam
std
push
lods
or
jp
addr16
mov
fwait
mov
call
push
leave
cmp
mov
push
leave
stos
iret
pop
test
ja
mov
andl
and
xor
clc
sub
jmp
xchg
jge
xor
xor
mov
xchg
push
jmp
lea
popa
adc
push
adc
lcall
adc
cmpl
enter
mov
jge
jg,pt
scas
push
in
jno
mov
dec
repnz
or
popf
jbe
fldenv
inc
mov
es
xchg
sbb
subb
stos
xor
xchg
inc
push
cmp
mov
push
dec
adc
cmc
js
test
mov
test
and
into
insb
inc
dec
in
add
pop
cld
push
adcb
in
mov
xchg
imul
xchg
pop
push
inc
jnp
and
repz
add
stos
and
inc
push
lods
negl
inc
cmp
fwait
push
xchg
and
jge
xor
jl
int
in
or
cmp
ljmp
frstor
xchg
xchg
les
mov
jmp
int3
in
in
in
mov
xorl
add
pop
lahf
lret
add
movsl
jp
test
dec
sbb
xchg
int3
addr16
sub
jle,pt
or
mov
movsl
and
jmp
jmp
pop
scas
adc
push
or
hlt
inc
orl
dec
adc
mov
cli
jae
mov
test
mov
dec
mov
push
xchg
jl
out
fs
pop
das
enter
popa
js
aas
add
ret
ret
jmp
add
js
dec
ret
dec
mov
lods
sar
fsubrl
mov
cmp
gs
test
fs
mov
jp
jmp
sbb
mov
xchg
divb
pop
in
cmp
cmpsl
inc
inc
pop
hlt
cwtl
jp
addr16
xor
fs
outsl
jns
adc
je
adc
das
mov
mov
push
loop
dec
outsl
shl
lea
and
or
cmp
arpl
cmc
sahf
pop
add
adcl
jae
sahf
mov
push
in
adc
push
inc
sti
loope
imul
outsb
rcll
shll
gs
leave
fcoms
sarl
inc
cmp
clc
push
adc
jo
mov
jl
cmp
adc
sub
in
nop
xchg
clc
bsr
int3
adc
lret
xchg
loopne
adc
test
aas
push
mov
cmp
aas
add
xchg
xchg
inc
out
and
insl
pop
push
sub
call
ss
movsb
mov
mov
add
cmc
and
dec
cmc
out
aam
mov
test
aaa
cmp
sbb
dec
xchg
stos
subl
ja
push
jb
jge
fs
mov
aas
mov
mov
cmpsl
xchg
leave
or
mov
movb
xlat
push
bound
sbb
cmp
cmp
cld
out
sbb
pop
cmpb
mov
add
aad
in
lds
sub
fisubl
test
fldt
aaa
cwtl
dec
jns
rorb
rcl
test
mov
adc
clc
repnz
push
out
pushf
cmp
xor
shlb
rorb
inc
push
je
xor
out
and
int
loope
popa
sub
ret
addr16
xor
sahf
dec
mov
loopne
lds
sub
xchg
popa
push
inc
xor
jp
dec
cmp
add
sbb
outsb
or
pop
fnstenv
sbbb
popa
outsl
aas
mov
xchg
push
movb
or
cmp
cwtl
add
in
out
push
sub
or
lret
aad
sub
lods
stos
cld
dec
ja
mov
xchg
inc
push
sbb
clc
or
mov
cmpsb
add
xor
jmp
sub
popf
sahf
jl
xchg
xchg
aaa
mov
adc
mov
ds
mov
and
aaa
sti
std
xor
cltd
ret
sbb
add
sbb
lock
sbbl
out
jno
pop
and
and
cld
jbe
sub
gs
icebp
daa
iret
stos
mov
sub
int3
repz
stos
add
sarl
mov
popa
inc
jmp
dec
test
sti
aam
mov
and
sbb
call
pop
jb
int3
rcrb
adc
inc
jns
mov
mov
pusha
gs
cmovs
dec
dec
dec
xchg
xor
pop
out
roll
mov
les
cld
dec
nop
and
xchg
jo
push
int
outsb
mov
mov
loopne
and
rcrb
dec
fcoml
push
push
ss
add
push
xchg
repnz
sbb
lret
mov
lret
xor
xchg
sbb
inc
lods
xchg
xor
orl
and
mov
adc
push
mov
pop
cld
or
or
scas
fs
fdivl
sub
xchg
xchg
add
out
cwtl
lea
fisttpl
loope
mov
mov
inc
sub
js
xchg
cli
dec
jbe
enter
popa
or
fidivrs
cltd
jge
xor
cmp
cmpsl
andb
cld
cmp
mov
and
cli
iret
xchg
fisubs
enter
mov
mov
jg
cmp
xlat
imul
mov
add
gs
int3
xor
aas
sub
xchg
add
mov
test
fs
inc
and
enter
flds
inc
sbb
mov
and
pushf
xor
je
cld
test
or
xchg
loop
sbb
pusha
inc
mov
mov
mov
ror
fisttpll
addl
xor
xor
or
jp
fwait
dec
shrb
mov
xor
in
push
dec
mov
insl
into
dec
flds
xchg
pusha
je
in
out
pop
push
fdivrl
lods
add
push
xchg
in
stc
lods
or
insl
or
cmpl
leave
std
xchg
int
fwait
stc
sbb
or
mov
je
push
push
mov
mov
fs
int3
push
add
lret
push
adc
and
mov
call
ror
fisubrs
jo
leave
add
xchg
iret
adc
sub
mov
sbb
andl
jo
add
repz
adc
add
filds
int3
cli
or
xchg
sysexit
stos
fsub
pushf
daa
xor
pop
outsl
xchg
inc
pop
pop
dec
dec
jns
xor
shll
mov
sbb
mov
inc
xchg
notl
ret
subl
sbb
loopne
inc
test
or
inc
test
fwait
add
mov
push
xchg
or
addl
cmp
jmp
xchg
dec
je
jns
mov
sub
insb
std
push
outsb
shl
in
jle
movsb
pop
lret
pop
fldl
xlat
jnp
bound
fsubr
lret
sbb
mov
and
mov
ficomps
std
sbb
sub
sbb
pop
xlat
ret
or
mov
jbe
dec
addb
sbb
arpl
and
out
dec
lods
xchg
fistps
or
mov
inc
and
push
mov
repnz
test
aaa
and
xchg
mov
hlt
in
in
clc
mov
fdivs
scas
cmpsl
nop
xor
pop
push
inc
outsb
mov
fstl
xchg
rorb
xor
inc
jbe
cwtl
repnz
cwtl
pop
icebp
dec
jnp
into
dec
out
cmp
push
subl
add
test
ret
cwtl
and
inc
xor
cmp
scas
call
fidivs
push
cmc
inc
jb
shlb
push
xchg
lea
imul
push
sti
push
cmp
negl
scas
cmp
xchg
pop
xchg
jecxz
pop
in
stos
mov
out
andb
loope
dec
pop
je
add
icebp
lea
imul
push
adc
sbb
shlb
and
jle
popa
cmpb
mov
sbb
out
mov
in
or
testl
xor
jns
mov
mov
sti
jg
imul
sbb
pop
mov
fistpll
leave
pusha
sub
loop
fbstp
adc
push
imul
sbb
push
xchg
loop
enter
dec
mov
aas
hlt
jg
xor
lea
add
mov
lods
lret
pop
lahf
jmp
sbb
lret
rolb
mov
push
inc
jp
cmpsb
aam
pop
lret
outsl
cmp
inc
or
enter
ja
sub
scas
mov
mov
addr16
aam
jo
popf
testl
sahf
outsb
xchg
mov
cmpsl
cmp
mov
xchg
sti
popf
sub
adc
jle
push
loopne
inc
jp
mov
jle
pop
mov
hlt
insl
scas
call
fists
or
sbb
jge
popa
mov
ret
mov
and
sub
or
mov
sbb
jno
xor
dec
loope
outsl
and
adc
mov
je
lds
xchg
ret
lahf
insb
push
jae
adc
rol
lock
js
lods
jg
std
mov
imul
add
repz
test
jge
lock
mov
sti
sub
jle
into
movsb
popf
ljmp
and
pop
sub
xchg
fistl
test
pop
push
push
loopne
jecxz
fisttpl
and
inc
add
jno
aas
sbb
out
repz
and
dec
test
adc
popf
es
inc
int
mov
jno
jae
mov
or
push
dec
or
subl
aad
jns
pop
pop
cmp
test
sbb
out
fs
jae
jbe
cltd
push
dec
jp,pn
cmp
adc
push
xchg
andb
das
pushf
mull
mov
test
and
mov
push
jns
stos
nop
pushf
das
cmp
sbb
jo
imull
adc
sti
das
dec
ljmp
test
adc
push
push
call
mov
cmp
jo
mov
jmp
and
nop
ret
shrb
inc
jb
mov
scas
xchg
adc
jns
leave
mov
fsts
in
mov
stos
sbb
sarl
push
mov
ret
mov
cmp
lret
iret
fadds
mov
icebp
inc
sub
enter
subb
xchg
jmp
sbb
and
movl
jecxz
int3
aam
les
sub
call
fldenv
stc
and
sub
cmp
imul
adc
in
xlat
movsl
jne
jmp
jnp
std
clc
sub
cmp
insl
sbb
jg
sub
in
push
dec
das
push
int3
dec
out
add
sbb
add
out
push
scas
vorps
stos
mov
lcall
aas
les
aaa
mov
test
push
lods
jo
dec
adcl
lahf
rcr
adc
pop
ds
inc
jne
adcb
mov
lret
scas
push
push
aad
test
imul
shl
decl
fadds
outsb
lock
jno
mov
shll
mov
je
lcall
ret
or
movsl
mov
ficoml
out
fistpll
jne
scas
xor
cwtl
idiv
jbe
xchg
inc
add
inc
ljmp
in
xchg
pop
mov
or
and
inc
lock
adc
rol
pop
xor
shll
fcomi
rorl
cltd
divb
dec
pop
sahf
xchg
mov
pop
xchg
shll
add
lods
imul
data16
jb
cmp
nop
jmp
clc
add
aam
dec
jecxz
and
shll
iret
jns
mov
push
into
inc
push
mov
mov
mov
inc
mov
out
mov
jo
sti
and
daa
mov
lea
ljmp
or
push
test
bnd
push
adc
adc
push
in
mov
jne
shrb
out
jmp
test
js
add
mov
outsb
mov
sub
adc
jle
ret
lcall
jmp
sbb
jnp
mov
ficoml
mov
mov
and
jno
leave
lret
repnz
addl
pop
test
aaa
jnp
repnz
xor
hlt
xchg
stos
mov
push
out
cmp
arpl
lods
add
mov
aam
mov
push
sbb
inc
rorl
movsl
push
cmp
pop
xchg
dec
xorl
lret
push
mov
adc
popa
sbb
add
xchg
data16
push
pusha
add
orb
inc
and
arpl
jmp
test
pop
cmpsb
test
inc
xchg
das
cmp
pop
jmp
adc
mov
dec
out
and
test
fs
push
frndint
sbb
sbb
jne
dec
jnp
mov
idiv
stos
popf
sbbb
pop
leave
and
inc
and
out
xor
push
sub
jp
mov
les
mov
jbe
xlat
and
fsubp
mov
loopne
mov
mov
sub
push
xchg
fwait
adc
cmp
sarl
mov
daa
jo
push
xchg
inc
jl
pop
mov
ret
fdivl
rcr
dec
inc
dec
decl
pop
out
in
lret
mov
call
lret
ljmp
jns
xor
and
sbb
pop
inc
add
outsb
pusha
lcall
mov
das
mov
dec
xchg
movsb
xchg
pop
shrl
out
add
fstpt
xchg
push
divb
cmp
pop
mov
push
scas
fadd
fistl
es
adc
sbb
cwtl
xchg
pushf
pop
imul
int3
sub
addr16
movsl
scas
pop
mov
sbb
or
cmpsb
jns
repnz
jnp
dec
or
sbb
xor
cmpsb
rol
pop
mov
pop
add
push
xor
popf
mov
andl
pop
stc
punpckhwd
mov
fwait
and
mov
pop
int
pop
call
ror
adc
mov
add
mov
cmp
mov
fisubrl
cmc
arpl
mov
and
xor
insl
xor
dec
addr16
pop
adc
cmpsl
inc
das
inc
xchg
push
js
push
loopne
sbbb
orb
xchg
out
ds
imul
lcall
mov
dec
xchg
test
sarl
xchg
out
lcall
inc
cmpsl
dec
outsb
dec
jns
push
pop
xchg
dec
xchg
xchg
fldln2
aam
inc
movsb
pusha
dec
jg
mov
icebp
jne
mov
lret
sarl
lods
popa
out
or
and
xchg
mov
inc
or
mov
cmpsl
and
lods
jo
sub
and
je
lods
iret
xchg
pushf
fistl
inc
jl
or
sub
mov
cmp
jae
loope
int3
pop
je
jbe
jg
cltd
in
pop
fwait
and
jg
lock
out
lods
inc
jns
mov
jp
or
jnp
fwait
jp
inc
jl
pop
adc
mov
outsl
stos
shlb
lock
cmp
rcrb
lahf
mov
test
sbb
adc
aam
cmp
sbb
xor
test
add
mov
in
or
out
scas
adc
es
dec
jle
mov
or
out
cli
shll
sub
mov
mov
pop
mov
mov
icebp
aaa
push
lea
lahf
sub
adc
mov
mov
mov
xor
stc
mov
sbb
mov
lock
in
ret
xchg
das
xchg
sub
push
sub
push
dec
out
xchg
jnp
dec
inc
xchg
enter
out
lods
cmp
test
pop
stos
pop
mov
scas
xor
adc
adc
adc
and
or
popa
add
and
inc
or
push
and
xlat
into
add
call
jnp
fcoml
xchg
mov
sbb
or
sbbl
arpl
testb
add
inc
mov
dec
push
insb
aad
arpl
pop
inc
bound
stc
fsubrs
cmpsb
cli
call
dec
in
pop
lahf
pop
cmpl
movsl
adc
mov
pushf
inc
test
sti
or
fnsave
pop
shrl
test
out
scas
dec
mov
out
out
and
inc
arpl
cmp
inc
and
lds
jbe
xchg
add
aam
pop
imul
jo
call
sub
scas
lcall
aam
dec
jp
jge
and
sub
pop
mov
pop
inc
inc
xchg
pop
das
imul
and
cmp
fsubr
int
stos
mov
ljmp
out
cmp
pop
lea
push
shl
imull
cmp
cmpsb
popa
andl
in
or
aad
mov
add
movsb
fs
repnz
push
xchg
dec
inc
int3
sbb
pop
ja
cmp
and
sbb
xchg
sub
lcall
sbb
mov
cmp
shll
dec
push
ljmp
jmp
imul
inc
mov
leave
fcoml
hlt
jae
shrl
mov
xchg
pushf
ficoms
movl
icebp
push
test
mov
xchg
test
pop
jg
aaa
pop
push
dec
subl
fistps
jnp
pop
nop
sbb
les
xchg
cmp
sub
mov
lods
jg
add
rep
and
mov
inc
sbb
aaa
popf
dec
repz
xor
cmpsb
pop
je
stos
push
xchg
fcomps
cmp
flds
mov
lahf
adc
punpckhdq
jne
and
and
daa
ja
fs
popf
lods
xor
mov
mov
fdivs
dec
cmp
mov
jne
ficoms
mov
inc
ret
or
push
pop
ret
outsl
pushf
pop
cmpsb
into
ljmp
sbb
push
dec
jb
cwtl
push
bswap
imul
lock
mov
lcall
cltd
adc
aad
xchg
cmp
xchg
enter
pop
dec
jg
jnp
pop
dec
lret
xor
ljmp
pop
push
and
stos
pop
call
rcl
xchg
dec
mov
call
adc
ljmp
pushf
outsl
xchg
pop
mov
and
jae
negl
sbb
pop
jg
dec
add
dec
dec
lret
mov
enter
pop
or
adc
xchg
cltd
jp
lock
cltd
add
or
ljmp
jmp
mov
stos
insb
pop
insl
orl
nop
nop
sbb
ja
mov
inc
cmp
sbb
jecxz
or
fadds
pop
pop
sub
repnz
jl
or
sbb
dec
jle
data16
in
stos
fs
dec
in
lods
clc
xor
lcall
adc
mov
push
mov
xor
shll
xchg
jae
stos
pop
fstl
and
add
pop
dec
sub
cmc
scas
sub
mov
dec
mov
cwtl
sub
dec
and
aam
inc
pop
nop
push
imul
sub
cmpsl
insl
in
pusha
test
rcrl
cwtl
cs
adc
mov
pop
dec
out
rcrb
xchg
jo
subb
dec
push
je
fidivl
add
mov
stc
jmp
aaa
xchg
in
loop
push
push
sbb
xlat
pop
dec
cmpb
jmp
adcl
sub
xor
fs
inc
push
jmp
push
lock
pop
and
mov
out
ss
sub
outsl
out
dec
in
sahf
xlat
xchg
jns
jns
mov
adc
and
rep
scas
sahf
lsl
jae
incl
jb
aas
dec
lock
and
jae
test
cmc
lods
mov
ss
inc
jns
mov
out
rolb
mov
jnp
sub
xlat
mov
fucomi
lods
dec
pop
push
sbb
cmp
cmc
addr16
mov
lods
fistpl
ret
mov
fsubl
mov
mov
popa
mov
mov
add
dec
or
mov
mov
sbb
mov
jne
lcall
xchg
jl
testl
andl
fidivs
arpl
fmul
jo
lcall
pop
xchg
repnz
lret
jno
xlat
jns
xlat
sti
jmp
cmp
jns
push
pop
lock
loop
or
fsubp
leave
imul
stos
sbb
dec
fadds
or
cmp
inc
xchg
and
iret
clc
jne
or
push
aaa
cmp
cwtl
add
test
int3
in
sub
dec
andb
fs
sub
mov
sbb
add
cmp
sbb
repz
adc
nop
mov
jo
push
imul
lds
aam
loopne
xchg
push
mov
lods
jne
pop
addb
fdivrs
and
xlat
ljmp
push
test
xlat
sub
mov
inc
in
cmp
jne
imul
fisttpl
movsl
or
push
sbb
flds
out
enter
js
imul
inc
cmpb
mov
insb
or
pop
or
sub
test
mov
sub
push
stos
call
imulb
inc
lea
call
cs
sbbb
sbb
aaa
loope
push
push
or
stos
aaa
pop
mov
push
loop
mov
cmp
pop
popf
xchg
and
sti
jge
push
cmpsb
dec
cltd
and
into
jmp
je
in
popa
and
xor
pop
mov
xor
popa
jno
mov
lcall
and
stc
jns
loopne
jmp
outsb
pop
inc
jmp
xor
fcomi
test
in
mov
mov
mov
adc
inc
mov
xorl
mov
into
mov
scas
outsl
cmp
mov
pop
lods
inc
int3
adc
xchg
in
insl
ret
mov
dec
into
mov
or
push
inc
les
shlb
fbstp
mov
inc
pop
mov
jne
cmp
sbb
jb
repz
dec
and
mov
jae
mov
jg
dec
pop
leave
hlt
scas
xorb
or
lds
jl
aam
push
dec
xchg
jb
sub
xchg
lahf
popa
in
test
imul
movsl
bound
pop
jg
or
shrl
adc
jl
mov
fidivrs
cli
into
aaa
push
notb
pop
icebp
xor
fwait
jl
call
dec
dec
or
scas
popf
lcall
inc
test
dec
or
xchg
pop
ja
in
arpl
xor
and
mov
xchg
mov
jg
out
add
popf
xchg
push
sub
inc
pop
dec
mov
jns
jne
loop
insl
push
pop
dec
cs
scas
mov
mov
addr16
sub
mov
push
das
pop
incb
faddl
mov
mov
xchg
and
jnp
xor
mov
adc
lret
push
insb
mov
dec
inc
pop
ret
cmp
xchg
rorb
mov
inc
sti
aad
outsl
mov
out
jb
jbe
js
dec
fs
mov
push
gs
daa
insb
or
jp
xchg
adc
dec
inc
or
pusha
dec
xor
js
jl
push
loop
sbb
pop
sub
in
cld
push
adc
imul
sbb
in
inc
das
ljmp
xchg
dec
ds
mov
call
popf
push
repnz
and
adc
cltd
pop
jmp
add
loop
scas
mov
aas
pop
pushf
sbb
jmp
dec
int3
shlb
push
mov
xchg
cmp
add
imul
mov
into
popf
out
lahf
dec
cmp
mov
arpl
xchg
and
test
cmp
mov
or
das
add
and
iret
and
and
scas
dec
sbb
and
std
mov
push
sub
pop
movd
cmp
lds
lods
push
scas
shll
jge
push
dec
add
jg
pop
shlb
cmc
in
or
ds
pop
mov
fiaddl
sub
inc
and
insb
das
icebp
stos
cmpsl
repz
inc
aad
loopne
xchg
loope
out
push
mov
mov
xchg
sub
inc
adc
leave
push
jae
cmp
ss
out
in
in
sbb
xchg
xchg
mov
xchg
sbb
cltd
fisubrl
mov
stc
loope
mov
add
xor
fisubs
popa
add
or
movsl
mov
out
push
pop
adc
faddl
in
jb
adc
jbe
xchg
lahf
mov
sub
lret
pop
jo
push
add
imul
pop
push
in
jno
scas
sbb
cld
aam
jle
mov
mov
fimull
lods
rcrb
popa
dec
xor
ficompl
jns
push
or
flds
or
jle
cmp
mov
jno
testl
pushf
sbb
adc
div
orl
adc
loope
test
sarl
xchg
aas
test
mov
add
aaa
jecxz
pop
sub
sub
or
push
mov
or
das
dec
paddusb
dec
cmp
lods
sub
jno
sti
mov
dec
rolb
adc
aas
ret
les
icebp
scas
xor
mov
xor
popf
xchg
jns
mov
sbb
cmpb
jge
add
adc
pop
mov
cmp
xor
dec
or
insb
sub
sub
test
jo
loope
jae
and
jp
or
test
xchg
mov
lods
cmp
cltd
pop
inc
mov
aas
or
hlt
je
call
mov
aam
jae
add
movsl
mov
mov
xor
mov
shlb
pop
push
lods
lahf
sbb
flds
notb
lock
cs
or
iret
fcomi
out
jne
lods
lahf
lock
mov
sti
aas
in
xlat
or
mov
ficompl
dec
rcrb
push
adcb
leave
and
dec
mov
icebp
adc
push
dec
lcall
mov
jp
lods
iret
movsl
inc
push
cmpsl
push
lahf
sbb
arpl
cmp
popa
sub
ss
out
cmpsl
inc
push
out
fdivrl
mov
aas
mov
aas
ljmpw
stc
test
rcl
inc
fisubl
mov
or
jecxz
out
dec
lock
imul
xchg
pusha
cmp
out
mov
pop
mov
jbe
cmp
inc
inc
data16
cld
stos
inc
mov
fimull
push
or
adc
lock
jne
leave
adc
hlt
int
out
cli
ss
cmpsl
fcmovu
ds
inc
inc
mov
imul
lcall
sbb
mov
ljmp
idivb
pop
mov
xchg
test
lret
fisttps
test
add
rcrb
gs
lahf
push
orl
sbb
aas
adc
das
pop
dec
ss
int
jl
sbb
jle
xor
xchg
xor
gs
mov
dec
stos
inc
xor
fstps
mov
outsl
stos
jb
aad
addr16
pop
xlat
dec
cmp
push
jl
mov
out
ds
aas
sbb
inc
shl
mov
or
xor
mov
mov
mov
fcompl
xlat
pop
push
rcr
or
mov
or
loopne
add
lock
scas
loop
pop
xor
xor
mov
pop
in
or
xor
xor
aas
aaa
jge
lds
sub
mov
sbb
dec
dec
mov
insl
mov
add
hlt
mov
stos
fwait
mov
xchg
rorl
ds
adc
mov
clc
scas
push
fcmove
cmp
cmp
pop
and
xchg
ret
adc
add
cmp
repnz
es
into
push
xchg
imul
nop
stc
fidivrs
xchg
shrl
xchg
or
testb
test
xchg
scas
outsl
inc
icebp
adc
ljmp
sbb
cmpb
sub
fidivrs
sbb
add
mov
push
mov
insb
out
repnz
psrlq
fwait
ljmp
cmpsb
cld
pop
in
jno
push
cli
arpl
push
notl
aam
xchg
cmpsl
push
ss
mov
push
lea
sub
loop
xchg
aaa
inc
sbb
xor
or
mov
inc
pop
mov
cmp
adc
mov
jo
or
inc
inc
xchg
or
or
call
or
lock
mov
mov
sbb
and
and
cmp
xor
inc
cltd
lret
ds
jl
sti
test
jbe
mov
rclb
repz
popa
inc
push
jecxz
jecxz
xlat
imul
pop
imul
or
out
out
or
sub
mov
rcrb
lcall
sub
sbb
mov
cwtl
repz
aaa
pop
int3
mov
insb
ljmp
movsb
cmpsb
pop
sti
lret
xchg
or
repz
bound
cmp
sub
leave
cmc
lea
into
out
mov
pop
adc
in
or
out
sub
sbb
lahf
lock
and
and
lahf
adc
nop
push
test
mov
es
adc
mov
sarl
test
das
jbe
lahf
mov
mov
les
jne
shr
mov
cli
fsts
sbb
inc
mov
cmp
dec
jmp
cmp
inc
sbbb
inc
add
sbb
sahf
inc
nop
daa
insb
in
addr16
lret
test
scas
call
jmp
mov
mov
push
inc
xchg
repnz
lcall
pop
pusha
into
int3
aam
fwait
lcall
jp
cmp
adc
inc
push
addb
fbstp
mov
hlt
outsb
lret
iret
cmpsb
lds
xor
sub
lods
sub
xchg
mov
cmc
inc
dec
cmpsl
or
int
test
out
stos
xchg
push
jns
mov
pop
cmp
pop
roll
ret
sbb
inc
data16
js
cmp
push
mov
pop
jbe
adc
adc
cwtl
ja
test
inc
lcall
push
shrl
jecxz
int
adcb
sbb
cmp
cltd
xor
xchg
jno
in
imul
insb
or
jmp
cltd
faddp
mov
jbe
rclb
mov
scas
mov
sub
pop
sets
adc
push
add
test
subl
sbb
popf
xchg
insb
call
inc
loopne
cmpb
xchg
xlat
inc
outsl
or
xchg
aad
inc
hlt
add
pop
loopne
mov
xor
jb
movsb
loope
jb
aaa
push
pop
mov
pop
sti
addr16
cli
dec
or
pushf
lret
rcrl
xchg
cmp
cmp
mov
ret
inc
mov
lea
lahf
ror
sub
cs
adc
pop
imul
inc
addr16
pop
pop
stos
filds
jl
loopne
push
mov
hlt
inc
arpl
iret
pop
sbb
pop
lahf
xor
subb
call
popa
insb
or
mov
add
pop
shl
jb
test
enter
dec
pushf
ljmp
int
or
stc
push
and
dec
leave
sub
mov
nop
and
push
jnp
jle
sbb
mov
test
push
cmc
xchg
inc
ss
stos
in
leave
mov
test
sti
jnp
cmp
popa
add
in
sub
push
test
mov
inc
js
ret
xchg
cmp
dec
cmc
dec
cmp
cmp
dec
push
out
or
aas
inc
imul
xchg
out
push
sti
loopne
jg
add
iret
out
push
push
push
pop
hlt
daa
lret
test
in
jb
mov
mov
pop
leave
jmp
filds
stc
mov
gs
arpl
pop
es
ds
shlb
jge
sub
prefetcht1
dec
mov
xlat
inc
mov
inc
aaa
sub
cmp
cwtl
iret
xor
mov
les
ja
mov
mov
fwait
xor
fs
out
inc
xor
push
mov
pop
mov
jae
fstps
cmpsl
pop
lret
xor
adc
nop
xorb
cmc
push
scas
xchg
mov
pop
dec
imul
sbb
mov
adc
les
cmpsl
outsb
pop
push
push
divb
push
cmc
add
inc
or
pop
ss
jo
sub
mov
into
jecxz
test
add
xchg
ja
rep
scas
je
mov
aaa
loopne
jno
mov
std
out
pop
mov
inc
ss
mov
aad
fsubrl
repnz
out
xor
or
jecxz
cwtl
sbb
mov
mov
inc
mov
in
mov
fadd
sub
js
cmpsl
pop
pop
notb
and
cmpb
loopne
xchg
ret
add
push
int
fldt
sub
outsl
loope
rcrl
mov
pop
ljmp
data16
push
lahf
mov
fadd
mov
ss
and
notl
and
dec
stos
add
shrl
insb
scas
loopne
xchg
jp
xchg
rclb
outsl
std
lret
pushf
inc
cmpsb
push
fisubrl
add
xchg
lds
pusha
push
aam
pushf
xchg
rcr
jecxz
jp
test
lahf
jns
imull
lret
or
clc
test
outsb
dec
ffreep
mov
cmp
jns
push
fs
add
in
lcall
mov
adc
inc
adc
jne
lds
or
les
imul
fwait
les
push
xchg
es
out
jbe
out
jo
pop
cmp
fwait
sti
push
jl
xor
mov
xchg
jge
xchg
sbb
mov
lods
mov
mov
cld
jno
and
or
xchg
insl
std
xchg
ja
push
aas
push
xor
adc
adcb
fmul
mov
cmpsl
std
addl
outsl
stos
jl
mov
pop
lcall
cmpsb
fisubl
jno
jge
jns
jg
or
cmpsl
loope
hlt
mov
pusha
cld
adc
js
stos
movsl
mov
mov
mov
cmp
or
cmpb
xchg
pop
lock
stos
push
ja
mov
push
divl
add
cmpsl
and
outsl
lahf
mov
out
iret
out
xlat
jns
cmp
stos
lcall
and
je
jne
cmpsb
das
shll
add
jns
lds
fisubrl
push
mov
loope
xlat
roll
in
xchg
push
mov
into
jp
or
enter
int3
xor
ret
dec
mov
aas
in
adc
pop
xchg
xchg
push
ret
and
inc
iret
movsl
pop
add
shufps
jns
jle
ljmp
pushf
dec
or
callw
outsl
jp
mov
cmp
cli
ja
mov
pop
adc
mov
in
inc
fcoml
jbe
mov
inc
add
clc
insl
in
inc
fbld
mov
add
dec
imul
sbb
popf
les
pop
pop
push
xor
test
sub
mov
pop
ret
inc
jb
popa
test
enter
adc
xor
pusha
add
mov
push
mov
jbe
dec
popf
in
jne
or
inc
mov
cmpsl
add
or
popa
fiadds
pop
push
jns
and
inc
adc
push
dec
xor
dec
xor
mov
push
mov
adc
sbb
ror
jmp
jnp
mov
mov
jl
sbb
movsb
imul
pop
lock
or
cs
jp
out
rcrl
shlb
pop
pop
xchg
dec
push
xorl
mov
frstor
xor
adc
data16
dec
or
in
loope
xchg
sub
xor
push
mov
xchg
adcb
and
cmp
cmp
sub
lock
int3
cmpsb
jbe
in
adc
pop
flds
jnp
pop
test
and
mov
push
mov
repz
in
inc
insl
int
push
push
out
push
and
mov
bnd
cltd
mov
push
xchg
sub
push
jo
sub
cltd
mov
push
stos
jb
xchg
fwait
idivb
nop
xchg
mov
pop
mov
jb
xchg
add
lcall
cmp
mov
bound
cmc
jmp
mov
or
aas
lret
mov
mov
sub
mov
mov
imul
ss
je
std
dec
mov
jns
push
fcmovne
enter
push
daa
loopne
dec
out
aad
cmp
fistps
dec
loope
mov
pop
sub
into
push
jle
repz
or
scas
test
stos
jmp
cmp
cmp
mov
pusha
adc
call
into
sub
mov
test
movsl
mov
sbb
mov
mov
jae
movb
hlt
xchg
sub
jne
and
push
test
sti
jge
rorl
push
sti
jg
rorb
or
sti
pusha
jb
es
push
jp
mov
shrb
mov
fs
out
jg
call
jbe
arpl
into
adc
adc
ret
or
sub
fldenv
sub
into
in
rorb
test
out
or
mov
loope
adc
cmpsb
scas
mov
push
or
push
xchg
push
mov
xchg
jmp
sub
xchg
jbe
ret
dec
and
pop
inc
push
es
shll
xor
jo
mov
push
push
cmp
test
or
mov
mov
test
dec
sbb
clc
jno,pt
and
xor
std
and
jb
cmp
test
es
fwait
jmp
pop
loope
sarb
pop
cli
inc
xchg
cmc
scas
bnd
mov
xchg
cmp
and
mov
fsubrl
hlt
int3
add
fmull
jg
inc
or
mov
inc
mov
fstp
xchg
insb
lods
aam
and
cmpsb
mov
pop
cmp
cmp
inc
shrb
inc
cmpsb
std
push
popa
mov
xchg
push
sub
xor
push
ret
mov
sub
jp
out
lea
mov
aaa
daa
jbe
call
or
mov
add
shl
add
lods
outsb
jns
arpl
incb
aam
push
sub
in
or
mov
mov
sbb
leave
clc
adc
pop
mov
out
jl
dec
je
fs
repnz
loop
inc
sbb
inc
pop
pop
sbb
cmp
push
leave
inc
or
test
add
lea
jmp
js
push
push
nop
enter
cmp
jp
add
fwait
mov
test
adc
adc
dec
and
dec
jl
push
fstpl
cmp
out
add
fidivs
data16
mov
xor
cmp
clc
stos
mov
pop
mov
mov
xor
xorb
mov
fimuls
add
dec
pop
fwait
movsl
lcall
adc
sbb
sahf
sub
xchg
mov
dec
xchg
push
xor
fnstenv
push
dec
outsb
and
mov
lahf
add
xor
pop
negl
inc
popa
jns
daa
into
pop
stos
iret
push
adc
in
xchg
inc
and
mov
insb
les
pop
imul
jl
sbbb
inc
jo
xor
test
sbb
push
outsl
sbb
mov
aam
mov
mov
mov
push
mov
pop
cmc
mov
in
mov
and
or
add
sti
pop
xchg
sti
adc
fcmovnu
add
and
fdivp
xchg
dec
mov
lods
cmp
imul
in
sbb
pop
outsb
sahf
xor
sub
pop
and
and
aad
leave
push
push
shrb
mov
lds
dec
sub
cld
mov
incb
mov
and
pushf
leave
adc
icebp
fsubrl
cmp
mov
jg
imul
adc
cltd
sbb
aam
xchg
outsl
loopne
push
fs
sbb
xchg
mov
leave
mov
jne
mov
in
mov
sub
rorb
add
dec
push
fcoms
or
add
pop
cmp
and
push
xor
xchg
cmp
mov
pushl
mov
mov
mov
les
ds
adc
jbe
pushf
sahf
mov
push
add
xchg
ljmp
out
mov
out
lret
mov
mov
clc
mov
flds
add
iret
jo
jle
xor
or
rcr
sbb
sub
cmp
gs
imul
aaa
or
pop
push
inc
jae
mov
orb
push
xchg
mov
es
mov
mov
sar
daa
sbb
mov
subps
imul
adcl
mov
test
jl
hlt
mov
in
in
jbe
or
pop
call
stc
movsb
shl
popf
fisttps
pusha
cmp
notl
xchg
inc
adc
dec
inc
pop
fnstsw
sahf
int3
stos
dec
fiadds
and
fidivl
push
push
cmc
hlt
pop
xor
jb
and
or
icebp
sahf
cmp
std
inc
adc
cmpsl
or
inc
in
into
push
aaa
cmp
push
aaa
dec
add
shrb
cmp
data16
adc
jmp
decb
call
std
xor
stos
xchg
popa
sub
dec
or
je
mov
lahf
mov
scas
test
sub
icebp
jge
in
mov
inc
notl
loop
lods
data16
call
mov
lcall
movsl
je
or
popf
mov
stos
pusha
adc
adc
sub
cltd
idivl
adc
adc
rcpps
imul
out
mov
push
dec
cwtl
lds
popf
rolb
ss
rdtsc
in
rcrb
movsl
addr16
pop
outsl
cwtl
sub
dec
or
data16
xchg
imul
lods
mov
out
and
int3
in
dec
xchg
aad
add
int
mov
les
nop
cmp
lds
mov
es
mov
mov
sahf
loop
xor
test
xchg
lods
xor
js
cli
inc
pusha
pusha
or
iret
push
pop
adc
clc
popf
arpl
xor
pushf
jno
sub
mov
xchg
out
in
jbe
inc
les
fisubl
adc
sub
les
insb
popa
jge
fimull
popa
jecxz
push
mov
push
add
scas
test
and
repz
xor
and
sahf
or
adc
scas
push
nop
shr
cmc
mov
es
sbb
loopne
or
popf
call
or
scas
out
jns
jp
xor
pop
adcl
jl
push
and
jne
inc
push
pushf
push
add
fdivrs
inc
mov
push
pop
iret
xor
pop
mov
shlb
and
xchg
mov
outsb
jecxz
add
out
mov
inc
dec
imull
cmp
adc
pop
adc
sub
lahf
and
add
arpl
adcb
sub
lret
mov
inc
mov
gs
xchg
dec
in
cmp
xchg
mov
cld
sub
jecxz
or
mov
inc
xchg
testl
call
jae
cmp
jp
pop
ss
mov
jo
lahf
sub
addr16
sbb
jecxz
xor
mov
push
add
mov
mov
pop
cmpsl
jns
pop
cmp
or
add
or
xchg
push
xchg
nop
jl
outsb
loope
sub
adc
mov
push
cmp
loope
dec
dec
or
loopne
icebp
mov
fs
lahf
pop
jns
sub
addr16
lret
pop
dec
mov
flds
sbb
lcall
jae
cwtl
jns
pop
or
in
pop
std
leave
mov
pop
cmp
lret
sub
or
stos
imul
les
frstor
inc
out
jmp
inc
and
sahf
xor
and
adcb
inc
lret
push
jecxz
jmp
sub
fcmovb
push
pop
and
sub
fisttpl
jbe
inc
lea
xor
dec
cmc
nop
outsl
les
cmp
cli
aas
outsl
gs
ss
cltd
clc
sbb
jo
pop
jecxz
inc
adc
jecxz
sub
ds
sub
movl
jge
pop
std
or
mov
popa
inc
pushf
dec
sub
stos
out
cs
shlb
out
std
outsl
mov
and
mov
lret
push
pop
pop
jecxz
bound
dec
dec
pop
mov
and
cmpsb
inc
push
icebp
or
clc
pushf
clc
sub
test
mov
in
add
sbb
mov
clc
iret
in
data16
fucom
pop
jmp
lock
in
lcall
out
xchg
cmp
in
jecxz
movsl
push
daa
das
aas
inc
sbb
mov
cmp
shl
shl
cmp
lds
leave
shrl
adc
xchg
int3
mov
lret
xchg
mov
mov
xor
test
call
xchg
jbe
cmc
nop
fistps
mov
or
ja
loope
lcall
push
adc
push
mov
jno
mov
daa
in
push
and
adc
sbb
pop
stc
sub
adcl
cld
cwtl
insb
rclb
fwait
and
loope
mov
adc
sarb
xchg
mov
push
mov
push
pop
test
cmp
add
in
mov
out
add
pop
insb
inc
fdivrs
mov
scas
jl
outsl
sti
cmp
pop
ljmp
add
testb
shlb
roll
pop
out
sub
ss
rorl
or
sarb
ss
mov
cmp
int3
fists
mov
lahf
loope
out
jmp
add
lea
daa
mov
pusha
adc
xchg
cmp
sbb
and
movsb
cmp
mov
push
call
cmp
arpl
jnp
aas
setb
push
dec
pop
aaa
pmaxub
mov
cmp
repnz
jmp
pop
lock
adcb
leave
mov
enter
cwtl
imul
xor
nop
add
xchg
adc
jmp
cld
fisubrs
push
rol
sbb
aad
mov
mov
andb
daa
add
sub
fimuls
xor
fcmovnbe
popf
addr16
rorl
imull
jl
sub
xchg
or
jecxz
test
pop
dec
rcrb
clc
aam
pop
fistps
mov
outsb
mov
stos
clc
test
pop
inc
or
pop
scas
or
in
mov
pop
ljmp
cld
pop
adc
imul
es
popa
ljmp
sub
jge
scas
mov
cwtl
jae
arpl
adcb
mov
add
test
lcall
push
mov
outsb
mov
push
mov
sub
and
mov
cwtl
into
or
in
push
icebp
sti
mov
jo
xchg
xchg
rorb
add
fdivr
stc
cmp
sahf
mov
push
sbb
je
xchg
mov
jns
xlat
mov
popl
cmp
sub
xchg
inc
shl
push
scas
jp
add
mulb
in
mov
cmpl
xchg
bound
sub
xor
ss
mov
stos
cmpb
test
push
mov
cmp
mov
cmp
mov
cli
xchg
jmp
or
inc
pop
imul
push
mov
xlat
adc
pop
mov
rclb
imul
xchg
out
sub
adc
lret
mov
adc
add
lret
xchg
rorl
xor
shrl
mov
in
mov
push
xor
xchg
push
xchg
sub
xchg
dec
shr
mov
test
cwtl
aas
repz
xor
ljmp
fwait
out
jnp
int3
push
das
pop
sbb
pop
mov
sub
fsubs
mov
stos
fists
push
nop
mov
push
loope
dec
in
inc
pop
mov
testl
push
lret
pop
fiadds
movl
sub
cmp
scas
cs
les
in
loope
xchg
test
fwait
push
stc
xchg
add
scas
pop
add
adc
fs
jne
test
jo
rolb
jne
or
test
and
dec
das
mov
lods
sub
sbbl
inc
iret
palignr
lret
mov
cltd
xchg
and
sbb
push
push
cmpsl
outsb
test
hlt
int3
out
pop
or
xchg
out
je
insl
and
mov
ret
and
cmpsl
out
or
aam
push
add
and
sbb
decb
adc
test
push
jb
push
in
sbb
pop
cwtl
rorl
int
divl
xor
popf
inc
dec
jle
arpl
xor
xor
inc
adc
and
xchg
mov
cmp
aaa
arpl
icebp
xor
mov
jecxz
pop
nop
push
or
lds
push
imul
and
inc
outsb
jb
xchg
cmc
push
xor
movsb
repz
jl
mov
pop
mov
popf
dec
daa
aaa
add
cmc
les
or
mov
xchg
ja
sub
aaa
push
int3
test
inc
pop
les
cmpsb
clc
lods
mov
push
or
push
data16
dec
jecxz
rorb
dec
cmpsl
in
and
addl
lahf
loope
cmc
or
inc
jnp
daa
jbe
jbe
sub
mov
add
lret
cmp
push
into
in
adc
outsb
jno
incb
js
insb
cld
popf
jno
es
cmp
pop
nop
arpl
imul
inc
push
dec
jo
xor
dec
mov
adc
mov
fcompl
push
outsb
push
in
mov
rcll
add
rcrl
imul
inc
mov
push
adc
out
adc
mov
inc
jge
sbb
fdiv
nop
mov
nop
mov
fsubrs
nop
and
mov
movsb
out
xor
lahf
sub
add
test
aad
and
push
cmp
ficoms
into
lahf
sub
nop
add
lahf
pusha
js
cmc
push
cltd
inc
lock
hlt
jmp
sub
jno
dec
or
lret
mov
mov
mov
jle
sub
mov
mov
push
xchg
jb
cmp
inc
ficoms
and
mov
test
pop
dec
gs
dec
and
lahf
cmp
cmp
inc
das
add
or
or
in
bound
aas
sub
stos
jae
lods
push
mov
hlt
xchg
inc
rcl
mov
ja
lock
out
pop
popa
hlt
inc
sarb
mov
sbb
mov
cmpsl
stos
push
xor
loop
int
xchg
enter
cmp
sti
adcb
push
rorb
inc
repz
insl
mov
jae
movsl
loopne
in
sbbl
mov
or
inc
scas
push
mov
cmpsl
push
fidivrl
ja
jns
in
dec
sti
inc
jp
cmpsl
ret
jns
adc
popa
jmp
push
xchg
push
dec
cmc
push
pop
mov
aas
cmp
mov
xor
jae
xchg
cwtl
xchg
inc
inc
push
aad
sub
nop
clc
inc
popa
adc
jbe
roll
push
cwtl
add
cmp
xchg
cmp
jnp
add
dec
push
imul
cmp
in
shr
push
sub
push
push
insl
loopne
shll
xorl
fsts
or
xchg
shrb
popa
jae
push
push
mov
pop
inc
insl
dec
dec
in
mov
in
and
addr16
mov
and
ret
inc
xchg
fnsave
fsubs
xchg
jle
mov
xchg
mov
fdivrl
push
or
ret
cwtl
fildll
lods
xchg
push
cs
sub
jmp
aas
in
daa
outsb
std
xchg
cli
jp
sub
mov
aas
push
push
decl
repnz
inc
cltd
out
sbb
and
imul
inc
loope
out
bound
sbb
mov
sub
mov
test
popa
mov
push
ja
pop
push
in
das
pop
xor
les
or
inc
and
jl
lahf
cmpsb
pop
aas
cmp
jecxz
xchg
lret
mov
jbe
hlt
lods
pop
fwait
mov
stc
push
adc
shlb
rcrb
push
sub
fisubrl
out
xchg
iret
hlt
or
bound
lret
xchg
or
inc
add
jo
into
lods
rorb
mov
add
sub
roll
int3
clc
dec
mov
shlb
frstor
ljmp
sub
push
imul
cmpsl
ja
sub
pop
dec
in
icebp
fisttpl
lret
inc
xchg
bound
inc
and
cmc
lock
pop
adc
sbb
add
lods
scas
mov
mov
std
out
sbb
inc
das
inc
and
es
add
scas
les
shl
dec
arpl
iret
adc
stos
cmp
xchg
sub
scas
cmp
push
lods
cli
aad
and
xor
push
jno
mov
fstps
js
inc
lahf
jnp
push
shrl
push
out
sbb
ds
dec
pshufw
lret
adc
mov
je
add
add
mov
xor
xor
roll
inc
int3
push
jp
dec
lock
inc
cmp
xchg
push
xor
add
in
and
push
scas
pushl
sub
negb
mov
lods
push
adc
pop
mov
jno
push
jl
ja
movsb
mov
dec
out
mov
push
pop
mov
xchg
adc
sub
insb
out
jo
mov
lock
repz
stos
push
dec
fdivr
sub
mov
pop
mov
and
mov
sub
xor
bound
mov
ds
or
adc
fidivrl
imul
or
scas
xor
xchg
cmp
cltd
sub
ss
lcall
dec
shrb
jnp
mov
addr16
movsb
xchg
incb
or
test
int
and
xchg
jbe
cmc
inc
sbb
inc
dec
dec
sarl
mull
imul
jecxz
nop
add
aad
cmp
leave
mov
in
lods
leave
add
sub
or
push
pop
jne
rcr
rclb
dec
sbb
fcmovne
pop
rorl
jno
mov
rorb
xchg
imul
daa
mov
dec
or
sub
ss
test
pop
popf
and
ret
mov
fxch
sub
stc
imul
mov
test
das
sti
mov
outsb
and
out
mov
cmp
test
lea
test
sahf
jg
insb
int3
xchg
inc
lds
xlat
dec
pop
cmpsb
pop
or
fs
fiadds
test
fwait
add
jnp
in
cli
fs
stos
jmp
in
ljmp
lea
mov
jl
fdiv
js
cwtl
cmp
lods
sti
dec
fldt
mov
xchg
mov
ja
adc
in
add
mov
push
decl
fcompl
mov
in
ljmp
jbe
and
dec
lcall
repnz
xchg
jge
outsl
inc
jae
dec
cwtl
loope
xor
jns
mov
je
add
pop
sub
cmp
inc
enter
jbe
or
pop
loop
sub
movsb
xor
test
or
sbbb
test
jp
cmp
sub
adc
or
mov
and
shll
cmc
mov
xchg
jbe
mov
pop
js
add
dec
in
push
push
scas
outsb
xchg
push
xchg
pop
shrl
mov
les
xor
stc
mov
gs
popf
pushl
mov
push
stos
in
push
fcmovu
out
and
movsb
mov
lcall
mov
or
fidivrl
jl
clc
hlt
out
jmp
sbb
out
rclb
and
or
clc
xchg
jae
cmc
gs
pop
push
xor
mov
out
mov
cmpsb
lock
push
cmp
jne
aaa
mov
jns
imul
gs
or
popf
enter
push
push
xor
xor
xor
dec
adc
mov
jle
imul
sbbb
add
lahf
rcll
push
hlt
arpl
lahf
outsb
dec
sbb
inc
add
jmp
sti
xchg
lods
xchg
inc
icebp
stmxcsr
scas
mov
mov
or
aam
jp
lods
push
stos
stos
fnstsw
inc
xchg
adc
adcl
pop
xlat
inc
ja
pop
inc
sub
sub
mov
jmp
shll
push
sahf
test
std
lods
xor
hlt
mov
xchg
rcrb
inc
repz
mov
sahf
xor
movsb
adc
std
cmp
int
ljmp
leave
push
cmp
popf
nop
add
ficompl
insb
pop
adc
jnp
and
into
and
jmp
jbe
sbb
imul
out
mov
lahf
sbb
sub
fs
out
mov
out
sbb
sbb
add
aaa
pop
out
std
mov
sbb
pop
ljmp
rclb
mov
adc
push
xor
movsb
sbb
add
push
mov
mov
pop
cmp
add
adc
out
cmp
std
jbe
cs
call
inc
int
cmp
fisttpl
decb
jae
out
aas
sbb
rcr
inc
in
or
adc
insb
ret
add
outsb
mov
push
xlat
and
mov
and
add
xchg
lcall
mov
pop
mov
inc
or
fs
test
gs
and
add
arpl
dec
pop
jl
inc
sarl
bound
pop
xor
decb
imul
fdivrs
cli
repz
stc
push
rcr
jo
shl
pop
jbe
dec
jns
cmp
int3
push
scas
pop
dec
mov
dec
out
xchg
les
fdivrs
repz
jecxz
and
jo,pn
hlt
aad
daa
xchg
stos
leave
cmpsl
mov
adc
insl
adc
push
mov
add
mov
jbe
ss
mov
loopne
hlt
daa
push
call
jne
mov
push
adc
xor
enter
xor
jbe
cmp
mov
cmpsl
sbb
in
lret
push
inc
lock
add
dec
jge
ss
adcb
dec
movsb
sub
mov
push
cmp
mov
in
mov
mov
in
repnz
flds
sbb
inc
or
data16
mov
cmp
movsb
dec
adc
jmp
pop
xchg
or
jl
mov
jp
and
fidivl
loop
jnp
pop
inc
and
or
outsl
or
jmp
adc
sbb
pop
mov
dec
into
hlt
stos
sub
mov
aam
push
sub
ljmp
push
popf
mov
pop
cwtl
arpl
mov
psraw
add
inc
xchg
lahf
mov
fldl
arpl
adc
inc
dec
mov
sbb
call
in
mov
mov
dec
push
addb
icebp
adc
out
in
push
jne
push
pop
outsb
mull
js
push
data16
iret
sub
movsl
in
push
std
cmp
and
pop
shll
leave
xor
jae
and
lock
pop
mov
ds
mov
add
inc
cmp
das
xorb
test
rcrb
out
std
pop
repnz
inc
mov
decl
nop
pop
jb
insl
negl
mov
test
xchg
sub
loop
sbb
arpl
rcrb
mov
pop
xor
jl
or
and
out
push
add
daa
sub
xlat
cld
outsb
fadds
jb
xchg
pusha
fcoms
sub
xchg
dec
insl
and
lods
in
jo
fidivl
adc
pop
xchg
adc
lahf
popf
adc
xchg
gs
movsb
insl
fwait
inc
mov
test
add
jbe
cwtl
lcall
mov
in
and
xchg
jno
fwait
mov
or
out
and
loop
sbb
mov
cmpsl
sbbl
add
mov
stos
sahf
xchg
add
xor
ficompl
movsl
mov
mov
add
fidivs
cmp
push
aam
push
or
mov
or
mov
sbb
push
sub
pop
adc
out
jmp
int
jp
gs
aad
outsl
lds
es
mov
push
pop
cmpb
jl
adc
pop
add
in
fwait
mov
scas
cmp
pop
negl
mov
jnp
aam
mov
inc
fstpl
sub
push
movsb
testl
insl
mov
scas
sbb
adc
rorl
sub
popf
std
sub
fldt
ja
andb
jbe
test
push
add
dec
gs
loope
push
push
mov
xor
mov
push
mov
pop
ss
cmc
loop
aad
mov
inc
add
addl
popl
andb
sahf
add
pop
or
fistl
mov
cs
mov
cmp
cld
or
pop
pop
pop
or
mov
in
xchg
aaa
push
sahf
sbb
arpl
mov
movsl
clc
popa
ror
stos
dec
dec
inc
movsb
dec
mov
scas
mov
jae
popf
cmp
ficoml
inc
lods
pop
mov
inc
insl
dec
out
testb
lcall
fs
stc
in
xor
inc
roll
sbb
jp
push
pop
aas
push
das
in
fdivs
xchg
das
je
pushw
sahf
push
xor
stos
mov
jge
push
jge
cmp
pop
mov
xchg
xor
jecxz
mov
sbb
mov
and
sahf
mov
add
out
pop
pop
push
mov
pop
push
sub
ja
arpl
cmp
mov
inc
std
push
cmpsl
add
in
mov
inc
xor
cmp
cmp
in
cmc
cli
call
jg
imul
mov
aas
hlt
jne
fildl
jns
ja
mov
int3
das
and
in
sub
adc
pop
cmpsb
xor
scas
insb
jmp
pop
mov
pop
aam
pop
xchg
mov
lea
mov
xlat
lret
lds
out
fnclex
outsl
movsb
or
popa
shl
push
sbb
cmp
push
push
push
cli
dec
iret
arpl
shrb
iret
xor
add
and
out
xor
inc
ss
std
out
repnz
lock
pop
outsl
fwait
jb
pop
push
sbb
xor
cmp
mov
sbb
push
jecxz
mov
mov
and
fwait
aas
decl
jp
jmp
inc
add
mov
in
pop
out
data16
sub
fwait
xchg
imul
or
inc
rcrl
inc
pop
sahf
add
inc
mov
jb
stos
iret
push
je
rcrl
adc
push
divb
and
sti
popf
jl
sbb
ret
xchg
push
outsl
add
xor
push
std
inc
ficoms
sti
pop
loopne
push
ds
clc
int3
push
popf
push
imul
xlat
mov
xor
pop
jbe
jo
gs
add
push
pop
mov
loopw
es
and
addb
sub
mov
movsb
dec
test
push
adc
push
sub
movsb
cmp
xchg
mov
sub
add
cld
jno
xor
cmpsl
out
xor
sbb
mov
cld
fisttpll
sub
pop
push
hlt
pop
push
push
pop
es
movzbl
outsb
xor
xchg
dec
dec
lock
inc
cmc
push
mov
inc
stos
push
adc
and
jl
sbb
cld
ret
jae
pop
mov
or
mov
mov
sub
add
jnp
lret
push
addb
sahf
insb
sbb
popf
lcall
xchg
sbb
pop
roll
call
addr16
mov
add
cmp
cmp
dec
outsb
int3
sbb
outsl
testb
dec
or
cmp
jmp
xlat
mov
ret
xor
mov
je
dec
and
hlt
rorl
jbe
push
test
inc
adc
cld
ja
outsb
pushf
dec
dec
mov
or
mov
mov
mov
cltd
out
sbb
xor
cmp
mov
cmpl
les
fwait
adc
pop
movsb
adc
pop
call
jmp
pop
add
or
out
xchg
xchg
stos
test
pop
mov
cmpsl
mov
jmp
scas
leave
pop
data16
lahf
iret
mov
xchg
cs
xor
aaa
add
add
lock
popa
js
mov
rorb
ljmp
fs
je
mov
insl
cmp
es
test
jnp
iret
add
xor
mov
adc
js
test
push
dec
shlb
push
ret
jbe
and
rcr
mov
ret
push
sbb
jns
cmp
xchg
xchg
cmc
mov
stos
xchg
rcrb
addr16
mov
imul
dec
mov
into
xchg
push
cmpsl
mov
lods
sub
aaa
cmp
inc
pop
in
enter
cli
popa
jle
mov
jge
or
insl
into
add
fmul
js
push
fistpl
push
pop
add
jmp
icebp
xchg
jle
xor
or
icebp
inc
push
cmp
mov
in
mov
pop
push
xchg
sub
sub
or
icebp
jb
or
lea
xchg
jl
lock
shll
bnd
push
adc
mov
jmp
lret
in
adc
dec
shl
pop
mov
sbb
xchg
aam
xor
xor
arpl
outsl
hlt
aas
dec
adc
or
test
fs
dec
aad
into
cltd
popa
and
adc
setns
or
into
mov
mov
jg
not
stc
mov
mov
popa
adc
cltd
out
push
lret
sub
mov
or
mov
nop
aaa
aad
mov
lret
scas
xchg
imul
in
hlt
popa
adc
fnsave
aad
subb
std
in
pop
add
xor
pop
test
push
and
push
push
fs
jp
fbstp
xchg
neg
jae
out
bound
xor
and
aam
shll
sub
jmp
fdiv
inc
push
push
and
rorl
xchg
inc
pop
push
dec
mov
adc
and
jb
cmp
cmp
dec
fmull
add
lock
mov
fsubr
and
xlat
and
xchg
rcll
call
xor
std
lahf
lock
pop
sub
jno
movsb
insb
dec
pop
add
stos
push
pop
roll
mov
lcall
daa
rolb
inc
fs
sti
arpl
mov
mov
fisttps
cld
inc
and
pusha
mov
or
aaa
test
cmc
xor
daa
jno
les
les
inc
mov
xchg
or
es
mov
xchg
out
shll
mov
add
fcmove
inc
push
fucomi
divb
xor
imull
adc
cmpl
gs
sub
xor
ja
jmp
lods
inc
push
xor
sub
and
push
adc
xchg
and
daa
ret
nop
pushf
out
xor
out
or
xor
fcmovnbe
mov
xor
and
and
in
stc
cmpl
cmp
shll
enter
sub
in
daa
roll
xor
add
xchg
cmp
xchg
std
push
out
sub
outsl
dec
cli
push
jns
mov
incl
sub
das
stos
or
ret
rol
pop
jns
out
outsb
adc
dec
fcmovu
lret
lock
popa
jecxz
cmp
jp
or
pop
stos
test
dec
cmp
pop
sbb
sbb
nop
call
add
gs
add
fidivl
xor
sub
addl
mov
jbe
jo
stc
and
int3
mov
dec
fsubr
sub
fsubrs
outsb
inc
test
divl
xchg
mov
dec
imul
in
out
pop
push
sub
sub
in
adc
push
aad
sbb
outsb
fcomps
dec
push
loope
dec
test
arpl
adc
xchg
inc
push
in
out
fnstcw
push
sbb
addl
addr16
xor
jne
or
movsl
adc
lret
pop
lahf
lods
cmp
jno
xor
mov
inc
dec
cwtl
and
leave
sub
push
jp
adc
stos
xor
cmp
pop
loopne
xchg
push
pop
aam
into
sub
roll
push
and
fs
dec
pop
inc
add
adc
pop
in
jp
add
inc
push
add
punpckldq
adc
sbb
mov
shll
daa
pop
and
push
sbb
mov
and
test
inc
ljmp
sbb
mov
xor
push
add
scas
mov
imul
out
push
mov
in
sbb
and
inc
adc
lcall
mov
and
mov
outsb
subl
dec
rcrl
push
jp
pop
orl
cmc
sbb
addr16
lret
adc
mov
lret
add
loopne
pop
xchg
sbb
decb
inc
mov
mov
imul
cmp
and
popf
push
aam
xchg
inc
dec
loope
movsb
test
push
add
mov
js
add
mov
loop
test
insb
gs
cmp
dec
lock
fnsave
rol
or
ss
pop
in
cli
jns
in
pop
icebp
jbe
jnp
aam
adc
mov
cmp
add
add
fldcw
pop
adc
or
out
add
test
test
and
adc
out
xor
out
pop
test
xchg
pop
sub
mov
aad
stc
inc
sub
xchg
movsb
lds
inc
or
ss
pop
mov
scas
pop
ret
loop
sbb
dec
xor
xchg
in
adc
popl
inc
xchg
mov
hlt
out
ret
pop
loope
pop
pop
mov
dec
xchg
shlb
pop
push
cmpsb
scas
std
popa
in
cmp
ljmp
mov
push
adc
ret
les
adc
icebp
mov
ret
inc
fidivrs
incb
push
or
cwtl
jmp
pop
frstor
mov
pop
jo
mov
icebp
xchg
push
push
and
jne
leave
push
sbb
add
and
popa
pop
stos
fwait
outsl
stos
stos
sbb
outsl
add
jo
insb
inc
mov
xor
arpl
xchg
fwait
subl
gs
iret
and
popf
imul
adc
push
jmp
outsl
leave
mov
or
js
pop
xchg
ljmp
xlat
sub
in
xor
mov
sti
data16
daa
push
and
loope
cmp
xor
sub
shlb
cmp
push
sub
push
daa
jnp
daa
sub
mov
mov
dec
sbb
sub
push
jp
or
or
push
push
push
pushf
push
mov
or
mov
clc
lahf
sbb
loope
adc
or
cmpsl
lock
xlat
dec
ja
jo
cmpl
out
add
call
lcall
push
aad
popf
loopne
push
call
fsubrl
leave
cld
rclb
mov
in
sub
int
push
mov
xor
mov
lea
push
jo
mov
dec
dec
bnd
pop
mov
popf
adc
push
sbb
aaa
xlat
add
jmp
je
jp
cmc
push
xor
cmp
out
lds
cmp
js
push
mov
cli
mov
sub
xor
inc
pop
jmp
ljmp
sbb
jae
and
mov
test
mov
dec
dec
cltd
inc
inc
mov
mov
push
test
mov
sbb
pusha
jl
ficompl
pop
enter
mov
xor
into
mov
dec
xor
or
sub
and
jb
mov
mov
sahf
push
in
es
push
emms
fmull
jne
fisttpll
outsl
cli
inc
cli
mov
les
rcll
jg
push
out
ret
sub
cmp
add
push
dec
jg
sahf
xchg
stos
sti
lds
push
xchg
cmp
or
nop
inc
jno
dec
mov
dec
stc
cltd
loope
add
iret
pop
inc
mov
cmp
xor
fisttpll
cwtl
xchg
pusha
test
sub
push
push
dec
movsb
sub
out
fistl
out
cwtl
push
out
les
push
lret
inc
hlt
fisubrl
inc
sarl
rclb
or
fs
not
outsb
push
rcll
fmuls
loop
daa
push
je
dec
lret
cmp
mov
xchg
xchg
dec
sbb
pop
cmp
mov
scas
xchg
cs
ret
aam
sbb
push
dec
bswap
mov
mov
push
or
or
jmp
ds
je
push
mov
jle
outsb
push
stos
and
mov
jo
mov
scas
out
loopne
xchg
sub
jns,pn
mov
movsl
js
jmp
push
adc
out
movsb
xor
cmp
fadds
loope
fidivs
dec
jnp
int3
data16
cmp
sub
pop
cmpsl
push
inc
sbb
cmp
ljmp
movsb
mov
std
xor
lods
sub
xchg
icebp
stos
loopne
jl
push
xchg
add
inc
inc
or
test
out
pop
rorl
insb
cmp
push
cmpsl
cmc
adc
sub
push
add
sub
sbb
je
arpl
pop
add
dec
bswap
ret
cmp
push
dec
push
jns
int
dec
cltd
lock
mov
cmc
inc
mov
cmp
arpl
mov
test
adc
push
pop
cmpsl
cltd
je
aad
fdiv
fmull
loopne
test
adc
xchg
andb
imul
ror
dec
jl
mov
shr
mov
arpl
adc
nop
insl
cmp
sarl
push
adc
idivl
push
aaa
fcmovnu
imul
cmc
shrl
mov
ja
ja
popl
sub
imul
lods
fsubrl
mov
cld
idivl
movsb
popa
xchg
jecxz
mov
lret
cmp
mov
add
inc
dec
xor
cmpsl
call
pop
cmp
inc
inc
push
mov
push
mov
pavgw
bswap
and
cltd
jne
loopne
pop
in
mov
xor
adc
push
data16
xlat
call
ret
out
mov
fldcw
rcll
cmpl
scas
lea
jg
addb
xchg
pop
jle
stos
dec
cmc
and
jge
push
and
sbb
xchg
and
scas
pop
in
xor
fcoms
push
lea
or
sahf
arpl
lret
push
push
insl
fildll
rorb
repnz
leave
push
in
popf
popa
lods
jge
mov
loope
and
lret
out
pop
cwtl
rolb
xor
cs
shl
out
bound
pop
inc
pop
shl
pop
mov
dec
adc
jno
je
dec
rol
cmpb
lahf
or
mov
cli
rorb
xchg
outsl
xchg
aas
sbb
inc
sbb
fs
xchg
rcrb
into
push
aam
jp
popf
inc
adc
xlat
jmp
testl
cltd
or
inc
cmp
mov
pop
test
mov
cmp
lea
push
testl
push
or
outsb
outsl
rcll
inc
fnstcw
je
in
loope
ja
mov
xchg
insl
imul
or
cmp
push
stos
mov
fwait
mov
or
imul
insb
inc
push
testb
cmp
pop
push
pusha
ret
push
mov
notb
mov
mov
out
mov
inc
and
jo
rcl
cmpsb
pushf
push
popa
push
push
movsl
mov
dec
pop
popa
push
or
cmp
ja
pop
add
add
push
mov
mov
rcll
inc
nop
jecxz
dec
push
inc
pop
notb
adc
push
data16
xchg
out
sub
arpl
xchg
movsl
fsubrl
ror
imul
mov
xor
stos
pop
repz
mov
shrl
add
aam
and
call
test
and
push
mov
xor
fcmovbe
stos
fcoms
dec
hlt
fidivrs
sub
nop
subb
cli
jmp
adc
mov
adcl
mov
jmp
cmp
test
jg
popf
jg
pop
xor
push
aad
loopne
cld
addr16
gs
rcrl
hlt
add
aam
fisttps
lret
jnp
pop
add
sbb
scas
aad
lock
out
jg
leave
lock
imul
add
rcl
cmpsb
cmpsb
bound
pop
fmul
adc
in
or
cmp
cmp
jmp
xchg
imul
cltd
add
roll
dec
btr
pop
out
cmp
testl
xchg
pusha
fidivs
jp
test
sub
mov
es
jg
sub
fs
xchg
push
mov
and
xchg
jle
shll
adc
xchg
push
sub
or
jmp
inc
mov
mov
cli
dec
ja
sbb
ret
xchg
int3
jp
das
dec
xor
divb
inc
mov
mov
jmp
mov
adc
or
xorb
xchg
xor
mov
pop
shr
pop
cmp
shr
sahf
mov
jl
pushl
push
call
aad
std
sbb
das
add
jge
mov
sub
in
mov
sbb
fistpl
insl
arpl
dec
push
adc
aam
sti
pop
mov
xor
mov
hlt
shrl
xor
aad
ds
mov
stos
mov
imul
or
imul
call
inc
xor
stos
cltd
mov
bound
xor
push
shr
add
pop
push
fs
out
cwtl
sbbb
test
mov
push
insb
xlat
testl
arpl
mov
sbb
cmp
jle
and
mov
lcall
jne
fstl
and
mov
subb
lea
or
lock
fmulp
ret
in
xor
scas
add
aad
adc
jno
cmpb
mov
xchg
mov
cltd
mov
and
pop
pop
addr16
and
push
das
shll
mov
out
pop
outsl
push
out
pop
fwait
scas
bound
sub
stos
sbb
add
or
insl
in
or
inc
aam
xchg
lcall
mov
out
adcl
into
repnz
ret
cmpsl
jp
iret
push
insb
stos
or
cmp
lcall
mov
xlat
stos
or
je
lcall
rcll
cld
dec
call
jecxz
or
mov
mov
xchg
imul
sbb
mov
dec
je
imul
loopne
and
cli
xchg
pop
mov
int3
into
popa
xor
pop
into
pop
cli
mov
lock
and
push
xlat
mov
mov
lds
andb
push
mov
xchg
xor
daa
or
add
jle
xchg
cmp
fs
imul
cs
int3
jae
jg
pop
lret
cmc
add
testl
cmp
outsb
jae
nop
enter
lret
in
rorb
pop
lret
xor
mov
push
or
mov
lret
in
push
dec
int3
inc
imul
aas
add
aam
inc
adc
pop
dec
mov
pop
ljmp
mov
jle
jge
mov
xor
test
pop
xchg
pop
xor
cltd
sar
and
sbb
insl
xlat
arpl
sbb
mov
jnp
mov
popf
je
inc
in
mov
sbb
ret
push
push
cmp
andl
xchg
aas
lret
fidivrl
inc
stos
adc
dec
add
pop
jb
in
loope
lock
imulw
nop
add
imul
popa
daa
js
movsb
pop
scas
jle
inc
js
out
xorl
fsubrl
push
cmc
inc
int
shrl
add
ljmp
fisubrl
and
std
sbb
mov
push
jl
and
inc
lahf
xor
in
mov
inc
pop
leave
mov
enter
ficomps
mov
xchg
pop
add
rcrl
lea
lods
sub
and
les
mov
int3
fldenv
orb
mov
mov
xchg
mov
xor
cmpb
push
adc
add
fdivs
ret
mov
push
lods
inc
cmp
outsl
mov
lret
jbe
adc
pop
inc
addr16
pop
cmp
push
add
jne
repnz
adc
adc
or
insb
repz
out
ljmp
cmpsl
dec
imul
jp
add
or
stos
repz
idiv
pop
inc
xchg
loope
add
push
push
bound
popf
xchg
sahf
test
jbe
jle
push
xchg
int3
sahf
ret
lds
rcrb
push
dec
mov
ja
pop
dec
cmp
aas
inc
inc
mov
mov
jb
mov
scas
ja
in
adc
dec
cmpsb
dec
out
stos
out
lret
lods
sahf
scas
add
or
clc
add
adc
push
sub
pop
je
mov
mov
push
xchg
lock
out
sub
sub
jge
cmpsb
dec
mov
xor
daa
insl
mov
jnp
xor
sub
cmp
push
sub
dec
out
mov
pop
and
fld1
xor
lds
mov
loope
loope
dec
popa
stos
or
xchg
push
mov
scas
dec
roll
out
jnp
cs
push
cmp
stos
cltd
add
mov
fwait
xchg
pop
xchg
ds
jl
mov
push
mov
cmp
and
outsl
add
les
filds
push
imul
sub
sarb
push
inc
cltd
cmp
or
cmpb
add
push
push
adc
in
mov
shrl
scas
and
add
xor
loopne
or
aas
mov
cmp
clc
jle
stos
mov
xor
cmpsb
pop
movsb
mov
fldl
mov
jne
sub
sub
jbe
cmp
cli
ds
mov
cmp
and
lock
mov
ds
lcall
xchg
int
xchg
fsubs
andb
xchg
lcall
fwait
loope
mov
xor
mov
pop
and
dec
in
adc
jl
push
in
movsl
lods
les
dec
mov
sub
mov
cmp
inc
pop
iret
int3
fcmovnbe
les
out
or
xchg
dec
test
xchg
pushf
fisttps
add
mov
jb
or
lds
and
test
mov
and
xchg
loopne
fs
cmpsb
pop
fwait
and
inc
sub
sub
sbb
pop
outsl
sbb
inc
stos
or
jl
xchg
sub
sbb
loope
jg
jns
mov
and
cmp
pop
sbb
in
push
sub
inc
pop
aam
cli
adc
jp
sti
cmp
stos
cli
xchg
repnz
jle
push
and
dec
push
dec
mov
xor
jp
add
gs
jb
std
cs
dec
add
dec
xor
roll
stos
test
dec
sub
mov
daa
pop
and
shl
enter
inc
gs
jbe
cmc
mov
mov
outsl
xlat
stos
sbb
fsubp
push
loop
xor
popf
lret
jl
jl
nop
out
sub
ss
mov
add
scas
enter
and
addb
enter
bound
stos
js
fistps
mov
inc
xlat
and
push
sbbb
mov
rorl
mov
stos
jmp
xor
test
iret
clc
pop
dec
dec
or
notb
mov
xchg
fidivl
push
int
into
xchg
ss
and
xor
dec
pop
xchg
xor
push
jge
inc
xchg
inc
adc
vpavgb
xor
iret
push
pop
pushf
cmp
jg
cmpsb
add
sahf
std
dec
jecxz
mov
subl
scas
in
addr16
mov
subb
mov
fists
dec
pop
ss
div
mov
arpl
push
cmpsb
dec
repnz
in
icebp
adc
mov
rcrl
push
cmc
xchg
adc
and
insl
pop
cmpsb
sbbl
movsl
insb
scas
jae
lds
call
jmp
in
das
into
jbe
int3
mov
cs
jnp
mov
icebp
mov
iret
test
loope
arpl
lahf
mov
shl
xor
jge
jmp
pop
dec
or
mov
push
lret
inc
fsubrs
push
xor
or
dec
cmp
out
add
and
nop
sbb
pop
jmp
and
sbb
adc
stos
test
sub
and
push
lods
ds
pop
jnp
aam
loop
jg
push
add
pop
lret
testl
lods
mov
xbeginw
lahf
imul
and
repz
and
mul
mov
sbb
lods
or
xchg
pop
rcrb
pop
cmpsb
and
ret
mov
push
xor
push
add
mov
in
call
mov
xlat
xchg
test
cmc
and
cltd
into
xchg
mov
xchg
ljmp
cmpsb
xchg
and
push
inc
test
pushf
mov
xchg
jnp
in
dec
xchg
loopne
out
in
or
fstpl
mov
xchg
mov
nop
movsb
push
add
jecxz
ss
jecxz
movsb
sti
repz
lcall
adc
add
loope
adc
and
xor
insb
xor
icebp
test
cmp
add
es
mov
movsl
jmp
cmp
push
add
add
repz
int
push
mov
jne
pop
jb
dec
jmp
mov
test
push
outsl
and
sbb
cmpl
pop
fwait
scas
mov
mov
ret
fidivrl
adc
mull
sub
dec
mov
enter
xchg
outsb
pop
insl
adc
add
push
push
mov
lret
ret
dec
and
inc
xchg
dec
xchg
into
and
push
mov
mov
push
xor
inc
lds
dec
mov
mov
or
sub
push
push
daa
in
movsl
jnp
mov
dec
push
jg
and
mov
movlps
mov
outsl
std
pop
cli
andb
push
push
pop
int
into
pop
mov
xchg
xchg
ja
sti
xor
out
mov
jge
psubq
jecxz
cmpsl
adc
insb
push
push
ret
popf
sub
jno
lret
or
call
mov
mov
insl
rolb
push
out
daa
mov
sub
stos
fstpt
mov
and
iret
push
push
popf
cmp
inc
sarb
rcll
dec
pop
ret
aas
dec
cli
inc
mov
pop
jmp
cs
idivl
das
aam
loope
sub
jae
imul
adc
add
xor
cmc
mov
sbb
scas
xchg
repz
aaa
rcl
jnp
push
sbb
inc
fcmovnb
push
push
push
ret
sub
sub
repz
outsl
cmpsl
sbb
call
push
cwtl
adc
sub
outsb
pop
pop
pop
orl
dec
shrl
dec
imul
aaa
push
and
cmp
sbb
xchg
rep
in
jecxz
adc
mov
loop
pop
fsubrl
shll
mov
mov
fstl
sahf
test
pop
pop
dec
cmp
cs
xor
cmp
bound
push
lea
fcoms
loopne
mov
inc
stos
sub
imul
loopne
popa
cmc
dec
sub
jmp
iret
addr16
or
mov
push
hlt
fdivrl
aas
jo
push
aaa
sbb
in
or
mov
dec
cmp
loop
icebp
jp
mov
dec
xor
pop
pop
mov
dec
fwait
decb
sbb
pop
dec
imul
xchg
push
or
sub
mov
std
aas
mov
icebp
popf
fdivrs
lods
mov
movsb
push
and
xchg
mov
cmp
mov
gs
mov
in
out
subb
jge
xor
fnstsw
test
inc
cmpsb
mov
mov
cmp
dec
cmp
jecxz
jo
inc
insb
std
popa
sub
or
add
xor
sbb
ficompl
or
fsub
iret
pop
dec
mov
xor
jo
ret
test
pop
in
inc
pop
outsb
adcb
fs
leave
jle
addr16
popf
int
divb
popa
add
aad
std
inc
adc
push
xor
pop
push
fdivrs
pop
stos
xchg
cmp
shll
ss
push
fldt
dec
xchg
shlb
daa
dec
je
pop
mov
aaa
jno
iret
loope
fimull
xlat
stos
cmpsb
out
mov
ret
stos
push
mov
orl
mov
enter
jl
xchg
push
or
loope
mov
xor
mov
fcomi
sbb
push
xor
int
xchg
adc
insb
cs
arpl
mov
inc
inc
sub
cmp
ud1
je
loope
cmp
xchg
ss
push
fsubs
hlt
xchg
shrb
cmp
push
jmp
or
push
push
nop
jp
mov
movsl
fs
sbb
les
mov
popa
pop
leave
sbb
jp
fdivrl
pop
dec
jl
sub
iret
pop
jl
cmp
popa
or
cmp
addl
inc
insl
dec
push
xorl
stos
cs
sarl
jge
loop
xor
push
fsub
cmpsb
scas
ret
test
dec
pusha
movsb
sti
adc
insl
inc
lds
es
nop
addr16
jnp
repz
inc
or
pop
push
cltd
enter
and
mov
jo
aad
stc
sbb
lea
rorb
insl
sbb
jns
lock
adc
sub
int3
rorb
xchg
pushf
or
xor
or
mov
insl
cmp
adc
or
movsl
jp
pop
dec
and
fadd
mov
leave
mov
mov
push
push
cmpsl
mov
mov
adc
mov
pushf
xchg
mov
adc
inc
int
gs
aam
iret
notb
fdivl
mov
mov
sub
imul
dec
pushf
arpl
repnz
xchg
out
test
sub
ja
loope
push
jo
xchg
xor
mov
jp
xor
xlat
pop
das
inc
addl
sbb
mov
cmp
fmuls
sbb
xchg
lods
xor
insl
sub
lock
and
add
addb
xchg
xchg
pop
pop
mov
sarb
xchg
adc
loope
imul
rcrb
mull
mov
es
xchg
addl
lret
js
lock
cltd
mov
adc
aam
clc
ja
shlb
xchg
mov
inc
iret
and
inc
out
cmp
test
into
pop
outsl
out
jecxz
mov
fmuls
mov
or
pop
dec
shrb
push
push
pcmpeqw
mov
cmp
fmuls
setno
loope
leave
push
mov
xchg
mov
adc
out
lods
lcall
add
push
inc
mov
loopne
addr16
cwtl
add
aam
ret
cltd
lcall
add
pusha
push
sbb
sub
mov
lds
push
add
jle
push
iret
xchg
stc
xor
cmc
hlt
fsub
push
mov
addl
mov
ljmp
sub
aad
sub
xor
fs
or
aaa
add
test
adc
mov
jp
mulb
aad
fwait
pop
mov
and
adc
test
cmp
cmp
pop
jl
rcrl
cmp
sub
cmpsl
mov
jo
lods
les
inc
lret
popa
jbe
faddl
pop
mov
leave
pop
in
mov
dec
cmc
incb
mov
xchg
adc
loop
loopne
pop
xor
or
ret
mov
fs
inc
jbe
cltd
call
test
je
or
add
movsb
cmc
ret
cmp
cmpsb
or
mov
jnp
fdivp
push
xchg
imul
adc
xchg
adcb
add
inc
mov
mov
or
jnp
adc
mov
dec
mov
jecxz
mov
xor
shrb
inc
ljmp
or
inc
subb
pop
dec
bound
mov
roll
pop
inc
sbb
roll
adc
insb
sub
cmp
xchg
sahf
cmc
shr
cmpsb
mov
jmp
shlb
test
xor
push
jge
dec
test
decb
js
psubd
cmp
daa
mov
xor
or
in
lea
aad
pop
ret
hlt
imul
movsl
std
xor
loopne
fwait
xlat
aad
insb
out
movsl
dec
add
sbb
dec
xor
mov
imul
fs
and
xchg
popa
adc
dec
jg
jmp
test
dec
nop
aas
nop
and
repz
iret
adc
cmp
pop
scas
mov
pop
jg
cmp
xchg
mov
jno
xor
filds
mov
push
jo
ret
push
fwait
stos
push
push
cmp
movsb
fwait
push
test
mov
jle
xor
into
scas
cmp
inc
mov
movsb
lea
fidivl
xor
push
mov
inc
sub
outsb
push
mov
sbb
pop
fcoml
test
xor
andl
dec
add
push
rcr
fs
push
adc
fmull
sub
lea
jmp
out
xchg
dec
adc
pop
mov
cmp
aad
jae
inc
xchg
daa
dec
mov
loop
mov
fiaddl
loop
xlat
test
xchg
jno
out
sbb
jmp
mov
sub
out
and
fcompl
jg
push
cmpsl
and
mov
add
mov
rcll
lods
mov
fwait
aad
adc
jbe
or
jnp
pop
repz
or
lret
push
xor
xor
in
sub
imul
jmp
sbb
dec
arpl
xlat
or
xchg
mov
mov
cld
or
in
inc
inc
scas
test
mov
ret
xor
pop
or
jecxz
data16
jmp
jmp
sahf
mov
xor
lret
faddl
shll
xlat
and
jl
ret
mov
adc
insl
dec
fldt
rclb
test
pop
jle
sub
cli
data16
cmp
incb
iret
ret
add
sbb
jp
sbb
sub
dec
mov
or
test
mov
gs
push
and
mov
fs
mov
pop
pop
es
flds
addr16
pop
pop
mov
xor
and
aam
sbb
out
pop
clc
lahf
call
push
jmp
cwtl
or
fidivrs
add
rorb
xor
xor
inc
jno
jb
inc
pushf
sbb
cmp
and
push
xchg
xor
test
cmp
sbb
in
popa
lret
push
sbb
cltd
stos
dec
mov
mov
std
into
jl
insl
or
xchg
or
popa
mov
mov
xchg
scas
js
jmp
xlat
jbe
adc
jo
jb
cmp
mov
addr16
dec
popa
adc
jle
jns
lret
add
popf
pop
fsubr
xchg
jo
push
into
push
and
mov
mov
add
dec
and
xchg
adc
pop
ljmp
mov
or
fists
dec
push
popf
mov
stos
int3
int3
xor
adc
cmp
leave
out
dec
cld
jae
mov
loope
ja
sarb
add
xor
outsl
shrl
sub
popf
sub
int3
xchg
clc
enter
sti
nop
stos
pop
dec
pop
push
cmp
in
jmp
jo
dec
dec
hlt
adcb
xchg
xchg
or
sub
cmpsb
mov
push
jno
push
mov
jno
lock
dec
push
or
and
sbb
popf
mov
mov
cmp
ljmp
xor
cmp
inc
push
jne
mov
xor
pop
cwtl
mov
mov
fisubrl
rcrl
add
inc
jle
aam
loopne
inc
stc
sub
clc
stc
cmp
testb
in
add
xchg
outsb
xchg
and
mov
xchg
nop
in
mov
int3
pop
push
adc
sub
jmp
cmp
popa
aaa
fdivl
es
cmp
leave
repnz
fs
test
dec
mov
pusha
cmp
add
cvtpi2ps
and
mov
mov
fisttps
outsl
xor
xchg
in
stos
js
ljmp
cmp
pop
test
loopne
dec
push
sahf
ljmp
imul
jb
sbb
fimuls
mov
enter
jb
shl
or
fcoms
push
or
inc
repz
cwtl
dec
fwait
inc
stos
aaa
out
andl
int3
dec
ret
cltd
cld
mov
test
xor
dec
adcb
adc
pop
out
idiv
pushf
mov
jp
xor
dec
rorb
inc
inc
push
pop
xor
lret
jns
in
jle
in
ljmp
mov
mov
insb
in
mov
xchg
add
pop
ss
cld
dec
xchg
int
ss
jbe
fiaddl
pop
pop
jo
test
dec
icebp
push
int3
bound
fs
fstps
sbb
aas
cmpb
stos
jns
sbb
jb
adcl
lds
shlb
lods
sub
out
jl
pop
movsl
jecxz
test
aad
popf
negl
pop
ds
dec
jecxz
das
cs
iret
xchg
lds
push
loop
cwtl
aam
fcom
clc
out
popf
xlat
mov
aam
loope
in
repz
or
imul
or
xchg
cltd
dec
test
sub
test
lods
jb
jl
cs
sub
mov
xor
cmp
inc
xor
mov
dec
jp
mov
mov
add
outsb
mov
dec
shr
xchg
inc
inc
lcall
pop
mov
lret
jmp
addr16
fidivrl
shlb
lahf
add
adc
ret
push
push
ds
and
add
test
fcoms
pop
test
ret
push
dec
clc
scas
mov
jno
in
data16
pop
inc
mov
out
adc
mov
ljmp
or
and
repz
xchg
and
sarb
stos
cmp
jnp
jecxz
arpl
stos
lea
mov
mov
ja
xor
das
dec
sub
or
cmp
mov
jl
sub
add
sbb
dec
insl
loope
dec
test
cmpsl
dec
pusha
xchg
out
jg
test
out
insb
dec
std
mov
ss
push
jne
stos
and
mov
shlb
push
and
push
std
jns
cmpsb
stos
dec
frstor
sti
pop
insb
mov
pop
int3
sub
loopne
fsts
sub
or
test
sub
push
inc
pop
in
xchg
loopne
nop
js
inc
mov
push
push
imul
jne
mov
push
adc
xor
pop
fsubs
ret
shr
out
shrl
mov
in
mov
xor
jge
loope
inc
arpl
or
mov
or
cmp
inc
movsb
or
ss
pop
outsb
push
shr
lods
icebp
leave
imul
call
call
pop
sahf
xor
test
cmp
iret
imul
dec
inc
js
mov
cmpsb
cltd
add
out
dec
jmp
les
xchg
mov
cs
jbe
cmp
sbb
in
loop
faddl
inc
shl
jnp
repnz
jmp
jb
cmp
push
jns
and
insl
pop
enter
adc
cmpsl
push
push
sub
dec
ja
stos
popa
push
cltd
dec
ret
out
js
movsb
sub
xor
mov
cli
fwait
mov
into
jmp
inc
sub
inc
mov
and
mov
insl
out
push
pushf
mov
fsubp
xchg
mov
insl
iret
mov
add
cmp
daa
jnp
pop
pop
mov
es
adc
adc
lock
cld
mov
subl
rcr
lods
mov
das
sub
pusha
movsl
jbe
adc
out
jnp
inc
and
jl
inc
int3
fucom
or
push
xchg
loope
xchg
lret
sar
dec
sub
out
insb
fcmovu
mov
or
mov
nop
mov
ficoml
pop
scas
inc
fisubl
xchg
jmp
and
popa
add
inc
out
xchg
or
std
mov
push
xchg
ds
push
adc
xchg
dec
icebp
aam
clc
fwait
mov
cmp
inc
pop
inc
adc
mov
xor
sbb
mov
xor
mov
aaa
jnp
scas
les
loope
sbb
or
mov
jp
das
inc
pusha
push
inc
lds
fldl
div
pop
or
sub
dec
inc
jbe
insl
out
xor
pop
inc
pop
in
out
movsl
push
sub
movsb
aaa
sbb
shll
lret
inc
fistps
xchg
sub
fidivrl
je
sub
push
insb
and
int
mov
dec
inc
push
inc
mov
jno
fiadds
adc
lea
cmp
sbb
test
xchg
in
fst
rcrb
sub
cmpsb
in
pop
pop
push
ljmp
imulb
sub
sbb
adc
sbb
adc
pop
inc
jge
adc
lret
pop
and
adc
inc
push
mov
add
jbe
fdiv
xor
sarb
mov
shrb
stos
pop
xor
mov
shl
ret
cmc
sub
rorl
mov
movsb
jo
mov
push
jmp
pushf
mov
ret
mov
scas
and
int3
sub
les
shll
ret
add
xchg
pop
fildl
jbe
aam
out
sbb
scas
imul
cmp
add
stos
lahf
hlt
std
add
pop
dec
push
out
jbe
lods
aad
pop
sbb
mov
mov
xchg
sbb
push
mov
movsb
aam
push
dec
movsl
dec
inc
and
pusha
mov
add
arpl
stos
iret
adc
lcall
adc
xchg
cltd
adc
in
xchg
lret
mov
cmpsb
pop
jnp
std
and
cmpsb
pusha
in
loope
enter
mov
jmp
dec
push
jmp
mov
push
out
dec
jl
pop
mov
or
out
cmpsl
pushf
in
jp
scas
nop
sub
in
loope
fstpl
jmp
loopne
sahf
mov
stos
xchg
loope
lds
aam
push
out
mov
cltd
cmp
pop
push
adcl
jne
xchg
ret
xor
xchg
scas
fstp
cmp
mov
cltd
lahf
pop
mov
and
sbb
test
pop
cwtl
push
add
xor
notb
repnz
ret
xchg
mov
loopne
hlt
push
mov
inc
mov
shrl
cld
out
xchg
add
leave
cmp
jle
stos
dec
cmpsl
ss
es
jmp
testl
pushf
xchg
push
or
xchg
push
sbb
push
mov
dec
dec
or
or
push
outsl
adc
xor
ja
pop
add
sub
push
adc
out
outsl
push
cmpsl
lea
aam
movsl
sti
lret
aas
jle
ficoml
icebp
push
and
pop
lods
sbb
cmp
pop
jg
sbb
push
sbb
push
xlat
dec
lcall
lods
mov
arpl
and
pop
in
inc
test
and
jne
stos
in
and
xor
in
bound
shll
pop
pop
push
and
pushf
push
test
sbb
outsb
xchg
stc
adc
push
add
xor
sub
leave
and
insb
dec
rorb
mov
xor
and
push
rolb
dec
adc
leave
subb
inc
loop
mov
das
pushf
in
pop
ror
sbb
repnz
dec
sub
repz
lahf
push
ja
jg
pop
movsb
test
fcomps
lret
jg
in
pop
pop
add
cwtl
mov
adc
add
repz
mov
addb
lds
sub
pop
push
push
std
inc
and
test
cwtl
outsl
ffreep
mov
sub
fcoml
int
xchg
shll
mov
scas
test
dec
adc
xor
iret
int
or
shl
push
push
mov
iret
out
repz
adc
jnp
sbb
mov
inc
jbe
nop
push
sub
adc
or
pop
fisttpll
lcall
mov
push
pop
jmp
roll
cmp
cmp
sub
xor
addr16
pop
or
xor
hlt
rcrl
jae
jo
ja
bound
jge
or
nop
mov
movups
popf
inc
int
addr16
bound
dec
pop
lods
fstpt
cmp
je
push
mov
push
insb
mov
sbb
lock
in
lahf
fcmovb
sub
addr16
adc
out
in
dec
push
push
sub
push
mov
popa
popa
enter
lea
js
fldcw
movsl
xchg
shr
cs
ret
jb
test
loopne
dec
aad
jecxz
push
fwait
push
pop
mov
add
adc
sbb
hlt
dec
cmp
lcall
mov
les
call
jl
inc
mov
jo
adc
jo
jl
lret
lock
inc
mov
mov
cld
rorb
mov
imul
imul
jnp
dec
mov
popa
mov
stos
mov
imul
or
enter
popa
gs
aam
or
gs
push
mov
sub
add
or
mov
test
lret
jge
xor
inc
cmp
or
mov
jg
mov
inc
nop
cmp
push
mov
leave
xor
fisubl
lret
sbb
insl
push
inc
xor
jnp
repz
imul
scas
push
push
js
cwtl
dec
insb
aad
mov
clc
mov
fsubrl
jg
stc
xchg
jnp
mov
sub
repnz
arpl
jns
xchg
mov
lcall
and
xor
lret
mov
mov
sub
mov
in
jae
and
insb
dec
inc
xchg
sti
data16
cwtl
mov
mov
stc
dec
idiv
mov
mov
test
jp
sbb
es
cmpsl
in
jecxz
scas
and
shrb
std
sub
in
xor
in
bound
loopne
mov
je
mov
stos
mov
xchg
sub
stos
dec
icebp
out
cmp
ds
imul
or
push
jmp
dec
mov
mov
mov
push
lret
pop
ds
outsl
xchg
sbb
mov
jo
jecxz
scas
popa
fwait
call
adc
dec
loop
push
or
popf
addl
loope
mov
loope
stos
pop
fildll
push
repnz
jo
xlat
cmpb
inc
pop
xchg
es
in
hlt
adc
scas
mov
xor
dec
into
xchg
mov
and
jo
sub
dec
pop
je
mov
push
das
int
pop
pusha
imul
mov
int
inc
push
mov
in
xchg
jp
adc
push
and
sbb
insl
dec
xor
lret
mov
insl
xchg
sbbb
cmc
dec
fadds
mov
and
inc
outsb
jecxz
pop
mov
mov
rcrb
mov
insb
mov
data16
shll
or
push
and
fucom
mov
ret
bound
pop
or
and
pop
xor
cltd
icebp
pop
fidivrs
xor
sub
stc
add
and
mov
push
jne
and
mov
mov
or
shrl
out
push
popf
fidivrs
xchg
jbe
outsb
out
mov
outsl
fldt
push
push
ret
jecxz
push
cli
mov
aam
inc
inc
lods
xchg
mov
imul
jge
add
jnp
in
aam
sub
out
mov
fs
loopne
repnz
js
push
jmp
in
xor
xor
adc
xchg
xchg
adc
ds
enter
jo
mov
cli
mov
mov
push
inc
and
or
sbb
cmp
outsb
add
jl
mov
sbb
push
loopne
loop
stos
adc
xchg
adc
movsl
jle
aad
leave
aam
les
cmpsl
rol
sti
add
rorb
fwait
or
and
sarb
scas
and
push
push
int
imul
imull
xchg
mov
jl
or
lret
cmp
inc
movsb
jo
pop
sbb
cli
jno
aad
jo
pop
push
dec
inc
jne
xchg
jle
jmp
out
enter
dec
in
dec
inc
jbe
add
test
sub
imul
dec
or
mov
mov
clc
and
xchg
adc
imul
in
jnp
jle
jecxz
popw
mov
imul
dec
pop
or
inc
test
lds
mov
shrb
insb
add
fistpl
jl
sub
shll
pop
pop
mov
and
in
ss
cmp
xor
push
mov
pop
ljmp
and
pop
mov
or
lcall
mov
test
stc
xchg
jmp
pushf
mov
mov
push
xchg
scas
jno
mov
push
or
das
aad
sahf
mov
adcl
ret
rcrb
mov
loop
inc
inc
pop
stos
jnp
push
dec
cmp
add
jl
ds
push
mov
xchg
pop
shlb
add
xchg
stos
hlt
aad
jle
and
lahf
xchg
jg
inc
push
inc
sub
xor
pop
test
data16
outsb
inc
lcall
xor
push
mov
jnp
clc
subl
push
adc
movsb
adc
sub
push
fildl
lret
pop
cmpsl
mov
mov
leave
and
mov
cld
or
fmull
mov
mov
les
lock
sbb
or
ret
xchg
sbb
aad
rcl
cwtl
jns
fadds
fmull
mov
mov
lcall
adc
fldt
incl
filds
hlt
sbb
inc
sahf
mov
pop
lcall
inc
fbstp
mov
mov
int
pop
xor
or
test
shll
cltd
and
iret
std
push
or
and
adc
sub
gs
mov
rorl
mov
mov
pop
sarl
inc
push
inc
xchg
aad
push
test
rep
sti
mov
or
xor
fdivr
inc
cmp
fisubs
and
adc
xor
bound
in
xor
xchg
dec
cmp
cwtl
and
dec
out
lods
jae
stc
out
dec
mov
pop
push
fdivs
loop
out
push
jbe
roll
and
std
loope
mov
outsb
fcoms
adc
push
sahf
into
iret
jnp
hlt
into
jbe
inc
arpl
push
pop
icebp
sbb
xlat
cmc
dec
movsl
pop
sub
daa
int
in
mov
sahf
pusha
jge
outsl
inc
and
mov
rorb
jo
outsl
jnp
incl
and
outsb
and
push
mull
jbe
enter
inc
in
jl
faddl
ret
outsb
lret
jne
sti
inc
mov
pop
xorb
test
sub
add
sbb
jg
loope
dec
fnstenv
xor
inc
sar
mov
push
adc
dec
sub
xor
push
or
sbb
scas
pusha
sti
int
orl
shll
aad
out
int
les
test
in
ret
stc
sbb
push
bound
mov
xchg
dec
push
xchg
sarb
xor
mull
cmp
outsl
orb
movsb
and
mov
negl
xor
loop
adc
stc
loop
adc
imul
in
insl
jg
ret
push
int
or
loop
sub
sarb
cs
imul
add
xlat
and
fistpll
or
mov
sub
push
fisttpl
in
pop
sub
js
dec
outsb
push
push
insb
ds
outsl
pushf
es
push
cmpsl
es
jnp
push
inc
jne
lods
fisttpll
cmpsl
loopne
adc
adc
sar
pop
incb
test
lods
lock
ja
dec
mov
adc
gs
jg
mov
and
decb
push
loopne
cld
call
cmc
shlb
in
push
mov
mov
mov
fwait
xchg
lcall
insb
jns
cwtl
and
sub
and
sti
shll
test
and
cmpsl
jnp
sub
mov
ljmp
mov
mov
les
outsb
mov
add
push
mov
int
adc
into
ficoml
rorl
sub
test
xchg
xchg
mov
jge
das
xchg
int
js
xchg
push
pop
mov
fcomps
xor
cmp
xor
mov
jecxz
sub
jae
js
xor
xchg
sub
repz
sub
push
fcmovu
orl
test
mov
cmp
sub
sbb
jecxz
ret
sti
fwait
rcrl
dec
cmp
leave
outsb
out
jae
pop
sarb
xchg
inc
loopne
sbbl
insl
xchg
inc
lods
pop
orl
jp
les
xor
and
mov
rcr
xor
or
jle
scas
and
xchg
mov
sbb
js
mov
mov
xlat
jb
je
or
sub
add
lcall
or
inc
pop
repnz
jae
cltd
mov
pop
lea
dec
ja
mov
scas
or
sub
inc
xchg
inc
and
pop
mov
lea
pop
push
adc
xchg
aas
lods
lods
lahf
jmp
cmp
dec
stos
test
pushf
xchg
sub
sbb
push
push
inc
mov
jne
icebp
jno
or
push
not
xor
test
sub
repz
pop
mov
sbb
xchg
mov
and
inc
lret
mov
mov
pop
ficoms
in
fsubrp
xlat
jp
bound
sarb
jp
leave
std
cmp
insl
mov
std
mov
and
cmp
xchg
sti
and
sub
sbb
sbb
mov
insl
push
xor
pop
cmp
jge
stc
in
or
mov
mov
hlt
and
out
int3
bound
adc
jnp
pop
sbb
push
movsb
fwait
push
repnz
dec
leave
mov
sbb
imul
aad
adc
and
clc
imul
iret
xchg
jae
ja
adcb
out
xlat
cmc
lods
push
or
fidivl
add
mov
fs
push
enter
clc
into
sarl
sub
es
mov
push
int3
cmp
popf
and
call
xor
js
je
sahf
sbb
jno
movsb
hlt
cmp
out
jb
cmpsb
pop
mov
nop
add
inc
cmpsb
inc
int3
push
arpl
repz
ffreep
cmpl
add
es
js
jbe
cmp
stc
dec
test
pop
movsb
mov
adc
aam
cs
sahf
cwtl
arpl
adc
sbb
mov
sbb
cmc
cmp
inc
fadds
fwait
jns
adc
lods
movsl
mov
mov
or
xorb
adc
sbb
ja
sti
hlt
les
pop
and
cmp
xchg
les
cli
dec
jmp
push
mov
jo
in
mov
jmp
ror
mov
rol
mov
mov
push
cltd
push
clc
mov
pop
insb
mov
mov
div
push
mov
fcompl
jae
dec
stc
dec
and
rolb
lcall
push
sti
sarb
aas
cli
push
mov
sub
bound
xlat
cmp
inc
or
jge
mov
mov
and
sbb
adc
shll
call
jbe
and
and
mov
mov
in
jecxz
andb
in
or
test
sti
fnsave
mov
xchg
ret
jl
mov
ljmp
lods
ja
xchg
das
mov
lret
int3
shl
lds
or
int
out
lods
fistpl
dec
sarl
pop
push
movsl
jmp
fucom
mov
mov
cld
dec
cmp
pop
lea
lods
cmp
jmp
mov
mov
mov
xchg
jmp
out
dec
inc
mov
or
mov
cwtl
bnd
enter
adc
icebp
push
std
aaa
mov
mov
pop
sbb
inc
xchg
mov
xchg
test
fldcw
push
in
adc
mov
cli
pop
jo
mov
mov
jecxz
mul
and
ljmp
shll
ljmp
jle
cmp
mov
imul
cmp
aad
lods
mov
mov
mov
or
popa
sbb
sub
je
sbb
dec
jno
inc
xchg
fdivl
push
mov
push
push
test
cmp
cmpsl
jg
jle
imul
sbbl
cmc
push
into
dec
inc
cmpsb
mov
dec
push
adc
xor
das
sahf
mov
movsl
or
xor
shll
addr16
loope
movsl
out
push
sub
xor
inc
or
outsl
ljmp
loope
sbb
lret
pushf
inc
mov
inc
mov
jnp
cld
gs
sbb
mov
scas
add
dec
add
arpl
cwtl
pusha
jbe
cli
stos
scas
arpl
or
xor
out
or
lret
shlb
icebp
xchg
ret
in
in
imul
ret
xchg
cli
das
add
in
popa
imul
jo
iret
xchg
add
cmp
call
sahf
decl
dec
loopne
insl
adc
dec
in
sub
mov
std
xchg
ja
jmp
mov
jbe
call
rcrl
xor
xchg
bound
pop
sbb
xchg
and
js
cmp
push
loopne
les
loopne
cmc
dec
and
cmp
inc
jmp
out
or
insl
lea
rorl
arpl
xor
jmp
xchg
push
into
adc
mov
push
dec
add
lock
pop
sarb
jp
rorl
mov
in
mov
loope
push
aaa
insb
andl
test
push
idivl
sbb
repnz
cmpsb
or
loopne
ficomps
into
dec
cmpsb
xor
or
mov
loopne
sbb
push
push
mov
stos
pop
outsl
sahf
lcall
in
push
push
vpsubd
inc
xchg
dec
loop
test
push
cmc
sahf
xchg
mov
icebp
mov
clc
push
aad
jmp
stc
jmp
loop
loope
jge
js
pop
add
or
movsl
jg
adc
idivw
sbb
dec
jo
test
nop
adc
add
inc
mul
dec
cmp
lahf
cld
jg
dec
in
ja
cmp
lret
mov
bound
mov
pop
or
in
sbb
push
sub
mov
inc
sub
cld
push
into
xor
xchg
ds
and
add
push
dec
shl
aam
dec
cltd
xor
xor
xor
adc
enter
hlt
inc
mov
lcall
mov
mov
aad
dec
adcb
daa
or
mov
call
xchg
and
div
mov
cmp
outsl
pushf
lret
pop
cmp
sub
fidivrs
xlat
cltd
call
jecxz
ds
push
icebp
cs
repz
out
enter
push
mov
mov
mov
or
std
adc
mov
inc
cli
pop
push
rclb
add
adcb
mov
xchg
or
or
or
mov
out
mov
adc
push
pop
fdivrs
inc
xlat
or
xchg
outsb
loope
or
mov
mov
and
lret
jecxz
sahf
dec
cmp
stc
nop
mov
push
lods
push
dec
std
xchg
in
cmp
xor
jns
jg
arpl
scas
icebp
jb
adc
add
dec
mov
mov
xchg
push
mov
sub
pop
add
xor
jb
gs
outsb
xchg
cld
adcl
push
cli
jmp
add
xorb
outsb
xchg
lock
stos
lea
cs
xor
sahf
jnp
sbb
inc
cmp
mov
aam
outsl
ficompl
rcl
fwait
insl
pop
cwtl
or
sub
jbe
push
cwtl
sbb
cmpsl
int
dec
negl
sub
inc
jmp
stos
popf
jmp
mov
dec
push
xor
xor
jge
rcr
push
mov
loop
and
aam
mov
insl
mov
in
into
xchg
or
inc
push
sbb
push
cmp
pop
arpl
cmp
test
repz
and
push
pop
and
cli
push
and
mov
jg
jb
inc
xchg
and
into
ljmp
add
pop
adc
xlat
pop
gs
mov
sub
push
mov
mov
push
xor
cmp
outsl
xchg
cmp
sbb
lods
add
lock
addr16
pusha
push
mov
push
cmp
xor
leave
mov
aas
inc
les
mov
mov
negb
jnp
mov
jnp
pop
scas
bound
jmp
inc
pop
and
cmp
push
mov
mov
cmp
stc
lds
cmc
fildl
in
mov
mov
jecxz
fs
cwtl
scas
stos
push
push
enter
jl
sbb
sbb
inc
enter
xor
jle
sub
cmp
jbe
add
add
sahf
xchg
cmp
pop
or
in
dec
adc
mov
xor
ss
movsl
sub
push
xchg
jns
dec
inc
mov
call
jg
aad
mov
aas
jae
inc
push
jg
cmpsb
adc
ja
sti
jo
aad
cmpsb
jecxz
aad
inc
mov
lea
mov
sub
mov
push
push
lret
xor
mov
jno
dec
ja
sarb
fldcw
ret
and
and
or
or
ficomps
ja
dec
xchg
dec
insb
les
idivl
movsl
nop
xlat
or
dec
in
inc
out
add
push
pusha
decl
push
xchg
xor
sub
push
pusha
inc
jecxz
roll
sub
call
xor
sub
sbb
rcrl
push
insb
cmpsl
and
insb
add
stos
mov
mov
xor
add
lret
shll
andl
scas
xchg
sub
out
add
mov
fcoms
sbb
loopne
or
fcoml
aas
popa
dec
js
xchg
mov
cltd
ja
add
jns
icebp
pop
mov
shrl
cli
movsb
nop
aam
inc
mov
aaa
push
push
ss
outsb
filds
pop
in
add
lea
inc
int3
and
stos
cmp
cmp
xor
pop
inc
bound
push
mov
fdivp
push
dec
or
push
xor
jnp
test
push
cmp
and
arpl
aad
mov
imul
js
bsr
leave
lahf
cmc
shrl
mov
insb
scas
divl
in
add
jae
fs
aaa
add
test
jl
idivb
xorb
aas
cmc
aad
loope
daa
cwtl
insl
sub
sub
jno
xlat
cmp
mov
sub
mov
mov
stos
in
mov
leave
cmp
xchg
fnsave
add
outsb
jp
cmp
mov
sub
loop
into
push
and
mov
cmc
push
cmpl
aaa
xchg
cli
pop
inc
mov
js
sub
inc
jae
arpl
push
xchg
push
xchg
das
push
pop
stos
pop
dec
adc
ret
pop
js
scas
scas
leave
adc
push
lret
mov
fadd
out
xchg
insl
xor
cmpsb
cmp
sub
adc
hlt
mov
inc
xor
sbb
pop
dec
addr16
movsb
mov
sub
sbb
test
cltd
cmp
jnp
ja
cmpsl
insb
or
pop
inc
mov
repz
mov
fs
dec
fs
cld
or
lds
stos
mov
std
lds
dec
stos
push
fs
xchg
push
aaa
rclb
cmpsb
xchg
cmpsb
cmp
test
jl
cwtl
mov
imul
mov
movsl
pop
into
mov
test
cmp
fxrstor
xchg
dec
ja
ret
mov
loope
lret
dec
dec
mov
mov
push
lods
xchg
cltd
jmp
shrl
sarl
mov
clc
jns
cmp
shlb
in
adc
data16
fisubs
sbb
push
xor
and
hlt
cmpsl
mov
jo
jnp
pop
out
das
fdivrp
sbbb
popf
pop
shl
test
xlat
aam
jnp
push
pushf
jb
rol
mov
jp
or
stc
fstpt
stos
jecxz
int3
inc
das
stc
lock
jbe
push
xchg
dec
xchg
jl
sarl
scas
xchg
xorb
insb
idiv
clc
dec
xor
lock
add
into
lock
cmp
sbb
push
adcb
and
outsl
dec
mov
loopne
mov
mov
pop
sbb
loop
stos
inc
pop
int3
lods
sbb
xchg
mov
test
loope
aad
dec
lds
outsl
scas
jne
xchg
jl
cli
jae
mov
xorl
lea
rep
mov
es
cld
mov
jmp
or
sbb
rorb
mov
mov
fdivrl
fs
sahf
xchg
out
cmc
jle
add
lds
bound
movsb
fildll
das
fimull
jne
mov
mov
cmpsl
inc
xor
fiadds
cli
sub
push
stos
mov
push
cli
mov
call
mov
pop
dec
ss
or
jge
loope
je
pop
mov
mov
pop
and
outsb
sbb
add
xchg
lcall
or
int
loope
pushf
push
or
or
or
sahf
mov
jne
in
sbb
cli
jmp
mov
std
fists
xchg
mov
int3
jb
lods
les
mov
int
fildll
inc
insb
lahf
inc
aam
rcrb
cmpsl
leave
mov
lock
cs
fistpll
ljmp
out
adc
shll
dec
or
dec
mov
ds
rorl
xchg
hlt
aam
inc
cwtl
ss
or
into
addr16
mov
loop
dec
hlt
aam
jb
inc
mov
lods
xchg
push
jge
cli
imul
lret
xchg
ds
call
inc
mov
lods
xor
adc
jge
xchg
aaa
shrl
int3
sbb
sahf
jmp
aam
scas
arpl
stos
imul
add
dec
cmp
cmpsb
mov
cmpsl
dec
sub
pop
push
test
lods
ret
in
mov
push
dec
add
les
dec
stos
lods
int3
mov
sub
mov
cmp
sub
shlb
pusha
sub
pop
lret
and
and
repnz
jmp
pop
aas
pop
dec
dec
dec
jae
xchg
inc
mov
and
push
cld
lcall
js
cld
jg
ds
jae
and
cmc
push
leave
pop
jl
adc
sbb
cli
jmp
pop
into
das
into
jbe
negb
jg
sub
stc
inc
stos
mov
xchg
jo
xor
sub
xchg
into
scas
add
push
jmp
sbb
xchg
std
or
popa
and
in
insl
lret
cmp
data16
cwtl
add
lcall
mov
lcall
inc
sbb
push
outsl
cmc
daa
movsl
push
xor
lret
push
ss
aam
mov
cmp
fcomi
xor
xchg
fiaddl
ljmp
sbb
sbbl
mov
int3
dec
lret
inc
cmp
cmc
aad
movsl
leave
arpl
dec
and
inc
fwait
xchg
cmp
sti
sbb
popf
cmp
fbstp
or
push
stos
imul
push
xchg
mov
loopne
in
push
cmp
inc
jl
and
les
mov
jp
out
flds
ljmp
jecxz
lahf
mov
add
in
xchg
xor
std
cmp
leave
ret
popf
xchg
or
cmp
add
sub
sub
lret
add
jo
push
sbb
mov
bound
mov
rorl
adc
sbb
lods
push
add
push
pop
jge
test
dec
push
xchg
pop
mov
adc
push
or
incl
jmp
ljmp
dec
dec
mov
push
mov
lcall
mov
inc
push
repz
in
arpl
out
lods
xor
xor
push
jo
xlat
push
cmpsl
xor
lahf
mov
ja
enter
mov
ljmp
mov
cmp
or
mov
jl
mov
unpckhps
sub
and
dec
cli
mov
pop
xchg
mov
cli
mov
jns
hlt
pop
invd
jae
adc
push
xor
pop
sub
imul
iret
jmp
xor
and
mov
lock
out
out
cltd
mov
insl
sbbl
lods
fdivs
movsl
lds
icebp
pop
mov
adc
fmull
xor
push
dec
sub
dec
pop
pop
sub
jmp
mov
rcll
clc
xchg
cmp
or
mov
scas
adc
fisttpl
lds
faddp
lods
stos
push
cmp
out
ret
pusha
std
jmp
loopne
sbb
jge
push
shrl
sub
cmp
sub
sbb
and
rclb
sbb
dec
dec
cs
movsl
jmp
sahf
mov
rorb
push
jl
inc
sbb
cmpsb
push
mov
mov
aad
inc
or
insl
call
ja
mov
mov
movsb
repz
sbb
cmp
dec
outsb
stos
leave
loop
scas
jmp
in
mov
push
es
push
idivl
dec
xchg
ds
xor
stos
fs
aam
or
mov
jl
and
mov
nop
cli
cwtl
sub
mov
mov
or
loopne
inc
aaa
out
mov
out
dec
push
sbb
and
loope
nop
pop
gs
pop
pop
pop
rorb
jno
mov
adc
mov
lds
cwtl
cmp
push
test
mov
scas
adc
mov
jns
rcrb
push
lods
push
inc
in
scas
bswap
icebp
mov
jno
jmp
mov
ja
jp
imul
mov
hlt
lods
push
cmp
mov
dec
push
cmc
and
xchg
das
push
fidivs
outsb
sbb
lock
call
adc
cmp
shrl
sub
insb
jp
jmp
das
and
cltd
lock
jbe
jge
pop
lods
jmp
mov
fbstp
fwait
in
pushf
cmp
je
sub
add
xchg
sub
imul
sub
sarb
daa
movsl
adc
out
insb
sahf
push
fmul
in
push
test
fwait
jo
cmpsb
mov
cs
daa
mov
dec
into
js
push
xchg
mov
xchg
jle
js
add
dec
add
loopne
add
mov
xchg
push
dec
xor
xor
adc
adc
push
leave
or
in
imul
push
addl
in
jle
mulb
and
cmp
std
pop
mov
test
inc
imul
mov
enter
mov
lret
push
xchg
add
pop
mov
test
dec
cmp
subb
sbb
cmc
enter
adc
xor
xchg
mov
inc
mov
mov
push
cmp
in
movsb
add
int
pop
push
ds
sub
dec
jg
add
push
lahf
inc
jge
add
je
pop
sub
inc
push
out
dec
addr16
out
pop
insl
push
mov
xchg
push
sub
test
notl
mov
popf
mov
fdivr
stos
push
jge
adc
and
jmp
mov
or
js
dec
push
mov
dec
ret
xlat
xor
cli
push
or
mov
mov
jl
dec
and
arpl
test
jge
loopne
stc
mov
adc
jae
leave
ret
int
push
mov
iret
mov
out
inc
push
cmpl
push
subl
xlat
test
mov
xchg
cltd
cmp
push
inc
push
dec
mov
dec
or
adc
mov
dec
movsl
jns
ss
lods
dec
aas
push
jne
jb
mov
push
push
int
ret
hlt
dec
add
sub
xor
jno
outsb
mov
xchg
push
jbe
add
test
lahf
je
mov
cs
lds
jmp
arpl
mov
je
push
mov
iret
mov
fimuls
fsubrs
hlt
incl
mov
outsb
mov
stos
lret
dec
insl
jo
out
out
out
fsubl
aaa
jle
jmp
jo
movsl
lds
jecxz
test
lret
and
lds
mov
out
stc
sbb
pop
jbe
mov
mov
xchg
sub
push
sti
loope
test
jecxz
shr
call
pop
data16
sbb
enter
adc
push
or
into
in
pop
dec
ffree
push
repz
push
mov
cmp
fcmovbe
mov
imul
rcrl
fcmove
mov
inc
dec
in
sbb
aas
inc
mov
cmp
mov
lret
ds
jns
les
dec
add
clc
push
pusha
xor
jbe
mov
scas
iret
lea
fs
xchg
int3
aaa
faddp
cmpsb
adc
and
sbb
iret
jbe
pusha
in
mov
sarl
inc
adc
mov
xor
inc
cmp
call
xchg
adc
xor
cwtl
pusha
ljmp
dec
or
jno
fs
addr16
xor
inc
xchg
sbb
push
daa
inc
lock
cmc
push
jmp
dec
xchg
scas
aad
and
xchg
out
ja
push
popf
cli
xor
aas
jbe,pn
aad
jae
in
js
icebp
popl
jmp
xor
push
jg
inc
mov
add
fwait
xchg
cmp
sahf
scas
inc
ss
push
in
xchg
ret
xor
js
mov
test
adc
and
pop
into
leave
pushf
or
outsl
jae
dec
std
mov
insb
in
rolb
rol
imul
test
pop
xchg
loopne
sbbb
inc
or
test
gs
lret
dec
stos
call
jne
xor
insl
cmp
call
jle
mov
sti
adc
adc
pusha
and
adc
pop
mov
inc
push
mov
sub
jmp
cmp
mov
inc
clc
fisttpll
mov
mov
jo
jp
pop
adc
mov
sub
add
aam
imul
or
mov
push
jp
pop
out
dec
push
pushf
ds
mov
inc
popl
jle
inc
pop
cld
adc
ret
push
aad
push
loop
cmp
jne
mov
lods
ja
sub
lahf
mov
ds
lods
mov
rcll
xor
leave
mov
cmp
inc
das
mov
rcrb
ds
push
add
loopne
lret
popl
shlb
int3
lds
ss
push
mov
add
or
fs
xchg
into
aad
dec
pop
mov
pop
decl
repnz
sbb
inc
gs
xor
into
xchg
or
push
pop
pop
mov
pop
xor
cmp
mov
in
xchg
inc
int
mov
mov
push
leave
jge
aaa
ret
push
and
ror
pusha
sahf
push
mov
add
stos
cmp
dec
cmp
or
outsl
movsb
test
pop
ss
add
push
rcrb
loopne
xlat
dec
xchg
sub
loop
inc
push
stc
xchg
into
or
scas
dec
ja
xchg
mov
pop
or
test
jns
inc
push
je
cmpsb
dec
ficoms
xchg
repnz
inc
cmp
adc
addr16
jge
stc
or
andl
rcrl
cli
xor
xchg
je
jge
nop
aaa
mov
fisttps
adc
adc
outsb
jmp
popf
push
mov
and
push
add
imul
repnz
jae
rcl
ljmp
divl
rcrl
pop
div
insl
push
cmc
arpl
jbe
mov
scas
push
cli
and
gs
mov
xchg
sti
dec
shrb
dec
cmp
inc
mov
ret
sub
add
call
fsubs
cmpps
nop
stos
dec
ljmp
jmp
push
cwtl
fildl
jns
sbb
xor
inc
and
lahf
das
push
fidivrs
add
fidivrl
cmpsb
or
test
aam
mov
lahf
push
pop
or
or
sbb
popa
into
lret
rcll
or
enter
push
jnp
inc
fsub
sbb
add
push
push
fs
jp
mov
mov
cmpsb
lods
orl
lret
mov
and
lret
icebp
push
mov
repnz
xchg
push
mov
pop
sbb
cmpsl
lds
movsb
stc
add
adc
jp
stos
push
push
pop
jmp
jns
push
add
push
pop
pushf
jno
pop
xor
xor
xor
sbb
mov
add
outsb
les
jmp
mov
cmpsl
stos
dec
push
nop
shlb
pop
aaa
test
xchg
mov
push
mov
inc
in
mov
add
orl
fstl
inc
mov
push
in
mov
nop
xchg
cmp
jp
or
dec
sub
pop
jge
inc
pop
idivl
mov
adc
outsl
cli
sbb
mov
ja
ss
cmp
inc
in
fbstp
les
xorb
lahf
repz
fld
in
leave
ds
dec
lock
mov
lret
mov
dec
iret
pusha
push
fildll
sbb
popf
repnz
mov
jb
stos
push
cld
jge
aad
cmpsb
jmp
pop
movsl
or
mov
sub
sbb
push
push
rorb
sbb
mov
xchg
les
mov
test
or
adc
fistpl
scas
sbb
fnsetpm(287
sbb
les
inc
add
push
movsb
adc
xchg
push
insl
shrl
incl
fists
cmc
repz
cmp
cmp
mov
dec
out
stos
push
xchg
in
add
jo
dec
jl
sub
or
fs
jne
ss
pop
adc
loopne
popf
ret
in
add
cltd
adc
sbb
sbb
pop
imul
clc
int3
adc
mov
inc
pop
fnstenv
dec
sbb
dec
fsubrp
xchg
and
rcrb
movsb
cmp
dec
aas
or
ljmp
xchg
adc
jno
push
ja
xor
imul
jle
or
cmp
cmpl
mov
cld
std
lcall
push
mov
stc
bound
sbb
fisttpl
ror
cmp
xlat
scas
aad
xor
enter
into
pcmpeqb
mov
sub
sahf
sub
xchg
mov
cmpsl
xor
lds
mov
push
mov
out
add
dec
push
lcall
push
pop
movsl
test
xchg
aam
pop
enter
js
pop
loopne
popf
add
mov
cmp
mov
adc
mov
inc
sub
jge
clc
mov
add
je
xor
jecxz
push
test
jecxz
pop
ja
or
insl
aam
mov
sbb
jl
xchg
call
or
ljmp
jo
cltd
sbbl
jg
sub
loop
outsb
lock
aaa
push
lret
or
les
cmp
cli
mov
push
ds
dec
in
xchg
xchg
sahf
scas
xor
mov
jl
imul
mov
dec
sbb
mov
mov
lret
insb
dec
cltd
pop
mov
and
jb
cmpsb
jno
out
insl
in
jp
dec
movsb
ds
mov
lods
sahf
test
xchg
aam
jo
dec
xchg
bound
icebp
cld
adc
std
dec
imul
das
mov
or
sub
jae
and
jno
and
enter
xchg
loopne
in
xlat
or
xor
repz
pop
hlt
in
pusha
insl
xor
dec
test
rcl
dec
xor
lahf
popa
pop
sub
out
jge
push
mov
shll
adc
cs
pop
out
cwtl
aaa
sub
mov
xchg
mov
inc
pop
adc
pop
adc
adc
inc
mov
outsl
scas
loope
cmpsl
arpl
orb
gs
sahf
pop
xor
mov
or
mov
movsb
nop
pop
lods
inc
add
adc
jmp
sub
test
ja
sbb
mov
mov
inc
mov
aas
test
int3
das
pinsrw
addr16
cli
push
outsl
in
sbb
cmp
mov
hlt
std
loope
xchg
sbb
dec
xchg
fldt
mov
push
inc
orb
mov
cmp
arpl
rcl
out
test
jo
lock
and
mov
in
sbb
loopne
lret
sbb
cmc
int3
int3
test
pop
pushf
pop
daa
mov
mov
inc
hlt
xchg
mov
pop
int3
lock
mov
or
inc
sub
pop
xchg
jo
dec
nop
xchg
sti
mov
roll
and
xor
push
movsl
dec
cld
cmpsb
jp
pop
mov
jae
xchg
or
outsl
aam
or
in
cltd
mov
jb
mov
imul
stc
cmp
sub
xchg
jle
xchg
cli
fidivl
pop
fdivrs
mov
jl
enter
ja
mov
inc
or
int3
test
push
sbbl
mov
popl
inc
cmp
mov
sub
pusha
ret
or
pop
xorl
scas
pop
cmp
gs
jbe
sbb
xchg
mov
dec
sbb
inc
push
or
pop
xor
xchg
mov
push
loope
and
jge
jmp
inc
into
jno
frstor
push
push
ret
aad
cwtl
ret
mov
dec
xchg
xor
add
mov
xor
dec
rol
cmp
jmp
repnz
jne
cld
rolb
test
imul
fs
pop
lds
adc
xchg
mov
movsb
xchg
clc
and
scas
in
push
scas
xor
push
or
lret
addr16
add
cltd
jne
adc
aam
mov
mov
xor
jno
repz
and
inc
jne
pop
rcrb
repz
dec
sbb
dec
addb
sahf
rol
mov
or
cmp
out
jne
mov
xorb
in
cli
mov
out
lret
movsl
xor
loopne
fdivrs
add
mov
out
mov
push
sub
sub
lods
xchg
inc
or
scas
iret
imul
sub
push
push
cmp
add
lds
andl
mov
dec
cmpsb
rorb
mov
inc
push
cmp
outsl
jae
mulb
out
pushf
cmpb
jns
fs
xchg
fldcw
xor
test
xchg
xchg
push
jp
out
in
mov
in
inc
cmpl
inc
pop
in
imul
pop
pop
jae
jae
ret
adc
push
aam
mov
negb
push
out
rorb
pop
mov
xor
push
push
retw
ss
aaa
or
adc
sub
sub
bound
data16
mov
sub
shrb
and
inc
inc
imul
xchg
pop
popa
out
xchg
stos
adc
fisttpl
jl
icebp
pop
fbld
test
sbb
aaa
or
repz
insb
mov
lret
dec
in
xor
adc
dec
mov
jge
jle
fcoml
shrb
jo
lret
sbb
mov
sub
ret
aad
out
repnz
xchg
dec
mov
xchg
mov
lcall
loope
push
sbb
cmp
jp
xchg
adc
add
cmpsl
mov
jecxz
ja
xchg
xchg
and
mov
imul
inc
mov
addl
sbb
sbbb
mov
mov
cltd
cmpsb
outsl
insb
mov
test
rcrl
in
mov
call
inc
arpl
dec
dec
cmpb
inc
pop
ds
daa
arpl
fnstsw
mov
pop
loop
lock
or
mov
jmp
push
xchg
stos
push
sub
mov
add
dec
fisttps
mov
leavew
scas
sbb
mov
repz
adc
mov
aaa
callw
jno
adc
aaa
ret
js
or
mov
cli
lcall
stc
ljmp
jmp
repz
jne
jecxz
sbb
repnz
dec
xor
cmpsl
cwtl
shl
mov
test
inc
push
mov
or
test
push
mov
jne
cmp
xchg
xchg
outsl
sbb
imul
xor
shrb
cmp
mov
setg
daa
outsl
addl
pop
pop
enter
fcmove
test
fsubr
and
fwait
jne
push
ljmp
mov
lock
bound
mov
fidivrs
xchg
or
stos
aad
test
popa
fidivl
in
gs
testl
mov
sbb
fs
movsl
scas
jle
mov
notl
sub
cmp
lcall
jno
and
arpl
cmc
adc
ffreep
fildll
clc
mov
adc
jo
sub
ss
and
adc
xor
jnp
dec
sbb
dec
roll
or
add
in
jnp
push
mov
and
push
bound
das
mov
mov
call
cmp
loop
mov
adc
sbb
in
out
pop
push
mov
lds
repz
cmp
js
rcpps
pop
inc
stos
push
push
push
xchg
push
dec
rcrl
inc
jl
ret
dec
and
or
jl
cmpsb
fs
or
push
add
cwtl
jns
inc
repz
xchg
scas
js
inc
enter
inc
addl
shr
or
js
in
sbb
push
aas
mov
cmc
push
in
jno
divl
movb
sub
iret
xorl
jmp
fwait
in
mov
cmc
cmp
xchg
jmp
movl
shll
xchg
ret
dec
int
mov
xchg
popf
imul
jns
lea
mov
add
je
xchg
mov
xlat
icebp
mov
sarb
cmpsb
jno
lods
and
pop
cmp
sbb
push
cli
fnsave
cmp
lret
fwait
out
push
test
push
in
andl
sbb
add
dec
rolb
fsubr
jge
outsl
add
outsl
adc
push
or
orl
add
out
push
push
cmp
pop
cli
mov
cmpsl
cs
jge
addr16
sti
call
dec
ret
lods
mov
lods
loopne
movsb
rorb
jo
mov
pop
mov
jmp
ret
or
sbb
ret
jns
pop
repnz
mov
dec
mov
rolb
repz
xchg
inc
jnp
cmpsl
inc
loop
jbe
inc
and
shrb
or
aam
mulb
and
sbb
cmc
ficoml
cmp
fstps
or
and
sarl
es
cli
in
sbb
fisubrs
lcall
jnp
xor
and
ret
mov
sbb
adc
in
mulb
xchg
jp
xlat
xchg
push
sbb
mov
or
mov
fcoml
loopne
aas
push
mov
inc
push
pop
nop
xlat
sti
push
cmc
sbb
lret
lods
or
sub
adc
out
push
std
shrb
cmp
lahf
jne
mov
sub
mov
cmpsl
int3
pop
shrb
fwait
sub
dec
or
pop
mov
mov
pushf
push
lret
xchg
or
mov
inc
sub
aad
adc
jnp
mov
cmp
jge
sub
pusha
pop
sbb
cmc
adc
or
ret
insb
mov
std
sub
imul
push
lods
jo
sbb
aad
cmp
adc
jecxz
movsb
repnz
js
je
mov
jno
xchg
cmpsb
sahf
push
mov
or
lea
sub
inc
ja
lahf
mov
or
js
dec
mov
fs
inc
test
or
jle
cld
xor
xchg
pop
js
cmp
xchg
xchg
push
pushf
mov
cmp
push
sti
pop
call
push
or
inc
mov
mov
int
pusha
inc
adc
mov
add
sbb
hlt
fs
cmp
mov
les
pop
inc
sub
mov
gs
cmpsb
addr16
decl
pop
dec
movsb
xor
pop
inc
rcrl
add
in
pop
cs
out
sbb
lods
out
lods
cli
dec
xor
neg
or
pop
pop
ja
sub
leave
fldenv
les
xor
adc
and
adc
sub
push
jae,pt
dec
inc
in
outsb
les
fimuls
inc
add
aas
sbb
cmp
sub
pop
das
pop
push
stos
and
inc
sub
mov
mov
push
repz
fldl
rclb
inc
mov
shll
cmp
mov
mov
mov
aas
mov
lcall
cmp
addb
cmp
push
jp
ret
in
add
cmp
inc
mov
jnp
aad
cmpsb
jmp
push
dec
cmpsl
adc
mov
push
xchg
sub
and
fisttpll
loope
incb
jmp
stc
enter
push
andl
add
sbb
push
rol
je
cwtl
das
lahf
inc
push
xor
cmp
insb
int3
cmp
or
insb
imul
or
cs
mov
inc
gs
loop
jg
sub
ret
sbb
or
icebp
rclb
xchg
mov
arpl
das
clc
and
lret
ret
js
test
std
add
jb
and
xor
insb
fwait
inc
jb
dec
in
inc
xor
inc
loop
lret
adc
scas
aas
push
jecxz
pop
lods
jbe
inc
stc
pop
cli
or
adc
xor
mov
jb
xor
test
testl
je
jmp
dec
addr16
xchg
xchg
push
fldt
and
aad
xorb
lcall
sub
rorl
sbb
inc
mov
jnp
cmp
enter
push
mov
jg
bound
jp
insl
in
sbb
pop
clc
addr16
mov
fdivrs
std
push
push
icebp
jae
arpl
inc
movsb
inc
mov
inc
xchg
es
sub
and
int
mov
dec
subl
les
std
xlat
mov
loopne
mov
dec
cmp
testb
mov
add
mov
push
std
shll
jge
push
pop
out
xor
scas
xor
out
cwtl
mov
fiadds
push
jg
or
in
and
jmp
inc
adc
sub
lahf
or
sub
into
and
push
fdivrs
ljmp
neg
fstpt
mov
cmpsl
movsb
ret
lock
pop
test
stos
cmp
push
scas
push
das
dec
cmovs
inc
xchg
mov
sub
std
pop
cs
mov
int
xlat
cmp
adc
jo
rorb
lcall
stc
adc
pushf
pop
cmp
cli
sahf
pop
pop
insb
inc
cmpsl
lods
in
insb
sar
add
test
hlt
sub
jo
mov
test
filds
pop
pop
push
jne
mov
xchg
cmp
aas
inc
jmp
mov
lds
lea
je
dec
gs
sub
sbb
stos
pop
add
arpl
addr16
or
sub
data16
push
adc
mov
xlat
pop
or
icebp
imul
pop
jo
outsl
jmp
cmp
lods
out
xor
rolb
adc
pop
dec
jle
and
xlat
push
pop
addr16
cmp
pop
psrlw
or
loope
mov
adc
lods
push
inc
ficomps
mov
stos
push
mov
push
dec
mov
insl
iret
int3
or
das
add
and
push
add
dec
jmp
bound
loopne
test
xchg
nop
inc
movsl
stos
scas
and
fcoml
clc
fdivl
cmp
ret
jns
inc
ss
sub
and
ret
mov
dec
sbb
stc
cmp
adc
rorl
lret
mov
lods
imul
dec
ljmp
ss
fs
sub
std
loope
add
inc
ds
add
jecxz
and
xchg
push
in
hlt
sub
push
push
mov
std
std
xchg
stc
cmp
cmp
add
jmp
cwtl
mov
pop
dec
xchg
roll
mov
sub
add
fidivs
sti
sub
sub
and
and
aas
and
sahf
fs
xor
xchg
aaa
xchg
es
add
cmp
movsl
movsbl
int
cmp
inc
dec
cmp
xchg
lcall
shl
sbb
sub
fcomps
movsb
add
or
mov
pop
cmp
dec
movsl
mov
fcmove
shll
cmp
inc
stc
aas
mov
add
pop
imul
imul
or
sbb
jg
out
adc
scas
fistpl
mov
lods
leave
cmp
dec
mov
decb
xlat
cmp
insb
arpl
orl
pop
adc
inc
cmp
xchg
fadds
add
adc
lret
pop
lea
iret
sarl
enter
mov
cmp
cs
adc
add
popf
inc
stos
add
lock
mov
mov
sbb
in
inc
xlat
fsts
jmp
mov
sbb
into
xor
ja
movsl
flds
bound
jecxz
jb
out
fdivr
adc
popa
scas
bound
sub
icebp
jae
mov
test
xchg
or
loop
cmc
sub
outsb
or
jle
jno
fucomp
adc
pop
lcall
xchg
adc
xor
movsl
adc
mov
jmp
cld
lret
dec
call
adcl
mov
sti
leave
or
add
adc
je
scas
push
dec
stos
and
in
test
jl
pop
stos
call
xchg
mov
in
jg
jo
out
out
addr16
fsubs
cmpsl
clc
push
xchg
cmp
cmp
push
hlt
int
jle
xchg
inc
test
repz
and
sbb
add
loop
out
mov
arpl
inc
fiaddl
pop
inc
push
xor
rclb
orl
fwait
andl
add
stos
or
mov
psubw
repnz
or
lcall
xchg
iret
notl
fisubrs
fnsave
adc
outsb
jbe
shrb
dec
cwtl
mov
push
pop
inc
push
xor
inc
rorl
xchg
pop
ds
call
jge
mov
dec
sub
cltd
popf
out
push
insb
or
pop
xchg
mov
clc
mov
rorl
cwtl
push
and
jge
mov
and
scas
and
bound
mov
inc
fisubrl
sahf
incl
mov
sub
outsl
pop
or
sub
or
cs
lahf
or
jb
sub
and
lret
xchg
dec
mov
xor
pop
mov
push
pop
or
in
int
xchg
mov
ja
mov
ror
adc
mov
pusha
dec
mov
jp
jecxz
dec
fistl
test
nop
xor
imul
rol
jmp
popa
loope
or
in
mov
push
pop
and
outsl
dec
out
jecxz
xor
jle
adc
xor
fildll
sub
lea
mov
scas
lods
and
insl
adc
fbstp
mov
test
shl
pop
js
movntps
ja
xor
and
std
cmp
imul
js
and
mov
pop
or
loope
cld
fisubrl
imul
push
addr16
or
ja
push
pop
jge
inc
sub
cli
adc
in
mov
jge
mov
sbb
jo
xor
out
jae
aas
pop
xchg
cli
jnp
mov
sub
fdivr
jmp
jl
lahf
iret
jne
movsl
int3
sub
cmpsb
jbe
mov
xor
mov
add
adc
in
sub
insl
dec
andl
int
pop
push
cmp
jmp
sub
popa
jnp
mov
gs
std
jns,pt
insb
jnp
test
rolb
push
jo
pop
sar
lock
outsl
repz
cmpsb
aas
xchg
xchg
adc
addb
loopne
and
jecxz
mov
adc
jmp
lret
add
test
pop
in
add
clc
xchg
mov
int
cld
cmc
arpl
sarb
test
or
mov
scas
sbb
outsb
sbb
pop
fwait
movsl
pop
mov
in
sub
fcmovne
or
jecxz
pop
sub
push
and
inc
push
aam
dec
mov
das
stos
or
cmp
pop
popa
jno
push
pop
jae
mov
or
bound
jb
mov
ljmp
push
test
and
mov
test
je
push
lret
mov
mov
sub
cmp
pop
add
enter
xor
popf
sbbl
pop
jb
cmp
mov
ja
inc
cmpsb
jno
stos
dec
pmullw
in
mov
stos
push
cltd
xchg
insb
imul
enter
xor
mov
cmp
jle
daa
mov
push
pop
orl
cli
dec
popa
xchg
jae
mov
hlt
gs
cmpsl
in
mov
repz
cmpsl
je
jb
outsl
push
fisubrl
cld
sbb
ret
mov
enter
mov
jp
add
fldenv
hlt
xor
popa
icebp
xchg
mov
enter
mov
mov
movsb
xor
jae
adc
push
dec
ret
hlt
das
sbb
jl
mov
add
aaa
pop
add
test
inc
ret
lcall
sub
jae
fwait
out
pop
je
mov
int
je
sbb
push
pop
mov
in
xlat
fnstsw
mov
jb
cbtw
inc
fdivs
xchg
sub
inc
pop
jg
dec
ja
leave
mov
call
mov
dec
pushf
lcall
divb
out
mov
jae
lcall
inc
shr
push
leave
xchg
mov
push
mov
pop
xor
loop
ret
clc
outsb
call
divl
mov
aas
or
jnp
je
int3
jbe
jl
ja
test
adc
inc
fistl
ret
push
mov
frstor
push
xor
mov
popf
push
jmp
or
pusha
pop
imul
cmp
jb
pop
jne
popa
sahf
push
push
int3
cmpps
xchg
orb
mov
mov
sbb
sbb
iret
incb
out
shll
addr16
popa
mov
icebp
fdivrs
jg
sbb
clc
inc
pop
aam
ja
or
push
dec
das
adc
dec
dec
test
mov
and
stos
jo
ss
sahf
lock
and
int3
decl
addl
dec
hlt
pop
in
inc
xchg
mov
loop
pop
fidivl
fbld
movsb
mov
push
out
xchg
mov
adc
fisttpl
jo
jge
and
jle
leave
gs
mov
into
gs
cwtl
mov
arpl
xor
cmpsl
push
cltd
inc
and
cmpsb
imul
xchg
test
lret
and
cmp
cmpsb
sbb
or
pop
pop
push
xchg
sbb
outsb
mov
test
lret
imul
outsb
out
jb
mov
sub
daa
lret
pop
sbb
mov
ret
insb
adc
mov
add
dec
out
inc
cmp
lods
pop
add
ss
inc
lods
xor
popa
xor
and
addr16
mov
neg
cmp
jae
ss
sarb
out
pop
loop
cmp
lea
push
inc
push
xchg
sbb
or
pop
enter
fisttpl
icebp
popa
dec
pop
loope
rol
mov
xchg
mov
mov
sub
lcall
push
mov
bound
filds
and
js
jle
movl
mov
loope
popa
xchg
cltd
arpl
sub
test
and
ds
lret
push
imul
cld
adc
push
ret
in
loop
dec
sub
popf
flds
aas
rol
bound
xchg
je
in
mov
or
inc
iret
push
lds
xlat
push
xchg
scas
adc
inc
jmp
out
cs
lods
mov
idiv
sbb
push
add
sub
mov
xchg
iret
testl
dec
enter
imull
aaa
pushf
popf
cmpsb
jae
iret
flds
outsl
cmc
stc
in
sahf
mov
shrl
rclb
test
push
imul
cmpsl
cld
cmp
loope
mov
inc
pop
nop
test
push
cmpl
fbstp
add
jp
hlt
jno
faddl
ret
and
push
pop
dec
add
xchg
pop
roll
mov
adc
push
ss
sub
mov
add
xlat
stos
jp
sbb
movsl
mov
iret
lds
or
sbb
fs
imul
mov
inc
xchg
mov
pop
sbb
movsb
xor
add
jns
mov
mov
loopne,pt
pop
fildl
icebp
or
dec
aaa
and
cmpb
xchg
adc
inc
jo
inc
adc
lock
mov
movsl
andb
stos
sub
sbb
or
test
int3
inc
lcall
sub
inc
adc
sub
out
sahf
and
xchg
icebp
aaa
int
cwtl
gs
sub
mov
push
adc
outsb
mov
negl
in
mov
push
call
mov
aad
decl
adc
inc
sti
in
jmp
jo
jo
dec
jg
pop
jb
fidivrs
ficoml
inc
inc
cs
aaa
sti
fnstsw
outsb
rolb
jo
fcmovnu
ret
xchg
insl
scas
pushf
push
cmpsl
xchg
jne
or
sti
divl
iret
pop
out
sahf
jne
les
inc
div
ret
cwtl
sahf
stc
jmp
push
loope
in
cmp
sub
inc
add
jnp
jl
movsb
dec
rol
insl
imul
adc
mov
loop
inc
jl
push
mov
nop
repz
mov
popf
outsb
icebp
mov
imul
ljmp
push
in
fwait
cwtl
adc
gs
aad
push
lods
sbbl
inc
cmpsl
jb
cmpl
pop
xor
xor
mov
push
getsec
insb
das
divb
imul
sbb
movsb
adc
sub
js
xor
mov
stos
clc
cmpsl
xor
mov
pusha
fs
lods
sub
ret
sbb
lods
lock
ljmp
int3
and
xchg
ja
stc
not
xchg
cmp
aam
jb
mov
inc
repz
mov
mov
lahf
jo
outsl
push
jbe
inc
lods
outsb
repnz
fstpt
ja
cmp
dec
movsb
ret
iret
das
movhps
add
jns
test
jae
ficomps
lock
sub
jle
xor
jae
xchg
mov
mov
pop
mov
xchg
inc
adc
pusha
jl
xchg
mov
push
adc
popf
sbb
in
aam
xor
lcall
mov
cmp
xor
orl
out
jg
adc
mov
and
sar
out
push
jnp
jb
fwait
bswap
in
lret
fwait
cmp
lods
sub
jb
inc
notb
mov
and
in
mov
jnp
mov
adc
enter
pop
lea
outsb
shll
push
cmp
pop
mov
push
les
out
mov
jae
push
jge
cmp
cmpsb
subl
ljmp
cmpsl
push
sar
mov
push
sub
daa
daa
xchg
jg
xor
push
bound
nop
inc
jnp
pop
mov
ds
dec
outsb
push
cwtl
inc
mov
fmulp
jl
sub
clc
adc
stos
jmp
xchg
je
sub
call
push
daa
cmc
and
adc
in
ret
mov
icebp
adc
mov
mov
or
xlat
pause
roll
movsb
cmp
mov
pop
and
and
cmp
cld
andl
aam
push
ss
int
ja
xchg
jp
daa
push
je
popf
hlt
cmp
test
cmc
cmp
aas
hlt
push
fdivl
mov
out
int3
dec
test
ljmp
or
pushf
in
incl
out
je
cmp
add
test
jge
dec
ljmp
dec
push
push
movzbl
fst
out
pop
mov
insb
insb
rorb
test
push
mov
repz
or
movb
sbb
fsubrp
push
cmpsl
mov
sbbl
mov
out
inc
mov
mov
push
mov
jg
gs
movsl
repz
mov
mov
psubb
sub
sti
test
push
jns
dec
mov
xor
aad
mul
and
xchg
ficoml
lahf
pop
sbb
and
ss
cld
or
cmp
inc
jl
aaa
sbb
or
xchg
sbb
jl
insl
sub
jmp
fdivs
push
mov
push
out
stos
cmp
aas
lods
mov
xor
xor
and
inc
mov
cmpsb
push
sahf
insl
mov
aaa
fwait
adc
cmpsl
into
cmpsb
jbe
sub
jns
mov
dec
in
fldt
and
mov
push
pusha
insl
mov
in
out
popf
leave
stos
ljmp
inc
outsl
xchg
sub
jne
or
imul
ret
pop
cld
jecxz
gs
jae
movsl
or
jp
inc
mov
sbb
lret
and
cmp
cmp
dec
sub
pop
pop
ja
jp
aam
insb
xlat
adc
std
pop
test
mov
sub
lahf
lret
lock
pop
or
hlt
xor
add
push
inc
sub
push
outsb
lock
or
dec
ud2
imul
bound
add
xchg
popa
push
jmp
fsubr
sbb
inc
js
test
std
lock
test
lds
ds
sub
inc
ss
mov
mov
sbb
negb
cmpsl
push
jge
cltd
call
dec
rcll
mov
xor
fidivl
mov
mov
add
mov
test
xchg
mov
or
add
push
pushl
mov
mov
pop
imul
mov
adc
inc
mov
ds
push
cmpsb
xchg
xchg
out
in
lea
dec
xchg
jo
addl
pushf
mov
cltd
lds
aad
pop
mov
or
or
orl
pop
or
xchg
and
cmp
movsb
add
cmp
sub
std
sbb
sub
sbb
ficompl
and
pop
pop
sub
cmp
jle
mov
insb
push
push
xor
loope
dec
adc
or
test
jle
sbb
or
or
out
mov
add
jae
imul
xchg
lret
and
arpl
sahf
jns
jns
mov
mov
leave
pop
mov
dec
insl
sbb
aam
inc
gs
inc
inc
adc
inc
negl
lds
in
sahf
lock
repnz
mov
sbb
or
jb
shll
xchg
bound
mov
scas
cmc
mov
pop
in
movsl
int3
inc
adc
or
pop
mov
jecxz
fprem
add
mov
jl
sahf
xor
cmp
inc
xchg
ret
pop
call
mov
dec
mov
into
xchg
daa
mov
push
pop
sar
lcall
es
negb
mov
std
jne
outsb
inc
inc
inc
adc
jg
and
mov
mov
sti
add
imul
dec
mov
push
mov
into
jle
cmp
add
clc
xchg
pop
enter
xor
and
xchg
gs
mov
add
jge
movntps
push
fisubrl
stc
inc
cmpsl
lds
push
mov
xchg
mov
test
movsl
aam
inc
scas
sarl
cli
sub
sub
push
fsubrl
das
pop
pop
jno
cmp
and
fstpt
push
mov
ljmp
or
insb
shrl
xor
loope
aaa
mov
sbb
xlat
xchg
and
aas
pop
mov
xchg
mov
push
push
loope
nop
jb
outsb
push
fucomip
arpl
push
jge
pop
inc
pop
ret
mov
stos
aad
sahf
ljmp
inc
ret
mov
pop
test
dec
pop
jge
and
clc
imul
dec
pushf
mov
aaa
jbe
mov
push
leave
scas
in
into
mov
jle
pop
push
mov
fidivl
std
xchg
fwait
movsb
inc
mov
push
pop
ds
jecxz
in
cmpsb
add
std
and
jb
test
push
in
jmp
sub
stos
lcall
add
in
xchg
sbb
inc
push
test
dec
push
or
hlt
sbb
xor
or
jb
scas
add
ljmp
and
ret
mov
and
push
pop
out
adc
loopne
pop
roll
jno
rol
and
leave
je
sbb
sub
out
bound
push
cmc
out
arpl
repz
in
imul
loop
pop
and
push
sub
pushf
das
fstpl
sbb
sbb
stos
fwait
mov
js
inc
data16
cmp
dec
les
and
dec
addl
jno
sahf
jle
jmp
or
sahf
ss
dec
jns
lret
mov
pusha
xchg
mov
xchg
je
push
dec
sbb
jle
jge
stos
mov
push
jl
mov
push
mov
les
daa
dec
call
pop
movsb
lahf
stos
xchg
push
les
mov
lcall
mov
in
test
mov
inc
cmp
and
hlt
push
mov
pop
fs
mov
jp
sbb
sbb
jl
mov
gs
sub
pop
mov
int
cmp
dec
cld
add
push
lcall
or
push
sub
xchg
mov
idivl
aam
pop
add
es
int3
xchg
lahf
insl
aad
adc
push
adc
aas
out
frstor
insl
inc
out
push
jp
xor
out
mov
jnp
pop
leave
lret
jne
fstpt
ljmp
std
roll
sub
ret
mov
test
jg
sarl
xlat
out
dec
nop
adc
xchg
mov
test
je
mov
xchg
and
jecxz
mov
mov
lock
cmp
call
xchg
dec
xchg
pop
cmpsb
sbb
sbb
pop
jge
xchg
cmp
fcompl
jmp
movsb
jg
pop
pop
sub
fstp
mov
and
incb
aaa
push
xchg
push
cmc
mov
jg
add
stos
add
inc
pop
mov
jno
mov
std
jnp
dec
pop
push
add
inc
imul
in
mov
mov
sbb
mov
mov
test
sub
enter
dec
dec
jle
ss
dec
test
cmp
adc
inc
mov
mov
mov
mov
in
fisubl
xor
jne
mov
sbbb
insl
jg
dec
xor
adc
ss
add
sub
sub
je
ficoml
test
push
add
test
and
lds
fwait
test
out
stos
xchg
sbb
xor
dec
lahf
mov
lcall
push
arpl
mov
out
cmp
lahf
ficoms
adc
cmp
leave
popf
bound
mov
cmp
push
pusha
outsl
in
movsb
mov
lds
dec
inc
xchg
jp
jnp
jns
shrb
leave
leave
mov
loopne
sbb
adc
sti
stc
addr16
lods
push
add
test
adc
imulb
fwait
sub
sbb
sbb
cmp
sub
jns
ret
and
jb
mov
cmpb
dec
in
jg
mov
hlt
push
fisubrs
insl
mov
push
push
cmp
je
inc
mov
mov
outsl
xor
push
jmp
jecxz
xchg
mov
mov
dec
and
iret
cmpsl
insb
out
mov
cmp
pusha
in
mov
mov
pop
insb
jo
adc
adc
xor
ficompl
aam
ret
add
fdivl
mov
ja
in
pop
leave
push
push
lret
xor
scas
mov
dec
jl
cmpsl
hlt
pusha
dec
xchg
jmp
jne
sbbl
sbb
or
xchg
lcall
repz
adc
les
cld
dec
cmp
stc
dec
mov
gs
shrl
add
jae
push
iret
dec
mov
call
jecxz
cmp
maxps
jbe
mov
jo
iret
push
cmpsl
jl
sahf
jle
adc
push
call
adc
faddl
cmpsl
jge
adc
dec
cmc
iret
sub
imulb
fdivp
sahf
jno
sbbl
mov
push
dec
jbe
mov
dec
push
dec
sbb
movsl
ret
push
mov
sub
jg
mov
cli
and
pop
inc
sbb
xlat
push
and
jecxz
pop
mov
mov
xchg
insl
adc
pop
int3
jg
mov
outsl
mov
ja
or
mov
inc
lahf
push
les
and
or
pop
mov
xorl
jge
fbstp
pop
test
loope
and
inc
out
push
mov
and
in
je
inc
sub
cld
or
dec
dec
sbb
pushf
push
inc
mov
mov
xchg
sti
push
mov
je
dec
pop
cmpsl
inc
mov
or
std
mov
rcrb
dec
cwtl
push
lret
das
and
add
xchg
dec
mov
shll
jmp
mov
xlat
je
iret
dec
xlat
pop
sub
comiss
pusha
enter
or
mov
xchg
stos
dec
imul
jp
jae
ljmp
pop
push
mov
gs
dec
sbb
cmp
std
pop
and
add
aas
clc
cmp
dec
ja
pop
mov
mov
test
mov
add
pop
and
int
cli
push
cs
xchg
sahf
iret
addr16
xor
test
bnd
loope
shrb
jmp
aad
cmp
fisubrs
cli
fldenv
sub
dec
or
repz
jmp
cmp
xchg
lods
xor
ror
outsl
jle
dec
sbb
mov
testl
lret
xlat
fimull
or
rcl
jle
add
loope
add
and
pop
cld
lds
loope
lea
leave
iret
push
mov
data16
mov
ljmp
push
and
out
dec
fcoml
popa
mov
pop
push
xor
jae
aaa
movsb
pusha
mov
incb
lahf
sub
pushf
and
jne
cmc
and
xlat
aam
mov
flds
xchg
adc
out
add
cli
xor
xor
add
pop
mov
pop
jnp
xchg
scas
dec
sub
xchg
mov
jne
jl
std
notl
in
lods
inc
cld
dec
dec
jno
roll
dec
add
or
fwait
cld
adc
mov
imul
push
or
and
xor
sti
xchg
ja
pop
clc
inc
fadds
xor
pop
addb
xchg
ss
dec
sti
ss
cld
jmp
das
ds
jae
aas
xor
mov
pop
movsb
pop
and
pop
out
call
ja
adc
adc
inc
lret
sti
roll
add
pop
xor
sbb
xchg
roll
cmc
mov
push
jge
pop
imul
rcrl
ds
mov
mov
cmp
arpl
xor
mov
xchg
cmp
xlat
inc
push
sbb
test
cld
jmp
test
xor
push
add
cmpsl
mov
push
leave
pop
sbb
dec
mov
scas
dec
shrb
add
adc
outsl
in
fistl
xchg
aad
into
adc
movsl
push
aas
push
aas
mov
sbb
stos
shlb
rorl
xor
sbb
pop
and
sbb
sarb
and
ret
stc
pusha
in
clc
jbe
popf
mov
cmc
sbb
cmp
xchg
jbe
push
mov
lret
push
lock
in
push
cmp
popa
inc
xchg
push
test
xor
out
pusha
inc
dec
add
sub
shll
cmp
jbe
in
fld
lcall
push
jge
fstl
rorl
sbb
or
out
pop
jle
jle
bound
out
jno
sub
por
adc
pop
cltd
lret
negl
push
sarb
xor
add
mov
outsb
lahf
xchg
add
inc
pusha
inc
push
push
cmp
iret
xchg
popa
push
mov
mov
ret
faddp
add
aad
enter
adc
xor
repz
mov
jp
adc
enter
cmp
aam
dec
lock
inc
test
iret
daa
push
sti
mov
xchg
mov
test
popa
lret
dec
jcxz
mov
ja
ljmp
addr16
or
into
dec
aad
in
mov
add
lods
dec
push
sbb
sahf
mov
jae
not
and
pop
idivl
mov
pop
scas
nop
mov
pop
mov
xor
mov
cmpsl
mov
in
sti
icebp
loope
fwait
dec
mov
add
daa
push
push
jmp
ljmp
push
cmpsl
std
jno
fildll
ljmp
adcb
jbe
insl
inc
inc
pop
fldenv
addr16
cltd
jge
flds
sbb
sub
mov
imul
fdivrl
xor
lods
sub
addb
imul
jnp
sbb
test
jp
imul
or
in
push
push
test
xchg
mov
test
push
lahf
pop
addr16
add
daa
faddp
jl
push
or
cmp
pusha
lret
sti
shrl
cmp
mov
inc
int3
inc
ljmp
je
scas
push
jl
cltd
dec
aad
inc
clc
dec
or
repz
cmp
imul
icebp
filds
mov
out
dec
pop
filds
fwait
pusha
jno
push
bound
sarl
clc
arpl
and
jb
mov
inc
inc
loopne
adc
sub
test
push
ds
sbb
daa
pop
dec
mov
out
xchg
push
push
inc
xchg
sub
ja
sub
nop
in
scas
orb
arpl
fsubl
or
add
cmp
or
movl
mov
and
xor
pop
mov
insl
ficoml
mov
inc
add
pop
outsl
xor
inc
add
sub
push
sbb
gs
push
mov
cmp
cmpl
icebp
stos
mov
insl
rcrl
flds
adc
mov
daa
xor
leave
jge
xor
jae
jl
mov
insb
pop
sbb
mov
cmp
and
inc
ds
add
pop
sahf
xor
jl
nop
cmp
push
sarb
mov
fistpll
sub
es
cmp
sbb
jle
test
jecxz
dec
jmp
fwait
sti
in
xchg
mov
sub
int3
into
push
ret
xor
pusha
mov
sbb
inc
stc
sti
rcr
loopne
jns
dec
xlat
les
mov
les
jle
insb
jno
jnp
cmp
out
shrl
scas
dec
and
lret
mov
fcoms
cli
pop
mov
or
pop
jmp
popa
mov
sbb
adc
pop
shlb
push
inc
int3
xchg
mov
pop
mov
scas
incl
stos
mov
add
bound
dec
push
test
fists
jecxz
rorb
mov
hlt
test
fimuls
iret
sbb
daa
adc
repz
jno
dec
xor
pop
jae
sub
rorl
das
into
scas
xlat
aaa
loopne
jno
jmp
rcll
sub
nop
scas
daa
ss
dec
out
lods
adcl
push
das
std
loope
inc
incl
xchg
xlat
push
pop
push
data16
mov
mov
lea
sub
ret
push
loop
jmp
enter
pop
push
and
mov
movsl
cld
inc
mov
rol
movsb
add
mov
xor
test
push
xchg
cmpb
mov
lock
fisttps
shl
loop
add
cmp
pop
push
pusha
xchg
sti
jg
test
loop
js
mov
stc
fsubrl
cmp
aad
sarl
pop
sbb
sahf
stos
aas
je
jl,pt
jnp
pop
lret
testl
int3
or
push
pop
lods
pop
loope
mov
mov
adc
mov
or
mov
in
sbb
cmpsl
mov
repz
in
lods
divl
scas
fildll
push
add
inc
push
aaa
loop
insl
mov
cs
divb
cmpsb
add
enter
pusha
incb
mov
dec
enter
jecxz
push
test
adc
popf
ret
loop
add
pusha
xor
sti
and
xchg
ret
test
ret
scas
xchg
aaa
pop
pop
outsb
xchg
inc
cmpb
and
add
sbb
std
mov
into
xchg
pop
je
