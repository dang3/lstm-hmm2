movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
push
push
call
mov
mov
push
pushl
xor
mov
rep
call
test
je
push
call
xor
inc
pop
pop
ret
push
mov
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
push
mov
push
push
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
push
call
mov
mov
add
lea
add
cmpl
je
mov
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
push
mov
mov
sub
push
call
pop
test
jne
inc
jmp
mov
mov
rol
push
mov
mov
test
je
mov
mov
jmp
push
call
mov
mov
push
mov
push
push
push
push
push
xor
push
inc
push
add
call
mov
mov
push
call
mov
push
shl
push
add
incl
push
push
call
mov
push
mov
mov
call
pop
test
je
lea
push
push
pushl
call
mov
imul
add
add
cmpl
je
cmpl
jne
lea
push
push
pushl
push
call
push
pushl
push
push
call
mov
lea
add
lea
add
mov
pushl
lea
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
cmp
jb
xor
add
push
mov
je
push
mov
mov
mov
mov
mov
mov
add
rol
mov
xor
imul
xor
mov
sub
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
push
call
mov
test
je
push
push
mov
lea
push
mov
push
lea
push
call
mov
push
mov
call
add
push
push
lea
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
pushl
call
push
call
pop
ret
jmp
push
mov
sub
push
mov
push
mov
mov
imul
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
mov
ror
xor
imul
add
mov
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
mov
pop
pop
pop
leave
ret
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
pushl
push
pop
call
test
mov
je
cmpl
jbe
mov
push
push
pushl
mov
pushl
push
call
pushl
push
pushl
push
call
pushl
push
pushl
push
call
mov
cltd
mov
idiv
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
mov
add
push
call
push
push
pushl
push
call
add
push
call
push
push
pushl
push
call
add
push
call
mov
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
pushl
push
pushl
push
call
add
cmpl
jbe
pushl
push
push
pushl
call
pushl
push
call
pop
pop
pop
pop
mov
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
push
mov
mov
push
push
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
pushl
push
call
test
jl
mov
mov
push
pushl
push
call
test
jge
andl
jmp
mov
pop
pop
pop
pop
ret
push
mov
mov
mov
add
mov
sub
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
push
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
mov
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
add
push
pop
pushl
lea
push
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
push
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
xor
push
xchg
xor
loope
mov
inc
sub
addl
xchg
cwtl
mov
cli
lahf
fwait
jmp
fdivr
push
push
mov
add
icebp
lods
das
xchg
sub
jo
lock
int3
sbb
call
adc
jnp
xchg
xor
stos
ljmp
test
inc
jnp
lds
dec
xchg
cwtl
mov
nop
inc
push
shll
push
push
adc
fwait
or
incl
sahf
in
adc
mov
adc
fistpll
fldl2t
xor
pop
jb
cmp
shrl
jbe
or
xchg
les
dec
xor
bound
sub
dec
push
mov
hlt
push
ret
jle
shrl
sbb
imul
jle
sbb
mov
add
pop
and
lcall
jecxz
inc
add
out
mov
in
mov
mov
rcrl
xchg
lods
push
mov
add
add
dec
mov
rorl
sub
int
mov
daa
fcmovnbe
sub
ret
dec
loop
sbb
mov
out
cltd
pop
mov
add
shrl
js
pop
inc
aam
outsl
cmp
add
popa
fsubrs
add
int3
in
cs
and
jmp
lods
insb
out
inc
mov
nop
add
add
dec
and
stos
jb
pop
dec
and
add
add
arpl
or
add
movsb
xchg
fadds
sar
je
pop
pop
cli
sbb
pop
in
mov
xor
xor
jb
and
fwait
inc
xor
jmp
mov
add
or
out
loop
adc
cmp
daa
push
push
jecxz
adc
jecxz
fwait
das
scas
fildll
pop
add
inc
adc
or
push
push
jmp
mov
fcoml
or
ficoml
jp
ja
idiv
gs
stos
test
sbb
pop
adc
fstpt
stos
pop
rol
pop
rorl
sbb
cltd
cli
popa
adc
jb
push
rol
enter
mov
cli
mov
mov
popf
pop
jno
ljmp
xchg
divb
mov
adc
push
or
aad
or
fsubl
pop
mov
ret
jne
fwait
data16
dec
jbe
add
add
jge
daa
inc
inc
es
add
fists
jge
ret
xor
mov
in
jp
movsl
sub
and
cs
jmp
mov
xchg
mov
aam
jecxz
adc
mov
ljmp
mov
jb
insb
outsb
xchg
pop
ljmp
aaa
or
fadds
or
add
enter
mov
cmp
push
iret
add
iret
clc
mov
dec
xor
push
xor
mov
fs
xor
loopne
add
data16
inc
inc
lret
add
adc
repz
xor
outsb
popa
push
cmc
popa
pushf
cmp
xchg
clc
arpl
cmp
sbb
push
fmull
jno
daa
arpl
dec
sar
pop
int3
or
mov
add
adc
mov
mov
imul
mov
adc
push
out
or
mov
in
jle
stos
jmp
daa
inc
xchg
shrb
clc
xor
mov
cvtdq2ps
jne
cli
mov
addr16
mov
je
adc
cmp
outsb
jae
inc
xorb
xorb
sarb
adc
fiaddl
pop
lret
add
push
xchg
pusha
stos
adc
lcall
and
testb
lahf
arpl
inc
dec
xchg
out
push
ret
dec
sub
inc
loope
les
clc
adc
add
or
lea
xchg
fdivp
pop
mov
loop
mov
xchg
push
pop
cwtl
outsl
push
dec
int3
stos
imul
ja
int3
push
in
jle
test
jmp
call
faddl
in
inc
inc
and
jp
das
mov
dec
add
add
jnp
or
insb
inc
outsl
pop
roll
pop
loope
negb
mov
push
sub
pop
mov
jp
xor
ret
cmpsb
mov
push
cmpsl
mov
sub
fs
mov
jbe
cs
stc
or
push
clc
and
mov
xor
mov
push
test
pop
mov
or
rorl
push
int
jecxz
cmpsb
in
cmp
data16
push
sub
ss
pop
dec
xchg
pop
pop
ss
push
es
add
add
adc
cmpsl
xor
dec
inc
mov
sbb
jle
push
xor
ss
cmpb
jmp
pushf
mov
ret
js
cmp
ja
stos
xchg
or
push
rcr
in
or
test
inc
arpl
xor
add
and
cli
bound
cs
out
add
add
lods
cwtl
cmp
mov
adc
cmp
into
add
xor
add
xor
push
push
push
inc
fistpll
daa
mov
test
test
in
imul
stos
cmc
addr16
jmp
cwtl
leave
pop
sarl
mov
jecxz
scas
lret
outsl
mov
ret
rcl
sbbb
sbb
cmp
sub
stos
in
mov
aas
out
dec
sub
shl
jb
ja
jge
pop
stos
xorb
add
sbb
aam
fnstcw
dec
mov
jp
mov
xor
test
leave
jg
iret
jnp
out
cltd
sbb
pop
call
std
int3
xor
add
mov
mov
lds
and
dec
and
push
add
loopne
insb
mov
int
pop
testb
add
sbb
mov
add
mov
sti
mov
jcxz
sbb
sub
mov
ret
add
xor
out
mov
jle
fnstenv
cwtl
push
push
stos
adc
call
call
cmpsb
mov
xlat
sub
push
js
push
lret
hlt
cmp
in
xor
lock
xchg
out
pusha
and
jno
outsb
sti
cmpl
insl
sbb
ja
add
lahf
xchg
adc
insb
lds
das
cwtl
jg
xorl
and
sub
in
lods
sahf
mov
les
dec
sbb
jmp
rolb
aad
mov
sbb
out
pushf
out
mov
dec
mov
xor
adc
lds
mov
dec
enter
je
xor
popf
add
lods
mov
mov
aaa
das
dec
and
test
xlat
xor
and
jnp
add
mov
clc
inc
pop
out
test
or
push
cmpsl
ds
jecxz
sbb
xchg
adc
es
outsb
sbb
sbb
dec
test
jp
push
jae
inc
sub
push
scas
or
cld
in
in
xor
cmpb
mov
enter
cmp
in
rcl
mov
and
sub
aas
add
add
jl
push
pop
push
inc
shll
cwtl
popa
and
push
sbb
popa
and
mov
cmpl
sub
mov
lcall
jae
pop
xchg
and
aaa
push
cmp
shll
stos
sub
inc
fstl
pusha
hlt
jbe
sbb
ror
add
fbstp
ds
mov
push
xchg
ret
add
neg
xchg
cmp
call
add
or
lock
cmp
js
add
sti
fimuls
sub
gs
movb
js
inc
sub
mov
adc
inc
lods
popf
int3
jecxz
fmul
sbb
cmp
sub
jmp
cli
xchg
pop
cmpsb
sub
add
aad
inc
xor
dec
add
and
or
add
mov
adc
mov
outsb
ret
sbb
mov
loopne
cmc
enter
dec
sub
pop
and
xchg
bound
mov
enter
inc
test
test
adc
repnz
xchg
icebp
loop
push
sbb
cmp
mov
add
cltd
ret
test
xor
xor
gs
in
cmp
mov
or
in
dec
lock
xlat
lret
pop
incl
inc
xchg
outsb
shrb
cs
mov
cmp
cmpsl
scas
test
jbe
mov
jle
lahf
test
aas
and
cmc
and
cli
cmp
aad
xchg
pop
cmpsl
sbb
movsb
pop
mov
sahf
mov
add
mov
imul
jbe
mov
and
or
jb
mov
pop
sar
scas
and
mov
mov
push
jae
jl
or
push
push
ss
inc
xchg
cmpsl
cmp
pop
xor
sub
xor
add
mov
adc
inc
aaa
ja
cwtl
lret
push
incl
fs
sub
jo
cmp
jg
jae
fmuls
gs
cmpsl
inc
push
lcall
fwait
push
and
movsl
ret
sbb
sub
adc
sub
sbb
add
pop
sub
les
jo
add
jp
pop
shll
cwtl
imul
daa
push
sub
mov
xor
shrl
jae
xchg
cltd
jp
movq
push
inc
int
inc
add
dec
inc
pop
adc
cld
mov
sub
orl
mov
stos
push
cs
call
bnd
xlat
cmc
lcall
mov
aaa
mov
fcmovnu
loope,pn
xchg
inc
xchg
jb
js
inc
add
out
cli
mov
xchg
add
mov
inc
xchg
in
lods
ficoms
call
clc
ds
dec
xchg
fidivl
jge
cmp
scas
mov
testl
mov
out
popa
aas
out
push
dec
fmull
rcr
dec
iret
lods
inc
add
loope
pop
cmpsl
push
inc
das
mov
out
icebp
xor
xlat
cmp
or
mov
add
add
xchg
mov
jl
outsb
sub
xor
push
fisttpl
push
push
inc
cmp
addr16
mov
repz
fcmovnbe
gs
cltd
aas
subb
fcmovne
scas
adc
imul
add
sub
push
add
xchg
and
ret
adc
adc
test
add
add
aas
fsubs
sub
sbb
les
adc
popa
pushf
aad
and
push
mov
icebp
cs
or
loopne
pop
add
and
sub
push
iret
mov
stos
repnz
roll
cs
movsb
out
fidivrl
out
push
test
mov
mov
pop
push
sbb
div
sbb
adcl
ja
mov
cmpsb
out
sbb
dec
subl
scas
ror
xchg
test
sub
mov
mov
dec
in
mov
xor
dec
add
or
push
jnp
test
cmpsl
movsb
mov
cmp
xor
sbb
adc
cmp
lods
cmp
mov
mov
fcompl
and
push
nop
xchg
mov
push
loop
psllw
cmp
adc
rcrb
and
push
daa
sti
sbb
repz
add
pop
adc
sub
imul
scas
stos
je
sbb
sub
ja
push
pop
sub
or
jne
push
lods
push
inc
add
xchg
fdiv
inc
jle
lds
call
xchg
cmp
loopne
xchg
movsb
sbb
xchg
test
fidivs
stos
pop
sub
push
insl
cmp
pop
sti
and
dec
add
add
xor
pop
ds
repz
adc
mov
pop
cmp
dec
adc
and
or
out
xchg
cmp
xchg
xor
int3
cltd
jae
push
shll
xchg
shrl
fs
push
movsb
ljmp
xchg
pop
sbb
test
dec
aam
dec
inc
loop
and
mov
or
iret
jno
mov
bound
and
fs
pop
jns
cld
mov
jnp
fcompl
leave
jnp
adc
pop
aad
xor
mov
lock
xchg
xchg
cmp
nop
jg
sbb
sahf
fnsave
mov
daa
gs
jmp
jl
xchg
dec
sbb
inc
jp
and
push
int
mov
cmpsl
xchg
push
rorb
jle
cs
jl
rcr
filds
scas
cmpsb
add
inc
sub
shrb
loopne
lret
fisttpl
dec
aam
jge
out
aam
shlb
out
mov
icebp
push
xchg
adc
ja
in
mov
inc
loope
adc
mov
cmp
mov
lea
in
and
stc
pop
iret
data16
aas
jge
lods
xchg
cmp
xchg
aam
fcoml
dec
xchg
sbb
mov
push
scas
dec
sbb
test
or
les
dec
mov
popf
push
jne
cli
and
mov
dec
jmp
mov
testb
shrb
lret
data16
test
js
pop
fs
pop
sbb
or
sub
aas
sub
xchg
testb
ret
rcr
aad
lret
xchg
jmp
icebp
iret
out
lret
aas
xor
push
pop
xor
js
add
notb
sbb
cmp
sub
cmp
or
xor
inc
dec
xchg
inc
sub
xchg
lcall
rcll
xchg
jl
add
add
lea
enter
add
rorb
or
sbb
scas
sbb
dec
pop
jg
add
jno
or
cld
out
jne
mov
push
dec
jmp
sti
add
int3
mov
sbb
test
fmuls
cmp
mov
mov
fmul
adc
pop
lcallw
mov
les
add
popf
ret
sub
std
jge
nop
mov
movsb
xor
pusha
or
mov
mov
mov
stc
push
lahf
xor
lock
fisttps
movsb
stos
pop
pop
mov
and
xchg
xor
jb
in
mov
inc
xchg
jl
xor
push
shlb
mov
repz
inc
ret
sbb
repz
or
out
adc
fwait
dec
jmp
inc
scas
aam
dec
pop
negl
or
or
mov
outsb
add
mov
jge
mov
stos
jp
adc
orl
adc
lock
fcos
or
add
mov
aad
icebp
pop
sub
push
mov
jno
jno
pushl
insb
bound
mov
int
ja
jecxz
sub
mov
cmp
jbe
mov
mov
dec
mov
dec
inc
bnd
repnz
leave
fsts
or
jp
sahf
mov
cmpsb
jl
mov
mov
and
test
or
cmp
out
sub
mov
stc
in
fstpl
push
xor
sahf
cmc
xchg
outsl
pusha
aas
test
xchg
shlb
psubq
cld
mov
imul
int3
add
lods
filds
push
imul
popf
jle
hlt
rcr
add
add
rclb
xchg
sbb
sbb
dec
out
fwait
nop
ret
hlt
scas
xlat
and
add
dec
out
loopne
xchg
adc
xor
dec
push
es
out
aam
insb
ds
xchg
sbb
xorb
stos
and
decb
mov
push
lock
fnstcw
enter
or
lret
mov
repz
or
pop
gs
adc
mov
xor
nop
and
dec
ret
add
push
xchg
and
mov
out
jae
jnp
int3
call
out
mov
cltd
js
loope
jecxz
mov
popa
sbb
mov
lds
xor
inc
mov
lcall
add
add
pop
je
add
ret
jb
shrb
in
cmp
mov
rcr
psubsw
xchg
mov
mov
pop
lods
cmpsl
cltd
pop
es
and
dec
stc
lock
xor
ror
arpl
fadds
sub
popa
mov
fadd
mov
fidivrl
xor
adc
icebp
jo
das
imull
or
pop
fisubrl
dec
sarb
mov
bound
add
fimull
push
mov
or
insb
das
out
pop
inc
mov
out
adc
jb
adc
mov
xchg
push
xor
pop
inc
je
xchg
insl
outsl
lahf
ljmp
cmc
jne
push
or
mov
xchg
repz
pop
or
incl
inc
sbb
sub
cmp
daa
adc
rcrl
push
ljmp
or
cmpsl
int
loop
ficomps
jae
dec
fnsave
fdivrs
cmp
and
xchg
xchg
pop
iret
lret
cli
dec
andb
fdivrl
jne
mov
pop
aaa
xchg
fidivs
xor
das
xor
push
pop
jae
das
mov
push
je,pt
imul
mov
addr16
sub
cld
jbe
mov
cmp
jl
pop
loop
jp
adc
and
out
xchg
cmp
frstor
mov
dec
add
cmp
cmovs
push
sti
arpl
mov
repnz
roll
aaa
lods
xor
cld
imul
jnp
outsb
es
mov
lods
and
xchg
imul
sbb
in
shrb
js
jecxz
cld
jae
test
loope
add
cmp
xchg
cmp
iret
jo
mov
jmp
aaa
cmpsl
insl
je
cmc
lds
sub
cmp
int
push
es
xchg
ss
mov
popa
scas
mov
and
rcrb
mov
fisubrs
cmpsb
push
inc
mov
xchg
ds
dec
mov
imull
test
xchg
movsb
shll
ficoml
xor
cmp
add
aam
cmp
lds
inc
dec
lea
movsb
int
push
fisttpl
add
inc
jecxz
sub
ds
or
push
adc
pop
jno
jle
dec
mov
xor
test
ja
mov
jne
cmc
loope
cmp
cs
int
cmc
pop
jl
cs
orb
and
mov
xchg
aaa
fisubl
data16
mov
add
add
lods
mov
imul
push
imul
xor
and
push
lods
add
jle
loopne
icebp
xor
repz
adc
or
sbb
cmp
xchg
arpl
insb
xchg
dec
sub
mov
cmp
xor
gs
mov
mov
dec
and
dec
aas
into
inc
mov
ret
fstp
sbb
inc
mov
add
sub
call
add
jg
add
mov
data16
insl
lcall
adc
cld
push
sbb
lret
cmc
adc
or
mov
mov
pop
adcb
dec
out
or
cmpb
push
std
ret
sbb
sbb
pushf
das
sub
jns
cmpsb
rol
xor
scas
aam
cwtl
mov
mov
sar
dec
add
out
push
in
insb
ljmp
and
add
add
mov
inc
rcll
xchg
stos
mov
pop
xchg
stc
xor
mov
pushf
mov
dec
xchg
sub
mov
push
scas
push
cld
test
xor
mov
cmc
jle
bound
mov
sub
into
test
cs
aaa
inc
pop
rclb
sbb
gs
dec
out
clc
pop
xor
lea
std
mov
int
cmova
adc
inc
inc
mov
add
add
shr
loope
push
push
push
cwtl
aam
and
mov
nop
sub
adc
test
sbb
loopne
xor
clc
cmp
fadd
sub
stos
adc
push
aas
bound
cltd
xchg
or
cltd
and
sub
xchg
cld
cmp
popf
cmpl
mov
aas
mov
adc
mov
or
mov
mov
add
cmp
cld
xchg
mov
push
pop
push
shrb
call
ss
fldt
push
ret
xlat
pop
cmpsl
xchg
rolb
sahf
push
int
in
adc
push
pop
stos
mov
mov
js
pop
rcll
mov
xchg
rolb
cld
cld
pop
adc
mov
div
add
cmp
sbb
pop
pop
add
cmp
mov
and
fisttpll
out
lods
pop
add
adc
ljmp
enter
fadds
mov
inc
iret
adc
mov
mov
popf
cmp
test
pop
xchg
jne
dec
jl
daa
adc
adc
fdiv
fsub
jnp
lock
cmp
shll
xchg
js
mov
fcmovne
or
mov
mov
pop
pushf
sub
and
jno
pop
cli
sar
mov
xchg
jge
push
cmp
fcoms
cmpsl
push
add
bound
xor
out
adc
lods
movsb
sub
popa
xor
adc
pushf
scas
sti
call
adc
int3
into
add
ds
loop
enter
or
push
pop
sub
xor
add
adc
jnp
fwait
adc
adc
xor
fcompl
out
das
push
or
ja
mov
fstpl
das
shl
sbb
lcall
movsb
or
ret
neg
add
xor
dec
iret
les
iret
mov
push
cmp
lock
movb
into
cmp
shll
or
inc
lahf
sbb
add
jp
cltd
jnp
ror
or
ret
pop
test
add
add
dec
stos
es
fidivs
sub
lret
push
mov
js
fsts
jle
aaa
mov
js
cmp
in
std
incl
idivb
outsl
adc
negb
addb
cmp
add
adc
mov
jne
roll
pusha
int3
lret
xor
lock
test
mov
xor
xorl
arpl
loop
imul
ja
test
fstpl
aaa
fistpll
sub
mov
sbb
add
dec
dec
test
into
jae
insb
dec
add
test
and
scas
cmc
dec
scas
aaa
sub
add
xor
iret
inc
cltd
xchg
std
inc
mov
sub
mov
xchg
in
adc
cld
gs
loopne
jmp
movsb
xchg
mov
adc
inc
jecxz
cmpsl
xchg
lea
dec
mov
mov
stc
or
jbe
ja
out
xor
inc
sti
mov
arpl
pop
cmp
mov
out
xchg
adc
jp
push
ljmp
loop
inc
adc
push
and
add
imul
loope
add
adc
mov
data16
push
ja
inc
xchg
add
xchg
pop
lds
cwtl
ret
cmp
rdmsr
mov
and
inc
pop
jnp
lds
adc
and
lahf
icebp
push
sbb
mov
add
add
mov
ret
fcoms
mov
cmp
inc
leave
sbbb
mov
xor
add
xor
shlb
sahf
mov
pushf
loopne
sub
add
mov
pop
mov
sbb
and
mov
pop
jae
ljmp
std
cld
lret
mov
adc
out
push
mov
mov
jns
push
ja
lods
add
fdivrs
dec
mov
repz
mov
xchg
jno
mov
inc
loop
lret
dec
or
mull
enter
ficomps
scas
jge
sub
adc
hlt
push
dec
fnstsw
pop
mov
shl
cmp
jne
dec
pop
icebp
fsubs
pusha
cmp
or
popa
dec
repz
stos
and
sar
add
lcall
cltd
call
adc
dec
fdivs
add
in
mov
addr16
add
add
rcrb
adc
xor
jge
adc
jmp
mov
and
inc
cmp
xor
jae
add
mov
push
ficompl
or
movb
inc
inc
dec
jae
outsl
adc
cltd
loope
xor
mov
pop
xchg
pop
xor
mov
jp
scas
mov
repnz
fiaddl
stos
push
imul
xor
jmp
mov
xchg
test
lahf
mov
xor
data16
add
add
add
ds
js
dec
mov
dec
or
mov
push
cmp
mov
cmp
movb
mov
push
cld
adcb
lods
clc
cli
xchg
add
pop
test
pop
dec
das
add
add
daa
insb
dec
jbe
outsl
xchg
and
push
leave
popa
mov
push
push
outsb
test
push
mov
pop
inc
mov
jmp
je
cmp
mov
dec
xor
dec
cmpsl
and
xchg
sbb
sbb
fsub
mov
fdivr
mov
jns
add
xchg
pusha
sub
cmp
push
pop
cmc
popf
mov
cmp
adc
pushf
and
filds
push
add
sbb
in
incl
add
in
pop
jae
insb
xchg
adc
stos
ud2
mov
in
test
add
and
out
lahf
les
movsl
mov
sbbb
sub
test
mov
jne
arpl
cmovne
xchg
xchg
push
test
iret
and
aas
and
call
pop
ljmp
ljmp
shll
jp
mov
push
sahf
and
push
rclb
inc
add
add
scas
or
jg
mov
movsb
push
sahf
lret
pop
dec
xchg
ds
je
mov
sbb
into
push
test
and
clc
movsb
jnp
repnz
stos
dec
sti
xor
jmp
repnz
pop
scas
mov
jmp
mov
or
int3
dec
xchg
and
pop
mov
mov
imul
push
add
push
push
pop
out
sbb
ja
add
or
jbe
nop
add
cmp
xchg
xchg
sub
ljmp
into
mov
xor
shrl
fimull
fiadds
ss
xchg
xchg
xchg
sbbl
inc
push
mov
shrb
jmp
sahf
ds
add
adc
or
jge
repz
int3
mov
pop
mov
cld
scas
mov
add
add
popf
call
cmp
cs
inc
add
sbb
outsl
std
xor
dec
xor
shrb
in
out
test
pop
pusha
xchg
popf
ret
cmc
sbb
sahf
sbb
xor
fadds
in
xlat
jbe
add
sahf
invlpg
sbb
inc
mov
sbb
mov
ret
fidivrl
rcrb
sub
movsb
sarb
int
pusha
jbe
xchg
cmp
xchg
push
sti
and
add
add
stc
mov
and
fiadds
cmp
cmp
iret
rcrb
out
js
fsubl
push
inc
dec
inc
adc
cmp
pusha
mov
mov
sbb
add
adc
mul
mov
pop
sub
jae
push
fcomps
xchg
sub
andb
mov
out
xchg
mov
jl
push
inc
lret
lds
mov
xchg
push
mov
scas
push
in
iret
imul
jp
fisubrl
adc
inc
shll
xchg
dec
xchg
test
js
adc
push
pop
xor
sub
dec
jmp
xor
ret
std
int
jbe
out
xchg
fsubrl
in
inc
dec
sub
int3
add
mov
outsb
push
adc
cmp
push
adc
fidivrl
out
int3
lods
scas
xor
push
inc
jge
cmpsl
dec
test
cli
jp
int
cmp
dec
sub
adc
in
out
fcomps
nop
ja
push
shll
out
xchg
pcmpeqw
mov
frstor
daa
bound
popf
sub
mov
aad
jl
jge
test
add
out
fisttps
daa
push
mov
pop
mov
in
xchg
jmp
or
push
jno
pop
sbb
mov
addl
test
cltd
lods
dec
out
aam
jno
sub
pusha
arpl
rcrl
gs
dec
mov
or
inc
push
adc
into
imul
add
add
nop
call
push
js
in
push
cmc
dec
sub
dec
adc
enter
push
lock
inc
outsl
ljmp
sub
mov
pop
xor
repnz
and
in
push
sub
cmpl
mov
push
or
push
push
sub
imul
and
and
cmpsl
adc
add
test
jl
nop
mov
jp
jmp
dec
jl
cli
aas
fisubl
xchg
je
out
int3
jg
ret
sbb
mov
pop
sub
dec
cmp
sbb
sbb
push
cli
inc
mov
call
jge
insl
jg
mov
cmpsb
in
std
sub
fidivrs
aam
out
sbb
adc
pushf
adc
cli
test
xchg
mov
mov
and
cmp
pop
xchg
inc
add
arpl
push
xlat
mov
xchg
into
lret
mov
jmp
insl
sub
mov
std
ljmp
enter
nop
mov
push
or
jbe
add
mov
add
popf
fs
mov
fdivrs
sub
or
add
push
sub
syscall
gs
inc
arpl
mov
fwait
clc
xor
pop
lret
stos
add
repz
dec
fcmovne
scas
imul
pop
inc
xchg
adc
sbb
mov
aam
push
iret
out
jno
inc
xchg
sbbl
fcmovne
xchg
lcall
icebp
mov
hlt
xor
xchg
push
mov
outsl
mov
idiv
lods
rcr
ss
sbb
cmpsb
xchg
popf
bound
adc
imul
in
sbb
xchg
nop
dec
adc
add
dec
mov
in
dec
pavgb
fwait
xchg
out
dec
aad
dec
xor
fnstcw
xchg
pop
iret
xor
fcmove
mov
insb
mov
mov
pop
fs
adc
aas
dec
das
adc
test
dec
jle
je
imulb
inc
pushf
shrb
dec
fs
or
fwait
aad
stos
sbb
add
or
jne
pop
insl
pop
mov
add
cmp
mov
sub
es
xchg
and
push
imul
mov
sub
or
pop
mov
add
ja
shlb
cltd
in
add
js
daa
mov
push
sub
inc
cwtl
sbb
inc
sub
adcb
sub
jge
sbb
and
imul
lahf
ljmp
sbb
dec
iret
or
imul
mov
add
add
cmp
fisttps
xchg
out
jl
in
cmpsl
add
pop
mov
add
and
pop
out
data16
aaa
jne
adc
mov
pop
xor
cli
ret
pop
or
jl
push
xor
mulb
imul
insl
pop
jmp
cmc
test
dec
jle
test
add
add
sbb
hlt
repz
pop
int
stos
ret
sbb
sub
bound
hlt
xchg
or
subb
insb
sahf
outsb
loopne
stos
jnp
push
jbe
icebp
out
dec
xor
pop
rcrl
sub
mov
orb
fs
push
or
push
in
inc
and
dec
in
push
push
inc
push
add
add
aaa
xchg
sbb
xorl
xchg
imul
mov
int
ret
xor
shll
sahf
push
sbb
es
scas
std
imul
add
and
lods
mov
out
or
cmp
lods
pop
mov
sub
sub
mov
add
aas
lods
shll
lcall
mov
fdivrl
add
cmp
shlb
addr16
ljmp
outsb
dec
jp
pushf
add
std
mov
ss
mov
or
push
push
rorl
push
movsb
insb
adcb
push
cmc
int
jae
xor
fnsave
hlt
fstps
jle
inc
in
mov
ror
call
in
clc
push
popa
jo
mov
xchg
mov
and
rorl
nop
xchg
sbb
adcb
add
add
mov
jno
adc
push
push
sbb
cmp
and
dec
movb
jmp
aad
adcl
fsubl
mov
ds
jno
repz
xor
mov
mov
cwtl
mov
inc
mov
je
cmpsb
jp
shr
loop
ror
out
add
lea
mov
sub
add
addr16
cmpsb
xchg
mov
fcomps
push
roll
icebp
sbbl
xchg
fwait
cli
fiadds
nop
jle
inc
lret
daa
dec
sbb
cmp
cwtl
dec
push
xorb
test
test
sub
leave
test
fcoms
add
fxam
push
inc
movsb
ljmp
or
mov
push
imul
xor
mov
nop
xchg
mov
sub
mov
add
and
fs
mov
ret
push
das
ret
out
out
aad
ds
and
mov
sub
and
mov
add
or
lods
cmp
mov
movsb
lret
inc
in
fs
int3
in
push
mov
sbb
inc
cmp
imul
