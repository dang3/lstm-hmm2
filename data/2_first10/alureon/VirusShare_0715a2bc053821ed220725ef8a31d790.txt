push
mov
push
call
push
inc
ror
add
rol
inc
sub
sub
pushl
mov
add
popl
not
pop
add
ret
push
call
push
push
push
push
call
pop
pop
push
push
push
push
call
push
push
push
call
push
push
push
push
call
push
push
lea
pop
push
push
push
sub
inc
not
pop
push
push
push
push
call
call
push
not
shr
shl
pop
mov
push
push
push
call
mov
push
not
dec
not
dec
add
pop
add
push
shl
ror
not
pop
add
mov
push
push
push
call
xor
push
push
call
add
push
push
add
ror
sub
add
mov
sub
pop
push
shl
add
sub
inc
inc
shr
add
not
pop
push
push
dec
ror
inc
sub
add
pop
call
push
sub
rol
inc
xor
sub
pop
mov
push
push
push
call
mov
add
push
sub
pop
mov
sub
jne
push
sub
shr
add
shl
shr
shr
xor
pop
pop
pop
push
push
push
call
pop
push
push
push
push
call
pop
push
add
add
dec
rol
rol
pop
pop
push
push
push
call
xor
ret
push
push
push
push
call
mov
push
push
push
call
cmp
jne
push
push
push
push
call
pop
pop
push
push
call
mov
push
push
push
push
call
pop
pop
push
push
call
add
push
push
shl
ror
sub
inc
ror
xor
pop
mov
push
shr
not
sub
xor
lea
pop
push
push
push
dec
dec
not
inc
rol
pop
mov
push
push
shl
xor
mov
add
pop
push
xor
pop
push
push
push
push
push
call
call
call
push
push
dec
sub
add
mov
xor
pop
push
push
call
push
push
push
call
call
push
sub
sub
sub
pop
push
push
push
sub
rol
add
sub
lea
sub
xor
not
mov
sub
pop
push
rol
not
dec
mov
add
xchg
push
shl
shl
sub
pop
push
push
ror
not
add
not
add
sub
pop
call
push
push
call
movl
movl
push
push
push
call
movl
push
push
push
xor
not
mov
add
pop
push
shr
inc
inc
xor
pop
push
push
xor
pop
call
push
rol
pop
mov
push
push
ror
ror
add
mov
sub
pop
push
add
shr
pop
push
push
push
push
push
call
call
mov
push
shr
pop
xor
push
rol
rol
dec
lea
sub
inc
pop
call
push
push
push
push
push
call
push
push
push
call
call
push
push
push
call
call
pop
push
push
push
push
call
pop
push
push
call
leave
push
push
push
call
xor
push
push
push
call
inc
push
push
call
ret
push
inc
ror
mov
add
xchg
push
push
call
push
push
inc
add
add
pop
call
push
add
pop
push
call
push
add
ror
inc
shl
lea
lea
pop
cmp
jbe
push
shl
pop
add
push
sub
dec
shl
dec
sub
pop
pop
push
dec
add
pop
pop
pop
push
push
push
push
call
pop
pop
push
push
push
call
xor
ret
push
push
push
push
call
pop
push
sub
dec
inc
shr
add
pop
push
push
push
rol
rol
rol
mov
xor
pop
push
push
call
push
push
push
call
call
xor
push
sub
ror
lea
xor
lea
pop
inc
inc
push
not
sub
sub
ror
shr
not
pop
cmp
jbe
push
push
push
call
jmp
cmpw
jne
push
ror
sub
ror
pop
cmp
jae
push
push
push
call
push
push
add
pop
call
push
rol
pop
add
jmp
push
push
push
push
call
mov
push
xor
mov
xor
xchg
push
push
push
push
call
push
push
push
push
push
call
call
push
push
push
push
call
xor
push
xor
rol
not
shr
pop
sub
push
ror
xor
sub
inc
sub
shr
add
pop
push
push
rol
lea
xor
add
pop
push
push
push
dec
add
sub
dec
pop
jmp
push
push
push
push
call
or
je
push
push
call
xor
push
push
push
call
pop
push
push
call
pushl
push
ror
sub
inc
rol
add
inc
shl
lea
pop
pop
push
inc
add
dec
pop
mov
push
dec
pop
mov
push
lea
shl
not
pop
mov
push
add
inc
shr
ror
mov
sub
xchg
push
push
push
call
push
call
push
push
push
push
call
cmpw
jne
cmpb
jne
push
push
call
add
push
push
add
not
inc
sub
shl
mov
sub
pop
push
push
push
push
call
push
call
push
push
call
push
push
push
ror
add
dec
add
add
add
not
shr
mov
add
pop
push
push
push
call
push
push
push
call
push
call
push
sub
pop
mov
push
push
push
call
push
push
push
call
mov
add
push
push
call
add
push
add
add
pop
mov
push
push
push
call
xor
push
push
push
push
call
add
push
push
push
call
add
push
sub
lea
shr
pop
mov
push
push
push
call
xor
push
push
push
push
call
add
push
push
call
rep
push
push
push
push
call
pop
push
push
push
call
mov
push
push
call
add
add
push
push
push
push
call
mov
push
push
push
push
call
xor
push
push
push
push
call
add
push
push
push
call
mov
xor
push
push
push
push
call
mov
push
push
push
push
call
xor
push
push
push
push
call
add
push
ror
sub
xor
shl
xor
pop
add
add
push
push
push
call
mov
push
push
shr
sub
xor
rol
xor
mov
xor
pop
push
push
call
push
call
push
push
push
call
push
push
push
shl
xor
dec
dec
mov
sub
pop
push
push
push
call
push
push
push
push
call
push
push
shl
add
inc
pop
call
mov
push
push
call
push
push
push
add
ror
pop
mov
add
push
pop
add
mov
push
push
push
push
call
xor
push
push
push
push
call
add
push
not
sub
pop
add
push
sub
add
lea
dec
pop
mov
xor
push
push
push
push
call
rep
mov
xor
push
dec
sub
dec
shl
lea
pop
or
je
push
push
push
push
call
mov
push
push
push
push
call
xor
push
push
call
add
push
shr
add
shr
pop
mov
xor
push
add
not
dec
xor
add
pop
add
add
push
lea
not
add
sub
add
sub
pop
rep
push
push
push
push
call
mov
push
push
push
push
call
xor
push
push
push
push
call
add
push
push
push
push
call
or
je
push
push
push
call
mov
push
shl
shl
sub
dec
ror
not
pop
add
push
lea
lea
shr
ror
add
dec
pop
rep
push
shr
pop
pop
push
push
inc
shr
sub
ror
inc
ror
mov
sub
pop
push
rol
sub
inc
pop
pop
push
sub
pop
mov
jmp
push
add
add
pop
push
mov
push
ror
add
sub
not
pop
add
push
add
ror
inc
ror
sub
pop
push
push
push
push
push
call
push
push
push
add
sub
ror
ror
pop
push
push
push
push
push
call
push
push
shr
sub
rol
sub
lea
pop
mov
push
push
call
mov
push
push
call
add
push
ror
shr
pop
mov
push
add
lea
not
ror
pop
add
push
sub
sub
shr
inc
add
sub
pop
mov
add
push
lea
shr
sub
pop
xor
push
push
call
mov
xor
push
not
pop
rol
push
dec
dec
ror
add
not
pop
xor
inc
push
ror
add
pop
cmpb
jne
push
lea
add
dec
shr
sub
pop
cmp
je
add
push
push
push
push
call
cmpl
jne
push
xor
add
pop
xor
push
push
push
call
pop
pop
push
not
shr
lea
shl
rol
pop
pop
push
push
push
call
pop
push
push
push
push
call
pop
leave
push
push
push
call
ret
push
rol
ror
ror
rol
shl
inc
inc
lea
pop
mov
push
lea
pop
add
mov
push
push
push
push
call
push
push
push
push
call
call
push
push
push
call
xor
push
push
push
push
call
pop
push
push
push
push
call
pop
push
push
push
call
pop
pop
push
shl
pop
pop
leave
push
rol
not
pop
ret
push
push
push
call
push
push
sub
shr
inc
shl
add
add
pop
mov
push
sub
xor
sub
dec
pop
cmpl
jne
mov
push
shl
pop
jmp
push
push
push
push
call
mov
push
rol
ror
shl
sub
pop
and
pushl
push
not
pop
pop
push
rol
dec
add
add
add
lea
add
pop
sub
push
ror
xor
shl
rol
add
pop
jmp
sub
push
dec
inc
rol
sub
pop
pushl
push
lea
sub
sub
shr
pop
pop
sub
push
push
push
push
call
cmp
jne
push
ror
add
pop
mov
add
push
push
push
push
call
movzwl
push
xor
rol
pop
sub
cmp
jne
push
not
pop
leave
push
push
call
ret
push
push
push
call
push
push
push
push
push
call
mov
add
push
push
push
call
push
push
dec
shr
dec
shl
not
shl
dec
pop
push
push
push
add
shr
inc
inc
add
shr
pop
push
push
push
call
mov
push
push
push
push
call
push
push
push
call
pop
push
not
shl
lea
sub
xor
pop
mov
push
shl
ror
pop
add
mov
push
push
call
add
push
push
push
call
pushl
push
dec
add
inc
sub
inc
inc
pop
popl
mov
push
shr
sub
rol
ror
shl
pop
add
push
push
push
call
xor
push
push
call
lea
push
not
shr
add
add
shl
inc
rol
pop
mov
push
not
add
lea
lea
sub
pop
add
push
add
pop
xor
push
inc
rol
lea
add
dec
pop
rol
nop
push
dec
lea
xor
pop
nop
push
xor
sub
pop
xor
push
push
push
call
nop
push
sub
dec
add
rol
shr
pop
nop
push
ror
lea
pop
inc
nop
push
rol
add
shr
dec
pop
nop
cmpb
jne
push
dec
add
dec
add
pop
nop
nop
push
sub
dec
add
ror
pop
cmp
je
push
push
push
call
nop
nop
push
push
push
call
inc
push
push
push
push
call
nop
push
add
dec
pop
nop
push
push
push
push
call
cmp
jb
push
push
push
push
call
mov
push
shr
sub
dec
ror
add
shr
pop
add
push
add
sub
not
pop
movzwl
mov
push
push
push
push
call
add
push
push
call
mov
push
push
push
push
call
add
push
push
call
pop
push
xor
rol
dec
add
pop
pop
push
push
push
call
pop
push
dec
pop
pop
leave
push
push
push
call
ret
or
push
add
cmp
or
push
add
mov
or
push
add
arpl
push
leave
sbb
jl
addr16
cmp
inc
mov
sub
or
ret
mov
inc
incl
xchg
repz
push
inc
fwait
dec
xchg
lds
jle
cmp
push
jle
imul
add
imul
push
popa
ljmp
jmp
mov
and
dec
clc
orb
lods
mov
movsl
and
in
sub
inc
in
adc
push
mov
lock
insb
fnsave
mov
pushf
aam
shl
inc
dec
inc
jnp
lods
stos
xor
movsl
ret
out
leave
aad
int3
call
adc
jl
dec
mov
adc
mov
pop
sub
test
movsb
orl
pop
pop
lock
insb
push
jnp
sub
push
cmp
jl
adc
xor
jne
ss
outsl
jg
lods
ss
ficoml
add
pop
adc
dec
mov
divb
or
push
insl
mov
out
aaa
adc
jge
or
iret
mov
or
and
and
cmp
scas
xchg
fwait
push
and
pop
mov
data16
xchg
or
push
pop
push
test
cmp
popa
into
jno
mov
hlt
mov
inc
aaa
test
mov
xchg
inc
stos
test
mov
and
cmp
dec
lret
test
add
addr16
int
and
leave
movaps
pop
jno
mov
icebp
push
jbe
pop
xchg
aam
out
imul
fiaddl
roll
pop
push
fwait
pop
aas
imulb
sub
jbe
inc
fstl
push
data16
pusha
ja
loopne
scas
adc
out
inc
js
sub
jns
outsb
xchg
sub
dec
scas
pop
xchg
xor
leave
loope
xchg
mov
ja
lahf
inc
out
bnd
sbb
test
mov
es
mov
cmp
cmp
mov
std
or
inc
lcall
and
push
adc
jg
mov
setle
and
out
push
jge
jl
mulb
test
stos
clc
xor
mov
movsl
mov
hlt
sti
mov
jne
xlat
pusha
cmp
mov
xchg
inc
mov
mov
jl
sub
fistpl
inc
cmpsb
mov
pop
push
xchg
mov
jmp
inc
sbb
pop
insl
mov
sbb
push
lds
pop
add
inc
push
mov
loope
adc
pop
pop
in
mov
mov
mov
jge
jns
jae
stos
sbb
imul
pop
jbe
flds
push
rcl
adc
je
sub
or
jne
cmpsb
es
dec
mov
sbb
sbb
push
enter
les
dec
repnz
mov
bound
mov
mov
movsl
jbe
adc
bound
jo
push
or
daa
lahf
mov
mov
jb
or
shlb
mov
cmp
int
pop
cmp
testl
adc
jp
lea
mov
dec
dec
inc
sbb
sbb
jg
out
ss
rorb
in
out
mov
clc
in
pop
cltd
mov
xchg
cmpsb
mov
jmp
sbb
loopne
aas
sbb
icebp
shll
pop
fmull
cwtl
arpl
leave
sbb
les
andl
mov
mov
hlt
int3
sub
push
in
shll
mull
ds
mov
pop
jb
or
sbb
lods
pop
sub
jae
push
addr16
testl
sub
inc
adc
mov
lret
or
xchg
or
mov
mov
out
roll
and
call
mov
in
or
enterw
push
lods
dec
ret
ja
lods
test
cmp
xor
in
jne
inc
pop
leave
test
ficomps
xchg
cmp
out
cmpsl
push
pop
iret
adc
int3
aaa
xor
push
les
mov
test
adc
movsl
mov
mov
jl
jnp
mov
fiaddl
inc
xor
sti
inc
das
xor
ret
stc
xor
jne
iret
test
cli
ror
xchg
lods
dec
jnp
insb
icebp
test
fstpl
dec
xor
sub
mov
loope
mov
and
sub
adc
lea
pop
sub
and
insb
jge
cmp
jne
mov
inc
int3
or
jo
pop
jno
add
testb
inc
mov
sbb
cmc
ss
pop
ss
pop
cmpsl
sbb
dec
mov
or
lds
and
jno
push
xchg
dec
xor
movsb
adc
pop
adc
aad
loopne
outsl
andl
jmp
push
cwtl
mov
mov
rcl
mov
lret
mov
shl
xchg
stc
and
xlat
movsl
add
cltd
mov
lahf
cmp
inc
ja
add
push
mov
daa
ja
loop
bound
pop
add
call
fisubs
lret
imul
push
std
adc
add
sbb
into
test
xchg
dec
pop
out
inc
dec
inc
xchg
inc
outsl
xor
adc
adc
icebp
sahf
mov
xchg
daa
mov
imul
aad
pop
andb
insl
outsl
sub
not
loop
outsb
rcll
pop
cwtl
lods
or
mov
sarb
addr16
mov
xor
add
out
mov
and
jo
cwtl
push
jmp
loopne
sbb
pop
xor
pop
sbb
fs
test
and
lcall
xor
mov
clc
push
out
out
add
outsl
mov
out
roll
cli
ror
jecxz
in
push
mov
pop
loop
fildl
adc
sahf
fs
fwait
cmp
dec
out
fisubs
jbe
fldenv
xchg
mov
mov
icebp
je
jg
aas
fidivl
push
push
pop
outsl
and
and
lcall
lahf
jno
loope
xchg
jle
and
jge
jmp
mov
shll
ja
stos
aam
xor
mull
inc
cmpsl
call
sub
adc
push
stos
test
fwait
cld
dec
cmpb
in
data16
aas
push
dec
sbb
sub
sbb
sbb
adc
jnp
add
mov
das
imul
mov
shl
cmpsb
movsl
out
cmpb
movsb
arpl
sub
mov
sub
push
mov
jmp
jg
outsb
sub
fbld
adc
mov
sub
mov
jecxz
les
cmp
ret
sub
shl
mov
nop
add
rorb
out
sbbl
xor
add
mov
cmp
cmc
je
adc
sti
outsl
xor
insb
sub
mov
testb
or
fildll
mov
inc
cmp
stos
pop
or
push
ret
jns
cmp
loopne
add
sbb
movsl
je
inc
cs
and
in
jp
mov
setge
out
xchg
cmc
jl
dec
aaa
pop
cmp
out
mov
push
loop
adc
mov
xorl
movsb
out
lret
cli
clc
xor
push
mov
add
mov
in
or
addr16
outsl
pop
mov
xor
xchg
add
aaa
push
inc
or
cmp
lock
push
xor
jo
in
sbb
mov
inc
dec
out
lret
pop
cwtl
in
xlat
mov
sti
add
outsl
out
movsb
je
and
dec
adc
scas
sti
mov
push
sub
xorb
pop
imul
mov
and
das
xchg
clc
jno
rcll
cli
push
and
cmpsl
add
fcomps
adc
inc
jle
mov
mov
sub
clc
jmp
sub
adc
addl
cmpsb
and
or
dec
inc
bound
mov
mov
xchg
pop
fmull
ja
xchg
dec
iret
or
shrl
daa
test
loopne
mov
int
push
push
pop
nop
lods
add
and
imul
jp
rcrb
pop
scas
dec
or
stc
jnp
daa
or
in
arpl
xlat
aad
sub
inc
mov
mov
ret
mov
inc
ss
test
jae
add
xchg
jo
xchg
jl
sti
imul
sub
dec
scas
in
xor
fxch
pop
sbb
cmp
pop
cmp
insl
andb
dec
push
jns
dec
sub
sub
je
sbb
fwait
out
or
dec
imul
xchg
inc
xor
clc
cltd
in
fs
cmp
je
ror
adc
stos
pop
inc
or
hlt
push
stc
pop
inc
mov
into
cmpb
xchg
push
sub
push
cmp
sbb
add
int3
orb
aad
test
cmp
mov
mov
aam
mov
aaa
add
fwait
mov
push
in
pop
test
mov
pop
push
sub
inc
shr
pusha
ja
add
xor
jbe
lcall
repnz
cld
repnz
lods
out
jns
or
out
mov
sbb
xor
pop
stos
mov
and
in
xchg
pop
jmp
jmp
or
sub
insl
xchg
mulb
sub
cld
xchg
es
mov
pop
mov
xchg
and
cmp
movsb
inc
lods
sahf
fisttpll
aam
jle
mov
pop
sar
inc
call
push
loop
pop
xor
sbb
jge
or
or
push
and
sbb
and
inc
mov
push
leave
xchg
jb
pop
mov
fst
inc
sub
sub
jecxz
leave
add
jno
das
xlat
jbe
jge
pop
ss
bound
imul
loopne
cwtl
push
sbb
outsb
pusha
fistpll
loopne
xor
xor
push
dec
int3
sbb
mov
sarl
jge
jl
out
fmul
pop
loopne
std
call
sbb
xor
mov
xor
movsl
or
pop
add
inc
ret
aas
pop
sbb
sbb
bound
hlt
xchg
aaa
cmpsb
test
push
fimuls
dec
mov
stos
or
cmp
dec
add
aaa
push
idivb
pop
cmpsl
and
jo
popa
ljmp
lods
push
or
cmpsb
push
lret
lret
pop
aad
add
movsl
pushf
aas
test
fistpl
fcomps
sbb
call
test
sarl
pushf
scas
push
aam
divb
jge
inc
inc
mov
sub
inc
push
xchg
rclb
or
jle
stos
sti
pop
pop
out
ficompl
lds
mov
pop
sti
xchg
cli
sbb
pop
shlb
scas
scas
scas
cmpsb
loop
and
sub
push
dec
daa
or
testl
imul
lock
jle
mov
iret
sub
mov
pop
cmp
xchg
icebp
mov
es
push
mov
cmpsb
out
loope
hlt
push
xbegin
mov
mov
ficoms
ret
scas
sti
mov
ret
gs
cmc
loop
mov
aad
mov
mov
insl
or
loop
lds
adc
ja
in
jp
ss
imul
repnz
push
mov
dec
push
hlt
cltd
sub
clc
mov
xor
push
mov
adc
sub
push
lret
sub
add
loop
mull
cli
jmp
lahf
xor
test
outsb
stos
mov
sub
fldenv
sbb
add
sti
add
arpl
fs
outsl
or
stos
pop
lahf
aaa
xor
sub
sub
stos
data16
aam
mov
mov
test
cld
jbe
jl
test
lods
in
in
jne
decb
clc
std
mov
mov
or
cmc
out
sahf
inc
mov
mov
sub
and
out
jge
push
test
fistl
xor
pusha
adcb
mov
xchg
outsl
xor
cmp
popf
cwtl
dec
mov
std
and
arpl
dec
sbb
adc
jb
test
es
dec
pop
gs
pop
dec
scas
dec
pop
in
dec
pop
or
bound
mov
movsl
ljmp
jo
jae
imul
cmp
mov
lahf
movsl
ret
push
add
sbb
sub
lret
jb
inc
push
pop
and
mov
in
push
mov
pop
mov
dec
cmc
adc
into
mov
fs
rorb
push
pop
inc
out
push
int3
dec
cmpsb
fcmovnu
pop
mov
xchg
mov
or
jno
insb
mov
push
inc
stos
jno
adc
sub
outsb
fwait
push
sbb
std
shlb
imul
outsl
push
rolb
jmp
loopne
popf
or
mov
dec
ljmp
jb
call
out
mov
movsb
xchg
aam
add
iret
inc
cmp
ja
pushf
in
ja
bound
lret
test
lods
cmpsl
and
mov
es
jmp
ret
cmp
or
fimuls
pushf
repnz
push
sahf
bound
out
fldcw
inc
adc
movsl
je
and
fstpt
imul
adc
outsb
fucomp
gs
inc
cmc
jecxz
rcrb
jne
test
push
adc
jo
mov
xlat
daa
sbbb
sbb
mov
cmp
mov
fucom
pop
aas
mov
mov
cmp
mov
adc
fistpll
xchg
mov
pop
loopne
inc
adc
fiaddl
ljmp
in
hlt
cmpsl
cmp
es
lea
push
lods
out
pop
xchg
ds
lret
mov
mov
cmp
stos
pop
push
je
test
dec
inc
xchg
cmp
jnp
xchg
jb
mov
push
sub
jecxz
aas
nop
out
or
sub
xchg
decb
loopne
clc
mov
jne
aaa
pop
xchg
aaa
divb
mov
daa
scas
fcmovb
lds
loopne
inc
stos
int3
sub
pop
or
or
aam
bnd
repnz
add
mov
cld
push
je
mov
mov
ret
pmaddwd
jecxz
sbb
lahf
in
mov
xchg
mov
jo
pusha
inc
and
stc
sbb
loop
test
jmp
push
pop
hlt
inc
xchg
jo
add
fiaddl
popa
sarl
scas
outsb
js
mov
js
out
mov
fwait
pop
xor
loop
popf
add
pop
dec
movsb
sbb
cmp
cmp
sti
jmp
orb
push
sbb
jg
in
sbb
cmp
push
outsl
jge,pt
jge
cli
lahf
mov
addl
push
and
adc
lret
mov
xor
inc
punpcklbw
cmp
sbb
dec
push
xchg
insl
pushf
neg
and
mov
repz
lcall
push
rclb
inc
mov
aaa
and
std
adc
mov
es
pop
inc
pop
push
hlt
lds
sbb
add
sbb
cld
adc
push
nop
and
adc
pusha
or
shll
inc
movsl
jne
test
movsl
or
add
mov
enter
lcall
inc
mov
dec
idivb
and
ljmp
mov
add
add
inc
lret
cmpsb
ds
and
cmp
test
mov
movsl
data16
repnz
lds
lods
in
sti
inc
mov
cmp
push
fdivrs
out
pop
cmp
xchg
jg
xchg
lods
out
sub
jne
cmp
dec
aaa
jg
push
retw
pushf
mov
pop
push
push
aaa
adc
lods
pop
jg
movl
bound
xchg
aaa
lret
scas
mov
dec
fs
or
xor
lret
jmp
loope
or
push
daa
scas
push
push
pop
pop
xchg
dec
sub
pop
shrl
xchg
mov
xchg
rorb
or
push
sub
cwtl
lods
shll
mov
xchg
cmc
sub
pop
cmp
pop
mov
fmul
fwait
adc
lock
mov
fistl
mov
or
out
and
inc
mov
hlt
mov
cmpsb
dec
mov
orl
jno
rcrl
sub
or
out
inc
jns
leave
sbb
mov
jge
or
clc
cmpsl
mov
das
andb
ret
pop
xor
jl
adcl
sti
in
jmp
and
push
insb
pushf
cmp
xchg
daa
mov
lret
mov
jg
out
cmovb
clc
insb
movsb
insb
test
lcall
repz
push
mov
ds
int3
mov
inc
stos
call
adc
fs
sahf
dec
mov
test
jne
movsb
xor
aaa
inc
pop
divl
xchg
cltd
rolb
push
push
incl
jp
xor
data16
icebp
cltd
test
mov
adc
fcmovnbe
adc
lret
and
or
mov
dec
mov
adc
mov
mov
js
ljmp
js
pop
adc
sahf
jmp
mov
lret
push
lcall
std
jno
aad
fstpt
jge
lcall
adcl
add
stos
add
ss
jp
mov
pop
cmpsb
aam
dec
int3
fistpl
mov
sti
push
bound
xor
insb
cli
pop
sahf
out
lods
jmp
push
cmc
hlt
sub
insl
mov
xchg
test
dec
mov
mov
inc
push
dec
aam
jae
mov
loop
imul
add
push
cld
fs
test
arpl
aad
mov
or
jmp
cltd
jp
xchg
out
popa
ret
testb
push
loope
jecxz
gs
repz
pusha
jle
cmp
aas
inc
jmp
mov
push
xchg
add
cmc
test
add
test
pop
mov
mov
jp
sbb
pop
leave
cmpsl
mov
cmpsb
sub
dec
pop
ss
or
mov
daa
cmpl
mov
cmpsb
mov
jns
fistpll
xchg
inc
int3
scas
rcrl
into
test
icebp
std
pop
sarb
xor
cs
lahf
jbe
xor
push
sub
mov
jbe
sub
in
and
xchg
adc
sub
sub
sub
cmp
in
jae
push
aaa
and
adc
mov
xchg
subb
mov
adc
arpl
loop
adc
xchg
xor
imul
in
jbe
mov
push
or
or
lret
loope
xchg
push
insl
stc
int3
xchg
mov
inc
xor
test
clc
sub
or
sub
test
mov
lods
push
je
mov
cmpsl
xor
lods
mov
aam
in
loopne
lahf
xchg
adc
loope
shl
jno
mov
insl
daa
fidivrs
jle
inc
lock
mov
lock
shrb
aad
mov
cld
notl
mov
roll
sbb
repnz
push
cmpb
scas
mov
lret
repz
or
cmp
dec
dec
popf
fldcw
enter
cs
test
cmp
mov
cmpl
sahf
daa
lock
sub
or
pop
xchg
mov
test
popa
pop
push
rolb
cs
outsb
and
pop
jo
lret
shlb
pop
jno
sarb
sti
lea
mov
mov
add
sarl
imul
rcl
jbe
mov
in
or
scas
jnp
pop
add
faddl
aaa
jb
pop
or
mov
or
or
sbb
mov
jle
lret
ja
xchg
xchg
sub
push
rorb
lods
ljmp
xchg
jg
cmp
or
jo
xchg
fwait
jns
out
xchg
push
push
push
pop
pop
fwait
mov
mov
push
sti
data16
in
cmp
inc
mov
xchg
cmp
dec
mov
jnp
inc
xchg
mov
popf
push
ljmp
insl
and
jmp
xchg
push
xchg
jp
lods
inc
lret
or
jns
lahf
fisttpl
or
cwtl
mov
push
in
xor
add
and
out
add
adc
adc
pop
lods
lahf
test
pop
lahf
pushf
xchg
mov
pop
lods
mov
daa
hlt
adc
sahf
jp
rdpmc
add
cli
xchg
push
cltd
mov
leave
in
jnp
in
cmp
nop
popa
sub
repnz
jae
jne
jns
jmp
mov
mov
outsb
loop
adc
repnz
imul
add
and
aas
add
addr16
sbbl
fisttpl
or
xor
xor
outsb
fs
rorb
mov
in
mov
in
push
fistpll
cmp
push
mov
ret
and
xchg
adc
sub
in
les
in
js
and
enter
mov
stos
stos
pusha
scas
jg
dec
dec
push
inc
jbe
pop
pop
das
jne
popa
or
add
orl
xor
cltd
xchg
testl
xchg
adc
mov
test
aad
iret
enter
cld
push
fwait
mov
xchg
sub
jnp
addr16
sub
pushf
push
or
and
cli
gs
xchg
shrb
sub
enter
nop
mov
fwait
push
outsb
push
mov
adc
pop
cmp
jae
inc
out
incb
jle
push
je
mov
dec
lds
jg
sub
addl
cmp
mov
jne
add
push
sbb
out
sahf
sub
xchg
stc
jo
pop
outsb
xchg
lods
and
mov
xchg
xlat
adc
sub
add
xor
jmp
int3
pop
les
inc
shl
and
push
les
cld
adc
sbb
lret
dec
adc
ds
mov
jl
adc
xchg
push
incl
xchg
inc
mov
pop
movsb
sbb
mov
xchg
lcall
xlat
lcall
sbb
dec
inc
xchg
movsl
xor
fistpl
inc
add
data16
loop
add
pusha
fisubrs
icebp
in
jnp
jne
push
cld
jno
mov
outsb
xor
aam
es
stos
mov
inc
sub
scas
sub
inc
xchg
mov
shll
nop
push
test
subl
aad
or
out
push
sbb
filds
jb
enter
sarb
xor
sbb
shrb
out
fildll
jns
nop
or
jle
mov
inc
fwait
jp
jnp
sbb
jmp
mov
aam
adc
mov
roll
lcall
orl
jb
jecxz
xchg
pop
je
dec
cltd
push
lcall
testl
out
loope
inc
xchg
sbb
inc
xor
adc
or
fisttps
int3
cld
in
dec
pop
xor
cmp
mov
fwait
jnp
rclb
xor
jnp
mov
cmp
add
mov
mov
clc
in
cmp
leave
pop
xor
and
adc
aaa
popf
sbb
adc
jp
lret
pop
sub
clc
add
aam
inc
aaa
jmp
lock
outsb
test
shrb
xchg
ja
fcompl
leave
ja
lahf
cltd
fisubrl
mov
xlat
and
clc
mov
push
jmp
inc
inc
pop
es
inc
adc
aam
in
bound
xor
testb
int3
cmp
push
fdivs
lret
rorb
jno
lahf
jecxz
mov
lock
or
insl
loope
mov
es
cmp
in
adc
ss
pop
cmp
lods
fst
mov
jbe
mov
rorb
fwait
inc
out
popf
xor
loope
out
out
lea
fs
ret
cld
sbb
adc
xchg
test
jne
or
dec
add
mov
stc
xchg
xchg
scas
je
lret
adc
ljmp
loopne
mov
jmp
sbb
jno
nop
sbb
aas
es
in
push
pop
xor
pop
push
mov
adc
jne
sub
int
adc
push
sub
or
loope
jbe
add
cmp
mov
clc
dec
inc
and
lcall
inc
pop
fiaddl
inc
pop
mov
push
cmc
xor
cmpl
arpl
xor
ret
pushf
cltd
or
data16
and
mov
daa
sarl
jb
mov
adc
test
xchg
enter
fnstcw
adc
inc
test
xchg
mov
sbb
pusha
mov
push
pop
movsl
adc
jns
push
shrb
imul
gs
xor
shrl
mov
jno
pop
sub
sub
mov
xor
add
sbb
xchg
mov
or
loope
nop
and
js
cwtl
pop
insb
inc
aas
fisttpl
sbb
lcall
xchg
push
adc
jle
bound
inc
mov
push
adc
mov
inc
mov
subb
xor
jb
cmpsl
lods
jnp
das
into
and
shlb
mov
xor
in
in
jmp
dec
call
cs
out
xor
in
dec
nop
mov
rclb
test
lahf
cmp
dec
ret
and
ret
adc
fiaddl
mov
mov
adc
push
mov
jmp
out
cld
in
stc
mov
ret
inc
xchg
in
test
adc
je
rolb
xor
mov
out
jmp
xor
add
inc
jno
arpl
push
test
ljmp
xor
mov
sub
lea
cltd
mov
bound
pop
fsubrs
rorl
shll
cmp
inc
mov
int
test
test
pushf
test
or
shrb
jae
aad
and
pop
js
leave
sbb
int3
dec
jecxz
mov
lods
inc
jns
xchg
enter
test
js
adc
mov
adc
lods
and
inc
add
push
and
imul
lcall
aas
bound
dec
das
sahf
mov
lret
mov
push
lret
cwtl
xchg
fldcw
jmp
leave
xor
mull
cmp
xor
adc
adc
xchg
sub
les
xchg
nop
in
or
insl
scas
lods
jle
mov
std
or
pop
rol
pop
mov
inc
mov
stos
push
insb
scas
lds
cmpsl
add
add
out
add
pop
pop
ds
jb
sub
movsl
in
cs
aad
mov
sub
ret
adc
cmp
push
adc
xchg
test
and
sbb
pop
sub
clc
fidivrs
movsb
ljmp
mov
cmp
sti
movsl
mov
mov
jne
xlat
xlat
dec
push
sub
xchg
xchg
bound
clc
jge
cmp
sahf
inc
in
in
aas
sub
loopne
pop
push
jnp
insb
lock
jae
mov
popf
movsb
add
mov
sub
lods
pushf
inc
mov
leave
popa
aad
shll
adc
adc
push
filds
or
inc
dec
dec
es
push
cmp
repnz
idivb
lea
pop
mov
cmpsl
push
out
dec
nop
jecxz
mov
sbb
fadds
jp
or
das
xor
in
mov
jbe
mov
int3
push
mov
push
jns
pop
pop
xor
xchg
sti
imul
mov
jecxz
cwtl
and
and
add
push
lahf
or
and
cmpsl
test
in
shrl
inc
mov
loope
xor
enter
push
cwtl
pop
hlt
lret
lcall
bound
or
cmp
lea
mov
lds
pop
mov
mov
jae
cwtl
dec
xlat
ret
push
mov
or
hlt
inc
jb
dec
cwtl
stc
test
and
movsb
adc
stos
xlat
sub
and
cli
out
test
mov
add
jae
add
sti
xchg
stc
aad
mov
and
mov
dec
jg
jge
shll
mov
dec
adc
add
pop
xor
shll
icebp
push
jge
jb
js
dec
inc
xchg
or
cmp
jecxz
lds
or
xchg
xor
xchg
ret
lret
add
and
cmpsb
std
adc
jg
stos
incl
and
push
cmpb
xor
bound
sub
int3
jp
mov
adc
xchg
push
data16
add
jns
call
or
repnz
cmp
add
and
pop
pop
mov
fidivrl
dec
in
and
mov
into
jge
mov
lock
add
mov
xor
push
or
cli
fdivr
and
lea
xchg
dec
fucomi
shlb
imul
out
mov
mov
into
mov
sub
dec
in
in
and
loopne
inc
test
in
loop
bound
out
push
orl
push
out
xchg
sub
cmp
ja
adc
lahf
xor
xor
jmp
ret
mov
lcall
dec
aaa
jno
jo
rorl
dec
inc
popa
xor
fadd
lods
sbb
pop
call
or
or
push
push
ficoms
dec
loopne
mov
pop
negb
lds
sub
lret
mov
xchg
xor
imul
orl
adc
or
xchg
push
into
movsl
scas
push
mov
scas
cmp
pusha
xchg
fildll
cmp
call
sbb
mov
pop
in
inc
dec
les
mov
repz
xchg
incb
bound
push
jnp
popa
stc
test
sbb
add
in
push
std
xor
sub
ds
out
push
pushf
fiadds
and
mov
sbb
insl
aas
lods
repz
push
jno
sbb
add
out
sbb
int
outsb
bound
xor
stos
leave
lock
push
xor
mov
and
sbb
jno
cmp
leave
das
xchg
or
cmp
insb
mov
mov
ret
inc
push
jb
lds
imul
or
in
mov
repnz
jmp
fs
rcrb
mov
dec
lods
insb
push
push
jecxz
adc
outsl
cmp
imul
adc
ja
xchg
jecxz
das
mov
loope
mov
add
inc
testl
mov
push
inc
test
fmuls
cld
jnp
push
aas
sub
xor
mov
push
lcall
adc
mov
rorb
incl
cmc
fdivrs
int
fnstsw
push
push
sahf
lods
sub
popf
mov
fwait
in
fwait
aaa
jnp
adc
mov
inc
hlt
stos
mov
cwtl
push
shll
rcll
adc
cmp
lods
mov
sbb
add
mov
mov
mov
pushf
punpckhwd
loopne
jb
sub
mov
push
aaa
fs
jno
jl
ret
jns
test
icebp
and
sbb
sahf
inc
out
repz
dec
adc
mov
int
dec
std
in
imul
xchg
lods
and
pop
jecxz
pop
cmp
out
cmp
mov
and
jmp
push
push
fdivrs
aad
rcll
dec
pop
adc
orl
push
cmpb
rolb
outsl
lea
inc
adc
mov
adcl
and
pop
xchg
lods
push
mov
jge
mov
mov
cli
cs
hlt
pop
dec
pop
daa
and
mov
mov
test
aas
mov
jo
sub
adc
loopw
dec
int
mov
adc
push
mov
xchg
test
ds
sbb
out
sbbl
xchg
push
test
scas
addl
in
jl
nop
or
notb
xchg
les
mov
ds
pop
cmp
mov
ret
and
ret
idivl
sub
add
pop
sbb
sbb
cli
roll
and
xchg
xchg
mov
xor
sub
into
test
jae
sub
xor
iret
test
ljmp
out
push
xor
imul
jns
jmp
sub
lret
ja
sbb
icebp
in
out
mov
dec
test
stos
cmpsl
pop
mov
decb
imul
jp
jb
pop
push
cmc
mov
jmp
mov
sbb
pop
push
adc
pop
mov
addr16
sub
sbb
loopne
inc
movsb
jno
in
les
imul
xchg
pop
mov
fs
pushf
iret
push
mov
mov
ret
jle
xchg
push
loopne
and
sbb
xor
add
stos
add
adc
inc
mov
mov
out
mov
jp
pushf
jg
fidivrl
imul
xchg
les
mov
lea
add
call
nop
clc
mov
clc
push
add
scas
push
xor
cmpsl
insl
lahf
push
cmp
dec
scas
mov
push
xchg
out
ret
add
fnstsw
std
decb
adcb
cmpsl
and
mov
mov
xor
cs
arpl
fdivr
or
fisubl
or
movsb
mov
rcr
sahf
xchg
cmc
or
movsb
sarb
mov
jg
cmp
popf
inc
out
dec
sbbb
or
or
call
dec
inc
shlb
int
add
cmp
mov
aas
mov
cmpb
stc
test
fs
mov
sarb
sarl
mov
push
cmpsb
icebp
repnz
ss
xor
sbb
ret
and
and
sub
daa
ljmp
jbe
pop
inc
shll
dec
jb
sub
icebp
scas
sahf
fmull
fidivrs
dec
mov
jne
scas
push
rcr
imulb
pop
and
movsl
out
push
ret
add
mov
dec
popf
imul
test
dec
in
test
repnz
fcomp
insb
pop
fsubrl
hlt
lret
sub
xlat
add
sbb
and
mov
adc
pop
outsb
pop
sbb
sub
faddl
out
dec
shll
xor
hlt
dec
xchg
div
and
icebp
inc
in
bound
aam
sbb
or
push
aam
stc
daa
mov
filds
jb
ljmp
sbb
add
mov
add
push
sub
push
push
mov
lret
xor
loop
lret
in
inc
mov
pop
pop
dec
pop
or
xchg
cmp
or
jo
pop
xchg
jnp
xchg
or
inc
pop
inc
xchg
pop
rolb
in
hlt
ss
outsb
push
je
cmp
clc
lahf
pop
movb
std
mov
push
push
dec
push
neg
push
jns
inc
mov
arpl
adc
or
fisubrs
push
movsl
push
cmp
mov
cmc
call
daa
and
pop
pop
or
insl
inc
leave
mov
mov
jbe
jecxz
icebp
push
cmpb
mov
int
sbb
je
mov
sub
xor
sarl
dec
adcb
xchg
shlb
pop
movsb
pop
sub
cwtl
jl
cli
jns
inc
mov
lods
movsl
adc
cmpsb
add
mov
push
push
and
xlat
dec
jne
add
push
xchg
inc
adc
sbb
push
mov
out
dec
sbb
inc
pop
divl
pop
fbld
ljmp
mov
cmc
in
daa
stc
in
push
pop
jnp
adc
inc
movsl
test
fstps
leave
minps
loopw
dec
jl
or
int
xchg
jo
and
pop
mov
rcll
xchg
leave
std
xchg
pop
mov
pop
mov
cwtl
adc
js
cld
cwtl
rolb
add
add
in
clc
adc
cmpsb
mov
pop
adc
pop
jno
xchg
repnz
out
pop
push
adc
iret
ret
pop
lcall
dec
lret
sub
mov
mov
repnz
movsl
xchg
mov
sub
sub
adc
je
gs
je
cmpb
add
fxch
jle
hlt
sahf
add
jp
sbb
xor
jl
insl
lret
jne
fstpl
pcmpeqb
mov
loopne
push
mov
sarl
inc
popa
enter
sbb
bound
arpl
stos
xor
mov
mov
jb
pop
push
xchg
pushf
add
movsl
inc
mov
call
inc
sub
incb
and
xchg
xchg
popf
test
lahf
and
push
cmpb
push
pop
mov
mov
mov
pop
mov
daa
cmp
scas
push
jecxz
push
jns
mov
loopne
mov
popf
mov
push
adc
jno
mov
rol
jno
mov
addl
cld
jbe
lret
add
movsl
sbb
test
xchg
stos
xorb
push
adc
dec
sub
daa
shl
lock
popa
lods
push
ljmp
stos
mov
xchg
or
cld
daa
ret
xor
lret
mov
into
push
sub
and
cmpsb
inc
dec
adc
stc
add
insb
sbb
icebp
aaa
movsl
repnz
add
lods
testb
lret
push
cs
push
mov
jmp
hlt
inc
fwait
inc
fcoms
mov
add
mov
lds
cmp
jno
mov
negl
imul
sahf
in
push
sbb
or
sarb
sbb
push
out
loope
test
cmc
xor
jae
js
mov
cmp
jecxz
icebp
filds
mov
pop
push
jecxz
jbe
roll
add
lret
xor
mov
rolb
arpl
fs
out
out
stos
xcrypt-cbc
cmpsl
pop
iret
cs
fbstp
add
pop
loop
sbb
inc
pop
out
shrl
mov
repz
mov
add
mov
pop
aas
cs
dec
cli
and
clc
das
cmc
mov
pop
jnp
ljmp
mov
pop
mov
pop
mov
adc
mov
fdivrl
cld
jbe
mov
or
pop
mov
jle
loop
mov
dec
adc
shrb
dec
mov
push
leave
fwait
popa
inc
popf
jb
testl
or
arpl
pop
jo
or
dec
cli
or
sub
aad
shlb
in
pop
imul
xchg
inc
fscale
mov
mov
xchg
jle
jl
aad
mov
mov
data16
cwtl
ret
mov
repz
ja
pusha
fidivs
cmp
jg
add
mov
or
cmp
pop
je
fistpll
pop
out
adc
inc
lods
cli
rorb
adc
outsb
icebp
movsl
push
hlt
sub
jp
stos
xchg
jle
outsb
inc
xor
mov
adc
inc
je
fimull
xor
push
imul
adc
mov
push
dec
setle
ljmp
mov
push
sub
test
sub
add
push
pop
je
std
xor
fcomip
movsb
adc
adc
pushf
js
jbe
sub
pop
rol
fwait
inc
and
ss
pop
inc
jmp
nop
or
shl
mov
cmp
and
nop
nop
mov
ss
mov
adc
jbe
out
fwait
push
mov
mov
cmovle
mov
xor
inc
in
dec
pop
or
ret
shrl
out
dec
dec
dec
adc
mov
mov
test
jnp
stc
cmpsb
push
add
cmp
mov
icebp
ja
aas
das
cld
xor
jno
cmc
inc
add
icebp
inc
lock
jb
ja
push
xor
jae
addb
fstp
repz
pop
jno
pop
test
into
shll
out
or
mov
in
and
jbe
add
imul
xchg
stos
mov
add
pop
and
clc
sbb
lock
and
adcl
test
pop
or
mov
sahf
mov
pop
aas
es
aam
call
leave
xchg
test
lahf
add
dec
add
jmp
ljmp
test
adc
arpl
fcmovnu
jae
ljmp
fldcw
in
sbb
in
mov
imul
aaa
test
notl
rcll
adc
or
jmp
xor
int
adc
pop
adc
or
sub
jae
push
js
jne
out
mov
icebp
fs
mov
push
jne
mov
js
cmp
inc
nop
adc
imul
add
pop
cmpb
dec
mov
movl
cmp
lock
test
outsl
sbb
movsb
xor
aas
fdivrp
lods
mov
and
adc
bound
arpl
push
inc
cltd
dec
in
xlat
ljmp
mov
testl
mov
in
jl
push
jbe
mov
cmc
out
decb
xor
gs
mov
jae
add
add
data16
jae
test
xchg
sbb
and
adc
or
or
test
out
notb
sub
js
fcmovne
xchg
fldenv
ror
mov
ret
loopne
adcb
outsl
pop
frstor
pop
outsb
in
push
sub
lret
hlt
fst
xor
push
jae
cld
adc
adc
pusha
shll
jns
push
leave
add
leave
jg
mov
arpl
sbb
pop
sarb
cmp
in
lret
push
pop
jne
sub
pop
test
je
insl
jnp
mov
jne
out
or
jecxz
popl
je
int3
dec
push
push
call
rclb
out
ss
in
imull
pop
adc
mov
mov
pop
mov
mov
shlb
adc
and
imul
jb
add
dec
mov
test
add
les
mov
dec
sbb
xlat
out
cmp
cld
xor
push
jecxz
ss
xor
add
add
pop
dec
sub
dec
or
cmp
out
mov
in
popa
mov
nop
or
pusha
js
push
mov
jnp
insb
in
test
fldt
mov
dec
pushf
mov
ljmp
mov
ja
testb
add
out
aam
ja
aad
cmpl
push
int
leave
subl
push
xor
imul
cmp
repnz
aaa
ret
dec
inc
lds
push
pop
nop
stc
lods
je
jmp
das
dec
mov
orb
pop
xor
xchg
mov
jp
push
jecxz
xor
lahf
xor
cmpsl
xchg
cs
xchg
in
inc
xor
movsb
test
cmp
les
int
sub
fldcw
dec
movsl
mov
sarl
pop
lods
mov
js
cwtl
mov
xchg
shll
push
jno
fadd
xchg
daa
ret
push
in
xor
test
add
sub
je
fbstp
lcall
and
sub
loopne
in
pushf
insb
xchg
pop
ljmp
ror
pop
and
pop
js
icebp
dec
aam
repnz
and
jle
aad
pop
test
fadds
inc
sarb
or
ret
ss
ljmp
scas
dec
andl
pop
cmp
insl
jo
dec
stc
mov
inc
sahf
xchg
sub
jbe
cmc
push
ffree
xor
loop
mov
je
adc
xchg
sbb
xchg
in
adc
jbe
push
jl
and
imul
inc
pop
out
sbb
cmc
mov
stos
jb
iret
scas
jle
cmp
mov
and
and
bnd
pop
sbb
mov
dec
lret
fs
mov
jno
push
fdivs
sub
rcll
jno
mov
xchg
or
inc
and
out
add
sub
and
lods
stos
repnz
out
enter
hlt
xor
test
in
mov
sub
mov
lea
cmpsb
push
sbb
insb
pop
mov
xor
cli
adc
and
sbb
cmp
xor
cwtl
sub
or
pop
call
lea
mov
pop
jne
addr16
data16
imul
in
sbb
lock
jg
movsb
addr16
dec
add
clc
xor
mov
out
xor
popf
ret
stc
and
xor
pop
sbb
fwait
je
or
push
pop
or
cmpsl
cmpsb
test
test
inc
xchg
pop
nop
cmc
adc
mov
call
sub
sub
mov
rcr
adc
mov
in
aam
hlt
adc
inc
insl
sub
cmp
inc
outsb
fstl
bnd
rep
bound
nop
adc
pusha
inc
add
mov
test
insl
lods
out
inc
adc
pop
pop
cld
imul
mov
jecxz
js
aas
inc
pop
pusha
pusha
pusha
inc
pop
mov
sbb
rcr
jnp
xchg
xor
sbb
mov
sub
std
jae
cwtl
mov
sbb
fistpll
push
cmp
mov
int3
push
sarl
lret
daa
in
or
test
popf
loop
out
pop
mov
xor
xor
fstps
rol
mov
popa
cmc
call
add
std
ret
out
fst
mov
or
daa
xchg
xchg
push
into
fcoms
test
push
add
cmp
pmaxub
repz
and
and
shll
jg
mov
mov
cmp
or
popa
divb
mov
pop
mov
daa
mov
push
push
cltd
push
push
insl
sbb
and
xor
cvttsd2si
sub
ret
cltd
mov
sbb
pusha
sbb
js
mov
mov
call
cmpsb
mov
test
leave
jecxz
jns
std
cli
aam
and
shrl
and
inc
mov
sahf
lods
fnstsw
mov
sub
adc
inc
push
call
test
cmp
loop
lahf
jg
test
shrb
dec
or
xor
inc
sbb
test
and
aaa
pop
test
adc
scas
aad
mov
mulb
add
aad
das
inc
mov
arpl
pop
pop
fdivs
mov
rolb
xchg
or
mov
add
sarl
mov
add
fs
or
aas
push
sub
imul
pop
cmp
sbb
fisubl
fcmove
pushf
or
mov
bound
jge
ljmp
std
cmp
mov
xor
mov
jecxz
test
cs
dec
stc
loop
nop
pop
push
test
mov
sbb
fcmovnu
cld
adc
cmpsl
cld
pop
lret
push
or
in
or
jecxz
sub
pop
lahf
jnp
aas
or
cmp
xor
add
test
and
and
xchg
jb
cmp
lods
sbb
rclb
ljmp
clc
stc
ljmp
xlat
mov
push
das
scas
jg
addr16
pop
rcrb
push
cmpb
xor
inc
mov
daa
cmp
dec
fidivl
lret
in
sub
sub
rcrb
inc
sbb
mov
aas
add
data16
ja
fs
dec
pop
repnz
prefetch
xor
in
les
push
xor
and
insl
pushf
add
cli
dec
push
xchg
xchg
repnz
out
cmp
mov
addr16
xor
jno
jge
fldl
shlb
int3
adc
mov
lfs
shll
sub
sub
repnz
sbb
fwait
cld
ficompl
or
sub
jg
sti
je
add
and
and
dec
lock
mov
push
push
and
and
enter
and
cmpsl
repz
lods
out
pop
lret
add
adc
jge
daa
cmc
das
pop
dec
xchg
cmp
dec
xchg
iret
inc
add
sbb
call
sub
adc
or
or
cmpl
push
dec
mov
ds
mov
xor
movb
pop
lcall
icebp
call
loope
and
mov
mov
bound
xlat
dec
int
shl
adc
jbe
pop
xor
mov
sbb
or
outsl
xor
sub
lock
aas
je
in
hlt
insl
dec
sbb
mov
fcoml
push
fmuls
mov
sbbl
out
nop
in
icebp
dec
mov
mov
add
mov
pushf
mov
lret
lahf
jge
popfw
in
sbb
mov
pop
sbb
and
xlat
or
mov
jno
sbb
jae
lea
or
into
push
dec
sbb
mov
mov
ret
pop
rcll
addr16
add
adc
xchg
pusha
lds
ljmp
sub
in
mov
sbb
aas
cld
cmc
in
mov
dec
push
mov
ror
sub
xchg
pop
popa
leave
call
sbb
test
rolb
mov
lahf
outsb
jle
pushf
inc
inc
sbb
jmp
ficomps
dec
movsl
sub
lock
inc
adc
clc
mov
shl
mov
shrl
inc
aaa
mov
and
and
call
lods
test
std
adc
cltd
xchg
dec
adcb
mov
addb
mov
sbb
add
lret
mov
pop
cld
popa
push
bound
lret
in
andl
push
sub
fwait
mov
fsubrl
cmp
das
aas
in
repnz
mov
and
cmpsl
xchg
rorl
pushf
inc
add
xchg
add
mov
in
cltd
mov
andb
movsl
dec
in
scas
fldt
mov
aad
pop
add
xchg
jg
movsl
inc
orb
jns
push
add
push
cmc
in
cmc
mov
mov
shlb
mov
pop
andb
inc
mov
dec
scas
push
inc
mov
or
push
sbb
sahf
lret
lahf
jecxz
lahf
clc
fldcw
jbe
inc
int3
xchg
rcr
sub
sub
shl
loopne
sub
or
cmp
mov
dec
push
sbb
lret
or
aad
cltd
adc
xchg
loope
sbbl
or
lahf
xchg
cmpsb
inc
xchg
cli
in
cmp
xchg
sub
jb
arpl
nop
jbe
xchg
int
xor
jp
mov
pop
dec
sbb
push
mov
cmpb
loopne
repz
and
push
es
loope
imul
movsb
pop
mov
ljmp
out
imul
add
jbe
jge
xor
call
test
and
jno
stc
pop
jle
lods
pop
scas
jne
sbb
jns
dec
icebp
in
imul
and
popf
cmp
lods
xchg
lcall
or
mov
mov
jbe
aam
lret
inc
clc
cmpsb
insb
outsb
pop
cmp
daa
adc
cwtl
pop
rcrb
fdivs
mov
je
jmp
cmc
aas
les
es
cmp
arpl
adc
adc
inc
pop
mov
and
xchg
movsl
jno
in
xchg
fs
xor
flds
add
fcompl
mov
lock
pop
shrb
mov
jmp
xor
mov
cmpb
dec
dec
mov
and
push
sbb
pop
ror
mov
xchg
push
push
test
arpl
aaa
adc
flds
addr16
and
dec
mov
test
sbb
fwait
loopne
in
lea
es
jecxz
add
mov
pop
inc
dec
inc
push
push
xchg
add
add
cmp
ficoms
add
sbb
outsl
ja
jbe
mov
test
push
lahf
cmp
pusha
loope
cmp
mov
stos
dec
add
adc
shl
cmp
or
pop
fildll
and
stc
dec
call
test
pop
pop
rol
das
repnz
test
xchg
addr16
cmp
fiadds
stos
xchg
cmp
push
or
ds
aaa
mov
popa
imulb
shrb
scas
dec
outsl
jae
and
mov
mov
mov
das
clc
repz
dec
sub
mov
lret
push
mov
mov
fistps
test
dec
adc
dec
pop
test
outsl
jecxz
xchg
les
cmpsl
add
xor
push
movsb
jae
jle
xor
cli
std
cmp
add
xchg
out
es
cmpb
adc
popa
sbb
mov
lret
repz
cmp
xchg
ljmp
js
insl
cmc
adcb
in
andb
dec
test
pushf
cwtl
mov
sbb
and
rol
xchg
insl
call
or
and
lea
jns
jo
sub
pcmpgtd
pusha
push
stos
sbb
loop
aad
call
outsl
sbb
pushf
mov
xchg
xlat
je
gs
adc
mov
out
mov
add
push
and
jmp
push
in
icebp
loop
sarb
sti
cmp
mov
push
sbb
xor
imul
outsl
lahf
mov
cmp
jb
call
inc
lods
push
cs
fdivrl
pop
lret
mov
xchg
cli
hlt
lret
sub
insb
pop
add
scas
mov
cmp
dec
data16
mov
shlb
mov
mov
int
xchg
aam
push
adcb
ljmp
inc
jp
in
fisubl
mov
add
sub
push
fadds
jbe
push
hlt
dec
ret
push
sbb
mov
mov
cmp
add
push
dec
cmp
jns
xchg
test
adc
lds
push
lea
jb
fdiv
inc
fnstcw
hlt
mov
mov
loope
jne
or
scas
xor
sbb
cltd
scas
dec
mov
mov
ja
and
clc
mov
rclb
and
addr16
adc
flds
pop
sub
xchg
scas
push
mov
push
sbb
inc
in
jb
cmp
int
cltd
and
fdivl
push
mov
mov
pusha
cwtl
mov
stos
addr16
push
iret
mov
cmpb
adc
lret
cmp
mov
lds
inc
aaa
and
inc
dec
cmp
cmpsl
sbb
xchg
loopne
fistl
out
or
pop
je
repnz
push
xor
sub
data16
lods
incl
dec
sahf
jns
out
sbb
pop
and
or
and
stos
adc
lock
int
xchg
outsb
add
add
mov
lahf
xchg
cmpsl
imul
push
sub
jns
pop
enter
jae
and
ja
ror
movl
cmc
shlb
mov
push
pop
sbb
and
addb
mov
sbb
xor
inc
xchg
inc
pop
rcll
and
loope
mov
js
daa
lods
movsl
mov
add
cmp
in
push
cld
xchg
lock
inc
sti
sbb
mov
jbe
mov
shll
pushf
fmull
lcall
and
cmpb
hlt
cmpsl
xchg
into
lods
das
daa
adc
int
fcompl
mov
cltd
pop
sbb
xor
es
jecxz
movlps
movsb
fistl
je
and
imulb
jae
xor
dec
and
int3
cmp
push
ret
leave
fidivl
rcll
dec
in
bnd
jnp
loop
mov
mov
out
imul
mov
subl
sub
cmp
or
repz
das
fcoml
cs
fbstp
out
add
imul
xchg
cmp
gs
mov
scas
sbbl
aad
ss
mov
mov
fildll
jbe
push
shl
iret
dec
inc
jne
insb
inc
orl
cmc
xchg
xchg
pusha
loopne
inc
adc
ret
scas
int
dec
and
mov
fsts
pop
sarb
jne
fsubp
and
fisttpll
xchg
lahf
and
cltd
lock
fcomps
pop
pop
and
fdivrl
jo
divb
push
movsb
push
loopne
cmp
push
pop
mov
sub
fistpl
mov
xor
dec
loopne
add
mov
mov
loope
data16
pop
inc
xchg
shll
jns
hlt
mov
arpl
mov
popa
jmp
fnstenv
cld
out
arpl
xor
adc
ljmp
loop
sti
inc
mov
push
mov
pusha
stos
sub
dec
add
xchg
repz
fadds
push
test
testb
cmp
mov
punpcklbw
movsl
push
test
mov
out
cmp
movsl
dec
cmp
pushf
movsb
ss
pop
and
int3
stc
fdiv
or
jge
jae
lahf
lods
mov
inc
imul
and
cmp
xchg
xor
mov
or
mov
lahf
fiaddl
xor
iret
stos
jg
sub
jns
and
add
in
jnp
loopne
loope
xchg
pop
test
jne
and
out
or
xor
mov
sbb
dec
test
shl
ret
adc
push
cmp
adc
pop
ljmp
popa
or
jecxz
add
jnp
daa
mov
lret
add
cmpsl
movsl
sahf
orl
data16
nop
adc
addb
mov
pop
mov
scas
push
dec
ljmp
shr
push
mov
outsl
dec
push
mov
aaa
jo
rolb
jns,pt
in
in
aam
fcomip
push
aad
stos
jns
add
cmp
pop
out
mov
jnp
mov
pop
sub
xchg
in
push
jle
movsb
jne
popf
push
mov
xchg
fldt
jmp
pop
xchg
jns
mov
jno
mov
sti
dec
ficomps
xor
imul
rorl
xchg
pop
adc
add
mov
dec
out
or
add
call
mov
xor
dec
mov
ljmp
jmp
insb
sbb
aad
daa
mov
sti
xlat
and
insl
or
xchg
sarb
shrb
mov
mov
push
sti
notl
data16
mov
jl
or
pop
mov
faddl
xchg
mov
pop
popf
movsb
dec
add
dec
cs
leave
jg
call
jbe
xchg
adc
jg
fsin
add
push
shl
mov
popf
enter
push
mov
enter
and
sti
inc
push
test
ret
pop
fs
jb
add
insl
out
xchg
shl
sub
fnsave
xchg
mov
movsb
decb
sub
jne
push
mov
mov
inc
push
ss
mov
xchg
pop
and
xor
into
shl
stc
lahf
lcall
ss
js
jae
inc
popa
movsl
btcl
in
or
jno
and
add
pop
loopne
pop
xlat
stos
adc
sub
mov
or
jl
cltd
mov
bound
fiadds
call
or
cli
cmp
stos
movsl
bound
leave
sbb
jae
pusha
ds
test
adc
repnz
pushf
test
xchg
nop
and
xchg
inc
jo
xchg
dec
insl
cltd
sbb
sar
ljmp
sbb
mov
sbb
mov
jle
or
cltd
lods
sbb
pushw
outsb
lret
std
or
and
pusha
je
insl
xor
mov
jecxz
jo
inc
xor
out
jnp
jmp
adc
stc
or
sub
popf
lock
adc
pop
xchg
in
mov
stos
xchg
push
cmpsb
dec
fwait
mov
adc
out
rolb
jbe
loope
jne
sti
and
mov
push
hlt
cli
aad
lock
les
xchg
jns
inc
dec
xchg
push
jmp
movsl
loope
pushl
out
out
insb
shll
sbb
push
sub
sub
repnz
ret
mov
fisttpll
scas
add
push
call
xor
out
ljmp
push
cwtl
out
and
mov
pop
bound
clc
mov
mov
push
add
add
adc
fists
mov
cmp
pop
jmp
pop
jbe
push
or
pop
aad
imul
outsl
or
dec
pop
into
mov
sbb
push
addr16
jp
in
clc
cmpl
ret
aas
sbb
fcmove
clc
stc
gs
mov
jb
jo
cmp
jg
call
cld
fdivrl
mov
repnz
mov
addl
negb
adc
cmp
int3
sub
clc
xor
in
mov
mov
jecxz
cmp
push
or
pop
mov
out
mov
pop
add
mov
push
mov
rcrl
test
lock
pop
sahf
mov
orl
jno
rclb
dec
jb
sbb
notl
clc
adc
mov
mov
into
gs
lret
frstor
dec
out
adc
dec
fidivrl
pop
mov
mov
inc
sbb
sub
cmp
loop
push
sub
push
js
ret
in
aaa
fistpll
fs
mov
jge
inc
lds
adc
dec
mov
sbb
ret
adc
ja
iret
mov
lea
flds
fwait
mov
adc
jo
jne
cld
imul
and
mov
pop
mov
jo
into
xchg
jg
mov
push
or
lret
mov
test
in
and
xor
fmuls
movsl
jl
or
pushf
das
inc
or
mov
inc
xchg
dec
inc
or
loopne
cld
pop
sbb
rol
mov
repnz
pop
iret
add
in
out
ljmp
mov
lds
xorb
nop
xor
fldl
test
mov
lock
mov
popa
push
std
rorl
cmp
repz
arpl
sbb
shrb
clc
cmp
orb
fistl
cs
fldl
mov
insl
sub
xor
push
popf
dec
test
xchg
shl
mov
sub
aas
pop
mov
mov
js
or
insb
loopnew
mov
jnp
xor
mov
popa
or
inc
pop
inc
mov
in
call
push
idivb
sub
cmp
cmp
pop
sub
xchg
popa
cwtl
into
dec
pushf
stc
jae
inc
scas
std
adc
sub
mov
pop
daa
push
mov
fisubl
sub
adc
xchg
adc
loop
sbb
add
cmp
or
sbb
cli
pushf
add
rcrl
mov
mov
mov
call
jno
std
mov
mov
out
mov
cmp
mov
mov
add
sub
inc
ljmp
out
out
je
aam
mov
push
andl
xchg
xchg
dec
int3
fdivrs
imul
cmp
adc
aas
pop
mov
pop
fldlg2
divl
cmp
nop
ret
adc
test
sub
enter
xor
jle
pop
jns
test
ret
xor
sar
fnstsw
dec
js
addl
sub
stc
rorl
stos
xor
mov
fnsave
cld
std
test
or
lret
inc
daa
fists
and
pop
push
sub
test
icebp
in
out
scas
inc
or
or
popa
sahf
loope
std
push
mov
xchg
xor
leave
aas
rolb
repz
subl
ss
fcomps
mov
adc
mov
add
push
jne
aad
push
cmc
mov
mov
or
popa
orl
pop
push
push
adcl
push
sub
cmp
test
sbb
dec
add
adc
pusha
out
dec
dec
test
jle
sub
testl
fwait
push
lcall
sub
xchg
out
add
out
test
pop
pusha
jne
mov
xchg
mov
js
push
mov
loopne
stos
sbb
inc
lods
inc
gs
jp
mov
insb
mov
sbb
cmp
loope
clc
test
std
mov
aaa
dec
mov
imul
ficoml
ja
adc
lock
mov
outsl
inc
int3
mov
test
adc
addr16
aas
dec
xor
lock
pop
cmp
cmp
data16
sti
jbe
stc
scas
lea
data16
dec
inc
shlb
inc
jbe
mov
out
int3
sbb
scas
je
inc
fidivrl
add
mov
cltd
mov
test
loope
adc
pop
cli
test
adc
out
punpcklwd
nop
mov
pop
cltd
push
pmaxsw
push
dec
push
push
repnz
sahf
rcl
cmc
inc
jb
push
ljmp
icebp
movsb
es
icebp
mov
gs
leave
popa
fisubs
test
jmp
mov
aam
jo
jb
inc
pusha
jg
pop
and
mov
mov
stos
mov
stos
cmpsl
xor
sub
mov
ljmp
or
and
inc
cmp
xchg
cmp
mov
daa
mov
in
cli
test
mov
cmp
cwtl
add
and
imul
add
and
push
push
jg
xor
gs
test
sbb
fcoms
imul
sahf
imul
jnp
cmpb
icebp
into
mov
pop
lods
push
in
mov
int3
dec
xchg
insl
stos
loopne
inc
out
inc
mov
xchg
sbb
pop
addr16
xor
mov
cmp
arpl
push
or
cmc
pop
xchg
push
stc
test
imul
in
add
mov
js
enter
sub
mov
mov
inc
mov
dec
sub
cmpb
cli
in
xchg
dec
dec
insb
out
cmp
in
push
mov
insl
and
rol
test
fucom
int3
push
mov
or
inc
cmp
mov
xor
nop
and
xor
and
sbb
mov
xchg
cld
fisttpl
bound
out
cld
jle
mov
mov
dec
dec
dec
lock
mov
mov
inc
ljmp
mov
mov
adc
sbb
sti
jbe
cmpsl
mov
imul
or
scas
cmp
mov
cs
aaa
xchg
test
and
and
lret
mov
movsl
lds
cmp
icebp
jmp
jns
addr16
cld
mov
inc
mov
ds
jo
push
adc
pop
pop
mov
jae
push
mov
sub
jp
inc
dec
imul
pusha
jno
outsl
adc
test
jns
xchg
lods
or
adc
add
and
xchg
stos
mov
lret
mov
pop
pop
mov
pop
into
mov
faddl
mov
push
mov
xchg
pop
mov
repz
ret
pop
fisubrl
andl
jno
xchg
sti
mov
test
jmp
jns
pop
pop
call
mov
pop
cmp
xchg
jp
hlt
jge
sub
inc
cmp
pop
ds
xor
mov
xchg
push
cld
int
leave
shlb
xor
add
mov
out
lcall
mov
adc
test
mov
jecxz
cmp
sbb
or
xchg
cmp
xchg
shlb
xchg
orl
mov
cs
pop
inc
sub
out
push
sub
pop
pop
stc
faddl
mull
hlt
cmp
inc
and
lea
popa
push
mov
ds
inc
add
jne
add
mov
popa
testl
cltd
dec
rcl
and
vpunpckhdq
fldt
lret
mov
lods
imull
fwait
xchg
jns
push
inc
jle
sbb
and
sub
mov
sahf
mov
mov
and
fs
mov
lock
adc
test
stos
lods
xor
dec
jnp
dec
mov
sbbl
scas
arpl
push
aaa
mov
mov
dec
inc
mov
xchg
je
sbb
adc
sbb
mov
insb
pop
and
out
bnd
mov
xchg
xlat
sub
movsb
out
mov
in
aas
and
rcrb
cmp
lods
xchg
xor
sti
stc
mov
inc
addl
dec
sbb
mov
divl
mov
cmp
ds
repz
pop
sub
outsl
flds
cmp
xorl
dec
scas
mov
lahf
fnstsw
aas
mov
add
enter
xchg
sub
rol
cmp
negb
mov
lret
mov
daa
fs
bound
int
loop
sbb
leave
mov
and
mov
aas
lcall
inc
push
mov
lret
dec
pop
shrb
inc
adc
icebp
cmp
push
pop
dec
test
jb
sbb
adc
adc
xor
imul
int3
pop
and
adc
fadds
lahf
imul
push
aad
xor
jecxz
mov
icebp
imul
repnz
inc
xchg
out
jns
mov
cli
cmp
rcrl
in
sarl
xchg
movsb
ja
cwtl
fsubrs
hlt
push
add
mov
xchg
xchg
enter
sub
sub
push
pushf
loope
lock
pop
or
or
stc
sti
std
lret
pop
ret
mov
pop
nop
xor
int3
push
mov
lahf
popf
fisttpl
cmp
arpl
push
das
imul
lret
std
ja
insl
inc
push
dec
sbb
iret
out
pop
mov
out
js
xchg
xor
sub
or
je
mov
es
lret
xchg
xchg
jg
out
jo
or
addb
je
xchg
cmp
add
push
mov
mov
and
in
subb
push
xor
or
mov
test
cmp
pop
xchg
nop
cltd
in
fdivrp
mov
out
daa
gs
nop
pusha
jecxz
add
pop
bound
xor
cmp
mov
popf
adc
shll
jp
shr
mov
mov
cmp
je
mov
clc
inc
clc
adc
enter
mov
mov
push
mov
and
lcall
in
xor
lcall
cld
cmp
or
jle
enter
or
pushf
xchg
xlat
push
test
lods
jmp
mov
mov
pop
repnz
xor
fmull
ja
test
lret
loope
es
sbb
jl
jmp
cmp
jae
cwtl
and
jecxz
xchg
adc
jecxz
xchg
adc
pop
pushf
ljmp
aam
in
pop
xor
xorl
testl
sub
inc
pop
iret
mov
std
mov
push
pop
inc
mov
mov
in
add
cmp
xchg
jmp
lds
sub
jmp
cld
clc
enter
cli
push
cmp
ja
movsl
repnz
cmp
push
lods
xor
adc
mov
xor
mov
push
sarb
inc
inc
push
daa
aad
or
adc
lods
fdiv
call
and
adc
cli
mov
mov
dec
jg
pop
ja
inc
jg
push
js
mov
jne
stos
movsb
in
stc
fnstsw
cmp
in
adc
movntq
and
add
stos
xor
insl
call
pop
jno
jl
push
adc
add
nop
icebp
add
pop
inc
xchg
mov
mov
cmp
cmpsb
popa
mov
dec
push
in
aad
into
dec
jbe
dec
cmp
imul
jne
in
mov
adc
in
fildl
jno
test
in
ljmp
mov
pop
mov
popa
inc
sbb
ret
cmp
push
push
push
adc
aam
ret
ja
mov
push
test
orb
inc
inc
pop
fsub
xor
movb
adc
push
cmp
jg
or
sub
in
cmp
xchg
pushf
addr16
or
sbb
sbb
push
int
pusha
ja
cs
jecxz
mov
pusha
cli
inc
test
filds
iret
xlat
jmp
adc
outsl
sub
pop
pop
pop
xor
mov
mov
sbb
daa
mov
adc
jo
in
xchg
movl
sbb
outsb
dec
jl
jb
xchg
mov
mov
scas
xchg
es
loope
loope
movsl
movb
sub
test
in
imul
xor
fwait
insb
sbb
and
jnp
imul
mov
cmp
daa
sbb
dec
xchg
jp
xor
outsb
add
loopne
fsubr
inc
ljmp
mov
std
loope
pop
push
sahf
fdivl
mov
inc
xorb
cmp
movsl
lea
call
and
sbb
cmc
scas
dec
out
jle
cmp
mov
in
add
mov
ljmp
sub
jb
adc
outsb
fdiv
mov
aaa
adc
cmp
or
icebp
cs
aam
inc
insb
sbbl
mov
mov
test
push
pop
mov
lea
mov
sbbb
lods
fisttpl
dec
inc
add
out
xchg
lret
add
test
popa
jle
or
push
jno
or
insl
mov
push
mov
cmp
cltd
test
call
push
xor
ret
lods
xor
out
adc
cmp
cld
aas
fildl
scas
std
clc
pop
push
out
adc
jb
and
cltd
xlat
jg
rclb
cmp
xchg
jns
fs
daa
inc
outsl
dec
mov
sub
jno
fisubrs
imulb
mov
pop
out
insb
push
fwait
scas
and
in
push
ret
int3
or
rcll
sub
jg
adc
pop
xchg
rcrb
lock
jge
popa
loope
adcl
data16
ret
sarl
imul
in
in
cmp
or
sbb
jg
ret
xchg
xchg
xor
jp
movq
icebp
lods
jbe
nop
loopne
insl
clc
push
cmp
mov
scas
add
cmpl
mov
lds
and
call
imul
mov
iret
popa
add
sbb
into
push
pop
in
je
insl
std
jno
stos
dec
mov
mov
jge
rcrb
out
mull
push
lea
push
lock
pop
jno
mov
jmp
lcall
es
push
mov
cwtl
mov
fimuls
jae
add
and
fld
push
cld
int
jmp
push
mov
lret
in
js
push
in
mov
gs
xchg
sbb
popa
imul
push
mov
test
ret
mov
pop
and
cmp
subl
add
xchg
xchg
sbb
cld
mov
push
xchg
addr16
sub
jmp
movsb
adc
imul
inc
movsl
pop
lds
into
mov
data16
jl
fbld
mov
and
mov
adc
or
mov
sub
mov
pop
rolb
dec
mov
inc
cmp
xor
or
into
and
inc
inc
inc
and
xchg
jg
mov
mov
ja
jae
popa
sbb
flds
mov
daa
sti
push
mov
ljmp
aad
mov
outsb
movsb
xchg
fimuls
outsb
aaa
add
test
or
dec
lcall
and
mov
xchg
push
sahf
imul
xchg
mov
mov
lahf
pop
jno
lcall
inc
push
das
add
fwait
orl
mov
xchg
xor
in
xorb
insb
inc
mov
jge
adc
add
imul
sub
jg
ret
cmp
xchg
jecxz
mov
mov
cmpsl
mov
jle
pop
mov
adc
gs
jg
mov
insb
xchg
cwtl
adc
dec
ds
xchg
cmp
call
addl
xorl
out
test
clc
push
sarl
jge
outsb
fs
sub
fidivrs
leave
cmp
fcomip
push
push
les
sbb
fwait
add
cli
loop
push
ljmp
dec
xchg
les
xchg
mov
out
loope
lahf
or
adc
pop
push
jg
push
jl
sbb
push
roll
mov
addr16
mov
push
hlt
lods
loope
push
mov
xor
shrl
scas
cmp
push
add
dec
subl
push
adc
mov
add
cltd
add
lcall
mov
push
inc
dec
popl
mov
fs
cli
mov
xor
cmc
repz
fwait
stos
push
movsl
int
sub
ret
pop
addr16
xor
lcall
mov
rep
mov
loop
adc
shlb
or
cmp
fwait
fwait
cmpsb
fsubs
cld
push
pop
or
repz
enter
out
lea
mov
sub
mov
jl
sub
push
push
fwait
into
push
sbb
pop
mov
jle
pop
jo
sbb
mov
and
jecxz
mov
push
pushl
cmpsl
stc
clc
stos
mov
jg
and
adc
jmp
dec
lahf
cmp
dec
xlat
mov
mov
xchg
shrl
or
sbb
jmp
pop
mov
jmp
push
xor
push
rcll
sbb
fs
test
call
das
or
jp
mov
mov
shlb
push
fsubl
mov
mov
dec
mov
xchg
cwtl
aam
push
jecxz
outsl
out
jecxz
or
xor
adc
pushf
int3
das
mov
ftst
adc
and
add
mov
and
inc
fcomps
pusha
loop
ret
cmp
xchg
add
clc
cld
inc
cwtl
rcrb
stos
fldcw
cmp
pop
ja
jno
imul
mov
push
push
pop
fwait
mov
or
repnz
jmp
fldcw
repz
dec
xchg
jle
std
psrlq
idivl
push
mov
int3
stos
jae
int
pop
cs
sarl
and
fiaddl
cli
dec
aaa
cmp
pmulhw
les
sbb
gs
sub
pusha
decb
ret
out
lahf
repnz
jle
das
stos
cs
mov
mov
push
mov
fidivrl
andl
xchg
cmp
ret
mov
pusha
dec
xchg
mov
xor
jecxz
cmp
mov
or
out
jns
push
dec
pop
ds
out
mov
decb
das
inc
mov
pop
in
int
add
movsb
xor
fnstsw
fwait
test
pop
xchg
add
pop
adc
mov
sbb
cltd
jp
pop
iret
frstor
fstps
test
stc
cld
pop
mov
cmpsl
fcmovnu
xor
pop
es
test
and
dec
push
imul
pop
mov
xorl
mov
jmp
aad
or
sbb
pushf
daa
lahf
int3
inc
lahf
cmp
xchg
adc
pop
mov
inc
add
inc
jmp
out
mov
outsb
pop
or
mov
iret
fldt
mov
push
inc
repz
cmpsl
xor
pop
and
mov
push
sub
mov
push
addl
xor
xchg
dec
push
sub
push
push
mov
or
lcall
push
jmp
push
mov
adc
notb
pop
addr16
sub
mov
add
sbb
mov
or
jae
ds
lods
cmp
pop
iret
sub
test
jns
push
loop
or
andl
fnsave
negb
mov
rclb
dec
mov
jo
fmuls
mov
mov
dec
adc
std
jp
sbb
or
xor
inc
ljmp
lea
aad
lahf
adc
inc
andb
pop
lock
lea
push
jo
cmp
and
bound
mov
aad
faddl
jae
dec
add
mov
jbe
cmp
add
push
add
jp
mov
outsb
xchg
testb
mov
mov
and
out
arpl
lret
sbb
sub
cwtl
out
outsl
push
hlt
pop
aas
outsl
ret
movsb
cmp
jmp
mov
stos
mov
push
mov
sahf
imul
repnz
sbb
test
testl
jmp
fwait
sbb
cmp
sbb
test
push
jo
push
loop
push
sar
inc
pop
repz
lea
lock
jno
scas
sbb
cli
mov
cmp
jns
out
dec
pop
xchg
ret
js
xchg
shlb
aas
icebp
lret
imul
adc
std
shrl
adc
push
push
or
stos
nop
rcll
fsub
es
les
push
inc
out
ret
inc
repz
decl
roll
packssdw
jb
int
cli
xchg
pop
enter
rcrl
and
daa
inc
jnp
stc
jns
push
push
xor
lret
vmovss
mov
pop
syscall
jl
xchg
inc
out
dec
or
andl
add
mov
jge
into
sbb
sub
test
aaa
out
ret
bnd
fnstsw
lahf
jmp
pop
out
mov
mov
push
inc
or
les
aam
cli
adc
mov
imul
pcmpeqd
sar
and
aad
push
xor
mov
pop
sahf
or
decl
dec
or
out
test
mov
les
sub
mov
jecxz
movsb
push
mov
adc
lea
add
mov
push
pop
stos
ljmp
test
inc
gs
outsl
leave
mov
mov
push
xchg
loop
xchg
or
fsub
cli
stc
js
inc
loop
mov
rolb
mov
mov
repnz
ret
pop
pop
jge
push
stc
xchg
xchg
mov
leave
mov
into
in
cmc
add
ret
add
clc
jae
pop
fcomi
and
repnz
popa
aam
push
sahf
mov
and
lret
jne
xchg
out
icebp
push
leave
or
hlt
cwtl
repnz
outsb
inc
repz
sub
in
sbb
mov
dec
add
sti
rorb
lcall
push
adc
dec
loopne
or
mov
test
push
mov
andl
faddl
xchg
std
xchg
mov
jnp
scas
xor
adc
mov
jge
xchg
or
mov
ljmp
pop
jne
sbb
push
inc
jmp
das
pop
adc
insb
inc
xchg
dec
jb
push
mov
call
rol
inc
cwtl
cmpsl
cmc
mov
int3
xor
vdivsd
cltd
adc
fwait
cmp
xchg
adc
pop
cltd
push
adc
inc
adc
fs
outsb
lock
sarb
mov
push
sahf
popf
sub
xchg
mov
out
mov
pop
fld
cwtl
push
mov
mov
adc
icebp
movl
test
lock
scas
cmpsl
xchg
in
mov
loopne
cmc
int3
mov
sbb
movsb
call
pop
or
jnp
in
push
fwait
add
jnp
jge
stos
roll
sbb
jne
sub
adc
push
pop
adc
cwtl
sbb
sub
cmp
out
test
xlat
int
cmpsl
mov
icebp
jmp
xchg
daa
jecxz
jb
std
push
andb
pop
or
out
divl
dec
clc
outsb
loope
jne
daa
xchg
xor
mov
xchg
fiadds
fcompl
sbb
inc
in
lods
jp
fimull
sti
insl
imul
ljmp
cmpsl
mov
jnp
mov
xor
inc
mov
push
cs
mov
lret
jnp
push
pop
test
jbe
popf
mov
insb
shr
rclb
pop
lods
imul
cli
jg
jge
cmp
movsl
push
cmpsl
cmp
out
mov
bound
xor
call
pop
aas
jmp
fmuls
mov
cwtl
jge
mull
test
pushf
insl
in
pop
pushf
iret
lods
stos
jmp
add
mov
pop
loopne
mov
out
loope
cmp
mov
sbb
movsl
push
or
sub
cmp
pop
and
std
xor
cmpsb
pushf
cltd
add
loop
or
push
jg
arpl
sub
enter
das
ss
lea
arpl
add
mov
push
es
jmp
cs
jnp
loope
andl
push
xor
push
add
cmp
xchg
outsb
in
mov
es
and
fsubs
gs
cld
jo
dec
push
aam
into
cmp
push
push
popf
je
xor
jl
and
fmuls
xor
leave
push
test
out
jnp
and
sub
sub
xchg
jb
pop
dec
inc
adc
sbb
movb
xor
xor
xchg
insb
in
insl
mulb
scas
subl
or
xchg
std
adc
imul
jno
in
imul
test
ds
jae
imul
test
mov
fistl
fiadds
cltd
lahf
or
mov
sub
and
cltd
pusha
lea
imull
sbb
mov
xlat
push
inc
mov
cmp
cmp
subl
mov
or
rol
push
orb
cmpsl
mov
inc
fidivl
dec
jecxz
xchg
ljmp
dec
xchg
mov
inc
cmp
imul
data16
test
mov
lcall
pop
jg
mov
xlat
xchg
dec
mov
cld
jmp
insl
test
push
mov
add
dec
test
cmpsb
lea
movsl
lock
in
dec
imul
jne
jo
stc
and
mov
lcall
cs
inc
scas
adc
pop
dec
mov
pop
lock
and
xchg
bound
mov
in
jnp
jg
repz
xorl
fwait
adc
mov
in
popa
cld
fs
in
xchg
std
filds
outsl
adc
xchg
addr16
rcr
adcb
cmp
nop
repz
faddl
cli
pop
rolb
pop
repnz
cs
adc
pop
lahf
mov
pop
addr16
mov
mov
pop
cmp
and
int3
jbe
fldenv
mov
mov
mov
inc
mov
call
mov
dec
lea
sbb
xchg
push
push
jno
mov
xchg
repnz
rcll
inc
push
pop
lcall
mov
subl
int3
jp
ds
pop
vandnps
fimuls
cmpsb
cmpsb
sbb
pop
sbb
jge
fwait
adc
or
cmp
punpckldq
dec
xchg
rcrb
test
insl
jge
test
pushf
jp
iret
sbb
cli
inc
mov
scas
lret
bswap
rcrl
inc
iret
sub
mov
jns
imul
mov
jecxz
sub
adc
xchg
cmp
pop
dec
inc
addb
sbb
incb
adc
xorb
inc
out
std
outsb
sahf
cmp
test
leave
imul
push
adc
xchg
push
and
sub
arpl
pop
push
stc
iret
mov
loop
pop
aas
das
jns
gs
lods
mov
xchg
jo
aaa
lods
xlat
jbe
cmpb
inc
popa
mov
mov
push
mov
pusha
lods
das
cmp
mov
mov
pop
call
push
push
xor
or
mov
cmp
pushf
cmp
sar
movsb
lea
stos
xor
jp
decb
test
jae
dec
pop
jnp
mov
dec
rcll
push
mov
xor
imul
rcll
shr
scas
jno
mov
jecxz
dec
sbbb
hlt
nop
into
mov
pop
icebp
adc
push
out
push
std
sub
cwtl
sbb
cs
fidivrs
repz
jns
jle
jl
rorb
pop
mov
test
push
jb
adc
int3
jo
jecxz
xchg
pop
push
or
jg
imul
mov
stos
movsb
movsl
add
jmp
stos
sarb
mov
rclb
push
in
cli
xchg
push
and
out
sbb
or
and
xor
add
pusha
loope
lahf
in
inc
mov
jecxz
data16
and
xor
sub
lcall
pop
sbb
cmpsb
or
cli
jge
sbb
sbb
push
pop
je
addl
sahf
dec
xchg
orl
cld
iret
inc
cmpsl
sub
lret
push
xor
inc
jg
jo
or
jle
hlt
sub
adc
xor
pop
sub
popf
nop
repnz
test
xlat
scas
mov
cmovge
loope
inc
mov
cs
mov
push
call
mov
js
roll
dec
fildl
sahf
sbb
mov
roll
cltd
xchg
dec
push
jns
clc
xchg
xorb
pushf
movups
push
aam
push
shrb
sahf
mov
orb
xlat
or
test
xor
xchg
bound
lods
xor
jl
sub
lods
lods
or
jmp
mov
popa
and
mov
cmc
mov
neg
in
or
dec
insl
rcrl
push
out
aad
mov
sti
jne
pop
mov
dec
js
subl
cmp
cmovle
push
mov
in
xor
dec
insb
shrl
inc
daa
and
std
outsb
cmp
or
fisttpl
in
mov
int
sar
pop
rolb
sub
insb
xchg
xor
jbe
stc
in
jbe
mov
mov
xor
int3
sub
pop
xchg
add
dec
pop
js
mov
mov
sbb
xchg
in
fiaddl
sbb
dec
stos
mov
fs
test
sbb
jp
pop
and
push
pop
jb
dec
imul
pop
jl
in
lcall
fmuls
cmpsb
cmpsl
or
push
movsl
xchg
dec
push
or
xchg
mov
or
rcll
loop
sar
jo
mov
lods
jmp
mov
xor
push
mov
test
test
gs
loop
cmc
sahf
mov
insl
dec
leave
add
pop
and
mov
pop
mov
xchg
cmc
jmp
add
imul
lds
inc
inc
xor
dec
jbe
mov
push
test
icebp
ja
je
sbb
icebp
js
inc
lret
push
out
and
in
fistl
fbstp
fimuls
lds
pop
imul
sbb
jg
ret
je
leave
into
xchg
sbb
pop
lret
sahf
aaa
cli
in
rorl
ret
adc
xchg
in
add
sub
jmp
xchg
jno
test
jbe
inc
shrb
jmp
in
push
sbb
mov
or
mov
aam
adc
mov
xchg
push
cmp
push
sub
jae
subl
arpl
dec
jl
je
pcmpeqb
sub
mov
push
xor
out
mov
jns
add
inc
mov
mov
inc
repnz
mov
add
dec
add
sbb
mov
mov
rorl
lret
mov
cmp
or
lcall
arpl
push
es
or
xchg
jo
test
sbb
xchg
gs
xchg
mov
xchg
js
push
mov
mov
mov
pop
pop
xor
inc
xor
lods
inc
jp
cltd
pushl
cmp
push
shlb
sbb
jmp
test
cmp
adc
sbb
and
inc
jp
dec
mov
sti
mov
or
pop
sbb
jg
enter
cmp
enter
test
mov
hlt
mov
and
sub
sbb
mov
inc
pop
stos
lea
jb
stc
push
mov
add
dec
adc
stos
jge
ljmp
aas
loopne
sub
and
fldt
mov
sbb
jne
out
add
fsubrl
mov
or
aad
bnd
cmpsb
bound
aas
pop
mov
dec
pop
outsl
pushf
sub
mov
scas
mov
sbb
inc
nopl
xor
adc
and
jecxz
mov
inc
mov
cmc
push
gs
stos
and
out
cmp
pop
pop
push
cmp
jno
pop
or
sbb
out
mov
pop
out
xor
fistpll
inc
cltd
or
fwait
stos
pop
xchg
jmp
pushf
hlt
pop
fiadds
cli
xor
js
int
mov
out
inc
je
cmp
scas
sbb
push
out
adc
cmp
orl
pop
fdivrl
cs
xor
push
mov
xor
mov
cwtl
xchg
pop
adc
cld
cmp
adc
inc
popf
test
and
int3
cmpb
or
adc
jmp
mov
or
add
bound
popa
js
lods
in
inc
inc
gs
lcall
fs
push
outsb
stos
pop
add
jb
adc
jns
lock
pop
stos
pop
shlb
sbb
inc
inc
xor
shrb
pop
mov
jge
scas
cli
into
into
jmp
cli
add
mov
mov
movsb
and
inc
cmp
ljmp
je
inc
ret
push
push
lea
arpl
insl
dec
out
ljmp
sbb
ror
pop
dec
mov
loop
add
shll
mov
out
mov
xor
data16
cmpsb
mov
test
sbb
cmp
int
xchg
call
jecxz
push
adc
pop
add
notb
sub
aas
stos
stc
mov
pop
xchg
inc
push
mov
mov
jns
scas
sub
dec
push
rcl
push
lea
or
or
sbb
out
fstps
ss
lock
lcall
icebp
mov
cli
mov
test
jno
sub
cld
cmpb
dec
fwait
scas
mov
jns
stos
mov
test
jle
adc
stos
mov
mov
xor
pop
ljmp
mov
and
subb
test
sbb
pop
lods
sbb
mov
addr16
adc
push
push
fmull
jbe
lock
ret
mov
and
fcomps
lods
fisttps
mov
aam
cmp
leave
mov
cmpsb
dec
xor
adcb
orl
mov
inc
xchg
lret
xor
lfs
cli
pushf
sbb
mov
lods
and
mov
loop
leave
mov
add
outsl
outsb
or
int
incl
and
jp
es
push
jge
stos
rcr
insl
cli
pop
mov
or
pushf
mov
mov
insb
cltd
lahf
inc
sub
enter
mov
sbb
ljmp
dec
insb
jo
inc
popa
fists
cwtl
mov
push
jmp
mov
sub
ljmp
cmc
jle
pop
jecxz
lahf
pushf
addr16
fstl
lods
xor
scas
jae
jnp
pop
insl
add
je
jmp
jb
fmuls
cmp
jne
fwait
imulb
jmp
movl
imul
je
inc
in
shl
outsb
fsubs
jmp
jb
mov
or
push
xchg
lds
mov
stos
push
sub
out
ds
cld
mov
mov
lds
mov
xor
jge
nop
mov
sbbb
sbb
xor
lods
dec
imul
sub
daa
add
pop
xchg
sub
cmc
inc
push
jmp
pop
rolb
addr16
xchg
dec
adc
pop
mov
lret
push
es
aas
popa
xor
and
sub
push
mov
pop
mov
xchg
pop
cmpsb
inc
xor
mov
not
mov
cmp
mov
imul
pop
sub
sbb
mov
xor
pop
mov
loope
aas
mov
loopne
sub
and
xchg
or
jns
std
or
jg
pop
in
sbb
insb
mov
cwtl
jns
mov
in
movsl
push
les
aad
cld
in
cwtl
cltd
adc
cmp
lds
fimuls
nop
imul
int3
fmuls
fs
dec
xor
pop
push
jle
aam
imul
inc
out
mov
addr16
jg
data16
out
daa
and
inc
xor
sbb
sahf
xor
xor
leave
sbbl
push
addl
add
addl
sbbb
or
sbb
das
mov
mov
pop
cmp
insb
addr16
les
inc
scas
cmp
into
pop
clc
iret
xchg
cmc
scas
or
mov
xor
sub
negl
out
fmuls
outsl
js
movl
xor
gs
mov
mov
mov
xchg
in
add
out
jl
rcrb
cmp
sahf
shl
add
mov
mov
or
mov
repz
mov
lahf
jge
pop
lods
jle
mov
in
stos
xchg
push
sub
stos
push
sub
cmpsl
xchg
sbb
cmp
jle
sbb
inc
adc
sbb
out
xor
and
jmp
cmc
fldl2e
test
imul
stos
enter
mov
lods
test
inc
mov
push
jns
and
push
and
xchg
xchg
and
push
cmp
dec
enter
arpl
aas
cld
mov
int3
inc
lret
jecxz
mov
push
jle
cli
cmpb
les
sbb
inc
inc
or
dec
pop
push
scas
xor
cmp
jg
cmpsl
insl
or
dec
push
inc
stos
mov
xchg
lret
mov
pop
and
pop
sarb
pop
lock
mov
loopne
loope
adc
lahf
mov
mov
cmpsb
dec
add
ljmp
xchg
iret
cltd
cld
mov
jnp
pop
pushl
mov
clc
inc
aad
ret
addl
bound
icebp
push
fstps
lds
in
mov
iret
xor
mov
rcll
or
mov
jmp
loopne
cmp
nop
adc
leave
ljmp
sti
mov
rcr
adc
sbb
enter
or
jnp
mov
clc
sti
popa
mov
jl
ljmp
xchg
push
cmp
movsb
pop
mov
mov
sub
cmp
test
cmc
out
enter
leave
push
ret
cmp
xchg
nop
shll
lcall
iret
jge
xchg
cmp
push
push
ljmp
mov
adc
lret
lcall
xchg
adc
mov
xchg
loopne
xchg
aam
jnp
xchg
or
mov
and
jbe
jae
pusha
sub
jno
cltd
xor
imul
sub
xchg
int3
jb
add
mov
in
cmp
pop
fsubs
add
int
inc
ljmp
adc
dec
shlb
loope
xchg
repz
imul
mov
gs
xchg
or
adc
hlt
repz
rcr
mov
out
stos
push
xor
mov
cmp
and
lods
dec
inc
inc
dec
pop
mov
sahf
add
icebp
pop
leave
cmp
adc
mov
jl
adc
cmp
inc
push
jecxz
cmp
xchg
xchg
jne
fs
lahf
mov
cltd
jns
je
lds
insb
push
push
lods
inc
lods
mov
fwait
cmp
push
add
jge
imull
jmp
lods
inc
pop
jae
add
lret
xchg
call
pushf
jne
jo
out
and
fsubs
xchg
adc
enter
fdivrs
mov
or
daa
hlt
pop
adc
pop
std
call
fmul
xchg
mov
ja
jne
and
mov
out
jg
call
daa
xchg
enter
ds
imul
or
push
mov
jno
push
call
mov
push
cmp
outsb
mov
xchg
mov
jmp
into
or
jne
fadds
add
cmc
loopne
and
mov
fidivrl
mov
sbb
jge
fistpll
add
xor
or
push
iret
dec
mov
xor
dec
loopne
out
dec
inc
add
test
mov
jp
ds
dec
jae
stc
jp
aas
sbb
lods
std
fstpl
add
sbb
outsl
push
mov
cli
leave
leave
sbb
dec
in
out
sub
je
in
sub
sahf
sbb
cmp
aam
push
sub
xchg
xor
fwait
notl
arpl
xchg
adc
sub
icebp
jge
fwait
test
es
icebp
stos
cwtl
mov
imul
push
int3
xchg
data16
sbb
fdivrl
jae
lods
fsub
dec
ficomps
call
push
lods
mov
jns
in
pop
dec
and
inc
fwait
leave
jbe
int
jne
push
push
and
lcall
testb
mov
ficomps
mov
and
jbe
adc
cltd
out
xchg
jb
mov
pop
xor
lret
outsl
nop
loope
cmpsl
add
sub
cld
or
pop
xchg
je
sbb
daa
out
xchg
mov
pop
inc
cld
xchg
xchg
arpl
movsl
ds
shlb
mov
call
push
cltd
and
das
mov
dec
pop
mov
loopne
filds
xlat
adc
pop
fsubrl
es
xchg
out
ret
fcmovbe
push
jge
xor
test
cli
inc
xchg
cld
push
imul
cmc
or
sub
mov
mov
mov
add
mov
sub
xchg
xlat
xor
roll
ret
js
movsb
sarl
pop
pop
push
ficoml
cld
lret
xor
jno
mov
cld
pop
xlat
push
aaa
dec
or
or
inc
cltd
push
mov
repnz
cmpsb
inc
adc
xorb
xchg
mov
adcl
jl
sbb
test
push
mov
mov
jle
orb
out
sub
adc
mov
outsb
adc
push
xchg
jne
push
dec
int3
jge
mov
and
out
movsl
and
pop
insb
xor
lods
test
out
xchg
inc
out
loop
inc
mov
out
sbb
mov
pop
inc
sahf
cmp
lret
imul
sbb
popa
push
frstor
lock
inc
add
fiaddl
dec
lret
and
cmp
fstpl
ja
adc
into
jmp
mov
and
ss
mov
rcll
scas
sbb
fsubp
bound
cmp
dec
and
jno
aam
cmpb
ljmp
ret
or
mov
lea
pop
mov
es
int3
sbb
inc
fistps
jb
repz
sbb
inc
fs
repnz
aam
xchg
in
and
mov
test
sub
or
add
pushf
push
aam
movsb
leave
scas
movsb
and
pop
filds
mov
jo
insl
sbb
cmp
xchg
cmc
dec
loope
arpl
pusha
arpl
pusha
js
xor
divb
adc
outsb
in
add
and
ret
sub
mov
jo
sub
movsl
push
sub
insb
inc
sub
push
pop
fwait
das
lahf
pop
imulb
fs
mov
and
repnz
jg
bound
cmp
pop
stos
mov
mov
mov
dec
sub
lock
enter
mov
fsub
pop
push
adc
push
mov
add
aaa
insl
push
jge
jp
push
xchg
mov
dec
incl
ror
mov
call
stc
fbld
cmp
stos
mov
sbb
inc
xor
lahf
pop
mov
sar
stc
lret
fdivrp
sbb
or
loop
rcrb
mov
test
xor
out
push
sub
add
xchg
sbb
orl
push
lret
mov
js
fmull
test
or
ja
xchg
lea
sub
in
and
cmp
cmp
mov
mov
gs
in
repz
or
push
pushf
cmp
fsubs
and
ljmp
int
jl
popf
loopne
ds
pusha
lahf
sahf
jle
scas
dec
pop
scas
fimuls
enter
dec
hlt
and
add
daa
sbb
mulb
adc
jl
test
and
rcll
and
ss
sub
pop
xor
lock
and
dec
and
jns
out
xchg
mov
mov
jle
push
mov
sahf
and
and
outsb
pop
pop
bound
mov
imul
pop
pop
jl
decb
sub
mov
test
jge
nop
adc
inc
xlat
popl
mov
jl
aas
fsubrs
pushf
cmp
push
pop
dec
push
sub
jp
pop
add
gs
xchg
jb
jbe
pop
bound
daa
adc
mov
fildll
dec
in
sti
das
hlt
xchg
cmp
jmp
jl
jle
je
fadd
mov
in
imul
cmp
ret
cmpb
ja
mov
sahf
mov
fchs
mov
adc
shrl
pop
jbe
hlt
outsb
jg
fistl
mov
mov
pop
lret
aaa
mov
scas
mov
cltd
js
jecxz
xchg
insl
mov
xorb
add
adc
popf
push
push
js
sub
jbe
popa
cmp
xor
addr16
ret
inc
sarb
leave
and
or
addr16
ficoml
dec
sarb
or
xchg
sbb
pop
mov
lds
enter
std
or
les
jecxz
inc
lret
arpl
iret
bound
mov
pop
subl
pushf
dec
loopne
push
outsb
or
sub
out
sarb
jp
inc
mov
gs
xchg
pop
addr16
jmp
mov
sbb
sub
movsb
dec
add
sub
popl
push
pop
imul
or
fcompl
jg
xchg
fwait
adcb
cmc
jmp
xor
sub
das
mov
and
and
and
popa
dec
into
imul
jl
mov
lds
incl
cltd
push
inc
mov
or
mov
fwait
mov
push
test
inc
in
test
call
test
out
cmp
jp
push
int3
scas
xor
jne
jns
mov
jb
ds
sbb
dec
movsl
test
pop
push
xchg
loop
xor
push
and
jns
adc
jecxz
pop
xchg
inc
loope
adc
xorb
in
loop
cmpsb
or
or
shr
cld
cmp
and
shll
sub
aas
ljmp
pop
or
fisubrs
sarb
lret
out
sbb
cmp
int
sub
fdivl
sahf
fcoms
xchg
movsb
jge
test
inc
fs
outsb
shrb
dec
ret
stc
movsl
imul
sbb
mov
icebp
add
adc
fldenv
push
sub
mov
scas
mov
movsl
sbb
in
cmpsl
pop
hlt
mov
mov
loope
mov
lock
mov
inc
aaa
dec
mov
push
xchg
cwtl
movsl
mov
sub
fildl
lahf
push
ja
sbb
lods
pushf
test
jle
rcrl
ret
int
mov
and
sahf
cltd
pop
pop
xor
adc
pop
jmp
inc
inc
mov
dec
pop
aam
popa
xchg
xchg
rorb
sbb
sbb
cltd
sub
sti
aas
sub
jecxz
out
mov
int3
call
pop
and
xorb
cmp
jnp
enter
cmpsl
push
repz
push
mov
inc
mov
pop
jl
push
out
movsb
fisubrs
xchg
mov
ja
mov
sub
psubb
adc
add
sti
add
fucomi
dec
fsubl
sbb
fistps
mov
jg
jbe
push
testl
mov
jb
roll
or
scas
xchg
add
pop
jne
in
addr16
cmc
inc
in
pushf
add
imul
dec
jb
mov
sub
xor
adc
clc
in
in
mov
jbe
cmp
mov
xchg
xchg
cmp
rcl
or
outsb
xchg
sbb
and
mulb
sti
ret
sub
pop
repz
pop
jbe
out
gs
sub
mov
nop
lret
int3
cmc
push
es
pop
pop
or
in
rcrb
cmc
mov
sbbl
add
push
stos
jecxz
or
and
je
in
fwait
cmp
pop
mov
fucomi
sbb
push
lret
out
cmp
cli
inc
and
jp
xchg
jae
loop
test
mov
jo
push
jmp
arpl
ljmp
shr
cld
test
pop
sbb
outsb
pop
ja
out
add
mov
cmp
fcmovne
cwtl
push
nop
andl
ljmp
orb
cmpb
pop
shrb
jae
es
xor
lcall
pop
sbbl
inc
mov
sub
jle
addb
int3
cmovp
imull
fsubr
sub
adc
cmc
push
jge
roll
and
push
es
dec
push
jecxz
pop
fisubl
movsb
mull
outsl
and
cmc
sub
idivb
addr16
push
pop
aam
xchg
jge
test
mov
push
mov
mov
lret
addb
xchg
out
lods
pop
popf
or
fs
arpl
outsl
xor
clc
scas
in
fisubrl
sar
mov
scas
dec
mov
cmp
dec
mov
cmp
aas
sub
cmpsl
rcr
jge
lock
dec
repnz
shrb
pushf
inc
sbb
aam
lods
xor
xor
loope
test
lea
daa
jp
jnp
jg
cltd
pushf
fstl
dec
lret
push
xchg
mov
inc
dec
dec
imul
jbe
cmc
shlb
xchg
inc
inc
add
mov
inc
test
xor
xchg
or
mov
jecxz
pop
in
mov
inc
and
js
inc
aad
inc
add
jmp
enter
adc
cld
and
sbb
ds
adc
mov
mov
call
sbb
and
test
rcrb
stos
xor
xlat
cli
and
mov
mov
inc
mov
jp
and
lahf
mov
insl
shll
in
aaa
dec
fists
dec
in
int
push
test
test
sub
out
mov
push
in
dec
xchg
insl
repnz
ja
xchg
jge
xor
jne
stos
mov
icebp
push
insb
aam
in
inc
dec
add
pop
aam
movsl
or
in
jg
lahf
leave
movsl
jle
xlat
xorb
xor
pop
xchg
out
jnp
call
fldt
lds
fldl
sbb
int3
cmp
cmpsb
adc
cwtl
mov
push
arpl
pop
mov
push
ss
stc
cmp
mov
xor
imul
lods
xor
shl
int
in
mov
aad
pop
push
or
insl
std
pmaxsw
test
int3
sbb
adc
add
outsl
push
dec
cmp
or
adc
movl
jle
add
push
cld
clts
sbb
dec
rcrl
and
inc
fidivl
call
push
enter
mov
fdivrs
in
pop
adc
es
movsb
push
imul
shlb
push
out
ds
adc
jp
test
movsb
cmp
mov
notb
push
unpckhps
aad
ret
cmp
jge
pop
mov
fcomps
inc
add
bound
movsl
sub
mov
sahf
pop
mov
mov
popf
fstps
dec
inc
rcrl
mov
xor
jmp
leave
inc
pop
sbb
mov
sbb
push
sub
mov
sbb
push
aad
cmp
mov
pop
scas
lods
jno
ljmp
mov
outsb
test
push
repz
stc
mov
add
enter
shl
inc
inc
sahf
outsb
outsl
jecxz
sarw
cmp
sub
push
lea
pop
adc
jg
shlb
jge
mov
aad
add
fld1
and
mov
in
shll
sti
out
add
jecxz
mov
fwait
nop
fidivl
pusha
jle
and
sbbb
xchg
inc
adc
adc
jnp
cmp
in
pop
inc
jecxz
movsl
fisttpll
mov
mov
mov
adc
inc
shll
dec
cmp
xchg
bound
jmp
mov
and
dec
repz
aam
and
mov
cmp
jl
ret
dec
mov
lret
pop
ja
dec
push
icebp
mov
jo
outsb
add
test
fcmove
aam
cltd
stos
cltd
pusha
pop
call
jno
mov
cmp
test
shlb
ret
cmp
stos
jmp
cmp
mov
mov
lods
cmp
push
mov
fists
lds
push
ds
cmp
les
pop
mov
negl
dec
icebp
inc
test
add
in
lods
fadd
fwait
lds
xor
sahf
call
add
stos
sbb
sub
idivl
jo
push
mov
scas
xchg
fs
sub
push
pop
pop
mov
ljmp
pop
pop
mov
sbb
dec
int3
sub
and
push
mov
leave
aad
psrad
adc
or
hlt
sbb
cmp
or
cmp
mov
mov
fwait
rolb
ret
test
int
fisttpl
nop
dec
pop
cmp
dec
loope
popf
jl
gs
cmpsl
cmpsb
add
outsl
mov
pusha
dec
rcll
add
and
jmp
lret
data16
mov
push
or
es
xor
sub
jae
pop
filds
stc
loop
dec
js
fwait
loop
push
lret
adc
jg
cltd
fs
xor
or
inc
stos
pop
mov
cmc
imul
cmpsl
dec
xchg
cmp
faddl
push
shl
mov
hlt
jmp
scas
sarb
ljmp
cmpsl
add
into
jg
inc
scas
outsl
jmp
aaa
mov
es
sub
insb
and
sahf
mov
xchg
jnp
sub
bound
loope
jecxz
lret
ficompl
pop
iret
and
arpl
xorb
jnp
mov
in
sub
push
and
ds
pop
in
je
cmpsl
stc
sub
cmp
adc
ds
mov
jae
insb
sbb
or
fstpl
int
add
int
dec
xor
jb
xor
adc
dec
adc
loopne
arpl
fisttpll
outsl
outsb
sbb
jle
ljmp
cmp
je
xchg
int3
cmpsl
in
xchg
mov
loope
dec
out
inc
lret
fsubs
sub
inc
into
es
sbb
xchg
stos
inc
adc
add
mov
dec
xchg
jae
push
rcl
or
add
xchg
xor
sub
dec
ds
xchg
push
push
rcl
mov
ds
sub
push
iret
ror
inc
mov
in
cmpsb
das
mov
or
add
push
xchg
jge
fists
cmp
rcl
rol
jmp
cmp
mov
jl
int3
pop
outsl
cmp
add
cmpsl
mov
xchg
inc
and
dec
cmp
jg
and
jmp
jbe
fnstenv
and
mov
sub
jbe
aaa
push
sub
jl
add
mov
outsb
mov
mov
mov
scas
daa
jno
popf
mov
stos
mov
aam
addb
mov
ret
pop
pushf
inc
mov
or
cmp
pop
sub
je
shll
push
aam
iret
mov
int
lahf
test
mov
inc
test
ficoml
je
dec
inc
fwait
orl
cmp
shlb
aas
negl
sub
dec
and
mov
adc
mov
notb
mov
xchg
mov
stc
ss
cmp
stos
test
stc
test
dec
ret
ret
fldenv
dec
lret
xchg
mull
ja
mov
sahf
shlb
divl
jl
dec
fdivs
bound
pop
push
mov
jb
fsubl
in
sbb
js
insb
mov
cmpsb
shl
out
mov
outsb
int
jns
xchg
mov
mov
xor
stc
fcompl
push
mov
or
les
inc
movsb
insl
inc
sub
daa
out
mov
sub
rorl
cmp
xchg
jle
in
cmp
dec
mov
add
sub
sbb
outsl
add
cmp
out
cmpb
xchg
and
fcoml
sbbb
shlb
push
and
sbb
sbb
in
sub
pop
inc
out
popf
fsubs
mov
fiaddl
jno
push
cmpsl
fildl
hlt
insb
inc
arpl
jle
push
ss
test
sub
sub
dec
push
mov
insl
enter
and
fadd
in
and
jmp
lods
cmpb
les
rcl
mov
leave
mov
mov
loop
lock
loop
sti
pop
daa
jl
dec
add
stos
movsl
inc
cltd
jp
outsb
jmp
scas
mov
js
adc
sbb
add
mov
imul
cld
test
or
arpl
xchg
call
xor
clc
movsl
call
mov
or
lds
mov
inc
inc
cmpsb
andl
mov
push
mov
out
faddp
mov
push
cmp
aaa
sub
or
mov
cmp
pop
adc
add
mov
push
pop
repz
inc
int3
lret
xchg
add
cmp
push
fs
and
xor
mov
jl
clc
xchg
in
xor
push
cmp
lock
sbb
fdivp
mov
mov
aas
mov
mov
sub
ljmp
cmpsl
inc
stos
push
push
aad
push
aam
inc
shlb
mov
movsl
rorb
sarl
dec
jns
dec
pop
xor
ds
or
or
inc
mov
jae
fcoms
mov
dec
cmp
jo
mov
mov
bound
stos
mulb
dec
jne
lcall
out
sbb
fwait
cmp
xchg
dec
sub
fcmovnbe
mov
shl
adc
dec
mov
cmp
insb
fdivrl
adc
cmp
dec
das
addr16
in
test
push
mov
xchg
jmp
jns
push
inc
mov
imul
pop
ja
dec
ret
add
mov
inc
xor
fldcw
dec
mov
iret
imul
lods
jns
cli
into
dec
sub
rcr
subb
pusha
jmp
mov
aas
je
testb
outsb
hlt
outsl
jl
or
pushf
sbb
add
pop
loopne
outsb
fdiv
jae
lea
pop
xchg
inc
sbb
xchg
sub
data16
insb
jl
arpl
loop
xchg
sub
mov
enter
or
imul
lock
pusha
jmp
pop
xor
loopnew
cmc
rorb
ss
xor
aam
xchg
jnp
lret
dec
add
sub
and
ror
stc
movsb
dec
mov
repz
adc
cltd
jl
sti
adc
push
mov
dec
push
mov
or
loopne
adc
out
and
std
ljmp
stos
nop
orl
cmp
adc
xor
pop
lods
xchg
mov
xchg
mov
mov
mov
jle
shrb
repnz
adc
mov
lahf
jo
imul
dec
sub
cmp
in
scas
lea
dec
push
jno
cmp
xor
popf
fstps
jecxz
mov
lods
pop
push
test
cli
jnp
add
into
sbb
or
or
scas
adc
cmpl
popa
pusha
out
loopne
push
insl
in
adc
or
movsl
iret
mulb
dec
mov
js
lret
test
pop
and
leave
mov
sub
cmp
xor
and
jecxz
in
scas
sub
mov
adc
jno
sub
pusha
ja
mov
jns
scas
xor
or
mov
or
mov
lods
cmp
or
int
jl
xor
shr
xchg
insl
outsb
mov
xor
rcrl
xor
nop
sub
pop
cmp
mov
aas
adc
jmp
sti
mov
mov
dec
fldt
push
jno
pop
aam
out
aad
je
lds
rcl
cwtl
mov
add
mov
addr16
andl
pop
inc
jae
fiaddl
xor
xor
pop
dec
int3
in
dec
data16
jno
ret
aam
leave
dec
dec
push
or
or
push
sarb
aas
xor
jge,pt
add
adcl
and
cmpsb
xchg
jp
push
sub
push
cmc
mov
jo
shl
jl
out
push
push
out
jmp
sti
cmp
sub
fwait
inc
jle
clc
dec
mov
stos
mov
jo
xchg
cld
jno
les
in
mov
lret
mov
addl
push
rcll
xor
mov
jb
pop
and
dec
les
push
sti
icebp
adc
fbstp
pop
out
les
cli
out
jge
inc
push
xor
jnp
or
fimuls
cs
pop
scas
xchg
lock
pop
jb
add
pop
mov
jnp
cmp
pop
bound
jmp
sbb
mov
mov
adc
mov
pop
insb
cmpsb
sbb
lods
mov
jp
cmc
adc
mov
out
and
push
in
sbb
mov
and
aam
mov
repz
xchg
lds
pop
cmp
scas
xchg
sbb
arpl
sti
fst
fisttpl
aam
or
iret
jnp
insl
sub
mov
add
and
mov
outsb
frstor
mov
outsb
xchg
xchg
mov
fdivr
faddl
dec
xchg
pop
mov
and
enter
pop
lea
xchg
dec
sub
mov
xchg
mov
mov
jae
sub
cld
jno
pop
or
xchg
shrl
or
xchg
inc
push
jp
fxch
sbb
or
adc
mov
test
frstor
cmp
test
mov
pop
sub
pop
push
fimuls
xchg
cwtl
dec
pop
call
and
pop
filds
fildl
leave
xchg
or
cli
cld
push
int3
dec
sahf
push
lcall
and
cltd
daa
std
jge
push
repz
adc
test
cwtl
in
stos
pop
sbbl
push
jg
aas
push
and
mov
cmp
inc
mov
mov
in
jne
pop
jl
shlb
cmp
xor
jo
adc
jg
cwtl
inc
cs
pop
jle
push
dec
sahf
pop
add
xchg
cmp
cmp
xchg
fisubl
insb
lods
cmp
stos
int3
jae
fdivs
add
sub
andl
lock
add
mov
cmpsb
repnz
mov
adc
push
ficomps
jecxz
cmp
clc
push
xor
mov
dec
stos
inc
arpl
fiaddl
cli
jo
sbb
cli
and
fdivs
jae
add
pusha
shr
push
xor
jae
push
adc
rcll
into
pop
outsl
out
and
sahf
jae
stc
outsb
push
adc
or
lods
xchg
mov
push
or
xchg
xchg
in
xchg
mov
inc
pop
jge
gs
lret
cltd
cmpsl
repnz
iret
cltd
shlb
or
pop
hlt
or
leave
or
rcrl
jl
cmp
dec
lods
es
scas
mov
int
clc
loop
lret
in
rcrb
lock
lret
xor
dec
mov
movsb
dec
scas
mov
or
and
mov
push
daa
cmpb
lods
cmc
ljmp
and
adc
lcall
xlat
rcll
sub
f2xm1
cmp
jnp
pop
mov
dec
jb
xchg
sbb
xchg
mov
fsub
and
pop
call
test
sub
and
ror
movb
sbb
cltd
test
leave
sti
mov
cld
push
mov
mov
adc
adc
in
adc
or
add
and
dec
imul
xchg
dec
cltd
lods
pop
mov
or
lods
out
dec
stos
push
not
je
mov
testb
inc
out
aam
mov
add
adc
mov
ret
jne
sbb
or
push
push
jns
lcall
fcoml
incb
arpl
push
sub
sub
movsb
arpl
inc
jle
repnz
jp
popf
add
xor
dec
xchg
jecxz
mov
cwtl
push
outsb
dec
and
jp
insb
add
mov
repnz
addr16
ljmp
fisubrs
js
dec
jl
mov
enter
jg
xor
mov
iret
daa
mov
fwait
into
add
adc
lret
and
enter
and
es
icebp
out
sbb
mov
sub
jne
xor
adc
push
mov
jmp
cmpsl
mov
ss
daa
insl
test
or
cmp
pop
inc
or
pop
jmp
test
das
inc
dec
inc
or
push
push
fsubs
jge
mov
xor
push
pop
pop
jo
pusha
rcrl
rcl
dec
cmp
jae
add
fwait
push
jle
test
outsb
jg
mov
pop
dec
std
or
cmp
inc
mov
stos
sub
gs
movsl
dec
gs
je
js
mov
jo
mov
mov
and
pop
jecxz
push
pop
xchg
shl
and
pop
je
fldl
andb
leave
and
in
daa
mov
fwait
inc
sbb
shll
hlt
out
aam
pop
add
loop
push
jle
outsb
rcr
inc
add
loop
jns
inc
xchg
stos
orb
mov
sahf
in
fidivs
mov
mov
clc
faddl
lds
lods
xor
dec
aaa
fwait
and
add
sbb
daa
sub
out
repz
ret
add
inc
call
insb
push
ss
addr16
push
flds
pop
repnz
leave
mov
out
push
int3
xor
adc
jp
imul
ja
xchg
stc
ret
dec
sbb
faddl
shrl
mov
stos
lea
pushf
out
pavgw
lret
sbb
xor
mov
xor
imul
popf
mov
aam
lcall
inc
jge
cli
ret
pop
xor
in
les
into
dec
scas
pop
push
repz
int
xor
push
cmp
lcall
lock
jl
stos
push
sbb
inc
stos
stos
inc
or
int
call
lcall
fs
cmp
les
nop
adc
or
adc
pop
pop
scas
clc
aaa
push
mov
cs
pop
xchg
jns
ret
pop
mov
pop
push
mov
int3
cwtl
mov
sarl
cmp
jle
int3
sbb
testb
and
jne
dec
add
sub
fstpt
stos
int3
mov
cli
push
aad
push
enter
pop
fistl
add
mov
pop
cld
test
aam
or
push
popa
inc
inc
sbb
scas
or
mov
bound
gs
add
popa
fmulp
ret
mov
pop
and
dec
sbb
pop
ss
ja
out
icebp
pushf
push
jecxz
xchg
adc
sbb
popa
xchg
psrld
add
sahf
xchg
movsl
lods
cwtl
leave
aaa
fmuls
mov
pop
xor
jb
push
insl
lds
cwtl
adc
sub
mov
mov
ss
pop
push
ret
pop
fsqrt
imul
jle
mov
movsb
sub
fstp
enter
cld
pop
flds
mov
jmp
xchg
mov
sub
aas
or
add
and
xchg
in
or
or
push
jp
jmp
or
shll
add
cwtl
or
push
lret
lods
add
jbe
daa
lcall
addl
adc
push
adc
test
mov
mov
loopne
movsl
addb
push
lea
jmp
vphaddwq
cmp
mov
sahf
jmp
in
adc
xor
in
or
mov
mov
pop
aas
ficompl
pop
dec
call
cwtl
fwait
or
cmc
imul
cmp
lcall
cmc
leave
pop
sbb
xchg
jmp
mov
lds
aaa
mov
push
daa
hlt
jle
add
sub
negb
iret
inc
test
inc
stos
ffree
sti
divl
pushf
into
test
fnstsw
xor
adc
test
mov
xchg
xchg
jo
enter
jns
loop
push
sbb
es
mov
popa
add
mov
lahf
clc
imul
cld
dec
adc
pop
cli
hlt
push
bound
adc
cmc
aaa
mov
jmp
pop
push
aad
inc
or
mov
add
add
outsl
mov
sub
mov
loop
cmp
xor
fwait
jo
lret
aaa
enter
pop
mov
cmc
xor
popa
dec
fldcw
sbb
sbb
mov
arpl
push
sub
flds
mov
das
xchg
aaa
scas
adc
mov
pusha
inc
or
inc
push
jg
jnp
popl
inc
pusha
xchg
push
outsl
pop
imul
and
or
sub
ds
fidivrl
nop
cmpsl
out
xchg
iret
inc
or
sub
mov
mov
xor
sub
push
std
cmp
lds
cwtl
mov
xchg
leave
imul
inc
loope
mov
outsl
push
sarb
add
lahf
dec
lahf
sub
xor
xchg
jl
adc
aas
push
and
inc
and
repz
mov
lret
inc
jbe
xchg
xchg
xchg
mov
mov
rolb
lret
fbld
in
rcll
out
add
cli
push
ds
test
xchg
movsl
mov
outsb
or
test
mov
xor
add
daa
dec
mov
and
mov
sub
xchg
push
push
out
int3
jecxz
sub
popa
xchg
mov
add
movsb
mov
cmp
pop
sub
add
adc
sbb
mov
lret
int3
stc
cmc
adc
lahf
push
xor
stos
mov
sub
xor
movsl
loop
sub
ss
fildll
jbe
jp
pop
jne
fldcw
arpl
lock
mov
sti
push
add
or
shr
enter
imul
mov
cmp
popa
xor
cmpsb
add
pop
mov
push
cmpsb
stos
shrb
jecxz
or
jb
les
stc
add
mov
roll
pusha
rcrl
sub
push
popa
push
lods
or
dec
sbb
stos
leave
das
out
inc
cmc
addr16
ret
push
pushf
cmpl
push
or
sub
shll
nop
xlat
jb
inc
push
adc
sub
pop
add
shrb
fimull
dec
test
test
fmull
rorb
inc
mov
std
pop
sub
jno
imul
add
mov
out
sbb
xor
cmp
jns
cli
aam
add
les
pop
adc
xchg
fnstcw
lods
hlt
aam
adc
mov
jae
sub
lods
cmp
out
cmp
repz
nop
jl
faddl
xor
mov
jae
or
cmp
or
fdivl
sti
fwait
lret
jno
mov
insl
sub
lcall
and
jmp
jge
fwait
jg
mov
aaa
push
pop
cmp
dec
jl
xchg
imul
ret
ljmp
sub
xchg
in
insb
hlt
pop
nop
pushf
dec
hlt
jno
dec
inc
mov
sub
lods
mov
fmul
add
mov
iret
gs
rcrl
mov
dec
sub
test
das
lds
xchg
or
stos
pop
aaa
popa
loope
mov
sbb
cltd
jge
dec
loope
fisttpl
pop
and
es
adc
push
dec
aam
loope
push
and
mov
bound
icebp
pop
je
rclb
mov
xchg
fimuls
cmpsl
and
mov
inc
mov
and
mov
clc
mov
mulb
mov
cmp
cmp
adc
pop
ja
movsb
stos
imul
gs
negl
jmp
sub
ljmp
fnsave
inc
sub
repz
aad
adc
add
and
outsb
mov
sbb
and
gs
cltd
jnp
xor
jle
stos
jmp
pop
nop
rcll
icebp
jnp
cwtl
jl
pop
pop
idivl
dec
sbb
pop
dec
iret
xchg
push
sbb
push
or
fwait
or
adc
clc
inc
pop
je
or
cmp
mov
adc
rcrl
ret
ficomps
jbe
ds
jae
mov
in
sbb
lret
xchg
test
or
notl
jle
in
mov
pop
in
in
cs
add
jmp
mov
stc
aas
fmul
test
lahf
jle
pop
cmc
xor
iret
ljmp
jmp
cmp
push
in
cld
dec
lock
int
lahf
push
or
test
pop
mov
adc
mov
mov
lds
push
shrl
jne
sbb
cmp
push
or
orb
xchg
test
lret
dec
sub
mov
sahf
imul
sbb
push
subb
pop
insl
mulb
adc
sbb
or
stc
mov
loopne
fsubl
inc
cld
ret
div
out
leave
xchg
ja
ror
mov
pop
pushf
push
clc
bound
jl
push
mov
test
pop
cmc
xchg
push
push
gs
push
test
jo
sahf
cmp
push
fidivrs
push
andl
in
test
dec
cmpsb
pop
push
cmp
lock
in
lods
mov
aas
rcl
and
popa
insl
lcall
mov
push
popl
ret
stos
lahf
cmp
in
pop
iret
pop
scas
insl
mov
movsl
out
lea
aam
out
fisubl
imul
xchg
lcall
adc
adc
mov
jae
jge
ja
xor
push
dec
loope
mov
ljmp
dec
test
setle
out
out
and
push
stc
mov
sbb
lds
mov
xor
arpl
add
lea
adc
push
rclb
pop
jnp
scas
fistl
jecxz
push
add
xchg
leave
sub
cmp
add
dec
ja
gs
dec
mov
xor
jbe
pop
bound
inc
rorl
add
daa
adc
lea
push
inc
fs
stc
adc
jo
pop
push
imul
pop
out
pop
sbbb
aas
popf
xor
mov
mov
jo
es
add
stos
sub
dec
push
sub
fistpll
rcl
pushf
ret
push
xor
aam
mov
dec
jbe
jg
push
mov
cmp
inc
adc
fidivrs
pop
cmpsl
sub
adc
dec
movsb
into
mov
clc
and
jmp
adc
movsb
sub
xchg
dec
popl
push
cltd
and
mov
jb
jns
pop
js
jmp
pop
arpl
jmp
and
inc
std
mov
in
dec
or
cmp
adc
add
test
adcb
pop
dec
std
sarl
inc
pop
in
mov
push
ss
sub
shl
push
std
mov
jo
hlt
jmp
xchg
sbb
fidivrl
mov
out
inc
ret
test
xor
sub
xlat
or
pop
and
sbb
xor
sahf
jp
lea
cltd
notb
stos
scas
ljmp
xchg
push
mov
loope
aaa
shr
dec
in
push
lock
push
repz
xor
adc
mov
sbbl
dec
inc
add
decl
cmp
test
push
add
cmp
sub
dec
xchg
sahf
or
loope
jl
inc
or
pop
inc
xor
jne
mov
in
mov
inc
pushf
fldl
andb
jbe
in
sbb
mov
arpl
ljmp
hlt
aam
xchg
jecxz
and
add
jge
mov
cmp
fstpt
cmp
jle
clc
mov
dec
xor
pop
sub
test
dec
mov
dec
loope
and
movsb
lea
in
sbb
popa
mov
dec
and
cmp
fwait
push
in
mov
jnp
sub
adc
push
inc
lahf
lret
push
xorl
adc
addr16
fprem1
xor
or
or
scas
aas
sbb
and
inc
les
mov
stc
push
add
jmp
out
jecxz
scas
and
or
cwtl
imul
stos
inc
ds
push
xchg
fwait
and
mov
sub
scas
cmp
les
lret
ds
jle
pusha
ret
adc
lods
std
mov
mov
pop
mov
cmc
daa
sarb
xchg
pop
sahf
std
popa
icebp
repz
movl
pop
pop
repz
inc
push
jl
pop
mov
scas
cmp
aam
jno
mov
int
push
out
popf
pop
in
mov
cmc
mov
ja
test
and
sbb
outsl
je
dec
icebp
into
cmp
or
lret
push
mov
cmp
sahf
int3
jo
jae
fs
rol
leave
or
and
cmp
mull
add
pop
insl
jne
cld
or
cmc
mov
loope
and
jmp
sub
test
pop
cmpsl
emms
or
loopne
jnp
movsl
addl
fcomps
fcmovnb
arpl
rcrl
adc
mov
adc
cmpsb
loope
mov
pop
pop
xor
out
inc
imul
inc
outsb
adc
cwtl
mov
aam
mov
jne
cmc
add
jl
aad
dec
mov
pop
xor
push
nop
test
jnp
push
mov
cmc
cmp
lcall
stc
add
cs
lods
adcl
mov
add
outsl
outsl
rcr
or
cmp
shll
push
lret
scas
movsl
dec
push
aaa
insl
sbb
daa
scas
repnz
loope
xchg
mov
lret
sub
push
xchg
jno,pn
fbstp
xor
inc
and
cmp
gs
push
addr16
fucomip
jae
stc
ss
jp
push
or
dec
xlat
aad
sub
pop
mov
aam
inc
xor
shr
lods
xchg
pop
dec
mov
lock
jmp
mov
pusha
pop
stos
pusha
addr16
rsm
lods
pop
or
es
xor
mov
xor
jbe
test
xorb
leave
adcb
xorb
fstps
jo
in
sub
ficomps
jo
xor
add
push
cmc
xorb
testb
andl
cmc
in
inc
dec
das
push
pop
mov
int3
pop
mov
mov
xor
or
movsb
inc
popa
movsb
xchg
sub
lock
scas
test
fsubr
rcr
mov
pop
mov
sbb
xchg
fimuls
in
add
push
sub
insl
cmpsb
arpl
pop
fisubrl
sbb
hlt
xchg
enter
ret
clc
add
clc
jmp
leave
gs
push
jp
ret
and
inc
cltd
mov
mov
out
pop
xchg
mov
pop
test
mov
and
jg
cld
xor
or
inc
in
cli
iret
pop
fdivl
cmp
mov
pop
push
cmp
jmp
mov
jb
or
inc
jae
xor
xchg
pushf
sub
mov
imull
mov
js
movsl
jbe
pusha
test
pop
sbb
xchg
inc
pop
xor
out
adc
inc
sub
sbb
je
mov
cmp
inc
push
jl
sbb
fcomps
loopne
mov
popf
sub
lea
fldenv
div
mov
add
or
add
dec
nop
scas
andb
ret
cli
add
mov
mov
cld
cmp
mov
or
or
sub
cmp
and
or
mov
inc
es
inc
cmp
sahf
xchg
push
mov
mov
add
jl
push
je
lahf
sbb
xor
push
mov
cmpsb
mov
adc
mov
sub
leave
add
push
hlt
push
scas
lret
ja
fcmovnbe
jb
enter
mov
cmc
pop
jo
pop
push
xchg
xchg
pop
mov
fisttpll
or
jge
nop
push
jns
and
add
lahf
lds
push
mov
add
mov
leave
repnz
leave
subl
inc
enter
leave
in
ljmp
and
adc
pop
jns
insb
imul
add
adc
js
stos
mov
in
out
arpl
or
jno
int
in
sub
push
incb
cltd
mov
test
pop
ret
test
xor
aas
enter
cmp
pop
xchg
push
stos
mov
dec
pop
jecxz
mov
movsb
mov
cmp
jns
fsubrs
mov
pop
stos
insl
mov
movsl
mov
push
push
add
adc
je
jg
add
mov
out
jge
in
lds
data16
dec
test
adc
iret
bnd
or
dec
jo
add
aam
jae
jecxz
or
or
out
gs
pop
fsubp
test
inc
xchg
cwtl
insl
mov
lock
gs
icebp
movsl
pop
cmpb
push
sub
jle
sub
fstpl
cs
cmp
and
pop
lea
mov
fs
inc
jns,pt
sub
jbe
and
popa
dec
jl
jmp
and
cmc
adc
cs
pusha
and
es
fs
out
lcall
icebp
xchg
inc
xchg
addr16
out
sbb
iret
fcmovnbe
mov
pushl
fstl
inc
pop
in
psllw
sbb
xchg
sub
in
clc
mov
jae
jnp
cld
cmp
lcall
push
mov
shll
in
mov
iret
out
push
in
mov
outsb
fisttpl
call
pushf
inc
mov
jb
loopne
jg
jb
pop
mov
jmp
sub
mov
sarb
jno
mov
jp
lret
push
adc
inc
and
inc
mov
fistpll
and
ret
push
daa
pop
sub
cmpsl
mov
inc
imull
sbb
aad
push
mov
out
idivl
shrd
pop
out
sbb
xor
iret
ss
cli
xor
lods
int
sub
into
push
fs
das
sub
or
xchg
mov
add
fcoms
dec
stos
jno
int3
cmpsl
das
mov
shl
push
loop
xor
push
ds
xor
mov
mov
ds
adc
xchg
enter
lahf
sbb
pop
lcall
lcall
and
mov
cmp
rolb
incb
add
mov
inc
pop
in
loop
ret
loopne
push
push
lods
mov
imul
jne
xor
pop
mov
pop
out
test
fidivs
mov
mov
adc
mov
cmp
adc
and
rclb
lret
inc
adc
bound
in
cmpsb
mov
pop
pop
mov
stc
fistl
mov
xchg
jmp
fdivs
imul
jnp
dec
jle
testl
daa
jle
leave
pop
addb
leave
push
popf
and
fistps
mov
jns
inc
mov
fiadds
mov
pop
andb
sbb
mov
dec
xlat
dec
xchg
loope
dec
mov
nop
shrw
pop
sti
hlt
xchg
setge
cld
dec
pop
cmp
arpl
sbb
cwtl
mov
and
cmp
pusha
sbb
mov
sub
inc
and
test
ret
xchg
fidivrs
int3
xchg
sub
xchg
jecxz
cmpsl
dec
push
xchg
inc
cltd
cmp
sbbb
pop
aas
pop
cmp
ss
ja
test
cmp
adc
test
pop
pop
hlt
inc
repnz
jne
jno
loope
bound
out
mov
roll
ret
xchg
and
out
cs
ret
adc
cmp
push
lock
incl
icebp
pop
sub
into
sbb
repnz
add
add
gs
sbb
mov
test
xor
dec
hlt
es
ja
mov
pusha
sub
stos
xchg
aaa
adc
and
test
inc
ljmp
sbb
dec
xlat
dec
arpl
cmp
test
adc
dec
cli
sub
int3
inc
sbb
xor
sub
outsl
xor
push
fldcw
stc
outsb
pop
sahf
jmp
dec
jmp
daa
mov
dec
sub
cmp
popa
lods
rcr
scas
fldt
fsubs
aaa
sbb
xor
mov
mov
in
test
mov
xor
xchg
leave
push
push
movsl
adc
push
sub
adc
in
gs
out
add
push
int
xchg
cmc
pop
fs
add
pop
sub
adc
into
xor
pop
sbb
sub
xor
sub
and
je
dec
add
sbb
pop
xchg
lds
test
movsb
popa
xchg
mov
out
lret
lea
lret
add
jg
pop
xchg
cmc
push
push
pop
subb
jl
mov
pop
push
adc
mov
pop
call
loop
pop
je
inc
pop
and
xchg
sahf
xchg
nop
jmp
std
mov
xor
int3
cmp
or
lods
cwtl
mov
inc
fnstenv
out
andb
add
xor
or
call
movsb
sub
leave
out
sbb
jb
mov
leave
mov
test
pop
std
pop
out
in
andl
jnp
sbb
aad
mov
jo
fisttpll
in
out
test
ss
add
jo
mov
cmp
ljmp
js
insl
mov
rolb
or
jbe
inc
cli
cli
in
and
inc
leave
mov
mov
repz
pop
ja
mov
lret
popf
xor
sbb
test
test
push
ds
pop
sbb
dec
fsubrp
xor
fsubl
idivb
popf
cmc
negl
jo
rclb
jne
cld
jnp
xor
lret
xlat
xor
cmp
addr16
lret
push
or
roll
mov
repnz
call
std
test
lods
cmp
lock
push
dec
add
pusha
xlat
inc
bswap
jbe
andl
inc
lahf
adc
test
inc
outsb
pop
loop
int
in
nop
ficoml
sub
cmp
xchg
push
sub
push
loopne
adc
mov
pusha
js
ret
dec
sbb
std
sub
bound
adc
jno
xchg
aaa
and
sub
aaa
or
insb
shl
jg
mov
jp
jnp
cmp
cmp
ljmp
hlt
cli
in
adc
inc
mov
push
in
enter
xorb
adc
sti
mov
and
xor
mov
cmp
jmp
bound
inc
addr16
pop
ffreep
in
push
fwait
mov
std
movsb
je
add
nop
std
sbb
test
shlb
sub
jecxz
sub
sarb
adc
mov
outsl
lods
out
push
es
pusha
bnd
inc
mov
mov
pop
cmp
add
ret
pop
jmp
push
xchg
clc
pushaw
cmp
dec
jl
push
pop
lret
xchg
xor
addr16
nop
sub
push
cs
nop
jbe
rcll
fwait
ret
adc
mov
loope
imul
cwtl
push
ret
je
bound
inc
lock
int3
pop
jmp
call
inc
mov
mov
rclb
sti
orl
sbb
cltd
cld
test
lock
fsubl
pop
cld
scas
imul
pop
int3
jne
xchg
jge
call
test
lret
call
test
ljmp
cmp
int
push
and
shll
movsl
adc
add
pop
sub
popa
negl
pop
negl
daa
adc
push
mov
stos
pcmpgtw
leave
xorb
mov
gs
lods
popl
incb
ja
adc
jne
movsb
lods
aad
cmpl
xchg
jnp
inc
stos
adc
fldt
out
or
enter
cwtl
movsl
xchg
xchg
push
push
sti
jmp
jae
scas
outsb
aad
fldcw
sbb
lret
push
test
testl
pop
scas
repnz
jl
xor
cltd
ret
cmc
test
pushf
ljmp
mov
xor
je
cmp
mov
adc
adc
cmp
rclb
lahf
xchg
cmpsl
jns
xchg
push
loope
imulb
sub
mov
dec
inc
repz
or
jge
fwait
pop
mov
cmpb
sbb
xchg
mov
out
mov
ret
pop
out
and
fnstcw
adc
leave
lret
xor
cwtl
stc
enter
pop
jne
loopne
dec
dec
cwtl
xlat
sub
cld
nop
sub
ja
or
imul
cltd
cli
jge
mov
lret
cmc
mov
push
or
loop
adc
pop
pop
mov
mov
push
push
xor
mov
jne
and
divl
pop
inc
sbb
jns
in
cmp
enter
push
and
out
je
jl
inc
mov
imul
push
movsb
adcl
cs
fs
jb
mov
test
loopne
movsl
cmp
pop
outsb
add
call
add
sub
cmc
mov
outsb
repz
mov
in
pop
pop
fsubl
in
ss
mov
dec
add
stos
mov
add
cmpsl
xchg
ret
push
nop
push
sub
push
jns
mov
addr16
add
mov
in
xchg
sub
icebp
fstpt
mov
int3
mov
out
mov
leave
jecxz
jae
jecxz
test
loop
dec
std
sbb
gs
add
fnstsw
aaa
clc
mov
inc
xor
sbb
mov
leave
mov
in
stos
out
jmp
cmc
adc
xchg
in
jno
dec
jl
xchg
or
cmp
or
push
sbb
inc
jle
mov
push
sbb
sbb
ljmp
pop
mov
out
gs
mov
lret
lods
imul
and
xchg
sub
loope
inc
cmp
push
sub
pop
in
cmp
sub
iret
sub
std
sub
fucomi
pop
jmp
dec
xchg
lea
popf
jnp
inc
sbb
add
cltd
divb
out
test
xor
sar
addr16
in
xchg
and
adc
sub
std
gs
mov
pop
das
adc
aaa
dec
rclb
ljmp
aad
test
jnp
push
xor
loope
shl
mov
and
dec
aas
inc
dec
aas
pop
movsb
sub
add
sbb
or
lcall
pop
gs
cmp
loope
ds
push
rcll
xchg
add
cmp
mov
xor
jecxz
fistps
test
leave
jne
dec
fists
test
sub
imul
repz
dec
jb
icebp
adc
xor
aam
arpl
add
jo
xchg
bound
pushf
jg
jge
xlat
aad
dec
imul
pop
pop
in
sub
jbe
lods
mov
dec
lret
dec
xor
sub
xor
push
pop
rcrb
les
mov
lcall
sbb
dec
jg
adc
shrl
subl
out
stos
js
add
and
scas
out
aas
sbb
sub
jbe
add
push
sub
or
insb
rcll
lock
inc
jmp
xor
rolb
jle
stos
nop
add
jbe
pop
sub
movsb
bound
hlt
jne
mov
scas
pop
scas
movsl
or
rcl
cmp
mov
push
lahf
cmpsb
outsb
icebp
mov
mov
stos
aam
pushf
push
outsl
pop
div
hlt
jo
and
scas
mov
loop
mov
fdivrs
clc
lret
and
mov
mov
cmc
xor
mov
out
adc
xchg
and
idivb
inc
add
or
or
jecxz
rol
jle
mov
adc
aas
xchg
lret
and
pop
decb
mov
mov
xchg
or
aam
xor
or
pop
imul
add
xlat
and
enter
jl
add
xchg
cmp
cpuid
sub
ret
shlb
mov
test
int3
cmp
imul
mov
mov
push
cmpsb
in
aad
jo
sbb
loopne
cs
mov
call
adcl
and
lahf
inc
je
xchg
xchg
out
stos
stos
fwait
es
xchg
or
cmp
or
dec
mov
jns
xchg
mov
mov
cli
mov
or
jo
add
fsubs
fcomps
jg
push
pop
sahf
jbe
mov
adc
xchg
mov
iret
and
pop
sbb
or
in
sbb
and
imul
cli
push
cmc
fldenv
xor
xchg
jae
ja
inc
loop
mov
push
fs
add
ret
pop
cs
imul
jnp
adc
xchg
and
cli
cmp
cs
lret
bound
adc
ds
cmp
cmp
or
push
in
inc
std
ret
xor
mov
sub
lret
push
outsl
and
arpl
arpl
or
xchg
sti
jno
pop
dec
dec
mov
jg
and
adc
pop
enter
fs
add
repnz
out
pop
ficomps
fdivrl
gs
adc
lods
sbb
subl
fmull
cltd
sub
and
jo
lahf
cli
jns
daa
jp
mov
leave
fstl
dec
ss
repz
outsl
adc
sub
cmp
fimuls
sbb
cmp
lea
lret
in
mov
xchg
push
push
cmp
rdpmc
inc
pop
jge
xor
outsb
mov
fs
call
dec
rorb
dec
jns
aad
push
xor
add
stos
inc
gs
push
push
insb
and
repnz
es
inc
sub
or
cmp
in
sbb
xlat
into
or
lret
loop
sbb
sbb
std
insl
movsl
cmp
sbb
loopne
scas
sub
mov
mov
sbb
xor
and
pop
cs
repnz
jbe
mov
repnz
jg
or
call
in
ficompl
shrl
push
adc
mov
jge
nop
insb
sub
lret
push
mov
out
imul
out
jnp
andb
shrb
jg
dec
testl
in
cmp
dec
ds
or
test
mov
ret
mov
lds
xchg
ljmp
push
xchg
subl
test
jns
push
dec
pop
cmp
push
sti
call
or
jl
mov
push
jo
imul
jg
mov
ret
out
mov
mov
jbe
dec
push
gs
mull
roll
and
stc
lahf
in
sub
dec
push
loop
insl
fistl
xlat
aas
and
add
or
call
clc
mov
into
xchg
ret
outsl
ret
imul
test
jmp
xchg
outsl
test
outsl
pop
fcompl
aad
push
mov
and
xor
popa
fwait
in
stos
cmp
dec
mov
ret
mov
mov
push
inc
int
sbb
leave
mov
xlat
scas
sbb
cmp
stc
pop
jno
mov
push
bound
jno
lea
cmp
fsubrs
insl
stc
cmp
subl
bound
push
pop
addl
lret
ffreep
cmp
cltd
xchg
mov
xchg
daa
cmp
js
daa
xor
mov
mul
jp
push
inc
lock
pop
mov
popf
sbbb
cmp
sbb
hlt
stos
and
jnp
js
mov
add
adc
sub
inc
mov
pop
flds
inc
aad
jmp
hlt
cli
aad
mov
imul
fs
add
cmp
cld
push
inc
jns
jne
sub
mov
fstp
mov
pushf
mov
mov
and
imulb
js
mov
add
movsl
mov
scas
pop
xchg
rcr
in
sti
in
hlt
daa
stos
mov
jae
fidivrl
bound
mov
xor
sub
jnp
out
sub
sbb
adc
test
rclb
clc
inc
inc
sub
rcrl
and
add
dec
push
cs
dec
fldl
mov
loopnew
jbe
mov
outsb
cwtl
cmp
lcall
cmp
push
pop
cmp
mov
cwtl
aas
ja
gs
loopne
pop
xor
jnp
pop
mov
mov
imulb
add
or
es
imul
lods
out
leave
pop
xor
mov
xchg
fstps
inc
jl
ds
push
add
jp
cmpsl
ss
data16
fnstenv
std
mov
into
inc
fstps
gs
pop
pop
xor
cwtl
daa
out
xchg
fisubl
jnp
lods
dec
xlat
hlt
dec
mov
fdivrs
std
sub
idivl
ret
and
repz
les
stos
add
jle
roll
and
enter
sub
cli
sbb
mov
jmp
push
int
cmp
lret
rcrb
sub
jl
cmpsl
lock
xor
ja
lods
push
and
cmp
out
adcb
outsb
fwait
mov
xchg
mov
sub
mov
aaa
popf
cli
mov
xchg
inc
or
or
xor
filds
inc
outsl
int
sub
ja
fs
mov
not
cltd
jb
sbb
inc
inc
dec
pop
sub
mov
xor
push
push
push
sbb
mov
into
and
jo
or
inc
add
xchg
or
jns
pop
in
mov
ja
inc
push
dec
stos
or
cmp
sarb
pushf
cmp
imul
push
adc
pop
loopw
out
or
fwait
mov
cpuid
mov
and
data16
mov
pop
mov
jp
jmp
in
xor
jle
or
and
mov
add
test
movzwl
inc
xor
dec
jl
mov
addr16
add
pop
cmc
pop
fsubl
xor
pop
and
mov
push
ret
inc
test
fs
push
dec
and
jb
pop
push
cmpsb
fstpt
xor
cltd
aas
dec
sbb
cmp
push
aad
loopne
mov
jmp
cmpsl
sbb
popf
xchg
lds
or
dec
mov
imul
cmp
sar
jmp
and
or
out
pop
mov
jns
xor
movsb
add
sub
mov
mov
sbb
aad
sahf
sub
sbb
hlt
jmp
ret
pop
ss
fs
cmpl
adc
mov
cmp
fxch
add
and
fisubs
pop
mov
add
fs
adc
data16
nop
pop
push
shl
in
jle
insb
cli
push
xor
pop
pop
bswap
fdivl
mov
push
popf
sub
mov
idivb
xor
jmp
sbb
mov
in
xchg
sbb
int
jecxz
dec
aam
jmp
cmpsl
jge
in
in
inc
stos
movsb
push
xchg
push
sbb
mov
cmc
or
loop
repz
imulb
jno
test
mov
arpl
xchg
dec
sahf
dec
mov
out
mov
push
pop
inc
pusha
sahf
cmp
or
inc
or
or
sbb
mov
test
and
hlt
loope
pushw
repz
mov
push
xor
mov
xchg
pop
or
xchg
sti
mov
or
aas
lcall
sbb
into
sahf
mov
divl
mov
insb
inc
xchg
fldenv
push
push
jne
rclb
arpl
mov
in
or
dec
cmp
mov
push
mov
or
xor
or
add
ja
stc
stos
mov
shlb
mov
dec
pop
ljmp
xor
and
sub
cmp
loope
mov
daa
scas
add
ss
les
jo
mov
clc
jl
imul
mov
and
cmp
movsl
pop
xchg
lret
mov
pop
mov
sbb
ss
stos
add
xchg
inc
push
daa
lods
outsl
into
loop
jmp
pop
repz
cltd
bound
mov
jmp
bound
movsl
xor
out
jl
outsb
subl
outsl
stos
stc
jle
andb
std
sub
sub
adc
fnsave
xchg
cmpsb
and
mov
sbb
adc
xchg
mov
int3
pop
push
movsb
repz
fiadds
jp
push
insl
xchg
fimuls
mov
xchg
int
mov
xchg
mov
clc
sub
fiadds
pop
repnz
push
mov
adc
mov
sbb
or
cmpb
out
cs
cmpsl
xorb
jae
mov
mov
js
insl
sbb
outsb
arpl
sub
pop
jns
in
sub
and
sub
shlb
sti
pop
pop
ret
hlt
sahf
xchg
mul
pop
out
mov
psubusw
push
imul
scas
andb
cmpsl
hlt
dec
fsub
lock
ret
lock
lock
cs
fcmovu
adc
cmpsl
xchg
xchg
es
adc
push
loop
mov
bnd
pop
in
loope
adcb
jl
pop
les
jmp
lods
into
cmc
fs
sar
clc
scas
movsb
mov
fdivl
or
arpl
mov
fwait
add
mov
and
outsl
push
mov
mov
in
aam
mov
add
jg
cmc
leave
pop
pushf
inc
jb
sbb
idivl
mov
rclb
lods
pop
data16
jo
out
out
cmp
push
push
clc
mov
loope
fmull
cmpsb
aam
rcr
inc
sbbb
aam
inc
xor
cmpsl
adc
xchg
movsb
stos
cmpsl
fildl
loope
ret
xorb
dec
shl
adc
in
fstp
adc
push
fisubl
test
subb
lea
mov
hlt
pop
sub
mov
pop
loope
je
xchg
nop
dec
cltd
sub
push
cmp
call
fdivrs
test
pop
fcoml
fisubrl
push
ret
aam
xchg
cwtl
pop
cwtl
xor
in
push
movsb
dec
jl
lret
adc
test
fucomp
mov
mov
hlt
mov
stc
lea
mov
js
sarl
jmp
adc
mov
push
push
jge
jle
cmp
dec
dec
sarl
gs
push
sub
dec
cmp
sahf
dec
jle
call
call
mov
xchg
mov
insl
pop
movb
inc
cmp
pop
cltd
cmp
inc
push
pop
ljmpw
ret
test
in
std
ret
pop
insl
sahf
fistpll
lret
push
pop
cmp
mov
loopne
push
sbb
cmc
lods
mov
movsb
mov
xor
adc
pop
hlt
add
jl
and
add
mov
ljmp
mov
outsb
jge
jae
xchg
test
loop
cli
mov
das
adc
es
repz
xorb
test
inc
nop
test
sbb
push
iret
loop
popa
subb
into
adc
push
mov
xlat
out
sahf
in
int
jnp
cmp
pop
gs
leave
adc
pop
daa
sbb
scas
das
mov
xchg
ss
call
jo
xchg
in
es
adc
cwtl
pop
xor
fnstcw
ret
lret
add
inc
cmp
mov
nop
daa
mov
clc
out
fistps
scas
pop
adc
in
dec
sarl
rolb
fisttpl
shll
bound
inc
in
xlat
les
cmp
lds
sbb
jne
packssdw
mov
fwait
test
xchg
cs
cmp
icebp
or
rolb
fwait
cmc
pop
mov
sbb
cmc
mov
ds
pushf
pop
add
scas
adcb
insl
icebp
pop
lods
popf
pop
lret
add
pop
stc
int
popa
sbb
in
fldt
sbb
adc
mov
rcr
daa
mov
jp
and
lcall
repz
sub
pop
aas
cmp
push
cmpsl
pop
push
orb
pop
ja
ss
cmp
sti
lret
jno
js
dec
repz
cmp
mov
sub
stos
and
xchg
ds
mov
dec
cmp
mov
pop
shrb
daa
mov
pop
sbb
inc
add
push
pop
add
iret
pop
cwtl
inc
sub
xorb
push
pushf
pushf
cmc
gs
aaa
imul
or
dec
dec
arpl
sub
inc
iret
hlt
inc
and
jns
lock
mov
pop
pop
lods
jge
jle
inc
sbb
xor
lock
lods
dec
sub
xchg
lock
lods
je
dec
fcmovb
mov
loope
adc
cmpsb
aam
mov
mov
std
fcomps
or
mov
hlt
push
sahf
pop
daa
cmc
sbb
loope
rcrb
leave
jbe
rolb
iret
pop
leave
fcom
add
je
dec
adc
frstor
imul
mov
lock
xchg
lret
inc
insl
dec
mov
ret
xor
jecxz
movsl
cmp
sbb
inc
cmp
push
mov
lret
dec
xchg
jno
push
movsl
jns
test
add
fldcw
lcall
mov
add
dec
inc
test
pop
shlb
push
pop
insl
pusha
rcrb
pop
dec
out
imulb
pushf
cmp
or
jne
sbb
out
fs
push
and
pop
sub
cmc
mov
das
sbb
bound
dec
jns
sti
movsl
mull
xchg
inc
push
repz
cmp
insb
push
movsl
inc
gs
jb
or
inc
arpl
mov
in
xlat
push
loopne
adc
cmp
dec
mov
insl
loopne
inc
sbb
cmp
loop
in
sub
sbb
js
mov
lds
pop
cmp
into
push
fcmovu
inc
js
sub
jp
and
out
jno
inc
das
sub
data16
add
lods
jae
mov
xchg
cmp
shrl
or
sbb
and
adc
add
pop
push
cs
test
inc
or
mov
mov
inc
insl
xlat
cld
or
int
test
xor
lods
adc
push
or
rclb
outsl
add
or
adc
fxch
add
ljmp
xor
sbb
ja
fstps
cmp
fcmove
adc
and
xor
loopne
inc
scas
cmp
dec
loope
dec
pop
mov
jmp
int
movsl
lcall
pop
push
ljmp
movb
add
push
out
cltd
inc
fwait
add
dec
push
adc
xchg
cmc
pop
ja
out
push
jmp
mov
sti
cmp
inc
aad
fucomi
xor
inc
imul
mov
lock
loope
out
add
ja
fstps
xor
bound
rol
test
inc
inc
xchg
add
push
movsb
and
mov
pusha
orl
movsb
push
mov
fwait
imul
mov
jns
ret
jae
out
mov
add
lret
je
cltd
mov
repz
xchg
mov
jecxz
mov
pop
adc
or
shlb
xchg
bound
stos
das
push
pushf
imul
jae
xorb
adc
pop
cld
in
addr16
stc
or
xchg
repnz
mov
and
cmp
cmp
push
xlat
add
lret
aaa
out
xchg
out
pop
push
sbb
pop
jns
daa
sub
cmp
repnz
in
sbb
stc
mov
loope
pop
iret
mov
pop
xchg
adc
jl
out
dec
aam
inc
push
add
lahf
hlt
sbb
ljmp
dec
xchg
or
push
add
in
cmp
cmp
pop
or
add
sub
das
fstpl
push
aas
std
inc
add
pop
add
or
dec
mov
test
cmp
outsb
and
push
jo
mov
adc
mov
rolb
imul
mov
sbb
cmpsl
pop
popa
pop
jg
imull
iret
sub
dec
jae
push
sub
sub
daa
icebp
lds
add
icebp
add
paddd
sub
sbb
sub
mov
call
int
sub
dec
push
push
nop
mov
addr16
xchg
dec
and
sub
loope
xchg
pop
lock
daa
cmpsl
sbb
sahf
int3
das
cmp
or
push
dec
sub
gs
or
mov
add
cmpsl
push
jmp
movl
subb
iret
inc
adc
add
mov
arpl
call
aam
mov
pop
jb
mov
xchg
push
mov
sub
frndint
vorpd
in
inc
jne
xchg
xchg
aaa
jne
pop
cmp
cmp
add
xlat
add
push
in
adc
adc
icebp
add
push
flds
mov
pop
icebp
les
push
pop
std
testb
lea
popf
shll
aaa
scas
inc
adc
jae
into
sbb
or
les
or
adc
ja
mov
std
cmpsl
pop
fdivl
jae
rclb
arpl
test
out
mov
xor
sbb
sarl
fdecstp
scas
ds
iret
stos
pop
push
pop
int3
into
hlt
pop
in
xchg
jne
pop
cmp
pop
ljmp
cmp
and
les
shrl
jae
xor
jl
mov
inc
xchg
test
xchg
sub
lods
cmp
je
lcall
nop
cmp
movsb
sbb
push
inc
stos
testb
xchg
cmp
sbb
imul
in
and
xor
pushf
mov
mov
std
pushf
mov
xchg
add
in
mov
aaa
pop
imul
sahf
ret
mov
mov
loope
mov
sub
xchg
pop
fldl
mov
cmp
test
dec
dec
andl
into
pop
iret
jmp
mov
call
sbb
xlat
pop
push
sbb
stos
push
sbb
lret
je
sbb
daa
add
lret
sbb
xorps
clc
sbb
sahf
or
push
shrb
cmp
mulb
dec
outsl
xchg
movsb
ret
lcall
gs
insl
push
adc
out
push
std
vmwrite
fdivrl
pusha
fst
xchg
xor
orl
mov
jbe
lods
xchg
pop
pop
and
push
sub
hlt
dec
not
jmp
mov
js
dec
add
out
aad
pop
sub
pop
inc
flds
and
jne
loopne
jl
test
dec
insb
jnp
fcompl
das
roll
scas
icebp
push
xor
mov
sub
sbb
loopne
imul
scas
mov
test
stos
mov
mov
sub
cltd
fdivs
pop
jle
out
pop
sub
ss
pop
pop
mov
sti
and
sti
sub
sbb
mov
cs
cmp
ljmp
aad
cmp
test
push
popl
xchg
inc
jg
or
add
lock
mov
dec
outsb
push
scas
lock
cmc
mov
sub
ljmp
mov
lret
cmp
push
add
fidivrs
xchg
scas
ljmp
or
jns
adc
pop
inc
lds
cld
out
inc
jno,pn
out
cld
mov
mov
popa
bound
xor
ret
ljmp
mov
stos
inc
es
mov
ss
mov
jbe
arpl
mov
sbb
inc
gs
and
fisubs
loopne
lea
or
dec
cmc
subb
popf
mov
loopne
push
sbb
nop
pop
or
ljmp
sahf
xor
and
shr
push
or
pop
in
nop
pop
dec
pop
mov
outsl
push
clc
dec
push
pop
pushf
repz
jp
pop
jne
dec
add
and
in
repz
and
push
scas
js
lret
cli
shll
testb
call
mov
rcrb
cmp
test
lods
sahf
xor
aaa
push
in
and
dec
outsl
fnsetpm(287
jp
add
out
jo
shrl
cmp
ret
daa
jp
test
repz
scas
out
jl
pop
andb
adc
inc
push
es
or
or
loop
mov
outsb
rol
or
nop
fwait
loopne
ljmp
pusha
and
bound
jnp
or
loope
sarw
xchg
mov
adc
out
stos
xor
push
cmp
adc
add
pop
fwait
add
ret
xor
dec
jo
sub
popf
and
std
sbb
push
ds
mov
imul
out
adc
mov
add
sbb
ss
mov
repnz
lods
pusha
scas
mov
pop
outsl
and
stos
inc
adc
stc
or
pushf
push
sbb
or
iret
adc
test
xor
aas
call
cmp
insl
adc
sbb
pop
dec
sarb
cmp
outsb
mov
popf
sbbb
je
outsb
out
xor
je
cs
mov
nop
cmp
mov
ss
mov
jnp
sub
sub
gs
push
pop
scas
dec
out
inc
into
mov
fisubl
fsubrs
xchg
cmp
dec
xlat
cwtl
jns
js
sbb
mov
lcall
jo
or
inc
cmpb
mov
test
pop
and
cmp
loop
fwait
jmp
mov
aaa
dec
ds
xchg
mov
sbb
push
dec
insb
xor
outsb
test
pop
mov
mov
orl
mov
mov
int3
loop
push
movsb
lock
movl
sbb
inc
xor
sbb
out
sbb
add
mov
call
lods
adc
sbb
xchg
or
in
adc
xor
lret
inc
scas
jecxz
repnz
sub
mov
jb
xor
jno
push
fcomip
test
mov
ror
cmp
sbb
sub
cmpsb
sbb
xor
inc
add
add
pop
inc
in
or
sbb
cld
test
sub
cld
sti
pop
shrb
inc
movsb
sarl
out
in
mov
sbb
push
sti
fwait
lcall
int3
add
stos
les
ds
sbb
jbe
and
pop
push
push
jns
daa
es
sbbl
imul
xchg
fdivrl
sbb
shll
fs
lea
inc
jo
lret
cli
test
jnp
lods
test
inc
mov
ljmp
loopne
mov
ret
hlt
pop
inc
hlt
ror
mov
sub
cmp
mov
and
add
dec
ror
imul
mov
leave
pop
bnd
movsb
std
mov
sbb
out
imul
and
test
ficoms
add
adc
push
push
dec
jp
setle
notl
stos
in
ds
jns
add
mov
cs
cltd
mov
or
imul
and
pop
push
rcrl
mov
push
or
push
enter
fdivl
pop
daa
jno
mov
scas
mov
dec
xchg
xor
rorb
loope
repnz
jmp
fwait
xor
jmp
hlt
rorl
std
mov
nop
mov
xchg
mov
adc
pop
adc
fcomps
adc
out
loopne
xor
les
add
lea
lret
lods
fsubs
pop
fldenv
push
sub
gs
enter
mov
in
stos
sbb
cmp
mov
ljmp
push
inc
lods
mov
int3
out
fisubrl
scas
xchg
and
loop
notl
out
mov
insl
mov
and
mov
jl
iret
call
aam
jno
fwait
imulb
pop
rclb
dec
or
mov
sbb
outsb
and
mov
fdivl
adc
fisttpl
fnstcw
jo
enter
push
gs
adc
xor
sti
cli
xchg
roll
loope
adc
add
inc
subl
push
inc
outsb
xor
loopne
iret
mov
test
mov
pop
lock
push
fdiv
xchg
stos
sbb
jmp
fbld
lds
cmp
pushf
sbb
mov
mov
sub
fsubl
adc
add
and
push
xchg
into
push
mull
add
push
incb
inc
enter
fcmovne
xchg
loope
hlt
inc
stos
pop
leave
std
arpl
cmpsb
lret
aaa
insb
fwait
dec
sub
adc
dec
out
lcall
push
std
pop
lea
popf
dec
lods
xor
sub
xor
cs
cmp
rcl
shl
test
out
js
push
pop
aaa
cmp
fisttpl
repz
popf
add
push
rorb
lock
neg
add
lahf
ss
and
push
ljmp
call
fistpll
and
fimull
or
and
mov
imul
fwait
arpl
push
pop
or
cmpsb
mov
xchg
add
es
sub
movsb
into
adc
dec
imul
adc
frstor
mov
dec
or
xchg
orl
and
adc
adc
push
aad
mov
push
mov
jg
push
movsb
leave
arpl
inc
push
jmp
ss
cmp
dec
sub
notl
aam
aad
cwtl
fnstsw
jp
mov
add
negb
clc
mov
cmpsl
dec
add
xlat
rcrb
subb
dec
xor
jp
testl
inc
leave
std
lods
mov
cmp
and
sbb
mov
push
arpl
pop
pop
ja
iret
and
mov
stc
outsb
dec
shrb
ljmpw
pop
sahf
push
hlt
push
lcall
sbb
cmp
inc
sti
inc
pop
pop
sbb
mov
mov
icebp
xor
mov
sbb
roll
repnz
loopne
pop
pop
fdivs
in
or
sbb
mov
cmp
loop
jb
jnp
push
inc
xor
enter
push
push
pop
and
xchg
pop
fsubrp
and
sbb
and
imul
cmp
outsl
dec
xchg
jp
das
popf
xchg
jnp
sbb
mov
into
dec
mov
mov
mov
enter
sub
sbb
push
iret
shl
mov
scas
lahf
and
xor
jne
aas
adcl
lahf
adc
stos
outsl
add
mulps
sar
sti
out
cmp
adc
cwtl
adc
into
ja
int
jp
lahf
xchg
push
mov
dec
mov
rcl
jno
sbb
xchg
or
inc
push
js
pop
popa
xor
dec
imul
xor
adc
in
inc
pop
cmpsb
mov
push
xor
adc
xor
adc
cmc
xchg
lock
pop
and
stos
nop
or
lahf
cld
cli
jl
cmp
inc
mov
loope
sbb
fucom
cmp
scas
cmp
inc
cmp
mov
push
ret
mov
mov
pop
loop
mov
lods
or
ss
push
lcall
jno
movsb
pop
repz
dec
test
mov
fstp
cmp
fdivrs
dec
jecxz
push
bound
mov
push
sub
and
adc
push
outsl
and
sub
loope
add
adc
in
lea
mov
and
cmp
data16
aaa
push
jle
add
or
test
xchg
out
loopne
inc
subb
inc
inc
mov
or
movb
and
clc
repnz
sub
xor
int3
or
sahf
scas
mov
xor
adc
and
jb
call
pop
loope
dec
sbb
jecxz
jmp
add
nop
and
movsl
pop
mov
icebp
mov
and
bound
loopne
ljmp
sub
out
ja
xor
add
pop
jl
sbb
or
mov
xchg
call
sti
mov
andl
pushf
jnp
jb
out
xchg
pop
packssdw
mov
inc
push
sub
mov
adc
xchg
cmpsl
aas
or
push
xor
addr16
aam
leave
and
mov
subb
jae
jae
aaa
fs
daa
push
iret
test
nop
and
popf
into
lods
shlb
pop
jno
decb
mov
xchg
sub
adc
xchg
insl
arpl
pusha
xor
sub
inc
negl
mov
pop
push
mov
jp
mov
ja
cli
or
pop
cmp
cmp
notl
sahf
leave
add
int3
sub
jg
mov
pop
fs
or
pop
ds
mov
push
out
call
sub
sub
add
icebp
push
jg
xor
inc
loop
pop
xlat
ljmp
adc
pop
lret
mov
rcrb
jg
xor
cltd
dec
cmpb
pop
movsb
jle
jg
mov
push
data16
hlt
pop
ljmp
cmpsb
notl
scas
and
mov
mov
addl
mov
lods
and
sbb
daa
cltd
or
shrb
in
push
push
mov
jg
jge
or
ds
mov
pop
mov
jo
jnp
push
cld
fsub
or
push
fcmove
call
test
mov
aaa
mov
ffreep
pushf
adc
std
imul
mov
popa
imul
dec
dec
add
cmp
xor
out
xchg
mov
sub
into
les
loop
mov
mov
mov
rclb
stos
lock
jl
lds
or
jae
xor
push
aad
or
addr16
mov
mov
jnp
push
or
decb
xchg
add
sbb
xor
jno
mov
pop
aaa
xor
push
loope
test
mov
pop
jecxz
sbb
ss
mov
dec
sub
in
xchg
jne
adc
push
sbb
fisubrl
out
pop
jno
lods
test
lret
jo
or
or
out
daa
popa
std
sti
xchg
fnstcw
jnp
imul
aam
lods
fists
insl
sahf
or
lds
add
mov
pop
and
fdivrs
int3
inc
in
maskmovq
movsb
pop
jg
sahf
sub
shll
aas
xchg
add
sub
std
das
aas
and
or
inc
mov
dec
xor
cltd
fstpl
nop
lcall
movl
movsb
imul
sub
daa
inc
push
jae
sbb
insl
cmpsb
mov
pop
jns
push
leave
sbb
push
pop
imul
pop
mov
notl
or
push
sti
jl
scas
mov
dec
push
stc
lds
movsl
int3
ret
dec
mov
or
jae
mov
jae
and
jmp
shrl
cli
xchg
loopne
jns
aas
dec
and
sbb
movsb
push
mull
stos
adc
lahf
mov
mov
lods
sbb
test
shll
adc
mov
cltd
push
xor
jmp
mov
push
inc
idivl
jo
cmc
push
sub
and
rcl
shrl
and
xor
les
rcll
sbb
cmp
mov
decl
and
jp
aas
daa
or
ds
cmpsl
ljmp
jae
jo
lret
add
ds
cmc
add
pmuludq
mov
addr16
mov
cmpsl
sahf
push
sub
out
aam
mov
adc
inc
mov
aam
sbb
out
dec
sbb
inc
push
lea
mov
ret
add
aas
outsb
xchg
pop
ds
inc
jg
cmp
aad
aad
aam
mov
and
push
xlat
hlt
adc
stos
pusha
sub
stos
cmp
cmp
dec
jmp
jl
out
cltd
stos
sbb
mov
push
xor
fsubrs
cmp
xor
mov
inc
xchg
cmp
pop
vprotq
ret
sub
push
mov
push
popa
inc
cmp
pop
rcrb
adc
shlb
rcrl
cwtl
mov
xor
dec
xchg
or
sub
push
iret
sti
xchg
arpl
cwtl
ret
mov
stos
pop
adc
push
mov
ds
xor
hlt
xorb
ja
in
shrl
out
push
test
jmp
sub
ffree
mov
mov
or
jne
cmp
sub
or
sbb
sbb
xchg
sbb
loop
mov
jle
sub
jne
dec
aam
add
ret
and
test
fsubrs
lret
dec
push
in
movb
sahf
push
mov
jo
mulb
int
mov
addb
xchg
sarl
mov
enter
mov
inc
jno
int
mov
test
stos
jecxz
jb
xchg
pop
dec
fisttps
mov
cmp
xchg
aas
mov
jge
sub
jle
xorb
pop
repnz
cld
cld
ds
arpl
push
enter
add
jne
push
rcll
push
jno
sbb
push
jp
cmp
in
sub
xchg
mov
testl
loopne
xor
daa
js
je
insl
mov
push
mov
mov
push
mov
dec
ret
test
repz
lcall
stos
push
mov
lret
fsubl
cmpsl
inc
push
lcall
xlat
clc
ljmp
call
mov
xchg
dec
and
sbb
aaa
mov
aad
lods
call
ret
dec
lret
fistl
clc
mov
xchg
icebp
leave
out
mov
push
mov
mov
add
out
push
movsl
jl
push
mov
lret
mov
sub
imul
xor
mov
sub
pop
mov
inc
xchg
outsl
out
jmp
cmp
jecxz
outsb
add
ss
dec
jo
jmp
stos
ja
or
frstor
mov
add
loope
push
sbb
pop
in
jnp
adc
in
jl
xchg
ficoml
mov
cld
outsb
add
ss
rcrl
and
jecxz
dec
xlat
addl
stos
outsl
add
sbb
mov
jmp
jle
hlt
push
fildll
in
bound
add
jle
jg
js
adc
fwait
lret
fisubrs
sbb
jmp
cmp
adc
jg
clc
lret
aas
pop
out
enter
jbe
stos
out
mov
cmpsl
jl
adc
add
insl
mov
mov
scas
push
cmpsb
dec
mov
rcrl
lret
pop
mov
dec
adc
dec
int3
fsubrl
scas
add
or
pushf
inc
in
xlat
call
test
rcrb
ret
mov
add
sub
hlt
adc
roll
jge
dec
cmc
ss
jo
or
fdivs
push
push
fs
jo
fsubl
data16
in
mov
lods
jno
cwtl
add
xchg
dec
inc
xor
scas
stos
pop
lds
leave
dec
ficoms
or
repz
in
sbb
movsl
gs
mov
jae,pt
data16
jge
xor
mov
inc
ret
push
popa
out
mov
sbb
or
lock
lret
stos
loope
jge
mov
push
rcr
bound
xchg
and
outsl
aaa
mov
imul
jno
test
push
roll
push
mulb
mov
repnz
adc
cmp
fwait
jg
jecxz
fmul
incl
jle
xchg
jmp
adc
dec
and
mov
nop
nop
add
mov
pop
sub
jg
or
stos
addb
fcmovnu
repz
pop
inc
pop
cmp
sbb
inc
hlt
pushf
xchg
sub
imul
out
xchg
jp
imul
arpl
push
aam
cmp
adc
mov
or
lret
and
addr16
sarl
xorl
jb
loopne
xor
push
mov
adc
adc
sub
add
xchg
dec
pop
push
mov
lods
or
aaa
mov
sahf
add
andb
mov
sbb
and
mov
sbb
fmulp
mov
jbe
jp
loopne
lods
dec
sbb
shl
arpl
sbb
cli
or
fnop
and
aas
push
xor
xor
mov
clc
inc
add
add
pop
cs
outsb
add
mov
dec
jno
icebp
repnz
cmp
cltd
xchg
fwait
mov
outsb
pop
mov
adc
jge
je
mov
cmpb
xchg
outsl
insl
lds
xlat
insl
pushaw
scas
mov
sbb
addr16
fisubrl
dec
enter
push
mov
cmp
cmc
inc
add
cmp
jmp
mov
add
ret
jno
sub
mov
or
sub
inc
push
into
pop
pushf
jnp
in
cmp
cs
daa
movsl
dec
sbb
push
or
shrl
cmp
pushf
sahf
cmpsl
out
dec
mov
repz
rorl
mov
jle
xor
dec
divb
lock
pusha
cs
gs
add
jnp
xlat
dec
pop
push
imul
pop
leave
pop
sub
push
mov
mov
addr16
ljmp
outsb
sub
dec
ret
mov
ret
pop
mov
insl
int
dec
test
dec
dec
mov
pop
out
fdivrl
sbb
fldcw
push
push
sbb
xor
loop
lea
fistl
or
xor
jmp
out
sub
and
fwait
mul
movl
sub
sahf
cmpl
sub
gs
mov
cmp
notl
enter
sbb
outsl
lahf
leave
cmpsb
lret
xchg
inc
vmulss
aas
imul
and
pusha
aaa
fcomps
jnp
mov
add
loope
test
cltd
cli
in
fistl
add
sbbb
dec
and
inc
sti
out
in
fucomip
outsb
lock
iret
push
lret
dec
test
or
addr16
mov
push
xlat
lock
cmp
aad
xchg
push
cmpsb
adc
dec
jmp
and
sub
lea
jno
cmp
jp
fnsave
mov
stc
jno
and
sbb
nop
ret
mov
sbb
notb
insb
adc
cld
sti
jb
xchg
jge
imul
ficoms
sbb
insb
scas
sbb
cli
cmp
cmpb
sub
add
fsubp
dec
jne
mov
lret
jb
cmpb
sub
das
xor
lock
jmp
in
out
movsb
mov
and
inc
addr16
ljmp
mov
loop
mov
int3
add
mov
cwtl
xchg
leave
ret
jno
clc
jb
xor
insb
sub
mov
bound
pop
dec
imul
outsb
mov
incl
jnp
cli
jmp
mov
pop
test
imul
push
loope
loop
or
mov
inc
add
xchg
rcrl
aad
lods
xor
or
dec
cmp
mov
aam
and
add
xor
jb
mov
scas
cmp
lahf
ret
or
mov
rorl
push
add
out
push
xchg
sub
lods
mov
aas
inc
out
clc
icebp
mov
lret
mul
mov
jne
sbb
lea
ret
dec
sbb
inc
ret
dec
cmp
insl
sbb
lcall
sahf
cwtl
sub
xchg
fdivrs
push
cli
dec
lret
xor
pop
pop
lock
xchg
iret
scas
data16
popa
lahf
mov
mov
ljmp
popa
sub
pop
push
or
cmp
test
jmp
adc
jbe
xor
call
mov
mov
xchg
inc
fldcw
call
call
lods
xor
lods
lods
push
dec
push
cs
sbb
out
push
push
stos
dec
fisttps
test
adc
inc
pop
int3
push
jbe
xchg
gs
cmp
and
xor
mov
sbb
aam
xchg
pusha
or
mov
inc
xchg
sub
xchg
js
popa
insb
and
fcomi
fsubl
mov
fcmovnu
inc
mov
sbb
push
test
sub
ficomps
das
xlat
mov
or
inc
mov
jne
jmp
fs
sbb
adc
outsl
and
das
or
mov
sub
jmp
jo
xlat
push
outsl
or
mov
fwait
movsb
mov
inc
sub
add
sub
mov
or
sarb
loope
test
jecxz
inc
aas
push
sti
xchg
add
insb
dec
decl
icebp
into
jne
cli
xchg
cmp
inc
popf
xor
loopne
xor
dec
subb
in
ficompl
and
inc
cltd
in
outsl
iret
jecxz
leave
enter
jae
shrb
dec
xchg
test
imul
out
sbb
pop
mov
stc
repnz
andb
cmpsb
arpl
sahf
gs
dec
mov
bound
jae
scas
pop
clc
mov
xlat
push
xchg
ret
movb
ljmp
ds
dec
pop
xor
mov
inc
cmpb
lea
fcmovnu
data16
movb
int3
shll
sub
mov
shll
mov
test
out
push
mov
imul
ss
mov
loopne
aam
xchg
mov
xchg
and
outsl
jnp
and
addb
mov
out
xchg
or
imul
sbb
inc
xchg
fistl
iret
or
sbb
add
adc
dec
gs
jl
imul
out
hlt
popa
decb
mov
pop
in
scas
rcl
jns
fdivrl
mov
mov
dec
push
cs
fs
pop
sbb
outsb
adc
dec
inc
inc
pushf
pop
inc
insl
xchg
and
push
jae
and
fnstenv
add
jp
jae
cmp
clc
pop
mov
mov
daa
push
dec
hlt
push
sbb
rcrl
mov
jl
loopne
popa
punpckhbw
sbb
inc
inc
fst
jb
add
out
rcrl
xchg
mov
mov
jmp
jg
lods
cmp
adc
mov
stos
sar
iret
pusha
xor
xor
orb
rcrl
int
sahf
mov
jbe
pop
push
sbb
shrl
cmp
push
adc
aas
bswap
shlb
adc
jg
loop
ja
aad
and
test
ds
test
jmp
imul
jnp
pusha
push
hlt
movsb
arpl
data16
pop
sti
stos
scas
xor
or
imul
push
inc
or
pop
stc
repnz
dec
cmc
arpl
arpl
ret
pushf
pop
xchg
imul
subb
aam
sub
imul
or
ljmp
xchg
ljmp
ret
mov
push
lret
ret
std
jmp
lods
hlt
div
xcrypt-ecb
cmpsl
mov
jne
xchg
int
repnz
jae
and
and
jno
ret
and
cmpl
nop
iret
movsl
mov
inc
jge
sbb
pushf
bound
xorb
out
sbb
cs
loopne
rcrb
push
mov
lods
pop
ds
rorb
mov
add
je
push
hlt
scas
mov
jnp
test
orl
or
mov
sbb
inc
neg
stos
iret
and
sbb
leave
cmc
jae
movsb
nop
push
stos
push
jmp
jle
dec
adc
cmp
inc
push
fldt
sbb
sub
repz
push
xchg
jl
xchg
pop
lcall
outsb
lock
mov
or
pop
and
and
fs
jp
mov
dec
mov
subl
outsb
into
xchg
rcr
cli
dec
lcall
fildl
mov
push
xor
xor
sti
inc
xchg
and
icebp
repz
mov
aas
mov
mov
mov
push
test
fiadds
sti
mov
sbb
jecxz
insl
aaa
hlt
mov
inc
outsl
mov
adc
jg
push
push
inc
sbb
ret
sub
in
and
mov
mov
add
xor
jbe
xor
adc
xchg
imul
jno
and
gs
and
xchg
sub
data16
cmp
daa
fsts
nop
shll
push
pop
fdivl
add
adc
lret
fs
loope
aaa
shrb
mov
jo
and
push
ret
push
dec
mov
mov
lcall
push
xchg
repnz
jge
sub
mov
ret
cmp
and
pop
shl
cmp
ds
xor
pop
lahf
inc
cli
shlb
and
add
inc
adc
mov
xchg
nop
dec
je
or
dec
cmpb
imul
pusha
lods
cli
sbb
adc
push
xchg
enter
sahf
scas
xor
pop
pop
repz
cmpsl
mov
fcmovnbe
mov
jecxz
mov
test
outsb
ja
jecxz
insl
mov
adc
sbb
and
jl
adc
pop
ret
or
fildl
jbe
pop
fnsave
jl
dec
pop
jae
mov
leave
push
mov
jno
lret
sbb
addr16
sbb
jbe
insb
mov
xor
es
push
cmpsl
repz
jge
push
or
or
rorl
in
and
std
fistpll
adc
cmp
sub
add
loope
mov
inc
cmp
leave
jp
push
mov
pushf
push
mov
lret
xlat
add
push
outsb
pop
xor
push
fucomip
outsl
dec
test
aam
adc
ds
js
push
outsl
adc
ret
dec
int3
mov
aas
mov
cmp
lods
fcmovnb
jns
paddw
push
xor
rep
mov
mov
push
je
push
mov
inc
in
movb
jnp
and
nop
into
in
jmp
xchg
jbe
jae
sbb
bound
sarl
fcompl
cwtl
push
sbb
mov
sti
mov
jnp
push
nop
addr16
mov
pushw
mov
xchg
mov
jl
movsl
inc
ds
sbb
nop
and
cmp
mov
xchg
mov
data16
icebp
lods
gs
or
sbb
jb
std
sub
push
insb
push
loop
fisttpl
jg
adc
add
push
push
sub
dec
inc
popa
mov
jg
jge
imul
sarb
sbb
sbb
jecxz
pop
cmp
adc
lret
lret
jg
sub
pop
repz
mov
or
dec
mov
sub
ja
and
stos
imul
imul
cltd
cmc
out
or
lds
jns
dec
lahf
test
hlt
or
setle
movsl
repz
shl
dec
jecxz
lods
xchg
and
push
cmp
xor
sub
cli
rcrl
xchg
repnz
sbb
stc
jae
mov
movb
jl
hlt
idivb
mov
aaa
in
sub
mov
out
lcall
dec
cmp
push
jb
fs
push
out
xchg
mov
jbe
rorb
pop
es
xchg
test
push
sbb
lcall
sbb
insl
lcall
stos
insb
in
jbe
cmp
dec
test
mov
push
dec
jp
push
sbb
xor
jbe
mov
dec
in
ds
xorl
mov
rclb
xchg
cmp
jl
rolb
pop
mov
add
std
pop
mov
jae
sti
add
jne
mov
lret
and
leave
sub
rorb
ljmp
add
std
jp
int
add
movsl
mov
adc
pop
cmp
iret
mov
dec
sbb
and
loope
xchg
aaa
dec
cmp
test
sbb
test
lods
xchg
int3
aad
push
je
mov
daa
iret
cmp
mov
mov
les
inc
sub
push
loopne
dec
jo
int
and
cs
push
mov
lret
js
xor
add
or
and
push
mov
fimull
rorl
daa
loop
addr16
push
xor
lret
jecxz
push
xchg
jb
or
rorb
scas
adcl
xor
adc
jle
inc
xchg
aad
mov
lahf
cwtl
inc
dec
sbb
test
dec
testb
enter
mov
pop
mov
mov
pop
and
xchg
lahf
cmp
dec
and
test
adc
cmpsl
push
arpl
je
fs
repz
jno
jge
sbb
movsl
movsl
push
sub
out
cld
lock
rolb
jno
adc
add
fidivs
jae
jnp
push
insb
mov
addr16
xorb
sub
mov
lods
jnp
or
xchg
push
xchg
mov
scas
mov
adc
and
loopne
sbb
sarb
jne
sbb
or
sbb
and
test
movsb
fcoml
sub
pushf
adc
in
jmp
add
cltd
adc
inc
sbb
pop
xor
popl
mov
ja
popf
jb
out
shlb
adc
inc
and
mulb
add
push
rorb
mov
inc
jo
mov
fmuls
cmp
lahf
test
inc
mov
fisubs
gs
pusha
cmc
dec
jp
addr16
xor
scas
ds
pop
arpl
dec
push
int
and
addb
les
cli
inc
jle
clc
nop
pop
jmp
lcall
es
fstl
dec
ret
lcall
mov
dec
pop
mov
ss
or
lret
mov
into
bound
sub
jecxz
xor
xchg
mov
out
iret
les
dec
inc
jmp
mov
mov
in
cmp
and
pop
repz
xchg
pop
sub
or
jnp
cmpl
data16
sbb
push
pop
fimuls
mov
push
test
adc
or
pusha
ja
in
xor
xor
pushf
aad
nop
xor
jg
negb
cmp
push
push
les
or
push
jno
mov
repnz
imul
xchg
pop
bound
jb
ljmp
iret
pop
xorb
add
push
dec
mov
xorb
loop
jg
lods
xor
sbb
jmp
inc
sub
int
lahf
xchg
add
sub
mov
xchg
cmpl
cwtl
lret
sub
xor
js
cwtl
adc
push
jne
xchg
movb
jno
cmp
adc
mov
cmc
aas
lods
pop
mov
pop
inc
dec
mov
imul
je
movsb
imul
mov
cs
bound
jl
fiaddl
adc
call
push
xchg
fistpl
stos
push
adc
mov
int3
lea
push
mov
xor
sub
hlt
xor
pop
sub
ret
imul
sbb
jns
mov
pop
rcrb
pop
cmp
cmpsl
jnp
push
shrl
aad
sub
adc
push
push
jb
popf
mov
sar
lcall
sub
insl
jo
pop
insl
and
loop
jp
hlt
cmp
test
push
pusha
pop
enter
jne
addr16
inc
pop
cli
inc
lods
push
cmpsl
mov
ret
adc
dec
xchg
and
shll
push
mov
cmp
pop
jle
add
notl
sti
test
dec
xchg
addr16
pop
push
fidivrs
push
sti
nop
nop
dec
test
xor
push
xor
sub
dec
dec
mov
push
fisttps
xorl
mov
mov
lret
and
jecxz
mov
jns
pop
lea
jge
sbb
test
mov
xor
pop
inc
or
jne
cwtl
dec
cmp
in
dec
pop
add
lret
mov
mov
addr16
loopne
mov
jbe
lea
dec
jp
xlat
sarl
sub
addl
adc
mov
and
xchg
in
pop
jle
sti
sti
fisubs
and
inc
mov
add
pop
imul
xor
or
sbb
movsb
cmpsl
cmpsb
dec
mov
lea
pushf
and
push
cltd
cmp
out
mov
ror
sbb
jecxz
aam
mov
pop
mov
gs
mov
pop
xchg
shll
pop
adc
daa
jno
inc
sti
and
out
add
sub
xlat
stc
int
cmp
outsb
jns
pop
xor
jae
popf
jno
mov
jae
mov
pop
push
xchg
out
xchg
cmpsl
imul
repnz
fstps
xchg
scas
cmp
outsb
mov
pusha
mov
lret
std
mov
data16
clc
mov
les
xchg
inc
rcrb
popa
pop
test
fisttps
or
push
jns
sbb
arpl
int
and
inc
and
loopne
inc
sbb
sbb
jle
imull
push
dec
xor
or
lahf
xor
testl
imul
xor
mov
ret
mull
or
or
ja
pop
stc
cli
push
xor
mov
xchg
sub
push
test
dec
push
sbb
pop
add
pop
add
int
lods
cmp
sbb
jo
mov
sub
loopne
aad
mov
hlt
pop
cs
mov
pop
pusha
mov
stos
inc
ds
lods
imul
jae
xchg
cmc
cli
push
sub
dec
push
mov
sbb
push
fistpll
jno
mov
loope
or
push
mov
sbb
mov
out
push
fdiv
pushf
shll
imul
xor
add
and
cwtl
idivb
stc
int3
push
jnp
adc
or
push
xchg
lea
add
sub
roll
push
nop
xor
rclb
push
or
jmp
cmc
fistpl
jmp
jmp
test
lea
push
testl
roll
je
push
jbe
inc
fcoml
movsb
and
popa
pop
push
ror
adc
jns
mov
sbb
rclb
or
sub
and
jge
daa
xchg
rcrl
mov
hlt
jecxz
lcall
sti
jns
testb
mov
ljmp
leave
lret
nop
sub
or
push
mov
mov
jns
cs
test
aaa
imul
ja
int3
fidivl
add
jl
xor
dec
dec
xor
inc
jle
inc
jp
in
xlat
sub
and
sub
sbb
fisttpll
gs
jo
cmp
xchg
or
fndisi(8087
mov
clc
sbb
cld
clc
add
pop
and
cmp
sbb
or
loop
jge
int3
mov
testb
and
popf
mov
hlt
and
loopne
mov
les
xchg
mov
push
sbb
mov
jge
xor
cmp
das
or
scas
jns
push
icebp
fsubr
pop
lea
inc
sbb
adc
xchg
clc
and
inc
sahf
pop
sbb
fcomps
pop
notl
pop
mov
xlat
pop
bound
test
jnp
lret
xor
jb
out
ret
sbb
pop
pop
enter
inc
mov
adc
xchg
pop
inc
lods
jle
jbe
loop
rorl
sahf
bound
es
dec
mov
ja
imul
mov
dec
pop
sbb
mov
jb
cmp
imulb
das
loop
loop
mov
out
stos
inc
sbb
loope
jle
mov
movb
pop
xchg
push
ficomps
sub
pop
pop
or
dec
aad
jbe
stos
pop
jb
movsl
into
jno
inc
inc
cs
call
ljmp
dec
sub
add
inc
mov
test
scas
lcall
cltd
in
mov
mov
add
cmpsl
incl
xchg
push
mov
aad
push
hlt
aaa
mov
loopne
sub
jns
aaa
add
xor
adc
adc
xchg
movups
addb
mov
inc
es
sbb
inc
cmp
lahf
adc
pop
adc
add
rclb
mov
ss
and
xchg
insl
int3
jo
push
dec
int3
andb
cwtl
addr16
or
and
inc
rcll
divb
pop
xchg
call
mov
stc
das
into
jge
loop
rol
xchg
mov
jmp
in
dec
push
sarl
push
into
outsb
adc
sbb
repnz
imul
sbb
mov
mov
pop
adc
scas
hlt
pop
aaa
add
mov
cmp
add
dec
push
outsl
lds
xchg
push
cltd
mov
jp
jg
mov
test
out
sub
mov
adc
pop
in
xchg
jge
inc
pushf
xor
pushl
xchg
iret
pop
xor
mov
sarl
xchg
nop
push
into
xor
xor
in
cltd
push
lock
in
inc
and
int
jae
push
leave
stos
lret
jecxz
xchg
xchg
xchg
or
mov
cli
xchg
mov
icebp
cmp
add
and
std
xor
fadds
xor
ljmp
fucomi
push
aaa
rolb
jae
sti
shr
loop
arpl
pop
int
icebp
fs
rcll
stos
cmp
lds
mov
xchg
sub
and
jge
fists
icebp
ret
jno
pop
mov
push
fdiv
push
in
leave
imul
xchg
shlb
in
shl
and
or
cmp
add
into
je
push
js
ljmp
mov
aaa
mov
jge
or
push
pop
sub
adc
or
icebp
or
jp
daa
jno
fsubs
std
jne
shlb
fstpt
sti
pcmpgtb
cwtl
xor
mov
repz
mov
jp
inc
fistpl
jae
sbb
adc
and
adc
mov
filds
popf
enter
pop
lcall
push
push
hlt
mov
iret
mov
dec
pop
jp
out
clc
addb
mov
fwait
inc
rol
xchg
stos
vmwrite
jne
dec
xor
xlat
add
mov
mov
ljmp
addr16
dec
cmp
adc
outsb
pushf
cmp
arpl
add
and
sahf
cwtl
hlt
sub
xchg
insl
and
adc
mov
js
sbb
sub
fwait
add
addb
xlat
shl
in
loop
cmp
mov
test
fmul
ljmp
push
push
jo
pop
movsb
adc
xchg
lcall
push
rep
mov
int
push
push
pop
ds
pop
dec
loop
jp
int
stc
aaa
mov
mov
arpl
loopne
push
xchg
iret
sbb
cmp
dec
pushf
jle
iret
cmp
pop
loope
sub
push
ret
sti
push
mov
push
sub
mov
fs
push
xchg
mov
jnp
sub
outsl
dec
inc
mov
push
outsb
sub
inc
push
insl
push
dec
lahf
jl
lret
mov
in
cli
movsl
and
loope
mov
jb
dec
push
scas
outsb
push
jle
xchg
iret
jae
dec
adc
in
xchg
mov
sub
mov
add
shlb
stos
ss
pop
popf
sbb
ja
ja
scas
mov
out
jl
and
push
iret
inc
idiv
gs
imul
dec
and
add
mov
in
lcall
fdivr
xor
ja
shrb
sub
jns
es
sub
xor
xchg
call
adc
lret
add
outsb
xchg
cmp
or
push
jecxz
aas
add
push
pop
sbb
loopne
dec
mov
cwtl
lock
les
jle
iret
xchg
dec
adc
cmc
rolb
xchg
in
xor
or
js
jns
sub
jb
xor
xlat
neg
in
cmpsl
adc
lods
cmp
mov
xor
pop
movsb
std
cli
jmp
push
dec
xor
fxam
jnp
aam
pop
mov
add
adc
arpl
or
jb
icebp
xor
inc
lea
adc
popf
stos
push
sub
pusha
cltd
lea
test
fstpt
xchg
fmull
mov
xchg
js
daa
dec
mov
aas
dec
int
dec
ret
or
testl
jge
fistpl
aad
mov
mov
xchg
sbbl
subb
sub
loopne
dec
xchg
sbb
inc
xchg
data16
popa
mov
nop
loop
jbe
pop
es
loope
fwait
insb
push
dec
cmp
xor
cmp
ljmp
or
hlt
inc
outsb
xor
mov
andl
mov
in
xchg
adcb
mov
inc
ljmp
jge
jae
int
pop
add
nop
pop
mov
push
je
mov
mov
inc
mov
js
jge
cmp
mov
sahf
push
cmp
ficoml
or
xchg
cmpsl
cmp
mov
popa
cmc
fwait
pop
jbe
aaa
cltd
cwtl
add
mov
fnstenv
ret
gs
sbb
xor
xchg
loopne
scas
mov
movsl
xchg
repnz
aaa
daa
mov
sbb
or
loop
adcl
pop
push
push
pop
repnz
push
mov
jge
orl
push
out
xchg
into
inc
dec
xchg
mov
out
sub
add
sti
dec
cmpsl
mov
jb
add
pop
and
dec
xor
or
lret
jno
out
das
jne
mov
into
divb
push
jns
adc
popf
mov
lock
fldt
lcall
imul
sbb
mov
adc
mov
out
call
jp
adc
pop
icebp
shrb
mov
mov
push
stos
repz
mov
testl
xchg
push
dec
enter
push
les
aam
les
popa
mov
xchg
repnz
adc
outsb
or
dec
push
rol
cmp
xor
mov
cltd
iret
jg
or
cmp
cmp
jo
mov
jb
sub
and
push
pusha
cltd
cmc
je
out
add
mov
jg
cmc
dec
cmp
arpl
ljmp
push
lret
fs
sbb
out
loope
aad
sbbb
sbb
cmc
rcll
sti
enter
pop
aaa
mov
cmpsl
xor
insb
aas
in
cs
cmp
sub
sti
stc
cs
pop
sbb
movsb
mov
sub
aad
push
sub
and
push
mov
loope
sti
dec
insb
jno
xor
xchg
shll
ss
xor
outsb
insb
mov
jno
push
andl
rcrl
out
pop
lea
push
rorb
ljmp
stc
and
inc
jbe
in
repnz
dec
cmp
ja
pop
jle
jnp
cmpl
jmp
inc
adc
pushf
mov
pop
daa
shr
test
push
rcr
int3
xchg
nop
dec
or
jbe
push
scas
pop
sahf
ret
jae
add
pop
push
cli
add
subb
ret
loopne
dec
aad
std
jb
mov
sbb
gs
ret
in
in
dec
mov
pop
sub
movsl
fs
jb
test
mov
push
sar
sbb
fbld
xchg
outsb
std
movl
loopne
sarl
pop
lds
push
jb
jmp
cmpsl
movsl
es
add
out
aas
rol
inc
in
in
inc
mov
movsl
jae
push
ja
arpl
hlt
out
mov
mov
adc
dec
aas
sub
pop
xchg
lock
sti
subl
clc
mov
insb
cmp
sbb
loope
push
pusha
popa
adcl
inc
dec
xchg
loopne
bound
mov
imul
xlat
idivl
lods
sbb
js
xchg
fs
mov
add
mov
inc
popl
push
shlb
sub
popa
int
hlt
sub
push
aas
std
jp
clc
mov
icebp
push
xor
mov
dec
add
mov
ss
mov
lret
cld
aam
popf
test
outsl
cmpsb
lock
cli
lahf
and
out
out
cmp
mov
mov
push
cmpsb
rolb
cmpsl
popf
xchg
ret
pop
cltd
adc
jge
mov
or
lods
sub
xor
jge
add
adc
mov
pop
rcll
outsl
jnp
push
out
sub
add
ret
inc
push
ret
loopne
jecxz
mov
xchg
dec
and
test
fnsave
and
xor
sub
mov
inc
lds
test
repnz
xor
test
lcall
das
ror
cmp
sbbb
inc
arpl
xchg
addr16
scas
xor
in
aaa
xchg
jmp
cwtl
cmpsl
stos
xchg
push
jns
mov
push
test
popa
aad
scas
out
rclb
and
inc
xchg
mov
pushf
add
mov
sub
scas
popa
fldcw
pop
mov
ret
data16
bound
std
fstpt
insb
mov
jp
leave
in
jae
mov
mov
stos
add
jno
sbbl
xchg
stos
jno
out
mov
mov
rorb
cltd
push
scas
sub
add
push
cmp
jne
int
ffreep
pop
mov
mov
jo
adc
clc
sbb
xchg
insb
jb
pop
dec
jo
jge
in
jge
mov
dec
sbb
stc
dec
cli
sub
mov
les
aad
ret
testl
cltd
fdivrs
rcrl
cmp
lret
lods
add
or
in
inc
icebp
pop
mov
decl
xor
sbb
pop
add
pop
jbe
xchg
test
push
fildl
xchg
inc
add
aas
mov
loop
inc
mov
int
aas
movsl
mul
xor
loopne
shll
ja
pusha
loope
mov
orl
mov
idivb
int3
repnz
mov
mov
stc
lods
adc
pop
dec
mov
xchg
adc
adc
cmpsb
fwait
in
mov
lret
jo
jne
loop
fiadds
inc
mov
repnz
inc
stos
repz
mov
jb
je
push
pushf
mov
mov
in
movl
cmpl
or
jle
arpl
cmp
outsb
out
scas
dec
adc
stc
push
pop
mov
in
lock
bnd
out
push
popa
pop
out
inc
aas
add
pop
mov
dec
pushf
pop
jns
sbb
data16
and
shrb
sahf
stos
ljmp
mov
and
jge,pt
data16
lds
xor
dec
imulb
sub
jmp
iret
loope
leave
adcb
call
xor
push
das
jno
test
pushf
pop
mov
sub
fdivr
add
dec
js
pop
or
rclb
push
movsl
test
mov
jno
push
push
pop
add
lods
xor
sub
in
sbb
push
shlb
xchg
add
