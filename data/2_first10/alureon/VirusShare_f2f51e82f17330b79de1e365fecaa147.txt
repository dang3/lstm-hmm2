mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
jmp
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
call
pop
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
add
lods
cmpsl
pop
in
cltd
es
pushf
dec
shr
jo
mov
dec
and
gs
dec
sub
psrlw
addb
js
sub
sub
or
insb
or
inc
int
movsl
shr
or
scas
dec
repz
mov
adc
xchg
mov
popa
repnz
loope
sbb
clc
or
lcall
clc
or
push
data16
nop
daa
mov
xor
cmp
xchg
jae
int
xor
sbb
gs
mov
mov
add
icebp
arpl
xchg
out
dec
into
jae
mov
sub
enter
xor
repnz
jnp
jno
clts
sub
mov
jns
lods
sub
outsb
mov
fisubl
pop
jnp
pop
out
out
and
mov
add
insl
cmp
in
in
xor
push
aad
cmp
call
fs
mov
xchg
les
mov
stc
pop
dec
mov
stos
and
addb
lds
test
cmp
dec
jle
jb
jmp
xchg
std
jnp
inc
inc
aas
fsubrl
popa
or
loope
rcrl
scas
push
inc
and
clc
xor
pusha
push
sbb
add
outsl
testl
inc
mov
subl
hlt
out
mov
sub
loopne
nop
sbb
adc
outsb
lods
push
lea
scas
repz
pop
sti
jge
sbb
fwait
and
out
add
sarl
and
inc
cld
pop
cltd
adc
lds
in
popa
push
and
xchg
or
bound
adc
and
test
jnp
and
fst
test
dec
xchg
cli
sub
xchg
loop
out
outsb
sti
daa
mov
addb
not
enter
push
aam
outsb
adc
cwtl
pop
ret
pop
outsb
loopne
add
fcoms
push
xor
inc
or
out
lahf
test
mov
and
mov
stos
sub
adc
sar
jns
fcmovu
inc
daa
add
pop
test
mov
xchg
dec
arpl
cld
or
mov
stos
sub
cmp
hlt
dec
and
jnp
pop
outsl
fisttps
in
mov
sbb
mov
loop
pop
adc
stc
sbb
in
movb
lods
mov
sbb
sbb
add
fimuls
rol
xlat
movb
mov
xchg
jnp
and
lahf
xor
pop
js
faddl
sarl
dec
xchg
fldt
xchg
test
cmp
movb
xchg
mov
popa
popa
push
aad
sub
scas
jle
dec
push
mov
mov
std
xor
mov
pop
out
lock
sub
lods
or
sti
shlb
ss
inc
imul
adc
jbe
inc
ret
mov
push
aaa
cmp
sub
xor
adc
into
xchg
test
sub
test
out
sub
sub
add
cmc
testb
inc
or
mov
testb
fldl
cmp
jl
mov
mov
push
testb
add
add
out
mov
adc
in
or
pop
mov
mov
insb
add
call
dec
push
dec
pop
loopne
inc
mov
xor
faddl
fcmovnu
xchg
imul
xor
jmp
and
cld
mov
loopne
add
mov
push
lea
xor
and
push
icebp
push
iret
insl
shr
test
in
dec
fnstenv
pop
cmp
cmp
push
mov
popa
adc
das
int3
inc
cmp
hlt
xchg
dec
lea
mov
jle
push
inc
mov
nopl
mov
in
sarb
lock
lret
mov
push
and
mov
xor
add
inc
pop
dec
jns
and
je
cmpsb
std
jmp
lods
sub
inc
mov
lahf
dec
out
mov
push
das
pop
xchg
or
mov
pop
xchg
xchg
fmul
cmpsl
shlb
xchg
repnz
dec
mov
inc
jne
add
push
adc
lahf
mov
xchg
int
mov
pop
aam
pop
xlat
or
sub
rcrl
or
pop
pop
jb
and
or
je
das
push
andl
inc
rcl
pop
imul
out
inc
imul
int
pop
jb
push
fnstsw
mov
push
sub
xchg
iret
mov
add
fmull
jg
mov
cld
dec
xor
xchg
fnstcw
loop
push
fisttpll
dec
gs
inc
add
les
imull
pusha
xor
arpl
add
add
in
mov
sub
push
mov
and
outsb
or
and
push
sub
and
sbb
insb
jmp
xchg
jo
xor
add
add
aad
mov
inc
jl
sarb
ss
mov
out
adc
rcrb
or
das
xchg
loope
out
ljmp
adc
hlt
dec
in
xchg
pusha
fsubrp
repnz
lret
cmp
cs
cli
or
inc
xor
xchg
mov
sub
sub
and
add
pop
pop
adc
add
push
jle
stc
xor
add
push
cmp
lcall
xor
inc
flds
idivb
in
faddp
mov
dec
adc
call
cmp
cmp
dec
mov
adc
push
fimuls
cmpsl
aam
mov
push
push
xchg
in
int
cli
sub
lock
push
in
push
adc
xchg
incl
in
mov
cmc
shr
pop
xor
pop
lahf
cmc
stos
mov
jae
push
mov
fwait
jae
push
add
stos
leave
sti
push
dec
mov
pop
das
adc
jl
push
test
xchg
sub
call
sub
jnp
outsl
jl
test
and
ja
adcb
or
xor
pop
scas
leave
xor
pop
mov
add
lea
jne
out
aas
mov
mov
scas
xlat
leave
dec
mov
sbb
push
xor
lcall
iret
dec
test
cmp
pusha
repz
outsb
aam
sarb
nop
stc
lahf
push
in
kmovw
out
xchg
je
lods
lods
mov
lods
fnstsw
dec
and
jmp
or
pop
stos
mov
jg
out
ret
lret
pop
xchg
add
xchg
dec
inc
ds
mov
scas
orl
push
or
outsb
and
pop
jp
sub
out
test
sub
jmp
les
lcall
inc
stos
in
ds
mov
sbb
gs
adc
std
dec
js
inc
movsb
dec
das
nop
sbb
add
push
and
xchg
cmp
cmp
sbbl
xchg
lds
popf
inc
cmp
repz
sub
fnstcw
mov
orl
sub
sahf
inc
mov
in
cmpsb
mov
mov
jbe
mov
data16
je
and
mov
mov
daa
and
popa
int3
or
inc
or
add
dec
dec
jne
test
jne
paddusw
jle
jl
xor
jo
pusha
inc
pop
add
rolb
bound
movsl
hlt
pop
ret
pop
push
push
xor
xor
xor
adc
insb
test
gs
push
and
pop
cmp
cmpb
push
mov
mov
mov
pop
test
cmc
sub
mov
xchg
xor
loopne
and
jle
sub
and
out
sbb
jo
xor
out
push
sbb
rcr
and
inc
jle
test
cmc
dec
jmp
data16
das
ret
shll
push
pop
out
xlat
lea
repz
mov
lret
mull
and
mov
fs
cmp
addr16
xor
test
jg
xchg
mov
stos
adc
adc
fcos
in
arpl
fcompl
idivl
clc
fcoml
jns
mov
mov
lods
icebp
out
cmp
cmp
or
push
loope
insl
dec
cmp
clc
and
std
add
push
cmp
or
mov
mov
insl
cli
dec
mov
inc
push
xchg
sub
and
mov
outsl
cli
sbb
pop
sub
inc
jge
out
xchg
test
std
push
loop
cmp
rorl
jb
dec
fldcw
lds
cmp
rcrb
leave
imul
add
xorl
cmc
sub
divl
jl
xchg
push
fldcw
into
and
xchg
xor
sbb
dec
mov
cwtl
add
jmp
xchg
inc
dec
cmc
pop
cmp
into
ss
mov
pop
cmpb
add
sub
stos
pop
pop
int
in
add
adc
sbb
sahf
mov
xchg
fdivrs
imul
xor
out
sbb
cmp
jge
arpl
jae
jae
and
call
push
push
es
das
fnsave
in
rorl
rcrl
imul
cmp
loop
mov
and
lret
popa
push
je
mov
add
push
sbb
imul
pop
adc
out
in
mov
inc
mov
pop
pop
or
ds
rcrb
mov
jge
cmp
ret
rclb
andnps
cld
lahf
push
cmp
add
add
pusha
fucomi
into
push
cmp
ret
cmp
cmp
notl
adc
scas
mov
insb
adcb
cmpsl
mov
and
cmpsb
adc
mov
js
bnd
pushf
dec
ror
push
dec
sarl
sub
test
pop
cmp
mov
testl
repnz
lret
cmc
pop
cs
cmp
movsb
xchg
add
add
pop
jnp
mov
fwait
cmc
xor
shrl
and
lods
push
int
into
sbb
cli
adc
ljmp
mov
in
gs
das
insb
pusha
mov
dec
lret
enter
mov
out
dec
das
out
jl
dec
mov
cli
leave
jne
js
in
pop
sbb
inc
std
aad
push
clc
orb
xor
sub
cmpsl
pop
add
sub
sbb
popf
push
push
mov
out
cmp
mov
in
comiss
cld
pop
fisubrl
int
xor
jnp
loop
addr16
jl
lcall
pusha
adc
lds
ja
mov
lcall
or
testb
push
mov
lods
add
cmp
jae
cmp
popa
std
sar
mov
mov
jae
fs
xchg
jge
add
push
dec
mov
pop
cmp
add
cld
mov
fndisi(8087
or
add
jle
rolb
into
repz
cltd
ja
mov
fcmovnu
xchg
pop
mov
cs
out
sub
fisttpl
clc
aam
jne
sub
scas
add
adc
sarb
int
mov
lods
out
xlat
aam
dec
pop
cmp
adc
sub
cmp
jl
test
xchg
push
jmp
xor
pop
jl
or
sub
inc
lods
bound
sub
adc
adc
pop
int3
js
jbe
mov
cmc
and
lock
jns
hlt
ds
and
cmpsl
sbb
dec
scas
inc
ss
fcompl
inc
cmpsl
cmp
outsl
add
lds
xlat
out
into
cmpsb
test
mov
ficoms
orl
xchg
adc
out
inc
jp
jmp
fwait
icebp
add
add
inc
cmp
ja
inc
dec
popf
das
icebp
stc
rcrb
ffreep
scas
loopne
mov
push
jno
mov
and
pop
cmpsl
imul
jb
cmp
aas
out
push
jne
and
inc
xchg
outsb
mov
sub
cs
xor
xor
shrl
pop
inc
in
lds
xor
mov
dec
inc
lock
mov
or
pop
jbe
adcl
xor
int
nop
pop
mov
fcmovb
sbb
xor
mov
dec
jbe
lahf
std
xor
sarb
push
imul
and
jge
adc
xchg
xchg
xor
outsb
adc
aam
idivb
dec
mov
fisttps
negl
cmpsl
cwtl
out
insl
xchg
mov
out
test
jne
fcomip
jmp
mov
push
sbb
add
push
negl
lods
cld
clc
lea
sub
mov
adc
pop
out
adc
sbb
mov
push
pop
rep
int3
inc
jb
aam
icebp
rclb
push
aad
pusha
mov
mov
nop
or
add
into
loopne
add
xor
cli
or
pop
pop
mov
test
sub
xchg
test
out
stc
lds
sbbb
popa
pop
jp
and
xchg
and
add
push
dec
ds
push
jo
or
xchg
cmp
inc
sbb
mov
into
fdivp
scas
in
aas
push
push
imul
mov
mov
mov
jge
sub
pop
dec
jle
pushf
pop
stc
sbb
jae
jmp
pop
xchg
lret
mov
push
jp
enter
rcl
out
or
ljmp
fstpl
in
sbb
or
jnp
xchg
mov
test
fmuls
stos
and
mov
add
rcrb
addr16
outsl
cmpsb
or
dec
fmuls
in
orl
xchg
xor
ret
pop
jge
push
stos
xchg
shlb
rorl
cmc
rcrb
scas
in
imul
add
pop
or
cmp
leave
mov
sbb
cli
stos
int3
xor
loop
or
les
cmp
and
push
addr16
mov
out
cli
pop
push
sub
jl
decb
push
mov
pop
push
jge
add
push
or
das
inc
inc
lods
cmp
and
scas
inc
cltd
mov
cmp
pop
negb
adc
xchg
and
pop
icebp
cmpsl
dec
cmc
std
jb
outsb
cmpsl
jno
cltd
cmp
jge
lods
sub
pop
js
cmp
jle
sub
push
es
or
jns
sahf
iret
and
mov
xlat
mov
cltd
jl
call
out
mov
cmp
xchg
sub
inc
repz
fcoml
or
adc
divl
and
sbb
xchg
jb
js
into
lock
xor
sbb
insl
cs
push
xchg
scas
dec
cs
push
sub
inc
dec
dec
loop
clc
cltd
mov
int
mov
hlt
pop
pop
add
xlat
test
xor
add
lahf
mov
sub
pop
mov
arpl
out
aas
cwtl
xchg
movsl
pop
push
jle
jmp
mov
push
gs
adc
jbe
incb
add
add
pushf
push
lea
sbb
icebp
cmp
nop
pop
inc
hlt
pop
jmp
out
outsl
sti
cli
int
mov
adc
push
scas
out
mov
sub
jno
inc
mov
into
addr16
xor
and
xor
rolb
rcll
xchg
int3
pop
bound
pushf
lock
cmpsl
inc
xor
and
mov
sbb
xchg
out
adc
mov
push
lods
add
push
jbe
sar
loopne
sbb
add
add
adcb
insl
ljmp
inc
and
fstpl
lds
jg
sub
dec
sub
pop
dec
int
sbb
cld
mov
es
clc
sub
cmp
ja
ret
aas
jg
jp
pop
or
inc
mov
sarl
sub
sub
push
pop
ljmp
add
dec
cmpsb
mov
inc
movsb
cmpsl
adc
stos
mov
out
pop
sahf
sbb
add
out
fbstp
mov
clc
jo
cli
xlat
cltd
loope
xor
std
outsl
inc
push
xor
in
mov
sub
rcr
dec
pop
jle
addl
lcall
push
rcll
out
xchg
mov
sub
sub
xlat
pop
jg
adc
jno
pusha
ja
into
and
jge
mov
cmp
add
push
pop
out
dec
or
inc
cli
into
pushf
fwait
sbb
lcall
cmp
inc
pushf
aas
out
das
mov
pushf
fstpt
arpl
pop
push
mov
sbb
mov
mov
and
dec
les
testl
xchg
add
inc
xchg
dec
mov
int3
testl
xor
mov
pop
inc
mov
daa
call
fildll
add
cmp
sbb
rolb
add
xor
push
push
insl
jns
mov
sar
loopne
cwtl
bound
enter
sbb
es
cmp
mov
pushf
rcr
mov
lods
out
fildl
add
cwtl
jae
js
adc
lods
and
lret
das
js
imul
adc
fsubs
lret
popl
sbb
int3
lds
lcall
jno
repnz
pop
lea
add
scas
ficomps
sbb
mov
jne
lods
dec
roll
nop
arpl
jge
cmc
lock
adc
cltd
cmpsb
sbb
rep
ds
insb
push
mov
test
imul
pop
cmp
lcall
xor
lret
lret
nop
jmp
cwtl
dec
lds
and
push
leave
push
push
inc
popa
loope
stos
mov
icebp
loope
xor
cmpsb
lods
cmp
inc
nop
add
scas
dec
cltd
push
pop
stos
pop
int3
adc
push
sub
push
lock
add
int
inc
sahf
cmp
fwait
rcrl
fcoml
cwtl
std
mov
ljmp
adc
adc
aad
stos
aaa
lcall
ret
xchg
dec
lods
cmpl
or
sub
add
sub
int
je
push
mov
call
aas
fs
cwtl
sarl
mov
test
cwtl
sub
rolb
jb
jg
cmp
push
test
out
ja
aad
inc
stc
rorl
jl
dec
add
mov
mov
andl
lcall
mov
pop
into
ficoml
dec
jbe
rcr
insl
pop
add
icebp
mov
in
cs
adc
adc
or
cld
jbe
push
ds
mov
inc
lcall
add
arpl
fdivp
imul
fdivrs
pop
loopne
fistpl
in
shll
xor
lds
lcall
cwtl
jge
lret
jge
out
pop
dec
lret
stos
or
cmp
jo
jno
shr
mov
pop
pop
je
xchg
sub
fistpl
dec
jo
mov
mov
sbb
add
jp
shll
std
xchg
mov
outsl
jle
cwtl
mov
add
xchg
sbb
cltd
cmp
or
fmul
push
ficomps
test
into
or
cltd
clc
mov
mov
cmp
sbb
push
pop
pop
ljmp
jmp
aam
hlt
sbb
cmp
xchg
arpl
inc
shll
aaa
sbb
adc
adc
add
data16
cld
cmp
aaa
lcall
in
out
xor
mov
jnp
shrl
inc
jmp
int3
rcrl
movsb
sub
shr
sub
ljmp
xlat
shlb
daa
xchg
mov
sub
rcll
ljmp
sub
sbb
cmpb
lock
scas
add
add
imul
adc
movsb
mov
dec
or
add
mov
mov
add
out
pop
lds
aas
jno
loop
ret
popa
mov
cs
inc
adc
pop
sbb
mov
add
jle
jae
add
adc
add
jns
push
xchg
adc
adc
xor
cmpsl
dec
cltd
xchg
cwtl
mov
inc
mov
stos
dec
cmp
cmp
dec
pop
dec
es
bound
mov
xor
jae
movsl
add
mov
push
add
add
and
int3
xor
stos
add
ret
push
push
adc
dec
and
and
dec
fsubl
pop
mov
lea
jns
divb
daa
pop
ret
movsl
push
jl
lds
xor
fcmovb
sarb
imul
sbb
mov
hlt
pop
ss
or
push
cwtl
mov
out
js
movsb
jmp
daa
sub
ret
lock
inc
jb
mov
out
add
add
cmpsl
pushf
mov
adc
cmpsl
aam
mov
ds
push
jne
push
jp
fdivrs
test
loope
data16
adc
adc
xchg
and
xor
lods
sti
jl
inc
mov
push
sbb
lahf
out
mov
popf
sub
and
add
dec
lret
ja
clc
sub
shll
in
ss
sbb
or
pop
lret
jns
pop
xchg
add
cmp
pushf
sub
jg
std
stos
mov
xchg
and
aam
mov
inc
and
mov
sarl
jle
mov
pop
insb
adc
cmp
ret
or
sbb
in
in
mov
cmpsb
inc
paddw
inc
and
mov
outsl
adc
fiaddl
cmp
loop
cmp
fdivs
ret
adc
not
cmp
les
divl
lret
add
add
mov
inc
jbe
adc
push
mov
and
cli
ret
rolb
sbb
sub
pop
cmc
xchg
sahf
mov
mov
pop
mov
shll
sbb
pop
fldt
mov
leave
pushf
arpl
xor
adc
sbb
lea
int
pop
ljmp
pop
lret
aaa
ret
and
xchg
imul
jns
outsb
dec
incb
mov
inc
clc
push
in
les
sarb
push
fists
divl
dec
enter
pushf
ljmp
cmpsb
sub
fildll
cmp
push
in
int3
jne
cld
stos
add
out
dec
mov
loop
insl
shrb
fucomp
xchg
inc
push
pop
sub
loopne
rcl
adc
fndisi(8087
inc
dec
pop
out
xor
cli
sub
inc
testb
mov
popf
mov
sti
dec
xchg
add
add
imul
dec
mov
mov
cli
call
ret
int
pushf
push
repnz
insb
leave
cld
xor
lods
xchg
jle
popf
repz
pop
lock
pop
addr16
push
fsubs
mov
mov
adc
xchg
adc
outsl
and
pop
in
or
adc
xor
push
imul
mov
lock
cli
mov
or
sbb
loop
je
sub
repnz
mov
xor
dec
mov
aad
lods
xchg
arpl
mov
sub
inc
jmp
loop
jl
out
pop
dec
pushl
lcall
leave
insb
dec
sbbl
stos
dec
mov
into
push
aam
gs
jle
into
push
sub
mov
or
out
mov
pop
shlb
repnz
movb
mov
lret
jnp
push
fidivl
xchg
pop
xor
add
add
loop
xchg
shlb
ret
es
or
or
int3
and
mov
mov
mov
mov
test
jo
push
sbbb
mov
xor
popa
negl
mov
mov
sub
loope
jbe
add
cltd
xchg
pop
cwtl
imul
pop
jp
ja
cmp
jl
mov
add
inc
or
sub
adc
pop
out
and
adc
mov
lods
dec
inc
xor
and
sbb
xchg
and
mov
in
out
cmp
popf
xchg
leave
xorb
mov
sub
push
ja
lret
or
iret
repnz
jle
and
test
xor
imull
movb
imul
add
bound
repz
lds
scas
sbb
in
sbb
pushf
cld
pop
cwtl
cmp
push
pushf
cmpsl
leave
stos
pop
lock
cmpsl
mov
sbb
divl
das
xlat
or
adc
sbb
les
xchg
sub
mov
lods
fldenv
dec
add
cs
pop
lods
clc
pop
xchg
fucomi
add
xchg
aas
pop
mov
arpl
add
cs
or
xchg
add
dec
jae
xor
aaa
clc
xchg
cmpsl
jle
pusha
das
push
dec
jae
stos
test
adc
aad
pusha
filds
movsb
pop
scas
mov
inc
xchg
mov
ror
in
insb
sbb
js
inc
jbe
aam
cmpsl
jb
adcb
imull
test
daa
mov
ds
push
fsts
mov
shll
mov
xchg
popa
cmpl
pop
sub
inc
arpl
jae
mov
lods
cmc
cmpsl
ror
fstpt
mov
mov
jne
out
pop
rorl
push
mov
insl
notl
mov
xlat
pop
adc
dec
inc
ret
or
out
call
iret
xor
enter
out
into
mov
mov
mov
enter
sti
daa
das
cwtl
shrb
add
cmp
mov
aas
mov
insl
add
sub
sbb
notb
xor
fdivs
dec
pop
pushf
scas
cwtl
out
pop
mov
and
enter
jno
and
mov
inc
sbb
aad
sbb
out
and
jo
dec
add
sbb
test
and
icebp
sahf
out
xor
or
push
and
mov
aas
add
cmp
cmp
jno
cmc
pop
clc
and
cld
or
and
stos
fs
outsb
dec
adc
cltd
mov
sti
cmp
xor
push
push
and
dec
ficomps
mov
outsl
push
xchg
jl
jp
jle
push
fs
imul
cli
out
adc
nop
adc
sbb
mov
mov
lret
loop
add
sbb
mov
or
mov
add
add
lods
in
and
rolb
rolb
dec
push
mov
push
mov
mov
les
cmc
data16
cld
test
loop
mov
mov
sub
sbb
arpl
jecxz
test
scas
pop
jl
mov
adc
sbbl
cli
dec
popf
adc
sub
xchg
loop
data16
dec
add
ja
out
das
ret
lahf
les
icebp
push
add
rcrb
mov
cmp
mov
lea
fsubl
fldl
pop
adcl
stc
adc
cmp
push
inc
jmp
jo
insb
cltd
subb
mov
out
les
adc
jo
xor
scas
pop
cmp
loop
push
fwait
into
sbb
lahf
add
inc
cmp
and
into
jge
pop
int3
scas
pop
outsb
pop
adc
xchg
rcrl
mov
dec
push
int3
push
pop
daa
pop
pop
mov
inc
mov
add
add
mov
flds
insl
jnp
sbb
and
mov
popa
xor
jbe
jb
cmp
insl
outsb
cmp
inc
pop
sub
jbe
sub
jnp
enter
dec
icebp
mov
mov
lcall
dec
mov
cmpsb
das
scas
lea
add
les
or
fbstp
push
xchg
fldl
movsl
outsl
jmp
cmovne
fcomp
cmp
pop
jno
jno
sub
cmpsl
fmul
push
adc
xor
and
mov
shr
fadds
call
add
xchg
sub
push
jge
mov
pop
or
or
mov
push
push
repnz
mov
scas
shll
fwait
cmp
fldcw
push
jne
dec
mov
outsb
xor
aaa
push
iret
jno
sbb
add
add
rorl
rol
add
or
xlat
pusha
jmp
aam
xlat
push
cmp
int
xchg
scas
inc
fbld
jecxz
mov
das
imul
fdivrs
inc
cmpsl
mov
xchg
fldpi
fimull
pop
mov
mov
popa
dec
fldl
leave
jmp
or
in
sbb
scas
movsl
loopne
imul
lea
fldt
add
dec
aad
add
sub
fidivrs
bound
out
in
add
jecxz
add
fucom
imul
sub
adc
out
cmp
aaa
mov
push
gs
push
push
outsb
push
repz
sub
fnsave
mov
sahf
mov
dec
add
sti
add
xchg
add
test
push
add
aaa
jp
dec
ds
es
cmp
xchg
cmp
cmp
popf
insl
xor
gs
into
and
add
add
jb
or
mov
cmp
scas
daa
push
push
mov
sahf
xor
imul
in
mov
and
fwait
sbb
jmp
and
lret
int3
js
pop
test
dec
sbb
aaa
test
comiss
outsb
pop
popa
js
aaa
fisttps
imul
xchg
xchg
adc
cmp
cmp
mov
add
add
aad
inc
xchg
mov
iret
hlt
mov
nop
or
mov
sahf
push
xor
ja
adc
imul
cs
mov
mov
jmp
sub
lods
jle
mov
push
fwait
repz
cmpsl
jmp
jle
dec
fsts
mov
faddp
out
iret
scas
xchg
cmp
and
sub
fmul
ja
inc
xor
nop
loopne
out
add
inc
mov
push
add
mov
xchg
nop
and
leave
not
insl
inc
mov
hlt
cs
adc
and
jge
movb
in
cli
mov
cld
test
mov
inc
and
and
js
ljmp
and
lea
xchg
and
lods
rclb
push
mov
lods
std
mov
add
add
xchg
gs
mov
dec
out
bound
or
xchg
lea
