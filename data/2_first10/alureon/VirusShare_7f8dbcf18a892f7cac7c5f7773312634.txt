sbb
not
mov
mov
mov
not
mov
xchg
mov
xchg
neg
jmp
rol
not
xor
neg
lea
push
push
push
push
push
push
push
call
jmp
push
mov
add
pusha
call
push
jmp
mov
mov
rcr
call
rcr
mov
xor
lea
xchg
mov
jmp
xor
not
rcr
xor
not
sbb
not
rcr
xor
xchg
lea
jmp
mov
lea
xor
ror
adc
popl
mov
sbb
add
lea
not
not
jmp
call
mov
xor
and
xor
xor
sub
mov
neg
not
sub
jmp
xor
movl
neg
cmp
mov
neg
xchg
movl
rol
shr
xor
and
lea
lea
mov
jmp
adc
mov
mov
ret
rcl
mov
lea
neg
shr
push
lea
push
push
lea
push
pushl
call
mov
jmp
lea
neg
xor
adc
xchg
and
not
xchg
jmp
mov
shr
push
rol
mov
mov
lea
mov
jmp
mov
xor
lea
mov
sub
push
xchg
mov
rcl
lea
push
push
call
jmp
xor
mov
sub
shl
lea
xor
xor
xor
mov
rol
mov
jmp
shr
dec
jne
mov
xor
shl
ror
xor
rcl
popa
leave
call
jmp
lea
xor
rol
lea
mov
lea
mov
mov
mov
jmp
lea
neg
popl
mov
mov
not
mov
lea
mov
lea
xchg
not
shl
jmp
mov
pop
mov
lea
lea
xor
jmp
mov
rcl
push
lea
push
push
lea
push
pushl
call
mov
jmp
mov
sbb
neg
mov
mov
jmp
lea
mov
push
call
neg
xor
mov
sbb
lea
lea
jmp
sub
sub
rcl
xor
movl
lea
mov
neg
rcl
movl
xor
not
cmp
lea
jmp
mov
lea
lea
push
push
push
push
call
push
jmp
and
not
lea
mov
not
jmp
mov
movl
mov
lea
xor
ret
rol
rcl
shl
rol
lea
sub
lea
or
not
neg
xor
jmp
xor
xor
ret
push
push
lea
push
lea
push
call
jmp
rcl
xor
shl
mov
xor
mov
mov
mov
not
mov
mov
jmp
mov
or
xor
mov
lea
not
rol
ror
xor
push
xor
lea
neg
xchg
xor
jmp
xor
lea
not
neg
not
inc
jne
rol
jmp
mov
lea
mov
lea
mov
or
cmp
add
lea
xchg
xor
xor
mov
lea
xor
jmp
xchg
ror
mov
xor
mov
not
mov
lea
neg
mov
jmp
mov
mov
xor
xor
mov
mov
shl
xor
jmp
or
neg
mov
xor
ror
jmp
adc
fiaddl
faddl
inc
test
enter
mov
push
stos
into
lcall
int
les
mov
inc
and
xchg
int
out
mov
flds
leave
out
sub
mov
inc
cmp
iret
ljmp
inc
sti
inc
aaa
lds
mov
inc
scas
int3
push
adc
inc
mov
ficoms
dec
inc
test
inc
scas
stos
jbe
enter
lods
cs
inc
and
ja
out
mov
flds
cmp
mov
cmpsb
lods
lret
mov
pop
cmp
mov
sarl
add
pop
and
inc
fwait
lods
orps
mov
cmpsb
mov
iret
fildl
popa
fadds
mov
add
sbb
pushf
xor
xor
jmp
scas
test
push
ret
insb
inc
outsl
sub
inc
jmp
push
inc
lods
rsqrtps
mov
mov
adc
and
mov
stos
call
sbb
and
lods
push
add
xor
xor
mov
scas
scas
int3
fildl
loopne
enter
sbb
out
int3
fadd
std
rcrl
sub
movsb
int3
and
push
cmpsb
fldt
in
adc
mov
and
cmc
cli
push
scas
inc
push
or
inc
mov
xchg
int
fisttpll
pop
out
int3
push
mov
and
pop
out
int3
mov
test
push
xor
sbb
mov
cmpsb
mov
out
int3
push
int
rcrl
vpsrlq
int
xor
scas
lods
std
fsubr
dec
aaa
push
add
pop
or
jmp
mov
js
cwtl
imul
jae
pop
mov
sub
pop
and
sub
add
stos
mov
dec
int3
sarl
leave
inc
and
pop
add
out
lret
ret
stc
int
jbe
not
fcompl
xor
stos
inc
in
lret
repnz
lds
sarl
loopne
or
je
mov
sbb
mov
decl
cmp
je
add
repnz
cltd
lods
sahf
dec
hlt
roll
testl
push
sbb
or
add
or
test
out
dec
lea
out
jle
fisttps
push
pop
inc
orb
gs
inc
mov
xchg
mov
je
dec
sub
inc
xor
cld
add
push
add
sbbb
lret
add
jbe
cld
ret
scas
jmp
or
clc
sbb
mov
call
or
jo
jecxz
std
jmp
add
adc
inc
and
aas
lret
add
mov
fildl
popa
mov
repz
add
xchg
pop
insb
xor
pushl
sbb
jmp
inc
xor
incl
xor
fdivl
fsubl
add
aas
jb
pop
shrb
sub
sub
pop
and
.byte
