push
mov
sub
push
push
mov
push
test
jne
push
mov
call
push
lea
push
xor
inc
push
mov
push
mov
mov
call
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
cmp
je
xor
jmp
push
push
push
push
mov
call
mov
mov
mov
mov
push
sub
mov
call
push
call
lea
push
push
push
pushl
call
push
pop
mov
mov
mov
push
mov
mov
xor
push
lea
push
push
mov
call
cmp
je
cmp
jne
mov
call
cmp
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
push
mov
call
pop
push
mov
call
push
lea
push
push
pushl
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
add
push
lea
push
call
mov
xor
push
push
push
push
push
mov
call
call
cmp
je
in
push
push
jmp
pushl
pushl
pushl
pushl
mov
call
pop
pop
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
add
push
lea
push
mov
call
add
mov
mov
mov
mov
push
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
decl
mov
jne
addl
pop
pop
leave
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
push
xor
push
mov
call
xor
push
mov
call
inc
pop
cmp
jb
mov
mov
call
dec
jne
push
mov
call
mov
cmp
jne
push
pushl
push
mov
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
xor
call
push
mov
jmp
push
push
push
push
push
mov
call
test
je
push
mov
call
pop
xor
pop
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
add
mov
mov
not
mov
add
not
shl
imul
add
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
push
mov
add
mov
push
xor
mov
cmp
je
add
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
pushl
push
mov
call
test
je
mov
add
jmp
cmp
je
inc
mov
test
jne
jmp
mov
lea
mov
mov
add
cmpl
jne
pop
pop
leave
ret
dec
ja
pop
push
adc
add
add
add
add
loop
jle
inc
dec
sahf
insb
pop
mov
stos
xchg
lret
or
cmpsb
cmpsb
jmp
pop
das
fiadds
add
inc
je
or
ficompl
sti
jne
xchg
push
addl
arpl
in
and
or
push
xor
jl
cli
xchg
mov
iret
inc
cmp
les
dec
aad
inc
sub
lcall
cmp
aam
out
cmp
in
cmp
pop
out
pushf
xor
or
inc
call
cmpsb
mov
fcom
mov
adc
pop
out
mov
pop
out
xchg
mov
or
and
out
std
loope
pop
int
in
add
jno
mov
int3
aaa
sub
into
data16
pop
lret
push
test
sbb
dec
mov
pop
repnz
inc
ficompl
dec
cmp
xor
inc
xchg
sbb
fadd
push
dec
xchg
insl
lret
xchg
mov
inc
arpl
popf
repz
hlt
xlat
and
in
mov
mov
push
inc
outsl
xor
dec
out
out
cs
in
mov
push
mov
cmpsb
orl
jg
das
cmp
aad
push
repnz
ficomps
dec
xor
leave
or
testb
dec
into
jmp
or
nop
jns
sbb
ja
cmp
mov
test
clc
sahf
sub
jp
pop
movl
jno
std
inc
jg
loopne
mov
clc
dec
bound
push
mov
fnstsw
movsl
push
pop
inc
cmp
xchg
les
lds
xchg
mov
xorb
cmc
loopne
scas
test
adc
int3
or
push
fdivrs
dec
or
pop
cli
icebp
loope
out
ret
push
push
cmp
lcall
xchg
fidivrs
cmpsb
dec
dec
adc
pop
iret
xor
mov
add
cmpsl
xchg
daa
jae
rcll
shrl
push
or
adc
sbb
add
shlb
dec
hlt
sub
outsl
and
fwait
mov
cs
pop
out
sarb
xchg
push
jnp
divl
sub
mov
std
sub
sub
dec
jmp
cmp
push
push
imul
andl
sbb
sub
loope
and
loopne
adc
ss
pop
dec
repnz
pop
subl
dec
lret
dec
mov
sub
xchg
add
loopne
mov
movsb
dec
scas
pop
push
inc
leave
or
and
test
mov
jge
lret
icebp
popa
inc
es
push
daa
pusha
mov
int
insl
stc
lret
or
jmp
sub
mov
xchg
jae
pop
cmp
xchg
repnz
rclb
mov
inc
adcb
mov
or
les
sub
nop
stos
xor
outsl
inc
dec
repz
fcomp
inc
fisubs
mov
sarb
xchg
idivb
out
or
iret
sub
push
mov
int3
mov
es
jecxz
and
or
lret
pop
sbb
lret
and
or
mov
push
adc
rcrl
ljmp
xor
out
outsb
cmp
in
and
sub
mov
sbb
cmp
sbb
jg
loope
pop
js
sub
pop
shll
and
xchg
nop
fwait
into
fucomp
and
jge
out
adc
dec
sbb
push
pop
adc
mov
ss
stos
jnp
sub
xor
scas
popa
fldcw
int
mov
sti
rcrl
mov
clc
inc
mov
clc
mov
mov
pop
fs
adc
cmp
test
push
push
mov
xor
fiadds
mov
ficoms
push
mov
pop
push
or
mov
mov
stc
icebp
mov
nop
inc
xchg
out
aaa
bound
testb
pop
adc
rorb
xlat
or
jno
cltd
aas
sbb
cmp
or
pxor
lods
or
jp
sub
xor
ror
icebp
shl
jb
pop
out
enter
aas
bound
es
lock
xchg
and
or
dec
add
pop
push
imul
pusha
xchg
clc
rcrl
ror
pop
jmp
ljmp
sti
ja
push
in
jg
push
add
ret
mov
fs
mov
movsb
or
pop
cmova
icebp
and
xchg
insl
in
int3
cli
jbe
call
je
push
push
cmp
ret
jmp
mov
add
std
xorb
shl
add
pop
cwtl
outsl
ds
mov
ret
sbbl
stos
xchg
or
cli
dec
lcall
lock
add
pop
adc
jne
cld
loope
arpl
inc
cmp
test
pushf
sti
insb
das
sbb
into
adc
or
mov
mov
cmpsl
lret
jecxz
hlt
adc
inc
rorb
push
and
jl
gs
rorb
xchg
xor
jmp
jg
dec
negb
je
jbe
cmp
les
xchg
mul
aas
sbb
arpl
pop
push
daa
xlat
daa
mov
hlt
mov
xchg
jge
das
addr16
sbb
xchg
xor
repnz
xor
add
jns
sti
cmpsb
pop
je
les
dec
push
push
arpl
and
xor
sahf
cli
ljmp
cwtl
pop
mov
testb
scas
test
lds
fneni(8087
popa
jb
subb
es
das
sbb
scas
adc
sbb
nop
fwait
call
mov
ds
sbb
add
ja
je
adc
dec
sbb
aas
pop
arpl
sbb
ljmp
aad
adc
scas
sbb
inc
mov
mov
pop
icebp
sbb
xchg
xchg
jl
xchg
clc
cmc
mov
mov
and
pop
sarb
push
add
gs
sub
mov
in
sbb
scas
mov
aaa
adc
add
jg
int3
and
insb
pusha
mov
lods
lea
negb
cmc
push
inc
lock
jnp
subb
test
mov
cmpsl
push
daa
push
push
and
cmpsb
push
sbb
jmp
inc
mov
stos
sub
stos
sub
insb
les
mov
push
dec
sti
xchg
mov
out
xchg
iret
adc
jno
call
insb
fdivl
movsl
xchg
jns
sbb
std
pusha
push
scas
pop
inc
int
jg
fstpt
imul
and
lret
push
fwait
and
dec
jb
insl
mov
xlat
cwtl
dec
outsb
jae
push
mov
xchg
or
add
and
cmpsb
pop
shr
inc
aaa
cmp
imul
insb
and
jo
pop
add
add
pop
fcoms
insb
pop
ss
stc
rcll
or
lods
mov
sub
mov
dec
insl
mov
hlt
loop
mov
lret
es
and
mov
cwtl
push
xchg
jecxz
jle
sbb
fimull
jecxz
in
std
clc
pop
push
sub
or
das
sbb
pop
push
sbbl
or
pop
insl
or
add
test
gs
pop
xor
xor
fsubrl
pop
int
pop
xchg
bound
push
hlt
add
lcall
jo
adcl
mov
xchg
xchg
cmp
mov
and
jl
leave
lret
add
xor
xchg
inc
nop
cs
sub
add
ds
or
notl
push
add
xchg
jp
xchg
aad
lcall
loope
call
sbbw
add
bound
fstps
inc
fisubs
lcall
cs
outsb
cmp
into
jnp
push
stos
push
fcmovu
outsb
cli
jae
in
dec
jb
cmp
mov
into
sub
cs
mov
jle
out
imul
jle
push
inc
cmp
lods
mov
pop
gs
push
sti
jbe
fwait
or
xchg
inc
das
mov
mov
and
mov
outsl
rol
push
stos
mov
out
into
xor
sbb
rclb
call
repz
jle
scas
popf
std
mov
js
arpl
ds
aas
xor
inc
addr16
lock
dec
jnp
fs
xchg
xchg
jo
jae
das
xor
in
or
pop
aam
insb
sbb
mov
or
or
pushf
add
jbe
cmp
or
push
mov
pop
mov
pop
mov
or
andl
xchg
xlat
ds
sar
push
test
jo
mov
jns
add
xchg
push
daa
cmp
iret
inc
je
in
pop
fdiv
test
insb
jmp
addl
xor
jno
xor
frstpm(287
lret
dec
pop
jecxz
imul
jg
or
addr16
cmovbe
test
lods
loopne
mov
das
mov
cmp
mov
fdivrs
add
jnp
jnp
lret
out
mov
shrl
lods
mov
mov
dec
jg
add
outsl
out
jecxz
xor
sbb
pop
mov
pop
lret
pop
enter
and
repnz
push
mov
xchg
inc
lahf
xchg
outsb
ret
roll
loope
out
int3
cmpb
cmp
inc
sti
into
jl
cmpsb
mov
jmp
pop
lret
dec
lods
jb
leave
gs
xchg
pop
lret
jnp
pushf
sub
imul
push
pop
shll
fisubl
shlb
les
addr16
jl
iret
mov
leave
jo
bound
movsb
lahf
and
add
rcr
call
jne
mov
add
sub
icebp
js
cmp
addr16
jge
mov
cmp
roll
cmp
jmp
imul
outsl
popa
push
sub
ficomps
out
xchg
stos
xor
dec
sbb
sbb
inc
idivb
gs
hlt
inc
or
orl
inc
cmp
add
jg
cmp
mov
fimull
mov
push
stos
xchg
push
stos
scas
sarl
stos
jb
xor
aaa
and
outsl
dec
xor
je
ret
ss
cwtl
jl
cmpsb
pop
mov
dec
xor
xor
test
gs
daa
les
mov
mov
jmp
inc
xor
shlb
out
inc
jle
in
mov
gs
jns
ss
loope
xor
cli
dec
push
loop
pop
xor
repnz
inc
jecxz
mov
jb
mov
mov
mov
mov
dec
call
mov
pop
adc
xchg
ljmp
mov
hlt
jbe
push
aaa
adc
mov
in
jb
outsb
mov
fbstp
aas
subb
sub
mov
push
inc
lods
cmp
insl
rorb
in
ja
dec
daa
sbbl
jmp
loop
xor
push
pusha
dec
mov
aam
jp
pop
fidivl
xchg
test
shll
xor
sbb
or
js
cmpsl
or
inc
mov
scas
jno
jge
mov
jo
xchg
inc
pop
cmp
loopne
data16
hlt
sub
rcrl
cmp
or
lret
inc
inc
xchg
fbstp
jmp
jne
ja
or
out
lods
sbb
mov
xor
in
je
xchg
push
add
and
cltd
jbe
mov
jbe
dec
mov
sbbb
loop
pop
test
xchg
or
mov
adcb
mov
hlt
jnp
int
stos
xor
testb
push
dec
cmp
cmc
loope
sub
jb
xchg
and
test
jo
jo
aad
aam
in
xchg
cmp
pusha
jae
pop
lock
inc
xchg
jnp
cmp
inc
cmpb
pop
iret
je
push
xor
loopne
push
and
daa
push
cmp
xchg
and
fadds
fwait
ds
adc
outsb
xchg
lods
xchg
push
sti
data16
jo,pn
jecxz
lcall
sahf
fstps
fadds
and
lcall
sbb
jbe
test
inc
adc
gs
sti
insb
jae
sub
and
lods
lret
xchg
aad
pop
in
fnsave
mov
fidivrs
dec
data16
adc
lret
shl
fcoms
bound
pop
je
sbb
addb
add
mov
xchg
add
pop
jp
out
mov
jo
into
jnp
gs
dec
loope
popf
aam
cmc
loopne
or
push
and
fcoms
jl
cmp
mov
lods
mov
mov
adc
xchg
pusha
dec
adc
jno
mov
scas
adc
add
jbe
outsb
mov
or
in
jmp
lret
push
out
jle
lahf
hlt
lds
mov
inc
es
xchg
add
xor
loopne
xor
push
aad
adc
jae
mov
outsl
inc
fs
push
outsl
fsubl
jmp
fbld
mov
aas
cmc
mov
dec
fistps
and
push
imul
prefetch
or
lods
mov
outsb
pusha
outsl
iret
mov
loope
add
adc
outsl
inc
cmp
adc
aam
cli
aad
xor
int3
call
dec
fwait
scas
outsl
sbb
adc
mov
or
popa
cltd
icebp
add
jns
lahf
sub
stos
xchg
cmp
inc
dec
hlt
cltd
xor
insb
jae
cwtl
shr
pop
cmp
push
hlt
mov
pop
jg
repnz
outsb
fnstcw
xor
fdivrl
and
lods
jmp
out
push
xchg
push
out
hlt
gs
lahf
xor
divl
inc
pushf
sub
inc
jl
sub
mov
sub
addl
enter
fld
pop
clc
jnp
insl
and
popa
sub
xchg
dec
add
clc
push
movsb
pushf
stos
insb
repnz
lret
mov
sti
sysexit
and
xchg
xchg
pop
popf
sub
and
ss
push
or
dec
pop
shrw
pushf
xchg
or
mov
dec
cmp
mov
outsb
add
adc
aad
hlt
cltd
out
outsl
push
push
je
xor
pop
cmp
movsl
push
loop
cmpsl
mov
sub
push
int
aad
cmpsb
shrl
test
dec
out
stos
inc
mov
hlt
xchg
add
cs
insb
jg
add
or
or
push
xchg
scas
lods
xchg
sahf
and
and
jecxz
mov
push
icebp
mov
sbb
inc
cmpsl
pop
cmp
xor
push
and
cmc
cwtl
sbb
pop
shrb
call
clc
ss
and
