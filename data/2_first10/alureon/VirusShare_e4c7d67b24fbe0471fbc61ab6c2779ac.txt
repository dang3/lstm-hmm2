push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
xor
mov
movl
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
mov
xor
add
incl
mov
push
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmp
je
mov
jmp
push
call
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
cmp
je
push
call
mov
push
push
call
mov
call
add
cmp
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
push
call
pop
ret
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmp
jb
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
push
lea
push
push
call
lea
push
push
call
add
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
or
lods
dec
xchg
das
sub
adc
leave
jno
sbb
adc
dec
adc
and
and
jno
test
in
fisubs
mov
ret
sub
inc
aad
mov
jle
dec
jns
xor
test
mov
jg
dec
enter
xchg
ss
leave
in
mov
and
adc
test
dec
sub
push
dec
fnstsw
add
inc
lea
sbb
fisubs
repnz
push
cmc
xor
xlat
inc
add
mov
pop
jo
cltd
sbb
push
push
adc
in
in
add
dec
mov
stos
lahf
loope
add
dec
aad
pmaxub
sub
dec
repnz
in
cmp
xsha256
cmpsb
xchg
push
dec
and
mov
test
pop
inc
mov
lds
outsb
int
orb
hlt
or
rclb
or
stos
sub
add
mov
stos
dec
xor
xor
push
add
stos
pusha
addr16
outsl
repnz
cmp
mov
dec
mov
xor
adc
mov
pop
fwait
xlat
scas
sbb
xchg
xchg
and
add
dec
mov
push
faddl
scas
stos
inc
mov
sbb
aam
xchg
faddl
popf
out
pop
lea
arpl
xchg
sub
pop
add
and
sti
sub
jne
es
lock
mov
adc
outsl
jle
cwtl
add
jmp
lods
sub
jge
xchg
xor
adc
out
pop
xorl
jp
stos
sub
add
mov
clc
xor
ret
mov
shlb
mov
loope
add
sbb
lret
lods
lods
pop
sub
sub
fadd
sahf
mov
je
sub
js
fucom
cmp
repz
jo
sub
test
imul
stos
inc
jmp
mov
sahf
push
cwtl
popf
out
repz
jmp
xor
push
inc
sahf
dec
jg
outsl
outsl
jne
mov
fadd
inc
cmpsb
nop
xchg
mov
fcompl
pop
aam
push
ds
std
outsb
andb
jnp
scas
mov
mov
insl
xchg
fildl
scas
in
loope
push
out
bound
dec
sbb
cli
sti
sbb
add
loopne
push
outsb
pop
mov
bound
in
xor
fcoms
loope
pop
in
das
jb
imul
mov
gs
xor
in
jne
mov
ret
sbb
dec
arpl
xchg
jns
scas
in
loope
dec
pop
lock
push
cmp
insb
das
and
mov
push
push
arpl
into
push
jecxz
fistl
adc
ds
xor
jne
mov
dec
mov
daa
sub
jl
jge
data16
gs
dec
orl
aad
popl
push
pcmpgtw
rcrl
or
add
add
sahf
and
cs
mov
xchg
sub
mov
nop
xchg
testl
jnp
inc
out
mov
jb
inc
daa
sub
xor
pop
ss
nop
jo
inc
cli
pop
mov
ret
pop
inc
mov
add
insl
aam
ds
pop
lahf
sti
cmp
loope
mov
mov
add
out
lret
in
jo
dec
dec
xchg
adc
loop
lea
mov
addb
mov
jnp
bound
pop
fldenv
add
add
gs
xchg
ja
rcll
jle
cs
pop
adc
dec
ret
jne
ja
jp
sub
cld
repnz
cmp
jecxz
shlb
adc
loop
mov
sbb
push
and
std
xor
pop
mov
mov
cwtl
rol
inc
gs
fistpl
in
jge
bound
inc
xlat
rcrl
sarl
add
inc
adc
sub
pop
xor
mov
les
and
sbb
lret
pop
xchg
test
fldl
add
inc
dec
imul
out
inc
adc
dec
ret
inc
enter
insw
outsb
les
pop
mov
xchg
dec
movl
mulb
jb
shll
xor
sahf
sub
in
pop
dec
inc
mov
push
addl
jmp
or
cmp
pop
cmp
pushf
outsb
push
mov
adc
sbb
mov
sbb
mov
ljmp
xchg
xor
or
rcrl
enter
lods
sbb
adc
xor
dec
scas
push
scas
test
les
mov
adc
add
ljmp
fwait
pop
fcmovnu
data16
cwtl
mov
jmp
or
mov
pop
dec
lods
cmp
out
inc
out
xchg
add
out
pop
insb
scas
pop
pop
cbtw
jg
testb
cwtl
loop
xor
fcompl
jg
lret
xor
lret
sbb
pop
mov
repz
outsb
fsubrl
cmpsl
movsb
dec
mov
insb
in
adc
xlat
sub
dec
imul
les
jge
push
das
iret
or
or
pushf
sub
arpl
mov
push
rsqrtps
out
flds
add
test
add
test
cmp
les
cmpsl
fidivs
lods
dec
mov
into
fwait
cmp
data16
jmp
enter
or
inc
cmp
mov
sbb
adc
mov
outsl
sub
aaa
mulb
arpl
xor
add
cs
mov
dec
jnp
repnz
inc
push
stos
sbb
fisubrs
ja
push
adc
in
ret
inc
lret
xor
pop
in
mov
ret
xchg
mov
idivb
mov
into
push
int3
cmp
sub
lcall
add
inc
pop
jge
aam
pop
cmp
jg
lea
pop
push
repnz
shll
xchg
sbb
fwait
hlt
mov
inc
ffreep
mov
pop
rcrb
notl
test
out
lods
pop
jecxz
lret
addr16
jae
adc
out
data16
pushf
lahf
pop
or
xor
dec
jmp
lret
hlt
mov
and
mov
enter
or
mov
hlt
data16
hlt
dec
dec
out
insb
mov
iret
jge
and
jecxz
and
add
in
inc
mov
push
fiaddl
ss
fdivr
test
fnstenv
or
add
repnz
cli
jecxz
sub
les
mov
out
movsb
and
cmp
scas
adc
aaa
into
in
dec
and
fbstp
clc
das
testb
mov
dec
pusha
or
sub
mov
fiadds
mov
cmp
dec
ret
mov
jp
inc
gs
js
xchg
loop
sti
loop
sbb
or
out
sbb
sbb
dec
rcrb
add
add
lods
jp
jbe
jno
ss
fldl2e
dec
mov
dec
in
neg
or
or
jae
js
arpl
lods
xchg
push
mov
stos
push
mov
xor
test
add
push
push
cmp
cwtl
hlt
dec
into
lds
mov
pop
pop
outsl
xchg
mov
fdivs
jns
ja
xchg
pushf
testl
movsb
jmp
pushf
dec
inc
leave
push
fnstcw
int
or
mov
push
out
cli
lds
mov
test
xchg
repz
incb
add
lds
mov
ljmp
push
dec
int
in
pop
iret
shll
or
cmpsb
test
shll
loopne
enter
aam
mov
lds
dec
mov
insl
mov
fs
inc
clc
dec
sub
xchg
stos
xor
pop
or
pop
pushf
pop
cmc
shrb
sub
mov
dec
jmp
fdivrl
int3
imul
cld
dec
jl
sti
lret
stos
inc
jmp
jge
xchg
push
hlt
mov
jae
pop
mov
xchg
out
dec
add
divb
fisttpl
test
das
adc
repz
sub
jle
mov
sbb
sahf
pop
jecxz
jl
inc
in
pop
rorl
lea
and
imul
enter
dec
mov
ja
and
frstor
cld
sti
mov
pop
lds
xor
pushf
int
in
mov
cmp
sbb
xor
mov
loop,pn
xchg
xor
sub
ret
fisubl
pop
stos
and
mov
jnp
and
hlt
daa
or
mov
jg
stos
adc
mov
inc
mov
cmc
jo
lock
push
cmp
cmp
enter
xchg
sub
add
add
repz
lea
or
mov
jecxz
sbb
dec
fisubl
cwtl
pushw
mov
cmp
xlat
rcl
dec
arpl
cmpl
push
sahf
inc
sahf
jnp
fstpl
xor
test
xor
test
pop
cwtl
faddl
pop
popa
sub
repnz
dec
pop
stc
mov
orl
ret
cmp
sbb
ljmp
addr16
xor
fld
xlat
sbb
pop
dec
jle
rorb
mov
mov
mov
lret
xor
add
add
add
inc
stos
dec
inc
stos
pop
cwtl
jbe
into
ja
filds
push
pop
or
mov
fstl
adc
icebp
adc
pop
xchg
mov
cmc
push
push
inc
add
dec
adc
dec
xchg
out
push
xchg
or
insl
stc
mov
dec
aaa
jmp
or
dec
test
inc
dec
inc
jle
sbb
pushl
rcll
ljmp
pop
xchg
sbbb
adc
inc
ljmp
popf
mov
dec
mov
test
cs
cmp
out
int
cmp
and
pop
or
lods
sbb
add
cmpsb
andl
mov
cld
stos
and
jo
out
cmp
pusha
mov
sub
jne
push
jg
in
xlat
stos
pop
popl
cmpsb
jecxz
mov
insb
jge
push
in
sar
pusha
fsubp
jo,pt
sbb
xchg
fwait
test
cmpsb
mov
movsb
add
mov
pop
dec
hlt
mov
sub
pop
cmp
stos
repnz
inc
leave
decb
push
stc
addr16
mov
jge
icebp
xor
fadds
inc
lds
imul
add
mov
sbb
mov
enter
insl
popa
or
je
inc
mov
fidivrl
stc
pusha
mov
out
cmpsb
jb
mov
test
test
mov
ss
idivl
lcall
rorl
sbb
sbb
lock
push
out
pop
push
jno
icebp
pop
lahf
imul
dec
movsl
in
cli
add
in
test
negl
jno
int3
lods
inc
flds
mov
hlt
pushf
xchg
aas
xchg
inc
and
sahf
popf
adc
dec
sahf
leave
je
out
sbb
xchg
inc
add
xor
add
outsl
push
cmpsl
pop
sbb
enter
and
add
test
inc
scas
int3
lods
jl
cmp
xchg
mov
sbb
jns
icebp
inc
cltd
int3
jle
and
inc
adc
pop
je
fisubrl
sub
ds
xchg
inc
add
add
test
dec
pop
aad
xchg
xor
or
sub
js
pop
jg
rorb
mov
add
ljmp
icebp
outsl
jle
in
shl
sub
jno
cmpsb
testl
mov
mov
stos
push
scas
fisubrs
cmc
adc
sbb
add
out
into
sahf
adc
bnd
aam
and
add
pop
mov
mov
cmc
dec
mov
scas
test
sbb
addr16
out
shrl
arpl
cmpsb
insl
stos
dec
dec
fsub
jbe
out
mov
out
jnp
push
fimuls
jg
or
mov
pop
jo
int3
push
pop
cmp
stc
into
pop
jne
jns
shrb
sbb
cmp
sub
xor
fs
pop
mov
jbe
filds
jae
ret
xchg
jo
arpl
jge
es
push
in
mov
sub
sub
cltd
cmpsl
leave
mov
add
add
pop
pop
jmp
jnp
aas
fidivs
scas
int
mov
inc
mov
pushf
pop
insl
dec
mov
push
sbb
mov
inc
lds
arpl
aas
aaa
popf
push
and
leave
mov
mov
xchg
cwtl
outsl
mov
sbb
jp
dec
cmc
and
mov
add
outsl
mov
loopne
dec
pusha
cmp
mov
in
sbb
int3
rclb
adc
push
repnz
adc
mov
mov
push
int3
xchg
mov
pop
pusha
pop
add
push
pop
push
das
es
icebp
or
xchg
movb
sbb
adcb
cmc
into
imulb
je
add
pop
pop
xorb
cwtl
call
cmp
push
cmpsl
ss
xchg
and
adcl
pushl
xlat
cmp
jae
add
push
pop
fld
cmp
out
pop
adc
hlt
loope
pop
jo
sbb
lods
fdiv
cmpsb
xorb
push
mov
inc
fcmovne
and
lcall
mov
shrb
mov
rorl
lahf
dec
jae
jge
cmp
inc
lods
jbe
test
jbe
or
gs
mov
outsl
sub
adc
jne
push
jecxz
xchg
insb
std
lods
xor
gs
and
mov
lods
adc
call
ljmp
je,pn
xchg
imul
repz
adc
cmp
call
jp
fs
std
mov
enter
xchg
iret
push
or
pop
jmp
data16
cli
jle
mov
xlat
ret
jg
sub
cmp
xchg
jl
push
les
sub
push
ret
inc
lcall
out
idivb
and
mov
mov
jne
roll
add
sub
jl
pop
xlat
jg
fstp
dec
dec
shlb
cltd
jge
adc
jb
rolb
xchg
push
pusha
cmp
repz
test
fldcw
outsl
pop
or
push
fildll
out
mov
scas
pop
push
inc
mov
leave
push
lds
andb
cmpsb
movsl
xchg
scas
mov
add
dec
mov
jecxz
pop
stos
pop
dec
out
inc
adc
outsb
scas
dec
lods
mov
xchg
outsb
dec
aad
mov
xchg
or
jmp
jnp
outsb
in
out
xchg
stc
add
lock
add
popa
xor
fdivrl
pop
in
pop
add
xchg
daa
divb
pop
stos
mov
dec
xor
pop
sub
jmp
mov
adc
lock
xlat
in
inc
cwtl
das
add
movsl
pop
inc
sub
xchg
pop
mov
push
idivb
push
and
nop
xlat
gs
push
test
in
fsubrp
jnp
push
shrd
rcrb
mov
testb
or
imul
add
arpl
mov
in
das
push
dec
lods
adc
xchg
mov
cmpl
inc
push
enter
das
push
popa
adc
pop
mov
insb
ret
add
pushf
mov
leave
adc
or
xchg
push
orb
xchg
imul
ror
out
mov
xor
test
inc
dec
aas
loopne
dec
inc
idiv
mulb
push
sbb
push
lods
xchg
push
clc
sub
push
sahf
enter
pop
rol
movsb
out
jne
and
adc
cmpsb
xor
xor
rcr
popf
mov
mov
fdivrs
add
leave
sub
lods
adc
adc
jge
test
dec
mov
dec
mov
insb
pushf
lret
sbb
dec
dec
and
add
call
xor
cmp
lcall
sub
int
stos
aam
cmc
loopne
sbb
and
pop
fldpi
mov
test
adc
mov
sub
add
adc
and
jge
push
add
xchg
clc
jns
jnp
ja
ds
xchg
cltd
jl
add
sbb
jge
xor
push
adc
mov
rcll
mov
mov
repz
xchg
std
pushf
push
adc
movl
pop
std
ljmp
leave
adc
adc
add
jnp
xchg
dec
stos
sar
inc
inc
unpcklps
imul
sub
test
das
xchg
lea
cmp
pop
imul
mov
adc
inc
bound
mov
sbb
xchg
xor
scas
adcl
subl
push
aad
shl
sarl
mov
lret
fidivs
nop
outsl
and
test
loope
js
inc
cmp
iret
add
push
lods
dec
add
jnp
shlb
inc
das
rclb
pop
inc
fnsave
mov
mov
adc
jno
ficoms
xchg
cmp
cmpb
shlb
xchg
mov
out
sub
mov
div
gs
push
lcall
push
insb
outsw
xor
xor
xchg
pop
imul
ret
dec
mov
loop
sti
cltd
mov
mov
adc
add
dec
mov
pop
dec
jp
xchg
sti
imul
sbb
mov
add
jns
js
adc
xor
data16
push
outsl
adc
xchg
push
lret
ss
fwait
insb
ljmp
rolb
push
sbb
sti
scas
pop
call
jbe
subl
push
test
inc
dec
push
xor
push
dec
xor
xchg
or
push
pop
loop
js
jbe
test
jmp
sbb
les
jg
cmpl
test
inc
mov
adc
cmp
repz
mov
jg
test
inc
aam
add
cld
pop
out
mov
mov
or
jb
or
or
popf
mov
or
int3
dec
test
dec
ja
pop
xor
and
ret
sbb
jnp
mov
push
mov
jg
sub
loope
sub
clc
fldcw
cs
inc
jno
in
imul
inc
imul
sub
stos
sub
push
mov
lock
xlat
popf
jmp
cmp
popa
push
arpl
dec
push
add
add
xchg
cmp
jge
adc
movsb
or
dec
or
arpl
xchg
or
inc
loop
cmc
sahf
jecxz
xor
pop
dec
and
dec
and
mov
mov
shrb
rorl
mov
in
outsl
jmp
dec
xor
sub
sub
lahf
lret
loop
add
mov
sbb
int
popa
push
fcmovbe
out
repnz
xchg
cli
add
int3
xchg
jmp
push
ja
jnp
push
fidivs
mov
adc
add
mov
mov
inc
notb
lahf
ss
add
negl
mov
push
ss
lahf
jnp
xor
aaa
shlb
dec
and
out
mov
das
xchg
fucomi
jbe
inc
dec
jl
mov
cltd
fs
loopne
xor
repz
add
jmp
cmp
cmp
movsbl
lds
sarl
dec
mov
aas
push
in
mov
pop
push
inc
or
std
adc
dec
and
inc
mov
sub
cmp
in
cld
pop
das
popa
cmp
or
jno
pop
addr16
inc
pop
jmp
je
lret
push
adc
add
add
push
cmpb
add
scas
mov
push
repnz
mov
ret
lcall
cmp
pop
ds
out
mov
clc
xor
or
pushf
lods
mov
fdivl
ja
sarb
in
lock
mov
cmp
imul
jno
ja
dec
je
ret
insb
cmp
loopne
inc
stc
mov
mov
push
mov
scas
pop
iret
mov
add
shll
enter
testb
cmp
mov
jecxz
hlt
dec
int3
jne
cmpsl
mov
das
fwait
add
enter
add
lods
add
mov
nop
hlt
aam
hlt
jecxz
in
js
cmpsl
repz
push
pop
ret
iret
mov
inc
stos
adc
inc
mov
outsl
sti
xchg
dec
and
ret
dec
test
dec
fdivrl
mov
lcall
fisubrl
cs
inc
add
std
je
mov
xchg
cmp
xor
xchg
icebp
cmpsl
xchg
xor
pop
inc
xor
adc
adcb
test
and
outsl
adc
mov
scas
popf
jno
out
test
in
and
cmpsb
lcall
and
leave
sbb
pop
inc
add
xchg
out
imul
hlt
xchg
leave
ret
add
jnp
mov
or
jg
andb
mov
test
lahf
and
bound
jge
icebp
or
lods
test
pop
jecxz
sub
fidivs
cs
stos
pop
mov
adc
pop
cmpb
repnz
mov
sarb
icebp
fstpl
call
adc
decl
loopne
hlt
jbe
orl
push
push
and
lods
in
scas
iret
test
xor
mov
fldl
or
je
shlb
pop
mov
add
add
mov
out
lods
mov
stc
rcrl
fildll
in
xchg
ljmp
and
xor
lret
test
out
imul
dec
dec
rolb
and
adc
icebp
pop
mov
xchg
xchg
sub
or
or
dec
fisubs
cltd
sub
cmp
dec
les
inc
fdivrs
insb
cwtl
out
and
sub
xor
mov
fidivs
push
xor
mov
and
xchg
clc
push
lret
mov
aaa
fisttps
sarl
nop
push
cmpsl
jae
inc
fwait
arpl
pop
push
dec
xchg
cmp
and
and
insl
sbb
repz
mov
dec
clc
roll
xor
add
leave
iret
sub
shrl
cmpsl
adc
movsb
dec
push
nop
pop
push
bound
nop
ja
sbb
loopne
outsb
pop
mov
mov
les
adc
xchg
cmp
push
ret
mov
and
es
sbb
sahf
and
mov
popf
pop
in
adc
inc
fsts
nop
mov
negl
adc
jp
xchg
cltd
or
adc
mov
mov
fcoml
lds
ret
cld
jle
sbb
mov
mov
lock
fsubs
cmc
iret
cmpsl
aaa
and
or
repnz
gs
jp
in
enter
arpl
shll
sahf
popa
sbb
incb
in
xor
int3
int3
xchg
mov
aas
xchg
adc
cmp
xchg
rcrb
rorb
cmp
push
lock
adc
ja
lods
dec
xor
add
add
lods
lock
gs
add
jnp
ja
jg
jbe
jae
sbb
leave
jg
ret
add
sbb
out
andps
cltd
xchg
jp
mov
lock
mov
out
rcrb
pop
dec
sbb
cmp
jp
gs
notb
sub
xor
or
dec
lret
or
decb
int
inc
iret
rcl
out
sbb
ss
mov
sub
xor
sbb
hlt
xchg
sbb
rorb
fildl
mov
movsb
lea
xor
icebp
mov
mov
pop
fildl
and
sti
inc
dec
mov
iret
sub
inc
sarl
dec
movsl
mov
sbb
mov
das
dec
orb
add
mov
lcall
add
into
xor
dec
sub
loop
mov
push
push
ljmp
add
cmp
cmp
clc
cmpsb
push
jns
fidivrl
ja
lcall
mov
fwait
or
icebp
pushl
std
jbe
mov
fidivs
inc
lahf
add
sbb
ror
mov
stc
in
mov
add
cmp
sub
or
push
lahf
in
adc
sbb
std
add
cs
test
imul
divl
stos
outsl
adc
adcl
pop
imul
xorl
xlat
fistl
mov
lret
push
jbe
data16
cmpsl
loop
es
push
test
nop
jmp
add
pusha
add
cmp
push
cmpsl
sbb
add
xchg
inc
xchg
mov
mov
decl
cli
jae
rcr
cld
out
outsb
ret
movsl
mov
out
mov
jg
and
and
add
and
xor
inc
mov
ja
mov
push
jmp
int
xlat
mov
push
sub
dec
adc
loop
or
dec
dec
jmp
add
stos
je
std
add
inc
dec
mov
xlat
mov
push
mov
scas
cmp
or
sbb
addr16
adc
jmp
adc
add
pop
js
sub
pop
xchg
mov
inc
xor
jae
and
stc
mov
mov
dec
add
add
loope
int3
add
and
iret
dec
call
pop
mov
sbb
jb
ret
mov
inc
lock
mov
inc
adc
test
adc
pop
and
rcrb
cmp
js
cltd
sub
clc
cmp
rcl
lock
mov
dec
lcall
adc
idivb
pop
in
loopne
stos
xor
in
aam
mov
add
push
sti
ds
fnsetpm(287
push
push
cwtl
es
pusha
icebp
and
mov
inc
js
jl
cmp
xor
fbld
pop
int3
cs
sbb
lods
cmpsb
push
dec
sbb
xchg
jnp
push
xchg
in
sub
gs
rorb
icebp
arpl
inc
xchg
sub
es
popa
dec
shll
fisubs
cld
lret
sub
sbb
cli
adc
sahf
nop
pop
mov
push
aas
dec
dec
mov
lods
add
jle
mov
add
push
adc
inc
xchg
das
js
jae
sbb
faddl
lret
jmp
mov
mov
lds
in
add
repnz
xlat
loop
xor
in
adc
imul
or
into
inc
and
dec
pop
lahf
in
inc
xor
sahf
es
pop
dec
std
inc
jg
aaa
cmp
dec
jnp
dec
leave
sub
mov
push
mov
pop
test
enter
sti
dec
or
pop
iret
leave
mov
add
leave
sub
cli
xor
in
adc
stc
push
push
and
pop
lods
lahf
aas
imul
mov
inc
aam
daa
cli
js
orl
mov
mov
xchg
xchg
pop
ss
pop
xorb
push
nop
outsb
lret
and
fmuls
jns
inc
cmpb
mov
mov
movsl
mov
jb
push
ret
fadds
mov
xchg
ret
pop
inc
mov
adc
mov
sbb
inc
sti
pop
jae
aad
idivb
inc
cmpsl
cli
sub
pushf
sahf
add
pop
and
xor
jle
inc
cwtl
lods
in
shll
push
xchg
jnp
test
inc
aaa
xchg
sbb
movsl
dec
push
repz
int
adc
mov
xchg
and
andb
add
mov
xor
mov
and
inc
cmpsl
dec
and
and
mov
jmp
ja
incb
jmp
mov
in
jmp
std
pop
push
outsl
pop
pop
jbe
xchg
lea
dec
ja
hlt
jbe
mov
inc
int3
add
mov
movsl
push
jecxz
pop
sub
movsl
fsubs
adc
mov
inc
add
dec
ds
out
xchg
mov
repz
sbb
dec
inc
icebp
pop
fists
stos
and
sbb
clc
xor
shlb
loopne
lds
inc
xlat
hlt
mov
inc
dec
cmp
int3
jns
push
loopne
jecxz
adc
mov
rol
hlt
call
imul
mov
mov
jnp
push
fcomip
jge
in
pop
les
xor
xchg
imul
and
rorb
leave
sahf
xchg
mov
pop
mov
pop
stc
sbb
popf
lcall
in
add
popf
push
cmp
ja
movsl
push
cmpsl
aam
aaa
cli
adc
add
add
lock
sar
add
or
cmp
fld
cld
cmp
fimull
xchg
jp
mov
push
and
ret
add
adc
cmp
pop
push
mov
jb
arpl
seta
in
add
iret
mov
bound
stos
pop
test
mov
inc
dec
movsl
xor
mov
and
je
out
push
dec
jecxz
jb
aas
outsb
pop
xor
cmp
sbb
inc
dec
push
and
inc
and
and
and
inc
je
add
jb
cmc
add
lods
mov
mov
jo
stc
xor
pusha
mov
clc
faddp
add
repnz
push
pusha
jp
leave
mov
mov
in
mov
stc
dec
movl
stc
aaa
adc
mov
loopne
loopne
fnstenv
mov
add
insl
xor
mov
xchg
jl
pop
das
test
dec
push
sub
aaa
add
mov
adc
sbb
xor
setge
add
pop
cld
dec
jno
fwait
sbb
pop
aas
push
adc
pusha
add
jg
repnz
mov
mov
mov
and
adc
jae
mov
xor
push
test
mov
jno
out
imul
xlat
vmread
popa
fisttpl
loopne
filds
int
xchg
jmp
