jge
add
fwait
adc
add
add
fcoml
add
out
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
xchg
add
xchg
adc
add
add
aad
add
loopne
add
repz
add
adc
add
adc
add
add
outsl
adc
add
adc
add
add
add
add
mov
adc
add
adc
add
add
push
adc
add
add
push
adc
add
add
fdivr
mov
cmp
lds
inc
pop
push
cmp
outsb
pushf
and
imul
rdmsr
jae
rorb
mov
or
cmp
fmuls
js
mov
leave
jecxz
mov
mov
mov
aaa
and
push
push
push
inc
mov
mov
mov
xor
or
rolb
fs
aaa
pop
mov
cs
movsb
mov
push
bound
pusha
pop
daa
fiaddl
add
addl
push
sub
sub
cmpsb
dec
inc
xorb
sub
jnp
sub
push
fbld
sub
pop
fiadds
sahf
dec
push
or
push
ret
into
inc
in
cmpsl
adc
scas
jbe
and
xchg
dec
push
in
lcall
push
shr
cli
jle
fcomip
dec
xor
loope
dec
sbb
in
pop
pop
das
add
xlat
xlat
shrl
sar
imul
jno
inc
cmp
xchg
cli
lahf
lcall
loopne
jp
mov
sahf
pop
push
mov
mov
jl
jb
mov
or
popfw
and
pusha
subb
imul
aad
xor
add
das
xchg
lret
clc
inc
push
sub
fs
mov
movsl
pop
jb
mov
mov
sub
cmp
cmc
arpl
test
xor
mov
fldt
push
cmpsl
lds
pushf
cmp
cmpb
stos
mov
xor
sub
sahf
inc
pop
inc
andb
cmc
dec
je
test
out
jecxz
inc
mov
xor
test
repz
cmp
pop
pushf
clc
xchg
rclb
or
shlb
je
sub
or
loop
imul
out
insb
stos
cmp
loopne
imul
inc
cltd
push
push
pushf
ja
leave
mov
clc
iret
insb
add
push
enter
sub
dec
sub
adc
pop
adcb
push
outsb
mov
push
gs
testl
xchg
sub
fists
pop
xlat
sahf
inc
dec
hlt
fs
or
jle
mov
mov
lret
or
add
jae
daa
cmpsl
sub
iret
mov
lds
adc
mov
jne
cs
decb
test
mov
int3
pop
and
shlb
adc
icebp
leave
call
or
pop
inc
je
nop
sbb
mov
test
arpl
daa
add
push
js
inc
stos
xor
mov
movsb
jno
test
test
outsl
add
and
test
sbb
or
out
xchg
pop
loopne
je
sbb
and
aam
xor
das
cmpsl
gs
cmp
xor
dec
mov
dec
fidivrs
push
sub
movsl
mov
daa
dec
outsb
imul
fnstcw
xchg
jp
pop
cmpsb
dec
adc
mov
sbb
sub
popa
aaa
push
or
fdivs
test
push
and
cmp
std
movsl
mov
loop
pushf
in
dec
push
or
cmp
lock
and
jp
adc
xlat
out
pop
add
jecxz
sbb
ja
icebp
ret
loope
and
in
xor
loope
ja
testl
cmp
shlb
mov
cli
test
xchg
adc
and
sub
or
in
mov
mov
ds
adc
idiv
sub
test
popa
mov
lods
mov
aad
sub
inc
dec
inc
lahf
lahf
jmp
cs
push
fcoms
rclb
inc
iret
cmp
jecxz
add
leave
inc
shl
xor
stc
movsl
int
cmc
sbb
mov
shl
mov
fildl
mov
add
sarb
pop
loope
add
xor
ljmp
and
out
push
clc
pop
cmp
or
and
xor
cltd
and
lds
sbb
xchg
cmp
pop
jo
gs
xchg
mov
shlb
inc
jo
dec
lcall
dec
mov
fbld
psrad
jnp
aaa
out
sub
roll
sub
cld
not
sbb
xchg
inc
cmp
dec
int
cmp
call
jle
pop
mov
pop
or
fmull
lds
sub
or
xor
in
adc
loopne
or
dec
pop
pop
enter
inc
cs
movsl
sub
or
mov
sub
int
and
inc
or
xchg
out
and
aam
mov
jb
inc
repnz
dec
lods
stc
movsl
cmp
clc
das
sar
jp
add
fadd
dec
sub
inc
mov
std
sbb
adc
hlt
jmp
pop
lret
sbb
imul
mov
mov
mov
sbb
enter
jne
xor
sub
adc
cmpsl
scas
mov
test
sbb
mov
daa
adc
repnz
mov
out
fstps
push
sub
fs
popf
inc
imul
mov
shl
imul
xchg
fstp
mov
xchg
push
and
jnp
out
jmp
push
or
enter
mov
hlt
mov
test
dec
pop
push
or
xchg
pusha
aas
fmull
sub
daa
mov
sub
inc
call
scas
lods
test
aaa
cwtl
setle
jbe
outsb
xor
xchg
js
sbb
shrb
dec
xor
sub
pop
call
inc
xchg
push
insb
xor
jnp
jns
subb
push
xchg
xchg
es
mov
jecxz
mov
push
inc
xchg
cmp
cld
loopnew
pop
sub
pop
xor
call
and
fidivs
or
popf
or
clc
in
xor
push
cmpl
add
in
fs
pop
adc
push
out
cmp
adc
iret
loop
ja
nop
mov
addb
push
mov
dec
cmp
sub
xchg
shll
push
lock
ljmp
pop
sbb
push
xchg
and
imul
rcr
mov
loope
out
ds
xchg
imul
pusha
lret
icebp
iret
lods
outsl
mov
add
push
loopne
loop
pop
int
fisubl
mov
scas
and
lret
xchg
dec
jmp
enter
cmpsl
jg
cltd
mov
and
mov
inc
jg
adc
dec
jae,pn
jo
jmp
sub
mov
jno
lcall
sbb
xchg
inc
incl
mov
in
and
adc
xor
les
sar
mov
xor
call
mov
jbe
jo
lds
or
ficoms
mov
insl
popa
lcall
decb
push
pop
cltd
lock
add
mov
xchg
ffree
pop
add
sbb
orb
stc
rclb
mov
fwait
jmp
aas
clc
or
dec
xor
imul
push
jno
mov
jg
lahf
xlat
xor
xchg
xchg
cmp
sub
or
add
jle
rorl
cmp
cmpsl
nop
adc
js
mov
rolb
mov
cmp
test
cli
mov
test
stc
pop
nop
mov
aam
rcrl
lods
das
push
aam
divb
mov
shll
mov
fstl
push
enter
xchg
addr16
cmpl
lahf
push
fsub
pop
pop
mov
ljmp
lret
dec
mov
cmpsb
loope
jl
shrl
mov
scas
not
iret
push
sub
jp
dec
lret
jmp
ja
in
add
push
popa
test
sbb
fwait
or
mov
lcall
mov
mov
push
dec
cwtl
lock
in
lods
fs
sub
test
jae
push
test
lds
je
adc
divb
daa
push
push
pop
testl
std
ljmp
fstps
test
mov
cwtl
inc
mov
mov
insb
stos
sub
mov
or
push
aad
mov
jo
scas
mov
push
adc
jge
dec
fwait
jmp
orl
je
lods
call
and
outsl
sub
push
jnp
clc
enter
pop
fisttpll
sbb
pop
adc
stos
mov
cmp
rolb
sti
rol
ss
sahf
cmpsl
sub
add
out
mov
xchg
pop
cmpsb
jmp
pusha
pop
cltd
test
fadd
xorb
jmp
or
sarl
or
xchg
and
lock
sbb
push
push
fwait
cli
sbb
push
icebp
sub
scas
jp
adc
call
cmc
pusha
adc
mov
pop
lods
adc
insb
leave
jmp
inc
xchg
inc
xor
inc
mov
mov
in
jecxz
dec
pop
cmc
cltd
out
xlat
nop
mov
pop
cld
sub
push
sub
sbbl
ss
dec
mov
lods
pop
lcall
daa
sbb
dec
mov
sbb
adc
or
cmpsb
movsb
aad
push
cwtl
mov
adc
outsb
sahf
dec
cmpsl
aam
jb
cmp
lds
cmp
pop
fistpll
mov
push
mov
xorl
cltd
cld
lcall
jmp
xchg
xor
xchg
imul
mov
shl
out
addr16
cmc
xchg
adc
inc
jo
xchg
aad
fistps
lret
inc
xor
stos
add
mov
js
or
test
decb
adc
pop
in
push
inc
loopne
arpl
imul
in
or
les
push
scas
enter
cmp
rorl
adc
mov
push
mov
pop
mov
mov
xor
sbb
cld
xchg
orb
in
jne
dec
add
push
leave
mov
jp
xchg
in
adc
insb
adc
js
outsb
inc
aaa
lret
dec
adc
xor
pop
insl
adc
ss
pop
and
mov
mov
pop
in
popa
arpl
mov
fidivl
pop
dec
mov
cltd
or
fcoml
xchg
ss
inc
lahf
js
mov
in
jo
mov
bound
jp
idivb
xchg
stc
ss
xor
jecxz
cmp
fcomip
rcrb
in
stos
js
mov
mov
in
add
insb
mov
outsl
dec
imull
cmc
fistps
test
in
cs
jae
sahf
outsl
inc
mov
lds
jecxz
fdivr
addr16
and
ds
stc
out
inc
mov
stos
mov
arpl
outsb
xchg
sbb
decl
ljmp
ja
xchg
ret
dec
mov
dec
sbb
inc
sub
mov
xchg
jne
mov
repz
add
sbb
push
mov
std
pop
sbb
aaa
or
lea
xchg
jg
pop
xchg
fisttpll
ds
cmpsb
cltd
xor
mov
cmpsb
xchg
std
mov
cli
pop
iret
cmpsl
dec
inc
add
fidivs
bound
jbe
out
ret
mov
in
inc
js
xchg
lods
xor
mov
pop
xor
cmp
adc
popf
icebp
lahf
sub
add
das
aas
sbbb
and
out
and
ficoml
xchg
sbb
adc
iret
icebp
lea
ror
test
and
cli
adcl
sbb
pop
inc
cmp
ds
or
xchg
test
ds
mov
int3
ss
push
rcll
or
popf
add
inc
mov
enter
sub
dec
jmp
fwait
rcrb
jae
lahf
adc
mov
ret
mov
daa
outsb
aas
loop
call
sahf
cmp
vcvtss2sd
dec
sub
mov
and
cmp
imul
hlt
or
mov
into
sbb
scas
aaa
cmp
enter
repnz
aaa
or
dec
mov
cld
adc
pusha
lods
stos
bound
push
mov
mov
mov
call
mov
sub
call
lea
push
inc
call
inc
imul
and
sub
lea
movswl
call
lea
mov
add
dec
lea
inc
inc
inc
or
mov
or
and
inc
sub
call
dec
add
dec
inc
imul
call
or
call
lea
inc
inc
mov
mov
lea
add
or
dec
pop
dec
inc
inc
add
dec
pop
movsbl
mov
pop
imul
add
dec
inc
pop
add
dec
mov
lea
dec
add
mov
mov
pop
mov
and
pop
add
dec
mov
mov
or
call
sub
dec
imul
lea
ret
xor
xor
push
sub
and
push
add
mov
push
inc
mov
push
and
dec
push
mov
inc
mov
dec
push
lea
ret
push
imul
mov
lea
add
lea
add
inc
push
dec
mov
push
and
call
pop
ret
jmp
inc
xchg
dec
mov
lea
inc
xor
dec
mov
dec
lea
inc
lea
dec
dec
jne
mov
mov
add
mov
pop
inc
mov
pop
mov
mov
pop
sub
or
inc
mov
inc
mov
and
mov
dec
inc
dec
add
ret
push
dec
xor
inc
lea
sub
lea
dec
movswl
push
push
push
push
sub
imul
inc
push
lea
dec
lea
mov
inc
mov
inc
mov
lea
mov
inc
push
dec
dec
xor
imul
mov
push
imul
movzwl
push
dec
dec
pushl
xor
call
and
add
mov
dec
mov
mov
dec
mov
lea
pop
ret
and
mov
inc
dec
inc
inc
add
add
imul
dec
dec
mov
or
inc
cmp
jb
lea
mov
inc
lea
xor
mov
xor
mov
dec
pop
dec
add
test
jbe
mov
mov
movzbl
imul
sub
add
dec
mov
inc
lea
inc
movswl
dec
mov
inc
inc
or
mov
imul
and
and
imul
imul
mov
xor
dec
movzbl
dec
sub
add
dec
mov
and
inc
mov
mov
mov
inc
mov
and
inc
mov
imul
mov
imul
sub
add
movzbl
mov
dec
dec
jne
dec
mov
and
sub
lea
or
mov
inc
xor
mov
add
add
mov
dec
add
mov
mov
mov
mov
mov
mov
mov
add
sub
test
jbe
imul
inc
imul
inc
mov
mov
mov
xor
lea
lea
sub
inc
xor
mov
mov
inc
inc
mov
inc
inc
lea
lea
and
dec
add
mov
dec
mov
movzbl
mov
sub
add
dec
lea
and
sub
lea
mov
movswl
xor
movzbl
imul
movsbl
mov
mov
dec
mov
dec
mov
movzbl
lea
dec
add
dec
mov
and
sub
inc
movzbl
sub
jmp
push
call
lea
xor
inc
dec
xor
dec
mov
inc
dec
imul
inc
dec
add
xor
inc
movzbl
lea
add
shl
dec
lea
xor
dec
lea
push
lea
movzwl
imul
call
add
pop
add
dec
sub
mov
inc
mov
lea
mov
cmp
je
call
call
sub
iret
inc
mov
pop
movswl
ret
push
inc
dec
inc
lea
mov
push
mov
mov
push
lea
push
movzbl
push
dec
xor
push
dec
lea
xor
imul
and
call
xor
push
lea
push
lea
pop
lea
mov
mov
dec
or
mov
inc
imul
inc
and
inc
dec
je
sub
mov
mov
or
dec
inc
mov
dec
and
mov
mov
inc
mov
mov
inc
movzbl
mov
repnz
mov
inc
add
mov
jmp
mov
dec
lea
lea
mov
imul
lea
mov
add
add
dec
sub
dec
lea
mov
lea
pop
pop
jmp
ret
push
mov
mov
add
or
xor
add
xor
sub
mov
sub
add
dec
mov
add
and
add
add
dec
lea
mov
mov
sub
movzbl
mov
dec
add
mov
dec
pop
ret
sub
sub
mov
mov
mov
mov
movsbl
lea
mov
mov
mov
mov
dec
mov
xor
dec
dec
mov
dec
mov
inc
imul
mov
inc
dec
inc
lea
cmp
jb
imul
push
movzwl
dec
push
sub
mov
push
mov
lea
mov
add
inc
xor
add
dec
xor
dec
inc
xor
dec
inc
push
sub
mov
xor
imul
add
mov
imul
mov
inc
movzbl
add
inc
sub
add
mov
mov
add
dec
mov
movzbl
dec
dec
xor
dec
lea
add
dec
inc
mov
mov
mov
xor
movsbl
sub
dec
lea
cmp
jb
inc
xor
mov
mov
movswl
jmp
ret
sahf
mov
xchg
dec
std
rcrb
mov
loopne
hlt
add
push
jp
out
rol
ljmp
sti
sub
push
shl
mov
loop
cli
push
jle
push
je
gs
or
into
dec
loope
jnp
adc
ss
add
mov
jne
sub
fwait
movsb
add
and
test
sahf
xor
hlt
push
inc
movsb
fwait
das
outsb
imul
test
inc
mov
fwait
push
pop
mov
jmp
dec
mov
pop
repz
pop
and
push
data16
push
imul
sub
push
test
or
cmp
mov
cmpsl
divl
add
pop
push
in
jns
cli
lea
cmp
ret
out
cmp
call
mov
cmp
jecxz
xchg
add
push
adc
insl
pop
xchg
test
xchg
ret
scas
or
or
add
imul
cltd
std
mov
xchg
imul
pushf
and
pop
jle
mov
icebp
sarb
shll
out
outsl
adc
rorl
cmpsl
xor
xor
mov
lock
pop
lods
aad
or
fistpll
fldcw
imul
enter
leave
shrb
xor
xchg
mov
pop
sub
in
push
test
clc
pop
xor
clc
pusha
movl
dec
cltd
or
int
inc
inc
shrl
dec
call
aaa
out
scas
xchg
push
mov
jmp
xor
into
cmp
pop
aad
dec
addb
xor
outsb
movsb
roll
cwtl
inc
shll
jl
cmp
sub
pop
mov
pop
sahf
stc
cmpsl
push
fwait
sbb
mov
fmull
xchg
jl
lea
dec
lods
or
aam
test
xlat
sub
add
mov
addr16
jl
jecxz
shrb
rol
insl
sbb
mov
push
inc
in
fcoml
out
jl
sub
imul
cmp
repz
inc
cwtl
sbb
sbb
inc
cwtl
lds
mov
test
aaa
jg
mov
xchg
fwait
jmp
cmp
test
add
cmc
xor
loope
cmc
movsl
out
es
add
dec
pop
sub
xor
lcall
lods
jns
mull
aad
pop
jo
lret
lods
pop
jns
cmp
daa
cmp
test
cmp
cmp
ss
and
cmp
out
mov
xor
mov
lods
jle
jl
fistl
nop
loope
jg
adc
imul
jb
or
jbe
sbb
push
push
into
cmpsb
ret
stos
adc
adc
enter
fldl
push
mov
out
cmc
test
push
out
jns
std
xor
mull
mov
cmp
push
sbb
mov
xchg
xlat
pop
push
pop
out
add
adc
fwait
inc
test
and
sub
or
xchg
ret
es
jp
lods
xchg
aam
in
sbb
out
int
mov
das
mov
test
dec
dec
mov
or
mov
shlb
mov
arpl
or
lcall
and
xchg
adcb
jmp
hlt
iret
call
pusha
das
scas
dec
out
test
push
pop
pop
add
mov
fstpl
rorb
ret
inc
repz
in
jae
or
push
ja
inc
jmp
cvtps2pd
rolb
pop
mov
xchg
sti
cmp
jnp
xor
inc
fcom
or
push
imul
sahf
inc
cmpsb
dec
decb
scas
bound
sahf
int3
cmp
dec
sub
data16
popa
mov
loop
lahf
push
add
imul
xchg
dec
sbb
jl
into
adc
int3
xor
fsubrp
mov
jmp
pop
pop
lcall
jge
movsb
leave
mov
cld
dec
fistpl
jmp
lea
loope
scas
jmp
test
xorl
sub
mov
pop
insb
lcall
inc
nop
cmp
rorl
and
cmp
xlat
daa
pop
int
mov
sub
in
xchg
lock
aam
mov
jbe
sbb
mov
rorb
cmpsl
cmp
aam
fnstenv
and
and
out
cmp
notb
jmp
or
add
scas
mov
xrelease
int
inc
pcmpeqd
ljmp
scas
sbb
imul
cmc
xorl
nop
lods
lret
dec
clc
adc
push
or
fdivp
add
addb
adc
mov
push
adc
pop
and
mov
mov
test
sahf
adcb
pop
jecxz
xchg
repz
sarl
mov
stos
ss
leave
lock
cmp
xorb
ret
sahf
in
or
insb
sub
push
dec
and
fmul
dec
push
mov
dec
inc
push
jnp
mov
pop
in
cltd
fdivs
fistl
out
fcmovu
and
arpl
fstps
js
hlt
adc
fcoml
out
pop
adc
lea
stc
cmp
xor
test
fstpl
std
call
xchg
lea
cltd
movsl
dec
outsb
dec
push
adc
ret
lods
or
and
jns
xchg
xchg
mov
cwtl
adc
ja
ret
jns
mov
stc
out
sub
aaa
push
xchg
sti
jecxz
stos
push
cmp
fcompl
mov
add
jbe
push
cmp
mov
jae
mov
rol
dec
dec
fwait
xchg
mov
outsl
xor
lea
das
cli
dec
inc
insl
add
pop
sbb
mov
push
mov
and
sub
pushf
or
rcr
adc
adc
mov
and
and
mov
stos
sub
push
xlat
loop
inc
adc
mov
push
test
mov
push
dec
jp
push
inc
inc
ss
repnz
jge
push
mov
addr16
adc
mov
xor
pop
xchg
mov
ljmp
pop
or
stos
out
xchg
fndisi(8087
mov
mov
test
push
pop
mov
jb
dec
sbb
jp
into
dec
or
sbb
shlb
xlat
push
leave
aam
sub
mov
hlt
dec
es
pop
pop
pop
push
mov
popf
mov
jnp
repnz
js
in
nop
cmp
jne
call
lcall
sbb
xor
jg
xor
cs
adc
out
cmpsl
mov
mov
mov
insb
mov
aas
dec
int3
lahf
shlb
fidivs
ret
push
shrb
jbe
mov
push
cltd
adc
loopne
aas
cwtl
pusha
lods
cmp
sub
outsl
arpl
enter
fimuls
mov
cmc
and
and
shlb
sub
clc
sbbl
lcall
xlat
outsl
jnp
out
aas
push
fnsave
mov
mov
ds
inc
les
ds
mov
mov
je
sbb
shlb
jo
mov
dec
jmp
xlat
xchg
mov
push
or
mov
test
and
jae
in
push
movsl
cltd
push
ficompl
inc
mov
mov
or
inc
daa
or
stos
data16
mov
xchg
and
nop
push
push
mov
sbb
ret
in
pop
mov
sbb
and
pop
push
inc
pop
pop
cld
out
cmpsl
jmp
xor
inc
mov
or
lock
push
mov
and
mov
mov
dec
mov
push
sbb
add
insl
and
cmp
dec
aad
dec
cmpsb
jns
adc
push
sub
mov
arpl
cmpsb
cs
scas
mov
inc
jne
jnp
fwait
in
push
dec
ret
mov
stc
and
loopne
cmpsb
js
jae
je
or
add
and
addb
dec
fdivl
ret
jge
ljmp
jge
and
sbb
xor
or
adcl
dec
xchg
daa
inc
adc
test
pusha
xor
repz
aad
lods
adc
loopne
add
sub
js
add
inc
xchg
jle
int3
push
xchg
outsb
or
mov
fildll
dec
pop
test
add
std
cli
push
sub
sbb
sbb
dec
jbe
sbb
cmp
test
xorb
pop
scas
sub
mov
lods
mov
mov
xor
sub
mov
pop
xchg
in
mov
or
jmp
insl
cld
in
mov
or
jbe
lods
loopne
jns
add
push
loop
cmp
in
into
scas
mov
pushf
push
dec
shl
mov
inc
add
push
inc
fcomps
or
int
jge
and
cmp
arpl
test
daa
fadds
and
sub
cmp
sti
icebp
fwait
mov
xchg
xchg
inc
push
pop
pop
pop
jp
push
push
mov
mov
subb
rolb
cmpsl
mov
out
cmp
adc
ffree
mov
inc
xor
push
loope
dec
adc
cltd
sbbb
and
add
dec
cmp
addr16
mov
clc
hlt
jns
mov
mov
sete
mov
jle
pop
stos
xchg
dec
negb
test
and
cmp
sarb
push
je
pushf
jb
mov
push
insb
add
mov
lcall
jecxz
jle
and
outsb
xor
fldcw
aas
scas
fidivrs
out
bound
pop
pop
sub
lcall
sbb
mov
shrb
setg
mov
cmp
jnp
push
out
mov
pushl
cld
mov
pop
push
push
outsb
repz
shrd
hlt
sbb
mov
mov
add
push
insb
push
je
mov
mov
pop
arpl
repz
andl
aam
lahf
xchg
pop
ret
jp
inc
and
sub
adc
int3
jmp
mov
fs
rorl
leave
enter
sahf
mov
sub
mov
movsl
jmp
loopne
insl
ljmp
mov
cmp
and
mov
add
sti
push
int3
mov
xchg
lcall
and
and
test
pop
cmp
out
sahf
inc
test
iret
movsl
pushf
inc
aaa
jle
xor
inc
lods
jne
rcl
stos
insl
mov
xchg
mov
pop
sarb
mov
jne
in
in
leave
test
outsb
mov
xchg
fwait
idivl
in
mov
into
sub
add
mov
scas
mov
repz
gs
inc
sbb
and
jns
or
loope
stos
push
in
pop
stc
dec
gs
cmp
je
icebp
lock
xchg
sbb
outsl
jge
orl
xlat
test
loop
dec
fstps
add
hlt
pop
push
aaa
popf
cmp
lods
jbe
or
insl
push
ja
arpl
adc
push
push
enter
xlat
int
xor
pop
mov
stc
add
push
std
insb
adc
xor
adc
lret
mov
adc
loopne
dec
or
sahf
xor
shll
jb
out
in
or
push
scas
mov
pop
mov
out
sub
jecxz
addr16
jns
push
add
scas
and
mov
xor
jb
cmp
sub
lret
rcrb
in
cmpsb
inc
sub
and
test
dec
loope
or
sbb
pop
pmuludq
outsl
mov
pop
pop
daa
jmp
mov
jle
sbb
mov
test
fiadds
rcrl
mov
int
ret
in
imul
rsqrtps
cmp
cld
lcall
push
orl
das
test
stc
inc
es
in
insb
mov
shrb
aas
cmp
pop
inc
dec
scas
pop
push
pop
aas
in
pop
sub
adc
les
sub
cmp
add
loop
mov
cmp
push
xchg
lods
pop
mov
mov
mov
push
roll
dec
bound
in
push
fnsave
add
pop
lods
ja
mov
and
movsb
sahf
jp
pushf
pushf
or
mov
mov
in
imul
mov
insl
outsb
ss
or
imul
lahf
sub
mov
rcr
cmpsb
jp
loop
dec
dec
test
ss
cmc
fwait
hlt
fistl
lods
js
fwait
je
xchg
std
enter
inc
cmpsb
xchg
out
loopne
jle
or
cmpsb
push
decb
add
xor
inc
fcomps
push
cli
or
sarb
out
xor
test
sahf
stc
jl
clc
xor
cltd
into
xor
push
cmpl
lret
lret
push
stos
dec
int3
imul
add
aad
mov
sub
insl
mov
xor
jp
dec
pop
stc
jge
es
ja
lock
pop
mov
test
nop
sub
cli
scas
mov
inc
test
push
or
add
push
pop
dec
push
sbb
loopne
aam
push
mov
outsl
mov
imul
scas
leave
pop
ret
jo
dec
fs
cmp
cmp
adc
ja
addr16
bound
jnp
iret
and
arpl
arpl
mov
push
dec
cs
scas
pop
cmp
jo
stos
mov
fisubrs
cwtl
adc
int
cltd
in
loope
push
cmp
sub
or
cmp
mov
cmp
pop
fiaddl
pop
push
mov
push
cmpsb
dec
scas
dec
addr16
push
inc
inc
mov
mov
fs
sbb
adc
lahf
jmp
mov
scas
xchg
jg
movsb
inc
add
push
pop
test
sub
je
lods
push
cmp
lock
lods
ret
mov
nop
add
loopne
mov
rcl
lcall
pop
push
mov
add
xchg
mulb
lret
sbb
repnz
daa
xor
add
mov
sub
push
add
xor
sbb
sub
mov
popa
lock
cmpsl
dec
lcall
loope
sbb
push
fidivrs
and
adc
sbb
jg
aas
sbb
dec
push
popa
pop
add
inc
roll
cltd
sti
push
lods
shrb
lahf
lds
mov
test
test
mov
sub
mov
das
lea
sti
nop
aam
mov
jnp
sbb
inc
repnz
adc
pop
loope
fwait
add
dec
out
clc
inc
divb
clc
int3
xor
jmp
fidivl
addb
cmp
fnsave
inc
or
pop
jg
loope
rorl
mov
inc
shl
jne
mov
test
jmp
into
sub
es
out
sub
sbbl
jno
and
xchg
lods
or
push
xchg
loope
push
or
xchg
jo
sub
fnstsw
adc
fnstcw
mov
lds
and
repnz
adc
push
xlat
fiadds
adc
and
mov
mov
cmpsl
aad
into
mov
push
lret
mov
popf
push
sub
clc
adc
fmuls
stc
xchg
hlt
mov
mov
scas
pushl
out
int3
loopne
inc
in
jmp
loop
inc
es
cs
mov
in
dec
inc
aad
jge
movsb
add
inc
rorb
adc
cmp
aas
mov
xchg
mov
filds
xor
ljmp
jb
add
sub
mov
mov
lods
fimull
adc
mov
clc
lock
test
repnz
cmp
or
and
mov
je
mov
sub
shlb
das
fildl
jne
div
sbb
in
mov
xchg
mov
cmp
stos
loope
out
pop
loope
pop
xchg
test
dec
inc
inc
push
das
sbb
jmp
dec
sbb
insb
cmp
test
addr16
mov
fisubs
lods
rclb
test
popa
mov
cmp
and
mov
lahf
cmp
jb
or
fdiv
push
fldcw
cmp
and
incb
lock
test
jmp
inc
and
inc
xchg
sub
pop
repnz
fs
cmpsb
push
popf
mov
jl
inc
sbb
pop
pop
ret
push
sbb
arpl
mov
aaa
arpl
push
test
inc
mov
gs
sub
test
inc
pop
dec
cmpsb
cmp
das
movsl
addr16
xchg
ror
addr16
out
cmp
int3
in
outsb
mov
out
dec
in
xor
lret
and
mov
and
in
enter
mov
std
inc
stc
sbb
pop
iret
dec
xchg
jmp
jl
sbbl
or
dec
or
aaa
mov
mov
cmp
stos
xor
fdivrl
mov
test
imul
pushf
cmpsb
lret
rcl
out
or
push
pop
adc
cmp
fprem
xchg
int
jmp
nop
shrb
andl
adc
mov
fs
dec
test
cmp
cmp
mov
xchg
lea
rclb
shrb
sub
adc
cld
imul
push
sti
push
mov
lcall
sbb
insl
pop
xchg
push
enter
xor
mov
add
sub
push
ret
and
push
aad
cmp
dec
movsb
leave
xor
fmull
pop
mov
in
cmpsb
in
into
pop
stc
dec
dec
dec
jge
push
es
andb
add
into
mov
out
loopne
jne
loopne
xchg
sub
xchg
jbe
mov
mov
outsl
fmul
xor
adc
ficompl
dec
int
fwait
rol
fcmovne
bound
mov
inc
xor
jae
fnsave
inc
lahf
inc
mov
push
ja
sbb
adc
dec
mov
das
aaa
loopne
shl
mov
aam
shrb
jl
mov
je
pop
nop
into
dec
ds
int3
pop
xor
mov
out
jno
sti
adc
mov
mov
fists
mov
insl
xor
adc
or
pop
sub
push
xor
push
or
xchg
dec
xchg
mov
jnp
mov
inc
push
pop
aam
test
xchg
and
fwait
movsl
call
sbb
je
sbb
jmp
pop
mov
je
mov
pop
pushf
xchg
xor
and
mov
dec
adc
and
mov
mov
cwtl
mov
adc
jl
stos
sbb
mov
jmp
or
fdivrl
mov
cmp
hlt
adc
and
or
cmpl
loope
data16
cmp
mov
into
fcomip
arpl
or
aaa
repnz
lea
push
imul
pop
dec
cwtl
mov
add
lods
decb
inc
lcall
mov
sbb
icebp
add
cmp
lret
ljmp
fisttps
outsl
lock
bound
clc
inc
cmpsl
mov
dec
clc
dec
je
or
bound
mov
repz
xchg
enter
pop
pushf
shrl
jns
or
pop
push
pop
xor
adc
test
mov
or
movsl
dec
lods
jle
std
push
sbb
jmp
dec
or
dec
roll
fisubl
mov
jp
push
pop
mov
dec
aam
adc
out
or
mov
inc
iret
insl
sub
andl
lret
jg
push
cld
pop
push
or
stos
push
movsb
and
dec
push
sub
leave
dec
sti
ljmp
mov
lods
dec
pop
sub
pop
jne
push
lods
es
lea
push
ficompl
push
mov
push
popa
andb
adc
cmpsl
xchg
out
jno
int
pusha
aaa
cwtl
cwtl
fcmovu
pop
jno
test
pop
lds
ja
ret
mov
and
aad
mov
btr
lock
mov
fmull
add
inc
cmpsl
xor
rcll
mov
jmp
data16
icebp
cwtl
pop
daa
adc
scas
mov
xor
and
add
insl
pop
test
fwait
xor
out
lds
dec
addr16
or
cltd
xchg
dec
loope
xchg
sub
ret
mov
sub
or
cmc
sbb
sbb
adc
mov
xor
add
inc
jae
data16
rorb
das
test
ret
pop
fistl
setg
call
das
in
sub
stos
add
clc
push
mov
pusha
add
push
orl
js
adc
rorl
jmp
inc
jmp
inc
mov
clc
je
aas
mov
outsb
xchg
jns
insb
gs
dec
in
push
outsl
ds
cmpsb
jns
daa
mov
xchg
add
lret
out
sti
jp
jnp
mov
adc
imul
stos
mov
int
cltd
push
mov
movsl
pushf
adcb
shlb
adc
inc
repz
test
dec
sub
xchg
pop
xchg
mov
js
cmc
push
outsb
sarl
dec
bound
add
or
push
lods
push
outsl
mov
mov
push
mov
fists
push
push
xor
mov
mov
dec
jo
fmulp
mov
or
aas
ss
out
shrb
loopne
lea
or
aas
sub
rol
sbb
in
icebp
arpl
mov
je
ds
push
mov
inc
daa
mov
movsb
out
pop
mov
jmp
xchg
pop
sbb
movsl
cmc
inc
leave
push
test
aaa
cmpb
addr16
dec
test
mov
shr
xor
sbb
scas
les
dec
les
fsubrl
ja
cli
jp
cmp
jo
dec
lock
mov
or
cmp
and
sbb
shll
into
pop
mov
pop
or
test
loop
push
lahf
inc
les
dec
push
fnstsw
xchg
cmpsb
jp
ds
adc
enter
in
ret
xlat
push
fnsave
cmc
and
adc
xchg
into
sbb
ds
sti
divb
icebp
sub
mov
sub
les
jmp
cmpsl
xor
pushf
aas
mov
and
bound
in
bnd
add
mov
jg
aaa
jp
mov
adc
xchg
inc
iret
push
roll
mov
mov
stc
imul
add
xchg
inc
jo
push
sbb
lods
and
jp
inc
mov
mov
pusha
lahf
sub
jmp
adc
rclb
addr16
or
pop
adc
das
int3
adc
sbb
pop
fldcw
xor
stc
mov
jecxz
daa
pop
test
popa
mov
mov
mov
xlat
daa
and
and
mov
pushf
loop
ret
test
shll
sbb
or
outsl
sub
inc
sbb
mov
push
jg
mov
cmp
scas
mov
mov
ret
sub
sub
pop
add
jno
and
or
sbb
stos
std
pop
xchg
jmp
mov
bound
inc
xchg
clc
std
pop
jmp
xchg
dec
jae
xorl
pop
or
push
xchg
xor
test
loope
fistps
fsubr
push
mov
pop
xlat
add
jae
daa
loope
arpl
fiadds
and
jae
mov
jo
sub
repz
jl
and
pop
adc
std
outsl
sahf
popw
sarl
out
dec
xchg
mov
std
sbb
mov
in
sbbl
cmp
mov
movsl
jb
repnz
cltd
xchg
pop
enter
dec
std
cmp
mov
clc
cs
call
test
je
pusha
push
add
pop
or
orl
pop
aam
cli
imul
cli
sarb
pop
sbb
dec
into
test
inc
dec
or
jne
sti
mov
dec
adc
and
or
test
fwait
sub
inc
shll
jno
stc
outsl
rclb
xchg
hlt
push
sub
dec
add
lock
cmpsb
push
popf
push
into
xor
or
iret
les
xor
jno
sub
popf
jnp
sub
out
sahf
call
adc
fisttps
out
int3
dec
and
inc
xor
dec
fwait
jl
loop
pop
lcall
jo
sbb
cli
mov
mov
std
mov
or
mov
shlb
std
mov
mov
cwtl
adc
jmp
rcrl
frstor
or
loope
pop
lea
add
mov
jecxz
sbb
jbe
jne
xchg
stos
xchg
sbbl
stos
or
or
je
mov
push
xchg
add
pop
adc
gs
adc
ret
lds
inc
mov
jle
adc
jecxz
leave
push
mov
stos
pop
imul
sarb
mov
or
fldcw
mov
stos
jmp
rcl
pop
lahf
dec
clc
cmc
ja
xchg
add
sahf
push
mov
cmpsl
stos
shll
xchg
fmull
add
push
and
mov
sbb
imulb
mov
scas
pop
jle
jbe
inc
repz
fwait
mov
fwait
mov
lcall
fwait
popf
in
push
push
xchg
gs
aad
mov
mov
or
pop
scas
xchg
test
pop
daa
xlat
push
xor
adc
fnstsw
cltd
int
push
push
fldl2e
neg
sbb
mov
and
rol
inc
stc
xchg
inc
cmp
arpl
and
lock
movsb
push
mov
lds
dec
jnp
dec
cmpsl
add
and
dec
xchg
sub
xchg
roll
outsl
and
add
pop
daa
lods
shlb
xor
ret
xlat
iret
mov
dec
lret
dec
addl
leave
jbe
dec
int
sahf
mov
xchg
xor
pop
add
mov
sbb
and
in
inc
dec
lcall
and
mov
aaa
pushf
sbb
ret
jp
cmp
sbb
inc
shll
pop
jae
xor
jecxz
jo
les
icebp
call
xor
push
and
pop
mov
pop
call
dec
mov
hlt
jge
out
sbbl
stos
push
jl
add
or
pop
mov
sti
pop
lahf
mov
mov
pushf
dec
movsl
fldl
mov
loopne
sub
sbb
stos
jl
das
ds
xorl
inc
sub
movsl
ja
loopne
and
sub
xlat
cs
andb
repnz
outsb
adc
jecxz
aaa
jg
int
xlat
push
ret
add
pop
cli
sub
outsl
push
inc
shll
gs
mov
sub
addb
inc
arpl
adc
or
sub
popf
jp
fs
dec
mov
lds
adcl
xlat
cmp
popa
hlt
popa
dec
je
dec
and
pop
fidivrs
lcall
xor
sarb
dec
cs
jle
into
jnp
dec
or
or
pop
adc
add
insb
cltd
pusha
mov
repnz
cmc
leave
loop
js
mov
jmp
mov
lret
int3
call
shll
js
insl
ljmp
mov
add
test
hlt
stos
xlat
or
and
lcall
add
in
loope
or
sub
jmp
rcrb
mov
rclb
fistpl
fcoms
xlat
dec
cli
jbe
cmp
pusha
jle
fsubrl
ss
inc
mov
stos
rcrl
xchg
popf
outsb
inc
add
int
xlat
test
test
add
pop
push
popf
add
aas
xchg
xchg
mov
mov
jae
incb
pop
icebp
inc
insb
inc
push
out
xor
and
mov
push
xor
mov
int
or
xor
and
into
add
leave
leave
xchg
insb
loope
jb
fidivs
adc
and
cltd
jno
inc
punpckhdq
ror
call
pusha
iret
mov
dec
inc
xchg
jb
es
inc
cltd
xchg
inc
mov
test
ret
in
xchg
and
jp
pop
fists
in
push
inc
xor
pusha
in
sub
dec
and
sbb
stos
pop
push
sti
stos
or
mov
iret
jno
xlat
push
test
bound
jp
mov
ljmp
pop
pop
cmp
push
jno
pop
stos
or
test
sub
aaa
sub
pop
outsl
movl
nop
pushf
push
mov
sbb
xor
jp
out
inc
xchg
js
in
jge
fcom
mov
sub
xchg
sub
push
mov
mov
xchg
nop
mov
dec
stos
cld
test
push
ss
jae
xor
sub
in
mov
or
cmpsl
sbbl
fimuls
sbb
lods
add
rcrl
fistps
push
pusha
sbb
jp
cli
inc
xor
jg
jp
inc
push
inc
hlt
popa
testl
inc
mov
int3
cli
mov
xchg
or
outsl
es
xchg
dec
add
xor
shrb
inc
out
lods
aam
sarl
fs
mov
lods
iret
mov
lea
lock
jl
inc
adc
mov
mov
imul
ss
mov
sbb
mov
xor
mov
testb
xchg
push
mov
jb
mov
lods
mov
mov
and
aas
testb
iret
dec
jo
mov
sub
inc
jmp
je
inc
pusha
xor
sub
dec
scas
mov
jge
adc
sbb
int3
aam
shrl
std
daa
or
xchg
out
mov
fldcw
stos
xchg
push
lods
sub
push
cmp
dec
inc
adc
dec
fisttpll
adc
adc
scas
push
insl
sbb
test
mov
ficoml
xor
sub
fwait
leave
jecxz
sti
push
jmp
push
fwait
or
movsb
inc
adc
mov
and
lcall
mov
adc
rcl
cmpsb
out
iret
es
leave
cmp
and
mov
sub
push
neg
sub
jne
xor
sbb
pop
pop
inc
mov
lea
fidivs
es
jae
in
inc
in
pushl
mov
int
iret
adc
out
std
jle
stos
mov
fldenv
dec
jbe
inc
or
cmp
add
test
dec
stos
inc
or
in
or
dec
dec
xchg
and
test
push
pop
mov
or
add
insl
into
adc
and
xor
dec
dec
adc
out
jg
fsub
lret
pop
adc
xor
lret
xchg
push
xor
lahf
xor
hlt
lret
into
aaa
mov
xchg
lea
pop
xchg
pop
fcmovbe
orl
frstor
or
test
sbb
adc
nop
stos
add
mov
adc
lret
out
or
add
dec
lret
insl
adc
rorb
pop
sbb
mov
push
subb
lods
add
pop
xchg
imul
dec
pop
xlat
pop
testl
inc
jb
adc
jb
test
enter
add
insb
and
mov
lea
in
cmp
xchg
sbb
es
ds
sahf
jae
jg
icebp
xchg
inc
inc
mov
jle
sbb
xchg
rorb
push
cmp
popa
jo
stos
testb
jne
cmp
std
mov
faddl
cmp
lret
cmp
xchg
adc
mov
or
mov
lock
outsl
insl
cmp
mov
dec
inc
cmpsb
lods
xor
mov
shll
jl
cld
jne
kmovb
add
popf
into
popa
push
scas
push
lret
add
mov
lock
push
mov
mov
jns
lahf
fldz
sub
insb
inc
mov
int3
int
mov
mov
push
dec
sbbb
mov
dec
jge
lods
dec
xchg
mov
pop
imul
cmp
adc
stc
pop
xor
xchg
xor
xchg
xor
inc
or
bound
sar
cmp
xor
dec
jmp
int
fcmovbe
movsb
cld
jno
scas
cmpl
dec
and
and
pop
sub
std
pop
push
mov
pop
mov
xor
jmp
call
and
adc
in
fcomps
mov
into
jo
dec
inc
xor
sbb
lock
mov
pushf
fistps
mov
mov
pop
fcmovu
xchg
outsl
stos
and
ss
jo
xchg
int
pushf
and
sahf
push
test
pop
or
dec
ret
sbb
mov
jne
invd
fidivrl
jge
popa
sti
push
dec
sub
ljmp
lea
loop
icebp
loopne
mov
sub
pop
daa
pop
lock
or
jl
arpl
xor
inc
sbb
sahf
inc
lds
fs
lods
insl
sbb
nop
loopne
mov
rorb
shlb
push
popf
faddp
mov
cmp
and
or
js
sub
jno
pop
inc
mov
roll
xchg
imul
lds
inc
lods
jne
jp
vpandn
pop
scas
loop
inc
rcrl
push
stc
sub
jo
iret
add
rcl
fnsave
xchg
mov
fimuls
add
aaa
imul
xchg
sbb
call
sahf
mov
sahf
push
pop
cmp
leave
fsub
repnz
cmp
cmp
pop
sub
scas
ds
pop
rol
fists
dec
cmp
flds
jp
add
and
rcll
sub
dec
les
xchg
xchg
lods
sub
lock
fdivrl
xor
outsl
xchg
ja
mov
push
and
sbb
aaa
push
mov
dec
mov
xchg
ljmp
lahf
popf
xchg
mov
test
lods
cmc
fadds
cmpl
jmp
dec
cld
imul
cmpl
sbb
sbb
sti
mov
repnz
inc
bound
pop
negb
sbb
out
mov
push
mov
sbb
adc
das
je
add
mov
adc
inc
inc
test
jl
sbb
imul
xchg
aaa
pop
mov
or
dec
loop
popf
movsl
cmpsl
cltd
push
mov
jbe
mov
test
pop
dec
ja
jae
inc
inc
lcall
out
repnz
or
std
insl
je
mov
stc
mov
push
imul
push
sbb
and
add
scas
testl
dec
push
xchg
std
cmp
cs
mov
in
movsl
shll
insl
stc
ret
push
sti
jae
push
mov
push
test
push
rorl
dec
scas
dec
mov
mov
jb
or
inc
xchg
mov
jge
or
mov
in
test
push
out
mov
xor
and
push
das
ljmp
sub
cmpsl
inc
stos
std
inc
pop
pop
push
push
insl
adc
push
add
or
aad
push
add
mov
jle
sbb
sub
mov
dec
rorb
lds
sbb
adc
push
loope
ror
mov
mov
adc
push
or
pop
movsb
lods
push
mov
jnp
aad
sbb
inc
sbb
movsl
mov
aas
inc
xchg
mov
ret
test
mov
pop
rol
dec
push
hlt
and
cmpsb
adcl
inc
jb
das
cmp
mov
fidivs
or
shll
test
dec
ja
mov
aas
outsl
aas
pop
adcl
or
push
imul
std
das
pop
jle
dec
sub
fcmovu
daa
stos
adc
dec
mov
inc
dec
in
into
rclb
dec
jns
mov
lds
lock
inc
add
sbb
jae
cmp
cmpl
pushl
pop
jl
mov
pushf
pusha
pop
imul
int
enter
push
xlat
sbb
test
insb
insb
into
lea
dec
lcall
decb
scas
mov
shll
pop
adc
lods
push
aas
xor
clc
xor
push
aad
mov
mov
sti
push
shrb
push
arpl
dec
or
iret
lock
leave
fnstsw
daa
rorb
movb
xchg
mov
out
cltd
lods
inc
pop
cmc
cltd
mov
jl
xchg
scas
dec
ljmp
andl
add
jne
nop
sub
fwait
sub
gs
jecxz
xchg
dec
repz
sbb
repz
pop
test
into
inc
xor
jp
inc
aas
call
or
adc
push
mov
jo
add
xchg
xchg
pushf
adc
aad
pop
imul
mov
dec
in
add
push
mov
popf
cltd
sub
sub
repz
mov
movsb
stos
xchg
int3
add
out
pop
or
xchg
or
push
jnp
sub
das
insl
je
hlt
mov
jo
inc
hlt
clc
pushf
and
pop
loope
aas
dec
adc
fstpl
mov
rorl
ja
movsl
mov
inc
pop
jmp
inc
movsb
inc
and
push
rorb
jbe
push
sub
repz
sarl
mov
leave
bound
pop
lea
cmp
popf
push
sub
add
adc
push
jecxz
push
pop
addr16
xchg
cmp
xor
enter
test
loop
pop
fstpt
insb
xchg
add
outsl
jae
cmp
sbb
cltd
pop
stos
dec
fucomp
popf
inc
dec
sub
sbb
pop
jne
jp
cmp
in
sub
xchg
loop
rcr
cld
lret
mov
jmp
aas
cs
stos
cli
pop
mov
inc
push
repz
pusha
test
jge
xchg
cmp
addr16
lret
push
ljmp
xchg
outsl
daa
mov
push
icebp
add
adc
aad
js
push
adc
dec
lock
cmpsl
mov
test
lret
js
mov
xor
pop
push
insl
dec
stos
xor
sub
lds
cmc
lea
leave
cmp
sub
mov
out
imul
std
pop
fwait
dec
pop
adc
sbb
dec
sub
jb
jnp
data16
sbb
loope
or
pusha
ds
aaa
aas
stos
sub
imul
mov
aas
dec
cs
adc
sbb
in
jge
push
mov
aaa
push
fwait
roll
outsl
pop
mov
pop
pop
loopne
fsubl
add
je
rdpmc
ss
push
mov
ret
jcxz
lods
xchg
mov
rol
out
pop
push
adc
sub
mov
or
gs
inc
loopne
add
movsb
out
push
xchg
xchg
insb
xchg
sub
sub
add
jb
mov
pop
subl
fstps
inc
pop
push
fstpt
scas
loopne
pop
cmp
pop
jle
sub
arpl
push
cld
aas
stos
mov
jb
sbb
push
mov
adc
push
xchg
mov
pop
sti
push
addl
cltd
sbb
fsubrl
sub
add
and
out
int
fldz
jno
cld
dec
data16
mov
mov
rcr
sub
pop
xchg
outsb
xchg
cmp
test
popf
adc
pushf
out
add
sub
push
adc
insl
fstl
and
ds
daa
insl
call
pop
adc
jg
or
sub
or
movsl
mov
jmp
sbbb
push
adc
cmc
xor
or
xchg
pop
push
repz
cmp
jge
xchg
xor
arpl
xor
xchg
push
pushf
in
mov
lret
add
jnp
lods
movsb
ficompl
bound
cmp
popf
jl
or
pop
xor
lcall
ret
mov
mov
adc
call
push
pop
push
inc
stc
hlt
mov
and
jg
lcall
mov
test
or
clc
push
push
das
jg
jge
xchg
testl
imul
dec
push
add
rolb
pop
xor
mov
lcall
shlb
mov
rcll
pusha
repz
stc
ds
stc
dec
mov
sahf
insl
mov
sub
sbb
aas
mov
fwait
cli
pop
cmpl
adc
or
and
loope
add
int3
pop
add
mov
or
repz
fdivl
add
insb
fldenv
jge
sub
fldl
mov
mov
ss
rorb
pop
pop
xchg
popa
mov
mov
dec
cwtl
sbb
xor
sub
mov
mov
push
sub
inc
lds
or
mov
adc
xchg
xchg
test
jo
ret
mov
repnz
jb
shl
test
adc
mov
repz
push
leave
and
jbe
pop
xor
cmpsb
in
mov
push
xor
fisttpll
pop
mov
lcall
clc
inc
insb
imul
shll
fs
in
xor
jne
mov
jmp
or
adcb
fadd
insb
rclb
addr16
icebp
je
out
xchg
lahf
xlat
movsb
sub
sbb
in
out
ja
mov
and
mov
dec
sbb
pop
mulb
adc
and
jne
push
sbb
and
repnz
scas
mov
cmc
rcl
int3
jl
or
mov
enter
mov
nop
dec
loope
xchg
data16
in
add
hlt
cmc
sub
fucomip
add
gs
fstpt
stc
mov
or
adc
xchg
sub
lods
ret
sbbb
in
lahf
add
sarl
lret
fucomp
je
into
xor
xor
pop
jbe
push
push
xchg
mov
push
xchg
pop
dec
inc
mov
int
adc
shrl
loopne
mov
add
fucompp
aad
jl
pop
push
shll
jbe
bt
cmpsl
mov
lock
lea
imul
sbb
push
push
in
sbb
dec
add
xchg
arpl
cli
sbb
dec
sub
iret
hlt
mov
sahf
out
pushf
daa
in
xchg
test
lds
add
xor
aad
cmpl
aaa
mov
mov
cwtl
jnp
int
inc
mov
repz
xlat
dec
mov
frndint
pop
test
insb
and
cwtl
xor
pusha
psubsb
cltd
adc
jbe
stos
insl
xor
sbb
in
jnp
and
pop
in
lock
and
leave
push
push
movsl
xor
xorl
xchg
push
push
mov
push
daa
mov
sub
lcall
inc
or
cmp
jno
rol
int3
push
pop
mov
rep
popa
mov
push
in
push
je
mov
pushf
jp
orb
in
cmp
push
xchg
call
add
dec
rol
mov
shlb
jle
adc
or
xchg
mov
cmp
addr16
shll
sub
adc
jbe
imul
xchg
shrb
popa
enter
fcoms
xchg
mov
ss
add
data16
cs
xor
mov
insl
mov
rcll
test
or
mov
and
stc
fucomi
nop
pop
xchg
and
mov
rclb
xchg
rcll
pop
mov
xor
adc
cmp
popf
pop
cwtl
dec
jb
dec
andb
sub
add
inc
faddl
leave
ret
jb
jo
jno
stc
pop
test
je
in
add
sub
js
out
add
inc
mov
push
ficompl
rclb
js
inc
and
test
decl
aad
add
insb
xchg
adc
fwait
cmp
dec
or
insb
adc
sub
outsl
jne
out
inc
icebp
enter
push
repnz
mov
std
sbb
inc
inc
rcll
nop
xchg
mov
mov
cmp
ja
insl
imul
leave
subl
cmpsl
repz
push
mov
mov
pop
dec
imul
enter
fcoml
mov
jecxz
cli
mov
les
lahf
aas
pop
aaa
dec
push
rcrl
adc
rolb
outsb
insb
nop
and
rcrb
mov
pop
sahf
jo
in
out
fldl
popa
xor
add
fadds
sbb
in
xchg
xchg
mov
int3
cmpsl
loope
jmp
cmpl
mov
or
mov
adcl
das
popf
sbbb
aas
push
xlat
addr16
dec
leave
inc
add
mov
add
xor
loopne
cld
sbb
sti
adc
xor
int3
pop
ljmp
xchg
add
mov
mov
mov
push
or
ret
ss
pop
mov
mov
out
aaa
mov
nop
jae
push
xchg
lods
cltd
rcl
dec
decb
movsl
jns
sbb
dec
mov
jbe
jmp
mov
test
je
xlat
shr
arpl
jns
sub
inc
iret
or
or
push
and
sbb
or
mov
pusha
adc
pushl
loopnew,pt
lret
shl
sarl
dec
cmp
cmc
cmp
out
rcrl
jns
repnz
xchg
rol
in
aaa
jae
xchg
push
ljmp
ljmp
mov
stos
cld
call
mov
test
push
loope
cwtl
movsb
dec
adc
sub
xor
mov
cltd
sar
movsb
sbb
les
sbb
inc
std
jbe
cmp
aam
or
into
lods
xor
mov
in
pop
mov
sbb
sub
pop
cmpsl
cmp
cs
int
in
fucomip
lods
push
mov
cmp
mov
lods
or
cs
dec
pop
sbb
out
mov
cmpsb
iret
push
xor
sarl
in
les
arpl
stos
dec
test
dec
leave
clc
aaa
push
sbb
lcall
shlb
mov
mov
imul
sbb
test
loopne
pop
clc
add
cmp
lods
and
std
push
mov
push
jnp
sbb
dec
int
inc
jns
jecxz
ja
test
pop
add
jb
inc
scas
int3
out
dec
xchg
pop
lea
cmp
js
stos
aaa
sbb
adc
jns
out
mov
fisttpl
pop
dec
arpl
sub
leave
sub
lret
mov
adc
into
cmp
adc
cmp
aad
mov
subb
xchg
mov
fisttpll
mov
out
lret
inc
icebp
jne
cmp
or
in
adc
push
stos
sbb
in
mov
cmp
addps
in
xor
mov
out
shll
imul
mov
cmpb
mov
test
dec
inc
lahf
rorb
out
rsm
test
jge
or
xlat
mov
push
stos
movd
push
dec
rcrb
add
inc
aas
addl
dec
stos
xchg
add
jne
push
inc
jb
jmp
xchg
push
mov
push
mov
lret
out
hlt
stos
cmp
scas
test
jmp
adc
pop
mov
out
in
mov
lods
adc
dec
fwait
mov
popa
dec
and
pop
adc
dec
in
and
fisttps
es
pushf
imul
mov
jp
lret
out
push
mov
addr16
scas
push
xor
fstps
popf
adc
pop
test
fwait
mov
push
xchg
cmp
jl
out
call
push
jne
imul
push
push
orb
push
shrb
loope
loopne
movsb
adc
jae
mov
mov
bound
cmp
xor
testl
sub
es
xor
jp
arpl
cmp
push
stos
or
sbb
clc
jmp
cmpsl
loope
insl
and
cmc
xor
mov
insb
fadds
popa
lcall
jbe
push
pop
add
xchg
lret
mov
aad
cld
push
pop
in
scas
cmpb
leave
pop
outsb
mov
bound
sahf
ja
and
lea
pop
mov
mov
test
xor
daa
lret
lahf
fstl
dec
std
inc
adc
push
mov
pop
sbb
aaa
imul
cli
out
or
mov
gs
dec
ljmp
jne
je
test
mov
pop
push
or
ljmp
test
je
mov
mov
cmpsl
mov
pop
xor
cltd
pop
insl
clc
je
ficompl
adc
xchg
inc
sbb
dec
pop
pop
je
jb
jb
loopne
push
sbb
sub
pop
clc
imul
adc
hlt
cmp
cwtl
lods
lea
scas
repnz
shrl
sbbb
and
faddl
fnstenv
pusha
aam
data16
mov
jo
adc
mov
int3
push
lds
mov
and
mov
pop
shrb
xchg
aad
and
insl
fwait
lcall
cmp
daa
pop
inc
push
xor
inc
push
jge
dec
mov
dec
loop
inc
in
xchg
addr16
jmp
mov
sahf
outsl
adc
shll
jp
or
sub
or
test
std
dec
mov
pusha
ret
pop
lds
cmp
sub
ja
cltd
es
cli
hlt
in
inc
arpl
jmp
lock
lahf
inc
xor
in
sbb
ret
mov
cmp
scas
inc
cmp
inc
jp
jmp
jg
push
ret
xor
mov
mov
jns
aaa
jg
push
fs
add
mov
ljmp
arpl
xchg
popf
mov
pop
jae
or
mov
sub
or
stos
in
push
or
faddl
dec
mov
dec
or
pop
jns
out
xchg
subps
xor
lds
mov
loope
ret
push
sbb
test
jbe
dec
mov
rolb
xor
jns
sbb
shrl
xlat
mov
jb
or
jmp
sub
lea
and
mov
xlat
shll
xchg
pop
les
mov
pop
fimuls
enter
int
adc
sbb
scas
pop
sbb
out
push
aad
fwait
mov
je
dec
push
mov
jb
iret
fbstp
mov
adc
lret
xlat
dec
ljmp
dec
test
test
cmpsl
roll
pop
shlb
adc
nop
in
mov
sbb
or
in
sahf
mov
or
pop
aad
cmp
xchg
inc
fs
mov
movsl
or
push
xchg
scas
js
sbb
ret
inc
mov
xchg
ficoml
loop
adc
lahf
jp
test
jae
cmp
sbb
in
test
lea
scas
mov
dec
mov
mov
sub
cli
dec
jg
xchg
call
fsubrp
mov
fsubrl
ret
in
lahf
mov
jae
sub
outsl
in
icebp
sub
push
xchg
adc
repnz
popf
mov
ja
dec
clc
add
mov
inc
mov
in
adc
pop
sub
icebp
and
lahf
in
in
mov
mov
aas
scas
dec
add
aaa
dec
inc
mov
icebp
xor
sbb
popf
cmp
stos
test
enter
mov
lcall
into
iret
pop
js
cmp
shlb
push
pop
ja
cmp
xorl
addr16
lret
jno
repnz
lods
rclb
imul
pop
inc
add
or
sub
cmp
xchg
pop
imulb
adc
mov
test
iret
aam
in
fimuls
movsl
negl
push
ficompl
inc
and
outsl
cli
call
iret
adcl
cld
testl
mov
push
pop
lods
dec
ljmp
and
cli
repz
and
test
xchg
pop
mov
pop
xchg
xchg
stos
sub
push
sub
or
cmp
aam
inc
out
sti
adc
cmpsb
hlt
je
push
in
daa
icebp
cwtl
push
add
or
lds
cmpsl
insb
andl
adc
jmp
inc
das
adc
xor
jns
in
clc
push
xor
es
cmp
mov
mov
and
repnz
inc
mov
in
sub
subb
sbb
jae
sbbl
insl
les
or
cmpsb
sti
jo
mov
in
adc
je
mov
mov
ret
into
sub
xor
mov
hlt
daa
push
daa
cs
lds
pop
cmp
dec
mov
jp
dec
lods
xchg
cmp
add
scas
neg
xorl
fstpl
call
test
stc
cs
popf
bound
pop
ljmp
add
out
mov
rolb
loopne
mov
cmpl
pop
imul
xlat
ss
js
test
in
addr16
xor
jo
jle
pushf
scas
fwait
dec
or
cmp
inc
pop
fildll
cmp
mov
mov
sub
jne
fwait
jns
jbe
sbb
movsb
xchg
xchg
push
mov
jno
xchg
enter
in
add
mov
fcompl
mov
in
pop
insl
mov
pop
mov
inc
jb
lock
out
stos
or
daa
or
repnz
outsl
adc
mov
aaa
imul
loope
jno
popf
sbb
or
cmp
icebp
or
mov
push
push
cltd
pop
fs
add
lcall
sarl
adc
dec
lds
rolb
loop
or
push
stc
jmp
sbb
movsl
and
xchg
adc
xor
cmp
shlb
ret
xchg
adc
dec
test
dec
xor
or
jno
daa
jns
mov
dec
jo
sub
icebp
push
jbe
xor
les
fnstcw
fldt
mov
sbb
out
fistps
inc
xlat
ss
cmp
push
sub
xchg
pop
mov
xor
sbb
lods
jne
push
inc
xor
imul
pop
das
pop
fsubrl
leave
mov
cmp
mov
mov
std
jne
lahf
aam
jb
setnp
mov
push
dec
adc
xbegin
sub
add
imul
test
sahf
sbb
lock
fs
xchg
mov
dec
xor
add
roll
pop
xorl
sbb
cmp
pop
inc
jnp
cld
mov
movsl
std
cmp
or
or
push
mov
out
pop
fxch
push
int
xor
gs
push
ret
add
js
mov
xor
fxch
lahf
pushf
loop
mov
fld
out
pushf
sub
or
sbb
daa
mov
enter
xor
cltd
ret
push
ret
imul
popf
inc
es
int3
es
mov
pop
repnz
cli
jns
pop
pop
loope,pn
sbb
dec
adc
stc
cmpsl
inc
mov
adc
mov
pusha
mov
cmpsb
dec
cmpl
push
xchg
mov
sti
and
mov
cld
sahf
and
sbb
lret
dec
dec
into
les
push
sub
imul
mov
or
lods
outsl
sub
pushf
mov
data16
push
xor
ja
sbb
cld
pop
ljmp
sub
repz
decb
dec
je
sub
aaa
sbb
jns
js
adc
jb
int3
add
in
rcrb
adc
sbb
lock
fnsave
xchg
cli
pop
leave
pop
mov
stos
aam
cmp
sbb
out
mov
repz
inc
and
cmp
cmp
adc
add
sysenter
in
cmp
dec
jp
dec
jb
jns
cmp
test
mov
int
dec
push
jmp
ret
and
mov
push
test
test
sti
xlat
xchg
bound
adc
cltd
mov
je
push
push
add
sub
aad
in
jnp
lock
xchg
repnz
cmp
inc
sub
adc
xchg
ja
cltd
shrl
jb
push
imul
rclb
aam
jb
testl
xchg
lret
sub
arpl
push
inc
popl
push
adcl
mov
fmull
subl
jp
inc
test
push
sub
scas
mov
iret
xlat
cmp
int
ss
mov
push
mov
sub
rcll
out
lahf
pop
sbbl
mov
int
cmc
or
push
dec
jmp
push
or
outsl
lea
mov
and
mov
orb
push
add
cmp
mov
push
cmp
pop
jge
sbb
mov
fucomp
aas
shl
rcr
insl
jmp
add
jo
cli
push
loope
movsb
fwait
out
and
rclb
aas
push
push
push
cmp
bound
inc
mov
mov
out
jmp
pop
and
repz
cmp
inc
leave
outsb
mov
loope
stos
xlat
nop
cmp
daa
leave
test
fdivl
pop
sub
jle
movsl
test
xor
shlb
mov
lods
js
adc
sbb
in
loop
shrl
lret
inc
and
or
mov
loope
or
out
arpl
inc
lods
mov
ficomps
test
or
xchg
jae
je
jno
iret
add
lea
adc
out
push
xchg
lods
movsb
insb
es
fs
inc
mov
sbb
sbb
negl
shll
jne
lahf
call
xorb
mov
data16
push
ficoml
jbe
lock
jmp
xchg
je
fists
aas
xlat
and
push
sub
pop
or
mov
xchg
push
mov
std
inc
mov
scas
jne
mov
or
iret
and
dec
scas
dec
pop
cmpsb
test
cmp
adc
cmpsb
loopne
or
ss
aas
imul
jb
pushf
lfs
push
dec
out
lock
icebp
xlat
push
mov
dec
movsb
push
cmpsl
xorb
pop
adc
imul
xchg
adc
dec
push
inc
testb
stc
ljmp
cltd
mov
push
dec
or
sarb
xor
movsb
mov
imul
leave
aas
popf
and
jo
scas
dec
push
xor
hlt
cmp
lods
inc
in
enter
sub
mov
jbe
mov
rorl
pop
push
push
lahf
out
mov
push
shrb
xchg
stos
inc
addr16
out
or
daa
sbb
es
cmpsb
inc
xor
mov
cmp
sub
cwtl
cwtl
int
mov
int3
xchg
push
adc
pushf
mov
pop
lods
cli
das
push
in
pop
xor
insb
xor
pop
dec
mov
leave
outsb
pop
mov
or
mov
xor
xchg
cmp
fidivrs
jo
jbe
loop
jns
mov
mov
push
add
or
add
mov
pop
xchg
adc
adc
lods
imul
fidivrs
jmp
ja
pop
das
pop
xchg
ret
pushf
idiv
stc
cltd
out
sbb
lcall
adc
out
push
in
cmp
stos
adc
call
mov
jo
mov
sbb
popf
sti
pop
jg
pushf
xor
push
aam
out
jle
lcall
add
sbb
pop
pop
cmpsb
aas
mov
jecxz
ljmp
xorl
popf
mov
scas
mov
movsl
sbb
xchg
fmull
test
ljmp
bound
jmp
les
xor
sub
and
fnstsw
outsb
mov
cmp
jecxz
cmp
push
mov
cmpsb
fisttpll
sub
pop
inc
cli
and
mov
neg
sbb
sub
sbb
push
inc
pop
std
andb
xor
lea
mov
mov
cmp
push
adc
jge
bnd
andl
adc
mov
sbb
mov
je
js
scas
pop
outsb
test
adc
mov
or
rclb
mov
mov
xchg
push
mulb
into
dec
lods
push
or
push
lods
pop
inc
movsb
lds
or
jbe
sub
lods
jae
mov
addr16
mov
movsb
adc
dec
mov
xchg
jl
fisttpll
shll
inc
cmp
fisttps
roll
xchg
mov
das
adc
insb
ret
jae
mov
cld
pushf
mov
xchg
pushf
cmp
lock
call
adc
lret
not
test
jns
orb
inc
in
jg
sarb
mov
sbbb
int
add
in
nop
fnop
jmp
sub
arpl
repz
jle
repnz
nop
aas
pop
insb
repnz
push
dec
out
mov
pop
jo
xlat
scas
int3
jno
mov
mov
add
sbb
lret
xchg
mov
sbb
pop
pop
inc
pushf
inc
test
or
push
pop
data16
cmp
push
mov
jmp
dec
lahf
test
int3
nop
aad
cmpsb
loope
popf
test
cmp
lret
mov
push
push
cs
pop
jmp
mov
test
mov
dec
out
js
addr16
push
cmc
jns
cmp
mov
pop
inc
dec
ljmp
int
lea
jo
shl
ja
imul
cmc
and
call
icebp
xchg
add
pushf
jl
mov
mov
mov
mov
fwait
push
mov
and
mov
jbe
insl
mov
andb
xchg
inc
arpl
icebp
test
mov
mov
das
mov
outsb
cwtl
lods
mov
adc
and
pop
in
leave
ss
jb
mov
xor
pop
fistpll
xchg
ret
cmp
xor
loope
pop
mov
mov
push
syscall
lcall
test
incl
out
movsl
inc
scas
pop
mov
loopne
xor
in
jno
shr
or
push
push
flds
aas
mov
jo
mov
jns
push
aas
movsl
dec
jg,pt
cmp
xor
lret
inc
xchg
int3
or
mov
stos
xchg
out
daa
push
or
or
cmc
aaa
cmpsl
inc
enter
fwait
repnz
xor
loope
inc
xchg
mov
or
rcll
jg
stc
mov
test
xor
mov
dec
xor
stc
adc
imul
dec
cmp
add
dec
pop
sub
jae
fdivrs
outsb
jge
loopne
cmp
mov
ss
mov
aam
pop
xchg
add
inc
mov
jns
mov
xchg
adc
outsl
out
fsubrl
gs
dec
sub
ja
xor
jns
or
mov
int3
loopne
aas
rolb
adc
maxps
int3
dec
gs
mov
enter
jns
add
int3
push
sbb
push
adc
rol
ja
loope
sub
jle
es
lods
aaa
scas
sbb
mov
jl
cmp
mov
popa
enter
push
mov
add
test
popf
cmpsl
mov
pop
jmp
and
notl
push
and
stos
das
or
pop
fldt
insl
pop
imul
pop
popa
add
shll
mov
or
jo
sub
fldenv
push
iret
mov
into
xchg
jle
cmp
jae
lahf
arpl
in
insl
jecxz
jb
add
sub
aam
push
and
inc
in
push
adc
cmp
subb
cmp
sahf
sbb
push
sub
cmpb
sub
mov
xchg
dec
adc
add
jno
dec
sub
es
jb
cwtl
mov
inc
arpl
cs
iret
loopne
mov
and
ret
sbb
mov
xchg
xchg
xor
and
mov
push
pushf
jmp
sub
mov
movsb
in
in
sub
fs
cs
pushf
adc
scas
push
pop
mov
fcompl
jnp
lods
out
adc
jbe
or
inc
jnp
and
lock
sub
dec
stos
sbb
jp
lret
add
adcl
adc
adc
jo
ret
cli
cmp
daa
jecxz
in
sub
pushw
jg
fprem
cwtl
sub
ror
pop
push
pop
insb
sbb
rclb
inc
cmpsl
andl
mov
out
cltd
mov
test
xchg
jnp
dec
adc
fmulp
adc
data16
push
cmpsb
mov
adc
inc
cld
add
pusha
fidivl
jmp
xchg
adc
xor
inc
add
xor
subl
incb
mov
and
dec
cld
jmp
cli
push
xor
sub
push
jo
adc
jl
adc
mov
outsl
inc
or
jbe
push
sahf
cmc
mov
add
add
stc
add
stos
push
out
inc
inc
pusha
mov
leave
pop
pop
es
fsts
sub
mov
sub
es
mov
dec
pop
sub
fsubl
dec
adc
cmp
cmp
imul
out
or
jbe
cmp
or
aad
cmp
sbb
test
lods
jno
out
mov
test
adcb
mov
add
push
push
loop
adc
mov
gs
enter
jo
and
idivl
ss
out
rcr
mov
sub
push
inc
cld
loope
in
dec
rorl
and
xor
call
xlat
in
arpl
and
mov
ljmp
pop
sar
outsb
and
push
adc
or
and
pop
call
cmpsl
add
cmp
ficompl
add
sub
repnz
jmp
inc
jb
xchg
shlb
gs
adc
dec
push
push
fwait
loop
insb
cs
cmp
add
lret
movsl
jno
mov
movsb
rcr
loop
push
movd
int3
xlat
jecxz
sub
jecxz
dec
mov
mov
in
hlt
mov
scas
mov
stc
test
sahf
std
dec
xchg
les
arpl
mov
ret
je
orl
sub
dec
or
mov
test
das
push
nop
fcomps
xor
orl
pushf
mov
sub
mov
pop
cmp
and
xchg
mov
test
xor
pop
loope
dec
jl
les
jmp
aad
addr16
outsl
out
out
xor
push
pusha
jnp
adc
popa
mov
xor
push
pop
push
dec
push
add
push
cwtl
clc
mov
lods
add
cmc
arpl
pushl
pushf
add
push
test
push
divl
test
stos
ja
int3
cmp
sbb
push
pushf
mov
push
cli
mov
outsl
repnz
and
adc
fs
icebp
cmp
or
insb
js
adc
pop
scas
loop
mov
pop
mov
cmpl
inc
add
mov
dec
pop
adc
xchg
xlat
js
xchg
pop
arpl
mov
sbb
dec
push
cmp
test
lahf
push
or
mov
push
ja
mov
pop
test
dec
xchg
lret
or
xchg
jae
fistps
mov
inc
adc
clc
sub
test
push
mov
mov
lahf
dec
or
mov
stc
xchg
adc
push
jle
into
lcall
lods
mov
enter
push
push
cld
es
pop
cmovg
cmp
jl
xchg
movsl
sahf
cltd
or
dec
into
cmpsl
aad
gs
pop
inc
roll
popa
push
nop
jne
sub
lds
daa
cmp
adc
leave
fldenv
and
sub
add
sbb
lret
repz
es
inc
jns
sbb
mov
sbb
cmp
mov
inc
mulb
cmpl
xor
push
cmp
or
outsb
and
shrl
ja
orb
sbb
gs
int
jns
cmc
bound
sbb
dec
outsb
xchg
pop
xchg
pop
sub
sub
nop
data16
pop
and
std
sarb
out
adc
dec
test
loop
test
lahf
scas
inc
mov
cwtl
imull
xor
out
ljmp
aas
adc
bound
dec
mov
lret
daa
jbe
sub
inc
pop
out
out
jl
xor
shr
pop
js
inc
jnp
test
in
or
aad
cmp
add
cmpb
scas
test
lods
or
test
mov
fsts
jns
inc
push
lods
xor
cs
gs
cmpl
mov
insl
jns
in
adc
jge
mov
add
hlt
aad
pop
jne
inc
push
xor
inc
aam
adc
and
dec
popa
in
mov
inc
pmulhuw
lcall
push
add
data16
xchg
jge
daa
das
xor
stc
clc
or
imul
sbb
sbb
shll
lahf
stc
push
cld
xlat
lock
xchg
pushf
pop
pushf
cmp
repz
xlat
fsub
lock
aam
mov
adc
scas
adc
pop
xchg
xlat
rcl
xchg
and
mov
adc
push
ds
cmpl
cld
dec
push
or
int
mov
pop
popa
adc
dec
movsl
lea
inc
std
cmpsl
mov
sbb
inc
imul
shl
sbb
add
mov
subb
call
ss
or
inc
xlat
rolb
push
push
mulb
dec
iret
sbb
mov
loopne
inc
cwtl
jecxz
dec
shrb
xor
int3
sbb
into
lds
shl
jg
xchg
into
mov
inc
aas
jae
mov
add
inc
fistpll
lahf
jno
xchg
xor
or
adc
aam
popf
movsl
cld
xlat
mov
xorl
mov
in
mov
fdivp
imul
inc
inc
insb
fs
fcoms
iret
nop
add
cmp
int3
mov
pop
lcall
xchg
rolb
mov
jno
dec
out
sbb
dec
or
mov
or
cmc
mov
mov
sub
pusha
jle
sbb
fimull
adc
push
push
dec
ret
or
fucomi
jnp
or
rolb
nop
mov
dec
addb
lds
es
pop
stos
loop
xchg
xorl
mov
not
imul
sar
inc
xor
cmp
adc
sbb
mov
insb
push
shl
and
std
movsb
or
push
inc
imul
nop
mov
insl
and
and
aaa
testb
cmp
imul
mov
add
cltd
ja
fimuls
xlat
iret
jle
je
rcll
cmp
and
inc
fs
stc
mov
lds
das
push
outsb
xchg
hlt
cmp
mov
popa
ud1
push
sbb
sub
bound
mov
lret
cmc
push
fldcw
add
pop
xchg
adc
je
lods
dec
fisubl
cmc
aas
or
mov
ljmp
faddl
enter
mov
mov
sahf
push
mov
jnp
add
incb
mov
test
jle
cs
fs
dec
pusha
mov
push
es
addr16
sub
inc
jg
push
add
cmpsl
movsl
adc
insb
dec
jg
sbbb
mov
push
and
cmp
add
mov
and
push
scas
dec
pop
inc
je
pop
test
mov
mov
xchg
movsb
add
adc
mov
cld
arpl
xchg
pushl
jo
out
adc
pop
out
loop
pslld
mov
repz
ret
sbb
mov
rorl
sbb
jae
loope
adc
inc
mov
cs
out
pop
les
push
push
cli
sbb
push
mov
add
decl
xor
dec
test
ret
jge
lods
push
sub
enter
pushf
pop
mov
shrl
movsb
jge
subl
cltd
add
in
movsl
sub
in
xchg
jbe
jne
outsl
sub
mov
repnz
xchg
lcall
aaa
imul
shrb
xor
adc
mov
and
movsb
out
jno
cmc
int
outsb
mov
dec
std
add
outsl
inc
stc
and
jo
mov
sbb
subb
mov
into
xchg
in
dec
add
sbb
jge
aad
fists
jl
hlt
inc
jge
scas
add
or
pop
push
jne
mov
lods
xorl
scas
pop
ds
pop
imul
pushf
popf
mov
shlb
ficompl
add
and
mov
and
jge
cli
loopne
cmpsl
inc
sbbb
ret
movsl
dec
sub
dec
scas
mov
mov
add
aaa
dec
gs
cmp
fadd
sarl
mov
sbb
push
in
clc
pop
cmp
mov
inc
push
jmp
mov
aam
adc
inc
fs
lds
int3
jne
ret
jl
enter
xchg
xor
into
outsl
jl
insb
mov
mov
mov
in
jnp
xchg
xchg
jmp
ret
jo
jg
or
jl
sub
popf
je
sub
ds
inc
cs
in
fwait
push
mov
into
movsl
pop
pop
cli
ljmp
ljmp
dec
dec
int
repnz
mov
leave
push
sbb
mov
sbb
movb
adc
jmp
jg
in
dec
mov
xchg
xchg
mov
les
data16
nop
enter
push
adc
mov
xchg
mov
lret
dec
fdivl
sarb
inc
aam
push
mov
notb
xchg
push
hlt
push
mov
lret
ja
mov
mov
and
or
mov
es
and
xchg
movsb
roll
gs
sbb
imul
fsubrl
adc
test
cmp
xchg
xor
xchg
outsb
mov
fcmovne
dec
jno
sbb
push
pop
mov
mov
cwtl
adc
mov
dec
shlb
cwtl
in
mov
mov
push
cmp
xor
xor
pop
sti
pusha
mov
xor
fistpll
and
and
push
pop
xor
mov
imul
inc
adc
hlt
jg
cli
adc
mov
test
call
into
inc
das
dec
pop
lahf
jle
push
and
mov
shll
fs
repnz
ja
mov
and
je
ja
scas
popa
divb
mov
mov
pop
in
mull
andb
mov
push
cmpl
fnstcw
inc
add
dec
xor
pop
es
outsl
movsb
lock
pop
scas
or
mov
add
dec
sbb
lock
test
sub
and
lds
leave
enter
adc
pop
or
loop
xor
aas
divl
jl
pushf
aaa
inc
pop
sub
cmp
insb
data16
mov
mov
sbb
outsl
jge
mov
cwtl
outsb
fcmovu
dec
frstor
sbb
xor
inc
in
insb
insb
xor
lods
cmp
push
cmp
and
je
dec
jmp
push
jmp
nop
cltd
fdiv
insl
adc
mov
mov
xchg
jnp
push
out
out
or
imul
or
adc
icebp
mov
repz
inc
dec
xchg
imul
pop
sub
xchg
sub
das
fucom
rolb
inc
adc
mov
mov
gs
pop
sub
ja
push
cmc
mov
sbb
nop
xor
mov
cmp
lahf
repz
mov
or
in
push
mov
mov
aam
outsb
push
jecxz
cld
mov
push
and
lds
push
xorl
adc
iret
cmp
lahf
movsl
das
inc
cmp
mov
xchg
mov
push
gs
jge
mov
pop
cmpl
sbb
mov
adc
test
jnp
pop
push
idivb
adc
mov
mov
mov
inc
cs
fdiv
mov
jne
outsb
xchg
mov
xchg
mov
in
or
jle
and
sti
outsb
push
mov
cmpl
cmp
imull
lds
or
imull
mov
mov
sub
lock
lea
cmp
sub
stos
pop
cs
dec
jge
repz
mov
or
lea
sbb
mov
adc
loopne
daa
outsl
mov
jmp
xor
aas
lcall
adc
into
adc
cmpsl
daa
jnp
adc
adc
dec
mov
sbb
jecxz
xlat
ljmp
insl
and
pop
js
ss
dec
pop
mov
shrl
push
mov
out
mov
sbb
stc
push
ds
jecxz
add
sahf
in
mov
push
mov
jmp
mov
or
inc
push
rcr
push
cmp
cltd
test
jne
or
sahf
mov
pusha
inc
popa
fidivrs
out
sarl
aaa
xchg
add
test
sub
ljmp
pop
lds
xor
mov
arpl
or
push
jno
add
and
das
cmc
jno
inc
sbb
mov
xchg
jmp
iret
push
sbb
push
popa
mov
pop
mov
sbb
push
stc
mov
adc
pop
enter
rorl
push
test
push
push
mov
mov
iret
push
gs
cli
ljmp
insl
cmp
push
pop
mov
lods
nopl
movsl
stos
mov
push
cmp
and
arpl
mov
dec
xchg
pop
push
cmp
icebp
push
lcall
xor
mov
shll
adc
add
add
push
popf
lret
into
stos
jnp
dec
bound
jg
shrb
mov
js
mov
adc
jno
xchg
xlat
mov
fwait
lret
call
xchg
sub
xor
xchg
push
scas
inc
sbb
hlt
dec
sbb
jb
hlt
int
mov
push
subb
push
adc
addb
mov
mov
das
mov
sbb
or
sub
xor
movsb
cmp
pusha
or
mov
fiaddl
jmp
mov
cmp
cs
dec
dec
xchg
cmp
inc
cmp
dec
aaa
insb
pop
adc
enter
pop
insb
aas
jmp
fidivl
and
aaa
ja
mov
xchg
dec
adc
arpl
mov
xchg
lcall
std
ljmp
imul
pop
mov
ja
xor
inc
mov
push
pop
ss
push
lea
inc
shlb
pop
mov
xor
sub
sub
cs
or
adc
imul
adc
dec
push
loope
test
inc
and
sbb
stos
inc
mov
leave
out
es
add
pop
iret
xchg
cwtl
rcll
fiaddl
mov
jl
jnp
shll
mov
cs
inc
cltd
ljmp
cmp
sub
push
jne
sub
add
cmpsl
lcall
jo
xor
inc
adc
ficompl
xchg
in
jge
iret
ffreep
rclb
pop
sbb
xchg
iret
add
cmc
rcrb
inc
jbe
lahf
xchg
push
mov
out
in
fcoms
and
xchg
mov
test
sub
mov
cmp
xor
pop
xchg
inc
or
in
loopne
les
pop
and
sbb
push
xor
xchg
cmpb
daa
lock
insb
xchg
popf
inc
cmc
push
dec
fisubs
inc
dec
cmp
fsubl
sbb
inc
sbb
lods
orl
repnz
fst
sub
les
pop
into
jns
repnz
lods
mov
faddl
ja
rorl
mov
sbb
pop
lods
pop
pop
add
xchg
into
int3
sbb
and
clc
popa
inc
dec
sti
leave
xchg
shl
pop
sbb
out
push
ds
cmpsb
push
dec
mov
rep
xchg
sub
jae
cld
or
loope
fists
js
cli
xchg
repz
sub
out
cmpsb
cmc
imul
stc
pop
cmp
int3
mov
outsb
les
divb
daa
popf
inc
ds
mov
outsl
icebp
sti
aad
or
mov
cmp
icebp
orl
adc
sbb
aas
aam
lea
jb
or
mov
jnp
cltd
dec
add
push
cmp
push
call
aas
push
push
popf
xchg
sub
push
rolb
add
xchg
mov
and
inc
cmp
adc
xchg
mov
mov
hlt
addr16
cs
sub
cmc
mov
and
mov
mov
ret
andb
push
xchg
movsl
movsb
jp
in
adc
adc
testl
sub
ja
mov
lea
pop
fadds
xlat
lods
mov
inc
xor
stc
mov
xchg
jo
inc
imul
insl
sahf
or
lahf
ds
push
cmp
and
repz
rorb
cli
test
jb
inc
stos
repz
in
sti
les
add
leave
add
insb
ret
jp
mov
adc
xor
adc
and
mov
test
call
lahf
mov
cmp
js
cmp
in
jmp
push
imull
daa
arpl
dec
mov
idivl
pushf
sti
repnz
loope
dec
fs
arpl
pushf
lods
in
xor
out
sbb
call
call
ljmp
cmp
shl
in
aam
fsubrl
push
push
mov
dec
jge
mov
xchg
adc
xchg
dec
pusha
rclb
dec
call
cs
sub
js
ds
jae
xlat
jle
insl
push
mov
xchg
jmp
xchg
jnp
in
dec
sbb
jnp
pop
in
xchg
dec
jo
add
lcall
aam
mov
and
jecxz
sbb
fcomip
adc
icebp
and
cmpsb
loope
add
outsb
cmc
dec
and
je
push
add
xchg
lret
mov
sbb
sbbl
jge
stos
mov
in
xchg
inc
nop
repz
aad
lods
stos
xlat
xor
mov
movsb
jae
loope
mov
dec
push
xchg
add
subl
test
pop
cmpsl
sub
sub
cmpsl
fs
insb
adc
mov
fucompp
sub
in
mov
test
pop
stos
cmp
fst
stc
stos
sub
jp
call
dec
fptan
sahf
in
push
mov
test
ret
mov
mov
dec
sbb
daa
jae
xor
jg
push
or
and
mov
enter
out
mov
inc
inc
hlt
adcb
sbb
xchg
xchg
xlat
sti
pusha
out
and
or
inc
pushf
mov
pop
insb
sub
arpl
ss
lahf
insb
jno
and
jne
fstpt
fists
lock
call
add
xor
xchg
sub
pop
cmc
adc
mov
sti
cwtl
xchg
fs
xchg
add
call
in
mov
pop
dec
xchg
adc
mov
jecxz
dec
inc
dec
cltd
add
mov
sub
outsl
fsubs
add
mov
lods
dec
icebp
cmc
loop
ja
sub
jb
xchg
das
fbstp
imul
xchg
stos
aad
test
and
or
hlt
fdivs
adc
or
int
ss
push
pop
xchg
push
cmp
iret
cs
ret
lret
adc
ljmp
mov
dec
enter
and
jp
pop
jge
testl
xchg
arpl
dec
cmpl
push
mov
mov
imul
sub
and
adc
mov
in
mov
jge
setp
cmp
pushf
jbe
jae
mov
idivl
in
orl
mov
sub
leave
je
mov
cmp
xchg
ja
mov
xor
xor
lods
shrb
push
mov
mov
and
xor
inc
rclb
push
rorb
bound
ss
movsl
addr16
das
mov
jle
inc
cmp
push
add
scas
pop
adc
adc
cwtl
jg
cmp
jne
fstpl
xor
lock
imul
mov
xchg
lahf
dec
add
out
pop
and
test
mov
add
inc
pop
jno
das
outsl
pop
jb
fidivrs
in
sub
mov
ljmp
push
jle
or
mov
in
ljmp
out
cmp
jbe
pop
adc
push
movsb
lret
jg
outsb
xor
pop
shll
xor
cmp
xchg
in
mov
inc
mov
sbb
inc
adc
sbb
pop
cld
mov
leave
xchg
pop
imul
xor
leave
les
out
inc
push
test
sbb
inc
xor
push
xchg
shll
cmp
out
add
jae
xchg
bound
movsb
nop
cld
les
insl
and
mov
out
xchg
sub
push
add
fldcw
jnp
add
call
imul
dec
xchg
add
xchg
mov
adc
lret
scas
shr
loope,pt
xorb
lock
cld
pop
pop
adc
mov
jmp
sub
adc
mov
out
mov
xchg
lds
and
pop
movl
pop
mov
in
stos
in
data16
jno
cltd
push
aas
sub
and
cmp
rorb
inc
icebp
pop
add
in
ljmp
sub
in
mov
movsb
jge
mov
fldl
aaa
dec
inc
mov
sub
cwtl
pop
stos
pop
into
addr16
adc
dec
push
inc
and
inc
dec
inc
call
outsb
test
outsb
pop
retw
rolb
scas
fistps
cmp
into
nop
in
and
lods
add
je
imul
mov
call
pop
xor
ret
ds
jg
jge,pn
popl
sbb
dec
arpl
jmp
mov
fsubrs
mov
pop
jb
or
movsb
mov
fldlg2
mov
jg
and
inc
out
lret
jno
dec
popf
mov
add
ljmp
jmp
add
in
jns
je
cltd
leave
and
jecxz
lea
mov
mov
mov
call
inc
inc
sti
scas
roll
mov
mov
pop
repz
dec
cli
mov
test
dec
dec
lret
icebp
jno
test
fdivl
nop
mov
sbb
add
sub
fwait
xchg
std
inc
and
clc
mov
cmp
dec
cmp
lcall
insl
cld
mov
loope
jb
bnd
or
pop
adc
add
call
mov
insb
pop
mov
inc
mov
jbe
adcl
pop
mov
int
add
mov
test
testl
movsl
es
xorl
inc
pop
sub
and
addr16
lds
mov
cmc
jo
cs
mov
sar
sbb
pusha
in
fnstcw
rcrb
in
sahf
int3
dec
mov
popf
mov
out
push
and
and
sbbb
sub
movsb
jl
lahf
test
sub
mov
xchg
es
daa
daa
pop
mov
out
dec
mov
push
cmpsb
inc
data16
leave
int
lret
xor
imul
pop
in
insl
mov
mov
or
into
mov
das
xchg
fsts
pop
sub
dec
std
xchg
call
xchg
fisttpll
imul
lds
repnz
mov
mov
add
push
testb
mov
addr16
bound
mov
mov
notb
jno
insl
fstpt
int3
mov
mov
int3
mov
mov
cmpsb
les
and
loop
bound
inc
es
fisttpl
int
repz
ret
mov
movsb
and
pusha
rol
mov
dec
pop
mov
push
pushf
mov
out
andl
sub
mov
pop
mov
mov
cmp
es
xlat
nop
loopne
shl
mov
insl
pop
scas
rcrl
cmp
subl
or
xor
push
lods
xorl
mov
addr16
sti
cmpsb
outsl
loope
shll
mov
in
sbb
loope
lods
fs
fucomp
push
push
or
xor
stos
aam
or
cmp
stc
dec
nop
pusha
enter
out
stc
ficomps
sub
pop
shrl
push
ds
sub
add
dec
leave
pop
mov
loopne
or
push
sbb
and
xlat
lret
inc
mov
fdivs
gs
sub
cmpsb
test
adc
and
hlt
popf
outsl
repnz
outsl
sub
mov
or
jge
arpl
xor
cmp
fidivl
aaa
int
testb
int3
dec
int3
sub
pop
ja
pusha
gs
or
fcmovnb
cld
ret
sbbl
subb
aaa
cmp
jle
dec
sbb
mov
sti
xchg
mov
imul
aam
jne
mov
push
daa
push
add
ret
inc
add
sub
ljmp
inc
mov
push
dec
incl
test
mov
in
rorb
mov
jle
insb
hlt
subb
dec
sub
loopne
int
mov
mov
jle
insl
push
adc
fstl
pop
mov
cmc
adc
xor
mov
xchg
daa
insb
pop
and
pushf
push
call
in
sbb
cmp
cmp
pop
ret
push
divl
jnp
cld
xor
ret
aad
jbe
or
lods
scas
or
in
loopne
cmpsl
or
bnd
sub
jmp
xchg
xor
or
gs
dec
in
stos
xor
lret
movsb
ljmp
xchg
jo
cmpsl
dec
sub
sub
xorb
mov
test
sbb
iret
test
rcrb
mov
mov
sbb
fwait
cmc
add
gs
out
adc
repz
xchg
ja
popa
dec
clc
push
xchg
jecxz
outsl
cmp
je
jae
and
lods
jae
sub
adc
lcall
inc
adc
shlb
lods
cs
cmp
imul
and
xor
lods
xchg
in
adc
pop
stos
int
pop
cmp
mov
out
faddl
sub
decl
cmp
std
imul
nop
ja
arpl
sbb
sar
inc
fwait
test
or
dec
cmp
fwait
xchg
fmul
cltd
jb
mov
xchg
fldcw
xor
sti
inc
push
mov
adc
mov
and
in
ret
sbb
pop
mov
loopw
cmp
notb
adc
clc
sahf
mov
mov
xchg
shll
xchg
inc
jbe
pop
cmp
mov
into
add
outsb
xchg
lcall
imul
xlat
xor
lahf
arpl
adc
dec
hlt
rcrl
insl
movsl
push
data16
cmp
push
addr16
fdivr
inc
nop
sbb
xchg
or
sbb
iret
cmpb
xor
repz
xchg
jmp
mov
push
pop
int3
mov
repz
pop
scas
cmpb
sbb
or
add
inc
jl
stc
repnz
nop
xchg
mov
xor
mov
dec
lods
aad
mov
cmp
inc
inc
push
movsl
jbe
push
test
pop
pop
pop
hlt
adc
sbb
dec
iret
rorl
pop
addr16
fisubs
mov
and
jb
mov
inc
pop
insb
jp
loopne
lock
js
push
or
in
into
dec
adc
cmp
mov
cmc
jp
movsl
xchg
lcall
push
push
cmc
xchg
popa
cmpsb
pushf
sub
inc
sbb
push
loope
popa
out
divl
jb
xchg
icebp
gs
data16
loop
loope
mov
lock
jbe
aas
mov
pop
push
iret
test
push
adc
jmp
cmp
lea
jno
into
ljmp
mov
mov
je
stc
mov
sub
fldenv
psrld
xchg
adc
jnp
jbe
addl
lea
mov
es
mov
dec
dec
jge
xchg
mov
add
xchg
add
dec
lcall
ja
pop
mov
outsb
jbe
xchg
bound
add
lea
mov
dec
scas
sbb
lds
xor
inc
mov
icebp
xchg
jp
cli
adc
mov
loope
insb
xor
jae
out
adc
and
and
pop
out
loope
jecxz
lahf
jnp
out
lret
outsb
mov
je
mov
lods
ret
test
inc
rep
shl
jecxz
call
inc
push
pop
scas
loopne
leave
mov
in
cld
scas
imul
or
sbb
test
loopne
rolb
incl
jno
es
call
and
lret
mov
repz
rcrb
xor
sub
inc
mov
inc
xlat
dec
shll
fldl
ljmp
and
fstpl
push
ret
sub
cmpl
lret
dec
movsb
out
andb
inc
mov
xchg
cmc
nop
adc
in
js
jo
rcll
iret
mov
mov
das
jmp
adc
movzwl
scas
xchg
push
inc
pop
leave
jmp
cltd
cld
inc
sar
push
mov
imul
in
in
dec
add
mov
sbb
cmp
jnp
je
mov
dec
in
popa
mov
fwait
cwtl
daa
fcoml
pusha
lret
inc
movsb
jecxz
jp
and
xchg
idivl
fidivl
or
jle
inc
mov
loopne
sti
lret
scas
mov
xlat
mov
sbb
in
repz
push
push
popa
or
sahf
or
add
popa
fsub
nop
sub
push
push
jne
imul
ss
fsubrs
cmc
aas
cld
xor
dec
pusha
pusha
pop
shll
push
jno
jle
scas
cmp
mov
adc
ljmp
xor
push
pushf
ret
int
dec
xchg
or
cmpl
mov
mov
add
cmp
test
in
fistps
add
mov
testl
pop
les
bound
divb
lods
cmc
and
push
ret
lds
xor
loope
nop
sub
scas
inc
fsubrl
imul
mov
loopne
ret
add
sub
fs
sub
add
or
push
outsb
rcll
notl
out
mov
nop
mov
xlat
aaa
out
test
add
mov
in
sbb
rclb
insl
stos
call
lea
jge
dec
push
loope
and
pop
cs
mov
mov
clc
xlat
out
call
push
movsb
ret
dec
xchg
test
push
ror
sub
dec
fnstcw
out
xchg
shlb
pop
imul
push
in
out
or
repz
or
ds
cmc
sbb
inc
mov
std
add
cli
ds
add
dec
jmp
les
and
ljmp
push
nop
jo
mov
adc
aaa
fisubrl
lods
sti
jmp
and
jo
mov
lods
jp
and
add
adc
cs
xor
push
add
into
xor
pop
rcrb
jmp
inc
dec
stos
mov
mov
aaa
dec
cmpsb
mov
or
nop
xlat
mov
push
mov
sbb
fs
fsubs
push
loope
cmp
mov
push
xor
mov
in
push
test
stos
xor
xor
adc
sub
xor
icebp
in
stos
add
js
mov
inc
insl
hlt
pop
jns
cwtl
adc
dec
cmp
negl
jo
jne
inc
xchg
test
insl
push
push
sub
push
scas
es
jne
jle
sbb
pop
andl
and
lret
cwtl
pushf
inc
push
mov
in
xor
aad
cmp
mov
and
push
mov
test
and
repz
cmp
pop
lret
in
sbb
gs
push
dec
sbb
xchg
ret
imull
dec
lret
scas
or
insb
xchg
mov
mov
pop
xchg
daa
mov
jne
mov
test
addr16
sub
pop
dec
mov
dec
aam
pop
out
lret
popf
fcomps
test
mov
pop
decb
pop
aaa
std
ljmp
mov
inc
fwait
das
cmp
imul
mov
outsl
out
mov
jge
cld
jne
out
add
adc
xchg
sub
or
clc
mov
inc
lods
jl
inc
fiadds
fidivs
dec
or
test
clc
cmp
inc
cmp
cmc
jbe
ss
sbb
mov
push
and
js
mov
aas
stc
mov
shrb
pusha
shr
cmp
cmpl
cli
pop
push
mov
cmc
sbbl
push
aam
lods
jns
ret
push
and
hlt
aas
jle
lahf
adc
rcrb
jmp
inc
js
sub
adc
adc
iret
imul
cmp
loop
mov
sbb
fsubs
mov
aad
or
aad
dec
xor
insb
mov
sub
cld
cmpsb
mov
push
jecxz
fnsave
out
mov
cmp
or
int3
sti
jge
popa
xchg
adc
sbb
rcll
sti
mov
inc
fdivrl
and
and
mov
scas
fnstenv
push
pop
divb
into
adc
stos
xor
cmc
push
in
cmp
inc
adc
rcll
das
mov
mov
cmpsb
pop
jns
daa
xor
clc
popa
lahf
pop
fwait
mov
call
dec
jmp
jb
in
lret
add
mov
mov
fdivrl
lahf
pop
popf
lret
dec
sqrtps
decb
cmp
dec
or
aam
clc
jp
loopne
pop
and
jne
adc
hlt
iret
adc
movsl
loope
or
sarb
sub
inc
subl
sbb
insb
cmp
fwait
mov
xor
loope
popa
dec
loope
jo
sbb
leave
adc
pop
lds
mov
mov
ret
in
dec
mov
mov
jae
sub
cld
rorl
repnz
dec
inc
mov
aad
adc
mov
dec
pop
adc
cs
push
rorl
sbb
mov
cwtl
int3
or
lret
dec
adc
inc
test
out
les
or
adc
sub
icebp
jmp
jnp
pop
addr16
mov
mov
cs
ret
xchg
jmp
add
xor
sub
and
sahf
add
or
jo
test
mov
aad
push
sub
mov
call
lock
xlat
cmpb
mov
xor
and
scas
stos
cli
inc
lea
xorb
or
or
movsb
xchg
xchg
lods
inc
into
cwtl
mov
sub
inc
dec
cmpl
dec
xchg
xchg
fyl2x
mov
xchg
jb
ds
icebp
cmp
fidivs
in
mov
ret
inc
aas
icebp
pushf
adc
mov
and
jge
scas
jge
pop
pop
lea
mov
push
jns
adc
pushf
and
notl
mov
lret
jo
das
xor
xor
aam
cmp
push
fwait
je
cmp
test
adc
and
imul
pop
fs
pop
lea
or
push
aam
cld
adc
mov
ja
sub
sbb
fistl
dec
call
xor
sub
pop
ret
inc
xchg
jmp
and
unpcklps
adc
xchg
pop
testl
fcmovne
inc
push
or
lret
out
and
sbb
xor
mov
iret
mov
mov
and
loopne
sti
and
icebp
sbb
cmpsl
sub
mov
push
popa
xchg
fstpl
mov
adc
xor
mov
jle
lahf
div
ret
xor
pop
push
mov
dec
fsubrs
or
xchg
cmc
mov
push
loop
dec
mov
push
mov
or
push
or
loope
jae
jno
mov
movsb
push
pop
cmp
sbb
outsl
movsl
pop
sub
jmp
and
fistps
add
sbb
cmpsb
and
adc
sub
sbb
sub
add
test
aas
or
rcrl
inc
sbb
cmpsb
scas
mov
punpckhbw
mov
push
fisubs
ret
xor
hlt
sahf
or
sbb
lea
cmp
push
push
cmp
push
mov
lret
xor
andl
lods
pop
jg
pushf
push
adc
dec
mov
out
xor
pop
jno
push
data16
mov
push
jg
sahf
icebp
sbb
enter
xor
mov
movb
lods
push
and
lea
mov
adc
inc
jecxz
shll
pop
scas
dec
cmpsl
jg
mov
rolb
pop
fdivs
cmpsl
aam
xor
xor
sbbb
jbe
lods
inc
int
out
mov
aam
lods
or
js
cmp
jns
push
xchg
xchg
jmp
in
loopne
enter
roll
outsb
xchg
lods
jae
mov
and
mov
out
insl
inc
xor
dec
shlb
pop
iret
movsb
pop
orl
sub
cmpsb
pusha
arpl
aaa
outsb
add
add
rolb
add
xor
sbb
iret
adc
in
pusha
sbb
idivl
rcrb
or
aas
push
ret
xchg
addr16
adc
or
push
rcrb
imul
into
shrl
mov
add
mov
xor
imul
outsl
pop
push
arpl
jle
test
inc
adc
sub
ret
fcmovu
sbb
ret
pop
jmp
jnp
jbe
or
xor
test
add
adc
fs
fdivp
in
jecxz
sub
loope
or
add
or
lds
jns
sub
jo
leave
and
xor
fisubrs
jae
stos
ljmp
sti
sbb
dec
add
in
ficompl
je
pop
inc
cli
sti
xlat
push
xchg
mov
adc
dec
sbb
jnp
pushf
aam
add
pop
inc
cmp
push
jb
dec
xchg
lods
cld
lcall
int
pop
negl
divl
imul
jne
push
lock
jae
and
adc
mov
mov
add
test
incl
les
hlt
jne
std
mulb
jo
in
scas
add
sub
jge
fwait
out
mov
add
outsb
pusha
insl
xchg
dec
sbb
pop
orl
adc
popa
xchg
std
push
mov
push
lock
loopne
addr16
mov
fucomp
sbb
rorl
jp
mov
movsl
out
rorl
ja
dec
pop
ret
incl
aaa
push
cld
dec
cwtl
mov
sub
xchg
or
and
in
jb
mov
adc
cld
shlb
leave
test
cwtl
cmp
dec
scas
lcall
jle
xchg
into
cmp
or
jb
ret
xor
je
pop
jmp
adc
inc
add
insl
mov
mov
imul
cmp
push
push
dec
test
xor
cmp
push
popf
push
push
scas
mov
push
aas
mov
cs
xchg
mov
xchg
into
in
pop
pop
mov
push
add
fstpt
xlat
xor
add
inc
fwait
out
sahf
addr16
and
mov
icebp
mov
pushf
gs
dec
push
test
pop
shlb
or
pop
lock
pop
xor
and
push
push
sbb
mov
add
ret
dec
lret
and
fimull
sub
jbe
xchg
pushf
das
inc
adc
push
xchg
scas
loope
loopne
daa
jp
or
fildll
lret
xchg
idiv
cmovbe
add
mov
cmpb
stc
mov
push
dec
in
xchg
out
hlt
stos
dec
sub
movsl
and
cmp
xchg
dec
dec
popf
shlb
and
jnp
lods
sub
xchg
inc
xor
addr16
scas
push
mov
push
jle
push
dec
mull
xor
and
xchg
push
dec
ss
dec
sbb
lods
xchg
cmpsb
sub
addl
dec
dec
aad
pushf
xchg
addr16
and
xchg
out
mov
or
hlt
jmp
xchg
andl
push
pop
daa
push
inc
fistps
xor
add
and
or
cmp
imul
xlat
arpl
adc
and
dec
add
bound
inc
fs
lods
push
outsb
iret
jge
pop
sbb
push
and
xchg
jl
xorb
push
orb
out
cmp
jb
into
jmp
sbb
movsb
xor
sbb
repnz
pop
xor
lahf
pusha
lds
mov
mov
or
or
loope
outsb
gs
mov
cmp
shlb
rcrb
fidivs
fildll
popl
mov
mov
mov
mov
adc
pop
cltd
lahf
add
push
gs
inc
lock
dec
aaa
sbb
stos
inc
sub
call
out
sbb
mov
insb
sahf
sub
xchg
jo
cmp
inc
les
sbb
push
adc
mov
in
sub
or
mov
ret
test
movsl
inc
cmpsl
in
out
in
adc
mov
mov
or
cmpsl
clc
test
adc
pop
sahf
cmp
sbb
add
outsl
outsl
push
mov
push
outsl
repz
jmp
sbb
inc
inc
test
imul
std
pushf
popa
jb
sti
push
stc
pop
xor
bound
negb
jl
imulb
insl
lods
sbb
inc
sti
enter
mov
lods
std
mov
aaa
cli
call
jmp
inc
sub
mov
mov
stc
inc
add
int
pop
aaa
add
int3
adc
mov
push
add
jg
out
stc
dec
data16
cmp
jno
push
pop
mov
dec
mov
xor
or
sbb
cmpsb
nop
iret
popf
cmpsb
mov
ds
lret
and
push
sub
andl
xchg
xor
subb
add
pop
fisttps
aad
sahf
out
cmp
push
mov
sub
loope
daa
out
sti
add
xchg
cmpsb
pop
sti
insl
stc
xchg
inc
add
mov
push
mov
cmp
xor
xchg
out
add
mov
sub
out
adc
sub
or
cmpsl
test
push
lcall
cmp
xchg
sbb
jbe
loop
sbb
xor
sbb
inc
or
mov
ss
fidivl
fmul
and
push
jl
sub
jns
pusha
es
nop
outsl
and
and
xchg
ds
or
aam
lahf
mov
mov
cmp
sbb
sahf
mov
xor
jp
push
dec
dec
dec
out
jp
jno
std
jnp
add
sub
lods
lcall
push
xchg
lret
in
mov
dec
shll
or
jecxz
sub
aas
and
js
fistps
mov
scas
in
das
insb
jbe
aaa
cmp
movntq
pop
and
addl
push
cmp
movsb
in
or
or
xor
popa
add
fmulp
mov
imulb
test
ja
push
aam
rcrb
cmp
lret
push
mov
dec
jg
ljmp
fimuls
insl
hlt
je
dec
lock
add
push
mov
inc
lods
jb
repnz
sub
icebp
push
arpl
add
mov
sbb
clc
shll
lret
imul
jle
and
ss
jmp
push
subl
or
sahf
flds
xchg
arpl
shl
rorb
xchg
pushf
imul
mov
outsl
jbe
clc
pop
cmpsb
inc
mov
ror
cmp
mov
sub
enter
push
shr
jns
inc
push
loope
push
cmp
add
push
sub
jmp
notl
cld
mov
sbb
jnp
sbb
dec
mov
cmc
out
test
xchg
sbb
imul
push
scas
push
out
sarb
je
incl
stos
loopne
adc
or
das
dec
outsb
scas
mov
popa
out
mov
pop
imul
test
aad
mov
or
sar
add
pop
or
cld
jle
dec
push
xchg
push
jle
push
ds
in
lret
add
ret
mov
or
xchg
in
or
jmp
nop
in
loop
cmp
fdivrs
loope
xchg
dec
or
jae
mov
xor
loopne
mov
imul
jae
decb
mov
leave
mov
sbb
mov
xchg
dec
out
mov
cmpsb
in
pop
outsl
repnz
xchg
or
xchg
add
jbe
out
push
pop
addr16
hlt
dec
jecxz
out
adc
jno
out
test
out
rolb
cmp
dec
xor
cmp
lds
int
or
aam
das
sub
xchg
pop
aad
xor
clc
fsubl
and
cmpsb
inc
loop
icebp
mov
gs
sbb
mov
idivb
in
push
xor
cld
jbe
xchg
xor
ret
mov
aad
loopne
adc
mov
adc
add
mov
sti
mov
dec
jge
pop
xor
add
popa
mov
jo
jle
incl
add
pop
nop
mov
adc
push
or
cld
fsub
enter
lods
adc
push
js
push
inc
pop
and
fnstsw
xor
imul
sahf
jp
stos
aad
dec
or
cmpsl
and
adc
xchg
arpl
fs
outsb
xchg
jecxz
pushf
loope
xor
jns
shlb
xor
and
add
iret
in
cmp
pop
js
test
xor
inc
cmp
jo
or
xchg
into
pop
push
stos
jg
add
sub
jg
aas
ror
xchg
lcall
in
fwait
sbb
data16
fs
fcoml
clc
mov
inc
dec
in
push
imulb
jge
ss
cmp
hlt
sub
xchg
nop
mov
push
jmp
push
das
in
mov
jmp
nop
mov
dec
ja
and
cmc
lods
into
cld
cmpsl
cltd
lods
jns
jbe
inc
add
shrb
adc
sub
jl
test
push
js
hlt
out
jle
xor
or
mov
dec
fs
sub
addl
outsb
sub
imul
lcall
das
and
pop
ss
call
jb
xor
ffreep
mov
mov
sarl
jne
idivb
add
xchg
fimull
aas
push
xlat
fmull
aas
aam
mov
int3
push
pop
xchg
mov
jno
in
dec
rolb
cmpsl
lret
out
xchg
sub
stos
xchg
jae
lcall
sub
or
popf
mov
pop
push
add
cmp
or
sbb
cmp
mov
enter
in
repnz
std
clc
test
xchg
mov
lret
mov
stos
lea
mov
inc
lcall
rclb
adc
pop
lds
pushf
test
jb
nop
and
cwtl
or
test
xor
cmpsb
mov
or
sub
jg
mov
enter
call
xchg
or
jecxz
sti
jl
push
int
stos
dec
push
aaa
push
rorb
repz
in
in
leave
and
je
push
or
mov
fwait
jle
inc
or
jbe
and
ret
aas
jne
stos
jnp
std
cltd
mov
inc
fisttpl
xor
rcll
add
aad
xor
push
push
lcall
jo
inc
mov
inc
mov
mov
push
xor
push
mull
push
inc
cmp
sub
xchg
ret
cwtl
pusha
mov
jl
xchg
bound
add
cwtl
xchg
pop
je
or
add
push
daa
loopne
mov
das
scas
and
inc
rcrb
aad
push
push
sbb
mov
cld
sub
inc
inc
pop
mov
inc
mov
cmc
fnsave
add
or
mov
enter
test
or
jo
test
push
mov
pop
and
ja
ret
nop
in
nop
xchg
cmpsb
or
pop
pop
sbb
sbb
iret
sbb
mov
push
inc
shrl
push
pop
add
fmulp
adc
xlat
push
adc
or
xchg
in
add
stc
repnz
ds
leave
popf
xor
jp
dec
aas
das
cmp
rcl
cmc
setp
add
inc
xchg
lret
mov
addb
lock
bound
pop
sbb
in
mov
push
and
pop
sarl
xor
cmp
aas
rcrb
push
sbb
lea
fdivrs
mov
pop
cmp
jecxz
imul
gs
sbb
mov
push
xchg
push
dec
push
mov
mov
xlat
mov
dec
pop
out
ret
bnd
cli
fisubl
stos
jne
test
push
fstl
adc
adc
sarb
les
adc
jg
dec
sti
cli
lea
aas
xor
sbbb
xchg
arpl
adc
adc
xchg
loopne
pop
cmpl
jecxz
sub
stc
lahf
out
adc
push
jno
mov
iret
daa
mov
clc
fadd
mov
out
adc
int3
dec
or
testb
in
jmp
or
sub
and
into
xor
push
pusha
fisubs
subl
cli
rolb
dec
les
mov
lret
cmp
aas
push
xchg
cmpsb
pop
and
add
jb
pop
dec
fdivs
lods
loope
pop
add
sti
mull
add
sbb
repz
push
ja
mov
in
sahf
int3
mov
clc
push
pop
mov
inc
add
lock
and
adc
sbb
pop
jb
lret
sahf
sahf
pop
daa
je
ficomps
stc
mov
mov
divl
mov
enter
nop
ficoms
adc
leave
dec
nop
mov
das
pop
sbb
clc
jns
cli
mov
and
mov
loopne
in
inc
sarb
mov
enter
add
push
and
test
testb
ja
xlat
inc
inc
adc
mov
dec
call
push
push
jb
mov
dec
dec
enter
xchg
adc
faddp
leave
rorb
mov
and
push
fs
fwait
and
movsb
xor
lds
mov
sbb
pop
pop
push
and
ljmp
xchg
ljmp
xor
mov
or
push
out
sarb
stos
in
leave
rolb
lahf
push
loop
fidivrs
sbb
inc
insb
dec
jae
pusha
adcl
es
cwtl
dec
push
loopne
mov
mov
lock
insl
mov
sub
cmpsb
sbb
je
repnz
in
adc
jmp
and
es
jge
mov
cs
mov
lret
sarl
movsl
xor
lret
rorb
mov
cmpsb
inc
ret
push
push
add
ljmp
inc
add
out
jbe
jbe
mov
fstps
and
cld
add
dec
subb
stc
ja
mov
mov
nop
and
jmp
pop
jge
in
jb
je
test
push
dec
cli
mov
call
cmp
les
jnp
insl
push
jge
xor
test
fsts
mull
push
lods
inc
or
movsl
in
in
inc
dec
cmp
or
roll
mov
fwait
mov
cmc
gs
mov
cmpsb
lcall
push
mov
adc
jmp
out
ret
xor
rolb
push
mov
mov
cmp
push
mov
xor
sub
push
cmp
pcmpgtd
xor
add
fdiv
arpl
lds
xor
push
pushf
pop
xchg
add
push
scas
lahf
jmp
ret
in
popa
add
mov
xor
and
sub
adc
mov
mov
frstor
icebp
sbb
or
out
fnsave
imul
lret
aaa
push
inc
mov
shlb
mov
push
mov
mov
jl
shl
and
push
inc
add
sub
dec
push
jge
xor
sub
sub
test
and
sub
into
add
xor
scas
or
mov
inc
jmp
cmp
push
lret
movsb
push
xchg
and
sbb
out
inc
sbb
or
cmp
xchg
test
sub
ds
adc
dec
xchg
push
xchg
sarb
sub
gs
sub
pop
jo
jle
test
add
mov
sbb
mov
out
push
ret
test
movsb
fisubrs
test
out
iret
add
xor
pop
adc
les
jg
jp
xchg
cmp
mov
xchg
sahf
dec
mov
aas
cmp
lahf
jo
adc
cmp
roll
test
jnp
imul
xchg
sbb
aad
std
dec
movb
icebp
cmp
cld
in
inc
cld
outsb
ret
mov
out
sub
adc
ret
pop
es
jns
pop
xor
push
in
or
push
iret
mov
sti
sub
out
aas
pop
bound
inc
pushf
xor
leave
lds
test
jno
cmc
mov
sbb
inc
adc
popf
xor
nop
mov
std
sub
je
nop
jecxz
aas
sbb
popa
dec
scas
dec
loop
call
imul
and
jecxz
and
pop
ds
ljmp
inc
sub
sbb
jecxz
sbb
push
pushf
push
add
inc
movsb
or
mov
outsl
mov
adc
cmp
into
lcall
ds
lret
pop
aaa
cmpsb
mov
lock
mov
jb
leave
test
aad
enter
movsl
add
add
push
push
scas
or
int
inc
imul
xchg
add
mov
les
mov
xchg
jecxz
and
ss
jge
and
adc
out
pusha
xchg
mov
adc
adc
sub
ds
push
cmc
out
pushf
dec
subl
in
mov
jae
in
push
push
lods
xchg
jmp
add
pusha
out
mov
cmp
mov
inc
je
nop
aam
dec
xchg
dec
imul
aad
cmc
lret
fcomps
sbb
sbb
imul
pop
loopne
xchg
adc
in
pop
inc
dec
ds
sub
sbb
and
out
mov
add
cmp
rcll
ret
sbb
out
sub
push
out
add
pusha
jle
lods
adc
push
out
or
xchg
ss
sbb
xchg
dec
js
hlt
sbb
add
je
mov
push
shl
scas
sub
into
and
mov
add
sub
cli
loop
icebp
imul
push
test
mov
inc
cmp
das
mov
jl
pop
stos
push
xor
xor
verr
mov
sbb
add
xchg
adc
mov
mov
pushf
push
scas
cmp
xor
push
xchg
subb
bnd
std
mov
mov
fbld
pop
dec
divl
inc
push
push
sub
cmp
loop
sbb
pushf
movsl
push
xor
ja
lds
inc
dec
sahf
push
sti
lahf
loopne
cmp
shl
popa
adc
add
add
inc
lret
cmp
outsl
test
mov
jmp
cmpsl
jl
xor
in
add
test
les
mov
mov
push
insb
jp
push
negb
push
or
test
outsl
cmc
mov
pop
or
leave
les
sbb
xlat
xchg
imul
shlb
mov
dec
jno
mov
xchg
out
in
fisubl
lea
in
push
gs
into
fsub
stos
out
pop
mov
adc
dec
pop
imul
call
xor
repz
mov
loopne
outsb
sti
xorl
mov
or
aaa
in
cli
or
dec
mov
mov
mov
not
icebp
xchg
mov
sbb
es
ljmp
jae
lds
rcll
mov
fldcw
out
jb
imul
push
pop
ret
pop
inc
and
dec
pushf
jmp
mov
popa
movsb
mov
inc
iret
dec
roll
imul
ds
les
ret
cmc
fldcw
adc
lea
fsubrs
call
push
arpl
subb
adc
dec
das
into
xor
adc
int3
daa
mov
jp
jecxz
pusha
mov
sbb
push
push
std
and
aad
hlt
outsl
jnp
mov
into
sub
sahf
jp
and
lds
lahf
lods
adc
pop
cmp
mov
or
mov
inc
lret
add
add
jns
cmp
aam
xlat
out
push
cmp
xchg
cmpb
pop
push
out
loop
test
clc
dec
jmp
out
push
pop
js
xchg
mov
fwait
jle
ret
cs
das
lret
bswap
fldl
cmpl
sub
mov
mov
adc
pop
scas
jp
push
repz
xchg
or
out
repz
aam
pop
cmp
xchg
lret
push
add
jo
sbb
inc
mov
sti
dec
sarl
mov
mov
outsb
dec
dec
adc
xor
popf
sub
and
pop
xchg
pop
xchg
packuswb
xor
mov
sbb
das
aad
cs
pop
xchg
sbb
adc
mov
fcompl
cmpsb
sbb
loopne
xor
add
add
lds
dec
insb
mov
sti
cli
mov
outsl
call
sbb
fucom
inc
std
jns
mov
mov
icebp
idiv
mov
lods
pop
sbb
push
cmp
xor
pop
repz
xchg
jnp
or
test
inc
mov
mov
hlt
stos
cltd
cwtl
repz
and
call
sbb
cmp
sbb
lahf
lret
adc
jno
inc
clc
xchg
mov
call
in
outsb
sub
jmp
sub
or
insb
add
sahf
leave
push
and
add
or
dec
fldt
shrl
push
and
imul
jo
fsts
outsb
sub
outsl
stos
xorl
jecxz
into
movsl
and
daa
cltd
mov
adc
mul
gs
jmp
je
xchg
push
add
fldl
out
mov
cli
sub
pushf
sub
mulb
xor
mov
xchg
fidivrl
jmp
mov
cmp
loop
xchg
pop
jb
cli
push
pop
mov
jp
adc
bound
push
xor
fistl
sub
js
test
int3
lret
lcall
pop
sbb
and
stos
adc
aad
nop
jnp
jg
sbb
dec
fwait
cmp
adc
sub
mov
xchg
sbbb
jb
in
mov
jne
js
jae
add
cwtl
mov
fs
jmp
mov
mov
inc
xchg
mov
inc
sub
cmp
loop
mov
sbb
leave
insb
or
adc
leave
xlat
inc
mov
sbb
in
test
mov
xor
mov
fists
in
inc
mov
or
aad
stc
fistpl
movsb
mov
arpl
and
addl
xlat
xchg
pop
and
or
cmc
lock
jmp
loopne
xor
movsb
mov
jmp
outsb
sub
dec
pop
adc
adc
and
test
pop
jle
mov
cmp
repz
push
loope
jmp
mov
in
call
jmp
lahf
adc
adc
xchg
pop
rcrl
add
leave
lds
pop
mov
lahf
cltd
rcrl
or
cmc
xchg
mov
inc
xchg
adc
add
fwait
sub
jbe
xchg
outsl
test
lcall
cmpsl
into
cmpsl
shrb
xor
pop
cmp
adc
iret
outsb
pop
xchg
les
outsb
add
lahf
popa
mov
lret
adc
adcb
jo
mov
dec
outsl
imul
sbb
mov
outsl
xor
scas
xor
and
aas
lds
pop
pop
sub
mov
sahf
pop
outsl
mov
mov
das
fnsave
sub
in
je
fcmove
ljmp
adc
bound
unpckhps
loop
fs
add
movsl
xchg
addr16
xlat
nop
mov
or
std
push
lods
cmp
pop
add
ds
fwait
bound
or
les
push
jne
add
in
fs
sub
in
mov
mov
jno
cld
cmp
inc
mulb
cs
in
push
mov
pop
scas
movb
aad
xor
mov
fdivs
xorl
stos
scas
jbe
pop
adc
mov
sahf
mov
js
mull
sub
daa
push
in
sti
jne
lds
sub
ds
cmp
in
jmp
arpl
sbb
fcomps
inc
mov
pop
das
aam
jae
loopne
xor
xor
ja
cwtl
sbb
mov
loop
out
xchg
out
add
out
ret
mov
inc
in
pop
jecxz
jmp
mov
sti
ret
ret
inc
mov
aaa
sub
test
iret
test
and
or
cwtl
cmp
push
int
add
es
or
je
aaa
mov
cmpsb
orb
lds
subl
sbb
loopne
into
mov
mov
xor
mov
cmp
jg
xchg
xchg
sbb
ss
movsb
adc
mov
flds
push
xor
jl
cmp
iret
push
or
jns
ljmp
loop
ret
into
testl
enter
inc
cmp
and
hlt
insb
inc
sbbl
dec
es
xor
les
jp
push
or
push
mov
pop
sti
lds
dec
into
dec
sti
enter
mov
das
pop
out
lahf
stc
cs
mov
nop
add
fsubs
repz
aad
push
add
jmp
enter
xor
mov
mov
inc
idivl
xor
nop
pop
outsb
mov
int3
sbb
xchg
jmp
mov
xor
out
push
adc
lahf
in
aam
loope
mov
into
iret
sbb
cmp
stos
add
push
add
sub
nop
xchg
lock
pusha
dec
es
mov
or
rcl
pop
shrl
lahf
cwtl
test
fildl
inc
andb
lods
ret
jns
adc
push
and
leave
stc
push
js
int
adc
jae
in
sbb
or
mov
sub
mov
enter
jns,pt
into
int3
push
mov
outsl
xlat
push
loopne
mov
cmc
lahf
pop
or
aaa
nop
cmp
xlat
cltd
add
dec
mov
data16
and
add
mov
push
cli
mov
push
push
cltd
mov
imul
adc
cmp
addr16
mov
jge
jmp
repz
out
mov
fidivl
xchg
shl
push
ret
push
fwait
adc
add
in
pushf
fisttpll
test
jge
rorb
lds
xchg
pushf
cmp
push
push
in
mov
jno
gs
imul
sbb
push
es
fcomps
push
adc
out
pop
jecxz
sbb
fstpt
shll
std
add
pop
sahf
sahf
imul
jno
cmp
dec
mov
sti
adc
dec
mov
adc
call
scas
adcb
adc
mov
es
jecxz
flds
or
icebp
dec
and
cmp
xchg
in
adc
xchg
into
or
mov
xchg
mov
cmc
adc
cmp
je
out
ret
mov
push
jns
hlt
jmp
lcall
cs
daa
push
out
add
aaa
pushf
mov
xor
mov
mov
jnp
sub
cmp
arpl
adc
dec
add
popl
and
rorl
xchg
cld
or
jg
adc
scas
dec
jno
arpl
xchg
jbe
rcrb
xlat
mov
xchg
lea
sbb
shll
repnz
mov
les
in
iret
sub
pop
xchg
fstps
sub
cmpsl
movsl
xor
repnz
xor
arpl
out
outsl
cmp
xchg
mov
pop
lds
mov
inc
sbb
cmp
xchg
scas
and
or
push
popa
jnp
pop
pop
mov
dec
in
lods
ret
mov
fnstenv
xor
inc
lahf
mov
dec
xor
push
outsb
daa
cmp
xchg
add
ficoms
mov
xchg
dec
fwait
or
push
mov
or
call
fisubs
or
xor
push
in
rcrb
xchg
mov
mov
daa
outsb
push
out
aaa
mov
fwait
or
mov
ret
inc
aas
push
inc
push
fstpl
loop
js
fldcw
add
in
sbb
leave
add
frndint
ljmp
and
ret
adc
cmpsl
pop
push
cmp
loope
daa
xor
roll
lock
add
outsb
inc
sbb
or
mov
lock
cmc
xor
fsts
pop
and
lret
decb
push
cmpsb
sahf
arpl
xor
jecxz
movlps
mov
mov
ja
negl
xor
popa
xor
mov
cs
sbb
or
mov
inc
enter
sub
cmp
pop
or
jle
dec
mov
js
mov
aas
and
mov
jne
jl
ss
inc
in
lods
jbe
mov
and
push
mov
cmpsl
dec
jbe
fdivs
in
bound
jae
adcl
xor
incl
pop
mov
mov
movsb
add
addb
gs
in
fwait
pop
xor
xchg
xor
mov
cld
cmp
add
jl
loop
xor
push
push
out
bound
cmp
sub
cmc
nop
fstps
gs
mov
sbb
xchg
add
and
and
scas
jmp
xor
and
or
push
mov
addr16
lret
outsb
xchg
or
aas
lahf
js
xchg
adcb
xchg
cs
gs
jmp
test
lods
jecxz
clc
ljmp
adc
inc
push
bound
dec
dec
xchg
aas
aad
push
out
aam
hlt
sbb
cmp
mov
fmul
es
inc
push
scas
jge
xchg
xchg
loope
fnstcw
xchg
inc
mov
iret
fsubrs
fistpl
and
stc
lret
xor
mov
jo
ret
inc
arpl
push
push
push
outsb
inc
xor
shlb
outsl
data16
jp
push
pop
cmp
push
mov
xchg
jmp
add
or
rcll
jo
mov
call
xchg
clc
mov
icebp
out
int
xchg
int3
lea
mov
clc
je
add
int
enter
push
sub
cmpb
xor
mov
out
cmp
je
dec
fbld
sbbl
mov
cmpsb
mov
insl
test
dec
fsub
test
dec
scas
fmull
fnstenv
inc
mov
sarl
xchg
in
loopne
mov
xchg
inc
mov
repz
ret
xchg
jge
out
cwtl
jnp
stos
in
add
lds
in
dec
lcall
push
repnz
add
xchg
fwait
pop
jge
fwait
hlt
mov
inc
mov
das
test
popa
sub
xor
and
pop
setge
int
dec
pop
sbb
mov
pop
xchg
enter
hlt
adc
dec
dec
das
push
sbb
dec
pop
pop
push
mov
pop
aas
andb
lahf
xor
lods
fistpl
jns
jmp
shrl
fwait
ja
scas
mov
and
int3
add
repz
stos
lret
xchg
fmuls
xor
ljmp
mov
xchg
or
ret
push
scas
es
dec
mov
nop
or
mov
dec
jp
je
incl
insb
adc
aas
mov
jge
out
jmp
mov
popl
xor
jecxz
rcrl
dec
jl
outsb
xlat
es
inc
je
test
inc
jmp
pop
cmp
fs
leave
push
imul
pushf
xchg
or
lcall
rclb
jmp
add
pop
sbb
lret
repz
cmp
xlat
cmp
cmp
pop
mov
and
mov
std
mov
dec
mov
pop
scas
mov
and
sbb
pop
fsqrt
gs
in
aaa
bound
mov
lds
pop
notl
jl
adc
popa
xchg
inc
xor
loope
pop
or
push
push
lods
and
outsb
inc
arpl
push
pop
cmp
push
add
xchg
sti
push
mov
ss
mov
add
and
mov
clc
pop
imul
dec
bound
iret
das
sbb
jle
out
xchg
jge
jecxz
mov
xchg
pushf
stos
fs
jbe
add
arpl
je
sub
hlt
inc
push
push
sbb
mov
rcrl
jecxz
mov
mov
sub
xorl
sbb
icebp
jns
push
xchg
aas
or
mov
xchg
inc
mov
ja
jge
aam
cs
neg
inc
push
dec
sbb
iret
sbb
pop
xlat
sub
mov
sbb
pop
pop
daa
loop
test
fcoml
adc
adcb
inc
jmp
lcall
xchg
divl
out
xor
je
adc
in
icebp
call
hlt
mov
into
icebp
mov
adc
adc
fptan
ret
and
mov
shlb
jne
pop
incl
pop
jg
jecxz
push
call
popl
adc
fisubs
pop
les
sub
mov
xchg
pop
xlat
shl
lcall
xor
int3
call
sub
inc
inc
add
push
aam
ss
movsl
fdivrl
mov
test
jbe
hlt
test
aam
push
push
sub
or
fldenv
xor
out
jmp
arpl
or
add
loope
xchg
ficomps
sbbl
clc
arpl
push
jge
cld
add
aas
cmp
push
or
adcl
jb
mov
or
mov
push
into
mov
loope
test
or
mov
in
jb
test
fimuls
in
xchg
into
dec
adc
roll
dec
cmp
mov
faddl
cmp
stc
iret
mov
jbe
cltd
jae
jg
add
aam
or
jmp
arpl
mov
ret
insb
mov
add
sub
arpl
add
rclb
fiadds
dec
jne
push
testb
in
xchg
pusha
push
pop
insl
jp
cmp
setbe
lods
xor
jg
sub
dec
adc
faddl
cs
fwait
pop
and
dec
jbe
jbe
loope
inc
lods
cmp
idivl
inc
jmp
fldcw
inc
xor
adc
nop
inc
stc
jg
jae
fisubl
inc
dec
je
pop
cmp
push
add
pop
jp
push
iret
xchg
add
inc
aas
pop
je
sahf
cmp
ja
push
xchg
dec
sub
movsl
in
shrl
pop
adc
adc
lcall
jae
scas
test
adc
sub
pop
enter
adc
and
testl
fisttpll
push
lock
or
into
mov
loop
test
roll
sti
sub
pop
in
adc
sbb
cwtl
add
inc
pop
outsl
js
imul
pop
mov
xchg
fwait
stos
push
mov
dec
cmp
push
push
xchg
rorb
ficompl
bound
aam
hlt
jecxz
xchg
xchg
and
push
lcall
sbb
mov
jmp
rcr
mov
mov
sbb
push
xchg
push
dec
scas
fstpl
xchg
add
aad
pop
mov
jl
mov
divl
outsb
or
and
jg
clc
or
add
push
leave
push
sbb
mov
test
shll
inc
xor
call
mov
mov
mov
jnp
nop
into
inc
insl
and
int3
dec
xchg
push
imul
or
xchg
das
and
cwtl
mov
and
sub
push
mov
mov
inc
dec
xor
and
stos
std
in
cmp
xchg
dec
roll
xchg
inc
dec
jge
loop
ret
mov
dec
push
xchg
mov
adc
int
mov
out
adc
les
mov
inc
jne
adc
push
movsb
adc
stc
movsb
fdiv
cltd
lret
sarb
ret
adc
or
icebp
push
cmp
pop
lea
inc
pop
mov
add
dec
addr16
mov
jp
mov
imul
mov
jbe
xor
xorb
and
fistpll
sbb
fisttpl
sbb
fistpll
out
push
add
sbb
movsb
pop
inc
push
aam
fildl
cmp
mov
movb
and
into
out
mov
iret
adc
push
dec
in
je
cmp
xchg
sbb
mov
sub
ret
divl
cmpl
push
out
ret
jle
jg
mov
dec
or
pop
leave
test
cmp
xchg
cmpsl
lods
xchg
mov
iret
mov
mov
mov
or
jno
shlb
stc
jno
mov
push
mov
jnp
xchg
pop
cmpsb
xchg
add
fadds
jle
xor
push
ficoms
popf
or
lock
loop
jae
jge
or
adc
sub
mov
daa
and
xchg
pop
int3
leave
push
inc
out
cwtl
xchg
xchg
jle
add
push
pushl
scas
push
add
fwait
mov
adcb
push
jg
mov
dec
mov
and
roll
sbb
ja
cmp
xchg
xorb
push
sbb
add
xchg
mov
pop
xlat
and
or
and
adc
aas
dec
mov
insl
pop
xchg
jns
mov
call
xor
dec
xchg
lret
fistl
repz
inc
xchg
pop
inc
repz
cmpsb
inc
cmp
sbb
fdivs
icebp
pop
rolb
sub
cld
icebp
mov
add
fcom
dec
idivl
addr16
gs
lods
xchg
lods
test
mov
bswap
adc
jle
js
fildl
sub
mov
xchg
sbb
xor
fisubrs
jmp
pushf
fs
cmp
aad
sti
dec
or
outsb
push
cld
add
xor
dec
jge
xor
decb
les
dec
icebp
jmp
imul
out
jp
das
mov
outsl
adcb
movsb
push
pop
sub
add
outsl
stos
stc
mov
cltd
mov
loop
icebp
sub
inc
cmpsl
lahf
and
push
mov
mov
imul
mov
dec
or
shrl
lods
sbb
sahf
mov
in
fsubr
dec
cmp
xchg
fildl
aam
pushl
push
ficompl
cmp
mov
jo
push
test
stos
sbb
push
loop
ja
jecxz
mov
xchg
sub
rcr
sub
movsl
fisubrl
outsb
aas
and
lock
fldcw
and
cmp
mov
jp
or
dec
leave
and
loop
cmp
clc
pop
sahf
gs
adc
mov
cmp
mov
mov
push
popa
enter
lock
jno
xor
jnp
sub
add
loop
mov
outsl
fidivl
or
pop
sahf
sub
mov
aas
cmc
movsl
ds
push
jo
adc
or
call
orl
jae
sbb
adc
cmp
iret
cmp
mov
mov
dec
out
and
inc
jbe
movsb
jl
and
cmp
aaa
xchg
test
inc
pop
cmp
gs
pop
sub
rclb
push
cmpl
sub
ja
jae
rolb
push
repnz
imul
outsl
lock
aaa
cli
aad
dec
jb,pt
int
jmp
repz
cli
out
cmp
aas
je
mov
sbb
push
lahf
es
push
push
mov
xchg
sbb
push
shlb
jne
mov
adc
adc
pop
ret
es
test
inc
ror
in
imul
test
inc
testl
clc
lret
inc
xlat
inc
inc
cwtl
adc
pop
addr16
xlat
jmp
cld
sbb
sub
inc
cmp
jae
inc
push
dec
aam
add
or
notb
xchg
outsl
cmpsl
and
lea
push
pop
into
mov
rcl
dec
push
sbb
inc
cmp
xchg
pusha
insb
lea
loope
dec
sub
push
das
and
into
inc
les
sub
imul
or
je
and
add
inc
xlat
lret
cmp
mov
xor
pop
push
scas
mov
pop
sahf
call
xchg
add
add
out
lock
jnp
cltd
sub
call
addr16
int
sub
hlt
pusha
pop
jge
mov
dec
int
add
fistpll
adcb
push
cmc
aad
mov
arpl
out
ja,pn
loope
cmc
and
xchg
cmpsb
adcb
int
adc
clc
sub
movsb
loopne
push
xlat
je
sbb
push
or
push
gs
jle
xchg
vmovups
pop
sarb
mov
adc
int
jp,pt
xor
stos
pop
sbb
imull
and
dec
inc
sahf
jns
inc
inc
sbb
fcomi
or
mov
fs
sbb
jecxz
add
ds
mov
pop
fdivrs
xlat
cmpl
sbb
cmp
sbb
or
mov
pushf
ds
lds
xor
fs
test
das
sbb
or
inc
and
in
nop
inc
clc
sahf
ljmp
lcall
pop
mov
incl
mov
cs
pop
leave
call
je
mov
test
mov
inc
jecxz
lods
sbb
movsb
popf
bound
xchg
cmpsb
or
sbb
add
sub
das
pusha
lcall
pop
scas
mov
fstl
cs
xor
push
icebp
fsubr
pop
jge
loopne
and
push
push
or
lret
outsb
xchg
push
lret
jbe
adc
pop
mov
add
and
data16
repz
sub
cmp
xor
lock
cs
or
mov
pop
or
mov
cmp
cld
or
negb
cmp
cmc
dec
pop
push
dec
ret
jne
xor
jmp
inc
mov
sub
jmp
mov
pop
testl
inc
mov
jnp
mov
lea
leave
addb
ljmp
loop
adc
std
push
lcall
mov
dec
cmp
rcl
fldcw
sub
jne
cli
and
pop
jb
les
sub
scas
and
sub
lret
lret
addr16
cmp
jle
cmp
mov
scas
xchg
scas
jnp
xchg
ficomps
out
dec
xchg
dec
jne
xlat
loopne
inc
mov
cmp
leave
mov
mov
mov
mov
pop
cmp
jmp
cmp
xor
hlt
mov
mov
outsb
stc
insb
pop
add
in
ja
mov
mov
adc
call
or
dec
mov
add
and
mov
outsl
test
mov
sahf
dec
mov
aad
es
mov
or
loop
fmulp
cmp
mov
movl
ficoml
outsb
pop
or
cmp
xor
dec
vsubpd
cmp
xor
sbb
jns
bound
lds
dec
or
test
aas
mov
enter
fcmovnbe
imul
jmp
mov
mov
lret
shrl
xchg
adc
bound
or
inc
or
sub
jmp
and
into
into
mov
lahf
jns
scas
push
add
jne
lds
fsubl
xchg
and
adc
das
loop
jno
out
cltd
push
into
ljmp
jg
add
imulb
mov
out
iret
pop
jmp
shrl
sbb
and
or
rcrl
adc
lret
je
lods
sub
testl
fldenv
inc
xchg
mov
xor
cmpsl
pop
ret
and
inc
mov
xchg
sbbl
popa
or
shll
inc
mov
push
xorb
sub
cmp
ret
cmp
xlat
fs
fbld
or
je
testl
aaa
shl
dec
in
popa
mov
cmpsb
sahf
cwtl
popa
out
xchg
adc
in
imul
inc
test
cmp
and
cmpl
xor
into
out
mov
lahf
das
popa
xchg
pop
mov
out
pop
shl
mov
mov
das
jno
dec
cld
mov
loop
inc
test
into
icebp
bnd
shlb
add
cmp
jmp
xor
mov
mov
ja
idiv
fs
dec
stos
jg
aam
dec
andl
push
xchg
mov
dec
popf
mov
orb
mov
add
mov
jl
push
insl
stos
push
jmp
lods
mov
jge
nop
daa
cld
sarb
or
sbbl
mov
pop
xor
dec
inc
sub
out
cmp
adc
pop
xlat
xchg
cmp
out
and
mov
test
shl
cli
mov
inc
or
or
cmpsl
mov
add
jmp
loopne
arpl
ljmp
push
es
jle
loope
pop
ret
gs
cltd
pop
cmp
outsl
cmpsb
jecxz
scas
pop
and
adc
jecxz
cwtl
testl
push
and
int
sub
bound
in
mov
mov
mov
jge
decl
fdivrs
mov
pusha
popa
leave
sub
scas
mov
jp
scas
scas
fsubp
sub
mov
aas
je
cs
fidivrs
mov
scas
add
add
scas
shlb
push
mov
pop
lods
rcr
fisubrs
aad
or
xchg
xor
or
sub
mov
mov
pop
ret
gs
or
jnp
test
leave
subl
push
rcll
pop
add
popf
pop
dec
mov
in
cmp
sti
in
divl
fnsave
out
jae
xchg
mov
push
add
push
mov
repnz
jl
sub
inc
aam
lock
xor
lods
jb
ds
ret
cld
jmp
sub
bound
loop
pop
xor
pushf
imulb
sti
popf
inc
fwait
pop
cltd
mov
loope
or
insb
adc
cmp
push
adc
subb
les
sub
das
fisttpll
pop
inc
jle
sti
add
adc
aaa
popa
dec
cs
cmp
out
bnd
dec
pop
je
add
and
scas
cmp
pop
fsts
lret
movsl
aad
mov
and
adc
call
cmp
std
imul
jb
outsb
sub
int
dec
add
sub
addb
dec
dec
xchg
movsb
sbb
xchg
add
nop
hlt
lods
xchg
adc
sub
sub
adc
pop
push
imull
lock
rcl
mov
fs
pop
nop
out
pop
jns
std
les
out
outsb
cmp
xor
in
sub
pushf
and
xchg
mov
iret
fsub
rcl
rol
jmp
cli
add
jecxz
and
and
add
push
cmp
or
dec
into
mov
sub
pusha
jnp
test
das
aaa
lret
or
mov
nop
mov
insb
cmc
outsb
cmc
lea
andl
pop
dec
pop
cli
adc
shll
pop
lds
jo
shrb
mov
mov
loop
adcl
inc
stc
stc
arpl
jnp
test
push
lods
mov
fdivs
sub
iret
dec
ja
lret
inc
in
or
fs
fnstcw
jp
shl
fisubrs
fwait
call
in
xlat
mov
and
xchg
aaa
xchg
push
mov
mov
cmp
pop
xchg
jno
xor
push
xchg
outsl
pop
jecxz
sahf
ret
ficomps
pusha
dec
and
shl
mov
js
xor
aaa
sub
testl
dec
jge
daa
adcb
xchg
fisttpl
jns
push
test
mov
mov
sbb
in
cmpl
sbb
rcll
cli
push
xchg
sub
andb
push
loope
jne
cmp
movsl
cmp
clc
lret
push
into
daa
call
cmp
jp
enter
or
sub
push
sarl
pop
bsf
aam
pusha
sti
or
arpl
mov
push
jb
push
mov
sbb
add
mov
test
push
adc
mov
cmp
inc
cmp
push
xor
adc
enter
sbb
add
jmp
mov
push
sub
loope
and
and
jne
jecxz
frstor
xchg
xchg
enter
stc
rcrl
jmp
jge
ds
sbb
pop
fidivl
test
push
cmp
in
loopne
mov
pushf
jmp
xchg
mov
dec
movsl
call
inc
mov
mov
cmc
add
mov
push
mov
lcall
inc
sbbl
pop
push
aam
or
xchg
jg,pt
mov
cmp
mov
iret
cmp
mov
mov
push
sub
sbb
xchg
out
cltd
push
mov
in
cmp
cmpsl
push
push
fisubs
cmp
xchg
jecxz
inc
loop
int
imulb
pushf
and
clc
push
cmp
subb
rcrb
mov
inc
or
cvtpi2ps
aad
mov
jbe
rclb
and
sbb
mov
or
add
mov
fadds
les
test
jle
addr16
outsb
or
mov
cmp
shr
pusha
adc
scas
add
neg
pop
jns
xorb
sbb
and
dec
inc
out
xchg
push
lock
test
pop
add
jb
shrl
push
addr16
repz
pop
pusha
jno
pop
stos
mov
aaa
xchg
mov
cmp
inc
scas
das
adc
out
push
jno
fdivl
jecxz
cltd
imul
es
xchg
add
fdivr
mov
pusha
es
dec
fxch
stos
cmp
cld
popa
sub
fidivrl
sub
ljmp
in
adc
lock
cmp
into
fnstcw
das
mov
les
jmp
sub
cmp
push
add
sahf
xchg
mov
test
xor
adc
clc
mov
mov
scas
insl
cli
popf
and
hlt
jmp
xor
mov
ret
imul
lret
push
pop
cmp
jo
xor
icebp
mov
add
push
hlt
adc
cmp
sub
stos
sbb
mov
push
mov
call
enter
cltd
rorl
xchg
test
push
pop
sbb
inc
insb
xchg
std
jb
xchg
push
mov
nop
incb
inc
cmp
xchg
aas
sbb
ds
add
xchg
cli
ja
cmp
or
or
mov
push
cmc
jb
nop
cli
sbb
cwtl
enter
sbb
insl
pop
ljmp
clc
pop
lods
pop
je
icebp
divl
mov
shlb
fdivl
and
push
mov
call
cmpsb
sbb
sbbl
icebp
ljmp
add
sub
or
andl
fsubr
imul
xchg
ss
adc
xor
call
fbld
xchg
out
mov
cmp
jle
inc
int3
mov
mov
loop
or
dec
outsl
lret
insl
loopne
in
xor
add
add
cmp
dec
fdivrl
fs
loopne
sub
cmpsb
jno
mov
pop
aaa
in
popf
andl
les
jbe
xchg
insl
mov
mov
idivl
adc
xchg
xchg
mov
in
add
mov
aas
dec
cmp
jno
pusha
mov
iret
mov
add
cld
jecxz
fxch
jge
mov
dec
xor
xchg
push
cmc
cwtl
movsl
cmc
into
xlat
mov
out
sahf
mov
xor
pop
in
mov
pop
mov
pop
mov
mov
jmp
mov
nop
test
lcall
cmpb
cmp
fsubs
stc
and
cltd
jne
cmpsl
inc
push
ds
popf
gs
cmpsb
cmp
pop
mov
cmc
test
outsl
hlt
js
and
cltd
std
outsb
in
clc
mov
daa
mov
test
mov
inc
sub
rorb
hlt
fwait
push
jae
loop
ljmp
inc
inc
int3
xchg
fisubl
mov
psraw
cmp
push
pop
inc
xor
xchg
xor
nop
addr16
in
dec
sbb
fistl
and
cli
and
icebp
daa
pop
popa
iret
pop
add
jae
cmp
lods
cmp
cwtl
pop
aas
pop
sub
stc
adc
out
cs
cmp
inc
mov
or
clc
mov
mov
inc
lahf
sub
or
add
add
add
mov
add
xlat
scas
add
fsub
add
cmp
xchg
add
mov
add
push
sbb
and
sub
mov
jnp
jge
jg
stc
xchg
inc
sbb
cmp
sbb
mov
fisubs
add
outsb
pop
shrb
inc
sub
push
leave
push
outsb
jg
pushl
mov
lods
pop
lods
in
icebp
mov
mov
outsl
test
aaa
adc
jge
mov
mulb
dec
push
insb
pop
xchg
sub
cld
cmp
bound
and
shlb
mov
push
imull
mov
ret
inc
mov
mov
pop
loope
fwait
push
inc
sbb
cmpsl
mov
dec
jbe
push
inc
inc
ret
adc
ss
cmp
push
mov
push
mov
insl
test
mov
rcrl
xchg
mov
push
gs
cli
pushf
jle
mov
fisubrl
inc
stc
mov
cmp
test
mov
push
jno
enter
mov
imul
mov
je
or
arpl
daa
aas
push
out
ja
xchg
or
push
loopne
pop
sti
unpckhps
nop
test
and
mov
ljmp
push
push
stos
jbe
popf
xchg
or
sub
xchg
adc
sub
push
push
pusha
ret
pusha
jmp
pusha
rcrb
dec
cmp
in
out
mov
pushf
mov
loope
jecxz
jns
or
stc
mov
mov
fs
xchg
fisubrs
cmp
pop
mov
mov
loope
inc
addr16
test
iret
sbb
mov
addr16
dec
mov
in
adc
addl
mov
out
nopl
dec
xor
in
jecxz
arpl
dec
cmpb
ret
pop
fimull
insb
pusha
leave
dec
icebp
clc
notb
cmp
orl
pop
mov
inc
add
ljmp
mov
leave
lret
mov
in
sbb
jg
ja
sub
daa
xchg
pop
dec
stos
sahf
push
and
pop
and
mov
add
cmpb
pop
sbb
hlt
jnp
fst
adcb
cmp
pop
sbb
shrb
mov
push
shll
mov
pop
pop
cmpsl
push
and
add
push
out
jge
jne
rcrb
outsb
out
aas
ret
sbbl
shl
mov
xlat
push
inc
gs
orl
jge
out
rorb
adc
mov
mov
xchg
pop
aad
push
jne
outsb
jae
sahf
mov
pop
push
sbb
inc
sub
ja
mov
sub
ja
add
inc
xchg
enter
std
jp
stos
jne
out
cmp
mov
push
xor
call
addps
add
loope
push
fs
pop
repz
mov
jae
dec
or
xor
cs
cmpsb
pop
cmp
daa
rcr
int3
sbb
outsb
loopne
jle
pop
mov
mov
iret
cmp
sbb
xchg
xchg
test
bound
mov
mov
rolb
xor
cmpsl
mov
or
sarl
scas
rol
adc
or
sti
jnp
cmp
push
mov
sbb
bound
repnz
in
les
sbb
pop
test
movsl
test
lret
sbb
or
lods
stc
ficoms
inc
jae
or
dec
out
ds
imul
mov
push
sbb
sub
xor
ss
mov
js
popa
inc
lcall
test
cmc
or
and
sbb
mov
mov
jmp
clc
in
cltd
loop
pop
sub
sbb
jb
and
ja
sbb
mov
jno
pop
pusha
sbb
jbe
cmpsl
notb
out
outsl
scas
in
cmp
mov
int
mov
movsb
in
cmp
sbb
cltd
xchg
imul
mov
in
mov
pop
mov
hlt
lret
aaa
dec
jno
stc
pop
push
cmpsb
cmc
out
inc
leave
sub
leave
jge
pop
mov
pop
mov
lea
dec
shlb
mov
mov
sub
insb
das
fbld
lea
pushl
pop
shrb
out
or
sub
jo
aaa
lock
movsl
xor
add
int
cmpsb
xor
mov
jo
sub
mov
pushf
mov
outsb
mov
mov
xchg
lret
adc
and
sbb
push
mov
adc
add
leave
xchg
or
fsubrl
inc
mov
dec
imul
pop
inc
mov
xor
pop
addr16
jae
lds
jp
adc
cmpsl
xor
mov
xlat
rcll
pop
sti
inc
mov
out
cmp
fcompl
xchg
and
cmpsb
xor
fpatan
sbb
ficoms
aaa
lods
vsubpd
jne
jb
dec
les
pusha
ljmp
stos
inc
adc
jbe
roll
cmp
mov
orl
jns
jo
daa
jg
sbb
xchg
lea
adcl
mov
cmp
adc
gs
das
mov
push
sub
pop
pushl
jno,pt
inc
mov
push
mov
push
js
jae
stos
mov
push
mov
adc
fisubrs
xor
xor
sahf
scas
and
test
cmc
cwtl
mov
addr16
stos
ljmp
push
divb
or
iret
xor
push
pop
icebp
xchg
mov
aam
mov
sub
or
push
adc
add
cltd
mov
mov
and
loopne
cmp
or
mov
aad
dec
fildll
dec
pop
jle
movsl
or
pop
push
add
jg
pushf
stos
cs
andl
mov
out
data16
popa
xchg
jecxz
lods
out
mov
xor
xor
js
inc
lock
repz
fldt
jo
cltd
cs
or
xor
push
sub
pop
push
pushf
mov
or
jg
xchg
adc
pop
adc
and
sti
mov
push
pop
outsb
inc
xlat
cltd
insb
push
mov
cmp
sbb
notl
mov
nop
inc
lahf
fstpt
mov
test
and
in
cmp
into
dec
sbb
xor
adc
lcall
and
add
enter
push
xor
mov
stos
inc
or
add
dec
outsb
mov
enterw
outsb
or
std
loope
jae
das
lcall
pop
lret
inc
shrb
pop
sbb
outsb
mov
pop
je
dec
cmpsl
jmp
inc
xlat
or
xorb
or
shl
popf
ror
push
push
loope
sbb
test
mov
inc
push
sbb
mov
sub
arpl
fildll
push
jne
sbb
inc
pop
stc
out
cwtl
inc
outsl
cwtl
cmpsb
rdpmc
cmpsb
xor
ffreep
cld
fprem
insl
mov
cmp
psubd
mov
or
fucomp
dec
pop
fdivrs
aaa
aas
mov
lods
xchg
aad
mov
cmp
push
push
aam
and
pop
test
push
frstor
or
pop
fwait
xor
add
repz
inc
insl
add
pop
ljmp
add
int3
fbstp
sub
ja
sbb
mov
insb
sbb
sub
jp
icebp
add
cld
lret
clc
pop
xchg
cmp
ds
pop
mov
js
cmpsb
xchg
lahf
adc
xchg
cld
repnz
sub
js
mov
pusha
arpl
imul
in
cmc
adc
cmpsb
xchg
xchg
mov
jnp
xor
inc
lret
sbb
pushf
icebp
fs
ret
mov
fstpt
mov
sub
adc
xor
xor
pop
rclb
mov
in
mov
movsl
test
jno
pop
mov
jno
icebp
mov
dec
data16
mov
lds
mov
cmp
in
mov
iret
and
aas
cmp
pop
add
jp
ljmp
sti
push
pop
add
pop
dec
mov
fildll
cmp
sbb
lret
hlt
fwait
xchg
cmp
cmp
adc
push
adc
mov
inc
add
outsl
outsl
test
test
into
in
sbb
ret
aad
xchg
lcall
shll
sti
mov
inc
push
push
lret
mov
daa
push
imul
push
imul
outsb
popa
aad
cmp
int
orl
in
push
sbb
sub
outsl
adc
adc
cld
lods
pop
jb
scas
les
xchg
test
ret
mov
imul
js
loope
mov
ljmp
adc
stos
push
sahf
or
inc
jle
mov
add
clc
xor
push
cwtl
adc
imul
push
mov
push
mov
mov
sub
int3
inc
test
lds
add
icebp
outsb
and
shl
rcl
sub
inc
jg
jo
cmc
das
lret
shrl
or
iret
and
sbb
mov
repz
repz
cmc
pusha
nop
mov
ja
sub
sbb
lcall
in
mov
mov
sub
inc
shlb
repnz
push
clc
lcall
mov
ret
sbb
rcll
insl
decb
sti
inc
in
cmp
xchg
mov
ljmp
outsl
lret
popl
jbe
dec
loope
and
test
stc
test
outsl
mov
jge
adc
sbb
xor
and
adc
cltd
dec
cmp
or
pop
push
pop
jns
cmc
dec
cmpb
ljmp
test
movsl
push
outsl
adc
sbb
stc
sub
fstps
dec
pushf
pop
lret
icebp
and
sub
dec
mov
and
imul
rorl
loop
dec
dec
in
insl
mov
ficoms
hlt
cmc
sub
aaa
ja
cmp
xchg
fs
fmuls
mov
loopne
ljmp
push
gs
jl
jl
mov
jg
adc
jle
mov
mov
sub
int
js
jmp
mov
ret
mov
mov
sqrtps
aad
or
cmp
cmp
jbe
adc
inc
push
mov
sahf
rorl
lods
jg
pop
pusha
mov
mov
jbe
shl
sub
hlt
sub
jecxz
cmc
dec
pop
inc
inc
inc
outsl
jno
push
mov
int
lcall
xor
xchg
jo
es
xor
in
xchg
and
jecxz
mov
inc
pop
sub
loopne
cwtl
testl
push
int
mov
dec
gs
xchg
ljmp
mov
inc
inc
fbstp
insb
lock
and
sub
inc
lods
lret
mov
add
hlt
pop
dec
rcrl
int
mov
mov
lret
mov
mov
dec
and
ss
mov
mov
push
mov
adc
pusha
gs
xchg
stc
xor
iret
shlb
add
xchg
sub
call
jg
xor
ret
aaa
jle
out
in
xchg
ja
pusha
xor
adc
cmc
fisubl
dec
jg
lcall
cmp
cs
loopne
neg
mov
das
mov
mov
cmp
xor
ss
dec
add
add
jp
adc
or
cmp
xor
cmp
gs
xchg
mov
and
outsb
mov
out
jle
rorb
ret
lock
adc
ljmp
sbb
jecxz
cmp
sbb
stos
imul
loop
pop
es
pop
lcall
stos
cmc
dec
mov
pop
les
iret
or
aas
inc
incl
out
jecxz
push
add
push
inc
pop
andl
dec
mov
jge
inc
inc
int3
daa
and
lcall
enter
cmpsl
mov
shlb
jb
lret
mov
lret
cwtl
ret
and
out
shl
xchg
inc
in
out
jns
nop
ds
jecxz
cs
outsb
loope
push
shrl
lds
jns
jb
inc
je
add
add
in
dec
orb
pop
popa
mov
push
inc
stos
fwait
dec
add
out
and
pop
dec
jb
mov
rsqrtps
adc
add
mov
jbe
push
pop
imul
and
push
or
movsb
arpl
imul
ds
mov
inc
jns
enter
lods
stc
jecxz
mov
push
push
les
jno
orb
dec
ljmp
fmul
xor
mov
xor
dec
mov
xchg
ja
subl
jl
out
pop
jge
push
sub
insl
sti
mov
fistpll
adc
jbe
push
sub
scas
mov
cltd
aaa
scas
xchg
insb
mov
push
push
pop
gs
fstpt
cltd
fdivs
mov
nop
movsl
mov
leave
mov
mov
sub
stc
aas
xchg
test
mov
js
jnp
mov
mov
xlat
gs
mov
fisubs
aad
mov
jo
hlt
mov
xor
xor
fs
addr16
mov
das
add
and
andb
xchg
or
stos
mov
mov
enter
xchg
lcall
cmpsb
les
and
fcompl
cmp
add
mov
add
mov
lahf
ljmp
or
nop
ret
stos
je
mulb
out
cmp
popa
in
mov
loopne
lods
sub
add
add
std
cmp
pop
out
dec
leave
mov
xchg
mov
shrl
sbb
pop
add
stos
mov
inc
cmp
push
sbb
in
mov
jns
fwait
jo
jae
rcl
cs
shlb
mov
mov
pop
or
lea
int
jl
or
inc
cld
mov
xchg
xchg
andb
push
cld
or
inc
jne
jp
out
inc
inc
insb
adc
js
rorb
fstl
in
dec
in
rcrl
and
dec
pop
add
int
cmp
nop
movl
outsb
test
jbe
add
inc
imul
push
lea
mov
jno
fwait
lods
or
mov
sbb
pop
adc
jbe
pop
dec
mov
sub
call
out
repz
inc
dec
es
es
inc
sub
cmp
xchg
xor
stos
clc
jmp
mov
inc
xor
stos
and
mov
outsb
xchg
xchg
imul
mov
aas
ror
repz
rorl
dec
xlat
push
sbb
push
xchg
pop
das
ds
mov
xorps
cmc
int3
addb
aaa
pop
mov
sbb
jl
cltd
popf
jb
lds
ja
xorb
out
push
nopl
lock
loopne
xchg
pop
xorb
cmpsl
iret
cmp
enter
lods
cmp
sahf
iret
movsb
pusha
add
pop
jb
in
xor
lret
cli
pop
cmpsb
cmpsl
mov
dec
popa
cli
cmp
cs
icebp
xchg
fisttpll
sub
cmc
ss
push
inc
ret
mov
dec
jbe
dec
mov
adc
and
decl
push
add
jle
dec
ret
xchg
aas
sbb
and
nop
add
cmpsb
dec
xchg
and
sub
mov
dec
inc
push
xor
jg
mov
ss
or
push
in
dec
ljmp
test
inc
in
push
sahf
insb
fadds
sti
jecxz
flds
cmp
fcomp
jl
adc
adc
mov
sarl
mulb
lret
inc
arpl
faddl
mov
mov
jne
jb
sbb
xchg
pop
xchg
es
sub
mov
inc
pop
in
iret
jmp
fdivp
jb
or
jb
or
or
cli
addr16
mov
pop
jge
mov
xchg
jae
dec
addr16
xor
repz
mov
mov
jmp
cmp
loop
stos
imul
out
mov
pop
sub
push
push
dec
pop
jl
test
push
push
and
pushf
push
icebp
ret
xchg
subl
test
iret
inc
arpl
xor
xchg
sbb
inc
mov
stos
mov
int
inc
gs
adc
pop
out
and
pop
stc
adc
test
cmp
add
xchg
js
push
or
adc
test
sub
in
nop
jns
sub
fucomi
aaa
jae
jle
mov
cmp
pop
jl
or
test
lods
enter
in
cmp
aaa
mov
mov
inc
adc
mov
xchg
mov
push
stos
movsb
mov
dec
sti
inc
lds
pop
dec
mov
sub
mov
pop
enter
gs
imul
cmpsb
shlb
cltd
clc
mov
or
testb
lret
mov
inc
pop
xchg
xchg
mov
sbb
and
shrb
shrb
xor
dec
or
add
in
inc
push
mov
bound
hlt
movl
data16
stos
or
xor
lock
pop
scas
js
mulb
jmp
cs
cli
fwait
imull
out
jbe
out
jecxz
mov
adc
mov
jp
jge
fcomps
cmp
fld
pop
insb
mov
push
mov
sahf
inc
inc
mov
or
fldcw
leave
lahf
ja
test
push
pop
arpl
push
hlt
mov
data16
mov
jnp
mov
scas
roll
test
cmp
icebp
pusha
sub
adc
or
repz
daa
mov
fwait
rolb
movl
mov
xchg
push
push
aad
jp
push
test
mov
call
adcb
out
outsl
icebp
icebp
fs
icebp
adcl
xchg
ret
xchg
xchg
pop
inc
cmp
sbb
mov
out
ret
or
xchg
std
jbe
dec
jno
xor
ret
cltd
pop
fcomp
add
mov
mov
dec
pop
sub
lahf
sbbl
movl
sti
or
aaa
mov
dec
cmp
or
mov
int
test
mov
mov
xchg
ret
mov
push
xor
out
mov
imul
xor
loopne
sub
add
lcall
mov
sbb
and
xor
call
cmp
arpl
add
and
out
dec
daa
scas
inc
shlb
add
add
fstps
mov
inc
or
repnz
sbb
clc
stos
mov
outsl
ficompl
add
jae
fwait
out
dec
repnz
das
dec
ds
add
push
jp
and
es
dec
clc
sub
xchg
mov
popf
test
add
xchg
inc
mov
mov
xor
jo
sbb
cmpsl
add
arpl
mov
movsb
shll
jg
fnsave
and
cmp
sub
inc
push
dec
std
sbb
fistpll
cs
inc
or
imul
mov
leave
movsl
shlb
add
pop
insb
inc
dec
mov
cltd
orl
mov
xor
xor
xor
xor
repnz
jl
aas
mov
sub
popf
push
pop
cmpsb
arpl
movsb
adc
xlat
and
loop
in
sub
or
mov
dec
shrb
rcll
arpl
popa
push
mov
mov
xchg
jmp
mov
push
mov
sub
jg
mov
mov
push
xlat
cwtl
stc
cmp
fstpt
cmp
mov
dec
add
adc
jmp
stos
xor
shr
mov
icebp
movsb
test
lods
lds
push
hlt
sbb
int3
lds
cmp
and
out
push
mov
lds
imul
xchg
xor
adc
cs
pop
fwait
ret
scas
test
mov
stc
xchg
or
dec
sbb
call
mov
inc
sahf
rcrl
pop
sub
test
vmaxpd
mov
cli
dec
pop
mov
aam
call
sahf
xchg
sub
or
dec
adc
jbe
pop
ret
dec
cmpsb
mov
or
jb
test
inc
add
mov
stos
pop
lods
ja
test
ret
cmp
push
stos
dec
jo
dec
mov
sbb
mov
jae
xchg
cmc
repnz
lret
adc
stc
dec
cmpsb
fmull
dec
addr16
out
orb
jmp
push
sbb
lds
xchg
jge
pop
dec
lods
push
repz
jns
sbb
in
shll
mov
inc
sub
lods
loop
pop
fimuls
pop
out
scas
pop
push
inc
pop
mov
cltd
out
push
gs
aad
sbb
and
cmp
sub
xchg
pop
mov
or
xlat
or
loope
je
cwtl
push
ljmp
movsl
lahf
mov
xchg
lcall
jb
enter
ss
repz
sub
int
clc
jbe
mov
jb
or
mov
aam
dec
cld
sub
or
jl
mov
mov
add
clc
mov
pop
cmpb
or
cmpsb
into
mov
push
and
pop
fisttps
or
hlt
out
mov
adc
in
in
and
xlat
repnz
mov
cltd
fiadds
shlb
xor
adc
hlt
addl
mov
jg
daa
fstps
insb
sub
push
lea
pop
repnz
jmp
ljmp
ret
mov
in
sub
jb
inc
pop
jne
push
clc
mov
shlb
cmp
aam
paddusb
fstp
in
or
mov
stos
jnp
rcrl
lods
jbe
jnp
push
imul
jbe
mov
xchg
into
gs
mov
lea
mov
sbb
push
dec
inc
gs
jmp
jbe
xchg
jp
dec
sbb
in
lcall
sbb
mov
scas
adc
int
insb
test
sub
xchg
add
xor
cli
pop
jo
stc
add
add
subb
daa
mov
repz
mov
mov
jbe,pn
inc
xor
rcrb
repz
push
jle
pusha
and
out
sub
pushf
dec
push
jmp
addr16
push
lahf
pop
das
rorl
nop
andl
pop
cld
ja
cltd
fcoml
ss
mov
jns
stos
cmpl
ljmp
xchg
cs
pop
imul
scas
inc
sub
cmpsb
lock
cmpsb
test
push
cs
or
test
pop
cmp
mov
cmpsb
stos
xor
lock
pop
mov
andb
pushf
aad
stc
cmp
xor
dec
fsts
jge
fnstcw
mov
mov
fidivrl
fwait
adcl
pushf
ds
std
xchg
mov
xor
jo
fs
sahf
xchg
sbb
les
xchg
sbb
pop
mov
mov
xlat
jo
jl
stos
ljmp
hlt
loop
xchg
xchg
and
lahf
fs
shrb
mov
enter
in
into
dec
push
mov
ljmp
fcompl
sti
arpl
push
jno
in
mov
sahf
std
jl
pop
jb
and
repz
pop
bound
xchg
mov
pop
or
sbb
mov
js
lea
mov
call
xchg
sub
std
pop
fsubp
cmp
mov
mov
fidivrl
push
push
sbb
shlb
sbb
fidivs
in
into
cmp
adc
or
ret
popl
sahf
addb
add
sbb
rcrl
test
lahf
pop
pop
shr
xchg
mov
bound
loop
mov
ret
inc
xchg
jl
pop
jmp
xor
sbb
or
lods
push
add
jae
xchg
cmc
shlb
push
push
jnp
movsb
imul
fisubs
cli
jns
insb
xchg
bound
data16
lahf
sub
and
stos
xor
data16
xchg
ss
push
mov
or
repz
inc
push
xor
call
mov
fidivrl
icebp
cld
cmpsl
ljmp
add
out
decl
call
out
dec
insb
mov
test
movsb
pop
inc
mov
jmp
mov
mov
mov
push
mov
imul
jo
inc
jecxz
add
lds
iret
pop
aaa
jp
mov
imul
jns
ss
or
lea
in
rcll
sbb
xor
lcall
das
mov
icebp
ret
test
bound
mov
movsb
sbb
mov
pop
popf
into
jb
add
pop
lds
lods
push
dec
xlat
sbbl
xlat
push
out
sti
aad
and
mov
xor
mov
imul
mov
mov
sub
pushf
testl
cmp
subb
and
sarb
jae
dec
lcall
sbb
pop
cs
je
cmc
cld
cmp
daa
icebp
xchg
or
cmp
or
add
mov
fwait
loope
addr16
adc
mov
sub
pushf
pop
push
cmpsl
mov
ja
dec
jg
dec
ret
je
aad
lcall
fstl
xchg
orb
out
mov
insl
aam
movsl
pusha
loope
xor
mov
pop
pop
pushf
jae
mov
icebp
push
pushf
repz
daa
mov
shl
adc
sbb
jne
out
icebp
loop
ss
xchg
xlat
xor
mov
inc
lods
dec
push
cmp
addb
sub
stos
mov
les
out
mov
int
jl
test
stc
stos
stc
fldl
fisttps
sbb
or
mov
xchg
es
or
ret
loopne
test
aam
xlat
or
mov
add
pop
insl
push
dec
inc
jle
insl
push
xchg
push
pop
jo
scas
xor
jecxz
insb
jo
jbe
pop
push
sarb
push
dec
pusha
ds
jo
or
subb
aam
mov
sti
adc
stc
jo
jl
xchg
xchg
cmpsl
jg
out
ret
jns
sbb
jmp
fimull
pop
jns
adc
xchg
scas
mov
xchg
inc
je
xchg
sti
mov
out
inc
pop
cld
lea
aaa
adcb
mov
jecxz
xor
push
mov
mov
jecxz
cld
insl
pop
fs
xchg
pushl
or
mov
shrb
xchg
xor
mov
sbb
clc
push
mov
jg
sub
cli
scas
std
ror
bound
jno
or
pushw
inc
lds
hlt
xchg
push
lds
cmpsl
test
in
nop
xor
faddl
int
mov
add
mov
add
aas
mov
aad
mov
adc
aaa
ja
lahf
movsb
shrl
lds
inc
and
mov
dec
adc
imul
jg
ds
cltd
fdivrs
das
fmul
adc
leave
xor
mov
push
sbb
mov
cld
test
mov
fadds
pushf
loop
or
leave
mov
mov
pop
pop
lret
fldl
mov
repz
sbb
insl
mov
add
add
jmp
push
jnp
in
push
pop
mov
sti
imul
test
mov
and
jbe
pop
mov
add
loope
or
lock
lcall
sub
data16
sbb
cld
jno
out
mov
cmp
and
les
add
lahf
clc
sub
outsl
push
xorb
shl
xchg
cwtl
adc
mov
mull
dec
fnstsw
outsb
in
out
fs
pop
aam
push
xchg
adc
sub
pop
xor
mov
pop
addr16
pop
loopne
leave
jb
into
int3
loopne
xor
jge
push
outsb
jge
shlb
int
movsl
popf
dec
jge
mov
pop
push
aas
mov
lret
xchg
inc
test
lods
test
inc
ja
dec
xchg
adc
pop
push
fidivs
loop
sbb
repnz
lock
fstpt
push
lock
pop
jg
ret
ljmp
fucomip
cmpsb
and
outsb
mov
sbb
xchg
cld
fistpll
push
inc
int
cld
cmc
jle
cmp
fnstsw
addr16
jge
cli
fcomi
in
xchg
jp
mov
mov
mov
repnz
add
loopne
stos
call
xor
dec
stos
and
popf
sbb
sbb
xor
shll
sahf
dec
fsub
hlt
mov
ret
mov
out
pop
mov
sub
xlat
mov
jb
dec
pop
sti
dec
fs
xchg
jnp
add
ss
or
lea
call
jecxz
push
sub
test
shrl
repnz
push
rcll
dec
push
aas
popf
test
ss
push
cs
and
scas
mov
scas
loope
sbb
dec
in
out
dec
loope
rcrb
xlat
ret
mov
loopne
jecxz
lock
adc
lret
test
cmp
sbb
jno
push
mov
jp
je
ljmp
xchg
rcr
fldt
add
jmp
pusha
or
and
pop
push
mov
cmp
fldl
mov
mov
adc
jg
and
mov
push
out
xor
push
sarl
adc
push
mov
mov
es
and
push
jno
pop
roll
aas
mov
call
mov
rorl
insb
push
bound
push
aaa
and
jl
mov
stos
dec
cmp
pop
cmp
mov
mov
xchg
inc
cmc
js
xlat
mov
test
xbegin
out
sbb
jecxz
sub
out
pcmpeqd
sahf
dec
inc
aas
and
fiaddl
mov
repz
or
imull
push
dec
movsb
int
leave
dec
sub
add
sbb
fcompl
jno
cmp
adc
shl
in
cmpsl
mov
cwtl
xor
ret
int3
loopne
adc
mov
pop
rcl
nop
ret
cmp
pop
data16
dec
cmpsb
scas
xor
and
push
leave
pop
mov
in
push
rcrl
xchg
pop
mov
push
jg
mov
shrb
mov
incl
mov
movsl
push
jne
cmp
popf
push
movsb
or
xchg
sbb
cmp
dec
or
mov
dec
fmuls
cli
pop
jnp
pop
dec
jns
fs
jle
fsts
jno
and
mov
call
push
push
jp
lcall
pop
xchg
sbb
adc
enter
sti
fistps
pop
pop
and
in
xor
dec
cs
sar
addl
adc
in
add
and
jge
jae
add
dec
xor
mov
cltd
push
and
mov
pushf
and
jnp
or
mov
test
js
decb
mov
fmuls
insl
and
cmp
and
repnz
push
xchg
cmc
adc
adc
insl
mov
in
lods
fisubs
call
daa
lods
cmp
cmp
fidivl
sbb
or
fstpt
in
stc
lahf
lea
lds
pop
xor
jp
adc
or
movsl
sbb
jno
sub
push
adc
adc
bound
movsl
rorb
push
movsb
movsl
add
mov
inc
bound
imul
cs
fsubrl
inc
lea
mov
jo
pop
test
aas
leave
and
fbstp
mov
cmpsb
or
sub
mov
popa
addb
lods
int3
cmp
scas
cmovae
ljmp
shll
xchg
mov
mov
es
jbe
ss
lea
jmp
imul
jp
jl
and
mov
daa
repz
out
cltd
scas
pushf
xor
aad
adc
test
ret
mov
cmp
insl
mov
or
jbe
mov
adc
and
imul
ret
roll
or
mov
sti
sbb
nop
bound
jg
adc
loopne
addr16
mov
mov
xchg
jo
imul
add
mov
jle
pop
ja
scas
lcall
movsb
mov
outsl
add
jge
div
scas
mov
fstps
and
js
test
aam
mov
clc
xchg
adc
pusha
fnstenv
fisttpll
jl
and
scas
ret
cmp
imul
add
xchg
sar
cmp
insb
sub
push
or
push
out
or
les
cmp
bnd
movsb
jle
mov
push
pop
fadds
mov
ds
and
inc
xchg
mov
push
loopne
in
cli
shrl
fadd
jp
clc
sbb
adc
mov
jo
dec
sbb
push
hlt
aaa
push
mov
stos
mov
mov
fsubrs
jg
mov
outsl
pushf
sbb
adc
in
adc
popf
dec
sub
out
cmc
and
ljmp
push
or
mov
or
testb
dec
out
leave
popa
mov
addr16
jmp
add
lret
ficoml
bound
push
shll
orb
mov
mov
jge
iret
mov
add
in
hlt
sub
lret
xchg
mov
jo
test
or
lock
fmul
jl
dec
adc
inc
test
push
popa
cmovns
scas
or
push
mov
and
ljmp
mov
push
std
mov
add
popf
xor
add
sub
mov
lods
or
push
out
in
mov
cmc
sbb
push
mov
sbb
add
sbb
rorb
mov
insl
aam
sbb
out
pushf
xor
sarl
scas
cltd
and
ja
push
add
pusha
xchg
jns
call
push
pop
ds
xchg
inc
arpl
sbb
repz
notb
pop
mov
ljmp
ret
movsl
movsb
cmpsb
inc
outsl
orb
inc
popa
sub
and
fdivr
popf
dec
das
xchg
dec
int3
jbe
jno
fcoml
divl
cli
fcomip
in
xchg
pop
add
jl
fcoms
xchg
pop
fbstp
and
and
out
lock
clc
pop
notb
push
jp
pop
cltd
aam
jbe
imulb
fiaddl
int3
fs
iret
jg
push
bound
or
pop
loopne
push
nop
cmp
pop
rcrb
mov
pop
dec
inc
out
mov
xor
stos
in
or
ret
mov
mov
adc
ja
rorl
or
shlb
ja
into
and
sahf
inc
outsl
cmpsb
mov
pop
inc
in
jge
sub
push
popa
insb
rolb
fcoms
adc
push
loope
mov
inc
in
mulb
xor
mov
cmp
decl
jo
adc
jbe
push
sahf
aas
cmp
add
xchg
sub
xchg
aas
movsb
sub
xor
xchg
and
scas
sub
xchg
sub
push
sbb
lcall
inc
test
xchg
sub
pop
sub
lods
jbe
cmpsw
cmp
jecxz
ljmp
ret
daa
adc
xchg
mov
icebp
movsl
in
loope
movb
andb
stc
pop
add
push
jmp
jns
popf
jl
and
ja
push
mov
sbb
jp
xor
push
lock
xor
clc
mov
cli
jmp
sbb
es
inc
repz
fcomps
insl
call
int
pop
adc
fwait
gs
jmp
cltd
pop
sub
lds
movsb
jb
aad
pop
shrl
les
jp
arpl
and
sub
add
dec
push
jmp
loop
imulb
and
outsl
hlt
sarb
ds
inc
clc
pop
mov
fstps
mov
shlb
aaa
or
into
jl
lds
adc
jnp
mov
in
ja
mov
and
stos
testb
stos
fstl
dec
adc
insl
shl
enter
push
cmp
cmp
filds
imul
add
xchg
lds
fwait
mov
mov
cmp
dec
or
ret
roll
std
lea
imul
mov
leavew
sahf
pop
and
movsl
add
lock
loop
xor
fildl
cmp
xor
mov
mov
pop
test
iretw
call
cli
aam
imul
les
addb
mov
insb
cmp
leave
gs
xor
into
cltd
mov
xorb
add
or
out
fmuls
bound
mov
hlt
sti
jae
pop
xor
repnz
inc
cli
jmp
sti
iret
lock
shr
sahf
hlt
insl
push
lahf
and
lahf
int3
mov
mov
fwait
sub
cmpl
mov
loope
inc
out
dec
xchg
insl
stos
es
cmpsl
pop
or
scas
sarl
dec
push
rcrl
dec
loope
push
int3
inc
loopne
xchg
lods
mov
es
sti
iret
push
mov
xchg
mov
and
jns
pop
fnsave
cs
pop
int3
fwait
push
dec
cmp
mov
nop
and
xchg
out
dec
iret
loope
xor
sbb
popf
ds
xchg
lcall
daa
jle
add
rolb
jno
sub
ret
or
jae
stc
sti
dec
aas
movsb
xor
sub
je
and
das
cmc
stos
loop
mov
imul
cmpsb
sti
and
xchg
inc
or
sbb
out
fildll
fwait
and
jno
lcall
mov
mov
dec
inc
pusha
insl
mov
lds
pop
sahf
dec
push
mov
fildl
repz
iret
addr16
imul
add
add
pop
mov
sti
clc
nop
bnd
pop
lea
sbb
sbb
addr16
rcrb
pusha
fs
pusha
cmp
cmpsb
mov
sub
repz
jns
les
xchg
addl
cmpsl
pop
dec
data16
mov
jae
popa
incb
and
dec
insb
daa
mov
mov
repz
fs
cmp
movsl
mov
cwtl
push
jae
pop
cmp
xchg
mov
xlat
repnz
aaa
cld
or
aad
push
test
adc
mov
jecxz
sbb
addr16
pop
inc
popa
xchg
cmp
decl
dec
test
fimull
dec
lea
adc
add
xlat
and
addr16
mov
push
test
insb
daa
xor
ljmp
outsl
push
fiadds
mov
push
and
stos
and
jp
xchg
cwtl
stos
inc
cli
mov
test
xor
popf
sub
pop
jecxz
icebp
inc
lret
popa
jmp
mov
push
push
mov
hlt
clc
dec
cmp
je
xor
mov
leave
dec
or
and
jp
mov
mov
sarb
and
stc
gs
clc
data16
imul
jae
cwtl
scas
xor
or
inc
stos
fsub
inc
punpckhdq
mov
sub
or
mov
inc
xor
mov
out
xor
fisubl
fldl
mov
in
popa
sub
ja
jle
test
rol
ja
test
sbb
inc
xchg
pop
lret
adc
shll
push
mov
out
or
fdivrs
jmp
subl
sbb
enter
xchg
inc
cmp
lods
fadds
dec
and
mov
leave
adc
inc
fs
jl
cmp
movb
xchg
std
push
fisttpl
aaa
mov
shrb
pop
sbbb
gs
push
mov
cmpsb
xor
add
out
push
fcmovnb
clc
scas
cmp
ja
jp
sarb
ljmp
mov
add
mov
sub
inc
pop
dec
pop
adc
aam
mov
in
inc
popf
aad
cmp
stos
and
scas
mov
cmc
lret
popf
cmpl
pop
test
mov
popf
cli
stc
adc
in
xor
push
mov
mov
mov
jle
push
mov
pop
in
stc
mov
push
outsb
add
out
add
jbe
xor
push
cmpsl
lret
fsubs
inc
fsubr
push
out
xchg
sbb
ljmp
mov
imul
cld
pop
inc
and
outsb
aam
xchg
and
sbb
and
push
jae
add
dec
push
aad
sahf
fisubs
inc
push
pop
in
in
addr16
jo
in
pop
test
outsl
cmp
jnp
loop
cltd
daa
scas
ljmp
mov
pop
mov
xchg
roll
mov
jmp
je
addr16
inc
fnstsw
mull
fwait
pop
fbstp
add
jbe
inc
mov
popf
pop
pop
ret
lock
mov
push
xchg
lahf
movsb
jns
cli
push
mov
leave
lret
scas
pushw
shl
sub
fistpll
test
push
mov
push
sbb
jecxz
sub
sub
in
lock
pop
lret
decl
lret
lea
cmp
xchg
cmp
filds
nopl
adc
fmull
mov
cmc
or
jmp
pop
mov
add
xchg
sub
popa
add
cmp
push
sub
jb
adc
adc
adc
inc
mov
pop
mov
jo
pop
sti
and
pop
xchg
inc
add
cltd
xchg
xor
adc
mov
cmpsb
cwtl
mov
push
nop
out
mov
jno
add
ja
rcl
pop
lcall
jmp
push
add
rcll
adc
inc
outsl
bound
adc
cmp
rclb
lods
jae
je
aam
pop
daa
in
fnstcw
es
push
sbb
lcall
dec
sub
jne
out
mov
into
and
jle
add
push
sbbb
repnz
lahf
add
cld
out
fs
scas
or
out
fnstsw
loop
subb
ds
testl
push
iret
movsb
push
pop
in
add
sahf
mov
adc
dec
cltd
lods
jnp
mov
clc
push
jnp
cmp
cmp
jno
pusha
and
push
cmpsb
xor
push
cli
and
decb
test
push
sbb
out
insl
mov
inc
xlat
jo
xlat
sbb
rorb
cmpsb
in
fdivs
call
loopne
pop
dec
fxch
cmp
xchg
adc
sarb
enter
pushf
mov
ljmp
xchg
jne
adc
cmp
fildl
lahf
xchg
adc
pop
out
pop
outsb
mul
sub
jb
cmc
add
std
cltd
mov
test
jmp
xor
pminub
insl
lea
dec
jmp
test
adc
repnz
bound
leave
push
pop
mov
inc
sbb
sbb
clc
movsb
sbb
cwtl
movb
ss
idivl
hlt
fldl
sub
pushl
or
jecxz
mov
daa
jge
shlb
mov
adc
stos
mov
scas
insl
cmpsl
or
mov
enter
push
stos
sbb
aam
mov
sbb
cmc
mov
out
rcrb
in
je
adc
add
lods
or
mov
lods
jnp
sahf
sub
or
jbe
lea
inc
lea
in
jne
test
lods
inc
push
and
dec
pop
push
iret
and
dec
fnstcw
mov
xchg
sub
out
or
movsl
xchg
cmp
fldcw
ret
out
or
call
mov
lcall
add
add
xchg
or
xor
mov
jne
jnp
inc
es
mov
lret
inc
cmp
mov
mov
xor
cmp
bound
insb
pop
push
sub
lea
inc
insl
cld
pop
mov
jo
pop
scas
xchg
adc
loope
dec
repz
rorb
les
dec
int3
jne
inc
cld
out
cmovs
in
andl
lret
mov
jno
inc
and
xchg
lea
mov
jo
call
aad
aam
loopne
add
dec
or
icebp
sbb
adc
push
nop
aaa
lcall
jo
xor
inc
inc
mov
aas
lret
jb
cltd
cwtl
pop
addr16
es
inc
mov
jmp
popf
mov
mov
adc
test
mov
scas
cmp
push
inc
sahf
cmp
popa
cmp
les
pop
or
jge
sub
sahf
imul
outsl
adc
push
fs
test
lea
rolb
mul
xor
mov
sbb
bound
sarl
jecxz
inc
ret
pop
mov
std
lods
dec
xchg
adc
sbb
ds
lret
cmc
sub
test
push
test
add
cmp
pusha
popa
invd
push
xor
repnz
lcall
inc
fsts
loop
jns
aam
repz
mov
mov
push
aad
cmp
sub
loop
inc
movsl
mov
push
cwtl
mov
stos
lock
pop
dec
mov
clc
adc
in
add
fcmovne
ret
mov
addr16
dec
sub
push
or
hlt
mov
fwait
rcll
xor
cmp
jmp
fldcw
sub
lods
movsl
push
cmp
pop
and
sub
ja
mov
insl
data16
iret
push
adc
in
iret
into
pop
xchg
aad
insb
xor
xorb
pop
jp
push
int
fs
daa
test
adc
lock
fs
rol
pop
jns
sbb
and
mov
fmul
dec
jge
inc
insl
mov
pop
test
lcall
add
push
cld
daa
cwtl
or
lahf
jb
add
stc
daa
dec
jae
out
cwtl
push
add
fwait
and
fwait
push
inc
jp
push
in
leave
mov
pop
add
mov
icebp
jle
fimuls
out
stos
js
lret
sar
ficoms
cmp
dec
sbb
adc
negb
mov
dec
into
add
jl
inc
mov
rorl
cld
es
pop
pop
outsb
pop
lcall
pusha
mull
sub
mov
add
pop
mov
bound
push
mov
jbe
cmp
and
cmpsb
sub
cmpsl
jno
push
mov
push
mov
inc
jb
adc
push
xor
xor
xchg
cmpb
inc
push
add
pop
push
test
sub
cmp
or
dec
and
in
and
ljmp
lahf
movb
scas
jae
mov
gs
pop
bsr
pop
outsb
inc
hlt
push
mov
pop
xchg
not
mov
push
mov
fadd
scas
mov
in
inc
mov
and
test
in
mov
rol
mov
mov
cmp
cmpsl
gs
xchg
xchg
cmc
lds
sbb
insl
andb
sub
pop
xor
add
xchg
sub
sbb
jle
adc
inc
sub
insb
ljmp
loope
aaa
shrb
jo
jbe
and
push
inc
jmp
fiadds
lcall
imull
or
or
fistps
and
mov
enter
xchg
cmp
rorl
adcb
jecxz
xchg
xor
loop
sub
sub
addl
inc
int
ljmp
add
in
xlat
push
cmp
imul
in
cmp
int
xchg
hlt
aam
mov
cmp
rol
lahf
div
push
push
gs
adc
mov
add
inc
clc
jp
into
add
push
mov
fmulp
lcall
popa
add
and
into
xchg
rolb
cmp
sub
lods
jmp
imul
and
pop
insl
outsl
jge
or
mov
test
xchg
jbe
sub
lcall
pusha
xchg
dec
outsl
mov
jl
cmp
cmp
adc
add
pushf
dec
bound
and
fsts
insl
fdivp
enter
lcall
xlat
mov
cmp
cmp
lcall
cmp
notl
xchg
push
in
dec
insl
inc
push
sub
inc
and
dec
push
push
xchg
jg
adc
or
mov
mov
jnp
inc
repnz
fldenv
cmp
rorl
clc
aas
int
sbb
outsb
lcall
in
xchg
movsb
mov
outsl
add
dec
add
push
arpl
sbb
sub
inc
dec
dec
inc
or
outsb
insb
inc
push
pusha
sar
sti
cwtl
sub
cwtl
sahf
dec
loop
cmp
pop
out
js
mov
arpl
add
jbe
jns
sub
fsubrl
sub
or
cmpsl
icebp
sbb
aaa
xor
std
out
xchg
jns
gs
adc
and
fistl
mov
fwait
adc
test
pusha
push
loope
imul
mov
push
mov
mov
int3
jb
or
shrl
push
mov
outsl
hlt
aad
jle
push
add
adcl
or
pop
lret
mov
rol
jge
jbe
sbb
dec
sbb
out
nop
mov
mov
jp
loopne
cmpsl
cmp
mov
mov
test
push
add
leave
cltd
sti
fwait
jnp
imul
daa
push
icebp
bsr
inc
loopne
insb
decl
daa
int
pop
adc
push
push
jg
push
xor
jb
adc
lcall
fs
add
mov
mov
pushf
lahf
sbb
int3
xor
shrb
adc
cmp
xchg
ds
mov
dec
fxch
rclb
faddl
addb
xorb
adc
pop
fisttpll
adc
outsb
rcl
popf
mov
fs
imul
pop
mov
xchg
sbb
cmp
xlat
adc
add
fisubrl
sti
mov
je
jg
push
mov
les
stc
dec
in
jno
test
pop
sbb
dec
cmc
inc
mov
arpl
xor
shlb
push
pop
in
add
or
clc
mov
aad
int3
jmp
ds
pusha
mov
adc
cwtl
fstp
mov
jne
jmp
enter
fwait
mov
popf
push
aam
imul
xchg
or
xor
pop
mov
fcoms
cli
lret
cmp
fistl
in
xorb
inc
cli
sarb
xchg
pop
shlb
aam
fsubrl
mov
stos
fisubrl
fistpll
arpl
fdivl
cmp
mov
out
jns
mov
mov
mov
repz
pop
push
pop
aas
enter
add
pop
jle
jno
pop
sub
mov
jne
jmp
pop
mov
cs
les
dec
test
pop
nop
aam
and
sti
arpl
and
out
in
inc
pop
mov
dec
call
inc
push
iret
arpl
enter
jmp
sar
cli
cmpb
and
in
xor
mov
mov
lcall
sub
adc
xchg
dec
xchg
jnp
nopl
sbb
dec
scas
test
inc
fs
jae
mov
loopne
idivl
mov
mov
popf
insl
inc
inc
sub
adc
subl
cmp
sarb
fistpl
cmpsl
jae
or
add
test
sub
mov
mov
gs
enter
icebp
pop
jnp
lahf
mov
popf
test
hlt
sub
sbb
lcall
scas
push
pop
dec
jmp
nopl
arpl
mov
cmc
sub
pop
scas
add
cmp
mov
mov
test
pop
mov
jns
ss
push
mov
ret
ja
daa
jp
xchg
mov
lea
cmp
je
mov
lods
je
fcoml
or
psrad
hlt
sbb
mov
jp
lahf
sbb
dec
push
jae
sarb
pop
fcmovnb
dec
xor
jl
ds
push
add
push
push
xor
gs
lret
jo
popf
pop
test
mov
xor
dec
mov
pop
adc
sahf
aas
inc
pusha
xor
xchg
inc
push
or
inc
cwtl
sub
xor
into
cmc
inc
xor
inc
fdivl
sbb
dec
inc
or
adc
lods
ss
mov
out
icebp
inc
dec
adc
nop
lea
iret
jno
int3
xor
dec
jecxz
jg
pop
out
lea
adc
out
jg
sbb
or
or
lods
mov
ret
orl
cmp
enter
fadds
data16
sbb
push
jmp
inc
ja
sbb
ret
call
lret
movsl
or
cmp
jmp
ss
das
jno
flds
push
cld
lds
and
and
lods
decb
adc
js
sub
loopne
out
enter
test
in
insb
outsb
xor
xor
sahf
push
sbb
enter
repnz
shll
out
dec
cld
roll
sub
in
lock
dec
jp
push
adc
mov
and
jb
jno
neg
pop
jo
or
ss
stos
mov
pusha
das
fidivrl
push
popa
xor
xchg
shl
adc
cmp
sti
insb
pop
sbb
ds
dec
fwait
movsb
stos
insb
xchg
shrl
inc
gs
dec
dec
mov
fidivrl
sbb
pusha
outsb
cmp
test
mov
mov
stc
mov
sub
and
xchg
inc
sub
add
add
jo
fidivrs
dec
mov
mull
pushf
pop
ljmp
fisubl
inc
pop
insl
cmpsl
push
js
xchg
stos
sti
fwait
push
je
movsl
cmc
or
mov
inc
nop
jle
jmp
add
sbb
rcrb
xor
pop
adc
mov
daa
push
fdivrs
inc
xchg
mov
push
ret
jno
subb
sub
rol
je
sub
jno
jbe
lahf
fwait
sub
fisttpl
pop
decl
aaa
outsb
sub
mov
jno
inc
push
add
mov
test
outsl
movsl
cs
jb
leave
jg
lods
es
pop
sti
sti
jecxz
cmpsb
or
loop
pop
repz
call
inc
jb
cmp
lods
sbb
aaa
xor
fmull
xor
jecxz
ljmp
cmp
popf
bound
movsb
mov
cmp
mov
dec
jns
xchg
mov
cmpsl
pop
sub
std
jo
aam
lcall
sbb
addr16
jno
cli
and
and
dec
jae
mov
ljmp
sub
in
mov
xor
push
or
data16
orl
dec
outsl
sbb
aad
je
fcomip
mov
faddl
sahf
pusha
push
xorb
xchg
pop
pop
loope
popf
idivb
frstor
adc
cmpsl
mov
lcall
lret
push
and
sbb
scas
push
in
push
mov
jo
rcrl
pop
push
dec
xlat
adc
inc
popf
repnz
inc
xchg
cli
into
add
lcall
cmpsl
sbb
adc
jecxz
xchg
mov
dec
jecxz
or
push
xchg
loop
cmpsb
or
pop
push
xchg
mov
lret
popa
rcll
out
mov
out
ss
mov
cmp
mov
xlat
movl
xchg
lds
stos
xchg
mov
fsubs
pushf
scas
adc
cmpsb
lahf
xchg
and
imul
in
jle
lods
ret
xor
add
ret
movsb
stc
in
ss
scas
lds
mov
rolb
mov
xchg
out
insb
adc
mov
lea
je
xchg
push
pop
xchg
add
mov
movsl
das
lcall
cwtl
or
jecxz
push
lcall
add
fsubs
mov
int
out
xorb
mov
jae
jl
imul
pop
adc
psraw
in
jl
cmp
cmp
sub
aaa
imul
mov
or
adc
jmp
int
nop
sub
fldt
iret
in
lods
xchg
les
lret
sub
loopne
jb
je
loope
xchg
push
aad
mov
scas
sub
mov
dec
xchg
sbb
push
shrl
fdivrs
fildll
movsb
ljmp
fs
scas
mov
jl
pushf
jo
repz
add
leave
mov
pop
dec
and
xor
iret
push
jne
shrl
aam
out
inc
mov
out
imul
insb
mov
pop
push
or
push
test
movq
pop
sahf
mov
add
mov
adc
jo
std
sti
fcomp
pop
sbb
jb
dec
mov
or
mov
out
popa
fdivs
das
push
push
ret
add
cmp
sbb
dec
and
push
cltd
bound
ja
push
mov
imul
dec
or
mov
pop
xor
and
and
xor
push
dec
fs
adc
outsb
dec
jne
in
mov
adc
xor
in
add
clc
stos
das
jb
mov
sbb
pop
pop
mov
mov
push
lret
cmp
aas
xchg
pop
repnz
inc
fs
or
cmp
in
push
lret
loopne
repz
dec
mov
inc
dec
in
push
mov
mov
mov
inc
push
dec
das
xlat
addb
cltd
push
jns
sbb
sub
adc
xor
sub
pop
enter
into
mov
cmp
loope
je
mov
lods
adc
mov
sbb
dec
jp
inc
pop
pop
lds
pop
repnz
push
xor
sub
add
pop
outsl
inc
popf
rorl
push
scas
stc
imul
sbb
mov
test
add
lahf
pop
and
pop
add
adc
out
scas
pop
inc
xor
negb
data16
push
dec
jge
jmp
in
push
out
mov
sar
ficoml
ret
xor
andl
ds
mov
push
or
add
cli
out
inc
pop
in
xchg
xlat
ja
sbb
cmp
idivb
jns
or
sub
mov
pop
mov
jmp
stc
mov
sub
aam
xor
lahf
or
inc
lods
cmp
pusha
mov
inc
loop
int
iret
push
pop
dec
mov
lret
sbb
das
mov
or
sub
cltd
call
dec
movsl
lods
and
sub
xchg
jmp
pop
jne
hlt
lahf
cmp
out
mov
lret
cmp
push
mov
out
imulb
jle
in
inc
or
aas
inc
shrb
sbb
dec
jno
add
clc
and
push
cmp
adc
jl
sahf
mov
or
xchg
es
daa
cmpsb
into
adc
sbb
push
movsl
sub
mov
in
jl
orl
jbe
es
mov
sub
inc
sarb
push
push
jecxz
pop
push
mov
out
sbb
jecxz
dec
adc
fnstsw
out
fists
test
fbld
xorl
add
cmpsl
mulb
dec
pop
mov
bound
stos
cmp
mov
pop
xchg
sbb
pop
insl
nop
int3
and
dec
sbb
mov
test
pop
and
es
mov
adc
aaa
adc
pop
out
and
rorb
adc
jbe
mov
aaa
nop
int
mul
mov
sub
xchg
lock
addb
mov
sub
rorl
push
mov
jge
dec
add
lea
mov
and
push
sub
leave
push
arpl
cmpsb
in
lahf
dec
mov
push
out
cmp
sti
push
cwtl
or
ljmp
xchg
xor
lret
mov
xchg
mov
pop
fst
jno
sbb
dec
in
addr16
sbb
xchg
adc
and
mov
mov
xchg
in
or
rcr
das
dec
leave
repz
mov
xor
jns
clc
jmp
mov
or
push
inc
gs
xchg
aad
cwtl
mov
ljmp
push
sub
cs
add
push
cs
fucomip
push
cmpsl
outsb
pop
ficoms
or
repnz
sarl
stc
icebp
mov
push
aas
loopne
insl
negb
push
jns
sub
cwtl
fmull
push
pop
popa
insb
mov
mov
lods
xchg
in
pusha
pop
lcall
loopne
lods
cwtl
sbb
sbb
sbb
popf
and
pop
cmp
out
cmp
sub
out
jb
das
iret
xchg
and
pop
movsb
add
ljmp
mov
inc
call
add
inc
test
arpl
inc
fnstsw
sub
inc
and
push
mov
adc
pop
adc
icebp
leave
pop
inc
inc
mov
pusha
fstpt
cmpl
repz
jmp
sbb
les
add
shlb
out
xchg
out
stos
subb
add
mov
fucomip
rol
daa
out
push
ja
fidivrs
aaa
inc
movsl
xchg
and
cmpsl
shll
dec
outsb
stos
gs
push
adc
mov
stos
movsl
insb
and
mov
cmp
shll
test
fsubs
into
jnp
or
pusha
and
pop
imul
jge
and
jbe
icebp
lahf
js
loop
sbb
jo
xchg
adc
xor
xchg
add
sbb
mov
fsubs
mov
mov
rcr
push
pop
stc
std
dec
mov
and
xlat
jmp
fbld
xchg
xor
pop
and
mov
xor
das
cmp
xor
ja
je
aad
inc
mov
faddl
lods
push
fwait
insb
and
notb
xor
cmpsl
stos
sub
mov
scas
push
xchg
xchg
into
std
mov
cmpl
xor
mov
out
jbe
in
dec
jp
lcall
test
cli
imul
int
push
jb
cmp
dec
ds
insl
add
mov
push
cld
jl
and
push
into
sub
push
mov
lret
mov
mov
scas
xchg
fnstsw
jge
jne
in
loope
xchg
clc
sub
jo
push
sub
sub
arpl
xlat
sbb
hlt
xchg
push
dec
fcoml
and
pop
dec
je
ret
xor
pop
shlb
and
test
xchg
pop
dec
shlb
mov
addl
loopne
jne
mov
mov
cmpsl
xor
shll
mov
pop
mov
add
mov
xor
mov
xor
adcl
cmp
imul
xchg
cmp
insl
cmp
pop
mov
pusha
aam
lods
mov
pop
dec
frstor
mov
push
mov
ds
mov
pop
mov
cmp
cli
movb
call
cmp
shr
xlat
inc
lock
sub
cli
push
or
inc
repz
mov
adc
shlb
push
rol
gs
adc
int3
push
pop
mov
lods
rorl
inc
cmpsl
test
test
mov
xchg
lods
cltd
imul
daa
les
shll
fnstcw
add
cmp
es
hlt
out
lods
xor
dec
movsb
lods
test
rcr
mov
pop
rolb
mov
fucomip
adc
or
insl
dec
push
out
add
and
mov
inc
dec
add
xchg
mov
push
sbb
or
inc
rorl
push
mov
cltd
mov
sub
testb
addl
fs
jo
mov
or
pop
insb
adcl
adcl
or
mov
les
lahf
add
nopl
test
dec
or
or
inc
scas
pop
xchg
mov
pop
nop
and
cwtl
icebp
call
cmpl
mov
imul
xor
add
jns
add
add
mov
cmpsb
insb
shlb
jne
push
and
push
aas
push
pop
xchg
idivl
inc
cli
mov
cmp
dec
mov
xchg
pop
gs
vmwrite
in
popa
push
jmp
and
xor
pop
sbb
inc
in
pop
xor
rcll
xchg
fcmovnu
jp
sub
inc
addr16
add
mov
xchg
sbb
jle
dec
inc
cmp
shll
je
divl
or
mov
ss
xchg
adc
mov
ja
push
lds
xor
mov
add
shrl
fnstsw
pop
lret
fwait
xchg
or
fsts
ud1
mov
sarl
in
pop
fnstsw
es
popf
test
or
and
and
add
and
push
push
or
mov
xor
ds
js
push
cmpsb
push
mov
pushf
mov
adc
or
sbb
es
sarb
inc
push
push
dec
xor
sbb
call
pop
mov
popa
xchg
insl
cmp
mov
insl
fstpl
xor
cltd
xor
mov
xchg
dec
and
ret
shll
mov
xchg
cmp
pushl
push
cmpsb
pop
out
adc
lds
out
test
sbb
jno
lahf
outsl
mov
xor
mov
loope
sub
rclb
dec
dec
out
jno
loope
dec
and
mov
mov
jl
icebp
clc
test
test
or
ja
adc
dec
push
out
sbb
dec
jno
fstps
lods
test
xchg
and
inc
outsl
dec
inc
jmp
sub
or
cmp
jnp
ds
fnstcw
dec
jb
mov
sbbb
mov
scas
add
adc
rcr
cmp
cld
aaa
call
in
imul
aam
lret
addb
mov
test
dec
lock
outsl
mov
loopne
push
loopne,pt
fdivl
je
add
mov
dec
sub
loope
aas
testl
inc
imul
incb
movsl
mov
sbb
mov
pop
sti
scas
adc
imul
movsl
das
lock
sbb
sbb
insl
lds
int
inc
pop
push
fiadds
lret
lea
mov
jo
repnz
mov
jae
mov
leave
frstor
cmp
and
mov
inc
shl
dec
pop
xchg
in
and
pop
xchg
out
xchg
movb
sub
add
mov
jae
rcrl
and
andl
cltd
cli
sti
or
pop
sti
sub
jnp
stos
loop
ficoml
out
push
xchg
cs
test
inc
cwtl
push
rcr
xor
mov
inc
lret
mov
pop
xchg
loop
loope
mov
and
and
aad
sbb
fs
sub
or
dec
jns
outsb
cmp
rolb
sub
out
fildll
pop
dec
js
repnz
in
sub
xchg
outsb
int3
mov
and
dec
adc
push
xorl
aaa
dec
pop
std
adc
les
push
push
insb
rclb
jl
pop
add
fdivr
loope
cli
mov
data16
testb
cmp
sbb
roll
xor
lret
push
sbb
lods
lret
xchg
sub
xchg
sbb
xor
push
stos
imul
sub
jns
hlt
and
adc
dec
mov
ret
loopne
dec
jl
sbb
popf
add
xlat
pop
ss
stos
movsl
rcrb
push
imulb
add
fnstcw
loope
bound
push
push
ror
jno
push
adc
sbb
xchg
push
lods
pop
aas
fldenv
fwait
mov
mov
scas
enter
aaa
push
xor
jbe
popf
pop
dec
fwait
pop
cmp
decl
dec
dec
and
les
xchg
inc
ja
idiv
enter
stos
std
ljmp
push
pop
xchg
out
push
loop
jp
dec
ds
push
push
sub
mov
dec
and
and
imul
cmp
mov
loop
or
sbb
sahf
ret
xor
aas
mov
nop
add
cld
mov
dec
push
dec
cmpb
dec
icebp
inc
dec
xchg
cmpsb
test
out
add
imul
add
pop
in
icebp
and
xor
sbb
int3
test
fldt
std
mov
test
sbb
or
sub
jle
pop
mov
pop
and
data16
daa
mov
jb
push
lahf
xor
mov
jle
loope
ret
in
cwtl
and
cmp
ljmp
lds
add
mov
enter
fwait
jnp
jne
push
inc
push
inc
or
lds
xlat
cmp
inc
dec
nop
jecxz
adc
sub
mov
fstl
xor
jne
fwait
push
ljmp
lret
xor
daa
xor
sbb
fs
dec
in
or
inc
dec
push
lods
mov
sbb
add
xchg
cmp
aad
sbb
call
add
outsb
icebp
dec
mov
pop
push
dec
daa
push
jg
aam
pushf
xchg
std
test
push
cmc
jb
data16
cld
jge
cld
lods
fwait
mov
add
in
or
inc
adc
xor
icebp
fimuls
dec
adc
loopne
and
or
outsl
adc
or
scas
dec
pop
dec
das
fidivrl
cmp
sub
add
push
fdivp
push
sub
pusha
pop
sbb
orb
aaa
mov
mov
fisttpl
mov
mov
es
xchg
mov
pop
cmpsl
sub
push
cmp
movsl
out
mov
push
and
sbb
sub
push
outsb
jae
mov
call
mov
jmp
add
test
test
adc
mov
mov
sub
mov
lahf
lret
and
ljmp
je
inc
sbb
cmp
pop
add
pop
cmpsb
jae
mov
ds
jo
xor
xchg
inc
jns
rorl
aas
jnp
xchg
inc
mov
divb
dec
mov
xor
xchg
inc
out
stos
or
mov
add
popf
iret
faddl
inc
mov
data16
aaa
xchg
stc
sub
dec
cs
or
outsl
dec
dec
pop
cmc
in
push
ds
int3
jl
or
imul
lahf
xchg
add
ss
mov
xchg
les
dec
push
add
addl
es
stos
xchg
sbb
jbe
out
movl
cs
jmp
push
push
movsb
out
cmp
pop
xchg
loope
inc
push
stc
cltd
sbb
jp
and
cs
leave
push
push
mov
loope
mov
push
mov
scas
xchg
sbb
mov
or
push
xchg
sub
enter
inc
inc
mov
sub
lret
daa
daa
inc
dec
sar
xchg
stos
mov
in
xchg
sub
shll
dec
loop
push
mov
ja
idivl
iret
scas
data16
maxps
mov
lahf
add
mov
xchg
leave
mov
dec
and
int3
idivb
jle
jmp
inc
add
cmpsl
addl
cwtl
jno
or
and
jecxz
inc
stos
xchg
mov
pushf
mov
sbb
int
test
push
inc
gs
jp
sub
out
std
ja
push
lret
arpl
imul
ficomps
cmp
outsl
jb
sbb
sub
mov
stos
test
aam
push
adc
or
xchg
scas
sub
rcrl
add
subl
adc
xchg
sub
cmp
pusha
sub
fcompl
jecxz
imul
sarb
out
data16
mov
jl
cmpsl
and
sahf
dec
adcl
mov
mov
xchg
dec
sub
daa
jle
lock
push
aaa
ljmp
sbb
ror
inc
sbb
add
sub
stos
fdivrl
adc
fimuls
add
pop
cltd
inc
stos
cmp
push
cmp
aad
repnz
sbb
or
xchg
pusha
inc
push
xorl
pop
jno
fcmove
lods
jae
jp
push
stc
dec
in
rol
and
dec
stc
aas
sbb
cvtpi2ps
cmp
dec
je
pop
or
es
movsb
fsin
push
out
cli
sbbl
lods
mov
call
jno
and
dec
int3
mov
dec
push
lea
add
mov
lret
sbbb
or
arpl
arpl
int
out
adc
lahf
pop
add
in
adc
cli
push
pusha
pusha
and
imul
pop
repnz
addr16
sbb
cli
and
enter
push
xor
or
pop
sbb
mov
fs
andl
xor
ss
repz
in
cmpsb
lock
test
adc
imul
cwtl
sub
ljmp
mov
and
and
and
nop
std
sub
dec
mov
nop
pop
mov
mull
add
sbb
cmp
jmp
popa
gs
clc
sub
insl
ds
push
inc
push
das
loope
xor
divl
sbb
mov
aas
stos
lods
mov
dec
fsubr
lret
inc
pop
cltd
js
int
test
and
call
cli
cwtl
ja
clc
mov
insb
imul
cmp
or
imul
bound
pop
inc
dec
pop
lret
xchg
pop
xchg
xor
add
add
add
aam
mov
jno
mov
sub
mov
faddl
jle
xchg
mov
cmp
clc
mov
js
mov
pushf
cmp
dec
xor
mov
or
test
clc
add
dec
lea
pop
push
add
outsl
cli
push
movb
cmp
ror
inc
loopne
dec
pop
bound
arpl
adc
dec
sub
jnp
shlb
nop
sbb
fidivrl
mov
shll
jbe,pt
push
andl
fs
enter
jle
xor
xor
popa
push
into
or
cltd
outsl
imul
pop
repnz
scas
and
jg
mov
jno
push
inc
adc
xchg
pop
fstl
fsubl
mov
fnstcw
inc
loope
jp
test
mov
pop
and
outsl
jne
arpl
out
cs
xor
xchg
xlat
mov
cmc
jae
lds
cmp
pop
inc
cmp
xchg
and
into
in
enter
repz
ljmp
leave
pusha
push
jb
add
filds
fistps
jecxz
jg
inc
hlt
cmp
dec
xchg
xchg
xchg
cmp
cmp
arpl
push
dec
into
mov
out
jbe
lds
inc
dec
icebp
idiv
inc
sub
sub
std
fsubrl
cmpsb
cmp
gs
add
pusha
cs
push
sbb
xchg
adc
into
pop
jle
cmc
cld
or
mov
cmp
mov
jecxz
push
fwait
jo
xchg
mov
jbe
aam
aad
inc
lret
or
out
add
movsb
dec
dec
sub
push
fisubs
inc
pop
xchg
test
xchg
cltd
adc
mov
loope
adc
int3
or
pop
lret
push
into
cmp
andl
push
in
pop
leave
pop
mov
lret
xlat
xchg
lock
jbe
shl
and
mov
mov
movl
xor
daa
lret
xchg
inc
lds
or
jp
lret
scas
imul
movsl
pop
jmp
ds
jb
mov
jo
sub
push
cwtl
bound
icebp
xchg
jmp
dec
sbb
out
out
and
mov
push
add
sti
or
jae
int3
loopne
cmp
sti
mov
pop
xchg
mov
pushf
xor
sbb
and
rcr
sarl
cmp
jns
push
popa
in
and
inc
jns
decb
push
cmpb
sbb
pop
xchg
testl
mov
aaa
push
pop
stc
insb
mov
inc
mov
leave
repz
xor
cmp
pop
push
test
jge
lret
sub
shrb
xlat
cmp
or
int3
jb
jae
loope
jmp
js
pushf
push
xor
sub
and
cmp
ljmp
ret
mov
ror
popf
adc
cs
mov
pop
cmpsl
xchg
scas
icebp
jmp
aas
icebp
xchg
rep
cmp
inc
cmp
mov
ja
je
std
fldenv
lds
or
call
outsb
dec
or
daa
pop
outsl
dec
cltd
stos
mov
scas
and
stos
popf
clc
loop
mov
insb
andb
les
stc
movzwl
xorl
xlat
repnz
xor
add
xchg
xchg
je
faddl
jmp
or
pop
and
nop
add
aaa
mov
aas
ljmp
shll
lods
ud2
push
pop
push
stc
ss
pop
xchg
add
push
in
xchg
scas
push
jge
hlt
das
nop
pop
rclb
scas
jb
mov
jge
pop
cmp
data16
scas
push
pop
ret
repnz
mov
int
pop
dec
or
jmp
jl
sbb
mov
push
in
inc
shr
or
mov
xor
or
sub
pusha
call
mov
jle
das
inc
push
xchg
mov
mov
xchg
rorb
and
push
in
add
ja
mov
push
fwait
test
push
fistl
rclb
cmp
lret
int
jge
inc
sub
sarb
mov
and
pushf
pop
mov
add
push
jno
adc
icebp
sub
cs
lret
je
cmpb
add
addr16
popf
mov
and
cltd
inc
inc
mov
or
push
and
or
lea
out
xor
push
test
out
inc
jnp
sub
push
popa
je
or
cmc
imul
gs
jg
mov
sbb
fbstp
adc
xchg
inc
leave
xor
lods
cmp
aas
mov
jb
add
mov
xchg
mov
fwait
mov
jne
fs
or
push
jle
cmp
rcr
out
lods
imul
popf
pop
push
mov
xchg
or
pop
xorb
xchg
cwtl
mov
mov
cvtps2pd
sub
sbb
xchg
dec
sbb
sbb
and
push
sarl
fldl
mov
shlb
lds
or
fsubr
jg
test
and
mov
and
js
mov
fnstenv
mov
dec
jns
or
jg
fldt
gs
sbb
mov
adc
xchg
je
jg
fwait
sub
ret
inc
shrl
mov
std
ja
mov
inc
mov
out
xchg
test
shll
push
sub
out
test
xchg
push
mov
push
push
push
hlt
das
rorl
aas
cmp
jmp
dec
cli
push
sbb
sub
xchg
daa
nop
les
jmp
cmp
xchg
push
in
fwait
inc
inc
notl
adcl
xor
pop
movb
test
in
push
shl
push
xchg
jno
jmp
push
dec
mov
xor
fisttps
in
sub
cmp
xor
jne
in
or
pop
movsl
mov
pop
js
in
mov
sbb
aad
cs
test
loop
add
sbb
jmp
mov
lcall
in
in
sub
inc
mov
sbb
rcrl
or
xchg
cmpsl
test
rclb
cmc
test
mov
mov
sub
addr16
or
jmp
in
push
xlat
in
loop
sbb
xlat
and
mov
or
xor
subb
je
mov
data16
cmp
mov
fldcw
pop
std
daa
dec
inc
pop
pushf
push
les
out
mov
cmp
negb
jg
xor
ljmp
mov
push
imul
leave
scas
inc
test
push
jb
pop
imul
jmp
dec
aaa
push
mov
lcall
sbb
xlat
dec
push
mov
jl
xor
push
adc
mov
fistl
push
push
jmp
mov
jg
xchg
inc
hlt
sub
mov
push
pop
xor
cwtl
jns
xchg
mov
or
ds
ud1
mov
pop
push
push
dec
nop
mov
mov
mov
or
mov
lods
sbb
orb
mov
mov
jno
daa
inc
push
lret
push
cli
and
xor
or
and
and
or
cmpsl
fs
lds
xchg
or
shll
or
movsb
jno
fcompl
jns
jle
std
mov
arpl
out
fidivrl
loopne
out
mov
push
jge
scas
push
dec
call
sbb
cmp
in
jns
orl
push
ret
xor
rcr
jno
loopne
dec
add
xlat
orl
shrb
test
xor
lock
adc
movsb
push
and
or
cwtl
fiadds
rorb
mov
push
lds
push
insb
mov
mov
orl
aaa
jl
jl
mov
call
inc
xchg
jge
lea
sub
cmp
adcb
fnsave
xor
fstpt
jne
mov
push
jle
jne
shrb
ss
scas
pop
mov
and
mov
call
fs
sbb
enter
iret
inc
mov
ja
fldl
repz
add
ret
jg
insl
shrl
sarl
push
mov
jmp
pop
mov
jl
and
sbb
cltd
mulb
xor
adc
lret
jmp
xor
mov
mov
loopne
ljmp
xchg
addr16
inc
xchg
and
addb
lods
cmp
pop
xlat
adc
mov
arpl
pushf
jae
jmp
or
rolb
or
lret
mov
sbb
and
fidivrs
sub
hlt
rorl
xchg
aad
shl
xlat
mov
aaa
subb
in
lea
lods
sbb
lret
add
cli
xor
pop
sub
xchg
repnz
jns
jl
adc
js
lock
int3
addr16
cmp
mov
aam
cs
imul
xchg
out
insb
inc
sbb
decl
lds
inc
push
lret
test
adc
enter
test
in
rcll
fistpll
dec
xor
lcall
adc
je
shrb
notl
or
jg
mov
bound
sbb
mov
lret
push
mov
dec
rorl
mov
adc
cmpsl
mov
in
jo
push
cmp
jmp
shlb
stc
mov
pop
mov
loop
add
imul
sub
ja
enter
ds
arpl
mov
test
ret
int
xor
jnp
loopne
xchg
add
xchg
mov
mov
push
loop
testb
mov
adc
or
imull
pop
mov
pop
cld
push
jge
adc
jae
xchg
add
pop
dec
mov
inc
test
out
movsb
pushl
outsl
rolb
cmp
adcb
dec
or
in
fiaddl
rclb
jmp
push
fs
add
and
mov
sub
mov
arpl
test
and
pop
jnp
jbe
lahf
les
ds
aaa
jns
cmc
enter
or
mov
sbb
hlt
lret
int3
xchg
pop
lds
and
mov
xor
movl
push
aam
cmpsl
hlt
lahf
pusha
jb
sub
jnp
sub
outsb
or
mov
out
fisubrs
push
in
jp
jp
addb
stc
inc
movb
cmp
or
jge
dec
lods
inc
push
mov
cwtl
sub
insl
push
mov
testb
lds
int3
lahf
fidivl
or
inc
cmp
repz
sub
lods
shl
xor
cs
in
pop
lret
aad
arpl
or
jge
ds
or
or
xor
loope
into
sub
das
mov
stos
push
xchg
push
mov
lods
cmpsb
clc
mov
mov
sbb
sub
add
adc
add
add
pusha
adcb
add
cmpsb
sub
or
lret
je
adc
cmp
clc
push
sbb
test
sbb
fcomip
out
dec
loopne
repnz
jmp
pop
jbe
xor
sarl
xchg
push
lcall
mov
mov
cmp
inc
adc
divl
add
outsl
iret
out
push
pop
test
out
dec
popf
push
pop
jmp
dec
inc
cmpsl
lret
movsl
xchg
das
fiaddl
and
pop
loope
jb
out
imul
mov
mov
pusha
scas
and
aad
arpl
data16
lahf
rorl
in
push
shld
sbb
sbb
push
sbb
out
xor
dec
orl
ljmp
push
dec
and
cmp
inc
and
pop
mov
mov
push
lahf
das
inc
adc
cmp
mov
xchg
adc
xchg
and
iret
lahf
mov
add
cmp
push
adc
jmp
movsb
xor
test
out
fwait
mov
pusha
xor
mov
jo
lock
and
push
jmp
icebp
mov
out
stc
adc
outsb
test
jmp
jb
xchg
jbe
pushf
sbb
jle
bound
mov
icebp
fs
pop
int
je
outsb
test
jecxz
and
lods
in
xor
inc
test
push
jns
pop
jle
adc
inc
test
cltd
mov
mov
and
cmp
mov
add
mov
mov
decb
dec
inc
jecxz
arpl
add
mov
orl
fs
add
ret
pushf
mov
nop
mov
fldenv
dec
lahf
xchg
adc
pop
pop
ljmp
push
iret
in
cmc
jns
mov
push
outsl
dec
and
stc
push
shrl
sbb
shr
notl
sahf
icebp
sahf
sti
test
addr16
imul
jecxz
decb
and
push
adc
mov
push
push
flds
jo
andb
fidivrl
sbb
sbb
into
or
xchg
les
leave
cmp
jge
jno
call
enter
ret
test
adcl
ds
adc
jns
and
les
cmp
push
xor
insl
cld
and
ret
cmp
icebp
push
dec
fstps
mov
inc
add
jns
mov
scas
mov
cmpb
cmp
out
jnp
outsl
fsts
out
enter
rcll
push
out
sbb
in
in
icebp
imull
jno
pop
push
jns
sbb
cmpsl
pop
mov
pop
inc
inc
ret
dec
and
jae
ret
imul
sbb
inc
fmull
enter
scas
fwait
outsl
sub
loope
les
or
insl
in
aaa
cli
adc
repz
add
sbb
dec
ret
xor
mov
out
jno
inc
ss
call
test
jg
shr
ss
stos
jecxz
incb
sbb
shll
mov
imul
repnz
mov
mov
and
fwait
aaa
cs
xor
ret
jmp
shlb
cwtl
pop
mov
rorl
add
outsl
sub
scas
inc
inc
das
test
shll
popf
lods
pop
out
cli
scas
dec
lahf
js
test
xchg
cld
bound
je
jbe
leave
jp
sbb
stc
mov
dec
in
jo
inc
or
mov
sbb
cli
and
jmp
or
roll
lret
lret
insl
popa
pop
sub
fwait
out
xchg
mov
xor
pop
mov
sbb
push
decl
in
lret
imul
imul
divb
je
sti
cmp
mov
cmp
push
clc
push
shlb
push
dec
xor
xorb
xchg
ljmp
test
movsl
outsb
mov
xor
sub
dec
push
int3
int
xchg
fwait
cmp
aam
scas
dec
push
pop
in
push
cmpsl
pop
aad
and
mov
xchg
leave
ss
ror
and
add
push
xor
pop
inc
scas
add
sti
or
ja
lcall
jb
adc
daa
pushf
mov
call
pop
mov
divl
in
imul
fidivl
out
adc
cmp
mov
mov
cmp
sub
pop
inc
push
cmpsl
mov
mov
push
xor
inc
inc
xchg
push
jle
cld
and
add
push
push
jbe
daa
sarb
or
jge
sbb
clc
cltd
dec
lret
shl
pop
push
insl
ficompl
xchg
testb
add
ja
mov
adc
push
stc
cmp
and
push
inc
jmp
shlb
into
or
xor
scas
stc
mov
or
xor
mov
add
mov
test
lcall
pop
push
sub
xchg
jp
push
cwtl
cmc
jne
in
das
in
in
dec
xor
cmpsl
sahf
mov
or
inc
loopne
push
pusha
and
loopne
call
dec
out
in
enter
or
and
pushf
aas
repz
and
add
xor
push
fiadds
jnp
out
in
jbe
push
cmp
cmc
insb
pop
jae
cmpsl
mov
fs
mov
cmp
cmp
movsb
cld
addl
push
or
inc
adc
push
mov
cs
fisttpl
or
jnp
data16
cmp
fisttpll
shll
popf
scas
adc
sub
ds
push
push
es
leave
cmp
cmpl
jl
aaa
lods
jbe
inc
movnti
pop
dec
fisttpl
sahf
mov
je
push
pop
jbe
mov
dec
outsb
xchg
add
dec
adc
icebp
cmp
call
scas
adc
jae
dec
stc
ds
mov
arpl
mov
dec
or
das
xor
or
dec
fwait
repz
movsl
jg
insb
jne
sub
ret
sti
mov
push
cmp
out
das
inc
mov
and
pusha
pop
inc
dec
leave
or
inc
or
adc
bound
lods
pop
sahf
mov
inc
mov
pop
mov
outsb
adc
sub
cld
pop
dec
les
jg
sahf
rorl
dec
mov
add
xor
cmp
push
aad
stos
sbb
aaa
cld
shlb
push
sbb
imull
jnp
mov
push
pop
push
push
sub
cmp
stc
jns
sub
inc
icebp
xchg
dec
add
pop
cmp
out
mov
mov
out
shlb
pop
inc
and
js
data16
sub
inc
jo
sub
inc
pop
popa
lcall
test
out
aad
mov
ret
popa
shl
in
sub
dec
xchg
pop
cwtl
fldl
xchg
ss
cwtl
cmp
nop
jo
outsb
jmp
ror
loopne
jb
dec
push
dec
imul
fiaddl
sti
bndstx
mov
imul
sub
dec
cld
daa
xchg
and
and
cmp
cmp
and
iret
or
add
jg
fisttps
and
mov
add
lea
xchg
decl
mov
push
lods
pop
add
cmp
adc
mov
dec
incb
leave
adc
xor
in
push
mov
inc
out
inc
inc
shrb
pusha
xor
jle
nop
jmp
sbb
out
inc
add
test
and
xor
stos
cmp
mov
jae
sbb
test
daa
xchg
and
fcom
andl
adc
push
je
lret
iret
and
insl
pop
inc
cmp
jb
add
adc
push
ret
aam
imul
sub
mov
mov
and
xor
sbbb
int
mov
mov
push
cltd
jbe
daa
sub
xchg
in
outsb
dec
sbb
idiv
shlb
arpl
inc
dec
repnz
insl
xchg
jno
adc
jl
pop
add
mov
cltd
outsb
cmp
mov
enter
or
dec
popa
push
pushf
cmp
lods
dec
xchg
inc
mov
push
sbbb
stos
inc
insl
adc
incl
pop
out
jmp
cmc
sbb
sbb
popf
repz
mov
jb
daa
jbe
mov
pop
sub
xchg
or
push
dec
ret
and
nop
dec
add
fadd
add
bnd
enter
lret
cli
inc
jbe
cmp
filds
xor
insb
jae
or
mov
test
movsb
jge
repnz
es
dec
jnp
dec
xchg
dec
push
dec
cmp
sbb
jbe
jnp
les
popf
push
dec
outsb
stos
cmp
inc
lss
test
mov
mov
pop
inc
or
inc
test
popa
mov
ja
lret
add
jle
sub
in
cmpb
cmc
cmc
sub
iret
stos
push
push
mov
xor
or
cmpsl
xor
jno
inc
cs
std
sbb
mov
push
xor
lahf
pusha
aaa
or
dec
pushf
inc
mov
aaa
ljmp
sbb
rcll
ret
mov
test
lds
jo
in
loop
push
clc
lret
divl
dec
fsubr
push
stos
in
add
dec
xor
mov
lock
add
jl
push
push
rolb
loopne
xor
sub
dec
push
jo
mov
outsb
or
mov
push
add
insl
subl
mov
jmp
xchg
negl
loop
ss
cmp
mov
pop
xor
arpl
cmp
jecxz
or
jp
loope
mov
mov
into
push
or
rcll
push
aaa
outsl
ret
sbb
call
popa
push
popf
sahf
cmp
test
rorb
cmp
fnstenv
inc
pop
popa
js
lahf
dec
out
and
adc
jl
cmp
stos
cwtl
lcall
imul
lahf
jae
xchg
clc
sub
loop
hlt
pop
sub
int
push
sub
mov
add
cwtl
decl
add
mov
stos
lock
insb
adc
push
push
rcrl
nop
pop
sbb
aaa
mov
or
add
enter
test
cmc
test
jg
rcrb
aas
jp
xchg
cmp
mov
mov
sub
je
out
scas
test
and
sbbb
adc
add
push
push
mov
or
push
cmp
dec
es
inc
cmp
mov
xchg
in
addr16
dec
fbstp
mov
jns
int3
gs
filds
mov
lods
pop
out
sub
in
sub
mov
ljmp
ljmp
mov
aam
adc
fs
mov
sbb
das
mov
push
call
cltd
pop
add
adc
int
bound
popf
push
ss
lea
jmp
pop
dec
push
outsl
jp
mov
sub
and
lret
jo
sub
or
mov
mov
test
mov
push
sbb
jecxz
pop
sbb
daa
mov
inc
dec
xchg
loopne
jl
xchg
stos
mov
outsb
inc
daa
jno
inc
test
lret
or
mov
dec
push
data16
and
fisubs
loop
pop
inc
das
aad
and
push
repnz
jne
int3
pop
push
ret
add
or
xchg
in
xor
psrlq
and
push
push
roll
scas
gs
jbe
loop
popa
sar
pop
mov
fwait
shll
mov
je
mov
in
inc
orb
add
repnz
or
jb
or
enter
in
mov
shl
sub
push
inc
mov
cmp
pop
icebp
push
fcoml
icebp
lret
add
int3
aam
or
mov
les
mov
xchg
sbb
imul
lcall
les
and
mov
lret
cmpsb
das
adc
inc
mov
push
sub
xchg
inc
or
push
hlt
sbb
sbb
xchg
jno
jne
shlb
in
icebp
cmpb
call
push
push
adc
inc
cltd
mov
lret
inc
mov
iret
dec
adc
sahf
and
repnz
lods
mov
mov
jmp
add
sbb
mov
into
adc
imul
mov
cmp
pop
ret
scas
icebp
jno
das
stc
xchg
mov
cmpsl
sub
inc
mov
lock
push
sub
xor
inc
rolb
lods
mov
adc
sub
xor
ljmp
aas
jle,pt
inc
lcall
mov
and
je
dec
fidivs
push
movsl
rorb
jae
inc
push
cmp
or
in
ss
mov
fs
nop
enter
out
in
jg
push
pop
js
imul
push
xchg
nop
push
cmp
sbb
insb
cld
mov
mov
mov
in
lock
call
cmp
popa
ret
xor
or
xchg
cli
aad
mov
imul
pop
sbb
push
das
cs
in
fcoms
lds
dec
fildll
or
repnz
hlt
outsb
hlt
ss
dec
psrlw
cmp
movsl
cmc
sbb
sbb
jae
pop
shll
test
pop
fs
adc
sti
out
cmp
in
popf
je
scas
sub
mov
fcomps
push
addr16
mov
insl
int
push
push
push
out
stos
out
out
dec
aaa
xchg
addr16
aas
xor
add
pause
movsl
jnp
ds
fidivrs
xor
mov
push
insb
mov
mov
enter
fwait
jge
mov
mov
push
int
and
xlat
xlat
adc
sbb
aas
cmp
mov
daa
movsb
cli
adc
jns
js
fs
icebp
sbb
mov
scas
sub
sub
imul
xor
xchg
jne
mov
movsb
sub
mov
scas
fcomi
push
stos
repz
rcrl
test
inc
mov
mov
mov
in
ss
mov
push
int
sbb
stc
ds
adc
mov
jns
or
fnstcw
sub
mov
sbb
aas
jae
sahf
mov
pop
mov
and
cs
push
inc
xchg
pop
pushf
pop
hlt
and
inc
xlat
jg
mov
or
lea
pop
adc
cmp
adc
xchg
dec
loope
in
roll
out
pop
shrb
and
xchg
sub
lret
dec
ret
arpl
addl
mov
mov
xchg
push
cwtl
mov
lds
mov
xor
xchg
and
test
mov
xchg
jae
les
cmpsl
dec
sbb
and
test
into
mov
decl
pushf
sbb
hlt
repz
arpl
push
xlat
cmp
insl
push
lahf
les
data16
xlat
rorb
cmp
fstps
mov
xor
jns
mov
popa
insl
sbbb
jb
out
and
lcall
jle,pn
push
fabs
pop
lahf
pop
mov
pop
cmp
imul
cmp
pop
mov
in
sbb
pop
jb
pop
bound
daa
and
arpl
inc
mov
stos
negl
jnp
insl
pusha
bound
js
or
push
movsl
outsb
test
pop
faddp
mov
xchg
insb
xor
pxor
pop
pop
mov
sub
dec
mulb
imul
or
shrb
jns
mov
fnstsw
gs
imul
pop
insl
das
and
mov
xchg
insb
push
xchg
fnstsw
lds
mov
cltd
mov
clc
inc
push
jno
mov
enter
test
xor
sahf
idivl
jg
fdivl
pop
push
clc
sti
mov
mov
adc
xor
jg
js
fwait
pusha
sub
cmp
jl
mov
adc
xor
and
push
or
aaa
mov
rcll
add
scas
sar
push
pop
mov
test
mov
jp
in
das
dec
arpl
shll
fsubrp
aam
jp
setne
sbb
scas
movsb
ret
mov
ljmp
cmp
mov
insl
cmp
mov
test
mov
fnstcw
cmp
sbb
mov
cli
inc
addr16
push
movsl
xor
xchg
scas
ss
cmp
lods
cmp
test
jnp
adc
add
fildll
xchg
mov
mov
cmp
jbe
inc
pop
inc
repz
imul
pop
xchg
shlb
mov
notl
adc
adc
inc
dec
mov
mov
dec
push
mov
mov
mov
in
sbb
test
sbb
or
adc
movsl
sbb
inc
pop
or
clc
mov
mov
adc
mov
addb
cld
lods
pop
inc
xor
or
les
adc
push
add
jb
pop
xor
sbb
clc
dec
iret
gs
or
lock
push
inc
mov
test
scas
lret
fs
pushf
repz
or
mov
push
fnstcw
shlb
or
mov
imul
or
mov
jbe
push
mov
movsbl
cmp
andl
aas
dec
adc
inc
push
fs
jle
push
test
fstps
push
mov
push
cli
or
stc
sub
loop
mov
sub
fs
jge
pusha
or
int
push
fsubr
nop
dec
fisttpl
jnp
push
xchg
repz
fistps
adc
mov
mov
movl
push
mov
pop
pop
add
imul
stos
cmp
hlt
sub
out
xor
sub
fadd
add
xchg
dec
mov
adc
mov
adc
decl
jp
popf
add
or
nop
and
hlt
in
stos
push
rcrl
pop
dec
push
mov
jmp
mov
or
sahf
jae
pop
xor
cmp
fwait
push
or
inc
inc
dec
adc
jmp
gs
outsb
jns
in
jns
fmuls
jp
dec
jecxz
jns
xchg
pushl
aas
mov
ljmp
push
mov
push
test
inc
test
arpl
mov
add
rcrb
mov
icebp
mov
mov
mov
pop
es
jns
outsl
das
jo
mov
ret
imul
dec
pop
outsl
jno
and
stc
push
dec
add
xchg
push
cmc
adc
jge
addr16
inc
jge
dec
popa
mov
fistpll
aad
or
and
mov
iret
add
xor
ljmp
addr16
pop
sub
fldt
movl
cmp
add
pop
jecxz
jmp
cltd
cmc
loopne
xlat
mov
jmp
and
xor
cmp
sub
mov
lds
outsb
or
mov
ja
pop
mov
xchg
xchg
xchg
loope
mov
shll
lods
push
xchg
sub
iret
mov
dec
sub
dec
testb
mov
sub
or
mov
aas
aad
xor
mov
mov
mov
xchg
adc
cmp
mov
pusha
jle
xchg
add
ret
jo
jg
cld
scas
inc
scas
mov
sbb
inc
cwtl
int
jbe
mov
leave
je
inc
mov
imul
push
jmp
addr16
xchg
aas
sbb
push
ret
orl
std
and
xor
iret
fistpl
cmp
mov
daa
push
fidivl
xchg
xchg
fs
out
movsl
lods
arpl
rolb
pusha
inc
add
fadds
scas
jge
sbb
mov
sub
or
or
ljmp
mov
shl
popf
xchg
fs
add
test
shl
mov
mov
mov
push
lea
and
push
adc
add
in
mov
insb
xor
inc
test
sbb
dec
iret
lea
fdivs
pop
push
adc
pop
fwait
pop
stos
lret
fdiv
rcrb
nop
imul
or
lods
sub
xor
imul
push
mov
clc
rcrl
lret
add
or
sti
and
int
data16
and
das
loopne
insb
lods
xor
push
in
adc
ss
test
mov
sub
add
fwait
lahf
subb
outsb
dec
outsl
loopne
imul
xchg
cmp
ja
mov
mov
cld
jp
add
psubq
test
movsb
push
call
leave
mov
xchg
inc
or
adc
pop
int
sbb
or
test
cwtl
lahf
mov
sub
scas
idivb
test
out
xor
or
mov
or
pusha
imul
add
cmp
cltd
adc
inc
mov
outsl
push
push
test
minps
subb
lahf
inc
dec
inc
mov
dec
hlt
push
and
test
xchg
out
jp
dec
jmp
inc
or
add
pop
mov
xor
dec
aad
scas
cmp
xor
or
inc
pop
out
pusha
pop
mov
mov
sbb
rcrl
cmpsb
pop
mov
leave
jp
mov
jno
add
add
and
mov
in
ljmp
cmp
and
or
mov
or
int
fstps
je
shrb
push
dec
out
pop
stc
clc
xchg
clc
and
rcrb
add
sbb
ss
xchg
cmp
mov
imul
xchg
inc
xor
outsl
mov
scas
mov
out
shlb
or
aaa
mov
lds
inc
movsl
mov
aad
mov
mov
inc
cmpsb
xchg
in
sub
sahf
jnp
dec
test
popa
mov
push
mov
push
andb
int3
repz
and
cs
cli
and
es
pop
out
push
and
mov
mov
repnz
inc
cmp
or
dec
and
xor
movsb
sub
add
sub
clc
fnstenv
repnz
aas
pop
sbb
daa
or
cli
adc
scas
hlt
test
sahf
hlt
int3
in
dec
sub
mov
call
std
in
jns
xor
and
bound
sbb
fdecstp
cli
ret
mov
jecxz
xchg
adc
cmp
leave
push
push
add
in
pop
xor
ret
lret
cwtl
leave
jmp
mov
cmp
and
stos
inc
mov
mov
fisubs
jle
mov
fidivs
pop
inc
jbe
mov
add
insb
mov
test
aam
es
fidivrs
outsl
jnp
push
outsb
mov
sbb
cmp
mov
and
mov
pop
jg
adc
fdiv
js
and
push
bnd
cltd
xchg
jp
ror
cmpsb
aad
ret
mov
jl
xchg
inc
ljmp
mov
test
cmpsl
lds
loopne
call
addr16
dec
dec
inc
cmc
push
fildl
pop
and
inc
sbb
pop
xchg
and
mov
jbe
push
int
mov
imul
shrb
mov
pop
iret
push
mov
nop
xchg
std
sub
test
pop
adc
or
push
xor
ret
imul
je
jmp
cmp
les
or
mov
add
pop
push
push
rorl
mov
and
cltd
push
xlat
mov
ret
sbb
cmpsb
dec
dec
std
lret
and
fst
stos
repnz
or
inc
movsl
aas
rcr
inc
in
rcll
mov
cld
add
add
cmpsb
outsl
icebp
push
scas
sub
sbb
add
sub
mov
mov
pop
outsb
andb
loopne
imul
add
lods
xchg
cld
sbb
and
scas
jb
mov
test
add
mov
movsb
push
or
cli
sbb
outsb
cmp
inc
jecxz
lret
shlb
clc
adc
lea
mov
xchg
mov
mov
or
mov
in
dec
out
test
mov
test
mov
inc
sti
test
mov
jbe
lds
mov
std
jns
push
stc
inc
iret
push
push
xchg
xorl
and
sbb
mov
lods
cmp
jne
xchg
insl
cmp
insb
adc
or
xchg
dec
push
pushf
or
mov
lret
les
clc
shrb
repz
in
jne
sub
fwait
les
pop
dec
push
stos
out
cld
movsb
mov
pusha
push
testl
repz
cld
test
dec
bnd
xchg
ss
repnz
cli
ror
movsb
adc
mov
mov
and
adc
int3
and
sbb
aaa
out
or
das
xchg
push
or
xor
mov
clc
imul
jle
add
or
sti
dec
pop
loop
mov
xchg
jmp
and
xchg
enter
loopne
inc
sbb
xchg
push
jnp
dec
roll
aam
jge
adc
and
pop
inc
cmc
cld
sub
mov
icebp
test
shll
push
aad
pop
mov
movsb
test
ror
popl
sbb
jb
jge
xchg
pop
je
scas
and
sub
xchg
jmp
adc
cs
cmp
fxch
push
mov
jbe
mov
mov
loope
jecxz
movsb
mov
jecxz
mov
daa
enter
ja
outsl
sub
and
sahf
out
insl
lret
inc
mov
fisttpll
dec
repz
arpl
lret
xor
test
push
sub
sbb
or
add
mov
sub
and
pop
inc
sbb
xor
test
shl
dec
adc
popf
test
jno
inc
xchg
jp
cld
inc
jmp
or
sub
nop
xchg
xor
icebp
addr16
test
in
mov
and
sbb
aad
cld
pop
stc
fimuls
cs
mov
xor
push
inc
pop
cmc
test
scas
jmp
fsubr
pop
and
aaa
cmc
outsb
mov
iret
and
sub
scas
mulb
jo,pn
mov
pop
xchg
aam
scas
add
scas
mov
xchg
mov
sub
mov
cpuid
cmp
mov
push
out
or
add
sbb
fists
mov
scas
ret
dec
movsl
sub
hlt
xlat
pop
dec
sub
insb
jne
pop
lahf
cs
fs
aas
mov
ret
xor
jnp
ficompl
popa
jmp
movsl
gs
js
enter
jmp
push
bnd
mov
mov
outsb
adc
fidivrs
in
pushf
xchg
int
mov
cs
les
ret
repnz
scas
test
ss
mov
add
in
fsubrs
mov
test
inc
inc
and
xchg
jbe
stos
xchg
xchg
cmc
mov
ret
loop
xchg
cmp
xchg
jle
or
xor
pop
xchg
std
fnstsw
sarl
sarb
insb
les
repnz
or
aam
sbb
aad
into
ret
pop
sbb
mov
test
add
mov
sbb
outsb
clc
imul
xor
out
add
pop
out
xor
test
sbb
outsb
popf
xchg
mov
push
jne
mov
sub
icebp
in
mov
cs
push
iret
cmp
sbb
mov
ja
mov
cs
lret
jbe
push
frstor
sbb
sbb
std
or
dec
xor
scas
pop
shll
jge
push
xchg
pop
jae
fimull
nop
push
fdivrs
enter
daa
push
fdiv
xchg
in
nop
or
xor
fnstenv
or
xor
mov
insb
mov
cmpsb
pop
cld
mov
jnp
in
stos
pushl
out
js
mov
loope
sarl
mov
push
mov
jmp
in
bound
sub
add
dec
stos
pusha
xlat
cmpsl
sub
sbb
sub
es
pop
jl
imull
mov
lods
cli
fxch
or
xor
push
xlat
push
add
jg
and
mov
lea
dec
mov
sbb
mov
or
mov
inc
cmpsl
clc
icebp
jmp
add
mov
fistl
jge
out
pushf
jg
pop
aaa
lds
scas
inc
mov
sub
popa
shll
out
mov
test
push
adc
sub
sub
cli
insb
ja
jae
jne
loope
sbb
lret
lea
pop
fstpl
icebp
insb
mov
inc
das
andl
mov
push
mov
cltd
ds
pop
fwait
cs
sub
pusha
shrl
mov
mov
cltd
mov
sub
jl
test
test
ljmp
pop
xchg
dec
leave
push
sbb
lods
and
push
out
dec
add
shr
cmp
or
unpckhps
out
outsb
sti
les
pop
add
roll
fnsave
cmp
mov
cmp
jo
or
xchg
dec
mov
push
lahf
dec
jg
jl
cld
aad
xor
shrb
out
scas
or
aas
add
icebp
xor
jno
cmp
or
ficoml
xor
dec
pop
call
aas
mov
loopne
sub
pop
cli
adc
sub
test
jo
movsb
negb
pop
mov
pop
inc
sub
ljmp
stc
sub
push
jae
mov
pop
mov
lret
mov
outsb
addr16
cli
imul
mov
inc
out
das
mov
decb
cmp
out
push
roll
xor
sub
imul
adc
mov
dec
rcll
mov
mov
lock
dec
xchg
out
divb
sub
mov
pop
xor
aaa
xor
pop
push
cs
daa
aas
mov
mov
outsl
insb
inc
pushf
mov
ret
xchg
cmpsb
pop
pop
icebp
loopne
inc
jnp
adc
push
fs
inc
and
lret
ds
incb
orl
jle
xchg
fstpt
jb
nop
mov
mov
xchg
stos
cld
popa
mov
and
xchg
pop
ds
add
pop
hlt
std
xor
pop
dec
push
jle
call
fidivl
shr
xchg
xchg
adc
sbb
jnp
jge
mov
icebp
mov
in
stos
pop
xor
pop
popf
fucomi
push
adc
out
pop
add
aad
movsl
ljmp
movsb
loope
add
sub
xchg
test
pushf
fcompl
sbb
push
xor
ret
mov
sbb
shl
sub
mov
lock
ret
mov
mov
pop
xlat
cli
int3
notl
imul
pop
pop
lea
out
sti
dec
fbstp
mov
xlat
out
stos
xchg
cmp
ljmp
lods
cltd
adc
mov
sub
push
xlat
outsl
pop
jbe
pop
mov
cmc
aad
xor
sub
iret
pop
stc
cmpsb
pusha
repz
mov
lock
ss
jnp
lods
ror
cld
shrl
sub
fisttpl
mov
in
cmpl
imul
rcll
sarl
les
mov
sbb
mov
addr16
xor
push
and
pusha
bound
mov
jge
xchg
pushf
out
push
sbb
fsubl
mov
popa
lret
mov
enter
fwait
sbb
lds
iret
addl
xchg
cmp
out
int3
push
ret
loopne
ds
gs
lahf
ret
imul
movsb
mov
jmp
out
pop
jnp
lcall
ret
jg
repz
popa
mov
cmpsb
jno
pop
fwait
push
call
cltd
aas
pop
inc
pop
push
pop
frstor
jecxz
push
fsub
lret
push
xor
rcrl
lahf
imul
adc
pop
sbb
aam
cs
push
movsb
add
add
ds
cld
adc
scas
stos
ss
push
pusha
jmp
mov
rorl
int3
jno
and
movsb
das
or
adc
shll
xchg
xchg
mov
add
cld
jae
outsb
pop
ja
insb
mov
push
mov
xor
ljmp
jno
jmp
imul
inc
outsl
sub
jg
mov
push
pop
mov
push
nop
out
cmp
pop
pop
ss
cmp
xor
cld
loopne
lahf
insl
add
add
inc
xor
cmp
sbb
enter
outsb
addr16
out
lahf
push
mov
sbb
cli
inc
insb
outsl
js
and
pop
clc
out
fcompl
xchg
or
push
cwtl
cmpsb
push
jb
jne
mov
fcompl
rcr
rcll
aam
push
pusha
insl
cs
es
pop
inc
subl
fsts
dec
idiv
in
loopne
xlat
imul
adc
outsb
jecxz
nop
js
inc
add
mov
std
mov
fucomip
aad
or
das
xlat
imul
jge
ss
push
sub
paddq
sahf
cwtl
sarb
addr16
out
pop
bts
or
leave
nop
fisubrs
fidivrs
sub
push
vmwrite
mov
daa
stc
sbb
in
inc
into
pop
mov
jle
inc
jecxz
xor
sub
sarb
xlat
outsl
push
mov
and
fsubs
sub
xchg
add
cmp
xor
jg
lea
loop
or
shlb
jge
mov
ret
test
fsubrs
xchg
cmp
lock
aas
call
cs
inc
dec
and
inc
lcall
mov
inc
inc
and
xchg
fs
mov
imul
xchg
cmp
jno
push
pop
cmp
jge
jle
adc
inc
xchg
dec
fiadds
pusha
enter
sub
mov
pop
insl
out
mov
out
xor
lock
xor
pop
clc
or
adc
xor
das
xchg
jecxz
test
insl
jle
movsl
pop
fistpll
pop
push
sbb
outsb
call
cmp
pop
jnp
xchg
push
and
aad
mov
rol
test
pop
gs
jle
imul
popa
pop
sub
jl
pushl
outsb
imul
aas
fwait
insl
cli
out
mov
sub
arpl
cwtl
mov
test
out
pusha
cmp
mov
test
test
rclb
mov
jbe
cmp
pop
pop
rol
pop
mov
test
test
scas
inc
pop
loop
lods
mov
push
insl
xor
int3
mov
push
adc
js
xchg
icebp
enter
pop
mov
sbb
mov
out
out
jmp
push
mov
sub
and
sarl
sub
pop
nop
mov
fdivl
push
xor
push
adc
cmp
movsb
out
insl
enter
movsl
call
out
cmp
dec
adc
jnp
or
pop
adc
inc
xchg
and
arpl
adc
adc
lods
ljmp
movsl
jecxz
in
shll
mov
xor
scas
sti
cmp
in
or
xor
imul
shlb
sbb
repnz
dec
in
repnz
pop
pop
jns
cmpsl
out
daa
xor
xchg
loopne
or
sub
shrb
inc
adc
and
mov
pop
or
add
jg
dec
sbbl
out
jl
fdivrs
outsl
fs
aam
outsb
popf
or
or
nop
je
popf
in
stc
je
sahf
mov
test
mov
lret
jb
and
mov
and
lahf
int
insl
adcb
jg
in
dec
inc
push
jl
xchg
and
cmp
sub
out
mov
jge,pn
mov
xor
cmp
push
cmp
jmp
sub
add
sbb
data16
lds
js
inc
fiadds
cmc
das
inc
std
mov
cmp
jnp
inc
sub
mov
lcall
fdiv
or
outsl
sbb
adc
nop
pop
pop
fsts
jnp
xchg
jb
jp
cmp
pushl
test
mov
lea
pushf
or
popf
rolb
dec
mov
and
add
push
push
or
mov
jg
dec
xlat
jecxz
stos
out
shlb
jl
stc
leave
subb
inc
add
cmpsl
arpl
sbb
push
in
mov
mov
jne
cld
sbb
mov
mov
sbb
ret
test
fs
jl
in
out
mov
fdivs
and
sub
cltd
or
push
add
cmp
iret
sti
std
mov
fcomip
and
addr16
aad
mov
jns
mov
push
sbb
nop
int3
mov
inc
mov
roll
stos
rorb
mov
std
mov
dec
nop
dec
and
xchg
mov
sbb
push
inc
pop
dec
cltd
cmp
addr16
stos
mov
cmp
lods
mov
pop
aaa
push
adc
pop
cmp
pop
cmp
jge
and
sub
or
leave
repnz
push
iret
es
mov
xchg
sti
ss
mov
and
pop
int
push
pop
into
outsl
ret
and
imul
xchg
mov
jp
mov
stc
jecxz
mov
aam
ja
pop
cmp
cmp
xor
dec
cld
adc
pop
jo
cmc
rorb
repz
dec
adc
push
sub
xchg
clc
js
jg
mov
pop
in
pop
insb
xor
cwtl
das
sbb
outsb
dec
xchg
fs
or
xlat
nop
fdivrs
push
in
mov
cmc
out
mov
ds
je
ljmp
out
das
mov
movsl
ja
and
mov
adc
bound
xchg
jp
aaa
xor
shrb
ja
xor
mov
aad
mov
nop
cld
xchg
xchg
mov
pop
ret
rorb
dec
out
xchg
adc
jnp
adc
sub
sub
pop
mov
mov
test
add
mov
cmpsl
mov
in
jae
jnp
push
daa
popw
adc
out
add
jecxz
mov
aas
or
dec
mov
sahf
arpl
lret
test
roll
pusha
sbb
add
lcall
or
out
xchg
cmp
mov
test
mov
pushf
cs
and
jns
aas
xchg
push
pushf
jmp
fs
push
or
js
fcomps
sbb
xchg
in
cmpsb
lods
or
sarb
ret
jmp
or
xor
mov
sub
or
dec
sub
rorb
adc
mov
sbb
xor
sub
movsl
lods
test
or
popl
or
mov
push
mov
push
dec
inc
adc
daa
mov
rcr
inc
scas
daa
cmp
cltd
mov
ficomps
mov
ret
push
sti
pop
aaa
pop
mov
out
rcl
jb
int3
xor
cmp
fmul
inc
ret
xor
jo
out
js
pop
mov
xchg
ret
and
or
push
adc
pop
adc
fidivs
shll
fisubl
dec
mov
pop
icebp
lods
jo
xor
mov
xchg
or
out
stos
loopne
dec
inc
add
hlt
pop
loope
inc
test
clc
dec
dec
mov
lock
inc
out
dec
testb
insl
cltd
mov
push
sub
and
ds
es
std
pop
jne
cmp
repz
sbb
out
fstpt
fsubs
pop
sub
lret
arpl
stc
dec
lahf
fucom
gs
push
cmpl
pusha
mov
inc
pushf
xor
dec
and
rclb
lock
push
adc
xor
ret
stos
ss
js
jecxz
and
idivl
push
xlat
pop
xchg
pop
mov
sbb
inc
inc
add
pop
ljmp
jne
add
movsb
pushf
inc
ss
push
mov
and
mov
mov
xor
fisubrl
inc
cltd
cltd
or
cmpsb
adc
ss
in
xchg
mov
dec
sbb
fadd
scas
dec
pusha
mov
ret
movsl
mov
jp
cli
ja
xor
or
mov
dec
out
sub
xor
lea
mov
out
add
lods
jecxz
seta
fucomp
mov
xlat
insl
sahf
inc
cmp
bound
mov
inc
dec
das
adc
sbb
xor
je
mov
add
stos
cld
mov
fcmovnu
fdivs
cmp
mov
mov
hlt
pop
pop
scas
mov
in
xchg
in
subl
arpl
ret
sbb
mov
shl
or
fsubl
or
mov
insb
sub
scas
jle
mov
loope
push
mov
int3
xchg
and
sbb
loop
push
cld
mov
inc
xor
and
adc
mov
int3
out
mov
into
cld
and
lcall
lds
aas
sbb
jge
or
movsl
inc
push
cmpl
fbld
xchg
inc
insl
ja
lret
fstps
test
push
lods
test
jae
in
loop
or
and
fcompl
outsb
je
sti
adc
sub
lret
and
mov
or
loope
fs
pop
stos
fwait
and
push
test
xor
jmp
arpl
and
shlb
mov
decl
push
pop
in
nop
xchg
movsl
mov
stos
lahf
popa
insl
rol
mov
adc
mov
popf
mov
mov
fs
pop
cmovg
dec
fisubs
inc
enter
inc
mov
xchg
int
sub
iret
jecxz
ret
out
mov
fildll
dec
mov
dec
fidivs
daa
dec
loop
jns
xor
sub
les
cmp
cmp
aad
das
imul
addr16
xor
mov
test
in
push
js
jl
xchg
cmp
jg
pop
ficoml
mov
or
and
add
xor
outsb
mov
jl
fcomps
cmp
mov
inc
daa
dec
push
ficoml
imul
mov
xchg
out
sub
mov
or
dec
andl
repz
mov
mov
or
add
ud2
cmpsl
popf
test
jb
sbb
mov
popa
addb
xor
out
jae
xchg
clc
dec
dec
pop
cwtl
sub
jmp
flds
fsts
repz
add
mov
or
test
mov
sub
ds
imul
cltd
arpl
xchg
mov
xchg
push
and
movsb
push
or
and
addr16
pop
fstps
add
out
shlb
lock
ficoms
add
rcrb
pushf
ljmp
outsl
pop
sub
adc
das
push
cmp
insb
mov
and
js
pop
and
inc
pop
jne
testb
into
popa
push
jmp
mov
js
das
loop
add
mov
jae
push
outsb
shr
dec
pop
add
jno
divb
jge
pusha
mov
cmovo
bound
inc
scas
xchg
in
sbb
inc
xchg
xorl
xchg
pop
dec
ss
aam
pop
cs
enter
cltd
fidivrl
mov
fstpl
add
xchg
jge
inc
lea
push
in
push
pop
ret
push
mov
ret
jl
xchg
popa
jge
or
aaa
repz
cltd
out
movsb
or
xchg
les
mov
cld
in
push
int3
les
pushf
outsl
dec
push
in
mov
aam
cmp
mov
jno
aas
push
pop
cmp
jnp
cld
movsb
push
inc
add
adc
and
mov
add
std
mov
mov
jne
xchg
cmpsl
mov
test
in
daa
test
js
jl
out
sarl
sarb
fisubrs
sbb
adc
imul
je
dec
mov
cs
mov
mov
rcrl
aad
sahf
adcl
jns
mov
mov
dec
fcos
xlat
enter
mov
adc
pushf
pop
adc
cmp
sti
inc
push
leave
dec
stos
jmp
xor
fdivl
xchg
je,pt
jg
sahf
cmpsl
stc
and
dec
or
xchg
pop
shlb
jp
add
ss
add
or
push
mov
xlat
and
adcb
adc
mov
sub
jl
lret
dec
gs
imul
mov
push
repnz
push
adc
jp
push
mov
and
aad
ds
ljmpw
sbb
mov
sbbb
jmp
xorl
mov
hlt
cmp
das
fldl
leave
xchg
jl
xchg
shrb
in
mov
or
mov
lret
loopne
adc
mov
sbb
sbb
bound
mov
call
mov
mov
js
popf
int3
ljmp
and
push
push
pop
add
xor
mov
aaa
mov
mov
push
iret
mov
out
jns
sbb
mov
pop
sbb
pop
test
pop
aam
cltd
sbb
adc
add
out
mov
mov
cs
sbb
push
mov
ss
insl
cmp
pop
xchg
bound
mov
pop
cmp
xor
jmp
mov
and
ljmp
mov
push
sbb
test
loope
andl
loope
outsb
or
inc
inc
sub
in
add
or
dec
mov
xor
popa
jo
pushf
jmp
mov
leave
lock
cltd
je
add
push
ds
push
addr16
arpl
rcll
add
xor
aaa
push
test
movsl
cld
mov
stos
mov
add
mov
mov
ret
setl
addl
mov
fiaddl
jmp
movsb
es
jns
repz
icebp
enter
xchg
mov
and
add
dec
iret
iret
psubsb
daa
cmp
inc
stos
mov
out
sub
mov
add
xor
cmc
mov
pop
notl
hlt
jb
mov
cmc
rcll
xchg
test
and
fs
subb
lret
jle
inc
jecxz
jp
sub
dec
sahf
mov
add
lods
jbe
scas
cmpsb
xor
sbb
push
push
xor
xchg
cmp
inc
loopne
sub
push
xchg
insl
and
loope
sbb
cmp
stos
mov
xor
pop
sub
lods
pop
ljmp
mov
xchg
mov
and
imul
push
cmpsl
es
addl
mov
leave
dec
push
lcall
xchg
mov
push
and
inc
cs
cld
push
sbb
and
sub
in
cli
lret
pop
enter
sbb
sub
lahf
outsb
push
xchg
call
orl
rorw
adc
insl
orl
cmpsb
mov
das
xor
push
movsl
xchg
out
push
gs
fcmovnbe
push
mov
add
test
js
test
mov
sub
inc
push
push
pop
jl
call
cmp
pushf
popf
sbb
jno
lods
inc
pop
int3
stos
cmp
mov
pop
xchg
mov
lcall
dec
push
fsubrp
xor
xor
and
bound
testl
loope
insb
sbbb
mov
das
adc
jnp
dec
inc
mov
incl
std
and
out
pop
dec
out
stos
or
sbb
call
and
sub
stos
jb
adc
add
pop
into
psubq
cmp
or
insl
ds
sbb
mov
dec
jmp
repz
jbe
jmp
ret
inc
mov
mov
sub
movsb
leave
sbb
and
sbb
lods
or
orb
sbb
pop
aam
stos
mov
insl
fistps
jmp
add
push
aaa
mov
jp
loopne
gs
fs
int3
andb
sub
push
jo
arpl
idivl
and
arpl
push
stos
nop
lds
cltd
jb
lret
je
jne
testl
mov
lcall
push
fisubrs
lock
loope
inc
dec
dec
test
mov
mov
lcall
testl
shl
cmp
add
or
jp
divl
jns
sbb
mov
or
imul
push
test
lret
add
rsm
lcall
sub
mov
lds
dec
add
and
mov
addb
xchg
addb
jbe
and
scas
and
sub
loopne
in
mov
cli
cltd
and
dec
shlb
cmp
pop
daa
leave
aad
arpl
jp
fisubrs
out
inc
jae
cmp
call
jmp
jecxz
test
and
pop
cltd
jg
push
ds
out
lock
aam
push
dec
and
push
xchg
cmpb
push
je
jmp
subl
or
inc
loop
mov
mov
into
test
mov
es
out
fucomip
test
adc
mov
mov
lahf
mov
ss
stos
cmp
shrl
xor
mov
or
idivb
fcmovb
cmpsl
outsl
adc
jmp
lahf
fcmovnbe
das
cmpsl
xchg
push
aad
adc
bound
sahf
pop
mov
outsb
sbb
or
into
adc
loop
clc
cmp
add
pop
and
xchg
mov
mov
mov
insb
mov
sub
xor
mov
pop
mov
mov
bound
xor
push
inc
fisubl
mov
cmp
fdivl
xchg
loop
add
leave
xor
adc
stos
push
inc
cmpl
in
dec
dec
and
jle
dec
adc
push
test
ds
in
mov
jp
inc
jmp
add
icebp
mov
lcall
aad
test
mov
xchg
sbb
mov
add
mov
or
cmpsb
movsb
jl
in
mov
xor
ja
cmpl
mov
cmp
sbb
loope
lahf
push
aas
push
jmp
or
cmp
lret
cwtl
jmp
ds
inc
imul
cld
or
dec
gs
mov
xchg
cmc
in
xchg
gs
mov
pushf
scas
lret
into
or
repz
xor
aam
pop
cmc
addr16
mov
orl
jne
cltd
test
xchg
pop
adc
mov
outsl
nop
or
out
sti
js
adc
pop
adc
inc
cltd
mov
sub
rorl
enter
pop
xor
out
sub
cmp
icebp
push
pop
push
lods
or
and
mov
icebp
jl
test
pop
mov
mov
pop
jecxz
jns
push
test
inc
loop
mov
jno
out
and
or
xchg
lds
lods
stc
mov
cli
and
nop
jnp
imul
dec
out
orl
fdivr
addb
insl
mov
inc
push
and
shl
stc
je
cli
sub
outsb
in
lods
repnz
dec
inc
ss
pop
inc
mov
popa
cltd
orl
or
jne
ffreep
push
int3
ret
into
jge
push
adc
mov
jecxz
mov
jb
xchg
sbb
xor
push
sub
and
movntps
loope
inc
je
popf
cmp
hlt
les
mov
pop
pop
lcall
movsl
hlt
das
add
cmpsb
ja
stos
add
mov
and
xchg
cs
xor
imul
scas
movaps
push
sbb
outsl
into
invd
and
int3
push
daa
test
out
movsl
insb
jle
out
xchg
out
fwait
movsl
adc
pop
ja
dec
pop
imul
sub
cltd
pop
test
cmpsb
outsl
jb
decl
mov
mov
fdiv
shlb
jle
lea
mov
mov
push
jle
jl
fisubs
lcall
cld
inc
mulb
sub
je
adc
mov
shr
fnstenv
and
popf
xchg
jg
jl
orb
imul
xchg
addr16
and
std
loopne
jae
mov
mov
push
push
inc
hlt
lret
jnp
mov
xchg
push
and
adc
sbb
pop
leave
push
mov
ror
stos
jmp
shl
lcall
mov
push
lret
adc
pop
xchg
lods
lea
add
adc
out
daa
insb
and
xor
lret
int3
lock
sbb
add
mov
mov
push
or
push
fiadds
add
divl
xor
pop
mov
pop
pop
movsl
ret
mov
addr16
stos
xor
sbb
sbb
subl
sub
fmull
or
pop
gs
out
and
inc
inc
lret
mov
jmp
jne
fisttps
sub
xor
lcall
cmp
test
ret
push
fiaddl
dec
hlt
loope
cmp
mov
in
mov
dec
repnz
xorb
cld
test
cwtl
dec
xchg
shrb
aas
xchg
mov
mov
and
add
fisubrs
repnz
push
gs
mov
inc
inc
mov
daa
ja
jg
in
jae
aam
test
inc
sbb
push
cld
adc
mov
shrb
mov
mov
inc
cmp
and
ds
inc
pop
ds
jbe
add
mov
cmp
lock
mov
inc
jp
idivl
sbb
and
fstpl
enter
xchg
or
dec
dec
push
jp
inc
and
xchg
or
push
mov
jae
jne
aad
dec
cli
nop
pusha
fidivl
dec
sbb
scas
aas
js
mov
gs
arpl
or
rdtsc
jo
mov
mov
or
adc
pop
imul
sbb
bound
test
or
andl
add
mov
into
out
push
pop
pusha
add
lock
cbtw
xchg
jp
mov
inc
les
cmp
mov
mov
pop
jb
gs
fidivl
cmp
pop
sub
xchg
loopne
adc
and
enter
imul
mov
jne
and
jecxz
je
scas
lret
xchg
xor
enter
rclb
xor
shlb
jle
sub
lcall
xchg
add
mov
frstor
jle
das
cmp
sbb
ss
sbb
addb
lods
xchg
ret
bound
xor
sbb
sahf
pop
in
cmp
imul
sbb
addr16
fwait
rclb
nop
jl
test
nop
xchg
dec
adc
dec
cltd
pop
icebp
sub
hlt
and
imul
and
cmp
dec
imul
stc
enter
movsl
add
and
pop
push
mov
dec
stos
inc
sub
sti
cmpsl
aas
gs
aad
or
cmp
sub
jmp
or
mov
shll
pop
cmp
mov
cmp
sub
scas
mov
int
je
adc
jne
mov
bound
dec
and
jge
loop
rcl
ret
nop
sbb
mov
outsb
insl
test
xchg
or
adc
sub
push
dec
lods
add
outsb
sub
mov
jne
dec
or
mov
xchg
mov
xchg
jp
and
inc
pop
push
fnstcw
sub
loope
xchg
rcl
jae
in
xchg
push
lods
add
pop
cltd
xor
dec
push
jns
mov
sub
leave
lret
mov
sbb
popa
sub
xor
jmp
cmc
or
shl
repnz
xor
movsl
imul
out
xchg
ret
lock
xlat
and
xor
mov
dec
or
xchg
pushf
dec
adc
out
sbb
dec
mov
decl
mov
jl
dec
aas
and
inc
lods
flds
and
std
jge
mov
mov
mov
out
xor
jle
mov
in
daa
push
test
jg
out
mov
inc
mov
loope
adc
rorl
add
inc
in
mov
sub
std
ds
jbe
js
lock
insb
add
sti
shlb
sub
rcrb
ja
imul
cli
cli
sub
or
stos
lock
cmpsb
push
jl
jp
xor
rcll
mov
push
adc
cwtl
js
mov
xor
outsb
or
loopne
adc
add
cmpsl
orl
mov
mov
dec
sbb
mov
mov
mov
cmp
in
xchg
imul
lods
xor
ljmp
es
pushf
movsb
movsl
scas
lods
add
mov
pop
repnz
mov
rcr
loop
inc
dec
xchg
jecxz
rorb
push
sbb
inc
loop
cmc
outsl
loop
dec
push
inc
dec
and
adc
cmp
pushf
jl
inc
lock
jmp
mov
in
lcall
addr16
es
repnz
sbb
iret
iret
inc
sbb
push
lcall
sbb
sub
mov
adc
cli
mov
ljmp
in
int
mov
arpl
mov
jp
call
dec
adc
lcall
pop
loopne
divb
das
dec
bnd
mov
jle
popf
outsb
pop
xor
imul
out
jae
aaa
cli
dec
add
es
mov
stc
test
lods
sub
or
push
dec
bound
xchg
lcall
inc
add
sbb
cmp
stc
jnp
out
in
sub
out
dec
sbb
mov
jle
cltd
addr16
and
in
ja
mov
jb
xchg
fcomip
and
mov
cli
arpl
fs
push
in
out
dec
mov
int3
sub
stos
loopne
subb
sahf
shl
divl
daa
popa
insl
cmp
les
call
cmpsb
inc
sbb
into
inc
lods
jo
ret
inc
sbb
fistpll
test
out
pop
inc
dec
lret
faddl
sub
cmp
loopne
lea
jmp
ss
fcmovb
jle
lahf
test
aam
jge
dec
test
adc
push
negl
cmp
into
lods
sub
jne
mov
cltd
jg
xorb
dec
jo
es
jg
cmpsl
cli
into
mov
loopne
xchg
test
sbbb
push
add
xchg
inc
mov
mov
outsl
pop
inc
mov
lock
lds
mov
pop
inc
xchg
movsb
cmc
mov
or
mov
lea
pop
xor
cmp
aaa
popa
das
mov
xchg
cmp
lret
push
mov
lds
adc
sbb
add
pop
sub
stos
cmc
scas
cmc
es
test
jp
jno
fdivrs
jmp
enter
cmpsl
dec
ja
jle
mov
jmp
push
cli
adc
lret
or
pushf
xchg
cmp
xchg
mov
popl
inc
imul
imul
es
xor
sbb
adc
jae
dec
int
pop
xlat
fdivrl
aaa
mov
jo
xor
cs
mov
sbb
add
jle
rolb
xor
rol
sub
push
adc
ja
in
out
or
push
mov
and
mov
sub
mov
insb
or
out
and
fnstsw
or
aaa
fwait
pop
or
xor
push
mov
jecxz
rolb
lods
mov
mov
inc
int3
or
cmp
dec
mov
cmp
dec
mov
mov
dec
cmp
and
pop
adc
outsl
dec
dec
adc
mov
ret
fsubrp
mov
inc
lahf
jo
sbb
clc
dec
adc
mov
cmp
lds
cli
std
or
test
xchg
int3
adc
sbb
sub
mov
or
lret
int
push
adc
jae
xor
pop
pop
loope
repnz
fidivl
push
arpl
inc
pop
xchg
out
push
ss
or
jecxz
fcmovbe
lock
rolb
add
daa
add
jmp
out
insb
mov
imul
add
into
xchg
jmp
cmp
push
div
fwait
pop
pop
arpl
xchg
push
shrl
jp
dec
lcall
dec
push
mov
lahf
add
adc
les
enter
sbbb
popf
in
xor
iret
jae
clc
add
cs
ljmp
dec
xorb
mov
hlt
sar
pop
test
outsb
fiadds
sbb
fcmovb
ret
in
fptan
cmpsb
jp
sub
insb
push
push
das
cmpsl
mov
sarb
push
in
nop
cmpsl
sbb
test
jp
xchg
sahf
dec
xor
mov
sbb
lods
cmpsl
aam
test
mov
scas
out
dec
mov
ja
dec
mov
xchg
or
inc
js
std
jg
sbb
cld
lret
adc
fcomps
pop
sar
es
and
mov
outsl
xlat
sar
push
push
rorl
out
inc
ljmp
mov
or
insb
jecxz
insl
or
cmp
out
inc
popf
daa
lods
xchg
subb
xor
jno
sahf
xor
shrl
popf
adc
hlt
pop
shll
add
sbbb
lock
lods
jae
adcb
and
mov
fistl
ret
bound
or
into
xlat
dec
pop
dec
jnp
fnstcw
int
cmp
lods
add
push
add
call
test
push
cmp
pop
sub
js
andl
fstl
jne
push
lods
mov
out
in
xchg
int
dec
int3
test
fidivs
sub
das
mov
inc
call
add
in
mov
push
inc
bound
roll
xor
dec
rorl
aas
cmc
or
arpl
daa
mov
adc
sar
jae
fistpll
jmp
or
out
pusha
mov
add
sub
and
fs
mov
jne
and
or
push
insb
inc
jns
jp
cmpsb
lods
lea
sub
mov
or
sbb
pop
mov
lods
jbe
sbb
int
sbb
jnp
lret
jmp
or
orb
fcompl
out
jl
inc
cld
adc
fnstsw
aam
iret
mov
sar
xlat
xchg
add
rcrb
mov
inc
jbe
cmp
and
cwtl
inc
mov
stos
mov
dec
xchg
and
test
mov
mov
xchg
call
sti
test
cli
add
dec
js
test
int3
cmpsb
pop
icebp
mov
mov
xchg
mov
les
lret
ret
es
sbb
push
out
cmp
out
fcompl
rcrb
cmp
mov
fdivrs
jmp
add
inc
inc
mov
rcrb
inc
push
int
insb
xor
std
sub
popf
mov
sbbb
dec
cmp
and
fistpl
inc
enter
subl
movsb
mov
testb
sub
in
stos
and
sbb
add
mov
and
push
push
push
dec
testb
xor
adc
adc
sbb
lahf
aam
dec
jle
inc
mov
arpl
dec
addr16
sbb
jb
jge
xchg
inc
adc
subl
xor
call
arpl
aas
xchg
fwait
push
in
test
cmp
xchg
push
aaa
ss
pusha
lods
mov
push
ret
sti
std
rorl
dec
rorl
mov
rorl
adc
andl
in
movsl
cmc
cmpsb
in
pop
cmp
out
push
and
push
lcall
jle
or
insb
pop
mov
movsb
dec
movsb
mov
orb
out
mov
test
lods
ja
andl
cli
sti
pushf
push
div
mov
push
nop
shll
mov
test
cld
mov
pop
xor
mov
pop
gs
pusha
mov
mov
cli
imul
push
fnstsw
mov
movsl
or
adc
loope
imul
loopne
pusha
adc
orb
daa
rcrl
fwait
out
das
sahf
pop
popa
shlb
xor
cmp
loopne
in
mov
repnz
cmpsb
dec
add
push
cmpsl
test
xor
cmp
in
ljmp
dec
cmp
call
lcall
sub
gs
xchg
jle
int3
xchg
imul
jo
sub
movsb
fstpl
or
fidivrl
stc
xchg
out
cmpsb
out
test
inc
or
xor
sbb
or
std
jae
sti
sbb
aaa
dec
mov
imul
insl
sbb
jns
or
loop
clc
adc
xchg
bound
xchg
in
dec
xchg
jecxz
scas
adc
push
dec
test
jg
sbb
cwtl
testb
xlat
iret
call
dec
enter
mov
fst
aam
mov
push
dec
sbb
int
gs
push
shll
arpl
test
shll
mov
jns
xchg
iret
mov
mov
lods
data16
loope
fstpl
inc
testl
cld
jo
ja
xorl
push
inc
addl
or
dec
sbb
pop
out
push
add
divps
jno
sub
mov
les
mov
stos
xchg
adc
push
in
subl
outsb
daa
cmp
loope
aas
sbb
mov
mov
imul
add
scas
rcll
pusha
mov
add
xchg
out
push
add
or
mov
xor
mov
mov
rorb
push
mov
xchg
movsb
lds
sub
lods
dec
arpl
jbe
pop
mov
sbb
js
xor
jmp
xchg
mov
lock
sti
push
das
movsb
adc
mov
push
adc
scas
and
loope
jno
and
adc
jno
add
xor
xor
and
hlt
ret
mov
xchg
out
setbe
dec
pop
lahf
in
add
cli
add
dec
cmc
inc
je
adc
sub
sahf
lret
jle
fdivrp
inc
out
mov
daa
es
adc
inc
in
xchg
sub
pop
mov
cmpsb
mov
or
idivl
inc
inc
in
jg
inc
shl
je
jecxz
popl
sbb
mov
je
or
sub
outsl
scas
pushf
arpl
xor
sub
ljmp
jns
push
push
sbb
cld
stc
lfs
sub
scas
dec
add
pop
sbb
mov
mov
and
aaa
iret
or
mov
adc
add
xor
into
pop
push
lds
inc
xchg
mov
popf
inc
or
xchg
jns
scas
xchg
out
popl
dec
adc
fldt
ds
xchg
cmp
push
ss
sub
orb
fsubl
inc
ds
jge
pop
jge
enter
pop
sbb
leave
movsb
xchg
sbb
lret
or
cmc
ljmp
test
stc
push
and
sub
filds
adcb
push
es
sub
insb
daa
test
clc
sbb
dec
pop
inc
sbb
scas
fimull
insl
shll
xchg
mov
push
jae
cmp
pushf
addr16
mov
les
jl
pushf
sub
fimuls
or
loope
imul
xchg
add
hlt
xchg
adc
jmp
push
jp
lret
cli
adc
lcall
fists
lock
stos
repz
push
sti
insb
dec
scas
add
data16
pusha
out
iret
js
xchg
pop
popf
fcom
xchg
pop
jp
cmpsb
lret
ret
scas
mov
mov
xor
shrl
test
mov
fadds
sub
fwait
andl
es
dec
imul
mov
popa
adcb
push
sahf
jge
stos
inc
clc
das
dec
pop
inc
aaa
fnstcw
dec
movsl
lahf
or
ret
xchg
and
and
test
int
addb
roll
jge
pop
push
es
push
mov
movsl
and
xchg
add
rorl
pop
cmc
adc
inc
and
loopne
fstpt
jmp
popf
movsb
and
sti
pop
push
push
rcll
pop
push
cmp
pop
or
nop
jmp
xor
test
add
lcall
inc
ja
mov
pop
mov
out
jno
fwait
repnz
mov
adc
pop
lds
cs
push
cmp
cltd
cltd
xchg
add
jg
rcrb
loop
subb
or
pop
adc
xchg
or
cwtl
xchg
and
add
in
jg
sub
daa
cmp
mov
cld
js
push
and
xchg
imul
and
cmc
mov
mov
add
movsb
insl
gs
push
jbe
adc
pusha
cli
dec
adc
int
test
cmp
inc
mov
push
into
adc
ret
and
out
fsubp
push
xor
into
inc
jne
push
in
mov
int3
pop
pop
scas
push
jle
pop
xorb
xor
mov
pusha
add
ret
mov
jge
psraw
call
dec
popa
pop
push
and
bound
clc
mov
scas
cmp
cmpsl
fmull
es
or
inc
adcb
in
and
mov
lret
stos
std
inc
mov
mov
enter
mov
sbb
sar
adc
pop
pop
mov
mov
push
cld
xchg
jp
add
add
mov
sbb
xor
lcall
in
mov
jo
inc
stos
sahf
inc
cmp
int3
shll
xor
arpl
push
sbb
test
scas
sbb
inc
js
stc
sub
mov
pop
icebp
adc
mov
mov
cmp
cld
sub
xchg
enter
add
fdivl
inc
fadd
into
sbb
cmp
aam
lods
insb
out
xchg
push
rcrl
xor
xor
sbb
mov
mov
repnz
adc
fcomps
leave
push
or
test
adc
fists
jns
xor
sub
push
shlb
out
sub
mov
mov
popf
push
mov
cli
je
push
xchg
sbb
mul
shrb
std
xor
sub
loopne
push
bswap
xrelease
in
orb
stc
out
or
inc
push
inc
cmp
pop
ret
fs
pop
adc
ds
loope
add
ret
push
sub
stc
cmp
xchg
popf
adc
add
mov
ret
mov
daa
mov
push
jns
icebp
aaa
rol
ja
imul
mov
or
inc
arpl
ja
push
inc
sub
mov
xor
popf
adc
mov
cmpsb
xorb
outsb
dec
inc
popa
iret
lret
mov
cmp
sub
mov
adc
test
mov
mov
shlb
test
in
adc
push
dec
ss
mov
fstpl
and
pop
aad
nop
pop
mov
stc
clc
jb
aam
xor
fs
inc
dec
aam
push
cmp
jno
jns
stos
cld
push
mov
mov
mov
pop
repnz
jle
arpl
inc
test
xchg
int
jg
mov
push
fmull
mov
inc
push
jle
and
imul
or
loope
fnstenv
pop
mov
pusha
push
lahf
sbb
sbb
fldenv
xchg
sub
clc
cwtl
insb
add
mov
sbb
inc
loop
int
adc
addr16
setp
sub
add
js
pop
lcall
addb
stos
xor
sbb
mov
stc
fnsave
sub
add
mov
lcall
popf
inc
cmp
push
jne
jecxz
jg
or
pop
repz
inc
ljmp
dec
aaa
inc
and
cli
outsl
sbb
push
test
push
push
sbb
imul
push
mov
dec
mov
cwtl
push
scas
cmp
cli
iret
cs
adc
es
push
hlt
mov
lret
into
int3
pop
mov
dec
or
les
stos
push
mov
lods
mov
shr
cmc
rorl
xchg
popa
loopne
xchg
imul
subb
ja
or
or
aaa
xor
or
add
sbb
lgdtl
sbb
loope
adc
fdivrs
mov
int
pusha
push
lea
adc
sbb
dec
or
andb
hlt
push
cmpsl
test
dec
fmull
iret
loopne
loope
lret
les
insb
dec
sub
pushf
shr
lret
mov
aaa
fisttpl
mov
test
test
addr16
sub
jns,pt
ficoml
movsb
cmp
ret
xchg
xlat
add
les
jb
das
es
into
inc
aad
insl
mov
jne
sarb
in
imul
lock
xor
call
adc
in
addr16
enter
and
fists
sbb
pop
add
je
mov
rcll
dec
mov
xor
adc
mov
inc
mov
popa
sar
data16
push
insl
ds
mov
pusha
loope
repnz
ds
inc
es
nop
ja
mov
mov
push
clc
ss
mov
inc
and
cli
cmp
push
add
outsb
sbb
repnz
repz
sub
push
mov
icebp
jp
pop
xorl
decb
movsb
cmp
lret
add
sub
enter
out
loop
push
jmp
rclb
ret
jecxz
loopne
mov
mov
popa
mulb
sti
ret
mov
jmp
inc
jns
sub
inc
add
or
incl
aam
xor
negb
hlt
mov
inc
push
cli
add
xchg
push
loopne
int
sbbb
es
cmp
jno
adc
jae
cmpsl
popa
out
mov
mov
or
out
dec
insb
mov
or
jmp
scas
or
xchg
bound
pop
stos
scas
inc
das
nop
test
fstl
push
out
lret
inc
cld
jmp
dec
mov
in
scas
mov
mov
add
fistl
sub
push
les
xchg
mov
sarl
push
cmp
xor
stc
data16
mov
pop
test
enter
mov
jp
sbb
mov
dec
movsb
in
dec
ja
xchg
jnp
mov
jge
mov
mov
fisubs
leave
aaa
adc
inc
ret
mov
mov
mov
cmc
aaa
sub
mov
into
inc
fwait
inc
cli
repz
out
bound
std
mov
jecxz
push
cltd
rcrl
jae
jns
sarl
in
xchg
rcr
js
adc
mov
mulb
jg
mov
and
pop
cmpsl
out
pop
loopne
xor
ds
push
xchg
xor
sub
aas
mov
cmp
push
mov
repz
cmp
sub
jl
sub
or
mov
inc
es
xchg
xorl
out
sub
xor
rolb
pop
lds
xorl
sbb
push
push
loope
mov
addr16
xor
cmpsl
dec
fldcw
adc
test
adc
pushf
mov
xchg
push
mov
cld
adc
pop
sbbb
inc
nop
aad
fstps
mov
shll
ret
in
cmp
idivb
dec
or
and
push
ljmp
jp
jg
push
adc
imul
jle
iret
pop
xchg
sbb
add
mov
add
enter
stc
xor
popf
pop
out
jecxz
cltd
sbb
clc
cltd
pop
dec
mov
popf
test
adc
sbb
pop
inc
sbb
and
mov
jl
mov
out
lret
push
push
push
or
mov
mov
outsl
fbld
lret
enter
xchg
or
push
sub
test
push
hlt
data16
cli
pop
inc
push
stc
cs
int3
dec
lods
cmp
fldl
pop
xchg
ret
mov
outsb
aaa
adc
cli
movsb
inc
das
push
push
adc
mov
pop
sahf
dec
push
mov
adc
add
das
adc
and
or
xor
push
daa
or
jmp
xchg
dec
mov
push
cld
jb
ljmp
loop
inc
ljmp
inc
mov
mov
cmp
mov
lods
and
cmpsb
icebp
push
inc
cmp
fisubs
or
sti
stos
mov
int
pop
push
cli
icebp
xor
lock
rcll
sbb
insb
sarw
pop
stc
sbb
fcmovnb
dec
ffreep
mov
in
fiaddl
xchg
or
pop
push
mov
xor
push
mov
in
sub
mov
movsb
inc
inc
fwait
rcrb
pop
xor
mov
lret
xchg
add
neg
arpl
test
cmpsb
lcall
inc
leave
push
xor
mov
mov
mov
movsl
pop
outsb
mov
and
adc
pushf
repz
sub
inc
cmpsl
lcall
ret
mul
mov
xor
das
push
push
lahf
aad
xor
push
cs
dec
lods
fists
out
adc
lods
cmp
nop
jo
test
iret
sahf
sti
mov
mulb
aam
into
or
and
xchg
int
ret
add
lock
pop
mov
sti
cwtl
scas
cmp
loope
xor
xlat
push
cmp
sub
jge
into
jne
mov
pop
sub
pop
imul
dec
jecxz
sub
sub
jmp
dec
jmp
cmp
movsb
test
mov
pop
push
xor
sub
push
cmpsb
push
enter
dec
leave
dec
enter
add
jns
stc
dec
test
sbb
in
test
bnd
dec
mov
mov
pop
or
out
sbb
movsb
bts
xlat
pop
dec
inc
call
mov
or
inc
jb
repz
fldenv
dec
insb
pop
sbb
das
xchg
out
jno
xchg
and
insl
push
dec
imul
jp
mov
and
push
fwait
out
mov
and
test
mov
cld
aam
std
sub
xlat
out
scas
pop
iret
xchg
xchg
std
fld1
push
xchg
sub
shr
pop
cltd
jmp
mov
fmul
jecxz
jl
add
jbe
les
lret
bound
out
jmp
iret
pushf
mov
mov
cltd
pop
jns
aad
mov
jnp
sbb
adc
sbb
movsb
shl
lcall
sub
and
jnp
xor
dec
inc
and
dec
mov
mov
das
and
cwtl
sub
jbe
ffreep
push
sub
xchg
mov
pop
repnz
les
dec
mov
add
imul
push
and
mov
dec
int
push
dec
in
mov
pop
pop
jmp
and
in
cli
pop
lea
into
xor
loope
push
lret
repnz
mov
add
stos
xor
insl
mov
jno
push
nop
addr16
fidivrs
cli
xor
imul
sbb
sbb
sbb
loopne
add
push
or
in
xor
cltd
pusha
push
in
and
sub
mov
xor
int3
push
xchg
mov
xchg
enter
jmp
pop
out
into
cmpsb
scas
cmp
add
popf
inc
inc
cmp
iret
rolb
shr
add
sub
sbb
orb
add
insb
mull
inc
daa
mov
sbb
es
call
sub
movzbl
in
cmpsl
push
out
cwtl
mov
push
xor
or
cmpsl
popf
ficomps
or
sub
inc
inc
cmp
fwait
xchg
xchg
xor
cmp
adc
and
xchg
or
scas
mov
lret
mov
add
stos
fcomp
xor
push
mov
xchg
xor
cld
fwait
push
mov
jae
pushf
ss
cmpb
xor
stos
out
aas
mov
loop
sbbb
ljmp
lea
dec
clc
cld
lahf
into
shll
fsub
mov
ljmp
insl
pop
lock
cwtl
or
daa
dec
out
dec
stos
dec
mov
hlt
xchg
mov
lahf
cmp
add
addr16
cmpsb
scas
push
repnz
jae
mov
inc
scas
aas
ret
movsl
sub
push
or
pop
icebp
adc
lret
lock
pusha
push
mov
sub
ficoms
push
add
ret
ljmp
push
mov
xor
push
movsb
jmp
ficoms
or
and
mov
add
mov
fwait
lock
adc
add
pop
xor
icebp
push
aam
pusha
jmp
fs
or
test
fisttps
loopne
xor
ja
add
rolb
and
push
out
icebp
fistpl
sbb
test
mov
cmp
cs
fsubs
add
loop
insb
xor
push
cmc
sahf
xchg
je
jg
inc
gs
jmp
and
cmp
rorl
ja
sbb
dec
cmpsl
cmp
mov
jb
dec
pusha
sub
cs
xchg
jae
stc
adc
test
dec
dec
in
sbb
sarl
out
mul
push
mov
xchg
push
out
je
lds
gs
int3
push
dec
cmp
pmovmskb
inc
and
ds
repz
cmp
int
inc
push
inc
push
jg
xor
loope
aad
add
pop
jns
mov
push
jb
mov
out
pushf
std
sbb
or
ja
sub
adc
ja
adc
inc
push
xchg
sbb
jae
leave
insb
xor
inc
sub
std
jne
sbb
loopne
ret
jmp
push
aas
jg
and
jg
dec
bound
cmpsl
pop
mov
ret
or
je
sub
out
ret
add
dec
and
sbb
repnz
xchg
stc
sbb
imul
int3
fwait
pop
adc
jecxz
jbe
add
adc
inc
icebp
dec
or
out
aam
ficompl
sbbb
inc
test
push
inc
fsubrs
sbb
inc
inc
mov
shl
cmp
cmc
push
pop
xchg
dec
dec
test
dec
in
push
add
or
push
inc
orl
inc
add
or
aaa
frstor
out
mov
jecxz
je
or
jmp
pop
cli
xchg
cmc
adc
cwtl
jbe
and
mov
dec
cmp
fwait
push
repz
xchg
and
mov
xchg
fstp
mov
adc
mov
in
roll
push
sub
pusha
out
inc
std
mov
xchg
repnz
gs
ja
jb
cmc
in
mov
pop
lret
fs
gs
aam
sbb
repz
add
movsb
lods
mov
mov
jle
rclb
sub
mov
into
fwait
mov
rorb
into
jb
push
push
ja
cld
adc
xchg
mov
std
adcl
std
test
leave
pop
xchg
mov
inc
or
aad
push
pop
dec
les
push
add
lahf
shrl
mov
lcall
adc
dec
xchg
lret
jbe
sbb
arpl
pop
adc
aaa
sub
imul
xor
and
or
test
cmp
xchg
xor
mov
daa
inc
or
repnz
add
jae
mov
out
mov
sub
jmp
fidivrs
push
pop
clc
arpl
mov
stc
leave
sbb
addr16
mov
ret
hlt
push
cmp
mov
clc
or
sub
int
xchg
inc
pop
test
cld
fnstsw
ja
cmp
jae
iret
add
xchg
lock
adc
adc
or
iret
mov
adc
lds
bound
int3
sbb
jle
push
or
inc
adc
aam
adc
aas
dec
daa
loop
inc
dec
and
xchg
push
call
adc
jl
loopne
into
enter
fisttpll
jge
inc
cmpsl
dec
lret
xor
or
sub
pop
mov
xchg
adc
rorl
in
daa
je
or
lcall
pop
js
insb
pop
mov
xor
sbb
shlb
mov
in
fsubrs
push
push
dec
mov
ja
pusha
mul
jmp
xchg
lahf
dec
dec
xor
mov
mov
lret
push
push
push
mov
shlb
sub
data16
and
jns
add
xchg
inc
and
inc
xor
xor
mov
das
jp
sbb
or
mov
psubw
lahf
fdivl
or
or
mov
stc
pop
not
xchg
cmp
cli
sbb
xchg
pop
mov
pop
or
pop
in
outsb
outsb
push
and
xchg
xorb
mov
dec
mov
test
lods
inc
mov
mov
sbb
mov
pop
imul
out
arpl
fisttps
adc
jns
repz
adc
or
lret
mov
movsb
cwtl
fidivs
inc
xchg
or
outsl
sbb
mov
cmp
add
cmp
cmp
clc
icebp
push
cmp
pop
cmpsb
iret
es
dec
pop
adc
mov
out
pop
mov
push
lret
fsubl
ret
incl
mov
das
out
out
push
dec
faddp
jmp
xchg
lods
les
jne
xor
loopne
adc
sub
xor
jmp
xor
shr
pop
jge
adc
cmp
ret
cmp
in
mov
imulb
dec
fistpl
dec
pop
push
mov
sbb
test
fmulp
pushl
or
stos
ss
and
cmp
adc
jo
sbb
inc
out
in
inc
sbb
sub
call
aad
fistps
stc
fsqrt
test
repz
xchg
jecxz
aad
xor
idivb
shl
lea
scas
xchg
frstor
insl
xchg
fcoms
popa
stos
hlt
pop
es
into
add
pop
lea
dec
ret
lods
fsubs
dec
cmpsl
inc
jp
xor
and
out
mov
into
adc
and
imul
shll
mov
scas
insl
fcoms
sub
into
fwait
in
cmp
loop
or
test
cmp
sar
fwait
sub
push
dec
fisubl
dec
xchg
in
loope
rcrb
stc
test
cmpsb
or
or
leave
add
mov
mov
xchg
xor
and
pop
and
dec
jg
push
xchg
jg
mov
push
mov
push
sbb
mov
mov
dec
orl
addr16
mov
fsubrs
jne
pop
lods
and
cmp
mov
sbb
jb
cld
add
jno
add
mov
icebp
pop
mov
adc
sub
jge
mov
inc
fld
mov
daa
pop
out
jp
xor
push
and
insl
out
arpl
sbb
dec
mov
insb
gs
repnz
stos
lcall
repz
fildll
scas
mov
rol
dec
jmp
jns
test
sbb
cld
xor
mov
arpl
pop
sti
jle
das
neg
jle
sub
push
neg
cmc
dec
jge
push
sbb
icebp
and
jno
jbe
inc
add
das
dec
jg
mov
jmp
pushl
bound
jecxz
dec
loope
aaa
mov
mov
jl
and
lock
inc
xchg
into
ss
fs
popf
testb
call
mov
shlb
enter
pop
popa
div
pop
jmp
arpl
sbb
jge
push
or
pushf
push
fistpll
jl
push
pop
pop
mov
adc
test
mov
xchg
xlat
xorb
sbb
xor
jl
mov
jae
add
shrd
mov
sbb
lds
mov
xor
mov
aaa
gs
jne
jb
pop
ja
lea
push
sarl
mov
xchg
scas
int3
mov
out
loope
mov
add
and
adc
mov
xchg
imul
lods
xchg
xchg
xchg
push
dec
clc
fcomp
cmp
outsb
jae
jecxz
sbb
xlat
sbb
dec
insl
sbb
sub
xor
nop
lock
sub
ret
mov
mov
push
xor
xchg
sub
insl
hlt
gs
fwait
and
ss
repnz
out
or
in
sub
add
cmp
sahf
filds
xor
mov
mov
shr
jae
call
and
clc
ja
inc
fsubs
adc
mov
push
add
in
inc
inc
pop
in
inc
rcrl
into
call
add
aas
imul
aad
xor
loopne
lds
mov
repz
fsubrs
andl
scas
sub
repz
hlt
test
push
sub
pop
aaa
aad
add
jmp
jg
mov
lret
and
push
insb
mov
mov
stos
xchg
arpl
or
mov
or
in
xor
xchg
cli
js
sbb
fwait
cmp
movsb
addb
sbb
dec
mov
and
xchg
pushf
mov
daa
jecxz
inc
dec
movsb
sbb
repnz
push
lahf
push
cmpsl
adc
pop
testl
jecxz
lds
xchg
push
cmp
and
jno
test
mov
dec
aad
sbb
push
xchg
jl
repnz
mov
mov
std
jb
movsl
jb
jl
js
mov
mov
and
or
push
ljmp
mov
cmp
lcall
push
xchg
fdivrl
or
jns
fsubrl
sbb
and
and
mov
stc
imul
or
adc
sbb
push
in
adc
push
das
hlt
call
xchg
ficoms
lods
int
test
daa
push
add
jle
loopne
cmp
xlat
inc
mov
das
push
je
or
and
aas
dec
xor
out
dec
pop
adc
xor
test
aad
or
mov
cli
cmp
mov
pop
xor
inc
nop
repnz
xor
addr16
dec
fidivrs
xor
adc
jecxz
sub
cwtl
xor
cld
add
outsl
push
mov
push
data16
out
xlat
pop
fildll
enter
sbb
or
inc
aad
aas
jle
bound
xlat
inc
xchg
in
loopne
lret
push
adc
pop
jbe
lcall
push
aad
mov
add
test
push
ret
mov
scas
inc
out
andb
sbb
jmp
pop
sub
or
jb
out
or
mov
fstl
out
jmp
cld
addr16
adc
add
push
xor
ret
dec
xlat
jnp
xor
and
loopne
xchg
mov
dec
insb
in
adc
push
fadd
dec
shrl
inc
push
cmp
pushl
inc
xchg
lock
jle
dec
rcrl
fbstp
test
in
xchg
popf
jbe
stos
fistl
pop
cmc
inc
push
xchg
movsb
in
faddl
dec
fpatan
and
test
sub
aas
xchg
xchg
repz
xchg
orb
rol
xor
mov
jb
sub
jg
sbb
jne
fdivs
mov
mov
mov
out
adc
jg
popa
push
int3
pop
inc
clc
cmp
push
pop
mov
scas
out
fcomps
fisttps
imul
inc
aad
pop
ret
sbb
xor
pop
mov
loop
jne
and
loop
rcll
xchg
ljmp
cmpsl
inc
ret
mov
mov
push
pop
repz
mov
lret
je
jecxz
je
mov
xor
inc
mov
jmp
repz
cmp
mov
cmp
pop
sub
paddb
mov
cwtl
add
mov
pop
sub
and
cld
sub
xchg
push
mov
loope
adc
sti
aam
imul
movsl
fadd
movsb
add
ja
mov
loop
mov
mov
mov
jbe
aas
test
jmp
jns
xchg
enter
fdivrl
and
cmpsb
cmp
int3
jae
mov
stos
jb
mov
loopne
das
repz
xor
ret
vsqrtps
pop
sbb
xor
jne
cmp
lea
and
xchg
sub
or
inc
sbb
rorb
lods
stos
ja
cmpsl
ret
xor
scas
adc
lock
sbb
push
aad
rcrb
ds
and
push
sbb
xchg
rolb
jo
dec
sbb
imul
cmp
je
pop
mov
add
test
int3
pushf
call
mov
mov
fs
cmc
notl
lret
aaa
jb
into
mov
jbe
pushf
dec
jne
push
mov
push
inc
push
jb
xor
lock
pop
popa
loopne
jo
es
jecxz
fbld
mov
movl
pop
bound
daa
sbb
sbb
add
cmp
sub
cmpsl
imul
inc
jg
cmpl
or
clc
insl
adc
int
into
pop
sbb
adc
mov
push
xor
dec
and
jl
out
sbb
or
stos
mov
shrb
pop
mov
jo
and
xchg
incl
int
ds
sbb
sbb
dec
cmp
dec
cmp
add
push
and
xor
fwait
adc
in
mov
adc
xchg
rorb
lret
or
push
inc
xchg
cmpsl
loop
push
and
pop
hlt
aas
adcl
loopne
loop
cwtl
mov
and
and
out
pop
and
fs
incb
fadd
iret
jecxz
cmpsb
jl
sbb
aam
cltd
xor
or
jecxz
jo
mov
pop
popf
cmp
or
sub
out
mov
adc
ret
sub
aas
and
fcoms
stos
outsl
data16
mov
aaa
xchg
scas
xor
test
fdiv
mov
out
inc
out
pop
jne
aaa
push
push
test
cmp
sbb
adc
arpl
mov
jb
mov
sti
jmp
and
lock
and
ds
pushf
adc
ficomps
loopne
pop
call
push
mov
in
mov
inc
add
shrl
jo
in
sub
inc
mov
jl
roll
data16
push
xchg
aad
xchg
jo
clc
pusha
xlat
pop
sahf
pop
sahf
mov
fwait
or
ret
mov
xor
mov
ljmp
dec
mov
jne
incb
mov
out
mov
pop
mov
push
outsb
les
dec
sbb
and
add
xchg
test
mov
ret
roll
les
cmpsl
push
das
or
rclb
sbb
ret
lret
scas
out
jmp
jmp
movsl
aam
cmc
movsl
mov
sbb
cmp
loope
adc
xor
and
xchg
in
fcmovnb
or
stos
pop
jp
pop
pushf
cmc
pop
pminub
mov
movsl
aad
xor
outsb
test
push
hlt
addr16
push
pop
addl
loope
cld
mov
out
and
pop
jnp
rorl
mov
xorl
movsb
out
sbbl
jne
mov
lea
rcrb
movsb
and
pop
nop
xchg
cmpsb
pop
mov
push
mov
test
aam
and
push
dec
xor
into
jge
sti
in
pop
push
adc
lods
sbb
les
add
pop
pop
sub
scas
es
out
test
out
mov
movsl
sbb
inc
xchg
ljmp
cmpsl
mov
addr16
dec
lods
mov
cli
push
out
fldt
mov
arpl
roll
loopne
fwait
push
ljmp
mov
mov
dec
push
rorb
pushf
fwait
push
xor
inc
mull
imul
shll
and
lcall
sarb
out
fcomps
lds
rclb
dec
xchg
sysexit
inc
push
jle
xchg
movsb
ficomps
mov
jno
into
xor
xor
add
rcr
loope
adc
fwait
mov
cwtl
in
fidivs
or
and
stos
mov
lret
std
cwtl
lods
nop
rcll
jg
mov
out
adc
mov
lods
rcll
add
arpl
cmp
imul
sahf
cmp
mov
sbb
push
cwtl
jle
lcall
lahf
cmp
inc
hlt
stos
stc
fsubrs
lods
pop
mov
std
shlb
decb
fs
lret
mov
sahf
out
adc
xlat
insl
mov
mov
or
and
or
bnd
test
scas
imull
add
jns
xor
js
push
clc
bound
xor
nop
xor
stc
or
in
popa
pop
shll
push
pop
and
int
inc
aad
add
mov
bound
fsubrl
gs
and
loop
mov
push
mov
arpl
or
cld
aaa
std
inc
in
fisubrl
mov
xlat
ja
stos
push
adc
adc
sub
xchg
dec
mov
jno
push
xor
out
scas
pushf
xor
loop
clc
lret
xor
dec
sub
sub
mov
push
add
psadbw
rcll
mov
cmp
xchg
js
pop
lret
adc
or
rcrb
mov
push
or
aaa
mov
in
rcrb
jnp
test
or
in
mov
pop
pop
lock
stos
leave
mov
mov
or
dec
shlb
scas
dec
inc
push
test
jl
icebp
aas
cmp
sub
pusha
push
mov
jmp
scas
cmc
sbb
mov
push
jbe
jnp
xchg
stos
and
inc
lock
jb
pop
lret
push
gs
lret
icebp
lretw
outsb
mov
sub
jb
dec
aad
adc
int3
repz
out
pop
in
mov
dec
rorl
mov
xchg
mov
xor
or
mov
repz
and
scas
insb
jl
js
fidivrs
stc
inc
test
scas
and
lret
xlat
mov
xor
fsubrp
pop
ds
fstpl
lods
and
push
xlat
xchg
xorl
ret
and
in
clc
pop
xchg
in
inc
cmp
dec
push
psubq
inc
test
popf
sbb
and
setge
pop
mov
sbb
sub
shrl
pusha
in
mov
je
mov
icebp
ficomps
lods
push
xchg
nop
mov
dec
push
add
mov
mov
shlb
test
cltd
mov
bound
adc
or
xchg
fidivrl
int3
hlt
lds
add
pop
sahf
stos
mov
dec
mov
je
mov
sahf
subl
mov
movsb
cmp
gs
flds
push
les
scas
xor
ljmp
test
or
sbb
mov
inc
xchg
sbb
cmp
mov
pop
sahf
mov
imul
repnz
push
adc
lret
pop
movsb
lahf
cmp
push
imul
pop
cld
dec
mov
cmp
outsb
gs
jecxz
test
das
jbe
pop
dec
mov
gs
lds
subl
cmp
popa
sbb
adc
mulb
loope
or
mov
fisubrl
movsb
mov
jecxz
and
xchg
cmpsl
xchg
jge
out
and
lods
ret
or
mov
mov
daa
and
xor
cmp
jp
mov
pop
cli
aas
lret
mov
bound
push
lret
daa
loope
loop
test
out
sarb
fsubrp
test
jo
f2xm1
cld
mov
inc
mov
pop
jmp
cld
jp
push
rcrl
xchg
cmp
xor
scas
repz
addb
mov
andb
push
or
jp
mov
push
inc
jmp
add
dec
push
cmp
int3
movsl
popf
ja
sbb
cmp
pop
sub
aam
sub
push
jg
and
andl
test
jbe
mov
mov
gs
xchg
int
out
jbe
inc
in
daa
add
xor
add
xor
pop
fdivr
sub
xchg
sub
repz
test
pop
pop
mov
add
dec
inc
dec
in
add
adc
pop
xorb
std
adc
jae
loope
and
outsb
jge
std
dec
jo
add
out
mov
inc
mov
and
lahf
cltd
push
inc
mov
xor
lock
scas
push
fcoml
and
rcl
push
mov
xlat
cmp
aaa
add
push
ror
xchg
pop
adc
push
pop
fs
addl
out
imul
imul
int3
mov
cs
movsl
and
push
loop
stc
mov
sti
inc
insb
sahf
xlat
pop
and
loop
fsubl
idivl
lret
mov
xor
sub
jae
jo
fnstcw
xor
add
jmp
leave
fdivrp
lods
jae
repz
test
mov
cwtl
fs
aaa
push
lds
out
adc
mov
je
inc
je
add
lret
sub
mov
mov
nop
xchg
mov
int3
pop
popf
mov
in
pop
arpl
insl
movsb
inc
fisttpll
sbbb
sbb
mov
jmp
mov
or
mov
popa
pop
adc
add
jae
jbe
adcl
inc
sbb
fidivs
xchg
dec
mov
cmp
mov
mov
inc
into
les
push
inc
fcoms
subl
in
mov
dec
adc
js
push
or
sysenter
pop
or
aad
out
pop
daa
push
in
mov
mov
data16
cmovo
sbb
add
xlat
xor
dec
sub
ljmp
xchg
enter
push
jl
mov
dec
inc
xchg
or
mov
out
push
jae
arpl
notb
gs
daa
cmpsl
imul
xchg
or
jae
fcoml
mov
fwait
iret
lock
clc
mov
jecxz
and
icebp
out
adc
mov
movsl
add
sti
nop
das
in
adc
decl
mov
push
adcb
adc
addl
mov
xor
or
test
xchg
inc
sbbb
dec
lea
scas
adc
loop
cld
jg
cmpsb
dec
mov
je
push
mov
orb
jne
mov
stos
or
mov
and
movsb
jmp
mov
shr
mov
mov
fnstenv
outsb
cmp
imul
push
inc
je
stos
cli
out
adc
jl
sub
enter
adc
cmp
xor
inc
andb
sub
ret
cltd
dec
xchg
xchg
cmp
repz
sub
sub
test
or
imul
jp
jae
in
addr16
in
and
sbb
int3
push
loopne
inc
cmp
dec
pop
jo
mov
cmovae
lods
pop
xor
xor
in
sahf
out
jp
icebp
jo
sbb
popf
enter
stos
pusha
pop
shl
and
xchg
pop
nop
jg
insb
inc
push
push
js
xchg
cs
add
jae
and
ffreep
xchg
std
fsub
push
nop
cmc
fisttps
ret
xchg
aam
or
mov
and
pop
add
test
mov
fists
xchg
dec
jo
lock
xor
sbb
mov
mov
lods
push
shrl
gs
push
test
cmp
mov
jns
insb
cmpb
xor
jne
dec
xor
jns
insl
enter
lret
and
addb
mov
mov
adc
sbb
mov
dec
adc
or
lahf
test
mov
push
je
sbb
aam
scas
mov
xor
cmpsb
adc
fstpl
mov
xchg
adc
cmc
and
arpl
pop
dec
push
sbb
add
js
cmp
ror
movsb
xchg
movsl
cs
lcall
dec
call
dec
mov
addr16
push
mov
shrl
mov
mov
adc
xchg
sbb
push
scas
pop
cld
loope
divb
jecxz
push
sub
mov
pop
dec
divl
push
and
icebp
andl
add
les
fwait
add
inc
test
test
mov
in
jb
or
dec
push
and
push
cmpsb
push
push
mov
lea
popf
jo
mov
clc
mov
stos
repz
bound
pop
adc
push
aad
and
or
ret
test
adc
cmp
imul
push
fsubs
stos
jecxz
mov
push
fstpl
in
or
cmpl
loopne
imull
dec
xor
popf
faddl
shll
pop
pusha
popa
addr16
cwtl
cmp
jb
insb
cmp
fmulp
and
inc
vpaddusb
push
in
lret
leave
mov
mov
loop
inc
pop
sub
les
lret
mov
add
and
inc
mov
mov
aam
in
or
xor
cmp
sbb
sub
ja
or
dec
inc
push
pusha
icebp
rcrb
jns
xor
stos
popa
js
in
add
cli
std
push
rclb
or
sub
mov
pop
push
out
adc
adc
mov
icebp
inc
dec
jnp
dec
jecxz
fwait
pop
mov
or
pusha
xchg
roll
mov
mov
loopne
movsl
jge
mov
jl
ljmp
mov
test
faddl
imul
aam
loope
lret
dec
js
not
das
int3
in
pusha
aaa
loop
testl
inc
pop
pushf
mov
and
repz
sub
leave
ss
fwait
fisttpl
out
inc
inc
fisubrs
movsb
or
cmp
and
jl
adc
imul
cli
std
dec
cmp
pop
pusha
enter
mov
add
mov
int
inc
loopne
in
repnz
mov
in
adc
xchg
lcall
cmp
insb
in
jns
lods
inc
xor
outsb
insl
xor
pop
push
enter
movsb
cmpsb
arpl
push
ret
mov
jae
mov
dec
jo
aaa
jg
aam
ja
sub
call
psllq
add
hlt
jp
sti
notb
adc
stos
cmp
sbb
les
imul
jno
mov
movsl
pusha
pop
xchg
mov
dec
xchg
jp
ret
add
mov
sbb
sub
sub
xchg
fbld
leave
and
xchg
imul
mov
xchg
cmpsb
daa
shlb
jp
dec
push
jp
and
popf
mov
mov
rclb
stos
dec
sub
lods
pop
push
push
adc
jo
push
mov
movsl
jb
dec
push
out
inc
mov
cmpsb
nop
push
push
lods
imul
mov
in
mov
movsb
inc
std
push
jb
xor
cmp
jmp
mov
sti
dec
call
cmc
rolb
push
in
xor
jge
adc
mov
cmp
xchg
dec
roll
jo
stos
push
mov
mov
dec
mov
or
mov
insl
dec
pop
sbb
pop
mov
or
iret
push
fwait
ret
call
cmp
aad
in
sti
stos
mov
xor
xor
mov
cltd
sbb
cmc
xchg
mov
jbe
jae
xor
cmc
push
push
ss
mov
not
pop
pusha
xchg
stos
push
data16
mov
push
aad
mov
lods
adc
sarb
testb
mov
fisubrl
test
lds
fisttpl
cmp
push
or
inc
in
hlt
sbb
insl
mov
outsb
pop
daa
test
leave
inc
cmp
rep
xchg
xor
fstps
adc
or
es
sbb
push
mov
scas
imul
sub
sti
dec
ret
mov
mov
sub
push
inc
nop
or
in
xchg
inc
mov
sub
movsb
and
int
sbb
popf
es
xor
dec
cmp
xor
xor
addr16
and
or
inc
mov
loope
push
je
mov
mov
lcall
mov
popa
int3
dec
sbb
rcrl
fimull
sbb
pop
enter
lods
jo
or
hlt
push
aaa
push
pushf
shl
imul
dec
ss
stos
movsb
shlb
push
mov
daa
xor
insl
test
push
shlb
loop
add
xor
std
sub
jl
lds
adc
cmpsl
and
and
dec
push
inc
jmp
mov
lods
cmp
repz
mov
dec
push
inc
and
cmp
jle
and
fnstenv
div
or
arpl
push
sbb
xlat
mov
add
daa
movsb
imul
rorl
call
je
pop
sub
and
sbb
mov
jmp
frstor
xchg
dec
fldcw
lock
adc
sbb
icebp
orl
icebp
cmp
jne
stos
push
and
add
cmp
imul
hlt
cmp
xchg
push
mov
pusha
push
inc
cmp
mov
mov
enter
ficomps
pop
enter
cmp
mov
cmp
xor
jmp
push
es
push
out
je
push
dec
and
and
imul
jbe
push
xor
pop
lds
data16
or
push
lds
fcomps
fnstenv
xor
mov
into
jp
adc
arpl
movsb
aas
rcrb
leave
ljmp
push
push
cli
mov
sub
jl
pop
in
sub
pop
fistpl
aaa
mov
lret
pop
mov
fmul
pop
leave
jg
push
fnstenv
sub
mov
and
mov
xchg
or
push
test
lret
shll
and
xchg
xchg
dec
add
insl
dec
movsl
data16
pushf
or
push
mov
mov
push
loope
xchg
hlt
xchg
xor
inc
pop
insl
test
in
out
fnstenv
cmp
push
add
mov
push
icebp
inc
gs
cld
hlt
pushf
jne
in
xchg
add
push
mov
jne
mov
clc
push
sbb
insb
push
cltd
cltd
push
arpl
clc
inc
push
pop
adc
cs
inc
sub
or
add
push
or
outsb
fists
aas
lahf
cld
mov
shll
dec
arpl
mov
ret
mov
js
daa
mov
push
adc
pop
inc
into
sar
scas
pop
mov
stos
fs
inc
inc
and
repnz
add
sbb
scas
adc
cmp
addr16
or
push
fwait
aam
inc
aas
movaps
lods
in
data16
inc
in
or
adc
inc
pop
pop
add
pop
and
push
hlt
or
cmp
add
mov
push
das
bound
dec
loope
gs
mov
sbb
or
movsl
stos
cs
adc
out
lods
pop
outsl
mov
rcrl
and
rclb
jmp
and
xor
xchg
push
push
sahf
nop
sbb
lock
jnp
or
push
test
jp
insl
pop
je
std
mov
or
sarb
sub
mov
jo
jl
arpl
out
out
bound
loopne
inc
xchg
rolb
adc
shlb
rcr
add
xchg
jecxz
add
jle
dec
sti
out
pop
das
cld
mov
out
es
add
sub
mov
xor
aad
pop
push
sahf
pop
ds
add
pop
cs
out
into
add
inc
es
dec
test
cmp
xchg
inc
ds
fmull
xchg
lds
jmp
mov
ret
call
iret
xor
sbb
dec
lahf
sbb
mov
pop
aad
push
sbb
mov
fildll
mov
and
xchg
add
mov
jge
shrb
int
jecxz
imul
clc
or
test
fsubrs
test
jg
xchg
push
bound
push
jae
inc
jg
sub
jp
dec
mov
sbb
call
loope
dec
lret
and
lods
inc
ja
in
xlat
cld
xlat
cltd
insl
int
and
jns
fs
xlat
aad
push
repz
in
mov
es
mov
xchg
jmp
jb,pn
pop
jo
sahf
cmpxchg
fwait
subb
and
sbb
outsl
jmp
xchg
mov
mov
cmp
les
sti
out
pop
lcall
xchg
dec
outsl
mov
testb
sub
cwtl
pusha
popa
and
xlat
leave
inc
pushf
and
mov
popa
xor
jno
out
push
pushf
adc
fsts
jb
mov
pop
jecxz
shr
mov
sub
mov
xor
out
fcompl
aad
lahf
lds
out
out
jne
negl
or
xchg
stc
push
cld
lock
mov
mov
mov
sbb
leave
dec
or
mov
nop
std
arpl
sub
out
push
jp
lods
dec
lock
icebp
xor
ss
imul
lea
pop
clc
sbb
fwait
push
add
imul
cmp
sahf
fsts
nop
cmp
pop
stc
add
arpl
adc
mov
sbb
mov
inc
mov
mov
leave
cmpsb
sub
xchg
adc
mov
fmuls
loope
xchg
dec
dec
mov
and
addr16
push
mov
jne
jle
push
xchg
clc
mov
adc
pop
stos
add
std
movsl
outsl
and
xchg
sub
imul
mov
push
pop
insb
mov
movsb
xlat
pop
sub
shrl
lret
mov
fstpl
mov
stos
test
push
mov
in
and
inc
sub
scas
lods
sbb
push
sbb
hlt
enter
js
xor
xlat
xor
jge
fwait
push
out
test
movsb
sub
sbbl
push
mov
or
dec
imul
pop
outsb
push
call
jg
fmull
add
adc
scas
and
mov
neg
cli
lcall
add
xchg
pop
ja
mov
fists
pop
sbb
cmp
outsb
int3
icebp
push
xchg
push
push
leave
jns
mov
out
sbb
or
adcl
mov
shll
shl
adc
js
out
mov
pop
push
cmp
dec
push
mov
es
sub
fidivrs
std
mov
mov
sbb
psllw
movsb
or
js
mov
shrl
inc
or
xchg
out
ss
inc
cmp
std
adcb
jns
out
cltd
mov
add
addr16
movsl
loope
dec
mov
fdivl
xchg
xor
mov
push
outsl
pop
iret
dec
xchg
xor
test
pop
and
in
and
mov
sub
in
pop
repz
daa
iret
mov
mov
mov
enter
push
popf
fildl
cmp
stc
mov
imull
ret
out
cmc
push
pop
movsl
add
shl
lret
cs
ja
fidivs
rcl
xlat
test
xchg
es
push
stos
imul
out
sub
out
xor
mov
mov
test
mov
scas
std
push
adc
ret
and
dec
popf
lds
je
ss
ss
sub
or
jbe
xchg
xchg
lahf
or
std
sbb
inc
push
xor
fdivl
mov
cltd
push
imul
cld
xor
pop
xchg
gs
dec
in
cmpsl
fsubrp
xchg
xor
shlb
mov
repz
xlat
push
cmp
cmp
xchg
pop
xor
sub
dec
aaa
cmp
or
mov
xor
loop
gs
mov
inc
imulb
add
adc
test
sbb
cs
rorb
jle
in
mov
and
pop
mov
xor
out
xor
xchg
imull
test
mov
mov
dec
leave
addl
jae
or
cmpsl
mov
mov
sub
inc
aam
xor
or
mov
xchg
push
mov
add
and
ror
std
sub
pop
in
xlat
out
in
pop
jecxz
mov
ret
hlt
sarb
or
jo
cs
xchg
ret
push
fdivrl
test
je
add
sub
mov
dec
sbb
push
push
push
dec
ss
xchg
push
adc
dec
xor
xchg
adc
lret
pop
enter
pop
lahf
dec
bound
ret
pop
testb
adc
loop
add
dec
notb
dec
das
insl
vpshlq
xor
repnz
cmp
mov
enter
mov
lret
mov
jnp
cmp
or
or
xchg
xchg
jns
div
dec
insb
mov
enter
jecxz
dec
jg
scas
aad
mov
cmp
ss
into
push
sub
cmp
jmp
loope
iret
jg
lods
ficomps
xor
jl
xchg
xor
add
or
pop
xor
arpl
xorw
frstor
jnp
loopne
mov
or
cli
test
xor
ror
jl
xor
mov
sti
cwtl
stc
into
lock
repnz
mov
fcoml
cmc
scas
xlat
xor
cmp
xlat
sbb
sub
fdivrs
fnsave
mov
mov
leave
jg
pop
and
shrl
pop
shrl
mov
rcr
mov
je
push
inc
outsl
dec
push
push
repnz
or
gs
lods
pushf
sbb
or
cld
mov
repz
adc
jns
adc
cwtl
loopne
lcall
pop
jmp
rcrb
lahf
sbb
mov
or
jge
xchg
dec
adc
jbe
mov
jl
xchg
cmp
pop
in
aaa
inc
out
call
xchg
xchg
mov
or
in
repz
xchg
fwait
leave
in
insb
mov
imul
xchg
sub
mov
cmp
adc
xchg
sahf
xchg
mov
add
insl
int
fisubs
push
jno
aam
popa
out
int3
ret
sub
cmp
stos
add
out
mov
movsb
loopne
and
xchg
insb
cmc
xchg
sbb
push
insl
loop
stos
test
push
loop
popf
mov
xchg
loopne
adc
and
inc
mov
mov
loopne
sbb
or
lock
dec
out
mov
xchg
cmp
ljmp
xor
jl
jno
fisttps
inc
jg
mov
arpl
push
and
test
enter
sbb
sbb
ds
stos
add
jmp
and
lods
fildl
push
js
insb
adcl
inc
jl
jp
clc
sbb
int
clc
fimuls
jmp
push
stos
pop
mov
xor
stos
adc
bound
push
stc
cs
xor
lods
pop
sub
repnz
xor
mov
idivl
mov
add
xlat
rorl
in
fiadds
push
lcall
imul
and
mov
ret
push
ja
fisttpll
lods
sub
mov
fadds
or
push
or
cltd
pusha
dec
jo
dec
fisttps
push
pop
mov
dec
inc
into
xchg
jl
ret
dec
mov
scas
scas
jecxz
mov
repz
mov
push
not
ljmp
subl
and
mov
inc
mov
mov
mov
adc
push
sbb
add
test
lea
and
mov
add
pop
into
sub
dec
jg
div
dec
cwtl
sub
mov
or
imul
fldenv
ja
pop
lcall
test
mov
xchg
xor
and
cwtl
loopne
je
jbe
jge
cmp
rcrb
hlt
cs
adc
mov
ss
sbb
mov
in
dec
xchg
cli
dec
push
mov
mov
adcl
xchg
inc
push
fwait
iret
add
add
hlt
or
add
push
or
jmp
iret
pop
and
and
lret
gs
dec
out
xchg
sub
mov
add
in
dec
rclb
callw
outsl
loop
jae
pop
inc
cmp
mov
jae
sub
xchg
adcl
cmpl
jmp
adc
leave
sbb
pop
sub
dec
jmp
mov
xchg
bound
jge
shrl
sarb
ffree
decl
pop
sub
push
fildl
push
hlt
sub
push
int
std
jl
cmp
mov
insl
scas
rorl
dec
sbb
push
sti
jle
ficoms
pop
test
push
jb
dec
subb
push
movsb
jne
mov
lea
mov
test
dec
std
add
mov
xor
jle
aad
and
lret
sbb
hlt
testb
or
jle
mov
not
clc
xlat
inc
and
rolb
jno
adc
add
jmp
xchg
fisubrl
fstp
int
adc
mov
xor
dec
mov
std
xor
jle
xor
jae
psubsb
mov
and
push
movsb
pop
cwtl
sbb
lahf
rcrl
xor
mov
ja
call
and
mov
jmp
lds
dec
adc
clc
sbb
cmp
push
xchg
outsb
cmp
mov
idivl
jle
mov
rorl
popa
pusha
movsb
js,pn
adc
mov
cmc
imul
mov
mov
cmp
cmpl
cmp
shrb
inc
adc
xchg
loope
jne
in
sahf
notl
xlat
mov
ror
movsl
outsl
xchg
jno
stos
jmp
adc
sbb
icebp
inc
call
ljmp
mov
sub
icebp
mov
lods
pop
mov
mov
cmp
xor
mov
push
aad
adc
pop
mov
mov
mov
sbb
notl
dec
or
adcl
scas
clc
xor
lods
orps
scas
mov
jecxz
dec
shlb
mov
jnp
call
sub
ret
icebp
push
or
roll
out
fs
fadd
push
push
or
push
cmc
fiadds
xchg
mov
jne
push
gs
adc
shl
pusha
add
cltd
sahf
fimuls
mov
repz
leave
and
test
mov
loopne
bound
pop
gs
outsl
shrb
iret
test
pop
mov
call
scas
dec
push
sbb
dec
add
cmp
push
sub
aam
jbe
or
shlb
stos
mov
adc
xchg
repnz
out
cltd
mov
push
test
shrb
dec
aas
sub
int
loop
inc
ret
outsb
adcb
out
mulb
adc
xchg
push
push
aaa
inc
stos
idivb
fiaddl
lret
and
aaa
cmp
aad
das
cmp
stc
into
mov
add
sti
add
add
sbbb
mov
cmpsl
jg
iret
pop
dec
cltd
mov
mov
push
mov
sbb
sbb
mov
xchg
sti
mov
mov
cmc
adc
les
shlb
sub
cmp
sub
icebp
sub
xchg
pop
xchg
adc
cltd
loopne
jae
fsubl
push
lock
dec
lcall
mov
vandps
fildl
cs
inc
in
add
add
xchg
pop
mov
push
pop
add
lret
je
pop
add
and
push
add
mov
mov
scas
sbb
mov
dec
add
push
cmpsl
rcll
push
scas
and
and
imul
cmpsl
int
jne
push
xchg
mov
adc
push
xchg
sahf
popf
movsb
test
repz
outsl
mov
jne
xchg
mov
inc
pcmpgtd
mov
daa
in
test
sub
dec
push
push
mov
cmp
lds
add
ret
adc
mov
sti
xchg
popa
and
mov
jnp
pop
mov
or
stos
push
scas
mov
dec
mov
mov
add
jae
xchg
jo
or
cmpb
popf
loope
repz
mov
out
aas
pusha
mov
fnstenv
dec
xchg
sbb
sub
add
sub
push
mov
leave
mov
mov
mov
and
push
push
or
fsubrs
lea
sahf
push
mov
mov
aam
or
xchg
xor
sti
sub
aaa
sub
mov
jg
out
fcoms
pop
lret
repnz
andb
mov
shll
xchg
adc
mov
inc
sahf
mov
les
mov
xchg
fwait
xchg
jmp
mov
sti
fisubl
lahf
popa
sub
icebp
pushf
sbb
lahf
and
and
push
call
inc
inc
js
mov
mov
pop
xor
sysexit
in
lea
sbb
dec
inc
ja
aam
ret
cmp
dec
sbb
int
repz
daa
push
push
push
das
dec
enter
insl
leave
ss
data16
jno
cmp
frstor
loopne
data16
mov
inc
mov
in
mov
lock
xor
xchg
jg
dec
addb
or
out
cwtl
in
stc
popa
xchg
jge
jns
jns
enter
test
sub
and
enter
inc
jo
dec
bound
ja
fiaddl
andb
fistl
lods
scas
pop
mov
jecxz
mov
popa
mov
loopne
nop
leave
cmpsl
xchg
xchg
mov
int3
mov
dec
movsl
push
leave
ljmp
adc
xchg
pop
in
xor
aas
subb
lret
dec
idiv
aam
je
clc
and
push
pop
xchg
arpl
dec
inc
jnp
fsubrl
cmp
push
int
xorb
mov
outsb
jnp
cmpsl
dec
push
xor
jno
popf
sarb
pop
jg
push
test
mov
in
adc
mov
xor
mov
adc
aas
sbb
lods
out
adc
add
lahf
outsb
mov
mov
mov
xor
outsb
mov
das
fbld
lret
dec
jns
mov
lea
ret
jns
or
cltd
or
fbld
rcrb
xchg
pop
xchg
xlat
adc
push
add
popf
fmuls
std
mov
xchg
push
lods
into
loope
push
test
pusha
pop
ss
icebp
cmp
fwait
jl
mov
or
push
pop
jo,pn
fs
imul
mov
push
fwait
and
popa
mov
hlt
add
inc
add
outsb
sbbb
mov
roll
repz
add
scas
sub
pop
sub
push
in
xor
pop
int
lods
call
enter
adc
lea
xor
dec
xor
mov
subb
stc
lds
dec
cmp
shl
pop
imulb
lret
adc
insl
imul
lret
stc
mov
sbb
sbb
jo
mov
push
rclb
mov
dec
mov
inc
mov
push
adc
jle
arpl
int3
daa
xchg
adc
or
push
cmp
jne
jle
fcmovb
jb
dec
les
xchg
int3
mov
ret
cs
loop
mov
xlat
das
sahf
lret
add
arpl
mov
adc
movsb
mull
arpl
sbb
and
shrb
inc
push
repnz
dec
sahf
aad
lret
mov
xchg
or
fdivl
test
in
pop
in
cmp
iret
push
cld
push
jg
mov
loopne
cwtl
icebp
iret
xchg
nop
shlb
mov
jbe
loop
adc
dec
std
insb
nop
shll
adc
fld1
pop
sbb
xchg
xlat
shrb
jae
in
or
ret
dec
into
cmp
xchg
or
mov
jne
jns
ret
mov
push
bound
cmp
cmp
out
or
pop
daa
frstor
mov
idiv
inc
int3
rclb
push
adc
in
jg
adc
mov
and
cmp
mov
inc
adc
xchg
gs
push
jp
fistpll
dec
test
push
lret
xor
dec
jg
jmp
mov
pusha
mov
clc
push
xchg
dec
or
mov
mov
cmp
aam
jle
in
mov
loopne
push
sbbb
mov
js
and
lods
or
test
daa
mov
jno
aam
ja
les
movnti
sahf
nop
out
xor
inc
bound
xor
xor
pushf
jle
ds
int
mov
add
dec
sub
xor
stos
hlt
imul
xchg
fsubrl
lods
jbe
pop
push
lret
insb
mov
popf
xor
lds
mov
lea
xchg
sti
loope
outsl
loope
ja
sub
push
sub
mov
pop
into
ljmp
pcmpeqd
sahf
aam
push
inc
push
pop
mov
loopne
pop
add
addl
adc
mov
dec
xor
fidivs
in
lds
popf
mov
test
inc
add
mov
adc
pop
and
adc
pop
pop
adc
mov
cmpsb
push
loopne
mov
jg
cmp
inc
and
insl
fstps
adc
mov
rcll
jae
sbb
sahf
fcompl
test
aas
mov
in
setno
or
adcl
jl
fsub
inc
popf
movsb
sbb
outsb
push
hlt
hlt
add
cmpl
adc
mov
push
repnz
pop
sbb
xor
pushf
pop
call
xorb
addr16
xchg
fists
repnz
sub
rol
mov
jno
scas
push
xchg
push
test
push
fisttpll
cmp
push
push
dec
mov
aam
xor
cmp
loopne
clc
mov
cld
jle
mov
adc
and
popf
addr16
and
inc
and
mov
insb
int
add
scas
jecxz
repnz
inc
lea
mov
mov
adc
jg
jge
add
orb
add
mov
sarb
clc
mov
into
mov
jno
sub
mov
adc
jae
mov
movsl
jns
repz
js
pop
mov
mov
dec
adc
fldt
or
jp
mov
or
lret
out
adc
fmull
es
arpl
xchg
cmpsl
cmpsl
pop
and
inc
xchg
popa
out
fsts
jl
pop
dec
data16
and
or
cmp
nop
jecxz
ret
mov
pop
push
dec
dec
dec
push
xchg
daa
aam
xchg
imul
jl
js
push
cmp
or
mov
lds
sbb
mov
arpl
push
sbb
dec
cwtl
cmp
and
jmp
push
push
fsubl
sti
sahf
aas
pushf
sub
les
or
int
lock
ret
pop
vfrczpd
add
lods
or
divb
adc
popa
jo
mov
das
xchg
test
fdivrs
mov
repnz
xchg
push
insl
scas
js
test
enter
popf
inc
sub
cmp
addb
push
push
cmp
call
cmp
inc
xchg
or
repnz
xchg
mov
lock
nop
xchg
xchg
xchg
fnstenv
add
dec
push
orb
mov
cs
or
mov
cs
mov
out
mov
sbb
cmpsb
clc
pop
outsb
roll
add
mov
test
or
and
lock
jl
mov
ja
frstor
dec
aam
lret
xor
into
pop
push
jge
jge
ret
insb
xor
mov
imul
ffree
fnstcw
leave
out
pop
mov
js
push
fnstsw
inc
fsubr
js
sbb
incb
outsl
iret
mov
negb
xor
mov
sbb
mov
iret
loopne
int
mov
out
jne
mov
pop
push
icebp
sbb
lret
adc
xchg
out
popa
andw
es
ret
jmp
loope
lods
movsb
pop
repz
insb
inc
jg
ljmp
or
dec
scas
inc
in
xchg
rcll
push
sbb
std
sbb
push
mov
or
mov
in
xchg
loopne
mov
es
jp
fstl
push
jnp
nop
jmp
incl
movsb
out
push
sbb
scas
rorb
cmp
mov
and
ret
inc
es
rol
sub
loop
scas
orl
test
push
icebp
sbb
loope
sub
dec
cmc
lret
fsubs
cwtl
sbb
mov
into
mov
jnp
adc
jecxz
lret
stos
roll
leave
stos
cli
cmp
lret
scas
cs
adc
or
adc
mov
fiaddl
roll
and
dec
and
or
or
push
cmp
add
add
or
push
in
mov
jo
outsb
xchg
jmp
and
and
inc
ret
jecxz
sub
sub
out
mov
in
cli
inc
dec
inc
xor
mov
ds
lock
xor
jle
mov
adc
or
or
and
cmp
fs
xorl
sbb
xor
push
cs
xlat
out
pop
out
sbb
pop
and
sbb
test
inc
sahf
jno
dec
cmp
lret
pushf
cli
inc
imull
xchg
rolb
adc
xor
sbb
pop
pop
mov
add
fisubrl
cmp
test
jb
mov
loope
or
pop
popf
mov
imul
jbe
pop
jb
mov
xchg
lret
movsl
adc
xchg
pop
cs
add
mov
xlat
inc
ja
sbbl
mov
jb
cld
xor
fs
jge
sub
fst
mov
lds
mov
in
add
lea
js
mov
add
insl
addr16
push
adc
sub
or
imul
inc
cmp
icebp
cmp
aam
in
js,pn
lods
or
push
and
ret
sub
aad
mov
jo
and
fisubl
stc
cmc
mov
lcall
push
repz
push
sub
ljmp
add
or
pusha
pop
int3
cmovb
sub
js
stos
pop
add
mov
xchg
mov
lds
and
lock
lahf
ss
jecxz
in
xchg
shrb
outsl
push
xchg
xor
mov
shlb
ds
cltd
xchg
push
insl
jge
insb
je
sub
pop
fisttpl
lcall
mov
jmp
or
push
fldl
mov
inc
je
ss
sub
jne
enter
and
fcomip
adc
and
rorb
or
jge
lds
pushf
xchg
inc
repz
fisubrs
ljmp
adc
cmp
cltd
xor
push
fldcw
addr16
mov
sti
movsb
and
add
es
pop
add
inc
mov
sub
in
cmp
lods
lahf
stos
outsl
rclb
clc
xchg
push
mov
pop
cmp
inc
xchg
and
cmp
je
roll
lds
or
outsl
jmp
outsl
cmp
xchg
jns
orb
loop
or
int3
or
xor
or
xchg
adc
shll
mov
rcll
movsl
pop
pop
test
mov
mov
adc
sti
das
adc
dec
lods
rolb
stc
dec
daa
mov
or
lods
cmp
aad
daa
scas
daa
jp
nop
cmpsb
fbstp
or
fs
js
sub
hlt
aaa
sub
inc
hlt
out
test
scas
xchg
dec
jno
push
ss
and
outsl
push
ret
jmp
mov
adc
xchg
jl
aaa
xor
xor
ds
mov
add
pop
int3
pushf
jb
pop
ret
aam
movsb
mov
mov
and
sub
andl
or
pop
cltd
test
nop
insl
add
adc
pop
icebp
adc
push
cmp
pop
jae
rcrb
sub
pop
inc
xchg
xchg
fistpll
data16
xor
and
divl
sbb
aas
pop
xlat
push
fwait
test
jns
mov
adc
xchg
sub
mov
rolb
in
leave
inc
arpl
in
outsl
xchg
call
aas
daa
sbb
jns
or
inc
mov
mov
adc
frstor
mov
mov
cmp
daa
mov
std
sub
inc
pop
add
clc
dec
test
jge
mov
xor
test
lods
cmp
pop
cmp
push
cmpsl
adc
add
xchg
jmp
test
xchg
icebp
jecxz
cld
ja
jo
or
xor
dec
fadd
inc
clc
cmpsl
pop
cwtl
rclb
mov
mov
push
pop
add
jmp
insl
aaa
fs
sarl
outsl
dec
leave
cwtl
dec
or
pop
pop
jg
jecxz
mov
adcl
repz
sahf
push
sbb
rcll
dec
out
test
pop
js
or
push
insl
sbb
jmp
mov
sbb
fildll
test
popf
lret
sub
jae
roll
out
pop
movsl
cli
ficoms
aas
popf
jle
sub
dec
add
scas
ss
cmp
out
std
insl
aas
mov
clc
cmpsb
jge
lods
xor
loope
aad
add
es
sti
sbb
push
test
sbb
test
std
jle
sub
int3
sbb
xchg
inc
xchg
in
mov
push
push
out
add
les
dec
push
int
mov
mov
cld
jnp
add
arpl
loope
inc
pop
in
hlt
push
fsubr
ret
cld
or
dec
pushf
test
lock
xchg
adc
aaa
push
arpl
outsb
xchg
ficoml
cli
mov
out
inc
mov
inc
sti
test
out
jbe
aad
cmp
pop
popa
or
xchg
rclb
lea
cmp
in
and
cs
lods
ss
aaa
out
xor
jp
daa
mov
xchg
test
pop
jle
cmc
push
xor
cli
mov
lds
popf
insl
inc
test
sub
mov
scas
and
fs
outsb
pusha
mov
mov
out
mov
cwtl
gs
xor
pop
scas
mov
and
cmp
in
xlat
cmp
mov
jns
mov
pushf
cmp
mov
xlat
push
mov
pop
out
xor
aam
jne
call
and
cmp
aas
mov
jp
and
sti
xor
ja
mov
sbbl
mov
in
in
shr
sbb
std
cmpb
negl
cmp
mov
es
sahf
add
test
sub
movb
or
pop
xchg
mov
nop
imul
xchg
rol
popf
rorl
call
pop
add
pop
je
test
cmpsb
or
mov
jl
jo
adc
jbe
je
adc
xor
adc
in
test
and
fisttps
push
lcall
or
sub
fidivl
adc
adc
pop
call
mov
std
cmp
pop
in
arpl
test
lret
iret
jp
imul
and
sahf
mov
add
mov
push
ficomps
or
test
mov
add
stos
js
dec
mov
pop
dec
xor
add
int
adc
lds
adc
aaa
cmp
and
xor
adc
cwtl
sysenter
cmp
add
mov
push
lea
lods
push
dec
pop
xor
pop
int
enter
enter
pop
fistpl
fildl
xchg
jo
add
out
xchg
adc
jmp
add
into
negb
sti
outsl
mov
xchg
mov
test
dec
icebp
sbb
cli
sub
sbb
add
mov
nop
mov
jmp
dec
dec
repnz
add
mov
rol
adc
popf
inc
pop
jle
sub
inc
add
aad
dec
ss
in
and
lods
insl
loop
pop
ljmp
idivb
ret
adc
loop
mov
mov
inc
mov
xchg
out
aas
test
stc
pusha
mov
mov
lret
js
lods
adc
or
xor
mov
into
cltd
xor
icebp
rcrb
or
sbb
push
bound
repnz
add
inc
xlat
movsl
jae
pop
ret
notl
add
mov
adcb
sbb
jle
stos
mov
xor
adcb
aaa
xchg
into
jnp
loope
adcl
test
mov
xor
inc
inc
add
leave
mov
pslld
int3
jmp
xchg
sub
mov
lea
test
adc
leave
mov
jmp
das
je
pop
sti
mov
stc
pop
jmp
mov
pop
in
rcrl
popa
lea
repz
xchg
arpl
jg
ds
ja
test
dec
xor
add
pop
mov
sub
adc
push
and
imul
jmp
stc
or
insb
ret
add
jbe
nop
jl
dec
mov
call
jg
loope
js
mov
pop
and
repz
sbb
pop
scas
lret
stc
sti
mov
xor
add
inc
xchg
jns
popa
or
nop
sbb
loope
icebp
jne
out
mov
out
in
cli
das
cwtl
sbb
push
sbb
mov
and
jo
cmp
roll
cmc
out
push
arpl
jecxz
dec
in
sarl
fldt
mov
ficompl
and
inc
dec
mov
clc
inc
ljmp
sbb
shlb
nop
mov
stos
shlb
xlat
inc
push
shll
xor
jo
mov
pop
cmp
movsl
or
pop
movsl
mull
or
inc
test
arpl
jbe
lret
dec
clc
xchg
jne
mov
add
xchg
jg
flds
push
punpckldq
mov
ds
cltd
or
decb
xlat
dec
stos
sbb
mov
imul
jmp
cmp
fcomi
pop
cli
lcall
jge
xor
or
mov
pushf
fimull
or
or
addr16
xchg
mov
jge
mov
orl
out
cmp
pop
lahf
rcrb
sub
lret
out
mov
jno
sbb
test
cmp
and
push
adc
out
out
movsl
jmp
xchg
mov
adc
sub
jecxz
lock
mov
or
pop
mov
inc
pusha
orb
mov
out
int
mulb
jecxz
sub
jns
cmpsl
jle
cmp
jl
cmp
push
fisubs
imul
fcmovnu
add
and
xchg
in
mov
mov
pop
mov
mov
add
jb
lcall
lcall
ret
enter
mov
fistpl
xchg
jae
js
daa
xor
dec
les
pushf
xor
cld
mov
xchg
mov
out
inc
sbb
jp
mov
pop
adc
std
xor
or
test
mov
and
insl
adc
mov
push
lret
or
aas
and
or
mov
loop
sbb
sbb
adcb
pop
imul
xchg
in
or
push
add
add
mov
lret
fnstenv
mov
xor
cmp
mov
mov
adc
mov
popf
mov
cwtl
mov
cltd
jge
pop
dec
pop
loopne,pt
imul
adc
push
jp
test
push
add
sbbl
mov
and
xchg
jecxz
inc
dec
mov
mov
arpl
pop
in
pop
push
fdivr
push
xchg
pop
loopne
in
std
add
fnstcw
cli
inc
mov
popf
add
mov
icebp
out
arpl
inc
sbb
fnsave
and
lret
les
jge
fndisi(8087
or
pop
loop
xor
testb
les
les
or
add
or
dec
insl
clc
mov
push
xorl
add
bound
mov
jp
xchg
sub
movsl
testb
inc
lea
mov
xor
mov
cmp
test
decb
mov
adc
xchg
and
insb
sbb
jmp
lods
push
lods
and
adc
cmp
jae
pop
std
lahf
sub
mulb
inc
mov
inc
outsl
lcall
sbb
popf
sub
mov
adc
sbb
jecxz
inc
pop
push
mov
shll
inc
test
mov
dec
inc
aad
cmp
repz
pop
add
add
xchg
or
outsb
ja
fmuls
je
sub
xchg
sub
xor
aaa
out
mov
and
outsb
jb
mov
enter
aam
mov
cmp
aaa
rclb
mov
ds
inc
adc
and
push
bound
cli
test
adc
mov
jae
or
icebp
xchg
and
dec
fldenv
cmpsl
sbb
orl
mov
adc
sbb
xlat
xchg
cmp
add
xor
nop
pusha
jae
pop
sub
inc
shrl
test
jo
addr16
sar
out
pop
sub
fnstcw
jl
addr16
orl
or
lock
sub
pop
push
adc
movsb
movsb
mov
or
mov
fdiv
xchg
mov
inc
and
int3
lods
popf
adc
and
pop
fdiv
jmp
xor
in
divl
jecxz
push
or
les
int
jecxz
cs
mov
push
sub
jmp
ds
mov
loopne
mov
pop
or
push
cmc
xchg
adc
mov
js
cmp
pop
popa
mov
daa
pop
iret
pop
gs
xchg
movlhps
pop
insb
into
rclb
test
cltd
loope
push
fstpl
pop
pop
pusha
sub
or
and
test
imul
xchg
in
jle
fsub
shlb
arpl
insl
fs
mov
je
dec
bt
mov
jecxz
jno
lods
jb
out
or
xchg
jg
xor
pextrw
adc
mov
inc
ret
adc
mov
int
jb
stc
lea
inc
in
lret
mov
xor
sub
sub
sbb
dec
andl
mov
jae
jne
xchg
aam
shrb
rcl
pusha
fidivrl
inc
or
imul
fstl
xchg
cmp
xlat
movsl
mov
outsl
data16
jnp
in
stos
loop
mov
scas
shlb
and
pop
jno
mov
push
or
push
cmc
xor
cs
and
push
leave
mov
fwait
and
ljmp
outsl
fldenv
inc
adc
scas
push
push
out
stos
cmpsl
mov
outsb
mov
lcall
and
sbb
int3
cmp
sub
mov
push
insl
mov
add
movsl
sub
movl
stc
sub
mov
sub
pop
dec
sub
mov
stos
insl
or
hlt
nop
add
mov
mov
mov
stos
mov
or
scas
inc
jg
rclb
adc
xor
imul
push
jle
popa
call
inc
pcmpeqb
lock
dec
leave
inc
jmp
jbe
jbe
mov
icebp
rcr
insb
push
out
call
fsubrp
sahf
movsb
adc
daa
dec
add
mov
push
lahf
testl
outsb
xor
mov
in
inc
xor
xchg
jbe
adc
push
or
or
in
je
pop
adc
adc
nop
shl
jg
pop
dec
mov
adc
insb
fs
sti
push
jecxz
mov
dec
sbb
xor
enter
sbb
add
jle
pop
push
mov
xor
shll
lret
xchg
sub
idiv
and
sbbl
jl
and
cltd
mov
jg
lcall
or
jmp
cmp
sub
arpl
lea
lods
fwait
loop
mov
mov
mov
cmpsb
cmp
mov
ret
in
xor
ja
jmp
and
jne
loope
and
insb
push
imul
scas
in
mov
out
add
jle
dec
cmpsb
adc
and
xchg
ficompl
das
dec
xor
nop
shll
fdivp
pop
test
xchg
sub
mov
movsl
loopne
idivb
push
in
and
mov
dec
inc
or
jle
and
sub
cmpsb
cmp
rol
jbe
or
orl
insb
mov
adc
addl
insl
jle
mov
neg
xchg
in
in
pushf
insb
xchg
xchg
dec
loop
loop
aam
sti
jg
sarl
mov
sub
inc
clc
cwtl
loop
pop
mov
mov
dec
jnp
out
or
mov
dec
loop
mov
daa
push
push
dec
cwtl
sbb
sahf
test
push
montmul
cmpsb
ret
lcall
aad
add
xor
test
rcrb
xor
xchg
sub
mov
inc
jge
pop
sub
cmpsb
mov
sbb
bound
cltd
in
je
lcall
das
mov
mov
int
and
dec
movsl
test
lret
pop
inc
push
and
mov
add
pushf
mov
outsb
push
jg
ficompl
sub
xor
cmp
or
sbb
fildl
repz
mov
mov
inc
lea
or
call
fsubs
cmc
inc
push
inc
das
fmulp
pop
popa
in
movsb
mov
enter
cld
push
xchg
jmp
and
xchg
xchg
jle
addr16
lret
mov
bound
fidivl
hlt
call
daa
xor
xor
fs
lret
xchg
cmpsl
fisttpl
iret
sbb
repnz
adcb
cmpsl
push
addl
lahf
jmp
xor
fs
xor
push
stos
pop
imul
mov
jmp
pop
xchg
daa
je
sub
mov
popa
inc
jae
fwait
js
sub
rcll
in
and
add
jno
rclb
cwtl
stc
jecxz
ret
xor
rclb
sbb
sub
push
mov
out
imul
je
cmpsl
xlat
fidivrs
nop
fs
cmp
lock
bound
mov
adc
sar
mov
inc
jnp
leave
sbb
mov
pop
mov
pop
in
in
jbe
sbb
sub
dec
lahf
cmp
fldt
add
pop
mov
mov
jb
enter
outsl
sbb
int
aam
std
mov
jns
add
sahf
aas
cmp
imul
sub
mov
ret
push
jle
pop
dec
and
lahf
cwtl
dec
pop
fnstsw
movsb
xor
jo
xchg
leave
and
xor
pop
inc
stos
push
fdivrl
cmp
stos
pop
pushf
jns
inc
pop
cmpsb
cmp
jae
cvtps2pd
jo
cltd
xchg
cmp
jle
pop
mov
or
aam
jg
mov
lret
mov
jo
das
add
mov
and
in
cmpsl
adc
cmp
fcompl
dec
insl
rcll
sub
mov
xor
loopne
dec
nop
ds
xchg
scas
sub
sar
ret
jo
out
fnstsw
pmaddwd
inc
dec
cmpsb
sub
add
or
cli
aad
bnd
mov
or
add
jle
sbb
shl
imul
pop
push
xchg
fimuls
ret
loop
jle
xlat
idivl
sub
cli
and
or
aas
js
xchg
daa
insb
mov
cwtl
mov
inc
mov
or
mov
jne
lea
push
xchg
sahf
stos
je
icebp
adc
and
enter
sbb
pop
cs
arpl
out
fdiv
out
cli
fnstenv
aas
jno
jb
or
jnp
jg
outsl
or
adc
push
sub
sbb
insl
xchg
adc
inc
orl
pop
or
pop
rcl
js
add
ljmp
and
int3
mov
punpckhdq
lahf
and
push
adc
jl
xor
fnsave
sbb
orl
sahf
vpmadcswd
das
sub
sub
fiaddl
cs
into
pop
push
push
sti
pop
decb
xchg
xor
leave
ds
mov
out
rclb
dec
iret
pushl
fcoml
add
filds
mov
jnp
clc
into
xor
pop
mov
or
xchg
ficoms
mov
cltd
xor
xor
imul
dec
mov
mov
sahf
dec
in
push
pop
jl
movsb
inc
pop
cmpl
dec
push
fists
dec
push
rcrb
jl,pn
add
pushf
push
mov
outsb
mov
jg
cld
fdivr
and
mov
inc
pop
xchg
stc
mov
js
or
mov
stos
jmp
sbb
addr16
or
mov
addl
int
out
je
stos
pop
aaa
out
pop
insl
clc
sbb
and
sbb
jae
cmp
xor
icebp
push
js
sar
out
aas
push
jecxz
and
scas
xor
je
ja
jmp
gs
out
pop
mov
mov
sbb
push
movsb
repz
lahf
lods
adc
sbb
fcompl
push
test
lret
repnz
out
stos
or
sbb
pop
pop
sbb
lret
push
ja
inc
imul
rcrl
lret
adc
popf
add
repnz
cmpsb
add
das
hlt
mov
sub
jnp
xchg
stos
mov
mov
push
hlt
lret
push
in
jmp
fisttps
and
mov
sbb
in
mov
cmpsb
fbld
jne
loopne
jecxz
xor
dec
mov
push
mov
jnp
adc
inc
adc
jg
aad
mov
and
std
outsl
mov
sahf
push
aas
movsl
out
xchg
pop
fsubrl
jae
inc
dec
das
enter
mov
dec
cmpsl
shlb
rorb
lret
cmp
rorb
push
je
dec
clc
mov
jb
inc
aad
testl
dec
daa
out
popf
in
and
push
and
pop
push
cmpsl
adc
pop
xchg
arpl
mov
push
dec
pop
push
repnz
int3
lock
mov
jge
sub
mov
adc
mov
sub
lret
xlat
stc
cmpl
ja
cld
or
pushf
mov
shlb
dec
out
pop
pop
mov
ret
jge
imul
filds
lock
leave
ret
cltd
sbb
test
icebp
imul
mov
lcall
xlat
mov
mov
sub
xor
push
popf
or
jmp
lods
aam
jle
inc
pushl
xchg
xor
add
rorl
dec
in
or
js
push
xchg
push
repz
push
movsl
data16
sahf
mov
xorb
and
cmp
pushf
or
jnp
mov
push
shll
into
jno
mov
imul
pop
mov
int
test
fistpll
sahf
repnz
dec
mov
add
xchg
jecxz
xchg
lret
mov
fmull
or
popa
inc
std
mov
cmp
mov
xor
push
sti
nop
mov
xor
lock
clc
mov
leave
fnstenv
pushf
mov
add
adc
dec
andb
lock
xor
fnstsw
sub
inc
jge
int3
test
and
loopne
sbb
sti
adc
adc
enter
jl
scas
and
dec
shlb
cmp
test
cmp
dec
lds
jmp
pop
stos
mov
jae
test
cmp
sbb
inc
push
in
rcrl
pop
sub
loope
ljmp
inc
xchg
shll
pop
roll
mov
push
pop
das
into
cld
ds
xchg
add
std
push
mov
aaa
fs
sub
and
arpl
dec
hlt
push
jae
xor
stc
pop
ljmp
addr16
out
sub
repnz
pop
push
insb
imul
xor
and
stc
out
aas
xchg
hlt
outsb
mov
pusha
mov
mov
fldt
sub
popf
leave
popa
scas
cs
mov
jo
fldt
sbb
sub
test
bound
cld
scas
fisubrl
add
jno
xor
mov
cltd
xor
cmpl
push
loop
jmp
inc
sub
xchg
add
adc
xchg
push
mov
ljmp
aaa
repz
xchg
mov
ds
add
push
sbbl
test
mov
or
outsb
js
inc
cmp
hlt
pop
xor
sub
cmp
mov
pop
dec
icebp
adc
add
aaa
add
loopne
inc
sahf
sbb
hlt
jo
std
clc
movsb
push
daa
push
xor
and
shlb
test
xchg
inc
in
xor
daa
lock
scas
jl
jns
test
mov
lods
xchg
jne
setge
pop
sbb
xor
mov
push
push
sub
das
out
inc
dec
fdivr
test
cmpb
dec
mov
out
sub
cmpsl
pop
lods
adc
out
add
lds
fdivrs
and
pop
mov
in
add
jl
popa
xor
jae
cmp
sub
cmpb
or
les
pop
mov
bound
sbb
dec
lock
sahf
dec
add
mov
jmp
or
cmp
xor
pop
cwtl
fildl
or
dec
shll
stos
insb
fmull
int
aas
cmovge
pop
mov
sub
push
dec
outsl
je
lods
adc
ror
enter
cmpsb
cli
dec
and
mov
pop
cltd
outsb
pushf
int
push
pop
in
inc
dec
dec
pushf
popf
mov
xchg
jmp
jge
sahf
icebp
cmpsb
dec
int3
xchg
icebp
aas
ljmp
mov
aad
or
add
xchg
into
sbb
xchg
adc
test
jno
add
sub
jae
sahf
mov
xchg
sub
inc
into
std
popf
sbb
mov
repnz
adc
adc
jbe
outsb
mov
cmpsb
mov
in
inc
mov
jae
sbb
push
fs
notl
jecxz
pop
mov
mov
jp
je
cmp
fmull
movl
xor
lds
aas
jae
rorb
sub
sti
aaa
jo
mov
cwtl
fcmovne
mov
fnstsw
pop
stos
lret
xchg
test
test
sub
cli
roll
insb
pop
in
xor
lret
xchg
in
out
imul
dec
call
imul
cmpsb
stos
mov
or
inc
sbb
ret
sub
mov
arpl
mov
cli
xchg
mov
cmp
sbb
pop
pop
and
test
adc
jno
jno
clc
std
jg
push
sub
sbb
call
call
mov
or
push
in
popa
sub
cmp
cmpl
push
sub
lea
and
xor
ret
pop
and
dec
lock
outsb
jo
jae
in
scas
xchg
pop
cmp
cmp
popa
fistl
cmp
dec
repnz
out
and
std
vmaxpd
push
jl
bnd
es
and
int
sbb
insl
xlat
icebp
or
mov
push
dec
jno
cs
cmp
cltd
loop
and
push
push
mov
mov
xchg
jecxz
add
mov
ficomps
pop
jno
lods
addb
push
pop
test
cmp
call
cmp
mov
adc
pop
push
mov
cmpsb
icebp
dec
test
lret
mov
cmp
loopne
pop
loopnew
dec
repz
pushw
adcl
outsl
loope
dec
sub
scas
cmp
cmp
mov
and
les
ret
lahf
leave
iret
sub
mov
in
cmp
jle
cmp
cltd
enter
cli
inc
imul
jmp
or
test
sbb
fisubl
iret
popa
push
xchg
and
shl
jb
cmp
adc
in
mov
lds
pop
mulb
ret
mov
dec
cmp
lods
outsb
push
and
fcompl
dec
cld
out
leave
adc
test
mov
stos
jno
test
pop
insb
fwait
imul
or
mov
jae
out
push
jmp
clc
mov
in
fs
ja
mov
lock
repz
testb
push
addb
lods
cld
ret
ljmp
pop
orl
idivl
fsub
add
fsubr
add
or
jmp
daa
mov
movsb
mov
sbb
loope
adc
fsubl
out
cli
setae
ffree
adc
fstpt
aad
int
icebp
fucomi
lods
cmpsl
mov
movsl
insb
scas
sub
lahf
lock
call
adc
mov
sub
xor
or
movsl
jmp
cmp
aad
dec
jae
sbb
push
jo
repnz
cmp
fstps
cmp
notl
add
cmpl
inc
mov
dec
xor
inc
add
pop
outsb
sub
inc
dec
aad
int
insl
aad
repz
mov
add
mov
ja
cs
enter
cmp
push
stc
or
loopne
sti
bnd
cs
sahf
into
sbb
popa
push
xor
push
sbb
push
jae
es
pushf
cmc
add
ljmp
inc
adc
adc
add
sbb
enter
dec
or
ljmp
sub
push
and
fldl
fisubs
stc
pusha
mov
push
arpl
in
ret
xlat
xchg
mov
dec
dec
insl
inc
push
bound
movsl
imul
test
fidivs
or
data16
push
pop
pop
push
cmpsl
leave
pop
mov
cs
aad
jge
cwtl
xchg
pop
sbb
lcall
lret
into
lock
clc
sti
jns
adc
fyl2xp1
cmp
outsb
xor
dec
mov
or
ret
dec
or
push
cli
int3
insb
dec
inc
mov
push
test
dec
jb
xchg
push
adc
mov
xor
or
dec
dec
int3
orl
xchg
xor
jge
pop
jg
in
dec
call
lret
fisubrs
add
mov
or
lret
rolb
push
outsb
sbb
dec
inc
push
jle
insl
mov
sub
sarl
mov
dec
in
cltd
jno
stos
gs
outsl
mov
notl
xor
in
repz
mov
inc
xchg
cmp
ret
pop
sti
lods
cwtl
mov
les
mov
inc
sub
xchg
jecxz
lds
cmp
sti
sub
mov
ret
adc
out
or
imul
mov
xchg
xor
dec
lods
pop
jo
shll
cmp
inc
jl
movsl
jae
cmp
xor
scas
cld
scas
fldl
sti
roll
inc
inc
addr16
cmp
out
cmc
pusha
pop
loop
jp,pt
data16
in
cli
mov
rcrb
popf
jmp
fdivrp
aaa
addb
push
aaa
xchg
test
dec
pusha
inc
push
push
mov
mov
adc
nop
pusha
dec
mov
call
int3
lret
shlb
or
add
dec
jb
xor
rcrb
fs
mov
scas
into
repnz
fcmove
jle
lods
leave
push
mov
sbb
lret
dec
mov
popl
xchg
pop
repnz
pop
fistl
data16
mov
push
jns
loop
push
mov
mov
sub
lock
int
dec
mov
dec
scas
fmuls
rolb
add
jno
lcall
cmp
jbe
pop
or
rolb
test
xchg
jmp
ja
xor
movsl
stos
into
push
xchg
mov
sub
lahf
cmp
adc
gs
fwait
xlat
pop
popl
dec
pop
xchg
cmpl
sub
std
gs
push
xchg
mov
clc
jbe
andl
movsb
in
push
icebp
mov
stos
leave
hlt
add
pop
out
into
popf
push
sub
xchg
int3
je
jns
xor
dec
pop
cmc
imulb
xchg
je
mov
dec
imul
or
icebp
and
xor
sbb
mov
lcall
mov
and
jo
out
xchg
lcall
pop
pop
xor
scas
insb
loope
lret
mov
push
sbbb
and
jae
stos
ret
xlat
inc
insl
sub
cli
pop
jae
jecxz
xchg
sub
js
push
aam
aad
inc
and
jne
or
pop
sub
scas
jmp
jno
mov
mov
or
xchg
and
jle
jge
popa
ds
pop
int
adc
pop
xchg
sahf
adc
out
lds
in
cmpsb
dec
cmp
out
in
hlt
adc
movsl
inc
shlb
mov
insb
xchg
iret
mov
jae
pushf
jb
and
sahf
sub
pop
push
mov
adc
int3
pop
and
loopne
out
mov
fwait
pop
leave
movsl
and
jg
mov
test
jo
shrb
sub
or
out
xor
cltd
dec
call
cltd
xor
movsl
pushf
jmp
mov
dec
and
pop
mov
pop
das
xchg
mov
in
mov
cmp
jns
xor
out
test
sbb
push
dec
cmpsl
fwait
mov
cmp
popf
sar
leave
mov
adc
mov
icebp
cmp
pushf
push
push
pop
in
or
les
in
adc
sbb
push
ret
mov
stos
pushf
cmp
xchg
xchg
rcll
jmp
dec
lahf
repnz
dec
inc
sub
mov
xchg
stos
iret
jno
inc
jo
cmp
push
xchg
push
stos
mov
imul
add
or
cmpsb
push
in
xchg
out
inc
aaa
call
jns
fs
das
and
and
rorl
add
test
inc
cmc
dec
push
add
lods
out
icebp
adc
mov
add
jo
mul
jecxz
rclb
in
jne
adcl
icebp
fnstsw
sub
jge
jge
stc
lock
mov
cmpsl
sbb
xchg
inc
adc
ds
jp
rcll
inc
xlat
mov
or
dec
out
pop
inc
cmp
or
in
pop
in
dec
push
push
enter
ret
mov
stc
jle
jne
xor
daa
out
cltd
lret
adc
jle
sub
pop
or
add
push
imul
inc
imul
cmp
dec
orb
or
sbb
and
jb
repz
cs
aad
jnp
xchg
stc
cmp
xor
pop
dec
jns
mull
fdivs
xchg
dec
sahf
xchg
cmp
loopne
jl
dec
icebp
ja
repz
rclb
data16
data16
push
and
mov
aad
pop
push
mov
xchg
sub
pop
inc
call
push
inc
jle
inc
push
mov
fs
daa
lahf
das
xor
mov
add
and
xor
popa
or
adc
xchg
aaa
inc
mov
pop
negl
jbe
test
jno
lea
and
loop
xchg
les
dec
pop
inc
in
ds
fstl
lret
push
leave
arpl
jns
cwtl
ret
imul
lods
pop
das
js
sbbl
pop
jg
mov
adc
call
push
cld
imul
mov
out
or
cmp
or
mov
imul
cli
jl
arpl
fsub
repz
cld
sbb
es
jge
dec
mov
mov
aas
aad
add
loope
and
add
inc
in
push
push
in
popf
xor
adc
jbe
pop
ficoml
xor
cmp
stos
popa
mov
js
daa
into
inc
jb
jecxz
jns
jge
jg
and
mov
fsts
sub
daa
in
int3
ss
and
dec
lock
sbb
ret
mov
aaa
adc
jg
roll
cmp
add
vfnmsub213sd
cld
jbe
test
insl
movsb
sub
mov
mov
fildll
mov
int
cmp
jae
sbb
fmull
lods
faddl
xchg
sub
cld
ror
sbb
mov
sub
cmpsb
lret
stos
mov
movsl
in
pop
aas
dec
push
test
popa
lret
andb
loop
mov
hlt
fdivrs
cmp
xchg
in
out
in
aad
in
jmp
jne
lods
in
adc
add
pop
stc
sbb
push
push
jg
or
out
out
push
jo
int3
push
xor
xlat
outsl
inc
inc
lods
mov
lods
int
bound
sbbb
imul
vxorps
rorl
cld
adc
and
leave
adc
ficompl
fildl
jo
sub
sub
sbb
rolb
push
jg
call
xchg
jle
xor
fiadds
inc
or
jg
jecxz
push
leave
mov
cmp
stos
mov
jbe
xor
fldcw
xchg
icebp
stos
mov
mov
inc
imull
icebp
aas
loope
in
rcrb
xchg
out
cltd
je
ljmp
shll
sub
add
sbb
cmc
jno
jnp
or
mov
popf
inc
ja
pop
fildll
shl
inc
popf
add
loope
stos
lahf
fcompl
or
iret
hlt
inc
mov
add
push
fwait
sbb
xor
or
fs
nopl
mov
jne
mov
mov
cmpsb
push
pop
data16
sbb
cltd
lsl
jns
sub
loopne
add
lret
mov
xor
aad
add
outsb
mov
xor
jne
xor
push
dec
hlt
stos
jbe
pushf
add
adc
imul
push
es
xorb
ljmp
jmp
lock
cmpsl
or
fstl
inc
mov
test
and
popa
scas
out
je
in
daa
insb
push
shl
stos
insl
fsub
push
push
std
loopne
in
cld
and
lods
jl
mov
test
push
push
lcall
mov
mov
xor
lock
mov
dec
xor
mov
dec
dec
xor
pop
out
add
mov
mov
cmp
test
fsubs
test
xor
or
jns
mov
xchg
jne
add
xchg
xchg
pop
addr16
xchg
test
mov
mov
inc
imul
ljmp
mov
adc
and
iret
movsl
loop
jne
test
bound
mov
cmc
andl
sbb
push
jo
fisttpl
shll
push
sbb
out
add
repz
adc
mov
rcll
sbb
repnz
icebp
xchg
inc
and
cmpsb
stos
cltd
xchg
adc
sbb
jo
push
cmp
cltd
cmc
sbb
int
negb
stos
sub
and
dec
orl
flds
out
lahf
cmp
jb
pop
inc
dec
add
mov
imul
xchg
inc
aad
sbb
push
add
test
jecxz
and
cmc
ror
hlt
gs
xchg
xchg
mov
mov
loop
jne
je
out
mov
dec
pop
in
hlt
xor
lcall
inc
stos
mov
imul
xchg
inc
es
jge
shr
sti
inc
ljmp
insb
pop
xor
das
xor
mov
lahf
jl
adc
adc
clc
cmp
movsl
outsb
fistpl
inc
fsubl
mov
test
adc
shrl
fstpl
js
fwait
cltd
mov
inc
sbb
ret
ret
jmp
insl
add
out
and
lods
inc
pop
orl
sub
hlt
inc
jo
xchg
ds
inc
fmuls
in
lcall
rolb
adc
out
call
dec
lods
pop
mov
stos
lods
adc
add
cmp
sub
sarl
test
pop
ja
in
push
inc
xor
xchg
dec
cmp
loope
sbb
jp
inc
fcomps
test
ja
jo
imul
or
jo
mov
add
cmp
push
mov
mov
pop
rcll
push
dec
fs
jnp
ret
adc
int3
hlt
mov
in
jbe
xor
mov
test
cmc
in
push
int
scas
ret
push
adc
and
insb
or
in
mov
push
push
cmp
mov
daa
lea
insl
pop
roll
mov
sbb
les
mov
push
jmp
insl
int3
out
mov
inc
pop
xchg
sub
cmpb
inc
mov
pop
mov
add
fidivs
rcll
sub
mov
xor
lahf
rolb
push
pop
out
jecxz
int
stos
popf
push
es
inc
mov
xchg
add
pusha
xor
movsl
out
sbb
outsl
cmpsl
movsl
roll
xchg
into
jp
leave
push
pop
jmp
push
xor
adc
pop
test
adc
scas
fcom
and
push
pushf
stc
test
jg
ljmp
scas
add
in
out
sbb
sarb
adc
sbb
jmp
std
call
pop
push
sbb
shrl
push
lret
or
sbbb
ja
dec
adc
xchg
movsb
clc
mov
hlt
mov
nop
xor
rol
xlat
add
xchg
xchg
inc
pop
jmp
sbb
xchg
test
movsl
and
mov
daa
push
add
push
jne
xchg
gs
dec
inc
mov
inc
jb
dec
aad
mov
jle
ret
adcb
mov
popf
lods
lock
and
cli
jmp
pop
aam
sbb
xchg
dec
jo
or
lock
fdivrs
mov
pusha
xor
faddl
mov
aaa
hlt
pop
mov
sub
loopne
cmp
mov
pop
adc
dec
xchg
mov
sti
loope
fistl
sub
popf
pop
xchg
xlat
mov
ret
pop
dec
dec
pusha
cmp
mov
mov
mov
xchg
add
mulb
push
inc
call
insb
dec
out
ret
sbb
fidivrs
movsb
fnsetpm(287
jecxz
push
add
lock
cmc
fmull
in
popa
hlt
jns
add
outsl
jo
jecxz
aad
ss
out
push
loop
pusha
sbb
movsl
add
xchg
cmp
cmp
notb
je
lcall
pop
lods
xchg
inc
stc
jle
ret
cmpsb
scas
or
add
notb
ja
xlat
roll
cmp
imul
pushl
lret
js
ja
mov
ja
js
adc
add
lahf
movsl
push
sbb
jb
sti
ja
pop
out
aas
loopne
push
dec
push
pop
xchg
loop
aam
pop
jnp
mov
das
popa
shrl
xchg
xchg
je
pop
dec
push
mov
stos
addr16
dec
dec
aas
xchg
xchg
pop
pop
push
xor
fdivrs
push
icebp
and
shll
rcrl
cmpl
or
test
jg
mov
sbb
flds
ficoms
mov
stos
jb
mov
pop
add
test
push
sbb
add
sub
in
aam
jne
test
out
jb
fwait
mov
pusha
mov
shrl
loope
cs
cli
fimuls
popf
mov
cmpsl
inc
es
call
das
jmp
pushf
lahf
addr16
xchg
dec
pop
pop
je
push
jmp
jb
jmp
xor
shll
movb
jl
pop
push
xchg
int
or
xor
rcll
dec
sbb
cmp
shrb
push
sbbl
xor
popf
inc
mov
sbb
mov
xchg
nop
jns
jbe
in
add
loope
in
inc
xor
adc
mov
xchg
add
inc
nopl
aaa
dec
lods
fstps
xchg
movsb
adc
sbb
je
push
xor
add
jns
outsb
adc
stos
mov
mov
push
mov
movsl
pop
cmp
lea
adc
dec
push
push
sbb
xchg
mov
jmp
daa
mov
jb
aad
fnstenv
pop
loopne
fildll
jmp
pop
data16
lods
or
jg
ja
add
cwtl
pop
push
jmp
dec
divl
or
xor
and
cmc
dec
cmp
push
dec
mov
inc
xlat
aad
ds
jo
jecxz
and
scas
xchg
and
sbb
orb
out
cmp
xchg
add
inc
add
jg
sub
inc
or
js
movsb
sti
adc
shlb
xchg
push
xor
mov
pop
mov
mov
fwait
and
sub
nopl
mov
jo
adc
test
lret
cwtl
push
dec
jle
test
and
jge
das
pop
adcb
pop
xor
pop
das
cmp
scas
mov
imul
inc
push
js
sahf
xchg
xchg
cmp
insl
xchg
mov
cmpsl
gs
orb
out
or
push
push
cli
gs
mov
mov
pop
rolb
inc
leave
sbb
in
loop
les
sbb
lret
sbb
mov
sbb
jmp
pusha
loope
xchg
mov
notl
ret
or
or
adc
jecxz
cltd
add
xchg
test
push
cmp
xchg
xor
cmp
cmp
shr
test
adc
dec
in
add
push
jmp
sbb
or
jne
inc
lret
dec
in
sbb
dec
gs
data16
push
lret
jp
sahf
xchg
jne
cli
fs
imul
not
jp
inc
inc
cltd
pop
rol
push
leave
fisttps
pop
sub
lret
out
insl
xor
jb
jnp
insl
and
jl
loope
movsb
lods
dec
jge
scas
inc
push
ficoms
dec
fsubs
jno
popf
pop
nop
xchg
pop
pop
test
adc
fs
sbb
testb
adc
lods
pop
insb
aaa
xlat
sub
sub
ljmp
mov
mov
xorb
jnp
xchg
inc
mov
out
das
jmp
mov
mov
movsl
and
cmp
aam
adc
pop
jl
cmp
lret
mov
mov
pop
aaa
sbb
lret
out
mov
adc
ds
jae
jl
pop
mov
test
jo
cli
push
xchg
jecxz
push
sub
mov
sub
aad
nop
jae
nop
fisubs
lfs
dec
roll
cli
out
int
mov
or
adc
sbb
aaa
imul
xchg
rcl
test
int
inc
jp
mov
ret
dec
mov
iret
insl
xor
cmp
dec
sbb
popa
add
movsb
insl
jo
loopne
push
sbb
sti
test
cmpb
sbb
je
and
repnz
mov
push
out
jg
mov
mov
mov
xor
scas
sub
mov
jbe
pop
xchg
push
loope
mov
jb
mov
and
adc
and
fcomps
inc
pushf
xchg
mov
daa
jl
mov
mov
loop
mov
mov
repz
rcrb
adc
lea
xlat
imul
dec
xchg
pop
cli
cmpsl
out
adc
int3
mov
imul
push
push
inc
pop
xlat
shll
jg
aad
fstl
push
sub
xor
xchg
or
push
pop
jg
fists
mov
ficomps
ljmp
hlt
lcall
cmp
vpshaq
sti
xchg
mov
cs
js
dec
cmc
mov
test
inc
xor
adc
xchg
aas
cmpsb
pop
test
sub
xor
test
pop
repnz
decb
add
loop
lahf
std
sbb
or
scas
sahf
cmp
fwait
and
jle
lret
fcmovb
pop
jmp
and
mov
jne
loopne
and
repz
mov
daa
add
mov
mov
sbb
cmp
lods
mov
test
js
mov
xchg
adc
pop
or
xchg
ja
jle
lock
popf
test
aam
cmp
orl
push
jp
xchg
add
adc
jb
pop
dec
and
xchg
popa
punpckhbw
in
adc
cltd
test
in
push
dec
dec
mov
cs
add
ss
mov
jbe,pn
sbb
xor
mov
mov
mov
enter
ss
clc
cmp
cli
jge
jbe
into
pop
or
sbb
mov
scas
and
test
xchg
int
pop
rorl
insl
push
jmp
outsb
jno
out
fwait
mov
scas
out
jp
mov
pushl
mov
pusha
fdivr
sub
mov
push
cmp
pop
out
fsubl
xchg
push
sahf
mov
ja
gs
pop
repnz
and
jns
in
fdiv
repz
icebp
inc
xchg
add
test
cmp
div
pop
out
lahf
dec
popf
icebp
fistl
lahf
repnz
lea
dec
add
sbb
nop
fdivrl
dec
xchg
push
out
dec
add
lahf
or
mov
xorl
sbb
insb
sbb
mov
pop
lcall
loope
fistl
scas
sbbl
stos
pop
imul
mov
push
push
aaa
nop
sub
add
cwtl
pop
iret
sub
std
dec
movups
in
scas
dec
mov
jb
push
dec
outsb
in
fwait
jl
push
sbb
repz
imul
cmp
ret
or
pop
enter
mov
lds
addr16
fs
mov
jp
push
std
cmp
sub
inc
icebp
cmc
jge,pn
clc
lahf
add
aas
jle
and
dec
inc
test
fdivrs
jno
push
or
lea
mov
and
data16
add
adc
push
int
jle
js
leave
jg
mov
and
cwtl
sbb
jno
outsl
dec
and
dec
or
mov
enter
in
inc
out
loopne
lcall
xor
pop
in
ljmp
sub
dec
or
sbb
push
and
adc
jb
std
lret
xor
and
pop
lods
clc
mov
xchg
movsb
imull
pop
jle
popf
lock
loope
lcall
jo
add
xchg
xor
adc
str
das
dec
pop
add
dec
mov
loope
push
xchg
or
cmp
scas
lret
fistps
fisttpll
lods
mov
cmp
shrl
sbb
inc
lret
or
and
dec
xor
jmp
test
adc
sbb
jl
dec
cmpsl
mov
pop
and
cmp
adc
xor
sbb
int
rcrl
pop
testl
inc
insb
in
loop
and
sar
in
push
sub
addl
jo
pop
int3
dec
shrb
fxch
inc
push
inc
sbb
adc
jns
sbb
jl
xchg
xor
orb
outsl
jno
xchg
es
cmp
sti
enter
rcl
imul
add
adc
mov
icebp
pop
mov
imul
ret
js
jge
outsl
pop
movb
add
loopne
loopne
cmpsb
jecxz
jg
jecxz
and
push
jb
into
sahf
hlt
mov
jo
dec
xchg
pop
adc
sbb
xor
fcmovu
xor
mov
or
and
xchg
scas
cmp
xchg
adcb
sub
out
loope
pop
xchg
bndstx
cli
shlb
inc
fcmovnb
and
test
sbb
je
int3
outsb
jecxz
hlt
aaa
outsb
adc
dec
push
cli
fnstenv
sub
leave
push
enter
dec
mov
add
sbb
outsl
jmp
adc
in
enter
enter
and
mov
insb
iret
add
mov
sbb
push
push
mov
loopne
dec
cmp
popa
xor
in
sahf
and
dec
mov
mov
jg
push
xchg
call
dec
mov
fcoms
lea
add
dec
xchg
cmp
jns
scas
leave
push
sbb
shll
xchg
pushl
jmp
aam
xor
stos
inc
out
cltd
lcall
cmp
cmp
mov
jno
cmp
pop
fistpl
movl
jge
sahf
in
ret
mov
lret
loop
add
ret
and
and
push
fucomi
sub
pop
mov
setnp
movl
mov
sub
aaa
mov
xchg
mov
push
sti
sahf
mov
aaa
mov
adc
in
sbbb
mov
shll
ds
ljmp
fstps
mov
lcall
sbb
inc
or
push
in
push
xor
in
andb
fistpl
enter
inc
jle
pop
rcrl
or
xchg
sub
mov
dec
es
cmp
add
mov
fadd
imul
inc
test
cmc
mov
jge
dec
jne
movsb
push
cmp
test
je
push
loope
and
lcall
call
xchg
mov
ljmp
dec
inc
xor
lahf
mov
add
mov
sbb
ret
mov
jp
mov
test
lods
ret
jecxz
pusha
rcrb
fwait
mov
mov
xchg
jmp
or
pushf
jbe
cltd
bswap
negl
inc
add
call
mov
jo
leave
and
cmc
add
es
adc
out
in
je
jns
push
sub
fldenv
sub
ljmp
daa
xchg
push
push
orb
mov
nop
stos
daa
mov
je
gs
pop
or
jns
ret
jle
mov
rcrb
xor
push
cmpsb
or
fmull
xor
lret
inc
lods
and
add
int3
inc
gs
sahf
mov
fcoms
xor
ss
mov
call
adc
imul
popf
xchg
mov
mov
xlat
in
dec
fldcw
mov
add
mov
add
mov
dec
adc
and
cmpsl
mov
cmp
in
fisubs
push
mov
push
or
pop
xchg
or
pusha
mov
and
sub
fisttps
xchg
pusha
or
lea
add
adc
popf
add
insl
or
sub
shll
scas
lods
ss
fs
ja
rorb
jbe
and
jl
fnsave
inc
adc
sbb
ss
outsl
jecxz
sub
mov
divl
jno
cmpsb
push
int3
and
mov
into
mov
aas
sti
push
and
sbb
insb
jb
incb
les
push
clc
add
cli
insl
xchg
mov
ljmp
mov
jns
loopne
mov
outsl
inc
push
adc
cmp
dec
ret
inc
sbb
pop
sub
aam
cs
je
jb
repz
movsl
cltd
or
mov
pop
xchg
inc
jbe
cmp
subb
andl
fistl
mov
jae
xor
lahf
xchg
cmp
xor
mov
mov
xchg
mov
xchg
or
fisubrl
test
or
push
bound
pusha
jno
out
inc
fcmovne
out
mov
xchg
movsb
xchg
mov
pop
mov
outsb
or
mov
sub
out
dec
dec
test
or
cmpsl
fldz
sbb
int
xchg
movsb
loopne
loopne
outsb
cltd
sbbl
adc
enter
jmp
and
pusha
fisubs
ret
fsubrl
pop
add
out
sbb
fisttpl
test
sbb
mov
push
es
and
cltd
sahf
inc
pop
icebp
add
pop
mov
dec
adc
push
fidivrs
stos
xor
mov
adc
test
dec
inc
mov
test
jbe
pushf
inc
int3
gs
sbb
pop
sbb
mov
xchg
push
loope
mov
and
dec
addb
in
fbld
enter
jmp
adc
scas
les
and
mov
lea
xorl
xorb
data16
pushf
or
xor
push
pop
xchg
lret
in
fimull
je
mov
pusha
mov
ja
and
pop
mov
das
pop
fistl
repz
inc
inc
dec
test
sbb
pop
lret
jae
jnp
sbb
mov
fcmovbe
mov
fistpl
mov
loope
hlt
call
fnstsw
or
xchg
iret
cmp
pop
jbe
cs
call
sbb
popf
bound
aad
mov
iret
mov
fcomi
call
and
repnz
mov
lret
push
ds
popf
sti
sahf
push
int
pop
subl
xchg
in
aaa
scas
mov
int3
mov
in
stos
mov
ljmp
sbb
lds
push
push
cwtl
fmull
or
fwait
repz
rcl
out
sti
add
sbb
and
jns
aad
in
add
lret
and
xchg
jns
inc
mov
outsb
fwait
decb
push
addb
sbb
popa
adc
in
idiv
fisttpl
sbb
sub
xchg
dec
stos
pop
jge
and
movsl
scas
andl
ret
shll
push
mov
pop
cmp
inc
fldl
lcall
mov
or
push
mov
clc
call
rorb
xor
ja
push
mov
and
xor
jmp
cwtl
mov
pop
inc
jge
ja
rol
hlt
hlt
push
xchg
cmp
jne
pop
push
sub
xor
push
out
inc
cmc
sub
aad
mov
jae
out
ret
insl
xor
fsubrl
mov
pop
cwtl
cwtl
fldcw
stos
in
mov
sub
sti
loope
sbb
push
dec
xor
imul
subb
imul
jns
fldt
adc
testl
rcll
rclb
push
and
push
shr
aaa
in
roll
sbb
mov
ret
pop
sbb
ss
cmp
fwait
pushl
push
xchg
shll
or
or
cltd
lahf
test
in
ds
xor
pop
inc
stos
popl
dec
ds
fisubs
xlat
stos
inc
test
cmp
jp
adc
outsl
ds
idivb
mov
outsl
cmpsl
lock
jo
jg
test
cld
sbb
lods
xor
or
fdiv
jmp
fadd
test
test
or
bswap
and
int
iret
add
sarb
inc
push
mov
xor
rclb
and
fsubs
clc
test
mov
xor
xor
sbb
and
unpcklps
ret
sbb
adc
mov
dec
add
jnp
add
mov
xchg
cld
daa
and
xchg
leave
and
into
or
add
add
arpl
pop
pop
cmpsb
lods
and
packssdw
pop
sar
mov
je
mov
loop
inc
xorb
sahf
mov
movsl
push
insb
jmp
mov
mov
int3
push
or
pop
call
or
push
push
out
xchg
fildll
mov
fisttpl
mov
aas
cmc
mov
test
rcrl
mov
jns
push
cmp
dec
push
add
push
fmul
mov
sbb
ljmp
lock
mov
dec
jb
or
cwtl
adc
fdivrs
lock
mov
ror
subb
mov
inc
sahf
push
jns
dec
dec
push
add
dec
int
sub
jno
lock
repz
sub
outsb
mov
sbb
push
mov
jbe
mov
test
xchg
mov
push
sub
sti
outsl
push
cwtl
stc
lock
int
andb
mov
test
sbb
arpl
xchg
sbb
mov
cmp
int
dec
adc
cmp
mov
mov
insl
xlat
sbb
and
loope
subb
sbb
push
mov
mov
ficoms
pop
add
int3
rcr
movsb
and
pop
or
je
push
mov
cs
out
push
loope
les
pop
lods
jl
push
jg
aaa
xchg
cmp
and
pop
jecxz
daa
sbb
mov
push
loope
dec
dec
mov
add
je
test
cmp
push
lret
sub
mov
pop
jno
leave
scas
ljmp
cmp
mov
imul
sbb
push
in
xor
hlt
negl
sbb
mov
inc
cmc
xchg
ret
jle
shll
clc
int
push
shlb
movb
inc
rorb
inc
insb
outsb
or
lret
fst
insl
jg
imul
mov
mov
lcall
mov
push
mov
xor
and
mov
ret
sbb
mov
sbb
inc
sbb
mov
push
loope
push
mov
push
mov
dec
pushf
lods
or
xor
jns
in
xchg
sti
pushf
cmp
pop
push
daa
incb
sub
mov
daa
mov
ljmp
fisubl
inc
scas
inc
repz
dec
mov
sub
fstpt
test
scas
sbb
sbb
sbb
add
nop
out
jge
jle
das
imul
popl
mov
cmp
dec
xor
jmp
loope
movb
add
dec
jno
adcb
bnd
jno
stos
aas
push
dec
push
mov
fcomip
jae,pn
adc
stos
lret
and
dec
std
fdiv
jb
lds
push
aam
mov
mov
push
push
xor
cwtl
mov
push
mov
xchg
sbb
fnstenv
fldenv
sub
shr
sbb
cltd
ret
mov
add
ja
mov
lcall
lock
outsb
into
ljmp
pusha
enter
cmp
or
inc
dec
in
sub
adc
mov
sub
lods
push
movsb
in
in
cmp
jne
repnz
sub
cmc
xor
ja
clc
ret
pop
das
out
mov
outsb
insb
mov
fxch
add
push
aam
mov
pushf
jo
lahf
sub
adc
ds
add
test
cmp
out
xchg
or
mov
jno
jecxz
push
add
mov
xchg
mov
sbb
insb
inc
jl
test
sbb
mov
dec
xchg
jmp
sbb
movsb
jecxz
scas
shrl
roll
ret
mov
sti
sti
subb
pop
mov
ljmp
inc
lcall
pop
cmp
xor
jp
xchg
cmpsl
mov
pop
ret
pop
call
fdivrl
leave
mov
dec
inc
and
sbb
pop
in
lea
lods
roll
mov
mull
cmpb
je
nop
addb
mov
je
jne
dec
jne
cmp
incl
push
inc
in
mov
jns
aaa
lock
outsl
push
or
pop
ret
jmp
dec
dec
inc
in
mov
cld
pop
minps
ficoms
je
js
mov
xchg
nop
mov
sbb
fs
cmp
and
xchg
es
andl
jne
push
pop
pop
shll
or
mov
es
jno
push
pushw
ja
sub
xchg
pop
loop
push
daa
mov
push
lret
sub
jne
or
xchg
or
into
jbe
sarb
insl
movsb
inc
push
aad
mov
int
lds
enter
lcall
push
xchg
jns
push
sub
test
cmpsl
in
adc
jb
dec
pop
test
stos
and
out
sbb
mov
add
jno
xor
pop
mov
popa
cltd
lret
jne
push
aam
jecxz
sub
cmp
and
mov
ss
test
pop
data16
shll
inc
lret
cmp
loop
repz
mov
outsb
dec
mov
mov
cwtl
mov
imul
ljmp
mov
cs
aam
push
add
testl
push
and
add
jb
dec
loopne
lock
shlb
xchg
scas
fstps
aas
mov
repz
add
enter
mov
xchg
xor
dec
mov
mov
and
or
loope
aad
lret
js
lods
fs
push
or
mov
insl
dec
out
es
adc
dec
cmp
mov
aad
sbb
scas
sub
xor
into
out
lret
ljmp
xor
mov
int3
pusha
std
nop
mov
fistpll
pop
pop
fldl
lods
mov
mov
jnp
push
push
outsl
stos
adc
xor
push
test
jbe
cmp
inc
in
lahf
call
xor
and
js
and
xchg
idivl
xor
stos
insl
bound
add
jo
mov
cmp
push
xor
fbstp
aas
xor
mov
outsb
jbe
add
shrl
push
jmp
out
in
jo
cmp
cwtl
and
and
xchg
mov
cmpsb
in
jle
orl
cmp
cmpsb
aad
enter
cmpb
imul
out
add
loop
sbb
or
enter
inc
stc
xchg
cs
add
lret
xchg
xchg
jmp
cmpsb
add
les
call
lods
and
repnz
add
sbb
enter
fisttps
add
jp
pop
sub
jne
out
movb
pop
movsb
xlat
call
gs
jno
cmpsb
mov
pushf
mov
jecxz
jns
sbb
mov
mov
and
ret
jo
push
inc
xchg
cltd
sbb
jg
or
push
pop
inc
loope
xchg
cmc
fistpll
xor
mov
jae
mov
pop
xlat
and
mov
mov
push
push
xor
test
pop
shl
xchg
movsb
push
mov
leave
test
and
out
or
pop
pop
pop
inc
xchg
dec
sub
cmp
jb
test
stos
dec
and
xlat
sbb
ja
xchg
add
jo
aad
mov
add
call
xchg
test
dec
push
adc
and
or
bound
mul
add
cld
sbb
adc
lods
or
insl
pop
or
mov
mov
xchg
fwait
in
std
or
frstor
pop
or
xor
arpl
test
sub
mov
sbb
mov
sub
xor
xor
mov
data16
add
add
lret
int
xor
cmp
cmc
mov
ja
enter
repnz
cwtd
into
xchg
push
sbb
xchg
jl
push
jp
jo
push
daa
nop
roll
daa
mov
fldcw
inc
jbe
push
or
push
fwait
mov
xor
int
lcall
mov
addl
cmp
sarl
stc
sahf
int3
sub
mov
movsb
push
mov
test
and
neg
jmp
dec
sub
pushf
mov
mov
mov
test
xchg
stos
fstp
adc
aaa
push
adc
mov
daa
jno
sub
fsubrl
inc
out
mov
addb
mov
cmc
test
lret
out
js
fcoms
inc
cli
pop
jecxz
pop
into
push
add
xchg
insl
dec
or
out
sarb
insb
or
out
mov
inc
aad
pop
lods
loope
lods
sti
movsb
cld
jno
cmp
lds
push
in
lock
xlat
stos
enter
loop
xchg
push
cmp
fisubrl
mov
push
in
in
mov
cmp
mov
les
cmp
xor
xchg
xchg
cmpsl
sbb
push
out
ret
jge
ret
movsl
jge
mov
jp
ss
mov
out
loop
xchg
mov
xlat
scas
cmp
pop
sub
jp
ret
out
bound
or
pop
nop
adc
test
xchg
dec
mov
push
imul
ja
mov
push
insl
jb
xor
sbb
pop
lcall
gs
add
mov
jbe
and
mov
test
cld
movsl
adc
rclb
xchg
or
mov
insl
sbb
movlps
hlt
adc
add
enter
inc
test
cs
leave
and
or
add
adc
cmpsl
dec
xor
out
add
push
cmc
jns
jp
paddq
ss
pop
mov
leave
push
dec
jb
or
inc
adc
mov
jne
mov
dec
xchg
cmp
or
in
sub
in
dec
mov
outsl
or
decl
mov
fdivrs
in
pop
adc
mov
cltd
mov
mov
push
cmp
std
adc
pushf
stos
or
sub
rcrb
cmp
test
je
stc
xor
lds
insb
push
imul
push
pop
call
mov
outsb
inc
out
js
lods
or
inc
es
gs
leave
aas
insl
aas
pop
cmpsb
cmc
lret
xchg
int
jb
shr
lods
aaa
cwtl
leave
xor
loope
push
ss
inc
mov
lods
shl
adc
insb
mov
into
ss
mov
aas
lock
add
or
mov
jg
or
pop
cwtl
push
push
pop
inc
nop
gs
sbb
repnz
aad
movsb
or
cmp
jno,pn
mov
add
pop
pop
pop
icebp
ret
or
fwait
and
test
bound
xchg
inc
jecxz
mov
sbb
inc
imul
das
or
or
push
pop
mov
jmp
or
xchg
and
gs
push
push
adc
inc
push
sbb
aas
nop
hlt
cmp
mov
das
sbb
lahf
rcll
and
ja
xchg
or
sub
shll
inc
jae
iret
gs
or
lods
aad
outsb
les
jl
cmova
invd
js
jbe
aas
out
and
out
ljmp
pop
lcall
mov
xor
data16
push
mov
pop
and
fstpl
das
das
xor
je
lret
pop
movsb
or
movsl
rcll
lods
dec
je
inc
mov
push
out
mov
push
stc
je
mov
jb
push
movsb
sbb
imul
es
xlat
adc
sbb
mov
inc
xchg
xchg
lods
in
roll
pop
mov
sbbl
sbb
shl
push
adc
add
pop
bound
es
push
pop
aas
or
or
setp
out
lods
into
fiaddl
loop
mov
add
test
dec
mov
push
int3
sti
mov
or
pop
ja
outsb
addr16
mov
je
clc
push
lods
arpl
adc
xchg
jno
cld
add
mov
push
clc
out
ret
nop
gs
and
mov
je
lret
jbe
mov
fsubr
fimuls
and
xchg
mov
or
psubb
fnstsw
out
scas
inc
push
jg
cmp
xchg
fidivrl
out
adc
incl
mov
cld
xor
add
jns
add
repnz
ja
xchg
test
das
xor
mov
or
mov
les
out
in
cs
clc
loop
ret
mov
push
rcrb
pop
sub
mov
sbb
imul
les
dec
push
gs
movsl
xchg
jecxz
adc
andb
imul
mov
fnstcw
add
add
lret
push
mov
clc
xchg
inc
jecxz
add
std
nop
mov
scas
sbb
inc
add
jne
shll
sub
or
mov
bound
mov
mov
mov
sub
fwait
outsb
imul
or
mov
jmp
or
mov
adc
push
push
insb
xchg
add
scas
lock
cmp
mov
add
fistps
or
lcall
mov
in
xor
pop
sbb
imul
mov
outsb
pushf
insl
xchg
jne
iret
or
les
cmovo
repnz
or
adc
out
rcll
ficompl
xchg
pop
push
insb
or
jo
int3
test
imul
xor
rcr
jnp
into
push
xlat
or
out
mov
into
cmp
adc
sti
push
mov
dec
sub
or
pop
sub
push
fdiv
mov
cld
push
out
nopl
or
cmp
xor
jp
adc
repz
stc
and
mov
or
cmp
cs
test
xchg
cmpsl
pop
xchg
dec
mov
mov
adc
insl
mov
faddp
and
pushf
mov
addr16
mov
cmp
jo
or
nop
out
sub
inc
ret
rclb
ret
jnp
inc
sbb
pop
mov
adc
in
mov
jecxz
dec
arpl
loopne
cltd
xlat
imul
cmc
jb
and
addr16
faddl
cmp
dec
cmc
test
jbe
mov
enter
and
mov
and
cmp
mov
bnd
mov
jae
mov
jne
movsl
ret
out
lcall
jmp
sub
es
sbb
cmc
cmp
push
xchg
outsb
jl
or
pop
in
punpckldq
fiadds
ret
int
js
push
nop
sahf
or
sahf
mov
js
ds
xchg
pop
cwtl
and
add
push
mov
popf
movsb
scas
pop
in
test
loopne
cwtl
inc
fidivl
aad
mov
popa
push
repz
add
add
cmp
pop
xor
jmp
mov
xchg
push
jno
or
repz
sbb
jb
fsubr
jp
enter
adc
jl
mov
cmp
or
aaa
mov
or
xor
jo
and
nop
outsl
adcl
push
push
jmp
sub
movsb
push
pushf
push
xor
stos
push
mov
adc
push
xchg
and
stos
mov
lds
pop
xchg
int3
fisubrl
or
daa
lock
mov
push
cwtl
ljmp
and
fstpt
mov
out
xor
mov
xchg
xchg
test
cmp
push
ret
adc
jne
sti
orb
or
daa
fyl2xp1
jno
pushf
push
mov
cmp
divb
addr16
pop
orl
push
dec
dec
mov
ds
add
lds
movsl
xchg
mov
xchg
or
or
or
push
lods
cmpsb
out
sub
xchg
mov
fdivrl
insl
pop
popf
or
lret
xchg
lcall
mov
push
int
repz
ficoml
or
mov
test
nop
into
shll
movsl
inc
pop
pop
sbb
dec
push
dec
stc
in
popf
test
int3
lret
adc
push
push
test
xchg
int
and
mov
vmovsd
jns
fnstsw
ja
cmp
dec
movsb
into
imul
xchg
cltd
push
xchg
pushf
jbe
or
mov
stos
repnz
jp
inc
push
sbb
pop
xchg
repnz
je
nop
dec
fwait
outsl
in
add
loop
subl
gs
cmpsl
inc
std
and
pop
mov
out
fnsave
jno
dec
sub
popl
repnz
stos
mov
mov
adc
shrl
mov
enter
insl
cld
push
sbb
pop
jge
mov
fidivrs
jnp
xchg
fsubr
adc
xchg
ljmp
xor
xchg
jecxz
daa
mov
pop
aam
xchg
add
xchg
shlb
ja
stc
add
mov
dec
pop
insl
mov
adc
js
cli
adc
push
mov
lahf
and
mov
push
push
push
cmp
sbbb
fists
xor
rcl
enter
cmc
push
dec
cmpsl
addr16
addl
inc
mov
xor
mov
inc
cmp
mov
test
pop
cwtl
and
push
jg
fadd
and
inc
pushf
pop
push
imul
into
mov
into
arpl
jbe
jnp
divl
outsb
hlt
fimull
push
ret
adc
loope
test
lods
sbb
adc
push
sbb
sub
jge
imul
push
inc
push
mov
cmc
jb
xchg
mov
rorl
or
idivl
jmp
adc
popf
ja
jmp
gs
mov
mov
or
bound
imul
popf
sbb
dec
sbb
dec
adc
sub
xchg
xlat
jge
push
cwtl
ds
mov
pop
add
pusha
dec
sub
pop
push
in
mov
adc
cld
enter
cmpsb
cmp
push
cmp
andl
ja
inc
inc
mov
ret
push
std
xor
pop
rcll
stc
dec
mov
push
sbb
xor
push
lcall
stos
pop
inc
scas
xchg
repz
sbb
or
mov
fildll
pusha
pop
notb
out
sbb
dec
mov
and
imul
jns
push
arpl
sbb
mov
jno
sbbb
mov
sahf
ret
jmp
pop
addr16
mov
pop
cmp
xor
call
scas
int3
xchg
lahf
jb
fmull
adc
movsb
or
popf
xlat
mov
or
adc
push
arpl
fbld
cmpsb
insb
mov
stos
ret
jle
cmpb
out
xor
inc
and
push
jns
sub
aad
mov
out
movsb
push
addr16
and
jbe
mov
test
xor
mov
imul
cmpsl
pop
pushf
push
icebp
jo
push
in
sub
rclb
rol
sbb
and
sub
xchg
add
sbb
and
jp
push
xchg
sbb
add
test
or
cld
pop
sub
clc
add
mov
mov
pop
dec
adc
push
notb
sub
sub
std
mov
stos
dec
ja
xor
pop
inc
lret
repz
sbbl
dec
call
aam
sbb
xor
jmp
les
mull
test
mov
sarl
popa
mov
mull
mov
jbe
dec
sbb
inc
adc
negl
insb
inc
adc
adc
mov
jo
loopne
movsb
xor
cmpsb
pop
and
adc
cwtl
in
clc
xor
jns
mov
push
cmpl
fcoms
aam
hlt
mov
js
sub
daa
and
xor
pop
fs
push
stos
pop
pop
outsb
mov
jo
pop
lret
fstpt
xchg
aas
mov
inc
or
addb
outsl
xchg
xchg
in
lahf
pop
pop
xchg
xor
and
xor
stc
adc
fadd
cmp
test
dec
cmp
in
call
and
ss
xchg
fidivs
mov
xor
and
inc
sbb
and
push
ret
mov
jmp
lret
and
test
icebp
add
arpl
aam
push
mov
inc
xor
xor
jo
inc
mov
mov
add
arpl
pop
mov
mov
adc
fcmovne
inc
mov
or
stos
rorl
jae
mov
cmc
ds
sbb
pop
add
dec
inc
jo
movb
ja
lahf
scas
mov
xlat
shrb
cmp
push
ret
jmp
mov
push
mov
dec
mov
adc
rcl
flds
imul
icebp
cli
cld
jae
shl
idivl
fldenv
mov
iret
dec
lods
sbb
cmp
dec
in
xlat
adc
cmp
inc
scas
sub
outsl
xchg
popf
or
lcall
pop
das
das
push
cmp
inc
out
leave
mulb
out
mov
sub
cld
or
fcoms
test
inc
int
pop
cmp
pushf
in
pop
std
lds
notl
and
divl
mov
cmp
mov
int3
lods
cmpl
mov
lret
add
mov
xchg
or
jmp
mov
and
add
pop
in
xlat
mov
test
push
in
or
cld
lcall
push
xchg
lods
mov
pop
xchg
sbb
repnz
mov
xor
out
insl
shr
mov
xor
xor
je
loopne
rcrb
js
and
jmp
pop
mov
test
push
ret
sub
popf
sbbl
cwtl
xchg
iret
push
mov
pushf
rcrb
xchg
push
push
lret
imul
jg
xchg
test
mov
fimuls
cltd
jo
push
and
jp
inc
aas
xchg
push
sahf
lock
adc
int3
stos
xor
in
icebp
ret
cltd
es
dec
mov
mov
push
es
push
loope
cltd
mov
sub
dec
call
and
push
and
sbb
in
adc
ret
or
outsb
repnz
sbb
shlb
jp
sub
loop
lea
add
xor
out
jl
xor
fs
sub
loope
ret
popf
lahf
and
hlt
xchg
add
dec
cmp
mov
imul
push
in
push
int
inc
aaa
mov
or
popf
xchg
xor
rclb
sahf
push
lret
sti
aas
or
dec
repnz
outsb
push
mov
sub
sub
jo
sbb
ret
inc
jl
fcompl
jne
push
adc
dec
flds
or
insl
addr16
dec
jnp
mov
mov
testl
adc
adc
ja
imul
jl
jno
gs
out
mov
cltd
lret
fcomip
clc
adc
inc
mov
gs
ficoms
ljmp
mov
xor
int3
cmp
sbb
enter
cwtl
mov
mov
cwtl
xor
and
cmpsb
sbb
mov
push
or
pushf
jmp
push
aam
outsl
test
xor
pop
lds
and
dec
xchg
sahf
mov
or
mov
pop
lods
sub
sbb
imul
xor
out
iret
ret
jmp
and
daa
mov
loop
inc
sub
stos
jg
add
cwtl
push
mov
jle
ret
js
cmp
mov
add
cmp
jne
or
inc
jmp
jnp
add
insb
in
cltd
sub
jge
mov
mov
lahf
in
push
dec
lret
or
jg
jno
insl
dec
push
cmpl
sub
inc
pop
xchg
mov
add
add
jg
loope
mov
xor
inc
fs
lahf
ja
inc
push
pop
lods
ss
add
jle
mov
sub
ljmp
xor
movsl
ja
mov
xor
stc
mov
jmp
adc
cmpsb
in
push
mov
push
je
cmpsl
fs
mov
shlb
dec
je
lods
push
mov
xor
lea
jge
icebp
cmp
lcall
sbb
shl
mov
popa
sbb
lahf
pop
arpl
je
movsb
pop
pusha
xchg
mov
mov
or
sbb
jle
xchg
inc
fucomp
hlt
das
pop
outsb
cld
adc
jo
sbb
sbb
mov
addl
xchg
in
leave
in
push
push
pusha
fstpl
fcmovbe
mov
jb
mov
mov
enter
iret
cmp
mov
mov
rorb
inc
out
cs
and
fdivrl
cltd
lahf
jl
cmpsl
pop
xor
cld
arpl
imul
decl
dec
xchg
loop
movsl
xchg
es
es
adc
mov
sub
cmp
xor
add
mov
push
cltd
loope
and
lock
mov
mov
add
test
xchg
pop
jecxz
inc
mov
sarb
aaa
adc
test
mov
dec
jecxz
inc
shll
xor
push
dec
push
sar
mov
mov
jno
jle
jl
subb
add
pop
push
ret
inc
call
xchg
int3
xor
jl
scas
pop
mov
movsl
scas
xor
outsb
aad
and
scas
cwtl
cs
and
mov
loope
ffreep
icebp
lret
dec
adc
mov
fstpt
int3
pop
loopne
ret
pop
sub
xchg
xchg
notl
fldcw
cli
mov
ja
roll
cli
lcall
xchg
cmp
or
mov
xchg
ret
loopne
dec
sub
fildl
jl
out
pusha
xchg
mov
xchg
ds
xor
add
dec
outsb
lds
out
mov
repz
lods
mov
adc
xchg
and
aad
out
scas
sbb
ret
jp
fadds
addb
add
or
jno
jge
sbb
idivb
sub
ljmp
in
rol
sbb
ds
xchg
js
xchg
loope
adc
mov
sarb
roll
dec
sub
subl
dec
adcl
add
negb
jnp
mov
lock
loope
sbbb
or
mov
cmc
mov
jnp
pop
shrb
xorl
lods
pop
lods
pop
enter
pop
in
or
mov
sti
sbb
xor
push
scas
pop
inc
testl
aam
insl
gs
push
or
xor
xchg
cmc
mov
scas
stos
push
dec
mov
lahf
add
sbb
dec
cs
pop
cmp
push
dec
adc
loope
and
call
in
pop
jle
and
fiadds
mov
jmp
pushf
push
loopne
xchg
out
push
js
and
inc
add
mov
aaa
lahf
jae
mov
cmp
cli
mov
sarl
cli
and
xor
cli
jp
xor
hlt
jp
add
mov
pop
out
inc
hlt
loopne
shrb
loope
jae
ds
bound
stos
adc
out
jp
dec
sub
push
nop
xor
jg
xchg
das
shlb
mov
mov
jae
xchg
mov
in
out
inc
or
lds
gs
jno
sbb
popfw
and
ja
xchg
mov
mov
mov
or
test
lea
mov
jmp
lret
inc
iret
sarb
out
mov
das
es
addb
fsubrl
loopne
pop
hlt
ljmp
sar
insb
mov
nop
fwait
test
pop
cmc
push
lock
ljmp
inc
bound
cli
push
inc
lret
leave
lds
lret
hlt
sbb
call
lret
int
aam
mov
clc
outsb
adc
std
test
or
jge
pop
adc
arpl
ljmp
sub
or
dec
or
and
xchg
cmp
rcrl
pop
insb
popa
rorl
adc
push
idivb
and
lret
adc
jb
mov
cwtl
inc
iret
shlb
xchg
sbb
pop
stc
cmp
sub
xchg
in
aam
inc
lods
cmp
out
mov
mov
jp
aaa
imul
outsb
pop
iret
inc
hlt
adc
push
mov
add
fcoms
scas
mov
cs
jno
enter
loop
mov
jno
jle
push
or
and
xor
dec
mov
stos
push
outsb
outsl
int3
xchg
inc
imul
add
mov
or
xor
int
shl
and
loopne
pusha
mov
int3
sbb
mov
sti
or
enter
addb
rcr
js
lea
insl
mov
fcomi
in
pushf
cmpsl
out
out
jge
repz
inc
test
xor
mov
xchg
aaa
ret
pusha
aad
leave
imul
pop
cmpl
nop
movsb
xchg
and
inc
mov
sub
and
aad
cmpsb
xor
push
test
mov
pop
scas
pop
scas
and
stos
or
push
xchg
mov
mov
and
scas
imul
sbb
mov
adc
dec
mov
int
pop
mov
xchg
test
xchg
leave
notb
add
ss
maxps
shrb
cwtl
test
in
mov
enter
add
or
js
dec
fwait
inc
cmpsl
scas
hlt
jle
mov
shrl
xor
jl
fcmovne
repnz
cltd
aam
addr16
inc
hlt
pushf
int
add
xacquire
push
or
out
or
lea
jle
push
test
das
dec
cmp
pop
lods
or
sahf
fsubrl
cmp
push
jno
xlat
ljmp
mov
filds
pop
sub
testl
stc
insb
push
daa
xchg
imul
sub
hlt
or
or
roll
xchg
std
lods
jb
add
pusha
ss
push
lds
pop
mov
sbb
insl
nop
sbb
cld
sahf
add
and
xchg
arpl
push
lods
cmpsb
mov
hlt
xor
cmpsl
add
add
fcmovnb
fidivrl
add
pop
pop
xchg
pop
les
enter
adc
pop
mov
lcall
out
or
xchg
push
jle
hlt
cmpsb
cltd
ret
and
fdivs
jle
cmp
xor
mov
adc
fucomip
out
lret
sbb
mov
hlt
sbb
fwait
mov
sbb
cli
shl
aam
sti
popf
cmp
mov
repz
mov
dec
popf
push
fwait
push
data16
mov
test
jno
or
sub
mov
add
mov
inc
pop
xor
pop
leave
jl
pop
push
out
hlt
movsl
aaa
lock
punpcklbw
cmp
jmp
cmp
dec
ja
lods
mov
mov
sbb
xchg
mov
inc
xchg
pop
rorl
iret
lods
addr16
lods
test
loopne
mov
dec
sub
mov
mov
cmp
or
bound
pop
jbe
pop
jne
insb
adc
sbb
and
call
jbe
add
cs
adc
inc
hlt
or
jl
cmpsb
push
or
cmp
sbb
jle
xchg
pop
push
ret
loope
add
adcl
icebp
pushf
pusha
scas
shlb
adcl
add
and
in
mov
sub
sbbb
mov
mov
out
mov
or
std
adc
adc
adc
cmp
xor
loopne
fcmovu
pop
lock
aad
mov
repz
popf
dec
push
jno
cltd
pop
sub
fs
gs
pop
subl
jbe
xchg
bound
jo
push
shr
xchg
mov
pop
mov
jg
fcomp
inc
add
lock
xchg
mov
sub
pop
pop
setbe
stos
lock
cmp
xchg
mov
stc
adc
or
andb
mov
nop
ret
in
ljmp
mov
orb
in
add
push
fsubl
push
sub
xchg
test
xchg
in
sbb
or
cmp
nop
loope
push
adc
loop
dec
jbe
mov
push
rclb
mov
add
sub
fsts
popf
push
testb
sub
cmpsb
pusha
push
nop
jle
dec
add
sub
sub
out
or
js
cs
fs
cmp
fsts
push
xor
ror
movsl
xchg
test
in
push
out
or
in
lahf
std
andb
pusha
loope
pop
das
mov
and
push
dec
ficomps
push
js
or
data16
cmp
mov
stos
push
shr
jb
push
ljmp
cmc
mov
or
sbb
xchg
fidivrs
or
xchg
bound
and
aam
cltd
in
adc
xor
add
cltd
inc
lods
cmpb
enter
mov
shl
movsl
adc
cmc
into
add
mov
jge
xchg
ds
repz
add
push
call
test
rcll
xchg
jecxz
mov
mov
inc
daa
cmp
shrl
pop
add
mov
pop
aad
in
lahf
push
fisubrs
pop
out
insb
mov
cmp
in
xchg
sbb
les
outsb
or
cli
push
sbb
aam
sub
dec
hlt
cmp
push
fsts
test
mov
mov
dec
scas
jg
in
mov
ja
and
out
pop
push
test
mov
dec
push
imul
push
std
push
adc
testb
push
pop
icebp
jbe
dec
and
cmp
sub
cmc
ljmp
loop
pop
shll
mul
push
std
test
insl
dec
adc
cmp
fdivs
pop
or
push
sbb
push
add
push
test
jb
jae
inc
fstpt
adc
push
cmp
arpl
mov
stc
ret
test
inc
jl
shr
lret
subl
movsb
daa
ja
ret
lods
lcall
push
lret
add
cmc
mov
fistps
mov
outsl
dec
pop
sbb
inc
lret
sub
shl
jle
es
ror
fsub
stmxcsr
lock
cmpsl
mov
mov
fcompl
xchg
out
xor
js
lods
lret
mov
or
mov
push
out
or
xchg
shlb
sbb
add
and
add
add
fistpll
add
add
add
adc
add
mov
xor
xor
add
loopne
add
add
mov
nop
xor
xor
