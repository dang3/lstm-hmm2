push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
in
fwait
pop
inc
inc
xlat
cli
jne
adc
or
test
mov
in
push
dec
mul
js
push
stos
lahf
ffree
mov
shr
enter
xor
add
not
fldenv
jns
sti
and
mov
xor
fs
xchg
pushf
out
sbbb
je
or
adc
icebp
pop
xlat
clc
jecxz
ljmp
adc
rcrb
filds
push
inc
push
add
or
out
or
out
mov
mov
xor
mov
push
sub
inc
in
or
cld
or
add
or
dec
cmpsb
cli
add
pop
xchg
arpl
int
sbb
test
or
sbb
or
pop
jmp
ss
gs
jl
lock
fadds
mov
push
cmpsl
jge
lock
mov
lods
jb
jg
and
popf
adc
push
in
andb
cmp
lds
cld
xchg
or
insl
push
jecxz
sbb
mov
scas
fldcw
in
add
mov
xor
pextrw
sbb
sub
das
push
mov
cltd
mov
imul
leave
or
mov
cli
ss
mov
or
inc
or
push
cmpsb
add
mov
pop
sbb
fs
popl
ret
inc
cmp
mov
out
icebp
icebp
jmp
and
int
pop
xor
imul
scas
add
add
outsl
inc
pop
cli
and
xchg
stos
movsb
addb
gs
sahf
dec
out
mov
inc
pop
pop
call
sbb
outsl
je
test
sub
sub
loopew
sbb
mov
movb
fsubl
movsb
xchg
push
and
movsb
dec
xchg
mov
cmp
push
jg
mov
add
imul
mov
loopne
lods
stos
test
pop
or
push
sub
out
mov
test
adc
inc
xchg
xor
js
out
fdivr
ds
add
jnp
mov
lcall
mov
mov
shl
sub
sbb
int3
scas
imul
inc
pop
add
mov
sub
out
repz
fsubrl
add
rcll
dec
add
add
in
rolb
jno
mov
and
push
vpminub
outsb
push
clc
mov
xchg
adc
das
aad
leave
xchg
iret
and
jnp
inc
je
sub
cmp
xchg
cmp
push
sahf
cli
ret
sbb
pop
jmp
stos
xor
add
aaa
mov
jle
std
fidivl
dec
inc
xlat
push
pushf
into
jmp
mov
leave
add
dec
insl
lahf
mov
cmpsb
mov
pop
add
mov
mov
jb
int
shrb
leave
add
aaa
xchg
xor
mov
pushf
mov
in
mov
dec
inc
xchg
movsb
adc
notl
xor
xor
std
mov
sbb
jo
mov
aam
sbb
adc
add
ficompl
add
add
into
fstpl
cld
rcll
ds
ds
std
dec
jo
cli
mov
mov
test
xor
int
test
popa
movsl
mov
cld
mov
shrb
sbb
lea
mov
int
jmp
xor
mov
lea
sbb
jmp
dec
adc
lds
outsl
push
jecxz
xchg
cmp
jle
add
lret
mov
add
or
adc
hlt
cmp
jle
and
andb
mov
cld
pop
aaa
fadd
jne
shrl
loop
or
insl
push
pushf
subb
adc
mov
clc
xchg
insl
jl
jle
mov
data16
xlat
sub
mov
mov
and
icebp
inc
push
mov
sti
int
adc
xchg
mov
push
hlt
cli
inc
les
mov
shrl
stos
lods
adc
add
jle
clc
xchg
jge
cmp
xor
add
mov
pop
sub
cmpsb
jns
ljmp
lcall
lahf
clc
push
sbb
mov
loopne
and
dec
adc
xchg
sbbl
pop
lock
fbstp
leave
fists
xor
outsl
add
fsubp
clc
ds
mov
jne
iret
inc
lea
loop
loope
mov
imul
data16
add
or
fs
xor
iret
orb
rcrl
xchg
pop
cmp
imul
imul
nop
fs
inc
push
or
aas
sbb
mov
mov
ja
lods
jbe
pop
sbb
add
adc
in
stos
inc
xchg
addl
jne
mov
ficompl
mov
xchg
fs
ret
add
ljmp
and
or
push
daa
pop
data16
popf
cmp
pop
ficomps
aad
scas
lret
pop
scas
ret
push
xlat
sarl
flds
jo
cmpsb
and
adc
das
cmp
mov
push
lret
push
dec
sub
lods
inc
cmp
mov
arpl
push
scas
js
inc
lods
cmp
mov
xchg
filds
push
jl
mov
repz
dec
inc
movsb
pop
hlt
xchg
negl
sub
scas
test
enter
add
scas
leave
pop
ficompl
push
push
incb
mov
popf
popf
sub
lock
xor
imulb
movsb
cmp
push
shlb
fdivr
in
mov
popa
out
shr
sbb
fnstenv
cmp
sbb
jmp
xchg
pushf
int
pop
testb
jb
lcall
push
shl
inc
mov
jns
inc
mov
add
add
andl
bound
lods
push
imul
xchg
mov
hlt
push
call
jae
imul
push
aad
and
popa
in
jb
icebp
push
pop
add
fwait
daa
cmp
mov
xchg
loope
mov
mov
int
add
repz
outsb
addl
pop
sbb
in
sub
mov
sarb
shll
fsubrs
rcrl
cmp
rorl
nop
mov
sahf
jp
mov
daa
insl
rclb
gs
jns
sub
or
xor
aad
cmpsb
divb
leave
ljmp
rorb
adc
inc
subl
inc
and
jo
or
pop
daa
insl
call
add
add
loope
ficoml
outsl
xor
dec
mov
add
jae
test
mov
mov
lret
xchg
in
or
das
das
lahf
jb
int3
cmp
movzwl
stos
icebp
ja
dec
je
shr
les
cli
mulb
nop
mov
imul
ret
les
fcomps
lahf
outsb
add
fsubrs
mov
pop
cli
cmp
sub
lock
je
pop
mov
loopne
fwait
jo
hlt
fcmovne
inc
mov
aas
icebp
inc
in
mov
jo
aam
push
mov
push
inc
mov
iret
jp
loope
lds
xor
pop
mov
sub
mov
xchg
inc
sub
movsb
pop
mov
or
mov
adc
jb
es
push
aas
out
sti
jle
mov
fistpll
daa
movsl
or
and
ficoms
dec
cltd
clc
pushfw
lea
jae
mov
bnd
jae
lahf
mov
daa
imulb
cmpl
dec
shll
shlb
pop
dec
inc
jecxz
out
push
dec
jno
popf
or
pushf
out
jp
lahf
xchg
add
test
loope
leave
fwait
sub
and
adc
adc
popa
ret
scas
jne
cmp
fdivp
subl
and
cmc
pop
addr16
adc
cwtl
xlat
mov
lcall
pop
ljmp
push
and
pop
dec
mov
pop
jno
or
aaa
scas
ss
adc
xchg
pop
call
mov
ret
or
sub
enter
arpl
cli
leave
jb
add
roll
jb
in
leave
or
push
in
cmp
pop
sti
jbe
repnz
loope
or
inc
inc
outsl
pop
mov
jb
inc
fsubrl
daa
mov
and
dec
mov
es
sahf
movsb
adc
aas
test
push
xor
stos
dec
jnp
sahf
push
adc
xchg
shrl
mov
xchg
xchg
sub
add
gs
insb
cs
loope
aas
insb
fidivrs
jge
ret
pushf
inc
jne
sbb
ficoms
aaa
mov
xor
xor
in
loopne
push
push
and
loopne
test
add
stos
push
dec
fistpll
fsubl
mov
addr16
pop
fcomps
xchg
fidivl
out
push
int3
inc
stos
repnz
mov
or
mov
dec
leave
test
adc
cmp
int3
xor
cltd
dec
sbb
test
sbb
leave
fdivrs
push
push
int3
cmp
push
mov
mov
pop
inc
repz
je
mov
mov
call
cli
rcl
int3
push
addr16
test
in
adc
adc
sbb
rolb
int
pop
jge
stos
jnp
imul
in
fistps
out
leave
pop
jnp
test
iret
outsl
out
dec
cmc
push
imul
mov
add
add
add
cmp
fidivs
sti
aas
int3
xor
icebp
xchg
out
sti
xor
ss
push
mov
and
xchg
mov
loopne
cmp
push
rorl
add
dec
mov
push
addb
jg
flds
fcmovnu
js
sub
pop
stos
add
inc
push
std
push
outsl
movlps
cli
adc
icebp
insl
aas
mov
ret
cmc
dec
pcmpgtb
add
xlat
fiadds
dec
clc
cmpl
push
rcll
fdivs
call
push
adc
shll
xor
or
dec
ficompl
imul
pop
iret
hlt
xor
lcall
inc
aad
or
pop
ja
jo
aad
pop
sub
repnz
xchg
and
addb
push
leave
sti
sahf
std
fs
mov
mov
mov
lret
incb
add
push
out
dec
jle
in
ljmp
mov
or
sbb
and
xchg
rol
testb
push
push
push
push
inc
pop
xchg
jo
push
xchg
outsb
lock
test
std
sub
dec
sub
out
push
add
sub
popf
or
repnz
or
pop
inc
inc
daa
call
clc
cmpsb
push
mov
jg
imul
aas
repnz
test
pop
pop
mov
fsts
mov
fdivs
and
outsb
pusha
jle
dec
or
mov
lea
lret
in
push
sbb
xorl
hlt
ror
sahf
test
movsb
lea
arpl
loopne
or
jne
mov
aas
inc
or
sub
jne
call
mov
xchg
adc
leave
jns
in
call
mov
mov
aam
xor
dec
adc
popf
loope
cmp
xor
xlat
scas
icebp
and
ljmp
sub
lea
paddd
inc
xchg
leave
cmp
add
push
repz
addb
inc
aaa
stos
notb
push
xchg
add
out
aad
leave
cs
inc
dec
inc
jbe
sbb
or
jg
jo
cmp
mov
sub
arpl
dec
xchg
imul
popa
aad
jno
addb
aad
inc
scas
xchg
mov
cmp
push
ds
jne
aaa
insb
xchg
adc
add
push
sub
pop
xchg
stos
loopne
bound
mov
cmpl
aas
sbb
cmp
pushl
loope
pop
mov
das
mov
int
pop
fs
mov
mov
rcrb
sbb
mov
cmpsb
out
imul
es
xchg
dec
clc
lret
popa
ret
xorb
data16
sub
mov
jae
bound
enter
push
or
aaa
adc
dec
mov
out
xchg
lock
enter
add
pop
cmp
dec
fists
cld
bound
xchg
mov
mov
pop
lcall
nop
outsl
ss
daa
sub
xor
xchg
adc
xlat
test
pop
xchg
sub
sti
outsl
jne
mov
jae
pusha
xor
ds
mov
iret
sub
add
movl
and
daa
insl
stc
fs
roll
fistpl
stos
mov
lock
jl
jg
xchg
addb
and
daa
xchg
ret
cli
ret
push
mov
rorl
pusha
fldl
adc
insb
orl
cmp
popa
cmpsb
in
push
push
inc
fsubrs
xchg
mov
lock
cltd
cwtl
sbb
mov
or
aam
pop
mov
add
loopne
dec
or
adc
xchg
jnp
fwait
jmp
adc
lret
pop
outsb
outsl
xchg
or
cli
pop
mov
pop
sub
ljmp
cmp
popl
daa
fidivrs
testb
div
imul
test
cmp
push
je
dec
frstor
mov
outsb
mov
icebp
pop
add
mov
outsl
in
or
jae
and
repnz
loope
aad
jge
sub
add
pop
mov
push
dec
pop
add
xchg
fistps
and
aam
ja
dec
pop
in
push
shl
push
test
jbe
fbld
clc
scas
jecxz
sti
mov
jp
stc
push
xchg
notb
rorb
lret
addr16
add
fisttpll
test
mov
inc
int
les
jle
rol
or
fsts
push
ret
std
iret
add
add
jmp
push
mov
mov
mov
xlat
add
xor
icebp
sbb
sbb
in
rcll
in
mov
pop
cmp
adc
rclb
pop
xor
or
in
pop
int3
jbe
xchg
xchg
jge
add
cmp
rolb
frstor
mov
ja
dec
xor
add
push
add
stos
lretw
sti
sub
mov
fidivl
cli
sbb
adc
pop
fcmovnu
sbb
cld
rclb
mov
lods
mov
or
and
cmpsb
mov
sbb
pusha
push
enter
gs
jno
sbb
arpl
ss
push
call
repz
xchg
mov
add
or
in
out
shlb
sbb
je
sbb
dec
outsl
adc
mov
sub
lods
stos
push
jmp
push
les
cmp
test
mov
dec
sarb
imul
test
iret
xorl
insl
aas
dec
or
mov
out
sbb
and
xchg
jnp
xchg
lea
push
lods
add
add
ficompl
outsb
dec
push
and
xchg
loop
add
add
pop
sbb
mov
or
jmp
and
adc
push
pop
in
cmpsl
pop
inc
pop
jp
js
and
dec
cli
add
or
clc
mov
test
mov
pop
mov
mov
xchg
cmpsb
sub
scas
icebp
sub
xchg
add
and
mov
jp
mov
adcb
pop
rolb
add
lret
push
icebp
lcall
jbe
pop
jo,pn
into
leave
outsb
add
fisubl
xchg
dec
jge
dec
add
or
ror
pop
fsubrl
mov
mov
mov
push
push
cs
cmp
sbb
adc
movsl
cltd
pusha
xchg
lock
mov
imul
fisttpl
movsl
jnp
nop
xlat
lret
xchg
mov
movsl
jle
out
aaa
xchg
je
mov
adc
cltd
shrl
add
pop
rolb
lea
and
cld
pop
sbb
cmp
add
cmpsb
push
int
js
jb
mov
mov
mov
sahf
leave
aas
jmp
adc
sbb
cmpsb
xchg
stos
nop
stos
jmp
lcall
pop
push
adc
xlat
and
sbb
faddl
cmpsl
aam
movsb
es
dec
xchg
outsl
ss
movsb
or
fdivr
lcall
icebp
aam
sbb
push
dec
push
adc
sbb
jge
and
dec
xchg
mov
nop
adc
push
inc
cmp
inc
jge
lret
push
sub
lds
mov
clc
lds
popa
sahf
mov
dec
mov
lods
call
shll
into
add
mov
push
shll
or
push
in
shlb
dec
fsubrs
inc
idiv
xchg
test
push
movsl
jb
pop
ret
jne
es
fisubrs
pusha
clc
pop
clc
in
mov
bound
into
sub
out
push
cmp
dec
sub
mov
std
stc
arpl
mov
popf
daa
mov
mov
daa
loopne
sahf
jbe
pcmpgtw
shll
insb
jecxz
fwait
call
and
cltd
mov
cmpsb
mov
xor
add
movl
pop
ret
popf
xor
insl
imul
pop
mov
push
jle
sbb
and
mov
sub
jno
nop
hlt
xor
xchg
sahf
inc
and
pop
arpl
outsb
or
dec
aad
mov
inc
dec
loope
aaa
loope
outsl
cs
sti
repnz
dec
xchg
test
jmp
stc
imull
inc
int
cmpsl
idivb
mov
pop
js
add
fidivrs
arpl
jnp
inc
mov
or
sbb
iret
and
xchg
mov
pop
xor
jge
adc
repz
lret
movsb
popf
daa
lock
jo
insb
jecxz
in
lods
and
stc
mov
ss
xor
or
and
sub
aam
cwtl
jl
or
cmc
aaa
outsl
cltd
test
cltd
jnp
pop
insb
add
out
fwait
dec
xchg
dec
test
pop
jge
mov
pop
sahf
in
aam
ja
cmp
jbe
ret
mov
mov
jb
pushf
movsl
lods
xchg
jo
stos
push
clc
aam
jmp
mov
ror
sub
sub
inc
sbbb
add
fucomip
add
mov
inc
mov
xchg
or
leave
adc
sub
lea
push
in
add
jg
mov
mov
cmp
lds
jecxz
scas
jae
movsb
xor
scas
inc
mov
mov
jmp
es
sub
adc
lahf
push
test
stos
inc
loopne
imul
xchg
xchg
jno
popf
cmc
leave
es
popl
test
cmp
add
enter
lret
fmuls
or
add
and
xchg
outsb
ja
sub
cmpsl
adc
std
mov
sbb
push
cmp
dec
mov
test
stos
popa
push
jge
pop
adc
sub
mov
stos
or
hlt
sarl
andl
push
popa
jbe
dec
mov
icebp
push
mov
sub
push
and
sbb
shlb
outsb
push
push
push
push
popa
jl
lcall
add
lea
mov
sbbl
lods
enter
xchg
repz
sub
mov
and
rorl
pop
nopl
pop
adc
aam
pop
jbe
sub
aad
xchg
aaa
je
scas
in
xchg
repz
pop
ffreep
into
repnz
dec
movb
mov
mov
xor
insb
daa
mov
shlb
xchg
jb
imul
and
add
add
sti
in
sbb
push
lock
aad
sbbb
jg
aad
fcompp
stc
push
or
add
in
ficoml
or
cmp
in
in
pop
xchg
sub
mov
sbb
pop
inc
mov
daa
xchg
jecxz,pn
inc
sbb
xchg
vpshaq
or
xor
add
inc
es
mov
ss
sbb
in
jns
int
pusha
aas
mov
mov
sub
dec
or
hlt
aam
add
pop
xchg
pop
inc
push
add
dec
divl
lcall
pop
fnstsw
loopne
or
sbb
ret
mov
ret
mov
inc
subl
enter
pusha
ja
in
push
outsb
jg
mov
fnstenv
loope
stos
push
cmp
fs
adc
ja
hlt
roll
test
fninit
cld
rcrb
addr16
pop
scas
mov
ljmp
iret
sub
xor
xchg
cmp
fidivl
pop
in
mov
push
shll
sti
add
ds
fists
fcmovu
cmp
adc
xor
pop
leave
pop
mov
xor
pusha
fstpl
jns
jg
sub
es
xchg
push
push
leave
sbb
scas
or
xchg
popa
add
rolb
test
adc
push
cmpsl
icebp
imul
xchg
inc
mov
js
movsb
iret
cmp
jbe
je
aaa
lret
dec
stc
clc
add
jnp
sbb
nop
data16
mov
lods
rcr
xchg
notl
pop
sarl
push
adc
pop
clc
fs
inc
lret
jmp
lcall
dec
pop
shlb
push
dec
data16
mov
test
ficomps
bound
xlat
dec
add
fildl
pop
sub
mov
sub
dec
add
dec
in
dec
xor
fadds
stc
pause
fs
cmp
xchg
xor
pop
out
out
dec
mov
jo
sub
pusha
andl
cld
js
mov
loopne
popl
jp
orb
enter
leave
xor
lfs
lods
movsb
lret
insl
ds
js
mul
jnp
push
sub
xor
mov
adc
jb
xor
addb
fmul
lret
mov
sub
aaa
mov
mov
xchg
mov
imul
repnz
pushf
aaa
inc
dec
scas
sub
addr16
test
jmp
cmp
fwait
pop
fwait
and
shlb
dec
or
lcall
push
jmp
xor
dec
dec
mov
mov
jl
aaa
dec
jnp
lock
loopne
cmp
pop
scas
test
adc
fs
xor
adc
mov
ss
xchg
outsb
mov
dec
sub
leave
sbb
insl
adc
in
mov
arpl
mov
jb
inc
pop
mov
pop
popa
gs
mov
xor
and
dec
repnz
es
xor
sbb
rorb
jge
sbb
mov
cmc
pop
lods
or
pushf
inc
adc
outsb
or
add
xor
mov
sbb
mov
mov
nop
cmp
push
insl
xor
dec
iret
in
iret
aam
and
mov
adc
mov
gs
test
js
addb
jnp
mov
popa
xorl
mov
mov
sbb
mov
lcall
and
adc
add
fnstenv
sub
sub
push
daa
push
hlt
mov
outsb
jbe
add
cltd
in
test
ja
mov
push
lock
insb
ljmp
mov
fdiv
fcomi
bound
cwtl
repnz
pop
xchg
push
sbb
xchg
icebp
repnz
or
mov
scas
adc
inc
andl
jo
xor
or
cltd
out
js
push
sarl
xor
add
push
pop
fstps
outsl
fistl
push
adc
xor
shlb
xor
dec
sbb
jecxz
insl
in
outsb
adc
adc
lock
adc
dec
stc
out
repnz
popf
xchg
test
or
xor
mov
mov
dec
mov
frstor
stc
pop
and
xchg
pop
mov
sub
icebp
mov
iret
sub
lret
add
sti
add
pop
int
fdivr
jmp
gs
xor
add
add
imul
and
andl
or
or
dec
fiaddl
pop
pop
jl
sub
push
sbb
mov
push
push
xor
push
fnstsw
ds
add
in
test
outsb
es
fldcw
add
sub
adc
mov
or
dec
xlat
inc
mov
jle
sbb
movsl
ret
mov
in
push
fxch
mov
pop
aam
adc
pop
jo
mov
add
push
adcl
fs
xchg
xor
cmpb
sbb
js
shl
mov
fildll
inc
incb
popa
inc
jmp
or
inc
pop
cmp
fcomps
shlb
scas
inc
xchg
push
lcall
mov
mov
call
outsl
or
xor
in
ljmp
pop
fildl
mov
and
add
or
xchg
inc
leave
rcr
movsb
mov
cmp
pop
lcall
dec
iret
data16
mov
inc
adc
jne
insl
and
jl
sub
stc
cmp
adc
lahf
imul
scas
out
imulb
sti
ficoml
and
jge
ljmp
fildll
fdivl
cmpsl
pop
or
add
jns
repz
shll
pushf
xlat
xchg
mov
pop
ret
cwtl
xor
xor
cmp
push
fadd
mov
xchg
in
lret
adc
mov
cmp
jge
inc
shlb
jbe
ja
aam
sbb
cli
adc
and
stos
and
sbb
jmp
adc
fcmovbe
add
add
add
mov
es
ljmp
pop
sahf
dec
vpsrad
imul
ds
or
push
mov
into
mov
jg
stos
cmp
jns
push
fisubl
sbb
jmp
scas
repnz
add
mov
popf
frstor
iret
sti
xorl
mov
sbb
rcl
or
mov
shlb
sbb
and
add
push
sahf
push
jae
lret
adc
and
xchg
pop
or
push
sub
add
sbbl
jle
inc
movsl
xor
faddl
mov
jg
dec
inc
and
dec
add
idiv
inc
aam
imul
add
push
enter
inc
jl
rorl
aam
sub
push
rorl
loopne
call
cs
inc
add
sub
add
add
cltd
insb
push
cmp
add
adc
aam
jle
shl
dec
or
push
fsts
scas
mov
cmpsl
sbb
xor
mov
stos
xchg
xor
and
or
loop
push
outsl
mov
mov
jmp
fcomps
mov
pop
push
push
xor
adc
xor
lds
mov
pushf
pop
sbb
pop
push
sub
add
add
and
pop
xor
rorb
add
mov
mov
enter
cmp
pop
jae
push
pop
xchg
lcall
pop
mov
xchg
loope
lds
data16
jecxz
clc
sbb
hlt
xorb
inc
fs
test
jne
add
jle
sbb
mov
cwtl
stos
lea
lods
sbb
fstp
mov
push
in
sbb
les
add
sub
aam
pop
sub
fst
cmpsb
aaa
adc
mov
mov
push
in
push
orl
adc
push
lret
xlat
jb
das
repnz
jg
dec
dec
push
dec
push
test
andl
or
data16
imul
fistl
rcl
xlat
loopne
stc
add
incl
mov
mov
inc
call
cmc
inc
lds
imul
dec
add
add
js
adcb
inc
inc
jp
xchg
insb
jg
inc
jnp
mov
orl
dec
inc
push
repz
sbb
xchg
rcrw
mov
stos
push
pop
in
repz
mov
sarl
fwait
outsb
sti
jecxz
jae
jmp
mov
fistl
pop
mov
add
mov
inc
nop
or
hlt
push
or
cmp
jne
adc
add
add
mov
mov
mov
popa
mov
adc
add
rcrb
sbb
sub
xor
addr16
sub
aam
or
movsb
dec
pop
push
pop
push
or
les
jge
ja
mov
popf
lock
popf
xor
xchg
add
and
mov
add
mov
cmp
push
pop
mov
